
centos-preinstalled/readelf:     file format elf32-littlearm


Disassembly of section .init:

000110b4 <.init>:
   110b4:	push	{r3, lr}
   110b8:	bl	120ec <__assert_fail@plt+0xce8>
   110bc:	pop	{r3, pc}

Disassembly of section .plt:

000110c0 <calloc@plt-0x14>:
   110c0:	push	{lr}		; (str lr, [sp, #-4]!)
   110c4:	ldr	lr, [pc, #4]	; 110d0 <calloc@plt-0x4>
   110c8:	add	lr, pc, lr
   110cc:	ldr	pc, [lr, #8]!
   110d0:	andeq	r1, r8, r0, lsr pc

000110d4 <calloc@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #528384	; 0x81000
   110dc:	ldr	pc, [ip, #3888]!	; 0xf30

000110e0 <raise@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #528384	; 0x81000
   110e8:	ldr	pc, [ip, #3880]!	; 0xf28

000110ec <__strncat_chk@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #528384	; 0x81000
   110f4:	ldr	pc, [ip, #3872]!	; 0xf20

000110f8 <strcmp@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #528384	; 0x81000
   11100:	ldr	pc, [ip, #3864]!	; 0xf18

00011104 <fflush@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #528384	; 0x81000
   1110c:	ldr	pc, [ip, #3856]!	; 0xf10

00011110 <memmove@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #528384	; 0x81000
   11118:	ldr	pc, [ip, #3848]!	; 0xf08

0001111c <free@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #528384	; 0x81000
   11124:	ldr	pc, [ip, #3840]!	; 0xf00

00011128 <ferror@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #528384	; 0x81000
   11130:	ldr	pc, [ip, #3832]!	; 0xef8

00011134 <memcpy@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #528384	; 0x81000
   1113c:	ldr	pc, [ip, #3824]!	; 0xef0

00011140 <_IO_getc@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #528384	; 0x81000
   11148:	ldr	pc, [ip, #3816]!	; 0xee8

0001114c <ftell@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #528384	; 0x81000
   11154:	ldr	pc, [ip, #3808]!	; 0xee0

00011158 <memcmp@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #528384	; 0x81000
   11160:	ldr	pc, [ip, #3800]!	; 0xed8

00011164 <stpcpy@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #528384	; 0x81000
   1116c:	ldr	pc, [ip, #3792]!	; 0xed0

00011170 <dcgettext@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #528384	; 0x81000
   11178:	ldr	pc, [ip, #3784]!	; 0xec8

0001117c <__stack_chk_fail@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #528384	; 0x81000
   11184:	ldr	pc, [ip, #3776]!	; 0xec0

00011188 <rewind@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #528384	; 0x81000
   11190:	ldr	pc, [ip, #3768]!	; 0xeb8

00011194 <realloc@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #528384	; 0x81000
   1119c:	ldr	pc, [ip, #3760]!	; 0xeb0

000111a0 <textdomain@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #528384	; 0x81000
   111a8:	ldr	pc, [ip, #3752]!	; 0xea8

000111ac <_IO_putc@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #528384	; 0x81000
   111b4:	ldr	pc, [ip, #3744]!	; 0xea0

000111b8 <fwrite@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #528384	; 0x81000
   111c0:	ldr	pc, [ip, #3736]!	; 0xe98

000111c4 <__stpcpy_chk@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #528384	; 0x81000
   111cc:	ldr	pc, [ip, #3728]!	; 0xe90

000111d0 <__ctype_get_mb_cur_max@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #528384	; 0x81000
   111d8:	ldr	pc, [ip, #3720]!	; 0xe88

000111dc <strcpy@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #528384	; 0x81000
   111e4:	ldr	pc, [ip, #3712]!	; 0xe80

000111e8 <__strcpy_chk@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #528384	; 0x81000
   111f0:	ldr	pc, [ip, #3704]!	; 0xe78

000111f4 <fread@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #528384	; 0x81000
   111fc:	ldr	pc, [ip, #3696]!	; 0xe70

00011200 <mbrtowc@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #528384	; 0x81000
   11208:	ldr	pc, [ip, #3688]!	; 0xe68

0001120c <__gnu_Unwind_Find_exidx@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #528384	; 0x81000
   11214:	ldr	pc, [ip, #3680]!	; 0xe60

00011218 <puts@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #528384	; 0x81000
   11220:	ldr	pc, [ip, #3672]!	; 0xe58

00011224 <malloc@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #528384	; 0x81000
   1122c:	ldr	pc, [ip, #3664]!	; 0xe50

00011230 <__cxa_begin_cleanup@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #528384	; 0x81000
   11238:	ldr	pc, [ip, #3656]!	; 0xe48

0001123c <__libc_start_main@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #528384	; 0x81000
   11244:	ldr	pc, [ip, #3648]!	; 0xe40

00011248 <strerror@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #528384	; 0x81000
   11250:	ldr	pc, [ip, #3640]!	; 0xe38

00011254 <__vfprintf_chk@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #528384	; 0x81000
   1125c:	ldr	pc, [ip, #3632]!	; 0xe30

00011260 <__gmon_start__@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #528384	; 0x81000
   11268:	ldr	pc, [ip, #3624]!	; 0xe28

0001126c <getopt_long@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #528384	; 0x81000
   11274:	ldr	pc, [ip, #3616]!	; 0xe20

00011278 <exit@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #528384	; 0x81000
   11280:	ldr	pc, [ip, #3608]!	; 0xe18

00011284 <__cxa_type_match@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #528384	; 0x81000
   1128c:	ldr	pc, [ip, #3600]!	; 0xe10

00011290 <strtoul@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #528384	; 0x81000
   11298:	ldr	pc, [ip, #3592]!	; 0xe08

0001129c <strlen@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #528384	; 0x81000
   112a4:	ldr	pc, [ip, #3584]!	; 0xe00

000112a8 <strchr@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #528384	; 0x81000
   112b0:	ldr	pc, [ip, #3576]!	; 0xdf8

000112b4 <__errno_location@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #528384	; 0x81000
   112bc:	ldr	pc, [ip, #3568]!	; 0xdf0

000112c0 <__strcat_chk@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #528384	; 0x81000
   112c8:	ldr	pc, [ip, #3560]!	; 0xde8

000112cc <__sprintf_chk@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #528384	; 0x81000
   112d4:	ldr	pc, [ip, #3552]!	; 0xde0

000112d8 <snprintf@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #528384	; 0x81000
   112e0:	ldr	pc, [ip, #3544]!	; 0xdd8

000112e4 <__strdup@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #528384	; 0x81000
   112ec:	ldr	pc, [ip, #3536]!	; 0xdd0

000112f0 <memset@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #528384	; 0x81000
   112f8:	ldr	pc, [ip, #3528]!	; 0xdc8

000112fc <putchar@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #528384	; 0x81000
   11304:	ldr	pc, [ip, #3520]!	; 0xdc0

00011308 <strncpy@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #528384	; 0x81000
   11310:	ldr	pc, [ip, #3512]!	; 0xdb8

00011314 <fscanf@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #528384	; 0x81000
   1131c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011320 <gmtime@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #528384	; 0x81000
   11328:	ldr	pc, [ip, #3496]!	; 0xda8

0001132c <__printf_chk@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #528384	; 0x81000
   11334:	ldr	pc, [ip, #3488]!	; 0xda0

00011338 <__fprintf_chk@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #528384	; 0x81000
   11340:	ldr	pc, [ip, #3480]!	; 0xd98

00011344 <fclose@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #528384	; 0x81000
   1134c:	ldr	pc, [ip, #3472]!	; 0xd90

00011350 <strnlen@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #528384	; 0x81000
   11358:	ldr	pc, [ip, #3464]!	; 0xd88

0001135c <__fread_chk@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #528384	; 0x81000
   11364:	ldr	pc, [ip, #3456]!	; 0xd80

00011368 <setlocale@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #528384	; 0x81000
   11370:	ldr	pc, [ip, #3448]!	; 0xd78

00011374 <strrchr@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #528384	; 0x81000
   1137c:	ldr	pc, [ip, #3440]!	; 0xd70

00011380 <fputc@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #528384	; 0x81000
   11388:	ldr	pc, [ip, #3432]!	; 0xd68

0001138c <fopen64@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #528384	; 0x81000
   11394:	ldr	pc, [ip, #3424]!	; 0xd60

00011398 <qsort@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #528384	; 0x81000
   113a0:	ldr	pc, [ip, #3416]!	; 0xd58

000113a4 <sbrk@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #528384	; 0x81000
   113ac:	ldr	pc, [ip, #3408]!	; 0xd50

000113b0 <bindtextdomain@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #528384	; 0x81000
   113b8:	ldr	pc, [ip, #3400]!	; 0xd48

000113bc <fseek@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #528384	; 0x81000
   113c4:	ldr	pc, [ip, #3392]!	; 0xd40

000113c8 <__xstat64@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #528384	; 0x81000
   113d0:	ldr	pc, [ip, #3384]!	; 0xd38

000113d4 <fputs@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #528384	; 0x81000
   113dc:	ldr	pc, [ip, #3376]!	; 0xd30

000113e0 <strncmp@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #528384	; 0x81000
   113e8:	ldr	pc, [ip, #3368]!	; 0xd28

000113ec <abort@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #528384	; 0x81000
   113f4:	ldr	pc, [ip, #3360]!	; 0xd20

000113f8 <__snprintf_chk@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #528384	; 0x81000
   11400:	ldr	pc, [ip, #3352]!	; 0xd18

00011404 <__assert_fail@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #528384	; 0x81000
   1140c:	ldr	pc, [ip, #3344]!	; 0xd10

Disassembly of section .text:

00011410 <error@@Base-0x39ea0>:
   11410:	mov	r3, #25
   11414:	movt	r3, #24576	; 0x6000
   11418:	cmp	r0, r3
   1141c:	beq	11630 <__assert_fail@plt+0x22c>
   11420:	bhi	114e4 <__assert_fail@plt+0xe0>
   11424:	mov	r3, #18
   11428:	movt	r3, #24576	; 0x6000
   1142c:	cmp	r0, r3
   11430:	beq	115f4 <__assert_fail@plt+0x1f0>
   11434:	bhi	11484 <__assert_fail@plt+0x80>
   11438:	cmp	r0, #1610612751	; 0x6000000f
   1143c:	beq	115dc <__assert_fail@plt+0x1d8>
   11440:	bhi	11458 <__assert_fail@plt+0x54>
   11444:	cmp	r0, #1610612749	; 0x6000000d
   11448:	beq	115d0 <__assert_fail@plt+0x1cc>
   1144c:	cmp	r0, #1610612750	; 0x6000000e
   11450:	beq	116b0 <__assert_fail@plt+0x2ac>
   11454:	b	116a8 <__assert_fail@plt+0x2a4>
   11458:	mov	r3, #16
   1145c:	movt	r3, #24576	; 0x6000
   11460:	cmp	r0, r3
   11464:	beq	115e8 <__assert_fail@plt+0x1e4>
   11468:	mov	r3, #17
   1146c:	movt	r3, #24576	; 0x6000
   11470:	cmp	r0, r3
   11474:	bne	116a8 <__assert_fail@plt+0x2a4>
   11478:	movw	r0, #50300	; 0xc47c
   1147c:	movt	r0, #5
   11480:	bx	lr
   11484:	mov	r3, #21
   11488:	movt	r3, #24576	; 0x6000
   1148c:	cmp	r0, r3
   11490:	beq	1160c <__assert_fail@plt+0x208>
   11494:	bhi	114c4 <__assert_fail@plt+0xc0>
   11498:	mov	r3, #19
   1149c:	movt	r3, #24576	; 0x6000
   114a0:	cmp	r0, r3
   114a4:	beq	11600 <__assert_fail@plt+0x1fc>
   114a8:	mov	r3, #20
   114ac:	movt	r3, #24576	; 0x6000
   114b0:	cmp	r0, r3
   114b4:	bne	116a8 <__assert_fail@plt+0x2a4>
   114b8:	movw	r0, #50340	; 0xc4a4
   114bc:	movt	r0, #5
   114c0:	bx	lr
   114c4:	mov	r3, #23
   114c8:	movt	r3, #24576	; 0x6000
   114cc:	cmp	r0, r3
   114d0:	beq	11618 <__assert_fail@plt+0x214>
   114d4:	bhi	11624 <__assert_fail@plt+0x220>
   114d8:	movw	r0, #50372	; 0xc4c4
   114dc:	movt	r0, #5
   114e0:	bx	lr
   114e4:	mov	r3, #37	; 0x25
   114e8:	movt	r3, #24576	; 0x6000
   114ec:	cmp	r0, r3
   114f0:	beq	1166c <__assert_fail@plt+0x268>
   114f4:	bhi	11574 <__assert_fail@plt+0x170>
   114f8:	mov	r3, #29
   114fc:	movt	r3, #24576	; 0x6000
   11500:	cmp	r0, r3
   11504:	beq	11648 <__assert_fail@plt+0x244>
   11508:	bhi	11538 <__assert_fail@plt+0x134>
   1150c:	mov	r3, #26
   11510:	movt	r3, #24576	; 0x6000
   11514:	cmp	r0, r3
   11518:	beq	1163c <__assert_fail@plt+0x238>
   1151c:	mov	r3, #27
   11520:	movt	r3, #24576	; 0x6000
   11524:	cmp	r0, r3
   11528:	bne	116a8 <__assert_fail@plt+0x2a4>
   1152c:	movw	r0, #50448	; 0xc510
   11530:	movt	r0, #5
   11534:	bx	lr
   11538:	mov	r3, #33	; 0x21
   1153c:	movt	r3, #24576	; 0x6000
   11540:	cmp	r0, r3
   11544:	beq	11654 <__assert_fail@plt+0x250>
   11548:	mov	r3, #35	; 0x23
   1154c:	movt	r3, #24576	; 0x6000
   11550:	cmp	r0, r3
   11554:	beq	11660 <__assert_fail@plt+0x25c>
   11558:	mov	r3, #31
   1155c:	movt	r3, #24576	; 0x6000
   11560:	cmp	r0, r3
   11564:	bne	116a8 <__assert_fail@plt+0x2a4>
   11568:	movw	r0, #50480	; 0xc530
   1156c:	movt	r0, #5
   11570:	bx	lr
   11574:	cmp	r0, #1879048193	; 0x70000001
   11578:	beq	11684 <__assert_fail@plt+0x280>
   1157c:	bhi	115ac <__assert_fail@plt+0x1a8>
   11580:	mov	r3, #41	; 0x29
   11584:	movt	r3, #24576	; 0x6000
   11588:	cmp	r0, r3
   1158c:	beq	11678 <__assert_fail@plt+0x274>
   11590:	mov	r3, #43	; 0x2b
   11594:	movt	r3, #24576	; 0x6000
   11598:	cmp	r0, r3
   1159c:	bne	116a8 <__assert_fail@plt+0x2a4>
   115a0:	movw	r0, #50544	; 0xc570
   115a4:	movt	r0, #5
   115a8:	bx	lr
   115ac:	cmn	r0, #-2147483646	; 0x80000002
   115b0:	beq	11690 <__assert_fail@plt+0x28c>
   115b4:	cmn	r0, #-2147483647	; 0x80000001
   115b8:	beq	1169c <__assert_fail@plt+0x298>
   115bc:	cmn	r0, #-2147483645	; 0x80000003
   115c0:	bne	116a8 <__assert_fail@plt+0x2a4>
   115c4:	movw	r0, #50576	; 0xc590
   115c8:	movt	r0, #5
   115cc:	bx	lr
   115d0:	movw	r0, #50244	; 0xc444
   115d4:	movt	r0, #5
   115d8:	bx	lr
   115dc:	movw	r0, #50276	; 0xc464
   115e0:	movt	r0, #5
   115e4:	bx	lr
   115e8:	movw	r0, #50288	; 0xc470
   115ec:	movt	r0, #5
   115f0:	bx	lr
   115f4:	movw	r0, #50312	; 0xc488
   115f8:	movt	r0, #5
   115fc:	bx	lr
   11600:	movw	r0, #50324	; 0xc494
   11604:	movt	r0, #5
   11608:	bx	lr
   1160c:	movw	r0, #50356	; 0xc4b4
   11610:	movt	r0, #5
   11614:	bx	lr
   11618:	movw	r0, #50388	; 0xc4d4
   1161c:	movt	r0, #5
   11620:	bx	lr
   11624:	movw	r0, #50404	; 0xc4e4
   11628:	movt	r0, #5
   1162c:	bx	lr
   11630:	movw	r0, #50420	; 0xc4f4
   11634:	movt	r0, #5
   11638:	bx	lr
   1163c:	movw	r0, #50432	; 0xc500
   11640:	movt	r0, #5
   11644:	bx	lr
   11648:	movw	r0, #50460	; 0xc51c
   1164c:	movt	r0, #5
   11650:	bx	lr
   11654:	movw	r0, #50496	; 0xc540
   11658:	movt	r0, #5
   1165c:	bx	lr
   11660:	movw	r0, #50508	; 0xc54c
   11664:	movt	r0, #5
   11668:	bx	lr
   1166c:	movw	r0, #50520	; 0xc558
   11670:	movt	r0, #5
   11674:	bx	lr
   11678:	movw	r0, #50532	; 0xc564
   1167c:	movt	r0, #5
   11680:	bx	lr
   11684:	movw	r0, #50560	; 0xc580
   11688:	movt	r0, #5
   1168c:	bx	lr
   11690:	movw	r0, #50588	; 0xc59c
   11694:	movt	r0, #5
   11698:	bx	lr
   1169c:	movw	r0, #50596	; 0xc5a4
   116a0:	movt	r0, #5
   116a4:	bx	lr
   116a8:	mov	r0, #0
   116ac:	bx	lr
   116b0:	movw	r0, #50260	; 0xc454
   116b4:	movt	r0, #5
   116b8:	bx	lr
   116bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116c0:	movw	r8, #16680	; 0x4128
   116c4:	movt	r8, #9
   116c8:	sub	sp, sp, #156	; 0x9c
   116cc:	ldr	r3, [r8]
   116d0:	str	r1, [sp, #24]
   116d4:	movw	r1, #25084	; 0x61fc
   116d8:	str	r0, [sp, #28]
   116dc:	movt	r1, #7
   116e0:	mov	r0, #5
   116e4:	str	r3, [sp, #148]	; 0x94
   116e8:	bl	11368 <setlocale@plt>
   116ec:	movw	r1, #25084	; 0x61fc
   116f0:	mov	r0, #0
   116f4:	movt	r1, #7
   116f8:	bl	11368 <setlocale@plt>
   116fc:	movw	r0, #28728	; 0x7038
   11700:	movw	r1, #28740	; 0x7044
   11704:	movt	r0, #6
   11708:	movt	r1, #6
   1170c:	bl	113b0 <bindtextdomain@plt>
   11710:	movw	r0, #28728	; 0x7038
   11714:	movt	r0, #6
   11718:	bl	111a0 <textdomain@plt>
   1171c:	add	r0, sp, #28
   11720:	add	r1, sp, #24
   11724:	bl	4cd5c <warn@@Base+0x1370>
   11728:	ldr	r9, [sp, #28]
   1172c:	ldr	sl, [sp, #24]
   11730:	cmp	r9, #1
   11734:	ble	11868 <__assert_fail@plt+0x464>
   11738:	movw	r4, #12620	; 0x314c
   1173c:	movw	r7, #16712	; 0x4148
   11740:	movw	fp, #16704	; 0x4140
   11744:	movt	r4, #9
   11748:	movt	r7, #9
   1174c:	movt	fp, #9
   11750:	mov	r6, #0
   11754:	movw	r5, #12620	; 0x314c
   11758:	movt	r5, #9
   1175c:	str	r6, [sp]
   11760:	add	r3, r5, #732	; 0x2dc
   11764:	movw	r2, #28784	; 0x7070
   11768:	mov	r0, r9
   1176c:	movt	r2, #6
   11770:	mov	r1, sl
   11774:	bl	1126c <getopt_long@plt>
   11778:	mov	r2, #0
   1177c:	cmn	r0, #1
   11780:	beq	11c10 <__assert_fail@plt+0x80c>
   11784:	cmp	r0, #104	; 0x68
   11788:	beq	11c00 <__assert_fail@plt+0x7fc>
   1178c:	bgt	117d4 <__assert_fail@plt+0x3d0>
   11790:	cmp	r0, #82	; 0x52
   11794:	beq	11bf4 <__assert_fail@plt+0x7f0>
   11798:	ble	11824 <__assert_fail@plt+0x420>
   1179c:	cmp	r0, #97	; 0x61
   117a0:	beq	11b58 <__assert_fail@plt+0x754>
   117a4:	ble	118b4 <__assert_fail@plt+0x4b0>
   117a8:	cmp	r0, #100	; 0x64
   117ac:	beq	11b48 <__assert_fail@plt+0x744>
   117b0:	ble	11a34 <__assert_fail@plt+0x630>
   117b4:	cmp	r0, #101	; 0x65
   117b8:	beq	119d4 <__assert_fail@plt+0x5d0>
   117bc:	cmp	r0, #103	; 0x67
   117c0:	bne	11848 <__assert_fail@plt+0x444>
   117c4:	ldr	r3, [r7, #520]	; 0x208
   117c8:	add	r3, r3, #1
   117cc:	str	r3, [r7, #520]	; 0x208
   117d0:	b	11750 <__assert_fail@plt+0x34c>
   117d4:	cmp	r0, #118	; 0x76
   117d8:	beq	11b0c <__assert_fail@plt+0x708>
   117dc:	ble	11878 <__assert_fail@plt+0x474>
   117e0:	cmp	r0, #512	; 0x200
   117e4:	beq	11a88 <__assert_fail@plt+0x684>
   117e8:	ble	118dc <__assert_fail@plt+0x4d8>
   117ec:	movw	r3, #514	; 0x202
   117f0:	cmp	r0, r3
   117f4:	beq	11a6c <__assert_fail@plt+0x668>
   117f8:	blt	11a54 <__assert_fail@plt+0x650>
   117fc:	add	r3, r3, #1
   11800:	cmp	r0, r3
   11804:	beq	11a04 <__assert_fail@plt+0x600>
   11808:	cmp	r0, #516	; 0x204
   1180c:	bne	11848 <__assert_fail@plt+0x444>
   11810:	movw	r3, #26396	; 0x671c
   11814:	movt	r3, #9
   11818:	mov	r2, #1
   1181c:	str	r2, [r3]
   11820:	b	11750 <__assert_fail@plt+0x34c>
   11824:	cmp	r0, #68	; 0x44
   11828:	beq	11b30 <__assert_fail@plt+0x72c>
   1182c:	bgt	11908 <__assert_fail@plt+0x504>
   11830:	cmp	r0, #63	; 0x3f
   11834:	beq	11868 <__assert_fail@plt+0x464>
   11838:	cmp	r0, #65	; 0x41
   1183c:	beq	119bc <__assert_fail@plt+0x5b8>
   11840:	cmp	r0, #0
   11844:	beq	11754 <__assert_fail@plt+0x350>
   11848:	mov	r5, r0
   1184c:	movw	r1, #28760	; 0x7058
   11850:	mov	r0, #0
   11854:	movt	r1, #6
   11858:	mov	r2, #5
   1185c:	bl	11170 <dcgettext@plt>
   11860:	mov	r1, r5
   11864:	bl	4b2b0 <error@@Base>
   11868:	movw	r3, #16692	; 0x4134
   1186c:	movt	r3, #9
   11870:	ldr	r0, [r3]
   11874:	bl	16b74 <__assert_fail@plt+0x5770>
   11878:	cmp	r0, #114	; 0x72
   1187c:	beq	11af4 <__assert_fail@plt+0x6f0>
   11880:	bgt	11934 <__assert_fail@plt+0x530>
   11884:	cmp	r0, #110	; 0x6e
   11888:	beq	11adc <__assert_fail@plt+0x6d8>
   1188c:	cmp	r0, #112	; 0x70
   11890:	beq	11958 <__assert_fail@plt+0x554>
   11894:	cmp	r0, #108	; 0x6c
   11898:	bne	11848 <__assert_fail@plt+0x444>
   1189c:	movw	r3, #24896	; 0x6140
   118a0:	movt	r3, #9
   118a4:	ldr	r2, [r3, #-1716]	; 0xfffff94c
   118a8:	add	r2, r2, #1
   118ac:	str	r2, [r3, #-1716]	; 0xfffff94c
   118b0:	b	11750 <__assert_fail@plt+0x34c>
   118b4:	cmp	r0, #86	; 0x56
   118b8:	beq	11b18 <__assert_fail@plt+0x714>
   118bc:	cmp	r0, #87	; 0x57
   118c0:	beq	119a4 <__assert_fail@plt+0x5a0>
   118c4:	cmp	r0, #83	; 0x53
   118c8:	bne	11848 <__assert_fail@plt+0x444>
   118cc:	ldr	r3, [r7, #1864]	; 0x748
   118d0:	add	r3, r3, #1
   118d4:	str	r3, [r7, #1864]	; 0x748
   118d8:	b	11750 <__assert_fail@plt+0x34c>
   118dc:	cmp	r0, #120	; 0x78
   118e0:	beq	11ab4 <__assert_fail@plt+0x6b0>
   118e4:	blt	1197c <__assert_fail@plt+0x578>
   118e8:	cmp	r0, #122	; 0x7a
   118ec:	bne	11848 <__assert_fail@plt+0x444>
   118f0:	movw	r3, #24896	; 0x6140
   118f4:	movt	r3, #9
   118f8:	ldr	r2, [r3, #-312]	; 0xfffffec8
   118fc:	add	r2, r2, #1
   11900:	str	r2, [r3, #-312]	; 0xfffffec8
   11904:	b	11750 <__assert_fail@plt+0x34c>
   11908:	cmp	r0, #73	; 0x49
   1190c:	beq	11964 <__assert_fail@plt+0x560>
   11910:	cmp	r0, #78	; 0x4e
   11914:	beq	11ac0 <__assert_fail@plt+0x6bc>
   11918:	cmp	r0, #72	; 0x48
   1191c:	mov	r5, r0
   11920:	bne	1184c <__assert_fail@plt+0x448>
   11924:	movw	r3, #16696	; 0x4138
   11928:	movt	r3, #9
   1192c:	ldr	r0, [r3]
   11930:	bl	16b74 <__assert_fail@plt+0x5770>
   11934:	cmp	r0, #116	; 0x74
   11938:	beq	11ac0 <__assert_fail@plt+0x6bc>
   1193c:	bgt	11a24 <__assert_fail@plt+0x620>
   11940:	movw	r3, #24896	; 0x6140
   11944:	movt	r3, #9
   11948:	ldr	r2, [r3, #-1712]	; 0xfffff950
   1194c:	add	r2, r2, #1
   11950:	str	r2, [r3, #-1712]	; 0xfffff950
   11954:	b	11750 <__assert_fail@plt+0x34c>
   11958:	mov	r0, #8
   1195c:	bl	16a84 <__assert_fail@plt+0x5680>
   11960:	b	11750 <__assert_fail@plt+0x34c>
   11964:	movw	r3, #24896	; 0x6140
   11968:	movt	r3, #9
   1196c:	ldr	r2, [r3, #-1704]	; 0xfffff958
   11970:	add	r2, r2, #1
   11974:	str	r2, [r3, #-1704]	; 0xfffff958
   11978:	b	11750 <__assert_fail@plt+0x34c>
   1197c:	ldr	r0, [fp]
   11980:	ldr	r3, [r7, #476]	; 0x1dc
   11984:	cmp	r0, #0
   11988:	add	r3, r3, #1
   1198c:	str	r3, [r7, #476]	; 0x1dc
   11990:	beq	12064 <__assert_fail@plt+0xc60>
   11994:	mov	r3, #0
   11998:	str	r3, [r7, #1892]	; 0x764
   1199c:	bl	4afac <__assert_fail@plt+0x39ba8>
   119a0:	b	11750 <__assert_fail@plt+0x34c>
   119a4:	movw	r3, #26444	; 0x674c
   119a8:	movt	r3, #9
   119ac:	ldr	r2, [r3]
   119b0:	add	r2, r2, #1
   119b4:	str	r2, [r3]
   119b8:	b	11750 <__assert_fail@plt+0x34c>
   119bc:	movw	r3, #24896	; 0x6140
   119c0:	movt	r3, #9
   119c4:	ldr	r2, [r3, #-228]	; 0xffffff1c
   119c8:	add	r2, r2, #1
   119cc:	str	r2, [r3, #-228]	; 0xffffff1c
   119d0:	b	11750 <__assert_fail@plt+0x34c>
   119d4:	movw	r3, #24896	; 0x6140
   119d8:	movt	r3, #9
   119dc:	ldr	r0, [r7, #1868]	; 0x74c
   119e0:	ldr	r1, [r3, #-1716]	; 0xfffff94c
   119e4:	ldr	r2, [r7, #1864]	; 0x748
   119e8:	add	r0, r0, #1
   119ec:	add	r1, r1, #1
   119f0:	str	r0, [r7, #1868]	; 0x74c
   119f4:	str	r1, [r3, #-1716]	; 0xfffff94c
   119f8:	add	r3, r2, #1
   119fc:	str	r3, [r7, #1864]	; 0x748
   11a00:	b	11750 <__assert_fail@plt+0x34c>
   11a04:	ldr	r0, [fp]
   11a08:	add	r1, sp, #32
   11a0c:	mov	r2, #0
   11a10:	bl	11290 <strtoul@plt>
   11a14:	movw	r3, #26488	; 0x6778
   11a18:	movt	r3, #9
   11a1c:	str	r0, [r3]
   11a20:	b	11750 <__assert_fail@plt+0x34c>
   11a24:	ldr	r3, [r7, #516]	; 0x204
   11a28:	add	r3, r3, #1
   11a2c:	str	r3, [r7, #516]	; 0x204
   11a30:	b	11750 <__assert_fail@plt+0x34c>
   11a34:	cmp	r0, #99	; 0x63
   11a38:	bne	11848 <__assert_fail@plt+0x444>
   11a3c:	movw	r3, #24896	; 0x6140
   11a40:	movt	r3, #9
   11a44:	ldr	r2, [r3, #-216]	; 0xffffff28
   11a48:	add	r2, r2, #1
   11a4c:	str	r2, [r3, #-216]	; 0xffffff28
   11a50:	b	11750 <__assert_fail@plt+0x34c>
   11a54:	movw	r3, #24896	; 0x6140
   11a58:	movt	r3, #9
   11a5c:	ldr	r2, [r3, #-1708]	; 0xfffff954
   11a60:	add	r2, r2, #1
   11a64:	str	r2, [r3, #-1708]	; 0xfffff954
   11a68:	b	11750 <__assert_fail@plt+0x34c>
   11a6c:	ldr	r0, [fp]
   11a70:	add	r1, sp, #32
   11a74:	bl	11290 <strtoul@plt>
   11a78:	movw	r3, #16656	; 0x4110
   11a7c:	movt	r3, #9
   11a80:	str	r0, [r3]
   11a84:	b	11750 <__assert_fail@plt+0x34c>
   11a88:	ldr	r0, [fp]
   11a8c:	ldr	r3, [r7, #476]	; 0x1dc
   11a90:	cmp	r0, #0
   11a94:	add	r3, r3, #1
   11a98:	str	r3, [r7, #476]	; 0x1dc
   11a9c:	moveq	r3, #1
   11aa0:	streq	r3, [r7, #1892]	; 0x764
   11aa4:	beq	11750 <__assert_fail@plt+0x34c>
   11aa8:	str	r2, [r7, #1892]	; 0x764
   11aac:	bl	4aeb0 <__assert_fail@plt+0x39aac>
   11ab0:	b	11750 <__assert_fail@plt+0x34c>
   11ab4:	mov	r0, #1
   11ab8:	bl	16a84 <__assert_fail@plt+0x5680>
   11abc:	b	11750 <__assert_fail@plt+0x34c>
   11ac0:	ldr	r2, [r7, #1864]	; 0x748
   11ac4:	ldr	r3, [r7, #1604]	; 0x644
   11ac8:	add	r2, r2, #1
   11acc:	str	r2, [r7, #1864]	; 0x748
   11ad0:	add	r3, r3, #1
   11ad4:	str	r3, [r7, #1604]	; 0x644
   11ad8:	b	11750 <__assert_fail@plt+0x34c>
   11adc:	movw	r3, #24896	; 0x6140
   11ae0:	movt	r3, #9
   11ae4:	ldr	r2, [r3, #-220]	; 0xffffff24
   11ae8:	add	r2, r2, #1
   11aec:	str	r2, [r3, #-220]	; 0xffffff24
   11af0:	b	11750 <__assert_fail@plt+0x34c>
   11af4:	movw	r3, #24896	; 0x6140
   11af8:	movt	r3, #9
   11afc:	ldr	r2, [r3, #-224]	; 0xffffff20
   11b00:	add	r2, r2, #1
   11b04:	str	r2, [r3, #-224]	; 0xffffff20
   11b08:	b	11750 <__assert_fail@plt+0x34c>
   11b0c:	ldr	r0, [r5, #728]	; 0x2d8
   11b10:	bl	36a88 <__assert_fail@plt+0x25684>
   11b14:	b	11750 <__assert_fail@plt+0x34c>
   11b18:	movw	r3, #24896	; 0x6140
   11b1c:	movt	r3, #9
   11b20:	ldr	r2, [r3, #-1752]	; 0xfffff928
   11b24:	add	r2, r2, #1
   11b28:	str	r2, [r3, #-1752]	; 0xfffff928
   11b2c:	b	11750 <__assert_fail@plt+0x34c>
   11b30:	movw	r3, #24896	; 0x6140
   11b34:	movt	r3, #9
   11b38:	ldr	r2, [r3, #-1700]	; 0xfffff95c
   11b3c:	add	r2, r2, #1
   11b40:	str	r2, [r3, #-1700]	; 0xfffff95c
   11b44:	b	11750 <__assert_fail@plt+0x34c>
   11b48:	ldr	r3, [r7, #1912]	; 0x778
   11b4c:	add	r3, r3, #1
   11b50:	str	r3, [r7, #1912]	; 0x778
   11b54:	b	11750 <__assert_fail@plt+0x34c>
   11b58:	movw	r3, #24896	; 0x6140
   11b5c:	movt	r3, #9
   11b60:	ldr	lr, [r7, #516]	; 0x204
   11b64:	ldr	ip, [r3, #-1712]	; 0xfffff950
   11b68:	ldr	r5, [r3, #-224]	; 0xffffff20
   11b6c:	add	lr, lr, #1
   11b70:	ldr	r0, [r3, #-1716]	; 0xfffff94c
   11b74:	add	ip, ip, #1
   11b78:	ldr	r1, [r3, #-1752]	; 0xfffff928
   11b7c:	add	r5, r5, #1
   11b80:	ldr	r2, [r3, #-1704]	; 0xfffff958
   11b84:	add	r0, r0, #1
   11b88:	str	ip, [r3, #-1712]	; 0xfffff950
   11b8c:	add	r1, r1, #1
   11b90:	ldr	ip, [r3, #-228]	; 0xffffff1c
   11b94:	add	r2, r2, #1
   11b98:	str	r5, [r3, #-224]	; 0xffffff20
   11b9c:	add	ip, ip, #1
   11ba0:	ldr	r5, [r3, #-220]	; 0xffffff24
   11ba4:	str	r0, [r3, #-1716]	; 0xfffff94c
   11ba8:	str	r1, [r3, #-1752]	; 0xfffff928
   11bac:	add	r5, r5, #1
   11bb0:	ldr	r0, [r7, #1912]	; 0x778
   11bb4:	ldr	r1, [r7, #1868]	; 0x74c
   11bb8:	str	r2, [r3, #-1704]	; 0xfffff958
   11bbc:	add	r0, r0, #1
   11bc0:	ldr	r2, [r7, #1864]	; 0x748
   11bc4:	add	r1, r1, #1
   11bc8:	str	ip, [r3, #-228]	; 0xffffff1c
   11bcc:	ldr	ip, [r7, #520]	; 0x208
   11bd0:	add	r2, r2, #1
   11bd4:	str	r5, [r3, #-220]	; 0xffffff24
   11bd8:	str	lr, [r7, #516]	; 0x204
   11bdc:	add	r3, ip, #1
   11be0:	str	r0, [r7, #1912]	; 0x778
   11be4:	str	r1, [r7, #1868]	; 0x74c
   11be8:	str	r2, [r7, #1864]	; 0x748
   11bec:	str	r3, [r7, #520]	; 0x208
   11bf0:	b	11750 <__assert_fail@plt+0x34c>
   11bf4:	mov	r0, #16
   11bf8:	bl	16a84 <__assert_fail@plt+0x5680>
   11bfc:	b	11750 <__assert_fail@plt+0x34c>
   11c00:	ldr	r3, [r7, #1868]	; 0x74c
   11c04:	add	r3, r3, #1
   11c08:	str	r3, [r7, #1868]	; 0x74c
   11c0c:	b	11750 <__assert_fail@plt+0x34c>
   11c10:	movw	sl, #16712	; 0x4148
   11c14:	movt	sl, #9
   11c18:	ldr	r3, [sl, #1912]	; 0x778
   11c1c:	cmp	r3, r2
   11c20:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c24:	movw	fp, #24896	; 0x6140
   11c28:	movt	fp, #9
   11c2c:	str	fp, [sp, #16]
   11c30:	ldr	r3, [fp, #-1712]	; 0xfffff950
   11c34:	cmp	r3, r2
   11c38:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c3c:	ldr	r3, [fp, #-224]	; 0xffffff20
   11c40:	cmp	r3, r2
   11c44:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c48:	ldr	r3, [sl, #516]	; 0x204
   11c4c:	cmp	r3, r2
   11c50:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c54:	ldr	r3, [sl, #1864]	; 0x748
   11c58:	cmp	r3, r2
   11c5c:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c60:	ldr	r3, [fp, #-1716]	; 0xfffff94c
   11c64:	cmp	r3, r2
   11c68:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c6c:	ldr	r3, [sl, #1868]	; 0x74c
   11c70:	cmp	r3, r2
   11c74:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c78:	ldr	r3, [sl, #476]	; 0x1dc
   11c7c:	cmp	r3, r2
   11c80:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c84:	ldr	r3, [fp, #-1752]	; 0xfffff928
   11c88:	cmp	r3, r2
   11c8c:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c90:	ldr	r2, [fp, #-1704]	; 0xfffff958
   11c94:	cmp	r2, #0
   11c98:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11c9c:	ldr	r1, [sl, #1892]	; 0x764
   11ca0:	cmp	r1, #0
   11ca4:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11ca8:	ldr	r1, [fp, #-228]	; 0xffffff1c
   11cac:	cmp	r1, #0
   11cb0:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11cb4:	ldr	r1, [fp, #-220]	; 0xffffff24
   11cb8:	cmp	r1, #0
   11cbc:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11cc0:	ldr	r2, [sl, #520]	; 0x208
   11cc4:	cmp	r2, #0
   11cc8:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11ccc:	ldr	r2, [fp, #-216]	; 0xffffff28
   11cd0:	cmp	r2, #0
   11cd4:	bne	11ce4 <__assert_fail@plt+0x8e0>
   11cd8:	ldr	r3, [fp, #-1708]	; 0xfffff954
   11cdc:	cmp	r3, #0
   11ce0:	beq	11868 <__assert_fail@plt+0x464>
   11ce4:	ldr	r6, [sl, #468]	; 0x1d4
   11ce8:	movw	r5, #16712	; 0x4148
   11cec:	movt	r5, #9
   11cf0:	cmp	r6, #0
   11cf4:	bne	12000 <__assert_fail@plt+0xbfc>
   11cf8:	movw	r7, #16688	; 0x4130
   11cfc:	movt	r7, #9
   11d00:	ldr	r2, [sp, #28]
   11d04:	ldr	r3, [r7]
   11d08:	sub	r1, r2, #1
   11d0c:	cmp	r1, r3
   11d10:	ble	11fbc <__assert_fail@plt+0xbb8>
   11d14:	cmp	r2, r3
   11d18:	movw	ip, #24896	; 0x6140
   11d1c:	movt	ip, #9
   11d20:	mov	r2, #1
   11d24:	str	ip, [sp, #16]
   11d28:	movle	r9, #0
   11d2c:	str	r2, [ip, #-240]	; 0xffffff10
   11d30:	ble	11f5c <__assert_fail@plt+0xb58>
   11d34:	ldr	r0, [r4, #728]	; 0x2d8
   11d38:	mov	r9, #0
   11d3c:	str	r8, [sp, #20]
   11d40:	str	sl, [sp, #8]
   11d44:	b	11d9c <__assert_fail@plt+0x998>
   11d48:	movw	r1, #28912	; 0x70f0
   11d4c:	mov	r0, #0
   11d50:	movt	r1, #6
   11d54:	mov	r2, #5
   11d58:	bl	11170 <dcgettext@plt>
   11d5c:	mov	r5, #1
   11d60:	bl	4b2b0 <error@@Base>
   11d64:	ldr	sl, [sp, #8]
   11d68:	mov	r1, #448	; 0x1c0
   11d6c:	ldr	r0, [r4, #728]	; 0x2d8
   11d70:	mov	r2, #0
   11d74:	mov	r3, #0
   11d78:	orr	r9, r9, r5
   11d7c:	strd	r2, [sl, r1]
   11d80:	bl	1111c <free@plt>
   11d84:	ldr	r3, [r7]
   11d88:	ldr	r2, [sp, #28]
   11d8c:	str	r6, [r4, #728]	; 0x2d8
   11d90:	cmp	r3, r2
   11d94:	bge	11f54 <__assert_fail@plt+0xb50>
   11d98:	mov	r0, r6
   11d9c:	ldr	r2, [sp, #24]
   11da0:	add	r1, r3, #1
   11da4:	str	r1, [r7]
   11da8:	ldr	r5, [r2, r3, lsl #2]
   11dac:	bl	1129c <strlen@plt>
   11db0:	mov	r6, r0
   11db4:	mov	r0, r5
   11db8:	bl	1129c <strlen@plt>
   11dbc:	add	r0, r6, r0
   11dc0:	add	r0, r0, #3
   11dc4:	bl	4eba0 <warn@@Base+0x31b4>
   11dc8:	ldr	ip, [r4, #728]	; 0x2d8
   11dcc:	mov	r1, #1
   11dd0:	mvn	r2, #0
   11dd4:	movw	r3, #28836	; 0x70a4
   11dd8:	str	r5, [sp, #4]
   11ddc:	movt	r3, #6
   11de0:	str	ip, [sp]
   11de4:	mov	fp, r0
   11de8:	bl	112cc <__sprintf_chk@plt>
   11dec:	mov	r1, r5
   11df0:	mov	r0, #3
   11df4:	add	r2, sp, #32
   11df8:	ldr	r6, [r4, #728]	; 0x2d8
   11dfc:	str	fp, [r4, #728]	; 0x2d8
   11e00:	bl	113c8 <__xstat64@plt>
   11e04:	cmp	r0, #0
   11e08:	blt	11ee4 <__assert_fail@plt+0xae0>
   11e0c:	ldr	r3, [sp, #48]	; 0x30
   11e10:	and	r3, r3, #61440	; 0xf000
   11e14:	cmp	r3, #32768	; 0x8000
   11e18:	bne	11d48 <__assert_fail@plt+0x944>
   11e1c:	movw	r1, #28608	; 0x6fc0
   11e20:	mov	r0, r5
   11e24:	movt	r1, #6
   11e28:	bl	1138c <fopen64@plt>
   11e2c:	subs	ip, r0, #0
   11e30:	str	ip, [sp, #12]
   11e34:	beq	12030 <__assert_fail@plt+0xc2c>
   11e38:	add	r0, sp, #140	; 0x8c
   11e3c:	mov	r1, #8
   11e40:	mov	r2, #1
   11e44:	ldr	r3, [sp, #12]
   11e48:	bl	111f4 <fread@plt>
   11e4c:	cmp	r0, #1
   11e50:	mov	r8, r0
   11e54:	bne	11f2c <__assert_fail@plt+0xb28>
   11e58:	ldr	r3, [sp, #8]
   11e5c:	mov	r2, #8
   11e60:	ldrd	sl, [sp, #80]	; 0x50
   11e64:	mov	ip, #448	; 0x1c0
   11e68:	movw	r1, #28988	; 0x713c
   11e6c:	add	r0, sp, #140	; 0x8c
   11e70:	movt	r1, #6
   11e74:	strd	sl, [r3, ip]
   11e78:	bl	11158 <memcmp@plt>
   11e7c:	subs	r2, r0, #0
   11e80:	beq	11fd4 <__assert_fail@plt+0xbd0>
   11e84:	movw	r1, #29000	; 0x7148
   11e88:	add	r0, sp, #140	; 0x8c
   11e8c:	movt	r1, #6
   11e90:	mov	r2, #8
   11e94:	bl	11158 <memcmp@plt>
   11e98:	cmp	r0, #0
   11e9c:	beq	11fe8 <__assert_fail@plt+0xbe4>
   11ea0:	ldr	sl, [sp, #16]
   11ea4:	ldr	r3, [sl, #-216]	; 0xffffff28
   11ea8:	cmp	r3, #0
   11eac:	bne	12074 <__assert_fail@plt+0xc70>
   11eb0:	ldr	r0, [sp, #12]
   11eb4:	bl	11188 <rewind@plt>
   11eb8:	ldr	ip, [sp, #8]
   11ebc:	mov	r0, r5
   11ec0:	ldr	r1, [sp, #12]
   11ec4:	mov	r3, #0
   11ec8:	str	r3, [ip, #456]	; 0x1c8
   11ecc:	str	r3, [ip, #2184]	; 0x888
   11ed0:	bl	338e4 <__assert_fail@plt+0x224e0>
   11ed4:	mov	r5, r0
   11ed8:	ldr	r0, [sp, #12]
   11edc:	bl	11344 <fclose@plt>
   11ee0:	b	11d64 <__assert_fail@plt+0x960>
   11ee4:	bl	112b4 <__errno_location@plt>
   11ee8:	ldr	r3, [r0]
   11eec:	mov	r5, r0
   11ef0:	cmp	r3, #2
   11ef4:	beq	11f9c <__assert_fail@plt+0xb98>
   11ef8:	mov	r2, #5
   11efc:	movw	r1, #28860	; 0x70bc
   11f00:	mov	r0, #0
   11f04:	movt	r1, #6
   11f08:	bl	11170 <dcgettext@plt>
   11f0c:	mov	fp, r0
   11f10:	ldr	r0, [r5]
   11f14:	bl	11248 <strerror@plt>
   11f18:	mov	r5, #1
   11f1c:	mov	r1, r0
   11f20:	mov	r0, fp
   11f24:	bl	4b2b0 <error@@Base>
   11f28:	b	11d64 <__assert_fail@plt+0x960>
   11f2c:	mov	r2, #5
   11f30:	movw	r1, #28952	; 0x7118
   11f34:	mov	r0, #0
   11f38:	movt	r1, #6
   11f3c:	bl	11170 <dcgettext@plt>
   11f40:	mov	r5, #1
   11f44:	bl	4b2b0 <error@@Base>
   11f48:	ldr	r0, [sp, #12]
   11f4c:	bl	11344 <fclose@plt>
   11f50:	b	11d64 <__assert_fail@plt+0x960>
   11f54:	ldr	r8, [sp, #20]
   11f58:	ldr	sl, [sp, #8]
   11f5c:	ldr	r0, [sl, #472]	; 0x1d8
   11f60:	cmp	r0, #0
   11f64:	beq	11f6c <__assert_fail@plt+0xb68>
   11f68:	bl	1111c <free@plt>
   11f6c:	ldr	fp, [sp, #16]
   11f70:	ldr	r0, [fp, #-232]	; 0xffffff18
   11f74:	cmp	r0, #0
   11f78:	beq	11f80 <__assert_fail@plt+0xb7c>
   11f7c:	bl	1111c <free@plt>
   11f80:	ldr	r2, [sp, #148]	; 0x94
   11f84:	mov	r0, r9
   11f88:	ldr	r3, [r8]
   11f8c:	cmp	r2, r3
   11f90:	bne	12090 <__assert_fail@plt+0xc8c>
   11f94:	add	sp, sp, #156	; 0x9c
   11f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f9c:	mov	r2, #5
   11fa0:	movw	r1, #28844	; 0x70ac
   11fa4:	mov	r0, #0
   11fa8:	movt	r1, #6
   11fac:	bl	11170 <dcgettext@plt>
   11fb0:	mov	r5, #1
   11fb4:	bl	4b2b0 <error@@Base>
   11fb8:	b	11d64 <__assert_fail@plt+0x960>
   11fbc:	cmp	r2, r3
   11fc0:	ble	12094 <__assert_fail@plt+0xc90>
   11fc4:	movw	fp, #24896	; 0x6140
   11fc8:	movt	fp, #9
   11fcc:	str	fp, [sp, #16]
   11fd0:	b	11d34 <__assert_fail@plt+0x930>
   11fd4:	mov	r0, r5
   11fd8:	ldr	r1, [sp, #12]
   11fdc:	bl	363d8 <__assert_fail@plt+0x24fd4>
   11fe0:	mov	r5, r0
   11fe4:	b	11ed8 <__assert_fail@plt+0xad4>
   11fe8:	mov	r0, r5
   11fec:	mov	r2, r8
   11ff0:	ldr	r1, [sp, #12]
   11ff4:	bl	363d8 <__assert_fail@plt+0x24fd4>
   11ff8:	mov	r5, r0
   11ffc:	b	11ed8 <__assert_fail@plt+0xad4>
   12000:	mov	r0, r6
   12004:	movw	r7, #24896	; 0x6140
   12008:	bl	11224 <malloc@plt>
   1200c:	movt	r7, #9
   12010:	cmp	r0, #0
   12014:	str	r0, [r7, #-232]	; 0xffffff18
   12018:	beq	1204c <__assert_fail@plt+0xc48>
   1201c:	ldr	r1, [r5, #472]	; 0x1d8
   12020:	mov	r2, r6
   12024:	bl	11134 <memcpy@plt>
   12028:	str	r6, [r7, #-236]	; 0xffffff14
   1202c:	b	11cf8 <__assert_fail@plt+0x8f4>
   12030:	mov	r2, #5
   12034:	movw	r1, #28936	; 0x7108
   12038:	movt	r1, #6
   1203c:	mov	r5, #1
   12040:	bl	11170 <dcgettext@plt>
   12044:	bl	4b2b0 <error@@Base>
   12048:	b	11d64 <__assert_fail@plt+0x960>
   1204c:	mov	r2, #5
   12050:	movw	r1, #58848	; 0xe5e0
   12054:	movt	r1, #5
   12058:	bl	11170 <dcgettext@plt>
   1205c:	bl	4b2b0 <error@@Base>
   12060:	b	11cf8 <__assert_fail@plt+0x8f4>
   12064:	mov	r3, #1
   12068:	str	r3, [r7, #1892]	; 0x764
   1206c:	bl	4b1c4 <__assert_fail@plt+0x39dc0>
   12070:	b	11750 <__assert_fail@plt+0x34c>
   12074:	mov	r2, #5
   12078:	movw	r1, #29012	; 0x7154
   1207c:	mov	r0, #0
   12080:	movt	r1, #6
   12084:	bl	11170 <dcgettext@plt>
   12088:	bl	4b2b0 <error@@Base>
   1208c:	b	11eb0 <__assert_fail@plt+0xaac>
   12090:	bl	1117c <__stack_chk_fail@plt>
   12094:	mov	r2, #5
   12098:	movw	r1, #28820	; 0x7094
   1209c:	mov	r0, #0
   120a0:	movt	r1, #6
   120a4:	bl	11170 <dcgettext@plt>
   120a8:	bl	4b9ec <warn@@Base>
   120ac:	b	11868 <__assert_fail@plt+0x464>
   120b0:	mov	fp, #0
   120b4:	mov	lr, #0
   120b8:	pop	{r1}		; (ldr r1, [sp], #4)
   120bc:	mov	r2, sp
   120c0:	push	{r2}		; (str r2, [sp, #-4]!)
   120c4:	push	{r0}		; (str r0, [sp, #-4]!)
   120c8:	ldr	ip, [pc, #16]	; 120e0 <__assert_fail@plt+0xcdc>
   120cc:	push	{ip}		; (str ip, [sp, #-4]!)
   120d0:	ldr	r0, [pc, #12]	; 120e4 <__assert_fail@plt+0xce0>
   120d4:	ldr	r3, [pc, #12]	; 120e8 <__assert_fail@plt+0xce4>
   120d8:	bl	1123c <__libc_start_main@plt>
   120dc:	bl	113ec <abort@plt>
   120e0:	andeq	r4, r5, r8, lsr #21
   120e4:			; <UNDEFINED> instruction: 0x000116bc
   120e8:	andeq	r4, r5, r4, asr #20
   120ec:	ldr	r3, [pc, #20]	; 12108 <__assert_fail@plt+0xd04>
   120f0:	ldr	r2, [pc, #20]	; 1210c <__assert_fail@plt+0xd08>
   120f4:	add	r3, pc, r3
   120f8:	ldr	r2, [r3, r2]
   120fc:	cmp	r2, #0
   12100:	bxeq	lr
   12104:	b	11260 <__gmon_start__@plt>
   12108:	andeq	r0, r8, r4, lsl #30
   1210c:	andeq	r0, r0, r0, lsr r1
   12110:	push	{r3, lr}
   12114:	movw	r0, #16668	; 0x411c
   12118:	ldr	r3, [pc, #36]	; 12144 <__assert_fail@plt+0xd40>
   1211c:	movt	r0, #9
   12120:	rsb	r3, r0, r3
   12124:	cmp	r3, #6
   12128:	popls	{r3, pc}
   1212c:	movw	r3, #0
   12130:	movt	r3, #0
   12134:	cmp	r3, #0
   12138:	popeq	{r3, pc}
   1213c:	blx	r3
   12140:	pop	{r3, pc}
   12144:	andeq	r4, r9, pc, lsl r1
   12148:	push	{r3, lr}
   1214c:	movw	r0, #16668	; 0x411c
   12150:	movw	r3, #16668	; 0x411c
   12154:	movt	r0, #9
   12158:	movt	r3, #9
   1215c:	rsb	r3, r0, r3
   12160:	asr	r3, r3, #2
   12164:	add	r3, r3, r3, lsr #31
   12168:	asrs	r1, r3, #1
   1216c:	popeq	{r3, pc}
   12170:	movw	r2, #0
   12174:	movt	r2, #0
   12178:	cmp	r2, #0
   1217c:	popeq	{r3, pc}
   12180:	blx	r2
   12184:	pop	{r3, pc}
   12188:	push	{r4, lr}
   1218c:	movw	r4, #16708	; 0x4144
   12190:	movt	r4, #9
   12194:	ldrb	r3, [r4]
   12198:	cmp	r3, #0
   1219c:	popne	{r4, pc}
   121a0:	bl	12110 <__assert_fail@plt+0xd0c>
   121a4:	mov	r3, #1
   121a8:	strb	r3, [r4]
   121ac:	pop	{r4, pc}
   121b0:	movw	r0, #11996	; 0x2edc
   121b4:	movt	r0, #9
   121b8:	push	{r3, lr}
   121bc:	ldr	r3, [r0]
   121c0:	cmp	r3, #0
   121c4:	beq	121dc <__assert_fail@plt+0xdd8>
   121c8:	movw	r3, #0
   121cc:	movt	r3, #0
   121d0:	cmp	r3, #0
   121d4:	beq	121dc <__assert_fail@plt+0xdd8>
   121d8:	blx	r3
   121dc:	pop	{r3, lr}
   121e0:	b	12148 <__assert_fail@plt+0xd44>
   121e4:	andeq	r0, r0, r0
   121e8:	cmp	r0, #116	; 0x74
   121ec:	beq	12924 <__assert_fail@plt+0x1520>
   121f0:	bls	1223c <__assert_fail@plt+0xe38>
   121f4:	cmp	r0, #182	; 0xb6
   121f8:	beq	1290c <__assert_fail@plt+0x1508>
   121fc:	bhi	122c8 <__assert_fail@plt+0xec4>
   12200:	cmp	r0, #146	; 0x92
   12204:	beq	12918 <__assert_fail@plt+0x1514>
   12208:	bls	1238c <__assert_fail@plt+0xf88>
   1220c:	cmp	r0, #167	; 0xa7
   12210:	beq	129d8 <__assert_fail@plt+0x15d4>
   12214:	bls	124a8 <__assert_fail@plt+0x10a4>
   12218:	cmp	r0, #178	; 0xb2
   1221c:	beq	12428 <__assert_fail@plt+0x1024>
   12220:	bls	126b0 <__assert_fail@plt+0x12ac>
   12224:	cmp	r0, #180	; 0xb4
   12228:	beq	12960 <__assert_fail@plt+0x155c>
   1222c:	bls	12954 <__assert_fail@plt+0x1550>
   12230:	movw	r0, #49136	; 0xbff0
   12234:	movt	r0, #5
   12238:	bx	lr
   1223c:	cmp	r0, #72	; 0x48
   12240:	beq	12930 <__assert_fail@plt+0x152c>
   12244:	bhi	12284 <__assert_fail@plt+0xe80>
   12248:	cmp	r0, #46	; 0x2e
   1224c:	beq	1293c <__assert_fail@plt+0x1538>
   12250:	bls	123c8 <__assert_fail@plt+0xfc4>
   12254:	cmp	r0, #62	; 0x3e
   12258:	beq	128b8 <__assert_fail@plt+0x14b4>
   1225c:	bls	124d0 <__assert_fail@plt+0x10cc>
   12260:	cmp	r0, #68	; 0x44
   12264:	beq	12410 <__assert_fail@plt+0x100c>
   12268:	bls	12694 <__assert_fail@plt+0x1290>
   1226c:	cmp	r0, #70	; 0x46
   12270:	beq	128d0 <__assert_fail@plt+0x14cc>
   12274:	bls	128c4 <__assert_fail@plt+0x14c0>
   12278:	movw	r0, #48168	; 0xbc28
   1227c:	movt	r0, #5
   12280:	bx	lr
   12284:	cmp	r0, #87	; 0x57
   12288:	beq	128f4 <__assert_fail@plt+0x14f0>
   1228c:	bls	1235c <__assert_fail@plt+0xf58>
   12290:	cmp	r0, #101	; 0x65
   12294:	beq	12a34 <__assert_fail@plt+0x1630>
   12298:	bls	12458 <__assert_fail@plt+0x1054>
   1229c:	cmp	r0, #108	; 0x6c
   122a0:	beq	12440 <__assert_fail@plt+0x103c>
   122a4:	bls	126e8 <__assert_fail@plt+0x12e4>
   122a8:	cmp	r0, #110	; 0x6e
   122ac:	beq	12990 <__assert_fail@plt+0x158c>
   122b0:	bcc	12984 <__assert_fail@plt+0x1580>
   122b4:	cmp	r0, #111	; 0x6f
   122b8:	bne	12a08 <__assert_fail@plt+0x1604>
   122bc:	movw	r0, #48680	; 0xbe28
   122c0:	movt	r0, #5
   122c4:	bx	lr
   122c8:	cmp	r0, #1879048202	; 0x7000000a
   122cc:	beq	12900 <__assert_fail@plt+0x14fc>
   122d0:	bls	1232c <__assert_fail@plt+0xf28>
   122d4:	mov	r3, #16
   122d8:	movt	r3, #28672	; 0x7000
   122dc:	cmp	r0, r3
   122e0:	beq	12978 <__assert_fail@plt+0x1574>
   122e4:	bls	12570 <__assert_fail@plt+0x116c>
   122e8:	mov	r3, #20
   122ec:	movt	r3, #28672	; 0x7000
   122f0:	cmp	r0, r3
   122f4:	beq	12434 <__assert_fail@plt+0x1030>
   122f8:	bls	12704 <__assert_fail@plt+0x1300>
   122fc:	mov	r3, #22
   12300:	movt	r3, #28672	; 0x7000
   12304:	cmp	r0, r3
   12308:	beq	12a1c <__assert_fail@plt+0x1618>
   1230c:	bcc	12a10 <__assert_fail@plt+0x160c>
   12310:	mov	r3, #23
   12314:	movt	r3, #28672	; 0x7000
   12318:	cmp	r0, r3
   1231c:	bne	12a08 <__assert_fail@plt+0x1604>
   12320:	movw	r0, #49676	; 0xc20c
   12324:	movt	r0, #5
   12328:	bx	lr
   1232c:	cmp	r0, #1879048195	; 0x70000003
   12330:	beq	128e8 <__assert_fail@plt+0x14e4>
   12334:	bls	12480 <__assert_fail@plt+0x107c>
   12338:	cmp	r0, #1879048198	; 0x70000006
   1233c:	beq	1244c <__assert_fail@plt+0x1048>
   12340:	bls	12730 <__assert_fail@plt+0x132c>
   12344:	cmp	r0, #1879048200	; 0x70000008
   12348:	beq	129f0 <__assert_fail@plt+0x15ec>
   1234c:	bls	129e4 <__assert_fail@plt+0x15e0>
   12350:	movw	r0, #49408	; 0xc100
   12354:	movt	r0, #5
   12358:	bx	lr
   1235c:	cmp	r0, #78	; 0x4e
   12360:	beq	12948 <__assert_fail@plt+0x1544>
   12364:	bls	124f8 <__assert_fail@plt+0x10f4>
   12368:	cmp	r0, #83	; 0x53
   1236c:	beq	12404 <__assert_fail@plt+0x1000>
   12370:	bls	12678 <__assert_fail@plt+0x1274>
   12374:	cmp	r0, #85	; 0x55
   12378:	beq	12810 <__assert_fail@plt+0x140c>
   1237c:	bls	12828 <__assert_fail@plt+0x1424>
   12380:	movw	r0, #48424	; 0xbd28
   12384:	movt	r0, #5
   12388:	bx	lr
   1238c:	cmp	r0, #123	; 0x7b
   12390:	beq	127c8 <__assert_fail@plt+0x13c4>
   12394:	bls	12520 <__assert_fail@plt+0x111c>
   12398:	cmp	r0, #132	; 0x84
   1239c:	beq	123f8 <__assert_fail@plt+0xff4>
   123a0:	bls	1274c <__assert_fail@plt+0x1348>
   123a4:	cmp	r0, #135	; 0x87
   123a8:	beq	12a4c <__assert_fail@plt+0x1648>
   123ac:	cmp	r0, #145	; 0x91
   123b0:	beq	12a40 <__assert_fail@plt+0x163c>
   123b4:	cmp	r0, #134	; 0x86
   123b8:	bne	12a08 <__assert_fail@plt+0x1604>
   123bc:	movw	r0, #48856	; 0xbed8
   123c0:	movt	r0, #5
   123c4:	bx	lr
   123c8:	cmp	r0, #37	; 0x25
   123cc:	beq	129a8 <__assert_fail@plt+0x15a4>
   123d0:	bls	12548 <__assert_fail@plt+0x1144>
   123d4:	cmp	r0, #42	; 0x2a
   123d8:	beq	1241c <__assert_fail@plt+0x1018>
   123dc:	bls	126cc <__assert_fail@plt+0x12c8>
   123e0:	cmp	r0, #44	; 0x2c
   123e4:	beq	129c0 <__assert_fail@plt+0x15bc>
   123e8:	bls	129b4 <__assert_fail@plt+0x15b0>
   123ec:	movw	r0, #47924	; 0xbb34
   123f0:	movt	r0, #5
   123f4:	bx	lr
   123f8:	movw	r0, #48844	; 0xbecc
   123fc:	movt	r0, #5
   12400:	bx	lr
   12404:	movw	r0, #48352	; 0xbce0
   12408:	movt	r0, #5
   1240c:	bx	lr
   12410:	movw	r0, #48108	; 0xbbec
   12414:	movt	r0, #5
   12418:	bx	lr
   1241c:	movw	r0, #47872	; 0xbb00
   12420:	movt	r0, #5
   12424:	bx	lr
   12428:	movw	r0, #49080	; 0xbfb8
   1242c:	movt	r0, #5
   12430:	bx	lr
   12434:	movw	r0, #49608	; 0xc1c8
   12438:	movt	r0, #5
   1243c:	bx	lr
   12440:	movw	r0, #48632	; 0xbdf8
   12444:	movt	r0, #5
   12448:	bx	lr
   1244c:	movw	r0, #49348	; 0xc0c4
   12450:	movt	r0, #5
   12454:	bx	lr
   12458:	cmp	r0, #94	; 0x5e
   1245c:	beq	127f8 <__assert_fail@plt+0x13f4>
   12460:	bhi	12608 <__assert_fail@plt+0x1204>
   12464:	cmp	r0, #92	; 0x5c
   12468:	beq	12768 <__assert_fail@plt+0x1364>
   1246c:	cmp	r0, #93	; 0x5d
   12470:	bne	12a08 <__assert_fail@plt+0x1604>
   12474:	movw	r0, #48492	; 0xbd6c
   12478:	movt	r0, #5
   1247c:	bx	lr
   12480:	cmp	r0, #1879048192	; 0x70000000
   12484:	beq	12780 <__assert_fail@plt+0x137c>
   12488:	bhi	125b4 <__assert_fail@plt+0x11b0>
   1248c:	cmp	r0, #183	; 0xb7
   12490:	beq	12858 <__assert_fail@plt+0x1454>
   12494:	cmp	r0, #186	; 0xba
   12498:	bne	12a08 <__assert_fail@plt+0x1604>
   1249c:	movw	r0, #49196	; 0xc02c
   124a0:	movt	r0, #5
   124a4:	bx	lr
   124a8:	cmp	r0, #151	; 0x97
   124ac:	beq	12798 <__assert_fail@plt+0x1394>
   124b0:	bhi	12598 <__assert_fail@plt+0x1194>
   124b4:	cmp	r0, #147	; 0x93
   124b8:	beq	12888 <__assert_fail@plt+0x1484>
   124bc:	cmp	r0, #150	; 0x96
   124c0:	bne	12a08 <__assert_fail@plt+0x1604>
   124c4:	movw	r0, #48936	; 0xbf28
   124c8:	movt	r0, #5
   124cc:	bx	lr
   124d0:	cmp	r0, #51	; 0x33
   124d4:	beq	127e0 <__assert_fail@plt+0x13dc>
   124d8:	bhi	125ec <__assert_fail@plt+0x11e8>
   124dc:	cmp	r0, #47	; 0x2f
   124e0:	beq	127d4 <__assert_fail@plt+0x13d0>
   124e4:	cmp	r0, #50	; 0x32
   124e8:	bne	12a08 <__assert_fail@plt+0x1604>
   124ec:	movw	r0, #47984	; 0xbb70
   124f0:	movt	r0, #5
   124f4:	bx	lr
   124f8:	cmp	r0, #75	; 0x4b
   124fc:	beq	12840 <__assert_fail@plt+0x143c>
   12500:	bhi	12640 <__assert_fail@plt+0x123c>
   12504:	cmp	r0, #73	; 0x49
   12508:	beq	12834 <__assert_fail@plt+0x1430>
   1250c:	cmp	r0, #74	; 0x4a
   12510:	bne	12a08 <__assert_fail@plt+0x1604>
   12514:	movw	r0, #48220	; 0xbc5c
   12518:	movt	r0, #5
   1251c:	bx	lr
   12520:	cmp	r0, #119	; 0x77
   12524:	beq	128a0 <__assert_fail@plt+0x149c>
   12528:	bhi	12624 <__assert_fail@plt+0x1220>
   1252c:	cmp	r0, #117	; 0x75
   12530:	beq	12894 <__assert_fail@plt+0x1490>
   12534:	cmp	r0, #118	; 0x76
   12538:	bne	12a08 <__assert_fail@plt+0x1604>
   1253c:	movw	r0, #48728	; 0xbe58
   12540:	movt	r0, #5
   12544:	bx	lr
   12548:	cmp	r0, #34	; 0x22
   1254c:	beq	12870 <__assert_fail@plt+0x146c>
   12550:	bhi	1265c <__assert_fail@plt+0x1258>
   12554:	cmp	r0, #0
   12558:	beq	12864 <__assert_fail@plt+0x1460>
   1255c:	cmp	r0, #33	; 0x21
   12560:	bne	12a08 <__assert_fail@plt+0x1604>
   12564:	movw	r0, #47760	; 0xba90
   12568:	movt	r0, #5
   1256c:	bx	lr
   12570:	cmp	r0, #1879048205	; 0x7000000d
   12574:	beq	127b0 <__assert_fail@plt+0x13ac>
   12578:	bhi	125d0 <__assert_fail@plt+0x11cc>
   1257c:	cmp	r0, #1879048203	; 0x7000000b
   12580:	beq	127a4 <__assert_fail@plt+0x13a0>
   12584:	cmp	r0, #1879048204	; 0x7000000c
   12588:	bne	12a08 <__assert_fail@plt+0x1604>
   1258c:	movw	r0, #49468	; 0xc13c
   12590:	movt	r0, #5
   12594:	bx	lr
   12598:	cmp	r0, #154	; 0x9a
   1259c:	beq	1278c <__assert_fail@plt+0x1388>
   125a0:	cmp	r0, #166	; 0xa6
   125a4:	bne	12a08 <__assert_fail@plt+0x1604>
   125a8:	movw	r0, #49000	; 0xbf68
   125ac:	movt	r0, #5
   125b0:	bx	lr
   125b4:	cmp	r0, #1879048193	; 0x70000001
   125b8:	beq	127bc <__assert_fail@plt+0x13b8>
   125bc:	cmp	r0, #1879048194	; 0x70000002
   125c0:	bne	12a08 <__assert_fail@plt+0x1604>
   125c4:	movw	r0, #49256	; 0xc068
   125c8:	movt	r0, #5
   125cc:	bx	lr
   125d0:	cmp	r0, #1879048206	; 0x7000000e
   125d4:	beq	127ec <__assert_fail@plt+0x13e8>
   125d8:	cmp	r0, #1879048207	; 0x7000000f
   125dc:	bne	12a08 <__assert_fail@plt+0x1604>
   125e0:	movw	r0, #49528	; 0xc178
   125e4:	movt	r0, #5
   125e8:	bx	lr
   125ec:	cmp	r0, #58	; 0x3a
   125f0:	beq	12804 <__assert_fail@plt+0x1400>
   125f4:	cmp	r0, #59	; 0x3b
   125f8:	bne	12a08 <__assert_fail@plt+0x1604>
   125fc:	movw	r0, #48032	; 0xbba0
   12600:	movt	r0, #5
   12604:	bx	lr
   12608:	cmp	r0, #95	; 0x5f
   1260c:	beq	128ac <__assert_fail@plt+0x14a8>
   12610:	cmp	r0, #100	; 0x64
   12614:	bne	12a08 <__assert_fail@plt+0x1604>
   12618:	movw	r0, #48552	; 0xbda8
   1261c:	movt	r0, #5
   12620:	bx	lr
   12624:	cmp	r0, #121	; 0x79
   12628:	beq	1284c <__assert_fail@plt+0x1448>
   1262c:	cmp	r0, #122	; 0x7a
   12630:	bne	12a08 <__assert_fail@plt+0x1604>
   12634:	movw	r0, #48780	; 0xbe8c
   12638:	movt	r0, #5
   1263c:	bx	lr
   12640:	cmp	r0, #76	; 0x4c
   12644:	beq	1287c <__assert_fail@plt+0x1478>
   12648:	cmp	r0, #77	; 0x4d
   1264c:	bne	12a08 <__assert_fail@plt+0x1604>
   12650:	movw	r0, #48272	; 0xbc90
   12654:	movt	r0, #5
   12658:	bx	lr
   1265c:	cmp	r0, #35	; 0x23
   12660:	beq	1281c <__assert_fail@plt+0x1418>
   12664:	cmp	r0, #36	; 0x24
   12668:	bne	12a08 <__assert_fail@plt+0x1604>
   1266c:	movw	r0, #47808	; 0xbac0
   12670:	movt	r0, #5
   12674:	bx	lr
   12678:	cmp	r0, #79	; 0x4f
   1267c:	beq	128dc <__assert_fail@plt+0x14d8>
   12680:	cmp	r0, #82	; 0x52
   12684:	bne	12a08 <__assert_fail@plt+0x1604>
   12688:	movw	r0, #48332	; 0xbccc
   1268c:	movt	r0, #5
   12690:	bx	lr
   12694:	cmp	r0, #63	; 0x3f
   12698:	beq	1296c <__assert_fail@plt+0x1568>
   1269c:	cmp	r0, #67	; 0x43
   126a0:	bne	12a08 <__assert_fail@plt+0x1604>
   126a4:	movw	r0, #48092	; 0xbbdc
   126a8:	movt	r0, #5
   126ac:	bx	lr
   126b0:	cmp	r0, #170	; 0xaa
   126b4:	beq	129cc <__assert_fail@plt+0x15c8>
   126b8:	cmp	r0, #177	; 0xb1
   126bc:	bne	12a08 <__assert_fail@plt+0x1604>
   126c0:	movw	r0, #49064	; 0xbfa8
   126c4:	movt	r0, #5
   126c8:	bx	lr
   126cc:	cmp	r0, #38	; 0x26
   126d0:	beq	1299c <__assert_fail@plt+0x1598>
   126d4:	cmp	r0, #39	; 0x27
   126d8:	bne	12a08 <__assert_fail@plt+0x1604>
   126dc:	movw	r0, #47856	; 0xbaf0
   126e0:	movt	r0, #5
   126e4:	bx	lr
   126e8:	cmp	r0, #102	; 0x66
   126ec:	beq	12a28 <__assert_fail@plt+0x1624>
   126f0:	cmp	r0, #103	; 0x67
   126f4:	bne	12a08 <__assert_fail@plt+0x1604>
   126f8:	movw	r0, #48612	; 0xbde4
   126fc:	movt	r0, #5
   12700:	bx	lr
   12704:	mov	r3, #17
   12708:	movt	r3, #28672	; 0x7000
   1270c:	cmp	r0, r3
   12710:	beq	129fc <__assert_fail@plt+0x15f8>
   12714:	mov	r3, #18
   12718:	movt	r3, #28672	; 0x7000
   1271c:	cmp	r0, r3
   12720:	bne	12a08 <__assert_fail@plt+0x1604>
   12724:	movw	r0, #49588	; 0xc1b4
   12728:	movt	r0, #5
   1272c:	bx	lr
   12730:	cmp	r0, #1879048196	; 0x70000004
   12734:	beq	12a58 <__assert_fail@plt+0x1654>
   12738:	cmp	r0, #1879048197	; 0x70000005
   1273c:	bne	12a08 <__assert_fail@plt+0x1604>
   12740:	movw	r0, #49332	; 0xc0b4
   12744:	movt	r0, #5
   12748:	bx	lr
   1274c:	cmp	r0, #128	; 0x80
   12750:	beq	12774 <__assert_fail@plt+0x1370>
   12754:	cmp	r0, #129	; 0x81
   12758:	bne	12a08 <__assert_fail@plt+0x1604>
   1275c:	movw	r0, #48828	; 0xbebc
   12760:	movt	r0, #5
   12764:	bx	lr
   12768:	movw	r0, #48472	; 0xbd58
   1276c:	movt	r0, #5
   12770:	bx	lr
   12774:	movw	r0, #48812	; 0xbeac
   12778:	movt	r0, #5
   1277c:	bx	lr
   12780:	movw	r0, #49220	; 0xc044
   12784:	movt	r0, #5
   12788:	bx	lr
   1278c:	movw	r0, #48976	; 0xbf50
   12790:	movt	r0, #5
   12794:	bx	lr
   12798:	movw	r0, #48956	; 0xbf3c
   1279c:	movt	r0, #5
   127a0:	bx	lr
   127a4:	movw	r0, #49448	; 0xc128
   127a8:	movt	r0, #5
   127ac:	bx	lr
   127b0:	movw	r0, #49488	; 0xc150
   127b4:	movt	r0, #5
   127b8:	bx	lr
   127bc:	movw	r0, #49236	; 0xc054
   127c0:	movt	r0, #5
   127c4:	bx	lr
   127c8:	movw	r0, #48796	; 0xbe9c
   127cc:	movt	r0, #5
   127d0:	bx	lr
   127d4:	movw	r0, #47964	; 0xbb5c
   127d8:	movt	r0, #5
   127dc:	bx	lr
   127e0:	movw	r0, #48000	; 0xbb80
   127e4:	movt	r0, #5
   127e8:	bx	lr
   127ec:	movw	r0, #49508	; 0xc164
   127f0:	movt	r0, #5
   127f4:	bx	lr
   127f8:	movw	r0, #48512	; 0xbd80
   127fc:	movt	r0, #5
   12800:	bx	lr
   12804:	movw	r0, #48016	; 0xbb90
   12808:	movt	r0, #5
   1280c:	bx	lr
   12810:	movw	r0, #48400	; 0xbd10
   12814:	movt	r0, #5
   12818:	bx	lr
   1281c:	movw	r0, #47792	; 0xbab0
   12820:	movt	r0, #5
   12824:	bx	lr
   12828:	movw	r0, #48376	; 0xbcf8
   1282c:	movt	r0, #5
   12830:	bx	lr
   12834:	movw	r0, #48204	; 0xbc4c
   12838:	movt	r0, #5
   1283c:	bx	lr
   12840:	movw	r0, #48236	; 0xbc6c
   12844:	movt	r0, #5
   12848:	bx	lr
   1284c:	movw	r0, #48760	; 0xbe78
   12850:	movt	r0, #5
   12854:	bx	lr
   12858:	movw	r0, #49176	; 0xc018
   1285c:	movt	r0, #5
   12860:	bx	lr
   12864:	movw	r0, #47748	; 0xba84
   12868:	movt	r0, #5
   1286c:	bx	lr
   12870:	movw	r0, #47776	; 0xbaa0
   12874:	movt	r0, #5
   12878:	bx	lr
   1287c:	movw	r0, #48252	; 0xbc7c
   12880:	movt	r0, #5
   12884:	bx	lr
   12888:	movw	r0, #48920	; 0xbf18
   1288c:	movt	r0, #5
   12890:	bx	lr
   12894:	movw	r0, #48712	; 0xbe48
   12898:	movt	r0, #5
   1289c:	bx	lr
   128a0:	movw	r0, #48744	; 0xbe68
   128a4:	movt	r0, #5
   128a8:	bx	lr
   128ac:	movw	r0, #48532	; 0xbd94
   128b0:	movt	r0, #5
   128b4:	bx	lr
   128b8:	movw	r0, #48052	; 0xbbb4
   128bc:	movt	r0, #5
   128c0:	bx	lr
   128c4:	movw	r0, #48128	; 0xbc00
   128c8:	movt	r0, #5
   128cc:	bx	lr
   128d0:	movw	r0, #48148	; 0xbc14
   128d4:	movt	r0, #5
   128d8:	bx	lr
   128dc:	movw	r0, #48312	; 0xbcb8
   128e0:	movt	r0, #5
   128e4:	bx	lr
   128e8:	movw	r0, #49284	; 0xc084
   128ec:	movt	r0, #5
   128f0:	bx	lr
   128f4:	movw	r0, #48448	; 0xbd40
   128f8:	movt	r0, #5
   128fc:	bx	lr
   12900:	movw	r0, #49428	; 0xc114
   12904:	movt	r0, #5
   12908:	bx	lr
   1290c:	movw	r0, #49156	; 0xc004
   12910:	movt	r0, #5
   12914:	bx	lr
   12918:	movw	r0, #48904	; 0xbf08
   1291c:	movt	r0, #5
   12920:	bx	lr
   12924:	movw	r0, #48696	; 0xbe38
   12928:	movt	r0, #5
   1292c:	bx	lr
   12930:	movw	r0, #48188	; 0xbc3c
   12934:	movt	r0, #5
   12938:	bx	lr
   1293c:	movw	r0, #47944	; 0xbb48
   12940:	movt	r0, #5
   12944:	bx	lr
   12948:	movw	r0, #48292	; 0xbca4
   1294c:	movt	r0, #5
   12950:	bx	lr
   12954:	movw	r0, #49096	; 0xbfc8
   12958:	movt	r0, #5
   1295c:	bx	lr
   12960:	movw	r0, #49116	; 0xbfdc
   12964:	movt	r0, #5
   12968:	bx	lr
   1296c:	movw	r0, #48072	; 0xbbc8
   12970:	movt	r0, #5
   12974:	bx	lr
   12978:	movw	r0, #49548	; 0xc18c
   1297c:	movt	r0, #5
   12980:	bx	lr
   12984:	movw	r0, #48648	; 0xbe08
   12988:	movt	r0, #5
   1298c:	bx	lr
   12990:	movw	r0, #48664	; 0xbe18
   12994:	movt	r0, #5
   12998:	bx	lr
   1299c:	movw	r0, #47840	; 0xbae0
   129a0:	movt	r0, #5
   129a4:	bx	lr
   129a8:	movw	r0, #47824	; 0xbad0
   129ac:	movt	r0, #5
   129b0:	bx	lr
   129b4:	movw	r0, #47888	; 0xbb10
   129b8:	movt	r0, #5
   129bc:	bx	lr
   129c0:	movw	r0, #47904	; 0xbb20
   129c4:	movt	r0, #5
   129c8:	bx	lr
   129cc:	movw	r0, #49040	; 0xbf90
   129d0:	movt	r0, #5
   129d4:	bx	lr
   129d8:	movw	r0, #49020	; 0xbf7c
   129dc:	movt	r0, #5
   129e0:	bx	lr
   129e4:	movw	r0, #49368	; 0xc0d8
   129e8:	movt	r0, #5
   129ec:	bx	lr
   129f0:	movw	r0, #49388	; 0xc0ec
   129f4:	movt	r0, #5
   129f8:	bx	lr
   129fc:	movw	r0, #49568	; 0xc1a0
   12a00:	movt	r0, #5
   12a04:	bx	lr
   12a08:	mov	r0, #0
   12a0c:	bx	lr
   12a10:	movw	r0, #49628	; 0xc1dc
   12a14:	movt	r0, #5
   12a18:	bx	lr
   12a1c:	movw	r0, #49652	; 0xc1f4
   12a20:	movt	r0, #5
   12a24:	bx	lr
   12a28:	movw	r0, #48592	; 0xbdd0
   12a2c:	movt	r0, #5
   12a30:	bx	lr
   12a34:	movw	r0, #48572	; 0xbdbc
   12a38:	movt	r0, #5
   12a3c:	bx	lr
   12a40:	movw	r0, #48888	; 0xbef8
   12a44:	movt	r0, #5
   12a48:	bx	lr
   12a4c:	movw	r0, #48872	; 0xbee8
   12a50:	movt	r0, #5
   12a54:	bx	lr
   12a58:	movw	r0, #49308	; 0xc09c
   12a5c:	movt	r0, #5
   12a60:	bx	lr
   12a64:	mov	r3, #51	; 0x33
   12a68:	movt	r3, #24576	; 0x6000
   12a6c:	cmp	r0, r3
   12a70:	beq	12db0 <__assert_fail@plt+0x19ac>
   12a74:	bhi	12acc <__assert_fail@plt+0x16c8>
   12a78:	mov	r3, #33	; 0x21
   12a7c:	movt	r3, #24576	; 0x6000
   12a80:	cmp	r0, r3
   12a84:	beq	12dbc <__assert_fail@plt+0x19b8>
   12a88:	bhi	12b30 <__assert_fail@plt+0x172c>
   12a8c:	mov	r3, #23
   12a90:	movt	r3, #24576	; 0x6000
   12a94:	cmp	r0, r3
   12a98:	beq	12cf0 <__assert_fail@plt+0x18ec>
   12a9c:	bhi	12c0c <__assert_fail@plt+0x1808>
   12aa0:	cmp	r0, #1610612751	; 0x6000000f
   12aa4:	beq	12d80 <__assert_fail@plt+0x197c>
   12aa8:	mov	r3, #21
   12aac:	movt	r3, #24576	; 0x6000
   12ab0:	cmp	r0, r3
   12ab4:	beq	12cd8 <__assert_fail@plt+0x18d4>
   12ab8:	cmp	r0, #1610612749	; 0x6000000d
   12abc:	bne	12cac <__assert_fail@plt+0x18a8>
   12ac0:	movw	r0, #49720	; 0xc238
   12ac4:	movt	r0, #5
   12ac8:	bx	lr
   12acc:	mov	r3, #67	; 0x43
   12ad0:	movt	r3, #24576	; 0x6000
   12ad4:	cmp	r0, r3
   12ad8:	beq	12dc8 <__assert_fail@plt+0x19c4>
   12adc:	bhi	12b80 <__assert_fail@plt+0x177c>
   12ae0:	mov	r3, #59	; 0x3b
   12ae4:	movt	r3, #24576	; 0x6000
   12ae8:	cmp	r0, r3
   12aec:	beq	12cfc <__assert_fail@plt+0x18f8>
   12af0:	bhi	12c7c <__assert_fail@plt+0x1878>
   12af4:	mov	r3, #55	; 0x37
   12af8:	movt	r3, #24576	; 0x6000
   12afc:	cmp	r0, r3
   12b00:	beq	12d74 <__assert_fail@plt+0x1970>
   12b04:	mov	r3, #57	; 0x39
   12b08:	movt	r3, #24576	; 0x6000
   12b0c:	cmp	r0, r3
   12b10:	beq	12d20 <__assert_fail@plt+0x191c>
   12b14:	mov	r3, #53	; 0x35
   12b18:	movt	r3, #24576	; 0x6000
   12b1c:	cmp	r0, r3
   12b20:	bne	12cac <__assert_fail@plt+0x18a8>
   12b24:	movw	r0, #49996	; 0xc34c
   12b28:	movt	r0, #5
   12b2c:	bx	lr
   12b30:	mov	r3, #43	; 0x2b
   12b34:	movt	r3, #24576	; 0x6000
   12b38:	cmp	r0, r3
   12b3c:	beq	12d14 <__assert_fail@plt+0x1910>
   12b40:	bhi	12bd0 <__assert_fail@plt+0x17cc>
   12b44:	mov	r3, #37	; 0x25
   12b48:	movt	r3, #24576	; 0x6000
   12b4c:	cmp	r0, r3
   12b50:	beq	12da4 <__assert_fail@plt+0x19a0>
   12b54:	mov	r3, #39	; 0x27
   12b58:	movt	r3, #24576	; 0x6000
   12b5c:	cmp	r0, r3
   12b60:	beq	12ccc <__assert_fail@plt+0x18c8>
   12b64:	mov	r3, #35	; 0x23
   12b68:	movt	r3, #24576	; 0x6000
   12b6c:	cmp	r0, r3
   12b70:	bne	12cac <__assert_fail@plt+0x18a8>
   12b74:	movw	r0, #49856	; 0xc2c0
   12b78:	movt	r0, #5
   12b7c:	bx	lr
   12b80:	mov	r3, #75	; 0x4b
   12b84:	movt	r3, #24576	; 0x6000
   12b88:	cmp	r0, r3
   12b8c:	beq	12ce4 <__assert_fail@plt+0x18e0>
   12b90:	bhi	12c48 <__assert_fail@plt+0x1844>
   12b94:	mov	r3, #71	; 0x47
   12b98:	movt	r3, #24576	; 0x6000
   12b9c:	cmp	r0, r3
   12ba0:	beq	12d68 <__assert_fail@plt+0x1964>
   12ba4:	mov	r3, #73	; 0x49
   12ba8:	movt	r3, #24576	; 0x6000
   12bac:	cmp	r0, r3
   12bb0:	beq	12d08 <__assert_fail@plt+0x1904>
   12bb4:	mov	r3, #69	; 0x45
   12bb8:	movt	r3, #24576	; 0x6000
   12bbc:	cmp	r0, r3
   12bc0:	bne	12cac <__assert_fail@plt+0x18a8>
   12bc4:	movw	r0, #50136	; 0xc3d8
   12bc8:	movt	r0, #5
   12bcc:	bx	lr
   12bd0:	mov	r3, #47	; 0x2f
   12bd4:	movt	r3, #24576	; 0x6000
   12bd8:	cmp	r0, r3
   12bdc:	beq	12d5c <__assert_fail@plt+0x1958>
   12be0:	mov	r3, #49	; 0x31
   12be4:	movt	r3, #24576	; 0x6000
   12be8:	cmp	r0, r3
   12bec:	beq	12cb4 <__assert_fail@plt+0x18b0>
   12bf0:	mov	r3, #45	; 0x2d
   12bf4:	movt	r3, #24576	; 0x6000
   12bf8:	cmp	r0, r3
   12bfc:	bne	12cac <__assert_fail@plt+0x18a8>
   12c00:	movw	r0, #49924	; 0xc304
   12c04:	movt	r0, #5
   12c08:	bx	lr
   12c0c:	mov	r3, #29
   12c10:	movt	r3, #24576	; 0x6000
   12c14:	cmp	r0, r3
   12c18:	beq	12d98 <__assert_fail@plt+0x1994>
   12c1c:	mov	r3, #31
   12c20:	movt	r3, #24576	; 0x6000
   12c24:	cmp	r0, r3
   12c28:	beq	12cc0 <__assert_fail@plt+0x18bc>
   12c2c:	mov	r3, #25
   12c30:	movt	r3, #24576	; 0x6000
   12c34:	cmp	r0, r3
   12c38:	bne	12cac <__assert_fail@plt+0x18a8>
   12c3c:	movw	r0, #49784	; 0xc278
   12c40:	movt	r0, #5
   12c44:	bx	lr
   12c48:	mov	r3, #79	; 0x4f
   12c4c:	movt	r3, #24576	; 0x6000
   12c50:	cmp	r0, r3
   12c54:	beq	12d8c <__assert_fail@plt+0x1988>
   12c58:	cmp	r0, #1879048192	; 0x70000000
   12c5c:	beq	12d38 <__assert_fail@plt+0x1934>
   12c60:	mov	r3, #77	; 0x4d
   12c64:	movt	r3, #24576	; 0x6000
   12c68:	cmp	r0, r3
   12c6c:	bne	12cac <__assert_fail@plt+0x18a8>
   12c70:	movw	r0, #50216	; 0xc428
   12c74:	movt	r0, #5
   12c78:	bx	lr
   12c7c:	mov	r3, #63	; 0x3f
   12c80:	movt	r3, #24576	; 0x6000
   12c84:	cmp	r0, r3
   12c88:	beq	12d44 <__assert_fail@plt+0x1940>
   12c8c:	mov	r3, #65	; 0x41
   12c90:	movt	r3, #24576	; 0x6000
   12c94:	cmp	r0, r3
   12c98:	beq	12d2c <__assert_fail@plt+0x1928>
   12c9c:	mov	r3, #61	; 0x3d
   12ca0:	movt	r3, #24576	; 0x6000
   12ca4:	cmp	r0, r3
   12ca8:	beq	12d50 <__assert_fail@plt+0x194c>
   12cac:	mov	r0, #0
   12cb0:	bx	lr
   12cb4:	movw	r0, #49956	; 0xc324
   12cb8:	movt	r0, #5
   12cbc:	bx	lr
   12cc0:	movw	r0, #49816	; 0xc298
   12cc4:	movt	r0, #5
   12cc8:	bx	lr
   12ccc:	movw	r0, #49896	; 0xc2e8
   12cd0:	movt	r0, #5
   12cd4:	bx	lr
   12cd8:	movw	r0, #49748	; 0xc254
   12cdc:	movt	r0, #5
   12ce0:	bx	lr
   12ce4:	movw	r0, #50196	; 0xc414
   12ce8:	movt	r0, #5
   12cec:	bx	lr
   12cf0:	movw	r0, #49764	; 0xc264
   12cf4:	movt	r0, #5
   12cf8:	bx	lr
   12cfc:	movw	r0, #50044	; 0xc37c
   12d00:	movt	r0, #5
   12d04:	bx	lr
   12d08:	movw	r0, #50176	; 0xc400
   12d0c:	movt	r0, #5
   12d10:	bx	lr
   12d14:	movw	r0, #49912	; 0xc2f8
   12d18:	movt	r0, #5
   12d1c:	bx	lr
   12d20:	movw	r0, #50024	; 0xc368
   12d24:	movt	r0, #5
   12d28:	bx	lr
   12d2c:	movw	r0, #50096	; 0xc3b0
   12d30:	movt	r0, #5
   12d34:	bx	lr
   12d38:	movw	r0, #49700	; 0xc224
   12d3c:	movt	r0, #5
   12d40:	bx	lr
   12d44:	movw	r0, #50080	; 0xc3a0
   12d48:	movt	r0, #5
   12d4c:	bx	lr
   12d50:	movw	r0, #50060	; 0xc38c
   12d54:	movt	r0, #5
   12d58:	bx	lr
   12d5c:	movw	r0, #49940	; 0xc314
   12d60:	movt	r0, #5
   12d64:	bx	lr
   12d68:	movw	r0, #50156	; 0xc3ec
   12d6c:	movt	r0, #5
   12d70:	bx	lr
   12d74:	movw	r0, #50012	; 0xc35c
   12d78:	movt	r0, #5
   12d7c:	bx	lr
   12d80:	movw	r0, #49732	; 0xc244
   12d84:	movt	r0, #5
   12d88:	bx	lr
   12d8c:	movw	r0, #50232	; 0xc438
   12d90:	movt	r0, #5
   12d94:	bx	lr
   12d98:	movw	r0, #49796	; 0xc284
   12d9c:	movt	r0, #5
   12da0:	bx	lr
   12da4:	movw	r0, #49876	; 0xc2d4
   12da8:	movt	r0, #5
   12dac:	bx	lr
   12db0:	movw	r0, #49976	; 0xc338
   12db4:	movt	r0, #5
   12db8:	bx	lr
   12dbc:	movw	r0, #49836	; 0xc2ac
   12dc0:	movt	r0, #5
   12dc4:	bx	lr
   12dc8:	movw	r0, #50116	; 0xc3c4
   12dcc:	movt	r0, #5
   12dd0:	bx	lr
   12dd4:	cmp	r0, #1610612745	; 0x60000009
   12dd8:	beq	12f64 <__assert_fail@plt+0x1b60>
   12ddc:	bls	12e34 <__assert_fail@plt+0x1a30>
   12de0:	mov	r3, #20
   12de4:	movt	r3, #24576	; 0x6000
   12de8:	cmp	r0, r3
   12dec:	beq	12f78 <__assert_fail@plt+0x1b74>
   12df0:	bhi	12e90 <__assert_fail@plt+0x1a8c>
   12df4:	mov	r3, #17
   12df8:	movt	r3, #24576	; 0x6000
   12dfc:	cmp	r0, r3
   12e00:	beq	12edc <__assert_fail@plt+0x1ad8>
   12e04:	bls	12f18 <__assert_fail@plt+0x1b14>
   12e08:	mov	r3, #18
   12e0c:	movt	r3, #24576	; 0x6000
   12e10:	cmp	r0, r3
   12e14:	beq	12f34 <__assert_fail@plt+0x1b30>
   12e18:	mov	r3, #19
   12e1c:	movt	r3, #24576	; 0x6000
   12e20:	cmp	r0, r3
   12e24:	bne	12f70 <__assert_fail@plt+0x1b6c>
   12e28:	movw	r0, #50792	; 0xc668
   12e2c:	movt	r0, #5
   12e30:	bx	lr
   12e34:	cmp	r0, #1610612740	; 0x60000004
   12e38:	beq	12f58 <__assert_fail@plt+0x1b54>
   12e3c:	bhi	12e68 <__assert_fail@plt+0x1a64>
   12e40:	cmp	r0, #1610612737	; 0x60000001
   12e44:	beq	12ec4 <__assert_fail@plt+0x1ac0>
   12e48:	bls	12ee8 <__assert_fail@plt+0x1ae4>
   12e4c:	cmp	r0, #1610612738	; 0x60000002
   12e50:	beq	12f40 <__assert_fail@plt+0x1b3c>
   12e54:	cmp	r0, #1610612739	; 0x60000003
   12e58:	bne	12f70 <__assert_fail@plt+0x1b6c>
   12e5c:	movw	r0, #50644	; 0xc5d4
   12e60:	movt	r0, #5
   12e64:	bx	lr
   12e68:	cmp	r0, #1610612742	; 0x60000006
   12e6c:	beq	12eb8 <__assert_fail@plt+0x1ab4>
   12e70:	bcc	12f90 <__assert_fail@plt+0x1b8c>
   12e74:	cmp	r0, #1610612743	; 0x60000007
   12e78:	beq	12f84 <__assert_fail@plt+0x1b80>
   12e7c:	cmp	r0, #1610612744	; 0x60000008
   12e80:	bne	12f70 <__assert_fail@plt+0x1b6c>
   12e84:	movw	r0, #50728	; 0xc628
   12e88:	movt	r0, #5
   12e8c:	bx	lr
   12e90:	cmp	r0, #1879048192	; 0x70000000
   12e94:	beq	12ed0 <__assert_fail@plt+0x1acc>
   12e98:	bls	12efc <__assert_fail@plt+0x1af8>
   12e9c:	cmp	r0, #1879048193	; 0x70000001
   12ea0:	beq	12f4c <__assert_fail@plt+0x1b48>
   12ea4:	cmp	r0, #1879048194	; 0x70000002
   12ea8:	bne	12f70 <__assert_fail@plt+0x1b6c>
   12eac:	movw	r0, #50868	; 0xc6b4
   12eb0:	movt	r0, #5
   12eb4:	bx	lr
   12eb8:	movw	r0, #50692	; 0xc604
   12ebc:	movt	r0, #5
   12ec0:	bx	lr
   12ec4:	movw	r0, #50612	; 0xc5b4
   12ec8:	movt	r0, #5
   12ecc:	bx	lr
   12ed0:	movw	r0, #50836	; 0xc694
   12ed4:	movt	r0, #5
   12ed8:	bx	lr
   12edc:	movw	r0, #50764	; 0xc64c
   12ee0:	movt	r0, #5
   12ee4:	bx	lr
   12ee8:	cmp	r0, #1610612736	; 0x60000000
   12eec:	bne	12f70 <__assert_fail@plt+0x1b6c>
   12ef0:	movw	r0, #50604	; 0xc5ac
   12ef4:	movt	r0, #5
   12ef8:	bx	lr
   12efc:	mov	r3, #21
   12f00:	movt	r3, #24576	; 0x6000
   12f04:	cmp	r0, r3
   12f08:	bne	12f70 <__assert_fail@plt+0x1b6c>
   12f0c:	movw	r0, #50820	; 0xc684
   12f10:	movt	r0, #5
   12f14:	bx	lr
   12f18:	mov	r3, #16
   12f1c:	movt	r3, #24576	; 0x6000
   12f20:	cmp	r0, r3
   12f24:	bne	12f70 <__assert_fail@plt+0x1b6c>
   12f28:	movw	r0, #50752	; 0xc640
   12f2c:	movt	r0, #5
   12f30:	bx	lr
   12f34:	movw	r0, #50776	; 0xc658
   12f38:	movt	r0, #5
   12f3c:	bx	lr
   12f40:	movw	r0, #50628	; 0xc5c4
   12f44:	movt	r0, #5
   12f48:	bx	lr
   12f4c:	movw	r0, #50852	; 0xc6a4
   12f50:	movt	r0, #5
   12f54:	bx	lr
   12f58:	movw	r0, #50660	; 0xc5e4
   12f5c:	movt	r0, #5
   12f60:	bx	lr
   12f64:	movw	r0, #50740	; 0xc634
   12f68:	movt	r0, #5
   12f6c:	bx	lr
   12f70:	mov	r0, #0
   12f74:	bx	lr
   12f78:	movw	r0, #50808	; 0xc678
   12f7c:	movt	r0, #5
   12f80:	bx	lr
   12f84:	movw	r0, #50712	; 0xc618
   12f88:	movt	r0, #5
   12f8c:	bx	lr
   12f90:	movw	r0, #50676	; 0xc5f4
   12f94:	movt	r0, #5
   12f98:	bx	lr
   12f9c:	ldrd	r2, [r0]
   12fa0:	ldrd	r0, [r1]
   12fa4:	cmp	r3, r1
   12fa8:	cmpeq	r2, r0
   12fac:	bhi	12fbc <__assert_fail@plt+0x1bb8>
   12fb0:	movcs	r0, #0
   12fb4:	mvncc	r0, #0
   12fb8:	bx	lr
   12fbc:	mov	r0, #1
   12fc0:	bx	lr
   12fc4:	movw	r3, #16712	; 0x4148
   12fc8:	movt	r3, #9
   12fcc:	ldrh	r3, [r3, #50]	; 0x32
   12fd0:	cmp	r3, #92	; 0x5c
   12fd4:	beq	1300c <__assert_fail@plt+0x1c08>
   12fd8:	bhi	1301c <__assert_fail@plt+0x1c18>
   12fdc:	cmp	r3, #21
   12fe0:	beq	1311c <__assert_fail@plt+0x1d18>
   12fe4:	bhi	1308c <__assert_fail@plt+0x1c88>
   12fe8:	cmp	r3, #6
   12fec:	beq	130ec <__assert_fail@plt+0x1ce8>
   12ff0:	bls	13160 <__assert_fail@plt+0x1d5c>
   12ff4:	cmp	r3, #18
   12ff8:	beq	1310c <__assert_fail@plt+0x1d08>
   12ffc:	cmp	r3, #20
   13000:	beq	1311c <__assert_fail@plt+0x1d18>
   13004:	cmp	r3, #15
   13008:	bne	13048 <__assert_fail@plt+0x1c44>
   1300c:	subs	ip, r0, #9
   13010:	rsbs	r0, ip, #0
   13014:	adcs	r0, r0, ip
   13018:	bx	lr
   1301c:	cmp	r3, #191	; 0xbf
   13020:	beq	1310c <__assert_fail@plt+0x1d08>
   13024:	bhi	13050 <__assert_fail@plt+0x1c4c>
   13028:	cmp	r3, #181	; 0xb5
   1302c:	bls	130bc <__assert_fail@plt+0x1cb8>
   13030:	cmp	r3, #188	; 0xbc
   13034:	beq	13170 <__assert_fail@plt+0x1d6c>
   13038:	cmp	r3, #189	; 0xbd
   1303c:	beq	130ec <__assert_fail@plt+0x1ce8>
   13040:	cmp	r3, #183	; 0xb7
   13044:	beq	131ac <__assert_fail@plt+0x1da8>
   13048:	mov	r0, #0
   1304c:	bx	lr
   13050:	movw	r2, #4643	; 0x1223
   13054:	cmp	r3, r2
   13058:	beq	1310c <__assert_fail@plt+0x1d08>
   1305c:	bhi	1312c <__assert_fail@plt+0x1d28>
   13060:	cmp	r3, #221	; 0xdd
   13064:	beq	1310c <__assert_fail@plt+0x1d08>
   13068:	sub	r2, r2, #460	; 0x1cc
   1306c:	cmp	r3, r2
   13070:	beq	1319c <__assert_fail@plt+0x1d98>
   13074:	cmp	r3, #195	; 0xc3
   13078:	bne	13048 <__assert_fail@plt+0x1c44>
   1307c:	subs	r1, r0, #49	; 0x31
   13080:	rsbs	r0, r1, #0
   13084:	adcs	r0, r0, r1
   13088:	bx	lr
   1308c:	cmp	r3, #42	; 0x2a
   13090:	beq	130ec <__assert_fail@plt+0x1ce8>
   13094:	bhi	130e4 <__assert_fail@plt+0x1ce0>
   13098:	cmp	r3, #23
   1309c:	beq	131c0 <__assert_fail@plt+0x1dbc>
   130a0:	bcc	13180 <__assert_fail@plt+0x1d7c>
   130a4:	cmp	r3, #40	; 0x28
   130a8:	bne	13048 <__assert_fail@plt+0x1c44>
   130ac:	subs	r2, r0, #3
   130b0:	rsbs	r0, r2, #0
   130b4:	adcs	r0, r0, r2
   130b8:	bx	lr
   130bc:	cmp	r3, #180	; 0xb4
   130c0:	bcs	130ec <__assert_fail@plt+0x1ce8>
   130c4:	cmp	r3, #93	; 0x5d
   130c8:	beq	1307c <__assert_fail@plt+0x1c78>
   130cc:	cmp	r3, #94	; 0x5e
   130d0:	bne	13048 <__assert_fail@plt+0x1c44>
   130d4:	subs	r3, r0, #14
   130d8:	rsbs	r0, r3, #0
   130dc:	adcs	r0, r0, r3
   130e0:	bx	lr
   130e4:	cmp	r3, #62	; 0x3e
   130e8:	bne	130fc <__assert_fail@plt+0x1cf8>
   130ec:	subs	r2, r0, #2
   130f0:	rsbs	r0, r2, #0
   130f4:	adcs	r0, r0, r2
   130f8:	bx	lr
   130fc:	cmp	r3, #83	; 0x53
   13100:	beq	1319c <__assert_fail@plt+0x1d98>
   13104:	cmp	r3, #43	; 0x2b
   13108:	bne	13048 <__assert_fail@plt+0x1c44>
   1310c:	subs	r1, r0, #6
   13110:	rsbs	r0, r1, #0
   13114:	adcs	r0, r0, r1
   13118:	bx	lr
   1311c:	subs	r1, r0, #26
   13120:	rsbs	r0, r1, #0
   13124:	adcs	r0, r0, r1
   13128:	bx	lr
   1312c:	movw	r2, #41872	; 0xa390
   13130:	cmp	r3, r2
   13134:	beq	13180 <__assert_fail@plt+0x1d7c>
   13138:	movw	r2, #43975	; 0xabc7
   1313c:	cmp	r3, r2
   13140:	beq	130d4 <__assert_fail@plt+0x1cd0>
   13144:	movw	r2, #36902	; 0x9026
   13148:	cmp	r3, r2
   1314c:	bne	13048 <__assert_fail@plt+0x1c44>
   13150:	subs	ip, r0, #10
   13154:	rsbs	r0, ip, #0
   13158:	adcs	r0, r0, ip
   1315c:	bx	lr
   13160:	cmp	r3, #3
   13164:	beq	130ec <__assert_fail@plt+0x1ce8>
   13168:	cmp	r3, #4
   1316c:	bne	13190 <__assert_fail@plt+0x1d8c>
   13170:	subs	ip, r0, #4
   13174:	rsbs	r0, ip, #0
   13178:	adcs	r0, r0, ip
   1317c:	bx	lr
   13180:	subs	r2, r0, #5
   13184:	rsbs	r0, r2, #0
   13188:	adcs	r0, r0, r2
   1318c:	bx	lr
   13190:	cmp	r3, #2
   13194:	bne	13048 <__assert_fail@plt+0x1c44>
   13198:	b	1310c <__assert_fail@plt+0x1d08>
   1319c:	subs	r3, r0, #36	; 0x24
   131a0:	rsbs	r0, r3, #0
   131a4:	adcs	r0, r0, r3
   131a8:	bx	lr
   131ac:	movw	r3, #261	; 0x105
   131b0:	subs	r3, r0, r3
   131b4:	rsbs	r0, r3, #0
   131b8:	adcs	r0, r0, r3
   131bc:	bx	lr
   131c0:	subs	r3, r0, #13
   131c4:	rsbs	r0, r3, #0
   131c8:	adcs	r0, r0, r3
   131cc:	bx	lr
   131d0:	movw	r3, #16712	; 0x4148
   131d4:	movt	r3, #9
   131d8:	ldrh	r3, [r3, #50]	; 0x32
   131dc:	cmp	r3, #50	; 0x32
   131e0:	beq	132e0 <__assert_fail@plt+0x1edc>
   131e4:	bls	13224 <__assert_fail@plt+0x1e20>
   131e8:	cmp	r3, #183	; 0xb7
   131ec:	beq	13258 <__assert_fail@plt+0x1e54>
   131f0:	bls	132a8 <__assert_fail@plt+0x1ea4>
   131f4:	movw	r2, #36902	; 0x9026
   131f8:	cmp	r3, r2
   131fc:	beq	13268 <__assert_fail@plt+0x1e64>
   13200:	movw	r2, #41872	; 0xa390
   13204:	cmp	r3, r2
   13208:	beq	13278 <__assert_fail@plt+0x1e74>
   1320c:	cmp	r3, #191	; 0xbf
   13210:	bne	132f0 <__assert_fail@plt+0x1eec>
   13214:	subs	r3, r0, #5
   13218:	rsbs	r0, r3, #0
   1321c:	adcs	r0, r0, r3
   13220:	bx	lr
   13224:	cmp	r3, #18
   13228:	beq	132d0 <__assert_fail@plt+0x1ecc>
   1322c:	bls	13288 <__assert_fail@plt+0x1e84>
   13230:	cmp	r3, #22
   13234:	beq	13278 <__assert_fail@plt+0x1e74>
   13238:	cmp	r3, #43	; 0x2b
   1323c:	beq	132d0 <__assert_fail@plt+0x1ecc>
   13240:	cmp	r3, #21
   13244:	bne	132f0 <__assert_fail@plt+0x1eec>
   13248:	subs	r3, r0, #44	; 0x2c
   1324c:	rsbs	r0, r3, #0
   13250:	adcs	r0, r0, r3
   13254:	bx	lr
   13258:	subs	r3, r0, #260	; 0x104
   1325c:	rsbs	r0, r3, #0
   13260:	adcs	r0, r0, r3
   13264:	bx	lr
   13268:	subs	ip, r0, #11
   1326c:	rsbs	r0, ip, #0
   13270:	adcs	r0, r0, ip
   13274:	bx	lr
   13278:	subs	r2, r0, #23
   1327c:	rsbs	r0, r2, #0
   13280:	adcs	r0, r0, r2
   13284:	bx	lr
   13288:	cmp	r3, #2
   1328c:	beq	132d0 <__assert_fail@plt+0x1ecc>
   13290:	cmp	r3, #15
   13294:	bne	132f0 <__assert_fail@plt+0x1eec>
   13298:	subs	r2, r0, #72	; 0x48
   1329c:	rsbs	r0, r2, #0
   132a0:	adcs	r0, r0, r2
   132a4:	bx	lr
   132a8:	cmp	r3, #62	; 0x3e
   132ac:	beq	132c0 <__assert_fail@plt+0x1ebc>
   132b0:	bcc	132f0 <__assert_fail@plt+0x1eec>
   132b4:	sub	r3, r3, #180	; 0xb4
   132b8:	cmp	r3, #1
   132bc:	bhi	132f0 <__assert_fail@plt+0x1eec>
   132c0:	subs	r1, r0, #24
   132c4:	rsbs	r0, r1, #0
   132c8:	adcs	r0, r0, r1
   132cc:	bx	lr
   132d0:	subs	ip, r0, #46	; 0x2e
   132d4:	rsbs	r0, ip, #0
   132d8:	adcs	r0, r0, ip
   132dc:	bx	lr
   132e0:	subs	r1, r0, #79	; 0x4f
   132e4:	rsbs	r0, r1, #0
   132e8:	adcs	r0, r0, r1
   132ec:	bx	lr
   132f0:	mov	r0, #0
   132f4:	bx	lr
   132f8:	subs	r2, r0, #0
   132fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13300:	beq	1340c <__assert_fail@plt+0x2008>
   13304:	movw	r3, #16712	; 0x4148
   13308:	movt	r3, #9
   1330c:	ldr	r0, [r3, #212]	; 0xd4
   13310:	cmp	r0, #0
   13314:	beq	13420 <__assert_fail@plt+0x201c>
   13318:	ldr	r2, [r2]
   1331c:	ldr	r3, [r3, #216]	; 0xd8
   13320:	cmp	r2, r3
   13324:	addcc	r0, r0, r2
   13328:	bcs	133f4 <__assert_fail@plt+0x1ff0>
   1332c:	movw	r6, #62012	; 0xf23c
   13330:	movw	r7, #19132	; 0x4abc
   13334:	ldr	r2, [pc, #248]	; 13434 <__assert_fail@plt+0x2030>
   13338:	movt	r6, #7
   1333c:	movt	r7, #5
   13340:	mov	r1, #128	; 0x80
   13344:	mov	sl, #60	; 0x3c
   13348:	mov	r9, #62	; 0x3e
   1334c:	mov	r8, #94	; 0x5e
   13350:	b	13374 <__assert_fail@plt+0x1f70>
   13354:	cmp	r1, #1
   13358:	sub	r1, r1, #2
   1335c:	bls	133b8 <__assert_fail@plt+0x1fb4>
   13360:	strb	r8, [r4], #2
   13364:	strb	r5, [r2, #1]
   13368:	mov	r2, r4
   1336c:	cmp	r1, #0
   13370:	beq	133b8 <__assert_fail@plt+0x1fb4>
   13374:	ldrb	r3, [r0], #1
   13378:	mov	r4, r2
   1337c:	cmp	r3, #0
   13380:	add	r5, r3, #64	; 0x40
   13384:	lsl	ip, r3, #1
   13388:	beq	133b8 <__assert_fail@plt+0x1fb4>
   1338c:	ldrh	ip, [r6, ip]
   13390:	tst	ip, #2
   13394:	bne	13354 <__assert_fail@plt+0x1f50>
   13398:	tst	ip, #16
   1339c:	and	r4, r3, #15
   133a0:	beq	133c8 <__assert_fail@plt+0x1fc4>
   133a4:	sub	r1, r1, #1
   133a8:	strb	r3, [r2]
   133ac:	cmp	r1, #0
   133b0:	add	r2, r2, #1
   133b4:	bne	13374 <__assert_fail@plt+0x1f70>
   133b8:	mov	r3, #0
   133bc:	ldr	r0, [pc, #112]	; 13434 <__assert_fail@plt+0x2030>
   133c0:	strb	r3, [r2]
   133c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133c8:	cmp	r1, #3
   133cc:	sub	r1, r1, #4
   133d0:	bls	133b8 <__assert_fail@plt+0x1fb4>
   133d4:	ldrb	ip, [r7, r3, lsr #4]
   133d8:	add	r2, r2, #4
   133dc:	ldrb	r3, [r7, r4]
   133e0:	strb	sl, [r2, #-4]
   133e4:	strb	ip, [r2, #-3]
   133e8:	strb	r3, [r2, #-2]
   133ec:	strb	r9, [r2, #-1]
   133f0:	b	1336c <__assert_fail@plt+0x1f68>
   133f4:	movw	r1, #50908	; 0xc6dc
   133f8:	mov	r2, #5
   133fc:	movt	r1, #5
   13400:	mov	r0, #0
   13404:	bl	11170 <dcgettext@plt>
   13408:	b	1332c <__assert_fail@plt+0x1f28>
   1340c:	movw	r1, #50888	; 0xc6c8
   13410:	mov	r2, #5
   13414:	movt	r1, #5
   13418:	bl	11170 <dcgettext@plt>
   1341c:	b	1332c <__assert_fail@plt+0x1f28>
   13420:	movw	r1, #50896	; 0xc6d0
   13424:	mov	r2, #5
   13428:	movt	r1, #5
   1342c:	bl	11170 <dcgettext@plt>
   13430:	b	1332c <__assert_fail@plt+0x1f28>
   13434:	muleq	r9, r8, r1
   13438:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1343c:	movw	r6, #16712	; 0x4148
   13440:	movt	r6, #9
   13444:	mov	r8, r0
   13448:	ldr	r3, [r6, #68]	; 0x44
   1344c:	cmp	r3, #0
   13450:	beq	134cc <__assert_fail@plt+0x20c8>
   13454:	ldr	r4, [r6, #220]	; 0xdc
   13458:	mov	r5, #0
   1345c:	mov	r9, r6
   13460:	b	13488 <__assert_fail@plt+0x2084>
   13464:	mov	r1, r8
   13468:	add	r5, r5, #1
   1346c:	bl	110f8 <strcmp@plt>
   13470:	add	r4, r4, #72	; 0x48
   13474:	cmp	r0, #0
   13478:	beq	134d0 <__assert_fail@plt+0x20cc>
   1347c:	ldr	r3, [r6, #68]	; 0x44
   13480:	cmp	r3, r5
   13484:	bls	134cc <__assert_fail@plt+0x20c8>
   13488:	cmp	r4, #0
   1348c:	mov	r7, r4
   13490:	beq	134d8 <__assert_fail@plt+0x20d4>
   13494:	ldr	r0, [r6, #212]	; 0xd4
   13498:	cmp	r0, #0
   1349c:	beq	134f0 <__assert_fail@plt+0x20ec>
   134a0:	ldr	r2, [r4]
   134a4:	ldr	r1, [r9, #216]	; 0xd8
   134a8:	add	r0, r0, r2
   134ac:	cmp	r2, r1
   134b0:	bcc	13464 <__assert_fail@plt+0x2060>
   134b4:	movw	r1, #50908	; 0xc6dc
   134b8:	mov	r2, #5
   134bc:	movt	r1, #5
   134c0:	mov	r0, #0
   134c4:	bl	11170 <dcgettext@plt>
   134c8:	b	13464 <__assert_fail@plt+0x2060>
   134cc:	mov	r7, #0
   134d0:	mov	r0, r7
   134d4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   134d8:	movw	r1, #50888	; 0xc6c8
   134dc:	mov	r0, r4
   134e0:	movt	r1, #5
   134e4:	mov	r2, #5
   134e8:	bl	11170 <dcgettext@plt>
   134ec:	b	13464 <__assert_fail@plt+0x2060>
   134f0:	movw	r1, #50896	; 0xc6d0
   134f4:	mov	r2, #5
   134f8:	movt	r1, #5
   134fc:	bl	11170 <dcgettext@plt>
   13500:	b	13464 <__assert_fail@plt+0x2060>
   13504:	push	{r3, r4, r5, r6, r7, lr}
   13508:	subs	r5, r1, #0
   1350c:	mov	r6, r0
   13510:	movwne	r4, #16712	; 0x4148
   13514:	movtne	r4, #9
   13518:	beq	13594 <__assert_fail@plt+0x2190>
   1351c:	ldr	r3, [r5], #4
   13520:	cmp	r3, #0
   13524:	add	r2, r3, r3, lsl #3
   13528:	beq	13594 <__assert_fail@plt+0x2190>
   1352c:	ldr	ip, [r4, #68]	; 0x44
   13530:	cmp	r3, ip
   13534:	bcs	1351c <__assert_fail@plt+0x2118>
   13538:	ldr	r3, [r4, #220]	; 0xdc
   1353c:	adds	r7, r3, r2, lsl #3
   13540:	beq	135a0 <__assert_fail@plt+0x219c>
   13544:	ldr	r0, [r4, #212]	; 0xd4
   13548:	cmp	r0, #0
   1354c:	beq	135b8 <__assert_fail@plt+0x21b4>
   13550:	ldr	r3, [r3, r2, lsl #3]
   13554:	ldr	r2, [r4, #216]	; 0xd8
   13558:	add	r0, r0, r3
   1355c:	cmp	r3, r2
   13560:	bcs	1357c <__assert_fail@plt+0x2178>
   13564:	mov	r1, r6
   13568:	bl	110f8 <strcmp@plt>
   1356c:	cmp	r0, #0
   13570:	bne	1351c <__assert_fail@plt+0x2118>
   13574:	mov	r0, r7
   13578:	pop	{r3, r4, r5, r6, r7, pc}
   1357c:	movw	r1, #50908	; 0xc6dc
   13580:	mov	r2, #5
   13584:	movt	r1, #5
   13588:	mov	r0, #0
   1358c:	bl	11170 <dcgettext@plt>
   13590:	b	13564 <__assert_fail@plt+0x2160>
   13594:	mov	r0, r6
   13598:	pop	{r3, r4, r5, r6, r7, lr}
   1359c:	b	13438 <__assert_fail@plt+0x2034>
   135a0:	movw	r1, #50888	; 0xc6c8
   135a4:	mov	r0, r7
   135a8:	movt	r1, #5
   135ac:	mov	r2, #5
   135b0:	bl	11170 <dcgettext@plt>
   135b4:	b	13564 <__assert_fail@plt+0x2160>
   135b8:	movw	r1, #50896	; 0xc6d0
   135bc:	mov	r2, #5
   135c0:	movt	r1, #5
   135c4:	bl	11170 <dcgettext@plt>
   135c8:	b	13564 <__assert_fail@plt+0x2160>
   135cc:	push	{r4, lr}
   135d0:	mov	r4, r0
   135d4:	sub	sp, sp, #8
   135d8:	cmp	r0, #4
   135dc:	ldrls	pc, [pc, r0, lsl #2]
   135e0:	b	13684 <__assert_fail@plt+0x2280>
   135e4:	andeq	r3, r1, r4, lsl r6
   135e8:	andeq	r3, r1, r0, lsr r6
   135ec:	andeq	r3, r1, ip, asr #12
   135f0:	andeq	r3, r1, r8, ror #12
   135f4:	strdeq	r3, [r1], -r8
   135f8:	movw	r1, #51008	; 0xc740
   135fc:	mov	r0, #0
   13600:	movt	r1, #5
   13604:	mov	r2, #5
   13608:	add	sp, sp, #8
   1360c:	pop	{r4, lr}
   13610:	b	11170 <dcgettext@plt>
   13614:	movw	r1, #50920	; 0xc6e8
   13618:	mov	r0, #0
   1361c:	movt	r1, #5
   13620:	mov	r2, #5
   13624:	add	sp, sp, #8
   13628:	pop	{r4, lr}
   1362c:	b	11170 <dcgettext@plt>
   13630:	movw	r1, #50932	; 0xc6f4
   13634:	mov	r0, #0
   13638:	movt	r1, #5
   1363c:	mov	r2, #5
   13640:	add	sp, sp, #8
   13644:	pop	{r4, lr}
   13648:	b	11170 <dcgettext@plt>
   1364c:	movw	r1, #50956	; 0xc70c
   13650:	mov	r0, #0
   13654:	movt	r1, #5
   13658:	mov	r2, #5
   1365c:	add	sp, sp, #8
   13660:	pop	{r4, lr}
   13664:	b	11170 <dcgettext@plt>
   13668:	movw	r1, #50980	; 0xc724
   1366c:	mov	r0, #0
   13670:	movt	r1, #5
   13674:	mov	r2, #5
   13678:	add	sp, sp, #8
   1367c:	pop	{r4, lr}
   13680:	b	11170 <dcgettext@plt>
   13684:	sub	r3, r0, #65280	; 0xff00
   13688:	cmp	r3, #255	; 0xff
   1368c:	movwls	r1, #51028	; 0xc754
   13690:	movls	r0, #0
   13694:	movtls	r1, #5
   13698:	bls	136bc <__assert_fail@plt+0x22b8>
   1369c:	sub	r3, r4, #65024	; 0xfe00
   136a0:	cmp	r3, #255	; 0xff
   136a4:	movwls	r1, #51056	; 0xc770
   136a8:	movwhi	r1, #51076	; 0xc784
   136ac:	movtls	r1, #5
   136b0:	movthi	r1, #5
   136b4:	movls	r0, #0
   136b8:	movhi	r0, #0
   136bc:	mov	r2, #5
   136c0:	bl	11170 <dcgettext@plt>
   136c4:	mov	r1, #32
   136c8:	str	r4, [sp, #4]
   136cc:	mov	r3, r1
   136d0:	mov	r2, #1
   136d4:	str	r0, [sp]
   136d8:	ldr	r0, [pc, #12]	; 136ec <__assert_fail@plt+0x22e8>
   136dc:	bl	113f8 <__snprintf_chk@plt>
   136e0:	ldr	r0, [pc, #4]	; 136ec <__assert_fail@plt+0x22e8>
   136e4:	add	sp, sp, #8
   136e8:	pop	{r4, pc}
   136ec:	andeq	r4, r9, r8, lsr #4
   136f0:	cmp	r0, #102	; 0x66
   136f4:	push	{r4, lr}
   136f8:	mov	r4, r0
   136fc:	sub	sp, sp, #8
   13700:	beq	1434c <__assert_fail@plt+0x2f48>
   13704:	bhi	13768 <__assert_fail@plt+0x2364>
   13708:	cmp	r0, #58	; 0x3a
   1370c:	beq	13db4 <__assert_fail@plt+0x29b0>
   13710:	bhi	137c8 <__assert_fail@plt+0x23c4>
   13714:	cmp	r0, #36	; 0x24
   13718:	beq	14358 <__assert_fail@plt+0x2f54>
   1371c:	bls	138bc <__assert_fail@plt+0x24b8>
   13720:	cmp	r0, #47	; 0x2f
   13724:	beq	14404 <__assert_fail@plt+0x3000>
   13728:	bhi	13a10 <__assert_fail@plt+0x260c>
   1372c:	cmp	r0, #41	; 0x29
   13730:	beq	143f8 <__assert_fail@plt+0x2ff4>
   13734:	bls	13c7c <__assert_fail@plt+0x2878>
   13738:	cmp	r0, #44	; 0x2c
   1373c:	beq	143d4 <__assert_fail@plt+0x2fd0>
   13740:	bhi	13f8c <__assert_fail@plt+0x2b88>
   13744:	cmp	r0, #42	; 0x2a
   13748:	movweq	r0, #51380	; 0xc8b4
   1374c:	movteq	r0, #5
   13750:	beq	13b38 <__assert_fail@plt+0x2734>
   13754:	cmp	r4, #43	; 0x2b
   13758:	movweq	r0, #51400	; 0xc8c8
   1375c:	movteq	r0, #5
   13760:	beq	13b38 <__assert_fail@plt+0x2734>
   13764:	b	13948 <__assert_fail@plt+0x2544>
   13768:	cmp	r0, #174	; 0xae
   1376c:	beq	1437c <__assert_fail@plt+0x2f78>
   13770:	bhi	1381c <__assert_fail@plt+0x2418>
   13774:	cmp	r0, #135	; 0x87
   13778:	beq	14388 <__assert_fail@plt+0x2f84>
   1377c:	bls	13874 <__assert_fail@plt+0x2470>
   13780:	cmp	r0, #163	; 0xa3
   13784:	beq	1444c <__assert_fail@plt+0x3048>
   13788:	bhi	13a4c <__assert_fail@plt+0x2648>
   1378c:	cmp	r0, #140	; 0x8c
   13790:	beq	14440 <__assert_fail@plt+0x303c>
   13794:	bls	13b8c <__assert_fail@plt+0x2788>
   13798:	cmp	r0, #160	; 0xa0
   1379c:	beq	142e0 <__assert_fail@plt+0x2edc>
   137a0:	bhi	13efc <__assert_fail@plt+0x2af8>
   137a4:	cmp	r0, #141	; 0x8d
   137a8:	movweq	r0, #54120	; 0xd368
   137ac:	movteq	r0, #5
   137b0:	beq	13b38 <__assert_fail@plt+0x2734>
   137b4:	cmp	r4, #142	; 0x8e
   137b8:	movweq	r0, #54164	; 0xd394
   137bc:	movteq	r0, #5
   137c0:	beq	13b38 <__assert_fail@plt+0x2734>
   137c4:	b	13948 <__assert_fail@plt+0x2544>
   137c8:	cmp	r0, #80	; 0x50
   137cc:	beq	14364 <__assert_fail@plt+0x2f60>
   137d0:	bhi	13904 <__assert_fail@plt+0x2500>
   137d4:	cmp	r0, #69	; 0x45
   137d8:	beq	14340 <__assert_fail@plt+0x2f3c>
   137dc:	bhi	139d4 <__assert_fail@plt+0x25d0>
   137e0:	cmp	r0, #63	; 0x3f
   137e4:	beq	14334 <__assert_fail@plt+0x2f30>
   137e8:	bls	13c4c <__assert_fail@plt+0x2848>
   137ec:	cmp	r0, #66	; 0x42
   137f0:	beq	142ec <__assert_fail@plt+0x2ee8>
   137f4:	bhi	13f20 <__assert_fail@plt+0x2b1c>
   137f8:	cmp	r0, #64	; 0x40
   137fc:	movweq	r0, #52008	; 0xcb28
   13800:	movteq	r0, #5
   13804:	beq	13b38 <__assert_fail@plt+0x2734>
   13808:	cmp	r4, #65	; 0x41
   1380c:	movweq	r0, #52040	; 0xcb48
   13810:	movteq	r0, #5
   13814:	beq	13b38 <__assert_fail@plt+0x2734>
   13818:	b	13948 <__assert_fail@plt+0x2544>
   1381c:	movw	r3, #4643	; 0x1223
   13820:	cmp	r0, r3
   13824:	beq	14370 <__assert_fail@plt+0x2f6c>
   13828:	bhi	13980 <__assert_fail@plt+0x257c>
   1382c:	cmp	r0, #187	; 0xbb
   13830:	beq	143c8 <__assert_fail@plt+0x2fc4>
   13834:	bhi	13b00 <__assert_fail@plt+0x26fc>
   13838:	cmp	r0, #179	; 0xb3
   1383c:	beq	143bc <__assert_fail@plt+0x2fb8>
   13840:	bls	13d6c <__assert_fail@plt+0x2968>
   13844:	cmp	r0, #183	; 0xb7
   13848:	beq	14428 <__assert_fail@plt+0x3024>
   1384c:	bhi	13f44 <__assert_fail@plt+0x2b40>
   13850:	cmp	r0, #180	; 0xb4
   13854:	movweq	r0, #52836	; 0xce64
   13858:	movteq	r0, #5
   1385c:	beq	13b38 <__assert_fail@plt+0x2734>
   13860:	cmp	r4, #181	; 0xb5
   13864:	movweq	r0, #52848	; 0xce70
   13868:	movteq	r0, #5
   1386c:	beq	13b38 <__assert_fail@plt+0x2734>
   13870:	b	13948 <__assert_fail@plt+0x2544>
   13874:	cmp	r0, #113	; 0x71
   13878:	beq	14304 <__assert_fail@plt+0x2f00>
   1387c:	bhi	13ac4 <__assert_fail@plt+0x26c0>
   13880:	cmp	r0, #107	; 0x6b
   13884:	beq	142f8 <__assert_fail@plt+0x2ef4>
   13888:	bls	13bbc <__assert_fail@plt+0x27b8>
   1388c:	cmp	r0, #110	; 0x6e
   13890:	beq	14434 <__assert_fail@plt+0x3030>
   13894:	bhi	13f68 <__assert_fail@plt+0x2b64>
   13898:	cmp	r0, #108	; 0x6c
   1389c:	movweq	r0, #53516	; 0xd10c
   138a0:	movteq	r0, #5
   138a4:	beq	13b38 <__assert_fail@plt+0x2734>
   138a8:	cmp	r4, #109	; 0x6d
   138ac:	movweq	r0, #53548	; 0xd12c
   138b0:	movteq	r0, #5
   138b4:	beq	13b38 <__assert_fail@plt+0x2734>
   138b8:	b	13948 <__assert_fail@plt+0x2544>
   138bc:	cmp	r0, #9
   138c0:	beq	14328 <__assert_fail@plt+0x2f24>
   138c4:	bhi	13a88 <__assert_fail@plt+0x2684>
   138c8:	cmp	r0, #4
   138cc:	beq	1431c <__assert_fail@plt+0x2f18>
   138d0:	bhi	13d0c <__assert_fail@plt+0x2908>
   138d4:	cmp	r0, #1
   138d8:	beq	141c0 <__assert_fail@plt+0x2dbc>
   138dc:	bcc	141a4 <__assert_fail@plt+0x2da0>
   138e0:	cmp	r0, #2
   138e4:	movweq	r0, #51108	; 0xc7a4
   138e8:	movteq	r0, #5
   138ec:	beq	13b38 <__assert_fail@plt+0x2734>
   138f0:	cmp	r4, #3
   138f4:	movweq	r0, #51120	; 0xc7b0
   138f8:	movteq	r0, #5
   138fc:	beq	13b38 <__assert_fail@plt+0x2734>
   13900:	b	13948 <__assert_fail@plt+0x2544>
   13904:	cmp	r0, #91	; 0x5b
   13908:	beq	14120 <__assert_fail@plt+0x2d1c>
   1390c:	bls	13dc0 <__assert_fail@plt+0x29bc>
   13910:	cmp	r0, #96	; 0x60
   13914:	beq	13d9c <__assert_fail@plt+0x2998>
   13918:	bls	13dfc <__assert_fail@plt+0x29f8>
   1391c:	cmp	r0, #99	; 0x63
   13920:	beq	14120 <__assert_fail@plt+0x2d1c>
   13924:	bhi	14064 <__assert_fail@plt+0x2c60>
   13928:	cmp	r0, #97	; 0x61
   1392c:	movweq	r0, #53168	; 0xcfb0
   13930:	movteq	r0, #5
   13934:	beq	13b38 <__assert_fail@plt+0x2734>
   13938:	cmp	r4, #98	; 0x62
   1393c:	movweq	r0, #53204	; 0xcfd4
   13940:	movteq	r0, #5
   13944:	beq	13b38 <__assert_fail@plt+0x2734>
   13948:	mov	r2, #5
   1394c:	movw	r1, #55328	; 0xd820
   13950:	mov	r0, #0
   13954:	movt	r1, #5
   13958:	bl	11170 <dcgettext@plt>
   1395c:	mov	r1, #64	; 0x40
   13960:	str	r4, [sp, #4]
   13964:	mov	r3, r1
   13968:	mov	r2, #1
   1396c:	str	r0, [sp]
   13970:	ldr	r0, [pc, #2784]	; 14458 <__assert_fail@plt+0x3054>
   13974:	bl	113f8 <__snprintf_chk@plt>
   13978:	ldr	r0, [pc, #2776]	; 14458 <__assert_fail@plt+0x3054>
   1397c:	b	13b38 <__assert_fail@plt+0x2734>
   13980:	movw	r3, #36992	; 0x9080
   13984:	cmp	r0, r3
   13988:	beq	14358 <__assert_fail@plt+0x2f54>
   1398c:	bhi	13b40 <__assert_fail@plt+0x273c>
   13990:	movw	r3, #23205	; 0x5aa5
   13994:	cmp	r0, r3
   13998:	beq	1428c <__assert_fail@plt+0x2e88>
   1399c:	bhi	13e84 <__assert_fail@plt+0x2a80>
   139a0:	movw	r3, #13104	; 0x3330
   139a4:	cmp	r0, r3
   139a8:	beq	13df0 <__assert_fail@plt+0x29ec>
   139ac:	bls	140cc <__assert_fail@plt+0x2cc8>
   139b0:	movw	r3, #18056	; 0x4688
   139b4:	cmp	r0, r3
   139b8:	beq	142bc <__assert_fail@plt+0x2eb8>
   139bc:	movw	r3, #21569	; 0x5441
   139c0:	cmp	r0, r3
   139c4:	movweq	r0, #51712	; 0xca00
   139c8:	movteq	r0, #5
   139cc:	beq	13b38 <__assert_fail@plt+0x2734>
   139d0:	b	13948 <__assert_fail@plt+0x2544>
   139d4:	cmp	r0, #74	; 0x4a
   139d8:	beq	14394 <__assert_fail@plt+0x2f90>
   139dc:	bls	13bec <__assert_fail@plt+0x27e8>
   139e0:	cmp	r0, #77	; 0x4d
   139e4:	beq	143e0 <__assert_fail@plt+0x2fdc>
   139e8:	bhi	13fb0 <__assert_fail@plt+0x2bac>
   139ec:	cmp	r0, #75	; 0x4b
   139f0:	movweq	r0, #52456	; 0xcce8
   139f4:	movteq	r0, #5
   139f8:	beq	13b38 <__assert_fail@plt+0x2734>
   139fc:	cmp	r4, #76	; 0x4c
   13a00:	movweq	r0, #52528	; 0xcd30
   13a04:	movteq	r0, #5
   13a08:	beq	13b38 <__assert_fail@plt+0x2734>
   13a0c:	b	13948 <__assert_fail@plt+0x2544>
   13a10:	cmp	r0, #52	; 0x34
   13a14:	beq	14280 <__assert_fail@plt+0x2e7c>
   13a18:	bls	13cdc <__assert_fail@plt+0x28d8>
   13a1c:	cmp	r0, #55	; 0x37
   13a20:	beq	14220 <__assert_fail@plt+0x2e1c>
   13a24:	bhi	13ff8 <__assert_fail@plt+0x2bf4>
   13a28:	cmp	r0, #53	; 0x35
   13a2c:	movweq	r0, #52240	; 0xcc10
   13a30:	movteq	r0, #5
   13a34:	beq	13b38 <__assert_fail@plt+0x2734>
   13a38:	cmp	r4, #54	; 0x36
   13a3c:	movweq	r0, #51740	; 0xca1c
   13a40:	movteq	r0, #5
   13a44:	beq	13b38 <__assert_fail@plt+0x2734>
   13a48:	b	13948 <__assert_fail@plt+0x2544>
   13a4c:	cmp	r0, #168	; 0xa8
   13a50:	beq	14198 <__assert_fail@plt+0x2d94>
   13a54:	bls	13c1c <__assert_fail@plt+0x2818>
   13a58:	cmp	r0, #171	; 0xab
   13a5c:	beq	14214 <__assert_fail@plt+0x2e10>
   13a60:	bhi	13fd4 <__assert_fail@plt+0x2bd0>
   13a64:	cmp	r0, #169	; 0xa9
   13a68:	movweq	r0, #54552	; 0xd518
   13a6c:	movteq	r0, #5
   13a70:	beq	13b38 <__assert_fail@plt+0x2734>
   13a74:	cmp	r4, #170	; 0xaa
   13a78:	movweq	r0, #54604	; 0xd54c
   13a7c:	movteq	r0, #5
   13a80:	beq	13b38 <__assert_fail@plt+0x2734>
   13a84:	b	13948 <__assert_fail@plt+0x2544>
   13a88:	cmp	r0, #18
   13a8c:	beq	14274 <__assert_fail@plt+0x2e70>
   13a90:	bls	13cac <__assert_fail@plt+0x28a8>
   13a94:	cmp	r0, #21
   13a98:	beq	140e4 <__assert_fail@plt+0x2ce0>
   13a9c:	bhi	140b0 <__assert_fail@plt+0x2cac>
   13aa0:	cmp	r0, #19
   13aa4:	movweq	r0, #51276	; 0xc84c
   13aa8:	movteq	r0, #5
   13aac:	beq	13b38 <__assert_fail@plt+0x2734>
   13ab0:	cmp	r4, #20
   13ab4:	movweq	r0, #51288	; 0xc858
   13ab8:	movteq	r0, #5
   13abc:	beq	13b38 <__assert_fail@plt+0x2734>
   13ac0:	b	13948 <__assert_fail@plt+0x2544>
   13ac4:	cmp	r0, #118	; 0x76
   13ac8:	beq	1418c <__assert_fail@plt+0x2d88>
   13acc:	bls	13d3c <__assert_fail@plt+0x2938>
   13ad0:	cmp	r0, #131	; 0x83
   13ad4:	beq	142d4 <__assert_fail@plt+0x2ed0>
   13ad8:	bls	1401c <__assert_fail@plt+0x2c18>
   13adc:	cmp	r0, #132	; 0x84
   13ae0:	movweq	r0, #53896	; 0xd288
   13ae4:	movteq	r0, #5
   13ae8:	beq	13b38 <__assert_fail@plt+0x2734>
   13aec:	cmp	r4, #134	; 0x86
   13af0:	movweq	r0, #53932	; 0xd2ac
   13af4:	movteq	r0, #5
   13af8:	beq	13b38 <__assert_fail@plt+0x2734>
   13afc:	b	13948 <__assert_fail@plt+0x2544>
   13b00:	cmp	r0, #195	; 0xc3
   13b04:	beq	13da8 <__assert_fail@plt+0x29a4>
   13b08:	bls	13e2c <__assert_fail@plt+0x2a28>
   13b0c:	cmp	r0, #222	; 0xde
   13b10:	beq	140f0 <__assert_fail@plt+0x2cec>
   13b14:	bhi	14088 <__assert_fail@plt+0x2c84>
   13b18:	cmp	r0, #197	; 0xc5
   13b1c:	movweq	r0, #54776	; 0xd5f8
   13b20:	movteq	r0, #5
   13b24:	beq	13b38 <__assert_fail@plt+0x2734>
   13b28:	cmp	r4, #221	; 0xdd
   13b2c:	movweq	r0, #52468	; 0xccf4
   13b30:	movteq	r0, #5
   13b34:	bne	13948 <__assert_fail@plt+0x2544>
   13b38:	add	sp, sp, #8
   13b3c:	pop	{r4, pc}
   13b40:	movw	r3, #48879	; 0xbeef
   13b44:	cmp	r0, r3
   13b48:	beq	143ec <__assert_fail@plt+0x2fe8>
   13b4c:	bls	13ec0 <__assert_fail@plt+0x2abc>
   13b50:	movw	r3, #65200	; 0xfeb0
   13b54:	cmp	r0, r3
   13b58:	beq	14034 <__assert_fail@plt+0x2c30>
   13b5c:	bls	14040 <__assert_fail@plt+0x2c3c>
   13b60:	movw	r3, #65210	; 0xfeba
   13b64:	cmp	r0, r3
   13b68:	movweq	r0, #53044	; 0xcf34
   13b6c:	movteq	r0, #5
   13b70:	beq	13b38 <__assert_fail@plt+0x2734>
   13b74:	add	r3, r3, #1
   13b78:	cmp	r4, r3
   13b7c:	movweq	r0, #53684	; 0xd1b4
   13b80:	movteq	r0, #5
   13b84:	beq	13b38 <__assert_fail@plt+0x2734>
   13b88:	b	13948 <__assert_fail@plt+0x2544>
   13b8c:	cmp	r0, #137	; 0x89
   13b90:	beq	14168 <__assert_fail@plt+0x2d64>
   13b94:	bcc	1415c <__assert_fail@plt+0x2d58>
   13b98:	cmp	r0, #138	; 0x8a
   13b9c:	movweq	r0, #53388	; 0xd08c
   13ba0:	movteq	r0, #5
   13ba4:	beq	13b38 <__assert_fail@plt+0x2734>
   13ba8:	cmp	r4, #139	; 0x8b
   13bac:	movweq	r0, #54052	; 0xd324
   13bb0:	movteq	r0, #5
   13bb4:	beq	13b38 <__assert_fail@plt+0x2734>
   13bb8:	b	13948 <__assert_fail@plt+0x2544>
   13bbc:	cmp	r0, #104	; 0x68
   13bc0:	beq	141f0 <__assert_fail@plt+0x2dec>
   13bc4:	bcc	141e4 <__assert_fail@plt+0x2de0>
   13bc8:	cmp	r0, #105	; 0x69
   13bcc:	movweq	r0, #53344	; 0xd060
   13bd0:	movteq	r0, #5
   13bd4:	beq	13b38 <__assert_fail@plt+0x2734>
   13bd8:	cmp	r4, #106	; 0x6a
   13bdc:	movweq	r0, #53452	; 0xd0cc
   13be0:	movteq	r0, #5
   13be4:	beq	13b38 <__assert_fail@plt+0x2734>
   13be8:	b	13948 <__assert_fail@plt+0x2544>
   13bec:	cmp	r0, #71	; 0x47
   13bf0:	beq	14150 <__assert_fail@plt+0x2d4c>
   13bf4:	bcc	14144 <__assert_fail@plt+0x2d40>
   13bf8:	cmp	r0, #72	; 0x48
   13bfc:	movweq	r0, #52348	; 0xcc7c
   13c00:	movteq	r0, #5
   13c04:	beq	13b38 <__assert_fail@plt+0x2734>
   13c08:	cmp	r4, #73	; 0x49
   13c0c:	movweq	r0, #52384	; 0xcca0
   13c10:	movteq	r0, #5
   13c14:	beq	13b38 <__assert_fail@plt+0x2734>
   13c18:	b	13948 <__assert_fail@plt+0x2544>
   13c1c:	cmp	r0, #165	; 0xa5
   13c20:	beq	141d8 <__assert_fail@plt+0x2dd4>
   13c24:	bcc	141cc <__assert_fail@plt+0x2dc8>
   13c28:	cmp	r0, #166	; 0xa6
   13c2c:	movweq	r0, #54416	; 0xd490
   13c30:	movteq	r0, #5
   13c34:	beq	13b38 <__assert_fail@plt+0x2734>
   13c38:	cmp	r4, #167	; 0xa7
   13c3c:	movweq	r0, #54452	; 0xd4b4
   13c40:	movteq	r0, #5
   13c44:	beq	13b38 <__assert_fail@plt+0x2734>
   13c48:	b	13948 <__assert_fail@plt+0x2544>
   13c4c:	cmp	r0, #60	; 0x3c
   13c50:	beq	14180 <__assert_fail@plt+0x2d7c>
   13c54:	bcc	14174 <__assert_fail@plt+0x2d70>
   13c58:	cmp	r0, #61	; 0x3d
   13c5c:	movweq	r0, #51940	; 0xcae4
   13c60:	movteq	r0, #5
   13c64:	beq	13b38 <__assert_fail@plt+0x2734>
   13c68:	cmp	r4, #62	; 0x3e
   13c6c:	movweq	r0, #52804	; 0xce44
   13c70:	movteq	r0, #5
   13c74:	beq	13b38 <__assert_fail@plt+0x2734>
   13c78:	b	13948 <__assert_fail@plt+0x2544>
   13c7c:	cmp	r0, #38	; 0x26
   13c80:	beq	14238 <__assert_fail@plt+0x2e34>
   13c84:	bcc	1422c <__assert_fail@plt+0x2e28>
   13c88:	cmp	r0, #39	; 0x27
   13c8c:	movweq	r0, #51348	; 0xc894
   13c90:	movteq	r0, #5
   13c94:	beq	13b38 <__assert_fail@plt+0x2734>
   13c98:	cmp	r4, #40	; 0x28
   13c9c:	movweq	r0, #51356	; 0xc89c
   13ca0:	movteq	r0, #5
   13ca4:	beq	13b38 <__assert_fail@plt+0x2734>
   13ca8:	b	13948 <__assert_fail@plt+0x2544>
   13cac:	cmp	r0, #11
   13cb0:	beq	1441c <__assert_fail@plt+0x3018>
   13cb4:	bcc	14410 <__assert_fail@plt+0x300c>
   13cb8:	cmp	r0, #15
   13cbc:	movweq	r0, #51240	; 0xc828
   13cc0:	movteq	r0, #5
   13cc4:	beq	13b38 <__assert_fail@plt+0x2734>
   13cc8:	cmp	r4, #17
   13ccc:	movweq	r0, #51248	; 0xc830
   13cd0:	movteq	r0, #5
   13cd4:	beq	13b38 <__assert_fail@plt+0x2734>
   13cd8:	b	13948 <__assert_fail@plt+0x2544>
   13cdc:	cmp	r0, #49	; 0x31
   13ce0:	beq	14208 <__assert_fail@plt+0x2e04>
   13ce4:	bcc	141fc <__assert_fail@plt+0x2df8>
   13ce8:	cmp	r0, #50	; 0x32
   13cec:	movweq	r0, #51512	; 0xc938
   13cf0:	movteq	r0, #5
   13cf4:	beq	13b38 <__assert_fail@plt+0x2734>
   13cf8:	cmp	r4, #51	; 0x33
   13cfc:	movweq	r0, #51524	; 0xc944
   13d00:	movteq	r0, #5
   13d04:	beq	13b38 <__assert_fail@plt+0x2734>
   13d08:	b	13948 <__assert_fail@plt+0x2544>
   13d0c:	cmp	r0, #6
   13d10:	beq	14250 <__assert_fail@plt+0x2e4c>
   13d14:	bcc	14244 <__assert_fail@plt+0x2e40>
   13d18:	cmp	r0, #7
   13d1c:	movweq	r0, #51160	; 0xc7d8
   13d20:	movteq	r0, #5
   13d24:	beq	13b38 <__assert_fail@plt+0x2734>
   13d28:	cmp	r4, #8
   13d2c:	movweq	r0, #51172	; 0xc7e4
   13d30:	movteq	r0, #5
   13d34:	beq	13b38 <__assert_fail@plt+0x2734>
   13d38:	b	13948 <__assert_fail@plt+0x2544>
   13d3c:	cmp	r0, #115	; 0x73
   13d40:	beq	142c8 <__assert_fail@plt+0x2ec4>
   13d44:	movwcc	r0, #52932	; 0xcec4
   13d48:	movtcc	r0, #5
   13d4c:	bcc	13b38 <__assert_fail@plt+0x2734>
   13d50:	cmp	r4, #116	; 0x74
   13d54:	beq	142bc <__assert_fail@plt+0x2eb8>
   13d58:	cmp	r4, #117	; 0x75
   13d5c:	movweq	r0, #53740	; 0xd1ec
   13d60:	movteq	r0, #5
   13d64:	beq	13b38 <__assert_fail@plt+0x2734>
   13d68:	b	13948 <__assert_fail@plt+0x2544>
   13d6c:	cmp	r0, #176	; 0xb0
   13d70:	beq	14310 <__assert_fail@plt+0x2f0c>
   13d74:	movwcc	r0, #54860	; 0xd64c
   13d78:	movtcc	r0, #5
   13d7c:	bcc	13b38 <__assert_fail@plt+0x2734>
   13d80:	cmp	r4, #177	; 0xb1
   13d84:	beq	13ef0 <__assert_fail@plt+0x2aec>
   13d88:	cmp	r4, #178	; 0xb2
   13d8c:	movweq	r0, #54944	; 0xd6a0
   13d90:	movteq	r0, #5
   13d94:	beq	13b38 <__assert_fail@plt+0x2734>
   13d98:	b	13948 <__assert_fail@plt+0x2544>
   13d9c:	movw	r0, #53120	; 0xcf80
   13da0:	movt	r0, #5
   13da4:	b	13b38 <__assert_fail@plt+0x2734>
   13da8:	movw	r0, #51444	; 0xc8f4
   13dac:	movt	r0, #5
   13db0:	b	13b38 <__assert_fail@plt+0x2734>
   13db4:	movw	r0, #51848	; 0xca88
   13db8:	movt	r0, #5
   13dbc:	b	13b38 <__assert_fail@plt+0x2734>
   13dc0:	cmp	r0, #85	; 0x55
   13dc4:	beq	14114 <__assert_fail@plt+0x2d10>
   13dc8:	bhi	13e5c <__assert_fail@plt+0x2a58>
   13dcc:	cmp	r0, #82	; 0x52
   13dd0:	beq	1412c <__assert_fail@plt+0x2d28>
   13dd4:	movwcc	r0, #52732	; 0xcdfc
   13dd8:	movtcc	r0, #5
   13ddc:	bcc	13b38 <__assert_fail@plt+0x2734>
   13de0:	cmp	r4, #83	; 0x53
   13de4:	beq	140a4 <__assert_fail@plt+0x2ca0>
   13de8:	cmp	r4, #84	; 0x54
   13dec:	bne	13948 <__assert_fail@plt+0x2544>
   13df0:	movw	r0, #51696	; 0xc9f0
   13df4:	movt	r0, #5
   13df8:	b	13b38 <__assert_fail@plt+0x2734>
   13dfc:	cmp	r0, #93	; 0x5d
   13e00:	beq	14268 <__assert_fail@plt+0x2e64>
   13e04:	movwcc	r0, #52916	; 0xceb4
   13e08:	movtcc	r0, #5
   13e0c:	bcc	13b38 <__assert_fail@plt+0x2734>
   13e10:	cmp	r4, #94	; 0x5e
   13e14:	beq	1425c <__assert_fail@plt+0x2e58>
   13e18:	cmp	r4, #95	; 0x5f
   13e1c:	movweq	r0, #53088	; 0xcf60
   13e20:	movteq	r0, #5
   13e24:	beq	13b38 <__assert_fail@plt+0x2734>
   13e28:	b	13948 <__assert_fail@plt+0x2544>
   13e2c:	cmp	r0, #189	; 0xbd
   13e30:	beq	13ef0 <__assert_fail@plt+0x2aec>
   13e34:	bcc	14138 <__assert_fail@plt+0x2d34>
   13e38:	cmp	r0, #190	; 0xbe
   13e3c:	movweq	r0, #55256	; 0xd7d8
   13e40:	movteq	r0, #5
   13e44:	beq	13b38 <__assert_fail@plt+0x2734>
   13e48:	cmp	r4, #191	; 0xbf
   13e4c:	movweq	r0, #55208	; 0xd7a8
   13e50:	movteq	r0, #5
   13e54:	beq	13b38 <__assert_fail@plt+0x2734>
   13e58:	b	13948 <__assert_fail@plt+0x2544>
   13e5c:	cmp	r0, #88	; 0x58
   13e60:	beq	13eb4 <__assert_fail@plt+0x2ab0>
   13e64:	bhi	143a0 <__assert_fail@plt+0x2f9c>
   13e68:	cmp	r0, #86	; 0x56
   13e6c:	beq	142b0 <__assert_fail@plt+0x2eac>
   13e70:	cmp	r0, #87	; 0x57
   13e74:	movweq	r0, #51656	; 0xc9c8
   13e78:	movteq	r0, #5
   13e7c:	beq	13b38 <__assert_fail@plt+0x2734>
   13e80:	b	13948 <__assert_fail@plt+0x2544>
   13e84:	movw	r3, #33303	; 0x8217
   13e88:	cmp	r0, r3
   13e8c:	beq	1407c <__assert_fail@plt+0x2c78>
   13e90:	bls	14298 <__assert_fail@plt+0x2e94>
   13e94:	movw	r3, #36902	; 0x9026
   13e98:	cmp	r0, r3
   13e9c:	movweq	r0, #51560	; 0xc968
   13ea0:	movteq	r0, #5
   13ea4:	beq	13b38 <__assert_fail@plt+0x2734>
   13ea8:	add	r3, r3, #27
   13eac:	cmp	r4, r3
   13eb0:	bne	13948 <__assert_fail@plt+0x2544>
   13eb4:	movw	r0, #51584	; 0xc980
   13eb8:	movt	r0, #5
   13ebc:	b	13b38 <__assert_fail@plt+0x2734>
   13ec0:	movw	r3, #43975	; 0xabc7
   13ec4:	cmp	r0, r3
   13ec8:	beq	1425c <__assert_fail@plt+0x2e58>
   13ecc:	bls	140fc <__assert_fail@plt+0x2cf8>
   13ed0:	movw	r3, #44357	; 0xad45
   13ed4:	cmp	r0, r3
   13ed8:	movweq	r0, #52888	; 0xce98
   13edc:	movteq	r0, #5
   13ee0:	beq	13b38 <__assert_fail@plt+0x2734>
   13ee4:	movw	r3, #47787	; 0xbaab
   13ee8:	cmp	r4, r3
   13eec:	bne	13948 <__assert_fail@plt+0x2544>
   13ef0:	movw	r0, #54756	; 0xd5e4
   13ef4:	movt	r0, #5
   13ef8:	b	13b38 <__assert_fail@plt+0x2734>
   13efc:	cmp	r0, #161	; 0xa1
   13f00:	movweq	r0, #54256	; 0xd3f0
   13f04:	movteq	r0, #5
   13f08:	beq	13b38 <__assert_fail@plt+0x2734>
   13f0c:	cmp	r4, #162	; 0xa2
   13f10:	movweq	r0, #54284	; 0xd40c
   13f14:	movteq	r0, #5
   13f18:	beq	13b38 <__assert_fail@plt+0x2734>
   13f1c:	b	13948 <__assert_fail@plt+0x2544>
   13f20:	cmp	r0, #67	; 0x43
   13f24:	movweq	r0, #52104	; 0xcb88
   13f28:	movteq	r0, #5
   13f2c:	beq	13b38 <__assert_fail@plt+0x2734>
   13f30:	cmp	r4, #68	; 0x44
   13f34:	movweq	r0, #52156	; 0xcbbc
   13f38:	movteq	r0, #5
   13f3c:	beq	13b38 <__assert_fail@plt+0x2734>
   13f40:	b	13948 <__assert_fail@plt+0x2544>
   13f44:	cmp	r0, #185	; 0xb9
   13f48:	movweq	r0, #55020	; 0xd6ec
   13f4c:	movteq	r0, #5
   13f50:	beq	13b38 <__assert_fail@plt+0x2734>
   13f54:	cmp	r4, #186	; 0xba
   13f58:	movweq	r0, #55068	; 0xd71c
   13f5c:	movteq	r0, #5
   13f60:	beq	13b38 <__assert_fail@plt+0x2734>
   13f64:	b	13948 <__assert_fail@plt+0x2544>
   13f68:	cmp	r0, #111	; 0x6f
   13f6c:	movweq	r0, #53584	; 0xd150
   13f70:	movteq	r0, #5
   13f74:	beq	13b38 <__assert_fail@plt+0x2734>
   13f78:	cmp	r4, #112	; 0x70
   13f7c:	movweq	r0, #53632	; 0xd180
   13f80:	movteq	r0, #5
   13f84:	beq	13b38 <__assert_fail@plt+0x2734>
   13f88:	b	13948 <__assert_fail@plt+0x2544>
   13f8c:	cmp	r0, #45	; 0x2d
   13f90:	movweq	r0, #51428	; 0xc8e4
   13f94:	movteq	r0, #5
   13f98:	beq	13b38 <__assert_fail@plt+0x2734>
   13f9c:	cmp	r4, #46	; 0x2e
   13fa0:	movweq	r0, #51452	; 0xc8fc
   13fa4:	movteq	r0, #5
   13fa8:	beq	13b38 <__assert_fail@plt+0x2734>
   13fac:	b	13948 <__assert_fail@plt+0x2544>
   13fb0:	cmp	r0, #78	; 0x4e
   13fb4:	movweq	r0, #52620	; 0xcd8c
   13fb8:	movteq	r0, #5
   13fbc:	beq	13b38 <__assert_fail@plt+0x2734>
   13fc0:	cmp	r4, #79	; 0x4f
   13fc4:	movweq	r0, #52652	; 0xcdac
   13fc8:	movteq	r0, #5
   13fcc:	beq	13b38 <__assert_fail@plt+0x2734>
   13fd0:	b	13948 <__assert_fail@plt+0x2544>
   13fd4:	cmp	r0, #172	; 0xac
   13fd8:	movweq	r0, #54692	; 0xd5a4
   13fdc:	movteq	r0, #5
   13fe0:	beq	13b38 <__assert_fail@plt+0x2734>
   13fe4:	cmp	r4, #173	; 0xad
   13fe8:	movweq	r0, #54792	; 0xd608
   13fec:	movteq	r0, #5
   13ff0:	beq	13b38 <__assert_fail@plt+0x2734>
   13ff4:	b	13948 <__assert_fail@plt+0x2544>
   13ff8:	cmp	r0, #56	; 0x38
   13ffc:	movweq	r0, #51784	; 0xca48
   14000:	movteq	r0, #5
   14004:	beq	13b38 <__assert_fail@plt+0x2734>
   14008:	cmp	r4, #57	; 0x39
   1400c:	movweq	r0, #51820	; 0xca6c
   14010:	movteq	r0, #5
   14014:	beq	13b38 <__assert_fail@plt+0x2734>
   14018:	b	13948 <__assert_fail@plt+0x2544>
   1401c:	cmp	r0, #119	; 0x77
   14020:	movweq	r0, #53832	; 0xd248
   14024:	movteq	r0, #5
   14028:	beq	13b38 <__assert_fail@plt+0x2734>
   1402c:	cmp	r4, #120	; 0x78
   14030:	bne	13948 <__assert_fail@plt+0x2544>
   14034:	movw	r0, #53404	; 0xd09c
   14038:	movt	r0, #5
   1403c:	b	13b38 <__assert_fail@plt+0x2734>
   14040:	movw	r3, #57005	; 0xdead
   14044:	cmp	r0, r3
   14048:	beq	143b0 <__assert_fail@plt+0x2fac>
   1404c:	movw	r3, #61453	; 0xf00d
   14050:	cmp	r0, r3
   14054:	movweq	r0, #54728	; 0xd5c8
   14058:	movteq	r0, #5
   1405c:	beq	13b38 <__assert_fail@plt+0x2734>
   14060:	b	13948 <__assert_fail@plt+0x2544>
   14064:	cmp	r0, #100	; 0x64
   14068:	movweq	r0, #53232	; 0xcff0
   1406c:	movteq	r0, #5
   14070:	beq	13b38 <__assert_fail@plt+0x2734>
   14074:	cmp	r4, #101	; 0x65
   14078:	bne	13948 <__assert_fail@plt+0x2544>
   1407c:	movw	r0, #53004	; 0xcf0c
   14080:	movt	r0, #5
   14084:	b	13b38 <__assert_fail@plt+0x2734>
   14088:	cmp	r0, #223	; 0xdf
   1408c:	movweq	r0, #51688	; 0xc9e8
   14090:	movteq	r0, #5
   14094:	beq	13b38 <__assert_fail@plt+0x2734>
   14098:	movw	r3, #4183	; 0x1057
   1409c:	cmp	r4, r3
   140a0:	bne	13948 <__assert_fail@plt+0x2544>
   140a4:	movw	r0, #52496	; 0xcd10
   140a8:	movt	r0, #5
   140ac:	b	13b38 <__assert_fail@plt+0x2734>
   140b0:	cmp	r0, #22
   140b4:	beq	14108 <__assert_fail@plt+0x2d04>
   140b8:	cmp	r0, #23
   140bc:	movweq	r0, #51116	; 0xc7ac
   140c0:	movteq	r0, #5
   140c4:	beq	13b38 <__assert_fail@plt+0x2734>
   140c8:	b	13948 <__assert_fail@plt+0x2544>
   140cc:	sub	r3, r3, #3584	; 0xe00
   140d0:	cmp	r0, r3
   140d4:	movweq	r0, #53420	; 0xd0ac
   140d8:	movteq	r0, #5
   140dc:	beq	13b38 <__assert_fail@plt+0x2734>
   140e0:	b	13948 <__assert_fail@plt+0x2544>
   140e4:	movw	r0, #51296	; 0xc860
   140e8:	movt	r0, #5
   140ec:	b	13b38 <__assert_fail@plt+0x2734>
   140f0:	movw	r0, #51324	; 0xc87c
   140f4:	movt	r0, #5
   140f8:	b	13b38 <__assert_fail@plt+0x2734>
   140fc:	movw	r3, #41872	; 0xa390
   14100:	cmp	r0, r3
   14104:	bne	13948 <__assert_fail@plt+0x2544>
   14108:	movw	r0, #52860	; 0xce7c
   1410c:	movt	r0, #5
   14110:	b	13b38 <__assert_fail@plt+0x2734>
   14114:	movw	r0, #51568	; 0xc970
   14118:	movt	r0, #5
   1411c:	b	13b38 <__assert_fail@plt+0x2734>
   14120:	movw	r0, #51728	; 0xca10
   14124:	movt	r0, #5
   14128:	b	13b38 <__assert_fail@plt+0x2734>
   1412c:	movw	r0, #52788	; 0xce34
   14130:	movt	r0, #5
   14134:	b	13b38 <__assert_fail@plt+0x2734>
   14138:	movw	r0, #55160	; 0xd778
   1413c:	movt	r0, #5
   14140:	b	13b38 <__assert_fail@plt+0x2734>
   14144:	movw	r0, #52276	; 0xcc34
   14148:	movt	r0, #5
   1414c:	b	13b38 <__assert_fail@plt+0x2734>
   14150:	movw	r0, #52312	; 0xcc58
   14154:	movt	r0, #5
   14158:	b	13b38 <__assert_fail@plt+0x2734>
   1415c:	movw	r0, #53972	; 0xd2d4
   14160:	movt	r0, #5
   14164:	b	13b38 <__assert_fail@plt+0x2734>
   14168:	movw	r0, #54016	; 0xd300
   1416c:	movt	r0, #5
   14170:	b	13b38 <__assert_fail@plt+0x2734>
   14174:	movw	r0, #51880	; 0xcaa8
   14178:	movt	r0, #5
   1417c:	b	13b38 <__assert_fail@plt+0x2734>
   14180:	movw	r0, #51904	; 0xcac0
   14184:	movt	r0, #5
   14188:	b	13b38 <__assert_fail@plt+0x2734>
   1418c:	movw	r0, #53776	; 0xd210
   14190:	movt	r0, #5
   14194:	b	13b38 <__assert_fail@plt+0x2734>
   14198:	movw	r0, #54520	; 0xd4f8
   1419c:	movt	r0, #5
   141a0:	b	13b38 <__assert_fail@plt+0x2734>
   141a4:	movw	r1, #55320	; 0xd818
   141a8:	mov	r0, #0
   141ac:	movt	r1, #5
   141b0:	mov	r2, #5
   141b4:	add	sp, sp, #8
   141b8:	pop	{r4, lr}
   141bc:	b	11170 <dcgettext@plt>
   141c0:	movw	r0, #51100	; 0xc79c
   141c4:	movt	r0, #5
   141c8:	b	13b38 <__assert_fail@plt+0x2734>
   141cc:	movw	r0, #54368	; 0xd460
   141d0:	movt	r0, #5
   141d4:	b	13b38 <__assert_fail@plt+0x2734>
   141d8:	movw	r0, #54392	; 0xd478
   141dc:	movt	r0, #5
   141e0:	b	13b38 <__assert_fail@plt+0x2734>
   141e4:	movw	r0, #53292	; 0xd02c
   141e8:	movt	r0, #5
   141ec:	b	13b38 <__assert_fail@plt+0x2734>
   141f0:	movw	r0, #53328	; 0xd050
   141f4:	movt	r0, #5
   141f8:	b	13b38 <__assert_fail@plt+0x2734>
   141fc:	movw	r0, #51484	; 0xc91c
   14200:	movt	r0, #5
   14204:	b	13b38 <__assert_fail@plt+0x2734>
   14208:	movw	r0, #51496	; 0xc928
   1420c:	movt	r0, #5
   14210:	b	13b38 <__assert_fail@plt+0x2734>
   14214:	movw	r0, #54648	; 0xd578
   14218:	movt	r0, #5
   1421c:	b	13b38 <__assert_fail@plt+0x2734>
   14220:	movw	r0, #51772	; 0xca3c
   14224:	movt	r0, #5
   14228:	b	13b38 <__assert_fail@plt+0x2734>
   1422c:	movw	r0, #51308	; 0xc86c
   14230:	movt	r0, #5
   14234:	b	13b38 <__assert_fail@plt+0x2734>
   14238:	movw	r0, #51336	; 0xc888
   1423c:	movt	r0, #5
   14240:	b	13b38 <__assert_fail@plt+0x2734>
   14244:	movw	r0, #51140	; 0xc7c4
   14248:	movt	r0, #5
   1424c:	b	13b38 <__assert_fail@plt+0x2734>
   14250:	movw	r0, #51148	; 0xc7cc
   14254:	movt	r0, #5
   14258:	b	13b38 <__assert_fail@plt+0x2734>
   1425c:	movw	r0, #53060	; 0xcf44
   14260:	movt	r0, #5
   14264:	b	13b38 <__assert_fail@plt+0x2734>
   14268:	movw	r0, #51432	; 0xc8e8
   1426c:	movt	r0, #5
   14270:	b	13b38 <__assert_fail@plt+0x2734>
   14274:	movw	r0, #51264	; 0xc840
   14278:	movt	r0, #5
   1427c:	b	13b38 <__assert_fail@plt+0x2734>
   14280:	movw	r0, #51540	; 0xc954
   14284:	movt	r0, #5
   14288:	b	13b38 <__assert_fail@plt+0x2734>
   1428c:	movw	r0, #52996	; 0xcf04
   14290:	movt	r0, #5
   14294:	b	13b38 <__assert_fail@plt+0x2734>
   14298:	movw	r3, #30288	; 0x7650
   1429c:	cmp	r0, r3
   142a0:	beq	14114 <__assert_fail@plt+0x2d10>
   142a4:	add	r3, r3, #38	; 0x26
   142a8:	cmp	r0, r3
   142ac:	bne	13948 <__assert_fail@plt+0x2544>
   142b0:	movw	r0, #51576	; 0xc978
   142b4:	movt	r0, #5
   142b8:	b	13b38 <__assert_fail@plt+0x2734>
   142bc:	movw	r0, #53712	; 0xd1d0
   142c0:	movt	r0, #5
   142c4:	b	13b38 <__assert_fail@plt+0x2734>
   142c8:	movw	r0, #55284	; 0xd7f4
   142cc:	movt	r0, #5
   142d0:	b	13b38 <__assert_fail@plt+0x2734>
   142d4:	movw	r0, #53876	; 0xd274
   142d8:	movt	r0, #5
   142dc:	b	13b38 <__assert_fail@plt+0x2734>
   142e0:	movw	r0, #54204	; 0xd3bc
   142e4:	movt	r0, #5
   142e8:	b	13b38 <__assert_fail@plt+0x2734>
   142ec:	movw	r0, #52072	; 0xcb68
   142f0:	movt	r0, #5
   142f4:	b	13b38 <__assert_fail@plt+0x2734>
   142f8:	movw	r0, #53476	; 0xd0e4
   142fc:	movt	r0, #5
   14300:	b	13b38 <__assert_fail@plt+0x2734>
   14304:	movw	r0, #53696	; 0xd1c0
   14308:	movt	r0, #5
   1430c:	b	13b38 <__assert_fail@plt+0x2734>
   14310:	movw	r0, #54912	; 0xd680
   14314:	movt	r0, #5
   14318:	b	13b38 <__assert_fail@plt+0x2734>
   1431c:	movw	r0, #51132	; 0xc7bc
   14320:	movt	r0, #5
   14324:	b	13b38 <__assert_fail@plt+0x2734>
   14328:	movw	r0, #51184	; 0xc7f0
   1432c:	movt	r0, #5
   14330:	b	13b38 <__assert_fail@plt+0x2734>
   14334:	movw	r0, #51988	; 0xcb14
   14338:	movt	r0, #5
   1433c:	b	13b38 <__assert_fail@plt+0x2734>
   14340:	movw	r0, #52204	; 0xcbec
   14344:	movt	r0, #5
   14348:	b	13b38 <__assert_fail@plt+0x2734>
   1434c:	movw	r0, #53276	; 0xd01c
   14350:	movt	r0, #5
   14354:	b	13b38 <__assert_fail@plt+0x2734>
   14358:	movw	r0, #51624	; 0xc9a8
   1435c:	movt	r0, #5
   14360:	b	13b38 <__assert_fail@plt+0x2734>
   14364:	movw	r0, #52688	; 0xcdd0
   14368:	movt	r0, #5
   1436c:	b	13b38 <__assert_fail@plt+0x2734>
   14370:	movw	r0, #52976	; 0xcef0
   14374:	movt	r0, #5
   14378:	b	13b38 <__assert_fail@plt+0x2734>
   1437c:	movw	r0, #54804	; 0xd614
   14380:	movt	r0, #5
   14384:	b	13b38 <__assert_fail@plt+0x2734>
   14388:	movw	r0, #52872	; 0xce88
   1438c:	movt	r0, #5
   14390:	b	13b38 <__assert_fail@plt+0x2734>
   14394:	movw	r0, #52408	; 0xccb8
   14398:	movt	r0, #5
   1439c:	b	13b38 <__assert_fail@plt+0x2734>
   143a0:	cmp	r0, #89	; 0x59
   143a4:	beq	143ec <__assert_fail@plt+0x2fe8>
   143a8:	cmp	r0, #90	; 0x5a
   143ac:	bne	13948 <__assert_fail@plt+0x2544>
   143b0:	movw	r0, #51680	; 0xc9e0
   143b4:	movt	r0, #5
   143b8:	b	13b38 <__assert_fail@plt+0x2734>
   143bc:	movw	r0, #54984	; 0xd6c8
   143c0:	movt	r0, #5
   143c4:	b	13b38 <__assert_fail@plt+0x2734>
   143c8:	movw	r0, #55116	; 0xd74c
   143cc:	movt	r0, #5
   143d0:	b	13b38 <__assert_fail@plt+0x2734>
   143d4:	movw	r0, #51412	; 0xc8d4
   143d8:	movt	r0, #5
   143dc:	b	13b38 <__assert_fail@plt+0x2734>
   143e0:	movw	r0, #52576	; 0xcd60
   143e4:	movt	r0, #5
   143e8:	b	13b38 <__assert_fail@plt+0x2734>
   143ec:	movw	r0, #51672	; 0xc9d8
   143f0:	movt	r0, #5
   143f4:	b	13b38 <__assert_fail@plt+0x2734>
   143f8:	movw	r0, #51360	; 0xc8a0
   143fc:	movt	r0, #5
   14400:	b	13b38 <__assert_fail@plt+0x2734>
   14404:	movw	r0, #51468	; 0xc90c
   14408:	movt	r0, #5
   1440c:	b	13b38 <__assert_fail@plt+0x2734>
   14410:	movw	r0, #51200	; 0xc800
   14414:	movt	r0, #5
   14418:	b	13b38 <__assert_fail@plt+0x2734>
   1441c:	movw	r0, #51224	; 0xc818
   14420:	movt	r0, #5
   14424:	b	13b38 <__assert_fail@plt+0x2734>
   14428:	movw	r0, #51092	; 0xc794
   1442c:	movt	r0, #5
   14430:	b	13b38 <__assert_fail@plt+0x2734>
   14434:	movw	r0, #53576	; 0xd148
   14438:	movt	r0, #5
   1443c:	b	13b38 <__assert_fail@plt+0x2734>
   14440:	movw	r0, #54076	; 0xd33c
   14444:	movt	r0, #5
   14448:	b	13b38 <__assert_fail@plt+0x2734>
   1444c:	movw	r0, #54320	; 0xd430
   14450:	movt	r0, #5
   14454:	b	13b38 <__assert_fail@plt+0x2734>
   14458:	andeq	r4, r9, r8, asr #4
   1445c:	movw	r3, #65013	; 0xfdf5
   14460:	movt	r3, #28671	; 0x6fff
   14464:	cmp	r0, r3
   14468:	push	{r4, lr}
   1446c:	mov	r4, r0
   14470:	sub	sp, sp, #8
   14474:	beq	14934 <__assert_fail@plt+0x3530>
   14478:	bhi	144d0 <__assert_fail@plt+0x30cc>
   1447c:	cmp	r0, #16
   14480:	beq	1491c <__assert_fail@plt+0x3518>
   14484:	bhi	14554 <__assert_fail@plt+0x3150>
   14488:	cmp	r0, #7
   1448c:	beq	14928 <__assert_fail@plt+0x3524>
   14490:	bls	14634 <__assert_fail@plt+0x3230>
   14494:	cmp	r0, #11
   14498:	beq	149a0 <__assert_fail@plt+0x359c>
   1449c:	bls	1482c <__assert_fail@plt+0x3428>
   144a0:	cmp	r0, #13
   144a4:	beq	1478c <__assert_fail@plt+0x3388>
   144a8:	bcc	148c8 <__assert_fail@plt+0x34c4>
   144ac:	cmp	r0, #14
   144b0:	movweq	r0, #55424	; 0xd880
   144b4:	movteq	r0, #5
   144b8:	beq	146b8 <__assert_fail@plt+0x32b4>
   144bc:	cmp	r4, #15
   144c0:	movweq	r0, #55432	; 0xd888
   144c4:	movteq	r0, #5
   144c8:	beq	146b8 <__assert_fail@plt+0x32b4>
   144cc:	b	145e0 <__assert_fail@plt+0x31dc>
   144d0:	movw	r3, #65274	; 0xfefa
   144d4:	movt	r3, #28671	; 0x6fff
   144d8:	cmp	r0, r3
   144dc:	beq	14874 <__assert_fail@plt+0x3470>
   144e0:	bhi	1459c <__assert_fail@plt+0x3198>
   144e4:	movw	r3, #65021	; 0xfdfd
   144e8:	movt	r3, #28671	; 0x6fff
   144ec:	cmp	r0, r3
   144f0:	beq	14880 <__assert_fail@plt+0x347c>
   144f4:	bls	1465c <__assert_fail@plt+0x3258>
   144f8:	movw	r3, #65269	; 0xfef5
   144fc:	movt	r3, #28671	; 0x6fff
   14500:	cmp	r0, r3
   14504:	beq	14970 <__assert_fail@plt+0x356c>
   14508:	bls	147f4 <__assert_fail@plt+0x33f0>
   1450c:	movw	r3, #65271	; 0xfef7
   14510:	movt	r3, #28671	; 0x6fff
   14514:	cmp	r0, r3
   14518:	beq	14798 <__assert_fail@plt+0x3394>
   1451c:	bcc	148e0 <__assert_fail@plt+0x34dc>
   14520:	movw	r3, #65272	; 0xfef8
   14524:	movt	r3, #28671	; 0x6fff
   14528:	cmp	r0, r3
   1452c:	movweq	r0, #55844	; 0xda24
   14530:	movteq	r0, #5
   14534:	beq	146b8 <__assert_fail@plt+0x32b4>
   14538:	movw	r3, #65273	; 0xfef9
   1453c:	movt	r3, #28671	; 0x6fff
   14540:	cmp	r4, r3
   14544:	movweq	r0, #55876	; 0xda44
   14548:	movteq	r0, #5
   1454c:	beq	146b8 <__assert_fail@plt+0x32b4>
   14550:	b	145e0 <__assert_fail@plt+0x31dc>
   14554:	cmp	r0, #24
   14558:	beq	14910 <__assert_fail@plt+0x350c>
   1455c:	bls	14694 <__assert_fail@plt+0x3290>
   14560:	cmp	r0, #28
   14564:	beq	14868 <__assert_fail@plt+0x3464>
   14568:	bls	147bc <__assert_fail@plt+0x33b8>
   1456c:	cmp	r0, #30
   14570:	beq	147a4 <__assert_fail@plt+0x33a0>
   14574:	bcc	14940 <__assert_fail@plt+0x353c>
   14578:	cmp	r0, #32
   1457c:	movweq	r0, #55548	; 0xd8fc
   14580:	movteq	r0, #5
   14584:	beq	146b8 <__assert_fail@plt+0x32b4>
   14588:	cmp	r4, #33	; 0x21
   1458c:	movweq	r0, #55564	; 0xd90c
   14590:	movteq	r0, #5
   14594:	beq	146b8 <__assert_fail@plt+0x32b4>
   14598:	b	145e0 <__assert_fail@plt+0x31dc>
   1459c:	cmn	r0, #-1879048186	; 0x90000006
   145a0:	beq	14904 <__assert_fail@plt+0x3500>
   145a4:	bls	146c0 <__assert_fail@plt+0x32bc>
   145a8:	cmn	r0, #-1879048190	; 0x90000002
   145ac:	beq	1488c <__assert_fail@plt+0x3488>
   145b0:	bls	147d8 <__assert_fail@plt+0x33d4>
   145b4:	cmn	r0, #-2147483645	; 0x80000003
   145b8:	beq	147b0 <__assert_fail@plt+0x33ac>
   145bc:	bls	14848 <__assert_fail@plt+0x3444>
   145c0:	cmn	r0, #-2147483646	; 0x80000002
   145c4:	movweq	r0, #50588	; 0xc59c
   145c8:	movteq	r0, #5
   145cc:	beq	146b8 <__assert_fail@plt+0x32b4>
   145d0:	cmn	r4, #-2147483647	; 0x80000001
   145d4:	movweq	r0, #50596	; 0xc5a4
   145d8:	movteq	r0, #5
   145dc:	beq	146b8 <__assert_fail@plt+0x32b4>
   145e0:	add	r3, r4, #-1879048192	; 0x90000000
   145e4:	cmn	r3, #-268435455	; 0xf0000001
   145e8:	bhi	149c4 <__assert_fail@plt+0x35c0>
   145ec:	movw	r2, #16712	; 0x4148
   145f0:	movt	r2, #9
   145f4:	ldrh	r1, [r2, #50]	; 0x32
   145f8:	cmp	r1, #43	; 0x2b
   145fc:	beq	14b14 <__assert_fail@plt+0x3710>
   14600:	bls	14a74 <__assert_fail@plt+0x3670>
   14604:	cmp	r1, #135	; 0x87
   14608:	beq	14bb8 <__assert_fail@plt+0x37b4>
   1460c:	bhi	14ac0 <__assert_fail@plt+0x36bc>
   14610:	cmp	r1, #50	; 0x32
   14614:	beq	14bf0 <__assert_fail@plt+0x37ec>
   14618:	cmp	r1, #113	; 0x71
   1461c:	bne	14bd8 <__assert_fail@plt+0x37d4>
   14620:	cmp	r4, #1879048194	; 0x70000002
   14624:	bne	14ab0 <__assert_fail@plt+0x36ac>
   14628:	movw	r0, #56016	; 0xdad0
   1462c:	movt	r0, #5
   14630:	b	146b8 <__assert_fail@plt+0x32b4>
   14634:	cmp	r0, #3
   14638:	beq	148d4 <__assert_fail@plt+0x34d0>
   1463c:	bls	1474c <__assert_fail@plt+0x3348>
   14640:	cmp	r0, #5
   14644:	beq	148b0 <__assert_fail@plt+0x34ac>
   14648:	movwls	r0, #55908	; 0xda64
   1464c:	movtls	r0, #5
   14650:	movwhi	r0, #55376	; 0xd850
   14654:	movthi	r0, #5
   14658:	b	146b8 <__assert_fail@plt+0x32b4>
   1465c:	movw	r3, #65017	; 0xfdf9
   14660:	movt	r3, #28671	; 0x6fff
   14664:	cmp	r0, r3
   14668:	beq	148a4 <__assert_fail@plt+0x34a0>
   1466c:	bls	14728 <__assert_fail@plt+0x3324>
   14670:	movw	r3, #65019	; 0xfdfb
   14674:	movt	r3, #28671	; 0x6fff
   14678:	cmp	r0, r3
   1467c:	beq	14964 <__assert_fail@plt+0x3560>
   14680:	movwls	r0, #55604	; 0xd934
   14684:	movtls	r0, #5
   14688:	movwhi	r0, #55620	; 0xd944
   1468c:	movthi	r0, #5
   14690:	b	146b8 <__assert_fail@plt+0x32b4>
   14694:	cmp	r0, #20
   14698:	beq	14994 <__assert_fail@plt+0x3590>
   1469c:	bhi	1470c <__assert_fail@plt+0x3308>
   146a0:	cmp	r0, #18
   146a4:	beq	14988 <__assert_fail@plt+0x3584>
   146a8:	movwls	r0, #13164	; 0x336c
   146ac:	movtls	r0, #7
   146b0:	movwhi	r0, #55448	; 0xd898
   146b4:	movthi	r0, #5
   146b8:	add	sp, sp, #8
   146bc:	pop	{r4, pc}
   146c0:	movw	r3, #65278	; 0xfefe
   146c4:	movt	r3, #28671	; 0x6fff
   146c8:	cmp	r0, r3
   146cc:	beq	1494c <__assert_fail@plt+0x3548>
   146d0:	bls	14768 <__assert_fail@plt+0x3364>
   146d4:	mvn	r3, #-1879048177	; 0x9000000f
   146d8:	cmp	r0, r3
   146dc:	beq	148f8 <__assert_fail@plt+0x34f4>
   146e0:	cmn	r0, #-1879048185	; 0x90000007
   146e4:	movweq	r0, #55756	; 0xd9cc
   146e8:	movteq	r0, #5
   146ec:	beq	146b8 <__assert_fail@plt+0x32b4>
   146f0:	movw	r3, #65279	; 0xfeff
   146f4:	movt	r3, #28671	; 0x6fff
   146f8:	cmp	r4, r3
   146fc:	bne	145e0 <__assert_fail@plt+0x31dc>
   14700:	movw	r0, #55716	; 0xd9a4
   14704:	movt	r0, #5
   14708:	b	146b8 <__assert_fail@plt+0x32b4>
   1470c:	cmp	r0, #22
   14710:	beq	148bc <__assert_fail@plt+0x34b8>
   14714:	movwls	r0, #8880	; 0x22b0
   14718:	movtls	r0, #6
   1471c:	movwhi	r0, #55464	; 0xd8a8
   14720:	movthi	r0, #5
   14724:	b	146b8 <__assert_fail@plt+0x32b4>
   14728:	movw	r3, #65015	; 0xfdf7
   1472c:	movt	r3, #28671	; 0x6fff
   14730:	cmp	r0, r3
   14734:	beq	1485c <__assert_fail@plt+0x3458>
   14738:	movwls	r0, #55860	; 0xda34
   1473c:	movtls	r0, #5
   14740:	movwhi	r0, #55580	; 0xd91c
   14744:	movthi	r0, #5
   14748:	b	146b8 <__assert_fail@plt+0x32b4>
   1474c:	cmp	r0, #1
   14750:	beq	148ec <__assert_fail@plt+0x34e8>
   14754:	movwls	r0, #55344	; 0xd830
   14758:	movtls	r0, #5
   1475c:	movwhi	r0, #30496	; 0x7720
   14760:	movthi	r0, #6
   14764:	b	146b8 <__assert_fail@plt+0x32b4>
   14768:	movw	r3, #65276	; 0xfefc
   1476c:	movt	r3, #28671	; 0x6fff
   14770:	cmp	r0, r3
   14774:	beq	14958 <__assert_fail@plt+0x3554>
   14778:	movwls	r0, #55680	; 0xd980
   1477c:	movtls	r0, #5
   14780:	movwhi	r0, #55700	; 0xd994
   14784:	movthi	r0, #5
   14788:	b	146b8 <__assert_fail@plt+0x32b4>
   1478c:	movw	r0, #55416	; 0xd878
   14790:	movt	r0, #5
   14794:	b	146b8 <__assert_fail@plt+0x32b4>
   14798:	movw	r0, #55732	; 0xd9b4
   1479c:	movt	r0, #5
   147a0:	b	146b8 <__assert_fail@plt+0x32b4>
   147a4:	movw	r0, #29860	; 0x74a4
   147a8:	movt	r0, #6
   147ac:	b	146b8 <__assert_fail@plt+0x32b4>
   147b0:	movw	r0, #50576	; 0xc590
   147b4:	movt	r0, #5
   147b8:	b	146b8 <__assert_fail@plt+0x32b4>
   147bc:	cmp	r0, #26
   147c0:	beq	14898 <__assert_fail@plt+0x3494>
   147c4:	movwls	r0, #55484	; 0xd8bc
   147c8:	movtls	r0, #5
   147cc:	movwhi	r0, #55508	; 0xd8d4
   147d0:	movthi	r0, #5
   147d4:	b	146b8 <__assert_fail@plt+0x32b4>
   147d8:	cmn	r0, #-1879048188	; 0x90000004
   147dc:	beq	1497c <__assert_fail@plt+0x3578>
   147e0:	movwls	r0, #55780	; 0xd9e4
   147e4:	movtls	r0, #5
   147e8:	movwhi	r0, #55796	; 0xd9f4
   147ec:	movthi	r0, #5
   147f0:	b	146b8 <__assert_fail@plt+0x32b4>
   147f4:	movw	r3, #65023	; 0xfdff
   147f8:	movt	r3, #28671	; 0x6fff
   147fc:	cmp	r0, r3
   14800:	beq	149ac <__assert_fail@plt+0x35a8>
   14804:	movwcc	r0, #55640	; 0xd958
   14808:	movtcc	r0, #5
   1480c:	bcc	146b8 <__assert_fail@plt+0x32b4>
   14810:	mov	r3, #65024	; 0xfe00
   14814:	movt	r3, #28671	; 0x6fff
   14818:	cmp	r4, r3
   1481c:	movweq	r0, #55660	; 0xd96c
   14820:	movteq	r0, #5
   14824:	beq	146b8 <__assert_fail@plt+0x32b4>
   14828:	b	145e0 <__assert_fail@plt+0x31dc>
   1482c:	cmp	r0, #9
   14830:	beq	149b8 <__assert_fail@plt+0x35b4>
   14834:	movwls	r0, #55384	; 0xd858
   14838:	movtls	r0, #5
   1483c:	movwhi	r0, #55400	; 0xd868
   14840:	movthi	r0, #5
   14844:	b	146b8 <__assert_fail@plt+0x32b4>
   14848:	cmn	r0, #-1879048191	; 0x90000001
   1484c:	movweq	r0, #55816	; 0xda08
   14850:	movteq	r0, #5
   14854:	beq	146b8 <__assert_fail@plt+0x32b4>
   14858:	b	145e0 <__assert_fail@plt+0x31dc>
   1485c:	movw	r0, #55888	; 0xda50
   14860:	movt	r0, #5
   14864:	b	146b8 <__assert_fail@plt+0x32b4>
   14868:	movw	r0, #55524	; 0xd8e4
   1486c:	movt	r0, #5
   14870:	b	146b8 <__assert_fail@plt+0x32b4>
   14874:	movw	r0, #55672	; 0xd978
   14878:	movt	r0, #5
   1487c:	b	146b8 <__assert_fail@plt+0x32b4>
   14880:	movw	r0, #55628	; 0xd94c
   14884:	movt	r0, #5
   14888:	b	146b8 <__assert_fail@plt+0x32b4>
   1488c:	movw	r0, #55808	; 0xda00
   14890:	movt	r0, #5
   14894:	b	146b8 <__assert_fail@plt+0x32b4>
   14898:	movw	r0, #55496	; 0xd8c8
   1489c:	movt	r0, #5
   148a0:	b	146b8 <__assert_fail@plt+0x32b4>
   148a4:	movw	r0, #55592	; 0xd928
   148a8:	movt	r0, #5
   148ac:	b	146b8 <__assert_fail@plt+0x32b4>
   148b0:	movw	r0, #55368	; 0xd848
   148b4:	movt	r0, #5
   148b8:	b	146b8 <__assert_fail@plt+0x32b4>
   148bc:	movw	r0, #55456	; 0xd8a0
   148c0:	movt	r0, #5
   148c4:	b	146b8 <__assert_fail@plt+0x32b4>
   148c8:	movw	r0, #3944	; 0xf68
   148cc:	movt	r0, #6
   148d0:	b	146b8 <__assert_fail@plt+0x32b4>
   148d4:	movw	r0, #55360	; 0xd840
   148d8:	movt	r0, #5
   148dc:	b	146b8 <__assert_fail@plt+0x32b4>
   148e0:	movw	r0, #55744	; 0xd9c0
   148e4:	movt	r0, #5
   148e8:	b	146b8 <__assert_fail@plt+0x32b4>
   148ec:	movw	r0, #55352	; 0xd838
   148f0:	movt	r0, #5
   148f4:	b	146b8 <__assert_fail@plt+0x32b4>
   148f8:	movw	r0, #55724	; 0xd9ac
   148fc:	movt	r0, #5
   14900:	b	146b8 <__assert_fail@plt+0x32b4>
   14904:	movw	r0, #55768	; 0xd9d8
   14908:	movt	r0, #5
   1490c:	b	146b8 <__assert_fail@plt+0x32b4>
   14910:	movw	r0, #55472	; 0xd8b0
   14914:	movt	r0, #5
   14918:	b	146b8 <__assert_fail@plt+0x32b4>
   1491c:	movw	r0, #21184	; 0x52c0
   14920:	movt	r0, #7
   14924:	b	146b8 <__assert_fail@plt+0x32b4>
   14928:	movw	r0, #56556	; 0xdcec
   1492c:	movt	r0, #6
   14930:	b	146b8 <__assert_fail@plt+0x32b4>
   14934:	movw	r0, #55828	; 0xda14
   14938:	movt	r0, #5
   1493c:	b	146b8 <__assert_fail@plt+0x32b4>
   14940:	movw	r0, #55540	; 0xd8f4
   14944:	movt	r0, #5
   14948:	b	146b8 <__assert_fail@plt+0x32b4>
   1494c:	movw	r0, #55708	; 0xd99c
   14950:	movt	r0, #5
   14954:	b	146b8 <__assert_fail@plt+0x32b4>
   14958:	movw	r0, #55692	; 0xd98c
   1495c:	movt	r0, #5
   14960:	b	146b8 <__assert_fail@plt+0x32b4>
   14964:	movw	r0, #55612	; 0xd93c
   14968:	movt	r0, #5
   1496c:	b	146b8 <__assert_fail@plt+0x32b4>
   14970:	movw	r0, #55904	; 0xda60
   14974:	movt	r0, #5
   14978:	b	146b8 <__assert_fail@plt+0x32b4>
   1497c:	movw	r0, #55788	; 0xd9ec
   14980:	movt	r0, #5
   14984:	b	146b8 <__assert_fail@plt+0x32b4>
   14988:	movw	r0, #55440	; 0xd890
   1498c:	movt	r0, #5
   14990:	b	146b8 <__assert_fail@plt+0x32b4>
   14994:	movw	r0, #30480	; 0x7710
   14998:	movt	r0, #6
   1499c:	b	146b8 <__assert_fail@plt+0x32b4>
   149a0:	movw	r0, #55408	; 0xd870
   149a4:	movt	r0, #5
   149a8:	b	146b8 <__assert_fail@plt+0x32b4>
   149ac:	movw	r0, #55648	; 0xd960
   149b0:	movt	r0, #5
   149b4:	b	146b8 <__assert_fail@plt+0x32b4>
   149b8:	movw	r0, #55392	; 0xd860
   149bc:	movt	r0, #5
   149c0:	b	146b8 <__assert_fail@plt+0x32b4>
   149c4:	movw	r3, #61427	; 0xeff3
   149c8:	sub	r2, r4, #1610612749	; 0x6000000d
   149cc:	movt	r3, #4095	; 0xfff
   149d0:	cmp	r2, r3
   149d4:	movw	r3, #16712	; 0x4148
   149d8:	movt	r3, #9
   149dc:	bls	14a38 <__assert_fail@plt+0x3634>
   149e0:	ldrh	r3, [r3, #50]	; 0x32
   149e4:	cmp	r3, #15
   149e8:	bne	14a64 <__assert_fail@plt+0x3660>
   149ec:	add	r3, r4, #-1610612736	; 0xa0000000
   149f0:	cmn	r3, #-268435455	; 0xf0000001
   149f4:	bhi	14a64 <__assert_fail@plt+0x3660>
   149f8:	cmp	r3, #23
   149fc:	bls	14b00 <__assert_fail@plt+0x36fc>
   14a00:	movw	r1, #56052	; 0xdaf4
   14a04:	movt	r1, #5
   14a08:	mov	r0, #0
   14a0c:	mov	r2, #5
   14a10:	bl	11170 <dcgettext@plt>
   14a14:	mov	r1, #64	; 0x40
   14a18:	str	r4, [sp, #4]
   14a1c:	mov	r3, r1
   14a20:	mov	r2, #1
   14a24:	str	r0, [sp]
   14a28:	ldr	r0, [pc, #472]	; 14c08 <__assert_fail@plt+0x3804>
   14a2c:	bl	113f8 <__snprintf_chk@plt>
   14a30:	ldr	r0, [pc, #464]	; 14c08 <__assert_fail@plt+0x3804>
   14a34:	b	146b8 <__assert_fail@plt+0x32b4>
   14a38:	ldrh	r2, [r3, #50]	; 0x32
   14a3c:	cmp	r2, #15
   14a40:	addeq	r3, r4, #-1610612736	; 0xa0000000
   14a44:	beq	149f8 <__assert_fail@plt+0x35f4>
   14a48:	cmp	r2, #50	; 0x32
   14a4c:	bne	14ae8 <__assert_fail@plt+0x36e4>
   14a50:	mov	r0, r4
   14a54:	bl	12a64 <__assert_fail@plt+0x1660>
   14a58:	cmp	r0, #0
   14a5c:	bne	146b8 <__assert_fail@plt+0x32b4>
   14a60:	b	14a00 <__assert_fail@plt+0x35fc>
   14a64:	movw	r1, #56084	; 0xdb14
   14a68:	mov	r0, #0
   14a6c:	movt	r1, #5
   14a70:	b	14a0c <__assert_fail@plt+0x3608>
   14a74:	cmp	r1, #10
   14a78:	beq	14b7c <__assert_fail@plt+0x3778>
   14a7c:	bls	14b74 <__assert_fail@plt+0x3770>
   14a80:	cmp	r1, #20
   14a84:	beq	14b9c <__assert_fail@plt+0x3798>
   14a88:	cmp	r1, #21
   14a8c:	bne	14bd8 <__assert_fail@plt+0x37d4>
   14a90:	cmp	r3, #3
   14a94:	bhi	14ab0 <__assert_fail@plt+0x36ac>
   14a98:	movw	r2, #19132	; 0x4abc
   14a9c:	movt	r2, #5
   14aa0:	add	r3, r2, r3, lsl #2
   14aa4:	ldr	r0, [r3, #232]	; 0xe8
   14aa8:	cmp	r0, #0
   14aac:	bne	146b8 <__assert_fail@plt+0x32b4>
   14ab0:	movw	r1, #56028	; 0xdadc
   14ab4:	mov	r0, #0
   14ab8:	movt	r1, #5
   14abc:	b	14a0c <__assert_fail@plt+0x3608>
   14ac0:	cmp	r1, #140	; 0x8c
   14ac4:	beq	14b28 <__assert_fail@plt+0x3724>
   14ac8:	movw	r3, #36902	; 0x9026
   14acc:	cmp	r1, r3
   14ad0:	bne	14bd8 <__assert_fail@plt+0x37d4>
   14ad4:	cmp	r4, #1879048192	; 0x70000000
   14ad8:	bne	14ab0 <__assert_fail@plt+0x36ac>
   14adc:	movw	r0, #55924	; 0xda74
   14ae0:	movt	r0, #5
   14ae4:	b	146b8 <__assert_fail@plt+0x32b4>
   14ae8:	ldrb	r3, [r3, #7]
   14aec:	cmp	r3, #6
   14af0:	bne	14a00 <__assert_fail@plt+0x35fc>
   14af4:	mov	r0, r4
   14af8:	bl	11410 <__assert_fail@plt+0xc>
   14afc:	b	14a58 <__assert_fail@plt+0x3654>
   14b00:	movw	r2, #19132	; 0x4abc
   14b04:	movt	r2, #5
   14b08:	add	r3, r2, r3, lsl #2
   14b0c:	ldr	r0, [r3, #272]	; 0x110
   14b10:	b	14a58 <__assert_fail@plt+0x3654>
   14b14:	cmp	r4, #1879048193	; 0x70000001
   14b18:	bne	14ab0 <__assert_fail@plt+0x36ac>
   14b1c:	movw	r0, #50560	; 0xc580
   14b20:	movt	r0, #5
   14b24:	b	146b8 <__assert_fail@plt+0x32b4>
   14b28:	cmp	r3, #3
   14b2c:	ldrls	pc, [pc, r3, lsl #2]
   14b30:	b	14ab0 <__assert_fail@plt+0x36ac>
   14b34:	andeq	r4, r1, r0, asr fp
   14b38:	andeq	r4, r1, r4, asr #22
   14b3c:	andeq	r4, r1, ip, asr fp
   14b40:	andeq	r4, r1, r8, ror #22
   14b44:	movw	r0, #55952	; 0xda90
   14b48:	movt	r0, #5
   14b4c:	b	146b8 <__assert_fail@plt+0x32b4>
   14b50:	movw	r0, #55936	; 0xda80
   14b54:	movt	r0, #5
   14b58:	b	146b8 <__assert_fail@plt+0x32b4>
   14b5c:	movw	r0, #55968	; 0xdaa0
   14b60:	movt	r0, #5
   14b64:	b	146b8 <__assert_fail@plt+0x32b4>
   14b68:	movw	r0, #55988	; 0xdab4
   14b6c:	movt	r0, #5
   14b70:	b	146b8 <__assert_fail@plt+0x32b4>
   14b74:	cmp	r1, #8
   14b78:	bne	14bd8 <__assert_fail@plt+0x37d4>
   14b7c:	sub	r2, r4, #1879048193	; 0x70000001
   14b80:	cmp	r2, #52	; 0x34
   14b84:	bhi	14ab0 <__assert_fail@plt+0x36ac>
   14b88:	movw	r3, #19132	; 0x4abc
   14b8c:	movt	r3, #5
   14b90:	add	r3, r3, r2, lsl #2
   14b94:	ldr	r0, [r3, #20]
   14b98:	b	14aa8 <__assert_fail@plt+0x36a4>
   14b9c:	cmp	r4, #1879048192	; 0x70000000
   14ba0:	beq	14bfc <__assert_fail@plt+0x37f8>
   14ba4:	cmp	r4, #1879048193	; 0x70000001
   14ba8:	bne	14ab0 <__assert_fail@plt+0x36ac>
   14bac:	movw	r0, #56008	; 0xdac8
   14bb0:	movt	r0, #5
   14bb4:	b	146b8 <__assert_fail@plt+0x32b4>
   14bb8:	sub	r2, r4, #1879048193	; 0x70000001
   14bbc:	cmp	r2, #5
   14bc0:	bhi	14ab0 <__assert_fail@plt+0x36ac>
   14bc4:	movw	r3, #19132	; 0x4abc
   14bc8:	movt	r3, #5
   14bcc:	add	r3, r3, r2, lsl #2
   14bd0:	ldr	r0, [r3, #248]	; 0xf8
   14bd4:	b	14aa8 <__assert_fail@plt+0x36a4>
   14bd8:	ldrb	r3, [r2, #7]
   14bdc:	cmp	r3, #6
   14be0:	bne	14ab0 <__assert_fail@plt+0x36ac>
   14be4:	mov	r0, r4
   14be8:	bl	11410 <__assert_fail@plt+0xc>
   14bec:	b	14aa8 <__assert_fail@plt+0x36a4>
   14bf0:	mov	r0, r4
   14bf4:	bl	12a64 <__assert_fail@plt+0x1660>
   14bf8:	b	14aa8 <__assert_fail@plt+0x36a4>
   14bfc:	movw	r0, #55916	; 0xda6c
   14c00:	movt	r0, #5
   14c04:	b	146b8 <__assert_fail@plt+0x32b4>
   14c08:	andeq	r4, r9, r8, lsl #5
   14c0c:	movw	r3, #16712	; 0x4148
   14c10:	movt	r3, #9
   14c14:	push	{r4, lr}
   14c18:	mov	r4, r0
   14c1c:	ldrh	r3, [r3, #48]	; 0x30
   14c20:	sub	sp, sp, #8
   14c24:	cmp	r3, #4
   14c28:	beq	14c74 <__assert_fail@plt+0x3870>
   14c2c:	cmp	r0, #1
   14c30:	beq	14c58 <__assert_fail@plt+0x3854>
   14c34:	cmp	r0, #2
   14c38:	bne	14ccc <__assert_fail@plt+0x38c8>
   14c3c:	movw	r1, #57504	; 0xe0a0
   14c40:	movt	r1, #5
   14c44:	mov	r0, #0
   14c48:	mov	r2, #5
   14c4c:	add	sp, sp, #8
   14c50:	pop	{r4, lr}
   14c54:	b	11170 <dcgettext@plt>
   14c58:	movw	r1, #57480	; 0xe088
   14c5c:	mov	r0, #0
   14c60:	movt	r1, #5
   14c64:	mov	r2, #5
   14c68:	add	sp, sp, #8
   14c6c:	pop	{r4, lr}
   14c70:	b	11170 <dcgettext@plt>
   14c74:	cmp	r0, #768	; 0x300
   14c78:	beq	14eb8 <__assert_fail@plt+0x3ab4>
   14c7c:	bls	14d08 <__assert_fail@plt+0x3904>
   14c80:	movw	r3, #777	; 0x309
   14c84:	cmp	r0, r3
   14c88:	beq	14f98 <__assert_fail@plt+0x3b94>
   14c8c:	bhi	14d54 <__assert_fail@plt+0x3950>
   14c90:	cmp	r0, #772	; 0x304
   14c94:	beq	14f88 <__assert_fail@plt+0x3b84>
   14c98:	bls	14e00 <__assert_fail@plt+0x39fc>
   14c9c:	movw	r3, #774	; 0x306
   14ca0:	cmp	r0, r3
   14ca4:	beq	14fb8 <__assert_fail@plt+0x3bb4>
   14ca8:	bcc	14fa8 <__assert_fail@plt+0x3ba4>
   14cac:	add	r3, r3, #1
   14cb0:	cmp	r0, r3
   14cb4:	beq	14ec8 <__assert_fail@plt+0x3ac4>
   14cb8:	cmp	r0, #776	; 0x308
   14cbc:	movweq	r1, #56868	; 0xde24
   14cc0:	moveq	r0, #0
   14cc4:	movteq	r1, #5
   14cc8:	beq	14c48 <__assert_fail@plt+0x3844>
   14ccc:	mov	r2, #5
   14cd0:	movw	r1, #57528	; 0xe0b8
   14cd4:	mov	r0, #0
   14cd8:	movt	r1, #5
   14cdc:	bl	11170 <dcgettext@plt>
   14ce0:	mov	r1, #64	; 0x40
   14ce4:	str	r4, [sp, #4]
   14ce8:	mov	r3, r1
   14cec:	mov	r2, #1
   14cf0:	str	r0, [sp]
   14cf4:	ldr	r0, [pc, #812]	; 15028 <__assert_fail@plt+0x3c24>
   14cf8:	bl	113f8 <__snprintf_chk@plt>
   14cfc:	ldr	r0, [pc, #804]	; 15028 <__assert_fail@plt+0x3c24>
   14d00:	add	sp, sp, #8
   14d04:	pop	{r4, pc}
   14d08:	cmp	r0, #13
   14d0c:	beq	14f78 <__assert_fail@plt+0x3b74>
   14d10:	bls	14da8 <__assert_fail@plt+0x39a4>
   14d14:	cmp	r0, #256	; 0x100
   14d18:	beq	14f68 <__assert_fail@plt+0x3b64>
   14d1c:	bls	14dd8 <__assert_fail@plt+0x39d4>
   14d20:	cmp	r0, #512	; 0x200
   14d24:	beq	14f38 <__assert_fail@plt+0x3b34>
   14d28:	bls	14e8c <__assert_fail@plt+0x3a88>
   14d2c:	movw	r3, #513	; 0x201
   14d30:	cmp	r0, r3
   14d34:	beq	14ea8 <__assert_fail@plt+0x3aa4>
   14d38:	add	r3, r3, #1
   14d3c:	cmp	r0, r3
   14d40:	movweq	r1, #56452	; 0xdc84
   14d44:	moveq	r0, #0
   14d48:	movteq	r1, #5
   14d4c:	beq	14c48 <__assert_fail@plt+0x3844>
   14d50:	b	14ccc <__assert_fail@plt+0x38c8>
   14d54:	movw	r3, #1026	; 0x402
   14d58:	cmp	r0, r3
   14d5c:	beq	14ee8 <__assert_fail@plt+0x3ae4>
   14d60:	bls	14e20 <__assert_fail@plt+0x3a1c>
   14d64:	movw	r3, #19525	; 0x4c45
   14d68:	movt	r3, #17993	; 0x4649
   14d6c:	cmp	r0, r3
   14d70:	beq	14f28 <__assert_fail@plt+0x3b24>
   14d74:	bls	14e70 <__assert_fail@plt+0x3a6c>
   14d78:	movw	r3, #11135	; 0x2b7f
   14d7c:	movt	r3, #18150	; 0x46e6
   14d80:	cmp	r0, r3
   14d84:	beq	14ef8 <__assert_fail@plt+0x3af4>
   14d88:	movw	r3, #18249	; 0x4749
   14d8c:	movt	r3, #21321	; 0x5349
   14d90:	cmp	r0, r3
   14d94:	movweq	r1, #57428	; 0xe054
   14d98:	moveq	r0, #0
   14d9c:	movteq	r1, #5
   14da0:	beq	14c48 <__assert_fail@plt+0x3844>
   14da4:	b	14ccc <__assert_fail@plt+0x38c8>
   14da8:	cmp	r0, #4
   14dac:	beq	14ed8 <__assert_fail@plt+0x3ad4>
   14db0:	bhi	14e48 <__assert_fail@plt+0x3a44>
   14db4:	cmp	r0, #2
   14db8:	beq	14fd8 <__assert_fail@plt+0x3bd4>
   14dbc:	bhi	14fc8 <__assert_fail@plt+0x3bc4>
   14dc0:	cmp	r0, #1
   14dc4:	movweq	r1, #56128	; 0xdb40
   14dc8:	moveq	r0, #0
   14dcc:	movteq	r1, #5
   14dd0:	beq	14c48 <__assert_fail@plt+0x3844>
   14dd4:	b	14ccc <__assert_fail@plt+0x38c8>
   14dd8:	cmp	r0, #17
   14ddc:	beq	14f58 <__assert_fail@plt+0x3b54>
   14de0:	cmp	r0, #18
   14de4:	beq	14f48 <__assert_fail@plt+0x3b44>
   14de8:	cmp	r0, #16
   14dec:	bne	14ccc <__assert_fail@plt+0x38c8>
   14df0:	movw	r1, #57308	; 0xdfdc
   14df4:	mov	r0, #0
   14df8:	movt	r1, #5
   14dfc:	b	14c48 <__assert_fail@plt+0x3844>
   14e00:	movw	r3, #770	; 0x302
   14e04:	cmp	r0, r3
   14e08:	beq	14ff8 <__assert_fail@plt+0x3bf4>
   14e0c:	bhi	14fe8 <__assert_fail@plt+0x3be4>
   14e10:	movw	r1, #56544	; 0xdce0
   14e14:	mov	r0, #0
   14e18:	movt	r1, #5
   14e1c:	b	14c48 <__assert_fail@plt+0x3844>
   14e20:	cmp	r0, #1024	; 0x400
   14e24:	beq	15018 <__assert_fail@plt+0x3c14>
   14e28:	bhi	15008 <__assert_fail@plt+0x3c04>
   14e2c:	movw	r3, #778	; 0x30a
   14e30:	cmp	r0, r3
   14e34:	movweq	r1, #56976	; 0xde90
   14e38:	moveq	r0, #0
   14e3c:	movteq	r1, #5
   14e40:	beq	14c48 <__assert_fail@plt+0x3844>
   14e44:	b	14ccc <__assert_fail@plt+0x38c8>
   14e48:	cmp	r0, #10
   14e4c:	beq	14f18 <__assert_fail@plt+0x3b14>
   14e50:	cmp	r0, #12
   14e54:	beq	14f08 <__assert_fail@plt+0x3b04>
   14e58:	cmp	r0, #6
   14e5c:	bne	14ccc <__assert_fail@plt+0x38c8>
   14e60:	movw	r1, #56100	; 0xdb24
   14e64:	mov	r0, #0
   14e68:	movt	r1, #5
   14e6c:	b	14c48 <__assert_fail@plt+0x3844>
   14e70:	movw	r3, #1027	; 0x403
   14e74:	cmp	r0, r3
   14e78:	movweq	r1, #57148	; 0xdf3c
   14e7c:	moveq	r0, #0
   14e80:	movteq	r1, #5
   14e84:	beq	14c48 <__assert_fail@plt+0x3844>
   14e88:	b	14ccc <__assert_fail@plt+0x38c8>
   14e8c:	movw	r3, #258	; 0x102
   14e90:	cmp	r0, r3
   14e94:	movweq	r1, #56348	; 0xdc1c
   14e98:	moveq	r0, #0
   14e9c:	movteq	r1, #5
   14ea0:	beq	14c48 <__assert_fail@plt+0x3844>
   14ea4:	b	14ccc <__assert_fail@plt+0x38c8>
   14ea8:	movw	r1, #56416	; 0xdc60
   14eac:	mov	r0, #0
   14eb0:	movt	r1, #5
   14eb4:	b	14c48 <__assert_fail@plt+0x3844>
   14eb8:	movw	r1, #56496	; 0xdcb0
   14ebc:	mov	r0, #0
   14ec0:	movt	r1, #5
   14ec4:	b	14c48 <__assert_fail@plt+0x3844>
   14ec8:	movw	r1, #56816	; 0xddf0
   14ecc:	mov	r0, #0
   14ed0:	movt	r1, #5
   14ed4:	b	14c48 <__assert_fail@plt+0x3844>
   14ed8:	movw	r1, #56240	; 0xdbb0
   14edc:	mov	r0, #0
   14ee0:	movt	r1, #5
   14ee4:	b	14c48 <__assert_fail@plt+0x3844>
   14ee8:	movw	r1, #57092	; 0xdf04
   14eec:	mov	r0, #0
   14ef0:	movt	r1, #5
   14ef4:	b	14c48 <__assert_fail@plt+0x3844>
   14ef8:	movw	r1, #56272	; 0xdbd0
   14efc:	mov	r0, #0
   14f00:	movt	r1, #5
   14f04:	b	14c48 <__assert_fail@plt+0x3844>
   14f08:	movw	r1, #57236	; 0xdf94
   14f0c:	mov	r0, #0
   14f10:	movt	r1, #5
   14f14:	b	14c48 <__assert_fail@plt+0x3844>
   14f18:	movw	r1, #57204	; 0xdf74
   14f1c:	mov	r0, #0
   14f20:	movt	r1, #5
   14f24:	b	14c48 <__assert_fail@plt+0x3844>
   14f28:	movw	r1, #57456	; 0xe070
   14f2c:	mov	r0, #0
   14f30:	movt	r1, #5
   14f34:	b	14c48 <__assert_fail@plt+0x3844>
   14f38:	movw	r1, #56380	; 0xdc3c
   14f3c:	mov	r0, #0
   14f40:	movt	r1, #5
   14f44:	b	14c48 <__assert_fail@plt+0x3844>
   14f48:	movw	r1, #57384	; 0xe028
   14f4c:	mov	r0, #0
   14f50:	movt	r1, #5
   14f54:	b	14c48 <__assert_fail@plt+0x3844>
   14f58:	movw	r1, #57348	; 0xe004
   14f5c:	mov	r0, #0
   14f60:	movt	r1, #5
   14f64:	b	14c48 <__assert_fail@plt+0x3844>
   14f68:	movw	r1, #56312	; 0xdbf8
   14f6c:	mov	r0, #0
   14f70:	movt	r1, #5
   14f74:	b	14c48 <__assert_fail@plt+0x3844>
   14f78:	movw	r1, #57276	; 0xdfbc
   14f7c:	mov	r0, #0
   14f80:	movt	r1, #5
   14f84:	b	14c48 <__assert_fail@plt+0x3844>
   14f88:	movw	r1, #56680	; 0xdd68
   14f8c:	mov	r0, #0
   14f90:	movt	r1, #5
   14f94:	b	14c48 <__assert_fail@plt+0x3844>
   14f98:	movw	r1, #56916	; 0xde54
   14f9c:	mov	r0, #0
   14fa0:	movt	r1, #5
   14fa4:	b	14c48 <__assert_fail@plt+0x3844>
   14fa8:	movw	r1, #56720	; 0xdd90
   14fac:	mov	r0, #0
   14fb0:	movt	r1, #5
   14fb4:	b	14c48 <__assert_fail@plt+0x3844>
   14fb8:	movw	r1, #56760	; 0xddb8
   14fbc:	mov	r0, #0
   14fc0:	movt	r1, #5
   14fc4:	b	14c48 <__assert_fail@plt+0x3844>
   14fc8:	movw	r1, #56204	; 0xdb8c
   14fcc:	mov	r0, #0
   14fd0:	movt	r1, #5
   14fd4:	b	14c48 <__assert_fail@plt+0x3844>
   14fd8:	movw	r1, #56164	; 0xdb64
   14fdc:	mov	r0, #0
   14fe0:	movt	r1, #5
   14fe4:	b	14c48 <__assert_fail@plt+0x3844>
   14fe8:	movw	r1, #56628	; 0xdd34
   14fec:	mov	r0, #0
   14ff0:	movt	r1, #5
   14ff4:	b	14c48 <__assert_fail@plt+0x3844>
   14ff8:	movw	r1, #56580	; 0xdd04
   14ffc:	mov	r0, #0
   15000:	movt	r1, #5
   15004:	b	14c48 <__assert_fail@plt+0x3844>
   15008:	movw	r1, #57056	; 0xdee0
   1500c:	mov	r0, #0
   15010:	movt	r1, #5
   15014:	b	14c48 <__assert_fail@plt+0x3844>
   15018:	movw	r1, #57024	; 0xdec0
   1501c:	mov	r0, #0
   15020:	movt	r1, #5
   15024:	b	14c48 <__assert_fail@plt+0x3844>
   15028:	andeq	r4, r9, r8, asr #5
   1502c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15030:	sub	sp, sp, #52	; 0x34
   15034:	mov	fp, r2
   15038:	mov	ip, r0
   1503c:	ldrd	r4, [sp, #88]	; 0x58
   15040:	ldrd	r6, [sp, #96]	; 0x60
   15044:	str	r1, [sp, #20]
   15048:	orrs	r1, r4, r5
   1504c:	movne	sl, #0
   15050:	moveq	sl, #1
   15054:	orrs	r2, r6, r7
   15058:	orreq	sl, sl, #1
   1505c:	cmp	sl, #0
   15060:	bne	15170 <__assert_fail@plt+0x3d6c>
   15064:	mvn	r0, #0
   15068:	mov	r1, #0
   1506c:	and	r8, r4, r0
   15070:	and	r9, r5, r1
   15074:	cmp	r9, r5
   15078:	cmpeq	r8, r4
   1507c:	beq	150c4 <__assert_fail@plt+0x3cc0>
   15080:	ldr	r3, [sp, #104]	; 0x68
   15084:	cmp	r3, #0
   15088:	beq	15170 <__assert_fail@plt+0x3d6c>
   1508c:	mov	r2, #5
   15090:	movw	r1, #57556	; 0xe0d4
   15094:	mov	r0, #0
   15098:	movt	r1, #5
   1509c:	bl	11170 <dcgettext@plt>
   150a0:	ldr	r1, [sp, #104]	; 0x68
   150a4:	strd	r4, [sp]
   150a8:	mov	r2, r6
   150ac:	mov	r3, r7
   150b0:	str	r1, [sp, #8]
   150b4:	bl	4b2b0 <error@@Base>
   150b8:	mov	r0, #0
   150bc:	add	sp, sp, #52	; 0x34
   150c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150c4:	and	r2, r6, r0
   150c8:	and	r3, r7, r1
   150cc:	cmp	r3, r7
   150d0:	cmpeq	r2, r6
   150d4:	strd	r2, [sp, #32]
   150d8:	bne	15080 <__assert_fail@plt+0x3c7c>
   150dc:	ldr	r3, [sp, #36]	; 0x24
   150e0:	ldr	r1, [sp, #32]
   150e4:	mul	r2, r8, r3
   150e8:	mla	r2, r1, r9, r2
   150ec:	umull	r6, r7, r8, r1
   150f0:	add	r7, r2, r7
   150f4:	ldrd	r2, [sp, #32]
   150f8:	cmp	r7, r3
   150fc:	cmpeq	r6, r2
   15100:	bcc	1517c <__assert_fail@plt+0x3d78>
   15104:	movw	r4, #16712	; 0x4148
   15108:	movt	r4, #9
   1510c:	mov	r2, #448	; 0x1c0
   15110:	ldrd	r0, [r4, r2]
   15114:	cmp	r7, r1
   15118:	cmpeq	r6, r0
   1511c:	bhi	1513c <__assert_fail@plt+0x3d38>
   15120:	ldr	r2, [r4, #456]	; 0x1c8
   15124:	add	r5, fp, r2
   15128:	adds	r2, r6, r5
   1512c:	adc	r3, r7, #0
   15130:	cmp	r1, r3
   15134:	cmpeq	r0, r2
   15138:	bcs	151b8 <__assert_fail@plt+0x3db4>
   1513c:	ldr	r3, [sp, #104]	; 0x68
   15140:	cmp	r3, #0
   15144:	beq	15170 <__assert_fail@plt+0x3d6c>
   15148:	movw	r1, #57700	; 0xe164
   1514c:	movt	r1, #5
   15150:	mov	r0, #0
   15154:	mov	r2, #5
   15158:	bl	11170 <dcgettext@plt>
   1515c:	ldr	r1, [sp, #104]	; 0x68
   15160:	mov	r2, r6
   15164:	mov	r3, r7
   15168:	str	r1, [sp]
   1516c:	bl	4b2b0 <error@@Base>
   15170:	mov	r0, #0
   15174:	add	sp, sp, #52	; 0x34
   15178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1517c:	ldr	r3, [sp, #104]	; 0x68
   15180:	cmp	r3, #0
   15184:	beq	15170 <__assert_fail@plt+0x3d6c>
   15188:	mov	r2, #5
   1518c:	movw	r1, #57628	; 0xe11c
   15190:	mov	r0, sl
   15194:	movt	r1, #5
   15198:	bl	11170 <dcgettext@plt>
   1519c:	ldr	r1, [sp, #104]	; 0x68
   151a0:	strd	r8, [sp]
   151a4:	ldrd	r2, [sp, #32]
   151a8:	str	r1, [sp, #8]
   151ac:	bl	4b2b0 <error@@Base>
   151b0:	mov	r0, sl
   151b4:	b	150bc <__assert_fail@plt+0x3cb8>
   151b8:	mov	r1, r5
   151bc:	ldr	r0, [sp, #20]
   151c0:	mov	r2, sl
   151c4:	str	ip, [sp, #28]
   151c8:	bl	113bc <fseek@plt>
   151cc:	ldr	ip, [sp, #28]
   151d0:	cmp	r0, #0
   151d4:	beq	15210 <__assert_fail@plt+0x3e0c>
   151d8:	ldr	r2, [sp, #104]	; 0x68
   151dc:	cmp	r2, #0
   151e0:	beq	15170 <__assert_fail@plt+0x3d6c>
   151e4:	mov	r2, #5
   151e8:	movw	r1, #57756	; 0xe19c
   151ec:	mov	r0, sl
   151f0:	movt	r1, #5
   151f4:	bl	11170 <dcgettext@plt>
   151f8:	ldr	r1, [r4, #456]	; 0x1c8
   151fc:	ldr	r2, [sp, #104]	; 0x68
   15200:	add	r1, fp, r1
   15204:	bl	4b2b0 <error@@Base>
   15208:	mov	r0, sl
   1520c:	b	150bc <__assert_fail@plt+0x3cb8>
   15210:	cmp	ip, #0
   15214:	movne	r4, ip
   15218:	beq	152a0 <__assert_fail@plt+0x3e9c>
   1521c:	mov	r1, r8
   15220:	ldr	r3, [sp, #20]
   15224:	ldr	r2, [sp, #32]
   15228:	mov	r0, r4
   1522c:	str	ip, [sp, #28]
   15230:	bl	111f4 <fread@plt>
   15234:	ldrd	r2, [sp, #32]
   15238:	mov	r1, #0
   1523c:	ldr	ip, [sp, #28]
   15240:	cmp	r3, r1
   15244:	cmpeq	r2, r0
   15248:	moveq	r0, r4
   1524c:	beq	150bc <__assert_fail@plt+0x3cb8>
   15250:	ldr	r3, [sp, #104]	; 0x68
   15254:	cmp	r3, #0
   15258:	beq	15288 <__assert_fail@plt+0x3e84>
   1525c:	mov	r2, #5
   15260:	movw	r1, #57836	; 0xe1ec
   15264:	mov	r0, #0
   15268:	movt	r1, #5
   1526c:	bl	11170 <dcgettext@plt>
   15270:	ldr	r1, [sp, #104]	; 0x68
   15274:	mov	r2, r6
   15278:	mov	r3, r7
   1527c:	str	r1, [sp]
   15280:	bl	4b2b0 <error@@Base>
   15284:	ldr	ip, [sp, #28]
   15288:	cmp	r4, ip
   1528c:	beq	15170 <__assert_fail@plt+0x3d6c>
   15290:	mov	r0, r4
   15294:	bl	1111c <free@plt>
   15298:	mov	r0, #0
   1529c:	b	150bc <__assert_fail@plt+0x3cb8>
   152a0:	add	r0, r6, #1
   152a4:	str	ip, [sp, #28]
   152a8:	bl	11224 <malloc@plt>
   152ac:	ldr	ip, [sp, #28]
   152b0:	subs	r4, r0, #0
   152b4:	addne	r2, r4, r6
   152b8:	strbne	ip, [r2]
   152bc:	bne	1521c <__assert_fail@plt+0x3e18>
   152c0:	ldr	r3, [sp, #104]	; 0x68
   152c4:	cmp	r3, #0
   152c8:	beq	15170 <__assert_fail@plt+0x3d6c>
   152cc:	movw	r1, #57788	; 0xe1bc
   152d0:	movt	r1, #5
   152d4:	b	15154 <__assert_fail@plt+0x3d50>
   152d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152dc:	movw	fp, #16712	; 0x4148
   152e0:	movt	fp, #9
   152e4:	sub	sp, sp, #92	; 0x5c
   152e8:	mov	r5, r0
   152ec:	mov	r4, r1
   152f0:	ldr	r9, [fp, #460]	; 0x1cc
   152f4:	mov	sl, r2
   152f8:	str	r3, [sp, #80]	; 0x50
   152fc:	cmp	r9, #0
   15300:	beq	153f0 <__assert_fail@plt+0x3fec>
   15304:	mov	r2, #5
   15308:	movw	r1, #57876	; 0xe214
   1530c:	mov	r0, #0
   15310:	movt	r1, #5
   15314:	bl	11170 <dcgettext@plt>
   15318:	mov	r8, #0
   1531c:	mov	r1, r5
   15320:	mov	r2, r4
   15324:	str	sl, [sp, #8]
   15328:	mov	r4, #1
   1532c:	str	r8, [sp, #12]
   15330:	mov	r5, #0
   15334:	strd	r4, [sp]
   15338:	str	r0, [sp, #16]
   1533c:	mov	r0, r8
   15340:	bl	1502c <__assert_fail@plt+0x3c28>
   15344:	subs	r6, r0, #0
   15348:	beq	155b8 <__assert_fail@plt+0x41b4>
   1534c:	lsr	sl, sl, #3
   15350:	mov	r1, #24
   15354:	mov	r0, sl
   15358:	bl	3f74c <__assert_fail@plt+0x2e348>
   1535c:	cmp	r0, #0
   15360:	str	r0, [sp, #76]	; 0x4c
   15364:	beq	155ec <__assert_fail@plt+0x41e8>
   15368:	cmp	sl, #0
   1536c:	beq	153c8 <__assert_fail@plt+0x3fc4>
   15370:	ldr	r9, [sp, #76]	; 0x4c
   15374:	movw	r7, #26492	; 0x677c
   15378:	movt	r7, #9
   1537c:	mov	r4, #0
   15380:	mov	r5, #0
   15384:	mov	fp, r6
   15388:	ldr	r3, [r7]
   1538c:	mov	r0, fp
   15390:	mov	r1, #4
   15394:	add	r8, r8, #1
   15398:	blx	r3
   1539c:	ldr	r3, [r7]
   153a0:	add	r9, r9, #24
   153a4:	strd	r0, [r9, #-24]	; 0xffffffe8
   153a8:	add	r0, fp, #4
   153ac:	mov	r1, #4
   153b0:	add	fp, fp, #8
   153b4:	blx	r3
   153b8:	cmp	r8, sl
   153bc:	strd	r4, [r9, #-8]
   153c0:	strd	r0, [r9, #-16]
   153c4:	bne	15388 <__assert_fail@plt+0x3f84>
   153c8:	mov	r0, r6
   153cc:	bl	1111c <free@plt>
   153d0:	ldr	r3, [sp, #76]	; 0x4c
   153d4:	mov	r0, #1
   153d8:	ldr	r4, [sp, #80]	; 0x50
   153dc:	ldr	r5, [sp, #128]	; 0x80
   153e0:	str	r3, [r4]
   153e4:	str	sl, [r5]
   153e8:	add	sp, sp, #92	; 0x5c
   153ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153f0:	mov	r2, #5
   153f4:	movw	r1, #57932	; 0xe24c
   153f8:	mov	r0, r9
   153fc:	movt	r1, #5
   15400:	bl	11170 <dcgettext@plt>
   15404:	mov	r1, r5
   15408:	mov	r2, r4
   1540c:	str	sl, [sp, #8]
   15410:	str	r9, [sp, #12]
   15414:	mov	r4, #1
   15418:	mov	r5, #0
   1541c:	strd	r4, [sp]
   15420:	str	r0, [sp, #16]
   15424:	mov	r0, r9
   15428:	bl	1502c <__assert_fail@plt+0x3c28>
   1542c:	cmp	r0, #0
   15430:	str	r0, [sp, #84]	; 0x54
   15434:	beq	155b8 <__assert_fail@plt+0x41b4>
   15438:	lsr	sl, sl, #4
   1543c:	mov	r1, #24
   15440:	mov	r0, sl
   15444:	bl	3f74c <__assert_fail@plt+0x2e348>
   15448:	cmp	r0, #0
   1544c:	str	r0, [sp, #76]	; 0x4c
   15450:	beq	155c4 <__assert_fail@plt+0x41c0>
   15454:	cmp	sl, #0
   15458:	beq	155ac <__assert_fail@plt+0x41a8>
   1545c:	movw	r7, #26492	; 0x677c
   15460:	ldr	r8, [sp, #84]	; 0x54
   15464:	movt	r7, #9
   15468:	ldr	r6, [sp, #76]	; 0x4c
   1546c:	b	1547c <__assert_fail@plt+0x4078>
   15470:	cmp	r9, sl
   15474:	add	r6, r6, #24
   15478:	beq	155ac <__assert_fail@plt+0x41a8>
   1547c:	ldr	r3, [r7]
   15480:	mov	r0, r8
   15484:	mov	r1, #8
   15488:	add	r9, r9, #1
   1548c:	blx	r3
   15490:	ldr	r3, [r7]
   15494:	strd	r0, [r6]
   15498:	add	r0, r8, #8
   1549c:	mov	r1, #8
   154a0:	add	r8, r8, #16
   154a4:	blx	r3
   154a8:	ldrh	r3, [fp, #50]	; 0x32
   154ac:	mov	r2, #0
   154b0:	cmp	r3, #8
   154b4:	mov	r3, #0
   154b8:	strd	r2, [r6, #16]
   154bc:	str	r1, [r6, #12]
   154c0:	str	r0, [r6, #8]
   154c4:	bne	15470 <__assert_fail@plt+0x406c>
   154c8:	movw	r4, #16712	; 0x4148
   154cc:	movt	r4, #9
   154d0:	ldrb	r3, [r4, #5]
   154d4:	cmp	r3, #2
   154d8:	beq	15470 <__assert_fail@plt+0x406c>
   154dc:	lsr	r3, r0, #24
   154e0:	str	r0, [sp, #60]	; 0x3c
   154e4:	lsr	r0, r0, #8
   154e8:	str	r0, [sp, #48]	; 0x30
   154ec:	mov	r4, #0
   154f0:	str	r4, [sp, #36]	; 0x24
   154f4:	str	r4, [sp, #68]	; 0x44
   154f8:	lsr	r5, r1, #24
   154fc:	str	r4, [sp, #56]	; 0x38
   15500:	lsr	r2, r1, #8
   15504:	ldr	r4, [sp, #48]	; 0x30
   15508:	mov	r0, #16711680	; 0xff0000
   1550c:	str	r5, [sp, #32]
   15510:	orr	r5, r3, r1, lsl #8
   15514:	orr	r4, r4, r1, lsl #24
   15518:	str	r2, [sp, #64]	; 0x40
   1551c:	str	r5, [sp, #40]	; 0x28
   15520:	lsr	r2, r1, #24
   15524:	str	r4, [sp, #48]	; 0x30
   15528:	lsr	r1, r1, #8
   1552c:	str	r2, [sp, #44]	; 0x2c
   15530:	cmp	r9, sl
   15534:	ldrd	r2, [sp, #56]	; 0x38
   15538:	add	r6, r6, #24
   1553c:	ldrd	r4, [sp, #32]
   15540:	str	r1, [sp, #52]	; 0x34
   15544:	mov	r1, #0
   15548:	orr	r4, r4, r2
   1554c:	orr	r5, r5, r3
   15550:	ldrd	r2, [sp, #64]	; 0x40
   15554:	strd	r4, [sp, #24]
   15558:	mov	r4, #65280	; 0xff00
   1555c:	mov	r5, #0
   15560:	and	r2, r2, r4
   15564:	and	r3, r3, r5
   15568:	ldrd	r4, [sp, #24]
   1556c:	orr	r4, r4, r2
   15570:	orr	r5, r5, r3
   15574:	ldrd	r2, [sp, #40]	; 0x28
   15578:	and	r2, r2, r0
   1557c:	and	r3, r3, r1
   15580:	orr	r4, r4, r2
   15584:	orr	r5, r5, r3
   15588:	ldrd	r2, [sp, #48]	; 0x30
   1558c:	mov	r0, #-16777216	; 0xff000000
   15590:	mov	r1, #0
   15594:	and	r2, r2, r0
   15598:	and	r3, r3, r1
   1559c:	orr	r2, r2, r4
   155a0:	orr	r3, r3, r5
   155a4:	strd	r2, [r6, #-16]
   155a8:	bne	1547c <__assert_fail@plt+0x4078>
   155ac:	ldr	r0, [sp, #84]	; 0x54
   155b0:	bl	1111c <free@plt>
   155b4:	b	153d0 <__assert_fail@plt+0x3fcc>
   155b8:	mov	r0, #0
   155bc:	add	sp, sp, #92	; 0x5c
   155c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155c4:	ldr	r0, [sp, #84]	; 0x54
   155c8:	bl	1111c <free@plt>
   155cc:	mov	r2, #5
   155d0:	ldr	r0, [sp, #76]	; 0x4c
   155d4:	movw	r1, #57900	; 0xe22c
   155d8:	movt	r1, #5
   155dc:	bl	11170 <dcgettext@plt>
   155e0:	bl	4b2b0 <error@@Base>
   155e4:	ldr	r0, [sp, #76]	; 0x4c
   155e8:	b	153e8 <__assert_fail@plt+0x3fe4>
   155ec:	mov	r0, r6
   155f0:	b	155c8 <__assert_fail@plt+0x41c4>
   155f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155f8:	mov	r4, r1
   155fc:	ldrd	r6, [r1, #32]
   15600:	sub	sp, sp, #76	; 0x4c
   15604:	mov	r8, r0
   15608:	mov	r5, r2
   1560c:	orrs	r1, r6, r7
   15610:	bne	1562c <__assert_fail@plt+0x4228>
   15614:	cmp	r2, #0
   15618:	beq	15720 <__assert_fail@plt+0x431c>
   1561c:	mov	r0, #0
   15620:	str	r0, [r2]
   15624:	add	sp, sp, #76	; 0x4c
   15628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1562c:	ldrd	r2, [r4, #56]	; 0x38
   15630:	orrs	ip, r2, r3
   15634:	beq	15644 <__assert_fail@plt+0x4240>
   15638:	cmp	r7, r3
   1563c:	cmpeq	r6, r2
   15640:	bcs	15694 <__assert_fail@plt+0x4290>
   15644:	mov	r2, #5
   15648:	movw	r1, #57956	; 0xe264
   1564c:	mov	r0, #0
   15650:	movt	r1, #5
   15654:	bl	11170 <dcgettext@plt>
   15658:	mov	r6, r0
   1565c:	mov	r0, r4
   15660:	bl	132f8 <__assert_fail@plt+0x1ef4>
   15664:	ldr	r2, [r4, #56]	; 0x38
   15668:	mov	r1, r0
   1566c:	mov	r0, r6
   15670:	bl	4b2b0 <error@@Base>
   15674:	cmp	r5, #0
   15678:	movne	r8, #0
   1567c:	beq	15720 <__assert_fail@plt+0x431c>
   15680:	mov	r0, r8
   15684:	mov	r3, #0
   15688:	str	r3, [r5]
   1568c:	add	sp, sp, #76	; 0x4c
   15690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15694:	movw	r9, #16712	; 0x4148
   15698:	movt	r9, #9
   1569c:	mov	r1, #448	; 0x1c0
   156a0:	ldrd	r0, [r1, r9]
   156a4:	cmp	r7, r1
   156a8:	cmpeq	r6, r0
   156ac:	bhi	158d4 <__assert_fail@plt+0x44d0>
   156b0:	mov	r0, r6
   156b4:	mov	r1, r7
   156b8:	bl	529fc <zcfree@@Base+0x13cc>
   156bc:	adds	r2, r6, #1
   156c0:	adc	r3, r7, #0
   156c4:	mov	r1, #0
   156c8:	str	r0, [sp, #28]
   156cc:	lsl	r0, r0, #4
   156d0:	ldr	ip, [sp, #28]
   156d4:	cmp	r1, r3
   156d8:	cmpeq	r0, r2
   156dc:	str	ip, [sp, #56]	; 0x38
   156e0:	bls	1572c <__assert_fail@plt+0x4328>
   156e4:	mov	r2, #5
   156e8:	movw	r1, #58048	; 0xe2c0
   156ec:	mov	r0, #0
   156f0:	movt	r1, #5
   156f4:	bl	11170 <dcgettext@plt>
   156f8:	ldr	r6, [r4, #32]
   156fc:	mov	r7, r0
   15700:	mov	r0, r4
   15704:	bl	132f8 <__assert_fail@plt+0x1ef4>
   15708:	mov	r1, r6
   1570c:	ldr	r3, [r4, #56]	; 0x38
   15710:	mov	r2, r0
   15714:	mov	r0, r7
   15718:	bl	4b2b0 <error@@Base>
   1571c:	b	15674 <__assert_fail@plt+0x4270>
   15720:	mov	r0, r5
   15724:	add	sp, sp, #76	; 0x4c
   15728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1572c:	mov	r2, #5
   15730:	movw	r1, #65008	; 0xfdf0
   15734:	mov	r0, #0
   15738:	movt	r1, #7
   1573c:	ldr	sl, [r4, #24]
   15740:	bl	11170 <dcgettext@plt>
   15744:	strd	r6, [sp, #8]
   15748:	mov	r6, #0
   1574c:	mov	fp, #1
   15750:	str	r6, [sp, #4]
   15754:	str	fp, [sp]
   15758:	mov	r2, sl
   1575c:	mov	r1, r8
   15760:	str	r0, [sp, #16]
   15764:	mov	r0, r6
   15768:	bl	1502c <__assert_fail@plt+0x3c28>
   1576c:	cmp	r0, #0
   15770:	str	r0, [sp, #32]
   15774:	beq	15674 <__assert_fail@plt+0x4270>
   15778:	ldr	sl, [r9, #464]	; 0x1d0
   1577c:	cmp	sl, r6
   15780:	beq	15a64 <__assert_fail@plt+0x4660>
   15784:	ldr	r2, [sp, #28]
   15788:	mov	r3, #0
   1578c:	str	fp, [sp, #36]	; 0x24
   15790:	mov	r0, r6
   15794:	str	r6, [sp, #40]	; 0x28
   15798:	mov	fp, r9
   1579c:	strd	r2, [sp, #48]	; 0x30
   157a0:	str	r8, [sp, #44]	; 0x2c
   157a4:	str	r5, [sp, #60]	; 0x3c
   157a8:	b	157b8 <__assert_fail@plt+0x43b4>
   157ac:	ldr	sl, [sl, #4]
   157b0:	cmp	sl, #0
   157b4:	beq	15908 <__assert_fail@plt+0x4504>
   157b8:	ldr	r2, [fp, #220]	; 0xdc
   157bc:	ldr	lr, [sl]
   157c0:	rsb	r2, r2, r4
   157c4:	asr	r2, r2, #3
   157c8:	ldr	ip, [lr, #40]	; 0x28
   157cc:	rsb	r1, r2, r2, lsl #3
   157d0:	add	r1, r1, r1, lsl #6
   157d4:	add	r1, r2, r1, lsl #3
   157d8:	rsb	r1, r1, r1, lsl #15
   157dc:	add	r1, r2, r1, lsl #3
   157e0:	cmp	ip, r1
   157e4:	bne	157ac <__assert_fail@plt+0x43a8>
   157e8:	mov	r2, #5
   157ec:	movw	r1, #58120	; 0xe308
   157f0:	mov	r0, #0
   157f4:	movt	r1, #5
   157f8:	ldr	r5, [lr, #24]
   157fc:	ldrd	r8, [lr, #32]
   15800:	bl	11170 <dcgettext@plt>
   15804:	ldr	r3, [sp, #36]	; 0x24
   15808:	ldr	ip, [sp, #40]	; 0x28
   1580c:	mov	r2, r5
   15810:	ldr	r1, [sp, #44]	; 0x2c
   15814:	str	r3, [sp]
   15818:	str	ip, [sp, #4]
   1581c:	strd	r8, [sp, #8]
   15820:	str	r0, [sp, #16]
   15824:	mov	r0, #0
   15828:	bl	1502c <__assert_fail@plt+0x3c28>
   1582c:	cmp	r0, #0
   15830:	beq	15a3c <__assert_fail@plt+0x4638>
   15834:	ldr	r2, [sl]
   15838:	ldr	r1, [r2, #32]
   1583c:	ldr	r2, [r2, #36]	; 0x24
   15840:	lsr	r6, r1, #2
   15844:	orr	r6, r6, r2, lsl #30
   15848:	lsr	r7, r2, #2
   1584c:	ldrd	r2, [sp, #48]	; 0x30
   15850:	cmp	r7, r3
   15854:	cmpeq	r6, r2
   15858:	bcs	157ac <__assert_fail@plt+0x43a8>
   1585c:	mov	r2, #5
   15860:	mov	fp, r0
   15864:	movw	r1, #58152	; 0xe328
   15868:	mov	r0, #0
   1586c:	movt	r1, #5
   15870:	ldr	r5, [sp, #60]	; 0x3c
   15874:	bl	11170 <dcgettext@plt>
   15878:	mov	r8, #0
   1587c:	mov	r6, r0
   15880:	ldr	r0, [sl]
   15884:	bl	132f8 <__assert_fail@plt+0x1ef4>
   15888:	ldr	r2, [sl]
   1588c:	ldr	r3, [r4, #32]
   15890:	ldr	r2, [r2, #32]
   15894:	mov	r1, r0
   15898:	mov	r0, r6
   1589c:	bl	4b2b0 <error@@Base>
   158a0:	mov	r0, fp
   158a4:	bl	1111c <free@plt>
   158a8:	ldr	r0, [sp, #32]
   158ac:	bl	1111c <free@plt>
   158b0:	cmp	r5, #0
   158b4:	moveq	r0, r8
   158b8:	beq	15624 <__assert_fail@plt+0x4220>
   158bc:	cmp	r8, #0
   158c0:	ldrne	r3, [sp, #28]
   158c4:	beq	15680 <__assert_fail@plt+0x427c>
   158c8:	str	r3, [r5]
   158cc:	mov	r0, r8
   158d0:	b	1568c <__assert_fail@plt+0x4288>
   158d4:	mov	r2, #5
   158d8:	movw	r1, #58004	; 0xe294
   158dc:	mov	r0, #0
   158e0:	movt	r1, #5
   158e4:	bl	11170 <dcgettext@plt>
   158e8:	mov	r6, r0
   158ec:	mov	r0, r4
   158f0:	bl	132f8 <__assert_fail@plt+0x1ef4>
   158f4:	ldr	r2, [r4, #32]
   158f8:	mov	r1, r0
   158fc:	mov	r0, r6
   15900:	bl	4b2b0 <error@@Base>
   15904:	b	15674 <__assert_fail@plt+0x4270>
   15908:	ldr	r5, [sp, #60]	; 0x3c
   1590c:	mov	fp, r0
   15910:	ldr	r0, [sp, #28]
   15914:	mov	r1, #32
   15918:	bl	3f74c <__assert_fail@plt+0x2e348>
   1591c:	subs	r8, r0, #0
   15920:	beq	15a48 <__assert_fail@plt+0x4644>
   15924:	ldr	ip, [sp, #28]
   15928:	cmp	ip, #0
   1592c:	beq	15a30 <__assert_fail@plt+0x462c>
   15930:	movw	r7, #26492	; 0x677c
   15934:	add	r4, r8, #32
   15938:	str	r8, [sp, #36]	; 0x24
   1593c:	movt	r7, #9
   15940:	ldr	r6, [sp, #32]
   15944:	mov	sl, fp
   15948:	mov	r9, #0
   1594c:	ldr	r8, [sp, #56]	; 0x38
   15950:	b	15994 <__assert_fail@plt+0x4590>
   15954:	add	r0, r6, #12
   15958:	mov	r1, #1
   1595c:	ldr	r3, [r7]
   15960:	add	r9, r9, r1
   15964:	blx	r3
   15968:	ldr	r3, [r7]
   1596c:	mov	r1, #1
   15970:	add	sl, sl, #4
   15974:	add	r4, r4, #32
   15978:	strb	r0, [r4, #-44]	; 0xffffffd4
   1597c:	add	r0, r6, #13
   15980:	blx	r3
   15984:	cmp	r8, r9
   15988:	add	r6, r6, #16
   1598c:	strb	r0, [r4, #-43]	; 0xffffffd5
   15990:	bls	15a2c <__assert_fail@plt+0x4628>
   15994:	ldr	r3, [r7]
   15998:	mov	r0, r6
   1599c:	mov	r1, #4
   159a0:	blx	r3
   159a4:	ldr	r3, [r7]
   159a8:	mov	r1, #4
   159ac:	str	r0, [r4, #-16]
   159b0:	add	r0, r6, r1
   159b4:	blx	r3
   159b8:	ldr	r3, [r7]
   159bc:	strd	r0, [r4, #-32]	; 0xffffffe0
   159c0:	add	r0, r6, #8
   159c4:	mov	r1, #4
   159c8:	blx	r3
   159cc:	ldr	r3, [r7]
   159d0:	strd	r0, [r4, #-24]	; 0xffffffe8
   159d4:	add	r0, r6, #14
   159d8:	mov	r1, #2
   159dc:	blx	r3
   159e0:	movw	r1, #65535	; 0xffff
   159e4:	cmp	r0, r1
   159e8:	str	r0, [r4, #-8]
   159ec:	sub	r3, r0, #65536	; 0x10000
   159f0:	beq	15a04 <__assert_fail@plt+0x4600>
   159f4:	cmp	r0, #65280	; 0xff00
   159f8:	bcc	15954 <__assert_fail@plt+0x4550>
   159fc:	str	r3, [r4, #-8]
   15a00:	b	15954 <__assert_fail@plt+0x4550>
   15a04:	cmp	fp, #0
   15a08:	mov	r0, sl
   15a0c:	mov	r1, #4
   15a10:	beq	159fc <__assert_fail@plt+0x45f8>
   15a14:	movw	r2, #26492	; 0x677c
   15a18:	movt	r2, #9
   15a1c:	ldr	r3, [r2]
   15a20:	blx	r3
   15a24:	str	r0, [r4, #-8]
   15a28:	b	15954 <__assert_fail@plt+0x4550>
   15a2c:	ldr	r8, [sp, #36]	; 0x24
   15a30:	cmp	fp, #0
   15a34:	bne	158a0 <__assert_fail@plt+0x449c>
   15a38:	b	158a8 <__assert_fail@plt+0x44a4>
   15a3c:	ldr	r5, [sp, #60]	; 0x3c
   15a40:	mov	r8, r0
   15a44:	b	158a8 <__assert_fail@plt+0x44a4>
   15a48:	mov	r2, #5
   15a4c:	movw	r1, #58212	; 0xe364
   15a50:	movt	r1, #5
   15a54:	bl	11170 <dcgettext@plt>
   15a58:	ldr	r1, [sp, #28]
   15a5c:	bl	4b2b0 <error@@Base>
   15a60:	b	15a30 <__assert_fail@plt+0x462c>
   15a64:	mov	fp, sl
   15a68:	b	15910 <__assert_fail@plt+0x450c>
   15a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a70:	mov	r6, r1
   15a74:	ldrd	r4, [r1, #32]
   15a78:	sub	sp, sp, #76	; 0x4c
   15a7c:	mov	r9, r0
   15a80:	mov	r7, r2
   15a84:	orrs	r1, r4, r5
   15a88:	bne	15aa4 <__assert_fail@plt+0x46a0>
   15a8c:	cmp	r2, #0
   15a90:	beq	15b9c <__assert_fail@plt+0x4798>
   15a94:	mov	r0, #0
   15a98:	str	r0, [r2]
   15a9c:	add	sp, sp, #76	; 0x4c
   15aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15aa4:	ldrd	r2, [r6, #56]	; 0x38
   15aa8:	orrs	r1, r2, r3
   15aac:	beq	15abc <__assert_fail@plt+0x46b8>
   15ab0:	cmp	r5, r3
   15ab4:	cmpeq	r4, r2
   15ab8:	bcs	15b0c <__assert_fail@plt+0x4708>
   15abc:	mov	r2, #5
   15ac0:	movw	r1, #57956	; 0xe264
   15ac4:	mov	r0, #0
   15ac8:	movt	r1, #5
   15acc:	bl	11170 <dcgettext@plt>
   15ad0:	mov	r4, r0
   15ad4:	mov	r0, r6
   15ad8:	bl	132f8 <__assert_fail@plt+0x1ef4>
   15adc:	ldr	r2, [r6, #56]	; 0x38
   15ae0:	mov	r1, r0
   15ae4:	mov	r0, r4
   15ae8:	bl	4b2b0 <error@@Base>
   15aec:	cmp	r7, #0
   15af0:	movne	r8, #0
   15af4:	beq	15b9c <__assert_fail@plt+0x4798>
   15af8:	mov	r0, r8
   15afc:	mov	r3, #0
   15b00:	str	r3, [r7]
   15b04:	add	sp, sp, #76	; 0x4c
   15b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b0c:	movw	r8, #16712	; 0x4148
   15b10:	movt	r8, #9
   15b14:	mov	r1, #448	; 0x1c0
   15b18:	ldrd	r0, [r1, r8]
   15b1c:	cmp	r5, r1
   15b20:	cmpeq	r4, r0
   15b24:	bhi	15d58 <__assert_fail@plt+0x4954>
   15b28:	mov	r0, r4
   15b2c:	mov	r1, r5
   15b30:	bl	529fc <zcfree@@Base+0x13cc>
   15b34:	adds	r2, r4, #1
   15b38:	adc	r3, r5, #0
   15b3c:	str	r0, [sp, #28]
   15b40:	add	r0, r0, r0, lsl #1
   15b44:	ldr	r1, [sp, #28]
   15b48:	lsl	r0, r0, #3
   15b4c:	str	r1, [sp, #56]	; 0x38
   15b50:	mov	r1, #0
   15b54:	cmp	r1, r3
   15b58:	cmpeq	r0, r2
   15b5c:	bls	15ba8 <__assert_fail@plt+0x47a4>
   15b60:	mov	r2, #5
   15b64:	movw	r1, #58048	; 0xe2c0
   15b68:	mov	r0, #0
   15b6c:	movt	r1, #5
   15b70:	bl	11170 <dcgettext@plt>
   15b74:	ldr	r4, [r6, #32]
   15b78:	mov	r5, r0
   15b7c:	mov	r0, r6
   15b80:	bl	132f8 <__assert_fail@plt+0x1ef4>
   15b84:	mov	r1, r4
   15b88:	ldr	r3, [r6, #56]	; 0x38
   15b8c:	mov	r2, r0
   15b90:	mov	r0, r5
   15b94:	bl	4b2b0 <error@@Base>
   15b98:	b	15aec <__assert_fail@plt+0x46e8>
   15b9c:	mov	r0, r7
   15ba0:	add	sp, sp, #76	; 0x4c
   15ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ba8:	mov	r2, #5
   15bac:	movw	r1, #65008	; 0xfdf0
   15bb0:	mov	r0, #0
   15bb4:	movt	r1, #7
   15bb8:	ldr	fp, [r6, #24]
   15bbc:	bl	11170 <dcgettext@plt>
   15bc0:	strd	r4, [sp, #8]
   15bc4:	mov	r4, #0
   15bc8:	mov	sl, #1
   15bcc:	str	r4, [sp, #4]
   15bd0:	str	sl, [sp]
   15bd4:	mov	r2, fp
   15bd8:	mov	r1, r9
   15bdc:	str	r0, [sp, #16]
   15be0:	mov	r0, r4
   15be4:	bl	1502c <__assert_fail@plt+0x3c28>
   15be8:	cmp	r0, #0
   15bec:	str	r0, [sp, #32]
   15bf0:	beq	15aec <__assert_fail@plt+0x46e8>
   15bf4:	ldr	fp, [r8, #464]	; 0x1d0
   15bf8:	cmp	fp, r4
   15bfc:	beq	15ee8 <__assert_fail@plt+0x4ae4>
   15c00:	ldr	r2, [sp, #28]
   15c04:	mov	r3, #0
   15c08:	str	r7, [sp, #60]	; 0x3c
   15c0c:	mov	r0, r4
   15c10:	mov	r7, r8
   15c14:	str	sl, [sp, #36]	; 0x24
   15c18:	strd	r2, [sp, #48]	; 0x30
   15c1c:	mov	r8, fp
   15c20:	str	r4, [sp, #40]	; 0x28
   15c24:	str	r9, [sp, #44]	; 0x2c
   15c28:	b	15c38 <__assert_fail@plt+0x4834>
   15c2c:	ldr	r8, [r8, #4]
   15c30:	cmp	r8, #0
   15c34:	beq	15d8c <__assert_fail@plt+0x4988>
   15c38:	ldr	r2, [r7, #220]	; 0xdc
   15c3c:	ldr	lr, [r8]
   15c40:	rsb	r2, r2, r6
   15c44:	asr	r2, r2, #3
   15c48:	ldr	r3, [lr, #40]	; 0x28
   15c4c:	rsb	r1, r2, r2, lsl #3
   15c50:	add	r1, r1, r1, lsl #6
   15c54:	add	r1, r2, r1, lsl #3
   15c58:	rsb	r1, r1, r1, lsl #15
   15c5c:	add	r1, r2, r1, lsl #3
   15c60:	cmp	r3, r1
   15c64:	bne	15c2c <__assert_fail@plt+0x4828>
   15c68:	mov	r2, #5
   15c6c:	movw	r1, #58120	; 0xe308
   15c70:	mov	r0, #0
   15c74:	movt	r1, #5
   15c78:	ldr	r9, [lr, #24]
   15c7c:	ldrd	sl, [lr, #32]
   15c80:	bl	11170 <dcgettext@plt>
   15c84:	ldr	r3, [sp, #36]	; 0x24
   15c88:	ldr	r1, [sp, #44]	; 0x2c
   15c8c:	mov	r2, r9
   15c90:	strd	sl, [sp, #8]
   15c94:	str	r3, [sp]
   15c98:	ldr	r3, [sp, #40]	; 0x28
   15c9c:	str	r3, [sp, #4]
   15ca0:	str	r0, [sp, #16]
   15ca4:	mov	r0, #0
   15ca8:	bl	1502c <__assert_fail@plt+0x3c28>
   15cac:	cmp	r0, #0
   15cb0:	beq	15ec0 <__assert_fail@plt+0x4abc>
   15cb4:	ldr	r2, [r8]
   15cb8:	ldr	r1, [r2, #32]
   15cbc:	ldr	r2, [r2, #36]	; 0x24
   15cc0:	lsr	r4, r1, #2
   15cc4:	orr	r4, r4, r2, lsl #30
   15cc8:	lsr	r5, r2, #2
   15ccc:	ldrd	r2, [sp, #48]	; 0x30
   15cd0:	cmp	r5, r3
   15cd4:	cmpeq	r4, r2
   15cd8:	bcs	15c2c <__assert_fail@plt+0x4828>
   15cdc:	mov	r2, #5
   15ce0:	mov	sl, r0
   15ce4:	movw	r1, #58152	; 0xe328
   15ce8:	mov	r0, #0
   15cec:	movt	r1, #5
   15cf0:	ldr	r7, [sp, #60]	; 0x3c
   15cf4:	bl	11170 <dcgettext@plt>
   15cf8:	mov	fp, r8
   15cfc:	mov	r4, r0
   15d00:	ldr	r0, [r8]
   15d04:	bl	132f8 <__assert_fail@plt+0x1ef4>
   15d08:	ldr	r2, [fp]
   15d0c:	ldr	r3, [r6, #32]
   15d10:	mov	r8, #0
   15d14:	ldr	r2, [r2, #32]
   15d18:	mov	r1, r0
   15d1c:	mov	r0, r4
   15d20:	bl	4b2b0 <error@@Base>
   15d24:	mov	r0, sl
   15d28:	bl	1111c <free@plt>
   15d2c:	ldr	r0, [sp, #32]
   15d30:	bl	1111c <free@plt>
   15d34:	cmp	r7, #0
   15d38:	moveq	r0, r8
   15d3c:	beq	15a9c <__assert_fail@plt+0x4698>
   15d40:	cmp	r8, #0
   15d44:	ldrne	r3, [sp, #28]
   15d48:	beq	15af8 <__assert_fail@plt+0x46f4>
   15d4c:	str	r3, [r7]
   15d50:	mov	r0, r8
   15d54:	b	15b04 <__assert_fail@plt+0x4700>
   15d58:	mov	r2, #5
   15d5c:	movw	r1, #58004	; 0xe294
   15d60:	mov	r0, #0
   15d64:	movt	r1, #5
   15d68:	bl	11170 <dcgettext@plt>
   15d6c:	mov	r4, r0
   15d70:	mov	r0, r6
   15d74:	bl	132f8 <__assert_fail@plt+0x1ef4>
   15d78:	ldr	r2, [r6, #32]
   15d7c:	mov	r1, r0
   15d80:	mov	r0, r4
   15d84:	bl	4b2b0 <error@@Base>
   15d88:	b	15aec <__assert_fail@plt+0x46e8>
   15d8c:	ldr	r7, [sp, #60]	; 0x3c
   15d90:	mov	sl, r0
   15d94:	ldr	r0, [sp, #28]
   15d98:	mov	r1, #32
   15d9c:	bl	3f74c <__assert_fail@plt+0x2e348>
   15da0:	subs	r8, r0, #0
   15da4:	beq	15ecc <__assert_fail@plt+0x4ac8>
   15da8:	ldr	r3, [sp, #28]
   15dac:	cmp	r3, #0
   15db0:	beq	15eb4 <__assert_fail@plt+0x4ab0>
   15db4:	movw	r6, #26492	; 0x677c
   15db8:	add	r4, r8, #32
   15dbc:	str	r8, [sp, #36]	; 0x24
   15dc0:	movt	r6, #9
   15dc4:	ldr	r5, [sp, #32]
   15dc8:	mov	fp, sl
   15dcc:	mov	r9, #0
   15dd0:	ldr	r8, [sp, #56]	; 0x38
   15dd4:	b	15e18 <__assert_fail@plt+0x4a14>
   15dd8:	add	r0, r5, #8
   15ddc:	ldr	r3, [r6]
   15de0:	mov	r1, #8
   15de4:	add	r9, r9, #1
   15de8:	blx	r3
   15dec:	ldr	r3, [r6]
   15df0:	add	fp, fp, #4
   15df4:	add	r4, r4, #32
   15df8:	strd	r0, [r4, #-64]	; 0xffffffc0
   15dfc:	add	r0, r5, #16
   15e00:	mov	r1, #8
   15e04:	add	r5, r5, #24
   15e08:	blx	r3
   15e0c:	cmp	r8, r9
   15e10:	strd	r0, [r4, #-56]	; 0xffffffc8
   15e14:	bls	15eb0 <__assert_fail@plt+0x4aac>
   15e18:	ldr	r3, [r6]
   15e1c:	mov	r0, r5
   15e20:	mov	r1, #4
   15e24:	blx	r3
   15e28:	ldr	r3, [r6]
   15e2c:	mov	r1, #1
   15e30:	str	r0, [r4, #-16]
   15e34:	add	r0, r5, #4
   15e38:	blx	r3
   15e3c:	ldr	r3, [r6]
   15e40:	mov	r1, #1
   15e44:	strb	r0, [r4, #-12]
   15e48:	add	r0, r5, #5
   15e4c:	blx	r3
   15e50:	ldr	r3, [r6]
   15e54:	mov	r1, #2
   15e58:	strb	r0, [r4, #-11]
   15e5c:	add	r0, r5, #6
   15e60:	blx	r3
   15e64:	movw	r1, #65535	; 0xffff
   15e68:	cmp	r0, r1
   15e6c:	str	r0, [r4, #-8]
   15e70:	sub	r3, r0, #65536	; 0x10000
   15e74:	beq	15e88 <__assert_fail@plt+0x4a84>
   15e78:	cmp	r0, #65280	; 0xff00
   15e7c:	bcc	15dd8 <__assert_fail@plt+0x49d4>
   15e80:	str	r3, [r4, #-8]
   15e84:	b	15dd8 <__assert_fail@plt+0x49d4>
   15e88:	cmp	sl, #0
   15e8c:	mov	r0, fp
   15e90:	mov	r1, #4
   15e94:	beq	15e80 <__assert_fail@plt+0x4a7c>
   15e98:	movw	r2, #26492	; 0x677c
   15e9c:	movt	r2, #9
   15ea0:	ldr	r3, [r2]
   15ea4:	blx	r3
   15ea8:	str	r0, [r4, #-8]
   15eac:	b	15dd8 <__assert_fail@plt+0x49d4>
   15eb0:	ldr	r8, [sp, #36]	; 0x24
   15eb4:	cmp	sl, #0
   15eb8:	bne	15d24 <__assert_fail@plt+0x4920>
   15ebc:	b	15d2c <__assert_fail@plt+0x4928>
   15ec0:	ldr	r7, [sp, #60]	; 0x3c
   15ec4:	mov	r8, r0
   15ec8:	b	15d2c <__assert_fail@plt+0x4928>
   15ecc:	mov	r2, #5
   15ed0:	movw	r1, #58212	; 0xe364
   15ed4:	movt	r1, #5
   15ed8:	bl	11170 <dcgettext@plt>
   15edc:	ldr	r1, [sp, #28]
   15ee0:	bl	4b2b0 <error@@Base>
   15ee4:	b	15eb4 <__assert_fail@plt+0x4ab0>
   15ee8:	mov	sl, fp
   15eec:	b	15d94 <__assert_fail@plt+0x4990>
   15ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ef4:	subs	sl, r1, #0
   15ef8:	movw	r4, #16712	; 0x4148
   15efc:	movt	r4, #9
   15f00:	sub	sp, sp, #36	; 0x24
   15f04:	mov	r6, r0
   15f08:	ldr	r5, [r4, #64]	; 0x40
   15f0c:	movne	r3, #0
   15f10:	movne	r9, #1
   15f14:	bne	15f24 <__assert_fail@plt+0x4b20>
   15f18:	ldr	r9, [r4, #68]	; 0x44
   15f1c:	rsbs	r3, r9, #1
   15f20:	movcc	r3, #0
   15f24:	cmp	r5, #0
   15f28:	orreq	r3, r3, #1
   15f2c:	cmp	r3, #0
   15f30:	bne	1612c <__assert_fail@plt+0x4d28>
   15f34:	cmp	r5, #39	; 0x27
   15f38:	bls	16124 <__assert_fail@plt+0x4d20>
   15f3c:	rsbs	sl, sl, #1
   15f40:	movcc	sl, #0
   15f44:	cmp	r5, #40	; 0x28
   15f48:	movls	r7, #0
   15f4c:	andhi	r7, sl, #1
   15f50:	cmp	r7, #0
   15f54:	bne	16190 <__assert_fail@plt+0x4d8c>
   15f58:	cmp	sl, #0
   15f5c:	mov	r8, r7
   15f60:	ldr	fp, [r4, #32]
   15f64:	moveq	r3, sl
   15f68:	bne	161b4 <__assert_fail@plt+0x4db0>
   15f6c:	str	r5, [sp]
   15f70:	mov	r1, r6
   15f74:	str	r7, [sp, #4]
   15f78:	mov	r2, fp
   15f7c:	str	r9, [sp, #8]
   15f80:	mov	r0, #0
   15f84:	str	r8, [sp, #12]
   15f88:	str	r3, [sp, #16]
   15f8c:	bl	1502c <__assert_fail@plt+0x3c28>
   15f90:	cmp	r0, #0
   15f94:	str	r0, [sp, #28]
   15f98:	beq	1612c <__assert_fail@plt+0x4d28>
   15f9c:	ldr	r0, [r4, #220]	; 0xdc
   15fa0:	cmp	r0, #0
   15fa4:	beq	15fac <__assert_fail@plt+0x4ba8>
   15fa8:	bl	1111c <free@plt>
   15fac:	mov	r0, r9
   15fb0:	mov	r1, #72	; 0x48
   15fb4:	bl	3f74c <__assert_fail@plt+0x2e348>
   15fb8:	cmp	r0, #0
   15fbc:	mov	r6, r0
   15fc0:	str	r0, [r4, #220]	; 0xdc
   15fc4:	beq	161d0 <__assert_fail@plt+0x4dcc>
   15fc8:	cmp	r9, #0
   15fcc:	beq	16138 <__assert_fail@plt+0x4d34>
   15fd0:	movw	r8, #26492	; 0x677c
   15fd4:	add	r6, r0, #72	; 0x48
   15fd8:	mov	r4, #64	; 0x40
   15fdc:	mov	r5, #0
   15fe0:	movt	r8, #9
   15fe4:	ldr	r7, [sp, #28]
   15fe8:	mov	fp, #0
   15fec:	b	16024 <__assert_fail@plt+0x4c20>
   15ff0:	ldrd	r0, [r6, #-64]	; 0xffffffc0
   15ff4:	and	r0, r0, r4
   15ff8:	and	r1, r1, r5
   15ffc:	orrs	r3, r0, r1
   16000:	beq	16010 <__assert_fail@plt+0x4c0c>
   16004:	ldr	r2, [r6, #-28]	; 0xffffffe4
   16008:	cmp	r9, r2
   1600c:	bcc	1616c <__assert_fail@plt+0x4d68>
   16010:	add	fp, fp, #1
   16014:	add	r6, r6, #72	; 0x48
   16018:	cmp	fp, r9
   1601c:	add	r7, r7, #40	; 0x28
   16020:	beq	16138 <__assert_fail@plt+0x4d34>
   16024:	ldr	r2, [r8]
   16028:	mov	r0, r7
   1602c:	mov	r1, #4
   16030:	blx	r2
   16034:	ldr	r2, [r8]
   16038:	mov	r1, #4
   1603c:	str	r0, [r6, #-72]	; 0xffffffb8
   16040:	add	r0, r7, r1
   16044:	blx	r2
   16048:	ldr	r2, [r8]
   1604c:	mov	r1, #4
   16050:	str	r0, [r6, #-68]	; 0xffffffbc
   16054:	add	r0, r7, #8
   16058:	blx	r2
   1605c:	ldr	r2, [r8]
   16060:	strd	r0, [r6, #-64]	; 0xffffffc0
   16064:	add	r0, r7, #12
   16068:	mov	r1, #4
   1606c:	blx	r2
   16070:	ldr	r2, [r8]
   16074:	strd	r0, [r6, #-56]	; 0xffffffc8
   16078:	add	r0, r7, #16
   1607c:	mov	r1, #4
   16080:	blx	r2
   16084:	ldr	r2, [r8]
   16088:	strd	r0, [r6, #-48]	; 0xffffffd0
   1608c:	add	r0, r7, #20
   16090:	mov	r1, #4
   16094:	blx	r2
   16098:	ldr	r2, [r8]
   1609c:	strd	r0, [r6, #-40]	; 0xffffffd8
   160a0:	add	r0, r7, #24
   160a4:	mov	r1, #4
   160a8:	blx	r2
   160ac:	ldr	r2, [r8]
   160b0:	mov	r1, #4
   160b4:	str	r0, [r6, #-32]	; 0xffffffe0
   160b8:	add	r0, r7, #28
   160bc:	blx	r2
   160c0:	ldr	r2, [r8]
   160c4:	mov	r1, #4
   160c8:	str	r0, [r6, #-28]	; 0xffffffe4
   160cc:	add	r0, r7, #32
   160d0:	blx	r2
   160d4:	ldr	r2, [r8]
   160d8:	strd	r0, [r6, #-24]	; 0xffffffe8
   160dc:	add	r0, r7, #36	; 0x24
   160e0:	mov	r1, #4
   160e4:	blx	r2
   160e8:	cmp	sl, #0
   160ec:	strd	r0, [r6, #-16]
   160f0:	beq	16010 <__assert_fail@plt+0x4c0c>
   160f4:	ldr	r2, [r6, #-32]	; 0xffffffe0
   160f8:	cmp	r9, r2
   160fc:	bcs	15ff0 <__assert_fail@plt+0x4bec>
   16100:	mov	r2, #5
   16104:	movw	r1, #58488	; 0xe478
   16108:	mov	r0, #0
   1610c:	movt	r1, #5
   16110:	bl	11170 <dcgettext@plt>
   16114:	mov	r1, fp
   16118:	ldr	r2, [r6, #-32]	; 0xffffffe0
   1611c:	bl	4b9ec <warn@@Base>
   16120:	b	15ff0 <__assert_fail@plt+0x4bec>
   16124:	cmp	sl, #0
   16128:	beq	1614c <__assert_fail@plt+0x4d48>
   1612c:	mov	r0, #0
   16130:	add	sp, sp, #36	; 0x24
   16134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16138:	ldr	r0, [sp, #28]
   1613c:	bl	1111c <free@plt>
   16140:	mov	r0, #1
   16144:	add	sp, sp, #36	; 0x24
   16148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1614c:	mov	r2, #5
   16150:	movw	r1, #58248	; 0xe388
   16154:	mov	r0, sl
   16158:	movt	r1, #5
   1615c:	bl	11170 <dcgettext@plt>
   16160:	bl	4b2b0 <error@@Base>
   16164:	mov	r0, sl
   16168:	b	16130 <__assert_fail@plt+0x4d2c>
   1616c:	mov	r2, #5
   16170:	movw	r1, #58540	; 0xe4ac
   16174:	mov	r0, #0
   16178:	movt	r1, #5
   1617c:	bl	11170 <dcgettext@plt>
   16180:	mov	r1, fp
   16184:	ldr	r2, [r6, #-28]	; 0xffffffe4
   16188:	bl	4b9ec <warn@@Base>
   1618c:	b	16010 <__assert_fail@plt+0x4c0c>
   16190:	mov	r0, r3
   16194:	mov	r2, #5
   16198:	movw	r1, #58336	; 0xe3e0
   1619c:	movt	r1, #5
   161a0:	mov	r7, r3
   161a4:	bl	11170 <dcgettext@plt>
   161a8:	bl	4b9ec <warn@@Base>
   161ac:	ldr	fp, [r4, #32]
   161b0:	mov	r8, r7
   161b4:	movw	r1, #58428	; 0xe43c
   161b8:	mov	r0, #0
   161bc:	movt	r1, #5
   161c0:	mov	r2, #5
   161c4:	bl	11170 <dcgettext@plt>
   161c8:	mov	r3, r0
   161cc:	b	15f6c <__assert_fail@plt+0x4b68>
   161d0:	cmp	sl, #0
   161d4:	beq	1612c <__assert_fail@plt+0x4d28>
   161d8:	mov	r2, #5
   161dc:	movw	r1, #58444	; 0xe44c
   161e0:	movt	r1, #5
   161e4:	bl	11170 <dcgettext@plt>
   161e8:	mov	r1, r9
   161ec:	bl	4b2b0 <error@@Base>
   161f0:	mov	r0, r6
   161f4:	b	16130 <__assert_fail@plt+0x4d2c>
   161f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161fc:	subs	sl, r1, #0
   16200:	movw	r4, #16712	; 0x4148
   16204:	movt	r4, #9
   16208:	sub	sp, sp, #36	; 0x24
   1620c:	mov	r6, r0
   16210:	ldr	r5, [r4, #64]	; 0x40
   16214:	movne	r3, #0
   16218:	movne	r9, #1
   1621c:	bne	1622c <__assert_fail@plt+0x4e28>
   16220:	ldr	r9, [r4, #68]	; 0x44
   16224:	rsbs	r3, r9, #1
   16228:	movcc	r3, #0
   1622c:	cmp	r5, #0
   16230:	orreq	r3, r3, #1
   16234:	cmp	r3, #0
   16238:	bne	16434 <__assert_fail@plt+0x5030>
   1623c:	cmp	r5, #63	; 0x3f
   16240:	bls	1642c <__assert_fail@plt+0x5028>
   16244:	rsbs	sl, sl, #1
   16248:	movcc	sl, #0
   1624c:	cmp	r5, #64	; 0x40
   16250:	movls	r7, #0
   16254:	andhi	r7, sl, #1
   16258:	cmp	r7, #0
   1625c:	bne	16498 <__assert_fail@plt+0x5094>
   16260:	cmp	sl, #0
   16264:	mov	r8, r7
   16268:	ldr	fp, [r4, #32]
   1626c:	moveq	r3, sl
   16270:	bne	164bc <__assert_fail@plt+0x50b8>
   16274:	str	r5, [sp]
   16278:	mov	r1, r6
   1627c:	str	r7, [sp, #4]
   16280:	mov	r2, fp
   16284:	str	r9, [sp, #8]
   16288:	mov	r0, #0
   1628c:	str	r8, [sp, #12]
   16290:	str	r3, [sp, #16]
   16294:	bl	1502c <__assert_fail@plt+0x3c28>
   16298:	cmp	r0, #0
   1629c:	str	r0, [sp, #28]
   162a0:	beq	16434 <__assert_fail@plt+0x5030>
   162a4:	ldr	r0, [r4, #220]	; 0xdc
   162a8:	cmp	r0, #0
   162ac:	beq	162b4 <__assert_fail@plt+0x4eb0>
   162b0:	bl	1111c <free@plt>
   162b4:	mov	r0, r9
   162b8:	mov	r1, #72	; 0x48
   162bc:	bl	3f74c <__assert_fail@plt+0x2e348>
   162c0:	cmp	r0, #0
   162c4:	mov	r6, r0
   162c8:	str	r0, [r4, #220]	; 0xdc
   162cc:	beq	164d8 <__assert_fail@plt+0x50d4>
   162d0:	cmp	r9, #0
   162d4:	beq	16440 <__assert_fail@plt+0x503c>
   162d8:	movw	r8, #26492	; 0x677c
   162dc:	add	r6, r0, #72	; 0x48
   162e0:	mov	r4, #64	; 0x40
   162e4:	mov	r5, #0
   162e8:	movt	r8, #9
   162ec:	ldr	r7, [sp, #28]
   162f0:	mov	fp, #0
   162f4:	b	1632c <__assert_fail@plt+0x4f28>
   162f8:	ldrd	r0, [r6, #-64]	; 0xffffffc0
   162fc:	and	r0, r0, r4
   16300:	and	r1, r1, r5
   16304:	orrs	r3, r0, r1
   16308:	beq	16318 <__assert_fail@plt+0x4f14>
   1630c:	ldr	r2, [r6, #-28]	; 0xffffffe4
   16310:	cmp	r9, r2
   16314:	bcc	16474 <__assert_fail@plt+0x5070>
   16318:	add	fp, fp, #1
   1631c:	add	r6, r6, #72	; 0x48
   16320:	cmp	fp, r9
   16324:	add	r7, r7, #64	; 0x40
   16328:	beq	16440 <__assert_fail@plt+0x503c>
   1632c:	ldr	r2, [r8]
   16330:	mov	r0, r7
   16334:	mov	r1, #4
   16338:	blx	r2
   1633c:	ldr	r2, [r8]
   16340:	mov	r1, #4
   16344:	str	r0, [r6, #-72]	; 0xffffffb8
   16348:	add	r0, r7, r1
   1634c:	blx	r2
   16350:	ldr	r2, [r8]
   16354:	mov	r1, #8
   16358:	str	r0, [r6, #-68]	; 0xffffffbc
   1635c:	add	r0, r7, r1
   16360:	blx	r2
   16364:	ldr	r2, [r8]
   16368:	strd	r0, [r6, #-64]	; 0xffffffc0
   1636c:	add	r0, r7, #16
   16370:	mov	r1, #8
   16374:	blx	r2
   16378:	ldr	r2, [r8]
   1637c:	strd	r0, [r6, #-56]	; 0xffffffc8
   16380:	add	r0, r7, #32
   16384:	mov	r1, #8
   16388:	blx	r2
   1638c:	ldr	r2, [r8]
   16390:	strd	r0, [r6, #-40]	; 0xffffffd8
   16394:	add	r0, r7, #56	; 0x38
   16398:	mov	r1, #8
   1639c:	blx	r2
   163a0:	ldr	r2, [r8]
   163a4:	strd	r0, [r6, #-16]
   163a8:	add	r0, r7, #40	; 0x28
   163ac:	mov	r1, #4
   163b0:	blx	r2
   163b4:	ldr	r2, [r8]
   163b8:	mov	r1, #4
   163bc:	str	r0, [r6, #-32]	; 0xffffffe0
   163c0:	add	r0, r7, #44	; 0x2c
   163c4:	blx	r2
   163c8:	ldr	r2, [r8]
   163cc:	mov	r1, #8
   163d0:	str	r0, [r6, #-28]	; 0xffffffe4
   163d4:	add	r0, r7, #24
   163d8:	blx	r2
   163dc:	ldr	r2, [r8]
   163e0:	strd	r0, [r6, #-48]	; 0xffffffd0
   163e4:	add	r0, r7, #48	; 0x30
   163e8:	mov	r1, #8
   163ec:	blx	r2
   163f0:	cmp	sl, #0
   163f4:	strd	r0, [r6, #-24]	; 0xffffffe8
   163f8:	beq	16318 <__assert_fail@plt+0x4f14>
   163fc:	ldr	r2, [r6, #-32]	; 0xffffffe0
   16400:	cmp	r9, r2
   16404:	bcs	162f8 <__assert_fail@plt+0x4ef4>
   16408:	mov	r2, #5
   1640c:	movw	r1, #58488	; 0xe478
   16410:	mov	r0, #0
   16414:	movt	r1, #5
   16418:	bl	11170 <dcgettext@plt>
   1641c:	mov	r1, fp
   16420:	ldr	r2, [r6, #-32]	; 0xffffffe0
   16424:	bl	4b9ec <warn@@Base>
   16428:	b	162f8 <__assert_fail@plt+0x4ef4>
   1642c:	cmp	sl, #0
   16430:	beq	16454 <__assert_fail@plt+0x5050>
   16434:	mov	r0, #0
   16438:	add	sp, sp, #36	; 0x24
   1643c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16440:	ldr	r0, [sp, #28]
   16444:	bl	1111c <free@plt>
   16448:	mov	r0, #1
   1644c:	add	sp, sp, #36	; 0x24
   16450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16454:	mov	r2, #5
   16458:	movw	r1, #58248	; 0xe388
   1645c:	mov	r0, sl
   16460:	movt	r1, #5
   16464:	bl	11170 <dcgettext@plt>
   16468:	bl	4b2b0 <error@@Base>
   1646c:	mov	r0, sl
   16470:	b	16438 <__assert_fail@plt+0x5034>
   16474:	mov	r2, #5
   16478:	movw	r1, #58540	; 0xe4ac
   1647c:	mov	r0, #0
   16480:	movt	r1, #5
   16484:	bl	11170 <dcgettext@plt>
   16488:	mov	r1, fp
   1648c:	ldr	r2, [r6, #-28]	; 0xffffffe4
   16490:	bl	4b9ec <warn@@Base>
   16494:	b	16318 <__assert_fail@plt+0x4f14>
   16498:	mov	r0, r3
   1649c:	mov	r2, #5
   164a0:	movw	r1, #58336	; 0xe3e0
   164a4:	movt	r1, #5
   164a8:	mov	r7, r3
   164ac:	bl	11170 <dcgettext@plt>
   164b0:	bl	4b9ec <warn@@Base>
   164b4:	ldr	fp, [r4, #32]
   164b8:	mov	r8, r7
   164bc:	movw	r1, #58428	; 0xe43c
   164c0:	mov	r0, #0
   164c4:	movt	r1, #5
   164c8:	mov	r2, #5
   164cc:	bl	11170 <dcgettext@plt>
   164d0:	mov	r3, r0
   164d4:	b	16274 <__assert_fail@plt+0x4e70>
   164d8:	cmp	sl, #0
   164dc:	beq	16434 <__assert_fail@plt+0x5030>
   164e0:	mov	r2, #5
   164e4:	movw	r1, #58444	; 0xe44c
   164e8:	movt	r1, #5
   164ec:	bl	11170 <dcgettext@plt>
   164f0:	mov	r1, r9
   164f4:	bl	4b2b0 <error@@Base>
   164f8:	mov	r0, r6
   164fc:	b	16438 <__assert_fail@plt+0x5034>
   16500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16504:	mov	r6, r2
   16508:	sub	sp, sp, #12
   1650c:	mov	r7, r3
   16510:	mov	r4, r2
   16514:	mov	r5, #0
   16518:	cmp	r5, r7
   1651c:	cmpeq	r4, r6
   16520:	mov	sl, r0
   16524:	ldr	r8, [sp, #48]	; 0x30
   16528:	bne	16638 <__assert_fail@plt+0x5234>
   1652c:	umull	r6, r7, r2, r8
   16530:	movw	r3, #16712	; 0x4148
   16534:	movt	r3, #9
   16538:	mov	r2, #448	; 0x1c0
   1653c:	add	r2, r3, r2
   16540:	ldrd	r2, [r2]
   16544:	mla	r7, r8, r5, r7
   16548:	cmp	r7, r3
   1654c:	cmpeq	r6, r2
   16550:	bhi	16668 <__assert_fail@plt+0x5264>
   16554:	mov	r1, r8
   16558:	mov	r0, r4
   1655c:	bl	3f74c <__assert_fail@plt+0x2e348>
   16560:	subs	r9, r0, #0
   16564:	movweq	r1, #58696	; 0xe548
   16568:	moveq	r2, #5
   1656c:	movteq	r1, #5
   16570:	beq	16678 <__assert_fail@plt+0x5274>
   16574:	mov	r1, r8
   16578:	mov	r3, sl
   1657c:	mov	r2, r4
   16580:	bl	111f4 <fread@plt>
   16584:	mov	r1, #0
   16588:	cmp	r5, r1
   1658c:	cmpeq	r4, r0
   16590:	bne	16604 <__assert_fail@plt+0x5200>
   16594:	mov	r0, r4
   16598:	mov	r1, #8
   1659c:	bl	3f74c <__assert_fail@plt+0x2e348>
   165a0:	subs	r6, r0, #0
   165a4:	beq	16690 <__assert_fail@plt+0x528c>
   165a8:	subs	r2, r4, #1
   165ac:	orrs	r1, r4, r5
   165b0:	beq	165f0 <__assert_fail@plt+0x51ec>
   165b4:	mla	r7, r8, r2, r9
   165b8:	add	r2, r2, #1
   165bc:	movw	fp, #26492	; 0x677c
   165c0:	movt	fp, #9
   165c4:	add	sl, r6, r2, lsl #3
   165c8:	subs	r4, r4, #1
   165cc:	ldr	r3, [fp]
   165d0:	mov	r0, r7
   165d4:	mov	r1, r8
   165d8:	sbc	r5, r5, #0
   165dc:	blx	r3
   165e0:	orrs	r3, r4, r5
   165e4:	rsb	r7, r8, r7
   165e8:	strd	r0, [sl, #-8]!
   165ec:	bne	165c8 <__assert_fail@plt+0x51c4>
   165f0:	mov	r0, r9
   165f4:	bl	1111c <free@plt>
   165f8:	mov	r0, r6
   165fc:	add	sp, sp, #12
   16600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16604:	mov	r2, #5
   16608:	movw	r1, #58740	; 0xe574
   1660c:	mov	r0, #0
   16610:	movt	r1, #5
   16614:	bl	11170 <dcgettext@plt>
   16618:	mov	r2, r6
   1661c:	mov	r3, r7
   16620:	bl	4b2b0 <error@@Base>
   16624:	mov	r0, r9
   16628:	bl	1111c <free@plt>
   1662c:	mov	r0, #0
   16630:	add	sp, sp, #12
   16634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16638:	mov	r2, #5
   1663c:	movw	r1, #58592	; 0xe4e0
   16640:	mov	r0, #0
   16644:	movt	r1, #5
   16648:	bl	11170 <dcgettext@plt>
   1664c:	str	r8, [sp]
   16650:	mov	r2, r6
   16654:	mov	r3, r7
   16658:	bl	4b2b0 <error@@Base>
   1665c:	mov	r0, #0
   16660:	add	sp, sp, #12
   16664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16668:	movw	r1, #58652	; 0xe51c
   1666c:	movt	r1, #5
   16670:	mov	r0, #0
   16674:	mov	r2, #5
   16678:	bl	11170 <dcgettext@plt>
   1667c:	mov	r2, r4
   16680:	mov	r3, r5
   16684:	bl	4b2b0 <error@@Base>
   16688:	mov	r0, #0
   1668c:	b	165fc <__assert_fail@plt+0x51f8>
   16690:	mov	r2, #5
   16694:	movw	r1, #58788	; 0xe5a4
   16698:	movt	r1, #5
   1669c:	bl	11170 <dcgettext@plt>
   166a0:	mov	r2, r4
   166a4:	mov	r3, r5
   166a8:	bl	4b2b0 <error@@Base>
   166ac:	b	165f0 <__assert_fail@plt+0x51ec>
   166b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166b4:	movw	fp, #16712	; 0x4148
   166b8:	movt	fp, #9
   166bc:	sub	sp, sp, #92	; 0x5c
   166c0:	mov	r6, r0
   166c4:	mov	r5, r1
   166c8:	ldr	r9, [fp, #460]	; 0x1cc
   166cc:	mov	r4, r2
   166d0:	str	r3, [sp, #80]	; 0x50
   166d4:	cmp	r9, #0
   166d8:	beq	167d8 <__assert_fail@plt+0x53d4>
   166dc:	mov	r2, #5
   166e0:	movw	r1, #57876	; 0xe214
   166e4:	mov	r0, #0
   166e8:	movt	r1, #5
   166ec:	bl	11170 <dcgettext@plt>
   166f0:	mov	r8, #0
   166f4:	mov	r1, r6
   166f8:	mov	r2, r5
   166fc:	str	r4, [sp, #8]
   16700:	mov	r6, #1
   16704:	str	r8, [sp, #12]
   16708:	mov	r7, #0
   1670c:	strd	r6, [sp]
   16710:	str	r0, [sp, #16]
   16714:	mov	r0, r8
   16718:	bl	1502c <__assert_fail@plt+0x3c28>
   1671c:	subs	r5, r0, #0
   16720:	beq	169b4 <__assert_fail@plt+0x55b0>
   16724:	movw	sl, #43691	; 0xaaab
   16728:	movt	sl, #43690	; 0xaaaa
   1672c:	mov	r1, #24
   16730:	umull	r0, sl, sl, r4
   16734:	lsr	sl, sl, #3
   16738:	mov	r0, sl
   1673c:	bl	3f74c <__assert_fail@plt+0x2e348>
   16740:	cmp	r0, #0
   16744:	str	r0, [sp, #76]	; 0x4c
   16748:	beq	169e8 <__assert_fail@plt+0x55e4>
   1674c:	cmp	sl, #0
   16750:	beq	167b0 <__assert_fail@plt+0x53ac>
   16754:	ldr	r4, [sp, #76]	; 0x4c
   16758:	movw	r7, #26492	; 0x677c
   1675c:	movt	r7, #9
   16760:	mov	r6, r5
   16764:	ldr	r3, [r7]
   16768:	mov	r0, r6
   1676c:	mov	r1, #4
   16770:	add	r8, r8, #1
   16774:	blx	r3
   16778:	ldr	r3, [r7]
   1677c:	add	r4, r4, #24
   16780:	strd	r0, [r4, #-24]	; 0xffffffe8
   16784:	add	r0, r6, #4
   16788:	mov	r1, #4
   1678c:	blx	r3
   16790:	strd	r0, [r4, #-16]
   16794:	add	r0, r6, #8
   16798:	mov	r1, #4
   1679c:	add	r6, r6, #12
   167a0:	bl	4bee4 <warn@@Base+0x4f8>
   167a4:	cmp	r8, sl
   167a8:	strd	r0, [r4, #-8]
   167ac:	bne	16764 <__assert_fail@plt+0x5360>
   167b0:	mov	r0, r5
   167b4:	bl	1111c <free@plt>
   167b8:	ldr	r3, [sp, #76]	; 0x4c
   167bc:	mov	r0, #1
   167c0:	ldr	r4, [sp, #80]	; 0x50
   167c4:	ldr	r5, [sp, #128]	; 0x80
   167c8:	str	r3, [r4]
   167cc:	str	sl, [r5]
   167d0:	add	sp, sp, #92	; 0x5c
   167d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167d8:	mov	r2, #5
   167dc:	movw	r1, #57932	; 0xe24c
   167e0:	mov	r0, r9
   167e4:	movt	r1, #5
   167e8:	bl	11170 <dcgettext@plt>
   167ec:	mov	r7, #0
   167f0:	mov	r1, r6
   167f4:	str	r4, [sp, #8]
   167f8:	str	r9, [sp, #12]
   167fc:	mov	r2, r5
   16800:	mov	r6, #1
   16804:	strd	r6, [sp]
   16808:	str	r0, [sp, #16]
   1680c:	mov	r0, r9
   16810:	bl	1502c <__assert_fail@plt+0x3c28>
   16814:	cmp	r0, #0
   16818:	str	r0, [sp, #84]	; 0x54
   1681c:	beq	169b4 <__assert_fail@plt+0x55b0>
   16820:	movw	sl, #43691	; 0xaaab
   16824:	movt	sl, #43690	; 0xaaaa
   16828:	mov	r1, #24
   1682c:	umull	r2, sl, sl, r4
   16830:	lsr	sl, sl, #4
   16834:	mov	r0, sl
   16838:	bl	3f74c <__assert_fail@plt+0x2e348>
   1683c:	cmp	r0, #0
   16840:	str	r0, [sp, #76]	; 0x4c
   16844:	beq	169c0 <__assert_fail@plt+0x55bc>
   16848:	cmp	sl, #0
   1684c:	beq	169a8 <__assert_fail@plt+0x55a4>
   16850:	movw	r7, #26492	; 0x677c
   16854:	ldr	r6, [sp, #84]	; 0x54
   16858:	movt	r7, #9
   1685c:	ldr	r8, [sp, #76]	; 0x4c
   16860:	b	16870 <__assert_fail@plt+0x546c>
   16864:	cmp	r9, sl
   16868:	add	r8, r8, #24
   1686c:	beq	169a8 <__assert_fail@plt+0x55a4>
   16870:	ldr	r3, [r7]
   16874:	mov	r0, r6
   16878:	mov	r1, #8
   1687c:	add	r9, r9, #1
   16880:	blx	r3
   16884:	ldr	r3, [r7]
   16888:	strd	r0, [r8]
   1688c:	add	r0, r6, #8
   16890:	mov	r1, #8
   16894:	blx	r3
   16898:	strd	r0, [r8, #8]
   1689c:	add	r0, r6, #16
   168a0:	mov	r1, #8
   168a4:	add	r6, r6, #24
   168a8:	bl	4bee4 <warn@@Base+0x4f8>
   168ac:	ldrh	r3, [fp, #50]	; 0x32
   168b0:	cmp	r3, #8
   168b4:	strd	r0, [r8, #16]
   168b8:	bne	16864 <__assert_fail@plt+0x5460>
   168bc:	movw	r4, #16712	; 0x4148
   168c0:	movt	r4, #9
   168c4:	ldrb	r3, [r4, #5]
   168c8:	cmp	r3, #2
   168cc:	beq	16864 <__assert_fail@plt+0x5460>
   168d0:	ldr	r1, [r8, #12]
   168d4:	mov	r4, #0
   168d8:	ldr	r3, [r8, #8]
   168dc:	cmp	r9, sl
   168e0:	str	r4, [sp, #68]	; 0x44
   168e4:	add	r8, r8, #24
   168e8:	lsr	r0, r1, #8
   168ec:	str	r0, [sp, #64]	; 0x40
   168f0:	lsr	r2, r3, #24
   168f4:	lsr	r5, r1, #24
   168f8:	str	r4, [sp, #36]	; 0x24
   168fc:	str	r5, [sp, #32]
   16900:	orr	r5, r2, r1, lsl #8
   16904:	str	r4, [sp, #56]	; 0x38
   16908:	mov	r2, #65280	; 0xff00
   1690c:	str	r5, [sp, #40]	; 0x28
   16910:	ldrd	r4, [sp, #64]	; 0x40
   16914:	str	r3, [sp, #60]	; 0x3c
   16918:	lsr	r3, r3, #8
   1691c:	str	r3, [sp, #48]	; 0x30
   16920:	and	r4, r4, r2
   16924:	mov	r3, #0
   16928:	and	r5, r5, r3
   1692c:	strd	r4, [sp, #24]
   16930:	lsr	r3, r1, #24
   16934:	ldr	r4, [sp, #48]	; 0x30
   16938:	str	r3, [sp, #44]	; 0x2c
   1693c:	orr	r4, r4, r1, lsl #24
   16940:	ldrd	r2, [sp, #56]	; 0x38
   16944:	str	r4, [sp, #48]	; 0x30
   16948:	lsr	r1, r1, #8
   1694c:	ldrd	r4, [sp, #32]
   16950:	str	r1, [sp, #52]	; 0x34
   16954:	orr	r4, r4, r2
   16958:	ldrd	r0, [sp, #24]
   1695c:	orr	r5, r5, r3
   16960:	ldrd	r2, [sp, #40]	; 0x28
   16964:	orr	r4, r4, r0
   16968:	orr	r5, r5, r1
   1696c:	mov	r0, #16711680	; 0xff0000
   16970:	mov	r1, #0
   16974:	and	r2, r2, r0
   16978:	and	r3, r3, r1
   1697c:	orr	r4, r4, r2
   16980:	orr	r5, r5, r3
   16984:	ldrd	r2, [sp, #48]	; 0x30
   16988:	mov	r0, #-16777216	; 0xff000000
   1698c:	mov	r1, #0
   16990:	and	r2, r2, r0
   16994:	and	r3, r3, r1
   16998:	orr	r2, r2, r4
   1699c:	orr	r3, r3, r5
   169a0:	strd	r2, [r8, #-16]
   169a4:	bne	16870 <__assert_fail@plt+0x546c>
   169a8:	ldr	r0, [sp, #84]	; 0x54
   169ac:	bl	1111c <free@plt>
   169b0:	b	167b8 <__assert_fail@plt+0x53b4>
   169b4:	mov	r0, #0
   169b8:	add	sp, sp, #92	; 0x5c
   169bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169c0:	ldr	r0, [sp, #84]	; 0x54
   169c4:	bl	1111c <free@plt>
   169c8:	mov	r2, #5
   169cc:	ldr	r0, [sp, #76]	; 0x4c
   169d0:	movw	r1, #57900	; 0xe22c
   169d4:	movt	r1, #5
   169d8:	bl	11170 <dcgettext@plt>
   169dc:	bl	4b2b0 <error@@Base>
   169e0:	ldr	r0, [sp, #76]	; 0x4c
   169e4:	b	167d0 <__assert_fail@plt+0x53cc>
   169e8:	mov	r0, r5
   169ec:	b	169c4 <__assert_fail@plt+0x55c0>
   169f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   169f4:	movw	r4, #16712	; 0x4148
   169f8:	movt	r4, #9
   169fc:	mov	r5, r0
   16a00:	mov	r7, r1
   16a04:	ldr	r6, [r4, #468]	; 0x1d4
   16a08:	cmp	r6, r0
   16a0c:	bls	16a2c <__assert_fail@plt+0x5628>
   16a10:	ldr	r3, [r4, #472]	; 0x1d8
   16a14:	cmp	r3, #0
   16a18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a1c:	ldrb	r2, [r3, r5]
   16a20:	orr	r7, r7, r2
   16a24:	strb	r7, [r3, r5]
   16a28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a2c:	add	r8, r0, #1
   16a30:	mov	r1, #1
   16a34:	mov	r0, r8
   16a38:	bl	110d4 <calloc@plt>
   16a3c:	subs	r9, r0, #0
   16a40:	beq	16a6c <__assert_fail@plt+0x5668>
   16a44:	ldr	sl, [r4, #472]	; 0x1d8
   16a48:	mov	r2, r6
   16a4c:	mov	r1, sl
   16a50:	bl	11134 <memcpy@plt>
   16a54:	mov	r0, sl
   16a58:	bl	1111c <free@plt>
   16a5c:	str	r9, [r4, #472]	; 0x1d8
   16a60:	str	r8, [r4, #468]	; 0x1d4
   16a64:	mov	r3, r9
   16a68:	b	16a1c <__assert_fail@plt+0x5618>
   16a6c:	mov	r2, #5
   16a70:	movw	r1, #58848	; 0xe5e0
   16a74:	movt	r1, #5
   16a78:	bl	11170 <dcgettext@plt>
   16a7c:	bl	4b2b0 <error@@Base>
   16a80:	b	16a10 <__assert_fail@plt+0x560c>
   16a84:	push	{r4, r5, r6, r7, r8, lr}
   16a88:	movw	r5, #16680	; 0x4128
   16a8c:	movt	r5, #9
   16a90:	movw	r4, #16712	; 0x4148
   16a94:	movt	r4, #9
   16a98:	sub	sp, sp, #8
   16a9c:	ldr	ip, [r5]
   16aa0:	movw	r6, #16704	; 0x4140
   16aa4:	movt	r6, #9
   16aa8:	ldr	r3, [r4, #476]	; 0x1dc
   16aac:	mov	r7, r0
   16ab0:	mov	r1, sp
   16ab4:	ldr	r0, [r6]
   16ab8:	mov	r2, #0
   16abc:	add	r3, r3, #1
   16ac0:	str	ip, [sp, #4]
   16ac4:	str	r3, [r4, #476]	; 0x1dc
   16ac8:	bl	11290 <strtoul@plt>
   16acc:	ldr	r3, [sp]
   16ad0:	ldrb	r3, [r3]
   16ad4:	cmp	r3, #0
   16ad8:	bne	16ae4 <__assert_fail@plt+0x56e0>
   16adc:	cmp	r0, #0
   16ae0:	bge	16b34 <__assert_fail@plt+0x5730>
   16ae4:	mov	r0, #12
   16ae8:	ldr	r8, [r6]
   16aec:	bl	11224 <malloc@plt>
   16af0:	subs	r6, r0, #0
   16af4:	beq	16b58 <__assert_fail@plt+0x5754>
   16af8:	mov	r0, r8
   16afc:	bl	112e4 <__strdup@plt>
   16b00:	cmp	r0, #0
   16b04:	str	r0, [r6]
   16b08:	beq	16b40 <__assert_fail@plt+0x573c>
   16b0c:	ldr	r3, [r4, #480]	; 0x1e0
   16b10:	strb	r7, [r6, #4]
   16b14:	str	r6, [r4, #480]	; 0x1e0
   16b18:	str	r3, [r6, #8]
   16b1c:	ldr	r2, [sp, #4]
   16b20:	ldr	r3, [r5]
   16b24:	cmp	r2, r3
   16b28:	bne	16b70 <__assert_fail@plt+0x576c>
   16b2c:	add	sp, sp, #8
   16b30:	pop	{r4, r5, r6, r7, r8, pc}
   16b34:	mov	r1, r7
   16b38:	bl	169f0 <__assert_fail@plt+0x55ec>
   16b3c:	b	16b1c <__assert_fail@plt+0x5718>
   16b40:	mov	r2, #5
   16b44:	movw	r1, #58848	; 0xe5e0
   16b48:	movt	r1, #5
   16b4c:	bl	11170 <dcgettext@plt>
   16b50:	bl	4b2b0 <error@@Base>
   16b54:	b	16b0c <__assert_fail@plt+0x5708>
   16b58:	mov	r2, #5
   16b5c:	movw	r1, #58848	; 0xe5e0
   16b60:	movt	r1, #5
   16b64:	bl	11170 <dcgettext@plt>
   16b68:	bl	4b2b0 <error@@Base>
   16b6c:	b	16af8 <__assert_fail@plt+0x56f4>
   16b70:	bl	1117c <__stack_chk_fail@plt>
   16b74:	push	{r3, r4, r5, lr}
   16b78:	mov	r2, #5
   16b7c:	mov	r4, r0
   16b80:	movw	r1, #58896	; 0xe610
   16b84:	mov	r0, #0
   16b88:	movt	r1, #5
   16b8c:	bl	11170 <dcgettext@plt>
   16b90:	mov	r1, #1
   16b94:	movw	r5, #16696	; 0x4138
   16b98:	movt	r5, #9
   16b9c:	mov	r2, r0
   16ba0:	mov	r0, r4
   16ba4:	bl	11338 <__fprintf_chk@plt>
   16ba8:	mov	r2, #5
   16bac:	movw	r1, #58936	; 0xe638
   16bb0:	mov	r0, #0
   16bb4:	movt	r1, #5
   16bb8:	bl	11170 <dcgettext@plt>
   16bbc:	mov	r1, #1
   16bc0:	mov	r2, r0
   16bc4:	mov	r0, r4
   16bc8:	bl	11338 <__fprintf_chk@plt>
   16bcc:	mov	r2, #5
   16bd0:	movw	r1, #59000	; 0xe678
   16bd4:	mov	r0, #0
   16bd8:	movt	r1, #5
   16bdc:	bl	11170 <dcgettext@plt>
   16be0:	mov	r1, #1
   16be4:	mov	r2, r0
   16be8:	mov	r0, r4
   16bec:	bl	11338 <__fprintf_chk@plt>
   16bf0:	mov	r2, #5
   16bf4:	movw	r1, #60948	; 0xee14
   16bf8:	mov	r0, #0
   16bfc:	movt	r1, #5
   16c00:	bl	11170 <dcgettext@plt>
   16c04:	mov	r1, #1
   16c08:	mov	r2, r0
   16c0c:	mov	r0, r4
   16c10:	bl	11338 <__fprintf_chk@plt>
   16c14:	mov	r2, #5
   16c18:	movw	r1, #61124	; 0xeec4
   16c1c:	mov	r0, #0
   16c20:	movt	r1, #5
   16c24:	bl	11170 <dcgettext@plt>
   16c28:	mov	r1, #1
   16c2c:	mov	r2, r0
   16c30:	mov	r0, r4
   16c34:	bl	11338 <__fprintf_chk@plt>
   16c38:	ldr	r0, [r5]
   16c3c:	cmp	r4, r0
   16c40:	beq	16c50 <__assert_fail@plt+0x584c>
   16c44:	subs	r0, r4, r0
   16c48:	movne	r0, #1
   16c4c:	bl	11278 <exit@plt>
   16c50:	mov	r2, #5
   16c54:	movw	r1, #61424	; 0xeff0
   16c58:	mov	r0, #0
   16c5c:	movt	r1, #5
   16c60:	bl	11170 <dcgettext@plt>
   16c64:	movw	r3, #61444	; 0xf004
   16c68:	mov	r1, #1
   16c6c:	movt	r3, #5
   16c70:	mov	r2, r0
   16c74:	mov	r0, r4
   16c78:	bl	11338 <__fprintf_chk@plt>
   16c7c:	ldr	r0, [r5]
   16c80:	b	16c44 <__assert_fail@plt+0x5840>
   16c84:	push	{r4, r5, r6, lr}
   16c88:	mov	r4, r0
   16c8c:	sub	sp, sp, #8
   16c90:	mov	r5, r1
   16c94:	cmp	r2, #6
   16c98:	ldrls	pc, [pc, r2, lsl #2]
   16c9c:	b	16dec <__assert_fail@plt+0x59e8>
   16ca0:	andeq	r6, r1, ip, lsl #26
   16ca4:	andeq	r6, r1, r8, lsl #27
   16ca8:			; <UNDEFINED> instruction: 0x00016cbc
   16cac:	andeq	r6, r1, r8, ror #26
   16cb0:	ldrdeq	r6, [r1], -r4
   16cb4:	andeq	r6, r1, r0, asr sp
   16cb8:	andeq	r6, r1, r4, lsl sp
   16cbc:	movw	r2, #34463	; 0x869f
   16cc0:	movt	r2, #1
   16cc4:	mov	r3, #0
   16cc8:	cmp	r5, r3
   16ccc:	cmpeq	r4, r2
   16cd0:	bls	16dd4 <__assert_fail@plt+0x59d0>
   16cd4:	movw	r1, #4844	; 0x12ec
   16cd8:	mov	r0, #1
   16cdc:	movt	r1, #6
   16ce0:	bl	1132c <__printf_chk@plt>
   16ce4:	mov	r6, r0
   16ce8:	mov	r2, r4
   16cec:	mov	r3, r5
   16cf0:	movw	r1, #61508	; 0xf044
   16cf4:	mov	r0, #1
   16cf8:	movt	r1, #5
   16cfc:	bl	1132c <__printf_chk@plt>
   16d00:	add	r0, r6, r0
   16d04:	add	sp, sp, #8
   16d08:	pop	{r4, r5, r6, pc}
   16d0c:	mov	r6, #0
   16d10:	b	16ce8 <__assert_fail@plt+0x58e4>
   16d14:	mov	r6, #0
   16d18:	movw	r3, #16712	; 0x4148
   16d1c:	movt	r3, #9
   16d20:	ldr	r3, [r3, #460]	; 0x1cc
   16d24:	cmp	r3, #0
   16d28:	beq	16da8 <__assert_fail@plt+0x59a4>
   16d2c:	mov	r2, r4
   16d30:	mov	r3, r5
   16d34:	movw	r1, #61484	; 0xf02c
   16d38:	mov	r0, #1
   16d3c:	movt	r1, #5
   16d40:	bl	1132c <__printf_chk@plt>
   16d44:	add	r0, r6, r0
   16d48:	add	sp, sp, #8
   16d4c:	pop	{r4, r5, r6, pc}
   16d50:	movw	r1, #4844	; 0x12ec
   16d54:	mov	r0, #1
   16d58:	movt	r1, #6
   16d5c:	bl	1132c <__printf_chk@plt>
   16d60:	mov	r6, r0
   16d64:	b	16d18 <__assert_fail@plt+0x5914>
   16d68:	mov	r3, r1
   16d6c:	movw	r1, #61524	; 0xf054
   16d70:	movt	r1, #5
   16d74:	mov	r2, r0
   16d78:	mov	r0, #1
   16d7c:	add	sp, sp, #8
   16d80:	pop	{r4, r5, r6, lr}
   16d84:	b	1132c <__printf_chk@plt>
   16d88:	mov	r2, r0
   16d8c:	mov	r3, r1
   16d90:	mov	r0, #1
   16d94:	movw	r1, #61516	; 0xf04c
   16d98:	movt	r1, #5
   16d9c:	add	sp, sp, #8
   16da0:	pop	{r4, r5, r6, lr}
   16da4:	b	1132c <__printf_chk@plt>
   16da8:	movw	r3, #16696	; 0x4138
   16dac:	movt	r3, #9
   16db0:	strd	r4, [sp]
   16db4:	mov	r1, #1
   16db8:	ldr	r0, [r3]
   16dbc:	movw	r2, #61492	; 0xf034
   16dc0:	movt	r2, #5
   16dc4:	bl	11338 <__fprintf_chk@plt>
   16dc8:	add	r0, r6, #16
   16dcc:	add	sp, sp, #8
   16dd0:	pop	{r4, r5, r6, pc}
   16dd4:	mov	r2, r0
   16dd8:	mov	r3, r1
   16ddc:	mov	r0, #1
   16de0:	movw	r1, #61500	; 0xf03c
   16de4:	movt	r1, #5
   16de8:	b	16d7c <__assert_fail@plt+0x5978>
   16dec:	mov	r0, #0
   16df0:	b	16d04 <__assert_fail@plt+0x5900>
   16df4:	push	{r3, lr}
   16df8:	cmp	r0, #8
   16dfc:	ldrls	pc, [pc, r0, lsl #2]
   16e00:	b	16ecc <__assert_fail@plt+0x5ac8>
   16e04:	andeq	r6, r1, ip, asr #28
   16e08:	andeq	r6, r1, ip, asr lr
   16e0c:	andeq	r6, r1, ip, ror #28
   16e10:	andeq	r6, r1, ip, ror lr
   16e14:	andeq	r6, r1, ip, lsl #29
   16e18:	muleq	r1, ip, lr
   16e1c:	andeq	r6, r1, ip, lsr #29
   16e20:			; <UNDEFINED> instruction: 0x00016ebc
   16e24:	andeq	r6, r1, r8, lsr #28
   16e28:	movw	r1, #61800	; 0xf168
   16e2c:	movt	r1, #5
   16e30:	mov	r0, #0
   16e34:	mov	r2, #5
   16e38:	bl	11170 <dcgettext@plt>
   16e3c:	pop	{r3, lr}
   16e40:	mov	r1, r0
   16e44:	mov	r0, #1
   16e48:	b	1132c <__printf_chk@plt>
   16e4c:	movw	r1, #61532	; 0xf05c
   16e50:	mov	r0, #0
   16e54:	movt	r1, #5
   16e58:	b	16e34 <__assert_fail@plt+0x5a30>
   16e5c:	movw	r1, #61552	; 0xf070
   16e60:	mov	r0, #0
   16e64:	movt	r1, #5
   16e68:	b	16e34 <__assert_fail@plt+0x5a30>
   16e6c:	movw	r1, #61584	; 0xf090
   16e70:	mov	r0, #0
   16e74:	movt	r1, #5
   16e78:	b	16e34 <__assert_fail@plt+0x5a30>
   16e7c:	movw	r1, #61616	; 0xf0b0
   16e80:	mov	r0, #0
   16e84:	movt	r1, #5
   16e88:	b	16e34 <__assert_fail@plt+0x5a30>
   16e8c:	movw	r1, #61628	; 0xf0bc
   16e90:	mov	r0, #0
   16e94:	movt	r1, #5
   16e98:	b	16e34 <__assert_fail@plt+0x5a30>
   16e9c:	movw	r1, #61680	; 0xf0f0
   16ea0:	mov	r0, #0
   16ea4:	movt	r1, #5
   16ea8:	b	16e34 <__assert_fail@plt+0x5a30>
   16eac:	movw	r1, #61716	; 0xf114
   16eb0:	mov	r0, #0
   16eb4:	movt	r1, #5
   16eb8:	b	16e34 <__assert_fail@plt+0x5a30>
   16ebc:	movw	r1, #61756	; 0xf13c
   16ec0:	mov	r0, #0
   16ec4:	movt	r1, #5
   16ec8:	b	16e34 <__assert_fail@plt+0x5a30>
   16ecc:	mov	r2, r0
   16ed0:	movw	r1, #61824	; 0xf180
   16ed4:	mov	r0, #1
   16ed8:	movt	r1, #5
   16edc:	pop	{r3, lr}
   16ee0:	b	1132c <__printf_chk@plt>
   16ee4:	push	{r4, r5, r6, r7, r8, lr}
   16ee8:	movw	r1, #6840	; 0x1ab8
   16eec:	ldrd	r4, [sp, #24]
   16ef0:	mov	r7, r0
   16ef4:	movt	r1, #6
   16ef8:	mov	r0, #1
   16efc:	mov	r8, r2
   16f00:	bl	1132c <__printf_chk@plt>
   16f04:	mov	r1, r5
   16f08:	mov	r2, #6
   16f0c:	mov	r0, r4
   16f10:	movw	r6, #16712	; 0x4148
   16f14:	bl	16c84 <__assert_fail@plt+0x5880>
   16f18:	mov	r0, #32
   16f1c:	bl	112fc <putchar@plt>
   16f20:	cmp	r7, #0
   16f24:	movt	r6, #9
   16f28:	beq	16f7c <__assert_fail@plt+0x5b78>
   16f2c:	ldr	r1, [r6, #460]	; 0x1cc
   16f30:	movw	r3, #26492	; 0x677c
   16f34:	movt	r3, #9
   16f38:	rsb	r0, r8, r4
   16f3c:	cmp	r1, #0
   16f40:	add	r0, r7, r0
   16f44:	ldr	r3, [r3]
   16f48:	moveq	r1, #8
   16f4c:	movne	r1, #4
   16f50:	blx	r3
   16f54:	mov	r2, #6
   16f58:	bl	16c84 <__assert_fail@plt+0x5880>
   16f5c:	ldr	r3, [r6, #460]	; 0x1cc
   16f60:	mov	r1, #0
   16f64:	cmp	r3, #0
   16f68:	movne	r0, #4
   16f6c:	moveq	r0, #8
   16f70:	adds	r0, r0, r4
   16f74:	adc	r1, r1, r5
   16f78:	pop	{r4, r5, r6, r7, r8, pc}
   16f7c:	mov	r0, r7
   16f80:	ldr	r7, [r6, #460]	; 0x1cc
   16f84:	mov	r2, #5
   16f88:	movw	r1, #61836	; 0xf18c
   16f8c:	cmp	r7, #0
   16f90:	movt	r1, #5
   16f94:	moveq	r7, #16
   16f98:	movne	r7, #8
   16f9c:	bl	11170 <dcgettext@plt>
   16fa0:	mov	r2, r7
   16fa4:	movw	r1, #61848	; 0xf198
   16fa8:	movt	r1, #5
   16fac:	mov	r3, r0
   16fb0:	mov	r0, #1
   16fb4:	bl	1132c <__printf_chk@plt>
   16fb8:	b	16f5c <__assert_fail@plt+0x5b58>
   16fbc:	push	{r4, r5, r6, r7, r8, lr}
   16fc0:	movw	r1, #6840	; 0x1ab8
   16fc4:	ldrd	r4, [sp, #24]
   16fc8:	mov	r8, r0
   16fcc:	movt	r1, #6
   16fd0:	mov	r0, #1
   16fd4:	mov	r7, r3
   16fd8:	mov	r6, r2
   16fdc:	bl	1132c <__printf_chk@plt>
   16fe0:	mov	r1, r5
   16fe4:	mov	r2, #6
   16fe8:	mov	r0, r4
   16fec:	bl	16c84 <__assert_fail@plt+0x5880>
   16ff0:	mov	r0, #32
   16ff4:	bl	112fc <putchar@plt>
   16ff8:	movw	r2, #65520	; 0xfff0
   16ffc:	adds	r2, r2, r6
   17000:	mov	r3, #0
   17004:	adc	r3, r3, r7
   17008:	mov	r0, #1
   1700c:	cmp	r5, r3
   17010:	cmpeq	r4, r2
   17014:	movw	r7, #16712	; 0x4148
   17018:	rsbcc	r2, r6, r4
   1701c:	movt	r7, #9
   17020:	subcc	r2, r2, #32512	; 0x7f00
   17024:	movwcc	r1, #61852	; 0xf19c
   17028:	movwcs	r1, #61860	; 0xf1a4
   1702c:	movwcs	r2, #25084	; 0x61fc
   17030:	subcc	r2, r2, #240	; 0xf0
   17034:	movtcs	r2, #7
   17038:	movtcc	r1, #5
   1703c:	movtcs	r1, #5
   17040:	bl	1132c <__printf_chk@plt>
   17044:	mov	r0, #32
   17048:	bl	112fc <putchar@plt>
   1704c:	cmp	r8, #0
   17050:	beq	17120 <__assert_fail@plt+0x5d1c>
   17054:	ldr	r1, [r7, #460]	; 0x1cc
   17058:	rsb	r6, r6, r4
   1705c:	add	r0, r8, r6
   17060:	ldr	r2, [sp, #32]
   17064:	cmp	r1, #0
   17068:	moveq	r3, #8
   1706c:	movne	r3, #4
   17070:	add	r3, r0, r3
   17074:	cmp	r2, r3
   17078:	bcc	170c0 <__assert_fail@plt+0x5cbc>
   1707c:	cmp	r1, #0
   17080:	movw	r3, #26492	; 0x677c
   17084:	movt	r3, #9
   17088:	moveq	r1, #8
   1708c:	movne	r1, #4
   17090:	ldr	r3, [r3]
   17094:	blx	r3
   17098:	mov	r2, #6
   1709c:	bl	16c84 <__assert_fail@plt+0x5880>
   170a0:	ldr	r3, [r7, #460]	; 0x1cc
   170a4:	mov	r1, #0
   170a8:	cmp	r3, #0
   170ac:	movne	r0, #4
   170b0:	moveq	r0, #8
   170b4:	adds	r0, r0, r4
   170b8:	adc	r1, r1, r5
   170bc:	pop	{r4, r5, r6, r7, r8, pc}
   170c0:	mov	r2, #5
   170c4:	movw	r1, #61868	; 0xf1ac
   170c8:	mov	r0, #0
   170cc:	movt	r1, #5
   170d0:	bl	11170 <dcgettext@plt>
   170d4:	bl	4b9ec <warn@@Base>
   170d8:	ldr	r4, [r7, #460]	; 0x1cc
   170dc:	mov	r0, #0
   170e0:	mov	r2, #5
   170e4:	cmp	r4, r0
   170e8:	movw	r1, #50908	; 0xc6dc
   170ec:	movt	r1, #5
   170f0:	moveq	r4, #16
   170f4:	movne	r4, #8
   170f8:	bl	11170 <dcgettext@plt>
   170fc:	mov	r2, r4
   17100:	movw	r1, #61848	; 0xf198
   17104:	movt	r1, #5
   17108:	mov	r3, r0
   1710c:	mov	r0, #1
   17110:	bl	1132c <__printf_chk@plt>
   17114:	mvn	r0, #0
   17118:	mvn	r1, #0
   1711c:	pop	{r4, r5, r6, r7, r8, pc}
   17120:	ldr	r6, [r7, #460]	; 0x1cc
   17124:	mov	r0, r8
   17128:	mov	r2, #5
   1712c:	movw	r1, #61836	; 0xf18c
   17130:	cmp	r6, #0
   17134:	movt	r1, #5
   17138:	moveq	r6, #16
   1713c:	movne	r6, #8
   17140:	bl	11170 <dcgettext@plt>
   17144:	mov	r2, r6
   17148:	movw	r1, #61848	; 0xf198
   1714c:	movt	r1, #5
   17150:	mov	r3, r0
   17154:	mov	r0, #1
   17158:	bl	1132c <__printf_chk@plt>
   1715c:	b	170a0 <__assert_fail@plt+0x5c9c>
   17160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17164:	movw	r6, #16712	; 0x4148
   17168:	movt	r6, #9
   1716c:	movw	fp, #16680	; 0x4128
   17170:	movt	fp, #9
   17174:	sub	sp, sp, #100	; 0x64
   17178:	ldr	r3, [r6, #516]	; 0x204
   1717c:	mov	sl, r0
   17180:	ldr	r2, [fp]
   17184:	cmp	r3, #0
   17188:	str	r2, [sp, #92]	; 0x5c
   1718c:	bne	1719c <__assert_fail@plt+0x5d98>
   17190:	ldr	r3, [r6, #520]	; 0x208
   17194:	cmp	r3, #0
   17198:	beq	17228 <__assert_fail@plt+0x5e24>
   1719c:	ldr	r4, [r6, #68]	; 0x44
   171a0:	movw	r5, #16712	; 0x4148
   171a4:	movt	r5, #9
   171a8:	cmp	r4, #0
   171ac:	beq	17244 <__assert_fail@plt+0x5e40>
   171b0:	ldr	r7, [r5, #220]	; 0xdc
   171b4:	cmp	r7, #0
   171b8:	beq	17688 <__assert_fail@plt+0x6284>
   171bc:	mov	r1, #4
   171c0:	mov	r0, r4
   171c4:	bl	110d4 <calloc@plt>
   171c8:	cmp	r0, #0
   171cc:	str	r0, [r5, #524]	; 0x20c
   171d0:	mov	r8, r0
   171d4:	addne	r2, r7, #72	; 0x48
   171d8:	movne	r1, #0
   171dc:	movne	r5, r1
   171e0:	movne	r3, r1
   171e4:	beq	17750 <__assert_fail@plt+0x634c>
   171e8:	ldr	r0, [r2, #-68]	; 0xffffffbc
   171ec:	add	r3, r3, #1
   171f0:	add	r2, r2, #72	; 0x48
   171f4:	cmp	r0, #17
   171f8:	addeq	r5, r5, #1
   171fc:	moveq	r1, r5
   17200:	cmp	r3, r4
   17204:	bne	171e8 <__assert_fail@plt+0x5de4>
   17208:	cmp	r5, #0
   1720c:	movw	r4, #16712	; 0x4148
   17210:	str	r1, [r6, #528]	; 0x210
   17214:	movt	r4, #9
   17218:	bne	1728c <__assert_fail@plt+0x5e88>
   1721c:	ldr	r3, [r4, #520]	; 0x208
   17220:	cmp	r3, #0
   17224:	bne	17278 <__assert_fail@plt+0x5e74>
   17228:	mov	r0, #1
   1722c:	ldr	r2, [sp, #92]	; 0x5c
   17230:	ldr	r3, [fp]
   17234:	cmp	r2, r3
   17238:	bne	17a00 <__assert_fail@plt+0x65fc>
   1723c:	add	sp, sp, #100	; 0x64
   17240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17244:	ldr	r3, [r5, #520]	; 0x208
   17248:	cmp	r3, #0
   1724c:	beq	17228 <__assert_fail@plt+0x5e24>
   17250:	movw	r1, #61936	; 0xf1f0
   17254:	movt	r1, #5
   17258:	mov	r0, r4
   1725c:	mov	r2, #5
   17260:	bl	11170 <dcgettext@plt>
   17264:	mov	r1, r0
   17268:	mov	r0, #1
   1726c:	bl	1132c <__printf_chk@plt>
   17270:	mov	r0, #1
   17274:	b	1722c <__assert_fail@plt+0x5e28>
   17278:	movw	r1, #62068	; 0xf274
   1727c:	mov	r0, r5
   17280:	mov	r2, #5
   17284:	movt	r1, #5
   17288:	b	17260 <__assert_fail@plt+0x5e5c>
   1728c:	mov	r0, r5
   17290:	mov	r1, #8
   17294:	bl	110d4 <calloc@plt>
   17298:	cmp	r0, #0
   1729c:	str	r0, [sp, #48]	; 0x30
   172a0:	str	r0, [r4, #532]	; 0x214
   172a4:	beq	17950 <__assert_fail@plt+0x654c>
   172a8:	mov	r3, #0
   172ac:	movw	r2, #26492	; 0x677c
   172b0:	str	r3, [sp, #32]
   172b4:	movt	r2, #9
   172b8:	mov	r5, r4
   172bc:	str	r2, [sp, #56]	; 0x38
   172c0:	str	r3, [sp, #52]	; 0x34
   172c4:	mov	r8, r3
   172c8:	str	r3, [sp, #44]	; 0x2c
   172cc:	str	r3, [sp, #72]	; 0x48
   172d0:	str	r3, [sp, #60]	; 0x3c
   172d4:	str	r3, [sp, #88]	; 0x58
   172d8:	str	sl, [sp, #68]	; 0x44
   172dc:	str	fp, [sp, #64]	; 0x40
   172e0:	b	172f8 <__assert_fail@plt+0x5ef4>
   172e4:	ldr	r3, [r6, #68]	; 0x44
   172e8:	add	r8, r8, #1
   172ec:	add	r7, r7, #72	; 0x48
   172f0:	cmp	r3, r8
   172f4:	bls	17358 <__assert_fail@plt+0x5f54>
   172f8:	ldr	r3, [r7, #4]
   172fc:	cmp	r3, #17
   17300:	bne	172e4 <__assert_fail@plt+0x5ee0>
   17304:	mov	r0, r7
   17308:	bl	132f8 <__assert_fail@plt+0x1ef4>
   1730c:	ldr	r3, [r7, #40]	; 0x28
   17310:	ldr	r2, [r6, #68]	; 0x44
   17314:	cmp	r3, r2
   17318:	mov	r4, r0
   1731c:	bcs	17338 <__assert_fail@plt+0x5f34>
   17320:	add	r3, r3, r3, lsl #3
   17324:	ldr	r2, [r5, #220]	; 0xdc
   17328:	add	sl, r2, r3, lsl #3
   1732c:	ldr	r3, [sl, #4]
   17330:	cmp	r3, #2
   17334:	beq	17388 <__assert_fail@plt+0x5f84>
   17338:	mov	r2, #5
   1733c:	movw	r1, #62148	; 0xf2c4
   17340:	mov	r0, #0
   17344:	movt	r1, #5
   17348:	bl	11170 <dcgettext@plt>
   1734c:	mov	r1, r4
   17350:	bl	4b2b0 <error@@Base>
   17354:	b	172e4 <__assert_fail@plt+0x5ee0>
   17358:	ldr	sl, [sp, #44]	; 0x2c
   1735c:	ldr	fp, [sp, #64]	; 0x40
   17360:	cmp	sl, #0
   17364:	beq	17370 <__assert_fail@plt+0x5f6c>
   17368:	ldr	r0, [sp, #44]	; 0x2c
   1736c:	bl	1111c <free@plt>
   17370:	ldr	sl, [sp, #52]	; 0x34
   17374:	cmp	sl, #0
   17378:	beq	17228 <__assert_fail@plt+0x5e24>
   1737c:	mov	r0, sl
   17380:	bl	1111c <free@plt>
   17384:	b	17228 <__assert_fail@plt+0x5e24>
   17388:	ldr	fp, [sp, #60]	; 0x3c
   1738c:	cmp	fp, sl
   17390:	beq	173cc <__assert_fail@plt+0x5fc8>
   17394:	ldr	fp, [sp, #44]	; 0x2c
   17398:	cmp	fp, #0
   1739c:	beq	173a8 <__assert_fail@plt+0x5fa4>
   173a0:	mov	r0, fp
   173a4:	bl	1111c <free@plt>
   173a8:	ldr	r3, [r6, #460]	; 0x1cc
   173ac:	mov	r1, sl
   173b0:	ldr	r0, [sp, #68]	; 0x44
   173b4:	add	r2, sp, #88	; 0x58
   173b8:	cmp	r3, #0
   173bc:	str	sl, [sp, #60]	; 0x3c
   173c0:	beq	176f8 <__assert_fail@plt+0x62f4>
   173c4:	bl	155f4 <__assert_fail@plt+0x41f0>
   173c8:	str	r0, [sp, #44]	; 0x2c
   173cc:	ldr	sl, [sp, #44]	; 0x2c
   173d0:	cmp	sl, #0
   173d4:	beq	1797c <__assert_fail@plt+0x6578>
   173d8:	ldr	sl, [r7, #44]	; 0x2c
   173dc:	ldr	r3, [sp, #88]	; 0x58
   173e0:	cmp	sl, r3
   173e4:	bcs	175f0 <__assert_fail@plt+0x61ec>
   173e8:	ldr	fp, [sp, #44]	; 0x2c
   173ec:	add	r9, fp, sl, lsl #5
   173f0:	ldrb	r3, [r9, #20]
   173f4:	and	r3, r3, #15
   173f8:	cmp	r3, #3
   173fc:	beq	1782c <__assert_fail@plt+0x6428>
   17400:	ldr	sl, [sp, #60]	; 0x3c
   17404:	ldr	r3, [r6, #68]	; 0x44
   17408:	ldr	fp, [sl, #40]	; 0x28
   1740c:	cmp	fp, r3
   17410:	bcc	17770 <__assert_fail@plt+0x636c>
   17414:	ldr	fp, [sp, #52]	; 0x34
   17418:	cmp	fp, #0
   1741c:	beq	17970 <__assert_fail@plt+0x656c>
   17420:	mov	r0, fp
   17424:	mov	sl, #0
   17428:	str	sl, [sp, #72]	; 0x48
   1742c:	bl	1111c <free@plt>
   17430:	mov	sl, #0
   17434:	str	sl, [sp, #32]
   17438:	str	sl, [sp, #52]	; 0x34
   1743c:	movw	r1, #50908	; 0xc6dc
   17440:	mov	r0, #0
   17444:	movt	r1, #5
   17448:	mov	r2, #5
   1744c:	bl	11170 <dcgettext@plt>
   17450:	str	r0, [sp, #76]	; 0x4c
   17454:	ldrd	sl, [r7, #32]
   17458:	ldrd	r2, [r7, #56]	; 0x38
   1745c:	cmp	r3, fp
   17460:	cmpeq	r2, sl
   17464:	bhi	179b4 <__assert_fail@plt+0x65b0>
   17468:	ldr	r3, [r7, #24]
   1746c:	mov	r2, #5
   17470:	movw	r1, #23804	; 0x5cfc
   17474:	mov	r0, #0
   17478:	movt	r1, #6
   1747c:	str	r3, [sp, #24]
   17480:	bl	11170 <dcgettext@plt>
   17484:	ldr	r3, [sp, #24]
   17488:	strd	sl, [sp, #8]
   1748c:	mov	sl, #1
   17490:	mov	fp, #0
   17494:	ldr	r1, [sp, #68]	; 0x44
   17498:	strd	sl, [sp]
   1749c:	mov	r2, r3
   174a0:	str	r0, [sp, #16]
   174a4:	mov	r0, #0
   174a8:	bl	1502c <__assert_fail@plt+0x3c28>
   174ac:	cmp	r0, #0
   174b0:	str	r0, [sp, #80]	; 0x50
   174b4:	beq	172e4 <__assert_fail@plt+0x5ee0>
   174b8:	ldrd	r2, [r7, #56]	; 0x38
   174bc:	ldrd	r0, [r7, #32]
   174c0:	bl	529fc <zcfree@@Base+0x13cc>
   174c4:	ldr	r2, [sp, #56]	; 0x38
   174c8:	mov	r1, #4
   174cc:	ldr	fp, [sp, #80]	; 0x50
   174d0:	ldr	r3, [r2]
   174d4:	add	sl, fp, #4
   174d8:	sub	r9, r0, #1
   174dc:	ldr	r0, [sp, #80]	; 0x50
   174e0:	blx	r3
   174e4:	ldr	r2, [r6, #520]	; 0x208
   174e8:	cmp	r2, #0
   174ec:	mov	fp, r0
   174f0:	bne	178a0 <__assert_fail@plt+0x649c>
   174f4:	ldr	r2, [sp, #48]	; 0x30
   174f8:	cmp	r9, #0
   174fc:	str	r8, [r2, #4]
   17500:	beq	1770c <__assert_fail@plt+0x6308>
   17504:	str	r8, [sp, #76]	; 0x4c
   17508:	mov	fp, #0
   1750c:	str	r7, [sp, #84]	; 0x54
   17510:	mov	r7, r9
   17514:	ldr	r8, [sp, #48]	; 0x30
   17518:	ldr	r9, [sp, #56]	; 0x38
   1751c:	b	17540 <__assert_fail@plt+0x613c>
   17520:	ldr	r3, [r5, #536]	; 0x218
   17524:	cmp	r3, #9
   17528:	add	r3, r3, #1
   1752c:	str	r3, [r5, #536]	; 0x218
   17530:	bls	176a8 <__assert_fail@plt+0x62a4>
   17534:	add	fp, fp, #1
   17538:	cmp	r7, fp
   1753c:	bls	17704 <__assert_fail@plt+0x6300>
   17540:	ldr	r3, [r9]
   17544:	mov	r0, sl
   17548:	mov	r1, #4
   1754c:	add	sl, sl, r1
   17550:	blx	r3
   17554:	ldr	r3, [r6, #68]	; 0x44
   17558:	cmp	r0, r3
   1755c:	mov	r4, r0
   17560:	bcs	17520 <__assert_fail@plt+0x611c>
   17564:	ldr	r3, [r5, #524]	; 0x20c
   17568:	lsl	ip, r0, #2
   1756c:	add	r1, r3, ip
   17570:	ldr	r2, [r3, r4, lsl #2]
   17574:	cmp	r2, #0
   17578:	beq	1765c <__assert_fail@plt+0x6258>
   1757c:	cmp	r4, #0
   17580:	beq	17610 <__assert_fail@plt+0x620c>
   17584:	ldr	r2, [r5, #540]	; 0x21c
   17588:	cmp	r2, #9
   1758c:	add	r2, r2, #1
   17590:	str	r2, [r5, #540]	; 0x21c
   17594:	bhi	17534 <__assert_fail@plt+0x6130>
   17598:	mov	r2, #5
   1759c:	movw	r1, #62572	; 0xf46c
   175a0:	mov	r0, #0
   175a4:	movt	r1, #5
   175a8:	str	r3, [sp, #24]
   175ac:	bl	11170 <dcgettext@plt>
   175b0:	ldr	r3, [sp, #24]
   175b4:	mov	r1, r4
   175b8:	ldr	r2, [sp, #76]	; 0x4c
   175bc:	ldr	r3, [r3, r4, lsl #2]
   175c0:	ldr	r3, [r3, #4]
   175c4:	bl	4b2b0 <error@@Base>
   175c8:	ldr	r3, [r5, #540]	; 0x21c
   175cc:	cmp	r3, #10
   175d0:	bne	17534 <__assert_fail@plt+0x6130>
   175d4:	mov	r2, #5
   175d8:	movw	r1, #62644	; 0xf4b4
   175dc:	mov	r0, #0
   175e0:	movt	r1, #5
   175e4:	bl	11170 <dcgettext@plt>
   175e8:	bl	4b9ec <warn@@Base>
   175ec:	b	17534 <__assert_fail@plt+0x6130>
   175f0:	mov	r2, #5
   175f4:	movw	r1, #62224	; 0xf310
   175f8:	mov	r0, #0
   175fc:	movt	r1, #5
   17600:	bl	11170 <dcgettext@plt>
   17604:	mov	r1, r4
   17608:	bl	4b2b0 <error@@Base>
   1760c:	b	172e4 <__assert_fail@plt+0x5ee0>
   17610:	ldr	r2, [r5, #544]	; 0x220
   17614:	cmp	r2, #0
   17618:	bne	1765c <__assert_fail@plt+0x6258>
   1761c:	mov	r2, #5
   17620:	movw	r1, #62720	; 0xf500
   17624:	movt	r1, #5
   17628:	str	ip, [sp, #28]
   1762c:	str	r3, [sp, #24]
   17630:	bl	11170 <dcgettext@plt>
   17634:	ldr	r3, [sp, #24]
   17638:	ldr	r3, [r3, r4, lsl #2]
   1763c:	ldr	r1, [r3, #4]
   17640:	bl	4b2b0 <error@@Base>
   17644:	ldr	ip, [sp, #28]
   17648:	ldr	r1, [r5, #524]	; 0x20c
   1764c:	ldr	r3, [r5, #544]	; 0x220
   17650:	add	r1, r1, ip
   17654:	add	r3, r3, #1
   17658:	str	r3, [r5, #544]	; 0x220
   1765c:	ldr	r3, [r6, #520]	; 0x208
   17660:	str	r8, [r1]
   17664:	cmp	r3, #0
   17668:	bne	17724 <__assert_fail@plt+0x6320>
   1766c:	mov	r0, #8
   17670:	bl	4eba0 <warn@@Base+0x31b4>
   17674:	ldr	r3, [r8]
   17678:	str	r4, [r0, #4]
   1767c:	str	r0, [r8]
   17680:	str	r3, [r0]
   17684:	b	17534 <__assert_fail@plt+0x6130>
   17688:	mov	r2, #5
   1768c:	movw	r1, #61984	; 0xf220
   17690:	mov	r0, r7
   17694:	movt	r1, #5
   17698:	bl	11170 <dcgettext@plt>
   1769c:	bl	4b2b0 <error@@Base>
   176a0:	mov	r0, r7
   176a4:	b	1722c <__assert_fail@plt+0x5e28>
   176a8:	mov	r2, #5
   176ac:	movw	r1, #62432	; 0xf3e0
   176b0:	mov	r0, #0
   176b4:	movt	r1, #5
   176b8:	bl	11170 <dcgettext@plt>
   176bc:	ldr	r3, [r5, #68]	; 0x44
   176c0:	mov	r1, r4
   176c4:	ldr	r2, [sp, #76]	; 0x4c
   176c8:	sub	r3, r3, #1
   176cc:	bl	4b2b0 <error@@Base>
   176d0:	ldr	r3, [r5, #536]	; 0x218
   176d4:	cmp	r3, #10
   176d8:	bne	17534 <__assert_fail@plt+0x6130>
   176dc:	mov	r2, #5
   176e0:	movw	r1, #62496	; 0xf420
   176e4:	mov	r0, #0
   176e8:	movt	r1, #5
   176ec:	bl	11170 <dcgettext@plt>
   176f0:	bl	4b9ec <warn@@Base>
   176f4:	b	17534 <__assert_fail@plt+0x6130>
   176f8:	bl	15a6c <__assert_fail@plt+0x4668>
   176fc:	str	r0, [sp, #44]	; 0x2c
   17700:	b	173cc <__assert_fail@plt+0x5fc8>
   17704:	ldr	r8, [sp, #76]	; 0x4c
   17708:	ldr	r7, [sp, #84]	; 0x54
   1770c:	ldr	sl, [sp, #48]	; 0x30
   17710:	ldr	r0, [sp, #80]	; 0x50
   17714:	add	sl, sl, #8
   17718:	str	sl, [sp, #48]	; 0x30
   1771c:	bl	1111c <free@plt>
   17720:	b	172e4 <__assert_fail@plt+0x5ee0>
   17724:	ldr	r3, [r5, #220]	; 0xdc
   17728:	add	r0, r4, r4, lsl #3
   1772c:	add	r0, r3, r0, lsl #3
   17730:	bl	132f8 <__assert_fail@plt+0x1ef4>
   17734:	movw	r1, #62756	; 0xf524
   17738:	mov	r2, r4
   1773c:	movt	r1, #5
   17740:	mov	r3, r0
   17744:	mov	r0, #1
   17748:	bl	1132c <__printf_chk@plt>
   1774c:	b	1766c <__assert_fail@plt+0x6268>
   17750:	mov	r2, #5
   17754:	movw	r1, #62020	; 0xf244
   17758:	movt	r1, #5
   1775c:	bl	11170 <dcgettext@plt>
   17760:	ldr	r1, [r5, #68]	; 0x44
   17764:	bl	4b2b0 <error@@Base>
   17768:	mov	r0, r8
   1776c:	b	1722c <__assert_fail@plt+0x5e28>
   17770:	add	fp, fp, fp, lsl #3
   17774:	ldr	r3, [r5, #220]	; 0xdc
   17778:	add	r3, r3, fp, lsl #3
   1777c:	ldr	fp, [sp, #72]	; 0x48
   17780:	str	r3, [sp, #76]	; 0x4c
   17784:	cmp	r3, fp
   17788:	beq	1780c <__assert_fail@plt+0x6408>
   1778c:	ldr	sl, [sp, #52]	; 0x34
   17790:	cmp	sl, #0
   17794:	beq	177a0 <__assert_fail@plt+0x639c>
   17798:	mov	r0, sl
   1779c:	bl	1111c <free@plt>
   177a0:	ldr	fp, [sp, #76]	; 0x4c
   177a4:	mov	r2, #5
   177a8:	movw	r1, #3532	; 0xdcc
   177ac:	mov	r0, #0
   177b0:	movt	r1, #6
   177b4:	ldr	ip, [fp, #24]
   177b8:	ldrd	sl, [fp, #32]
   177bc:	str	ip, [sp, #28]
   177c0:	bl	11170 <dcgettext@plt>
   177c4:	ldr	ip, [sp, #28]
   177c8:	mov	r2, #1
   177cc:	mov	r3, #0
   177d0:	ldr	r1, [sp, #68]	; 0x44
   177d4:	strd	r2, [sp]
   177d8:	strd	sl, [sp, #8]
   177dc:	mov	r2, ip
   177e0:	str	r0, [sp, #16]
   177e4:	mov	r0, #0
   177e8:	bl	1502c <__assert_fail@plt+0x3c28>
   177ec:	cmp	r0, #0
   177f0:	str	r0, [sp, #52]	; 0x34
   177f4:	beq	179a8 <__assert_fail@plt+0x65a4>
   177f8:	ldr	sl, [sp, #76]	; 0x4c
   177fc:	ldr	fp, [sp, #76]	; 0x4c
   17800:	ldr	sl, [sl, #32]
   17804:	str	fp, [sp, #72]	; 0x48
   17808:	str	sl, [sp, #32]
   1780c:	ldr	r3, [r9, #16]
   17810:	ldr	sl, [sp, #32]
   17814:	cmp	sl, r3
   17818:	bls	1743c <__assert_fail@plt+0x6038>
   1781c:	ldr	fp, [sp, #52]	; 0x34
   17820:	add	r3, fp, r3
   17824:	str	r3, [sp, #76]	; 0x4c
   17828:	b	17454 <__assert_fail@plt+0x6050>
   1782c:	ldr	r3, [r9, #24]
   17830:	cmp	r3, #0
   17834:	beq	175f0 <__assert_fail@plt+0x61ec>
   17838:	ldr	r2, [r6, #68]	; 0x44
   1783c:	cmp	r3, r2
   17840:	bcs	175f0 <__assert_fail@plt+0x61ec>
   17844:	ldr	r2, [r5, #220]	; 0xdc
   17848:	add	r3, r3, r3, lsl #3
   1784c:	adds	r0, r2, r3, lsl #3
   17850:	beq	17a38 <__assert_fail@plt+0x6634>
   17854:	ldr	r0, [r5, #212]	; 0xd4
   17858:	cmp	r0, #0
   1785c:	beq	17a20 <__assert_fail@plt+0x661c>
   17860:	ldr	r3, [r2, r3, lsl #3]
   17864:	ldr	r2, [r5, #216]	; 0xd8
   17868:	cmp	r3, r2
   1786c:	addcc	r3, r0, r3
   17870:	strcc	r3, [sp, #76]	; 0x4c
   17874:	bcs	17a04 <__assert_fail@plt+0x6600>
   17878:	ldr	sl, [sp, #52]	; 0x34
   1787c:	cmp	sl, #0
   17880:	beq	179f0 <__assert_fail@plt+0x65ec>
   17884:	mov	r0, sl
   17888:	mov	fp, #0
   1788c:	str	fp, [sp, #52]	; 0x34
   17890:	bl	1111c <free@plt>
   17894:	str	fp, [sp, #32]
   17898:	str	fp, [sp, #72]	; 0x48
   1789c:	b	17454 <__assert_fail@plt+0x6050>
   178a0:	movw	r1, #62336	; 0xf380
   178a4:	mov	r0, #0
   178a8:	movt	r1, #5
   178ac:	mov	r2, #5
   178b0:	bl	11170 <dcgettext@plt>
   178b4:	cmp	fp, #0
   178b8:	mov	ip, r0
   178bc:	beq	1799c <__assert_fail@plt+0x6598>
   178c0:	cmp	fp, #1
   178c4:	movweq	r2, #61928	; 0xf1e8
   178c8:	movteq	r2, #5
   178cc:	beq	1790c <__assert_fail@plt+0x6508>
   178d0:	mov	r2, #5
   178d4:	movw	r1, #62392	; 0xf3b8
   178d8:	mov	r0, #0
   178dc:	movt	r1, #5
   178e0:	str	ip, [sp, #28]
   178e4:	bl	11170 <dcgettext@plt>
   178e8:	mov	r1, #32
   178ec:	mov	r2, #1
   178f0:	str	fp, [sp, #4]
   178f4:	mov	r3, r1
   178f8:	str	r0, [sp]
   178fc:	ldr	r0, [pc, #332]	; 17a50 <__assert_fail@plt+0x664c>
   17900:	bl	113f8 <__snprintf_chk@plt>
   17904:	ldr	r2, [pc, #324]	; 17a50 <__assert_fail@plt+0x664c>
   17908:	ldr	ip, [sp, #28]
   1790c:	ldr	fp, [sp, #76]	; 0x4c
   17910:	mov	r1, ip
   17914:	mov	r3, r8
   17918:	str	r4, [sp]
   1791c:	str	r9, [sp, #8]
   17920:	mov	r0, #1
   17924:	str	fp, [sp, #4]
   17928:	bl	1132c <__printf_chk@plt>
   1792c:	mov	r2, #5
   17930:	movw	r1, #62412	; 0xf3cc
   17934:	mov	r0, #0
   17938:	movt	r1, #5
   1793c:	bl	11170 <dcgettext@plt>
   17940:	mov	r1, r0
   17944:	mov	r0, #1
   17948:	bl	1132c <__printf_chk@plt>
   1794c:	b	174f4 <__assert_fail@plt+0x60f0>
   17950:	mov	r2, #5
   17954:	movw	r1, #62112	; 0xf2a0
   17958:	movt	r1, #5
   1795c:	bl	11170 <dcgettext@plt>
   17960:	mov	r1, r5
   17964:	bl	4b2b0 <error@@Base>
   17968:	ldr	r0, [sp, #48]	; 0x30
   1796c:	b	1722c <__assert_fail@plt+0x5e28>
   17970:	ldr	fp, [sp, #52]	; 0x34
   17974:	str	fp, [sp, #72]	; 0x48
   17978:	b	17430 <__assert_fail@plt+0x602c>
   1797c:	mov	r0, sl
   17980:	mov	r2, #5
   17984:	movw	r1, #62184	; 0xf2e8
   17988:	movt	r1, #5
   1798c:	bl	11170 <dcgettext@plt>
   17990:	mov	r1, r4
   17994:	bl	4b2b0 <error@@Base>
   17998:	b	172e4 <__assert_fail@plt+0x5ee0>
   1799c:	movw	r2, #25084	; 0x61fc
   179a0:	movt	r2, #7
   179a4:	b	1790c <__assert_fail@plt+0x6508>
   179a8:	ldr	r3, [sp, #76]	; 0x4c
   179ac:	str	r3, [sp, #72]	; 0x48
   179b0:	b	17430 <__assert_fail@plt+0x602c>
   179b4:	mov	r2, #5
   179b8:	movw	r1, #62260	; 0xf334
   179bc:	mov	r0, #0
   179c0:	movt	r1, #5
   179c4:	ldr	fp, [sp, #64]	; 0x40
   179c8:	bl	11170 <dcgettext@plt>
   179cc:	mov	r4, r0
   179d0:	mov	r0, r7
   179d4:	bl	132f8 <__assert_fail@plt+0x1ef4>
   179d8:	ldr	r2, [r7, #56]	; 0x38
   179dc:	ldr	r3, [r7, #32]
   179e0:	mov	r1, r0
   179e4:	mov	r0, r4
   179e8:	bl	4b2b0 <error@@Base>
   179ec:	b	17368 <__assert_fail@plt+0x5f64>
   179f0:	ldr	sl, [sp, #52]	; 0x34
   179f4:	str	sl, [sp, #32]
   179f8:	str	sl, [sp, #72]	; 0x48
   179fc:	b	17454 <__assert_fail@plt+0x6050>
   17a00:	bl	1117c <__stack_chk_fail@plt>
   17a04:	movw	r1, #50908	; 0xc6dc
   17a08:	mov	r0, #0
   17a0c:	movt	r1, #5
   17a10:	mov	r2, #5
   17a14:	bl	11170 <dcgettext@plt>
   17a18:	str	r0, [sp, #76]	; 0x4c
   17a1c:	b	17878 <__assert_fail@plt+0x6474>
   17a20:	movw	r1, #50896	; 0xc6d0
   17a24:	mov	r2, #5
   17a28:	movt	r1, #5
   17a2c:	bl	11170 <dcgettext@plt>
   17a30:	str	r0, [sp, #76]	; 0x4c
   17a34:	b	17878 <__assert_fail@plt+0x6474>
   17a38:	movw	r1, #50888	; 0xc6c8
   17a3c:	mov	r2, #5
   17a40:	movt	r1, #5
   17a44:	bl	11170 <dcgettext@plt>
   17a48:	str	r0, [sp, #76]	; 0x4c
   17a4c:	b	17878 <__assert_fail@plt+0x6474>
   17a50:	andeq	r4, r9, ip, lsr #6
   17a54:	push	{r3, r4, r5, lr}
   17a58:	movw	r3, #16712	; 0x4148
   17a5c:	subs	r4, r0, #0
   17a60:	movt	r3, #9
   17a64:	mov	r2, #0
   17a68:	strb	r2, [r3, #548]	; 0x224
   17a6c:	beq	17b34 <__assert_fail@plt+0x6730>
   17a70:	tst	r4, #1
   17a74:	bne	17af4 <__assert_fail@plt+0x66f0>
   17a78:	tst	r4, #2
   17a7c:	beq	17a94 <__assert_fail@plt+0x6690>
   17a80:	movw	r1, #62792	; 0xf548
   17a84:	ldr	r0, [pc, #212]	; 17b60 <__assert_fail@plt+0x675c>
   17a88:	movt	r1, #5
   17a8c:	mov	r2, #32
   17a90:	bl	112c0 <__strcat_chk@plt>
   17a94:	tst	r4, #4
   17a98:	beq	17ab8 <__assert_fail@plt+0x66b4>
   17a9c:	tst	r4, #3
   17aa0:	bne	17b48 <__assert_fail@plt+0x6744>
   17aa4:	movw	r1, #62800	; 0xf550
   17aa8:	ldr	r0, [pc, #176]	; 17b60 <__assert_fail@plt+0x675c>
   17aac:	movt	r1, #5
   17ab0:	mov	r2, #32
   17ab4:	bl	112c0 <__strcat_chk@plt>
   17ab8:	bics	r3, r4, #7
   17abc:	bne	17ac8 <__assert_fail@plt+0x66c4>
   17ac0:	ldr	r0, [pc, #152]	; 17b60 <__assert_fail@plt+0x675c>
   17ac4:	pop	{r3, r4, r5, pc}
   17ac8:	mov	r2, #5
   17acc:	movw	r1, #62808	; 0xf558
   17ad0:	mov	r0, #0
   17ad4:	movt	r1, #5
   17ad8:	bl	11170 <dcgettext@plt>
   17adc:	mov	r2, #32
   17ae0:	mov	r1, r0
   17ae4:	ldr	r0, [pc, #116]	; 17b60 <__assert_fail@plt+0x675c>
   17ae8:	bl	112c0 <__strcat_chk@plt>
   17aec:	ldr	r0, [pc, #108]	; 17b60 <__assert_fail@plt+0x675c>
   17af0:	pop	{r3, r4, r5, pc}
   17af4:	movw	r2, #62780	; 0xf53c
   17af8:	movt	r2, #5
   17afc:	add	ip, r3, #552	; 0x228
   17b00:	tst	r4, #2
   17b04:	ldm	r2, {r0, r1}
   17b08:	add	r5, r3, #548	; 0x224
   17b0c:	str	r0, [r3, #548]	; 0x224
   17b10:	strh	r1, [ip]
   17b14:	beq	17a94 <__assert_fail@plt+0x6690>
   17b18:	movw	r2, #62788	; 0xf544
   17b1c:	movt	r2, #5
   17b20:	ldrh	r1, [r2]
   17b24:	ldrb	r2, [r2, #2]
   17b28:	strh	r1, [r5, #5]
   17b2c:	strb	r2, [r3, #555]	; 0x22b
   17b30:	b	17a80 <__assert_fail@plt+0x667c>
   17b34:	movw	r1, #62772	; 0xf534
   17b38:	mov	r2, #5
   17b3c:	movt	r1, #5
   17b40:	pop	{r3, r4, r5, lr}
   17b44:	b	11170 <dcgettext@plt>
   17b48:	movw	r1, #62788	; 0xf544
   17b4c:	mov	r2, #32
   17b50:	movt	r1, #5
   17b54:	ldr	r0, [pc, #4]	; 17b60 <__assert_fail@plt+0x675c>
   17b58:	bl	112c0 <__strcat_chk@plt>
   17b5c:	b	17aa4 <__assert_fail@plt+0x66a0>
   17b60:	andeq	r4, r9, ip, ror #6
   17b64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b68:	movw	r7, #16712	; 0x4148
   17b6c:	movt	r7, #9
   17b70:	sub	sp, sp, #60	; 0x3c
   17b74:	movw	r6, #16712	; 0x4148
   17b78:	mov	r4, r0
   17b7c:	ldr	r3, [r7, #460]	; 0x1cc
   17b80:	mov	r5, r1
   17b84:	ldr	sl, [r7, #1604]	; 0x644
   17b88:	movt	r6, #9
   17b8c:	cmp	r3, #0
   17b90:	movne	ip, #8
   17b94:	moveq	ip, #16
   17b98:	strne	ip, [sp, #32]
   17b9c:	movwne	r9, #1011	; 0x3f3
   17ba0:	streq	ip, [sp, #32]
   17ba4:	movweq	r9, #1003	; 0x3eb
   17ba8:	cmp	sl, #0
   17bac:	str	ip, [sp, #36]	; 0x24
   17bb0:	bne	181a0 <__assert_fail@plt+0x6d9c>
   17bb4:	orrs	r0, r4, r5
   17bb8:	addne	r6, r6, #580	; 0x244
   17bbc:	strne	r6, [sp, #52]	; 0x34
   17bc0:	movne	r8, r6
   17bc4:	beq	183a0 <__assert_fail@plt+0x6f9c>
   17bc8:	ldr	ip, [sp, #32]
   17bcc:	movw	r6, #19132	; 0x4abc
   17bd0:	movt	r6, #5
   17bd4:	mov	r0, #0
   17bd8:	add	fp, ip, #4
   17bdc:	ldr	ip, [sp, #52]	; 0x34
   17be0:	mov	r1, #0
   17be4:	movw	r2, #16712	; 0x4148
   17be8:	add	fp, ip, fp
   17bec:	movt	r2, #9
   17bf0:	strd	r0, [sp, #16]
   17bf4:	strd	r0, [sp, #40]	; 0x28
   17bf8:	strd	r0, [sp, #24]
   17bfc:	str	r2, [sp, #48]	; 0x30
   17c00:	rsbs	r2, r4, #0
   17c04:	rsc	r3, r5, #0
   17c08:	cmp	sl, #0
   17c0c:	and	r2, r2, r4
   17c10:	and	r3, r3, r5
   17c14:	bic	r4, r4, r2
   17c18:	bic	r5, r5, r3
   17c1c:	beq	17f14 <__assert_fail@plt+0x6b10>
   17c20:	cmp	r3, #0
   17c24:	cmpeq	r2, #64	; 0x40
   17c28:	beq	1812c <__assert_fail@plt+0x6d28>
   17c2c:	bls	18010 <__assert_fail@plt+0x6c0c>
   17c30:	cmp	r3, #0
   17c34:	cmpeq	r2, #512	; 0x200
   17c38:	beq	18148 <__assert_fail@plt+0x6d44>
   17c3c:	bls	180d0 <__assert_fail@plt+0x6ccc>
   17c40:	cmp	r3, #0
   17c44:	cmpeq	r2, #2048	; 0x800
   17c48:	beq	180fc <__assert_fail@plt+0x6cf8>
   17c4c:	cmp	r3, #0
   17c50:	cmpeq	r2, #-2147483648	; 0x80000000
   17c54:	beq	18124 <__assert_fail@plt+0x6d20>
   17c58:	cmp	r3, #0
   17c5c:	cmpeq	r2, #1024	; 0x400
   17c60:	beq	17ec0 <__assert_fail@plt+0x6abc>
   17c64:	ldrh	r1, [r7, #50]	; 0x32
   17c68:	cmp	r1, #40	; 0x28
   17c6c:	beq	18228 <__assert_fail@plt+0x6e24>
   17c70:	bls	1826c <__assert_fail@plt+0x6e68>
   17c74:	cmp	r1, #62	; 0x3e
   17c78:	beq	18288 <__assert_fail@plt+0x6e84>
   17c7c:	bhi	182d4 <__assert_fail@plt+0x6ed0>
   17c80:	cmp	r1, #43	; 0x2b
   17c84:	beq	18288 <__assert_fail@plt+0x6e84>
   17c88:	cmp	r1, #50	; 0x32
   17c8c:	bne	17cb8 <__assert_fail@plt+0x68b4>
   17c90:	cmp	r3, #0
   17c94:	cmpeq	r2, #268435456	; 0x10000000
   17c98:	beq	182f4 <__assert_fail@plt+0x6ef0>
   17c9c:	cmp	r3, #0
   17ca0:	cmpeq	r2, #536870912	; 0x20000000
   17ca4:	beq	1830c <__assert_fail@plt+0x6f08>
   17ca8:	ldr	ip, [sp, #48]	; 0x30
   17cac:	ldrb	r1, [ip, #7]
   17cb0:	cmp	r1, #13
   17cb4:	beq	18314 <__assert_fail@plt+0x6f10>
   17cb8:	mov	r0, #267386880	; 0xff00000
   17cbc:	mov	r1, #0
   17cc0:	and	r0, r0, r2
   17cc4:	and	r1, r1, r3
   17cc8:	orrs	ip, r0, r1
   17ccc:	beq	1829c <__assert_fail@plt+0x6e98>
   17cd0:	ldrd	r0, [sp, #24]
   17cd4:	orr	r1, r1, r3
   17cd8:	orr	r0, r0, r2
   17cdc:	strd	r0, [sp, #24]
   17ce0:	orrs	r1, r4, r5
   17ce4:	bne	17c00 <__assert_fail@plt+0x67fc>
   17ce8:	cmp	sl, #0
   17cec:	mov	r2, r8
   17cf0:	beq	17eac <__assert_fail@plt+0x6aa8>
   17cf4:	ldrd	r0, [sp, #24]
   17cf8:	orrs	r1, r0, r1
   17cfc:	beq	17d80 <__assert_fail@plt+0x697c>
   17d00:	ldr	ip, [sp, #32]
   17d04:	movw	r3, #65531	; 0xfffb
   17d08:	movt	r3, #65535	; 0xffff
   17d0c:	add	r1, ip, #4
   17d10:	ldr	ip, [sp, #52]	; 0x34
   17d14:	add	r1, ip, r1
   17d18:	ldr	ip, [sp, #36]	; 0x24
   17d1c:	cmp	r8, r1
   17d20:	rsb	r3, ip, r3
   17d24:	add	r9, r3, r9
   17d28:	beq	17d48 <__assert_fail@plt+0x6944>
   17d2c:	cmp	r9, #2
   17d30:	ble	1816c <__assert_fail@plt+0x6d68>
   17d34:	sub	r9, r9, #2
   17d38:	mov	r3, #44	; 0x2c
   17d3c:	strb	r3, [r8], #2
   17d40:	mov	r3, #32
   17d44:	strb	r3, [r2, #1]
   17d48:	ldr	ip, [sp, #36]	; 0x24
   17d4c:	movw	r3, #62896	; 0xf5b0
   17d50:	ldr	r0, [sp, #24]
   17d54:	movt	r3, #5
   17d58:	mov	r1, #1
   17d5c:	mvn	r2, #0
   17d60:	str	ip, [sp]
   17d64:	str	ip, [sp, #4]
   17d68:	str	r0, [sp, #8]
   17d6c:	mov	r0, r8
   17d70:	bl	112cc <__sprintf_chk@plt>
   17d74:	ldr	ip, [sp, #36]	; 0x24
   17d78:	add	r3, ip, #5
   17d7c:	add	r8, r8, r3
   17d80:	ldrd	r0, [sp, #40]	; 0x28
   17d84:	orrs	r1, r0, r1
   17d88:	beq	17e10 <__assert_fail@plt+0x6a0c>
   17d8c:	ldr	ip, [sp, #32]
   17d90:	movw	r3, #65529	; 0xfff9
   17d94:	movt	r3, #65535	; 0xffff
   17d98:	add	r2, ip, #4
   17d9c:	ldr	ip, [sp, #52]	; 0x34
   17da0:	add	r2, ip, r2
   17da4:	ldr	ip, [sp, #36]	; 0x24
   17da8:	cmp	r8, r2
   17dac:	rsb	r3, ip, r3
   17db0:	add	r9, r9, r3
   17db4:	beq	18350 <__assert_fail@plt+0x6f4c>
   17db8:	cmp	r9, #2
   17dbc:	ble	1816c <__assert_fail@plt+0x6d68>
   17dc0:	sub	r9, r9, #2
   17dc4:	mov	r4, r8
   17dc8:	mov	r2, #44	; 0x2c
   17dcc:	mov	r3, #32
   17dd0:	strb	r2, [r4], #2
   17dd4:	strb	r3, [r8, #1]
   17dd8:	ldr	ip, [sp, #36]	; 0x24
   17ddc:	movw	r3, #62908	; 0xf5bc
   17de0:	ldr	r0, [sp, #40]	; 0x28
   17de4:	movt	r3, #5
   17de8:	mov	r1, #1
   17dec:	mvn	r2, #0
   17df0:	str	ip, [sp]
   17df4:	str	ip, [sp, #4]
   17df8:	str	r0, [sp, #8]
   17dfc:	mov	r0, r4
   17e00:	bl	112cc <__sprintf_chk@plt>
   17e04:	ldr	ip, [sp, #36]	; 0x24
   17e08:	add	r8, ip, #7
   17e0c:	add	r8, r4, r8
   17e10:	ldrd	r0, [sp, #16]
   17e14:	orrs	r1, r0, r1
   17e18:	beq	17eac <__assert_fail@plt+0x6aa8>
   17e1c:	ldr	ip, [sp, #32]
   17e20:	movw	r3, #65526	; 0xfff6
   17e24:	movt	r3, #65535	; 0xffff
   17e28:	add	r2, ip, #4
   17e2c:	ldr	ip, [sp, #52]	; 0x34
   17e30:	add	r2, ip, r2
   17e34:	ldr	ip, [sp, #36]	; 0x24
   17e38:	cmp	r8, r2
   17e3c:	rsb	r3, ip, r3
   17e40:	add	r3, r3, r9
   17e44:	beq	18358 <__assert_fail@plt+0x6f54>
   17e48:	cmp	r3, #2
   17e4c:	ble	1816c <__assert_fail@plt+0x6d68>
   17e50:	mov	r4, r8
   17e54:	mov	r2, #44	; 0x2c
   17e58:	mov	r3, #32
   17e5c:	strb	r2, [r4], #2
   17e60:	strb	r3, [r8, #1]
   17e64:	mov	r2, #5
   17e68:	movw	r1, #62924	; 0xf5cc
   17e6c:	mov	r0, #0
   17e70:	movt	r1, #5
   17e74:	bl	11170 <dcgettext@plt>
   17e78:	ldr	ip, [sp, #36]	; 0x24
   17e7c:	ldr	r1, [sp, #16]
   17e80:	mvn	r2, #0
   17e84:	str	ip, [sp]
   17e88:	str	ip, [sp, #4]
   17e8c:	str	r1, [sp, #8]
   17e90:	mov	r1, #1
   17e94:	mov	r3, r0
   17e98:	mov	r0, r4
   17e9c:	bl	112cc <__sprintf_chk@plt>
   17ea0:	ldr	ip, [sp, #36]	; 0x24
   17ea4:	add	r8, ip, #10
   17ea8:	add	r8, r4, r8
   17eac:	mov	r3, #0
   17eb0:	ldr	r0, [pc, #1264]	; 183a8 <__assert_fail@plt+0x6fa4>
   17eb4:	strb	r3, [r8]
   17eb8:	add	sp, sp, #60	; 0x3c
   17ebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ec0:	mov	r3, #9
   17ec4:	cmp	r8, fp
   17ec8:	moveq	r0, fp
   17ecc:	beq	17ef0 <__assert_fail@plt+0x6aec>
   17ed0:	cmp	r9, #11
   17ed4:	ble	1816c <__assert_fail@plt+0x6d68>
   17ed8:	sub	r9, r9, #2
   17edc:	mov	r0, r8
   17ee0:	mov	r2, #44	; 0x2c
   17ee4:	strb	r2, [r0], #2
   17ee8:	mov	r2, #32
   17eec:	strb	r2, [r8, #1]
   17ef0:	add	r3, r6, r3, lsl #3
   17ef4:	ldr	r2, [r3, #372]	; 0x174
   17ef8:	ldr	r1, [r3, #368]	; 0x170
   17efc:	rsb	r9, r2, r9
   17f00:	bl	11164 <stpcpy@plt>
   17f04:	mov	r8, r0
   17f08:	orrs	r1, r4, r5
   17f0c:	bne	17c00 <__assert_fail@plt+0x67fc>
   17f10:	b	17ce8 <__assert_fail@plt+0x68e4>
   17f14:	cmp	r3, #0
   17f18:	cmpeq	r2, #64	; 0x40
   17f1c:	beq	18118 <__assert_fail@plt+0x6d14>
   17f20:	bls	17fd4 <__assert_fail@plt+0x6bd0>
   17f24:	cmp	r3, #0
   17f28:	cmpeq	r2, #512	; 0x200
   17f2c:	beq	18134 <__assert_fail@plt+0x6d30>
   17f30:	bls	180a4 <__assert_fail@plt+0x6ca0>
   17f34:	cmp	r3, #0
   17f38:	cmpeq	r2, #2048	; 0x800
   17f3c:	beq	1810c <__assert_fail@plt+0x6d08>
   17f40:	cmp	r3, #0
   17f44:	cmpeq	r2, #-2147483648	; 0x80000000
   17f48:	moveq	r3, #69	; 0x45
   17f4c:	strbeq	r3, [r8]
   17f50:	beq	17fcc <__assert_fail@plt+0x6bc8>
   17f54:	cmp	r3, #0
   17f58:	cmpeq	r2, #1024	; 0x400
   17f5c:	beq	17fc4 <__assert_fail@plt+0x6bc0>
   17f60:	ldrh	r1, [r7, #50]	; 0x32
   17f64:	sub	r0, r1, #180	; 0xb4
   17f68:	cmp	r1, #62	; 0x3e
   17f6c:	cmpne	r0, #1
   17f70:	bhi	17f88 <__assert_fail@plt+0x6b84>
   17f74:	cmp	r3, #0
   17f78:	cmpeq	r2, #268435456	; 0x10000000
   17f7c:	moveq	r3, #108	; 0x6c
   17f80:	strbeq	r3, [r8]
   17f84:	beq	17fcc <__assert_fail@plt+0x6bc8>
   17f88:	cmp	r1, #40	; 0x28
   17f8c:	beq	18254 <__assert_fail@plt+0x6e50>
   17f90:	mov	r0, #267386880	; 0xff00000
   17f94:	mov	r1, #0
   17f98:	and	r0, r0, r2
   17f9c:	and	r1, r1, r3
   17fa0:	orrs	ip, r0, r1
   17fa4:	beq	181f0 <__assert_fail@plt+0x6dec>
   17fa8:	mvn	r2, #267386880	; 0xff00000
   17fac:	mvn	r3, #0
   17fb0:	mov	r1, #111	; 0x6f
   17fb4:	and	r4, r4, r2
   17fb8:	and	r5, r5, r3
   17fbc:	strb	r1, [r8]
   17fc0:	b	17fcc <__assert_fail@plt+0x6bc8>
   17fc4:	mov	r3, #84	; 0x54
   17fc8:	strb	r3, [r8]
   17fcc:	add	r8, r8, #1
   17fd0:	b	17f08 <__assert_fail@plt+0x6b04>
   17fd4:	cmp	r3, #0
   17fd8:	cmpeq	r2, #4
   17fdc:	beq	18158 <__assert_fail@plt+0x6d54>
   17fe0:	bhi	1804c <__assert_fail@plt+0x6c48>
   17fe4:	cmp	r3, #0
   17fe8:	cmpeq	r2, #1
   17fec:	moveq	r3, #87	; 0x57
   17ff0:	strbeq	r3, [r8]
   17ff4:	beq	17fcc <__assert_fail@plt+0x6bc8>
   17ff8:	cmp	r3, #0
   17ffc:	cmpeq	r2, #2
   18000:	moveq	r3, #65	; 0x41
   18004:	strbeq	r3, [r8]
   18008:	beq	17fcc <__assert_fail@plt+0x6bc8>
   1800c:	b	17f60 <__assert_fail@plt+0x6b5c>
   18010:	cmp	r3, #0
   18014:	cmpeq	r2, #4
   18018:	beq	18150 <__assert_fail@plt+0x6d4c>
   1801c:	bhi	18078 <__assert_fail@plt+0x6c74>
   18020:	cmp	r3, #0
   18024:	cmpeq	r2, #1
   18028:	beq	18164 <__assert_fail@plt+0x6d60>
   1802c:	cmp	r3, #0
   18030:	cmpeq	r2, #2
   18034:	moveq	r3, #1
   18038:	beq	17ec4 <__assert_fail@plt+0x6ac0>
   1803c:	ldrh	r1, [r7, #50]	; 0x32
   18040:	cmp	r1, #40	; 0x28
   18044:	bne	17c70 <__assert_fail@plt+0x686c>
   18048:	b	18228 <__assert_fail@plt+0x6e24>
   1804c:	cmp	r3, #0
   18050:	cmpeq	r2, #16
   18054:	moveq	r3, #77	; 0x4d
   18058:	strbeq	r3, [r8]
   1805c:	beq	17fcc <__assert_fail@plt+0x6bc8>
   18060:	cmp	r3, #0
   18064:	cmpeq	r2, #32
   18068:	moveq	r3, #83	; 0x53
   1806c:	strbeq	r3, [r8]
   18070:	beq	17fcc <__assert_fail@plt+0x6bc8>
   18074:	b	17f60 <__assert_fail@plt+0x6b5c>
   18078:	cmp	r3, #0
   1807c:	cmpeq	r2, #16
   18080:	beq	18140 <__assert_fail@plt+0x6d3c>
   18084:	cmp	r3, #0
   18088:	cmpeq	r2, #32
   1808c:	moveq	r3, #4
   18090:	beq	17ec4 <__assert_fail@plt+0x6ac0>
   18094:	ldrh	r1, [r7, #50]	; 0x32
   18098:	cmp	r1, #40	; 0x28
   1809c:	bne	17c70 <__assert_fail@plt+0x686c>
   180a0:	b	18228 <__assert_fail@plt+0x6e24>
   180a4:	cmp	r3, #0
   180a8:	cmpeq	r2, #128	; 0x80
   180ac:	moveq	r3, #76	; 0x4c
   180b0:	strbeq	r3, [r8]
   180b4:	beq	17fcc <__assert_fail@plt+0x6bc8>
   180b8:	cmp	r3, #0
   180bc:	cmpeq	r2, #256	; 0x100
   180c0:	moveq	r3, #79	; 0x4f
   180c4:	strbeq	r3, [r8]
   180c8:	beq	17fcc <__assert_fail@plt+0x6bc8>
   180cc:	b	17f60 <__assert_fail@plt+0x6b5c>
   180d0:	cmp	r3, #0
   180d4:	cmpeq	r2, #128	; 0x80
   180d8:	beq	18104 <__assert_fail@plt+0x6d00>
   180dc:	cmp	r3, #0
   180e0:	cmpeq	r2, #256	; 0x100
   180e4:	moveq	r3, #7
   180e8:	beq	17ec4 <__assert_fail@plt+0x6ac0>
   180ec:	ldrh	r1, [r7, #50]	; 0x32
   180f0:	cmp	r1, #40	; 0x28
   180f4:	bne	17c70 <__assert_fail@plt+0x686c>
   180f8:	b	18228 <__assert_fail@plt+0x6e24>
   180fc:	mov	r3, #20
   18100:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18104:	mov	r3, #6
   18108:	b	17ec4 <__assert_fail@plt+0x6ac0>
   1810c:	mov	r3, #67	; 0x43
   18110:	strb	r3, [r8]
   18114:	b	17fcc <__assert_fail@plt+0x6bc8>
   18118:	mov	r1, #73	; 0x49
   1811c:	strb	r1, [r8]
   18120:	b	17fcc <__assert_fail@plt+0x6bc8>
   18124:	mov	r3, #18
   18128:	b	17ec4 <__assert_fail@plt+0x6ac0>
   1812c:	mov	r3, #5
   18130:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18134:	mov	r3, #71	; 0x47
   18138:	strb	r3, [r8]
   1813c:	b	17fcc <__assert_fail@plt+0x6bc8>
   18140:	mov	r3, #3
   18144:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18148:	mov	r3, #8
   1814c:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18150:	mov	r3, #2
   18154:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18158:	mov	r3, #88	; 0x58
   1815c:	strb	r3, [r8]
   18160:	b	17fcc <__assert_fail@plt+0x6bc8>
   18164:	mov	r3, #0
   18168:	b	17ec4 <__assert_fail@plt+0x6ac0>
   1816c:	mov	r2, #5
   18170:	movw	r1, #62832	; 0xf570
   18174:	mov	r0, #0
   18178:	movt	r1, #5
   1817c:	bl	11170 <dcgettext@plt>
   18180:	bl	4b9ec <warn@@Base>
   18184:	movw	r1, #61836	; 0xf18c
   18188:	mov	r0, #0
   1818c:	movt	r1, #5
   18190:	mov	r2, #5
   18194:	add	sp, sp, #60	; 0x3c
   18198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1819c:	b	11170 <dcgettext@plt>
   181a0:	add	ip, r6, #580	; 0x244
   181a4:	str	ip, [sp, #52]	; 0x34
   181a8:	ldr	ip, [sp, #36]	; 0x24
   181ac:	movw	r3, #62820	; 0xf564
   181b0:	str	r0, [sp, #8]
   181b4:	movt	r3, #5
   181b8:	ldr	r0, [sp, #52]	; 0x34
   181bc:	mov	r1, #1
   181c0:	str	ip, [sp]
   181c4:	mov	r2, #1024	; 0x400
   181c8:	str	ip, [sp, #4]
   181cc:	bl	112cc <__sprintf_chk@plt>
   181d0:	ldr	ip, [sp, #32]
   181d4:	orrs	r0, r4, r5
   181d8:	ldr	sl, [r6, #1604]	; 0x644
   181dc:	add	r8, ip, #4
   181e0:	ldr	ip, [sp, #52]	; 0x34
   181e4:	add	r8, ip, r8
   181e8:	bne	17bc8 <__assert_fail@plt+0x67c4>
   181ec:	b	17eac <__assert_fail@plt+0x6aa8>
   181f0:	mov	r1, #0
   181f4:	mov	r0, #-268435456	; 0xf0000000
   181f8:	and	r3, r3, r1
   181fc:	and	r2, r2, r0
   18200:	orrs	r0, r2, r3
   18204:	mvnne	r2, #-268435456	; 0xf0000000
   18208:	movne	r3, #0
   1820c:	movne	r1, #112	; 0x70
   18210:	moveq	r3, #120	; 0x78
   18214:	andne	r4, r4, r2
   18218:	andne	r5, r5, r3
   1821c:	strbne	r1, [r8]
   18220:	strbeq	r3, [r8]
   18224:	b	17fcc <__assert_fail@plt+0x6bc8>
   18228:	cmp	r3, #0
   1822c:	cmpeq	r2, #536870912	; 0x20000000
   18230:	beq	18304 <__assert_fail@plt+0x6f00>
   18234:	cmp	r3, #0
   18238:	cmpeq	r2, #-2147483648	; 0x80000000
   1823c:	beq	182fc <__assert_fail@plt+0x6ef8>
   18240:	cmp	r3, #0
   18244:	cmpeq	r2, #268435456	; 0x10000000
   18248:	moveq	r3, #21
   1824c:	bne	17cb8 <__assert_fail@plt+0x68b4>
   18250:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18254:	cmp	r3, #0
   18258:	cmpeq	r2, #536870912	; 0x20000000
   1825c:	moveq	r3, #121	; 0x79
   18260:	strbeq	r3, [r8]
   18264:	bne	17f90 <__assert_fail@plt+0x6b8c>
   18268:	b	17fcc <__assert_fail@plt+0x6bc8>
   1826c:	cmp	r1, #6
   18270:	beq	18288 <__assert_fail@plt+0x6e84>
   18274:	bls	182e4 <__assert_fail@plt+0x6ee0>
   18278:	cmp	r1, #11
   1827c:	beq	18288 <__assert_fail@plt+0x6e84>
   18280:	cmp	r1, #18
   18284:	bne	17cb8 <__assert_fail@plt+0x68b4>
   18288:	cmp	r3, #0
   1828c:	cmpeq	r2, #1073741824	; 0x40000000
   18290:	bne	17cb8 <__assert_fail@plt+0x68b4>
   18294:	mov	r3, #19
   18298:	b	17ec4 <__assert_fail@plt+0x6ac0>
   1829c:	mov	r0, #-268435456	; 0xf0000000
   182a0:	mov	r1, #0
   182a4:	and	r0, r0, r2
   182a8:	and	r1, r1, r3
   182ac:	orrs	ip, r0, r1
   182b0:	ldrdne	r0, [sp, #40]	; 0x28
   182b4:	ldrdeq	r0, [sp, #16]
   182b8:	orrne	r0, r0, r2
   182bc:	orrne	r1, r1, r3
   182c0:	orreq	r0, r0, r2
   182c4:	orreq	r1, r1, r3
   182c8:	strdne	r0, [sp, #40]	; 0x28
   182cc:	strdeq	r0, [sp, #16]
   182d0:	b	17f08 <__assert_fail@plt+0x6b04>
   182d4:	sub	r1, r1, #180	; 0xb4
   182d8:	cmp	r1, #1
   182dc:	bhi	17cb8 <__assert_fail@plt+0x68b4>
   182e0:	b	18288 <__assert_fail@plt+0x6e84>
   182e4:	sub	r1, r1, #2
   182e8:	cmp	r1, #1
   182ec:	bhi	17cb8 <__assert_fail@plt+0x68b4>
   182f0:	b	18288 <__assert_fail@plt+0x6e84>
   182f4:	mov	r3, #10
   182f8:	b	17ec4 <__assert_fail@plt+0x6ac0>
   182fc:	mov	r3, #23
   18300:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18304:	mov	r3, #22
   18308:	b	17ec4 <__assert_fail@plt+0x6ac0>
   1830c:	mov	r3, #11
   18310:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18314:	cmp	r3, #4
   18318:	cmpeq	r2, #0
   1831c:	beq	18380 <__assert_fail@plt+0x6f7c>
   18320:	bls	18360 <__assert_fail@plt+0x6f5c>
   18324:	cmp	r3, #16
   18328:	cmpeq	r2, #0
   1832c:	beq	18390 <__assert_fail@plt+0x6f8c>
   18330:	cmp	r3, #32
   18334:	cmpeq	r2, #0
   18338:	beq	18388 <__assert_fail@plt+0x6f84>
   1833c:	cmp	r3, #8
   18340:	cmpeq	r2, #0
   18344:	bne	17cb8 <__assert_fail@plt+0x68b4>
   18348:	mov	r3, #15
   1834c:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18350:	mov	r4, r8
   18354:	b	17dd8 <__assert_fail@plt+0x69d4>
   18358:	mov	r4, r8
   1835c:	b	17e64 <__assert_fail@plt+0x6a60>
   18360:	cmp	r3, #1
   18364:	cmpeq	r2, #0
   18368:	beq	18398 <__assert_fail@plt+0x6f94>
   1836c:	cmp	r3, #2
   18370:	cmpeq	r2, #0
   18374:	moveq	r3, #13
   18378:	beq	17ec4 <__assert_fail@plt+0x6ac0>
   1837c:	b	17cb8 <__assert_fail@plt+0x68b4>
   18380:	mov	r3, #14
   18384:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18388:	mov	r3, #17
   1838c:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18390:	mov	r3, #16
   18394:	b	17ec4 <__assert_fail@plt+0x6ac0>
   18398:	mov	r3, #12
   1839c:	b	17ec4 <__assert_fail@plt+0x6ac0>
   183a0:	add	r8, r6, #580	; 0x244
   183a4:	b	17eac <__assert_fail@plt+0x6aa8>
   183a8:	andeq	r4, r9, ip, lsl #7
   183ac:	push	{r4, lr}
   183b0:	movw	r4, #16680	; 0x4128
   183b4:	movt	r4, #9
   183b8:	mov	r2, #49152	; 0xc000
   183bc:	movt	r2, #46100	; 0xb414
   183c0:	sub	sp, sp, #24
   183c4:	ldr	ip, [r4]
   183c8:	adds	r0, r0, r2
   183cc:	movw	r3, #27288	; 0x6a98
   183d0:	movt	r3, #65411	; 0xff83
   183d4:	adc	r1, r1, r3
   183d8:	movw	r2, #38528	; 0x9680
   183dc:	mov	r3, #0
   183e0:	movt	r2, #152	; 0x98
   183e4:	str	ip, [sp, #20]
   183e8:	bl	529b4 <zcfree@@Base+0x1384>
   183ec:	add	r3, sp, #24
   183f0:	str	r0, [r3, #-8]!
   183f4:	mov	r0, r3
   183f8:	bl	11320 <gmtime@plt>
   183fc:	movw	r1, #62944	; 0xf5e0
   18400:	movt	r1, #5
   18404:	ldr	lr, [r0, #12]
   18408:	mov	ip, r0
   1840c:	ldr	r2, [r0, #20]
   18410:	ldr	r3, [r0, #16]
   18414:	mov	r0, #1
   18418:	str	lr, [sp]
   1841c:	add	r2, r2, #1888	; 0x760
   18420:	ldr	lr, [ip, #8]
   18424:	add	r2, r2, #12
   18428:	add	r3, r3, r0
   1842c:	str	lr, [sp, #4]
   18430:	ldr	lr, [ip, #4]
   18434:	str	lr, [sp, #8]
   18438:	ldr	ip, [ip]
   1843c:	str	ip, [sp, #12]
   18440:	bl	1132c <__printf_chk@plt>
   18444:	ldr	r2, [sp, #20]
   18448:	ldr	r3, [r4]
   1844c:	cmp	r2, r3
   18450:	bne	1845c <__assert_fail@plt+0x7058>
   18454:	add	sp, sp, #24
   18458:	pop	{r4, pc}
   1845c:	bl	1117c <__stack_chk_fail@plt>
   18460:	push	{r4, r5, r6, lr}
   18464:	subs	r4, r0, #0
   18468:	popeq	{r4, r5, r6, pc}
   1846c:	movw	r6, #16696	; 0x4138
   18470:	ldr	r5, [pc, #76]	; 184c4 <__assert_fail@plt+0x70c0>
   18474:	movt	r6, #9
   18478:	b	18488 <__assert_fail@plt+0x7084>
   1847c:	lsrs	r4, r4, #1
   18480:	sub	r5, r5, #4
   18484:	beq	184c0 <__assert_fail@plt+0x70bc>
   18488:	tst	r4, #1
   1848c:	beq	1847c <__assert_fail@plt+0x7078>
   18490:	ldr	r1, [r6]
   18494:	ldr	r0, [r5, #48]	; 0x30
   18498:	bl	113d4 <fputs@plt>
   1849c:	mov	r1, #1
   184a0:	cmp	r4, r1
   184a4:	movw	r0, #556	; 0x22c
   184a8:	mov	r2, #2
   184ac:	movt	r0, #6
   184b0:	popeq	{r4, r5, r6, pc}
   184b4:	ldr	r3, [r6]
   184b8:	bl	111b8 <fwrite@plt>
   184bc:	b	1847c <__assert_fail@plt+0x7078>
   184c0:	pop	{r4, r5, r6, pc}
   184c4:	andeq	r4, r5, ip, ror #25
   184c8:	push	{r4, lr}
   184cc:	subs	r4, r0, #0
   184d0:	beq	184fc <__assert_fail@plt+0x70f8>
   184d4:	tst	r4, #1
   184d8:	bne	18514 <__assert_fail@plt+0x7110>
   184dc:	tst	r4, #2
   184e0:	bne	18568 <__assert_fail@plt+0x7164>
   184e4:	tst	r4, #4
   184e8:	moveq	r3, #1
   184ec:	beq	1854c <__assert_fail@plt+0x7148>
   184f0:	movw	r2, #25084	; 0x61fc
   184f4:	movt	r2, #7
   184f8:	b	185b4 <__assert_fail@plt+0x71b0>
   184fc:	movw	r3, #16696	; 0x4138
   18500:	movt	r3, #9
   18504:	mov	r0, #48	; 0x30
   18508:	ldr	r1, [r3]
   1850c:	pop	{r4, lr}
   18510:	b	11380 <fputc@plt>
   18514:	movw	r3, #16696	; 0x4138
   18518:	movt	r3, #9
   1851c:	mov	r2, #4
   18520:	movw	r0, #62980	; 0xf604
   18524:	mov	r1, #1
   18528:	ldr	r3, [r3]
   1852c:	movt	r0, #5
   18530:	bl	111b8 <fwrite@plt>
   18534:	tst	r4, #2
   18538:	movwne	r2, #62976	; 0xf600
   1853c:	movtne	r2, #5
   18540:	bne	18570 <__assert_fail@plt+0x716c>
   18544:	ands	r3, r4, #4
   18548:	bne	185ac <__assert_fail@plt+0x71a8>
   1854c:	tst	r4, #8
   18550:	beq	18590 <__assert_fail@plt+0x718c>
   18554:	cmp	r3, #0
   18558:	beq	185cc <__assert_fail@plt+0x71c8>
   1855c:	movw	r2, #25084	; 0x61fc
   18560:	movt	r2, #7
   18564:	b	185d4 <__assert_fail@plt+0x71d0>
   18568:	movw	r2, #25084	; 0x61fc
   1856c:	movt	r2, #7
   18570:	movw	r1, #62988	; 0xf60c
   18574:	mov	r0, #1
   18578:	movt	r1, #5
   1857c:	bl	1132c <__printf_chk@plt>
   18580:	tst	r4, #4
   18584:	bne	185ac <__assert_fail@plt+0x71a8>
   18588:	ands	r3, r4, #8
   1858c:	bne	185cc <__assert_fail@plt+0x71c8>
   18590:	tst	r4, #16
   18594:	popeq	{r4, pc}
   18598:	cmp	r3, #0
   1859c:	beq	185ec <__assert_fail@plt+0x71e8>
   185a0:	movw	r2, #25084	; 0x61fc
   185a4:	movt	r2, #7
   185a8:	b	185f4 <__assert_fail@plt+0x71f0>
   185ac:	movw	r2, #62976	; 0xf600
   185b0:	movt	r2, #5
   185b4:	movw	r1, #62996	; 0xf614
   185b8:	mov	r0, #1
   185bc:	movt	r1, #5
   185c0:	bl	1132c <__printf_chk@plt>
   185c4:	tst	r4, #8
   185c8:	beq	18608 <__assert_fail@plt+0x7204>
   185cc:	movw	r2, #62976	; 0xf600
   185d0:	movt	r2, #5
   185d4:	movw	r1, #63004	; 0xf61c
   185d8:	mov	r0, #1
   185dc:	movt	r1, #5
   185e0:	bl	1132c <__printf_chk@plt>
   185e4:	tst	r4, #16
   185e8:	popeq	{r4, pc}
   185ec:	movw	r2, #62976	; 0xf600
   185f0:	movt	r2, #5
   185f4:	movw	r1, #63012	; 0xf624
   185f8:	mov	r0, #1
   185fc:	movt	r1, #5
   18600:	pop	{r4, lr}
   18604:	b	1132c <__printf_chk@plt>
   18608:	tst	r4, #16
   1860c:	bne	185ec <__assert_fail@plt+0x71e8>
   18610:	pop	{r4, pc}
   18614:	movw	r3, #16712	; 0x4148
   18618:	movt	r3, #9
   1861c:	ldrh	r3, [r3, #50]	; 0x32
   18620:	cmp	r3, #8
   18624:	beq	18630 <__assert_fail@plt+0x722c>
   18628:	cmp	r3, #43	; 0x2b
   1862c:	bne	18638 <__assert_fail@plt+0x7234>
   18630:	uxtb	r0, r0
   18634:	bx	lr
   18638:	bx	lr
   1863c:	movw	r3, #16712	; 0x4148
   18640:	movt	r3, #9
   18644:	push	{r4, r5, r6, lr}
   18648:	movw	r6, #26492	; 0x677c
   1864c:	ldr	r3, [r3, #460]	; 0x1cc
   18650:	movt	r6, #9
   18654:	mov	r4, r0
   18658:	mov	r5, r1
   1865c:	cmp	r3, #0
   18660:	mov	r0, r1
   18664:	ldr	r3, [r6]
   18668:	mov	r1, #4
   1866c:	bne	186ac <__assert_fail@plt+0x72a8>
   18670:	blx	r3
   18674:	ldr	r3, [r6]
   18678:	mov	r1, #8
   1867c:	str	r0, [r4]
   18680:	add	r0, r5, r1
   18684:	blx	r3
   18688:	ldr	r3, [r6]
   1868c:	strd	r0, [r4, #8]
   18690:	add	r0, r5, #16
   18694:	mov	r1, #8
   18698:	blx	r3
   1869c:	mov	r3, #24
   186a0:	strd	r0, [r4, #16]
   186a4:	mov	r0, r3
   186a8:	pop	{r4, r5, r6, pc}
   186ac:	blx	r3
   186b0:	ldr	r3, [r6]
   186b4:	mov	r1, #4
   186b8:	str	r0, [r4]
   186bc:	add	r0, r5, r1
   186c0:	blx	r3
   186c4:	ldr	r3, [r6]
   186c8:	strd	r0, [r4, #8]
   186cc:	add	r0, r5, #8
   186d0:	mov	r1, #4
   186d4:	blx	r3
   186d8:	mov	r3, #12
   186dc:	strd	r0, [r4, #16]
   186e0:	mov	r0, r3
   186e4:	pop	{r4, r5, r6, pc}
   186e8:	push	{r4, lr}
   186ec:	mov	r4, r0
   186f0:	sub	sp, sp, #8
   186f4:	cmp	r0, #9
   186f8:	ldrls	pc, [pc, r0, lsl #2]
   186fc:	b	187b8 <__assert_fail@plt+0x73b4>
   18700:	andeq	r8, r1, r8, lsr #15
   18704:	andeq	r8, r1, r8, lsr #14
   18708:	andeq	r8, r1, r8, lsr r7
   1870c:	andeq	r8, r1, r8, asr #14
   18710:	andeq	r8, r1, r8, asr r7
   18714:	andeq	r8, r1, r8, ror #14
   18718:	andeq	r8, r1, r8, ror r7
   1871c:			; <UNDEFINED> instruction: 0x000187b8
   18720:	andeq	r8, r1, r8, lsl #15
   18724:	muleq	r1, r8, r7
   18728:	movw	r0, #63084	; 0xf66c
   1872c:	movt	r0, #5
   18730:	add	sp, sp, #8
   18734:	pop	{r4, pc}
   18738:	movw	r0, #63092	; 0xf674
   1873c:	movt	r0, #5
   18740:	add	sp, sp, #8
   18744:	pop	{r4, pc}
   18748:	movw	r0, #63100	; 0xf67c
   1874c:	movt	r0, #5
   18750:	add	sp, sp, #8
   18754:	pop	{r4, pc}
   18758:	movw	r0, #63108	; 0xf684
   1875c:	movt	r0, #5
   18760:	add	sp, sp, #8
   18764:	pop	{r4, pc}
   18768:	movw	r0, #63116	; 0xf68c
   1876c:	movt	r0, #5
   18770:	add	sp, sp, #8
   18774:	pop	{r4, pc}
   18778:	movw	r0, #50656	; 0xc5e0
   1877c:	movt	r0, #6
   18780:	add	sp, sp, #8
   18784:	pop	{r4, pc}
   18788:	movw	r0, #63124	; 0xf694
   1878c:	movt	r0, #5
   18790:	add	sp, sp, #8
   18794:	pop	{r4, pc}
   18798:	movw	r0, #63132	; 0xf69c
   1879c:	movt	r0, #5
   187a0:	add	sp, sp, #8
   187a4:	pop	{r4, pc}
   187a8:	movw	r0, #63076	; 0xf664
   187ac:	movt	r0, #5
   187b0:	add	sp, sp, #8
   187b4:	pop	{r4, pc}
   187b8:	sub	r3, r0, #13
   187bc:	cmp	r3, #2
   187c0:	bhi	18828 <__assert_fail@plt+0x7424>
   187c4:	movw	r3, #16712	; 0x4148
   187c8:	movt	r3, #9
   187cc:	ldrh	r3, [r3, #50]	; 0x32
   187d0:	cmp	r3, #40	; 0x28
   187d4:	beq	18884 <__assert_fail@plt+0x7480>
   187d8:	cmp	r3, #43	; 0x2b
   187dc:	beq	188a8 <__assert_fail@plt+0x74a4>
   187e0:	cmp	r3, #15
   187e4:	bne	187f0 <__assert_fail@plt+0x73ec>
   187e8:	cmp	r0, #13
   187ec:	beq	188d8 <__assert_fail@plt+0x74d4>
   187f0:	movw	r1, #63140	; 0xf6a4
   187f4:	movt	r1, #5
   187f8:	mov	r0, #0
   187fc:	mov	r2, #5
   18800:	bl	11170 <dcgettext@plt>
   18804:	mov	r1, #32
   18808:	str	r4, [sp, #4]
   1880c:	mov	r3, r1
   18810:	mov	r2, #1
   18814:	str	r0, [sp]
   18818:	ldr	r0, [pc, #208]	; 188f0 <__assert_fail@plt+0x74ec>
   1881c:	bl	113f8 <__snprintf_chk@plt>
   18820:	ldr	r0, [pc, #200]	; 188f0 <__assert_fail@plt+0x74ec>
   18824:	b	18730 <__assert_fail@plt+0x732c>
   18828:	sub	r3, r0, #10
   1882c:	cmp	r3, #2
   18830:	bhi	18874 <__assert_fail@plt+0x7470>
   18834:	movw	r3, #16712	; 0x4148
   18838:	movt	r3, #9
   1883c:	ldrh	r2, [r3, #50]	; 0x32
   18840:	cmp	r2, #15
   18844:	beq	188bc <__assert_fail@plt+0x74b8>
   18848:	cmp	r4, #10
   1884c:	bne	18898 <__assert_fail@plt+0x7494>
   18850:	ldrb	r3, [r3, #7]
   18854:	cmp	r3, #9
   18858:	cmpne	r3, #3
   1885c:	beq	18868 <__assert_fail@plt+0x7464>
   18860:	cmp	r3, #0
   18864:	bne	18898 <__assert_fail@plt+0x7494>
   18868:	movw	r0, #63068	; 0xf65c
   1886c:	movt	r0, #5
   18870:	b	18730 <__assert_fail@plt+0x732c>
   18874:	movw	r1, #63188	; 0xf6d4
   18878:	mov	r0, #0
   1887c:	movt	r1, #5
   18880:	b	187fc <__assert_fail@plt+0x73f8>
   18884:	cmp	r0, #13
   18888:	bne	187f0 <__assert_fail@plt+0x73ec>
   1888c:	movw	r0, #63020	; 0xf62c
   18890:	movt	r0, #5
   18894:	b	18730 <__assert_fail@plt+0x732c>
   18898:	movw	r1, #63168	; 0xf6c0
   1889c:	mov	r0, #0
   188a0:	movt	r1, #5
   188a4:	b	187fc <__assert_fail@plt+0x73f8>
   188a8:	cmp	r0, #13
   188ac:	bne	187f0 <__assert_fail@plt+0x73ec>
   188b0:	movw	r0, #43504	; 0xa9f0
   188b4:	movt	r0, #6
   188b8:	b	18730 <__assert_fail@plt+0x732c>
   188bc:	cmp	r0, #11
   188c0:	beq	188e4 <__assert_fail@plt+0x74e0>
   188c4:	cmp	r0, #12
   188c8:	bne	18848 <__assert_fail@plt+0x7444>
   188cc:	movw	r0, #63060	; 0xf654
   188d0:	movt	r0, #5
   188d4:	b	18730 <__assert_fail@plt+0x732c>
   188d8:	movw	r0, #63032	; 0xf638
   188dc:	movt	r0, #5
   188e0:	b	18730 <__assert_fail@plt+0x732c>
   188e4:	movw	r0, #63048	; 0xf648
   188e8:	movt	r0, #5
   188ec:	b	18730 <__assert_fail@plt+0x732c>
   188f0:	muleq	r9, r0, r7
   188f4:	push	{r4, lr}
   188f8:	mov	r4, r0
   188fc:	sub	sp, sp, #8
   18900:	cmp	r0, #16
   18904:	ldrls	pc, [pc, r0, lsl #2]
   18908:	b	18a08 <__assert_fail@plt+0x7604>
   1890c:	strdeq	r8, [r1], -ip
   18910:	andeq	r8, r1, r0, asr r9
   18914:	andeq	r8, r1, r0, ror #18
   18918:	andeq	r8, r1, ip, ror #18
   1891c:	andeq	r8, r1, r8, lsl #20
   18920:	andeq	r8, r1, r8, lsl #20
   18924:	andeq	r8, r1, r8, ror r9
   18928:	andeq	r8, r1, r4, lsl #19
   1892c:	muleq	r1, r0, r9
   18930:	muleq	r1, ip, r9
   18934:	andeq	r8, r1, r8, lsr #19
   18938:			; <UNDEFINED> instruction: 0x000189b4
   1893c:	andeq	r8, r1, r0, asr #19
   18940:	andeq	r8, r1, ip, asr #19
   18944:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18948:	andeq	r8, r1, r4, ror #19
   1894c:	strdeq	r8, [r1], -r0
   18950:	movw	r0, #63232	; 0xf700
   18954:	movt	r0, #5
   18958:	add	sp, sp, #8
   1895c:	pop	{r4, pc}
   18960:	movw	r0, #63248	; 0xf710
   18964:	movt	r0, #5
   18968:	b	18958 <__assert_fail@plt+0x7554>
   1896c:	movw	r0, #63264	; 0xf720
   18970:	movt	r0, #5
   18974:	b	18958 <__assert_fail@plt+0x7554>
   18978:	movw	r0, #63276	; 0xf72c
   1897c:	movt	r0, #5
   18980:	b	18958 <__assert_fail@plt+0x7554>
   18984:	movw	r0, #63292	; 0xf73c
   18988:	movt	r0, #5
   1898c:	b	18958 <__assert_fail@plt+0x7554>
   18990:	movw	r0, #63304	; 0xf748
   18994:	movt	r0, #5
   18998:	b	18958 <__assert_fail@plt+0x7554>
   1899c:	movw	r0, #63316	; 0xf754
   189a0:	movt	r0, #5
   189a4:	b	18958 <__assert_fail@plt+0x7554>
   189a8:	movw	r0, #63332	; 0xf764
   189ac:	movt	r0, #5
   189b0:	b	18958 <__assert_fail@plt+0x7554>
   189b4:	movw	r0, #63348	; 0xf774
   189b8:	movt	r0, #5
   189bc:	b	18958 <__assert_fail@plt+0x7554>
   189c0:	movw	r0, #63368	; 0xf788
   189c4:	movt	r0, #5
   189c8:	b	18958 <__assert_fail@plt+0x7554>
   189cc:	movw	r0, #63384	; 0xf798
   189d0:	movt	r0, #5
   189d4:	b	18958 <__assert_fail@plt+0x7554>
   189d8:	movw	r0, #63400	; 0xf7a8
   189dc:	movt	r0, #5
   189e0:	b	18958 <__assert_fail@plt+0x7554>
   189e4:	movw	r0, #63424	; 0xf7c0
   189e8:	movt	r0, #5
   189ec:	b	18958 <__assert_fail@plt+0x7554>
   189f0:	movw	r0, #63432	; 0xf7c8
   189f4:	movt	r0, #5
   189f8:	b	18958 <__assert_fail@plt+0x7554>
   189fc:	movw	r0, #63216	; 0xf6f0
   18a00:	movt	r0, #5
   18a04:	b	18958 <__assert_fail@plt+0x7554>
   18a08:	cmp	r0, #63	; 0x3f
   18a0c:	bls	18a38 <__assert_fail@plt+0x7634>
   18a10:	movw	r3, #16712	; 0x4148
   18a14:	movt	r3, #9
   18a18:	ldrh	r3, [r3, #50]	; 0x32
   18a1c:	cmp	r3, #140	; 0x8c
   18a20:	beq	18aa8 <__assert_fail@plt+0x76a4>
   18a24:	bhi	18a70 <__assert_fail@plt+0x766c>
   18a28:	cmp	r3, #40	; 0x28
   18a2c:	bne	18ac4 <__assert_fail@plt+0x76c0>
   18a30:	cmp	r0, #97	; 0x61
   18a34:	beq	18ad0 <__assert_fail@plt+0x76cc>
   18a38:	mov	r2, #5
   18a3c:	movw	r1, #63476	; 0xf7f4
   18a40:	mov	r0, #0
   18a44:	movt	r1, #5
   18a48:	bl	11170 <dcgettext@plt>
   18a4c:	mov	r1, #32
   18a50:	str	r4, [sp, #4]
   18a54:	mov	r3, r1
   18a58:	mov	r2, #1
   18a5c:	str	r0, [sp]
   18a60:	ldr	r0, [pc, #132]	; 18aec <__assert_fail@plt+0x76e8>
   18a64:	bl	113f8 <__snprintf_chk@plt>
   18a68:	ldr	r0, [pc, #124]	; 18aec <__assert_fail@plt+0x76e8>
   18a6c:	b	18958 <__assert_fail@plt+0x7554>
   18a70:	cmp	r3, #221	; 0xdd
   18a74:	beq	18a84 <__assert_fail@plt+0x7680>
   18a78:	movw	r2, #4185	; 0x1059
   18a7c:	cmp	r3, r2
   18a80:	bne	18a38 <__assert_fail@plt+0x7634>
   18a84:	cmp	r4, #255	; 0xff
   18a88:	movweq	r1, #63440	; 0xf7d0
   18a8c:	moveq	r0, #0
   18a90:	movteq	r1, #5
   18a94:	bne	18a38 <__assert_fail@plt+0x7634>
   18a98:	mov	r2, #5
   18a9c:	add	sp, sp, #8
   18aa0:	pop	{r4, lr}
   18aa4:	b	11170 <dcgettext@plt>
   18aa8:	cmp	r0, #64	; 0x40
   18aac:	beq	18adc <__assert_fail@plt+0x76d8>
   18ab0:	cmp	r0, #65	; 0x41
   18ab4:	movweq	r0, #63204	; 0xf6e4
   18ab8:	movteq	r0, #5
   18abc:	beq	18958 <__assert_fail@plt+0x7554>
   18ac0:	b	18a38 <__assert_fail@plt+0x7634>
   18ac4:	cmp	r3, #105	; 0x69
   18ac8:	bne	18a38 <__assert_fail@plt+0x7634>
   18acc:	b	18a84 <__assert_fail@plt+0x7680>
   18ad0:	movw	r0, #51356	; 0xc89c
   18ad4:	movt	r0, #5
   18ad8:	b	18958 <__assert_fail@plt+0x7554>
   18adc:	movw	r1, #63456	; 0xf7e0
   18ae0:	mov	r0, #0
   18ae4:	movt	r1, #5
   18ae8:	b	18a98 <__assert_fail@plt+0x7694>
   18aec:			; <UNDEFINED> instruction: 0x000947b0
   18af0:	and	r3, r0, #-16777216	; 0xff000000
   18af4:	cmp	r3, #2013265920	; 0x78000000
   18af8:	beq	18b88 <__assert_fail@plt+0x7784>
   18afc:	cmp	r0, #1610612740	; 0x60000004
   18b00:	beq	18ba8 <__assert_fail@plt+0x77a4>
   18b04:	bls	18b30 <__assert_fail@plt+0x772c>
   18b08:	cmp	r0, #1879048192	; 0x70000000
   18b0c:	beq	18b9c <__assert_fail@plt+0x7798>
   18b10:	bls	18b58 <__assert_fail@plt+0x7754>
   18b14:	cmp	r0, #1879048193	; 0x70000001
   18b18:	beq	18b90 <__assert_fail@plt+0x778c>
   18b1c:	cmp	r0, #2030043136	; 0x79000000
   18b20:	bne	18bb4 <__assert_fail@plt+0x77b0>
   18b24:	movw	r0, #63520	; 0xf820
   18b28:	movt	r0, #5
   18b2c:	bx	lr
   18b30:	cmp	r0, #1610612737	; 0x60000001
   18b34:	beq	18bc8 <__assert_fail@plt+0x77c4>
   18b38:	bls	18b74 <__assert_fail@plt+0x7770>
   18b3c:	cmp	r0, #1610612738	; 0x60000002
   18b40:	beq	18bbc <__assert_fail@plt+0x77b8>
   18b44:	cmp	r0, #1610612739	; 0x60000003
   18b48:	bne	18bb4 <__assert_fail@plt+0x77b0>
   18b4c:	movw	r0, #63584	; 0xf860
   18b50:	movt	r0, #5
   18b54:	bx	lr
   18b58:	cmp	r0, #1610612741	; 0x60000005
   18b5c:	beq	18bd4 <__assert_fail@plt+0x77d0>
   18b60:	cmp	r0, #1610612742	; 0x60000006
   18b64:	bne	18bb4 <__assert_fail@plt+0x77b0>
   18b68:	movw	r0, #63636	; 0xf894
   18b6c:	movt	r0, #5
   18b70:	bx	lr
   18b74:	cmp	r0, #1610612736	; 0x60000000
   18b78:	bne	18bb4 <__assert_fail@plt+0x77b0>
   18b7c:	movw	r0, #63540	; 0xf834
   18b80:	movt	r0, #5
   18b84:	bx	lr
   18b88:	ubfx	r0, r0, #16, #8
   18b8c:	b	188f4 <__assert_fail@plt+0x74f0>
   18b90:	movw	r0, #63504	; 0xf810
   18b94:	movt	r0, #5
   18b98:	bx	lr
   18b9c:	movw	r0, #63492	; 0xf804
   18ba0:	movt	r0, #5
   18ba4:	bx	lr
   18ba8:	movw	r0, #63600	; 0xf870
   18bac:	movt	r0, #5
   18bb0:	bx	lr
   18bb4:	mov	r0, #0
   18bb8:	bx	lr
   18bbc:	movw	r0, #63572	; 0xf854
   18bc0:	movt	r0, #5
   18bc4:	bx	lr
   18bc8:	movw	r0, #63552	; 0xf840
   18bcc:	movt	r0, #5
   18bd0:	bx	lr
   18bd4:	movw	r0, #63616	; 0xf880
   18bd8:	movt	r0, #5
   18bdc:	bx	lr
   18be0:	cmp	r0, #14
   18be4:	push	{r4, r5, r6, lr}
   18be8:	mov	r4, r0
   18bec:	sub	sp, sp, #8
   18bf0:	beq	18e20 <__assert_fail@plt+0x7a1c>
   18bf4:	bls	18c44 <__assert_fail@plt+0x7840>
   18bf8:	cmn	r0, #-1879048183	; 0x90000009
   18bfc:	beq	18de4 <__assert_fail@plt+0x79e0>
   18c00:	bhi	18c84 <__assert_fail@plt+0x7880>
   18c04:	cmp	r0, #17
   18c08:	beq	18df0 <__assert_fail@plt+0x79ec>
   18c0c:	bls	18d50 <__assert_fail@plt+0x794c>
   18c10:	mvn	r3, #-1879048177	; 0x9000000f
   18c14:	cmp	r0, r3
   18c18:	beq	18cb0 <__assert_fail@plt+0x78ac>
   18c1c:	cmn	r0, #-1879048182	; 0x9000000a
   18c20:	movweq	r0, #55904	; 0xda60
   18c24:	movteq	r0, #5
   18c28:	beq	18c3c <__assert_fail@plt+0x7838>
   18c2c:	cmp	r4, #18
   18c30:	bne	18d70 <__assert_fail@plt+0x796c>
   18c34:	movw	r0, #63800	; 0xf938
   18c38:	movt	r0, #5
   18c3c:	add	sp, sp, #8
   18c40:	pop	{r4, r5, r6, pc}
   18c44:	cmp	r0, #5
   18c48:	beq	18e14 <__assert_fail@plt+0x7a10>
   18c4c:	bls	18cbc <__assert_fail@plt+0x78b8>
   18c50:	cmp	r0, #8
   18c54:	beq	18dfc <__assert_fail@plt+0x79f8>
   18c58:	bls	18d08 <__assert_fail@plt+0x7904>
   18c5c:	cmp	r0, #10
   18c60:	beq	18e2c <__assert_fail@plt+0x7a28>
   18c64:	movwcc	r0, #13164	; 0x336c
   18c68:	movtcc	r0, #7
   18c6c:	bcc	18c3c <__assert_fail@plt+0x7838>
   18c70:	cmp	r4, #11
   18c74:	movweq	r0, #63784	; 0xf928
   18c78:	movteq	r0, #5
   18c7c:	beq	18c3c <__assert_fail@plt+0x7838>
   18c80:	b	18d70 <__assert_fail@plt+0x796c>
   18c84:	cmn	r0, #-1879048190	; 0x90000002
   18c88:	beq	18e08 <__assert_fail@plt+0x7a04>
   18c8c:	bls	18cec <__assert_fail@plt+0x78e8>
   18c90:	cmn	r0, #-2147483645	; 0x80000003
   18c94:	beq	18e44 <__assert_fail@plt+0x7a40>
   18c98:	cmn	r0, #-2147483647	; 0x80000001
   18c9c:	movweq	r0, #50596	; 0xc5a4
   18ca0:	movteq	r0, #5
   18ca4:	beq	18c3c <__assert_fail@plt+0x7838>
   18ca8:	cmn	r4, #-1879048191	; 0x90000001
   18cac:	bne	18d70 <__assert_fail@plt+0x796c>
   18cb0:	movw	r0, #55724	; 0xd9ac
   18cb4:	movt	r0, #5
   18cb8:	b	18c3c <__assert_fail@plt+0x7838>
   18cbc:	cmp	r0, #2
   18cc0:	beq	18e38 <__assert_fail@plt+0x7a34>
   18cc4:	bhi	18d2c <__assert_fail@plt+0x7928>
   18cc8:	cmp	r0, #0
   18ccc:	movweq	r0, #55344	; 0xd830
   18cd0:	movteq	r0, #5
   18cd4:	beq	18c3c <__assert_fail@plt+0x7838>
   18cd8:	cmp	r4, #1
   18cdc:	movweq	r0, #63740	; 0xf8fc
   18ce0:	movteq	r0, #5
   18ce4:	beq	18c3c <__assert_fail@plt+0x7838>
   18ce8:	b	18d70 <__assert_fail@plt+0x796c>
   18cec:	cmn	r0, #-1879048188	; 0x90000004
   18cf0:	beq	18cfc <__assert_fail@plt+0x78f8>
   18cf4:	cmn	r0, #-1879048189	; 0x90000003
   18cf8:	bne	18d70 <__assert_fail@plt+0x796c>
   18cfc:	movw	r0, #55788	; 0xd9ec
   18d00:	movt	r0, #5
   18d04:	b	18c3c <__assert_fail@plt+0x7838>
   18d08:	cmp	r0, #6
   18d0c:	movweq	r0, #63752	; 0xf908
   18d10:	movteq	r0, #5
   18d14:	beq	18c3c <__assert_fail@plt+0x7838>
   18d18:	cmp	r4, #7
   18d1c:	movweq	r0, #63760	; 0xf910
   18d20:	movteq	r0, #5
   18d24:	beq	18c3c <__assert_fail@plt+0x7838>
   18d28:	b	18d70 <__assert_fail@plt+0x796c>
   18d2c:	cmp	r0, #3
   18d30:	movweq	r0, #55368	; 0xd848
   18d34:	movteq	r0, #5
   18d38:	beq	18c3c <__assert_fail@plt+0x7838>
   18d3c:	cmp	r4, #4
   18d40:	movweq	r0, #56556	; 0xdcec
   18d44:	movteq	r0, #6
   18d48:	beq	18c3c <__assert_fail@plt+0x7838>
   18d4c:	b	18d70 <__assert_fail@plt+0x796c>
   18d50:	cmp	r0, #15
   18d54:	movweq	r0, #55496	; 0xd8c8
   18d58:	movteq	r0, #5
   18d5c:	beq	18c3c <__assert_fail@plt+0x7838>
   18d60:	cmp	r4, #16
   18d64:	movweq	r0, #55548	; 0xd8fc
   18d68:	movteq	r0, #5
   18d6c:	beq	18c3c <__assert_fail@plt+0x7838>
   18d70:	add	r5, r4, #-1879048192	; 0x90000000
   18d74:	cmn	r5, #-268435455	; 0xf0000001
   18d78:	bhi	18e50 <__assert_fail@plt+0x7a4c>
   18d7c:	movw	r3, #16712	; 0x4148
   18d80:	movt	r3, #9
   18d84:	ldrh	r3, [r3, #50]	; 0x32
   18d88:	cmp	r3, #62	; 0x3e
   18d8c:	beq	190b0 <__assert_fail@plt+0x7cac>
   18d90:	bhi	18ee0 <__assert_fail@plt+0x7adc>
   18d94:	cmp	r3, #15
   18d98:	beq	19054 <__assert_fail@plt+0x7c50>
   18d9c:	bls	18fd8 <__assert_fail@plt+0x7bd4>
   18da0:	cmp	r3, #40	; 0x28
   18da4:	beq	19070 <__assert_fail@plt+0x7c6c>
   18da8:	cmp	r3, #50	; 0x32
   18dac:	bne	190c4 <__assert_fail@plt+0x7cc0>
   18db0:	mov	r0, r4
   18db4:	bl	18af0 <__assert_fail@plt+0x76ec>
   18db8:	cmp	r0, #0
   18dbc:	bne	18c3c <__assert_fail@plt+0x7838>
   18dc0:	str	r5, [sp]
   18dc4:	movw	r3, #64008	; 0xfa08
   18dc8:	ldr	r0, [pc, #996]	; 191b4 <__assert_fail@plt+0x7db0>
   18dcc:	movt	r3, #5
   18dd0:	mov	r1, #1
   18dd4:	mov	r2, #32
   18dd8:	bl	112cc <__sprintf_chk@plt>
   18ddc:	ldr	r0, [pc, #976]	; 191b4 <__assert_fail@plt+0x7db0>
   18de0:	b	18c3c <__assert_fail@plt+0x7838>
   18de4:	movw	r0, #55876	; 0xda44
   18de8:	movt	r0, #5
   18dec:	b	18c3c <__assert_fail@plt+0x7838>
   18df0:	movw	r0, #63792	; 0xf930
   18df4:	movt	r0, #5
   18df8:	b	18c3c <__assert_fail@plt+0x7838>
   18dfc:	movw	r0, #63768	; 0xf918
   18e00:	movt	r0, #5
   18e04:	b	18c3c <__assert_fail@plt+0x7838>
   18e08:	movw	r0, #55808	; 0xda00
   18e0c:	movt	r0, #5
   18e10:	b	18c3c <__assert_fail@plt+0x7838>
   18e14:	movw	r0, #55908	; 0xda64
   18e18:	movt	r0, #5
   18e1c:	b	18c3c <__assert_fail@plt+0x7838>
   18e20:	movw	r0, #55484	; 0xd8bc
   18e24:	movt	r0, #5
   18e28:	b	18c3c <__assert_fail@plt+0x7838>
   18e2c:	movw	r0, #63776	; 0xf920
   18e30:	movt	r0, #5
   18e34:	b	18c3c <__assert_fail@plt+0x7838>
   18e38:	movw	r0, #55376	; 0xd850
   18e3c:	movt	r0, #5
   18e40:	b	18c3c <__assert_fail@plt+0x7838>
   18e44:	movw	r0, #50576	; 0xc590
   18e48:	movt	r0, #5
   18e4c:	b	18c3c <__assert_fail@plt+0x7838>
   18e50:	add	r6, r4, #-1610612736	; 0xa0000000
   18e54:	cmn	r6, #-268435455	; 0xf0000001
   18e58:	bhi	18ea0 <__assert_fail@plt+0x7a9c>
   18e5c:	movw	r3, #16712	; 0x4148
   18e60:	movt	r3, #9
   18e64:	ldrh	r2, [r3, #50]	; 0x32
   18e68:	cmp	r2, #50	; 0x32
   18e6c:	beq	18fc4 <__assert_fail@plt+0x7bc0>
   18e70:	ldrb	r3, [r3, #7]
   18e74:	cmp	r3, #6
   18e78:	beq	19090 <__assert_fail@plt+0x7c8c>
   18e7c:	str	r6, [sp]
   18e80:	movw	r3, #64020	; 0xfa14
   18e84:	ldr	r0, [pc, #808]	; 191b4 <__assert_fail@plt+0x7db0>
   18e88:	movt	r3, #5
   18e8c:	mov	r1, #1
   18e90:	mov	r2, #32
   18e94:	bl	112cc <__sprintf_chk@plt>
   18e98:	ldr	r0, [pc, #788]	; 191b4 <__assert_fail@plt+0x7db0>
   18e9c:	b	18c3c <__assert_fail@plt+0x7838>
   18ea0:	cmp	r4, #0
   18ea4:	blt	18f58 <__assert_fail@plt+0x7b54>
   18ea8:	mov	r2, #5
   18eac:	movw	r1, #64032	; 0xfa20
   18eb0:	mov	r0, #0
   18eb4:	movt	r1, #5
   18eb8:	bl	11170 <dcgettext@plt>
   18ebc:	mov	r1, #32
   18ec0:	str	r4, [sp, #4]
   18ec4:	mov	r3, r1
   18ec8:	mov	r2, #1
   18ecc:	str	r0, [sp]
   18ed0:	ldr	r0, [pc, #732]	; 191b4 <__assert_fail@plt+0x7db0>
   18ed4:	bl	113f8 <__snprintf_chk@plt>
   18ed8:	ldr	r0, [pc, #724]	; 191b4 <__assert_fail@plt+0x7db0>
   18edc:	b	18c3c <__assert_fail@plt+0x7838>
   18ee0:	cmp	r3, #181	; 0xb5
   18ee4:	bhi	18fa8 <__assert_fail@plt+0x7ba4>
   18ee8:	cmp	r3, #180	; 0xb4
   18eec:	bcs	190b0 <__assert_fail@plt+0x7cac>
   18ef0:	cmp	r3, #105	; 0x69
   18ef4:	beq	19020 <__assert_fail@plt+0x7c1c>
   18ef8:	cmp	r3, #140	; 0x8c
   18efc:	bne	190f0 <__assert_fail@plt+0x7cec>
   18f00:	cmp	r4, #2130706432	; 0x7f000000
   18f04:	beq	19190 <__assert_fail@plt+0x7d8c>
   18f08:	bls	1910c <__assert_fail@plt+0x7d08>
   18f0c:	mov	r3, #2
   18f10:	movt	r3, #32512	; 0x7f00
   18f14:	cmp	r4, r3
   18f18:	beq	19184 <__assert_fail@plt+0x7d80>
   18f1c:	mov	r3, #2
   18f20:	movt	r3, #32512	; 0x7f00
   18f24:	cmp	r4, r3
   18f28:	bcc	19178 <__assert_fail@plt+0x7d74>
   18f2c:	mov	r3, #3
   18f30:	movt	r3, #32512	; 0x7f00
   18f34:	cmp	r4, r3
   18f38:	beq	1916c <__assert_fail@plt+0x7d68>
   18f3c:	mov	r3, #4
   18f40:	movt	r3, #32512	; 0x7f00
   18f44:	cmp	r4, r3
   18f48:	movweq	r0, #63728	; 0xf8f0
   18f4c:	movteq	r0, #5
   18f50:	beq	18c3c <__assert_fail@plt+0x7838>
   18f54:	b	18dc0 <__assert_fail@plt+0x79bc>
   18f58:	movw	r3, #16712	; 0x4148
   18f5c:	movt	r3, #9
   18f60:	ldrh	r3, [r3, #50]	; 0x32
   18f64:	cmp	r3, #87	; 0x57
   18f68:	beq	19004 <__assert_fail@plt+0x7c00>
   18f6c:	movw	r2, #36992	; 0x9080
   18f70:	cmp	r3, r2
   18f74:	beq	19004 <__assert_fail@plt+0x7c00>
   18f78:	cmp	r3, #36	; 0x24
   18f7c:	beq	19004 <__assert_fail@plt+0x7c00>
   18f80:	add	r4, r4, #-2147483648	; 0x80000000
   18f84:	movw	r3, #64048	; 0xfa30
   18f88:	str	r4, [sp]
   18f8c:	movt	r3, #5
   18f90:	ldr	r0, [pc, #540]	; 191b4 <__assert_fail@plt+0x7db0>
   18f94:	mov	r1, #1
   18f98:	mov	r2, #32
   18f9c:	bl	112cc <__sprintf_chk@plt>
   18fa0:	ldr	r0, [pc, #524]	; 191b4 <__assert_fail@plt+0x7db0>
   18fa4:	b	18c3c <__assert_fail@plt+0x7838>
   18fa8:	cmp	r3, #183	; 0xb7
   18fac:	bne	190fc <__assert_fail@plt+0x7cf8>
   18fb0:	cmp	r4, #1879048195	; 0x70000003
   18fb4:	bne	18dc0 <__assert_fail@plt+0x79bc>
   18fb8:	movw	r0, #63840	; 0xf960
   18fbc:	movt	r0, #5
   18fc0:	b	18c3c <__assert_fail@plt+0x7838>
   18fc4:	mov	r0, r4
   18fc8:	bl	18af0 <__assert_fail@plt+0x76ec>
   18fcc:	cmp	r0, #0
   18fd0:	bne	18c3c <__assert_fail@plt+0x7838>
   18fd4:	b	18e7c <__assert_fail@plt+0x7a78>
   18fd8:	cmp	r3, #8
   18fdc:	beq	18fe8 <__assert_fail@plt+0x7be4>
   18fe0:	cmp	r3, #10
   18fe4:	bne	18dc0 <__assert_fail@plt+0x79bc>
   18fe8:	cmp	r5, #42	; 0x2a
   18fec:	bhi	18dc0 <__assert_fail@plt+0x79bc>
   18ff0:	movw	r3, #19132	; 0x4abc
   18ff4:	movt	r3, #5
   18ff8:	add	r3, r3, r5, lsl #2
   18ffc:	ldr	r0, [r3, #624]	; 0x270
   19000:	b	18db8 <__assert_fail@plt+0x79b4>
   19004:	cmp	r4, #-2147483648	; 0x80000000
   19008:	beq	19148 <__assert_fail@plt+0x7d44>
   1900c:	cmp	r4, #-1610612736	; 0xa0000000
   19010:	bne	18f80 <__assert_fail@plt+0x7b7c>
   19014:	movw	r0, #63980	; 0xf9ec
   19018:	movt	r0, #5
   1901c:	b	18c3c <__assert_fail@plt+0x7838>
   19020:	mov	r3, #5
   19024:	movt	r3, #32512	; 0x7f00
   19028:	cmp	r4, r3
   1902c:	beq	1913c <__assert_fail@plt+0x7d38>
   19030:	mov	r3, #6
   19034:	movt	r3, #32512	; 0x7f00
   19038:	cmp	r4, r3
   1903c:	beq	19130 <__assert_fail@plt+0x7d2c>
   19040:	cmp	r4, #1879048195	; 0x70000003
   19044:	bne	18dc0 <__assert_fail@plt+0x79bc>
   19048:	movw	r0, #63860	; 0xf974
   1904c:	movt	r0, #5
   19050:	b	18c3c <__assert_fail@plt+0x7838>
   19054:	cmp	r5, #9
   19058:	bhi	18dc0 <__assert_fail@plt+0x79bc>
   1905c:	movw	r3, #19132	; 0x4abc
   19060:	movt	r3, #5
   19064:	add	r3, r3, r5, lsl #2
   19068:	ldr	r0, [r3, #796]	; 0x31c
   1906c:	b	18db8 <__assert_fail@plt+0x79b4>
   19070:	sub	r4, r4, #1879048193	; 0x70000001
   19074:	cmp	r4, #4
   19078:	bhi	18dc0 <__assert_fail@plt+0x79bc>
   1907c:	movw	r3, #19132	; 0x4abc
   19080:	movt	r3, #5
   19084:	add	r3, r3, r4, lsl #2
   19088:	ldr	r0, [r3, #836]	; 0x344
   1908c:	b	18db8 <__assert_fail@plt+0x79b4>
   19090:	add	r5, r5, #18
   19094:	cmp	r5, #18
   19098:	bhi	18e7c <__assert_fail@plt+0x7a78>
   1909c:	movw	r3, #19132	; 0x4abc
   190a0:	movt	r3, #5
   190a4:	add	r3, r3, r5, lsl #2
   190a8:	ldr	r0, [r3, #856]	; 0x358
   190ac:	b	18fcc <__assert_fail@plt+0x7bc8>
   190b0:	cmp	r4, #1879048193	; 0x70000001
   190b4:	bne	18dc0 <__assert_fail@plt+0x79bc>
   190b8:	movw	r0, #63824	; 0xf950
   190bc:	movt	r0, #5
   190c0:	b	18c3c <__assert_fail@plt+0x7838>
   190c4:	cmp	r3, #36	; 0x24
   190c8:	bne	18dc0 <__assert_fail@plt+0x79bc>
   190cc:	cmp	r4, #1879048193	; 0x70000001
   190d0:	beq	19160 <__assert_fail@plt+0x7d5c>
   190d4:	cmp	r4, #1879048194	; 0x70000002
   190d8:	beq	19154 <__assert_fail@plt+0x7d50>
   190dc:	cmp	r4, #1879048192	; 0x70000000
   190e0:	movweq	r0, #63960	; 0xf9d8
   190e4:	movteq	r0, #5
   190e8:	bne	18dc0 <__assert_fail@plt+0x79bc>
   190ec:	b	18c3c <__assert_fail@plt+0x7838>
   190f0:	cmp	r3, #87	; 0x57
   190f4:	bne	18dc0 <__assert_fail@plt+0x79bc>
   190f8:	b	190cc <__assert_fail@plt+0x7cc8>
   190fc:	movw	r2, #36992	; 0x9080
   19100:	cmp	r3, r2
   19104:	beq	190cc <__assert_fail@plt+0x7cc8>
   19108:	b	18dc0 <__assert_fail@plt+0x79bc>
   1910c:	cmp	r4, #1879048194	; 0x70000002
   19110:	beq	191a8 <__assert_fail@plt+0x7da4>
   19114:	cmp	r4, #1879048195	; 0x70000003
   19118:	beq	1919c <__assert_fail@plt+0x7d98>
   1911c:	cmp	r4, #1879048193	; 0x70000001
   19120:	bne	18dc0 <__assert_fail@plt+0x79bc>
   19124:	movw	r0, #63648	; 0xf8a0
   19128:	movt	r0, #5
   1912c:	b	18c3c <__assert_fail@plt+0x7838>
   19130:	movw	r0, #63940	; 0xf9c4
   19134:	movt	r0, #5
   19138:	b	18c3c <__assert_fail@plt+0x7838>
   1913c:	movw	r0, #63880	; 0xf988
   19140:	movt	r0, #5
   19144:	b	18c3c <__assert_fail@plt+0x7838>
   19148:	movw	r0, #63996	; 0xf9fc
   1914c:	movt	r0, #5
   19150:	b	18c3c <__assert_fail@plt+0x7838>
   19154:	movw	r0, #63900	; 0xf99c
   19158:	movt	r0, #5
   1915c:	b	18c3c <__assert_fail@plt+0x7838>
   19160:	movw	r0, #63920	; 0xf9b0
   19164:	movt	r0, #5
   19168:	b	18c3c <__assert_fail@plt+0x7838>
   1916c:	movw	r0, #63716	; 0xf8e4
   19170:	movt	r0, #5
   19174:	b	18c3c <__assert_fail@plt+0x7838>
   19178:	movw	r0, #63696	; 0xf8d0
   1917c:	movt	r0, #5
   19180:	b	18c3c <__assert_fail@plt+0x7838>
   19184:	movw	r0, #63704	; 0xf8d8
   19188:	movt	r0, #5
   1918c:	b	18c3c <__assert_fail@plt+0x7838>
   19190:	movw	r0, #63684	; 0xf8c4
   19194:	movt	r0, #5
   19198:	b	18c3c <__assert_fail@plt+0x7838>
   1919c:	movw	r0, #63664	; 0xf8b0
   191a0:	movt	r0, #5
   191a4:	b	18c3c <__assert_fail@plt+0x7838>
   191a8:	movw	r0, #55968	; 0xdaa0
   191ac:	movt	r0, #5
   191b0:	b	18c3c <__assert_fail@plt+0x7838>
   191b4:	ldrdeq	r4, [r9], -r0
   191b8:	movw	ip, #16712	; 0x4148
   191bc:	movt	ip, #9
   191c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191c4:	sub	sp, sp, #20
   191c8:	ldrh	r7, [ip, #50]	; 0x32
   191cc:	add	r1, r0, r1, lsl #5
   191d0:	ldrd	r4, [sp, #64]	; 0x40
   191d4:	cmp	r7, #40	; 0x28
   191d8:	str	r2, [sp, #12]
   191dc:	str	r3, [sp, #8]
   191e0:	mvneq	r2, #1
   191e4:	mvneq	r3, #0
   191e8:	andeq	r4, r4, r2
   191ec:	andeq	r5, r5, r3
   191f0:	cmp	r0, r1
   191f4:	ldrh	r8, [sp, #56]	; 0x38
   191f8:	bcs	19310 <__assert_fail@plt+0x7f0c>
   191fc:	mov	sl, #1048576	; 0x100000
   19200:	mov	fp, #0
   19204:	mov	r9, #0
   19208:	strd	sl, [sp]
   1920c:	b	1921c <__assert_fail@plt+0x7e18>
   19210:	add	r0, ip, #32
   19214:	cmp	r0, r1
   19218:	bcs	19284 <__assert_fail@plt+0x7e80>
   1921c:	rsb	r3, r0, r1
   19220:	cmp	r7, #40	; 0x28
   19224:	asr	r3, r3, #5
   19228:	mvneq	sl, #1
   1922c:	mvneq	fp, #0
   19230:	add	r3, r3, r3, lsr #31
   19234:	asr	r3, r3, #1
   19238:	lsl	r3, r3, #5
   1923c:	add	ip, r0, r3
   19240:	ldrd	r2, [r3, r0]
   19244:	ldr	r6, [ip, #16]
   19248:	andeq	r2, r2, sl
   1924c:	andeq	r3, r3, fp
   19250:	cmp	r6, #0
   19254:	beq	1926c <__assert_fail@plt+0x7e68>
   19258:	cmp	r8, #0
   1925c:	beq	192c0 <__assert_fail@plt+0x7ebc>
   19260:	ldr	fp, [ip, #24]
   19264:	cmp	r8, fp
   19268:	beq	192c0 <__assert_fail@plt+0x7ebc>
   1926c:	cmp	r3, r5
   19270:	cmpeq	r2, r4
   19274:	bls	19210 <__assert_fail@plt+0x7e0c>
   19278:	mov	r1, ip
   1927c:	cmp	r0, r1
   19280:	bcc	1921c <__assert_fail@plt+0x7e18>
   19284:	cmp	r9, #0
   19288:	ldrd	sl, [sp]
   1928c:	beq	19310 <__assert_fail@plt+0x7f0c>
   19290:	ldr	r6, [r9, #16]
   19294:	ldr	r0, [sp, #8]
   19298:	cmp	r0, r6
   1929c:	bls	192f8 <__assert_fail@plt+0x7ef4>
   192a0:	ldr	r2, [sp, #12]
   192a4:	add	r0, r2, r6
   192a8:	ldr	r3, [sp, #72]	; 0x48
   192ac:	str	r0, [r3]
   192b0:	ldr	r3, [sp, #76]	; 0x4c
   192b4:	strd	sl, [r3]
   192b8:	add	sp, sp, #20
   192bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192c0:	cmp	r3, r5
   192c4:	cmpeq	r2, r4
   192c8:	bhi	19278 <__assert_fail@plt+0x7e74>
   192cc:	ldrd	sl, [sp]
   192d0:	subs	r2, r4, r2
   192d4:	sbc	r3, r5, r3
   192d8:	cmp	r3, fp
   192dc:	cmpeq	r2, sl
   192e0:	bcs	19210 <__assert_fail@plt+0x7e0c>
   192e4:	orrs	fp, r2, r3
   192e8:	beq	1932c <__assert_fail@plt+0x7f28>
   192ec:	strd	r2, [sp]
   192f0:	mov	r9, ip
   192f4:	b	19210 <__assert_fail@plt+0x7e0c>
   192f8:	movw	r1, #50908	; 0xc6dc
   192fc:	mov	r2, #5
   19300:	movt	r1, #5
   19304:	mov	r0, #0
   19308:	bl	11170 <dcgettext@plt>
   1930c:	b	192a8 <__assert_fail@plt+0x7ea4>
   19310:	ldr	sl, [sp, #72]	; 0x48
   19314:	mov	r3, #0
   19318:	ldr	fp, [sp, #76]	; 0x4c
   1931c:	str	r3, [sl]
   19320:	strd	r4, [fp]
   19324:	add	sp, sp, #20
   19328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1932c:	mov	sl, r2
   19330:	mov	fp, r3
   19334:	b	19294 <__assert_fail@plt+0x7e90>
   19338:	cmp	r0, #1
   1933c:	push	{r4, lr}
   19340:	mov	r4, r0
   19344:	sub	sp, sp, #8
   19348:	beq	19400 <__assert_fail@plt+0x7ffc>
   1934c:	bcc	193f0 <__assert_fail@plt+0x7fec>
   19350:	cmp	r0, #2
   19354:	movweq	r0, #64076	; 0xfa4c
   19358:	movteq	r0, #5
   1935c:	bne	19368 <__assert_fail@plt+0x7f64>
   19360:	add	sp, sp, #8
   19364:	pop	{r4, pc}
   19368:	sub	r3, r4, #13
   1936c:	cmp	r3, #2
   19370:	movwls	r1, #63140	; 0xf6a4
   19374:	movls	r0, #0
   19378:	movtls	r1, #5
   1937c:	bls	193c0 <__assert_fail@plt+0x7fbc>
   19380:	sub	r3, r4, #10
   19384:	cmp	r3, #2
   19388:	bhi	19410 <__assert_fail@plt+0x800c>
   1938c:	cmp	r4, #10
   19390:	bne	193b4 <__assert_fail@plt+0x7fb0>
   19394:	movw	r3, #16712	; 0x4148
   19398:	movt	r3, #9
   1939c:	ldrb	r3, [r3, #7]
   193a0:	cmp	r3, #3
   193a4:	cmpne	r3, #0
   193a8:	movweq	r0, #64060	; 0xfa3c
   193ac:	movteq	r0, #5
   193b0:	beq	19360 <__assert_fail@plt+0x7f5c>
   193b4:	movw	r1, #63168	; 0xf6c0
   193b8:	movt	r1, #5
   193bc:	mov	r0, #0
   193c0:	mov	r2, #5
   193c4:	bl	11170 <dcgettext@plt>
   193c8:	mov	r1, #32
   193cc:	str	r4, [sp, #4]
   193d0:	mov	r3, r1
   193d4:	mov	r2, #1
   193d8:	str	r0, [sp]
   193dc:	ldr	r0, [pc, #60]	; 19420 <__assert_fail@plt+0x801c>
   193e0:	bl	113f8 <__snprintf_chk@plt>
   193e4:	ldr	r0, [pc, #52]	; 19420 <__assert_fail@plt+0x801c>
   193e8:	add	sp, sp, #8
   193ec:	pop	{r4, pc}
   193f0:	movw	r0, #64068	; 0xfa44
   193f4:	movt	r0, #5
   193f8:	add	sp, sp, #8
   193fc:	pop	{r4, pc}
   19400:	movw	r0, #21648	; 0x5490
   19404:	movt	r0, #7
   19408:	add	sp, sp, #8
   1940c:	pop	{r4, pc}
   19410:	movw	r1, #63188	; 0xf6d4
   19414:	mov	r0, #0
   19418:	movt	r1, #5
   1941c:	b	193c0 <__assert_fail@plt+0x7fbc>
   19420:	strdeq	r4, [r9], -r0
   19424:	cmn	r0, #15
   19428:	push	{r4, lr}
   1942c:	mov	r4, r0
   19430:	sub	sp, sp, #8
   19434:	beq	194d8 <__assert_fail@plt+0x80d4>
   19438:	cmn	r0, #14
   1943c:	beq	194c8 <__assert_fail@plt+0x80c4>
   19440:	cmp	r0, #0
   19444:	movweq	r0, #64112	; 0xfa70
   19448:	movteq	r0, #5
   1944c:	beq	194c0 <__assert_fail@plt+0x80bc>
   19450:	movw	r2, #16712	; 0x4148
   19454:	cmn	r4, #256	; 0x100
   19458:	movt	r2, #9
   1945c:	ldrh	r3, [r2, #50]	; 0x32
   19460:	beq	194e8 <__assert_fail@plt+0x80e4>
   19464:	sub	r1, r3, #180	; 0xb4
   19468:	cmp	r3, #62	; 0x3e
   1946c:	cmpne	r1, #1
   19470:	bhi	1947c <__assert_fail@plt+0x8078>
   19474:	cmn	r4, #254	; 0xfe
   19478:	beq	1958c <__assert_fail@plt+0x8188>
   1947c:	cmn	r4, #253	; 0xfd
   19480:	beq	19504 <__assert_fail@plt+0x8100>
   19484:	cmn	r4, #256	; 0x100
   19488:	beq	194f0 <__assert_fail@plt+0x80ec>
   1948c:	cmn	r4, #252	; 0xfc
   19490:	bne	1951c <__assert_fail@plt+0x8118>
   19494:	cmp	r3, #8
   19498:	beq	19510 <__assert_fail@plt+0x810c>
   1949c:	movw	r3, #64132	; 0xfa84
   194a0:	movt	r3, #5
   194a4:	uxth	r4, r4
   194a8:	str	r4, [sp]
   194ac:	ldr	r0, [pc, #292]	; 195d8 <__assert_fail@plt+0x81d4>
   194b0:	mov	r1, #1
   194b4:	mov	r2, #32
   194b8:	bl	112cc <__sprintf_chk@plt>
   194bc:	ldr	r0, [pc, #276]	; 195d8 <__assert_fail@plt+0x81d4>
   194c0:	add	sp, sp, #8
   194c4:	pop	{r4, pc}
   194c8:	movw	r0, #64116	; 0xfa74
   194cc:	movt	r0, #5
   194d0:	add	sp, sp, #8
   194d4:	pop	{r4, pc}
   194d8:	movw	r0, #13276	; 0x33dc
   194dc:	movt	r0, #7
   194e0:	add	sp, sp, #8
   194e4:	pop	{r4, pc}
   194e8:	cmp	r3, #50	; 0x32
   194ec:	beq	195c0 <__assert_fail@plt+0x81bc>
   194f0:	cmp	r3, #140	; 0x8c
   194f4:	bne	1949c <__assert_fail@plt+0x8098>
   194f8:	movw	r0, #64096	; 0xfa60
   194fc:	movt	r0, #5
   19500:	b	194c0 <__assert_fail@plt+0x80bc>
   19504:	cmp	r3, #8
   19508:	bne	1949c <__assert_fail@plt+0x8098>
   1950c:	b	194f8 <__assert_fail@plt+0x80f4>
   19510:	movw	r0, #64104	; 0xfa68
   19514:	movt	r0, #5
   19518:	b	194c0 <__assert_fail@plt+0x80bc>
   1951c:	add	r3, r4, #256	; 0x100
   19520:	cmp	r3, #31
   19524:	bls	1949c <__assert_fail@plt+0x8098>
   19528:	add	r3, r4, #224	; 0xe0
   1952c:	cmp	r3, #31
   19530:	bls	19598 <__assert_fail@plt+0x8194>
   19534:	cmn	r4, #256	; 0x100
   19538:	bcs	195ac <__assert_fail@plt+0x81a8>
   1953c:	ldr	r3, [r2, #68]	; 0x44
   19540:	cmp	r4, r3
   19544:	bcs	1956c <__assert_fail@plt+0x8168>
   19548:	str	r4, [sp]
   1954c:	movw	r3, #64192	; 0xfac0
   19550:	ldr	r0, [pc, #128]	; 195d8 <__assert_fail@plt+0x81d4>
   19554:	movt	r3, #5
   19558:	mov	r1, #1
   1955c:	mov	r2, #32
   19560:	bl	112cc <__sprintf_chk@plt>
   19564:	ldr	r0, [pc, #108]	; 195d8 <__assert_fail@plt+0x81d4>
   19568:	b	194c0 <__assert_fail@plt+0x80bc>
   1956c:	movw	r1, #64168	; 0xfaa8
   19570:	mov	r0, #0
   19574:	movt	r1, #5
   19578:	mov	r2, #5
   1957c:	bl	11170 <dcgettext@plt>
   19580:	str	r4, [sp]
   19584:	mov	r3, r0
   19588:	b	194ac <__assert_fail@plt+0x80a8>
   1958c:	movw	r0, #64084	; 0xfa54
   19590:	movt	r0, #5
   19594:	b	194c0 <__assert_fail@plt+0x80bc>
   19598:	uxth	r4, r4
   1959c:	movw	r3, #64144	; 0xfa90
   195a0:	str	r4, [sp]
   195a4:	movt	r3, #5
   195a8:	b	194ac <__assert_fail@plt+0x80a8>
   195ac:	uxth	r4, r4
   195b0:	movw	r3, #64156	; 0xfa9c
   195b4:	str	r4, [sp]
   195b8:	movt	r3, #5
   195bc:	b	194ac <__assert_fail@plt+0x80a8>
   195c0:	ldrb	r3, [r2, #7]
   195c4:	cmp	r3, #1
   195c8:	bne	1949c <__assert_fail@plt+0x8098>
   195cc:	movw	r0, #64120	; 0xfa78
   195d0:	movt	r0, #5
   195d4:	b	194c0 <__assert_fail@plt+0x80bc>
   195d8:	andeq	r4, r9, r0, lsl r8
   195dc:	movw	r3, #16712	; 0x4148
   195e0:	movt	r3, #9
   195e4:	ldr	r2, [r3, #68]	; 0x44
   195e8:	cmp	r2, r0
   195ec:	bls	19600 <__assert_fail@plt+0x81fc>
   195f0:	add	r0, r0, r0, lsl #3
   195f4:	ldr	r3, [r3, #220]	; 0xdc
   195f8:	add	r0, r3, r0, lsl #3
   195fc:	b	132f8 <__assert_fail@plt+0x1ef4>
   19600:	movw	r1, #50908	; 0xc6dc
   19604:	mov	r0, #0
   19608:	movt	r1, #5
   1960c:	mov	r2, #5
   19610:	b	11170 <dcgettext@plt>
   19614:	push	{r4, r5, r6, r7, lr}
   19618:	subs	r5, r0, #0
   1961c:	sub	sp, sp, #12
   19620:	movweq	r0, #25084	; 0x61fc
   19624:	movteq	r0, #7
   19628:	beq	19684 <__assert_fail@plt+0x8280>
   1962c:	movw	r4, #16712	; 0x4148
   19630:	movt	r4, #9
   19634:	ldrh	r3, [r4, #50]	; 0x32
   19638:	cmp	r3, #21
   1963c:	beq	1968c <__assert_fail@plt+0x8288>
   19640:	cmp	r3, #50	; 0x32
   19644:	beq	19748 <__assert_fail@plt+0x8344>
   19648:	cmp	r3, #8
   1964c:	beq	196ec <__assert_fail@plt+0x82e8>
   19650:	mov	r2, #5
   19654:	movw	r1, #64332	; 0xfb4c
   19658:	mov	r0, #0
   1965c:	movt	r1, #5
   19660:	bl	11170 <dcgettext@plt>
   19664:	mov	r1, #32
   19668:	str	r5, [sp, #4]
   1966c:	mov	r3, r1
   19670:	mov	r2, #1
   19674:	str	r0, [sp]
   19678:	ldr	r0, [pc, #484]	; 19864 <__assert_fail@plt+0x8460>
   1967c:	bl	113f8 <__snprintf_chk@plt>
   19680:	ldr	r0, [pc, #476]	; 19864 <__assert_fail@plt+0x8460>
   19684:	add	sp, sp, #12
   19688:	pop	{r4, r5, r6, r7, pc}
   1968c:	ubfx	r3, r5, #5, #3
   19690:	mov	r6, #1
   19694:	lsl	r3, r6, r3
   19698:	bics	r7, r3, #3
   1969c:	beq	19650 <__assert_fail@plt+0x824c>
   196a0:	mov	r2, #5
   196a4:	movw	r1, #64312	; 0xfb38
   196a8:	mov	r0, #0
   196ac:	movt	r1, #5
   196b0:	bl	11170 <dcgettext@plt>
   196b4:	mov	r1, #32
   196b8:	str	r7, [sp, #4]
   196bc:	mov	r2, r6
   196c0:	mov	r3, r1
   196c4:	str	r0, [sp]
   196c8:	add	r0, r4, #1792	; 0x700
   196cc:	add	r0, r0, #8
   196d0:	bl	113f8 <__snprintf_chk@plt>
   196d4:	add	r0, r4, #1792	; 0x700
   196d8:	add	r0, r0, #8
   196dc:	cmp	r0, #0
   196e0:	beq	19650 <__assert_fail@plt+0x824c>
   196e4:	add	sp, sp, #12
   196e8:	pop	{r4, r5, r6, r7, pc}
   196ec:	cmp	r5, #32
   196f0:	beq	19830 <__assert_fail@plt+0x842c>
   196f4:	bls	19724 <__assert_fail@plt+0x8320>
   196f8:	cmp	r5, #160	; 0xa0
   196fc:	beq	19824 <__assert_fail@plt+0x8420>
   19700:	cmp	r5, #240	; 0xf0
   19704:	movweq	r0, #64240	; 0xfaf0
   19708:	movteq	r0, #5
   1970c:	beq	19684 <__assert_fail@plt+0x8280>
   19710:	cmp	r5, #128	; 0x80
   19714:	bne	19650 <__assert_fail@plt+0x824c>
   19718:	movw	r0, #64208	; 0xfad0
   1971c:	movt	r0, #5
   19720:	b	19684 <__assert_fail@plt+0x8280>
   19724:	cmp	r5, #4
   19728:	movweq	r0, #64248	; 0xfaf8
   1972c:	movteq	r0, #5
   19730:	beq	19684 <__assert_fail@plt+0x8280>
   19734:	cmp	r5, #8
   19738:	movweq	r0, #64260	; 0xfb04
   1973c:	movteq	r0, #5
   19740:	beq	19684 <__assert_fail@plt+0x8280>
   19744:	b	19650 <__assert_fail@plt+0x824c>
   19748:	ldrb	r3, [r4, #7]
   1974c:	cmp	r3, #13
   19750:	bne	19650 <__assert_fail@plt+0x824c>
   19754:	ldrh	r3, [r4, #48]	; 0x30
   19758:	mov	r2, #0
   1975c:	strb	r2, [r4, #1768]	; 0x6e8
   19760:	sub	r3, r3, #2
   19764:	cmp	r3, #1
   19768:	bhi	197a4 <__assert_fail@plt+0x83a0>
   1976c:	ubfx	r3, r5, #4, #2
   19770:	cmp	r3, #2
   19774:	beq	19854 <__assert_fail@plt+0x8450>
   19778:	cmp	r3, #3
   1977c:	beq	1983c <__assert_fail@plt+0x8438>
   19780:	cmp	r3, #1
   19784:	movweq	r3, #64272	; 0xfb10
   19788:	movteq	r3, #5
   1978c:	movwne	r3, #17184	; 0x4320
   19790:	movtne	r3, #65	; 0x41
   19794:	ldmeq	r3, {r0, r1}
   19798:	strne	r3, [r4, #1768]	; 0x6e8
   1979c:	streq	r0, [r4, #1768]	; 0x6e8
   197a0:	strbeq	r1, [r4, #1772]	; 0x6ec
   197a4:	ubfx	r3, r5, #6, #2
   197a8:	cmp	r3, #2
   197ac:	beq	197f4 <__assert_fail@plt+0x83f0>
   197b0:	cmp	r3, #3
   197b4:	beq	1980c <__assert_fail@plt+0x8408>
   197b8:	cmp	r3, #1
   197bc:	mov	r2, #32
   197c0:	movwne	r1, #64288	; 0xfb20
   197c4:	movweq	r1, #64280	; 0xfb18
   197c8:	ldrne	r0, [pc, #152]	; 19868 <__assert_fail@plt+0x8464>
   197cc:	movtne	r1, #5
   197d0:	ldreq	r0, [pc, #144]	; 19868 <__assert_fail@plt+0x8464>
   197d4:	movteq	r1, #5
   197d8:	bl	112c0 <__strcat_chk@plt>
   197dc:	ldrb	r0, [r4, #1768]	; 0x6e8
   197e0:	ldr	r3, [pc, #128]	; 19868 <__assert_fail@plt+0x8464>
   197e4:	cmp	r0, #0
   197e8:	moveq	r0, r3
   197ec:	addne	r0, r3, #1
   197f0:	b	196dc <__assert_fail@plt+0x82d8>
   197f4:	movw	r1, #64296	; 0xfb28
   197f8:	mov	r2, #32
   197fc:	movt	r1, #5
   19800:	ldr	r0, [pc, #96]	; 19868 <__assert_fail@plt+0x8464>
   19804:	bl	112c0 <__strcat_chk@plt>
   19808:	b	197dc <__assert_fail@plt+0x83d8>
   1980c:	movw	r1, #64304	; 0xfb30
   19810:	mov	r2, #32
   19814:	movt	r1, #5
   19818:	ldr	r0, [pc, #72]	; 19868 <__assert_fail@plt+0x8464>
   1981c:	bl	112c0 <__strcat_chk@plt>
   19820:	b	197dc <__assert_fail@plt+0x83d8>
   19824:	movw	r0, #64220	; 0xfadc
   19828:	movt	r0, #5
   1982c:	b	19684 <__assert_fail@plt+0x8280>
   19830:	movw	r0, #64196	; 0xfac4
   19834:	movt	r0, #5
   19838:	b	19684 <__assert_fail@plt+0x8280>
   1983c:	movw	r3, #64280	; 0xfb18
   19840:	movt	r3, #5
   19844:	ldm	r3, {r0, r1}
   19848:	str	r0, [r4, #1768]	; 0x6e8
   1984c:	strb	r1, [r4, #1772]	; 0x6ec
   19850:	b	197a4 <__assert_fail@plt+0x83a0>
   19854:	movw	r3, #17952	; 0x4620
   19858:	movt	r3, #68	; 0x44
   1985c:	str	r3, [r4, #1768]	; 0x6e8
   19860:	b	197a4 <__assert_fail@plt+0x83a0>
   19864:	andeq	r4, r9, r0, ror r8
   19868:	andeq	r4, r9, r0, lsr r8
   1986c:	cmp	r0, #0
   19870:	push	{r4, lr}
   19874:	mov	r4, r1
   19878:	beq	19880 <__assert_fail@plt+0x847c>
   1987c:	bl	1111c <free@plt>
   19880:	ldr	r0, [r4]
   19884:	cmp	r0, #0
   19888:	popeq	{r4, pc}
   1988c:	pop	{r4, lr}
   19890:	b	1111c <free@plt>
   19894:	push	{r4, lr}
   19898:	mov	r4, r0
   1989c:	cmp	r0, #3
   198a0:	ldrls	pc, [pc, r0, lsl #2]
   198a4:	b	198e8 <__assert_fail@plt+0x84e4>
   198a8:	andeq	r9, r1, r4, asr #17
   198ac:			; <UNDEFINED> instruction: 0x000198b8
   198b0:	ldrdeq	r9, [r1], -ip
   198b4:	ldrdeq	r9, [r1], -r0
   198b8:	movw	r0, #64352	; 0xfb60
   198bc:	movt	r0, #5
   198c0:	pop	{r4, pc}
   198c4:	movw	r0, #64344	; 0xfb58
   198c8:	movt	r0, #5
   198cc:	pop	{r4, pc}
   198d0:	movw	r0, #21716	; 0x54d4
   198d4:	movt	r0, #7
   198d8:	pop	{r4, pc}
   198dc:	movw	r0, #64364	; 0xfb6c
   198e0:	movt	r0, #5
   198e4:	pop	{r4, pc}
   198e8:	mov	r2, #5
   198ec:	movw	r1, #64372	; 0xfb74
   198f0:	mov	r0, #0
   198f4:	movt	r1, #5
   198f8:	bl	11170 <dcgettext@plt>
   198fc:	mov	r1, r4
   19900:	bl	4b2b0 <error@@Base>
   19904:	movw	r1, #61836	; 0xf18c
   19908:	mov	r0, #0
   1990c:	movt	r1, #5
   19910:	mov	r2, #5
   19914:	pop	{r4, lr}
   19918:	b	11170 <dcgettext@plt>
   1991c:	cmp	r0, #5
   19920:	beq	19950 <__assert_fail@plt+0x854c>
   19924:	cmp	r0, #6
   19928:	beq	19944 <__assert_fail@plt+0x8540>
   1992c:	cmp	r0, #4
   19930:	beq	19938 <__assert_fail@plt+0x8534>
   19934:	b	19894 <__assert_fail@plt+0x8490>
   19938:	movw	r0, #64408	; 0xfb98
   1993c:	movt	r0, #5
   19940:	bx	lr
   19944:	movw	r0, #64432	; 0xfbb0
   19948:	movt	r0, #5
   1994c:	bx	lr
   19950:	movw	r0, #64420	; 0xfba4
   19954:	movt	r0, #5
   19958:	bx	lr
   1995c:	push	{r4, r5, r6, r7, r8, r9, lr}
   19960:	sub	sp, sp, #68	; 0x44
   19964:	movw	r6, #16680	; 0x4128
   19968:	movt	r6, #9
   1996c:	ldr	r8, [sp, #96]	; 0x60
   19970:	mov	r4, r2
   19974:	ldr	r1, [r0]
   19978:	mov	r7, r0
   1997c:	ldr	ip, [r6]
   19980:	mov	r0, r2
   19984:	ldr	r2, [r8]
   19988:	mov	r9, r3
   1998c:	str	r4, [sp, #20]
   19990:	mov	r3, #0
   19994:	str	ip, [sp, #60]	; 0x3c
   19998:	stmib	sp, {r1, r2, r3}
   1999c:	str	r3, [sp, #16]
   199a0:	str	r3, [sp, #24]
   199a4:	str	r3, [sp, #28]
   199a8:	str	r3, [sp, #32]
   199ac:	str	r3, [sp, #36]	; 0x24
   199b0:	str	r3, [sp, #40]	; 0x28
   199b4:	str	r3, [sp, #44]	; 0x2c
   199b8:	str	r3, [sp, #48]	; 0x30
   199bc:	str	r3, [sp, #52]	; 0x34
   199c0:	str	r3, [sp, #56]	; 0x38
   199c4:	bl	4eba0 <warn@@Base+0x31b4>
   199c8:	movw	r1, #64444	; 0xfbbc
   199cc:	mov	r2, #56	; 0x38
   199d0:	movt	r1, #5
   199d4:	mov	r5, r0
   199d8:	add	r0, sp, #4
   199dc:	bl	4f0b8 <warn@@Base+0x36cc>
   199e0:	ldr	r3, [sp, #8]
   199e4:	cmp	r3, #0
   199e8:	bne	19a28 <__assert_fail@plt+0x8624>
   199ec:	b	19a5c <__assert_fail@plt+0x8658>
   199f0:	ldr	ip, [sp, #20]
   199f4:	add	r0, sp, #4
   199f8:	mov	r1, #4
   199fc:	rsb	ip, ip, r4
   19a00:	add	ip, r5, ip
   19a04:	str	ip, [sp, #16]
   19a08:	bl	4f138 <warn@@Base+0x374c>
   19a0c:	cmp	r0, #1
   19a10:	bne	19a30 <__assert_fail@plt+0x862c>
   19a14:	add	r0, sp, #4
   19a18:	bl	4eee4 <warn@@Base+0x34f8>
   19a1c:	ldr	r3, [sp, #8]
   19a20:	cmp	r3, #0
   19a24:	beq	19a5c <__assert_fail@plt+0x8658>
   19a28:	cmp	r0, #0
   19a2c:	beq	199f0 <__assert_fail@plt+0x85ec>
   19a30:	mov	r0, r5
   19a34:	bl	1111c <free@plt>
   19a38:	mov	r3, #0
   19a3c:	mov	r0, r3
   19a40:	str	r3, [r7]
   19a44:	ldr	r2, [sp, #60]	; 0x3c
   19a48:	ldr	r3, [r6]
   19a4c:	cmp	r2, r3
   19a50:	bne	19a88 <__assert_fail@plt+0x8684>
   19a54:	add	sp, sp, #68	; 0x44
   19a58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19a5c:	add	r0, sp, #4
   19a60:	bl	50a64 <warn@@Base+0x5078>
   19a64:	cmp	r0, #0
   19a68:	bne	19a30 <__assert_fail@plt+0x862c>
   19a6c:	ldr	r3, [sp, #20]
   19a70:	cmp	r3, #0
   19a74:	bne	19a30 <__assert_fail@plt+0x862c>
   19a78:	str	r5, [r7]
   19a7c:	mov	r0, #1
   19a80:	stm	r8, {r4, r9}
   19a84:	b	19a44 <__assert_fail@plt+0x8640>
   19a88:	bl	1117c <__stack_chk_fail@plt>
   19a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a90:	movw	r8, #16680	; 0x4128
   19a94:	movt	r8, #9
   19a98:	subs	r9, r0, #0
   19a9c:	sub	sp, sp, #28
   19aa0:	mov	sl, r1
   19aa4:	ldr	r2, [r8]
   19aa8:	movlt	r3, #1
   19aac:	rsblt	r9, r9, #0
   19ab0:	strlt	r3, [sp, #4]
   19ab4:	str	r2, [sp, #20]
   19ab8:	blt	19ac8 <__assert_fail@plt+0x86c4>
   19abc:	movne	r3, #0
   19ac0:	strne	r3, [sp, #4]
   19ac4:	beq	19c18 <__assert_fail@plt+0x8814>
   19ac8:	movw	r1, #26444	; 0x674c
   19acc:	movt	r1, #9
   19ad0:	mov	r2, #0
   19ad4:	movw	r6, #62012	; 0xf23c
   19ad8:	ldr	r1, [r1]
   19adc:	movw	r7, #16696	; 0x4138
   19ae0:	movt	r6, #7
   19ae4:	movt	r7, #9
   19ae8:	cmp	r1, r2
   19aec:	mov	fp, r2
   19af0:	str	r2, [sp, #16]
   19af4:	moveq	r4, r9
   19af8:	mvnne	r4, #-2147483648	; 0x80000000
   19afc:	str	r2, [sp, #12]
   19b00:	b	19b34 <__assert_fail@plt+0x8730>
   19b04:	cmp	r4, #1
   19b08:	beq	19b78 <__assert_fail@plt+0x8774>
   19b0c:	add	r2, r0, #64	; 0x40
   19b10:	movw	r1, #64476	; 0xfbdc
   19b14:	mov	r0, #1
   19b18:	movt	r1, #5
   19b1c:	sub	r4, r4, #2
   19b20:	add	fp, fp, #2
   19b24:	mov	sl, r5
   19b28:	bl	1132c <__printf_chk@plt>
   19b2c:	cmp	r4, #0
   19b30:	beq	19b78 <__assert_fail@plt+0x8774>
   19b34:	ldrb	r0, [sl]
   19b38:	add	r5, sl, #1
   19b3c:	cmp	r0, #0
   19b40:	beq	19b78 <__assert_fail@plt+0x8774>
   19b44:	lsl	r2, r0, #1
   19b48:	ldrh	r2, [r6, r2]
   19b4c:	tst	r2, #2
   19b50:	bne	19b04 <__assert_fail@plt+0x8700>
   19b54:	tst	r2, #16
   19b58:	beq	19bcc <__assert_fail@plt+0x87c8>
   19b5c:	ldr	r1, [r7]
   19b60:	sub	r4, r4, #1
   19b64:	bl	111ac <_IO_putc@plt>
   19b68:	cmp	r4, #0
   19b6c:	add	fp, fp, #1
   19b70:	mov	sl, r5
   19b74:	bne	19b34 <__assert_fail@plt+0x8730>
   19b78:	ldr	sl, [sp, #4]
   19b7c:	cmp	fp, r9
   19b80:	movge	sl, #0
   19b84:	andlt	sl, sl, #1
   19b88:	cmp	sl, #0
   19b8c:	beq	19bb0 <__assert_fail@plt+0x87ac>
   19b90:	rsb	r2, fp, r9
   19b94:	movw	r1, #64488	; 0xfbe8
   19b98:	movw	r3, #216	; 0xd8
   19b9c:	movt	r1, #5
   19ba0:	movt	r3, #6
   19ba4:	mov	r0, #1
   19ba8:	bl	1132c <__printf_chk@plt>
   19bac:	mov	fp, r9
   19bb0:	ldr	r2, [sp, #20]
   19bb4:	mov	r0, fp
   19bb8:	ldr	r3, [r8]
   19bbc:	cmp	r2, r3
   19bc0:	bne	19c14 <__assert_fail@plt+0x8810>
   19bc4:	add	sp, sp, #28
   19bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19bcc:	mov	r2, sl
   19bd0:	movw	r1, #64480	; 0xfbe0
   19bd4:	mov	r0, #1
   19bd8:	movt	r1, #5
   19bdc:	bl	1132c <__printf_chk@plt>
   19be0:	sub	r4, r4, #1
   19be4:	bl	111d0 <__ctype_get_mb_cur_max@plt>
   19be8:	mov	r1, sl
   19bec:	add	r3, sp, #12
   19bf0:	add	fp, fp, #1
   19bf4:	mov	r2, r0
   19bf8:	add	r0, sp, #8
   19bfc:	bl	11200 <mbrtowc@plt>
   19c00:	sub	r0, r0, #1
   19c04:	cmn	r0, #4
   19c08:	addls	r5, r5, r0
   19c0c:	mov	sl, r5
   19c10:	b	19b2c <__assert_fail@plt+0x8728>
   19c14:	bl	1117c <__stack_chk_fail@plt>
   19c18:	movw	r0, #64452	; 0xfbc4
   19c1c:	movw	r1, #64464	; 0xfbd0
   19c20:	movt	r0, #5
   19c24:	movt	r1, #5
   19c28:	movw	r2, #486	; 0x1e6
   19c2c:	ldr	r3, [pc]	; 19c34 <__assert_fail@plt+0x8830>
   19c30:	bl	11404 <__assert_fail@plt>
   19c34:	andeq	r4, r5, r0, ror #28
   19c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c3c:	movw	r6, #16712	; 0x4148
   19c40:	movt	r6, #9
   19c44:	movw	r4, #16680	; 0x4128
   19c48:	movt	r4, #9
   19c4c:	sub	sp, sp, #132	; 0x84
   19c50:	ldr	r1, [r6, #68]	; 0x44
   19c54:	mov	r2, #0
   19c58:	ldr	r3, [r4]
   19c5c:	cmp	r1, r2
   19c60:	str	r4, [sp, #40]	; 0x28
   19c64:	str	r0, [sp, #44]	; 0x2c
   19c68:	str	r2, [r6, #220]	; 0xdc
   19c6c:	str	r3, [sp, #124]	; 0x7c
   19c70:	bne	19cac <__assert_fail@plt+0x88a8>
   19c74:	ldrd	r2, [r6, #32]
   19c78:	orrs	r5, r2, r3
   19c7c:	bne	1a1b8 <__assert_fail@plt+0x8db4>
   19c80:	ldr	r3, [r6, #1864]	; 0x748
   19c84:	cmp	r3, #0
   19c88:	bne	1a854 <__assert_fail@plt+0x9450>
   19c8c:	mov	r0, #1
   19c90:	ldr	fp, [sp, #40]	; 0x28
   19c94:	ldr	r2, [sp, #124]	; 0x7c
   19c98:	ldr	r3, [fp]
   19c9c:	cmp	r2, r3
   19ca0:	bne	1b390 <__assert_fail@plt+0x9f8c>
   19ca4:	add	sp, sp, #132	; 0x84
   19ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cac:	ldr	r3, [r6, #1864]	; 0x748
   19cb0:	cmp	r3, #0
   19cb4:	beq	19cc4 <__assert_fail@plt+0x88c0>
   19cb8:	ldr	r0, [r6, #1868]	; 0x74c
   19cbc:	cmp	r0, #0
   19cc0:	beq	1a1d8 <__assert_fail@plt+0x8dd4>
   19cc4:	ldr	r1, [r6, #460]	; 0x1cc
   19cc8:	ldr	r0, [sp, #44]	; 0x2c
   19ccc:	cmp	r1, #0
   19cd0:	beq	1a174 <__assert_fail@plt+0x8d70>
   19cd4:	mov	r1, #0
   19cd8:	bl	15ef0 <__assert_fail@plt+0x4aec>
   19cdc:	cmp	r0, #0
   19ce0:	beq	1a180 <__assert_fail@plt+0x8d7c>
   19ce4:	ldr	r3, [r6, #72]	; 0x48
   19ce8:	movw	r7, #16712	; 0x4148
   19cec:	movt	r7, #9
   19cf0:	cmp	r3, #0
   19cf4:	beq	19d68 <__assert_fail@plt+0x8964>
   19cf8:	ldr	r2, [r7, #68]	; 0x44
   19cfc:	cmp	r3, r2
   19d00:	bcs	19d68 <__assert_fail@plt+0x8964>
   19d04:	add	r3, r3, r3, lsl #3
   19d08:	ldr	r9, [r7, #220]	; 0xdc
   19d0c:	add	r8, r9, r3, lsl #3
   19d10:	ldrd	r4, [r8, #32]
   19d14:	orrs	sl, r4, r5
   19d18:	beq	19d6c <__assert_fail@plt+0x8968>
   19d1c:	mov	r2, #5
   19d20:	movw	r1, #3532	; 0xdcc
   19d24:	mov	r0, #0
   19d28:	movt	r1, #6
   19d2c:	ldr	r9, [r8, #24]
   19d30:	bl	11170 <dcgettext@plt>
   19d34:	strd	r4, [sp, #8]
   19d38:	mov	r4, #1
   19d3c:	mov	r5, #0
   19d40:	ldr	r1, [sp, #44]	; 0x2c
   19d44:	strd	r4, [sp]
   19d48:	mov	r2, r9
   19d4c:	str	r0, [sp, #16]
   19d50:	mov	r0, #0
   19d54:	bl	1502c <__assert_fail@plt+0x3c28>
   19d58:	cmp	r0, #0
   19d5c:	str	r0, [r7, #212]	; 0xd4
   19d60:	ldrne	r0, [r8, #32]
   19d64:	str	r0, [r6, #216]	; 0xd8
   19d68:	ldr	r9, [r6, #220]	; 0xdc
   19d6c:	ldr	r1, [r6, #460]	; 0x1cc
   19d70:	movw	r4, #26448	; 0x6750
   19d74:	ldrh	r2, [r6, #50]	; 0x32
   19d78:	movt	r4, #9
   19d7c:	cmp	r1, #0
   19d80:	mov	r3, #0
   19d84:	str	r3, [r6, #1872]	; 0x750
   19d88:	moveq	r1, #8
   19d8c:	movne	r1, #4
   19d90:	cmp	r2, #47	; 0x2f
   19d94:	str	r1, [r4]
   19d98:	str	r3, [r6, #1876]	; 0x754
   19d9c:	movw	r1, #16712	; 0x4148
   19da0:	str	r3, [r6, #1880]	; 0x758
   19da4:	movt	r1, #9
   19da8:	str	r3, [r6, #464]	; 0x1d0
   19dac:	bhi	1a188 <__assert_fail@plt+0x8d84>
   19db0:	cmp	r2, #46	; 0x2e
   19db4:	bcs	1aaec <__assert_fail@plt+0x96e8>
   19db8:	cmp	r2, #8
   19dbc:	beq	1a200 <__assert_fail@plt+0x8dfc>
   19dc0:	cmp	r2, #10
   19dc4:	beq	1a200 <__assert_fail@plt+0x8dfc>
   19dc8:	ldr	r3, [r6, #68]	; 0x44
   19dcc:	movw	fp, #16712	; 0x4148
   19dd0:	movt	fp, #9
   19dd4:	cmp	r3, #0
   19dd8:	beq	1ab1c <__assert_fail@plt+0x9718>
   19ddc:	add	sl, r9, #72	; 0x48
   19de0:	cmp	r9, #0
   19de4:	movw	r4, #26480	; 0x6770
   19de8:	movw	r5, #26464	; 0x6760
   19dec:	movt	r4, #9
   19df0:	movt	r5, #9
   19df4:	str	r4, [sp, #48]	; 0x30
   19df8:	mov	r8, sl
   19dfc:	str	r5, [sp, #52]	; 0x34
   19e00:	mov	r7, #0
   19e04:	beq	1a128 <__assert_fail@plt+0x8d24>
   19e08:	ldr	r0, [r6, #212]	; 0xd4
   19e0c:	cmp	r0, #0
   19e10:	beq	1a834 <__assert_fail@plt+0x9430>
   19e14:	ldr	r3, [r8, #-72]	; 0xffffffb8
   19e18:	ldr	r2, [fp, #216]	; 0xd8
   19e1c:	cmp	r3, r2
   19e20:	addcc	r4, r0, r3
   19e24:	bcs	1a22c <__assert_fail@plt+0x8e28>
   19e28:	ldr	r3, [r8, #-68]	; 0xffffffbc
   19e2c:	cmp	r3, #11
   19e30:	beq	1a14c <__assert_fail@plt+0x8d48>
   19e34:	cmp	r3, #3
   19e38:	beq	1a248 <__assert_fail@plt+0x8e44>
   19e3c:	cmp	r3, #18
   19e40:	beq	1a75c <__assert_fail@plt+0x9358>
   19e44:	cmp	r3, #2
   19e48:	beq	1a284 <__assert_fail@plt+0x8e80>
   19e4c:	cmp	r3, #17
   19e50:	beq	1a308 <__assert_fail@plt+0x8f04>
   19e54:	cmp	r3, #9
   19e58:	beq	1a81c <__assert_fail@plt+0x9418>
   19e5c:	cmp	r3, #4
   19e60:	beq	1a6a4 <__assert_fail@plt+0x92a0>
   19e64:	ldr	r5, [r6, #1892]	; 0x764
   19e68:	cmp	r5, #0
   19e6c:	bne	19f74 <__assert_fail@plt+0x8b70>
   19e70:	movw	r3, #26412	; 0x672c
   19e74:	movt	r3, #9
   19e78:	ldr	r3, [r3]
   19e7c:	cmp	r3, #0
   19e80:	bne	19f74 <__assert_fail@plt+0x8b70>
   19e84:	movw	r3, #26432	; 0x6740
   19e88:	movt	r3, #9
   19e8c:	ldr	r3, [r3]
   19e90:	cmp	r3, #0
   19e94:	bne	19f74 <__assert_fail@plt+0x8b70>
   19e98:	movw	r3, #26456	; 0x6758
   19e9c:	movt	r3, #9
   19ea0:	ldr	r3, [r3]
   19ea4:	cmp	r3, #0
   19ea8:	bne	19f74 <__assert_fail@plt+0x8b70>
   19eac:	movw	r3, #26424	; 0x6738
   19eb0:	movt	r3, #9
   19eb4:	ldr	r3, [r3]
   19eb8:	cmp	r3, #0
   19ebc:	bne	19f74 <__assert_fail@plt+0x8b70>
   19ec0:	movw	r3, #26468	; 0x6764
   19ec4:	movt	r3, #9
   19ec8:	ldr	r3, [r3]
   19ecc:	cmp	r3, #0
   19ed0:	bne	19f74 <__assert_fail@plt+0x8b70>
   19ed4:	movw	r3, #26416	; 0x6730
   19ed8:	movt	r3, #9
   19edc:	ldr	r3, [r3]
   19ee0:	cmp	r3, #0
   19ee4:	bne	19f74 <__assert_fail@plt+0x8b70>
   19ee8:	movw	r3, #26420	; 0x6734
   19eec:	movt	r3, #9
   19ef0:	ldr	r3, [r3]
   19ef4:	cmp	r3, #0
   19ef8:	bne	19f74 <__assert_fail@plt+0x8b70>
   19efc:	movw	r3, #26472	; 0x6768
   19f00:	movt	r3, #9
   19f04:	ldr	r3, [r3]
   19f08:	cmp	r3, #0
   19f0c:	bne	19f74 <__assert_fail@plt+0x8b70>
   19f10:	movw	r3, #26408	; 0x6728
   19f14:	movt	r3, #9
   19f18:	ldr	r3, [r3]
   19f1c:	cmp	r3, #0
   19f20:	bne	19f74 <__assert_fail@plt+0x8b70>
   19f24:	movw	r3, #26428	; 0x673c
   19f28:	movt	r3, #9
   19f2c:	ldr	r3, [r3]
   19f30:	cmp	r3, #0
   19f34:	bne	19f74 <__assert_fail@plt+0x8b70>
   19f38:	movw	r3, #26460	; 0x675c
   19f3c:	movt	r3, #9
   19f40:	ldr	r3, [r3]
   19f44:	cmp	r3, #0
   19f48:	bne	19f74 <__assert_fail@plt+0x8b70>
   19f4c:	movw	r3, #26436	; 0x6744
   19f50:	movt	r3, #9
   19f54:	ldr	r3, [r3]
   19f58:	cmp	r3, #0
   19f5c:	bne	19f74 <__assert_fail@plt+0x8b70>
   19f60:	movw	r3, #26484	; 0x6774
   19f64:	movt	r3, #9
   19f68:	ldr	r3, [r3]
   19f6c:	cmp	r3, #0
   19f70:	beq	1a010 <__assert_fail@plt+0x8c0c>
   19f74:	movw	r1, #64980	; 0xfdd4
   19f78:	mov	r0, r4
   19f7c:	movt	r1, #5
   19f80:	mov	r2, #7
   19f84:	bl	113e0 <strncmp@plt>
   19f88:	cmp	r0, #0
   19f8c:	beq	1a380 <__assert_fail@plt+0x8f7c>
   19f90:	movw	r1, #64988	; 0xfddc
   19f94:	mov	r0, r4
   19f98:	movt	r1, #5
   19f9c:	mov	r2, #8
   19fa0:	bl	113e0 <strncmp@plt>
   19fa4:	cmp	r0, #0
   19fa8:	beq	1a380 <__assert_fail@plt+0x8f7c>
   19fac:	cmp	r5, #0
   19fb0:	bne	19fc8 <__assert_fail@plt+0x8bc4>
   19fb4:	movw	r3, #26412	; 0x672c
   19fb8:	movt	r3, #9
   19fbc:	ldr	r3, [r3]
   19fc0:	cmp	r3, #0
   19fc4:	beq	19fe4 <__assert_fail@plt+0x8be0>
   19fc8:	movw	r1, #65032	; 0xfe08
   19fcc:	mov	r0, r4
   19fd0:	movt	r1, #5
   19fd4:	mov	r2, #17
   19fd8:	bl	113e0 <strncmp@plt>
   19fdc:	cmp	r0, #0
   19fe0:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   19fe4:	movw	r3, #26420	; 0x6734
   19fe8:	movt	r3, #9
   19fec:	ldr	r3, [r3]
   19ff0:	cmp	r3, #0
   19ff4:	beq	1a010 <__assert_fail@plt+0x8c0c>
   19ff8:	movw	r1, #65052	; 0xfe1c
   19ffc:	mov	r0, r4
   1a000:	movt	r1, #5
   1a004:	bl	110f8 <strcmp@plt>
   1a008:	cmp	r0, #0
   1a00c:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a010:	ldr	r0, [sp, #48]	; 0x30
   1a014:	ldr	r3, [r0]
   1a018:	cmp	r3, #0
   1a01c:	beq	1a038 <__assert_fail@plt+0x8c34>
   1a020:	movw	r1, #65064	; 0xfe28
   1a024:	mov	r0, r4
   1a028:	movt	r1, #5
   1a02c:	bl	110f8 <strcmp@plt>
   1a030:	cmp	r0, #0
   1a034:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a038:	cmp	r5, #0
   1a03c:	bne	1abc4 <__assert_fail@plt+0x97c0>
   1a040:	ldr	r5, [sp, #52]	; 0x34
   1a044:	ldr	r3, [r5]
   1a048:	cmp	r3, #0
   1a04c:	beq	1b344 <__assert_fail@plt+0x9f40>
   1a050:	movw	r1, #844	; 0x34c
   1a054:	mov	r0, r4
   1a058:	movt	r1, #6
   1a05c:	mov	r2, #7
   1a060:	bl	113e0 <strncmp@plt>
   1a064:	cmp	r0, #0
   1a068:	bne	1a0fc <__assert_fail@plt+0x8cf8>
   1a06c:	ldr	r5, [sp, #52]	; 0x34
   1a070:	add	r4, r4, #7
   1a074:	ldr	r3, [r5]
   1a078:	cmp	r3, #0
   1a07c:	beq	1a098 <__assert_fail@plt+0x8c94>
   1a080:	movw	r1, #62888	; 0xf5a8
   1a084:	mov	r0, r4
   1a088:	movt	r1, #5
   1a08c:	bl	110f8 <strcmp@plt>
   1a090:	cmp	r0, #0
   1a094:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a098:	movw	r3, #26452	; 0x6754
   1a09c:	movt	r3, #9
   1a0a0:	ldr	r3, [r3]
   1a0a4:	cmp	r3, #0
   1a0a8:	beq	1a0c4 <__assert_fail@plt+0x8cc0>
   1a0ac:	movw	r1, #46100	; 0xb414
   1a0b0:	mov	r0, r4
   1a0b4:	movt	r1, #7
   1a0b8:	bl	110f8 <strcmp@plt>
   1a0bc:	cmp	r0, #0
   1a0c0:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a0c4:	movw	r3, #26440	; 0x6748
   1a0c8:	movt	r3, #9
   1a0cc:	ldr	r3, [r3]
   1a0d0:	cmp	r3, #0
   1a0d4:	beq	1a0fc <__assert_fail@plt+0x8cf8>
   1a0d8:	mov	r0, r4
   1a0dc:	movw	r1, #46132	; 0xb434
   1a0e0:	movt	r1, #7
   1a0e4:	bl	110f8 <strcmp@plt>
   1a0e8:	cmp	r0, #0
   1a0ec:	bne	1a0fc <__assert_fail@plt+0x8cf8>
   1a0f0:	mov	r0, r7
   1a0f4:	mov	r1, #4
   1a0f8:	bl	169f0 <__assert_fail@plt+0x55ec>
   1a0fc:	ldr	r2, [r6, #68]	; 0x44
   1a100:	add	r7, r7, #1
   1a104:	movw	r3, #16712	; 0x4148
   1a108:	add	r8, r8, #72	; 0x48
   1a10c:	cmp	r2, r7
   1a110:	movt	r3, #9
   1a114:	mov	r9, sl
   1a118:	bls	1a6c4 <__assert_fail@plt+0x92c0>
   1a11c:	cmp	r9, #0
   1a120:	add	sl, sl, #72	; 0x48
   1a124:	bne	19e08 <__assert_fail@plt+0x8a04>
   1a128:	movw	r1, #50888	; 0xc6c8
   1a12c:	mov	r0, r9
   1a130:	movt	r1, #5
   1a134:	mov	r2, #5
   1a138:	bl	11170 <dcgettext@plt>
   1a13c:	ldr	r3, [r8, #-68]	; 0xffffffbc
   1a140:	cmp	r3, #11
   1a144:	mov	r4, r0
   1a148:	bne	19e34 <__assert_fail@plt+0x8a30>
   1a14c:	ldr	r3, [r6, #1872]	; 0x750
   1a150:	cmp	r3, #0
   1a154:	beq	1a778 <__assert_fail@plt+0x9374>
   1a158:	mov	r2, #5
   1a15c:	movw	r1, #64756	; 0xfcf4
   1a160:	mov	r0, #0
   1a164:	movt	r1, #5
   1a168:	bl	11170 <dcgettext@plt>
   1a16c:	bl	4b2b0 <error@@Base>
   1a170:	b	1a0fc <__assert_fail@plt+0x8cf8>
   1a174:	bl	161f8 <__assert_fail@plt+0x4df4>
   1a178:	cmp	r0, #0
   1a17c:	bne	19ce4 <__assert_fail@plt+0x88e0>
   1a180:	mov	r0, #0
   1a184:	b	19c90 <__assert_fail@plt+0x888c>
   1a188:	cmp	r2, #120	; 0x78
   1a18c:	beq	1a19c <__assert_fail@plt+0x8d98>
   1a190:	movw	r3, #65200	; 0xfeb0
   1a194:	cmp	r2, r3
   1a198:	bne	19dc8 <__assert_fail@plt+0x89c4>
   1a19c:	ldr	r3, [r6, #44]	; 0x2c
   1a1a0:	and	r3, r3, #127	; 0x7f
   1a1a4:	cmp	r3, #117	; 0x75
   1a1a8:	bne	19dc8 <__assert_fail@plt+0x89c4>
   1a1ac:	mov	r3, #2
   1a1b0:	str	r3, [r4]
   1a1b4:	b	19dc8 <__assert_fail@plt+0x89c4>
   1a1b8:	mov	r0, r1
   1a1bc:	mov	r2, #5
   1a1c0:	movw	r1, #64532	; 0xfc14
   1a1c4:	movt	r1, #5
   1a1c8:	bl	11170 <dcgettext@plt>
   1a1cc:	bl	4b9ec <warn@@Base>
   1a1d0:	mov	r0, #1
   1a1d4:	b	19c90 <__assert_fail@plt+0x888c>
   1a1d8:	mov	r2, #5
   1a1dc:	movw	r1, #64672	; 0xfca0
   1a1e0:	movt	r1, #5
   1a1e4:	bl	11170 <dcgettext@plt>
   1a1e8:	ldr	r2, [r6, #68]	; 0x44
   1a1ec:	ldr	r3, [r6, #32]
   1a1f0:	mov	r1, r0
   1a1f4:	mov	r0, #1
   1a1f8:	bl	1132c <__printf_chk@plt>
   1a1fc:	b	19cc4 <__assert_fail@plt+0x88c0>
   1a200:	ldr	r3, [r6, #44]	; 0x2c
   1a204:	and	r3, r3, #61440	; 0xf000
   1a208:	cmp	r3, #16384	; 0x4000
   1a20c:	bne	19dc8 <__assert_fail@plt+0x89c4>
   1a210:	movw	r0, #64732	; 0xfcdc
   1a214:	movt	r0, #5
   1a218:	bl	13438 <__assert_fail@plt+0x2034>
   1a21c:	cmp	r0, #0
   1a220:	moveq	r3, #8
   1a224:	streq	r3, [r4]
   1a228:	b	19dc8 <__assert_fail@plt+0x89c4>
   1a22c:	movw	r1, #50908	; 0xc6dc
   1a230:	mov	r0, #0
   1a234:	movt	r1, #5
   1a238:	mov	r2, #5
   1a23c:	bl	11170 <dcgettext@plt>
   1a240:	mov	r4, r0
   1a244:	b	19e28 <__assert_fail@plt+0x8a24>
   1a248:	movw	r1, #64908	; 0xfd8c
   1a24c:	mov	r0, r4
   1a250:	movt	r1, #5
   1a254:	bl	110f8 <strcmp@plt>
   1a258:	cmp	r0, #0
   1a25c:	bne	19e64 <__assert_fail@plt+0x8a60>
   1a260:	ldr	r3, [r6, #1876]	; 0x754
   1a264:	cmp	r3, #0
   1a268:	beq	1b22c <__assert_fail@plt+0x9e28>
   1a26c:	mov	r2, #5
   1a270:	movw	r1, #64916	; 0xfd94
   1a274:	movt	r1, #5
   1a278:	bl	11170 <dcgettext@plt>
   1a27c:	bl	4b2b0 <error@@Base>
   1a280:	b	1a0fc <__assert_fail@plt+0x8cf8>
   1a284:	ldr	r3, [r6, #460]	; 0x1cc
   1a288:	cmp	r3, #0
   1a28c:	beq	1a6b8 <__assert_fail@plt+0x92b4>
   1a290:	mov	r4, #16
   1a294:	mov	r5, #0
   1a298:	ldrd	r2, [r9, #56]	; 0x38
   1a29c:	cmp	r5, r3
   1a2a0:	cmpeq	r4, r2
   1a2a4:	beq	1a0fc <__assert_fail@plt+0x8cf8>
   1a2a8:	strd	r2, [sp]
   1a2ac:	mov	r1, #1
   1a2b0:	mov	r2, #40	; 0x28
   1a2b4:	movw	r3, #61492	; 0xf034
   1a2b8:	add	r0, sp, #84	; 0x54
   1a2bc:	movt	r3, #5
   1a2c0:	bl	112cc <__sprintf_chk@plt>
   1a2c4:	mov	r2, #5
   1a2c8:	movw	r1, #64804	; 0xfd24
   1a2cc:	mov	r0, #0
   1a2d0:	movt	r1, #5
   1a2d4:	bl	11170 <dcgettext@plt>
   1a2d8:	mov	r1, r7
   1a2dc:	add	r2, sp, #84	; 0x54
   1a2e0:	bl	4b2b0 <error@@Base>
   1a2e4:	mov	r2, #5
   1a2e8:	movw	r1, #64848	; 0xfd50
   1a2ec:	mov	r0, #0
   1a2f0:	movt	r1, #5
   1a2f4:	bl	11170 <dcgettext@plt>
   1a2f8:	mov	r1, r4
   1a2fc:	bl	4b2b0 <error@@Base>
   1a300:	strd	r4, [r9, #56]	; 0x38
   1a304:	b	1a0fc <__assert_fail@plt+0x8cf8>
   1a308:	ldrd	r2, [r9, #56]	; 0x38
   1a30c:	cmp	r3, #0
   1a310:	cmpeq	r2, #4
   1a314:	beq	1a0fc <__assert_fail@plt+0x8cf8>
   1a318:	strd	r2, [sp]
   1a31c:	mov	r1, #1
   1a320:	mov	r2, #40	; 0x28
   1a324:	movw	r3, #61492	; 0xf034
   1a328:	add	r0, sp, #84	; 0x54
   1a32c:	movt	r3, #5
   1a330:	bl	112cc <__sprintf_chk@plt>
   1a334:	mov	r2, #5
   1a338:	movw	r1, #64804	; 0xfd24
   1a33c:	mov	r0, #0
   1a340:	movt	r1, #5
   1a344:	bl	11170 <dcgettext@plt>
   1a348:	mov	r1, r7
   1a34c:	add	r2, sp, #84	; 0x54
   1a350:	bl	4b2b0 <error@@Base>
   1a354:	mov	r2, #5
   1a358:	movw	r1, #64848	; 0xfd50
   1a35c:	mov	r0, #0
   1a360:	movt	r1, #5
   1a364:	bl	11170 <dcgettext@plt>
   1a368:	mov	r1, #4
   1a36c:	bl	4b2b0 <error@@Base>
   1a370:	mov	r2, #4
   1a374:	mov	r3, #0
   1a378:	strd	r2, [r9, #56]	; 0x38
   1a37c:	b	1a0fc <__assert_fail@plt+0x8cf8>
   1a380:	ldrb	r3, [r4, #1]
   1a384:	cmp	r3, #122	; 0x7a
   1a388:	addeq	r4, r4, #8
   1a38c:	addne	r4, r4, #7
   1a390:	cmp	r5, #0
   1a394:	bne	1a0f0 <__assert_fail@plt+0x8cec>
   1a398:	movw	r2, #26412	; 0x672c
   1a39c:	movt	r2, #9
   1a3a0:	ldr	r3, [r2]
   1a3a4:	cmp	r3, #0
   1a3a8:	beq	1a3e4 <__assert_fail@plt+0x8fe0>
   1a3ac:	movw	r1, #62888	; 0xf5a8
   1a3b0:	mov	r0, r4
   1a3b4:	movt	r1, #5
   1a3b8:	mov	r2, #4
   1a3bc:	bl	113e0 <strncmp@plt>
   1a3c0:	cmp	r0, #0
   1a3c4:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a3c8:	movw	r1, #46624	; 0xb620
   1a3cc:	mov	r0, r4
   1a3d0:	movt	r1, #7
   1a3d4:	mov	r2, #5
   1a3d8:	bl	113e0 <strncmp@plt>
   1a3dc:	cmp	r0, #0
   1a3e0:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a3e4:	movw	r3, #26432	; 0x6740
   1a3e8:	movt	r3, #9
   1a3ec:	ldr	r3, [r3]
   1a3f0:	cmp	r3, #0
   1a3f4:	beq	1a414 <__assert_fail@plt+0x9010>
   1a3f8:	movw	r1, #46100	; 0xb414
   1a3fc:	mov	r0, r4
   1a400:	movt	r1, #7
   1a404:	mov	r2, #6
   1a408:	bl	113e0 <strncmp@plt>
   1a40c:	cmp	r0, #0
   1a410:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a414:	movw	r3, #26456	; 0x6758
   1a418:	movt	r3, #9
   1a41c:	ldr	r3, [r3]
   1a420:	cmp	r3, #0
   1a424:	beq	1a45c <__assert_fail@plt+0x9058>
   1a428:	movw	r1, #46208	; 0xb480
   1a42c:	mov	r0, r4
   1a430:	movt	r1, #7
   1a434:	bl	110f8 <strcmp@plt>
   1a438:	cmp	r0, #0
   1a43c:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a440:	movw	r1, #65000	; 0xfde8
   1a444:	mov	r0, r4
   1a448:	movt	r1, #5
   1a44c:	mov	r2, #5
   1a450:	bl	113e0 <strncmp@plt>
   1a454:	cmp	r0, #0
   1a458:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a45c:	movw	r3, #26424	; 0x6738
   1a460:	movt	r3, #9
   1a464:	ldr	r5, [r3]
   1a468:	cmp	r5, #0
   1a46c:	bne	1abe4 <__assert_fail@plt+0x97e0>
   1a470:	movw	r3, #26468	; 0x6764
   1a474:	movt	r3, #9
   1a478:	ldr	r9, [r3]
   1a47c:	cmp	r9, #0
   1a480:	beq	1a4a0 <__assert_fail@plt+0x909c>
   1a484:	movw	r1, #46432	; 0xb560
   1a488:	mov	r0, r4
   1a48c:	movt	r1, #7
   1a490:	mov	r2, #8
   1a494:	bl	113e0 <strncmp@plt>
   1a498:	cmp	r0, #0
   1a49c:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a4a0:	cmp	r5, #0
   1a4a4:	beq	1a4c4 <__assert_fail@plt+0x90c0>
   1a4a8:	movw	r1, #46280	; 0xb4c8
   1a4ac:	mov	r0, r4
   1a4b0:	movt	r1, #7
   1a4b4:	mov	r2, #12
   1a4b8:	bl	113e0 <strncmp@plt>
   1a4bc:	cmp	r0, #0
   1a4c0:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a4c4:	cmp	r9, #0
   1a4c8:	beq	1a4e8 <__assert_fail@plt+0x90e4>
   1a4cc:	movw	r1, #46472	; 0xb588
   1a4d0:	mov	r0, r4
   1a4d4:	movt	r1, #7
   1a4d8:	mov	r2, #12
   1a4dc:	bl	113e0 <strncmp@plt>
   1a4e0:	cmp	r0, #0
   1a4e4:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a4e8:	movw	r3, #26416	; 0x6730
   1a4ec:	movt	r3, #9
   1a4f0:	ldr	r3, [r3]
   1a4f4:	cmp	r3, #0
   1a4f8:	beq	1a518 <__assert_fail@plt+0x9114>
   1a4fc:	movw	r1, #46132	; 0xb434
   1a500:	mov	r0, r4
   1a504:	movt	r1, #7
   1a508:	mov	r2, #7
   1a50c:	bl	113e0 <strncmp@plt>
   1a510:	cmp	r0, #0
   1a514:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a518:	movw	r3, #26460	; 0x675c
   1a51c:	movt	r3, #9
   1a520:	ldr	r3, [r3]
   1a524:	cmp	r3, #0
   1a528:	beq	1a548 <__assert_fail@plt+0x9144>
   1a52c:	movw	r1, #46512	; 0xb5b0
   1a530:	mov	r0, r4
   1a534:	movt	r1, #7
   1a538:	mov	r2, #6
   1a53c:	bl	113e0 <strncmp@plt>
   1a540:	cmp	r0, #0
   1a544:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a548:	movw	r3, #26420	; 0x6734
   1a54c:	movt	r3, #9
   1a550:	ldr	r3, [r3]
   1a554:	cmp	r3, #0
   1a558:	beq	1a578 <__assert_fail@plt+0x9174>
   1a55c:	movw	r1, #46164	; 0xb454
   1a560:	mov	r0, r4
   1a564:	movt	r1, #7
   1a568:	mov	r2, #5
   1a56c:	bl	113e0 <strncmp@plt>
   1a570:	cmp	r0, #0
   1a574:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a578:	movw	r3, #26472	; 0x6768
   1a57c:	movt	r3, #9
   1a580:	ldr	r3, [r3]
   1a584:	cmp	r3, #0
   1a588:	beq	1a5c4 <__assert_fail@plt+0x91c0>
   1a58c:	movw	r1, #46320	; 0xb4f0
   1a590:	mov	r0, r4
   1a594:	movt	r1, #7
   1a598:	mov	r2, #7
   1a59c:	bl	113e0 <strncmp@plt>
   1a5a0:	cmp	r0, #0
   1a5a4:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a5a8:	movw	r1, #46352	; 0xb510
   1a5ac:	mov	r0, r4
   1a5b0:	movt	r1, #7
   1a5b4:	mov	r2, #5
   1a5b8:	bl	113e0 <strncmp@plt>
   1a5bc:	cmp	r0, #0
   1a5c0:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a5c4:	movw	r3, #26408	; 0x6728
   1a5c8:	movt	r3, #9
   1a5cc:	ldr	r3, [r3]
   1a5d0:	cmp	r3, #0
   1a5d4:	beq	1a5f4 <__assert_fail@plt+0x91f0>
   1a5d8:	movw	r1, #46380	; 0xb52c
   1a5dc:	mov	r0, r4
   1a5e0:	movt	r1, #7
   1a5e4:	mov	r2, #3
   1a5e8:	bl	113e0 <strncmp@plt>
   1a5ec:	cmp	r0, #0
   1a5f0:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a5f4:	movw	r3, #26428	; 0x673c
   1a5f8:	movt	r3, #9
   1a5fc:	ldr	r3, [r3]
   1a600:	cmp	r3, #0
   1a604:	beq	1a624 <__assert_fail@plt+0x9220>
   1a608:	movw	r1, #46404	; 0xb544
   1a60c:	mov	r0, r4
   1a610:	movt	r1, #7
   1a614:	mov	r2, #3
   1a618:	bl	113e0 <strncmp@plt>
   1a61c:	cmp	r0, #0
   1a620:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a624:	movw	r3, #26436	; 0x6744
   1a628:	movt	r3, #9
   1a62c:	ldr	r3, [r3]
   1a630:	cmp	r3, #0
   1a634:	beq	1a654 <__assert_fail@plt+0x9250>
   1a638:	movw	r1, #53696	; 0xd1c0
   1a63c:	mov	r0, r4
   1a640:	movt	r1, #7
   1a644:	mov	r2, #4
   1a648:	bl	113e0 <strncmp@plt>
   1a64c:	cmp	r0, #0
   1a650:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a654:	movw	r3, #26484	; 0x6774
   1a658:	movt	r3, #9
   1a65c:	ldr	r3, [r3]
   1a660:	cmp	r3, #0
   1a664:	beq	1a0fc <__assert_fail@plt+0x8cf8>
   1a668:	movw	r1, #65008	; 0xfdf0
   1a66c:	mov	r0, r4
   1a670:	movt	r1, #5
   1a674:	mov	r2, #8
   1a678:	bl	113e0 <strncmp@plt>
   1a67c:	cmp	r0, #0
   1a680:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1a684:	mov	r0, r4
   1a688:	movw	r1, #65020	; 0xfdfc
   1a68c:	mov	r2, #8
   1a690:	movt	r1, #5
   1a694:	bl	113e0 <strncmp@plt>
   1a698:	cmp	r0, #0
   1a69c:	bne	1a0fc <__assert_fail@plt+0x8cf8>
   1a6a0:	b	1a0f0 <__assert_fail@plt+0x8cec>
   1a6a4:	ldr	r3, [r6, #460]	; 0x1cc
   1a6a8:	cmp	r3, #0
   1a6ac:	movne	r4, #12
   1a6b0:	movne	r5, #0
   1a6b4:	bne	1a298 <__assert_fail@plt+0x8e94>
   1a6b8:	mov	r4, #24
   1a6bc:	mov	r5, #0
   1a6c0:	b	1a298 <__assert_fail@plt+0x8e94>
   1a6c4:	ldr	r3, [r3, #1864]	; 0x748
   1a6c8:	cmp	r3, #0
   1a6cc:	beq	19c8c <__assert_fail@plt+0x8888>
   1a6d0:	cmp	r2, #1
   1a6d4:	bls	1ab28 <__assert_fail@plt+0x9724>
   1a6d8:	movw	r1, #65076	; 0xfe34
   1a6dc:	movt	r1, #5
   1a6e0:	mov	r0, #0
   1a6e4:	mov	r2, #5
   1a6e8:	bl	11170 <dcgettext@plt>
   1a6ec:	mov	r1, r0
   1a6f0:	mov	r0, #1
   1a6f4:	bl	1132c <__printf_chk@plt>
   1a6f8:	ldr	r4, [r6, #460]	; 0x1cc
   1a6fc:	movw	r3, #16712	; 0x4148
   1a700:	movt	r3, #9
   1a704:	cmp	r4, #0
   1a708:	beq	1a87c <__assert_fail@plt+0x9478>
   1a70c:	ldr	r0, [r3, #1604]	; 0x644
   1a710:	cmp	r0, #0
   1a714:	beq	1ab88 <__assert_fail@plt+0x9784>
   1a718:	mov	r2, #5
   1a71c:	movw	r1, #65116	; 0xfe5c
   1a720:	mov	r0, #0
   1a724:	movt	r1, #5
   1a728:	bl	11170 <dcgettext@plt>
   1a72c:	mov	r1, r0
   1a730:	mov	r0, #1
   1a734:	bl	1132c <__printf_chk@plt>
   1a738:	mov	r2, #5
   1a73c:	movw	r1, #65132	; 0xfe6c
   1a740:	mov	r0, #0
   1a744:	movt	r1, #5
   1a748:	bl	11170 <dcgettext@plt>
   1a74c:	mov	r1, r0
   1a750:	mov	r0, #1
   1a754:	bl	1132c <__printf_chk@plt>
   1a758:	b	1a8fc <__assert_fail@plt+0x94f8>
   1a75c:	mov	r0, #8
   1a760:	bl	4eba0 <warn@@Base+0x31b4>
   1a764:	ldr	r3, [r6, #464]	; 0x1d0
   1a768:	str	r9, [r0]
   1a76c:	str	r0, [r6, #464]	; 0x1d0
   1a770:	str	r3, [r0, #4]
   1a774:	b	1a0fc <__assert_fail@plt+0x8cf8>
   1a778:	ldr	r1, [fp, #460]	; 0x1cc
   1a77c:	mov	r5, #0
   1a780:	ldrd	r2, [r9, #56]	; 0x38
   1a784:	cmp	r1, #0
   1a788:	moveq	r4, #24
   1a78c:	movne	r4, #16
   1a790:	cmp	r5, r3
   1a794:	cmpeq	r4, r2
   1a798:	beq	1a7fc <__assert_fail@plt+0x93f8>
   1a79c:	strd	r2, [sp]
   1a7a0:	mov	r1, #1
   1a7a4:	mov	r2, #40	; 0x28
   1a7a8:	movw	r3, #61492	; 0xf034
   1a7ac:	add	r0, sp, #84	; 0x54
   1a7b0:	movt	r3, #5
   1a7b4:	bl	112cc <__sprintf_chk@plt>
   1a7b8:	mov	r2, #5
   1a7bc:	movw	r1, #64804	; 0xfd24
   1a7c0:	mov	r0, #0
   1a7c4:	movt	r1, #5
   1a7c8:	bl	11170 <dcgettext@plt>
   1a7cc:	mov	r1, r7
   1a7d0:	add	r2, sp, #84	; 0x54
   1a7d4:	bl	4b2b0 <error@@Base>
   1a7d8:	mov	r2, #5
   1a7dc:	movw	r1, #64848	; 0xfd50
   1a7e0:	mov	r0, #0
   1a7e4:	movt	r1, #5
   1a7e8:	bl	11170 <dcgettext@plt>
   1a7ec:	mov	r1, r4
   1a7f0:	bl	4b2b0 <error@@Base>
   1a7f4:	ldr	r1, [r6, #460]	; 0x1cc
   1a7f8:	strd	r4, [r9, #56]	; 0x38
   1a7fc:	cmp	r1, #0
   1a800:	ldr	r0, [sp, #44]	; 0x2c
   1a804:	mov	r1, r9
   1a808:	ldr	r2, [pc, #2948]	; 1b394 <__assert_fail@plt+0x9f90>
   1a80c:	beq	1a84c <__assert_fail@plt+0x9448>
   1a810:	bl	155f4 <__assert_fail@plt+0x41f0>
   1a814:	str	r0, [r6, #1872]	; 0x750
   1a818:	b	1a0fc <__assert_fail@plt+0x8cf8>
   1a81c:	ldr	r3, [r6, #460]	; 0x1cc
   1a820:	cmp	r3, #0
   1a824:	movne	r4, #8
   1a828:	movne	r5, #0
   1a82c:	bne	1a298 <__assert_fail@plt+0x8e94>
   1a830:	b	1a290 <__assert_fail@plt+0x8e8c>
   1a834:	movw	r1, #50896	; 0xc6d0
   1a838:	mov	r2, #5
   1a83c:	movt	r1, #5
   1a840:	bl	11170 <dcgettext@plt>
   1a844:	mov	r4, r0
   1a848:	b	19e28 <__assert_fail@plt+0x8a24>
   1a84c:	bl	15a6c <__assert_fail@plt+0x4668>
   1a850:	b	1a814 <__assert_fail@plt+0x9410>
   1a854:	mov	r0, r1
   1a858:	mov	r2, #5
   1a85c:	movw	r1, #64632	; 0xfc78
   1a860:	movt	r1, #5
   1a864:	bl	11170 <dcgettext@plt>
   1a868:	mov	r1, r0
   1a86c:	mov	r0, #1
   1a870:	bl	1132c <__printf_chk@plt>
   1a874:	mov	r0, #1
   1a878:	b	19c90 <__assert_fail@plt+0x888c>
   1a87c:	movw	sl, #26444	; 0x674c
   1a880:	movt	sl, #9
   1a884:	ldr	r5, [sl]
   1a888:	cmp	r5, #0
   1a88c:	bne	1ab38 <__assert_fail@plt+0x9734>
   1a890:	ldr	r4, [r3, #1604]	; 0x644
   1a894:	cmp	r4, #0
   1a898:	beq	1b300 <__assert_fail@plt+0x9efc>
   1a89c:	mov	r2, #5
   1a8a0:	movw	r1, #65116	; 0xfe5c
   1a8a4:	mov	r0, r5
   1a8a8:	movt	r1, #5
   1a8ac:	bl	11170 <dcgettext@plt>
   1a8b0:	mov	r1, r0
   1a8b4:	mov	r0, #1
   1a8b8:	bl	1132c <__printf_chk@plt>
   1a8bc:	mov	r2, #5
   1a8c0:	mov	r0, r5
   1a8c4:	movw	r1, #65444	; 0xffa4
   1a8c8:	movt	r1, #5
   1a8cc:	bl	11170 <dcgettext@plt>
   1a8d0:	mov	r1, r0
   1a8d4:	mov	r0, #1
   1a8d8:	bl	1132c <__printf_chk@plt>
   1a8dc:	mov	r0, r5
   1a8e0:	movw	r1, #65512	; 0xffe8
   1a8e4:	mov	r2, #5
   1a8e8:	movt	r1, #5
   1a8ec:	bl	11170 <dcgettext@plt>
   1a8f0:	mov	r1, r0
   1a8f4:	mov	r0, #1
   1a8f8:	bl	1132c <__printf_chk@plt>
   1a8fc:	ldr	r3, [r6, #1604]	; 0x644
   1a900:	cmp	r3, #0
   1a904:	bne	1b1ec <__assert_fail@plt+0x9de8>
   1a908:	ldr	r3, [r6, #68]	; 0x44
   1a90c:	ldr	r4, [r6, #220]	; 0xdc
   1a910:	cmp	r3, #0
   1a914:	beq	1b070 <__assert_fail@plt+0x9c6c>
   1a918:	add	r8, r4, #72	; 0x48
   1a91c:	movw	sl, #26444	; 0x674c
   1a920:	movw	r9, #16712	; 0x4148
   1a924:	movt	sl, #9
   1a928:	movt	r9, #9
   1a92c:	mov	r7, r8
   1a930:	mov	r5, #0
   1a934:	str	sl, [sp, #48]	; 0x30
   1a938:	b	1aaac <__assert_fail@plt+0x96a8>
   1a93c:	cmp	r4, #0
   1a940:	beq	1b1b4 <__assert_fail@plt+0x9db0>
   1a944:	ldr	r3, [r9, #212]	; 0xd4
   1a948:	cmp	r3, #0
   1a94c:	beq	1b1d0 <__assert_fail@plt+0x9dcc>
   1a950:	ldr	r1, [r7, #-72]	; 0xffffffb8
   1a954:	ldr	r2, [r9, #216]	; 0xd8
   1a958:	cmp	r1, r2
   1a95c:	addcc	r1, r3, r1
   1a960:	bcs	1afb8 <__assert_fail@plt+0x9bb4>
   1a964:	mvn	r0, #16
   1a968:	bl	19a8c <__assert_fail@plt+0x8688>
   1a96c:	ldr	sl, [sp, #48]	; 0x30
   1a970:	movw	r2, #64504	; 0xfbf8
   1a974:	movw	r3, #64496	; 0xfbf0
   1a978:	movt	r2, #5
   1a97c:	movt	r3, #5
   1a980:	ldr	r0, [r7, #-68]	; 0xffffffbc
   1a984:	ldr	fp, [sl]
   1a988:	cmp	fp, #0
   1a98c:	moveq	fp, r2
   1a990:	movne	fp, r3
   1a994:	bl	18be0 <__assert_fail@plt+0x77dc>
   1a998:	mov	r1, fp
   1a99c:	mov	r2, r0
   1a9a0:	mov	r0, #1
   1a9a4:	bl	1132c <__printf_chk@plt>
   1a9a8:	ldr	r3, [r6, #460]	; 0x1cc
   1a9ac:	cmp	r3, #0
   1a9b0:	bne	1ace8 <__assert_fail@plt+0x98e4>
   1a9b4:	ldr	sl, [sp, #48]	; 0x30
   1a9b8:	ldr	r3, [sl]
   1a9bc:	cmp	r3, #0
   1a9c0:	bne	1ae88 <__assert_fail@plt+0x9a84>
   1a9c4:	ldr	r3, [r9, #1604]	; 0x644
   1a9c8:	cmp	r3, #0
   1a9cc:	beq	1adbc <__assert_fail@plt+0x99b8>
   1a9d0:	ldr	r0, [r7, #-68]	; 0xffffffbc
   1a9d4:	bl	18be0 <__assert_fail@plt+0x77dc>
   1a9d8:	movw	r1, #384	; 0x180
   1a9dc:	movt	r1, #6
   1a9e0:	mov	r2, r0
   1a9e4:	mov	r0, #1
   1a9e8:	bl	1132c <__printf_chk@plt>
   1a9ec:	ldrd	r0, [r4, #16]
   1a9f0:	mov	r2, #6
   1a9f4:	bl	16c84 <__assert_fail@plt+0x5880>
   1a9f8:	ldrd	r2, [r4, #24]
   1a9fc:	asr	r1, r2, #31
   1aa00:	mov	r0, r2
   1aa04:	cmp	r3, r1
   1aa08:	cmpeq	r2, r0
   1aa0c:	beq	1b138 <__assert_fail@plt+0x9d34>
   1aa10:	movw	r1, #6840	; 0x1ab8
   1aa14:	mov	r0, #1
   1aa18:	movt	r1, #6
   1aa1c:	bl	1132c <__printf_chk@plt>
   1aa20:	ldrd	r0, [r4, #24]
   1aa24:	mov	r2, #6
   1aa28:	bl	16c84 <__assert_fail@plt+0x5880>
   1aa2c:	ldr	r2, [r4, #40]	; 0x28
   1aa30:	movw	r1, #416	; 0x1a0
   1aa34:	mov	r0, #1
   1aa38:	movt	r1, #6
   1aa3c:	bl	1132c <__printf_chk@plt>
   1aa40:	mov	r2, #6
   1aa44:	ldrd	r0, [r4, #32]
   1aa48:	bl	16c84 <__assert_fail@plt+0x5880>
   1aa4c:	movw	r3, #16696	; 0x4138
   1aa50:	movt	r3, #9
   1aa54:	mov	r0, #32
   1aa58:	ldr	r1, [r3]
   1aa5c:	bl	111ac <_IO_putc@plt>
   1aa60:	ldrd	r0, [r4, #56]	; 0x38
   1aa64:	mov	r2, #6
   1aa68:	bl	16c84 <__assert_fail@plt+0x5880>
   1aa6c:	movw	r1, #432	; 0x1b0
   1aa70:	mov	r0, #1
   1aa74:	movt	r1, #6
   1aa78:	ldr	r2, [r4, #44]	; 0x2c
   1aa7c:	ldr	r3, [r4, #48]	; 0x30
   1aa80:	bl	1132c <__printf_chk@plt>
   1aa84:	ldr	r3, [r6, #1604]	; 0x644
   1aa88:	cmp	r3, #0
   1aa8c:	bne	1ac04 <__assert_fail@plt+0x9800>
   1aa90:	ldr	r3, [r6, #68]	; 0x44
   1aa94:	add	r5, r5, #1
   1aa98:	add	r7, r7, #72	; 0x48
   1aa9c:	mov	r4, r8
   1aaa0:	cmp	r3, r5
   1aaa4:	bls	1b070 <__assert_fail@plt+0x9c6c>
   1aaa8:	add	r8, r8, #72	; 0x48
   1aaac:	movw	r1, #196	; 0xc4
   1aab0:	mov	r0, #1
   1aab4:	movt	r1, #6
   1aab8:	mov	r2, r5
   1aabc:	bl	1132c <__printf_chk@plt>
   1aac0:	ldr	r0, [r6, #1604]	; 0x644
   1aac4:	cmp	r0, #0
   1aac8:	beq	1a93c <__assert_fail@plt+0x9538>
   1aacc:	mov	r0, r4
   1aad0:	bl	132f8 <__assert_fail@plt+0x1ef4>
   1aad4:	movw	r1, #208	; 0xd0
   1aad8:	movt	r1, #6
   1aadc:	mov	r2, r0
   1aae0:	mov	r0, #1
   1aae4:	bl	1132c <__printf_chk@plt>
   1aae8:	b	1a96c <__assert_fail@plt+0x9568>
   1aaec:	ldr	r3, [r1, #44]	; 0x2c
   1aaf0:	and	r3, r3, #16711680	; 0xff0000
   1aaf4:	cmp	r3, #8585216	; 0x830000
   1aaf8:	beq	1a1ac <__assert_fail@plt+0x8da8>
   1aafc:	bhi	1aba8 <__assert_fail@plt+0x97a4>
   1ab00:	cmp	r3, #8454144	; 0x810000
   1ab04:	beq	1b2d4 <__assert_fail@plt+0x9ed0>
   1ab08:	cmp	r3, #8519680	; 0x820000
   1ab0c:	beq	1b2d4 <__assert_fail@plt+0x9ed0>
   1ab10:	cmp	r3, #8388608	; 0x800000
   1ab14:	bne	19dc8 <__assert_fail@plt+0x89c4>
   1ab18:	b	1a1ac <__assert_fail@plt+0x8da8>
   1ab1c:	ldr	r3, [fp, #1864]	; 0x748
   1ab20:	cmp	r3, #0
   1ab24:	beq	19c8c <__assert_fail@plt+0x8888>
   1ab28:	movw	r1, #65096	; 0xfe48
   1ab2c:	mov	r0, #0
   1ab30:	movt	r1, #5
   1ab34:	b	1a6e4 <__assert_fail@plt+0x92e0>
   1ab38:	ldr	r0, [r3, #1604]	; 0x644
   1ab3c:	cmp	r0, #0
   1ab40:	beq	1b2e0 <__assert_fail@plt+0x9edc>
   1ab44:	mov	r2, #5
   1ab48:	mov	r0, r4
   1ab4c:	movw	r1, #65116	; 0xfe5c
   1ab50:	movt	r1, #5
   1ab54:	bl	11170 <dcgettext@plt>
   1ab58:	mov	r1, r0
   1ab5c:	mov	r0, #1
   1ab60:	bl	1132c <__printf_chk@plt>
   1ab64:	mov	r0, r4
   1ab68:	mov	r2, #5
   1ab6c:	movw	r1, #65280	; 0xff00
   1ab70:	movt	r1, #5
   1ab74:	bl	11170 <dcgettext@plt>
   1ab78:	mov	r1, r0
   1ab7c:	mov	r0, #1
   1ab80:	bl	1132c <__printf_chk@plt>
   1ab84:	b	1a8fc <__assert_fail@plt+0x94f8>
   1ab88:	mov	r2, #5
   1ab8c:	movw	r1, #65196	; 0xfeac
   1ab90:	movt	r1, #5
   1ab94:	bl	11170 <dcgettext@plt>
   1ab98:	mov	r1, r0
   1ab9c:	mov	r0, #1
   1aba0:	bl	1132c <__printf_chk@plt>
   1aba4:	b	1a8fc <__assert_fail@plt+0x94f8>
   1aba8:	cmp	r3, #8716288	; 0x850000
   1abac:	beq	1b2d4 <__assert_fail@plt+0x9ed0>
   1abb0:	cmp	r3, #8781824	; 0x860000
   1abb4:	beq	1a1ac <__assert_fail@plt+0x8da8>
   1abb8:	cmp	r3, #8650752	; 0x840000
   1abbc:	bne	19dc8 <__assert_fail@plt+0x89c4>
   1abc0:	b	1a1ac <__assert_fail@plt+0x8da8>
   1abc4:	mov	r0, r4
   1abc8:	movw	r1, #844	; 0x34c
   1abcc:	mov	r2, #7
   1abd0:	movt	r1, #6
   1abd4:	bl	113e0 <strncmp@plt>
   1abd8:	cmp	r0, #0
   1abdc:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1abe0:	b	1a0fc <__assert_fail@plt+0x8cf8>
   1abe4:	movw	r1, #46240	; 0xb4a0
   1abe8:	mov	r0, r4
   1abec:	movt	r1, #7
   1abf0:	mov	r2, #8
   1abf4:	bl	113e0 <strncmp@plt>
   1abf8:	cmp	r0, #0
   1abfc:	beq	1a0f0 <__assert_fail@plt+0x8cec>
   1ac00:	b	1a470 <__assert_fail@plt+0x906c>
   1ac04:	ldrd	r0, [r4, #8]
   1ac08:	bl	17b64 <__assert_fail@plt+0x6760>
   1ac0c:	movw	r1, #484	; 0x1e4
   1ac10:	movt	r1, #6
   1ac14:	mov	r2, r0
   1ac18:	mov	r0, #1
   1ac1c:	bl	1132c <__printf_chk@plt>
   1ac20:	ldrd	r2, [r4, #8]
   1ac24:	mov	r0, #2048	; 0x800
   1ac28:	mov	r1, #0
   1ac2c:	and	r2, r2, r0
   1ac30:	and	r3, r3, r1
   1ac34:	orrs	fp, r2, r3
   1ac38:	beq	1aa90 <__assert_fail@plt+0x968c>
   1ac3c:	mov	r2, #5
   1ac40:	movw	r1, #496	; 0x1f0
   1ac44:	mov	r0, #0
   1ac48:	movt	r1, #6
   1ac4c:	ldr	r4, [r4, #24]
   1ac50:	bl	11170 <dcgettext@plt>
   1ac54:	mov	sl, #24
   1ac58:	mov	r2, #1
   1ac5c:	mov	r3, #0
   1ac60:	mov	fp, #0
   1ac64:	strd	r2, [sp]
   1ac68:	mov	r2, r4
   1ac6c:	strd	sl, [sp, #8]
   1ac70:	ldr	r1, [sp, #44]	; 0x2c
   1ac74:	str	r0, [sp, #16]
   1ac78:	add	r0, sp, #84	; 0x54
   1ac7c:	bl	1502c <__assert_fail@plt+0x3c28>
   1ac80:	cmp	r0, #0
   1ac84:	beq	1aa90 <__assert_fail@plt+0x968c>
   1ac88:	add	r1, sp, #84	; 0x54
   1ac8c:	add	r0, sp, #56	; 0x38
   1ac90:	bl	1863c <__assert_fail@plt+0x7238>
   1ac94:	ldr	r0, [sp, #56]	; 0x38
   1ac98:	cmp	r0, #1
   1ac9c:	beq	1b2c4 <__assert_fail@plt+0x9ec0>
   1aca0:	mov	r2, #5
   1aca4:	movw	r1, #532	; 0x214
   1aca8:	mov	r0, #0
   1acac:	movt	r1, #6
   1acb0:	bl	11170 <dcgettext@plt>
   1acb4:	ldr	r2, [sp, #56]	; 0x38
   1acb8:	mov	r1, r0
   1acbc:	mov	r0, #1
   1acc0:	bl	1132c <__printf_chk@plt>
   1acc4:	ldrd	r0, [sp, #64]	; 0x40
   1acc8:	mov	r2, #6
   1accc:	bl	16c84 <__assert_fail@plt+0x5880>
   1acd0:	movw	r1, #560	; 0x230
   1acd4:	ldr	r2, [sp, #72]	; 0x48
   1acd8:	movt	r1, #6
   1acdc:	mov	r0, #1
   1ace0:	bl	1132c <__printf_chk@plt>
   1ace4:	b	1aa90 <__assert_fail@plt+0x968c>
   1ace8:	ldrd	r0, [r4, #16]
   1acec:	mov	r2, #6
   1acf0:	bl	16c84 <__assert_fail@plt+0x5880>
   1acf4:	ldr	ip, [r4, #56]	; 0x38
   1acf8:	ldr	r3, [r4, #32]
   1acfc:	movw	r1, #220	; 0xdc
   1ad00:	ldr	r2, [r4, #24]
   1ad04:	movt	r1, #6
   1ad08:	mov	r0, #1
   1ad0c:	str	ip, [sp]
   1ad10:	bl	1132c <__printf_chk@plt>
   1ad14:	ldr	r3, [r9, #1604]	; 0x644
   1ad18:	cmp	r3, #0
   1ad1c:	beq	1b030 <__assert_fail@plt+0x9c2c>
   1ad20:	movw	r3, #16696	; 0x4138
   1ad24:	movt	r3, #9
   1ad28:	movw	r0, #6840	; 0x1ab8
   1ad2c:	mov	r1, #1
   1ad30:	ldr	r3, [r3]
   1ad34:	movt	r0, #6
   1ad38:	mov	r2, #2
   1ad3c:	bl	111b8 <fwrite@plt>
   1ad40:	ldr	r2, [r4, #40]	; 0x28
   1ad44:	ldr	r3, [r6, #68]	; 0x44
   1ad48:	cmp	r2, r3
   1ad4c:	bcs	1afd0 <__assert_fail@plt+0x9bcc>
   1ad50:	ldr	fp, [r9, #1604]	; 0x644
   1ad54:	cmp	fp, #0
   1ad58:	movne	fp, #0
   1ad5c:	beq	1b0d8 <__assert_fail@plt+0x9cd4>
   1ad60:	movw	r1, #260	; 0x104
   1ad64:	mov	r0, #1
   1ad68:	movt	r1, #6
   1ad6c:	bl	1132c <__printf_chk@plt>
   1ad70:	movw	r1, #272	; 0x110
   1ad74:	mov	r0, #1
   1ad78:	movt	r1, #6
   1ad7c:	ldr	r2, [r4, #44]	; 0x2c
   1ad80:	ldr	r3, [r4, #48]	; 0x30
   1ad84:	bl	1132c <__printf_chk@plt>
   1ad88:	cmp	fp, #0
   1ad8c:	beq	1aa84 <__assert_fail@plt+0x9680>
   1ad90:	ldrb	r0, [fp]
   1ad94:	cmp	r0, #0
   1ad98:	bne	1aa84 <__assert_fail@plt+0x9680>
   1ad9c:	mov	r2, #5
   1ada0:	movw	r1, #284	; 0x11c
   1ada4:	movt	r1, #6
   1ada8:	bl	11170 <dcgettext@plt>
   1adac:	mov	r1, r5
   1adb0:	ldr	r2, [r4, #40]	; 0x28
   1adb4:	bl	4b9ec <warn@@Base>
   1adb8:	b	1aa84 <__assert_fail@plt+0x9680>
   1adbc:	movw	r3, #16696	; 0x4138
   1adc0:	movt	r3, #9
   1adc4:	mov	r0, #32
   1adc8:	ldr	r1, [r3]
   1adcc:	bl	111ac <_IO_putc@plt>
   1add0:	ldrd	r0, [r4, #16]
   1add4:	mov	r2, #6
   1add8:	bl	16c84 <__assert_fail@plt+0x5880>
   1addc:	ldrd	r2, [r4, #24]
   1ade0:	asr	r1, r2, #31
   1ade4:	mov	r0, r2
   1ade8:	cmp	r3, r1
   1adec:	cmpeq	r2, r0
   1adf0:	beq	1b14c <__assert_fail@plt+0x9d48>
   1adf4:	movw	r1, #6840	; 0x1ab8
   1adf8:	mov	r0, #1
   1adfc:	movt	r1, #6
   1ae00:	bl	1132c <__printf_chk@plt>
   1ae04:	ldrd	r0, [r4, #24]
   1ae08:	mov	r2, #6
   1ae0c:	bl	16c84 <__assert_fail@plt+0x5880>
   1ae10:	movw	r1, #420	; 0x1a4
   1ae14:	mov	r0, #1
   1ae18:	movt	r1, #6
   1ae1c:	bl	1132c <__printf_chk@plt>
   1ae20:	ldrd	r0, [r4, #32]
   1ae24:	mov	r2, #6
   1ae28:	bl	16c84 <__assert_fail@plt+0x5880>
   1ae2c:	movw	r1, #6840	; 0x1ab8
   1ae30:	mov	r0, #1
   1ae34:	movt	r1, #6
   1ae38:	bl	1132c <__printf_chk@plt>
   1ae3c:	ldrd	r0, [r4, #56]	; 0x38
   1ae40:	mov	r2, #6
   1ae44:	bl	16c84 <__assert_fail@plt+0x5880>
   1ae48:	ldrd	r0, [r4, #8]
   1ae4c:	bl	17b64 <__assert_fail@plt+0x6760>
   1ae50:	movw	r1, #244	; 0xf4
   1ae54:	movt	r1, #6
   1ae58:	mov	r2, r0
   1ae5c:	mov	r0, #1
   1ae60:	bl	1132c <__printf_chk@plt>
   1ae64:	ldr	ip, [r4, #48]	; 0x30
   1ae68:	ldr	r2, [r4, #40]	; 0x28
   1ae6c:	movw	r1, #460	; 0x1cc
   1ae70:	ldr	r3, [r4, #44]	; 0x2c
   1ae74:	movt	r1, #6
   1ae78:	str	ip, [sp]
   1ae7c:	mov	r0, #1
   1ae80:	bl	1132c <__printf_chk@plt>
   1ae84:	b	1aa84 <__assert_fail@plt+0x9680>
   1ae88:	ldrd	r0, [r4, #16]
   1ae8c:	mov	r2, #6
   1ae90:	bl	16c84 <__assert_fail@plt+0x5880>
   1ae94:	ldrd	r2, [r4, #24]
   1ae98:	asr	r1, r2, #31
   1ae9c:	mov	r0, r2
   1aea0:	cmp	r3, r1
   1aea4:	cmpeq	r2, r0
   1aea8:	beq	1b1a0 <__assert_fail@plt+0x9d9c>
   1aeac:	movw	r3, #16696	; 0x4138
   1aeb0:	movt	r3, #9
   1aeb4:	mov	r0, #32
   1aeb8:	ldr	r1, [r3]
   1aebc:	bl	111ac <_IO_putc@plt>
   1aec0:	ldrd	r0, [r4, #24]
   1aec4:	mov	r2, #6
   1aec8:	bl	16c84 <__assert_fail@plt+0x5880>
   1aecc:	ldrd	r2, [r4, #32]
   1aed0:	mov	r1, #0
   1aed4:	mov	r0, r2
   1aed8:	cmp	r3, r1
   1aedc:	cmpeq	r2, r0
   1aee0:	beq	1b18c <__assert_fail@plt+0x9d88>
   1aee4:	movw	r3, #16696	; 0x4138
   1aee8:	movt	r3, #9
   1aeec:	mov	r0, #32
   1aef0:	ldr	r1, [r3]
   1aef4:	bl	111ac <_IO_putc@plt>
   1aef8:	ldrd	r0, [r4, #32]
   1aefc:	mov	r2, #6
   1af00:	bl	16c84 <__assert_fail@plt+0x5880>
   1af04:	ldrd	r2, [r4, #56]	; 0x38
   1af08:	mov	r1, #0
   1af0c:	mov	r0, r2
   1af10:	cmp	r3, r1
   1af14:	cmpeq	r2, r0
   1af18:	beq	1b160 <__assert_fail@plt+0x9d5c>
   1af1c:	movw	r3, #16696	; 0x4138
   1af20:	movt	r3, #9
   1af24:	mov	r0, #32
   1af28:	ldr	r1, [r3]
   1af2c:	bl	111ac <_IO_putc@plt>
   1af30:	ldrd	r0, [r4, #56]	; 0x38
   1af34:	mov	r2, #6
   1af38:	bl	16c84 <__assert_fail@plt+0x5880>
   1af3c:	ldr	r3, [r6, #1604]	; 0x644
   1af40:	cmp	r3, #0
   1af44:	beq	1b050 <__assert_fail@plt+0x9c4c>
   1af48:	movw	r3, #16696	; 0x4138
   1af4c:	movt	r3, #9
   1af50:	movw	r0, #6840	; 0x1ab8
   1af54:	mov	r1, #1
   1af58:	ldr	r3, [r3]
   1af5c:	movt	r0, #6
   1af60:	mov	r2, #2
   1af64:	bl	111b8 <fwrite@plt>
   1af68:	ldr	r2, [r4, #40]	; 0x28
   1af6c:	movw	r1, #372	; 0x174
   1af70:	ldr	r3, [r4, #44]	; 0x2c
   1af74:	movt	r1, #6
   1af78:	mov	r0, #1
   1af7c:	bl	1132c <__printf_chk@plt>
   1af80:	ldrd	r0, [r4, #48]	; 0x30
   1af84:	mov	r3, #0
   1af88:	mov	r2, r0
   1af8c:	cmp	r1, r3
   1af90:	cmpeq	r0, r2
   1af94:	beq	1b174 <__assert_fail@plt+0x9d70>
   1af98:	mov	r2, #1
   1af9c:	bl	16c84 <__assert_fail@plt+0x5880>
   1afa0:	movw	r3, #16696	; 0x4138
   1afa4:	movt	r3, #9
   1afa8:	mov	r0, #10
   1afac:	ldr	r1, [r3]
   1afb0:	bl	111ac <_IO_putc@plt>
   1afb4:	b	1aa84 <__assert_fail@plt+0x9680>
   1afb8:	movw	r1, #50908	; 0xc6dc
   1afbc:	mov	r2, #5
   1afc0:	movt	r1, #5
   1afc4:	bl	11170 <dcgettext@plt>
   1afc8:	mov	r1, r0
   1afcc:	b	1a964 <__assert_fail@plt+0x9560>
   1afd0:	ldrh	r3, [r9, #50]	; 0x32
   1afd4:	cmp	r3, #18
   1afd8:	beq	1b10c <__assert_fail@plt+0x9d08>
   1afdc:	bhi	1b0f8 <__assert_fail@plt+0x9cf4>
   1afe0:	cmp	r3, #6
   1afe4:	beq	1b10c <__assert_fail@plt+0x9d08>
   1afe8:	bhi	1b210 <__assert_fail@plt+0x9e0c>
   1afec:	sub	r3, r3, #2
   1aff0:	cmp	r3, #1
   1aff4:	bls	1b10c <__assert_fail@plt+0x9d08>
   1aff8:	movw	fp, #25084	; 0x61fc
   1affc:	movt	fp, #7
   1b000:	ldr	r3, [r6, #1604]	; 0x644
   1b004:	cmp	r3, #0
   1b008:	beq	1b0d8 <__assert_fail@plt+0x9cd4>
   1b00c:	ldrb	r3, [fp]
   1b010:	cmp	r3, #0
   1b014:	beq	1ad60 <__assert_fail@plt+0x995c>
   1b018:	movw	r1, #252	; 0xfc
   1b01c:	mov	r2, fp
   1b020:	movt	r1, #6
   1b024:	mov	r0, #1
   1b028:	bl	1132c <__printf_chk@plt>
   1b02c:	b	1ad70 <__assert_fail@plt+0x996c>
   1b030:	ldrd	r0, [r4, #8]
   1b034:	bl	17b64 <__assert_fail@plt+0x6760>
   1b038:	movw	r1, #244	; 0xf4
   1b03c:	movt	r1, #6
   1b040:	mov	r2, r0
   1b044:	mov	r0, #1
   1b048:	bl	1132c <__printf_chk@plt>
   1b04c:	b	1ad40 <__assert_fail@plt+0x993c>
   1b050:	ldrd	r0, [r4, #8]
   1b054:	bl	17b64 <__assert_fail@plt+0x6760>
   1b058:	movw	r1, #244	; 0xf4
   1b05c:	movt	r1, #6
   1b060:	mov	r2, r0
   1b064:	mov	r0, #1
   1b068:	bl	1132c <__printf_chk@plt>
   1b06c:	b	1af68 <__assert_fail@plt+0x9b64>
   1b070:	ldr	r5, [r6, #1604]	; 0x644
   1b074:	movw	r4, #16712	; 0x4148
   1b078:	movt	r4, #9
   1b07c:	cmp	r5, #0
   1b080:	bne	19c8c <__assert_fail@plt+0x8888>
   1b084:	mov	r2, #5
   1b088:	movw	r1, #568	; 0x238
   1b08c:	mov	r0, r5
   1b090:	movt	r1, #6
   1b094:	bl	11170 <dcgettext@plt>
   1b098:	mov	r1, r0
   1b09c:	mov	r0, #1
   1b0a0:	bl	1132c <__printf_chk@plt>
   1b0a4:	ldrh	r3, [r4, #50]	; 0x32
   1b0a8:	sub	r2, r3, #180	; 0xb4
   1b0ac:	cmp	r3, #62	; 0x3e
   1b0b0:	cmpne	r2, #1
   1b0b4:	movhi	r0, #0
   1b0b8:	movls	r0, #1
   1b0bc:	bls	1b2a0 <__assert_fail@plt+0x9e9c>
   1b0c0:	cmp	r3, #40	; 0x28
   1b0c4:	beq	1b370 <__assert_fail@plt+0x9f6c>
   1b0c8:	movw	r0, #820	; 0x334
   1b0cc:	movt	r0, #6
   1b0d0:	bl	11218 <puts@plt>
   1b0d4:	b	19c8c <__assert_fail@plt+0x8888>
   1b0d8:	ldr	ip, [r4, #48]	; 0x30
   1b0dc:	movw	r1, #268	; 0x10c
   1b0e0:	ldr	r3, [r4, #44]	; 0x2c
   1b0e4:	movt	r1, #6
   1b0e8:	mov	r0, #1
   1b0ec:	str	ip, [sp]
   1b0f0:	bl	1132c <__printf_chk@plt>
   1b0f4:	b	1ad88 <__assert_fail@plt+0x9984>
   1b0f8:	cmp	r3, #62	; 0x3e
   1b0fc:	beq	1b10c <__assert_fail@plt+0x9d08>
   1b100:	bhi	1b21c <__assert_fail@plt+0x9e18>
   1b104:	cmp	r3, #43	; 0x2b
   1b108:	bne	1aff8 <__assert_fail@plt+0x9bf4>
   1b10c:	cmp	r2, #65280	; 0xff00
   1b110:	beq	1b294 <__assert_fail@plt+0x9e90>
   1b114:	movw	fp, #65281	; 0xff01
   1b118:	movw	r1, #64516	; 0xfc04
   1b11c:	cmp	r2, fp
   1b120:	movw	r3, #25084	; 0x61fc
   1b124:	movt	r1, #5
   1b128:	movt	r3, #7
   1b12c:	moveq	fp, r1
   1b130:	movne	fp, r3
   1b134:	b	1b000 <__assert_fail@plt+0x9bfc>
   1b138:	movw	r1, #404	; 0x194
   1b13c:	mov	r0, #1
   1b140:	movt	r1, #6
   1b144:	bl	1132c <__printf_chk@plt>
   1b148:	b	1aa2c <__assert_fail@plt+0x9628>
   1b14c:	movw	r1, #448	; 0x1c0
   1b150:	mov	r0, #1
   1b154:	movt	r1, #6
   1b158:	bl	1132c <__printf_chk@plt>
   1b15c:	b	1ae10 <__assert_fail@plt+0x9a0c>
   1b160:	movw	r1, #364	; 0x16c
   1b164:	mov	r0, #1
   1b168:	movt	r1, #6
   1b16c:	bl	1132c <__printf_chk@plt>
   1b170:	b	1af3c <__assert_fail@plt+0x9b38>
   1b174:	mov	r2, r0
   1b178:	movw	r1, #276	; 0x114
   1b17c:	mov	r0, #1
   1b180:	movt	r1, #6
   1b184:	bl	1132c <__printf_chk@plt>
   1b188:	b	1aa84 <__assert_fail@plt+0x9680>
   1b18c:	movw	r1, #356	; 0x164
   1b190:	mov	r0, #1
   1b194:	movt	r1, #6
   1b198:	bl	1132c <__printf_chk@plt>
   1b19c:	b	1af04 <__assert_fail@plt+0x9b00>
   1b1a0:	movw	r1, #356	; 0x164
   1b1a4:	mov	r0, #1
   1b1a8:	movt	r1, #6
   1b1ac:	bl	1132c <__printf_chk@plt>
   1b1b0:	b	1aecc <__assert_fail@plt+0x9ac8>
   1b1b4:	movw	r1, #50888	; 0xc6c8
   1b1b8:	mov	r0, r4
   1b1bc:	movt	r1, #5
   1b1c0:	mov	r2, #5
   1b1c4:	bl	11170 <dcgettext@plt>
   1b1c8:	mov	r1, r0
   1b1cc:	b	1a964 <__assert_fail@plt+0x9560>
   1b1d0:	mov	r0, r3
   1b1d4:	movw	r1, #50896	; 0xc6d0
   1b1d8:	mov	r2, #5
   1b1dc:	movt	r1, #5
   1b1e0:	bl	11170 <dcgettext@plt>
   1b1e4:	mov	r1, r0
   1b1e8:	b	1a964 <__assert_fail@plt+0x9560>
   1b1ec:	mov	r2, #5
   1b1f0:	movw	r1, #180	; 0xb4
   1b1f4:	mov	r0, #0
   1b1f8:	movt	r1, #6
   1b1fc:	bl	11170 <dcgettext@plt>
   1b200:	mov	r1, r0
   1b204:	mov	r0, #1
   1b208:	bl	1132c <__printf_chk@plt>
   1b20c:	b	1a908 <__assert_fail@plt+0x9504>
   1b210:	cmp	r3, #11
   1b214:	bne	1aff8 <__assert_fail@plt+0x9bf4>
   1b218:	b	1b10c <__assert_fail@plt+0x9d08>
   1b21c:	sub	r3, r3, #180	; 0xb4
   1b220:	cmp	r3, #1
   1b224:	bhi	1aff8 <__assert_fail@plt+0x9bf4>
   1b228:	b	1b10c <__assert_fail@plt+0x9d08>
   1b22c:	ldrd	r4, [r9, #32]
   1b230:	mov	r2, #5
   1b234:	ldr	ip, [r9, #24]
   1b238:	movw	r1, #64964	; 0xfdc4
   1b23c:	movt	r1, #5
   1b240:	str	r3, [sp, #32]
   1b244:	strd	r4, [sp, #24]
   1b248:	mov	r4, #1
   1b24c:	str	ip, [sp, #36]	; 0x24
   1b250:	bl	11170 <dcgettext@plt>
   1b254:	mov	r5, #0
   1b258:	ldr	ip, [sp, #36]	; 0x24
   1b25c:	strd	r4, [sp]
   1b260:	ldr	r3, [sp, #32]
   1b264:	ldrd	r4, [sp, #24]
   1b268:	mov	r2, ip
   1b26c:	ldr	r1, [sp, #44]	; 0x2c
   1b270:	strd	r4, [sp, #8]
   1b274:	str	r0, [sp, #16]
   1b278:	mov	r0, r3
   1b27c:	bl	1502c <__assert_fail@plt+0x3c28>
   1b280:	cmp	r0, #0
   1b284:	str	r0, [fp, #1876]	; 0x754
   1b288:	ldrne	r0, [r9, #32]
   1b28c:	str	r0, [r6, #1888]	; 0x760
   1b290:	b	1a0fc <__assert_fail@plt+0x8cf8>
   1b294:	movw	fp, #64524	; 0xfc0c
   1b298:	movt	fp, #5
   1b29c:	b	1b000 <__assert_fail@plt+0x9bfc>
   1b2a0:	mov	r0, r5
   1b2a4:	mov	r2, #5
   1b2a8:	movw	r1, #792	; 0x318
   1b2ac:	movt	r1, #6
   1b2b0:	bl	11170 <dcgettext@plt>
   1b2b4:	mov	r1, r0
   1b2b8:	mov	r0, #1
   1b2bc:	bl	1132c <__printf_chk@plt>
   1b2c0:	b	1b0c8 <__assert_fail@plt+0x9cc4>
   1b2c4:	movw	r1, #516	; 0x204
   1b2c8:	movt	r1, #6
   1b2cc:	bl	1132c <__printf_chk@plt>
   1b2d0:	b	1acc4 <__assert_fail@plt+0x98c0>
   1b2d4:	mov	r3, #4
   1b2d8:	str	r3, [r4]
   1b2dc:	b	19dc8 <__assert_fail@plt+0x89c4>
   1b2e0:	mov	r2, #5
   1b2e4:	movw	r1, #65352	; 0xff48
   1b2e8:	movt	r1, #5
   1b2ec:	bl	11170 <dcgettext@plt>
   1b2f0:	mov	r1, r0
   1b2f4:	mov	r0, #1
   1b2f8:	bl	1132c <__printf_chk@plt>
   1b2fc:	b	1a8fc <__assert_fail@plt+0x94f8>
   1b300:	mov	r2, #5
   1b304:	mov	r0, r4
   1b308:	movw	r1, #44	; 0x2c
   1b30c:	movt	r1, #6
   1b310:	bl	11170 <dcgettext@plt>
   1b314:	mov	r1, r0
   1b318:	mov	r0, #1
   1b31c:	bl	1132c <__printf_chk@plt>
   1b320:	mov	r0, r4
   1b324:	mov	r2, #5
   1b328:	movw	r1, #112	; 0x70
   1b32c:	movt	r1, #6
   1b330:	bl	11170 <dcgettext@plt>
   1b334:	mov	r1, r0
   1b338:	mov	r0, #1
   1b33c:	bl	1132c <__printf_chk@plt>
   1b340:	b	1a8fc <__assert_fail@plt+0x94f8>
   1b344:	movw	r3, #26452	; 0x6754
   1b348:	movt	r3, #9
   1b34c:	ldr	r3, [r3]
   1b350:	cmp	r3, #0
   1b354:	bne	1a050 <__assert_fail@plt+0x8c4c>
   1b358:	movw	r3, #26440	; 0x6748
   1b35c:	movt	r3, #9
   1b360:	ldr	r3, [r3]
   1b364:	cmp	r3, #0
   1b368:	bne	1a050 <__assert_fail@plt+0x8c4c>
   1b36c:	b	1a0fc <__assert_fail@plt+0x8cf8>
   1b370:	mov	r2, #5
   1b374:	movw	r1, #804	; 0x324
   1b378:	movt	r1, #6
   1b37c:	bl	11170 <dcgettext@plt>
   1b380:	mov	r1, r0
   1b384:	mov	r0, #1
   1b388:	bl	1132c <__printf_chk@plt>
   1b38c:	b	1b0c8 <__assert_fail@plt+0x9cc4>
   1b390:	bl	1117c <__stack_chk_fail@plt>
   1b394:	andeq	r4, r9, r4, lsr #17
   1b398:	push	{r3, r4, r5, r6, r7, lr}
   1b39c:	mov	r7, r2
   1b3a0:	mov	r2, #2
   1b3a4:	mov	r4, r0
   1b3a8:	mov	r5, r1
   1b3ac:	bl	16c84 <__assert_fail@plt+0x5880>
   1b3b0:	cmp	r0, #4
   1b3b4:	ble	1b55c <__assert_fail@plt+0xa158>
   1b3b8:	movw	r6, #16712	; 0x4148
   1b3bc:	movt	r6, #9
   1b3c0:	mov	r2, r7
   1b3c4:	movw	r1, #852	; 0x354
   1b3c8:	mov	r0, #1
   1b3cc:	movt	r1, #6
   1b3d0:	bl	1132c <__printf_chk@plt>
   1b3d4:	ldr	r1, [r6, #1872]	; 0x750
   1b3d8:	cmp	r1, #0
   1b3dc:	beq	1b3f4 <__assert_fail@plt+0x9ff0>
   1b3e0:	ldr	r2, [r6, #1884]	; 0x75c
   1b3e4:	mov	r3, #0
   1b3e8:	cmp	r5, r3
   1b3ec:	cmpeq	r4, r2
   1b3f0:	bcc	1b41c <__assert_fail@plt+0xa018>
   1b3f4:	mov	r2, #5
   1b3f8:	movw	r1, #860	; 0x35c
   1b3fc:	mov	r0, #0
   1b400:	movt	r1, #6
   1b404:	bl	11170 <dcgettext@plt>
   1b408:	mov	r2, r4
   1b40c:	pop	{r3, r4, r5, r6, r7, lr}
   1b410:	mov	r1, r0
   1b414:	mov	r0, #1
   1b418:	b	1132c <__printf_chk@plt>
   1b41c:	lsl	r4, r4, #5
   1b420:	movw	r7, #16696	; 0x4138
   1b424:	movt	r7, #9
   1b428:	add	r5, r1, r4
   1b42c:	mov	r2, #6
   1b430:	ldrd	r0, [r1, r4]
   1b434:	bl	16c84 <__assert_fail@plt+0x5880>
   1b438:	ldr	r1, [r7]
   1b43c:	mov	r0, #32
   1b440:	bl	111ac <_IO_putc@plt>
   1b444:	ldrd	r0, [r5, #8]
   1b448:	mov	r2, #2
   1b44c:	bl	16c84 <__assert_fail@plt+0x5880>
   1b450:	ldrb	r0, [r5, #20]
   1b454:	and	r0, r0, #15
   1b458:	bl	186e8 <__assert_fail@plt+0x72e4>
   1b45c:	movw	r1, #912	; 0x390
   1b460:	movt	r1, #6
   1b464:	mov	r2, r0
   1b468:	mov	r0, #1
   1b46c:	bl	1132c <__printf_chk@plt>
   1b470:	ldrb	r0, [r5, #20]
   1b474:	lsr	r0, r0, #4
   1b478:	bl	19338 <__assert_fail@plt+0x7f34>
   1b47c:	movw	r1, #920	; 0x398
   1b480:	movt	r1, #6
   1b484:	mov	r2, r0
   1b488:	mov	r0, #1
   1b48c:	bl	1132c <__printf_chk@plt>
   1b490:	ldrb	r3, [r6, #7]
   1b494:	cmp	r3, #6
   1b498:	beq	1b57c <__assert_fail@plt+0xa178>
   1b49c:	ldrb	r4, [r5, #21]
   1b4a0:	and	r4, r4, #3
   1b4a4:	mov	r0, r4
   1b4a8:	bl	19894 <__assert_fail@plt+0x8490>
   1b4ac:	movw	r1, #912	; 0x390
   1b4b0:	movt	r1, #6
   1b4b4:	mov	r2, r0
   1b4b8:	mov	r0, #1
   1b4bc:	bl	1132c <__printf_chk@plt>
   1b4c0:	ldrb	r0, [r5, #21]
   1b4c4:	cmp	r0, r4
   1b4c8:	beq	1b4e8 <__assert_fail@plt+0xa0e4>
   1b4cc:	eor	r0, r4, r0
   1b4d0:	bl	19614 <__assert_fail@plt+0x8210>
   1b4d4:	movw	r1, #928	; 0x3a0
   1b4d8:	movt	r1, #6
   1b4dc:	mov	r2, r0
   1b4e0:	mov	r0, #1
   1b4e4:	bl	1132c <__printf_chk@plt>
   1b4e8:	ldr	r0, [r5, #24]
   1b4ec:	bl	19424 <__assert_fail@plt+0x8020>
   1b4f0:	movw	r1, #936	; 0x3a8
   1b4f4:	movt	r1, #6
   1b4f8:	mov	r2, r0
   1b4fc:	mov	r0, #1
   1b500:	bl	1132c <__printf_chk@plt>
   1b504:	ldr	r2, [r6, #1876]	; 0x754
   1b508:	movw	r3, #16712	; 0x4148
   1b50c:	movt	r3, #9
   1b510:	cmp	r2, #0
   1b514:	beq	1b528 <__assert_fail@plt+0xa124>
   1b518:	ldr	r3, [r3, #1888]	; 0x760
   1b51c:	ldr	r1, [r5, #16]
   1b520:	cmp	r1, r3
   1b524:	bcc	1b59c <__assert_fail@plt+0xa198>
   1b528:	mov	r2, #5
   1b52c:	movw	r1, #944	; 0x3b0
   1b530:	mov	r0, #0
   1b534:	movt	r1, #6
   1b538:	bl	11170 <dcgettext@plt>
   1b53c:	ldr	r2, [r5, #16]
   1b540:	mov	r1, r0
   1b544:	mov	r0, #1
   1b548:	bl	1132c <__printf_chk@plt>
   1b54c:	ldr	r1, [r7]
   1b550:	mov	r0, #10
   1b554:	pop	{r3, r4, r5, r6, r7, lr}
   1b558:	b	111ac <_IO_putc@plt>
   1b55c:	movw	r2, #16696	; 0x4138
   1b560:	movt	r2, #9
   1b564:	movw	r3, #212	; 0xd4
   1b568:	movt	r3, #6
   1b56c:	ldr	r1, [r2]
   1b570:	add	r0, r3, r0
   1b574:	bl	113d4 <fputs@plt>
   1b578:	b	1b3b8 <__assert_fail@plt+0x9fb4>
   1b57c:	ldrb	r0, [r5, #21]
   1b580:	bl	1991c <__assert_fail@plt+0x8518>
   1b584:	movw	r1, #912	; 0x390
   1b588:	movt	r1, #6
   1b58c:	mov	r2, r0
   1b590:	mov	r0, #1
   1b594:	bl	1132c <__printf_chk@plt>
   1b598:	b	1b4e8 <__assert_fail@plt+0xa0e4>
   1b59c:	add	r1, r2, r1
   1b5a0:	mov	r0, #25
   1b5a4:	bl	19a8c <__assert_fail@plt+0x8688>
   1b5a8:	ldr	r1, [r7]
   1b5ac:	mov	r0, #10
   1b5b0:	pop	{r3, r4, r5, r6, r7, lr}
   1b5b4:	b	111ac <_IO_putc@plt>
   1b5b8:	push	{r4, r5, r6, r7, lr}
   1b5bc:	movw	r5, #16680	; 0x4128
   1b5c0:	movt	r5, #9
   1b5c4:	sub	sp, sp, #12
   1b5c8:	subs	r7, r0, #0
   1b5cc:	mov	r4, r1
   1b5d0:	ldr	r3, [r5]
   1b5d4:	mov	r6, r2
   1b5d8:	str	r3, [sp, #4]
   1b5dc:	ble	1b5f4 <__assert_fail@plt+0xa1f0>
   1b5e0:	movw	r1, #964	; 0x3c4
   1b5e4:	mov	r0, #1
   1b5e8:	movt	r1, #6
   1b5ec:	mov	r2, r7
   1b5f0:	bl	1132c <__printf_chk@plt>
   1b5f4:	cmp	r4, r6
   1b5f8:	bcs	1b6ac <__assert_fail@plt+0xa2a8>
   1b5fc:	ands	r2, r7, #1
   1b600:	bne	1b658 <__assert_fail@plt+0xa254>
   1b604:	mov	r0, r4
   1b608:	mov	r3, r6
   1b60c:	mov	r1, sp
   1b610:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1b614:	ldr	ip, [sp]
   1b618:	movw	r1, #1028	; 0x404
   1b61c:	movt	r1, #6
   1b620:	add	r4, r4, ip
   1b624:	mov	r2, r0
   1b628:	mov	r3, r0
   1b62c:	mov	r0, #1
   1b630:	bl	1132c <__printf_chk@plt>
   1b634:	cmp	r4, r6
   1b638:	bhi	1b6ec <__assert_fail@plt+0xa2e8>
   1b63c:	ldr	r2, [sp, #4]
   1b640:	mov	r0, r4
   1b644:	ldr	r3, [r5]
   1b648:	cmp	r2, r3
   1b64c:	bne	1b6e8 <__assert_fail@plt+0xa2e4>
   1b650:	add	sp, sp, #12
   1b654:	pop	{r4, r5, r6, r7, pc}
   1b658:	movw	r3, #16696	; 0x4138
   1b65c:	movt	r3, #9
   1b660:	rsb	r7, r4, r6
   1b664:	mov	r0, #34	; 0x22
   1b668:	ldr	r1, [r3]
   1b66c:	sub	r7, r7, #1
   1b670:	bl	111ac <_IO_putc@plt>
   1b674:	subs	r0, r7, #0
   1b678:	bne	1b6c8 <__assert_fail@plt+0xa2c4>
   1b67c:	mov	r2, #5
   1b680:	movw	r1, #1000	; 0x3e8
   1b684:	movt	r1, #6
   1b688:	mov	r4, r6
   1b68c:	bl	11170 <dcgettext@plt>
   1b690:	mov	r1, r0
   1b694:	mov	r0, #1
   1b698:	bl	1132c <__printf_chk@plt>
   1b69c:	movw	r0, #1024	; 0x400
   1b6a0:	movt	r0, #6
   1b6a4:	bl	11218 <puts@plt>
   1b6a8:	b	1b634 <__assert_fail@plt+0xa230>
   1b6ac:	mov	r2, #5
   1b6b0:	movw	r1, #984	; 0x3d8
   1b6b4:	mov	r0, #0
   1b6b8:	movt	r1, #6
   1b6bc:	bl	11170 <dcgettext@plt>
   1b6c0:	bl	4b9ec <warn@@Base>
   1b6c4:	b	1b634 <__assert_fail@plt+0xa230>
   1b6c8:	mov	r1, r4
   1b6cc:	bl	19a8c <__assert_fail@plt+0x8688>
   1b6d0:	mov	r0, r4
   1b6d4:	mov	r1, r7
   1b6d8:	bl	11350 <strnlen@plt>
   1b6dc:	add	r0, r0, #1
   1b6e0:	add	r4, r4, r0
   1b6e4:	b	1b69c <__assert_fail@plt+0xa298>
   1b6e8:	bl	1117c <__stack_chk_fail@plt>
   1b6ec:	movw	r0, #1044	; 0x414
   1b6f0:	movw	r1, #64464	; 0xfbd0
   1b6f4:	movt	r0, #6
   1b6f8:	movt	r1, #5
   1b6fc:	movw	r2, #13016	; 0x32d8
   1b700:	ldr	r3, [pc]	; 1b708 <__assert_fail@plt+0xa304>
   1b704:	bl	11404 <__assert_fail@plt>
   1b708:	andeq	r4, r5, r0, ror lr
   1b70c:	push	{r4, r5, r6, lr}
   1b710:	movw	r4, #16680	; 0x4128
   1b714:	movt	r4, #9
   1b718:	sub	sp, sp, #8
   1b71c:	cmp	r1, #4
   1b720:	mov	r5, r0
   1b724:	ldr	ip, [r4]
   1b728:	mov	r3, r2
   1b72c:	str	ip, [sp, #4]
   1b730:	beq	1b7f4 <__assert_fail@plt+0xa3f0>
   1b734:	cmp	r1, #8
   1b738:	beq	1b838 <__assert_fail@plt+0xa434>
   1b73c:	cmp	r1, #12
   1b740:	beq	1b768 <__assert_fail@plt+0xa364>
   1b744:	and	r0, r1, #1
   1b748:	mov	r1, r5
   1b74c:	bl	1b5b8 <__assert_fail@plt+0xa1b4>
   1b750:	ldr	r2, [sp, #4]
   1b754:	ldr	r3, [r4]
   1b758:	cmp	r2, r3
   1b75c:	bne	1b94c <__assert_fail@plt+0xa548>
   1b760:	add	sp, sp, #8
   1b764:	pop	{r4, r5, r6, pc}
   1b768:	cmp	r0, r2
   1b76c:	beq	1b92c <__assert_fail@plt+0xa528>
   1b770:	mov	r2, #0
   1b774:	mov	r1, sp
   1b778:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1b77c:	ldr	r3, [sp]
   1b780:	movw	r1, #1236	; 0x4d4
   1b784:	movt	r1, #6
   1b788:	add	r5, r5, r3
   1b78c:	mov	r6, r0
   1b790:	mov	r0, #1
   1b794:	bl	1132c <__printf_chk@plt>
   1b798:	cmp	r6, #1
   1b79c:	beq	1b87c <__assert_fail@plt+0xa478>
   1b7a0:	cmp	r6, #2
   1b7a4:	beq	1b7cc <__assert_fail@plt+0xa3c8>
   1b7a8:	cmp	r6, #0
   1b7ac:	beq	1b890 <__assert_fail@plt+0xa48c>
   1b7b0:	mov	r2, r6
   1b7b4:	movw	r1, #61824	; 0xf180
   1b7b8:	mov	r0, #1
   1b7bc:	movt	r1, #5
   1b7c0:	bl	1132c <__printf_chk@plt>
   1b7c4:	mov	r0, r5
   1b7c8:	b	1b750 <__assert_fail@plt+0xa34c>
   1b7cc:	movw	r1, #1280	; 0x500
   1b7d0:	movt	r1, #6
   1b7d4:	mov	r0, #0
   1b7d8:	mov	r2, #5
   1b7dc:	bl	11170 <dcgettext@plt>
   1b7e0:	mov	r1, r0
   1b7e4:	mov	r0, #1
   1b7e8:	bl	1132c <__printf_chk@plt>
   1b7ec:	mov	r0, r5
   1b7f0:	b	1b750 <__assert_fail@plt+0xa34c>
   1b7f4:	mov	r1, sp
   1b7f8:	mov	r2, #0
   1b7fc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1b800:	ldr	r3, [sp]
   1b804:	movw	r1, #1056	; 0x420
   1b808:	movt	r1, #6
   1b80c:	add	r5, r5, r3
   1b810:	mov	r6, r0
   1b814:	mov	r0, #1
   1b818:	bl	1132c <__printf_chk@plt>
   1b81c:	cmp	r6, #3
   1b820:	ldrls	pc, [pc, r6, lsl #2]
   1b824:	b	1b7b0 <__assert_fail@plt+0xa3ac>
   1b828:	ldrdeq	fp, [r1], -r4
   1b82c:	andeq	fp, r1, r4, asr #17
   1b830:			; <UNDEFINED> instruction: 0x0001b8b4
   1b834:	andeq	fp, r1, r4, lsr #17
   1b838:	mov	r1, sp
   1b83c:	mov	r2, #0
   1b840:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1b844:	ldr	r3, [sp]
   1b848:	movw	r1, #1128	; 0x468
   1b84c:	movt	r1, #6
   1b850:	add	r5, r5, r3
   1b854:	mov	r6, r0
   1b858:	mov	r0, #1
   1b85c:	bl	1132c <__printf_chk@plt>
   1b860:	cmp	r6, #3
   1b864:	ldrls	pc, [pc, r6, lsl #2]
   1b868:	b	1b7b0 <__assert_fail@plt+0xa3ac>
   1b86c:	andeq	fp, r1, ip, lsl r9
   1b870:	andeq	fp, r1, ip, lsl #18
   1b874:	strdeq	fp, [r1], -r8
   1b878:	andeq	fp, r1, r4, ror #17
   1b87c:	movw	r0, #1272	; 0x4f8
   1b880:	movt	r0, #6
   1b884:	bl	11218 <puts@plt>
   1b888:	mov	r0, r5
   1b88c:	b	1b750 <__assert_fail@plt+0xa34c>
   1b890:	movw	r1, #1160	; 0x488
   1b894:	mov	r0, r6
   1b898:	mov	r2, #5
   1b89c:	movt	r1, #6
   1b8a0:	b	1b7dc <__assert_fail@plt+0xa3d8>
   1b8a4:	movw	r1, #1096	; 0x448
   1b8a8:	mov	r0, #0
   1b8ac:	movt	r1, #6
   1b8b0:	b	1b7d8 <__assert_fail@plt+0xa3d4>
   1b8b4:	movw	r1, #61616	; 0xf0b0
   1b8b8:	mov	r0, #0
   1b8bc:	movt	r1, #5
   1b8c0:	b	1b7d8 <__assert_fail@plt+0xa3d4>
   1b8c4:	movw	r1, #1084	; 0x43c
   1b8c8:	mov	r0, #0
   1b8cc:	movt	r1, #6
   1b8d0:	b	1b7d8 <__assert_fail@plt+0xa3d4>
   1b8d4:	movw	r1, #61532	; 0xf05c
   1b8d8:	mov	r0, #0
   1b8dc:	movt	r1, #5
   1b8e0:	b	1b7d8 <__assert_fail@plt+0xa3d4>
   1b8e4:	movw	r0, #1188	; 0x4a4
   1b8e8:	movt	r0, #6
   1b8ec:	bl	11218 <puts@plt>
   1b8f0:	mov	r0, r5
   1b8f4:	b	1b750 <__assert_fail@plt+0xa34c>
   1b8f8:	movw	r0, #1180	; 0x49c
   1b8fc:	movt	r0, #6
   1b900:	bl	11218 <puts@plt>
   1b904:	mov	r0, r5
   1b908:	b	1b750 <__assert_fail@plt+0xa34c>
   1b90c:	movw	r1, #1168	; 0x490
   1b910:	mov	r0, #0
   1b914:	movt	r1, #6
   1b918:	b	1b7d8 <__assert_fail@plt+0xa3d4>
   1b91c:	movw	r1, #1160	; 0x488
   1b920:	mov	r0, #0
   1b924:	movt	r1, #6
   1b928:	b	1b7d8 <__assert_fail@plt+0xa3d4>
   1b92c:	mov	r2, #5
   1b930:	movw	r1, #1192	; 0x4a8
   1b934:	mov	r0, #0
   1b938:	movt	r1, #6
   1b93c:	bl	11170 <dcgettext@plt>
   1b940:	bl	4b9ec <warn@@Base>
   1b944:	mov	r0, r5
   1b948:	b	1b750 <__assert_fail@plt+0xa34c>
   1b94c:	bl	1117c <__stack_chk_fail@plt>
   1b950:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b954:	movw	r8, #16680	; 0x4128
   1b958:	movt	r8, #9
   1b95c:	sub	sp, sp, #8
   1b960:	mov	r3, r1
   1b964:	mov	r9, r1
   1b968:	ldr	ip, [r8]
   1b96c:	mov	r1, sp
   1b970:	mov	r2, #0
   1b974:	mov	r4, r0
   1b978:	movw	r5, #12620	; 0x314c
   1b97c:	movt	r5, #9
   1b980:	str	ip, [sp, #4]
   1b984:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1b988:	ldr	sl, [sp]
   1b98c:	mov	ip, #0
   1b990:	add	sl, r4, sl
   1b994:	mov	r6, r0
   1b998:	b	1b9a8 <__assert_fail@plt+0xa5a4>
   1b99c:	add	ip, ip, #1
   1b9a0:	cmp	ip, #41	; 0x29
   1b9a4:	beq	1ba7c <__assert_fail@plt+0xa678>
   1b9a8:	ldr	r4, [r5, ip, lsl #4]
   1b9ac:	movw	lr, #12620	; 0x314c
   1b9b0:	lsl	r7, ip, #4
   1b9b4:	movt	lr, #9
   1b9b8:	cmp	r4, r6
   1b9bc:	bne	1b99c <__assert_fail@plt+0xa598>
   1b9c0:	add	r7, lr, r7
   1b9c4:	movw	r1, #1288	; 0x508
   1b9c8:	mov	r0, #1
   1b9cc:	movt	r1, #6
   1b9d0:	ldr	r2, [r7, #4]
   1b9d4:	bl	1132c <__printf_chk@plt>
   1b9d8:	ldr	r3, [r7, #8]
   1b9dc:	cmp	r3, #1
   1b9e0:	beq	1ba68 <__assert_fail@plt+0xa664>
   1b9e4:	bcc	1ba90 <__assert_fail@plt+0xa68c>
   1b9e8:	cmp	r3, #2
   1b9ec:	bne	1ba18 <__assert_fail@plt+0xa614>
   1b9f0:	mov	r1, sl
   1b9f4:	mov	r2, r9
   1b9f8:	mov	r0, #0
   1b9fc:	bl	1b5b8 <__assert_fail@plt+0xa1b4>
   1ba00:	ldr	r2, [sp, #4]
   1ba04:	ldr	r3, [r8]
   1ba08:	cmp	r2, r3
   1ba0c:	bne	1bf14 <__assert_fail@plt+0xab10>
   1ba10:	add	sp, sp, #8
   1ba14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ba18:	tst	r3, #128	; 0x80
   1ba1c:	beq	1bf18 <__assert_fail@plt+0xab14>
   1ba20:	mov	r3, r9
   1ba24:	mov	r0, sl
   1ba28:	mov	r1, sp
   1ba2c:	mov	r2, #0
   1ba30:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1ba34:	ldr	r1, [r7, #8]
   1ba38:	ldr	r3, [sp]
   1ba3c:	and	r1, r1, #127	; 0x7f
   1ba40:	add	sl, sl, r3
   1ba44:	cmp	r1, r0
   1ba48:	bhi	1bb8c <__assert_fail@plt+0xa788>
   1ba4c:	mov	r2, r0
   1ba50:	movw	r1, #61824	; 0xf180
   1ba54:	mov	r0, #1
   1ba58:	movt	r1, #5
   1ba5c:	bl	1132c <__printf_chk@plt>
   1ba60:	mov	r0, sl
   1ba64:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1ba68:	mov	r1, sl
   1ba6c:	mov	r2, r9
   1ba70:	mvn	r0, #0
   1ba74:	bl	1b5b8 <__assert_fail@plt+0xa1b4>
   1ba78:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1ba7c:	mov	r0, r6
   1ba80:	mov	r1, sl
   1ba84:	mov	r2, r9
   1ba88:	bl	1b5b8 <__assert_fail@plt+0xa1b4>
   1ba8c:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1ba90:	sub	r3, r6, #7
   1ba94:	cmp	r3, #58	; 0x3a
   1ba98:	ldrls	pc, [pc, r3, lsl #2]
   1ba9c:	b	1bd8c <__assert_fail@plt+0xa988>
   1baa0:	andeq	fp, r1, r4, lsl #24
   1baa4:	andeq	fp, r1, ip, lsl #27
   1baa8:	andeq	fp, r1, ip, lsl #27
   1baac:	andeq	fp, r1, ip, lsl #27
   1bab0:	andeq	fp, r1, ip, lsl #27
   1bab4:	andeq	fp, r1, ip, lsl #27
   1bab8:	andeq	fp, r1, ip, lsl #27
   1babc:	andeq	fp, r1, ip, lsl #27
   1bac0:	andeq	fp, r1, ip, lsl #27
   1bac4:	andeq	fp, r1, ip, lsl #27
   1bac8:	andeq	fp, r1, ip, lsl #27
   1bacc:	andeq	fp, r1, ip, lsl #27
   1bad0:	andeq	fp, r1, ip, lsl #27
   1bad4:	andeq	fp, r1, ip, lsl #27
   1bad8:	andeq	fp, r1, ip, lsl #27
   1badc:	andeq	fp, r1, ip, lsl #27
   1bae0:	andeq	fp, r1, ip, lsl #27
   1bae4:	andeq	fp, r1, r8, ror #24
   1bae8:	andeq	fp, r1, r0, asr sp
   1baec:	andeq	fp, r1, ip, lsl #27
   1baf0:	andeq	fp, r1, ip, lsl #27
   1baf4:	andeq	fp, r1, ip, lsl #27
   1baf8:	andeq	fp, r1, ip, lsl #27
   1bafc:	andeq	fp, r1, ip, lsl #27
   1bb00:	andeq	fp, r1, ip, lsl #27
   1bb04:	andeq	fp, r1, r4, lsr #25
   1bb08:	andeq	fp, r1, ip, lsl #27
   1bb0c:	andeq	fp, r1, ip, lsl #27
   1bb10:	andeq	fp, r1, ip, lsl #27
   1bb14:	andeq	fp, r1, ip, lsl #27
   1bb18:	andeq	fp, r1, ip, lsl #27
   1bb1c:	andeq	fp, r1, ip, lsl #27
   1bb20:	andeq	fp, r1, ip, lsl #27
   1bb24:	andeq	fp, r1, ip, lsl #27
   1bb28:	andeq	fp, r1, ip, lsl #27
   1bb2c:	andeq	fp, r1, ip, lsl #27
   1bb30:	andeq	fp, r1, ip, lsl #27
   1bb34:	andeq	fp, r1, ip, lsl #27
   1bb38:	andeq	fp, r1, ip, lsl #27
   1bb3c:	andeq	fp, r1, ip, lsl #27
   1bb40:	andeq	fp, r1, ip, lsl #27
   1bb44:	andeq	fp, r1, ip, lsl #27
   1bb48:	andeq	fp, r1, ip, lsl #27
   1bb4c:	andeq	fp, r1, ip, lsl #27
   1bb50:	andeq	fp, r1, ip, lsl #27
   1bb54:	andeq	fp, r1, ip, lsl #27
   1bb58:	andeq	fp, r1, ip, lsl #27
   1bb5c:	andeq	fp, r1, ip, lsl #27
   1bb60:	andeq	fp, r1, ip, lsl #27
   1bb64:	andeq	fp, r1, ip, lsl #27
   1bb68:	andeq	fp, r1, ip, lsl #27
   1bb6c:	andeq	fp, r1, ip, lsl #27
   1bb70:	andeq	fp, r1, ip, lsl #27
   1bb74:	andeq	fp, r1, ip, lsl #27
   1bb78:	andeq	fp, r1, ip, lsl #27
   1bb7c:	andeq	fp, r1, ip, lsl #27
   1bb80:	andeq	fp, r1, ip, lsl #27
   1bb84:	andeq	fp, r1, r8, lsr sp
   1bb88:	andeq	fp, r1, r0, lsr #23
   1bb8c:	ldr	r3, [r7, #12]
   1bb90:	ldr	r0, [r3, r0, lsl #2]
   1bb94:	bl	11218 <puts@plt>
   1bb98:	mov	r0, sl
   1bb9c:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1bba0:	mov	r0, sl
   1bba4:	mov	r3, r9
   1bba8:	mov	r1, sp
   1bbac:	mov	r2, #0
   1bbb0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1bbb4:	ldr	r3, [sp]
   1bbb8:	add	sl, sl, r3
   1bbbc:	cmp	r0, #6
   1bbc0:	beq	1be88 <__assert_fail@plt+0xaa84>
   1bbc4:	movw	r0, #18540	; 0x486c
   1bbc8:	movt	r0, #6
   1bbcc:	bl	11218 <puts@plt>
   1bbd0:	cmp	r9, sl
   1bbd4:	bls	1bf0c <__assert_fail@plt+0xab08>
   1bbd8:	ldrb	r3, [sl]
   1bbdc:	add	r0, sl, #1
   1bbe0:	cmp	r3, #0
   1bbe4:	bne	1bbf8 <__assert_fail@plt+0xa7f4>
   1bbe8:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1bbec:	ldrb	r3, [r0], #1
   1bbf0:	cmp	r3, #0
   1bbf4:	beq	1ba00 <__assert_fail@plt+0xa5fc>
   1bbf8:	cmp	r0, r9
   1bbfc:	bne	1bbec <__assert_fail@plt+0xa7e8>
   1bc00:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1bc04:	mov	r3, r9
   1bc08:	mov	r0, sl
   1bc0c:	mov	r2, #0
   1bc10:	mov	r1, sp
   1bc14:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1bc18:	ldr	r3, [sp]
   1bc1c:	add	sl, sl, r3
   1bc20:	cmp	r0, #77	; 0x4d
   1bc24:	mov	r2, r0
   1bc28:	beq	1becc <__assert_fail@plt+0xaac8>
   1bc2c:	bls	1be34 <__assert_fail@plt+0xaa30>
   1bc30:	cmp	r0, #82	; 0x52
   1bc34:	beq	1bedc <__assert_fail@plt+0xaad8>
   1bc38:	cmp	r0, #83	; 0x53
   1bc3c:	movweq	r1, #1356	; 0x54c
   1bc40:	moveq	r0, #0
   1bc44:	movteq	r1, #6
   1bc48:	bne	1ba50 <__assert_fail@plt+0xa64c>
   1bc4c:	mov	r2, #5
   1bc50:	bl	11170 <dcgettext@plt>
   1bc54:	mov	r1, r0
   1bc58:	mov	r0, #1
   1bc5c:	bl	1132c <__printf_chk@plt>
   1bc60:	mov	r0, sl
   1bc64:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1bc68:	mov	r3, r9
   1bc6c:	mov	r0, sl
   1bc70:	mov	r1, sp
   1bc74:	mov	r2, #0
   1bc78:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1bc7c:	ldr	r3, [sp]
   1bc80:	add	sl, sl, r3
   1bc84:	mov	r4, r0
   1bc88:	cmp	r0, #3
   1bc8c:	ldrls	pc, [pc, r0, lsl #2]
   1bc90:	b	1be54 <__assert_fail@plt+0xaa50>
   1bc94:	ldrdeq	fp, [r1], -ip
   1bc98:	andeq	fp, r1, ip, asr #27
   1bc9c:	andeq	fp, r1, ip, ror #27
   1bca0:			; <UNDEFINED> instruction: 0x0001bdb8
   1bca4:	mov	r0, sl
   1bca8:	mov	r2, #0
   1bcac:	mov	r3, r9
   1bcb0:	mov	r1, sp
   1bcb4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1bcb8:	ldr	r3, [sp]
   1bcbc:	mov	r2, #5
   1bcc0:	movw	r1, #1468	; 0x5bc
   1bcc4:	movt	r1, #6
   1bcc8:	add	sl, sl, r3
   1bccc:	mov	r4, r0
   1bcd0:	mov	r0, #0
   1bcd4:	bl	11170 <dcgettext@plt>
   1bcd8:	mov	r2, r4
   1bcdc:	mov	r1, r0
   1bce0:	mov	r0, #1
   1bce4:	bl	1132c <__printf_chk@plt>
   1bce8:	sub	r3, r9, #1
   1bcec:	cmp	sl, r3
   1bcf0:	bcs	1be0c <__assert_fail@plt+0xaa08>
   1bcf4:	rsb	r4, sl, r9
   1bcf8:	mov	r1, sl
   1bcfc:	sub	r4, r4, #1
   1bd00:	mov	r0, r4
   1bd04:	bl	19a8c <__assert_fail@plt+0x8688>
   1bd08:	mov	r0, sl
   1bd0c:	mov	r1, r4
   1bd10:	bl	11350 <strnlen@plt>
   1bd14:	add	r0, r0, #1
   1bd18:	add	sl, sl, r0
   1bd1c:	movw	r3, #16696	; 0x4138
   1bd20:	movt	r3, #9
   1bd24:	mov	r0, #10
   1bd28:	ldr	r1, [r3]
   1bd2c:	bl	111ac <_IO_putc@plt>
   1bd30:	mov	r0, sl
   1bd34:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1bd38:	cmp	r9, sl
   1bd3c:	movw	r1, #1492	; 0x5d4
   1bd40:	addhi	sl, sl, #1
   1bd44:	mov	r0, #0
   1bd48:	movt	r1, #6
   1bd4c:	b	1bc4c <__assert_fail@plt+0xa848>
   1bd50:	mov	r3, r9
   1bd54:	mov	r0, sl
   1bd58:	mov	r1, sp
   1bd5c:	mov	r2, #0
   1bd60:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1bd64:	ldr	r3, [sp]
   1bd68:	add	sl, sl, r3
   1bd6c:	mov	r4, r0
   1bd70:	cmp	r0, #3
   1bd74:	ldrls	pc, [pc, r0, lsl #2]
   1bd78:	b	1be54 <__assert_fail@plt+0xaa50>
   1bd7c:	ldrdeq	fp, [r1], -ip
   1bd80:	strdeq	fp, [r1], -ip
   1bd84:	andeq	fp, r1, ip, asr #27
   1bd88:			; <UNDEFINED> instruction: 0x0001bdb8
   1bd8c:	mov	r2, #5
   1bd90:	movw	r1, #1500	; 0x5dc
   1bd94:	mov	r0, #0
   1bd98:	movt	r1, #6
   1bd9c:	bl	11170 <dcgettext@plt>
   1bda0:	mov	r2, r6
   1bda4:	mov	r1, r0
   1bda8:	mov	r0, #1
   1bdac:	bl	1132c <__printf_chk@plt>
   1bdb0:	mov	r0, sl
   1bdb4:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1bdb8:	movw	r0, #1400	; 0x578
   1bdbc:	movt	r0, #6
   1bdc0:	bl	11218 <puts@plt>
   1bdc4:	mov	r0, sl
   1bdc8:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1bdcc:	movw	r1, #1384	; 0x568
   1bdd0:	mov	r0, #0
   1bdd4:	movt	r1, #6
   1bdd8:	b	1bc4c <__assert_fail@plt+0xa848>
   1bddc:	movw	r1, #1300	; 0x514
   1bde0:	mov	r0, #0
   1bde4:	movt	r1, #6
   1bde8:	b	1bc4c <__assert_fail@plt+0xa848>
   1bdec:	movw	r1, #1392	; 0x570
   1bdf0:	mov	r0, #0
   1bdf4:	movt	r1, #6
   1bdf8:	b	1bc4c <__assert_fail@plt+0xa848>
   1bdfc:	movw	r1, #1444	; 0x5a4
   1be00:	mov	r0, #0
   1be04:	movt	r1, #6
   1be08:	b	1bc4c <__assert_fail@plt+0xa848>
   1be0c:	mov	r2, #5
   1be10:	movw	r1, #50908	; 0xc6dc
   1be14:	mov	r0, #0
   1be18:	movt	r1, #5
   1be1c:	bl	11170 <dcgettext@plt>
   1be20:	mov	sl, r9
   1be24:	mov	r1, r0
   1be28:	mov	r0, #1
   1be2c:	bl	1132c <__printf_chk@plt>
   1be30:	b	1bd1c <__assert_fail@plt+0xa918>
   1be34:	cmp	r0, #0
   1be38:	beq	1beec <__assert_fail@plt+0xaae8>
   1be3c:	cmp	r0, #65	; 0x41
   1be40:	movweq	r1, #1308	; 0x51c
   1be44:	moveq	r0, #0
   1be48:	movteq	r1, #6
   1be4c:	beq	1bc4c <__assert_fail@plt+0xa848>
   1be50:	b	1ba50 <__assert_fail@plt+0xa64c>
   1be54:	cmp	r4, #12
   1be58:	bhi	1bec4 <__assert_fail@plt+0xaac0>
   1be5c:	mov	r2, #5
   1be60:	movw	r1, #1408	; 0x580
   1be64:	mov	r0, #0
   1be68:	movt	r1, #6
   1be6c:	bl	11170 <dcgettext@plt>
   1be70:	mov	r1, r0
   1be74:	mov	r0, #1
   1be78:	lsl	r2, r0, r4
   1be7c:	bl	1132c <__printf_chk@plt>
   1be80:	mov	r0, sl
   1be84:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1be88:	mov	r0, sl
   1be8c:	mov	r2, #0
   1be90:	mov	r3, r9
   1be94:	mov	r1, sp
   1be98:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1be9c:	ldr	r3, [sp]
   1bea0:	add	sl, sl, r3
   1bea4:	cmp	r0, #17
   1bea8:	mov	r2, r0
   1beac:	bls	1befc <__assert_fail@plt+0xaaf8>
   1beb0:	movw	r1, #61824	; 0xf180
   1beb4:	mov	r0, #1
   1beb8:	movt	r1, #5
   1bebc:	bl	1132c <__printf_chk@plt>
   1bec0:	b	1bbd0 <__assert_fail@plt+0xa7cc>
   1bec4:	mov	r2, r4
   1bec8:	b	1ba50 <__assert_fail@plt+0xa64c>
   1becc:	movw	r1, #1336	; 0x538
   1bed0:	mov	r0, #0
   1bed4:	movt	r1, #6
   1bed8:	b	1bc4c <__assert_fail@plt+0xa848>
   1bedc:	movw	r1, #1324	; 0x52c
   1bee0:	mov	r0, #0
   1bee4:	movt	r1, #6
   1bee8:	b	1bc4c <__assert_fail@plt+0xa848>
   1beec:	movw	r1, #1300	; 0x514
   1bef0:	mov	r2, #5
   1bef4:	movt	r1, #6
   1bef8:	b	1bc50 <__assert_fail@plt+0xa84c>
   1befc:	add	r2, r5, r0, lsl #2
   1bf00:	ldr	r0, [r2, #656]	; 0x290
   1bf04:	bl	11218 <puts@plt>
   1bf08:	b	1bbd0 <__assert_fail@plt+0xa7cc>
   1bf0c:	mov	r0, sl
   1bf10:	b	1ba00 <__assert_fail@plt+0xa5fc>
   1bf14:	bl	1117c <__stack_chk_fail@plt>
   1bf18:	movw	r0, #1516	; 0x5ec
   1bf1c:	movw	r1, #64464	; 0xfbd0
   1bf20:	movt	r0, #6
   1bf24:	movt	r1, #5
   1bf28:	movw	r2, #13286	; 0x33e6
   1bf2c:	ldr	r3, [pc]	; 1bf34 <__assert_fail@plt+0xab30>
   1bf30:	bl	11404 <__assert_fail@plt>
   1bf34:	andeq	r4, r5, r4, lsl #29
   1bf38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf3c:	sub	sp, sp, #108	; 0x6c
   1bf40:	movw	r4, #16712	; 0x4148
   1bf44:	movt	r4, #9
   1bf48:	movw	ip, #16680	; 0x4128
   1bf4c:	movt	ip, #9
   1bf50:	str	ip, [sp, #88]	; 0x58
   1bf54:	mov	r9, r3
   1bf58:	ldr	ip, [r4, #68]	; 0x44
   1bf5c:	str	r4, [sp, #80]	; 0x50
   1bf60:	ldr	r4, [sp, #88]	; 0x58
   1bf64:	cmp	ip, #0
   1bf68:	str	r0, [sp, #92]	; 0x5c
   1bf6c:	ldr	ip, [sp, #80]	; 0x50
   1bf70:	ldr	r0, [r4]
   1bf74:	ldr	r4, [sp, #144]	; 0x90
   1bf78:	str	r1, [sp, #72]	; 0x48
   1bf7c:	str	r2, [sp, #84]	; 0x54
   1bf80:	ldr	r3, [ip, #220]	; 0xdc
   1bf84:	str	r0, [sp, #100]	; 0x64
   1bf88:	str	r4, [sp, #44]	; 0x2c
   1bf8c:	beq	1c7b4 <__assert_fail@plt+0xb3b0>
   1bf90:	add	r3, r3, #72	; 0x48
   1bf94:	movw	r4, #26492	; 0x677c
   1bf98:	movw	ip, #16696	; 0x4138
   1bf9c:	movt	r4, #9
   1bfa0:	movt	ip, #9
   1bfa4:	str	r4, [sp, #40]	; 0x28
   1bfa8:	str	r3, [sp, #64]	; 0x40
   1bfac:	mov	r4, #0
   1bfb0:	str	ip, [sp, #52]	; 0x34
   1bfb4:	mov	r8, r9
   1bfb8:	str	r4, [sp, #68]	; 0x44
   1bfbc:	b	1bfe8 <__assert_fail@plt+0xabe4>
   1bfc0:	ldr	ip, [sp, #80]	; 0x50
   1bfc4:	ldr	r4, [sp, #68]	; 0x44
   1bfc8:	ldr	r3, [ip, #68]	; 0x44
   1bfcc:	add	r4, r4, #1
   1bfd0:	ldr	ip, [sp, #64]	; 0x40
   1bfd4:	cmp	r3, r4
   1bfd8:	str	r4, [sp, #68]	; 0x44
   1bfdc:	add	ip, ip, #72	; 0x48
   1bfe0:	str	ip, [sp, #64]	; 0x40
   1bfe4:	bls	1c7b4 <__assert_fail@plt+0xb3b0>
   1bfe8:	ldr	ip, [sp, #64]	; 0x40
   1bfec:	ldr	r4, [sp, #84]	; 0x54
   1bff0:	ldr	r3, [ip, #-68]	; 0xffffffbc
   1bff4:	cmp	r3, r4
   1bff8:	beq	1c004 <__assert_fail@plt+0xac00>
   1bffc:	cmn	r3, #-1879048181	; 0x9000000b
   1c000:	bne	1bfc0 <__assert_fail@plt+0xabbc>
   1c004:	ldr	ip, [sp, #64]	; 0x40
   1c008:	mov	r2, #5
   1c00c:	movw	r1, #1536	; 0x600
   1c010:	mov	r0, #0
   1c014:	movt	r1, #6
   1c018:	ldr	r6, [ip, #-48]	; 0xffffffd0
   1c01c:	ldrd	r4, [ip, #-40]	; 0xffffffd8
   1c020:	bl	11170 <dcgettext@plt>
   1c024:	mov	r2, #1
   1c028:	mov	r3, #0
   1c02c:	ldr	r1, [sp, #92]	; 0x5c
   1c030:	strd	r2, [sp]
   1c034:	mov	r2, r6
   1c038:	strd	r4, [sp, #8]
   1c03c:	str	r0, [sp, #16]
   1c040:	mov	r0, #0
   1c044:	bl	1502c <__assert_fail@plt+0x3c28>
   1c048:	cmp	r0, #0
   1c04c:	str	r0, [sp, #32]
   1c050:	beq	1bfc0 <__assert_fail@plt+0xabbc>
   1c054:	ldrb	r3, [r0]
   1c058:	cmp	r3, #65	; 0x41
   1c05c:	bne	1c768 <__assert_fail@plt+0xb364>
   1c060:	ldr	r4, [sp, #64]	; 0x40
   1c064:	add	fp, r0, #1
   1c068:	ldrd	r2, [r4, #-40]	; 0xffffffd8
   1c06c:	subs	r0, r2, #1
   1c070:	sbc	r1, r3, #0
   1c074:	strd	r0, [sp, #56]	; 0x38
   1c078:	orrs	r1, r0, r1
   1c07c:	beq	1c450 <__assert_fail@plt+0xb04c>
   1c080:	ldrd	r2, [sp, #56]	; 0x38
   1c084:	cmp	r3, #0
   1c088:	cmpeq	r2, #4
   1c08c:	ldrhi	r5, [sp, #64]	; 0x40
   1c090:	bls	1c438 <__assert_fail@plt+0xb034>
   1c094:	ldr	r4, [sp, #40]	; 0x28
   1c098:	mov	r1, #4
   1c09c:	mov	r0, fp
   1c0a0:	add	r9, fp, r1
   1c0a4:	ldr	r3, [r4]
   1c0a8:	blx	r3
   1c0ac:	mov	r6, r0
   1c0b0:	mov	r7, r1
   1c0b4:	ldrd	r0, [sp, #56]	; 0x38
   1c0b8:	cmp	r7, r1
   1c0bc:	cmpeq	r6, r0
   1c0c0:	bhi	1c6c8 <__assert_fail@plt+0xb2c4>
   1c0c4:	cmp	r7, #0
   1c0c8:	cmpeq	r6, #4
   1c0cc:	bls	1c7d4 <__assert_fail@plt+0xb3d0>
   1c0d0:	ldrd	r0, [sp, #56]	; 0x38
   1c0d4:	subs	r0, r0, r6
   1c0d8:	sbc	r1, r1, r7
   1c0dc:	strd	r0, [sp, #56]	; 0x38
   1c0e0:	subs	r6, r6, #4
   1c0e4:	mov	r0, r9
   1c0e8:	sbc	r7, r7, #0
   1c0ec:	mov	r1, r6
   1c0f0:	bl	11350 <strnlen@plt>
   1c0f4:	adds	r4, r0, #1
   1c0f8:	beq	1c798 <__assert_fail@plt+0xb394>
   1c0fc:	mov	r2, r4
   1c100:	mov	r3, #0
   1c104:	cmp	r7, r3
   1c108:	cmpeq	r6, r2
   1c10c:	strd	r2, [sp, #24]
   1c110:	bls	1c798 <__assert_fail@plt+0xb394>
   1c114:	mov	r2, #5
   1c118:	movw	r1, #1684	; 0x694
   1c11c:	mov	r0, #0
   1c120:	movt	r1, #6
   1c124:	bl	11170 <dcgettext@plt>
   1c128:	mov	r1, r0
   1c12c:	mov	r0, #1
   1c130:	bl	1132c <__printf_chk@plt>
   1c134:	mov	r1, r9
   1c138:	mvn	r0, #-2147483648	; 0x80000000
   1c13c:	bl	19a8c <__assert_fail@plt+0x8688>
   1c140:	ldr	ip, [sp, #52]	; 0x34
   1c144:	mov	r0, #10
   1c148:	ldr	r1, [ip]
   1c14c:	bl	111ac <_IO_putc@plt>
   1c150:	ldr	ip, [sp, #72]	; 0x48
   1c154:	cmp	ip, #0
   1c158:	beq	1c75c <__assert_fail@plt+0xb358>
   1c15c:	mov	r0, r9
   1c160:	mov	r1, ip
   1c164:	bl	110f8 <strcmp@plt>
   1c168:	rsbs	r0, r0, #1
   1c16c:	movcc	r0, #0
   1c170:	str	r0, [sp, #36]	; 0x24
   1c174:	ldrb	r3, [fp, #4]
   1c178:	subs	r3, r3, #103	; 0x67
   1c17c:	bne	1c198 <__assert_fail@plt+0xad94>
   1c180:	ldrb	r3, [fp, #5]
   1c184:	subs	r3, r3, #110	; 0x6e
   1c188:	bne	1c198 <__assert_fail@plt+0xad94>
   1c18c:	ldrb	r3, [fp, #6]
   1c190:	subs	r3, r3, #117	; 0x75
   1c194:	ldrbeq	r3, [fp, #7]
   1c198:	ldrd	r0, [sp, #24]
   1c19c:	add	fp, r9, r4
   1c1a0:	subs	r0, r6, r0
   1c1a4:	sbc	r1, r7, r1
   1c1a8:	rsbs	r3, r3, #1
   1c1ac:	strd	r0, [sp, #24]
   1c1b0:	movcc	r3, #0
   1c1b4:	orrs	r1, r0, r1
   1c1b8:	str	r3, [sp, #48]	; 0x30
   1c1bc:	beq	1c41c <__assert_fail@plt+0xb018>
   1c1c0:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1c1c4:	ldr	r4, [sp, #32]
   1c1c8:	add	r3, r4, r3
   1c1cc:	cmp	fp, r3
   1c1d0:	bcs	1c41c <__assert_fail@plt+0xb018>
   1c1d4:	ldrd	r0, [sp, #24]
   1c1d8:	cmp	r1, #0
   1c1dc:	cmpeq	r0, #5
   1c1e0:	bls	1c4f4 <__assert_fail@plt+0xb0f0>
   1c1e4:	ldr	r4, [sp, #40]	; 0x28
   1c1e8:	add	r9, fp, #1
   1c1ec:	mov	r1, #4
   1c1f0:	mov	r0, r9
   1c1f4:	ldr	r3, [r4]
   1c1f8:	ldrb	r4, [fp]
   1c1fc:	blx	r3
   1c200:	mov	r6, r0
   1c204:	mov	r7, r1
   1c208:	ldrd	r0, [sp, #24]
   1c20c:	cmp	r7, r1
   1c210:	cmpeq	r6, r0
   1c214:	bhi	1c3e0 <__assert_fail@plt+0xafdc>
   1c218:	cmp	r7, #0
   1c21c:	cmpeq	r6, #5
   1c220:	bls	1c73c <__assert_fail@plt+0xb338>
   1c224:	ldrd	r0, [sp, #24]
   1c228:	subs	r0, r0, r6
   1c22c:	sbc	r1, r1, r7
   1c230:	strd	r0, [sp, #24]
   1c234:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1c238:	sub	r6, r6, #1
   1c23c:	ldr	ip, [sp, #32]
   1c240:	add	r6, r9, r6
   1c244:	add	r3, ip, r3
   1c248:	cmp	r6, r3
   1c24c:	bhi	1c7f4 <__assert_fail@plt+0xb3f0>
   1c250:	cmp	r4, #2
   1c254:	add	fp, fp, #5
   1c258:	beq	1c578 <__assert_fail@plt+0xb174>
   1c25c:	cmp	r4, #3
   1c260:	beq	1c510 <__assert_fail@plt+0xb10c>
   1c264:	cmp	r4, #1
   1c268:	beq	1c45c <__assert_fail@plt+0xb058>
   1c26c:	mov	r2, #5
   1c270:	movw	r1, #1896	; 0x768
   1c274:	mov	r0, #0
   1c278:	movt	r1, #6
   1c27c:	bl	11170 <dcgettext@plt>
   1c280:	mov	r2, r4
   1c284:	mov	r4, #0
   1c288:	str	r4, [sp, #36]	; 0x24
   1c28c:	mov	r1, r0
   1c290:	mov	r0, #1
   1c294:	bl	1132c <__printf_chk@plt>
   1c298:	ldr	r9, [sp, #48]	; 0x30
   1c29c:	ldr	ip, [sp, #44]	; 0x2c
   1c2a0:	cmp	ip, #0
   1c2a4:	moveq	r9, #0
   1c2a8:	andne	r9, r9, #1
   1c2ac:	cmp	r9, #0
   1c2b0:	beq	1c414 <__assert_fail@plt+0xb010>
   1c2b4:	cmp	r6, fp
   1c2b8:	bls	1c32c <__assert_fail@plt+0xaf28>
   1c2bc:	add	r4, sp, #96	; 0x60
   1c2c0:	sub	r7, r6, #1
   1c2c4:	mov	r9, ip
   1c2c8:	b	1c2e4 <__assert_fail@plt+0xaee0>
   1c2cc:	mov	r0, fp
   1c2d0:	mov	r2, r6
   1c2d4:	blx	r9
   1c2d8:	mov	fp, r0
   1c2dc:	cmp	r6, fp
   1c2e0:	bls	1c32c <__assert_fail@plt+0xaf28>
   1c2e4:	mov	r0, fp
   1c2e8:	mov	r2, #0
   1c2ec:	mov	r1, r4
   1c2f0:	mov	r3, r6
   1c2f4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1c2f8:	ldr	r2, [sp, #96]	; 0x60
   1c2fc:	add	fp, fp, r2
   1c300:	cmp	r0, #32
   1c304:	mov	r1, r0
   1c308:	beq	1c350 <__assert_fail@plt+0xaf4c>
   1c30c:	tst	r0, #2
   1c310:	beq	1c2cc <__assert_fail@plt+0xaec8>
   1c314:	mov	r1, fp
   1c318:	mov	r2, r6
   1c31c:	bl	1b5b8 <__assert_fail@plt+0xa1b4>
   1c320:	mov	fp, r0
   1c324:	cmp	r6, fp
   1c328:	bhi	1c2e4 <__assert_fail@plt+0xaee0>
   1c32c:	cmp	fp, r6
   1c330:	bls	1c4c4 <__assert_fail@plt+0xb0c0>
   1c334:	movw	r0, #1044	; 0x414
   1c338:	movw	r1, #64464	; 0xfbd0
   1c33c:	movt	r0, #6
   1c340:	movt	r1, #5
   1c344:	movw	r2, #14217	; 0x3789
   1c348:	ldr	r3, [pc, #1248]	; 1c830 <__assert_fail@plt+0xb42c>
   1c34c:	bl	11404 <__assert_fail@plt>
   1c350:	mov	r0, fp
   1c354:	mov	r2, #0
   1c358:	mov	r3, r6
   1c35c:	mov	r1, r4
   1c360:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1c364:	ldr	r3, [sp, #96]	; 0x60
   1c368:	mov	r2, #5
   1c36c:	movw	r1, #1468	; 0x5bc
   1c370:	movt	r1, #6
   1c374:	add	fp, fp, r3
   1c378:	mov	sl, r0
   1c37c:	mov	r0, #0
   1c380:	bl	11170 <dcgettext@plt>
   1c384:	mov	r2, sl
   1c388:	mov	r1, r0
   1c38c:	mov	r0, #1
   1c390:	bl	1132c <__printf_chk@plt>
   1c394:	cmp	r6, fp
   1c398:	beq	1c6fc <__assert_fail@plt+0xb2f8>
   1c39c:	cmp	fp, r7
   1c3a0:	bcs	1c588 <__assert_fail@plt+0xb184>
   1c3a4:	rsb	sl, fp, r6
   1c3a8:	mov	r1, fp
   1c3ac:	sub	sl, sl, #1
   1c3b0:	mov	r0, sl
   1c3b4:	bl	19a8c <__assert_fail@plt+0x8688>
   1c3b8:	mov	r0, fp
   1c3bc:	mov	r1, sl
   1c3c0:	bl	11350 <strnlen@plt>
   1c3c4:	add	r0, r0, #1
   1c3c8:	add	fp, fp, r0
   1c3cc:	ldr	ip, [sp, #52]	; 0x34
   1c3d0:	mov	r0, #10
   1c3d4:	ldr	r1, [ip]
   1c3d8:	bl	111ac <_IO_putc@plt>
   1c3dc:	b	1c2dc <__assert_fail@plt+0xaed8>
   1c3e0:	mov	r2, #5
   1c3e4:	movw	r1, #1736	; 0x6c8
   1c3e8:	mov	r0, #0
   1c3ec:	movt	r1, #6
   1c3f0:	bl	11170 <dcgettext@plt>
   1c3f4:	mov	r1, r6
   1c3f8:	ldr	r2, [sp, #24]
   1c3fc:	bl	4b2b0 <error@@Base>
   1c400:	ldrd	r6, [sp, #24]
   1c404:	mov	r2, #0
   1c408:	mov	r3, #0
   1c40c:	strd	r2, [sp, #24]
   1c410:	b	1c234 <__assert_fail@plt+0xae30>
   1c414:	cmp	r6, fp
   1c418:	bhi	1c5b0 <__assert_fail@plt+0xb1ac>
   1c41c:	ldrd	r0, [sp, #56]	; 0x38
   1c420:	orrs	r1, r0, r1
   1c424:	beq	1c450 <__assert_fail@plt+0xb04c>
   1c428:	ldrd	r0, [sp, #56]	; 0x38
   1c42c:	cmp	r1, #0
   1c430:	cmpeq	r0, #4
   1c434:	bhi	1c094 <__assert_fail@plt+0xac90>
   1c438:	movw	r1, #1548	; 0x60c
   1c43c:	mov	r2, #5
   1c440:	movt	r1, #6
   1c444:	mov	r0, #0
   1c448:	bl	11170 <dcgettext@plt>
   1c44c:	bl	4b2b0 <error@@Base>
   1c450:	ldr	r0, [sp, #32]
   1c454:	bl	1111c <free@plt>
   1c458:	b	1bfc0 <__assert_fail@plt+0xabbc>
   1c45c:	movw	r1, #1836	; 0x72c
   1c460:	mov	r0, #0
   1c464:	movt	r1, #6
   1c468:	mov	r2, #5
   1c46c:	bl	11170 <dcgettext@plt>
   1c470:	mov	r1, r0
   1c474:	mov	r0, r4
   1c478:	bl	1132c <__printf_chk@plt>
   1c47c:	ldr	r3, [sp, #36]	; 0x24
   1c480:	cmp	r8, #0
   1c484:	moveq	r3, #0
   1c488:	andne	r3, r3, #1
   1c48c:	cmp	r3, #0
   1c490:	beq	1c298 <__assert_fail@plt+0xae94>
   1c494:	cmp	fp, r6
   1c498:	bcs	1c4b4 <__assert_fail@plt+0xb0b0>
   1c49c:	mov	r0, fp
   1c4a0:	mov	r1, r6
   1c4a4:	blx	r8
   1c4a8:	cmp	r6, r0
   1c4ac:	bhi	1c4a0 <__assert_fail@plt+0xb09c>
   1c4b0:	mov	fp, r0
   1c4b4:	cmp	r6, fp
   1c4b8:	bcc	1c814 <__assert_fail@plt+0xb410>
   1c4bc:	mov	ip, #1
   1c4c0:	str	ip, [sp, #36]	; 0x24
   1c4c4:	ldrd	r0, [sp, #24]
   1c4c8:	orrs	r1, r0, r1
   1c4cc:	beq	1c41c <__assert_fail@plt+0xb018>
   1c4d0:	ldr	r3, [r5, #-40]	; 0xffffffd8
   1c4d4:	ldr	r4, [sp, #32]
   1c4d8:	add	r3, r4, r3
   1c4dc:	cmp	fp, r3
   1c4e0:	bcs	1c41c <__assert_fail@plt+0xb018>
   1c4e4:	ldrd	r2, [sp, #24]
   1c4e8:	cmp	r3, #0
   1c4ec:	cmpeq	r2, #5
   1c4f0:	bhi	1c1e4 <__assert_fail@plt+0xade0>
   1c4f4:	mov	r2, #5
   1c4f8:	movw	r1, #1704	; 0x6a8
   1c4fc:	mov	r0, #0
   1c500:	movt	r1, #6
   1c504:	bl	11170 <dcgettext@plt>
   1c508:	bl	4b2b0 <error@@Base>
   1c50c:	b	1c450 <__assert_fail@plt+0xb04c>
   1c510:	movw	r1, #1876	; 0x754
   1c514:	movt	r1, #6
   1c518:	mov	r0, #0
   1c51c:	mov	r2, #5
   1c520:	add	r4, sp, #96	; 0x60
   1c524:	bl	11170 <dcgettext@plt>
   1c528:	mov	r1, r0
   1c52c:	mov	r0, #1
   1c530:	bl	1132c <__printf_chk@plt>
   1c534:	b	1c548 <__assert_fail@plt+0xb144>
   1c538:	movw	r1, #15128	; 0x3b18
   1c53c:	mov	r0, #1
   1c540:	movt	r1, #6
   1c544:	bl	1132c <__printf_chk@plt>
   1c548:	mov	r0, fp
   1c54c:	mov	r2, #0
   1c550:	mov	r1, r4
   1c554:	mov	r3, r6
   1c558:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1c55c:	ldr	r2, [sp, #96]	; 0x60
   1c560:	add	fp, fp, r2
   1c564:	subs	r2, r0, #0
   1c568:	bne	1c538 <__assert_fail@plt+0xb134>
   1c56c:	mov	r0, #10
   1c570:	bl	112fc <putchar@plt>
   1c574:	b	1c47c <__assert_fail@plt+0xb078>
   1c578:	movw	r1, #1856	; 0x740
   1c57c:	mov	r0, #0
   1c580:	movt	r1, #6
   1c584:	b	1c51c <__assert_fail@plt+0xb118>
   1c588:	mov	r2, #5
   1c58c:	movw	r1, #50908	; 0xc6dc
   1c590:	mov	r0, #0
   1c594:	movt	r1, #5
   1c598:	bl	11170 <dcgettext@plt>
   1c59c:	mov	fp, r6
   1c5a0:	mov	r1, r0
   1c5a4:	mov	r0, #1
   1c5a8:	bl	1132c <__printf_chk@plt>
   1c5ac:	b	1c3cc <__assert_fail@plt+0xafc8>
   1c5b0:	mov	r2, #5
   1c5b4:	movw	r1, #1956	; 0x7a4
   1c5b8:	mov	r0, r9
   1c5bc:	movt	r1, #6
   1c5c0:	bl	11170 <dcgettext@plt>
   1c5c4:	mov	r1, r0
   1c5c8:	mov	r0, #1
   1c5cc:	bl	1132c <__printf_chk@plt>
   1c5d0:	subs	r7, r6, fp
   1c5d4:	strne	r5, [sp, #76]	; 0x4c
   1c5d8:	ldrne	sl, [sp, #52]	; 0x34
   1c5dc:	beq	1c6b0 <__assert_fail@plt+0xb2ac>
   1c5e0:	movw	r1, #1980	; 0x7bc
   1c5e4:	mov	r0, #1
   1c5e8:	movt	r1, #6
   1c5ec:	mov	r2, r9
   1c5f0:	bl	1132c <__printf_chk@plt>
   1c5f4:	cmp	r7, #16
   1c5f8:	movcc	r4, r7
   1c5fc:	movcs	r4, #16
   1c600:	mov	r5, #0
   1c604:	b	1c634 <__assert_fail@plt+0xb230>
   1c608:	movw	r1, #1992	; 0x7c8
   1c60c:	mov	r0, #1
   1c610:	movt	r1, #6
   1c614:	ldrb	r2, [fp, r5]
   1c618:	bl	1132c <__printf_chk@plt>
   1c61c:	and	r3, r5, #3
   1c620:	cmp	r3, #3
   1c624:	beq	1c658 <__assert_fail@plt+0xb254>
   1c628:	add	r5, r5, #1
   1c62c:	cmp	r5, #16
   1c630:	beq	1c66c <__assert_fail@plt+0xb268>
   1c634:	cmp	r4, r5
   1c638:	bgt	1c608 <__assert_fail@plt+0xb204>
   1c63c:	movw	r1, #6840	; 0x1ab8
   1c640:	mov	r0, #1
   1c644:	movt	r1, #6
   1c648:	bl	1132c <__printf_chk@plt>
   1c64c:	and	r3, r5, #3
   1c650:	cmp	r3, #3
   1c654:	bne	1c628 <__assert_fail@plt+0xb224>
   1c658:	mov	r0, #32
   1c65c:	add	r5, r5, #1
   1c660:	bl	112fc <putchar@plt>
   1c664:	cmp	r5, #16
   1c668:	bne	1c634 <__assert_fail@plt+0xb230>
   1c66c:	mov	r5, #0
   1c670:	ldrb	r0, [fp, r5]
   1c674:	add	r5, r5, #1
   1c678:	sub	r3, r0, #32
   1c67c:	cmp	r3, #94	; 0x5e
   1c680:	movhi	r0, #46	; 0x2e
   1c684:	bl	112fc <putchar@plt>
   1c688:	cmp	r4, r5
   1c68c:	bgt	1c670 <__assert_fail@plt+0xb26c>
   1c690:	mov	r0, #10
   1c694:	ldr	r1, [sl]
   1c698:	bl	111ac <_IO_putc@plt>
   1c69c:	subs	r7, r7, r4
   1c6a0:	add	fp, fp, r4
   1c6a4:	add	r9, r9, r4
   1c6a8:	bne	1c5e0 <__assert_fail@plt+0xb1dc>
   1c6ac:	ldr	r5, [sp, #76]	; 0x4c
   1c6b0:	ldr	r4, [sp, #52]	; 0x34
   1c6b4:	mov	r0, #10
   1c6b8:	mov	fp, r6
   1c6bc:	ldr	r1, [r4]
   1c6c0:	bl	111ac <_IO_putc@plt>
   1c6c4:	b	1c4c4 <__assert_fail@plt+0xb0c0>
   1c6c8:	mov	r2, #5
   1c6cc:	movw	r1, #1580	; 0x62c
   1c6d0:	mov	r0, #0
   1c6d4:	movt	r1, #6
   1c6d8:	bl	11170 <dcgettext@plt>
   1c6dc:	mov	r1, r6
   1c6e0:	ldr	r2, [sp, #56]	; 0x38
   1c6e4:	bl	4b2b0 <error@@Base>
   1c6e8:	ldrd	r6, [sp, #56]	; 0x38
   1c6ec:	mov	r2, #0
   1c6f0:	mov	r3, #0
   1c6f4:	strd	r2, [sp, #56]	; 0x38
   1c6f8:	b	1c0e0 <__assert_fail@plt+0xacdc>
   1c6fc:	mov	r2, #5
   1c700:	movw	r1, #1916	; 0x77c
   1c704:	mov	r0, #0
   1c708:	movt	r1, #6
   1c70c:	bl	11170 <dcgettext@plt>
   1c710:	mov	fp, r6
   1c714:	mov	r1, r0
   1c718:	mov	r0, #1
   1c71c:	bl	1132c <__printf_chk@plt>
   1c720:	mov	r2, #5
   1c724:	movw	r1, #1928	; 0x788
   1c728:	mov	r0, #0
   1c72c:	movt	r1, #6
   1c730:	bl	11170 <dcgettext@plt>
   1c734:	bl	4b9ec <warn@@Base>
   1c738:	b	1c4c4 <__assert_fail@plt+0xb0c0>
   1c73c:	mov	r2, #5
   1c740:	movw	r1, #1772	; 0x6ec
   1c744:	mov	r0, #0
   1c748:	movt	r1, #6
   1c74c:	bl	11170 <dcgettext@plt>
   1c750:	mov	r1, r6
   1c754:	bl	4b2b0 <error@@Base>
   1c758:	b	1c450 <__assert_fail@plt+0xb04c>
   1c75c:	ldr	ip, [sp, #72]	; 0x48
   1c760:	str	ip, [sp, #36]	; 0x24
   1c764:	b	1c174 <__assert_fail@plt+0xad70>
   1c768:	mov	r2, #5
   1c76c:	movw	r1, #2000	; 0x7d0
   1c770:	mov	r0, #0
   1c774:	movt	r1, #6
   1c778:	bl	11170 <dcgettext@plt>
   1c77c:	ldr	r4, [sp, #32]
   1c780:	ldrb	r2, [r4]
   1c784:	mov	r3, r2
   1c788:	mov	r1, r0
   1c78c:	mov	r0, #1
   1c790:	bl	1132c <__printf_chk@plt>
   1c794:	b	1c450 <__assert_fail@plt+0xb04c>
   1c798:	mov	r2, #5
   1c79c:	movw	r1, #1652	; 0x674
   1c7a0:	mov	r0, #0
   1c7a4:	movt	r1, #6
   1c7a8:	bl	11170 <dcgettext@plt>
   1c7ac:	bl	4b2b0 <error@@Base>
   1c7b0:	b	1c450 <__assert_fail@plt+0xb04c>
   1c7b4:	ldr	ip, [sp, #88]	; 0x58
   1c7b8:	mov	r0, #1
   1c7bc:	ldr	r2, [sp, #100]	; 0x64
   1c7c0:	ldr	r3, [ip]
   1c7c4:	cmp	r2, r3
   1c7c8:	bne	1c810 <__assert_fail@plt+0xb40c>
   1c7cc:	add	sp, sp, #108	; 0x6c
   1c7d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c7d4:	mov	r2, #5
   1c7d8:	movw	r1, #1612	; 0x64c
   1c7dc:	mov	r0, #0
   1c7e0:	movt	r1, #6
   1c7e4:	bl	11170 <dcgettext@plt>
   1c7e8:	mov	r1, r6
   1c7ec:	bl	4b2b0 <error@@Base>
   1c7f0:	b	1c450 <__assert_fail@plt+0xb04c>
   1c7f4:	movw	r0, #1804	; 0x70c
   1c7f8:	movw	r1, #64464	; 0xfbd0
   1c7fc:	movt	r0, #6
   1c800:	movt	r1, #5
   1c804:	movw	r2, #14173	; 0x375d
   1c808:	ldr	r3, [pc, #32]	; 1c830 <__assert_fail@plt+0xb42c>
   1c80c:	bl	11404 <__assert_fail@plt>
   1c810:	bl	1117c <__stack_chk_fail@plt>
   1c814:	movw	r0, #1044	; 0x414
   1c818:	movw	r1, #64464	; 0xfbd0
   1c81c:	movt	r0, #6
   1c820:	movt	r1, #5
   1c824:	movw	r2, #14209	; 0x3781
   1c828:	ldr	r3, [pc]	; 1c830 <__assert_fail@plt+0xb42c>
   1c82c:	bl	11404 <__assert_fail@plt>
   1c830:	muleq	r5, ip, lr
   1c834:	push	{r4, r5, r6, r7, lr}
   1c838:	movw	r4, #16680	; 0x4128
   1c83c:	movt	r4, #9
   1c840:	sub	sp, sp, #12
   1c844:	mov	r3, r1
   1c848:	mov	r2, #0
   1c84c:	ldr	ip, [r4]
   1c850:	mov	r5, r1
   1c854:	mov	r1, sp
   1c858:	mov	r6, r0
   1c85c:	str	ip, [sp, #4]
   1c860:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1c864:	ldr	r2, [sp]
   1c868:	add	r6, r6, r2
   1c86c:	sub	r3, r0, #4
   1c870:	cmp	r3, #63	; 0x3f
   1c874:	ldrls	pc, [pc, r3, lsl #2]
   1c878:	b	1cda8 <__assert_fail@plt+0xb9a4>
   1c87c:	andeq	ip, r1, ip, asr #19
   1c880:	andeq	ip, r1, r8, lsr #27
   1c884:	andeq	ip, r1, ip, lsr #20
   1c888:	andeq	ip, r1, r8, lsr #27
   1c88c:	andeq	ip, r1, r8, lsl #21
   1c890:	andeq	ip, r1, r8, lsr #27
   1c894:	andeq	ip, r1, r4, lsl #22
   1c898:	andeq	ip, r1, r8, lsr #27
   1c89c:	andeq	ip, r1, r4, ror #22
   1c8a0:	andeq	ip, r1, r8, lsr #27
   1c8a4:			; <UNDEFINED> instruction: 0x0001cbb4
   1c8a8:	andeq	ip, r1, r8, lsr #27
   1c8ac:	andeq	ip, r1, r0, lsl ip
   1c8b0:	andeq	ip, r1, r8, lsr #27
   1c8b4:	andeq	ip, r1, r0, ror #24
   1c8b8:	andeq	ip, r1, r8, lsr #27
   1c8bc:	andeq	ip, r1, r4, asr #25
   1c8c0:	andeq	ip, r1, r8, lsr #27
   1c8c4:	andeq	ip, r1, r8, lsr #27
   1c8c8:	andeq	ip, r1, r8, lsr #27
   1c8cc:	andeq	ip, r1, r8, lsr #27
   1c8d0:	andeq	ip, r1, r8, lsr #27
   1c8d4:	andeq	ip, r1, r8, lsr #27
   1c8d8:	andeq	ip, r1, r8, lsr #27
   1c8dc:	andeq	ip, r1, r8, lsr #27
   1c8e0:	andeq	ip, r1, r8, lsr #27
   1c8e4:	andeq	ip, r1, r8, lsr #27
   1c8e8:	andeq	ip, r1, r8, lsr #27
   1c8ec:	andeq	ip, r1, ip, lsl #26
   1c8f0:	andeq	ip, r1, r8, lsr #27
   1c8f4:	andeq	ip, r1, r8, lsr #27
   1c8f8:	andeq	ip, r1, r8, lsr #27
   1c8fc:	andeq	ip, r1, r8, lsr #27
   1c900:	andeq	ip, r1, r8, lsr #27
   1c904:	andeq	ip, r1, r8, lsr #27
   1c908:	andeq	ip, r1, r8, lsr #27
   1c90c:	andeq	ip, r1, r8, lsr #27
   1c910:	andeq	ip, r1, r8, lsr #27
   1c914:	andeq	ip, r1, r8, lsr #27
   1c918:	andeq	ip, r1, r8, lsr #27
   1c91c:	andeq	ip, r1, r8, lsr #27
   1c920:	andeq	ip, r1, r8, lsr #27
   1c924:	andeq	ip, r1, r8, lsr #27
   1c928:	andeq	ip, r1, r8, lsr #27
   1c92c:	andeq	ip, r1, r8, lsr #27
   1c930:	andeq	ip, r1, r8, lsr #27
   1c934:	andeq	ip, r1, r8, lsr #27
   1c938:	andeq	ip, r1, r8, lsr #27
   1c93c:	andeq	ip, r1, r8, lsr #27
   1c940:	andeq	ip, r1, r8, lsr #27
   1c944:	andeq	ip, r1, r8, lsr #27
   1c948:	andeq	ip, r1, r8, lsr #27
   1c94c:	andeq	ip, r1, r8, lsr #27
   1c950:	andeq	ip, r1, r8, lsr #27
   1c954:	andeq	ip, r1, r8, lsr #27
   1c958:	andeq	ip, r1, r8, lsr #27
   1c95c:	andeq	ip, r1, r8, lsr #27
   1c960:	andeq	ip, r1, r8, lsr #27
   1c964:	andeq	ip, r1, r8, lsr #27
   1c968:	andeq	ip, r1, r8, lsr #27
   1c96c:	andeq	ip, r1, r8, lsr #27
   1c970:	andeq	ip, r1, r8, lsr #27
   1c974:	andeq	ip, r1, r8, lsr #27
   1c978:	andeq	ip, r1, ip, ror r9
   1c97c:	movw	r1, #2652	; 0xa5c
   1c980:	mov	r0, #1
   1c984:	movt	r1, #6
   1c988:	bl	1132c <__printf_chk@plt>
   1c98c:	sub	r3, r5, #1
   1c990:	cmp	r6, r3
   1c994:	bcc	1cdb8 <__assert_fail@plt+0xb9b4>
   1c998:	movw	r1, #50908	; 0xc6dc
   1c99c:	mov	r0, #0
   1c9a0:	movt	r1, #5
   1c9a4:	mov	r2, #5
   1c9a8:	bl	11170 <dcgettext@plt>
   1c9ac:	mov	r1, r0
   1c9b0:	mov	r0, #1
   1c9b4:	bl	1132c <__printf_chk@plt>
   1c9b8:	movw	r0, #1024	; 0x400
   1c9bc:	movt	r0, #6
   1c9c0:	bl	11218 <puts@plt>
   1c9c4:	mov	r0, r5
   1c9c8:	b	1caec <__assert_fail@plt+0xb6e8>
   1c9cc:	mov	r3, r5
   1c9d0:	mov	r0, r6
   1c9d4:	mov	r1, sp
   1c9d8:	mov	r2, #0
   1c9dc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1c9e0:	ldr	r3, [sp]
   1c9e4:	movw	r1, #2028	; 0x7ec
   1c9e8:	movt	r1, #6
   1c9ec:	add	r6, r6, r3
   1c9f0:	mov	r7, r0
   1c9f4:	mov	r0, #1
   1c9f8:	bl	1132c <__printf_chk@plt>
   1c9fc:	cmp	r7, #8
   1ca00:	ldrls	pc, [pc, r7, lsl #2]
   1ca04:	b	1cca8 <__assert_fail@plt+0xb8a4>
   1ca08:			; <UNDEFINED> instruction: 0x0001ceb0
   1ca0c:	muleq	r1, ip, lr
   1ca10:	andeq	ip, r1, r8, lsr #25
   1ca14:	andeq	ip, r1, r8, lsl #29
   1ca18:	andeq	ip, r1, r4, ror lr
   1ca1c:	andeq	ip, r1, r8, lsr #25
   1ca20:	andeq	ip, r1, r0, ror #28
   1ca24:	andeq	ip, r1, ip, asr #28
   1ca28:	andeq	ip, r1, r8, lsr lr
   1ca2c:	mov	r3, r5
   1ca30:	mov	r0, r6
   1ca34:	mov	r2, #0
   1ca38:	mov	r1, sp
   1ca3c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1ca40:	ldr	r3, [sp]
   1ca44:	movw	r1, #2088	; 0x828
   1ca48:	movt	r1, #6
   1ca4c:	add	r6, r6, r3
   1ca50:	mov	r7, r0
   1ca54:	mov	r0, #1
   1ca58:	bl	1132c <__printf_chk@plt>
   1ca5c:	cmp	r7, #1
   1ca60:	beq	1cf00 <__assert_fail@plt+0xbafc>
   1ca64:	cmp	r7, #2
   1ca68:	beq	1ce24 <__assert_fail@plt+0xba20>
   1ca6c:	cmp	r7, #0
   1ca70:	bne	1cca8 <__assert_fail@plt+0xb8a4>
   1ca74:	movw	r1, #2108	; 0x83c
   1ca78:	mov	r0, r7
   1ca7c:	mov	r2, #5
   1ca80:	movt	r1, #6
   1ca84:	b	1cb4c <__assert_fail@plt+0xb748>
   1ca88:	mov	r3, r5
   1ca8c:	mov	r0, r6
   1ca90:	mov	r2, #0
   1ca94:	mov	r1, sp
   1ca98:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1ca9c:	ldr	r3, [sp]
   1caa0:	movw	r1, #2144	; 0x860
   1caa4:	movt	r1, #6
   1caa8:	add	r6, r6, r3
   1caac:	mov	r7, r0
   1cab0:	mov	r0, #1
   1cab4:	bl	1132c <__printf_chk@plt>
   1cab8:	cmp	r7, #0
   1cabc:	beq	1cb3c <__assert_fail@plt+0xb738>
   1cac0:	cmp	r7, #1
   1cac4:	bne	1cca8 <__assert_fail@plt+0xb8a4>
   1cac8:	movw	r1, #2176	; 0x880
   1cacc:	movt	r1, #6
   1cad0:	mov	r0, #0
   1cad4:	mov	r2, #5
   1cad8:	bl	11170 <dcgettext@plt>
   1cadc:	mov	r1, r0
   1cae0:	mov	r0, r7
   1cae4:	bl	1132c <__printf_chk@plt>
   1cae8:	mov	r0, r6
   1caec:	ldr	r2, [sp, #4]
   1caf0:	ldr	r3, [r4]
   1caf4:	cmp	r2, r3
   1caf8:	bne	1cf20 <__assert_fail@plt+0xbb1c>
   1cafc:	add	sp, sp, #12
   1cb00:	pop	{r4, r5, r6, r7, pc}
   1cb04:	mov	r3, r5
   1cb08:	mov	r0, r6
   1cb0c:	mov	r2, #0
   1cb10:	mov	r1, sp
   1cb14:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1cb18:	ldr	r3, [sp]
   1cb1c:	movw	r1, #2188	; 0x88c
   1cb20:	movt	r1, #6
   1cb24:	add	r6, r6, r3
   1cb28:	mov	r7, r0
   1cb2c:	mov	r0, #1
   1cb30:	bl	1132c <__printf_chk@plt>
   1cb34:	cmp	r7, #0
   1cb38:	bne	1cac0 <__assert_fail@plt+0xb6bc>
   1cb3c:	movw	r1, #1384	; 0x568
   1cb40:	movt	r1, #6
   1cb44:	mov	r0, r7
   1cb48:	mov	r2, #5
   1cb4c:	bl	11170 <dcgettext@plt>
   1cb50:	mov	r1, r0
   1cb54:	mov	r0, #1
   1cb58:	bl	1132c <__printf_chk@plt>
   1cb5c:	mov	r0, r6
   1cb60:	b	1caec <__assert_fail@plt+0xb6e8>
   1cb64:	mov	r3, r5
   1cb68:	mov	r0, r6
   1cb6c:	mov	r2, #0
   1cb70:	mov	r1, sp
   1cb74:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1cb78:	ldr	r3, [sp]
   1cb7c:	movw	r1, #2224	; 0x8b0
   1cb80:	movt	r1, #6
   1cb84:	add	r6, r6, r3
   1cb88:	mov	r7, r0
   1cb8c:	mov	r0, #1
   1cb90:	bl	1132c <__printf_chk@plt>
   1cb94:	cmp	r7, #0
   1cb98:	beq	1ceec <__assert_fail@plt+0xbae8>
   1cb9c:	cmp	r7, #1
   1cba0:	bne	1cca8 <__assert_fail@plt+0xb8a4>
   1cba4:	movw	r1, #2272	; 0x8e0
   1cba8:	mov	r0, #0
   1cbac:	movt	r1, #6
   1cbb0:	b	1cad4 <__assert_fail@plt+0xb6d0>
   1cbb4:	mov	r3, r5
   1cbb8:	mov	r0, r6
   1cbbc:	mov	r2, #0
   1cbc0:	mov	r1, sp
   1cbc4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1cbc8:	ldr	r3, [sp]
   1cbcc:	movw	r1, #2296	; 0x8f8
   1cbd0:	movt	r1, #6
   1cbd4:	add	r6, r6, r3
   1cbd8:	mov	r7, r0
   1cbdc:	mov	r0, #1
   1cbe0:	bl	1132c <__printf_chk@plt>
   1cbe4:	cmp	r7, #1
   1cbe8:	beq	1cf10 <__assert_fail@plt+0xbb0c>
   1cbec:	cmp	r7, #2
   1cbf0:	beq	1ce10 <__assert_fail@plt+0xba0c>
   1cbf4:	cmp	r7, #0
   1cbf8:	bne	1cca8 <__assert_fail@plt+0xb8a4>
   1cbfc:	movw	r1, #2312	; 0x908
   1cc00:	mov	r0, r7
   1cc04:	mov	r2, #5
   1cc08:	movt	r1, #6
   1cc0c:	b	1cb4c <__assert_fail@plt+0xb748>
   1cc10:	mov	r3, r5
   1cc14:	mov	r0, r6
   1cc18:	mov	r2, #0
   1cc1c:	mov	r1, sp
   1cc20:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1cc24:	ldr	r3, [sp]
   1cc28:	movw	r1, #2456	; 0x998
   1cc2c:	movt	r1, #6
   1cc30:	add	r6, r6, r3
   1cc34:	mov	r7, r0
   1cc38:	mov	r0, #1
   1cc3c:	bl	1132c <__printf_chk@plt>
   1cc40:	cmp	r7, #0
   1cc44:	beq	1ced8 <__assert_fail@plt+0xbad4>
   1cc48:	cmp	r7, #1
   1cc4c:	bne	1cca8 <__assert_fail@plt+0xb8a4>
   1cc50:	movw	r1, #2508	; 0x9cc
   1cc54:	mov	r0, #0
   1cc58:	movt	r1, #6
   1cc5c:	b	1cad4 <__assert_fail@plt+0xb6d0>
   1cc60:	mov	r3, r5
   1cc64:	mov	r0, r6
   1cc68:	mov	r2, #0
   1cc6c:	mov	r1, sp
   1cc70:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1cc74:	ldr	r3, [sp]
   1cc78:	movw	r1, #2548	; 0x9f4
   1cc7c:	movt	r1, #6
   1cc80:	add	r6, r6, r3
   1cc84:	mov	r7, r0
   1cc88:	mov	r0, #1
   1cc8c:	bl	1132c <__printf_chk@plt>
   1cc90:	cmp	r7, #1
   1cc94:	beq	1ccfc <__assert_fail@plt+0xb8f8>
   1cc98:	cmp	r7, #2
   1cc9c:	beq	1cec4 <__assert_fail@plt+0xbac0>
   1cca0:	cmp	r7, #0
   1cca4:	beq	1cb3c <__assert_fail@plt+0xb738>
   1cca8:	mov	r2, r7
   1ccac:	movw	r1, #61824	; 0xf180
   1ccb0:	mov	r0, #1
   1ccb4:	movt	r1, #5
   1ccb8:	bl	1132c <__printf_chk@plt>
   1ccbc:	mov	r0, r6
   1ccc0:	b	1caec <__assert_fail@plt+0xb6e8>
   1ccc4:	mov	r3, r5
   1ccc8:	mov	r0, r6
   1cccc:	mov	r2, #0
   1ccd0:	mov	r1, sp
   1ccd4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1ccd8:	ldr	r3, [sp]
   1ccdc:	movw	r1, #2584	; 0xa18
   1cce0:	movt	r1, #6
   1cce4:	add	r6, r6, r3
   1cce8:	mov	r7, r0
   1ccec:	mov	r0, #1
   1ccf0:	bl	1132c <__printf_chk@plt>
   1ccf4:	cmp	r7, #1
   1ccf8:	bne	1cc98 <__assert_fail@plt+0xb894>
   1ccfc:	movw	r1, #1392	; 0x570
   1cd00:	mov	r0, #0
   1cd04:	movt	r1, #6
   1cd08:	b	1cad4 <__assert_fail@plt+0xb6d0>
   1cd0c:	mov	r2, #0
   1cd10:	mov	r0, r6
   1cd14:	mov	r3, r5
   1cd18:	mov	r1, sp
   1cd1c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1cd20:	ldr	r3, [sp]
   1cd24:	movw	r1, #2624	; 0xa40
   1cd28:	movt	r1, #6
   1cd2c:	add	r6, r6, r3
   1cd30:	mov	r7, r0
   1cd34:	mov	r0, #1
   1cd38:	bl	1132c <__printf_chk@plt>
   1cd3c:	mov	r2, #5
   1cd40:	movw	r1, #1468	; 0x5bc
   1cd44:	mov	r0, #0
   1cd48:	movt	r1, #6
   1cd4c:	bl	11170 <dcgettext@plt>
   1cd50:	mov	r2, r7
   1cd54:	mov	r1, r0
   1cd58:	mov	r0, #1
   1cd5c:	bl	1132c <__printf_chk@plt>
   1cd60:	sub	r3, r5, #1
   1cd64:	cmp	r6, r3
   1cd68:	bcc	1cde4 <__assert_fail@plt+0xb9e0>
   1cd6c:	movw	r1, #50908	; 0xc6dc
   1cd70:	mov	r0, #0
   1cd74:	movt	r1, #5
   1cd78:	mov	r2, #5
   1cd7c:	bl	11170 <dcgettext@plt>
   1cd80:	mov	r1, r0
   1cd84:	mov	r0, #1
   1cd88:	bl	1132c <__printf_chk@plt>
   1cd8c:	movw	r3, #16696	; 0x4138
   1cd90:	movt	r3, #9
   1cd94:	mov	r0, #10
   1cd98:	ldr	r1, [r3]
   1cd9c:	bl	111ac <_IO_putc@plt>
   1cda0:	mov	r0, r5
   1cda4:	b	1caec <__assert_fail@plt+0xb6e8>
   1cda8:	mov	r1, r6
   1cdac:	mov	r2, r5
   1cdb0:	bl	1b5b8 <__assert_fail@plt+0xa1b4>
   1cdb4:	b	1caec <__assert_fail@plt+0xb6e8>
   1cdb8:	rsb	r5, r6, r5
   1cdbc:	mov	r1, r6
   1cdc0:	sub	r5, r5, #1
   1cdc4:	mov	r0, r5
   1cdc8:	bl	19a8c <__assert_fail@plt+0x8688>
   1cdcc:	mov	r1, r5
   1cdd0:	mov	r0, r6
   1cdd4:	bl	11350 <strnlen@plt>
   1cdd8:	add	r0, r0, #1
   1cddc:	add	r5, r6, r0
   1cde0:	b	1c9b8 <__assert_fail@plt+0xb5b4>
   1cde4:	rsb	r5, r6, r5
   1cde8:	mov	r1, r6
   1cdec:	sub	r5, r5, #1
   1cdf0:	mov	r0, r5
   1cdf4:	bl	19a8c <__assert_fail@plt+0x8688>
   1cdf8:	mov	r1, r5
   1cdfc:	mov	r0, r6
   1ce00:	bl	11350 <strnlen@plt>
   1ce04:	add	r0, r0, #1
   1ce08:	add	r5, r6, r0
   1ce0c:	b	1cd8c <__assert_fail@plt+0xb988>
   1ce10:	movw	r1, #2400	; 0x960
   1ce14:	mov	r0, #0
   1ce18:	movt	r1, #6
   1ce1c:	mov	r2, #5
   1ce20:	b	1cb4c <__assert_fail@plt+0xb748>
   1ce24:	movw	r1, #2132	; 0x854
   1ce28:	mov	r0, #0
   1ce2c:	movt	r1, #6
   1ce30:	mov	r2, #5
   1ce34:	b	1cb4c <__assert_fail@plt+0xb748>
   1ce38:	movw	r0, #2080	; 0x820
   1ce3c:	movt	r0, #6
   1ce40:	bl	11218 <puts@plt>
   1ce44:	mov	r0, r6
   1ce48:	b	1caec <__assert_fail@plt+0xb6e8>
   1ce4c:	movw	r0, #2072	; 0x818
   1ce50:	movt	r0, #6
   1ce54:	bl	11218 <puts@plt>
   1ce58:	mov	r0, r6
   1ce5c:	b	1caec <__assert_fail@plt+0xb6e8>
   1ce60:	movw	r0, #2064	; 0x810
   1ce64:	movt	r0, #6
   1ce68:	bl	11218 <puts@plt>
   1ce6c:	mov	r0, r6
   1ce70:	b	1caec <__assert_fail@plt+0xb6e8>
   1ce74:	movw	r0, #2056	; 0x808
   1ce78:	movt	r0, #6
   1ce7c:	bl	11218 <puts@plt>
   1ce80:	mov	r0, r6
   1ce84:	b	1caec <__assert_fail@plt+0xb6e8>
   1ce88:	movw	r0, #2048	; 0x800
   1ce8c:	movt	r0, #6
   1ce90:	bl	11218 <puts@plt>
   1ce94:	mov	r0, r6
   1ce98:	b	1caec <__assert_fail@plt+0xb6e8>
   1ce9c:	movw	r0, #2040	; 0x7f8
   1cea0:	movt	r0, #6
   1cea4:	bl	11218 <puts@plt>
   1cea8:	mov	r0, r6
   1ceac:	b	1caec <__assert_fail@plt+0xb6e8>
   1ceb0:	movw	r1, #1300	; 0x514
   1ceb4:	mov	r0, #0
   1ceb8:	movt	r1, #6
   1cebc:	mov	r2, #5
   1cec0:	b	1cb4c <__assert_fail@plt+0xb748>
   1cec4:	movw	r1, #2176	; 0x880
   1cec8:	mov	r0, #0
   1cecc:	movt	r1, #6
   1ced0:	mov	r2, #5
   1ced4:	b	1cb4c <__assert_fail@plt+0xb748>
   1ced8:	movw	r1, #2472	; 0x9a8
   1cedc:	mov	r0, r7
   1cee0:	mov	r2, #5
   1cee4:	movt	r1, #6
   1cee8:	b	1cb4c <__assert_fail@plt+0xb748>
   1ceec:	movw	r1, #2244	; 0x8c4
   1cef0:	mov	r0, r7
   1cef4:	mov	r2, #5
   1cef8:	movt	r1, #6
   1cefc:	b	1cb4c <__assert_fail@plt+0xb748>
   1cf00:	movw	r1, #2120	; 0x848
   1cf04:	mov	r0, #0
   1cf08:	movt	r1, #6
   1cf0c:	b	1cad4 <__assert_fail@plt+0xb6d0>
   1cf10:	movw	r1, #2348	; 0x92c
   1cf14:	mov	r0, #0
   1cf18:	movt	r1, #6
   1cf1c:	b	1cad4 <__assert_fail@plt+0xb6d0>
   1cf20:	bl	1117c <__stack_chk_fail@plt>
   1cf24:	push	{r4, r5, r6, r7, lr}
   1cf28:	movw	r4, #16680	; 0x4128
   1cf2c:	movt	r4, #9
   1cf30:	sub	sp, sp, #12
   1cf34:	mov	r3, r1
   1cf38:	mov	r5, r1
   1cf3c:	ldr	ip, [r4]
   1cf40:	mov	r1, sp
   1cf44:	mov	r2, #0
   1cf48:	mov	r7, r0
   1cf4c:	str	ip, [sp, #4]
   1cf50:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1cf54:	ldr	r3, [sp]
   1cf58:	add	r7, r7, r3
   1cf5c:	cmp	r0, #6
   1cf60:	mov	r6, r0
   1cf64:	beq	1d0ac <__assert_fail@plt+0xbca8>
   1cf68:	cmp	r0, #8
   1cf6c:	beq	1d060 <__assert_fail@plt+0xbc5c>
   1cf70:	cmp	r0, #4
   1cf74:	beq	1cffc <__assert_fail@plt+0xbbf8>
   1cf78:	mov	r2, #5
   1cf7c:	movw	r1, #2776	; 0xad8
   1cf80:	mov	r0, #0
   1cf84:	movt	r1, #6
   1cf88:	bl	11170 <dcgettext@plt>
   1cf8c:	mov	r2, r6
   1cf90:	mov	r1, r0
   1cf94:	mov	r0, #1
   1cf98:	bl	1132c <__printf_chk@plt>
   1cf9c:	ands	r2, r6, #1
   1cfa0:	beq	1d12c <__assert_fail@plt+0xbd28>
   1cfa4:	movw	r3, #16696	; 0x4138
   1cfa8:	movt	r3, #9
   1cfac:	mov	r0, #34	; 0x22
   1cfb0:	ldr	r1, [r3]
   1cfb4:	bl	111ac <_IO_putc@plt>
   1cfb8:	sub	r3, r5, #1
   1cfbc:	cmp	r7, r3
   1cfc0:	bcs	1d1f8 <__assert_fail@plt+0xbdf4>
   1cfc4:	rsb	r6, r7, r5
   1cfc8:	mov	r1, r7
   1cfcc:	sub	r6, r6, #1
   1cfd0:	mov	r0, r6
   1cfd4:	bl	19a8c <__assert_fail@plt+0x8688>
   1cfd8:	mov	r0, r7
   1cfdc:	mov	r1, r6
   1cfe0:	bl	11350 <strnlen@plt>
   1cfe4:	add	r0, r0, #1
   1cfe8:	add	r7, r7, r0
   1cfec:	movw	r0, #1024	; 0x400
   1cff0:	movt	r0, #6
   1cff4:	bl	11218 <puts@plt>
   1cff8:	b	1d108 <__assert_fail@plt+0xbd04>
   1cffc:	mov	r0, r7
   1d000:	mov	r2, #0
   1d004:	mov	r3, r5
   1d008:	mov	r1, sp
   1d00c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1d010:	ldr	r3, [sp]
   1d014:	movw	r1, #2028	; 0x7ec
   1d018:	movt	r1, #6
   1d01c:	add	r7, r7, r3
   1d020:	mov	r6, r0
   1d024:	mov	r0, #1
   1d028:	bl	1132c <__printf_chk@plt>
   1d02c:	cmp	r6, #1
   1d030:	beq	1d194 <__assert_fail@plt+0xbd90>
   1d034:	cmp	r6, #2
   1d038:	bne	1d0ec <__assert_fail@plt+0xbce8>
   1d03c:	movw	r1, #2688	; 0xa80
   1d040:	movt	r1, #6
   1d044:	mov	r0, #0
   1d048:	mov	r2, #5
   1d04c:	bl	11170 <dcgettext@plt>
   1d050:	mov	r1, r0
   1d054:	mov	r0, #1
   1d058:	bl	1132c <__printf_chk@plt>
   1d05c:	b	1d108 <__assert_fail@plt+0xbd04>
   1d060:	mov	r0, r7
   1d064:	mov	r3, r5
   1d068:	mov	r1, sp
   1d06c:	mov	r2, #0
   1d070:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1d074:	ldr	r3, [sp]
   1d078:	movw	r1, #2736	; 0xab0
   1d07c:	movt	r1, #6
   1d080:	add	r7, r7, r3
   1d084:	mov	r6, r0
   1d088:	mov	r0, #1
   1d08c:	bl	1132c <__printf_chk@plt>
   1d090:	cmp	r6, #3
   1d094:	ldrls	pc, [pc, r6, lsl #2]
   1d098:	b	1d0f4 <__assert_fail@plt+0xbcf0>
   1d09c:			; <UNDEFINED> instruction: 0x0001d1b4
   1d0a0:	andeq	sp, r1, r4, lsr #3
   1d0a4:	andeq	sp, r1, r0, ror #2
   1d0a8:	andeq	sp, r1, r4, asr #3
   1d0ac:	mov	r0, r7
   1d0b0:	mov	r2, #0
   1d0b4:	mov	r3, r5
   1d0b8:	mov	r1, sp
   1d0bc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1d0c0:	ldr	r3, [sp]
   1d0c4:	movw	r1, #2700	; 0xa8c
   1d0c8:	movt	r1, #6
   1d0cc:	add	r7, r7, r3
   1d0d0:	mov	r6, r0
   1d0d4:	mov	r0, #1
   1d0d8:	bl	1132c <__printf_chk@plt>
   1d0dc:	cmp	r6, #1
   1d0e0:	beq	1d170 <__assert_fail@plt+0xbd6c>
   1d0e4:	cmp	r6, #2
   1d0e8:	beq	1d160 <__assert_fail@plt+0xbd5c>
   1d0ec:	cmp	r6, #0
   1d0f0:	beq	1d1d4 <__assert_fail@plt+0xbdd0>
   1d0f4:	movw	r1, #61824	; 0xf180
   1d0f8:	mov	r2, r6
   1d0fc:	mov	r0, #1
   1d100:	movt	r1, #5
   1d104:	bl	1132c <__printf_chk@plt>
   1d108:	cmp	r7, r5
   1d10c:	bhi	1d224 <__assert_fail@plt+0xbe20>
   1d110:	ldr	r2, [sp, #4]
   1d114:	mov	r0, r7
   1d118:	ldr	r3, [r4]
   1d11c:	cmp	r2, r3
   1d120:	bne	1d220 <__assert_fail@plt+0xbe1c>
   1d124:	add	sp, sp, #12
   1d128:	pop	{r4, r5, r6, r7, pc}
   1d12c:	mov	r3, r5
   1d130:	mov	r1, sp
   1d134:	mov	r0, r7
   1d138:	bl	3a350 <__assert_fail@plt+0x28f4c>
   1d13c:	ldr	ip, [sp]
   1d140:	movw	r1, #2800	; 0xaf0
   1d144:	movt	r1, #6
   1d148:	add	r7, r7, ip
   1d14c:	mov	r2, r0
   1d150:	mov	r3, r0
   1d154:	mov	r0, #1
   1d158:	bl	1132c <__printf_chk@plt>
   1d15c:	b	1d108 <__assert_fail@plt+0xbd04>
   1d160:	movw	r1, #2728	; 0xaa8
   1d164:	mov	r0, #0
   1d168:	movt	r1, #6
   1d16c:	b	1d048 <__assert_fail@plt+0xbc44>
   1d170:	movw	r1, #2720	; 0xaa0
   1d174:	movt	r1, #6
   1d178:	mov	r0, #0
   1d17c:	mov	r2, #5
   1d180:	bl	11170 <dcgettext@plt>
   1d184:	mov	r1, r0
   1d188:	mov	r0, r6
   1d18c:	bl	1132c <__printf_chk@plt>
   1d190:	b	1d108 <__assert_fail@plt+0xbd04>
   1d194:	movw	r1, #2680	; 0xa78
   1d198:	mov	r0, #0
   1d19c:	movt	r1, #6
   1d1a0:	b	1d17c <__assert_fail@plt+0xbd78>
   1d1a4:	movw	r1, #2720	; 0xaa0
   1d1a8:	mov	r0, #0
   1d1ac:	movt	r1, #6
   1d1b0:	b	1d048 <__assert_fail@plt+0xbc44>
   1d1b4:	movw	r1, #1300	; 0x514
   1d1b8:	mov	r0, #0
   1d1bc:	movt	r1, #6
   1d1c0:	b	1d048 <__assert_fail@plt+0xbc44>
   1d1c4:	movw	r1, #2756	; 0xac4
   1d1c8:	mov	r0, #0
   1d1cc:	movt	r1, #6
   1d1d0:	b	1d048 <__assert_fail@plt+0xbc44>
   1d1d4:	mov	r0, r6
   1d1d8:	mov	r2, #5
   1d1dc:	movw	r1, #1300	; 0x514
   1d1e0:	movt	r1, #6
   1d1e4:	bl	11170 <dcgettext@plt>
   1d1e8:	mov	r1, r0
   1d1ec:	mov	r0, #1
   1d1f0:	bl	1132c <__printf_chk@plt>
   1d1f4:	b	1d108 <__assert_fail@plt+0xbd04>
   1d1f8:	mov	r2, #5
   1d1fc:	movw	r1, #50908	; 0xc6dc
   1d200:	mov	r0, #0
   1d204:	movt	r1, #5
   1d208:	bl	11170 <dcgettext@plt>
   1d20c:	mov	r7, r5
   1d210:	mov	r1, r0
   1d214:	mov	r0, #1
   1d218:	bl	1132c <__printf_chk@plt>
   1d21c:	b	1cfec <__assert_fail@plt+0xbbe8>
   1d220:	bl	1117c <__stack_chk_fail@plt>
   1d224:	movw	r0, #1044	; 0x414
   1d228:	movw	r1, #64464	; 0xfbd0
   1d22c:	movt	r0, #6
   1d230:	movt	r1, #5
   1d234:	movw	r2, #14046	; 0x36de
   1d238:	ldr	r3, [pc]	; 1d240 <__assert_fail@plt+0xbe3c>
   1d23c:	bl	11404 <__assert_fail@plt>
   1d240:			; <UNDEFINED> instruction: 0x00054eb0
   1d244:	push	{r4, r5, r6, r7, lr}
   1d248:	mov	r6, r0
   1d24c:	ldrd	r4, [r0, #32]
   1d250:	sub	sp, sp, #28
   1d254:	mov	r7, r1
   1d258:	orrs	r3, r4, r5
   1d25c:	beq	1d2b0 <__assert_fail@plt+0xbeac>
   1d260:	ldr	r3, [r0, #4]
   1d264:	cmp	r3, #8
   1d268:	beq	1d2b0 <__assert_fail@plt+0xbeac>
   1d26c:	mov	r2, #5
   1d270:	movw	r1, #2848	; 0xb20
   1d274:	mov	r0, #0
   1d278:	movt	r1, #6
   1d27c:	ldr	r6, [r6, #24]
   1d280:	bl	11170 <dcgettext@plt>
   1d284:	strd	r4, [sp, #8]
   1d288:	mov	r1, r7
   1d28c:	mov	r4, #1
   1d290:	mov	r5, #0
   1d294:	mov	r2, r6
   1d298:	strd	r4, [sp]
   1d29c:	str	r0, [sp, #16]
   1d2a0:	mov	r0, #0
   1d2a4:	bl	1502c <__assert_fail@plt+0x3c28>
   1d2a8:	add	sp, sp, #28
   1d2ac:	pop	{r4, r5, r6, r7, pc}
   1d2b0:	mov	r2, #5
   1d2b4:	movw	r1, #2812	; 0xafc
   1d2b8:	mov	r0, #0
   1d2bc:	movt	r1, #6
   1d2c0:	bl	11170 <dcgettext@plt>
   1d2c4:	mov	r4, r0
   1d2c8:	mov	r0, r6
   1d2cc:	bl	132f8 <__assert_fail@plt+0x1ef4>
   1d2d0:	mov	r1, r4
   1d2d4:	mov	r2, r0
   1d2d8:	mov	r0, #1
   1d2dc:	bl	1132c <__printf_chk@plt>
   1d2e0:	mov	r0, #0
   1d2e4:	add	sp, sp, #28
   1d2e8:	pop	{r4, r5, r6, r7, pc}
   1d2ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d2f0:	movw	r4, #16712	; 0x4148
   1d2f4:	movt	r4, #9
   1d2f8:	mov	r5, r0
   1d2fc:	sub	sp, sp, #24
   1d300:	ldr	r3, [r4, #1896]	; 0x768
   1d304:	cmp	r3, #0
   1d308:	movne	r0, #1
   1d30c:	beq	1d318 <__assert_fail@plt+0xbf14>
   1d310:	add	sp, sp, #24
   1d314:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d318:	ldr	r0, [r4, #60]	; 0x3c
   1d31c:	mov	r1, #56	; 0x38
   1d320:	bl	3f74c <__assert_fail@plt+0x2e348>
   1d324:	subs	r8, r0, #0
   1d328:	beq	1d65c <__assert_fail@plt+0xc258>
   1d32c:	ldr	r3, [r4, #460]	; 0x1cc
   1d330:	ldr	r6, [r4, #56]	; 0x38
   1d334:	cmp	r3, #0
   1d338:	ldr	r7, [r4, #60]	; 0x3c
   1d33c:	beq	1d4b4 <__assert_fail@plt+0xc0b0>
   1d340:	cmp	r6, #0
   1d344:	cmpne	r7, #0
   1d348:	movne	r9, #0
   1d34c:	moveq	r9, #1
   1d350:	beq	1d600 <__assert_fail@plt+0xc1fc>
   1d354:	cmp	r6, #31
   1d358:	bls	1d608 <__assert_fail@plt+0xc204>
   1d35c:	cmp	r6, #32
   1d360:	bne	1d640 <__assert_fail@plt+0xc23c>
   1d364:	mov	r2, #5
   1d368:	movw	r1, #3092	; 0xc14
   1d36c:	mov	r0, #0
   1d370:	movt	r1, #6
   1d374:	ldr	sl, [r4, #24]
   1d378:	bl	11170 <dcgettext@plt>
   1d37c:	mov	r9, #0
   1d380:	mov	r1, r5
   1d384:	str	r6, [sp]
   1d388:	movw	r5, #16712	; 0x4148
   1d38c:	mov	r2, sl
   1d390:	str	r7, [sp, #8]
   1d394:	str	r9, [sp, #4]
   1d398:	movt	r5, #9
   1d39c:	str	r9, [sp, #12]
   1d3a0:	str	r0, [sp, #16]
   1d3a4:	mov	r0, r9
   1d3a8:	bl	1502c <__assert_fail@plt+0x3c28>
   1d3ac:	subs	sl, r0, #0
   1d3b0:	beq	1d600 <__assert_fail@plt+0xc1fc>
   1d3b4:	ldr	r3, [r5, #60]	; 0x3c
   1d3b8:	cmp	r3, r9
   1d3bc:	addne	r7, r8, #56	; 0x38
   1d3c0:	movwne	r5, #26492	; 0x677c
   1d3c4:	movne	r6, sl
   1d3c8:	movtne	r5, #9
   1d3cc:	beq	1d488 <__assert_fail@plt+0xc084>
   1d3d0:	ldr	r3, [r5]
   1d3d4:	mov	r0, r6
   1d3d8:	mov	r1, #4
   1d3dc:	add	r9, r9, #1
   1d3e0:	blx	r3
   1d3e4:	ldr	r3, [r5]
   1d3e8:	mov	r1, #4
   1d3ec:	add	r7, r7, #56	; 0x38
   1d3f0:	str	r0, [r7, #-112]	; 0xffffff90
   1d3f4:	add	r0, r6, r1
   1d3f8:	blx	r3
   1d3fc:	ldr	r3, [r5]
   1d400:	strd	r0, [r7, #-104]	; 0xffffff98
   1d404:	add	r0, r6, #8
   1d408:	mov	r1, #4
   1d40c:	blx	r3
   1d410:	ldr	r3, [r5]
   1d414:	strd	r0, [r7, #-96]	; 0xffffffa0
   1d418:	add	r0, r6, #12
   1d41c:	mov	r1, #4
   1d420:	blx	r3
   1d424:	ldr	r3, [r5]
   1d428:	strd	r0, [r7, #-88]	; 0xffffffa8
   1d42c:	add	r0, r6, #16
   1d430:	mov	r1, #4
   1d434:	blx	r3
   1d438:	ldr	r3, [r5]
   1d43c:	strd	r0, [r7, #-80]	; 0xffffffb0
   1d440:	add	r0, r6, #20
   1d444:	mov	r1, #4
   1d448:	blx	r3
   1d44c:	ldr	r3, [r5]
   1d450:	strd	r0, [r7, #-72]	; 0xffffffb8
   1d454:	add	r0, r6, #24
   1d458:	mov	r1, #4
   1d45c:	blx	r3
   1d460:	ldr	r3, [r5]
   1d464:	mov	r1, #4
   1d468:	str	r0, [r7, #-108]	; 0xffffff94
   1d46c:	add	r0, r6, #28
   1d470:	blx	r3
   1d474:	ldr	r3, [r4, #60]	; 0x3c
   1d478:	add	r6, r6, #32
   1d47c:	cmp	r9, r3
   1d480:	strd	r0, [r7, #-64]	; 0xffffffc0
   1d484:	bcc	1d3d0 <__assert_fail@plt+0xbfcc>
   1d488:	mov	r0, sl
   1d48c:	mov	r9, #1
   1d490:	bl	1111c <free@plt>
   1d494:	cmp	r9, #0
   1d498:	strne	r8, [r4, #1896]	; 0x768
   1d49c:	movne	r0, #1
   1d4a0:	bne	1d310 <__assert_fail@plt+0xbf0c>
   1d4a4:	mov	r0, r8
   1d4a8:	bl	1111c <free@plt>
   1d4ac:	mov	r0, r9
   1d4b0:	b	1d310 <__assert_fail@plt+0xbf0c>
   1d4b4:	cmp	r6, #0
   1d4b8:	cmpne	r7, #0
   1d4bc:	movne	r9, #0
   1d4c0:	moveq	r9, #1
   1d4c4:	beq	1d600 <__assert_fail@plt+0xc1fc>
   1d4c8:	cmp	r6, #55	; 0x37
   1d4cc:	bls	1d608 <__assert_fail@plt+0xc204>
   1d4d0:	cmp	r6, #56	; 0x38
   1d4d4:	bne	1d624 <__assert_fail@plt+0xc220>
   1d4d8:	mov	r2, #5
   1d4dc:	movw	r1, #3092	; 0xc14
   1d4e0:	mov	r0, #0
   1d4e4:	movt	r1, #6
   1d4e8:	ldr	sl, [r4, #24]
   1d4ec:	bl	11170 <dcgettext@plt>
   1d4f0:	mov	r9, #0
   1d4f4:	mov	r1, r5
   1d4f8:	str	r6, [sp]
   1d4fc:	movw	r5, #16712	; 0x4148
   1d500:	mov	r2, sl
   1d504:	str	r7, [sp, #8]
   1d508:	str	r9, [sp, #4]
   1d50c:	movt	r5, #9
   1d510:	str	r9, [sp, #12]
   1d514:	str	r0, [sp, #16]
   1d518:	mov	r0, r9
   1d51c:	bl	1502c <__assert_fail@plt+0x3c28>
   1d520:	subs	sl, r0, #0
   1d524:	beq	1d600 <__assert_fail@plt+0xc1fc>
   1d528:	ldr	r3, [r5, #60]	; 0x3c
   1d52c:	cmp	r3, r9
   1d530:	addne	r7, r8, #56	; 0x38
   1d534:	movwne	r5, #26492	; 0x677c
   1d538:	movne	r6, sl
   1d53c:	movtne	r5, #9
   1d540:	beq	1d488 <__assert_fail@plt+0xc084>
   1d544:	ldr	r3, [r5]
   1d548:	mov	r0, r6
   1d54c:	mov	r1, #4
   1d550:	add	r9, r9, #1
   1d554:	blx	r3
   1d558:	ldr	r3, [r5]
   1d55c:	mov	r1, #4
   1d560:	add	r7, r7, #56	; 0x38
   1d564:	str	r0, [r7, #-112]	; 0xffffff90
   1d568:	add	r0, r6, r1
   1d56c:	blx	r3
   1d570:	ldr	r3, [r5]
   1d574:	mov	r1, #8
   1d578:	str	r0, [r7, #-108]	; 0xffffff94
   1d57c:	add	r0, r6, r1
   1d580:	blx	r3
   1d584:	ldr	r3, [r5]
   1d588:	strd	r0, [r7, #-104]	; 0xffffff98
   1d58c:	add	r0, r6, #16
   1d590:	mov	r1, #8
   1d594:	blx	r3
   1d598:	ldr	r3, [r5]
   1d59c:	strd	r0, [r7, #-96]	; 0xffffffa0
   1d5a0:	add	r0, r6, #24
   1d5a4:	mov	r1, #8
   1d5a8:	blx	r3
   1d5ac:	ldr	r3, [r5]
   1d5b0:	strd	r0, [r7, #-88]	; 0xffffffa8
   1d5b4:	add	r0, r6, #32
   1d5b8:	mov	r1, #8
   1d5bc:	blx	r3
   1d5c0:	ldr	r3, [r5]
   1d5c4:	strd	r0, [r7, #-80]	; 0xffffffb0
   1d5c8:	add	r0, r6, #40	; 0x28
   1d5cc:	mov	r1, #8
   1d5d0:	blx	r3
   1d5d4:	ldr	r3, [r5]
   1d5d8:	strd	r0, [r7, #-72]	; 0xffffffb8
   1d5dc:	add	r0, r6, #48	; 0x30
   1d5e0:	mov	r1, #8
   1d5e4:	add	r6, r6, #56	; 0x38
   1d5e8:	blx	r3
   1d5ec:	ldr	r3, [r4, #60]	; 0x3c
   1d5f0:	cmp	r9, r3
   1d5f4:	strd	r0, [r7, #-64]	; 0xffffffc0
   1d5f8:	bcc	1d544 <__assert_fail@plt+0xc140>
   1d5fc:	b	1d488 <__assert_fail@plt+0xc084>
   1d600:	mov	r9, #0
   1d604:	b	1d494 <__assert_fail@plt+0xc090>
   1d608:	mov	r2, #5
   1d60c:	movw	r1, #2912	; 0xb60
   1d610:	mov	r0, r9
   1d614:	movt	r1, #6
   1d618:	bl	11170 <dcgettext@plt>
   1d61c:	bl	4b2b0 <error@@Base>
   1d620:	b	1d494 <__assert_fail@plt+0xc090>
   1d624:	mov	r2, #5
   1d628:	mov	r0, r9
   1d62c:	movw	r1, #3000	; 0xbb8
   1d630:	movt	r1, #6
   1d634:	bl	11170 <dcgettext@plt>
   1d638:	bl	4b9ec <warn@@Base>
   1d63c:	b	1d4d8 <__assert_fail@plt+0xc0d4>
   1d640:	mov	r2, #5
   1d644:	mov	r0, r9
   1d648:	movw	r1, #3000	; 0xbb8
   1d64c:	movt	r1, #6
   1d650:	bl	11170 <dcgettext@plt>
   1d654:	bl	4b9ec <warn@@Base>
   1d658:	b	1d364 <__assert_fail@plt+0xbf60>
   1d65c:	mov	r2, #5
   1d660:	movw	r1, #2868	; 0xb34
   1d664:	movt	r1, #6
   1d668:	bl	11170 <dcgettext@plt>
   1d66c:	ldr	r1, [r4, #60]	; 0x3c
   1d670:	bl	4b2b0 <error@@Base>
   1d674:	mov	r0, r8
   1d678:	b	1d310 <__assert_fail@plt+0xbf0c>
   1d67c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d680:	mov	r6, r2
   1d684:	mov	r7, r3
   1d688:	bl	1d2ec <__assert_fail@plt+0xbee8>
   1d68c:	cmp	r0, #0
   1d690:	beq	1d74c <__assert_fail@plt+0xc348>
   1d694:	movw	r3, #16712	; 0x4148
   1d698:	movt	r3, #9
   1d69c:	ldr	r8, [r3, #60]	; 0x3c
   1d6a0:	ldr	ip, [r3, #1896]	; 0x768
   1d6a4:	rsb	r8, r8, r8, lsl #3
   1d6a8:	add	r8, ip, r8, lsl #3
   1d6ac:	cmp	ip, r8
   1d6b0:	bcs	1d728 <__assert_fail@plt+0xc324>
   1d6b4:	ldrd	sl, [sp, #32]
   1d6b8:	adds	sl, sl, r6
   1d6bc:	adc	fp, fp, r7
   1d6c0:	b	1d6d0 <__assert_fail@plt+0xc2cc>
   1d6c4:	add	ip, ip, #56	; 0x38
   1d6c8:	cmp	ip, r8
   1d6cc:	bcs	1d728 <__assert_fail@plt+0xc324>
   1d6d0:	ldr	r3, [ip]
   1d6d4:	cmp	r3, #1
   1d6d8:	bne	1d6c4 <__assert_fail@plt+0xc2c0>
   1d6dc:	ldrd	r4, [ip, #48]	; 0x30
   1d6e0:	ldrd	r0, [ip, #16]
   1d6e4:	rsbs	r4, r4, #0
   1d6e8:	rsc	r5, r5, #0
   1d6ec:	and	r4, r4, r0
   1d6f0:	and	r5, r5, r1
   1d6f4:	cmp	r7, r5
   1d6f8:	cmpeq	r6, r4
   1d6fc:	bcc	1d6c4 <__assert_fail@plt+0xc2c0>
   1d700:	ldrd	r2, [ip, #32]
   1d704:	adds	r2, r2, r0
   1d708:	adc	r3, r3, r1
   1d70c:	cmp	fp, r3
   1d710:	cmpeq	sl, r2
   1d714:	bhi	1d6c4 <__assert_fail@plt+0xc2c0>
   1d718:	ldr	r3, [ip, #8]
   1d71c:	add	r6, r3, r6
   1d720:	rsb	r0, r0, r6
   1d724:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d728:	mov	r2, #5
   1d72c:	movw	r1, #3172	; 0xc64
   1d730:	mov	r0, #0
   1d734:	movt	r1, #6
   1d738:	bl	11170 <dcgettext@plt>
   1d73c:	mov	r1, r6
   1d740:	bl	4b9ec <warn@@Base>
   1d744:	mov	r0, r6
   1d748:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d74c:	mov	r2, #5
   1d750:	movw	r1, #3108	; 0xc24
   1d754:	movt	r1, #6
   1d758:	bl	11170 <dcgettext@plt>
   1d75c:	bl	4b9ec <warn@@Base>
   1d760:	mov	r0, r6
   1d764:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d76c:	movw	r6, #16712	; 0x4148
   1d770:	movt	r6, #9
   1d774:	mov	r3, #1904	; 0x770
   1d778:	movw	sl, #16680	; 0x4128
   1d77c:	movt	sl, #9
   1d780:	ldrd	r4, [r6, r3]
   1d784:	sub	sp, sp, #284	; 0x11c
   1d788:	ldr	r3, [sl]
   1d78c:	mov	r7, r0
   1d790:	orrs	fp, r4, r5
   1d794:	str	sl, [sp, #48]	; 0x30
   1d798:	str	r3, [sp, #276]	; 0x114
   1d79c:	bne	1d7cc <__assert_fail@plt+0xc3c8>
   1d7a0:	ldr	r3, [r6, #1912]	; 0x778
   1d7a4:	cmp	r3, #0
   1d7a8:	bne	1e580 <__assert_fail@plt+0xd17c>
   1d7ac:	mov	r0, #1
   1d7b0:	ldr	sl, [sp, #48]	; 0x30
   1d7b4:	ldr	r2, [sp, #276]	; 0x114
   1d7b8:	ldr	r3, [sl]
   1d7bc:	cmp	r2, r3
   1d7c0:	bne	1f640 <__assert_fail@plt+0xe23c>
   1d7c4:	add	sp, sp, #284	; 0x11c
   1d7c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d7cc:	ldr	r8, [r6, #460]	; 0x1cc
   1d7d0:	movw	r1, #3276	; 0xccc
   1d7d4:	cmp	r8, #0
   1d7d8:	beq	1dad8 <__assert_fail@plt+0xc6d4>
   1d7dc:	movt	r1, #6
   1d7e0:	mov	r2, #5
   1d7e4:	mov	r0, #0
   1d7e8:	ldr	r8, [r6, #1916]	; 0x77c
   1d7ec:	bl	11170 <dcgettext@plt>
   1d7f0:	strd	r4, [sp, #8]
   1d7f4:	mov	r1, r7
   1d7f8:	mov	r4, #1
   1d7fc:	mov	r5, #0
   1d800:	mov	r2, r8
   1d804:	strd	r4, [sp]
   1d808:	str	r0, [sp, #16]
   1d80c:	mov	r0, #0
   1d810:	bl	1502c <__assert_fail@plt+0x3c28>
   1d814:	subs	r9, r0, #0
   1d818:	beq	1e734 <__assert_fail@plt+0xd330>
   1d81c:	mov	r3, #0
   1d820:	movw	sl, #26492	; 0x677c
   1d824:	str	r3, [r6, #1920]	; 0x780
   1d828:	movt	sl, #9
   1d82c:	mov	r4, r9
   1d830:	mov	r8, r6
   1d834:	b	1d85c <__assert_fail@plt+0xc458>
   1d838:	ldr	r2, [sl]
   1d83c:	sub	r0, r4, #8
   1d840:	mov	r1, #4
   1d844:	add	r3, r3, #1
   1d848:	str	r3, [r8, #1920]	; 0x780
   1d84c:	blx	r2
   1d850:	orrs	ip, r0, r1
   1d854:	beq	1e704 <__assert_fail@plt+0xd300>
   1d858:	ldr	r3, [r8, #1920]	; 0x780
   1d85c:	ldr	r2, [r6, #1904]	; 0x770
   1d860:	add	r4, r4, #8
   1d864:	movw	r5, #16712	; 0x4148
   1d868:	movt	r5, #9
   1d86c:	add	r2, r9, r2
   1d870:	cmp	r4, r2
   1d874:	bls	1d838 <__assert_fail@plt+0xc434>
   1d878:	mov	r0, r3
   1d87c:	mov	r1, #16
   1d880:	bl	3f74c <__assert_fail@plt+0x2e348>
   1d884:	movw	r5, #16712	; 0x4148
   1d888:	movt	r5, #9
   1d88c:	cmp	r0, #0
   1d890:	mov	r4, r0
   1d894:	str	r0, [r6, #1924]	; 0x784
   1d898:	beq	1e714 <__assert_fail@plt+0xd310>
   1d89c:	ldr	r3, [r5, #1920]	; 0x780
   1d8a0:	add	r3, r0, r3, lsl #4
   1d8a4:	cmp	r0, r3
   1d8a8:	addcc	r4, r0, #16
   1d8ac:	movwcc	r5, #26492	; 0x677c
   1d8b0:	movcc	r8, r9
   1d8b4:	movtcc	r5, #9
   1d8b8:	bcs	1d900 <__assert_fail@plt+0xc4fc>
   1d8bc:	ldr	r3, [r5]
   1d8c0:	mov	r0, r8
   1d8c4:	mov	r1, #4
   1d8c8:	blx	r3
   1d8cc:	ldr	r3, [r5]
   1d8d0:	strd	r0, [r4, #-16]
   1d8d4:	add	r0, r8, #4
   1d8d8:	mov	r1, #4
   1d8dc:	add	r8, r8, #8
   1d8e0:	blx	r3
   1d8e4:	ldr	r2, [r6, #1920]	; 0x780
   1d8e8:	ldr	r3, [r6, #1924]	; 0x784
   1d8ec:	add	r3, r3, r2, lsl #4
   1d8f0:	cmp	r4, r3
   1d8f4:	add	r4, r4, #16
   1d8f8:	strd	r0, [r4, #-24]	; 0xffffffe8
   1d8fc:	bcc	1d8bc <__assert_fail@plt+0xc4b8>
   1d900:	mov	r0, r9
   1d904:	movw	r9, #16712	; 0x4148
   1d908:	bl	1111c <free@plt>
   1d90c:	ldr	r3, [r6, #1872]	; 0x750
   1d910:	movt	r9, #9
   1d914:	cmp	r3, #0
   1d918:	beq	1e8d8 <__assert_fail@plt+0xd4d4>
   1d91c:	ldr	r3, [r6, #1876]	; 0x754
   1d920:	movw	r9, #16712	; 0x4148
   1d924:	movt	r9, #9
   1d928:	cmp	r3, #0
   1d92c:	beq	1e9cc <__assert_fail@plt+0xd5c8>
   1d930:	ldr	sl, [r6, #1880]	; 0x758
   1d934:	movw	r3, #16712	; 0x4148
   1d938:	movt	r3, #9
   1d93c:	cmp	sl, #0
   1d940:	beq	1eab4 <__assert_fail@plt+0xd6b0>
   1d944:	ldr	r3, [r6, #1912]	; 0x778
   1d948:	movw	r4, #16712	; 0x4148
   1d94c:	movt	r4, #9
   1d950:	cmp	r3, #0
   1d954:	bne	1e550 <__assert_fail@plt+0xd14c>
   1d958:	ldr	r3, [r6, #1920]	; 0x780
   1d95c:	ldr	r7, [r6, #1924]	; 0x784
   1d960:	add	r3, r7, r3, lsl #4
   1d964:	cmp	r7, r3
   1d968:	bcs	1d7ac <__assert_fail@plt+0xc3a8>
   1d96c:	ldr	r1, [r6, #1912]	; 0x778
   1d970:	movw	sl, #16712	; 0x4148
   1d974:	movw	r9, #16696	; 0x4138
   1d978:	movw	ip, #216	; 0xd8
   1d97c:	cmp	r1, #0
   1d980:	movt	ip, #6
   1d984:	add	r7, r7, #16
   1d988:	str	ip, [sp, #40]	; 0x28
   1d98c:	movt	sl, #9
   1d990:	movw	ip, #25084	; 0x61fc
   1d994:	movt	r9, #9
   1d998:	movt	ip, #7
   1d99c:	str	ip, [sp, #52]	; 0x34
   1d9a0:	bne	1da78 <__assert_fail@plt+0xc674>
   1d9a4:	ldrd	r4, [r7, #-16]
   1d9a8:	mov	r8, r7
   1d9ac:	cmp	r5, #0
   1d9b0:	cmpeq	r4, #30
   1d9b4:	beq	1e4b4 <__assert_fail@plt+0xd0b0>
   1d9b8:	bls	1dc00 <__assert_fail@plt+0xc7fc>
   1d9bc:	movw	r2, #65276	; 0xfefc
   1d9c0:	movt	r2, #28671	; 0x6fff
   1d9c4:	mov	r3, #0
   1d9c8:	cmp	r5, r3
   1d9cc:	cmpeq	r4, r2
   1d9d0:	bhi	1dc64 <__assert_fail@plt+0xc860>
   1d9d4:	movw	r2, #65274	; 0xfefa
   1d9d8:	movt	r2, #28671	; 0x6fff
   1d9dc:	mov	r3, #0
   1d9e0:	cmp	r5, r3
   1d9e4:	cmpeq	r4, r2
   1d9e8:	bcs	1e010 <__assert_fail@plt+0xcc0c>
   1d9ec:	movw	r2, #65019	; 0xfdfb
   1d9f0:	movt	r2, #28671	; 0x6fff
   1d9f4:	mov	r3, #0
   1d9f8:	cmp	r5, r3
   1d9fc:	cmpeq	r4, r2
   1da00:	bls	1df38 <__assert_fail@plt+0xcb34>
   1da04:	movw	r2, #65023	; 0xfdff
   1da08:	movt	r2, #28671	; 0x6fff
   1da0c:	mov	r3, #0
   1da10:	cmp	r5, r3
   1da14:	cmpeq	r4, r2
   1da18:	bhi	1e150 <__assert_fail@plt+0xcd4c>
   1da1c:	movw	r2, #65022	; 0xfdfe
   1da20:	movt	r2, #28671	; 0x6fff
   1da24:	mov	r3, #0
   1da28:	cmp	r5, r3
   1da2c:	cmpeq	r4, r2
   1da30:	bcs	1e1f8 <__assert_fail@plt+0xcdf4>
   1da34:	movw	r2, #65020	; 0xfdfc
   1da38:	movt	r2, #28671	; 0x6fff
   1da3c:	mov	r3, #0
   1da40:	cmp	r5, r3
   1da44:	cmpeq	r4, r2
   1da48:	bne	1e0d4 <__assert_fail@plt+0xccd0>
   1da4c:	cmp	r1, #0
   1da50:	bne	1e63c <__assert_fail@plt+0xd238>
   1da54:	ldr	r2, [r6, #1920]	; 0x780
   1da58:	add	r7, r7, #16
   1da5c:	ldr	r3, [r6, #1924]	; 0x784
   1da60:	add	r3, r3, r2, lsl #4
   1da64:	cmp	r8, r3
   1da68:	bcs	1d7ac <__assert_fail@plt+0xc3a8>
   1da6c:	ldr	r1, [r6, #1912]	; 0x778
   1da70:	cmp	r1, #0
   1da74:	beq	1d9a4 <__assert_fail@plt+0xc5a0>
   1da78:	ldr	r1, [r9]
   1da7c:	mov	r0, #32
   1da80:	bl	111ac <_IO_putc@plt>
   1da84:	ldrd	r0, [r7, #-16]
   1da88:	mov	r2, #5
   1da8c:	bl	16c84 <__assert_fail@plt+0x5880>
   1da90:	ldr	r0, [r7, #-16]
   1da94:	bl	1445c <__assert_fail@plt+0x3058>
   1da98:	ldr	r4, [sl, #460]	; 0x1cc
   1da9c:	cmp	r4, #0
   1daa0:	moveq	r4, #19
   1daa4:	movne	r4, #27
   1daa8:	mov	r5, r0
   1daac:	bl	1129c <strlen@plt>
   1dab0:	ldr	ip, [sp, #40]	; 0x28
   1dab4:	mov	r2, r5
   1dab8:	movw	r1, #3776	; 0xec0
   1dabc:	movt	r1, #6
   1dac0:	str	ip, [sp]
   1dac4:	rsb	r3, r0, r4
   1dac8:	mov	r0, #1
   1dacc:	bl	1132c <__printf_chk@plt>
   1dad0:	ldr	r1, [r6, #1912]	; 0x778
   1dad4:	b	1d9a4 <__assert_fail@plt+0xc5a0>
   1dad8:	movt	r1, #6
   1dadc:	mov	r2, #5
   1dae0:	mov	r0, r8
   1dae4:	ldr	r9, [r6, #1916]	; 0x77c
   1dae8:	bl	11170 <dcgettext@plt>
   1daec:	strd	r4, [sp, #8]
   1daf0:	mov	r1, r7
   1daf4:	mov	r4, #1
   1daf8:	mov	r2, r9
   1dafc:	mov	r5, #0
   1db00:	strd	r4, [sp]
   1db04:	str	r0, [sp, #16]
   1db08:	mov	r0, r8
   1db0c:	bl	1502c <__assert_fail@plt+0x3c28>
   1db10:	subs	r9, r0, #0
   1db14:	beq	1e734 <__assert_fail@plt+0xd330>
   1db18:	str	r8, [r6, #1920]	; 0x780
   1db1c:	mov	r3, r8
   1db20:	movw	sl, #26492	; 0x677c
   1db24:	mov	r4, r9
   1db28:	movt	sl, #9
   1db2c:	mov	r8, r6
   1db30:	b	1db58 <__assert_fail@plt+0xc754>
   1db34:	ldr	r2, [sl]
   1db38:	sub	r0, r4, #16
   1db3c:	mov	r1, #8
   1db40:	add	r3, r3, #1
   1db44:	str	r3, [r8, #1920]	; 0x780
   1db48:	blx	r2
   1db4c:	orrs	r2, r0, r1
   1db50:	beq	1e70c <__assert_fail@plt+0xd308>
   1db54:	ldr	r3, [r8, #1920]	; 0x780
   1db58:	ldr	r2, [r6, #1904]	; 0x770
   1db5c:	add	r4, r4, #16
   1db60:	movw	r5, #16712	; 0x4148
   1db64:	movt	r5, #9
   1db68:	add	r2, r9, r2
   1db6c:	cmp	r4, r2
   1db70:	bls	1db34 <__assert_fail@plt+0xc730>
   1db74:	mov	r0, r3
   1db78:	mov	r1, #16
   1db7c:	bl	3f74c <__assert_fail@plt+0x2e348>
   1db80:	movw	r5, #16712	; 0x4148
   1db84:	movt	r5, #9
   1db88:	cmp	r0, #0
   1db8c:	mov	r4, r0
   1db90:	str	r0, [r6, #1924]	; 0x784
   1db94:	beq	1e714 <__assert_fail@plt+0xd310>
   1db98:	ldr	r3, [r5, #1920]	; 0x780
   1db9c:	add	r3, r0, r3, lsl #4
   1dba0:	cmp	r0, r3
   1dba4:	addcc	r4, r0, #16
   1dba8:	movwcc	r5, #26492	; 0x677c
   1dbac:	movcc	r8, r9
   1dbb0:	movtcc	r5, #9
   1dbb4:	bcs	1d900 <__assert_fail@plt+0xc4fc>
   1dbb8:	ldr	r3, [r5]
   1dbbc:	mov	r0, r8
   1dbc0:	mov	r1, #8
   1dbc4:	blx	r3
   1dbc8:	ldr	r3, [r5]
   1dbcc:	strd	r0, [r4, #-16]
   1dbd0:	add	r0, r8, #8
   1dbd4:	mov	r1, #8
   1dbd8:	add	r8, r8, #16
   1dbdc:	blx	r3
   1dbe0:	ldr	r2, [r6, #1920]	; 0x780
   1dbe4:	ldr	r3, [r6, #1924]	; 0x784
   1dbe8:	add	r3, r3, r2, lsl #4
   1dbec:	cmp	r4, r3
   1dbf0:	add	r4, r4, #16
   1dbf4:	strd	r0, [r4, #-24]	; 0xffffffe8
   1dbf8:	bcc	1dbb8 <__assert_fail@plt+0xc7b4>
   1dbfc:	b	1d900 <__assert_fail@plt+0xc4fc>
   1dc00:	cmp	r5, #0
   1dc04:	cmpeq	r4, #19
   1dc08:	bls	1ddd8 <__assert_fail@plt+0xc9d4>
   1dc0c:	cmp	r5, #0
   1dc10:	cmpeq	r4, #26
   1dc14:	bhi	1e6f4 <__assert_fail@plt+0xd2f0>
   1dc18:	cmp	r5, #0
   1dc1c:	cmpeq	r4, #25
   1dc20:	bcs	1e1f8 <__assert_fail@plt+0xcdf4>
   1dc24:	cmp	r5, #0
   1dc28:	cmpeq	r4, #23
   1dc2c:	bhi	1e254 <__assert_fail@plt+0xce50>
   1dc30:	cmp	r5, #0
   1dc34:	cmpeq	r4, #21
   1dc38:	bcs	1de5c <__assert_fail@plt+0xca58>
   1dc3c:	ldr	r0, [r7, #-8]
   1dc40:	cmp	r1, #0
   1dc44:	ldr	r2, [r7, #-4]
   1dc48:	ldr	r3, [pc, #3888]	; 1eb80 <__assert_fail@plt+0xd77c>
   1dc4c:	str	r0, [r6, #2088]	; 0x828
   1dc50:	str	r2, [r3]
   1dc54:	beq	1da54 <__assert_fail@plt+0xc650>
   1dc58:	bl	1445c <__assert_fail@plt+0x3058>
   1dc5c:	bl	11218 <puts@plt>
   1dc60:	b	1da54 <__assert_fail@plt+0xc650>
   1dc64:	mvn	r2, #-1879048190	; 0x90000002
   1dc68:	mov	r3, #0
   1dc6c:	cmp	r5, r3
   1dc70:	cmpeq	r4, r2
   1dc74:	beq	1e1a8 <__assert_fail@plt+0xcda4>
   1dc78:	bhi	1dfd0 <__assert_fail@plt+0xcbcc>
   1dc7c:	mvn	r2, #-1879048187	; 0x90000005
   1dc80:	mov	r3, #0
   1dc84:	cmp	r5, r3
   1dc88:	cmpeq	r4, r2
   1dc8c:	bls	1e1cc <__assert_fail@plt+0xcdc8>
   1dc90:	mvn	r2, #-1879048188	; 0x90000004
   1dc94:	mov	r3, #0
   1dc98:	cmp	r5, r3
   1dc9c:	cmpeq	r4, r2
   1dca0:	bne	1e27c <__assert_fail@plt+0xce78>
   1dca4:	cmp	r1, #0
   1dca8:	beq	1da54 <__assert_fail@plt+0xc650>
   1dcac:	mov	r2, #5
   1dcb0:	movw	r1, #3924	; 0xf54
   1dcb4:	mov	r0, #0
   1dcb8:	movt	r1, #6
   1dcbc:	bl	11170 <dcgettext@plt>
   1dcc0:	mov	r1, r0
   1dcc4:	mov	r0, #1
   1dcc8:	bl	1132c <__printf_chk@plt>
   1dccc:	ldrd	r4, [r7, #-8]
   1dcd0:	orrs	fp, r4, r5
   1dcd4:	beq	1e6cc <__assert_fail@plt+0xd2c8>
   1dcd8:	and	r3, r4, #1
   1dcdc:	mov	fp, r4
   1dce0:	cmp	r3, #0
   1dce4:	bne	1f26c <__assert_fail@plt+0xde68>
   1dce8:	tst	fp, #2
   1dcec:	bne	1f254 <__assert_fail@plt+0xde50>
   1dcf0:	tst	fp, #4
   1dcf4:	bne	1f23c <__assert_fail@plt+0xde38>
   1dcf8:	tst	fp, #8
   1dcfc:	bne	1f224 <__assert_fail@plt+0xde20>
   1dd00:	tst	fp, #16
   1dd04:	bne	1f20c <__assert_fail@plt+0xde08>
   1dd08:	tst	fp, #32
   1dd0c:	bne	1f1f4 <__assert_fail@plt+0xddf0>
   1dd10:	tst	fp, #64	; 0x40
   1dd14:	bne	1f1dc <__assert_fail@plt+0xddd8>
   1dd18:	tst	fp, #128	; 0x80
   1dd1c:	bne	1f1c4 <__assert_fail@plt+0xddc0>
   1dd20:	tst	fp, #256	; 0x100
   1dd24:	bne	1f1ac <__assert_fail@plt+0xdda8>
   1dd28:	tst	fp, #512	; 0x200
   1dd2c:	bne	1f194 <__assert_fail@plt+0xdd90>
   1dd30:	tst	fp, #1024	; 0x400
   1dd34:	bne	1f17c <__assert_fail@plt+0xdd78>
   1dd38:	tst	fp, #2048	; 0x800
   1dd3c:	bne	1f164 <__assert_fail@plt+0xdd60>
   1dd40:	tst	fp, #4096	; 0x1000
   1dd44:	bne	1f14c <__assert_fail@plt+0xdd48>
   1dd48:	tst	fp, #8192	; 0x2000
   1dd4c:	bne	1f134 <__assert_fail@plt+0xdd30>
   1dd50:	tst	fp, #16384	; 0x4000
   1dd54:	bne	1f11c <__assert_fail@plt+0xdd18>
   1dd58:	tst	fp, #32768	; 0x8000
   1dd5c:	bne	1f104 <__assert_fail@plt+0xdd00>
   1dd60:	tst	fp, #65536	; 0x10000
   1dd64:	bne	1f32c <__assert_fail@plt+0xdf28>
   1dd68:	tst	fp, #131072	; 0x20000
   1dd6c:	bne	1f314 <__assert_fail@plt+0xdf10>
   1dd70:	tst	fp, #262144	; 0x40000
   1dd74:	bne	1f2fc <__assert_fail@plt+0xdef8>
   1dd78:	tst	fp, #524288	; 0x80000
   1dd7c:	bne	1f2e4 <__assert_fail@plt+0xdee0>
   1dd80:	tst	fp, #1048576	; 0x100000
   1dd84:	bne	1f2cc <__assert_fail@plt+0xdec8>
   1dd88:	tst	fp, #2097152	; 0x200000
   1dd8c:	bne	1f2b4 <__assert_fail@plt+0xdeb0>
   1dd90:	tst	fp, #4194304	; 0x400000
   1dd94:	bne	1f29c <__assert_fail@plt+0xde98>
   1dd98:	tst	fp, #8388608	; 0x800000
   1dd9c:	bne	1f284 <__assert_fail@plt+0xde80>
   1dda0:	tst	fp, #16777216	; 0x1000000
   1dda4:	bne	1f35c <__assert_fail@plt+0xdf58>
   1dda8:	tst	fp, #33554432	; 0x2000000
   1ddac:	bne	1f344 <__assert_fail@plt+0xdf40>
   1ddb0:	tst	fp, #67108864	; 0x4000000
   1ddb4:	bne	1f0ec <__assert_fail@plt+0xdce8>
   1ddb8:	tst	fp, #134217728	; 0x8000000
   1ddbc:	beq	1e680 <__assert_fail@plt+0xd27c>
   1ddc0:	movw	r1, #4276	; 0x10b4
   1ddc4:	mov	r0, #1
   1ddc8:	movt	r1, #6
   1ddcc:	eor	fp, fp, #134217728	; 0x8000000
   1ddd0:	bl	1132c <__printf_chk@plt>
   1ddd4:	b	1e680 <__assert_fail@plt+0xd27c>
   1ddd8:	cmp	r5, #0
   1dddc:	cmpeq	r4, #18
   1dde0:	bcs	1de08 <__assert_fail@plt+0xca04>
   1dde4:	cmp	r5, #0
   1dde8:	cmpeq	r4, #7
   1ddec:	bhi	1de50 <__assert_fail@plt+0xca4c>
   1ddf0:	cmp	r5, #0
   1ddf4:	cmpeq	r4, #3
   1ddf8:	bcs	1de5c <__assert_fail@plt+0xca58>
   1ddfc:	cmp	r5, #0
   1de00:	cmpeq	r4, #1
   1de04:	bls	1de5c <__assert_fail@plt+0xca58>
   1de08:	add	r4, r6, r4, lsl #3
   1de0c:	ldrd	r2, [r7, #-8]
   1de10:	add	r4, r4, #1920	; 0x780
   1de14:	strd	r2, [r4, #8]
   1de18:	cmp	r1, #0
   1de1c:	beq	1da54 <__assert_fail@plt+0xc650>
   1de20:	ldrd	r0, [r7, #-8]
   1de24:	mov	r2, #3
   1de28:	bl	16c84 <__assert_fail@plt+0x5880>
   1de2c:	movw	r1, #21496	; 0x53f8
   1de30:	movt	r1, #6
   1de34:	mov	r0, #0
   1de38:	mov	r2, #5
   1de3c:	bl	11170 <dcgettext@plt>
   1de40:	mov	r1, r0
   1de44:	mov	r0, #1
   1de48:	bl	1132c <__printf_chk@plt>
   1de4c:	b	1da54 <__assert_fail@plt+0xc650>
   1de50:	cmp	r5, #0
   1de54:	cmpeq	r4, #11
   1de58:	bls	1de08 <__assert_fail@plt+0xca04>
   1de5c:	ldrd	r2, [r7, #-8]
   1de60:	add	r0, r6, r4, lsl #3
   1de64:	cmp	r1, #0
   1de68:	strd	r2, [sp, #56]	; 0x38
   1de6c:	add	r3, r0, #1920	; 0x780
   1de70:	ldrd	r0, [sp, #56]	; 0x38
   1de74:	strd	r0, [r3, #8]
   1de78:	beq	1da54 <__assert_fail@plt+0xc650>
   1de7c:	ldr	fp, [sl, #1876]	; 0x754
   1de80:	cmp	fp, #0
   1de84:	beq	1e744 <__assert_fail@plt+0xd340>
   1de88:	ldr	r2, [sl, #1888]	; 0x760
   1de8c:	mov	r3, #0
   1de90:	cmp	r1, r3
   1de94:	cmpeq	r0, r2
   1de98:	bcs	1e744 <__assert_fail@plt+0xd340>
   1de9c:	adds	fp, fp, r0
   1dea0:	beq	1e744 <__assert_fail@plt+0xd340>
   1dea4:	subs	r4, r4, #1
   1dea8:	sbc	r5, r5, #0
   1deac:	cmp	r5, #0
   1deb0:	cmpeq	r4, #28
   1deb4:	bhi	1e744 <__assert_fail@plt+0xd340>
   1deb8:	cmp	r4, #28
   1debc:	ldrls	pc, [pc, r4, lsl #2]
   1dec0:	b	1e744 <__assert_fail@plt+0xd340>
   1dec4:	andeq	lr, r1, r0, lsl #17
   1dec8:	andeq	lr, r1, r4, asr #14
   1decc:	andeq	lr, r1, r4, asr #14
   1ded0:	andeq	lr, r1, r4, asr #14
   1ded4:	andeq	lr, r1, r4, asr #14
   1ded8:	andeq	lr, r1, r4, asr #14
   1dedc:	andeq	lr, r1, r4, asr #14
   1dee0:	andeq	lr, r1, r4, asr #14
   1dee4:	andeq	lr, r1, r4, asr #14
   1dee8:	andeq	lr, r1, r4, asr #14
   1deec:	andeq	lr, r1, r4, asr #14
   1def0:	andeq	lr, r1, r4, asr #14
   1def4:	andeq	lr, r1, r4, asr #14
   1def8:	andeq	lr, r1, r0, ror r8
   1defc:	andeq	lr, r1, r0, ror #16
   1df00:	andeq	lr, r1, r4, asr #14
   1df04:	andeq	lr, r1, r4, asr #14
   1df08:	andeq	lr, r1, r4, asr #14
   1df0c:	andeq	lr, r1, r4, asr #14
   1df10:	andeq	lr, r1, r4, asr #14
   1df14:	andeq	lr, r1, r4, asr #14
   1df18:	andeq	lr, r1, r4, asr #14
   1df1c:	andeq	lr, r1, r4, asr #14
   1df20:	andeq	lr, r1, r4, asr #14
   1df24:	andeq	lr, r1, r4, asr #14
   1df28:	andeq	lr, r1, r4, asr #14
   1df2c:	andeq	lr, r1, r4, asr #14
   1df30:	andeq	lr, r1, r4, asr #14
   1df34:	andeq	lr, r1, r8, lsr r8
   1df38:	movw	r2, #65017	; 0xfdf9
   1df3c:	movt	r2, #28671	; 0x6fff
   1df40:	mov	r3, #0
   1df44:	cmp	r5, r3
   1df48:	cmpeq	r4, r2
   1df4c:	bcs	1de18 <__assert_fail@plt+0xca14>
   1df50:	movw	r2, #65013	; 0xfdf5
   1df54:	movt	r2, #28671	; 0x6fff
   1df58:	mov	r3, #0
   1df5c:	cmp	r5, r3
   1df60:	cmpeq	r4, r2
   1df64:	bne	1e260 <__assert_fail@plt+0xce5c>
   1df68:	cmp	r1, #0
   1df6c:	beq	1da54 <__assert_fail@plt+0xc650>
   1df70:	ldr	r3, [r7, #-8]
   1df74:	add	r0, sp, #280	; 0x118
   1df78:	str	r3, [r0, #-208]!	; 0xffffff30
   1df7c:	bl	11320 <gmtime@plt>
   1df80:	subs	ip, r0, #0
   1df84:	beq	1f390 <__assert_fail@plt+0xdf8c>
   1df88:	ldr	lr, [ip, #12]
   1df8c:	movw	r1, #4452	; 0x1164
   1df90:	ldr	r2, [ip, #20]
   1df94:	movt	r1, #6
   1df98:	ldr	r3, [ip, #16]
   1df9c:	mov	r0, #1
   1dfa0:	str	lr, [sp]
   1dfa4:	add	r2, r2, #1888	; 0x760
   1dfa8:	ldr	lr, [ip, #8]
   1dfac:	add	r2, r2, #12
   1dfb0:	add	r3, r3, r0
   1dfb4:	str	lr, [sp, #4]
   1dfb8:	ldr	lr, [ip, #4]
   1dfbc:	str	lr, [sp, #8]
   1dfc0:	ldr	ip, [ip]
   1dfc4:	str	ip, [sp, #12]
   1dfc8:	bl	1132c <__printf_chk@plt>
   1dfcc:	b	1da54 <__assert_fail@plt+0xc650>
   1dfd0:	mvn	r2, #-2147483646	; 0x80000002
   1dfd4:	mov	r3, #0
   1dfd8:	cmp	r5, r3
   1dfdc:	cmpeq	r4, r2
   1dfe0:	beq	1e010 <__assert_fail@plt+0xcc0c>
   1dfe4:	bls	1e194 <__assert_fail@plt+0xcd90>
   1dfe8:	mvn	r2, #-2147483647	; 0x80000001
   1dfec:	mov	r3, #0
   1dff0:	cmp	r5, r3
   1dff4:	cmpeq	r4, r2
   1dff8:	beq	1e1f8 <__assert_fail@plt+0xcdf4>
   1dffc:	mvn	r2, #-2147483648	; 0x80000000
   1e000:	mov	r3, #0
   1e004:	cmp	r5, r3
   1e008:	cmpeq	r4, r2
   1e00c:	bne	1e27c <__assert_fail@plt+0xce78>
   1e010:	cmp	r1, #0
   1e014:	beq	1da54 <__assert_fail@plt+0xc650>
   1e018:	movw	r2, #65276	; 0xfefc
   1e01c:	movt	r2, #28671	; 0x6fff
   1e020:	mov	r3, #0
   1e024:	cmp	r5, r3
   1e028:	cmpeq	r4, r2
   1e02c:	beq	1f04c <__assert_fail@plt+0xdc48>
   1e030:	bhi	1e754 <__assert_fail@plt+0xd350>
   1e034:	movw	r2, #65274	; 0xfefa
   1e038:	movt	r2, #28671	; 0x6fff
   1e03c:	mov	r3, #0
   1e040:	cmp	r5, r3
   1e044:	cmpeq	r4, r2
   1e048:	beq	1f05c <__assert_fail@plt+0xdc58>
   1e04c:	movw	r2, #65275	; 0xfefb
   1e050:	movt	r2, #28671	; 0x6fff
   1e054:	mov	r3, #0
   1e058:	cmp	r5, r3
   1e05c:	cmpeq	r4, r2
   1e060:	movweq	r1, #3872	; 0xf20
   1e064:	moveq	r0, #0
   1e068:	movteq	r1, #6
   1e06c:	bne	1e084 <__assert_fail@plt+0xcc80>
   1e070:	mov	r2, #5
   1e074:	bl	11170 <dcgettext@plt>
   1e078:	mov	r1, r0
   1e07c:	mov	r0, #1
   1e080:	bl	1132c <__printf_chk@plt>
   1e084:	ldr	ip, [r6, #1876]	; 0x754
   1e088:	cmp	ip, #0
   1e08c:	beq	1e0a8 <__assert_fail@plt+0xcca4>
   1e090:	ldr	r0, [sl, #1888]	; 0x760
   1e094:	mov	r1, #0
   1e098:	ldrd	r2, [r7, #-8]
   1e09c:	cmp	r3, r1
   1e0a0:	cmpeq	r2, r0
   1e0a4:	bcc	1ed00 <__assert_fail@plt+0xd8fc>
   1e0a8:	movw	r1, #13660	; 0x355c
   1e0ac:	mov	r0, #1
   1e0b0:	movt	r1, #6
   1e0b4:	bl	1132c <__printf_chk@plt>
   1e0b8:	ldrd	r0, [r7, #-8]
   1e0bc:	mov	r2, #4
   1e0c0:	bl	16c84 <__assert_fail@plt+0x5880>
   1e0c4:	ldr	r1, [r9]
   1e0c8:	mov	r0, #10
   1e0cc:	bl	111ac <_IO_putc@plt>
   1e0d0:	b	1da54 <__assert_fail@plt+0xc650>
   1e0d4:	movw	r2, #65021	; 0xfdfd
   1e0d8:	movt	r2, #28671	; 0x6fff
   1e0dc:	mov	r3, #0
   1e0e0:	cmp	r5, r3
   1e0e4:	cmpeq	r4, r2
   1e0e8:	bne	1e27c <__assert_fail@plt+0xce78>
   1e0ec:	cmp	r1, #0
   1e0f0:	beq	1da54 <__assert_fail@plt+0xc650>
   1e0f4:	mov	r2, #5
   1e0f8:	movw	r1, #3924	; 0xf54
   1e0fc:	mov	r0, #0
   1e100:	movt	r1, #6
   1e104:	bl	11170 <dcgettext@plt>
   1e108:	mov	r1, r0
   1e10c:	mov	r0, #1
   1e110:	bl	1132c <__printf_chk@plt>
   1e114:	ldrd	r4, [r7, #-8]
   1e118:	orrs	r3, r4, r5
   1e11c:	beq	1e6cc <__assert_fail@plt+0xd2c8>
   1e120:	and	r3, r4, #1
   1e124:	mov	fp, r4
   1e128:	cmp	r3, #0
   1e12c:	bne	1f0ac <__assert_fail@plt+0xdca8>
   1e130:	tst	fp, #2
   1e134:	beq	1e680 <__assert_fail@plt+0xd27c>
   1e138:	movw	r1, #3984	; 0xf90
   1e13c:	mov	r0, #1
   1e140:	movt	r1, #6
   1e144:	eor	fp, fp, #2
   1e148:	bl	1132c <__printf_chk@plt>
   1e14c:	b	1e680 <__assert_fail@plt+0xd27c>
   1e150:	movw	r2, #65269	; 0xfef5
   1e154:	movt	r2, #28671	; 0x6fff
   1e158:	mov	r3, #0
   1e15c:	cmp	r5, r3
   1e160:	cmpeq	r4, r2
   1e164:	bne	1e27c <__assert_fail@plt+0xce78>
   1e168:	ldrd	r2, [r7, #-8]
   1e16c:	cmp	r1, #0
   1e170:	movw	r0, #63648	; 0xf8a0
   1e174:	movw	r1, #24896	; 0x6140
   1e178:	movt	r0, #65535	; 0xffff
   1e17c:	movt	r1, #9
   1e180:	strd	r2, [r1, r0]
   1e184:	movne	r0, r2
   1e188:	movne	r1, r3
   1e18c:	beq	1da54 <__assert_fail@plt+0xc650>
   1e190:	b	1e0bc <__assert_fail@plt+0xccb8>
   1e194:	mvn	r2, #-1879048192	; 0x90000000
   1e198:	mov	r3, #0
   1e19c:	cmp	r5, r3
   1e1a0:	cmpeq	r4, r2
   1e1a4:	bne	1e27c <__assert_fail@plt+0xce78>
   1e1a8:	cmp	r1, #0
   1e1ac:	beq	1da54 <__assert_fail@plt+0xc650>
   1e1b0:	ldrd	r0, [r7, #-8]
   1e1b4:	mov	r2, #3
   1e1b8:	bl	16c84 <__assert_fail@plt+0x5880>
   1e1bc:	ldr	r1, [r9]
   1e1c0:	mov	r0, #10
   1e1c4:	bl	111ac <_IO_putc@plt>
   1e1c8:	b	1da54 <__assert_fail@plt+0xc650>
   1e1cc:	mvn	r2, #-1879048186	; 0x90000006
   1e1d0:	mov	r3, #0
   1e1d4:	cmp	r5, r3
   1e1d8:	cmpeq	r4, r2
   1e1dc:	bcs	1e1a8 <__assert_fail@plt+0xcda4>
   1e1e0:	movw	r2, #65279	; 0xfeff
   1e1e4:	movt	r2, #28671	; 0x6fff
   1e1e8:	mov	r3, #0
   1e1ec:	cmp	r5, r3
   1e1f0:	cmpeq	r4, r2
   1e1f4:	bne	1e27c <__assert_fail@plt+0xce78>
   1e1f8:	cmp	r1, #0
   1e1fc:	beq	1da54 <__assert_fail@plt+0xc650>
   1e200:	mvn	r2, #-2147483647	; 0x80000001
   1e204:	mov	r3, #0
   1e208:	cmp	r5, r3
   1e20c:	cmpeq	r4, r2
   1e210:	bne	1e6dc <__assert_fail@plt+0xd2d8>
   1e214:	ldr	r1, [r6, #1876]	; 0x754
   1e218:	cmp	r1, #0
   1e21c:	beq	1e6dc <__assert_fail@plt+0xd2d8>
   1e220:	ldr	r2, [sl, #1888]	; 0x760
   1e224:	mov	r3, #0
   1e228:	ldrd	r4, [r7, #-8]
   1e22c:	cmp	r5, r3
   1e230:	cmpeq	r4, r2
   1e234:	bcs	1e248 <__assert_fail@plt+0xce44>
   1e238:	add	fp, r1, r4
   1e23c:	ldrb	r3, [fp]
   1e240:	cmp	r3, #0
   1e244:	bne	1f410 <__assert_fail@plt+0xe00c>
   1e248:	mov	r0, r4
   1e24c:	mov	r1, r5
   1e250:	b	1e0bc <__assert_fail@plt+0xccb8>
   1e254:	cmp	r1, #0
   1e258:	beq	1da54 <__assert_fail@plt+0xc650>
   1e25c:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1e260:	bcc	1e27c <__assert_fail@plt+0xce78>
   1e264:	movw	r2, #65015	; 0xfdf7
   1e268:	movt	r2, #28671	; 0x6fff
   1e26c:	mov	r3, #0
   1e270:	cmp	r5, r3
   1e274:	cmpeq	r4, r2
   1e278:	bls	1de18 <__assert_fail@plt+0xca14>
   1e27c:	mov	r2, #16
   1e280:	movt	r2, #36864	; 0x9000
   1e284:	adds	r2, r2, r4
   1e288:	mvn	r3, #0
   1e28c:	adc	r3, r3, r5
   1e290:	cmp	r3, #0
   1e294:	cmpeq	r2, #15
   1e298:	bhi	1e2c4 <__assert_fail@plt+0xcec0>
   1e29c:	rsb	r0, r4, #267386880	; 0xff00000
   1e2a0:	movw	ip, #24896	; 0x6140
   1e2a4:	add	r0, r0, #1044480	; 0xff000
   1e2a8:	movt	ip, #9
   1e2ac:	add	r0, r0, #4080	; 0xff0
   1e2b0:	ldrd	r2, [r7, #-8]
   1e2b4:	add	r0, r0, #15
   1e2b8:	add	r0, ip, r0, lsl #3
   1e2bc:	sub	r0, r0, #1872	; 0x750
   1e2c0:	strd	r2, [r0, #-8]
   1e2c4:	cmp	r1, #0
   1e2c8:	beq	1da54 <__assert_fail@plt+0xc650>
   1e2cc:	ldrh	r3, [r6, #50]	; 0x32
   1e2d0:	cmp	r3, #10
   1e2d4:	beq	1ed20 <__assert_fail@plt+0xd91c>
   1e2d8:	bls	1ed18 <__assert_fail@plt+0xd914>
   1e2dc:	cmp	r3, #15
   1e2e0:	beq	1e78c <__assert_fail@plt+0xd388>
   1e2e4:	cmp	r3, #50	; 0x32
   1e2e8:	bne	1e0b8 <__assert_fail@plt+0xccb4>
   1e2ec:	mov	r2, #53	; 0x35
   1e2f0:	movt	r2, #24576	; 0x6000
   1e2f4:	mov	r3, #0
   1e2f8:	cmp	r5, r3
   1e2fc:	cmpeq	r4, r2
   1e300:	beq	1f404 <__assert_fail@plt+0xe000>
   1e304:	cmp	r5, #0
   1e308:	cmpeq	r4, #1879048192	; 0x70000000
   1e30c:	beq	1f3d0 <__assert_fail@plt+0xdfcc>
   1e310:	mov	r2, #21
   1e314:	movt	r2, #24576	; 0x6000
   1e318:	mov	r3, #0
   1e31c:	cmp	r5, r3
   1e320:	cmpeq	r4, r2
   1e324:	bne	1e0b8 <__assert_fail@plt+0xccb4>
   1e328:	ldrd	r0, [r7, #-8]
   1e32c:	mov	r2, #4
   1e330:	bl	16c84 <__assert_fail@plt+0x5880>
   1e334:	ldrd	r2, [r7, #-8]
   1e338:	mov	r0, #1
   1e33c:	mov	r1, #0
   1e340:	and	r0, r0, r2
   1e344:	and	r1, r1, r3
   1e348:	orrs	fp, r0, r1
   1e34c:	bne	1f4e8 <__assert_fail@plt+0xe0e4>
   1e350:	mov	r0, #2
   1e354:	mov	r1, #0
   1e358:	and	r0, r0, r2
   1e35c:	and	r1, r1, r3
   1e360:	orrs	ip, r0, r1
   1e364:	bne	1f4d0 <__assert_fail@plt+0xe0cc>
   1e368:	mov	r0, #4
   1e36c:	mov	r1, #0
   1e370:	and	r0, r0, r2
   1e374:	and	r1, r1, r3
   1e378:	orrs	fp, r0, r1
   1e37c:	bne	1f4b8 <__assert_fail@plt+0xe0b4>
   1e380:	mov	r0, #8
   1e384:	mov	r1, #0
   1e388:	and	r0, r0, r2
   1e38c:	and	r1, r1, r3
   1e390:	orrs	ip, r0, r1
   1e394:	bne	1f4a0 <__assert_fail@plt+0xe09c>
   1e398:	mov	r0, #16
   1e39c:	mov	r1, #0
   1e3a0:	and	r0, r0, r2
   1e3a4:	and	r1, r1, r3
   1e3a8:	orrs	fp, r0, r1
   1e3ac:	bne	1f488 <__assert_fail@plt+0xe084>
   1e3b0:	mov	r0, #32
   1e3b4:	mov	r1, #0
   1e3b8:	and	r0, r0, r2
   1e3bc:	and	r1, r1, r3
   1e3c0:	orrs	ip, r0, r1
   1e3c4:	bne	1f470 <__assert_fail@plt+0xe06c>
   1e3c8:	mov	r0, #64	; 0x40
   1e3cc:	mov	r1, #0
   1e3d0:	and	r0, r0, r2
   1e3d4:	and	r1, r1, r3
   1e3d8:	orrs	fp, r0, r1
   1e3dc:	bne	1f5a8 <__assert_fail@plt+0xe1a4>
   1e3e0:	mov	r0, #128	; 0x80
   1e3e4:	mov	r1, #0
   1e3e8:	and	r0, r0, r2
   1e3ec:	and	r1, r1, r3
   1e3f0:	orrs	ip, r0, r1
   1e3f4:	bne	1f590 <__assert_fail@plt+0xe18c>
   1e3f8:	mov	r0, #512	; 0x200
   1e3fc:	mov	r1, #0
   1e400:	and	r0, r0, r2
   1e404:	and	r1, r1, r3
   1e408:	orrs	fp, r0, r1
   1e40c:	bne	1f578 <__assert_fail@plt+0xe174>
   1e410:	mov	r0, #1024	; 0x400
   1e414:	mov	r1, #0
   1e418:	and	r0, r0, r2
   1e41c:	and	r1, r1, r3
   1e420:	orrs	ip, r0, r1
   1e424:	bne	1f560 <__assert_fail@plt+0xe15c>
   1e428:	mov	r0, #2048	; 0x800
   1e42c:	mov	r1, #0
   1e430:	and	r0, r0, r2
   1e434:	and	r1, r1, r3
   1e438:	orrs	fp, r0, r1
   1e43c:	bne	1f548 <__assert_fail@plt+0xe144>
   1e440:	mov	r0, #4096	; 0x1000
   1e444:	mov	r1, #0
   1e448:	and	r0, r0, r2
   1e44c:	and	r1, r1, r3
   1e450:	orrs	ip, r0, r1
   1e454:	bne	1f530 <__assert_fail@plt+0xe12c>
   1e458:	mov	r0, #8192	; 0x2000
   1e45c:	mov	r1, #0
   1e460:	and	r0, r0, r2
   1e464:	and	r1, r1, r3
   1e468:	orrs	fp, r0, r1
   1e46c:	bne	1f518 <__assert_fail@plt+0xe114>
   1e470:	mov	r0, #16384	; 0x4000
   1e474:	mov	r1, #0
   1e478:	and	r0, r0, r2
   1e47c:	and	r1, r1, r3
   1e480:	orrs	ip, r0, r1
   1e484:	bne	1f500 <__assert_fail@plt+0xe0fc>
   1e488:	mov	r0, #32768	; 0x8000
   1e48c:	mov	r1, #0
   1e490:	and	r2, r2, r0
   1e494:	and	r3, r3, r1
   1e498:	orrs	r0, r2, r3
   1e49c:	beq	1e0c4 <__assert_fail@plt+0xccc0>
   1e4a0:	movw	r1, #4716	; 0x126c
   1e4a4:	mov	r0, #1
   1e4a8:	movt	r1, #6
   1e4ac:	bl	1132c <__printf_chk@plt>
   1e4b0:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1e4b4:	cmp	r1, #0
   1e4b8:	beq	1da54 <__assert_fail@plt+0xc650>
   1e4bc:	ldrd	r4, [r7, #-8]
   1e4c0:	orrs	r0, r4, r5
   1e4c4:	beq	1e69c <__assert_fail@plt+0xd298>
   1e4c8:	mov	r1, #1
   1e4cc:	str	sl, [sp, #56]	; 0x38
   1e4d0:	rsbs	r2, r4, #0
   1e4d4:	rsc	r3, r5, #0
   1e4d8:	cmp	r1, #0
   1e4dc:	and	sl, r2, r4
   1e4e0:	and	fp, r3, r5
   1e4e4:	bic	r4, r4, sl
   1e4e8:	bic	r5, r5, fp
   1e4ec:	beq	1e6e4 <__assert_fail@plt+0xd2e0>
   1e4f0:	subs	r2, sl, #1
   1e4f4:	sbc	r3, fp, #0
   1e4f8:	cmp	r3, #0
   1e4fc:	cmpeq	r2, #15
   1e500:	bhi	1e6ac <__assert_fail@plt+0xd2a8>
   1e504:	cmp	r2, #15
   1e508:	ldrls	pc, [pc, r2, lsl #2]
   1e50c:	b	1e6ac <__assert_fail@plt+0xd2a8>
   1e510:	andeq	lr, r1, r0, lsr #12
   1e514:	andeq	lr, r1, r4, lsl #12
   1e518:	andeq	lr, r1, ip, lsr #13
   1e51c:	andeq	lr, r1, r8, ror #11
   1e520:	andeq	lr, r1, ip, lsr #13
   1e524:	andeq	lr, r1, ip, lsr #13
   1e528:	andeq	lr, r1, ip, lsr #13
   1e52c:	andeq	lr, r1, ip, asr #11
   1e530:	andeq	lr, r1, ip, lsr #13
   1e534:	andeq	lr, r1, ip, lsr #13
   1e538:	andeq	lr, r1, ip, lsr #13
   1e53c:	andeq	lr, r1, ip, lsr #13
   1e540:	andeq	lr, r1, ip, lsr #13
   1e544:	andeq	lr, r1, ip, lsr #13
   1e548:	andeq	lr, r1, ip, lsr #13
   1e54c:	andeq	lr, r1, r4, lsr #11
   1e550:	ldr	r5, [r4, #1916]	; 0x77c
   1e554:	cmp	r5, #0
   1e558:	bne	1ec90 <__assert_fail@plt+0xd88c>
   1e55c:	mov	r2, #5
   1e560:	movw	r1, #3664	; 0xe50
   1e564:	mov	r0, #0
   1e568:	movt	r1, #6
   1e56c:	bl	11170 <dcgettext@plt>
   1e570:	mov	r1, r0
   1e574:	mov	r0, #1
   1e578:	bl	1132c <__printf_chk@plt>
   1e57c:	b	1d958 <__assert_fail@plt+0xc554>
   1e580:	mov	r2, #5
   1e584:	movw	r1, #3232	; 0xca0
   1e588:	mov	r0, #0
   1e58c:	movt	r1, #6
   1e590:	bl	11170 <dcgettext@plt>
   1e594:	mov	r1, r0
   1e598:	mov	r0, #1
   1e59c:	bl	1132c <__printf_chk@plt>
   1e5a0:	b	1d7ac <__assert_fail@plt+0xc3a8>
   1e5a4:	movw	r0, #3796	; 0xed4
   1e5a8:	mov	r1, #1
   1e5ac:	movt	r0, #6
   1e5b0:	mov	r2, #10
   1e5b4:	ldr	r3, [r9]
   1e5b8:	bl	111b8 <fwrite@plt>
   1e5bc:	orrs	r1, r4, r5
   1e5c0:	beq	1e73c <__assert_fail@plt+0xd338>
   1e5c4:	mov	r1, #0
   1e5c8:	b	1e4d0 <__assert_fail@plt+0xd0cc>
   1e5cc:	movw	r0, #55472	; 0xd8b0
   1e5d0:	mov	r1, #1
   1e5d4:	mov	r2, #8
   1e5d8:	ldr	r3, [r9]
   1e5dc:	movt	r0, #5
   1e5e0:	bl	111b8 <fwrite@plt>
   1e5e4:	b	1e5bc <__assert_fail@plt+0xd1b8>
   1e5e8:	movw	r0, #55456	; 0xd8a0
   1e5ec:	mov	r1, #1
   1e5f0:	mov	r2, #7
   1e5f4:	ldr	r3, [r9]
   1e5f8:	movt	r0, #5
   1e5fc:	bl	111b8 <fwrite@plt>
   1e600:	b	1e5bc <__assert_fail@plt+0xd1b8>
   1e604:	movw	r0, #21184	; 0x52c0
   1e608:	mov	r1, #1
   1e60c:	mov	r2, #8
   1e610:	ldr	r3, [r9]
   1e614:	movt	r0, #7
   1e618:	bl	111b8 <fwrite@plt>
   1e61c:	b	1e5bc <__assert_fail@plt+0xd1b8>
   1e620:	movw	r0, #3788	; 0xecc
   1e624:	mov	r1, #1
   1e628:	mov	r2, #6
   1e62c:	ldr	r3, [r9]
   1e630:	movt	r0, #6
   1e634:	bl	111b8 <fwrite@plt>
   1e638:	b	1e5bc <__assert_fail@plt+0xd1b8>
   1e63c:	mov	r2, #5
   1e640:	movw	r1, #3924	; 0xf54
   1e644:	mov	r0, #0
   1e648:	movt	r1, #6
   1e64c:	bl	11170 <dcgettext@plt>
   1e650:	mov	r1, r0
   1e654:	mov	r0, #1
   1e658:	bl	1132c <__printf_chk@plt>
   1e65c:	ldrd	r4, [r7, #-8]
   1e660:	orrs	r2, r4, r5
   1e664:	beq	1e6cc <__assert_fail@plt+0xd2c8>
   1e668:	and	r3, r4, #1
   1e66c:	mov	fp, r4
   1e670:	cmp	r3, #0
   1e674:	bne	1f094 <__assert_fail@plt+0xdc90>
   1e678:	tst	fp, #2
   1e67c:	bne	1f07c <__assert_fail@plt+0xdc78>
   1e680:	cmp	fp, #0
   1e684:	beq	1e69c <__assert_fail@plt+0xd298>
   1e688:	movw	r1, #3964	; 0xf7c
   1e68c:	mov	r2, fp
   1e690:	mov	r0, #1
   1e694:	movt	r1, #6
   1e698:	bl	1132c <__printf_chk@plt>
   1e69c:	movw	r0, #25084	; 0x61fc
   1e6a0:	movt	r0, #7
   1e6a4:	bl	11218 <puts@plt>
   1e6a8:	b	1da54 <__assert_fail@plt+0xc650>
   1e6ac:	mov	r2, #5
   1e6b0:	movw	r1, #3808	; 0xee0
   1e6b4:	mov	r0, #0
   1e6b8:	movt	r1, #6
   1e6bc:	bl	11170 <dcgettext@plt>
   1e6c0:	ldr	r1, [r9]
   1e6c4:	bl	113d4 <fputs@plt>
   1e6c8:	b	1e5bc <__assert_fail@plt+0xd1b8>
   1e6cc:	movw	r1, #3932	; 0xf5c
   1e6d0:	mov	r0, #0
   1e6d4:	movt	r1, #6
   1e6d8:	b	1de38 <__assert_fail@plt+0xca34>
   1e6dc:	ldmdb	r7, {r0, r1}
   1e6e0:	b	1e0bc <__assert_fail@plt+0xccb8>
   1e6e4:	ldr	r1, [r9]
   1e6e8:	mov	r0, #32
   1e6ec:	bl	111ac <_IO_putc@plt>
   1e6f0:	b	1e4f0 <__assert_fail@plt+0xd0ec>
   1e6f4:	cmp	r5, #0
   1e6f8:	cmpeq	r4, #28
   1e6fc:	bls	1de18 <__assert_fail@plt+0xca14>
   1e700:	b	1de5c <__assert_fail@plt+0xca58>
   1e704:	ldr	r3, [r5, #1920]	; 0x780
   1e708:	b	1d878 <__assert_fail@plt+0xc474>
   1e70c:	ldr	r3, [r5, #1920]	; 0x780
   1e710:	b	1db74 <__assert_fail@plt+0xc770>
   1e714:	mov	r2, #5
   1e718:	movw	r1, #3292	; 0xcdc
   1e71c:	movt	r1, #6
   1e720:	bl	11170 <dcgettext@plt>
   1e724:	ldr	r1, [r5, #1920]	; 0x780
   1e728:	bl	4b2b0 <error@@Base>
   1e72c:	mov	r0, r9
   1e730:	bl	1111c <free@plt>
   1e734:	mov	r0, #0
   1e738:	b	1d7b0 <__assert_fail@plt+0xc3ac>
   1e73c:	ldr	sl, [sp, #56]	; 0x38
   1e740:	b	1e69c <__assert_fail@plt+0xd298>
   1e744:	ldrd	r0, [sp, #56]	; 0x38
   1e748:	mov	r2, #4
   1e74c:	bl	16c84 <__assert_fail@plt+0x5880>
   1e750:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1e754:	mvn	r2, #-2147483646	; 0x80000002
   1e758:	mov	r3, #0
   1e75c:	cmp	r5, r3
   1e760:	cmpeq	r4, r2
   1e764:	beq	1f06c <__assert_fail@plt+0xdc68>
   1e768:	mvn	r2, #-2147483648	; 0x80000000
   1e76c:	mov	r3, #0
   1e770:	cmp	r5, r3
   1e774:	cmpeq	r4, r2
   1e778:	movweq	r1, #3836	; 0xefc
   1e77c:	moveq	r0, #0
   1e780:	movteq	r1, #6
   1e784:	beq	1e070 <__assert_fail@plt+0xcc6c>
   1e788:	b	1e084 <__assert_fail@plt+0xcc80>
   1e78c:	cmp	r5, #0
   1e790:	cmpeq	r4, #1610612737	; 0x60000001
   1e794:	bne	1f3b4 <__assert_fail@plt+0xdfb0>
   1e798:	ldrd	r2, [r7, #-8]
   1e79c:	movw	fp, #16696	; 0x4138
   1e7a0:	movt	fp, #9
   1e7a4:	str	fp, [sp, #56]	; 0x38
   1e7a8:	mov	fp, #0
   1e7ac:	str	r8, [sp, #64]	; 0x40
   1e7b0:	str	r6, [sp, #68]	; 0x44
   1e7b4:	mov	lr, #1
   1e7b8:	mov	r6, fp
   1e7bc:	ldr	ip, [pc, #960]	; 1eb84 <__assert_fail@plt+0xd780>
   1e7c0:	mov	fp, r9
   1e7c4:	mov	r8, r2
   1e7c8:	mov	r9, r3
   1e7cc:	b	1e800 <__assert_fail@plt+0xd3fc>
   1e7d0:	add	r2, ip, r6
   1e7d4:	ldr	r1, [fp]
   1e7d8:	eor	r8, r8, r4
   1e7dc:	eor	r9, r9, r5
   1e7e0:	ldr	r0, [r2, #4]
   1e7e4:	str	ip, [sp, #36]	; 0x24
   1e7e8:	bl	113d4 <fputs@plt>
   1e7ec:	ldr	ip, [sp, #36]	; 0x24
   1e7f0:	mov	lr, #0
   1e7f4:	add	r6, r6, #8
   1e7f8:	cmp	r6, #136	; 0x88
   1e7fc:	beq	1efa0 <__assert_fail@plt+0xdb9c>
   1e800:	ldr	r4, [ip, r6]
   1e804:	and	r0, r4, r8
   1e808:	asr	r5, r4, #31
   1e80c:	and	r1, r5, r9
   1e810:	orrs	r2, r0, r1
   1e814:	beq	1e7f4 <__assert_fail@plt+0xd3f0>
   1e818:	cmp	lr, #0
   1e81c:	bne	1e7d0 <__assert_fail@plt+0xd3cc>
   1e820:	ldr	r1, [fp]
   1e824:	mov	r0, #32
   1e828:	str	ip, [sp, #36]	; 0x24
   1e82c:	bl	111ac <_IO_putc@plt>
   1e830:	ldr	ip, [sp, #36]	; 0x24
   1e834:	b	1e7d0 <__assert_fail@plt+0xd3cc>
   1e838:	movw	r1, #4376	; 0x1118
   1e83c:	movt	r1, #6
   1e840:	mov	r0, #0
   1e844:	mov	r2, #5
   1e848:	bl	11170 <dcgettext@plt>
   1e84c:	mov	r2, fp
   1e850:	mov	r1, r0
   1e854:	mov	r0, #1
   1e858:	bl	1132c <__printf_chk@plt>
   1e85c:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1e860:	movw	r1, #4356	; 0x1104
   1e864:	mov	r0, #0
   1e868:	movt	r1, #6
   1e86c:	b	1e844 <__assert_fail@plt+0xd440>
   1e870:	movw	r1, #4332	; 0x10ec
   1e874:	mov	r0, #0
   1e878:	movt	r1, #6
   1e87c:	b	1e844 <__assert_fail@plt+0xd440>
   1e880:	mov	r2, #5
   1e884:	movw	r1, #4284	; 0x10bc
   1e888:	mov	r0, #0
   1e88c:	movt	r1, #6
   1e890:	bl	11170 <dcgettext@plt>
   1e894:	mov	r2, fp
   1e898:	mov	r1, r0
   1e89c:	mov	r0, #1
   1e8a0:	bl	1132c <__printf_chk@plt>
   1e8a4:	mov	r0, fp
   1e8a8:	ldr	r1, [pc, #728]	; 1eb88 <__assert_fail@plt+0xd784>
   1e8ac:	bl	110f8 <strcmp@plt>
   1e8b0:	cmp	r0, #0
   1e8b4:	bne	1e0c4 <__assert_fail@plt+0xccc0>
   1e8b8:	mov	r2, #5
   1e8bc:	movw	r1, #4308	; 0x10d4
   1e8c0:	movt	r1, #6
   1e8c4:	bl	11170 <dcgettext@plt>
   1e8c8:	mov	r1, r0
   1e8cc:	mov	r0, #1
   1e8d0:	bl	1132c <__printf_chk@plt>
   1e8d4:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1e8d8:	ldr	r3, [r9, #1920]	; 0x780
   1e8dc:	ldr	r8, [r9, #1924]	; 0x784
   1e8e0:	add	r3, r8, r3, lsl #4
   1e8e4:	cmp	r8, r3
   1e8e8:	bcs	1d91c <__assert_fail@plt+0xc518>
   1e8ec:	add	r8, r8, #16
   1e8f0:	b	1e90c <__assert_fail@plt+0xd508>
   1e8f4:	ldr	r2, [r6, #1920]	; 0x780
   1e8f8:	add	r8, r8, #16
   1e8fc:	ldr	r3, [r6, #1924]	; 0x784
   1e900:	add	r3, r3, r2, lsl #4
   1e904:	cmp	r4, r3
   1e908:	bcs	1d91c <__assert_fail@plt+0xc518>
   1e90c:	ldrd	r2, [r8, #-16]
   1e910:	mov	r4, r8
   1e914:	cmp	r3, #0
   1e918:	cmpeq	r2, #6
   1e91c:	bne	1e8f4 <__assert_fail@plt+0xd4f0>
   1e920:	ldrd	sl, [r8, #-8]
   1e924:	movw	ip, #1976	; 0x7b8
   1e928:	mov	r2, #0
   1e92c:	mov	r3, #0
   1e930:	mov	r0, r7
   1e934:	strd	r2, [sp]
   1e938:	mov	r2, sl
   1e93c:	mov	r3, fp
   1e940:	strd	sl, [r6, ip]
   1e944:	strd	sl, [sp, #40]	; 0x28
   1e948:	bl	1d67c <__assert_fail@plt+0xc278>
   1e94c:	ldr	r5, [r6, #456]	; 0x1c8
   1e950:	cmp	r5, #0
   1e954:	asr	r1, r0, #31
   1e958:	strd	r0, [sp, #96]	; 0x60
   1e95c:	beq	1f010 <__assert_fail@plt+0xdc0c>
   1e960:	ldr	ip, [r9, #2184]	; 0x888
   1e964:	rsbs	r2, r0, ip
   1e968:	rsc	r3, r1, #0
   1e96c:	strd	r2, [sp, #104]	; 0x68
   1e970:	ldr	r3, [r6, #460]	; 0x1cc
   1e974:	add	r1, sp, #280	; 0x118
   1e978:	mov	r0, r7
   1e97c:	ldr	r2, [pc, #520]	; 1eb8c <__assert_fail@plt+0xd788>
   1e980:	cmp	r3, #0
   1e984:	ldr	r3, [r9, #216]	; 0xd8
   1e988:	str	r3, [r1, #-208]!	; 0xffffff30
   1e98c:	beq	1ecec <__assert_fail@plt+0xd8e8>
   1e990:	mov	sl, #16
   1e994:	mov	fp, #0
   1e998:	strd	sl, [sp, #128]	; 0x80
   1e99c:	bl	155f4 <__assert_fail@plt+0x41f0>
   1e9a0:	ldr	r3, [r6, #1884]	; 0x75c
   1e9a4:	str	r0, [r6, #1872]	; 0x750
   1e9a8:	cmp	r3, #0
   1e9ac:	bne	1e8f4 <__assert_fail@plt+0xd4f0>
   1e9b0:	mov	r0, r3
   1e9b4:	mov	r2, #5
   1e9b8:	movw	r1, #3380	; 0xd34
   1e9bc:	movt	r1, #6
   1e9c0:	bl	11170 <dcgettext@plt>
   1e9c4:	bl	4b2b0 <error@@Base>
   1e9c8:	b	1e8f4 <__assert_fail@plt+0xd4f0>
   1e9cc:	ldr	r3, [r9, #1920]	; 0x780
   1e9d0:	ldr	r4, [r9, #1924]	; 0x784
   1e9d4:	add	r3, r4, r3, lsl #4
   1e9d8:	cmp	r4, r3
   1e9dc:	bcs	1d930 <__assert_fail@plt+0xc52c>
   1e9e0:	add	r4, r4, #16
   1e9e4:	mov	r8, #1968	; 0x7b0
   1e9e8:	b	1ea04 <__assert_fail@plt+0xd600>
   1e9ec:	ldr	r2, [r6, #1920]	; 0x780
   1e9f0:	add	r4, r4, #16
   1e9f4:	ldr	r3, [r6, #1924]	; 0x784
   1e9f8:	add	r3, r3, r2, lsl #4
   1e9fc:	cmp	r5, r3
   1ea00:	bcs	1d930 <__assert_fail@plt+0xc52c>
   1ea04:	ldrd	r2, [r4, #-16]
   1ea08:	mov	r5, r4
   1ea0c:	cmp	r3, #0
   1ea10:	cmpeq	r2, #5
   1ea14:	bne	1e9ec <__assert_fail@plt+0xd5e8>
   1ea18:	ldrd	sl, [r4, #-8]
   1ea1c:	mov	r2, #0
   1ea20:	mov	r3, #0
   1ea24:	mov	r0, r7
   1ea28:	strd	r2, [sp]
   1ea2c:	strd	sl, [r6, r8]
   1ea30:	mov	r2, sl
   1ea34:	mov	r3, fp
   1ea38:	bl	1d67c <__assert_fail@plt+0xc278>
   1ea3c:	ldr	sl, [r6, #456]	; 0x1c8
   1ea40:	cmp	sl, #0
   1ea44:	mov	fp, r0
   1ea48:	beq	1f0c4 <__assert_fail@plt+0xdcc0>
   1ea4c:	ldr	sl, [r9, #2184]	; 0x888
   1ea50:	rsb	r0, r0, sl
   1ea54:	cmp	r0, #0
   1ea58:	ble	1f374 <__assert_fail@plt+0xdf70>
   1ea5c:	mov	sl, r0
   1ea60:	mov	r2, #5
   1ea64:	movw	r1, #3524	; 0xdc4
   1ea68:	mov	r0, #0
   1ea6c:	movt	r1, #6
   1ea70:	mov	r4, sl
   1ea74:	bl	11170 <dcgettext@plt>
   1ea78:	asr	r5, sl, #31
   1ea7c:	mov	r2, fp
   1ea80:	mov	r8, #1
   1ea84:	mov	r9, #0
   1ea88:	mov	r1, r7
   1ea8c:	strd	r8, [sp]
   1ea90:	strd	r4, [sp, #8]
   1ea94:	str	r0, [sp, #16]
   1ea98:	mov	r0, #0
   1ea9c:	bl	1502c <__assert_fail@plt+0x3c28>
   1eaa0:	cmp	r0, #0
   1eaa4:	str	r0, [r6, #1876]	; 0x754
   1eaa8:	moveq	sl, #0
   1eaac:	str	sl, [r6, #1888]	; 0x760
   1eab0:	b	1d930 <__assert_fail@plt+0xc52c>
   1eab4:	ldr	r2, [r3, #1920]	; 0x780
   1eab8:	ldr	r8, [r3, #1924]	; 0x784
   1eabc:	add	r3, r8, r2, lsl #4
   1eac0:	cmp	r8, r3
   1eac4:	bcs	1d944 <__assert_fail@plt+0xc540>
   1eac8:	str	sl, [sp, #40]	; 0x28
   1eacc:	movw	r4, #65023	; 0xfdff
   1ead0:	movw	sl, #65022	; 0xfdfe
   1ead4:	add	r8, r8, #16
   1ead8:	movt	r4, #28671	; 0x6fff
   1eadc:	mov	r5, #0
   1eae0:	movt	sl, #28671	; 0x6fff
   1eae4:	mov	fp, #0
   1eae8:	b	1eb30 <__assert_fail@plt+0xd72c>
   1eaec:	cmp	r3, fp
   1eaf0:	cmpeq	r2, sl
   1eaf4:	beq	1eb74 <__assert_fail@plt+0xd770>
   1eaf8:	movw	r0, #65279	; 0xfeff
   1eafc:	movt	r0, #28671	; 0x6fff
   1eb00:	mov	r1, #0
   1eb04:	cmp	r3, r1
   1eb08:	cmpeq	r2, r0
   1eb0c:	beq	1ecc8 <__assert_fail@plt+0xd8c4>
   1eb10:	ldr	r1, [r6, #1920]	; 0x780
   1eb14:	movw	r3, #16712	; 0x4148
   1eb18:	ldr	r2, [r6, #1924]	; 0x784
   1eb1c:	add	r8, r8, #16
   1eb20:	movt	r3, #9
   1eb24:	add	r2, r2, r1, lsl #4
   1eb28:	cmp	r9, r2
   1eb2c:	bcs	1eb94 <__assert_fail@plt+0xd790>
   1eb30:	ldrd	r2, [r8, #-16]
   1eb34:	mov	r9, r8
   1eb38:	cmp	r3, r5
   1eb3c:	cmpeq	r2, r4
   1eb40:	bne	1eaec <__assert_fail@plt+0xd6e8>
   1eb44:	ldrd	r2, [r8, #-8]
   1eb48:	cmp	r3, #0
   1eb4c:	cmpeq	r2, #4
   1eb50:	beq	1eb10 <__assert_fail@plt+0xd70c>
   1eb54:	mov	r2, #5
   1eb58:	movw	r1, #3548	; 0xddc
   1eb5c:	mov	r0, #0
   1eb60:	movt	r1, #6
   1eb64:	bl	11170 <dcgettext@plt>
   1eb68:	ldr	r1, [r8, #-8]
   1eb6c:	bl	4b2b0 <error@@Base>
   1eb70:	b	1eb10 <__assert_fail@plt+0xd70c>
   1eb74:	ldr	ip, [r8, #-8]
   1eb78:	str	ip, [sp, #40]	; 0x28
   1eb7c:	b	1eb10 <__assert_fail@plt+0xd70c>
   1eb80:	andeq	r4, r9, r4, ror r9
   1eb84:	andeq	r4, r5, r8, lsl #30
   1eb88:	ldrdeq	r4, [r9], -ip
   1eb8c:	andeq	r4, r9, r4, lsr #17
   1eb90:	andeq	r4, r5, ip, asr #29
   1eb94:	ldr	r4, [r3, #2188]	; 0x88c
   1eb98:	cmp	r4, #0
   1eb9c:	beq	1d944 <__assert_fail@plt+0xc540>
   1eba0:	ldr	sl, [sp, #40]	; 0x28
   1eba4:	cmp	sl, #0
   1eba8:	beq	1d944 <__assert_fail@plt+0xc540>
   1ebac:	mov	r2, #5
   1ebb0:	movw	r1, #3584	; 0xe00
   1ebb4:	mov	r0, #0
   1ebb8:	movt	r1, #6
   1ebbc:	str	r3, [sp, #32]
   1ebc0:	bl	11170 <dcgettext@plt>
   1ebc4:	mov	ip, #0
   1ebc8:	mov	r2, r4
   1ebcc:	str	sl, [sp, #8]
   1ebd0:	mov	r1, r7
   1ebd4:	str	ip, [sp, #12]
   1ebd8:	mov	r4, #1
   1ebdc:	mov	r5, #0
   1ebe0:	strd	r4, [sp]
   1ebe4:	str	r0, [sp, #16]
   1ebe8:	mov	r0, ip
   1ebec:	bl	1502c <__assert_fail@plt+0x3c28>
   1ebf0:	subs	r8, r0, #0
   1ebf4:	moveq	r0, r8
   1ebf8:	beq	1d7b0 <__assert_fail@plt+0xc3ac>
   1ebfc:	ldr	r0, [sp, #40]	; 0x28
   1ec00:	bl	11224 <malloc@plt>
   1ec04:	ldr	r3, [sp, #32]
   1ec08:	cmp	r0, #0
   1ec0c:	mov	r4, r0
   1ec10:	str	r0, [r3, #1880]	; 0x758
   1ec14:	beq	1f64c <__assert_fail@plt+0xe248>
   1ec18:	ldr	fp, [sp, #40]	; 0x28
   1ec1c:	lsr	sl, fp, #2
   1ec20:	str	sl, [r3, #2192]	; 0x890
   1ec24:	add	sl, r0, sl, lsl #2
   1ec28:	cmp	r0, sl
   1ec2c:	addcc	r4, r0, #4
   1ec30:	movwcc	r5, #26492	; 0x677c
   1ec34:	movcc	r7, r8
   1ec38:	movtcc	r5, #9
   1ec3c:	bcs	1ec84 <__assert_fail@plt+0xd880>
   1ec40:	ldr	r3, [r5]
   1ec44:	mov	r0, r7
   1ec48:	mov	r1, #2
   1ec4c:	blx	r3
   1ec50:	ldr	r3, [r5]
   1ec54:	mov	r1, #2
   1ec58:	strh	r0, [r4, #-4]
   1ec5c:	add	r0, r7, r1
   1ec60:	blx	r3
   1ec64:	ldr	r2, [r6, #2192]	; 0x890
   1ec68:	ldr	r3, [r6, #1880]	; 0x758
   1ec6c:	add	r7, r7, #4
   1ec70:	add	r3, r3, r2, lsl #2
   1ec74:	cmp	r4, r3
   1ec78:	add	r4, r4, #4
   1ec7c:	strh	r0, [r4, #-6]
   1ec80:	bcc	1ec40 <__assert_fail@plt+0xd83c>
   1ec84:	mov	r0, r8
   1ec88:	bl	1111c <free@plt>
   1ec8c:	b	1d944 <__assert_fail@plt+0xc540>
   1ec90:	mov	r2, #5
   1ec94:	movw	r1, #3720	; 0xe88
   1ec98:	mov	r0, #0
   1ec9c:	movt	r1, #6
   1eca0:	bl	11170 <dcgettext@plt>
   1eca4:	ldr	r3, [r4, #1920]	; 0x780
   1eca8:	mov	r2, r5
   1ecac:	mov	r1, r0
   1ecb0:	mov	r0, #1
   1ecb4:	bl	1132c <__printf_chk@plt>
   1ecb8:	ldr	r3, [r4, #1912]	; 0x778
   1ecbc:	cmp	r3, #0
   1ecc0:	beq	1d958 <__assert_fail@plt+0xc554>
   1ecc4:	b	1e55c <__assert_fail@plt+0xd158>
   1ecc8:	ldr	ip, [sp, #40]	; 0x28
   1eccc:	mov	r1, #0
   1ecd0:	ldrd	r2, [r8, #-8]
   1ecd4:	mov	r0, r7
   1ecd8:	str	r1, [sp, #4]
   1ecdc:	str	ip, [sp]
   1ece0:	bl	1d67c <__assert_fail@plt+0xc278>
   1ece4:	str	r0, [r6, #2188]	; 0x88c
   1ece8:	b	1eb10 <__assert_fail@plt+0xd70c>
   1ecec:	mov	sl, #24
   1ecf0:	mov	fp, #0
   1ecf4:	strd	sl, [sp, #128]	; 0x80
   1ecf8:	bl	15a6c <__assert_fail@plt+0x4668>
   1ecfc:	b	1e9a0 <__assert_fail@plt+0xd59c>
   1ed00:	add	r2, ip, r2
   1ed04:	movw	r1, #3916	; 0xf4c
   1ed08:	mov	r0, #1
   1ed0c:	movt	r1, #6
   1ed10:	bl	1132c <__printf_chk@plt>
   1ed14:	b	1da54 <__assert_fail@plt+0xc650>
   1ed18:	cmp	r3, #8
   1ed1c:	bne	1e0b8 <__assert_fail@plt+0xccb4>
   1ed20:	subs	r4, r4, #1879048193	; 0x70000001
   1ed24:	sbc	r5, r5, #0
   1ed28:	cmp	r5, #0
   1ed2c:	cmpeq	r4, #46	; 0x2e
   1ed30:	bhi	1e0b8 <__assert_fail@plt+0xccb4>
   1ed34:	cmp	r4, #46	; 0x2e
   1ed38:	ldrls	pc, [pc, r4, lsl #2]
   1ed3c:	b	1e0b8 <__assert_fail@plt+0xccb4>
   1ed40:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1ed44:	strdeq	lr, [r1], -r0
   1ed48:	strheq	lr, [r1], -r8
   1ed4c:	andeq	lr, r1, r0, lsl #29
   1ed50:	strdeq	lr, [r1], -ip
   1ed54:	strheq	lr, [r1], -r8
   1ed58:	strheq	lr, [r1], -r8
   1ed5c:	strheq	lr, [r1], -r8
   1ed60:	strheq	lr, [r1], -r8
   1ed64:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1ed68:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1ed6c:	strheq	lr, [r1], -r8
   1ed70:	strheq	lr, [r1], -r8
   1ed74:	strheq	lr, [r1], -r8
   1ed78:	strheq	lr, [r1], -r8
   1ed7c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1ed80:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1ed84:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1ed88:	strheq	lr, [r1], -r8
   1ed8c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1ed90:	strheq	lr, [r1], -r8
   1ed94:	strheq	lr, [r1], -r8
   1ed98:	strheq	lr, [r1], -r8
   1ed9c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1eda0:	strheq	lr, [r1], -r8
   1eda4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1eda8:	strheq	lr, [r1], -r8
   1edac:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1edb0:	strheq	lr, [r1], -r8
   1edb4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1edb8:	strheq	lr, [r1], -r8
   1edbc:	strheq	lr, [r1], -r8
   1edc0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1edc4:	strheq	lr, [r1], -r8
   1edc8:	strheq	lr, [r1], -r8
   1edcc:	strheq	lr, [r1], -r8
   1edd0:	strheq	lr, [r1], -r8
   1edd4:	strheq	lr, [r1], -r8
   1edd8:	strheq	lr, [r1], -r8
   1eddc:	strheq	lr, [r1], -r8
   1ede0:	strheq	lr, [r1], -r8
   1ede4:	strheq	lr, [r1], -r8
   1ede8:	strheq	lr, [r1], -r8
   1edec:	strheq	lr, [r1], -r8
   1edf0:	strheq	lr, [r1], -r8
   1edf4:	strheq	lr, [r1], -r8
   1edf8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1edfc:	ldrd	r0, [r7, #-8]
   1ee00:	orrs	r2, r0, r1
   1ee04:	beq	1f5ec <__assert_fail@plt+0xe1e8>
   1ee08:	mov	r2, #1
   1ee0c:	str	r8, [sp, #56]	; 0x38
   1ee10:	str	r6, [sp, #64]	; 0x40
   1ee14:	mov	r4, #0
   1ee18:	ldr	fp, [pc, #-656]	; 1eb90 <__assert_fail@plt+0xd78c>
   1ee1c:	mov	r5, r2
   1ee20:	ldr	r6, [sp, #40]	; 0x28
   1ee24:	ldr	r8, [sp, #52]	; 0x34
   1ee28:	b	1ee30 <__assert_fail@plt+0xda2c>
   1ee2c:	ldrd	r0, [r7, #-8]
   1ee30:	lsl	r3, r5, r4
   1ee34:	and	r0, r0, r3
   1ee38:	and	r1, r1, r3, asr #31
   1ee3c:	orrs	r3, r0, r1
   1ee40:	beq	1ee68 <__assert_fail@plt+0xda64>
   1ee44:	cmp	r2, #0
   1ee48:	movw	r1, #4484	; 0x1184
   1ee4c:	mov	r0, #1
   1ee50:	movt	r1, #6
   1ee54:	moveq	r2, r6
   1ee58:	movne	r2, r8
   1ee5c:	ldr	r3, [fp, r4, lsl #2]
   1ee60:	bl	1132c <__printf_chk@plt>
   1ee64:	mov	r2, #0
   1ee68:	add	r4, r4, #1
   1ee6c:	cmp	r4, #15
   1ee70:	bne	1ee2c <__assert_fail@plt+0xda28>
   1ee74:	ldr	r8, [sp, #56]	; 0x38
   1ee78:	ldr	r6, [sp, #64]	; 0x40
   1ee7c:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1ee80:	ldr	fp, [r6, #1876]	; 0x754
   1ee84:	cmp	fp, #0
   1ee88:	beq	1f644 <__assert_fail@plt+0xe240>
   1ee8c:	ldrd	r0, [r7, #-8]
   1ee90:	mov	r5, #0
   1ee94:	ldr	r4, [sl, #1888]	; 0x760
   1ee98:	cmp	r1, r5
   1ee9c:	cmpeq	r0, r4
   1eea0:	movcs	r2, r0
   1eea4:	movcs	r3, r1
   1eea8:	bcc	1f5c0 <__assert_fail@plt+0xe1bc>
   1eeac:	stm	sp, {r2, r3}
   1eeb0:	add	r0, sp, #148	; 0x94
   1eeb4:	mov	r1, #1
   1eeb8:	mov	r2, #40	; 0x28
   1eebc:	movw	r3, #61492	; 0xf034
   1eec0:	movt	r3, #5
   1eec4:	bl	112cc <__sprintf_chk@plt>
   1eec8:	mov	r2, #5
   1eecc:	movw	r1, #4516	; 0x11a4
   1eed0:	mov	r0, #0
   1eed4:	movt	r1, #6
   1eed8:	bl	11170 <dcgettext@plt>
   1eedc:	add	r2, sp, #148	; 0x94
   1eee0:	mov	r1, r0
   1eee4:	mov	r0, #1
   1eee8:	bl	1132c <__printf_chk@plt>
   1eeec:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1eef0:	ldr	r3, [r7, #-8]
   1eef4:	add	r0, sp, #280	; 0x118
   1eef8:	str	r3, [r0, #-208]!	; 0xffffff30
   1eefc:	bl	11320 <gmtime@plt>
   1ef00:	subs	ip, r0, #0
   1ef04:	beq	1f610 <__assert_fail@plt+0xe20c>
   1ef08:	movw	r3, #62944	; 0xf5e0
   1ef0c:	movt	r3, #5
   1ef10:	str	r3, [sp]
   1ef14:	add	r4, sp, #148	; 0x94
   1ef18:	ldr	r2, [ip, #20]
   1ef1c:	mov	r1, #128	; 0x80
   1ef20:	mov	r0, r4
   1ef24:	mov	r3, r1
   1ef28:	add	r2, r2, #1888	; 0x760
   1ef2c:	add	r2, r2, #12
   1ef30:	str	r2, [sp, #4]
   1ef34:	ldr	lr, [ip, #16]
   1ef38:	mov	r2, #1
   1ef3c:	add	lr, lr, r2
   1ef40:	str	lr, [sp, #8]
   1ef44:	ldr	lr, [ip, #12]
   1ef48:	str	lr, [sp, #12]
   1ef4c:	ldr	lr, [ip, #8]
   1ef50:	str	lr, [sp, #16]
   1ef54:	ldr	lr, [ip, #4]
   1ef58:	str	lr, [sp, #20]
   1ef5c:	ldr	ip, [ip]
   1ef60:	str	ip, [sp, #24]
   1ef64:	bl	113f8 <__snprintf_chk@plt>
   1ef68:	mov	r2, #5
   1ef6c:	movw	r1, #4532	; 0x11b4
   1ef70:	mov	r0, #0
   1ef74:	movt	r1, #6
   1ef78:	bl	11170 <dcgettext@plt>
   1ef7c:	mov	r2, r4
   1ef80:	mov	r1, r0
   1ef84:	mov	r0, #1
   1ef88:	bl	1132c <__printf_chk@plt>
   1ef8c:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1ef90:	ldrd	r0, [r7, #-8]
   1ef94:	mov	r2, #1
   1ef98:	bl	16c84 <__assert_fail@plt+0x5880>
   1ef9c:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1efa0:	mov	r2, r8
   1efa4:	mov	r3, r9
   1efa8:	mov	r9, fp
   1efac:	orrs	fp, r2, r3
   1efb0:	moveq	r1, lr
   1efb4:	orrne	r1, lr, #1
   1efb8:	ldr	r8, [sp, #64]	; 0x40
   1efbc:	cmp	r1, #0
   1efc0:	ldr	r6, [sp, #68]	; 0x44
   1efc4:	beq	1effc <__assert_fail@plt+0xdbf8>
   1efc8:	cmp	lr, #0
   1efcc:	bne	1efec <__assert_fail@plt+0xdbe8>
   1efd0:	ldr	r1, [r9]
   1efd4:	mov	r0, #32
   1efd8:	str	r2, [sp, #36]	; 0x24
   1efdc:	str	r3, [sp, #32]
   1efe0:	bl	111ac <_IO_putc@plt>
   1efe4:	ldr	r3, [sp, #32]
   1efe8:	ldr	r2, [sp, #36]	; 0x24
   1efec:	mov	r0, r2
   1eff0:	mov	r1, r3
   1eff4:	mov	r2, #0
   1eff8:	bl	16c84 <__assert_fail@plt+0x5880>
   1effc:	ldr	r3, [sp, #56]	; 0x38
   1f000:	mov	r0, #10
   1f004:	ldr	r1, [r3]
   1f008:	bl	111ac <_IO_putc@plt>
   1f00c:	b	1da54 <__assert_fail@plt+0xc650>
   1f010:	mov	r0, r7
   1f014:	mov	r1, r5
   1f018:	mov	r2, #2
   1f01c:	bl	113bc <fseek@plt>
   1f020:	cmp	r0, #0
   1f024:	bne	1f438 <__assert_fail@plt+0xe034>
   1f028:	mov	r0, r7
   1f02c:	bl	1114c <ftell@plt>
   1f030:	ldrd	r2, [sp, #96]	; 0x60
   1f034:	rsbs	sl, r2, r0
   1f038:	rsc	fp, r3, r0, asr #31
   1f03c:	mov	r0, sl
   1f040:	mov	r1, fp
   1f044:	strd	r0, [sp, #104]	; 0x68
   1f048:	b	1e970 <__assert_fail@plt+0xd56c>
   1f04c:	movw	r1, #3900	; 0xf3c
   1f050:	mov	r0, #0
   1f054:	movt	r1, #6
   1f058:	b	1e070 <__assert_fail@plt+0xcc6c>
   1f05c:	movw	r1, #3852	; 0xf0c
   1f060:	mov	r0, #0
   1f064:	movt	r1, #6
   1f068:	b	1e070 <__assert_fail@plt+0xcc6c>
   1f06c:	movw	r1, #3816	; 0xee8
   1f070:	mov	r0, #0
   1f074:	movt	r1, #6
   1f078:	b	1e070 <__assert_fail@plt+0xcc6c>
   1f07c:	movw	r1, #3952	; 0xf70
   1f080:	mov	r0, #1
   1f084:	movt	r1, #6
   1f088:	eor	fp, fp, #2
   1f08c:	bl	1132c <__printf_chk@plt>
   1f090:	b	1e680 <__assert_fail@plt+0xd27c>
   1f094:	movw	r1, #3940	; 0xf64
   1f098:	mov	r0, #1
   1f09c:	movt	r1, #6
   1f0a0:	eor	fp, r4, r0
   1f0a4:	bl	1132c <__printf_chk@plt>
   1f0a8:	b	1e678 <__assert_fail@plt+0xd274>
   1f0ac:	movw	r1, #3972	; 0xf84
   1f0b0:	mov	r0, #1
   1f0b4:	movt	r1, #6
   1f0b8:	eor	fp, r4, r0
   1f0bc:	bl	1132c <__printf_chk@plt>
   1f0c0:	b	1e130 <__assert_fail@plt+0xcd2c>
   1f0c4:	mov	r0, r7
   1f0c8:	mov	r1, sl
   1f0cc:	mov	r2, #2
   1f0d0:	bl	113bc <fseek@plt>
   1f0d4:	cmp	r0, #0
   1f0d8:	bne	1f454 <__assert_fail@plt+0xe050>
   1f0dc:	mov	r0, r7
   1f0e0:	bl	1114c <ftell@plt>
   1f0e4:	rsb	r0, fp, r0
   1f0e8:	b	1ea54 <__assert_fail@plt+0xd650>
   1f0ec:	movw	r1, #4268	; 0x10ac
   1f0f0:	mov	r0, #1
   1f0f4:	movt	r1, #6
   1f0f8:	eor	fp, fp, #67108864	; 0x4000000
   1f0fc:	bl	1132c <__printf_chk@plt>
   1f100:	b	1ddb8 <__assert_fail@plt+0xc9b4>
   1f104:	movw	r1, #4144	; 0x1030
   1f108:	mov	r0, #1
   1f10c:	movt	r1, #6
   1f110:	eor	fp, fp, #32768	; 0x8000
   1f114:	bl	1132c <__printf_chk@plt>
   1f118:	b	1dd60 <__assert_fail@plt+0xc95c>
   1f11c:	movw	r1, #4132	; 0x1024
   1f120:	mov	r0, #1
   1f124:	movt	r1, #6
   1f128:	eor	fp, fp, #16384	; 0x4000
   1f12c:	bl	1132c <__printf_chk@plt>
   1f130:	b	1dd58 <__assert_fail@plt+0xc954>
   1f134:	movw	r1, #4120	; 0x1018
   1f138:	mov	r0, #1
   1f13c:	movt	r1, #6
   1f140:	eor	fp, fp, #8192	; 0x2000
   1f144:	bl	1132c <__printf_chk@plt>
   1f148:	b	1dd50 <__assert_fail@plt+0xc94c>
   1f14c:	movw	r1, #4112	; 0x1010
   1f150:	mov	r0, #1
   1f154:	movt	r1, #6
   1f158:	eor	fp, fp, #4096	; 0x1000
   1f15c:	bl	1132c <__printf_chk@plt>
   1f160:	b	1dd48 <__assert_fail@plt+0xc944>
   1f164:	movw	r1, #4100	; 0x1004
   1f168:	mov	r0, #1
   1f16c:	movt	r1, #6
   1f170:	eor	fp, fp, #2048	; 0x800
   1f174:	bl	1132c <__printf_chk@plt>
   1f178:	b	1dd40 <__assert_fail@plt+0xc93c>
   1f17c:	movw	r1, #4088	; 0xff8
   1f180:	mov	r0, #1
   1f184:	movt	r1, #6
   1f188:	eor	fp, fp, #1024	; 0x400
   1f18c:	bl	1132c <__printf_chk@plt>
   1f190:	b	1dd38 <__assert_fail@plt+0xc934>
   1f194:	movw	r1, #4080	; 0xff0
   1f198:	mov	r0, #1
   1f19c:	movt	r1, #6
   1f1a0:	eor	fp, fp, #512	; 0x200
   1f1a4:	bl	1132c <__printf_chk@plt>
   1f1a8:	b	1dd30 <__assert_fail@plt+0xc92c>
   1f1ac:	movw	r1, #4072	; 0xfe8
   1f1b0:	mov	r0, #1
   1f1b4:	movt	r1, #6
   1f1b8:	eor	fp, fp, #256	; 0x100
   1f1bc:	bl	1132c <__printf_chk@plt>
   1f1c0:	b	1dd28 <__assert_fail@plt+0xc924>
   1f1c4:	movw	r1, #4064	; 0xfe0
   1f1c8:	mov	r0, #1
   1f1cc:	movt	r1, #6
   1f1d0:	eor	fp, fp, #128	; 0x80
   1f1d4:	bl	1132c <__printf_chk@plt>
   1f1d8:	b	1dd20 <__assert_fail@plt+0xc91c>
   1f1dc:	movw	r1, #4056	; 0xfd8
   1f1e0:	mov	r0, #1
   1f1e4:	movt	r1, #6
   1f1e8:	eor	fp, fp, #64	; 0x40
   1f1ec:	bl	1132c <__printf_chk@plt>
   1f1f0:	b	1dd18 <__assert_fail@plt+0xc914>
   1f1f4:	movw	r1, #4044	; 0xfcc
   1f1f8:	mov	r0, #1
   1f1fc:	movt	r1, #6
   1f200:	eor	fp, fp, #32
   1f204:	bl	1132c <__printf_chk@plt>
   1f208:	b	1dd10 <__assert_fail@plt+0xc90c>
   1f20c:	movw	r1, #4032	; 0xfc0
   1f210:	mov	r0, #1
   1f214:	movt	r1, #6
   1f218:	eor	fp, fp, #16
   1f21c:	bl	1132c <__printf_chk@plt>
   1f220:	b	1dd08 <__assert_fail@plt+0xc904>
   1f224:	movw	r1, #4020	; 0xfb4
   1f228:	mov	r0, #1
   1f22c:	movt	r1, #6
   1f230:	eor	fp, fp, #8
   1f234:	bl	1132c <__printf_chk@plt>
   1f238:	b	1dd00 <__assert_fail@plt+0xc8fc>
   1f23c:	movw	r1, #4012	; 0xfac
   1f240:	mov	r0, #1
   1f244:	movt	r1, #6
   1f248:	eor	fp, fp, #4
   1f24c:	bl	1132c <__printf_chk@plt>
   1f250:	b	1dcf8 <__assert_fail@plt+0xc8f4>
   1f254:	movw	r1, #4004	; 0xfa4
   1f258:	mov	r0, #1
   1f25c:	movt	r1, #6
   1f260:	eor	fp, fp, #2
   1f264:	bl	1132c <__printf_chk@plt>
   1f268:	b	1dcf0 <__assert_fail@plt+0xc8ec>
   1f26c:	movw	r1, #3996	; 0xf9c
   1f270:	mov	r0, #1
   1f274:	movt	r1, #6
   1f278:	eor	fp, r4, r0
   1f27c:	bl	1132c <__printf_chk@plt>
   1f280:	b	1dce8 <__assert_fail@plt+0xc8e4>
   1f284:	movw	r1, #4232	; 0x1088
   1f288:	mov	r0, #1
   1f28c:	movt	r1, #6
   1f290:	eor	fp, fp, #8388608	; 0x800000
   1f294:	bl	1132c <__printf_chk@plt>
   1f298:	b	1dda0 <__assert_fail@plt+0xc99c>
   1f29c:	movw	r1, #4220	; 0x107c
   1f2a0:	mov	r0, #1
   1f2a4:	movt	r1, #6
   1f2a8:	eor	fp, fp, #4194304	; 0x400000
   1f2ac:	bl	1132c <__printf_chk@plt>
   1f2b0:	b	1dd98 <__assert_fail@plt+0xc994>
   1f2b4:	movw	r1, #4212	; 0x1074
   1f2b8:	mov	r0, #1
   1f2bc:	movt	r1, #6
   1f2c0:	eor	fp, fp, #2097152	; 0x200000
   1f2c4:	bl	1132c <__printf_chk@plt>
   1f2c8:	b	1dd90 <__assert_fail@plt+0xc98c>
   1f2cc:	movw	r1, #4204	; 0x106c
   1f2d0:	mov	r0, #1
   1f2d4:	movt	r1, #6
   1f2d8:	eor	fp, fp, #1048576	; 0x100000
   1f2dc:	bl	1132c <__printf_chk@plt>
   1f2e0:	b	1dd88 <__assert_fail@plt+0xc984>
   1f2e4:	movw	r1, #4192	; 0x1060
   1f2e8:	mov	r0, #1
   1f2ec:	movt	r1, #6
   1f2f0:	eor	fp, fp, #524288	; 0x80000
   1f2f4:	bl	1132c <__printf_chk@plt>
   1f2f8:	b	1dd80 <__assert_fail@plt+0xc97c>
   1f2fc:	movw	r1, #4180	; 0x1054
   1f300:	mov	r0, #1
   1f304:	movt	r1, #6
   1f308:	eor	fp, fp, #262144	; 0x40000
   1f30c:	bl	1132c <__printf_chk@plt>
   1f310:	b	1dd78 <__assert_fail@plt+0xc974>
   1f314:	movw	r1, #4168	; 0x1048
   1f318:	mov	r0, #1
   1f31c:	movt	r1, #6
   1f320:	eor	fp, fp, #131072	; 0x20000
   1f324:	bl	1132c <__printf_chk@plt>
   1f328:	b	1dd70 <__assert_fail@plt+0xc96c>
   1f32c:	movw	r1, #4156	; 0x103c
   1f330:	mov	r0, #1
   1f334:	movt	r1, #6
   1f338:	eor	fp, fp, #65536	; 0x10000
   1f33c:	bl	1132c <__printf_chk@plt>
   1f340:	b	1dd68 <__assert_fail@plt+0xc964>
   1f344:	movw	r1, #4256	; 0x10a0
   1f348:	mov	r0, #1
   1f34c:	movt	r1, #6
   1f350:	eor	fp, fp, #33554432	; 0x2000000
   1f354:	bl	1132c <__printf_chk@plt>
   1f358:	b	1ddb0 <__assert_fail@plt+0xc9ac>
   1f35c:	movw	r1, #4244	; 0x1094
   1f360:	mov	r0, #1
   1f364:	movt	r1, #6
   1f368:	eor	fp, fp, #16777216	; 0x1000000
   1f36c:	bl	1132c <__printf_chk@plt>
   1f370:	b	1dda8 <__assert_fail@plt+0xc9a4>
   1f374:	mov	r2, #5
   1f378:	movw	r1, #3464	; 0xd88
   1f37c:	mov	r0, #0
   1f380:	movt	r1, #6
   1f384:	bl	11170 <dcgettext@plt>
   1f388:	bl	4b2b0 <error@@Base>
   1f38c:	b	1e9ec <__assert_fail@plt+0xd5e8>
   1f390:	mov	r2, #5
   1f394:	movw	r1, #4428	; 0x114c
   1f398:	movt	r1, #6
   1f39c:	bl	11170 <dcgettext@plt>
   1f3a0:	ldr	r2, [sp, #72]	; 0x48
   1f3a4:	mov	r1, r0
   1f3a8:	mov	r0, #1
   1f3ac:	bl	1132c <__printf_chk@plt>
   1f3b0:	b	1da54 <__assert_fail@plt+0xc650>
   1f3b4:	ldrd	r0, [r7, #-8]
   1f3b8:	mov	r2, #4
   1f3bc:	bl	16c84 <__assert_fail@plt+0x5880>
   1f3c0:	movw	ip, #16696	; 0x4138
   1f3c4:	movt	ip, #9
   1f3c8:	str	ip, [sp, #56]	; 0x38
   1f3cc:	b	1effc <__assert_fail@plt+0xdbf8>
   1f3d0:	ldrd	r0, [r7, #-8]
   1f3d4:	mov	r2, #4
   1f3d8:	bl	16c84 <__assert_fail@plt+0x5880>
   1f3dc:	movw	r1, #4548	; 0x11c4
   1f3e0:	mov	r0, #1
   1f3e4:	movt	r1, #6
   1f3e8:	bl	1132c <__printf_chk@plt>
   1f3ec:	ldrd	r0, [r7, #-8]
   1f3f0:	mov	r2, #4
   1f3f4:	adds	r0, r0, #24
   1f3f8:	adc	r1, r1, #0
   1f3fc:	bl	16c84 <__assert_fail@plt+0x5880>
   1f400:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1f404:	ldrd	r0, [r7, #-8]
   1f408:	bl	183ac <__assert_fail@plt+0x6fa8>
   1f40c:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1f410:	mov	r2, #5
   1f414:	movw	r1, #4400	; 0x1130
   1f418:	mov	r0, #0
   1f41c:	movt	r1, #6
   1f420:	bl	11170 <dcgettext@plt>
   1f424:	mov	r2, fp
   1f428:	mov	r1, r0
   1f42c:	mov	r0, #1
   1f430:	bl	1132c <__printf_chk@plt>
   1f434:	b	1da54 <__assert_fail@plt+0xc650>
   1f438:	mov	r2, #5
   1f43c:	mov	r0, r5
   1f440:	movw	r1, #3348	; 0xd14
   1f444:	movt	r1, #6
   1f448:	bl	11170 <dcgettext@plt>
   1f44c:	bl	4b2b0 <error@@Base>
   1f450:	b	1f028 <__assert_fail@plt+0xdc24>
   1f454:	mov	r2, #5
   1f458:	mov	r0, sl
   1f45c:	movw	r1, #3432	; 0xd68
   1f460:	movt	r1, #6
   1f464:	bl	11170 <dcgettext@plt>
   1f468:	bl	4b2b0 <error@@Base>
   1f46c:	b	1f0dc <__assert_fail@plt+0xdcd8>
   1f470:	movw	r1, #4616	; 0x1208
   1f474:	mov	r0, #1
   1f478:	movt	r1, #6
   1f47c:	bl	1132c <__printf_chk@plt>
   1f480:	ldrd	r2, [r7, #-8]
   1f484:	b	1e3c8 <__assert_fail@plt+0xcfc4>
   1f488:	movw	r1, #4604	; 0x11fc
   1f48c:	mov	r0, #1
   1f490:	movt	r1, #6
   1f494:	bl	1132c <__printf_chk@plt>
   1f498:	ldrd	r2, [r7, #-8]
   1f49c:	b	1e3b0 <__assert_fail@plt+0xcfac>
   1f4a0:	movw	r1, #4592	; 0x11f0
   1f4a4:	mov	r0, #1
   1f4a8:	movt	r1, #6
   1f4ac:	bl	1132c <__printf_chk@plt>
   1f4b0:	ldrd	r2, [r7, #-8]
   1f4b4:	b	1e398 <__assert_fail@plt+0xcf94>
   1f4b8:	movw	r1, #4580	; 0x11e4
   1f4bc:	mov	r0, #1
   1f4c0:	movt	r1, #6
   1f4c4:	bl	1132c <__printf_chk@plt>
   1f4c8:	ldrd	r2, [r7, #-8]
   1f4cc:	b	1e380 <__assert_fail@plt+0xcf7c>
   1f4d0:	movw	r1, #4568	; 0x11d8
   1f4d4:	mov	r0, #1
   1f4d8:	movt	r1, #6
   1f4dc:	bl	1132c <__printf_chk@plt>
   1f4e0:	ldrd	r2, [r7, #-8]
   1f4e4:	b	1e368 <__assert_fail@plt+0xcf64>
   1f4e8:	movw	r1, #4556	; 0x11cc
   1f4ec:	mov	r0, #1
   1f4f0:	movt	r1, #6
   1f4f4:	bl	1132c <__printf_chk@plt>
   1f4f8:	ldrd	r2, [r7, #-8]
   1f4fc:	b	1e350 <__assert_fail@plt+0xcf4c>
   1f500:	movw	r1, #4704	; 0x1260
   1f504:	mov	r0, #1
   1f508:	movt	r1, #6
   1f50c:	bl	1132c <__printf_chk@plt>
   1f510:	ldrd	r2, [r7, #-8]
   1f514:	b	1e488 <__assert_fail@plt+0xd084>
   1f518:	movw	r1, #4692	; 0x1254
   1f51c:	mov	r0, #1
   1f520:	movt	r1, #6
   1f524:	bl	1132c <__printf_chk@plt>
   1f528:	ldrd	r2, [r7, #-8]
   1f52c:	b	1e470 <__assert_fail@plt+0xd06c>
   1f530:	movw	r1, #4680	; 0x1248
   1f534:	mov	r0, #1
   1f538:	movt	r1, #6
   1f53c:	bl	1132c <__printf_chk@plt>
   1f540:	ldrd	r2, [r7, #-8]
   1f544:	b	1e458 <__assert_fail@plt+0xd054>
   1f548:	movw	r1, #4668	; 0x123c
   1f54c:	mov	r0, #1
   1f550:	movt	r1, #6
   1f554:	bl	1132c <__printf_chk@plt>
   1f558:	ldrd	r2, [r7, #-8]
   1f55c:	b	1e440 <__assert_fail@plt+0xd03c>
   1f560:	movw	r1, #4656	; 0x1230
   1f564:	mov	r0, #1
   1f568:	movt	r1, #6
   1f56c:	bl	1132c <__printf_chk@plt>
   1f570:	ldrd	r2, [r7, #-8]
   1f574:	b	1e428 <__assert_fail@plt+0xd024>
   1f578:	movw	r1, #4644	; 0x1224
   1f57c:	mov	r0, #1
   1f580:	movt	r1, #6
   1f584:	bl	1132c <__printf_chk@plt>
   1f588:	ldrd	r2, [r7, #-8]
   1f58c:	b	1e410 <__assert_fail@plt+0xd00c>
   1f590:	movw	r1, #4636	; 0x121c
   1f594:	mov	r0, #1
   1f598:	movt	r1, #6
   1f59c:	bl	1132c <__printf_chk@plt>
   1f5a0:	ldrd	r2, [r7, #-8]
   1f5a4:	b	1e3f8 <__assert_fail@plt+0xcff4>
   1f5a8:	movw	r1, #4624	; 0x1210
   1f5ac:	mov	r0, #1
   1f5b0:	movt	r1, #6
   1f5b4:	bl	1132c <__printf_chk@plt>
   1f5b8:	ldrd	r2, [r7, #-8]
   1f5bc:	b	1e3e0 <__assert_fail@plt+0xcfdc>
   1f5c0:	mov	r2, #5
   1f5c4:	movw	r1, #4492	; 0x118c
   1f5c8:	mov	r0, #0
   1f5cc:	movt	r1, #6
   1f5d0:	bl	11170 <dcgettext@plt>
   1f5d4:	ldr	r2, [r7, #-8]
   1f5d8:	add	r2, fp, r2
   1f5dc:	mov	r1, r0
   1f5e0:	mov	r0, #1
   1f5e4:	bl	1132c <__printf_chk@plt>
   1f5e8:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1f5ec:	mov	r2, #5
   1f5f0:	movw	r1, #11592	; 0x2d48
   1f5f4:	mov	r0, #0
   1f5f8:	movt	r1, #6
   1f5fc:	bl	11170 <dcgettext@plt>
   1f600:	mov	r1, r0
   1f604:	mov	r0, #1
   1f608:	bl	1132c <__printf_chk@plt>
   1f60c:	b	1e0c4 <__assert_fail@plt+0xccc0>
   1f610:	mov	r2, #5
   1f614:	movw	r1, #50908	; 0xc6dc
   1f618:	movt	r1, #5
   1f61c:	add	r4, sp, #148	; 0x94
   1f620:	bl	11170 <dcgettext@plt>
   1f624:	mov	r1, #128	; 0x80
   1f628:	mov	r3, r1
   1f62c:	mov	r2, #1
   1f630:	str	r0, [sp]
   1f634:	mov	r0, r4
   1f638:	bl	113f8 <__snprintf_chk@plt>
   1f63c:	b	1ef68 <__assert_fail@plt+0xdb64>
   1f640:	bl	1117c <__stack_chk_fail@plt>
   1f644:	ldmdb	r7, {r2, r3}
   1f648:	b	1eeac <__assert_fail@plt+0xdaa8>
   1f64c:	mov	r2, #5
   1f650:	movw	r1, #3604	; 0xe14
   1f654:	movt	r1, #6
   1f658:	bl	11170 <dcgettext@plt>
   1f65c:	ldr	r1, [sp, #40]	; 0x28
   1f660:	bl	4b2b0 <error@@Base>
   1f664:	mov	r0, r4
   1f668:	b	1d7b0 <__assert_fail@plt+0xc3ac>
   1f66c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f670:	movw	r4, #24896	; 0x6140
   1f674:	movt	r4, #9
   1f678:	movw	r5, #16680	; 0x4128
   1f67c:	movt	r5, #9
   1f680:	sub	sp, sp, #164	; 0xa4
   1f684:	ldr	r3, [r4, #-1752]	; 0xfffff928
   1f688:	ldr	r2, [r5]
   1f68c:	cmp	r3, #0
   1f690:	str	r4, [sp, #80]	; 0x50
   1f694:	str	r5, [sp, #84]	; 0x54
   1f698:	str	r0, [sp, #76]	; 0x4c
   1f69c:	str	r2, [sp, #156]	; 0x9c
   1f6a0:	beq	20474 <__assert_fail@plt+0xf070>
   1f6a4:	movw	ip, #16712	; 0x4148
   1f6a8:	movt	ip, #9
   1f6ac:	str	ip, [sp, #40]	; 0x28
   1f6b0:	ldr	r2, [ip, #68]	; 0x44
   1f6b4:	ldr	r4, [ip, #220]	; 0xdc
   1f6b8:	cmp	r2, #0
   1f6bc:	str	r4, [sp, #52]	; 0x34
   1f6c0:	beq	20454 <__assert_fail@plt+0xf050>
   1f6c4:	mov	r1, #0
   1f6c8:	movw	r5, #16696	; 0x4138
   1f6cc:	str	r1, [sp, #68]	; 0x44
   1f6d0:	movt	r5, #9
   1f6d4:	str	r5, [sp, #72]	; 0x48
   1f6d8:	b	1f714 <__assert_fail@plt+0xe310>
   1f6dc:	cmn	r3, #-1879048191	; 0x90000001
   1f6e0:	beq	200c0 <__assert_fail@plt+0xecbc>
   1f6e4:	cmn	r3, #-1879048189	; 0x90000003
   1f6e8:	beq	1fc0c <__assert_fail@plt+0xe808>
   1f6ec:	ldr	r5, [sp, #40]	; 0x28
   1f6f0:	ldr	ip, [sp, #68]	; 0x44
   1f6f4:	ldr	r4, [sp, #52]	; 0x34
   1f6f8:	ldr	r2, [r5, #68]	; 0x44
   1f6fc:	add	ip, ip, #1
   1f700:	add	r4, r4, #72	; 0x48
   1f704:	str	ip, [sp, #68]	; 0x44
   1f708:	cmp	r2, ip
   1f70c:	str	r4, [sp, #52]	; 0x34
   1f710:	bls	2044c <__assert_fail@plt+0xf048>
   1f714:	ldr	ip, [sp, #52]	; 0x34
   1f718:	ldr	r3, [ip, #4]
   1f71c:	cmn	r3, #-1879048190	; 0x90000002
   1f720:	bne	1f6dc <__assert_fail@plt+0xe2d8>
   1f724:	mov	r2, #5
   1f728:	movw	r1, #5088	; 0x13e0
   1f72c:	mov	r0, #0
   1f730:	movt	r1, #6
   1f734:	bl	11170 <dcgettext@plt>
   1f738:	mov	r4, r0
   1f73c:	ldr	r0, [sp, #52]	; 0x34
   1f740:	bl	132f8 <__assert_fail@plt+0x1ef4>
   1f744:	ldr	r5, [sp, #52]	; 0x34
   1f748:	mov	r1, r4
   1f74c:	ldr	r3, [r5, #44]	; 0x2c
   1f750:	mov	r2, r0
   1f754:	mov	r0, #1
   1f758:	bl	1132c <__printf_chk@plt>
   1f75c:	mov	r2, #5
   1f760:	movw	r1, #5140	; 0x1414
   1f764:	mov	r0, #0
   1f768:	movt	r1, #6
   1f76c:	bl	11170 <dcgettext@plt>
   1f770:	mov	r1, r0
   1f774:	mov	r0, #1
   1f778:	bl	1132c <__printf_chk@plt>
   1f77c:	ldr	r5, [sp, #52]	; 0x34
   1f780:	ldr	ip, [sp, #72]	; 0x48
   1f784:	mov	r1, #1
   1f788:	movw	r2, #61492	; 0xf034
   1f78c:	movt	r2, #5
   1f790:	ldrd	r4, [r5, #16]
   1f794:	ldr	r0, [ip]
   1f798:	strd	r4, [sp]
   1f79c:	bl	11338 <__fprintf_chk@plt>
   1f7a0:	mov	r2, #5
   1f7a4:	movw	r1, #5152	; 0x1420
   1f7a8:	mov	r0, #0
   1f7ac:	movt	r1, #6
   1f7b0:	bl	11170 <dcgettext@plt>
   1f7b4:	ldr	r5, [sp, #52]	; 0x34
   1f7b8:	ldr	r4, [r5, #40]	; 0x28
   1f7bc:	ldr	r5, [r5, #24]
   1f7c0:	mov	r6, r0
   1f7c4:	mov	r0, r4
   1f7c8:	bl	195dc <__assert_fail@plt+0x81d8>
   1f7cc:	mov	r3, r4
   1f7d0:	mov	r1, r6
   1f7d4:	mov	r2, r5
   1f7d8:	str	r0, [sp]
   1f7dc:	mov	r0, #1
   1f7e0:	bl	1132c <__printf_chk@plt>
   1f7e4:	ldr	ip, [sp, #52]	; 0x34
   1f7e8:	mov	r2, #5
   1f7ec:	movw	r1, #5188	; 0x1444
   1f7f0:	mov	r0, #0
   1f7f4:	movt	r1, #6
   1f7f8:	ldr	r6, [ip, #24]
   1f7fc:	ldrd	r4, [ip, #32]
   1f800:	bl	11170 <dcgettext@plt>
   1f804:	mov	r2, #1
   1f808:	mov	r3, #0
   1f80c:	ldr	r1, [sp, #76]	; 0x4c
   1f810:	strd	r2, [sp]
   1f814:	mov	r2, r6
   1f818:	strd	r4, [sp, #8]
   1f81c:	str	r0, [sp, #16]
   1f820:	mov	r0, #0
   1f824:	bl	1502c <__assert_fail@plt+0x3c28>
   1f828:	cmp	r0, #0
   1f82c:	str	r0, [sp, #60]	; 0x3c
   1f830:	beq	20494 <__assert_fail@plt+0xf090>
   1f834:	ldr	r4, [sp, #52]	; 0x34
   1f838:	ldr	r3, [r4, #44]	; 0x2c
   1f83c:	ldr	fp, [r4, #32]
   1f840:	cmp	r3, #0
   1f844:	add	fp, r0, fp
   1f848:	beq	1fbac <__assert_fail@plt+0xe7a8>
   1f84c:	add	r2, r0, #16
   1f850:	rsb	r5, r0, fp
   1f854:	cmp	fp, r2
   1f858:	str	r5, [sp, #64]	; 0x40
   1f85c:	bcc	20944 <__assert_fail@plt+0xf540>
   1f860:	movw	sl, #26492	; 0x677c
   1f864:	movw	r8, #16712	; 0x4148
   1f868:	movt	sl, #9
   1f86c:	movt	r8, #9
   1f870:	mov	r4, r0
   1f874:	mov	ip, #0
   1f878:	str	ip, [sp, #48]	; 0x30
   1f87c:	str	ip, [sp, #44]	; 0x2c
   1f880:	ldr	r3, [sl]
   1f884:	mov	r0, r4
   1f888:	mov	r1, #2
   1f88c:	blx	r3
   1f890:	ldr	r3, [sl]
   1f894:	mov	r1, #2
   1f898:	mov	r7, r0
   1f89c:	add	r0, r4, #2
   1f8a0:	blx	r3
   1f8a4:	ldr	r3, [sl]
   1f8a8:	mov	r1, #4
   1f8ac:	uxth	r0, r0
   1f8b0:	str	r0, [sp, #36]	; 0x24
   1f8b4:	add	r0, r4, r1
   1f8b8:	blx	r3
   1f8bc:	ldr	r3, [sl]
   1f8c0:	mov	r1, #4
   1f8c4:	mov	r5, r0
   1f8c8:	add	r0, r4, #8
   1f8cc:	blx	r3
   1f8d0:	ldr	r3, [sl]
   1f8d4:	mov	r1, #4
   1f8d8:	mov	r6, r0
   1f8dc:	add	r0, r4, #12
   1f8e0:	blx	r3
   1f8e4:	mov	r2, #5
   1f8e8:	movw	r1, #5248	; 0x1480
   1f8ec:	movt	r1, #6
   1f8f0:	str	r0, [sp, #56]	; 0x38
   1f8f4:	mov	r0, #0
   1f8f8:	bl	11170 <dcgettext@plt>
   1f8fc:	uxth	r3, r7
   1f900:	ldr	r2, [sp, #44]	; 0x2c
   1f904:	mov	r1, r0
   1f908:	mov	r0, #1
   1f90c:	bl	1132c <__printf_chk@plt>
   1f910:	ldr	ip, [sp, #40]	; 0x28
   1f914:	ldr	r7, [ip, #1876]	; 0x754
   1f918:	cmp	r7, #0
   1f91c:	beq	1f92c <__assert_fail@plt+0xe528>
   1f920:	ldr	r3, [r8, #1888]	; 0x760
   1f924:	cmp	r5, r3
   1f928:	bcc	1fbe4 <__assert_fail@plt+0xe7e0>
   1f92c:	mov	r2, #5
   1f930:	movw	r1, #5284	; 0x14a4
   1f934:	mov	r0, #0
   1f938:	movt	r1, #6
   1f93c:	bl	11170 <dcgettext@plt>
   1f940:	mov	r2, r5
   1f944:	mov	r1, r0
   1f948:	mov	r0, #1
   1f94c:	bl	1132c <__printf_chk@plt>
   1f950:	mov	r2, #5
   1f954:	movw	r1, #5296	; 0x14b0
   1f958:	mov	r0, #0
   1f95c:	movt	r1, #6
   1f960:	bl	11170 <dcgettext@plt>
   1f964:	ldr	r2, [sp, #36]	; 0x24
   1f968:	mov	r1, r0
   1f96c:	mov	r0, #1
   1f970:	bl	1132c <__printf_chk@plt>
   1f974:	rsb	r3, r4, fp
   1f978:	cmp	r6, r3
   1f97c:	bhi	204cc <__assert_fail@plt+0xf0c8>
   1f980:	ldr	r5, [sp, #36]	; 0x24
   1f984:	add	r4, r4, r6
   1f988:	ldr	ip, [sp, #44]	; 0x2c
   1f98c:	cmp	r5, #0
   1f990:	add	r6, r6, ip
   1f994:	beq	1fb24 <__assert_fail@plt+0xe720>
   1f998:	add	r3, r4, #16
   1f99c:	cmp	fp, r3
   1f9a0:	bcc	1fbc8 <__assert_fail@plt+0xe7c4>
   1f9a4:	mov	r5, #0
   1f9a8:	b	1fa50 <__assert_fail@plt+0xe64c>
   1f9ac:	mov	r2, #5
   1f9b0:	movw	r1, #5328	; 0x14d0
   1f9b4:	mov	r0, #0
   1f9b8:	movt	r1, #6
   1f9bc:	bl	11170 <dcgettext@plt>
   1f9c0:	mov	r3, r7
   1f9c4:	mov	r2, r6
   1f9c8:	mov	r1, r0
   1f9cc:	mov	r0, #1
   1f9d0:	bl	1132c <__printf_chk@plt>
   1f9d4:	mov	r2, #5
   1f9d8:	movw	r1, #5356	; 0x14ec
   1f9dc:	mov	r0, #0
   1f9e0:	movt	r1, #6
   1f9e4:	bl	11170 <dcgettext@plt>
   1f9e8:	mov	r7, r0
   1f9ec:	ldr	r0, [sp, #28]
   1f9f0:	bl	17a54 <__assert_fail@plt+0x6650>
   1f9f4:	ldr	r3, [sp, #32]
   1f9f8:	mov	r1, r7
   1f9fc:	mov	r2, r0
   1fa00:	mov	r0, #1
   1fa04:	bl	1132c <__printf_chk@plt>
   1fa08:	rsb	r3, r4, fp
   1fa0c:	cmp	r9, r3
   1fa10:	bhi	1fb08 <__assert_fail@plt+0xe704>
   1fa14:	cmp	r9, #0
   1fa18:	bne	1fa2c <__assert_fail@plt+0xe628>
   1fa1c:	ldr	ip, [sp, #36]	; 0x24
   1fa20:	sub	r3, ip, #1
   1fa24:	cmp	r3, r5
   1fa28:	bgt	1fb08 <__assert_fail@plt+0xe704>
   1fa2c:	ldr	ip, [sp, #36]	; 0x24
   1fa30:	add	r5, r5, #1
   1fa34:	add	r6, r6, r9
   1fa38:	add	r4, r4, r9
   1fa3c:	cmp	ip, r5
   1fa40:	ble	1fb24 <__assert_fail@plt+0xe720>
   1fa44:	add	r3, r4, #16
   1fa48:	cmp	fp, r3
   1fa4c:	bcc	1fbc8 <__assert_fail@plt+0xe7c4>
   1fa50:	ldr	r3, [sl]
   1fa54:	mov	r0, r4
   1fa58:	mov	r1, #4
   1fa5c:	blx	r3
   1fa60:	ldr	r3, [sl]
   1fa64:	add	r0, r4, #4
   1fa68:	mov	r1, #2
   1fa6c:	blx	r3
   1fa70:	ldr	r3, [sl]
   1fa74:	mov	r1, #2
   1fa78:	uxth	r0, r0
   1fa7c:	str	r0, [sp, #28]
   1fa80:	add	r0, r4, #6
   1fa84:	blx	r3
   1fa88:	ldr	r3, [sl]
   1fa8c:	mov	r1, #4
   1fa90:	uxth	r0, r0
   1fa94:	str	r0, [sp, #32]
   1fa98:	add	r0, r4, #8
   1fa9c:	blx	r3
   1faa0:	ldr	r3, [sl]
   1faa4:	mov	r1, #4
   1faa8:	mov	r7, r0
   1faac:	add	r0, r4, #12
   1fab0:	blx	r3
   1fab4:	ldr	ip, [sp, #40]	; 0x28
   1fab8:	ldr	r3, [ip, #1876]	; 0x754
   1fabc:	cmp	r3, #0
   1fac0:	mov	r9, r0
   1fac4:	beq	1f9ac <__assert_fail@plt+0xe5a8>
   1fac8:	ldr	r2, [r8, #1888]	; 0x760
   1facc:	cmp	r7, r2
   1fad0:	bcs	1f9ac <__assert_fail@plt+0xe5a8>
   1fad4:	mov	r2, #5
   1fad8:	movw	r1, #5308	; 0x14bc
   1fadc:	mov	r0, #0
   1fae0:	movt	r1, #6
   1fae4:	str	r3, [sp, #24]
   1fae8:	bl	11170 <dcgettext@plt>
   1faec:	ldr	r3, [sp, #24]
   1faf0:	mov	r2, r6
   1faf4:	add	r3, r3, r7
   1faf8:	mov	r1, r0
   1fafc:	mov	r0, #1
   1fb00:	bl	1132c <__printf_chk@plt>
   1fb04:	b	1f9d4 <__assert_fail@plt+0xe5d0>
   1fb08:	movw	r1, #5384	; 0x1508
   1fb0c:	mov	r0, #0
   1fb10:	movt	r1, #6
   1fb14:	mov	r2, #5
   1fb18:	bl	11170 <dcgettext@plt>
   1fb1c:	mov	r1, r9
   1fb20:	bl	4b9ec <warn@@Base>
   1fb24:	ldr	r4, [sp, #56]	; 0x38
   1fb28:	cmp	r4, #0
   1fb2c:	bne	1fbbc <__assert_fail@plt+0xe7b8>
   1fb30:	ldr	r5, [sp, #52]	; 0x34
   1fb34:	ldr	ip, [sp, #48]	; 0x30
   1fb38:	ldr	r3, [r5, #44]	; 0x2c
   1fb3c:	sub	r2, r3, #1
   1fb40:	cmp	r2, ip
   1fb44:	bhi	20850 <__assert_fail@plt+0xf44c>
   1fb48:	ldr	r5, [sp, #48]	; 0x30
   1fb4c:	ldr	ip, [sp, #44]	; 0x2c
   1fb50:	add	r5, r5, #1
   1fb54:	ldr	r4, [sp, #56]	; 0x38
   1fb58:	cmp	r5, r3
   1fb5c:	str	r5, [sp, #48]	; 0x30
   1fb60:	add	ip, ip, r4
   1fb64:	str	ip, [sp, #44]	; 0x2c
   1fb68:	bcs	1fbac <__assert_fail@plt+0xe7a8>
   1fb6c:	ldr	r4, [sp, #44]	; 0x2c
   1fb70:	ldr	r5, [sp, #64]	; 0x40
   1fb74:	cmp	r4, r5
   1fb78:	bhi	1fb94 <__assert_fail@plt+0xe790>
   1fb7c:	ldr	ip, [sp, #60]	; 0x3c
   1fb80:	ldr	r5, [sp, #44]	; 0x2c
   1fb84:	add	r4, ip, r5
   1fb88:	add	r3, r4, #16
   1fb8c:	cmp	fp, r3
   1fb90:	bcs	1f880 <__assert_fail@plt+0xe47c>
   1fb94:	movw	r1, #5212	; 0x145c
   1fb98:	mov	r2, #5
   1fb9c:	movt	r1, #6
   1fba0:	mov	r0, #0
   1fba4:	bl	11170 <dcgettext@plt>
   1fba8:	bl	4b9ec <warn@@Base>
   1fbac:	ldr	r0, [sp, #60]	; 0x3c
   1fbb0:	bl	1111c <free@plt>
   1fbb4:	mov	r1, #1
   1fbb8:	b	1f6ec <__assert_fail@plt+0xe2e8>
   1fbbc:	ldr	r4, [sp, #52]	; 0x34
   1fbc0:	ldr	r3, [r4, #44]	; 0x2c
   1fbc4:	b	1fb48 <__assert_fail@plt+0xe744>
   1fbc8:	mov	r2, #5
   1fbcc:	movw	r1, #5864	; 0x16e8
   1fbd0:	mov	r0, #0
   1fbd4:	movt	r1, #6
   1fbd8:	bl	11170 <dcgettext@plt>
   1fbdc:	bl	4b9ec <warn@@Base>
   1fbe0:	b	1fb24 <__assert_fail@plt+0xe720>
   1fbe4:	mov	r2, #5
   1fbe8:	movw	r1, #5272	; 0x1498
   1fbec:	mov	r0, #0
   1fbf0:	movt	r1, #6
   1fbf4:	bl	11170 <dcgettext@plt>
   1fbf8:	add	r2, r7, r5
   1fbfc:	mov	r1, r0
   1fc00:	mov	r0, #1
   1fc04:	bl	1132c <__printf_chk@plt>
   1fc08:	b	1f950 <__assert_fail@plt+0xe54c>
   1fc0c:	mov	r2, #5
   1fc10:	movw	r1, #4780	; 0x12ac
   1fc14:	mov	r0, #0
   1fc18:	movt	r1, #6
   1fc1c:	bl	11170 <dcgettext@plt>
   1fc20:	mov	r4, r0
   1fc24:	ldr	r0, [sp, #52]	; 0x34
   1fc28:	bl	132f8 <__assert_fail@plt+0x1ef4>
   1fc2c:	mov	r1, r4
   1fc30:	ldr	r4, [sp, #52]	; 0x34
   1fc34:	ldr	r3, [r4, #44]	; 0x2c
   1fc38:	mov	r2, r0
   1fc3c:	mov	r0, #1
   1fc40:	bl	1132c <__printf_chk@plt>
   1fc44:	mov	r2, #5
   1fc48:	movw	r1, #4836	; 0x12e4
   1fc4c:	mov	r0, #0
   1fc50:	movt	r1, #6
   1fc54:	bl	11170 <dcgettext@plt>
   1fc58:	mov	r1, r0
   1fc5c:	mov	r0, #1
   1fc60:	bl	1132c <__printf_chk@plt>
   1fc64:	ldr	r5, [sp, #72]	; 0x48
   1fc68:	ldr	r4, [sp, #52]	; 0x34
   1fc6c:	mov	r1, #1
   1fc70:	movw	r2, #61492	; 0xf034
   1fc74:	movt	r2, #5
   1fc78:	ldr	r0, [r5]
   1fc7c:	ldrd	r4, [r4, #16]
   1fc80:	strd	r4, [sp]
   1fc84:	bl	11338 <__fprintf_chk@plt>
   1fc88:	mov	r2, #5
   1fc8c:	movw	r1, #4848	; 0x12f0
   1fc90:	mov	r0, #0
   1fc94:	movt	r1, #6
   1fc98:	bl	11170 <dcgettext@plt>
   1fc9c:	ldr	ip, [sp, #52]	; 0x34
   1fca0:	ldr	r4, [ip, #40]	; 0x28
   1fca4:	ldr	r5, [ip, #24]
   1fca8:	mov	r6, r0
   1fcac:	mov	r0, r4
   1fcb0:	bl	195dc <__assert_fail@plt+0x81d8>
   1fcb4:	mov	r3, r4
   1fcb8:	mov	r1, r6
   1fcbc:	mov	r2, r5
   1fcc0:	str	r0, [sp]
   1fcc4:	mov	r0, #1
   1fcc8:	bl	1132c <__printf_chk@plt>
   1fccc:	ldr	r4, [sp, #52]	; 0x34
   1fcd0:	mov	r2, #5
   1fcd4:	movw	r1, #4880	; 0x1310
   1fcd8:	mov	r0, #0
   1fcdc:	movt	r1, #6
   1fce0:	ldr	r6, [r4, #24]
   1fce4:	ldrd	r4, [r4, #32]
   1fce8:	bl	11170 <dcgettext@plt>
   1fcec:	mov	r2, #1
   1fcf0:	mov	r3, #0
   1fcf4:	ldr	r1, [sp, #76]	; 0x4c
   1fcf8:	strd	r2, [sp]
   1fcfc:	mov	r2, r6
   1fd00:	strd	r4, [sp, #8]
   1fd04:	str	r0, [sp, #16]
   1fd08:	mov	r0, #0
   1fd0c:	bl	1502c <__assert_fail@plt+0x3c28>
   1fd10:	cmp	r0, #0
   1fd14:	str	r0, [sp, #48]	; 0x30
   1fd18:	beq	20494 <__assert_fail@plt+0xf090>
   1fd1c:	ldr	r5, [sp, #52]	; 0x34
   1fd20:	ldr	ip, [sp, #48]	; 0x30
   1fd24:	ldr	r3, [r5, #44]	; 0x2c
   1fd28:	ldr	r8, [r5, #32]
   1fd2c:	cmp	r3, #0
   1fd30:	add	r8, ip, r8
   1fd34:	beq	2043c <__assert_fail@plt+0xf038>
   1fd38:	add	r2, ip, #20
   1fd3c:	rsb	r4, ip, r8
   1fd40:	cmp	r8, r2
   1fd44:	str	r4, [sp, #56]	; 0x38
   1fd48:	bcc	20938 <__assert_fail@plt+0xf534>
   1fd4c:	movw	sl, #26492	; 0x677c
   1fd50:	movw	fp, #16712	; 0x4148
   1fd54:	movt	sl, #9
   1fd58:	movt	fp, #9
   1fd5c:	mov	r4, ip
   1fd60:	mov	r5, #0
   1fd64:	str	r5, [sp, #36]	; 0x24
   1fd68:	str	r5, [sp, #32]
   1fd6c:	ldr	r3, [sl]
   1fd70:	mov	r0, r4
   1fd74:	mov	r1, #2
   1fd78:	blx	r3
   1fd7c:	ldr	r3, [sl]
   1fd80:	mov	r1, #2
   1fd84:	mov	r7, r0
   1fd88:	add	r0, r4, #2
   1fd8c:	blx	r3
   1fd90:	ldr	r2, [sl]
   1fd94:	mov	r1, #2
   1fd98:	mov	r3, r0
   1fd9c:	add	r0, r4, #4
   1fda0:	str	r3, [sp, #24]
   1fda4:	blx	r2
   1fda8:	ldr	r2, [sl]
   1fdac:	mov	r1, #2
   1fdb0:	mov	r6, r0
   1fdb4:	add	r0, r4, #6
   1fdb8:	blx	r2
   1fdbc:	ldr	r2, [sl]
   1fdc0:	mov	r1, #4
   1fdc4:	mov	r9, r0
   1fdc8:	add	r0, r4, #8
   1fdcc:	uxth	r9, r9
   1fdd0:	str	r9, [sp, #28]
   1fdd4:	blx	r2
   1fdd8:	ldr	r2, [sl]
   1fddc:	add	r0, r4, #12
   1fde0:	mov	r1, #4
   1fde4:	blx	r2
   1fde8:	ldr	r2, [sl]
   1fdec:	mov	r1, #4
   1fdf0:	mov	r5, r0
   1fdf4:	add	r0, r4, #16
   1fdf8:	blx	r2
   1fdfc:	mov	r2, #5
   1fe00:	movw	r1, #4952	; 0x1358
   1fe04:	movt	r1, #6
   1fe08:	str	r0, [sp, #44]	; 0x2c
   1fe0c:	mov	r0, #0
   1fe10:	bl	11170 <dcgettext@plt>
   1fe14:	ldr	r3, [sp, #24]
   1fe18:	mov	r1, r0
   1fe1c:	uxth	r0, r3
   1fe20:	str	r1, [sp, #24]
   1fe24:	bl	17a54 <__assert_fail@plt+0x6650>
   1fe28:	uxth	r3, r7
   1fe2c:	ldr	r1, [sp, #24]
   1fe30:	ldr	r2, [sp, #32]
   1fe34:	str	r0, [sp]
   1fe38:	mov	r0, #1
   1fe3c:	bl	1132c <__printf_chk@plt>
   1fe40:	mov	r2, #5
   1fe44:	movw	r1, #4980	; 0x1374
   1fe48:	mov	r0, #0
   1fe4c:	movt	r1, #6
   1fe50:	bl	11170 <dcgettext@plt>
   1fe54:	ldr	r3, [sp, #28]
   1fe58:	uxth	r2, r6
   1fe5c:	mov	r1, r0
   1fe60:	mov	r0, #1
   1fe64:	bl	1132c <__printf_chk@plt>
   1fe68:	rsb	r3, r4, r8
   1fe6c:	cmp	r5, r3
   1fe70:	bhi	20428 <__assert_fail@plt+0xf024>
   1fe74:	add	r4, r4, r5
   1fe78:	movw	r0, #26492	; 0x677c
   1fe7c:	movt	r0, #9
   1fe80:	mov	r1, #4
   1fe84:	ldr	r3, [r0]
   1fe88:	mov	r0, r4
   1fe8c:	blx	r3
   1fe90:	movw	r1, #26492	; 0x677c
   1fe94:	movt	r1, #9
   1fe98:	ldr	r3, [r1]
   1fe9c:	mov	r1, #4
   1fea0:	mov	r7, r0
   1fea4:	add	r0, r4, #4
   1fea8:	blx	r3
   1feac:	ldr	ip, [sp, #40]	; 0x28
   1feb0:	ldr	r3, [ip, #1876]	; 0x754
   1feb4:	cmp	r3, #0
   1feb8:	mov	r6, r0
   1febc:	beq	1fecc <__assert_fail@plt+0xeac8>
   1fec0:	ldr	r2, [fp, #1888]	; 0x760
   1fec4:	cmp	r7, r2
   1fec8:	bcc	20090 <__assert_fail@plt+0xec8c>
   1fecc:	mov	r2, #5
   1fed0:	movw	r1, #5004	; 0x138c
   1fed4:	mov	r0, #0
   1fed8:	movt	r1, #6
   1fedc:	bl	11170 <dcgettext@plt>
   1fee0:	mov	r2, r7
   1fee4:	mov	r1, r0
   1fee8:	mov	r0, #1
   1feec:	bl	1132c <__printf_chk@plt>
   1fef0:	ldr	ip, [sp, #28]
   1fef4:	cmp	ip, #1
   1fef8:	ldr	ip, [sp, #32]
   1fefc:	add	r5, r5, ip
   1ff00:	ble	20014 <__assert_fail@plt+0xec10>
   1ff04:	rsb	r3, r4, r8
   1ff08:	cmp	r6, r3
   1ff0c:	bhi	2006c <__assert_fail@plt+0xec68>
   1ff10:	add	r4, r4, r6
   1ff14:	add	r6, r5, r6
   1ff18:	add	r3, r4, #8
   1ff1c:	cmp	r8, r3
   1ff20:	bcc	2006c <__assert_fail@plt+0xec68>
   1ff24:	mov	r5, #1
   1ff28:	b	1ff88 <__assert_fail@plt+0xeb84>
   1ff2c:	mov	r2, #5
   1ff30:	movw	r1, #5048	; 0x13b8
   1ff34:	mov	r0, #0
   1ff38:	movt	r1, #6
   1ff3c:	bl	11170 <dcgettext@plt>
   1ff40:	mov	r3, r5
   1ff44:	str	r7, [sp]
   1ff48:	mov	r2, r6
   1ff4c:	add	r5, r5, #1
   1ff50:	mov	r1, r0
   1ff54:	mov	r0, #1
   1ff58:	bl	1132c <__printf_chk@plt>
   1ff5c:	ldr	ip, [sp, #28]
   1ff60:	cmp	ip, r5
   1ff64:	ble	20014 <__assert_fail@plt+0xec10>
   1ff68:	rsb	r3, r4, r8
   1ff6c:	cmp	r3, r9
   1ff70:	bcc	2006c <__assert_fail@plt+0xec68>
   1ff74:	add	r4, r4, r9
   1ff78:	add	r6, r9, r6
   1ff7c:	add	r3, r4, #8
   1ff80:	cmp	r8, r3
   1ff84:	bcc	2006c <__assert_fail@plt+0xec68>
   1ff88:	ldr	r3, [sl]
   1ff8c:	mov	r0, r4
   1ff90:	mov	r1, #4
   1ff94:	blx	r3
   1ff98:	ldr	r3, [sl]
   1ff9c:	mov	r1, #4
   1ffa0:	mov	r7, r0
   1ffa4:	add	r0, r4, #4
   1ffa8:	blx	r3
   1ffac:	ldr	ip, [sp, #40]	; 0x28
   1ffb0:	ldr	r3, [ip, #1876]	; 0x754
   1ffb4:	cmp	r3, #0
   1ffb8:	mov	r9, r0
   1ffbc:	beq	1ff2c <__assert_fail@plt+0xeb28>
   1ffc0:	ldr	r2, [fp, #1888]	; 0x760
   1ffc4:	cmp	r7, r2
   1ffc8:	bcs	1ff2c <__assert_fail@plt+0xeb28>
   1ffcc:	mov	r2, #5
   1ffd0:	movw	r1, #5024	; 0x13a0
   1ffd4:	mov	r0, #0
   1ffd8:	movt	r1, #6
   1ffdc:	str	r3, [sp, #24]
   1ffe0:	bl	11170 <dcgettext@plt>
   1ffe4:	ldr	r3, [sp, #24]
   1ffe8:	mov	r2, r6
   1ffec:	add	r7, r3, r7
   1fff0:	mov	r3, r5
   1fff4:	str	r7, [sp]
   1fff8:	add	r5, r5, #1
   1fffc:	mov	r1, r0
   20000:	mov	r0, #1
   20004:	bl	1132c <__printf_chk@plt>
   20008:	ldr	ip, [sp, #28]
   2000c:	cmp	ip, r5
   20010:	bgt	1ff68 <__assert_fail@plt+0xeb64>
   20014:	ldr	r5, [sp, #32]
   20018:	ldr	r4, [sp, #44]	; 0x2c
   2001c:	add	r3, r4, r5
   20020:	cmp	r3, r5
   20024:	bls	20428 <__assert_fail@plt+0xf024>
   20028:	ldr	r4, [sp, #52]	; 0x34
   2002c:	ldr	r5, [sp, #36]	; 0x24
   20030:	ldr	r2, [r4, #44]	; 0x2c
   20034:	add	r5, r5, #1
   20038:	str	r5, [sp, #36]	; 0x24
   2003c:	cmp	r2, r5
   20040:	bls	2043c <__assert_fail@plt+0xf038>
   20044:	ldr	ip, [sp, #56]	; 0x38
   20048:	cmp	ip, r3
   2004c:	bcc	2049c <__assert_fail@plt+0xf098>
   20050:	ldr	r5, [sp, #48]	; 0x30
   20054:	add	r4, r5, r3
   20058:	add	r2, r4, #20
   2005c:	cmp	r8, r2
   20060:	bcc	2049c <__assert_fail@plt+0xf098>
   20064:	str	r3, [sp, #32]
   20068:	b	1fd6c <__assert_fail@plt+0xe968>
   2006c:	mov	r2, #5
   20070:	movw	r1, #5824	; 0x16c0
   20074:	mov	r0, #0
   20078:	movt	r1, #6
   2007c:	bl	11170 <dcgettext@plt>
   20080:	mov	r1, r0
   20084:	mov	r0, #1
   20088:	bl	1132c <__printf_chk@plt>
   2008c:	b	20014 <__assert_fail@plt+0xec10>
   20090:	mov	r2, #5
   20094:	movw	r1, #13936	; 0x3670
   20098:	mov	r0, #0
   2009c:	movt	r1, #6
   200a0:	str	r3, [sp, #24]
   200a4:	bl	11170 <dcgettext@plt>
   200a8:	ldr	r3, [sp, #24]
   200ac:	add	r2, r3, r7
   200b0:	mov	r1, r0
   200b4:	mov	r0, #1
   200b8:	bl	1132c <__printf_chk@plt>
   200bc:	b	1fef0 <__assert_fail@plt+0xeaec>
   200c0:	ldr	r5, [sp, #52]	; 0x34
   200c4:	ldr	r4, [r5, #40]	; 0x28
   200c8:	cmp	r4, r2
   200cc:	bcs	1f6ec <__assert_fail@plt+0xe2e8>
   200d0:	ldr	ip, [sp, #40]	; 0x28
   200d4:	add	r4, r4, r4, lsl #3
   200d8:	movw	r3, #16712	; 0x4148
   200dc:	ldrd	r8, [r5, #32]
   200e0:	movt	r3, #9
   200e4:	ldr	r0, [ip, #220]	; 0xdc
   200e8:	add	r4, r0, r4, lsl #3
   200ec:	ldr	r0, [r4, #40]	; 0x28
   200f0:	cmp	r0, r2
   200f4:	bcs	1f6ec <__assert_fail@plt+0xe2e8>
   200f8:	ldr	r3, [r3, #460]	; 0x1cc
   200fc:	mov	r1, r4
   20100:	ldr	r0, [sp, #76]	; 0x4c
   20104:	add	r2, sp, #116	; 0x74
   20108:	cmp	r3, #0
   2010c:	beq	204e4 <__assert_fail@plt+0xf0e0>
   20110:	bl	155f4 <__assert_fail@plt+0x41f0>
   20114:	str	r0, [sp, #100]	; 0x64
   20118:	ldr	r5, [sp, #100]	; 0x64
   2011c:	cmp	r5, #0
   20120:	beq	20494 <__assert_fail@plt+0xf090>
   20124:	ldr	r5, [sp, #40]	; 0x28
   20128:	mov	r2, #5
   2012c:	ldr	r3, [r4, #40]	; 0x28
   20130:	movw	r1, #5524	; 0x1594
   20134:	mov	r0, #0
   20138:	movt	r1, #6
   2013c:	ldr	ip, [r5, #220]	; 0xdc
   20140:	add	r3, r3, r3, lsl #3
   20144:	add	ip, ip, r3, lsl #3
   20148:	str	ip, [sp, #92]	; 0x5c
   2014c:	ldr	r5, [ip, #24]
   20150:	ldrd	r6, [ip, #32]
   20154:	bl	11170 <dcgettext@plt>
   20158:	mov	r2, #1
   2015c:	mov	r3, #0
   20160:	ldr	r1, [sp, #76]	; 0x4c
   20164:	strd	r2, [sp]
   20168:	mov	r2, r5
   2016c:	strd	r6, [sp, #8]
   20170:	str	r0, [sp, #16]
   20174:	mov	r0, #0
   20178:	bl	1502c <__assert_fail@plt+0x3c28>
   2017c:	cmp	r0, #0
   20180:	str	r0, [sp, #104]	; 0x68
   20184:	beq	20418 <__assert_fail@plt+0xf014>
   20188:	mov	r2, #5
   2018c:	movw	r1, #5548	; 0x15ac
   20190:	mov	r0, #0
   20194:	movt	r1, #6
   20198:	bl	11170 <dcgettext@plt>
   2019c:	lsrs	r9, r9, #1
   201a0:	rrx	r8, r8
   201a4:	mov	r5, r0
   201a8:	ldr	r0, [sp, #52]	; 0x34
   201ac:	bl	132f8 <__assert_fail@plt+0x1ef4>
   201b0:	mov	r3, r8
   201b4:	mov	r1, r5
   201b8:	mov	r2, r0
   201bc:	mov	r0, #1
   201c0:	lsl	r6, r8, r0
   201c4:	bl	1132c <__printf_chk@plt>
   201c8:	mov	r2, #5
   201cc:	mov	r0, #0
   201d0:	movw	r1, #5604	; 0x15e4
   201d4:	movt	r1, #6
   201d8:	mov	r5, r0
   201dc:	bl	11170 <dcgettext@plt>
   201e0:	mov	r1, r0
   201e4:	mov	r0, #1
   201e8:	bl	1132c <__printf_chk@plt>
   201ec:	ldr	ip, [sp, #72]	; 0x48
   201f0:	mov	r1, #1
   201f4:	movw	r2, #61492	; 0xf034
   201f8:	movt	r2, #5
   201fc:	str	r8, [sp, #56]	; 0x38
   20200:	ldr	r0, [ip]
   20204:	ldr	ip, [sp, #52]	; 0x34
   20208:	ldrd	sl, [ip, #16]
   2020c:	strd	sl, [sp]
   20210:	mov	fp, #0
   20214:	bl	11338 <__fprintf_chk@plt>
   20218:	mov	r2, #5
   2021c:	movw	r1, #5152	; 0x1420
   20220:	mov	r0, r5
   20224:	movt	r1, #6
   20228:	bl	11170 <dcgettext@plt>
   2022c:	mov	sl, r0
   20230:	mov	r0, r4
   20234:	ldr	r4, [sp, #52]	; 0x34
   20238:	ldr	r7, [r4, #24]
   2023c:	ldr	r4, [r4, #40]	; 0x28
   20240:	bl	132f8 <__assert_fail@plt+0x1ef4>
   20244:	mov	r1, sl
   20248:	mov	sl, r8
   2024c:	mov	r2, r7
   20250:	mov	r3, r4
   20254:	str	r0, [sp]
   20258:	mov	r0, #1
   2025c:	bl	1132c <__printf_chk@plt>
   20260:	ldr	ip, [sp, #80]	; 0x50
   20264:	movw	r3, #63776	; 0xf920
   20268:	movt	r3, #65535	; 0xffff
   2026c:	str	r6, [sp]
   20270:	str	r5, [sp, #4]
   20274:	ldr	r0, [sp, #76]	; 0x4c
   20278:	ldrd	r2, [r3, ip]
   2027c:	bl	1d67c <__assert_fail@plt+0xc278>
   20280:	mov	r2, #5
   20284:	movw	r1, #5612	; 0x15ec
   20288:	movt	r1, #6
   2028c:	mov	r4, r0
   20290:	mov	r0, r5
   20294:	bl	11170 <dcgettext@plt>
   20298:	strd	sl, [sp]
   2029c:	mov	r2, r4
   202a0:	mov	sl, #2
   202a4:	mov	fp, #0
   202a8:	ldr	r1, [sp, #76]	; 0x4c
   202ac:	strd	sl, [sp, #8]
   202b0:	str	r0, [sp, #16]
   202b4:	mov	r0, r5
   202b8:	bl	1502c <__assert_fail@plt+0x3c28>
   202bc:	subs	r7, r0, #0
   202c0:	beq	20410 <__assert_fail@plt+0xf00c>
   202c4:	mov	r0, r8
   202c8:	mov	r1, #2
   202cc:	bl	3f74c <__assert_fail@plt+0x2e348>
   202d0:	cmp	r8, #0
   202d4:	str	r0, [sp, #108]	; 0x6c
   202d8:	beq	20924 <__assert_fail@plt+0xf520>
   202dc:	sub	r5, r8, #-2147483647	; 0x80000001
   202e0:	movw	sl, #26492	; 0x677c
   202e4:	add	r6, r0, r6
   202e8:	movt	sl, #9
   202ec:	add	r5, r7, r5, lsl #1
   202f0:	mov	r4, r8
   202f4:	mov	r0, r5
   202f8:	ldr	r3, [sl]
   202fc:	mov	r1, #2
   20300:	sub	r5, r5, #2
   20304:	blx	r3
   20308:	subs	r4, r4, #1
   2030c:	strh	r0, [r6, #-2]!
   20310:	bne	202f4 <__assert_fail@plt+0xeef0>
   20314:	mov	r0, r7
   20318:	str	r4, [sp, #48]	; 0x30
   2031c:	bl	1111c <free@plt>
   20320:	ldr	ip, [sp, #108]	; 0x6c
   20324:	movw	r5, #36588	; 0x8eec
   20328:	movt	r5, #7
   2032c:	add	ip, ip, #8
   20330:	str	r5, [sp, #96]	; 0x60
   20334:	str	ip, [sp, #36]	; 0x24
   20338:	mov	r2, #5
   2033c:	movw	r1, #5632	; 0x1600
   20340:	mov	r0, #0
   20344:	movt	r1, #6
   20348:	bl	11170 <dcgettext@plt>
   2034c:	movw	r1, #5644	; 0x160c
   20350:	ldr	r2, [sp, #48]	; 0x30
   20354:	movt	r1, #6
   20358:	str	r0, [sp, #88]	; 0x58
   2035c:	mov	r0, #1
   20360:	bl	1132c <__printf_chk@plt>
   20364:	ldr	r4, [sp, #36]	; 0x24
   20368:	ldr	r5, [sp, #48]	; 0x30
   2036c:	ldr	r9, [sp, #76]	; 0x4c
   20370:	sub	fp, r4, #8
   20374:	str	r5, [sp, #28]
   20378:	ldr	ip, [sp, #28]
   2037c:	ldr	r4, [sp, #56]	; 0x38
   20380:	cmp	ip, r4
   20384:	bcs	203d4 <__assert_fail@plt+0xefd0>
   20388:	ldrh	r0, [fp], #2
   2038c:	cmp	r0, #0
   20390:	beq	205cc <__assert_fail@plt+0xf1c8>
   20394:	cmp	r0, #1
   20398:	bne	204f0 <__assert_fail@plt+0xf0ec>
   2039c:	movw	r1, #5672	; 0x1628
   203a0:	mov	r0, #0
   203a4:	movt	r1, #6
   203a8:	mov	r2, #5
   203ac:	bl	11170 <dcgettext@plt>
   203b0:	ldr	r4, [sp, #72]	; 0x48
   203b4:	ldr	r1, [r4]
   203b8:	bl	113d4 <fputs@plt>
   203bc:	ldr	r5, [sp, #36]	; 0x24
   203c0:	ldr	ip, [sp, #28]
   203c4:	cmp	fp, r5
   203c8:	add	ip, ip, #1
   203cc:	str	ip, [sp, #28]
   203d0:	bne	20378 <__assert_fail@plt+0xef74>
   203d4:	ldr	r5, [sp, #72]	; 0x48
   203d8:	mov	r0, #10
   203dc:	ldr	r4, [sp, #48]	; 0x30
   203e0:	ldr	ip, [sp, #36]	; 0x24
   203e4:	ldr	r1, [r5]
   203e8:	add	r4, r4, #4
   203ec:	add	ip, ip, #8
   203f0:	str	r4, [sp, #48]	; 0x30
   203f4:	str	ip, [sp, #36]	; 0x24
   203f8:	bl	111ac <_IO_putc@plt>
   203fc:	ldr	r5, [sp, #56]	; 0x38
   20400:	cmp	r5, r4
   20404:	bhi	20338 <__assert_fail@plt+0xef34>
   20408:	ldr	r0, [sp, #108]	; 0x6c
   2040c:	bl	1111c <free@plt>
   20410:	ldr	r0, [sp, #104]	; 0x68
   20414:	bl	1111c <free@plt>
   20418:	ldr	r0, [sp, #100]	; 0x64
   2041c:	bl	1111c <free@plt>
   20420:	mov	r1, #1
   20424:	b	1f6ec <__assert_fail@plt+0xe2e8>
   20428:	ldr	ip, [sp, #52]	; 0x34
   2042c:	ldr	r3, [ip, #44]	; 0x2c
   20430:	ldr	r4, [sp, #36]	; 0x24
   20434:	cmp	r4, r3
   20438:	bcc	2049c <__assert_fail@plt+0xf098>
   2043c:	ldr	r0, [sp, #48]	; 0x30
   20440:	bl	1111c <free@plt>
   20444:	mov	r1, #1
   20448:	b	1f6ec <__assert_fail@plt+0xe2e8>
   2044c:	cmp	r1, #0
   20450:	bne	20474 <__assert_fail@plt+0xf070>
   20454:	movw	r1, #4732	; 0x127c
   20458:	mov	r0, #0
   2045c:	movt	r1, #6
   20460:	mov	r2, #5
   20464:	bl	11170 <dcgettext@plt>
   20468:	mov	r1, r0
   2046c:	mov	r0, #1
   20470:	bl	1132c <__printf_chk@plt>
   20474:	ldr	r5, [sp, #84]	; 0x54
   20478:	mov	r0, #1
   2047c:	ldr	r2, [sp, #156]	; 0x9c
   20480:	ldr	r3, [r5]
   20484:	cmp	r2, r3
   20488:	bne	20950 <__assert_fail@plt+0xf54c>
   2048c:	add	sp, sp, #164	; 0xa4
   20490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20494:	mov	r1, #1
   20498:	b	1f6ec <__assert_fail@plt+0xe2e8>
   2049c:	mov	r2, #5
   204a0:	movw	r1, #4908	; 0x132c
   204a4:	mov	r0, #0
   204a8:	movt	r1, #6
   204ac:	bl	11170 <dcgettext@plt>
   204b0:	mov	r1, r0
   204b4:	mov	r0, #1
   204b8:	bl	1132c <__printf_chk@plt>
   204bc:	ldr	r0, [sp, #48]	; 0x30
   204c0:	bl	1111c <free@plt>
   204c4:	mov	r1, #1
   204c8:	b	1f6ec <__assert_fail@plt+0xe2e8>
   204cc:	ldr	r4, [sp, #52]	; 0x34
   204d0:	ldr	r3, [r4, #44]	; 0x2c
   204d4:	ldr	ip, [sp, #48]	; 0x30
   204d8:	cmp	ip, r3
   204dc:	bcs	1fbac <__assert_fail@plt+0xe7a8>
   204e0:	b	1fb94 <__assert_fail@plt+0xe790>
   204e4:	bl	15a6c <__assert_fail@plt+0x4668>
   204e8:	str	r0, [sp, #100]	; 0x64
   204ec:	b	20118 <__assert_fail@plt+0xed14>
   204f0:	tst	r0, #32768	; 0x8000
   204f4:	ubfx	r2, r0, #0, #15
   204f8:	movw	r1, #5692	; 0x163c
   204fc:	mov	r0, #1
   20500:	moveq	r3, #32
   20504:	movne	r3, #104	; 0x68
   20508:	movt	r1, #6
   2050c:	bl	1132c <__printf_chk@plt>
   20510:	ldr	r3, [sp, #116]	; 0x74
   20514:	ldr	r5, [sp, #28]
   20518:	cmp	r5, r3
   2051c:	str	r0, [sp, #64]	; 0x40
   20520:	bcs	205ec <__assert_fail@plt+0xf1e8>
   20524:	ldr	ip, [sp, #80]	; 0x50
   20528:	movw	r3, #63664	; 0xf8b0
   2052c:	movt	r3, #65535	; 0xffff
   20530:	ldrd	r2, [r3, ip]
   20534:	orrs	r0, r2, r3
   20538:	bne	20608 <__assert_fail@plt+0xf204>
   2053c:	mov	r7, #0
   20540:	ldrh	r2, [fp, #-2]
   20544:	movw	r3, #32769	; 0x8001
   20548:	cmp	r2, r3
   2054c:	beq	20568 <__assert_fail@plt+0xf164>
   20550:	ldr	r5, [sp, #80]	; 0x50
   20554:	movw	r3, #63680	; 0xf8c0
   20558:	movt	r3, #65535	; 0xffff
   2055c:	ldrd	r2, [r3, r5]
   20560:	orrs	ip, r2, r3
   20564:	bne	2078c <__assert_fail@plt+0xf388>
   20568:	cmp	r7, #0
   2056c:	beq	205a4 <__assert_fail@plt+0xf1a0>
   20570:	mov	r0, r7
   20574:	bl	1129c <strlen@plt>
   20578:	ldr	r5, [sp, #96]	; 0x60
   2057c:	mov	r2, r7
   20580:	movw	r1, #5812	; 0x16b4
   20584:	movt	r1, #6
   20588:	str	r5, [sp]
   2058c:	rsb	r3, r0, #12
   20590:	mov	r0, #1
   20594:	bl	1132c <__printf_chk@plt>
   20598:	ldr	ip, [sp, #64]	; 0x40
   2059c:	add	ip, ip, r0
   205a0:	str	ip, [sp, #64]	; 0x40
   205a4:	ldr	r4, [sp, #64]	; 0x40
   205a8:	cmp	r4, #17
   205ac:	bgt	203bc <__assert_fail@plt+0xefb8>
   205b0:	rsb	r2, r4, #18
   205b4:	movw	r1, #5820	; 0x16bc
   205b8:	mov	r3, #32
   205bc:	movt	r1, #6
   205c0:	mov	r0, #1
   205c4:	bl	1132c <__printf_chk@plt>
   205c8:	b	203bc <__assert_fail@plt+0xefb8>
   205cc:	mov	r2, #5
   205d0:	movw	r1, #5652	; 0x1614
   205d4:	movt	r1, #6
   205d8:	bl	11170 <dcgettext@plt>
   205dc:	ldr	ip, [sp, #72]	; 0x48
   205e0:	ldr	r1, [ip]
   205e4:	bl	113d4 <fputs@plt>
   205e8:	b	203bc <__assert_fail@plt+0xefb8>
   205ec:	mov	r2, #5
   205f0:	movw	r1, #5700	; 0x1644
   205f4:	mov	r0, #0
   205f8:	movt	r1, #6
   205fc:	bl	11170 <dcgettext@plt>
   20600:	bl	4b9ec <warn@@Base>
   20604:	b	203bc <__assert_fail@plt+0xefb8>
   20608:	mov	r6, #16
   2060c:	mov	r5, #0
   20610:	str	r6, [sp]
   20614:	mov	r0, r9
   20618:	str	r5, [sp, #4]
   2061c:	add	r4, sp, #120	; 0x78
   20620:	str	r4, [sp, #60]	; 0x3c
   20624:	bl	1d67c <__assert_fail@plt+0xc278>
   20628:	str	r0, [sp, #32]
   2062c:	mov	r2, #5
   20630:	movw	r1, #5736	; 0x1668
   20634:	mov	r0, #0
   20638:	movt	r1, #6
   2063c:	bl	11170 <dcgettext@plt>
   20640:	mov	r2, #1
   20644:	mov	r3, #0
   20648:	str	r6, [sp]
   2064c:	strd	r2, [sp, #8]
   20650:	mov	r1, r9
   20654:	str	r5, [sp, #4]
   20658:	ldr	r2, [sp, #32]
   2065c:	str	r0, [sp, #16]
   20660:	ldr	r0, [sp, #60]	; 0x3c
   20664:	bl	1502c <__assert_fail@plt+0x3c28>
   20668:	cmp	r0, #0
   2066c:	beq	2053c <__assert_fail@plt+0xf138>
   20670:	ldr	r3, [sl]
   20674:	add	r0, sp, #128	; 0x80
   20678:	mov	r1, #4
   2067c:	add	r7, sp, #136	; 0x88
   20680:	blx	r3
   20684:	ldr	ip, [sp, #32]
   20688:	ldr	r3, [sl]
   2068c:	mov	r1, #4
   20690:	add	r4, ip, r0
   20694:	add	r0, sp, #132	; 0x84
   20698:	blx	r3
   2069c:	str	r0, [sp, #44]	; 0x2c
   206a0:	b	206e4 <__assert_fail@plt+0xf2e0>
   206a4:	ldr	r3, [sl]
   206a8:	add	r0, sp, #148	; 0x94
   206ac:	mov	r1, #4
   206b0:	blx	r3
   206b4:	ldr	r3, [sl]
   206b8:	mov	r1, #2
   206bc:	mov	r8, r0
   206c0:	add	r0, sp, #142	; 0x8e
   206c4:	blx	r3
   206c8:	ldrh	r3, [fp, #-2]
   206cc:	add	r4, r4, r8
   206d0:	uxth	r0, r0
   206d4:	cmp	r3, r0
   206d8:	beq	20750 <__assert_fail@plt+0xf34c>
   206dc:	cmp	r8, #0
   206e0:	beq	20734 <__assert_fail@plt+0xf330>
   206e4:	mov	r2, #5
   206e8:	movw	r1, #5752	; 0x1678
   206ec:	mov	r0, #0
   206f0:	movt	r1, #6
   206f4:	bl	11170 <dcgettext@plt>
   206f8:	mov	r2, #1
   206fc:	mov	r3, #0
   20700:	str	r6, [sp]
   20704:	strd	r2, [sp, #8]
   20708:	mov	r1, r9
   2070c:	str	r5, [sp, #4]
   20710:	mov	r2, r4
   20714:	str	r0, [sp, #16]
   20718:	mov	r0, r7
   2071c:	bl	1502c <__assert_fail@plt+0x3c28>
   20720:	cmp	r0, #0
   20724:	bne	206a4 <__assert_fail@plt+0xf2a0>
   20728:	ldrh	r3, [fp, #-2]
   2072c:	cmp	r3, #0
   20730:	beq	20750 <__assert_fail@plt+0xf34c>
   20734:	ldr	ip, [sp, #44]	; 0x2c
   20738:	ldr	r3, [sp, #32]
   2073c:	cmp	ip, #0
   20740:	add	r3, r3, ip
   20744:	str	r3, [sp, #32]
   20748:	bne	2062c <__assert_fail@plt+0xf228>
   2074c:	b	2053c <__assert_fail@plt+0xf138>
   20750:	ldr	r3, [sl]
   20754:	add	r0, sp, #144	; 0x90
   20758:	mov	r1, #4
   2075c:	mov	r5, #0
   20760:	blx	r3
   20764:	ldr	r4, [sp, #92]	; 0x5c
   20768:	ldrd	r2, [r4, #32]
   2076c:	mov	r4, r0
   20770:	cmp	r5, r3
   20774:	cmpeq	r4, r2
   20778:	ldrcc	r4, [sp, #104]	; 0x68
   2077c:	addcc	r7, r4, r0
   20780:	bcc	20540 <__assert_fail@plt+0xf13c>
   20784:	ldr	r7, [sp, #88]	; 0x58
   20788:	b	20540 <__assert_fail@plt+0xf13c>
   2078c:	mov	r5, #0
   20790:	mov	r6, #20
   20794:	str	r5, [sp, #4]
   20798:	mov	r0, r9
   2079c:	str	r6, [sp]
   207a0:	add	r4, sp, #136	; 0x88
   207a4:	str	r4, [sp, #32]
   207a8:	bl	1d67c <__assert_fail@plt+0xc278>
   207ac:	mov	r8, r5
   207b0:	str	r7, [sp, #44]	; 0x2c
   207b4:	mov	r4, r0
   207b8:	b	20808 <__assert_fail@plt+0xf404>
   207bc:	ldr	r2, [sl]
   207c0:	add	r0, sp, #152	; 0x98
   207c4:	mov	r1, #4
   207c8:	movw	r7, #26492	; 0x677c
   207cc:	blx	r2
   207d0:	ldr	ip, [sl]
   207d4:	mov	r1, #2
   207d8:	movt	r7, #9
   207dc:	mov	r5, r0
   207e0:	add	r0, sp, #140	; 0x8c
   207e4:	blx	ip
   207e8:	ldrh	r1, [fp, #-2]
   207ec:	add	r4, r4, r5
   207f0:	ubfx	r1, r1, #0, #15
   207f4:	uxth	r0, r0
   207f8:	cmp	r0, r1
   207fc:	beq	2086c <__assert_fail@plt+0xf468>
   20800:	cmp	r5, #0
   20804:	beq	20848 <__assert_fail@plt+0xf444>
   20808:	mov	r2, #5
   2080c:	movw	r1, #5776	; 0x1690
   20810:	mov	r0, #0
   20814:	movt	r1, #6
   20818:	bl	11170 <dcgettext@plt>
   2081c:	mov	r2, #1
   20820:	mov	r3, #0
   20824:	stm	sp, {r6, r8}
   20828:	strd	r2, [sp, #8]
   2082c:	mov	r1, r9
   20830:	mov	r2, r4
   20834:	str	r0, [sp, #16]
   20838:	ldr	r0, [sp, #32]
   2083c:	bl	1502c <__assert_fail@plt+0x3c28>
   20840:	cmp	r0, #0
   20844:	bne	207bc <__assert_fail@plt+0xf3b8>
   20848:	ldr	r7, [sp, #44]	; 0x2c
   2084c:	b	20568 <__assert_fail@plt+0xf164>
   20850:	mov	r2, #5
   20854:	mov	r0, r4
   20858:	movw	r1, #5416	; 0x1528
   2085c:	movt	r1, #6
   20860:	bl	11170 <dcgettext@plt>
   20864:	bl	4b9ec <warn@@Base>
   20868:	b	1fbac <__assert_fail@plt+0xe7a8>
   2086c:	mov	r6, r7
   20870:	add	r0, sp, #148	; 0x94
   20874:	ldr	r2, [r6]
   20878:	mov	r1, #4
   2087c:	add	ip, sp, #120	; 0x78
   20880:	ldr	r7, [sp, #44]	; 0x2c
   20884:	str	ip, [sp, #60]	; 0x3c
   20888:	blx	r2
   2088c:	mov	r2, #5
   20890:	movw	r1, #5788	; 0x169c
   20894:	movt	r1, #6
   20898:	mov	r8, r0
   2089c:	mov	r0, #0
   208a0:	bl	11170 <dcgettext@plt>
   208a4:	rsb	r2, r5, r8
   208a8:	add	r2, r2, r4
   208ac:	mov	r5, #0
   208b0:	mov	r4, #1
   208b4:	mov	r1, r9
   208b8:	strd	r4, [sp, #8]
   208bc:	mov	r4, #8
   208c0:	mov	r5, #0
   208c4:	strd	r4, [sp]
   208c8:	str	r0, [sp, #16]
   208cc:	ldr	r0, [sp, #60]	; 0x3c
   208d0:	bl	1502c <__assert_fail@plt+0x3c28>
   208d4:	cmp	r0, #0
   208d8:	beq	203bc <__assert_fail@plt+0xefb8>
   208dc:	ldr	r3, [r6]
   208e0:	mov	r1, #4
   208e4:	ldr	r0, [sp, #60]	; 0x3c
   208e8:	blx	r3
   208ec:	ldr	r5, [sp, #92]	; 0x5c
   208f0:	ldrd	r2, [r5, #32]
   208f4:	mov	r5, #0
   208f8:	mov	r4, r0
   208fc:	cmp	r5, r3
   20900:	cmpeq	r4, r2
   20904:	bcs	20930 <__assert_fail@plt+0xf52c>
   20908:	ldr	ip, [sp, #88]	; 0x58
   2090c:	cmp	r7, ip
   20910:	cmpne	r7, #0
   20914:	bne	20954 <__assert_fail@plt+0xf550>
   20918:	ldr	r4, [sp, #104]	; 0x68
   2091c:	add	r7, r4, r0
   20920:	b	20568 <__assert_fail@plt+0xf164>
   20924:	mov	r0, r7
   20928:	bl	1111c <free@plt>
   2092c:	b	20408 <__assert_fail@plt+0xf004>
   20930:	ldr	r7, [sp, #88]	; 0x58
   20934:	b	20568 <__assert_fail@plt+0xf164>
   20938:	mov	ip, #0
   2093c:	str	ip, [sp, #36]	; 0x24
   20940:	b	20430 <__assert_fail@plt+0xf02c>
   20944:	mov	r5, #0
   20948:	str	r5, [sp, #48]	; 0x30
   2094c:	b	204d4 <__assert_fail@plt+0xf0d0>
   20950:	bl	1117c <__stack_chk_fail@plt>
   20954:	movw	r1, #5804	; 0x16ac
   20958:	mov	r0, #0
   2095c:	movt	r1, #6
   20960:	mov	r2, #5
   20964:	bl	11170 <dcgettext@plt>
   20968:	mov	r7, r0
   2096c:	b	20568 <__assert_fail@plt+0xf164>
   20970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20974:	sub	sp, sp, #108	; 0x6c
   20978:	movw	r4, #16680	; 0x4128
   2097c:	movt	r4, #9
   20980:	str	r4, [sp, #40]	; 0x28
   20984:	movw	sl, #16712	; 0x4148
   20988:	ldr	r5, [sp, #40]	; 0x28
   2098c:	movt	sl, #9
   20990:	mov	fp, r0
   20994:	ldr	r4, [sl, #60]	; 0x3c
   20998:	ldr	r3, [r5]
   2099c:	cmp	r4, #0
   209a0:	str	r3, [sp, #100]	; 0x64
   209a4:	bne	209e8 <__assert_fail@plt+0xf5e4>
   209a8:	ldrd	r2, [sl, #24]
   209ac:	orrs	ip, r2, r3
   209b0:	bne	21330 <__assert_fail@plt+0xff2c>
   209b4:	movw	r3, #24896	; 0x6140
   209b8:	movt	r3, #9
   209bc:	ldr	r3, [r3, #-1716]	; 0xfffff94c
   209c0:	cmp	r3, #0
   209c4:	bne	21640 <__assert_fail@plt+0x1023c>
   209c8:	mov	r0, #0
   209cc:	ldr	r4, [sp, #40]	; 0x28
   209d0:	ldr	r2, [sp, #100]	; 0x64
   209d4:	ldr	r3, [r4]
   209d8:	cmp	r2, r3
   209dc:	bne	21948 <__assert_fail@plt+0x10544>
   209e0:	add	sp, sp, #108	; 0x6c
   209e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   209e8:	movw	r9, #24896	; 0x6140
   209ec:	movt	r9, #9
   209f0:	ldr	r3, [r9, #-1716]	; 0xfffff94c
   209f4:	cmp	r3, #0
   209f8:	beq	20a08 <__assert_fail@plt+0xf604>
   209fc:	ldr	r4, [sl, #1868]	; 0x74c
   20a00:	cmp	r4, #0
   20a04:	beq	21350 <__assert_fail@plt+0xff4c>
   20a08:	mov	r0, fp
   20a0c:	bl	1d2ec <__assert_fail@plt+0xbee8>
   20a10:	cmp	r0, #0
   20a14:	beq	209c8 <__assert_fail@plt+0xf5c4>
   20a18:	ldr	r4, [r9, #-1716]	; 0xfffff94c
   20a1c:	movw	r5, #24896	; 0x6140
   20a20:	movt	r5, #9
   20a24:	cmp	r4, #0
   20a28:	bne	212cc <__assert_fail@plt+0xfec8>
   20a2c:	ldr	r0, [sl, #60]	; 0x3c
   20a30:	mov	r7, #0
   20a34:	mov	r1, #1904	; 0x770
   20a38:	mov	r2, #0
   20a3c:	cmp	r0, r7
   20a40:	mov	r3, #0
   20a44:	str	r7, [sl, #1916]	; 0x77c
   20a48:	strd	r2, [sl, r1]
   20a4c:	ldr	r6, [sl, #1896]	; 0x768
   20a50:	beq	20ef8 <__assert_fail@plt+0xfaf4>
   20a54:	movw	r5, #16696	; 0x4138
   20a58:	movw	ip, #58704	; 0xe550
   20a5c:	add	r6, r6, #56	; 0x38
   20a60:	movt	ip, #25716	; 0x6474
   20a64:	movt	r5, #9
   20a68:	str	ip, [sp, #36]	; 0x24
   20a6c:	movw	ip, #58704	; 0xe550
   20a70:	movt	ip, #25700	; 0x6464
   20a74:	str	ip, [sp, #56]	; 0x38
   20a78:	movw	ip, #58705	; 0xe551
   20a7c:	movt	ip, #25716	; 0x6474
   20a80:	str	ip, [sp, #44]	; 0x2c
   20a84:	movw	ip, #58706	; 0xe552
   20a88:	movt	ip, #25716	; 0x6474
   20a8c:	str	ip, [sp, #48]	; 0x30
   20a90:	b	20aec <__assert_fail@plt+0xf6e8>
   20a94:	cmp	r3, #3
   20a98:	bne	20ad4 <__assert_fail@plt+0xf6d0>
   20a9c:	ldr	r1, [r6, #-48]	; 0xffffffd0
   20aa0:	mov	r0, fp
   20aa4:	ldr	r3, [sl, #456]	; 0x1c8
   20aa8:	mov	r2, #0
   20aac:	add	r1, r1, r3
   20ab0:	bl	113bc <fseek@plt>
   20ab4:	subs	r4, r0, #0
   20ab8:	beq	20cac <__assert_fail@plt+0xf8a8>
   20abc:	movw	r1, #7108	; 0x1bc4
   20ac0:	mov	r2, #5
   20ac4:	movt	r1, #6
   20ac8:	mov	r0, #0
   20acc:	bl	11170 <dcgettext@plt>
   20ad0:	bl	4b2b0 <error@@Base>
   20ad4:	ldr	r4, [r9, #-1716]	; 0xfffff94c
   20ad8:	ldr	r3, [sl, #60]	; 0x3c
   20adc:	add	r7, r7, #1
   20ae0:	add	r6, r6, #56	; 0x38
   20ae4:	cmp	r3, r7
   20ae8:	bls	20ef8 <__assert_fail@plt+0xfaf4>
   20aec:	cmp	r4, #0
   20af0:	bne	20c0c <__assert_fail@plt+0xf808>
   20af4:	ldr	r3, [r6, #-56]	; 0xffffffc8
   20af8:	cmp	r3, #2
   20afc:	bne	20a94 <__assert_fail@plt+0xf690>
   20b00:	ldr	r3, [sl, #1916]	; 0x77c
   20b04:	cmp	r3, #0
   20b08:	bne	21260 <__assert_fail@plt+0xfe5c>
   20b0c:	ldr	ip, [r6, #-48]	; 0xffffffd0
   20b10:	mov	r3, #448	; 0x1c0
   20b14:	ldrd	r0, [r6, #-24]	; 0xffffffe8
   20b18:	mov	r4, #1904	; 0x770
   20b1c:	ldrd	r2, [r3, sl]
   20b20:	movw	r8, #16712	; 0x4148
   20b24:	adds	r0, r0, ip
   20b28:	str	ip, [sl, #1916]	; 0x77c
   20b2c:	adc	r1, r1, #0
   20b30:	movt	r8, #9
   20b34:	cmp	r1, r3
   20b38:	cmpeq	r0, r2
   20b3c:	ldrd	r0, [r6, #-24]	; 0xffffffe8
   20b40:	strd	r0, [sl, r4]
   20b44:	bcs	21230 <__assert_fail@plt+0xfe2c>
   20b48:	ldr	r3, [sl, #220]	; 0xdc
   20b4c:	movw	r4, #16712	; 0x4148
   20b50:	movt	r4, #9
   20b54:	cmp	r3, #0
   20b58:	beq	20ad4 <__assert_fail@plt+0xf6d0>
   20b5c:	movw	r0, #6956	; 0x1b2c
   20b60:	movt	r0, #6
   20b64:	bl	13438 <__assert_fail@plt+0x2034>
   20b68:	cmp	r0, #0
   20b6c:	beq	20d3c <__assert_fail@plt+0xf938>
   20b70:	ldrd	r2, [r0, #32]
   20b74:	orrs	r1, r2, r3
   20b78:	beq	20d3c <__assert_fail@plt+0xf938>
   20b7c:	ldr	r1, [r0, #4]
   20b80:	cmp	r1, #8
   20b84:	beq	21668 <__assert_fail@plt+0x10264>
   20b88:	ldr	ip, [r0, #24]
   20b8c:	mov	r8, #1904	; 0x770
   20b90:	ldrd	r0, [r6, #-48]	; 0xffffffd0
   20b94:	strd	r2, [r4, r8]
   20b98:	str	ip, [r4, #1916]	; 0x77c
   20b9c:	strd	r0, [sp, #24]
   20ba0:	mov	r0, ip
   20ba4:	ldrd	r2, [sp, #24]
   20ba8:	mov	r1, #0
   20bac:	strd	r0, [sp, #8]
   20bb0:	cmp	r1, r3
   20bb4:	cmpeq	r0, r2
   20bb8:	bcc	213e8 <__assert_fail@plt+0xffe4>
   20bbc:	ldrd	r0, [r6, #-24]	; 0xffffffe8
   20bc0:	adds	r0, r0, r2
   20bc4:	adc	r1, r1, r3
   20bc8:	ldrd	r2, [sp, #8]
   20bcc:	cmp	r3, r1
   20bd0:	cmpeq	r2, r0
   20bd4:	bhi	213e8 <__assert_fail@plt+0xffe4>
   20bd8:	ldrd	r0, [sp, #8]
   20bdc:	ldrd	r2, [sp, #24]
   20be0:	cmp	r1, r3
   20be4:	cmpeq	r0, r2
   20be8:	bls	20ad4 <__assert_fail@plt+0xf6d0>
   20bec:	mov	r2, #5
   20bf0:	movw	r1, #7036	; 0x1b7c
   20bf4:	mov	r0, #0
   20bf8:	movt	r1, #6
   20bfc:	bl	11170 <dcgettext@plt>
   20c00:	bl	4b9ec <warn@@Base>
   20c04:	ldr	r4, [r9, #-1716]	; 0xfffff94c
   20c08:	b	20ad8 <__assert_fail@plt+0xf6d4>
   20c0c:	ldr	r4, [r6, #-56]	; 0xffffffc8
   20c10:	cmp	r4, #5
   20c14:	beq	21698 <__assert_fail@plt+0x10294>
   20c18:	bhi	20d70 <__assert_fail@plt+0xf96c>
   20c1c:	cmp	r4, #2
   20c20:	beq	2168c <__assert_fail@plt+0x10288>
   20c24:	bls	212a8 <__assert_fail@plt+0xfea4>
   20c28:	cmp	r4, #3
   20c2c:	movweq	r2, #6028	; 0x178c
   20c30:	movteq	r2, #6
   20c34:	beq	20da0 <__assert_fail@plt+0xf99c>
   20c38:	cmp	r4, #4
   20c3c:	movweq	r2, #63760	; 0xf910
   20c40:	movteq	r2, #5
   20c44:	beq	20da0 <__assert_fail@plt+0xf99c>
   20c48:	add	r8, r4, #-1879048192	; 0x90000000
   20c4c:	cmn	r8, #-268435455	; 0xf0000001
   20c50:	bhi	216f4 <__assert_fail@plt+0x102f0>
   20c54:	ldrh	r3, [sl, #50]	; 0x32
   20c58:	cmp	r3, #40	; 0x28
   20c5c:	beq	218f0 <__assert_fail@plt+0x104ec>
   20c60:	bls	21834 <__assert_fail@plt+0x10430>
   20c64:	cmp	r3, #140	; 0x8c
   20c68:	beq	21904 <__assert_fail@plt+0x10500>
   20c6c:	bls	218ac <__assert_fail@plt+0x104a8>
   20c70:	cmp	r3, #183	; 0xb7
   20c74:	bne	218d0 <__assert_fail@plt+0x104cc>
   20c78:	cmp	r4, #1879048192	; 0x70000000
   20c7c:	movweq	r2, #6084	; 0x17c4
   20c80:	movteq	r2, #6
   20c84:	beq	20da0 <__assert_fail@plt+0xf99c>
   20c88:	mov	r2, #32
   20c8c:	str	r8, [sp]
   20c90:	movw	r3, #6712	; 0x1a38
   20c94:	ldr	r0, [pc, #3376]	; 219cc <__assert_fail@plt+0x105c8>
   20c98:	movt	r3, #6
   20c9c:	mov	r1, #1
   20ca0:	bl	112cc <__sprintf_chk@plt>
   20ca4:	ldr	r2, [pc, #3360]	; 219cc <__assert_fail@plt+0x105c8>
   20ca8:	b	20da0 <__assert_fail@plt+0xf99c>
   20cac:	mov	r1, #32
   20cb0:	movw	r2, #7152	; 0x1bf0
   20cb4:	mov	r3, r1
   20cb8:	movt	r2, #6
   20cbc:	add	r0, sp, #68	; 0x44
   20cc0:	str	r2, [sp]
   20cc4:	movw	r2, #4095	; 0xfff
   20cc8:	str	r2, [sp, #4]
   20ccc:	mov	r2, #1
   20cd0:	bl	113f8 <__snprintf_chk@plt>
   20cd4:	cmp	r0, #31
   20cd8:	bhi	215ac <__assert_fail@plt+0x101a8>
   20cdc:	add	r1, sp, #68	; 0x44
   20ce0:	mov	r0, fp
   20ce4:	ldr	r2, [pc, #3300]	; 219d0 <__assert_fail@plt+0x105cc>
   20ce8:	mov	r8, #0
   20cec:	strb	r8, [sl, #2196]	; 0x894
   20cf0:	bl	11314 <fscanf@plt>
   20cf4:	cmp	r0, r8
   20cf8:	ble	216a4 <__assert_fail@plt+0x102a0>
   20cfc:	ldr	r3, [r9, #-1716]	; 0xfffff94c
   20d00:	movw	r8, #24896	; 0x6140
   20d04:	movt	r8, #9
   20d08:	cmp	r3, #0
   20d0c:	beq	20ad8 <__assert_fail@plt+0xf6d4>
   20d10:	mov	r2, #5
   20d14:	movw	r1, #7284	; 0x1c74
   20d18:	mov	r0, #0
   20d1c:	movt	r1, #6
   20d20:	bl	11170 <dcgettext@plt>
   20d24:	ldr	r2, [pc, #3236]	; 219d0 <__assert_fail@plt+0x105cc>
   20d28:	mov	r1, r0
   20d2c:	mov	r0, #1
   20d30:	bl	1132c <__printf_chk@plt>
   20d34:	ldr	r4, [r8, #-1716]	; 0xfffff94c
   20d38:	b	20ad8 <__assert_fail@plt+0xf6d4>
   20d3c:	ldrh	r2, [sl, #50]	; 0x32
   20d40:	movw	r3, #16712	; 0x4148
   20d44:	movt	r3, #9
   20d48:	cmp	r2, #50	; 0x32
   20d4c:	beq	21630 <__assert_fail@plt+0x1022c>
   20d50:	mov	r2, #5
   20d54:	movw	r1, #7400	; 0x1ce8
   20d58:	mov	r0, #0
   20d5c:	movt	r1, #6
   20d60:	bl	11170 <dcgettext@plt>
   20d64:	bl	4b2b0 <error@@Base>
   20d68:	ldr	r4, [r9, #-1716]	; 0xfffff94c
   20d6c:	b	20ad8 <__assert_fail@plt+0xf6d4>
   20d70:	ldr	ip, [sp, #36]	; 0x24
   20d74:	cmp	r4, ip
   20d78:	beq	21680 <__assert_fail@plt+0x1027c>
   20d7c:	bhi	2127c <__assert_fail@plt+0xfe78>
   20d80:	cmp	r4, #6
   20d84:	movweq	r2, #6036	; 0x1794
   20d88:	movteq	r2, #6
   20d8c:	beq	20da0 <__assert_fail@plt+0xf99c>
   20d90:	cmp	r4, #7
   20d94:	movweq	r2, #50656	; 0xc5e0
   20d98:	movteq	r2, #6
   20d9c:	bne	20c48 <__assert_fail@plt+0xf844>
   20da0:	movw	r1, #6736	; 0x1a50
   20da4:	mov	r0, #1
   20da8:	movt	r1, #6
   20dac:	bl	1132c <__printf_chk@plt>
   20db0:	ldr	r3, [sl, #460]	; 0x1cc
   20db4:	cmp	r3, #0
   20db8:	bne	2143c <__assert_fail@plt+0x10038>
   20dbc:	movw	r3, #26444	; 0x674c
   20dc0:	movt	r3, #9
   20dc4:	ldrd	r0, [r6, #-48]	; 0xffffffd0
   20dc8:	ldr	r4, [r3]
   20dcc:	cmp	r4, #0
   20dd0:	beq	214f4 <__assert_fail@plt+0x100f0>
   20dd4:	mov	r2, r0
   20dd8:	mov	r3, #0
   20ddc:	cmp	r1, r3
   20de0:	cmpeq	r0, r2
   20de4:	beq	21610 <__assert_fail@plt+0x1020c>
   20de8:	mov	r2, #5
   20dec:	movw	r4, #16696	; 0x4138
   20df0:	bl	16c84 <__assert_fail@plt+0x5880>
   20df4:	mov	r0, #32
   20df8:	ldr	r1, [r5]
   20dfc:	movt	r4, #9
   20e00:	bl	111ac <_IO_putc@plt>
   20e04:	mov	r2, #5
   20e08:	ldrd	r0, [r6, #-40]	; 0xffffffd8
   20e0c:	bl	16c84 <__assert_fail@plt+0x5880>
   20e10:	ldr	r1, [r4]
   20e14:	mov	r0, #32
   20e18:	bl	111ac <_IO_putc@plt>
   20e1c:	mov	r2, #5
   20e20:	ldrd	r0, [r6, #-32]	; 0xffffffe0
   20e24:	bl	16c84 <__assert_fail@plt+0x5880>
   20e28:	ldr	r1, [r4]
   20e2c:	mov	r0, #32
   20e30:	bl	111ac <_IO_putc@plt>
   20e34:	ldrd	r0, [r6, #-24]	; 0xffffffe8
   20e38:	mov	r3, #0
   20e3c:	mov	r2, r0
   20e40:	cmp	r1, r3
   20e44:	cmpeq	r0, r2
   20e48:	beq	215f8 <__assert_fail@plt+0x101f4>
   20e4c:	mov	r2, #5
   20e50:	bl	16c84 <__assert_fail@plt+0x5880>
   20e54:	mov	r0, #32
   20e58:	ldr	r1, [r5]
   20e5c:	bl	111ac <_IO_putc@plt>
   20e60:	ldrd	r0, [r6, #-16]
   20e64:	mov	r3, #0
   20e68:	mov	r2, r0
   20e6c:	cmp	r1, r3
   20e70:	cmpeq	r0, r2
   20e74:	beq	215e0 <__assert_fail@plt+0x101dc>
   20e78:	mov	r2, #5
   20e7c:	bl	16c84 <__assert_fail@plt+0x5880>
   20e80:	ldr	ip, [r6, #-52]	; 0xffffffcc
   20e84:	movw	r1, #6812	; 0x1a9c
   20e88:	mov	r0, #1
   20e8c:	movt	r1, #6
   20e90:	tst	ip, #4
   20e94:	moveq	r2, #32
   20e98:	movne	r2, #82	; 0x52
   20e9c:	tst	ip, #2
   20ea0:	moveq	r3, #32
   20ea4:	movne	r3, #87	; 0x57
   20ea8:	tst	ip, #1
   20eac:	moveq	ip, #32
   20eb0:	movne	ip, #69	; 0x45
   20eb4:	str	ip, [sp]
   20eb8:	bl	1132c <__printf_chk@plt>
   20ebc:	ldrd	r0, [r6, #-8]
   20ec0:	mov	r3, #0
   20ec4:	mov	r2, r0
   20ec8:	cmp	r1, r3
   20ecc:	cmpeq	r0, r2
   20ed0:	beq	215c8 <__assert_fail@plt+0x101c4>
   20ed4:	mov	r2, #4
   20ed8:	bl	16c84 <__assert_fail@plt+0x5880>
   20edc:	ldr	r3, [r9, #-1716]	; 0xfffff94c
   20ee0:	cmp	r3, #0
   20ee4:	beq	20af4 <__assert_fail@plt+0xf6f0>
   20ee8:	ldr	r1, [r5]
   20eec:	mov	r0, #10
   20ef0:	bl	111ac <_IO_putc@plt>
   20ef4:	b	20af4 <__assert_fail@plt+0xf6f0>
   20ef8:	cmp	r4, #0
   20efc:	beq	21228 <__assert_fail@plt+0xfe24>
   20f00:	ldr	r3, [sl, #220]	; 0xdc
   20f04:	movw	r4, #16712	; 0x4148
   20f08:	movt	r4, #9
   20f0c:	cmp	r3, #0
   20f10:	beq	21228 <__assert_fail@plt+0xfe24>
   20f14:	ldr	r3, [r4, #212]	; 0xd4
   20f18:	cmp	r3, #0
   20f1c:	beq	21228 <__assert_fail@plt+0xfe24>
   20f20:	mov	r2, #5
   20f24:	movw	r1, #7328	; 0x1ca0
   20f28:	mov	r0, #0
   20f2c:	movt	r1, #6
   20f30:	bl	11170 <dcgettext@plt>
   20f34:	mov	r1, r0
   20f38:	mov	r0, #1
   20f3c:	bl	1132c <__printf_chk@plt>
   20f40:	mov	r2, #5
   20f44:	movw	r1, #7360	; 0x1cc0
   20f48:	mov	r0, #0
   20f4c:	movt	r1, #6
   20f50:	bl	11170 <dcgettext@plt>
   20f54:	mov	r1, r0
   20f58:	mov	r0, #1
   20f5c:	bl	1132c <__printf_chk@plt>
   20f60:	ldr	r3, [r4, #60]	; 0x3c
   20f64:	cmp	r3, #0
   20f68:	beq	21228 <__assert_fail@plt+0xfe24>
   20f6c:	mov	fp, sl
   20f70:	mov	r3, #0
   20f74:	movw	r4, #16696	; 0x4138
   20f78:	movw	r5, #58706	; 0xe552
   20f7c:	movt	r4, #9
   20f80:	movt	r5, #25716	; 0x6474
   20f84:	str	r3, [sp, #44]	; 0x2c
   20f88:	str	r4, [sp, #56]	; 0x38
   20f8c:	str	r5, [sp, #60]	; 0x3c
   20f90:	str	r3, [sp, #36]	; 0x24
   20f94:	ldr	r3, [fp, #1896]	; 0x768
   20f98:	movw	r1, #7384	; 0x1cd8
   20f9c:	ldr	ip, [sp, #44]	; 0x2c
   20fa0:	mov	r0, #1
   20fa4:	movt	r1, #6
   20fa8:	ldr	r2, [sp, #36]	; 0x24
   20fac:	add	r7, r3, ip
   20fb0:	ldr	r4, [fp, #220]	; 0xdc
   20fb4:	bl	1132c <__printf_chk@plt>
   20fb8:	ldr	r3, [fp, #68]	; 0x44
   20fbc:	cmp	r3, #1
   20fc0:	bls	211f4 <__assert_fail@plt+0xfdf0>
   20fc4:	ldr	r9, [sp, #60]	; 0x3c
   20fc8:	add	r6, r4, #144	; 0x90
   20fcc:	mov	sl, #1
   20fd0:	ldrd	r2, [r6, #-64]	; 0xffffffc0
   20fd4:	mov	r4, #1024	; 0x400
   20fd8:	mov	r5, #0
   20fdc:	sub	r8, r6, #72	; 0x48
   20fe0:	and	r4, r4, r2
   20fe4:	and	r5, r5, r3
   20fe8:	orrs	ip, r4, r5
   20fec:	bne	21408 <__assert_fail@plt+0x10004>
   20ff0:	ldr	ip, [r7]
   20ff4:	sub	r1, ip, #6
   20ff8:	cmp	r1, #1
   20ffc:	bls	211e0 <__assert_fail@plt+0xfddc>
   21000:	mov	r0, #2
   21004:	mov	r1, #0
   21008:	and	r0, r0, r2
   2100c:	and	r1, r1, r3
   21010:	strd	r0, [sp, #8]
   21014:	orrs	r1, r0, r1
   21018:	bne	21038 <__assert_fail@plt+0xfc34>
   2101c:	movw	r3, #6832	; 0x1ab0
   21020:	movt	r3, #39819	; 0x9b8b
   21024:	add	r3, ip, r3
   21028:	sub	r2, ip, #1
   2102c:	cmp	r3, #2
   21030:	cmphi	r2, #1
   21034:	bls	211e0 <__assert_fail@plt+0xfddc>
   21038:	ldr	lr, [r6, #-68]	; 0xffffffbc
   2103c:	cmp	lr, #8
   21040:	beq	210ac <__assert_fail@plt+0xfca8>
   21044:	ldrd	r2, [r6, #-48]	; 0xffffffd0
   21048:	ldrd	r0, [r7, #8]
   2104c:	cmp	r3, r1
   21050:	cmpeq	r2, r0
   21054:	strd	r2, [sp, #24]
   21058:	strd	r0, [sp, #16]
   2105c:	bcc	211e0 <__assert_fail@plt+0xfddc>
   21060:	ldrd	r2, [r7, #32]
   21064:	strd	r2, [sp, #48]	; 0x30
   21068:	ldrd	r2, [sp, #24]
   2106c:	subs	r2, r2, r0
   21070:	sbc	r3, r3, r1
   21074:	ldrd	r0, [sp, #48]	; 0x30
   21078:	strd	r2, [sp, #16]
   2107c:	subs	r0, r0, #1
   21080:	sbc	r1, r1, #0
   21084:	cmp	r3, r1
   21088:	cmpeq	r2, r0
   2108c:	bhi	211e0 <__assert_fail@plt+0xfddc>
   21090:	ldrd	r0, [r6, #-40]	; 0xffffffd8
   21094:	adds	r2, r2, r0
   21098:	adc	r3, r3, r1
   2109c:	ldrd	r0, [sp, #48]	; 0x30
   210a0:	cmp	r1, r3
   210a4:	cmpeq	r0, r2
   210a8:	bcc	211e0 <__assert_fail@plt+0xfddc>
   210ac:	ldrd	r2, [sp, #8]
   210b0:	orrs	r3, r2, r3
   210b4:	beq	21134 <__assert_fail@plt+0xfd30>
   210b8:	ldrd	r0, [r6, #-56]	; 0xffffffc8
   210bc:	ldrd	r2, [r7, #16]
   210c0:	cmp	r1, r3
   210c4:	cmpeq	r0, r2
   210c8:	strd	r0, [sp, #24]
   210cc:	strd	r2, [sp, #16]
   210d0:	bcc	211e0 <__assert_fail@plt+0xfddc>
   210d4:	ldrd	r0, [r7, #40]	; 0x28
   210d8:	strd	r0, [sp, #48]	; 0x30
   210dc:	ldrd	r0, [sp, #24]
   210e0:	subs	r0, r0, r2
   210e4:	sbc	r1, r1, r3
   210e8:	ldrd	r2, [sp, #48]	; 0x30
   210ec:	strd	r0, [sp, #24]
   210f0:	subs	r2, r2, #1
   210f4:	sbc	r3, r3, #0
   210f8:	cmp	r1, r3
   210fc:	cmpeq	r0, r2
   21100:	bhi	211e0 <__assert_fail@plt+0xfddc>
   21104:	orrs	r3, r4, r5
   21108:	beq	21114 <__assert_fail@plt+0xfd10>
   2110c:	cmp	lr, #8
   21110:	beq	21820 <__assert_fail@plt+0x1041c>
   21114:	ldrd	r2, [r6, #-40]	; 0xffffffd8
   21118:	ldrd	r4, [sp, #24]
   2111c:	ldrd	r0, [sp, #48]	; 0x30
   21120:	adds	r2, r2, r4
   21124:	adc	r3, r3, r5
   21128:	cmp	r1, r3
   2112c:	cmpeq	r0, r2
   21130:	bcc	211e0 <__assert_fail@plt+0xfddc>
   21134:	cmp	ip, #2
   21138:	bne	211c4 <__assert_fail@plt+0xfdc0>
   2113c:	ldrd	r2, [r6, #-40]	; 0xffffffd8
   21140:	orrs	r1, r2, r3
   21144:	bne	211c4 <__assert_fail@plt+0xfdc0>
   21148:	ldrd	r4, [r7, #40]	; 0x28
   2114c:	orrs	r2, r4, r5
   21150:	beq	211c4 <__assert_fail@plt+0xfdc0>
   21154:	cmp	lr, #8
   21158:	beq	21190 <__assert_fail@plt+0xfd8c>
   2115c:	ldrd	r0, [r6, #-48]	; 0xffffffd0
   21160:	ldrd	r2, [r7, #8]
   21164:	cmp	r1, r3
   21168:	cmpeq	r0, r2
   2116c:	strd	r0, [sp, #24]
   21170:	strd	r2, [sp, #48]	; 0x30
   21174:	bls	211e0 <__assert_fail@plt+0xfddc>
   21178:	subs	r0, r0, r2
   2117c:	sbc	r1, r1, r3
   21180:	ldrd	r2, [r7, #32]
   21184:	cmp	r1, r3
   21188:	cmpeq	r0, r2
   2118c:	bcs	211e0 <__assert_fail@plt+0xfddc>
   21190:	ldrd	r0, [sp, #8]
   21194:	orrs	r1, r0, r1
   21198:	beq	211c4 <__assert_fail@plt+0xfdc0>
   2119c:	ldrd	r0, [r6, #-56]	; 0xffffffc8
   211a0:	ldrd	r2, [r7, #16]
   211a4:	cmp	r1, r3
   211a8:	cmpeq	r0, r2
   211ac:	bls	211e0 <__assert_fail@plt+0xfddc>
   211b0:	subs	r2, r0, r2
   211b4:	sbc	r3, r1, r3
   211b8:	cmp	r5, r3
   211bc:	cmpeq	r4, r2
   211c0:	bls	211e0 <__assert_fail@plt+0xfddc>
   211c4:	mov	r0, r8
   211c8:	bl	132f8 <__assert_fail@plt+0x1ef4>
   211cc:	movw	r1, #31936	; 0x7cc0
   211d0:	movt	r1, #7
   211d4:	mov	r2, r0
   211d8:	mov	r0, #1
   211dc:	bl	1132c <__printf_chk@plt>
   211e0:	ldr	r3, [fp, #68]	; 0x44
   211e4:	add	sl, sl, #1
   211e8:	add	r6, r6, #72	; 0x48
   211ec:	cmp	r3, sl
   211f0:	bhi	20fd0 <__assert_fail@plt+0xfbcc>
   211f4:	ldr	r3, [sp, #56]	; 0x38
   211f8:	mov	r0, #10
   211fc:	ldr	r1, [r3]
   21200:	bl	111ac <_IO_putc@plt>
   21204:	ldr	r4, [sp, #36]	; 0x24
   21208:	ldr	r3, [fp, #60]	; 0x3c
   2120c:	add	r4, r4, #1
   21210:	ldr	r5, [sp, #44]	; 0x2c
   21214:	cmp	r3, r4
   21218:	str	r4, [sp, #36]	; 0x24
   2121c:	add	r5, r5, #56	; 0x38
   21220:	str	r5, [sp, #44]	; 0x2c
   21224:	bhi	20f94 <__assert_fail@plt+0xfb90>
   21228:	mov	r0, #1
   2122c:	b	209cc <__assert_fail@plt+0xf5c8>
   21230:	mov	r2, #5
   21234:	movw	r1, #6892	; 0x1aec
   21238:	mov	r0, #0
   2123c:	movt	r1, #6
   21240:	bl	11170 <dcgettext@plt>
   21244:	bl	4b2b0 <error@@Base>
   21248:	mov	r2, #0
   2124c:	mov	r3, #0
   21250:	mov	r1, #0
   21254:	strd	r2, [r8, r4]
   21258:	str	r1, [r8, #1916]	; 0x77c
   2125c:	b	20b48 <__assert_fail@plt+0xf744>
   21260:	mov	r2, #5
   21264:	movw	r1, #6860	; 0x1acc
   21268:	mov	r0, #0
   2126c:	movt	r1, #6
   21270:	bl	11170 <dcgettext@plt>
   21274:	bl	4b2b0 <error@@Base>
   21278:	b	20b0c <__assert_fail@plt+0xf708>
   2127c:	ldr	ip, [sp, #44]	; 0x2c
   21280:	cmp	r4, ip
   21284:	movweq	r2, #6060	; 0x17ac
   21288:	movteq	r2, #6
   2128c:	beq	20da0 <__assert_fail@plt+0xf99c>
   21290:	ldr	ip, [sp, #48]	; 0x30
   21294:	cmp	r4, ip
   21298:	movweq	r2, #6072	; 0x17b8
   2129c:	movteq	r2, #6
   212a0:	beq	20da0 <__assert_fail@plt+0xf99c>
   212a4:	b	20c48 <__assert_fail@plt+0xf844>
   212a8:	cmp	r4, #0
   212ac:	movweq	r2, #55344	; 0xd830
   212b0:	movteq	r2, #5
   212b4:	beq	20da0 <__assert_fail@plt+0xf99c>
   212b8:	cmp	r4, #1
   212bc:	movweq	r2, #41700	; 0xa2e4
   212c0:	movteq	r2, #6
   212c4:	beq	20da0 <__assert_fail@plt+0xf99c>
   212c8:	b	20c48 <__assert_fail@plt+0xf844>
   212cc:	mov	r2, #5
   212d0:	movw	r1, #6380	; 0x18ec
   212d4:	mov	r0, #0
   212d8:	movt	r1, #6
   212dc:	bl	11170 <dcgettext@plt>
   212e0:	mov	r1, r0
   212e4:	mov	r0, #1
   212e8:	bl	1132c <__printf_chk@plt>
   212ec:	ldr	r0, [sl, #460]	; 0x1cc
   212f0:	cmp	r0, #0
   212f4:	bne	2180c <__assert_fail@plt+0x10408>
   212f8:	movw	r3, #26444	; 0x674c
   212fc:	movt	r3, #9
   21300:	ldr	r4, [r3]
   21304:	cmp	r4, #0
   21308:	beq	216c0 <__assert_fail@plt+0x102bc>
   2130c:	movw	r1, #6476	; 0x194c
   21310:	movt	r1, #6
   21314:	mov	r2, #5
   21318:	bl	11170 <dcgettext@plt>
   2131c:	mov	r1, r0
   21320:	mov	r0, #1
   21324:	bl	1132c <__printf_chk@plt>
   21328:	ldr	r4, [r5, #-1716]	; 0xfffff94c
   2132c:	b	20a2c <__assert_fail@plt+0xf628>
   21330:	mov	r2, #5
   21334:	movw	r1, #6144	; 0x1800
   21338:	mov	r0, r4
   2133c:	movt	r1, #6
   21340:	bl	11170 <dcgettext@plt>
   21344:	bl	4b9ec <warn@@Base>
   21348:	mov	r0, r4
   2134c:	b	209cc <__assert_fail@plt+0xf5c8>
   21350:	mov	r2, #5
   21354:	mov	r0, r4
   21358:	movw	r1, #6288	; 0x1890
   2135c:	movt	r1, #6
   21360:	bl	11170 <dcgettext@plt>
   21364:	mov	r5, r0
   21368:	ldrh	r0, [sl, #48]	; 0x30
   2136c:	bl	135cc <__assert_fail@plt+0x21c8>
   21370:	mov	r1, r5
   21374:	mov	r2, r0
   21378:	mov	r0, #1
   2137c:	bl	1132c <__printf_chk@plt>
   21380:	mov	r2, #5
   21384:	mov	r0, r4
   21388:	movw	r1, #6312	; 0x18a8
   2138c:	movt	r1, #6
   21390:	bl	11170 <dcgettext@plt>
   21394:	mov	r1, r0
   21398:	mov	r0, #1
   2139c:	bl	1132c <__printf_chk@plt>
   213a0:	ldrd	r0, [sl, #16]
   213a4:	mov	r2, #4
   213a8:	bl	16c84 <__assert_fail@plt+0x5880>
   213ac:	mov	r0, r4
   213b0:	mov	r2, #5
   213b4:	movw	r1, #6328	; 0x18b8
   213b8:	movt	r1, #6
   213bc:	bl	11170 <dcgettext@plt>
   213c0:	ldr	r2, [sl, #60]	; 0x3c
   213c4:	mov	r1, r0
   213c8:	mov	r0, #1
   213cc:	bl	1132c <__printf_chk@plt>
   213d0:	ldrd	r0, [sl, #24]
   213d4:	mov	r2, #1
   213d8:	bl	16c84 <__assert_fail@plt+0x5880>
   213dc:	mov	r0, #10
   213e0:	bl	112fc <putchar@plt>
   213e4:	b	20a08 <__assert_fail@plt+0xf604>
   213e8:	mov	r2, #5
   213ec:	movw	r1, #6968	; 0x1b38
   213f0:	mov	r0, #0
   213f4:	movt	r1, #6
   213f8:	bl	11170 <dcgettext@plt>
   213fc:	bl	4b9ec <warn@@Base>
   21400:	ldr	r4, [r9, #-1716]	; 0xfffff94c
   21404:	b	20ad8 <__assert_fail@plt+0xf6d4>
   21408:	ldr	r1, [r6, #-68]	; 0xffffffbc
   2140c:	ldr	ip, [r7]
   21410:	cmp	r1, #8
   21414:	beq	21430 <__assert_fail@plt+0x1002c>
   21418:	cmp	ip, r9
   2141c:	cmpne	ip, #7
   21420:	beq	21000 <__assert_fail@plt+0xfbfc>
   21424:	cmp	ip, #1
   21428:	bne	211e0 <__assert_fail@plt+0xfddc>
   2142c:	b	21000 <__assert_fail@plt+0xfbfc>
   21430:	cmp	ip, #7
   21434:	bne	211e0 <__assert_fail@plt+0xfddc>
   21438:	b	21000 <__assert_fail@plt+0xfbfc>
   2143c:	ldr	r2, [r6, #-48]	; 0xffffffd0
   21440:	movw	r1, #6748	; 0x1a5c
   21444:	mov	r0, #1
   21448:	movt	r1, #6
   2144c:	bl	1132c <__printf_chk@plt>
   21450:	ldr	r2, [r6, #-40]	; 0xffffffd8
   21454:	movw	r1, #6760	; 0x1a68
   21458:	mov	r0, #1
   2145c:	movt	r1, #6
   21460:	bl	1132c <__printf_chk@plt>
   21464:	ldr	r2, [r6, #-32]	; 0xffffffe0
   21468:	movw	r1, #6760	; 0x1a68
   2146c:	mov	r0, #1
   21470:	movt	r1, #6
   21474:	bl	1132c <__printf_chk@plt>
   21478:	ldr	r2, [r6, #-24]	; 0xffffffe8
   2147c:	movw	r1, #6772	; 0x1a74
   21480:	mov	r0, #1
   21484:	movt	r1, #6
   21488:	bl	1132c <__printf_chk@plt>
   2148c:	ldr	r2, [r6, #-16]
   21490:	movw	r1, #6772	; 0x1a74
   21494:	mov	r0, #1
   21498:	movt	r1, #6
   2149c:	bl	1132c <__printf_chk@plt>
   214a0:	ldr	ip, [r6, #-52]	; 0xffffffcc
   214a4:	movw	r1, #6784	; 0x1a80
   214a8:	mov	r0, #1
   214ac:	tst	ip, #4
   214b0:	movt	r1, #6
   214b4:	moveq	r2, #32
   214b8:	movne	r2, #82	; 0x52
   214bc:	tst	ip, #2
   214c0:	moveq	r3, #32
   214c4:	movne	r3, #87	; 0x57
   214c8:	tst	ip, #1
   214cc:	moveq	ip, #32
   214d0:	movne	ip, #69	; 0x45
   214d4:	str	ip, [sp]
   214d8:	bl	1132c <__printf_chk@plt>
   214dc:	movw	r1, #6792	; 0x1a88
   214e0:	ldr	r2, [r6, #-8]
   214e4:	movt	r1, #6
   214e8:	mov	r0, #1
   214ec:	bl	1132c <__printf_chk@plt>
   214f0:	b	20edc <__assert_fail@plt+0xfad8>
   214f4:	mov	r2, #5
   214f8:	bl	16c84 <__assert_fail@plt+0x5880>
   214fc:	ldr	r1, [r5]
   21500:	mov	r0, #32
   21504:	bl	111ac <_IO_putc@plt>
   21508:	ldrd	r0, [r6, #-40]	; 0xffffffd8
   2150c:	mov	r2, #5
   21510:	bl	16c84 <__assert_fail@plt+0x5880>
   21514:	ldr	r1, [r5]
   21518:	mov	r0, #32
   2151c:	bl	111ac <_IO_putc@plt>
   21520:	ldrd	r0, [r6, #-32]	; 0xffffffe0
   21524:	mov	r2, #5
   21528:	bl	16c84 <__assert_fail@plt+0x5880>
   2152c:	movw	r1, #6824	; 0x1aa8
   21530:	mov	r0, #1
   21534:	movt	r1, #6
   21538:	bl	1132c <__printf_chk@plt>
   2153c:	ldrd	r0, [r6, #-24]	; 0xffffffe8
   21540:	mov	r2, #5
   21544:	bl	16c84 <__assert_fail@plt+0x5880>
   21548:	ldr	r1, [r5]
   2154c:	mov	r0, #32
   21550:	bl	111ac <_IO_putc@plt>
   21554:	ldrd	r0, [r6, #-16]
   21558:	mov	r2, #5
   2155c:	bl	16c84 <__assert_fail@plt+0x5880>
   21560:	ldr	ip, [r6, #-52]	; 0xffffffcc
   21564:	movw	r1, #6844	; 0x1abc
   21568:	mov	r0, #1
   2156c:	tst	ip, #4
   21570:	movt	r1, #6
   21574:	moveq	r2, #32
   21578:	movne	r2, #82	; 0x52
   2157c:	tst	ip, #2
   21580:	moveq	r3, #32
   21584:	movne	r3, #87	; 0x57
   21588:	tst	ip, #1
   2158c:	moveq	ip, #32
   21590:	movne	ip, #69	; 0x45
   21594:	str	ip, [sp]
   21598:	bl	1132c <__printf_chk@plt>
   2159c:	mov	r2, r4
   215a0:	ldrd	r0, [r6, #-8]
   215a4:	bl	16c84 <__assert_fail@plt+0x5880>
   215a8:	b	20edc <__assert_fail@plt+0xfad8>
   215ac:	mov	r2, #5
   215b0:	movw	r1, #7160	; 0x1bf8
   215b4:	mov	r0, r4
   215b8:	movt	r1, #6
   215bc:	bl	11170 <dcgettext@plt>
   215c0:	bl	4b2b0 <error@@Base>
   215c4:	b	20cdc <__assert_fail@plt+0xf8d8>
   215c8:	mov	r2, r0
   215cc:	movw	r1, #6792	; 0x1a88
   215d0:	mov	r0, #1
   215d4:	movt	r1, #6
   215d8:	bl	1132c <__printf_chk@plt>
   215dc:	b	20edc <__assert_fail@plt+0xfad8>
   215e0:	mov	r2, r0
   215e4:	movw	r1, #6800	; 0x1a90
   215e8:	mov	r0, #1
   215ec:	movt	r1, #6
   215f0:	bl	1132c <__printf_chk@plt>
   215f4:	b	20e80 <__assert_fail@plt+0xfa7c>
   215f8:	mov	r2, r0
   215fc:	movw	r1, #6748	; 0x1a5c
   21600:	mov	r0, #1
   21604:	movt	r1, #6
   21608:	bl	1132c <__printf_chk@plt>
   2160c:	b	20e60 <__assert_fail@plt+0xfa5c>
   21610:	mov	r2, r0
   21614:	movw	r1, #6748	; 0x1a5c
   21618:	mov	r0, #1
   2161c:	movt	r1, #6
   21620:	movw	r4, #16696	; 0x4138
   21624:	bl	1132c <__printf_chk@plt>
   21628:	movt	r4, #9
   2162c:	b	20e04 <__assert_fail@plt+0xfa00>
   21630:	ldrb	r3, [r3, #7]
   21634:	cmp	r3, #13
   21638:	bne	20d50 <__assert_fail@plt+0xf94c>
   2163c:	b	20ad4 <__assert_fail@plt+0xf6d0>
   21640:	mov	r2, #5
   21644:	movw	r1, #6240	; 0x1860
   21648:	mov	r0, r4
   2164c:	movt	r1, #6
   21650:	bl	11170 <dcgettext@plt>
   21654:	mov	r1, r0
   21658:	mov	r0, #1
   2165c:	bl	1132c <__printf_chk@plt>
   21660:	mov	r0, r4
   21664:	b	209cc <__assert_fail@plt+0xf5c8>
   21668:	mov	r1, #1904	; 0x770
   2166c:	mov	r2, #0
   21670:	mov	r3, #0
   21674:	strd	r2, [r4, r1]
   21678:	ldr	r4, [r9, #-1716]	; 0xfffff94c
   2167c:	b	20ad8 <__assert_fail@plt+0xf6d4>
   21680:	movw	r2, #6044	; 0x179c
   21684:	movt	r2, #6
   21688:	b	20da0 <__assert_fail@plt+0xf99c>
   2168c:	movw	r2, #63752	; 0xf908
   21690:	movt	r2, #5
   21694:	b	20da0 <__assert_fail@plt+0xf99c>
   21698:	movw	r2, #63776	; 0xf920
   2169c:	movt	r2, #5
   216a0:	b	20da0 <__assert_fail@plt+0xf99c>
   216a4:	mov	r2, #5
   216a8:	mov	r0, r8
   216ac:	movw	r1, #7240	; 0x1c48
   216b0:	movt	r1, #6
   216b4:	bl	11170 <dcgettext@plt>
   216b8:	bl	4b2b0 <error@@Base>
   216bc:	b	20cfc <__assert_fail@plt+0xf8f8>
   216c0:	mov	r2, #5
   216c4:	movw	r1, #6572	; 0x19ac
   216c8:	mov	r0, r4
   216cc:	movt	r1, #6
   216d0:	bl	11170 <dcgettext@plt>
   216d4:	mov	r1, r0
   216d8:	mov	r0, #1
   216dc:	bl	1132c <__printf_chk@plt>
   216e0:	movw	r1, #6640	; 0x19f0
   216e4:	mov	r0, r4
   216e8:	mov	r2, #5
   216ec:	movt	r1, #6
   216f0:	b	21318 <__assert_fail@plt+0xff14>
   216f4:	add	r8, r4, #-1610612736	; 0xa0000000
   216f8:	cmn	r8, #-268435455	; 0xf0000001
   216fc:	bhi	21860 <__assert_fail@plt+0x1045c>
   21700:	ldrh	r2, [sl, #50]	; 0x32
   21704:	movw	r3, #16712	; 0x4148
   21708:	movt	r3, #9
   2170c:	cmp	r2, #15
   21710:	beq	21898 <__assert_fail@plt+0x10494>
   21714:	cmp	r2, #50	; 0x32
   21718:	bne	21794 <__assert_fail@plt+0x10390>
   2171c:	cmp	r8, #20
   21720:	ldrls	pc, [pc, r8, lsl #2]
   21724:	b	217d0 <__assert_fail@plt+0x103cc>
   21728:	andeq	r1, r2, r8, lsl #15
   2172c:	ldrdeq	r1, [r2], -r0
   21730:	ldrdeq	r1, [r2], -r0
   21734:	ldrdeq	r1, [r2], -r0
   21738:	ldrdeq	r1, [r2], -r0
   2173c:	ldrdeq	r1, [r2], -r0
   21740:	ldrdeq	r1, [r2], -r0
   21744:	ldrdeq	r1, [r2], -r0
   21748:	ldrdeq	r1, [r2], -r0
   2174c:	ldrdeq	r1, [r2], -r0
   21750:	ldrdeq	r1, [r2], -r0
   21754:	ldrdeq	r1, [r2], -r0
   21758:	ldrdeq	r1, [r2], -r0
   2175c:	ldrdeq	r1, [r2], -r0
   21760:	ldrdeq	r1, [r2], -r0
   21764:	ldrdeq	r1, [r2], -r0
   21768:	ldrdeq	r1, [r2], -r0
   2176c:	ldrdeq	r1, [r2], -r0
   21770:	andeq	r1, r2, ip, ror r7
   21774:	andeq	r1, r2, r0, lsl #16
   21778:	strdeq	r1, [r2], -r4
   2177c:	movw	r2, #50776	; 0xc658
   21780:	movt	r2, #5
   21784:	b	20da0 <__assert_fail@plt+0xf99c>
   21788:	movw	r2, #50604	; 0xc5ac
   2178c:	movt	r2, #5
   21790:	b	20da0 <__assert_fail@plt+0xf99c>
   21794:	ldrb	r3, [r3, #7]
   21798:	cmp	r3, #6
   2179c:	bne	217d0 <__assert_fail@plt+0x103cc>
   217a0:	cmn	r4, #-1879048186	; 0x90000006
   217a4:	beq	21978 <__assert_fail@plt+0x10574>
   217a8:	bls	2194c <__assert_fail@plt+0x10548>
   217ac:	cmn	r4, #-1879048188	; 0x90000004
   217b0:	beq	219c0 <__assert_fail@plt+0x105bc>
   217b4:	bcc	219b4 <__assert_fail@plt+0x105b0>
   217b8:	cmn	r4, #-1879048189	; 0x90000003
   217bc:	beq	2199c <__assert_fail@plt+0x10598>
   217c0:	cmn	r4, #-1879048191	; 0x90000001
   217c4:	movweq	r0, #6016	; 0x1780
   217c8:	movteq	r0, #6
   217cc:	beq	21858 <__assert_fail@plt+0x10454>
   217d0:	mov	r2, #32
   217d4:	str	r8, [sp]
   217d8:	movw	r3, #6724	; 0x1a44
   217dc:	ldr	r0, [pc, #488]	; 219cc <__assert_fail@plt+0x105c8>
   217e0:	movt	r3, #6
   217e4:	mov	r1, #1
   217e8:	bl	112cc <__sprintf_chk@plt>
   217ec:	ldr	r2, [pc, #472]	; 219cc <__assert_fail@plt+0x105c8>
   217f0:	b	20da0 <__assert_fail@plt+0xf99c>
   217f4:	movw	r2, #50808	; 0xc678
   217f8:	movt	r2, #5
   217fc:	b	20da0 <__assert_fail@plt+0xf99c>
   21800:	movw	r2, #50792	; 0xc668
   21804:	movt	r2, #5
   21808:	b	20da0 <__assert_fail@plt+0xf99c>
   2180c:	movw	r1, #6400	; 0x1900
   21810:	mov	r0, #0
   21814:	movt	r1, #6
   21818:	mov	r2, #5
   2181c:	b	21318 <__assert_fail@plt+0xff14>
   21820:	cmp	ip, #7
   21824:	movne	r2, #0
   21828:	movne	r3, #0
   2182c:	bne	21118 <__assert_fail@plt+0xfd14>
   21830:	b	21114 <__assert_fail@plt+0xfd10>
   21834:	cmp	r3, #10
   21838:	beq	21920 <__assert_fail@plt+0x1051c>
   2183c:	bls	21918 <__assert_fail@plt+0x10514>
   21840:	cmp	r3, #15
   21844:	bne	2193c <__assert_fail@plt+0x10538>
   21848:	mov	r0, r4
   2184c:	bl	12dd4 <__assert_fail@plt+0x19d0>
   21850:	cmp	r0, #0
   21854:	beq	20c88 <__assert_fail@plt+0xf884>
   21858:	mov	r2, r0
   2185c:	b	20da0 <__assert_fail@plt+0xf99c>
   21860:	mov	r2, #5
   21864:	movw	r1, #56084	; 0xdb14
   21868:	mov	r0, #0
   2186c:	movt	r1, #5
   21870:	bl	11170 <dcgettext@plt>
   21874:	mov	r1, #32
   21878:	mov	r2, #1
   2187c:	str	r4, [sp, #4]
   21880:	mov	r3, r1
   21884:	str	r0, [sp]
   21888:	ldr	r0, [pc, #316]	; 219cc <__assert_fail@plt+0x105c8>
   2188c:	bl	113f8 <__snprintf_chk@plt>
   21890:	ldr	r2, [pc, #308]	; 219cc <__assert_fail@plt+0x105c8>
   21894:	b	20da0 <__assert_fail@plt+0xf99c>
   21898:	mov	r0, r4
   2189c:	bl	12dd4 <__assert_fail@plt+0x19d0>
   218a0:	cmp	r0, #0
   218a4:	bne	21858 <__assert_fail@plt+0x10454>
   218a8:	b	217d0 <__assert_fail@plt+0x103cc>
   218ac:	cmp	r3, #50	; 0x32
   218b0:	bne	20c88 <__assert_fail@plt+0xf884>
   218b4:	cmp	r4, #1879048192	; 0x70000000
   218b8:	beq	219a8 <__assert_fail@plt+0x105a4>
   218bc:	cmp	r4, #1879048193	; 0x70000001
   218c0:	movweq	r2, #63504	; 0xf810
   218c4:	movteq	r2, #5
   218c8:	beq	20da0 <__assert_fail@plt+0xf99c>
   218cc:	b	20c88 <__assert_fail@plt+0xf884>
   218d0:	movw	r2, #41872	; 0xa390
   218d4:	cmp	r3, r2
   218d8:	bne	20c88 <__assert_fail@plt+0xf884>
   218dc:	cmp	r4, #1879048192	; 0x70000000
   218e0:	movweq	r2, #6132	; 0x17f4
   218e4:	movteq	r2, #6
   218e8:	beq	20da0 <__assert_fail@plt+0xf99c>
   218ec:	b	20c88 <__assert_fail@plt+0xf884>
   218f0:	cmp	r4, #1879048193	; 0x70000001
   218f4:	movweq	r2, #29144	; 0x71d8
   218f8:	movteq	r2, #6
   218fc:	beq	20da0 <__assert_fail@plt+0xf99c>
   21900:	b	20c88 <__assert_fail@plt+0xf884>
   21904:	cmp	r4, #1879048192	; 0x70000000
   21908:	movweq	r2, #6116	; 0x17e4
   2190c:	movteq	r2, #6
   21910:	beq	20da0 <__assert_fail@plt+0xf99c>
   21914:	b	20c88 <__assert_fail@plt+0xf884>
   21918:	cmp	r3, #8
   2191c:	bne	20c88 <__assert_fail@plt+0xf884>
   21920:	cmp	r8, #3
   21924:	bhi	20c88 <__assert_fail@plt+0xf884>
   21928:	movw	r3, #19132	; 0x4abc
   2192c:	movt	r3, #5
   21930:	add	r3, r3, r8, lsl #2
   21934:	ldr	r0, [r3, #1236]	; 0x4d4
   21938:	b	21850 <__assert_fail@plt+0x1044c>
   2193c:	cmp	r3, #22
   21940:	beq	218dc <__assert_fail@plt+0x104d8>
   21944:	b	20c88 <__assert_fail@plt+0xf884>
   21948:	bl	1117c <__stack_chk_fail@plt>
   2194c:	ldr	ip, [sp, #36]	; 0x24
   21950:	cmp	r4, ip
   21954:	beq	21990 <__assert_fail@plt+0x1058c>
   21958:	cmn	r4, #-1879048183	; 0x90000009
   2195c:	beq	21984 <__assert_fail@plt+0x10580>
   21960:	ldr	ip, [sp, #56]	; 0x38
   21964:	cmp	r4, ip
   21968:	bne	217d0 <__assert_fail@plt+0x103cc>
   2196c:	movw	r0, #5912	; 0x1718
   21970:	movt	r0, #6
   21974:	b	21858 <__assert_fail@plt+0x10454>
   21978:	movw	r0, #5960	; 0x1748
   2197c:	movt	r0, #6
   21980:	b	21858 <__assert_fail@plt+0x10454>
   21984:	movw	r0, #5948	; 0x173c
   21988:	movt	r0, #6
   2198c:	b	21858 <__assert_fail@plt+0x10454>
   21990:	movw	r0, #5928	; 0x1728
   21994:	movt	r0, #6
   21998:	b	21858 <__assert_fail@plt+0x10454>
   2199c:	movw	r0, #6004	; 0x1774
   219a0:	movt	r0, #6
   219a4:	b	21858 <__assert_fail@plt+0x10454>
   219a8:	movw	r2, #6100	; 0x17d4
   219ac:	movt	r2, #6
   219b0:	b	20da0 <__assert_fail@plt+0xf99c>
   219b4:	movw	r0, #5972	; 0x1754
   219b8:	movt	r0, #6
   219bc:	b	21858 <__assert_fail@plt+0x10454>
   219c0:	movw	r0, #5988	; 0x1764
   219c4:	movt	r0, #6
   219c8:	b	21858 <__assert_fail@plt+0x10454>
   219cc:	andeq	r5, r9, ip, ror #20
   219d0:	ldrdeq	r4, [r9], -ip
   219d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   219d8:	movw	fp, #16712	; 0x4148
   219dc:	movt	fp, #9
   219e0:	movw	r4, #16680	; 0x4128
   219e4:	movt	r4, #9
   219e8:	sub	sp, sp, #188	; 0xbc
   219ec:	ldr	r2, [fp, #68]	; 0x44
   219f0:	mov	r8, #0
   219f4:	ldr	r3, [r4]
   219f8:	cmp	r2, r8
   219fc:	str	r4, [sp, #92]	; 0x5c
   21a00:	str	r0, [sp, #84]	; 0x54
   21a04:	ldr	r6, [fp, #220]	; 0xdc
   21a08:	movne	r7, r8
   21a0c:	str	r8, [sp, #120]	; 0x78
   21a10:	str	r3, [sp, #180]	; 0xb4
   21a14:	str	r8, [sp, #124]	; 0x7c
   21a18:	str	r8, [sp, #128]	; 0x80
   21a1c:	str	r8, [sp, #132]	; 0x84
   21a20:	str	r8, [sp, #136]	; 0x88
   21a24:	str	r8, [sp, #140]	; 0x8c
   21a28:	str	r8, [sp, #144]	; 0x90
   21a2c:	str	r8, [sp, #148]	; 0x94
   21a30:	str	r8, [sp, #152]	; 0x98
   21a34:	str	r8, [sp, #156]	; 0x9c
   21a38:	str	r8, [sp, #160]	; 0xa0
   21a3c:	str	r8, [sp, #164]	; 0xa4
   21a40:	str	r8, [sp, #168]	; 0xa8
   21a44:	str	r8, [sp, #172]	; 0xac
   21a48:	bne	21a6c <__assert_fail@plt+0x10668>
   21a4c:	b	22c4c <__assert_fail@plt+0x11848>
   21a50:	cmp	r3, #1879048193	; 0x70000001
   21a54:	addeq	r8, r8, #1
   21a58:	ldr	r2, [fp, #68]	; 0x44
   21a5c:	add	r7, r7, #1
   21a60:	add	r6, r6, #72	; 0x48
   21a64:	cmp	r2, r7
   21a68:	bls	21b34 <__assert_fail@plt+0x10730>
   21a6c:	ldr	r3, [r6, #4]
   21a70:	cmp	r3, #2
   21a74:	bne	21a50 <__assert_fail@plt+0x1064c>
   21a78:	ldr	r3, [r6, #40]	; 0x28
   21a7c:	cmp	r2, r3
   21a80:	bls	21a58 <__assert_fail@plt+0x10654>
   21a84:	ldr	r3, [fp, #460]	; 0x1cc
   21a88:	mov	r1, r6
   21a8c:	ldr	r0, [sp, #84]	; 0x54
   21a90:	add	r2, sp, #156	; 0x9c
   21a94:	cmp	r3, #0
   21a98:	beq	22ba8 <__assert_fail@plt+0x117a4>
   21a9c:	bl	155f4 <__assert_fail@plt+0x41f0>
   21aa0:	ldr	r3, [r6, #40]	; 0x28
   21aa4:	ldr	r1, [sp, #168]	; 0xa8
   21aa8:	ldr	r2, [fp, #220]	; 0xdc
   21aac:	add	r3, r3, r3, lsl #3
   21ab0:	cmp	r1, #0
   21ab4:	str	r0, [sp, #152]	; 0x98
   21ab8:	add	sl, r2, r3, lsl #3
   21abc:	beq	21ae0 <__assert_fail@plt+0x106dc>
   21ac0:	mov	r2, #5
   21ac4:	movw	r1, #7516	; 0x1d5c
   21ac8:	mov	r0, #0
   21acc:	movt	r1, #6
   21ad0:	bl	11170 <dcgettext@plt>
   21ad4:	bl	4b2b0 <error@@Base>
   21ad8:	ldr	r0, [sp, #168]	; 0xa8
   21adc:	bl	1111c <free@plt>
   21ae0:	mov	r2, #5
   21ae4:	movw	r1, #3532	; 0xdcc
   21ae8:	mov	r0, #0
   21aec:	movt	r1, #6
   21af0:	ldr	r9, [sl, #24]
   21af4:	ldrd	r4, [sl, #32]
   21af8:	bl	11170 <dcgettext@plt>
   21afc:	mov	r2, #1
   21b00:	mov	r3, #0
   21b04:	ldr	r1, [sp, #84]	; 0x54
   21b08:	strd	r2, [sp]
   21b0c:	mov	r2, r9
   21b10:	strd	r4, [sp, #8]
   21b14:	str	r0, [sp, #16]
   21b18:	mov	r0, #0
   21b1c:	bl	1502c <__assert_fail@plt+0x3c28>
   21b20:	cmp	r0, #0
   21b24:	str	r0, [sp, #168]	; 0xa8
   21b28:	ldrne	r0, [sl, #32]
   21b2c:	str	r0, [sp, #172]	; 0xac
   21b30:	b	21a58 <__assert_fail@plt+0x10654>
   21b34:	cmp	r8, #0
   21b38:	beq	22c4c <__assert_fail@plt+0x11848>
   21b3c:	str	r8, [sp, #76]	; 0x4c
   21b40:	mov	r4, #0
   21b44:	ldr	r5, [sp, #76]	; 0x4c
   21b48:	mov	sl, fp
   21b4c:	str	r4, [sp, #56]	; 0x38
   21b50:	cmp	r5, #0
   21b54:	beq	21dec <__assert_fail@plt+0x109e8>
   21b58:	ldr	r5, [sp, #56]	; 0x38
   21b5c:	ldr	r2, [sl, #68]	; 0x44
   21b60:	ldr	r4, [sl, #220]	; 0xdc
   21b64:	add	r3, r5, r5, lsl #3
   21b68:	cmp	r5, r2
   21b6c:	add	fp, r4, r3, lsl #3
   21b70:	bcs	21ba4 <__assert_fail@plt+0x107a0>
   21b74:	ldr	r3, [fp, #4]
   21b78:	cmp	r3, #1879048193	; 0x70000001
   21b7c:	ldrne	r3, [sp, #56]	; 0x38
   21b80:	bne	21b94 <__assert_fail@plt+0x10790>
   21b84:	b	22b88 <__assert_fail@plt+0x11784>
   21b88:	ldr	r1, [fp, #4]
   21b8c:	cmp	r1, #1879048193	; 0x70000001
   21b90:	beq	21bc0 <__assert_fail@plt+0x107bc>
   21b94:	add	r3, r3, #1
   21b98:	add	fp, fp, #72	; 0x48
   21b9c:	cmp	r3, r2
   21ba0:	bcc	21b88 <__assert_fail@plt+0x10784>
   21ba4:	movw	r0, #8028	; 0x1f5c
   21ba8:	movw	r1, #64464	; 0xfbd0
   21bac:	movt	r0, #6
   21bb0:	movt	r1, #5
   21bb4:	mov	r2, #7168	; 0x1c00
   21bb8:	ldr	r3, [pc, #4080]	; 22bb0 <__assert_fail@plt+0x117ac>
   21bbc:	bl	11404 <__assert_fail@plt>
   21bc0:	mov	r5, r3
   21bc4:	str	r3, [sp, #56]	; 0x38
   21bc8:	ldrd	r2, [fp, #8]
   21bcc:	mov	r0, #512	; 0x200
   21bd0:	mov	r1, #0
   21bd4:	ldr	ip, [sp, #56]	; 0x38
   21bd8:	and	r2, r2, r0
   21bdc:	and	r3, r3, r1
   21be0:	orrs	lr, r2, r3
   21be4:	add	ip, ip, #1
   21be8:	str	ip, [sp, #56]	; 0x38
   21bec:	beq	21c88 <__assert_fail@plt+0x10884>
   21bf0:	ldr	r3, [sl, #524]	; 0x20c
   21bf4:	cmp	r3, #0
   21bf8:	beq	21d8c <__assert_fail@plt+0x10988>
   21bfc:	ldr	r3, [r3, r5, lsl #2]
   21c00:	cmp	r3, #0
   21c04:	beq	21d8c <__assert_fail@plt+0x10988>
   21c08:	ldr	r8, [r3]
   21c0c:	cmp	r8, #0
   21c10:	beq	21d8c <__assert_fail@plt+0x10988>
   21c14:	movw	r7, #16712	; 0x4148
   21c18:	movt	r7, #9
   21c1c:	b	21c40 <__assert_fail@plt+0x1083c>
   21c20:	movw	r1, #7564	; 0x1d8c
   21c24:	movt	r1, #6
   21c28:	bl	110f8 <strcmp@plt>
   21c2c:	cmp	r0, #0
   21c30:	beq	21e44 <__assert_fail@plt+0x10a40>
   21c34:	ldr	r8, [r8]
   21c38:	cmp	r8, #0
   21c3c:	beq	21d8c <__assert_fail@plt+0x10988>
   21c40:	ldr	r3, [r8, #4]
   21c44:	add	r3, r3, r3, lsl #3
   21c48:	adds	r6, r4, r3, lsl #3
   21c4c:	beq	21e28 <__assert_fail@plt+0x10a24>
   21c50:	ldr	r0, [sl, #212]	; 0xd4
   21c54:	cmp	r0, #0
   21c58:	beq	22780 <__assert_fail@plt+0x1137c>
   21c5c:	ldr	r3, [r6]
   21c60:	ldr	r2, [r7, #216]	; 0xd8
   21c64:	cmp	r3, r2
   21c68:	addcc	r0, r0, r3
   21c6c:	bcc	21c20 <__assert_fail@plt+0x1081c>
   21c70:	movw	r1, #50908	; 0xc6dc
   21c74:	mov	r2, #5
   21c78:	movt	r1, #5
   21c7c:	mov	r0, #0
   21c80:	bl	11170 <dcgettext@plt>
   21c84:	b	21c20 <__assert_fail@plt+0x1081c>
   21c88:	ldr	r5, [sl, #212]	; 0xd4
   21c8c:	movw	r3, #16712	; 0x4148
   21c90:	movt	r3, #9
   21c94:	cmp	r5, #0
   21c98:	beq	22bb4 <__assert_fail@plt+0x117b0>
   21c9c:	ldr	r2, [r3, #216]	; 0xd8
   21ca0:	ldr	r3, [fp]
   21ca4:	cmp	r3, r2
   21ca8:	addcc	r0, r5, r3
   21cac:	bcs	229ec <__assert_fail@plt+0x115e8>
   21cb0:	movw	r1, #7584	; 0x1da0
   21cb4:	mov	r2, #22
   21cb8:	movt	r1, #6
   21cbc:	bl	113e0 <strncmp@plt>
   21cc0:	cmp	r0, #0
   21cc4:	bne	2286c <__assert_fail@plt+0x11468>
   21cc8:	cmp	r5, #0
   21ccc:	beq	22be0 <__assert_fail@plt+0x117dc>
   21cd0:	ldr	r3, [fp]
   21cd4:	ldr	r2, [sl, #216]	; 0xd8
   21cd8:	cmp	r3, r2
   21cdc:	addcc	r0, r5, r3
   21ce0:	bcs	22b74 <__assert_fail@plt+0x11770>
   21ce4:	ldr	r2, [sl, #68]	; 0x44
   21ce8:	add	r7, r0, #22
   21cec:	cmp	r2, #0
   21cf0:	beq	21d8c <__assert_fail@plt+0x10988>
   21cf4:	movw	r6, #16712	; 0x4148
   21cf8:	add	r9, r4, #72	; 0x48
   21cfc:	movt	r6, #9
   21d00:	mov	r5, #0
   21d04:	cmp	r4, #0
   21d08:	beq	227ec <__assert_fail@plt+0x113e8>
   21d0c:	ldr	r8, [sl, #212]	; 0xd4
   21d10:	cmp	r8, #0
   21d14:	beq	2282c <__assert_fail@plt+0x11428>
   21d18:	ldr	r3, [r9, #-72]	; 0xffffffb8
   21d1c:	ldr	r2, [r6, #216]	; 0xd8
   21d20:	cmp	r3, r2
   21d24:	addcc	r0, r8, r3
   21d28:	bcs	227c0 <__assert_fail@plt+0x113bc>
   21d2c:	movw	r1, #7608	; 0x1db8
   21d30:	mov	r2, #23
   21d34:	movt	r1, #6
   21d38:	bl	113e0 <strncmp@plt>
   21d3c:	cmp	r0, #0
   21d40:	bne	21d6c <__assert_fail@plt+0x10968>
   21d44:	ldr	r3, [r9, #-72]	; 0xffffffb8
   21d48:	ldr	r2, [sl, #216]	; 0xd8
   21d4c:	cmp	r3, r2
   21d50:	addcc	r0, r8, r3
   21d54:	bcs	227d8 <__assert_fail@plt+0x113d4>
   21d58:	add	r0, r0, #23
   21d5c:	mov	r1, r7
   21d60:	bl	110f8 <strcmp@plt>
   21d64:	cmp	r0, #0
   21d68:	beq	21e40 <__assert_fail@plt+0x10a3c>
   21d6c:	ldr	r3, [sl, #68]	; 0x44
   21d70:	add	r5, r5, #1
   21d74:	add	r4, r4, #72	; 0x48
   21d78:	add	r9, r9, #72	; 0x48
   21d7c:	cmp	r3, r5
   21d80:	bhi	21d04 <__assert_fail@plt+0x10900>
   21d84:	mov	r6, r4
   21d88:	b	21e48 <__assert_fail@plt+0x10a44>
   21d8c:	mov	r2, #5
   21d90:	movw	r1, #7648	; 0x1de0
   21d94:	mov	r0, #0
   21d98:	movt	r1, #6
   21d9c:	bl	11170 <dcgettext@plt>
   21da0:	mov	r1, r0
   21da4:	mov	r0, #1
   21da8:	bl	1132c <__printf_chk@plt>
   21dac:	ldr	r3, [sl, #212]	; 0xd4
   21db0:	cmp	r3, #0
   21db4:	beq	22b90 <__assert_fail@plt+0x1178c>
   21db8:	mov	r0, fp
   21dbc:	bl	132f8 <__assert_fail@plt+0x1ef4>
   21dc0:	movw	r1, #7692	; 0x1e0c
   21dc4:	movt	r1, #6
   21dc8:	mov	r2, r0
   21dcc:	mov	r0, #1
   21dd0:	bl	1132c <__printf_chk@plt>
   21dd4:	ldr	r4, [sp, #76]	; 0x4c
   21dd8:	sub	r4, r4, #1
   21ddc:	str	r4, [sp, #76]	; 0x4c
   21de0:	ldr	r5, [sp, #76]	; 0x4c
   21de4:	cmp	r5, #0
   21de8:	bne	21b58 <__assert_fail@plt+0x10754>
   21dec:	ldr	r0, [sp, #152]	; 0x98
   21df0:	cmp	r0, #0
   21df4:	beq	21dfc <__assert_fail@plt+0x109f8>
   21df8:	bl	1111c <free@plt>
   21dfc:	ldr	r0, [sp, #168]	; 0xa8
   21e00:	cmp	r0, #0
   21e04:	beq	21e0c <__assert_fail@plt+0x10a08>
   21e08:	bl	1111c <free@plt>
   21e0c:	ldr	r4, [sp, #92]	; 0x5c
   21e10:	ldr	r2, [sp, #180]	; 0xb4
   21e14:	ldr	r3, [r4]
   21e18:	cmp	r2, r3
   21e1c:	bne	22ca0 <__assert_fail@plt+0x1189c>
   21e20:	add	sp, sp, #188	; 0xbc
   21e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e28:	movw	r1, #50888	; 0xc6c8
   21e2c:	mov	r0, r6
   21e30:	movt	r1, #5
   21e34:	mov	r2, #5
   21e38:	bl	11170 <dcgettext@plt>
   21e3c:	b	21c20 <__assert_fail@plt+0x1081c>
   21e40:	mov	r6, r4
   21e44:	ldr	r3, [sl, #68]	; 0x44
   21e48:	cmp	r5, r3
   21e4c:	beq	21d8c <__assert_fail@plt+0x10988>
   21e50:	ldrd	r4, [r6, #16]
   21e54:	mov	r2, #5
   21e58:	movw	r1, #7700	; 0x1e14
   21e5c:	mov	r0, #0
   21e60:	movt	r1, #6
   21e64:	ldr	r7, [r6, #24]
   21e68:	strd	r4, [sp, #136]	; 0x88
   21e6c:	mov	r8, #1
   21e70:	ldrd	r4, [r6, #32]
   21e74:	bl	11170 <dcgettext@plt>
   21e78:	mov	r9, #0
   21e7c:	mov	r2, r7
   21e80:	ldr	r1, [sp, #84]	; 0x54
   21e84:	strd	r8, [sp]
   21e88:	strd	r4, [sp, #8]
   21e8c:	str	r0, [sp, #16]
   21e90:	mov	r0, #0
   21e94:	bl	1502c <__assert_fail@plt+0x3c28>
   21e98:	mov	r2, #5
   21e9c:	movw	r1, #7712	; 0x1e20
   21ea0:	movt	r1, #6
   21ea4:	cmp	r0, #0
   21ea8:	str	r0, [sp, #128]	; 0x80
   21eac:	ldrne	r3, [r6, #32]
   21eb0:	moveq	r3, r0
   21eb4:	mov	r0, #0
   21eb8:	str	r3, [sp, #132]	; 0x84
   21ebc:	bl	11170 <dcgettext@plt>
   21ec0:	mov	r1, r0
   21ec4:	mov	r0, #1
   21ec8:	bl	1132c <__printf_chk@plt>
   21ecc:	ldr	r3, [sl, #212]	; 0xd4
   21ed0:	cmp	r3, #0
   21ed4:	beq	22a7c <__assert_fail@plt+0x11678>
   21ed8:	mov	r0, fp
   21edc:	bl	132f8 <__assert_fail@plt+0x1ef4>
   21ee0:	movw	r1, #7692	; 0x1e0c
   21ee4:	movt	r1, #6
   21ee8:	mov	r2, r0
   21eec:	mov	r0, #1
   21ef0:	bl	1132c <__printf_chk@plt>
   21ef4:	mov	r2, #5
   21ef8:	movw	r1, #14320	; 0x37f0
   21efc:	mov	r0, #0
   21f00:	movt	r1, #6
   21f04:	movw	ip, #26448	; 0x6750
   21f08:	movt	ip, #9
   21f0c:	str	ip, [sp, #60]	; 0x3c
   21f10:	bl	11170 <dcgettext@plt>
   21f14:	ldr	r4, [sp, #60]	; 0x3c
   21f18:	ldr	r5, [fp, #24]
   21f1c:	ldr	r2, [r4]
   21f20:	mov	r4, #0
   21f24:	mov	r3, r4
   21f28:	add	r2, r2, r2, lsl #1
   21f2c:	mov	r6, r0
   21f30:	ldrd	r0, [fp, #32]
   21f34:	bl	529fc <zcfree@@Base+0x13cc>
   21f38:	mov	r1, r6
   21f3c:	mov	r2, r5
   21f40:	mov	r3, r0
   21f44:	mov	r0, #1
   21f48:	bl	1132c <__printf_chk@plt>
   21f4c:	ldr	r3, [sl, #60]	; 0x3c
   21f50:	str	r4, [sp, #124]	; 0x7c
   21f54:	movw	r4, #16712	; 0x4148
   21f58:	cmp	r3, #0
   21f5c:	movt	r4, #9
   21f60:	bne	226fc <__assert_fail@plt+0x112f8>
   21f64:	ldrd	r8, [fp, #32]
   21f68:	mov	r2, #5
   21f6c:	movw	r1, #7732	; 0x1e34
   21f70:	mov	r0, #0
   21f74:	movt	r1, #6
   21f78:	ldr	r4, [fp, #24]
   21f7c:	bl	11170 <dcgettext@plt>
   21f80:	mov	r2, #1
   21f84:	mov	r3, #0
   21f88:	ldr	r1, [sp, #84]	; 0x54
   21f8c:	mov	r5, r8
   21f90:	strd	r2, [sp]
   21f94:	mov	r2, r8
   21f98:	mov	r3, #0
   21f9c:	strd	r2, [sp, #8]
   21fa0:	mov	r2, r4
   21fa4:	str	r0, [sp, #16]
   21fa8:	mov	r0, #0
   21fac:	bl	1502c <__assert_fail@plt+0x3c28>
   21fb0:	cmp	r0, #0
   21fb4:	str	r0, [sp, #48]	; 0x30
   21fb8:	beq	22340 <__assert_fail@plt+0x10f3c>
   21fbc:	ldr	ip, [sp, #60]	; 0x3c
   21fc0:	mov	r0, r8
   21fc4:	ldr	r1, [ip]
   21fc8:	add	r1, r1, r1, lsl #1
   21fcc:	bl	52568 <zcfree@@Base+0xf38>
   21fd0:	mov	r1, #48	; 0x30
   21fd4:	str	r0, [sp, #124]	; 0x7c
   21fd8:	bl	3f77c <__assert_fail@plt+0x2e378>
   21fdc:	ldr	r4, [sp, #60]	; 0x3c
   21fe0:	ldr	r2, [sp, #48]	; 0x30
   21fe4:	ldr	ip, [r4]
   21fe8:	add	r3, ip, ip, lsl #1
   21fec:	rsb	r8, r3, r8
   21ff0:	cmn	r2, r8
   21ff4:	str	r0, [sp, #120]	; 0x78
   21ff8:	bcs	220d4 <__assert_fail@plt+0x10cd0>
   21ffc:	ldr	r7, [sp, #48]	; 0x30
   22000:	movw	r8, #26492	; 0x677c
   22004:	ldr	r4, [sp, #60]	; 0x3c
   22008:	add	r6, r0, #48	; 0x30
   2200c:	movt	r8, #9
   22010:	mov	r9, #0
   22014:	str	fp, [sp, #72]	; 0x48
   22018:	str	r5, [sp, #88]	; 0x58
   2201c:	str	sl, [sp, #80]	; 0x50
   22020:	mov	r1, ip
   22024:	strh	r9, [r6, #-48]	; 0xffffffd0
   22028:	strh	r9, [r6, #-32]	; 0xffffffe0
   2202c:	mov	r0, r7
   22030:	strh	r9, [r6, #-16]
   22034:	add	r6, r6, #48	; 0x30
   22038:	ldr	r3, [r8]
   2203c:	blx	r3
   22040:	ldr	r2, [r4]
   22044:	ldr	r3, [r8]
   22048:	add	r7, r7, r2
   2204c:	strd	r0, [r6, #-88]	; 0xffffffa8
   22050:	mov	r1, r2
   22054:	mov	r0, r7
   22058:	blx	r3
   2205c:	ldr	r2, [r4]
   22060:	ldr	r3, [r8]
   22064:	add	r7, r7, r2
   22068:	strd	r0, [r6, #-72]	; 0xffffffb8
   2206c:	mov	r1, r2
   22070:	mov	r0, r7
   22074:	blx	r3
   22078:	ldrd	sl, [sp, #144]	; 0x90
   2207c:	ldr	ip, [r4]
   22080:	ldrd	r2, [r6, #-88]	; 0xffffffa8
   22084:	ldr	r5, [sp, #88]	; 0x58
   22088:	add	r7, r7, ip
   2208c:	adds	r2, r2, sl
   22090:	add	lr, ip, ip, lsl #1
   22094:	adc	r3, r3, fp
   22098:	strd	r2, [r6, #-88]	; 0xffffffa8
   2209c:	ldrd	r2, [r6, #-72]	; 0xffffffb8
   220a0:	rsb	lr, lr, r5
   220a4:	ldr	r5, [sp, #48]	; 0x30
   220a8:	adds	r2, r2, sl
   220ac:	adc	r3, r3, fp
   220b0:	add	lr, r5, lr
   220b4:	strd	r2, [r6, #-72]	; 0xffffffb8
   220b8:	adds	r0, r0, sl
   220bc:	adc	r1, r1, fp
   220c0:	cmp	r7, lr
   220c4:	strd	r0, [r6, #-56]	; 0xffffffc8
   220c8:	bls	22020 <__assert_fail@plt+0x10c1c>
   220cc:	ldr	fp, [sp, #72]	; 0x48
   220d0:	ldr	sl, [sp, #80]	; 0x50
   220d4:	ldr	r0, [sp, #48]	; 0x30
   220d8:	bl	1111c <free@plt>
   220dc:	ldr	r3, [sl, #68]	; 0x44
   220e0:	ldr	r2, [sl, #220]	; 0xdc
   220e4:	add	r1, r3, r3, lsl #3
   220e8:	add	r1, r2, r1, lsl #3
   220ec:	cmp	r2, r1
   220f0:	strcc	fp, [sp, #48]	; 0x30
   220f4:	addcc	r8, r2, #72	; 0x48
   220f8:	bcc	2211c <__assert_fail@plt+0x10d18>
   220fc:	b	22334 <__assert_fail@plt+0x10f30>
   22100:	ldr	r3, [sl, #68]	; 0x44
   22104:	add	r8, r8, #72	; 0x48
   22108:	ldr	r2, [sl, #220]	; 0xdc
   2210c:	add	r1, r3, r3, lsl #3
   22110:	add	r1, r2, r1, lsl #3
   22114:	cmp	fp, r1
   22118:	bcs	22334 <__assert_fail@plt+0x10f30>
   2211c:	ldr	r1, [r8, #-68]	; 0xffffffbc
   22120:	mov	fp, r8
   22124:	cmp	r1, #4
   22128:	bne	22100 <__assert_fail@plt+0x10cfc>
   2212c:	ldr	r1, [r8, #-28]	; 0xffffffe4
   22130:	cmp	r1, r3
   22134:	bcs	22100 <__assert_fail@plt+0x10cfc>
   22138:	add	r1, r1, r1, lsl #3
   2213c:	ldr	ip, [sp, #48]	; 0x30
   22140:	add	r2, r2, r1, lsl #3
   22144:	cmp	ip, r2
   22148:	bne	22100 <__assert_fail@plt+0x10cfc>
   2214c:	ldr	r1, [r8, #-48]	; 0xffffffd0
   22150:	add	lr, sp, #108	; 0x6c
   22154:	ldr	r2, [r8, #-40]	; 0xffffffd8
   22158:	add	r3, sp, #112	; 0x70
   2215c:	ldr	r0, [sp, #84]	; 0x54
   22160:	str	lr, [sp]
   22164:	bl	166b0 <__assert_fail@plt+0x52ac>
   22168:	cmp	r0, #0
   2216c:	beq	22c88 <__assert_fail@plt+0x11884>
   22170:	ldr	r6, [sp, #108]	; 0x6c
   22174:	ldr	r4, [sp, #112]	; 0x70
   22178:	add	r3, r6, r6, lsl #1
   2217c:	str	r4, [sp, #72]	; 0x48
   22180:	add	r3, r4, r3, lsl #3
   22184:	cmp	r4, r3
   22188:	bcs	22b50 <__assert_fail@plt+0x1174c>
   2218c:	add	r9, r4, #24
   22190:	str	r8, [sp, #96]	; 0x60
   22194:	str	r8, [sp, #100]	; 0x64
   22198:	str	sl, [sp, #88]	; 0x58
   2219c:	b	222a4 <__assert_fail@plt+0x10ea0>
   221a0:	uxtb	r0, r7
   221a4:	lsr	r7, r7, #8
   221a8:	bl	121e8 <__assert_fail@plt+0xde4>
   221ac:	ldr	ip, [sp, #152]	; 0x98
   221b0:	orr	r7, r7, r8, lsl #24
   221b4:	str	ip, [sp, #80]	; 0x50
   221b8:	mov	r5, r0
   221bc:	cmp	r5, #0
   221c0:	beq	222e8 <__assert_fail@plt+0x10ee4>
   221c4:	movw	r1, #7788	; 0x1e6c
   221c8:	mov	r0, r5
   221cc:	movt	r1, #6
   221d0:	mov	r2, #13
   221d4:	bl	113e0 <strncmp@plt>
   221d8:	subs	ip, r0, #0
   221dc:	bne	22794 <__assert_fail@plt+0x11390>
   221e0:	ldr	r4, [sp, #60]	; 0x3c
   221e4:	mov	r3, ip
   221e8:	ldr	r8, [r4]
   221ec:	ldrd	r4, [r9, #-24]	; 0xffffffe8
   221f0:	str	ip, [sp, #44]	; 0x2c
   221f4:	add	r2, r8, r8, lsl #1
   221f8:	mov	r0, r4
   221fc:	mov	r1, r5
   22200:	bl	529fc <zcfree@@Base+0x13cc>
   22204:	ldr	r3, [sp, #124]	; 0x7c
   22208:	ldr	ip, [sp, #44]	; 0x2c
   2220c:	cmp	r0, r3
   22210:	mov	sl, r0
   22214:	bcs	22994 <__assert_fail@plt+0x11590>
   22218:	mov	r3, ip
   2221c:	mov	r2, r8
   22220:	mov	r0, r4
   22224:	mov	r1, r5
   22228:	bl	529fc <zcfree@@Base+0x13cc>
   2222c:	mov	r2, #3
   22230:	mov	r3, #0
   22234:	lsl	r7, r7, #5
   22238:	bl	529fc <zcfree@@Base+0x13cc>
   2223c:	ldr	ip, [sp, #80]	; 0x50
   22240:	add	sl, sl, sl, lsl #1
   22244:	mov	r1, r3
   22248:	mov	r0, r2
   2224c:	cmp	r1, #0
   22250:	cmpeq	r0, #1
   22254:	add	r3, ip, r7
   22258:	beq	22b18 <__assert_fail@plt+0x11714>
   2225c:	cmp	r1, #0
   22260:	cmpeq	r0, #2
   22264:	bne	229c0 <__assert_fail@plt+0x115bc>
   22268:	ldr	r2, [sp, #120]	; 0x78
   2226c:	ldrd	r0, [r9, #-8]
   22270:	ldr	lr, [r3, #24]
   22274:	add	ip, r2, sl, lsl #4
   22278:	ldrd	r2, [r3]
   2227c:	adds	r2, r2, r0
   22280:	strh	lr, [ip, #32]
   22284:	adc	r3, r3, r1
   22288:	strd	r2, [ip, #40]	; 0x28
   2228c:	add	r3, r6, r6, lsl #1
   22290:	ldr	r5, [sp, #72]	; 0x48
   22294:	add	r9, r9, #24
   22298:	add	r3, r5, r3, lsl #3
   2229c:	cmp	fp, r3
   222a0:	bcs	22b44 <__assert_fail@plt+0x11740>
   222a4:	ldr	r5, [sp, #88]	; 0x58
   222a8:	mov	fp, r9
   222ac:	ldr	r7, [r9, #-16]
   222b0:	ldr	r8, [r9, #-12]
   222b4:	ldr	r4, [r5, #460]	; 0x1cc
   222b8:	cmp	r4, #0
   222bc:	bne	221a0 <__assert_fail@plt+0x10d9c>
   222c0:	mov	r0, r7
   222c4:	mov	r1, r8
   222c8:	bl	18614 <__assert_fail@plt+0x7210>
   222cc:	mov	r7, r8
   222d0:	bl	121e8 <__assert_fail@plt+0xde4>
   222d4:	ldr	ip, [sp, #152]	; 0x98
   222d8:	str	ip, [sp, #80]	; 0x50
   222dc:	mov	r5, r0
   222e0:	cmp	r5, #0
   222e4:	bne	221c4 <__assert_fail@plt+0x10dc0>
   222e8:	mov	r0, r5
   222ec:	movw	r1, #7748	; 0x1e44
   222f0:	mov	r2, #5
   222f4:	movt	r1, #6
   222f8:	bl	11170 <dcgettext@plt>
   222fc:	cmp	r4, #0
   22300:	ldr	r1, [r9, #-12]
   22304:	mov	r5, r0
   22308:	ldr	r0, [r9, #-16]
   2230c:	uxtbne	r1, r0
   22310:	bne	2231c <__assert_fail@plt+0x10f18>
   22314:	bl	18614 <__assert_fail@plt+0x7210>
   22318:	mov	r1, r0
   2231c:	mov	r0, r5
   22320:	bl	4b9ec <warn@@Base>
   22324:	ldr	r4, [sp, #112]	; 0x70
   22328:	ldr	r6, [sp, #108]	; 0x6c
   2232c:	str	r4, [sp, #72]	; 0x48
   22330:	b	2228c <__assert_fail@plt+0x10e88>
   22334:	ldr	r3, [sp, #124]	; 0x7c
   22338:	cmp	r3, #0
   2233c:	bne	22370 <__assert_fail@plt+0x10f6c>
   22340:	ldr	r0, [sp, #120]	; 0x78
   22344:	cmp	r0, #0
   22348:	beq	22350 <__assert_fail@plt+0x10f4c>
   2234c:	bl	1111c <free@plt>
   22350:	ldr	r0, [sp, #128]	; 0x80
   22354:	cmp	r0, #0
   22358:	beq	22360 <__assert_fail@plt+0x10f5c>
   2235c:	bl	1111c <free@plt>
   22360:	mov	r3, #0
   22364:	str	r3, [sp, #120]	; 0x78
   22368:	str	r3, [sp, #128]	; 0x80
   2236c:	b	21dd4 <__assert_fail@plt+0x109d0>
   22370:	ldr	r0, [sp, #156]	; 0x9c
   22374:	lsl	r0, r0, #5
   22378:	bl	4eba0 <warn@@Base+0x31b4>
   2237c:	ldr	lr, [sp, #156]	; 0x9c
   22380:	cmp	lr, #0
   22384:	mov	r5, r0
   22388:	str	r0, [sp, #160]	; 0xa0
   2238c:	beq	22c74 <__assert_fail@plt+0x11870>
   22390:	ldr	ip, [sp, #152]	; 0x98
   22394:	mov	r4, #0
   22398:	add	lr, ip, lr, lsl #5
   2239c:	b	223ac <__assert_fail@plt+0x10fa8>
   223a0:	add	ip, ip, #32
   223a4:	cmp	ip, lr
   223a8:	beq	223f0 <__assert_fail@plt+0x10fec>
   223ac:	ldrd	r2, [ip]
   223b0:	orrs	r0, r2, r3
   223b4:	beq	223a0 <__assert_fail@plt+0x10f9c>
   223b8:	ldrb	r3, [ip, #20]
   223bc:	and	r3, r3, #15
   223c0:	cmp	r3, #2
   223c4:	bne	223a0 <__assert_fail@plt+0x10f9c>
   223c8:	mov	r7, ip
   223cc:	add	r6, r5, r4, lsl #5
   223d0:	ldm	r7!, {r0, r1, r2, r3}
   223d4:	add	ip, ip, #32
   223d8:	cmp	ip, lr
   223dc:	add	r4, r4, #1
   223e0:	stmia	r6!, {r0, r1, r2, r3}
   223e4:	ldm	r7, {r0, r1, r2, r3}
   223e8:	stm	r6, {r0, r1, r2, r3}
   223ec:	bne	223ac <__assert_fail@plt+0x10fa8>
   223f0:	mov	r0, r5
   223f4:	mov	r1, r4
   223f8:	movw	r3, #12188	; 0x2f9c
   223fc:	mov	r2, #32
   22400:	movt	r3, #1
   22404:	str	r4, [sp, #164]	; 0xa4
   22408:	bl	11398 <qsort@plt>
   2240c:	ldr	r3, [sp, #124]	; 0x7c
   22410:	ldr	fp, [sp, #120]	; 0x78
   22414:	add	r3, r3, r3, lsl #1
   22418:	add	r3, fp, r3, lsl #4
   2241c:	cmp	fp, r3
   22420:	bcs	22b08 <__assert_fail@plt+0x11704>
   22424:	movw	r6, #16696	; 0x4138
   22428:	movw	r4, #26492	; 0x677c
   2242c:	str	sl, [sp, #80]	; 0x50
   22430:	movt	r4, #9
   22434:	movt	r6, #9
   22438:	str	r4, [sp, #72]	; 0x48
   2243c:	ldr	sl, [sp, #60]	; 0x3c
   22440:	b	225ac <__assert_fail@plt+0x111a8>
   22444:	ldr	r4, [sp, #80]	; 0x50
   22448:	add	r3, r3, r3, lsl #3
   2244c:	ldr	lr, [sp, #132]	; 0x84
   22450:	ldrd	r8, [sp, #136]	; 0x88
   22454:	ldr	r2, [r4, #220]	; 0xdc
   22458:	mov	r0, lr
   2245c:	add	r1, r2, r3, lsl #3
   22460:	ldrd	r2, [fp, #40]	; 0x28
   22464:	ldrd	r4, [r1, #16]
   22468:	mov	r1, #0
   2246c:	strd	r0, [sp, #48]	; 0x30
   22470:	mov	r0, r4
   22474:	mov	r1, r5
   22478:	subs	r0, r0, r8
   2247c:	sbc	r1, r1, r9
   22480:	strd	r4, [sp, #24]
   22484:	adds	r4, r0, r2
   22488:	adc	r5, r1, r3
   2248c:	ldrd	r0, [sp, #48]	; 0x30
   22490:	cmp	r5, r1
   22494:	cmpeq	r4, r0
   22498:	bcs	226bc <__assert_fail@plt+0x112b8>
   2249c:	ldr	r1, [sp, #24]
   224a0:	add	r2, r2, r1
   224a4:	ldr	r4, [sp, #72]	; 0x48
   224a8:	rsb	r8, r8, r2
   224ac:	add	r8, ip, r8
   224b0:	mov	r1, #8
   224b4:	str	r8, [sp, #48]	; 0x30
   224b8:	movw	r7, #26448	; 0x6750
   224bc:	ldr	r3, [r4]
   224c0:	mov	r0, r8
   224c4:	blx	r3
   224c8:	mov	r2, #0
   224cc:	mov	r3, #1
   224d0:	movw	ip, #7444	; 0x1d14
   224d4:	movt	ip, #6
   224d8:	movt	r7, #9
   224dc:	mov	r8, r0
   224e0:	ldr	r0, [sl]
   224e4:	and	r3, r3, r1
   224e8:	and	r2, r2, r8
   224ec:	orrs	r5, r2, r3
   224f0:	mov	r9, r1
   224f4:	mul	r0, r0, r8
   224f8:	movw	r1, #25084	; 0x61fc
   224fc:	movt	r1, #7
   22500:	mov	r2, #0
   22504:	mov	r3, #2
   22508:	and	r2, r2, r8
   2250c:	and	r3, r3, r9
   22510:	moveq	ip, r1
   22514:	lsr	lr, r9, #16
   22518:	orrs	r4, r2, r3
   2251c:	mov	r5, #0
   22520:	movw	r3, #7456	; 0x1d20
   22524:	str	r5, [sp, #68]	; 0x44
   22528:	movt	r3, #6
   2252c:	movw	r5, #65535	; 0xffff
   22530:	and	r5, r5, r9
   22534:	moveq	r3, r1
   22538:	str	r0, [sp, #8]
   2253c:	str	r3, [sp, #4]
   22540:	mov	r2, lr
   22544:	mov	r3, r5
   22548:	str	ip, [sp]
   2254c:	movw	r1, #7964	; 0x1f1c
   22550:	mov	r0, #1
   22554:	movt	r1, #6
   22558:	str	lr, [sp, #64]	; 0x40
   2255c:	bl	1132c <__printf_chk@plt>
   22560:	ldrd	r4, [sp, #64]	; 0x40
   22564:	cmp	r5, #0
   22568:	cmpeq	r4, #1
   2256c:	beq	22a94 <__assert_fail@plt+0x11690>
   22570:	movw	r1, #8008	; 0x1f48
   22574:	ldr	r0, [sp, #68]	; 0x44
   22578:	movt	r1, #6
   2257c:	mov	r2, #5
   22580:	bl	11170 <dcgettext@plt>
   22584:	mov	r1, r0
   22588:	mov	r0, #1
   2258c:	bl	1132c <__printf_chk@plt>
   22590:	ldr	r3, [sp, #124]	; 0x7c
   22594:	add	fp, fp, #48	; 0x30
   22598:	ldr	r2, [sp, #120]	; 0x78
   2259c:	add	r3, r3, r3, lsl #1
   225a0:	add	r3, r2, r3, lsl #4
   225a4:	cmp	fp, r3
   225a8:	bcs	22b04 <__assert_fail@plt+0x11700>
   225ac:	ldrh	r3, [fp]
   225b0:	add	ip, sp, #112	; 0x70
   225b4:	ldr	r0, [sp, #160]	; 0xa0
   225b8:	ldr	r1, [sp, #164]	; 0xa4
   225bc:	str	r3, [sp]
   225c0:	ldrd	r4, [fp, #8]
   225c4:	ldr	r2, [sp, #168]	; 0xa8
   225c8:	ldr	r3, [sp, #172]	; 0xac
   225cc:	strd	r4, [sp, #8]
   225d0:	add	r5, sp, #108	; 0x6c
   225d4:	str	ip, [sp, #20]
   225d8:	str	r5, [sp, #16]
   225dc:	bl	191b8 <__assert_fail@plt+0x7db4>
   225e0:	movw	r0, #7892	; 0x1ed4
   225e4:	mov	r1, #1
   225e8:	movt	r0, #6
   225ec:	mov	r2, #2
   225f0:	ldr	r3, [r6]
   225f4:	bl	111b8 <fwrite@plt>
   225f8:	ldr	r0, [sp, #108]	; 0x6c
   225fc:	cmp	r0, #0
   22600:	beq	22620 <__assert_fail@plt+0x1121c>
   22604:	movw	lr, #16696	; 0x4138
   22608:	movt	lr, #9
   2260c:	ldr	r1, [lr]
   22610:	bl	113d4 <fputs@plt>
   22614:	ldrd	r2, [sp, #112]	; 0x70
   22618:	orrs	r0, r2, r3
   2261c:	bne	22af0 <__assert_fail@plt+0x116ec>
   22620:	ldr	r3, [r6]
   22624:	mov	r1, #1
   22628:	mov	r2, #4
   2262c:	movw	r0, #7896	; 0x1ed8
   22630:	movt	r0, #6
   22634:	bl	111b8 <fwrite@plt>
   22638:	mov	r2, #4
   2263c:	ldrd	r0, [fp, #8]
   22640:	bl	16c84 <__assert_fail@plt+0x5880>
   22644:	ldr	r1, [r6]
   22648:	mov	r0, #45	; 0x2d
   2264c:	bl	11380 <fputc@plt>
   22650:	ldrd	r0, [fp, #24]
   22654:	mov	r2, #4
   22658:	bl	16c84 <__assert_fail@plt+0x5880>
   2265c:	ldr	r2, [fp, #40]	; 0x28
   22660:	ldr	r3, [sp, #144]	; 0x90
   22664:	movw	r1, #7904	; 0x1ee0
   22668:	mov	r0, #1
   2266c:	movt	r1, #6
   22670:	rsb	r2, r3, r2
   22674:	bl	1132c <__printf_chk@plt>
   22678:	ldr	ip, [sp, #128]	; 0x80
   2267c:	cmp	ip, #0
   22680:	beq	22590 <__assert_fail@plt+0x1118c>
   22684:	ldrh	r3, [fp, #32]
   22688:	cmp	r3, #0
   2268c:	bne	22444 <__assert_fail@plt+0x11040>
   22690:	ldrd	r2, [fp, #40]	; 0x28
   22694:	mov	r1, #0
   22698:	ldrd	r8, [sp, #136]	; 0x88
   2269c:	ldr	r0, [sp, #132]	; 0x84
   226a0:	mov	r4, r2
   226a4:	mov	r5, r3
   226a8:	subs	r4, r4, r8
   226ac:	sbc	r5, r5, r9
   226b0:	cmp	r5, r1
   226b4:	cmpeq	r4, r0
   226b8:	bcc	224a4 <__assert_fail@plt+0x110a0>
   226bc:	mov	r2, #5
   226c0:	movw	r1, #7924	; 0x1ef4
   226c4:	mov	r0, #0
   226c8:	movt	r1, #6
   226cc:	bl	11170 <dcgettext@plt>
   226d0:	ldr	r3, [sp, #120]	; 0x78
   226d4:	ldr	r1, [fp, #40]	; 0x28
   226d8:	rsb	r3, r3, fp
   226dc:	asr	r3, r3, #4
   226e0:	add	r2, r3, r3, lsl #2
   226e4:	add	r2, r2, r2, lsl #4
   226e8:	add	r2, r2, r2, lsl #8
   226ec:	add	r2, r2, r2, lsl #16
   226f0:	add	r2, r3, r2, lsl #1
   226f4:	bl	4b9ec <warn@@Base>
   226f8:	b	22590 <__assert_fail@plt+0x1118c>
   226fc:	ldr	r0, [sp, #84]	; 0x54
   22700:	bl	1d2ec <__assert_fail@plt+0xbee8>
   22704:	cmp	r0, #0
   22708:	beq	22340 <__assert_fail@plt+0x10f3c>
   2270c:	ldr	lr, [r4, #60]	; 0x3c
   22710:	ldr	ip, [r4, #1896]	; 0x768
   22714:	ldrd	r8, [fp, #32]
   22718:	rsb	lr, lr, lr, lsl #3
   2271c:	add	lr, ip, lr, lsl #3
   22720:	cmp	lr, ip
   22724:	bhi	22738 <__assert_fail@plt+0x11334>
   22728:	b	21f68 <__assert_fail@plt+0x10b64>
   2272c:	add	ip, ip, #56	; 0x38
   22730:	cmp	lr, ip
   22734:	bls	21f68 <__assert_fail@plt+0x10b64>
   22738:	ldr	r3, [ip]
   2273c:	cmp	r3, #1
   22740:	bne	2272c <__assert_fail@plt+0x11328>
   22744:	ldrd	r2, [fp, #16]
   22748:	ldrd	r4, [ip, #16]
   2274c:	cmp	r3, r5
   22750:	cmpeq	r2, r4
   22754:	bcc	2272c <__assert_fail@plt+0x11328>
   22758:	ldrd	r0, [ip, #40]	; 0x28
   2275c:	adds	r2, r2, r8
   22760:	adc	r3, r3, r9
   22764:	adds	r0, r0, r4
   22768:	adc	r1, r1, r5
   2276c:	cmp	r3, r1
   22770:	cmpeq	r2, r0
   22774:	bhi	2272c <__assert_fail@plt+0x11328>
   22778:	strd	r4, [sp, #144]	; 0x90
   2277c:	b	21f68 <__assert_fail@plt+0x10b64>
   22780:	movw	r1, #50896	; 0xc6d0
   22784:	mov	r2, #5
   22788:	movt	r1, #5
   2278c:	bl	11170 <dcgettext@plt>
   22790:	b	21c20 <__assert_fail@plt+0x1081c>
   22794:	mov	r2, #5
   22798:	movw	r1, #7804	; 0x1e7c
   2279c:	mov	r0, #0
   227a0:	movt	r1, #6
   227a4:	bl	11170 <dcgettext@plt>
   227a8:	mov	r1, r5
   227ac:	bl	4b9ec <warn@@Base>
   227b0:	ldr	r5, [sp, #112]	; 0x70
   227b4:	ldr	r6, [sp, #108]	; 0x6c
   227b8:	str	r5, [sp, #72]	; 0x48
   227bc:	b	2228c <__assert_fail@plt+0x10e88>
   227c0:	movw	r1, #50908	; 0xc6dc
   227c4:	mov	r2, #5
   227c8:	movt	r1, #5
   227cc:	mov	r0, #0
   227d0:	bl	11170 <dcgettext@plt>
   227d4:	b	21d2c <__assert_fail@plt+0x10928>
   227d8:	movw	r1, #50908	; 0xc6dc
   227dc:	mov	r2, #5
   227e0:	movt	r1, #5
   227e4:	bl	11170 <dcgettext@plt>
   227e8:	b	21d58 <__assert_fail@plt+0x10954>
   227ec:	mov	r2, #5
   227f0:	movw	r1, #50888	; 0xc6c8
   227f4:	mov	r0, r4
   227f8:	movt	r1, #5
   227fc:	bl	11170 <dcgettext@plt>
   22800:	movw	r1, #7608	; 0x1db8
   22804:	mov	r2, #23
   22808:	movt	r1, #6
   2280c:	bl	113e0 <strncmp@plt>
   22810:	cmp	r0, #0
   22814:	bne	21d6c <__assert_fail@plt+0x10968>
   22818:	movw	r1, #50888	; 0xc6c8
   2281c:	mov	r2, #5
   22820:	movt	r1, #5
   22824:	bl	11170 <dcgettext@plt>
   22828:	b	21d58 <__assert_fail@plt+0x10954>
   2282c:	mov	r2, #5
   22830:	mov	r0, r8
   22834:	movw	r1, #50896	; 0xc6d0
   22838:	movt	r1, #5
   2283c:	bl	11170 <dcgettext@plt>
   22840:	movw	r1, #7608	; 0x1db8
   22844:	mov	r2, #23
   22848:	movt	r1, #6
   2284c:	bl	113e0 <strncmp@plt>
   22850:	cmp	r0, #0
   22854:	bne	21d6c <__assert_fail@plt+0x10968>
   22858:	movw	r1, #50896	; 0xc6d0
   2285c:	mov	r2, #5
   22860:	movt	r1, #5
   22864:	bl	11170 <dcgettext@plt>
   22868:	b	21d58 <__assert_fail@plt+0x10954>
   2286c:	ldr	r3, [fp]
   22870:	ldr	r2, [sl, #216]	; 0xd8
   22874:	cmp	r3, r2
   22878:	addcc	r0, r5, r3
   2287c:	bcs	22b5c <__assert_fail@plt+0x11758>
   22880:	movw	r1, #7632	; 0x1dd0
   22884:	mov	r2, #13
   22888:	movt	r1, #6
   2288c:	bl	113e0 <strncmp@plt>
   22890:	cmp	r0, #0
   22894:	bne	22c7c <__assert_fail@plt+0x11878>
   22898:	ldr	r3, [fp]
   2289c:	ldr	r2, [sl, #216]	; 0xd8
   228a0:	cmp	r3, r2
   228a4:	addcc	r0, r5, r3
   228a8:	bcs	22bf8 <__assert_fail@plt+0x117f4>
   228ac:	add	r7, r0, #13
   228b0:	ldr	r3, [sl, #68]	; 0x44
   228b4:	cmp	r3, #0
   228b8:	beq	21d8c <__assert_fail@plt+0x10988>
   228bc:	cmp	r4, #0
   228c0:	movw	r6, #16712	; 0x4148
   228c4:	add	r9, r4, #72	; 0x48
   228c8:	movt	r6, #9
   228cc:	mov	r5, #0
   228d0:	beq	22954 <__assert_fail@plt+0x11550>
   228d4:	ldr	r8, [sl, #212]	; 0xd4
   228d8:	cmp	r8, #0
   228dc:	beq	22a3c <__assert_fail@plt+0x11638>
   228e0:	ldr	r3, [r9, #-72]	; 0xffffffb8
   228e4:	ldr	r2, [r6, #216]	; 0xd8
   228e8:	cmp	r3, r2
   228ec:	addcc	r0, r8, r3
   228f0:	bcs	22a10 <__assert_fail@plt+0x1160c>
   228f4:	movw	r1, #7564	; 0x1d8c
   228f8:	mov	r2, #18
   228fc:	movt	r1, #6
   22900:	bl	113e0 <strncmp@plt>
   22904:	cmp	r0, #0
   22908:	bne	22934 <__assert_fail@plt+0x11530>
   2290c:	ldr	r3, [r9, #-72]	; 0xffffffb8
   22910:	ldr	r2, [sl, #216]	; 0xd8
   22914:	cmp	r3, r2
   22918:	addcc	r0, r8, r3
   2291c:	bcs	22a28 <__assert_fail@plt+0x11624>
   22920:	add	r0, r0, #18
   22924:	mov	r1, r7
   22928:	bl	110f8 <strcmp@plt>
   2292c:	cmp	r0, #0
   22930:	beq	22a04 <__assert_fail@plt+0x11600>
   22934:	ldr	r3, [sl, #68]	; 0x44
   22938:	add	r5, r5, #1
   2293c:	add	r4, r4, #72	; 0x48
   22940:	add	r9, r9, #72	; 0x48
   22944:	cmp	r3, r5
   22948:	bls	21d84 <__assert_fail@plt+0x10980>
   2294c:	cmp	r4, #0
   22950:	bne	228d4 <__assert_fail@plt+0x114d0>
   22954:	mov	r2, #5
   22958:	movw	r1, #50888	; 0xc6c8
   2295c:	mov	r0, r4
   22960:	movt	r1, #5
   22964:	bl	11170 <dcgettext@plt>
   22968:	movw	r1, #7564	; 0x1d8c
   2296c:	mov	r2, #18
   22970:	movt	r1, #6
   22974:	bl	113e0 <strncmp@plt>
   22978:	cmp	r0, #0
   2297c:	bne	22934 <__assert_fail@plt+0x11530>
   22980:	movw	r1, #50888	; 0xc6c8
   22984:	mov	r2, #5
   22988:	movt	r1, #5
   2298c:	bl	11170 <dcgettext@plt>
   22990:	b	22920 <__assert_fail@plt+0x1151c>
   22994:	mov	r0, ip
   22998:	mov	r2, #5
   2299c:	movw	r1, #7848	; 0x1ea8
   229a0:	movt	r1, #6
   229a4:	bl	11170 <dcgettext@plt>
   229a8:	mov	r1, sl
   229ac:	bl	4b9ec <warn@@Base>
   229b0:	ldr	r5, [sp, #112]	; 0x70
   229b4:	ldr	r6, [sp, #108]	; 0x6c
   229b8:	str	r5, [sp, #72]	; 0x48
   229bc:	b	2228c <__assert_fail@plt+0x10e88>
   229c0:	ldr	lr, [sp, #120]	; 0x78
   229c4:	lsl	ip, sl, #4
   229c8:	ldrd	r0, [r9, #-8]
   229cc:	ldr	r5, [r3, #24]
   229d0:	add	r4, lr, ip
   229d4:	ldrd	r2, [r3]
   229d8:	adds	r2, r2, r0
   229dc:	strh	r5, [lr, ip]
   229e0:	adc	r3, r3, r1
   229e4:	strd	r2, [r4, #8]
   229e8:	b	2228c <__assert_fail@plt+0x10e88>
   229ec:	movw	r1, #50908	; 0xc6dc
   229f0:	mov	r2, #5
   229f4:	movt	r1, #5
   229f8:	mov	r0, #0
   229fc:	bl	11170 <dcgettext@plt>
   22a00:	b	21cb0 <__assert_fail@plt+0x108ac>
   22a04:	ldr	r3, [sl, #68]	; 0x44
   22a08:	mov	r6, r4
   22a0c:	b	21e48 <__assert_fail@plt+0x10a44>
   22a10:	movw	r1, #50908	; 0xc6dc
   22a14:	mov	r2, #5
   22a18:	movt	r1, #5
   22a1c:	mov	r0, #0
   22a20:	bl	11170 <dcgettext@plt>
   22a24:	b	228f4 <__assert_fail@plt+0x114f0>
   22a28:	movw	r1, #50908	; 0xc6dc
   22a2c:	mov	r2, #5
   22a30:	movt	r1, #5
   22a34:	bl	11170 <dcgettext@plt>
   22a38:	b	22920 <__assert_fail@plt+0x1151c>
   22a3c:	mov	r2, #5
   22a40:	mov	r0, r8
   22a44:	movw	r1, #50896	; 0xc6d0
   22a48:	movt	r1, #5
   22a4c:	bl	11170 <dcgettext@plt>
   22a50:	movw	r1, #7564	; 0x1d8c
   22a54:	mov	r2, #18
   22a58:	movt	r1, #6
   22a5c:	bl	113e0 <strncmp@plt>
   22a60:	cmp	r0, #0
   22a64:	bne	22934 <__assert_fail@plt+0x11530>
   22a68:	movw	r1, #50896	; 0xc6d0
   22a6c:	mov	r2, #5
   22a70:	movt	r1, #5
   22a74:	bl	11170 <dcgettext@plt>
   22a78:	b	22920 <__assert_fail@plt+0x1151c>
   22a7c:	movw	r1, #23120	; 0x5a50
   22a80:	ldr	r2, [fp]
   22a84:	movt	r1, #6
   22a88:	mov	r0, #1
   22a8c:	bl	1132c <__printf_chk@plt>
   22a90:	b	21ef4 <__assert_fail@plt+0x10af0>
   22a94:	ldr	r5, [sp, #48]	; 0x30
   22a98:	ldr	r4, [r7]
   22a9c:	ldr	r2, [sp, #128]	; 0x80
   22aa0:	add	r0, r5, #8
   22aa4:	ldr	r3, [sp, #132]	; 0x84
   22aa8:	mla	r4, r4, r8, r5
   22aac:	add	r3, r2, r3
   22ab0:	ldr	ip, [sp, #68]	; 0x44
   22ab4:	add	r4, r4, #8
   22ab8:	cmp	r4, r3
   22abc:	movcs	r4, r3
   22ac0:	str	ip, [sp, #104]	; 0x68
   22ac4:	cmp	r0, r4
   22ac8:	bcs	22590 <__assert_fail@plt+0x1118c>
   22acc:	mov	r1, ip
   22ad0:	b	22ad8 <__assert_fail@plt+0x116d4>
   22ad4:	ldr	r1, [sp, #104]	; 0x68
   22ad8:	add	r2, sp, #104	; 0x68
   22adc:	mov	r3, r4
   22ae0:	bl	38744 <__assert_fail@plt+0x27340>
   22ae4:	cmp	r0, r4
   22ae8:	bcc	22ad4 <__assert_fail@plt+0x116d0>
   22aec:	b	22590 <__assert_fail@plt+0x1118c>
   22af0:	movw	r1, #6728	; 0x1a48
   22af4:	mov	r0, #1
   22af8:	movt	r1, #6
   22afc:	bl	1132c <__printf_chk@plt>
   22b00:	b	22620 <__assert_fail@plt+0x1121c>
   22b04:	ldr	sl, [sp, #80]	; 0x50
   22b08:	ldr	r0, [sp, #160]	; 0xa0
   22b0c:	bl	1111c <free@plt>
   22b10:	ldr	r0, [sp, #120]	; 0x78
   22b14:	b	22344 <__assert_fail@plt+0x10f40>
   22b18:	ldr	r4, [sp, #80]	; 0x50
   22b1c:	ldr	r1, [sp, #120]	; 0x78
   22b20:	ldr	ip, [r3, #24]
   22b24:	add	sl, r1, sl, lsl #4
   22b28:	ldrd	r2, [r4, r7]
   22b2c:	ldrd	r0, [r9, #-8]
   22b30:	strh	ip, [sl, #16]
   22b34:	adds	r2, r2, r0
   22b38:	adc	r3, r3, r1
   22b3c:	strd	r2, [sl, #24]
   22b40:	b	2228c <__assert_fail@plt+0x10e88>
   22b44:	ldr	r8, [sp, #96]	; 0x60
   22b48:	ldr	fp, [sp, #100]	; 0x64
   22b4c:	ldr	sl, [sp, #88]	; 0x58
   22b50:	ldr	r0, [sp, #72]	; 0x48
   22b54:	bl	1111c <free@plt>
   22b58:	b	22100 <__assert_fail@plt+0x10cfc>
   22b5c:	movw	r1, #50908	; 0xc6dc
   22b60:	mov	r2, #5
   22b64:	movt	r1, #5
   22b68:	mov	r0, #0
   22b6c:	bl	11170 <dcgettext@plt>
   22b70:	b	22880 <__assert_fail@plt+0x1147c>
   22b74:	movw	r1, #50908	; 0xc6dc
   22b78:	mov	r2, #5
   22b7c:	movt	r1, #5
   22b80:	bl	11170 <dcgettext@plt>
   22b84:	b	21ce4 <__assert_fail@plt+0x108e0>
   22b88:	ldr	r5, [sp, #56]	; 0x38
   22b8c:	b	21bc8 <__assert_fail@plt+0x107c4>
   22b90:	ldr	r2, [fp]
   22b94:	movw	r1, #23120	; 0x5a50
   22b98:	mov	r0, #1
   22b9c:	movt	r1, #6
   22ba0:	bl	1132c <__printf_chk@plt>
   22ba4:	b	21dd4 <__assert_fail@plt+0x109d0>
   22ba8:	bl	15a6c <__assert_fail@plt+0x4668>
   22bac:	b	21aa0 <__assert_fail@plt+0x1069c>
   22bb0:	andeq	r4, r5, r0, lsr #31
   22bb4:	mov	r2, #5
   22bb8:	movw	r1, #50896	; 0xc6d0
   22bbc:	mov	r0, r5
   22bc0:	movt	r1, #5
   22bc4:	bl	11170 <dcgettext@plt>
   22bc8:	movw	r1, #7584	; 0x1da0
   22bcc:	mov	r2, #22
   22bd0:	movt	r1, #6
   22bd4:	bl	113e0 <strncmp@plt>
   22bd8:	cmp	r0, #0
   22bdc:	bne	22c0c <__assert_fail@plt+0x11808>
   22be0:	movw	r1, #50896	; 0xc6d0
   22be4:	mov	r2, #5
   22be8:	movt	r1, #5
   22bec:	mov	r0, #0
   22bf0:	bl	11170 <dcgettext@plt>
   22bf4:	b	21ce4 <__assert_fail@plt+0x108e0>
   22bf8:	movw	r1, #50908	; 0xc6dc
   22bfc:	mov	r2, #5
   22c00:	movt	r1, #5
   22c04:	bl	11170 <dcgettext@plt>
   22c08:	b	228ac <__assert_fail@plt+0x114a8>
   22c0c:	mov	r2, #5
   22c10:	mov	r0, r5
   22c14:	movw	r1, #50896	; 0xc6d0
   22c18:	movt	r1, #5
   22c1c:	bl	11170 <dcgettext@plt>
   22c20:	movw	r1, #7632	; 0x1dd0
   22c24:	mov	r2, #13
   22c28:	movt	r1, #6
   22c2c:	bl	113e0 <strncmp@plt>
   22c30:	cmp	r0, #0
   22c34:	bne	22c7c <__assert_fail@plt+0x11878>
   22c38:	movw	r1, #50896	; 0xc6d0
   22c3c:	mov	r2, #5
   22c40:	movt	r1, #5
   22c44:	bl	11170 <dcgettext@plt>
   22c48:	b	228ac <__assert_fail@plt+0x114a8>
   22c4c:	mov	r2, #5
   22c50:	movw	r1, #7468	; 0x1d2c
   22c54:	mov	r0, #0
   22c58:	movt	r1, #6
   22c5c:	bl	11170 <dcgettext@plt>
   22c60:	mov	r8, #0
   22c64:	mov	r1, r0
   22c68:	mov	r0, #1
   22c6c:	bl	1132c <__printf_chk@plt>
   22c70:	b	21b3c <__assert_fail@plt+0x10738>
   22c74:	mov	r4, lr
   22c78:	b	223f0 <__assert_fail@plt+0x10fec>
   22c7c:	movw	r7, #25084	; 0x61fc
   22c80:	movt	r7, #7
   22c84:	b	228b0 <__assert_fail@plt+0x114ac>
   22c88:	mov	r4, r0
   22c8c:	ldr	r0, [sp, #120]	; 0x78
   22c90:	bl	1111c <free@plt>
   22c94:	str	r4, [sp, #120]	; 0x78
   22c98:	str	r4, [sp, #124]	; 0x7c
   22c9c:	b	22350 <__assert_fail@plt+0x10f4c>
   22ca0:	bl	1117c <__stack_chk_fail@plt>
   22ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ca8:	movw	ip, #16680	; 0x4128
   22cac:	sub	sp, sp, #124	; 0x7c
   22cb0:	movt	ip, #9
   22cb4:	cmp	r1, #0
   22cb8:	mov	r6, r0
   22cbc:	str	ip, [sp, #36]	; 0x24
   22cc0:	str	r2, [sp, #52]	; 0x34
   22cc4:	ldr	r2, [ip]
   22cc8:	ldr	ip, [sp, #164]	; 0xa4
   22ccc:	str	r3, [sp, #40]	; 0x28
   22cd0:	str	r2, [sp, #116]	; 0x74
   22cd4:	str	ip, [sp, #28]
   22cd8:	ldr	ip, [sp, #172]	; 0xac
   22cdc:	ldr	r7, [sp, #168]	; 0xa8
   22ce0:	str	ip, [sp, #44]	; 0x2c
   22ce4:	ldr	ip, [sp, #176]	; 0xb0
   22ce8:	str	ip, [sp, #48]	; 0x30
   22cec:	beq	22f08 <__assert_fail@plt+0x11b04>
   22cf0:	movw	r5, #24896	; 0x6140
   22cf4:	movw	r3, #63776	; 0xf920
   22cf8:	movt	r5, #9
   22cfc:	movt	r3, #65535	; 0xffff
   22d00:	ldrd	r2, [r3, r5]
   22d04:	orrs	r1, r2, r3
   22d08:	beq	22f08 <__assert_fail@plt+0x11b04>
   22d0c:	ldr	ip, [sp, #160]	; 0xa0
   22d10:	mov	r9, #0
   22d14:	str	r9, [sp, #4]
   22d18:	mov	sl, #2
   22d1c:	add	r4, ip, #1
   22d20:	mov	fp, #0
   22d24:	lsl	r4, r4, #1
   22d28:	str	r4, [sp]
   22d2c:	bl	1d67c <__assert_fail@plt+0xc278>
   22d30:	mov	r2, #5
   22d34:	movw	r1, #8052	; 0x1f74
   22d38:	movt	r1, #6
   22d3c:	mov	r8, r0
   22d40:	mov	r0, r9
   22d44:	bl	11170 <dcgettext@plt>
   22d48:	sub	r2, r4, #2
   22d4c:	add	r2, r8, r2
   22d50:	mov	r9, #1
   22d54:	mov	r8, #0
   22d58:	strd	sl, [sp]
   22d5c:	str	r9, [sp, #8]
   22d60:	mov	r1, r6
   22d64:	str	r8, [sp, #12]
   22d68:	str	r0, [sp, #16]
   22d6c:	add	r0, sp, #112	; 0x70
   22d70:	bl	1502c <__assert_fail@plt+0x3c28>
   22d74:	cmp	r0, r8
   22d78:	beq	22f08 <__assert_fail@plt+0x11b04>
   22d7c:	movw	r4, #26492	; 0x677c
   22d80:	movt	r4, #9
   22d84:	add	r0, sp, #112	; 0x70
   22d88:	mov	r1, #2
   22d8c:	ldr	r3, [r4]
   22d90:	blx	r3
   22d94:	uxth	ip, r0
   22d98:	mov	fp, r0
   22d9c:	cmp	ip, r9
   22da0:	str	ip, [sp, #24]
   22da4:	bls	22f08 <__assert_fail@plt+0x11b04>
   22da8:	ldr	r3, [r7]
   22dac:	cmp	r3, r8
   22db0:	bne	22f58 <__assert_fail@plt+0x11b54>
   22db4:	movw	r3, #63664	; 0xf8b0
   22db8:	movt	r3, #65535	; 0xffff
   22dbc:	ldrd	r2, [r3, r5]
   22dc0:	orrs	r1, r2, r3
   22dc4:	beq	22f08 <__assert_fail@plt+0x11b04>
   22dc8:	mov	r8, #16
   22dcc:	mov	r7, #0
   22dd0:	str	r8, [sp]
   22dd4:	mov	r0, r6
   22dd8:	str	r7, [sp, #4]
   22ddc:	bl	1d67c <__assert_fail@plt+0xc278>
   22de0:	str	r0, [sp, #28]
   22de4:	mov	r2, #5
   22de8:	movw	r1, #5736	; 0x1668
   22dec:	mov	r0, #0
   22df0:	movt	r1, #6
   22df4:	bl	11170 <dcgettext@plt>
   22df8:	mov	r2, #1
   22dfc:	mov	r3, #0
   22e00:	str	r8, [sp]
   22e04:	strd	r2, [sp, #8]
   22e08:	mov	r1, r6
   22e0c:	str	r7, [sp, #4]
   22e10:	ldr	r2, [sp, #28]
   22e14:	str	r0, [sp, #16]
   22e18:	add	r0, sp, #76	; 0x4c
   22e1c:	bl	1502c <__assert_fail@plt+0x3c28>
   22e20:	cmp	r0, #0
   22e24:	beq	22f08 <__assert_fail@plt+0x11b04>
   22e28:	ldr	r3, [r4]
   22e2c:	add	r0, sp, #84	; 0x54
   22e30:	mov	r1, #4
   22e34:	add	r9, sp, #92	; 0x5c
   22e38:	blx	r3
   22e3c:	ldr	ip, [sp, #28]
   22e40:	ldr	r3, [r4]
   22e44:	mov	r1, #4
   22e48:	add	r5, ip, r0
   22e4c:	add	r0, sp, #88	; 0x58
   22e50:	blx	r3
   22e54:	str	r0, [sp, #32]
   22e58:	b	22eac <__assert_fail@plt+0x11aa8>
   22e5c:	ldr	r3, [r4]
   22e60:	add	r0, sp, #98	; 0x62
   22e64:	mov	r1, #2
   22e68:	blx	r3
   22e6c:	ldr	r2, [r4]
   22e70:	mov	r1, #4
   22e74:	uxth	fp, r0
   22e78:	add	r0, sp, #104	; 0x68
   22e7c:	blx	r2
   22e80:	ldr	r2, [r4]
   22e84:	mov	r1, #4
   22e88:	mov	sl, r0
   22e8c:	add	r0, sp, #100	; 0x64
   22e90:	blx	r2
   22e94:	ldr	ip, [sp, #24]
   22e98:	add	r5, r5, sl
   22e9c:	cmp	ip, fp
   22ea0:	beq	22f28 <__assert_fail@plt+0x11b24>
   22ea4:	cmp	sl, #0
   22ea8:	beq	22ef0 <__assert_fail@plt+0x11aec>
   22eac:	mov	r2, #5
   22eb0:	movw	r1, #8068	; 0x1f84
   22eb4:	mov	r0, #0
   22eb8:	movt	r1, #6
   22ebc:	bl	11170 <dcgettext@plt>
   22ec0:	mov	r2, #1
   22ec4:	mov	r3, #0
   22ec8:	str	r8, [sp]
   22ecc:	strd	r2, [sp, #8]
   22ed0:	mov	r1, r6
   22ed4:	str	r7, [sp, #4]
   22ed8:	mov	r2, r5
   22edc:	str	r0, [sp, #16]
   22ee0:	mov	r0, r9
   22ee4:	bl	1502c <__assert_fail@plt+0x3c28>
   22ee8:	cmp	r0, #0
   22eec:	bne	22e5c <__assert_fail@plt+0x11a58>
   22ef0:	ldr	r3, [sp, #32]
   22ef4:	ldr	ip, [sp, #28]
   22ef8:	cmp	r3, #0
   22efc:	add	ip, ip, r3
   22f00:	str	ip, [sp, #28]
   22f04:	bne	22de4 <__assert_fail@plt+0x119e0>
   22f08:	mov	r0, #0
   22f0c:	ldr	ip, [sp, #36]	; 0x24
   22f10:	ldr	r2, [sp, #116]	; 0x74
   22f14:	ldr	r3, [ip]
   22f18:	cmp	r2, r3
   22f1c:	bne	2313c <__assert_fail@plt+0x11d38>
   22f20:	add	sp, sp, #124	; 0x7c
   22f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22f28:	ldr	ip, [sp, #40]	; 0x28
   22f2c:	mov	r3, #0
   22f30:	ldr	r1, [sp, #48]	; 0x30
   22f34:	cmp	ip, r0
   22f38:	ldr	ip, [sp, #44]	; 0x2c
   22f3c:	str	r3, [ip]
   22f40:	ldr	ip, [sp, #24]
   22f44:	strh	ip, [r1]
   22f48:	bls	2310c <__assert_fail@plt+0x11d08>
   22f4c:	ldr	ip, [sp, #52]	; 0x34
   22f50:	add	r0, ip, r0
   22f54:	b	22f0c <__assert_fail@plt+0x11b08>
   22f58:	movw	r3, #32769	; 0x8001
   22f5c:	cmp	ip, r3
   22f60:	beq	22db4 <__assert_fail@plt+0x119b0>
   22f64:	movw	r3, #63680	; 0xf8c0
   22f68:	movt	r3, #65535	; 0xffff
   22f6c:	ldrd	r2, [r3, r5]
   22f70:	orrs	r1, r2, r3
   22f74:	beq	22db4 <__assert_fail@plt+0x119b0>
   22f78:	ldr	lr, [sp, #24]
   22f7c:	mov	ip, #20
   22f80:	str	r8, [sp, #4]
   22f84:	mov	r0, r6
   22f88:	str	ip, [sp]
   22f8c:	ubfx	lr, lr, #0, #15
   22f90:	str	ip, [sp, #60]	; 0x3c
   22f94:	str	lr, [sp, #56]	; 0x38
   22f98:	add	lr, sp, #92	; 0x5c
   22f9c:	str	lr, [sp, #32]
   22fa0:	bl	1d67c <__assert_fail@plt+0xc278>
   22fa4:	str	fp, [sp, #68]	; 0x44
   22fa8:	mov	fp, r8
   22fac:	str	r5, [sp, #64]	; 0x40
   22fb0:	mov	r7, r0
   22fb4:	b	23010 <__assert_fail@plt+0x11c0c>
   22fb8:	ldr	r3, [r4]
   22fbc:	add	r0, sp, #96	; 0x60
   22fc0:	mov	r1, #2
   22fc4:	blx	r3
   22fc8:	ldr	r3, [r4]
   22fcc:	mov	r1, #4
   22fd0:	mov	r5, r0
   22fd4:	add	r0, sp, #104	; 0x68
   22fd8:	blx	r3
   22fdc:	ldr	r3, [r4]
   22fe0:	mov	r1, #4
   22fe4:	mov	sl, r0
   22fe8:	add	r0, sp, #108	; 0x6c
   22fec:	blx	r3
   22ff0:	ldr	ip, [sp, #56]	; 0x38
   22ff4:	uxth	r2, r5
   22ff8:	cmp	r2, ip
   22ffc:	add	r1, r0, r7
   23000:	beq	2312c <__assert_fail@plt+0x11d28>
   23004:	cmp	r0, #0
   23008:	beq	23124 <__assert_fail@plt+0x11d20>
   2300c:	mov	r7, r1
   23010:	mov	r2, #5
   23014:	movw	r1, #5776	; 0x1690
   23018:	mov	r0, #0
   2301c:	movt	r1, #6
   23020:	bl	11170 <dcgettext@plt>
   23024:	ldr	ip, [sp, #60]	; 0x3c
   23028:	str	r8, [sp, #4]
   2302c:	mov	r1, r6
   23030:	str	r9, [sp, #8]
   23034:	mov	r2, r7
   23038:	str	ip, [sp]
   2303c:	str	fp, [sp, #12]
   23040:	str	r0, [sp, #16]
   23044:	ldr	r0, [sp, #32]
   23048:	bl	1502c <__assert_fail@plt+0x3c28>
   2304c:	cmp	r0, #0
   23050:	bne	22fb8 <__assert_fail@plt+0x11bb4>
   23054:	ldr	ip, [sp, #56]	; 0x38
   23058:	ldr	fp, [sp, #68]	; 0x44
   2305c:	cmp	ip, #0
   23060:	ldr	r5, [sp, #64]	; 0x40
   23064:	moveq	r8, ip
   23068:	bne	22db4 <__assert_fail@plt+0x119b0>
   2306c:	mov	r2, #5
   23070:	movw	r1, #5788	; 0x169c
   23074:	mov	r0, #0
   23078:	movt	r1, #6
   2307c:	bl	11170 <dcgettext@plt>
   23080:	mov	r9, #0
   23084:	add	r2, r7, r8
   23088:	mov	r1, r6
   2308c:	mov	r8, #8
   23090:	strd	r8, [sp]
   23094:	mov	r8, #1
   23098:	mov	r9, #0
   2309c:	strd	r8, [sp, #8]
   230a0:	str	r0, [sp, #16]
   230a4:	ldr	r0, [sp, #32]
   230a8:	bl	1502c <__assert_fail@plt+0x3c28>
   230ac:	cmp	r0, #0
   230b0:	beq	22db4 <__assert_fail@plt+0x119b0>
   230b4:	ldr	r3, [r4]
   230b8:	mov	r1, #4
   230bc:	ldr	r0, [sp, #32]
   230c0:	blx	r3
   230c4:	ldr	ip, [sp, #28]
   230c8:	ldr	r3, [ip]
   230cc:	cmp	r0, r3
   230d0:	beq	22db4 <__assert_fail@plt+0x119b0>
   230d4:	tst	fp, #32768	; 0x8000
   230d8:	ldr	ip, [sp, #40]	; 0x28
   230dc:	moveq	r3, #2
   230e0:	movne	r3, #1
   230e4:	cmp	r0, ip
   230e8:	ldr	ip, [sp, #44]	; 0x2c
   230ec:	str	r3, [ip]
   230f0:	bcc	22f4c <__assert_fail@plt+0x11b48>
   230f4:	movw	r1, #50908	; 0xc6dc
   230f8:	mov	r2, #5
   230fc:	movt	r1, #5
   23100:	mov	r0, #0
   23104:	bl	11170 <dcgettext@plt>
   23108:	b	22f0c <__assert_fail@plt+0x11b08>
   2310c:	mov	r0, r3
   23110:	movw	r1, #50908	; 0xc6dc
   23114:	mov	r2, #5
   23118:	movt	r1, #5
   2311c:	bl	11170 <dcgettext@plt>
   23120:	b	22f0c <__assert_fail@plt+0x11b08>
   23124:	ldr	r5, [sp, #64]	; 0x40
   23128:	b	22db4 <__assert_fail@plt+0x119b0>
   2312c:	ldr	fp, [sp, #68]	; 0x44
   23130:	mov	r8, sl
   23134:	ldr	r5, [sp, #64]	; 0x40
   23138:	b	2306c <__assert_fail@plt+0x11c68>
   2313c:	bl	1117c <__stack_chk_fail@plt>
   23140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23144:	movw	ip, #16680	; 0x4128
   23148:	sub	sp, sp, #156	; 0x9c
   2314c:	movt	ip, #9
   23150:	mov	r4, r1
   23154:	str	ip, [sp, #52]	; 0x34
   23158:	str	r0, [sp, #84]	; 0x54
   2315c:	ldr	r0, [ip]
   23160:	ldr	ip, [sp, #204]	; 0xcc
   23164:	str	r2, [sp, #92]	; 0x5c
   23168:	cmn	ip, #1
   2316c:	ldr	ip, [sp, #196]	; 0xc4
   23170:	str	r3, [sp, #56]	; 0x38
   23174:	str	r0, [sp, #148]	; 0x94
   23178:	str	ip, [sp, #88]	; 0x58
   2317c:	beq	234f0 <__assert_fail@plt+0x120ec>
   23180:	ldr	ip, [sp, #204]	; 0xcc
   23184:	cmp	ip, #0
   23188:	beq	23270 <__assert_fail@plt+0x11e6c>
   2318c:	add	r3, sp, #92	; 0x5c
   23190:	ldr	r2, [sp, #92]	; 0x5c
   23194:	str	r3, [sp]
   23198:	mov	r1, r4
   2319c:	ldr	r0, [sp, #84]	; 0x54
   231a0:	add	r3, sp, #100	; 0x64
   231a4:	bl	166b0 <__assert_fail@plt+0x52ac>
   231a8:	cmp	r0, #0
   231ac:	beq	231f4 <__assert_fail@plt+0x11df0>
   231b0:	movw	r8, #16712	; 0x4148
   231b4:	movt	r8, #9
   231b8:	ldr	r0, [r8, #460]	; 0x1cc
   231bc:	cmp	r0, #0
   231c0:	beq	241e0 <__assert_fail@plt+0x12ddc>
   231c4:	movw	ip, #26444	; 0x674c
   231c8:	movt	ip, #9
   231cc:	str	ip, [sp, #44]	; 0x2c
   231d0:	ldr	r0, [ip]
   231d4:	cmp	r0, #0
   231d8:	beq	249e0 <__assert_fail@plt+0x135dc>
   231dc:	movw	r1, #9088	; 0x2380
   231e0:	mov	r0, #0
   231e4:	movt	r1, #6
   231e8:	b	232cc <__assert_fail@plt+0x11ec8>
   231ec:	ldr	r0, [sp, #100]	; 0x64
   231f0:	bl	1111c <free@plt>
   231f4:	ldr	ip, [sp, #52]	; 0x34
   231f8:	ldr	r2, [sp, #148]	; 0x94
   231fc:	ldr	r3, [ip]
   23200:	cmp	r2, r3
   23204:	bne	24f28 <__assert_fail@plt+0x13b24>
   23208:	add	sp, sp, #156	; 0x9c
   2320c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23210:	movw	r2, #9520	; 0x2530
   23214:	cmp	r3, r2
   23218:	beq	235c8 <__assert_fail@plt+0x121c4>
   2321c:	bls	23598 <__assert_fail@plt+0x12194>
   23220:	movw	r2, #41872	; 0xa390
   23224:	cmp	r3, r2
   23228:	beq	235c8 <__assert_fail@plt+0x121c4>
   2322c:	bhi	24b98 <__assert_fail@plt+0x13794>
   23230:	movw	r2, #30326	; 0x7676
   23234:	cmp	r3, r2
   23238:	beq	235c8 <__assert_fail@plt+0x121c4>
   2323c:	bhi	24c4c <__assert_fail@plt+0x13848>
   23240:	movw	r2, #21569	; 0x5441
   23244:	cmp	r3, r2
   23248:	beq	235c8 <__assert_fail@plt+0x121c4>
   2324c:	bls	24ee0 <__assert_fail@plt+0x13adc>
   23250:	movw	r2, #23205	; 0x5aa5
   23254:	cmp	r3, r2
   23258:	beq	23268 <__assert_fail@plt+0x11e64>
   2325c:	movw	r2, #30288	; 0x7650
   23260:	cmp	r3, r2
   23264:	bne	23548 <__assert_fail@plt+0x12144>
   23268:	mov	ip, #0
   2326c:	str	ip, [sp, #204]	; 0xcc
   23270:	add	r3, sp, #92	; 0x5c
   23274:	ldr	r2, [sp, #92]	; 0x5c
   23278:	str	r3, [sp]
   2327c:	mov	r1, r4
   23280:	ldr	r0, [sp, #84]	; 0x54
   23284:	add	r3, sp, #100	; 0x64
   23288:	bl	152d8 <__assert_fail@plt+0x3ed4>
   2328c:	cmp	r0, #0
   23290:	beq	231f4 <__assert_fail@plt+0x11df0>
   23294:	movw	r8, #16712	; 0x4148
   23298:	movt	r8, #9
   2329c:	ldr	r0, [r8, #460]	; 0x1cc
   232a0:	cmp	r0, #0
   232a4:	beq	24224 <__assert_fail@plt+0x12e20>
   232a8:	movw	ip, #26444	; 0x674c
   232ac:	movt	ip, #9
   232b0:	str	ip, [sp, #44]	; 0x2c
   232b4:	ldr	r0, [ip]
   232b8:	cmp	r0, #0
   232bc:	beq	24a00 <__assert_fail@plt+0x135fc>
   232c0:	movw	r1, #9232	; 0x2410
   232c4:	movt	r1, #6
   232c8:	mov	r0, #0
   232cc:	mov	r2, #5
   232d0:	bl	11170 <dcgettext@plt>
   232d4:	mov	r1, r0
   232d8:	mov	r0, #1
   232dc:	bl	1132c <__printf_chk@plt>
   232e0:	ldr	r3, [sp, #92]	; 0x5c
   232e4:	cmp	r3, #0
   232e8:	beq	231ec <__assert_fail@plt+0x11de8>
   232ec:	movw	ip, #16696	; 0x4138
   232f0:	mov	fp, #0
   232f4:	movt	ip, #9
   232f8:	str	ip, [sp, #48]	; 0x30
   232fc:	movw	ip, #8116	; 0x1fb4
   23300:	movt	ip, #6
   23304:	str	ip, [sp, #60]	; 0x3c
   23308:	movw	ip, #8092	; 0x1f9c
   2330c:	movt	ip, #6
   23310:	str	ip, [sp, #80]	; 0x50
   23314:	b	23470 <__assert_fail@plt+0x1206c>
   23318:	lsr	r0, r6, #8
   2331c:	mov	r2, sl
   23320:	orr	r1, r0, r9, lsl #24
   23324:	mov	r3, r6
   23328:	str	r1, [sp, #32]
   2332c:	mov	r0, #1
   23330:	movw	r1, #9712	; 0x25f0
   23334:	movt	r1, #6
   23338:	lsr	ip, r9, #8
   2333c:	uxtb	r5, r6
   23340:	str	ip, [sp, #36]	; 0x24
   23344:	bl	1132c <__printf_chk@plt>
   23348:	ldrh	r3, [r8, #50]	; 0x32
   2334c:	cmp	r3, #106	; 0x6a
   23350:	beq	24638 <__assert_fail@plt+0x13234>
   23354:	bls	23684 <__assert_fail@plt+0x12280>
   23358:	cmp	r3, #223	; 0xdf
   2335c:	beq	2461c <__assert_fail@plt+0x13218>
   23360:	bhi	23764 <__assert_fail@plt+0x12360>
   23364:	cmp	r3, #174	; 0xae
   23368:	beq	24998 <__assert_fail@plt+0x13594>
   2336c:	bhi	23a64 <__assert_fail@plt+0x12660>
   23370:	cmp	r3, #120	; 0x78
   23374:	beq	24698 <__assert_fail@plt+0x13294>
   23378:	bls	23d38 <__assert_fail@plt+0x12934>
   2337c:	cmp	r3, #140	; 0x8c
   23380:	beq	248e8 <__assert_fail@plt+0x134e4>
   23384:	bhi	24134 <__assert_fail@plt+0x12d30>
   23388:	cmp	r3, #135	; 0x87
   2338c:	beq	24928 <__assert_fail@plt+0x13524>
   23390:	cmp	r3, #138	; 0x8a
   23394:	bne	233a0 <__assert_fail@plt+0x11f9c>
   23398:	cmp	r5, #17
   2339c:	bls	24a94 <__assert_fail@plt+0x13690>
   233a0:	mov	r2, #5
   233a4:	movw	r1, #9968	; 0x26f0
   233a8:	mov	r0, #0
   233ac:	movt	r1, #6
   233b0:	bl	11170 <dcgettext@plt>
   233b4:	mov	r2, r5
   233b8:	mov	r7, #0
   233bc:	mov	r1, r0
   233c0:	mov	r0, #1
   233c4:	bl	1132c <__printf_chk@plt>
   233c8:	ldrd	r0, [sp, #32]
   233cc:	orrs	r1, r0, r1
   233d0:	beq	235d4 <__assert_fail@plt+0x121d0>
   233d4:	ldr	ip, [sp, #56]	; 0x38
   233d8:	cmp	ip, #0
   233dc:	beq	23400 <__assert_fail@plt+0x11ffc>
   233e0:	ldr	r0, [sp, #192]	; 0xc0
   233e4:	mov	r1, #0
   233e8:	mov	r3, r1
   233ec:	mov	r2, r0
   233f0:	ldrd	r0, [sp, #32]
   233f4:	cmp	r3, r1
   233f8:	cmpeq	r2, r0
   233fc:	bhi	238f0 <__assert_fail@plt+0x124ec>
   23400:	mov	r2, #5
   23404:	movw	r1, #9776	; 0x2630
   23408:	mov	r0, #0
   2340c:	movt	r1, #6
   23410:	bl	11170 <dcgettext@plt>
   23414:	ldr	r2, [sp, #32]
   23418:	mov	r1, r0
   2341c:	mov	r0, #1
   23420:	bl	1132c <__printf_chk@plt>
   23424:	ldrh	r3, [r8, #50]	; 0x32
   23428:	cmp	r3, #43	; 0x2b
   2342c:	beq	23644 <__assert_fail@plt+0x12240>
   23430:	ldr	ip, [sp, #48]	; 0x30
   23434:	mov	r0, #10
   23438:	ldr	r1, [ip]
   2343c:	bl	111ac <_IO_putc@plt>
   23440:	ldr	r2, [r8, #460]	; 0x1cc
   23444:	movw	r3, #16712	; 0x4148
   23448:	movt	r3, #9
   2344c:	cmp	r2, #0
   23450:	bne	23460 <__assert_fail@plt+0x1205c>
   23454:	ldrh	r3, [r3, #50]	; 0x32
   23458:	cmp	r3, #8
   2345c:	beq	23818 <__assert_fail@plt+0x12414>
   23460:	ldr	r3, [sp, #92]	; 0x5c
   23464:	add	fp, fp, #1
   23468:	cmp	r3, fp
   2346c:	bls	231ec <__assert_fail@plt+0x11de8>
   23470:	add	r1, fp, fp, lsl #1
   23474:	ldr	r2, [sp, #100]	; 0x64
   23478:	ldr	r4, [r8, #460]	; 0x1cc
   2347c:	lsl	ip, r1, #3
   23480:	str	ip, [sp, #40]	; 0x28
   23484:	add	r3, r2, ip
   23488:	cmp	r4, #0
   2348c:	ldr	sl, [r2, r1, lsl #3]
   23490:	ldr	r7, [r3, #4]
   23494:	ldr	r6, [r3, #8]
   23498:	ldr	r9, [r3, #12]
   2349c:	bne	23318 <__assert_fail@plt+0x11f14>
   234a0:	mov	r1, r9
   234a4:	mov	r0, r6
   234a8:	bl	18614 <__assert_fail@plt+0x7210>
   234ac:	ldr	ip, [sp, #44]	; 0x2c
   234b0:	mov	r2, sl
   234b4:	mov	r3, r7
   234b8:	str	r9, [sp, #32]
   234bc:	ldr	r1, [ip]
   234c0:	ldr	ip, [sp, #60]	; 0x3c
   234c4:	cmp	r1, #0
   234c8:	str	r6, [sp]
   234cc:	str	r9, [sp, #4]
   234d0:	str	r4, [sp, #36]	; 0x24
   234d4:	mov	r5, r0
   234d8:	ldr	r0, [sp, #80]	; 0x50
   234dc:	movne	ip, r0
   234e0:	mov	r0, #1
   234e4:	mov	r1, ip
   234e8:	bl	1132c <__printf_chk@plt>
   234ec:	b	23348 <__assert_fail@plt+0x11f44>
   234f0:	movw	r3, #16712	; 0x4148
   234f4:	movt	r3, #9
   234f8:	ldrh	r3, [r3, #50]	; 0x32
   234fc:	cmp	r3, #138	; 0x8a
   23500:	beq	235c8 <__assert_fail@plt+0x121c4>
   23504:	bhi	23210 <__assert_fail@plt+0x11e0c>
   23508:	cmp	r3, #50	; 0x32
   2350c:	beq	235c8 <__assert_fail@plt+0x121c4>
   23510:	bhi	2356c <__assert_fail@plt+0x12168>
   23514:	cmp	r3, #19
   23518:	beq	23268 <__assert_fail@plt+0x11e64>
   2351c:	bhi	24b68 <__assert_fail@plt+0x13764>
   23520:	cmp	r3, #6
   23524:	beq	23268 <__assert_fail@plt+0x11e64>
   23528:	bls	24c78 <__assert_fail@plt+0x13874>
   2352c:	cmp	r3, #8
   23530:	beq	23268 <__assert_fail@plt+0x11e64>
   23534:	bcc	235c8 <__assert_fail@plt+0x121c4>
   23538:	cmp	r3, #10
   2353c:	beq	23268 <__assert_fail@plt+0x11e64>
   23540:	cmp	r3, #18
   23544:	beq	235c8 <__assert_fail@plt+0x121c4>
   23548:	mov	r2, #5
   2354c:	movw	r1, #9028	; 0x2344
   23550:	mov	r0, #0
   23554:	movt	r1, #6
   23558:	bl	11170 <dcgettext@plt>
   2355c:	mov	ip, #0
   23560:	str	ip, [sp, #204]	; 0xcc
   23564:	bl	4b9ec <warn@@Base>
   23568:	b	23270 <__assert_fail@plt+0x11e6c>
   2356c:	cmp	r3, #94	; 0x5e
   23570:	bls	24b0c <__assert_fail@plt+0x13708>
   23574:	cmp	r3, #114	; 0x72
   23578:	bls	24d34 <__assert_fail@plt+0x13930>
   2357c:	cmp	r3, #120	; 0x78
   23580:	beq	235c8 <__assert_fail@plt+0x121c4>
   23584:	cmp	r3, #135	; 0x87
   23588:	beq	23268 <__assert_fail@plt+0x11e64>
   2358c:	cmp	r3, #115	; 0x73
   23590:	bne	23548 <__assert_fail@plt+0x12144>
   23594:	b	23268 <__assert_fail@plt+0x11e64>
   23598:	cmp	r3, #189	; 0xbd
   2359c:	bhi	24bd4 <__assert_fail@plt+0x137d0>
   235a0:	cmp	r3, #188	; 0xbc
   235a4:	bcs	235c8 <__assert_fail@plt+0x121c4>
   235a8:	cmp	r3, #174	; 0xae
   235ac:	bhi	24ce0 <__assert_fail@plt+0x138dc>
   235b0:	cmp	r3, #173	; 0xad
   235b4:	bcs	235c8 <__assert_fail@plt+0x121c4>
   235b8:	cmp	r3, #140	; 0x8c
   235bc:	beq	235c8 <__assert_fail@plt+0x121c4>
   235c0:	cmp	r3, #167	; 0xa7
   235c4:	bne	23548 <__assert_fail@plt+0x12144>
   235c8:	mov	ip, #1
   235cc:	str	ip, [sp, #204]	; 0xcc
   235d0:	b	2318c <__assert_fail@plt+0x11d88>
   235d4:	ldr	ip, [sp, #204]	; 0xcc
   235d8:	cmp	ip, #0
   235dc:	beq	23424 <__assert_fail@plt+0x12020>
   235e0:	ldr	r0, [sp, #40]	; 0x28
   235e4:	movw	r1, #5820	; 0x16bc
   235e8:	ldr	ip, [sp, #100]	; 0x64
   235ec:	movt	r1, #6
   235f0:	ldr	r2, [r8, #460]	; 0x1cc
   235f4:	mov	r3, #32
   235f8:	add	ip, ip, r0
   235fc:	mov	r0, #1
   23600:	cmp	r2, #0
   23604:	ldrd	r4, [ip, #16]
   23608:	moveq	r2, #20
   2360c:	movne	r2, #12
   23610:	bl	1132c <__printf_chk@plt>
   23614:	cmp	r4, #0
   23618:	sbcs	r1, r5, #0
   2361c:	blt	23c50 <__assert_fail@plt+0x1284c>
   23620:	mov	r3, r5
   23624:	mov	r2, r4
   23628:	movw	r1, #61508	; 0xf044
   2362c:	mov	r0, #1
   23630:	movt	r1, #5
   23634:	bl	1132c <__printf_chk@plt>
   23638:	ldrh	r3, [r8, #50]	; 0x32
   2363c:	cmp	r3, #43	; 0x2b
   23640:	bne	23430 <__assert_fail@plt+0x1202c>
   23644:	cmp	r7, #0
   23648:	beq	23430 <__assert_fail@plt+0x1202c>
   2364c:	mov	r0, r7
   23650:	movw	r1, #9916	; 0x26bc
   23654:	movt	r1, #6
   23658:	bl	110f8 <strcmp@plt>
   2365c:	cmp	r0, #0
   23660:	bne	23430 <__assert_fail@plt+0x1202c>
   23664:	lsr	r2, r6, #8
   23668:	movw	r1, #9932	; 0x26cc
   2366c:	eor	r2, r2, #8388608	; 0x800000
   23670:	movt	r1, #6
   23674:	sub	r2, r2, #8388608	; 0x800000
   23678:	mov	r0, #1
   2367c:	bl	1132c <__printf_chk@plt>
   23680:	b	23430 <__assert_fail@plt+0x1202c>
   23684:	cmp	r3, #48	; 0x30
   23688:	bhi	237c8 <__assert_fail@plt+0x123c4>
   2368c:	cmp	r3, #46	; 0x2e
   23690:	bcs	24568 <__assert_fail@plt+0x13164>
   23694:	cmp	r3, #18
   23698:	beq	24600 <__assert_fail@plt+0x131fc>
   2369c:	bls	23b14 <__assert_fail@plt+0x12710>
   236a0:	cmp	r3, #36	; 0x24
   236a4:	beq	24960 <__assert_fail@plt+0x1355c>
   236a8:	bhi	23ccc <__assert_fail@plt+0x128c8>
   236ac:	cmp	r3, #21
   236b0:	beq	24944 <__assert_fail@plt+0x13540>
   236b4:	bhi	24268 <__assert_fail@plt+0x12e64>
   236b8:	cmp	r3, #19
   236bc:	beq	2467c <__assert_fail@plt+0x13278>
   236c0:	cmp	r3, #20
   236c4:	bne	233a0 <__assert_fail@plt+0x11f9c>
   236c8:	cmp	r5, #255	; 0xff
   236cc:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   236d0:	movw	r3, #35500	; 0x8aac
   236d4:	movt	r3, #5
   236d8:	add	r3, r3, r5, lsl #2
   236dc:	ldr	r7, [r3, #-3636]	; 0xfffff1cc
   236e0:	cmp	r7, #0
   236e4:	beq	233a0 <__assert_fail@plt+0x11f9c>
   236e8:	ldr	ip, [sp, #44]	; 0x2c
   236ec:	movw	r2, #8948	; 0x22f4
   236f0:	movw	r3, #8936	; 0x22e8
   236f4:	movt	r2, #6
   236f8:	movt	r3, #6
   236fc:	mov	r0, #1
   23700:	ldr	r1, [ip]
   23704:	movw	r4, #16712	; 0x4148
   23708:	movt	r4, #9
   2370c:	cmp	r1, #0
   23710:	moveq	r1, r2
   23714:	movne	r1, r3
   23718:	mov	r2, r7
   2371c:	bl	1132c <__printf_chk@plt>
   23720:	ldrh	r2, [r8, #50]	; 0x32
   23724:	movw	r3, #36902	; 0x9026
   23728:	cmp	r2, r3
   2372c:	bne	233c8 <__assert_fail@plt+0x11fc4>
   23730:	movw	r1, #9728	; 0x2600
   23734:	mov	r0, r7
   23738:	movt	r1, #6
   2373c:	bl	110f8 <strcmp@plt>
   23740:	cmp	r0, #0
   23744:	bne	233c8 <__assert_fail@plt+0x11fc4>
   23748:	ldr	ip, [sp, #204]	; 0xcc
   2374c:	cmp	ip, #0
   23750:	bne	23c6c <__assert_fail@plt+0x12868>
   23754:	ldrd	r0, [sp, #32]
   23758:	orrs	r1, r0, r1
   2375c:	bne	233d4 <__assert_fail@plt+0x11fd0>
   23760:	b	23430 <__assert_fail@plt+0x1202c>
   23764:	movw	r2, #36902	; 0x9026
   23768:	cmp	r3, r2
   2376c:	beq	246b4 <__assert_fail@plt+0x132b0>
   23770:	bhi	23aa8 <__assert_fail@plt+0x126a4>
   23774:	movw	r2, #18056	; 0x4688
   23778:	cmp	r3, r2
   2377c:	beq	247c0 <__assert_fail@plt+0x133bc>
   23780:	bhi	23d68 <__assert_fail@plt+0x12964>
   23784:	movw	r2, #4643	; 0x1223
   23788:	cmp	r3, r2
   2378c:	beq	245a0 <__assert_fail@plt+0x1319c>
   23790:	bhi	242c0 <__assert_fail@plt+0x12ebc>
   23794:	sub	r2, r2, #460	; 0x1cc
   23798:	cmp	r3, r2
   2379c:	beq	24584 <__assert_fail@plt+0x13180>
   237a0:	add	r2, r2, #2
   237a4:	cmp	r3, r2
   237a8:	bne	233a0 <__assert_fail@plt+0x11f9c>
   237ac:	cmp	r5, #10
   237b0:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   237b4:	movw	r3, #27316	; 0x6ab4
   237b8:	movt	r3, #5
   237bc:	add	r3, r3, r5, lsl #2
   237c0:	ldr	r7, [r3, #3648]	; 0xe40
   237c4:	b	236e0 <__assert_fail@plt+0x122dc>
   237c8:	cmp	r3, #86	; 0x56
   237cc:	beq	247f8 <__assert_fail@plt+0x133f4>
   237d0:	bhi	23b58 <__assert_fail@plt+0x12754>
   237d4:	cmp	r3, #75	; 0x4b
   237d8:	beq	24780 <__assert_fail@plt+0x1337c>
   237dc:	bls	240a8 <__assert_fail@plt+0x12ca4>
   237e0:	cmp	r3, #83	; 0x53
   237e4:	beq	24584 <__assert_fail@plt+0x13180>
   237e8:	bhi	24520 <__assert_fail@plt+0x1311c>
   237ec:	cmp	r3, #76	; 0x4c
   237f0:	beq	2454c <__assert_fail@plt+0x13148>
   237f4:	cmp	r3, #80	; 0x50
   237f8:	bne	233a0 <__assert_fail@plt+0x11f9c>
   237fc:	cmp	r5, #36	; 0x24
   23800:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   23804:	movw	r3, #27316	; 0x6ab4
   23808:	movt	r3, #5
   2380c:	add	r3, r3, r5, lsl #2
   23810:	ldr	r7, [r3, #3404]	; 0xd4c
   23814:	b	236e0 <__assert_fail@plt+0x122dc>
   23818:	lsr	r0, r6, #8
   2381c:	lsr	r3, r9, #8
   23820:	orr	r1, r0, r9, lsl #24
   23824:	str	r3, [sp, #76]	; 0x4c
   23828:	str	r1, [sp, #72]	; 0x48
   2382c:	lsr	r6, r6, #16
   23830:	orr	ip, r6, r9, lsl #16
   23834:	ldrd	r6, [sp, #72]	; 0x48
   23838:	mov	r4, #255	; 0xff
   2383c:	lsr	r9, r9, #16
   23840:	and	r6, r6, r4
   23844:	str	r9, [sp, #68]	; 0x44
   23848:	cmp	r6, #255	; 0xff
   2384c:	str	ip, [sp, #64]	; 0x40
   23850:	ldrd	r0, [sp, #64]	; 0x40
   23854:	movw	r1, #9940	; 0x26d4
   23858:	movwne	r3, #35500	; 0x8aac
   2385c:	movtne	r3, #5
   23860:	addne	r3, r3, r6, lsl #2
   23864:	and	r4, r4, r0
   23868:	moveq	sl, r2
   2386c:	mov	r0, #1
   23870:	ldrne	sl, [r3, #-1592]	; 0xfffff9c8
   23874:	cmp	r4, #255	; 0xff
   23878:	movt	r1, #6
   2387c:	movwne	r3, #35500	; 0x8aac
   23880:	movtne	r3, #5
   23884:	addne	r3, r3, r4, lsl #2
   23888:	moveq	r9, #0
   2388c:	ldrne	r9, [r3, #-1592]	; 0xfffff9c8
   23890:	bl	1132c <__printf_chk@plt>
   23894:	cmp	sl, #0
   23898:	beq	24310 <__assert_fail@plt+0x12f0c>
   2389c:	movw	r1, #8948	; 0x22f4
   238a0:	mov	r2, sl
   238a4:	mov	r0, #1
   238a8:	movt	r1, #6
   238ac:	bl	1132c <__printf_chk@plt>
   238b0:	movw	r1, #9988	; 0x2704
   238b4:	mov	r0, #1
   238b8:	movt	r1, #6
   238bc:	bl	1132c <__printf_chk@plt>
   238c0:	cmp	r9, #0
   238c4:	beq	242e8 <__assert_fail@plt+0x12ee4>
   238c8:	movw	r1, #8948	; 0x22f4
   238cc:	mov	r2, r9
   238d0:	mov	r0, #1
   238d4:	movt	r1, #6
   238d8:	bl	1132c <__printf_chk@plt>
   238dc:	ldr	ip, [sp, #48]	; 0x30
   238e0:	mov	r0, #10
   238e4:	ldr	r1, [ip]
   238e8:	bl	111ac <_IO_putc@plt>
   238ec:	b	23460 <__assert_fail@plt+0x1205c>
   238f0:	ldr	r1, [sp, #32]
   238f4:	add	r2, sp, #104	; 0x68
   238f8:	ldr	ip, [sp, #56]	; 0x38
   238fc:	str	r2, [sp, #12]
   23900:	lsl	sl, r1, #5
   23904:	str	r1, [sp]
   23908:	add	r4, ip, sl
   2390c:	ldr	r2, [sp, #88]	; 0x58
   23910:	add	r3, r4, #16
   23914:	add	r1, r4, #24
   23918:	str	r3, [sp, #4]
   2391c:	add	r3, sp, #98	; 0x62
   23920:	str	r1, [sp, #8]
   23924:	str	r3, [sp, #16]
   23928:	ldr	r1, [sp, #208]	; 0xd0
   2392c:	ldr	r3, [sp, #200]	; 0xc8
   23930:	ldr	r0, [sp, #84]	; 0x54
   23934:	bl	22ca4 <__assert_fail@plt+0x118a0>
   23938:	mov	r5, r0
   2393c:	mov	r0, #32
   23940:	bl	112fc <putchar@plt>
   23944:	ldrb	r3, [r4, #20]
   23948:	and	r3, r3, #15
   2394c:	cmp	r3, #10
   23950:	bne	23bc0 <__assert_fail@plt+0x127bc>
   23954:	ldr	r3, [r8, #460]	; 0x1cc
   23958:	ldr	ip, [sp, #88]	; 0x58
   2395c:	cmp	r3, #0
   23960:	movne	r0, #8
   23964:	moveq	r0, #14
   23968:	cmp	ip, #0
   2396c:	mov	sl, r0
   23970:	beq	23dac <__assert_fail@plt+0x129a8>
   23974:	ldr	r1, [r4, #16]
   23978:	cmp	r1, #0
   2397c:	beq	23dac <__assert_fail@plt+0x129a8>
   23980:	ldr	ip, [sp, #200]	; 0xc8
   23984:	cmp	ip, r1
   23988:	bls	23dac <__assert_fail@plt+0x129a8>
   2398c:	ldr	ip, [sp, #88]	; 0x58
   23990:	add	r1, ip, r1
   23994:	bl	19a8c <__assert_fail@plt+0x8688>
   23998:	cmp	r5, #0
   2399c:	mov	r3, r0
   239a0:	beq	239d4 <__assert_fail@plt+0x125d0>
   239a4:	ldr	ip, [sp, #104]	; 0x68
   239a8:	movw	r2, #8964	; 0x2304
   239ac:	movt	r2, #6
   239b0:	movw	r1, #8972	; 0x230c
   239b4:	cmp	ip, #2
   239b8:	movt	r1, #6
   239bc:	mov	r0, #1
   239c0:	str	r3, [sp, #28]
   239c4:	moveq	r1, r2
   239c8:	mov	r2, r5
   239cc:	bl	1132c <__printf_chk@plt>
   239d0:	ldr	r3, [sp, #28]
   239d4:	cmp	sl, r3
   239d8:	movw	r1, #9804	; 0x264c
   239dc:	addcs	r2, sl, #1
   239e0:	movt	r1, #6
   239e4:	rsbcs	r2, r3, r2
   239e8:	movcc	r2, #1
   239ec:	movw	r3, #216	; 0xd8
   239f0:	mov	r0, #1
   239f4:	movt	r3, #6
   239f8:	bl	1132c <__printf_chk@plt>
   239fc:	ldr	r1, [r4, #16]
   23a00:	cmp	r1, #0
   23a04:	bne	23c04 <__assert_fail@plt+0x12800>
   23a08:	ldrb	r3, [r4, #20]
   23a0c:	and	r3, r3, #15
   23a10:	cmp	r3, #3
   23a14:	movwne	r1, #8976	; 0x2310
   23a18:	movtne	r1, #6
   23a1c:	beq	24388 <__assert_fail@plt+0x12f84>
   23a20:	mov	r0, #22
   23a24:	bl	19a8c <__assert_fail@plt+0x8688>
   23a28:	ldr	ip, [sp, #204]	; 0xcc
   23a2c:	cmp	ip, #0
   23a30:	beq	23424 <__assert_fail@plt+0x12020>
   23a34:	ldr	r3, [sp, #100]	; 0x64
   23a38:	ldr	ip, [sp, #40]	; 0x28
   23a3c:	add	r3, r3, ip
   23a40:	ldrd	r2, [r3, #16]
   23a44:	cmp	r2, #0
   23a48:	sbcs	r0, r3, #0
   23a4c:	blt	243ec <__assert_fail@plt+0x12fe8>
   23a50:	movw	r1, #9900	; 0x26ac
   23a54:	mov	r0, #1
   23a58:	movt	r1, #6
   23a5c:	bl	1132c <__printf_chk@plt>
   23a60:	b	23424 <__assert_fail@plt+0x12020>
   23a64:	cmp	r3, #189	; 0xbd
   23a68:	beq	24710 <__assert_fail@plt+0x1330c>
   23a6c:	bls	23d04 <__assert_fail@plt+0x12900>
   23a70:	cmp	r3, #197	; 0xc5
   23a74:	beq	248b0 <__assert_fail@plt+0x134ac>
   23a78:	bls	24338 <__assert_fail@plt+0x12f34>
   23a7c:	cmp	r3, #221	; 0xdd
   23a80:	beq	246d0 <__assert_fail@plt+0x132cc>
   23a84:	cmp	r3, #222	; 0xde
   23a88:	bne	233a0 <__assert_fail@plt+0x11f9c>
   23a8c:	cmp	r5, #7
   23a90:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   23a94:	movw	r3, #27316	; 0x6ab4
   23a98:	movt	r3, #5
   23a9c:	add	r3, r3, r5, lsl #2
   23aa0:	ldr	r7, [r3, #3320]	; 0xcf8
   23aa4:	b	236e0 <__assert_fail@plt+0x122dc>
   23aa8:	movw	r2, #47787	; 0xbaab
   23aac:	cmp	r3, r2
   23ab0:	beq	24710 <__assert_fail@plt+0x1330c>
   23ab4:	bls	23db8 <__assert_fail@plt+0x129b4>
   23ab8:	movw	r2, #61453	; 0xf00d
   23abc:	cmp	r3, r2
   23ac0:	beq	24840 <__assert_fail@plt+0x1343c>
   23ac4:	bls	2442c <__assert_fail@plt+0x13028>
   23ac8:	movw	r2, #65200	; 0xfeb0
   23acc:	cmp	r3, r2
   23ad0:	beq	24698 <__assert_fail@plt+0x13294>
   23ad4:	add	r2, r2, #10
   23ad8:	cmp	r3, r2
   23adc:	bne	233a0 <__assert_fail@plt+0x11f9c>
   23ae0:	cmp	r5, #6
   23ae4:	beq	24dd0 <__assert_fail@plt+0x139cc>
   23ae8:	bhi	24aa8 <__assert_fail@plt+0x136a4>
   23aec:	cmp	r5, #2
   23af0:	beq	24d10 <__assert_fail@plt+0x1390c>
   23af4:	bls	24c1c <__assert_fail@plt+0x13818>
   23af8:	cmp	r5, #4
   23afc:	beq	24d1c <__assert_fail@plt+0x13918>
   23b00:	movwls	r7, #8752	; 0x2230
   23b04:	movtls	r7, #6
   23b08:	movwhi	r7, #8780	; 0x224c
   23b0c:	movthi	r7, #6
   23b10:	b	236e8 <__assert_fail@plt+0x122e4>
   23b14:	cmp	r3, #7
   23b18:	beq	24878 <__assert_fail@plt+0x13474>
   23b1c:	bls	24104 <__assert_fail@plt+0x12d00>
   23b20:	cmp	r3, #10
   23b24:	beq	2485c <__assert_fail@plt+0x13458>
   23b28:	bhi	2435c <__assert_fail@plt+0x12f58>
   23b2c:	cmp	r3, #8
   23b30:	beq	2485c <__assert_fail@plt+0x13458>
   23b34:	cmp	r3, #9
   23b38:	bne	233a0 <__assert_fail@plt+0x11f9c>
   23b3c:	cmp	r5, #11
   23b40:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   23b44:	movw	r3, #43684	; 0xaaa4
   23b48:	movt	r3, #5
   23b4c:	add	r3, r3, r5, lsl #2
   23b50:	ldr	r7, [r3, #-3344]	; 0xfffff2f0
   23b54:	b	236e0 <__assert_fail@plt+0x122dc>
   23b58:	cmp	r3, #92	; 0x5c
   23b5c:	beq	247dc <__assert_fail@plt+0x133d8>
   23b60:	bls	240cc <__assert_fail@plt+0x12cc8>
   23b64:	cmp	r3, #99	; 0x63
   23b68:	beq	244d0 <__assert_fail@plt+0x130cc>
   23b6c:	bls	24814 <__assert_fail@plt+0x13410>
   23b70:	cmp	r3, #101	; 0x65
   23b74:	beq	24504 <__assert_fail@plt+0x13100>
   23b78:	cmp	r3, #105	; 0x69
   23b7c:	bne	233a0 <__assert_fail@plt+0x11f9c>
   23b80:	ldrb	r2, [r8, #44]	; 0x2c
   23b84:	movw	r3, #16712	; 0x4148
   23b88:	movt	r3, #9
   23b8c:	cmp	r2, #45	; 0x2d
   23b90:	beq	23ba0 <__assert_fail@plt+0x1279c>
   23b94:	ldrb	r3, [r3, #7]
   23b98:	cmp	r3, #0
   23b9c:	bne	237ac <__assert_fail@plt+0x123a8>
   23ba0:	sub	r2, r5, #1
   23ba4:	cmp	r2, #20
   23ba8:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   23bac:	movw	r3, #27316	; 0x6ab4
   23bb0:	movt	r3, #5
   23bb4:	add	r3, r3, r2, lsl #2
   23bb8:	ldr	r7, [r3, #3564]	; 0xdec
   23bbc:	b	236e0 <__assert_fail@plt+0x122dc>
   23bc0:	ldr	ip, [sp, #56]	; 0x38
   23bc4:	mov	r2, #6
   23bc8:	ldrd	r0, [ip, sl]
   23bcc:	bl	16c84 <__assert_fail@plt+0x5880>
   23bd0:	ldr	r1, [r8, #460]	; 0x1cc
   23bd4:	movw	r2, #216	; 0xd8
   23bd8:	movw	r3, #24340	; 0x5f14
   23bdc:	cmp	r1, #0
   23be0:	movt	r2, #6
   23be4:	movt	r3, #6
   23be8:	mov	r0, #1
   23bec:	moveq	r1, r2
   23bf0:	movne	r1, r3
   23bf4:	bl	1132c <__printf_chk@plt>
   23bf8:	ldr	r1, [r4, #16]
   23bfc:	cmp	r1, #0
   23c00:	beq	23a08 <__assert_fail@plt+0x12604>
   23c04:	ldr	ip, [sp, #88]	; 0x58
   23c08:	cmp	ip, #0
   23c0c:	movweq	r1, #9828	; 0x2664
   23c10:	moveq	r0, ip
   23c14:	movteq	r1, #6
   23c18:	beq	23c34 <__assert_fail@plt+0x12830>
   23c1c:	ldr	ip, [sp, #200]	; 0xc8
   23c20:	cmp	ip, r1
   23c24:	bhi	2419c <__assert_fail@plt+0x12d98>
   23c28:	movw	r1, #9856	; 0x2680
   23c2c:	movt	r1, #6
   23c30:	mov	r0, #0
   23c34:	mov	r2, #5
   23c38:	bl	11170 <dcgettext@plt>
   23c3c:	ldr	r2, [r4, #16]
   23c40:	mov	r1, r0
   23c44:	mov	r0, #1
   23c48:	bl	1132c <__printf_chk@plt>
   23c4c:	b	23a28 <__assert_fail@plt+0x12624>
   23c50:	rsbs	r2, r4, #0
   23c54:	rsc	r3, r5, #0
   23c58:	movw	r1, #9908	; 0x26b4
   23c5c:	mov	r0, #1
   23c60:	movt	r1, #6
   23c64:	bl	1132c <__printf_chk@plt>
   23c68:	b	23424 <__assert_fail@plt+0x12020>
   23c6c:	ldr	r3, [sp, #100]	; 0x64
   23c70:	ldr	ip, [sp, #40]	; 0x28
   23c74:	add	r3, r3, ip
   23c78:	ldrd	r2, [r3, #16]
   23c7c:	cmp	r3, #0
   23c80:	cmpeq	r2, #6
   23c84:	bls	24160 <__assert_fail@plt+0x12d5c>
   23c88:	ldr	ip, [sp, #48]	; 0x30
   23c8c:	mov	r0, #32
   23c90:	ldr	r1, [ip]
   23c94:	bl	111ac <_IO_putc@plt>
   23c98:	mov	r2, #5
   23c9c:	movw	r1, #9752	; 0x2618
   23ca0:	mov	r0, #0
   23ca4:	movt	r1, #6
   23ca8:	bl	11170 <dcgettext@plt>
   23cac:	ldr	r3, [sp, #100]	; 0x64
   23cb0:	ldr	ip, [sp, #40]	; 0x28
   23cb4:	add	r3, r3, ip
   23cb8:	ldr	r2, [r3, #16]
   23cbc:	mov	r1, r0
   23cc0:	mov	r0, #1
   23cc4:	bl	1132c <__printf_chk@plt>
   23cc8:	b	23430 <__assert_fail@plt+0x1202c>
   23ccc:	cmp	r3, #42	; 0x2a
   23cd0:	beq	2472c <__assert_fail@plt+0x13328>
   23cd4:	bhi	249b4 <__assert_fail@plt+0x135b0>
   23cd8:	cmp	r3, #39	; 0x27
   23cdc:	beq	24748 <__assert_fail@plt+0x13344>
   23ce0:	cmp	r3, #40	; 0x28
   23ce4:	bne	233a0 <__assert_fail@plt+0x11f9c>
   23ce8:	cmp	r5, #255	; 0xff
   23cec:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   23cf0:	movw	r3, #35500	; 0x8aac
   23cf4:	movt	r3, #5
   23cf8:	add	r3, r3, r5, lsl #2
   23cfc:	ldr	r7, [r3, #-404]	; 0xfffffe6c
   23d00:	b	236e0 <__assert_fail@plt+0x122dc>
   23d04:	cmp	r3, #181	; 0xb5
   23d08:	bls	24294 <__assert_fail@plt+0x12e90>
   23d0c:	cmp	r3, #183	; 0xb7
   23d10:	beq	245d8 <__assert_fail@plt+0x131d4>
   23d14:	cmp	r3, #188	; 0xbc
   23d18:	bne	233a0 <__assert_fail@plt+0x11f9c>
   23d1c:	cmp	r5, #129	; 0x81
   23d20:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   23d24:	movw	r3, #43684	; 0xaaa4
   23d28:	movt	r3, #5
   23d2c:	add	r3, r3, r5, lsl #2
   23d30:	ldr	r7, [r3, #2828]	; 0xb0c
   23d34:	b	236e0 <__assert_fail@plt+0x122dc>
   23d38:	cmp	r3, #114	; 0x72
   23d3c:	beq	24764 <__assert_fail@plt+0x13360>
   23d40:	bls	24408 <__assert_fail@plt+0x13004>
   23d44:	cmp	r3, #115	; 0x73
   23d48:	bne	247b8 <__assert_fail@plt+0x133b4>
   23d4c:	cmp	r5, #19
   23d50:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   23d54:	movw	r3, #43684	; 0xaaa4
   23d58:	movt	r3, #5
   23d5c:	add	r3, r3, r5, lsl #2
   23d60:	ldr	r7, [r3, #3348]	; 0xd14
   23d64:	b	236e0 <__assert_fail@plt+0x122dc>
   23d68:	movw	r2, #30288	; 0x7650
   23d6c:	cmp	r3, r2
   23d70:	beq	24530 <__assert_fail@plt+0x1312c>
   23d74:	bhi	244ec <__assert_fail@plt+0x130e8>
   23d78:	movw	r2, #21569	; 0x5441
   23d7c:	cmp	r3, r2
   23d80:	beq	248cc <__assert_fail@plt+0x134c8>
   23d84:	movw	r2, #23205	; 0x5aa5
   23d88:	cmp	r3, r2
   23d8c:	bne	233a0 <__assert_fail@plt+0x11f9c>
   23d90:	cmp	r5, #9
   23d94:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   23d98:	movw	r3, #27316	; 0x6ab4
   23d9c:	movt	r3, #5
   23da0:	add	r3, r3, r5, lsl #2
   23da4:	ldr	r7, [r3, #1224]	; 0x4c8
   23da8:	b	236e0 <__assert_fail@plt+0x122dc>
   23dac:	movw	r1, #8960	; 0x2300
   23db0:	movt	r1, #6
   23db4:	b	23994 <__assert_fail@plt+0x12590>
   23db8:	movw	r2, #41872	; 0xa390
   23dbc:	cmp	r3, r2
   23dc0:	beq	2479c <__assert_fail@plt+0x13398>
   23dc4:	bls	24460 <__assert_fail@plt+0x1305c>
   23dc8:	movw	r2, #43975	; 0xabc7
   23dcc:	cmp	r3, r2
   23dd0:	beq	24824 <__assert_fail@plt+0x13420>
   23dd4:	movw	r2, #44357	; 0xad45
   23dd8:	cmp	r3, r2
   23ddc:	bne	233a0 <__assert_fail@plt+0x11f9c>
   23de0:	cmp	r5, #129	; 0x81
   23de4:	ldrls	pc, [pc, r5, lsl #2]
   23de8:	b	233a0 <__assert_fail@plt+0x11f9c>
   23dec:	andeq	r4, r2, r0
   23df0:	strdeq	r3, [r2], -r4
   23df4:	muleq	r2, ip, r0
   23df8:	muleq	r2, r0, r0
   23dfc:	andeq	r4, r2, r4, lsl #1
   23e00:	andeq	r4, r2, r8, ror r0
   23e04:	andeq	r4, r2, ip, rrx
   23e08:	andeq	r4, r2, r0, rrx
   23e0c:	andeq	r4, r2, r4, asr r0
   23e10:	andeq	r4, r2, r8, asr #32
   23e14:	andeq	r4, r2, ip, lsr r0
   23e18:	andeq	r4, r2, r0, lsr r0
   23e1c:	andeq	r4, r2, r4, lsr #32
   23e20:	andeq	r3, r2, r0, lsr #7
   23e24:	andeq	r3, r2, r0, lsr #7
   23e28:	andeq	r3, r2, r0, lsr #7
   23e2c:	andeq	r3, r2, r0, lsr #7
   23e30:	andeq	r3, r2, r0, lsr #7
   23e34:	andeq	r3, r2, r0, lsr #7
   23e38:	andeq	r3, r2, r0, lsr #7
   23e3c:	andeq	r3, r2, r0, lsr #7
   23e40:	andeq	r3, r2, r0, lsr #7
   23e44:	andeq	r3, r2, r0, lsr #7
   23e48:	andeq	r3, r2, r0, lsr #7
   23e4c:	andeq	r3, r2, r0, lsr #7
   23e50:	andeq	r3, r2, r0, lsr #7
   23e54:	andeq	r3, r2, r0, lsr #7
   23e58:	andeq	r3, r2, r0, lsr #7
   23e5c:	andeq	r3, r2, r0, lsr #7
   23e60:	andeq	r3, r2, r0, lsr #7
   23e64:	andeq	r3, r2, r0, lsr #7
   23e68:	andeq	r3, r2, r0, lsr #7
   23e6c:	andeq	r3, r2, r0, lsr #7
   23e70:	andeq	r3, r2, r0, lsr #7
   23e74:	andeq	r3, r2, r0, lsr #7
   23e78:	andeq	r3, r2, r0, lsr #7
   23e7c:	andeq	r3, r2, r0, lsr #7
   23e80:	andeq	r3, r2, r0, lsr #7
   23e84:	andeq	r3, r2, r0, lsr #7
   23e88:	andeq	r3, r2, r0, lsr #7
   23e8c:	andeq	r3, r2, r0, lsr #7
   23e90:	andeq	r3, r2, r0, lsr #7
   23e94:	andeq	r3, r2, r0, lsr #7
   23e98:	andeq	r3, r2, r0, lsr #7
   23e9c:	andeq	r3, r2, r0, lsr #7
   23ea0:	andeq	r3, r2, r0, lsr #7
   23ea4:	andeq	r3, r2, r0, lsr #7
   23ea8:	andeq	r3, r2, r0, lsr #7
   23eac:	andeq	r3, r2, r0, lsr #7
   23eb0:	andeq	r3, r2, r0, lsr #7
   23eb4:	andeq	r3, r2, r0, lsr #7
   23eb8:	andeq	r3, r2, r0, lsr #7
   23ebc:	andeq	r3, r2, r0, lsr #7
   23ec0:	andeq	r3, r2, r0, lsr #7
   23ec4:	andeq	r3, r2, r0, lsr #7
   23ec8:	andeq	r3, r2, r0, lsr #7
   23ecc:	andeq	r3, r2, r0, lsr #7
   23ed0:	andeq	r3, r2, r0, lsr #7
   23ed4:	andeq	r3, r2, r0, lsr #7
   23ed8:	andeq	r3, r2, r0, lsr #7
   23edc:	andeq	r3, r2, r0, lsr #7
   23ee0:	andeq	r3, r2, r0, lsr #7
   23ee4:	andeq	r3, r2, r0, lsr #7
   23ee8:	andeq	r3, r2, r0, lsr #7
   23eec:	andeq	r3, r2, r0, lsr #7
   23ef0:	andeq	r3, r2, r0, lsr #7
   23ef4:	andeq	r3, r2, r0, lsr #7
   23ef8:	andeq	r3, r2, r0, lsr #7
   23efc:	andeq	r3, r2, r0, lsr #7
   23f00:	andeq	r3, r2, r0, lsr #7
   23f04:	andeq	r3, r2, r0, lsr #7
   23f08:	andeq	r3, r2, r0, lsr #7
   23f0c:	andeq	r3, r2, r0, lsr #7
   23f10:	andeq	r3, r2, r0, lsr #7
   23f14:	andeq	r3, r2, r0, lsr #7
   23f18:	andeq	r3, r2, r0, lsr #7
   23f1c:	andeq	r3, r2, r0, lsr #7
   23f20:	andeq	r3, r2, r0, lsr #7
   23f24:	andeq	r3, r2, r0, lsr #7
   23f28:	andeq	r3, r2, r0, lsr #7
   23f2c:	andeq	r3, r2, r0, lsr #7
   23f30:	andeq	r3, r2, r0, lsr #7
   23f34:	andeq	r3, r2, r0, lsr #7
   23f38:	andeq	r3, r2, r0, lsr #7
   23f3c:	andeq	r3, r2, r0, lsr #7
   23f40:	andeq	r3, r2, r0, lsr #7
   23f44:	andeq	r3, r2, r0, lsr #7
   23f48:	andeq	r3, r2, r0, lsr #7
   23f4c:	andeq	r3, r2, r0, lsr #7
   23f50:	andeq	r3, r2, r0, lsr #7
   23f54:	andeq	r3, r2, r0, lsr #7
   23f58:	andeq	r3, r2, r0, lsr #7
   23f5c:	andeq	r3, r2, r0, lsr #7
   23f60:	andeq	r3, r2, r0, lsr #7
   23f64:	andeq	r3, r2, r0, lsr #7
   23f68:	andeq	r3, r2, r0, lsr #7
   23f6c:	andeq	r3, r2, r0, lsr #7
   23f70:	andeq	r3, r2, r0, lsr #7
   23f74:	andeq	r3, r2, r0, lsr #7
   23f78:	andeq	r3, r2, r0, lsr #7
   23f7c:	andeq	r3, r2, r0, lsr #7
   23f80:	andeq	r3, r2, r0, lsr #7
   23f84:	andeq	r3, r2, r0, lsr #7
   23f88:	andeq	r3, r2, r0, lsr #7
   23f8c:	andeq	r3, r2, r0, lsr #7
   23f90:	andeq	r3, r2, r0, lsr #7
   23f94:	andeq	r3, r2, r0, lsr #7
   23f98:	andeq	r3, r2, r0, lsr #7
   23f9c:	andeq	r3, r2, r0, lsr #7
   23fa0:	andeq	r3, r2, r0, lsr #7
   23fa4:	andeq	r3, r2, r0, lsr #7
   23fa8:	andeq	r3, r2, r0, lsr #7
   23fac:	andeq	r3, r2, r0, lsr #7
   23fb0:	andeq	r3, r2, r0, lsr #7
   23fb4:	andeq	r3, r2, r0, lsr #7
   23fb8:	andeq	r3, r2, r0, lsr #7
   23fbc:	andeq	r3, r2, r0, lsr #7
   23fc0:	andeq	r3, r2, r0, lsr #7
   23fc4:	andeq	r3, r2, r0, lsr #7
   23fc8:	andeq	r3, r2, r0, lsr #7
   23fcc:	andeq	r3, r2, r0, lsr #7
   23fd0:	andeq	r3, r2, r0, lsr #7
   23fd4:	andeq	r3, r2, r0, lsr #7
   23fd8:	andeq	r3, r2, r0, lsr #7
   23fdc:	andeq	r3, r2, r0, lsr #7
   23fe0:	andeq	r3, r2, r0, lsr #7
   23fe4:	andeq	r3, r2, r0, lsr #7
   23fe8:	andeq	r3, r2, r0, lsr #7
   23fec:	andeq	r4, r2, r8, lsl r0
   23ff0:	andeq	r4, r2, ip
   23ff4:	movw	r7, #8160	; 0x1fe0
   23ff8:	movt	r7, #6
   23ffc:	b	236e8 <__assert_fail@plt+0x122e4>
   24000:	movw	r7, #8140	; 0x1fcc
   24004:	movt	r7, #6
   24008:	b	236e8 <__assert_fail@plt+0x122e4>
   2400c:	movw	r7, #8404	; 0x20d4
   24010:	movt	r7, #6
   24014:	b	236e8 <__assert_fail@plt+0x122e4>
   24018:	movw	r7, #8376	; 0x20b8
   2401c:	movt	r7, #6
   24020:	b	236e8 <__assert_fail@plt+0x122e4>
   24024:	movw	r7, #8360	; 0x20a8
   24028:	movt	r7, #6
   2402c:	b	236e8 <__assert_fail@plt+0x122e4>
   24030:	movw	r7, #8340	; 0x2094
   24034:	movt	r7, #6
   24038:	b	236e8 <__assert_fail@plt+0x122e4>
   2403c:	movw	r7, #8320	; 0x2080
   24040:	movt	r7, #6
   24044:	b	236e8 <__assert_fail@plt+0x122e4>
   24048:	movw	r7, #8300	; 0x206c
   2404c:	movt	r7, #6
   24050:	b	236e8 <__assert_fail@plt+0x122e4>
   24054:	movw	r7, #8284	; 0x205c
   24058:	movt	r7, #6
   2405c:	b	236e8 <__assert_fail@plt+0x122e4>
   24060:	movw	r7, #8264	; 0x2048
   24064:	movt	r7, #6
   24068:	b	236e8 <__assert_fail@plt+0x122e4>
   2406c:	movw	r7, #8248	; 0x2038
   24070:	movt	r7, #6
   24074:	b	236e8 <__assert_fail@plt+0x122e4>
   24078:	movw	r7, #8228	; 0x2024
   2407c:	movt	r7, #6
   24080:	b	236e8 <__assert_fail@plt+0x122e4>
   24084:	movw	r7, #8208	; 0x2010
   24088:	movt	r7, #6
   2408c:	b	236e8 <__assert_fail@plt+0x122e4>
   24090:	movw	r7, #8192	; 0x2000
   24094:	movt	r7, #6
   24098:	b	236e8 <__assert_fail@plt+0x122e4>
   2409c:	movw	r7, #8176	; 0x1ff0
   240a0:	movt	r7, #6
   240a4:	b	236e8 <__assert_fail@plt+0x122e4>
   240a8:	cmp	r3, #53	; 0x35
   240ac:	beq	244a4 <__assert_fail@plt+0x130a0>
   240b0:	bhi	24494 <__assert_fail@plt+0x13090>
   240b4:	cmp	r3, #50	; 0x32
   240b8:	bne	233a0 <__assert_fail@plt+0x11f9c>
   240bc:	mov	r0, r5
   240c0:	bl	121e8 <__assert_fail@plt+0xde4>
   240c4:	mov	r7, r0
   240c8:	b	236e0 <__assert_fail@plt+0x122dc>
   240cc:	cmp	r3, #89	; 0x59
   240d0:	beq	24894 <__assert_fail@plt+0x13490>
   240d4:	bhi	244c0 <__assert_fail@plt+0x130bc>
   240d8:	cmp	r3, #87	; 0x57
   240dc:	beq	24478 <__assert_fail@plt+0x13074>
   240e0:	cmp	r3, #88	; 0x58
   240e4:	bne	233a0 <__assert_fail@plt+0x11f9c>
   240e8:	cmp	r5, #64	; 0x40
   240ec:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   240f0:	movw	r3, #27316	; 0x6ab4
   240f4:	movt	r3, #5
   240f8:	add	r3, r3, r5, lsl #2
   240fc:	ldr	r7, [r3, #-2780]	; 0xfffff524
   24100:	b	236e0 <__assert_fail@plt+0x122dc>
   24104:	cmp	r3, #3
   24108:	beq	2490c <__assert_fail@plt+0x13508>
   2410c:	bls	245f8 <__assert_fail@plt+0x131f4>
   24110:	cmp	r3, #4
   24114:	bne	24904 <__assert_fail@plt+0x13500>
   24118:	cmp	r5, #42	; 0x2a
   2411c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24120:	movw	r3, #27316	; 0x6ab4
   24124:	movt	r3, #5
   24128:	add	r3, r3, r5, lsl #2
   2412c:	ldr	r7, [r3, #-1424]	; 0xfffffa70
   24130:	b	236e0 <__assert_fail@plt+0x122dc>
   24134:	cmp	r3, #167	; 0xa7
   24138:	beq	2497c <__assert_fail@plt+0x13578>
   2413c:	cmp	r3, #173	; 0xad
   24140:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24144:	cmp	r5, #150	; 0x96
   24148:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   2414c:	movw	r3, #43684	; 0xaaa4
   24150:	movt	r3, #5
   24154:	add	r3, r3, r5, lsl #2
   24158:	ldr	r7, [r3, #396]	; 0x18c
   2415c:	b	236e0 <__assert_fail@plt+0x122dc>
   24160:	movw	r3, #43684	; 0xaaa4
   24164:	movt	r3, #5
   24168:	add	r3, r3, r2, lsl #2
   2416c:	ldr	r7, [r3, #3740]	; 0xe9c
   24170:	cmp	r7, #0
   24174:	beq	23c88 <__assert_fail@plt+0x12884>
   24178:	movw	r1, #9744	; 0x2610
   2417c:	mov	r0, #1
   24180:	movt	r1, #6
   24184:	mov	r2, r7
   24188:	bl	1132c <__printf_chk@plt>
   2418c:	ldrh	r3, [r4, #50]	; 0x32
   24190:	cmp	r3, #43	; 0x2b
   24194:	bne	23430 <__assert_fail@plt+0x1202c>
   24198:	b	2364c <__assert_fail@plt+0x12248>
   2419c:	ldr	ip, [sp, #88]	; 0x58
   241a0:	mov	r0, #22
   241a4:	add	r1, ip, r1
   241a8:	bl	19a8c <__assert_fail@plt+0x8688>
   241ac:	cmp	r5, #0
   241b0:	beq	23a28 <__assert_fail@plt+0x12624>
   241b4:	ldr	r0, [sp, #104]	; 0x68
   241b8:	movw	r3, #8964	; 0x2304
   241bc:	movt	r3, #6
   241c0:	movw	r1, #8972	; 0x230c
   241c4:	cmp	r0, #2
   241c8:	movt	r1, #6
   241cc:	mov	r2, r5
   241d0:	mov	r0, #1
   241d4:	moveq	r1, r3
   241d8:	bl	1132c <__printf_chk@plt>
   241dc:	b	23a28 <__assert_fail@plt+0x12624>
   241e0:	movw	ip, #26444	; 0x674c
   241e4:	movt	ip, #9
   241e8:	str	ip, [sp, #44]	; 0x2c
   241ec:	ldr	r3, [ip]
   241f0:	cmp	r3, #0
   241f4:	movwne	r1, #9360	; 0x2490
   241f8:	movweq	r1, #9460	; 0x24f4
   241fc:	movtne	r1, #6
   24200:	movteq	r1, #6
   24204:	movne	r2, #5
   24208:	moveq	r0, r3
   2420c:	moveq	r2, #5
   24210:	bl	11170 <dcgettext@plt>
   24214:	mov	r1, r0
   24218:	mov	r0, #1
   2421c:	bl	1132c <__printf_chk@plt>
   24220:	b	232e0 <__assert_fail@plt+0x11edc>
   24224:	movw	ip, #26444	; 0x674c
   24228:	movt	ip, #9
   2422c:	str	ip, [sp, #44]	; 0x2c
   24230:	ldr	r3, [ip]
   24234:	cmp	r3, #0
   24238:	movwne	r1, #9544	; 0x2548
   2423c:	movweq	r1, #9636	; 0x25a4
   24240:	movtne	r1, #6
   24244:	movteq	r1, #6
   24248:	movne	r2, #5
   2424c:	moveq	r0, r3
   24250:	moveq	r2, #5
   24254:	bl	11170 <dcgettext@plt>
   24258:	mov	r1, r0
   2425c:	mov	r0, #1
   24260:	bl	1132c <__printf_chk@plt>
   24264:	b	232e0 <__assert_fail@plt+0x11edc>
   24268:	cmp	r3, #22
   2426c:	beq	2479c <__assert_fail@plt+0x13398>
   24270:	cmp	r3, #23
   24274:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24278:	cmp	r5, #17
   2427c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24280:	movw	r3, #27316	; 0x6ab4
   24284:	movt	r3, #5
   24288:	add	r3, r3, r5, lsl #2
   2428c:	ldr	r7, [r3, #-60]	; 0xffffffc4
   24290:	b	236e0 <__assert_fail@plt+0x122dc>
   24294:	cmp	r3, #180	; 0xb4
   24298:	bcs	245bc <__assert_fail@plt+0x131b8>
   2429c:	cmp	r3, #177	; 0xb1
   242a0:	bne	233a0 <__assert_fail@plt+0x11f9c>
   242a4:	cmp	r5, #31
   242a8:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   242ac:	movw	r3, #43684	; 0xaaa4
   242b0:	movt	r3, #5
   242b4:	add	r3, r3, r5, lsl #2
   242b8:	ldr	r7, [r3, #-456]	; 0xfffffe38
   242bc:	b	236e0 <__assert_fail@plt+0x122dc>
   242c0:	movw	r2, #9520	; 0x2530
   242c4:	cmp	r3, r2
   242c8:	bne	24654 <__assert_fail@plt+0x13250>
   242cc:	cmp	r5, #6
   242d0:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   242d4:	movw	r3, #43684	; 0xaaa4
   242d8:	movt	r3, #5
   242dc:	add	r3, r3, r5, lsl #2
   242e0:	ldr	r7, [r3, #-1548]	; 0xfffff9f4
   242e4:	b	236e0 <__assert_fail@plt+0x122dc>
   242e8:	mov	r0, r9
   242ec:	mov	r2, #5
   242f0:	movw	r1, #9968	; 0x26f0
   242f4:	movt	r1, #6
   242f8:	bl	11170 <dcgettext@plt>
   242fc:	mov	r2, r4
   24300:	mov	r1, r0
   24304:	mov	r0, #1
   24308:	bl	1132c <__printf_chk@plt>
   2430c:	b	238dc <__assert_fail@plt+0x124d8>
   24310:	mov	r0, sl
   24314:	mov	r2, #5
   24318:	movw	r1, #9968	; 0x26f0
   2431c:	movt	r1, #6
   24320:	bl	11170 <dcgettext@plt>
   24324:	mov	r2, r6
   24328:	mov	r1, r0
   2432c:	mov	r0, #1
   24330:	bl	1132c <__printf_chk@plt>
   24334:	b	238b0 <__assert_fail@plt+0x124ac>
   24338:	cmp	r3, #191	; 0xbf
   2433c:	bne	24b00 <__assert_fail@plt+0x136fc>
   24340:	cmp	r5, #129	; 0x81
   24344:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24348:	movw	r3, #43684	; 0xaaa4
   2434c:	movt	r3, #5
   24350:	add	r3, r3, r5, lsl #2
   24354:	ldr	r7, [r3, #2308]	; 0x904
   24358:	b	236e0 <__assert_fail@plt+0x122dc>
   2435c:	cmp	r3, #11
   24360:	beq	24600 <__assert_fail@plt+0x131fc>
   24364:	cmp	r3, #15
   24368:	bne	233a0 <__assert_fail@plt+0x11f9c>
   2436c:	cmp	r5, #245	; 0xf5
   24370:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24374:	movw	r3, #35500	; 0x8aac
   24378:	movt	r3, #5
   2437c:	add	r3, r3, r5, lsl #2
   24380:	ldr	r7, [r3, #1044]	; 0x414
   24384:	b	236e0 <__assert_fail@plt+0x122dc>
   24388:	ldr	r2, [r4, #24]
   2438c:	movw	r3, #16712	; 0x4148
   24390:	ldr	r0, [r8, #68]	; 0x44
   24394:	movt	r3, #9
   24398:	cmp	r2, r0
   2439c:	bcs	24a20 <__assert_fail@plt+0x1361c>
   243a0:	ldr	ip, [r3, #220]	; 0xdc
   243a4:	add	r2, r2, r2, lsl #3
   243a8:	adds	r0, ip, r2, lsl #3
   243ac:	beq	24e98 <__assert_fail@plt+0x13a94>
   243b0:	ldr	r0, [r3, #212]	; 0xd4
   243b4:	cmp	r0, #0
   243b8:	beq	24e80 <__assert_fail@plt+0x13a7c>
   243bc:	ldr	r2, [ip, r2, lsl #3]
   243c0:	ldr	r3, [r3, #216]	; 0xd8
   243c4:	cmp	r2, r3
   243c8:	addcc	r1, r0, r2
   243cc:	bcc	23a20 <__assert_fail@plt+0x1261c>
   243d0:	mov	r0, r1
   243d4:	mov	r2, #5
   243d8:	movw	r1, #50908	; 0xc6dc
   243dc:	movt	r1, #5
   243e0:	bl	11170 <dcgettext@plt>
   243e4:	mov	r1, r0
   243e8:	b	23a20 <__assert_fail@plt+0x1261c>
   243ec:	rsbs	r2, r2, #0
   243f0:	rsc	r3, r3, #0
   243f4:	movw	r1, #9892	; 0x26a4
   243f8:	mov	r0, #1
   243fc:	movt	r1, #6
   24400:	bl	1132c <__printf_chk@plt>
   24404:	b	23424 <__assert_fail@plt+0x12020>
   24408:	cmp	r3, #113	; 0x71
   2440c:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24410:	cmp	r5, #77	; 0x4d
   24414:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24418:	movw	r3, #43684	; 0xaaa4
   2441c:	movt	r3, #5
   24420:	add	r3, r3, r5, lsl #2
   24424:	ldr	r7, [r3, #3428]	; 0xd64
   24428:	b	236e0 <__assert_fail@plt+0x122dc>
   2442c:	movw	r2, #48879	; 0xbeef
   24430:	cmp	r3, r2
   24434:	beq	24894 <__assert_fail@plt+0x13490>
   24438:	movw	r2, #57005	; 0xdead
   2443c:	cmp	r3, r2
   24440:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24444:	cmp	r5, #7
   24448:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   2444c:	movw	r3, #27316	; 0x6ab4
   24450:	movt	r3, #5
   24454:	add	r3, r3, r5, lsl #2
   24458:	ldr	r7, [r3, #2428]	; 0x97c
   2445c:	b	236e0 <__assert_fail@plt+0x122dc>
   24460:	movw	r2, #36929	; 0x9041
   24464:	cmp	r3, r2
   24468:	beq	240e8 <__assert_fail@plt+0x12ce4>
   2446c:	add	r2, r2, #63	; 0x3f
   24470:	cmp	r3, r2
   24474:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24478:	cmp	r5, #51	; 0x33
   2447c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24480:	movw	r3, #27316	; 0x6ab4
   24484:	movt	r3, #5
   24488:	add	r3, r3, r5, lsl #2
   2448c:	ldr	r7, [r3, #928]	; 0x3a0
   24490:	b	236e0 <__assert_fail@plt+0x122dc>
   24494:	cmp	r3, #62	; 0x3e
   24498:	beq	245bc <__assert_fail@plt+0x131b8>
   2449c:	cmp	r3, #70	; 0x46
   244a0:	bne	233a0 <__assert_fail@plt+0x11f9c>
   244a4:	cmp	r5, #21
   244a8:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   244ac:	movw	r3, #27316	; 0x6ab4
   244b0:	movt	r3, #5
   244b4:	add	r3, r3, r5, lsl #2
   244b8:	ldr	r7, [r3, #-1512]	; 0xfffffa18
   244bc:	b	236e0 <__assert_fail@plt+0x122dc>
   244c0:	cmp	r3, #90	; 0x5a
   244c4:	beq	24444 <__assert_fail@plt+0x13040>
   244c8:	cmp	r3, #91	; 0x5b
   244cc:	bne	233a0 <__assert_fail@plt+0x11f9c>
   244d0:	cmp	r5, #16
   244d4:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   244d8:	movw	r3, #35500	; 0x8aac
   244dc:	movt	r3, #5
   244e0:	add	r3, r3, r5, lsl #2
   244e4:	ldr	r7, [r3, #2736]	; 0xab0
   244e8:	b	236e0 <__assert_fail@plt+0x122dc>
   244ec:	movw	r2, #30326	; 0x7676
   244f0:	cmp	r3, r2
   244f4:	beq	247f8 <__assert_fail@plt+0x133f4>
   244f8:	movw	r2, #33303	; 0x8217
   244fc:	cmp	r3, r2
   24500:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24504:	cmp	r5, #14
   24508:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   2450c:	movw	r3, #43684	; 0xaaa4
   24510:	movt	r3, #5
   24514:	add	r3, r3, r5, lsl #2
   24518:	ldr	r7, [r3, #-1960]	; 0xfffff858
   2451c:	b	236e0 <__assert_fail@plt+0x122dc>
   24520:	cmp	r3, #84	; 0x54
   24524:	beq	24660 <__assert_fail@plt+0x1325c>
   24528:	cmp	r3, #85	; 0x55
   2452c:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24530:	cmp	r5, #8
   24534:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24538:	movw	r3, #27316	; 0x6ab4
   2453c:	movt	r3, #5
   24540:	add	r3, r3, r5, lsl #2
   24544:	ldr	r7, [r3, #1136]	; 0x470
   24548:	b	236e0 <__assert_fail@plt+0x122dc>
   2454c:	cmp	r5, #31
   24550:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24554:	movw	r3, #35500	; 0x8aac
   24558:	movt	r3, #5
   2455c:	add	r3, r3, r5, lsl #2
   24560:	ldr	r7, [r3, #2804]	; 0xaf4
   24564:	b	236e0 <__assert_fail@plt+0x122dc>
   24568:	cmp	r5, #141	; 0x8d
   2456c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24570:	movw	r3, #35500	; 0x8aac
   24574:	movt	r3, #5
   24578:	add	r3, r3, r5, lsl #2
   2457c:	ldr	r7, [r3, #2028]	; 0x7ec
   24580:	b	236e0 <__assert_fail@plt+0x122dc>
   24584:	cmp	r5, #36	; 0x24
   24588:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   2458c:	movw	r3, #27316	; 0x6ab4
   24590:	movt	r3, #5
   24594:	add	r3, r3, r5, lsl #2
   24598:	ldr	r7, [r3, #-1220]	; 0xfffffb3c
   2459c:	b	236e0 <__assert_fail@plt+0x122dc>
   245a0:	cmp	r5, #13
   245a4:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   245a8:	movw	r3, #43684	; 0xaaa4
   245ac:	movt	r3, #5
   245b0:	add	r3, r3, r5, lsl #2
   245b4:	ldr	r7, [r3, #-2016]	; 0xfffff820
   245b8:	b	236e0 <__assert_fail@plt+0x122dc>
   245bc:	cmp	r5, #251	; 0xfb
   245c0:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   245c4:	movw	r3, #35500	; 0x8aac
   245c8:	movt	r3, #5
   245cc:	add	r3, r3, r5, lsl #2
   245d0:	ldr	r7, [r3, #3832]	; 0xef8
   245d4:	b	236e0 <__assert_fail@plt+0x122dc>
   245d8:	movw	r3, #1032	; 0x408
   245dc:	cmp	r5, r3
   245e0:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   245e4:	movw	r3, #19132	; 0x4abc
   245e8:	movt	r3, #5
   245ec:	add	r3, r3, r5, lsl #2
   245f0:	ldr	r7, [r3, #1272]	; 0x4f8
   245f4:	b	236e0 <__assert_fail@plt+0x122dc>
   245f8:	cmp	r3, #2
   245fc:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24600:	cmp	r5, #252	; 0xfc
   24604:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24608:	movw	r3, #27316	; 0x6ab4
   2460c:	movt	r3, #5
   24610:	add	r3, r3, r5, lsl #2
   24614:	ldr	r7, [r3, #-1072]	; 0xfffffbd0
   24618:	b	236e0 <__assert_fail@plt+0x122dc>
   2461c:	cmp	r5, #2
   24620:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24624:	movw	r3, #27316	; 0x6ab4
   24628:	movt	r3, #5
   2462c:	add	r3, r3, r5, lsl #2
   24630:	ldr	r7, [r3, #3552]	; 0xde0
   24634:	b	236e0 <__assert_fail@plt+0x122dc>
   24638:	cmp	r5, #243	; 0xf3
   2463c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24640:	movw	r3, #43684	; 0xaaa4
   24644:	movt	r3, #5
   24648:	add	r3, r3, r5, lsl #2
   2464c:	ldr	r7, [r3, #-1520]	; 0xfffffa10
   24650:	b	236e0 <__assert_fail@plt+0x122dc>
   24654:	add	r2, r2, #3584	; 0xe00
   24658:	cmp	r3, r2
   2465c:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24660:	cmp	r5, #12
   24664:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24668:	movw	r3, #27316	; 0x6ab4
   2466c:	movt	r3, #5
   24670:	add	r3, r3, r5, lsl #2
   24674:	ldr	r7, [r3, #2460]	; 0x99c
   24678:	b	236e0 <__assert_fail@plt+0x122dc>
   2467c:	cmp	r5, #7
   24680:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24684:	movw	r3, #27316	; 0x6ab4
   24688:	movt	r3, #5
   2468c:	add	r3, r3, r5, lsl #2
   24690:	ldr	r7, [r3, #-1252]	; 0xfffffb1c
   24694:	b	236e0 <__assert_fail@plt+0x122dc>
   24698:	cmp	r5, #12
   2469c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   246a0:	movw	r3, #43684	; 0xaaa4
   246a4:	movt	r3, #5
   246a8:	add	r3, r3, r5, lsl #2
   246ac:	ldr	r7, [r3, #-1600]	; 0xfffff9c0
   246b0:	b	236e0 <__assert_fail@plt+0x122dc>
   246b4:	cmp	r5, #41	; 0x29
   246b8:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   246bc:	movw	r3, #35500	; 0x8aac
   246c0:	movt	r3, #5
   246c4:	add	r3, r3, r5, lsl #2
   246c8:	ldr	r7, [r3, #-572]	; 0xfffffdc4
   246cc:	b	236e0 <__assert_fail@plt+0x122dc>
   246d0:	cmp	r5, #7
   246d4:	beq	24ddc <__assert_fail@plt+0x139d8>
   246d8:	bls	24ad8 <__assert_fail@plt+0x136d4>
   246dc:	cmp	r5, #11
   246e0:	beq	24e5c <__assert_fail@plt+0x13a58>
   246e4:	bls	24b30 <__assert_fail@plt+0x1372c>
   246e8:	cmp	r5, #13
   246ec:	beq	24e0c <__assert_fail@plt+0x13a08>
   246f0:	bcc	24e00 <__assert_fail@plt+0x139fc>
   246f4:	cmp	r5, #200	; 0xc8
   246f8:	beq	24df4 <__assert_fail@plt+0x139f0>
   246fc:	cmp	r5, #201	; 0xc9
   24700:	movweq	r7, #8688	; 0x21f0
   24704:	movteq	r7, #6
   24708:	beq	236e8 <__assert_fail@plt+0x122e4>
   2470c:	b	233a0 <__assert_fail@plt+0x11f9c>
   24710:	cmp	r5, #29
   24714:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24718:	movw	r3, #43684	; 0xaaa4
   2471c:	movt	r3, #5
   24720:	add	r3, r3, r5, lsl #2
   24724:	ldr	r7, [r3, #-328]	; 0xfffffeb8
   24728:	b	236e0 <__assert_fail@plt+0x122dc>
   2472c:	cmp	r5, #255	; 0xff
   24730:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24734:	movw	r3, #27316	; 0x6ab4
   24738:	movt	r3, #5
   2473c:	add	r3, r3, r5, lsl #2
   24740:	ldr	r7, [r3, #1264]	; 0x4f0
   24744:	b	236e0 <__assert_fail@plt+0x122dc>
   24748:	cmp	r5, #12
   2474c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24750:	movw	r3, #27316	; 0x6ab4
   24754:	movt	r3, #5
   24758:	add	r3, r3, r5, lsl #2
   2475c:	ldr	r7, [r3, #3352]	; 0xd18
   24760:	b	236e0 <__assert_fail@plt+0x122dc>
   24764:	cmp	r5, #20
   24768:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   2476c:	movw	r3, #43684	; 0xaaa4
   24770:	movt	r3, #5
   24774:	add	r3, r3, r5, lsl #2
   24778:	ldr	r7, [r3, #-2200]	; 0xfffff768
   2477c:	b	236e0 <__assert_fail@plt+0x122dc>
   24780:	cmp	r5, #24
   24784:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24788:	movw	r3, #43684	; 0xaaa4
   2478c:	movt	r3, #5
   24790:	add	r3, r3, r5, lsl #2
   24794:	ldr	r7, [r3, #-2116]	; 0xfffff7bc
   24798:	b	236e0 <__assert_fail@plt+0x122dc>
   2479c:	cmp	r5, #251	; 0xfb
   247a0:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   247a4:	movw	r3, #43684	; 0xaaa4
   247a8:	movt	r3, #5
   247ac:	add	r3, r3, r5, lsl #2
   247b0:	ldr	r7, [r3, #-3296]	; 0xfffff320
   247b4:	b	236e0 <__assert_fail@plt+0x122dc>
   247b8:	cmp	r3, #116	; 0x74
   247bc:	bne	233a0 <__assert_fail@plt+0x11f9c>
   247c0:	cmp	r5, #8
   247c4:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   247c8:	movw	r3, #43684	; 0xaaa4
   247cc:	movt	r3, #5
   247d0:	add	r3, r3, r5, lsl #2
   247d4:	ldr	r7, [r3, #1248]	; 0x4e0
   247d8:	b	236e0 <__assert_fail@plt+0x122dc>
   247dc:	cmp	r5, #34	; 0x22
   247e0:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   247e4:	movw	r3, #35500	; 0x8aac
   247e8:	movt	r3, #5
   247ec:	add	r3, r3, r5, lsl #2
   247f0:	ldr	r7, [r3, #2596]	; 0xa24
   247f4:	b	236e0 <__assert_fail@plt+0x122dc>
   247f8:	cmp	r5, #12
   247fc:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24800:	movw	r3, #27316	; 0x6ab4
   24804:	movt	r3, #5
   24808:	add	r3, r3, r5, lsl #2
   2480c:	ldr	r7, [r3, #1172]	; 0x494
   24810:	b	236e0 <__assert_fail@plt+0x122dc>
   24814:	cmp	r3, #93	; 0x5d
   24818:	beq	249c4 <__assert_fail@plt+0x135c0>
   2481c:	cmp	r3, #94	; 0x5e
   24820:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24824:	cmp	r5, #56	; 0x38
   24828:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   2482c:	movw	r3, #43684	; 0xaaa4
   24830:	movt	r3, #5
   24834:	add	r3, r3, r5, lsl #2
   24838:	ldr	r7, [r3, #-1900]	; 0xfffff894
   2483c:	b	236e0 <__assert_fail@plt+0x122dc>
   24840:	cmp	r5, #21
   24844:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24848:	movw	r3, #43684	; 0xaaa4
   2484c:	movt	r3, #5
   24850:	add	r3, r3, r5, lsl #2
   24854:	ldr	r7, [r3, #-544]	; 0xfffffde0
   24858:	b	236e0 <__assert_fail@plt+0x122dc>
   2485c:	cmp	r5, #254	; 0xfe
   24860:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24864:	movw	r3, #35500	; 0x8aac
   24868:	movt	r3, #5
   2486c:	add	r3, r3, r5, lsl #2
   24870:	ldr	r7, [r3, #-1592]	; 0xfffff9c8
   24874:	b	236e0 <__assert_fail@plt+0x122dc>
   24878:	cmp	r5, #224	; 0xe0
   2487c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24880:	movw	r3, #35500	; 0x8aac
   24884:	movt	r3, #5
   24888:	add	r3, r3, r5, lsl #2
   2488c:	ldr	r7, [r3, #2932]	; 0xb74
   24890:	b	236e0 <__assert_fail@plt+0x122dc>
   24894:	cmp	r5, #34	; 0x22
   24898:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   2489c:	movw	r3, #27316	; 0x6ab4
   248a0:	movt	r3, #5
   248a4:	add	r3, r3, r5, lsl #2
   248a8:	ldr	r7, [r3, #2288]	; 0x8f0
   248ac:	b	236e0 <__assert_fail@plt+0x122dc>
   248b0:	cmp	r5, #150	; 0x96
   248b4:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   248b8:	movw	r3, #43684	; 0xaaa4
   248bc:	movt	r3, #5
   248c0:	add	r3, r3, r5, lsl #2
   248c4:	ldr	r7, [r3, #-208]	; 0xffffff30
   248c8:	b	236e0 <__assert_fail@plt+0x122dc>
   248cc:	cmp	r5, #201	; 0xc9
   248d0:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   248d4:	movw	r3, #27316	; 0x6ab4
   248d8:	movt	r3, #5
   248dc:	add	r3, r3, r5, lsl #2
   248e0:	ldr	r7, [r3, #2512]	; 0x9d0
   248e4:	b	236e0 <__assert_fail@plt+0x122dc>
   248e8:	cmp	r5, #255	; 0xff
   248ec:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   248f0:	movw	r3, #43684	; 0xaaa4
   248f4:	movt	r3, #5
   248f8:	add	r3, r3, r5, lsl #2
   248fc:	ldr	r7, [r3, #1284]	; 0x504
   24900:	b	236e0 <__assert_fail@plt+0x122dc>
   24904:	cmp	r3, #6
   24908:	bne	233a0 <__assert_fail@plt+0x11f9c>
   2490c:	cmp	r5, #251	; 0xfb
   24910:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24914:	movw	r3, #27316	; 0x6ab4
   24918:	movt	r3, #5
   2491c:	add	r3, r3, r5, lsl #2
   24920:	ldr	r7, [r3, #-2520]	; 0xfffff628
   24924:	b	236e0 <__assert_fail@plt+0x122dc>
   24928:	cmp	r5, #21
   2492c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24930:	movw	r3, #43684	; 0xaaa4
   24934:	movt	r3, #5
   24938:	add	r3, r3, r5, lsl #2
   2493c:	ldr	r7, [r3, #-2288]	; 0xfffff710
   24940:	b	236e0 <__assert_fail@plt+0x122dc>
   24944:	cmp	r5, #254	; 0xfe
   24948:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   2494c:	movw	r3, #35500	; 0x8aac
   24950:	movt	r3, #5
   24954:	add	r3, r3, r5, lsl #2
   24958:	ldr	r7, [r3, #-2612]	; 0xfffff5cc
   2495c:	b	236e0 <__assert_fail@plt+0x122dc>
   24960:	cmp	r5, #228	; 0xe4
   24964:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24968:	movw	r3, #27316	; 0x6ab4
   2496c:	movt	r3, #5
   24970:	add	r3, r3, r5, lsl #2
   24974:	ldr	r7, [r3, #12]
   24978:	b	236e0 <__assert_fail@plt+0x122dc>
   2497c:	cmp	r5, #213	; 0xd5
   24980:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   24984:	movw	r3, #27316	; 0x6ab4
   24988:	movt	r3, #5
   2498c:	add	r3, r3, r5, lsl #2
   24990:	ldr	r7, [r3, #3692]	; 0xe6c
   24994:	b	236e0 <__assert_fail@plt+0x122dc>
   24998:	cmp	r5, #61	; 0x3d
   2499c:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   249a0:	movw	r3, #43684	; 0xaaa4
   249a4:	movt	r3, #5
   249a8:	add	r3, r3, r5, lsl #2
   249ac:	ldr	r7, [r3, #1000]	; 0x3e8
   249b0:	b	236e0 <__assert_fail@plt+0x122dc>
   249b4:	cmp	r3, #43	; 0x2b
   249b8:	beq	24600 <__assert_fail@plt+0x131fc>
   249bc:	cmp	r3, #45	; 0x2d
   249c0:	bne	233a0 <__assert_fail@plt+0x11f9c>
   249c4:	cmp	r5, #105	; 0x69
   249c8:	bhi	233a0 <__assert_fail@plt+0x11f9c>
   249cc:	movw	r3, #35500	; 0x8aac
   249d0:	movt	r3, #5
   249d4:	add	r3, r3, r5, lsl #2
   249d8:	ldr	r7, [r3, #620]	; 0x26c
   249dc:	b	236e0 <__assert_fail@plt+0x122dc>
   249e0:	mov	r2, #5
   249e4:	movw	r1, #9164	; 0x23cc
   249e8:	movt	r1, #6
   249ec:	bl	11170 <dcgettext@plt>
   249f0:	mov	r1, r0
   249f4:	mov	r0, #1
   249f8:	bl	1132c <__printf_chk@plt>
   249fc:	b	232e0 <__assert_fail@plt+0x11edc>
   24a00:	mov	r2, #5
   24a04:	movw	r1, #9300	; 0x2454
   24a08:	movt	r1, #6
   24a0c:	bl	11170 <dcgettext@plt>
   24a10:	mov	r1, r0
   24a14:	mov	r0, #1
   24a18:	bl	1132c <__printf_chk@plt>
   24a1c:	b	232e0 <__assert_fail@plt+0x11edc>
   24a20:	cmn	r2, #15
   24a24:	beq	24b8c <__assert_fail@plt+0x13788>
   24a28:	cmn	r2, #14
   24a2c:	beq	24c94 <__assert_fail@plt+0x13890>
   24a30:	ldrh	r3, [r3, #50]	; 0x32
   24a34:	cmp	r3, #8
   24a38:	beq	24cc4 <__assert_fail@plt+0x138c0>
   24a3c:	cmp	r3, #140	; 0x8c
   24a40:	beq	24cfc <__assert_fail@plt+0x138f8>
   24a44:	sub	r1, r3, #180	; 0xb4
   24a48:	cmp	r3, #62	; 0x3e
   24a4c:	cmpne	r1, #1
   24a50:	bls	24c38 <__assert_fail@plt+0x13834>
   24a54:	cmp	r3, #50	; 0x32
   24a58:	bne	24a70 <__assert_fail@plt+0x1366c>
   24a5c:	ldrb	r3, [r8, #7]
   24a60:	cmp	r3, #1
   24a64:	beq	24f14 <__assert_fail@plt+0x13b10>
   24a68:	cmp	r3, #13
   24a6c:	beq	24f00 <__assert_fail@plt+0x13afc>
   24a70:	str	r2, [sp]
   24a74:	mov	r1, #1
   24a78:	movw	r3, #9812	; 0x2654
   24a7c:	add	r0, sp, #108	; 0x6c
   24a80:	movt	r3, #6
   24a84:	mov	r2, #40	; 0x28
   24a88:	bl	112cc <__sprintf_chk@plt>
   24a8c:	add	r1, sp, #108	; 0x6c
   24a90:	b	23a20 <__assert_fail@plt+0x1261c>
   24a94:	movw	r3, #43684	; 0xaaa4
   24a98:	movt	r3, #5
   24a9c:	add	r3, r3, r5, lsl #2
   24aa0:	ldr	r7, [r3, #-1672]	; 0xfffff978
   24aa4:	b	236e0 <__assert_fail@plt+0x122dc>
   24aa8:	cmp	r5, #9
   24aac:	beq	24d9c <__assert_fail@plt+0x13998>
   24ab0:	bls	24c00 <__assert_fail@plt+0x137fc>
   24ab4:	cmp	r5, #200	; 0xc8
   24ab8:	beq	24d90 <__assert_fail@plt+0x1398c>
   24abc:	cmp	r5, #201	; 0xc9
   24ac0:	beq	24d84 <__assert_fail@plt+0x13980>
   24ac4:	cmp	r5, #10
   24ac8:	bne	233a0 <__assert_fail@plt+0x11f9c>
   24acc:	movw	r7, #8868	; 0x22a4
   24ad0:	movt	r7, #6
   24ad4:	b	236e8 <__assert_fail@plt+0x122e4>
   24ad8:	cmp	r5, #3
   24adc:	beq	24e38 <__assert_fail@plt+0x13a34>
   24ae0:	bhi	24b4c <__assert_fail@plt+0x13748>
   24ae4:	cmp	r5, #1
   24ae8:	beq	24e50 <__assert_fail@plt+0x13a4c>
   24aec:	movwls	r7, #8428	; 0x20ec
   24af0:	movtls	r7, #6
   24af4:	movwhi	r7, #8456	; 0x2108
   24af8:	movthi	r7, #6
   24afc:	b	236e8 <__assert_fail@plt+0x122e4>
   24b00:	cmp	r3, #195	; 0xc3
   24b04:	beq	249c4 <__assert_fail@plt+0x135c0>
   24b08:	b	233a0 <__assert_fail@plt+0x11f9c>
   24b0c:	cmp	r3, #92	; 0x5c
   24b10:	bcs	235c8 <__assert_fail@plt+0x121c4>
   24b14:	cmp	r3, #84	; 0x54
   24b18:	bls	24ca0 <__assert_fail@plt+0x1389c>
   24b1c:	cmp	r3, #85	; 0x55
   24b20:	beq	23268 <__assert_fail@plt+0x11e64>
   24b24:	cmp	r3, #90	; 0x5a
   24b28:	bhi	23548 <__assert_fail@plt+0x12144>
   24b2c:	b	235c8 <__assert_fail@plt+0x121c4>
   24b30:	cmp	r5, #9
   24b34:	beq	24e44 <__assert_fail@plt+0x13a40>
   24b38:	movwls	r7, #8556	; 0x216c
   24b3c:	movtls	r7, #6
   24b40:	movwhi	r7, #8588	; 0x218c
   24b44:	movthi	r7, #6
   24b48:	b	236e8 <__assert_fail@plt+0x122e4>
   24b4c:	cmp	r5, #5
   24b50:	beq	24de8 <__assert_fail@plt+0x139e4>
   24b54:	movwls	r7, #8480	; 0x2120
   24b58:	movtls	r7, #6
   24b5c:	movwhi	r7, #8520	; 0x2148
   24b60:	movthi	r7, #6
   24b64:	b	236e8 <__assert_fail@plt+0x122e4>
   24b68:	cmp	r3, #40	; 0x28
   24b6c:	beq	23268 <__assert_fail@plt+0x11e64>
   24b70:	bhi	24e18 <__assert_fail@plt+0x13a14>
   24b74:	cmp	r3, #36	; 0x24
   24b78:	beq	235c8 <__assert_fail@plt+0x121c4>
   24b7c:	bhi	24ec4 <__assert_fail@plt+0x13ac0>
   24b80:	cmp	r3, #23
   24b84:	bhi	23548 <__assert_fail@plt+0x12144>
   24b88:	b	235c8 <__assert_fail@plt+0x121c4>
   24b8c:	movw	r1, #13276	; 0x33dc
   24b90:	movt	r1, #7
   24b94:	b	23a20 <__assert_fail@plt+0x1261c>
   24b98:	movw	r2, #57005	; 0xdead
   24b9c:	cmp	r3, r2
   24ba0:	beq	235c8 <__assert_fail@plt+0x121c4>
   24ba4:	bhi	24d58 <__assert_fail@plt+0x13954>
   24ba8:	movw	r2, #44357	; 0xad45
   24bac:	cmp	r3, r2
   24bb0:	beq	235c8 <__assert_fail@plt+0x121c4>
   24bb4:	bls	24ef0 <__assert_fail@plt+0x13aec>
   24bb8:	movw	r2, #47787	; 0xbaab
   24bbc:	cmp	r3, r2
   24bc0:	beq	235c8 <__assert_fail@plt+0x121c4>
   24bc4:	movw	r2, #48879	; 0xbeef
   24bc8:	cmp	r3, r2
   24bcc:	bne	23548 <__assert_fail@plt+0x12144>
   24bd0:	b	235c8 <__assert_fail@plt+0x121c4>
   24bd4:	cmp	r3, #223	; 0xdf
   24bd8:	bhi	24da8 <__assert_fail@plt+0x139a4>
   24bdc:	cmp	r3, #221	; 0xdd
   24be0:	bcs	235c8 <__assert_fail@plt+0x121c4>
   24be4:	cmp	r3, #195	; 0xc3
   24be8:	beq	235c8 <__assert_fail@plt+0x121c4>
   24bec:	cmp	r3, #197	; 0xc5
   24bf0:	beq	235c8 <__assert_fail@plt+0x121c4>
   24bf4:	cmp	r3, #191	; 0xbf
   24bf8:	bne	23548 <__assert_fail@plt+0x12144>
   24bfc:	b	235c8 <__assert_fail@plt+0x121c4>
   24c00:	cmp	r5, #7
   24c04:	beq	24d28 <__assert_fail@plt+0x13924>
   24c08:	cmp	r5, #8
   24c0c:	movweq	r7, #8832	; 0x2280
   24c10:	movteq	r7, #6
   24c14:	beq	236e8 <__assert_fail@plt+0x122e4>
   24c18:	b	233a0 <__assert_fail@plt+0x11f9c>
   24c1c:	cmp	r5, #0
   24c20:	beq	24d78 <__assert_fail@plt+0x13974>
   24c24:	cmp	r5, #1
   24c28:	movweq	r7, #8728	; 0x2218
   24c2c:	movteq	r7, #6
   24c30:	beq	236e8 <__assert_fail@plt+0x122e4>
   24c34:	b	233a0 <__assert_fail@plt+0x11f9c>
   24c38:	cmn	r2, #254	; 0xfe
   24c3c:	bne	24a54 <__assert_fail@plt+0x13650>
   24c40:	movw	r1, #8992	; 0x2320
   24c44:	movt	r1, #6
   24c48:	b	23a20 <__assert_fail@plt+0x1261c>
   24c4c:	movw	r2, #36902	; 0x9026
   24c50:	cmp	r3, r2
   24c54:	beq	235c8 <__assert_fail@plt+0x121c4>
   24c58:	bls	24ed0 <__assert_fail@plt+0x13acc>
   24c5c:	movw	r2, #36929	; 0x9041
   24c60:	cmp	r3, r2
   24c64:	beq	23268 <__assert_fail@plt+0x11e64>
   24c68:	add	r2, r2, #63	; 0x3f
   24c6c:	cmp	r3, r2
   24c70:	bne	23548 <__assert_fail@plt+0x12144>
   24c74:	b	235c8 <__assert_fail@plt+0x121c4>
   24c78:	cmp	r3, #3
   24c7c:	beq	23268 <__assert_fail@plt+0x11e64>
   24c80:	cmp	r3, #4
   24c84:	beq	235c8 <__assert_fail@plt+0x121c4>
   24c88:	cmp	r3, #2
   24c8c:	bne	23548 <__assert_fail@plt+0x12144>
   24c90:	b	235c8 <__assert_fail@plt+0x121c4>
   24c94:	movw	r1, #63116	; 0xf68c
   24c98:	movt	r1, #5
   24c9c:	b	23a20 <__assert_fail@plt+0x1261c>
   24ca0:	cmp	r3, #83	; 0x53
   24ca4:	bcs	235c8 <__assert_fail@plt+0x121c4>
   24ca8:	cmp	r3, #76	; 0x4c
   24cac:	bhi	24e68 <__assert_fail@plt+0x13a64>
   24cb0:	cmp	r3, #75	; 0x4b
   24cb4:	bcs	235c8 <__assert_fail@plt+0x121c4>
   24cb8:	cmp	r3, #62	; 0x3e
   24cbc:	bne	23548 <__assert_fail@plt+0x12144>
   24cc0:	b	235c8 <__assert_fail@plt+0x121c4>
   24cc4:	cmn	r2, #253	; 0xfd
   24cc8:	beq	24d04 <__assert_fail@plt+0x13900>
   24ccc:	cmn	r2, #252	; 0xfc
   24cd0:	bne	24a70 <__assert_fail@plt+0x1366c>
   24cd4:	movw	r1, #8984	; 0x2318
   24cd8:	movt	r1, #6
   24cdc:	b	23a20 <__assert_fail@plt+0x1261c>
   24ce0:	cmp	r3, #181	; 0xb5
   24ce4:	bhi	24e74 <__assert_fail@plt+0x13a70>
   24ce8:	cmp	r3, #180	; 0xb4
   24cec:	bcs	235c8 <__assert_fail@plt+0x121c4>
   24cf0:	cmp	r3, #177	; 0xb1
   24cf4:	bne	23548 <__assert_fail@plt+0x12144>
   24cf8:	b	235c8 <__assert_fail@plt+0x121c4>
   24cfc:	cmn	r2, #256	; 0x100
   24d00:	bne	24a70 <__assert_fail@plt+0x1366c>
   24d04:	movw	r1, #9020	; 0x233c
   24d08:	movt	r1, #6
   24d0c:	b	23a20 <__assert_fail@plt+0x1261c>
   24d10:	movw	r7, #8740	; 0x2224
   24d14:	movt	r7, #6
   24d18:	b	236e8 <__assert_fail@plt+0x122e4>
   24d1c:	movw	r7, #8764	; 0x223c
   24d20:	movt	r7, #6
   24d24:	b	236e8 <__assert_fail@plt+0x122e4>
   24d28:	movw	r7, #8812	; 0x226c
   24d2c:	movt	r7, #6
   24d30:	b	236e8 <__assert_fail@plt+0x122e4>
   24d34:	cmp	r3, #113	; 0x71
   24d38:	bcs	235c8 <__assert_fail@plt+0x121c4>
   24d3c:	cmp	r3, #101	; 0x65
   24d40:	beq	235c8 <__assert_fail@plt+0x121c4>
   24d44:	bcc	23548 <__assert_fail@plt+0x12144>
   24d48:	sub	r3, r3, #105	; 0x69
   24d4c:	cmp	r3, #1
   24d50:	bhi	23548 <__assert_fail@plt+0x12144>
   24d54:	b	235c8 <__assert_fail@plt+0x121c4>
   24d58:	movw	r2, #65200	; 0xfeb0
   24d5c:	cmp	r3, r2
   24d60:	beq	235c8 <__assert_fail@plt+0x121c4>
   24d64:	bhi	24eb0 <__assert_fail@plt+0x13aac>
   24d68:	movw	r2, #61453	; 0xf00d
   24d6c:	cmp	r3, r2
   24d70:	bne	23548 <__assert_fail@plt+0x12144>
   24d74:	b	235c8 <__assert_fail@plt+0x121c4>
   24d78:	movw	r7, #8712	; 0x2208
   24d7c:	movt	r7, #6
   24d80:	b	236e8 <__assert_fail@plt+0x122e4>
   24d84:	movw	r7, #8912	; 0x22d0
   24d88:	movt	r7, #6
   24d8c:	b	236e8 <__assert_fail@plt+0x122e4>
   24d90:	movw	r7, #8888	; 0x22b8
   24d94:	movt	r7, #6
   24d98:	b	236e8 <__assert_fail@plt+0x122e4>
   24d9c:	movw	r7, #8852	; 0x2294
   24da0:	movt	r7, #6
   24da4:	b	236e8 <__assert_fail@plt+0x122e4>
   24da8:	movw	r2, #4185	; 0x1059
   24dac:	cmp	r3, r2
   24db0:	beq	235c8 <__assert_fail@plt+0x121c4>
   24db4:	movw	r2, #4643	; 0x1223
   24db8:	cmp	r3, r2
   24dbc:	beq	235c8 <__assert_fail@plt+0x121c4>
   24dc0:	sub	r2, r2, #460	; 0x1cc
   24dc4:	cmp	r3, r2
   24dc8:	bne	23548 <__assert_fail@plt+0x12144>
   24dcc:	b	235c8 <__assert_fail@plt+0x121c4>
   24dd0:	movw	r7, #8796	; 0x225c
   24dd4:	movt	r7, #6
   24dd8:	b	236e8 <__assert_fail@plt+0x122e4>
   24ddc:	movw	r7, #8540	; 0x215c
   24de0:	movt	r7, #6
   24de4:	b	236e8 <__assert_fail@plt+0x122e4>
   24de8:	movw	r7, #8500	; 0x2134
   24dec:	movt	r7, #6
   24df0:	b	236e8 <__assert_fail@plt+0x122e4>
   24df4:	movw	r7, #8664	; 0x21d8
   24df8:	movt	r7, #6
   24dfc:	b	236e8 <__assert_fail@plt+0x122e4>
   24e00:	movw	r7, #8624	; 0x21b0
   24e04:	movt	r7, #6
   24e08:	b	236e8 <__assert_fail@plt+0x122e4>
   24e0c:	movw	r7, #8644	; 0x21c4
   24e10:	movt	r7, #6
   24e14:	b	236e8 <__assert_fail@plt+0x122e4>
   24e18:	cmp	r3, #42	; 0x2a
   24e1c:	bcc	23548 <__assert_fail@plt+0x12144>
   24e20:	cmp	r3, #43	; 0x2b
   24e24:	bls	235c8 <__assert_fail@plt+0x121c4>
   24e28:	sub	r3, r3, #45	; 0x2d
   24e2c:	cmp	r3, #3
   24e30:	bhi	23548 <__assert_fail@plt+0x12144>
   24e34:	b	235c8 <__assert_fail@plt+0x121c4>
   24e38:	movw	r7, #8468	; 0x2114
   24e3c:	movt	r7, #6
   24e40:	b	236e8 <__assert_fail@plt+0x122e4>
   24e44:	movw	r7, #8572	; 0x217c
   24e48:	movt	r7, #6
   24e4c:	b	236e8 <__assert_fail@plt+0x122e4>
   24e50:	movw	r7, #8444	; 0x20fc
   24e54:	movt	r7, #6
   24e58:	b	236e8 <__assert_fail@plt+0x122e4>
   24e5c:	movw	r7, #8604	; 0x219c
   24e60:	movt	r7, #6
   24e64:	b	236e8 <__assert_fail@plt+0x122e4>
   24e68:	cmp	r3, #80	; 0x50
   24e6c:	bne	23548 <__assert_fail@plt+0x12144>
   24e70:	b	235c8 <__assert_fail@plt+0x121c4>
   24e74:	cmp	r3, #183	; 0xb7
   24e78:	bne	23548 <__assert_fail@plt+0x12144>
   24e7c:	b	235c8 <__assert_fail@plt+0x121c4>
   24e80:	movw	r1, #50896	; 0xc6d0
   24e84:	mov	r2, #5
   24e88:	movt	r1, #5
   24e8c:	bl	11170 <dcgettext@plt>
   24e90:	mov	r1, r0
   24e94:	b	23a20 <__assert_fail@plt+0x1261c>
   24e98:	movw	r1, #50888	; 0xc6c8
   24e9c:	mov	r2, #5
   24ea0:	movt	r1, #5
   24ea4:	bl	11170 <dcgettext@plt>
   24ea8:	mov	r1, r0
   24eac:	b	23a20 <__assert_fail@plt+0x1261c>
   24eb0:	sub	r3, r3, #65024	; 0xfe00
   24eb4:	sub	r3, r3, #186	; 0xba
   24eb8:	cmp	r3, #1
   24ebc:	bhi	23548 <__assert_fail@plt+0x12144>
   24ec0:	b	235c8 <__assert_fail@plt+0x121c4>
   24ec4:	cmp	r3, #39	; 0x27
   24ec8:	bne	23548 <__assert_fail@plt+0x12144>
   24ecc:	b	235c8 <__assert_fail@plt+0x121c4>
   24ed0:	movw	r2, #33303	; 0x8217
   24ed4:	cmp	r3, r2
   24ed8:	bne	23548 <__assert_fail@plt+0x12144>
   24edc:	b	235c8 <__assert_fail@plt+0x121c4>
   24ee0:	movw	r2, #13104	; 0x3330
   24ee4:	cmp	r3, r2
   24ee8:	bne	23548 <__assert_fail@plt+0x12144>
   24eec:	b	235c8 <__assert_fail@plt+0x121c4>
   24ef0:	movw	r2, #43975	; 0xabc7
   24ef4:	cmp	r3, r2
   24ef8:	bne	23548 <__assert_fail@plt+0x12144>
   24efc:	b	235c8 <__assert_fail@plt+0x121c4>
   24f00:	cmn	r2, #224	; 0xe0
   24f04:	bne	24a70 <__assert_fail@plt+0x1366c>
   24f08:	movw	r1, #9008	; 0x2330
   24f0c:	movt	r1, #6
   24f10:	b	23a20 <__assert_fail@plt+0x1261c>
   24f14:	cmn	r2, #256	; 0x100
   24f18:	bne	24a70 <__assert_fail@plt+0x1366c>
   24f1c:	movw	r1, #64120	; 0xfa78
   24f20:	movt	r1, #5
   24f24:	b	23a20 <__assert_fail@plt+0x1261c>
   24f28:	bl	1117c <__stack_chk_fail@plt>
   24f2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24f30:	vpush	{d8-d10}
   24f34:	movw	r4, #24896	; 0x6140
   24f38:	movt	r4, #9
   24f3c:	movw	r5, #16680	; 0x4128
   24f40:	movt	r5, #9
   24f44:	sub	sp, sp, #172	; 0xac
   24f48:	ldr	r3, [r4, #-1712]	; 0xfffff950
   24f4c:	ldr	r2, [r5]
   24f50:	cmp	r3, #0
   24f54:	str	r4, [sp, #64]	; 0x40
   24f58:	str	r5, [sp, #80]	; 0x50
   24f5c:	str	r0, [sp, #48]	; 0x30
   24f60:	str	r2, [sp, #164]	; 0xa4
   24f64:	bne	24f80 <__assert_fail@plt+0x13b7c>
   24f68:	ldr	r3, [r4, #-1708]	; 0xfffff954
   24f6c:	cmp	r3, #0
   24f70:	bne	24f80 <__assert_fail@plt+0x13b7c>
   24f74:	ldr	r3, [r4, #-1704]	; 0xfffff958
   24f78:	cmp	r3, #0
   24f7c:	beq	251c8 <__assert_fail@plt+0x13dc4>
   24f80:	movw	sl, #16712	; 0x4148
   24f84:	movt	sl, #9
   24f88:	movw	r3, #1960	; 0x7a8
   24f8c:	ldrd	r2, [r3, sl]
   24f90:	orrs	r6, r2, r3
   24f94:	bne	2509c <__assert_fail@plt+0x13c98>
   24f98:	mov	r8, r2
   24f9c:	mov	r9, r3
   24fa0:	mov	fp, #0
   24fa4:	strd	r8, [sp, #32]
   24fa8:	str	fp, [sp, #108]	; 0x6c
   24fac:	ldr	r4, [sp, #64]	; 0x40
   24fb0:	movw	r3, #63648	; 0xf8a0
   24fb4:	movt	r3, #65535	; 0xffff
   24fb8:	movw	r1, #24896	; 0x6140
   24fbc:	movt	r1, #9
   24fc0:	ldrd	r2, [r3, r4]
   24fc4:	orrs	r5, r2, r3
   24fc8:	beq	251ec <__assert_fail@plt+0x13de8>
   24fcc:	ldr	r0, [r1, #-1704]	; 0xfffff958
   24fd0:	cmp	r0, #0
   24fd4:	bne	24ffc <__assert_fail@plt+0x13bf8>
   24fd8:	ldr	ip, [r1, #-1700]	; 0xfffff95c
   24fdc:	cmp	ip, #0
   24fe0:	beq	25cbc <__assert_fail@plt+0x148b8>
   24fe4:	ldr	r1, [r1, #-1708]	; 0xfffff954
   24fe8:	cmp	r1, #0
   24fec:	bne	25e28 <__assert_fail@plt+0x14a24>
   24ff0:	ldr	r1, [sl, #1876]	; 0x754
   24ff4:	cmp	r1, #0
   24ff8:	beq	26478 <__assert_fail@plt+0x15074>
   24ffc:	mov	r1, #0
   25000:	mov	r0, #16
   25004:	strd	r0, [sp]
   25008:	movw	r4, #16712	; 0x4148
   2500c:	ldr	r0, [sp, #48]	; 0x30
   25010:	movt	r4, #9
   25014:	bl	1d67c <__assert_fail@plt+0xc278>
   25018:	ldr	r1, [sl, #456]	; 0x1c8
   2501c:	mov	r2, #0
   25020:	add	r1, r0, r1
   25024:	ldr	r0, [sp, #48]	; 0x30
   25028:	bl	113bc <fseek@plt>
   2502c:	subs	r5, r0, #0
   25030:	beq	25da4 <__assert_fail@plt+0x149a0>
   25034:	mov	r2, #5
   25038:	movw	r1, #10020	; 0x2724
   2503c:	mov	r0, #0
   25040:	movt	r1, #6
   25044:	bl	11170 <dcgettext@plt>
   25048:	mov	r7, #0
   2504c:	mov	r6, #0
   25050:	strd	r6, [sp, #96]	; 0x60
   25054:	bl	4b2b0 <error@@Base>
   25058:	mov	r7, #0
   2505c:	str	r7, [sp, #120]	; 0x78
   25060:	mov	r6, #0
   25064:	mov	r7, #0
   25068:	strd	r6, [sp, #88]	; 0x58
   2506c:	ldr	r0, [sp, #120]	; 0x78
   25070:	bl	1111c <free@plt>
   25074:	ldr	r7, [sp, #64]	; 0x40
   25078:	ldr	r3, [r7, #-1700]	; 0xfffff95c
   2507c:	cmp	r3, #0
   25080:	bne	251a4 <__assert_fail@plt+0x13da0>
   25084:	mov	r4, #0
   25088:	mov	r5, #0
   2508c:	str	r3, [sp, #120]	; 0x78
   25090:	strd	r4, [sp, #72]	; 0x48
   25094:	str	r3, [sp, #84]	; 0x54
   25098:	b	25204 <__assert_fail@plt+0x13e00>
   2509c:	ldr	r7, [sp, #64]	; 0x40
   250a0:	movw	r1, #24896	; 0x6140
   250a4:	movt	r1, #9
   250a8:	ldr	r0, [r7, #-1704]	; 0xfffff958
   250ac:	cmp	r0, #0
   250b0:	bne	250d8 <__assert_fail@plt+0x13cd4>
   250b4:	ldr	ip, [r1, #-1700]	; 0xfffff95c
   250b8:	cmp	ip, #0
   250bc:	beq	25cf0 <__assert_fail@plt+0x148ec>
   250c0:	ldr	r1, [r1, #-1708]	; 0xfffff954
   250c4:	cmp	r1, #0
   250c8:	bne	25e5c <__assert_fail@plt+0x14a58>
   250cc:	ldr	r1, [sl, #1876]	; 0x754
   250d0:	cmp	r1, #0
   250d4:	beq	2603c <__assert_fail@plt+0x14c38>
   250d8:	ldrh	r1, [sl, #50]	; 0x32
   250dc:	movw	r0, #36902	; 0x9026
   250e0:	cmp	r1, #22
   250e4:	cmpne	r1, r0
   250e8:	bne	25cdc <__assert_fail@plt+0x148d8>
   250ec:	ldrb	r4, [sl, #4]
   250f0:	cmp	r4, #2
   250f4:	moveq	r4, #8
   250f8:	movne	r4, #4
   250fc:	mov	r6, #16
   25100:	mov	r7, #0
   25104:	ldr	r0, [sp, #48]	; 0x30
   25108:	strd	r6, [sp]
   2510c:	bl	1d67c <__assert_fail@plt+0xc278>
   25110:	ldr	r1, [sl, #456]	; 0x1c8
   25114:	mov	r2, #0
   25118:	add	r1, r0, r1
   2511c:	ldr	r0, [sp, #48]	; 0x30
   25120:	bl	113bc <fseek@plt>
   25124:	subs	r5, r0, #0
   25128:	bne	25dec <__assert_fail@plt+0x149e8>
   2512c:	ldr	ip, [sp, #48]	; 0x30
   25130:	mov	r1, #8
   25134:	mov	r2, r4
   25138:	add	r0, sp, #140	; 0x8c
   2513c:	mov	r3, #1
   25140:	str	ip, [sp]
   25144:	bl	1135c <__fread_chk@plt>
   25148:	cmp	r0, #1
   2514c:	bne	25d88 <__assert_fail@plt+0x14984>
   25150:	ldr	r6, [sp, #48]	; 0x30
   25154:	mov	r3, r0
   25158:	mov	r1, #8
   2515c:	add	r0, sp, #148	; 0x94
   25160:	mov	r2, r4
   25164:	str	r6, [sp]
   25168:	bl	1135c <__fread_chk@plt>
   2516c:	cmp	r0, #1
   25170:	beq	25fc8 <__assert_fail@plt+0x14bc4>
   25174:	movw	r1, #10108	; 0x277c
   25178:	mov	r2, #5
   2517c:	movt	r1, #6
   25180:	mov	r0, r5
   25184:	bl	11170 <dcgettext@plt>
   25188:	bl	4b2b0 <error@@Base>
   2518c:	mov	fp, #0
   25190:	str	fp, [sp, #108]	; 0x6c
   25194:	ldr	ip, [sp, #64]	; 0x40
   25198:	ldr	r4, [ip, #-1700]	; 0xfffff95c
   2519c:	cmp	r4, #0
   251a0:	beq	25e74 <__assert_fail@plt+0x14a70>
   251a4:	mov	r0, #0
   251a8:	b	251cc <__assert_fail@plt+0x13dc8>
   251ac:	ldr	r4, [sp, #108]	; 0x6c
   251b0:	cmp	r4, #0
   251b4:	beq	251c8 <__assert_fail@plt+0x13dc4>
   251b8:	ldr	r0, [sp, #108]	; 0x6c
   251bc:	bl	1111c <free@plt>
   251c0:	mov	r0, fp
   251c4:	bl	1111c <free@plt>
   251c8:	mov	r0, #1
   251cc:	ldr	r4, [sp, #80]	; 0x50
   251d0:	ldr	r2, [sp, #164]	; 0xa4
   251d4:	ldr	r3, [r4]
   251d8:	cmp	r2, r3
   251dc:	bne	26498 <__assert_fail@plt+0x15094>
   251e0:	add	sp, sp, #172	; 0xac
   251e4:	vpop	{d8-d10}
   251e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   251ec:	mov	r5, #0
   251f0:	strd	r2, [sp, #88]	; 0x58
   251f4:	str	r5, [sp, #84]	; 0x54
   251f8:	strd	r2, [sp, #96]	; 0x60
   251fc:	strd	r2, [sp, #72]	; 0x48
   25200:	str	r5, [sp, #120]	; 0x78
   25204:	movw	r3, #1960	; 0x7a8
   25208:	ldrd	r0, [sl, r3]
   2520c:	orrs	r7, r0, r1
   25210:	bne	2522c <__assert_fail@plt+0x13e28>
   25214:	ldr	ip, [sp, #64]	; 0x40
   25218:	movw	r3, #63648	; 0xf8a0
   2521c:	movt	r3, #65535	; 0xffff
   25220:	ldrd	r2, [r3, ip]
   25224:	orrs	r4, r2, r3
   25228:	beq	25448 <__assert_fail@plt+0x14044>
   2522c:	ldr	r5, [sp, #64]	; 0x40
   25230:	movw	r3, #24896	; 0x6140
   25234:	movt	r3, #9
   25238:	ldr	r2, [r5, #-1712]	; 0xfffff950
   2523c:	cmp	r2, #0
   25240:	beq	25448 <__assert_fail@plt+0x14044>
   25244:	ldr	r3, [r3, #-1700]	; 0xfffff95c
   25248:	cmp	r3, #0
   2524c:	beq	25448 <__assert_fail@plt+0x14044>
   25250:	ldr	r3, [sl, #1876]	; 0x754
   25254:	movw	r4, #16712	; 0x4148
   25258:	movt	r4, #9
   2525c:	cmp	r3, #0
   25260:	beq	25448 <__assert_fail@plt+0x14044>
   25264:	ldr	r3, [r4, #1872]	; 0x750
   25268:	cmp	r3, #0
   2526c:	beq	25448 <__assert_fail@plt+0x14044>
   25270:	orrs	r6, r0, r1
   25274:	bne	26070 <__assert_fail@plt+0x14c6c>
   25278:	ldr	r7, [sp, #64]	; 0x40
   2527c:	movw	r3, #63648	; 0xf8a0
   25280:	movt	r3, #65535	; 0xffff
   25284:	ldrd	r2, [r3, r7]
   25288:	orrs	ip, r2, r3
   2528c:	bne	25e9c <__assert_fail@plt+0x14a98>
   25290:	ldr	r6, [sp, #64]	; 0x40
   25294:	ldr	r3, [r6, #-1704]	; 0xfffff958
   25298:	cmp	r3, #0
   2529c:	beq	251ac <__assert_fail@plt+0x13da8>
   252a0:	ldr	r7, [sp, #108]	; 0x6c
   252a4:	cmp	r7, #0
   252a8:	beq	255cc <__assert_fail@plt+0x141c8>
   252ac:	mov	r2, #5
   252b0:	movw	r1, #10764	; 0x2a0c
   252b4:	mov	r0, #0
   252b8:	movt	r1, #6
   252bc:	bl	11170 <dcgettext@plt>
   252c0:	ldr	r2, [sp, #32]
   252c4:	mov	r1, r0
   252c8:	mov	r0, #1
   252cc:	bl	1132c <__printf_chk@plt>
   252d0:	ldr	r0, [sp, #32]
   252d4:	mov	r1, #4
   252d8:	bl	110d4 <calloc@plt>
   252dc:	subs	r4, r0, #0
   252e0:	str	r4, [sp, #56]	; 0x38
   252e4:	beq	26160 <__assert_fail@plt+0x14d5c>
   252e8:	mov	r2, #5
   252ec:	movw	r1, #10880	; 0x2a80
   252f0:	mov	r0, #0
   252f4:	movt	r1, #6
   252f8:	bl	11170 <dcgettext@plt>
   252fc:	mov	r1, r0
   25300:	mov	r0, #1
   25304:	bl	1132c <__printf_chk@plt>
   25308:	ldrd	r6, [sp, #32]
   2530c:	orrs	r7, r6, r7
   25310:	beq	2643c <__assert_fail@plt+0x15038>
   25314:	ldr	ip, [sp, #108]	; 0x6c
   25318:	mov	lr, #0
   2531c:	ldr	r7, [sp, #56]	; 0x38
   25320:	mov	r6, lr
   25324:	sub	sl, ip, #8
   25328:	mov	r4, #0
   2532c:	mov	r5, #0
   25330:	strd	r4, [sp, #40]	; 0x28
   25334:	str	r7, [sp, #48]	; 0x30
   25338:	ldrd	r2, [sl, #8]!
   2533c:	orrs	ip, r2, r3
   25340:	moveq	r1, #0
   25344:	movne	r1, #1
   25348:	cmp	r9, r3
   2534c:	cmpeq	r8, r2
   25350:	movls	r1, #0
   25354:	andhi	r1, r1, #1
   25358:	cmp	r1, #0
   2535c:	beq	25d1c <__assert_fail@plt+0x14918>
   25360:	ldrd	r4, [sp, #32]
   25364:	cmp	r5, r3
   25368:	cmpeq	r4, r2
   2536c:	bls	25d1c <__assert_fail@plt+0x14918>
   25370:	ldr	r7, [sp, #40]	; 0x28
   25374:	ldr	ip, [sp, #56]	; 0x38
   25378:	lsl	r5, r7, #2
   2537c:	mov	r7, lr
   25380:	str	r5, [sp, #68]	; 0x44
   25384:	ldr	r4, [ip, r5]
   25388:	str	r4, [sp, #104]	; 0x68
   2538c:	b	253b0 <__assert_fail@plt+0x13fac>
   25390:	ldrd	r4, [sp, #32]
   25394:	cmp	r5, r3
   25398:	cmpeq	r4, r2
   2539c:	bls	253f4 <__assert_fail@plt+0x13ff0>
   253a0:	mov	r1, #0
   253a4:	cmp	r9, r1
   253a8:	cmpeq	r8, r0
   253ac:	bcc	2549c <__assert_fail@plt+0x14098>
   253b0:	ldr	r1, [sp, #104]	; 0x68
   253b4:	add	r7, r7, #1
   253b8:	lsl	r2, r2, #3
   253bc:	rsb	r0, lr, r7
   253c0:	add	ip, r0, r1
   253c4:	ldrd	r2, [r2, fp]
   253c8:	cmp	ip, r6
   253cc:	addhi	r6, r6, #1
   253d0:	cmp	r9, r3
   253d4:	cmpeq	r8, r2
   253d8:	movls	r1, #0
   253dc:	movhi	r1, #1
   253e0:	orrs	r4, r2, r3
   253e4:	moveq	r1, #0
   253e8:	andne	r1, r1, #1
   253ec:	cmp	r1, #0
   253f0:	bne	25390 <__assert_fail@plt+0x13f8c>
   253f4:	ldr	r5, [sp, #68]	; 0x44
   253f8:	mov	r1, #0
   253fc:	ldr	r4, [sp, #56]	; 0x38
   25400:	cmp	r9, r1
   25404:	cmpeq	r8, r0
   25408:	str	ip, [r4, r5]
   2540c:	bcc	254a4 <__assert_fail@plt+0x140a0>
   25410:	ldrd	r0, [sp, #40]	; 0x28
   25414:	ldrd	r4, [sp, #32]
   25418:	adds	r0, r0, #1
   2541c:	adc	r1, r1, #0
   25420:	strd	r0, [sp, #40]	; 0x28
   25424:	ldrd	r2, [sp, #40]	; 0x28
   25428:	ldr	r1, [sp, #48]	; 0x30
   2542c:	cmp	r3, r5
   25430:	cmpeq	r2, r4
   25434:	add	r1, r1, #4
   25438:	str	r1, [sp, #48]	; 0x30
   2543c:	beq	25d80 <__assert_fail@plt+0x1497c>
   25440:	mov	lr, r7
   25444:	b	25338 <__assert_fail@plt+0x13f34>
   25448:	ldr	r4, [sp, #64]	; 0x40
   2544c:	movw	r3, #24896	; 0x6140
   25450:	movt	r3, #9
   25454:	ldr	r2, [r4, #-1708]	; 0xfffff954
   25458:	cmp	r2, #0
   2545c:	bne	25874 <__assert_fail@plt+0x14470>
   25460:	ldr	r2, [r3, #-1712]	; 0xfffff950
   25464:	cmp	r2, #0
   25468:	beq	25290 <__assert_fail@plt+0x13e8c>
   2546c:	ldr	r3, [r3, #-1700]	; 0xfffff95c
   25470:	cmp	r3, #0
   25474:	beq	25874 <__assert_fail@plt+0x14470>
   25478:	mov	r2, #5
   2547c:	movw	r1, #10692	; 0x29c4
   25480:	mov	r0, #0
   25484:	movt	r1, #6
   25488:	bl	11170 <dcgettext@plt>
   2548c:	mov	r1, r0
   25490:	mov	r0, #1
   25494:	bl	1132c <__printf_chk@plt>
   25498:	b	25290 <__assert_fail@plt+0x13e8c>
   2549c:	ldr	r5, [sp, #48]	; 0x30
   254a0:	str	ip, [r5]
   254a4:	mov	r2, #5
   254a8:	movw	r1, #10924	; 0x2aac
   254ac:	mov	r0, #0
   254b0:	movt	r1, #6
   254b4:	bl	11170 <dcgettext@plt>
   254b8:	bl	4b2b0 <error@@Base>
   254bc:	add	r0, r6, #1
   254c0:	mov	r1, #4
   254c4:	bl	110d4 <calloc@plt>
   254c8:	subs	r4, r0, #0
   254cc:	beq	26450 <__assert_fail@plt+0x1504c>
   254d0:	ldr	lr, [sp, #32]
   254d4:	ldr	ip, [sp, #56]	; 0x38
   254d8:	add	r0, ip, lr, lsl #2
   254dc:	sub	r3, ip, #4
   254e0:	sub	r0, r0, #4
   254e4:	ldr	r2, [r3, #4]!
   254e8:	cmp	r3, r0
   254ec:	ldr	r1, [r4, r2, lsl #2]
   254f0:	add	r1, r1, #1
   254f4:	str	r1, [r4, r2, lsl #2]
   254f8:	bne	254e4 <__assert_fail@plt+0x140e0>
   254fc:	ldr	r2, [r4]
   25500:	vldr	d8, [pc, #944]	; 258b8 <__assert_fail@plt+0x144b4>
   25504:	vldr	s11, [sp, #32]
   25508:	vcvt.f64.s32	d9, s11
   2550c:	movw	r1, #11236	; 0x2be4
   25510:	mov	r0, #1
   25514:	vmov	s13, r2
   25518:	movt	r1, #6
   2551c:	vcvt.f64.u32	d7, s13
   25520:	vmul.f64	d7, d7, d8
   25524:	vdiv.f64	d7, d7, d9
   25528:	vstr	d7, [sp]
   2552c:	bl	1132c <__printf_chk@plt>
   25530:	cmp	r6, #0
   25534:	beq	2559c <__assert_fail@plt+0x14198>
   25538:	vmov	s15, r7
   2553c:	mov	r9, r4
   25540:	mov	r5, #1
   25544:	mov	r8, #0
   25548:	vcvt.f64.u32	d10, s15
   2554c:	ldr	r3, [r9, #4]!
   25550:	mov	r0, #1
   25554:	mov	r2, r5
   25558:	movw	r1, #11008	; 0x2b00
   2555c:	movt	r1, #6
   25560:	mla	r8, r5, r3, r8
   25564:	vmov	s11, r3
   25568:	add	r5, r5, r0
   2556c:	vcvt.f64.u32	d6, s11
   25570:	vmov	s11, r8
   25574:	vcvt.f64.u32	d7, s11
   25578:	vmul.f64	d6, d6, d8
   2557c:	vmul.f64	d7, d7, d8
   25580:	vdiv.f64	d6, d6, d9
   25584:	vdiv.f64	d7, d7, d10
   25588:	vstr	d6, [sp]
   2558c:	vstr	d7, [sp, #8]
   25590:	bl	1132c <__printf_chk@plt>
   25594:	cmp	r6, r5
   25598:	bcs	2554c <__assert_fail@plt+0x14148>
   2559c:	mov	r0, r4
   255a0:	bl	1111c <free@plt>
   255a4:	ldr	r0, [sp, #56]	; 0x38
   255a8:	bl	1111c <free@plt>
   255ac:	ldr	r5, [sp, #64]	; 0x40
   255b0:	ldr	r0, [sp, #108]	; 0x6c
   255b4:	ldr	r4, [r5, #-1704]	; 0xfffff958
   255b8:	bl	1111c <free@plt>
   255bc:	mov	r0, fp
   255c0:	bl	1111c <free@plt>
   255c4:	cmp	r4, #0
   255c8:	beq	251c8 <__assert_fail@plt+0x13dc4>
   255cc:	ldr	ip, [sp, #120]	; 0x78
   255d0:	cmp	ip, #0
   255d4:	beq	251c8 <__assert_fail@plt+0x13dc4>
   255d8:	mov	r2, #5
   255dc:	movw	r1, #11044	; 0x2b24
   255e0:	mov	r0, #0
   255e4:	movt	r1, #6
   255e8:	bl	11170 <dcgettext@plt>
   255ec:	ldr	r2, [sp, #72]	; 0x48
   255f0:	mov	r1, r0
   255f4:	mov	r0, #1
   255f8:	bl	1132c <__printf_chk@plt>
   255fc:	ldr	r0, [sp, #72]	; 0x48
   25600:	mov	r1, #4
   25604:	bl	110d4 <calloc@plt>
   25608:	subs	r5, r0, #0
   2560c:	str	r5, [sp, #64]	; 0x40
   25610:	beq	26054 <__assert_fail@plt+0x14c50>
   25614:	mov	r2, #5
   25618:	movw	r1, #10880	; 0x2a80
   2561c:	mov	r0, #0
   25620:	movt	r1, #6
   25624:	bl	11170 <dcgettext@plt>
   25628:	mov	r1, r0
   2562c:	mov	r0, #1
   25630:	bl	1132c <__printf_chk@plt>
   25634:	ldrd	r6, [sp, #72]	; 0x48
   25638:	orrs	r7, r6, r7
   2563c:	beq	26258 <__assert_fail@plt+0x14e54>
   25640:	ldr	r4, [sp, #120]	; 0x78
   25644:	mov	sl, #1
   25648:	ldrd	r6, [sp, #88]	; 0x58
   2564c:	mov	r8, #0
   25650:	sub	lr, r4, #8
   25654:	mov	r9, #0
   25658:	adds	r6, r6, sl
   2565c:	mov	ip, #0
   25660:	mov	fp, #0
   25664:	str	ip, [sp, #40]	; 0x28
   25668:	adc	r7, r7, fp
   2566c:	str	ip, [sp, #32]
   25670:	strd	r6, [sp, #48]	; 0x30
   25674:	ldrd	r6, [lr, #8]!
   25678:	orrs	ip, r6, r7
   2567c:	beq	2574c <__assert_fail@plt+0x14348>
   25680:	ldrd	r4, [sp, #96]	; 0x60
   25684:	subs	r6, r6, r4
   25688:	sbc	r7, r7, r5
   2568c:	ldrd	r4, [sp, #88]	; 0x58
   25690:	cmp	r5, r7
   25694:	cmpeq	r4, r6
   25698:	bls	25e08 <__assert_fail@plt+0x14a04>
   2569c:	ldr	r5, [sp, #84]	; 0x54
   256a0:	lsl	r3, r6, #3
   256a4:	ldrd	r2, [r3, r5]
   256a8:	and	r2, r2, sl
   256ac:	and	r3, r3, fp
   256b0:	orrs	ip, r2, r3
   256b4:	bne	25e18 <__assert_fail@plt+0x14a14>
   256b8:	ldrd	r0, [sp, #48]	; 0x30
   256bc:	add	ip, r5, r6, lsl #3
   256c0:	mov	r2, #2
   256c4:	mov	r3, #0
   256c8:	subs	r6, r0, r6
   256cc:	sbc	r7, r1, r7
   256d0:	str	lr, [sp, #56]	; 0x38
   256d4:	b	256fc <__assert_fail@plt+0x142f8>
   256d8:	ldrd	r0, [ip, #8]!
   256dc:	adds	r4, r2, #1
   256e0:	adc	r5, r3, #0
   256e4:	and	r0, r0, sl
   256e8:	and	r1, r1, fp
   256ec:	orrs	lr, r0, r1
   256f0:	bne	25708 <__assert_fail@plt+0x14304>
   256f4:	mov	r2, r4
   256f8:	mov	r3, r5
   256fc:	cmp	r3, r7
   25700:	cmpeq	r2, r6
   25704:	bne	256d8 <__assert_fail@plt+0x142d4>
   25708:	ldr	lr, [sp, #56]	; 0x38
   2570c:	mov	ip, r2
   25710:	ldr	r4, [sp, #32]
   25714:	mov	r5, #0
   25718:	ldr	r6, [sp, #32]
   2571c:	mov	r1, r5
   25720:	ldr	r7, [sp, #64]	; 0x40
   25724:	ldr	r5, [sp, #40]	; 0x28
   25728:	mov	r0, r4
   2572c:	cmp	r1, r3
   25730:	cmpeq	r0, r2
   25734:	lsl	r3, r8, #2
   25738:	add	r5, r5, ip
   2573c:	str	r5, [sp, #40]	; 0x28
   25740:	movcc	r6, ip
   25744:	str	ip, [r7, r3]
   25748:	str	r6, [sp, #32]
   2574c:	adds	r8, r8, #1
   25750:	ldrd	r4, [sp, #72]	; 0x48
   25754:	adc	r9, r9, #0
   25758:	cmp	r9, r5
   2575c:	cmpeq	r8, r4
   25760:	bne	25674 <__assert_fail@plt+0x14270>
   25764:	ldr	r5, [sp, #32]
   25768:	mov	r1, #4
   2576c:	add	r0, r5, #1
   25770:	bl	110d4 <calloc@plt>
   25774:	subs	r4, r0, #0
   25778:	beq	2626c <__assert_fail@plt+0x14e68>
   2577c:	ldr	r7, [sp, #72]	; 0x48
   25780:	ldr	r6, [sp, #64]	; 0x40
   25784:	add	r0, r6, r7, lsl #2
   25788:	sub	r3, r6, #4
   2578c:	sub	r0, r0, #4
   25790:	ldr	r2, [r3, #4]!
   25794:	cmp	r3, r0
   25798:	ldr	r1, [r4, r2, lsl #2]
   2579c:	add	r1, r1, #1
   257a0:	str	r1, [r4, r2, lsl #2]
   257a4:	bne	25790 <__assert_fail@plt+0x1438c>
   257a8:	ldr	r2, [r4]
   257ac:	vldr	d8, [pc, #260]	; 258b8 <__assert_fail@plt+0x144b4>
   257b0:	vldr	s11, [sp, #72]	; 0x48
   257b4:	vcvt.f64.s32	d9, s11
   257b8:	movw	r1, #11236	; 0x2be4
   257bc:	mov	r0, #1
   257c0:	vmov	s13, r2
   257c4:	movt	r1, #6
   257c8:	vcvt.f64.u32	d7, s13
   257cc:	vmul.f64	d7, d7, d8
   257d0:	vdiv.f64	d7, d7, d9
   257d4:	vstr	d7, [sp]
   257d8:	bl	1132c <__printf_chk@plt>
   257dc:	ldr	r3, [sp, #32]
   257e0:	cmp	r3, #0
   257e4:	beq	25850 <__assert_fail@plt+0x1444c>
   257e8:	vldr	s11, [sp, #40]	; 0x28
   257ec:	vcvt.f64.u32	d10, s11
   257f0:	mov	r7, r4
   257f4:	mov	r5, #1
   257f8:	mov	r6, #0
   257fc:	mov	r8, r3
   25800:	ldr	r3, [r7, #4]!
   25804:	mov	r0, #1
   25808:	mov	r2, r5
   2580c:	movw	r1, #11008	; 0x2b00
   25810:	movt	r1, #6
   25814:	mla	r6, r5, r3, r6
   25818:	vmov	s11, r3
   2581c:	add	r5, r5, r0
   25820:	vcvt.f64.u32	d6, s11
   25824:	vmov	s11, r6
   25828:	vcvt.f64.u32	d7, s11
   2582c:	vmul.f64	d6, d6, d8
   25830:	vmul.f64	d7, d7, d8
   25834:	vdiv.f64	d6, d6, d9
   25838:	vdiv.f64	d7, d7, d10
   2583c:	vstr	d6, [sp]
   25840:	vstr	d7, [sp, #8]
   25844:	bl	1132c <__printf_chk@plt>
   25848:	cmp	r8, r5
   2584c:	bcs	25800 <__assert_fail@plt+0x143fc>
   25850:	mov	r0, r4
   25854:	bl	1111c <free@plt>
   25858:	ldr	r0, [sp, #64]	; 0x40
   2585c:	bl	1111c <free@plt>
   25860:	ldr	r0, [sp, #120]	; 0x78
   25864:	bl	1111c <free@plt>
   25868:	ldr	r0, [sp, #84]	; 0x54
   2586c:	bl	1111c <free@plt>
   25870:	b	251c8 <__assert_fail@plt+0x13dc4>
   25874:	ldr	r2, [sl, #220]	; 0xdc
   25878:	movw	r3, #16712	; 0x4148
   2587c:	movt	r3, #9
   25880:	cmp	r2, #0
   25884:	beq	25e48 <__assert_fail@plt+0x14a44>
   25888:	ldr	r1, [r3, #68]	; 0x44
   2588c:	cmp	r1, #0
   25890:	beq	25290 <__assert_fail@plt+0x13e8c>
   25894:	movw	ip, #16696	; 0x4138
   25898:	movt	ip, #9
   2589c:	mov	r5, #0
   258a0:	str	fp, [sp, #124]	; 0x7c
   258a4:	add	r7, r2, #72	; 0x48
   258a8:	str	r5, [sp, #40]	; 0x28
   258ac:	strd	r8, [sp, #112]	; 0x70
   258b0:	mov	fp, ip
   258b4:	b	2590c <__assert_fail@plt+0x14508>
   258b8:	andeq	r0, r0, r0
   258bc:	subsmi	r0, r9, r0
   258c0:	mov	r2, #5
   258c4:	movw	r1, #10384	; 0x2890
   258c8:	mov	r0, #0
   258cc:	movt	r1, #6
   258d0:	bl	11170 <dcgettext@plt>
   258d4:	mov	r4, r0
   258d8:	ldr	r0, [sp, #68]	; 0x44
   258dc:	bl	132f8 <__assert_fail@plt+0x1ef4>
   258e0:	mov	r1, r4
   258e4:	mov	r2, r0
   258e8:	mov	r0, #1
   258ec:	bl	1132c <__printf_chk@plt>
   258f0:	ldr	r4, [sp, #40]	; 0x28
   258f4:	add	r7, r7, #72	; 0x48
   258f8:	ldr	r3, [sl, #68]	; 0x44
   258fc:	add	r4, r4, #1
   25900:	str	r4, [sp, #40]	; 0x28
   25904:	cmp	r3, r4
   25908:	bls	25cb0 <__assert_fail@plt+0x148ac>
   2590c:	ldr	r3, [r7, #-68]	; 0xffffffbc
   25910:	sub	r6, r7, #72	; 0x48
   25914:	str	r6, [sp, #68]	; 0x44
   25918:	cmp	r3, #11
   2591c:	cmpne	r3, #2
   25920:	bne	258f0 <__assert_fail@plt+0x144ec>
   25924:	ldr	ip, [sp, #64]	; 0x40
   25928:	ldr	r2, [ip, #-1712]	; 0xfffff950
   2592c:	cmp	r2, #0
   25930:	bne	2593c <__assert_fail@plt+0x14538>
   25934:	cmp	r3, #2
   25938:	beq	258f0 <__assert_fail@plt+0x144ec>
   2593c:	ldrd	r2, [r7, #-16]
   25940:	orrs	lr, r2, r3
   25944:	beq	258c0 <__assert_fail@plt+0x144bc>
   25948:	mov	r2, #5
   2594c:	movw	r1, #10432	; 0x28c0
   25950:	mov	r0, #0
   25954:	movt	r1, #6
   25958:	bl	11170 <dcgettext@plt>
   2595c:	mov	r5, r0
   25960:	ldr	r0, [sp, #68]	; 0x44
   25964:	bl	132f8 <__assert_fail@plt+0x1ef4>
   25968:	ldrd	r2, [r7, #-16]
   2596c:	mov	r4, r0
   25970:	ldrd	r0, [r7, #-40]	; 0xffffffd8
   25974:	bl	529fc <zcfree@@Base+0x13cc>
   25978:	mov	r1, r5
   2597c:	mov	r2, r4
   25980:	mov	r3, r0
   25984:	mov	r0, #1
   25988:	bl	1132c <__printf_chk@plt>
   2598c:	ldr	r0, [sl, #460]	; 0x1cc
   25990:	cmp	r0, #0
   25994:	movwne	r1, #10476	; 0x28ec
   25998:	movweq	r1, #10536	; 0x2928
   2599c:	movne	r2, #5
   259a0:	moveq	r2, #5
   259a4:	movne	r0, #0
   259a8:	movtne	r1, #6
   259ac:	movteq	r1, #6
   259b0:	bl	11170 <dcgettext@plt>
   259b4:	mov	r1, r0
   259b8:	mov	r0, #1
   259bc:	bl	1132c <__printf_chk@plt>
   259c0:	ldr	r3, [sl, #460]	; 0x1cc
   259c4:	ldr	r0, [sp, #48]	; 0x30
   259c8:	add	r2, sp, #132	; 0x84
   259cc:	cmp	r3, #0
   259d0:	ldr	r1, [sp, #68]	; 0x44
   259d4:	beq	25ca4 <__assert_fail@plt+0x148a0>
   259d8:	bl	155f4 <__assert_fail@plt+0x41f0>
   259dc:	str	r0, [sp, #104]	; 0x68
   259e0:	ldr	r4, [sp, #104]	; 0x68
   259e4:	cmp	r4, #0
   259e8:	beq	258f0 <__assert_fail@plt+0x144ec>
   259ec:	ldr	r4, [r7, #-32]	; 0xffffffe0
   259f0:	ldr	r3, [sl, #72]	; 0x48
   259f4:	cmp	r4, r3
   259f8:	beq	25d08 <__assert_fail@plt+0x14904>
   259fc:	movw	r6, #16712	; 0x4148
   25a00:	movt	r6, #9
   25a04:	ldr	r3, [r6, #68]	; 0x44
   25a08:	cmp	r4, r3
   25a0c:	movcs	r8, #0
   25a10:	movcs	r9, r8
   25a14:	bcc	25d24 <__assert_fail@plt+0x14920>
   25a18:	ldr	r3, [sp, #132]	; 0x84
   25a1c:	cmp	r3, #0
   25a20:	beq	25c84 <__assert_fail@plt+0x14880>
   25a24:	ldr	ip, [sp, #104]	; 0x68
   25a28:	mov	r5, #0
   25a2c:	str	sl, [sp, #56]	; 0x38
   25a30:	add	r6, ip, #16
   25a34:	add	r4, ip, #24
   25a38:	b	25af0 <__assert_fail@plt+0x146ec>
   25a3c:	mov	r0, #25
   25a40:	bl	19a8c <__assert_fail@plt+0x8688>
   25a44:	ldr	r1, [r7, #-68]	; 0xffffffbc
   25a48:	mov	r2, r9
   25a4c:	add	lr, sp, #136	; 0x88
   25a50:	subs	r3, r1, #11
   25a54:	add	ip, sp, #130	; 0x82
   25a58:	rsbs	r1, r3, #0
   25a5c:	ldr	r0, [sp, #48]	; 0x30
   25a60:	adcs	r1, r1, r3
   25a64:	str	r5, [sp]
   25a68:	str	r6, [sp, #4]
   25a6c:	mov	r3, r8
   25a70:	str	r4, [sp, #8]
   25a74:	str	lr, [sp, #12]
   25a78:	str	ip, [sp, #16]
   25a7c:	bl	22ca4 <__assert_fail@plt+0x118a0>
   25a80:	subs	r2, r0, #0
   25a84:	beq	25ab4 <__assert_fail@plt+0x146b0>
   25a88:	ldr	ip, [sp, #136]	; 0x88
   25a8c:	cmp	ip, #0
   25a90:	beq	25c2c <__assert_fail@plt+0x14828>
   25a94:	movw	r3, #8972	; 0x230c
   25a98:	cmp	ip, #1
   25a9c:	movt	r3, #6
   25aa0:	movw	r1, #8964	; 0x2304
   25aa4:	mov	r0, #1
   25aa8:	movt	r1, #6
   25aac:	moveq	r1, r3
   25ab0:	bl	1132c <__printf_chk@plt>
   25ab4:	mov	r0, #10
   25ab8:	ldr	r1, [fp]
   25abc:	bl	111ac <_IO_putc@plt>
   25ac0:	ldrb	r0, [r4, #-4]
   25ac4:	lsrs	r0, r0, #4
   25ac8:	bne	25ad8 <__assert_fail@plt+0x146d4>
   25acc:	ldr	r3, [r7, #-28]	; 0xffffffe4
   25ad0:	cmp	r3, r5
   25ad4:	bls	25c44 <__assert_fail@plt+0x14840>
   25ad8:	ldr	r3, [sp, #132]	; 0x84
   25adc:	add	r5, r5, #1
   25ae0:	add	r6, r6, #32
   25ae4:	add	r4, r4, #32
   25ae8:	cmp	r3, r5
   25aec:	bls	25c80 <__assert_fail@plt+0x1487c>
   25af0:	mov	r2, r5
   25af4:	movw	r1, #10604	; 0x296c
   25af8:	mov	r0, #1
   25afc:	movt	r1, #6
   25b00:	bl	1132c <__printf_chk@plt>
   25b04:	mov	r2, #6
   25b08:	ldrd	r0, [r4, #-24]	; 0xffffffe8
   25b0c:	bl	16c84 <__assert_fail@plt+0x5880>
   25b10:	ldr	r1, [fp]
   25b14:	mov	r0, #32
   25b18:	bl	111ac <_IO_putc@plt>
   25b1c:	ldrd	r0, [r4, #-16]
   25b20:	mov	r2, #2
   25b24:	bl	16c84 <__assert_fail@plt+0x5880>
   25b28:	ldrb	r0, [r4, #-4]
   25b2c:	and	r0, r0, #15
   25b30:	bl	186e8 <__assert_fail@plt+0x72e4>
   25b34:	movw	r1, #912	; 0x390
   25b38:	movt	r1, #6
   25b3c:	mov	r2, r0
   25b40:	mov	r0, #1
   25b44:	bl	1132c <__printf_chk@plt>
   25b48:	ldrb	r0, [r4, #-4]
   25b4c:	lsr	r0, r0, #4
   25b50:	bl	19338 <__assert_fail@plt+0x7f34>
   25b54:	movw	r1, #920	; 0x398
   25b58:	movt	r1, #6
   25b5c:	mov	r2, r0
   25b60:	mov	r0, #1
   25b64:	bl	1132c <__printf_chk@plt>
   25b68:	ldr	ip, [sp, #56]	; 0x38
   25b6c:	ldrb	r3, [ip, #7]
   25b70:	cmp	r3, #6
   25b74:	beq	25c0c <__assert_fail@plt+0x14808>
   25b78:	ldrb	r3, [r4, #-3]
   25b7c:	and	sl, r3, #3
   25b80:	mov	r0, sl
   25b84:	bl	19894 <__assert_fail@plt+0x8490>
   25b88:	movw	r1, #912	; 0x390
   25b8c:	movt	r1, #6
   25b90:	mov	r2, r0
   25b94:	mov	r0, #1
   25b98:	bl	1132c <__printf_chk@plt>
   25b9c:	ldrb	r0, [r4, #-3]
   25ba0:	cmp	r0, sl
   25ba4:	beq	25bc4 <__assert_fail@plt+0x147c0>
   25ba8:	eor	r0, sl, r0
   25bac:	bl	19614 <__assert_fail@plt+0x8210>
   25bb0:	movw	r1, #928	; 0x3a0
   25bb4:	movt	r1, #6
   25bb8:	mov	r2, r0
   25bbc:	mov	r0, #1
   25bc0:	bl	1132c <__printf_chk@plt>
   25bc4:	ldr	r0, [r6, #8]
   25bc8:	bl	19424 <__assert_fail@plt+0x8020>
   25bcc:	movw	r1, #10612	; 0x2974
   25bd0:	movt	r1, #6
   25bd4:	mov	r2, r0
   25bd8:	mov	r0, #1
   25bdc:	bl	1132c <__printf_chk@plt>
   25be0:	ldr	r1, [r4, #-8]
   25be4:	cmp	r8, r1
   25be8:	addhi	r1, r9, r1
   25bec:	bhi	25a3c <__assert_fail@plt+0x14638>
   25bf0:	movw	r1, #50908	; 0xc6dc
   25bf4:	mov	r0, #0
   25bf8:	movt	r1, #5
   25bfc:	mov	r2, #5
   25c00:	bl	11170 <dcgettext@plt>
   25c04:	mov	r1, r0
   25c08:	b	25a3c <__assert_fail@plt+0x14638>
   25c0c:	ldrb	r0, [r4, #-3]
   25c10:	bl	1991c <__assert_fail@plt+0x8518>
   25c14:	movw	r1, #912	; 0x390
   25c18:	movt	r1, #6
   25c1c:	mov	r2, r0
   25c20:	mov	r0, #1
   25c24:	bl	1132c <__printf_chk@plt>
   25c28:	b	25bc4 <__assert_fail@plt+0x147c0>
   25c2c:	movw	r1, #10620	; 0x297c
   25c30:	ldrh	r3, [sp, #130]	; 0x82
   25c34:	movt	r1, #6
   25c38:	mov	r0, #1
   25c3c:	bl	1132c <__printf_chk@plt>
   25c40:	b	25ab4 <__assert_fail@plt+0x146b0>
   25c44:	mov	r2, #5
   25c48:	movw	r1, #10632	; 0x2988
   25c4c:	movt	r1, #6
   25c50:	bl	11170 <dcgettext@plt>
   25c54:	mov	r3, r0
   25c58:	ldr	r0, [sp, #68]	; 0x44
   25c5c:	str	r3, [sp, #28]
   25c60:	bl	132f8 <__assert_fail@plt+0x1ef4>
   25c64:	ldr	r3, [sp, #28]
   25c68:	mov	r1, r5
   25c6c:	mov	r2, r0
   25c70:	mov	r0, r3
   25c74:	ldr	r3, [r7, #-28]	; 0xffffffe4
   25c78:	bl	4b9ec <warn@@Base>
   25c7c:	b	25ad8 <__assert_fail@plt+0x146d4>
   25c80:	ldr	sl, [sp, #56]	; 0x38
   25c84:	ldr	r0, [sp, #104]	; 0x68
   25c88:	bl	1111c <free@plt>
   25c8c:	ldr	r3, [sl, #212]	; 0xd4
   25c90:	cmp	r9, r3
   25c94:	beq	258f0 <__assert_fail@plt+0x144ec>
   25c98:	mov	r0, r9
   25c9c:	bl	1111c <free@plt>
   25ca0:	b	258f0 <__assert_fail@plt+0x144ec>
   25ca4:	bl	15a6c <__assert_fail@plt+0x4668>
   25ca8:	str	r0, [sp, #104]	; 0x68
   25cac:	b	259e0 <__assert_fail@plt+0x145dc>
   25cb0:	ldrd	r8, [sp, #112]	; 0x70
   25cb4:	ldr	fp, [sp, #124]	; 0x7c
   25cb8:	b	25290 <__assert_fail@plt+0x13e8c>
   25cbc:	mov	r6, #0
   25cc0:	mov	r7, #0
   25cc4:	str	ip, [sp, #84]	; 0x54
   25cc8:	strd	r6, [sp, #88]	; 0x58
   25ccc:	str	ip, [sp, #120]	; 0x78
   25cd0:	strd	r6, [sp, #96]	; 0x60
   25cd4:	strd	r6, [sp, #72]	; 0x48
   25cd8:	b	25204 <__assert_fail@plt+0x13e00>
   25cdc:	movw	r0, #41872	; 0xa390
   25ce0:	cmp	r1, r0
   25ce4:	movne	r4, #4
   25ce8:	bne	250fc <__assert_fail@plt+0x13cf8>
   25cec:	b	250ec <__assert_fail@plt+0x13ce8>
   25cf0:	mov	r8, #0
   25cf4:	mov	r9, #0
   25cf8:	mov	fp, ip
   25cfc:	str	ip, [sp, #108]	; 0x6c
   25d00:	strd	r8, [sp, #32]
   25d04:	b	24fac <__assert_fail@plt+0x13ba8>
   25d08:	movw	r5, #16712	; 0x4148
   25d0c:	movt	r5, #9
   25d10:	ldr	r9, [r5, #212]	; 0xd4
   25d14:	ldr	r8, [r5, #216]	; 0xd8
   25d18:	b	25a18 <__assert_fail@plt+0x14614>
   25d1c:	mov	r7, lr
   25d20:	b	25410 <__assert_fail@plt+0x1400c>
   25d24:	ldr	r3, [r6, #220]	; 0xdc
   25d28:	add	r4, r4, r4, lsl #3
   25d2c:	mov	r2, #5
   25d30:	movw	r1, #3532	; 0xdcc
   25d34:	add	r4, r3, r4, lsl #3
   25d38:	movt	r1, #6
   25d3c:	mov	r0, #0
   25d40:	ldrd	r8, [r4, #32]
   25d44:	ldr	r5, [r4, #24]
   25d48:	bl	11170 <dcgettext@plt>
   25d4c:	mov	r2, #1
   25d50:	mov	r3, #0
   25d54:	strd	r8, [sp, #8]
   25d58:	strd	r2, [sp]
   25d5c:	mov	r2, r5
   25d60:	ldr	r1, [sp, #48]	; 0x30
   25d64:	str	r0, [sp, #16]
   25d68:	mov	r0, #0
   25d6c:	bl	1502c <__assert_fail@plt+0x3c28>
   25d70:	subs	r9, r0, #0
   25d74:	ldrne	r8, [r4, #32]
   25d78:	moveq	r8, r9
   25d7c:	b	25a18 <__assert_fail@plt+0x14614>
   25d80:	add	r0, r6, #1
   25d84:	b	254c0 <__assert_fail@plt+0x140bc>
   25d88:	mov	r2, #5
   25d8c:	mov	r0, r5
   25d90:	movw	r1, #10068	; 0x2754
   25d94:	movt	r1, #6
   25d98:	bl	11170 <dcgettext@plt>
   25d9c:	bl	4b2b0 <error@@Base>
   25da0:	b	2518c <__assert_fail@plt+0x13d88>
   25da4:	mov	r1, #16
   25da8:	mov	r2, #1
   25dac:	ldr	r3, [sp, #48]	; 0x30
   25db0:	add	r0, sp, #148	; 0x94
   25db4:	bl	111f4 <fread@plt>
   25db8:	cmp	r0, #1
   25dbc:	beq	2617c <__assert_fail@plt+0x14d78>
   25dc0:	mov	r0, r5
   25dc4:	mov	r2, #5
   25dc8:	movw	r1, #10068	; 0x2754
   25dcc:	movt	r1, #6
   25dd0:	bl	11170 <dcgettext@plt>
   25dd4:	mov	r4, #0
   25dd8:	str	r5, [sp, #120]	; 0x78
   25ddc:	bl	4b2b0 <error@@Base>
   25de0:	mov	r5, #0
   25de4:	strd	r4, [sp, #96]	; 0x60
   25de8:	b	25060 <__assert_fail@plt+0x13c5c>
   25dec:	mov	r2, #5
   25df0:	movw	r1, #10020	; 0x2724
   25df4:	mov	r0, #0
   25df8:	movt	r1, #6
   25dfc:	bl	11170 <dcgettext@plt>
   25e00:	bl	4b2b0 <error@@Base>
   25e04:	b	2518c <__assert_fail@plt+0x13d88>
   25e08:	mov	ip, #1
   25e0c:	mov	r2, #1
   25e10:	mov	r3, #0
   25e14:	b	25710 <__assert_fail@plt+0x1430c>
   25e18:	mov	r2, #1
   25e1c:	mov	r3, #0
   25e20:	mov	ip, #1
   25e24:	b	25710 <__assert_fail@plt+0x1430c>
   25e28:	mov	r4, #0
   25e2c:	mov	r5, #0
   25e30:	str	r0, [sp, #84]	; 0x54
   25e34:	strd	r4, [sp, #88]	; 0x58
   25e38:	str	r0, [sp, #120]	; 0x78
   25e3c:	strd	r4, [sp, #96]	; 0x60
   25e40:	strd	r4, [sp, #72]	; 0x48
   25e44:	b	25204 <__assert_fail@plt+0x13e00>
   25e48:	ldr	r5, [sp, #64]	; 0x40
   25e4c:	ldr	r3, [r5, #-1712]	; 0xfffff950
   25e50:	cmp	r3, #0
   25e54:	beq	25290 <__assert_fail@plt+0x13e8c>
   25e58:	b	25478 <__assert_fail@plt+0x14074>
   25e5c:	mov	r8, #0
   25e60:	mov	r9, #0
   25e64:	mov	fp, r0
   25e68:	str	r0, [sp, #108]	; 0x6c
   25e6c:	strd	r8, [sp, #32]
   25e70:	b	24fac <__assert_fail@plt+0x13ba8>
   25e74:	ldr	r0, [sp, #108]	; 0x6c
   25e78:	mov	r8, #0
   25e7c:	bl	1111c <free@plt>
   25e80:	mov	r0, fp
   25e84:	bl	1111c <free@plt>
   25e88:	mov	r9, #0
   25e8c:	mov	fp, r4
   25e90:	str	r4, [sp, #108]	; 0x6c
   25e94:	strd	r8, [sp, #32]
   25e98:	b	24fac <__assert_fail@plt+0x13ba8>
   25e9c:	mov	r2, #5
   25ea0:	movw	r1, #10340	; 0x2864
   25ea4:	mov	r0, #0
   25ea8:	movt	r1, #6
   25eac:	bl	11170 <dcgettext@plt>
   25eb0:	mov	r1, r0
   25eb4:	mov	r0, #1
   25eb8:	bl	1132c <__printf_chk@plt>
   25ebc:	ldr	r0, [sl, #460]	; 0x1cc
   25ec0:	cmp	r0, #0
   25ec4:	movwne	r1, #10212	; 0x27e4
   25ec8:	movweq	r1, #10272	; 0x2820
   25ecc:	movne	r0, #0
   25ed0:	movne	r2, #5
   25ed4:	moveq	r2, #5
   25ed8:	movtne	r1, #6
   25edc:	movteq	r1, #6
   25ee0:	bl	11170 <dcgettext@plt>
   25ee4:	mov	r1, r0
   25ee8:	mov	r0, #1
   25eec:	bl	1132c <__printf_chk@plt>
   25ef0:	ldrd	r4, [sp, #72]	; 0x48
   25ef4:	orrs	r5, r4, r5
   25ef8:	beq	25290 <__assert_fail@plt+0x13e8c>
   25efc:	strd	r8, [sp, #56]	; 0x38
   25f00:	mov	r4, #0
   25f04:	ldrd	r8, [sp, #88]	; 0x58
   25f08:	mov	r5, #0
   25f0c:	ldr	r6, [sp, #120]	; 0x78
   25f10:	strd	r4, [sp, #40]	; 0x28
   25f14:	sub	r6, r6, #8
   25f18:	str	fp, [sp, #68]	; 0x44
   25f1c:	str	r6, [sp, #48]	; 0x30
   25f20:	ldr	r6, [sp, #48]	; 0x30
   25f24:	ldr	sl, [sp, #40]	; 0x28
   25f28:	ldrd	r4, [r6, #8]!
   25f2c:	orrs	r7, r4, r5
   25f30:	str	r6, [sp, #48]	; 0x30
   25f34:	beq	25f9c <__assert_fail@plt+0x14b98>
   25f38:	ldrd	r6, [sp, #96]	; 0x60
   25f3c:	ldr	ip, [sp, #84]	; 0x54
   25f40:	subs	r6, r4, r6
   25f44:	sbc	r7, r5, r7
   25f48:	sub	r3, r6, #-536870911	; 0xe0000001
   25f4c:	add	fp, ip, r3, lsl #3
   25f50:	b	25f78 <__assert_fail@plt+0x14b74>
   25f54:	ldrd	r2, [fp, #8]!
   25f58:	adds	r6, r6, #1
   25f5c:	mov	r1, #0
   25f60:	mov	r0, #1
   25f64:	and	r3, r3, r1
   25f68:	and	r2, r2, r0
   25f6c:	adc	r7, r7, #0
   25f70:	orrs	r1, r2, r3
   25f74:	bne	25f9c <__assert_fail@plt+0x14b98>
   25f78:	mov	r0, r4
   25f7c:	mov	r1, r5
   25f80:	adds	r4, r4, #1
   25f84:	mov	r2, sl
   25f88:	adc	r5, r5, #0
   25f8c:	bl	1b398 <__assert_fail@plt+0x9f94>
   25f90:	cmp	r9, r7
   25f94:	cmpeq	r8, r6
   25f98:	bhi	25f54 <__assert_fail@plt+0x14b50>
   25f9c:	ldrd	r4, [sp, #40]	; 0x28
   25fa0:	ldrd	r6, [sp, #72]	; 0x48
   25fa4:	adds	r4, r4, #1
   25fa8:	adc	r5, r5, #0
   25fac:	strd	r4, [sp, #40]	; 0x28
   25fb0:	cmp	r5, r7
   25fb4:	cmpeq	r4, r6
   25fb8:	bne	25f20 <__assert_fail@plt+0x14b1c>
   25fbc:	ldrd	r8, [sp, #56]	; 0x38
   25fc0:	ldr	fp, [sp, #68]	; 0x44
   25fc4:	b	25290 <__assert_fail@plt+0x13e8c>
   25fc8:	movw	r5, #26492	; 0x677c
   25fcc:	movt	r5, #9
   25fd0:	add	r0, sp, #140	; 0x8c
   25fd4:	mov	r1, r4
   25fd8:	ldr	r3, [r5]
   25fdc:	blx	r3
   25fe0:	ldr	r3, [r5]
   25fe4:	strd	r0, [sp, #32]
   25fe8:	add	r0, sp, #148	; 0x94
   25fec:	mov	r1, r4
   25ff0:	blx	r3
   25ff4:	ldrd	r2, [sp, #32]
   25ff8:	str	r4, [sp]
   25ffc:	mov	r8, r0
   26000:	ldr	r0, [sp, #48]	; 0x30
   26004:	mov	r9, r1
   26008:	bl	16500 <__assert_fail@plt+0x50fc>
   2600c:	str	r4, [sp]
   26010:	mov	r2, r8
   26014:	mov	r3, r9
   26018:	str	r0, [sp, #108]	; 0x6c
   2601c:	ldr	r0, [sp, #48]	; 0x30
   26020:	bl	16500 <__assert_fail@plt+0x50fc>
   26024:	ldr	r7, [sp, #108]	; 0x6c
   26028:	cmp	r7, #0
   2602c:	cmpne	r0, #0
   26030:	mov	fp, r0
   26034:	bne	24fac <__assert_fail@plt+0x13ba8>
   26038:	b	25194 <__assert_fail@plt+0x13d90>
   2603c:	mov	r8, #0
   26040:	mov	r9, #0
   26044:	mov	fp, r1
   26048:	strd	r8, [sp, #32]
   2604c:	str	r1, [sp, #108]	; 0x6c
   26050:	b	24fac <__assert_fail@plt+0x13ba8>
   26054:	mov	r2, #5
   26058:	movw	r1, #11116	; 0x2b6c
   2605c:	movt	r1, #6
   26060:	bl	11170 <dcgettext@plt>
   26064:	bl	4b2b0 <error@@Base>
   26068:	ldr	r0, [sp, #64]	; 0x40
   2606c:	b	251cc <__assert_fail@plt+0x13dc8>
   26070:	mov	r2, #5
   26074:	movw	r1, #10184	; 0x27c8
   26078:	mov	r0, #0
   2607c:	movt	r1, #6
   26080:	bl	11170 <dcgettext@plt>
   26084:	mov	r1, r0
   26088:	mov	r0, #1
   2608c:	bl	1132c <__printf_chk@plt>
   26090:	ldr	r0, [r4, #460]	; 0x1cc
   26094:	cmp	r0, #0
   26098:	movwne	r1, #10212	; 0x27e4
   2609c:	movweq	r1, #10272	; 0x2820
   260a0:	movne	r0, #0
   260a4:	movne	r2, #5
   260a8:	moveq	r2, #5
   260ac:	movtne	r1, #6
   260b0:	movteq	r1, #6
   260b4:	bl	11170 <dcgettext@plt>
   260b8:	mov	r1, r0
   260bc:	mov	r0, #1
   260c0:	bl	1132c <__printf_chk@plt>
   260c4:	ldrd	r4, [sp, #32]
   260c8:	orrs	r5, r4, r5
   260cc:	beq	25278 <__assert_fail@plt+0x13e74>
   260d0:	ldr	r6, [sp, #108]	; 0x6c
   260d4:	mov	r4, #0
   260d8:	mov	r5, #0
   260dc:	strd	r4, [sp, #40]	; 0x28
   260e0:	sub	r7, r6, #8
   260e4:	ldrd	r4, [r7, #8]!
   260e8:	ldr	r6, [sp, #40]	; 0x28
   260ec:	orrs	ip, r4, r5
   260f0:	beq	2613c <__assert_fail@plt+0x14d38>
   260f4:	cmp	r9, r5
   260f8:	cmpeq	r8, r4
   260fc:	bls	2613c <__assert_fail@plt+0x14d38>
   26100:	mov	r0, r4
   26104:	lsl	r4, r4, #3
   26108:	mov	r1, r5
   2610c:	mov	r2, r6
   26110:	bl	1b398 <__assert_fail@plt+0x9f94>
   26114:	ldrd	r4, [r4, fp]
   26118:	orrs	r1, r4, r5
   2611c:	moveq	r3, #0
   26120:	movne	r3, #1
   26124:	cmp	r9, r5
   26128:	cmpeq	r8, r4
   2612c:	movls	r3, #0
   26130:	andhi	r3, r3, #1
   26134:	cmp	r3, #0
   26138:	bne	26100 <__assert_fail@plt+0x14cfc>
   2613c:	ldrd	r4, [sp, #40]	; 0x28
   26140:	ldrd	r0, [sp, #32]
   26144:	adds	r4, r4, #1
   26148:	adc	r5, r5, #0
   2614c:	strd	r4, [sp, #40]	; 0x28
   26150:	cmp	r5, r1
   26154:	cmpeq	r4, r0
   26158:	bne	260e4 <__assert_fail@plt+0x14ce0>
   2615c:	b	25278 <__assert_fail@plt+0x13e74>
   26160:	mov	r2, #5
   26164:	movw	r1, #10824	; 0x2a48
   26168:	movt	r1, #6
   2616c:	bl	11170 <dcgettext@plt>
   26170:	bl	4b2b0 <error@@Base>
   26174:	ldr	r0, [sp, #56]	; 0x38
   26178:	b	251cc <__assert_fail@plt+0x13dc8>
   2617c:	movw	r6, #26492	; 0x677c
   26180:	movt	r6, #9
   26184:	add	r0, sp, #148	; 0x94
   26188:	mov	r1, #4
   2618c:	ldr	r3, [r6]
   26190:	blx	r3
   26194:	ldr	r3, [r6]
   26198:	strd	r0, [sp, #72]	; 0x48
   2619c:	add	r0, sp, #152	; 0x98
   261a0:	mov	r1, #4
   261a4:	blx	r3
   261a8:	ldr	r3, [r6]
   261ac:	strd	r0, [sp, #96]	; 0x60
   261b0:	add	r0, sp, #156	; 0x9c
   261b4:	mov	r1, #4
   261b8:	blx	r3
   261bc:	ldr	r5, [sp, #64]	; 0x40
   261c0:	movw	r3, #63648	; 0xf8a0
   261c4:	movt	r3, #65535	; 0xffff
   261c8:	ldr	ip, [r4, #460]	; 0x1cc
   261cc:	ldrd	r2, [r3, r5]
   261d0:	adds	r4, r2, #16
   261d4:	adc	r5, r3, #0
   261d8:	cmp	ip, #0
   261dc:	lslne	r3, r1, #2
   261e0:	lsleq	r3, r1, #3
   261e4:	lslne	r2, r0, #2
   261e8:	lsleq	r2, r0, #3
   261ec:	orrne	r3, r3, r0, lsr #30
   261f0:	orreq	r3, r3, r0, lsr #29
   261f4:	adds	r0, r2, r4
   261f8:	mov	r2, #4
   261fc:	adc	r1, r3, r5
   26200:	strd	r0, [sp, #40]	; 0x28
   26204:	mov	r3, #0
   26208:	ldr	r0, [sp, #48]	; 0x30
   2620c:	strd	r2, [sp]
   26210:	ldrd	r2, [sp, #40]	; 0x28
   26214:	bl	1d67c <__assert_fail@plt+0xc278>
   26218:	ldr	r1, [sl, #456]	; 0x1c8
   2621c:	mov	r2, #0
   26220:	add	r1, r0, r1
   26224:	ldr	r0, [sp, #48]	; 0x30
   26228:	bl	113bc <fseek@plt>
   2622c:	cmp	r0, #0
   26230:	beq	26290 <__assert_fail@plt+0x14e8c>
   26234:	mov	r2, #5
   26238:	movw	r1, #10020	; 0x2724
   2623c:	mov	r0, #0
   26240:	movt	r1, #6
   26244:	bl	11170 <dcgettext@plt>
   26248:	mov	r4, #0
   2624c:	str	r4, [sp, #120]	; 0x78
   26250:	bl	4b2b0 <error@@Base>
   26254:	b	25060 <__assert_fail@plt+0x13c5c>
   26258:	mov	r0, #1
   2625c:	mov	r1, #4
   26260:	bl	110d4 <calloc@plt>
   26264:	subs	r4, r0, #0
   26268:	bne	25850 <__assert_fail@plt+0x1444c>
   2626c:	ldr	r0, [sp, #64]	; 0x40
   26270:	bl	1111c <free@plt>
   26274:	mov	r2, #5
   26278:	movw	r1, #11176	; 0x2ba8
   2627c:	mov	r0, #0
   26280:	movt	r1, #6
   26284:	bl	11170 <dcgettext@plt>
   26288:	bl	4b2b0 <error@@Base>
   2628c:	b	251a4 <__assert_fail@plt+0x13da0>
   26290:	mov	r3, #4
   26294:	ldr	r0, [sp, #48]	; 0x30
   26298:	str	r3, [sp]
   2629c:	ldrd	r2, [sp, #72]	; 0x48
   262a0:	bl	16500 <__assert_fail@plt+0x50fc>
   262a4:	cmp	r0, #0
   262a8:	str	r0, [sp, #120]	; 0x78
   262ac:	beq	25060 <__assert_fail@plt+0x13c5c>
   262b0:	ldrd	r4, [sp, #72]	; 0x48
   262b4:	orrs	r5, r4, r5
   262b8:	beq	25060 <__assert_fail@plt+0x13c5c>
   262bc:	ldr	r7, [sp, #120]	; 0x78
   262c0:	mvn	r0, #0
   262c4:	mov	r1, #0
   262c8:	mov	r4, #0
   262cc:	sub	ip, r7, #8
   262d0:	mov	r5, #0
   262d4:	str	r6, [sp, #56]	; 0x38
   262d8:	ldrd	r2, [ip, #8]!
   262dc:	orrs	r6, r2, r3
   262e0:	beq	2631c <__assert_fail@plt+0x14f18>
   262e4:	ldrd	r6, [sp, #96]	; 0x60
   262e8:	cmp	r7, r3
   262ec:	cmpeq	r6, r2
   262f0:	bhi	251a4 <__assert_fail@plt+0x13da0>
   262f4:	mvn	r6, #0
   262f8:	mov	r7, #0
   262fc:	cmp	r1, r7
   26300:	cmpeq	r0, r6
   26304:	beq	26314 <__assert_fail@plt+0x14f10>
   26308:	cmp	r1, r3
   2630c:	cmpeq	r0, r2
   26310:	bcs	2631c <__assert_fail@plt+0x14f18>
   26314:	mov	r0, r2
   26318:	mov	r1, r3
   2631c:	adds	r4, r4, #1
   26320:	ldrd	r6, [sp, #72]	; 0x48
   26324:	adc	r5, r5, #0
   26328:	cmp	r5, r7
   2632c:	cmpeq	r4, r6
   26330:	bne	262d8 <__assert_fail@plt+0x14ed4>
   26334:	mvn	r2, #0
   26338:	mov	r3, #0
   2633c:	cmp	r1, r3
   26340:	cmpeq	r0, r2
   26344:	ldr	r6, [sp, #56]	; 0x38
   26348:	beq	25060 <__assert_fail@plt+0x13c5c>
   2634c:	ldrd	r2, [sp, #96]	; 0x60
   26350:	subs	r2, r0, r2
   26354:	sbc	r3, r1, r3
   26358:	strd	r2, [sp, #88]	; 0x58
   2635c:	ldrd	r0, [sp, #88]	; 0x58
   26360:	adds	r4, r4, r0
   26364:	ldr	r0, [sp, #48]	; 0x30
   26368:	adc	r5, r5, r1
   2636c:	lsl	r2, r4, #2
   26370:	lsl	r3, r5, #2
   26374:	orr	r3, r3, r4, lsr #30
   26378:	ldrd	r4, [sp, #40]	; 0x28
   2637c:	adds	r2, r2, r4
   26380:	mov	r4, #4
   26384:	adc	r3, r3, r5
   26388:	mov	r5, #0
   2638c:	strd	r4, [sp]
   26390:	bl	1d67c <__assert_fail@plt+0xc278>
   26394:	ldr	r1, [sl, #456]	; 0x1c8
   26398:	mov	r2, #0
   2639c:	add	r1, r0, r1
   263a0:	ldr	r0, [sp, #48]	; 0x30
   263a4:	bl	113bc <fseek@plt>
   263a8:	cmp	r0, #0
   263ac:	mvneq	r4, #0
   263b0:	mvneq	r5, #0
   263b4:	beq	26404 <__assert_fail@plt+0x15000>
   263b8:	b	264ec <__assert_fail@plt+0x150e8>
   263bc:	ldrd	r0, [sp, #88]	; 0x58
   263c0:	cmp	r1, r5
   263c4:	cmpeq	r0, r4
   263c8:	beq	25060 <__assert_fail@plt+0x13c5c>
   263cc:	ldrd	r2, [sp, #88]	; 0x58
   263d0:	add	r0, sp, #148	; 0x94
   263d4:	ldr	ip, [r6]
   263d8:	mov	r1, #4
   263dc:	adds	r2, r2, #1
   263e0:	adc	r3, r3, #0
   263e4:	strd	r2, [sp, #88]	; 0x58
   263e8:	blx	ip
   263ec:	mov	r3, #0
   263f0:	mov	r2, #1
   263f4:	and	r1, r1, r3
   263f8:	and	r0, r0, r2
   263fc:	orrs	r3, r0, r1
   26400:	bne	2649c <__assert_fail@plt+0x15098>
   26404:	add	r0, sp, #148	; 0x94
   26408:	mov	r1, #4
   2640c:	mov	r2, #1
   26410:	ldr	r3, [sp, #48]	; 0x30
   26414:	bl	111f4 <fread@plt>
   26418:	cmp	r0, #1
   2641c:	beq	263bc <__assert_fail@plt+0x14fb8>
   26420:	mov	r2, #5
   26424:	movw	r1, #10144	; 0x27a0
   26428:	mov	r0, #0
   2642c:	movt	r1, #6
   26430:	bl	11170 <dcgettext@plt>
   26434:	bl	4b2b0 <error@@Base>
   26438:	b	25060 <__assert_fail@plt+0x13c5c>
   2643c:	mov	r0, #1
   26440:	mov	r1, #4
   26444:	bl	110d4 <calloc@plt>
   26448:	subs	r4, r0, #0
   2644c:	bne	2559c <__assert_fail@plt+0x14198>
   26450:	ldr	r0, [sp, #56]	; 0x38
   26454:	bl	1111c <free@plt>
   26458:	mov	r2, #5
   2645c:	movw	r1, #10952	; 0x2ac8
   26460:	mov	r0, #0
   26464:	movt	r1, #6
   26468:	bl	11170 <dcgettext@plt>
   2646c:	bl	4b2b0 <error@@Base>
   26470:	mov	r0, #0
   26474:	b	251cc <__assert_fail@plt+0x13dc8>
   26478:	mov	r6, #0
   2647c:	mov	r7, #0
   26480:	str	r1, [sp, #84]	; 0x54
   26484:	strd	r6, [sp, #88]	; 0x58
   26488:	strd	r6, [sp, #96]	; 0x60
   2648c:	strd	r6, [sp, #72]	; 0x48
   26490:	str	r1, [sp, #120]	; 0x78
   26494:	b	25204 <__assert_fail@plt+0x13e00>
   26498:	bl	1117c <__stack_chk_fail@plt>
   2649c:	ldr	r5, [sp, #72]	; 0x48
   264a0:	ldr	r4, [sp, #76]	; 0x4c
   264a4:	ldrd	r6, [sp, #40]	; 0x28
   264a8:	lsl	r2, r5, #2
   264ac:	ldr	r0, [sp, #48]	; 0x30
   264b0:	lsl	r3, r4, #2
   264b4:	adds	r2, r2, r6
   264b8:	orr	r3, r3, r5, lsr #30
   264bc:	mov	r4, #4
   264c0:	adc	r3, r3, r7
   264c4:	mov	r5, #0
   264c8:	strd	r4, [sp]
   264cc:	bl	1d67c <__assert_fail@plt+0xc278>
   264d0:	ldr	r1, [sl, #456]	; 0x1c8
   264d4:	mov	r2, #0
   264d8:	add	r1, r0, r1
   264dc:	ldr	r0, [sp, #48]	; 0x30
   264e0:	bl	113bc <fseek@plt>
   264e4:	cmp	r0, #0
   264e8:	beq	26508 <__assert_fail@plt+0x15104>
   264ec:	mov	r2, #5
   264f0:	movw	r1, #10020	; 0x2724
   264f4:	mov	r0, #0
   264f8:	movt	r1, #6
   264fc:	bl	11170 <dcgettext@plt>
   26500:	bl	4b2b0 <error@@Base>
   26504:	b	25060 <__assert_fail@plt+0x13c5c>
   26508:	mov	r3, #4
   2650c:	ldr	r0, [sp, #48]	; 0x30
   26510:	str	r3, [sp]
   26514:	ldrd	r2, [sp, #88]	; 0x58
   26518:	bl	16500 <__assert_fail@plt+0x50fc>
   2651c:	cmp	r0, #0
   26520:	str	r0, [sp, #84]	; 0x54
   26524:	bne	25204 <__assert_fail@plt+0x13e00>
   26528:	b	2506c <__assert_fail@plt+0x13c68>
   2652c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26530:	sub	sp, sp, #116	; 0x74
   26534:	mov	r8, r1
   26538:	mov	r3, #0
   2653c:	ldr	r4, [sp, #172]	; 0xac
   26540:	mov	r9, r2
   26544:	ldr	r5, [sp, #164]	; 0xa4
   26548:	mov	r2, #0
   2654c:	ldr	sl, [sp, #168]	; 0xa8
   26550:	cmp	r4, #0
   26554:	mov	r1, #0
   26558:	mov	r7, r0
   2655c:	strh	r1, [r5]
   26560:	strd	r2, [sl]
   26564:	mvnne	r3, #0
   26568:	mvnne	r2, #0
   2656c:	strdne	r2, [r4]
   26570:	ldr	r3, [r8, #4]
   26574:	cmp	r3, r9
   26578:	ldreq	r0, [r8]
   2657c:	beq	2668c <__assert_fail@plt+0x15288>
   26580:	add	sl, r8, #8
   26584:	ldr	r0, [r8]
   26588:	mov	r1, sl
   2658c:	bl	1986c <__assert_fail@plt+0x8468>
   26590:	ldrd	r4, [r9, #32]
   26594:	mov	r2, #5
   26598:	str	r9, [r8, #4]
   2659c:	movw	r1, #11264	; 0x2c00
   265a0:	mov	r0, #0
   265a4:	movt	r1, #6
   265a8:	strd	r4, [sp, #40]	; 0x28
   265ac:	ldr	r6, [r7]
   265b0:	mov	r4, #1
   265b4:	ldr	fp, [r9, #24]
   265b8:	bl	11170 <dcgettext@plt>
   265bc:	mov	r5, #0
   265c0:	strd	r4, [sp]
   265c4:	ldrd	r4, [sp, #40]	; 0x28
   265c8:	mov	r1, r6
   265cc:	mov	r2, fp
   265d0:	strd	r4, [sp, #8]
   265d4:	str	r0, [sp, #16]
   265d8:	mov	r0, #0
   265dc:	bl	1502c <__assert_fail@plt+0x3c28>
   265e0:	movw	r2, #16712	; 0x4148
   265e4:	movt	r2, #9
   265e8:	mov	r3, #0
   265ec:	ldr	r1, [r2, #68]	; 0x44
   265f0:	ldr	r4, [r2, #220]	; 0xdc
   265f4:	str	r3, [r8, #8]
   265f8:	add	ip, r1, r1, lsl #3
   265fc:	str	r3, [r8, #12]
   26600:	add	ip, r4, ip, lsl #3
   26604:	cmp	r4, ip
   26608:	str	r0, [r8]
   2660c:	bcs	26688 <__assert_fail@plt+0x15284>
   26610:	mov	r2, r4
   26614:	b	26624 <__assert_fail@plt+0x15220>
   26618:	add	r2, r2, #72	; 0x48
   2661c:	cmp	r2, ip
   26620:	bcs	26a00 <__assert_fail@plt+0x155fc>
   26624:	ldr	r3, [r2, #44]	; 0x2c
   26628:	cmp	r3, r1
   2662c:	add	r3, r3, r3, lsl #3
   26630:	bcs	26618 <__assert_fail@plt+0x15214>
   26634:	add	r3, r4, r3, lsl #3
   26638:	cmp	r9, r3
   2663c:	bne	26618 <__assert_fail@plt+0x15214>
   26640:	ldr	r3, [r2, #4]
   26644:	cmp	r3, #4
   26648:	cmpne	r3, #9
   2664c:	bne	26618 <__assert_fail@plt+0x15214>
   26650:	cmp	r3, #9
   26654:	str	r3, [r8, #16]
   26658:	ldr	r1, [r2, #24]
   2665c:	add	ip, r8, #12
   26660:	ldr	r0, [r7]
   26664:	mov	r3, sl
   26668:	ldr	r2, [r2, #32]
   2666c:	str	ip, [sp]
   26670:	beq	267b4 <__assert_fail@plt+0x153b0>
   26674:	bl	166b0 <__assert_fail@plt+0x52ac>
   26678:	cmp	r0, #0
   2667c:	beq	267c0 <__assert_fail@plt+0x153bc>
   26680:	ldr	r3, [r8, #8]
   26684:	ldr	r0, [r8]
   26688:	str	r3, [r8, #20]
   2668c:	cmp	r0, #0
   26690:	beq	267c0 <__assert_fail@plt+0x153bc>
   26694:	ldrd	r2, [r9, #32]
   26698:	ldrd	sl, [sp, #152]	; 0x98
   2669c:	subs	r4, r2, #4
   266a0:	sbc	r5, r3, #0
   266a4:	cmp	r5, fp
   266a8:	cmpeq	r4, sl
   266ac:	bcc	267c0 <__assert_fail@plt+0x153bc>
   266b0:	cmp	r3, #0
   266b4:	cmpeq	r2, #4
   266b8:	bhi	266c8 <__assert_fail@plt+0x152c4>
   266bc:	cmp	r3, fp
   266c0:	cmpeq	r2, sl
   266c4:	bls	267c0 <__assert_fail@plt+0x153bc>
   266c8:	ldrd	r4, [sp, #152]	; 0x98
   266cc:	cmp	r4, #0
   266d0:	sbcs	r5, r5, #0
   266d4:	blt	267c0 <__assert_fail@plt+0x153bc>
   266d8:	ldr	sl, [sp, #152]	; 0x98
   266dc:	movw	r3, #26492	; 0x677c
   266e0:	movt	r3, #9
   266e4:	mov	r1, #4
   266e8:	add	r0, r0, sl
   266ec:	ldr	r3, [r3]
   266f0:	blx	r3
   266f4:	ldr	fp, [r8, #8]
   266f8:	cmp	fp, #0
   266fc:	strd	r0, [sp, #72]	; 0x48
   26700:	ldr	ip, [sp, #72]	; 0x48
   26704:	str	ip, [sp, #96]	; 0x60
   26708:	beq	26ac0 <__assert_fail@plt+0x156bc>
   2670c:	ldr	sl, [r8, #12]
   26710:	ldr	r9, [r8, #20]
   26714:	add	r3, sl, sl, lsl #1
   26718:	add	r3, fp, r3, lsl #3
   2671c:	cmp	r9, r3
   26720:	beq	26798 <__assert_fail@plt+0x15394>
   26724:	ldrd	r4, [sp, #72]	; 0x48
   26728:	mvn	r0, #-2147483648	; 0x80000000
   2672c:	mov	r1, #0
   26730:	str	r7, [sp, #28]
   26734:	and	r4, r4, r0
   26738:	and	r5, r5, r1
   2673c:	ldrd	r6, [sp, #152]	; 0x98
   26740:	mvn	r3, #0
   26744:	strd	r4, [sp, #88]	; 0x58
   26748:	mov	r2, #-2147483648	; 0x80000000
   2674c:	ldrd	r4, [sp, #88]	; 0x58
   26750:	movw	ip, #43684	; 0xaaa4
   26754:	movt	ip, #5
   26758:	str	ip, [sp, #84]	; 0x54
   2675c:	orr	r5, r5, r3
   26760:	orr	r4, r4, r2
   26764:	mov	r3, #0
   26768:	strd	r4, [sp, #104]	; 0x68
   2676c:	str	r3, [sp, #68]	; 0x44
   26770:	movw	r5, #16712	; 0x4148
   26774:	movt	r5, #9
   26778:	str	r5, [sp, #80]	; 0x50
   2677c:	ldrd	r2, [r9]
   26780:	cmp	r7, r3
   26784:	cmpeq	r6, r2
   26788:	bcs	267e8 <__assert_fail@plt+0x153e4>
   2678c:	ldr	r4, [sp, #68]	; 0x44
   26790:	cmp	r4, #0
   26794:	beq	267cc <__assert_fail@plt+0x153c8>
   26798:	ldr	r5, [sp, #96]	; 0x60
   2679c:	mov	r0, #1
   267a0:	ldr	sl, [sp, #160]	; 0xa0
   267a4:	str	r5, [sl]
   267a8:	str	r9, [r8, #20]
   267ac:	add	sp, sp, #116	; 0x74
   267b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   267b4:	bl	152d8 <__assert_fail@plt+0x3ed4>
   267b8:	cmp	r0, #0
   267bc:	bne	26680 <__assert_fail@plt+0x1527c>
   267c0:	mov	r0, #0
   267c4:	add	sp, sp, #116	; 0x74
   267c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   267cc:	ldrd	r2, [fp]
   267d0:	mov	r9, fp
   267d4:	cmp	r7, r3
   267d8:	cmpeq	r6, r2
   267dc:	bcc	26798 <__assert_fail@plt+0x15394>
   267e0:	mov	r5, #1
   267e4:	str	r5, [sp, #68]	; 0x44
   267e8:	mov	r0, #3
   267ec:	mov	r1, #0
   267f0:	and	r0, r0, r2
   267f4:	and	r1, r1, r3
   267f8:	orrs	ip, r0, r1
   267fc:	bne	269d8 <__assert_fail@plt+0x155d4>
   26800:	cmp	r7, r3
   26804:	cmpeq	r6, r2
   26808:	bhi	269c0 <__assert_fail@plt+0x155bc>
   2680c:	ldr	r4, [sp, #28]
   26810:	ldr	ip, [r4, #4]
   26814:	cmp	ip, #0
   26818:	beq	269c0 <__assert_fail@plt+0x155bc>
   2681c:	ldr	r1, [r8, #16]
   26820:	cmp	r1, #9
   26824:	beq	26a0c <__assert_fail@plt+0x15608>
   26828:	cmp	r1, #4
   2682c:	bne	26b34 <__assert_fail@plt+0x15730>
   26830:	ldrd	r0, [r9, #16]
   26834:	strd	r0, [sp, #40]	; 0x28
   26838:	ldr	r1, [sp, #28]
   2683c:	ldr	lr, [r9, #8]
   26840:	ldr	r4, [r9, #12]
   26844:	ldr	r5, [r1, #8]
   26848:	lsr	r0, lr, #8
   2684c:	orr	r1, r0, r4, lsl #24
   26850:	lsr	r4, r4, #8
   26854:	str	r1, [sp, #48]	; 0x30
   26858:	mov	r0, r5
   2685c:	str	r4, [sp, #52]	; 0x34
   26860:	mov	r1, #0
   26864:	ldrd	r4, [sp, #48]	; 0x30
   26868:	cmp	r5, r1
   2686c:	cmpeq	r4, r0
   26870:	bcs	26ad0 <__assert_fail@plt+0x156cc>
   26874:	ldr	r0, [sp, #48]	; 0x30
   26878:	ldr	r5, [r8, #4]
   2687c:	ldr	r4, [sp, #80]	; 0x50
   26880:	lsl	r1, r0, #5
   26884:	add	r0, ip, r1
   26888:	str	r0, [sp, #100]	; 0x64
   2688c:	ldrd	r0, [r1, ip]
   26890:	ldrh	r4, [r4, #50]	; 0x32
   26894:	strd	r0, [sp, #56]	; 0x38
   26898:	ldrd	r0, [r5, #16]
   2689c:	str	r4, [sp, #64]	; 0x40
   268a0:	ldrd	r4, [sp, #40]	; 0x28
   268a4:	strd	r0, [sp, #32]
   268a8:	ldrd	r0, [sp, #56]	; 0x38
   268ac:	adds	r4, r4, r0
   268b0:	adc	r5, r5, r1
   268b4:	strd	r4, [sp, #40]	; 0x28
   268b8:	ldrd	r4, [sp, #32]
   268bc:	adds	r2, r2, r4
   268c0:	adc	r3, r3, r5
   268c4:	ldrd	r4, [sp, #40]	; 0x28
   268c8:	subs	r4, r4, r2
   268cc:	sbc	r5, r5, r3
   268d0:	strd	r4, [sp, #56]	; 0x38
   268d4:	ldr	r5, [sp, #64]	; 0x40
   268d8:	cmp	r5, #40	; 0x28
   268dc:	beq	26a38 <__assert_fail@plt+0x15634>
   268e0:	ldr	ip, [sp, #64]	; 0x40
   268e4:	cmp	ip, #140	; 0x8c
   268e8:	bne	26b18 <__assert_fail@plt+0x15714>
   268ec:	uxtb	lr, lr
   268f0:	ldr	r3, [sp, #84]	; 0x54
   268f4:	add	lr, r3, lr, lsl #2
   268f8:	ldr	r4, [lr, #1284]	; 0x504
   268fc:	cmp	r4, #0
   26900:	beq	2699c <__assert_fail@plt+0x15598>
   26904:	movw	r1, #11584	; 0x2d40
   26908:	mov	r0, r4
   2690c:	movt	r1, #6
   26910:	bl	110f8 <strcmp@plt>
   26914:	cmp	r0, #0
   26918:	beq	269c0 <__assert_fail@plt+0x155bc>
   2691c:	movw	r1, #11600	; 0x2d50
   26920:	mov	r0, r4
   26924:	movt	r1, #6
   26928:	bl	110f8 <strcmp@plt>
   2692c:	cmp	r0, #0
   26930:	bne	26ab0 <__assert_fail@plt+0x156ac>
   26934:	ldrd	sl, [sp, #56]	; 0x38
   26938:	ldr	r5, [sp, #100]	; 0x64
   2693c:	lsrs	fp, fp, #1
   26940:	rrx	sl, sl
   26944:	strd	sl, [sp, #56]	; 0x38
   26948:	ldr	fp, [sp, #172]	; 0xac
   2694c:	ldr	ip, [sp, #72]	; 0x48
   26950:	ldr	r3, [r5, #24]
   26954:	cmp	fp, #0
   26958:	and	r1, ip, #-2147483648	; 0x80000000
   2695c:	ldr	r0, [sp, #56]	; 0x38
   26960:	ldr	r4, [sp, #164]	; 0xa4
   26964:	ldrd	sl, [sp, #40]	; 0x28
   26968:	bic	r2, r0, #-2147483648	; 0x80000000
   2696c:	ldr	ip, [sp, #168]	; 0xa8
   26970:	orr	r2, r2, r1
   26974:	strh	r3, [r4]
   26978:	str	r2, [sp, #96]	; 0x60
   2697c:	strd	sl, [ip]
   26980:	beq	26798 <__assert_fail@plt+0x15394>
   26984:	ldr	r3, [r5, #16]
   26988:	mov	r2, #0
   2698c:	ldr	r4, [sp, #172]	; 0xac
   26990:	str	r2, [r4, #4]
   26994:	str	r3, [r4]
   26998:	b	26798 <__assert_fail@plt+0x15394>
   2699c:	movw	r1, #11540	; 0x2d14
   269a0:	movt	r1, #6
   269a4:	mov	r0, r4
   269a8:	mov	r2, #5
   269ac:	bl	11170 <dcgettext@plt>
   269b0:	ldrb	r1, [r9, #8]
   269b4:	bl	4b9ec <warn@@Base>
   269b8:	ldr	fp, [r8, #8]
   269bc:	ldr	sl, [r8, #12]
   269c0:	add	r3, sl, sl, lsl #1
   269c4:	add	r9, r9, #24
   269c8:	add	r3, fp, r3, lsl #3
   269cc:	cmp	r9, r3
   269d0:	bne	2677c <__assert_fail@plt+0x15378>
   269d4:	b	26798 <__assert_fail@plt+0x15394>
   269d8:	mov	r2, #5
   269dc:	movw	r1, #11276	; 0x2c0c
   269e0:	mov	r0, #0
   269e4:	movt	r1, #6
   269e8:	bl	11170 <dcgettext@plt>
   269ec:	ldr	r1, [r9]
   269f0:	bl	4b9ec <warn@@Base>
   269f4:	ldr	fp, [r8, #8]
   269f8:	ldr	sl, [r8, #12]
   269fc:	b	269c0 <__assert_fail@plt+0x155bc>
   26a00:	mov	r3, #0
   26a04:	str	r3, [r8, #20]
   26a08:	b	2668c <__assert_fail@plt+0x15288>
   26a0c:	ldrd	r0, [sp, #72]	; 0x48
   26a10:	mov	r4, #1073741824	; 0x40000000
   26a14:	mov	r5, #0
   26a18:	and	r4, r4, r0
   26a1c:	and	r5, r5, r1
   26a20:	orrs	r1, r4, r5
   26a24:	ldrd	r4, [sp, #88]	; 0x58
   26a28:	strd	r4, [sp, #40]	; 0x28
   26a2c:	ldrdne	r4, [sp, #104]	; 0x68
   26a30:	strdne	r4, [sp, #40]	; 0x28
   26a34:	b	26838 <__assert_fail@plt+0x15434>
   26a38:	uxtb	lr, lr
   26a3c:	movw	r3, #35500	; 0x8aac
   26a40:	movt	r3, #5
   26a44:	add	r3, r3, lr, lsl #2
   26a48:	ldr	r4, [r3, #-404]	; 0xfffffe6c
   26a4c:	cmp	r4, #0
   26a50:	beq	26b04 <__assert_fail@plt+0x15700>
   26a54:	movw	r1, #11468	; 0x2ccc
   26a58:	mov	r0, r4
   26a5c:	movt	r1, #6
   26a60:	bl	110f8 <strcmp@plt>
   26a64:	cmp	r0, #0
   26a68:	beq	269c0 <__assert_fail@plt+0x155bc>
   26a6c:	movw	r1, #11480	; 0x2cd8
   26a70:	mov	r0, r4
   26a74:	movt	r1, #6
   26a78:	bl	110f8 <strcmp@plt>
   26a7c:	cmp	r0, #0
   26a80:	ldreq	r5, [sp, #100]	; 0x64
   26a84:	beq	26948 <__assert_fail@plt+0x15544>
   26a88:	movw	r1, #11496	; 0x2ce8
   26a8c:	movt	r1, #6
   26a90:	mov	r0, #0
   26a94:	mov	r2, #5
   26a98:	bl	11170 <dcgettext@plt>
   26a9c:	mov	r1, r4
   26aa0:	bl	4b9ec <warn@@Base>
   26aa4:	ldr	fp, [r8, #8]
   26aa8:	ldr	sl, [r8, #12]
   26aac:	b	269c0 <__assert_fail@plt+0x155bc>
   26ab0:	movw	r1, #11616	; 0x2d60
   26ab4:	mov	r0, #0
   26ab8:	movt	r1, #6
   26abc:	b	26a94 <__assert_fail@plt+0x15690>
   26ac0:	ldr	r1, [sp, #160]	; 0xa0
   26ac4:	str	r0, [r1]
   26ac8:	mov	r0, #1
   26acc:	b	267c4 <__assert_fail@plt+0x153c0>
   26ad0:	mov	r2, #5
   26ad4:	movw	r1, #11372	; 0x2c6c
   26ad8:	mov	r0, #0
   26adc:	movt	r1, #6
   26ae0:	ldr	r7, [sp, #28]
   26ae4:	bl	11170 <dcgettext@plt>
   26ae8:	ldr	r3, [r9, #8]
   26aec:	ldr	r1, [r9, #12]
   26af0:	ldr	r2, [r7, #8]
   26af4:	lsr	r3, r3, #8
   26af8:	orr	r1, r3, r1, lsl #24
   26afc:	bl	4b2b0 <error@@Base>
   26b00:	b	26798 <__assert_fail@plt+0x15394>
   26b04:	movw	r1, #11424	; 0x2ca0
   26b08:	mov	r0, r4
   26b0c:	mov	r2, #5
   26b10:	movt	r1, #6
   26b14:	b	269ac <__assert_fail@plt+0x155a8>
   26b18:	mov	r2, #5
   26b1c:	movw	r1, #11664	; 0x2d90
   26b20:	mov	r0, #0
   26b24:	movt	r1, #6
   26b28:	bl	11170 <dcgettext@plt>
   26b2c:	bl	4b9ec <warn@@Base>
   26b30:	b	26798 <__assert_fail@plt+0x15394>
   26b34:	mov	r2, #5
   26b38:	movw	r1, #11324	; 0x2c3c
   26b3c:	mov	r0, #0
   26b40:	movt	r1, #6
   26b44:	bl	11170 <dcgettext@plt>
   26b48:	ldr	r1, [r8, #16]
   26b4c:	bl	4b2b0 <error@@Base>
   26b50:	b	26798 <__assert_fail@plt+0x15394>
   26b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26b58:	sub	sp, sp, #116	; 0x74
   26b5c:	mov	r4, r0
   26b60:	mov	r7, r2
   26b64:	movw	r1, #11800	; 0x2e18
   26b68:	mov	r2, #5
   26b6c:	movt	r1, #6
   26b70:	mov	r0, #0
   26b74:	ldr	r6, [sp, #152]	; 0x98
   26b78:	mov	r5, #0
   26b7c:	ldr	r8, [sp, #156]	; 0x9c
   26b80:	bl	11170 <dcgettext@plt>
   26b84:	mov	r1, r4
   26b88:	mov	r2, r7
   26b8c:	str	r6, [sp, #8]
   26b90:	mov	r4, #1
   26b94:	str	r8, [sp, #12]
   26b98:	strd	r4, [sp]
   26b9c:	str	r0, [sp, #16]
   26ba0:	mov	r0, #0
   26ba4:	bl	1502c <__assert_fail@plt+0x3c28>
   26ba8:	cmp	r0, #0
   26bac:	str	r0, [sp, #44]	; 0x2c
   26bb0:	beq	276dc <__assert_fail@plt+0x162d8>
   26bb4:	mov	r2, #5
   26bb8:	movw	r1, #11808	; 0x2e20
   26bbc:	mov	r0, #0
   26bc0:	movt	r1, #6
   26bc4:	bl	11170 <dcgettext@plt>
   26bc8:	mov	r3, r6
   26bcc:	mov	r2, r7
   26bd0:	mov	r1, r0
   26bd4:	mov	r0, #1
   26bd8:	bl	1132c <__printf_chk@plt>
   26bdc:	ldr	r4, [sp, #44]	; 0x2c
   26be0:	mov	r2, #5
   26be4:	movw	r1, #11880	; 0x2e68
   26be8:	mov	r0, #0
   26bec:	movt	r1, #6
   26bf0:	add	r6, r4, r6
   26bf4:	str	r6, [sp, #32]
   26bf8:	bl	11170 <dcgettext@plt>
   26bfc:	mov	r2, #5
   26c00:	movw	r1, #11908	; 0x2e84
   26c04:	movt	r1, #6
   26c08:	mov	r5, r0
   26c0c:	mov	r0, #0
   26c10:	bl	11170 <dcgettext@plt>
   26c14:	mov	r2, #5
   26c18:	movw	r1, #11916	; 0x2e8c
   26c1c:	movt	r1, #6
   26c20:	mov	r4, r0
   26c24:	mov	r0, #0
   26c28:	bl	11170 <dcgettext@plt>
   26c2c:	mov	r1, r5
   26c30:	mov	r2, r4
   26c34:	mov	r3, r0
   26c38:	mov	r0, #1
   26c3c:	bl	1132c <__printf_chk@plt>
   26c40:	ldr	ip, [sp, #44]	; 0x2c
   26c44:	cmp	ip, r6
   26c48:	bcs	28314 <__assert_fail@plt+0x16f10>
   26c4c:	ldr	r8, [sp, #44]	; 0x2c
   26c50:	movw	r4, #16712	; 0x4148
   26c54:	movw	r6, #19525	; 0x4c45
   26c58:	movt	r4, #9
   26c5c:	movt	r6, #17993	; 0x4649
   26c60:	str	r4, [sp, #40]	; 0x28
   26c64:	str	r6, [sp, #72]	; 0x48
   26c68:	movw	ip, #5977	; 0x1759
   26c6c:	movw	r4, #34079	; 0x851f
   26c70:	movt	ip, #53687	; 0xd1b7
   26c74:	movt	r4, #20971	; 0x51eb
   26c78:	str	ip, [sp, #80]	; 0x50
   26c7c:	str	r4, [sp, #76]	; 0x4c
   26c80:	movw	r6, #15241	; 0x3b89
   26c84:	movw	ip, #56963	; 0xde83
   26c88:	movt	r6, #21990	; 0x55e6
   26c8c:	movt	ip, #17179	; 0x431b
   26c90:	str	r6, [sp, #84]	; 0x54
   26c94:	movw	r4, #60495	; 0xec4f
   26c98:	mov	r6, #1
   26c9c:	movt	r4, #20164	; 0x4ec4
   26ca0:	str	ip, [sp, #88]	; 0x58
   26ca4:	str	r4, [sp, #92]	; 0x5c
   26ca8:	str	r6, [sp, #36]	; 0x24
   26cac:	ldr	ip, [sp, #40]	; 0x28
   26cb0:	movw	r3, #16712	; 0x4148
   26cb4:	ldr	r4, [sp, #32]
   26cb8:	movt	r3, #9
   26cbc:	ldrh	r2, [ip, #50]	; 0x32
   26cc0:	rsb	r9, r8, r4
   26cc4:	cmp	r2, #50	; 0x32
   26cc8:	beq	26fc4 <__assert_fail@plt+0x15bc0>
   26ccc:	cmp	r9, #11
   26cd0:	bls	27df0 <__assert_fail@plt+0x169ec>
   26cd4:	movw	fp, #26492	; 0x677c
   26cd8:	movt	fp, #9
   26cdc:	add	r0, r8, #8
   26ce0:	mov	r1, #4
   26ce4:	ldr	r3, [fp]
   26ce8:	add	r7, r8, #12
   26cec:	blx	r3
   26cf0:	ldr	r3, [fp]
   26cf4:	mov	r1, #4
   26cf8:	mov	r6, r0
   26cfc:	mov	r0, r8
   26d00:	blx	r3
   26d04:	ldr	r3, [fp]
   26d08:	mov	r1, #4
   26d0c:	mov	sl, r0
   26d10:	add	r0, r8, #4
   26d14:	blx	r3
   26d18:	add	r5, sl, #3
   26d1c:	bic	r5, r5, #3
   26d20:	ldr	ip, [sp, #44]	; 0x2c
   26d24:	add	r5, r7, r5
   26d28:	cmp	ip, r5
   26d2c:	mov	r4, r0
   26d30:	bhi	26d40 <__assert_fail@plt+0x1593c>
   26d34:	ldr	ip, [sp, #32]
   26d38:	cmp	ip, r5
   26d3c:	bcs	26d64 <__assert_fail@plt+0x15960>
   26d40:	mov	r2, #5
   26d44:	movw	r1, #11992	; 0x2ed8
   26d48:	mov	r0, #0
   26d4c:	movt	r1, #6
   26d50:	bl	11170 <dcgettext@plt>
   26d54:	mov	r1, sl
   26d58:	bl	4b9ec <warn@@Base>
   26d5c:	mov	r5, r7
   26d60:	mov	sl, #0
   26d64:	mov	r3, #12
   26d68:	add	r3, r8, r3
   26d6c:	add	r2, r4, #3
   26d70:	cmp	r3, r5
   26d74:	bic	r2, r2, #3
   26d78:	add	r2, r5, r2
   26d7c:	str	r2, [sp, #28]
   26d80:	bhi	2704c <__assert_fail@plt+0x15c48>
   26d84:	ldr	ip, [sp, #28]
   26d88:	cmp	r3, ip
   26d8c:	bhi	2704c <__assert_fail@plt+0x15c48>
   26d90:	cmp	sl, #0
   26d94:	blt	2704c <__assert_fail@plt+0x15c48>
   26d98:	cmp	r4, #0
   26d9c:	blt	2704c <__assert_fail@plt+0x15c48>
   26da0:	rsb	r3, r8, ip
   26da4:	cmp	r9, r3
   26da8:	bcc	2704c <__assert_fail@plt+0x15c48>
   26dac:	add	r3, r7, sl
   26db0:	ldrb	r3, [r3, #-1]
   26db4:	cmp	r3, #0
   26db8:	beq	26eec <__assert_fail@plt+0x15ae8>
   26dbc:	add	r0, sl, #1
   26dc0:	bl	11224 <malloc@plt>
   26dc4:	subs	r9, r0, #0
   26dc8:	beq	28254 <__assert_fail@plt+0x16e50>
   26dcc:	mov	r1, r7
   26dd0:	mov	r2, sl
   26dd4:	bl	11308 <strncpy@plt>
   26dd8:	cmp	sl, #0
   26ddc:	mov	r3, #0
   26de0:	mov	r7, r9
   26de4:	strb	r3, [r9, sl]
   26de8:	beq	26ef8 <__assert_fail@plt+0x15af4>
   26dec:	movw	r1, #12200	; 0x2fa8
   26df0:	mov	r0, r7
   26df4:	movt	r1, #6
   26df8:	mov	r2, #3
   26dfc:	bl	113e0 <strncmp@plt>
   26e00:	cmp	r0, #0
   26e04:	beq	270a4 <__assert_fail@plt+0x15ca0>
   26e08:	movw	r1, #12368	; 0x3050
   26e0c:	mov	r0, r7
   26e10:	movt	r1, #6
   26e14:	mov	r2, #7
   26e18:	bl	113e0 <strncmp@plt>
   26e1c:	cmp	r0, #0
   26e20:	beq	2718c <__assert_fail@plt+0x15d88>
   26e24:	movw	r1, #12716	; 0x31ac
   26e28:	mov	r0, r7
   26e2c:	movt	r1, #6
   26e30:	mov	r2, #11
   26e34:	bl	113e0 <strncmp@plt>
   26e38:	cmp	r0, #0
   26e3c:	beq	273c8 <__assert_fail@plt+0x15fc4>
   26e40:	movw	r1, #12832	; 0x3220
   26e44:	mov	r0, r7
   26e48:	movt	r1, #6
   26e4c:	mov	r2, #6
   26e50:	bl	113e0 <strncmp@plt>
   26e54:	cmp	r0, #0
   26e58:	beq	276a4 <__assert_fail@plt+0x162a0>
   26e5c:	movw	r1, #13000	; 0x32c8
   26e60:	mov	r0, r7
   26e64:	movt	r1, #6
   26e68:	mov	r2, #4
   26e6c:	bl	113e0 <strncmp@plt>
   26e70:	cmp	r0, #0
   26e74:	beq	27370 <__assert_fail@plt+0x15f6c>
   26e78:	movw	r1, #13008	; 0x32d0
   26e7c:	mov	r0, r7
   26e80:	movt	r1, #6
   26e84:	mov	r2, #7
   26e88:	bl	113e0 <strncmp@plt>
   26e8c:	cmp	r0, #0
   26e90:	beq	27c18 <__assert_fail@plt+0x16814>
   26e94:	movw	r1, #13292	; 0x33ec
   26e98:	mov	r0, r7
   26e9c:	movt	r1, #6
   26ea0:	mov	r2, #7
   26ea4:	bl	113e0 <strncmp@plt>
   26ea8:	cmp	r0, #0
   26eac:	bne	273b8 <__assert_fail@plt+0x15fb4>
   26eb0:	cmp	r6, #3
   26eb4:	beq	280b4 <__assert_fail@plt+0x16cb0>
   26eb8:	mov	r2, #5
   26ebc:	movw	r1, #57528	; 0xe0b8
   26ec0:	movt	r1, #5
   26ec4:	bl	11170 <dcgettext@plt>
   26ec8:	mov	r1, #64	; 0x40
   26ecc:	str	r6, [sp, #4]
   26ed0:	mov	r3, r1
   26ed4:	mov	r2, #1
   26ed8:	str	r0, [sp]
   26edc:	ldr	r0, [pc, #4020]	; 27e98 <__assert_fail@plt+0x16a94>
   26ee0:	bl	113f8 <__snprintf_chk@plt>
   26ee4:	ldr	r0, [pc, #4012]	; 27e98 <__assert_fail@plt+0x16a94>
   26ee8:	b	273c0 <__assert_fail@plt+0x15fbc>
   26eec:	cmp	sl, #0
   26ef0:	mov	r9, r3
   26ef4:	bne	26dec <__assert_fail@plt+0x159e8>
   26ef8:	mov	r0, r6
   26efc:	bl	14c0c <__assert_fail@plt+0x3808>
   26f00:	movw	r2, #11784	; 0x2e08
   26f04:	movt	r2, #6
   26f08:	str	r0, [sp]
   26f0c:	mov	r3, r4
   26f10:	movw	r1, #13344	; 0x3420
   26f14:	mov	r0, #1
   26f18:	movt	r1, #6
   26f1c:	bl	1132c <__printf_chk@plt>
   26f20:	mov	r0, r7
   26f24:	movw	r1, #13008	; 0x32d0
   26f28:	mov	r2, #7
   26f2c:	movt	r1, #6
   26f30:	bl	113e0 <strncmp@plt>
   26f34:	subs	r8, r0, #0
   26f38:	beq	270c4 <__assert_fail@plt+0x15cc0>
   26f3c:	movw	r1, #12200	; 0x2fa8
   26f40:	mov	r0, r7
   26f44:	movt	r1, #6
   26f48:	mov	r2, #3
   26f4c:	bl	113e0 <strncmp@plt>
   26f50:	cmp	r0, #0
   26f54:	beq	27164 <__assert_fail@plt+0x15d60>
   26f58:	movw	r1, #13292	; 0x33ec
   26f5c:	mov	r0, r7
   26f60:	movt	r1, #6
   26f64:	mov	r2, #7
   26f68:	bl	113e0 <strncmp@plt>
   26f6c:	cmp	r0, #0
   26f70:	beq	271c4 <__assert_fail@plt+0x15dc0>
   26f74:	mov	r0, r7
   26f78:	movw	r1, #14012	; 0x36bc
   26f7c:	mov	r2, #4
   26f80:	movt	r1, #6
   26f84:	bl	113e0 <strncmp@plt>
   26f88:	subs	r8, r0, #0
   26f8c:	beq	27134 <__assert_fail@plt+0x15d30>
   26f90:	ldr	r4, [sp, #36]	; 0x24
   26f94:	and	r4, r4, #1
   26f98:	str	r4, [sp, #36]	; 0x24
   26f9c:	cmp	r9, #0
   26fa0:	beq	26fac <__assert_fail@plt+0x15ba8>
   26fa4:	mov	r0, r9
   26fa8:	bl	1111c <free@plt>
   26fac:	ldr	r6, [sp, #32]
   26fb0:	ldr	ip, [sp, #28]
   26fb4:	cmp	r6, ip
   26fb8:	bls	27090 <__assert_fail@plt+0x15c8c>
   26fbc:	mov	r8, ip
   26fc0:	b	26cac <__assert_fail@plt+0x158a8>
   26fc4:	ldrb	r3, [r3, #7]
   26fc8:	cmp	r3, #13
   26fcc:	bne	26ccc <__assert_fail@plt+0x158c8>
   26fd0:	cmp	r9, #23
   26fd4:	bls	27df0 <__assert_fail@plt+0x169ec>
   26fd8:	movw	fp, #26492	; 0x677c
   26fdc:	movt	fp, #9
   26fe0:	add	r0, r8, #16
   26fe4:	mov	r1, #8
   26fe8:	ldr	r3, [fp]
   26fec:	add	r7, r8, #24
   26ff0:	blx	r3
   26ff4:	ldr	r3, [fp]
   26ff8:	mov	r1, #8
   26ffc:	mov	r6, r0
   27000:	mov	r0, r8
   27004:	blx	r3
   27008:	ldr	r3, [fp]
   2700c:	mov	r1, #8
   27010:	mov	sl, r0
   27014:	add	r0, r8, #8
   27018:	blx	r3
   2701c:	add	r5, sl, #7
   27020:	bic	r5, r5, #7
   27024:	mov	r3, #24
   27028:	add	r5, r7, r5
   2702c:	add	r3, r8, r3
   27030:	cmp	r3, r5
   27034:	add	r2, r0, #7
   27038:	mov	r4, r0
   2703c:	bic	r2, r2, #7
   27040:	add	r2, r5, r2
   27044:	str	r2, [sp, #28]
   27048:	bls	26d84 <__assert_fail@plt+0x15980>
   2704c:	mov	r2, #5
   27050:	movw	r1, #12036	; 0x2f04
   27054:	mov	r0, #0
   27058:	movt	r1, #6
   2705c:	bl	11170 <dcgettext@plt>
   27060:	ldr	ip, [sp, #44]	; 0x2c
   27064:	rsb	r1, ip, r8
   27068:	bl	4b9ec <warn@@Base>
   2706c:	mov	r2, #5
   27070:	movw	r1, #12100	; 0x2f44
   27074:	mov	r0, #0
   27078:	movt	r1, #6
   2707c:	bl	11170 <dcgettext@plt>
   27080:	mov	r1, r6
   27084:	mov	r2, sl
   27088:	mov	r3, r4
   2708c:	bl	4b9ec <warn@@Base>
   27090:	ldr	r0, [sp, #44]	; 0x2c
   27094:	bl	1111c <free@plt>
   27098:	ldr	r0, [sp, #36]	; 0x24
   2709c:	add	sp, sp, #116	; 0x74
   270a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   270a4:	sub	r3, r6, #1
   270a8:	cmp	r3, #3
   270ac:	ldrls	pc, [pc, r3, lsl #2]
   270b0:	b	27ae8 <__assert_fail@plt+0x166e4>
   270b4:	andeq	r7, r2, r0, lsr r7
   270b8:	andeq	r7, r2, r8, ror #13
   270bc:	andeq	r7, r2, r0, lsl #14
   270c0:	andeq	r7, r2, r8, lsl r7
   270c4:	cmp	r6, #102	; 0x66
   270c8:	beq	28030 <__assert_fail@plt+0x16c2c>
   270cc:	bls	27380 <__assert_fail@plt+0x15f7c>
   270d0:	cmp	r6, #106	; 0x6a
   270d4:	beq	27ff8 <__assert_fail@plt+0x16bf4>
   270d8:	bls	27748 <__assert_fail@plt+0x16344>
   270dc:	cmp	r6, #107	; 0x6b
   270e0:	beq	27ea8 <__assert_fail@plt+0x16aa4>
   270e4:	cmp	r6, #108	; 0x6c
   270e8:	bne	2717c <__assert_fail@plt+0x15d78>
   270ec:	ldr	r6, [sp, #36]	; 0x24
   270f0:	movw	r1, #13572	; 0x3504
   270f4:	movt	r1, #6
   270f8:	mov	r2, #5
   270fc:	and	r6, r6, #1
   27100:	str	r6, [sp, #36]	; 0x24
   27104:	bl	11170 <dcgettext@plt>
   27108:	mov	r1, r0
   2710c:	mov	r0, #1
   27110:	bl	1132c <__printf_chk@plt>
   27114:	ldr	r3, [fp]
   27118:	mov	r0, r5
   2711c:	mov	r1, #8
   27120:	blx	r3
   27124:	bl	183ac <__assert_fail@plt+0x6fa8>
   27128:	mov	r0, #10
   2712c:	bl	112fc <putchar@plt>
   27130:	b	26f9c <__assert_fail@plt+0x15b98>
   27134:	ldr	ip, [sp, #40]	; 0x28
   27138:	ldr	r3, [ip, #460]	; 0x1cc
   2713c:	ldr	ip, [sp, #72]	; 0x48
   27140:	cmp	r3, #0
   27144:	moveq	r7, #8
   27148:	movne	r7, #4
   2714c:	cmp	r6, ip
   27150:	beq	27424 <__assert_fail@plt+0x16020>
   27154:	ldr	r4, [sp, #36]	; 0x24
   27158:	and	r8, r4, #1
   2715c:	str	r8, [sp, #36]	; 0x24
   27160:	b	26f9c <__assert_fail@plt+0x15b98>
   27164:	cmp	r6, #3
   27168:	beq	27b20 <__assert_fail@plt+0x1671c>
   2716c:	cmp	r6, #4
   27170:	beq	27788 <__assert_fail@plt+0x16384>
   27174:	cmp	r6, #1
   27178:	beq	27b68 <__assert_fail@plt+0x16764>
   2717c:	ldr	r6, [sp, #36]	; 0x24
   27180:	and	r6, r6, #1
   27184:	str	r6, [sp, #36]	; 0x24
   27188:	b	26f9c <__assert_fail@plt+0x15b98>
   2718c:	sub	r3, r6, #7
   27190:	cmp	r3, #9
   27194:	ldrls	pc, [pc, r3, lsl #2]
   27198:	b	273b8 <__assert_fail@plt+0x15fb4>
   2719c:	andeq	r7, r2, r8, lsr #20
   271a0:	andeq	r7, r2, r0, asr #20
   271a4:	andeq	r7, r2, r8, asr sl
   271a8:	andeq	r7, r2, r0, ror sl
   271ac:	andeq	r7, r2, r8, lsl #21
   271b0:	andeq	r7, r2, r0, lsr #21
   271b4:			; <UNDEFINED> instruction: 0x00027ab8
   271b8:	ldrdeq	r7, [r2], -r0
   271bc:	strdeq	r7, [r2], -r8
   271c0:	andeq	r7, r2, r0, lsl sl
   271c4:	ldr	r6, [sp, #40]	; 0x28
   271c8:	mov	r0, r5
   271cc:	ldr	r3, [r6, #460]	; 0x1cc
   271d0:	cmp	r3, #0
   271d4:	ldr	r3, [fp]
   271d8:	movne	r6, #4
   271dc:	moveq	r6, #8
   271e0:	mov	r1, r6
   271e4:	add	sl, r5, r6
   271e8:	blx	r3
   271ec:	mov	r7, r6
   271f0:	ldr	r3, [fp]
   271f4:	add	r8, sl, r6
   271f8:	add	r6, r8, r6
   271fc:	add	r5, r5, r4
   27200:	strd	r0, [sp, #56]	; 0x38
   27204:	mov	r0, sl
   27208:	mov	r1, r7
   2720c:	blx	r3
   27210:	ldr	r3, [fp]
   27214:	strd	r0, [sp, #48]	; 0x30
   27218:	mov	r0, r8
   2721c:	mov	r1, r7
   27220:	blx	r3
   27224:	mov	sl, r0
   27228:	mov	r0, r6
   2722c:	mov	fp, r1
   27230:	bl	1129c <strlen@plt>
   27234:	add	r0, r0, #1
   27238:	add	r7, r6, r0
   2723c:	mov	r0, r7
   27240:	bl	1129c <strlen@plt>
   27244:	add	r0, r0, #1
   27248:	add	r4, r7, r0
   2724c:	mov	r0, r4
   27250:	bl	1129c <strlen@plt>
   27254:	mov	r2, #5
   27258:	movw	r1, #13912	; 0x3658
   2725c:	movt	r1, #6
   27260:	add	r8, r0, #1
   27264:	mov	r0, #0
   27268:	bl	11170 <dcgettext@plt>
   2726c:	mov	r2, r6
   27270:	add	r8, r4, r8
   27274:	mov	r1, r0
   27278:	mov	r0, #1
   2727c:	bl	1132c <__printf_chk@plt>
   27280:	ldr	ip, [sp, #36]	; 0x24
   27284:	mov	r2, #5
   27288:	movw	r1, #13932	; 0x366c
   2728c:	mov	r0, #0
   27290:	movt	r1, #6
   27294:	cmp	r5, r8
   27298:	movne	ip, #0
   2729c:	andeq	ip, ip, #1
   272a0:	str	ip, [sp, #36]	; 0x24
   272a4:	bl	11170 <dcgettext@plt>
   272a8:	mov	r2, r7
   272ac:	mov	r1, r0
   272b0:	mov	r0, #1
   272b4:	bl	1132c <__printf_chk@plt>
   272b8:	mov	r2, #5
   272bc:	movw	r1, #13948	; 0x367c
   272c0:	mov	r0, #0
   272c4:	movt	r1, #6
   272c8:	bl	11170 <dcgettext@plt>
   272cc:	mov	r1, r0
   272d0:	mov	r0, #1
   272d4:	bl	1132c <__printf_chk@plt>
   272d8:	ldrd	r0, [sp, #56]	; 0x38
   272dc:	mov	r2, #5
   272e0:	bl	16c84 <__assert_fail@plt+0x5880>
   272e4:	mov	r2, #5
   272e8:	movw	r1, #13964	; 0x368c
   272ec:	mov	r0, #0
   272f0:	movt	r1, #6
   272f4:	bl	11170 <dcgettext@plt>
   272f8:	mov	r1, r0
   272fc:	mov	r0, #1
   27300:	bl	1132c <__printf_chk@plt>
   27304:	ldrd	r0, [sp, #48]	; 0x30
   27308:	mov	r2, #5
   2730c:	bl	16c84 <__assert_fail@plt+0x5880>
   27310:	mov	r2, #5
   27314:	movw	r1, #13976	; 0x3698
   27318:	mov	r0, #0
   2731c:	movt	r1, #6
   27320:	bl	11170 <dcgettext@plt>
   27324:	mov	r1, r0
   27328:	mov	r0, #1
   2732c:	bl	1132c <__printf_chk@plt>
   27330:	mov	r1, fp
   27334:	mov	r2, #5
   27338:	mov	r0, sl
   2733c:	bl	16c84 <__assert_fail@plt+0x5880>
   27340:	mov	r0, #10
   27344:	bl	112fc <putchar@plt>
   27348:	mov	r2, #5
   2734c:	movw	r1, #13992	; 0x36a8
   27350:	mov	r0, #0
   27354:	movt	r1, #6
   27358:	bl	11170 <dcgettext@plt>
   2735c:	mov	r2, r4
   27360:	mov	r1, r0
   27364:	mov	r0, #1
   27368:	bl	1132c <__printf_chk@plt>
   2736c:	b	26f9c <__assert_fail@plt+0x15b98>
   27370:	movw	r2, #51116	; 0xc7ac
   27374:	add	r0, r7, #4
   27378:	movt	r2, #5
   2737c:	b	26f08 <__assert_fail@plt+0x15b04>
   27380:	cmp	r6, #2
   27384:	beq	27fdc <__assert_fail@plt+0x16bd8>
   27388:	bls	27848 <__assert_fail@plt+0x16444>
   2738c:	cmp	r6, #6
   27390:	beq	27e44 <__assert_fail@plt+0x16a40>
   27394:	cmp	r6, #101	; 0x65
   27398:	bne	2717c <__assert_fail@plt+0x15d78>
   2739c:	ldr	r4, [sp, #36]	; 0x24
   273a0:	movw	r1, #13556	; 0x34f4
   273a4:	mov	r2, #5
   273a8:	movt	r1, #6
   273ac:	and	r4, r4, #1
   273b0:	str	r4, [sp, #36]	; 0x24
   273b4:	b	27104 <__assert_fail@plt+0x15d00>
   273b8:	mov	r0, r6
   273bc:	bl	14c0c <__assert_fail@plt+0x3808>
   273c0:	mov	r2, r7
   273c4:	b	26f08 <__assert_fail@plt+0x15b04>
   273c8:	cmp	r6, #1
   273cc:	beq	28288 <__assert_fail@plt+0x16e84>
   273d0:	cmp	r6, #31
   273d4:	bls	27e10 <__assert_fail@plt+0x16a0c>
   273d8:	ldr	ip, [sp, #40]	; 0x28
   273dc:	ldrh	r3, [ip, #50]	; 0x32
   273e0:	cmp	r3, #41	; 0x29
   273e4:	beq	27808 <__assert_fail@plt+0x16404>
   273e8:	bhi	277f4 <__assert_fail@plt+0x163f0>
   273ec:	cmp	r3, #2
   273f0:	beq	27808 <__assert_fail@plt+0x16404>
   273f4:	cmp	r3, #18
   273f8:	beq	27808 <__assert_fail@plt+0x16404>
   273fc:	cmp	r6, #33	; 0x21
   27400:	beq	27dd8 <__assert_fail@plt+0x169d4>
   27404:	cmp	r6, #35	; 0x23
   27408:	bne	27818 <__assert_fail@plt+0x16414>
   2740c:	movw	r1, #12784	; 0x31f0
   27410:	mov	r2, #5
   27414:	movt	r1, #6
   27418:	mov	r0, #0
   2741c:	bl	11170 <dcgettext@plt>
   27420:	b	273c0 <__assert_fail@plt+0x15fbc>
   27424:	lsl	r6, r7, #1
   27428:	str	r6, [sp, #56]	; 0x38
   2742c:	cmp	r4, r6
   27430:	bcc	28094 <__assert_fail@plt+0x16c90>
   27434:	add	ip, r5, r4
   27438:	str	ip, [sp, #96]	; 0x60
   2743c:	ldrb	r3, [ip, #-1]
   27440:	cmp	r3, #0
   27444:	bne	2790c <__assert_fail@plt+0x16508>
   27448:	ldr	r3, [fp]
   2744c:	mov	r0, r5
   27450:	mov	r1, r7
   27454:	add	r6, r5, r7
   27458:	blx	r3
   2745c:	ldr	r3, [fp]
   27460:	mov	r5, #0
   27464:	strd	r0, [sp, #48]	; 0x30
   27468:	mov	r0, r6
   2746c:	mov	r1, r7
   27470:	blx	r3
   27474:	adds	r2, r7, r7
   27478:	ldr	lr, [sp, #52]	; 0x34
   2747c:	ldr	ip, [sp, #56]	; 0x38
   27480:	strd	r0, [sp, #64]	; 0x40
   27484:	mov	r1, #0
   27488:	ldr	r0, [sp, #48]	; 0x30
   2748c:	adc	r3, r1, r1
   27490:	adds	r2, r2, r7
   27494:	adc	r3, r3, r1
   27498:	mul	r1, r2, lr
   2749c:	mla	r1, r0, r3, r1
   274a0:	umull	r2, r3, r2, r0
   274a4:	adds	r2, r2, ip
   274a8:	add	r3, r1, r3
   274ac:	adc	r3, r3, #0
   274b0:	cmp	r5, r3
   274b4:	cmpeq	r4, r2
   274b8:	bcc	280c8 <__assert_fail@plt+0x16cc4>
   274bc:	mov	r2, #5
   274c0:	movw	r1, #14164	; 0x3754
   274c4:	mov	r0, r8
   274c8:	movt	r1, #6
   274cc:	bl	11170 <dcgettext@plt>
   274d0:	add	r6, r6, r7
   274d4:	mov	r1, r0
   274d8:	mov	r0, #1
   274dc:	bl	1132c <__printf_chk@plt>
   274e0:	ldrd	r0, [sp, #64]	; 0x40
   274e4:	mov	r2, #1
   274e8:	bl	16c84 <__assert_fail@plt+0x5880>
   274ec:	mov	r0, #10
   274f0:	bl	112fc <putchar@plt>
   274f4:	mov	r2, #5
   274f8:	mov	r0, r8
   274fc:	movw	r1, #14180	; 0x3764
   27500:	movt	r1, #6
   27504:	bl	11170 <dcgettext@plt>
   27508:	mov	r2, #5
   2750c:	movw	r1, #14196	; 0x3774
   27510:	movt	r1, #6
   27514:	mov	sl, r0
   27518:	mov	r0, r8
   2751c:	bl	11170 <dcgettext@plt>
   27520:	mov	r2, #5
   27524:	movw	r1, #14204	; 0x377c
   27528:	movt	r1, #6
   2752c:	mov	r4, r0
   27530:	mov	r0, r8
   27534:	bl	11170 <dcgettext@plt>
   27538:	mov	r2, #5
   2753c:	movw	r1, #14208	; 0x3780
   27540:	movt	r1, #6
   27544:	mov	r5, r0
   27548:	mov	r0, r8
   2754c:	bl	11170 <dcgettext@plt>
   27550:	mov	r3, r4
   27554:	ldr	r4, [sp, #56]	; 0x38
   27558:	mov	r1, sl
   2755c:	str	r5, [sp, #4]
   27560:	add	lr, r4, #4
   27564:	str	lr, [sp]
   27568:	str	lr, [sp, #8]
   2756c:	add	ip, r4, r7
   27570:	ldr	lr, [sp, #48]	; 0x30
   27574:	add	r2, r4, #2
   27578:	str	ip, [sp, #100]	; 0x64
   2757c:	mla	sl, ip, lr, r6
   27580:	str	r0, [sp, #12]
   27584:	mov	r0, #1
   27588:	bl	1132c <__printf_chk@plt>
   2758c:	ldrd	r0, [sp, #48]	; 0x30
   27590:	orrs	r1, r0, r1
   27594:	beq	27154 <__assert_fail@plt+0x15d50>
   27598:	ldr	ip, [sp, #96]	; 0x60
   2759c:	cmp	ip, sl
   275a0:	beq	28278 <__assert_fail@plt+0x16e74>
   275a4:	ldrd	r4, [sp, #48]	; 0x30
   275a8:	str	r9, [sp, #104]	; 0x68
   275ac:	str	r8, [sp, #108]	; 0x6c
   275b0:	b	275c8 <__assert_fail@plt+0x161c4>
   275b4:	ldr	ip, [sp, #96]	; 0x60
   275b8:	subs	r4, r4, #1
   275bc:	sbc	r5, r5, #0
   275c0:	cmp	ip, sl
   275c4:	beq	28270 <__assert_fail@plt+0x16e6c>
   275c8:	ldr	r3, [fp]
   275cc:	mov	r0, r6
   275d0:	mov	r1, r7
   275d4:	blx	r3
   275d8:	ldr	r3, [fp]
   275dc:	mov	r8, r0
   275e0:	mov	r9, r1
   275e4:	add	r0, r6, r7
   275e8:	mov	r1, r7
   275ec:	blx	r3
   275f0:	ldr	ip, [sp, #56]	; 0x38
   275f4:	ldr	r3, [fp]
   275f8:	strd	r0, [sp, #48]	; 0x30
   275fc:	add	r0, r6, ip
   27600:	ldr	ip, [sp, #100]	; 0x64
   27604:	mov	r1, r7
   27608:	add	r6, r6, ip
   2760c:	blx	r3
   27610:	strd	r0, [sp, #64]	; 0x40
   27614:	movw	r1, #424	; 0x1a8
   27618:	mov	r0, #1
   2761c:	movt	r1, #6
   27620:	bl	1132c <__printf_chk@plt>
   27624:	mov	r2, #5
   27628:	mov	r1, r9
   2762c:	mov	r0, r8
   27630:	bl	16c84 <__assert_fail@plt+0x5880>
   27634:	movw	r1, #6840	; 0x1ab8
   27638:	mov	r0, #1
   2763c:	movt	r1, #6
   27640:	bl	1132c <__printf_chk@plt>
   27644:	mov	r2, #5
   27648:	ldrd	r0, [sp, #48]	; 0x30
   2764c:	bl	16c84 <__assert_fail@plt+0x5880>
   27650:	movw	r1, #6840	; 0x1ab8
   27654:	mov	r0, #1
   27658:	movt	r1, #6
   2765c:	bl	1132c <__printf_chk@plt>
   27660:	ldrd	r0, [sp, #64]	; 0x40
   27664:	mov	r2, #5
   27668:	bl	16c84 <__assert_fail@plt+0x5880>
   2766c:	mov	r2, sl
   27670:	movw	r1, #14268	; 0x37bc
   27674:	mov	r0, #1
   27678:	movt	r1, #6
   2767c:	bl	1132c <__printf_chk@plt>
   27680:	mov	r0, sl
   27684:	bl	1129c <strlen@plt>
   27688:	cmp	r5, #0
   2768c:	cmpeq	r4, #1
   27690:	add	r0, r0, #1
   27694:	add	sl, sl, r0
   27698:	bne	275b4 <__assert_fail@plt+0x161b0>
   2769c:	ldr	r9, [sp, #104]	; 0x68
   276a0:	b	27154 <__assert_fail@plt+0x15d50>
   276a4:	cmp	r6, #1
   276a8:	beq	2792c <__assert_fail@plt+0x16528>
   276ac:	cmp	r6, #5
   276b0:	bne	28040 <__assert_fail@plt+0x16c3c>
   276b4:	ldr	ip, [sp, #36]	; 0x24
   276b8:	mov	r2, r4
   276bc:	mov	r3, r5
   276c0:	movw	r1, #12920	; 0x3278
   276c4:	mov	r0, #1
   276c8:	movt	r1, #6
   276cc:	and	ip, ip, r0
   276d0:	str	ip, [sp, #36]	; 0x24
   276d4:	bl	1132c <__printf_chk@plt>
   276d8:	b	26f9c <__assert_fail@plt+0x15b98>
   276dc:	ldr	r0, [sp, #44]	; 0x2c
   276e0:	add	sp, sp, #116	; 0x74
   276e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276e8:	movw	r1, #12240	; 0x2fd0
   276ec:	mov	r2, #5
   276f0:	movt	r1, #6
   276f4:	mov	r0, #0
   276f8:	bl	11170 <dcgettext@plt>
   276fc:	b	273c0 <__assert_fail@plt+0x15fbc>
   27700:	movw	r1, #12288	; 0x3000
   27704:	mov	r2, #5
   27708:	movt	r1, #6
   2770c:	mov	r0, #0
   27710:	bl	11170 <dcgettext@plt>
   27714:	b	273c0 <__assert_fail@plt+0x15fbc>
   27718:	movw	r1, #12332	; 0x302c
   2771c:	mov	r2, #5
   27720:	movt	r1, #6
   27724:	mov	r0, #0
   27728:	bl	11170 <dcgettext@plt>
   2772c:	b	273c0 <__assert_fail@plt+0x15fbc>
   27730:	movw	r1, #12204	; 0x2fac
   27734:	mov	r2, #5
   27738:	movt	r1, #6
   2773c:	mov	r0, #0
   27740:	bl	11170 <dcgettext@plt>
   27744:	b	273c0 <__assert_fail@plt+0x15fbc>
   27748:	cmp	r6, #103	; 0x67
   2774c:	beq	28014 <__assert_fail@plt+0x16c10>
   27750:	cmp	r6, #104	; 0x68
   27754:	movweq	r1, #13792	; 0x35e0
   27758:	moveq	r2, #5
   2775c:	movteq	r1, #6
   27760:	bne	2717c <__assert_fail@plt+0x15d78>
   27764:	ldr	r4, [sp, #36]	; 0x24
   27768:	and	r4, r4, #1
   2776c:	str	r4, [sp, #36]	; 0x24
   27770:	bl	11170 <dcgettext@plt>
   27774:	mov	r2, r5
   27778:	mov	r1, r0
   2777c:	mov	r0, #1
   27780:	bl	1132c <__printf_chk@plt>
   27784:	b	26f9c <__assert_fail@plt+0x15b98>
   27788:	mov	r2, #5
   2778c:	movw	r1, #13896	; 0x3648
   27790:	movt	r1, #6
   27794:	bl	11170 <dcgettext@plt>
   27798:	mov	r1, r0
   2779c:	mov	r0, #1
   277a0:	bl	1132c <__printf_chk@plt>
   277a4:	cmp	r4, #0
   277a8:	beq	277dc <__assert_fail@plt+0x163d8>
   277ac:	ldrb	r0, [r5]
   277b0:	cmp	r0, #0
   277b4:	beq	277dc <__assert_fail@plt+0x163d8>
   277b8:	sub	r4, r4, #1
   277bc:	add	r4, r5, r4
   277c0:	b	277d0 <__assert_fail@plt+0x163cc>
   277c4:	ldrb	r0, [r5, #1]!
   277c8:	cmp	r0, #0
   277cc:	beq	277dc <__assert_fail@plt+0x163d8>
   277d0:	bl	112fc <putchar@plt>
   277d4:	cmp	r5, r4
   277d8:	bne	277c4 <__assert_fail@plt+0x163c0>
   277dc:	ldr	ip, [sp, #36]	; 0x24
   277e0:	mov	r0, #10
   277e4:	and	ip, ip, #1
   277e8:	str	ip, [sp, #36]	; 0x24
   277ec:	bl	112fc <putchar@plt>
   277f0:	b	26f9c <__assert_fail@plt+0x15b98>
   277f4:	cmp	r3, #43	; 0x2b
   277f8:	beq	27808 <__assert_fail@plt+0x16404>
   277fc:	movw	r2, #36902	; 0x9026
   27800:	cmp	r3, r2
   27804:	bne	273fc <__assert_fail@plt+0x15ff8>
   27808:	cmp	r6, #32
   2780c:	beq	27dd8 <__assert_fail@plt+0x169d4>
   27810:	cmp	r6, #34	; 0x22
   27814:	beq	2740c <__assert_fail@plt+0x16008>
   27818:	mov	r1, #64	; 0x40
   2781c:	sub	r0, r6, #32
   27820:	movw	r2, #12816	; 0x3210
   27824:	str	r0, [sp, #4]
   27828:	movt	r2, #6
   2782c:	mov	r3, r1
   27830:	str	r2, [sp]
   27834:	mov	r2, #1
   27838:	ldr	r0, [pc, #1628]	; 27e9c <__assert_fail@plt+0x16a98>
   2783c:	bl	113f8 <__snprintf_chk@plt>
   27840:	ldr	r0, [pc, #1620]	; 27e9c <__assert_fail@plt+0x16a98>
   27844:	b	273c0 <__assert_fail@plt+0x15fbc>
   27848:	cmp	r6, #1
   2784c:	bne	2717c <__assert_fail@plt+0x15d78>
   27850:	cmp	r4, #36	; 0x24
   27854:	bls	280ec <__assert_fail@plt+0x16ce8>
   27858:	add	r4, r5, #34	; 0x22
   2785c:	ldr	ip, [sp, #36]	; 0x24
   27860:	mov	r0, r4
   27864:	and	ip, ip, #1
   27868:	str	ip, [sp, #36]	; 0x24
   2786c:	bl	1129c <strlen@plt>
   27870:	mov	r2, #5
   27874:	movw	r1, #13364	; 0x3434
   27878:	movt	r1, #6
   2787c:	mov	r7, r0
   27880:	mov	r0, r8
   27884:	bl	11170 <dcgettext@plt>
   27888:	mov	r2, r5
   2788c:	mov	r1, r0
   27890:	mov	r0, r6
   27894:	bl	1132c <__printf_chk@plt>
   27898:	mov	r0, r8
   2789c:	mov	r2, #5
   278a0:	movw	r1, #13392	; 0x3450
   278a4:	movt	r1, #6
   278a8:	bl	11170 <dcgettext@plt>
   278ac:	add	r2, r5, #17
   278b0:	mov	r1, r0
   278b4:	mov	r0, r6
   278b8:	bl	1132c <__printf_chk@plt>
   278bc:	mov	r0, r8
   278c0:	mov	r2, #5
   278c4:	movw	r1, #13420	; 0x346c
   278c8:	movt	r1, #6
   278cc:	bl	11170 <dcgettext@plt>
   278d0:	mov	r2, r4
   278d4:	mov	r1, r0
   278d8:	mov	r0, r6
   278dc:	bl	1132c <__printf_chk@plt>
   278e0:	mov	r0, r8
   278e4:	mov	r2, #5
   278e8:	movw	r1, #13448	; 0x3488
   278ec:	movt	r1, #6
   278f0:	bl	11170 <dcgettext@plt>
   278f4:	add	r2, r7, #35	; 0x23
   278f8:	add	r2, r5, r2
   278fc:	mov	r1, r0
   27900:	mov	r0, r6
   27904:	bl	1132c <__printf_chk@plt>
   27908:	b	26f9c <__assert_fail@plt+0x15b98>
   2790c:	mov	r2, #5
   27910:	movw	r1, #14064	; 0x36f0
   27914:	movt	r1, #6
   27918:	bl	11170 <dcgettext@plt>
   2791c:	mov	r1, r0
   27920:	mov	r0, #1
   27924:	bl	1132c <__printf_chk@plt>
   27928:	b	2715c <__assert_fail@plt+0x15d58>
   2792c:	ldr	r3, [fp]
   27930:	mov	r0, r5
   27934:	mov	r1, #4
   27938:	mov	sl, #100	; 0x64
   2793c:	blx	r3
   27940:	ldr	ip, [sp, #80]	; 0x50
   27944:	umull	ip, lr, ip, r0
   27948:	mov	r1, r0
   2794c:	ldr	r0, [sp, #76]	; 0x4c
   27950:	lsr	lr, lr, #13
   27954:	umull	r0, ip, r0, lr
   27958:	lsr	ip, ip, #5
   2795c:	mls	ip, sl, ip, lr
   27960:	cmp	ip, #0
   27964:	beq	2829c <__assert_fail@plt+0x16e98>
   27968:	ldr	r2, [sp, #88]	; 0x58
   2796c:	mov	r0, r6
   27970:	ldr	r6, [sp, #92]	; 0x5c
   27974:	mov	r8, #26
   27978:	cmp	ip, r8
   2797c:	umull	r2, r3, r2, r1
   27980:	mov	r2, r4
   27984:	ldr	r4, [sp, #36]	; 0x24
   27988:	umull	r6, r7, r6, lr
   2798c:	and	r4, r4, #1
   27990:	str	r4, [sp, #36]	; 0x24
   27994:	lsr	r4, r3, #18
   27998:	ldr	r3, [sp, #76]	; 0x4c
   2799c:	umull	r3, r6, r3, r4
   279a0:	ldr	r3, [sp, #84]	; 0x54
   279a4:	lsr	r7, r7, #3
   279a8:	umull	r3, r5, r3, r1
   279ac:	lsr	r6, r6, #5
   279b0:	mls	lr, r8, r7, lr
   279b4:	mov	r3, r1
   279b8:	mls	r6, sl, r6, r4
   279bc:	movw	r4, #25084	; 0x61fc
   279c0:	movt	r4, #7
   279c4:	add	lr, lr, #65	; 0x41
   279c8:	lsr	r5, r5, #25
   279cc:	movw	r1, #55444	; 0xd894
   279d0:	str	lr, [sp, #12]
   279d4:	movt	r1, #5
   279d8:	str	r5, [sp]
   279dc:	movls	r1, r4
   279e0:	str	r6, [sp, #4]
   279e4:	str	r1, [sp, #8]
   279e8:	movw	r1, #12840	; 0x3228
   279ec:	movt	r1, #6
   279f0:	bl	1132c <__printf_chk@plt>
   279f4:	b	26f9c <__assert_fail@plt+0x15b98>
   279f8:	movw	r1, #12644	; 0x3164
   279fc:	mov	r2, #5
   27a00:	movt	r1, #6
   27a04:	mov	r0, #0
   27a08:	bl	11170 <dcgettext@plt>
   27a0c:	b	273c0 <__assert_fail@plt+0x15fbc>
   27a10:	movw	r1, #12684	; 0x318c
   27a14:	mov	r2, #5
   27a18:	movt	r1, #6
   27a1c:	mov	r0, #0
   27a20:	bl	11170 <dcgettext@plt>
   27a24:	b	273c0 <__assert_fail@plt+0x15fbc>
   27a28:	movw	r1, #12376	; 0x3058
   27a2c:	mov	r2, #5
   27a30:	movt	r1, #6
   27a34:	mov	r0, #0
   27a38:	bl	11170 <dcgettext@plt>
   27a3c:	b	273c0 <__assert_fail@plt+0x15fbc>
   27a40:	movw	r1, #12408	; 0x3078
   27a44:	mov	r2, #5
   27a48:	movt	r1, #6
   27a4c:	mov	r0, #0
   27a50:	bl	11170 <dcgettext@plt>
   27a54:	b	273c0 <__assert_fail@plt+0x15fbc>
   27a58:	movw	r1, #12440	; 0x3098
   27a5c:	mov	r2, #5
   27a60:	movt	r1, #6
   27a64:	mov	r0, #0
   27a68:	bl	11170 <dcgettext@plt>
   27a6c:	b	273c0 <__assert_fail@plt+0x15fbc>
   27a70:	movw	r1, #12472	; 0x30b8
   27a74:	mov	r2, #5
   27a78:	movt	r1, #6
   27a7c:	mov	r0, #0
   27a80:	bl	11170 <dcgettext@plt>
   27a84:	b	273c0 <__assert_fail@plt+0x15fbc>
   27a88:	movw	r1, #12504	; 0x30d8
   27a8c:	mov	r2, #5
   27a90:	movt	r1, #6
   27a94:	mov	r0, #0
   27a98:	bl	11170 <dcgettext@plt>
   27a9c:	b	273c0 <__assert_fail@plt+0x15fbc>
   27aa0:	movw	r1, #12540	; 0x30fc
   27aa4:	mov	r2, #5
   27aa8:	movt	r1, #6
   27aac:	mov	r0, #0
   27ab0:	bl	11170 <dcgettext@plt>
   27ab4:	b	273c0 <__assert_fail@plt+0x15fbc>
   27ab8:	movw	r1, #12572	; 0x311c
   27abc:	mov	r2, #5
   27ac0:	movt	r1, #6
   27ac4:	mov	r0, #0
   27ac8:	bl	11170 <dcgettext@plt>
   27acc:	b	273c0 <__assert_fail@plt+0x15fbc>
   27ad0:	movw	r1, #12608	; 0x3140
   27ad4:	mov	r2, #5
   27ad8:	movt	r1, #6
   27adc:	mov	r0, #0
   27ae0:	bl	11170 <dcgettext@plt>
   27ae4:	b	273c0 <__assert_fail@plt+0x15fbc>
   27ae8:	mov	r2, #5
   27aec:	movw	r1, #57528	; 0xe0b8
   27af0:	mov	r0, #0
   27af4:	movt	r1, #5
   27af8:	bl	11170 <dcgettext@plt>
   27afc:	mov	r1, #64	; 0x40
   27b00:	str	r6, [sp, #4]
   27b04:	mov	r3, r1
   27b08:	mov	r2, #1
   27b0c:	str	r0, [sp]
   27b10:	ldr	r0, [pc, #904]	; 27ea0 <__assert_fail@plt+0x16a9c>
   27b14:	bl	113f8 <__snprintf_chk@plt>
   27b18:	ldr	r0, [pc, #896]	; 27ea0 <__assert_fail@plt+0x16a9c>
   27b1c:	b	273c0 <__assert_fail@plt+0x15fbc>
   27b20:	mov	r2, #5
   27b24:	movw	r1, #13812	; 0x35f4
   27b28:	movt	r1, #6
   27b2c:	bl	11170 <dcgettext@plt>
   27b30:	mov	r1, r0
   27b34:	mov	r0, #1
   27b38:	bl	1132c <__printf_chk@plt>
   27b3c:	cmp	r4, #0
   27b40:	addne	r4, r5, r4
   27b44:	beq	277dc <__assert_fail@plt+0x163d8>
   27b48:	ldrb	r2, [r5], #1
   27b4c:	movw	r1, #13828	; 0x3604
   27b50:	mov	r0, #1
   27b54:	movt	r1, #6
   27b58:	bl	1132c <__printf_chk@plt>
   27b5c:	cmp	r5, r4
   27b60:	bne	27b48 <__assert_fail@plt+0x16744>
   27b64:	b	277dc <__assert_fail@plt+0x163d8>
   27b68:	cmp	r4, #15
   27b6c:	bls	28068 <__assert_fail@plt+0x16c64>
   27b70:	mov	r0, r5
   27b74:	ldr	r3, [fp]
   27b78:	mov	r1, #4
   27b7c:	blx	r3
   27b80:	ldr	r3, [fp]
   27b84:	mov	r1, #4
   27b88:	mov	r8, r0
   27b8c:	add	r0, r5, #4
   27b90:	blx	r3
   27b94:	ldr	r3, [fp]
   27b98:	mov	r1, #4
   27b9c:	mov	r4, r0
   27ba0:	add	r0, r5, #8
   27ba4:	blx	r3
   27ba8:	ldr	r3, [fp]
   27bac:	mov	r1, #4
   27bb0:	mov	r6, r0
   27bb4:	add	r0, r5, #12
   27bb8:	blx	r3
   27bbc:	cmp	r8, #6
   27bc0:	mov	r2, #5
   27bc4:	movw	r1, #13864	; 0x3628
   27bc8:	movwls	r3, #43684	; 0xaaa4
   27bcc:	movt	r1, #6
   27bd0:	movwhi	r5, #11792	; 0x2e10
   27bd4:	movthi	r5, #6
   27bd8:	movtls	r3, #5
   27bdc:	mov	r7, r0
   27be0:	addls	r3, r3, r8, lsl #2
   27be4:	mov	r0, #0
   27be8:	ldrls	r5, [r3, #3768]	; 0xeb8
   27bec:	bl	11170 <dcgettext@plt>
   27bf0:	stm	sp, {r6, r7}
   27bf4:	mov	r3, r4
   27bf8:	ldr	r6, [sp, #36]	; 0x24
   27bfc:	mov	r2, r5
   27c00:	mov	r1, r0
   27c04:	mov	r0, #1
   27c08:	and	r6, r6, r0
   27c0c:	str	r6, [sp, #36]	; 0x24
   27c10:	bl	1132c <__printf_chk@plt>
   27c14:	b	26f9c <__assert_fail@plt+0x15b98>
   27c18:	sub	r3, r6, #1
   27c1c:	cmp	r3, #107	; 0x6b
   27c20:	ldrls	pc, [pc, r3, lsl #2]
   27c24:	b	2821c <__assert_fail@plt+0x16e18>
   27c28:	andeq	r8, r2, ip, asr r1
   27c2c:	andeq	r8, r2, r4, asr #2
   27c30:	andeq	r8, r2, ip, lsr #2
   27c34:	andeq	r8, r2, r0, lsl r2
   27c38:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   27c3c:	andeq	r8, r2, r0, ror #3
   27c40:	andeq	r8, r2, ip, lsl r2
   27c44:	andeq	r8, r2, ip, lsl r2
   27c48:	andeq	r8, r2, ip, lsl r2
   27c4c:	andeq	r8, r2, ip, lsl r2
   27c50:	andeq	r8, r2, ip, lsl r2
   27c54:	andeq	r8, r2, ip, lsl r2
   27c58:	andeq	r8, r2, ip, lsl r2
   27c5c:	andeq	r8, r2, ip, lsl r2
   27c60:	andeq	r8, r2, ip, lsl r2
   27c64:	andeq	r8, r2, ip, lsl r2
   27c68:	andeq	r8, r2, ip, lsl r2
   27c6c:	andeq	r8, r2, ip, lsl r2
   27c70:	andeq	r8, r2, ip, lsl r2
   27c74:	andeq	r8, r2, ip, lsl r2
   27c78:	andeq	r8, r2, ip, lsl r2
   27c7c:	andeq	r8, r2, ip, lsl r2
   27c80:	andeq	r8, r2, ip, lsl r2
   27c84:	andeq	r8, r2, ip, lsl r2
   27c88:	andeq	r8, r2, ip, lsl r2
   27c8c:	andeq	r8, r2, ip, lsl r2
   27c90:	andeq	r8, r2, ip, lsl r2
   27c94:	andeq	r8, r2, ip, lsl r2
   27c98:	andeq	r8, r2, ip, lsl r2
   27c9c:	andeq	r8, r2, ip, lsl r2
   27ca0:	andeq	r8, r2, ip, lsl r2
   27ca4:	andeq	r8, r2, ip, lsl r2
   27ca8:	andeq	r8, r2, ip, lsl r2
   27cac:	andeq	r8, r2, ip, lsl r2
   27cb0:	andeq	r8, r2, ip, lsl r2
   27cb4:	andeq	r8, r2, ip, lsl r2
   27cb8:	andeq	r8, r2, ip, lsl r2
   27cbc:	andeq	r8, r2, ip, lsl r2
   27cc0:	andeq	r8, r2, ip, lsl r2
   27cc4:	andeq	r8, r2, ip, lsl r2
   27cc8:	andeq	r8, r2, ip, lsl r2
   27ccc:	andeq	r8, r2, ip, lsl r2
   27cd0:	andeq	r8, r2, ip, lsl r2
   27cd4:	andeq	r8, r2, ip, lsl r2
   27cd8:	andeq	r8, r2, ip, lsl r2
   27cdc:	andeq	r8, r2, ip, lsl r2
   27ce0:	andeq	r8, r2, ip, lsl r2
   27ce4:	andeq	r8, r2, ip, lsl r2
   27ce8:	andeq	r8, r2, ip, lsl r2
   27cec:	andeq	r8, r2, ip, lsl r2
   27cf0:	andeq	r8, r2, ip, lsl r2
   27cf4:	andeq	r8, r2, ip, lsl r2
   27cf8:	andeq	r8, r2, ip, lsl r2
   27cfc:	andeq	r8, r2, ip, lsl r2
   27d00:	andeq	r8, r2, ip, lsl r2
   27d04:	andeq	r8, r2, ip, lsl r2
   27d08:	andeq	r8, r2, ip, lsl r2
   27d0c:	andeq	r8, r2, ip, lsl r2
   27d10:	andeq	r8, r2, ip, lsl r2
   27d14:	andeq	r8, r2, ip, lsl r2
   27d18:	andeq	r8, r2, ip, lsl r2
   27d1c:	andeq	r8, r2, ip, lsl r2
   27d20:	andeq	r8, r2, ip, lsl r2
   27d24:	andeq	r8, r2, ip, lsl r2
   27d28:	andeq	r8, r2, ip, lsl r2
   27d2c:	andeq	r8, r2, ip, lsl r2
   27d30:	andeq	r8, r2, ip, lsl r2
   27d34:	andeq	r8, r2, ip, lsl r2
   27d38:	andeq	r8, r2, ip, lsl r2
   27d3c:	andeq	r8, r2, ip, lsl r2
   27d40:	andeq	r8, r2, ip, lsl r2
   27d44:	andeq	r8, r2, ip, lsl r2
   27d48:	andeq	r8, r2, ip, lsl r2
   27d4c:	andeq	r8, r2, ip, lsl r2
   27d50:	andeq	r8, r2, ip, lsl r2
   27d54:	andeq	r8, r2, ip, lsl r2
   27d58:	andeq	r8, r2, ip, lsl r2
   27d5c:	andeq	r8, r2, ip, lsl r2
   27d60:	andeq	r8, r2, ip, lsl r2
   27d64:	andeq	r8, r2, ip, lsl r2
   27d68:	andeq	r8, r2, ip, lsl r2
   27d6c:	andeq	r8, r2, ip, lsl r2
   27d70:	andeq	r8, r2, ip, lsl r2
   27d74:	andeq	r8, r2, ip, lsl r2
   27d78:	andeq	r8, r2, ip, lsl r2
   27d7c:	andeq	r8, r2, ip, lsl r2
   27d80:	andeq	r8, r2, ip, lsl r2
   27d84:	andeq	r8, r2, ip, lsl r2
   27d88:	andeq	r8, r2, ip, lsl r2
   27d8c:	andeq	r8, r2, ip, lsl r2
   27d90:	andeq	r8, r2, ip, lsl r2
   27d94:	andeq	r8, r2, ip, lsl r2
   27d98:	andeq	r8, r2, ip, lsl r2
   27d9c:	andeq	r8, r2, ip, lsl r2
   27da0:	andeq	r8, r2, ip, lsl r2
   27da4:	andeq	r8, r2, ip, lsl r2
   27da8:	andeq	r8, r2, ip, lsl r2
   27dac:	andeq	r8, r2, ip, lsl r2
   27db0:	andeq	r8, r2, ip, lsl r2
   27db4:	andeq	r8, r2, ip, lsl r2
   27db8:	ldrdeq	r8, [r2], -r4
   27dbc:			; <UNDEFINED> instruction: 0x000281bc
   27dc0:	andeq	r8, r2, r4, lsr #3
   27dc4:	andeq	r8, r2, ip, lsl #3
   27dc8:	andeq	r8, r2, r4, ror r1
   27dcc:	andeq	r8, r2, r4, lsl r1
   27dd0:	andeq	r8, r2, r8, lsl #2
   27dd4:	strdeq	r8, [r2], -ip
   27dd8:	movw	r1, #12756	; 0x31d4
   27ddc:	mov	r2, #5
   27de0:	movt	r1, #6
   27de4:	mov	r0, #0
   27de8:	bl	11170 <dcgettext@plt>
   27dec:	b	273c0 <__assert_fail@plt+0x15fbc>
   27df0:	mov	r2, #5
   27df4:	movw	r1, #11928	; 0x2e98
   27df8:	mov	r0, #0
   27dfc:	movt	r1, #6
   27e00:	bl	11170 <dcgettext@plt>
   27e04:	mov	r1, r9
   27e08:	bl	4b9ec <warn@@Base>
   27e0c:	b	27090 <__assert_fail@plt+0x15c8c>
   27e10:	mov	r2, #5
   27e14:	movw	r1, #57528	; 0xe0b8
   27e18:	movt	r1, #5
   27e1c:	bl	11170 <dcgettext@plt>
   27e20:	mov	r1, #64	; 0x40
   27e24:	str	r6, [sp, #4]
   27e28:	mov	r3, r1
   27e2c:	mov	r2, #1
   27e30:	str	r0, [sp]
   27e34:	ldr	r0, [pc, #96]	; 27e9c <__assert_fail@plt+0x16a98>
   27e38:	bl	113f8 <__snprintf_chk@plt>
   27e3c:	ldr	r0, [pc, #88]	; 27e9c <__assert_fail@plt+0x16a98>
   27e40:	b	273c0 <__assert_fail@plt+0x15fbc>
   27e44:	ldr	ip, [sp, #36]	; 0x24
   27e48:	mov	r2, #5
   27e4c:	movw	r1, #13516	; 0x34cc
   27e50:	movt	r1, #6
   27e54:	and	ip, ip, #1
   27e58:	str	ip, [sp, #36]	; 0x24
   27e5c:	bl	11170 <dcgettext@plt>
   27e60:	mov	r1, r0
   27e64:	mov	r0, #1
   27e68:	bl	1132c <__printf_chk@plt>
   27e6c:	ldr	r3, [fp]
   27e70:	mov	r0, r5
   27e74:	mov	r1, #8
   27e78:	blx	r3
   27e7c:	mov	r2, r0
   27e80:	mov	r3, r1
   27e84:	mov	r0, #1
   27e88:	movw	r1, #13544	; 0x34e8
   27e8c:	movt	r1, #6
   27e90:	bl	1132c <__printf_chk@plt>
   27e94:	b	26f9c <__assert_fail@plt+0x15b98>
   27e98:	andeq	r5, r9, r0, ror #22
   27e9c:	andeq	r5, r9, r0, ror #21
   27ea0:	andeq	r5, r9, r0, lsr #21
   27ea4:	andeq	r5, r9, r0, lsr #22
   27ea8:	ldr	ip, [sp, #36]	; 0x24
   27eac:	mov	r2, #5
   27eb0:	movw	r1, #13588	; 0x3514
   27eb4:	movt	r1, #6
   27eb8:	and	ip, ip, #1
   27ebc:	str	ip, [sp, #36]	; 0x24
   27ec0:	bl	11170 <dcgettext@plt>
   27ec4:	ldr	r3, [fp]
   27ec8:	mov	r1, #4
   27ecc:	mov	r6, r0
   27ed0:	mov	r0, r5
   27ed4:	blx	r3
   27ed8:	ldr	r3, [fp]
   27edc:	mov	r1, #4
   27ee0:	mov	r4, r0
   27ee4:	add	r0, r5, #4
   27ee8:	blx	r3
   27eec:	mov	r1, r6
   27ef0:	mov	r2, r4
   27ef4:	mov	r3, r0
   27ef8:	mov	r0, #1
   27efc:	bl	1132c <__printf_chk@plt>
   27f00:	mov	r2, #5
   27f04:	mov	r0, r8
   27f08:	movw	r1, #13620	; 0x3534
   27f0c:	movt	r1, #6
   27f10:	bl	11170 <dcgettext@plt>
   27f14:	mov	r1, r0
   27f18:	mov	r0, #1
   27f1c:	bl	1132c <__printf_chk@plt>
   27f20:	ldr	r3, [fp]
   27f24:	add	r0, r5, #8
   27f28:	mov	r1, #8
   27f2c:	blx	r3
   27f30:	bl	183ac <__assert_fail@plt+0x6fa8>
   27f34:	mov	r2, #5
   27f38:	mov	r0, r8
   27f3c:	movw	r1, #13644	; 0x354c
   27f40:	movt	r1, #6
   27f44:	bl	11170 <dcgettext@plt>
   27f48:	mov	r1, r0
   27f4c:	mov	r0, #1
   27f50:	bl	1132c <__printf_chk@plt>
   27f54:	ldr	r3, [fp]
   27f58:	add	r0, r5, #16
   27f5c:	mov	r1, #8
   27f60:	blx	r3
   27f64:	mov	r3, r1
   27f68:	mov	r2, r0
   27f6c:	movw	r1, #13544	; 0x34e8
   27f70:	mov	r0, #1
   27f74:	movt	r1, #6
   27f78:	bl	1132c <__printf_chk@plt>
   27f7c:	mov	r2, #5
   27f80:	mov	r0, r8
   27f84:	movw	r1, #13664	; 0x3560
   27f88:	movt	r1, #6
   27f8c:	bl	11170 <dcgettext@plt>
   27f90:	ldr	r3, [fp]
   27f94:	mov	r1, #4
   27f98:	mov	r4, r0
   27f9c:	add	r0, r5, #24
   27fa0:	blx	r3
   27fa4:	mov	r1, r4
   27fa8:	mov	r2, r0
   27fac:	mov	r0, #1
   27fb0:	bl	1132c <__printf_chk@plt>
   27fb4:	mov	r0, r8
   27fb8:	mov	r2, #5
   27fbc:	movw	r1, #13692	; 0x357c
   27fc0:	movt	r1, #6
   27fc4:	bl	11170 <dcgettext@plt>
   27fc8:	add	r2, r5, #32
   27fcc:	mov	r1, r0
   27fd0:	mov	r0, #1
   27fd4:	bl	1132c <__printf_chk@plt>
   27fd8:	b	26f9c <__assert_fail@plt+0x15b98>
   27fdc:	ldr	r6, [sp, #36]	; 0x24
   27fe0:	movw	r1, #13496	; 0x34b8
   27fe4:	mov	r2, #5
   27fe8:	movt	r1, #6
   27fec:	and	r6, r6, #1
   27ff0:	str	r6, [sp, #36]	; 0x24
   27ff4:	b	27770 <__assert_fail@plt+0x1636c>
   27ff8:	ldr	r6, [sp, #36]	; 0x24
   27ffc:	movw	r1, #13736	; 0x35a8
   28000:	mov	r2, #5
   28004:	movt	r1, #6
   28008:	and	r6, r6, #1
   2800c:	str	r6, [sp, #36]	; 0x24
   28010:	b	27770 <__assert_fail@plt+0x1636c>
   28014:	ldr	ip, [sp, #36]	; 0x24
   28018:	movw	r1, #13772	; 0x35cc
   2801c:	mov	r2, #5
   28020:	movt	r1, #6
   28024:	and	ip, ip, #1
   28028:	str	ip, [sp, #36]	; 0x24
   2802c:	b	27770 <__assert_fail@plt+0x1636c>
   28030:	movw	r1, #13716	; 0x3594
   28034:	mov	r2, #5
   28038:	movt	r1, #6
   2803c:	b	27764 <__assert_fail@plt+0x16360>
   28040:	mov	r2, r4
   28044:	ldr	r4, [sp, #36]	; 0x24
   28048:	mov	r3, r6
   2804c:	movw	r1, #12952	; 0x3298
   28050:	mov	r0, #1
   28054:	movt	r1, #6
   28058:	and	r4, r4, r0
   2805c:	str	r4, [sp, #36]	; 0x24
   28060:	bl	1132c <__printf_chk@plt>
   28064:	b	26f9c <__assert_fail@plt+0x15b98>
   28068:	movw	r1, #13836	; 0x360c
   2806c:	movt	r1, #6
   28070:	mov	r2, #5
   28074:	ldr	r4, [sp, #36]	; 0x24
   28078:	and	r4, r4, #1
   2807c:	str	r4, [sp, #36]	; 0x24
   28080:	bl	11170 <dcgettext@plt>
   28084:	mov	r1, r0
   28088:	mov	r0, r6
   2808c:	bl	1132c <__printf_chk@plt>
   28090:	b	26f9c <__assert_fail@plt+0x15b98>
   28094:	mov	r2, #5
   28098:	movw	r1, #14020	; 0x36c4
   2809c:	movt	r1, #6
   280a0:	bl	11170 <dcgettext@plt>
   280a4:	mov	r1, r0
   280a8:	mov	r0, #1
   280ac:	bl	1132c <__printf_chk@plt>
   280b0:	b	2715c <__assert_fail@plt+0x15d58>
   280b4:	movw	r1, #13300	; 0x33f4
   280b8:	mov	r2, #5
   280bc:	movt	r1, #6
   280c0:	bl	11170 <dcgettext@plt>
   280c4:	b	273c0 <__assert_fail@plt+0x15fbc>
   280c8:	movw	r1, #14108	; 0x371c
   280cc:	movt	r1, #6
   280d0:	mov	r0, r8
   280d4:	mov	r2, #5
   280d8:	bl	11170 <dcgettext@plt>
   280dc:	mov	r1, r0
   280e0:	mov	r0, #1
   280e4:	bl	1132c <__printf_chk@plt>
   280e8:	b	2715c <__assert_fail@plt+0x15d58>
   280ec:	movw	r1, #13476	; 0x34a4
   280f0:	mov	r2, #5
   280f4:	movt	r1, #6
   280f8:	b	28074 <__assert_fail@plt+0x16c70>
   280fc:	movw	r0, #11764	; 0x2df4
   28100:	movt	r0, #6
   28104:	b	273c0 <__assert_fail@plt+0x15fbc>
   28108:	movw	r0, #11748	; 0x2de4
   2810c:	movt	r0, #6
   28110:	b	273c0 <__assert_fail@plt+0x15fbc>
   28114:	movw	r1, #13260	; 0x33cc
   28118:	mov	r2, #5
   2811c:	movt	r1, #6
   28120:	mov	r0, #0
   28124:	bl	11170 <dcgettext@plt>
   28128:	b	273c0 <__assert_fail@plt+0x15fbc>
   2812c:	movw	r1, #13072	; 0x3310
   28130:	mov	r2, #5
   28134:	movt	r1, #6
   28138:	mov	r0, #0
   2813c:	bl	11170 <dcgettext@plt>
   28140:	b	273c0 <__assert_fail@plt+0x15fbc>
   28144:	movw	r1, #13044	; 0x32f4
   28148:	mov	r2, #5
   2814c:	movt	r1, #6
   28150:	mov	r0, #0
   28154:	bl	11170 <dcgettext@plt>
   28158:	b	273c0 <__assert_fail@plt+0x15fbc>
   2815c:	movw	r1, #13016	; 0x32d8
   28160:	mov	r2, #5
   28164:	movt	r1, #6
   28168:	mov	r0, #0
   2816c:	bl	11170 <dcgettext@plt>
   28170:	b	273c0 <__assert_fail@plt+0x15fbc>
   28174:	movw	r1, #13232	; 0x33b0
   28178:	mov	r2, #5
   2817c:	movt	r1, #6
   28180:	mov	r0, #0
   28184:	bl	11170 <dcgettext@plt>
   28188:	b	273c0 <__assert_fail@plt+0x15fbc>
   2818c:	movw	r1, #13208	; 0x3398
   28190:	mov	r2, #5
   28194:	movt	r1, #6
   28198:	mov	r0, #0
   2819c:	bl	11170 <dcgettext@plt>
   281a0:	b	273c0 <__assert_fail@plt+0x15fbc>
   281a4:	movw	r1, #13184	; 0x3380
   281a8:	mov	r2, #5
   281ac:	movt	r1, #6
   281b0:	mov	r0, #0
   281b4:	bl	11170 <dcgettext@plt>
   281b8:	b	273c0 <__assert_fail@plt+0x15fbc>
   281bc:	movw	r1, #13156	; 0x3364
   281c0:	mov	r2, #5
   281c4:	movt	r1, #6
   281c8:	mov	r0, #0
   281cc:	bl	11170 <dcgettext@plt>
   281d0:	b	273c0 <__assert_fail@plt+0x15fbc>
   281d4:	movw	r0, #11732	; 0x2dd4
   281d8:	movt	r0, #6
   281dc:	b	273c0 <__assert_fail@plt+0x15fbc>
   281e0:	movw	r1, #13132	; 0x334c
   281e4:	mov	r2, #5
   281e8:	movt	r1, #6
   281ec:	mov	r0, #0
   281f0:	bl	11170 <dcgettext@plt>
   281f4:	b	273c0 <__assert_fail@plt+0x15fbc>
   281f8:	movw	r1, #13100	; 0x332c
   281fc:	mov	r2, #5
   28200:	movt	r1, #6
   28204:	mov	r0, #0
   28208:	bl	11170 <dcgettext@plt>
   2820c:	b	273c0 <__assert_fail@plt+0x15fbc>
   28210:	movw	r0, #11716	; 0x2dc4
   28214:	movt	r0, #6
   28218:	b	273c0 <__assert_fail@plt+0x15fbc>
   2821c:	mov	r2, #5
   28220:	movw	r1, #57528	; 0xe0b8
   28224:	mov	r0, #0
   28228:	movt	r1, #5
   2822c:	bl	11170 <dcgettext@plt>
   28230:	mov	r1, #64	; 0x40
   28234:	str	r6, [sp, #4]
   28238:	mov	r3, r1
   2823c:	mov	r2, #1
   28240:	str	r0, [sp]
   28244:	ldr	r0, [pc, #-936]	; 27ea4 <__assert_fail@plt+0x16aa0>
   28248:	bl	113f8 <__snprintf_chk@plt>
   2824c:	ldr	r0, [pc, #-944]	; 27ea4 <__assert_fail@plt+0x16aa0>
   28250:	b	273c0 <__assert_fail@plt+0x15fbc>
   28254:	mov	r2, #5
   28258:	movw	r1, #12152	; 0x2f78
   2825c:	movt	r1, #6
   28260:	str	r9, [sp, #36]	; 0x24
   28264:	bl	11170 <dcgettext@plt>
   28268:	bl	4b2b0 <error@@Base>
   2826c:	b	27090 <__assert_fail@plt+0x15c8c>
   28270:	ldr	r9, [sp, #104]	; 0x68
   28274:	ldr	r8, [sp, #108]	; 0x6c
   28278:	movw	r1, #14220	; 0x378c
   2827c:	mov	r0, #0
   28280:	movt	r1, #6
   28284:	b	280d4 <__assert_fail@plt+0x16cd0>
   28288:	movw	r1, #12728	; 0x31b8
   2828c:	mov	r2, #5
   28290:	movt	r1, #6
   28294:	bl	11170 <dcgettext@plt>
   28298:	b	273c0 <__assert_fail@plt+0x15fbc>
   2829c:	ldr	ip, [sp, #88]	; 0x58
   282a0:	mov	r0, r6
   282a4:	ldr	r6, [sp, #76]	; 0x4c
   282a8:	mov	r2, r4
   282ac:	ldr	r4, [sp, #36]	; 0x24
   282b0:	mov	r3, r1
   282b4:	umull	ip, lr, ip, r1
   282b8:	and	r4, r4, #1
   282bc:	umull	r6, ip, r6, r1
   282c0:	ldr	r6, [sp, #84]	; 0x54
   282c4:	str	r4, [sp, #36]	; 0x24
   282c8:	ldr	r4, [sp, #76]	; 0x4c
   282cc:	lsr	lr, lr, #18
   282d0:	umull	r6, r1, r6, r1
   282d4:	ldr	r6, [sp, #76]	; 0x4c
   282d8:	lsr	ip, ip, #5
   282dc:	umull	r4, r5, r4, lr
   282e0:	umull	r6, r4, r6, ip
   282e4:	lsr	r1, r1, #25
   282e8:	str	r1, [sp]
   282ec:	movw	r1, #12880	; 0x3250
   282f0:	lsr	r5, r5, #5
   282f4:	movt	r1, #6
   282f8:	mls	lr, sl, r5, lr
   282fc:	lsr	r4, r4, #5
   28300:	mls	ip, sl, r4, ip
   28304:	str	lr, [sp, #4]
   28308:	str	ip, [sp, #8]
   2830c:	bl	1132c <__printf_chk@plt>
   28310:	b	26f9c <__assert_fail@plt+0x15b98>
   28314:	mov	r4, #1
   28318:	str	r4, [sp, #36]	; 0x24
   2831c:	b	27090 <__assert_fail@plt+0x15c8c>
   28320:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28324:	movw	r8, #16712	; 0x4148
   28328:	movt	r8, #9
   2832c:	sub	sp, sp, #8
   28330:	mov	sl, r0
   28334:	ldr	r3, [r8, #60]	; 0x3c
   28338:	ldr	r6, [r8, #1896]	; 0x768
   2833c:	cmp	r3, #0
   28340:	beq	2839c <__assert_fail@plt+0x16f98>
   28344:	add	r6, r6, #56	; 0x38
   28348:	mov	r7, #0
   2834c:	mov	r9, #1
   28350:	b	28368 <__assert_fail@plt+0x16f64>
   28354:	ldr	r3, [r8, #60]	; 0x3c
   28358:	add	r7, r7, #1
   2835c:	add	r6, r6, #56	; 0x38
   28360:	cmp	r7, r3
   28364:	bcs	283a0 <__assert_fail@plt+0x16f9c>
   28368:	ldr	r3, [r6, #-56]	; 0xffffffc8
   2836c:	cmp	r3, #4
   28370:	bne	28354 <__assert_fail@plt+0x16f50>
   28374:	ldrd	r4, [r6, #-24]	; 0xffffffe8
   28378:	ldrd	r2, [r6, #-48]	; 0xffffffd0
   2837c:	orrs	r1, r4, r5
   28380:	moveq	r9, #0
   28384:	beq	28354 <__assert_fail@plt+0x16f50>
   28388:	strd	r4, [sp]
   2838c:	mov	r0, sl
   28390:	bl	26b54 <__assert_fail@plt+0x15750>
   28394:	and	r9, r0, r9
   28398:	b	28354 <__assert_fail@plt+0x16f50>
   2839c:	mov	r9, #1
   283a0:	mov	r0, r9
   283a4:	add	sp, sp, #8
   283a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   283ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   283b0:	movw	fp, #16712	; 0x4148
   283b4:	movt	fp, #9
   283b8:	movw	sl, #16680	; 0x4128
   283bc:	movt	sl, #9
   283c0:	sub	sp, sp, #148	; 0x94
   283c4:	ldr	r3, [fp, #212]	; 0xd4
   283c8:	ldr	r2, [sl]
   283cc:	cmp	r3, #0
   283d0:	str	sl, [sp, #68]	; 0x44
   283d4:	str	r0, [sp, #64]	; 0x40
   283d8:	str	r2, [sp, #140]	; 0x8c
   283dc:	beq	28580 <__assert_fail@plt+0x1717c>
   283e0:	ldr	r3, [fp, #68]	; 0x44
   283e4:	mov	r8, #0
   283e8:	ldr	r6, [fp, #220]	; 0xdc
   283ec:	cmp	r3, r8
   283f0:	str	r8, [sp, #96]	; 0x60
   283f4:	str	r8, [sp, #100]	; 0x64
   283f8:	addne	r6, r6, #72	; 0x48
   283fc:	str	r8, [sp, #104]	; 0x68
   28400:	movne	r7, r8
   28404:	str	r8, [sp, #108]	; 0x6c
   28408:	movne	r9, fp
   2840c:	str	r8, [sp, #112]	; 0x70
   28410:	str	r8, [sp, #116]	; 0x74
   28414:	str	r8, [sp, #120]	; 0x78
   28418:	str	r8, [sp, #124]	; 0x7c
   2841c:	str	r8, [sp, #128]	; 0x80
   28420:	str	r8, [sp, #132]	; 0x84
   28424:	bne	28474 <__assert_fail@plt+0x17070>
   28428:	b	291e4 <__assert_fail@plt+0x17de0>
   2842c:	ldr	r0, [fp, #212]	; 0xd4
   28430:	cmp	r0, #0
   28434:	beq	291bc <__assert_fail@plt+0x17db8>
   28438:	ldr	r3, [r6, #-72]	; 0xffffffb8
   2843c:	ldr	r2, [r9, #216]	; 0xd8
   28440:	cmp	r3, r2
   28444:	addcc	r0, r0, r3
   28448:	bcs	28548 <__assert_fail@plt+0x17144>
   2844c:	movw	r1, #14284	; 0x37cc
   28450:	movt	r1, #6
   28454:	bl	110f8 <strcmp@plt>
   28458:	cmp	r0, #0
   2845c:	moveq	r8, r4
   28460:	ldr	r3, [fp, #68]	; 0x44
   28464:	add	r7, r7, #1
   28468:	add	r6, r6, #72	; 0x48
   2846c:	cmp	r3, r7
   28470:	bls	2859c <__assert_fail@plt+0x17198>
   28474:	ldr	r2, [r6, #-68]	; 0xffffffbc
   28478:	sub	r4, r6, #72	; 0x48
   2847c:	cmp	r2, #2
   28480:	bne	2842c <__assert_fail@plt+0x17028>
   28484:	ldr	r2, [r6, #-32]	; 0xffffffe0
   28488:	cmp	r2, r3
   2848c:	bcs	2842c <__assert_fail@plt+0x17028>
   28490:	ldr	r3, [fp, #460]	; 0x1cc
   28494:	mov	r1, r4
   28498:	ldr	r0, [sp, #64]	; 0x40
   2849c:	add	r2, sp, #116	; 0x74
   284a0:	cmp	r3, #0
   284a4:	bne	29158 <__assert_fail@plt+0x17d54>
   284a8:	bl	15a6c <__assert_fail@plt+0x4668>
   284ac:	ldr	r2, [r6, #-32]	; 0xffffffe0
   284b0:	ldr	r3, [sp, #128]	; 0x80
   284b4:	ldr	r1, [fp, #220]	; 0xdc
   284b8:	add	r2, r2, r2, lsl #3
   284bc:	cmp	r3, #0
   284c0:	str	r0, [sp, #112]	; 0x70
   284c4:	add	sl, r1, r2, lsl #3
   284c8:	beq	284ec <__assert_fail@plt+0x170e8>
   284cc:	mov	r2, #5
   284d0:	movw	r1, #7516	; 0x1d5c
   284d4:	mov	r0, #0
   284d8:	movt	r1, #6
   284dc:	bl	11170 <dcgettext@plt>
   284e0:	bl	4b2b0 <error@@Base>
   284e4:	ldr	r0, [sp, #128]	; 0x80
   284e8:	bl	1111c <free@plt>
   284ec:	ldr	ip, [sl, #24]
   284f0:	mov	r2, #5
   284f4:	movw	r1, #3532	; 0xdcc
   284f8:	mov	r0, #0
   284fc:	movt	r1, #6
   28500:	ldrd	r4, [sl, #32]
   28504:	str	ip, [sp, #32]
   28508:	bl	11170 <dcgettext@plt>
   2850c:	ldr	ip, [sp, #32]
   28510:	mov	r2, #1
   28514:	mov	r3, #0
   28518:	ldr	r1, [sp, #64]	; 0x40
   2851c:	strd	r2, [sp]
   28520:	strd	r4, [sp, #8]
   28524:	mov	r2, ip
   28528:	str	r0, [sp, #16]
   2852c:	mov	r0, #0
   28530:	bl	1502c <__assert_fail@plt+0x3c28>
   28534:	cmp	r0, #0
   28538:	str	r0, [sp, #128]	; 0x80
   2853c:	ldrne	r0, [sl, #32]
   28540:	str	r0, [sp, #132]	; 0x84
   28544:	b	28460 <__assert_fail@plt+0x1705c>
   28548:	movw	r1, #50908	; 0xc6dc
   2854c:	mov	r2, #5
   28550:	movt	r1, #5
   28554:	mov	r0, #0
   28558:	bl	11170 <dcgettext@plt>
   2855c:	b	2844c <__assert_fail@plt+0x17048>
   28560:	ldr	r0, [sp, #112]	; 0x70
   28564:	cmp	r0, #0
   28568:	beq	28570 <__assert_fail@plt+0x1716c>
   2856c:	bl	1111c <free@plt>
   28570:	ldr	r0, [sp, #128]	; 0x80
   28574:	cmp	r0, #0
   28578:	beq	28580 <__assert_fail@plt+0x1717c>
   2857c:	bl	1111c <free@plt>
   28580:	ldr	sl, [sp, #68]	; 0x44
   28584:	ldr	r2, [sp, #140]	; 0x8c
   28588:	ldr	r3, [sl]
   2858c:	cmp	r2, r3
   28590:	bne	29214 <__assert_fail@plt+0x17e10>
   28594:	add	sp, sp, #148	; 0x94
   28598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2859c:	cmp	r8, #0
   285a0:	beq	291e4 <__assert_fail@plt+0x17de0>
   285a4:	cmp	r3, #0
   285a8:	ldr	sl, [fp, #220]	; 0xdc
   285ac:	beq	28560 <__assert_fail@plt+0x1715c>
   285b0:	movw	ip, #16712	; 0x4148
   285b4:	movt	ip, #9
   285b8:	str	ip, [sp, #52]	; 0x34
   285bc:	mov	ip, #0
   285c0:	str	ip, [sp, #40]	; 0x28
   285c4:	b	285e4 <__assert_fail@plt+0x171e0>
   285c8:	ldr	ip, [sp, #40]	; 0x28
   285cc:	add	sl, sl, #72	; 0x48
   285d0:	ldr	r3, [fp, #68]	; 0x44
   285d4:	add	ip, ip, #1
   285d8:	str	ip, [sp, #40]	; 0x28
   285dc:	cmp	ip, r3
   285e0:	bcs	28560 <__assert_fail@plt+0x1715c>
   285e4:	cmp	sl, #0
   285e8:	beq	29190 <__assert_fail@plt+0x17d8c>
   285ec:	ldr	r0, [fp, #212]	; 0xd4
   285f0:	cmp	r0, #0
   285f4:	beq	291a8 <__assert_fail@plt+0x17da4>
   285f8:	ldr	ip, [sp, #52]	; 0x34
   285fc:	ldr	r3, [sl]
   28600:	ldr	r2, [ip, #216]	; 0xd8
   28604:	cmp	r3, r2
   28608:	addcc	r0, r0, r3
   2860c:	bcs	28ad8 <__assert_fail@plt+0x176d4>
   28610:	movw	r1, #14284	; 0x37cc
   28614:	movt	r1, #6
   28618:	bl	110f8 <strcmp@plt>
   2861c:	subs	r4, r0, #0
   28620:	bne	285c8 <__assert_fail@plt+0x171c4>
   28624:	mov	r2, #5
   28628:	movw	r1, #14300	; 0x37dc
   2862c:	movt	r1, #6
   28630:	movw	ip, #26448	; 0x6750
   28634:	movt	ip, #9
   28638:	str	ip, [sp, #48]	; 0x30
   2863c:	bl	11170 <dcgettext@plt>
   28640:	mov	r6, r0
   28644:	mov	r0, sl
   28648:	bl	132f8 <__assert_fail@plt+0x1ef4>
   2864c:	ldr	ip, [sp, #48]	; 0x30
   28650:	mov	r3, r4
   28654:	ldr	r4, [sl, #24]
   28658:	ldr	r2, [ip]
   2865c:	add	r2, r2, #4
   28660:	lsl	r2, r2, #1
   28664:	mov	r5, r0
   28668:	ldrd	r0, [sl, #32]
   2866c:	bl	529fc <zcfree@@Base+0x13cc>
   28670:	mov	r3, r4
   28674:	mov	r1, r6
   28678:	mov	r2, r5
   2867c:	str	r0, [sp]
   28680:	mov	r0, #1
   28684:	bl	1132c <__printf_chk@plt>
   28688:	ldr	r3, [fp, #60]	; 0x3c
   2868c:	cmp	r3, #0
   28690:	bne	28b24 <__assert_fail@plt+0x17720>
   28694:	ldrd	r6, [sl, #32]
   28698:	mov	r2, #5
   2869c:	movw	r1, #7732	; 0x1e34
   286a0:	mov	r0, #0
   286a4:	movt	r1, #6
   286a8:	ldr	r4, [sl, #24]
   286ac:	bl	11170 <dcgettext@plt>
   286b0:	mov	r2, #1
   286b4:	mov	r3, #0
   286b8:	ldr	r1, [sp, #64]	; 0x40
   286bc:	strd	r2, [sp]
   286c0:	mov	r2, r6
   286c4:	mov	r3, #0
   286c8:	strd	r2, [sp, #8]
   286cc:	mov	r2, r4
   286d0:	str	r0, [sp, #16]
   286d4:	mov	r0, #0
   286d8:	bl	1502c <__assert_fail@plt+0x3c28>
   286dc:	cmp	r0, #0
   286e0:	str	r0, [sp, #44]	; 0x2c
   286e4:	beq	28bb0 <__assert_fail@plt+0x177ac>
   286e8:	lsr	ip, r6, #4
   286ec:	ldr	r2, [sp, #44]	; 0x2c
   286f0:	mov	r1, #40	; 0x28
   286f4:	str	ip, [sp, #60]	; 0x3c
   286f8:	mov	r0, ip
   286fc:	add	r5, r2, ip, lsl #4
   28700:	bl	3f77c <__assert_fail@plt+0x2e378>
   28704:	ldr	r3, [sp, #44]	; 0x2c
   28708:	cmp	r5, r3
   2870c:	mov	r8, r0
   28710:	str	r0, [sp, #96]	; 0x60
   28714:	bls	288e8 <__assert_fail@plt+0x174e4>
   28718:	ldr	r9, [sp, #44]	; 0x2c
   2871c:	movw	r6, #26492	; 0x677c
   28720:	movt	r6, #9
   28724:	str	sl, [sp, #56]	; 0x38
   28728:	str	fp, [sp, #72]	; 0x48
   2872c:	mov	sl, #0
   28730:	mov	r0, r9
   28734:	strh	sl, [r8]
   28738:	mov	r1, #4
   2873c:	strh	sl, [r8, #16]
   28740:	add	r8, r8, #40	; 0x28
   28744:	ldr	r3, [r6]
   28748:	blx	r3
   2874c:	ldr	r3, [r6]
   28750:	strd	r0, [r8, #-32]	; 0xffffffe0
   28754:	add	r0, r9, #4
   28758:	mov	r1, #4
   2875c:	blx	r3
   28760:	ldr	r3, [r6]
   28764:	strd	r0, [r8, #-16]
   28768:	add	r0, r9, #8
   2876c:	mov	r1, #4
   28770:	blx	r3
   28774:	ldr	r3, [r6]
   28778:	mov	r1, #4
   2877c:	mov	r4, r0
   28780:	add	r0, r9, #12
   28784:	blx	r3
   28788:	ldrb	r3, [r8, #-8]
   2878c:	lsr	r2, r4, #31
   28790:	ldrb	lr, [r8, #-6]
   28794:	lsr	ip, r4, #30
   28798:	bfi	r3, r2, #0, #1
   2879c:	ldrb	r1, [r8, #-5]
   287a0:	lsr	r7, r4, #15
   287a4:	lsr	r2, r4, #29
   287a8:	bfi	r3, ip, #1, #1
   287ac:	bfi	lr, r7, #0, #1
   287b0:	lsr	ip, r4, #7
   287b4:	bfi	r3, r2, #2, #1
   287b8:	lsr	r2, r4, #14
   287bc:	bfi	r1, ip, #0, #1
   287c0:	bfi	lr, r2, #1, #1
   287c4:	lsr	sl, r4, #13
   287c8:	lsr	r2, r4, #6
   287cc:	ldrb	ip, [r8, #-4]
   287d0:	bfi	r1, r2, #1, #1
   287d4:	bfi	lr, sl, #2, #1
   287d8:	lsr	sl, r4, #5
   287dc:	lsr	r2, r4, #27
   287e0:	bfi	r1, sl, #2, #1
   287e4:	bfi	r3, r2, #3, #2
   287e8:	lsr	r2, r4, #26
   287ec:	lsr	r7, r4, #25
   287f0:	bfi	r3, r2, #5, #1
   287f4:	bfi	r3, r7, #6, #1
   287f8:	strb	r3, [r8, #-8]
   287fc:	ldrh	r3, [r8, #-8]
   28800:	lsr	r2, r4, #21
   28804:	lsr	r7, r4, #16
   28808:	add	r9, r9, #16
   2880c:	bfi	r3, r2, #7, #4
   28810:	lsr	r2, r3, #8
   28814:	bfi	r2, r7, #3, #5
   28818:	lsr	sl, r0, #31
   2881c:	bfi	ip, sl, #0, #1
   28820:	lsr	sl, r4, #12
   28824:	bfi	lr, sl, #3, #1
   28828:	lsr	sl, r4, #4
   2882c:	bfi	r1, sl, #3, #1
   28830:	lsr	sl, r0, #30
   28834:	bfi	ip, sl, #1, #1
   28838:	lsr	sl, r4, #11
   2883c:	bfi	lr, sl, #4, #1
   28840:	lsr	sl, r4, #3
   28844:	bfi	r1, sl, #4, #1
   28848:	lsr	sl, r0, #29
   2884c:	bfi	ip, sl, #2, #1
   28850:	ldrd	sl, [sp, #104]	; 0x68
   28854:	strh	r3, [r8, #-8]
   28858:	lsr	r3, r4, #10
   2885c:	bfi	lr, r3, #5, #1
   28860:	lsr	r3, r4, #2
   28864:	bfi	r1, r3, #5, #1
   28868:	strb	r2, [r8, #-7]
   2886c:	lsr	r3, r0, #28
   28870:	lsr	r2, r4, #9
   28874:	bfi	ip, r3, #3, #1
   28878:	mov	r3, lr
   2887c:	bfi	r3, r2, #6, #1
   28880:	lsr	r2, r4, #8
   28884:	mov	lr, r3
   28888:	bfi	lr, r2, #7, #1
   2888c:	ldrd	r2, [r8, #-32]	; 0xffffffe0
   28890:	strb	lr, [r8, #-6]
   28894:	lsr	lr, r4, #1
   28898:	adds	r2, r2, sl
   2889c:	bfi	r1, lr, #6, #1
   288a0:	adc	r3, r3, fp
   288a4:	strd	r2, [r8, #-32]	; 0xffffffe0
   288a8:	ldrd	r2, [r8, #-16]
   288ac:	lsr	lr, r0, #27
   288b0:	bfi	ip, lr, #4, #1
   288b4:	strb	ip, [r8, #-4]
   288b8:	adds	r2, r2, sl
   288bc:	ldr	ip, [r8, #-4]
   288c0:	adc	r3, r3, fp
   288c4:	cmp	r5, r9
   288c8:	bfi	r1, r4, #7, #1
   288cc:	strd	r2, [r8, #-16]
   288d0:	strb	r1, [r8, #-5]
   288d4:	bfi	ip, r0, #5, #27
   288d8:	str	ip, [r8, #-4]
   288dc:	bhi	2872c <__assert_fail@plt+0x17328>
   288e0:	ldr	sl, [sp, #56]	; 0x38
   288e4:	ldr	fp, [sp, #72]	; 0x48
   288e8:	ldr	r0, [sp, #44]	; 0x2c
   288ec:	bl	1111c <free@plt>
   288f0:	ldr	r3, [fp, #68]	; 0x44
   288f4:	ldr	r2, [fp, #220]	; 0xdc
   288f8:	add	r1, r3, r3, lsl #3
   288fc:	add	r1, r2, r1, lsl #3
   28900:	cmp	r2, r1
   28904:	bcs	28af4 <__assert_fail@plt+0x176f0>
   28908:	movw	ip, #35500	; 0x8aac
   2890c:	add	r8, r2, #72	; 0x48
   28910:	movt	ip, #5
   28914:	str	sl, [sp, #36]	; 0x24
   28918:	str	ip, [sp, #44]	; 0x2c
   2891c:	b	2893c <__assert_fail@plt+0x17538>
   28920:	ldr	r3, [fp, #68]	; 0x44
   28924:	add	r8, r8, #72	; 0x48
   28928:	ldr	r2, [fp, #220]	; 0xdc
   2892c:	add	r1, r3, r3, lsl #3
   28930:	add	r1, r2, r1, lsl #3
   28934:	cmp	r6, r1
   28938:	bcs	28af0 <__assert_fail@plt+0x176ec>
   2893c:	ldr	r1, [r8, #-68]	; 0xffffffbc
   28940:	mov	r6, r8
   28944:	cmp	r1, #4
   28948:	bne	28920 <__assert_fail@plt+0x1751c>
   2894c:	ldr	r1, [r8, #-28]	; 0xffffffe4
   28950:	cmp	r1, r3
   28954:	bcs	28920 <__assert_fail@plt+0x1751c>
   28958:	add	r1, r1, r1, lsl #3
   2895c:	ldr	sl, [sp, #36]	; 0x24
   28960:	add	r2, r2, r1, lsl #3
   28964:	cmp	sl, r2
   28968:	bne	28920 <__assert_fail@plt+0x1751c>
   2896c:	ldr	r1, [r8, #-48]	; 0xffffffd0
   28970:	add	ip, sp, #84	; 0x54
   28974:	ldr	r2, [r8, #-40]	; 0xffffffd8
   28978:	add	r3, sp, #88	; 0x58
   2897c:	ldr	r0, [sp, #64]	; 0x40
   28980:	str	ip, [sp]
   28984:	bl	166b0 <__assert_fail@plt+0x52ac>
   28988:	cmp	r0, #0
   2898c:	beq	28bac <__assert_fail@plt+0x177a8>
   28990:	ldr	r7, [sp, #84]	; 0x54
   28994:	ldr	sl, [sp, #88]	; 0x58
   28998:	add	r3, r7, r7, lsl #1
   2899c:	str	sl, [sp, #56]	; 0x38
   289a0:	add	r3, sl, r3, lsl #3
   289a4:	cmp	sl, r3
   289a8:	bcs	291d8 <__assert_fail@plt+0x17dd4>
   289ac:	add	r9, sl, #24
   289b0:	str	r8, [sp, #72]	; 0x48
   289b4:	str	r8, [sp, #76]	; 0x4c
   289b8:	b	28a40 <__assert_fail@plt+0x1763c>
   289bc:	ldr	ip, [sp, #48]	; 0x30
   289c0:	mov	r0, #15
   289c4:	ldrd	r4, [r9, #-24]	; 0xffffffe8
   289c8:	mov	r1, #0
   289cc:	lsl	r8, r8, #5
   289d0:	ldr	r2, [ip]
   289d4:	and	r0, r0, r4
   289d8:	and	r1, r1, r5
   289dc:	lsr	r4, r4, #4
   289e0:	bl	529fc <zcfree@@Base+0x13cc>
   289e4:	orr	r4, r4, r5, lsl #28
   289e8:	add	r3, sl, r8
   289ec:	orrs	r2, r0, r1
   289f0:	beq	29160 <__assert_fail@plt+0x17d5c>
   289f4:	cmp	r1, #0
   289f8:	cmpeq	r0, #1
   289fc:	bne	28a28 <__assert_fail@plt+0x17624>
   28a00:	ldr	r1, [sp, #96]	; 0x60
   28a04:	add	r4, r4, r4, lsl #2
   28a08:	ldr	lr, [r3, #24]
   28a0c:	add	r4, r1, r4, lsl #3
   28a10:	ldrd	r2, [sl, r8]
   28a14:	ldrd	r0, [r9, #-8]
   28a18:	strh	lr, [r4, #16]
   28a1c:	adds	r2, r2, r0
   28a20:	adc	r3, r3, r1
   28a24:	strd	r2, [r4, #24]
   28a28:	add	r3, r7, r7, lsl #1
   28a2c:	ldr	sl, [sp, #56]	; 0x38
   28a30:	add	r9, r9, #24
   28a34:	add	r3, sl, r3, lsl #3
   28a38:	cmp	r6, r3
   28a3c:	bcs	291d0 <__assert_fail@plt+0x17dcc>
   28a40:	ldr	sl, [fp, #460]	; 0x1cc
   28a44:	mov	r6, r9
   28a48:	ldr	r8, [r9, #-16]
   28a4c:	cmp	sl, #0
   28a50:	ldr	r5, [r9, #-12]
   28a54:	uxtbne	r0, r8
   28a58:	bne	28a68 <__assert_fail@plt+0x17664>
   28a5c:	mov	r0, r8
   28a60:	mov	r1, r5
   28a64:	bl	18614 <__assert_fail@plt+0x7210>
   28a68:	cmp	r0, #245	; 0xf5
   28a6c:	movw	r1, #14360	; 0x3818
   28a70:	mov	r2, #15
   28a74:	movt	r1, #6
   28a78:	ldrls	ip, [sp, #44]	; 0x2c
   28a7c:	movhi	r4, #0
   28a80:	addls	r0, ip, r0, lsl #2
   28a84:	ldrls	r4, [r0, #1044]	; 0x414
   28a88:	cmp	sl, #0
   28a8c:	lsrne	r8, r8, #8
   28a90:	ldr	sl, [sp, #112]	; 0x70
   28a94:	orrne	r8, r8, r5, lsl #24
   28a98:	moveq	r8, r5
   28a9c:	mov	r0, r4
   28aa0:	bl	113e0 <strncmp@plt>
   28aa4:	subs	r3, r0, #0
   28aa8:	beq	289bc <__assert_fail@plt+0x175b8>
   28aac:	mov	r2, #5
   28ab0:	movw	r1, #14376	; 0x3828
   28ab4:	mov	r0, #0
   28ab8:	movt	r1, #6
   28abc:	bl	11170 <dcgettext@plt>
   28ac0:	mov	r1, r4
   28ac4:	bl	4b9ec <warn@@Base>
   28ac8:	ldr	sl, [sp, #88]	; 0x58
   28acc:	ldr	r7, [sp, #84]	; 0x54
   28ad0:	str	sl, [sp, #56]	; 0x38
   28ad4:	b	28a28 <__assert_fail@plt+0x17624>
   28ad8:	movw	r1, #50908	; 0xc6dc
   28adc:	mov	r2, #5
   28ae0:	movt	r1, #5
   28ae4:	mov	r0, #0
   28ae8:	bl	11170 <dcgettext@plt>
   28aec:	b	28610 <__assert_fail@plt+0x1720c>
   28af0:	ldr	sl, [sp, #36]	; 0x24
   28af4:	ldr	ip, [sp, #60]	; 0x3c
   28af8:	mov	r6, ip
   28afc:	cmp	r6, #0
   28b00:	str	ip, [sp, #100]	; 0x64
   28b04:	bne	28bbc <__assert_fail@plt+0x177b8>
   28b08:	ldr	r0, [sp, #96]	; 0x60
   28b0c:	cmp	r0, #0
   28b10:	beq	28b18 <__assert_fail@plt+0x17714>
   28b14:	bl	1111c <free@plt>
   28b18:	mov	r3, #0
   28b1c:	str	r3, [sp, #96]	; 0x60
   28b20:	b	285c8 <__assert_fail@plt+0x171c4>
   28b24:	ldr	r0, [sp, #64]	; 0x40
   28b28:	bl	1d2ec <__assert_fail@plt+0xbee8>
   28b2c:	cmp	r0, #0
   28b30:	beq	28bb0 <__assert_fail@plt+0x177ac>
   28b34:	ldr	ip, [sp, #52]	; 0x34
   28b38:	ldrd	r6, [sl, #32]
   28b3c:	ldr	lr, [ip, #60]	; 0x3c
   28b40:	ldr	ip, [ip, #1896]	; 0x768
   28b44:	rsb	lr, lr, lr, lsl #3
   28b48:	add	lr, ip, lr, lsl #3
   28b4c:	cmp	ip, lr
   28b50:	bcc	28b64 <__assert_fail@plt+0x17760>
   28b54:	b	28698 <__assert_fail@plt+0x17294>
   28b58:	add	ip, ip, #56	; 0x38
   28b5c:	cmp	ip, lr
   28b60:	bcs	28698 <__assert_fail@plt+0x17294>
   28b64:	ldr	r3, [ip]
   28b68:	cmp	r3, #1
   28b6c:	bne	28b58 <__assert_fail@plt+0x17754>
   28b70:	ldrd	r0, [sl, #16]
   28b74:	ldrd	r2, [ip, #16]
   28b78:	cmp	r1, r3
   28b7c:	cmpeq	r0, r2
   28b80:	bcc	28b58 <__assert_fail@plt+0x17754>
   28b84:	ldrd	r4, [ip, #40]	; 0x28
   28b88:	adds	r0, r0, r6
   28b8c:	adc	r1, r1, r7
   28b90:	adds	r4, r4, r2
   28b94:	adc	r5, r5, r3
   28b98:	cmp	r1, r5
   28b9c:	cmpeq	r0, r4
   28ba0:	bhi	28b58 <__assert_fail@plt+0x17754>
   28ba4:	strd	r2, [sp, #104]	; 0x68
   28ba8:	b	28698 <__assert_fail@plt+0x17294>
   28bac:	ldr	sl, [sp, #36]	; 0x24
   28bb0:	ldr	r6, [sp, #100]	; 0x64
   28bb4:	cmp	r6, #0
   28bb8:	beq	28b08 <__assert_fail@plt+0x17704>
   28bbc:	ldr	r0, [sp, #116]	; 0x74
   28bc0:	lsl	r0, r0, #5
   28bc4:	bl	4eba0 <warn@@Base+0x31b4>
   28bc8:	ldr	lr, [sp, #116]	; 0x74
   28bcc:	cmp	lr, #0
   28bd0:	mov	r5, r0
   28bd4:	str	r0, [sp, #120]	; 0x78
   28bd8:	beq	2920c <__assert_fail@plt+0x17e08>
   28bdc:	ldr	ip, [sp, #112]	; 0x70
   28be0:	mov	r4, #0
   28be4:	add	lr, ip, lr, lsl #5
   28be8:	b	28bf8 <__assert_fail@plt+0x177f4>
   28bec:	add	ip, ip, #32
   28bf0:	cmp	ip, lr
   28bf4:	beq	28c3c <__assert_fail@plt+0x17838>
   28bf8:	ldrd	r2, [ip]
   28bfc:	orrs	r1, r2, r3
   28c00:	beq	28bec <__assert_fail@plt+0x177e8>
   28c04:	ldrb	r3, [ip, #20]
   28c08:	and	r3, r3, #15
   28c0c:	cmp	r3, #2
   28c10:	bne	28bec <__assert_fail@plt+0x177e8>
   28c14:	mov	r7, ip
   28c18:	add	r6, r5, r4, lsl #5
   28c1c:	ldm	r7!, {r0, r1, r2, r3}
   28c20:	add	ip, ip, #32
   28c24:	cmp	ip, lr
   28c28:	add	r4, r4, #1
   28c2c:	stmia	r6!, {r0, r1, r2, r3}
   28c30:	ldm	r7, {r0, r1, r2, r3}
   28c34:	stm	r6, {r0, r1, r2, r3}
   28c38:	bne	28bf8 <__assert_fail@plt+0x177f4>
   28c3c:	mov	r1, r4
   28c40:	mov	r0, r5
   28c44:	movw	r3, #12188	; 0x2f9c
   28c48:	mov	r2, #32
   28c4c:	movt	r3, #1
   28c50:	str	r4, [sp, #124]	; 0x7c
   28c54:	bl	11398 <qsort@plt>
   28c58:	ldr	r3, [sp, #100]	; 0x64
   28c5c:	ldr	r4, [sp, #96]	; 0x60
   28c60:	add	r3, r3, r3, lsl #2
   28c64:	add	r3, r4, r3, lsl #3
   28c68:	cmp	r4, r3
   28c6c:	bcs	29144 <__assert_fail@plt+0x17d40>
   28c70:	movw	r5, #16696	; 0x4138
   28c74:	movt	r5, #9
   28c78:	add	r7, sp, #88	; 0x58
   28c7c:	add	r6, sp, #84	; 0x54
   28c80:	mov	r8, r5
   28c84:	mov	r9, sl
   28c88:	str	fp, [sp, #36]	; 0x24
   28c8c:	b	28d94 <__assert_fail@plt+0x17990>
   28c90:	tst	r3, #2
   28c94:	bne	28e6c <__assert_fail@plt+0x17a68>
   28c98:	tst	r3, #4
   28c9c:	bne	28e88 <__assert_fail@plt+0x17a84>
   28ca0:	tst	r3, #64	; 0x40
   28ca4:	bne	28ea4 <__assert_fail@plt+0x17aa0>
   28ca8:	ldrh	r2, [r4, #32]
   28cac:	ubfx	r2, r2, #7, #4
   28cb0:	cmp	r2, #0
   28cb4:	bne	28ec4 <__assert_fail@plt+0x17ac0>
   28cb8:	ldrb	r2, [r4, #33]	; 0x21
   28cbc:	lsrs	r2, r2, #3
   28cc0:	bne	28ee0 <__assert_fail@plt+0x17adc>
   28cc4:	ldrb	r3, [r4, #34]	; 0x22
   28cc8:	tst	r3, #1
   28ccc:	bne	28efc <__assert_fail@plt+0x17af8>
   28cd0:	tst	r3, #2
   28cd4:	bne	28f18 <__assert_fail@plt+0x17b14>
   28cd8:	tst	r3, #4
   28cdc:	bne	28f34 <__assert_fail@plt+0x17b30>
   28ce0:	tst	r3, #8
   28ce4:	bne	28f50 <__assert_fail@plt+0x17b4c>
   28ce8:	tst	r3, #16
   28cec:	bne	28f6c <__assert_fail@plt+0x17b68>
   28cf0:	tst	r3, #32
   28cf4:	bne	28f88 <__assert_fail@plt+0x17b84>
   28cf8:	tst	r3, #64	; 0x40
   28cfc:	bne	28fa4 <__assert_fail@plt+0x17ba0>
   28d00:	lsrs	r3, r3, #7
   28d04:	bne	28fc0 <__assert_fail@plt+0x17bbc>
   28d08:	ldrb	r3, [r4, #35]	; 0x23
   28d0c:	tst	r3, #1
   28d10:	bne	28fdc <__assert_fail@plt+0x17bd8>
   28d14:	tst	r3, #2
   28d18:	bne	28ff8 <__assert_fail@plt+0x17bf4>
   28d1c:	tst	r3, #8
   28d20:	bne	29014 <__assert_fail@plt+0x17c10>
   28d24:	tst	r3, #16
   28d28:	bne	29030 <__assert_fail@plt+0x17c2c>
   28d2c:	tst	r3, #32
   28d30:	bne	2904c <__assert_fail@plt+0x17c48>
   28d34:	tst	r3, #64	; 0x40
   28d38:	bne	29068 <__assert_fail@plt+0x17c64>
   28d3c:	lsrs	r3, r3, #7
   28d40:	bne	29084 <__assert_fail@plt+0x17c80>
   28d44:	ldrb	r3, [r4, #36]	; 0x24
   28d48:	tst	r3, #1
   28d4c:	bne	290a0 <__assert_fail@plt+0x17c9c>
   28d50:	tst	r3, #2
   28d54:	bne	290bc <__assert_fail@plt+0x17cb8>
   28d58:	tst	r3, #4
   28d5c:	bne	290d8 <__assert_fail@plt+0x17cd4>
   28d60:	tst	r3, #8
   28d64:	bne	290f4 <__assert_fail@plt+0x17cf0>
   28d68:	ldr	r2, [r4, #36]	; 0x24
   28d6c:	ubfx	r2, r2, #5, #27
   28d70:	cmp	r2, #0
   28d74:	bne	29114 <__assert_fail@plt+0x17d10>
   28d78:	ldr	r3, [sp, #100]	; 0x64
   28d7c:	add	r4, r4, #40	; 0x28
   28d80:	ldr	r2, [sp, #96]	; 0x60
   28d84:	add	r3, r3, r3, lsl #2
   28d88:	add	r3, r2, r3, lsl #3
   28d8c:	cmp	r4, r3
   28d90:	bcs	2913c <__assert_fail@plt+0x17d38>
   28d94:	ldrh	r3, [r4]
   28d98:	ldr	r0, [sp, #120]	; 0x78
   28d9c:	ldr	r1, [sp, #124]	; 0x7c
   28da0:	str	r3, [sp]
   28da4:	ldrd	sl, [r4, #8]
   28da8:	ldr	r2, [sp, #128]	; 0x80
   28dac:	ldr	r3, [sp, #132]	; 0x84
   28db0:	strd	sl, [sp, #8]
   28db4:	str	r6, [sp, #16]
   28db8:	str	r7, [sp, #20]
   28dbc:	bl	191b8 <__assert_fail@plt+0x7db4>
   28dc0:	movw	r0, #7892	; 0x1ed4
   28dc4:	mov	r1, #1
   28dc8:	movt	r0, #6
   28dcc:	mov	r2, #2
   28dd0:	ldr	r3, [r5]
   28dd4:	bl	111b8 <fwrite@plt>
   28dd8:	ldr	r0, [sp, #84]	; 0x54
   28ddc:	cmp	r0, #0
   28de0:	beq	28df8 <__assert_fail@plt+0x179f4>
   28de4:	ldr	r1, [r8]
   28de8:	bl	113d4 <fputs@plt>
   28dec:	ldrd	r2, [sp, #88]	; 0x58
   28df0:	orrs	fp, r2, r3
   28df4:	bne	29128 <__assert_fail@plt+0x17d24>
   28df8:	ldr	r3, [r5]
   28dfc:	mov	r1, #1
   28e00:	mov	r2, #4
   28e04:	movw	r0, #7896	; 0x1ed8
   28e08:	movt	r0, #6
   28e0c:	bl	111b8 <fwrite@plt>
   28e10:	mov	r2, #4
   28e14:	ldrd	r0, [r4, #8]
   28e18:	bl	16c84 <__assert_fail@plt+0x5880>
   28e1c:	ldr	r1, [r5]
   28e20:	mov	r0, #45	; 0x2d
   28e24:	bl	11380 <fputc@plt>
   28e28:	ldrd	r0, [r4, #24]
   28e2c:	mov	r2, #4
   28e30:	bl	16c84 <__assert_fail@plt+0x5880>
   28e34:	movw	r1, #14416	; 0x3850
   28e38:	mov	r0, #1
   28e3c:	movt	r1, #6
   28e40:	bl	1132c <__printf_chk@plt>
   28e44:	ldrb	r3, [r4, #32]
   28e48:	tst	r3, #1
   28e4c:	beq	28c90 <__assert_fail@plt+0x1788c>
   28e50:	movw	r1, #14420	; 0x3854
   28e54:	mov	r0, #1
   28e58:	movt	r1, #6
   28e5c:	bl	1132c <__printf_chk@plt>
   28e60:	ldrb	r3, [r4, #32]
   28e64:	tst	r3, #2
   28e68:	beq	28c98 <__assert_fail@plt+0x17894>
   28e6c:	movw	r1, #14572	; 0x38ec
   28e70:	mov	r0, #1
   28e74:	movt	r1, #6
   28e78:	bl	1132c <__printf_chk@plt>
   28e7c:	ldrb	r3, [r4, #32]
   28e80:	tst	r3, #4
   28e84:	beq	28ca0 <__assert_fail@plt+0x1789c>
   28e88:	movw	r1, #14436	; 0x3864
   28e8c:	mov	r0, #1
   28e90:	movt	r1, #6
   28e94:	bl	1132c <__printf_chk@plt>
   28e98:	ldrb	r3, [r4, #32]
   28e9c:	tst	r3, #64	; 0x40
   28ea0:	beq	28ca8 <__assert_fail@plt+0x178a4>
   28ea4:	movw	r1, #14456	; 0x3878
   28ea8:	mov	r0, #1
   28eac:	movt	r1, #6
   28eb0:	bl	1132c <__printf_chk@plt>
   28eb4:	ldrh	r2, [r4, #32]
   28eb8:	ubfx	r2, r2, #7, #4
   28ebc:	cmp	r2, #0
   28ec0:	beq	28cb8 <__assert_fail@plt+0x178b4>
   28ec4:	movw	r1, #14468	; 0x3884
   28ec8:	mov	r0, #1
   28ecc:	movt	r1, #6
   28ed0:	bl	1132c <__printf_chk@plt>
   28ed4:	ldrb	r2, [r4, #33]	; 0x21
   28ed8:	lsrs	r2, r2, #3
   28edc:	beq	28cc4 <__assert_fail@plt+0x178c0>
   28ee0:	movw	r1, #14484	; 0x3894
   28ee4:	mov	r0, #1
   28ee8:	movt	r1, #6
   28eec:	bl	1132c <__printf_chk@plt>
   28ef0:	ldrb	r3, [r4, #34]	; 0x22
   28ef4:	tst	r3, #1
   28ef8:	beq	28cd0 <__assert_fail@plt+0x178cc>
   28efc:	movw	r1, #14500	; 0x38a4
   28f00:	mov	r0, #1
   28f04:	movt	r1, #6
   28f08:	bl	1132c <__printf_chk@plt>
   28f0c:	ldrb	r3, [r4, #34]	; 0x22
   28f10:	tst	r3, #2
   28f14:	beq	28cd8 <__assert_fail@plt+0x178d4>
   28f18:	movw	r1, #14516	; 0x38b4
   28f1c:	mov	r0, #1
   28f20:	movt	r1, #6
   28f24:	bl	1132c <__printf_chk@plt>
   28f28:	ldrb	r3, [r4, #34]	; 0x22
   28f2c:	tst	r3, #4
   28f30:	beq	28ce0 <__assert_fail@plt+0x178dc>
   28f34:	movw	r1, #14532	; 0x38c4
   28f38:	mov	r0, #1
   28f3c:	movt	r1, #6
   28f40:	bl	1132c <__printf_chk@plt>
   28f44:	ldrb	r3, [r4, #34]	; 0x22
   28f48:	tst	r3, #8
   28f4c:	beq	28ce8 <__assert_fail@plt+0x178e4>
   28f50:	movw	r1, #14556	; 0x38dc
   28f54:	mov	r0, #1
   28f58:	movt	r1, #6
   28f5c:	bl	1132c <__printf_chk@plt>
   28f60:	ldrb	r3, [r4, #34]	; 0x22
   28f64:	tst	r3, #16
   28f68:	beq	28cf0 <__assert_fail@plt+0x178ec>
   28f6c:	movw	r1, #14584	; 0x38f8
   28f70:	mov	r0, #1
   28f74:	movt	r1, #6
   28f78:	bl	1132c <__printf_chk@plt>
   28f7c:	ldrb	r3, [r4, #34]	; 0x22
   28f80:	tst	r3, #32
   28f84:	beq	28cf8 <__assert_fail@plt+0x178f4>
   28f88:	movw	r1, #14608	; 0x3910
   28f8c:	mov	r0, #1
   28f90:	movt	r1, #6
   28f94:	bl	1132c <__printf_chk@plt>
   28f98:	ldrb	r3, [r4, #34]	; 0x22
   28f9c:	tst	r3, #64	; 0x40
   28fa0:	beq	28d00 <__assert_fail@plt+0x178fc>
   28fa4:	movw	r1, #14640	; 0x3930
   28fa8:	mov	r0, #1
   28fac:	movt	r1, #6
   28fb0:	bl	1132c <__printf_chk@plt>
   28fb4:	ldrb	r3, [r4, #34]	; 0x22
   28fb8:	lsrs	r3, r3, #7
   28fbc:	beq	28d08 <__assert_fail@plt+0x17904>
   28fc0:	movw	r1, #14652	; 0x393c
   28fc4:	mov	r0, #1
   28fc8:	movt	r1, #6
   28fcc:	bl	1132c <__printf_chk@plt>
   28fd0:	ldrb	r3, [r4, #35]	; 0x23
   28fd4:	tst	r3, #1
   28fd8:	beq	28d14 <__assert_fail@plt+0x17910>
   28fdc:	movw	r1, #14664	; 0x3948
   28fe0:	mov	r0, #1
   28fe4:	movt	r1, #6
   28fe8:	bl	1132c <__printf_chk@plt>
   28fec:	ldrb	r3, [r4, #35]	; 0x23
   28ff0:	tst	r3, #2
   28ff4:	beq	28d1c <__assert_fail@plt+0x17918>
   28ff8:	movw	r1, #14680	; 0x3958
   28ffc:	mov	r0, #1
   29000:	movt	r1, #6
   29004:	bl	1132c <__printf_chk@plt>
   29008:	ldrb	r3, [r4, #35]	; 0x23
   2900c:	tst	r3, #8
   29010:	beq	28d24 <__assert_fail@plt+0x17920>
   29014:	movw	r1, #14700	; 0x396c
   29018:	mov	r0, #1
   2901c:	movt	r1, #6
   29020:	bl	1132c <__printf_chk@plt>
   29024:	ldrb	r3, [r4, #35]	; 0x23
   29028:	tst	r3, #16
   2902c:	beq	28d2c <__assert_fail@plt+0x17928>
   29030:	movw	r1, #14712	; 0x3978
   29034:	mov	r0, #1
   29038:	movt	r1, #6
   2903c:	bl	1132c <__printf_chk@plt>
   29040:	ldrb	r3, [r4, #35]	; 0x23
   29044:	tst	r3, #32
   29048:	beq	28d34 <__assert_fail@plt+0x17930>
   2904c:	movw	r1, #14724	; 0x3984
   29050:	mov	r0, #1
   29054:	movt	r1, #6
   29058:	bl	1132c <__printf_chk@plt>
   2905c:	ldrb	r3, [r4, #35]	; 0x23
   29060:	tst	r3, #64	; 0x40
   29064:	beq	28d3c <__assert_fail@plt+0x17938>
   29068:	movw	r1, #14744	; 0x3998
   2906c:	mov	r0, #1
   29070:	movt	r1, #6
   29074:	bl	1132c <__printf_chk@plt>
   29078:	ldrb	r3, [r4, #35]	; 0x23
   2907c:	lsrs	r3, r3, #7
   29080:	beq	28d44 <__assert_fail@plt+0x17940>
   29084:	movw	r1, #14764	; 0x39ac
   29088:	mov	r0, #1
   2908c:	movt	r1, #6
   29090:	bl	1132c <__printf_chk@plt>
   29094:	ldrb	r3, [r4, #36]	; 0x24
   29098:	tst	r3, #1
   2909c:	beq	28d50 <__assert_fail@plt+0x1794c>
   290a0:	movw	r1, #14784	; 0x39c0
   290a4:	mov	r0, #1
   290a8:	movt	r1, #6
   290ac:	bl	1132c <__printf_chk@plt>
   290b0:	ldrb	r3, [r4, #36]	; 0x24
   290b4:	tst	r3, #2
   290b8:	beq	28d58 <__assert_fail@plt+0x17954>
   290bc:	movw	r1, #14812	; 0x39dc
   290c0:	mov	r0, #1
   290c4:	movt	r1, #6
   290c8:	bl	1132c <__printf_chk@plt>
   290cc:	ldrb	r3, [r4, #36]	; 0x24
   290d0:	tst	r3, #4
   290d4:	beq	28d60 <__assert_fail@plt+0x1795c>
   290d8:	movw	r1, #14836	; 0x39f4
   290dc:	mov	r0, #1
   290e0:	movt	r1, #6
   290e4:	bl	1132c <__printf_chk@plt>
   290e8:	ldrb	r3, [r4, #36]	; 0x24
   290ec:	tst	r3, #8
   290f0:	beq	28d68 <__assert_fail@plt+0x17964>
   290f4:	movw	r1, #14852	; 0x3a04
   290f8:	mov	r0, #1
   290fc:	movt	r1, #6
   29100:	bl	1132c <__printf_chk@plt>
   29104:	ldr	r2, [r4, #36]	; 0x24
   29108:	ubfx	r2, r2, #5, #27
   2910c:	cmp	r2, #0
   29110:	beq	28d78 <__assert_fail@plt+0x17974>
   29114:	movw	r1, #14868	; 0x3a14
   29118:	mov	r0, #1
   2911c:	movt	r1, #6
   29120:	bl	1132c <__printf_chk@plt>
   29124:	b	28d78 <__assert_fail@plt+0x17974>
   29128:	movw	r1, #6728	; 0x1a48
   2912c:	mov	r0, #1
   29130:	movt	r1, #6
   29134:	bl	1132c <__printf_chk@plt>
   29138:	b	28df8 <__assert_fail@plt+0x179f4>
   2913c:	ldr	fp, [sp, #36]	; 0x24
   29140:	mov	sl, r9
   29144:	mov	r0, #10
   29148:	bl	112fc <putchar@plt>
   2914c:	ldr	r0, [sp, #120]	; 0x78
   29150:	bl	1111c <free@plt>
   29154:	b	28b08 <__assert_fail@plt+0x17704>
   29158:	bl	155f4 <__assert_fail@plt+0x41f0>
   2915c:	b	284ac <__assert_fail@plt+0x170a8>
   29160:	add	r4, r4, r4, lsl #2
   29164:	ldr	lr, [sp, #96]	; 0x60
   29168:	ldrd	r0, [r9, #-8]
   2916c:	ldr	r5, [r3, #24]
   29170:	lsl	r4, r4, #3
   29174:	ldrd	r2, [sl, r8]
   29178:	add	ip, lr, r4
   2917c:	adds	r2, r2, r0
   29180:	strh	r5, [lr, r4]
   29184:	adc	r3, r3, r1
   29188:	strd	r2, [ip, #8]
   2918c:	b	28a28 <__assert_fail@plt+0x17624>
   29190:	movw	r1, #50888	; 0xc6c8
   29194:	mov	r0, sl
   29198:	movt	r1, #5
   2919c:	mov	r2, #5
   291a0:	bl	11170 <dcgettext@plt>
   291a4:	b	28610 <__assert_fail@plt+0x1720c>
   291a8:	movw	r1, #50896	; 0xc6d0
   291ac:	mov	r2, #5
   291b0:	movt	r1, #5
   291b4:	bl	11170 <dcgettext@plt>
   291b8:	b	28610 <__assert_fail@plt+0x1720c>
   291bc:	movw	r1, #50896	; 0xc6d0
   291c0:	mov	r2, #5
   291c4:	movt	r1, #5
   291c8:	bl	11170 <dcgettext@plt>
   291cc:	b	2844c <__assert_fail@plt+0x17048>
   291d0:	ldr	r6, [sp, #72]	; 0x48
   291d4:	ldr	r8, [sp, #76]	; 0x4c
   291d8:	ldr	r0, [sp, #56]	; 0x38
   291dc:	bl	1111c <free@plt>
   291e0:	b	28920 <__assert_fail@plt+0x1751c>
   291e4:	mov	r2, #5
   291e8:	movw	r1, #7468	; 0x1d2c
   291ec:	mov	r0, #0
   291f0:	movt	r1, #6
   291f4:	bl	11170 <dcgettext@plt>
   291f8:	mov	r1, r0
   291fc:	mov	r0, #1
   29200:	bl	1132c <__printf_chk@plt>
   29204:	ldr	r3, [fp, #68]	; 0x44
   29208:	b	285a4 <__assert_fail@plt+0x171a0>
   2920c:	mov	r4, lr
   29210:	b	28c3c <__assert_fail@plt+0x17838>
   29214:	bl	1117c <__stack_chk_fail@plt>
   29218:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2921c:	sub	sp, sp, #48	; 0x30
   29220:	movw	r4, #16680	; 0x4128
   29224:	movt	r4, #9
   29228:	ldrh	lr, [sp, #80]	; 0x50
   2922c:	mov	ip, r0
   29230:	ldr	r1, [r4]
   29234:	mov	r6, r2
   29238:	ldr	r8, [sp, #88]	; 0x58
   2923c:	cmp	lr, #0
   29240:	ldr	r7, [sp, #92]	; 0x5c
   29244:	mov	r5, r3
   29248:	ldr	r0, [r0, #12]
   2924c:	moveq	r8, r2
   29250:	moveq	r7, r3
   29254:	ldr	r2, [ip, #20]
   29258:	ldr	r3, [ip, #24]
   2925c:	add	sl, sp, #28
   29260:	str	r1, [sp, #44]	; 0x2c
   29264:	add	r9, sp, #32
   29268:	ldr	r1, [ip, #16]
   2926c:	str	lr, [sp]
   29270:	str	r8, [sp, #8]
   29274:	str	r7, [sp, #12]
   29278:	str	sl, [sp, #16]
   2927c:	str	r9, [sp, #20]
   29280:	bl	191b8 <__assert_fail@plt+0x7db4>
   29284:	mov	r0, r6
   29288:	mov	r1, r5
   2928c:	mov	r2, #4
   29290:	bl	16c84 <__assert_fail@plt+0x5880>
   29294:	ldr	r0, [sp, #28]
   29298:	cmp	r0, #0
   2929c:	beq	292e8 <__assert_fail@plt+0x17ee4>
   292a0:	movw	r5, #16696	; 0x4138
   292a4:	movt	r5, #9
   292a8:	mov	r2, #2
   292ac:	mov	r1, #1
   292b0:	ldr	r3, [r5]
   292b4:	movw	r0, #14892	; 0x3a2c
   292b8:	movt	r0, #6
   292bc:	bl	111b8 <fwrite@plt>
   292c0:	ldr	r1, [r5]
   292c4:	ldr	r0, [sp, #28]
   292c8:	bl	113d4 <fputs@plt>
   292cc:	ldrd	r2, [sp, #32]
   292d0:	orrs	r1, r2, r3
   292d4:	bne	29300 <__assert_fail@plt+0x17efc>
   292d8:	ldr	r1, [r5]
   292dc:	mov	r0, #62	; 0x3e
   292e0:	bl	11380 <fputc@plt>
   292e4:	ldr	r0, [sp, #28]
   292e8:	ldr	r2, [sp, #44]	; 0x2c
   292ec:	ldr	r3, [r4]
   292f0:	cmp	r2, r3
   292f4:	bne	29314 <__assert_fail@plt+0x17f10>
   292f8:	add	sp, sp, #48	; 0x30
   292fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29300:	movw	r1, #14896	; 0x3a30
   29304:	mov	r0, #1
   29308:	movt	r1, #6
   2930c:	bl	1132c <__printf_chk@plt>
   29310:	b	292d8 <__assert_fail@plt+0x17ed4>
   29314:	bl	1117c <__stack_chk_fail@plt>
   29318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2931c:	movw	fp, #16680	; 0x4128
   29320:	sub	sp, sp, #276	; 0x114
   29324:	movt	fp, #9
   29328:	subs	r4, r2, #0
   2932c:	mvn	r3, #0
   29330:	str	r1, [sp, #68]	; 0x44
   29334:	mvn	r2, #0
   29338:	ldr	r1, [fp]
   2933c:	ldr	r5, [sp, #324]	; 0x144
   29340:	str	r0, [sp, #44]	; 0x2c
   29344:	strd	r2, [sp, #88]	; 0x58
   29348:	str	r1, [sp, #268]	; 0x10c
   2934c:	ldr	sl, [sp, #320]	; 0x140
   29350:	str	r5, [sp, #40]	; 0x28
   29354:	bne	293c0 <__assert_fail@plt+0x17fbc>
   29358:	cmp	sl, #0
   2935c:	cmpne	r5, #0
   29360:	bne	2937c <__assert_fail@plt+0x17f78>
   29364:	ldr	r2, [sp, #268]	; 0x10c
   29368:	ldr	r3, [fp]
   2936c:	cmp	r2, r3
   29370:	bne	2a934 <__assert_fail@plt+0x19530>
   29374:	add	sp, sp, #276	; 0x114
   29378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2937c:	add	r7, sp, #512	; 0x200
   29380:	add	r2, sp, #68	; 0x44
   29384:	add	r3, sp, #96	; 0x60
   29388:	mov	r1, r5
   2938c:	ldrd	r6, [r7, #-200]	; 0xffffff38
   29390:	str	r2, [sp, #8]
   29394:	add	r2, sp, #104	; 0x68
   29398:	str	r3, [sp, #12]
   2939c:	add	r3, sp, #88	; 0x58
   293a0:	str	r2, [sp, #16]
   293a4:	mov	r2, sl
   293a8:	strd	r6, [sp]
   293ac:	str	r3, [sp, #20]
   293b0:	bl	2652c <__assert_fail@plt+0x15128>
   293b4:	cmp	r0, #0
   293b8:	beq	29364 <__assert_fail@plt+0x17f60>
   293bc:	mov	r4, #4
   293c0:	ldr	r3, [sp, #68]	; 0x44
   293c4:	cmp	r3, #0
   293c8:	blt	29674 <__assert_fail@plt+0x18270>
   293cc:	add	r6, sp, #512	; 0x200
   293d0:	ldrd	r0, [sl, #16]
   293d4:	mov	r8, r3
   293d8:	mov	r9, #0
   293dc:	ldrd	r4, [r6, #-200]	; 0xffffff38
   293e0:	movw	r6, #16712	; 0x4148
   293e4:	movt	r6, #9
   293e8:	strd	r8, [sp, #24]
   293ec:	adds	r4, r4, r0
   293f0:	adc	r5, r5, r1
   293f4:	tst	r3, #1073741824	; 0x40000000
   293f8:	strd	r4, [sp, #32]
   293fc:	mvnne	r3, #0
   29400:	orrne	r9, r9, r3
   29404:	ldrh	r3, [r6, #50]	; 0x32
   29408:	movne	r2, #-2147483648	; 0x80000000
   2940c:	orrne	r8, r8, r2
   29410:	strdne	r8, [sp, #24]
   29414:	cmp	r3, #140	; 0x8c
   29418:	beq	29718 <__assert_fail@plt+0x18314>
   2941c:	ldrd	r8, [sp, #24]
   29420:	mov	r2, #5
   29424:	ldrd	r4, [sp, #32]
   29428:	movw	r1, #14904	; 0x3a38
   2942c:	mov	r0, #0
   29430:	movt	r1, #6
   29434:	adds	r8, r8, r4
   29438:	adc	r9, r9, r5
   2943c:	strd	r8, [sp, #24]
   29440:	bl	11170 <dcgettext@plt>
   29444:	mov	r1, r0
   29448:	mov	r0, #1
   2944c:	bl	1132c <__printf_chk@plt>
   29450:	orrs	r5, r8, r9
   29454:	ldrh	ip, [sp, #96]	; 0x60
   29458:	bne	29464 <__assert_fail@plt+0x18060>
   2945c:	cmp	ip, #0
   29460:	beq	296d0 <__assert_fail@plt+0x182cc>
   29464:	ldr	r0, [sp, #104]	; 0x68
   29468:	ldr	r1, [sp, #108]	; 0x6c
   2946c:	str	ip, [sp]
   29470:	movw	r7, #16696	; 0x4138
   29474:	ldrd	r2, [sp, #24]
   29478:	movt	r7, #9
   2947c:	str	r0, [sp, #8]
   29480:	str	r1, [sp, #12]
   29484:	ldr	r0, [sp, #44]	; 0x2c
   29488:	bl	29218 <__assert_fail@plt+0x17e14>
   2948c:	ldr	r1, [r7]
   29490:	mov	r8, r0
   29494:	mov	r0, #10
   29498:	bl	11380 <fputc@plt>
   2949c:	cmp	r8, #0
   294a0:	beq	29364 <__assert_fail@plt+0x17f60>
   294a4:	movw	r1, #14928	; 0x3a50
   294a8:	mov	r0, r8
   294ac:	movt	r1, #6
   294b0:	mov	r2, #20
   294b4:	bl	113e0 <strncmp@plt>
   294b8:	cmp	r0, #0
   294bc:	beq	29514 <__assert_fail@plt+0x18110>
   294c0:	movw	r1, #14952	; 0x3a68
   294c4:	mov	r0, r8
   294c8:	movt	r1, #6
   294cc:	mov	r2, #20
   294d0:	bl	113e0 <strncmp@plt>
   294d4:	cmp	r0, #0
   294d8:	beq	29514 <__assert_fail@plt+0x18110>
   294dc:	movw	r1, #14976	; 0x3a80
   294e0:	mov	r0, r8
   294e4:	movt	r1, #6
   294e8:	mov	r2, #20
   294ec:	bl	113e0 <strncmp@plt>
   294f0:	cmp	r0, #0
   294f4:	beq	29514 <__assert_fail@plt+0x18110>
   294f8:	mov	r0, r8
   294fc:	movw	r1, #15000	; 0x3a98
   29500:	mov	r2, #25
   29504:	movt	r1, #6
   29508:	bl	113e0 <strncmp@plt>
   2950c:	cmp	r0, #0
   29510:	bne	29364 <__assert_fail@plt+0x17f60>
   29514:	ldr	r5, [sp, #40]	; 0x28
   29518:	cmp	r5, #0
   2951c:	beq	29364 <__assert_fail@plt+0x17f60>
   29520:	add	ip, sp, #512	; 0x200
   29524:	add	r2, sp, #68	; 0x44
   29528:	add	r3, sp, #96	; 0x60
   2952c:	ldr	r0, [sp, #44]	; 0x2c
   29530:	ldrd	r8, [ip, #-200]	; 0xffffff38
   29534:	mov	r1, r5
   29538:	adds	r8, r8, #4
   2953c:	adc	r9, r9, #0
   29540:	strd	r8, [ip, #-200]	; 0xffffff38
   29544:	str	r2, [sp, #8]
   29548:	add	r2, sp, #104	; 0x68
   2954c:	str	r3, [sp, #12]
   29550:	mov	r3, #0
   29554:	str	r2, [sp, #16]
   29558:	mov	r2, sl
   2955c:	strd	r8, [sp]
   29560:	str	r3, [sp, #20]
   29564:	bl	2652c <__assert_fail@plt+0x15128>
   29568:	cmp	r0, #0
   2956c:	beq	29364 <__assert_fail@plt+0x17f60>
   29570:	ldr	r5, [sp, #68]	; 0x44
   29574:	mvn	r7, #0
   29578:	mov	r4, #3
   2957c:	lsl	r3, r5, #8
   29580:	lsr	r5, r5, #24
   29584:	str	r3, [sp, #68]	; 0x44
   29588:	ldrh	r3, [r6, #50]	; 0x32
   2958c:	movw	r6, #16712	; 0x4148
   29590:	movt	r6, #9
   29594:	cmp	r3, #40	; 0x28
   29598:	beq	29798 <__assert_fail@plt+0x18394>
   2959c:	cmp	r3, #140	; 0x8c
   295a0:	bne	29778 <__assert_fail@plt+0x18374>
   295a4:	cmp	r7, #2
   295a8:	ble	29fa8 <__assert_fail@plt+0x18ba4>
   295ac:	cmp	r7, #4
   295b0:	bgt	2a390 <__assert_fail@plt+0x18f8c>
   295b4:	ldr	r3, [sp, #68]	; 0x44
   295b8:	ubfx	r3, r3, #17, #7
   295bc:	cmp	r3, #127	; 0x7f
   295c0:	beq	2a4d0 <__assert_fail@plt+0x190cc>
   295c4:	mov	r2, #5
   295c8:	movw	r1, #15652	; 0x3d24
   295cc:	mov	r0, #0
   295d0:	movt	r1, #6
   295d4:	bl	11170 <dcgettext@plt>
   295d8:	ldr	r2, [sp, #68]	; 0x44
   295dc:	lsr	r2, r2, #14
   295e0:	and	r2, r2, #508	; 0x1fc
   295e4:	mov	r1, r0
   295e8:	mov	r0, #1
   295ec:	bl	1132c <__printf_chk@plt>
   295f0:	mov	r2, #5
   295f4:	movw	r1, #15676	; 0x3d3c
   295f8:	mov	r0, #0
   295fc:	movt	r1, #6
   29600:	bl	11170 <dcgettext@plt>
   29604:	mov	r1, r0
   29608:	mov	r0, #1
   2960c:	bl	1132c <__printf_chk@plt>
   29610:	cmp	r7, #4
   29614:	beq	2a6e4 <__assert_fail@plt+0x192e0>
   29618:	ldr	r0, [sp, #68]	; 0x44
   2961c:	ubfx	r0, r0, #4, #13
   29620:	bl	18460 <__assert_fail@plt+0x705c>
   29624:	movw	r3, #16696	; 0x4138
   29628:	movt	r3, #9
   2962c:	mov	r0, #10
   29630:	ldr	r1, [r3]
   29634:	bl	111ac <_IO_putc@plt>
   29638:	mov	r2, #5
   2963c:	movw	r1, #15712	; 0x3d60
   29640:	mov	r0, #0
   29644:	movt	r1, #6
   29648:	bl	11170 <dcgettext@plt>
   2964c:	ldr	r2, [sp, #68]	; 0x44
   29650:	movw	r3, #19132	; 0x4abc
   29654:	movt	r3, #5
   29658:	and	r2, r2, #15
   2965c:	add	r3, r3, r2, lsl #2
   29660:	ldr	r2, [r3, #560]	; 0x230
   29664:	mov	r1, r0
   29668:	mov	r0, #1
   2966c:	bl	1132c <__printf_chk@plt>
   29670:	b	29364 <__assert_fail@plt+0x17f60>
   29674:	movw	r6, #16712	; 0x4148
   29678:	movt	r6, #9
   2967c:	ldrh	r2, [r6, #50]	; 0x32
   29680:	cmp	r2, #40	; 0x28
   29684:	beq	2974c <__assert_fail@plt+0x18348>
   29688:	mov	r2, #5
   2968c:	movw	r1, #15072	; 0x3ae0
   29690:	mov	r0, #0
   29694:	movt	r1, #6
   29698:	ubfx	r7, r3, #24, #7
   2969c:	bl	11170 <dcgettext@plt>
   296a0:	mov	r2, r7
   296a4:	mov	r1, r0
   296a8:	mov	r0, #1
   296ac:	bl	1132c <__printf_chk@plt>
   296b0:	cmp	r7, #0
   296b4:	bne	2972c <__assert_fail@plt+0x18328>
   296b8:	ldr	r3, [sp, #68]	; 0x44
   296bc:	sub	r4, r4, #1
   296c0:	mov	r5, r7
   296c4:	lsl	r3, r3, #8
   296c8:	str	r3, [sp, #68]	; 0x44
   296cc:	b	29588 <__assert_fail@plt+0x18184>
   296d0:	ldrd	r0, [sp, #104]	; 0x68
   296d4:	orrs	r7, r0, r1
   296d8:	bne	2946c <__assert_fail@plt+0x18068>
   296dc:	ldrd	r8, [sp, #88]	; 0x58
   296e0:	mvn	r2, #0
   296e4:	mvn	r3, #0
   296e8:	cmp	r9, r3
   296ec:	cmpeq	r8, r2
   296f0:	beq	2970c <__assert_fail@plt+0x18308>
   296f4:	ldr	r4, [sp, #44]	; 0x2c
   296f8:	mov	r3, #0
   296fc:	ldr	r2, [r4, #24]
   29700:	cmp	r9, r3
   29704:	cmpeq	r8, r2
   29708:	bcc	29f00 <__assert_fail@plt+0x18afc>
   2970c:	ldr	r0, [sp, #24]
   29710:	ldr	r1, [sp, #28]
   29714:	b	2946c <__assert_fail@plt+0x18068>
   29718:	ldrd	r8, [sp, #24]
   2971c:	adds	r8, r8, r8
   29720:	adc	r9, r9, r9
   29724:	strd	r8, [sp, #24]
   29728:	b	2941c <__assert_fail@plt+0x18018>
   2972c:	cmp	r7, #2
   29730:	suble	r4, r4, #2
   29734:	ldrle	r3, [sp, #68]	; 0x44
   29738:	movgt	r5, #0
   2973c:	ubfxle	r5, r3, #16, #8
   29740:	lslle	r3, r3, #16
   29744:	strle	r3, [sp, #68]	; 0x44
   29748:	b	29588 <__assert_fail@plt+0x18184>
   2974c:	tst	r3, #1879048192	; 0x70000000
   29750:	beq	29688 <__assert_fail@plt+0x18284>
   29754:	mov	r2, #5
   29758:	movw	r1, #15028	; 0x3ab4
   2975c:	mov	r0, #0
   29760:	movt	r1, #6
   29764:	bl	11170 <dcgettext@plt>
   29768:	ldr	r1, [sp, #68]	; 0x44
   2976c:	bl	4b9ec <warn@@Base>
   29770:	ldr	r3, [sp, #68]	; 0x44
   29774:	b	29688 <__assert_fail@plt+0x18284>
   29778:	mov	r2, #5
   2977c:	movw	r1, #15756	; 0x3d8c
   29780:	mov	r0, #0
   29784:	movt	r1, #6
   29788:	bl	11170 <dcgettext@plt>
   2978c:	ldrh	r1, [r6, #50]	; 0x32
   29790:	bl	4b2b0 <error@@Base>
   29794:	b	29364 <__assert_fail@plt+0x17f60>
   29798:	cmp	r7, #2
   2979c:	bgt	29cf8 <__assert_fail@plt+0x188f4>
   297a0:	add	r7, sp, #512	; 0x200
   297a4:	ldr	r6, [sp, #40]	; 0x28
   297a8:	ldr	r3, [sp, #68]	; 0x44
   297ac:	ldrd	r8, [r7, #-200]	; 0xffffff38
   297b0:	str	r6, [sp, #32]
   297b4:	str	r3, [sp, #76]	; 0x4c
   297b8:	str	fp, [sp, #40]	; 0x28
   297bc:	rsbs	r3, r4, #1
   297c0:	movcc	r3, #0
   297c4:	adds	r6, r5, #0
   297c8:	movne	r6, #1
   297cc:	tst	r6, r3
   297d0:	beq	299f4 <__assert_fail@plt+0x185f0>
   297d4:	ldr	ip, [sp, #32]
   297d8:	adds	r8, r8, #4
   297dc:	adc	r9, r9, #0
   297e0:	cmp	sl, #0
   297e4:	cmpne	ip, #0
   297e8:	movne	r6, #0
   297ec:	moveq	r6, #1
   297f0:	beq	29b38 <__assert_fail@plt+0x18734>
   297f4:	add	r3, sp, #76	; 0x4c
   297f8:	add	r2, sp, #112	; 0x70
   297fc:	str	r3, [sp, #8]
   29800:	mov	r1, ip
   29804:	add	r3, sp, #120	; 0x78
   29808:	str	r2, [sp, #12]
   2980c:	strd	r8, [sp]
   29810:	mov	r2, sl
   29814:	str	r6, [sp, #20]
   29818:	ldr	r0, [sp, #44]	; 0x2c
   2981c:	str	r3, [sp, #16]
   29820:	bl	2652c <__assert_fail@plt+0x15128>
   29824:	cmp	r0, #0
   29828:	beq	29b38 <__assert_fail@plt+0x18734>
   2982c:	sub	r5, r5, #1
   29830:	mov	r4, #3
   29834:	ldr	r3, [sp, #76]	; 0x4c
   29838:	movw	r1, #15100	; 0x3afc
   2983c:	mov	r0, #1
   29840:	movt	r1, #6
   29844:	lsr	r7, r3, #24
   29848:	lsl	r3, r3, #8
   2984c:	str	r3, [sp, #76]	; 0x4c
   29850:	mov	r2, r7
   29854:	bl	1132c <__printf_chk@plt>
   29858:	ands	r3, r7, #192	; 0xc0
   2985c:	beq	29a10 <__assert_fail@plt+0x1860c>
   29860:	cmp	r3, #64	; 0x40
   29864:	beq	29b18 <__assert_fail@plt+0x18714>
   29868:	and	r3, r7, #240	; 0xf0
   2986c:	cmp	r3, #128	; 0x80
   29870:	beq	29a38 <__assert_fail@plt+0x18634>
   29874:	cmp	r3, #144	; 0x90
   29878:	beq	29afc <__assert_fail@plt+0x186f8>
   2987c:	cmp	r3, #160	; 0xa0
   29880:	beq	29e10 <__assert_fail@plt+0x18a0c>
   29884:	cmp	r7, #176	; 0xb0
   29888:	movweq	r1, #15260	; 0x3b9c
   2988c:	moveq	r0, #0
   29890:	movteq	r1, #6
   29894:	beq	29ae4 <__assert_fail@plt+0x186e0>
   29898:	cmp	r7, #177	; 0xb1
   2989c:	beq	29c88 <__assert_fail@plt+0x18884>
   298a0:	cmp	r7, #178	; 0xb2
   298a4:	beq	29d34 <__assert_fail@plt+0x18930>
   298a8:	subs	r3, r7, #200	; 0xc8
   298ac:	rsbs	fp, r3, #0
   298b0:	adcs	fp, fp, r3
   298b4:	cmp	r7, #200	; 0xc8
   298b8:	cmpne	r7, #179	; 0xb3
   298bc:	beq	29bbc <__assert_fail@plt+0x187b8>
   298c0:	cmp	r7, #201	; 0xc9
   298c4:	beq	29bbc <__assert_fail@plt+0x187b8>
   298c8:	and	r0, r7, #248	; 0xf8
   298cc:	cmp	r0, #184	; 0xb8
   298d0:	cmpne	r0, #208	; 0xd0
   298d4:	movne	r0, #0
   298d8:	moveq	r0, #1
   298dc:	beq	29f60 <__assert_fail@plt+0x18b5c>
   298e0:	sub	r3, r7, #192	; 0xc0
   298e4:	cmp	r3, #5
   298e8:	bls	2a690 <__assert_fail@plt+0x1928c>
   298ec:	cmp	r7, #198	; 0xc6
   298f0:	beq	2a764 <__assert_fail@plt+0x19360>
   298f4:	cmp	r7, #199	; 0xc7
   298f8:	bne	2a6c4 <__assert_fail@plt+0x192c0>
   298fc:	cmp	r6, #0
   29900:	beq	2a85c <__assert_fail@plt+0x19458>
   29904:	ldr	r7, [sp, #32]
   29908:	adds	r8, r8, #4
   2990c:	adc	r9, r9, #0
   29910:	cmp	sl, #0
   29914:	cmpne	r7, #0
   29918:	movne	r3, #0
   2991c:	moveq	r3, #1
   29920:	beq	29b38 <__assert_fail@plt+0x18734>
   29924:	add	r1, sp, #76	; 0x4c
   29928:	str	r3, [sp, #20]
   2992c:	add	r2, sp, #112	; 0x70
   29930:	str	r1, [sp, #8]
   29934:	add	r3, sp, #120	; 0x78
   29938:	str	r2, [sp, #12]
   2993c:	strd	r8, [sp]
   29940:	mov	r1, r7
   29944:	ldr	r0, [sp, #44]	; 0x2c
   29948:	mov	r2, sl
   2994c:	str	r3, [sp, #16]
   29950:	bl	2652c <__assert_fail@plt+0x15128>
   29954:	cmp	r0, #0
   29958:	beq	29b38 <__assert_fail@plt+0x18734>
   2995c:	sub	r5, r5, #1
   29960:	mov	r4, #3
   29964:	ldr	r3, [sp, #76]	; 0x4c
   29968:	movw	r1, #15152	; 0x3b30
   2996c:	mov	r0, #1
   29970:	movt	r1, #6
   29974:	lsr	r6, r3, #24
   29978:	lsl	r3, r3, #8
   2997c:	str	r3, [sp, #76]	; 0x4c
   29980:	mov	r2, r6
   29984:	bl	1132c <__printf_chk@plt>
   29988:	cmp	r6, #0
   2998c:	beq	29cd0 <__assert_fail@plt+0x188cc>
   29990:	ands	r7, r6, #240	; 0xf0
   29994:	bne	29cd0 <__assert_fail@plt+0x188cc>
   29998:	movw	r1, #15200	; 0x3b60
   2999c:	mov	r0, #1
   299a0:	movt	r1, #6
   299a4:	and	r6, r6, #15
   299a8:	bl	1132c <__printf_chk@plt>
   299ac:	mov	r3, #1
   299b0:	mov	fp, r3
   299b4:	ands	ip, r6, fp, lsl r7
   299b8:	beq	299dc <__assert_fail@plt+0x185d8>
   299bc:	cmp	r3, #0
   299c0:	beq	2a8f4 <__assert_fail@plt+0x194f0>
   299c4:	movw	r1, #15376	; 0x3c10
   299c8:	mov	r0, #1
   299cc:	movt	r1, #6
   299d0:	mov	r2, r7
   299d4:	bl	1132c <__printf_chk@plt>
   299d8:	mov	r3, #0
   299dc:	add	r7, r7, #1
   299e0:	cmp	r7, #4
   299e4:	bne	299b4 <__assert_fail@plt+0x185b0>
   299e8:	mov	r0, #125	; 0x7d
   299ec:	bl	112fc <putchar@plt>
   299f0:	b	29a2c <__assert_fail@plt+0x18628>
   299f4:	cmp	r3, #0
   299f8:	bne	29b38 <__assert_fail@plt+0x18734>
   299fc:	cmp	r4, #1
   29a00:	movne	r6, #0
   29a04:	andeq	r6, r6, #1
   29a08:	sub	r4, r4, #1
   29a0c:	b	29834 <__assert_fail@plt+0x18430>
   29a10:	lsl	r7, r7, #2
   29a14:	movw	r1, #15112	; 0x3b08
   29a18:	mov	r0, #1
   29a1c:	movt	r1, #6
   29a20:	uxtb	r2, r7
   29a24:	add	r2, r2, #4
   29a28:	bl	1132c <__printf_chk@plt>
   29a2c:	mov	r0, #10
   29a30:	bl	112fc <putchar@plt>
   29a34:	b	297bc <__assert_fail@plt+0x183b8>
   29a38:	cmp	r6, #0
   29a3c:	beq	29b40 <__assert_fail@plt+0x1873c>
   29a40:	ldr	r4, [sp, #32]
   29a44:	adds	r8, r8, #4
   29a48:	adc	r9, r9, #0
   29a4c:	cmp	sl, #0
   29a50:	cmpne	r4, #0
   29a54:	movne	r3, #0
   29a58:	moveq	r3, #1
   29a5c:	beq	29b38 <__assert_fail@plt+0x18734>
   29a60:	add	r1, sp, #76	; 0x4c
   29a64:	str	r3, [sp, #20]
   29a68:	add	r2, sp, #112	; 0x70
   29a6c:	str	r1, [sp, #8]
   29a70:	add	r3, sp, #120	; 0x78
   29a74:	str	r2, [sp, #12]
   29a78:	strd	r8, [sp]
   29a7c:	mov	r1, r4
   29a80:	ldr	r0, [sp, #44]	; 0x2c
   29a84:	mov	r2, sl
   29a88:	str	r3, [sp, #16]
   29a8c:	bl	2652c <__assert_fail@plt+0x15128>
   29a90:	cmp	r0, #0
   29a94:	beq	29b38 <__assert_fail@plt+0x18734>
   29a98:	sub	r5, r5, #1
   29a9c:	mov	r4, #3
   29aa0:	ldr	r3, [sp, #76]	; 0x4c
   29aa4:	movw	r1, #15152	; 0x3b30
   29aa8:	mov	r0, #1
   29aac:	movt	r1, #6
   29ab0:	lsr	r6, r3, #24
   29ab4:	lsl	r3, r3, #8
   29ab8:	str	r3, [sp, #76]	; 0x4c
   29abc:	mov	r2, r6
   29ac0:	bl	1132c <__printf_chk@plt>
   29ac4:	cmp	r6, #0
   29ac8:	cmpeq	r7, #128	; 0x80
   29acc:	movne	fp, #0
   29ad0:	moveq	fp, #1
   29ad4:	bne	29b50 <__assert_fail@plt+0x1874c>
   29ad8:	movw	r1, #15180	; 0x3b4c
   29adc:	movt	r1, #6
   29ae0:	mov	r0, #0
   29ae4:	mov	r2, #5
   29ae8:	bl	11170 <dcgettext@plt>
   29aec:	mov	r1, r0
   29af0:	mov	r0, #1
   29af4:	bl	1132c <__printf_chk@plt>
   29af8:	b	29a2c <__assert_fail@plt+0x18628>
   29afc:	bic	r3, r7, #2
   29b00:	cmp	r3, #157	; 0x9d
   29b04:	bne	29ce0 <__assert_fail@plt+0x188dc>
   29b08:	movw	r1, #15212	; 0x3b6c
   29b0c:	mov	r0, #0
   29b10:	movt	r1, #6
   29b14:	b	29ae4 <__assert_fail@plt+0x186e0>
   29b18:	lsl	r7, r7, #2
   29b1c:	movw	r1, #15132	; 0x3b1c
   29b20:	mov	r0, #1
   29b24:	movt	r1, #6
   29b28:	uxtb	r2, r7
   29b2c:	add	r2, r2, #4
   29b30:	bl	1132c <__printf_chk@plt>
   29b34:	b	29a2c <__assert_fail@plt+0x18628>
   29b38:	ldr	fp, [sp, #40]	; 0x28
   29b3c:	b	29364 <__assert_fail@plt+0x17f60>
   29b40:	cmp	r4, #0
   29b44:	beq	2a704 <__assert_fail@plt+0x19300>
   29b48:	sub	r4, r4, #1
   29b4c:	b	29aa0 <__assert_fail@plt+0x1869c>
   29b50:	and	r7, r7, #15
   29b54:	movw	r1, #15200	; 0x3b60
   29b58:	mov	r0, #1
   29b5c:	movt	r1, #6
   29b60:	bl	1132c <__printf_chk@plt>
   29b64:	mov	r3, #1
   29b68:	orr	r7, r6, r7, lsl #8
   29b6c:	mov	r6, r3
   29b70:	b	29b98 <__assert_fail@plt+0x18794>
   29b74:	movw	r1, #15208	; 0x3b68
   29b78:	mov	r0, #1
   29b7c:	movt	r1, #6
   29b80:	add	r2, fp, #4
   29b84:	bl	1132c <__printf_chk@plt>
   29b88:	mov	r3, #0
   29b8c:	add	fp, fp, #1
   29b90:	cmp	fp, #12
   29b94:	beq	299e8 <__assert_fail@plt+0x185e4>
   29b98:	ands	ip, r7, r6, lsl fp
   29b9c:	beq	29b8c <__assert_fail@plt+0x18788>
   29ba0:	cmp	r3, #0
   29ba4:	bne	29b74 <__assert_fail@plt+0x18770>
   29ba8:	movw	r1, #556	; 0x22c
   29bac:	mov	r0, #1
   29bb0:	movt	r1, #6
   29bb4:	bl	1132c <__printf_chk@plt>
   29bb8:	b	29b74 <__assert_fail@plt+0x18770>
   29bbc:	cmp	r6, #0
   29bc0:	beq	29e8c <__assert_fail@plt+0x18a88>
   29bc4:	ldr	r4, [sp, #32]
   29bc8:	adds	r8, r8, #4
   29bcc:	adc	r9, r9, #0
   29bd0:	cmp	sl, #0
   29bd4:	cmpne	r4, #0
   29bd8:	movne	r3, #0
   29bdc:	moveq	r3, #1
   29be0:	beq	29b38 <__assert_fail@plt+0x18734>
   29be4:	add	r1, sp, #76	; 0x4c
   29be8:	str	r3, [sp, #20]
   29bec:	add	r2, sp, #112	; 0x70
   29bf0:	str	r1, [sp, #8]
   29bf4:	add	r3, sp, #120	; 0x78
   29bf8:	str	r2, [sp, #12]
   29bfc:	strd	r8, [sp]
   29c00:	mov	r1, r4
   29c04:	ldr	r0, [sp, #44]	; 0x2c
   29c08:	mov	r2, sl
   29c0c:	str	r3, [sp, #16]
   29c10:	bl	2652c <__assert_fail@plt+0x15128>
   29c14:	cmp	r0, #0
   29c18:	beq	29b38 <__assert_fail@plt+0x18734>
   29c1c:	sub	r5, r5, #1
   29c20:	mov	r4, #3
   29c24:	ldr	r6, [sp, #76]	; 0x4c
   29c28:	movw	r1, #15152	; 0x3b30
   29c2c:	mov	r0, #1
   29c30:	movt	r1, #6
   29c34:	lsr	r2, r6, #24
   29c38:	lsl	r3, r6, #8
   29c3c:	and	r7, r2, #15
   29c40:	str	r3, [sp, #76]	; 0x4c
   29c44:	lsr	r6, r6, #28
   29c48:	bl	1132c <__printf_chk@plt>
   29c4c:	cmp	fp, #0
   29c50:	movw	r1, #15312	; 0x3bd0
   29c54:	addne	r6, r6, #16
   29c58:	mov	r0, #1
   29c5c:	movt	r1, #6
   29c60:	mov	r2, r6
   29c64:	bl	1132c <__printf_chk@plt>
   29c68:	cmp	r7, #0
   29c6c:	beq	299e8 <__assert_fail@plt+0x185e4>
   29c70:	add	r2, r6, r7
   29c74:	movw	r1, #15324	; 0x3bdc
   29c78:	mov	r0, #1
   29c7c:	movt	r1, #6
   29c80:	bl	1132c <__printf_chk@plt>
   29c84:	b	299e8 <__assert_fail@plt+0x185e4>
   29c88:	cmp	r6, #0
   29c8c:	bne	29e9c <__assert_fail@plt+0x18a98>
   29c90:	cmp	r4, #0
   29c94:	beq	2a704 <__assert_fail@plt+0x19300>
   29c98:	sub	r4, r4, #1
   29c9c:	ldr	r3, [sp, #76]	; 0x4c
   29ca0:	movw	r1, #15152	; 0x3b30
   29ca4:	mov	r0, #1
   29ca8:	movt	r1, #6
   29cac:	lsr	r7, r3, #24
   29cb0:	lsl	r3, r3, #8
   29cb4:	str	r3, [sp, #76]	; 0x4c
   29cb8:	mov	r2, r7
   29cbc:	bl	1132c <__printf_chk@plt>
   29cc0:	cmp	r7, #0
   29cc4:	beq	29cd0 <__assert_fail@plt+0x188cc>
   29cc8:	ands	fp, r7, #240	; 0xf0
   29ccc:	beq	2a4f4 <__assert_fail@plt+0x190f0>
   29cd0:	movw	r1, #15272	; 0x3ba8
   29cd4:	mov	r0, #0
   29cd8:	movt	r1, #6
   29cdc:	b	29ae4 <__assert_fail@plt+0x186e0>
   29ce0:	and	r2, r7, #15
   29ce4:	movw	r1, #15228	; 0x3b7c
   29ce8:	mov	r0, #1
   29cec:	movt	r1, #6
   29cf0:	bl	1132c <__printf_chk@plt>
   29cf4:	b	29a2c <__assert_fail@plt+0x18628>
   29cf8:	mov	r2, #5
   29cfc:	movw	r1, #15412	; 0x3c34
   29d00:	mov	r0, #0
   29d04:	movt	r1, #6
   29d08:	bl	11170 <dcgettext@plt>
   29d0c:	bl	4b9ec <warn@@Base>
   29d10:	movw	r1, #15460	; 0x3c64
   29d14:	movt	r1, #6
   29d18:	mov	r0, #0
   29d1c:	mov	r2, #5
   29d20:	bl	11170 <dcgettext@plt>
   29d24:	mov	r1, r0
   29d28:	mov	r0, #1
   29d2c:	bl	1132c <__printf_chk@plt>
   29d30:	b	29364 <__assert_fail@plt+0x17f60>
   29d34:	mov	r6, #0
   29d38:	mov	r3, r4
   29d3c:	add	fp, sp, #76	; 0x4c
   29d40:	mov	r4, r6
   29d44:	mov	r6, r3
   29d48:	b	29de8 <__assert_fail@plt+0x189e4>
   29d4c:	ldr	r6, [sp, #32]
   29d50:	adds	r8, r8, #4
   29d54:	adc	r9, r9, #0
   29d58:	cmp	sl, #0
   29d5c:	cmpne	r6, #0
   29d60:	movne	ip, #0
   29d64:	moveq	ip, #1
   29d68:	beq	29b38 <__assert_fail@plt+0x18734>
   29d6c:	add	r3, sp, #120	; 0x78
   29d70:	strd	r8, [sp]
   29d74:	ldr	r0, [sp, #44]	; 0x2c
   29d78:	mov	r1, r6
   29d7c:	str	fp, [sp, #8]
   29d80:	add	r7, sp, #112	; 0x70
   29d84:	mov	r2, sl
   29d88:	str	r7, [sp, #12]
   29d8c:	str	r3, [sp, #16]
   29d90:	str	ip, [sp, #20]
   29d94:	bl	2652c <__assert_fail@plt+0x15128>
   29d98:	cmp	r0, #0
   29d9c:	beq	29b38 <__assert_fail@plt+0x18734>
   29da0:	sub	r5, r5, #1
   29da4:	mov	r6, #3
   29da8:	ldr	lr, [sp, #76]	; 0x4c
   29dac:	add	r7, sp, #256	; 0x100
   29db0:	movw	r1, #15152	; 0x3b30
   29db4:	mov	r0, #1
   29db8:	movt	r1, #6
   29dbc:	lsr	r2, lr, #24
   29dc0:	strb	r2, [r4, r7]
   29dc4:	lsl	lr, lr, #8
   29dc8:	str	lr, [sp, #76]	; 0x4c
   29dcc:	bl	1132c <__printf_chk@plt>
   29dd0:	ldrsb	r2, [r4, r7]
   29dd4:	cmp	r2, #0
   29dd8:	bge	2a718 <__assert_fail@plt+0x19314>
   29ddc:	add	r4, r4, #1
   29de0:	cmp	r4, #9
   29de4:	beq	29f94 <__assert_fail@plt+0x18b90>
   29de8:	adds	r2, r5, #0
   29dec:	movne	r2, #1
   29df0:	cmp	r6, #0
   29df4:	movne	r2, #0
   29df8:	cmp	r2, #0
   29dfc:	bne	29d4c <__assert_fail@plt+0x18948>
   29e00:	cmp	r6, #0
   29e04:	beq	2a6f8 <__assert_fail@plt+0x192f4>
   29e08:	sub	r6, r6, #1
   29e0c:	b	29da8 <__assert_fail@plt+0x189a4>
   29e10:	and	r6, r7, #7
   29e14:	movw	r1, #15244	; 0x3b8c
   29e18:	mov	r0, #1
   29e1c:	movt	r1, #6
   29e20:	add	r6, r6, #4
   29e24:	mov	fp, #4
   29e28:	bl	1132c <__printf_chk@plt>
   29e2c:	b	29e40 <__assert_fail@plt+0x18a3c>
   29e30:	movw	r1, #556	; 0x22c
   29e34:	mov	r0, #1
   29e38:	movt	r1, #6
   29e3c:	bl	1132c <__printf_chk@plt>
   29e40:	mov	r0, #1
   29e44:	mov	r2, fp
   29e48:	movw	r1, #15208	; 0x3b68
   29e4c:	add	fp, fp, r0
   29e50:	movt	r1, #6
   29e54:	bl	1132c <__printf_chk@plt>
   29e58:	cmp	r6, fp
   29e5c:	bge	29e30 <__assert_fail@plt+0x18a2c>
   29e60:	tst	r7, #8
   29e64:	beq	299e8 <__assert_fail@plt+0x185e4>
   29e68:	movw	r1, #556	; 0x22c
   29e6c:	mov	r0, #1
   29e70:	movt	r1, #6
   29e74:	bl	1132c <__printf_chk@plt>
   29e78:	movw	r1, #15256	; 0x3b98
   29e7c:	mov	r0, #1
   29e80:	movt	r1, #6
   29e84:	bl	1132c <__printf_chk@plt>
   29e88:	b	299e8 <__assert_fail@plt+0x185e4>
   29e8c:	cmp	r4, #0
   29e90:	beq	2a704 <__assert_fail@plt+0x19300>
   29e94:	sub	r4, r4, #1
   29e98:	b	29c24 <__assert_fail@plt+0x18820>
   29e9c:	ldr	r4, [sp, #32]
   29ea0:	adds	r8, r8, #4
   29ea4:	adc	r9, r9, #0
   29ea8:	cmp	sl, #0
   29eac:	cmpne	r4, #0
   29eb0:	movne	r3, #0
   29eb4:	moveq	r3, #1
   29eb8:	beq	29b38 <__assert_fail@plt+0x18734>
   29ebc:	add	r1, sp, #76	; 0x4c
   29ec0:	str	r3, [sp, #20]
   29ec4:	add	r2, sp, #112	; 0x70
   29ec8:	str	r1, [sp, #8]
   29ecc:	add	r3, sp, #120	; 0x78
   29ed0:	str	r2, [sp, #12]
   29ed4:	strd	r8, [sp]
   29ed8:	mov	r1, r4
   29edc:	ldr	r0, [sp, #44]	; 0x2c
   29ee0:	mov	r2, sl
   29ee4:	str	r3, [sp, #16]
   29ee8:	bl	2652c <__assert_fail@plt+0x15128>
   29eec:	cmp	r0, #0
   29ef0:	beq	29b38 <__assert_fail@plt+0x18734>
   29ef4:	sub	r5, r5, #1
   29ef8:	mov	r4, #3
   29efc:	b	29c9c <__assert_fail@plt+0x18898>
   29f00:	ldr	r3, [r4, #20]
   29f04:	mov	r2, #4
   29f08:	add	r8, r3, r8
   29f0c:	bl	16c84 <__assert_fail@plt+0x5880>
   29f10:	cmp	r8, #0
   29f14:	beq	2a844 <__assert_fail@plt+0x19440>
   29f18:	movw	r7, #16696	; 0x4138
   29f1c:	movt	r7, #9
   29f20:	mov	r2, #2
   29f24:	mov	r1, #1
   29f28:	ldr	r3, [r7]
   29f2c:	movw	r0, #14892	; 0x3a2c
   29f30:	movt	r0, #6
   29f34:	bl	111b8 <fwrite@plt>
   29f38:	ldr	r1, [r7]
   29f3c:	mov	r0, r8
   29f40:	bl	113d4 <fputs@plt>
   29f44:	ldr	r1, [r7]
   29f48:	mov	r0, #62	; 0x3e
   29f4c:	bl	11380 <fputc@plt>
   29f50:	ldr	r1, [r7]
   29f54:	mov	r0, #10
   29f58:	bl	11380 <fputc@plt>
   29f5c:	b	294a4 <__assert_fail@plt+0x180a0>
   29f60:	and	r7, r7, #7
   29f64:	movw	r1, #15332	; 0x3be4
   29f68:	mov	r0, #1
   29f6c:	movt	r1, #6
   29f70:	bl	1132c <__printf_chk@plt>
   29f74:	cmp	r7, #0
   29f78:	beq	299e8 <__assert_fail@plt+0x185e4>
   29f7c:	add	r2, r7, #8
   29f80:	movw	r1, #15324	; 0x3bdc
   29f84:	mov	r0, #1
   29f88:	movt	r1, #6
   29f8c:	bl	1132c <__printf_chk@plt>
   29f90:	b	299e8 <__assert_fail@plt+0x185e4>
   29f94:	movw	r1, #15832	; 0x3dd8
   29f98:	mov	r4, r6
   29f9c:	mov	r0, #0
   29fa0:	movt	r1, #6
   29fa4:	b	29ae4 <__assert_fail@plt+0x186e0>
   29fa8:	ldr	r3, [sp, #68]	; 0x44
   29fac:	movw	r6, #16696	; 0x4138
   29fb0:	movw	r7, #19132	; 0x4abc
   29fb4:	movt	r6, #9
   29fb8:	movt	r7, #5
   29fbc:	str	r6, [sp, #56]	; 0x38
   29fc0:	str	r7, [sp, #52]	; 0x34
   29fc4:	str	r3, [sp, #80]	; 0x50
   29fc8:	ldr	r9, [sp, #40]	; 0x28
   29fcc:	str	fp, [sp, #60]	; 0x3c
   29fd0:	b	2a0d8 <__assert_fail@plt+0x18cd4>
   29fd4:	add	r2, sp, #512	; 0x200
   29fd8:	ldrd	r0, [r2, #-200]	; 0xffffff38
   29fdc:	adds	r0, r0, #4
   29fe0:	adc	r1, r1, #0
   29fe4:	cmp	sl, #0
   29fe8:	cmpne	r9, #0
   29fec:	strd	r0, [r2, #-200]	; 0xffffff38
   29ff0:	movne	r6, #0
   29ff4:	moveq	r6, #1
   29ff8:	beq	2a224 <__assert_fail@plt+0x18e20>
   29ffc:	strd	r0, [sp]
   2a000:	add	r3, sp, #80	; 0x50
   2a004:	add	r2, sp, #112	; 0x70
   2a008:	str	r3, [sp, #8]
   2a00c:	str	r2, [sp, #12]
   2a010:	add	r3, sp, #120	; 0x78
   2a014:	str	r6, [sp, #20]
   2a018:	mov	r1, r9
   2a01c:	ldr	r0, [sp, #44]	; 0x2c
   2a020:	mov	r2, sl
   2a024:	str	r3, [sp, #16]
   2a028:	bl	2652c <__assert_fail@plt+0x15128>
   2a02c:	cmp	r0, #0
   2a030:	beq	2a224 <__assert_fail@plt+0x18e20>
   2a034:	sub	r5, r5, #1
   2a038:	mov	r4, #3
   2a03c:	ldr	r3, [sp, #80]	; 0x50
   2a040:	movw	r1, #15100	; 0x3afc
   2a044:	mov	r0, #1
   2a048:	movt	r1, #6
   2a04c:	lsr	r8, r3, #24
   2a050:	lsl	r3, r3, #8
   2a054:	str	r3, [sp, #80]	; 0x50
   2a058:	mov	r2, r8
   2a05c:	bl	1132c <__printf_chk@plt>
   2a060:	ands	r3, r8, #192	; 0xc0
   2a064:	beq	2a10c <__assert_fail@plt+0x18d08>
   2a068:	cmp	r3, #128	; 0x80
   2a06c:	beq	2a134 <__assert_fail@plt+0x18d30>
   2a070:	and	r3, r8, #240	; 0xf0
   2a074:	cmp	r3, #192	; 0xc0
   2a078:	beq	2a258 <__assert_fail@plt+0x18e54>
   2a07c:	cmp	r8, #208	; 0xd0
   2a080:	beq	2a658 <__assert_fail@plt+0x19254>
   2a084:	cmp	r8, #209	; 0xd1
   2a088:	beq	2a674 <__assert_fail@plt+0x19270>
   2a08c:	cmp	r8, #210	; 0xd2
   2a090:	beq	2a3b8 <__assert_fail@plt+0x18fb4>
   2a094:	cmp	r3, #224	; 0xe0
   2a098:	bne	2a22c <__assert_fail@plt+0x18e28>
   2a09c:	and	r8, r8, #15
   2a0a0:	cmp	r8, #7
   2a0a4:	beq	2a828 <__assert_fail@plt+0x19424>
   2a0a8:	ldr	r7, [sp, #52]	; 0x34
   2a0ac:	movw	r1, #15600	; 0x3cf0
   2a0b0:	mov	r0, #1
   2a0b4:	movt	r1, #6
   2a0b8:	add	r8, r7, r8, lsl #2
   2a0bc:	movw	r7, #16696	; 0x4138
   2a0c0:	movt	r7, #9
   2a0c4:	ldr	r2, [r8, #560]	; 0x230
   2a0c8:	bl	1132c <__printf_chk@plt>
   2a0cc:	ldr	r1, [r7]
   2a0d0:	mov	r0, #10
   2a0d4:	bl	111ac <_IO_putc@plt>
   2a0d8:	rsbs	r3, r4, #1
   2a0dc:	movcc	r3, #0
   2a0e0:	adds	r6, r5, #0
   2a0e4:	movne	r6, #1
   2a0e8:	tst	r6, r3
   2a0ec:	bne	29fd4 <__assert_fail@plt+0x18bd0>
   2a0f0:	cmp	r3, #0
   2a0f4:	bne	2a224 <__assert_fail@plt+0x18e20>
   2a0f8:	cmp	r4, #1
   2a0fc:	movne	r6, #0
   2a100:	andeq	r6, r6, #1
   2a104:	sub	r4, r4, #1
   2a108:	b	2a03c <__assert_fail@plt+0x18c38>
   2a10c:	and	r8, r8, #63	; 0x3f
   2a110:	movw	r1, #15476	; 0x3c74
   2a114:	mov	r0, #1
   2a118:	movt	r1, #6
   2a11c:	lsl	r2, r8, #3
   2a120:	movw	r7, #16696	; 0x4138
   2a124:	add	r2, r2, #8
   2a128:	movt	r7, #9
   2a12c:	bl	1132c <__printf_chk@plt>
   2a130:	b	2a0cc <__assert_fail@plt+0x18cc8>
   2a134:	cmp	r6, #0
   2a138:	beq	2a380 <__assert_fail@plt+0x18f7c>
   2a13c:	add	ip, sp, #512	; 0x200
   2a140:	ldrd	r6, [ip, #-200]	; 0xffffff38
   2a144:	adds	r6, r6, #4
   2a148:	adc	r7, r7, #0
   2a14c:	cmp	sl, #0
   2a150:	cmpne	r9, #0
   2a154:	strd	r6, [ip, #-200]	; 0xffffff38
   2a158:	movne	r3, #0
   2a15c:	moveq	r3, #1
   2a160:	beq	2a224 <__assert_fail@plt+0x18e20>
   2a164:	add	r1, sp, #80	; 0x50
   2a168:	str	r3, [sp, #20]
   2a16c:	add	r2, sp, #112	; 0x70
   2a170:	str	r1, [sp, #8]
   2a174:	add	r3, sp, #120	; 0x78
   2a178:	str	r2, [sp, #12]
   2a17c:	strd	r6, [sp]
   2a180:	mov	r1, r9
   2a184:	ldr	r0, [sp, #44]	; 0x2c
   2a188:	mov	r2, sl
   2a18c:	str	r3, [sp, #16]
   2a190:	bl	2652c <__assert_fail@plt+0x15128>
   2a194:	cmp	r0, #0
   2a198:	beq	2a224 <__assert_fail@plt+0x18e20>
   2a19c:	sub	r5, r5, #1
   2a1a0:	mov	r4, #3
   2a1a4:	ldr	r3, [sp, #80]	; 0x50
   2a1a8:	movw	r1, #15152	; 0x3b30
   2a1ac:	mov	r0, #1
   2a1b0:	movt	r1, #6
   2a1b4:	lsr	r6, r3, #24
   2a1b8:	lsl	r3, r3, #8
   2a1bc:	str	r3, [sp, #80]	; 0x50
   2a1c0:	mov	r2, r6
   2a1c4:	bl	1132c <__printf_chk@plt>
   2a1c8:	cmp	r6, #0
   2a1cc:	cmpeq	r8, #128	; 0x80
   2a1d0:	movweq	r1, #15180	; 0x3b4c
   2a1d4:	moveq	r0, #0
   2a1d8:	movteq	r1, #6
   2a1dc:	beq	2a238 <__assert_fail@plt+0x18e34>
   2a1e0:	tst	r8, #32
   2a1e4:	and	r8, r8, #31
   2a1e8:	movw	r7, #16696	; 0x4138
   2a1ec:	movt	r7, #9
   2a1f0:	orr	r6, r6, r8, lsl #8
   2a1f4:	movwne	r1, #15496	; 0x3c88
   2a1f8:	movweq	r1, #15200	; 0x3b60
   2a1fc:	movne	r0, #1
   2a200:	movtne	r1, #6
   2a204:	moveq	r0, #1
   2a208:	movteq	r1, #6
   2a20c:	bl	1132c <__printf_chk@plt>
   2a210:	mov	r0, r6
   2a214:	bl	18460 <__assert_fail@plt+0x705c>
   2a218:	mov	r0, #125	; 0x7d
   2a21c:	bl	112fc <putchar@plt>
   2a220:	b	2a0cc <__assert_fail@plt+0x18cc8>
   2a224:	ldr	fp, [sp, #60]	; 0x3c
   2a228:	b	29364 <__assert_fail@plt+0x17f60>
   2a22c:	movw	r1, #15384	; 0x3c18
   2a230:	movt	r1, #6
   2a234:	mov	r0, #0
   2a238:	mov	r2, #5
   2a23c:	movw	r7, #16696	; 0x4138
   2a240:	bl	11170 <dcgettext@plt>
   2a244:	movt	r7, #9
   2a248:	mov	r1, r0
   2a24c:	mov	r0, #1
   2a250:	bl	1132c <__printf_chk@plt>
   2a254:	b	2a0cc <__assert_fail@plt+0x18cc8>
   2a258:	ands	r8, r8, #15
   2a25c:	str	r8, [sp, #32]
   2a260:	beq	2a908 <__assert_fail@plt+0x19504>
   2a264:	mov	r6, #0
   2a268:	mov	fp, r6
   2a26c:	b	2a358 <__assert_fail@plt+0x18f54>
   2a270:	add	r4, sp, #512	; 0x200
   2a274:	ldrd	r2, [r4, #-200]	; 0xffffff38
   2a278:	adds	r2, r2, #4
   2a27c:	adc	r3, r3, #0
   2a280:	cmp	sl, #0
   2a284:	cmpne	r9, #0
   2a288:	strd	r2, [r4, #-200]	; 0xffffff38
   2a28c:	movne	r3, #0
   2a290:	moveq	r3, #1
   2a294:	beq	2a224 <__assert_fail@plt+0x18e20>
   2a298:	ldrd	r0, [r4, #-200]	; 0xffffff38
   2a29c:	add	r2, sp, #80	; 0x50
   2a2a0:	add	r4, sp, #112	; 0x70
   2a2a4:	str	r2, [sp, #8]
   2a2a8:	str	r4, [sp, #12]
   2a2ac:	mov	r2, sl
   2a2b0:	strd	r0, [sp]
   2a2b4:	add	r7, sp, #120	; 0x78
   2a2b8:	ldr	r0, [sp, #44]	; 0x2c
   2a2bc:	mov	r1, r9
   2a2c0:	str	r7, [sp, #16]
   2a2c4:	str	r3, [sp, #20]
   2a2c8:	bl	2652c <__assert_fail@plt+0x15128>
   2a2cc:	cmp	r0, #0
   2a2d0:	beq	2a224 <__assert_fail@plt+0x18e20>
   2a2d4:	sub	r5, r5, #1
   2a2d8:	mov	r4, #3
   2a2dc:	ldr	r7, [sp, #80]	; 0x50
   2a2e0:	movw	r1, #15152	; 0x3b30
   2a2e4:	mov	r0, #1
   2a2e8:	movt	r1, #6
   2a2ec:	lsr	r8, r7, #24
   2a2f0:	lsl	r2, r7, #8
   2a2f4:	str	r2, [sp, #80]	; 0x50
   2a2f8:	lsr	r7, r7, #28
   2a2fc:	mov	r2, r8
   2a300:	bl	1132c <__printf_chk@plt>
   2a304:	cmp	r7, #15
   2a308:	addne	ip, sp, #272	; 0x110
   2a30c:	and	r3, r8, #15
   2a310:	lslne	r1, fp, #1
   2a314:	addne	r2, ip, r6, lsl #3
   2a318:	addne	r6, r6, #1
   2a31c:	strne	r7, [r2, #-140]	; 0xffffff74
   2a320:	strne	r1, [r2, #-144]	; 0xffffff70
   2a324:	cmp	r3, #15
   2a328:	beq	2a348 <__assert_fail@plt+0x18f44>
   2a32c:	add	r0, sp, #272	; 0x110
   2a330:	lsl	r1, fp, #1
   2a334:	add	r2, r0, r6, lsl #3
   2a338:	add	r6, r6, #1
   2a33c:	add	r1, r1, #1
   2a340:	str	r3, [r2, #-140]	; 0xffffff74
   2a344:	str	r1, [r2, #-144]	; 0xffffff70
   2a348:	ldr	r3, [sp, #32]
   2a34c:	add	fp, fp, #1
   2a350:	cmp	r3, r6
   2a354:	bls	2a55c <__assert_fail@plt+0x19158>
   2a358:	adds	r3, r5, #0
   2a35c:	movne	r3, #1
   2a360:	cmp	r4, #0
   2a364:	movne	r3, #0
   2a368:	cmp	r3, #0
   2a36c:	bne	2a270 <__assert_fail@plt+0x18e6c>
   2a370:	cmp	r4, #0
   2a374:	beq	2a4a8 <__assert_fail@plt+0x190a4>
   2a378:	sub	r4, r4, #1
   2a37c:	b	2a2dc <__assert_fail@plt+0x18ed8>
   2a380:	cmp	r4, #0
   2a384:	beq	2a4a8 <__assert_fail@plt+0x190a4>
   2a388:	sub	r4, r4, #1
   2a38c:	b	2a1a4 <__assert_fail@plt+0x18da0>
   2a390:	mov	r2, #5
   2a394:	movw	r1, #15736	; 0x3d78
   2a398:	mov	r0, #0
   2a39c:	movt	r1, #6
   2a3a0:	bl	11170 <dcgettext@plt>
   2a3a4:	mov	r2, r7
   2a3a8:	mov	r1, r0
   2a3ac:	mov	r0, #1
   2a3b0:	bl	1132c <__printf_chk@plt>
   2a3b4:	b	29364 <__assert_fail@plt+0x17f60>
   2a3b8:	add	r0, sp, #512	; 0x200
   2a3bc:	mov	r7, #0
   2a3c0:	str	sl, [sp, #32]
   2a3c4:	add	r6, sp, #80	; 0x50
   2a3c8:	mov	sl, r4
   2a3cc:	str	r9, [sp, #48]	; 0x30
   2a3d0:	add	fp, sp, #112	; 0x70
   2a3d4:	mov	r9, r7
   2a3d8:	mov	r7, r5
   2a3dc:	ldrd	r4, [r0, #-200]	; 0xffffff38
   2a3e0:	b	2a480 <__assert_fail@plt+0x1907c>
   2a3e4:	ldr	r3, [sp, #48]	; 0x30
   2a3e8:	adds	r4, r4, #4
   2a3ec:	ldr	r8, [sp, #32]
   2a3f0:	adc	r5, r5, #0
   2a3f4:	cmp	r8, #0
   2a3f8:	cmpne	r3, #0
   2a3fc:	movne	ip, #0
   2a400:	moveq	ip, #1
   2a404:	beq	2a224 <__assert_fail@plt+0x18e20>
   2a408:	mov	r1, r3
   2a40c:	strd	r4, [sp]
   2a410:	add	r3, sp, #120	; 0x78
   2a414:	ldr	r0, [sp, #44]	; 0x2c
   2a418:	str	r6, [sp, #8]
   2a41c:	mov	r2, r8
   2a420:	str	fp, [sp, #12]
   2a424:	str	r3, [sp, #16]
   2a428:	str	ip, [sp, #20]
   2a42c:	bl	2652c <__assert_fail@plt+0x15128>
   2a430:	cmp	r0, #0
   2a434:	beq	2a224 <__assert_fail@plt+0x18e20>
   2a438:	sub	r7, r7, #1
   2a43c:	mov	sl, #3
   2a440:	ldr	lr, [sp, #80]	; 0x50
   2a444:	add	r8, sp, #256	; 0x100
   2a448:	movw	r1, #15152	; 0x3b30
   2a44c:	mov	r0, #1
   2a450:	movt	r1, #6
   2a454:	lsr	r2, lr, #24
   2a458:	strb	r2, [r9, r8]
   2a45c:	lsl	lr, lr, #8
   2a460:	str	lr, [sp, #80]	; 0x50
   2a464:	bl	1132c <__printf_chk@plt>
   2a468:	ldrsb	r2, [r9, r8]
   2a46c:	cmp	r2, #0
   2a470:	bge	2a87c <__assert_fail@plt+0x19478>
   2a474:	add	r9, r9, #1
   2a478:	cmp	r9, #9
   2a47c:	beq	2a62c <__assert_fail@plt+0x19228>
   2a480:	adds	r2, r7, #0
   2a484:	movne	r2, #1
   2a488:	cmp	sl, #0
   2a48c:	movne	r2, #0
   2a490:	cmp	r2, #0
   2a494:	bne	2a3e4 <__assert_fail@plt+0x18fe0>
   2a498:	cmp	sl, #0
   2a49c:	subne	sl, sl, #1
   2a4a0:	bne	2a440 <__assert_fail@plt+0x1903c>
   2a4a4:	mov	r4, sl
   2a4a8:	ldr	fp, [sp, #60]	; 0x3c
   2a4ac:	mov	r0, r4
   2a4b0:	mov	r2, #5
   2a4b4:	movw	r1, #15160	; 0x3b38
   2a4b8:	movt	r1, #6
   2a4bc:	bl	11170 <dcgettext@plt>
   2a4c0:	mov	r1, r0
   2a4c4:	mov	r0, #1
   2a4c8:	bl	1132c <__printf_chk@plt>
   2a4cc:	b	29364 <__assert_fail@plt+0x17f60>
   2a4d0:	mov	r2, #5
   2a4d4:	movw	r1, #15616	; 0x3d00
   2a4d8:	mov	r0, #0
   2a4dc:	movt	r1, #6
   2a4e0:	bl	11170 <dcgettext@plt>
   2a4e4:	mov	r1, r0
   2a4e8:	mov	r0, #1
   2a4ec:	bl	1132c <__printf_chk@plt>
   2a4f0:	b	295f0 <__assert_fail@plt+0x181ec>
   2a4f4:	movw	r1, #15200	; 0x3b60
   2a4f8:	mov	r0, #1
   2a4fc:	movt	r1, #6
   2a500:	and	r7, r7, #15
   2a504:	bl	1132c <__printf_chk@plt>
   2a508:	mov	r3, #1
   2a50c:	mov	r6, r3
   2a510:	b	2a538 <__assert_fail@plt+0x19134>
   2a514:	movw	r1, #15208	; 0x3b68
   2a518:	mov	r0, #1
   2a51c:	movt	r1, #6
   2a520:	mov	r2, fp
   2a524:	bl	1132c <__printf_chk@plt>
   2a528:	mov	r3, #0
   2a52c:	add	fp, fp, #1
   2a530:	cmp	fp, #12
   2a534:	beq	299e8 <__assert_fail@plt+0x185e4>
   2a538:	ands	ip, r7, r6, lsl fp
   2a53c:	beq	2a52c <__assert_fail@plt+0x19128>
   2a540:	cmp	r3, #0
   2a544:	bne	2a514 <__assert_fail@plt+0x19110>
   2a548:	movw	r1, #556	; 0x22c
   2a54c:	mov	r0, #1
   2a550:	movt	r1, #6
   2a554:	bl	1132c <__printf_chk@plt>
   2a558:	b	2a514 <__assert_fail@plt+0x19110>
   2a55c:	mov	r2, #5
   2a560:	movw	r1, #15512	; 0x3c98
   2a564:	mov	r0, #0
   2a568:	movt	r1, #6
   2a56c:	bl	11170 <dcgettext@plt>
   2a570:	movw	r7, #16696	; 0x4138
   2a574:	sub	r6, r6, #1
   2a578:	movt	r7, #9
   2a57c:	mov	r1, r0
   2a580:	mov	r0, #1
   2a584:	bl	1132c <__printf_chk@plt>
   2a588:	lsls	r8, fp, #1
   2a58c:	beq	2a620 <__assert_fail@plt+0x1921c>
   2a590:	str	r5, [sp, #48]	; 0x30
   2a594:	str	r4, [sp, #64]	; 0x40
   2a598:	ldr	r5, [sp, #56]	; 0x38
   2a59c:	ldr	fp, [sp, #52]	; 0x34
   2a5a0:	b	2a5dc <__assert_fail@plt+0x191d8>
   2a5a4:	ldr	r3, [r2, #4]
   2a5a8:	cmp	r6, #0
   2a5ac:	subne	r6, r6, #1
   2a5b0:	add	r3, fp, r3, lsl #2
   2a5b4:	ldr	r0, [r3, #560]	; 0x230
   2a5b8:	ldr	r1, [r5]
   2a5bc:	bl	113d4 <fputs@plt>
   2a5c0:	cmp	r8, #1
   2a5c4:	bls	2a610 <__assert_fail@plt+0x1920c>
   2a5c8:	movw	r1, #556	; 0x22c
   2a5cc:	mov	r0, #1
   2a5d0:	movt	r1, #6
   2a5d4:	bl	1132c <__printf_chk@plt>
   2a5d8:	mov	r8, r4
   2a5dc:	add	ip, sp, #272	; 0x110
   2a5e0:	sub	r4, r8, #1
   2a5e4:	add	r3, ip, r6, lsl #3
   2a5e8:	sub	r2, r3, #144	; 0x90
   2a5ec:	ldr	r3, [r3, #-144]	; 0xffffff70
   2a5f0:	cmp	r3, r4
   2a5f4:	beq	2a5a4 <__assert_fail@plt+0x191a0>
   2a5f8:	movw	r1, #15524	; 0x3ca4
   2a5fc:	mov	r2, #5
   2a600:	movt	r1, #6
   2a604:	mov	r0, #0
   2a608:	bl	11170 <dcgettext@plt>
   2a60c:	b	2a5b8 <__assert_fail@plt+0x191b4>
   2a610:	cmp	r4, #0
   2a614:	bne	2a5d8 <__assert_fail@plt+0x191d4>
   2a618:	ldr	r5, [sp, #48]	; 0x30
   2a61c:	ldr	r4, [sp, #64]	; 0x40
   2a620:	mov	r0, #125	; 0x7d
   2a624:	bl	112fc <putchar@plt>
   2a628:	b	2a0cc <__assert_fail@plt+0x18cc8>
   2a62c:	movw	r0, #15856	; 0x3df0
   2a630:	movt	r0, #6
   2a634:	ldr	fp, [sp, #60]	; 0x3c
   2a638:	bl	11218 <puts@plt>
   2a63c:	mov	r2, #5
   2a640:	movw	r1, #15876	; 0x3e04
   2a644:	mov	r0, #0
   2a648:	movt	r1, #6
   2a64c:	bl	11170 <dcgettext@plt>
   2a650:	bl	4b9ec <warn@@Base>
   2a654:	b	29364 <__assert_fail@plt+0x17f60>
   2a658:	movw	r1, #15532	; 0x3cac
   2a65c:	mov	r0, #1
   2a660:	movt	r1, #6
   2a664:	movw	r7, #16696	; 0x4138
   2a668:	bl	1132c <__printf_chk@plt>
   2a66c:	movt	r7, #9
   2a670:	b	2a0cc <__assert_fail@plt+0x18cc8>
   2a674:	movw	r1, #15548	; 0x3cbc
   2a678:	mov	r0, #1
   2a67c:	movt	r1, #6
   2a680:	movw	r7, #16696	; 0x4138
   2a684:	bl	1132c <__printf_chk@plt>
   2a688:	movt	r7, #9
   2a68c:	b	2a0cc <__assert_fail@plt+0x18cc8>
   2a690:	and	r7, r7, #7
   2a694:	movw	r1, #15340	; 0x3bec
   2a698:	mov	r0, #1
   2a69c:	movt	r1, #6
   2a6a0:	bl	1132c <__printf_chk@plt>
   2a6a4:	cmp	r7, #0
   2a6a8:	beq	299e8 <__assert_fail@plt+0x185e4>
   2a6ac:	add	r2, r7, #10
   2a6b0:	movw	r1, #15356	; 0x3bfc
   2a6b4:	mov	r0, #1
   2a6b8:	movt	r1, #6
   2a6bc:	bl	1132c <__printf_chk@plt>
   2a6c0:	b	299e8 <__assert_fail@plt+0x185e4>
   2a6c4:	mov	r2, #5
   2a6c8:	movw	r1, #15384	; 0x3c18
   2a6cc:	movt	r1, #6
   2a6d0:	bl	11170 <dcgettext@plt>
   2a6d4:	mov	r1, r0
   2a6d8:	mov	r0, #1
   2a6dc:	bl	1132c <__printf_chk@plt>
   2a6e0:	b	29a2c <__assert_fail@plt+0x18628>
   2a6e4:	movw	r1, #15700	; 0x3d54
   2a6e8:	mov	r0, #1
   2a6ec:	movt	r1, #6
   2a6f0:	bl	1132c <__printf_chk@plt>
   2a6f4:	b	29618 <__assert_fail@plt+0x18214>
   2a6f8:	mov	r4, r6
   2a6fc:	ldr	fp, [sp, #40]	; 0x28
   2a700:	b	2a4ac <__assert_fail@plt+0x190a8>
   2a704:	movw	r1, #15160	; 0x3b38
   2a708:	ldr	fp, [sp, #40]	; 0x28
   2a70c:	mov	r0, #0
   2a710:	movt	r1, #6
   2a714:	b	29d1c <__assert_fail@plt+0x18918>
   2a718:	mov	r3, r6
   2a71c:	mov	r6, r4
   2a720:	add	r6, r6, #1
   2a724:	mov	r4, r3
   2a728:	mov	r0, r7
   2a72c:	add	r3, r7, r6
   2a730:	add	r1, sp, #84	; 0x54
   2a734:	mov	r2, #0
   2a738:	bl	3a350 <__assert_fail@plt+0x28f4c>
   2a73c:	ldr	r3, [sp, #84]	; 0x54
   2a740:	cmp	r6, r3
   2a744:	bne	2a938 <__assert_fail@plt+0x19534>
   2a748:	add	r2, r0, #129	; 0x81
   2a74c:	movw	r1, #15296	; 0x3bc0
   2a750:	mov	r0, #1
   2a754:	movt	r1, #6
   2a758:	lsl	r2, r2, #2
   2a75c:	bl	1132c <__printf_chk@plt>
   2a760:	b	29a2c <__assert_fail@plt+0x18628>
   2a764:	cmp	r6, #0
   2a768:	beq	2a86c <__assert_fail@plt+0x19468>
   2a76c:	ldr	r6, [sp, #32]
   2a770:	adds	r8, r8, #4
   2a774:	adc	r9, r9, #0
   2a778:	cmp	sl, #0
   2a77c:	cmpne	r6, #0
   2a780:	movne	r3, #0
   2a784:	moveq	r3, #1
   2a788:	beq	29b38 <__assert_fail@plt+0x18734>
   2a78c:	add	r1, sp, #76	; 0x4c
   2a790:	str	r3, [sp, #20]
   2a794:	add	r2, sp, #112	; 0x70
   2a798:	str	r1, [sp, #8]
   2a79c:	add	r3, sp, #120	; 0x78
   2a7a0:	str	r2, [sp, #12]
   2a7a4:	strd	r8, [sp]
   2a7a8:	mov	r1, r6
   2a7ac:	ldr	r0, [sp, #44]	; 0x2c
   2a7b0:	mov	r2, sl
   2a7b4:	str	r3, [sp, #16]
   2a7b8:	bl	2652c <__assert_fail@plt+0x15128>
   2a7bc:	cmp	r0, #0
   2a7c0:	beq	29b38 <__assert_fail@plt+0x18734>
   2a7c4:	sub	r5, r5, #1
   2a7c8:	mov	r4, #3
   2a7cc:	ldr	r3, [sp, #76]	; 0x4c
   2a7d0:	movw	r1, #15152	; 0x3b30
   2a7d4:	mov	r0, #1
   2a7d8:	movt	r1, #6
   2a7dc:	lsr	r6, r3, #28
   2a7e0:	lsr	r2, r3, #24
   2a7e4:	and	r7, r2, #15
   2a7e8:	lsl	r3, r3, #8
   2a7ec:	str	r3, [sp, #76]	; 0x4c
   2a7f0:	bl	1132c <__printf_chk@plt>
   2a7f4:	mov	r2, r6
   2a7f8:	movw	r1, #15364	; 0x3c04
   2a7fc:	mov	r0, #1
   2a800:	movt	r1, #6
   2a804:	bl	1132c <__printf_chk@plt>
   2a808:	cmp	r7, #0
   2a80c:	beq	299e8 <__assert_fail@plt+0x185e4>
   2a810:	add	r2, r7, r6
   2a814:	movw	r1, #15356	; 0x3bfc
   2a818:	mov	r0, #1
   2a81c:	movt	r1, #6
   2a820:	bl	1132c <__printf_chk@plt>
   2a824:	b	299e8 <__assert_fail@plt+0x185e4>
   2a828:	movw	r1, #15588	; 0x3ce4
   2a82c:	mov	r0, #1
   2a830:	movt	r1, #6
   2a834:	movw	r7, #16696	; 0x4138
   2a838:	bl	1132c <__printf_chk@plt>
   2a83c:	movt	r7, #9
   2a840:	b	2a0cc <__assert_fail@plt+0x18cc8>
   2a844:	movw	r3, #16696	; 0x4138
   2a848:	movt	r3, #9
   2a84c:	mov	r0, #10
   2a850:	ldr	r1, [r3]
   2a854:	bl	11380 <fputc@plt>
   2a858:	b	29364 <__assert_fail@plt+0x17f60>
   2a85c:	cmp	r4, #0
   2a860:	beq	2a704 <__assert_fail@plt+0x19300>
   2a864:	sub	r4, r4, #1
   2a868:	b	29964 <__assert_fail@plt+0x18560>
   2a86c:	cmp	r4, #0
   2a870:	beq	2a704 <__assert_fail@plt+0x19300>
   2a874:	sub	r4, r4, #1
   2a878:	b	2a7cc <__assert_fail@plt+0x193c8>
   2a87c:	add	r6, sp, #512	; 0x200
   2a880:	mov	r0, r8
   2a884:	add	r1, sp, #84	; 0x54
   2a888:	mov	r2, #0
   2a88c:	strd	r4, [r6, #-200]	; 0xffffff38
   2a890:	mov	r5, r7
   2a894:	mov	r7, r9
   2a898:	add	r7, r7, #1
   2a89c:	add	r3, r8, r7
   2a8a0:	mov	r4, sl
   2a8a4:	ldr	r9, [sp, #48]	; 0x30
   2a8a8:	ldr	sl, [sp, #32]
   2a8ac:	bl	3a350 <__assert_fail@plt+0x28f4c>
   2a8b0:	ldr	r3, [sp, #84]	; 0x54
   2a8b4:	cmp	r7, r3
   2a8b8:	mov	r6, r0
   2a8bc:	bne	2a954 <__assert_fail@plt+0x19550>
   2a8c0:	mov	r2, #5
   2a8c4:	movw	r1, #15572	; 0x3cd4
   2a8c8:	mov	r0, #0
   2a8cc:	movt	r1, #6
   2a8d0:	bl	11170 <dcgettext@plt>
   2a8d4:	add	r2, r6, #129	; 0x81
   2a8d8:	movw	r7, #16696	; 0x4138
   2a8dc:	movt	r7, #9
   2a8e0:	lsl	r2, r2, #3
   2a8e4:	mov	r1, r0
   2a8e8:	mov	r0, #1
   2a8ec:	bl	1132c <__printf_chk@plt>
   2a8f0:	b	2a0cc <__assert_fail@plt+0x18cc8>
   2a8f4:	movw	r1, #556	; 0x22c
   2a8f8:	mov	r0, #1
   2a8fc:	movt	r1, #6
   2a900:	bl	1132c <__printf_chk@plt>
   2a904:	b	299c4 <__assert_fail@plt+0x185c0>
   2a908:	mov	r2, #5
   2a90c:	ldr	r0, [sp, #32]
   2a910:	movw	r1, #15512	; 0x3c98
   2a914:	movt	r1, #6
   2a918:	bl	11170 <dcgettext@plt>
   2a91c:	movw	r7, #16696	; 0x4138
   2a920:	movt	r7, #9
   2a924:	mov	r1, r0
   2a928:	mov	r0, #1
   2a92c:	bl	1132c <__printf_chk@plt>
   2a930:	b	2a620 <__assert_fail@plt+0x1921c>
   2a934:	bl	1117c <__stack_chk_fail@plt>
   2a938:	movw	r0, #15280	; 0x3bb0
   2a93c:	movw	r1, #64464	; 0xfbd0
   2a940:	movt	r0, #6
   2a944:	movt	r1, #5
   2a948:	movw	r2, #8078	; 0x1f8e
   2a94c:	ldr	r3, [pc, #28]	; 2a970 <__assert_fail@plt+0x1956c>
   2a950:	bl	11404 <__assert_fail@plt>
   2a954:	movw	r0, #15280	; 0x3bb0
   2a958:	movw	r1, #64464	; 0xfbd0
   2a95c:	movt	r0, #6
   2a960:	movt	r1, #5
   2a964:	movw	r2, #8284	; 0x205c
   2a968:	ldr	r3, [pc, #4]	; 2a974 <__assert_fail@plt+0x19570>
   2a96c:	bl	11404 <__assert_fail@plt>
   2a970:	andeq	fp, r5, r8, ror r9
   2a974:	muleq	r5, r4, r9
   2a978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a97c:	movw	r7, #16712	; 0x4148
   2a980:	movt	r7, #9
   2a984:	movw	r4, #16680	; 0x4128
   2a988:	movt	r4, #9
   2a98c:	sub	sp, sp, #196	; 0xc4
   2a990:	ldrh	r3, [r7, #50]	; 0x32
   2a994:	mov	fp, r0
   2a998:	ldr	r2, [r4]
   2a99c:	cmp	r3, #40	; 0x28
   2a9a0:	str	r4, [sp, #60]	; 0x3c
   2a9a4:	str	r2, [sp, #188]	; 0xbc
   2a9a8:	beq	2a9b4 <__assert_fail@plt+0x195b0>
   2a9ac:	cmp	r3, #140	; 0x8c
   2a9b0:	bne	2ab58 <__assert_fail@plt+0x19754>
   2a9b4:	ldr	r2, [r7, #212]	; 0xd4
   2a9b8:	movw	r3, #16712	; 0x4148
   2a9bc:	movt	r3, #9
   2a9c0:	cmp	r2, #0
   2a9c4:	beq	2ab3c <__assert_fail@plt+0x19738>
   2a9c8:	ldr	r2, [r3, #68]	; 0x44
   2a9cc:	mov	sl, #0
   2a9d0:	str	fp, [sp, #160]	; 0xa0
   2a9d4:	cmp	r2, sl
   2a9d8:	ldr	r8, [r3, #220]	; 0xdc
   2a9dc:	str	sl, [sp, #164]	; 0xa4
   2a9e0:	str	sl, [sp, #168]	; 0xa8
   2a9e4:	movne	r9, sl
   2a9e8:	str	sl, [sp, #172]	; 0xac
   2a9ec:	str	sl, [sp, #176]	; 0xb0
   2a9f0:	str	sl, [sp, #180]	; 0xb4
   2a9f4:	str	sl, [sp, #184]	; 0xb8
   2a9f8:	bne	2aa24 <__assert_fail@plt+0x19620>
   2a9fc:	b	2aafc <__assert_fail@plt+0x196f8>
   2aa00:	cmp	r3, #1879048193	; 0x70000001
   2aa04:	moveq	sl, r8
   2aa08:	ldr	r2, [r7, #68]	; 0x44
   2aa0c:	add	r9, r9, #1
   2aa10:	movw	r3, #16712	; 0x4148
   2aa14:	add	r8, r8, #72	; 0x48
   2aa18:	cmp	r2, r9
   2aa1c:	movt	r3, #9
   2aa20:	bls	2ab78 <__assert_fail@plt+0x19774>
   2aa24:	ldr	r3, [r8, #4]
   2aa28:	cmp	r3, #2
   2aa2c:	bne	2aa00 <__assert_fail@plt+0x195fc>
   2aa30:	ldr	r3, [r8, #40]	; 0x28
   2aa34:	cmp	r3, r2
   2aa38:	bcs	2aa08 <__assert_fail@plt+0x19604>
   2aa3c:	ldr	r3, [r7, #460]	; 0x1cc
   2aa40:	mov	r0, fp
   2aa44:	mov	r1, r8
   2aa48:	add	r2, sp, #168	; 0xa8
   2aa4c:	cmp	r3, #0
   2aa50:	beq	2b0dc <__assert_fail@plt+0x19cd8>
   2aa54:	bl	155f4 <__assert_fail@plt+0x41f0>
   2aa58:	ldr	r3, [r8, #40]	; 0x28
   2aa5c:	ldr	r1, [sp, #180]	; 0xb4
   2aa60:	ldr	r2, [r7, #220]	; 0xdc
   2aa64:	add	r3, r3, r3, lsl #3
   2aa68:	cmp	r1, #0
   2aa6c:	str	r0, [sp, #164]	; 0xa4
   2aa70:	add	r6, r2, r3, lsl #3
   2aa74:	beq	2aa98 <__assert_fail@plt+0x19694>
   2aa78:	mov	r2, #5
   2aa7c:	movw	r1, #15996	; 0x3e7c
   2aa80:	mov	r0, #0
   2aa84:	movt	r1, #6
   2aa88:	bl	11170 <dcgettext@plt>
   2aa8c:	bl	4b2b0 <error@@Base>
   2aa90:	ldr	r0, [sp, #180]	; 0xb4
   2aa94:	bl	1111c <free@plt>
   2aa98:	ldrd	r4, [r6, #32]
   2aa9c:	mov	r2, #5
   2aaa0:	ldr	r3, [r6, #24]
   2aaa4:	movw	r1, #3532	; 0xdcc
   2aaa8:	mov	r0, #0
   2aaac:	movt	r1, #6
   2aab0:	strd	r4, [sp, #24]
   2aab4:	mov	r4, #1
   2aab8:	str	r3, [sp, #36]	; 0x24
   2aabc:	bl	11170 <dcgettext@plt>
   2aac0:	mov	r5, #0
   2aac4:	ldr	r3, [sp, #36]	; 0x24
   2aac8:	strd	r4, [sp]
   2aacc:	mov	r1, fp
   2aad0:	ldrd	r4, [sp, #24]
   2aad4:	mov	r2, r3
   2aad8:	strd	r4, [sp, #8]
   2aadc:	str	r0, [sp, #16]
   2aae0:	mov	r0, #0
   2aae4:	bl	1502c <__assert_fail@plt+0x3c28>
   2aae8:	cmp	r0, #0
   2aaec:	str	r0, [sp, #180]	; 0xb4
   2aaf0:	ldrne	r0, [r6, #32]
   2aaf4:	str	r0, [sp, #184]	; 0xb8
   2aaf8:	b	2aa08 <__assert_fail@plt+0x19604>
   2aafc:	movw	r1, #7468	; 0x1d2c
   2ab00:	mov	r0, #0
   2ab04:	movt	r1, #6
   2ab08:	mov	r2, #5
   2ab0c:	bl	11170 <dcgettext@plt>
   2ab10:	mov	r1, r0
   2ab14:	mov	r0, #1
   2ab18:	bl	1132c <__printf_chk@plt>
   2ab1c:	ldr	r0, [sp, #164]	; 0xa4
   2ab20:	cmp	r0, #0
   2ab24:	beq	2ab2c <__assert_fail@plt+0x19728>
   2ab28:	bl	1111c <free@plt>
   2ab2c:	ldr	r0, [sp, #180]	; 0xb4
   2ab30:	cmp	r0, #0
   2ab34:	beq	2ab3c <__assert_fail@plt+0x19738>
   2ab38:	bl	1111c <free@plt>
   2ab3c:	ldr	ip, [sp, #60]	; 0x3c
   2ab40:	ldr	r2, [sp, #188]	; 0xbc
   2ab44:	ldr	r3, [ip]
   2ab48:	cmp	r2, r3
   2ab4c:	bne	2b124 <__assert_fail@plt+0x19d20>
   2ab50:	add	sp, sp, #196	; 0xc4
   2ab54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab58:	mov	r2, #5
   2ab5c:	movw	r1, #15920	; 0x3e30
   2ab60:	mov	r0, #0
   2ab64:	movt	r1, #6
   2ab68:	bl	11170 <dcgettext@plt>
   2ab6c:	ldrh	r1, [r7, #50]	; 0x32
   2ab70:	bl	4b2b0 <error@@Base>
   2ab74:	b	2ab3c <__assert_fail@plt+0x19738>
   2ab78:	cmp	sl, #0
   2ab7c:	beq	2aafc <__assert_fail@plt+0x196f8>
   2ab80:	cmp	r2, #0
   2ab84:	ldr	fp, [r3, #220]	; 0xdc
   2ab88:	beq	2ab1c <__assert_fail@plt+0x19718>
   2ab8c:	movw	r5, #26448	; 0x6750
   2ab90:	movw	ip, #16696	; 0x4138
   2ab94:	movt	r5, #9
   2ab98:	movt	ip, #9
   2ab9c:	mov	r4, #0
   2aba0:	str	r5, [sp, #68]	; 0x44
   2aba4:	str	ip, [sp, #40]	; 0x28
   2aba8:	mov	sl, r7
   2abac:	str	r4, [sp, #52]	; 0x34
   2abb0:	b	2abd0 <__assert_fail@plt+0x197cc>
   2abb4:	ldr	r4, [sp, #52]	; 0x34
   2abb8:	add	fp, fp, #72	; 0x48
   2abbc:	ldr	r3, [sl, #68]	; 0x44
   2abc0:	add	r4, r4, #1
   2abc4:	str	r4, [sp, #52]	; 0x34
   2abc8:	cmp	r4, r3
   2abcc:	bcs	2ab1c <__assert_fail@plt+0x19718>
   2abd0:	ldr	r3, [fp, #4]
   2abd4:	cmp	r3, #1879048193	; 0x70000001
   2abd8:	bne	2abb4 <__assert_fail@plt+0x197b0>
   2abdc:	mov	r2, #5
   2abe0:	movw	r1, #16036	; 0x3ea4
   2abe4:	mov	r0, #0
   2abe8:	movt	r1, #6
   2abec:	bl	11170 <dcgettext@plt>
   2abf0:	mov	r4, #0
   2abf4:	mov	r7, r0
   2abf8:	mov	r0, fp
   2abfc:	bl	132f8 <__assert_fail@plt+0x1ef4>
   2ac00:	ldr	r5, [sp, #68]	; 0x44
   2ac04:	mov	r3, r4
   2ac08:	ldr	r2, [r5]
   2ac0c:	ldr	r5, [fp, #24]
   2ac10:	lsl	r2, r2, #1
   2ac14:	mov	r6, r0
   2ac18:	ldrd	r0, [fp, #32]
   2ac1c:	bl	529fc <zcfree@@Base+0x13cc>
   2ac20:	mov	r3, r5
   2ac24:	mov	r1, r7
   2ac28:	mov	r2, r6
   2ac2c:	str	r0, [sp]
   2ac30:	mov	r0, #1
   2ac34:	bl	1132c <__printf_chk@plt>
   2ac38:	str	r4, [sp, #112]	; 0x70
   2ac3c:	str	r4, [sp, #116]	; 0x74
   2ac40:	str	r4, [sp, #120]	; 0x78
   2ac44:	str	r4, [sp, #124]	; 0x7c
   2ac48:	str	r4, [sp, #128]	; 0x80
   2ac4c:	str	r4, [sp, #132]	; 0x84
   2ac50:	str	r4, [sp, #136]	; 0x88
   2ac54:	str	r4, [sp, #140]	; 0x8c
   2ac58:	str	r4, [sp, #144]	; 0x90
   2ac5c:	str	r4, [sp, #148]	; 0x94
   2ac60:	str	r4, [sp, #152]	; 0x98
   2ac64:	str	r4, [sp, #156]	; 0x9c
   2ac68:	ldr	r0, [sp, #168]	; 0xa8
   2ac6c:	ldr	r3, [fp, #32]
   2ac70:	ldr	r2, [fp, #36]	; 0x24
   2ac74:	lsl	r0, r0, #5
   2ac78:	lsr	r3, r3, #3
   2ac7c:	orr	r2, r3, r2, lsl #29
   2ac80:	str	r2, [sp, #56]	; 0x38
   2ac84:	bl	4eba0 <warn@@Base+0x31b4>
   2ac88:	ldr	lr, [sp, #168]	; 0xa8
   2ac8c:	cmp	lr, r4
   2ac90:	mov	r5, r0
   2ac94:	str	r0, [sp, #172]	; 0xac
   2ac98:	beq	2b114 <__assert_fail@plt+0x19d10>
   2ac9c:	ldr	ip, [sp, #164]	; 0xa4
   2aca0:	add	lr, ip, lr, lsl #5
   2aca4:	b	2acb4 <__assert_fail@plt+0x198b0>
   2aca8:	add	ip, ip, #32
   2acac:	cmp	ip, lr
   2acb0:	beq	2acf8 <__assert_fail@plt+0x198f4>
   2acb4:	ldrd	r2, [ip]
   2acb8:	orrs	r0, r2, r3
   2acbc:	beq	2aca8 <__assert_fail@plt+0x198a4>
   2acc0:	ldrb	r3, [ip, #20]
   2acc4:	and	r3, r3, #15
   2acc8:	cmp	r3, #2
   2accc:	bne	2aca8 <__assert_fail@plt+0x198a4>
   2acd0:	mov	r7, ip
   2acd4:	add	r6, r5, r4, lsl #5
   2acd8:	ldm	r7!, {r0, r1, r2, r3}
   2acdc:	add	ip, ip, #32
   2ace0:	cmp	ip, lr
   2ace4:	add	r4, r4, #1
   2ace8:	stmia	r6!, {r0, r1, r2, r3}
   2acec:	ldm	r7, {r0, r1, r2, r3}
   2acf0:	stm	r6, {r0, r1, r2, r3}
   2acf4:	bne	2acb4 <__assert_fail@plt+0x198b0>
   2acf8:	mov	r1, r4
   2acfc:	mov	r0, r5
   2ad00:	movw	r3, #12188	; 0x2f9c
   2ad04:	mov	r2, #32
   2ad08:	movt	r3, #1
   2ad0c:	str	r4, [sp, #176]	; 0xb0
   2ad10:	bl	11398 <qsort@plt>
   2ad14:	ldr	r4, [sp, #56]	; 0x38
   2ad18:	cmp	r4, #0
   2ad1c:	beq	2b0e8 <__assert_fail@plt+0x19ce4>
   2ad20:	mov	r9, #0
   2ad24:	movw	r5, #16712	; 0x4148
   2ad28:	mov	ip, #4
   2ad2c:	movt	r5, #9
   2ad30:	str	sl, [sp, #48]	; 0x30
   2ad34:	mov	sl, r9
   2ad38:	str	r5, [sp, #64]	; 0x40
   2ad3c:	str	ip, [sp, #44]	; 0x2c
   2ad40:	b	2ae90 <__assert_fail@plt+0x19a8c>
   2ad44:	ldrd	r4, [sp, #88]	; 0x58
   2ad48:	adds	r2, r2, r0
   2ad4c:	ldrh	ip, [sp, #80]	; 0x50
   2ad50:	adc	r3, r3, r1
   2ad54:	add	r0, sp, #160	; 0xa0
   2ad58:	strd	r4, [sp, #8]
   2ad5c:	str	ip, [sp]
   2ad60:	bl	29218 <__assert_fail@plt+0x17e14>
   2ad64:	ldr	r5, [sp, #40]	; 0x28
   2ad68:	movw	r0, #13660	; 0x355c
   2ad6c:	mov	r1, #1
   2ad70:	movt	r0, #6
   2ad74:	mov	r2, #2
   2ad78:	ldr	r3, [r5]
   2ad7c:	bl	111b8 <fwrite@plt>
   2ad80:	ldr	r4, [sp, #76]	; 0x4c
   2ad84:	cmp	r4, #1
   2ad88:	beq	2b044 <__assert_fail@plt+0x19c40>
   2ad8c:	cmp	r4, #0
   2ad90:	blt	2afec <__assert_fail@plt+0x19be8>
   2ad94:	ldr	r4, [sp, #40]	; 0x28
   2ad98:	mov	r0, #64	; 0x40
   2ad9c:	ldr	r1, [r4]
   2ada0:	bl	11380 <fputc@plt>
   2ada4:	ldrd	r6, [fp, #16]
   2ada8:	ldr	r2, [sp, #76]	; 0x4c
   2adac:	mov	r3, #0
   2adb0:	adds	r6, r6, #4
   2adb4:	ldr	r5, [sp, #48]	; 0x30
   2adb8:	adc	r7, r7, #0
   2adbc:	adds	r6, r6, r8
   2adc0:	adc	r7, r7, r9
   2adc4:	tst	r2, #1073741824	; 0x40000000
   2adc8:	bic	r2, r2, #-2147483648	; 0x80000000
   2adcc:	mvnne	r1, #0
   2add0:	movne	r0, #-2147483648	; 0x80000000
   2add4:	orrne	r3, r3, r1
   2add8:	ldrh	r1, [r5, #50]	; 0x32
   2addc:	orrne	r2, r2, r0
   2ade0:	cmp	r1, #140	; 0x8c
   2ade4:	beq	2b038 <__assert_fail@plt+0x19c34>
   2ade8:	adds	r6, r6, r2
   2adec:	mov	r2, #4
   2adf0:	adc	r7, r7, r3
   2adf4:	mov	r0, r6
   2adf8:	mov	r1, r7
   2adfc:	bl	16c84 <__assert_fail@plt+0x5880>
   2ae00:	mov	r0, #10
   2ae04:	bl	112fc <putchar@plt>
   2ae08:	ldrh	r3, [sp, #96]	; 0x60
   2ae0c:	cmp	r3, #0
   2ae10:	beq	2af74 <__assert_fail@plt+0x19b70>
   2ae14:	ldr	r4, [sp, #48]	; 0x30
   2ae18:	ldr	r0, [r4, #68]	; 0x44
   2ae1c:	cmp	r3, r0
   2ae20:	bcs	2af7c <__assert_fail@plt+0x19b78>
   2ae24:	ldr	r5, [sp, #64]	; 0x40
   2ae28:	add	r3, r3, r3, lsl #3
   2ae2c:	ldr	r2, [r5, #220]	; 0xdc
   2ae30:	ldrd	r4, [sp, #104]	; 0x68
   2ae34:	add	r3, r2, r3, lsl #3
   2ae38:	ldrd	r0, [r3, #32]
   2ae3c:	cmp	r5, r1
   2ae40:	cmpeq	r4, r0
   2ae44:	bhi	2b0a0 <__assert_fail@plt+0x19c9c>
   2ae48:	cmp	r4, #0
   2ae4c:	sbcs	ip, r5, #0
   2ae50:	blt	2b0a0 <__assert_fail@plt+0x19c9c>
   2ae54:	mov	r1, #0
   2ae58:	strd	r4, [sp]
   2ae5c:	str	r3, [sp, #8]
   2ae60:	add	r5, sp, #136	; 0x88
   2ae64:	mov	r2, r1
   2ae68:	str	r5, [sp, #12]
   2ae6c:	add	r0, sp, #160	; 0xa0
   2ae70:	bl	29318 <__assert_fail@plt+0x17f14>
   2ae74:	ldr	ip, [sp, #56]	; 0x38
   2ae78:	add	sl, sl, #1
   2ae7c:	ldr	r5, [sp, #44]	; 0x2c
   2ae80:	cmp	ip, sl
   2ae84:	add	r5, r5, #8
   2ae88:	str	r5, [sp, #44]	; 0x2c
   2ae8c:	bls	2b0e4 <__assert_fail@plt+0x19ce0>
   2ae90:	ldr	r4, [sp, #40]	; 0x28
   2ae94:	mov	r0, #10
   2ae98:	lsl	r8, sl, #3
   2ae9c:	add	r5, sp, #72	; 0x48
   2aea0:	mov	r9, #0
   2aea4:	ldr	r1, [r4]
   2aea8:	mov	r4, #0
   2aeac:	bl	11380 <fputc@plt>
   2aeb0:	add	ip, sp, #80	; 0x50
   2aeb4:	add	lr, sp, #88	; 0x58
   2aeb8:	str	r5, [sp, #8]
   2aebc:	str	ip, [sp, #12]
   2aec0:	add	r0, sp, #160	; 0xa0
   2aec4:	str	lr, [sp, #16]
   2aec8:	add	r1, sp, #112	; 0x70
   2aecc:	strd	r8, [sp]
   2aed0:	mov	r2, fp
   2aed4:	str	r4, [sp, #20]
   2aed8:	bl	2652c <__assert_fail@plt+0x15128>
   2aedc:	cmp	r0, r4
   2aee0:	beq	2b11c <__assert_fail@plt+0x19d18>
   2aee4:	ldr	r5, [sp, #44]	; 0x2c
   2aee8:	add	r1, sp, #76	; 0x4c
   2aeec:	add	r2, sp, #96	; 0x60
   2aef0:	add	r3, sp, #104	; 0x68
   2aef4:	str	r1, [sp, #8]
   2aef8:	add	r0, sp, #160	; 0xa0
   2aefc:	str	r2, [sp, #12]
   2af00:	add	r1, sp, #112	; 0x70
   2af04:	str	r5, [sp]
   2af08:	mov	r2, fp
   2af0c:	str	r4, [sp, #4]
   2af10:	str	r4, [sp, #20]
   2af14:	str	r3, [sp, #16]
   2af18:	bl	2652c <__assert_fail@plt+0x15128>
   2af1c:	cmp	r0, #0
   2af20:	beq	2b11c <__assert_fail@plt+0x19d18>
   2af24:	ldr	ip, [sp, #72]	; 0x48
   2af28:	cmp	ip, #0
   2af2c:	blt	2b07c <__assert_fail@plt+0x19c78>
   2af30:	ldrd	r0, [fp, #16]
   2af34:	bic	r2, ip, #-2147483648	; 0x80000000
   2af38:	mov	r3, #0
   2af3c:	adds	r0, r0, r8
   2af40:	adc	r1, r1, r9
   2af44:	tst	ip, #1073741824	; 0x40000000
   2af48:	movne	r4, #-2147483648	; 0x80000000
   2af4c:	orrne	r2, r2, r4
   2af50:	ldr	r4, [sp, #48]	; 0x30
   2af54:	mvnne	r5, #0
   2af58:	orrne	r3, r3, r5
   2af5c:	ldrh	ip, [r4, #50]	; 0x32
   2af60:	cmp	ip, #140	; 0x8c
   2af64:	bne	2ad44 <__assert_fail@plt+0x19940>
   2af68:	adds	r2, r2, r2
   2af6c:	adc	r3, r3, r3
   2af70:	b	2ad44 <__assert_fail@plt+0x19940>
   2af74:	ldr	ip, [sp, #48]	; 0x30
   2af78:	ldr	r0, [ip, #68]	; 0x44
   2af7c:	cmp	r0, #0
   2af80:	beq	2afcc <__assert_fail@plt+0x19bc8>
   2af84:	ldr	r4, [sp, #48]	; 0x30
   2af88:	mov	r1, #0
   2af8c:	ldr	r2, [r4, #220]	; 0xdc
   2af90:	ldrd	r4, [r2, #16]
   2af94:	mov	r3, r2
   2af98:	cmp	r7, r5
   2af9c:	cmpeq	r6, r4
   2afa0:	bcc	2afbc <__assert_fail@plt+0x19bb8>
   2afa4:	ldrd	r8, [r2, #32]
   2afa8:	adds	r8, r8, r4
   2afac:	adc	r9, r9, r5
   2afb0:	cmp	r7, r9
   2afb4:	cmpeq	r6, r8
   2afb8:	bcc	2b070 <__assert_fail@plt+0x19c6c>
   2afbc:	add	r1, r1, #1
   2afc0:	add	r2, r2, #72	; 0x48
   2afc4:	cmp	r1, r0
   2afc8:	bne	2af90 <__assert_fail@plt+0x19b8c>
   2afcc:	mov	r2, #5
   2afd0:	movw	r1, #16212	; 0x3f54
   2afd4:	mov	r0, #0
   2afd8:	movt	r1, #6
   2afdc:	bl	11170 <dcgettext@plt>
   2afe0:	mov	r1, r6
   2afe4:	bl	4b9ec <warn@@Base>
   2afe8:	b	2ae74 <__assert_fail@plt+0x19a70>
   2afec:	mov	r5, #0
   2aff0:	mov	r2, #4
   2aff4:	mov	r1, r5
   2aff8:	mov	r0, r4
   2affc:	bl	16c84 <__assert_fail@plt+0x5880>
   2b000:	ldr	ip, [sp, #40]	; 0x28
   2b004:	mov	r0, #10
   2b008:	ldr	r1, [ip]
   2b00c:	bl	11380 <fputc@plt>
   2b010:	mov	r2, #0
   2b014:	mov	r3, #0
   2b018:	ldr	r1, [sp, #76]	; 0x4c
   2b01c:	strd	r2, [sp]
   2b020:	add	r0, sp, #160	; 0xa0
   2b024:	str	r5, [sp, #8]
   2b028:	mov	r2, #4
   2b02c:	str	r5, [sp, #12]
   2b030:	bl	29318 <__assert_fail@plt+0x17f14>
   2b034:	b	2ae74 <__assert_fail@plt+0x19a70>
   2b038:	adds	r2, r2, r2
   2b03c:	adc	r3, r3, r3
   2b040:	b	2ade8 <__assert_fail@plt+0x199e4>
   2b044:	mov	r1, #0
   2b048:	mov	r2, #4
   2b04c:	mov	r0, #1
   2b050:	bl	16c84 <__assert_fail@plt+0x5880>
   2b054:	mov	r1, r4
   2b058:	movw	r0, #16132	; 0x3f04
   2b05c:	mov	r2, #14
   2b060:	ldr	r3, [r5]
   2b064:	movt	r0, #6
   2b068:	bl	111b8 <fwrite@plt>
   2b06c:	b	2ae74 <__assert_fail@plt+0x19a70>
   2b070:	subs	r4, r6, r4
   2b074:	sbc	r5, r7, r5
   2b078:	b	2ae54 <__assert_fail@plt+0x19a50>
   2b07c:	mov	r2, #5
   2b080:	mov	r0, r4
   2b084:	movw	r1, #16100	; 0x3ee4
   2b088:	movt	r1, #6
   2b08c:	bl	11170 <dcgettext@plt>
   2b090:	ldr	r1, [sp, #72]	; 0x48
   2b094:	bl	4b9ec <warn@@Base>
   2b098:	ldr	ip, [sp, #72]	; 0x48
   2b09c:	b	2af30 <__assert_fail@plt+0x19b2c>
   2b0a0:	mov	r2, #5
   2b0a4:	movw	r1, #16148	; 0x3f14
   2b0a8:	mov	r0, #0
   2b0ac:	movt	r1, #6
   2b0b0:	str	r3, [sp, #36]	; 0x24
   2b0b4:	bl	11170 <dcgettext@plt>
   2b0b8:	ldr	r3, [sp, #36]	; 0x24
   2b0bc:	mov	r5, r0
   2b0c0:	mov	r0, r3
   2b0c4:	bl	132f8 <__assert_fail@plt+0x1ef4>
   2b0c8:	mov	r1, r4
   2b0cc:	mov	r2, r0
   2b0d0:	mov	r0, r5
   2b0d4:	bl	4b9ec <warn@@Base>
   2b0d8:	b	2ae74 <__assert_fail@plt+0x19a70>
   2b0dc:	bl	15a6c <__assert_fail@plt+0x4668>
   2b0e0:	b	2aa58 <__assert_fail@plt+0x19654>
   2b0e4:	ldr	sl, [sp, #48]	; 0x30
   2b0e8:	mov	r0, #10
   2b0ec:	bl	112fc <putchar@plt>
   2b0f0:	ldr	r0, [sp, #172]	; 0xac
   2b0f4:	bl	1111c <free@plt>
   2b0f8:	add	r1, sp, #120	; 0x78
   2b0fc:	ldr	r0, [sp, #112]	; 0x70
   2b100:	bl	1986c <__assert_fail@plt+0x8468>
   2b104:	add	r1, sp, #144	; 0x90
   2b108:	ldr	r0, [sp, #136]	; 0x88
   2b10c:	bl	1986c <__assert_fail@plt+0x8468>
   2b110:	b	2abb4 <__assert_fail@plt+0x197b0>
   2b114:	mov	r4, lr
   2b118:	b	2acf8 <__assert_fail@plt+0x198f4>
   2b11c:	ldr	sl, [sp, #48]	; 0x30
   2b120:	b	2b0f0 <__assert_fail@plt+0x19cec>
   2b124:	bl	1117c <__stack_chk_fail@plt>
   2b128:	push	{r4, r5, r6, lr}
   2b12c:	movw	r4, #16680	; 0x4128
   2b130:	movt	r4, #9
   2b134:	sub	sp, sp, #8
   2b138:	cmp	r1, #4
   2b13c:	mov	r5, r0
   2b140:	ldr	ip, [r4]
   2b144:	mov	r3, r2
   2b148:	str	ip, [sp, #4]
   2b14c:	beq	2b200 <__assert_fail@plt+0x19dfc>
   2b150:	cmp	r1, #8
   2b154:	beq	2b17c <__assert_fail@plt+0x19d78>
   2b158:	and	r0, r1, #1
   2b15c:	mov	r1, r5
   2b160:	bl	1b5b8 <__assert_fail@plt+0xa1b4>
   2b164:	ldr	r2, [sp, #4]
   2b168:	ldr	r3, [r4]
   2b16c:	cmp	r2, r3
   2b170:	bne	2b250 <__assert_fail@plt+0x19e4c>
   2b174:	add	sp, sp, #8
   2b178:	pop	{r4, r5, r6, pc}
   2b17c:	mov	r2, #0
   2b180:	mov	r1, sp
   2b184:	bl	3a350 <__assert_fail@plt+0x28f4c>
   2b188:	ldr	r3, [sp]
   2b18c:	movw	r1, #16292	; 0x3fa4
   2b190:	movt	r1, #6
   2b194:	add	r5, r5, r3
   2b198:	mov	r6, r0
   2b19c:	mov	r0, #1
   2b1a0:	bl	1132c <__printf_chk@plt>
   2b1a4:	cmp	r6, #0
   2b1a8:	beq	2b1dc <__assert_fail@plt+0x19dd8>
   2b1ac:	cmp	r6, #1
   2b1b0:	bne	2b238 <__assert_fail@plt+0x19e34>
   2b1b4:	movw	r1, #16336	; 0x3fd0
   2b1b8:	mov	r0, #0
   2b1bc:	movt	r1, #6
   2b1c0:	mov	r2, #5
   2b1c4:	bl	11170 <dcgettext@plt>
   2b1c8:	mov	r1, r0
   2b1cc:	mov	r0, r6
   2b1d0:	bl	1132c <__printf_chk@plt>
   2b1d4:	mov	r0, r5
   2b1d8:	b	2b164 <__assert_fail@plt+0x19d60>
   2b1dc:	mov	r0, r6
   2b1e0:	mov	r2, #5
   2b1e4:	movw	r1, #16320	; 0x3fc0
   2b1e8:	movt	r1, #6
   2b1ec:	bl	11170 <dcgettext@plt>
   2b1f0:	mov	r1, r0
   2b1f4:	mov	r0, #1
   2b1f8:	bl	1132c <__printf_chk@plt>
   2b1fc:	b	2b1d4 <__assert_fail@plt+0x19dd0>
   2b200:	mov	r2, #0
   2b204:	mov	r1, sp
   2b208:	bl	3a350 <__assert_fail@plt+0x28f4c>
   2b20c:	ldr	r3, [sp]
   2b210:	movw	r1, #16268	; 0x3f8c
   2b214:	movt	r1, #6
   2b218:	add	r5, r5, r3
   2b21c:	mov	r6, r0
   2b220:	mov	r0, #1
   2b224:	bl	1132c <__printf_chk@plt>
   2b228:	mov	r0, r6
   2b22c:	bl	16df4 <__assert_fail@plt+0x59f0>
   2b230:	mov	r0, r5
   2b234:	b	2b164 <__assert_fail@plt+0x19d60>
   2b238:	mov	r2, r6
   2b23c:	movw	r1, #61824	; 0xf180
   2b240:	mov	r0, #1
   2b244:	movt	r1, #5
   2b248:	bl	1132c <__printf_chk@plt>
   2b24c:	b	2b1d4 <__assert_fail@plt+0x19dd0>
   2b250:	bl	1117c <__stack_chk_fail@plt>
   2b254:	push	{r4, r5, r6, lr}
   2b258:	movw	r4, #16680	; 0x4128
   2b25c:	movt	r4, #9
   2b260:	sub	sp, sp, #8
   2b264:	cmp	r1, #8
   2b268:	mov	r5, r0
   2b26c:	ldr	ip, [r4]
   2b270:	mov	r3, r2
   2b274:	str	ip, [sp, #4]
   2b278:	beq	2b2a0 <__assert_fail@plt+0x19e9c>
   2b27c:	and	r0, r1, #1
   2b280:	mov	r1, r5
   2b284:	bl	1b5b8 <__assert_fail@plt+0xa1b4>
   2b288:	ldr	r2, [sp, #4]
   2b28c:	ldr	r3, [r4]
   2b290:	cmp	r2, r3
   2b294:	bne	2b368 <__assert_fail@plt+0x19f64>
   2b298:	add	sp, sp, #8
   2b29c:	pop	{r4, r5, r6, pc}
   2b2a0:	mov	r2, #0
   2b2a4:	mov	r1, sp
   2b2a8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   2b2ac:	ldr	r3, [sp]
   2b2b0:	movw	r1, #16352	; 0x3fe0
   2b2b4:	movt	r1, #6
   2b2b8:	add	r5, r5, r3
   2b2bc:	mov	r6, r0
   2b2c0:	mov	r0, #1
   2b2c4:	bl	1132c <__printf_chk@plt>
   2b2c8:	cmp	r6, #1
   2b2cc:	beq	2b344 <__assert_fail@plt+0x19f40>
   2b2d0:	cmp	r6, #2
   2b2d4:	beq	2b2fc <__assert_fail@plt+0x19ef8>
   2b2d8:	cmp	r6, #0
   2b2dc:	beq	2b320 <__assert_fail@plt+0x19f1c>
   2b2e0:	movw	r1, #61824	; 0xf180
   2b2e4:	mov	r2, r6
   2b2e8:	mov	r0, #1
   2b2ec:	movt	r1, #5
   2b2f0:	bl	1132c <__printf_chk@plt>
   2b2f4:	mov	r0, r5
   2b2f8:	b	2b288 <__assert_fail@plt+0x19e84>
   2b2fc:	mov	r2, #5
   2b300:	movw	r1, #16400	; 0x4010
   2b304:	mov	r0, #0
   2b308:	movt	r1, #6
   2b30c:	bl	11170 <dcgettext@plt>
   2b310:	mov	r1, r0
   2b314:	mov	r0, #1
   2b318:	bl	1132c <__printf_chk@plt>
   2b31c:	b	2b2f4 <__assert_fail@plt+0x19ef0>
   2b320:	mov	r0, r6
   2b324:	mov	r2, #5
   2b328:	movw	r1, #16380	; 0x3ffc
   2b32c:	movt	r1, #6
   2b330:	bl	11170 <dcgettext@plt>
   2b334:	mov	r1, r0
   2b338:	mov	r0, #1
   2b33c:	bl	1132c <__printf_chk@plt>
   2b340:	b	2b2f4 <__assert_fail@plt+0x19ef0>
   2b344:	mov	r2, #5
   2b348:	movw	r1, #16388	; 0x4004
   2b34c:	mov	r0, #0
   2b350:	movt	r1, #6
   2b354:	bl	11170 <dcgettext@plt>
   2b358:	mov	r1, r0
   2b35c:	mov	r0, r6
   2b360:	bl	1132c <__printf_chk@plt>
   2b364:	b	2b2f4 <__assert_fail@plt+0x19ef0>
   2b368:	bl	1117c <__stack_chk_fail@plt>
   2b36c:	push	{r4, r5, r6, r7, lr}
   2b370:	movw	r4, #16680	; 0x4128
   2b374:	movt	r4, #9
   2b378:	sub	sp, sp, #12
   2b37c:	cmp	r1, #4
   2b380:	mov	r6, r0
   2b384:	ldr	ip, [r4]
   2b388:	mov	r3, r2
   2b38c:	str	ip, [sp, #4]
   2b390:	beq	2b458 <__assert_fail@plt+0x1a054>
   2b394:	cmp	r1, #8
   2b398:	beq	2b3c0 <__assert_fail@plt+0x19fbc>
   2b39c:	mov	r0, r1
   2b3a0:	mov	r1, r6
   2b3a4:	bl	1b5b8 <__assert_fail@plt+0xa1b4>
   2b3a8:	ldr	r2, [sp, #4]
   2b3ac:	ldr	r3, [r4]
   2b3b0:	cmp	r2, r3
   2b3b4:	bne	2bb0c <__assert_fail@plt+0x1a708>
   2b3b8:	add	sp, sp, #12
   2b3bc:	pop	{r4, r5, r6, r7, pc}
   2b3c0:	mov	r2, #0
   2b3c4:	mov	r1, sp
   2b3c8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   2b3cc:	ldr	r3, [sp]
   2b3d0:	movw	r1, #16596	; 0x40d4
   2b3d4:	movt	r1, #6
   2b3d8:	add	r6, r6, r3
   2b3dc:	mov	r5, r0
   2b3e0:	mov	r0, #1
   2b3e4:	bl	1132c <__printf_chk@plt>
   2b3e8:	cmp	r5, #0
   2b3ec:	beq	2b5ec <__assert_fail@plt+0x1a1e8>
   2b3f0:	tst	r5, #1
   2b3f4:	bne	2b8bc <__assert_fail@plt+0x1a4b8>
   2b3f8:	tst	r5, #2
   2b3fc:	bne	2bab4 <__assert_fail@plt+0x1a6b0>
   2b400:	tst	r5, #4
   2b404:	bne	2bb24 <__assert_fail@plt+0x1a720>
   2b408:	movw	r7, #16696	; 0x4138
   2b40c:	movt	r7, #9
   2b410:	mov	r3, #1
   2b414:	tst	r5, #8
   2b418:	beq	2bae4 <__assert_fail@plt+0x1a6e0>
   2b41c:	cmp	r3, #0
   2b420:	beq	2bb00 <__assert_fail@plt+0x1a6fc>
   2b424:	movw	r2, #25084	; 0x61fc
   2b428:	movt	r2, #7
   2b42c:	movw	r1, #16652	; 0x410c
   2b430:	mov	r0, #1
   2b434:	movt	r1, #6
   2b438:	bl	1132c <__printf_chk@plt>
   2b43c:	tst	r5, #16
   2b440:	bne	2b91c <__assert_fail@plt+0x1a518>
   2b444:	ands	r3, r5, #32
   2b448:	beq	2ba98 <__assert_fail@plt+0x1a694>
   2b44c:	movw	r2, #62976	; 0xf600
   2b450:	movt	r2, #5
   2b454:	b	2ba6c <__assert_fail@plt+0x1a668>
   2b458:	mov	r2, #0
   2b45c:	mov	r1, sp
   2b460:	bl	3a350 <__assert_fail@plt+0x28f4c>
   2b464:	ldr	r3, [sp]
   2b468:	movw	r1, #16412	; 0x401c
   2b46c:	movt	r1, #6
   2b470:	add	r6, r6, r3
   2b474:	mov	r5, r0
   2b478:	mov	r0, #1
   2b47c:	bl	1132c <__printf_chk@plt>
   2b480:	cmp	r5, #0
   2b484:	beq	2b5ec <__assert_fail@plt+0x1a1e8>
   2b488:	tst	r5, #1
   2b48c:	bne	2b614 <__assert_fail@plt+0x1a210>
   2b490:	tst	r5, #2
   2b494:	beq	2b7e4 <__assert_fail@plt+0x1a3e0>
   2b498:	movw	r2, #25084	; 0x61fc
   2b49c:	movw	r7, #16696	; 0x4138
   2b4a0:	movt	r2, #7
   2b4a4:	movt	r7, #9
   2b4a8:	movw	r1, #16448	; 0x4040
   2b4ac:	mov	r0, #1
   2b4b0:	movt	r1, #6
   2b4b4:	bl	1132c <__printf_chk@plt>
   2b4b8:	tst	r5, #4
   2b4bc:	bne	2b64c <__assert_fail@plt+0x1a248>
   2b4c0:	ands	r3, r5, #8
   2b4c4:	beq	2b830 <__assert_fail@plt+0x1a42c>
   2b4c8:	movw	r2, #62976	; 0xf600
   2b4cc:	movt	r2, #5
   2b4d0:	movw	r1, #16468	; 0x4054
   2b4d4:	mov	r0, #1
   2b4d8:	movt	r1, #6
   2b4dc:	bl	1132c <__printf_chk@plt>
   2b4e0:	tst	r5, #16
   2b4e4:	bne	2b674 <__assert_fail@plt+0x1a270>
   2b4e8:	ands	r3, r5, #32
   2b4ec:	beq	2b8a0 <__assert_fail@plt+0x1a49c>
   2b4f0:	movw	r2, #62976	; 0xf600
   2b4f4:	movt	r2, #5
   2b4f8:	movw	r1, #16488	; 0x4068
   2b4fc:	mov	r0, #1
   2b500:	movt	r1, #6
   2b504:	bl	1132c <__printf_chk@plt>
   2b508:	tst	r5, #64	; 0x40
   2b50c:	bne	2b69c <__assert_fail@plt+0x1a298>
   2b510:	ands	r3, r5, #128	; 0x80
   2b514:	beq	2b884 <__assert_fail@plt+0x1a480>
   2b518:	movw	r2, #62976	; 0xf600
   2b51c:	movt	r2, #5
   2b520:	movw	r1, #16504	; 0x4078
   2b524:	mov	r0, #1
   2b528:	movt	r1, #6
   2b52c:	bl	1132c <__printf_chk@plt>
   2b530:	tst	r5, #256	; 0x100
   2b534:	bne	2b6c4 <__assert_fail@plt+0x1a2c0>
   2b538:	ands	r3, r5, #1024	; 0x400
   2b53c:	beq	2b868 <__assert_fail@plt+0x1a464>
   2b540:	movw	r2, #62976	; 0xf600
   2b544:	movt	r2, #5
   2b548:	movw	r1, #16528	; 0x4090
   2b54c:	mov	r0, #1
   2b550:	movt	r1, #6
   2b554:	bl	1132c <__printf_chk@plt>
   2b558:	tst	r5, #2048	; 0x800
   2b55c:	bne	2b6ec <__assert_fail@plt+0x1a2e8>
   2b560:	ands	r3, r5, #4096	; 0x1000
   2b564:	beq	2b84c <__assert_fail@plt+0x1a448>
   2b568:	movw	r2, #62976	; 0xf600
   2b56c:	movt	r2, #5
   2b570:	movw	r1, #16544	; 0x40a0
   2b574:	mov	r0, #1
   2b578:	movt	r1, #6
   2b57c:	bl	1132c <__printf_chk@plt>
   2b580:	tst	r5, #8192	; 0x2000
   2b584:	bne	2b714 <__assert_fail@plt+0x1a310>
   2b588:	ands	r3, r5, #16384	; 0x4000
   2b58c:	beq	2b814 <__assert_fail@plt+0x1a410>
   2b590:	movw	r2, #62976	; 0xf600
   2b594:	movt	r2, #5
   2b598:	movw	r1, #16564	; 0x40b4
   2b59c:	mov	r0, #1
   2b5a0:	movt	r1, #6
   2b5a4:	bl	1132c <__printf_chk@plt>
   2b5a8:	tst	r5, #32768	; 0x8000
   2b5ac:	beq	2b5c8 <__assert_fail@plt+0x1a1c4>
   2b5b0:	movw	r2, #62976	; 0xf600
   2b5b4:	movt	r2, #5
   2b5b8:	movw	r1, #16576	; 0x40c0
   2b5bc:	mov	r0, #1
   2b5c0:	movt	r1, #6
   2b5c4:	bl	1132c <__printf_chk@plt>
   2b5c8:	tst	r5, #65536	; 0x10000
   2b5cc:	beq	2b600 <__assert_fail@plt+0x1a1fc>
   2b5d0:	movw	r2, #62976	; 0xf600
   2b5d4:	movt	r2, #5
   2b5d8:	movw	r1, #16584	; 0x40c8
   2b5dc:	mov	r0, #1
   2b5e0:	movt	r1, #6
   2b5e4:	bl	1132c <__printf_chk@plt>
   2b5e8:	b	2b600 <__assert_fail@plt+0x1a1fc>
   2b5ec:	movw	r7, #16696	; 0x4138
   2b5f0:	movt	r7, #9
   2b5f4:	mov	r0, #48	; 0x30
   2b5f8:	ldr	r1, [r7]
   2b5fc:	bl	11380 <fputc@plt>
   2b600:	ldr	r1, [r7]
   2b604:	mov	r0, #10
   2b608:	bl	11380 <fputc@plt>
   2b60c:	mov	r0, r6
   2b610:	b	2b3a8 <__assert_fail@plt+0x19fa4>
   2b614:	movw	r7, #16696	; 0x4138
   2b618:	movt	r7, #9
   2b61c:	mov	r2, #5
   2b620:	movw	r0, #16440	; 0x4038
   2b624:	mov	r1, #1
   2b628:	ldr	r3, [r7]
   2b62c:	movt	r0, #6
   2b630:	bl	111b8 <fwrite@plt>
   2b634:	tst	r5, #2
   2b638:	movwne	r2, #62976	; 0xf600
   2b63c:	movtne	r2, #5
   2b640:	bne	2b4a8 <__assert_fail@plt+0x1a0a4>
   2b644:	ands	r3, r5, #4
   2b648:	beq	2b7f8 <__assert_fail@plt+0x1a3f4>
   2b64c:	movw	r2, #62976	; 0xf600
   2b650:	movt	r2, #5
   2b654:	movw	r1, #16456	; 0x4048
   2b658:	mov	r0, #1
   2b65c:	movt	r1, #6
   2b660:	bl	1132c <__printf_chk@plt>
   2b664:	tst	r5, #8
   2b668:	bne	2b4c8 <__assert_fail@plt+0x1a0c4>
   2b66c:	ands	r3, r5, #16
   2b670:	beq	2b7c8 <__assert_fail@plt+0x1a3c4>
   2b674:	movw	r2, #62976	; 0xf600
   2b678:	movt	r2, #5
   2b67c:	movw	r1, #16480	; 0x4060
   2b680:	mov	r0, #1
   2b684:	movt	r1, #6
   2b688:	bl	1132c <__printf_chk@plt>
   2b68c:	tst	r5, #32
   2b690:	bne	2b4f0 <__assert_fail@plt+0x1a0ec>
   2b694:	ands	r3, r5, #64	; 0x40
   2b698:	beq	2b7ac <__assert_fail@plt+0x1a3a8>
   2b69c:	movw	r2, #62976	; 0xf600
   2b6a0:	movt	r2, #5
   2b6a4:	movw	r1, #16496	; 0x4070
   2b6a8:	mov	r0, #1
   2b6ac:	movt	r1, #6
   2b6b0:	bl	1132c <__printf_chk@plt>
   2b6b4:	tst	r5, #128	; 0x80
   2b6b8:	bne	2b518 <__assert_fail@plt+0x1a114>
   2b6bc:	ands	r3, r5, #256	; 0x100
   2b6c0:	beq	2b790 <__assert_fail@plt+0x1a38c>
   2b6c4:	movw	r2, #62976	; 0xf600
   2b6c8:	movt	r2, #5
   2b6cc:	movw	r1, #16520	; 0x4088
   2b6d0:	mov	r0, #1
   2b6d4:	movt	r1, #6
   2b6d8:	bl	1132c <__printf_chk@plt>
   2b6dc:	tst	r5, #1024	; 0x400
   2b6e0:	bne	2b540 <__assert_fail@plt+0x1a13c>
   2b6e4:	ands	r3, r5, #2048	; 0x800
   2b6e8:	beq	2b774 <__assert_fail@plt+0x1a370>
   2b6ec:	movw	r2, #62976	; 0xf600
   2b6f0:	movt	r2, #5
   2b6f4:	movw	r1, #16536	; 0x4098
   2b6f8:	mov	r0, #1
   2b6fc:	movt	r1, #6
   2b700:	bl	1132c <__printf_chk@plt>
   2b704:	tst	r5, #4096	; 0x1000
   2b708:	bne	2b568 <__assert_fail@plt+0x1a164>
   2b70c:	ands	r3, r5, #8192	; 0x2000
   2b710:	beq	2b758 <__assert_fail@plt+0x1a354>
   2b714:	movw	r2, #62976	; 0xf600
   2b718:	movt	r2, #5
   2b71c:	movw	r1, #16556	; 0x40ac
   2b720:	mov	r0, #1
   2b724:	movt	r1, #6
   2b728:	bl	1132c <__printf_chk@plt>
   2b72c:	tst	r5, #16384	; 0x4000
   2b730:	bne	2b590 <__assert_fail@plt+0x1a18c>
   2b734:	ands	r3, r5, #32768	; 0x8000
   2b738:	bne	2b5b0 <__assert_fail@plt+0x1a1ac>
   2b73c:	tst	r5, #65536	; 0x10000
   2b740:	beq	2b600 <__assert_fail@plt+0x1a1fc>
   2b744:	cmp	r3, #0
   2b748:	beq	2b5d0 <__assert_fail@plt+0x1a1cc>
   2b74c:	movw	r2, #25084	; 0x61fc
   2b750:	movt	r2, #7
   2b754:	b	2b5d8 <__assert_fail@plt+0x1a1d4>
   2b758:	tst	r5, #16384	; 0x4000
   2b75c:	beq	2b814 <__assert_fail@plt+0x1a410>
   2b760:	cmp	r3, #0
   2b764:	beq	2b590 <__assert_fail@plt+0x1a18c>
   2b768:	movw	r2, #25084	; 0x61fc
   2b76c:	movt	r2, #7
   2b770:	b	2b598 <__assert_fail@plt+0x1a194>
   2b774:	tst	r5, #4096	; 0x1000
   2b778:	beq	2b84c <__assert_fail@plt+0x1a448>
   2b77c:	cmp	r3, #0
   2b780:	beq	2b568 <__assert_fail@plt+0x1a164>
   2b784:	movw	r2, #25084	; 0x61fc
   2b788:	movt	r2, #7
   2b78c:	b	2b570 <__assert_fail@plt+0x1a16c>
   2b790:	tst	r5, #1024	; 0x400
   2b794:	beq	2b868 <__assert_fail@plt+0x1a464>
   2b798:	cmp	r3, #0
   2b79c:	beq	2b540 <__assert_fail@plt+0x1a13c>
   2b7a0:	movw	r2, #25084	; 0x61fc
   2b7a4:	movt	r2, #7
   2b7a8:	b	2b548 <__assert_fail@plt+0x1a144>
   2b7ac:	tst	r5, #128	; 0x80
   2b7b0:	beq	2b884 <__assert_fail@plt+0x1a480>
   2b7b4:	cmp	r3, #0
   2b7b8:	beq	2b518 <__assert_fail@plt+0x1a114>
   2b7bc:	movw	r2, #25084	; 0x61fc
   2b7c0:	movt	r2, #7
   2b7c4:	b	2b520 <__assert_fail@plt+0x1a11c>
   2b7c8:	tst	r5, #32
   2b7cc:	beq	2b8a0 <__assert_fail@plt+0x1a49c>
   2b7d0:	cmp	r3, #0
   2b7d4:	beq	2b4f0 <__assert_fail@plt+0x1a0ec>
   2b7d8:	movw	r2, #25084	; 0x61fc
   2b7dc:	movt	r2, #7
   2b7e0:	b	2b4f8 <__assert_fail@plt+0x1a0f4>
   2b7e4:	tst	r5, #4
   2b7e8:	bne	2bb10 <__assert_fail@plt+0x1a70c>
   2b7ec:	movw	r7, #16696	; 0x4138
   2b7f0:	movt	r7, #9
   2b7f4:	mov	r3, #1
   2b7f8:	tst	r5, #8
   2b7fc:	beq	2b830 <__assert_fail@plt+0x1a42c>
   2b800:	cmp	r3, #0
   2b804:	beq	2b4c8 <__assert_fail@plt+0x1a0c4>
   2b808:	movw	r2, #25084	; 0x61fc
   2b80c:	movt	r2, #7
   2b810:	b	2b4d0 <__assert_fail@plt+0x1a0cc>
   2b814:	tst	r5, #32768	; 0x8000
   2b818:	beq	2b73c <__assert_fail@plt+0x1a338>
   2b81c:	cmp	r3, #0
   2b820:	beq	2b5b0 <__assert_fail@plt+0x1a1ac>
   2b824:	movw	r2, #25084	; 0x61fc
   2b828:	movt	r2, #7
   2b82c:	b	2b5b8 <__assert_fail@plt+0x1a1b4>
   2b830:	tst	r5, #16
   2b834:	beq	2b7c8 <__assert_fail@plt+0x1a3c4>
   2b838:	cmp	r3, #0
   2b83c:	beq	2b674 <__assert_fail@plt+0x1a270>
   2b840:	movw	r2, #25084	; 0x61fc
   2b844:	movt	r2, #7
   2b848:	b	2b67c <__assert_fail@plt+0x1a278>
   2b84c:	tst	r5, #8192	; 0x2000
   2b850:	beq	2b758 <__assert_fail@plt+0x1a354>
   2b854:	cmp	r3, #0
   2b858:	beq	2b714 <__assert_fail@plt+0x1a310>
   2b85c:	movw	r2, #25084	; 0x61fc
   2b860:	movt	r2, #7
   2b864:	b	2b71c <__assert_fail@plt+0x1a318>
   2b868:	tst	r5, #2048	; 0x800
   2b86c:	beq	2b774 <__assert_fail@plt+0x1a370>
   2b870:	cmp	r3, #0
   2b874:	beq	2b6ec <__assert_fail@plt+0x1a2e8>
   2b878:	movw	r2, #25084	; 0x61fc
   2b87c:	movt	r2, #7
   2b880:	b	2b6f4 <__assert_fail@plt+0x1a2f0>
   2b884:	tst	r5, #256	; 0x100
   2b888:	beq	2b790 <__assert_fail@plt+0x1a38c>
   2b88c:	cmp	r3, #0
   2b890:	beq	2b6c4 <__assert_fail@plt+0x1a2c0>
   2b894:	movw	r2, #25084	; 0x61fc
   2b898:	movt	r2, #7
   2b89c:	b	2b6cc <__assert_fail@plt+0x1a2c8>
   2b8a0:	tst	r5, #64	; 0x40
   2b8a4:	beq	2b7ac <__assert_fail@plt+0x1a3a8>
   2b8a8:	cmp	r3, #0
   2b8ac:	beq	2b69c <__assert_fail@plt+0x1a298>
   2b8b0:	movw	r2, #25084	; 0x61fc
   2b8b4:	movt	r2, #7
   2b8b8:	b	2b6a4 <__assert_fail@plt+0x1a2a0>
   2b8bc:	movw	r7, #16696	; 0x4138
   2b8c0:	movt	r7, #9
   2b8c4:	mov	r2, #9
   2b8c8:	movw	r0, #16624	; 0x40f0
   2b8cc:	mov	r1, #1
   2b8d0:	ldr	r3, [r7]
   2b8d4:	movt	r0, #6
   2b8d8:	bl	111b8 <fwrite@plt>
   2b8dc:	tst	r5, #2
   2b8e0:	movwne	r2, #62976	; 0xf600
   2b8e4:	movtne	r2, #5
   2b8e8:	bne	2bac4 <__assert_fail@plt+0x1a6c0>
   2b8ec:	ands	r3, r5, #4
   2b8f0:	beq	2b414 <__assert_fail@plt+0x1a010>
   2b8f4:	movw	r2, #62976	; 0xf600
   2b8f8:	movt	r2, #5
   2b8fc:	movw	r1, #16644	; 0x4104
   2b900:	mov	r0, #1
   2b904:	movt	r1, #6
   2b908:	bl	1132c <__printf_chk@plt>
   2b90c:	tst	r5, #8
   2b910:	bne	2bb00 <__assert_fail@plt+0x1a6fc>
   2b914:	ands	r3, r5, #16
   2b918:	beq	2ba54 <__assert_fail@plt+0x1a650>
   2b91c:	movw	r2, #62976	; 0xf600
   2b920:	movt	r2, #5
   2b924:	movw	r1, #16664	; 0x4118
   2b928:	mov	r0, #1
   2b92c:	movt	r1, #6
   2b930:	bl	1132c <__printf_chk@plt>
   2b934:	tst	r5, #32
   2b938:	bne	2b44c <__assert_fail@plt+0x1a048>
   2b93c:	ands	r3, r5, #64	; 0x40
   2b940:	beq	2b9e4 <__assert_fail@plt+0x1a5e0>
   2b944:	movw	r2, #62976	; 0xf600
   2b948:	movt	r2, #5
   2b94c:	movw	r1, #16684	; 0x412c
   2b950:	mov	r0, #1
   2b954:	movt	r1, #6
   2b958:	bl	1132c <__printf_chk@plt>
   2b95c:	tst	r5, #128	; 0x80
   2b960:	bne	2ba8c <__assert_fail@plt+0x1a688>
   2b964:	ands	r3, r5, #4096	; 0x1000
   2b968:	beq	2b9c8 <__assert_fail@plt+0x1a5c4>
   2b96c:	movw	r2, #62976	; 0xf600
   2b970:	movt	r2, #5
   2b974:	movw	r1, #16704	; 0x4140
   2b978:	mov	r0, #1
   2b97c:	movt	r1, #6
   2b980:	bl	1132c <__printf_chk@plt>
   2b984:	tst	r5, #8192	; 0x2000
   2b988:	beq	2b9a4 <__assert_fail@plt+0x1a5a0>
   2b98c:	movw	r2, #62976	; 0xf600
   2b990:	movt	r2, #5
   2b994:	movw	r1, #16716	; 0x414c
   2b998:	mov	r0, #1
   2b99c:	movt	r1, #6
   2b9a0:	bl	1132c <__printf_chk@plt>
   2b9a4:	tst	r5, #65536	; 0x10000
   2b9a8:	beq	2b600 <__assert_fail@plt+0x1a1fc>
   2b9ac:	movw	r2, #62976	; 0xf600
   2b9b0:	movt	r2, #5
   2b9b4:	movw	r1, #16724	; 0x4154
   2b9b8:	mov	r0, #1
   2b9bc:	movt	r1, #6
   2b9c0:	bl	1132c <__printf_chk@plt>
   2b9c4:	b	2b600 <__assert_fail@plt+0x1a1fc>
   2b9c8:	tst	r5, #8192	; 0x2000
   2b9cc:	beq	2ba1c <__assert_fail@plt+0x1a618>
   2b9d0:	cmp	r3, #0
   2b9d4:	beq	2b98c <__assert_fail@plt+0x1a588>
   2b9d8:	movw	r2, #25084	; 0x61fc
   2b9dc:	movt	r2, #7
   2b9e0:	b	2b994 <__assert_fail@plt+0x1a590>
   2b9e4:	tst	r5, #128	; 0x80
   2b9e8:	beq	2ba38 <__assert_fail@plt+0x1a634>
   2b9ec:	cmp	r3, #0
   2b9f0:	beq	2ba8c <__assert_fail@plt+0x1a688>
   2b9f4:	movw	r2, #25084	; 0x61fc
   2b9f8:	movt	r2, #7
   2b9fc:	movw	r1, #16696	; 0x4138
   2ba00:	mov	r0, #1
   2ba04:	movt	r1, #6
   2ba08:	bl	1132c <__printf_chk@plt>
   2ba0c:	tst	r5, #4096	; 0x1000
   2ba10:	bne	2b96c <__assert_fail@plt+0x1a568>
   2ba14:	ands	r3, r5, #8192	; 0x2000
   2ba18:	bne	2b98c <__assert_fail@plt+0x1a588>
   2ba1c:	tst	r5, #65536	; 0x10000
   2ba20:	beq	2b600 <__assert_fail@plt+0x1a1fc>
   2ba24:	cmp	r3, #0
   2ba28:	beq	2b9ac <__assert_fail@plt+0x1a5a8>
   2ba2c:	movw	r2, #25084	; 0x61fc
   2ba30:	movt	r2, #7
   2ba34:	b	2b9b4 <__assert_fail@plt+0x1a5b0>
   2ba38:	tst	r5, #4096	; 0x1000
   2ba3c:	beq	2b9c8 <__assert_fail@plt+0x1a5c4>
   2ba40:	cmp	r3, #0
   2ba44:	beq	2b96c <__assert_fail@plt+0x1a568>
   2ba48:	movw	r2, #25084	; 0x61fc
   2ba4c:	movt	r2, #7
   2ba50:	b	2b974 <__assert_fail@plt+0x1a570>
   2ba54:	tst	r5, #32
   2ba58:	beq	2ba98 <__assert_fail@plt+0x1a694>
   2ba5c:	cmp	r3, #0
   2ba60:	beq	2b44c <__assert_fail@plt+0x1a048>
   2ba64:	movw	r2, #25084	; 0x61fc
   2ba68:	movt	r2, #7
   2ba6c:	movw	r1, #16672	; 0x4120
   2ba70:	mov	r0, #1
   2ba74:	movt	r1, #6
   2ba78:	bl	1132c <__printf_chk@plt>
   2ba7c:	tst	r5, #64	; 0x40
   2ba80:	bne	2b944 <__assert_fail@plt+0x1a540>
   2ba84:	ands	r3, r5, #128	; 0x80
   2ba88:	beq	2ba38 <__assert_fail@plt+0x1a634>
   2ba8c:	movw	r2, #62976	; 0xf600
   2ba90:	movt	r2, #5
   2ba94:	b	2b9fc <__assert_fail@plt+0x1a5f8>
   2ba98:	tst	r5, #64	; 0x40
   2ba9c:	beq	2b9e4 <__assert_fail@plt+0x1a5e0>
   2baa0:	cmp	r3, #0
   2baa4:	beq	2b944 <__assert_fail@plt+0x1a540>
   2baa8:	movw	r2, #25084	; 0x61fc
   2baac:	movt	r2, #7
   2bab0:	b	2b94c <__assert_fail@plt+0x1a548>
   2bab4:	movw	r2, #25084	; 0x61fc
   2bab8:	movw	r7, #16696	; 0x4138
   2babc:	movt	r2, #7
   2bac0:	movt	r7, #9
   2bac4:	movw	r1, #16636	; 0x40fc
   2bac8:	mov	r0, #1
   2bacc:	movt	r1, #6
   2bad0:	bl	1132c <__printf_chk@plt>
   2bad4:	tst	r5, #4
   2bad8:	bne	2b8f4 <__assert_fail@plt+0x1a4f0>
   2badc:	ands	r3, r5, #8
   2bae0:	bne	2bb00 <__assert_fail@plt+0x1a6fc>
   2bae4:	tst	r5, #16
   2bae8:	beq	2ba54 <__assert_fail@plt+0x1a650>
   2baec:	cmp	r3, #0
   2baf0:	beq	2b91c <__assert_fail@plt+0x1a518>
   2baf4:	movw	r2, #25084	; 0x61fc
   2baf8:	movt	r2, #7
   2bafc:	b	2b924 <__assert_fail@plt+0x1a520>
   2bb00:	movw	r2, #62976	; 0xf600
   2bb04:	movt	r2, #5
   2bb08:	b	2b42c <__assert_fail@plt+0x1a028>
   2bb0c:	bl	1117c <__stack_chk_fail@plt>
   2bb10:	movw	r2, #25084	; 0x61fc
   2bb14:	movw	r7, #16696	; 0x4138
   2bb18:	movt	r2, #7
   2bb1c:	movt	r7, #9
   2bb20:	b	2b654 <__assert_fail@plt+0x1a250>
   2bb24:	movw	r2, #25084	; 0x61fc
   2bb28:	movw	r7, #16696	; 0x4138
   2bb2c:	movt	r2, #7
   2bb30:	movt	r7, #9
   2bb34:	b	2b8fc <__assert_fail@plt+0x1a4f8>
   2bb38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bb3c:	movw	r4, #16712	; 0x4148
   2bb40:	movt	r4, #9
   2bb44:	movw	r5, #16680	; 0x4128
   2bb48:	movt	r5, #9
   2bb4c:	movw	r3, #17791	; 0x457f
   2bb50:	ldr	r1, [r4]
   2bb54:	movt	r3, #17996	; 0x464c
   2bb58:	ldr	r2, [r5]
   2bb5c:	sub	sp, sp, #44	; 0x2c
   2bb60:	cmp	r1, r3
   2bb64:	str	r2, [sp, #36]	; 0x24
   2bb68:	beq	2bba0 <__assert_fail@plt+0x1a79c>
   2bb6c:	mov	r2, #5
   2bb70:	movw	r1, #16852	; 0x41d4
   2bb74:	mov	r0, #0
   2bb78:	movt	r1, #6
   2bb7c:	bl	11170 <dcgettext@plt>
   2bb80:	bl	4b2b0 <error@@Base>
   2bb84:	mov	r0, #0
   2bb88:	ldr	r2, [sp, #36]	; 0x24
   2bb8c:	ldr	r3, [r5]
   2bb90:	cmp	r2, r3
   2bb94:	bne	2e190 <__assert_fail@plt+0x1cd8c>
   2bb98:	add	sp, sp, #44	; 0x2c
   2bb9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bba0:	ldrh	r0, [r4, #50]	; 0x32
   2bba4:	bl	3f684 <__assert_fail@plt+0x2e280>
   2bba8:	ldr	r3, [r4, #1868]	; 0x74c
   2bbac:	cmp	r3, #0
   2bbb0:	bne	2bc2c <__assert_fail@plt+0x1a828>
   2bbb4:	ldr	r0, [r4, #220]	; 0xdc
   2bbb8:	movw	r3, #16712	; 0x4148
   2bbbc:	movt	r3, #9
   2bbc0:	cmp	r0, #0
   2bbc4:	beq	2c188 <__assert_fail@plt+0x1ad84>
   2bbc8:	ldr	r1, [r3, #60]	; 0x3c
   2bbcc:	movw	r2, #65535	; 0xffff
   2bbd0:	cmp	r1, r2
   2bbd4:	beq	2c124 <__assert_fail@plt+0x1ad20>
   2bbd8:	ldr	r2, [r4, #68]	; 0x44
   2bbdc:	movw	r3, #16712	; 0x4148
   2bbe0:	movt	r3, #9
   2bbe4:	movw	r1, #65535	; 0xffff
   2bbe8:	cmp	r2, #0
   2bbec:	ldreq	r2, [r0, #32]
   2bbf0:	streq	r2, [r3, #68]	; 0x44
   2bbf4:	movw	r3, #16712	; 0x4148
   2bbf8:	ldr	r2, [r4, #72]	; 0x48
   2bbfc:	movt	r3, #9
   2bc00:	cmp	r2, r1
   2bc04:	beq	2c118 <__assert_fail@plt+0x1ad14>
   2bc08:	ldr	r1, [r3, #68]	; 0x44
   2bc0c:	cmp	r2, r1
   2bc10:	movcs	r2, #0
   2bc14:	strcs	r2, [r3, #72]	; 0x48
   2bc18:	bl	1111c <free@plt>
   2bc1c:	mov	r3, #0
   2bc20:	mov	r0, #1
   2bc24:	str	r3, [r4, #220]	; 0xdc
   2bc28:	b	2bb88 <__assert_fail@plt+0x1a784>
   2bc2c:	mov	r2, #5
   2bc30:	movw	r1, #16916	; 0x4214
   2bc34:	mov	r0, #0
   2bc38:	movt	r1, #6
   2bc3c:	bl	11170 <dcgettext@plt>
   2bc40:	sub	r6, r4, #1
   2bc44:	add	r7, r4, #15
   2bc48:	mov	r1, r0
   2bc4c:	mov	r0, #1
   2bc50:	bl	1132c <__printf_chk@plt>
   2bc54:	mov	r2, #5
   2bc58:	movw	r1, #16932	; 0x4224
   2bc5c:	mov	r0, #0
   2bc60:	movt	r1, #6
   2bc64:	bl	11170 <dcgettext@plt>
   2bc68:	mov	r1, r0
   2bc6c:	mov	r0, #1
   2bc70:	bl	1132c <__printf_chk@plt>
   2bc74:	ldrb	r2, [r6, #1]!
   2bc78:	movw	r1, #16944	; 0x4230
   2bc7c:	mov	r0, #1
   2bc80:	movt	r1, #6
   2bc84:	bl	1132c <__printf_chk@plt>
   2bc88:	cmp	r6, r7
   2bc8c:	bne	2bc74 <__assert_fail@plt+0x1a870>
   2bc90:	mov	r0, #10
   2bc94:	bl	112fc <putchar@plt>
   2bc98:	movw	r1, #16952	; 0x4238
   2bc9c:	mov	r0, #0
   2bca0:	movt	r1, #6
   2bca4:	mov	r2, #5
   2bca8:	bl	11170 <dcgettext@plt>
   2bcac:	ldrb	r6, [r4, #4]
   2bcb0:	cmp	r6, #1
   2bcb4:	mov	r7, r0
   2bcb8:	beq	2c2ec <__assert_fail@plt+0x1aee8>
   2bcbc:	bcc	2c2d0 <__assert_fail@plt+0x1aecc>
   2bcc0:	cmp	r6, #2
   2bcc4:	movweq	r2, #16740	; 0x4164
   2bcc8:	movteq	r2, #6
   2bccc:	bne	2c150 <__assert_fail@plt+0x1ad4c>
   2bcd0:	mov	r1, r7
   2bcd4:	mov	r0, #1
   2bcd8:	bl	1132c <__printf_chk@plt>
   2bcdc:	movw	r1, #16996	; 0x4264
   2bce0:	mov	r0, #0
   2bce4:	movt	r1, #6
   2bce8:	mov	r2, #5
   2bcec:	bl	11170 <dcgettext@plt>
   2bcf0:	ldrb	r6, [r4, #5]
   2bcf4:	cmp	r6, #1
   2bcf8:	mov	r7, r0
   2bcfc:	beq	2c2b4 <__assert_fail@plt+0x1aeb0>
   2bd00:	bcc	2c2f8 <__assert_fail@plt+0x1aef4>
   2bd04:	cmp	r6, #2
   2bd08:	beq	2c134 <__assert_fail@plt+0x1ad30>
   2bd0c:	mov	r2, #5
   2bd10:	movw	r1, #63476	; 0xf7f4
   2bd14:	mov	r0, #0
   2bd18:	movt	r1, #5
   2bd1c:	bl	11170 <dcgettext@plt>
   2bd20:	mov	r1, #32
   2bd24:	mov	r2, #1
   2bd28:	str	r6, [sp, #4]
   2bd2c:	mov	r3, r1
   2bd30:	str	r0, [sp]
   2bd34:	ldr	r0, [pc, #4004]	; 2cce0 <__assert_fail@plt+0x1b8dc>
   2bd38:	bl	113f8 <__snprintf_chk@plt>
   2bd3c:	ldr	r2, [pc, #3996]	; 2cce0 <__assert_fail@plt+0x1b8dc>
   2bd40:	mov	r1, r7
   2bd44:	mov	r0, #1
   2bd48:	bl	1132c <__printf_chk@plt>
   2bd4c:	movw	r1, #17100	; 0x42cc
   2bd50:	mov	r0, #0
   2bd54:	movt	r1, #6
   2bd58:	mov	r2, #5
   2bd5c:	bl	11170 <dcgettext@plt>
   2bd60:	ldrb	r6, [r4, #6]
   2bd64:	cmp	r6, #1
   2bd68:	mov	r7, r0
   2bd6c:	beq	2c2a8 <__assert_fail@plt+0x1aea4>
   2bd70:	cmp	r6, #0
   2bd74:	movweq	r3, #25084	; 0x61fc
   2bd78:	movteq	r3, #7
   2bd7c:	bne	2c34c <__assert_fail@plt+0x1af48>
   2bd80:	mov	r1, r7
   2bd84:	mov	r2, r6
   2bd88:	mov	r0, #1
   2bd8c:	movw	r8, #24896	; 0x6140
   2bd90:	bl	1132c <__printf_chk@plt>
   2bd94:	mov	r2, #5
   2bd98:	movw	r1, #17160	; 0x4308
   2bd9c:	mov	r0, #0
   2bda0:	movt	r1, #6
   2bda4:	movt	r8, #9
   2bda8:	bl	11170 <dcgettext@plt>
   2bdac:	mov	r6, r0
   2bdb0:	ldrb	r0, [r4, #7]
   2bdb4:	bl	188f4 <__assert_fail@plt+0x74f0>
   2bdb8:	mov	r1, r6
   2bdbc:	mov	r2, r0
   2bdc0:	mov	r0, #1
   2bdc4:	bl	1132c <__printf_chk@plt>
   2bdc8:	mov	r2, #5
   2bdcc:	movw	r1, #17204	; 0x4334
   2bdd0:	mov	r0, #0
   2bdd4:	movt	r1, #6
   2bdd8:	bl	11170 <dcgettext@plt>
   2bddc:	ldrb	r2, [r4, #8]
   2bde0:	mov	r1, r0
   2bde4:	mov	r0, #1
   2bde8:	bl	1132c <__printf_chk@plt>
   2bdec:	mov	r2, #5
   2bdf0:	movw	r1, #17248	; 0x4360
   2bdf4:	mov	r0, #0
   2bdf8:	movt	r1, #6
   2bdfc:	bl	11170 <dcgettext@plt>
   2be00:	mov	r6, r0
   2be04:	ldrh	r0, [r4, #48]	; 0x30
   2be08:	bl	135cc <__assert_fail@plt+0x21c8>
   2be0c:	mov	r1, r6
   2be10:	mov	r2, r0
   2be14:	mov	r0, #1
   2be18:	bl	1132c <__printf_chk@plt>
   2be1c:	mov	r2, #5
   2be20:	movw	r1, #17292	; 0x438c
   2be24:	mov	r0, #0
   2be28:	movt	r1, #6
   2be2c:	bl	11170 <dcgettext@plt>
   2be30:	mov	r6, r0
   2be34:	ldrh	r0, [r4, #50]	; 0x32
   2be38:	bl	136f0 <__assert_fail@plt+0x22ec>
   2be3c:	mov	r1, r6
   2be40:	mov	r2, r0
   2be44:	mov	r0, #1
   2be48:	bl	1132c <__printf_chk@plt>
   2be4c:	mov	r2, #5
   2be50:	movw	r1, #17336	; 0x43b8
   2be54:	mov	r0, #0
   2be58:	movt	r1, #6
   2be5c:	bl	11170 <dcgettext@plt>
   2be60:	ldr	r2, [r4, #40]	; 0x28
   2be64:	mov	r1, r0
   2be68:	mov	r0, #1
   2be6c:	bl	1132c <__printf_chk@plt>
   2be70:	mov	r2, #5
   2be74:	movw	r1, #17380	; 0x43e4
   2be78:	mov	r0, #0
   2be7c:	movt	r1, #6
   2be80:	bl	11170 <dcgettext@plt>
   2be84:	mov	r1, r0
   2be88:	mov	r0, #1
   2be8c:	bl	1132c <__printf_chk@plt>
   2be90:	ldrd	r0, [r4, #16]
   2be94:	mov	r2, #4
   2be98:	bl	16c84 <__assert_fail@plt+0x5880>
   2be9c:	mov	r2, #5
   2bea0:	movw	r1, #17420	; 0x440c
   2bea4:	mov	r0, #0
   2bea8:	movt	r1, #6
   2beac:	bl	11170 <dcgettext@plt>
   2beb0:	mov	r1, r0
   2beb4:	mov	r0, #1
   2beb8:	bl	1132c <__printf_chk@plt>
   2bebc:	ldrd	r0, [r4, #24]
   2bec0:	mov	r2, #1
   2bec4:	bl	16c84 <__assert_fail@plt+0x5880>
   2bec8:	mov	r2, #5
   2becc:	movw	r1, #17460	; 0x4434
   2bed0:	mov	r0, #0
   2bed4:	movt	r1, #6
   2bed8:	bl	11170 <dcgettext@plt>
   2bedc:	mov	r1, r0
   2bee0:	mov	r0, #1
   2bee4:	bl	1132c <__printf_chk@plt>
   2bee8:	ldrd	r0, [r4, #32]
   2beec:	mov	r2, #1
   2bef0:	bl	16c84 <__assert_fail@plt+0x5880>
   2bef4:	mov	r2, #5
   2bef8:	movw	r1, #17520	; 0x4470
   2befc:	mov	r0, #0
   2bf00:	movt	r1, #6
   2bf04:	bl	11170 <dcgettext@plt>
   2bf08:	mov	r1, r0
   2bf0c:	mov	r0, #1
   2bf10:	bl	1132c <__printf_chk@plt>
   2bf14:	movw	r1, #17540	; 0x4484
   2bf18:	mov	r0, #0
   2bf1c:	movt	r1, #6
   2bf20:	mov	r2, #5
   2bf24:	bl	11170 <dcgettext@plt>
   2bf28:	ldr	r6, [r4, #44]	; 0x2c
   2bf2c:	mov	r1, #0
   2bf30:	ldrh	r3, [r4, #50]	; 0x32
   2bf34:	cmp	r6, r1
   2bf38:	strb	r1, [r8, #-1376]	; 0xfffffaa0
   2bf3c:	mov	r7, r0
   2bf40:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2bf44:	cmp	r3, #88	; 0x58
   2bf48:	beq	2cb1c <__assert_fail@plt+0x1b718>
   2bf4c:	bhi	2c190 <__assert_fail@plt+0x1ad8c>
   2bf50:	cmp	r3, #36	; 0x24
   2bf54:	beq	2d33c <__assert_fail@plt+0x1bf38>
   2bf58:	bhi	2c368 <__assert_fail@plt+0x1af64>
   2bf5c:	cmp	r3, #15
   2bf60:	beq	2d8dc <__assert_fail@plt+0x1c4d8>
   2bf64:	bls	2c864 <__assert_fail@plt+0x1b460>
   2bf68:	cmp	r3, #21
   2bf6c:	beq	2d8a4 <__assert_fail@plt+0x1c4a0>
   2bf70:	cmp	r3, #22
   2bf74:	beq	2d878 <__assert_fail@plt+0x1c474>
   2bf78:	cmp	r3, #20
   2bf7c:	beq	2d518 <__assert_fail@plt+0x1c114>
   2bf80:	ldr	r3, [pc, #3424]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2bf84:	mov	r2, r6
   2bf88:	mov	r1, r7
   2bf8c:	mov	r0, #1
   2bf90:	bl	1132c <__printf_chk@plt>
   2bf94:	mov	r2, #5
   2bf98:	movw	r1, #21456	; 0x53d0
   2bf9c:	mov	r0, #0
   2bfa0:	movt	r1, #6
   2bfa4:	movw	r6, #16712	; 0x4148
   2bfa8:	bl	11170 <dcgettext@plt>
   2bfac:	ldr	r2, [r4, #52]	; 0x34
   2bfb0:	movt	r6, #9
   2bfb4:	mov	r1, r0
   2bfb8:	mov	r0, #1
   2bfbc:	bl	1132c <__printf_chk@plt>
   2bfc0:	mov	r2, #5
   2bfc4:	movw	r1, #21508	; 0x5404
   2bfc8:	mov	r0, #0
   2bfcc:	movt	r1, #6
   2bfd0:	bl	11170 <dcgettext@plt>
   2bfd4:	ldr	r2, [r4, #56]	; 0x38
   2bfd8:	mov	r1, r0
   2bfdc:	mov	r0, #1
   2bfe0:	bl	1132c <__printf_chk@plt>
   2bfe4:	mov	r2, #5
   2bfe8:	movw	r1, #21560	; 0x5438
   2bfec:	mov	r0, #0
   2bff0:	movt	r1, #6
   2bff4:	bl	11170 <dcgettext@plt>
   2bff8:	ldr	r2, [r4, #60]	; 0x3c
   2bffc:	mov	r1, r0
   2c000:	mov	r0, #1
   2c004:	bl	1132c <__printf_chk@plt>
   2c008:	ldr	r3, [r4, #220]	; 0xdc
   2c00c:	cmp	r3, #0
   2c010:	beq	2c024 <__assert_fail@plt+0x1ac20>
   2c014:	ldr	r1, [r6, #60]	; 0x3c
   2c018:	movw	r2, #65535	; 0xffff
   2c01c:	cmp	r1, r2
   2c020:	beq	2c32c <__assert_fail@plt+0x1af28>
   2c024:	movw	r6, #16696	; 0x4138
   2c028:	movt	r6, #9
   2c02c:	mov	r0, #10
   2c030:	movw	r7, #16712	; 0x4148
   2c034:	ldr	r1, [r6]
   2c038:	movt	r7, #9
   2c03c:	bl	111ac <_IO_putc@plt>
   2c040:	mov	r2, #5
   2c044:	movw	r1, #21612	; 0x546c
   2c048:	mov	r0, #0
   2c04c:	movt	r1, #6
   2c050:	bl	11170 <dcgettext@plt>
   2c054:	ldr	r2, [r4, #64]	; 0x40
   2c058:	mov	r1, r0
   2c05c:	mov	r0, #1
   2c060:	bl	1132c <__printf_chk@plt>
   2c064:	mov	r2, #5
   2c068:	movw	r1, #21664	; 0x54a0
   2c06c:	mov	r0, #0
   2c070:	movt	r1, #6
   2c074:	bl	11170 <dcgettext@plt>
   2c078:	ldr	r2, [r4, #68]	; 0x44
   2c07c:	mov	r1, r0
   2c080:	mov	r0, #1
   2c084:	bl	1132c <__printf_chk@plt>
   2c088:	ldr	r3, [r4, #220]	; 0xdc
   2c08c:	cmp	r3, #0
   2c090:	beq	2c0a0 <__assert_fail@plt+0x1ac9c>
   2c094:	ldr	r2, [r7, #68]	; 0x44
   2c098:	cmp	r2, #0
   2c09c:	beq	2c314 <__assert_fail@plt+0x1af10>
   2c0a0:	ldr	r1, [r6]
   2c0a4:	mov	r0, #10
   2c0a8:	bl	111ac <_IO_putc@plt>
   2c0ac:	mov	r2, #5
   2c0b0:	movw	r1, #21708	; 0x54cc
   2c0b4:	mov	r0, #0
   2c0b8:	movt	r1, #6
   2c0bc:	movw	r7, #16712	; 0x4148
   2c0c0:	bl	11170 <dcgettext@plt>
   2c0c4:	ldr	r2, [r4, #72]	; 0x48
   2c0c8:	movt	r7, #9
   2c0cc:	mov	r1, r0
   2c0d0:	mov	r0, #1
   2c0d4:	bl	1132c <__printf_chk@plt>
   2c0d8:	ldr	r2, [r4, #220]	; 0xdc
   2c0dc:	ldr	r3, [r7, #72]	; 0x48
   2c0e0:	cmp	r2, #0
   2c0e4:	beq	2c0f4 <__assert_fail@plt+0x1acf0>
   2c0e8:	movw	r1, #65535	; 0xffff
   2c0ec:	cmp	r3, r1
   2c0f0:	beq	2c740 <__assert_fail@plt+0x1b33c>
   2c0f4:	cmp	r3, #0
   2c0f8:	beq	2c108 <__assert_fail@plt+0x1ad04>
   2c0fc:	ldr	r2, [r4, #68]	; 0x44
   2c100:	cmp	r2, r3
   2c104:	bls	2c404 <__assert_fail@plt+0x1b000>
   2c108:	ldr	r1, [r6]
   2c10c:	mov	r0, #10
   2c110:	bl	111ac <_IO_putc@plt>
   2c114:	b	2bbb4 <__assert_fail@plt+0x1a7b0>
   2c118:	ldr	r2, [r0, #40]	; 0x28
   2c11c:	str	r2, [r3, #72]	; 0x48
   2c120:	b	2bc18 <__assert_fail@plt+0x1a814>
   2c124:	ldr	r2, [r0, #44]	; 0x2c
   2c128:	cmp	r2, #0
   2c12c:	strne	r2, [r3, #60]	; 0x3c
   2c130:	b	2bbd8 <__assert_fail@plt+0x1a7d4>
   2c134:	mov	r2, #5
   2c138:	movw	r1, #17072	; 0x42b0
   2c13c:	mov	r0, #0
   2c140:	movt	r1, #6
   2c144:	bl	11170 <dcgettext@plt>
   2c148:	mov	r2, r0
   2c14c:	b	2bd40 <__assert_fail@plt+0x1a93c>
   2c150:	mov	r2, #5
   2c154:	movw	r1, #63476	; 0xf7f4
   2c158:	mov	r0, #0
   2c15c:	movt	r1, #5
   2c160:	bl	11170 <dcgettext@plt>
   2c164:	mov	r1, #32
   2c168:	mov	r2, #1
   2c16c:	str	r6, [sp, #4]
   2c170:	mov	r3, r1
   2c174:	str	r0, [sp]
   2c178:	ldr	r0, [pc, #2916]	; 2cce4 <__assert_fail@plt+0x1b8e0>
   2c17c:	bl	113f8 <__snprintf_chk@plt>
   2c180:	ldr	r2, [pc, #2908]	; 2cce4 <__assert_fail@plt+0x1b8e0>
   2c184:	b	2bcd0 <__assert_fail@plt+0x1a8cc>
   2c188:	mov	r0, #1
   2c18c:	b	2bb88 <__assert_fail@plt+0x1a784>
   2c190:	cmp	r3, #167	; 0xa7
   2c194:	beq	2ccec <__assert_fail@plt+0x1b8e8>
   2c198:	bls	2c428 <__assert_fail@plt+0x1b024>
   2c19c:	cmp	r3, #221	; 0xdd
   2c1a0:	beq	2cdf8 <__assert_fail@plt+0x1b9f4>
   2c1a4:	bls	2c7a0 <__assert_fail@plt+0x1b39c>
   2c1a8:	movw	r2, #36929	; 0x9041
   2c1ac:	cmp	r3, r2
   2c1b0:	beq	2cb1c <__assert_fail@plt+0x1b718>
   2c1b4:	bls	2ca78 <__assert_fail@plt+0x1b674>
   2c1b8:	movw	r2, #36992	; 0x9080
   2c1bc:	cmp	r3, r2
   2c1c0:	beq	2cacc <__assert_fail@plt+0x1b6c8>
   2c1c4:	movw	r2, #61453	; 0xf00d
   2c1c8:	cmp	r3, r2
   2c1cc:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2c1d0:	and	r3, r6, #-16777216	; 0xff000000
   2c1d4:	cmp	r3, #33554432	; 0x2000000
   2c1d8:	beq	2ebe8 <__assert_fail@plt+0x1d7e4>
   2c1dc:	bls	2de30 <__assert_fail@plt+0x1ca2c>
   2c1e0:	cmp	r3, #134217728	; 0x8000000
   2c1e4:	beq	2e7c4 <__assert_fail@plt+0x1d3c0>
   2c1e8:	cmp	r3, #268435456	; 0x10000000
   2c1ec:	beq	2e7a8 <__assert_fail@plt+0x1d3a4>
   2c1f0:	cmp	r3, #67108864	; 0x4000000
   2c1f4:	beq	2e78c <__assert_fail@plt+0x1d388>
   2c1f8:	mov	r2, #5
   2c1fc:	movw	r1, #18744	; 0x4938
   2c200:	mov	r0, #0
   2c204:	movt	r1, #6
   2c208:	bl	11170 <dcgettext@plt>
   2c20c:	mov	r2, #1024	; 0x400
   2c210:	mov	r1, r0
   2c214:	ldr	r0, [pc, #2764]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c218:	bl	112c0 <__strcat_chk@plt>
   2c21c:	and	r3, r6, #16711680	; 0xff0000
   2c220:	cmp	r3, #131072	; 0x20000
   2c224:	beq	2e774 <__assert_fail@plt+0x1d370>
   2c228:	bls	2db44 <__assert_fail@plt+0x1c740>
   2c22c:	cmp	r3, #196608	; 0x30000
   2c230:	beq	2e7e0 <__assert_fail@plt+0x1d3dc>
   2c234:	cmp	r3, #393216	; 0x60000
   2c238:	bne	2e7f8 <__assert_fail@plt+0x1d3f4>
   2c23c:	movw	r1, #18832	; 0x4990
   2c240:	ldr	r0, [pc, #2720]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c244:	movt	r1, #6
   2c248:	mov	r2, #1024	; 0x400
   2c24c:	bl	112c0 <__strcat_chk@plt>
   2c250:	tst	r6, #256	; 0x100
   2c254:	bne	2e2d4 <__assert_fail@plt+0x1ced0>
   2c258:	ands	r9, r6, #255	; 0xff
   2c25c:	bne	2e2ec <__assert_fail@plt+0x1cee8>
   2c260:	ands	r9, r6, #65024	; 0xfe00
   2c264:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2c268:	ldr	r8, [pc, #2680]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c26c:	mov	r0, r8
   2c270:	bl	1129c <strlen@plt>
   2c274:	mov	r2, #5
   2c278:	movw	r1, #18928	; 0x49f0
   2c27c:	movt	r1, #6
   2c280:	mov	sl, r0
   2c284:	mov	r0, #0
   2c288:	bl	11170 <dcgettext@plt>
   2c28c:	str	r9, [sp]
   2c290:	mov	r1, #1
   2c294:	mvn	r2, #0
   2c298:	mov	r3, r0
   2c29c:	add	r0, r8, sl
   2c2a0:	bl	112cc <__sprintf_chk@plt>
   2c2a4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2c2a8:	movw	r3, #16748	; 0x416c
   2c2ac:	movt	r3, #6
   2c2b0:	b	2bd80 <__assert_fail@plt+0x1a97c>
   2c2b4:	mov	r2, #5
   2c2b8:	movw	r1, #17040	; 0x4290
   2c2bc:	mov	r0, #0
   2c2c0:	movt	r1, #6
   2c2c4:	bl	11170 <dcgettext@plt>
   2c2c8:	mov	r2, r0
   2c2cc:	b	2bd40 <__assert_fail@plt+0x1a93c>
   2c2d0:	mov	r2, #5
   2c2d4:	movw	r1, #62772	; 0xf534
   2c2d8:	mov	r0, #0
   2c2dc:	movt	r1, #5
   2c2e0:	bl	11170 <dcgettext@plt>
   2c2e4:	mov	r2, r0
   2c2e8:	b	2bcd0 <__assert_fail@plt+0x1a8cc>
   2c2ec:	movw	r2, #16732	; 0x415c
   2c2f0:	movt	r2, #6
   2c2f4:	b	2bcd0 <__assert_fail@plt+0x1a8cc>
   2c2f8:	mov	r2, #5
   2c2fc:	movw	r1, #62772	; 0xf534
   2c300:	mov	r0, #0
   2c304:	movt	r1, #5
   2c308:	bl	11170 <dcgettext@plt>
   2c30c:	mov	r2, r0
   2c310:	b	2bd40 <__assert_fail@plt+0x1a93c>
   2c314:	ldr	r2, [r3, #32]
   2c318:	movw	r1, #21604	; 0x5464
   2c31c:	mov	r0, #1
   2c320:	movt	r1, #6
   2c324:	bl	1132c <__printf_chk@plt>
   2c328:	b	2c0a0 <__assert_fail@plt+0x1ac9c>
   2c32c:	ldr	r2, [r3, #44]	; 0x2c
   2c330:	cmp	r2, #0
   2c334:	beq	2c024 <__assert_fail@plt+0x1ac20>
   2c338:	movw	r1, #21604	; 0x5464
   2c33c:	mov	r0, #1
   2c340:	movt	r1, #6
   2c344:	bl	1132c <__printf_chk@plt>
   2c348:	b	2c024 <__assert_fail@plt+0x1ac20>
   2c34c:	movw	r1, #17144	; 0x42f8
   2c350:	mov	r0, #0
   2c354:	movt	r1, #6
   2c358:	mov	r2, #5
   2c35c:	bl	11170 <dcgettext@plt>
   2c360:	mov	r3, r0
   2c364:	b	2bd80 <__assert_fail@plt+0x1a97c>
   2c368:	cmp	r3, #50	; 0x32
   2c36c:	beq	2d478 <__assert_fail@plt+0x1c074>
   2c370:	bhi	2c758 <__assert_fail@plt+0x1b354>
   2c374:	cmp	r3, #42	; 0x2a
   2c378:	beq	2d5b0 <__assert_fail@plt+0x1c1ac>
   2c37c:	cmp	r3, #43	; 0x2b
   2c380:	beq	2d558 <__assert_fail@plt+0x1c154>
   2c384:	cmp	r3, #40	; 0x28
   2c388:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2c38c:	tst	r6, #1
   2c390:	and	r9, r6, #-16777216	; 0xff000000
   2c394:	biceq	r8, r6, #-16777216	; 0xff000000
   2c398:	bne	2de84 <__assert_fail@plt+0x1ca80>
   2c39c:	cmp	r9, #33554432	; 0x2000000
   2c3a0:	beq	2e8a8 <__assert_fail@plt+0x1d4a4>
   2c3a4:	bls	2ddb8 <__assert_fail@plt+0x1c9b4>
   2c3a8:	cmp	r9, #67108864	; 0x4000000
   2c3ac:	beq	2e838 <__assert_fail@plt+0x1d434>
   2c3b0:	cmp	r9, #83886080	; 0x5000000
   2c3b4:	beq	2e678 <__assert_fail@plt+0x1d274>
   2c3b8:	cmp	r9, #50331648	; 0x3000000
   2c3bc:	beq	2e660 <__assert_fail@plt+0x1d25c>
   2c3c0:	movw	r1, #17800	; 0x4588
   2c3c4:	ldr	r0, [pc, #2332]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c3c8:	movt	r1, #6
   2c3cc:	mov	r2, #1024	; 0x400
   2c3d0:	bl	112c0 <__strcat_chk@plt>
   2c3d4:	cmp	r8, #0
   2c3d8:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2c3dc:	mov	r2, #5
   2c3e0:	movw	r1, #18252	; 0x474c
   2c3e4:	mov	r0, #0
   2c3e8:	movt	r1, #6
   2c3ec:	bl	11170 <dcgettext@plt>
   2c3f0:	mov	r2, #1024	; 0x400
   2c3f4:	mov	r1, r0
   2c3f8:	ldr	r0, [pc, #2280]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c3fc:	bl	112c0 <__strcat_chk@plt>
   2c400:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2c404:	mov	r2, #5
   2c408:	movw	r1, #21760	; 0x5500
   2c40c:	mov	r0, #0
   2c410:	movt	r1, #6
   2c414:	bl	11170 <dcgettext@plt>
   2c418:	mov	r1, r0
   2c41c:	mov	r0, #1
   2c420:	bl	1132c <__printf_chk@plt>
   2c424:	b	2c108 <__assert_fail@plt+0x1ad04>
   2c428:	cmp	r3, #99	; 0x63
   2c42c:	beq	2c83c <__assert_fail@plt+0x1b438>
   2c430:	bls	2c824 <__assert_fail@plt+0x1b420>
   2c434:	cmp	r3, #106	; 0x6a
   2c438:	beq	2cca8 <__assert_fail@plt+0x1b8a4>
   2c43c:	cmp	r3, #140	; 0x8c
   2c440:	beq	2cdcc <__assert_fail@plt+0x1b9c8>
   2c444:	cmp	r3, #105	; 0x69
   2c448:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2c44c:	mov	r2, #5
   2c450:	movw	r1, #21196	; 0x52cc
   2c454:	mov	r0, #0
   2c458:	movt	r1, #6
   2c45c:	bl	11170 <dcgettext@plt>
   2c460:	ldr	r8, [pc, #2176]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c464:	mov	r9, r0
   2c468:	mov	r0, r8
   2c46c:	bl	1129c <strlen@plt>
   2c470:	mov	r2, #1024	; 0x400
   2c474:	mov	r1, r9
   2c478:	add	r0, r8, r0
   2c47c:	bl	111c4 <__stpcpy_chk@plt>
   2c480:	uxtb	r2, r6
   2c484:	sub	r2, r2, #11
   2c488:	mov	r3, r0
   2c48c:	cmp	r2, #99	; 0x63
   2c490:	ldrls	pc, [pc, r2, lsl #2]
   2c494:	b	2ecf8 <__assert_fail@plt+0x1d8f4>
   2c498:	andeq	ip, r2, r4, lsr r7
   2c49c:	andeq	ip, r2, r8, lsr #14
   2c4a0:	andeq	ip, r2, ip, lsl r7
   2c4a4:	andeq	ip, r2, r0, lsl r7
   2c4a8:	andeq	ip, r2, r4, lsl #14
   2c4ac:	strdeq	ip, [r2], -r8
   2c4b0:	strdeq	lr, [r2], -r8
   2c4b4:	strdeq	lr, [r2], -r8
   2c4b8:	strdeq	lr, [r2], -r8
   2c4bc:	strdeq	lr, [r2], -r8
   2c4c0:	strdeq	lr, [r2], -r8
   2c4c4:	strdeq	lr, [r2], -r8
   2c4c8:	strdeq	lr, [r2], -r8
   2c4cc:	strdeq	lr, [r2], -r8
   2c4d0:	strdeq	lr, [r2], -r8
   2c4d4:	strdeq	lr, [r2], -r8
   2c4d8:	strdeq	lr, [r2], -r8
   2c4dc:	strdeq	lr, [r2], -r8
   2c4e0:	strdeq	lr, [r2], -r8
   2c4e4:	strdeq	lr, [r2], -r8
   2c4e8:	andeq	ip, r2, ip, ror #13
   2c4ec:	andeq	ip, r2, r0, ror #13
   2c4f0:	ldrdeq	ip, [r2], -r4
   2c4f4:	strdeq	lr, [r2], -r8
   2c4f8:	strdeq	lr, [r2], -r8
   2c4fc:	strdeq	lr, [r2], -r8
   2c500:	strdeq	lr, [r2], -r8
   2c504:	strdeq	lr, [r2], -r8
   2c508:	strdeq	lr, [r2], -r8
   2c50c:	strdeq	lr, [r2], -r8
   2c510:	andeq	ip, r2, r8, asr #13
   2c514:			; <UNDEFINED> instruction: 0x0002c6bc
   2c518:			; <UNDEFINED> instruction: 0x0002c6b0
   2c51c:	muleq	r2, r0, r6
   2c520:	andeq	ip, r2, r8, ror r6
   2c524:	strdeq	lr, [r2], -r8
   2c528:	strdeq	lr, [r2], -r8
   2c52c:	strdeq	lr, [r2], -r8
   2c530:	strdeq	lr, [r2], -r8
   2c534:	strdeq	lr, [r2], -r8
   2c538:	strdeq	lr, [r2], -r8
   2c53c:	strdeq	lr, [r2], -r8
   2c540:	strdeq	lr, [r2], -r8
   2c544:	strdeq	lr, [r2], -r8
   2c548:	strdeq	lr, [r2], -r8
   2c54c:	strdeq	lr, [r2], -r8
   2c550:	strdeq	lr, [r2], -r8
   2c554:	strdeq	lr, [r2], -r8
   2c558:	strdeq	lr, [r2], -r8
   2c55c:	strdeq	lr, [r2], -r8
   2c560:	strdeq	lr, [r2], -r8
   2c564:	strdeq	lr, [r2], -r8
   2c568:	strdeq	lr, [r2], -r8
   2c56c:	strdeq	lr, [r2], -r8
   2c570:	strdeq	lr, [r2], -r8
   2c574:	strdeq	lr, [r2], -r8
   2c578:	strdeq	lr, [r2], -r8
   2c57c:	strdeq	lr, [r2], -r8
   2c580:	strdeq	lr, [r2], -r8
   2c584:	strdeq	lr, [r2], -r8
   2c588:	strdeq	lr, [r2], -r8
   2c58c:	strdeq	lr, [r2], -r8
   2c590:	strdeq	lr, [r2], -r8
   2c594:	strdeq	lr, [r2], -r8
   2c598:	strdeq	lr, [r2], -r8
   2c59c:	strdeq	lr, [r2], -r8
   2c5a0:	strdeq	lr, [r2], -r8
   2c5a4:	strdeq	lr, [r2], -r8
   2c5a8:	strdeq	lr, [r2], -r8
   2c5ac:	strdeq	lr, [r2], -r8
   2c5b0:	strdeq	lr, [r2], -r8
   2c5b4:	strdeq	lr, [r2], -r8
   2c5b8:	strdeq	lr, [r2], -r8
   2c5bc:	strdeq	lr, [r2], -r8
   2c5c0:	strdeq	lr, [r2], -r8
   2c5c4:	strdeq	lr, [r2], -r8
   2c5c8:	strdeq	lr, [r2], -r8
   2c5cc:	strdeq	lr, [r2], -r8
   2c5d0:	strdeq	lr, [r2], -r8
   2c5d4:	strdeq	lr, [r2], -r8
   2c5d8:	strdeq	lr, [r2], -r8
   2c5dc:	strdeq	lr, [r2], -r8
   2c5e0:	strdeq	lr, [r2], -r8
   2c5e4:	strdeq	lr, [r2], -r8
   2c5e8:	strdeq	lr, [r2], -r8
   2c5ec:	strdeq	lr, [r2], -r8
   2c5f0:	strdeq	lr, [r2], -r8
   2c5f4:	strdeq	lr, [r2], -r8
   2c5f8:	strdeq	lr, [r2], -r8
   2c5fc:	strdeq	lr, [r2], -r8
   2c600:	strdeq	lr, [r2], -r8
   2c604:	strdeq	lr, [r2], -r8
   2c608:	strdeq	lr, [r2], -r8
   2c60c:	strdeq	lr, [r2], -r8
   2c610:	strdeq	lr, [r2], -r8
   2c614:	strdeq	lr, [r2], -r8
   2c618:	strdeq	lr, [r2], -r8
   2c61c:	strdeq	lr, [r2], -r8
   2c620:	strdeq	lr, [r2], -r8
   2c624:	andeq	ip, r2, r8, lsr #12
   2c628:	movw	ip, #21236	; 0x52f4
   2c62c:	movt	ip, #6
   2c630:	ldm	ip!, {r0, r1, r2}
   2c634:	ldrb	ip, [ip]
   2c638:	str	r0, [r3]
   2c63c:	str	r1, [r3, #4]
   2c640:	strb	ip, [r3, #12]
   2c644:	str	r2, [r3, #8]
   2c648:	bics	r0, r6, #255	; 0xff
   2c64c:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2c650:	mov	r2, #5
   2c654:	movw	r1, #21416	; 0x53a8
   2c658:	mov	r0, #0
   2c65c:	movt	r1, #6
   2c660:	bl	11170 <dcgettext@plt>
   2c664:	mov	r2, #1024	; 0x400
   2c668:	mov	r1, r0
   2c66c:	ldr	r0, [pc, #1652]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c670:	bl	112c0 <__strcat_chk@plt>
   2c674:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2c678:	movw	r2, #21396	; 0x5394
   2c67c:	movt	r2, #6
   2c680:	ldm	r2!, {r0, r1}
   2c684:	str	r0, [r3]
   2c688:	str	r1, [r3, #4]
   2c68c:	b	2c648 <__assert_fail@plt+0x1b244>
   2c690:	movw	r2, #21384	; 0x5388
   2c694:	movt	r2, #6
   2c698:	ldm	r2!, {r0, r1}
   2c69c:	ldrh	r2, [r2]
   2c6a0:	str	r0, [r3]
   2c6a4:	str	r1, [r3, #4]
   2c6a8:	strh	r2, [r3, #8]
   2c6ac:	b	2c648 <__assert_fail@plt+0x1b244>
   2c6b0:	movw	r2, #21372	; 0x537c
   2c6b4:	movt	r2, #6
   2c6b8:	b	2c698 <__assert_fail@plt+0x1b294>
   2c6bc:	movw	r2, #21360	; 0x5370
   2c6c0:	movt	r2, #6
   2c6c4:	b	2c698 <__assert_fail@plt+0x1b294>
   2c6c8:	movw	r2, #21348	; 0x5364
   2c6cc:	movt	r2, #6
   2c6d0:	b	2c698 <__assert_fail@plt+0x1b294>
   2c6d4:	movw	r2, #21336	; 0x5358
   2c6d8:	movt	r2, #6
   2c6dc:	b	2c698 <__assert_fail@plt+0x1b294>
   2c6e0:	movw	r2, #21324	; 0x534c
   2c6e4:	movt	r2, #6
   2c6e8:	b	2c698 <__assert_fail@plt+0x1b294>
   2c6ec:	movw	r2, #21312	; 0x5340
   2c6f0:	movt	r2, #6
   2c6f4:	b	2c698 <__assert_fail@plt+0x1b294>
   2c6f8:	movw	r2, #21300	; 0x5334
   2c6fc:	movt	r2, #6
   2c700:	b	2c698 <__assert_fail@plt+0x1b294>
   2c704:	movw	r2, #21288	; 0x5328
   2c708:	movt	r2, #6
   2c70c:	b	2c698 <__assert_fail@plt+0x1b294>
   2c710:	movw	r2, #21276	; 0x531c
   2c714:	movt	r2, #6
   2c718:	b	2c698 <__assert_fail@plt+0x1b294>
   2c71c:	movw	r2, #21264	; 0x5310
   2c720:	movt	r2, #6
   2c724:	b	2c698 <__assert_fail@plt+0x1b294>
   2c728:	movw	r2, #21252	; 0x5304
   2c72c:	movt	r2, #6
   2c730:	b	2c698 <__assert_fail@plt+0x1b294>
   2c734:	movw	r2, #21224	; 0x52e8
   2c738:	movt	r2, #6
   2c73c:	b	2c698 <__assert_fail@plt+0x1b294>
   2c740:	ldr	r2, [r2, #40]	; 0x28
   2c744:	movw	r1, #21752	; 0x54f8
   2c748:	mov	r0, #1
   2c74c:	movt	r1, #6
   2c750:	bl	1132c <__printf_chk@plt>
   2c754:	b	2c108 <__assert_fail@plt+0x1ad04>
   2c758:	cmp	r3, #83	; 0x53
   2c75c:	beq	2ce38 <__assert_fail@plt+0x1ba34>
   2c760:	cmp	r3, #87	; 0x57
   2c764:	beq	2cacc <__assert_fail@plt+0x1b6c8>
   2c768:	cmp	r3, #75	; 0x4b
   2c76c:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2c770:	tst	r6, #1
   2c774:	bne	2e20c <__assert_fail@plt+0x1ce08>
   2c778:	tst	r6, #256	; 0x100
   2c77c:	bne	2e1f4 <__assert_fail@plt+0x1cdf0>
   2c780:	tst	r6, #512	; 0x200
   2c784:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2c788:	movw	r1, #21044	; 0x5234
   2c78c:	mov	r2, #1024	; 0x400
   2c790:	movt	r1, #6
   2c794:	ldr	r0, [pc, #1356]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c798:	bl	112c0 <__strcat_chk@plt>
   2c79c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2c7a0:	cmp	r3, #195	; 0xc3
   2c7a4:	beq	2d258 <__assert_fail@plt+0x1be54>
   2c7a8:	cmp	r3, #197	; 0xc5
   2c7ac:	beq	2d204 <__assert_fail@plt+0x1be00>
   2c7b0:	cmp	r3, #173	; 0xad
   2c7b4:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2c7b8:	tst	r6, #1
   2c7bc:	bne	2e088 <__assert_fail@plt+0x1cc84>
   2c7c0:	tst	r6, #2
   2c7c4:	bne	2e070 <__assert_fail@plt+0x1cc6c>
   2c7c8:	tst	r6, #4
   2c7cc:	bne	2e2bc <__assert_fail@plt+0x1ceb8>
   2c7d0:	tst	r6, #8
   2c7d4:	bne	2e2a4 <__assert_fail@plt+0x1cea0>
   2c7d8:	tst	r6, #64	; 0x40
   2c7dc:	beq	2c804 <__assert_fail@plt+0x1b400>
   2c7e0:	tst	r6, #128	; 0x80
   2c7e4:	movw	r1, #16788	; 0x4194
   2c7e8:	movw	r3, #16760	; 0x4178
   2c7ec:	movt	r1, #6
   2c7f0:	movt	r3, #6
   2c7f4:	ldr	r0, [pc, #1260]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c7f8:	mov	r2, #1024	; 0x400
   2c7fc:	movne	r1, r3
   2c800:	bl	112c0 <__strcat_chk@plt>
   2c804:	tst	r6, #256	; 0x100
   2c808:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2c80c:	movw	r1, #21152	; 0x52a0
   2c810:	mov	r2, #1024	; 0x400
   2c814:	movt	r1, #6
   2c818:	ldr	r0, [pc, #1224]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c81c:	bl	112c0 <__strcat_chk@plt>
   2c820:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2c824:	cmp	r3, #92	; 0x5c
   2c828:	beq	2cc7c <__assert_fail@plt+0x1b878>
   2c82c:	cmp	r3, #93	; 0x5d
   2c830:	beq	2d258 <__assert_fail@plt+0x1be54>
   2c834:	cmp	r3, #91	; 0x5b
   2c838:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2c83c:	tst	r6, #16
   2c840:	bne	2df44 <__assert_fail@plt+0x1cb40>
   2c844:	tst	r6, #32
   2c848:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2c84c:	movw	r1, #20836	; 0x5164
   2c850:	mov	r2, #1024	; 0x400
   2c854:	movt	r1, #6
   2c858:	ldr	r0, [pc, #1160]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c85c:	bl	112c0 <__strcat_chk@plt>
   2c860:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2c864:	cmp	r3, #8
   2c868:	beq	2cb48 <__assert_fail@plt+0x1b744>
   2c86c:	cmp	r3, #10
   2c870:	beq	2cb48 <__assert_fail@plt+0x1b744>
   2c874:	cmp	r3, #4
   2c878:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2c87c:	mov	r3, #32768	; 0x8000
   2c880:	movt	r3, #897	; 0x381
   2c884:	and	r3, r6, r3
   2c888:	cmp	r3, #16777216	; 0x1000000
   2c88c:	beq	2ec84 <__assert_fail@plt+0x1d880>
   2c890:	cmp	r3, #8454144	; 0x810000
   2c894:	beq	2ec6c <__assert_fail@plt+0x1d868>
   2c898:	cmp	r3, #33554432	; 0x2000000
   2c89c:	beq	2eb08 <__assert_fail@plt+0x1d704>
   2c8a0:	mov	r2, #5
   2c8a4:	movw	r1, #3808	; 0xee0
   2c8a8:	mov	r0, #0
   2c8ac:	movt	r1, #6
   2c8b0:	bl	11170 <dcgettext@plt>
   2c8b4:	movw	r1, #18648	; 0x48d8
   2c8b8:	mov	r2, #5
   2c8bc:	movt	r1, #6
   2c8c0:	mov	r9, r0
   2c8c4:	mov	r0, #0
   2c8c8:	bl	11170 <dcgettext@plt>
   2c8cc:	and	r3, r6, #15
   2c8d0:	sub	r3, r3, #1
   2c8d4:	mov	sl, r0
   2c8d8:	cmp	r3, #6
   2c8dc:	ldrls	pc, [pc, r3, lsl #2]
   2c8e0:	b	2c9d0 <__assert_fail@plt+0x1b5cc>
   2c8e4:	andeq	ip, r2, r8, asr sl
   2c8e8:	andeq	ip, r2, ip, asr #20
   2c8ec:	andeq	ip, r2, r0, asr #20
   2c8f0:	andeq	ip, r2, ip, lsr #20
   2c8f4:	andeq	ip, r2, ip, ror #20
   2c8f8:	andeq	ip, r2, r8, asr #19
   2c8fc:	andeq	ip, r2, r0, lsl #18
   2c900:	movw	fp, #16816	; 0x41b0
   2c904:	movw	r9, #4520	; 0x11a8
   2c908:	movt	fp, #6
   2c90c:	movt	r9, #7
   2c910:	ldr	r8, [pc, #976]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c914:	mov	r0, r8
   2c918:	bl	1129c <strlen@plt>
   2c91c:	movw	r3, #21788	; 0x551c
   2c920:	movt	r3, #6
   2c924:	ldrb	r9, [r9]
   2c928:	add	r2, r8, r0
   2c92c:	mov	ip, r0
   2c930:	ldm	r3!, {r0, r1}
   2c934:	rsb	lr, r8, r2
   2c938:	add	lr, lr, #11
   2c93c:	str	r0, [r8, ip]
   2c940:	add	ip, r8, lr
   2c944:	str	r1, [r2, #4]
   2c948:	ldrh	r3, [r3]
   2c94c:	ldm	fp!, {r0, r1}
   2c950:	strb	r9, [r2, #10]
   2c954:	strh	r3, [r2, #8]
   2c958:	str	r0, [r8, lr]
   2c95c:	str	r1, [ip, #4]
   2c960:	tst	r6, #64	; 0x40
   2c964:	bne	2eb50 <__assert_fail@plt+0x1d74c>
   2c968:	and	r3, r6, #48	; 0x30
   2c96c:	cmp	r3, #16
   2c970:	beq	2eb44 <__assert_fail@plt+0x1d740>
   2c974:	bls	2eb30 <__assert_fail@plt+0x1d72c>
   2c978:	cmp	r3, #32
   2c97c:	beq	2eb24 <__assert_fail@plt+0x1d720>
   2c980:	cmp	r3, #48	; 0x30
   2c984:	movweq	sl, #16836	; 0x41c4
   2c988:	movteq	sl, #6
   2c98c:	bne	2eb38 <__assert_fail@plt+0x1d734>
   2c990:	ldr	r0, [pc, #848]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c994:	bl	1129c <strlen@plt>
   2c998:	movw	r3, #556	; 0x22c
   2c99c:	movt	r3, #6
   2c9a0:	mov	r1, sl
   2c9a4:	mov	r2, #1024	; 0x400
   2c9a8:	ldrh	lr, [r3]
   2c9ac:	ldrb	r3, [r3, #2]
   2c9b0:	mov	ip, r0
   2c9b4:	add	r0, r8, r0
   2c9b8:	strh	lr, [r8, ip]
   2c9bc:	strb	r3, [r0, #2]!
   2c9c0:	bl	111e8 <__strcpy_chk@plt>
   2c9c4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2c9c8:	movw	r9, #4520	; 0x11a8
   2c9cc:	movt	r9, #7
   2c9d0:	ldr	r8, [pc, #784]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2c9d4:	mov	r0, r8
   2c9d8:	bl	1129c <strlen@plt>
   2c9dc:	movw	r3, #21788	; 0x551c
   2c9e0:	movt	r3, #6
   2c9e4:	mov	r2, #1024	; 0x400
   2c9e8:	add	lr, r8, r0
   2c9ec:	str	r0, [sp, #16]
   2c9f0:	ldm	r3!, {r0, r1}
   2c9f4:	mov	ip, lr
   2c9f8:	ldrh	fp, [r3]
   2c9fc:	ldrb	r3, [r3, #2]
   2ca00:	str	fp, [sp, #12]
   2ca04:	ldr	fp, [sp, #16]
   2ca08:	str	r0, [r8, fp]
   2ca0c:	ldr	fp, [sp, #12]
   2ca10:	str	r1, [lr, #4]
   2ca14:	mov	r1, r9
   2ca18:	strh	fp, [lr, #8]
   2ca1c:	strb	r3, [ip, #10]!
   2ca20:	mov	r0, ip
   2ca24:	bl	111e8 <__strcpy_chk@plt>
   2ca28:	b	2c960 <__assert_fail@plt+0x1b55c>
   2ca2c:	movw	fp, #16824	; 0x41b8
   2ca30:	movw	r9, #65416	; 0xff88
   2ca34:	movt	fp, #6
   2ca38:	movt	r9, #6
   2ca3c:	b	2c910 <__assert_fail@plt+0x1b50c>
   2ca40:	movw	r9, #16832	; 0x41c0
   2ca44:	movt	r9, #6
   2ca48:	b	2c9d0 <__assert_fail@plt+0x1b5cc>
   2ca4c:	movw	r9, #13940	; 0x3674
   2ca50:	movt	r9, #7
   2ca54:	b	2c9d0 <__assert_fail@plt+0x1b5cc>
   2ca58:	movw	fp, #16816	; 0x41b0
   2ca5c:	movw	r9, #13940	; 0x3674
   2ca60:	movt	fp, #6
   2ca64:	movt	r9, #7
   2ca68:	b	2c910 <__assert_fail@plt+0x1b50c>
   2ca6c:	movw	r9, #65416	; 0xff88
   2ca70:	movt	r9, #6
   2ca74:	b	2c9d0 <__assert_fail@plt+0x1b5cc>
   2ca78:	sub	r2, r2, #15360	; 0x3c00
   2ca7c:	cmp	r3, r2
   2ca80:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2ca84:	and	r3, r6, #-16777216	; 0xff000000
   2ca88:	cmp	r3, #67108864	; 0x4000000
   2ca8c:	beq	2ef40 <__assert_fail@plt+0x1db3c>
   2ca90:	bhi	2da60 <__assert_fail@plt+0x1c65c>
   2ca94:	cmp	r3, #16777216	; 0x1000000
   2ca98:	beq	2ef5c <__assert_fail@plt+0x1db58>
   2ca9c:	bls	2e588 <__assert_fail@plt+0x1d184>
   2caa0:	cmp	r3, #33554432	; 0x2000000
   2caa4:	beq	2ef74 <__assert_fail@plt+0x1db70>
   2caa8:	cmp	r3, #50331648	; 0x3000000
   2caac:	bne	2e590 <__assert_fail@plt+0x1d18c>
   2cab0:	movw	r2, #18592	; 0x48a0
   2cab4:	movt	r2, #6
   2cab8:	ldr	r3, [pc, #552]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2cabc:	ldm	r2, {r0, r1, r2}
   2cac0:	stmia	r3!, {r0, r1}
   2cac4:	strb	r2, [r3]
   2cac8:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2cacc:	and	r3, r6, #-268435456	; 0xf0000000
   2cad0:	cmp	r3, #536870912	; 0x20000000
   2cad4:	beq	2ebb0 <__assert_fail@plt+0x1d7ac>
   2cad8:	bls	2de5c <__assert_fail@plt+0x1ca58>
   2cadc:	cmp	r3, #1073741824	; 0x40000000
   2cae0:	beq	2eb8c <__assert_fail@plt+0x1d788>
   2cae4:	cmp	r3, #1610612736	; 0x60000000
   2cae8:	beq	2eb68 <__assert_fail@plt+0x1d764>
   2caec:	cmp	r3, #805306368	; 0x30000000
   2caf0:	beq	2e608 <__assert_fail@plt+0x1d204>
   2caf4:	mov	r2, #5
   2caf8:	movw	r1, #19372	; 0x4bac
   2cafc:	mov	r0, #0
   2cb00:	movt	r1, #6
   2cb04:	bl	11170 <dcgettext@plt>
   2cb08:	mov	r2, #1024	; 0x400
   2cb0c:	mov	r1, r0
   2cb10:	ldr	r0, [pc, #464]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2cb14:	bl	112c0 <__strcat_chk@plt>
   2cb18:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2cb1c:	tst	r6, #805306368	; 0x30000000
   2cb20:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2cb24:	movw	r3, #19408	; 0x4bd0
   2cb28:	movt	r3, #6
   2cb2c:	ldr	r2, [pc, #436]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2cb30:	ldm	r3, {r0, r1}
   2cb34:	lsr	r3, r1, #16
   2cb38:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2cb3c:	strh	r1, [r2, #4]
   2cb40:	strb	r3, [r8, #-1370]	; 0xfffffaa6
   2cb44:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2cb48:	tst	r6, #1
   2cb4c:	movwne	r3, #19416	; 0x4bd8
   2cb50:	movtne	r3, #6
   2cb54:	ldrne	ip, [pc, #396]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2cb58:	ldmne	r3, {r0, r1, r2}
   2cb5c:	stmne	ip, {r0, r1, r2}
   2cb60:	tst	r6, #2
   2cb64:	bne	2e178 <__assert_fail@plt+0x1cd74>
   2cb68:	tst	r6, #4
   2cb6c:	bne	2e160 <__assert_fail@plt+0x1cd5c>
   2cb70:	tst	r6, #16
   2cb74:	bne	2e148 <__assert_fail@plt+0x1cd44>
   2cb78:	tst	r6, #32
   2cb7c:	bne	2e130 <__assert_fail@plt+0x1cd2c>
   2cb80:	tst	r6, #128	; 0x80
   2cb84:	bne	2e28c <__assert_fail@plt+0x1ce88>
   2cb88:	tst	r6, #256	; 0x100
   2cb8c:	bne	2e274 <__assert_fail@plt+0x1ce70>
   2cb90:	tst	r6, #1024	; 0x400
   2cb94:	bne	2e25c <__assert_fail@plt+0x1ce58>
   2cb98:	tst	r6, #512	; 0x200
   2cb9c:	bne	2e244 <__assert_fail@plt+0x1ce40>
   2cba0:	and	r3, r6, #16711680	; 0xff0000
   2cba4:	cmp	r3, #9109504	; 0x8b0000
   2cba8:	beq	2ec54 <__assert_fail@plt+0x1d850>
   2cbac:	bls	2dd78 <__assert_fail@plt+0x1c974>
   2cbb0:	cmp	r3, #9961472	; 0x980000
   2cbb4:	beq	2ecc8 <__assert_fail@plt+0x1d8c4>
   2cbb8:	bls	2e464 <__assert_fail@plt+0x1d060>
   2cbbc:	cmp	r3, #10485760	; 0xa00000
   2cbc0:	beq	2ee98 <__assert_fail@plt+0x1da94>
   2cbc4:	bls	2ee78 <__assert_fail@plt+0x1da74>
   2cbc8:	cmp	r3, #10551296	; 0xa10000
   2cbcc:	beq	2edd0 <__assert_fail@plt+0x1d9cc>
   2cbd0:	cmp	r3, #10616832	; 0xa20000
   2cbd4:	bne	2e5e0 <__assert_fail@plt+0x1d1dc>
   2cbd8:	movw	r1, #19624	; 0x4ca8
   2cbdc:	ldr	r0, [pc, #260]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2cbe0:	movt	r1, #6
   2cbe4:	mov	r2, #1024	; 0x400
   2cbe8:	bl	112c0 <__strcat_chk@plt>
   2cbec:	and	r3, r6, #61440	; 0xf000
   2cbf0:	cmp	r3, #8192	; 0x2000
   2cbf4:	beq	2e570 <__assert_fail@plt+0x1d16c>
   2cbf8:	bls	2db1c <__assert_fail@plt+0x1c718>
   2cbfc:	cmp	r3, #12288	; 0x3000
   2cc00:	beq	2e75c <__assert_fail@plt+0x1d358>
   2cc04:	cmp	r3, #16384	; 0x4000
   2cc08:	bne	2e734 <__assert_fail@plt+0x1d330>
   2cc0c:	movw	r1, #19728	; 0x4d10
   2cc10:	ldr	r0, [pc, #208]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2cc14:	movt	r1, #6
   2cc18:	mov	r2, #1024	; 0x400
   2cc1c:	bl	112c0 <__strcat_chk@plt>
   2cc20:	tst	r6, #134217728	; 0x8000000
   2cc24:	bne	2e1dc <__assert_fail@plt+0x1cdd8>
   2cc28:	tst	r6, #67108864	; 0x4000000
   2cc2c:	bne	2e1c4 <__assert_fail@plt+0x1cdc0>
   2cc30:	tst	r6, #33554432	; 0x2000000
   2cc34:	bne	2e1ac <__assert_fail@plt+0x1cda8>
   2cc38:	and	r3, r6, #-268435456	; 0xf0000000
   2cc3c:	cmp	r3, #1342177280	; 0x50000000
   2cc40:	beq	2ece0 <__assert_fail@plt+0x1d8dc>
   2cc44:	bhi	2dae8 <__assert_fail@plt+0x1c6e4>
   2cc48:	cmp	r3, #536870912	; 0x20000000
   2cc4c:	beq	2ec3c <__assert_fail@plt+0x1d838>
   2cc50:	bhi	2e52c <__assert_fail@plt+0x1d128>
   2cc54:	cmp	r3, #0
   2cc58:	beq	2ede8 <__assert_fail@plt+0x1d9e4>
   2cc5c:	cmp	r3, #268435456	; 0x10000000
   2cc60:	bne	2ef18 <__assert_fail@plt+0x1db14>
   2cc64:	movw	r1, #19796	; 0x4d54
   2cc68:	mov	r2, #1024	; 0x400
   2cc6c:	movt	r1, #6
   2cc70:	ldr	r0, [pc, #112]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2cc74:	bl	112c0 <__strcat_chk@plt>
   2cc78:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2cc7c:	tst	r6, #1
   2cc80:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2cc84:	movw	r3, #20604	; 0x507c
   2cc88:	movt	r3, #6
   2cc8c:	sub	r8, r8, #1376	; 0x560
   2cc90:	ldm	r3, {r0, r1, r2}
   2cc94:	lsr	r3, r2, #16
   2cc98:	stmia	r8!, {r0, r1}
   2cc9c:	strh	r2, [r8], #2
   2cca0:	strb	r3, [r8]
   2cca4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2cca8:	tst	r6, #1
   2ccac:	bne	2e0d8 <__assert_fail@plt+0x1ccd4>
   2ccb0:	tst	r6, #2
   2ccb4:	bne	2e0c0 <__assert_fail@plt+0x1ccbc>
   2ccb8:	tst	r6, #16
   2ccbc:	bne	2e0a8 <__assert_fail@plt+0x1cca4>
   2ccc0:	tst	r6, #32
   2ccc4:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2ccc8:	movw	r1, #18520	; 0x4858
   2cccc:	mov	r2, #1024	; 0x400
   2ccd0:	movt	r1, #6
   2ccd4:	ldr	r0, [pc, #12]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2ccd8:	bl	112c0 <__strcat_chk@plt>
   2ccdc:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2cce0:	andeq	r5, r9, r0, asr #23
   2cce4:	andeq	r5, r9, r0, lsr #23
   2cce8:	andeq	r5, r9, r0, ror #23
   2ccec:	sub	r8, r8, #1376	; 0x560
   2ccf0:	mov	r2, #1024	; 0x400
   2ccf4:	and	r9, r6, #240	; 0xf0
   2ccf8:	and	sl, r6, #15
   2ccfc:	mov	r0, r8
   2cd00:	and	fp, r6, #-268435456	; 0xf0000000
   2cd04:	bl	112f0 <memset@plt>
   2cd08:	cmp	r9, #32
   2cd0c:	str	sl, [sp, #12]
   2cd10:	beq	2daa4 <__assert_fail@plt+0x1c6a0>
   2cd14:	bls	2da94 <__assert_fail@plt+0x1c690>
   2cd18:	cmp	r9, #64	; 0x40
   2cd1c:	beq	2daa4 <__assert_fail@plt+0x1c6a0>
   2cd20:	cmp	r9, #80	; 0x50
   2cd24:	beq	2daa4 <__assert_fail@plt+0x1c6a0>
   2cd28:	cmp	r9, #48	; 0x30
   2cd2c:	beq	2daa4 <__assert_fail@plt+0x1c6a0>
   2cd30:	movw	ip, #19924	; 0x4dd4
   2cd34:	movt	ip, #6
   2cd38:	ldr	lr, [pc, #-88]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2cd3c:	mov	sl, #20
   2cd40:	ldm	ip!, {r0, r1, r2, r3}
   2cd44:	str	sl, [sp, #16]
   2cd48:	str	sl, [sp, #8]
   2cd4c:	mov	sl, #1004	; 0x3ec
   2cd50:	str	sl, [sp, #20]
   2cd54:	stmia	lr!, {r0, r1, r2, r3}
   2cd58:	ldm	ip, {r0, r1}
   2cd5c:	str	r0, [lr], #4
   2cd60:	strb	r1, [lr]
   2cd64:	ldr	sl, [sp, #12]
   2cd68:	cmp	sl, #2
   2cd6c:	bls	2da1c <__assert_fail@plt+0x1c618>
   2cd70:	ldr	sl, [sp, #16]
   2cd74:	movw	r2, #19948	; 0x4dec
   2cd78:	ldr	r1, [sp, #20]
   2cd7c:	movt	r2, #6
   2cd80:	add	r0, r8, sl
   2cd84:	bl	112d8 <snprintf@plt>
   2cd88:	ldr	r2, [sp, #8]
   2cd8c:	add	sl, r2, r0
   2cd90:	cmp	r9, #0
   2cd94:	beq	2e0f4 <__assert_fail@plt+0x1ccf0>
   2cd98:	cmp	fp, #536870912	; 0x20000000
   2cd9c:	beq	2db74 <__assert_fail@plt+0x1c770>
   2cda0:	bls	2db6c <__assert_fail@plt+0x1c768>
   2cda4:	cmp	fp, #805306368	; 0x30000000
   2cda8:	beq	2db74 <__assert_fail@plt+0x1c770>
   2cdac:	cmp	fp, #1073741824	; 0x40000000
   2cdb0:	beq	2db74 <__assert_fail@plt+0x1c770>
   2cdb4:	add	r0, r8, sl
   2cdb8:	rsb	r1, sl, #1024	; 0x400
   2cdbc:	movw	r2, #20032	; 0x4e40
   2cdc0:	movt	r2, #6
   2cdc4:	bl	112d8 <snprintf@plt>
   2cdc8:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2cdcc:	tst	r6, #1
   2cdd0:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2cdd4:	movw	ip, #21172	; 0x52b4
   2cdd8:	movt	ip, #6
   2cddc:	ldr	lr, [pc, #-252]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2cde0:	ldm	ip!, {r0, r1, r2, r3}
   2cde4:	stmia	lr!, {r0, r1, r2, r3}
   2cde8:	ldm	ip, {r0, r1}
   2cdec:	str	r0, [lr], #4
   2cdf0:	strb	r1, [lr]
   2cdf4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2cdf8:	tst	r6, #1
   2cdfc:	bne	2e228 <__assert_fail@plt+0x1ce24>
   2ce00:	tst	r6, #2
   2ce04:	subne	r8, r8, #1376	; 0x560
   2ce08:	movwne	r3, #21064	; 0x5248
   2ce0c:	movtne	r3, #6
   2ce10:	ldmne	r3, {r0, r1}
   2ce14:	stmne	r8, {r0, r1}
   2ce18:	tst	r6, #4
   2ce1c:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2ce20:	movw	r1, #21072	; 0x5250
   2ce24:	mov	r2, #1024	; 0x400
   2ce28:	movt	r1, #6
   2ce2c:	ldr	r0, [pc, #-332]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2ce30:	bl	112c0 <__strcat_chk@plt>
   2ce34:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ce38:	and	r3, r6, #127	; 0x7f
   2ce3c:	sub	r3, r3, #1
   2ce40:	cmp	r3, #106	; 0x6a
   2ce44:	ldrls	pc, [pc, r3, lsl #2]
   2ce48:	b	2ec24 <__assert_fail@plt+0x1d820>
   2ce4c:	andeq	sp, r2, ip, ror #3
   2ce50:	ldrdeq	sp, [r2], -r4
   2ce54:			; <UNDEFINED> instruction: 0x0002d1bc
   2ce58:	andeq	sp, r2, r4, lsr #3
   2ce5c:	andeq	sp, r2, ip, lsl #3
   2ce60:	andeq	sp, r2, r4, ror r1
   2ce64:	andeq	lr, r2, r4, lsr #24
   2ce68:	andeq	lr, r2, r4, lsr #24
   2ce6c:	andeq	lr, r2, r4, lsr #24
   2ce70:	andeq	lr, r2, r4, lsr #24
   2ce74:	andeq	lr, r2, r4, lsr #24
   2ce78:	andeq	lr, r2, r4, lsr #24
   2ce7c:	andeq	lr, r2, r4, lsr #24
   2ce80:	andeq	lr, r2, r4, lsr #24
   2ce84:	andeq	lr, r2, r4, lsr #24
   2ce88:	andeq	lr, r2, r4, lsr #24
   2ce8c:	andeq	lr, r2, r4, lsr #24
   2ce90:	andeq	lr, r2, r4, lsr #24
   2ce94:	andeq	lr, r2, r4, lsr #24
   2ce98:	andeq	lr, r2, r4, lsr #24
   2ce9c:	andeq	lr, r2, r4, lsr #24
   2cea0:	andeq	lr, r2, r4, lsr #24
   2cea4:	andeq	lr, r2, r4, lsr #24
   2cea8:	andeq	lr, r2, r4, lsr #24
   2ceac:	andeq	sp, r2, r8, asr r1
   2ceb0:	andeq	lr, r2, r4, lsr #24
   2ceb4:	andeq	lr, r2, r4, lsr #24
   2ceb8:	andeq	lr, r2, r4, lsr #24
   2cebc:	andeq	lr, r2, r4, lsr #24
   2cec0:	andeq	lr, r2, r4, lsr #24
   2cec4:	andeq	sp, r2, ip, lsr r1
   2cec8:	andeq	lr, r2, r4, lsr #24
   2cecc:	andeq	lr, r2, r4, lsr #24
   2ced0:	andeq	lr, r2, r4, lsr #24
   2ced4:	andeq	sp, r2, r0, lsr #2
   2ced8:	andeq	lr, r2, r4, lsr #24
   2cedc:	andeq	lr, r2, r4, lsr #24
   2cee0:	andeq	lr, r2, r4, lsr #24
   2cee4:	andeq	lr, r2, r4, lsr #24
   2cee8:	andeq	lr, r2, r4, lsr #24
   2ceec:	andeq	lr, r2, r4, lsr #24
   2cef0:	andeq	lr, r2, r4, lsr #24
   2cef4:	andeq	lr, r2, r4, lsr #24
   2cef8:	andeq	lr, r2, r4, lsr #24
   2cefc:	andeq	lr, r2, r4, lsr #24
   2cf00:	andeq	lr, r2, r4, lsr #24
   2cf04:	andeq	lr, r2, r4, lsr #24
   2cf08:	andeq	lr, r2, r4, lsr #24
   2cf0c:	andeq	lr, r2, r4, lsr #24
   2cf10:	andeq	lr, r2, r4, lsr #24
   2cf14:	andeq	sp, r2, r4, lsl #2
   2cf18:	andeq	lr, r2, r4, lsr #24
   2cf1c:	andeq	lr, r2, r4, lsr #24
   2cf20:	andeq	lr, r2, r4, lsr #24
   2cf24:	andeq	lr, r2, r4, lsr #24
   2cf28:	andeq	lr, r2, r4, lsr #24
   2cf2c:	andeq	lr, r2, r4, lsr #24
   2cf30:	andeq	lr, r2, r4, lsr #24
   2cf34:	andeq	lr, r2, r4, lsr #24
   2cf38:	andeq	lr, r2, r4, lsr #24
   2cf3c:	andeq	lr, r2, r4, lsr #24
   2cf40:	andeq	lr, r2, r4, lsr #24
   2cf44:	andeq	lr, r2, r4, lsr #24
   2cf48:	andeq	lr, r2, r4, lsr #24
   2cf4c:	andeq	lr, r2, r4, lsr #24
   2cf50:	andeq	lr, r2, r4, lsr #24
   2cf54:	andeq	lr, r2, r4, lsr #24
   2cf58:	andeq	lr, r2, r4, lsr #24
   2cf5c:	andeq	lr, r2, r4, lsr #24
   2cf60:	andeq	lr, r2, r4, lsr #24
   2cf64:	andeq	lr, r2, r4, lsr #24
   2cf68:	andeq	lr, r2, r4, lsr #24
   2cf6c:	andeq	lr, r2, r4, lsr #24
   2cf70:	andeq	lr, r2, r4, lsr #24
   2cf74:	andeq	lr, r2, r4, lsr #24
   2cf78:	andeq	lr, r2, r4, lsr #24
   2cf7c:	andeq	lr, r2, r4, lsr #24
   2cf80:	andeq	lr, r2, r4, lsr #24
   2cf84:	andeq	lr, r2, r4, lsr #24
   2cf88:	andeq	lr, r2, r4, lsr #24
   2cf8c:	andeq	lr, r2, r4, lsr #24
   2cf90:	andeq	lr, r2, r4, lsr #24
   2cf94:	andeq	lr, r2, r4, lsr #24
   2cf98:	andeq	lr, r2, r4, lsr #24
   2cf9c:	andeq	lr, r2, r4, lsr #24
   2cfa0:	andeq	lr, r2, r4, lsr #24
   2cfa4:	andeq	lr, r2, r4, lsr #24
   2cfa8:	andeq	lr, r2, r4, lsr #24
   2cfac:	andeq	lr, r2, r4, lsr #24
   2cfb0:	andeq	lr, r2, r4, lsr #24
   2cfb4:	andeq	lr, r2, r4, lsr #24
   2cfb8:	andeq	lr, r2, r4, lsr #24
   2cfbc:	andeq	lr, r2, r4, lsr #24
   2cfc0:	andeq	lr, r2, r4, lsr #24
   2cfc4:	andeq	lr, r2, r4, lsr #24
   2cfc8:	andeq	lr, r2, r4, lsr #24
   2cfcc:	andeq	lr, r2, r4, lsr #24
   2cfd0:	andeq	lr, r2, r4, lsr #24
   2cfd4:	andeq	lr, r2, r4, lsr #24
   2cfd8:	andeq	sp, r2, r8, ror #1
   2cfdc:	andeq	sp, r2, ip, asr #1
   2cfe0:	strheq	sp, [r2], -r0
   2cfe4:	muleq	r2, r4, r0
   2cfe8:	andeq	sp, r2, r8, ror r0
   2cfec:	andeq	sp, r2, ip, asr r0
   2cff0:	andeq	sp, r2, r0, asr #32
   2cff4:	strdeq	ip, [r2], -r8
   2cff8:	movw	r2, #18444	; 0x480c
   2cffc:	movt	r2, #6
   2d000:	ldr	r3, [pc, #-800]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d004:	ldm	r2, {r0, r1, r2}
   2d008:	stmia	r3!, {r0, r1}
   2d00c:	strh	r2, [r3]
   2d010:	ldr	r0, [pc, #-816]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d014:	bl	1129c <strlen@plt>
   2d018:	tst	r6, #128	; 0x80
   2d01c:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2d020:	rsb	r2, r0, #1020	; 0x3fc
   2d024:	movw	r1, #18472	; 0x4828
   2d028:	add	r2, r2, #3
   2d02c:	movt	r1, #6
   2d030:	mov	r3, #1024	; 0x400
   2d034:	ldr	r0, [pc, #-852]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d038:	bl	110ec <__strncat_chk@plt>
   2d03c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d040:	movw	r2, #18432	; 0x4800
   2d044:	movt	r2, #6
   2d048:	ldr	r3, [pc, #-872]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d04c:	ldm	r2, {r0, r1, r2}
   2d050:	stmia	r3!, {r0, r1}
   2d054:	strh	r2, [r3]
   2d058:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d05c:	movw	r2, #18420	; 0x47f4
   2d060:	movt	r2, #6
   2d064:	ldr	r3, [pc, #-900]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d068:	ldm	r2, {r0, r1, r2}
   2d06c:	stmia	r3!, {r0, r1}
   2d070:	strh	r2, [r3]
   2d074:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d078:	movw	r2, #18408	; 0x47e8
   2d07c:	movt	r2, #6
   2d080:	ldr	r3, [pc, #-928]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d084:	ldm	r2, {r0, r1, r2}
   2d088:	stmia	r3!, {r0, r1}
   2d08c:	strh	r2, [r3]
   2d090:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d094:	movw	r2, #18396	; 0x47dc
   2d098:	movt	r2, #6
   2d09c:	ldr	r3, [pc, #-956]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d0a0:	ldm	r2, {r0, r1, r2}
   2d0a4:	stmia	r3!, {r0, r1}
   2d0a8:	strh	r2, [r3]
   2d0ac:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d0b0:	movw	r2, #18384	; 0x47d0
   2d0b4:	movt	r2, #6
   2d0b8:	ldr	r3, [pc, #-984]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d0bc:	ldm	r2, {r0, r1, r2}
   2d0c0:	stmia	r3!, {r0, r1}
   2d0c4:	strh	r2, [r3]
   2d0c8:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d0cc:	movw	r2, #18372	; 0x47c4
   2d0d0:	movt	r2, #6
   2d0d4:	ldr	r3, [pc, #-1012]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d0d8:	ldm	r2, {r0, r1, r2}
   2d0dc:	stmia	r3!, {r0, r1}
   2d0e0:	strh	r2, [r3]
   2d0e4:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d0e8:	movw	r2, #18360	; 0x47b8
   2d0ec:	movt	r2, #6
   2d0f0:	ldr	r3, [pc, #-1040]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d0f4:	ldm	r2, {r0, r1, r2}
   2d0f8:	stmia	r3!, {r0, r1}
   2d0fc:	strh	r2, [r3]
   2d100:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d104:	movw	r2, #18340	; 0x47a4
   2d108:	movt	r2, #6
   2d10c:	ldr	r3, [pc, #-1068]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d110:	ldm	r2, {r0, r1, r2}
   2d114:	stmia	r3!, {r0, r1}
   2d118:	strb	r2, [r3]
   2d11c:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d120:	movw	r2, #18312	; 0x4788
   2d124:	movt	r2, #6
   2d128:	ldr	r3, [pc, #-1096]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d12c:	ldm	r2, {r0, r1, r2}
   2d130:	stmia	r3!, {r0, r1}
   2d134:	strb	r2, [r3]
   2d138:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d13c:	movw	r2, #18300	; 0x477c
   2d140:	movt	r2, #6
   2d144:	ldr	r3, [pc, #-1124]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d148:	ldm	r2, {r0, r1, r2}
   2d14c:	stmia	r3!, {r0, r1}
   2d150:	strb	r2, [r3]
   2d154:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d158:	movw	r2, #18280	; 0x4768
   2d15c:	movt	r2, #6
   2d160:	ldr	r3, [pc, #-1152]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d164:	ldm	r2, {r0, r1, r2}
   2d168:	stmia	r3!, {r0, r1}
   2d16c:	strb	r2, [r3]
   2d170:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d174:	movw	r3, #18352	; 0x47b0
   2d178:	movt	r3, #6
   2d17c:	ldr	r8, [pc, #-1180]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d180:	ldm	r3, {r0, r1}
   2d184:	stm	r8, {r0, r1}
   2d188:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d18c:	movw	r3, #18332	; 0x479c
   2d190:	movt	r3, #6
   2d194:	ldr	r8, [pc, #-1204]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d198:	ldm	r3, {r0, r1}
   2d19c:	stm	r8, {r0, r1}
   2d1a0:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d1a4:	movw	r3, #18324	; 0x4794
   2d1a8:	movt	r3, #6
   2d1ac:	ldr	r8, [pc, #-1228]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d1b0:	ldm	r3, {r0, r1}
   2d1b4:	stm	r8, {r0, r1}
   2d1b8:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d1bc:	movw	r3, #18292	; 0x4774
   2d1c0:	movt	r3, #6
   2d1c4:	ldr	r8, [pc, #-1252]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d1c8:	ldm	r3, {r0, r1}
   2d1cc:	stm	r8, {r0, r1}
   2d1d0:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d1d4:	movw	r3, #18272	; 0x4760
   2d1d8:	movt	r3, #6
   2d1dc:	ldr	r8, [pc, #-1276]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d1e0:	ldm	r3, {r0, r1}
   2d1e4:	stm	r8, {r0, r1}
   2d1e8:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d1ec:	movw	r3, #18264	; 0x4758
   2d1f0:	movt	r3, #6
   2d1f4:	ldr	r8, [pc, #-1300]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d1f8:	ldm	r3, {r0, r1}
   2d1fc:	stm	r8, {r0, r1}
   2d200:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2d204:	and	r3, r6, #12
   2d208:	cmp	r3, #8
   2d20c:	beq	2e3bc <__assert_fail@plt+0x1cfb8>
   2d210:	cmp	r3, #12
   2d214:	beq	2e3a0 <__assert_fail@plt+0x1cf9c>
   2d218:	cmp	r3, #4
   2d21c:	bne	2d238 <__assert_fail@plt+0x1be34>
   2d220:	movw	r3, #21080	; 0x5258
   2d224:	movt	r3, #6
   2d228:	ldr	r2, [pc, #-1352]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d22c:	ldm	r3, {r0, r1}
   2d230:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2d234:	strh	r1, [r2, #4]
   2d238:	tst	r6, #1
   2d23c:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2d240:	movw	r1, #21104	; 0x5270
   2d244:	mov	r2, #1024	; 0x400
   2d248:	movt	r1, #6
   2d24c:	ldr	r0, [pc, #-1388]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d250:	bl	112c0 <__strcat_chk@plt>
   2d254:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d258:	uxtb	r2, r6
   2d25c:	sub	r2, r2, #2
   2d260:	cmp	r2, #4
   2d264:	ldrls	pc, [pc, r2, lsl #2]
   2d268:	b	2e964 <__assert_fail@plt+0x1d560>
   2d26c:	andeq	sp, r2, r4, lsl #6
   2d270:	andeq	sp, r2, r8, ror #5
   2d274:	andeq	sp, r2, r0, lsr #6
   2d278:	andeq	sp, r2, ip, asr #5
   2d27c:	andeq	sp, r2, r0, lsl #5
   2d280:	movw	r2, #17600	; 0x44c0
   2d284:	movt	r2, #6
   2d288:	ldr	r3, [pc, #-1448]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d28c:	ldm	r2, {r0, r1, r2}
   2d290:	stmia	r3!, {r0, r1}
   2d294:	strb	r2, [r3]
   2d298:	and	r3, r6, #3840	; 0xf00
   2d29c:	cmp	r3, #512	; 0x200
   2d2a0:	beq	2e44c <__assert_fail@plt+0x1d048>
   2d2a4:	cmp	r3, #768	; 0x300
   2d2a8:	beq	2e434 <__assert_fail@plt+0x1d030>
   2d2ac:	cmp	r3, #0
   2d2b0:	beq	2e400 <__assert_fail@plt+0x1cffc>
   2d2b4:	movw	r1, #17740	; 0x454c
   2d2b8:	mov	r2, #1024	; 0x400
   2d2bc:	movt	r1, #6
   2d2c0:	ldr	r0, [pc, #-1504]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d2c4:	bl	112c0 <__strcat_chk@plt>
   2d2c8:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d2cc:	movw	r2, #17588	; 0x44b4
   2d2d0:	movt	r2, #6
   2d2d4:	ldr	r3, [pc, #-1524]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d2d8:	ldm	r2, {r0, r1, r2}
   2d2dc:	stmia	r3!, {r0, r1}
   2d2e0:	strb	r2, [r3]
   2d2e4:	b	2d298 <__assert_fail@plt+0x1be94>
   2d2e8:	movw	r2, #17636	; 0x44e4
   2d2ec:	movt	r2, #6
   2d2f0:	ldr	r3, [pc, #-1552]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d2f4:	ldm	r2, {r0, r1, r2}
   2d2f8:	stmia	r3!, {r0, r1}
   2d2fc:	strb	r2, [r3]
   2d300:	b	2d298 <__assert_fail@plt+0x1be94>
   2d304:	movw	r2, #17612	; 0x44cc
   2d308:	movt	r2, #6
   2d30c:	ldr	r3, [pc, #-1580]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d310:	ldm	r2, {r0, r1, r2}
   2d314:	stmia	r3!, {r0, r1}
   2d318:	strb	r2, [r3]
   2d31c:	b	2d298 <__assert_fail@plt+0x1be94>
   2d320:	movw	r2, #17624	; 0x44d8
   2d324:	movt	r2, #6
   2d328:	ldr	r3, [pc, #-1608]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d32c:	ldm	r2, {r0, r1, r2}
   2d330:	stmia	r3!, {r0, r1}
   2d334:	strb	r2, [r3]
   2d338:	b	2d298 <__assert_fail@plt+0x1be94>
   2d33c:	and	r3, r6, #-268435456	; 0xf0000000
   2d340:	cmp	r3, #-268435456	; 0xf0000000
   2d344:	subeq	r8, r8, #1376	; 0x560
   2d348:	movweq	r3, #19000	; 0x4a38
   2d34c:	movteq	r3, #6
   2d350:	ldmeq	r3, {r0, r1, r2}
   2d354:	stmeq	r8, {r0, r1, r2}
   2d358:	tst	r6, #1048576	; 0x100000
   2d35c:	bne	2e058 <__assert_fail@plt+0x1cc54>
   2d360:	tst	r6, #3
   2d364:	beq	2e040 <__assert_fail@plt+0x1cc3c>
   2d368:	tst	r6, #96	; 0x60
   2d36c:	beq	2e028 <__assert_fail@plt+0x1cc24>
   2d370:	tst	r6, #768	; 0x300
   2d374:	beq	2e010 <__assert_fail@plt+0x1cc0c>
   2d378:	tst	r6, #3072	; 0xc00
   2d37c:	beq	2dff8 <__assert_fail@plt+0x1cbf4>
   2d380:	tst	r6, #12288	; 0x3000
   2d384:	beq	2dfe0 <__assert_fail@plt+0x1cbdc>
   2d388:	tst	r6, #49152	; 0xc000
   2d38c:	beq	2e194 <__assert_fail@plt+0x1cd90>
   2d390:	uxth	r9, r6
   2d394:	cmp	r9, #0
   2d398:	bne	2d3e0 <__assert_fail@plt+0x1bfdc>
   2d39c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d3a0:	cmp	r8, #4096	; 0x1000
   2d3a4:	beq	2d9ec <__assert_fail@plt+0x1c5e8>
   2d3a8:	bls	2d450 <__assert_fail@plt+0x1c04c>
   2d3ac:	cmp	r8, #16384	; 0x4000
   2d3b0:	beq	2d9a4 <__assert_fail@plt+0x1c5a0>
   2d3b4:	cmp	r8, #32768	; 0x8000
   2d3b8:	beq	2d95c <__assert_fail@plt+0x1c558>
   2d3bc:	cmp	r8, #8192	; 0x2000
   2d3c0:	bne	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d3c4:	movw	r1, #19272	; 0x4b48
   2d3c8:	ldr	r0, [pc, #-1768]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d3cc:	movt	r1, #6
   2d3d0:	mov	r2, #1024	; 0x400
   2d3d4:	bl	112c0 <__strcat_chk@plt>
   2d3d8:	bics	r9, r9, r8
   2d3dc:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2d3e0:	rsb	r8, r9, #0
   2d3e4:	and	r8, r8, r9
   2d3e8:	cmp	r8, #512	; 0x200
   2d3ec:	beq	2d9d4 <__assert_fail@plt+0x1c5d0>
   2d3f0:	bhi	2d3a0 <__assert_fail@plt+0x1bf9c>
   2d3f4:	cmp	r8, #32
   2d3f8:	beq	2d974 <__assert_fail@plt+0x1c570>
   2d3fc:	bhi	2d428 <__assert_fail@plt+0x1c024>
   2d400:	cmp	r8, #1
   2d404:	beq	2d98c <__assert_fail@plt+0x1c588>
   2d408:	cmp	r8, #2
   2d40c:	bne	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d410:	movw	r1, #19156	; 0x4ad4
   2d414:	mov	r2, #1024	; 0x400
   2d418:	movt	r1, #6
   2d41c:	ldr	r0, [pc, #-1852]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d420:	bl	112c0 <__strcat_chk@plt>
   2d424:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d428:	cmp	r8, #64	; 0x40
   2d42c:	beq	2d9bc <__assert_fail@plt+0x1c5b8>
   2d430:	cmp	r8, #256	; 0x100
   2d434:	bne	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d438:	movw	r1, #19212	; 0x4b0c
   2d43c:	mov	r2, #1024	; 0x400
   2d440:	movt	r1, #6
   2d444:	ldr	r0, [pc, #-1892]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d448:	bl	112c0 <__strcat_chk@plt>
   2d44c:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d450:	cmp	r8, #1024	; 0x400
   2d454:	beq	2da04 <__assert_fail@plt+0x1c600>
   2d458:	cmp	r8, #2048	; 0x800
   2d45c:	bne	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d460:	movw	r1, #19248	; 0x4b30
   2d464:	mov	r2, #1024	; 0x400
   2d468:	movt	r1, #6
   2d46c:	ldr	r0, [pc, #-1932]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d470:	bl	112c0 <__strcat_chk@plt>
   2d474:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d478:	tst	r6, #16
   2d47c:	sub	r8, r8, #1376	; 0x560
   2d480:	movwne	r3, #20864	; 0x5180
   2d484:	movweq	r3, #20876	; 0x518c
   2d488:	movtne	r3, #6
   2d48c:	movteq	r3, #6
   2d490:	tst	r6, #32
   2d494:	ldm	r3, {r0, r1, r2}
   2d498:	stmia	r8!, {r0, r1}
   2d49c:	strb	r2, [r8]
   2d4a0:	bne	2df2c <__assert_fail@plt+0x1cb28>
   2d4a4:	tst	r6, #128	; 0x80
   2d4a8:	bne	2df14 <__assert_fail@plt+0x1cb10>
   2d4ac:	tst	r6, #64	; 0x40
   2d4b0:	beq	2d4c8 <__assert_fail@plt+0x1c0c4>
   2d4b4:	movw	r1, #20948	; 0x51d4
   2d4b8:	ldr	r0, [pc, #-2008]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d4bc:	movt	r1, #6
   2d4c0:	mov	r2, #1024	; 0x400
   2d4c4:	bl	112c0 <__strcat_chk@plt>
   2d4c8:	tst	r6, #256	; 0x100
   2d4cc:	bne	2e348 <__assert_fail@plt+0x1cf44>
   2d4d0:	ldrb	r3, [r4, #7]
   2d4d4:	cmp	r3, #13
   2d4d8:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2d4dc:	tst	r6, #4
   2d4e0:	bne	2ed50 <__assert_fail@plt+0x1d94c>
   2d4e4:	and	r3, r6, #3
   2d4e8:	cmp	r3, #2
   2d4ec:	beq	2ed38 <__assert_fail@plt+0x1d934>
   2d4f0:	cmp	r3, #3
   2d4f4:	beq	2ed20 <__assert_fail@plt+0x1d91c>
   2d4f8:	cmp	r3, #1
   2d4fc:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2d500:	movw	r1, #20992	; 0x5200
   2d504:	mov	r2, #1024	; 0x400
   2d508:	movt	r1, #6
   2d50c:	ldr	r0, [pc, #-2092]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d510:	bl	112c0 <__strcat_chk@plt>
   2d514:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d518:	cmp	r6, #0
   2d51c:	blt	2e554 <__assert_fail@plt+0x1d150>
   2d520:	tst	r6, #65536	; 0x10000
   2d524:	bne	2e378 <__assert_fail@plt+0x1cf74>
   2d528:	tst	r6, #32768	; 0x8000
   2d52c:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2d530:	mov	r2, #5
   2d534:	movw	r1, #18980	; 0x4a24
   2d538:	mov	r0, #0
   2d53c:	movt	r1, #6
   2d540:	bl	11170 <dcgettext@plt>
   2d544:	mov	r2, #1024	; 0x400
   2d548:	mov	r1, r0
   2d54c:	ldr	r0, [pc, #-2156]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d550:	bl	112c0 <__strcat_chk@plt>
   2d554:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d558:	tst	r6, #256	; 0x100
   2d55c:	bne	2def8 <__assert_fail@plt+0x1caf4>
   2d560:	tst	r6, #512	; 0x200
   2d564:	bne	2dee0 <__assert_fail@plt+0x1cadc>
   2d568:	tst	r6, #2048	; 0x800
   2d56c:	bne	2dec8 <__assert_fail@plt+0x1cac4>
   2d570:	tst	r6, #1024	; 0x400
   2d574:	bne	2deb0 <__assert_fail@plt+0x1caac>
   2d578:	tst	r6, #8388608	; 0x800000
   2d57c:	bne	2e330 <__assert_fail@plt+0x1cf2c>
   2d580:	ands	r3, r6, #3
   2d584:	beq	2e318 <__assert_fail@plt+0x1cf14>
   2d588:	cmp	r3, #1
   2d58c:	beq	2e820 <__assert_fail@plt+0x1d41c>
   2d590:	cmp	r3, #2
   2d594:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2d598:	movw	r1, #20692	; 0x50d4
   2d59c:	mov	r2, #1024	; 0x400
   2d5a0:	movt	r1, #6
   2d5a4:	ldr	r0, [pc, #-2244]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d5a8:	bl	112c0 <__strcat_chk@plt>
   2d5ac:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d5b0:	and	r3, r6, #31
   2d5b4:	sub	r3, r3, #1
   2d5b8:	cmp	r3, #23
   2d5bc:	ldrls	pc, [pc, r3, lsl #2]
   2d5c0:	b	2eca0 <__assert_fail@plt+0x1d89c>
   2d5c4:	andeq	sp, r2, ip, asr r8
   2d5c8:	andeq	sp, r2, r0, asr #16
   2d5cc:	andeq	sp, r2, r4, lsr #16
   2d5d0:	andeq	sp, r2, r8, lsl #16
   2d5d4:	andeq	sp, r2, ip, ror #15
   2d5d8:	ldrdeq	sp, [r2], -r4
   2d5dc:	andeq	lr, r2, r0, lsr #25
   2d5e0:	andeq	sp, r2, r8, asr #15
   2d5e4:	andeq	sp, r2, ip, lsr #15
   2d5e8:	muleq	r2, r0, r7
   2d5ec:	andeq	sp, r2, r4, lsl #15
   2d5f0:	andeq	sp, r2, r8, ror r7
   2d5f4:	andeq	sp, r2, r4, asr r7
   2d5f8:	andeq	lr, r2, r0, lsr #25
   2d5fc:	andeq	lr, r2, r0, lsr #25
   2d600:	andeq	sp, r2, ip, lsr r7
   2d604:	andeq	sp, r2, r0, lsr #14
   2d608:	andeq	sp, r2, r0, lsl #14
   2d60c:	andeq	sp, r2, r4, ror #13
   2d610:	andeq	sp, r2, ip, asr #13
   2d614:	andeq	sp, r2, ip, lsr #13
   2d618:	andeq	sp, r2, r8, lsl #13
   2d61c:	andeq	sp, r2, ip, ror #12
   2d620:	andeq	sp, r2, r4, lsr #12
   2d624:	movw	r3, #20580	; 0x5064
   2d628:	movt	r3, #6
   2d62c:	ldr	ip, [pc, #-2380]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d630:	ldm	r3, {r0, r1, r2, r3}
   2d634:	lsr	lr, r3, #16
   2d638:	stmia	ip!, {r0, r1, r2}
   2d63c:	strh	r3, [ip], #2
   2d640:	strb	lr, [ip]
   2d644:	tst	r6, #256	; 0x100
   2d648:	bne	2df68 <__assert_fail@plt+0x1cb64>
   2d64c:	tst	r6, #32768	; 0x8000
   2d650:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2d654:	movw	r1, #20596	; 0x5074
   2d658:	mov	r2, #1024	; 0x400
   2d65c:	movt	r1, #6
   2d660:	ldr	r0, [pc, #-2432]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d664:	bl	112c0 <__strcat_chk@plt>
   2d668:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d66c:	movw	r3, #20564	; 0x5054
   2d670:	movt	r3, #6
   2d674:	ldr	ip, [pc, #-2452]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d678:	ldm	r3, {r0, r1, r2, r3}
   2d67c:	stmia	ip!, {r0, r1, r2}
   2d680:	strh	r3, [ip]
   2d684:	b	2d644 <__assert_fail@plt+0x1c240>
   2d688:	movw	lr, #20536	; 0x5038
   2d68c:	movt	lr, #6
   2d690:	ldr	ip, [pc, #-2480]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d694:	ldm	lr!, {r0, r1, r2, r3}
   2d698:	stmia	ip!, {r0, r1, r2, r3}
   2d69c:	ldm	lr, {r0, r1, r2}
   2d6a0:	stmia	ip!, {r0, r1}
   2d6a4:	strh	r2, [ip]
   2d6a8:	b	2d644 <__assert_fail@plt+0x1c240>
   2d6ac:	movw	ip, #20504	; 0x5018
   2d6b0:	movt	ip, #6
   2d6b4:	ldr	lr, [pc, #-2516]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d6b8:	ldm	ip!, {r0, r1, r2, r3}
   2d6bc:	stmia	lr!, {r0, r1, r2, r3}
   2d6c0:	ldm	ip, {r0, r1, r2, r3}
   2d6c4:	stm	lr, {r0, r1, r2, r3}
   2d6c8:	b	2d644 <__assert_fail@plt+0x1c240>
   2d6cc:	movw	r3, #20472	; 0x4ff8
   2d6d0:	movt	r3, #6
   2d6d4:	ldr	ip, [pc, #-2548]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d6d8:	ldm	r3, {r0, r1, r2}
   2d6dc:	stm	ip, {r0, r1, r2}
   2d6e0:	b	2d644 <__assert_fail@plt+0x1c240>
   2d6e4:	movw	r3, #20456	; 0x4fe8
   2d6e8:	movt	r3, #6
   2d6ec:	ldr	ip, [pc, #-2572]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d6f0:	ldm	r3, {r0, r1, r2, r3}
   2d6f4:	stmia	ip!, {r0, r1, r2}
   2d6f8:	strb	r3, [ip]
   2d6fc:	b	2d644 <__assert_fail@plt+0x1c240>
   2d700:	movw	ip, #20484	; 0x5004
   2d704:	movt	ip, #6
   2d708:	ldr	lr, [pc, #-2600]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d70c:	ldm	ip!, {r0, r1, r2, r3}
   2d710:	ldr	ip, [ip]
   2d714:	stmia	lr!, {r0, r1, r2, r3}
   2d718:	strh	ip, [lr]
   2d71c:	b	2d644 <__assert_fail@plt+0x1c240>
   2d720:	movw	r3, #20440	; 0x4fd8
   2d724:	movt	r3, #6
   2d728:	ldr	ip, [pc, #-2632]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d72c:	ldm	r3, {r0, r1, r2, r3}
   2d730:	stmia	ip!, {r0, r1, r2}
   2d734:	strb	r3, [ip]
   2d738:	b	2d644 <__assert_fail@plt+0x1c240>
   2d73c:	movw	r3, #20428	; 0x4fcc
   2d740:	movt	r3, #6
   2d744:	ldr	ip, [pc, #-2660]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d748:	ldm	r3, {r0, r1, r2}
   2d74c:	stm	ip, {r0, r1, r2}
   2d750:	b	2d644 <__assert_fail@plt+0x1c240>
   2d754:	movw	r3, #20420	; 0x4fc4
   2d758:	movt	r3, #6
   2d75c:	ldm	r3, {r0, r1}
   2d760:	ldr	r2, [pc, #-2688]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d764:	lsr	r3, r1, #16
   2d768:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2d76c:	strh	r1, [r2, #4]
   2d770:	strb	r3, [r8, #-1370]	; 0xfffffaa6
   2d774:	b	2d644 <__assert_fail@plt+0x1c240>
   2d778:	movw	r3, #20412	; 0x4fbc
   2d77c:	movt	r3, #6
   2d780:	b	2d75c <__assert_fail@plt+0x1c358>
   2d784:	movw	r3, #20404	; 0x4fb4
   2d788:	movt	r3, #6
   2d78c:	b	2d75c <__assert_fail@plt+0x1c358>
   2d790:	movw	r3, #20396	; 0x4fac
   2d794:	movt	r3, #6
   2d798:	ldr	r2, [pc, #-2744]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d79c:	ldm	r3, {r0, r1}
   2d7a0:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2d7a4:	strh	r1, [r2, #4]
   2d7a8:	b	2d644 <__assert_fail@plt+0x1c240>
   2d7ac:	movw	r3, #20388	; 0x4fa4
   2d7b0:	movt	r3, #6
   2d7b4:	ldr	r2, [pc, #-2772]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d7b8:	ldm	r3, {r0, r1}
   2d7bc:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2d7c0:	strh	r1, [r2, #4]
   2d7c4:	b	2d644 <__assert_fail@plt+0x1c240>
   2d7c8:	movw	r3, #20380	; 0x4f9c
   2d7cc:	movt	r3, #6
   2d7d0:	b	2d75c <__assert_fail@plt+0x1c358>
   2d7d4:	movw	r3, #20368	; 0x4f90
   2d7d8:	movt	r3, #6
   2d7dc:	ldr	ip, [pc, #-2812]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d7e0:	ldm	r3, {r0, r1, r2}
   2d7e4:	stm	ip, {r0, r1, r2}
   2d7e8:	b	2d644 <__assert_fail@plt+0x1c240>
   2d7ec:	movw	r2, #20356	; 0x4f84
   2d7f0:	movt	r2, #6
   2d7f4:	ldr	r3, [pc, #-2836]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d7f8:	ldm	r2, {r0, r1, r2}
   2d7fc:	stmia	r3!, {r0, r1}
   2d800:	strh	r2, [r3]
   2d804:	b	2d644 <__assert_fail@plt+0x1c240>
   2d808:	movw	r2, #20344	; 0x4f78
   2d80c:	movt	r2, #6
   2d810:	ldr	r3, [pc, #-2864]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d814:	ldm	r2, {r0, r1, r2}
   2d818:	stmia	r3!, {r0, r1}
   2d81c:	strb	r2, [r3]
   2d820:	b	2d644 <__assert_fail@plt+0x1c240>
   2d824:	movw	r3, #20336	; 0x4f70
   2d828:	movt	r3, #6
   2d82c:	ldr	r2, [pc, #-2892]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d830:	ldm	r3, {r0, r1}
   2d834:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2d838:	strh	r1, [r2, #4]
   2d83c:	b	2d644 <__assert_fail@plt+0x1c240>
   2d840:	movw	r3, #20328	; 0x4f68
   2d844:	movt	r3, #6
   2d848:	ldr	r2, [pc, #-2920]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d84c:	ldm	r3, {r0, r1}
   2d850:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2d854:	strh	r1, [r2, #4]
   2d858:	b	2d644 <__assert_fail@plt+0x1c240>
   2d85c:	movw	r3, #20320	; 0x4f60
   2d860:	movt	r3, #6
   2d864:	ldr	r2, [pc, #-2948]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d868:	ldm	r3, {r0, r1}
   2d86c:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2d870:	strh	r1, [r2, #4]
   2d874:	b	2d644 <__assert_fail@plt+0x1c240>
   2d878:	tst	r6, #1
   2d87c:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2d880:	movw	r2, #21160	; 0x52a8
   2d884:	movt	r2, #6
   2d888:	ldr	r3, [pc, #-2984]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d88c:	ldm	r2, {r0, r1, r2}
   2d890:	lsr	ip, r2, #16
   2d894:	stmia	r3!, {r0, r1}
   2d898:	strh	r2, [r3], #2
   2d89c:	strb	ip, [r3]
   2d8a0:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d8a4:	ands	lr, r6, #3
   2d8a8:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2d8ac:	movw	r3, #21800	; 0x5528
   2d8b0:	movt	r3, #6
   2d8b4:	add	ip, sp, #28
   2d8b8:	mov	r2, #1024	; 0x400
   2d8bc:	ldm	r3, {r0, r1}
   2d8c0:	add	r3, lr, #48	; 0x30
   2d8c4:	stm	ip, {r0, r1}
   2d8c8:	mov	r1, ip
   2d8cc:	sub	r0, r8, #1376	; 0x560
   2d8d0:	strb	r3, [sp, #34]	; 0x22
   2d8d4:	bl	111e8 <__strcpy_chk@plt>
   2d8d8:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d8dc:	uxth	r3, r6
   2d8e0:	cmp	r3, #528	; 0x210
   2d8e4:	beq	2e418 <__assert_fail@plt+0x1d014>
   2d8e8:	cmp	r3, #532	; 0x214
   2d8ec:	beq	2e510 <__assert_fail@plt+0x1d10c>
   2d8f0:	movw	r2, #523	; 0x20b
   2d8f4:	cmp	r3, r2
   2d8f8:	bne	2d914 <__assert_fail@plt+0x1c510>
   2d8fc:	movw	r3, #20700	; 0x50dc
   2d900:	movt	r3, #6
   2d904:	sub	r8, r8, #1376	; 0x560
   2d908:	ldm	r3, {r0, r1, r2, r3}
   2d90c:	stmia	r8!, {r0, r1, r2}
   2d910:	strh	r3, [r8]
   2d914:	tst	r6, #65536	; 0x10000
   2d918:	bne	2dfc8 <__assert_fail@plt+0x1cbc4>
   2d91c:	tst	r6, #131072	; 0x20000
   2d920:	bne	2dfb0 <__assert_fail@plt+0x1cbac>
   2d924:	tst	r6, #262144	; 0x40000
   2d928:	bne	2df98 <__assert_fail@plt+0x1cb94>
   2d92c:	tst	r6, #524288	; 0x80000
   2d930:	bne	2df80 <__assert_fail@plt+0x1cb7c>
   2d934:	tst	r6, #1048576	; 0x100000
   2d938:	bne	2e360 <__assert_fail@plt+0x1cf5c>
   2d93c:	tst	r6, #4194304	; 0x400000
   2d940:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2d944:	movw	r1, #20796	; 0x513c
   2d948:	mov	r2, #1024	; 0x400
   2d94c:	movt	r1, #6
   2d950:	ldr	r0, [pc, #-3184]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d954:	bl	112c0 <__strcat_chk@plt>
   2d958:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2d95c:	movw	r1, #19296	; 0x4b60
   2d960:	mov	r2, #1024	; 0x400
   2d964:	movt	r1, #6
   2d968:	ldr	r0, [pc, #-3208]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d96c:	bl	112c0 <__strcat_chk@plt>
   2d970:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d974:	movw	r1, #19180	; 0x4aec
   2d978:	mov	r2, #1024	; 0x400
   2d97c:	movt	r1, #6
   2d980:	ldr	r0, [pc, #-3232]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d984:	bl	112c0 <__strcat_chk@plt>
   2d988:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d98c:	movw	r1, #19132	; 0x4abc
   2d990:	mov	r2, #1024	; 0x400
   2d994:	movt	r1, #6
   2d998:	ldr	r0, [pc, #-3256]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d99c:	bl	112c0 <__strcat_chk@plt>
   2d9a0:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d9a4:	movw	r1, #19284	; 0x4b54
   2d9a8:	mov	r2, #1024	; 0x400
   2d9ac:	movt	r1, #6
   2d9b0:	ldr	r0, [pc, #-3280]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d9b4:	bl	112c0 <__strcat_chk@plt>
   2d9b8:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d9bc:	movw	r1, #19196	; 0x4afc
   2d9c0:	mov	r2, #1024	; 0x400
   2d9c4:	movt	r1, #6
   2d9c8:	ldr	r0, [pc, #-3304]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d9cc:	bl	112c0 <__strcat_chk@plt>
   2d9d0:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d9d4:	movw	r1, #19224	; 0x4b18
   2d9d8:	mov	r2, #1024	; 0x400
   2d9dc:	movt	r1, #6
   2d9e0:	ldr	r0, [pc, #-3328]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d9e4:	bl	112c0 <__strcat_chk@plt>
   2d9e8:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2d9ec:	movw	r1, #19260	; 0x4b3c
   2d9f0:	mov	r2, #1024	; 0x400
   2d9f4:	movt	r1, #6
   2d9f8:	ldr	r0, [pc, #-3352]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2d9fc:	bl	112c0 <__strcat_chk@plt>
   2da00:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2da04:	movw	r1, #19236	; 0x4b24
   2da08:	mov	r2, r8
   2da0c:	movt	r1, #6
   2da10:	ldr	r0, [pc, #-3376]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2da14:	bl	112c0 <__strcat_chk@plt>
   2da18:	b	2d3d8 <__assert_fail@plt+0x1bfd4>
   2da1c:	movw	r3, #43684	; 0xaaa4
   2da20:	movt	r3, #5
   2da24:	add	r3, r3, sl, lsl #2
   2da28:	ldr	sl, [sp, #16]
   2da2c:	ldr	r1, [sp, #20]
   2da30:	movw	r2, #19916	; 0x4dcc
   2da34:	ldr	ip, [r3, #3880]	; 0xf28
   2da38:	add	r0, r8, sl
   2da3c:	movt	r2, #6
   2da40:	mvn	r3, #0
   2da44:	str	r2, [sp]
   2da48:	mov	r2, #1
   2da4c:	str	ip, [sp, #4]
   2da50:	bl	113f8 <__snprintf_chk@plt>
   2da54:	ldr	r2, [sp, #8]
   2da58:	add	sl, r2, r0
   2da5c:	b	2cd90 <__assert_fail@plt+0x1b98c>
   2da60:	cmp	r3, #100663296	; 0x6000000
   2da64:	beq	2eeb0 <__assert_fail@plt+0x1daac>
   2da68:	bls	2e5a8 <__assert_fail@plt+0x1d1a4>
   2da6c:	cmp	r3, #117440512	; 0x7000000
   2da70:	beq	2ee48 <__assert_fail@plt+0x1da44>
   2da74:	cmp	r3, #134217728	; 0x8000000
   2da78:	bne	2e590 <__assert_fail@plt+0x1d18c>
   2da7c:	movw	r3, #18568	; 0x4888
   2da80:	movt	r3, #6
   2da84:	ldr	r2, [pc, #-3492]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2da88:	ldm	r3, {r0, r1}
   2da8c:	stm	r2, {r0, r1}
   2da90:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2da94:	cmp	r9, #0
   2da98:	beq	2daa4 <__assert_fail@plt+0x1c6a0>
   2da9c:	cmp	r9, #16
   2daa0:	bne	2cd30 <__assert_fail@plt+0x1b92c>
   2daa4:	movw	r3, #43684	; 0xaaa4
   2daa8:	movt	r3, #5
   2daac:	add	r2, r3, r9, lsr #2
   2dab0:	mov	r1, #1024	; 0x400
   2dab4:	movw	ip, #19916	; 0x4dcc
   2dab8:	mov	r3, r1
   2dabc:	ldr	lr, [r2, #3856]	; 0xf10
   2dac0:	movt	ip, #6
   2dac4:	ldr	r0, [pc, #-3556]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2dac8:	mov	r2, #1
   2dacc:	stm	sp, {ip, lr}
   2dad0:	bl	113f8 <__snprintf_chk@plt>
   2dad4:	rsb	sl, r0, #1024	; 0x400
   2dad8:	str	r0, [sp, #8]
   2dadc:	str	r0, [sp, #16]
   2dae0:	str	sl, [sp, #20]
   2dae4:	b	2cd64 <__assert_fail@plt+0x1b960>
   2dae8:	cmp	r3, #-2147483648	; 0x80000000
   2daec:	beq	2ee18 <__assert_fail@plt+0x1da14>
   2daf0:	bhi	2e3d8 <__assert_fail@plt+0x1cfd4>
   2daf4:	cmp	r3, #1610612736	; 0x60000000
   2daf8:	beq	2ee00 <__assert_fail@plt+0x1d9fc>
   2dafc:	cmp	r3, #1879048192	; 0x70000000
   2db00:	bne	2ef18 <__assert_fail@plt+0x1db14>
   2db04:	movw	r1, #19840	; 0x4d80
   2db08:	mov	r2, #1024	; 0x400
   2db0c:	movt	r1, #6
   2db10:	ldr	r0, [pc, #-3632]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2db14:	bl	112c0 <__strcat_chk@plt>
   2db18:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2db1c:	cmp	r3, #0
   2db20:	beq	2cc20 <__assert_fail@plt+0x1b81c>
   2db24:	cmp	r3, #4096	; 0x1000
   2db28:	bne	2e734 <__assert_fail@plt+0x1d330>
   2db2c:	movw	r1, #19700	; 0x4cf4
   2db30:	mov	r2, #1024	; 0x400
   2db34:	movt	r1, #6
   2db38:	ldr	r0, [pc, #-3672]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2db3c:	bl	112c0 <__strcat_chk@plt>
   2db40:	b	2cc20 <__assert_fail@plt+0x1b81c>
   2db44:	cmp	r3, #0
   2db48:	beq	2c250 <__assert_fail@plt+0x1ae4c>
   2db4c:	cmp	r3, #65536	; 0x10000
   2db50:	bne	2e7f8 <__assert_fail@plt+0x1d3f4>
   2db54:	movw	r1, #18772	; 0x4954
   2db58:	mov	r2, #1024	; 0x400
   2db5c:	movt	r1, #6
   2db60:	ldr	r0, [pc, #-3712]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2db64:	bl	112c0 <__strcat_chk@plt>
   2db68:	b	2c250 <__assert_fail@plt+0x1ae4c>
   2db6c:	cmp	fp, #268435456	; 0x10000000
   2db70:	bne	2cdb4 <__assert_fail@plt+0x1b9b0>
   2db74:	movw	r3, #43684	; 0xaaa4
   2db78:	movt	r3, #5
   2db7c:	add	r2, r3, fp, lsr #26
   2db80:	add	r0, r8, sl
   2db84:	rsb	r1, sl, #1024	; 0x400
   2db88:	movw	r3, #19916	; 0x4dcc
   2db8c:	ldr	ip, [r2, #3892]	; 0xf34
   2db90:	movt	r3, #6
   2db94:	mov	r2, #1
   2db98:	str	r3, [sp]
   2db9c:	mvn	r3, #0
   2dba0:	ldr	r9, [pc, #-3776]	; 2cce8 <__assert_fail@plt+0x1b8e4>
   2dba4:	str	ip, [sp, #4]
   2dba8:	bl	113f8 <__snprintf_chk@plt>
   2dbac:	cmp	fp, #268435456	; 0x10000000
   2dbb0:	add	sl, sl, r0
   2dbb4:	beq	2e624 <__assert_fail@plt+0x1d220>
   2dbb8:	tst	r6, #256	; 0x100
   2dbbc:	beq	2dbec <__assert_fail@plt+0x1c7e8>
   2dbc0:	ldr	fp, [sp, #12]
   2dbc4:	add	r0, r9, sl
   2dbc8:	cmp	fp, #1
   2dbcc:	rsbls	r1, sl, #1024	; 0x400
   2dbd0:	rsbhi	r1, sl, #1024	; 0x400
   2dbd4:	movwls	r2, #20092	; 0x4e7c
   2dbd8:	movwhi	r2, #20100	; 0x4e84
   2dbdc:	movtls	r2, #6
   2dbe0:	movthi	r2, #6
   2dbe4:	bl	112d8 <snprintf@plt>
   2dbe8:	add	sl, sl, r0
   2dbec:	tst	r6, #1048576	; 0x100000
   2dbf0:	bne	2edb4 <__assert_fail@plt+0x1d9b0>
   2dbf4:	tst	r6, #8192	; 0x2000
   2dbf8:	bne	2ef8c <__assert_fail@plt+0x1db88>
   2dbfc:	tst	r6, #16384	; 0x4000
   2dc00:	beq	2dc28 <__assert_fail@plt+0x1c824>
   2dc04:	ldr	fp, [sp, #12]
   2dc08:	cmp	fp, #1
   2dc0c:	bls	2e644 <__assert_fail@plt+0x1d240>
   2dc10:	add	r0, r8, sl
   2dc14:	rsb	r1, sl, #1024	; 0x400
   2dc18:	movw	r2, #20132	; 0x4ea4
   2dc1c:	movt	r2, #6
   2dc20:	bl	112d8 <snprintf@plt>
   2dc24:	add	sl, sl, r0
   2dc28:	tst	r6, #512	; 0x200
   2dc2c:	beq	2dc48 <__assert_fail@plt+0x1c844>
   2dc30:	add	r0, r8, sl
   2dc34:	rsb	r1, sl, #1024	; 0x400
   2dc38:	movw	r2, #20140	; 0x4eac
   2dc3c:	movt	r2, #6
   2dc40:	bl	112d8 <snprintf@plt>
   2dc44:	add	sl, sl, r0
   2dc48:	tst	r6, #1024	; 0x400
   2dc4c:	beq	2dc68 <__assert_fail@plt+0x1c864>
   2dc50:	add	r0, r8, sl
   2dc54:	rsb	r1, sl, #1024	; 0x400
   2dc58:	movw	r2, #20148	; 0x4eb4
   2dc5c:	movt	r2, #6
   2dc60:	bl	112d8 <snprintf@plt>
   2dc64:	add	sl, sl, r0
   2dc68:	ands	r3, r6, #2048	; 0x800
   2dc6c:	beq	2dc8c <__assert_fail@plt+0x1c888>
   2dc70:	add	r0, r8, sl
   2dc74:	rsb	r1, sl, #1024	; 0x400
   2dc78:	movw	r2, #20156	; 0x4ebc
   2dc7c:	movt	r2, #6
   2dc80:	bl	112d8 <snprintf@plt>
   2dc84:	mov	r3, #1
   2dc88:	add	sl, sl, r0
   2dc8c:	tst	r6, #524288	; 0x80000
   2dc90:	bne	2e498 <__assert_fail@plt+0x1d094>
   2dc94:	tst	r6, #16777216	; 0x1000000
   2dc98:	bne	2e4b8 <__assert_fail@plt+0x1d0b4>
   2dc9c:	cmp	r3, #0
   2dca0:	bne	2e4d0 <__assert_fail@plt+0x1d0cc>
   2dca4:	tst	r6, #4096	; 0x1000
   2dca8:	beq	2dcc4 <__assert_fail@plt+0x1c8c0>
   2dcac:	add	r0, r8, sl
   2dcb0:	rsb	r1, sl, #1024	; 0x400
   2dcb4:	movw	r2, #20256	; 0x4f20
   2dcb8:	movt	r2, #6
   2dcbc:	bl	112d8 <snprintf@plt>
   2dcc0:	add	sl, sl, r0
   2dcc4:	tst	r6, #32768	; 0x8000
   2dcc8:	beq	2dce4 <__assert_fail@plt+0x1c8e0>
   2dccc:	add	r0, r8, sl
   2dcd0:	rsb	r1, sl, #1024	; 0x400
   2dcd4:	movw	r2, #20264	; 0x4f28
   2dcd8:	movt	r2, #6
   2dcdc:	bl	112d8 <snprintf@plt>
   2dce0:	add	sl, sl, r0
   2dce4:	tst	r6, #65536	; 0x10000
   2dce8:	beq	2dd04 <__assert_fail@plt+0x1c900>
   2dcec:	add	r0, r8, sl
   2dcf0:	rsb	r1, sl, #1024	; 0x400
   2dcf4:	movw	r2, #20272	; 0x4f30
   2dcf8:	movt	r2, #6
   2dcfc:	bl	112d8 <snprintf@plt>
   2dd00:	add	sl, sl, r0
   2dd04:	tst	r6, #131072	; 0x20000
   2dd08:	beq	2dd38 <__assert_fail@plt+0x1c934>
   2dd0c:	ldr	fp, [sp, #12]
   2dd10:	rsb	r1, sl, #1024	; 0x400
   2dd14:	cmp	fp, #1
   2dd18:	addls	r0, r8, sl
   2dd1c:	addhi	r0, r8, sl
   2dd20:	movwls	r2, #20280	; 0x4f38
   2dd24:	movwhi	r2, #20288	; 0x4f40
   2dd28:	movtls	r2, #6
   2dd2c:	movthi	r2, #6
   2dd30:	bl	112d8 <snprintf@plt>
   2dd34:	add	sl, sl, r0
   2dd38:	tst	r6, #262144	; 0x40000
   2dd3c:	beq	2dd58 <__assert_fail@plt+0x1c954>
   2dd40:	add	r0, r8, sl
   2dd44:	rsb	r1, sl, #1024	; 0x400
   2dd48:	movw	r2, #20304	; 0x4f50
   2dd4c:	movt	r2, #6
   2dd50:	bl	112d8 <snprintf@plt>
   2dd54:	add	sl, sl, r0
   2dd58:	tst	r6, #2097152	; 0x200000
   2dd5c:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2dd60:	add	r0, r8, sl
   2dd64:	rsb	r1, sl, #1024	; 0x400
   2dd68:	movw	r2, #20312	; 0x4f58
   2dd6c:	movt	r2, #6
   2dd70:	bl	112d8 <snprintf@plt>
   2dd74:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2dd78:	cmp	r3, #8585216	; 0x830000
   2dd7c:	beq	2eec8 <__assert_fail@plt+0x1dac4>
   2dd80:	bls	2e5c8 <__assert_fail@plt+0x1d1c4>
   2dd84:	cmp	r3, #8847360	; 0x870000
   2dd88:	beq	2ef00 <__assert_fail@plt+0x1dafc>
   2dd8c:	bls	2eee0 <__assert_fail@plt+0x1dadc>
   2dd90:	cmp	r3, #8912896	; 0x880000
   2dd94:	beq	2ee60 <__assert_fail@plt+0x1da5c>
   2dd98:	cmp	r3, #9043968	; 0x8a0000
   2dd9c:	bne	2e5e0 <__assert_fail@plt+0x1d1dc>
   2dda0:	movw	r1, #19576	; 0x4c78
   2dda4:	mov	r2, #1024	; 0x400
   2dda8:	movt	r1, #6
   2ddac:	ldr	r0, [pc, #4068]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ddb0:	bl	112c0 <__strcat_chk@plt>
   2ddb4:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2ddb8:	cmp	r9, #0
   2ddbc:	beq	2e988 <__assert_fail@plt+0x1d584>
   2ddc0:	cmp	r9, #16777216	; 0x1000000
   2ddc4:	bne	2c3c0 <__assert_fail@plt+0x1afbc>
   2ddc8:	movw	r1, #17824	; 0x45a0
   2ddcc:	ldr	r0, [pc, #4036]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ddd0:	movt	r1, #6
   2ddd4:	mov	r2, #1024	; 0x400
   2ddd8:	bl	112c0 <__strcat_chk@plt>
   2dddc:	cmp	r8, #0
   2dde0:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2dde4:	mov	r9, #0
   2dde8:	b	2ddf4 <__assert_fail@plt+0x1c9f0>
   2ddec:	cmp	r8, #0
   2ddf0:	beq	2de24 <__assert_fail@plt+0x1ca20>
   2ddf4:	rsb	r3, r8, #0
   2ddf8:	and	r3, r3, r8
   2ddfc:	cmp	r3, #4
   2de00:	bic	r8, r8, r3
   2de04:	movne	r9, #1
   2de08:	bne	2ddec <__assert_fail@plt+0x1c9e8>
   2de0c:	movw	r1, #17840	; 0x45b0
   2de10:	mov	r2, #1024	; 0x400
   2de14:	movt	r1, #6
   2de18:	ldr	r0, [pc, #3960]	; 2ed98 <__assert_fail@plt+0x1d994>
   2de1c:	bl	112c0 <__strcat_chk@plt>
   2de20:	b	2ddec <__assert_fail@plt+0x1c9e8>
   2de24:	cmp	r9, #0
   2de28:	bne	2c3dc <__assert_fail@plt+0x1afd8>
   2de2c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2de30:	cmp	r3, #0
   2de34:	beq	2ebcc <__assert_fail@plt+0x1d7c8>
   2de38:	cmp	r3, #16777216	; 0x1000000
   2de3c:	bne	2c1f8 <__assert_fail@plt+0x1adf4>
   2de40:	movw	r2, #18684	; 0x48fc
   2de44:	movt	r2, #6
   2de48:	ldr	r3, [pc, #3912]	; 2ed98 <__assert_fail@plt+0x1d994>
   2de4c:	ldm	r2, {r0, r1, r2}
   2de50:	stmia	r3!, {r0, r1}
   2de54:	strb	r2, [r3]
   2de58:	b	2c21c <__assert_fail@plt+0x1ae18>
   2de5c:	cmp	r3, #0
   2de60:	beq	2e940 <__assert_fail@plt+0x1d53c>
   2de64:	cmp	r3, #268435456	; 0x10000000
   2de68:	bne	2caf4 <__assert_fail@plt+0x1b6f0>
   2de6c:	movw	r3, #19356	; 0x4b9c
   2de70:	movt	r3, #6
   2de74:	ldr	r2, [pc, #3868]	; 2ed98 <__assert_fail@plt+0x1d994>
   2de78:	ldm	r3, {r0, r1}
   2de7c:	stm	r2, {r0, r1}
   2de80:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2de84:	movw	lr, #17772	; 0x456c
   2de88:	movt	lr, #6
   2de8c:	ldr	ip, [pc, #3844]	; 2ed98 <__assert_fail@plt+0x1d994>
   2de90:	bic	r8, r6, #-16777216	; 0xff000000
   2de94:	ldm	lr!, {r0, r1, r2, r3}
   2de98:	bic	r8, r8, #1
   2de9c:	stmia	ip!, {r0, r1, r2, r3}
   2dea0:	ldm	lr, {r0, r1, r2}
   2dea4:	stmia	ip!, {r0, r1}
   2dea8:	strb	r2, [ip]
   2deac:	b	2c39c <__assert_fail@plt+0x1af98>
   2deb0:	movw	r1, #20656	; 0x50b0
   2deb4:	mov	r2, #1024	; 0x400
   2deb8:	movt	r1, #6
   2debc:	ldr	r0, [pc, #3796]	; 2ed98 <__assert_fail@plt+0x1d994>
   2dec0:	bl	112c0 <__strcat_chk@plt>
   2dec4:	b	2d578 <__assert_fail@plt+0x1c174>
   2dec8:	movw	r1, #20640	; 0x50a0
   2decc:	mov	r2, #1024	; 0x400
   2ded0:	movt	r1, #6
   2ded4:	ldr	r0, [pc, #3772]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ded8:	bl	112c0 <__strcat_chk@plt>
   2dedc:	b	2d570 <__assert_fail@plt+0x1c16c>
   2dee0:	movw	r1, #20624	; 0x5090
   2dee4:	mov	r2, #1024	; 0x400
   2dee8:	movt	r1, #6
   2deec:	ldr	r0, [pc, #3748]	; 2ed98 <__assert_fail@plt+0x1d994>
   2def0:	bl	112c0 <__strcat_chk@plt>
   2def4:	b	2d568 <__assert_fail@plt+0x1c164>
   2def8:	movw	r3, #20616	; 0x5088
   2defc:	movt	r3, #6
   2df00:	ldr	r2, [pc, #3728]	; 2ed98 <__assert_fail@plt+0x1d994>
   2df04:	ldm	r3, {r0, r1}
   2df08:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2df0c:	strh	r1, [r2, #4]
   2df10:	b	2d560 <__assert_fail@plt+0x1c15c>
   2df14:	movw	r1, #20908	; 0x51ac
   2df18:	mov	r2, #1024	; 0x400
   2df1c:	movt	r1, #6
   2df20:	ldr	r0, [pc, #3696]	; 2ed98 <__assert_fail@plt+0x1d994>
   2df24:	bl	112c0 <__strcat_chk@plt>
   2df28:	b	2d4c8 <__assert_fail@plt+0x1c0c4>
   2df2c:	movw	r1, #20888	; 0x5198
   2df30:	mov	r2, #1024	; 0x400
   2df34:	movt	r1, #6
   2df38:	ldr	r0, [pc, #3672]	; 2ed98 <__assert_fail@plt+0x1d994>
   2df3c:	bl	112c0 <__strcat_chk@plt>
   2df40:	b	2d4a4 <__assert_fail@plt+0x1c0a0>
   2df44:	movw	lr, #20808	; 0x5148
   2df48:	movt	lr, #6
   2df4c:	ldr	ip, [pc, #3652]	; 2ed98 <__assert_fail@plt+0x1d994>
   2df50:	ldm	lr!, {r0, r1, r2, r3}
   2df54:	stmia	ip!, {r0, r1, r2, r3}
   2df58:	ldm	lr, {r0, r1, r2}
   2df5c:	stmia	ip!, {r0, r1}
   2df60:	strb	r2, [ip]
   2df64:	b	2c844 <__assert_fail@plt+0x1b440>
   2df68:	movw	r1, #19428	; 0x4be4
   2df6c:	mov	r2, #1024	; 0x400
   2df70:	movt	r1, #6
   2df74:	ldr	r0, [pc, #3612]	; 2ed98 <__assert_fail@plt+0x1d994>
   2df78:	bl	112c0 <__strcat_chk@plt>
   2df7c:	b	2d64c <__assert_fail@plt+0x1c248>
   2df80:	movw	r1, #20776	; 0x5128
   2df84:	mov	r2, #1024	; 0x400
   2df88:	movt	r1, #6
   2df8c:	ldr	r0, [pc, #3588]	; 2ed98 <__assert_fail@plt+0x1d994>
   2df90:	bl	112c0 <__strcat_chk@plt>
   2df94:	b	2d934 <__assert_fail@plt+0x1c530>
   2df98:	movw	r1, #20768	; 0x5120
   2df9c:	mov	r2, #1024	; 0x400
   2dfa0:	movt	r1, #6
   2dfa4:	ldr	r0, [pc, #3564]	; 2ed98 <__assert_fail@plt+0x1d994>
   2dfa8:	bl	112c0 <__strcat_chk@plt>
   2dfac:	b	2d92c <__assert_fail@plt+0x1c528>
   2dfb0:	movw	r1, #20760	; 0x5118
   2dfb4:	mov	r2, #1024	; 0x400
   2dfb8:	movt	r1, #6
   2dfbc:	ldr	r0, [pc, #3540]	; 2ed98 <__assert_fail@plt+0x1d994>
   2dfc0:	bl	112c0 <__strcat_chk@plt>
   2dfc4:	b	2d924 <__assert_fail@plt+0x1c520>
   2dfc8:	movw	r1, #20748	; 0x510c
   2dfcc:	mov	r2, #1024	; 0x400
   2dfd0:	movt	r1, #6
   2dfd4:	ldr	r0, [pc, #3516]	; 2ed98 <__assert_fail@plt+0x1d994>
   2dfd8:	bl	112c0 <__strcat_chk@plt>
   2dfdc:	b	2d91c <__assert_fail@plt+0x1c518>
   2dfe0:	movw	r1, #19100	; 0x4a9c
   2dfe4:	mov	r2, #1024	; 0x400
   2dfe8:	movt	r1, #6
   2dfec:	ldr	r0, [pc, #3492]	; 2ed98 <__assert_fail@plt+0x1d994>
   2dff0:	bl	112c0 <__strcat_chk@plt>
   2dff4:	b	2d388 <__assert_fail@plt+0x1bf84>
   2dff8:	movw	r1, #19084	; 0x4a8c
   2dffc:	mov	r2, #1024	; 0x400
   2e000:	movt	r1, #6
   2e004:	ldr	r0, [pc, #3468]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e008:	bl	112c0 <__strcat_chk@plt>
   2e00c:	b	2d380 <__assert_fail@plt+0x1bf7c>
   2e010:	movw	r1, #19068	; 0x4a7c
   2e014:	mov	r2, #1024	; 0x400
   2e018:	movt	r1, #6
   2e01c:	ldr	r0, [pc, #3444]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e020:	bl	112c0 <__strcat_chk@plt>
   2e024:	b	2d378 <__assert_fail@plt+0x1bf74>
   2e028:	movw	r1, #19048	; 0x4a68
   2e02c:	mov	r2, #1024	; 0x400
   2e030:	movt	r1, #6
   2e034:	ldr	r0, [pc, #3420]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e038:	bl	112c0 <__strcat_chk@plt>
   2e03c:	b	2d370 <__assert_fail@plt+0x1bf6c>
   2e040:	movw	r1, #19032	; 0x4a58
   2e044:	mov	r2, #1024	; 0x400
   2e048:	movt	r1, #6
   2e04c:	ldr	r0, [pc, #3396]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e050:	bl	112c0 <__strcat_chk@plt>
   2e054:	b	2d368 <__assert_fail@plt+0x1bf64>
   2e058:	movw	r1, #19012	; 0x4a44
   2e05c:	mov	r2, #1024	; 0x400
   2e060:	movt	r1, #6
   2e064:	ldr	r0, [pc, #3372]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e068:	bl	112c0 <__strcat_chk@plt>
   2e06c:	b	2d360 <__assert_fail@plt+0x1bf5c>
   2e070:	movw	r1, #21124	; 0x5284
   2e074:	mov	r2, #1024	; 0x400
   2e078:	movt	r1, #6
   2e07c:	ldr	r0, [pc, #3348]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e080:	bl	112c0 <__strcat_chk@plt>
   2e084:	b	2c7c8 <__assert_fail@plt+0x1b3c4>
   2e088:	movw	ip, #21104	; 0x5270
   2e08c:	movt	ip, #6
   2e090:	ldr	lr, [pc, #3328]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e094:	ldm	ip!, {r0, r1, r2, r3}
   2e098:	ldr	ip, [ip]
   2e09c:	stmia	lr!, {r0, r1, r2, r3}
   2e0a0:	strb	ip, [lr]
   2e0a4:	b	2c7c0 <__assert_fail@plt+0x1b3bc>
   2e0a8:	movw	r1, #18504	; 0x4848
   2e0ac:	mov	r2, #1024	; 0x400
   2e0b0:	movt	r1, #6
   2e0b4:	ldr	r0, [pc, #3292]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e0b8:	bl	112c0 <__strcat_chk@plt>
   2e0bc:	b	2ccc0 <__assert_fail@plt+0x1b8bc>
   2e0c0:	movw	r1, #18496	; 0x4840
   2e0c4:	mov	r2, #1024	; 0x400
   2e0c8:	movt	r1, #6
   2e0cc:	ldr	r0, [pc, #3268]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e0d0:	bl	112c0 <__strcat_chk@plt>
   2e0d4:	b	2ccb8 <__assert_fail@plt+0x1b8b4>
   2e0d8:	movw	r3, #18488	; 0x4838
   2e0dc:	movt	r3, #6
   2e0e0:	sub	r2, r8, #1376	; 0x560
   2e0e4:	ldm	r3, {r0, r1}
   2e0e8:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2e0ec:	strh	r1, [r2, #4]
   2e0f0:	b	2ccb0 <__assert_fail@plt+0x1b8ac>
   2e0f4:	add	r0, r8, sl
   2e0f8:	movw	r2, #19984	; 0x4e10
   2e0fc:	rsb	r1, sl, #1024	; 0x400
   2e100:	movt	r2, #6
   2e104:	bl	112d8 <snprintf@plt>
   2e108:	cmp	fp, #268435456	; 0x10000000
   2e10c:	ldr	r3, [pc, #3204]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e110:	bne	2bf80 <__assert_fail@plt+0x1ab7c>
   2e114:	add	r1, sl, r0
   2e118:	movw	r2, #20024	; 0x4e38
   2e11c:	add	r0, r3, r1
   2e120:	movt	r2, #6
   2e124:	rsb	r1, r1, #1024	; 0x400
   2e128:	bl	112d8 <snprintf@plt>
   2e12c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e130:	movw	r1, #19460	; 0x4c04
   2e134:	mov	r2, #1024	; 0x400
   2e138:	movt	r1, #6
   2e13c:	ldr	r0, [pc, #3156]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e140:	bl	112c0 <__strcat_chk@plt>
   2e144:	b	2cb80 <__assert_fail@plt+0x1b77c>
   2e148:	movw	r1, #19444	; 0x4bf4
   2e14c:	mov	r2, #1024	; 0x400
   2e150:	movt	r1, #6
   2e154:	ldr	r0, [pc, #3132]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e158:	bl	112c0 <__strcat_chk@plt>
   2e15c:	b	2cb78 <__assert_fail@plt+0x1b774>
   2e160:	movw	r1, #19436	; 0x4bec
   2e164:	mov	r2, #1024	; 0x400
   2e168:	movt	r1, #6
   2e16c:	ldr	r0, [pc, #3108]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e170:	bl	112c0 <__strcat_chk@plt>
   2e174:	b	2cb70 <__assert_fail@plt+0x1b76c>
   2e178:	movw	r1, #19428	; 0x4be4
   2e17c:	mov	r2, #1024	; 0x400
   2e180:	movt	r1, #6
   2e184:	ldr	r0, [pc, #3084]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e188:	bl	112c0 <__strcat_chk@plt>
   2e18c:	b	2cb68 <__assert_fail@plt+0x1b764>
   2e190:	bl	1117c <__stack_chk_fail@plt>
   2e194:	movw	r1, #19116	; 0x4aac
   2e198:	mov	r2, #1024	; 0x400
   2e19c:	movt	r1, #6
   2e1a0:	ldr	r0, [pc, #3056]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e1a4:	bl	112c0 <__strcat_chk@plt>
   2e1a8:	b	2d390 <__assert_fail@plt+0x1bf8c>
   2e1ac:	movw	r1, #19776	; 0x4d40
   2e1b0:	mov	r2, #1024	; 0x400
   2e1b4:	movt	r1, #6
   2e1b8:	ldr	r0, [pc, #3032]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e1bc:	bl	112c0 <__strcat_chk@plt>
   2e1c0:	b	2cc38 <__assert_fail@plt+0x1b834>
   2e1c4:	movw	r1, #19764	; 0x4d34
   2e1c8:	mov	r2, #1024	; 0x400
   2e1cc:	movt	r1, #6
   2e1d0:	ldr	r0, [pc, #3008]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e1d4:	bl	112c0 <__strcat_chk@plt>
   2e1d8:	b	2cc30 <__assert_fail@plt+0x1b82c>
   2e1dc:	movw	r1, #19756	; 0x4d2c
   2e1e0:	mov	r2, #1024	; 0x400
   2e1e4:	movt	r1, #6
   2e1e8:	ldr	r0, [pc, #2984]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e1ec:	bl	112c0 <__strcat_chk@plt>
   2e1f0:	b	2cc28 <__assert_fail@plt+0x1b824>
   2e1f4:	movw	r1, #21032	; 0x5228
   2e1f8:	mov	r2, #1024	; 0x400
   2e1fc:	movt	r1, #6
   2e200:	ldr	r0, [pc, #2960]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e204:	bl	112c0 <__strcat_chk@plt>
   2e208:	b	2c780 <__assert_fail@plt+0x1b37c>
   2e20c:	movw	r2, #21020	; 0x521c
   2e210:	movt	r2, #6
   2e214:	ldr	r3, [pc, #2940]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e218:	ldm	r2, {r0, r1, r2}
   2e21c:	stmia	r3!, {r0, r1}
   2e220:	strh	r2, [r3]
   2e224:	b	2c778 <__assert_fail@plt+0x1b374>
   2e228:	movw	r3, #21056	; 0x5240
   2e22c:	movt	r3, #6
   2e230:	sub	r2, r8, #1376	; 0x560
   2e234:	ldm	r3, {r0, r1}
   2e238:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2e23c:	strh	r1, [r2, #4]
   2e240:	b	2ce18 <__assert_fail@plt+0x1ba14>
   2e244:	movw	r1, #19504	; 0x4c30
   2e248:	mov	r2, #1024	; 0x400
   2e24c:	movt	r1, #6
   2e250:	ldr	r0, [pc, #2880]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e254:	bl	112c0 <__strcat_chk@plt>
   2e258:	b	2cba0 <__assert_fail@plt+0x1b79c>
   2e25c:	movw	r1, #19492	; 0x4c24
   2e260:	mov	r2, #1024	; 0x400
   2e264:	movt	r1, #6
   2e268:	ldr	r0, [pc, #2856]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e26c:	bl	112c0 <__strcat_chk@plt>
   2e270:	b	2cb98 <__assert_fail@plt+0x1b794>
   2e274:	movw	r1, #19480	; 0x4c18
   2e278:	mov	r2, #1024	; 0x400
   2e27c:	movt	r1, #6
   2e280:	ldr	r0, [pc, #2832]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e284:	bl	112c0 <__strcat_chk@plt>
   2e288:	b	2cb90 <__assert_fail@plt+0x1b78c>
   2e28c:	movw	r1, #19468	; 0x4c0c
   2e290:	mov	r2, #1024	; 0x400
   2e294:	movt	r1, #6
   2e298:	ldr	r0, [pc, #2808]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e29c:	bl	112c0 <__strcat_chk@plt>
   2e2a0:	b	2cb88 <__assert_fail@plt+0x1b784>
   2e2a4:	movw	r1, #21140	; 0x5294
   2e2a8:	mov	r2, #1024	; 0x400
   2e2ac:	movt	r1, #6
   2e2b0:	ldr	r0, [pc, #2784]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e2b4:	bl	112c0 <__strcat_chk@plt>
   2e2b8:	b	2c7d8 <__assert_fail@plt+0x1b3d4>
   2e2bc:	movw	r1, #21132	; 0x528c
   2e2c0:	mov	r2, #1024	; 0x400
   2e2c4:	movt	r1, #6
   2e2c8:	ldr	r0, [pc, #2760]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e2cc:	bl	112c0 <__strcat_chk@plt>
   2e2d0:	b	2c7d0 <__assert_fail@plt+0x1b3cc>
   2e2d4:	movw	r1, #18880	; 0x49c0
   2e2d8:	mov	r2, #1024	; 0x400
   2e2dc:	movt	r1, #6
   2e2e0:	ldr	r0, [pc, #2736]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e2e4:	bl	112c0 <__strcat_chk@plt>
   2e2e8:	b	2c258 <__assert_fail@plt+0x1ae54>
   2e2ec:	ldr	r8, [pc, #2724]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e2f0:	mov	r0, r8
   2e2f4:	bl	1129c <strlen@plt>
   2e2f8:	str	r9, [sp]
   2e2fc:	movw	r3, #18900	; 0x49d4
   2e300:	mov	r1, #1
   2e304:	movt	r3, #6
   2e308:	mvn	r2, #0
   2e30c:	add	r0, r8, r0
   2e310:	bl	112cc <__sprintf_chk@plt>
   2e314:	b	2c260 <__assert_fail@plt+0x1ae5c>
   2e318:	movw	r1, #20676	; 0x50c4
   2e31c:	mov	r2, #1024	; 0x400
   2e320:	movt	r1, #6
   2e324:	ldr	r0, [pc, #2668]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e328:	bl	112c0 <__strcat_chk@plt>
   2e32c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e330:	movw	r1, #20664	; 0x50b8
   2e334:	mov	r2, #1024	; 0x400
   2e338:	movt	r1, #6
   2e33c:	ldr	r0, [pc, #2644]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e340:	bl	112c0 <__strcat_chk@plt>
   2e344:	b	2d580 <__assert_fail@plt+0x1c17c>
   2e348:	movw	r1, #20964	; 0x51e4
   2e34c:	mov	r2, #1024	; 0x400
   2e350:	movt	r1, #6
   2e354:	ldr	r0, [pc, #2620]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e358:	bl	112c0 <__strcat_chk@plt>
   2e35c:	b	2d4d0 <__assert_fail@plt+0x1c0cc>
   2e360:	movw	r1, #20784	; 0x5130
   2e364:	mov	r2, #1024	; 0x400
   2e368:	movt	r1, #6
   2e36c:	ldr	r0, [pc, #2596]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e370:	bl	112c0 <__strcat_chk@plt>
   2e374:	b	2d93c <__assert_fail@plt+0x1c538>
   2e378:	mov	r2, #5
   2e37c:	movw	r1, #18964	; 0x4a14
   2e380:	mov	r0, #0
   2e384:	movt	r1, #6
   2e388:	bl	11170 <dcgettext@plt>
   2e38c:	mov	r2, #1024	; 0x400
   2e390:	mov	r1, r0
   2e394:	ldr	r0, [pc, #2556]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e398:	bl	112c0 <__strcat_chk@plt>
   2e39c:	b	2d528 <__assert_fail@plt+0x1c124>
   2e3a0:	movw	r3, #21096	; 0x5268
   2e3a4:	movt	r3, #6
   2e3a8:	ldr	r2, [pc, #2536]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e3ac:	ldm	r3, {r0, r1}
   2e3b0:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2e3b4:	strh	r1, [r2, #4]
   2e3b8:	b	2d238 <__assert_fail@plt+0x1be34>
   2e3bc:	movw	r3, #21088	; 0x5260
   2e3c0:	movt	r3, #6
   2e3c4:	ldr	r2, [pc, #2508]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e3c8:	ldm	r3, {r0, r1}
   2e3cc:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2e3d0:	strh	r1, [r2, #4]
   2e3d4:	b	2d238 <__assert_fail@plt+0x1be34>
   2e3d8:	cmp	r3, #-1879048192	; 0x90000000
   2e3dc:	beq	2ed68 <__assert_fail@plt+0x1d964>
   2e3e0:	cmp	r3, #-1610612736	; 0xa0000000
   2e3e4:	bne	2ef18 <__assert_fail@plt+0x1db14>
   2e3e8:	movw	r1, #19888	; 0x4db0
   2e3ec:	mov	r2, #1024	; 0x400
   2e3f0:	movt	r1, #6
   2e3f4:	ldr	r0, [pc, #2460]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e3f8:	bl	112c0 <__strcat_chk@plt>
   2e3fc:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e400:	movw	r1, #17684	; 0x4514
   2e404:	mov	r2, #1024	; 0x400
   2e408:	movt	r1, #6
   2e40c:	ldr	r0, [pc, #2436]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e410:	bl	112c0 <__strcat_chk@plt>
   2e414:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e418:	movw	r3, #20716	; 0x50ec
   2e41c:	movt	r3, #6
   2e420:	sub	r8, r8, #1376	; 0x560
   2e424:	ldm	r3, {r0, r1, r2, r3}
   2e428:	stmia	r8!, {r0, r1, r2}
   2e42c:	strh	r3, [r8]
   2e430:	b	2d914 <__assert_fail@plt+0x1c510>
   2e434:	movw	r1, #17712	; 0x4530
   2e438:	mov	r2, #1024	; 0x400
   2e43c:	movt	r1, #6
   2e440:	ldr	r0, [pc, #2384]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e444:	bl	112c0 <__strcat_chk@plt>
   2e448:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e44c:	movw	r1, #17700	; 0x4524
   2e450:	mov	r2, #1024	; 0x400
   2e454:	movt	r1, #6
   2e458:	ldr	r0, [pc, #2360]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e45c:	bl	112c0 <__strcat_chk@plt>
   2e460:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e464:	cmp	r3, #9240576	; 0x8d0000
   2e468:	beq	2f018 <__assert_fail@plt+0x1dc14>
   2e46c:	bls	2eff8 <__assert_fail@plt+0x1dbf4>
   2e470:	cmp	r3, #9306112	; 0x8e0000
   2e474:	beq	2efa8 <__assert_fail@plt+0x1dba4>
   2e478:	cmp	r3, #9502720	; 0x910000
   2e47c:	bne	2e5e0 <__assert_fail@plt+0x1d1dc>
   2e480:	movw	r1, #19560	; 0x4c68
   2e484:	mov	r2, #1024	; 0x400
   2e488:	movt	r1, #6
   2e48c:	ldr	r0, [pc, #2308]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e490:	bl	112c0 <__strcat_chk@plt>
   2e494:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2e498:	add	r0, r8, sl
   2e49c:	rsb	r1, sl, #1024	; 0x400
   2e4a0:	movw	r2, #20168	; 0x4ec8
   2e4a4:	movt	r2, #6
   2e4a8:	bl	112d8 <snprintf@plt>
   2e4ac:	tst	r6, #16777216	; 0x1000000
   2e4b0:	add	sl, sl, r0
   2e4b4:	beq	2e4d0 <__assert_fail@plt+0x1d0cc>
   2e4b8:	add	r0, r8, sl
   2e4bc:	rsb	r1, sl, #1024	; 0x400
   2e4c0:	movw	r2, #20180	; 0x4ed4
   2e4c4:	movt	r2, #6
   2e4c8:	bl	112d8 <snprintf@plt>
   2e4cc:	add	sl, sl, r0
   2e4d0:	ubfx	r3, r6, #22, #2
   2e4d4:	cmp	r3, #2
   2e4d8:	beq	2efdc <__assert_fail@plt+0x1dbd8>
   2e4dc:	cmp	r3, #3
   2e4e0:	beq	2efc0 <__assert_fail@plt+0x1dbbc>
   2e4e4:	cmp	r3, #1
   2e4e8:	rsb	r1, sl, #1024	; 0x400
   2e4ec:	addne	r0, r8, sl
   2e4f0:	addeq	r0, r8, sl
   2e4f4:	movwne	r2, #20192	; 0x4ee0
   2e4f8:	movweq	r2, #20208	; 0x4ef0
   2e4fc:	movtne	r2, #6
   2e500:	movteq	r2, #6
   2e504:	bl	112d8 <snprintf@plt>
   2e508:	add	sl, sl, r0
   2e50c:	b	2dca4 <__assert_fail@plt+0x1c8a0>
   2e510:	movw	r3, #20732	; 0x50fc
   2e514:	movt	r3, #6
   2e518:	sub	r8, r8, #1376	; 0x560
   2e51c:	ldm	r3, {r0, r1, r2, r3}
   2e520:	stmia	r8!, {r0, r1, r2}
   2e524:	strh	r3, [r8]
   2e528:	b	2d914 <__assert_fail@plt+0x1c510>
   2e52c:	cmp	r3, #805306368	; 0x30000000
   2e530:	beq	2ee30 <__assert_fail@plt+0x1da2c>
   2e534:	cmp	r3, #1073741824	; 0x40000000
   2e538:	bne	2ef18 <__assert_fail@plt+0x1db14>
   2e53c:	movw	r1, #19820	; 0x4d6c
   2e540:	mov	r2, #1024	; 0x400
   2e544:	movt	r1, #6
   2e548:	ldr	r0, [pc, #2120]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e54c:	bl	112c0 <__strcat_chk@plt>
   2e550:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e554:	movw	r3, #18956	; 0x4a0c
   2e558:	movt	r3, #6
   2e55c:	ldr	r2, [pc, #2100]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e560:	ldm	r3, {r0, r1}
   2e564:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2e568:	strh	r1, [r2, #4]
   2e56c:	b	2d520 <__assert_fail@plt+0x1c11c>
   2e570:	movw	r1, #19708	; 0x4cfc
   2e574:	mov	r2, #1024	; 0x400
   2e578:	movt	r1, #6
   2e57c:	ldr	r0, [pc, #2068]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e580:	bl	112c0 <__strcat_chk@plt>
   2e584:	b	2cc20 <__assert_fail@plt+0x1b81c>
   2e588:	cmp	r3, #0
   2e58c:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2e590:	movw	r3, #18536	; 0x4868
   2e594:	movt	r3, #6
   2e598:	ldr	r2, [pc, #2040]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e59c:	ldm	r3, {r0, r1}
   2e5a0:	stm	r2, {r0, r1}
   2e5a4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e5a8:	cmp	r3, #83886080	; 0x5000000
   2e5ac:	bne	2e590 <__assert_fail@plt+0x1d18c>
   2e5b0:	movw	r3, #18552	; 0x4878
   2e5b4:	movt	r3, #6
   2e5b8:	ldr	r2, [pc, #2008]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e5bc:	ldm	r3, {r0, r1}
   2e5c0:	stm	r2, {r0, r1}
   2e5c4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e5c8:	cmp	r3, #8454144	; 0x810000
   2e5cc:	beq	2ed9c <__assert_fail@plt+0x1d998>
   2e5d0:	cmp	r3, #8519680	; 0x820000
   2e5d4:	beq	2ed80 <__assert_fail@plt+0x1d97c>
   2e5d8:	cmp	r3, #0
   2e5dc:	beq	2cbec <__assert_fail@plt+0x1b7e8>
   2e5e0:	mov	r2, #5
   2e5e4:	movw	r1, #19684	; 0x4ce4
   2e5e8:	mov	r0, #0
   2e5ec:	movt	r1, #6
   2e5f0:	bl	11170 <dcgettext@plt>
   2e5f4:	mov	r2, #1024	; 0x400
   2e5f8:	mov	r1, r0
   2e5fc:	ldr	r0, [pc, #1940]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e600:	bl	112c0 <__strcat_chk@plt>
   2e604:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2e608:	movw	r2, #19332	; 0x4b84
   2e60c:	movt	r2, #6
   2e610:	ldr	r3, [pc, #1920]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e614:	ldm	r2, {r0, r1, r2}
   2e618:	stmia	r3!, {r0, r1}
   2e61c:	strb	r2, [r3]
   2e620:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e624:	tst	r6, #256	; 0x100
   2e628:	bne	2f04c <__assert_fail@plt+0x1dc48>
   2e62c:	tst	r6, #1048576	; 0x100000
   2e630:	beq	2f084 <__assert_fail@plt+0x1dc80>
   2e634:	tst	r6, #8192	; 0x2000
   2e638:	bne	2f068 <__assert_fail@plt+0x1dc64>
   2e63c:	tst	r6, #16384	; 0x4000
   2e640:	beq	2dc28 <__assert_fail@plt+0x1c824>
   2e644:	add	r0, r8, sl
   2e648:	rsb	r1, sl, #1024	; 0x400
   2e64c:	movw	r2, #20024	; 0x4e38
   2e650:	movt	r2, #6
   2e654:	bl	112d8 <snprintf@plt>
   2e658:	add	sl, sl, r0
   2e65c:	b	2dc28 <__assert_fail@plt+0x1c824>
   2e660:	movw	r1, #17952	; 0x4620
   2e664:	mov	r2, #1024	; 0x400
   2e668:	movt	r1, #6
   2e66c:	ldr	r0, [pc, #1828]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e670:	bl	112c0 <__strcat_chk@plt>
   2e674:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e678:	movw	r1, #18000	; 0x4650
   2e67c:	ldr	r0, [pc, #1812]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e680:	movt	r1, #6
   2e684:	mov	r2, #1024	; 0x400
   2e688:	bl	112c0 <__strcat_chk@plt>
   2e68c:	cmp	r8, #0
   2e690:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2e694:	mov	r9, #0
   2e698:	b	2e6c8 <__assert_fail@plt+0x1d2c4>
   2e69c:	cmp	r2, #4194304	; 0x400000
   2e6a0:	beq	2e71c <__assert_fail@plt+0x1d318>
   2e6a4:	cmp	r2, #8388608	; 0x800000
   2e6a8:	bne	2e714 <__assert_fail@plt+0x1d310>
   2e6ac:	movw	r1, #17984	; 0x4640
   2e6b0:	ldr	r0, [pc, #1760]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e6b4:	movt	r1, #6
   2e6b8:	mov	r2, #1024	; 0x400
   2e6bc:	bl	112c0 <__strcat_chk@plt>
   2e6c0:	cmp	r8, #0
   2e6c4:	beq	2de24 <__assert_fail@plt+0x1ca20>
   2e6c8:	rsb	r2, r8, #0
   2e6cc:	and	r2, r2, r8
   2e6d0:	cmp	r2, #1024	; 0x400
   2e6d4:	bic	r8, r8, r2
   2e6d8:	beq	2e700 <__assert_fail@plt+0x1d2fc>
   2e6dc:	bhi	2e69c <__assert_fail@plt+0x1d298>
   2e6e0:	cmp	r2, #512	; 0x200
   2e6e4:	bne	2e714 <__assert_fail@plt+0x1d310>
   2e6e8:	movw	r1, #18016	; 0x4660
   2e6ec:	mov	r2, #1024	; 0x400
   2e6f0:	movt	r1, #6
   2e6f4:	ldr	r0, [pc, #1692]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e6f8:	bl	112c0 <__strcat_chk@plt>
   2e6fc:	b	2e6c0 <__assert_fail@plt+0x1d2bc>
   2e700:	movw	r1, #18036	; 0x4674
   2e704:	ldr	r0, [pc, #1676]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e708:	movt	r1, #6
   2e70c:	bl	112c0 <__strcat_chk@plt>
   2e710:	b	2e6c0 <__assert_fail@plt+0x1d2bc>
   2e714:	mov	r9, #1
   2e718:	b	2e6c0 <__assert_fail@plt+0x1d2bc>
   2e71c:	movw	r1, #17992	; 0x4648
   2e720:	mov	r2, #1024	; 0x400
   2e724:	movt	r1, #6
   2e728:	ldr	r0, [pc, #1640]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e72c:	bl	112c0 <__strcat_chk@plt>
   2e730:	b	2e6c0 <__assert_fail@plt+0x1d2bc>
   2e734:	mov	r2, #5
   2e738:	movw	r1, #19740	; 0x4d1c
   2e73c:	mov	r0, #0
   2e740:	movt	r1, #6
   2e744:	bl	11170 <dcgettext@plt>
   2e748:	mov	r2, #1024	; 0x400
   2e74c:	mov	r1, r0
   2e750:	ldr	r0, [pc, #1600]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e754:	bl	112c0 <__strcat_chk@plt>
   2e758:	b	2cc20 <__assert_fail@plt+0x1b81c>
   2e75c:	movw	r1, #19716	; 0x4d04
   2e760:	mov	r2, #1024	; 0x400
   2e764:	movt	r1, #6
   2e768:	ldr	r0, [pc, #1576]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e76c:	bl	112c0 <__strcat_chk@plt>
   2e770:	b	2cc20 <__assert_fail@plt+0x1b81c>
   2e774:	movw	r1, #18792	; 0x4968
   2e778:	mov	r2, #1024	; 0x400
   2e77c:	movt	r1, #6
   2e780:	ldr	r0, [pc, #1552]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e784:	bl	112c0 <__strcat_chk@plt>
   2e788:	b	2c250 <__assert_fail@plt+0x1ae4c>
   2e78c:	movw	r2, #18708	; 0x4914
   2e790:	movt	r2, #6
   2e794:	ldr	r3, [pc, #1532]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e798:	ldm	r2, {r0, r1, r2}
   2e79c:	stmia	r3!, {r0, r1}
   2e7a0:	strb	r2, [r3]
   2e7a4:	b	2c21c <__assert_fail@plt+0x1ae18>
   2e7a8:	movw	r2, #18732	; 0x492c
   2e7ac:	movt	r2, #6
   2e7b0:	ldr	r3, [pc, #1504]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e7b4:	ldm	r2, {r0, r1, r2}
   2e7b8:	stmia	r3!, {r0, r1}
   2e7bc:	strb	r2, [r3]
   2e7c0:	b	2c21c <__assert_fail@plt+0x1ae18>
   2e7c4:	movw	r2, #18720	; 0x4920
   2e7c8:	movt	r2, #6
   2e7cc:	ldr	r3, [pc, #1476]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e7d0:	ldm	r2, {r0, r1, r2}
   2e7d4:	stmia	r3!, {r0, r1}
   2e7d8:	strb	r2, [r3]
   2e7dc:	b	2c21c <__assert_fail@plt+0x1ae18>
   2e7e0:	movw	r1, #18812	; 0x497c
   2e7e4:	mov	r2, #1024	; 0x400
   2e7e8:	movt	r1, #6
   2e7ec:	ldr	r0, [pc, #1444]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e7f0:	bl	112c0 <__strcat_chk@plt>
   2e7f4:	b	2c250 <__assert_fail@plt+0x1ae4c>
   2e7f8:	mov	r2, #5
   2e7fc:	movw	r1, #18852	; 0x49a4
   2e800:	mov	r0, #0
   2e804:	movt	r1, #6
   2e808:	bl	11170 <dcgettext@plt>
   2e80c:	mov	r2, #1024	; 0x400
   2e810:	mov	r1, r0
   2e814:	ldr	r0, [pc, #1404]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e818:	bl	112c0 <__strcat_chk@plt>
   2e81c:	b	2c250 <__assert_fail@plt+0x1ae4c>
   2e820:	movw	r1, #20684	; 0x50cc
   2e824:	mov	r2, #1024	; 0x400
   2e828:	movt	r1, #6
   2e82c:	ldr	r0, [pc, #1380]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e830:	bl	112c0 <__strcat_chk@plt>
   2e834:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e838:	ldr	r9, [pc, #1368]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e83c:	mov	r0, r9
   2e840:	bl	1129c <strlen@plt>
   2e844:	movw	ip, #17968	; 0x4630
   2e848:	movt	ip, #6
   2e84c:	cmp	r8, #0
   2e850:	add	lr, r9, r0
   2e854:	mov	sl, r0
   2e858:	ldm	ip!, {r0, r1, r2, r3}
   2e85c:	add	ip, lr, #15
   2e860:	str	r0, [r9, sl]
   2e864:	str	r1, [lr, #4]
   2e868:	str	r2, [lr, #8]
   2e86c:	str	r3, [lr, #12]
   2e870:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2e874:	rsb	r3, r8, #0
   2e878:	and	r8, r3, r8
   2e87c:	cmp	r8, #4194304	; 0x400000
   2e880:	beq	2f030 <__assert_fail@plt+0x1dc2c>
   2e884:	cmp	r8, #8388608	; 0x800000
   2e888:	bne	2c3dc <__assert_fail@plt+0x1afd8>
   2e88c:	movw	r3, #17984	; 0x4640
   2e890:	movt	r3, #6
   2e894:	ldr	r0, [r3]
   2e898:	ldrh	r3, [r3, #4]
   2e89c:	str	r0, [lr, #15]
   2e8a0:	strh	r3, [ip, #4]
   2e8a4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e8a8:	movw	r1, #17864	; 0x45c8
   2e8ac:	ldr	r0, [pc, #1252]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e8b0:	movt	r1, #6
   2e8b4:	mov	r2, #1024	; 0x400
   2e8b8:	bl	112c0 <__strcat_chk@plt>
   2e8bc:	cmp	r8, #0
   2e8c0:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2e8c4:	mov	r9, #0
   2e8c8:	b	2e8fc <__assert_fail@plt+0x1d4f8>
   2e8cc:	cmp	r3, #16
   2e8d0:	beq	2e928 <__assert_fail@plt+0x1d524>
   2e8d4:	cmp	r3, #4
   2e8d8:	movne	r9, #1
   2e8dc:	bne	2e8f4 <__assert_fail@plt+0x1d4f0>
   2e8e0:	movw	r1, #17840	; 0x45b0
   2e8e4:	ldr	r0, [pc, #1196]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e8e8:	movt	r1, #6
   2e8ec:	mov	r2, #1024	; 0x400
   2e8f0:	bl	112c0 <__strcat_chk@plt>
   2e8f4:	cmp	r8, #0
   2e8f8:	beq	2de24 <__assert_fail@plt+0x1ca20>
   2e8fc:	rsb	r3, r8, #0
   2e900:	and	r3, r3, r8
   2e904:	cmp	r3, #8
   2e908:	bic	r8, r8, r3
   2e90c:	bne	2e8cc <__assert_fail@plt+0x1d4c8>
   2e910:	movw	r1, #17880	; 0x45d8
   2e914:	mov	r2, #1024	; 0x400
   2e918:	movt	r1, #6
   2e91c:	ldr	r0, [pc, #1140]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e920:	bl	112c0 <__strcat_chk@plt>
   2e924:	b	2e8f4 <__assert_fail@plt+0x1d4f0>
   2e928:	movw	r1, #17916	; 0x45fc
   2e92c:	mov	r2, #1024	; 0x400
   2e930:	movt	r1, #6
   2e934:	ldr	r0, [pc, #1116]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e938:	bl	112c0 <__strcat_chk@plt>
   2e93c:	b	2e8f4 <__assert_fail@plt+0x1d4f0>
   2e940:	movw	r3, #19364	; 0x4ba4
   2e944:	movt	r3, #6
   2e948:	ldr	r2, [pc, #1096]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e94c:	ldm	r3, {r0, r1}
   2e950:	lsr	r3, r1, #16
   2e954:	str	r0, [r8, #-1376]	; 0xfffffaa0
   2e958:	strh	r1, [r2, #4]
   2e95c:	strb	r3, [r8, #-1370]	; 0xfffffaa6
   2e960:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e964:	cmp	r3, #93	; 0x5d
   2e968:	beq	2ec04 <__assert_fail@plt+0x1d800>
   2e96c:	movw	r3, #17668	; 0x4504
   2e970:	movt	r3, #6
   2e974:	ldr	ip, [pc, #1052]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e978:	ldm	r3, {r0, r1, r2, r3}
   2e97c:	stmia	ip!, {r0, r1, r2}
   2e980:	strh	r3, [ip]
   2e984:	b	2d298 <__assert_fail@plt+0x1be94>
   2e988:	movw	r1, #18056	; 0x4688
   2e98c:	ldr	r0, [pc, #1028]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e990:	movt	r1, #6
   2e994:	mov	r2, #1024	; 0x400
   2e998:	bl	112c0 <__strcat_chk@plt>
   2e99c:	cmp	r8, #0
   2e9a0:	bne	2e9e0 <__assert_fail@plt+0x1d5dc>
   2e9a4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2e9a8:	cmp	r2, #512	; 0x200
   2e9ac:	beq	2eaa0 <__assert_fail@plt+0x1d69c>
   2e9b0:	bhi	2ea2c <__assert_fail@plt+0x1d628>
   2e9b4:	cmp	r2, #128	; 0x80
   2e9b8:	beq	2ea88 <__assert_fail@plt+0x1d684>
   2e9bc:	cmp	r2, #256	; 0x100
   2e9c0:	bne	2ea80 <__assert_fail@plt+0x1d67c>
   2e9c4:	movw	r1, #18196	; 0x4714
   2e9c8:	ldr	r0, [pc, #968]	; 2ed98 <__assert_fail@plt+0x1d994>
   2e9cc:	movt	r1, #6
   2e9d0:	mov	r2, #1024	; 0x400
   2e9d4:	bl	112c0 <__strcat_chk@plt>
   2e9d8:	cmp	r8, #0
   2e9dc:	beq	2de24 <__assert_fail@plt+0x1ca20>
   2e9e0:	rsb	r2, r8, #0
   2e9e4:	and	r2, r2, r8
   2e9e8:	cmp	r2, #64	; 0x40
   2e9ec:	bic	r8, r8, r2
   2e9f0:	beq	2ea54 <__assert_fail@plt+0x1d650>
   2e9f4:	bhi	2e9a8 <__assert_fail@plt+0x1d5a4>
   2e9f8:	cmp	r2, #8
   2e9fc:	beq	2eaf0 <__assert_fail@plt+0x1d6ec>
   2ea00:	bls	2ead0 <__assert_fail@plt+0x1d6cc>
   2ea04:	cmp	r2, #16
   2ea08:	beq	2eab8 <__assert_fail@plt+0x1d6b4>
   2ea0c:	cmp	r2, #32
   2ea10:	bne	2ea80 <__assert_fail@plt+0x1d67c>
   2ea14:	movw	r1, #18128	; 0x46d0
   2ea18:	mov	r2, #1024	; 0x400
   2ea1c:	movt	r1, #6
   2ea20:	ldr	r0, [pc, #880]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ea24:	bl	112c0 <__strcat_chk@plt>
   2ea28:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2ea2c:	cmp	r2, #1024	; 0x400
   2ea30:	beq	2ea6c <__assert_fail@plt+0x1d668>
   2ea34:	cmp	r2, #2048	; 0x800
   2ea38:	bne	2ea80 <__assert_fail@plt+0x1d67c>
   2ea3c:	movw	r1, #18236	; 0x473c
   2ea40:	mov	r2, #1024	; 0x400
   2ea44:	movt	r1, #6
   2ea48:	ldr	r0, [pc, #840]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ea4c:	bl	112c0 <__strcat_chk@plt>
   2ea50:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2ea54:	movw	r1, #18152	; 0x46e8
   2ea58:	mov	r2, #1024	; 0x400
   2ea5c:	movt	r1, #6
   2ea60:	ldr	r0, [pc, #816]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ea64:	bl	112c0 <__strcat_chk@plt>
   2ea68:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2ea6c:	movw	r1, #18228	; 0x4734
   2ea70:	ldr	r0, [pc, #800]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ea74:	movt	r1, #6
   2ea78:	bl	112c0 <__strcat_chk@plt>
   2ea7c:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2ea80:	mov	r9, #1
   2ea84:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2ea88:	movw	r1, #18180	; 0x4704
   2ea8c:	mov	r2, #1024	; 0x400
   2ea90:	movt	r1, #6
   2ea94:	ldr	r0, [pc, #764]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ea98:	bl	112c0 <__strcat_chk@plt>
   2ea9c:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2eaa0:	movw	r1, #18212	; 0x4724
   2eaa4:	mov	r2, #1024	; 0x400
   2eaa8:	movt	r1, #6
   2eaac:	ldr	r0, [pc, #740]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eab0:	bl	112c0 <__strcat_chk@plt>
   2eab4:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2eab8:	movw	r1, #18108	; 0x46bc
   2eabc:	mov	r2, #1024	; 0x400
   2eac0:	movt	r1, #6
   2eac4:	ldr	r0, [pc, #716]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eac8:	bl	112c0 <__strcat_chk@plt>
   2eacc:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2ead0:	cmp	r2, #4
   2ead4:	bne	2ea80 <__assert_fail@plt+0x1d67c>
   2ead8:	movw	r1, #18068	; 0x4694
   2eadc:	mov	r2, #1024	; 0x400
   2eae0:	movt	r1, #6
   2eae4:	ldr	r0, [pc, #684]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eae8:	bl	112c0 <__strcat_chk@plt>
   2eaec:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2eaf0:	movw	r1, #18092	; 0x46ac
   2eaf4:	mov	r2, #1024	; 0x400
   2eaf8:	movt	r1, #6
   2eafc:	ldr	r0, [pc, #660]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eb00:	bl	112c0 <__strcat_chk@plt>
   2eb04:	b	2e9d8 <__assert_fail@plt+0x1d5d4>
   2eb08:	movw	r2, #18636	; 0x48cc
   2eb0c:	movt	r2, #6
   2eb10:	ldr	r3, [pc, #640]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eb14:	ldm	r2, {r0, r1, r2}
   2eb18:	stmia	r3!, {r0, r1}
   2eb1c:	strb	r2, [r3]
   2eb20:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2eb24:	movw	sl, #16844	; 0x41cc
   2eb28:	movt	sl, #6
   2eb2c:	b	2c990 <__assert_fail@plt+0x1b58c>
   2eb30:	cmp	r3, #0
   2eb34:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2eb38:	cmp	sl, #0
   2eb3c:	beq	2bf80 <__assert_fail@plt+0x1ab7c>
   2eb40:	b	2c990 <__assert_fail@plt+0x1b58c>
   2eb44:	movw	sl, #18656	; 0x48e0
   2eb48:	movt	sl, #6
   2eb4c:	b	2c990 <__assert_fail@plt+0x1b58c>
   2eb50:	movw	r1, #18660	; 0x48e4
   2eb54:	mov	r2, #1024	; 0x400
   2eb58:	movt	r1, #6
   2eb5c:	ldr	r0, [pc, #564]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eb60:	bl	112c0 <__strcat_chk@plt>
   2eb64:	b	2c968 <__assert_fail@plt+0x1b564>
   2eb68:	movw	r2, #19308	; 0x4b6c
   2eb6c:	movt	r2, #6
   2eb70:	ldr	r3, [pc, #544]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eb74:	ldm	r2, {r0, r1, r2}
   2eb78:	lsr	ip, r2, #16
   2eb7c:	stmia	r3!, {r0, r1}
   2eb80:	strh	r2, [r3], #2
   2eb84:	strb	ip, [r3]
   2eb88:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2eb8c:	movw	r2, #19320	; 0x4b78
   2eb90:	movt	r2, #6
   2eb94:	ldr	r3, [pc, #508]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eb98:	ldm	r2, {r0, r1, r2}
   2eb9c:	lsr	ip, r2, #16
   2eba0:	stmia	r3!, {r0, r1}
   2eba4:	strh	r2, [r3], #2
   2eba8:	strb	ip, [r3]
   2ebac:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ebb0:	movw	r2, #19344	; 0x4b90
   2ebb4:	movt	r2, #6
   2ebb8:	ldr	r3, [pc, #472]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ebbc:	ldm	r2, {r0, r1, r2}
   2ebc0:	stmia	r3!, {r0, r1}
   2ebc4:	strb	r2, [r3]
   2ebc8:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ebcc:	movw	r3, #18668	; 0x48ec
   2ebd0:	movt	r3, #6
   2ebd4:	ldr	ip, [pc, #444]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ebd8:	ldm	r3, {r0, r1, r2, r3}
   2ebdc:	stmia	ip!, {r0, r1, r2}
   2ebe0:	strh	r3, [ip]
   2ebe4:	b	2c21c <__assert_fail@plt+0x1ae18>
   2ebe8:	movw	r2, #18696	; 0x4908
   2ebec:	movt	r2, #6
   2ebf0:	ldr	r3, [pc, #416]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ebf4:	ldm	r2, {r0, r1, r2}
   2ebf8:	stmia	r3!, {r0, r1}
   2ebfc:	strb	r2, [r3]
   2ec00:	b	2c21c <__assert_fail@plt+0x1ae18>
   2ec04:	movw	ip, #17648	; 0x44f0
   2ec08:	movt	ip, #6
   2ec0c:	ldr	lr, [pc, #388]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ec10:	ldm	ip!, {r0, r1, r2, r3}
   2ec14:	ldr	ip, [ip]
   2ec18:	stmia	lr!, {r0, r1, r2, r3}
   2ec1c:	str	ip, [lr]
   2ec20:	b	2d298 <__assert_fail@plt+0x1be94>
   2ec24:	movw	r3, #18456	; 0x4818
   2ec28:	movt	r3, #6
   2ec2c:	ldr	r8, [pc, #356]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ec30:	ldm	r3, {r0, r1, r2, r3}
   2ec34:	stm	r8, {r0, r1, r2, r3}
   2ec38:	b	2d010 <__assert_fail@plt+0x1bc0c>
   2ec3c:	movw	r1, #19804	; 0x4d5c
   2ec40:	mov	r2, #1024	; 0x400
   2ec44:	movt	r1, #6
   2ec48:	ldr	r0, [pc, #328]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ec4c:	bl	112c0 <__strcat_chk@plt>
   2ec50:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ec54:	movw	r1, #19640	; 0x4cb8
   2ec58:	mov	r2, #1024	; 0x400
   2ec5c:	movt	r1, #6
   2ec60:	ldr	r0, [pc, #304]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ec64:	bl	112c0 <__strcat_chk@plt>
   2ec68:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2ec6c:	movw	r3, #18628	; 0x48c4
   2ec70:	movt	r3, #6
   2ec74:	ldr	r2, [pc, #284]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ec78:	ldm	r3, {r0, r1}
   2ec7c:	stm	r2, {r0, r1}
   2ec80:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ec84:	movw	r2, #18616	; 0x48b8
   2ec88:	movt	r2, #6
   2ec8c:	ldr	r3, [pc, #260]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ec90:	ldm	r2, {r0, r1, r2}
   2ec94:	stmia	r3!, {r0, r1}
   2ec98:	strb	r2, [r3]
   2ec9c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2eca0:	mov	r2, #5
   2eca4:	movw	r1, #19900	; 0x4dbc
   2eca8:	mov	r0, #0
   2ecac:	movt	r1, #6
   2ecb0:	bl	11170 <dcgettext@plt>
   2ecb4:	mov	r2, #1024	; 0x400
   2ecb8:	mov	r1, r0
   2ecbc:	ldr	r0, [pc, #212]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ecc0:	bl	112c0 <__strcat_chk@plt>
   2ecc4:	b	2d644 <__assert_fail@plt+0x1c240>
   2ecc8:	movw	r1, #19568	; 0x4c70
   2eccc:	mov	r2, #1024	; 0x400
   2ecd0:	movt	r1, #6
   2ecd4:	ldr	r0, [pc, #188]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ecd8:	bl	112c0 <__strcat_chk@plt>
   2ecdc:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2ece0:	movw	r1, #19828	; 0x4d74
   2ece4:	mov	r2, #1024	; 0x400
   2ece8:	movt	r1, #6
   2ecec:	ldr	r0, [pc, #164]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ecf0:	bl	112c0 <__strcat_chk@plt>
   2ecf4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ecf8:	mov	r2, #5
   2ecfc:	movw	r1, #21404	; 0x539c
   2ed00:	mov	r0, #0
   2ed04:	movt	r1, #6
   2ed08:	bl	11170 <dcgettext@plt>
   2ed0c:	mov	r2, #1024	; 0x400
   2ed10:	mov	r1, r0
   2ed14:	ldr	r0, [pc, #124]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ed18:	bl	112c0 <__strcat_chk@plt>
   2ed1c:	b	2c648 <__assert_fail@plt+0x1b244>
   2ed20:	movw	r1, #21012	; 0x5214
   2ed24:	mov	r2, #1024	; 0x400
   2ed28:	movt	r1, #6
   2ed2c:	ldr	r0, [pc, #100]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ed30:	bl	112c0 <__strcat_chk@plt>
   2ed34:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ed38:	movw	r1, #21004	; 0x520c
   2ed3c:	mov	r2, #1024	; 0x400
   2ed40:	movt	r1, #6
   2ed44:	ldr	r0, [pc, #76]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ed48:	bl	112c0 <__strcat_chk@plt>
   2ed4c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ed50:	movw	r1, #20976	; 0x51f0
   2ed54:	mov	r2, #1024	; 0x400
   2ed58:	movt	r1, #6
   2ed5c:	ldr	r0, [pc, #52]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ed60:	bl	112c0 <__strcat_chk@plt>
   2ed64:	b	2d4e4 <__assert_fail@plt+0x1c0e0>
   2ed68:	movw	r1, #19852	; 0x4d8c
   2ed6c:	mov	r2, #1024	; 0x400
   2ed70:	movt	r1, #6
   2ed74:	ldr	r0, [pc, #28]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ed78:	bl	112c0 <__strcat_chk@plt>
   2ed7c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ed80:	movw	r1, #19520	; 0x4c40
   2ed84:	mov	r2, #1024	; 0x400
   2ed88:	movt	r1, #6
   2ed8c:	ldr	r0, [pc, #4]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ed90:	bl	112c0 <__strcat_chk@plt>
   2ed94:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2ed98:	andeq	r5, r9, r0, ror #23
   2ed9c:	movw	r1, #19512	; 0x4c38
   2eda0:	mov	r2, #1024	; 0x400
   2eda4:	movt	r1, #6
   2eda8:	ldr	r0, [pc, #-24]	; 2ed98 <__assert_fail@plt+0x1d994>
   2edac:	bl	112c0 <__strcat_chk@plt>
   2edb0:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2edb4:	add	r0, r8, sl
   2edb8:	rsb	r1, sl, #1024	; 0x400
   2edbc:	movw	r2, #20108	; 0x4e8c
   2edc0:	movt	r2, #6
   2edc4:	bl	112d8 <snprintf@plt>
   2edc8:	add	sl, sl, r0
   2edcc:	b	2dbf4 <__assert_fail@plt+0x1c7f0>
   2edd0:	movw	r1, #19608	; 0x4c98
   2edd4:	mov	r2, #1024	; 0x400
   2edd8:	movt	r1, #6
   2eddc:	ldr	r0, [pc, #-76]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ede0:	bl	112c0 <__strcat_chk@plt>
   2ede4:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2ede8:	movw	r1, #19788	; 0x4d4c
   2edec:	mov	r2, #1024	; 0x400
   2edf0:	movt	r1, #6
   2edf4:	ldr	r0, [pc, #-100]	; 2ed98 <__assert_fail@plt+0x1d994>
   2edf8:	bl	112c0 <__strcat_chk@plt>
   2edfc:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ee00:	movw	r1, #19864	; 0x4d98
   2ee04:	mov	r2, #1024	; 0x400
   2ee08:	movt	r1, #6
   2ee0c:	ldr	r0, [pc, #-124]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ee10:	bl	112c0 <__strcat_chk@plt>
   2ee14:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ee18:	movw	r1, #19876	; 0x4da4
   2ee1c:	mov	r2, #1024	; 0x400
   2ee20:	movt	r1, #6
   2ee24:	ldr	r0, [pc, #-148]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ee28:	bl	112c0 <__strcat_chk@plt>
   2ee2c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ee30:	movw	r1, #19812	; 0x4d64
   2ee34:	mov	r2, #1024	; 0x400
   2ee38:	movt	r1, #6
   2ee3c:	ldr	r0, [pc, #-172]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ee40:	bl	112c0 <__strcat_chk@plt>
   2ee44:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ee48:	movw	r3, #18560	; 0x4880
   2ee4c:	movt	r3, #6
   2ee50:	ldr	r2, [pc, #-192]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ee54:	ldm	r3, {r0, r1}
   2ee58:	stm	r2, {r0, r1}
   2ee5c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ee60:	movw	r1, #19536	; 0x4c50
   2ee64:	mov	r2, #1024	; 0x400
   2ee68:	movt	r1, #6
   2ee6c:	ldr	r0, [pc, #-220]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ee70:	bl	112c0 <__strcat_chk@plt>
   2ee74:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2ee78:	cmp	r3, #10027008	; 0x990000
   2ee7c:	bne	2e5e0 <__assert_fail@plt+0x1d1dc>
   2ee80:	movw	r1, #19584	; 0x4c80
   2ee84:	mov	r2, #1024	; 0x400
   2ee88:	movt	r1, #6
   2ee8c:	ldr	r0, [pc, #-252]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ee90:	bl	112c0 <__strcat_chk@plt>
   2ee94:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2ee98:	movw	r1, #19592	; 0x4c88
   2ee9c:	mov	r2, #1024	; 0x400
   2eea0:	movt	r1, #6
   2eea4:	ldr	r0, [pc, #-276]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eea8:	bl	112c0 <__strcat_chk@plt>
   2eeac:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2eeb0:	movw	r3, #18584	; 0x4898
   2eeb4:	movt	r3, #6
   2eeb8:	ldr	r2, [pc, #-296]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eebc:	ldm	r3, {r0, r1}
   2eec0:	stm	r2, {r0, r1}
   2eec4:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2eec8:	movw	r1, #19528	; 0x4c48
   2eecc:	mov	r2, #1024	; 0x400
   2eed0:	movt	r1, #6
   2eed4:	ldr	r0, [pc, #-324]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eed8:	bl	112c0 <__strcat_chk@plt>
   2eedc:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2eee0:	cmp	r3, #8716288	; 0x850000
   2eee4:	bne	2e5e0 <__assert_fail@plt+0x1d1dc>
   2eee8:	movw	r1, #19552	; 0x4c60
   2eeec:	mov	r2, #1024	; 0x400
   2eef0:	movt	r1, #6
   2eef4:	ldr	r0, [pc, #-356]	; 2ed98 <__assert_fail@plt+0x1d994>
   2eef8:	bl	112c0 <__strcat_chk@plt>
   2eefc:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2ef00:	movw	r1, #19544	; 0x4c58
   2ef04:	mov	r2, #1024	; 0x400
   2ef08:	movt	r1, #6
   2ef0c:	ldr	r0, [pc, #-380]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ef10:	bl	112c0 <__strcat_chk@plt>
   2ef14:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2ef18:	mov	r2, #5
   2ef1c:	movw	r1, #19900	; 0x4dbc
   2ef20:	mov	r0, #0
   2ef24:	movt	r1, #6
   2ef28:	bl	11170 <dcgettext@plt>
   2ef2c:	mov	r2, #1024	; 0x400
   2ef30:	mov	r1, r0
   2ef34:	ldr	r0, [pc, #-420]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ef38:	bl	112c0 <__strcat_chk@plt>
   2ef3c:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ef40:	movw	r2, #18604	; 0x48ac
   2ef44:	movt	r2, #6
   2ef48:	ldr	r3, [pc, #-440]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ef4c:	ldm	r2, {r0, r1, r2}
   2ef50:	stmia	r3!, {r0, r1}
   2ef54:	strb	r2, [r3]
   2ef58:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ef5c:	movw	r3, #18576	; 0x4890
   2ef60:	movt	r3, #6
   2ef64:	ldr	r2, [pc, #-468]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ef68:	ldm	r3, {r0, r1}
   2ef6c:	stm	r2, {r0, r1}
   2ef70:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ef74:	movw	r3, #18544	; 0x4870
   2ef78:	movt	r3, #6
   2ef7c:	ldr	r2, [pc, #-492]	; 2ed98 <__assert_fail@plt+0x1d994>
   2ef80:	ldm	r3, {r0, r1}
   2ef84:	stm	r2, {r0, r1}
   2ef88:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2ef8c:	add	r0, r8, sl
   2ef90:	rsb	r1, sl, #1024	; 0x400
   2ef94:	movw	r2, #20120	; 0x4e98
   2ef98:	movt	r2, #6
   2ef9c:	bl	112d8 <snprintf@plt>
   2efa0:	add	sl, sl, r0
   2efa4:	b	2dbfc <__assert_fail@plt+0x1c7f8>
   2efa8:	movw	r1, #19664	; 0x4cd0
   2efac:	mov	r2, #1024	; 0x400
   2efb0:	movt	r1, #6
   2efb4:	ldr	r0, [pc, #-548]	; 2ed98 <__assert_fail@plt+0x1d994>
   2efb8:	bl	112c0 <__strcat_chk@plt>
   2efbc:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2efc0:	add	r0, r8, sl
   2efc4:	rsb	r1, sl, #1024	; 0x400
   2efc8:	movw	r2, #20240	; 0x4f10
   2efcc:	movt	r2, #6
   2efd0:	bl	112d8 <snprintf@plt>
   2efd4:	add	sl, sl, r0
   2efd8:	b	2dca4 <__assert_fail@plt+0x1c8a0>
   2efdc:	add	r0, r8, sl
   2efe0:	rsb	r1, sl, #1024	; 0x400
   2efe4:	movw	r2, #20224	; 0x4f00
   2efe8:	movt	r2, #6
   2efec:	bl	112d8 <snprintf@plt>
   2eff0:	add	sl, sl, r0
   2eff4:	b	2dca4 <__assert_fail@plt+0x1c8a0>
   2eff8:	cmp	r3, #9175040	; 0x8c0000
   2effc:	bne	2e5e0 <__assert_fail@plt+0x1d1dc>
   2f000:	movw	r1, #19676	; 0x4cdc
   2f004:	mov	r2, #1024	; 0x400
   2f008:	movt	r1, #6
   2f00c:	ldr	r0, [pc, #-636]	; 2ed98 <__assert_fail@plt+0x1d994>
   2f010:	bl	112c0 <__strcat_chk@plt>
   2f014:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2f018:	movw	r1, #19652	; 0x4cc4
   2f01c:	mov	r2, #1024	; 0x400
   2f020:	movt	r1, #6
   2f024:	ldr	r0, [pc, #-660]	; 2ed98 <__assert_fail@plt+0x1d994>
   2f028:	bl	112c0 <__strcat_chk@plt>
   2f02c:	b	2cbec <__assert_fail@plt+0x1b7e8>
   2f030:	movw	r3, #17992	; 0x4648
   2f034:	movt	r3, #6
   2f038:	ldr	r0, [r3]
   2f03c:	ldrh	r3, [r3, #4]
   2f040:	str	r0, [lr, #15]
   2f044:	strh	r3, [ip, #4]
   2f048:	b	2bf80 <__assert_fail@plt+0x1ab7c>
   2f04c:	add	r0, r9, sl
   2f050:	rsb	r1, sl, #1024	; 0x400
   2f054:	movw	r2, #20064	; 0x4e60
   2f058:	movt	r2, #6
   2f05c:	bl	112d8 <snprintf@plt>
   2f060:	add	sl, sl, r0
   2f064:	b	2e62c <__assert_fail@plt+0x1d228>
   2f068:	add	r0, r8, sl
   2f06c:	rsb	r1, sl, #1024	; 0x400
   2f070:	movw	r2, #20084	; 0x4e74
   2f074:	movt	r2, #6
   2f078:	bl	112d8 <snprintf@plt>
   2f07c:	add	sl, sl, r0
   2f080:	b	2e63c <__assert_fail@plt+0x1d238>
   2f084:	add	r0, r8, sl
   2f088:	rsb	r1, sl, #1024	; 0x400
   2f08c:	movw	r2, #20076	; 0x4e6c
   2f090:	movt	r2, #6
   2f094:	bl	112d8 <snprintf@plt>
   2f098:	add	sl, sl, r0
   2f09c:	b	2e634 <__assert_fail@plt+0x1d230>
   2f0a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f0a4:	sub	sp, sp, #116	; 0x74
   2f0a8:	movw	r9, #16680	; 0x4128
   2f0ac:	movt	r9, #9
   2f0b0:	ldr	r7, [sp, #160]	; 0xa0
   2f0b4:	movw	sl, #16712	; 0x4148
   2f0b8:	ldr	r3, [r9]
   2f0bc:	movt	sl, #9
   2f0c0:	ldr	ip, [sp, #164]	; 0xa4
   2f0c4:	cmp	r7, #0
   2f0c8:	mov	r5, r0
   2f0cc:	mov	fp, r1
   2f0d0:	str	r3, [sp, #108]	; 0x6c
   2f0d4:	movne	r3, #0
   2f0d8:	strne	r3, [r7]
   2f0dc:	strne	r3, [ip]
   2f0e0:	ldrh	r3, [sl, #48]	; 0x30
   2f0e4:	str	r2, [sp, #28]
   2f0e8:	cmp	r3, #1
   2f0ec:	ldr	r4, [sp, #152]	; 0x98
   2f0f0:	str	ip, [sp, #24]
   2f0f4:	beq	2f110 <__assert_fail@plt+0x1dd0c>
   2f0f8:	ldr	r2, [sp, #108]	; 0x6c
   2f0fc:	ldr	r3, [r9]
   2f100:	cmp	r2, r3
   2f104:	bne	3055c <__assert_fail@plt+0x1f158>
   2f108:	add	sp, sp, #116	; 0x74
   2f10c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f110:	ldr	ip, [sl, #68]	; 0x44
   2f114:	ldr	r6, [sl, #220]	; 0xdc
   2f118:	add	r0, ip, ip, lsl #3
   2f11c:	add	r0, r6, r0, lsl #3
   2f120:	cmp	r6, r0
   2f124:	bcs	2f0f8 <__assert_fail@plt+0x1dcf4>
   2f128:	mov	r8, r6
   2f12c:	str	r4, [sp, #32]
   2f130:	b	2f140 <__assert_fail@plt+0x1dd3c>
   2f134:	add	r8, r8, #72	; 0x48
   2f138:	cmp	r8, r0
   2f13c:	bcs	2f0f8 <__assert_fail@plt+0x1dcf4>
   2f140:	ldr	r1, [r8, #4]
   2f144:	cmp	r1, #9
   2f148:	cmpne	r1, #4
   2f14c:	bne	2f134 <__assert_fail@plt+0x1dd30>
   2f150:	ldr	r3, [r8, #44]	; 0x2c
   2f154:	cmp	r3, ip
   2f158:	bcs	2f134 <__assert_fail@plt+0x1dd30>
   2f15c:	add	r3, r3, r3, lsl #3
   2f160:	add	r3, r6, r3, lsl #3
   2f164:	cmp	fp, r3
   2f168:	bne	2f134 <__assert_fail@plt+0x1dd30>
   2f16c:	ldrd	r2, [r8, #32]
   2f170:	orrs	r4, r2, r3
   2f174:	beq	2f134 <__assert_fail@plt+0x1dd30>
   2f178:	ldr	r4, [r8, #40]	; 0x28
   2f17c:	cmp	r4, ip
   2f180:	bcs	2f134 <__assert_fail@plt+0x1dd30>
   2f184:	subs	r0, r1, #4
   2f188:	add	r3, sp, #96	; 0x60
   2f18c:	rsbs	r1, r0, #0
   2f190:	ldr	r4, [sp, #32]
   2f194:	adcs	r1, r1, r0
   2f198:	mov	r0, r5
   2f19c:	cmp	r1, #0
   2f1a0:	str	r1, [sp, #36]	; 0x24
   2f1a4:	ldr	r1, [r8, #24]
   2f1a8:	str	r3, [sp]
   2f1ac:	add	r3, sp, #100	; 0x64
   2f1b0:	bne	2f310 <__assert_fail@plt+0x1df0c>
   2f1b4:	bl	152d8 <__assert_fail@plt+0x3ed4>
   2f1b8:	cmp	r0, #0
   2f1bc:	beq	2f0f8 <__assert_fail@plt+0x1dcf4>
   2f1c0:	ldrh	r0, [sl, #50]	; 0x32
   2f1c4:	ldr	r3, [r8, #40]	; 0x28
   2f1c8:	ldr	r1, [sl, #460]	; 0x1cc
   2f1cc:	cmp	r0, #42	; 0x2a
   2f1d0:	ldr	ip, [sp, #36]	; 0x24
   2f1d4:	add	r3, r3, r3, lsl #3
   2f1d8:	moveq	ip, #0
   2f1dc:	ldr	r2, [sl, #220]	; 0xdc
   2f1e0:	cmp	r1, #0
   2f1e4:	str	ip, [sp, #36]	; 0x24
   2f1e8:	add	r1, r2, r3, lsl #3
   2f1ec:	beq	2faf0 <__assert_fail@plt+0x1e6ec>
   2f1f0:	mov	r0, r5
   2f1f4:	add	r2, sp, #104	; 0x68
   2f1f8:	bl	155f4 <__assert_fail@plt+0x41f0>
   2f1fc:	str	r0, [sp, #40]	; 0x28
   2f200:	ldr	r6, [sp, #96]	; 0x60
   2f204:	ldr	r2, [sp, #100]	; 0x64
   2f208:	add	r3, r6, r6, lsl #1
   2f20c:	add	r3, r2, r3, lsl #3
   2f210:	cmp	r2, r3
   2f214:	bcs	2f3fc <__assert_fail@plt+0x1dff8>
   2f218:	ldr	r5, [sp, #28]
   2f21c:	movw	ip, #26496	; 0x6780
   2f220:	str	r7, [sp, #68]	; 0x44
   2f224:	movt	ip, #9
   2f228:	add	r4, r5, r4
   2f22c:	add	r5, r2, #24
   2f230:	str	r9, [sp, #72]	; 0x48
   2f234:	mov	r9, r2
   2f238:	mov	r7, r5
   2f23c:	str	r4, [sp, #56]	; 0x38
   2f240:	str	ip, [sp, #44]	; 0x2c
   2f244:	movw	r4, #26492	; 0x677c
   2f248:	movw	ip, #24896	; 0x6140
   2f24c:	movt	r4, #9
   2f250:	movt	ip, #9
   2f254:	str	r4, [sp, #60]	; 0x3c
   2f258:	str	ip, [sp, #32]
   2f25c:	str	r8, [sp, #76]	; 0x4c
   2f260:	str	fp, [sp, #64]	; 0x40
   2f264:	ldr	r3, [sl, #460]	; 0x1cc
   2f268:	mov	r8, r7
   2f26c:	ldr	r0, [r7, #-16]
   2f270:	cmp	r3, #0
   2f274:	ldr	fp, [r7, #-12]
   2f278:	beq	2f6d0 <__assert_fail@plt+0x1e2cc>
   2f27c:	lsr	r5, r0, #8
   2f280:	ldr	r2, [sp, #104]	; 0x68
   2f284:	uxtb	r4, r0
   2f288:	orr	r5, r5, fp, lsl #24
   2f28c:	ldrh	r3, [sl, #50]	; 0x32
   2f290:	cmp	r3, #197	; 0xc5
   2f294:	beq	2f8ac <__assert_fail@plt+0x1e4a8>
   2f298:	bhi	2f6e8 <__assert_fail@plt+0x1e2e4>
   2f29c:	cmp	r3, #89	; 0x59
   2f2a0:	beq	2f700 <__assert_fail@plt+0x1e2fc>
   2f2a4:	cmp	r3, #105	; 0x69
   2f2a8:	bne	2f484 <__assert_fail@plt+0x1e080>
   2f2ac:	sub	r1, r4, #1
   2f2b0:	cmp	r1, #20
   2f2b4:	ldrls	pc, [pc, r1, lsl #2]
   2f2b8:	b	2f6a0 <__assert_fail@plt+0x1e29c>
   2f2bc:	andeq	pc, r2, r8, asr #6
   2f2c0:	andeq	pc, r2, ip, ror r4	; <UNPREDICTABLE>
   2f2c4:	andeq	pc, r2, r8, asr #6
   2f2c8:	andeq	pc, r2, r0, lsr #13
   2f2cc:	andeq	pc, r2, r0, lsr #6
   2f2d0:	andeq	pc, r2, r0, lsr #13
   2f2d4:	andeq	pc, r2, r0, lsr #13
   2f2d8:	andeq	pc, r2, r0, lsr #13
   2f2dc:	andeq	pc, r2, r0, lsr #6
   2f2e0:	andeq	pc, r2, r8, ror #12
   2f2e4:	andeq	pc, r2, r0, lsr #13
   2f2e8:	andeq	pc, r2, r0, lsr #13
   2f2ec:	andeq	pc, r2, r0, lsr #13
   2f2f0:	andeq	pc, r2, r0, lsr #13
   2f2f4:	andeq	pc, r2, ip, ror r4	; <UNPREDICTABLE>
   2f2f8:	andeq	pc, r2, r0, lsr #13
   2f2fc:	andeq	pc, r2, r0, lsr #13
   2f300:	andeq	pc, r2, r0, lsr #13
   2f304:	andeq	pc, r2, r0, lsr #13
   2f308:	andeq	pc, r2, r0, lsr #13
   2f30c:	andeq	pc, r2, r4, asr r4	; <UNPREDICTABLE>
   2f310:	bl	166b0 <__assert_fail@plt+0x52ac>
   2f314:	cmp	r0, #0
   2f318:	bne	2f1c0 <__assert_fail@plt+0x1ddbc>
   2f31c:	b	2f0f8 <__assert_fail@plt+0x1dcf4>
   2f320:	cmp	r3, #105	; 0x69
   2f324:	bne	2f348 <__assert_fail@plt+0x1df44>
   2f328:	ldrb	r0, [sl, #44]	; 0x2c
   2f32c:	movw	r1, #16712	; 0x4148
   2f330:	movt	r1, #9
   2f334:	cmp	r0, #45	; 0x2d
   2f338:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2f33c:	ldrb	r1, [r1, #7]
   2f340:	cmp	r1, #0
   2f344:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2f348:	ldr	ip, [sp, #32]
   2f34c:	ldr	r1, [ip, #-352]	; 0xfffffea0
   2f350:	cmp	r1, #0
   2f354:	beq	2f484 <__assert_fail@plt+0x1e080>
   2f358:	cmp	r4, #1
   2f35c:	movne	ip, #2
   2f360:	moveq	ip, #4
   2f364:	cmp	r5, r2
   2f368:	bcs	2fc90 <__assert_fail@plt+0x1e88c>
   2f36c:	ldrd	r2, [r7, #-8]
   2f370:	lsl	r5, r5, #5
   2f374:	ldr	r0, [r7, #-24]	; 0xffffffe8
   2f378:	strd	r2, [sp, #48]	; 0x30
   2f37c:	cmp	r0, #0
   2f380:	ldr	r3, [sp, #40]	; 0x28
   2f384:	ldrd	r2, [r3, r5]
   2f388:	ldrd	r4, [r1]
   2f38c:	strd	r2, [sp, #80]	; 0x50
   2f390:	strd	r4, [sp, #88]	; 0x58
   2f394:	blt	2f3b0 <__assert_fail@plt+0x1dfac>
   2f398:	ldr	r5, [sp, #28]
   2f39c:	add	r3, ip, r0
   2f3a0:	ldr	r4, [sp, #56]	; 0x38
   2f3a4:	add	r3, r5, r3
   2f3a8:	cmp	r4, r3
   2f3ac:	bhi	2fe70 <__assert_fail@plt+0x1ea6c>
   2f3b0:	movw	r1, #21916	; 0x559c
   2f3b4:	mov	r0, #0
   2f3b8:	movt	r1, #6
   2f3bc:	mov	r2, #5
   2f3c0:	bl	11170 <dcgettext@plt>
   2f3c4:	ldr	r1, [r7, #-24]	; 0xffffffe8
   2f3c8:	bl	4b2b0 <error@@Base>
   2f3cc:	ldr	r4, [sp, #32]
   2f3d0:	mov	r3, #0
   2f3d4:	ldr	r9, [sp, #100]	; 0x64
   2f3d8:	ldr	r6, [sp, #96]	; 0x60
   2f3dc:	str	r3, [r4, #-352]	; 0xfffffea0
   2f3e0:	add	r3, r6, r6, lsl #1
   2f3e4:	add	r7, r7, #24
   2f3e8:	add	r3, r9, r3, lsl #3
   2f3ec:	cmp	r8, r3
   2f3f0:	bcc	2f264 <__assert_fail@plt+0x1de60>
   2f3f4:	ldr	r7, [sp, #68]	; 0x44
   2f3f8:	ldr	r9, [sp, #72]	; 0x48
   2f3fc:	ldr	r0, [sp, #40]	; 0x28
   2f400:	bl	1111c <free@plt>
   2f404:	ldrh	r3, [sl, #50]	; 0x32
   2f408:	cmp	r3, #197	; 0xc5
   2f40c:	beq	2fc64 <__assert_fail@plt+0x1e860>
   2f410:	bhi	2fbe8 <__assert_fail@plt+0x1e7e4>
   2f414:	cmp	r3, #89	; 0x59
   2f418:	beq	2fc00 <__assert_fail@plt+0x1e7fc>
   2f41c:	cmp	r3, #105	; 0x69
   2f420:	bne	2f434 <__assert_fail@plt+0x1e030>
   2f424:	movw	r3, #24896	; 0x6140
   2f428:	movt	r3, #9
   2f42c:	mov	r2, #0
   2f430:	str	r2, [r3, #-352]	; 0xfffffea0
   2f434:	cmp	r7, #0
   2f438:	beq	3009c <__assert_fail@plt+0x1ec98>
   2f43c:	ldr	r2, [sp, #100]	; 0x64
   2f440:	ldr	r3, [sp, #96]	; 0x60
   2f444:	ldr	ip, [sp, #24]
   2f448:	str	r2, [r7]
   2f44c:	str	r3, [ip]
   2f450:	b	2f0f8 <__assert_fail@plt+0x1dcf4>
   2f454:	cmp	r5, r2
   2f458:	movwcs	r1, #21808	; 0x5530
   2f45c:	movcs	r0, #0
   2f460:	movtcs	r1, #6
   2f464:	bcs	2fb10 <__assert_fail@plt+0x1e70c>
   2f468:	ldr	ip, [sp, #32]
   2f46c:	ldr	r4, [sp, #40]	; 0x28
   2f470:	add	r5, r4, r5, lsl #5
   2f474:	str	r5, [ip, #-352]	; 0xfffffea0
   2f478:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2f47c:	cmp	r3, #105	; 0x69
   2f480:	beq	2ff70 <__assert_fail@plt+0x1eb6c>
   2f484:	cmp	r3, #94	; 0x5e
   2f488:	beq	2f98c <__assert_fail@plt+0x1e588>
   2f48c:	bls	2facc <__assert_fail@plt+0x1e6c8>
   2f490:	cmp	r3, #191	; 0xbf
   2f494:	beq	2fa28 <__assert_fail@plt+0x1e624>
   2f498:	bhi	2f960 <__assert_fail@plt+0x1e55c>
   2f49c:	cmp	r3, #174	; 0xae
   2f4a0:	beq	2f88c <__assert_fail@plt+0x1e488>
   2f4a4:	bhi	2fa34 <__assert_fail@plt+0x1e630>
   2f4a8:	cmp	r3, #116	; 0x74
   2f4ac:	beq	2fa28 <__assert_fail@plt+0x1e624>
   2f4b0:	bls	30430 <__assert_fail@plt+0x1f02c>
   2f4b4:	cmp	r3, #140	; 0x8c
   2f4b8:	beq	2fa28 <__assert_fail@plt+0x1e624>
   2f4bc:	cmp	r3, #167	; 0xa7
   2f4c0:	bne	2f99c <__assert_fail@plt+0x1e598>
   2f4c4:	sub	r3, r4, #204	; 0xcc
   2f4c8:	cmp	r4, #0
   2f4cc:	cmpne	r3, #3
   2f4d0:	bls	2f8a0 <__assert_fail@plt+0x1e49c>
   2f4d4:	subs	ip, r4, #20
   2f4d8:	rsbs	r3, ip, #0
   2f4dc:	adcs	r3, r3, ip
   2f4e0:	cmp	r3, #0
   2f4e4:	bne	2f918 <__assert_fail@plt+0x1e514>
   2f4e8:	mov	r0, r4
   2f4ec:	bl	12fc4 <__assert_fail@plt+0x1bc0>
   2f4f0:	cmp	r0, #0
   2f4f4:	bne	2f918 <__assert_fail@plt+0x1e514>
   2f4f8:	ldrh	r5, [sl, #50]	; 0x32
   2f4fc:	cmp	r5, #50	; 0x32
   2f500:	beq	3031c <__assert_fail@plt+0x1ef18>
   2f504:	bhi	2fd80 <__assert_fail@plt+0x1e97c>
   2f508:	cmp	r5, #18
   2f50c:	beq	30244 <__assert_fail@plt+0x1ee40>
   2f510:	bhi	30074 <__assert_fail@plt+0x1ec70>
   2f514:	cmp	r5, #8
   2f518:	beq	3032c <__assert_fail@plt+0x1ef28>
   2f51c:	cmp	r5, #15
   2f520:	bne	2fcb0 <__assert_fail@plt+0x1e8ac>
   2f524:	subs	fp, r4, #80	; 0x50
   2f528:	rsbs	r3, fp, #0
   2f52c:	adcs	r3, r3, fp
   2f530:	cmp	r3, #0
   2f534:	beq	2fcb8 <__assert_fail@plt+0x1e8b4>
   2f538:	mov	r9, #8
   2f53c:	ldr	ip, [sp, #28]
   2f540:	ldr	r5, [r7, #-24]	; 0xffffffe8
   2f544:	add	r5, ip, r5
   2f548:	ldr	ip, [sp, #56]	; 0x38
   2f54c:	add	r3, r5, r9
   2f550:	cmp	ip, r3
   2f554:	bcc	2f920 <__assert_fail@plt+0x1e51c>
   2f558:	ldr	ip, [sp, #28]
   2f55c:	cmp	ip, r5
   2f560:	bhi	2f920 <__assert_fail@plt+0x1e51c>
   2f564:	ldr	r3, [sl, #460]	; 0x1cc
   2f568:	ldr	r6, [r7, #-16]
   2f56c:	cmp	r3, #0
   2f570:	ldr	r3, [r7, #-12]
   2f574:	lsrne	r6, r6, #8
   2f578:	orrne	r6, r6, r3, lsl #24
   2f57c:	moveq	r6, r3
   2f580:	ldr	r3, [sp, #104]	; 0x68
   2f584:	cmp	r6, r3
   2f588:	bcs	2fddc <__assert_fail@plt+0x1e9d8>
   2f58c:	ldr	ip, [sp, #40]	; 0x28
   2f590:	add	r6, ip, r6, lsl #5
   2f594:	cmp	ip, r6
   2f598:	beq	2f5b4 <__assert_fail@plt+0x1e1b0>
   2f59c:	ldrb	r3, [r6, #20]
   2f5a0:	and	r3, r3, #15
   2f5a4:	cmp	r3, #5
   2f5a8:	beq	2f5b4 <__assert_fail@plt+0x1e1b0>
   2f5ac:	cmp	r3, #3
   2f5b0:	bgt	30000 <__assert_fail@plt+0x1ebfc>
   2f5b4:	ldr	ip, [sp, #36]	; 0x24
   2f5b8:	cmp	ip, #0
   2f5bc:	beq	2fe18 <__assert_fail@plt+0x1ea14>
   2f5c0:	ldrh	r3, [sl, #50]	; 0x32
   2f5c4:	ldrd	r0, [r7, #-8]
   2f5c8:	cmp	r3, #94	; 0x5e
   2f5cc:	strd	r0, [sp, #48]	; 0x30
   2f5d0:	beq	301d4 <__assert_fail@plt+0x1edd0>
   2f5d4:	cmp	r3, #91	; 0x5b
   2f5d8:	cmpne	r3, #99	; 0x63
   2f5dc:	bne	2f5e8 <__assert_fail@plt+0x1e1e4>
   2f5e0:	cmp	r4, #1
   2f5e4:	beq	2fe24 <__assert_fail@plt+0x1ea20>
   2f5e8:	movw	r2, #30326	; 0x7676
   2f5ec:	cmp	r3, #86	; 0x56
   2f5f0:	cmpne	r3, r2
   2f5f4:	bne	2f600 <__assert_fail@plt+0x1e1fc>
   2f5f8:	cmp	r4, #12
   2f5fc:	beq	2fe24 <__assert_fail@plt+0x1ea20>
   2f600:	mov	r0, r4
   2f604:	bl	12fc4 <__assert_fail@plt+0x1bc0>
   2f608:	cmp	r0, #0
   2f60c:	bne	2f620 <__assert_fail@plt+0x1e21c>
   2f610:	mov	r0, r4
   2f614:	bl	131d0 <__assert_fail@plt+0x1dcc>
   2f618:	cmp	r0, #0
   2f61c:	beq	30280 <__assert_fail@plt+0x1ee7c>
   2f620:	ldrh	r3, [sl, #50]	; 0x32
   2f624:	cmp	r3, #15
   2f628:	beq	300a8 <__assert_fail@plt+0x1eca4>
   2f62c:	ldrd	r2, [r6]
   2f630:	mov	r0, r5
   2f634:	ldrd	r4, [r7, #-24]	; 0xffffffe8
   2f638:	str	r9, [sp]
   2f63c:	subs	r2, r2, r4
   2f640:	sbc	r3, r3, r5
   2f644:	ldr	r4, [sp, #44]	; 0x2c
   2f648:	ldr	r1, [r4]
   2f64c:	ldrd	r4, [sp, #48]	; 0x30
   2f650:	adds	r2, r2, r4
   2f654:	adc	r3, r3, r5
   2f658:	blx	r1
   2f65c:	ldr	r9, [sp, #100]	; 0x64
   2f660:	ldr	r6, [sp, #96]	; 0x60
   2f664:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2f668:	cmp	r3, #105	; 0x69
   2f66c:	bne	2f454 <__assert_fail@plt+0x1e050>
   2f670:	ldrb	r1, [sl, #44]	; 0x2c
   2f674:	movw	r3, #16712	; 0x4148
   2f678:	movt	r3, #9
   2f67c:	cmp	r1, #45	; 0x2d
   2f680:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2f684:	ldrb	r3, [r3, #7]
   2f688:	cmp	r3, #0
   2f68c:	bne	2f454 <__assert_fail@plt+0x1e050>
   2f690:	subs	ip, r4, #1
   2f694:	rsbs	r3, ip, #0
   2f698:	adcs	r3, r3, ip
   2f69c:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   2f6a0:	ldr	r5, [sp, #32]
   2f6a4:	ldr	r2, [r5, #-352]	; 0xfffffea0
   2f6a8:	cmp	r2, #0
   2f6ac:	beq	2f484 <__assert_fail@plt+0x1e080>
   2f6b0:	mov	r2, #5
   2f6b4:	movw	r1, #21972	; 0x55d4
   2f6b8:	mov	r0, #0
   2f6bc:	movt	r1, #6
   2f6c0:	bl	11170 <dcgettext@plt>
   2f6c4:	bl	4b2b0 <error@@Base>
   2f6c8:	ldrh	r3, [sl, #50]	; 0x32
   2f6cc:	b	2f484 <__assert_fail@plt+0x1e080>
   2f6d0:	mov	r1, fp
   2f6d4:	mov	r5, fp
   2f6d8:	bl	18614 <__assert_fail@plt+0x7210>
   2f6dc:	ldr	r2, [sp, #104]	; 0x68
   2f6e0:	mov	r4, r0
   2f6e4:	b	2f28c <__assert_fail@plt+0x1de88>
   2f6e8:	movw	r1, #4185	; 0x1059
   2f6ec:	cmp	r3, r1
   2f6f0:	beq	2f2ac <__assert_fail@plt+0x1dea8>
   2f6f4:	movw	r1, #48879	; 0xbeef
   2f6f8:	cmp	r3, r1
   2f6fc:	bne	2f484 <__assert_fail@plt+0x1e080>
   2f700:	sub	r1, r4, #1
   2f704:	cmp	r1, #33	; 0x21
   2f708:	ldrls	pc, [pc, r1, lsl #2]
   2f70c:	b	2f85c <__assert_fail@plt+0x1e458>
   2f710:	andeq	pc, r2, r0, asr #15
   2f714:	andeq	pc, r2, r0, asr #15
   2f718:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f71c:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f720:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f724:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f728:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f72c:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f730:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f734:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f738:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f73c:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f740:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f744:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f748:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f74c:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f750:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f754:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f758:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f75c:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f760:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f764:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f768:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f76c:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f770:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f774:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f778:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f77c:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f780:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f784:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f788:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f78c:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   2f790:	muleq	r2, r8, r7
   2f794:	andeq	pc, r2, r0, ror #7
   2f798:	cmp	r5, r2
   2f79c:	movwcs	r1, #22028	; 0x560c
   2f7a0:	movcs	r0, #0
   2f7a4:	movtcs	r1, #6
   2f7a8:	bcs	2fb10 <__assert_fail@plt+0x1e70c>
   2f7ac:	ldr	r4, [sp, #32]
   2f7b0:	ldr	ip, [sp, #40]	; 0x28
   2f7b4:	add	r5, ip, r5, lsl #5
   2f7b8:	str	r5, [r4, #-348]	; 0xfffffea4
   2f7bc:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2f7c0:	ldr	ip, [sp, #32]
   2f7c4:	ldr	r1, [ip, #-348]	; 0xfffffea4
   2f7c8:	cmp	r1, #0
   2f7cc:	beq	2f484 <__assert_fail@plt+0x1e080>
   2f7d0:	cmp	r4, #1
   2f7d4:	movne	ip, #2
   2f7d8:	moveq	ip, #4
   2f7dc:	cmp	r5, r2
   2f7e0:	bcs	2fdbc <__assert_fail@plt+0x1e9b8>
   2f7e4:	ldrd	r2, [r7, #-8]
   2f7e8:	lsl	r5, r5, #5
   2f7ec:	ldr	r0, [r7, #-24]	; 0xffffffe8
   2f7f0:	strd	r2, [sp, #48]	; 0x30
   2f7f4:	cmp	r0, #0
   2f7f8:	ldr	r3, [sp, #40]	; 0x28
   2f7fc:	ldrd	r2, [r3, r5]
   2f800:	ldrd	r4, [r1]
   2f804:	strd	r2, [sp, #80]	; 0x50
   2f808:	strd	r4, [sp, #88]	; 0x58
   2f80c:	blt	2f828 <__assert_fail@plt+0x1e424>
   2f810:	ldr	r5, [sp, #28]
   2f814:	add	r3, ip, r0
   2f818:	ldr	r4, [sp, #56]	; 0x38
   2f81c:	add	r3, r5, r3
   2f820:	cmp	r4, r3
   2f824:	bhi	2ffc8 <__assert_fail@plt+0x1ebc4>
   2f828:	movw	r1, #22140	; 0x567c
   2f82c:	mov	r0, #0
   2f830:	movt	r1, #6
   2f834:	mov	r2, #5
   2f838:	bl	11170 <dcgettext@plt>
   2f83c:	ldr	r1, [r7, #-24]	; 0xffffffe8
   2f840:	bl	4b2b0 <error@@Base>
   2f844:	ldr	r4, [sp, #32]
   2f848:	mov	r3, #0
   2f84c:	ldr	r9, [sp, #100]	; 0x64
   2f850:	ldr	r6, [sp, #96]	; 0x60
   2f854:	str	r3, [r4, #-348]	; 0xfffffea4
   2f858:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2f85c:	ldr	r5, [sp, #32]
   2f860:	ldr	r2, [r5, #-348]	; 0xfffffea4
   2f864:	cmp	r2, #0
   2f868:	beq	2f484 <__assert_fail@plt+0x1e080>
   2f86c:	mov	r2, #5
   2f870:	movw	r1, #22196	; 0x56b4
   2f874:	mov	r0, #0
   2f878:	movt	r1, #6
   2f87c:	bl	11170 <dcgettext@plt>
   2f880:	bl	4b2b0 <error@@Base>
   2f884:	ldrh	r3, [sl, #50]	; 0x32
   2f888:	b	2f484 <__assert_fail@plt+0x1e080>
   2f88c:	subs	r1, r4, #3
   2f890:	rsbs	r2, r1, #0
   2f894:	adcs	r2, r2, r1
   2f898:	cmp	r2, #0
   2f89c:	beq	2f99c <__assert_fail@plt+0x1e598>
   2f8a0:	ldr	r9, [sp, #100]	; 0x64
   2f8a4:	ldr	r6, [sp, #96]	; 0x60
   2f8a8:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2f8ac:	cmp	r4, #67	; 0x43
   2f8b0:	beq	2fb78 <__assert_fail@plt+0x1e774>
   2f8b4:	bls	2fa5c <__assert_fail@plt+0x1e658>
   2f8b8:	cmp	r4, #128	; 0x80
   2f8bc:	beq	2fb2c <__assert_fail@plt+0x1e728>
   2f8c0:	cmp	r4, #131	; 0x83
   2f8c4:	bne	2f690 <__assert_fail@plt+0x1e28c>
   2f8c8:	ldr	r4, [sp, #32]
   2f8cc:	movw	ip, #65200	; 0xfeb0
   2f8d0:	movt	ip, #65535	; 0xffff
   2f8d4:	movw	lr, #65192	; 0xfea8
   2f8d8:	movt	lr, #65535	; 0xffff
   2f8dc:	movw	fp, #65208	; 0xfeb8
   2f8e0:	ldrd	r0, [r4, ip]
   2f8e4:	movt	fp, #65535	; 0xffff
   2f8e8:	ldrd	r2, [r4, lr]
   2f8ec:	strd	r0, [sp, #8]
   2f8f0:	mov	r0, #0
   2f8f4:	mov	r1, #0
   2f8f8:	strd	r0, [r4, lr]
   2f8fc:	ldrd	r4, [sp, #8]
   2f900:	subs	r2, r2, r4
   2f904:	sbc	r3, r3, r5
   2f908:	ldr	r5, [sp, #32]
   2f90c:	strd	r0, [r5, ip]
   2f910:	strd	r2, [r5, fp]
   2f914:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2f918:	mov	r9, #4
   2f91c:	b	2f53c <__assert_fail@plt+0x1e138>
   2f920:	mov	r2, #5
   2f924:	movw	r1, #22508	; 0x57ec
   2f928:	mov	r0, #0
   2f92c:	movt	r1, #6
   2f930:	bl	11170 <dcgettext@plt>
   2f934:	ldr	r4, [r7, #-24]	; 0xffffffe8
   2f938:	mov	r5, r0
   2f93c:	ldr	r0, [sp, #64]	; 0x40
   2f940:	bl	132f8 <__assert_fail@plt+0x1ef4>
   2f944:	mov	r1, r4
   2f948:	mov	r2, r0
   2f94c:	mov	r0, r5
   2f950:	bl	4b9ec <warn@@Base>
   2f954:	ldr	r9, [sp, #100]	; 0x64
   2f958:	ldr	r6, [sp, #96]	; 0x60
   2f95c:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2f960:	movw	r2, #4643	; 0x1223
   2f964:	cmp	r3, r2
   2f968:	beq	2fa28 <__assert_fail@plt+0x1e624>
   2f96c:	bls	2fbd0 <__assert_fail@plt+0x1e7cc>
   2f970:	movw	r2, #41872	; 0xa390
   2f974:	cmp	r3, r2
   2f978:	beq	2fa28 <__assert_fail@plt+0x1e624>
   2f97c:	bls	301e0 <__assert_fail@plt+0x1eddc>
   2f980:	movw	r2, #43975	; 0xabc7
   2f984:	cmp	r3, r2
   2f988:	bne	30594 <__assert_fail@plt+0x1f190>
   2f98c:	sub	r2, r4, #17
   2f990:	cmp	r4, #0
   2f994:	cmpne	r2, #2
   2f998:	bls	2f8a0 <__assert_fail@plt+0x1e49c>
   2f99c:	cmp	r3, #106	; 0x6a
   2f9a0:	beq	3043c <__assert_fail@plt+0x1f038>
   2f9a4:	bhi	2fc14 <__assert_fail@plt+0x1e810>
   2f9a8:	cmp	r3, #48	; 0x30
   2f9ac:	bhi	2ff2c <__assert_fail@plt+0x1eb28>
   2f9b0:	cmp	r3, #46	; 0x2e
   2f9b4:	bcs	2f690 <__assert_fail@plt+0x1e28c>
   2f9b8:	cmp	r3, #19
   2f9bc:	beq	2f9ec <__assert_fail@plt+0x1e5e8>
   2f9c0:	bls	300e4 <__assert_fail@plt+0x1ece0>
   2f9c4:	cmp	r3, #36	; 0x24
   2f9c8:	beq	30560 <__assert_fail@plt+0x1f15c>
   2f9cc:	bls	302c0 <__assert_fail@plt+0x1eebc>
   2f9d0:	cmp	r3, #42	; 0x2a
   2f9d4:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2f9d8:	bhi	30500 <__assert_fail@plt+0x1f0fc>
   2f9dc:	cmp	r3, #39	; 0x27
   2f9e0:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2f9e4:	cmp	r3, #40	; 0x28
   2f9e8:	bne	2fef0 <__assert_fail@plt+0x1eaec>
   2f9ec:	subs	r2, r4, #2
   2f9f0:	rsbs	r3, r2, #0
   2f9f4:	adcs	r3, r3, r2
   2f9f8:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   2f9fc:	cmp	r3, #42	; 0x2a
   2fa00:	bcs	2fa28 <__assert_fail@plt+0x1e624>
   2fa04:	cmp	r3, #15
   2fa08:	beq	2fa28 <__assert_fail@plt+0x1e624>
   2fa0c:	bls	30118 <__assert_fail@plt+0x1ed14>
   2fa10:	cmp	r3, #22
   2fa14:	bhi	30238 <__assert_fail@plt+0x1ee34>
   2fa18:	cmp	r3, #20
   2fa1c:	bcs	2fa28 <__assert_fail@plt+0x1e624>
   2fa20:	cmp	r3, #18
   2fa24:	bne	2f99c <__assert_fail@plt+0x1e598>
   2fa28:	rsbs	r2, r4, #1
   2fa2c:	movcc	r2, #0
   2fa30:	b	2f898 <__assert_fail@plt+0x1e494>
   2fa34:	bics	ip, r4, #256	; 0x100
   2fa38:	movne	r2, #0
   2fa3c:	moveq	r2, #1
   2fa40:	cmp	r3, #183	; 0xb7
   2fa44:	beq	2f898 <__assert_fail@plt+0x1e494>
   2fa48:	bhi	30254 <__assert_fail@plt+0x1ee50>
   2fa4c:	sub	r2, r3, #180	; 0xb4
   2fa50:	cmp	r2, #1
   2fa54:	bls	2fa28 <__assert_fail@plt+0x1e624>
   2fa58:	b	2f99c <__assert_fail@plt+0x1e598>
   2fa5c:	cmp	r4, #65	; 0x41
   2fa60:	bne	2f690 <__assert_fail@plt+0x1e28c>
   2fa64:	ldr	r0, [r7, #-24]	; 0xffffffe8
   2fa68:	cmp	r0, #0
   2fa6c:	blt	2fa88 <__assert_fail@plt+0x1e684>
   2fa70:	ldr	ip, [sp, #28]
   2fa74:	add	r3, r0, #4
   2fa78:	ldr	r4, [sp, #56]	; 0x38
   2fa7c:	add	r3, ip, r3
   2fa80:	cmp	r4, r3
   2fa84:	bhi	2ff94 <__assert_fail@plt+0x1eb90>
   2fa88:	mov	r2, #5
   2fa8c:	movw	r1, #22308	; 0x5724
   2fa90:	mov	r0, #0
   2fa94:	movt	r1, #6
   2fa98:	bl	11170 <dcgettext@plt>
   2fa9c:	ldr	r1, [r7, #-24]	; 0xffffffe8
   2faa0:	bl	4b2b0 <error@@Base>
   2faa4:	movw	r4, #24896	; 0x6140
   2faa8:	movt	r4, #9
   2faac:	movw	r1, #65208	; 0xfeb8
   2fab0:	movt	r1, #65535	; 0xffff
   2fab4:	mov	r2, #0
   2fab8:	mov	r3, #0
   2fabc:	ldr	r9, [sp, #100]	; 0x64
   2fac0:	strd	r2, [r4, r1]
   2fac4:	ldr	r6, [sp, #96]	; 0x60
   2fac8:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2facc:	cmp	r3, #43	; 0x2b
   2fad0:	bls	2f9fc <__assert_fail@plt+0x1e5f8>
   2fad4:	cmp	r3, #83	; 0x53
   2fad8:	bne	2fe4c <__assert_fail@plt+0x1ea48>
   2fadc:	sub	r2, r4, #30
   2fae0:	cmp	r4, #0
   2fae4:	cmpne	r2, #2
   2fae8:	bhi	2f99c <__assert_fail@plt+0x1e598>
   2faec:	b	2f8a0 <__assert_fail@plt+0x1e49c>
   2faf0:	mov	r0, r5
   2faf4:	add	r2, sp, #104	; 0x68
   2faf8:	bl	15a6c <__assert_fail@plt+0x4668>
   2fafc:	str	r0, [sp, #40]	; 0x28
   2fb00:	b	2f200 <__assert_fail@plt+0x1ddfc>
   2fb04:	movw	r1, #22256	; 0x56f0
   2fb08:	movt	r1, #6
   2fb0c:	mov	r0, #0
   2fb10:	mov	r2, #5
   2fb14:	bl	11170 <dcgettext@plt>
   2fb18:	mov	r1, r5
   2fb1c:	bl	4b2b0 <error@@Base>
   2fb20:	ldr	r9, [sp, #100]	; 0x64
   2fb24:	ldr	r6, [sp, #96]	; 0x60
   2fb28:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2fb2c:	ldr	r3, [sp, #32]
   2fb30:	movw	r1, #65200	; 0xfeb0
   2fb34:	movt	r1, #65535	; 0xffff
   2fb38:	cmp	r5, r2
   2fb3c:	ldr	r4, [sp, #32]
   2fb40:	movw	ip, #65192	; 0xfea8
   2fb44:	ldrd	r2, [r3, r1]
   2fb48:	movt	ip, #65535	; 0xffff
   2fb4c:	strd	r2, [r4, ip]
   2fb50:	bcs	2fb04 <__assert_fail@plt+0x1e700>
   2fb54:	ldr	ip, [sp, #40]	; 0x28
   2fb58:	lsl	r5, r5, #5
   2fb5c:	ldrd	r2, [ip, r5]
   2fb60:	ldrd	r4, [r7, #-8]
   2fb64:	adds	r2, r2, r4
   2fb68:	adc	r3, r3, r5
   2fb6c:	ldr	r5, [sp, #32]
   2fb70:	strd	r2, [r5, r1]
   2fb74:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2fb78:	ldr	r0, [r7, #-24]	; 0xffffffe8
   2fb7c:	cmp	r0, #0
   2fb80:	blt	2fa88 <__assert_fail@plt+0x1e684>
   2fb84:	ldr	r4, [sp, #28]
   2fb88:	add	r3, r0, #2
   2fb8c:	ldr	r5, [sp, #56]	; 0x38
   2fb90:	add	r3, r4, r3
   2fb94:	cmp	r5, r3
   2fb98:	bls	2fa88 <__assert_fail@plt+0x1e684>
   2fb9c:	ldr	ip, [sp, #32]
   2fba0:	movw	r3, #65208	; 0xfeb8
   2fba4:	ldr	r5, [sp, #44]	; 0x2c
   2fba8:	movt	r3, #65535	; 0xffff
   2fbac:	add	r0, r4, r0
   2fbb0:	mov	r1, #2
   2fbb4:	ldrd	r2, [r3, ip]
   2fbb8:	movw	r4, #24896	; 0x6140
   2fbbc:	str	r1, [sp]
   2fbc0:	movt	r4, #9
   2fbc4:	ldr	r1, [r5]
   2fbc8:	blx	r1
   2fbcc:	b	2faac <__assert_fail@plt+0x1e6a8>
   2fbd0:	cmp	r3, #223	; 0xdf
   2fbd4:	bls	30150 <__assert_fail@plt+0x1ed4c>
   2fbd8:	movw	r2, #4183	; 0x1057
   2fbdc:	cmp	r3, r2
   2fbe0:	beq	2fadc <__assert_fail@plt+0x1e6d8>
   2fbe4:	b	2f99c <__assert_fail@plt+0x1e598>
   2fbe8:	movw	r2, #4185	; 0x1059
   2fbec:	cmp	r3, r2
   2fbf0:	beq	2f424 <__assert_fail@plt+0x1e020>
   2fbf4:	movw	r2, #48879	; 0xbeef
   2fbf8:	cmp	r3, r2
   2fbfc:	bne	2f434 <__assert_fail@plt+0x1e030>
   2fc00:	movw	r3, #24896	; 0x6140
   2fc04:	movt	r3, #9
   2fc08:	mov	r2, #0
   2fc0c:	str	r2, [r3, #-348]	; 0xfffffea4
   2fc10:	b	2f434 <__assert_fail@plt+0x1e030>
   2fc14:	cmp	r3, #223	; 0xdf
   2fc18:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2fc1c:	bhi	2fea8 <__assert_fail@plt+0x1eaa4>
   2fc20:	cmp	r3, #174	; 0xae
   2fc24:	beq	2f9ec <__assert_fail@plt+0x1e5e8>
   2fc28:	bhi	300bc <__assert_fail@plt+0x1ecb8>
   2fc2c:	cmp	r3, #120	; 0x78
   2fc30:	beq	2fc54 <__assert_fail@plt+0x1e850>
   2fc34:	bls	302e0 <__assert_fail@plt+0x1eedc>
   2fc38:	cmp	r3, #140	; 0x8c
   2fc3c:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2fc40:	bhi	305f4 <__assert_fail@plt+0x1f1f0>
   2fc44:	cmp	r3, #135	; 0x87
   2fc48:	beq	30474 <__assert_fail@plt+0x1f070>
   2fc4c:	cmp	r3, #138	; 0x8a
   2fc50:	bne	2fef0 <__assert_fail@plt+0x1eaec>
   2fc54:	subs	r5, r4, #3
   2fc58:	rsbs	r3, r5, #0
   2fc5c:	adcs	r3, r3, r5
   2fc60:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   2fc64:	movw	r1, #24896	; 0x6140
   2fc68:	movw	ip, #65200	; 0xfeb0
   2fc6c:	movt	r1, #9
   2fc70:	movt	ip, #65535	; 0xffff
   2fc74:	movw	r0, #65192	; 0xfea8
   2fc78:	movt	r0, #65535	; 0xffff
   2fc7c:	mov	r2, #0
   2fc80:	mov	r3, #0
   2fc84:	strd	r2, [r1, ip]
   2fc88:	strd	r2, [r1, r0]
   2fc8c:	b	2f434 <__assert_fail@plt+0x1e030>
   2fc90:	mov	r2, #5
   2fc94:	movw	r1, #21868	; 0x556c
   2fc98:	mov	r0, #0
   2fc9c:	movt	r1, #6
   2fca0:	bl	11170 <dcgettext@plt>
   2fca4:	mov	r1, r5
   2fca8:	bl	4b2b0 <error@@Base>
   2fcac:	b	2f3cc <__assert_fail@plt+0x1dfc8>
   2fcb0:	cmp	r5, #2
   2fcb4:	beq	30244 <__assert_fail@plt+0x1ee40>
   2fcb8:	mov	r0, r4
   2fcbc:	bl	131d0 <__assert_fail@plt+0x1dcc>
   2fcc0:	cmp	r0, #0
   2fcc4:	bne	2f538 <__assert_fail@plt+0x1e134>
   2fcc8:	cmp	r5, #222	; 0xde
   2fccc:	beq	3038c <__assert_fail@plt+0x1ef88>
   2fcd0:	movw	r3, #57005	; 0xdead
   2fcd4:	cmp	r5, r3
   2fcd8:	beq	30300 <__assert_fail@plt+0x1eefc>
   2fcdc:	cmp	r5, #90	; 0x5a
   2fce0:	beq	30300 <__assert_fail@plt+0x1eefc>
   2fce4:	cmp	r5, #120	; 0x78
   2fce8:	beq	30710 <__assert_fail@plt+0x1f30c>
   2fcec:	bls	303f0 <__assert_fail@plt+0x1efec>
   2fcf0:	movw	r3, #4643	; 0x1223
   2fcf4:	cmp	r5, r3
   2fcf8:	beq	3069c <__assert_fail@plt+0x1f298>
   2fcfc:	bhi	303ac <__assert_fail@plt+0x1efa8>
   2fd00:	cmp	r5, #195	; 0xc3
   2fd04:	beq	3066c <__assert_fail@plt+0x1f268>
   2fd08:	bls	306f0 <__assert_fail@plt+0x1f2ec>
   2fd0c:	movw	r3, #4183	; 0x1057
   2fd10:	cmp	r5, r3
   2fd14:	beq	306e0 <__assert_fail@plt+0x1f2dc>
   2fd18:	add	r3, r3, #2
   2fd1c:	cmp	r5, r3
   2fd20:	beq	3069c <__assert_fail@plt+0x1f298>
   2fd24:	cmp	r5, #221	; 0xdd
   2fd28:	beq	3066c <__assert_fail@plt+0x1f268>
   2fd2c:	ldr	r5, [sp, #32]
   2fd30:	ldr	r3, [r5, #-316]	; 0xfffffec4
   2fd34:	cmp	r3, r4
   2fd38:	beq	2fd6c <__assert_fail@plt+0x1e968>
   2fd3c:	mov	r2, #5
   2fd40:	movw	r1, #22448	; 0x57b0
   2fd44:	mov	r0, #0
   2fd48:	movt	r1, #6
   2fd4c:	bl	11170 <dcgettext@plt>
   2fd50:	mov	r5, r0
   2fd54:	ldr	r0, [sp, #64]	; 0x40
   2fd58:	bl	132f8 <__assert_fail@plt+0x1ef4>
   2fd5c:	mov	r1, r4
   2fd60:	mov	r2, r0
   2fd64:	mov	r0, r5
   2fd68:	bl	4b9ec <warn@@Base>
   2fd6c:	ldr	ip, [sp, #32]
   2fd70:	ldr	r9, [sp, #100]	; 0x64
   2fd74:	ldr	r6, [sp, #96]	; 0x60
   2fd78:	str	r4, [ip, #-316]	; 0xfffffec4
   2fd7c:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2fd80:	cmp	r5, #183	; 0xb7
   2fd84:	beq	30378 <__assert_fail@plt+0x1ef74>
   2fd88:	bls	3035c <__assert_fail@plt+0x1ef58>
   2fd8c:	movw	r3, #36902	; 0x9026
   2fd90:	cmp	r5, r3
   2fd94:	beq	3034c <__assert_fail@plt+0x1ef48>
   2fd98:	movw	r3, #41872	; 0xa390
   2fd9c:	cmp	r5, r3
   2fda0:	beq	3033c <__assert_fail@plt+0x1ef38>
   2fda4:	cmp	r5, #191	; 0xbf
   2fda8:	bne	2fcb8 <__assert_fail@plt+0x1e8b4>
   2fdac:	subs	ip, r4, #1
   2fdb0:	rsbs	r3, ip, #0
   2fdb4:	adcs	r3, r3, ip
   2fdb8:	b	2f530 <__assert_fail@plt+0x1e12c>
   2fdbc:	mov	r2, #5
   2fdc0:	movw	r1, #22088	; 0x5648
   2fdc4:	mov	r0, #0
   2fdc8:	movt	r1, #6
   2fdcc:	bl	11170 <dcgettext@plt>
   2fdd0:	mov	r1, r5
   2fdd4:	bl	4b2b0 <error@@Base>
   2fdd8:	b	2f844 <__assert_fail@plt+0x1e440>
   2fddc:	mov	r2, #5
   2fde0:	movw	r1, #22564	; 0x5824
   2fde4:	mov	r0, #0
   2fde8:	movt	r1, #6
   2fdec:	bl	11170 <dcgettext@plt>
   2fdf0:	mov	r4, r0
   2fdf4:	ldr	r0, [sp, #64]	; 0x40
   2fdf8:	bl	132f8 <__assert_fail@plt+0x1ef4>
   2fdfc:	mov	r1, r6
   2fe00:	mov	r2, r0
   2fe04:	mov	r0, r4
   2fe08:	bl	4b9ec <warn@@Base>
   2fe0c:	ldr	r9, [sp, #100]	; 0x64
   2fe10:	ldr	r6, [sp, #96]	; 0x60
   2fe14:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   2fe18:	mov	r2, #0
   2fe1c:	mov	r3, #0
   2fe20:	strd	r2, [sp, #48]	; 0x30
   2fe24:	ldr	ip, [sp, #60]	; 0x3c
   2fe28:	mov	r0, r5
   2fe2c:	mov	r1, r9
   2fe30:	ldr	r3, [ip]
   2fe34:	blx	r3
   2fe38:	ldrd	r2, [sp, #48]	; 0x30
   2fe3c:	adds	r2, r2, r0
   2fe40:	adc	r3, r3, r1
   2fe44:	strd	r2, [sp, #48]	; 0x30
   2fe48:	b	2f600 <__assert_fail@plt+0x1e1fc>
   2fe4c:	bhi	30134 <__assert_fail@plt+0x1ed30>
   2fe50:	cmp	r3, #50	; 0x32
   2fe54:	beq	2fa28 <__assert_fail@plt+0x1e624>
   2fe58:	bls	3044c <__assert_fail@plt+0x1f048>
   2fe5c:	cmp	r3, #62	; 0x3e
   2fe60:	beq	2fa28 <__assert_fail@plt+0x1e624>
   2fe64:	cmp	r3, #76	; 0x4c
   2fe68:	beq	2fa28 <__assert_fail@plt+0x1e624>
   2fe6c:	b	2f99c <__assert_fail@plt+0x1e598>
   2fe70:	ldrd	r4, [sp, #88]	; 0x58
   2fe74:	ldrd	r2, [sp, #80]	; 0x50
   2fe78:	str	ip, [sp]
   2fe7c:	subs	r2, r2, r4
   2fe80:	sbc	r3, r3, r5
   2fe84:	ldrd	r4, [sp, #48]	; 0x30
   2fe88:	ldr	ip, [sp, #44]	; 0x2c
   2fe8c:	adds	r2, r2, r4
   2fe90:	adc	r3, r3, r5
   2fe94:	ldr	r5, [sp, #28]
   2fe98:	ldr	r1, [ip]
   2fe9c:	add	r0, r5, r0
   2fea0:	blx	r1
   2fea4:	b	2f3cc <__assert_fail@plt+0x1dfc8>
   2fea8:	movw	r2, #33303	; 0x8217
   2feac:	cmp	r3, r2
   2feb0:	beq	2f9ec <__assert_fail@plt+0x1e5e8>
   2feb4:	bls	301fc <__assert_fail@plt+0x1edf8>
   2feb8:	movw	r2, #48879	; 0xbeef
   2febc:	cmp	r3, r2
   2fec0:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2fec4:	bls	3019c <__assert_fail@plt+0x1ed98>
   2fec8:	movw	r2, #65200	; 0xfeb0
   2fecc:	cmp	r3, r2
   2fed0:	beq	2fc54 <__assert_fail@plt+0x1e850>
   2fed4:	bls	30484 <__assert_fail@plt+0x1f080>
   2fed8:	movw	r2, #65210	; 0xfeba
   2fedc:	cmp	r3, r2
   2fee0:	beq	2f9ec <__assert_fail@plt+0x1e5e8>
   2fee4:	add	r2, r2, #1
   2fee8:	cmp	r3, r2
   2feec:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2fef0:	ldr	r5, [sp, #32]
   2fef4:	ldr	r2, [r5, #-320]	; 0xfffffec0
   2fef8:	cmp	r3, r2
   2fefc:	beq	2ff1c <__assert_fail@plt+0x1eb18>
   2ff00:	movw	r1, #22360	; 0x5758
   2ff04:	mov	r0, #0
   2ff08:	movt	r1, #6
   2ff0c:	mov	r2, #5
   2ff10:	bl	11170 <dcgettext@plt>
   2ff14:	ldrh	r1, [sl, #50]	; 0x32
   2ff18:	bl	4b2b0 <error@@Base>
   2ff1c:	ldrh	r3, [sl, #50]	; 0x32
   2ff20:	ldr	ip, [sp, #32]
   2ff24:	str	r3, [ip, #-320]	; 0xfffffec0
   2ff28:	b	2f4e8 <__assert_fail@plt+0x1e0e4>
   2ff2c:	cmp	r3, #86	; 0x56
   2ff30:	beq	302b0 <__assert_fail@plt+0x1eeac>
   2ff34:	bhi	30164 <__assert_fail@plt+0x1ed60>
   2ff38:	cmp	r3, #75	; 0x4b
   2ff3c:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2ff40:	bls	3053c <__assert_fail@plt+0x1f138>
   2ff44:	cmp	r3, #83	; 0x53
   2ff48:	beq	2f690 <__assert_fail@plt+0x1e28c>
   2ff4c:	bhi	30528 <__assert_fail@plt+0x1f124>
   2ff50:	cmp	r3, #76	; 0x4c
   2ff54:	beq	2fc54 <__assert_fail@plt+0x1e850>
   2ff58:	cmp	r3, #80	; 0x50
   2ff5c:	bne	2fef0 <__assert_fail@plt+0x1eaec>
   2ff60:	subs	lr, r4, #4
   2ff64:	rsbs	r3, lr, #0
   2ff68:	adcs	r3, r3, lr
   2ff6c:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   2ff70:	ldrb	r0, [sl, #44]	; 0x2c
   2ff74:	movw	r1, #16712	; 0x4148
   2ff78:	movt	r1, #9
   2ff7c:	cmp	r0, #45	; 0x2d
   2ff80:	beq	2f348 <__assert_fail@plt+0x1df44>
   2ff84:	ldrb	r1, [r1, #7]
   2ff88:	cmp	r1, #0
   2ff8c:	bne	2f690 <__assert_fail@plt+0x1e28c>
   2ff90:	b	2f348 <__assert_fail@plt+0x1df44>
   2ff94:	add	r0, ip, r0
   2ff98:	ldr	r5, [sp, #32]
   2ff9c:	ldr	ip, [sp, #44]	; 0x2c
   2ffa0:	movw	r3, #65208	; 0xfeb8
   2ffa4:	movt	r3, #65535	; 0xffff
   2ffa8:	mov	r1, #4
   2ffac:	movw	r4, #24896	; 0x6140
   2ffb0:	movt	r4, #9
   2ffb4:	ldrd	r2, [r3, r5]
   2ffb8:	str	r1, [sp]
   2ffbc:	ldr	r1, [ip]
   2ffc0:	blx	r1
   2ffc4:	b	2faac <__assert_fail@plt+0x1e6a8>
   2ffc8:	ldrd	r4, [sp, #88]	; 0x58
   2ffcc:	ldrd	r2, [sp, #80]	; 0x50
   2ffd0:	str	ip, [sp]
   2ffd4:	subs	r2, r2, r4
   2ffd8:	sbc	r3, r3, r5
   2ffdc:	ldrd	r4, [sp, #48]	; 0x30
   2ffe0:	ldr	ip, [sp, #44]	; 0x2c
   2ffe4:	adds	r2, r2, r4
   2ffe8:	adc	r3, r3, r5
   2ffec:	ldr	r5, [sp, #28]
   2fff0:	ldr	r1, [ip]
   2fff4:	add	r0, r5, r0
   2fff8:	blx	r1
   2fffc:	b	2f844 <__assert_fail@plt+0x1e440>
   30000:	mov	r2, #5
   30004:	movw	r1, #22628	; 0x5864
   30008:	mov	r0, #0
   3000c:	movt	r1, #6
   30010:	bl	11170 <dcgettext@plt>
   30014:	mov	r5, r0
   30018:	ldrb	r0, [r6, #20]
   3001c:	and	r0, r0, #15
   30020:	bl	186e8 <__assert_fail@plt+0x72e4>
   30024:	ldr	r3, [sp, #100]	; 0x64
   30028:	sub	r2, r7, #24
   3002c:	rsb	r3, r3, r2
   30030:	asr	r3, r3, #3
   30034:	add	r4, r3, r3, lsl #2
   30038:	add	r4, r4, r4, lsl #4
   3003c:	add	r4, r4, r4, lsl #8
   30040:	add	r4, r4, r4, lsl #16
   30044:	add	r4, r3, r4, lsl #1
   30048:	mov	r6, r0
   3004c:	ldr	r0, [sp, #76]	; 0x4c
   30050:	bl	132f8 <__assert_fail@plt+0x1ef4>
   30054:	mov	r1, r6
   30058:	mov	r2, r4
   3005c:	mov	r3, r0
   30060:	mov	r0, r5
   30064:	bl	4b9ec <warn@@Base>
   30068:	ldr	r9, [sp, #100]	; 0x64
   3006c:	ldr	r6, [sp, #96]	; 0x60
   30070:	b	2f3e0 <__assert_fail@plt+0x1dfdc>
   30074:	cmp	r5, #22
   30078:	beq	3033c <__assert_fail@plt+0x1ef38>
   3007c:	cmp	r5, #43	; 0x2b
   30080:	beq	30244 <__assert_fail@plt+0x1ee40>
   30084:	cmp	r5, #21
   30088:	bne	2fcb8 <__assert_fail@plt+0x1e8b4>
   3008c:	subs	r9, r4, #38	; 0x26
   30090:	rsbs	r3, r9, #0
   30094:	adcs	r3, r3, r9
   30098:	b	2f530 <__assert_fail@plt+0x1e12c>
   3009c:	ldr	r0, [sp, #100]	; 0x64
   300a0:	bl	1111c <free@plt>
   300a4:	b	2f0f8 <__assert_fail@plt+0x1dcf4>
   300a8:	ldrd	r2, [sp, #48]	; 0x30
   300ac:	subs	r2, r2, #8
   300b0:	sbc	r3, r3, #0
   300b4:	strd	r2, [sp, #48]	; 0x30
   300b8:	b	2f62c <__assert_fail@plt+0x1e228>
   300bc:	cmp	r3, #189	; 0xbd
   300c0:	beq	2f690 <__assert_fail@plt+0x1e28c>
   300c4:	bhi	30260 <__assert_fail@plt+0x1ee5c>
   300c8:	cmp	r3, #181	; 0xb5
   300cc:	bls	304cc <__assert_fail@plt+0x1f0c8>
   300d0:	cmp	r3, #183	; 0xb7
   300d4:	beq	30570 <__assert_fail@plt+0x1f16c>
   300d8:	cmp	r3, #188	; 0xbc
   300dc:	beq	2f690 <__assert_fail@plt+0x1e28c>
   300e0:	b	2fef0 <__assert_fail@plt+0x1eaec>
   300e4:	cmp	r3, #7
   300e8:	beq	2f690 <__assert_fail@plt+0x1e28c>
   300ec:	bls	304e0 <__assert_fail@plt+0x1f0dc>
   300f0:	cmp	r3, #9
   300f4:	beq	2f690 <__assert_fail@plt+0x1e28c>
   300f8:	bcc	2f9ec <__assert_fail@plt+0x1e5e8>
   300fc:	cmp	r3, #15
   30100:	bne	30650 <__assert_fail@plt+0x1f24c>
   30104:	cmp	r4, #1
   30108:	cmpne	r4, #41	; 0x29
   3010c:	movne	r3, #0
   30110:	moveq	r3, #1
   30114:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   30118:	cmp	r3, #2
   3011c:	bcc	2f99c <__assert_fail@plt+0x1e598>
   30120:	cmp	r3, #4
   30124:	bls	2fa28 <__assert_fail@plt+0x1e624>
   30128:	cmp	r3, #8
   3012c:	beq	2fa28 <__assert_fail@plt+0x1e624>
   30130:	b	2f99c <__assert_fail@plt+0x1e598>
   30134:	cmp	r3, #88	; 0x58
   30138:	bcc	2f99c <__assert_fail@plt+0x1e598>
   3013c:	cmp	r3, #89	; 0x59
   30140:	bls	2fa28 <__assert_fail@plt+0x1e624>
   30144:	cmp	r3, #92	; 0x5c
   30148:	bcs	2fa28 <__assert_fail@plt+0x1e624>
   3014c:	b	2f99c <__assert_fail@plt+0x1e598>
   30150:	cmp	r3, #222	; 0xde
   30154:	bcs	2fa28 <__assert_fail@plt+0x1e624>
   30158:	cmp	r3, #195	; 0xc3
   3015c:	beq	2fa28 <__assert_fail@plt+0x1e624>
   30160:	b	2f99c <__assert_fail@plt+0x1e598>
   30164:	cmp	r3, #92	; 0x5c
   30168:	beq	2f690 <__assert_fail@plt+0x1e28c>
   3016c:	bhi	305b8 <__assert_fail@plt+0x1f1b4>
   30170:	cmp	r3, #89	; 0x59
   30174:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30178:	bhi	30514 <__assert_fail@plt+0x1f110>
   3017c:	cmp	r3, #87	; 0x57
   30180:	beq	301c4 <__assert_fail@plt+0x1edc0>
   30184:	cmp	r3, #88	; 0x58
   30188:	bne	2fef0 <__assert_fail@plt+0x1eaec>
   3018c:	subs	lr, r4, #34	; 0x22
   30190:	rsbs	r3, lr, #0
   30194:	adcs	r3, r3, lr
   30198:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   3019c:	movw	r2, #41872	; 0xa390
   301a0:	cmp	r3, r2
   301a4:	beq	2ff60 <__assert_fail@plt+0x1eb5c>
   301a8:	bhi	30458 <__assert_fail@plt+0x1f054>
   301ac:	movw	r2, #36902	; 0x9026
   301b0:	cmp	r3, r2
   301b4:	beq	2f690 <__assert_fail@plt+0x1e28c>
   301b8:	add	r2, r2, #90	; 0x5a
   301bc:	cmp	r3, r2
   301c0:	bne	2fef0 <__assert_fail@plt+0x1eaec>
   301c4:	subs	fp, r4, #6
   301c8:	rsbs	r3, fp, #0
   301cc:	adcs	r3, r3, fp
   301d0:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   301d4:	cmp	r4, #1
   301d8:	bne	2f600 <__assert_fail@plt+0x1e1fc>
   301dc:	b	2fe24 <__assert_fail@plt+0x1ea20>
   301e0:	movw	r2, #18056	; 0x4688
   301e4:	cmp	r3, r2
   301e8:	beq	2fa28 <__assert_fail@plt+0x1e624>
   301ec:	movw	r2, #36902	; 0x9026
   301f0:	cmp	r3, r2
   301f4:	beq	2fa28 <__assert_fail@plt+0x1e624>
   301f8:	b	2f99c <__assert_fail@plt+0x1e598>
   301fc:	movw	r2, #13104	; 0x3330
   30200:	cmp	r3, r2
   30204:	beq	2fc54 <__assert_fail@plt+0x1e850>
   30208:	bls	304a0 <__assert_fail@plt+0x1f09c>
   3020c:	movw	r2, #23205	; 0x5aa5
   30210:	cmp	r3, r2
   30214:	beq	2fc54 <__assert_fail@plt+0x1e850>
   30218:	bhi	30634 <__assert_fail@plt+0x1f230>
   3021c:	movw	r2, #18056	; 0x4688
   30220:	cmp	r3, r2
   30224:	beq	2fc54 <__assert_fail@plt+0x1e850>
   30228:	movw	r2, #21569	; 0x5441
   3022c:	cmp	r3, r2
   30230:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30234:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30238:	cmp	r3, #40	; 0x28
   3023c:	beq	2fa28 <__assert_fail@plt+0x1e624>
   30240:	b	2f99c <__assert_fail@plt+0x1e598>
   30244:	subs	r6, r4, #54	; 0x36
   30248:	rsbs	r3, r6, #0
   3024c:	adcs	r3, r3, r6
   30250:	b	2f530 <__assert_fail@plt+0x1e12c>
   30254:	cmp	r3, #188	; 0xbc
   30258:	beq	2fa28 <__assert_fail@plt+0x1e624>
   3025c:	b	2f99c <__assert_fail@plt+0x1e598>
   30260:	cmp	r3, #197	; 0xc5
   30264:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30268:	bls	305a4 <__assert_fail@plt+0x1f1a0>
   3026c:	cmp	r3, #221	; 0xdd
   30270:	beq	2fc54 <__assert_fail@plt+0x1e850>
   30274:	cmp	r3, #222	; 0xde
   30278:	beq	2f690 <__assert_fail@plt+0x1e28c>
   3027c:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30280:	ldrd	r2, [r6]
   30284:	mov	r0, r5
   30288:	ldrd	r4, [sp, #48]	; 0x30
   3028c:	str	r9, [sp]
   30290:	adds	r2, r2, r4
   30294:	adc	r3, r3, r5
   30298:	ldr	r5, [sp, #44]	; 0x2c
   3029c:	ldr	r1, [r5]
   302a0:	blx	r1
   302a4:	b	2f8a0 <__assert_fail@plt+0x1e49c>
   302a8:	cmp	r3, #113	; 0x71
   302ac:	bne	2fef0 <__assert_fail@plt+0x1eaec>
   302b0:	subs	r0, r4, #12
   302b4:	rsbs	r3, r0, #0
   302b8:	adcs	r3, r3, r0
   302bc:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   302c0:	cmp	r3, #21
   302c4:	beq	2f690 <__assert_fail@plt+0x1e28c>
   302c8:	bcc	2f690 <__assert_fail@plt+0x1e28c>
   302cc:	cmp	r3, #22
   302d0:	beq	2ff60 <__assert_fail@plt+0x1eb5c>
   302d4:	cmp	r3, #23
   302d8:	beq	301c4 <__assert_fail@plt+0x1edc0>
   302dc:	b	2fef0 <__assert_fail@plt+0x1eaec>
   302e0:	cmp	r3, #114	; 0x72
   302e4:	beq	3039c <__assert_fail@plt+0x1ef98>
   302e8:	bls	302a8 <__assert_fail@plt+0x1eea4>
   302ec:	cmp	r3, #115	; 0x73
   302f0:	beq	2ff60 <__assert_fail@plt+0x1eb5c>
   302f4:	cmp	r3, #116	; 0x74
   302f8:	beq	2fc54 <__assert_fail@plt+0x1e850>
   302fc:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30300:	subs	r1, r4, #4
   30304:	rsbs	r3, r1, #0
   30308:	adcs	r3, r3, r1
   3030c:	cmp	r3, #0
   30310:	movne	r9, #3
   30314:	bne	2f53c <__assert_fail@plt+0x1e138>
   30318:	b	2fce4 <__assert_fail@plt+0x1e8e0>
   3031c:	subs	r2, r4, #39	; 0x27
   30320:	rsbs	r3, r2, #0
   30324:	adcs	r3, r3, r2
   30328:	b	2f530 <__assert_fail@plt+0x1e12c>
   3032c:	subs	r0, r4, #18
   30330:	rsbs	r3, r0, #0
   30334:	adcs	r3, r3, r0
   30338:	b	2f530 <__assert_fail@plt+0x1e12c>
   3033c:	subs	lr, r4, #22
   30340:	rsbs	r3, lr, #0
   30344:	adcs	r3, r3, lr
   30348:	b	2f530 <__assert_fail@plt+0x1e12c>
   3034c:	subs	r1, r4, #2
   30350:	rsbs	r3, r1, #0
   30354:	adcs	r3, r3, r1
   30358:	b	2f530 <__assert_fail@plt+0x1e12c>
   3035c:	cmp	r5, #62	; 0x3e
   30360:	beq	2fdac <__assert_fail@plt+0x1e9a8>
   30364:	bcc	2fcb8 <__assert_fail@plt+0x1e8b4>
   30368:	sub	r3, r5, #180	; 0xb4
   3036c:	cmp	r3, #1
   30370:	bls	2fdac <__assert_fail@plt+0x1e9a8>
   30374:	b	2fcb8 <__assert_fail@plt+0x1e8b4>
   30378:	movw	r3, #257	; 0x101
   3037c:	subs	r0, r4, r3
   30380:	rsbs	r3, r0, #0
   30384:	adcs	r3, r3, r0
   30388:	b	2f530 <__assert_fail@plt+0x1e12c>
   3038c:	subs	r2, r4, #5
   30390:	rsbs	r3, r2, #0
   30394:	adcs	r3, r3, r2
   30398:	b	3030c <__assert_fail@plt+0x1ef08>
   3039c:	subs	r6, r4, #15
   303a0:	rsbs	r3, r6, #0
   303a4:	adcs	r3, r3, r6
   303a8:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   303ac:	movw	r3, #48879	; 0xbeef
   303b0:	cmp	r5, r3
   303b4:	beq	3066c <__assert_fail@plt+0x1f268>
   303b8:	bls	30730 <__assert_fail@plt+0x1f32c>
   303bc:	movw	r3, #65200	; 0xfeb0
   303c0:	cmp	r5, r3
   303c4:	beq	30710 <__assert_fail@plt+0x1f30c>
   303c8:	add	r3, r3, #11
   303cc:	cmp	r5, r3
   303d0:	bne	30720 <__assert_fail@plt+0x1f31c>
   303d4:	subs	r0, r4, #9
   303d8:	rsbs	r3, r0, #0
   303dc:	adcs	r3, r3, r0
   303e0:	cmp	r3, #0
   303e4:	beq	2fd2c <__assert_fail@plt+0x1e928>
   303e8:	mov	r9, #2
   303ec:	b	2f53c <__assert_fail@plt+0x1e138>
   303f0:	cmp	r5, #90	; 0x5a
   303f4:	beq	3066c <__assert_fail@plt+0x1f268>
   303f8:	bls	306c0 <__assert_fail@plt+0x1f2bc>
   303fc:	cmp	r5, #105	; 0x69
   30400:	beq	3067c <__assert_fail@plt+0x1f278>
   30404:	bls	30768 <__assert_fail@plt+0x1f364>
   30408:	cmp	r5, #115	; 0x73
   3040c:	beq	30758 <__assert_fail@plt+0x1f354>
   30410:	cmp	r5, #116	; 0x74
   30414:	beq	3066c <__assert_fail@plt+0x1f268>
   30418:	cmp	r5, #113	; 0x71
   3041c:	bne	2fd2c <__assert_fail@plt+0x1e928>
   30420:	subs	ip, r4, #13
   30424:	rsbs	r3, ip, #0
   30428:	adcs	r3, r3, ip
   3042c:	b	303e0 <__assert_fail@plt+0x1efdc>
   30430:	cmp	r3, #113	; 0x71
   30434:	beq	2fa28 <__assert_fail@plt+0x1e624>
   30438:	b	2f99c <__assert_fail@plt+0x1e598>
   3043c:	subs	r9, r4, #18
   30440:	rsbs	r3, r9, #0
   30444:	adcs	r3, r3, r9
   30448:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   3044c:	cmp	r3, #45	; 0x2d
   30450:	beq	2fa28 <__assert_fail@plt+0x1e624>
   30454:	b	2f99c <__assert_fail@plt+0x1e598>
   30458:	movw	r2, #43975	; 0xabc7
   3045c:	cmp	r3, r2
   30460:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30464:	movw	r2, #44357	; 0xad45
   30468:	cmp	r3, r2
   3046c:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30470:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30474:	subs	r1, r4, #8
   30478:	rsbs	r3, r1, #0
   3047c:	adcs	r3, r3, r1
   30480:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   30484:	movw	r2, #57005	; 0xdead
   30488:	cmp	r3, r2
   3048c:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30490:	movw	r2, #61453	; 0xf00d
   30494:	cmp	r3, r2
   30498:	beq	2ff60 <__assert_fail@plt+0x1eb5c>
   3049c:	b	2fef0 <__assert_fail@plt+0x1eaec>
   304a0:	movw	r2, #4185	; 0x1059
   304a4:	cmp	r3, r2
   304a8:	beq	2f690 <__assert_fail@plt+0x1e28c>
   304ac:	bls	30624 <__assert_fail@plt+0x1f220>
   304b0:	movw	r2, #4643	; 0x1223
   304b4:	cmp	r3, r2
   304b8:	beq	2fc54 <__assert_fail@plt+0x1e850>
   304bc:	movw	r2, #9520	; 0x2530
   304c0:	cmp	r3, r2
   304c4:	beq	2f9ec <__assert_fail@plt+0x1e5e8>
   304c8:	b	2fef0 <__assert_fail@plt+0x1eaec>
   304cc:	cmp	r3, #180	; 0xb4
   304d0:	bcs	30584 <__assert_fail@plt+0x1f180>
   304d4:	cmp	r3, #177	; 0xb1
   304d8:	beq	2fc54 <__assert_fail@plt+0x1e850>
   304dc:	b	2fef0 <__assert_fail@plt+0x1eaec>
   304e0:	cmp	r3, #3
   304e4:	beq	2f690 <__assert_fail@plt+0x1e28c>
   304e8:	bls	305d8 <__assert_fail@plt+0x1f1d4>
   304ec:	cmp	r3, #4
   304f0:	beq	2f690 <__assert_fail@plt+0x1e28c>
   304f4:	cmp	r3, #6
   304f8:	beq	2f690 <__assert_fail@plt+0x1e28c>
   304fc:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30500:	cmp	r3, #43	; 0x2b
   30504:	beq	305e0 <__assert_fail@plt+0x1f1dc>
   30508:	cmp	r3, #45	; 0x2d
   3050c:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30510:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30514:	cmp	r3, #90	; 0x5a
   30518:	beq	2f690 <__assert_fail@plt+0x1e28c>
   3051c:	cmp	r3, #91	; 0x5b
   30520:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30524:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30528:	cmp	r3, #84	; 0x54
   3052c:	beq	2fc54 <__assert_fail@plt+0x1e850>
   30530:	cmp	r3, #85	; 0x55
   30534:	beq	301c4 <__assert_fail@plt+0x1edc0>
   30538:	b	2fef0 <__assert_fail@plt+0x1eaec>
   3053c:	cmp	r3, #53	; 0x35
   30540:	beq	301c4 <__assert_fail@plt+0x1edc0>
   30544:	bls	30608 <__assert_fail@plt+0x1f204>
   30548:	cmp	r3, #62	; 0x3e
   3054c:	beq	30584 <__assert_fail@plt+0x1f180>
   30550:	cmp	r3, #70	; 0x46
   30554:	beq	301c4 <__assert_fail@plt+0x1edc0>
   30558:	b	2fef0 <__assert_fail@plt+0x1eaec>
   3055c:	bl	1117c <__stack_chk_fail@plt>
   30560:	subs	r9, r4, #51	; 0x33
   30564:	rsbs	r3, r9, #0
   30568:	adcs	r3, r3, r9
   3056c:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   30570:	movw	r3, #258	; 0x102
   30574:	subs	fp, r4, r3
   30578:	rsbs	r3, fp, #0
   3057c:	adcs	r3, r3, fp
   30580:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   30584:	subs	r6, r4, #10
   30588:	rsbs	r3, r6, #0
   3058c:	adcs	r3, r3, r6
   30590:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   30594:	movw	r2, #65211	; 0xfebb
   30598:	cmp	r3, r2
   3059c:	beq	2fa28 <__assert_fail@plt+0x1e624>
   305a0:	b	2f99c <__assert_fail@plt+0x1e598>
   305a4:	cmp	r3, #191	; 0xbf
   305a8:	beq	2f9ec <__assert_fail@plt+0x1e5e8>
   305ac:	cmp	r3, #195	; 0xc3
   305b0:	beq	2ff60 <__assert_fail@plt+0x1eb5c>
   305b4:	b	2fef0 <__assert_fail@plt+0x1eaec>
   305b8:	cmp	r3, #99	; 0x63
   305bc:	beq	2f690 <__assert_fail@plt+0x1e28c>
   305c0:	bhi	306ac <__assert_fail@plt+0x1f2a8>
   305c4:	cmp	r3, #93	; 0x5d
   305c8:	beq	2ff60 <__assert_fail@plt+0x1eb5c>
   305cc:	cmp	r3, #94	; 0x5e
   305d0:	beq	2f690 <__assert_fail@plt+0x1e28c>
   305d4:	b	2fef0 <__assert_fail@plt+0x1eaec>
   305d8:	cmp	r3, #2
   305dc:	bne	2fef0 <__assert_fail@plt+0x1eaec>
   305e0:	cmp	r4, #3
   305e4:	cmpne	r4, #23
   305e8:	movne	r3, #0
   305ec:	moveq	r3, #1
   305f0:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   305f4:	cmp	r3, #167	; 0xa7
   305f8:	beq	2f4d4 <__assert_fail@plt+0x1e0d0>
   305fc:	cmp	r3, #173	; 0xad
   30600:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30604:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30608:	cmp	r3, #50	; 0x32
   3060c:	bne	2fef0 <__assert_fail@plt+0x1eaec>
   30610:	bic	r3, r4, #64	; 0x40
   30614:	subs	r5, r3, #37	; 0x25
   30618:	rsbs	r3, r5, #0
   3061c:	adcs	r3, r3, r5
   30620:	b	2f4e0 <__assert_fail@plt+0x1e0dc>
   30624:	movw	r2, #4183	; 0x1057
   30628:	cmp	r3, r2
   3062c:	beq	2f690 <__assert_fail@plt+0x1e28c>
   30630:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30634:	movw	r2, #30288	; 0x7650
   30638:	cmp	r3, r2
   3063c:	beq	301c4 <__assert_fail@plt+0x1edc0>
   30640:	add	r2, r2, #38	; 0x26
   30644:	cmp	r3, r2
   30648:	beq	302b0 <__assert_fail@plt+0x1eeac>
   3064c:	b	2fef0 <__assert_fail@plt+0x1eaec>
   30650:	cmp	r3, #18
   30654:	beq	305e0 <__assert_fail@plt+0x1f1dc>
   30658:	b	2fef0 <__assert_fail@plt+0x1eaec>
   3065c:	cmp	r5, #46	; 0x2e
   30660:	bcs	30784 <__assert_fail@plt+0x1f380>
   30664:	cmp	r5, #45	; 0x2d
   30668:	bne	2fd2c <__assert_fail@plt+0x1e928>
   3066c:	subs	r2, r4, #2
   30670:	rsbs	r3, r2, #0
   30674:	adcs	r3, r3, r2
   30678:	b	303e0 <__assert_fail@plt+0x1efdc>
   3067c:	ldrb	r2, [sl, #44]	; 0x2c
   30680:	movw	r3, #16712	; 0x4148
   30684:	movt	r3, #9
   30688:	cmp	r2, #45	; 0x2d
   3068c:	beq	3066c <__assert_fail@plt+0x1f268>
   30690:	ldrb	r3, [r3, #7]
   30694:	cmp	r3, #0
   30698:	beq	3066c <__assert_fail@plt+0x1f268>
   3069c:	subs	r5, r4, #5
   306a0:	rsbs	r3, r5, #0
   306a4:	adcs	r3, r3, r5
   306a8:	b	303e0 <__assert_fail@plt+0x1efdc>
   306ac:	cmp	r3, #101	; 0x65
   306b0:	beq	2f9ec <__assert_fail@plt+0x1e5e8>
   306b4:	cmp	r3, #105	; 0x69
   306b8:	bne	2fef0 <__assert_fail@plt+0x1eaec>
   306bc:	b	2f690 <__assert_fail@plt+0x1e28c>
   306c0:	cmp	r5, #48	; 0x30
   306c4:	bls	3065c <__assert_fail@plt+0x1f258>
   306c8:	cmp	r5, #85	; 0x55
   306cc:	beq	30758 <__assert_fail@plt+0x1f354>
   306d0:	cmp	r5, #89	; 0x59
   306d4:	beq	3066c <__assert_fail@plt+0x1f268>
   306d8:	cmp	r5, #83	; 0x53
   306dc:	bne	2fd2c <__assert_fail@plt+0x1e928>
   306e0:	subs	fp, r4, #4
   306e4:	rsbs	r3, fp, #0
   306e8:	adcs	r3, r3, fp
   306ec:	b	303e0 <__assert_fail@plt+0x1efdc>
   306f0:	cmp	r5, #140	; 0x8c
   306f4:	beq	3066c <__assert_fail@plt+0x1f268>
   306f8:	cmp	r5, #167	; 0xa7
   306fc:	bne	2fd2c <__assert_fail@plt+0x1e928>
   30700:	subs	lr, r4, #19
   30704:	rsbs	r3, lr, #0
   30708:	adcs	r3, r3, lr
   3070c:	b	303e0 <__assert_fail@plt+0x1efdc>
   30710:	subs	r6, r4, #1
   30714:	rsbs	r3, r6, #0
   30718:	adcs	r3, r3, r6
   3071c:	b	303e0 <__assert_fail@plt+0x1efdc>
   30720:	movw	r3, #57005	; 0xdead
   30724:	cmp	r5, r3
   30728:	bne	2fd2c <__assert_fail@plt+0x1e928>
   3072c:	b	3066c <__assert_fail@plt+0x1f268>
   30730:	movw	r3, #30288	; 0x7650
   30734:	cmp	r5, r3
   30738:	beq	30758 <__assert_fail@plt+0x1f354>
   3073c:	movw	r3, #33303	; 0x8217
   30740:	cmp	r5, r3
   30744:	beq	30710 <__assert_fail@plt+0x1f30c>
   30748:	movw	r3, #18056	; 0x4688
   3074c:	cmp	r5, r3
   30750:	bne	2fd2c <__assert_fail@plt+0x1e928>
   30754:	b	3066c <__assert_fail@plt+0x1f268>
   30758:	subs	r1, r4, #3
   3075c:	rsbs	r3, r1, #0
   30760:	adcs	r3, r3, r1
   30764:	b	303e0 <__assert_fail@plt+0x1efdc>
   30768:	cmp	r5, #93	; 0x5d
   3076c:	beq	3066c <__assert_fail@plt+0x1f268>
   30770:	cmp	r5, #101	; 0x65
   30774:	beq	30710 <__assert_fail@plt+0x1f30c>
   30778:	cmp	r5, #92	; 0x5c
   3077c:	beq	3066c <__assert_fail@plt+0x1f268>
   30780:	b	2fd2c <__assert_fail@plt+0x1e928>
   30784:	subs	r9, r4, #17
   30788:	rsbs	r3, r9, #0
   3078c:	adcs	r3, r3, r9
   30790:	b	303e0 <__assert_fail@plt+0x1efdc>
   30794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30798:	lsl	fp, r0, #6
   3079c:	movw	r7, #14352	; 0x3810
   307a0:	movt	r7, #9
   307a4:	add	r9, r7, fp
   307a8:	movw	r6, #16680	; 0x4128
   307ac:	movt	r6, #9
   307b0:	sub	sp, sp, #196	; 0xc4
   307b4:	ldr	r8, [r9, #12]
   307b8:	mov	sl, r1
   307bc:	ldr	r3, [r6]
   307c0:	mov	ip, r2
   307c4:	cmp	r8, #0
   307c8:	str	r3, [sp, #188]	; 0xbc
   307cc:	movne	r0, #1
   307d0:	beq	307ec <__assert_fail@plt+0x1f3e8>
   307d4:	ldr	r2, [sp, #188]	; 0xbc
   307d8:	ldr	r3, [r6]
   307dc:	cmp	r2, r3
   307e0:	bne	30b9c <__assert_fail@plt+0x1f798>
   307e4:	add	sp, sp, #196	; 0xc4
   307e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   307ec:	mov	r2, #5
   307f0:	movw	r1, #22700	; 0x58ac
   307f4:	mov	r0, r8
   307f8:	movt	r1, #6
   307fc:	str	ip, [sp, #36]	; 0x24
   30800:	bl	11170 <dcgettext@plt>
   30804:	ldr	lr, [r9, #8]
   30808:	add	r4, sp, #124	; 0x7c
   3080c:	mov	r1, #64	; 0x40
   30810:	mov	r2, #1
   30814:	mov	r3, r1
   30818:	stm	sp, {r0, lr}
   3081c:	mov	r0, r4
   30820:	bl	113f8 <__snprintf_chk@plt>
   30824:	ldrd	r0, [sl, #16]
   30828:	ldr	lr, [sl, #24]
   3082c:	ldr	ip, [sp, #36]	; 0x24
   30830:	strd	r0, [r9, #16]
   30834:	mov	r0, #1
   30838:	mov	r1, #0
   3083c:	strd	r0, [sp]
   30840:	ldrd	r2, [sl, #32]
   30844:	mov	r1, ip
   30848:	str	r4, [sp, #16]
   3084c:	mov	r0, r8
   30850:	strd	r2, [sp, #8]
   30854:	mov	r2, lr
   30858:	str	r8, [r9, #44]	; 0x2c
   3085c:	str	ip, [sp, #36]	; 0x24
   30860:	bl	1502c <__assert_fail@plt+0x3c28>
   30864:	ldr	ip, [sp, #36]	; 0x24
   30868:	cmp	r0, #0
   3086c:	str	r0, [sp, #28]
   30870:	str	r0, [r9, #12]
   30874:	moveq	r2, #0
   30878:	moveq	r3, #0
   3087c:	strdeq	r2, [r9, #24]
   30880:	beq	307d4 <__assert_fail@plt+0x1f3d0>
   30884:	ldr	r3, [sp, #28]
   30888:	mov	r2, #2048	; 0x800
   3088c:	ldrd	r4, [sl, #8]
   30890:	str	r3, [sp, #84]	; 0x54
   30894:	and	r4, r4, r2
   30898:	mov	r3, #0
   3089c:	and	r5, r5, r3
   308a0:	strd	r4, [sp, #40]	; 0x28
   308a4:	ldrd	r2, [sp, #40]	; 0x28
   308a8:	ldrd	r4, [sl, #32]
   308ac:	orrs	r3, r2, r3
   308b0:	strd	r4, [sp, #72]	; 0x48
   308b4:	strd	r4, [sp, #88]	; 0x58
   308b8:	bne	30ad8 <__assert_fail@plt+0x1f6d4>
   308bc:	ldrd	r4, [sp, #72]	; 0x48
   308c0:	cmp	r5, #0
   308c4:	cmpeq	r4, #12
   308c8:	bls	30a70 <__assert_fail@plt+0x1f66c>
   308cc:	movw	r1, #22804	; 0x5914
   308d0:	movt	r1, #6
   308d4:	str	ip, [sp, #36]	; 0x24
   308d8:	bl	110f8 <strcmp@plt>
   308dc:	ldr	ip, [sp, #36]	; 0x24
   308e0:	subs	r2, r0, #0
   308e4:	bne	30a70 <__assert_fail@plt+0x1f66c>
   308e8:	ldr	r8, [sp, #28]
   308ec:	mov	r1, #0
   308f0:	mov	r3, #0
   308f4:	ldrb	r0, [r8, #5]
   308f8:	ldrb	r4, [r8, #4]
   308fc:	ldrb	r2, [r8, #7]
   30900:	strd	r0, [sp, #48]	; 0x30
   30904:	mov	r1, #0
   30908:	ldrb	r0, [r8, #6]
   3090c:	strd	r2, [sp, #64]	; 0x40
   30910:	add	r2, r8, #12
   30914:	str	r2, [sp, #84]	; 0x54
   30918:	strd	r0, [sp, #56]	; 0x38
   3091c:	lsr	r1, r4, #24
   30920:	lsl	r0, r4, #8
   30924:	ldrd	r4, [sp, #48]	; 0x30
   30928:	adds	r0, r0, r4
   3092c:	adc	r1, r1, r5
   30930:	ldrd	r4, [sp, #72]	; 0x48
   30934:	lsl	r3, r1, #8
   30938:	subs	r4, r4, #12
   3093c:	sbc	r5, r5, #0
   30940:	strd	r4, [sp, #88]	; 0x58
   30944:	orr	r4, r3, r0, lsr #24
   30948:	lsl	r5, r0, #8
   3094c:	str	r4, [sp, #44]	; 0x2c
   30950:	str	r5, [sp, #40]	; 0x28
   30954:	ldrd	r0, [sp, #40]	; 0x28
   30958:	ldrd	r4, [sp, #56]	; 0x38
   3095c:	adds	r0, r0, r4
   30960:	adc	r1, r1, r5
   30964:	strd	r0, [sp, #48]	; 0x30
   30968:	ldr	r3, [sp, #52]	; 0x34
   3096c:	mov	r1, #0
   30970:	ldrb	r0, [r8, #8]
   30974:	ldr	r8, [sp, #48]	; 0x30
   30978:	lsl	r5, r3, #8
   3097c:	ldrd	r2, [sp, #64]	; 0x40
   30980:	strd	r0, [sp, #56]	; 0x38
   30984:	ldr	r1, [sp, #28]
   30988:	lsl	r4, r8, #8
   3098c:	adds	r2, r2, r4
   30990:	orr	r5, r5, r8, lsr #24
   30994:	adc	r3, r3, r5
   30998:	ldr	r5, [sp, #28]
   3099c:	ldrb	r0, [r1, #9]
   309a0:	mov	r1, #0
   309a4:	strd	r2, [sp, #48]	; 0x30
   309a8:	ldrb	r4, [r5, #10]
   309ac:	mov	r5, #0
   309b0:	strd	r0, [sp, #72]	; 0x48
   309b4:	lsl	r1, r3, #8
   309b8:	ldr	r3, [sp, #48]	; 0x30
   309bc:	orr	r1, r1, r2, lsr #24
   309c0:	strd	r4, [sp, #48]	; 0x30
   309c4:	ldr	r5, [sp, #28]
   309c8:	lsl	r0, r3, #8
   309cc:	ldrd	r2, [sp, #56]	; 0x38
   309d0:	adds	r0, r0, r2
   309d4:	ldrb	r4, [r5, #11]
   309d8:	adc	r1, r1, r3
   309dc:	mov	r5, #0
   309e0:	lsl	r3, r0, #8
   309e4:	lsl	r8, r1, #8
   309e8:	strd	r4, [sp, #56]	; 0x38
   309ec:	orr	r2, r8, r0, lsr #24
   309f0:	str	r3, [sp, #40]	; 0x28
   309f4:	str	r2, [sp, #44]	; 0x2c
   309f8:	ldrd	r4, [sp, #72]	; 0x48
   309fc:	ldrd	r2, [sp, #40]	; 0x28
   30a00:	adds	r2, r2, r4
   30a04:	adc	r3, r3, r5
   30a08:	lsl	r4, r2, #8
   30a0c:	lsl	r5, r3, #8
   30a10:	orr	r5, r5, r2, lsr #24
   30a14:	ldrd	r2, [sp, #48]	; 0x30
   30a18:	adds	r2, r2, r4
   30a1c:	adc	r3, r3, r5
   30a20:	lsl	r0, r2, #8
   30a24:	lsl	r1, r3, #8
   30a28:	orr	r1, r1, r2, lsr #24
   30a2c:	ldrd	r2, [sp, #56]	; 0x38
   30a30:	adds	r2, r2, r0
   30a34:	adc	r3, r3, r1
   30a38:	orrs	r5, r2, r3
   30a3c:	beq	30a60 <__assert_fail@plt+0x1f65c>
   30a40:	add	r1, sp, #88	; 0x58
   30a44:	add	r0, sp, #84	; 0x54
   30a48:	str	r1, [sp]
   30a4c:	str	ip, [sp, #36]	; 0x24
   30a50:	bl	1995c <__assert_fail@plt+0x8558>
   30a54:	ldr	ip, [sp, #36]	; 0x24
   30a58:	cmp	r0, #0
   30a5c:	bne	30b78 <__assert_fail@plt+0x1f774>
   30a60:	ldr	r4, [sp, #88]	; 0x58
   30a64:	ldr	r1, [sp, #92]	; 0x5c
   30a68:	ldr	r2, [r9, #12]
   30a6c:	b	30a7c <__assert_fail@plt+0x1f678>
   30a70:	ldr	r2, [sp, #28]
   30a74:	ldr	r4, [sp, #72]	; 0x48
   30a78:	ldr	r1, [sp, #76]	; 0x4c
   30a7c:	cmp	r2, #0
   30a80:	str	r4, [r9, #24]
   30a84:	str	r1, [r9, #28]
   30a88:	moveq	r0, r2
   30a8c:	beq	307d4 <__assert_fail@plt+0x1f3d0>
   30a90:	add	r7, r7, fp
   30a94:	ldr	r3, [r7, #56]	; 0x38
   30a98:	cmp	r3, #0
   30a9c:	streq	r3, [r9, #36]	; 0x24
   30aa0:	moveq	r0, #1
   30aa4:	streq	r3, [r9, #40]	; 0x28
   30aa8:	beq	307d4 <__assert_fail@plt+0x1f3d0>
   30aac:	add	r3, r9, #36	; 0x24
   30ab0:	mov	r0, ip
   30ab4:	str	r1, [sp, #4]
   30ab8:	add	r9, r9, #40	; 0x28
   30abc:	str	r4, [sp]
   30ac0:	mov	r1, sl
   30ac4:	str	r3, [sp, #8]
   30ac8:	str	r9, [sp, #12]
   30acc:	bl	2f0a0 <__assert_fail@plt+0x1dc9c>
   30ad0:	mov	r0, #1
   30ad4:	b	307d4 <__assert_fail@plt+0x1f3d0>
   30ad8:	ldr	r1, [sp, #28]
   30adc:	add	r0, sp, #96	; 0x60
   30ae0:	str	ip, [sp, #36]	; 0x24
   30ae4:	bl	1863c <__assert_fail@plt+0x7238>
   30ae8:	ldr	r3, [sp, #96]	; 0x60
   30aec:	ldr	ip, [sp, #36]	; 0x24
   30af0:	cmp	r3, #1
   30af4:	beq	30b20 <__assert_fail@plt+0x1f71c>
   30af8:	mov	r2, #5
   30afc:	mov	r0, r8
   30b00:	movw	r1, #22716	; 0x58bc
   30b04:	movt	r1, #6
   30b08:	bl	11170 <dcgettext@plt>
   30b0c:	ldr	r1, [r9, #8]
   30b10:	ldr	r2, [sp, #96]	; 0x60
   30b14:	bl	4b9ec <warn@@Base>
   30b18:	mov	r0, #0
   30b1c:	b	307d4 <__assert_fail@plt+0x1f3d0>
   30b20:	ldrd	r4, [sp, #112]	; 0x70
   30b24:	ldrd	r2, [sl, #48]	; 0x30
   30b28:	cmp	r5, r3
   30b2c:	cmpeq	r4, r2
   30b30:	beq	30b54 <__assert_fail@plt+0x1f750>
   30b34:	mov	r0, r8
   30b38:	mov	r2, #5
   30b3c:	movw	r1, #22764	; 0x58ec
   30b40:	movt	r1, #6
   30b44:	bl	11170 <dcgettext@plt>
   30b48:	ldr	r1, [r9, #8]
   30b4c:	bl	4b9ec <warn@@Base>
   30b50:	b	30b18 <__assert_fail@plt+0x1f714>
   30b54:	ldr	r1, [sp, #84]	; 0x54
   30b58:	ldrd	r4, [sp, #88]	; 0x58
   30b5c:	add	r1, r1, r0
   30b60:	ldrd	r2, [sp, #104]	; 0x68
   30b64:	subs	r4, r4, r0
   30b68:	sbc	r5, r5, #0
   30b6c:	str	r1, [sp, #84]	; 0x54
   30b70:	strd	r4, [sp, #88]	; 0x58
   30b74:	b	30a38 <__assert_fail@plt+0x1f634>
   30b78:	ldr	r0, [r9, #12]
   30b7c:	str	ip, [sp, #36]	; 0x24
   30b80:	bl	1111c <free@plt>
   30b84:	ldr	r2, [sp, #84]	; 0x54
   30b88:	ldr	r4, [sp, #88]	; 0x58
   30b8c:	ldr	r1, [sp, #92]	; 0x5c
   30b90:	str	r2, [r9, #12]
   30b94:	ldr	ip, [sp, #36]	; 0x24
   30b98:	b	30a7c <__assert_fail@plt+0x1f678>
   30b9c:	bl	1117c <__stack_chk_fail@plt>
   30ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30ba4:	movw	r7, #16680	; 0x4128
   30ba8:	movt	r7, #9
   30bac:	sub	sp, sp, #84	; 0x54
   30bb0:	mov	r9, r2
   30bb4:	mov	r8, r0
   30bb8:	ldr	r3, [r7]
   30bbc:	mov	sl, r1
   30bc0:	str	r7, [sp, #24]
   30bc4:	str	r3, [sp, #76]	; 0x4c
   30bc8:	bl	1d244 <__assert_fail@plt+0xbe40>
   30bcc:	cmp	r0, #0
   30bd0:	str	r0, [sp, #28]
   30bd4:	str	r0, [sp, #36]	; 0x24
   30bd8:	beq	30f1c <__assert_fail@plt+0x1fb18>
   30bdc:	mov	r2, #5
   30be0:	movw	r1, #22812	; 0x591c
   30be4:	mov	r0, #0
   30be8:	movt	r1, #6
   30bec:	ldrd	r4, [r8, #32]
   30bf0:	bl	11170 <dcgettext@plt>
   30bf4:	mov	r6, r0
   30bf8:	mov	r0, r8
   30bfc:	bl	132f8 <__assert_fail@plt+0x1ef4>
   30c00:	mov	r1, r6
   30c04:	mov	r2, r0
   30c08:	mov	r0, #1
   30c0c:	bl	1132c <__printf_chk@plt>
   30c10:	movw	r3, #24896	; 0x6140
   30c14:	movt	r3, #9
   30c18:	ldr	r3, [r3, #-312]	; 0xfffffec8
   30c1c:	cmp	r3, #0
   30c20:	beq	30d90 <__assert_fail@plt+0x1f98c>
   30c24:	ldrd	r2, [r8, #8]
   30c28:	mov	r0, #2048	; 0x800
   30c2c:	mov	r1, #0
   30c30:	strd	r4, [sp, #40]	; 0x28
   30c34:	and	r2, r2, r0
   30c38:	and	r3, r3, r1
   30c3c:	orrs	r0, r2, r3
   30c40:	bne	30f94 <__assert_fail@plt+0x1fb90>
   30c44:	cmp	r5, #0
   30c48:	cmpeq	r4, #12
   30c4c:	bls	30d90 <__assert_fail@plt+0x1f98c>
   30c50:	ldr	r6, [sp, #36]	; 0x24
   30c54:	movw	r1, #22804	; 0x5914
   30c58:	movt	r1, #6
   30c5c:	mov	r0, r6
   30c60:	bl	110f8 <strcmp@plt>
   30c64:	subs	ip, r0, #0
   30c68:	bne	30d90 <__assert_fail@plt+0x1f98c>
   30c6c:	ldrb	r2, [r6, #4]
   30c70:	add	r3, r6, #12
   30c74:	str	r3, [sp, #36]	; 0x24
   30c78:	mov	r3, #0
   30c7c:	mov	r7, #0
   30c80:	lsr	r1, r2, #24
   30c84:	lsl	r0, r2, #8
   30c88:	ldrb	r2, [r6, #5]
   30c8c:	adds	r2, r2, r0
   30c90:	ldrb	r0, [r6, #6]
   30c94:	adc	r3, r3, r1
   30c98:	mov	r1, #0
   30c9c:	strd	r0, [sp, #16]
   30ca0:	lsl	r1, r3, #8
   30ca4:	orr	r1, r1, r2, lsr #24
   30ca8:	lsl	r0, r2, #8
   30cac:	ldrd	r2, [sp, #16]
   30cb0:	adds	r0, r0, r2
   30cb4:	ldrb	r2, [r6, #7]
   30cb8:	adc	r1, r1, r3
   30cbc:	mov	r3, #0
   30cc0:	strd	r2, [sp, #16]
   30cc4:	lsl	r3, r1, #8
   30cc8:	orr	r3, r3, r0, lsr #24
   30ccc:	lsl	r2, r0, #8
   30cd0:	ldrd	r0, [sp, #16]
   30cd4:	adds	r2, r2, r0
   30cd8:	ldrb	r0, [r6, #8]
   30cdc:	adc	r3, r3, r1
   30ce0:	mov	r1, #0
   30ce4:	strd	r0, [sp, #16]
   30ce8:	lsl	r1, r3, #8
   30cec:	orr	r1, r1, r2, lsr #24
   30cf0:	lsl	r0, r2, #8
   30cf4:	ldrd	r2, [sp, #16]
   30cf8:	adds	r0, r0, r2
   30cfc:	ldrb	r2, [r6, #9]
   30d00:	adc	r1, r1, r3
   30d04:	mov	r3, #0
   30d08:	strd	r2, [sp, #16]
   30d0c:	lsl	r3, r1, #8
   30d10:	orr	r3, r3, r0, lsr #24
   30d14:	lsl	r2, r0, #8
   30d18:	ldrd	r0, [sp, #16]
   30d1c:	adds	r2, r2, r0
   30d20:	ldrb	r0, [r6, #10]
   30d24:	adc	r3, r3, r1
   30d28:	mov	r1, #0
   30d2c:	ldrb	r6, [r6, #11]
   30d30:	strd	r0, [sp, #16]
   30d34:	lsl	r1, r3, #8
   30d38:	orr	r1, r1, r2, lsr #24
   30d3c:	lsl	r0, r2, #8
   30d40:	ldrd	r2, [sp, #16]
   30d44:	adds	r0, r0, r2
   30d48:	adc	r1, r1, r3
   30d4c:	lsl	r2, r0, #8
   30d50:	lsl	r3, r1, #8
   30d54:	orr	r3, r3, r0, lsr #24
   30d58:	subs	r0, r4, #12
   30d5c:	sbc	r1, r5, #0
   30d60:	adds	r2, r2, r6
   30d64:	adc	r3, r3, r7
   30d68:	strd	r0, [sp, #40]	; 0x28
   30d6c:	orrs	r7, r2, r3
   30d70:	beq	30d90 <__assert_fail@plt+0x1f98c>
   30d74:	add	r1, sp, #40	; 0x28
   30d78:	add	r0, sp, #36	; 0x24
   30d7c:	str	r1, [sp]
   30d80:	bl	1995c <__assert_fail@plt+0x8558>
   30d84:	cmp	r0, #0
   30d88:	beq	3104c <__assert_fail@plt+0x1fc48>
   30d8c:	ldrd	r4, [sp, #40]	; 0x28
   30d90:	cmp	r9, #0
   30d94:	bne	30f70 <__assert_fail@plt+0x1fb6c>
   30d98:	movw	r3, #16712	; 0x4148
   30d9c:	movt	r3, #9
   30da0:	ldr	lr, [r3, #68]	; 0x44
   30da4:	ldr	r6, [r3, #220]	; 0xdc
   30da8:	add	ip, lr, lr, lsl #3
   30dac:	add	ip, r6, ip, lsl #3
   30db0:	cmp	ip, r6
   30db4:	bls	30dfc <__assert_fail@plt+0x1f9f8>
   30db8:	mov	r1, r6
   30dbc:	ldr	r3, [r1, #4]
   30dc0:	cmp	r3, #9
   30dc4:	cmpne	r3, #4
   30dc8:	moveq	r0, #0
   30dcc:	movne	r0, #1
   30dd0:	bne	30df0 <__assert_fail@plt+0x1f9ec>
   30dd4:	ldr	r2, [r1, #44]	; 0x2c
   30dd8:	cmp	r2, lr
   30ddc:	bcs	30df0 <__assert_fail@plt+0x1f9ec>
   30de0:	add	r2, r2, r2, lsl #3
   30de4:	add	r2, r6, r2, lsl #3
   30de8:	cmp	r8, r2
   30dec:	beq	30f38 <__assert_fail@plt+0x1fb34>
   30df0:	add	r1, r1, #72	; 0x48
   30df4:	cmp	ip, r1
   30df8:	bhi	30dbc <__assert_fail@plt+0x1f9b8>
   30dfc:	orrs	r0, r4, r5
   30e00:	movw	r3, #16696	; 0x4138
   30e04:	ldrd	r6, [r8, #16]
   30e08:	movt	r3, #9
   30e0c:	ldr	r9, [sp, #36]	; 0x24
   30e10:	str	r3, [sp, #16]
   30e14:	beq	30f04 <__assert_fail@plt+0x1fb00>
   30e18:	cmp	r5, #0
   30e1c:	cmpeq	r4, #16
   30e20:	mov	r8, r4
   30e24:	movw	r1, #1980	; 0x7bc
   30e28:	mov	r0, #1
   30e2c:	movhi	r8, #16
   30e30:	movt	r1, #6
   30e34:	mov	r2, r6
   30e38:	mov	fp, r8
   30e3c:	bl	1132c <__printf_chk@plt>
   30e40:	mov	sl, #0
   30e44:	b	30e74 <__assert_fail@plt+0x1fa70>
   30e48:	movw	r1, #1992	; 0x7c8
   30e4c:	mov	r0, #1
   30e50:	movt	r1, #6
   30e54:	ldrb	r2, [r9, sl]
   30e58:	bl	1132c <__printf_chk@plt>
   30e5c:	and	r3, sl, #3
   30e60:	cmp	r3, #3
   30e64:	beq	30e98 <__assert_fail@plt+0x1fa94>
   30e68:	add	sl, sl, #1
   30e6c:	cmp	sl, #16
   30e70:	beq	30eac <__assert_fail@plt+0x1faa8>
   30e74:	cmp	fp, sl
   30e78:	bgt	30e48 <__assert_fail@plt+0x1fa44>
   30e7c:	movw	r1, #6840	; 0x1ab8
   30e80:	mov	r0, #1
   30e84:	movt	r1, #6
   30e88:	bl	1132c <__printf_chk@plt>
   30e8c:	and	r3, sl, #3
   30e90:	cmp	r3, #3
   30e94:	bne	30e68 <__assert_fail@plt+0x1fa64>
   30e98:	mov	r0, #32
   30e9c:	add	sl, sl, #1
   30ea0:	bl	112fc <putchar@plt>
   30ea4:	cmp	sl, #16
   30ea8:	bne	30e74 <__assert_fail@plt+0x1fa70>
   30eac:	mov	sl, #0
   30eb0:	ldrb	r0, [r9, sl]
   30eb4:	add	sl, sl, #1
   30eb8:	sub	r3, r0, #32
   30ebc:	cmp	r3, #94	; 0x5e
   30ec0:	movhi	r0, #46	; 0x2e
   30ec4:	bl	112fc <putchar@plt>
   30ec8:	cmp	fp, sl
   30ecc:	bgt	30eb0 <__assert_fail@plt+0x1faac>
   30ed0:	ldr	r3, [sp, #16]
   30ed4:	mov	r0, #10
   30ed8:	add	r9, r9, r8
   30edc:	ldr	r1, [r3]
   30ee0:	bl	111ac <_IO_putc@plt>
   30ee4:	asr	r3, fp, #31
   30ee8:	mov	r2, fp
   30eec:	subs	r4, r4, r2
   30ef0:	sbc	r5, r5, r3
   30ef4:	adds	r6, r6, fp
   30ef8:	adc	r7, r7, r3
   30efc:	orrs	r0, r4, r5
   30f00:	bne	30e18 <__assert_fail@plt+0x1fa14>
   30f04:	ldr	r0, [sp, #28]
   30f08:	bl	1111c <free@plt>
   30f0c:	ldr	r7, [sp, #16]
   30f10:	mov	r0, #10
   30f14:	ldr	r1, [r7]
   30f18:	bl	111ac <_IO_putc@plt>
   30f1c:	ldr	r7, [sp, #24]
   30f20:	ldr	r2, [sp, #76]	; 0x4c
   30f24:	ldr	r3, [r7]
   30f28:	cmp	r2, r3
   30f2c:	bne	31078 <__assert_fail@plt+0x1fc74>
   30f30:	add	sp, sp, #84	; 0x54
   30f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30f38:	ldrd	r2, [r1, #32]
   30f3c:	orrs	r7, r2, r3
   30f40:	beq	30df0 <__assert_fail@plt+0x1f9ec>
   30f44:	ldr	r3, [r1, #40]	; 0x28
   30f48:	cmp	r3, lr
   30f4c:	bcs	30df0 <__assert_fail@plt+0x1f9ec>
   30f50:	mov	r2, #5
   30f54:	movw	r1, #22876	; 0x595c
   30f58:	movt	r1, #6
   30f5c:	bl	11170 <dcgettext@plt>
   30f60:	mov	r1, r0
   30f64:	mov	r0, #1
   30f68:	bl	1132c <__printf_chk@plt>
   30f6c:	b	30dfc <__assert_fail@plt+0x1f9f8>
   30f70:	mov	r3, #0
   30f74:	ldr	r2, [sp, #36]	; 0x24
   30f78:	mov	r0, sl
   30f7c:	strd	r4, [sp]
   30f80:	mov	r1, r8
   30f84:	str	r3, [sp, #8]
   30f88:	str	r3, [sp, #12]
   30f8c:	bl	2f0a0 <__assert_fail@plt+0x1dc9c>
   30f90:	b	30dfc <__assert_fail@plt+0x1f9f8>
   30f94:	add	r0, sp, #48	; 0x30
   30f98:	ldr	r1, [sp, #36]	; 0x24
   30f9c:	bl	1863c <__assert_fail@plt+0x7238>
   30fa0:	ldr	r3, [sp, #48]	; 0x30
   30fa4:	cmp	r3, #1
   30fa8:	mov	ip, r0
   30fac:	beq	30fe4 <__assert_fail@plt+0x1fbe0>
   30fb0:	mov	r2, #5
   30fb4:	movw	r1, #22716	; 0x58bc
   30fb8:	mov	r0, #0
   30fbc:	movt	r1, #6
   30fc0:	bl	11170 <dcgettext@plt>
   30fc4:	mov	r4, r0
   30fc8:	mov	r0, r8
   30fcc:	bl	132f8 <__assert_fail@plt+0x1ef4>
   30fd0:	ldr	r2, [sp, #48]	; 0x30
   30fd4:	mov	r1, r0
   30fd8:	mov	r0, r4
   30fdc:	bl	4b9ec <warn@@Base>
   30fe0:	b	30f1c <__assert_fail@plt+0x1fb18>
   30fe4:	ldrd	r6, [sp, #64]	; 0x40
   30fe8:	ldrd	r2, [r8, #48]	; 0x30
   30fec:	cmp	r7, r3
   30ff0:	cmpeq	r6, r2
   30ff4:	beq	31028 <__assert_fail@plt+0x1fc24>
   30ff8:	mov	r2, #5
   30ffc:	movw	r1, #22764	; 0x58ec
   31000:	mov	r0, #0
   31004:	movt	r1, #6
   31008:	bl	11170 <dcgettext@plt>
   3100c:	mov	r4, r0
   31010:	mov	r0, r8
   31014:	bl	132f8 <__assert_fail@plt+0x1ef4>
   31018:	mov	r1, r0
   3101c:	mov	r0, r4
   31020:	bl	4b9ec <warn@@Base>
   31024:	b	30f1c <__assert_fail@plt+0x1fb18>
   31028:	ldr	lr, [sp, #36]	; 0x24
   3102c:	ldrd	r0, [sp, #40]	; 0x28
   31030:	add	lr, lr, ip
   31034:	ldrd	r2, [sp, #56]	; 0x38
   31038:	subs	r0, r0, ip
   3103c:	sbc	r1, r1, #0
   31040:	str	lr, [sp, #36]	; 0x24
   31044:	strd	r0, [sp, #40]	; 0x28
   31048:	b	30d6c <__assert_fail@plt+0x1f968>
   3104c:	mov	r2, #5
   31050:	movw	r1, #22840	; 0x5938
   31054:	movt	r1, #6
   31058:	bl	11170 <dcgettext@plt>
   3105c:	mov	r4, r0
   31060:	mov	r0, r8
   31064:	bl	132f8 <__assert_fail@plt+0x1ef4>
   31068:	mov	r1, r0
   3106c:	mov	r0, r4
   31070:	bl	4b2b0 <error@@Base>
   31074:	b	30f1c <__assert_fail@plt+0x1fb18>
   31078:	bl	1117c <__stack_chk_fail@plt>
   3107c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31080:	movw	r4, #16680	; 0x4128
   31084:	movt	r4, #9
   31088:	sub	sp, sp, #308	; 0x134
   3108c:	mov	r1, #0
   31090:	movw	r2, #45352	; 0xb128
   31094:	ldr	ip, [r4]
   31098:	mov	r3, r1
   3109c:	movt	r2, #2
   310a0:	str	r2, [sp]
   310a4:	mvn	r2, #-1879048182	; 0x9000000a
   310a8:	str	r4, [sp, #76]	; 0x4c
   310ac:	str	ip, [sp, #300]	; 0x12c
   310b0:	str	r0, [sp, #80]	; 0x50
   310b4:	bl	1bf38 <__assert_fail@plt+0xab34>
   310b8:	movw	r0, #22972	; 0x59bc
   310bc:	movt	r0, #6
   310c0:	bl	13438 <__assert_fail@plt+0x2034>
   310c4:	subs	r3, r0, #0
   310c8:	beq	310fc <__assert_fail@plt+0x1fcf8>
   310cc:	ldrd	r4, [r3, #32]
   310d0:	cmp	r5, #0
   310d4:	cmpeq	r4, #24
   310d8:	beq	3199c <__assert_fail@plt+0x20598>
   310dc:	movw	r4, #16696	; 0x4138
   310e0:	movt	r4, #9
   310e4:	movw	r0, #22988	; 0x59cc
   310e8:	mov	r1, #1
   310ec:	ldr	r3, [r4]
   310f0:	movt	r0, #6
   310f4:	mov	r2, #28
   310f8:	bl	111b8 <fwrite@plt>
   310fc:	movw	r9, #16712	; 0x4148
   31100:	movt	r9, #9
   31104:	ldr	r7, [r9, #1924]	; 0x784
   31108:	cmp	r7, #0
   3110c:	beq	31368 <__assert_fail@plt+0x1ff64>
   31110:	ldr	r3, [r9, #1920]	; 0x780
   31114:	add	r3, r7, r3, lsl #4
   31118:	cmp	r7, r3
   3111c:	bcs	33308 <__assert_fail@plt+0x21f04>
   31120:	ldrd	r2, [r7]
   31124:	orrs	r5, r2, r3
   31128:	beq	33358 <__assert_fail@plt+0x21f54>
   3112c:	mov	r4, #0
   31130:	mov	r5, #0
   31134:	strd	r4, [sp, #64]	; 0x40
   31138:	mov	r4, #0
   3113c:	mov	r5, #0
   31140:	str	r5, [sp, #48]	; 0x30
   31144:	mov	r5, #0
   31148:	strd	r4, [sp, #120]	; 0x78
   3114c:	strd	r4, [sp, #88]	; 0x58
   31150:	mov	ip, #0
   31154:	ldr	r5, [sp, #68]	; 0x44
   31158:	mov	sl, #17
   3115c:	mov	fp, #0
   31160:	movt	sl, #28672	; 0x7000
   31164:	ldr	r6, [sp, #64]	; 0x40
   31168:	mov	r4, ip
   3116c:	mov	r1, r5
   31170:	str	ip, [sp, #112]	; 0x70
   31174:	mov	r5, r9
   31178:	str	ip, [sp, #132]	; 0x84
   3117c:	mov	r9, r7
   31180:	str	ip, [sp, #136]	; 0x88
   31184:	str	ip, [sp, #128]	; 0x80
   31188:	mov	r8, ip
   3118c:	str	ip, [sp, #108]	; 0x6c
   31190:	mov	r7, r1
   31194:	str	ip, [sp, #144]	; 0x90
   31198:	str	ip, [sp, #140]	; 0x8c
   3119c:	str	ip, [sp, #104]	; 0x68
   311a0:	str	ip, [sp, #72]	; 0x48
   311a4:	str	ip, [sp, #84]	; 0x54
   311a8:	str	ip, [sp, #60]	; 0x3c
   311ac:	b	3120c <__assert_fail@plt+0x1fe08>
   311b0:	cmp	r3, #0
   311b4:	cmpeq	r2, #20
   311b8:	beq	31964 <__assert_fail@plt+0x20560>
   311bc:	bls	312a4 <__assert_fail@plt+0x1fea0>
   311c0:	cmp	r3, #0
   311c4:	cmpeq	r2, #1879048200	; 0x70000008
   311c8:	beq	3193c <__assert_fail@plt+0x20538>
   311cc:	bhi	31914 <__assert_fail@plt+0x20510>
   311d0:	cmp	r3, #0
   311d4:	cmpeq	r2, #23
   311d8:	ldreq	ip, [r9, #8]
   311dc:	streq	ip, [sp, #132]	; 0x84
   311e0:	ldreq	ip, [r9, #12]
   311e4:	streq	ip, [sp, #136]	; 0x88
   311e8:	ldr	r2, [r5, #1920]	; 0x780
   311ec:	add	r9, r9, #16
   311f0:	ldr	r3, [r5, #1924]	; 0x784
   311f4:	add	r3, r3, r2, lsl #4
   311f8:	cmp	r9, r3
   311fc:	bcs	312c4 <__assert_fail@plt+0x1fec0>
   31200:	ldrd	r2, [r9]
   31204:	orrs	r0, r2, r3
   31208:	beq	312c4 <__assert_fail@plt+0x1fec0>
   3120c:	cmp	r3, #0
   31210:	cmpeq	r2, #1879048202	; 0x7000000a
   31214:	beq	3197c <__assert_fail@plt+0x20578>
   31218:	bls	311b0 <__assert_fail@plt+0x1fdac>
   3121c:	cmp	r3, fp
   31220:	cmpeq	r2, sl
   31224:	beq	318dc <__assert_fail@plt+0x204d8>
   31228:	bls	3127c <__assert_fail@plt+0x1fe78>
   3122c:	mov	r0, #41	; 0x29
   31230:	movt	r0, #28672	; 0x7000
   31234:	mov	r1, #0
   31238:	cmp	r3, r1
   3123c:	cmpeq	r2, r0
   31240:	beq	318fc <__assert_fail@plt+0x204f8>
   31244:	mov	r0, #50	; 0x32
   31248:	movt	r0, #28672	; 0x7000
   3124c:	mov	r1, #0
   31250:	cmp	r3, r1
   31254:	cmpeq	r2, r0
   31258:	beq	318e8 <__assert_fail@plt+0x204e4>
   3125c:	mov	r0, #19
   31260:	movt	r0, #28672	; 0x7000
   31264:	mov	r1, #0
   31268:	cmp	r3, r1
   3126c:	cmpeq	r2, r0
   31270:	ldrdeq	r0, [r9, #8]
   31274:	strdeq	r0, [sp, #120]	; 0x78
   31278:	b	311e8 <__assert_fail@plt+0x1fde4>
   3127c:	cmp	r3, #0
   31280:	cmpeq	r2, #1879048203	; 0x7000000b
   31284:	beq	31970 <__assert_fail@plt+0x2056c>
   31288:	mov	r0, #16
   3128c:	movt	r0, #28672	; 0x7000
   31290:	mov	r1, #0
   31294:	cmp	r3, r1
   31298:	cmpeq	r2, r0
   3129c:	ldreq	r8, [r9, #8]
   312a0:	b	311e8 <__assert_fail@plt+0x1fde4>
   312a4:	cmp	r3, #0
   312a8:	cmpeq	r2, #2
   312ac:	beq	31990 <__assert_fail@plt+0x2058c>
   312b0:	cmp	r3, #0
   312b4:	cmpeq	r2, #3
   312b8:	ldrdeq	r0, [r9, #8]
   312bc:	strdeq	r0, [sp, #88]	; 0x58
   312c0:	b	311e8 <__assert_fail@plt+0x1fde4>
   312c4:	mov	r9, r5
   312c8:	adds	r5, r8, #0
   312cc:	str	r8, [sp, #60]	; 0x3c
   312d0:	movne	r5, #1
   312d4:	cmp	r4, #0
   312d8:	moveq	r3, #0
   312dc:	andne	r3, r5, #1
   312e0:	cmp	r3, #0
   312e4:	beq	312f4 <__assert_fail@plt+0x1fef0>
   312e8:	ldr	r3, [r9, #1912]	; 0x778
   312ec:	cmp	r3, #0
   312f0:	bne	31e54 <__assert_fail@plt+0x20a50>
   312f4:	ldr	r5, [sp, #72]	; 0x48
   312f8:	cmp	r5, #0
   312fc:	beq	31394 <__assert_fail@plt+0x1ff90>
   31300:	ldr	r0, [r9, #68]	; 0x44
   31304:	movw	r3, #16712	; 0x4148
   31308:	movt	r3, #9
   3130c:	cmp	r0, #0
   31310:	beq	31350 <__assert_fail@plt+0x1ff4c>
   31314:	ldr	r3, [r3, #220]	; 0xdc
   31318:	ldr	r2, [r3, #4]
   3131c:	cmp	r2, #1879048205	; 0x7000000d
   31320:	beq	31c7c <__assert_fail@plt+0x20878>
   31324:	add	r3, r3, #72	; 0x48
   31328:	mov	r2, #0
   3132c:	b	31344 <__assert_fail@plt+0x1ff40>
   31330:	mov	r8, r3
   31334:	add	r3, r3, #72	; 0x48
   31338:	ldr	r1, [r3, #-68]	; 0xffffffbc
   3133c:	cmp	r1, #1879048205	; 0x7000000d
   31340:	beq	31c80 <__assert_fail@plt+0x2087c>
   31344:	add	r2, r2, #1
   31348:	cmp	r2, r0
   3134c:	bne	31330 <__assert_fail@plt+0x1ff2c>
   31350:	movw	r1, #25564	; 0x63dc
   31354:	mov	r2, #5
   31358:	movt	r1, #6
   3135c:	mov	r0, #0
   31360:	bl	11170 <dcgettext@plt>
   31364:	bl	4b2b0 <error@@Base>
   31368:	mov	r0, #0
   3136c:	ldr	r4, [sp, #76]	; 0x4c
   31370:	ldr	r2, [sp, #300]	; 0x12c
   31374:	ldr	r3, [r4]
   31378:	cmp	r2, r3
   3137c:	bne	337bc <__assert_fail@plt+0x223b8>
   31380:	add	sp, sp, #308	; 0x134
   31384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31388:	ldr	r0, [sp, #100]	; 0x64
   3138c:	ldr	r9, [sp, #152]	; 0x98
   31390:	bl	1111c <free@plt>
   31394:	ldr	r4, [sp, #84]	; 0x54
   31398:	ldr	r5, [sp, #104]	; 0x68
   3139c:	cmp	r4, #0
   313a0:	cmpne	r5, #0
   313a4:	beq	31594 <__assert_fail@plt+0x20190>
   313a8:	ldr	r5, [r9, #1872]	; 0x750
   313ac:	movw	r4, #16712	; 0x4148
   313b0:	movt	r4, #9
   313b4:	cmp	r5, #0
   313b8:	beq	333c8 <__assert_fail@plt+0x21fc4>
   313bc:	ldr	r0, [sp, #84]	; 0x54
   313c0:	mov	r1, #4
   313c4:	bl	3f74c <__assert_fail@plt+0x2e348>
   313c8:	subs	sl, r0, #0
   313cc:	beq	33734 <__assert_fail@plt+0x22330>
   313d0:	ldr	r6, [r4, #460]	; 0x1cc
   313d4:	movw	r1, #24736	; 0x60a0
   313d8:	cmp	r6, #0
   313dc:	beq	31dd8 <__assert_fail@plt+0x209d4>
   313e0:	movt	r1, #6
   313e4:	mov	r2, #5
   313e8:	mov	r0, #0
   313ec:	mov	r6, #0
   313f0:	bl	11170 <dcgettext@plt>
   313f4:	ldr	ip, [sp, #84]	; 0x54
   313f8:	mov	r5, #0
   313fc:	ldr	r2, [sp, #104]	; 0x68
   31400:	str	r6, [sp, #4]
   31404:	mov	r4, #4
   31408:	str	ip, [sp]
   3140c:	strd	r4, [sp, #8]
   31410:	ldr	r1, [sp, #80]	; 0x50
   31414:	str	r0, [sp, #16]
   31418:	mov	r0, r6
   3141c:	bl	1502c <__assert_fail@plt+0x3c28>
   31420:	subs	r5, r0, #0
   31424:	beq	31368 <__assert_fail@plt+0x1ff64>
   31428:	ldr	r8, [sp, #84]	; 0x54
   3142c:	movw	fp, #26492	; 0x677c
   31430:	sub	r7, sl, #4
   31434:	movt	fp, #9
   31438:	mov	r4, r5
   3143c:	mov	r0, r4
   31440:	ldr	r3, [fp]
   31444:	mov	r1, #4
   31448:	add	r6, r6, #1
   3144c:	blx	r3
   31450:	cmp	r6, r8
   31454:	add	r4, r4, #4
   31458:	str	r0, [r7, #4]!
   3145c:	bcc	3143c <__assert_fail@plt+0x20038>
   31460:	mov	r0, r5
   31464:	movw	r4, #16696	; 0x4138
   31468:	bl	1111c <free@plt>
   3146c:	mov	r2, #5
   31470:	movw	r1, #24748	; 0x60ac
   31474:	mov	r0, #0
   31478:	movt	r1, #6
   3147c:	movw	r7, #16712	; 0x4148
   31480:	bl	11170 <dcgettext@plt>
   31484:	ldr	r2, [sp, #84]	; 0x54
   31488:	movt	r4, #9
   3148c:	movt	r7, #9
   31490:	mov	r6, sl
   31494:	mov	r5, #0
   31498:	mov	r1, r0
   3149c:	mov	r0, #1
   314a0:	bl	1132c <__printf_chk@plt>
   314a4:	mov	r2, #5
   314a8:	movw	r1, #24792	; 0x60d8
   314ac:	mov	r0, #0
   314b0:	movt	r1, #6
   314b4:	bl	11170 <dcgettext@plt>
   314b8:	bl	11218 <puts@plt>
   314bc:	ldr	r8, [sp, #84]	; 0x54
   314c0:	b	314fc <__assert_fail@plt+0x200f8>
   314c4:	movw	r1, #24844	; 0x610c
   314c8:	mov	r0, #0
   314cc:	movt	r1, #6
   314d0:	mov	r2, #5
   314d4:	bl	11170 <dcgettext@plt>
   314d8:	mov	r1, r0
   314dc:	mov	r0, #1
   314e0:	bl	1132c <__printf_chk@plt>
   314e4:	add	r5, r5, #1
   314e8:	mov	r0, #10
   314ec:	ldr	r1, [r4]
   314f0:	bl	111ac <_IO_putc@plt>
   314f4:	cmp	r5, r8
   314f8:	bcs	3158c <__assert_fail@plt+0x20188>
   314fc:	mov	r2, r5
   31500:	ldr	r3, [r6]
   31504:	movw	r1, #24828	; 0x60fc
   31508:	mov	r0, #1
   3150c:	movt	r1, #6
   31510:	bl	1132c <__printf_chk@plt>
   31514:	ldr	r3, [r6], #4
   31518:	ldr	r2, [r9, #1884]	; 0x75c
   3151c:	cmp	r3, r2
   31520:	bcs	314c4 <__assert_fail@plt+0x200c0>
   31524:	ldr	r1, [r7, #1872]	; 0x750
   31528:	lsl	r3, r3, #5
   3152c:	mov	r2, #5
   31530:	add	fp, r1, r3
   31534:	ldrd	r0, [r1, r3]
   31538:	bl	16c84 <__assert_fail@plt+0x5880>
   3153c:	mov	r0, #32
   31540:	ldr	r1, [r4]
   31544:	bl	111ac <_IO_putc@plt>
   31548:	ldr	r3, [r7, #1876]	; 0x754
   3154c:	cmp	r3, #0
   31550:	beq	31564 <__assert_fail@plt+0x20160>
   31554:	ldr	r1, [fp, #16]
   31558:	ldr	r2, [r7, #1888]	; 0x760
   3155c:	cmp	r1, r2
   31560:	bcc	32550 <__assert_fail@plt+0x2114c>
   31564:	mov	r2, #5
   31568:	movw	r1, #24868	; 0x6124
   3156c:	mov	r0, #0
   31570:	movt	r1, #6
   31574:	bl	11170 <dcgettext@plt>
   31578:	ldr	r2, [fp, #16]
   3157c:	mov	r1, r0
   31580:	mov	r0, #1
   31584:	bl	1132c <__printf_chk@plt>
   31588:	b	314e4 <__assert_fail@plt+0x200e0>
   3158c:	mov	r0, sl
   31590:	bl	1111c <free@plt>
   31594:	ldr	r5, [sp, #48]	; 0x30
   31598:	ldr	ip, [sp, #112]	; 0x70
   3159c:	ldr	r0, [sp, #88]	; 0x58
   315a0:	orrs	r5, r5, ip
   315a4:	ldr	r1, [sp, #92]	; 0x5c
   315a8:	moveq	r3, #0
   315ac:	movne	r3, #1
   315b0:	orrs	r0, r0, r1
   315b4:	moveq	r3, #0
   315b8:	andne	r3, r3, #1
   315bc:	cmp	r3, #0
   315c0:	beq	31890 <__assert_fail@plt+0x2048c>
   315c4:	ldr	r3, [r9, #460]	; 0x1cc
   315c8:	ldr	r4, [sp, #48]	; 0x30
   315cc:	cmp	r3, #0
   315d0:	ldr	r5, [sp, #112]	; 0x70
   315d4:	movne	r1, #4
   315d8:	moveq	r1, #8
   315dc:	umull	r2, r3, r1, r4
   315e0:	mov	r8, r1
   315e4:	mla	r3, r1, r5, r3
   315e8:	ldrd	r4, [sp, #88]	; 0x58
   315ec:	adds	r4, r4, r2
   315f0:	adc	r5, r5, r3
   315f4:	ldrd	r2, [sp, #120]	; 0x78
   315f8:	strd	r4, [sp, #48]	; 0x30
   315fc:	ldrd	r4, [sp, #64]	; 0x40
   31600:	cmp	r5, r3
   31604:	cmpeq	r4, r2
   31608:	bcc	32b14 <__assert_fail@plt+0x21710>
   3160c:	ldrd	r4, [sp, #120]	; 0x78
   31610:	ldrd	r2, [sp, #64]	; 0x40
   31614:	subs	r2, r2, r4
   31618:	sbc	r3, r3, r5
   3161c:	ldrd	r4, [sp, #48]	; 0x30
   31620:	umull	sl, fp, r1, r2
   31624:	adds	sl, sl, r4
   31628:	mla	fp, r1, r3, fp
   3162c:	adc	fp, fp, r5
   31630:	cmp	r5, fp
   31634:	cmpeq	r4, sl
   31638:	bhi	3252c <__assert_fail@plt+0x21128>
   3163c:	ldrd	r4, [sp, #88]	; 0x58
   31640:	ldrd	r2, [sp, #88]	; 0x58
   31644:	subs	r4, sl, r4
   31648:	sbc	r5, fp, r5
   3164c:	ldr	r0, [sp, #80]	; 0x50
   31650:	strd	r4, [sp]
   31654:	bl	1d67c <__assert_fail@plt+0xc278>
   31658:	mov	r2, #5
   3165c:	movw	r1, #24992	; 0x61a0
   31660:	movt	r1, #6
   31664:	mov	r6, r0
   31668:	mov	r0, #0
   3166c:	bl	11170 <dcgettext@plt>
   31670:	strd	r4, [sp]
   31674:	mov	r2, r6
   31678:	mov	r4, #1
   3167c:	mov	r5, #0
   31680:	ldr	r1, [sp, #80]	; 0x50
   31684:	strd	r4, [sp, #8]
   31688:	str	r0, [sp, #16]
   3168c:	mov	r0, #0
   31690:	bl	1502c <__assert_fail@plt+0x3c28>
   31694:	subs	r6, r0, #0
   31698:	beq	31368 <__assert_fail@plt+0x1ff64>
   3169c:	ldr	r5, [sp, #88]	; 0x58
   316a0:	mov	r2, #5
   316a4:	movw	r1, #25020	; 0x61bc
   316a8:	mov	r0, #0
   316ac:	rsb	sl, r5, sl
   316b0:	movt	r1, #6
   316b4:	add	sl, r6, sl
   316b8:	str	sl, [sp, #60]	; 0x3c
   316bc:	bl	11170 <dcgettext@plt>
   316c0:	lsl	r7, r8, #1
   316c4:	mov	r1, r0
   316c8:	mov	r0, #1
   316cc:	bl	1132c <__printf_chk@plt>
   316d0:	mov	r2, #5
   316d4:	movw	r1, #25036	; 0x61cc
   316d8:	mov	r0, #0
   316dc:	movt	r1, #6
   316e0:	bl	11170 <dcgettext@plt>
   316e4:	mov	r1, r0
   316e8:	mov	r0, #1
   316ec:	bl	1132c <__printf_chk@plt>
   316f0:	ldrd	r4, [sp, #88]	; 0x58
   316f4:	movw	r0, #32752	; 0x7ff0
   316f8:	mov	r2, #6
   316fc:	adds	r0, r0, r4
   31700:	mov	r1, #0
   31704:	adc	r1, r1, r5
   31708:	bl	16c84 <__assert_fail@plt+0x5880>
   3170c:	movw	r0, #28620	; 0x6fcc
   31710:	movt	r0, #7
   31714:	bl	11218 <puts@plt>
   31718:	mov	r2, #5
   3171c:	movw	r1, #25060	; 0x61e4
   31720:	mov	r0, #0
   31724:	movt	r1, #6
   31728:	bl	11170 <dcgettext@plt>
   3172c:	mov	r1, r0
   31730:	mov	r0, #1
   31734:	bl	1132c <__printf_chk@plt>
   31738:	mov	r2, #5
   3173c:	movw	r1, #25080	; 0x61f8
   31740:	mov	r0, #0
   31744:	movt	r1, #6
   31748:	bl	11170 <dcgettext@plt>
   3174c:	mov	r2, #5
   31750:	movw	r1, #25104	; 0x6210
   31754:	movt	r1, #6
   31758:	mov	r5, r0
   3175c:	mov	r0, #0
   31760:	bl	11170 <dcgettext@plt>
   31764:	mov	r2, #5
   31768:	movw	r1, #25112	; 0x6218
   3176c:	movt	r1, #6
   31770:	mov	r4, r0
   31774:	mov	r0, #0
   31778:	bl	11170 <dcgettext@plt>
   3177c:	mov	r2, #5
   31780:	movw	r1, #25120	; 0x6220
   31784:	movt	r1, #6
   31788:	mov	sl, r0
   3178c:	mov	r0, #0
   31790:	bl	11170 <dcgettext@plt>
   31794:	mov	r1, r5
   31798:	mov	r3, r4
   3179c:	str	sl, [sp]
   317a0:	mov	r2, r7
   317a4:	str	r7, [sp, #4]
   317a8:	mvn	r4, #0
   317ac:	mvn	r5, #0
   317b0:	str	r0, [sp, #8]
   317b4:	mov	r0, #1
   317b8:	bl	1132c <__printf_chk@plt>
   317bc:	ldr	ip, [sp, #60]	; 0x3c
   317c0:	ldrd	r0, [sp, #88]	; 0x58
   317c4:	ldrd	r2, [sp, #88]	; 0x58
   317c8:	str	ip, [sp, #8]
   317cc:	strd	r0, [sp]
   317d0:	mov	r0, r6
   317d4:	bl	16fbc <__assert_fail@plt+0x5bb8>
   317d8:	mov	r2, #5
   317dc:	mov	sl, r0
   317e0:	mov	fp, r1
   317e4:	mov	r0, #0
   317e8:	movw	r1, #25128	; 0x6228
   317ec:	movt	r1, #6
   317f0:	bl	11170 <dcgettext@plt>
   317f4:	mov	r1, r0
   317f8:	mov	r0, #1
   317fc:	bl	1132c <__printf_chk@plt>
   31800:	cmp	fp, r5
   31804:	cmpeq	sl, r4
   31808:	beq	31888 <__assert_fail@plt+0x20484>
   3180c:	ldr	r1, [sp, #88]	; 0x58
   31810:	movw	r3, #26492	; 0x677c
   31814:	movt	r3, #9
   31818:	rsb	r0, r1, sl
   3181c:	mov	r1, r8
   31820:	ldr	r3, [r3]
   31824:	add	r0, r6, r0
   31828:	blx	r3
   3182c:	lsl	lr, r8, #3
   31830:	sub	ip, lr, #1
   31834:	sub	lr, lr, #33	; 0x21
   31838:	rsb	r2, ip, #32
   3183c:	str	r2, [sp, #84]	; 0x54
   31840:	lsr	r2, r0, ip
   31844:	ldr	r0, [sp, #84]	; 0x54
   31848:	lsr	r3, r1, ip
   3184c:	orr	r2, r2, r1, lsl r0
   31850:	orr	r2, r2, r1, lsr lr
   31854:	orrs	r1, r2, r3
   31858:	bne	32b3c <__assert_fail@plt+0x21738>
   3185c:	mov	r0, #10
   31860:	bl	112fc <putchar@plt>
   31864:	ldrd	r4, [sp, #48]	; 0x30
   31868:	cmp	fp, r5
   3186c:	cmpeq	sl, r4
   31870:	bcc	3357c <__assert_fail@plt+0x22178>
   31874:	ldrd	r4, [sp, #64]	; 0x40
   31878:	ldrd	r0, [sp, #120]	; 0x78
   3187c:	cmp	r5, r1
   31880:	cmpeq	r4, r0
   31884:	bhi	32b8c <__assert_fail@plt+0x21788>
   31888:	mov	r0, r6
   3188c:	bl	1111c <free@plt>
   31890:	ldr	r4, [sp, #128]	; 0x80
   31894:	ldr	r5, [sp, #108]	; 0x6c
   31898:	ldr	ip, [sp, #132]	; 0x84
   3189c:	orrs	r4, r4, r5
   318a0:	ldr	r4, [sp, #136]	; 0x88
   318a4:	moveq	r3, #0
   318a8:	movne	r3, #1
   318ac:	orrs	ip, ip, r4
   318b0:	moveq	r3, #0
   318b4:	andne	r3, r3, #1
   318b8:	cmp	r3, #0
   318bc:	beq	318d4 <__assert_fail@plt+0x204d0>
   318c0:	ldr	r5, [sp, #144]	; 0x90
   318c4:	ldr	ip, [sp, #140]	; 0x8c
   318c8:	cmp	r5, #0
   318cc:	cmpne	ip, #0
   318d0:	bne	320e8 <__assert_fail@plt+0x20ce4>
   318d4:	mov	r0, #1
   318d8:	b	3136c <__assert_fail@plt+0x1ff68>
   318dc:	ldrd	r2, [r9, #8]
   318e0:	strd	r2, [sp, #64]	; 0x40
   318e4:	b	311e8 <__assert_fail@plt+0x1fde4>
   318e8:	ldr	ip, [r9, #8]
   318ec:	str	ip, [sp, #128]	; 0x80
   318f0:	ldr	ip, [r9, #12]
   318f4:	str	ip, [sp, #108]	; 0x6c
   318f8:	b	311e8 <__assert_fail@plt+0x1fde4>
   318fc:	ldrd	r2, [r9, #8]
   31900:	ldr	r0, [sp, #80]	; 0x50
   31904:	stm	sp, {r6, r7}
   31908:	bl	1d67c <__assert_fail@plt+0xc278>
   3190c:	str	r0, [sp, #72]	; 0x48
   31910:	b	311e8 <__assert_fail@plt+0x1fde4>
   31914:	add	r0, r8, r8, lsl #2
   31918:	ldrd	r2, [r9, #8]
   3191c:	mov	ip, #0
   31920:	str	ip, [sp, #4]
   31924:	lsl	r0, r0, #2
   31928:	str	r0, [sp]
   3192c:	ldr	r0, [sp, #80]	; 0x50
   31930:	bl	1d67c <__assert_fail@plt+0xc278>
   31934:	mov	r4, r0
   31938:	b	311e8 <__assert_fail@plt+0x1fde4>
   3193c:	ldr	ip, [sp, #84]	; 0x54
   31940:	ldrd	r2, [r9, #8]
   31944:	lsl	r0, ip, #2
   31948:	str	r0, [sp]
   3194c:	mov	r0, #0
   31950:	str	r0, [sp, #4]
   31954:	ldr	r0, [sp, #80]	; 0x50
   31958:	bl	1d67c <__assert_fail@plt+0xc278>
   3195c:	str	r0, [sp, #104]	; 0x68
   31960:	b	311e8 <__assert_fail@plt+0x1fde4>
   31964:	ldr	ip, [r9, #8]
   31968:	str	ip, [sp, #144]	; 0x90
   3196c:	b	311e8 <__assert_fail@plt+0x1fde4>
   31970:	ldr	ip, [r9, #8]
   31974:	str	ip, [sp, #84]	; 0x54
   31978:	b	311e8 <__assert_fail@plt+0x1fde4>
   3197c:	ldr	ip, [r9, #8]
   31980:	str	ip, [sp, #48]	; 0x30
   31984:	ldr	ip, [r9, #12]
   31988:	str	ip, [sp, #112]	; 0x70
   3198c:	b	311e8 <__assert_fail@plt+0x1fde4>
   31990:	ldr	ip, [r9, #8]
   31994:	str	ip, [sp, #140]	; 0x8c
   31998:	b	311e8 <__assert_fail@plt+0x1fde4>
   3199c:	mov	r2, #5
   319a0:	movw	r1, #23020	; 0x59ec
   319a4:	mov	r0, #0
   319a8:	movt	r1, #6
   319ac:	ldr	r6, [r3, #24]
   319b0:	bl	11170 <dcgettext@plt>
   319b4:	strd	r4, [sp, #8]
   319b8:	mov	r4, #1
   319bc:	mov	r5, #0
   319c0:	ldr	r1, [sp, #80]	; 0x50
   319c4:	mov	r2, r6
   319c8:	strd	r4, [sp]
   319cc:	str	r0, [sp, #16]
   319d0:	mov	r0, #0
   319d4:	bl	1502c <__assert_fail@plt+0x3c28>
   319d8:	subs	r6, r0, #0
   319dc:	beq	310fc <__assert_fail@plt+0x1fcf8>
   319e0:	movw	fp, #26492	; 0x677c
   319e4:	movt	fp, #9
   319e8:	mov	r1, #2
   319ec:	ldr	r3, [fp]
   319f0:	blx	r3
   319f4:	ldr	r3, [fp]
   319f8:	mov	r1, #1
   319fc:	mov	r2, r0
   31a00:	add	r0, r6, #2
   31a04:	str	r2, [sp, #36]	; 0x24
   31a08:	blx	r3
   31a0c:	ldr	r3, [fp]
   31a10:	mov	r1, #1
   31a14:	mov	ip, r0
   31a18:	add	r0, r6, #3
   31a1c:	str	ip, [sp, #44]	; 0x2c
   31a20:	blx	r3
   31a24:	ldr	r4, [fp]
   31a28:	mov	r1, #1
   31a2c:	uxtb	r3, r0
   31a30:	add	r0, r6, #4
   31a34:	str	r3, [sp, #40]	; 0x28
   31a38:	blx	r4
   31a3c:	ldr	r4, [fp]
   31a40:	mov	r1, #1
   31a44:	uxtb	r8, r0
   31a48:	add	r0, r6, #5
   31a4c:	blx	r4
   31a50:	ldr	r4, [fp]
   31a54:	mov	r1, #1
   31a58:	uxtb	r7, r0
   31a5c:	add	r0, r6, #6
   31a60:	blx	r4
   31a64:	ldr	r5, [fp]
   31a68:	mov	r1, #1
   31a6c:	uxtb	r4, r0
   31a70:	add	r0, r6, #7
   31a74:	blx	r5
   31a78:	ldr	r5, [fp]
   31a7c:	mov	r1, #4
   31a80:	uxtb	r0, r0
   31a84:	str	r0, [sp, #48]	; 0x30
   31a88:	add	r0, r6, #8
   31a8c:	blx	r5
   31a90:	ldr	r5, [fp]
   31a94:	mov	r1, #4
   31a98:	mov	r9, r0
   31a9c:	add	r0, r6, #12
   31aa0:	blx	r5
   31aa4:	ldr	sl, [fp]
   31aa8:	mov	r1, #4
   31aac:	mov	r5, r0
   31ab0:	add	r0, r6, #16
   31ab4:	blx	sl
   31ab8:	ldr	sl, [fp]
   31abc:	mov	r1, #4
   31ac0:	str	r0, [sp, #64]	; 0x40
   31ac4:	add	r0, r6, #20
   31ac8:	blx	sl
   31acc:	ldr	r2, [sp, #36]	; 0x24
   31ad0:	movw	r1, #23044	; 0x5a04
   31ad4:	movt	r1, #6
   31ad8:	uxth	r2, r2
   31adc:	mov	sl, r0
   31ae0:	mov	r0, #1
   31ae4:	bl	1132c <__printf_chk@plt>
   31ae8:	ldr	ip, [sp, #44]	; 0x2c
   31aec:	movw	r1, #23076	; 0x5a24
   31af0:	mov	r0, #1
   31af4:	movt	r1, #6
   31af8:	uxtb	r2, ip
   31afc:	bl	1132c <__printf_chk@plt>
   31b00:	ldr	r3, [sp, #40]	; 0x28
   31b04:	cmp	r3, #1
   31b08:	bls	31b20 <__assert_fail@plt+0x2071c>
   31b0c:	movw	r1, #15208	; 0x3b68
   31b10:	mov	r2, r3
   31b14:	mov	r0, #1
   31b18:	movt	r1, #6
   31b1c:	bl	1132c <__printf_chk@plt>
   31b20:	cmp	r8, #0
   31b24:	moveq	r2, r8
   31b28:	beq	31b50 <__assert_fail@plt+0x2074c>
   31b2c:	cmp	r8, #1
   31b30:	moveq	r2, #32
   31b34:	beq	31b50 <__assert_fail@plt+0x2074c>
   31b38:	cmp	r8, #2
   31b3c:	moveq	r2, #64	; 0x40
   31b40:	beq	31b50 <__assert_fail@plt+0x2074c>
   31b44:	cmp	r8, #3
   31b48:	mvnne	r2, #0
   31b4c:	moveq	r2, #128	; 0x80
   31b50:	movw	r1, #23092	; 0x5a34
   31b54:	mov	r0, #1
   31b58:	movt	r1, #6
   31b5c:	bl	1132c <__printf_chk@plt>
   31b60:	cmp	r7, #0
   31b64:	moveq	r2, r7
   31b68:	beq	31b90 <__assert_fail@plt+0x2078c>
   31b6c:	cmp	r7, #1
   31b70:	moveq	r2, #32
   31b74:	beq	31b90 <__assert_fail@plt+0x2078c>
   31b78:	cmp	r7, #2
   31b7c:	moveq	r2, #64	; 0x40
   31b80:	beq	31b90 <__assert_fail@plt+0x2078c>
   31b84:	cmp	r7, #3
   31b88:	mvnne	r2, #0
   31b8c:	moveq	r2, #128	; 0x80
   31b90:	movw	r1, #23108	; 0x5a44
   31b94:	mov	r0, #1
   31b98:	movt	r1, #6
   31b9c:	bl	1132c <__printf_chk@plt>
   31ba0:	cmp	r4, #0
   31ba4:	moveq	r2, r4
   31ba8:	beq	31bd0 <__assert_fail@plt+0x207cc>
   31bac:	cmp	r4, #1
   31bb0:	moveq	r2, #32
   31bb4:	beq	31bd0 <__assert_fail@plt+0x207cc>
   31bb8:	cmp	r4, #2
   31bbc:	moveq	r2, #64	; 0x40
   31bc0:	beq	31bd0 <__assert_fail@plt+0x207cc>
   31bc4:	cmp	r4, #3
   31bc8:	mvnne	r2, #0
   31bcc:	moveq	r2, #128	; 0x80
   31bd0:	movw	r4, #16696	; 0x4138
   31bd4:	movt	r4, #9
   31bd8:	movw	r1, #23124	; 0x5a54
   31bdc:	mov	r0, #1
   31be0:	movt	r1, #6
   31be4:	bl	1132c <__printf_chk@plt>
   31be8:	ldr	r3, [r4]
   31bec:	mov	r1, #1
   31bf0:	mov	r2, #9
   31bf4:	movw	r0, #23140	; 0x5a64
   31bf8:	movt	r0, #6
   31bfc:	bl	111b8 <fwrite@plt>
   31c00:	ldr	r0, [sp, #48]	; 0x30
   31c04:	bl	16df4 <__assert_fail@plt+0x59f0>
   31c08:	movw	r0, #23152	; 0x5a70
   31c0c:	ldr	r3, [r4]
   31c10:	mov	r1, #1
   31c14:	movt	r0, #6
   31c18:	mov	r2, #15
   31c1c:	bl	111b8 <fwrite@plt>
   31c20:	cmp	r9, #19
   31c24:	ldrls	pc, [pc, r9, lsl #2]
   31c28:	b	33784 <__assert_fail@plt+0x22380>
   31c2c:	andeq	r3, r3, r0, asr r1
   31c30:	andeq	r3, r3, r4, lsr r1
   31c34:	andeq	r3, r3, r8, lsl r1
   31c38:	strdeq	r3, [r3], -ip
   31c3c:	andeq	r3, r3, r0, ror #1
   31c40:	andeq	r3, r3, r4, asr #1
   31c44:	andeq	r3, r3, r8, lsr #1
   31c48:	andeq	r3, r3, ip, lsl #1
   31c4c:	andeq	r3, r3, r0, ror r0
   31c50:	andeq	r3, r3, r4, asr r0
   31c54:	andeq	r3, r3, r8, lsr r0
   31c58:	andeq	r3, r3, ip, lsl r0
   31c5c:	andeq	r3, r3, r0
   31c60:	andeq	r2, r3, r4, ror #31
   31c64:	andeq	r2, r3, r8, asr #31
   31c68:	andeq	r2, r3, ip, lsr #31
   31c6c:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   31c70:	andeq	r2, r3, r4, ror pc
   31c74:	andeq	r2, r3, r8, asr pc
   31c78:	andeq	r2, r3, r8, lsr #28
   31c7c:	mov	r8, r3
   31c80:	mov	r2, #5
   31c84:	movw	r1, #25596	; 0x63fc
   31c88:	mov	r0, #0
   31c8c:	movt	r1, #6
   31c90:	ldrd	r4, [r8, #32]
   31c94:	bl	11170 <dcgettext@plt>
   31c98:	mov	r6, #1
   31c9c:	ldr	r2, [sp, #72]	; 0x48
   31ca0:	mov	r7, #0
   31ca4:	ldr	r1, [sp, #80]	; 0x50
   31ca8:	strd	r6, [sp]
   31cac:	strd	r4, [sp, #8]
   31cb0:	str	r0, [sp, #16]
   31cb4:	mov	r0, #0
   31cb8:	bl	1502c <__assert_fail@plt+0x3c28>
   31cbc:	cmp	r0, #0
   31cc0:	str	r0, [sp, #100]	; 0x64
   31cc4:	beq	31394 <__assert_fail@plt+0x1ff90>
   31cc8:	ldr	r3, [r8, #32]
   31ccc:	mov	r1, #8
   31cd0:	ldr	r0, [r8, #36]	; 0x24
   31cd4:	lsr	r3, r3, #2
   31cd8:	orr	r0, r3, r0, lsl #30
   31cdc:	bl	3f74c <__assert_fail@plt+0x2e348>
   31ce0:	subs	ip, r0, #0
   31ce4:	str	ip, [sp, #60]	; 0x3c
   31ce8:	beq	33750 <__assert_fail@plt+0x2234c>
   31cec:	ldr	r4, [sp, #60]	; 0x3c
   31cf0:	mov	r7, #0
   31cf4:	movw	fp, #26492	; 0x677c
   31cf8:	mov	sl, r7
   31cfc:	add	r4, r4, #8
   31d00:	movt	fp, #9
   31d04:	str	r4, [sp, #72]	; 0x48
   31d08:	mov	r6, r4
   31d0c:	ldr	r5, [sp, #100]	; 0x64
   31d10:	str	r9, [sp, #96]	; 0x60
   31d14:	b	31d50 <__assert_fail@plt+0x2094c>
   31d18:	add	sl, sl, r3
   31d1c:	ldrd	r0, [r8, #32]
   31d20:	mov	r3, #0
   31d24:	mov	r2, sl
   31d28:	cmp	r3, r1
   31d2c:	cmpeq	r2, r0
   31d30:	bhi	31db4 <__assert_fail@plt+0x209b0>
   31d34:	subs	r0, r0, #8
   31d38:	add	r7, r7, #1
   31d3c:	sbc	r1, r1, #0
   31d40:	add	r6, r6, #8
   31d44:	cmp	r1, r3
   31d48:	cmpeq	r0, r2
   31d4c:	bcc	325a4 <__assert_fail@plt+0x211a0>
   31d50:	add	r9, r5, sl
   31d54:	ldr	r3, [fp]
   31d58:	mov	r1, #1
   31d5c:	sub	r4, r6, #8
   31d60:	mov	r0, r9
   31d64:	blx	r3
   31d68:	ldr	r3, [fp]
   31d6c:	mov	r1, #1
   31d70:	strb	r0, [r6, #-8]
   31d74:	add	r0, r9, r1
   31d78:	blx	r3
   31d7c:	ldr	r3, [fp]
   31d80:	mov	r1, #2
   31d84:	strb	r0, [r6, #-7]
   31d88:	add	r0, r9, r1
   31d8c:	blx	r3
   31d90:	ldr	r3, [fp]
   31d94:	mov	r1, #4
   31d98:	strh	r0, [r6, #-6]
   31d9c:	add	r0, r9, r1
   31da0:	blx	r3
   31da4:	ldrb	r3, [r6, #-7]
   31da8:	cmp	r3, #7
   31dac:	str	r0, [r6, #-4]
   31db0:	bhi	31d18 <__assert_fail@plt+0x20914>
   31db4:	mov	r2, #5
   31db8:	movw	r1, #24048	; 0x5df0
   31dbc:	mov	r0, #0
   31dc0:	movt	r1, #6
   31dc4:	bl	11170 <dcgettext@plt>
   31dc8:	ldrb	r1, [r4, #1]
   31dcc:	bl	4b2b0 <error@@Base>
   31dd0:	mov	r0, #0
   31dd4:	b	3136c <__assert_fail@plt+0x1ff68>
   31dd8:	movt	r1, #6
   31ddc:	mov	r2, #5
   31de0:	mov	r0, r6
   31de4:	mov	r5, #0
   31de8:	bl	11170 <dcgettext@plt>
   31dec:	ldr	r4, [sp, #84]	; 0x54
   31df0:	ldr	r2, [sp, #104]	; 0x68
   31df4:	ldr	r1, [sp, #80]	; 0x50
   31df8:	stm	sp, {r4, r6}
   31dfc:	mov	r4, #8
   31e00:	strd	r4, [sp, #8]
   31e04:	str	r0, [sp, #16]
   31e08:	mov	r0, r6
   31e0c:	bl	1502c <__assert_fail@plt+0x3c28>
   31e10:	subs	r5, r0, #0
   31e14:	beq	31368 <__assert_fail@plt+0x1ff64>
   31e18:	ldr	r8, [sp, #84]	; 0x54
   31e1c:	movw	fp, #26492	; 0x677c
   31e20:	sub	r7, sl, #4
   31e24:	movt	fp, #9
   31e28:	mov	r4, r5
   31e2c:	mov	r0, r4
   31e30:	ldr	r3, [fp]
   31e34:	mov	r1, #8
   31e38:	add	r6, r6, #1
   31e3c:	blx	r3
   31e40:	cmp	r6, r8
   31e44:	add	r4, r4, #8
   31e48:	str	r0, [r7, #4]!
   31e4c:	bcc	31e2c <__assert_fail@plt+0x20a28>
   31e50:	b	31460 <__assert_fail@plt+0x2005c>
   31e54:	mov	r2, #5
   31e58:	movw	r1, #23796	; 0x5cf4
   31e5c:	mov	r0, #0
   31e60:	movt	r1, #6
   31e64:	bl	11170 <dcgettext@plt>
   31e68:	ldr	ip, [sp, #60]	; 0x3c
   31e6c:	mov	r7, #0
   31e70:	mov	r2, r4
   31e74:	str	r7, [sp, #4]
   31e78:	mov	sl, #20
   31e7c:	str	ip, [sp]
   31e80:	mov	fp, #0
   31e84:	ldr	r1, [sp, #80]	; 0x50
   31e88:	strd	sl, [sp, #8]
   31e8c:	str	r0, [sp, #16]
   31e90:	mov	r0, r7
   31e94:	bl	1502c <__assert_fail@plt+0x3c28>
   31e98:	cmp	r0, #0
   31e9c:	str	r0, [sp, #152]	; 0x98
   31ea0:	beq	312f4 <__assert_fail@plt+0x1fef0>
   31ea4:	mov	r2, #5
   31ea8:	movw	r1, #23820	; 0x5d0c
   31eac:	mov	r0, r7
   31eb0:	movt	r1, #6
   31eb4:	bl	11170 <dcgettext@plt>
   31eb8:	movw	r4, #16696	; 0x4138
   31ebc:	ldr	r2, [sp, #60]	; 0x3c
   31ec0:	movt	r4, #9
   31ec4:	mov	r1, r0
   31ec8:	mov	r0, #1
   31ecc:	bl	1132c <__printf_chk@plt>
   31ed0:	mov	r2, #5
   31ed4:	mov	r0, r7
   31ed8:	movw	r1, #23864	; 0x5d38
   31edc:	movt	r1, #6
   31ee0:	bl	11170 <dcgettext@plt>
   31ee4:	ldr	r1, [r4]
   31ee8:	bl	113d4 <fputs@plt>
   31eec:	cmp	r5, r7
   31ef0:	beq	320dc <__assert_fail@plt+0x20cd8>
   31ef4:	movw	r5, #62944	; 0xf5e0
   31ef8:	ldr	r6, [pc, #3876]	; 32e24 <__assert_fail@plt+0x21a20>
   31efc:	movt	r5, #5
   31f00:	str	r5, [sp, #100]	; 0x64
   31f04:	ldr	r5, [sp, #152]	; 0x98
   31f08:	movw	fp, #26492	; 0x677c
   31f0c:	movt	fp, #9
   31f10:	mov	sl, r7
   31f14:	movw	ip, #16712	; 0x4148
   31f18:	str	r9, [sp, #148]	; 0x94
   31f1c:	movt	ip, #9
   31f20:	str	r4, [sp, #96]	; 0x60
   31f24:	str	ip, [sp, #116]	; 0x74
   31f28:	ldr	r3, [fp]
   31f2c:	mov	r0, r5
   31f30:	mov	r1, #4
   31f34:	blx	r3
   31f38:	ldr	r3, [fp]
   31f3c:	mov	r1, #4
   31f40:	mov	r7, r0
   31f44:	add	r0, r5, #4
   31f48:	blx	r3
   31f4c:	ldr	r3, [fp]
   31f50:	mov	r1, #4
   31f54:	str	r0, [sp, #168]	; 0xa8
   31f58:	add	r0, r5, #8
   31f5c:	blx	r3
   31f60:	ldr	r3, [fp]
   31f64:	mov	r1, #4
   31f68:	mov	r8, r0
   31f6c:	add	r0, r5, #12
   31f70:	blx	r3
   31f74:	ldr	r3, [fp]
   31f78:	mov	r1, #4
   31f7c:	mov	r9, r0
   31f80:	add	r0, r5, #16
   31f84:	blx	r3
   31f88:	mov	r4, r0
   31f8c:	add	r0, sp, #168	; 0xa8
   31f90:	bl	11320 <gmtime@plt>
   31f94:	mov	r1, #128	; 0x80
   31f98:	mov	r3, r1
   31f9c:	mov	ip, r0
   31fa0:	ldr	r0, [sp, #100]	; 0x64
   31fa4:	str	r0, [sp]
   31fa8:	add	r0, sp, #172	; 0xac
   31fac:	ldr	r2, [ip, #20]
   31fb0:	add	r2, r2, #1888	; 0x760
   31fb4:	add	r2, r2, #12
   31fb8:	str	r2, [sp, #4]
   31fbc:	ldr	r2, [ip, #16]
   31fc0:	add	r2, r2, #1
   31fc4:	str	r2, [sp, #8]
   31fc8:	ldr	lr, [ip, #12]
   31fcc:	mov	r2, #1
   31fd0:	str	lr, [sp, #12]
   31fd4:	ldr	lr, [ip, #8]
   31fd8:	str	lr, [sp, #16]
   31fdc:	ldr	lr, [ip, #4]
   31fe0:	str	lr, [sp, #20]
   31fe4:	ldr	ip, [ip]
   31fe8:	str	ip, [sp, #24]
   31fec:	bl	113f8 <__snprintf_chk@plt>
   31ff0:	movw	r1, #23936	; 0x5d80
   31ff4:	mov	r0, #1
   31ff8:	movt	r1, #6
   31ffc:	mov	r2, sl
   32000:	bl	1132c <__printf_chk@plt>
   32004:	ldr	ip, [sp, #148]	; 0x94
   32008:	ldr	r1, [ip, #1876]	; 0x754
   3200c:	cmp	r1, #0
   32010:	beq	32024 <__assert_fail@plt+0x20c20>
   32014:	ldr	ip, [sp, #116]	; 0x74
   32018:	ldr	r3, [ip, #1888]	; 0x760
   3201c:	cmp	r7, r3
   32020:	bcc	3257c <__assert_fail@plt+0x21178>
   32024:	mov	r2, #5
   32028:	movw	r1, #23944	; 0x5d88
   3202c:	mov	r0, #0
   32030:	movt	r1, #6
   32034:	bl	11170 <dcgettext@plt>
   32038:	mov	r2, r7
   3203c:	mov	r1, r0
   32040:	mov	r0, #1
   32044:	bl	1132c <__printf_chk@plt>
   32048:	str	r9, [sp]
   3204c:	mov	r3, r8
   32050:	movw	r1, #23960	; 0x5d98
   32054:	mov	r0, #1
   32058:	movt	r1, #6
   3205c:	add	r2, sp, #172	; 0xac
   32060:	bl	1132c <__printf_chk@plt>
   32064:	cmp	r4, #0
   32068:	movne	r7, #0
   3206c:	bne	32080 <__assert_fail@plt+0x20c7c>
   32070:	b	32560 <__assert_fail@plt+0x2115c>
   32074:	add	r7, r7, #8
   32078:	cmp	r7, #48	; 0x30
   3207c:	beq	320b0 <__assert_fail@plt+0x20cac>
   32080:	add	r3, r6, r7
   32084:	ldr	r3, [r3, #4]
   32088:	tst	r3, r4
   3208c:	beq	32074 <__assert_fail@plt+0x20c70>
   32090:	ldr	ip, [sp, #96]	; 0x60
   32094:	eor	r4, r4, r3
   32098:	ldr	r0, [r6, r7]
   3209c:	add	r7, r7, #8
   320a0:	ldr	r1, [ip]
   320a4:	bl	113d4 <fputs@plt>
   320a8:	cmp	r7, #48	; 0x30
   320ac:	bne	32080 <__assert_fail@plt+0x20c7c>
   320b0:	cmp	r4, #0
   320b4:	bne	3258c <__assert_fail@plt+0x21188>
   320b8:	movw	r0, #25084	; 0x61fc
   320bc:	movt	r0, #7
   320c0:	bl	11218 <puts@plt>
   320c4:	ldr	r4, [sp, #60]	; 0x3c
   320c8:	add	sl, sl, #1
   320cc:	add	r5, r5, #20
   320d0:	cmp	sl, r4
   320d4:	bcc	31f28 <__assert_fail@plt+0x20b24>
   320d8:	ldr	r9, [sp, #148]	; 0x94
   320dc:	ldr	r0, [sp, #152]	; 0x98
   320e0:	bl	1111c <free@plt>
   320e4:	b	312f4 <__assert_fail@plt+0x1fef0>
   320e8:	mov	r1, #0
   320ec:	ldr	r2, [sp, #132]	; 0x84
   320f0:	mov	r3, r4
   320f4:	str	r1, [sp, #4]
   320f8:	str	ip, [sp]
   320fc:	ldr	r0, [sp, #80]	; 0x50
   32100:	bl	1d67c <__assert_fail@plt+0xc278>
   32104:	cmp	r5, #7
   32108:	add	r3, sp, #164	; 0xa4
   3210c:	ldr	r2, [sp, #140]	; 0x8c
   32110:	str	r3, [sp]
   32114:	add	r3, sp, #168	; 0xa8
   32118:	mov	r1, r0
   3211c:	ldr	r0, [sp, #80]	; 0x50
   32120:	beq	33408 <__assert_fail@plt+0x22004>
   32124:	bl	152d8 <__assert_fail@plt+0x3ed4>
   32128:	cmp	r0, #0
   3212c:	beq	31368 <__assert_fail@plt+0x1ff64>
   32130:	ldr	r3, [r9, #460]	; 0x1cc
   32134:	cmp	r3, #0
   32138:	moveq	r1, #8
   3213c:	moveq	r8, r1
   32140:	movne	r1, #4
   32144:	movne	r8, r1
   32148:	ldr	r4, [sp, #164]	; 0xa4
   3214c:	mov	r6, #0
   32150:	ldr	r3, [sp, #108]	; 0x6c
   32154:	add	r4, r4, #2
   32158:	ldr	r2, [sp, #128]	; 0x80
   3215c:	ldr	r0, [sp, #80]	; 0x50
   32160:	mul	r4, r4, r1
   32164:	str	r6, [sp, #4]
   32168:	str	r4, [sp]
   3216c:	bl	1d67c <__assert_fail@plt+0xc278>
   32170:	mov	r2, #5
   32174:	movw	r1, #25392	; 0x6330
   32178:	movt	r1, #6
   3217c:	mov	r5, r0
   32180:	mov	r0, r6
   32184:	bl	11170 <dcgettext@plt>
   32188:	stm	sp, {r4, r6}
   3218c:	mov	r2, r5
   32190:	ldr	r1, [sp, #80]	; 0x50
   32194:	mov	r4, #1
   32198:	mov	r5, #0
   3219c:	strd	r4, [sp, #8]
   321a0:	str	r0, [sp, #16]
   321a4:	mov	r0, r6
   321a8:	bl	1502c <__assert_fail@plt+0x3c28>
   321ac:	subs	r7, r0, #0
   321b0:	beq	31368 <__assert_fail@plt+0x1ff64>
   321b4:	movw	r0, #25424	; 0x6350
   321b8:	movt	r0, #6
   321bc:	bl	11218 <puts@plt>
   321c0:	mov	r2, #5
   321c4:	mov	r0, r6
   321c8:	movw	r1, #25060	; 0x61e4
   321cc:	movt	r1, #6
   321d0:	lsl	sl, r8, #1
   321d4:	bl	11170 <dcgettext@plt>
   321d8:	sub	r8, r8, r8, lsl #2
   321dc:	mov	r1, r0
   321e0:	mov	r0, #1
   321e4:	bl	1132c <__printf_chk@plt>
   321e8:	mov	r2, #5
   321ec:	mov	r0, r6
   321f0:	movw	r1, #25436	; 0x635c
   321f4:	movt	r1, #6
   321f8:	bl	11170 <dcgettext@plt>
   321fc:	mov	r2, #5
   32200:	movw	r1, #25104	; 0x6210
   32204:	movt	r1, #6
   32208:	mov	r5, r0
   3220c:	mov	r0, r6
   32210:	bl	11170 <dcgettext@plt>
   32214:	mov	r2, #5
   32218:	movw	r1, #25120	; 0x6220
   3221c:	movt	r1, #6
   32220:	mov	r4, r0
   32224:	mov	r0, r6
   32228:	bl	11170 <dcgettext@plt>
   3222c:	mov	r1, r5
   32230:	mov	r3, r4
   32234:	mov	r2, sl
   32238:	str	sl, [sp]
   3223c:	str	r0, [sp, #4]
   32240:	mov	r0, #1
   32244:	bl	1132c <__printf_chk@plt>
   32248:	ldr	r4, [sp, #128]	; 0x80
   3224c:	ldr	r5, [sp, #108]	; 0x6c
   32250:	mov	r0, r7
   32254:	mov	r2, r4
   32258:	str	r4, [sp]
   3225c:	mov	r3, r5
   32260:	str	r5, [sp, #4]
   32264:	bl	16ee4 <__assert_fail@plt+0x5ae0>
   32268:	mov	r2, #5
   3226c:	mov	r4, r0
   32270:	mov	r5, r1
   32274:	mov	r0, r6
   32278:	movw	r1, #25456	; 0x6370
   3227c:	movt	r1, #6
   32280:	bl	11170 <dcgettext@plt>
   32284:	mov	r1, r0
   32288:	mov	r0, #1
   3228c:	bl	1132c <__printf_chk@plt>
   32290:	ldr	r3, [sp, #108]	; 0x6c
   32294:	strd	r4, [sp]
   32298:	mov	r0, r7
   3229c:	ldr	r2, [sp, #128]	; 0x80
   322a0:	bl	16ee4 <__assert_fail@plt+0x5ae0>
   322a4:	mov	r2, #5
   322a8:	mov	r4, r0
   322ac:	mov	r5, r1
   322b0:	mov	r0, r6
   322b4:	movw	r1, #25476	; 0x6384
   322b8:	movt	r1, #6
   322bc:	bl	11170 <dcgettext@plt>
   322c0:	mov	r1, r0
   322c4:	mov	r0, #1
   322c8:	bl	1132c <__printf_chk@plt>
   322cc:	mov	r0, #10
   322d0:	bl	112fc <putchar@plt>
   322d4:	mov	r2, #5
   322d8:	mov	r0, r6
   322dc:	movw	r1, #25496	; 0x6398
   322e0:	movt	r1, #6
   322e4:	bl	11170 <dcgettext@plt>
   322e8:	mov	r1, r0
   322ec:	mov	r0, #1
   322f0:	bl	1132c <__printf_chk@plt>
   322f4:	mov	r2, #5
   322f8:	mov	r0, r6
   322fc:	movw	r1, #25104	; 0x6210
   32300:	movt	r1, #6
   32304:	bl	11170 <dcgettext@plt>
   32308:	mov	r2, #5
   3230c:	movw	r1, #25120	; 0x6220
   32310:	movt	r1, #6
   32314:	mov	r3, r0
   32318:	mov	r0, r6
   3231c:	str	r3, [sp, #40]	; 0x28
   32320:	bl	11170 <dcgettext@plt>
   32324:	mov	r2, #5
   32328:	movw	r1, #25236	; 0x6294
   3232c:	movt	r1, #6
   32330:	str	r0, [sp, #48]	; 0x30
   32334:	mov	r0, r6
   32338:	bl	11170 <dcgettext@plt>
   3233c:	mov	r2, #5
   32340:	movw	r1, #25248	; 0x62a0
   32344:	movt	r1, #6
   32348:	str	r0, [sp, #64]	; 0x40
   3234c:	mov	r0, r6
   32350:	bl	11170 <dcgettext@plt>
   32354:	mov	r2, #5
   32358:	movw	r1, #25256	; 0x62a8
   3235c:	movt	r1, #6
   32360:	mov	fp, r0
   32364:	mov	r0, r6
   32368:	bl	11170 <dcgettext@plt>
   3236c:	mov	r2, #5
   32370:	movw	r1, #25260	; 0x62ac
   32374:	movt	r1, #6
   32378:	mov	ip, r0
   3237c:	mov	r0, r6
   32380:	str	ip, [sp, #44]	; 0x2c
   32384:	bl	11170 <dcgettext@plt>
   32388:	ldr	r1, [sp, #48]	; 0x30
   3238c:	mov	r2, sl
   32390:	ldr	ip, [sp, #44]	; 0x2c
   32394:	ldr	r3, [sp, #40]	; 0x28
   32398:	str	r1, [sp, #4]
   3239c:	ldr	r1, [sp, #64]	; 0x40
   323a0:	str	sl, [sp]
   323a4:	str	sl, [sp, #8]
   323a8:	str	r1, [sp, #12]
   323ac:	movw	r1, #25508	; 0x63a4
   323b0:	str	fp, [sp, #16]
   323b4:	movt	r1, #6
   323b8:	str	ip, [sp, #20]
   323bc:	str	r0, [sp, #24]
   323c0:	mov	r0, #1
   323c4:	bl	1132c <__printf_chk@plt>
   323c8:	ldr	r2, [r9, #460]	; 0x1cc
   323cc:	ldr	r1, [sp, #164]	; 0xa4
   323d0:	cmp	r2, r6
   323d4:	movne	r3, #63	; 0x3f
   323d8:	moveq	r3, #143	; 0x8f
   323dc:	cmp	r1, r6
   323e0:	add	r3, r3, r8, lsl #1
   323e4:	sub	r3, r3, #1
   323e8:	str	r3, [sp, #48]	; 0x30
   323ec:	beq	333e8 <__assert_fail@plt+0x21fe4>
   323f0:	movw	r8, #16712	; 0x4148
   323f4:	mov	fp, r5
   323f8:	movt	r8, #9
   323fc:	mov	sl, r4
   32400:	ldr	r5, [sp, #128]	; 0x80
   32404:	b	32448 <__assert_fail@plt+0x21044>
   32408:	mov	r2, #5
   3240c:	movw	r1, #25536	; 0x63c0
   32410:	mov	r0, #0
   32414:	movt	r1, #6
   32418:	bl	11170 <dcgettext@plt>
   3241c:	mov	r2, r4
   32420:	mov	r1, r0
   32424:	mov	r0, #1
   32428:	bl	1132c <__printf_chk@plt>
   3242c:	mov	r0, #10
   32430:	add	r6, r6, #1
   32434:	bl	112fc <putchar@plt>
   32438:	ldr	r3, [sp, #164]	; 0xa4
   3243c:	cmp	r3, r6
   32440:	bls	333e8 <__assert_fail@plt+0x21fe4>
   32444:	ldr	r2, [r9, #460]	; 0x1cc
   32448:	ldr	r1, [sp, #168]	; 0xa8
   3244c:	add	r3, r6, r6, lsl #1
   32450:	cmp	r2, #0
   32454:	mov	r0, r7
   32458:	add	r3, r1, r3, lsl #3
   3245c:	mov	r2, r5
   32460:	ldr	r4, [r3, #8]
   32464:	ldr	r3, [r3, #12]
   32468:	strd	sl, [sp]
   3246c:	lsrne	r4, r4, #8
   32470:	orrne	r4, r4, r3, lsl #24
   32474:	moveq	r4, r3
   32478:	ldr	r3, [sp, #108]	; 0x6c
   3247c:	bl	16ee4 <__assert_fail@plt+0x5ae0>
   32480:	mov	sl, r0
   32484:	mov	r0, #32
   32488:	mov	fp, r1
   3248c:	bl	112fc <putchar@plt>
   32490:	ldr	r3, [r9, #1884]	; 0x75c
   32494:	cmp	r4, r3
   32498:	bcs	32408 <__assert_fail@plt+0x21004>
   3249c:	ldr	r1, [r8, #1872]	; 0x750
   324a0:	lsl	r3, r4, #5
   324a4:	mov	r2, #6
   324a8:	add	r4, r1, r3
   324ac:	ldrd	r0, [r1, r3]
   324b0:	bl	16c84 <__assert_fail@plt+0x5880>
   324b4:	ldrb	r0, [r4, #20]
   324b8:	and	r0, r0, #15
   324bc:	bl	186e8 <__assert_fail@plt+0x72e4>
   324c0:	mov	r2, r0
   324c4:	ldr	r0, [r4, #24]
   324c8:	str	r2, [sp, #36]	; 0x24
   324cc:	bl	19424 <__assert_fail@plt+0x8020>
   324d0:	ldr	r2, [sp, #36]	; 0x24
   324d4:	movw	r1, #25324	; 0x62ec
   324d8:	movt	r1, #6
   324dc:	mov	r3, r0
   324e0:	mov	r0, #1
   324e4:	bl	1132c <__printf_chk@plt>
   324e8:	ldr	r3, [r8, #1876]	; 0x754
   324ec:	cmp	r3, #0
   324f0:	beq	32504 <__assert_fail@plt+0x21100>
   324f4:	ldr	r1, [r4, #16]
   324f8:	ldr	r2, [r8, #1888]	; 0x760
   324fc:	cmp	r1, r2
   32500:	bcc	332f8 <__assert_fail@plt+0x21ef4>
   32504:	mov	r2, #5
   32508:	movw	r1, #24868	; 0x6124
   3250c:	mov	r0, #0
   32510:	movt	r1, #6
   32514:	bl	11170 <dcgettext@plt>
   32518:	ldr	r2, [r4, #16]
   3251c:	mov	r1, r0
   32520:	mov	r0, #1
   32524:	bl	1132c <__printf_chk@plt>
   32528:	b	3242c <__assert_fail@plt+0x21028>
   3252c:	mov	r2, #5
   32530:	movw	r1, #24964	; 0x6184
   32534:	mov	r0, #0
   32538:	movt	r1, #6
   3253c:	bl	11170 <dcgettext@plt>
   32540:	ldr	r1, [sp, #64]	; 0x40
   32544:	bl	4b2b0 <error@@Base>
   32548:	mov	r0, #0
   3254c:	b	3136c <__assert_fail@plt+0x1ff68>
   32550:	add	r1, r3, r1
   32554:	mov	r0, #25
   32558:	bl	19a8c <__assert_fail@plt+0x8688>
   3255c:	b	314e4 <__assert_fail@plt+0x200e0>
   32560:	mov	r2, #5
   32564:	mov	r0, r4
   32568:	movw	r1, #23980	; 0x5dac
   3256c:	movt	r1, #6
   32570:	bl	11170 <dcgettext@plt>
   32574:	bl	11218 <puts@plt>
   32578:	b	320c4 <__assert_fail@plt+0x20cc0>
   3257c:	add	r1, r1, r7
   32580:	mov	r0, #20
   32584:	bl	19a8c <__assert_fail@plt+0x8688>
   32588:	b	32048 <__assert_fail@plt+0x20c44>
   3258c:	mov	r2, r4
   32590:	movw	r1, #23988	; 0x5db4
   32594:	mov	r0, #1
   32598:	movt	r1, #6
   3259c:	bl	1132c <__printf_chk@plt>
   325a0:	b	320b8 <__assert_fail@plt+0x20cb4>
   325a4:	mov	r2, #5
   325a8:	movw	r1, #24084	; 0x5e14
   325ac:	mov	r0, #0
   325b0:	movt	r1, #6
   325b4:	ldr	r9, [sp, #96]	; 0x60
   325b8:	bl	11170 <dcgettext@plt>
   325bc:	movw	r5, #16696	; 0x4138
   325c0:	movt	r5, #9
   325c4:	mov	sl, r7
   325c8:	mov	r4, r0
   325cc:	mov	r0, r8
   325d0:	bl	132f8 <__assert_fail@plt+0x1ef4>
   325d4:	mov	r1, r4
   325d8:	mov	r3, r7
   325dc:	ldr	r6, [sp, #72]	; 0x48
   325e0:	mov	r7, #0
   325e4:	mov	r2, r0
   325e8:	mov	r0, #1
   325ec:	bl	1132c <__printf_chk@plt>
   325f0:	ldr	r4, [sp, #60]	; 0x3c
   325f4:	str	r5, [sp, #116]	; 0x74
   325f8:	add	ip, r4, #16
   325fc:	add	r5, r4, #20
   32600:	str	r5, [sp, #96]	; 0x60
   32604:	add	r4, r4, #24
   32608:	ldr	r5, [sp, #60]	; 0x3c
   3260c:	str	r9, [sp, #152]	; 0x98
   32610:	mov	r9, ip
   32614:	add	r5, r5, #28
   32618:	str	r4, [sp, #72]	; 0x48
   3261c:	str	r5, [sp, #60]	; 0x3c
   32620:	str	fp, [sp, #148]	; 0x94
   32624:	cmp	sl, #0
   32628:	ble	31388 <__assert_fail@plt+0x1ff84>
   3262c:	ldrb	r2, [r6, #-8]
   32630:	cmp	r2, #10
   32634:	ldrls	pc, [pc, r2, lsl #2]
   32638:	b	32aec <__assert_fail@plt+0x216e8>
   3263c:	andeq	r2, r3, r8, asr #21
   32640:	muleq	r3, r4, r9
   32644:	strdeq	r2, [r3], -r0
   32648:	muleq	r3, r0, r8
   3264c:	andeq	r2, r3, r8, lsr #16
   32650:	andeq	r2, r3, r0, lsl #16
   32654:	ldrdeq	r2, [r3], -r8
   32658:	andeq	r2, r3, r0, lsl #15
   3265c:	andeq	r2, r3, r8, lsr #14
   32660:	andeq	r2, r3, r4, lsl r7
   32664:	andeq	r2, r3, r8, ror #12
   32668:	ldr	r3, [r6, #-4]
   3266c:	movw	r1, #24556	; 0x5fec
   32670:	movt	r1, #6
   32674:	mov	r0, #1
   32678:	uxth	r2, r3
   3267c:	lsr	r3, r3, #16
   32680:	movw	fp, #16696	; 0x4138
   32684:	movt	fp, #9
   32688:	bl	1132c <__printf_chk@plt>
   3268c:	ldrb	r3, [r6, #-7]
   32690:	cmp	r3, #8
   32694:	bls	326fc <__assert_fail@plt+0x212f8>
   32698:	ldr	ip, [sp, #100]	; 0x64
   3269c:	movw	r4, #62012	; 0xf23c
   326a0:	mov	r8, #8
   326a4:	movt	r4, #7
   326a8:	add	r5, ip, r7
   326ac:	b	326c8 <__assert_fail@plt+0x212c4>
   326b0:	mov	r0, r2
   326b4:	add	r8, r8, #1
   326b8:	bl	112fc <putchar@plt>
   326bc:	ldrb	r3, [r6, #-7]
   326c0:	cmp	r3, r8
   326c4:	bls	326fc <__assert_fail@plt+0x212f8>
   326c8:	ldrb	r2, [r5, r8]
   326cc:	lsl	r3, r2, #1
   326d0:	ldrh	r3, [r4, r3]
   326d4:	tst	r3, #16
   326d8:	bne	326b0 <__assert_fail@plt+0x212ac>
   326dc:	movw	r1, #24620	; 0x602c
   326e0:	mov	r0, #1
   326e4:	movt	r1, #6
   326e8:	add	r8, r8, #1
   326ec:	bl	1132c <__printf_chk@plt>
   326f0:	ldrb	r3, [r6, #-7]
   326f4:	cmp	r3, r8
   326f8:	bhi	326c8 <__assert_fail@plt+0x212c4>
   326fc:	ldr	r1, [fp]
   32700:	mov	r0, #10
   32704:	bl	11380 <fputc@plt>
   32708:	ldrb	r3, [r6, #-7]
   3270c:	add	r7, r7, r3
   32710:	b	32a94 <__assert_fail@plt+0x21690>
   32714:	movw	r1, #24512	; 0x5fc0
   32718:	ldr	r3, [r6, #-4]
   3271c:	mov	r0, #1
   32720:	movt	r1, #6
   32724:	b	32678 <__assert_fail@plt+0x21274>
   32728:	ldr	r4, [sp, #116]	; 0x74
   3272c:	movw	r0, #24500	; 0x5fb4
   32730:	mov	r1, #1
   32734:	movt	r0, #6
   32738:	mov	r2, #11
   3273c:	movw	fp, #16696	; 0x4138
   32740:	ldr	r3, [r4]
   32744:	movt	fp, #9
   32748:	bl	111b8 <fwrite@plt>
   3274c:	ldr	r3, [r6, #-4]
   32750:	tst	r3, #1
   32754:	bne	33428 <__assert_fail@plt+0x22024>
   32758:	tst	r3, #2
   3275c:	beq	3268c <__assert_fail@plt+0x21288>
   32760:	ldr	r5, [sp, #116]	; 0x74
   32764:	movw	r0, #24484	; 0x5fa4
   32768:	mov	r1, #1
   3276c:	mov	r2, #13
   32770:	movt	r0, #6
   32774:	ldr	r3, [r5]
   32778:	bl	111b8 <fwrite@plt>
   3277c:	b	3268c <__assert_fail@plt+0x21288>
   32780:	ldr	r5, [sp, #116]	; 0x74
   32784:	movw	r0, #24456	; 0x5f88
   32788:	mov	r1, #1
   3278c:	movt	r0, #6
   32790:	mov	r2, #11
   32794:	movw	fp, #16696	; 0x4138
   32798:	ldr	r3, [r5]
   3279c:	movt	fp, #9
   327a0:	bl	111b8 <fwrite@plt>
   327a4:	ldr	r3, [r6, #-4]
   327a8:	tst	r3, #1
   327ac:	bne	33448 <__assert_fail@plt+0x22044>
   327b0:	tst	r3, #2
   327b4:	beq	3268c <__assert_fail@plt+0x21288>
   327b8:	ldr	ip, [sp, #116]	; 0x74
   327bc:	movw	r0, #24484	; 0x5fa4
   327c0:	mov	r1, #1
   327c4:	mov	r2, #13
   327c8:	movt	r0, #6
   327cc:	ldr	r3, [ip]
   327d0:	bl	111b8 <fwrite@plt>
   327d4:	b	3268c <__assert_fail@plt+0x21288>
   327d8:	ldr	r4, [sp, #116]	; 0x74
   327dc:	movw	r0, #24440	; 0x5f78
   327e0:	mov	r1, #1
   327e4:	mov	r2, #12
   327e8:	movt	r0, #6
   327ec:	movw	fp, #16696	; 0x4138
   327f0:	ldr	r3, [r4]
   327f4:	movt	fp, #9
   327f8:	bl	111b8 <fwrite@plt>
   327fc:	b	3268c <__assert_fail@plt+0x21288>
   32800:	ldr	ip, [sp, #116]	; 0x74
   32804:	movw	r0, #24424	; 0x5f68
   32808:	mov	r1, #1
   3280c:	mov	r2, #12
   32810:	movt	r0, #6
   32814:	movw	fp, #16696	; 0x4138
   32818:	ldr	r3, [ip]
   3281c:	movt	fp, #9
   32820:	bl	111b8 <fwrite@plt>
   32824:	b	3268c <__assert_fail@plt+0x21288>
   32828:	ldr	r5, [sp, #116]	; 0x74
   3282c:	movw	r0, #24372	; 0x5f34
   32830:	mov	r1, #1
   32834:	movt	r0, #6
   32838:	mov	r2, #11
   3283c:	movw	fp, #16696	; 0x4138
   32840:	ldr	r3, [r5]
   32844:	movt	fp, #9
   32848:	bl	111b8 <fwrite@plt>
   3284c:	ldr	r3, [r6, #-4]
   32850:	tst	r3, #1
   32854:	bne	33514 <__assert_fail@plt+0x22110>
   32858:	tst	r3, #2
   3285c:	bne	33558 <__assert_fail@plt+0x22154>
   32860:	tst	r3, #4
   32864:	bne	33534 <__assert_fail@plt+0x22130>
   32868:	tst	r3, #8
   3286c:	beq	3268c <__assert_fail@plt+0x21288>
   32870:	ldr	r5, [sp, #116]	; 0x74
   32874:	movw	r0, #24412	; 0x5f5c
   32878:	mov	r1, #1
   3287c:	mov	r2, #8
   32880:	movt	r0, #6
   32884:	ldr	r3, [r5]
   32888:	bl	111b8 <fwrite@plt>
   3288c:	b	3268c <__assert_fail@plt+0x21288>
   32890:	ldr	r5, [sp, #116]	; 0x74
   32894:	movw	r0, #24332	; 0x5f0c
   32898:	mov	r1, #1
   3289c:	movt	r0, #6
   328a0:	mov	r2, #11
   328a4:	movw	fp, #16696	; 0x4138
   328a8:	ldr	r3, [r5]
   328ac:	movt	fp, #9
   328b0:	bl	111b8 <fwrite@plt>
   328b4:	ldr	r3, [r6, #-4]
   328b8:	tst	r3, #1
   328bc:	bne	334f4 <__assert_fail@plt+0x220f0>
   328c0:	tst	r3, #2
   328c4:	bne	334d0 <__assert_fail@plt+0x220cc>
   328c8:	tst	r3, #4
   328cc:	beq	3268c <__assert_fail@plt+0x21288>
   328d0:	ldr	r4, [sp, #116]	; 0x74
   328d4:	movw	r0, #24364	; 0x5f2c
   328d8:	mov	r1, #1
   328dc:	mov	r2, #7
   328e0:	movt	r0, #6
   328e4:	ldr	r3, [r4]
   328e8:	bl	111b8 <fwrite@plt>
   328ec:	b	3268c <__assert_fail@plt+0x21288>
   328f0:	ldr	r4, [sp, #116]	; 0x74
   328f4:	mov	r1, #1
   328f8:	mov	r2, #20
   328fc:	movw	r0, #24260	; 0x5ec4
   32900:	movt	r0, #6
   32904:	movw	fp, #16696	; 0x4138
   32908:	ldr	r3, [r4]
   3290c:	movt	fp, #9
   32910:	bl	111b8 <fwrite@plt>
   32914:	ldr	r0, [r6, #-4]
   32918:	and	r0, r0, #31
   3291c:	bl	184c8 <__assert_fail@plt+0x70c4>
   32920:	ldr	r3, [r4]
   32924:	mov	r1, #1
   32928:	mov	r2, #10
   3292c:	movw	r0, #24284	; 0x5edc
   32930:	movt	r0, #6
   32934:	bl	111b8 <fwrite@plt>
   32938:	ldr	r0, [r6, #-4]
   3293c:	ubfx	r0, r0, #8, #5
   32940:	bl	184c8 <__assert_fail@plt+0x70c4>
   32944:	mov	r0, #41	; 0x29
   32948:	ldr	r1, [r4]
   3294c:	bl	11380 <fputc@plt>
   32950:	ldr	r3, [r6, #-4]
   32954:	tst	r3, #65536	; 0x10000
   32958:	bne	3348c <__assert_fail@plt+0x22088>
   3295c:	tst	r3, #131072	; 0x20000
   32960:	bne	33468 <__assert_fail@plt+0x22064>
   32964:	tst	r3, #262144	; 0x40000
   32968:	bne	334ac <__assert_fail@plt+0x220a8>
   3296c:	tst	r3, #524288	; 0x80000
   32970:	beq	3268c <__assert_fail@plt+0x21288>
   32974:	ldr	r4, [sp, #116]	; 0x74
   32978:	movw	r0, #24320	; 0x5f00
   3297c:	mov	r1, #1
   32980:	mov	r2, #8
   32984:	movt	r0, #6
   32988:	ldr	r3, [r4]
   3298c:	bl	111b8 <fwrite@plt>
   32990:	b	3268c <__assert_fail@plt+0x21288>
   32994:	movw	r1, #24140	; 0x5e4c
   32998:	mov	r0, #1
   3299c:	movt	r1, #6
   329a0:	bl	1132c <__printf_chk@plt>
   329a4:	ldr	ip, [sp, #152]	; 0x98
   329a8:	ldr	r4, [sp, #148]	; 0x94
   329ac:	mov	r0, r6
   329b0:	mov	r1, #4
   329b4:	ldrh	r3, [ip, #50]	; 0x32
   329b8:	cmp	r3, #8
   329bc:	ldr	r3, [r4]
   329c0:	beq	33670 <__assert_fail@plt+0x2226c>
   329c4:	blx	r3
   329c8:	ldr	r3, [r4]
   329cc:	mov	r1, #4
   329d0:	mov	r2, r0
   329d4:	mov	r0, r9
   329d8:	str	r2, [sp, #36]	; 0x24
   329dc:	blx	r3
   329e0:	ldr	r3, [r4]
   329e4:	mov	r1, #4
   329e8:	str	r0, [sp, #156]	; 0x9c
   329ec:	ldr	r0, [sp, #96]	; 0x60
   329f0:	blx	r3
   329f4:	ldr	r3, [r4]
   329f8:	mov	r1, #4
   329fc:	mov	r8, r0
   32a00:	ldr	r0, [sp, #72]	; 0x48
   32a04:	blx	r3
   32a08:	ldr	ip, [r4]
   32a0c:	mov	r1, #4
   32a10:	mov	r3, r0
   32a14:	ldr	r0, [sp, #60]	; 0x3c
   32a18:	str	r3, [sp, #40]	; 0x28
   32a1c:	blx	ip
   32a20:	ldr	ip, [r4]
   32a24:	mov	r1, #8
   32a28:	mov	fp, r0
   32a2c:	add	r0, r6, #24
   32a30:	blx	ip
   32a34:	ldr	r2, [sp, #36]	; 0x24
   32a38:	mov	r4, r0
   32a3c:	mov	r5, r1
   32a40:	mov	r0, #1
   32a44:	movw	r1, #24240	; 0x5eb0
   32a48:	movt	r1, #6
   32a4c:	bl	1132c <__printf_chk@plt>
   32a50:	ldr	ip, [sp, #116]	; 0x74
   32a54:	mov	r1, #1
   32a58:	movw	r2, #61492	; 0xf034
   32a5c:	movt	r2, #5
   32a60:	ldr	r0, [ip]
   32a64:	strd	r4, [sp]
   32a68:	bl	11338 <__fprintf_chk@plt>
   32a6c:	mov	r0, #10
   32a70:	bl	112fc <putchar@plt>
   32a74:	ldr	r3, [sp, #40]	; 0x28
   32a78:	ldr	r2, [sp, #156]	; 0x9c
   32a7c:	stm	sp, {r3, fp}
   32a80:	movw	r1, #24180	; 0x5e74
   32a84:	mov	r3, r8
   32a88:	mov	r0, #1
   32a8c:	movt	r1, #6
   32a90:	bl	1132c <__printf_chk@plt>
   32a94:	ldr	r4, [sp, #96]	; 0x60
   32a98:	sub	sl, sl, #1
   32a9c:	ldr	r5, [sp, #72]	; 0x48
   32aa0:	add	r6, r6, #8
   32aa4:	ldr	ip, [sp, #60]	; 0x3c
   32aa8:	add	r4, r4, #8
   32aac:	add	r5, r5, #8
   32ab0:	add	r9, r9, #8
   32ab4:	add	ip, ip, #8
   32ab8:	str	r4, [sp, #96]	; 0x60
   32abc:	str	r5, [sp, #72]	; 0x48
   32ac0:	str	ip, [sp, #60]	; 0x3c
   32ac4:	b	32624 <__assert_fail@plt+0x21220>
   32ac8:	movw	r1, #24120	; 0x5e38
   32acc:	mov	r0, #1
   32ad0:	movt	r1, #6
   32ad4:	ldrh	r2, [r6, #-6]
   32ad8:	ldr	r3, [r6, #-4]
   32adc:	movw	fp, #16696	; 0x4138
   32ae0:	bl	1132c <__printf_chk@plt>
   32ae4:	movt	fp, #9
   32ae8:	b	3268c <__assert_fail@plt+0x21288>
   32aec:	ldr	ip, [r6, #-4]
   32af0:	movw	r1, #24600	; 0x6018
   32af4:	ldrh	r3, [r6, #-6]
   32af8:	movt	r1, #6
   32afc:	mov	r0, #1
   32b00:	movw	fp, #16696	; 0x4138
   32b04:	str	ip, [sp]
   32b08:	movt	fp, #9
   32b0c:	bl	1132c <__printf_chk@plt>
   32b10:	b	3268c <__assert_fail@plt+0x21288>
   32b14:	mov	r2, #5
   32b18:	movw	r1, #24888	; 0x6138
   32b1c:	mov	r0, #0
   32b20:	movt	r1, #6
   32b24:	bl	11170 <dcgettext@plt>
   32b28:	ldr	r1, [sp, #120]	; 0x78
   32b2c:	ldr	r2, [sp, #64]	; 0x40
   32b30:	bl	4b2b0 <error@@Base>
   32b34:	mov	r0, #0
   32b38:	b	3136c <__assert_fail@plt+0x1ff68>
   32b3c:	ldr	ip, [sp, #60]	; 0x3c
   32b40:	mov	r0, r6
   32b44:	ldrd	r2, [sp, #88]	; 0x58
   32b48:	strd	sl, [sp]
   32b4c:	str	ip, [sp, #8]
   32b50:	bl	16fbc <__assert_fail@plt+0x5bb8>
   32b54:	mov	r2, #5
   32b58:	mov	sl, r0
   32b5c:	mov	fp, r1
   32b60:	mov	r0, #0
   32b64:	movw	r1, #25144	; 0x6238
   32b68:	movt	r1, #6
   32b6c:	bl	11170 <dcgettext@plt>
   32b70:	mov	r1, r0
   32b74:	mov	r0, #1
   32b78:	bl	1132c <__printf_chk@plt>
   32b7c:	cmp	fp, r5
   32b80:	cmpeq	sl, r4
   32b84:	bne	3185c <__assert_fail@plt+0x20458>
   32b88:	b	31888 <__assert_fail@plt+0x20484>
   32b8c:	mov	r2, #5
   32b90:	movw	r1, #25216	; 0x6280
   32b94:	mov	r0, #0
   32b98:	movt	r1, #6
   32b9c:	bl	11170 <dcgettext@plt>
   32ba0:	mov	r1, r0
   32ba4:	mov	r0, #1
   32ba8:	bl	1132c <__printf_chk@plt>
   32bac:	ldr	r4, [sp, #120]	; 0x78
   32bb0:	mov	r2, #5
   32bb4:	movw	r1, #25104	; 0x6210
   32bb8:	mov	r0, #0
   32bbc:	movt	r1, #6
   32bc0:	str	r4, [sp, #96]	; 0x60
   32bc4:	bl	11170 <dcgettext@plt>
   32bc8:	mov	r2, #5
   32bcc:	movw	r1, #25112	; 0x6218
   32bd0:	movt	r1, #6
   32bd4:	mov	r3, r0
   32bd8:	mov	r0, #0
   32bdc:	str	r3, [sp, #40]	; 0x28
   32be0:	bl	11170 <dcgettext@plt>
   32be4:	mov	r2, #5
   32be8:	movw	r1, #25120	; 0x6220
   32bec:	movt	r1, #6
   32bf0:	mov	r5, r0
   32bf4:	mov	r0, #0
   32bf8:	bl	11170 <dcgettext@plt>
   32bfc:	mov	r2, #5
   32c00:	movw	r1, #25236	; 0x6294
   32c04:	movt	r1, #6
   32c08:	mov	r4, r0
   32c0c:	mov	r0, #0
   32c10:	bl	11170 <dcgettext@plt>
   32c14:	mov	r2, #5
   32c18:	movw	r1, #25248	; 0x62a0
   32c1c:	movt	r1, #6
   32c20:	str	r0, [sp, #84]	; 0x54
   32c24:	mov	r0, #0
   32c28:	bl	11170 <dcgettext@plt>
   32c2c:	mov	r2, #5
   32c30:	movw	r1, #25256	; 0x62a8
   32c34:	movt	r1, #6
   32c38:	mov	ip, r0
   32c3c:	mov	r0, #0
   32c40:	str	ip, [sp, #44]	; 0x2c
   32c44:	bl	11170 <dcgettext@plt>
   32c48:	mov	r2, #5
   32c4c:	movw	r1, #25260	; 0x62ac
   32c50:	movt	r1, #6
   32c54:	str	r0, [sp, #72]	; 0x48
   32c58:	mov	r0, #0
   32c5c:	bl	11170 <dcgettext@plt>
   32c60:	ldr	ip, [sp, #44]	; 0x2c
   32c64:	str	r5, [sp]
   32c68:	mov	r2, r7
   32c6c:	ldr	r5, [sp, #84]	; 0x54
   32c70:	movw	r1, #25268	; 0x62b4
   32c74:	str	ip, [sp, #20]
   32c78:	movt	r1, #6
   32c7c:	ldr	ip, [sp, #72]	; 0x48
   32c80:	str	r4, [sp, #8]
   32c84:	ldr	r3, [sp, #40]	; 0x28
   32c88:	str	r5, [sp, #16]
   32c8c:	mov	r5, #0
   32c90:	str	ip, [sp, #24]
   32c94:	str	r7, [sp, #4]
   32c98:	str	r7, [sp, #12]
   32c9c:	str	r0, [sp, #28]
   32ca0:	mov	r0, #1
   32ca4:	bl	1132c <__printf_chk@plt>
   32ca8:	ldr	r4, [sp, #120]	; 0x78
   32cac:	ldr	r1, [r9, #460]	; 0x1cc
   32cb0:	mov	r3, r5
   32cb4:	sub	r0, r8, r8, lsl #2
   32cb8:	cmp	r1, #0
   32cbc:	mov	r2, r4
   32cc0:	ldrd	r4, [sp, #64]	; 0x40
   32cc4:	moveq	r1, #132	; 0x84
   32cc8:	movne	r1, #52	; 0x34
   32ccc:	cmp	r5, r3
   32cd0:	cmpeq	r4, r2
   32cd4:	add	r3, r1, r0, lsl #1
   32cd8:	sub	r3, r3, #1
   32cdc:	str	r3, [sp, #48]	; 0x30
   32ce0:	bls	33708 <__assert_fail@plt+0x22304>
   32ce4:	ldr	ip, [sp, #120]	; 0x78
   32ce8:	movw	r8, #16712	; 0x4148
   32cec:	ldr	r4, [sp, #96]	; 0x60
   32cf0:	movt	r8, #9
   32cf4:	lsl	r5, ip, #5
   32cf8:	b	32dbc <__assert_fail@plt+0x219b8>
   32cfc:	add	r7, r0, r5
   32d00:	mov	r2, #6
   32d04:	ldrd	r0, [r0, r5]
   32d08:	bl	16c84 <__assert_fail@plt+0x5880>
   32d0c:	ldrb	r0, [r7, #20]
   32d10:	and	r0, r0, #15
   32d14:	bl	186e8 <__assert_fail@plt+0x72e4>
   32d18:	mov	r2, r0
   32d1c:	ldr	r0, [r7, #24]
   32d20:	str	r2, [sp, #36]	; 0x24
   32d24:	bl	19424 <__assert_fail@plt+0x8020>
   32d28:	ldr	r2, [sp, #36]	; 0x24
   32d2c:	movw	r1, #25324	; 0x62ec
   32d30:	movt	r1, #6
   32d34:	mov	r3, r0
   32d38:	mov	r0, #1
   32d3c:	bl	1132c <__printf_chk@plt>
   32d40:	ldr	r3, [r8, #1876]	; 0x754
   32d44:	cmp	r3, #0
   32d48:	beq	32d5c <__assert_fail@plt+0x21958>
   32d4c:	ldr	r1, [r7, #16]
   32d50:	ldr	r2, [r8, #1888]	; 0x760
   32d54:	cmp	r1, r2
   32d58:	bcc	33418 <__assert_fail@plt+0x22014>
   32d5c:	mov	r2, #5
   32d60:	movw	r1, #24868	; 0x6124
   32d64:	mov	r0, #0
   32d68:	movt	r1, #6
   32d6c:	bl	11170 <dcgettext@plt>
   32d70:	ldr	r2, [r7, #16]
   32d74:	mov	r1, r0
   32d78:	mov	r0, #1
   32d7c:	bl	1132c <__printf_chk@plt>
   32d80:	mov	r0, #10
   32d84:	bl	112fc <putchar@plt>
   32d88:	mvn	r2, #0
   32d8c:	mvn	r3, #0
   32d90:	cmp	fp, r3
   32d94:	cmpeq	sl, r2
   32d98:	beq	33708 <__assert_fail@plt+0x22304>
   32d9c:	add	r4, r4, #1
   32da0:	ldrd	r0, [sp, #64]	; 0x40
   32da4:	mov	r3, #0
   32da8:	add	r5, r5, #32
   32dac:	mov	r2, r4
   32db0:	cmp	r1, r3
   32db4:	cmpeq	r0, r2
   32db8:	bls	33708 <__assert_fail@plt+0x22304>
   32dbc:	ldr	ip, [sp, #60]	; 0x3c
   32dc0:	mov	r0, r6
   32dc4:	strd	sl, [sp]
   32dc8:	ldrd	r2, [sp, #88]	; 0x58
   32dcc:	str	ip, [sp, #8]
   32dd0:	bl	16fbc <__assert_fail@plt+0x5bb8>
   32dd4:	mov	sl, r0
   32dd8:	mov	r0, #32
   32ddc:	mov	fp, r1
   32de0:	bl	112fc <putchar@plt>
   32de4:	ldr	r0, [r9, #1872]	; 0x750
   32de8:	cmp	r0, #0
   32dec:	beq	33714 <__assert_fail@plt+0x22310>
   32df0:	ldr	r3, [r8, #1884]	; 0x75c
   32df4:	cmp	r3, r4
   32df8:	bhi	32cfc <__assert_fail@plt+0x218f8>
   32dfc:	mov	r2, #5
   32e00:	movw	r1, #25336	; 0x62f8
   32e04:	mov	r0, #0
   32e08:	movt	r1, #6
   32e0c:	bl	11170 <dcgettext@plt>
   32e10:	mov	r2, r4
   32e14:	mov	r1, r0
   32e18:	mov	r0, #1
   32e1c:	bl	1132c <__printf_chk@plt>
   32e20:	b	32d80 <__assert_fail@plt+0x2197c>
   32e24:	andeq	fp, r5, ip, ror #19
   32e28:	movw	r0, #23176	; 0x5a88
   32e2c:	mov	r1, #1
   32e30:	movt	r0, #6
   32e34:	mov	r2, #23
   32e38:	ldr	r3, [r4]
   32e3c:	bl	111b8 <fwrite@plt>
   32e40:	movw	r0, #23508	; 0x5bd4
   32e44:	mov	r1, #1
   32e48:	movt	r0, #6
   32e4c:	mov	r2, #6
   32e50:	ldr	r3, [r4]
   32e54:	movw	r7, #16696	; 0x4138
   32e58:	bl	111b8 <fwrite@plt>
   32e5c:	tst	r5, #1
   32e60:	movt	r7, #9
   32e64:	bne	332dc <__assert_fail@plt+0x21ed8>
   32e68:	tst	r5, #2
   32e6c:	bne	332c0 <__assert_fail@plt+0x21ebc>
   32e70:	tst	r5, #8192	; 0x2000
   32e74:	bne	332a4 <__assert_fail@plt+0x21ea0>
   32e78:	tst	r5, #4
   32e7c:	bne	33234 <__assert_fail@plt+0x21e30>
   32e80:	tst	r5, #8
   32e84:	bne	33218 <__assert_fail@plt+0x21e14>
   32e88:	tst	r5, #16
   32e8c:	bne	331fc <__assert_fail@plt+0x21df8>
   32e90:	tst	r5, #32
   32e94:	bne	331e0 <__assert_fail@plt+0x21ddc>
   32e98:	tst	r5, #64	; 0x40
   32e9c:	bne	331c4 <__assert_fail@plt+0x21dc0>
   32ea0:	tst	r5, #128	; 0x80
   32ea4:	bne	331a8 <__assert_fail@plt+0x21da4>
   32ea8:	tst	r5, #256	; 0x100
   32eac:	bne	3318c <__assert_fail@plt+0x21d88>
   32eb0:	tst	r5, #512	; 0x200
   32eb4:	bne	33170 <__assert_fail@plt+0x21d6c>
   32eb8:	tst	r5, #1024	; 0x400
   32ebc:	bne	33288 <__assert_fail@plt+0x21e84>
   32ec0:	tst	r5, #2048	; 0x800
   32ec4:	bne	3326c <__assert_fail@plt+0x21e68>
   32ec8:	tst	r5, #4096	; 0x1000
   32ecc:	bne	33250 <__assert_fail@plt+0x21e4c>
   32ed0:	cmp	r5, #0
   32ed4:	beq	33394 <__assert_fail@plt+0x21f90>
   32ed8:	bic	r5, r5, #16320	; 0x3fc0
   32edc:	bics	r5, r5, #63	; 0x3f
   32ee0:	beq	32f18 <__assert_fail@plt+0x21b14>
   32ee4:	mov	r2, #5
   32ee8:	movw	r1, #11792	; 0x2e10
   32eec:	mov	r0, #0
   32ef0:	movt	r1, #6
   32ef4:	ldr	r7, [r4]
   32ef8:	bl	11170 <dcgettext@plt>
   32efc:	movw	r2, #23744	; 0x5cc0
   32f00:	str	r5, [sp]
   32f04:	mov	r1, #1
   32f08:	movt	r2, #6
   32f0c:	mov	r3, r0
   32f10:	mov	r0, r7
   32f14:	bl	11338 <__fprintf_chk@plt>
   32f18:	ldr	r2, [sp, #64]	; 0x40
   32f1c:	movw	r1, #23756	; 0x5ccc
   32f20:	mov	r0, #1
   32f24:	movt	r1, #6
   32f28:	bl	1132c <__printf_chk@plt>
   32f2c:	mov	r2, sl
   32f30:	movw	r1, #23776	; 0x5ce0
   32f34:	mov	r0, #1
   32f38:	movt	r1, #6
   32f3c:	bl	1132c <__printf_chk@plt>
   32f40:	ldr	r1, [r4]
   32f44:	mov	r0, #10
   32f48:	bl	11380 <fputc@plt>
   32f4c:	mov	r0, r6
   32f50:	bl	1111c <free@plt>
   32f54:	b	310fc <__assert_fail@plt+0x1fcf8>
   32f58:	movw	r0, #23468	; 0x5bac
   32f5c:	mov	r1, #1
   32f60:	mov	r2, #31
   32f64:	ldr	r3, [r4]
   32f68:	movt	r0, #6
   32f6c:	bl	111b8 <fwrite@plt>
   32f70:	b	32e40 <__assert_fail@plt+0x21a3c>
   32f74:	movw	r0, #23436	; 0x5b8c
   32f78:	mov	r1, #1
   32f7c:	mov	r2, #31
   32f80:	ldr	r3, [r4]
   32f84:	movt	r0, #6
   32f88:	bl	111b8 <fwrite@plt>
   32f8c:	b	32e40 <__assert_fail@plt+0x21a3c>
   32f90:	movw	r0, #23424	; 0x5b80
   32f94:	mov	r1, #1
   32f98:	mov	r2, #10
   32f9c:	ldr	r3, [r4]
   32fa0:	movt	r0, #6
   32fa4:	bl	111b8 <fwrite@plt>
   32fa8:	b	32e40 <__assert_fail@plt+0x21a3c>
   32fac:	movw	r0, #23412	; 0x5b74
   32fb0:	mov	r1, #1
   32fb4:	mov	r2, #10
   32fb8:	ldr	r3, [r4]
   32fbc:	movt	r0, #6
   32fc0:	bl	111b8 <fwrite@plt>
   32fc4:	b	32e40 <__assert_fail@plt+0x21a3c>
   32fc8:	movw	r0, #23400	; 0x5b68
   32fcc:	mov	r1, #1
   32fd0:	mov	r2, #10
   32fd4:	ldr	r3, [r4]
   32fd8:	movt	r0, #6
   32fdc:	bl	111b8 <fwrite@plt>
   32fe0:	b	32e40 <__assert_fail@plt+0x21a3c>
   32fe4:	movw	r0, #23380	; 0x5b54
   32fe8:	mov	r1, #1
   32fec:	mov	r2, #17
   32ff0:	ldr	r3, [r4]
   32ff4:	movt	r0, #6
   32ff8:	bl	111b8 <fwrite@plt>
   32ffc:	b	32e40 <__assert_fail@plt+0x21a3c>
   33000:	movw	r0, #23364	; 0x5b44
   33004:	mov	r1, #1
   33008:	mov	r2, #13
   3300c:	ldr	r3, [r4]
   33010:	movt	r0, #6
   33014:	bl	111b8 <fwrite@plt>
   33018:	b	32e40 <__assert_fail@plt+0x21a3c>
   3301c:	movw	r0, #23352	; 0x5b38
   33020:	mov	r1, #1
   33024:	mov	r2, #11
   33028:	ldr	r3, [r4]
   3302c:	movt	r0, #6
   33030:	bl	111b8 <fwrite@plt>
   33034:	b	32e40 <__assert_fail@plt+0x21a3c>
   33038:	movw	r0, #23336	; 0x5b28
   3303c:	mov	r1, #1
   33040:	mov	r2, #13
   33044:	ldr	r3, [r4]
   33048:	movt	r0, #6
   3304c:	bl	111b8 <fwrite@plt>
   33050:	b	32e40 <__assert_fail@plt+0x21a3c>
   33054:	movw	r0, #23324	; 0x5b1c
   33058:	mov	r1, #1
   3305c:	mov	r2, #10
   33060:	ldr	r3, [r4]
   33064:	movt	r0, #6
   33068:	bl	111b8 <fwrite@plt>
   3306c:	b	32e40 <__assert_fail@plt+0x21a3c>
   33070:	movw	r0, #23312	; 0x5b10
   33074:	mov	r1, #1
   33078:	mov	r2, #9
   3307c:	ldr	r3, [r4]
   33080:	movt	r0, #6
   33084:	bl	111b8 <fwrite@plt>
   33088:	b	32e40 <__assert_fail@plt+0x21a3c>
   3308c:	movw	r0, #23300	; 0x5b04
   33090:	mov	r1, #1
   33094:	mov	r2, #10
   33098:	ldr	r3, [r4]
   3309c:	movt	r0, #6
   330a0:	bl	111b8 <fwrite@plt>
   330a4:	b	32e40 <__assert_fail@plt+0x21a3c>
   330a8:	movw	r0, #23284	; 0x5af4
   330ac:	mov	r1, #1
   330b0:	mov	r2, #13
   330b4:	ldr	r3, [r4]
   330b8:	movt	r0, #6
   330bc:	bl	111b8 <fwrite@plt>
   330c0:	b	32e40 <__assert_fail@plt+0x21a3c>
   330c4:	movw	r0, #23260	; 0x5adc
   330c8:	mov	r1, #1
   330cc:	mov	r2, #22
   330d0:	ldr	r3, [r4]
   330d4:	movt	r0, #6
   330d8:	bl	111b8 <fwrite@plt>
   330dc:	b	32e40 <__assert_fail@plt+0x21a3c>
   330e0:	movw	r0, #23248	; 0x5ad0
   330e4:	mov	r1, #1
   330e8:	mov	r2, #11
   330ec:	ldr	r3, [r4]
   330f0:	movt	r0, #6
   330f4:	bl	111b8 <fwrite@plt>
   330f8:	b	32e40 <__assert_fail@plt+0x21a3c>
   330fc:	movw	r0, #23224	; 0x5ab8
   33100:	mov	r1, #1
   33104:	mov	r2, #23
   33108:	ldr	r3, [r4]
   3310c:	movt	r0, #6
   33110:	bl	111b8 <fwrite@plt>
   33114:	b	32e40 <__assert_fail@plt+0x21a3c>
   33118:	movw	r0, #23200	; 0x5aa0
   3311c:	mov	r1, #1
   33120:	mov	r2, #23
   33124:	ldr	r3, [r4]
   33128:	movt	r0, #6
   3312c:	bl	111b8 <fwrite@plt>
   33130:	b	32e40 <__assert_fail@plt+0x21a3c>
   33134:	movw	r0, #23168	; 0x5a80
   33138:	mov	r1, #1
   3313c:	mov	r2, #7
   33140:	ldr	r3, [r4]
   33144:	movt	r0, #6
   33148:	bl	111b8 <fwrite@plt>
   3314c:	b	32e40 <__assert_fail@plt+0x21a3c>
   33150:	mov	r2, #5
   33154:	movw	r1, #55320	; 0xd818
   33158:	mov	r0, #0
   3315c:	movt	r1, #5
   33160:	bl	11170 <dcgettext@plt>
   33164:	ldr	r1, [r4]
   33168:	bl	113d4 <fputs@plt>
   3316c:	b	32e40 <__assert_fail@plt+0x21a3c>
   33170:	movw	r0, #23680	; 0x5c80
   33174:	mov	r1, #1
   33178:	mov	r2, #9
   3317c:	ldr	r3, [r4]
   33180:	movt	r0, #6
   33184:	bl	111b8 <fwrite@plt>
   33188:	b	32eb8 <__assert_fail@plt+0x21ab4>
   3318c:	movw	r0, #23668	; 0x5c74
   33190:	mov	r1, #1
   33194:	mov	r2, #8
   33198:	ldr	r3, [r4]
   3319c:	movt	r0, #6
   331a0:	bl	111b8 <fwrite@plt>
   331a4:	b	32eb0 <__assert_fail@plt+0x21aac>
   331a8:	movw	r0, #23652	; 0x5c64
   331ac:	mov	r1, #1
   331b0:	mov	r2, #15
   331b4:	ldr	r3, [r4]
   331b8:	movt	r0, #6
   331bc:	bl	111b8 <fwrite@plt>
   331c0:	b	32ea8 <__assert_fail@plt+0x21aa4>
   331c4:	movw	r0, #23640	; 0x5c58
   331c8:	mov	r1, #1
   331cc:	mov	r2, #8
   331d0:	ldr	r3, [r4]
   331d4:	movt	r0, #6
   331d8:	bl	111b8 <fwrite@plt>
   331dc:	b	32ea0 <__assert_fail@plt+0x21a9c>
   331e0:	movw	r0, #23624	; 0x5c48
   331e4:	mov	r1, #1
   331e8:	mov	r2, #13
   331ec:	ldr	r3, [r4]
   331f0:	movt	r0, #6
   331f4:	bl	111b8 <fwrite@plt>
   331f8:	b	32e98 <__assert_fail@plt+0x21a94>
   331fc:	movw	r0, #23612	; 0x5c3c
   33200:	mov	r1, #1
   33204:	mov	r2, #10
   33208:	ldr	r3, [r4]
   3320c:	movt	r0, #6
   33210:	bl	111b8 <fwrite@plt>
   33214:	b	32e90 <__assert_fail@plt+0x21a8c>
   33218:	movw	r0, #23584	; 0x5c20
   3321c:	mov	r1, #1
   33220:	mov	r2, #27
   33224:	ldr	r3, [r4]
   33228:	movt	r0, #6
   3322c:	bl	111b8 <fwrite@plt>
   33230:	b	32e88 <__assert_fail@plt+0x21a84>
   33234:	movw	r0, #23560	; 0x5c08
   33238:	mov	r1, #1
   3323c:	mov	r2, #20
   33240:	ldr	r3, [r4]
   33244:	movt	r0, #6
   33248:	bl	111b8 <fwrite@plt>
   3324c:	b	32e80 <__assert_fail@plt+0x21a7c>
   33250:	movw	r0, #23724	; 0x5cac
   33254:	mov	r1, #1
   33258:	mov	r2, #9
   3325c:	ldr	r3, [r4]
   33260:	movt	r0, #6
   33264:	bl	111b8 <fwrite@plt>
   33268:	b	32ed8 <__assert_fail@plt+0x21ad4>
   3326c:	movw	r0, #23708	; 0x5c9c
   33270:	mov	r1, #1
   33274:	mov	r2, #15
   33278:	ldr	r3, [r4]
   3327c:	movt	r0, #6
   33280:	bl	111b8 <fwrite@plt>
   33284:	b	32ec8 <__assert_fail@plt+0x21ac4>
   33288:	movw	r0, #23692	; 0x5c8c
   3328c:	mov	r1, #1
   33290:	mov	r2, #12
   33294:	ldr	r3, [r4]
   33298:	movt	r0, #6
   3329c:	bl	111b8 <fwrite@plt>
   332a0:	b	32ec0 <__assert_fail@plt+0x21abc>
   332a4:	movw	r0, #23544	; 0x5bf8
   332a8:	mov	r1, #1
   332ac:	mov	r2, #12
   332b0:	ldr	r3, [r4]
   332b4:	movt	r0, #6
   332b8:	bl	111b8 <fwrite@plt>
   332bc:	b	32e78 <__assert_fail@plt+0x21a74>
   332c0:	movw	r0, #23528	; 0x5be8
   332c4:	mov	r1, #1
   332c8:	mov	r2, #12
   332cc:	ldr	r3, [r4]
   332d0:	movt	r0, #6
   332d4:	bl	111b8 <fwrite@plt>
   332d8:	b	32e70 <__assert_fail@plt+0x21a6c>
   332dc:	ldr	r3, [r7]
   332e0:	movw	r0, #23516	; 0x5bdc
   332e4:	mov	r1, #1
   332e8:	mov	r2, #9
   332ec:	movt	r0, #6
   332f0:	bl	111b8 <fwrite@plt>
   332f4:	b	32e68 <__assert_fail@plt+0x21a64>
   332f8:	add	r1, r3, r1
   332fc:	ldr	r0, [sp, #48]	; 0x30
   33300:	bl	19a8c <__assert_fail@plt+0x8688>
   33304:	b	3242c <__assert_fail@plt+0x21028>
   33308:	mov	r4, #0
   3330c:	mov	r5, #0
   33310:	strd	r4, [sp, #64]	; 0x40
   33314:	mov	r5, #0
   33318:	mov	r4, #0
   3331c:	str	r5, [sp, #48]	; 0x30
   33320:	mov	r5, #0
   33324:	strd	r4, [sp, #120]	; 0x78
   33328:	strd	r4, [sp, #88]	; 0x58
   3332c:	mov	r5, #0
   33330:	str	r5, [sp, #112]	; 0x70
   33334:	str	r5, [sp, #132]	; 0x84
   33338:	str	r5, [sp, #136]	; 0x88
   3333c:	str	r5, [sp, #128]	; 0x80
   33340:	str	r5, [sp, #108]	; 0x6c
   33344:	str	r5, [sp, #144]	; 0x90
   33348:	str	r5, [sp, #140]	; 0x8c
   3334c:	str	r5, [sp, #104]	; 0x68
   33350:	str	r5, [sp, #84]	; 0x54
   33354:	b	31394 <__assert_fail@plt+0x1ff90>
   33358:	mov	ip, #0
   3335c:	strd	r2, [sp, #64]	; 0x40
   33360:	str	ip, [sp, #48]	; 0x30
   33364:	strd	r2, [sp, #120]	; 0x78
   33368:	strd	r2, [sp, #88]	; 0x58
   3336c:	str	ip, [sp, #112]	; 0x70
   33370:	str	ip, [sp, #132]	; 0x84
   33374:	str	ip, [sp, #136]	; 0x88
   33378:	str	ip, [sp, #128]	; 0x80
   3337c:	str	ip, [sp, #108]	; 0x6c
   33380:	str	ip, [sp, #144]	; 0x90
   33384:	str	ip, [sp, #140]	; 0x8c
   33388:	str	ip, [sp, #104]	; 0x68
   3338c:	str	ip, [sp, #84]	; 0x54
   33390:	b	31394 <__assert_fail@plt+0x1ff90>
   33394:	mov	r0, r5
   33398:	mov	r2, #5
   3339c:	movw	r1, #55320	; 0xd818
   333a0:	movt	r1, #5
   333a4:	ldr	r5, [r4]
   333a8:	bl	11170 <dcgettext@plt>
   333ac:	movw	r2, #23736	; 0x5cb8
   333b0:	mov	r1, #1
   333b4:	movt	r2, #6
   333b8:	mov	r3, r0
   333bc:	mov	r0, r5
   333c0:	bl	11338 <__fprintf_chk@plt>
   333c4:	b	32f18 <__assert_fail@plt+0x21b14>
   333c8:	mov	r2, #5
   333cc:	movw	r1, #24628	; 0x6034
   333d0:	mov	r0, r5
   333d4:	movt	r1, #6
   333d8:	bl	11170 <dcgettext@plt>
   333dc:	bl	4b2b0 <error@@Base>
   333e0:	mov	r0, r5
   333e4:	b	3136c <__assert_fail@plt+0x1ff68>
   333e8:	mov	r0, #10
   333ec:	bl	112fc <putchar@plt>
   333f0:	mov	r0, r7
   333f4:	bl	1111c <free@plt>
   333f8:	ldr	r0, [sp, #168]	; 0xa8
   333fc:	bl	1111c <free@plt>
   33400:	mov	r0, #1
   33404:	b	3136c <__assert_fail@plt+0x1ff68>
   33408:	bl	166b0 <__assert_fail@plt+0x52ac>
   3340c:	cmp	r0, #0
   33410:	beq	31368 <__assert_fail@plt+0x1ff64>
   33414:	b	32130 <__assert_fail@plt+0x20d2c>
   33418:	add	r1, r3, r1
   3341c:	ldr	r0, [sp, #48]	; 0x30
   33420:	bl	19a8c <__assert_fail@plt+0x8688>
   33424:	b	32d80 <__assert_fail@plt+0x2197c>
   33428:	ldr	r3, [fp]
   3342c:	movw	r0, #24468	; 0x5f94
   33430:	mov	r1, #1
   33434:	movt	r0, #6
   33438:	mov	r2, #15
   3343c:	bl	111b8 <fwrite@plt>
   33440:	ldr	r3, [r6, #-4]
   33444:	b	32758 <__assert_fail@plt+0x21354>
   33448:	ldr	r3, [fp]
   3344c:	movw	r0, #24468	; 0x5f94
   33450:	mov	r1, #1
   33454:	movt	r0, #6
   33458:	mov	r2, #15
   3345c:	bl	111b8 <fwrite@plt>
   33460:	ldr	r3, [r6, #-4]
   33464:	b	327b0 <__assert_fail@plt+0x213ac>
   33468:	ldr	r5, [sp, #116]	; 0x74
   3346c:	movw	r0, #24304	; 0x5ef0
   33470:	mov	r1, #1
   33474:	movt	r0, #6
   33478:	mov	r2, #4
   3347c:	ldr	r3, [r5]
   33480:	bl	111b8 <fwrite@plt>
   33484:	ldr	r3, [r6, #-4]
   33488:	b	32964 <__assert_fail@plt+0x21560>
   3348c:	ldr	r3, [fp]
   33490:	movw	r0, #24296	; 0x5ee8
   33494:	mov	r1, #1
   33498:	movt	r0, #6
   3349c:	mov	r2, #6
   334a0:	bl	111b8 <fwrite@plt>
   334a4:	ldr	r3, [r6, #-4]
   334a8:	b	3295c <__assert_fail@plt+0x21558>
   334ac:	ldr	ip, [sp, #116]	; 0x74
   334b0:	movw	r0, #24312	; 0x5ef8
   334b4:	mov	r1, #1
   334b8:	movt	r0, #6
   334bc:	mov	r2, #7
   334c0:	ldr	r3, [ip]
   334c4:	bl	111b8 <fwrite@plt>
   334c8:	ldr	r3, [r6, #-4]
   334cc:	b	3296c <__assert_fail@plt+0x21568>
   334d0:	ldr	ip, [sp, #116]	; 0x74
   334d4:	movw	r0, #24352	; 0x5f20
   334d8:	mov	r1, #1
   334dc:	movt	r0, #6
   334e0:	mov	r2, #8
   334e4:	ldr	r3, [ip]
   334e8:	bl	111b8 <fwrite@plt>
   334ec:	ldr	r3, [r6, #-4]
   334f0:	b	328c8 <__assert_fail@plt+0x214c4>
   334f4:	ldr	r3, [fp]
   334f8:	movw	r0, #24344	; 0x5f18
   334fc:	mov	r1, #1
   33500:	movt	r0, #6
   33504:	mov	r2, #7
   33508:	bl	111b8 <fwrite@plt>
   3350c:	ldr	r3, [r6, #-4]
   33510:	b	328c0 <__assert_fail@plt+0x214bc>
   33514:	ldr	r3, [fp]
   33518:	movw	r0, #24384	; 0x5f40
   3351c:	mov	r1, #1
   33520:	movt	r0, #6
   33524:	mov	r2, #7
   33528:	bl	111b8 <fwrite@plt>
   3352c:	ldr	r3, [r6, #-4]
   33530:	b	32858 <__assert_fail@plt+0x21454>
   33534:	ldr	r4, [sp, #116]	; 0x74
   33538:	movw	r0, #24404	; 0x5f54
   3353c:	mov	r1, #1
   33540:	movt	r0, #6
   33544:	mov	r2, #7
   33548:	ldr	r3, [r4]
   3354c:	bl	111b8 <fwrite@plt>
   33550:	ldr	r3, [r6, #-4]
   33554:	b	32868 <__assert_fail@plt+0x21464>
   33558:	ldr	ip, [sp, #116]	; 0x74
   3355c:	movw	r0, #24392	; 0x5f48
   33560:	mov	r1, #1
   33564:	movt	r0, #6
   33568:	mov	r2, #10
   3356c:	ldr	r3, [ip]
   33570:	bl	111b8 <fwrite@plt>
   33574:	ldr	r3, [r6, #-4]
   33578:	b	32860 <__assert_fail@plt+0x2145c>
   3357c:	mov	r2, #5
   33580:	movw	r1, #25180	; 0x625c
   33584:	mov	r0, #0
   33588:	movt	r1, #6
   3358c:	bl	11170 <dcgettext@plt>
   33590:	mov	r1, r0
   33594:	mov	r0, #1
   33598:	bl	1132c <__printf_chk@plt>
   3359c:	mov	r2, #5
   335a0:	movw	r1, #25104	; 0x6210
   335a4:	mov	r0, #0
   335a8:	movt	r1, #6
   335ac:	bl	11170 <dcgettext@plt>
   335b0:	mov	r2, #5
   335b4:	movw	r1, #25112	; 0x6218
   335b8:	movt	r1, #6
   335bc:	mov	r4, r0
   335c0:	mov	r0, #0
   335c4:	bl	11170 <dcgettext@plt>
   335c8:	mov	r2, #5
   335cc:	movw	r1, #25120	; 0x6220
   335d0:	movt	r1, #6
   335d4:	mov	r5, r0
   335d8:	mov	r0, #0
   335dc:	bl	11170 <dcgettext@plt>
   335e0:	str	r5, [sp]
   335e4:	mov	r3, r4
   335e8:	str	r7, [sp, #4]
   335ec:	mov	r2, r7
   335f0:	movw	r1, #25200	; 0x6270
   335f4:	movt	r1, #6
   335f8:	mvn	r4, #0
   335fc:	mvn	r5, #0
   33600:	str	r0, [sp, #8]
   33604:	mov	r0, #1
   33608:	bl	1132c <__printf_chk@plt>
   3360c:	str	r8, [sp, #72]	; 0x48
   33610:	str	r7, [sp, #104]	; 0x68
   33614:	str	r9, [sp, #84]	; 0x54
   33618:	ldr	r7, [sp, #60]	; 0x3c
   3361c:	ldrd	r8, [sp, #88]	; 0x58
   33620:	b	33634 <__assert_fail@plt+0x22230>
   33624:	ldrd	r0, [sp, #48]	; 0x30
   33628:	cmp	r1, fp
   3362c:	cmpeq	r0, sl
   33630:	bls	3376c <__assert_fail@plt+0x22368>
   33634:	strd	sl, [sp]
   33638:	mov	r2, r8
   3363c:	mov	r3, r9
   33640:	mov	r0, r6
   33644:	str	r7, [sp, #8]
   33648:	bl	16fbc <__assert_fail@plt+0x5bb8>
   3364c:	mov	sl, r0
   33650:	mov	r0, #10
   33654:	mov	fp, r1
   33658:	bl	112fc <putchar@plt>
   3365c:	cmp	fp, r5
   33660:	cmpeq	sl, r4
   33664:	bne	33624 <__assert_fail@plt+0x22220>
   33668:	ldr	r9, [sp, #84]	; 0x54
   3366c:	b	31888 <__assert_fail@plt+0x20484>
   33670:	blx	r3
   33674:	ldr	r3, [r4]
   33678:	mov	r1, #4
   3367c:	mov	r2, r0
   33680:	add	r0, r6, #4
   33684:	str	r2, [sp, #36]	; 0x24
   33688:	blx	r3
   3368c:	ldr	r3, [r4]
   33690:	mov	r1, #4
   33694:	mov	fp, r0
   33698:	mov	r0, r9
   3369c:	blx	r3
   336a0:	ldr	r3, [r4]
   336a4:	mov	r1, #4
   336a8:	mov	r8, r0
   336ac:	ldr	r0, [sp, #96]	; 0x60
   336b0:	blx	r3
   336b4:	ldr	r5, [sp, #148]	; 0x94
   336b8:	mov	r1, #4
   336bc:	ldr	r3, [r5]
   336c0:	mov	r4, r0
   336c4:	ldr	r0, [sp, #72]	; 0x48
   336c8:	blx	r3
   336cc:	ldr	ip, [sp, #148]	; 0x94
   336d0:	mov	r1, #4
   336d4:	ldr	r3, [ip]
   336d8:	mov	r5, r0
   336dc:	ldr	r0, [sp, #60]	; 0x3c
   336e0:	blx	r3
   336e4:	ldr	r2, [sp, #36]	; 0x24
   336e8:	movw	r1, #24156	; 0x5e5c
   336ec:	movt	r1, #6
   336f0:	mov	r3, r0
   336f4:	mov	r0, #1
   336f8:	bl	1132c <__printf_chk@plt>
   336fc:	stm	sp, {r4, r5}
   33700:	mov	r2, fp
   33704:	b	32a80 <__assert_fail@plt+0x2167c>
   33708:	mov	r0, #10
   3370c:	bl	112fc <putchar@plt>
   33710:	b	31888 <__assert_fail@plt+0x20484>
   33714:	mov	r2, #5
   33718:	movw	r1, #25300	; 0x62d4
   3371c:	movt	r1, #6
   33720:	bl	11170 <dcgettext@plt>
   33724:	mov	r1, r0
   33728:	mov	r0, #1
   3372c:	bl	1132c <__printf_chk@plt>
   33730:	b	32d80 <__assert_fail@plt+0x2197c>
   33734:	mov	r2, #5
   33738:	movw	r1, #24680	; 0x6068
   3373c:	movt	r1, #6
   33740:	bl	11170 <dcgettext@plt>
   33744:	bl	4b2b0 <error@@Base>
   33748:	mov	r0, sl
   3374c:	b	3136c <__assert_fail@plt+0x1ff68>
   33750:	mov	r2, #5
   33754:	movw	r1, #23996	; 0x5dbc
   33758:	movt	r1, #6
   3375c:	bl	11170 <dcgettext@plt>
   33760:	bl	4b2b0 <error@@Base>
   33764:	ldr	r0, [sp, #60]	; 0x3c
   33768:	b	3136c <__assert_fail@plt+0x1ff68>
   3376c:	mov	r0, #10
   33770:	ldr	r8, [sp, #72]	; 0x48
   33774:	ldr	r7, [sp, #104]	; 0x68
   33778:	ldr	r9, [sp, #84]	; 0x54
   3377c:	bl	112fc <putchar@plt>
   33780:	b	31874 <__assert_fail@plt+0x20470>
   33784:	mov	r2, #5
   33788:	movw	r1, #11792	; 0x2e10
   3378c:	mov	r0, #0
   33790:	movt	r1, #6
   33794:	ldr	r7, [r4]
   33798:	bl	11170 <dcgettext@plt>
   3379c:	str	r9, [sp]
   337a0:	movw	r2, #23500	; 0x5bcc
   337a4:	mov	r1, #1
   337a8:	movt	r2, #6
   337ac:	mov	r3, r0
   337b0:	mov	r0, r7
   337b4:	bl	11338 <__fprintf_chk@plt>
   337b8:	b	32e40 <__assert_fail@plt+0x21a3c>
   337bc:	bl	1117c <__stack_chk_fail@plt>
   337c0:	cmp	r0, #0
   337c4:	push	{r4, r5}
   337c8:	beq	33810 <__assert_fail@plt+0x2240c>
   337cc:	ldr	r1, [r0, #36]	; 0x24
   337d0:	cmp	r1, #0
   337d4:	beq	33818 <__assert_fail@plt+0x22414>
   337d8:	ldr	r0, [r0, #40]	; 0x28
   337dc:	add	r0, r0, r0, lsl #1
   337e0:	add	r0, r1, r0, lsl #3
   337e4:	cmp	r1, r0
   337e8:	bcc	337fc <__assert_fail@plt+0x223f8>
   337ec:	b	33818 <__assert_fail@plt+0x22414>
   337f0:	add	r1, r1, #24
   337f4:	cmp	r1, r0
   337f8:	bcs	33818 <__assert_fail@plt+0x22414>
   337fc:	ldrd	r4, [r1]
   33800:	cmp	r5, r3
   33804:	cmpeq	r4, r2
   33808:	bne	337f0 <__assert_fail@plt+0x223ec>
   3380c:	mov	r0, #1
   33810:	pop	{r4, r5}
   33814:	bx	lr
   33818:	mov	r0, #0
   3381c:	pop	{r4, r5}
   33820:	bx	lr
   33824:	push	{r4, lr}
   33828:	movw	r4, #14352	; 0x3810
   3382c:	movt	r4, #9
   33830:	add	r4, r4, r0, lsl #6
   33834:	ldr	r0, [r4, #12]
   33838:	cmp	r0, #0
   3383c:	popeq	{r4, pc}
   33840:	bl	1111c <free@plt>
   33844:	mov	r2, #0
   33848:	mov	r3, #0
   3384c:	mov	r1, #0
   33850:	strd	r2, [r4, #16]
   33854:	str	r1, [r4, #12]
   33858:	strd	r2, [r4, #24]
   3385c:	pop	{r4, pc}
   33860:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   33864:	movw	r4, #14352	; 0x3810
   33868:	movw	r6, #24896	; 0x6140
   3386c:	movt	r4, #9
   33870:	movt	r6, #9
   33874:	mov	r5, r0
   33878:	mov	r9, r1
   3387c:	ldr	r0, [r4, r0, lsl #6]
   33880:	ldr	r1, [r6, #-308]	; 0xfffffecc
   33884:	add	r7, r4, r5, lsl #6
   33888:	bl	13504 <__assert_fail@plt+0x2100>
   3388c:	subs	r8, r0, #0
   33890:	beq	338c4 <__assert_fail@plt+0x224c0>
   33894:	ldr	r3, [r4, r5, lsl #6]
   33898:	str	r3, [r7, #8]
   3389c:	ldr	r3, [r6, #-308]	; 0xfffffecc
   338a0:	cmp	r3, #0
   338a4:	beq	338b0 <__assert_fail@plt+0x224ac>
   338a8:	mov	r0, r5
   338ac:	bl	33824 <__assert_fail@plt+0x22420>
   338b0:	mov	r0, r5
   338b4:	mov	r1, r8
   338b8:	mov	r2, r9
   338bc:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   338c0:	b	30794 <__assert_fail@plt+0x1f390>
   338c4:	ldr	r0, [r7, #4]
   338c8:	ldr	r1, [r6, #-308]	; 0xfffffecc
   338cc:	bl	13504 <__assert_fail@plt+0x2100>
   338d0:	subs	r8, r0, #0
   338d4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   338d8:	ldr	r3, [r7, #4]
   338dc:	str	r3, [r7, #8]
   338e0:	b	3389c <__assert_fail@plt+0x22498>
   338e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   338e8:	movw	r4, #16680	; 0x4128
   338ec:	movt	r4, #9
   338f0:	sub	sp, sp, #428	; 0x1ac
   338f4:	movw	r9, #16712	; 0x4148
   338f8:	movt	r9, #9
   338fc:	ldr	ip, [r4]
   33900:	mov	r3, r1
   33904:	str	r4, [sp, #76]	; 0x4c
   33908:	mov	r2, #1
   3390c:	str	r1, [sp, #60]	; 0x3c
   33910:	mov	r4, r0
   33914:	mov	r1, #16
   33918:	mov	r0, r9
   3391c:	str	ip, [sp, #420]	; 0x1a4
   33920:	bl	111f4 <fread@plt>
   33924:	cmp	r0, #1
   33928:	beq	33968 <__assert_fail@plt+0x22564>
   3392c:	mov	r2, #5
   33930:	movw	r1, #27956	; 0x6d34
   33934:	mov	r0, #0
   33938:	movt	r1, #6
   3393c:	bl	11170 <dcgettext@plt>
   33940:	mov	r1, r4
   33944:	bl	4b2b0 <error@@Base>
   33948:	mov	r0, #1
   3394c:	ldr	r7, [sp, #76]	; 0x4c
   33950:	ldr	r2, [sp, #420]	; 0x1a4
   33954:	ldr	r3, [r7]
   33958:	cmp	r2, r3
   3395c:	bne	36360 <__assert_fail@plt+0x24f5c>
   33960:	add	sp, sp, #428	; 0x1ac
   33964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33968:	ldrb	r3, [r9, #5]
   3396c:	movw	fp, #26492	; 0x677c
   33970:	movt	fp, #9
   33974:	movw	r5, #16712	; 0x4148
   33978:	cmp	r3, #2
   3397c:	movw	r3, #26496	; 0x6780
   33980:	movt	r3, #9
   33984:	movt	r5, #9
   33988:	movwne	r2, #47768	; 0xba98
   3398c:	movweq	r2, #47916	; 0xbb2c
   33990:	movtne	r2, #4
   33994:	movteq	r2, #4
   33998:	str	r2, [r3]
   3399c:	movwne	r1, #48104	; 0xbbe8
   339a0:	ldrb	r3, [r9, #4]
   339a4:	movweq	r1, #45916	; 0xb35c
   339a8:	movtne	r1, #4
   339ac:	movteq	r1, #4
   339b0:	subs	r3, r3, #2
   339b4:	str	r1, [fp]
   339b8:	movne	r3, #1
   339bc:	cmp	r3, #0
   339c0:	str	r3, [r9, #460]	; 0x1cc
   339c4:	beq	33fac <__assert_fail@plt+0x22ba8>
   339c8:	mov	r1, #36	; 0x24
   339cc:	mov	r2, #1
   339d0:	ldr	r3, [sp, #60]	; 0x3c
   339d4:	add	r0, sp, #244	; 0xf4
   339d8:	bl	111f4 <fread@plt>
   339dc:	cmp	r0, #1
   339e0:	bne	3392c <__assert_fail@plt+0x22528>
   339e4:	ldr	r3, [fp]
   339e8:	add	r0, sp, #244	; 0xf4
   339ec:	mov	r1, #2
   339f0:	blx	r3
   339f4:	ldr	r3, [fp]
   339f8:	mov	r1, #2
   339fc:	strh	r0, [r5, #48]	; 0x30
   33a00:	add	r0, sp, #246	; 0xf6
   33a04:	blx	r3
   33a08:	ldr	r3, [fp]
   33a0c:	mov	r1, #4
   33a10:	strh	r0, [r5, #50]	; 0x32
   33a14:	add	r0, sp, #248	; 0xf8
   33a18:	blx	r3
   33a1c:	ldr	r3, [fp]
   33a20:	mov	r1, #4
   33a24:	str	r0, [r5, #40]	; 0x28
   33a28:	add	r0, sp, #252	; 0xfc
   33a2c:	blx	r3
   33a30:	ldr	r3, [fp]
   33a34:	strd	r0, [r5, #16]
   33a38:	add	r0, sp, #256	; 0x100
   33a3c:	mov	r1, #4
   33a40:	blx	r3
   33a44:	ldr	r3, [fp]
   33a48:	strd	r0, [r5, #24]
   33a4c:	add	r0, sp, #260	; 0x104
   33a50:	mov	r1, #4
   33a54:	blx	r3
   33a58:	ldr	r3, [fp]
   33a5c:	strd	r0, [r5, #32]
   33a60:	add	r0, sp, #264	; 0x108
   33a64:	mov	r1, #4
   33a68:	blx	r3
   33a6c:	ldr	r3, [fp]
   33a70:	mov	r1, #2
   33a74:	str	r0, [r5, #44]	; 0x2c
   33a78:	add	r0, sp, #268	; 0x10c
   33a7c:	blx	r3
   33a80:	ldr	r3, [fp]
   33a84:	mov	r1, #2
   33a88:	str	r0, [r5, #52]	; 0x34
   33a8c:	add	r0, sp, #268	; 0x10c
   33a90:	add	r0, r0, #2
   33a94:	blx	r3
   33a98:	ldr	r3, [fp]
   33a9c:	mov	r1, #2
   33aa0:	str	r0, [r5, #56]	; 0x38
   33aa4:	add	r0, sp, #272	; 0x110
   33aa8:	blx	r3
   33aac:	ldr	r3, [fp]
   33ab0:	mov	r1, #2
   33ab4:	str	r0, [r5, #60]	; 0x3c
   33ab8:	add	r0, sp, #272	; 0x110
   33abc:	add	r0, r0, #2
   33ac0:	blx	r3
   33ac4:	ldr	r3, [fp]
   33ac8:	mov	r1, #2
   33acc:	str	r0, [r5, #64]	; 0x40
   33ad0:	add	r0, sp, #276	; 0x114
   33ad4:	blx	r3
   33ad8:	ldr	r3, [fp]
   33adc:	mov	r1, #2
   33ae0:	str	r0, [r5, #68]	; 0x44
   33ae4:	add	r0, sp, #276	; 0x114
   33ae8:	add	r0, r0, #2
   33aec:	blx	r3
   33af0:	str	r0, [r5, #72]	; 0x48
   33af4:	ldrd	r2, [r9, #32]
   33af8:	movw	r1, #16712	; 0x4148
   33afc:	movt	r1, #9
   33b00:	orrs	r5, r2, r3
   33b04:	beq	33b20 <__assert_fail@plt+0x2271c>
   33b08:	ldr	r3, [r1, #460]	; 0x1cc
   33b0c:	mov	r1, #1
   33b10:	ldr	r0, [sp, #60]	; 0x3c
   33b14:	cmp	r3, #0
   33b18:	bne	361c4 <__assert_fail@plt+0x24dc0>
   33b1c:	bl	161f8 <__assert_fail@plt+0x4df4>
   33b20:	ldr	r1, [pc, #3768]	; 349e0 <__assert_fail@plt+0x235dc>
   33b24:	mov	r2, #0
   33b28:	mov	r3, #0
   33b2c:	sub	r0, r1, #128	; 0x80
   33b30:	strd	r2, [r1, #-8]!
   33b34:	cmp	r1, r0
   33b38:	bne	33b30 <__assert_fail@plt+0x2272c>
   33b3c:	ldr	ip, [pc, #3744]	; 349e4 <__assert_fail@plt+0x235e0>
   33b40:	mov	r0, #0
   33b44:	mov	r1, #0
   33b48:	sub	lr, ip, #256	; 0x100
   33b4c:	strd	r0, [ip, #-8]!
   33b50:	cmp	ip, lr
   33b54:	mov	r2, #0
   33b58:	mov	r3, #0
   33b5c:	bne	33b4c <__assert_fail@plt+0x22748>
   33b60:	movw	r6, #24896	; 0x6140
   33b64:	movt	r6, #9
   33b68:	movw	r1, #63648	; 0xf8a0
   33b6c:	movt	r1, #65535	; 0xffff
   33b70:	ldr	r0, [r6, #-240]	; 0xffffff10
   33b74:	str	r6, [sp, #64]	; 0x40
   33b78:	cmp	r0, #0
   33b7c:	strd	r2, [r6, r1]
   33b80:	bne	34520 <__assert_fail@plt+0x2311c>
   33b84:	ldr	r7, [sp, #64]	; 0x40
   33b88:	movw	r3, #16712	; 0x4148
   33b8c:	ldr	r4, [r9, #468]	; 0x1d4
   33b90:	movt	r3, #9
   33b94:	ldr	r5, [r7, #-236]	; 0xffffff14
   33b98:	cmp	r4, r5
   33b9c:	bhi	3450c <__assert_fail@plt+0x23108>
   33ba0:	cmp	r5, #0
   33ba4:	beq	33bcc <__assert_fail@plt+0x227c8>
   33ba8:	cmp	r4, #0
   33bac:	movne	r2, r5
   33bb0:	beq	34548 <__assert_fail@plt+0x23144>
   33bb4:	cmp	r4, r2
   33bb8:	bcc	36388 <__assert_fail@plt+0x24f84>
   33bbc:	ldr	ip, [sp, #64]	; 0x40
   33bc0:	ldr	r0, [r9, #472]	; 0x1d8
   33bc4:	ldr	r1, [ip, #-232]	; 0xffffff18
   33bc8:	bl	11134 <memcpy@plt>
   33bcc:	bl	2bb38 <__assert_fail@plt+0x1a734>
   33bd0:	cmp	r0, #0
   33bd4:	moveq	r0, #1
   33bd8:	beq	3394c <__assert_fail@plt+0x22548>
   33bdc:	ldr	r0, [sp, #60]	; 0x3c
   33be0:	bl	19c38 <__assert_fail@plt+0x8834>
   33be4:	cmp	r0, #0
   33be8:	bne	33c1c <__assert_fail@plt+0x22818>
   33bec:	ldr	r4, [sp, #64]	; 0x40
   33bf0:	movw	r3, #24896	; 0x6140
   33bf4:	movt	r3, #9
   33bf8:	str	r0, [r9, #476]	; 0x1dc
   33bfc:	str	r0, [r9, #516]	; 0x204
   33c00:	ldr	r2, [r4, #-1700]	; 0xfffff95c
   33c04:	str	r0, [r4, #-228]	; 0xffffff1c
   33c08:	cmp	r2, #0
   33c0c:	str	r0, [r4, #-1752]	; 0xfffff928
   33c10:	streq	r2, [r3, #-224]	; 0xffffff20
   33c14:	streq	r2, [r3, #-1708]	; 0xfffff954
   33c18:	streq	r2, [r3, #-1712]	; 0xfffff950
   33c1c:	ldr	r0, [sp, #60]	; 0x3c
   33c20:	bl	17160 <__assert_fail@plt+0x5d5c>
   33c24:	cmp	r0, #0
   33c28:	streq	r0, [r9, #516]	; 0x204
   33c2c:	ldr	r0, [sp, #60]	; 0x3c
   33c30:	bl	20970 <__assert_fail@plt+0xf56c>
   33c34:	cmp	r0, #0
   33c38:	bne	34e04 <__assert_fail@plt+0x23a00>
   33c3c:	ldr	r5, [sp, #64]	; 0x40
   33c40:	movw	r3, #24896	; 0x6140
   33c44:	movt	r3, #9
   33c48:	ldr	r2, [r5, #-224]	; 0xffffff20
   33c4c:	cmp	r2, #0
   33c50:	beq	33cec <__assert_fail@plt+0x228e8>
   33c54:	ldr	r5, [r3, #-1700]	; 0xfffff95c
   33c58:	cmp	r5, #0
   33c5c:	beq	34e10 <__assert_fail@plt+0x23a0c>
   33c60:	ldr	r8, [pc, #3456]	; 349e8 <__assert_fail@plt+0x235e4>
   33c64:	mov	r7, #0
   33c68:	mov	ip, r7
   33c6c:	movw	r6, #16712	; 0x4148
   33c70:	add	sl, r8, #48	; 0x30
   33c74:	movt	r6, #9
   33c78:	str	r7, [sp, #80]	; 0x50
   33c7c:	str	r6, [sp, #68]	; 0x44
   33c80:	str	fp, [sp, #72]	; 0x48
   33c84:	ldmda	r8, {r0, r1, fp}
   33c88:	ldr	r3, [r8, #-12]
   33c8c:	add	r1, r9, r1, lsl #3
   33c90:	cmn	fp, #1
   33c94:	add	r1, r1, #1920	; 0x780
   33c98:	add	r2, r9, r0, lsl #3
   33c9c:	add	r2, r2, #1920	; 0x780
   33ca0:	ldrd	r4, [r1, #8]
   33ca4:	ldrd	r6, [r2, #8]
   33ca8:	orr	ip, ip, r4
   33cac:	beq	350e8 <__assert_fail@plt+0x23ce4>
   33cb0:	cmp	r4, #0
   33cb4:	bne	35050 <__assert_fail@plt+0x23c4c>
   33cb8:	add	r8, r8, #16
   33cbc:	cmp	r8, sl
   33cc0:	bne	33c84 <__assert_fail@plt+0x22880>
   33cc4:	ldrh	r3, [r9, #50]	; 0x32
   33cc8:	movw	r2, #16712	; 0x4148
   33ccc:	str	ip, [sp, #80]	; 0x50
   33cd0:	movt	r2, #9
   33cd4:	cmp	r3, #50	; 0x32
   33cd8:	ldr	fp, [sp, #72]	; 0x48
   33cdc:	beq	3595c <__assert_fail@plt+0x24558>
   33ce0:	ldr	r6, [sp, #80]	; 0x50
   33ce4:	cmp	r6, #0
   33ce8:	beq	35938 <__assert_fail@plt+0x24534>
   33cec:	ldr	lr, [pc, #3320]	; 349ec <__assert_fail@plt+0x235e8>
   33cf0:	add	ip, sp, #228	; 0xe4
   33cf4:	ldr	r5, [r9, #516]	; 0x204
   33cf8:	movw	r4, #16712	; 0x4148
   33cfc:	movt	r4, #9
   33d00:	ldm	lr!, {r0, r1, r2, r3}
   33d04:	cmp	r5, #0
   33d08:	stmia	ip!, {r0, r1, r2, r3}
   33d0c:	ldm	lr!, {r0, r1, r2, r3}
   33d10:	stmia	ip!, {r0, r1, r2, r3}
   33d14:	ldm	lr, {r0, r1}
   33d18:	stm	ip, {r0, r1}
   33d1c:	beq	33d8c <__assert_fail@plt+0x22988>
   33d20:	ldr	r2, [sp, #232]	; 0xe8
   33d24:	cmp	r2, #0
   33d28:	beq	33d5c <__assert_fail@plt+0x22958>
   33d2c:	ldr	r3, [sp, #228]	; 0xe4
   33d30:	ldrh	r0, [r4, #50]	; 0x32
   33d34:	cmp	r0, r3
   33d38:	addne	r3, sp, #228	; 0xe4
   33d3c:	bne	33d50 <__assert_fail@plt+0x2294c>
   33d40:	b	35154 <__assert_fail@plt+0x23d50>
   33d44:	ldr	r1, [r3, #8]!
   33d48:	cmp	r1, r0
   33d4c:	beq	35154 <__assert_fail@plt+0x23d50>
   33d50:	ldr	r2, [r3, #12]
   33d54:	cmp	r2, #0
   33d58:	bne	33d44 <__assert_fail@plt+0x22940>
   33d5c:	mov	r2, #5
   33d60:	movw	r1, #26340	; 0x66e4
   33d64:	mov	r0, #0
   33d68:	movt	r1, #6
   33d6c:	bl	11170 <dcgettext@plt>
   33d70:	mov	r4, r0
   33d74:	ldrh	r0, [r9, #50]	; 0x32
   33d78:	bl	136f0 <__assert_fail@plt+0x22ec>
   33d7c:	mov	r1, r4
   33d80:	mov	r2, r0
   33d84:	mov	r0, #1
   33d88:	bl	1132c <__printf_chk@plt>
   33d8c:	ldr	r0, [sp, #60]	; 0x3c
   33d90:	movw	r4, #16712	; 0x4148
   33d94:	bl	24f2c <__assert_fail@plt+0x13b28>
   33d98:	ldr	r3, [r9, #1880]	; 0x758
   33d9c:	movt	r4, #9
   33da0:	cmp	r3, #0
   33da4:	beq	3415c <__assert_fail@plt+0x22d58>
   33da8:	ldr	r3, [r4, #1912]	; 0x778
   33dac:	cmp	r3, #0
   33db0:	beq	3415c <__assert_fail@plt+0x22d58>
   33db4:	ldr	r3, [r4, #1872]	; 0x750
   33db8:	cmp	r3, #0
   33dbc:	beq	3415c <__assert_fail@plt+0x22d58>
   33dc0:	ldr	r3, [r4, #1876]	; 0x754
   33dc4:	cmp	r3, #0
   33dc8:	beq	3415c <__assert_fail@plt+0x22d58>
   33dcc:	ldr	r3, [r4, #1916]	; 0x77c
   33dd0:	cmp	r3, #0
   33dd4:	bne	352fc <__assert_fail@plt+0x23ef8>
   33dd8:	mov	r2, #5
   33ddc:	movw	r1, #26484	; 0x6774
   33de0:	mov	r0, #0
   33de4:	movt	r1, #6
   33de8:	bl	11170 <dcgettext@plt>
   33dec:	mov	r1, r0
   33df0:	mov	r0, #1
   33df4:	bl	1132c <__printf_chk@plt>
   33df8:	ldr	r3, [r9, #2192]	; 0x890
   33dfc:	cmp	r3, #0
   33e00:	beq	3415c <__assert_fail@plt+0x22d58>
   33e04:	mov	r7, #0
   33e08:	movw	sl, #16696	; 0x4138
   33e0c:	movw	r8, #16712	; 0x4148
   33e10:	movt	sl, #9
   33e14:	movt	r8, #9
   33e18:	mov	r4, r7
   33e1c:	str	fp, [sp, #68]	; 0x44
   33e20:	b	33e90 <__assert_fail@plt+0x22a8c>
   33e24:	add	r3, r3, #1
   33e28:	cmp	ip, r3
   33e2c:	bne	340dc <__assert_fail@plt+0x22cd8>
   33e30:	movw	fp, #16696	; 0x4138
   33e34:	movt	fp, #9
   33e38:	movw	r0, #26584	; 0x67d8
   33e3c:	mov	r1, #1
   33e40:	movt	r0, #6
   33e44:	mov	r2, #11
   33e48:	ldr	r3, [fp]
   33e4c:	bl	111b8 <fwrite@plt>
   33e50:	tst	r5, #1
   33e54:	bne	33f50 <__assert_fail@plt+0x22b4c>
   33e58:	tst	r5, #2
   33e5c:	bne	33f68 <__assert_fail@plt+0x22b64>
   33e60:	tst	r5, #4
   33e64:	bne	33f80 <__assert_fail@plt+0x22b7c>
   33e68:	tst	r5, #8
   33e6c:	bne	33f98 <__assert_fail@plt+0x22b94>
   33e70:	movw	r0, #25084	; 0x61fc
   33e74:	movt	r0, #7
   33e78:	bl	11218 <puts@plt>
   33e7c:	ldr	r3, [r9, #2192]	; 0x890
   33e80:	add	r4, r4, #1
   33e84:	add	r7, r7, #32
   33e88:	cmp	r4, r3
   33e8c:	bcs	34158 <__assert_fail@plt+0x22d54>
   33e90:	ldr	r3, [r9, #1880]	; 0x758
   33e94:	lsl	r6, r4, #2
   33e98:	movw	r1, #26540	; 0x67ac
   33e9c:	mov	r0, #1
   33ea0:	add	r3, r3, r6
   33ea4:	movt	r1, #6
   33ea8:	mov	r2, r4
   33eac:	ldrh	r5, [r3, #2]
   33eb0:	bl	1132c <__printf_chk@plt>
   33eb4:	ldr	r3, [r9, #1884]	; 0x75c
   33eb8:	cmp	r3, r4
   33ebc:	bls	34134 <__assert_fail@plt+0x22d30>
   33ec0:	ldr	r2, [r8, #1876]	; 0x754
   33ec4:	ldr	r3, [r8, #1872]	; 0x750
   33ec8:	cmp	r2, #0
   33ecc:	beq	35294 <__assert_fail@plt+0x23e90>
   33ed0:	add	fp, r3, r7
   33ed4:	ldr	r0, [r8, #1888]	; 0x760
   33ed8:	ldr	r1, [fp, #16]
   33edc:	cmp	r1, r0
   33ee0:	bcc	344fc <__assert_fail@plt+0x230f8>
   33ee4:	mov	r2, #5
   33ee8:	movw	r1, #26564	; 0x67c4
   33eec:	mov	r0, #0
   33ef0:	movt	r1, #6
   33ef4:	bl	11170 <dcgettext@plt>
   33ef8:	ldr	r2, [fp, #16]
   33efc:	mov	r1, r0
   33f00:	mov	r0, #1
   33f04:	bl	1132c <__printf_chk@plt>
   33f08:	mov	r0, #32
   33f0c:	ldr	r1, [sl]
   33f10:	bl	111ac <_IO_putc@plt>
   33f14:	ldr	r2, [r9, #1880]	; 0x758
   33f18:	movw	r3, #65534	; 0xfffe
   33f1c:	ldrh	ip, [r2, r6]
   33f20:	cmp	ip, r3
   33f24:	bne	33e24 <__assert_fail@plt+0x22a20>
   33f28:	movw	ip, #16696	; 0x4138
   33f2c:	movt	ip, #9
   33f30:	movw	r0, #26596	; 0x67e4
   33f34:	mov	r1, #1
   33f38:	movt	r0, #6
   33f3c:	mov	r2, #11
   33f40:	ldr	r3, [ip]
   33f44:	bl	111b8 <fwrite@plt>
   33f48:	tst	r5, #1
   33f4c:	beq	33e58 <__assert_fail@plt+0x22a54>
   33f50:	movw	r1, #4072	; 0xfe8
   33f54:	mov	r0, #1
   33f58:	movt	r1, #6
   33f5c:	bl	1132c <__printf_chk@plt>
   33f60:	tst	r5, #2
   33f64:	beq	33e60 <__assert_fail@plt+0x22a5c>
   33f68:	movw	r1, #26616	; 0x67f8
   33f6c:	mov	r0, #1
   33f70:	movt	r1, #6
   33f74:	bl	1132c <__printf_chk@plt>
   33f78:	tst	r5, #4
   33f7c:	beq	33e68 <__assert_fail@plt+0x22a64>
   33f80:	movw	r1, #26628	; 0x6804
   33f84:	mov	r0, #1
   33f88:	movt	r1, #6
   33f8c:	bl	1132c <__printf_chk@plt>
   33f90:	tst	r5, #8
   33f94:	beq	33e70 <__assert_fail@plt+0x22a6c>
   33f98:	movw	r1, #3972	; 0xf84
   33f9c:	mov	r0, #1
   33fa0:	movt	r1, #6
   33fa4:	bl	1132c <__printf_chk@plt>
   33fa8:	b	33e70 <__assert_fail@plt+0x22a6c>
   33fac:	mov	r1, #48	; 0x30
   33fb0:	mov	r2, #1
   33fb4:	ldr	r3, [sp, #60]	; 0x3c
   33fb8:	add	r0, sp, #244	; 0xf4
   33fbc:	bl	111f4 <fread@plt>
   33fc0:	cmp	r0, #1
   33fc4:	bne	3392c <__assert_fail@plt+0x22528>
   33fc8:	ldr	r3, [fp]
   33fcc:	add	r0, sp, #244	; 0xf4
   33fd0:	mov	r1, #2
   33fd4:	blx	r3
   33fd8:	ldr	r3, [fp]
   33fdc:	mov	r1, #2
   33fe0:	strh	r0, [r5, #48]	; 0x30
   33fe4:	add	r0, sp, #246	; 0xf6
   33fe8:	blx	r3
   33fec:	ldr	r3, [fp]
   33ff0:	mov	r1, #4
   33ff4:	strh	r0, [r5, #50]	; 0x32
   33ff8:	add	r0, sp, #248	; 0xf8
   33ffc:	blx	r3
   34000:	ldr	r3, [fp]
   34004:	mov	r1, #8
   34008:	str	r0, [r5, #40]	; 0x28
   3400c:	add	r0, sp, #252	; 0xfc
   34010:	blx	r3
   34014:	ldr	r3, [fp]
   34018:	strd	r0, [r5, #16]
   3401c:	add	r0, sp, #260	; 0x104
   34020:	mov	r1, #8
   34024:	blx	r3
   34028:	ldr	r3, [fp]
   3402c:	strd	r0, [r5, #24]
   34030:	add	r0, sp, #268	; 0x10c
   34034:	mov	r1, #8
   34038:	blx	r3
   3403c:	ldr	r3, [fp]
   34040:	strd	r0, [r5, #32]
   34044:	add	r0, sp, #276	; 0x114
   34048:	mov	r1, #4
   3404c:	blx	r3
   34050:	ldr	r3, [fp]
   34054:	mov	r1, #2
   34058:	str	r0, [r5, #44]	; 0x2c
   3405c:	add	r0, sp, #280	; 0x118
   34060:	blx	r3
   34064:	ldr	r3, [fp]
   34068:	mov	r1, #2
   3406c:	str	r0, [r5, #52]	; 0x34
   34070:	add	r0, sp, #280	; 0x118
   34074:	add	r0, r0, #2
   34078:	blx	r3
   3407c:	ldr	r3, [fp]
   34080:	mov	r1, #2
   34084:	str	r0, [r5, #56]	; 0x38
   34088:	add	r0, sp, #284	; 0x11c
   3408c:	blx	r3
   34090:	ldr	r3, [fp]
   34094:	mov	r1, #2
   34098:	str	r0, [r5, #60]	; 0x3c
   3409c:	add	r0, sp, #284	; 0x11c
   340a0:	add	r0, r0, #2
   340a4:	blx	r3
   340a8:	ldr	r3, [fp]
   340ac:	mov	r1, #2
   340b0:	str	r0, [r5, #64]	; 0x40
   340b4:	add	r0, sp, #288	; 0x120
   340b8:	blx	r3
   340bc:	ldr	r3, [fp]
   340c0:	mov	r1, #2
   340c4:	str	r0, [r5, #68]	; 0x44
   340c8:	add	r0, sp, #288	; 0x120
   340cc:	add	r0, r0, #2
   340d0:	blx	r3
   340d4:	str	r0, [r5, #72]	; 0x48
   340d8:	b	33af4 <__assert_fail@plt+0x226f0>
   340dc:	cmp	ip, #0
   340e0:	beq	3411c <__assert_fail@plt+0x22d18>
   340e4:	ldr	r3, [r8, #1920]	; 0x780
   340e8:	cmp	ip, r3
   340ec:	bcs	3411c <__assert_fail@plt+0x22d18>
   340f0:	ldr	lr, [r8, #1876]	; 0x754
   340f4:	cmp	lr, #0
   340f8:	beq	3411c <__assert_fail@plt+0x22d18>
   340fc:	ldr	r1, [r8, #1924]	; 0x784
   34100:	mov	r3, #0
   34104:	ldr	r2, [r8, #1888]	; 0x760
   34108:	add	r1, r1, ip, lsl #4
   3410c:	ldrd	r0, [r1, #8]
   34110:	cmp	r1, r3
   34114:	cmpeq	r0, r2
   34118:	bcc	352d8 <__assert_fail@plt+0x23ed4>
   3411c:	mov	r2, ip
   34120:	movw	r1, #26608	; 0x67f0
   34124:	mov	r0, #1
   34128:	movt	r1, #6
   3412c:	bl	1132c <__printf_chk@plt>
   34130:	b	33e50 <__assert_fail@plt+0x22a4c>
   34134:	mov	r2, #5
   34138:	movw	r1, #26548	; 0x67b4
   3413c:	mov	r0, #0
   34140:	movt	r1, #6
   34144:	bl	11170 <dcgettext@plt>
   34148:	mov	r1, r0
   3414c:	mov	r0, #1
   34150:	bl	1132c <__printf_chk@plt>
   34154:	b	33f08 <__assert_fail@plt+0x22b04>
   34158:	ldr	fp, [sp, #68]	; 0x44
   3415c:	ldr	r0, [sp, #60]	; 0x3c
   34160:	movw	r5, #16712	; 0x4148
   34164:	bl	1f66c <__assert_fail@plt+0xe268>
   34168:	ldr	r3, [r9, #476]	; 0x1dc
   3416c:	movt	r5, #9
   34170:	cmp	r3, #0
   34174:	bne	34564 <__assert_fail@plt+0x23160>
   34178:	ldr	r4, [sp, #64]	; 0x40
   3417c:	ldr	r3, [r4, #-220]	; 0xffffff24
   34180:	cmp	r3, #0
   34184:	beq	341c4 <__assert_fail@plt+0x22dc0>
   34188:	ldrh	r2, [r9, #48]	; 0x30
   3418c:	movw	r3, #16712	; 0x4148
   34190:	movt	r3, #9
   34194:	cmp	r2, #4
   34198:	bne	35160 <__assert_fail@plt+0x23d5c>
   3419c:	ldr	r0, [r3, #60]	; 0x3c
   341a0:	cmp	r0, #0
   341a4:	bne	35228 <__assert_fail@plt+0x23e24>
   341a8:	movw	r1, #27532	; 0x6b8c
   341ac:	mov	r2, #5
   341b0:	movt	r1, #6
   341b4:	bl	11170 <dcgettext@plt>
   341b8:	mov	r1, r0
   341bc:	mov	r0, #1
   341c0:	bl	1132c <__printf_chk@plt>
   341c4:	ldr	sl, [sp, #64]	; 0x40
   341c8:	ldr	r3, [sl, #-228]	; 0xffffff1c
   341cc:	cmp	r3, #0
   341d0:	beq	34380 <__assert_fail@plt+0x22f7c>
   341d4:	ldr	r3, [r9, #68]	; 0x44
   341d8:	ldr	r7, [r9, #220]	; 0xdc
   341dc:	cmp	r3, #0
   341e0:	beq	34324 <__assert_fail@plt+0x22f20>
   341e4:	movw	ip, #62944	; 0xf5e0
   341e8:	movw	r4, #26444	; 0x674c
   341ec:	movt	ip, #5
   341f0:	movt	r4, #9
   341f4:	str	ip, [sp, #68]	; 0x44
   341f8:	mov	r8, #0
   341fc:	str	r4, [sp, #72]	; 0x48
   34200:	b	34218 <__assert_fail@plt+0x22e14>
   34204:	ldr	r3, [r9, #68]	; 0x44
   34208:	add	r8, r8, #1
   3420c:	add	r7, r7, #72	; 0x48
   34210:	cmp	r3, r8
   34214:	bls	34314 <__assert_fail@plt+0x22f10>
   34218:	ldr	r2, [r7, #4]
   3421c:	cmn	r2, #-1879048183	; 0x90000009
   34220:	bne	34204 <__assert_fail@plt+0x22e00>
   34224:	ldr	r2, [r7, #40]	; 0x28
   34228:	cmp	r2, r3
   3422c:	bcs	34204 <__assert_fail@plt+0x22e00>
   34230:	ldr	r3, [r7, #24]
   34234:	mov	r2, #5
   34238:	movw	r1, #23796	; 0x5cf4
   3423c:	mov	r0, #0
   34240:	movt	r1, #6
   34244:	ldrd	r4, [r7, #32]
   34248:	str	r3, [sp, #52]	; 0x34
   3424c:	bl	11170 <dcgettext@plt>
   34250:	ldr	r3, [sp, #52]	; 0x34
   34254:	mov	r6, #0
   34258:	mov	sl, #1
   3425c:	str	r6, [sp, #4]
   34260:	str	sl, [sp]
   34264:	mov	r2, r3
   34268:	strd	r4, [sp, #8]
   3426c:	ldr	r1, [sp, #60]	; 0x3c
   34270:	str	r0, [sp, #16]
   34274:	mov	r0, r6
   34278:	bl	1502c <__assert_fail@plt+0x3c28>
   3427c:	cmp	r0, #0
   34280:	str	r0, [sp, #80]	; 0x50
   34284:	beq	34204 <__assert_fail@plt+0x22e00>
   34288:	ldr	ip, [r7, #40]	; 0x28
   3428c:	mov	r2, #5
   34290:	ldr	r3, [r9, #220]	; 0xdc
   34294:	movw	r1, #27576	; 0x6bb8
   34298:	mov	r0, r6
   3429c:	movt	r1, #6
   342a0:	add	ip, ip, ip, lsl #3
   342a4:	add	r3, r3, ip, lsl #3
   342a8:	ldr	ip, [r3, #24]
   342ac:	ldrd	r4, [r3, #32]
   342b0:	str	r3, [sp, #52]	; 0x34
   342b4:	str	ip, [sp, #56]	; 0x38
   342b8:	bl	11170 <dcgettext@plt>
   342bc:	ldr	ip, [sp, #56]	; 0x38
   342c0:	str	sl, [sp]
   342c4:	ldr	r1, [sp, #60]	; 0x3c
   342c8:	mov	r2, ip
   342cc:	str	r6, [sp, #4]
   342d0:	strd	r4, [sp, #8]
   342d4:	str	r0, [sp, #16]
   342d8:	mov	r0, r6
   342dc:	bl	1502c <__assert_fail@plt+0x3c28>
   342e0:	ldr	r3, [sp, #52]	; 0x34
   342e4:	cmp	r0, #0
   342e8:	str	r0, [sp, #88]	; 0x58
   342ec:	beq	34300 <__assert_fail@plt+0x22efc>
   342f0:	ldrd	r4, [r7, #56]	; 0x38
   342f4:	cmp	r5, #0
   342f8:	cmpeq	r4, #20
   342fc:	beq	35358 <__assert_fail@plt+0x23f54>
   34300:	ldr	r0, [sp, #80]	; 0x50
   34304:	bl	1111c <free@plt>
   34308:	ldr	r0, [sp, #88]	; 0x58
   3430c:	bl	1111c <free@plt>
   34310:	b	34204 <__assert_fail@plt+0x22e00>
   34314:	ldr	r6, [sp, #64]	; 0x40
   34318:	ldr	r3, [r6, #-228]	; 0xffffff1c
   3431c:	cmp	r3, #0
   34320:	beq	34380 <__assert_fail@plt+0x22f7c>
   34324:	ldrh	r3, [r9, #50]	; 0x32
   34328:	cmp	r3, #22
   3432c:	beq	36028 <__assert_fail@plt+0x24c24>
   34330:	bls	35244 <__assert_fail@plt+0x23e40>
   34334:	cmp	r3, #105	; 0x69
   34338:	beq	3604c <__assert_fail@plt+0x24c48>
   3433c:	bls	35328 <__assert_fail@plt+0x23f24>
   34340:	cmp	r3, #167	; 0xa7
   34344:	beq	3608c <__assert_fail@plt+0x24c88>
   34348:	movw	r2, #41872	; 0xa390
   3434c:	cmp	r3, r2
   34350:	beq	36028 <__assert_fail@plt+0x24c24>
   34354:	cmp	r3, #140	; 0x8c
   34358:	bne	34380 <__assert_fail@plt+0x22f7c>
   3435c:	mov	r3, #0
   34360:	movw	r1, #27940	; 0x6d24
   34364:	str	r3, [sp]
   34368:	movt	r1, #6
   3436c:	movw	r3, #51252	; 0xc834
   34370:	ldr	r0, [sp, #60]	; 0x3c
   34374:	mov	r2, #1879048195	; 0x70000003
   34378:	movt	r3, #1
   3437c:	bl	1bf38 <__assert_fail@plt+0xab34>
   34380:	ldr	r0, [r9, #1896]	; 0x768
   34384:	movw	r4, #16712	; 0x4148
   34388:	movt	r4, #9
   3438c:	cmp	r0, #0
   34390:	beq	343a0 <__assert_fail@plt+0x22f9c>
   34394:	bl	1111c <free@plt>
   34398:	mov	r3, #0
   3439c:	str	r3, [r4, #1896]	; 0x768
   343a0:	ldr	r0, [r9, #220]	; 0xdc
   343a4:	movw	r4, #16712	; 0x4148
   343a8:	movt	r4, #9
   343ac:	cmp	r0, #0
   343b0:	beq	343c0 <__assert_fail@plt+0x22fbc>
   343b4:	bl	1111c <free@plt>
   343b8:	mov	r3, #0
   343bc:	str	r3, [r4, #220]	; 0xdc
   343c0:	ldr	r0, [r9, #212]	; 0xd4
   343c4:	movw	r4, #16712	; 0x4148
   343c8:	movt	r4, #9
   343cc:	cmp	r0, #0
   343d0:	beq	343e4 <__assert_fail@plt+0x22fe0>
   343d4:	bl	1111c <free@plt>
   343d8:	mov	r3, #0
   343dc:	str	r3, [r4, #212]	; 0xd4
   343e0:	str	r3, [r4, #216]	; 0xd8
   343e4:	ldr	r0, [r9, #1876]	; 0x754
   343e8:	movw	r4, #16712	; 0x4148
   343ec:	movt	r4, #9
   343f0:	cmp	r0, #0
   343f4:	beq	34408 <__assert_fail@plt+0x23004>
   343f8:	bl	1111c <free@plt>
   343fc:	mov	r3, #0
   34400:	str	r3, [r4, #1876]	; 0x754
   34404:	str	r3, [r4, #1888]	; 0x760
   34408:	ldr	r0, [r9, #1872]	; 0x750
   3440c:	movw	r4, #16712	; 0x4148
   34410:	movt	r4, #9
   34414:	cmp	r0, #0
   34418:	beq	3442c <__assert_fail@plt+0x23028>
   3441c:	bl	1111c <free@plt>
   34420:	mov	r3, #0
   34424:	str	r3, [r4, #1872]	; 0x750
   34428:	str	r3, [r4, #1884]	; 0x75c
   3442c:	ldr	r0, [r9, #1880]	; 0x758
   34430:	movw	r4, #16712	; 0x4148
   34434:	movt	r4, #9
   34438:	cmp	r0, #0
   3443c:	beq	3444c <__assert_fail@plt+0x23048>
   34440:	bl	1111c <free@plt>
   34444:	mov	r3, #0
   34448:	str	r3, [r4, #1880]	; 0x758
   3444c:	ldr	r0, [r9, #1924]	; 0x784
   34450:	movw	r4, #16712	; 0x4148
   34454:	movt	r4, #9
   34458:	cmp	r0, #0
   3445c:	beq	3446c <__assert_fail@plt+0x23068>
   34460:	bl	1111c <free@plt>
   34464:	mov	r3, #0
   34468:	str	r3, [r4, #1924]	; 0x784
   3446c:	ldr	r0, [r9, #524]	; 0x20c
   34470:	movw	r4, #16712	; 0x4148
   34474:	movt	r4, #9
   34478:	cmp	r0, #0
   3447c:	beq	3448c <__assert_fail@plt+0x23088>
   34480:	bl	1111c <free@plt>
   34484:	mov	r3, #0
   34488:	str	r3, [r4, #524]	; 0x20c
   3448c:	ldr	r6, [r9, #532]	; 0x214
   34490:	movw	r3, #16712	; 0x4148
   34494:	movt	r3, #9
   34498:	cmp	r6, #0
   3449c:	beq	344f0 <__assert_fail@plt+0x230ec>
   344a0:	ldr	r7, [r3, #528]	; 0x210
   344a4:	cmp	r7, #0
   344a8:	movne	r5, #0
   344ac:	beq	344e0 <__assert_fail@plt+0x230dc>
   344b0:	ldr	r0, [r6, r5, lsl #3]
   344b4:	cmp	r0, #0
   344b8:	bne	344c4 <__assert_fail@plt+0x230c0>
   344bc:	b	344d4 <__assert_fail@plt+0x230d0>
   344c0:	mov	r0, r4
   344c4:	ldr	r4, [r0]
   344c8:	bl	1111c <free@plt>
   344cc:	cmp	r4, #0
   344d0:	bne	344c0 <__assert_fail@plt+0x230bc>
   344d4:	add	r5, r5, #1
   344d8:	cmp	r5, r7
   344dc:	bne	344b0 <__assert_fail@plt+0x230ac>
   344e0:	mov	r0, r6
   344e4:	bl	1111c <free@plt>
   344e8:	mov	r3, #0
   344ec:	str	r3, [r9, #532]	; 0x214
   344f0:	bl	4adec <__assert_fail@plt+0x399e8>
   344f4:	mov	r0, #0
   344f8:	b	3394c <__assert_fail@plt+0x22548>
   344fc:	add	r1, r2, r1
   34500:	mov	r0, #30
   34504:	bl	19a8c <__assert_fail@plt+0x8688>
   34508:	b	33f08 <__assert_fail@plt+0x22b04>
   3450c:	ldr	r0, [r3, #472]	; 0x1d8
   34510:	mov	r1, #0
   34514:	mov	r2, r4
   34518:	bl	112f0 <memset@plt>
   3451c:	b	33ba0 <__assert_fail@plt+0x2279c>
   34520:	mov	r2, #5
   34524:	movw	r1, #25616	; 0x6410
   34528:	mov	r0, #0
   3452c:	movt	r1, #6
   34530:	bl	11170 <dcgettext@plt>
   34534:	mov	r2, r4
   34538:	mov	r1, r0
   3453c:	mov	r0, #1
   34540:	bl	1132c <__printf_chk@plt>
   34544:	b	33b84 <__assert_fail@plt+0x22780>
   34548:	mov	r1, r4
   3454c:	mov	r0, r5
   34550:	bl	169f0 <__assert_fail@plt+0x55ec>
   34554:	ldr	sl, [sp, #64]	; 0x40
   34558:	ldr	r4, [r9, #468]	; 0x1d4
   3455c:	ldr	r2, [sl, #-236]	; 0xffffff14
   34560:	b	33bb4 <__assert_fail@plt+0x227b0>
   34564:	ldr	r6, [r5, #480]	; 0x1e0
   34568:	ldr	r3, [r5, #68]	; 0x44
   3456c:	cmp	r6, #0
   34570:	beq	3461c <__assert_fail@plt+0x23218>
   34574:	cmp	r3, #0
   34578:	beq	34b84 <__assert_fail@plt+0x23780>
   3457c:	mov	r4, #0
   34580:	mov	r8, r4
   34584:	mov	r7, r4
   34588:	b	345a0 <__assert_fail@plt+0x2319c>
   3458c:	ldr	r3, [r9, #68]	; 0x44
   34590:	add	r7, r7, #1
   34594:	add	r4, r4, #72	; 0x48
   34598:	cmp	r7, r3
   3459c:	bcs	34608 <__assert_fail@plt+0x23204>
   345a0:	ldr	r3, [r9, #220]	; 0xdc
   345a4:	adds	r0, r3, r4
   345a8:	beq	34b58 <__assert_fail@plt+0x23754>
   345ac:	ldr	r2, [r5, #212]	; 0xd4
   345b0:	cmp	r2, #0
   345b4:	beq	34b6c <__assert_fail@plt+0x23768>
   345b8:	ldr	r0, [r0]
   345bc:	ldr	r3, [r5, #216]	; 0xd8
   345c0:	cmp	r0, r3
   345c4:	addcc	r0, r2, r0
   345c8:	bcs	345f0 <__assert_fail@plt+0x231ec>
   345cc:	ldr	r1, [r6]
   345d0:	bl	110f8 <strcmp@plt>
   345d4:	cmp	r0, #0
   345d8:	bne	3458c <__assert_fail@plt+0x23188>
   345dc:	mov	r0, r7
   345e0:	ldrb	r1, [r6, #4]
   345e4:	bl	169f0 <__assert_fail@plt+0x55ec>
   345e8:	mov	r8, #1
   345ec:	b	3458c <__assert_fail@plt+0x23188>
   345f0:	movw	r1, #50908	; 0xc6dc
   345f4:	mov	r2, #5
   345f8:	movt	r1, #5
   345fc:	mov	r0, #0
   34600:	bl	11170 <dcgettext@plt>
   34604:	b	345cc <__assert_fail@plt+0x231c8>
   34608:	cmp	r8, #0
   3460c:	beq	34b84 <__assert_fail@plt+0x23780>
   34610:	ldr	r6, [r6, #8]
   34614:	cmp	r6, #0
   34618:	bne	34574 <__assert_fail@plt+0x23170>
   3461c:	cmp	r3, #0
   34620:	movw	r2, #16712	; 0x4148
   34624:	movt	r2, #9
   34628:	ldr	r6, [r9, #220]	; 0xdc
   3462c:	moveq	r7, r3
   34630:	ldr	r1, [r2, #468]	; 0x1d4
   34634:	beq	34d78 <__assert_fail@plt+0x23974>
   34638:	cmp	r1, #0
   3463c:	beq	36220 <__assert_fail@plt+0x24e1c>
   34640:	add	r5, r6, #72	; 0x48
   34644:	movw	r7, #16696	; 0x4138
   34648:	movw	sl, #62012	; 0xf23c
   3464c:	movt	r7, #9
   34650:	str	r5, [sp, #68]	; 0x44
   34654:	movt	sl, #7
   34658:	str	r7, [sp, #88]	; 0x58
   3465c:	mov	r7, #0
   34660:	str	r5, [sp, #72]	; 0x48
   34664:	str	fp, [sp, #124]	; 0x7c
   34668:	b	346cc <__assert_fail@plt+0x232c8>
   3466c:	tst	r3, #16
   34670:	bne	34704 <__assert_fail@plt+0x23300>
   34674:	tst	r3, #8
   34678:	bne	34724 <__assert_fail@plt+0x23320>
   3467c:	tst	r3, #4
   34680:	bne	34a50 <__assert_fail@plt+0x2364c>
   34684:	ldr	r2, [r9, #68]	; 0x44
   34688:	add	r7, r7, #1
   3468c:	movw	r3, #16712	; 0x4148
   34690:	ldr	r6, [sp, #68]	; 0x44
   34694:	cmp	r7, r2
   34698:	movt	r3, #9
   3469c:	bcs	3529c <__assert_fail@plt+0x23e98>
   346a0:	movw	fp, #16712	; 0x4148
   346a4:	movt	fp, #9
   346a8:	ldr	ip, [sp, #72]	; 0x48
   346ac:	ldr	r3, [fp, #468]	; 0x1d4
   346b0:	add	ip, ip, #72	; 0x48
   346b4:	str	ip, [sp, #72]	; 0x48
   346b8:	cmp	r7, r3
   346bc:	bcs	34d70 <__assert_fail@plt+0x2396c>
   346c0:	ldr	r4, [sp, #68]	; 0x44
   346c4:	add	r4, r4, #72	; 0x48
   346c8:	str	r4, [sp, #68]	; 0x44
   346cc:	ldr	r3, [r9, #472]	; 0x1d8
   346d0:	ldrb	r3, [r3, r7]
   346d4:	tst	r3, #1
   346d8:	beq	3466c <__assert_fail@plt+0x23268>
   346dc:	movw	fp, #16712	; 0x4148
   346e0:	movt	fp, #9
   346e4:	mov	r0, r6
   346e8:	ldr	r1, [sp, #60]	; 0x3c
   346ec:	mov	r2, #0
   346f0:	bl	30ba0 <__assert_fail@plt+0x1f79c>
   346f4:	ldr	r3, [fp, #472]	; 0x1d8
   346f8:	ldrb	r3, [r3, r7]
   346fc:	tst	r3, #16
   34700:	beq	34674 <__assert_fail@plt+0x23270>
   34704:	mov	r0, r6
   34708:	ldr	r1, [sp, #60]	; 0x3c
   3470c:	mov	r2, #1
   34710:	bl	30ba0 <__assert_fail@plt+0x1f79c>
   34714:	ldr	r3, [r9, #472]	; 0x1d8
   34718:	ldrb	r3, [r3, r7]
   3471c:	tst	r3, #8
   34720:	beq	3467c <__assert_fail@plt+0x23278>
   34724:	mov	r0, r6
   34728:	ldr	r1, [sp, #60]	; 0x3c
   3472c:	bl	1d244 <__assert_fail@plt+0xbe40>
   34730:	cmp	r0, #0
   34734:	mov	r8, r0
   34738:	str	r0, [sp, #164]	; 0xa4
   3473c:	beq	34d64 <__assert_fail@plt+0x23960>
   34740:	ldrd	r4, [r6, #32]
   34744:	mov	r2, #5
   34748:	movw	r1, #26692	; 0x6844
   3474c:	mov	r0, #0
   34750:	movt	r1, #6
   34754:	strd	r4, [sp, #80]	; 0x50
   34758:	bl	11170 <dcgettext@plt>
   3475c:	mov	r4, r0
   34760:	mov	r0, r6
   34764:	bl	132f8 <__assert_fail@plt+0x1ef4>
   34768:	mov	r1, r4
   3476c:	mov	r2, r0
   34770:	mov	r0, #1
   34774:	bl	1132c <__printf_chk@plt>
   34778:	ldr	r5, [sp, #64]	; 0x40
   3477c:	ldr	r3, [r5, #-312]	; 0xfffffec8
   34780:	cmp	r3, #0
   34784:	beq	34968 <__assert_fail@plt+0x23564>
   34788:	ldrd	r4, [sp, #80]	; 0x50
   3478c:	add	ip, sp, #424	; 0x1a8
   34790:	mvn	fp, #255	; 0xff
   34794:	mov	r0, #2048	; 0x800
   34798:	mov	r1, #0
   3479c:	strd	r4, [ip, fp]
   347a0:	ldrd	r2, [r6, #8]
   347a4:	and	r2, r2, r0
   347a8:	and	r3, r3, r1
   347ac:	orrs	lr, r2, r3
   347b0:	bne	34d1c <__assert_fail@plt+0x23918>
   347b4:	ldrd	r4, [sp, #80]	; 0x50
   347b8:	cmp	r5, #0
   347bc:	cmpeq	r4, #12
   347c0:	bls	34968 <__assert_fail@plt+0x23564>
   347c4:	ldr	r4, [sp, #164]	; 0xa4
   347c8:	movw	r1, #22804	; 0x5914
   347cc:	movt	r1, #6
   347d0:	mov	r0, r4
   347d4:	bl	110f8 <strcmp@plt>
   347d8:	cmp	r0, #0
   347dc:	bne	34968 <__assert_fail@plt+0x23564>
   347e0:	ldrb	r2, [r4, #4]
   347e4:	add	r3, r4, #12
   347e8:	ldrb	r0, [r4, #5]
   347ec:	mov	r1, #0
   347f0:	str	r3, [sp, #164]	; 0xa4
   347f4:	mov	r3, #0
   347f8:	lsr	r5, r2, #24
   347fc:	lsl	ip, r2, #8
   34800:	ldrb	r2, [r4, #6]
   34804:	str	r5, [sp, #156]	; 0x9c
   34808:	str	ip, [sp, #152]	; 0x98
   3480c:	strd	r2, [sp, #40]	; 0x28
   34810:	ldrd	r2, [sp, #152]	; 0x98
   34814:	adds	r0, r0, r2
   34818:	adc	r1, r1, r3
   3481c:	lsl	ip, r0, #8
   34820:	str	ip, [sp, #96]	; 0x60
   34824:	lsl	r3, r1, #8
   34828:	mov	r1, #0
   3482c:	orr	r5, r3, r0, lsr #24
   34830:	ldrb	r0, [r4, #7]
   34834:	str	r5, [sp, #100]	; 0x64
   34838:	ldrd	r2, [sp, #40]	; 0x28
   3483c:	strd	r0, [sp, #32]
   34840:	ldrd	r0, [sp, #96]	; 0x60
   34844:	adds	r2, r2, r0
   34848:	ldrb	r0, [r4, #8]
   3484c:	adc	r3, r3, r1
   34850:	lsl	ip, r2, #8
   34854:	str	ip, [sp, #104]	; 0x68
   34858:	lsl	r1, r3, #8
   3485c:	orr	r5, r1, r2, lsr #24
   34860:	str	r5, [sp, #108]	; 0x6c
   34864:	ldrd	r2, [sp, #104]	; 0x68
   34868:	mov	r1, #0
   3486c:	strd	r0, [sp, #40]	; 0x28
   34870:	ldrd	r0, [sp, #32]
   34874:	adds	r0, r0, r2
   34878:	adc	r1, r1, r3
   3487c:	lsl	ip, r0, #8
   34880:	str	ip, [sp, #112]	; 0x70
   34884:	lsl	r3, r1, #8
   34888:	mov	r1, #0
   3488c:	orr	r5, r3, r0, lsr #24
   34890:	ldrb	r0, [r4, #9]
   34894:	str	r5, [sp, #116]	; 0x74
   34898:	ldrd	r2, [sp, #40]	; 0x28
   3489c:	strd	r0, [sp, #32]
   348a0:	ldrd	r0, [sp, #112]	; 0x70
   348a4:	adds	r2, r2, r0
   348a8:	ldrb	r0, [r4, #10]
   348ac:	adc	r3, r3, r1
   348b0:	lsl	ip, r2, #8
   348b4:	str	ip, [sp, #128]	; 0x80
   348b8:	lsl	r1, r3, #8
   348bc:	ldrb	r4, [r4, #11]
   348c0:	orr	r5, r1, r2, lsr #24
   348c4:	str	r5, [sp, #132]	; 0x84
   348c8:	ldrd	r2, [sp, #128]	; 0x80
   348cc:	mov	r1, #0
   348d0:	strd	r0, [sp, #40]	; 0x28
   348d4:	mov	r5, #0
   348d8:	ldrd	r0, [sp, #32]
   348dc:	adds	r0, r0, r2
   348e0:	adc	r1, r1, r3
   348e4:	lsl	lr, r0, #8
   348e8:	lsl	r3, r1, #8
   348ec:	orr	ip, r3, r0, lsr #24
   348f0:	str	ip, [sp, #140]	; 0x8c
   348f4:	str	lr, [sp, #136]	; 0x88
   348f8:	add	ip, sp, #424	; 0x1a8
   348fc:	ldrd	r0, [sp, #136]	; 0x88
   34900:	ldrd	r2, [sp, #40]	; 0x28
   34904:	adds	r2, r2, r0
   34908:	adc	r3, r3, r1
   3490c:	ldrd	r0, [sp, #80]	; 0x50
   34910:	lsl	lr, r3, #8
   34914:	subs	r0, r0, #12
   34918:	sbc	r1, r1, #0
   3491c:	strd	r0, [ip, fp]
   34920:	orr	r0, lr, r2, lsr #24
   34924:	lsl	r1, r2, #8
   34928:	str	r0, [sp, #148]	; 0x94
   3492c:	str	r1, [sp, #144]	; 0x90
   34930:	ldrd	r2, [sp, #144]	; 0x90
   34934:	adds	r2, r2, r4
   34938:	adc	r3, r3, r5
   3493c:	orrs	r4, r2, r3
   34940:	beq	34968 <__assert_fail@plt+0x23564>
   34944:	add	r1, sp, #168	; 0xa8
   34948:	add	r0, sp, #164	; 0xa4
   3494c:	str	r1, [sp]
   34950:	bl	1995c <__assert_fail@plt+0x8558>
   34954:	cmp	r0, #0
   34958:	addne	r5, sp, #424	; 0x1a8
   3495c:	mvnne	r3, #255	; 0xff
   34960:	ldrdne	r4, [r5, r3]
   34964:	strdne	r4, [sp, #80]	; 0x50
   34968:	ldr	lr, [r9, #68]	; 0x44
   3496c:	ldr	r4, [r9, #220]	; 0xdc
   34970:	add	ip, lr, lr, lsl #3
   34974:	add	ip, r4, ip, lsl #3
   34978:	cmp	r4, ip
   3497c:	bcs	349c4 <__assert_fail@plt+0x235c0>
   34980:	mov	r1, r4
   34984:	ldr	r3, [r1, #4]
   34988:	cmp	r3, #9
   3498c:	cmpne	r3, #4
   34990:	moveq	r0, #0
   34994:	movne	r0, #1
   34998:	bne	349b8 <__assert_fail@plt+0x235b4>
   3499c:	ldr	r2, [r1, #44]	; 0x2c
   349a0:	cmp	r2, lr
   349a4:	bcs	349b8 <__assert_fail@plt+0x235b4>
   349a8:	add	r2, r2, r2, lsl #3
   349ac:	add	r2, r4, r2, lsl #3
   349b0:	cmp	r6, r2
   349b4:	beq	34ce4 <__assert_fail@plt+0x238e0>
   349b8:	add	r1, r1, #72	; 0x48
   349bc:	cmp	r1, ip
   349c0:	bcc	34984 <__assert_fail@plt+0x23580>
   349c4:	ldr	r3, [sp, #164]	; 0xa4
   349c8:	mov	r0, #0
   349cc:	ldr	ip, [sp, #80]	; 0x50
   349d0:	add	r5, r3, ip
   349d4:	cmp	r5, r3
   349d8:	bhi	349fc <__assert_fail@plt+0x235f8>
   349dc:	b	34a20 <__assert_fail@plt+0x2361c>
   349e0:	andeq	r5, r9, r8, ror #20
   349e4:	ldrdeq	r4, [r9], -r0
   349e8:	andeq	fp, r5, r8, lsr sl
   349ec:	andeq	fp, r5, ip, asr sl
   349f0:	andeq	r6, r9, r0, lsl r0
   349f4:	cmp	r3, r5
   349f8:	beq	34a20 <__assert_fail@plt+0x2361c>
   349fc:	mov	r4, r3
   34a00:	add	r3, r3, #1
   34a04:	ldrb	r2, [r4]
   34a08:	lsl	r2, r2, #1
   34a0c:	ldrh	r2, [sl, r2]
   34a10:	tst	r2, #16
   34a14:	beq	349f4 <__assert_fail@plt+0x235f0>
   34a18:	cmp	r5, r4
   34a1c:	bhi	34ba8 <__assert_fail@plt+0x237a4>
   34a20:	cmp	r0, #0
   34a24:	beq	35030 <__assert_fail@plt+0x23c2c>
   34a28:	mov	r0, r8
   34a2c:	bl	1111c <free@plt>
   34a30:	ldr	r4, [sp, #88]	; 0x58
   34a34:	mov	r0, #10
   34a38:	ldr	r1, [r4]
   34a3c:	bl	111ac <_IO_putc@plt>
   34a40:	ldr	r3, [r9, #472]	; 0x1d8
   34a44:	ldrb	r3, [r3, r7]
   34a48:	tst	r3, #4
   34a4c:	beq	34684 <__assert_fail@plt+0x23280>
   34a50:	cmp	r6, #0
   34a54:	beq	36164 <__assert_fail@plt+0x24d60>
   34a58:	ldr	r0, [r9, #212]	; 0xd4
   34a5c:	cmp	r0, #0
   34a60:	beq	3614c <__assert_fail@plt+0x24d48>
   34a64:	ldr	fp, [sp, #72]	; 0x48
   34a68:	movw	ip, #16712	; 0x4148
   34a6c:	movt	ip, #9
   34a70:	ldr	r5, [fp, #-72]	; 0xffffffb8
   34a74:	ldr	r3, [ip, #216]	; 0xd8
   34a78:	cmp	r5, r3
   34a7c:	addcc	r5, r0, r5
   34a80:	bcs	34de8 <__assert_fail@plt+0x239e4>
   34a84:	mov	r0, r6
   34a88:	bl	132f8 <__assert_fail@plt+0x1ef4>
   34a8c:	ldrd	r2, [r6, #32]
   34a90:	orrs	lr, r2, r3
   34a94:	movweq	r1, #26868	; 0x68f4
   34a98:	str	r0, [sp, #80]	; 0x50
   34a9c:	movteq	r1, #6
   34aa0:	moveq	r0, #0
   34aa4:	beq	34b3c <__assert_fail@plt+0x23738>
   34aa8:	ldr	r4, [sp, #72]	; 0x48
   34aac:	ldr	r3, [r4, #-68]	; 0xffffffbc
   34ab0:	cmp	r3, #8
   34ab4:	beq	355b4 <__assert_fail@plt+0x241b0>
   34ab8:	mov	r0, r5
   34abc:	mov	r2, #17
   34ac0:	movw	r1, #65032	; 0xfe08
   34ac4:	movt	r1, #5
   34ac8:	bl	113e0 <strncmp@plt>
   34acc:	mov	fp, #0
   34ad0:	movw	r2, #25604	; 0x6404
   34ad4:	movt	r2, #6
   34ad8:	movw	r8, #14352	; 0x3810
   34adc:	movt	r8, #9
   34ae0:	mov	r4, fp
   34ae4:	cmp	r0, fp
   34ae8:	moveq	r5, r2
   34aec:	ldr	r0, [r8, fp]
   34af0:	mov	r1, r5
   34af4:	bl	110f8 <strcmp@plt>
   34af8:	cmp	r0, #0
   34afc:	beq	34c18 <__assert_fail@plt+0x23814>
   34b00:	cmp	r4, #4
   34b04:	beq	34bfc <__assert_fail@plt+0x237f8>
   34b08:	add	r3, r8, fp
   34b0c:	mov	r1, r5
   34b10:	ldr	r0, [r3, #4]
   34b14:	bl	110f8 <strcmp@plt>
   34b18:	cmp	r0, #0
   34b1c:	beq	34c18 <__assert_fail@plt+0x23814>
   34b20:	add	r4, r4, #1
   34b24:	add	fp, fp, #64	; 0x40
   34b28:	cmp	r4, #36	; 0x24
   34b2c:	bne	34aec <__assert_fail@plt+0x236e8>
   34b30:	movw	r1, #27988	; 0x6d54
   34b34:	movt	r1, #6
   34b38:	mov	r0, #0
   34b3c:	mov	r2, #5
   34b40:	bl	11170 <dcgettext@plt>
   34b44:	ldr	r2, [sp, #80]	; 0x50
   34b48:	mov	r1, r0
   34b4c:	mov	r0, #1
   34b50:	bl	1132c <__printf_chk@plt>
   34b54:	b	34684 <__assert_fail@plt+0x23280>
   34b58:	movw	r1, #50888	; 0xc6c8
   34b5c:	mov	r2, #5
   34b60:	movt	r1, #5
   34b64:	bl	11170 <dcgettext@plt>
   34b68:	b	345cc <__assert_fail@plt+0x231c8>
   34b6c:	mov	r0, r2
   34b70:	movw	r1, #50896	; 0xc6d0
   34b74:	mov	r2, #5
   34b78:	movt	r1, #5
   34b7c:	bl	11170 <dcgettext@plt>
   34b80:	b	345cc <__assert_fail@plt+0x231c8>
   34b84:	mov	r2, #5
   34b88:	movw	r1, #26636	; 0x680c
   34b8c:	mov	r0, #0
   34b90:	movt	r1, #6
   34b94:	bl	11170 <dcgettext@plt>
   34b98:	ldr	r1, [r6]
   34b9c:	bl	4b9ec <warn@@Base>
   34ba0:	ldr	r3, [r9, #68]	; 0x44
   34ba4:	b	34610 <__assert_fail@plt+0x2320c>
   34ba8:	ldr	r2, [sp, #164]	; 0xa4
   34bac:	movw	r1, #26820	; 0x68c4
   34bb0:	mov	r0, #1
   34bb4:	movt	r1, #6
   34bb8:	rsb	r2, r2, r4
   34bbc:	rsb	fp, r4, r5
   34bc0:	bl	1132c <__printf_chk@plt>
   34bc4:	subs	r0, fp, #0
   34bc8:	beq	34dc4 <__assert_fail@plt+0x239c0>
   34bcc:	mov	r1, r4
   34bd0:	bl	19a8c <__assert_fail@plt+0x8688>
   34bd4:	ldr	ip, [sp, #88]	; 0x58
   34bd8:	mov	r0, #10
   34bdc:	ldr	r1, [ip]
   34be0:	bl	111ac <_IO_putc@plt>
   34be4:	mov	r0, r4
   34be8:	mov	r1, fp
   34bec:	bl	11350 <strnlen@plt>
   34bf0:	add	r3, r4, r0
   34bf4:	mov	r0, #1
   34bf8:	b	349d4 <__assert_fail@plt+0x235d0>
   34bfc:	movw	r1, #26976	; 0x6960
   34c00:	mov	r0, r5
   34c04:	movt	r1, #6
   34c08:	mov	r2, #12
   34c0c:	bl	113e0 <strncmp@plt>
   34c10:	cmp	r0, #0
   34c14:	bne	34b08 <__assert_fail@plt+0x23704>
   34c18:	mov	r0, r5
   34c1c:	lsl	fp, r4, #6
   34c20:	str	fp, [sp, #80]	; 0x50
   34c24:	bl	13438 <__assert_fail@plt+0x2034>
   34c28:	ldr	fp, [sp, #80]	; 0x50
   34c2c:	add	fp, r8, fp
   34c30:	subs	r0, r6, r0
   34c34:	movne	r0, #1
   34c38:	cmp	r0, #0
   34c3c:	str	r0, [sp, #120]	; 0x78
   34c40:	bne	352a8 <__assert_fail@plt+0x23ea4>
   34c44:	cmp	r4, #4
   34c48:	beq	352b4 <__assert_fail@plt+0x23eb0>
   34c4c:	ldr	ip, [sp, #80]	; 0x50
   34c50:	mov	r1, r5
   34c54:	ldr	r3, [r8, ip]
   34c58:	mov	r0, r3
   34c5c:	str	r3, [sp, #52]	; 0x34
   34c60:	bl	110f8 <strcmp@plt>
   34c64:	ldr	r3, [sp, #52]	; 0x34
   34c68:	cmp	r0, #0
   34c6c:	ldrne	r3, [fp, #4]
   34c70:	str	r3, [fp, #8]
   34c74:	mov	r1, r6
   34c78:	mov	r0, r4
   34c7c:	ldr	r2, [sp, #60]	; 0x3c
   34c80:	bl	30794 <__assert_fail@plt+0x1f390>
   34c84:	cmp	r0, #0
   34c88:	beq	34684 <__assert_fail@plt+0x23280>
   34c8c:	mov	r1, r7
   34c90:	ldr	r0, [sp, #60]	; 0x3c
   34c94:	bl	48544 <__assert_fail@plt+0x37140>
   34c98:	ldr	r3, [sp, #80]	; 0x50
   34c9c:	ldr	r5, [sp, #64]	; 0x40
   34ca0:	add	r8, r8, r3
   34ca4:	ldr	r1, [sp, #60]	; 0x3c
   34ca8:	ldr	r3, [r8, #48]	; 0x30
   34cac:	str	r0, [r5, #-308]	; 0xfffffecc
   34cb0:	mov	r0, fp
   34cb4:	blx	r3
   34cb8:	ldr	r6, [sp, #120]	; 0x78
   34cbc:	mov	r3, #0
   34cc0:	str	r3, [r5, #-308]	; 0xfffffecc
   34cc4:	cmp	r6, #0
   34cc8:	bne	34cd8 <__assert_fail@plt+0x238d4>
   34ccc:	cmp	r4, r3
   34cd0:	cmpne	r4, #3
   34cd4:	beq	34684 <__assert_fail@plt+0x23280>
   34cd8:	mov	r0, r4
   34cdc:	bl	33824 <__assert_fail@plt+0x22420>
   34ce0:	b	34684 <__assert_fail@plt+0x23280>
   34ce4:	ldrd	r2, [r1, #32]
   34ce8:	orrs	fp, r2, r3
   34cec:	beq	349b8 <__assert_fail@plt+0x235b4>
   34cf0:	ldr	r3, [r1, #40]	; 0x28
   34cf4:	cmp	r3, lr
   34cf8:	bcs	349b8 <__assert_fail@plt+0x235b4>
   34cfc:	mov	r2, #5
   34d00:	movw	r1, #26724	; 0x6864
   34d04:	movt	r1, #6
   34d08:	bl	11170 <dcgettext@plt>
   34d0c:	mov	r1, r0
   34d10:	mov	r0, #1
   34d14:	bl	1132c <__printf_chk@plt>
   34d18:	b	349c4 <__assert_fail@plt+0x235c0>
   34d1c:	add	r0, sp, #184	; 0xb8
   34d20:	ldr	r1, [sp, #164]	; 0xa4
   34d24:	bl	1863c <__assert_fail@plt+0x7238>
   34d28:	ldr	r3, [sp, #184]	; 0xb8
   34d2c:	cmp	r3, #1
   34d30:	beq	36180 <__assert_fail@plt+0x24d7c>
   34d34:	mov	r2, #5
   34d38:	movw	r1, #22716	; 0x58bc
   34d3c:	mov	r0, #0
   34d40:	movt	r1, #6
   34d44:	bl	11170 <dcgettext@plt>
   34d48:	mov	r4, r0
   34d4c:	mov	r0, r6
   34d50:	bl	132f8 <__assert_fail@plt+0x1ef4>
   34d54:	ldr	r2, [sp, #184]	; 0xb8
   34d58:	mov	r1, r0
   34d5c:	mov	r0, r4
   34d60:	bl	4b9ec <warn@@Base>
   34d64:	ldr	r3, [r9, #472]	; 0x1d8
   34d68:	ldrb	r3, [r3, r7]
   34d6c:	b	3467c <__assert_fail@plt+0x23278>
   34d70:	ldr	fp, [sp, #124]	; 0x7c
   34d74:	mov	r1, r3
   34d78:	movw	r5, #16712	; 0x4148
   34d7c:	movt	r5, #9
   34d80:	mov	r4, r7
   34d84:	cmp	r4, r1
   34d88:	add	r4, r4, #1
   34d8c:	bcs	34178 <__assert_fail@plt+0x22d74>
   34d90:	ldr	r3, [r9, #472]	; 0x1d8
   34d94:	ldrb	r3, [r3, r4]
   34d98:	cmp	r3, #0
   34d9c:	beq	34d84 <__assert_fail@plt+0x23980>
   34da0:	mov	r2, #5
   34da4:	movw	r1, #26992	; 0x6970
   34da8:	mov	r0, #0
   34dac:	movt	r1, #6
   34db0:	bl	11170 <dcgettext@plt>
   34db4:	mov	r1, r4
   34db8:	bl	4b9ec <warn@@Base>
   34dbc:	ldr	r1, [r5, #468]	; 0x1d4
   34dc0:	b	34d84 <__assert_fail@plt+0x23980>
   34dc4:	mov	r2, #5
   34dc8:	movw	r1, #1916	; 0x77c
   34dcc:	movt	r1, #6
   34dd0:	bl	11170 <dcgettext@plt>
   34dd4:	mov	r1, r0
   34dd8:	mov	r0, #1
   34ddc:	bl	1132c <__printf_chk@plt>
   34de0:	mov	r3, r5
   34de4:	b	34bf4 <__assert_fail@plt+0x237f0>
   34de8:	movw	r1, #50908	; 0xc6dc
   34dec:	mov	r0, #0
   34df0:	movt	r1, #5
   34df4:	mov	r2, #5
   34df8:	bl	11170 <dcgettext@plt>
   34dfc:	mov	r5, r0
   34e00:	b	34a84 <__assert_fail@plt+0x23680>
   34e04:	ldr	r0, [sp, #60]	; 0x3c
   34e08:	bl	1d768 <__assert_fail@plt+0xc364>
   34e0c:	b	33c3c <__assert_fail@plt+0x22838>
   34e10:	ldr	r3, [r9, #68]	; 0x44
   34e14:	ldr	ip, [r9, #220]	; 0xdc
   34e18:	cmp	r3, #0
   34e1c:	beq	35130 <__assert_fail@plt+0x23d2c>
   34e20:	mov	r4, r5
   34e24:	movw	r7, #16712	; 0x4148
   34e28:	str	fp, [sp, #88]	; 0x58
   34e2c:	movt	r7, #9
   34e30:	add	r5, ip, #72	; 0x48
   34e34:	str	r7, [sp, #68]	; 0x44
   34e38:	mov	sl, r4
   34e3c:	mov	fp, r4
   34e40:	b	34e58 <__assert_fail@plt+0x23a54>
   34e44:	ldr	r3, [r9, #68]	; 0x44
   34e48:	add	sl, sl, #1
   34e4c:	add	r5, r5, #72	; 0x48
   34e50:	cmp	sl, r3
   34e54:	bcs	35120 <__assert_fail@plt+0x23d1c>
   34e58:	ldr	r3, [r5, #-68]	; 0xffffffbc
   34e5c:	sub	r7, r5, #72	; 0x48
   34e60:	cmp	r3, #9
   34e64:	cmpne	r3, #4
   34e68:	moveq	r0, #0
   34e6c:	movne	r0, #1
   34e70:	bne	34e44 <__assert_fail@plt+0x23a40>
   34e74:	ldr	r4, [r5, #-40]	; 0xffffffd8
   34e78:	ldr	ip, [r5, #-48]	; 0xffffffd0
   34e7c:	cmp	r4, #0
   34e80:	str	ip, [sp, #124]	; 0x7c
   34e84:	beq	34e44 <__assert_fail@plt+0x23a40>
   34e88:	mov	r2, #5
   34e8c:	movw	r1, #26316	; 0x66cc
   34e90:	movt	r1, #6
   34e94:	bl	11170 <dcgettext@plt>
   34e98:	mov	r1, r0
   34e9c:	mov	r0, #1
   34ea0:	bl	1132c <__printf_chk@plt>
   34ea4:	ldr	r3, [r9, #212]	; 0xd4
   34ea8:	cmp	r3, #0
   34eac:	beq	36074 <__assert_fail@plt+0x24c70>
   34eb0:	mov	r0, r7
   34eb4:	bl	132f8 <__assert_fail@plt+0x1ef4>
   34eb8:	movw	r1, #7692	; 0x1e0c
   34ebc:	movt	r1, #6
   34ec0:	mov	r2, r0
   34ec4:	mov	r0, #1
   34ec8:	bl	1132c <__printf_chk@plt>
   34ecc:	mov	r2, #5
   34ed0:	movw	r1, #14320	; 0x37f0
   34ed4:	mov	r0, #0
   34ed8:	movt	r1, #6
   34edc:	bl	11170 <dcgettext@plt>
   34ee0:	ldrd	r2, [r5, #-16]
   34ee4:	mov	r1, #0
   34ee8:	mov	r7, r0
   34eec:	mov	r0, r4
   34ef0:	bl	529fc <zcfree@@Base+0x13cc>
   34ef4:	mov	r1, r7
   34ef8:	ldr	r2, [sp, #124]	; 0x7c
   34efc:	mov	r3, r0
   34f00:	mov	r0, #1
   34f04:	bl	1132c <__printf_chk@plt>
   34f08:	ldr	r3, [r5, #-68]	; 0xffffffbc
   34f0c:	ldr	r7, [r5, #-32]	; 0xffffffe0
   34f10:	subs	r6, r3, #4
   34f14:	rsbs	r3, r6, #0
   34f18:	adcs	r3, r3, r6
   34f1c:	cmp	r7, #0
   34f20:	str	r3, [sp, #72]	; 0x48
   34f24:	beq	34ff8 <__assert_fail@plt+0x23bf4>
   34f28:	ldr	r3, [r9, #68]	; 0x44
   34f2c:	cmp	r7, r3
   34f30:	bcs	34ff8 <__assert_fail@plt+0x23bf4>
   34f34:	ldr	r6, [sp, #68]	; 0x44
   34f38:	add	r7, r7, r7, lsl #3
   34f3c:	ldr	r2, [r6, #220]	; 0xdc
   34f40:	add	r2, r2, r7, lsl #3
   34f44:	str	r2, [sp, #120]	; 0x78
   34f48:	ldr	r2, [r2, #4]
   34f4c:	cmp	r2, #11
   34f50:	cmpne	r2, #2
   34f54:	bne	34e48 <__assert_fail@plt+0x23a44>
   34f58:	ldr	r3, [r6, #460]	; 0x1cc
   34f5c:	add	r2, sp, #184	; 0xb8
   34f60:	ldr	r0, [sp, #60]	; 0x3c
   34f64:	cmp	r3, #0
   34f68:	ldr	r1, [sp, #120]	; 0x78
   34f6c:	beq	361ec <__assert_fail@plt+0x24de8>
   34f70:	bl	155f4 <__assert_fail@plt+0x41f0>
   34f74:	mov	r8, r0
   34f78:	cmp	r8, #0
   34f7c:	beq	34e44 <__assert_fail@plt+0x23a40>
   34f80:	ldr	r7, [sp, #120]	; 0x78
   34f84:	ldr	fp, [r7, #40]	; 0x28
   34f88:	cmp	fp, #0
   34f8c:	beq	34f9c <__assert_fail@plt+0x23b98>
   34f90:	ldr	r3, [r9, #68]	; 0x44
   34f94:	cmp	fp, r3
   34f98:	bcc	36258 <__assert_fail@plt+0x24e54>
   34f9c:	ldr	r0, [sp, #184]	; 0xb8
   34fa0:	mov	r2, r4
   34fa4:	ldr	fp, [sp, #72]	; 0x48
   34fa8:	mov	r3, #0
   34fac:	ldr	r4, [sp, #120]	; 0x78
   34fb0:	str	r3, [sp, #4]
   34fb4:	str	r0, [sp]
   34fb8:	str	r3, [sp, #8]
   34fbc:	mov	r3, r8
   34fc0:	str	fp, [sp, #12]
   34fc4:	ldr	ip, [r4, #4]
   34fc8:	ldr	r1, [sp, #124]	; 0x7c
   34fcc:	subs	lr, ip, #11
   34fd0:	ldr	r0, [sp, #60]	; 0x3c
   34fd4:	rsbs	ip, lr, #0
   34fd8:	adcs	ip, ip, lr
   34fdc:	str	ip, [sp, #16]
   34fe0:	bl	23140 <__assert_fail@plt+0x11d3c>
   34fe4:	mov	r0, r8
   34fe8:	mov	fp, #1
   34fec:	bl	1111c <free@plt>
   34ff0:	ldr	r3, [r9, #68]	; 0x44
   34ff4:	b	34e48 <__assert_fail@plt+0x23a44>
   34ff8:	ldr	r6, [sp, #72]	; 0x48
   34ffc:	mov	ip, #0
   35000:	ldr	r1, [sp, #124]	; 0x7c
   35004:	mov	r2, r4
   35008:	str	ip, [sp]
   3500c:	mov	r3, ip
   35010:	str	r6, [sp, #12]
   35014:	mov	fp, #1
   35018:	str	ip, [sp, #4]
   3501c:	ldr	r0, [sp, #60]	; 0x3c
   35020:	str	ip, [sp, #8]
   35024:	str	ip, [sp, #16]
   35028:	bl	23140 <__assert_fail@plt+0x11d3c>
   3502c:	b	34e44 <__assert_fail@plt+0x23a40>
   35030:	mov	r2, #5
   35034:	movw	r1, #26832	; 0x68d0
   35038:	movt	r1, #6
   3503c:	bl	11170 <dcgettext@plt>
   35040:	mov	r1, r0
   35044:	mov	r0, #1
   35048:	bl	1132c <__printf_chk@plt>
   3504c:	b	34a28 <__assert_fail@plt+0x23624>
   35050:	mov	r2, #5
   35054:	movw	r1, #25672	; 0x6448
   35058:	mov	r0, #0
   3505c:	movt	r1, #6
   35060:	str	ip, [sp, #56]	; 0x38
   35064:	str	r3, [sp, #52]	; 0x34
   35068:	bl	11170 <dcgettext@plt>
   3506c:	ldr	r3, [sp, #52]	; 0x34
   35070:	str	r4, [sp]
   35074:	mov	r2, r3
   35078:	mov	r3, r6
   3507c:	mov	r1, r0
   35080:	mov	r0, #1
   35084:	bl	1132c <__printf_chk@plt>
   35088:	mov	r1, #0
   3508c:	mvn	r0, #0
   35090:	and	r3, r7, r1
   35094:	and	r2, r6, r0
   35098:	and	r7, r5, r1
   3509c:	and	r6, r4, r0
   350a0:	ldr	r0, [sp, #60]	; 0x3c
   350a4:	strd	r6, [sp]
   350a8:	mov	r6, #1
   350ac:	bl	1d67c <__assert_fail@plt+0xc278>
   350b0:	ldr	r5, [r9, #1884]	; 0x75c
   350b4:	ldr	lr, [r9, #1888]	; 0x760
   350b8:	mov	r2, r4
   350bc:	ldr	r4, [r9, #1876]	; 0x754
   350c0:	ldr	r3, [r9, #1872]	; 0x750
   350c4:	str	fp, [sp, #12]
   350c8:	str	r6, [sp, #16]
   350cc:	str	r5, [sp]
   350d0:	stmib	sp, {r4, lr}
   350d4:	mov	r1, r0
   350d8:	ldr	r0, [sp, #60]	; 0x3c
   350dc:	bl	23140 <__assert_fail@plt+0x11d3c>
   350e0:	ldr	ip, [sp, #56]	; 0x38
   350e4:	b	33cb8 <__assert_fail@plt+0x228b4>
   350e8:	cmp	r0, #23
   350ec:	bne	33cb0 <__assert_fail@plt+0x228ac>
   350f0:	ldr	lr, [sp, #68]	; 0x44
   350f4:	movw	fp, #2088	; 0x828
   350f8:	ldrd	r0, [lr, fp]
   350fc:	cmp	r1, #0
   35100:	cmpeq	r0, #7
   35104:	moveq	fp, #1
   35108:	beq	33cb0 <__assert_fail@plt+0x228ac>
   3510c:	cmp	r1, #0
   35110:	cmpeq	r0, #17
   35114:	mvnne	fp, #0
   35118:	moveq	fp, #0
   3511c:	b	33cb0 <__assert_fail@plt+0x228ac>
   35120:	mov	r4, fp
   35124:	cmp	r4, #0
   35128:	ldr	fp, [sp, #88]	; 0x58
   3512c:	bne	33cec <__assert_fail@plt+0x228e8>
   35130:	mov	r2, #5
   35134:	movw	r1, #26272	; 0x66a0
   35138:	mov	r0, #0
   3513c:	movt	r1, #6
   35140:	bl	11170 <dcgettext@plt>
   35144:	mov	r1, r0
   35148:	mov	r0, #1
   3514c:	bl	1132c <__printf_chk@plt>
   35150:	b	33cec <__assert_fail@plt+0x228e8>
   35154:	ldr	r0, [sp, #60]	; 0x3c
   35158:	blx	r2
   3515c:	b	33d8c <__assert_fail@plt+0x22988>
   35160:	ldr	r2, [r3, #68]	; 0x44
   35164:	ldr	ip, [r3, #220]	; 0xdc
   35168:	cmp	r2, #0
   3516c:	beq	35228 <__assert_fail@plt+0x23e24>
   35170:	cmp	ip, #0
   35174:	beq	35228 <__assert_fail@plt+0x23e24>
   35178:	mov	r7, #0
   3517c:	add	r4, ip, #72	; 0x48
   35180:	str	r7, [sp, #72]	; 0x48
   35184:	mov	r5, r7
   35188:	b	351b4 <__assert_fail@plt+0x23db0>
   3518c:	movw	r2, #36992	; 0x9080
   35190:	cmp	r3, r2
   35194:	beq	351d0 <__assert_fail@plt+0x23dcc>
   35198:	ldr	r3, [r9, #68]	; 0x44
   3519c:	add	r5, r5, #1
   351a0:	cmp	r5, r3
   351a4:	bcs	3521c <__assert_fail@plt+0x23e18>
   351a8:	cmp	r4, #0
   351ac:	add	r4, r4, #72	; 0x48
   351b0:	beq	3521c <__assert_fail@plt+0x23e18>
   351b4:	ldr	r3, [r4, #-68]	; 0xffffffbc
   351b8:	cmp	r3, #7
   351bc:	beq	351fc <__assert_fail@plt+0x23df8>
   351c0:	ldrh	r3, [r9, #50]	; 0x32
   351c4:	cmp	r3, #87	; 0x57
   351c8:	cmpne	r3, #36	; 0x24
   351cc:	bne	3518c <__assert_fail@plt+0x23d88>
   351d0:	ldr	r3, [r4, #-68]	; 0xffffffbc
   351d4:	cmp	r3, #-1610612736	; 0xa0000000
   351d8:	bne	35198 <__assert_fail@plt+0x23d94>
   351dc:	ldrd	r6, [r4, #-40]	; 0xffffffd8
   351e0:	ldr	r8, [r4, #-48]	; 0xffffffd0
   351e4:	orrs	sl, r6, r7
   351e8:	bne	355c4 <__assert_fail@plt+0x241c0>
   351ec:	ldr	r6, [sp, #72]	; 0x48
   351f0:	add	r6, r6, #1
   351f4:	str	r6, [sp, #72]	; 0x48
   351f8:	b	35198 <__assert_fail@plt+0x23d94>
   351fc:	ldrd	r0, [r4, #-40]	; 0xffffffd8
   35200:	ldrd	r2, [r4, #-48]	; 0xffffffd0
   35204:	orrs	r6, r0, r1
   35208:	bne	35284 <__assert_fail@plt+0x23e80>
   3520c:	ldr	r7, [sp, #72]	; 0x48
   35210:	add	r7, r7, #1
   35214:	str	r7, [sp, #72]	; 0x48
   35218:	b	351c0 <__assert_fail@plt+0x23dbc>
   3521c:	ldr	r7, [sp, #72]	; 0x48
   35220:	cmp	r7, #0
   35224:	bne	341c4 <__assert_fail@plt+0x22dc0>
   35228:	ldr	r0, [sp, #60]	; 0x3c
   3522c:	bl	1d2ec <__assert_fail@plt+0xbee8>
   35230:	cmp	r0, #0
   35234:	beq	341c4 <__assert_fail@plt+0x22dc0>
   35238:	ldr	r0, [sp, #60]	; 0x3c
   3523c:	bl	28320 <__assert_fail@plt+0x16f1c>
   35240:	b	341c4 <__assert_fail@plt+0x22dc0>
   35244:	cmp	r3, #10
   35248:	beq	36130 <__assert_fail@plt+0x24d2c>
   3524c:	bls	36120 <__assert_fail@plt+0x24d1c>
   35250:	cmp	r3, #18
   35254:	beq	36004 <__assert_fail@plt+0x24c00>
   35258:	cmp	r3, #20
   3525c:	bne	34380 <__assert_fail@plt+0x22f7c>
   35260:	mov	r1, #0
   35264:	ldr	r0, [sp, #60]	; 0x3c
   35268:	movw	ip, #46860	; 0xb70c
   3526c:	mov	r3, r1
   35270:	movt	ip, #1
   35274:	mvn	r2, #-1879048182	; 0x9000000a
   35278:	str	ip, [sp]
   3527c:	bl	1bf38 <__assert_fail@plt+0xab34>
   35280:	b	34380 <__assert_fail@plt+0x22f7c>
   35284:	strd	r0, [sp]
   35288:	ldr	r0, [sp, #60]	; 0x3c
   3528c:	bl	26b54 <__assert_fail@plt+0x15750>
   35290:	b	3520c <__assert_fail@plt+0x23e08>
   35294:	add	fp, r3, r7
   35298:	b	33ee4 <__assert_fail@plt+0x22ae0>
   3529c:	ldr	fp, [sp, #124]	; 0x7c
   352a0:	ldr	r1, [r3, #468]	; 0x1d4
   352a4:	b	34d78 <__assert_fail@plt+0x23974>
   352a8:	mov	r0, r4
   352ac:	bl	33824 <__assert_fail@plt+0x22420>
   352b0:	b	34c44 <__assert_fail@plt+0x23840>
   352b4:	movw	r1, #26976	; 0x6960
   352b8:	mov	r0, r5
   352bc:	movt	r1, #6
   352c0:	mov	r2, #12
   352c4:	bl	113e0 <strncmp@plt>
   352c8:	cmp	r0, #0
   352cc:	streq	r5, [fp, #8]
   352d0:	beq	34c74 <__assert_fail@plt+0x23870>
   352d4:	b	34c4c <__assert_fail@plt+0x23848>
   352d8:	add	r1, lr, r0
   352dc:	mov	r0, #10
   352e0:	bl	19a8c <__assert_fail@plt+0x8688>
   352e4:	movw	lr, #16696	; 0x4138
   352e8:	movt	lr, #9
   352ec:	mov	r0, #32
   352f0:	ldr	r1, [lr]
   352f4:	bl	111ac <_IO_putc@plt>
   352f8:	b	33e50 <__assert_fail@plt+0x22a4c>
   352fc:	mov	r2, #5
   35300:	movw	r1, #26424	; 0x6738
   35304:	mov	r0, #0
   35308:	movt	r1, #6
   3530c:	bl	11170 <dcgettext@plt>
   35310:	ldr	r2, [r4, #2188]	; 0x88c
   35314:	ldr	r3, [r4, #2192]	; 0x890
   35318:	mov	r1, r0
   3531c:	mov	r0, #1
   35320:	bl	1132c <__printf_chk@plt>
   35324:	b	33dd8 <__assert_fail@plt+0x229d4>
   35328:	cmp	r3, #40	; 0x28
   3532c:	bne	35ffc <__assert_fail@plt+0x24bf8>
   35330:	mov	r3, #0
   35334:	ldr	r0, [sp, #60]	; 0x3c
   35338:	str	r3, [sp]
   3533c:	movw	r1, #27772	; 0x6c7c
   35340:	movw	r3, #47440	; 0xb950
   35344:	movt	r1, #6
   35348:	mov	r2, #1879048195	; 0x70000003
   3534c:	movt	r3, #1
   35350:	bl	1bf38 <__assert_fail@plt+0xab34>
   35354:	b	34380 <__assert_fail@plt+0x22f7c>
   35358:	ldr	r3, [r3, #32]
   3535c:	mov	r2, #5
   35360:	movw	r1, #27600	; 0x6bd0
   35364:	mov	r0, #0
   35368:	movt	r1, #6
   3536c:	str	r3, [sp, #96]	; 0x60
   35370:	bl	11170 <dcgettext@plt>
   35374:	str	r0, [sp, #120]	; 0x78
   35378:	mov	r0, r7
   3537c:	bl	132f8 <__assert_fail@plt+0x1ef4>
   35380:	mov	r2, r4
   35384:	mov	r3, r5
   35388:	mov	ip, r0
   3538c:	ldrd	r0, [r7, #32]
   35390:	str	ip, [sp, #56]	; 0x38
   35394:	bl	529fc <zcfree@@Base+0x13cc>
   35398:	ldr	ip, [sp, #56]	; 0x38
   3539c:	ldr	r1, [sp, #120]	; 0x78
   353a0:	mov	r2, ip
   353a4:	mov	r3, r0
   353a8:	mov	r0, #1
   353ac:	bl	1132c <__printf_chk@plt>
   353b0:	mov	r2, #5
   353b4:	movw	r1, #27652	; 0x6c04
   353b8:	mov	r0, #0
   353bc:	movt	r1, #6
   353c0:	bl	11170 <dcgettext@plt>
   353c4:	bl	11218 <puts@plt>
   353c8:	ldrd	r2, [r7, #32]
   353cc:	cmp	r3, #0
   353d0:	cmpeq	r2, #19
   353d4:	bls	34300 <__assert_fail@plt+0x22efc>
   353d8:	str	sl, [sp, #104]	; 0x68
   353dc:	str	r6, [sp, #108]	; 0x6c
   353e0:	str	r7, [sp, #120]	; 0x78
   353e4:	ldr	r4, [sp, #80]	; 0x50
   353e8:	ldrd	r6, [sp, #104]	; 0x68
   353ec:	str	r8, [sp, #112]	; 0x70
   353f0:	str	r9, [sp, #104]	; 0x68
   353f4:	b	3546c <__assert_fail@plt+0x24068>
   353f8:	cmp	ip, sl
   353fc:	bls	35580 <__assert_fail@plt+0x2417c>
   35400:	ldr	ip, [sp, #88]	; 0x58
   35404:	add	r2, ip, sl
   35408:	movw	r1, #27724	; 0x6c4c
   3540c:	mov	r0, #1
   35410:	movt	r1, #6
   35414:	bl	1132c <__printf_chk@plt>
   35418:	mov	r3, r8
   3541c:	str	r5, [sp, #4]
   35420:	add	r2, sp, #292	; 0x124
   35424:	str	r9, [sp]
   35428:	movw	r1, #27744	; 0x6c60
   3542c:	mov	r0, #1
   35430:	movt	r1, #6
   35434:	add	r4, r4, #20
   35438:	bl	1132c <__printf_chk@plt>
   3543c:	ldr	r5, [sp, #120]	; 0x78
   35440:	mov	r2, #20
   35444:	mov	r3, #0
   35448:	ldrd	r0, [r5, #32]
   3544c:	bl	529fc <zcfree@@Base+0x13cc>
   35450:	adds	r2, r6, #1
   35454:	adc	r3, r7, #0
   35458:	cmp	r7, r1
   3545c:	cmpeq	r6, r0
   35460:	bcs	3613c <__assert_fail@plt+0x24d38>
   35464:	mov	r6, r2
   35468:	mov	r7, r3
   3546c:	ldr	r3, [fp]
   35470:	mov	r0, r4
   35474:	mov	r1, #4
   35478:	blx	r3
   3547c:	ldr	r3, [fp]
   35480:	mov	r1, #4
   35484:	mov	sl, r0
   35488:	add	r0, r4, #4
   3548c:	blx	r3
   35490:	ldr	r3, [fp]
   35494:	mov	r1, #4
   35498:	str	r0, [sp, #184]	; 0xb8
   3549c:	add	r0, r4, #8
   354a0:	blx	r3
   354a4:	ldr	r3, [fp]
   354a8:	mov	r1, #4
   354ac:	mov	r8, r0
   354b0:	add	r0, r4, #12
   354b4:	blx	r3
   354b8:	ldr	r3, [fp]
   354bc:	mov	r1, #4
   354c0:	mov	r9, r0
   354c4:	add	r0, r4, #16
   354c8:	blx	r3
   354cc:	mov	r5, r0
   354d0:	add	r0, sp, #184	; 0xb8
   354d4:	bl	11320 <gmtime@plt>
   354d8:	ldr	ip, [sp, #68]	; 0x44
   354dc:	mov	r1, #128	; 0x80
   354e0:	mov	r3, r1
   354e4:	str	ip, [sp]
   354e8:	ldr	r2, [r0, #20]
   354ec:	mov	lr, r0
   354f0:	add	r2, r2, #1888	; 0x760
   354f4:	add	r2, r2, #12
   354f8:	str	r2, [sp, #4]
   354fc:	ldr	r2, [r0, #16]
   35500:	add	r0, sp, #292	; 0x124
   35504:	add	r2, r2, #1
   35508:	str	r2, [sp, #8]
   3550c:	ldr	ip, [lr, #12]
   35510:	mov	r2, #1
   35514:	str	ip, [sp, #12]
   35518:	ldr	ip, [lr, #8]
   3551c:	str	ip, [sp, #16]
   35520:	ldr	ip, [lr, #4]
   35524:	str	ip, [sp, #20]
   35528:	ldr	lr, [lr]
   3552c:	str	lr, [sp, #24]
   35530:	bl	113f8 <__snprintf_chk@plt>
   35534:	movw	r1, #23936	; 0x5d80
   35538:	mov	r0, #1
   3553c:	movt	r1, #6
   35540:	sub	r2, r6, #1
   35544:	bl	1132c <__printf_chk@plt>
   35548:	ldr	ip, [sp, #72]	; 0x48
   3554c:	ldr	r0, [ip]
   35550:	ldr	ip, [sp, #96]	; 0x60
   35554:	cmp	r0, #0
   35558:	bne	353f8 <__assert_fail@plt+0x23ff4>
   3555c:	cmp	ip, sl
   35560:	bls	3559c <__assert_fail@plt+0x24198>
   35564:	ldr	ip, [sp, #88]	; 0x58
   35568:	add	r2, ip, sl
   3556c:	movw	r1, #27732	; 0x6c54
   35570:	mov	r0, #1
   35574:	movt	r1, #6
   35578:	bl	1132c <__printf_chk@plt>
   3557c:	b	35418 <__assert_fail@plt+0x24014>
   35580:	mov	r2, #5
   35584:	movw	r1, #50908	; 0xc6dc
   35588:	mov	r0, #0
   3558c:	movt	r1, #5
   35590:	bl	11170 <dcgettext@plt>
   35594:	mov	r2, r0
   35598:	b	35408 <__assert_fail@plt+0x24004>
   3559c:	mov	r2, #5
   355a0:	movw	r1, #50908	; 0xc6dc
   355a4:	movt	r1, #5
   355a8:	bl	11170 <dcgettext@plt>
   355ac:	mov	r2, r0
   355b0:	b	3556c <__assert_fail@plt+0x24168>
   355b4:	movw	r1, #26908	; 0x691c
   355b8:	mov	r0, #0
   355bc:	movt	r1, #6
   355c0:	b	34b3c <__assert_fail@plt+0x23738>
   355c4:	mov	r2, #5
   355c8:	movw	r1, #27048	; 0x69a8
   355cc:	mov	r0, #0
   355d0:	movt	r1, #6
   355d4:	bl	11170 <dcgettext@plt>
   355d8:	mov	r2, #1
   355dc:	mov	r3, #0
   355e0:	strd	r6, [sp, #8]
   355e4:	strd	r2, [sp]
   355e8:	mov	r2, r8
   355ec:	ldr	r1, [sp, #60]	; 0x3c
   355f0:	str	r0, [sp, #16]
   355f4:	mov	r0, #0
   355f8:	bl	1502c <__assert_fail@plt+0x3c28>
   355fc:	cmp	r0, #0
   35600:	str	r0, [sp, #68]	; 0x44
   35604:	beq	351ec <__assert_fail@plt+0x23de8>
   35608:	mov	r2, #5
   3560c:	movw	r1, #27060	; 0x69b4
   35610:	mov	r0, #0
   35614:	movt	r1, #6
   35618:	bl	11170 <dcgettext@plt>
   3561c:	mov	r3, r6
   35620:	mov	r2, r8
   35624:	mov	r1, r0
   35628:	mov	r0, #1
   3562c:	bl	1132c <__printf_chk@plt>
   35630:	ldr	ip, [sp, #68]	; 0x44
   35634:	add	r6, ip, r6
   35638:	add	r3, ip, #13
   3563c:	cmp	r6, r3
   35640:	bls	35ff0 <__assert_fail@plt+0x24bec>
   35644:	mov	r7, ip
   35648:	mov	r8, r6
   3564c:	str	r5, [sp, #88]	; 0x58
   35650:	str	r4, [sp, #120]	; 0x78
   35654:	str	r9, [sp, #96]	; 0x60
   35658:	ldr	r2, [fp]
   3565c:	add	r0, r7, #8
   35660:	mov	r1, #4
   35664:	add	r9, r7, #12
   35668:	blx	r2
   3566c:	ldr	r2, [fp]
   35670:	mov	r1, #4
   35674:	str	r0, [sp, #80]	; 0x50
   35678:	mov	r0, r7
   3567c:	blx	r2
   35680:	ldr	r2, [fp]
   35684:	mov	r1, #4
   35688:	mov	r6, r0
   3568c:	add	r0, r7, #4
   35690:	blx	r2
   35694:	add	r4, r6, #3
   35698:	bic	r4, r4, #3
   3569c:	ldr	sl, [sp, #68]	; 0x44
   356a0:	add	r4, r9, r4
   356a4:	cmp	sl, r4
   356a8:	mov	r5, r0
   356ac:	bhi	356b8 <__assert_fail@plt+0x242b4>
   356b0:	cmp	r8, r4
   356b4:	bhi	356dc <__assert_fail@plt+0x242d8>
   356b8:	mov	r2, #5
   356bc:	movw	r1, #11992	; 0x2ed8
   356c0:	mov	r0, #0
   356c4:	movt	r1, #6
   356c8:	bl	11170 <dcgettext@plt>
   356cc:	mov	r1, r6
   356d0:	bl	4b9ec <warn@@Base>
   356d4:	mov	r4, r9
   356d8:	mov	r6, #0
   356dc:	add	sl, r5, #3
   356e0:	ldr	ip, [sp, #68]	; 0x44
   356e4:	bic	sl, sl, #3
   356e8:	add	sl, r4, sl
   356ec:	cmp	r8, sl
   356f0:	movcs	r2, #0
   356f4:	movcc	r2, #1
   356f8:	cmp	ip, sl
   356fc:	orrhi	r2, r2, #1
   35700:	cmp	r2, #0
   35704:	bne	36314 <__assert_fail@plt+0x24f10>
   35708:	add	r3, r9, r6
   3570c:	cmp	r8, r3
   35710:	bcc	35f9c <__assert_fail@plt+0x24b98>
   35714:	cmp	r6, #0
   35718:	blt	35f9c <__assert_fail@plt+0x24b98>
   3571c:	ldr	r3, [sp, #80]	; 0x50
   35720:	sub	r7, r3, #1
   35724:	cmp	r7, #5
   35728:	ldrls	pc, [pc, r7, lsl #2]
   3572c:	b	358fc <__assert_fail@plt+0x244f8>
   35730:	andeq	r5, r3, r4, lsl #16
   35734:	andeq	r5, r3, ip, ror #15
   35738:	ldrdeq	r5, [r3], -r4
   3573c:			; <UNDEFINED> instruction: 0x000357bc
   35740:	andeq	r5, r3, r4, lsr #15
   35744:	andeq	r5, r3, r8, asr #14
   35748:	movw	r1, #27424	; 0x6b20
   3574c:	mov	r0, #0
   35750:	movt	r1, #6
   35754:	mov	r2, #5
   35758:	bl	11170 <dcgettext@plt>
   3575c:	mov	r2, r0
   35760:	movw	r1, #27436	; 0x6b2c
   35764:	mov	r0, #1
   35768:	movt	r1, #6
   3576c:	bl	1132c <__printf_chk@plt>
   35770:	cmp	r5, #4
   35774:	beq	3581c <__assert_fail@plt+0x24418>
   35778:	movw	r1, #28020	; 0x6d74
   3577c:	mov	r2, r6
   35780:	mov	r3, r5
   35784:	mov	r0, #1
   35788:	movt	r1, #6
   3578c:	bl	1132c <__printf_chk@plt>
   35790:	add	r3, sl, #13
   35794:	cmp	r8, r3
   35798:	bls	36248 <__assert_fail@plt+0x24e44>
   3579c:	mov	r7, sl
   357a0:	b	35658 <__assert_fail@plt+0x24254>
   357a4:	movw	r1, #27408	; 0x6b10
   357a8:	mov	r2, #5
   357ac:	movt	r1, #6
   357b0:	mov	r0, #0
   357b4:	bl	11170 <dcgettext@plt>
   357b8:	b	3575c <__assert_fail@plt+0x24358>
   357bc:	movw	r1, #27380	; 0x6af4
   357c0:	mov	r2, #5
   357c4:	movt	r1, #6
   357c8:	mov	r0, #0
   357cc:	bl	11170 <dcgettext@plt>
   357d0:	b	3575c <__assert_fail@plt+0x24358>
   357d4:	movw	r1, #27352	; 0x6ad8
   357d8:	mov	r2, #5
   357dc:	movt	r1, #6
   357e0:	mov	r0, #0
   357e4:	bl	11170 <dcgettext@plt>
   357e8:	b	3575c <__assert_fail@plt+0x24358>
   357ec:	movw	r1, #27320	; 0x6ab8
   357f0:	mov	r2, #5
   357f4:	movt	r1, #6
   357f8:	mov	r0, #0
   357fc:	bl	11170 <dcgettext@plt>
   35800:	b	3575c <__assert_fail@plt+0x24358>
   35804:	movw	r1, #27292	; 0x6a9c
   35808:	mov	r2, #5
   3580c:	movt	r1, #6
   35810:	mov	r0, #0
   35814:	bl	11170 <dcgettext@plt>
   35818:	b	3575c <__assert_fail@plt+0x24358>
   3581c:	mov	r0, r4
   35820:	ldr	r3, [fp]
   35824:	mov	r1, r5
   35828:	blx	r3
   3582c:	subs	r4, r0, #0
   35830:	beq	361cc <__assert_fail@plt+0x24dc8>
   35834:	cmp	r7, #5
   35838:	ldrls	pc, [pc, r7, lsl #2]
   3583c:	b	35860 <__assert_fail@plt+0x2445c>
   35840:			; <UNDEFINED> instruction: 0x000358bc
   35844:	andeq	r5, r3, r8, lsl #17
   35848:	ldrdeq	r5, [r3], -ip
   3584c:	andeq	r5, r3, r8, asr r8
   35850:	andeq	r5, r3, r8, asr r8
   35854:	andeq	r5, r3, r8, asr r8
   35858:	cmp	r4, #1
   3585c:	beq	363b4 <__assert_fail@plt+0x24fb0>
   35860:	mov	r2, #5
   35864:	movw	r1, #27512	; 0x6b78
   35868:	mov	r0, #0
   3586c:	movt	r1, #6
   35870:	bl	11170 <dcgettext@plt>
   35874:	mov	r2, r4
   35878:	mov	r1, r0
   3587c:	mov	r0, #1
   35880:	bl	1132c <__printf_chk@plt>
   35884:	b	35778 <__assert_fail@plt+0x24374>
   35888:	cmp	r4, #1
   3588c:	beq	363c4 <__assert_fail@plt+0x24fc0>
   35890:	cmp	r4, #2
   35894:	bne	35860 <__assert_fail@plt+0x2445c>
   35898:	movw	r1, #27468	; 0x6b4c
   3589c:	movt	r1, #6
   358a0:	mov	r0, #0
   358a4:	mov	r2, #5
   358a8:	bl	11170 <dcgettext@plt>
   358ac:	mov	r1, r0
   358b0:	mov	r0, #1
   358b4:	bl	1132c <__printf_chk@plt>
   358b8:	b	35790 <__assert_fail@plt+0x2438c>
   358bc:	cmp	r4, #1
   358c0:	beq	36364 <__assert_fail@plt+0x24f60>
   358c4:	cmp	r4, #2
   358c8:	bne	35860 <__assert_fail@plt+0x2445c>
   358cc:	movw	r1, #1384	; 0x568
   358d0:	mov	r0, #0
   358d4:	movt	r1, #6
   358d8:	b	358a4 <__assert_fail@plt+0x244a0>
   358dc:	cmp	r4, #1
   358e0:	beq	363a4 <__assert_fail@plt+0x24fa0>
   358e4:	cmp	r4, #2
   358e8:	bne	35860 <__assert_fail@plt+0x2445c>
   358ec:	movw	r1, #27492	; 0x6b64
   358f0:	mov	r0, #0
   358f4:	movt	r1, #6
   358f8:	b	358a4 <__assert_fail@plt+0x244a0>
   358fc:	mov	r2, #5
   35900:	movw	r1, #57528	; 0xe0b8
   35904:	mov	r0, #0
   35908:	movt	r1, #5
   3590c:	bl	11170 <dcgettext@plt>
   35910:	ldr	ip, [sp, #80]	; 0x50
   35914:	mov	r1, #64	; 0x40
   35918:	mov	r2, #1
   3591c:	mov	r3, r1
   35920:	str	ip, [sp, #4]
   35924:	str	r0, [sp]
   35928:	ldr	r0, [pc, #-3904]	; 349f0 <__assert_fail@plt+0x235ec>
   3592c:	bl	113f8 <__snprintf_chk@plt>
   35930:	ldr	r0, [pc, #-3912]	; 349f0 <__assert_fail@plt+0x235ec>
   35934:	b	3575c <__assert_fail@plt+0x24358>
   35938:	mov	r0, r6
   3593c:	mov	r2, #5
   35940:	movw	r1, #26220	; 0x666c
   35944:	movt	r1, #6
   35948:	bl	11170 <dcgettext@plt>
   3594c:	mov	r1, r0
   35950:	mov	r0, #1
   35954:	bl	1132c <__printf_chk@plt>
   35958:	b	33cec <__assert_fail@plt+0x228e8>
   3595c:	ldrb	r3, [r2, #7]
   35960:	cmp	r3, #13
   35964:	bne	33ce0 <__assert_fail@plt+0x228dc>
   35968:	ldr	r1, [r2, #1920]	; 0x780
   3596c:	mov	r3, #0
   35970:	ldr	r0, [r2, #1924]	; 0x784
   35974:	str	r3, [sp, #184]	; 0xb8
   35978:	add	r2, r0, r1, lsl #4
   3597c:	str	r3, [sp, #188]	; 0xbc
   35980:	cmp	r0, r2
   35984:	str	r3, [sp, #192]	; 0xc0
   35988:	str	r3, [sp, #196]	; 0xc4
   3598c:	str	r3, [sp, #200]	; 0xc8
   35990:	str	r3, [sp, #204]	; 0xcc
   35994:	str	r3, [sp, #208]	; 0xd0
   35998:	str	r3, [sp, #212]	; 0xd4
   3599c:	str	r3, [sp, #216]	; 0xd8
   359a0:	str	r3, [sp, #220]	; 0xdc
   359a4:	str	r3, [sp, #168]	; 0xa8
   359a8:	str	r3, [sp, #172]	; 0xac
   359ac:	str	r3, [sp, #176]	; 0xb0
   359b0:	str	r3, [sp, #180]	; 0xb4
   359b4:	str	r3, [sp, #68]	; 0x44
   359b8:	bcs	35f1c <__assert_fail@plt+0x24b18>
   359bc:	add	r4, r0, #16
   359c0:	str	r3, [sp, #124]	; 0x7c
   359c4:	str	r3, [sp, #72]	; 0x48
   359c8:	str	r3, [sp, #120]	; 0x78
   359cc:	str	fp, [sp, #40]	; 0x28
   359d0:	b	35a38 <__assert_fail@plt+0x24634>
   359d4:	cmp	r3, #0
   359d8:	cmpeq	r2, #10
   359dc:	beq	35f30 <__assert_fail@plt+0x24b2c>
   359e0:	bls	35cdc <__assert_fail@plt+0x248d8>
   359e4:	mov	r0, #29
   359e8:	movt	r0, #24576	; 0x6000
   359ec:	mov	r1, #0
   359f0:	cmp	r3, r1
   359f4:	cmpeq	r2, r0
   359f8:	beq	35cfc <__assert_fail@plt+0x248f8>
   359fc:	mov	r0, #31
   35a00:	movt	r0, #24576	; 0x6000
   35a04:	mov	r1, #0
   35a08:	cmp	r3, r1
   35a0c:	cmpeq	r2, r0
   35a10:	ldrdeq	r2, [r4, #-8]
   35a14:	addeq	lr, sp, #424	; 0x1a8
   35a18:	mvneq	r1, #255	; 0xff
   35a1c:	strdeq	r2, [lr, r1]
   35a20:	ldr	r2, [r9, #1920]	; 0x780
   35a24:	add	r4, r4, #16
   35a28:	ldr	r3, [r9, #1924]	; 0x784
   35a2c:	add	r3, r3, r2, lsl #4
   35a30:	cmp	r7, r3
   35a34:	bcs	35f04 <__assert_fail@plt+0x24b00>
   35a38:	ldrd	r2, [r4, #-16]
   35a3c:	mov	r0, #35	; 0x23
   35a40:	movt	r0, #24576	; 0x6000
   35a44:	mov	r1, #0
   35a48:	cmp	r3, r1
   35a4c:	cmpeq	r2, r0
   35a50:	mov	r7, r4
   35a54:	beq	35ef8 <__assert_fail@plt+0x24af4>
   35a58:	bls	359d4 <__assert_fail@plt+0x245d0>
   35a5c:	mov	r0, #65	; 0x41
   35a60:	movt	r0, #24576	; 0x6000
   35a64:	mov	r1, #0
   35a68:	cmp	r3, r1
   35a6c:	cmpeq	r2, r0
   35a70:	beq	35cf0 <__assert_fail@plt+0x248ec>
   35a74:	bls	35cbc <__assert_fail@plt+0x248b8>
   35a78:	mov	r0, #69	; 0x45
   35a7c:	movt	r0, #24576	; 0x6000
   35a80:	mov	r1, #0
   35a84:	cmp	r3, r1
   35a88:	cmpeq	r2, r0
   35a8c:	beq	35d08 <__assert_fail@plt+0x24904>
   35a90:	mov	r0, #73	; 0x49
   35a94:	movt	r0, #24576	; 0x6000
   35a98:	mov	r1, #0
   35a9c:	cmp	r3, r1
   35aa0:	cmpeq	r2, r0
   35aa4:	bne	35a20 <__assert_fail@plt+0x2461c>
   35aa8:	ldr	r2, [r4, #-4]
   35aac:	movw	r1, #25760	; 0x64a0
   35ab0:	ldr	r3, [r4, #-8]
   35ab4:	movt	r1, #6
   35ab8:	ldr	ip, [r9, #1916]	; 0x77c
   35abc:	mov	r0, #0
   35ac0:	str	r2, [sp, #220]	; 0xdc
   35ac4:	mov	r2, #5
   35ac8:	ldr	r6, [sp, #208]	; 0xd0
   35acc:	add	r8, ip, r3
   35ad0:	ldr	r5, [sp, #212]	; 0xd4
   35ad4:	mov	fp, #0
   35ad8:	str	r3, [sp, #216]	; 0xd8
   35adc:	bl	11170 <dcgettext@plt>
   35ae0:	mov	sl, #1
   35ae4:	strd	sl, [sp]
   35ae8:	lsl	r5, r5, #5
   35aec:	ldr	fp, [sp, #68]	; 0x44
   35af0:	orr	r5, r5, r6, lsr #27
   35af4:	mov	r2, r8
   35af8:	lsl	r6, r6, #5
   35afc:	str	r5, [sp, #12]
   35b00:	str	r6, [sp, #8]
   35b04:	add	fp, fp, #1
   35b08:	ldr	r1, [sp, #60]	; 0x3c
   35b0c:	str	fp, [sp, #68]	; 0x44
   35b10:	str	r0, [sp, #16]
   35b14:	mov	r0, #0
   35b18:	bl	1502c <__assert_fail@plt+0x3c28>
   35b1c:	cmp	r0, #0
   35b20:	str	r0, [sp, #88]	; 0x58
   35b24:	beq	35a20 <__assert_fail@plt+0x2461c>
   35b28:	ldr	sl, [sp, #120]	; 0x78
   35b2c:	mov	fp, #0
   35b30:	ldrd	r2, [sp, #192]	; 0xc0
   35b34:	mov	r1, fp
   35b38:	mov	r0, sl
   35b3c:	cmp	r3, r1
   35b40:	cmpeq	r2, r0
   35b44:	bcs	36344 <__assert_fail@plt+0x24f40>
   35b48:	ldr	fp, [sp, #72]	; 0x48
   35b4c:	add	r5, fp, r2
   35b50:	mov	r2, #5
   35b54:	movw	r1, #25852	; 0x64fc
   35b58:	mov	r0, #0
   35b5c:	movt	r1, #6
   35b60:	bl	11170 <dcgettext@plt>
   35b64:	ldr	ip, [sp, #184]	; 0xb8
   35b68:	mov	r3, r5
   35b6c:	ldr	r2, [sp, #200]	; 0xc8
   35b70:	str	ip, [sp]
   35b74:	mov	r1, r0
   35b78:	mov	r0, #1
   35b7c:	bl	1132c <__printf_chk@plt>
   35b80:	mov	r2, #5
   35b84:	movw	r1, #25908	; 0x6534
   35b88:	mov	r0, #0
   35b8c:	movt	r1, #6
   35b90:	bl	11170 <dcgettext@plt>
   35b94:	mov	r1, r0
   35b98:	mov	r0, #1
   35b9c:	bl	1132c <__printf_chk@plt>
   35ba0:	ldr	r3, [sp, #208]	; 0xd0
   35ba4:	cmp	r3, #0
   35ba8:	ble	35cb0 <__assert_fail@plt+0x248ac>
   35bac:	ldr	ip, [sp, #88]	; 0x58
   35bb0:	movw	r8, #16696	; 0x4138
   35bb4:	ldr	fp, [sp, #40]	; 0x28
   35bb8:	movt	r8, #9
   35bbc:	add	r5, ip, #12
   35bc0:	mov	r6, #0
   35bc4:	ldr	r3, [fp]
   35bc8:	mov	r0, r5
   35bcc:	mov	r1, #4
   35bd0:	add	r6, r6, #1
   35bd4:	blx	r3
   35bd8:	movw	r1, #376	; 0x178
   35bdc:	movt	r1, #6
   35be0:	mov	r2, r0
   35be4:	mov	r0, #1
   35be8:	bl	1132c <__printf_chk@plt>
   35bec:	ldr	r3, [fp]
   35bf0:	sub	r0, r5, #12
   35bf4:	mov	r1, #8
   35bf8:	ldr	sl, [r8]
   35bfc:	blx	r3
   35c00:	movw	r2, #61492	; 0xf034
   35c04:	movt	r2, #5
   35c08:	strd	r0, [sp]
   35c0c:	mov	r0, sl
   35c10:	mov	r1, #1
   35c14:	bl	11338 <__fprintf_chk@plt>
   35c18:	ldr	r3, [fp]
   35c1c:	sub	r0, r5, #4
   35c20:	mov	r1, #4
   35c24:	blx	r3
   35c28:	mov	sl, r0
   35c2c:	bl	121e8 <__assert_fail@plt+0xde4>
   35c30:	subs	r2, r0, #0
   35c34:	movweq	r1, #25980	; 0x657c
   35c38:	movwne	r1, #26012	; 0x659c
   35c3c:	moveq	r2, sl
   35c40:	movteq	r1, #6
   35c44:	movtne	r1, #6
   35c48:	moveq	r0, #1
   35c4c:	movne	r0, #1
   35c50:	bl	1132c <__printf_chk@plt>
   35c54:	ldr	r3, [fp]
   35c58:	add	r0, r5, #12
   35c5c:	mov	r1, #4
   35c60:	blx	r3
   35c64:	movw	r1, #26020	; 0x65a4
   35c68:	movt	r1, #6
   35c6c:	mov	r2, r0
   35c70:	mov	r0, #1
   35c74:	bl	1132c <__printf_chk@plt>
   35c78:	ldr	r3, [fp]
   35c7c:	add	r0, r5, #16
   35c80:	mov	r1, #4
   35c84:	blx	r3
   35c88:	movw	r1, #26028	; 0x65ac
   35c8c:	movt	r1, #6
   35c90:	add	r5, r5, #32
   35c94:	mov	r2, r0
   35c98:	mov	r0, #1
   35c9c:	bl	1132c <__printf_chk@plt>
   35ca0:	ldr	r3, [sp, #208]	; 0xd0
   35ca4:	cmp	r6, r3
   35ca8:	blt	35bc4 <__assert_fail@plt+0x247c0>
   35cac:	str	fp, [sp, #40]	; 0x28
   35cb0:	ldr	r0, [sp, #88]	; 0x58
   35cb4:	bl	1111c <free@plt>
   35cb8:	b	35a20 <__assert_fail@plt+0x2461c>
   35cbc:	mov	r0, #37	; 0x25
   35cc0:	movt	r0, #24576	; 0x6000
   35cc4:	mov	r1, #0
   35cc8:	cmp	r3, r1
   35ccc:	cmpeq	r2, r0
   35cd0:	ldrdeq	r2, [r4, #-8]
   35cd4:	strdeq	r2, [sp, #200]	; 0xc8
   35cd8:	b	35a20 <__assert_fail@plt+0x2461c>
   35cdc:	cmp	r3, #0
   35ce0:	cmpeq	r2, #1
   35ce4:	ldrdeq	r2, [r4, #-8]
   35ce8:	strdeq	r2, [sp, #192]	; 0xc0
   35cec:	b	35a20 <__assert_fail@plt+0x2461c>
   35cf0:	ldr	sl, [r4, #-8]
   35cf4:	str	sl, [sp, #124]	; 0x7c
   35cf8:	b	35a20 <__assert_fail@plt+0x2461c>
   35cfc:	ldrd	r2, [r4, #-8]
   35d00:	strd	r2, [sp, #184]	; 0xb8
   35d04:	b	35a20 <__assert_fail@plt+0x2461c>
   35d08:	ldr	r0, [sp, #168]	; 0xa8
   35d0c:	mov	r3, #40	; 0x28
   35d10:	ldr	ip, [sp, #172]	; 0xac
   35d14:	movw	r1, #26036	; 0x65b4
   35d18:	ldr	r2, [r4, #-8]
   35d1c:	movt	r1, #6
   35d20:	umull	sl, fp, r0, r3
   35d24:	ldr	r0, [r4, #-4]
   35d28:	ldr	r5, [r9, #1916]	; 0x77c
   35d2c:	str	r2, [sp, #176]	; 0xb0
   35d30:	str	r0, [sp, #180]	; 0xb4
   35d34:	add	r5, r5, r2
   35d38:	mov	r0, #0
   35d3c:	mov	r2, #5
   35d40:	strd	sl, [sp, #88]	; 0x58
   35d44:	mov	sl, #1
   35d48:	ldr	lr, [sp, #92]	; 0x5c
   35d4c:	ldr	fp, [sp, #68]	; 0x44
   35d50:	mla	r3, r3, ip, lr
   35d54:	add	fp, fp, #1
   35d58:	str	fp, [sp, #68]	; 0x44
   35d5c:	mov	fp, #0
   35d60:	str	r3, [sp, #92]	; 0x5c
   35d64:	bl	11170 <dcgettext@plt>
   35d68:	strd	sl, [sp]
   35d6c:	mov	r2, r5
   35d70:	ldrd	sl, [sp, #88]	; 0x58
   35d74:	ldr	r1, [sp, #60]	; 0x3c
   35d78:	strd	sl, [sp, #8]
   35d7c:	str	r0, [sp, #16]
   35d80:	mov	r0, #0
   35d84:	bl	1502c <__assert_fail@plt+0x3c28>
   35d88:	subs	sl, r0, #0
   35d8c:	beq	35a20 <__assert_fail@plt+0x2461c>
   35d90:	mov	r2, #5
   35d94:	movw	r1, #26072	; 0x65d8
   35d98:	mov	r0, #0
   35d9c:	movt	r1, #6
   35da0:	bl	11170 <dcgettext@plt>
   35da4:	mov	r1, r0
   35da8:	mov	r0, #1
   35dac:	bl	1132c <__printf_chk@plt>
   35db0:	mov	r2, #5
   35db4:	movw	r1, #26088	; 0x65e8
   35db8:	mov	r0, #0
   35dbc:	movt	r1, #6
   35dc0:	bl	11170 <dcgettext@plt>
   35dc4:	mov	r1, r0
   35dc8:	mov	r0, #1
   35dcc:	bl	1132c <__printf_chk@plt>
   35dd0:	ldr	r3, [sp, #168]	; 0xa8
   35dd4:	cmp	r3, #0
   35dd8:	ble	35eec <__assert_fail@plt+0x24ae8>
   35ddc:	ldr	fp, [sp, #40]	; 0x28
   35de0:	add	r5, sl, #12
   35de4:	mov	r6, #0
   35de8:	ldr	r3, [fp]
   35dec:	mov	r0, r5
   35df0:	mov	r1, #4
   35df4:	add	r6, r6, #1
   35df8:	blx	r3
   35dfc:	movw	r1, #376	; 0x178
   35e00:	movt	r1, #6
   35e04:	mov	r2, r0
   35e08:	mov	r0, #1
   35e0c:	bl	1132c <__printf_chk@plt>
   35e10:	ldr	r3, [fp]
   35e14:	sub	r0, r5, #12
   35e18:	mov	r1, #8
   35e1c:	blx	r3
   35e20:	mov	r2, r0
   35e24:	mov	r3, r1
   35e28:	mov	r0, #1
   35e2c:	movw	r1, #26164	; 0x6634
   35e30:	movt	r1, #6
   35e34:	bl	1132c <__printf_chk@plt>
   35e38:	ldr	r3, [fp]
   35e3c:	sub	r0, r5, #4
   35e40:	mov	r1, #4
   35e44:	blx	r3
   35e48:	mov	r8, r0
   35e4c:	bl	121e8 <__assert_fail@plt+0xde4>
   35e50:	subs	r2, r0, #0
   35e54:	movweq	r1, #26172	; 0x663c
   35e58:	movwne	r1, #26204	; 0x665c
   35e5c:	moveq	r2, r8
   35e60:	movteq	r1, #6
   35e64:	movtne	r1, #6
   35e68:	moveq	r0, #1
   35e6c:	movne	r0, #1
   35e70:	bl	1132c <__printf_chk@plt>
   35e74:	ldr	r3, [fp]
   35e78:	add	r0, r5, #4
   35e7c:	mov	r1, #8
   35e80:	blx	r3
   35e84:	mov	r2, #5
   35e88:	bl	16c84 <__assert_fail@plt+0x5880>
   35e8c:	ldr	r3, [fp]
   35e90:	add	r0, r5, #20
   35e94:	mov	r1, #4
   35e98:	blx	r3
   35e9c:	movw	r1, #376	; 0x178
   35ea0:	movt	r1, #6
   35ea4:	mov	r2, r0
   35ea8:	mov	r0, #1
   35eac:	bl	1132c <__printf_chk@plt>
   35eb0:	ldr	r3, [fp]
   35eb4:	add	r0, r5, #12
   35eb8:	mov	r1, #8
   35ebc:	blx	r3
   35ec0:	add	r5, r5, #40	; 0x28
   35ec4:	mov	r3, r1
   35ec8:	mov	r2, r0
   35ecc:	movw	r1, #26212	; 0x6664
   35ed0:	mov	r0, #1
   35ed4:	movt	r1, #6
   35ed8:	bl	1132c <__printf_chk@plt>
   35edc:	ldr	r3, [sp, #168]	; 0xa8
   35ee0:	cmp	r6, r3
   35ee4:	blt	35de8 <__assert_fail@plt+0x249e4>
   35ee8:	str	fp, [sp, #40]	; 0x28
   35eec:	mov	r0, sl
   35ef0:	bl	1111c <free@plt>
   35ef4:	b	35a20 <__assert_fail@plt+0x2461c>
   35ef8:	ldrd	r2, [r4, #-8]
   35efc:	strd	r2, [sp, #208]	; 0xd0
   35f00:	b	35a20 <__assert_fail@plt+0x2461c>
   35f04:	ldr	ip, [sp, #72]	; 0x48
   35f08:	ldr	fp, [sp, #40]	; 0x28
   35f0c:	cmp	ip, #0
   35f10:	beq	35f1c <__assert_fail@plt+0x24b18>
   35f14:	mov	r0, ip
   35f18:	bl	1111c <free@plt>
   35f1c:	ldr	r5, [sp, #80]	; 0x50
   35f20:	ldr	r4, [sp, #68]	; 0x44
   35f24:	orr	r5, r4, r5
   35f28:	str	r5, [sp, #80]	; 0x50
   35f2c:	b	33ce0 <__assert_fail@plt+0x228dc>
   35f30:	ldr	fp, [sp, #72]	; 0x48
   35f34:	ldr	ip, [r4, #-8]
   35f38:	cmp	fp, #0
   35f3c:	ldr	r5, [r4, #-4]
   35f40:	str	ip, [sp, #120]	; 0x78
   35f44:	bne	35a20 <__assert_fail@plt+0x2461c>
   35f48:	mov	r0, fp
   35f4c:	mov	r2, #5
   35f50:	movw	r1, #25736	; 0x6488
   35f54:	movt	r1, #6
   35f58:	ldr	sl, [sp, #124]	; 0x7c
   35f5c:	ldr	r6, [r9, #1916]	; 0x77c
   35f60:	bl	11170 <dcgettext@plt>
   35f64:	ldr	fp, [sp, #120]	; 0x78
   35f68:	add	r6, r6, sl
   35f6c:	str	r5, [sp, #12]
   35f70:	ldr	r1, [sp, #60]	; 0x3c
   35f74:	mov	sl, #1
   35f78:	str	fp, [sp, #8]
   35f7c:	mov	r2, r6
   35f80:	mov	fp, #0
   35f84:	strd	sl, [sp]
   35f88:	str	r0, [sp, #16]
   35f8c:	ldr	r0, [sp, #72]	; 0x48
   35f90:	bl	1502c <__assert_fail@plt+0x3c28>
   35f94:	str	r0, [sp, #72]	; 0x48
   35f98:	b	35a20 <__assert_fail@plt+0x2461c>
   35f9c:	movw	r1, #27244	; 0x6a6c
   35fa0:	mov	r0, #0
   35fa4:	movt	r1, #6
   35fa8:	mov	r2, #5
   35fac:	mov	r8, r5
   35fb0:	ldr	r4, [sp, #120]	; 0x78
   35fb4:	ldr	r5, [sp, #88]	; 0x58
   35fb8:	ldr	r9, [sp, #96]	; 0x60
   35fbc:	bl	11170 <dcgettext@plt>
   35fc0:	ldr	ip, [sp, #68]	; 0x44
   35fc4:	rsb	r1, ip, sl
   35fc8:	bl	4b9ec <warn@@Base>
   35fcc:	mov	r2, #5
   35fd0:	movw	r1, #27196	; 0x6a3c
   35fd4:	mov	r0, #0
   35fd8:	movt	r1, #6
   35fdc:	bl	11170 <dcgettext@plt>
   35fe0:	ldr	r1, [sp, #80]	; 0x50
   35fe4:	mov	r2, r6
   35fe8:	mov	r3, r8
   35fec:	bl	4b9ec <warn@@Base>
   35ff0:	ldr	r0, [sp, #68]	; 0x44
   35ff4:	bl	1111c <free@plt>
   35ff8:	b	351ec <__assert_fail@plt+0x23de8>
   35ffc:	cmp	r3, #43	; 0x2b
   36000:	bne	34380 <__assert_fail@plt+0x22f7c>
   36004:	mov	r1, #0
   36008:	ldr	r0, [sp, #60]	; 0x3c
   3600c:	movw	ip, #45932	; 0xb36c
   36010:	mov	r3, r1
   36014:	movt	ip, #2
   36018:	mvn	r2, #-1879048182	; 0x9000000a
   3601c:	str	ip, [sp]
   36020:	bl	1bf38 <__assert_fail@plt+0xab34>
   36024:	b	34380 <__assert_fail@plt+0x22f7c>
   36028:	mov	r1, #0
   3602c:	ldr	r0, [sp, #60]	; 0x3c
   36030:	movw	ip, #45652	; 0xb254
   36034:	mov	r3, r1
   36038:	movt	ip, #2
   3603c:	mvn	r2, #-1879048182	; 0x9000000a
   36040:	str	ip, [sp]
   36044:	bl	1bf38 <__assert_fail@plt+0xab34>
   36048:	b	34380 <__assert_fail@plt+0x22f7c>
   3604c:	mov	r3, #0
   36050:	ldr	r0, [sp, #60]	; 0x3c
   36054:	str	r3, [sp]
   36058:	movw	r1, #27948	; 0x6d2c
   3605c:	movw	r3, #53028	; 0xcf24
   36060:	movt	r1, #6
   36064:	mov	r2, #1879048195	; 0x70000003
   36068:	movt	r3, #1
   3606c:	bl	1bf38 <__assert_fail@plt+0xab34>
   36070:	b	34380 <__assert_fail@plt+0x22f7c>
   36074:	movw	r1, #23120	; 0x5a50
   36078:	ldr	r2, [r5, #-72]	; 0xffffffb8
   3607c:	movt	r1, #6
   36080:	mov	r0, #1
   36084:	bl	1132c <__printf_chk@plt>
   36088:	b	34ecc <__assert_fail@plt+0x23ac8>
   3608c:	movw	r0, #27780	; 0x6c84
   36090:	movt	r0, #6
   36094:	bl	13438 <__assert_fail@plt+0x2034>
   36098:	subs	r4, r0, #0
   3609c:	beq	34380 <__assert_fail@plt+0x22f7c>
   360a0:	movw	r0, #27796	; 0x6c94
   360a4:	movt	r0, #6
   360a8:	bl	11218 <puts@plt>
   360ac:	mov	r2, #5
   360b0:	movw	r1, #27824	; 0x6cb0
   360b4:	mov	r0, #0
   360b8:	movt	r1, #6
   360bc:	ldr	r8, [r4, #24]
   360c0:	ldrd	r4, [r4, #32]
   360c4:	bl	11170 <dcgettext@plt>
   360c8:	mov	r6, #1
   360cc:	ldr	r1, [sp, #60]	; 0x3c
   360d0:	mov	r7, #0
   360d4:	mov	r2, r8
   360d8:	strd	r6, [sp]
   360dc:	strd	r4, [sp, #8]
   360e0:	str	r0, [sp, #16]
   360e4:	mov	r0, #0
   360e8:	bl	1502c <__assert_fail@plt+0x3c28>
   360ec:	ldr	r3, [r0]
   360f0:	and	r3, r3, #3
   360f4:	cmp	r3, #2
   360f8:	beq	36238 <__assert_fail@plt+0x24e34>
   360fc:	cmp	r3, #3
   36100:	beq	36228 <__assert_fail@plt+0x24e24>
   36104:	cmp	r3, #1
   36108:	movwne	r0, #27848	; 0x6cc8
   3610c:	movweq	r0, #27872	; 0x6ce0
   36110:	movtne	r0, #6
   36114:	movteq	r0, #6
   36118:	bl	11218 <puts@plt>
   3611c:	b	34380 <__assert_fail@plt+0x22f7c>
   36120:	cmp	r3, #2
   36124:	beq	36004 <__assert_fail@plt+0x24c00>
   36128:	cmp	r3, #8
   3612c:	bne	34380 <__assert_fail@plt+0x22f7c>
   36130:	ldr	r0, [sp, #60]	; 0x3c
   36134:	bl	3107c <__assert_fail@plt+0x1fc78>
   36138:	b	34380 <__assert_fail@plt+0x22f7c>
   3613c:	ldr	r8, [sp, #112]	; 0x70
   36140:	ldr	r7, [sp, #120]	; 0x78
   36144:	ldr	r9, [sp, #104]	; 0x68
   36148:	b	34300 <__assert_fail@plt+0x22efc>
   3614c:	movw	r1, #50896	; 0xc6d0
   36150:	mov	r2, #5
   36154:	movt	r1, #5
   36158:	bl	11170 <dcgettext@plt>
   3615c:	mov	r5, r0
   36160:	b	34a84 <__assert_fail@plt+0x23680>
   36164:	movw	r1, #50888	; 0xc6c8
   36168:	mov	r0, r6
   3616c:	movt	r1, #5
   36170:	mov	r2, #5
   36174:	bl	11170 <dcgettext@plt>
   36178:	mov	r5, r0
   3617c:	b	34a84 <__assert_fail@plt+0x23680>
   36180:	ldrd	r4, [sp, #200]	; 0xc8
   36184:	ldrd	r2, [r6, #48]	; 0x30
   36188:	cmp	r5, r3
   3618c:	cmpeq	r4, r2
   36190:	beq	361f8 <__assert_fail@plt+0x24df4>
   36194:	mov	r2, #5
   36198:	movw	r1, #22764	; 0x58ec
   3619c:	mov	r0, #0
   361a0:	movt	r1, #6
   361a4:	bl	11170 <dcgettext@plt>
   361a8:	mov	r4, r0
   361ac:	mov	r0, r6
   361b0:	bl	132f8 <__assert_fail@plt+0x1ef4>
   361b4:	mov	r1, r0
   361b8:	mov	r0, r4
   361bc:	bl	4b9ec <warn@@Base>
   361c0:	b	34d64 <__assert_fail@plt+0x23960>
   361c4:	bl	15ef0 <__assert_fail@plt+0x4aec>
   361c8:	b	33b20 <__assert_fail@plt+0x2271c>
   361cc:	mov	r2, #5
   361d0:	movw	r1, #27444	; 0x6b34
   361d4:	movt	r1, #6
   361d8:	bl	11170 <dcgettext@plt>
   361dc:	mov	r1, r0
   361e0:	mov	r0, #1
   361e4:	bl	1132c <__printf_chk@plt>
   361e8:	b	35790 <__assert_fail@plt+0x2438c>
   361ec:	bl	15a6c <__assert_fail@plt+0x4668>
   361f0:	mov	r8, r0
   361f4:	b	34f78 <__assert_fail@plt+0x23b74>
   361f8:	add	r4, sp, #424	; 0x1a8
   361fc:	ldr	r1, [sp, #164]	; 0xa4
   36200:	ldrd	r2, [r4, fp]
   36204:	add	r1, r1, r0
   36208:	str	r1, [sp, #164]	; 0xa4
   3620c:	subs	r2, r2, r0
   36210:	sbc	r3, r3, #0
   36214:	strd	r2, [r4, fp]
   36218:	ldrd	r2, [sp, #192]	; 0xc0
   3621c:	b	3493c <__assert_fail@plt+0x23538>
   36220:	mov	r7, r1
   36224:	b	34d78 <__assert_fail@plt+0x23974>
   36228:	movw	r0, #27916	; 0x6d0c
   3622c:	movt	r0, #6
   36230:	bl	11218 <puts@plt>
   36234:	b	34380 <__assert_fail@plt+0x22f7c>
   36238:	movw	r0, #27892	; 0x6cf4
   3623c:	movt	r0, #6
   36240:	bl	11218 <puts@plt>
   36244:	b	34380 <__assert_fail@plt+0x22f7c>
   36248:	ldr	r5, [sp, #88]	; 0x58
   3624c:	ldr	r4, [sp, #120]	; 0x78
   36250:	ldr	r9, [sp, #96]	; 0x60
   36254:	b	35ff0 <__assert_fail@plt+0x24bec>
   36258:	ldr	ip, [sp, #68]	; 0x44
   3625c:	add	fp, fp, fp, lsl #3
   36260:	mov	r2, #5
   36264:	movw	r1, #3532	; 0xdcc
   36268:	mov	r0, #0
   3626c:	movt	r1, #6
   36270:	ldr	r3, [ip, #220]	; 0xdc
   36274:	add	fp, r3, fp, lsl #3
   36278:	ldr	ip, [fp, #24]
   3627c:	ldrd	r6, [fp, #32]
   36280:	str	ip, [sp, #56]	; 0x38
   36284:	bl	11170 <dcgettext@plt>
   36288:	ldr	ip, [sp, #56]	; 0x38
   3628c:	mov	r2, #1
   36290:	mov	r3, #0
   36294:	ldr	r1, [sp, #60]	; 0x3c
   36298:	strd	r2, [sp]
   3629c:	strd	r6, [sp, #8]
   362a0:	mov	r2, ip
   362a4:	str	r0, [sp, #16]
   362a8:	mov	r0, #0
   362ac:	bl	1502c <__assert_fail@plt+0x3c28>
   362b0:	subs	ip, r0, #0
   362b4:	beq	34f9c <__assert_fail@plt+0x23b98>
   362b8:	ldr	r3, [sp, #184]	; 0xb8
   362bc:	mov	r2, r4
   362c0:	str	ip, [sp, #4]
   362c4:	ldr	r7, [sp, #72]	; 0x48
   362c8:	str	r3, [sp]
   362cc:	mov	r3, r8
   362d0:	ldr	lr, [fp, #32]
   362d4:	ldr	fp, [sp, #120]	; 0x78
   362d8:	str	r7, [sp, #12]
   362dc:	str	lr, [sp, #8]
   362e0:	ldr	lr, [fp, #4]
   362e4:	ldr	r0, [sp, #60]	; 0x3c
   362e8:	subs	r4, lr, #11
   362ec:	ldr	r1, [sp, #124]	; 0x7c
   362f0:	rsbs	lr, r4, #0
   362f4:	str	ip, [sp, #56]	; 0x38
   362f8:	adcs	lr, lr, r4
   362fc:	str	lr, [sp, #16]
   36300:	bl	23140 <__assert_fail@plt+0x11d3c>
   36304:	ldr	ip, [sp, #56]	; 0x38
   36308:	mov	r0, ip
   3630c:	bl	1111c <free@plt>
   36310:	b	34fe4 <__assert_fail@plt+0x23be0>
   36314:	movw	r1, #27148	; 0x6a0c
   36318:	mov	r0, #0
   3631c:	movt	r1, #6
   36320:	mov	r2, #5
   36324:	mov	r8, r5
   36328:	ldr	r4, [sp, #120]	; 0x78
   3632c:	ldr	r5, [sp, #88]	; 0x58
   36330:	ldr	r9, [sp, #96]	; 0x60
   36334:	bl	11170 <dcgettext@plt>
   36338:	ldr	sl, [sp, #68]	; 0x44
   3633c:	rsb	r1, sl, r7
   36340:	b	35fc8 <__assert_fail@plt+0x24bc4>
   36344:	mov	r1, r2
   36348:	movw	r0, #25792	; 0x64c0
   3634c:	movt	r0, #6
   36350:	movw	r5, #18540	; 0x486c
   36354:	bl	4b9ec <warn@@Base>
   36358:	movt	r5, #6
   3635c:	b	35b50 <__assert_fail@plt+0x2474c>
   36360:	bl	1117c <__stack_chk_fail@plt>
   36364:	movw	r1, #1392	; 0x570
   36368:	movt	r1, #6
   3636c:	mov	r0, #0
   36370:	mov	r2, #5
   36374:	bl	11170 <dcgettext@plt>
   36378:	mov	r1, r0
   3637c:	mov	r0, r4
   36380:	bl	1132c <__printf_chk@plt>
   36384:	b	35790 <__assert_fail@plt+0x2438c>
   36388:	movw	r0, #25628	; 0x641c
   3638c:	movw	r1, #64464	; 0xfbd0
   36390:	movt	r0, #6
   36394:	movt	r1, #5
   36398:	movw	r2, #16485	; 0x4065
   3639c:	ldr	r3, [pc, #48]	; 363d4 <__assert_fail@plt+0x24fd0>
   363a0:	bl	11404 <__assert_fail@plt>
   363a4:	movw	r1, #27480	; 0x6b58
   363a8:	mov	r0, #0
   363ac:	movt	r1, #6
   363b0:	b	36370 <__assert_fail@plt+0x24f6c>
   363b4:	movw	r1, #27504	; 0x6b70
   363b8:	mov	r0, #0
   363bc:	movt	r1, #6
   363c0:	b	36370 <__assert_fail@plt+0x24f6c>
   363c4:	movw	r1, #27456	; 0x6b40
   363c8:	mov	r0, #0
   363cc:	movt	r1, #6
   363d0:	b	36370 <__assert_fail@plt+0x24f6c>
   363d4:	andeq	fp, r5, ip, lsl sl
   363d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   363dc:	movw	r7, #24896	; 0x6140
   363e0:	movt	r7, #9
   363e4:	movw	r8, #16680	; 0x4128
   363e8:	movt	r8, #9
   363ec:	sub	sp, sp, #268	; 0x10c
   363f0:	ldr	r3, [r7, #-216]	; 0xffffff28
   363f4:	mov	fp, r1
   363f8:	ldr	ip, [r8]
   363fc:	mov	r1, r0
   36400:	str	r2, [sp, #16]
   36404:	mov	r4, #1
   36408:	str	r3, [sp]
   3640c:	mov	r2, fp
   36410:	str	r0, [sp, #24]
   36414:	add	r0, sp, #32
   36418:	ldr	r3, [sp, #16]
   3641c:	str	r4, [r7, #-240]	; 0xffffff10
   36420:	str	ip, [sp, #260]	; 0x104
   36424:	mov	ip, #0
   36428:	str	r8, [sp, #20]
   3642c:	str	ip, [sp, #32]
   36430:	str	ip, [sp, #36]	; 0x24
   36434:	str	ip, [sp, #48]	; 0x30
   36438:	str	ip, [sp, #52]	; 0x34
   3643c:	str	ip, [sp, #60]	; 0x3c
   36440:	str	ip, [sp, #144]	; 0x90
   36444:	str	ip, [sp, #148]	; 0x94
   36448:	str	ip, [sp, #160]	; 0xa0
   3644c:	str	ip, [sp, #164]	; 0xa4
   36450:	str	ip, [sp, #172]	; 0xac
   36454:	bl	4c11c <warn@@Base+0x730>
   36458:	subs	r6, r0, #0
   3645c:	addne	r5, sp, #144	; 0x90
   36460:	bne	365e8 <__assert_fail@plt+0x251e4>
   36464:	ldr	r3, [r7, #-216]	; 0xffffff28
   36468:	cmp	r3, #0
   3646c:	beq	36718 <__assert_fail@plt+0x25314>
   36470:	ldr	r3, [sp, #52]	; 0x34
   36474:	cmp	r3, #0
   36478:	beq	3662c <__assert_fail@plt+0x25228>
   3647c:	mov	r2, #5
   36480:	movw	r1, #28112	; 0x6dd0
   36484:	movt	r1, #6
   36488:	bl	11170 <dcgettext@plt>
   3648c:	ldr	ip, [sp, #56]	; 0x38
   36490:	ldr	r3, [sp, #40]	; 0x28
   36494:	ldr	r2, [sp, #24]
   36498:	str	ip, [sp]
   3649c:	mov	r1, r0
   364a0:	mov	r0, r4
   364a4:	bl	1132c <__printf_chk@plt>
   364a8:	mov	r0, fp
   364ac:	bl	1114c <ftell@plt>
   364b0:	ldrd	r2, [sp, #40]	; 0x28
   364b4:	orrs	r9, r2, r3
   364b8:	moveq	r4, r6
   364bc:	ldreq	sl, [sp, #56]	; 0x38
   364c0:	str	r0, [sp, #28]
   364c4:	beq	368fc <__assert_fail@plt+0x254f8>
   364c8:	movw	r8, #16696	; 0x4138
   364cc:	mov	r4, r6
   364d0:	movt	r8, #9
   364d4:	mov	r5, r6
   364d8:	str	r8, [sp, #12]
   364dc:	b	365d4 <__assert_fail@plt+0x251d0>
   364e0:	ldr	r1, [sp, #48]	; 0x30
   364e4:	ldrd	r2, [r1, r6]!
   364e8:	ldrd	r0, [r1, #-8]
   364ec:	cmp	r3, r1
   364f0:	cmpeq	r2, r0
   364f4:	beq	36570 <__assert_fail@plt+0x2516c>
   364f8:	mov	r1, r2
   364fc:	add	r2, sp, #144	; 0x90
   36500:	add	r0, sp, #32
   36504:	bl	4c4bc <warn@@Base+0xad0>
   36508:	subs	r2, r0, #0
   3650c:	beq	36570 <__assert_fail@plt+0x2516c>
   36510:	add	r0, sp, #32
   36514:	add	r1, sp, #144	; 0x90
   36518:	bl	4c828 <warn@@Base+0xe3c>
   3651c:	subs	r9, r0, #0
   36520:	beq	36570 <__assert_fail@plt+0x2516c>
   36524:	mov	r2, #5
   36528:	movw	r1, #28184	; 0x6e18
   3652c:	mov	r0, #0
   36530:	movt	r1, #6
   36534:	bl	11170 <dcgettext@plt>
   36538:	mov	r2, r9
   3653c:	mov	r1, r0
   36540:	mov	r0, #1
   36544:	bl	1132c <__printf_chk@plt>
   36548:	ldr	r3, [sp, #48]	; 0x30
   3654c:	mov	r2, #4
   36550:	ldrd	r0, [r3, r6]
   36554:	bl	16c84 <__assert_fail@plt+0x5880>
   36558:	ldr	r8, [sp, #12]
   3655c:	mov	r0, #10
   36560:	ldr	r1, [r8]
   36564:	bl	111ac <_IO_putc@plt>
   36568:	mov	r0, r9
   3656c:	bl	1111c <free@plt>
   36570:	ldr	r2, [sp, #56]	; 0x38
   36574:	cmp	r2, r4
   36578:	bls	368dc <__assert_fail@plt+0x254d8>
   3657c:	ldr	r3, [sp, #52]	; 0x34
   36580:	rsb	r2, r4, r2
   36584:	movw	r1, #33372	; 0x825c
   36588:	mov	r0, #1
   3658c:	add	r3, r3, r4
   36590:	movt	r1, #7
   36594:	bl	1132c <__printf_chk@plt>
   36598:	ldr	sl, [sp, #56]	; 0x38
   3659c:	ldr	r0, [sp, #52]	; 0x34
   365a0:	add	r5, r5, #1
   365a4:	rsb	r1, r4, sl
   365a8:	add	r6, r6, #8
   365ac:	add	r0, r0, r4
   365b0:	bl	11350 <strnlen@plt>
   365b4:	ldrd	r8, [sp, #40]	; 0x28
   365b8:	mov	r2, r5
   365bc:	mov	r3, #0
   365c0:	cmp	r3, r9
   365c4:	cmpeq	r2, r8
   365c8:	add	r0, r0, #1
   365cc:	add	r4, r4, r0
   365d0:	bcs	368fc <__assert_fail@plt+0x254f8>
   365d4:	cmp	r5, #0
   365d8:	bne	364e0 <__assert_fail@plt+0x250dc>
   365dc:	ldr	r3, [sp, #48]	; 0x30
   365e0:	ldr	r1, [r3, r6]
   365e4:	b	364fc <__assert_fail@plt+0x250f8>
   365e8:	mov	r7, #1
   365ec:	ldr	r0, [sp, #148]	; 0x94
   365f0:	cmp	r0, #0
   365f4:	beq	365fc <__assert_fail@plt+0x251f8>
   365f8:	bl	11344 <fclose@plt>
   365fc:	mov	r0, r5
   36600:	bl	4c3f8 <warn@@Base+0xa0c>
   36604:	add	r0, sp, #32
   36608:	bl	4c3f8 <warn@@Base+0xa0c>
   3660c:	mov	r0, r7
   36610:	ldr	r8, [sp, #20]
   36614:	ldr	r2, [sp, #260]	; 0x104
   36618:	ldr	r3, [r8]
   3661c:	cmp	r2, r3
   36620:	bne	36a84 <__assert_fail@plt+0x25680>
   36624:	add	sp, sp, #268	; 0x10c
   36628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3662c:	movw	r1, #28064	; 0x6da0
   36630:	mov	r2, #5
   36634:	movt	r1, #6
   36638:	bl	11170 <dcgettext@plt>
   3663c:	ldr	r1, [sp, #24]
   36640:	bl	4b2b0 <error@@Base>
   36644:	movw	r3, #16712	; 0x4148
   36648:	movt	r3, #9
   3664c:	ldr	r2, [r3, #1912]	; 0x778
   36650:	cmp	r2, #0
   36654:	bne	36718 <__assert_fail@plt+0x25314>
   36658:	ldr	r1, [r7, #-1712]	; 0xfffff950
   3665c:	movw	r2, #24896	; 0x6140
   36660:	movt	r2, #9
   36664:	cmp	r1, #0
   36668:	bne	36718 <__assert_fail@plt+0x25314>
   3666c:	ldr	r1, [r2, #-224]	; 0xffffff20
   36670:	cmp	r1, #0
   36674:	bne	36718 <__assert_fail@plt+0x25314>
   36678:	ldr	r1, [r3, #516]	; 0x204
   3667c:	cmp	r1, #0
   36680:	bne	36718 <__assert_fail@plt+0x25314>
   36684:	ldr	r1, [r3, #1864]	; 0x748
   36688:	cmp	r1, #0
   3668c:	bne	36718 <__assert_fail@plt+0x25314>
   36690:	ldr	r1, [r2, #-1716]	; 0xfffff94c
   36694:	cmp	r1, #0
   36698:	bne	36718 <__assert_fail@plt+0x25314>
   3669c:	ldr	r1, [r3, #1868]	; 0x74c
   366a0:	cmp	r1, #0
   366a4:	bne	36718 <__assert_fail@plt+0x25314>
   366a8:	ldr	r1, [r3, #476]	; 0x1dc
   366ac:	cmp	r1, #0
   366b0:	bne	36718 <__assert_fail@plt+0x25314>
   366b4:	ldr	r1, [r2, #-1752]	; 0xfffff928
   366b8:	cmp	r1, #0
   366bc:	bne	36718 <__assert_fail@plt+0x25314>
   366c0:	ldr	r2, [r2, #-1704]	; 0xfffff958
   366c4:	cmp	r2, #0
   366c8:	bne	36718 <__assert_fail@plt+0x25314>
   366cc:	ldr	r3, [r3, #1892]	; 0x764
   366d0:	movw	r2, #16712	; 0x4148
   366d4:	movt	r2, #9
   366d8:	cmp	r3, #0
   366dc:	bne	36718 <__assert_fail@plt+0x25314>
   366e0:	ldr	r1, [r7, #-228]	; 0xffffff1c
   366e4:	movw	r3, #24896	; 0x6140
   366e8:	movt	r3, #9
   366ec:	cmp	r1, #0
   366f0:	bne	36718 <__assert_fail@plt+0x25314>
   366f4:	ldr	r1, [r3, #-220]	; 0xffffff24
   366f8:	cmp	r1, #0
   366fc:	bne	36718 <__assert_fail@plt+0x25314>
   36700:	ldr	r2, [r2, #520]	; 0x208
   36704:	cmp	r2, #0
   36708:	bne	36718 <__assert_fail@plt+0x25314>
   3670c:	ldr	r7, [r3, #-1708]	; 0xfffff954
   36710:	cmp	r7, #0
   36714:	beq	369d0 <__assert_fail@plt+0x255cc>
   36718:	mov	r7, #0
   3671c:	movw	r6, #16712	; 0x4148
   36720:	mov	sl, r7
   36724:	movt	r6, #9
   36728:	b	3676c <__assert_fail@plt+0x25368>
   3672c:	ldr	r3, [sp, #72]	; 0x48
   36730:	mov	r1, fp
   36734:	ldr	r2, [r4, #2184]	; 0x888
   36738:	str	r3, [r4, #456]	; 0x1c8
   3673c:	add	r3, r2, r3
   36740:	str	r3, [sp, #72]	; 0x48
   36744:	bl	338e4 <__assert_fail@plt+0x224e0>
   36748:	orr	r7, r7, r0
   3674c:	ldr	r0, [r4, #472]	; 0x1d8
   36750:	cmp	r0, #0
   36754:	beq	36764 <__assert_fail@plt+0x25360>
   36758:	bl	1111c <free@plt>
   3675c:	str	sl, [r6, #472]	; 0x1d8
   36760:	str	sl, [r6, #468]	; 0x1d4
   36764:	mov	r0, r8
   36768:	bl	1111c <free@plt>
   3676c:	mov	r0, fp
   36770:	ldr	r1, [sp, #72]	; 0x48
   36774:	mov	r2, #0
   36778:	bl	113bc <fseek@plt>
   3677c:	subs	r4, r0, #0
   36780:	bne	369a4 <__assert_fail@plt+0x255a0>
   36784:	add	r0, sp, #84	; 0x54
   36788:	mov	r1, #1
   3678c:	mov	r2, #60	; 0x3c
   36790:	mov	r3, fp
   36794:	bl	111f4 <fread@plt>
   36798:	cmp	r0, #60	; 0x3c
   3679c:	bne	369c8 <__assert_fail@plt+0x255c4>
   367a0:	movw	r1, #28532	; 0x6f74
   367a4:	add	r0, sp, #142	; 0x8e
   367a8:	movt	r1, #6
   367ac:	mov	r2, #2
   367b0:	bl	11158 <memcmp@plt>
   367b4:	subs	r1, r0, #0
   367b8:	bne	369d8 <__assert_fail@plt+0x255d4>
   367bc:	ldr	r3, [sp, #72]	; 0x48
   367c0:	mov	r2, #10
   367c4:	add	r0, sp, #132	; 0x84
   367c8:	add	r5, sp, #144	; 0x90
   367cc:	add	r3, r3, #60	; 0x3c
   367d0:	str	r3, [sp, #72]	; 0x48
   367d4:	bl	11290 <strtoul@plt>
   367d8:	mov	r1, r5
   367dc:	tst	r0, #1
   367e0:	streq	r0, [r6, #2184]	; 0x888
   367e4:	addne	r0, r0, #1
   367e8:	strne	r0, [r6, #2184]	; 0x888
   367ec:	add	r0, sp, #32
   367f0:	movweq	r4, #16712	; 0x4148
   367f4:	movwne	r4, #16712	; 0x4148
   367f8:	movteq	r4, #9
   367fc:	movtne	r4, #9
   36800:	bl	4c588 <warn@@Base+0xb9c>
   36804:	subs	r9, r0, #0
   36808:	beq	36984 <__assert_fail@plt+0x25580>
   3680c:	bl	1129c <strlen@plt>
   36810:	mov	r1, r5
   36814:	mov	r2, r9
   36818:	str	r0, [sp, #12]
   3681c:	add	r0, sp, #32
   36820:	bl	4c828 <warn@@Base+0xe3c>
   36824:	subs	r8, r0, #0
   36828:	beq	36984 <__assert_fail@plt+0x25580>
   3682c:	ldr	lr, [sp, #16]
   36830:	cmp	lr, #0
   36834:	beq	3672c <__assert_fail@plt+0x25328>
   36838:	ldr	r1, [sp, #68]	; 0x44
   3683c:	cmp	r1, #0
   36840:	beq	3687c <__assert_fail@plt+0x25478>
   36844:	ldr	r0, [sp, #148]	; 0x94
   36848:	cmp	r0, #0
   3684c:	beq	36a14 <__assert_fail@plt+0x25610>
   36850:	add	r1, r1, #60	; 0x3c
   36854:	mov	r2, #0
   36858:	str	r1, [r4, #456]	; 0x1c8
   3685c:	bl	113bc <fseek@plt>
   36860:	cmp	r0, #0
   36864:	bne	36a38 <__assert_fail@plt+0x25634>
   36868:	mov	r0, r8
   3686c:	ldr	r1, [sp, #148]	; 0x94
   36870:	bl	338e4 <__assert_fail@plt+0x224e0>
   36874:	orr	r7, r7, r0
   36878:	b	3674c <__assert_fail@plt+0x25348>
   3687c:	mov	r1, r9
   36880:	ldr	r2, [sp, #12]
   36884:	ldr	r0, [sp, #24]
   36888:	bl	4c014 <warn@@Base+0x628>
   3688c:	subs	r9, r0, #0
   36890:	beq	365e8 <__assert_fail@plt+0x251e4>
   36894:	movw	r1, #28608	; 0x6fc0
   36898:	movt	r1, #6
   3689c:	bl	1138c <fopen64@plt>
   368a0:	subs	r3, r0, #0
   368a4:	beq	36a5c <__assert_fail@plt+0x25658>
   368a8:	ldr	r2, [sp, #68]	; 0x44
   368ac:	mov	r1, r3
   368b0:	mov	r0, r8
   368b4:	str	r2, [r4, #456]	; 0x1c8
   368b8:	str	r3, [sp, #8]
   368bc:	bl	338e4 <__assert_fail@plt+0x224e0>
   368c0:	ldr	r3, [sp, #8]
   368c4:	orr	r7, r7, r0
   368c8:	mov	r0, r3
   368cc:	bl	11344 <fclose@plt>
   368d0:	mov	r0, r9
   368d4:	bl	1111c <free@plt>
   368d8:	b	3674c <__assert_fail@plt+0x25348>
   368dc:	mov	r2, #5
   368e0:	movw	r1, #28220	; 0x6e3c
   368e4:	mov	r0, #0
   368e8:	movt	r1, #6
   368ec:	bl	11170 <dcgettext@plt>
   368f0:	ldr	r1, [sp, #24]
   368f4:	bl	4b2b0 <error@@Base>
   368f8:	ldr	sl, [sp, #56]	; 0x38
   368fc:	ldr	r3, [sp, #80]	; 0x50
   36900:	cmp	r3, #0
   36904:	addne	r4, r4, #7
   36908:	andeq	r3, r4, #1
   3690c:	bicne	r4, r4, #7
   36910:	addeq	r4, r3, r4
   36914:	cmp	r4, sl
   36918:	bcc	3695c <__assert_fail@plt+0x25558>
   3691c:	ldr	r1, [sp, #28]
   36920:	mov	r0, fp
   36924:	mov	r2, #0
   36928:	bl	113bc <fseek@plt>
   3692c:	cmp	r0, #0
   36930:	beq	36644 <__assert_fail@plt+0x25240>
   36934:	movw	r1, #28384	; 0x6ee0
   36938:	movt	r1, #6
   3693c:	mov	r0, #0
   36940:	mov	r2, #5
   36944:	bl	11170 <dcgettext@plt>
   36948:	ldr	r1, [sp, #24]
   3694c:	bl	4b2b0 <error@@Base>
   36950:	mov	r7, #1
   36954:	add	r5, sp, #144	; 0x90
   36958:	b	365ec <__assert_fail@plt+0x251e8>
   3695c:	mov	r2, #5
   36960:	movw	r1, #28288	; 0x6e80
   36964:	mov	r0, #0
   36968:	movt	r1, #6
   3696c:	bl	11170 <dcgettext@plt>
   36970:	ldr	r2, [sp, #56]	; 0x38
   36974:	ldr	r1, [sp, #24]
   36978:	rsb	r2, r4, r2
   3697c:	bl	4b2b0 <error@@Base>
   36980:	b	3691c <__assert_fail@plt+0x25518>
   36984:	mov	r2, #5
   36988:	movw	r1, #28580	; 0x6fa4
   3698c:	movt	r1, #6
   36990:	mov	r7, #1
   36994:	bl	11170 <dcgettext@plt>
   36998:	ldr	r1, [sp, #24]
   3699c:	bl	4b2b0 <error@@Base>
   369a0:	b	365ec <__assert_fail@plt+0x251e8>
   369a4:	mov	r2, #5
   369a8:	movw	r1, #28452	; 0x6f24
   369ac:	mov	r0, #0
   369b0:	movt	r1, #6
   369b4:	bl	11170 <dcgettext@plt>
   369b8:	ldr	r1, [sp, #24]
   369bc:	bl	4b2b0 <error@@Base>
   369c0:	mov	r0, #1
   369c4:	b	36610 <__assert_fail@plt+0x2520c>
   369c8:	cmp	r0, #0
   369cc:	bne	36a00 <__assert_fail@plt+0x255fc>
   369d0:	add	r5, sp, #144	; 0x90
   369d4:	b	365ec <__assert_fail@plt+0x251e8>
   369d8:	mov	r2, #5
   369dc:	mov	r0, r4
   369e0:	movw	r1, #28536	; 0x6f78
   369e4:	movt	r1, #6
   369e8:	bl	11170 <dcgettext@plt>
   369ec:	ldr	r1, [sp, #32]
   369f0:	bl	4b2b0 <error@@Base>
   369f4:	mov	r7, #1
   369f8:	add	r5, sp, #144	; 0x90
   369fc:	b	365ec <__assert_fail@plt+0x251e8>
   36a00:	movw	r1, #28496	; 0x6f50
   36a04:	mov	r0, r4
   36a08:	mov	r2, #5
   36a0c:	movt	r1, #6
   36a10:	b	36944 <__assert_fail@plt+0x25540>
   36a14:	mov	r2, #5
   36a18:	movw	r1, #28648	; 0x6fe8
   36a1c:	movt	r1, #6
   36a20:	mov	r7, #1
   36a24:	bl	11170 <dcgettext@plt>
   36a28:	ldr	r1, [sp, #24]
   36a2c:	mov	r2, r9
   36a30:	bl	4b2b0 <error@@Base>
   36a34:	b	365ec <__assert_fail@plt+0x251e8>
   36a38:	mov	r2, #5
   36a3c:	movw	r1, #28688	; 0x7010
   36a40:	mov	r0, #0
   36a44:	movt	r1, #6
   36a48:	bl	11170 <dcgettext@plt>
   36a4c:	ldr	r1, [sp, #144]	; 0x90
   36a50:	bl	4b2b0 <error@@Base>
   36a54:	mov	r7, #1
   36a58:	b	365ec <__assert_fail@plt+0x251e8>
   36a5c:	mov	r2, #5
   36a60:	movw	r1, #28612	; 0x6fc4
   36a64:	movt	r1, #6
   36a68:	mov	r7, #1
   36a6c:	bl	11170 <dcgettext@plt>
   36a70:	mov	r1, r9
   36a74:	bl	4b2b0 <error@@Base>
   36a78:	mov	r0, r9
   36a7c:	bl	1111c <free@plt>
   36a80:	b	365ec <__assert_fail@plt+0x251e8>
   36a84:	bl	1117c <__stack_chk_fail@plt>
   36a88:	push	{r3, lr}
   36a8c:	mov	r2, r0
   36a90:	movw	r1, #24184	; 0x5e78
   36a94:	movw	r3, #24196	; 0x5e84
   36a98:	movt	r1, #7
   36a9c:	movt	r3, #7
   36aa0:	mov	r0, #1
   36aa4:	bl	1132c <__printf_chk@plt>
   36aa8:	mov	r2, #5
   36aac:	movw	r1, #24224	; 0x5ea0
   36ab0:	mov	r0, #0
   36ab4:	movt	r1, #7
   36ab8:	bl	11170 <dcgettext@plt>
   36abc:	mov	r1, r0
   36ac0:	mov	r0, #1
   36ac4:	bl	1132c <__printf_chk@plt>
   36ac8:	mov	r2, #5
   36acc:	movw	r1, #24276	; 0x5ed4
   36ad0:	mov	r0, #0
   36ad4:	movt	r1, #7
   36ad8:	bl	11170 <dcgettext@plt>
   36adc:	mov	r1, r0
   36ae0:	mov	r0, #1
   36ae4:	bl	1132c <__printf_chk@plt>
   36ae8:	mov	r0, #0
   36aec:	bl	11278 <exit@plt>
   36af0:	cmp	r1, #0
   36af4:	push	{r4, r5, r6}
   36af8:	beq	36b5c <__assert_fail@plt+0x25758>
   36afc:	mov	r3, #0
   36b00:	mov	r5, #98	; 0x62
   36b04:	mov	r4, r3
   36b08:	mov	r6, #44	; 0x2c
   36b0c:	tst	r1, #1
   36b10:	add	ip, r3, #49	; 0x31
   36b14:	add	r3, r3, #1
   36b18:	beq	36b3c <__assert_fail@plt+0x25738>
   36b1c:	cmp	r4, #0
   36b20:	mov	r4, #1
   36b24:	strbne	r6, [r0]
   36b28:	addne	r0, r0, r4
   36b2c:	mov	r2, r0
   36b30:	strb	r5, [r2], #2
   36b34:	strb	ip, [r0, #1]
   36b38:	mov	r0, r2
   36b3c:	lsrs	r1, r1, #1
   36b40:	moveq	r2, #0
   36b44:	movne	r2, #1
   36b48:	cmp	r3, #4
   36b4c:	movgt	r2, #0
   36b50:	andle	r2, r2, #1
   36b54:	cmp	r2, #0
   36b58:	bne	36b0c <__assert_fail@plt+0x25708>
   36b5c:	mov	r3, #0
   36b60:	strb	r3, [r0]
   36b64:	pop	{r4, r5, r6}
   36b68:	bx	lr
   36b6c:	push	{r4, r5, r6}
   36b70:	mov	r3, #52	; 0x34
   36b74:	mov	r4, #0
   36b78:	mov	r5, #114	; 0x72
   36b7c:	mov	r6, #44	; 0x2c
   36b80:	tst	r1, #1
   36b84:	add	r2, r3, #1
   36b88:	lsr	r1, r1, #1
   36b8c:	beq	36bb0 <__assert_fail@plt+0x257ac>
   36b90:	cmp	r4, #0
   36b94:	mov	r4, #1
   36b98:	strbne	r6, [r0]
   36b9c:	addne	r0, r0, r4
   36ba0:	mov	ip, r0
   36ba4:	strb	r5, [ip], #2
   36ba8:	strb	r3, [r0, #1]
   36bac:	mov	r0, ip
   36bb0:	uxtb	r3, r2
   36bb4:	cmp	r3, #56	; 0x38
   36bb8:	bne	36b80 <__assert_fail@plt+0x2577c>
   36bbc:	mov	r3, #0
   36bc0:	strb	r3, [r0]
   36bc4:	pop	{r4, r5, r6}
   36bc8:	bx	lr
   36bcc:	mov	r3, #0
   36bd0:	push	{r4, r5, r6, r7, r8}
   36bd4:	movw	r6, #26215	; 0x6667
   36bd8:	mov	r5, r3
   36bdc:	movt	r6, #26214	; 0x6666
   36be0:	mov	r7, #102	; 0x66
   36be4:	mov	r8, #44	; 0x2c
   36be8:	b	36c1c <__assert_fail@plt+0x25818>
   36bec:	rsb	ip, ip, r4, asr #2
   36bf0:	add	r0, r0, #3
   36bf4:	add	r4, ip, #49	; 0x31
   36bf8:	strb	r4, [r0, #-2]
   36bfc:	add	ip, ip, ip, lsl #2
   36c00:	sub	r2, r2, ip, lsl #1
   36c04:	add	r2, r2, #48	; 0x30
   36c08:	strb	r2, [r0, #-1]
   36c0c:	add	r3, r3, #1
   36c10:	lsr	r1, r1, #1
   36c14:	cmp	r3, #20
   36c18:	beq	36c6c <__assert_fail@plt+0x25868>
   36c1c:	add	r2, r3, #2
   36c20:	tst	r1, #1
   36c24:	smull	ip, r4, r6, r2
   36c28:	asr	ip, r2, #31
   36c2c:	beq	36c0c <__assert_fail@plt+0x25808>
   36c30:	cmp	r5, #0
   36c34:	mov	r5, #1
   36c38:	strbne	r8, [r0]
   36c3c:	addne	r0, r0, r5
   36c40:	cmp	r3, #3
   36c44:	strb	r7, [r0]
   36c48:	bgt	36bec <__assert_fail@plt+0x257e8>
   36c4c:	add	r2, r3, #50	; 0x32
   36c50:	add	r3, r3, #1
   36c54:	cmp	r3, #20
   36c58:	strb	r2, [r0, #1]
   36c5c:	mov	r5, #1
   36c60:	add	r0, r0, #2
   36c64:	lsr	r1, r1, #1
   36c68:	bne	36c1c <__assert_fail@plt+0x25818>
   36c6c:	mov	r3, #0
   36c70:	strb	r3, [r0]
   36c74:	pop	{r4, r5, r6, r7, r8}
   36c78:	bx	lr
   36c7c:	push	{r4, r5, r6, lr}
   36c80:	ubfx	r5, r1, #5, #1
   36c84:	sub	sp, sp, #8
   36c88:	cmp	r5, #0
   36c8c:	movw	lr, #24612	; 0x6024
   36c90:	movt	lr, #7
   36c94:	movw	ip, #24688	; 0x6070
   36c98:	movt	ip, #9
   36c9c:	str	r5, [r2]
   36ca0:	and	r4, r1, #31
   36ca4:	mov	r6, r0
   36ca8:	str	r4, [sp]
   36cac:	movw	r3, #24620	; 0x602c
   36cb0:	movw	r1, #24632	; 0x6038
   36cb4:	movt	r3, #7
   36cb8:	movt	r1, #7
   36cbc:	movne	r3, lr
   36cc0:	movw	r2, #24656	; 0x6050
   36cc4:	mov	r0, #1
   36cc8:	movt	r2, #7
   36ccc:	mov	lr, #0
   36cd0:	str	r4, [ip]
   36cd4:	str	lr, [ip, #4]
   36cd8:	bl	1132c <__printf_chk@plt>
   36cdc:	mov	r0, r6
   36ce0:	add	sp, sp, #8
   36ce4:	pop	{r4, r5, r6, pc}
   36ce8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   36cec:	add	sl, r0, #1
   36cf0:	ldrb	r8, [r0]
   36cf4:	sub	sp, sp, #8
   36cf8:	mov	r9, #0
   36cfc:	tst	r8, #128	; 0x80
   36d00:	and	r8, r8, #127	; 0x7f
   36d04:	uxtb	r8, r8
   36d08:	beq	36d44 <__assert_fail@plt+0x25940>
   36d0c:	mov	r3, #0
   36d10:	ldrb	ip, [sl], #1
   36d14:	add	r3, r3, #7
   36d18:	sub	lr, r3, #32
   36d1c:	rsb	r0, r3, #32
   36d20:	and	r6, ip, #127	; 0x7f
   36d24:	tst	ip, #128	; 0x80
   36d28:	uxtb	r6, r6
   36d2c:	lsl	r5, r6, lr
   36d30:	lsl	r4, r6, r3
   36d34:	orr	r5, r5, r6, lsr r0
   36d38:	orr	r8, r8, r4
   36d3c:	orr	r9, r9, r5
   36d40:	bne	36d10 <__assert_fail@plt+0x2590c>
   36d44:	and	r1, r1, #3
   36d48:	movw	ip, #24688	; 0x6070
   36d4c:	subs	r0, r1, #1
   36d50:	movt	ip, #9
   36d54:	rsbs	r1, r0, #0
   36d58:	movw	r3, #24620	; 0x602c
   36d5c:	adcs	r1, r1, r0
   36d60:	movw	r0, #24612	; 0x6024
   36d64:	cmp	r1, #0
   36d68:	movt	r0, #7
   36d6c:	str	r1, [r2]
   36d70:	movt	r3, #7
   36d74:	str	r8, [sp]
   36d78:	movne	r3, r0
   36d7c:	strd	r8, [ip]
   36d80:	movw	r1, #24632	; 0x6038
   36d84:	movw	r2, #24660	; 0x6054
   36d88:	movt	r1, #7
   36d8c:	movt	r2, #7
   36d90:	mov	r0, #1
   36d94:	bl	1132c <__printf_chk@plt>
   36d98:	mov	r0, sl
   36d9c:	add	sp, sp, #8
   36da0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   36da4:	push	{r4, r5, lr}
   36da8:	movw	r4, #16680	; 0x4128
   36dac:	movt	r4, #9
   36db0:	sub	sp, sp, #28
   36db4:	mov	r5, r0
   36db8:	and	r1, r1, #31
   36dbc:	ldr	r3, [r4]
   36dc0:	mov	r0, sp
   36dc4:	str	r3, [sp, #20]
   36dc8:	bl	36af0 <__assert_fail@plt+0x256ec>
   36dcc:	mov	r3, sp
   36dd0:	movw	r1, #24664	; 0x6058
   36dd4:	movw	r2, #24692	; 0x6074
   36dd8:	movt	r1, #7
   36ddc:	movt	r2, #7
   36de0:	mov	r0, #1
   36de4:	bl	1132c <__printf_chk@plt>
   36de8:	ldr	r2, [sp, #20]
   36dec:	ldr	r3, [r4]
   36df0:	mov	r0, r5
   36df4:	cmp	r2, r3
   36df8:	bne	36e04 <__assert_fail@plt+0x25a00>
   36dfc:	add	sp, sp, #28
   36e00:	pop	{r4, r5, pc}
   36e04:	bl	1117c <__stack_chk_fail@plt>
   36e08:	push	{r4, r5, lr}
   36e0c:	movw	r4, #16680	; 0x4128
   36e10:	movt	r4, #9
   36e14:	sub	sp, sp, #212	; 0xd4
   36e18:	tst	r1, #16
   36e1c:	mov	r5, r0
   36e20:	ldr	r3, [r4]
   36e24:	and	r1, r1, #15
   36e28:	add	r0, sp, #4
   36e2c:	str	r3, [sp, #204]	; 0xcc
   36e30:	bne	36e70 <__assert_fail@plt+0x25a6c>
   36e34:	bl	36bcc <__assert_fail@plt+0x257c8>
   36e38:	movw	r1, #24728	; 0x6098
   36e3c:	movw	r2, #24724	; 0x6094
   36e40:	add	r3, sp, #4
   36e44:	movt	r1, #7
   36e48:	movt	r2, #7
   36e4c:	mov	r0, #1
   36e50:	bl	1132c <__printf_chk@plt>
   36e54:	ldr	r2, [sp, #204]	; 0xcc
   36e58:	mov	r0, r5
   36e5c:	ldr	r3, [r4]
   36e60:	cmp	r2, r3
   36e64:	bne	36e94 <__assert_fail@plt+0x25a90>
   36e68:	add	sp, sp, #212	; 0xd4
   36e6c:	pop	{r4, r5, pc}
   36e70:	bl	36b6c <__assert_fail@plt+0x25768>
   36e74:	add	r3, sp, #4
   36e78:	movw	r1, #24696	; 0x6078
   36e7c:	movw	r2, #24724	; 0x6094
   36e80:	movt	r1, #7
   36e84:	movt	r2, #7
   36e88:	mov	r0, #1
   36e8c:	bl	1132c <__printf_chk@plt>
   36e90:	b	36e54 <__assert_fail@plt+0x25a50>
   36e94:	bl	1117c <__stack_chk_fail@plt>
   36e98:	tst	r1, #32
   36e9c:	and	r3, r1, #31
   36ea0:	push	{r4, lr}
   36ea4:	movwne	r1, #24756	; 0x60b4
   36ea8:	mov	r4, r0
   36eac:	movwne	r2, #24784	; 0x60d0
   36eb0:	movweq	r1, #24788	; 0x60d4
   36eb4:	movweq	r2, #24784	; 0x60d0
   36eb8:	movtne	r1, #7
   36ebc:	movteq	r1, #7
   36ec0:	movt	r2, #7
   36ec4:	mov	r0, #1
   36ec8:	bl	1132c <__printf_chk@plt>
   36ecc:	mov	r0, r4
   36ed0:	pop	{r4, pc}
   36ed4:	push	{r4, r5, r6, r7, r8, r9, lr}
   36ed8:	add	r8, r0, #1
   36edc:	ldrb	r6, [r0]
   36ee0:	sub	sp, sp, #12
   36ee4:	mov	r7, #0
   36ee8:	tst	r6, #128	; 0x80
   36eec:	and	r6, r6, #127	; 0x7f
   36ef0:	uxtb	r6, r6
   36ef4:	beq	36f30 <__assert_fail@plt+0x25b2c>
   36ef8:	mov	ip, #0
   36efc:	ldrb	lr, [r8], #1
   36f00:	add	ip, ip, #7
   36f04:	sub	r9, ip, #32
   36f08:	rsb	r0, ip, #32
   36f0c:	and	r4, lr, #127	; 0x7f
   36f10:	tst	lr, #128	; 0x80
   36f14:	uxtb	r4, r4
   36f18:	lsl	r3, r4, r9
   36f1c:	lsl	r2, r4, ip
   36f20:	orr	r3, r3, r4, lsr r0
   36f24:	orr	r6, r6, r2
   36f28:	orr	r7, r7, r3
   36f2c:	bne	36efc <__assert_fail@plt+0x25af8>
   36f30:	and	r1, r1, #31
   36f34:	mov	r3, r6
   36f38:	str	r1, [sp]
   36f3c:	movw	r2, #24848	; 0x6110
   36f40:	movw	r1, #24816	; 0x60f0
   36f44:	movt	r2, #7
   36f48:	movt	r1, #7
   36f4c:	mov	r0, #1
   36f50:	bl	1132c <__printf_chk@plt>
   36f54:	mov	r0, r8
   36f58:	add	sp, sp, #12
   36f5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   36f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36f64:	movw	r6, #16680	; 0x4128
   36f68:	movt	r6, #9
   36f6c:	sub	sp, sp, #244	; 0xf4
   36f70:	tst	r1, #16
   36f74:	mov	fp, r0
   36f78:	ldr	r2, [r6]
   36f7c:	str	r2, [sp, #236]	; 0xec
   36f80:	beq	370f0 <__assert_fail@plt+0x25cec>
   36f84:	tst	r1, #8
   36f88:	bne	36fe0 <__assert_fail@plt+0x25bdc>
   36f8c:	ldrb	r0, [r0]
   36f90:	and	r1, r1, #7
   36f94:	add	r7, fp, #1
   36f98:	and	r3, r0, #127	; 0x7f
   36f9c:	lsr	r0, r0, #7
   36fa0:	orr	r2, r0, r1, lsl #1
   36fa4:	cmp	r2, #11
   36fa8:	ldrls	pc, [pc, r2, lsl #2]
   36fac:	b	373dc <__assert_fail@plt+0x25fd8>
   36fb0:			; <UNDEFINED> instruction: 0x000371bc
   36fb4:	andeq	r7, r3, r4, ror #3
   36fb8:	andeq	r7, r3, ip, lsl #4
   36fbc:	andeq	r7, r3, r4, lsr r2
   36fc0:	andeq	r7, r3, ip, asr r2
   36fc4:	andeq	r7, r3, r4, lsl #5
   36fc8:	andeq	r7, r3, ip, lsr #5
   36fcc:	andeq	r7, r3, r8, asr #5
   36fd0:	strdeq	r7, [r3], -r0
   36fd4:	andeq	r7, r3, r8, lsl r3
   36fd8:	andeq	r7, r3, r0, asr #6
   36fdc:	andeq	r7, r3, r0, lsr #3
   36fe0:	ands	r9, r1, #7
   36fe4:	bne	3714c <__assert_fail@plt+0x25d48>
   36fe8:	movw	r8, #24688	; 0x6070
   36fec:	movt	r8, #9
   36ff0:	ldr	r2, [r8]
   36ff4:	ldr	r1, [r8, #4]
   36ff8:	lsr	r2, r2, #2
   36ffc:	orr	r2, r2, r1, lsl #30
   37000:	add	r1, r0, r2
   37004:	cmp	r3, r1
   37008:	bcc	37184 <__assert_fail@plt+0x25d80>
   3700c:	movw	r1, #25088	; 0x6200
   37010:	movw	r2, #25112	; 0x6218
   37014:	movt	r1, #7
   37018:	movt	r2, #7
   3701c:	mov	r0, #1
   37020:	bl	1132c <__printf_chk@plt>
   37024:	ldrd	r2, [r8]
   37028:	orrs	r1, r2, r3
   3702c:	beq	373f0 <__assert_fail@plt+0x25fec>
   37030:	movw	ip, #25116	; 0x621c
   37034:	movt	ip, #7
   37038:	movw	sl, #16696	; 0x4138
   3703c:	str	r6, [sp, #8]
   37040:	movt	sl, #9
   37044:	mov	r6, fp
   37048:	mov	r4, #0
   3704c:	mov	r5, #0
   37050:	mov	fp, ip
   37054:	b	370a4 <__assert_fail@plt+0x25ca0>
   37058:	orrs	r2, r4, r5
   3705c:	add	r7, r6, #1
   37060:	ldrb	r9, [r6]
   37064:	bne	373fc <__assert_fail@plt+0x25ff8>
   37068:	mvn	r3, r4
   3706c:	and	r3, r3, #3
   37070:	adds	r4, r4, #1
   37074:	ldr	r1, [sl]
   37078:	lsl	r3, r3, #1
   3707c:	adc	r5, r5, #0
   37080:	asr	r3, r9, r3
   37084:	and	r3, r3, #3
   37088:	ldrb	r0, [fp, r3]
   3708c:	bl	111ac <_IO_putc@plt>
   37090:	ldrd	r2, [r8]
   37094:	cmp	r3, r5
   37098:	cmpeq	r2, r4
   3709c:	bls	37170 <__assert_fail@plt+0x25d6c>
   370a0:	mov	r6, r7
   370a4:	mov	r2, #3
   370a8:	mov	r3, #0
   370ac:	and	r2, r2, r4
   370b0:	and	r3, r3, r5
   370b4:	orrs	r1, r2, r3
   370b8:	beq	37058 <__assert_fail@plt+0x25c54>
   370bc:	mov	r0, r4
   370c0:	mov	r1, r5
   370c4:	mov	r2, #3
   370c8:	mov	r3, #0
   370cc:	bl	529fc <zcfree@@Base+0x13cc>
   370d0:	orrs	r1, r2, r3
   370d4:	movne	r7, r6
   370d8:	bne	37068 <__assert_fail@plt+0x25c64>
   370dc:	ldr	r1, [sl]
   370e0:	mov	r0, #44	; 0x2c
   370e4:	mov	r7, r6
   370e8:	bl	111ac <_IO_putc@plt>
   370ec:	b	37068 <__assert_fail@plt+0x25c64>
   370f0:	ldrb	r4, [r0]
   370f4:	and	r1, r1, #15
   370f8:	add	r7, r0, #1
   370fc:	add	r0, sp, #36	; 0x24
   37100:	lsl	r1, r1, #1
   37104:	orr	r1, r1, r4, lsr #7
   37108:	and	r4, r4, #127	; 0x7f
   3710c:	bl	36af0 <__assert_fail@plt+0x256ec>
   37110:	movw	r1, #24852	; 0x6114
   37114:	movw	r2, #24884	; 0x6134
   37118:	add	r3, sp, #36	; 0x24
   3711c:	str	r4, [sp]
   37120:	movt	r1, #7
   37124:	movt	r2, #7
   37128:	mov	r0, #1
   3712c:	bl	1132c <__printf_chk@plt>
   37130:	ldr	r2, [sp, #236]	; 0xec
   37134:	mov	r0, r7
   37138:	ldr	r3, [r6]
   3713c:	cmp	r2, r3
   37140:	bne	373f8 <__assert_fail@plt+0x25ff4>
   37144:	add	sp, sp, #244	; 0xf4
   37148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3714c:	cmp	r9, #1
   37150:	beq	37368 <__assert_fail@plt+0x25f64>
   37154:	mov	r2, r1
   37158:	mov	r0, #1
   3715c:	movw	r1, #25012	; 0x61b4
   37160:	movt	r1, #7
   37164:	bl	1132c <__printf_chk@plt>
   37168:	mov	r7, fp
   3716c:	b	37130 <__assert_fail@plt+0x25d2c>
   37170:	ldr	r6, [sp, #8]
   37174:	movw	r0, #25124	; 0x6224
   37178:	movt	r0, #7
   3717c:	bl	11218 <puts@plt>
   37180:	b	37130 <__assert_fail@plt+0x25d2c>
   37184:	rsb	r3, r0, r3
   37188:	movw	r1, #25036	; 0x61cc
   3718c:	mov	r0, #1
   37190:	movt	r1, #7
   37194:	mov	r7, fp
   37198:	bl	1132c <__printf_chk@plt>
   3719c:	b	37130 <__assert_fail@plt+0x25d2c>
   371a0:	movw	r1, #24984	; 0x6198
   371a4:	movw	r2, #24908	; 0x614c
   371a8:	movt	r1, #7
   371ac:	movt	r2, #7
   371b0:	mov	r0, #1
   371b4:	bl	1132c <__printf_chk@plt>
   371b8:	b	37130 <__assert_fail@plt+0x25d2c>
   371bc:	str	r3, [sp]
   371c0:	movw	r1, #24888	; 0x6138
   371c4:	movw	r2, #24908	; 0x614c
   371c8:	movt	r1, #7
   371cc:	movt	r2, #7
   371d0:	movw	r3, #24912	; 0x6150
   371d4:	mov	r0, #1
   371d8:	movt	r3, #7
   371dc:	bl	1132c <__printf_chk@plt>
   371e0:	b	37130 <__assert_fail@plt+0x25d2c>
   371e4:	str	r3, [sp]
   371e8:	movw	r1, #24888	; 0x6138
   371ec:	movw	r2, #24908	; 0x614c
   371f0:	movt	r1, #7
   371f4:	movt	r2, #7
   371f8:	movw	r3, #24916	; 0x6154
   371fc:	mov	r0, #1
   37200:	movt	r3, #7
   37204:	bl	1132c <__printf_chk@plt>
   37208:	b	37130 <__assert_fail@plt+0x25d2c>
   3720c:	str	r3, [sp]
   37210:	movw	r1, #24888	; 0x6138
   37214:	movw	r2, #24908	; 0x614c
   37218:	movt	r1, #7
   3721c:	movt	r2, #7
   37220:	movw	r3, #24920	; 0x6158
   37224:	mov	r0, #1
   37228:	movt	r3, #7
   3722c:	bl	1132c <__printf_chk@plt>
   37230:	b	37130 <__assert_fail@plt+0x25d2c>
   37234:	str	r3, [sp]
   37238:	movw	r1, #24888	; 0x6138
   3723c:	movw	r2, #24908	; 0x614c
   37240:	movt	r1, #7
   37244:	movt	r2, #7
   37248:	movw	r3, #24924	; 0x615c
   3724c:	mov	r0, #1
   37250:	movt	r3, #7
   37254:	bl	1132c <__printf_chk@plt>
   37258:	b	37130 <__assert_fail@plt+0x25d2c>
   3725c:	str	r3, [sp]
   37260:	movw	r1, #24888	; 0x6138
   37264:	movw	r2, #24908	; 0x614c
   37268:	movt	r1, #7
   3726c:	movt	r2, #7
   37270:	movw	r3, #26048	; 0x65c0
   37274:	mov	r0, #1
   37278:	movt	r3, #7
   3727c:	bl	1132c <__printf_chk@plt>
   37280:	b	37130 <__assert_fail@plt+0x25d2c>
   37284:	str	r3, [sp]
   37288:	movw	r1, #24888	; 0x6138
   3728c:	movw	r2, #24908	; 0x614c
   37290:	movt	r1, #7
   37294:	movt	r2, #7
   37298:	movw	r3, #24928	; 0x6160
   3729c:	mov	r0, #1
   372a0:	movt	r3, #7
   372a4:	bl	1132c <__printf_chk@plt>
   372a8:	b	37130 <__assert_fail@plt+0x25d2c>
   372ac:	movw	r1, #24932	; 0x6164
   372b0:	movw	r2, #24908	; 0x614c
   372b4:	movt	r1, #7
   372b8:	movt	r2, #7
   372bc:	mov	r0, #1
   372c0:	bl	1132c <__printf_chk@plt>
   372c4:	b	37130 <__assert_fail@plt+0x25d2c>
   372c8:	str	r3, [sp]
   372cc:	movw	r1, #24888	; 0x6138
   372d0:	movw	r2, #24908	; 0x614c
   372d4:	movt	r1, #7
   372d8:	movt	r2, #7
   372dc:	movw	r3, #24952	; 0x6178
   372e0:	mov	r0, #1
   372e4:	movt	r3, #7
   372e8:	bl	1132c <__printf_chk@plt>
   372ec:	b	37130 <__assert_fail@plt+0x25d2c>
   372f0:	str	r3, [sp]
   372f4:	movw	r1, #24888	; 0x6138
   372f8:	movw	r2, #24908	; 0x614c
   372fc:	movt	r1, #7
   37300:	movt	r2, #7
   37304:	movw	r3, #24960	; 0x6180
   37308:	mov	r0, #1
   3730c:	movt	r3, #7
   37310:	bl	1132c <__printf_chk@plt>
   37314:	b	37130 <__assert_fail@plt+0x25d2c>
   37318:	str	r3, [sp]
   3731c:	movw	r1, #24888	; 0x6138
   37320:	movw	r2, #24908	; 0x614c
   37324:	movt	r1, #7
   37328:	movt	r2, #7
   3732c:	movw	r3, #24964	; 0x6184
   37330:	mov	r0, #1
   37334:	movt	r3, #7
   37338:	bl	1132c <__printf_chk@plt>
   3733c:	b	37130 <__assert_fail@plt+0x25d2c>
   37340:	str	r3, [sp]
   37344:	movw	r1, #24888	; 0x6138
   37348:	movw	r2, #24908	; 0x614c
   3734c:	movt	r1, #7
   37350:	movt	r2, #7
   37354:	movw	r3, #24976	; 0x6190
   37358:	mov	r0, #1
   3735c:	movt	r3, #7
   37360:	bl	1132c <__printf_chk@plt>
   37364:	b	37130 <__assert_fail@plt+0x25d2c>
   37368:	mov	r7, r0
   3736c:	ldrb	r4, [r0, #1]
   37370:	ldrb	lr, [r7], #3
   37374:	mov	r3, #0
   37378:	add	r8, sp, #36	; 0x24
   3737c:	and	sl, lr, #15
   37380:	lsl	r0, r4, #8
   37384:	ldrb	r4, [fp, #2]
   37388:	uxtb	r2, sl
   3738c:	strd	r2, [sp, #8]
   37390:	ldr	r1, [sp, #8]
   37394:	orr	r4, r4, r0
   37398:	add	r0, sp, #16
   3739c:	lsl	r2, r1, #16
   373a0:	lsr	r1, lr, #4
   373a4:	orr	r4, r4, r2
   373a8:	bl	36b6c <__assert_fail@plt+0x25768>
   373ac:	mov	r0, r8
   373b0:	mov	r1, r4
   373b4:	bl	36bcc <__assert_fail@plt+0x257c8>
   373b8:	str	r8, [sp]
   373bc:	add	r3, sp, #16
   373c0:	mov	r0, r9
   373c4:	movw	r1, #25128	; 0x6228
   373c8:	movw	r2, #25168	; 0x6250
   373cc:	movt	r1, #7
   373d0:	movt	r2, #7
   373d4:	bl	1132c <__printf_chk@plt>
   373d8:	b	37130 <__assert_fail@plt+0x25d2c>
   373dc:	movw	r1, #25012	; 0x61b4
   373e0:	mov	r0, #1
   373e4:	movt	r1, #7
   373e8:	bl	1132c <__printf_chk@plt>
   373ec:	b	37130 <__assert_fail@plt+0x25d2c>
   373f0:	mov	r7, fp
   373f4:	b	37174 <__assert_fail@plt+0x25d70>
   373f8:	bl	1117c <__stack_chk_fail@plt>
   373fc:	mov	r6, r7
   37400:	b	370bc <__assert_fail@plt+0x25cb8>
   37404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37408:	mov	sl, r0
   3740c:	movw	fp, #16680	; 0x4128
   37410:	movt	fp, #9
   37414:	ldrb	r8, [r0, #1]
   37418:	sub	sp, sp, #108	; 0x6c
   3741c:	ldrb	r3, [sl], #2
   37420:	and	r1, r1, #7
   37424:	ldr	r0, [fp]
   37428:	tst	r8, #128	; 0x80
   3742c:	and	r8, r8, #127	; 0x7f
   37430:	and	ip, r3, #127	; 0x7f
   37434:	str	ip, [sp, #12]
   37438:	lsr	ip, r3, #7
   3743c:	uxtb	r8, r8
   37440:	mov	r9, #0
   37444:	orr	ip, ip, r1, lsl #1
   37448:	str	r0, [sp, #100]	; 0x64
   3744c:	beq	37488 <__assert_fail@plt+0x26084>
   37450:	mov	r3, #0
   37454:	ldrb	lr, [sl], #1
   37458:	add	r3, r3, #7
   3745c:	sub	r7, r3, #32
   37460:	rsb	r6, r3, #32
   37464:	and	r0, lr, #127	; 0x7f
   37468:	tst	lr, #128	; 0x80
   3746c:	uxtb	r0, r0
   37470:	lsl	r5, r0, r7
   37474:	lsl	r4, r0, r3
   37478:	orr	r5, r5, r0, lsr r6
   3747c:	orr	r8, r8, r4
   37480:	orr	r9, r9, r5
   37484:	bne	37454 <__assert_fail@plt+0x26050>
   37488:	tst	ip, #8
   3748c:	movw	r3, #24688	; 0x6070
   37490:	movt	r3, #9
   37494:	mov	r1, #0
   37498:	movwne	r4, #25172	; 0x6254
   3749c:	movweq	r4, #25084	; 0x61fc
   374a0:	strd	r8, [r3]
   374a4:	movwne	r3, #24916	; 0x6154
   374a8:	movtne	r3, #7
   374ac:	strb	r1, [sp, #36]	; 0x24
   374b0:	movtne	r4, #7
   374b4:	movteq	r4, #7
   374b8:	ldrne	r3, [r3]
   374bc:	add	r5, sp, #36	; 0x24
   374c0:	str	r1, [r2]
   374c4:	strhne	r3, [sp, #36]	; 0x24
   374c8:	lsrne	r3, r3, #16
   374cc:	strbne	r3, [sp, #38]	; 0x26
   374d0:	tst	ip, #4
   374d4:	bne	375b0 <__assert_fail@plt+0x261ac>
   374d8:	tst	ip, #2
   374dc:	bne	37574 <__assert_fail@plt+0x26170>
   374e0:	tst	ip, #1
   374e4:	beq	37514 <__assert_fail@plt+0x26110>
   374e8:	mov	r0, r5
   374ec:	bl	1129c <strlen@plt>
   374f0:	mov	r1, r4
   374f4:	add	r0, r5, r0
   374f8:	bl	11164 <stpcpy@plt>
   374fc:	movw	r3, #24924	; 0x615c
   37500:	movt	r3, #7
   37504:	ldrh	r2, [r3]
   37508:	ldrb	r3, [r3, #2]
   3750c:	strh	r2, [r0]
   37510:	strb	r3, [r0, #2]
   37514:	ldr	r3, [sp, #12]
   37518:	add	r4, sp, #20
   3751c:	mov	r1, #1
   37520:	mov	r2, #16
   37524:	mov	r0, r4
   37528:	str	r3, [sp]
   3752c:	movw	r3, #25184	; 0x6260
   37530:	movt	r3, #7
   37534:	bl	112cc <__sprintf_chk@plt>
   37538:	mov	r3, r5
   3753c:	stm	sp, {r4, r8}
   37540:	movw	r1, #25188	; 0x6264
   37544:	movw	r2, #25240	; 0x6298
   37548:	movt	r1, #7
   3754c:	movt	r2, #7
   37550:	mov	r0, #1
   37554:	bl	1132c <__printf_chk@plt>
   37558:	ldr	r2, [sp, #100]	; 0x64
   3755c:	ldr	r3, [fp]
   37560:	mov	r0, sl
   37564:	cmp	r2, r3
   37568:	bne	375fc <__assert_fail@plt+0x261f8>
   3756c:	add	sp, sp, #108	; 0x6c
   37570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37574:	mov	r0, r5
   37578:	str	ip, [sp, #8]
   3757c:	bl	1129c <strlen@plt>
   37580:	mov	r1, r4
   37584:	movw	r4, #25172	; 0x6254
   37588:	movt	r4, #7
   3758c:	add	r0, r5, r0
   37590:	bl	11164 <stpcpy@plt>
   37594:	movw	r3, #24912	; 0x6150
   37598:	movt	r3, #7
   3759c:	mov	r2, r0
   375a0:	ldr	r0, [r3]
   375a4:	str	r0, [r2]
   375a8:	ldr	ip, [sp, #8]
   375ac:	b	374e0 <__assert_fail@plt+0x260dc>
   375b0:	mov	r0, r5
   375b4:	str	ip, [sp, #8]
   375b8:	bl	1129c <strlen@plt>
   375bc:	mov	r1, r4
   375c0:	movw	r4, #25172	; 0x6254
   375c4:	movt	r4, #7
   375c8:	add	r0, r5, r0
   375cc:	bl	11164 <stpcpy@plt>
   375d0:	movw	r3, #25176	; 0x6258
   375d4:	movt	r3, #7
   375d8:	ldrh	r1, [r3, #4]
   375dc:	mov	r2, r0
   375e0:	ldr	r0, [r3]
   375e4:	ldrb	r3, [r3, #6]
   375e8:	strh	r1, [r2, #4]
   375ec:	str	r0, [r2]
   375f0:	strb	r3, [r2, #6]
   375f4:	ldr	ip, [sp, #8]
   375f8:	b	374d8 <__assert_fail@plt+0x260d4>
   375fc:	bl	1117c <__stack_chk_fail@plt>
   37600:	ubfx	r3, r1, #5, #2
   37604:	cmp	r3, #2
   37608:	push	{lr}		; (str lr, [sp, #-4]!)
   3760c:	sub	sp, sp, #12
   37610:	beq	37688 <__assert_fail@plt+0x26284>
   37614:	cmp	r3, #3
   37618:	beq	3766c <__assert_fail@plt+0x26268>
   3761c:	cmp	r3, #1
   37620:	beq	37648 <__assert_fail@plt+0x26244>
   37624:	and	r1, r1, #31
   37628:	mvn	r2, #0
   3762c:	str	r1, [sp]
   37630:	movw	r3, #25184	; 0x6260
   37634:	mov	r1, #1
   37638:	movt	r3, #7
   3763c:	bl	112cc <__sprintf_chk@plt>
   37640:	add	sp, sp, #12
   37644:	pop	{pc}		; (ldr pc, [sp], #4)
   37648:	and	r2, r1, #31
   3764c:	mov	r1, r3
   37650:	str	r2, [sp]
   37654:	movw	r3, #25244	; 0x629c
   37658:	mvn	r2, #0
   3765c:	movt	r3, #7
   37660:	bl	112cc <__sprintf_chk@plt>
   37664:	add	sp, sp, #12
   37668:	pop	{pc}		; (ldr pc, [sp], #4)
   3766c:	and	r1, r1, #15
   37670:	movw	r3, #24472	; 0x5f98
   37674:	movt	r3, #7
   37678:	ldr	r1, [r3, r1, lsl #2]
   3767c:	add	sp, sp, #12
   37680:	pop	{lr}		; (ldr lr, [sp], #4)
   37684:	b	111dc <strcpy@plt>
   37688:	and	r1, r1, #31
   3768c:	mvn	r2, #0
   37690:	str	r1, [sp]
   37694:	movw	r3, #25248	; 0x62a0
   37698:	mov	r1, #1
   3769c:	movt	r3, #7
   376a0:	bl	112cc <__sprintf_chk@plt>
   376a4:	add	sp, sp, #12
   376a8:	pop	{pc}		; (ldr pc, [sp], #4)
   376ac:	ubfx	r3, r2, #7, #1
   376b0:	orr	r1, r3, r1, lsl #1
   376b4:	cmp	r1, #1
   376b8:	push	{lr}		; (str lr, [sp, #-4]!)
   376bc:	sub	sp, sp, #12
   376c0:	beq	37718 <__assert_fail@plt+0x26314>
   376c4:	bcc	376f4 <__assert_fail@plt+0x262f0>
   376c8:	cmp	r1, #2
   376cc:	bne	376ec <__assert_fail@plt+0x262e8>
   376d0:	and	r2, r2, #31
   376d4:	movw	r3, #25248	; 0x62a0
   376d8:	str	r2, [sp]
   376dc:	movt	r3, #7
   376e0:	mov	r1, #1
   376e4:	mvn	r2, #0
   376e8:	bl	112cc <__sprintf_chk@plt>
   376ec:	add	sp, sp, #12
   376f0:	pop	{pc}		; (ldr pc, [sp], #4)
   376f4:	and	r2, r2, #31
   376f8:	mov	r1, #1
   376fc:	str	r2, [sp]
   37700:	movw	r3, #25184	; 0x6260
   37704:	mvn	r2, #0
   37708:	movt	r3, #7
   3770c:	bl	112cc <__sprintf_chk@plt>
   37710:	add	sp, sp, #12
   37714:	pop	{pc}		; (ldr pc, [sp], #4)
   37718:	and	r2, r2, #31
   3771c:	movw	r3, #25244	; 0x629c
   37720:	str	r2, [sp]
   37724:	movt	r3, #7
   37728:	mvn	r2, #0
   3772c:	bl	112cc <__sprintf_chk@plt>
   37730:	add	sp, sp, #12
   37734:	pop	{pc}		; (ldr pc, [sp], #4)
   37738:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3773c:	movw	fp, #16680	; 0x4128
   37740:	movt	fp, #9
   37744:	ldrb	r4, [r0, #1]
   37748:	mov	sl, r0
   3774c:	sub	sp, sp, #44	; 0x2c
   37750:	ldr	r1, [fp]
   37754:	tst	r4, #128	; 0x80
   37758:	ldrb	r0, [sl], #2
   3775c:	and	r4, r4, #127	; 0x7f
   37760:	mov	r5, #0
   37764:	str	r1, [sp, #36]	; 0x24
   37768:	movne	r1, #0
   3776c:	str	r0, [sp, #12]
   37770:	uxtb	r4, r4
   37774:	movne	ip, r1
   37778:	beq	377b0 <__assert_fail@plt+0x263ac>
   3777c:	ldrb	lr, [sl], #1
   37780:	add	ip, ip, #7
   37784:	sub	r9, ip, #32
   37788:	rsb	r8, ip, #32
   3778c:	and	r0, lr, #127	; 0x7f
   37790:	tst	lr, #128	; 0x80
   37794:	uxtb	r0, r0
   37798:	lsl	r7, r0, r9
   3779c:	lsl	r6, r0, ip
   377a0:	orr	r7, r7, r0, lsr r8
   377a4:	orr	r4, r4, r6
   377a8:	orr	r5, r5, r7
   377ac:	bne	3777c <__assert_fail@plt+0x26378>
   377b0:	ldrb	r6, [sl]
   377b4:	mov	r7, #0
   377b8:	add	sl, sl, #1
   377bc:	tst	r6, #128	; 0x80
   377c0:	and	r6, r6, #127	; 0x7f
   377c4:	movne	r1, #0
   377c8:	uxtb	r6, r6
   377cc:	movne	ip, r1
   377d0:	beq	37808 <__assert_fail@plt+0x26404>
   377d4:	ldrb	lr, [sl], #1
   377d8:	add	ip, ip, #7
   377dc:	sub	r9, ip, #32
   377e0:	rsb	r8, ip, #32
   377e4:	and	r0, lr, #127	; 0x7f
   377e8:	tst	lr, #128	; 0x80
   377ec:	uxtb	r0, r0
   377f0:	lsl	r3, r0, r9
   377f4:	lsl	r2, r0, ip
   377f8:	orr	r3, r3, r0, lsr r8
   377fc:	orr	r6, r6, r2
   37800:	orr	r7, r7, r3
   37804:	bne	377d4 <__assert_fail@plt+0x263d0>
   37808:	ldr	r3, [sp, #12]
   3780c:	add	r0, sp, #16
   37810:	tst	r3, #128	; 0x80
   37814:	and	r1, r3, #127	; 0x7f
   37818:	bne	37860 <__assert_fail@plt+0x2645c>
   3781c:	bl	37600 <__assert_fail@plt+0x261fc>
   37820:	lsl	r6, r6, #2
   37824:	movw	r1, #25296	; 0x62d0
   37828:	movw	r2, #36800	; 0x8fc0
   3782c:	add	r3, sp, #16
   37830:	stm	sp, {r4, r6}
   37834:	movt	r1, #7
   37838:	movt	r2, #6
   3783c:	mov	r0, #1
   37840:	bl	1132c <__printf_chk@plt>
   37844:	ldr	r2, [sp, #36]	; 0x24
   37848:	mov	r0, sl
   3784c:	ldr	r3, [fp]
   37850:	cmp	r2, r3
   37854:	bne	3788c <__assert_fail@plt+0x26488>
   37858:	add	sp, sp, #44	; 0x2c
   3785c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37860:	bl	37600 <__assert_fail@plt+0x261fc>
   37864:	lsl	r6, r6, #2
   37868:	add	r3, sp, #16
   3786c:	stm	sp, {r4, r6}
   37870:	movw	r1, #25252	; 0x62a4
   37874:	movw	r2, #36800	; 0x8fc0
   37878:	movt	r1, #7
   3787c:	movt	r2, #6
   37880:	mov	r0, #1
   37884:	bl	1132c <__printf_chk@plt>
   37888:	b	37844 <__assert_fail@plt+0x26440>
   3788c:	bl	1117c <__stack_chk_fail@plt>
   37890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37894:	movw	fp, #16680	; 0x4128
   37898:	movt	fp, #9
   3789c:	ldrb	r8, [r0, #2]
   378a0:	sub	sp, sp, #68	; 0x44
   378a4:	ldrb	ip, [r0]
   378a8:	ldr	r3, [fp]
   378ac:	tst	r8, #128	; 0x80
   378b0:	and	r8, r8, #127	; 0x7f
   378b4:	add	sl, r0, #3
   378b8:	ldrb	r2, [r0, #1]
   378bc:	mov	r9, #0
   378c0:	uxtb	r8, r8
   378c4:	str	r3, [sp, #60]	; 0x3c
   378c8:	beq	37904 <__assert_fail@plt+0x26500>
   378cc:	mov	r3, #0
   378d0:	ldrb	r1, [sl], #1
   378d4:	add	r3, r3, #7
   378d8:	sub	lr, r3, #32
   378dc:	rsb	r0, r3, #32
   378e0:	and	r6, r1, #127	; 0x7f
   378e4:	tst	r1, #128	; 0x80
   378e8:	uxtb	r6, r6
   378ec:	lsl	r5, r6, lr
   378f0:	lsl	r4, r6, r3
   378f4:	orr	r5, r5, r6, lsr r0
   378f8:	orr	r8, r8, r4
   378fc:	orr	r9, r9, r5
   37900:	bne	378d0 <__assert_fail@plt+0x264cc>
   37904:	rsbs	r3, r2, #1
   37908:	mvn	r0, ip
   3790c:	and	r1, ip, #127	; 0x7f
   37910:	movcc	r3, #0
   37914:	ands	r3, r3, r0, lsr #7
   37918:	bne	37988 <__assert_fail@plt+0x26584>
   3791c:	add	r5, sp, #20
   37920:	str	r2, [sp, #8]
   37924:	str	ip, [sp, #12]
   37928:	add	r4, sp, #40	; 0x28
   3792c:	mov	r0, r5
   37930:	bl	37600 <__assert_fail@plt+0x261fc>
   37934:	ldr	ip, [sp, #12]
   37938:	ldr	r2, [sp, #8]
   3793c:	mov	r0, r4
   37940:	lsr	r1, ip, #7
   37944:	bl	376ac <__assert_fail@plt+0x262a8>
   37948:	movw	r1, #25380	; 0x6324
   3794c:	movw	r2, #25376	; 0x6320
   37950:	str	r5, [sp]
   37954:	str	r4, [sp, #4]
   37958:	mov	r3, r8
   3795c:	movt	r1, #7
   37960:	movt	r2, #7
   37964:	mov	r0, #1
   37968:	bl	1132c <__printf_chk@plt>
   3796c:	ldr	r2, [sp, #60]	; 0x3c
   37970:	mov	r0, sl
   37974:	ldr	r3, [fp]
   37978:	cmp	r2, r3
   3797c:	bne	379b8 <__assert_fail@plt+0x265b4>
   37980:	add	sp, sp, #68	; 0x44
   37984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37988:	add	r4, sp, #40	; 0x28
   3798c:	mov	r0, r4
   37990:	bl	37600 <__assert_fail@plt+0x261fc>
   37994:	str	r4, [sp]
   37998:	mov	r3, r8
   3799c:	movw	r1, #25348	; 0x6304
   379a0:	movw	r2, #25376	; 0x6320
   379a4:	movt	r1, #7
   379a8:	movt	r2, #7
   379ac:	mov	r0, #1
   379b0:	bl	1132c <__printf_chk@plt>
   379b4:	b	3796c <__assert_fail@plt+0x26568>
   379b8:	bl	1117c <__stack_chk_fail@plt>
   379bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   379c0:	movw	fp, #16680	; 0x4128
   379c4:	ldrb	r1, [r0]
   379c8:	sub	sp, sp, #52	; 0x34
   379cc:	movt	fp, #9
   379d0:	ldrb	r6, [r0, #2]
   379d4:	add	sl, r0, #3
   379d8:	ldrb	r0, [r0, #1]
   379dc:	str	r1, [sp, #16]
   379e0:	tst	r6, #128	; 0x80
   379e4:	ldr	r1, [fp]
   379e8:	and	r6, r6, #127	; 0x7f
   379ec:	str	r0, [sp, #20]
   379f0:	mov	r7, #0
   379f4:	uxtb	r6, r6
   379f8:	movne	ip, #0
   379fc:	str	r1, [sp, #44]	; 0x2c
   37a00:	beq	37a38 <__assert_fail@plt+0x26634>
   37a04:	ldrb	lr, [sl], #1
   37a08:	add	ip, ip, #7
   37a0c:	sub	r9, ip, #32
   37a10:	rsb	r8, ip, #32
   37a14:	and	r0, lr, #127	; 0x7f
   37a18:	tst	lr, #128	; 0x80
   37a1c:	uxtb	r0, r0
   37a20:	lsl	r5, r0, r9
   37a24:	lsl	r4, r0, ip
   37a28:	orr	r5, r5, r0, lsr r8
   37a2c:	orr	r6, r6, r4
   37a30:	orr	r7, r7, r5
   37a34:	bne	37a04 <__assert_fail@plt+0x26600>
   37a38:	ldrb	r8, [sl]
   37a3c:	mov	r9, #0
   37a40:	add	sl, sl, #1
   37a44:	tst	r8, #128	; 0x80
   37a48:	and	r8, r8, #127	; 0x7f
   37a4c:	movne	r1, #0
   37a50:	uxtb	r8, r8
   37a54:	movne	ip, r1
   37a58:	beq	37a90 <__assert_fail@plt+0x2668c>
   37a5c:	ldrb	lr, [sl], #1
   37a60:	add	ip, ip, #7
   37a64:	sub	r5, ip, #32
   37a68:	rsb	r4, ip, #32
   37a6c:	and	r0, lr, #127	; 0x7f
   37a70:	tst	lr, #128	; 0x80
   37a74:	uxtb	r0, r0
   37a78:	lsl	r3, r0, r5
   37a7c:	lsl	r2, r0, ip
   37a80:	orr	r3, r3, r0, lsr r4
   37a84:	orr	r8, r8, r2
   37a88:	orr	r9, r9, r3
   37a8c:	bne	37a5c <__assert_fail@plt+0x26658>
   37a90:	ldr	r3, [sp, #16]
   37a94:	add	r4, sp, #24
   37a98:	tst	r3, #128	; 0x80
   37a9c:	and	r5, r3, #63	; 0x3f
   37aa0:	ldr	r3, [sp, #20]
   37aa4:	mov	r0, r4
   37aa8:	and	r1, r3, #127	; 0x7f
   37aac:	bne	37afc <__assert_fail@plt+0x266f8>
   37ab0:	bl	37600 <__assert_fail@plt+0x261fc>
   37ab4:	lsl	r8, r8, #2
   37ab8:	movw	r1, #25476	; 0x6384
   37abc:	movw	r2, #25472	; 0x6380
   37ac0:	str	r4, [sp, #4]
   37ac4:	mov	r3, r5
   37ac8:	str	r6, [sp]
   37acc:	movt	r1, #7
   37ad0:	str	r8, [sp, #8]
   37ad4:	movt	r2, #7
   37ad8:	mov	r0, #1
   37adc:	bl	1132c <__printf_chk@plt>
   37ae0:	ldr	r2, [sp, #44]	; 0x2c
   37ae4:	mov	r0, sl
   37ae8:	ldr	r3, [fp]
   37aec:	cmp	r2, r3
   37af0:	bne	37b30 <__assert_fail@plt+0x2672c>
   37af4:	add	sp, sp, #52	; 0x34
   37af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37afc:	bl	37600 <__assert_fail@plt+0x261fc>
   37b00:	lsl	r8, r8, #2
   37b04:	str	r4, [sp, #4]
   37b08:	mov	r3, r5
   37b0c:	str	r6, [sp]
   37b10:	movw	r1, #25420	; 0x634c
   37b14:	str	r8, [sp, #8]
   37b18:	movw	r2, #25472	; 0x6380
   37b1c:	movt	r1, #7
   37b20:	movt	r2, #7
   37b24:	mov	r0, #1
   37b28:	bl	1132c <__printf_chk@plt>
   37b2c:	b	37ae0 <__assert_fail@plt+0x266dc>
   37b30:	bl	1117c <__stack_chk_fail@plt>
   37b34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37b38:	movw	fp, #16680	; 0x4128
   37b3c:	movt	fp, #9
   37b40:	ldrb	r8, [r0, #3]
   37b44:	ldrb	r2, [r0]
   37b48:	add	sl, r0, #4
   37b4c:	ldr	r3, [fp]
   37b50:	sub	sp, sp, #76	; 0x4c
   37b54:	ldrb	ip, [r0, #1]
   37b58:	tst	r8, #128	; 0x80
   37b5c:	ldrb	r0, [r0, #2]
   37b60:	and	r8, r8, #127	; 0x7f
   37b64:	mov	r9, #0
   37b68:	str	r3, [sp, #68]	; 0x44
   37b6c:	uxtb	r8, r8
   37b70:	str	r0, [sp, #20]
   37b74:	beq	37bb0 <__assert_fail@plt+0x267ac>
   37b78:	mov	r3, #0
   37b7c:	ldrb	lr, [sl], #1
   37b80:	add	r3, r3, #7
   37b84:	sub	r7, r3, #32
   37b88:	rsb	r6, r3, #32
   37b8c:	and	r0, lr, #127	; 0x7f
   37b90:	tst	lr, #128	; 0x80
   37b94:	uxtb	r0, r0
   37b98:	lsl	r5, r0, r7
   37b9c:	lsl	r4, r0, r3
   37ba0:	orr	r5, r5, r0, lsr r6
   37ba4:	orr	r8, r8, r4
   37ba8:	orr	r9, r9, r5
   37bac:	bne	37b7c <__assert_fail@plt+0x26778>
   37bb0:	ldr	r3, [sp, #20]
   37bb4:	mvn	lr, ip
   37bb8:	and	r4, r2, #63	; 0x3f
   37bbc:	and	r1, ip, #127	; 0x7f
   37bc0:	rsbs	r0, r3, #1
   37bc4:	movcc	r0, #0
   37bc8:	ands	r0, r0, lr, lsr #7
   37bcc:	bne	37c3c <__assert_fail@plt+0x26838>
   37bd0:	add	r6, sp, #28
   37bd4:	str	ip, [sp, #16]
   37bd8:	add	r5, sp, #48	; 0x30
   37bdc:	mov	r0, r6
   37be0:	bl	37600 <__assert_fail@plt+0x261fc>
   37be4:	ldr	ip, [sp, #16]
   37be8:	ldr	r2, [sp, #20]
   37bec:	mov	r0, r5
   37bf0:	lsr	r1, ip, #7
   37bf4:	bl	376ac <__assert_fail@plt+0x262a8>
   37bf8:	movw	r1, #25576	; 0x63e8
   37bfc:	movw	r2, #25572	; 0x63e4
   37c00:	str	r6, [sp, #4]
   37c04:	str	r5, [sp, #8]
   37c08:	mov	r3, r4
   37c0c:	str	r8, [sp]
   37c10:	movt	r1, #7
   37c14:	movt	r2, #7
   37c18:	mov	r0, #1
   37c1c:	bl	1132c <__printf_chk@plt>
   37c20:	ldr	r2, [sp, #68]	; 0x44
   37c24:	mov	r0, sl
   37c28:	ldr	r3, [fp]
   37c2c:	cmp	r2, r3
   37c30:	bne	37c70 <__assert_fail@plt+0x2686c>
   37c34:	add	sp, sp, #76	; 0x4c
   37c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37c3c:	add	r5, sp, #48	; 0x30
   37c40:	mov	r0, r5
   37c44:	bl	37600 <__assert_fail@plt+0x261fc>
   37c48:	str	r5, [sp, #4]
   37c4c:	str	r8, [sp]
   37c50:	mov	r3, r4
   37c54:	movw	r1, #25536	; 0x63c0
   37c58:	movw	r2, #25572	; 0x63e4
   37c5c:	movt	r1, #7
   37c60:	movt	r2, #7
   37c64:	mov	r0, #1
   37c68:	bl	1132c <__printf_chk@plt>
   37c6c:	b	37c20 <__assert_fail@plt+0x2681c>
   37c70:	bl	1117c <__stack_chk_fail@plt>
   37c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37c78:	movw	r8, #16680	; 0x4128
   37c7c:	movt	r8, #9
   37c80:	sub	sp, sp, #44	; 0x2c
   37c84:	ands	ip, r1, #16
   37c88:	mov	r9, r0
   37c8c:	ldr	r3, [r8]
   37c90:	str	r3, [sp, #36]	; 0x24
   37c94:	bne	37d38 <__assert_fail@plt+0x26934>
   37c98:	ldrb	r6, [r0]
   37c9c:	and	r1, r1, #15
   37ca0:	add	r9, r0, #1
   37ca4:	mov	r7, #0
   37ca8:	tst	r6, #128	; 0x80
   37cac:	and	r6, r6, #127	; 0x7f
   37cb0:	uxtb	r6, r6
   37cb4:	beq	37cec <__assert_fail@plt+0x268e8>
   37cb8:	ldrb	r0, [r9], #1
   37cbc:	add	ip, ip, #7
   37cc0:	sub	sl, ip, #32
   37cc4:	rsb	lr, ip, #32
   37cc8:	and	r2, r0, #127	; 0x7f
   37ccc:	tst	r0, #128	; 0x80
   37cd0:	uxtb	r2, r2
   37cd4:	lsl	r5, r2, sl
   37cd8:	lsl	r4, r2, ip
   37cdc:	orr	r5, r5, r2, lsr lr
   37ce0:	orr	r6, r6, r4
   37ce4:	orr	r7, r7, r5
   37ce8:	bne	37cb8 <__assert_fail@plt+0x268b4>
   37cec:	sub	r1, r1, #1
   37cf0:	cmp	r1, #14
   37cf4:	ldrls	pc, [pc, r1, lsl #2]
   37cf8:	b	37f64 <__assert_fail@plt+0x26b60>
   37cfc:	andeq	r7, r3, r4, lsl pc
   37d00:	andeq	r8, r3, r4, ror r0
   37d04:	andeq	r8, r3, r4, asr #32
   37d08:	andeq	r8, r3, r8, lsl r0
   37d0c:	andeq	r7, r3, r8, ror #31
   37d10:	ldrdeq	r8, [r3], -ip
   37d14:	andeq	r8, r3, ip, lsr #3
   37d18:	andeq	r8, r3, r0, lsl #3
   37d1c:	andeq	r8, r3, r0, asr r1
   37d20:	andeq	r8, r3, r4, lsr #2
   37d24:	strdeq	r8, [r3], -r4
   37d28:	andeq	r8, r3, r8, asr #1
   37d2c:	muleq	r3, r8, r0
   37d30:	andeq	r7, r3, r8, lsr pc
   37d34:	andeq	r8, r3, ip, lsr #10
   37d38:	and	r3, r1, #15
   37d3c:	cmp	r3, #15
   37d40:	ldrls	pc, [pc, r3, lsl #2]
   37d44:	b	37ef8 <__assert_fail@plt+0x26af4>
   37d48:	ldrdeq	r7, [r3], -r0
   37d4c:	andeq	r7, r3, r0, lsl #29
   37d50:	strdeq	r7, [r3], -r8
   37d54:	strdeq	r7, [r3], -r8
   37d58:	strdeq	r7, [r3], -r8
   37d5c:	strdeq	r7, [r3], -r8
   37d60:	strdeq	r7, [r3], -r8
   37d64:	strdeq	r7, [r3], -r8
   37d68:	strdeq	r7, [r3], -r8
   37d6c:	ldrdeq	r7, [r3], -r8
   37d70:	andeq	r7, r3, r0, ror #29
   37d74:	andeq	r7, r3, r8, ror #29
   37d78:	strdeq	r7, [r3], -r0
   37d7c:	strdeq	r7, [r3], -r8
   37d80:	strdeq	r7, [r3], -r8
   37d84:	andeq	r7, r3, r8, lsl #27
   37d88:	mov	r4, r0
   37d8c:	ldrb	r5, [r0, #1]
   37d90:	ldrb	r3, [r4], #2
   37d94:	cmp	r3, #2
   37d98:	bhi	38208 <__assert_fail@plt+0x26e04>
   37d9c:	movw	r2, #24472	; 0x5f98
   37da0:	movt	r2, #7
   37da4:	add	r3, r2, r3, lsl #2
   37da8:	ldr	r3, [r3, #64]	; 0x40
   37dac:	str	r5, [sp]
   37db0:	movw	r1, #25984	; 0x6580
   37db4:	movw	r2, #44252	; 0xacdc
   37db8:	movt	r1, #7
   37dbc:	movt	r2, #6
   37dc0:	mov	r0, #1
   37dc4:	bl	1132c <__printf_chk@plt>
   37dc8:	mov	r0, r4
   37dcc:	b	37ec0 <__assert_fail@plt+0x26abc>
   37dd0:	ldrb	r3, [r0, #1]
   37dd4:	mov	fp, #0
   37dd8:	ldrb	r2, [r9], #2
   37ddc:	tst	r3, #128	; 0x80
   37de0:	and	r3, r3, #127	; 0x7f
   37de4:	uxtb	sl, r3
   37de8:	beq	37e24 <__assert_fail@plt+0x26a20>
   37dec:	mov	r3, #0
   37df0:	ldrb	ip, [r9], #1
   37df4:	add	r3, r3, #7
   37df8:	sub	r4, r3, #32
   37dfc:	rsb	lr, r3, #32
   37e00:	and	r0, ip, #127	; 0x7f
   37e04:	tst	ip, #128	; 0x80
   37e08:	uxtb	r0, r0
   37e0c:	lsl	r7, r0, r4
   37e10:	lsl	r6, r0, r3
   37e14:	orr	r7, r7, r0, lsr lr
   37e18:	orr	sl, sl, r6
   37e1c:	orr	fp, fp, r7
   37e20:	bne	37df0 <__assert_fail@plt+0x269ec>
   37e24:	sub	r3, r2, #1
   37e28:	cmp	r3, #18
   37e2c:	ldrls	pc, [pc, r3, lsl #2]
   37e30:	b	37efc <__assert_fail@plt+0x26af8>
   37e34:	andeq	r8, r3, ip, lsl r3
   37e38:	andeq	r8, r3, ip, ror #5
   37e3c:	ldrdeq	r8, [r3], -ip
   37e40:	andeq	r8, r3, ip, lsr #7
   37e44:	andeq	r8, r3, ip, ror r3
   37e48:	andeq	r8, r3, ip, asr #6
   37e4c:	andeq	r8, r3, r0, lsl #10
   37e50:	andeq	r8, r3, ip, ror #9
   37e54:			; <UNDEFINED> instruction: 0x000384bc
   37e58:	muleq	r3, r0, r4
   37e5c:	andeq	r8, r3, ip, ror r4
   37e60:	andeq	r8, r3, ip, asr #8
   37e64:	andeq	r8, r3, r0, lsr #8
   37e68:	andeq	r8, r3, ip, lsl #8
   37e6c:	muleq	r3, r8, r2
   37e70:	andeq	r8, r3, r4, ror r2
   37e74:	andeq	r8, r3, r0, asr r2
   37e78:	andeq	r8, r3, ip, lsr #4
   37e7c:	andeq	r8, r3, r8, asr #5
   37e80:	ldrb	r1, [r0]
   37e84:	add	r9, r0, #2
   37e88:	ldrb	r4, [r0, #1]
   37e8c:	add	r0, sp, #16
   37e90:	and	r1, r1, #15
   37e94:	bl	36b6c <__assert_fail@plt+0x25768>
   37e98:	and	r4, r4, #127	; 0x7f
   37e9c:	add	r3, sp, #16
   37ea0:	str	r4, [sp]
   37ea4:	movw	r1, #25944	; 0x6558
   37ea8:	movw	r2, #25972	; 0x6574
   37eac:	movt	r1, #7
   37eb0:	movt	r2, #7
   37eb4:	mov	r0, #1
   37eb8:	bl	1132c <__printf_chk@plt>
   37ebc:	mov	r0, r9
   37ec0:	ldr	r2, [sp, #36]	; 0x24
   37ec4:	ldr	r3, [r8]
   37ec8:	cmp	r2, r3
   37ecc:	bne	3855c <__assert_fail@plt+0x27158>
   37ed0:	add	sp, sp, #44	; 0x2c
   37ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37ed8:	bl	37738 <__assert_fail@plt+0x26334>
   37edc:	b	37ec0 <__assert_fail@plt+0x26abc>
   37ee0:	bl	37890 <__assert_fail@plt+0x2648c>
   37ee4:	b	37ec0 <__assert_fail@plt+0x26abc>
   37ee8:	bl	379bc <__assert_fail@plt+0x265b8>
   37eec:	b	37ec0 <__assert_fail@plt+0x26abc>
   37ef0:	bl	37b34 <__assert_fail@plt+0x26730>
   37ef4:	b	37ec0 <__assert_fail@plt+0x26abc>
   37ef8:	mov	r2, r1
   37efc:	movw	r1, #25012	; 0x61b4
   37f00:	mov	r0, #1
   37f04:	movt	r1, #7
   37f08:	bl	1132c <__printf_chk@plt>
   37f0c:	mov	r0, r9
   37f10:	b	37ec0 <__assert_fail@plt+0x26abc>
   37f14:	mov	r3, r6
   37f18:	movw	r1, #25664	; 0x6440
   37f1c:	movw	r2, #25660	; 0x643c
   37f20:	movt	r1, #7
   37f24:	movt	r2, #7
   37f28:	mov	r0, #1
   37f2c:	bl	1132c <__printf_chk@plt>
   37f30:	mov	r0, r9
   37f34:	b	37ec0 <__assert_fail@plt+0x26abc>
   37f38:	str	r6, [sp]
   37f3c:	movw	r1, #25752	; 0x6498
   37f40:	movw	r2, #25660	; 0x643c
   37f44:	movt	r1, #7
   37f48:	movt	r2, #7
   37f4c:	movw	r3, #24976	; 0x6190
   37f50:	mov	r0, #1
   37f54:	movt	r3, #7
   37f58:	bl	1132c <__printf_chk@plt>
   37f5c:	mov	r0, r9
   37f60:	b	37ec0 <__assert_fail@plt+0x26abc>
   37f64:	ldrb	r3, [r9]
   37f68:	mov	r5, #0
   37f6c:	add	r9, r9, #1
   37f70:	tst	r3, #128	; 0x80
   37f74:	and	r3, r3, #127	; 0x7f
   37f78:	uxtb	r4, r3
   37f7c:	beq	37fbc <__assert_fail@plt+0x26bb8>
   37f80:	mov	r1, #0
   37f84:	mov	ip, r1
   37f88:	ldrb	lr, [r9], #1
   37f8c:	add	ip, ip, #7
   37f90:	sub	fp, ip, #32
   37f94:	rsb	sl, ip, #32
   37f98:	and	r0, lr, #127	; 0x7f
   37f9c:	tst	lr, #128	; 0x80
   37fa0:	uxtb	r0, r0
   37fa4:	lsl	r3, r0, fp
   37fa8:	lsl	r2, r0, ip
   37fac:	orr	r3, r3, r0, lsr sl
   37fb0:	orr	r4, r4, r2
   37fb4:	orr	r5, r5, r3
   37fb8:	bne	37f88 <__assert_fail@plt+0x26b84>
   37fbc:	lsl	r4, r4, #4
   37fc0:	mov	r3, r6
   37fc4:	str	r4, [sp]
   37fc8:	movw	r1, #25624	; 0x6418
   37fcc:	movw	r2, #25660	; 0x643c
   37fd0:	movt	r1, #7
   37fd4:	movt	r2, #7
   37fd8:	mov	r0, #1
   37fdc:	bl	1132c <__printf_chk@plt>
   37fe0:	mov	r0, r9
   37fe4:	b	37ec0 <__assert_fail@plt+0x26abc>
   37fe8:	lsl	r6, r6, #2
   37fec:	movw	r1, #25772	; 0x64ac
   37ff0:	str	r6, [sp]
   37ff4:	movt	r1, #7
   37ff8:	movw	r2, #25660	; 0x643c
   37ffc:	movw	r3, #24916	; 0x6154
   38000:	movt	r2, #7
   38004:	movt	r3, #7
   38008:	mov	r0, #1
   3800c:	bl	1132c <__printf_chk@plt>
   38010:	mov	r0, r9
   38014:	b	37ec0 <__assert_fail@plt+0x26abc>
   38018:	str	r6, [sp]
   3801c:	movw	r1, #25752	; 0x6498
   38020:	movw	r2, #25660	; 0x643c
   38024:	movt	r1, #7
   38028:	movt	r2, #7
   3802c:	movw	r3, #24916	; 0x6154
   38030:	mov	r0, #1
   38034:	movt	r3, #7
   38038:	bl	1132c <__printf_chk@plt>
   3803c:	mov	r0, r9
   38040:	b	37ec0 <__assert_fail@plt+0x26abc>
   38044:	lsl	r6, r6, #2
   38048:	movw	r1, #25724	; 0x647c
   3804c:	str	r6, [sp]
   38050:	movt	r1, #7
   38054:	movw	r2, #25660	; 0x643c
   38058:	movw	r3, #24912	; 0x6150
   3805c:	movt	r2, #7
   38060:	movt	r3, #7
   38064:	mov	r0, #1
   38068:	bl	1132c <__printf_chk@plt>
   3806c:	mov	r0, r9
   38070:	b	37ec0 <__assert_fail@plt+0x26abc>
   38074:	lsl	r3, r6, #2
   38078:	movw	r1, #25688	; 0x6458
   3807c:	movw	r2, #25660	; 0x643c
   38080:	movt	r1, #7
   38084:	movt	r2, #7
   38088:	mov	r0, #1
   3808c:	bl	1132c <__printf_chk@plt>
   38090:	mov	r0, r9
   38094:	b	37ec0 <__assert_fail@plt+0x26abc>
   38098:	lsl	r6, r6, #2
   3809c:	movw	r1, #25772	; 0x64ac
   380a0:	str	r6, [sp]
   380a4:	movt	r1, #7
   380a8:	movw	r2, #25660	; 0x643c
   380ac:	movw	r3, #26048	; 0x65c0
   380b0:	movt	r2, #7
   380b4:	movt	r3, #7
   380b8:	mov	r0, #1
   380bc:	bl	1132c <__printf_chk@plt>
   380c0:	mov	r0, r9
   380c4:	b	37ec0 <__assert_fail@plt+0x26abc>
   380c8:	str	r6, [sp]
   380cc:	movw	r1, #25752	; 0x6498
   380d0:	movw	r2, #25660	; 0x643c
   380d4:	movt	r1, #7
   380d8:	movt	r2, #7
   380dc:	movw	r3, #26048	; 0x65c0
   380e0:	mov	r0, #1
   380e4:	movt	r3, #7
   380e8:	bl	1132c <__printf_chk@plt>
   380ec:	mov	r0, r9
   380f0:	b	37ec0 <__assert_fail@plt+0x26abc>
   380f4:	lsl	r6, r6, #2
   380f8:	movw	r1, #25772	; 0x64ac
   380fc:	str	r6, [sp]
   38100:	movt	r1, #7
   38104:	movw	r2, #25660	; 0x643c
   38108:	movw	r3, #24928	; 0x6160
   3810c:	movt	r2, #7
   38110:	movt	r3, #7
   38114:	mov	r0, #1
   38118:	bl	1132c <__printf_chk@plt>
   3811c:	mov	r0, r9
   38120:	b	37ec0 <__assert_fail@plt+0x26abc>
   38124:	str	r6, [sp]
   38128:	movw	r1, #25752	; 0x6498
   3812c:	movw	r2, #25660	; 0x643c
   38130:	movt	r1, #7
   38134:	movt	r2, #7
   38138:	movw	r3, #24928	; 0x6160
   3813c:	mov	r0, #1
   38140:	movt	r3, #7
   38144:	bl	1132c <__printf_chk@plt>
   38148:	mov	r0, r9
   3814c:	b	37ec0 <__assert_fail@plt+0x26abc>
   38150:	lsl	r6, r6, #2
   38154:	movw	r1, #25772	; 0x64ac
   38158:	str	r6, [sp]
   3815c:	movt	r1, #7
   38160:	movw	r2, #25660	; 0x643c
   38164:	movw	r3, #24924	; 0x615c
   38168:	movt	r2, #7
   3816c:	movt	r3, #7
   38170:	mov	r0, #1
   38174:	bl	1132c <__printf_chk@plt>
   38178:	mov	r0, r9
   3817c:	b	37ec0 <__assert_fail@plt+0x26abc>
   38180:	str	r6, [sp]
   38184:	movw	r1, #25752	; 0x6498
   38188:	movw	r2, #25660	; 0x643c
   3818c:	movt	r1, #7
   38190:	movt	r2, #7
   38194:	movw	r3, #24924	; 0x615c
   38198:	mov	r0, #1
   3819c:	movt	r3, #7
   381a0:	bl	1132c <__printf_chk@plt>
   381a4:	mov	r0, r9
   381a8:	b	37ec0 <__assert_fail@plt+0x26abc>
   381ac:	lsl	r6, r6, #2
   381b0:	movw	r1, #25772	; 0x64ac
   381b4:	str	r6, [sp]
   381b8:	movt	r1, #7
   381bc:	movw	r2, #25660	; 0x643c
   381c0:	movw	r3, #24920	; 0x6158
   381c4:	movt	r2, #7
   381c8:	movt	r3, #7
   381cc:	mov	r0, #1
   381d0:	bl	1132c <__printf_chk@plt>
   381d4:	mov	r0, r9
   381d8:	b	37ec0 <__assert_fail@plt+0x26abc>
   381dc:	str	r6, [sp]
   381e0:	movw	r1, #25752	; 0x6498
   381e4:	movw	r2, #25660	; 0x643c
   381e8:	movt	r1, #7
   381ec:	movt	r2, #7
   381f0:	movw	r3, #24920	; 0x6158
   381f4:	mov	r0, #1
   381f8:	movt	r3, #7
   381fc:	bl	1132c <__printf_chk@plt>
   38200:	mov	r0, r9
   38204:	b	37ec0 <__assert_fail@plt+0x26abc>
   38208:	str	r3, [sp]
   3820c:	mov	r1, #1
   38210:	movw	r3, #25976	; 0x6578
   38214:	add	r0, sp, #16
   38218:	movt	r3, #7
   3821c:	mov	r2, #20
   38220:	bl	112cc <__sprintf_chk@plt>
   38224:	add	r3, sp, #16
   38228:	b	37dac <__assert_fail@plt+0x269a8>
   3822c:	lsl	r3, sl, #2
   38230:	movw	r1, #25880	; 0x6518
   38234:	movw	r2, #25808	; 0x64d0
   38238:	movt	r1, #7
   3823c:	movt	r2, #7
   38240:	mov	r0, #1
   38244:	bl	1132c <__printf_chk@plt>
   38248:	mov	r0, r9
   3824c:	b	37ec0 <__assert_fail@plt+0x26abc>
   38250:	lsl	r3, sl, #2
   38254:	movw	r1, #25840	; 0x64f0
   38258:	movw	r2, #25808	; 0x64d0
   3825c:	movt	r1, #7
   38260:	movt	r2, #7
   38264:	mov	r0, #1
   38268:	bl	1132c <__printf_chk@plt>
   3826c:	mov	r0, r9
   38270:	b	37ec0 <__assert_fail@plt+0x26abc>
   38274:	mov	r3, sl
   38278:	movw	r1, #25812	; 0x64d4
   3827c:	movw	r2, #25808	; 0x64d0
   38280:	movt	r1, #7
   38284:	movt	r2, #7
   38288:	mov	r0, #1
   3828c:	bl	1132c <__printf_chk@plt>
   38290:	mov	r0, r9
   38294:	b	37ec0 <__assert_fail@plt+0x26abc>
   38298:	movw	r1, #25724	; 0x647c
   3829c:	movt	r1, #7
   382a0:	lsl	sl, sl, #2
   382a4:	str	sl, [sp]
   382a8:	movw	r2, #25808	; 0x64d0
   382ac:	movw	r3, #24952	; 0x6178
   382b0:	movt	r2, #7
   382b4:	movt	r3, #7
   382b8:	mov	r0, #1
   382bc:	bl	1132c <__printf_chk@plt>
   382c0:	mov	r0, r9
   382c4:	b	37ec0 <__assert_fail@plt+0x26abc>
   382c8:	mov	r3, sl
   382cc:	movw	r1, #25912	; 0x6538
   382d0:	movw	r2, #25808	; 0x64d0
   382d4:	movt	r1, #7
   382d8:	movt	r2, #7
   382dc:	mov	r0, #1
   382e0:	bl	1132c <__printf_chk@plt>
   382e4:	mov	r0, r9
   382e8:	b	37ec0 <__assert_fail@plt+0x26abc>
   382ec:	lsl	sl, sl, #2
   382f0:	movw	r1, #25724	; 0x647c
   382f4:	str	sl, [sp]
   382f8:	movt	r1, #7
   382fc:	movw	r2, #25808	; 0x64d0
   38300:	movw	r3, #24920	; 0x6158
   38304:	movt	r2, #7
   38308:	movt	r3, #7
   3830c:	mov	r0, #1
   38310:	bl	1132c <__printf_chk@plt>
   38314:	mov	r0, r9
   38318:	b	37ec0 <__assert_fail@plt+0x26abc>
   3831c:	lsl	sl, sl, #2
   38320:	movw	r1, #25724	; 0x647c
   38324:	str	sl, [sp]
   38328:	movt	r1, #7
   3832c:	movw	r2, #25808	; 0x64d0
   38330:	movw	r3, #24916	; 0x6154
   38334:	movt	r2, #7
   38338:	movt	r3, #7
   3833c:	mov	r0, #1
   38340:	bl	1132c <__printf_chk@plt>
   38344:	mov	r0, r9
   38348:	b	37ec0 <__assert_fail@plt+0x26abc>
   3834c:	lsl	sl, sl, #2
   38350:	movw	r1, #25724	; 0x647c
   38354:	str	sl, [sp]
   38358:	movt	r1, #7
   3835c:	movw	r2, #25808	; 0x64d0
   38360:	movw	r3, #24976	; 0x6190
   38364:	movt	r2, #7
   38368:	movt	r3, #7
   3836c:	mov	r0, #1
   38370:	bl	1132c <__printf_chk@plt>
   38374:	mov	r0, r9
   38378:	b	37ec0 <__assert_fail@plt+0x26abc>
   3837c:	lsl	sl, sl, #2
   38380:	movw	r1, #25724	; 0x647c
   38384:	str	sl, [sp]
   38388:	movt	r1, #7
   3838c:	movw	r2, #25808	; 0x64d0
   38390:	movw	r3, #26048	; 0x65c0
   38394:	movt	r2, #7
   38398:	movt	r3, #7
   3839c:	mov	r0, #1
   383a0:	bl	1132c <__printf_chk@plt>
   383a4:	mov	r0, r9
   383a8:	b	37ec0 <__assert_fail@plt+0x26abc>
   383ac:	lsl	sl, sl, #2
   383b0:	movw	r1, #25724	; 0x647c
   383b4:	str	sl, [sp]
   383b8:	movt	r1, #7
   383bc:	movw	r2, #25808	; 0x64d0
   383c0:	movw	r3, #24928	; 0x6160
   383c4:	movt	r2, #7
   383c8:	movt	r3, #7
   383cc:	mov	r0, #1
   383d0:	bl	1132c <__printf_chk@plt>
   383d4:	mov	r0, r9
   383d8:	b	37ec0 <__assert_fail@plt+0x26abc>
   383dc:	lsl	sl, sl, #2
   383e0:	movw	r1, #25724	; 0x647c
   383e4:	str	sl, [sp]
   383e8:	movt	r1, #7
   383ec:	movw	r2, #25808	; 0x64d0
   383f0:	movw	r3, #24924	; 0x615c
   383f4:	movt	r2, #7
   383f8:	movt	r3, #7
   383fc:	mov	r0, #1
   38400:	bl	1132c <__printf_chk@plt>
   38404:	mov	r0, r9
   38408:	b	37ec0 <__assert_fail@plt+0x26abc>
   3840c:	lsl	sl, sl, #2
   38410:	movw	r1, #25772	; 0x64ac
   38414:	str	sl, [sp]
   38418:	movt	r1, #7
   3841c:	b	382a8 <__assert_fail@plt+0x26ea4>
   38420:	str	sl, [sp]
   38424:	movw	r1, #25752	; 0x6498
   38428:	movw	r2, #25808	; 0x64d0
   3842c:	movt	r1, #7
   38430:	movt	r2, #7
   38434:	movw	r3, #24952	; 0x6178
   38438:	mov	r0, #1
   3843c:	movt	r3, #7
   38440:	bl	1132c <__printf_chk@plt>
   38444:	mov	r0, r9
   38448:	b	37ec0 <__assert_fail@plt+0x26abc>
   3844c:	movw	r1, #25724	; 0x647c
   38450:	movt	r1, #7
   38454:	lsl	sl, sl, #2
   38458:	str	sl, [sp]
   3845c:	movw	r2, #25808	; 0x64d0
   38460:	movw	r3, #24964	; 0x6184
   38464:	movt	r2, #7
   38468:	movt	r3, #7
   3846c:	mov	r0, #1
   38470:	bl	1132c <__printf_chk@plt>
   38474:	mov	r0, r9
   38478:	b	37ec0 <__assert_fail@plt+0x26abc>
   3847c:	lsl	sl, sl, #2
   38480:	movw	r1, #25772	; 0x64ac
   38484:	str	sl, [sp]
   38488:	movt	r1, #7
   3848c:	b	3845c <__assert_fail@plt+0x27058>
   38490:	str	sl, [sp]
   38494:	movw	r1, #25752	; 0x6498
   38498:	movw	r2, #25808	; 0x64d0
   3849c:	movt	r1, #7
   384a0:	movt	r2, #7
   384a4:	movw	r3, #24964	; 0x6184
   384a8:	mov	r0, #1
   384ac:	movt	r3, #7
   384b0:	bl	1132c <__printf_chk@plt>
   384b4:	mov	r0, r9
   384b8:	b	37ec0 <__assert_fail@plt+0x26abc>
   384bc:	movw	r1, #25724	; 0x647c
   384c0:	movt	r1, #7
   384c4:	lsl	sl, sl, #2
   384c8:	str	sl, [sp]
   384cc:	movw	r2, #25808	; 0x64d0
   384d0:	movw	r3, #24960	; 0x6180
   384d4:	movt	r2, #7
   384d8:	movt	r3, #7
   384dc:	mov	r0, #1
   384e0:	bl	1132c <__printf_chk@plt>
   384e4:	mov	r0, r9
   384e8:	b	37ec0 <__assert_fail@plt+0x26abc>
   384ec:	lsl	sl, sl, #2
   384f0:	movw	r1, #25772	; 0x64ac
   384f4:	str	sl, [sp]
   384f8:	movt	r1, #7
   384fc:	b	384cc <__assert_fail@plt+0x270c8>
   38500:	str	sl, [sp]
   38504:	movw	r1, #25752	; 0x6498
   38508:	movw	r2, #25808	; 0x64d0
   3850c:	movt	r1, #7
   38510:	movt	r2, #7
   38514:	movw	r3, #24960	; 0x6180
   38518:	mov	r0, #1
   3851c:	movt	r3, #7
   38520:	bl	1132c <__printf_chk@plt>
   38524:	mov	r0, r9
   38528:	b	37ec0 <__assert_fail@plt+0x26abc>
   3852c:	lsl	r6, r6, #2
   38530:	movw	r1, #25772	; 0x64ac
   38534:	str	r6, [sp]
   38538:	movt	r1, #7
   3853c:	movw	r2, #25660	; 0x643c
   38540:	movw	r3, #24976	; 0x6190
   38544:	movt	r2, #7
   38548:	movt	r3, #7
   3854c:	mov	r0, #1
   38550:	bl	1132c <__printf_chk@plt>
   38554:	mov	r0, r9
   38558:	b	37ec0 <__assert_fail@plt+0x26abc>
   3855c:	bl	1117c <__stack_chk_fail@plt>
   38560:	ands	r3, r1, #16
   38564:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   38568:	mov	sl, r0
   3856c:	sub	sp, sp, #8
   38570:	bne	38648 <__assert_fail@plt+0x27244>
   38574:	ldrb	r8, [r0]
   38578:	add	sl, r0, #1
   3857c:	mov	r9, #0
   38580:	tst	r8, #128	; 0x80
   38584:	and	r8, r8, #127	; 0x7f
   38588:	movne	r1, r3
   3858c:	uxtb	r8, r8
   38590:	beq	385c8 <__assert_fail@plt+0x271c4>
   38594:	ldrb	ip, [sl], #1
   38598:	add	r1, r1, #7
   3859c:	sub	lr, r1, #32
   385a0:	rsb	r0, r1, #32
   385a4:	and	r2, ip, #127	; 0x7f
   385a8:	tst	ip, #128	; 0x80
   385ac:	uxtb	r2, r2
   385b0:	lsl	r7, r2, lr
   385b4:	lsl	r6, r2, r1
   385b8:	orr	r7, r7, r2, lsr r0
   385bc:	orr	r8, r8, r6
   385c0:	orr	r9, r9, r7
   385c4:	bne	38594 <__assert_fail@plt+0x27190>
   385c8:	ldrb	r6, [sl]
   385cc:	mov	r7, #0
   385d0:	add	sl, sl, #1
   385d4:	tst	r6, #128	; 0x80
   385d8:	and	r6, r6, #127	; 0x7f
   385dc:	movne	r1, #0
   385e0:	uxtb	r6, r6
   385e4:	beq	3861c <__assert_fail@plt+0x27218>
   385e8:	ldrb	r0, [sl], #1
   385ec:	add	r1, r1, #7
   385f0:	sub	lr, r1, #32
   385f4:	rsb	ip, r1, #32
   385f8:	and	r2, r0, #127	; 0x7f
   385fc:	tst	r0, #128	; 0x80
   38600:	uxtb	r2, r2
   38604:	lsl	r5, r2, lr
   38608:	lsl	r4, r2, r1
   3860c:	orr	r5, r5, r2, lsr ip
   38610:	orr	r6, r6, r4
   38614:	orr	r7, r7, r5
   38618:	bne	385e8 <__assert_fail@plt+0x271e4>
   3861c:	str	r6, [sp]
   38620:	mov	r3, r8
   38624:	movw	r1, #24816	; 0x60f0
   38628:	movw	r2, #15612	; 0x3cfc
   3862c:	movt	r1, #7
   38630:	movt	r2, #6
   38634:	mov	r0, #1
   38638:	bl	1132c <__printf_chk@plt>
   3863c:	mov	r0, sl
   38640:	add	sp, sp, #8
   38644:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   38648:	ands	r3, r1, #7
   3864c:	bne	386d8 <__assert_fail@plt+0x272d4>
   38650:	ldrb	r6, [r0]
   38654:	add	sl, r0, #1
   38658:	mov	r7, #0
   3865c:	tst	r6, #128	; 0x80
   38660:	and	r6, r6, #127	; 0x7f
   38664:	uxtb	r6, r6
   38668:	beq	386a0 <__assert_fail@plt+0x2729c>
   3866c:	ldrb	r2, [sl], #1
   38670:	add	r3, r3, #7
   38674:	sub	ip, r3, #32
   38678:	rsb	r0, r3, #32
   3867c:	and	r4, r2, #127	; 0x7f
   38680:	tst	r2, #128	; 0x80
   38684:	uxtb	r4, r4
   38688:	lsl	r9, r4, ip
   3868c:	lsl	r8, r4, r3
   38690:	orr	r9, r9, r4, lsr r0
   38694:	orr	r6, r6, r8
   38698:	orr	r7, r7, r9
   3869c:	bne	3866c <__assert_fail@plt+0x27268>
   386a0:	tst	r1, #8
   386a4:	mov	r3, r6
   386a8:	mov	r0, #1
   386ac:	movwne	r1, #24756	; 0x60b4
   386b0:	movwne	r2, #26020	; 0x65a4
   386b4:	movweq	r1, #24788	; 0x60d4
   386b8:	movweq	r2, #26020	; 0x65a4
   386bc:	movtne	r1, #7
   386c0:	movteq	r1, #7
   386c4:	movt	r2, #7
   386c8:	bl	1132c <__printf_chk@plt>
   386cc:	mov	r0, sl
   386d0:	add	sp, sp, #8
   386d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   386d8:	sub	r3, r3, #1
   386dc:	cmp	r3, #3
   386e0:	ldrls	pc, [pc, r3, lsl #2]
   386e4:	b	38728 <__assert_fail@plt+0x27324>
   386e8:	andeq	r8, r3, ip, lsl r7
   386ec:	andeq	r8, r3, r0, lsl r7
   386f0:	andeq	r8, r3, r4, lsl #14
   386f4:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   386f8:	add	sp, sp, #8
   386fc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   38700:	b	37b34 <__assert_fail@plt+0x26730>
   38704:	add	sp, sp, #8
   38708:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   3870c:	b	379bc <__assert_fail@plt+0x265b8>
   38710:	add	sp, sp, #8
   38714:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   38718:	b	37890 <__assert_fail@plt+0x2648c>
   3871c:	add	sp, sp, #8
   38720:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   38724:	b	37738 <__assert_fail@plt+0x26334>
   38728:	mov	r2, r1
   3872c:	mov	r0, #1
   38730:	movw	r1, #25012	; 0x61b4
   38734:	movt	r1, #7
   38738:	bl	1132c <__printf_chk@plt>
   3873c:	mov	r0, sl
   38740:	b	38640 <__assert_fail@plt+0x2723c>
   38744:	push	{r3, lr}
   38748:	lsl	lr, r1, #3
   3874c:	ldrb	r1, [r0], #1
   38750:	movw	ip, #24472	; 0x5f98
   38754:	movt	ip, #7
   38758:	add	lr, lr, r1, lsr #5
   3875c:	add	ip, ip, lr, lsl #2
   38760:	ldr	ip, [ip, #76]	; 0x4c
   38764:	blx	ip
   38768:	pop	{r3, pc}
   3876c:	ldr	r2, [r0]
   38770:	movw	r3, #24696	; 0x6078
   38774:	ldr	r0, [r1]
   38778:	movt	r3, #9
   3877c:	push	{r4, r5}
   38780:	lsl	r2, r2, #3
   38784:	ldr	r1, [r3]
   38788:	lsl	r0, r0, #3
   3878c:	ldrd	r2, [r2, r1]
   38790:	ldrd	r4, [r1, r0]
   38794:	cmp	r3, r5
   38798:	cmpeq	r2, r4
   3879c:	movls	r0, #0
   387a0:	movhi	r0, #1
   387a4:	cmp	r5, r3
   387a8:	cmpeq	r4, r2
   387ac:	subhi	r0, r0, #1
   387b0:	pop	{r4, r5}
   387b4:	bx	lr
   387b8:	ldr	r3, [r0, #32]
   387bc:	ldr	r0, [r1, #32]
   387c0:	rsb	r0, r0, r3
   387c4:	bx	lr
   387c8:	ldr	r3, [r0]
   387cc:	ldr	r2, [r1]
   387d0:	cmp	r2, r3
   387d4:	movls	r0, #0
   387d8:	movhi	r0, #1
   387dc:	cmp	r3, r2
   387e0:	rsbls	r0, r0, #0
   387e4:	rsbhi	r0, r0, #1
   387e8:	bx	lr
   387ec:	push	{r4, lr}
   387f0:	mov	r2, #5
   387f4:	mov	r4, r0
   387f8:	movw	r1, #28496	; 0x6f50
   387fc:	mov	r0, #0
   38800:	movt	r1, #7
   38804:	bl	11170 <dcgettext@plt>
   38808:	ldr	r2, [r4, #8]
   3880c:	mov	r1, r0
   38810:	mov	r0, #1
   38814:	bl	1132c <__printf_chk@plt>
   38818:	mov	r0, #1
   3881c:	pop	{r4, pc}
   38820:	push	{r3, r4, r5, r6, r7, lr}
   38824:	movw	r7, #24696	; 0x6078
   38828:	movt	r7, #9
   3882c:	ldr	r5, [r7, #4]
   38830:	cmp	r5, #0
   38834:	beq	38870 <__assert_fail@plt+0x2746c>
   38838:	ldr	r0, [r5, #12]
   3883c:	ldr	r6, [r5, #20]
   38840:	cmp	r0, #0
   38844:	beq	3885c <__assert_fail@plt+0x27458>
   38848:	ldr	r4, [r0, #8]
   3884c:	bl	1111c <free@plt>
   38850:	cmp	r4, #0
   38854:	mov	r0, r4
   38858:	bne	38848 <__assert_fail@plt+0x27444>
   3885c:	mov	r0, r5
   38860:	bl	1111c <free@plt>
   38864:	cmp	r6, #0
   38868:	movne	r5, r6
   3886c:	bne	38838 <__assert_fail@plt+0x27434>
   38870:	mov	r3, #0
   38874:	str	r3, [r7, #4]
   38878:	str	r3, [r7, #8]
   3887c:	pop	{r3, r4, r5, r6, r7, pc}
   38880:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   38884:	mov	r6, r0
   38888:	ldr	r9, [r0, #24]
   3888c:	ldr	r8, [r0, #12]
   38890:	cmp	r9, #0
   38894:	ldrd	r4, [r0, #16]
   38898:	beq	389b4 <__assert_fail@plt+0x275b0>
   3889c:	mov	r2, #5
   388a0:	movw	r1, #28592	; 0x6fb0
   388a4:	mov	r0, #0
   388a8:	movt	r1, #7
   388ac:	bl	11170 <dcgettext@plt>
   388b0:	ldr	r2, [r6, #8]
   388b4:	movw	sl, #16696	; 0x4138
   388b8:	movt	sl, #9
   388bc:	mov	r1, r0
   388c0:	mov	r0, #1
   388c4:	bl	1132c <__printf_chk@plt>
   388c8:	movw	r1, #1980	; 0x7bc
   388cc:	mov	r0, #1
   388d0:	movt	r1, #6
   388d4:	mov	r2, r4
   388d8:	bl	1132c <__printf_chk@plt>
   388dc:	cmp	r9, #16
   388e0:	movcc	r7, r9
   388e4:	movcs	r7, #16
   388e8:	mov	r6, #0
   388ec:	b	38918 <__assert_fail@plt+0x27514>
   388f0:	ldrb	r2, [r8, r6]
   388f4:	movw	r1, #1992	; 0x7c8
   388f8:	movt	r1, #6
   388fc:	bl	1132c <__printf_chk@plt>
   38900:	and	r3, r6, #3
   38904:	cmp	r3, #3
   38908:	add	r6, r6, #1
   3890c:	beq	38940 <__assert_fail@plt+0x2753c>
   38910:	cmp	r6, #16
   38914:	beq	38950 <__assert_fail@plt+0x2754c>
   38918:	cmp	r7, r6
   3891c:	movw	r1, #6840	; 0x1ab8
   38920:	mov	r0, #1
   38924:	movt	r1, #6
   38928:	bgt	388f0 <__assert_fail@plt+0x274ec>
   3892c:	bl	1132c <__printf_chk@plt>
   38930:	and	r3, r6, #3
   38934:	cmp	r3, #3
   38938:	add	r6, r6, #1
   3893c:	bne	38910 <__assert_fail@plt+0x2750c>
   38940:	mov	r0, #32
   38944:	bl	112fc <putchar@plt>
   38948:	cmp	r6, #16
   3894c:	bne	38918 <__assert_fail@plt+0x27514>
   38950:	mov	r6, #0
   38954:	ldrb	r3, [r8, r6]
   38958:	mov	r0, #46	; 0x2e
   3895c:	add	r6, r6, #1
   38960:	sub	r2, r3, #32
   38964:	cmp	r2, #95	; 0x5f
   38968:	movls	r0, r3
   3896c:	bl	112fc <putchar@plt>
   38970:	cmp	r7, r6
   38974:	bgt	38954 <__assert_fail@plt+0x27550>
   38978:	adds	r4, r4, r7
   3897c:	mov	r0, #10
   38980:	ldr	r1, [sl]
   38984:	adc	r5, r5, r7, asr #31
   38988:	bl	111ac <_IO_putc@plt>
   3898c:	subs	r9, r9, r7
   38990:	movw	r3, #16696	; 0x4138
   38994:	add	r8, r8, r7
   38998:	movt	r3, #9
   3899c:	bne	388c8 <__assert_fail@plt+0x274c4>
   389a0:	ldr	r1, [r3]
   389a4:	mov	r0, #10
   389a8:	bl	111ac <_IO_putc@plt>
   389ac:	mov	r0, #1
   389b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   389b4:	mov	r0, r9
   389b8:	mov	r2, #5
   389bc:	movw	r1, #28564	; 0x6f94
   389c0:	movt	r1, #7
   389c4:	bl	11170 <dcgettext@plt>
   389c8:	ldr	r2, [r6, #8]
   389cc:	mov	r1, r0
   389d0:	mov	r0, #1
   389d4:	bl	1132c <__printf_chk@plt>
   389d8:	mov	r0, r9
   389dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   389e0:	push	{r4, r5, r6, r7, r8, r9, lr}
   389e4:	sub	sp, sp, #60	; 0x3c
   389e8:	movw	r1, #24696	; 0x6078
   389ec:	movw	r6, #16680	; 0x4128
   389f0:	movt	r1, #9
   389f4:	movt	r6, #9
   389f8:	ldr	r8, [sp, #88]	; 0x58
   389fc:	add	r7, r1, #16
   38a00:	ldr	ip, [r1, #12]
   38a04:	mov	r4, r2
   38a08:	ldr	lr, [r6]
   38a0c:	cmp	r8, #0
   38a10:	add	r9, ip, #1
   38a14:	mov	r5, r3
   38a18:	and	r9, r9, #15
   38a1c:	add	r7, r7, ip, lsl #6
   38a20:	str	r9, [r1, #12]
   38a24:	str	lr, [sp, #52]	; 0x34
   38a28:	beq	38a80 <__assert_fail@plt+0x2767c>
   38a2c:	mov	r1, #64	; 0x40
   38a30:	strd	r4, [sp, #8]
   38a34:	movw	r2, #28624	; 0x6fd0
   38a38:	mov	r3, r1
   38a3c:	movt	r2, #7
   38a40:	mov	r0, r7
   38a44:	str	r2, [sp]
   38a48:	mov	r2, #1
   38a4c:	bl	113f8 <__snprintf_chk@plt>
   38a50:	cmp	r8, #8
   38a54:	movcc	r0, r8
   38a58:	movcs	r0, #8
   38a5c:	lsl	r0, r0, #1
   38a60:	rsb	r0, r0, #16
   38a64:	add	r0, r7, r0
   38a68:	ldr	r2, [sp, #52]	; 0x34
   38a6c:	ldr	r3, [r6]
   38a70:	cmp	r2, r3
   38a74:	bne	38ad0 <__assert_fail@plt+0x276cc>
   38a78:	add	sp, sp, #60	; 0x3c
   38a7c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   38a80:	add	r8, sp, #20
   38a84:	str	r0, [sp, #4]
   38a88:	mov	r1, #1
   38a8c:	movw	r2, #28644	; 0x6fe4
   38a90:	movw	r3, #28636	; 0x6fdc
   38a94:	movt	r2, #7
   38a98:	movt	r3, #7
   38a9c:	str	r2, [sp]
   38aa0:	mov	r0, r8
   38aa4:	mov	r2, #32
   38aa8:	bl	112cc <__sprintf_chk@plt>
   38aac:	mov	r1, #64	; 0x40
   38ab0:	str	r8, [sp]
   38ab4:	mov	r3, r1
   38ab8:	strd	r4, [sp, #8]
   38abc:	mov	r0, r7
   38ac0:	mov	r2, #1
   38ac4:	bl	113f8 <__snprintf_chk@plt>
   38ac8:	mov	r0, r7
   38acc:	b	38a68 <__assert_fail@plt+0x27664>
   38ad0:	bl	1117c <__stack_chk_fail@plt>
   38ad4:	push	{r4, r5, lr}
   38ad8:	sub	sp, sp, #12
   38adc:	mov	r4, r0
   38ae0:	mov	r3, r1
   38ae4:	str	r2, [sp]
   38ae8:	mov	r0, #0
   38aec:	mov	r2, r4
   38af0:	bl	389e0 <__assert_fail@plt+0x275dc>
   38af4:	movw	r1, #31936	; 0x7cc0
   38af8:	movt	r1, #7
   38afc:	mov	r2, r0
   38b00:	mov	r0, #1
   38b04:	add	sp, sp, #12
   38b08:	pop	{r4, r5, lr}
   38b0c:	b	1132c <__printf_chk@plt>
   38b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38b14:	mov	r2, #5
   38b18:	mov	r8, r0
   38b1c:	sub	sp, sp, #68	; 0x44
   38b20:	movw	r1, #28648	; 0x6fe8
   38b24:	mov	r0, #0
   38b28:	movt	r1, #7
   38b2c:	ldr	r9, [r8, #12]
   38b30:	bl	11170 <dcgettext@plt>
   38b34:	ldr	r2, [r8, #8]
   38b38:	mov	r1, r0
   38b3c:	mov	r0, #1
   38b40:	bl	1132c <__printf_chk@plt>
   38b44:	ldrd	r2, [r8, #24]
   38b48:	cmp	r3, #0
   38b4c:	cmpeq	r2, #23
   38b50:	bls	39150 <__assert_fail@plt+0x27d4c>
   38b54:	mov	r0, r9
   38b58:	mov	r1, #4
   38b5c:	bl	4bbe8 <warn@@Base+0x1fc>
   38b60:	mov	r2, #5
   38b64:	movw	r1, #28720	; 0x7030
   38b68:	movt	r1, #7
   38b6c:	mov	r4, r0
   38b70:	mov	r0, #0
   38b74:	bl	11170 <dcgettext@plt>
   38b78:	mov	r2, r4
   38b7c:	mov	r1, r0
   38b80:	mov	r0, #1
   38b84:	bl	1132c <__printf_chk@plt>
   38b88:	sub	r3, r4, #3
   38b8c:	cmp	r3, #5
   38b90:	bhi	39160 <__assert_fail@plt+0x27d5c>
   38b94:	cmp	r4, #3
   38b98:	beq	39188 <__assert_fail@plt+0x27d84>
   38b9c:	cmp	r4, #4
   38ba0:	beq	391a0 <__assert_fail@plt+0x27d9c>
   38ba4:	cmp	r4, #5
   38ba8:	beq	391b8 <__assert_fail@plt+0x27db4>
   38bac:	cmp	r4, #6
   38bb0:	beq	391d0 <__assert_fail@plt+0x27dcc>
   38bb4:	add	r0, r9, #4
   38bb8:	mov	r1, #4
   38bbc:	bl	4bbe8 <warn@@Base+0x1fc>
   38bc0:	mvn	r4, #0
   38bc4:	mov	r5, #0
   38bc8:	mov	sl, r0
   38bcc:	mov	fp, r1
   38bd0:	add	r0, r9, #8
   38bd4:	mov	r1, #4
   38bd8:	bl	4bbe8 <warn@@Base+0x1fc>
   38bdc:	and	r6, sl, r4
   38be0:	and	r7, fp, r5
   38be4:	strd	r0, [sp, #8]
   38be8:	add	r0, r9, #12
   38bec:	mov	r1, #4
   38bf0:	bl	4bbe8 <warn@@Base+0x1fc>
   38bf4:	strd	r0, [sp, #16]
   38bf8:	add	r0, r9, #16
   38bfc:	mov	r1, #4
   38c00:	bl	4bbe8 <warn@@Base+0x1fc>
   38c04:	strd	r0, [sp, #24]
   38c08:	add	r0, r9, #20
   38c0c:	mov	r1, #4
   38c10:	bl	4bbe8 <warn@@Base+0x1fc>
   38c14:	ldrd	r2, [r8, #24]
   38c18:	cmp	r7, r3
   38c1c:	cmpeq	r6, r2
   38c20:	strd	r0, [sp, #32]
   38c24:	bhi	39128 <__assert_fail@plt+0x27d24>
   38c28:	ldrd	r0, [sp, #8]
   38c2c:	and	r0, r0, r4
   38c30:	and	r1, r1, r5
   38c34:	cmp	r3, r1
   38c38:	cmpeq	r2, r0
   38c3c:	bcc	39128 <__assert_fail@plt+0x27d24>
   38c40:	ldrd	r0, [sp, #16]
   38c44:	and	r0, r0, r4
   38c48:	and	r1, r1, r5
   38c4c:	cmp	r3, r1
   38c50:	cmpeq	r2, r0
   38c54:	bcc	39128 <__assert_fail@plt+0x27d24>
   38c58:	ldrd	r0, [sp, #24]
   38c5c:	and	r0, r0, r4
   38c60:	and	r1, r1, r5
   38c64:	cmp	r3, r1
   38c68:	cmpeq	r2, r0
   38c6c:	bcc	39128 <__assert_fail@plt+0x27d24>
   38c70:	ldrd	r0, [sp, #32]
   38c74:	and	r4, r4, r0
   38c78:	and	r5, r5, r1
   38c7c:	cmp	r3, r5
   38c80:	cmpeq	r2, r4
   38c84:	bcc	39128 <__assert_fail@plt+0x27d24>
   38c88:	ldr	r1, [sp, #8]
   38c8c:	cmp	sl, r1
   38c90:	bhi	391ec <__assert_fail@plt+0x27de8>
   38c94:	ldr	r0, [sp, #8]
   38c98:	ldr	r1, [sp, #16]
   38c9c:	cmp	r0, r1
   38ca0:	bhi	393c4 <__assert_fail@plt+0x27fc0>
   38ca4:	ldr	r0, [sp, #16]
   38ca8:	ldr	r1, [sp, #24]
   38cac:	cmp	r0, r1
   38cb0:	bhi	3940c <__assert_fail@plt+0x28008>
   38cb4:	ldr	r1, [sp, #32]
   38cb8:	ldr	r0, [sp, #24]
   38cbc:	str	r1, [sp, #56]	; 0x38
   38cc0:	cmp	r0, r1
   38cc4:	ldr	r1, [sp, #24]
   38cc8:	ldr	r0, [sp, #16]
   38ccc:	rsb	r1, r0, r1
   38cd0:	str	r1, [sp, #44]	; 0x2c
   38cd4:	bhi	39434 <__assert_fail@plt+0x28030>
   38cd8:	ldr	r1, [sp, #44]	; 0x2c
   38cdc:	ldr	r0, [sp, #16]
   38ce0:	rsb	r3, r1, r1, lsl #3
   38ce4:	ldr	r1, [r8, #12]
   38ce8:	add	r0, r9, r0
   38cec:	str	r0, [sp, #48]	; 0x30
   38cf0:	add	r3, r0, r3, lsl #1
   38cf4:	add	r2, r1, r2
   38cf8:	cmp	r3, r2
   38cfc:	bhi	393ec <__assert_fail@plt+0x27fe8>
   38d00:	ldr	r1, [sp, #8]
   38d04:	mov	r2, #5
   38d08:	mov	r0, #0
   38d0c:	rsb	r3, sl, r1
   38d10:	movw	r1, #29288	; 0x7268
   38d14:	movt	r1, #7
   38d18:	lsr	r3, r3, #3
   38d1c:	str	r3, [sp, #52]	; 0x34
   38d20:	bl	11170 <dcgettext@plt>
   38d24:	mov	r1, r0
   38d28:	mov	r0, #1
   38d2c:	bl	1132c <__printf_chk@plt>
   38d30:	ldr	r2, [sp, #52]	; 0x34
   38d34:	cmp	r2, #0
   38d38:	beq	38dac <__assert_fail@plt+0x279a8>
   38d3c:	ldr	r7, [sp, #52]	; 0x34
   38d40:	add	sl, r9, sl
   38d44:	mov	r4, #0
   38d48:	mov	r0, sl
   38d4c:	mov	r1, #8
   38d50:	bl	4bbe8 <warn@@Base+0x1fc>
   38d54:	mov	r1, #8
   38d58:	mov	r5, r0
   38d5c:	add	r0, sl, r1
   38d60:	bl	4bbe8 <warn@@Base+0x1fc>
   38d64:	mov	r2, #5
   38d68:	movw	r1, #29312	; 0x7280
   38d6c:	movt	r1, #7
   38d70:	add	sl, sl, #16
   38d74:	mov	r6, r0
   38d78:	mov	r0, #0
   38d7c:	bl	11170 <dcgettext@plt>
   38d80:	add	r6, r5, r6
   38d84:	mov	r3, r5
   38d88:	sub	r6, r6, #1
   38d8c:	str	r6, [sp]
   38d90:	mov	r1, r0
   38d94:	mov	r0, #1
   38d98:	lsr	r2, r4, r0
   38d9c:	add	r4, r4, #2
   38da0:	bl	1132c <__printf_chk@plt>
   38da4:	cmp	r7, r4
   38da8:	bhi	38d48 <__assert_fail@plt+0x27944>
   38dac:	ldr	r3, [sp, #16]
   38db0:	mov	r2, #5
   38db4:	ldr	r0, [sp, #8]
   38db8:	movw	r1, #29300	; 0x7274
   38dbc:	movt	r1, #7
   38dc0:	rsb	r7, r0, r3
   38dc4:	mov	r0, #0
   38dc8:	bl	11170 <dcgettext@plt>
   38dcc:	lsr	r7, r7, #3
   38dd0:	mov	r1, r0
   38dd4:	mov	r0, #1
   38dd8:	bl	1132c <__printf_chk@plt>
   38ddc:	cmp	r7, #0
   38de0:	beq	38e98 <__assert_fail@plt+0x27a94>
   38de4:	ldr	r2, [sp, #8]
   38de8:	movw	ip, #43691	; 0xaaab
   38dec:	movt	ip, #43690	; 0xaaaa
   38df0:	mov	sl, #0
   38df4:	add	r6, r9, r2
   38df8:	str	r9, [sp, #8]
   38dfc:	mov	fp, ip
   38e00:	str	r8, [sp, #16]
   38e04:	mov	r0, r6
   38e08:	mov	r1, #8
   38e0c:	bl	4bbe8 <warn@@Base+0x1fc>
   38e10:	mov	r1, #8
   38e14:	mov	r8, r0
   38e18:	add	r0, r6, r1
   38e1c:	bl	4bbe8 <warn@@Base+0x1fc>
   38e20:	mov	r1, #8
   38e24:	mov	r9, r0
   38e28:	add	r0, r6, #16
   38e2c:	bl	4bbe8 <warn@@Base+0x1fc>
   38e30:	mov	r2, #5
   38e34:	add	r6, r6, #24
   38e38:	mov	r4, r0
   38e3c:	mov	r5, r1
   38e40:	mov	r0, #0
   38e44:	movw	r1, #29356	; 0x72ac
   38e48:	movt	r1, #7
   38e4c:	bl	11170 <dcgettext@plt>
   38e50:	umull	r3, r2, fp, sl
   38e54:	str	r9, [sp]
   38e58:	mov	r3, r8
   38e5c:	add	sl, sl, #3
   38e60:	mov	r1, r0
   38e64:	mov	r0, #1
   38e68:	lsr	r2, r2, r0
   38e6c:	bl	1132c <__printf_chk@plt>
   38e70:	mov	r0, r4
   38e74:	mov	r1, r5
   38e78:	mov	r2, #8
   38e7c:	bl	38ad4 <__assert_fail@plt+0x276d0>
   38e80:	mov	r0, #10
   38e84:	bl	112fc <putchar@plt>
   38e88:	cmp	r7, sl
   38e8c:	bhi	38e04 <__assert_fail@plt+0x27a00>
   38e90:	ldr	r9, [sp, #8]
   38e94:	ldr	r8, [sp, #16]
   38e98:	mov	r2, #5
   38e9c:	movw	r1, #29336	; 0x7298
   38ea0:	mov	r0, #0
   38ea4:	movt	r1, #7
   38ea8:	bl	11170 <dcgettext@plt>
   38eac:	mov	r1, r0
   38eb0:	mov	r0, #1
   38eb4:	bl	1132c <__printf_chk@plt>
   38eb8:	ldr	r1, [sp, #44]	; 0x2c
   38ebc:	cmp	r1, #0
   38ec0:	beq	38f98 <__assert_fail@plt+0x27b94>
   38ec4:	ldr	r0, [sp, #48]	; 0x30
   38ec8:	mov	sl, #0
   38ecc:	ldr	r3, [sp, #44]	; 0x2c
   38ed0:	add	ip, r0, #8
   38ed4:	str	r9, [sp, #16]
   38ed8:	sub	r3, r3, #20
   38edc:	str	r3, [sp, #8]
   38ee0:	add	r3, r0, #16
   38ee4:	str	r8, [sp, #60]	; 0x3c
   38ee8:	mov	r9, ip
   38eec:	mov	fp, r3
   38ef0:	b	38f00 <__assert_fail@plt+0x27afc>
   38ef4:	ldr	r3, [sp, #8]
   38ef8:	cmp	sl, r3
   38efc:	bhi	38f90 <__assert_fail@plt+0x27b8c>
   38f00:	ldr	r1, [sp, #48]	; 0x30
   38f04:	add	r0, r1, sl
   38f08:	mov	r1, #8
   38f0c:	bl	4bbe8 <warn@@Base+0x1fc>
   38f10:	mov	r6, r0
   38f14:	mov	r7, r1
   38f18:	add	r0, r9, sl
   38f1c:	mov	r1, #8
   38f20:	bl	4bbe8 <warn@@Base+0x1fc>
   38f24:	mov	r4, r0
   38f28:	mov	r5, r1
   38f2c:	add	r0, fp, sl
   38f30:	mov	r1, #4
   38f34:	bl	4bbe8 <warn@@Base+0x1fc>
   38f38:	mov	r1, r7
   38f3c:	mov	r2, #8
   38f40:	add	sl, sl, #20
   38f44:	mov	r8, r0
   38f48:	mov	r0, r6
   38f4c:	bl	38ad4 <__assert_fail@plt+0x276d0>
   38f50:	mov	r0, r4
   38f54:	mov	r1, r5
   38f58:	mov	r2, #8
   38f5c:	bl	38ad4 <__assert_fail@plt+0x276d0>
   38f60:	mov	r2, #5
   38f64:	movw	r1, #22132	; 0x5674
   38f68:	mov	r0, #0
   38f6c:	movt	r1, #6
   38f70:	bl	11170 <dcgettext@plt>
   38f74:	mov	r2, r8
   38f78:	mov	r1, r0
   38f7c:	mov	r0, #1
   38f80:	bl	1132c <__printf_chk@plt>
   38f84:	ldr	r2, [sp, #44]	; 0x2c
   38f88:	cmp	r2, sl
   38f8c:	bhi	38ef4 <__assert_fail@plt+0x27af0>
   38f90:	ldr	r9, [sp, #16]
   38f94:	ldr	r8, [sp, #60]	; 0x3c
   38f98:	ldr	r0, [sp, #32]
   38f9c:	mov	r2, #5
   38fa0:	ldr	r1, [sp, #24]
   38fa4:	rsb	r3, r1, r0
   38fa8:	movw	r1, #29376	; 0x72c0
   38fac:	mov	r0, #0
   38fb0:	movt	r1, #7
   38fb4:	lsr	sl, r3, #3
   38fb8:	bl	11170 <dcgettext@plt>
   38fbc:	mov	r1, r0
   38fc0:	mov	r0, #1
   38fc4:	bl	1132c <__printf_chk@plt>
   38fc8:	cmp	sl, #0
   38fcc:	beq	39354 <__assert_fail@plt+0x27f50>
   38fd0:	ldr	r1, [sp, #52]	; 0x34
   38fd4:	movw	r3, #26168	; 0x6638
   38fd8:	ldr	r0, [sp, #32]
   38fdc:	movt	r3, #7
   38fe0:	ldr	r2, [sp, #24]
   38fe4:	mov	r4, #0
   38fe8:	add	r5, r9, r0
   38fec:	lsr	r1, r1, #1
   38ff0:	add	r9, r9, r2
   38ff4:	str	r1, [sp, #44]	; 0x2c
   38ff8:	str	r3, [sp, #8]
   38ffc:	b	390bc <__assert_fail@plt+0x27cb8>
   39000:	mov	r2, #5
   39004:	movw	r1, #29392	; 0x72d0
   39008:	mov	r0, #0
   3900c:	movt	r1, #7
   39010:	bl	11170 <dcgettext@plt>
   39014:	mov	r2, r4
   39018:	mov	r3, r6
   3901c:	mov	r1, r0
   39020:	mov	r0, #1
   39024:	bl	1132c <__printf_chk@plt>
   39028:	mov	r2, #5
   3902c:	movw	r1, #29420	; 0x72ec
   39030:	mov	r0, #0
   39034:	movt	r1, #7
   39038:	bl	11170 <dcgettext@plt>
   3903c:	mov	r1, r6
   39040:	mov	r2, r4
   39044:	bl	4b9ec <warn@@Base>
   39048:	adds	r0, r5, r7
   3904c:	bcs	39068 <__assert_fail@plt+0x27c64>
   39050:	ldr	r3, [r8, #24]
   39054:	ldr	r2, [r8, #12]
   39058:	sub	r3, r3, #3
   3905c:	add	r3, r2, r3
   39060:	cmp	r0, r3
   39064:	bcc	39214 <__assert_fail@plt+0x27e10>
   39068:	mov	r2, #5
   3906c:	movw	r1, #29492	; 0x7334
   39070:	mov	r0, #0
   39074:	movt	r1, #7
   39078:	bl	11170 <dcgettext@plt>
   3907c:	mov	r2, r7
   39080:	mov	r1, r0
   39084:	mov	r0, #1
   39088:	bl	1132c <__printf_chk@plt>
   3908c:	mov	r2, #5
   39090:	movw	r1, #29524	; 0x7354
   39094:	mov	r0, #0
   39098:	movt	r1, #7
   3909c:	bl	11170 <dcgettext@plt>
   390a0:	mov	r1, r7
   390a4:	mov	r2, r4
   390a8:	bl	4b9ec <warn@@Base>
   390ac:	add	r4, r4, #1
   390b0:	add	r9, r9, #8
   390b4:	cmp	r4, sl
   390b8:	beq	39354 <__assert_fail@plt+0x27f50>
   390bc:	mov	r0, r9
   390c0:	mov	r1, #4
   390c4:	bl	4bbe8 <warn@@Base+0x1fc>
   390c8:	mov	r1, #4
   390cc:	mov	r6, r0
   390d0:	add	r0, r9, r1
   390d4:	bl	4bbe8 <warn@@Base+0x1fc>
   390d8:	mov	r7, r0
   390dc:	orrs	r0, r7, r6
   390e0:	beq	390ac <__assert_fail@plt+0x27ca8>
   390e4:	adds	r2, r5, r6
   390e8:	bcs	39000 <__assert_fail@plt+0x27bfc>
   390ec:	ldr	r3, [r8, #24]
   390f0:	ldr	r1, [r8, #12]
   390f4:	add	r1, r1, r3
   390f8:	cmp	r2, r1
   390fc:	bcs	39000 <__assert_fail@plt+0x27bfc>
   39100:	ldr	r1, [sp, #56]	; 0x38
   39104:	mov	r0, #1
   39108:	str	r2, [sp]
   3910c:	mov	r2, r4
   39110:	rsb	r3, r1, r3
   39114:	movw	r1, #29480	; 0x7328
   39118:	rsb	r3, r6, r3
   3911c:	movt	r1, #7
   39120:	bl	1132c <__printf_chk@plt>
   39124:	b	39048 <__assert_fail@plt+0x27c44>
   39128:	movw	r1, #28968	; 0x7128
   3912c:	movt	r1, #7
   39130:	mov	r0, #0
   39134:	mov	r2, #5
   39138:	bl	11170 <dcgettext@plt>
   3913c:	ldr	r1, [r8, #8]
   39140:	bl	4b9ec <warn@@Base>
   39144:	mov	r0, #0
   39148:	add	sp, sp, #68	; 0x44
   3914c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39150:	movw	r1, #28680	; 0x7008
   39154:	mov	r0, #0
   39158:	movt	r1, #7
   3915c:	b	39134 <__assert_fail@plt+0x27d30>
   39160:	mov	r2, #5
   39164:	movw	r1, #28736	; 0x7040
   39168:	mov	r0, #0
   3916c:	movt	r1, #7
   39170:	bl	11170 <dcgettext@plt>
   39174:	mov	r1, r4
   39178:	bl	4b9ec <warn@@Base>
   3917c:	mov	r0, #0
   39180:	add	sp, sp, #68	; 0x44
   39184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39188:	movw	r1, #28764	; 0x705c
   3918c:	mov	r2, #5
   39190:	movt	r1, #7
   39194:	mov	r0, #0
   39198:	bl	11170 <dcgettext@plt>
   3919c:	bl	4b9ec <warn@@Base>
   391a0:	movw	r1, #28816	; 0x7090
   391a4:	mov	r2, #5
   391a8:	movt	r1, #7
   391ac:	mov	r0, #0
   391b0:	bl	11170 <dcgettext@plt>
   391b4:	bl	4b9ec <warn@@Base>
   391b8:	movw	r1, #28872	; 0x70c8
   391bc:	mov	r2, #5
   391c0:	movt	r1, #7
   391c4:	mov	r0, #0
   391c8:	bl	11170 <dcgettext@plt>
   391cc:	bl	4b9ec <warn@@Base>
   391d0:	mov	r2, #5
   391d4:	movw	r1, #28920	; 0x70f8
   391d8:	mov	r0, #0
   391dc:	movt	r1, #7
   391e0:	bl	11170 <dcgettext@plt>
   391e4:	bl	4b9ec <warn@@Base>
   391e8:	b	38bb4 <__assert_fail@plt+0x277b0>
   391ec:	mov	r2, #5
   391f0:	movw	r1, #29004	; 0x714c
   391f4:	mov	r0, #0
   391f8:	movt	r1, #7
   391fc:	bl	11170 <dcgettext@plt>
   39200:	ldr	r1, [sp, #8]
   39204:	mov	r2, sl
   39208:	bl	4b9ec <warn@@Base>
   3920c:	mov	r0, #0
   39210:	b	39148 <__assert_fail@plt+0x27d44>
   39214:	mov	r1, #4
   39218:	bl	4bbe8 <warn@@Base+0x1fc>
   3921c:	lsl	r3, r0, #2
   39220:	mov	r6, r0
   39224:	cmp	r0, r3
   39228:	bhi	3938c <__assert_fail@plt+0x27f88>
   3922c:	add	r7, r7, #4
   39230:	ldr	r1, [r8, #12]
   39234:	ldr	r2, [r8, #24]
   39238:	add	r3, r7, r3
   3923c:	add	r3, r5, r3
   39240:	add	r2, r1, r2
   39244:	cmp	r3, r2
   39248:	bcs	3938c <__assert_fail@plt+0x27f88>
   3924c:	cmp	r5, r3
   39250:	bhi	3938c <__assert_fail@plt+0x27f88>
   39254:	cmp	r6, #1
   39258:	bls	3945c <__assert_fail@plt+0x28058>
   3925c:	mov	r0, #10
   39260:	bl	112fc <putchar@plt>
   39264:	str	r4, [sp, #32]
   39268:	mov	ip, #0
   3926c:	ldr	r4, [sp, #44]	; 0x2c
   39270:	add	r7, r5, r7
   39274:	str	sl, [sp, #16]
   39278:	mov	sl, ip
   3927c:	str	r5, [sp, #24]
   39280:	mov	r0, r7
   39284:	mov	r1, #4
   39288:	bl	4bbe8 <warn@@Base+0x1fc>
   3928c:	movw	r1, #29688	; 0x73f8
   39290:	movt	r1, #7
   39294:	mov	fp, r0
   39298:	bic	r2, fp, #-16777216	; 0xff000000
   3929c:	cmp	r2, r4
   392a0:	lsr	r5, fp, #31
   392a4:	mov	r0, #1
   392a8:	rsb	r3, r4, r2
   392ac:	ubfx	fp, fp, #28, #3
   392b0:	bcc	3935c <__assert_fail@plt+0x27f58>
   392b4:	cmp	r6, r0
   392b8:	movw	r1, #29680	; 0x73f0
   392bc:	movt	r1, #7
   392c0:	moveq	r2, #32
   392c4:	movne	r2, #9
   392c8:	bl	1132c <__printf_chk@plt>
   392cc:	mov	r0, #0
   392d0:	cmp	r5, r0
   392d4:	movw	r1, #29696	; 0x7400
   392d8:	movt	r1, #7
   392dc:	moveq	r0, r5
   392e0:	movweq	r1, #29704	; 0x7408
   392e4:	mov	r2, #5
   392e8:	movteq	r1, #7
   392ec:	moveq	r2, #5
   392f0:	add	sl, sl, #1
   392f4:	bl	11170 <dcgettext@plt>
   392f8:	ldr	r3, [sp, #8]
   392fc:	mov	r2, #5
   39300:	add	r7, r7, #4
   39304:	ldr	r1, [r3, fp, lsl #2]
   39308:	mov	r5, r0
   3930c:	mov	r0, #0
   39310:	bl	11170 <dcgettext@plt>
   39314:	mov	r2, r5
   39318:	movw	r1, #29712	; 0x7410
   3931c:	movt	r1, #7
   39320:	mov	r3, r0
   39324:	mov	r0, #1
   39328:	bl	1132c <__printf_chk@plt>
   3932c:	cmp	r6, #1
   39330:	mov	r0, #10
   39334:	beq	39374 <__assert_fail@plt+0x27f70>
   39338:	bl	112fc <putchar@plt>
   3933c:	cmp	r6, sl
   39340:	bhi	39280 <__assert_fail@plt+0x27e7c>
   39344:	ldr	sl, [sp, #16]
   39348:	ldr	r5, [sp, #24]
   3934c:	ldr	r4, [sp, #32]
   39350:	b	390ac <__assert_fail@plt+0x27ca8>
   39354:	mov	r0, #1
   39358:	b	39148 <__assert_fail@plt+0x27d44>
   3935c:	cmp	r6, #1
   39360:	mov	r3, r2
   39364:	moveq	r2, #32
   39368:	movne	r2, #9
   3936c:	bl	1132c <__printf_chk@plt>
   39370:	b	392cc <__assert_fail@plt+0x27ec8>
   39374:	ldr	sl, [sp, #16]
   39378:	ldr	r5, [sp, #24]
   3937c:	ldr	r4, [sp, #32]
   39380:	mov	r0, #10
   39384:	bl	112fc <putchar@plt>
   39388:	b	390ac <__assert_fail@plt+0x27ca8>
   3938c:	mov	r2, r6
   39390:	movw	r1, #29592	; 0x7398
   39394:	mov	r0, #1
   39398:	movt	r1, #7
   3939c:	bl	1132c <__printf_chk@plt>
   393a0:	mov	r2, #5
   393a4:	movw	r1, #29624	; 0x73b8
   393a8:	mov	r0, #0
   393ac:	movt	r1, #7
   393b0:	bl	11170 <dcgettext@plt>
   393b4:	mov	r1, r6
   393b8:	mov	r2, r4
   393bc:	bl	4b9ec <warn@@Base>
   393c0:	b	390ac <__assert_fail@plt+0x27ca8>
   393c4:	mov	r2, #5
   393c8:	movw	r1, #29048	; 0x7178
   393cc:	mov	r0, #0
   393d0:	movt	r1, #7
   393d4:	bl	11170 <dcgettext@plt>
   393d8:	ldr	r1, [sp, #16]
   393dc:	ldr	r2, [sp, #8]
   393e0:	bl	4b9ec <warn@@Base>
   393e4:	mov	r0, #0
   393e8:	b	39148 <__assert_fail@plt+0x27d44>
   393ec:	mov	r2, #5
   393f0:	movw	r1, #29240	; 0x7238
   393f4:	mov	r0, #0
   393f8:	movt	r1, #7
   393fc:	bl	11170 <dcgettext@plt>
   39400:	bl	4b9ec <warn@@Base>
   39404:	mov	r0, #0
   39408:	b	39148 <__assert_fail@plt+0x27d44>
   3940c:	mov	r2, #5
   39410:	movw	r1, #29104	; 0x71b0
   39414:	mov	r0, #0
   39418:	movt	r1, #7
   3941c:	bl	11170 <dcgettext@plt>
   39420:	ldr	r1, [sp, #24]
   39424:	ldr	r2, [sp, #16]
   39428:	bl	4b9ec <warn@@Base>
   3942c:	mov	r0, #0
   39430:	b	39148 <__assert_fail@plt+0x27d44>
   39434:	mov	r2, #5
   39438:	movw	r1, #29172	; 0x71f4
   3943c:	mov	r0, #0
   39440:	movt	r1, #7
   39444:	bl	11170 <dcgettext@plt>
   39448:	ldr	r1, [sp, #32]
   3944c:	ldr	r2, [sp, #24]
   39450:	bl	4b9ec <warn@@Base>
   39454:	mov	r0, #0
   39458:	b	39148 <__assert_fail@plt+0x27d44>
   3945c:	cmp	r6, #0
   39460:	bne	39264 <__assert_fail@plt+0x27e60>
   39464:	b	39380 <__assert_fail@plt+0x27f7c>
   39468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3946c:	add	r8, r1, #4
   39470:	cmp	r8, r2
   39474:	sub	sp, sp, #12
   39478:	mov	r9, r1
   3947c:	mov	r6, r2
   39480:	mov	r5, r0
   39484:	mov	r7, r3
   39488:	bcc	3959c <__assert_fail@plt+0x28198>
   3948c:	cmp	r1, r2
   39490:	bcc	396a8 <__assert_fail@plt+0x282a4>
   39494:	mov	fp, #4
   39498:	mov	r2, #0
   3949c:	mov	r3, #0
   394a0:	mov	sl, fp
   394a4:	strd	r2, [r7]
   394a8:	mov	r2, #4
   394ac:	mov	r3, #0
   394b0:	ldrd	r0, [r5, #24]
   394b4:	cmp	r3, r1
   394b8:	cmpeq	r2, r0
   394bc:	bhi	39620 <__assert_fail@plt+0x2821c>
   394c0:	add	r5, r8, #2
   394c4:	cmp	r6, r5
   394c8:	bls	39660 <__assert_fail@plt+0x2825c>
   394cc:	mov	r1, #2
   394d0:	movw	r4, #26492	; 0x677c
   394d4:	movt	r4, #9
   394d8:	mov	r0, r8
   394dc:	ldr	r3, [r4]
   394e0:	blx	r3
   394e4:	uxth	r0, r0
   394e8:	strh	r0, [r7, #8]
   394ec:	sub	r0, r0, #2
   394f0:	cmp	r0, #2
   394f4:	bhi	39680 <__assert_fail@plt+0x2827c>
   394f8:	add	r8, r5, sl
   394fc:	cmp	r6, r8
   39500:	bhi	39510 <__assert_fail@plt+0x2810c>
   39504:	cmp	r6, r5
   39508:	bls	3951c <__assert_fail@plt+0x28118>
   3950c:	rsb	sl, r5, r6
   39510:	sub	r3, sl, #1
   39514:	cmp	r3, #7
   39518:	bls	39870 <__assert_fail@plt+0x2846c>
   3951c:	mov	r2, #0
   39520:	mov	r3, #0
   39524:	strd	r2, [r7, #16]
   39528:	add	r5, r8, #1
   3952c:	cmp	r6, r5
   39530:	bhi	397a4 <__assert_fail@plt+0x283a0>
   39534:	cmp	r6, r8
   39538:	bls	3954c <__assert_fail@plt+0x28148>
   3953c:	rsb	r1, r8, r6
   39540:	sub	r3, r1, #1
   39544:	cmp	r3, #7
   39548:	bls	397a8 <__assert_fail@plt+0x283a4>
   3954c:	mov	r3, #0
   39550:	strb	r3, [r7, #24]
   39554:	ldrh	r3, [r7, #8]
   39558:	cmp	r3, #3
   3955c:	bls	396bc <__assert_fail@plt+0x282b8>
   39560:	add	r8, r8, #2
   39564:	cmp	r6, r8
   39568:	bhi	39888 <__assert_fail@plt+0x28484>
   3956c:	cmp	r6, r5
   39570:	bhi	39900 <__assert_fail@plt+0x284fc>
   39574:	mov	r3, #0
   39578:	strb	r3, [r7, #25]
   3957c:	mov	r2, #5
   39580:	movw	r1, #29880	; 0x74b8
   39584:	mov	r0, #0
   39588:	movt	r1, #7
   3958c:	bl	11170 <dcgettext@plt>
   39590:	mov	r5, #0
   39594:	bl	4b9ec <warn@@Base>
   39598:	b	3969c <__assert_fail@plt+0x28298>
   3959c:	mov	r1, #4
   395a0:	movw	r4, #26492	; 0x677c
   395a4:	movt	r4, #9
   395a8:	mov	r0, r9
   395ac:	ldr	r3, [r4]
   395b0:	blx	r3
   395b4:	mvn	r2, #0
   395b8:	mov	r3, #0
   395bc:	cmp	r1, r3
   395c0:	cmpeq	r0, r2
   395c4:	strd	r0, [r7]
   395c8:	bne	39914 <__assert_fail@plt+0x28510>
   395cc:	add	r3, r9, #12
   395d0:	cmp	r6, r3
   395d4:	bhi	398d4 <__assert_fail@plt+0x284d0>
   395d8:	cmp	r8, r6
   395dc:	bcs	395f0 <__assert_fail@plt+0x281ec>
   395e0:	rsb	r1, r8, r6
   395e4:	sub	r2, r1, #1
   395e8:	cmp	r2, #7
   395ec:	bls	398d8 <__assert_fail@plt+0x284d4>
   395f0:	mov	r0, #0
   395f4:	mov	r1, #0
   395f8:	strd	r0, [r7]
   395fc:	mov	r8, r3
   39600:	ldrd	r0, [r5, #24]
   39604:	mov	r2, #12
   39608:	mov	r3, #0
   3960c:	mov	fp, #12
   39610:	cmp	r3, r1
   39614:	cmpeq	r2, r0
   39618:	mov	sl, #8
   3961c:	bls	394c0 <__assert_fail@plt+0x280bc>
   39620:	ldr	r2, [r5, #12]
   39624:	mov	r4, #0
   39628:	mov	r0, r5
   3962c:	mov	r3, r4
   39630:	rsb	r2, r2, r8
   39634:	rsb	r2, sl, r2
   39638:	bl	337c0 <__assert_fail@plt+0x223bc>
   3963c:	subs	r5, r0, #0
   39640:	beq	39928 <__assert_fail@plt+0x28524>
   39644:	add	r5, r8, #2
   39648:	rsb	r3, r9, r6
   3964c:	cmp	r6, r5
   39650:	rsb	r3, fp, r3
   39654:	str	r4, [r7, #4]
   39658:	str	r3, [r7]
   3965c:	bhi	394cc <__assert_fail@plt+0x280c8>
   39660:	cmp	r8, r6
   39664:	bcs	39678 <__assert_fail@plt+0x28274>
   39668:	rsb	r1, r8, r6
   3966c:	sub	r3, r1, #1
   39670:	cmp	r3, #7
   39674:	bls	394d0 <__assert_fail@plt+0x280cc>
   39678:	mov	r3, #0
   3967c:	strh	r3, [r7, #8]
   39680:	movw	r1, #29812	; 0x7474
   39684:	mov	r0, #0
   39688:	movt	r1, #7
   3968c:	mov	r2, #5
   39690:	bl	11170 <dcgettext@plt>
   39694:	mov	r5, #0
   39698:	bl	4b9ec <warn@@Base>
   3969c:	mov	r0, r5
   396a0:	add	sp, sp, #12
   396a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   396a8:	rsb	r1, r1, r2
   396ac:	sub	r3, r1, #1
   396b0:	cmp	r3, #7
   396b4:	bhi	39494 <__assert_fail@plt+0x28090>
   396b8:	b	395a0 <__assert_fail@plt+0x2819c>
   396bc:	mov	r3, #1
   396c0:	strb	r3, [r7, #25]
   396c4:	add	r8, r5, #1
   396c8:	cmp	r6, r8
   396cc:	bls	397bc <__assert_fail@plt+0x283b8>
   396d0:	ldr	r3, [r4]
   396d4:	mov	r0, r5
   396d8:	mov	r1, #1
   396dc:	add	sl, r5, #2
   396e0:	blx	r3
   396e4:	cmp	r6, sl
   396e8:	strb	r0, [r7, #26]
   396ec:	bls	398b0 <__assert_fail@plt+0x284ac>
   396f0:	mov	r0, r8
   396f4:	mov	r1, #1
   396f8:	bl	4bee4 <warn@@Base+0x4f8>
   396fc:	add	r8, r5, #3
   39700:	cmp	r6, r8
   39704:	str	r0, [r7, #28]
   39708:	bls	39838 <__assert_fail@plt+0x28434>
   3970c:	mov	r0, sl
   39710:	ldr	r3, [r4]
   39714:	mov	r1, #1
   39718:	add	r5, r5, #4
   3971c:	blx	r3
   39720:	cmp	r6, r5
   39724:	strb	r0, [r7, #32]
   39728:	bls	3981c <__assert_fail@plt+0x28418>
   3972c:	mov	r1, #1
   39730:	ldr	r3, [r4]
   39734:	mov	r0, r8
   39738:	blx	r3
   3973c:	strb	r0, [r7, #33]	; 0x21
   39740:	ldr	r3, [r7]
   39744:	add	fp, fp, r3
   39748:	ldr	r3, [sp, #48]	; 0x30
   3974c:	add	r9, r9, fp
   39750:	cmp	r6, r9
   39754:	str	r9, [r3]
   39758:	bcs	3969c <__assert_fail@plt+0x28298>
   3975c:	mov	r2, #5
   39760:	movw	r1, #29920	; 0x74e0
   39764:	mov	r0, #0
   39768:	movt	r1, #7
   3976c:	bl	11170 <dcgettext@plt>
   39770:	mov	r5, #0
   39774:	ldrd	r2, [r7]
   39778:	str	r5, [sp]
   3977c:	mov	r4, r0
   39780:	movw	r0, #64404	; 0xfb94
   39784:	movt	r0, #5
   39788:	bl	389e0 <__assert_fail@plt+0x275dc>
   3978c:	mov	r1, r0
   39790:	mov	r0, r4
   39794:	bl	4b9ec <warn@@Base>
   39798:	ldr	r3, [sp, #48]	; 0x30
   3979c:	str	r6, [r3]
   397a0:	b	3969c <__assert_fail@plt+0x28298>
   397a4:	mov	r1, #1
   397a8:	ldr	r3, [r4]
   397ac:	mov	r0, r8
   397b0:	blx	r3
   397b4:	strb	r0, [r7, #24]
   397b8:	b	39554 <__assert_fail@plt+0x28150>
   397bc:	cmp	r5, r6
   397c0:	bcs	397d4 <__assert_fail@plt+0x283d0>
   397c4:	rsb	r1, r5, r6
   397c8:	sub	r3, r1, #1
   397cc:	cmp	r3, #7
   397d0:	bls	39944 <__assert_fail@plt+0x28540>
   397d4:	add	sl, r5, #2
   397d8:	mov	r3, #0
   397dc:	cmp	sl, r6
   397e0:	strb	r3, [r7, #26]
   397e4:	bcc	396f0 <__assert_fail@plt+0x282ec>
   397e8:	add	r8, r5, #3
   397ec:	mov	r3, #0
   397f0:	cmp	r8, r6
   397f4:	str	r3, [r7, #28]
   397f8:	bcc	3970c <__assert_fail@plt+0x28308>
   397fc:	add	r5, r5, #4
   39800:	mov	r3, #0
   39804:	cmp	r6, r5
   39808:	strb	r3, [r7, #32]
   3980c:	bhi	3972c <__assert_fail@plt+0x28328>
   39810:	mov	r3, #0
   39814:	strb	r3, [r7, #33]	; 0x21
   39818:	b	39740 <__assert_fail@plt+0x2833c>
   3981c:	cmp	r6, r8
   39820:	bls	39810 <__assert_fail@plt+0x2840c>
   39824:	rsb	r1, r8, r6
   39828:	sub	r3, r1, #1
   3982c:	cmp	r3, #7
   39830:	bhi	39810 <__assert_fail@plt+0x2840c>
   39834:	b	39730 <__assert_fail@plt+0x2832c>
   39838:	cmp	r6, sl
   3983c:	bls	397fc <__assert_fail@plt+0x283f8>
   39840:	rsb	r1, sl, r6
   39844:	sub	r3, r1, #1
   39848:	cmp	r3, #7
   3984c:	bhi	397fc <__assert_fail@plt+0x283f8>
   39850:	mov	r0, sl
   39854:	ldr	r3, [r4]
   39858:	blx	r3
   3985c:	add	r5, r5, #4
   39860:	cmp	r6, r5
   39864:	strb	r0, [r7, #32]
   39868:	bls	39810 <__assert_fail@plt+0x2840c>
   3986c:	b	3972c <__assert_fail@plt+0x28328>
   39870:	mov	r0, r5
   39874:	mov	r1, sl
   39878:	ldr	r3, [r4]
   3987c:	blx	r3
   39880:	strd	r0, [r7, #16]
   39884:	b	39528 <__assert_fail@plt+0x28124>
   39888:	mov	r1, #1
   3988c:	mov	r0, r5
   39890:	ldr	r3, [r4]
   39894:	blx	r3
   39898:	uxtb	r0, r0
   3989c:	strb	r0, [r7, #25]
   398a0:	cmp	r0, #0
   398a4:	movne	r5, r8
   398a8:	bne	396c4 <__assert_fail@plt+0x282c0>
   398ac:	b	3957c <__assert_fail@plt+0x28178>
   398b0:	subs	r1, r6, r8
   398b4:	beq	397e8 <__assert_fail@plt+0x283e4>
   398b8:	mov	r0, r8
   398bc:	add	r8, r5, #3
   398c0:	bl	4bee4 <warn@@Base+0x4f8>
   398c4:	cmp	r6, r8
   398c8:	str	r0, [r7, #28]
   398cc:	bls	397fc <__assert_fail@plt+0x283f8>
   398d0:	b	3970c <__assert_fail@plt+0x28308>
   398d4:	mov	r1, #8
   398d8:	ldr	r2, [r4]
   398dc:	mov	r0, r8
   398e0:	mov	r8, r3
   398e4:	blx	r2
   398e8:	mov	fp, #12
   398ec:	mov	sl, #8
   398f0:	adds	r2, r0, #12
   398f4:	strd	r0, [r7]
   398f8:	adc	r3, r1, #0
   398fc:	b	394b0 <__assert_fail@plt+0x280ac>
   39900:	rsb	r1, r5, r6
   39904:	sub	r3, r1, #1
   39908:	cmp	r3, #7
   3990c:	bhi	39574 <__assert_fail@plt+0x28170>
   39910:	b	3988c <__assert_fail@plt+0x28488>
   39914:	mov	fp, #4
   39918:	adds	r2, r0, #4
   3991c:	adc	r3, r1, #0
   39920:	mov	sl, fp
   39924:	b	394b0 <__assert_fail@plt+0x280ac>
   39928:	mov	r2, #5
   3992c:	movw	r1, #29724	; 0x741c
   39930:	movt	r1, #7
   39934:	bl	11170 <dcgettext@plt>
   39938:	ldr	r1, [r7]
   3993c:	bl	4b9ec <warn@@Base>
   39940:	b	3969c <__assert_fail@plt+0x28298>
   39944:	ldr	r3, [r4]
   39948:	mov	r0, r5
   3994c:	blx	r3
   39950:	add	sl, r5, #2
   39954:	cmp	r6, sl
   39958:	strb	r0, [r7, #26]
   3995c:	bls	397e8 <__assert_fail@plt+0x283e4>
   39960:	b	396f0 <__assert_fail@plt+0x282ec>
   39964:	push	{r4, lr}
   39968:	movw	r4, #24696	; 0x6078
   3996c:	movt	r4, #9
   39970:	sub	sp, sp, #16
   39974:	mov	r3, r0
   39978:	ldr	r2, [r4, #1104]	; 0x450
   3997c:	cmp	r2, #0
   39980:	beq	399d8 <__assert_fail@plt+0x285d4>
   39984:	ldr	r0, [r4, #1108]	; 0x454
   39988:	cmp	r0, r3
   3998c:	bls	399d8 <__assert_fail@plt+0x285d4>
   39990:	ldr	r0, [r2, r3, lsl #2]
   39994:	cmp	r0, #0
   39998:	beq	399d8 <__assert_fail@plt+0x285d4>
   3999c:	cmp	r1, #0
   399a0:	bne	39a00 <__assert_fail@plt+0x285fc>
   399a4:	mov	r1, #64	; 0x40
   399a8:	str	r3, [sp, #4]
   399ac:	str	r0, [sp, #8]
   399b0:	mov	r3, r1
   399b4:	add	r0, r4, #1040	; 0x410
   399b8:	movw	r2, #29968	; 0x7510
   399bc:	movt	r2, #7
   399c0:	str	r2, [sp]
   399c4:	mov	r2, #1
   399c8:	bl	113f8 <__snprintf_chk@plt>
   399cc:	add	r0, r4, #1040	; 0x410
   399d0:	add	sp, sp, #16
   399d4:	pop	{r4, pc}
   399d8:	mov	r1, #64	; 0x40
   399dc:	str	r3, [sp, #4]
   399e0:	movw	r2, #15208	; 0x3b68
   399e4:	mov	r3, r1
   399e8:	movt	r2, #6
   399ec:	ldr	r0, [pc, #20]	; 39a08 <__assert_fail@plt+0x28604>
   399f0:	str	r2, [sp]
   399f4:	mov	r2, #1
   399f8:	bl	113f8 <__snprintf_chk@plt>
   399fc:	ldr	r0, [pc, #4]	; 39a08 <__assert_fail@plt+0x28604>
   39a00:	add	sp, sp, #16
   39a04:	pop	{r4, pc}
   39a08:	andeq	r6, r9, r8, lsl #9
   39a0c:	ldr	r3, [r0, #8]
   39a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39a14:	mov	r5, r0
   39a18:	movw	r7, #16680	; 0x4128
   39a1c:	ldr	r0, [r2]
   39a20:	movt	r7, #9
   39a24:	mov	r8, r2
   39a28:	cmp	r0, r3
   39a2c:	sub	sp, sp, #116	; 0x74
   39a30:	ldr	r2, [r7]
   39a34:	movw	r6, #26448	; 0x6750
   39a38:	strcc	r3, [r8]
   39a3c:	movt	r6, #9
   39a40:	ldr	r3, [r1]
   39a44:	str	r2, [sp, #108]	; 0x6c
   39a48:	cmp	r3, #0
   39a4c:	bne	39c2c <__assert_fail@plt+0x28828>
   39a50:	ldr	r2, [r6]
   39a54:	ldrd	r0, [r5, #32]
   39a58:	bl	38ad4 <__assert_fail@plt+0x276d0>
   39a5c:	ldrb	r3, [r5, #69]	; 0x45
   39a60:	cmp	r3, #0
   39a64:	beq	39bf4 <__assert_fail@plt+0x287f0>
   39a68:	add	r6, sp, #112	; 0x70
   39a6c:	movw	r3, #30821	; 0x7865
   39a70:	movt	r3, #112	; 0x70
   39a74:	str	r3, [r6, #-104]!	; 0xffffff98
   39a78:	movw	r1, #30032	; 0x7550
   39a7c:	mov	r0, #1
   39a80:	movt	r1, #7
   39a84:	mov	r2, r6
   39a88:	bl	1132c <__printf_chk@plt>
   39a8c:	ldr	r1, [r5, #8]
   39a90:	cmp	r1, #0
   39a94:	beq	39b60 <__assert_fail@plt+0x2875c>
   39a98:	mov	fp, #0
   39a9c:	movw	sl, #30821	; 0x7865
   39aa0:	movw	r9, #12142	; 0x2f6e
   39aa4:	movw	r8, #30056	; 0x7568
   39aa8:	movt	sl, #112	; 0x70
   39aac:	movt	r9, #97	; 0x61
   39ab0:	movt	r8, #7
   39ab4:	mov	r4, fp
   39ab8:	b	39b00 <__assert_fail@plt+0x286fc>
   39abc:	cmp	r3, #8
   39ac0:	beq	39bc4 <__assert_fail@plt+0x287c0>
   39ac4:	cmp	r3, #9
   39ac8:	beq	39b94 <__assert_fail@plt+0x28790>
   39acc:	cmp	r3, #7
   39ad0:	beq	39b88 <__assert_fail@plt+0x28784>
   39ad4:	str	r9, [r6]
   39ad8:	movw	r1, #30016	; 0x7540
   39adc:	mov	r0, #1
   39ae0:	movt	r1, #7
   39ae4:	mov	r2, r6
   39ae8:	bl	1132c <__printf_chk@plt>
   39aec:	ldr	r1, [r5, #8]
   39af0:	add	r4, r4, #1
   39af4:	add	fp, fp, #4
   39af8:	cmp	r1, r4
   39afc:	bls	39b60 <__assert_fail@plt+0x2875c>
   39b00:	ldr	r2, [r5, #12]
   39b04:	lsl	r3, r4, #1
   39b08:	ldrsh	r3, [r2, r3]
   39b0c:	cmn	r3, #1
   39b10:	beq	39af0 <__assert_fail@plt+0x286ec>
   39b14:	cmp	r3, #16
   39b18:	beq	39b80 <__assert_fail@plt+0x2877c>
   39b1c:	ble	39abc <__assert_fail@plt+0x286b8>
   39b20:	cmp	r3, #22
   39b24:	beq	39be4 <__assert_fail@plt+0x287e0>
   39b28:	cmp	r3, #128	; 0x80
   39b2c:	beq	39bd0 <__assert_fail@plt+0x287cc>
   39b30:	cmp	r3, #20
   39b34:	bne	39ad4 <__assert_fail@plt+0x286d0>
   39b38:	ldr	ip, [r5, #16]
   39b3c:	movw	r3, #30048	; 0x7560
   39b40:	movt	r3, #7
   39b44:	mov	r0, r6
   39b48:	ldr	ip, [ip, fp]
   39b4c:	mov	r1, #1
   39b50:	mov	r2, #100	; 0x64
   39b54:	str	ip, [sp]
   39b58:	bl	112cc <__sprintf_chk@plt>
   39b5c:	b	39ad8 <__assert_fail@plt+0x286d4>
   39b60:	mov	r0, #10
   39b64:	bl	112fc <putchar@plt>
   39b68:	ldr	r2, [sp, #108]	; 0x6c
   39b6c:	ldr	r3, [r7]
   39b70:	cmp	r2, r3
   39b74:	bne	39ce0 <__assert_fail@plt+0x288dc>
   39b78:	add	sp, sp, #116	; 0x74
   39b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39b80:	str	sl, [r6]
   39b84:	b	39ad8 <__assert_fail@plt+0x286d4>
   39b88:	mov	r3, #117	; 0x75
   39b8c:	strh	r3, [r6]
   39b90:	b	39ad8 <__assert_fail@plt+0x286d4>
   39b94:	ldr	r3, [r5, #16]
   39b98:	mov	r1, #0
   39b9c:	ldr	r0, [r3, fp]
   39ba0:	bl	39964 <__assert_fail@plt+0x28560>
   39ba4:	movw	r3, #5280	; 0x14a0
   39ba8:	mov	r1, #1
   39bac:	movt	r3, #6
   39bb0:	mov	r2, #100	; 0x64
   39bb4:	str	r0, [sp]
   39bb8:	mov	r0, r6
   39bbc:	bl	112cc <__sprintf_chk@plt>
   39bc0:	b	39ad8 <__assert_fail@plt+0x286d4>
   39bc4:	mov	r3, #115	; 0x73
   39bc8:	strh	r3, [r6]
   39bcc:	b	39ad8 <__assert_fail@plt+0x286d4>
   39bd0:	movw	r3, #30040	; 0x7558
   39bd4:	ldr	ip, [r5, #16]
   39bd8:	mov	r0, r6
   39bdc:	movt	r3, #7
   39be0:	b	39b48 <__assert_fail@plt+0x28744>
   39be4:	ldm	r8, {r0, r1}
   39be8:	str	r0, [r6]
   39bec:	strb	r1, [sp, #12]
   39bf0:	b	39ad8 <__assert_fail@plt+0x286d4>
   39bf4:	ldr	r0, [r5, #48]	; 0x30
   39bf8:	mov	r1, #1
   39bfc:	bl	39964 <__assert_fail@plt+0x28560>
   39c00:	add	r6, sp, #8
   39c04:	movw	r3, #30024	; 0x7548
   39c08:	mov	r1, #1
   39c0c:	movt	r3, #7
   39c10:	mov	r2, #100	; 0x64
   39c14:	str	r0, [sp]
   39c18:	mov	r0, r6
   39c1c:	ldr	ip, [r5, #56]	; 0x38
   39c20:	str	ip, [sp, #4]
   39c24:	bl	112cc <__sprintf_chk@plt>
   39c28:	b	39a78 <__assert_fail@plt+0x28674>
   39c2c:	mov	r4, #0
   39c30:	str	r4, [r1]
   39c34:	ldr	r2, [r6]
   39c38:	mov	r0, #1
   39c3c:	movw	r1, #29980	; 0x751c
   39c40:	movw	r3, #29996	; 0x752c
   39c44:	movt	r1, #7
   39c48:	movt	r3, #7
   39c4c:	lsl	r2, r2, r0
   39c50:	bl	1132c <__printf_chk@plt>
   39c54:	ldr	r0, [r8]
   39c58:	cmp	r0, r4
   39c5c:	bne	39c94 <__assert_fail@plt+0x28890>
   39c60:	b	39cd4 <__assert_fail@plt+0x288d0>
   39c64:	mov	r1, #1
   39c68:	mov	r0, r4
   39c6c:	bl	39964 <__assert_fail@plt+0x28560>
   39c70:	movw	r1, #30016	; 0x7540
   39c74:	movt	r1, #7
   39c78:	mov	r2, r0
   39c7c:	mov	r0, #1
   39c80:	bl	1132c <__printf_chk@plt>
   39c84:	ldr	r0, [r8]
   39c88:	add	r4, r4, #1
   39c8c:	cmp	r0, r4
   39c90:	bls	39cd4 <__assert_fail@plt+0x288d0>
   39c94:	ldr	r1, [r5, #12]
   39c98:	lsl	r3, r4, #1
   39c9c:	ldrsh	r3, [r1, r3]
   39ca0:	cmn	r3, #1
   39ca4:	beq	39c88 <__assert_fail@plt+0x28884>
   39ca8:	ldr	r3, [r5, #64]	; 0x40
   39cac:	cmp	r3, r4
   39cb0:	bne	39c64 <__assert_fail@plt+0x28860>
   39cb4:	movw	r1, #30004	; 0x7534
   39cb8:	mov	r0, #1
   39cbc:	movt	r1, #7
   39cc0:	add	r4, r4, #1
   39cc4:	bl	1132c <__printf_chk@plt>
   39cc8:	ldr	r0, [r8]
   39ccc:	cmp	r0, r4
   39cd0:	bhi	39c94 <__assert_fail@plt+0x28890>
   39cd4:	mov	r0, #10
   39cd8:	bl	112fc <putchar@plt>
   39cdc:	b	39a50 <__assert_fail@plt+0x2864c>
   39ce0:	bl	1117c <__stack_chk_fail@plt>
   39ce4:	sub	r3, r0, #1
   39ce8:	push	{lr}		; (str lr, [sp, #-4]!)
   39cec:	sub	sp, sp, #12
   39cf0:	cmp	r3, #7
   39cf4:	ldrls	pc, [pc, r3, lsl #2]
   39cf8:	b	39d9c <__assert_fail@plt+0x28998>
   39cfc:	andeq	r9, r3, ip, lsl #27
   39d00:	andeq	r9, r3, ip, lsl sp
   39d04:	andeq	r9, r3, ip, lsr #26
   39d08:	andeq	r9, r3, ip, lsr sp
   39d0c:	andeq	r9, r3, ip, asr #26
   39d10:	andeq	r9, r3, ip, asr sp
   39d14:	andeq	r9, r3, ip, ror #26
   39d18:	andeq	r9, r3, ip, ror sp
   39d1c:	movw	r0, #46624	; 0xb620
   39d20:	movt	r0, #7
   39d24:	add	sp, sp, #12
   39d28:	pop	{pc}		; (ldr pc, [sp], #4)
   39d2c:	movw	r0, #46100	; 0xb414
   39d30:	movt	r0, #7
   39d34:	add	sp, sp, #12
   39d38:	pop	{pc}		; (ldr pc, [sp], #4)
   39d3c:	movw	r0, #46208	; 0xb480
   39d40:	movt	r0, #7
   39d44:	add	sp, sp, #12
   39d48:	pop	{pc}		; (ldr pc, [sp], #4)
   39d4c:	movw	r0, #46404	; 0xb544
   39d50:	movt	r0, #7
   39d54:	add	sp, sp, #12
   39d58:	pop	{pc}		; (ldr pc, [sp], #4)
   39d5c:	movw	r0, #30064	; 0x7570
   39d60:	movt	r0, #7
   39d64:	add	sp, sp, #12
   39d68:	pop	{pc}		; (ldr pc, [sp], #4)
   39d6c:	movw	r0, #46320	; 0xb4f0
   39d70:	movt	r0, #7
   39d74:	add	sp, sp, #12
   39d78:	pop	{pc}		; (ldr pc, [sp], #4)
   39d7c:	movw	r0, #46352	; 0xb510
   39d80:	movt	r0, #7
   39d84:	add	sp, sp, #12
   39d88:	pop	{pc}		; (ldr pc, [sp], #4)
   39d8c:	movw	r0, #62888	; 0xf5a8
   39d90:	movt	r0, #5
   39d94:	add	sp, sp, #12
   39d98:	pop	{pc}		; (ldr pc, [sp], #4)
   39d9c:	mov	r1, #16
   39da0:	str	r0, [sp, #4]
   39da4:	mov	r3, r1
   39da8:	movw	r2, #23120	; 0x5a50
   39dac:	ldr	r0, [pc, #24]	; 39dcc <__assert_fail@plt+0x289c8>
   39db0:	movt	r2, #6
   39db4:	str	r2, [sp]
   39db8:	mov	r2, #1
   39dbc:	bl	113f8 <__snprintf_chk@plt>
   39dc0:	ldr	r0, [pc, #4]	; 39dcc <__assert_fail@plt+0x289c8>
   39dc4:	add	sp, sp, #12
   39dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   39dcc:	ldrdeq	r6, [r9], -r0
   39dd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   39dd4:	sub	sp, sp, #8
   39dd8:	mov	r8, r0
   39ddc:	mov	r6, r2
   39de0:	movw	r1, #30072	; 0x7578
   39de4:	mov	r2, #5
   39de8:	movt	r1, #7
   39dec:	mov	r0, #0
   39df0:	ldr	r4, [sp, #40]	; 0x28
   39df4:	mov	r7, r3
   39df8:	bl	11170 <dcgettext@plt>
   39dfc:	mov	r1, #0
   39e00:	mov	r2, r6
   39e04:	mov	r3, r7
   39e08:	str	r1, [sp]
   39e0c:	mov	r5, r0
   39e10:	movw	r0, #64404	; 0xfb94
   39e14:	movt	r0, #5
   39e18:	bl	389e0 <__assert_fail@plt+0x275dc>
   39e1c:	mov	r1, r5
   39e20:	mov	r2, r0
   39e24:	mov	r0, #1
   39e28:	bl	1132c <__printf_chk@plt>
   39e2c:	cmp	r8, r4
   39e30:	movhi	r0, r4
   39e34:	bhi	39eb0 <__assert_fail@plt+0x28aac>
   39e38:	rsb	r4, r8, r4
   39e3c:	asr	r5, r4, #31
   39e40:	cmp	r5, r7
   39e44:	cmpeq	r4, r6
   39e48:	movhi	r4, r6
   39e4c:	movhi	r5, r7
   39e50:	subs	r6, r4, #1
   39e54:	orrs	r3, r4, r5
   39e58:	beq	39eac <__assert_fail@plt+0x28aa8>
   39e5c:	movw	sl, #26492	; 0x677c
   39e60:	movt	sl, #9
   39e64:	mov	r3, r8
   39e68:	mov	r0, r3
   39e6c:	ldr	r2, [sl]
   39e70:	mov	r1, #1
   39e74:	add	r9, r3, r1
   39e78:	blx	r2
   39e7c:	subs	r4, r4, #1
   39e80:	sbc	r5, r5, #0
   39e84:	movw	r1, #30092	; 0x758c
   39e88:	movt	r1, #7
   39e8c:	mov	r2, r0
   39e90:	mov	r0, #1
   39e94:	bl	1132c <__printf_chk@plt>
   39e98:	orrs	r3, r4, r5
   39e9c:	mov	r3, r9
   39ea0:	bne	39e68 <__assert_fail@plt+0x28a64>
   39ea4:	add	r6, r6, #1
   39ea8:	add	r8, r8, r6
   39eac:	mov	r0, r8
   39eb0:	add	sp, sp, #8
   39eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   39eb8:	ldrd	r2, [r0, #24]
   39ebc:	push	{r4, lr}
   39ec0:	orrs	r1, r2, r3
   39ec4:	mov	r4, r0
   39ec8:	beq	39ed4 <__assert_fail@plt+0x28ad0>
   39ecc:	mov	r0, #1
   39ed0:	pop	{r4, pc}
   39ed4:	mov	r2, #5
   39ed8:	movw	r1, #28564	; 0x6f94
   39edc:	mov	r0, #0
   39ee0:	movt	r1, #7
   39ee4:	bl	11170 <dcgettext@plt>
   39ee8:	ldr	r2, [r4, #8]
   39eec:	mov	r1, r0
   39ef0:	mov	r0, #1
   39ef4:	bl	1132c <__printf_chk@plt>
   39ef8:	mov	r0, #0
   39efc:	pop	{r4, pc}
   39f00:	movw	r3, #14352	; 0x3810
   39f04:	movt	r3, #9
   39f08:	push	{r4, r5, r6, lr}
   39f0c:	mov	r4, r0
   39f10:	ldr	r0, [r3, #652]	; 0x28c
   39f14:	mov	r5, r1
   39f18:	sub	sp, sp, #8
   39f1c:	cmp	r0, #0
   39f20:	movweq	r1, #30100	; 0x7594
   39f24:	moveq	r2, #5
   39f28:	movteq	r1, #7
   39f2c:	beq	39fa4 <__assert_fail@plt+0x28ba0>
   39f30:	mov	r2, #664	; 0x298
   39f34:	add	r2, r3, r2
   39f38:	ldrd	r2, [r2]
   39f3c:	cmp	r3, r5
   39f40:	cmpeq	r2, r4
   39f44:	bcc	39f54 <__assert_fail@plt+0x28b50>
   39f48:	add	r0, r0, r4
   39f4c:	add	sp, sp, #8
   39f50:	pop	{r4, r5, r6, pc}
   39f54:	mov	r2, #5
   39f58:	movw	r1, #30124	; 0x75ac
   39f5c:	mov	r0, #0
   39f60:	movt	r1, #7
   39f64:	bl	11170 <dcgettext@plt>
   39f68:	mov	r2, r4
   39f6c:	mov	r3, r5
   39f70:	mov	r4, #0
   39f74:	str	r4, [sp]
   39f78:	mov	r6, r0
   39f7c:	movw	r0, #18952	; 0x4a08
   39f80:	movt	r0, #6
   39f84:	bl	389e0 <__assert_fail@plt+0x275dc>
   39f88:	mov	r1, r0
   39f8c:	mov	r0, r6
   39f90:	bl	4b9ec <warn@@Base>
   39f94:	movw	r1, #30160	; 0x75d0
   39f98:	movt	r1, #7
   39f9c:	mov	r0, r4
   39fa0:	mov	r2, #5
   39fa4:	add	sp, sp, #8
   39fa8:	pop	{r4, r5, r6, lr}
   39fac:	b	11170 <dcgettext@plt>
   39fb0:	push	{r4, lr}
   39fb4:	sub	sp, sp, #8
   39fb8:	mov	r4, r0
   39fbc:	bl	4d020 <warn@@Base+0x1634>
   39fc0:	subs	r3, r0, #0
   39fc4:	movne	r0, r3
   39fc8:	beq	39fd4 <__assert_fail@plt+0x28bd0>
   39fcc:	add	sp, sp, #8
   39fd0:	pop	{r4, pc}
   39fd4:	mov	r2, #5
   39fd8:	movw	r1, #30180	; 0x75e4
   39fdc:	movt	r1, #7
   39fe0:	bl	11170 <dcgettext@plt>
   39fe4:	mov	r1, #100	; 0x64
   39fe8:	str	r4, [sp, #4]
   39fec:	mov	r3, r1
   39ff0:	mov	r2, #1
   39ff4:	str	r0, [sp]
   39ff8:	ldr	r0, [pc, #12]	; 3a00c <__assert_fail@plt+0x28c08>
   39ffc:	bl	113f8 <__snprintf_chk@plt>
   3a000:	ldr	r0, [pc, #4]	; 3a00c <__assert_fail@plt+0x28c08>
   3a004:	add	sp, sp, #8
   3a008:	pop	{r4, pc}
   3a00c:	andeq	r6, r9, r0, ror #9
   3a010:	push	{r4, lr}
   3a014:	subs	r4, r0, #0
   3a018:	sub	sp, sp, #8
   3a01c:	movweq	r0, #30204	; 0x75fc
   3a020:	movteq	r0, #7
   3a024:	beq	3a04c <__assert_fail@plt+0x28c48>
   3a028:	movw	r3, #8193	; 0x2001
   3a02c:	cmp	r4, r3
   3a030:	movweq	r0, #30220	; 0x760c
   3a034:	movteq	r0, #7
   3a038:	beq	3a04c <__assert_fail@plt+0x28c48>
   3a03c:	bl	4d940 <warn@@Base+0x1f54>
   3a040:	subs	r3, r0, #0
   3a044:	movne	r0, r3
   3a048:	beq	3a054 <__assert_fail@plt+0x28c50>
   3a04c:	add	sp, sp, #8
   3a050:	pop	{r4, pc}
   3a054:	mov	r2, #5
   3a058:	movw	r1, #30260	; 0x7634
   3a05c:	movt	r1, #7
   3a060:	bl	11170 <dcgettext@plt>
   3a064:	mov	r1, #100	; 0x64
   3a068:	str	r4, [sp, #4]
   3a06c:	mov	r3, r1
   3a070:	mov	r2, #1
   3a074:	str	r0, [sp]
   3a078:	ldr	r0, [pc, #8]	; 3a088 <__assert_fail@plt+0x28c84>
   3a07c:	bl	113f8 <__snprintf_chk@plt>
   3a080:	ldr	r0, [pc]	; 3a088 <__assert_fail@plt+0x28c84>
   3a084:	b	3a04c <__assert_fail@plt+0x28c48>
   3a088:	andeq	r6, r9, r4, asr #10
   3a08c:	push	{r4, lr}
   3a090:	subs	r4, r0, #0
   3a094:	sub	sp, sp, #8
   3a098:	movweq	r0, #30284	; 0x764c
   3a09c:	movteq	r0, #7
   3a0a0:	bne	3a0ac <__assert_fail@plt+0x28ca8>
   3a0a4:	add	sp, sp, #8
   3a0a8:	pop	{r4, pc}
   3a0ac:	bl	4d6fc <warn@@Base+0x1d10>
   3a0b0:	subs	r3, r0, #0
   3a0b4:	movne	r0, r3
   3a0b8:	bne	3a0a4 <__assert_fail@plt+0x28ca0>
   3a0bc:	mov	r2, #5
   3a0c0:	movw	r1, #30304	; 0x7660
   3a0c4:	movt	r1, #7
   3a0c8:	bl	11170 <dcgettext@plt>
   3a0cc:	mov	r1, #100	; 0x64
   3a0d0:	str	r4, [sp, #4]
   3a0d4:	mov	r3, r1
   3a0d8:	mov	r2, #1
   3a0dc:	str	r0, [sp]
   3a0e0:	ldr	r0, [pc, #8]	; 3a0f0 <__assert_fail@plt+0x28cec>
   3a0e4:	bl	113f8 <__snprintf_chk@plt>
   3a0e8:	ldr	r0, [pc]	; 3a0f0 <__assert_fail@plt+0x28cec>
   3a0ec:	b	3a0a4 <__assert_fail@plt+0x28ca0>
   3a0f0:	andeq	r6, r9, r8, lsr #11
   3a0f4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a0f8:	and	r4, r1, #7
   3a0fc:	cmp	r4, #3
   3a100:	mov	r7, r1
   3a104:	mov	r6, r0
   3a108:	mov	sl, r2
   3a10c:	mov	fp, r3
   3a110:	ldr	r8, [r0]
   3a114:	ldr	r5, [sp, #40]	; 0x28
   3a118:	beq	3a1c4 <__assert_fail@plt+0x28dc0>
   3a11c:	cmp	r4, #4
   3a120:	beq	3a18c <__assert_fail@plt+0x28d88>
   3a124:	cmp	r4, #2
   3a128:	beq	3a190 <__assert_fail@plt+0x28d8c>
   3a12c:	movw	r3, #26448	; 0x6750
   3a130:	movt	r3, #9
   3a134:	ldr	r4, [r3]
   3a138:	add	r9, r8, r4
   3a13c:	cmp	r9, r5
   3a140:	bcs	3a19c <__assert_fail@plt+0x28d98>
   3a144:	cmp	r4, #8
   3a148:	bhi	3a218 <__assert_fail@plt+0x28e14>
   3a14c:	cmp	r4, #0
   3a150:	beq	3a244 <__assert_fail@plt+0x28e40>
   3a154:	tst	r7, #8
   3a158:	beq	3a1cc <__assert_fail@plt+0x28dc8>
   3a15c:	mov	r1, r4
   3a160:	mov	r0, r8
   3a164:	bl	4bee4 <warn@@Base+0x4f8>
   3a168:	and	r7, r7, #112	; 0x70
   3a16c:	cmp	r7, #16
   3a170:	mov	r4, r0
   3a174:	mov	r5, r1
   3a178:	beq	3a1f8 <__assert_fail@plt+0x28df4>
   3a17c:	str	r9, [r6]
   3a180:	mov	r0, r4
   3a184:	mov	r1, r5
   3a188:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a18c:	mov	r4, #8
   3a190:	add	r9, r8, r4
   3a194:	cmp	r5, r9
   3a198:	bhi	3a154 <__assert_fail@plt+0x28d50>
   3a19c:	movw	r1, #30328	; 0x7678
   3a1a0:	movt	r1, #7
   3a1a4:	mov	r0, #0
   3a1a8:	mov	r2, #5
   3a1ac:	bl	11170 <dcgettext@plt>
   3a1b0:	bl	4b9ec <warn@@Base>
   3a1b4:	mov	r0, #0
   3a1b8:	str	r5, [r6]
   3a1bc:	mov	r1, r0
   3a1c0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a1c4:	mov	r4, #4
   3a1c8:	b	3a138 <__assert_fail@plt+0x28d34>
   3a1cc:	movw	r3, #26492	; 0x677c
   3a1d0:	movt	r3, #9
   3a1d4:	mov	r1, r4
   3a1d8:	mov	r0, r8
   3a1dc:	ldr	r3, [r3]
   3a1e0:	and	r7, r7, #112	; 0x70
   3a1e4:	blx	r3
   3a1e8:	cmp	r7, #16
   3a1ec:	mov	r4, r0
   3a1f0:	mov	r5, r1
   3a1f4:	bne	3a17c <__assert_fail@plt+0x28d78>
   3a1f8:	ldr	r1, [sl]
   3a1fc:	ldrd	r2, [fp]
   3a200:	rsb	r8, r1, r8
   3a204:	adds	r2, r2, r8
   3a208:	adc	r3, r3, r8, asr #31
   3a20c:	adds	r4, r4, r2
   3a210:	adc	r5, r5, r3
   3a214:	b	3a17c <__assert_fail@plt+0x28d78>
   3a218:	mov	r2, #5
   3a21c:	movw	r1, #30372	; 0x76a4
   3a220:	mov	r0, #0
   3a224:	movt	r1, #7
   3a228:	bl	11170 <dcgettext@plt>
   3a22c:	mov	r1, r4
   3a230:	bl	4b9ec <warn@@Base>
   3a234:	mov	r0, #0
   3a238:	str	r5, [r6]
   3a23c:	mov	r1, r0
   3a240:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a244:	movw	r1, #30416	; 0x76d0
   3a248:	mov	r0, r4
   3a24c:	mov	r2, #5
   3a250:	movt	r1, #7
   3a254:	b	3a1ac <__assert_fail@plt+0x28da8>
   3a258:	push	{r4, lr}
   3a25c:	sub	sp, sp, #8
   3a260:	ldr	r4, [pc, #64]	; 3a2a8 <__assert_fail@plt+0x28ea4>
   3a264:	mov	r1, #15
   3a268:	str	r0, [sp, #4]
   3a26c:	mov	r3, r1
   3a270:	movw	r2, #30456	; 0x76f8
   3a274:	movt	r2, #7
   3a278:	mov	r0, r4
   3a27c:	str	r2, [sp]
   3a280:	mov	r2, #1
   3a284:	bl	113f8 <__snprintf_chk@plt>
   3a288:	mov	r3, r4
   3a28c:	movw	r1, #30464	; 0x7700
   3a290:	mov	r0, #1
   3a294:	movt	r1, #7
   3a298:	mov	r2, #8
   3a29c:	add	sp, sp, #8
   3a2a0:	pop	{r4, lr}
   3a2a4:	b	1132c <__printf_chk@plt>
   3a2a8:	andeq	r6, r9, ip, lsl #12
   3a2ac:	push	{r6, r7, r8, lr}
   3a2b0:	mov	r7, r3
   3a2b4:	sub	sp, sp, #16
   3a2b8:	orrs	r3, r0, r1
   3a2bc:	mov	r6, r2
   3a2c0:	ldr	r8, [sp, #32]
   3a2c4:	beq	3a320 <__assert_fail@plt+0x28f1c>
   3a2c8:	strd	r0, [sp, #8]
   3a2cc:	mov	r2, #1
   3a2d0:	mov	r0, r8
   3a2d4:	mov	r1, #64	; 0x40
   3a2d8:	movw	r3, #61508	; 0xf044
   3a2dc:	movt	r3, #5
   3a2e0:	str	r3, [sp]
   3a2e4:	mvn	r3, #0
   3a2e8:	bl	113f8 <__snprintf_chk@plt>
   3a2ec:	strd	r6, [sp, #8]
   3a2f0:	mov	r2, #1
   3a2f4:	movw	r3, #30472	; 0x7708
   3a2f8:	movt	r3, #7
   3a2fc:	str	r3, [sp]
   3a300:	mvn	r3, #0
   3a304:	mov	r1, r0
   3a308:	add	r0, r8, r0
   3a30c:	rsb	r1, r1, #64	; 0x40
   3a310:	bl	113f8 <__snprintf_chk@plt>
   3a314:	mov	r0, r8
   3a318:	add	sp, sp, #16
   3a31c:	pop	{r6, r7, r8, pc}
   3a320:	strd	r6, [sp, #8]
   3a324:	mov	r0, r8
   3a328:	mov	r1, #64	; 0x40
   3a32c:	mov	r2, #1
   3a330:	movw	r3, #61508	; 0xf044
   3a334:	movt	r3, #5
   3a338:	str	r3, [sp]
   3a33c:	mvn	r3, #0
   3a340:	bl	113f8 <__snprintf_chk@plt>
   3a344:	mov	r0, r8
   3a348:	add	sp, sp, #16
   3a34c:	pop	{r6, r7, r8, pc}
   3a350:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   3a354:	cmp	r0, r3
   3a358:	sub	sp, sp, #8
   3a35c:	stm	sp, {r1, r2}
   3a360:	bcs	3a450 <__assert_fail@plt+0x2904c>
   3a364:	ldrb	ip, [r0]
   3a368:	mov	r7, #0
   3a36c:	and	r6, ip, #127	; 0x7f
   3a370:	tst	ip, #128	; 0x80
   3a374:	uxtb	r6, r6
   3a378:	beq	3a46c <__assert_fail@plt+0x29068>
   3a37c:	sub	fp, r3, #1
   3a380:	mov	r1, #7
   3a384:	mov	r8, #1
   3a388:	cmp	r0, fp
   3a38c:	sub	sl, r1, #32
   3a390:	rsb	r9, r1, #32
   3a394:	beq	3a448 <__assert_fail@plt+0x29044>
   3a398:	ldrb	ip, [r0, #1]!
   3a39c:	add	r8, r8, #1
   3a3a0:	mov	r3, #0
   3a3a4:	and	r2, ip, #127	; 0x7f
   3a3a8:	tst	ip, #128	; 0x80
   3a3ac:	uxtb	r2, r2
   3a3b0:	lsl	r5, r2, sl
   3a3b4:	lsl	r4, r2, r1
   3a3b8:	orr	r5, r5, r2, lsr r9
   3a3bc:	add	r1, r1, #7
   3a3c0:	orr	r6, r6, r4
   3a3c4:	orr	r7, r7, r5
   3a3c8:	beq	3a3d4 <__assert_fail@plt+0x28fd0>
   3a3cc:	cmp	r8, #10
   3a3d0:	bne	3a388 <__assert_fail@plt+0x28f84>
   3a3d4:	cmp	r1, #63	; 0x3f
   3a3d8:	movhi	r3, #0
   3a3dc:	movls	r3, #1
   3a3e0:	ldr	r2, [sp]
   3a3e4:	cmp	r2, #0
   3a3e8:	strne	r8, [r2]
   3a3ec:	ldr	r2, [sp, #4]
   3a3f0:	cmp	r2, #0
   3a3f4:	moveq	r3, #0
   3a3f8:	andne	r3, r3, #1
   3a3fc:	cmp	r3, #0
   3a400:	beq	3a434 <__assert_fail@plt+0x29030>
   3a404:	tst	ip, #64	; 0x40
   3a408:	beq	3a434 <__assert_fail@plt+0x29030>
   3a40c:	mov	r0, #1
   3a410:	sub	r4, r1, #32
   3a414:	rsb	ip, r1, #32
   3a418:	lsl	r3, r0, r4
   3a41c:	orr	r3, r3, r0, lsr ip
   3a420:	lsl	r2, r0, r1
   3a424:	rsbs	r2, r2, #0
   3a428:	rsc	r3, r3, #0
   3a42c:	orr	r6, r6, r2
   3a430:	orr	r7, r7, r3
   3a434:	mov	r0, r6
   3a438:	mov	r1, r7
   3a43c:	add	sp, sp, #8
   3a440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   3a444:	bx	lr
   3a448:	mov	r3, #1
   3a44c:	b	3a3e0 <__assert_fail@plt+0x28fdc>
   3a450:	mov	ip, #0
   3a454:	mov	r3, #1
   3a458:	mov	r1, ip
   3a45c:	mov	r8, ip
   3a460:	mov	r6, #0
   3a464:	mov	r7, #0
   3a468:	b	3a3e0 <__assert_fail@plt+0x28fdc>
   3a46c:	mov	r3, #1
   3a470:	mov	r1, #7
   3a474:	mov	r8, r3
   3a478:	b	3a3e0 <__assert_fail@plt+0x28fdc>
   3a47c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a480:	movw	sl, #16680	; 0x4128
   3a484:	movt	sl, #9
   3a488:	sub	sp, sp, #12
   3a48c:	cmp	r1, r0
   3a490:	mov	r5, r0
   3a494:	ldr	r3, [sl]
   3a498:	mov	r4, r1
   3a49c:	str	r3, [sp, #4]
   3a4a0:	bls	3a5e4 <__assert_fail@plt+0x291e0>
   3a4a4:	movw	r9, #24696	; 0x6078
   3a4a8:	movt	r9, #9
   3a4ac:	mov	r8, #0
   3a4b0:	mov	r0, r5
   3a4b4:	mov	r1, sp
   3a4b8:	mov	r2, #0
   3a4bc:	mov	r3, r4
   3a4c0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3a4c4:	ldr	fp, [sp]
   3a4c8:	add	fp, r5, fp
   3a4cc:	cmp	r4, fp
   3a4d0:	mov	r6, r0
   3a4d4:	beq	3a5fc <__assert_fail@plt+0x291f8>
   3a4d8:	cmp	r6, #0
   3a4dc:	mov	r0, fp
   3a4e0:	beq	3a600 <__assert_fail@plt+0x291fc>
   3a4e4:	mov	r3, r4
   3a4e8:	mov	r1, sp
   3a4ec:	mov	r2, #0
   3a4f0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3a4f4:	ldr	r3, [sp]
   3a4f8:	add	r5, fp, r3
   3a4fc:	cmp	r4, r5
   3a500:	mov	r7, r0
   3a504:	beq	3a5fc <__assert_fail@plt+0x291f8>
   3a508:	mov	r0, #24
   3a50c:	ldrb	fp, [fp, r3]
   3a510:	bl	11224 <malloc@plt>
   3a514:	add	r5, r5, #1
   3a518:	cmp	r0, #0
   3a51c:	beq	3a5bc <__assert_fail@plt+0x291b8>
   3a520:	ldr	r2, [r9, #4]
   3a524:	movw	r3, #24696	; 0x6078
   3a528:	movt	r3, #9
   3a52c:	str	r6, [r0]
   3a530:	cmp	r2, #0
   3a534:	stmib	r0, {r7, fp}
   3a538:	str	r8, [r0, #12]
   3a53c:	ldrne	r3, [r3, #8]
   3a540:	str	r8, [r0, #16]
   3a544:	str	r8, [r0, #20]
   3a548:	streq	r0, [r3, #4]
   3a54c:	strne	r0, [r3, #20]
   3a550:	str	r0, [r9, #8]
   3a554:	b	3a5bc <__assert_fail@plt+0x291b8>
   3a558:	mov	r0, r5
   3a55c:	mov	r3, r4
   3a560:	mov	r1, sp
   3a564:	mov	r2, #0
   3a568:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3a56c:	ldr	r3, [sp]
   3a570:	add	r5, r5, r3
   3a574:	cmp	r4, r5
   3a578:	mov	r7, r0
   3a57c:	beq	3a5e4 <__assert_fail@plt+0x291e0>
   3a580:	mov	r0, #12
   3a584:	bl	11224 <malloc@plt>
   3a588:	cmp	r0, #0
   3a58c:	beq	3a5b4 <__assert_fail@plt+0x291b0>
   3a590:	ldr	r3, [r9, #8]
   3a594:	stm	r0, {r6, r7}
   3a598:	ldr	r1, [r3, #12]
   3a59c:	str	r8, [r0, #8]
   3a5a0:	cmp	r1, #0
   3a5a4:	streq	r0, [r3, #12]
   3a5a8:	ldrne	r1, [r3, #16]
   3a5ac:	strne	r0, [r1, #8]
   3a5b0:	str	r0, [r3, #16]
   3a5b4:	cmp	r6, #0
   3a5b8:	beq	3a618 <__assert_fail@plt+0x29214>
   3a5bc:	mov	r0, r5
   3a5c0:	mov	r3, r4
   3a5c4:	mov	r1, sp
   3a5c8:	mov	r2, #0
   3a5cc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3a5d0:	ldr	r3, [sp]
   3a5d4:	add	r5, r5, r3
   3a5d8:	cmp	r4, r5
   3a5dc:	mov	r6, r0
   3a5e0:	bne	3a558 <__assert_fail@plt+0x29154>
   3a5e4:	movw	r1, #30480	; 0x7710
   3a5e8:	mov	r2, #5
   3a5ec:	movt	r1, #7
   3a5f0:	mov	r0, #0
   3a5f4:	bl	11170 <dcgettext@plt>
   3a5f8:	bl	4b2b0 <error@@Base>
   3a5fc:	mov	r0, #0
   3a600:	ldr	r2, [sp, #4]
   3a604:	ldr	r3, [sl]
   3a608:	cmp	r2, r3
   3a60c:	bne	3a624 <__assert_fail@plt+0x29220>
   3a610:	add	sp, sp, #12
   3a614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a618:	cmp	r4, r5
   3a61c:	bhi	3a4b0 <__assert_fail@plt+0x290ac>
   3a620:	b	3a5e4 <__assert_fail@plt+0x291e0>
   3a624:	bl	1117c <__stack_chk_fail@plt>
   3a628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a62c:	mov	r2, #5
   3a630:	sub	sp, sp, #12
   3a634:	ldr	r4, [r0, #12]
   3a638:	ldr	fp, [r0, #24]
   3a63c:	mov	sl, r0
   3a640:	movw	r1, #28592	; 0x6fb0
   3a644:	mov	r0, #0
   3a648:	movt	r1, #7
   3a64c:	movw	r8, #24696	; 0x6078
   3a650:	bl	11170 <dcgettext@plt>
   3a654:	movt	r8, #9
   3a658:	ldr	r2, [sl, #8]
   3a65c:	add	fp, r4, fp
   3a660:	mov	r9, r8
   3a664:	mov	r1, r0
   3a668:	mov	r0, #1
   3a66c:	bl	1132c <__printf_chk@plt>
   3a670:	bl	38820 <__assert_fail@plt+0x2741c>
   3a674:	ldr	r3, [r8, #4]
   3a678:	cmp	r3, #0
   3a67c:	bne	3a790 <__assert_fail@plt+0x2938c>
   3a680:	mov	r0, r4
   3a684:	mov	r1, fp
   3a688:	bl	3a47c <__assert_fail@plt+0x29078>
   3a68c:	ldr	r3, [r9, #4]
   3a690:	cmp	r3, #0
   3a694:	mov	r7, r0
   3a698:	beq	3a774 <__assert_fail@plt+0x29370>
   3a69c:	mov	r2, #5
   3a6a0:	movw	r1, #30524	; 0x773c
   3a6a4:	mov	r0, #0
   3a6a8:	movt	r1, #7
   3a6ac:	bl	11170 <dcgettext@plt>
   3a6b0:	ldr	r2, [sl, #12]
   3a6b4:	rsb	r2, r2, r4
   3a6b8:	mov	r1, r0
   3a6bc:	mov	r0, #1
   3a6c0:	bl	1132c <__printf_chk@plt>
   3a6c4:	ldr	r6, [r8, #4]
   3a6c8:	cmp	r6, #0
   3a6cc:	beq	3a774 <__assert_fail@plt+0x29370>
   3a6d0:	ldr	r0, [r6, #4]
   3a6d4:	ldr	r4, [r6]
   3a6d8:	bl	39fb0 <__assert_fail@plt+0x28bac>
   3a6dc:	mov	r5, r0
   3a6e0:	ldr	r0, [r6, #8]
   3a6e4:	cmp	r0, #0
   3a6e8:	movwne	r1, #30548	; 0x7754
   3a6ec:	movweq	r1, #30564	; 0x7764
   3a6f0:	movtne	r1, #7
   3a6f4:	movne	r2, #5
   3a6f8:	moveq	r2, #5
   3a6fc:	movteq	r1, #7
   3a700:	movne	r0, #0
   3a704:	bl	11170 <dcgettext@plt>
   3a708:	mov	r2, r4
   3a70c:	mov	r3, r5
   3a710:	movw	r1, #30576	; 0x7770
   3a714:	movt	r1, #7
   3a718:	str	r0, [sp]
   3a71c:	mov	r0, #1
   3a720:	bl	1132c <__printf_chk@plt>
   3a724:	ldr	r4, [r6, #12]
   3a728:	cmp	r4, #0
   3a72c:	beq	3a768 <__assert_fail@plt+0x29364>
   3a730:	ldr	r0, [r4]
   3a734:	bl	3a010 <__assert_fail@plt+0x28c0c>
   3a738:	mov	r5, r0
   3a73c:	ldr	r0, [r4, #4]
   3a740:	bl	3a08c <__assert_fail@plt+0x28c88>
   3a744:	mov	r2, r5
   3a748:	movw	r1, #30600	; 0x7788
   3a74c:	movt	r1, #7
   3a750:	mov	r3, r0
   3a754:	mov	r0, #1
   3a758:	bl	1132c <__printf_chk@plt>
   3a75c:	ldr	r4, [r4, #8]
   3a760:	cmp	r4, #0
   3a764:	bne	3a730 <__assert_fail@plt+0x2932c>
   3a768:	ldr	r6, [r6, #20]
   3a76c:	cmp	r6, #0
   3a770:	bne	3a6d0 <__assert_fail@plt+0x292cc>
   3a774:	cmp	r7, #0
   3a778:	beq	3a798 <__assert_fail@plt+0x29394>
   3a77c:	bl	38820 <__assert_fail@plt+0x2741c>
   3a780:	ldr	r3, [r8, #4]
   3a784:	mov	r4, r7
   3a788:	cmp	r3, #0
   3a78c:	beq	3a680 <__assert_fail@plt+0x2927c>
   3a790:	mov	r7, #0
   3a794:	b	3a69c <__assert_fail@plt+0x29298>
   3a798:	mov	r0, #10
   3a79c:	bl	112fc <putchar@plt>
   3a7a0:	mov	r0, #1
   3a7a4:	add	sp, sp, #12
   3a7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a7ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   3a7b0:	movw	r8, #16680	; 0x4128
   3a7b4:	movt	r8, #9
   3a7b8:	sub	sp, sp, #12
   3a7bc:	ldr	r4, [r0, #12]
   3a7c0:	mov	r5, r0
   3a7c4:	ldr	r3, [r8]
   3a7c8:	mov	r2, #5
   3a7cc:	movw	r1, #28592	; 0x6fb0
   3a7d0:	mov	r0, #0
   3a7d4:	movt	r1, #7
   3a7d8:	ldr	r6, [r5, #24]
   3a7dc:	str	r3, [sp, #4]
   3a7e0:	bl	11170 <dcgettext@plt>
   3a7e4:	add	r6, r4, r6
   3a7e8:	ldr	r2, [r5, #8]
   3a7ec:	mov	r1, r0
   3a7f0:	mov	r0, #1
   3a7f4:	bl	1132c <__printf_chk@plt>
   3a7f8:	cmp	r4, r6
   3a7fc:	bcc	3a878 <__assert_fail@plt+0x29474>
   3a800:	b	3a938 <__assert_fail@plt+0x29534>
   3a804:	cmp	r5, #1
   3a808:	beq	3a8d4 <__assert_fail@plt+0x294d0>
   3a80c:	cmp	r5, #2
   3a810:	bne	3a870 <__assert_fail@plt+0x2946c>
   3a814:	mov	r2, #0
   3a818:	mov	r3, r6
   3a81c:	mov	r0, r4
   3a820:	mov	r1, sp
   3a824:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3a828:	ldr	r5, [sp]
   3a82c:	add	r5, r4, r5
   3a830:	rsb	r1, r5, r6
   3a834:	mov	r7, r0
   3a838:	mov	r0, r5
   3a83c:	bl	11350 <strnlen@plt>
   3a840:	movw	r1, #30740	; 0x7814
   3a844:	movt	r1, #7
   3a848:	mov	r2, #5
   3a84c:	add	r4, r0, #1
   3a850:	mov	r0, #0
   3a854:	bl	11170 <dcgettext@plt>
   3a858:	mov	r3, r5
   3a85c:	mov	r2, r7
   3a860:	add	r4, r5, r4
   3a864:	mov	r1, r0
   3a868:	mov	r0, #1
   3a86c:	bl	1132c <__printf_chk@plt>
   3a870:	cmp	r6, r4
   3a874:	bls	3a938 <__assert_fail@plt+0x29534>
   3a878:	ldrb	r5, [r4], #1
   3a87c:	cmp	r5, #3
   3a880:	beq	3a978 <__assert_fail@plt+0x29574>
   3a884:	bls	3a804 <__assert_fail@plt+0x29400>
   3a888:	cmp	r5, #4
   3a88c:	beq	3a954 <__assert_fail@plt+0x29550>
   3a890:	cmp	r5, #255	; 0xff
   3a894:	bne	3a870 <__assert_fail@plt+0x2946c>
   3a898:	mov	r2, #0
   3a89c:	mov	r3, r6
   3a8a0:	mov	r0, r4
   3a8a4:	mov	r1, sp
   3a8a8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3a8ac:	ldr	r5, [sp]
   3a8b0:	add	r5, r4, r5
   3a8b4:	rsb	r1, r5, r6
   3a8b8:	mov	r7, r0
   3a8bc:	mov	r0, r5
   3a8c0:	bl	11350 <strnlen@plt>
   3a8c4:	movw	r1, #30784	; 0x7840
   3a8c8:	mov	r2, #5
   3a8cc:	movt	r1, #7
   3a8d0:	b	3a84c <__assert_fail@plt+0x29448>
   3a8d4:	mov	r3, r6
   3a8d8:	mov	r2, #0
   3a8dc:	mov	r0, r4
   3a8e0:	mov	r1, sp
   3a8e4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3a8e8:	ldr	r7, [sp]
   3a8ec:	add	r7, r4, r7
   3a8f0:	rsb	r1, r7, r6
   3a8f4:	mov	r9, r0
   3a8f8:	mov	r0, r7
   3a8fc:	bl	11350 <strnlen@plt>
   3a900:	mov	r2, #5
   3a904:	movw	r1, #30692	; 0x77e4
   3a908:	movt	r1, #7
   3a90c:	add	r4, r0, #1
   3a910:	mov	r0, #0
   3a914:	bl	11170 <dcgettext@plt>
   3a918:	add	r4, r7, r4
   3a91c:	mov	r2, r9
   3a920:	mov	r3, r7
   3a924:	mov	r1, r0
   3a928:	mov	r0, r5
   3a92c:	bl	1132c <__printf_chk@plt>
   3a930:	cmp	r6, r4
   3a934:	bhi	3a878 <__assert_fail@plt+0x29474>
   3a938:	ldr	r2, [sp, #4]
   3a93c:	mov	r0, #1
   3a940:	ldr	r3, [r8]
   3a944:	cmp	r2, r3
   3a948:	bne	3a9e4 <__assert_fail@plt+0x295e0>
   3a94c:	add	sp, sp, #12
   3a950:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3a954:	mov	r2, #5
   3a958:	movw	r1, #30668	; 0x77cc
   3a95c:	mov	r0, #0
   3a960:	movt	r1, #7
   3a964:	bl	11170 <dcgettext@plt>
   3a968:	mov	r1, r0
   3a96c:	mov	r0, #1
   3a970:	bl	1132c <__printf_chk@plt>
   3a974:	b	3a870 <__assert_fail@plt+0x2946c>
   3a978:	mov	r3, r6
   3a97c:	mov	r0, r4
   3a980:	mov	r1, sp
   3a984:	mov	r2, #0
   3a988:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3a98c:	mov	r3, r6
   3a990:	mov	r1, sp
   3a994:	mov	r2, #0
   3a998:	mov	r5, r0
   3a99c:	ldr	r0, [sp]
   3a9a0:	add	r4, r4, r0
   3a9a4:	mov	r0, r4
   3a9a8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3a9ac:	ldr	r3, [sp]
   3a9b0:	mov	r2, #5
   3a9b4:	movw	r1, #30616	; 0x7798
   3a9b8:	movt	r1, #7
   3a9bc:	add	r4, r4, r3
   3a9c0:	mov	r7, r0
   3a9c4:	mov	r0, #0
   3a9c8:	bl	11170 <dcgettext@plt>
   3a9cc:	mov	r2, r5
   3a9d0:	mov	r3, r7
   3a9d4:	mov	r1, r0
   3a9d8:	mov	r0, #1
   3a9dc:	bl	1132c <__printf_chk@plt>
   3a9e0:	b	3a870 <__assert_fail@plt+0x2946c>
   3a9e4:	bl	1117c <__stack_chk_fail@plt>
   3a9e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a9ec:	movw	r7, #16680	; 0x4128
   3a9f0:	movt	r7, #9
   3a9f4:	sub	sp, sp, #52	; 0x34
   3a9f8:	mov	fp, r3
   3a9fc:	mov	ip, r0
   3aa00:	ldr	r4, [r7]
   3aa04:	mov	r8, r1
   3aa08:	ldr	r6, [sp, #88]	; 0x58
   3aa0c:	mov	sl, r2
   3aa10:	mov	r3, r0
   3aa14:	mov	r9, #0
   3aa18:	str	r4, [sp, #44]	; 0x2c
   3aa1c:	add	r6, r0, r6
   3aa20:	ldr	r4, [sp, #104]	; 0x68
   3aa24:	str	r0, [sp, #36]	; 0x24
   3aa28:	str	r4, [sp, #32]
   3aa2c:	cmp	r3, r6
   3aa30:	bcs	3ae64 <__assert_fail@plt+0x29a60>
   3aa34:	add	r0, r3, #1
   3aa38:	str	r0, [sp, #36]	; 0x24
   3aa3c:	ldrb	r2, [r3]
   3aa40:	sub	r1, r2, #3
   3aa44:	cmp	r1, #249	; 0xf9
   3aa48:	ldrls	pc, [pc, r1, lsl #2]
   3aa4c:	b	3ae38 <__assert_fail@plt+0x29a34>
   3aa50:	strheq	ip, [r3], -r0
   3aa54:	andeq	sl, r3, r8, lsr lr
   3aa58:	andeq	sl, r3, r8, lsr lr
   3aa5c:	muleq	r3, r8, r0
   3aa60:	andeq	sl, r3, r8, lsr lr
   3aa64:	andeq	ip, r3, r8, rrx
   3aa68:	andeq	ip, r3, ip, lsr #32
   3aa6c:	strdeq	fp, [r3], -ip
   3aa70:	andeq	fp, r3, r0, asr #31
   3aa74:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   3aa78:	andeq	fp, r3, r4, asr pc
   3aa7c:	andeq	fp, r3, ip, asr #29
   3aa80:	andeq	fp, r3, r4, asr #28
   3aa84:	andeq	fp, r3, r4, lsl #28
   3aa88:	andeq	fp, r3, r4, asr #27
   3aa8c:	andeq	fp, r3, ip, lsr #27
   3aa90:	muleq	r3, r4, sp
   3aa94:	andeq	fp, r3, ip, ror sp
   3aa98:	andeq	fp, r3, ip, asr #26
   3aa9c:	andeq	fp, r3, r4, lsr sp
   3aaa0:	andeq	fp, r3, ip, lsl sp
   3aaa4:	andeq	fp, r3, r4, lsl #26
   3aaa8:	andeq	fp, r3, ip, ror #25
   3aaac:	ldrdeq	fp, [r3], -r4
   3aab0:			; <UNDEFINED> instruction: 0x0003bcbc
   3aab4:	andeq	fp, r3, r4, lsr #25
   3aab8:	andeq	fp, r3, ip, lsl #25
   3aabc:	andeq	fp, r3, r4, ror ip
   3aac0:	andeq	fp, r3, ip, asr ip
   3aac4:	andeq	fp, r3, r4, asr #24
   3aac8:	andeq	fp, r3, ip, lsr #24
   3aacc:	andeq	fp, r3, r4, lsl ip
   3aad0:	ldrdeq	fp, [r3], -r4
   3aad4:			; <UNDEFINED> instruction: 0x0003bbbc
   3aad8:	andeq	fp, r3, r4, lsr #23
   3aadc:	andeq	fp, r3, ip, lsl #23
   3aae0:	andeq	fp, r3, r4, ror fp
   3aae4:	andeq	fp, r3, r8, lsr fp
   3aae8:	andeq	fp, r3, r0, lsr #22
   3aaec:	andeq	fp, r3, r8, lsl #22
   3aaf0:	strdeq	fp, [r3], -r0
   3aaf4:	ldrdeq	fp, [r3], -r8
   3aaf8:	andeq	fp, r3, r0, asr #21
   3aafc:	andeq	fp, r3, r8, lsr #21
   3ab00:	andeq	fp, r3, ip, ror #20
   3ab04:	andeq	fp, r3, r0, asr sl
   3ab08:	andeq	fp, r3, r0, asr sl
   3ab0c:	andeq	fp, r3, r0, asr sl
   3ab10:	andeq	fp, r3, r0, asr sl
   3ab14:	andeq	fp, r3, r0, asr sl
   3ab18:	andeq	fp, r3, r0, asr sl
   3ab1c:	andeq	fp, r3, r0, asr sl
   3ab20:	andeq	fp, r3, r0, asr sl
   3ab24:	andeq	fp, r3, r0, asr sl
   3ab28:	andeq	fp, r3, r0, asr sl
   3ab2c:	andeq	fp, r3, r0, asr sl
   3ab30:	andeq	fp, r3, r0, asr sl
   3ab34:	andeq	fp, r3, r0, asr sl
   3ab38:	andeq	fp, r3, r0, asr sl
   3ab3c:	andeq	fp, r3, r0, asr sl
   3ab40:	andeq	fp, r3, r0, asr sl
   3ab44:	andeq	fp, r3, r0, asr sl
   3ab48:	andeq	fp, r3, r0, asr sl
   3ab4c:	andeq	fp, r3, r0, asr sl
   3ab50:	andeq	fp, r3, r0, asr sl
   3ab54:	andeq	fp, r3, r0, asr sl
   3ab58:	andeq	fp, r3, r0, asr sl
   3ab5c:	andeq	fp, r3, r0, asr sl
   3ab60:	andeq	fp, r3, r0, asr sl
   3ab64:	andeq	fp, r3, r0, asr sl
   3ab68:	andeq	fp, r3, r0, asr sl
   3ab6c:	andeq	fp, r3, r0, asr sl
   3ab70:	andeq	fp, r3, r0, asr sl
   3ab74:	andeq	fp, r3, r0, asr sl
   3ab78:	andeq	fp, r3, r0, asr sl
   3ab7c:	andeq	fp, r3, r0, asr sl
   3ab80:	andeq	fp, r3, r0, asr sl
   3ab84:	andeq	fp, r3, r0, lsr #20
   3ab88:	andeq	fp, r3, r0, lsr #20
   3ab8c:	andeq	fp, r3, r0, lsr #20
   3ab90:	andeq	fp, r3, r0, lsr #20
   3ab94:	andeq	fp, r3, r0, lsr #20
   3ab98:	andeq	fp, r3, r0, lsr #20
   3ab9c:	andeq	fp, r3, r0, lsr #20
   3aba0:	andeq	fp, r3, r0, lsr #20
   3aba4:	andeq	fp, r3, r0, lsr #20
   3aba8:	andeq	fp, r3, r0, lsr #20
   3abac:	andeq	fp, r3, r0, lsr #20
   3abb0:	andeq	fp, r3, r0, lsr #20
   3abb4:	andeq	fp, r3, r0, lsr #20
   3abb8:	andeq	fp, r3, r0, lsr #20
   3abbc:	andeq	fp, r3, r0, lsr #20
   3abc0:	andeq	fp, r3, r0, lsr #20
   3abc4:	andeq	fp, r3, r0, lsr #20
   3abc8:	andeq	fp, r3, r0, lsr #20
   3abcc:	andeq	fp, r3, r0, lsr #20
   3abd0:	andeq	fp, r3, r0, lsr #20
   3abd4:	andeq	fp, r3, r0, lsr #20
   3abd8:	andeq	fp, r3, r0, lsr #20
   3abdc:	andeq	fp, r3, r0, lsr #20
   3abe0:	andeq	fp, r3, r0, lsr #20
   3abe4:	andeq	fp, r3, r0, lsr #20
   3abe8:	andeq	fp, r3, r0, lsr #20
   3abec:	andeq	fp, r3, r0, lsr #20
   3abf0:	andeq	fp, r3, r0, lsr #20
   3abf4:	andeq	fp, r3, r0, lsr #20
   3abf8:	andeq	fp, r3, r0, lsr #20
   3abfc:	andeq	fp, r3, r0, lsr #20
   3ac00:	andeq	fp, r3, r0, lsr #20
   3ac04:	andeq	fp, r3, r8, asr #19
   3ac08:	andeq	fp, r3, r8, asr #19
   3ac0c:	andeq	fp, r3, r8, asr #19
   3ac10:	andeq	fp, r3, r8, asr #19
   3ac14:	andeq	fp, r3, r8, asr #19
   3ac18:	andeq	fp, r3, r8, asr #19
   3ac1c:	andeq	fp, r3, r8, asr #19
   3ac20:	andeq	fp, r3, r8, asr #19
   3ac24:	andeq	fp, r3, r8, asr #19
   3ac28:	andeq	fp, r3, r8, asr #19
   3ac2c:	andeq	fp, r3, r8, asr #19
   3ac30:	andeq	fp, r3, r8, asr #19
   3ac34:	andeq	fp, r3, r8, asr #19
   3ac38:	andeq	fp, r3, r8, asr #19
   3ac3c:	andeq	fp, r3, r8, asr #19
   3ac40:	andeq	fp, r3, r8, asr #19
   3ac44:	andeq	fp, r3, r8, asr #19
   3ac48:	andeq	fp, r3, r8, asr #19
   3ac4c:	andeq	fp, r3, r8, asr #19
   3ac50:	andeq	fp, r3, r8, asr #19
   3ac54:	andeq	fp, r3, r8, asr #19
   3ac58:	andeq	fp, r3, r8, asr #19
   3ac5c:	andeq	fp, r3, r8, asr #19
   3ac60:	andeq	fp, r3, r8, asr #19
   3ac64:	andeq	fp, r3, r8, asr #19
   3ac68:	andeq	fp, r3, r8, asr #19
   3ac6c:	andeq	fp, r3, r8, asr #19
   3ac70:	andeq	fp, r3, r8, asr #19
   3ac74:	andeq	fp, r3, r8, asr #19
   3ac78:	andeq	fp, r3, r8, asr #19
   3ac7c:	andeq	fp, r3, r8, asr #19
   3ac80:	andeq	fp, r3, r8, asr #19
   3ac84:	andeq	fp, r3, r8, asr r9
   3ac88:	andeq	fp, r3, r4, lsl r9
   3ac8c:	andeq	fp, r3, ip, asr r8
   3ac90:	andeq	fp, r3, ip, lsl r8
   3ac94:	andeq	fp, r3, ip, ror #15
   3ac98:			; <UNDEFINED> instruction: 0x0003b7bc
   3ac9c:	andeq	fp, r3, r4, lsr #15
   3aca0:	andeq	fp, r3, ip, lsl #15
   3aca4:	andeq	fp, r3, r8, lsr #14
   3aca8:	andeq	fp, r3, r4, asr #13
   3acac:	andeq	fp, r3, r0, asr r6
   3acb0:	andeq	fp, r3, r8, lsr r6
   3acb4:	andeq	fp, r3, r0, lsr #12
   3acb8:	andeq	fp, r3, r0, asr #10
   3acbc:	strdeq	fp, [r3], -r0
   3acc0:	ldrdeq	fp, [r3], -r8
   3acc4:	andeq	sl, r3, r8, lsr lr
   3acc8:	andeq	sl, r3, r8, lsr lr
   3accc:	andeq	sl, r3, r8, lsr lr
   3acd0:	andeq	sl, r3, r8, lsr lr
   3acd4:	andeq	sl, r3, r8, lsr lr
   3acd8:	andeq	sl, r3, r8, lsr lr
   3acdc:	andeq	sl, r3, r8, lsr lr
   3ace0:	andeq	sl, r3, r8, lsr lr
   3ace4:	andeq	sl, r3, r8, lsr lr
   3ace8:	andeq	sl, r3, r8, lsr lr
   3acec:	andeq	sl, r3, r8, lsr lr
   3acf0:	andeq	sl, r3, r8, lsr lr
   3acf4:	andeq	sl, r3, r8, lsr lr
   3acf8:	andeq	sl, r3, r8, lsr lr
   3acfc:	andeq	sl, r3, r8, lsr lr
   3ad00:	andeq	sl, r3, r8, lsr lr
   3ad04:	andeq	sl, r3, r8, lsr lr
   3ad08:	andeq	sl, r3, r8, lsr lr
   3ad0c:	andeq	sl, r3, r8, lsr lr
   3ad10:	andeq	sl, r3, r8, lsr lr
   3ad14:	andeq	sl, r3, r8, lsr lr
   3ad18:	andeq	sl, r3, r8, lsr lr
   3ad1c:	andeq	sl, r3, r8, lsr lr
   3ad20:	andeq	sl, r3, r8, lsr lr
   3ad24:	andeq	sl, r3, r8, lsr lr
   3ad28:	andeq	sl, r3, r8, lsr lr
   3ad2c:	andeq	sl, r3, r8, lsr lr
   3ad30:	andeq	sl, r3, r8, lsr lr
   3ad34:	andeq	sl, r3, r8, lsr lr
   3ad38:	andeq	sl, r3, r8, lsr lr
   3ad3c:	andeq	sl, r3, r8, lsr lr
   3ad40:	andeq	sl, r3, r8, lsr lr
   3ad44:	andeq	sl, r3, r8, lsr lr
   3ad48:	andeq	sl, r3, r8, lsr lr
   3ad4c:	andeq	sl, r3, r8, lsr lr
   3ad50:	andeq	sl, r3, r8, lsr lr
   3ad54:	andeq	sl, r3, r8, lsr lr
   3ad58:	andeq	sl, r3, r8, lsr lr
   3ad5c:	andeq	sl, r3, r8, lsr lr
   3ad60:	andeq	sl, r3, r8, lsr lr
   3ad64:	andeq	sl, r3, r8, lsr lr
   3ad68:	andeq	sl, r3, r8, lsr lr
   3ad6c:	andeq	sl, r3, r8, lsr lr
   3ad70:	andeq	sl, r3, r8, lsr lr
   3ad74:	andeq	sl, r3, r8, lsr lr
   3ad78:	andeq	sl, r3, r8, lsr lr
   3ad7c:	andeq	sl, r3, r8, lsr lr
   3ad80:	andeq	sl, r3, r8, lsr lr
   3ad84:	andeq	sl, r3, r8, lsr lr
   3ad88:	andeq	sl, r3, r8, lsr lr
   3ad8c:	andeq	sl, r3, r8, lsr lr
   3ad90:	andeq	sl, r3, r8, lsr lr
   3ad94:	andeq	sl, r3, r8, lsr lr
   3ad98:	andeq	sl, r3, r8, lsr lr
   3ad9c:	andeq	sl, r3, r8, lsr lr
   3ada0:	andeq	sl, r3, r8, lsr lr
   3ada4:	andeq	sl, r3, r8, lsr lr
   3ada8:	andeq	sl, r3, r8, lsr lr
   3adac:	andeq	sl, r3, r8, lsr lr
   3adb0:	andeq	sl, r3, r8, lsr lr
   3adb4:	andeq	sl, r3, r8, lsr lr
   3adb8:	andeq	sl, r3, r8, lsr lr
   3adbc:	andeq	sl, r3, r8, lsr lr
   3adc0:	andeq	sl, r3, r8, lsr lr
   3adc4:			; <UNDEFINED> instruction: 0x0003b4b0
   3adc8:	andeq	fp, r3, r0, asr r4
   3adcc:	andeq	fp, r3, r8, lsr r4
   3add0:	andeq	fp, r3, r0, lsr #8
   3add4:	andeq	fp, r3, r8, lsl #8
   3add8:	andeq	fp, r3, r0, lsl #9
   3addc:	andeq	fp, r3, r8, ror #8
   3ade0:	andeq	sl, r3, r8, lsr lr
   3ade4:	andeq	sl, r3, r8, lsr lr
   3ade8:	andeq	sl, r3, r8, lsr lr
   3adec:	andeq	sl, r3, r8, lsr lr
   3adf0:	andeq	sl, r3, r8, lsr lr
   3adf4:	andeq	sl, r3, r8, lsr lr
   3adf8:	andeq	sl, r3, r8, lsr lr
   3adfc:	andeq	sl, r3, r8, lsr lr
   3ae00:	andeq	sl, r3, r8, lsr lr
   3ae04:	muleq	r3, r8, r4
   3ae08:	muleq	r3, ip, r3
   3ae0c:	andeq	fp, r3, r8, ror #5
   3ae10:	andeq	fp, r3, ip, lsr #4
   3ae14:	andeq	fp, r3, r4, lsr #3
   3ae18:	ldrdeq	fp, [r3], -ip
   3ae1c:	andeq	fp, r3, ip, lsr #1
   3ae20:	andeq	fp, r3, r0, asr #32
   3ae24:	andeq	fp, r3, r8, lsr #32
   3ae28:			; <UNDEFINED> instruction: 0x0003afbc
   3ae2c:	andeq	sl, r3, ip, asr #30
   3ae30:	strdeq	sl, [r3], -r4
   3ae34:	andeq	sl, r3, r0, lsl #29
   3ae38:	sub	r2, r2, #224	; 0xe0
   3ae3c:	cmp	r2, #31
   3ae40:	bls	3c124 <__assert_fail@plt+0x2ad20>
   3ae44:	movw	r1, #32624	; 0x7f70
   3ae48:	movt	r1, #7
   3ae4c:	mov	r0, #0
   3ae50:	mov	r2, #5
   3ae54:	bl	11170 <dcgettext@plt>
   3ae58:	mov	r1, r0
   3ae5c:	mov	r0, #1
   3ae60:	bl	1132c <__printf_chk@plt>
   3ae64:	ldr	r2, [sp, #44]	; 0x2c
   3ae68:	mov	r0, r9
   3ae6c:	ldr	r3, [r7]
   3ae70:	cmp	r2, r3
   3ae74:	bne	3c740 <__assert_fail@plt+0x2b33c>
   3ae78:	add	sp, sp, #52	; 0x34
   3ae7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ae80:	mov	r2, #0
   3ae84:	mov	r3, r6
   3ae88:	add	r1, sp, #40	; 0x28
   3ae8c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3ae90:	ldr	ip, [sp, #36]	; 0x24
   3ae94:	mov	r3, r1
   3ae98:	ldr	r1, [sp, #40]	; 0x28
   3ae9c:	mov	r2, r0
   3aea0:	mov	r0, #0
   3aea4:	str	r0, [sp]
   3aea8:	movw	r0, #18952	; 0x4a08
   3aeac:	movt	r0, #6
   3aeb0:	add	r1, ip, r1
   3aeb4:	str	r1, [sp, #36]	; 0x24
   3aeb8:	bl	389e0 <__assert_fail@plt+0x275dc>
   3aebc:	movw	r1, #32416	; 0x7ea0
   3aec0:	movt	r1, #7
   3aec4:	mov	r2, r0
   3aec8:	mov	r0, #1
   3aecc:	bl	1132c <__printf_chk@plt>
   3aed0:	ldr	r3, [sp, #36]	; 0x24
   3aed4:	cmp	r6, r3
   3aed8:	bls	3aa2c <__assert_fail@plt+0x29628>
   3aedc:	movw	r1, #32648	; 0x7f88
   3aee0:	mov	r0, #1
   3aee4:	movt	r1, #7
   3aee8:	bl	1132c <__printf_chk@plt>
   3aeec:	ldr	r3, [sp, #36]	; 0x24
   3aef0:	b	3aa2c <__assert_fail@plt+0x29628>
   3aef4:	mov	r2, #0
   3aef8:	mov	r3, r6
   3aefc:	add	r1, sp, #40	; 0x28
   3af00:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3af04:	ldr	ip, [sp, #36]	; 0x24
   3af08:	mov	r3, r1
   3af0c:	ldr	r1, [sp, #40]	; 0x28
   3af10:	mov	r2, r0
   3af14:	mov	r0, #0
   3af18:	str	r0, [sp]
   3af1c:	movw	r0, #18952	; 0x4a08
   3af20:	movt	r0, #6
   3af24:	add	r1, ip, r1
   3af28:	str	r1, [sp, #36]	; 0x24
   3af2c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3af30:	movw	r1, #32388	; 0x7e84
   3af34:	movt	r1, #7
   3af38:	mov	r2, r0
   3af3c:	mov	r0, #1
   3af40:	bl	1132c <__printf_chk@plt>
   3af44:	ldr	r3, [sp, #36]	; 0x24
   3af48:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3af4c:	add	r3, r3, #5
   3af50:	cmp	r6, r3
   3af54:	bls	3c3c8 <__assert_fail@plt+0x2afc4>
   3af58:	mov	r1, #4
   3af5c:	movw	r3, #26492	; 0x677c
   3af60:	movt	r3, #9
   3af64:	ldr	r3, [r3]
   3af68:	blx	r3
   3af6c:	mov	r3, r1
   3af70:	ldr	r1, [sp, #36]	; 0x24
   3af74:	mov	r2, r0
   3af78:	ldrd	r4, [sp, #96]	; 0x60
   3af7c:	mov	ip, #0
   3af80:	movw	r0, #18952	; 0x4a08
   3af84:	str	ip, [sp]
   3af88:	adds	r2, r2, r4
   3af8c:	movt	r0, #6
   3af90:	adc	r3, r3, r5
   3af94:	add	r1, r1, #4
   3af98:	str	r1, [sp, #36]	; 0x24
   3af9c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3afa0:	movw	r1, #32356	; 0x7e64
   3afa4:	movt	r1, #7
   3afa8:	mov	r2, r0
   3afac:	mov	r0, #1
   3afb0:	bl	1132c <__printf_chk@plt>
   3afb4:	ldr	r3, [sp, #36]	; 0x24
   3afb8:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3afbc:	mov	r2, #0
   3afc0:	mov	r3, r6
   3afc4:	add	r1, sp, #40	; 0x28
   3afc8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3afcc:	ldr	r2, [sp, #36]	; 0x24
   3afd0:	ldr	r3, [sp, #40]	; 0x28
   3afd4:	add	r3, r2, r3
   3afd8:	str	r3, [sp, #36]	; 0x24
   3afdc:	orrs	r5, r0, r1
   3afe0:	moveq	r2, r0
   3afe4:	moveq	r3, r1
   3afe8:	beq	3aff8 <__assert_fail@plt+0x29bf4>
   3afec:	ldrd	r2, [sp, #96]	; 0x60
   3aff0:	adds	r2, r2, r0
   3aff4:	adc	r3, r3, r1
   3aff8:	mov	r1, #0
   3affc:	movw	r0, #18952	; 0x4a08
   3b000:	str	r1, [sp]
   3b004:	movt	r0, #6
   3b008:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b00c:	movw	r1, #32324	; 0x7e44
   3b010:	movt	r1, #7
   3b014:	mov	r2, r0
   3b018:	mov	r0, #1
   3b01c:	bl	1132c <__printf_chk@plt>
   3b020:	ldr	r3, [sp, #36]	; 0x24
   3b024:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b028:	movw	r1, #32568	; 0x7f38
   3b02c:	mov	r0, #1
   3b030:	movt	r1, #7
   3b034:	bl	1132c <__printf_chk@plt>
   3b038:	ldr	r3, [sp, #36]	; 0x24
   3b03c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b040:	mov	r2, #0
   3b044:	mov	r3, r6
   3b048:	add	r1, sp, #40	; 0x28
   3b04c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b050:	ldr	r2, [sp, #36]	; 0x24
   3b054:	ldr	r3, [sp, #40]	; 0x28
   3b058:	add	r3, r2, r3
   3b05c:	str	r3, [sp, #36]	; 0x24
   3b060:	orrs	r4, r0, r1
   3b064:	moveq	r2, r0
   3b068:	moveq	r3, r1
   3b06c:	beq	3b07c <__assert_fail@plt+0x29c78>
   3b070:	ldrd	r2, [sp, #96]	; 0x60
   3b074:	adds	r2, r2, r0
   3b078:	adc	r3, r3, r1
   3b07c:	mov	r1, #0
   3b080:	movw	r0, #18952	; 0x4a08
   3b084:	str	r1, [sp]
   3b088:	movt	r0, #6
   3b08c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b090:	movw	r1, #32296	; 0x7e28
   3b094:	movt	r1, #7
   3b098:	mov	r2, r0
   3b09c:	mov	r0, #1
   3b0a0:	bl	1132c <__printf_chk@plt>
   3b0a4:	ldr	r3, [sp, #36]	; 0x24
   3b0a8:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b0ac:	add	r3, r3, #2
   3b0b0:	cmp	r6, r3
   3b0b4:	bhi	3c3f0 <__assert_fail@plt+0x2afec>
   3b0b8:	cmp	r6, r0
   3b0bc:	bls	3b0d0 <__assert_fail@plt+0x29ccc>
   3b0c0:	rsb	r1, r0, r6
   3b0c4:	sub	r3, r1, #1
   3b0c8:	cmp	r3, #7
   3b0cc:	bls	3c3f4 <__assert_fail@plt+0x2aff0>
   3b0d0:	mov	r3, r0
   3b0d4:	mov	r2, #0
   3b0d8:	b	3c40c <__assert_fail@plt+0x2b008>
   3b0dc:	mov	r2, #0
   3b0e0:	mov	r3, r6
   3b0e4:	add	r1, sp, #40	; 0x28
   3b0e8:	mov	r4, r2
   3b0ec:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b0f0:	ldr	ip, [sp, #36]	; 0x24
   3b0f4:	ldr	r3, [sp, #40]	; 0x28
   3b0f8:	str	r4, [sp]
   3b0fc:	add	r3, ip, r3
   3b100:	str	r3, [sp, #36]	; 0x24
   3b104:	mov	r2, r0
   3b108:	mov	r3, r1
   3b10c:	mov	r5, r0
   3b110:	movw	r0, #64404	; 0xfb94
   3b114:	movt	r0, #5
   3b118:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b11c:	mov	r1, #1
   3b120:	mov	r2, r0
   3b124:	mov	r0, r5
   3b128:	str	r2, [sp, #28]
   3b12c:	bl	39964 <__assert_fail@plt+0x28560>
   3b130:	ldr	r2, [sp, #28]
   3b134:	movw	r1, #32236	; 0x7dec
   3b138:	movt	r1, #7
   3b13c:	mov	r3, r0
   3b140:	mov	r0, #1
   3b144:	bl	1132c <__printf_chk@plt>
   3b148:	mov	r2, r4
   3b14c:	mov	r3, r6
   3b150:	add	r1, sp, #40	; 0x28
   3b154:	ldr	r0, [sp, #36]	; 0x24
   3b158:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b15c:	ldr	r2, [sp, #36]	; 0x24
   3b160:	ldr	r3, [sp, #40]	; 0x28
   3b164:	str	r4, [sp]
   3b168:	add	r3, r2, r3
   3b16c:	str	r3, [sp, #36]	; 0x24
   3b170:	ldrd	r2, [sp, #96]	; 0x60
   3b174:	adds	r2, r2, r0
   3b178:	movw	r0, #18952	; 0x4a08
   3b17c:	adc	r3, r3, r1
   3b180:	movt	r0, #6
   3b184:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b188:	movw	r1, #31764	; 0x7c14
   3b18c:	movt	r1, #7
   3b190:	mov	r2, r0
   3b194:	mov	r0, #1
   3b198:	bl	1132c <__printf_chk@plt>
   3b19c:	ldr	r3, [sp, #36]	; 0x24
   3b1a0:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b1a4:	mov	r2, #0
   3b1a8:	mov	r3, r6
   3b1ac:	add	r1, sp, #40	; 0x28
   3b1b0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b1b4:	ldr	r2, [sp, #36]	; 0x24
   3b1b8:	ldr	r3, [sp, #40]	; 0x28
   3b1bc:	mov	ip, #0
   3b1c0:	str	ip, [sp]
   3b1c4:	add	r3, r2, r3
   3b1c8:	str	r3, [sp, #36]	; 0x24
   3b1cc:	ldrd	r2, [sp, #96]	; 0x60
   3b1d0:	adds	r2, r2, r0
   3b1d4:	movw	r0, #18952	; 0x4a08
   3b1d8:	adc	r3, r3, r1
   3b1dc:	movt	r0, #6
   3b1e0:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b1e4:	movw	r1, #32204	; 0x7dcc
   3b1e8:	movt	r1, #7
   3b1ec:	mov	r2, r0
   3b1f0:	mov	r0, #1
   3b1f4:	bl	1132c <__printf_chk@plt>
   3b1f8:	ldr	r0, [sp, #36]	; 0x24
   3b1fc:	add	ip, r0, #1
   3b200:	cmp	r6, ip
   3b204:	bhi	3c44c <__assert_fail@plt+0x2b048>
   3b208:	cmp	r6, r0
   3b20c:	bls	3b220 <__assert_fail@plt+0x29e1c>
   3b210:	rsb	r1, r0, r6
   3b214:	sub	r3, r1, #1
   3b218:	cmp	r3, #7
   3b21c:	bls	3c450 <__assert_fail@plt+0x2b04c>
   3b220:	mov	r2, #0
   3b224:	mov	r3, #0
   3b228:	b	3c470 <__assert_fail@plt+0x2b06c>
   3b22c:	mov	r2, #0
   3b230:	mov	r3, r6
   3b234:	add	r1, sp, #40	; 0x28
   3b238:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b23c:	ldr	r2, [sp, #36]	; 0x24
   3b240:	ldr	r3, [sp, #40]	; 0x28
   3b244:	add	r3, r2, r3
   3b248:	str	r3, [sp, #36]	; 0x24
   3b24c:	rsb	r3, r3, r6
   3b250:	mov	r2, r3
   3b254:	asr	r3, r3, #31
   3b258:	mov	r4, r0
   3b25c:	mov	r5, r1
   3b260:	cmp	r5, r3
   3b264:	cmpeq	r4, r2
   3b268:	movw	r1, #32176	; 0x7db0
   3b26c:	mov	r0, #1
   3b270:	movt	r1, #7
   3b274:	movhi	r4, r2
   3b278:	movhi	r5, r3
   3b27c:	bl	1132c <__printf_chk@plt>
   3b280:	ldrd	r2, [sp, #96]	; 0x60
   3b284:	strd	r4, [sp]
   3b288:	mov	r1, r8
   3b28c:	ldr	r0, [sp, #36]	; 0x24
   3b290:	strd	r2, [sp, #8]
   3b294:	mov	r2, sl
   3b298:	ldr	r3, [sp, #32]
   3b29c:	str	r3, [sp, #16]
   3b2a0:	mov	r3, fp
   3b2a4:	bl	3a9e8 <__assert_fail@plt+0x295e4>
   3b2a8:	movw	r3, #16696	; 0x4138
   3b2ac:	movt	r3, #9
   3b2b0:	ldr	r1, [r3]
   3b2b4:	cmp	r0, #0
   3b2b8:	mov	r0, #41	; 0x29
   3b2bc:	movne	r9, #1
   3b2c0:	bl	111ac <_IO_putc@plt>
   3b2c4:	ldr	r3, [sp, #36]	; 0x24
   3b2c8:	add	r4, r3, r4
   3b2cc:	cmp	r6, r4
   3b2d0:	strcc	r6, [sp, #36]	; 0x24
   3b2d4:	movcc	r3, r6
   3b2d8:	bcc	3aa2c <__assert_fail@plt+0x29628>
   3b2dc:	mov	r3, r4
   3b2e0:	str	r4, [sp, #36]	; 0x24
   3b2e4:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b2e8:	cmn	fp, #1
   3b2ec:	beq	3c720 <__assert_fail@plt+0x2b31c>
   3b2f0:	cmp	fp, #2
   3b2f4:	beq	3c590 <__assert_fail@plt+0x2b18c>
   3b2f8:	cmp	sl, #8
   3b2fc:	movls	r1, sl
   3b300:	bhi	3c4fc <__assert_fail@plt+0x2b0f8>
   3b304:	add	r3, r0, r1
   3b308:	cmp	r6, r3
   3b30c:	bls	3c48c <__assert_fail@plt+0x2b088>
   3b310:	sub	r3, r1, #1
   3b314:	cmp	r3, #7
   3b318:	bls	3c688 <__assert_fail@plt+0x2b284>
   3b31c:	mov	r2, #0
   3b320:	mov	r3, #0
   3b324:	add	r0, r0, sl
   3b328:	str	r0, [sp, #36]	; 0x24
   3b32c:	mov	r4, #0
   3b330:	movw	r0, #18952	; 0x4a08
   3b334:	str	r4, [sp]
   3b338:	movt	r0, #6
   3b33c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b340:	mov	r2, #1
   3b344:	mov	r3, r6
   3b348:	add	r1, sp, #40	; 0x28
   3b34c:	mov	r5, r0
   3b350:	ldr	r0, [sp, #36]	; 0x24
   3b354:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b358:	str	r4, [sp]
   3b35c:	mov	r2, r0
   3b360:	mov	r3, r1
   3b364:	movw	r0, #15492	; 0x3c84
   3b368:	movt	r0, #6
   3b36c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b370:	mov	r2, r5
   3b374:	movw	r1, #32136	; 0x7d88
   3b378:	movt	r1, #7
   3b37c:	mov	r3, r0
   3b380:	mov	r0, #1
   3b384:	bl	1132c <__printf_chk@plt>
   3b388:	ldr	r2, [sp, #36]	; 0x24
   3b38c:	ldr	r3, [sp, #40]	; 0x28
   3b390:	add	r3, r2, r3
   3b394:	str	r3, [sp, #36]	; 0x24
   3b398:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b39c:	cmp	r6, r0
   3b3a0:	ldr	r5, [sp, #32]
   3b3a4:	addhi	r2, r3, #2
   3b3a8:	strhi	r2, [sp, #36]	; 0x24
   3b3ac:	ldrbhi	ip, [r3, #1]
   3b3b0:	movls	ip, #0
   3b3b4:	add	r3, r5, #16
   3b3b8:	add	r2, r5, #12
   3b3bc:	str	r6, [sp]
   3b3c0:	add	r0, sp, #36	; 0x24
   3b3c4:	mov	r1, ip
   3b3c8:	str	ip, [sp, #28]
   3b3cc:	bl	3a0f4 <__assert_fail@plt+0x28cf0>
   3b3d0:	ldr	ip, [sp, #28]
   3b3d4:	mov	r2, ip
   3b3d8:	mov	r4, r0
   3b3dc:	mov	r5, r1
   3b3e0:	mov	r0, #1
   3b3e4:	movw	r1, #32052	; 0x7d34
   3b3e8:	movt	r1, #7
   3b3ec:	bl	1132c <__printf_chk@plt>
   3b3f0:	mov	r0, r4
   3b3f4:	mov	r1, r5
   3b3f8:	mov	r2, r8
   3b3fc:	bl	38ad4 <__assert_fail@plt+0x276d0>
   3b400:	ldr	r3, [sp, #36]	; 0x24
   3b404:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b408:	movw	r1, #32508	; 0x7efc
   3b40c:	mov	r0, #1
   3b410:	movt	r1, #7
   3b414:	bl	1132c <__printf_chk@plt>
   3b418:	ldr	r3, [sp, #36]	; 0x24
   3b41c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b420:	movw	r1, #32488	; 0x7ee8
   3b424:	mov	r0, #1
   3b428:	movt	r1, #7
   3b42c:	bl	1132c <__printf_chk@plt>
   3b430:	ldr	r3, [sp, #36]	; 0x24
   3b434:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b438:	movw	r1, #32468	; 0x7ed4
   3b43c:	mov	r0, #1
   3b440:	movt	r1, #7
   3b444:	bl	1132c <__printf_chk@plt>
   3b448:	ldr	r3, [sp, #36]	; 0x24
   3b44c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b450:	movw	r1, #32448	; 0x7ec0
   3b454:	mov	r0, #1
   3b458:	movt	r1, #7
   3b45c:	bl	1132c <__printf_chk@plt>
   3b460:	ldr	r3, [sp, #36]	; 0x24
   3b464:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b468:	movw	r1, #32552	; 0x7f28
   3b46c:	mov	r0, #1
   3b470:	movt	r1, #7
   3b474:	bl	1132c <__printf_chk@plt>
   3b478:	ldr	r3, [sp, #36]	; 0x24
   3b47c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b480:	movw	r1, #32528	; 0x7f10
   3b484:	mov	r0, #1
   3b488:	movt	r1, #7
   3b48c:	bl	1132c <__printf_chk@plt>
   3b490:	ldr	r3, [sp, #36]	; 0x24
   3b494:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b498:	movw	r1, #32032	; 0x7d20
   3b49c:	mov	r0, #1
   3b4a0:	movt	r1, #7
   3b4a4:	bl	1132c <__printf_chk@plt>
   3b4a8:	ldr	r3, [sp, #36]	; 0x24
   3b4ac:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b4b0:	mov	r2, #5
   3b4b4:	movw	r1, #31984	; 0x7cf0
   3b4b8:	mov	r0, #0
   3b4bc:	movt	r1, #7
   3b4c0:	bl	11170 <dcgettext@plt>
   3b4c4:	mov	r1, r0
   3b4c8:	mov	r0, #1
   3b4cc:	bl	1132c <__printf_chk@plt>
   3b4d0:	ldr	r3, [sp, #36]	; 0x24
   3b4d4:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b4d8:	movw	r1, #31940	; 0x7cc4
   3b4dc:	mov	r0, #1
   3b4e0:	movt	r1, #7
   3b4e4:	bl	1132c <__printf_chk@plt>
   3b4e8:	ldr	r3, [sp, #36]	; 0x24
   3b4ec:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b4f0:	movw	r1, #31960	; 0x7cd8
   3b4f4:	mov	r0, #1
   3b4f8:	movt	r1, #7
   3b4fc:	bl	1132c <__printf_chk@plt>
   3b500:	mov	r2, #0
   3b504:	mov	r3, r6
   3b508:	ldr	r0, [sp, #36]	; 0x24
   3b50c:	add	r1, sp, #40	; 0x28
   3b510:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b514:	str	r6, [sp]
   3b518:	mov	r3, r1
   3b51c:	mov	r2, r0
   3b520:	ldr	r1, [sp, #40]	; 0x28
   3b524:	ldr	r0, [sp, #36]	; 0x24
   3b528:	add	r0, r0, r1
   3b52c:	str	r0, [sp, #36]	; 0x24
   3b530:	bl	39dd0 <__assert_fail@plt+0x289cc>
   3b534:	mov	r3, r0
   3b538:	str	r0, [sp, #36]	; 0x24
   3b53c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b540:	movw	r1, #31896	; 0x7c98
   3b544:	mov	r0, #1
   3b548:	movt	r1, #7
   3b54c:	bl	1132c <__printf_chk@plt>
   3b550:	mov	r0, #0
   3b554:	mov	r2, #5
   3b558:	movw	r1, #31916	; 0x7cac
   3b55c:	movt	r1, #7
   3b560:	mov	r4, r0
   3b564:	bl	11170 <dcgettext@plt>
   3b568:	mov	r2, r4
   3b56c:	mov	r3, r6
   3b570:	add	r1, sp, #40	; 0x28
   3b574:	mov	r5, r0
   3b578:	ldr	r0, [sp, #36]	; 0x24
   3b57c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b580:	str	r4, [sp]
   3b584:	mov	r3, r1
   3b588:	mov	r2, r0
   3b58c:	movw	r0, #64404	; 0xfb94
   3b590:	movt	r0, #5
   3b594:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b598:	mov	r1, r5
   3b59c:	mov	r2, r0
   3b5a0:	mov	r0, #1
   3b5a4:	bl	1132c <__printf_chk@plt>
   3b5a8:	ldr	ip, [sp, #36]	; 0x24
   3b5ac:	ldr	r3, [sp, #40]	; 0x28
   3b5b0:	mov	r2, #5
   3b5b4:	mov	r0, r4
   3b5b8:	movw	r1, #31928	; 0x7cb8
   3b5bc:	movt	r1, #7
   3b5c0:	add	r3, ip, r3
   3b5c4:	str	r3, [sp, #36]	; 0x24
   3b5c8:	bl	11170 <dcgettext@plt>
   3b5cc:	mov	r2, r4
   3b5d0:	mov	r3, r6
   3b5d4:	add	r1, sp, #40	; 0x28
   3b5d8:	mov	r5, r0
   3b5dc:	ldr	r0, [sp, #36]	; 0x24
   3b5e0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b5e4:	str	r4, [sp]
   3b5e8:	mov	r2, r0
   3b5ec:	mov	r3, r1
   3b5f0:	movw	r0, #64404	; 0xfb94
   3b5f4:	movt	r0, #5
   3b5f8:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b5fc:	mov	r1, r5
   3b600:	mov	r2, r0
   3b604:	mov	r0, #1
   3b608:	bl	1132c <__printf_chk@plt>
   3b60c:	ldr	r2, [sp, #36]	; 0x24
   3b610:	ldr	r3, [sp, #40]	; 0x28
   3b614:	add	r3, r2, r3
   3b618:	str	r3, [sp, #36]	; 0x24
   3b61c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b620:	movw	r1, #31872	; 0x7c80
   3b624:	mov	r0, #1
   3b628:	movt	r1, #7
   3b62c:	bl	1132c <__printf_chk@plt>
   3b630:	ldr	r3, [sp, #36]	; 0x24
   3b634:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b638:	movw	r1, #31848	; 0x7c68
   3b63c:	mov	r0, #1
   3b640:	movt	r1, #7
   3b644:	bl	1132c <__printf_chk@plt>
   3b648:	ldr	r3, [sp, #36]	; 0x24
   3b64c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b650:	cmn	fp, #1
   3b654:	beq	3c730 <__assert_fail@plt+0x2b32c>
   3b658:	cmp	fp, #2
   3b65c:	beq	3c5c4 <__assert_fail@plt+0x2b1c0>
   3b660:	cmp	sl, #8
   3b664:	movls	r1, sl
   3b668:	bhi	3c4d0 <__assert_fail@plt+0x2b0cc>
   3b66c:	add	r3, r0, r1
   3b670:	cmp	r6, r3
   3b674:	bls	3c49c <__assert_fail@plt+0x2b098>
   3b678:	sub	r3, r1, #1
   3b67c:	cmp	r3, #7
   3b680:	bls	3c6a8 <__assert_fail@plt+0x2b2a4>
   3b684:	mov	r2, #0
   3b688:	mov	r3, #0
   3b68c:	add	r0, r0, sl
   3b690:	str	r0, [sp, #36]	; 0x24
   3b694:	mov	r1, #0
   3b698:	movw	r0, #18952	; 0x4a08
   3b69c:	str	r1, [sp]
   3b6a0:	movt	r0, #6
   3b6a4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b6a8:	movw	r1, #31824	; 0x7c50
   3b6ac:	movt	r1, #7
   3b6b0:	mov	r2, r0
   3b6b4:	mov	r0, #1
   3b6b8:	bl	1132c <__printf_chk@plt>
   3b6bc:	ldr	r3, [sp, #36]	; 0x24
   3b6c0:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b6c4:	add	r3, r3, #5
   3b6c8:	cmp	r6, r3
   3b6cc:	bls	3c3a8 <__assert_fail@plt+0x2afa4>
   3b6d0:	mov	r1, #4
   3b6d4:	bl	4bee4 <warn@@Base+0x4f8>
   3b6d8:	mov	r3, r1
   3b6dc:	ldr	r1, [sp, #36]	; 0x24
   3b6e0:	mov	r2, r0
   3b6e4:	ldrd	r4, [sp, #96]	; 0x60
   3b6e8:	mov	ip, #0
   3b6ec:	movw	r0, #18952	; 0x4a08
   3b6f0:	str	ip, [sp]
   3b6f4:	adds	r2, r2, r4
   3b6f8:	movt	r0, #6
   3b6fc:	adc	r3, r3, r5
   3b700:	add	r1, r1, #4
   3b704:	str	r1, [sp, #36]	; 0x24
   3b708:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b70c:	movw	r1, #31772	; 0x7c1c
   3b710:	movt	r1, #7
   3b714:	mov	r2, r0
   3b718:	mov	r0, #1
   3b71c:	bl	1132c <__printf_chk@plt>
   3b720:	ldr	r3, [sp, #36]	; 0x24
   3b724:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b728:	add	r3, r3, #3
   3b72c:	cmp	r6, r3
   3b730:	bls	3c388 <__assert_fail@plt+0x2af84>
   3b734:	mov	r1, #2
   3b738:	bl	4bee4 <warn@@Base+0x4f8>
   3b73c:	mov	r3, r1
   3b740:	ldr	r1, [sp, #36]	; 0x24
   3b744:	mov	r2, r0
   3b748:	ldrd	r4, [sp, #96]	; 0x60
   3b74c:	mov	ip, #0
   3b750:	movw	r0, #18952	; 0x4a08
   3b754:	str	ip, [sp]
   3b758:	adds	r2, r2, r4
   3b75c:	movt	r0, #6
   3b760:	adc	r3, r3, r5
   3b764:	add	r1, r1, #2
   3b768:	str	r1, [sp, #36]	; 0x24
   3b76c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b770:	movw	r1, #31752	; 0x7c08
   3b774:	movt	r1, #7
   3b778:	mov	r2, r0
   3b77c:	mov	r0, #1
   3b780:	bl	1132c <__printf_chk@plt>
   3b784:	ldr	r3, [sp, #36]	; 0x24
   3b788:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b78c:	movw	r1, #31724	; 0x7bec
   3b790:	mov	r0, #1
   3b794:	movt	r1, #7
   3b798:	bl	1132c <__printf_chk@plt>
   3b79c:	ldr	r3, [sp, #36]	; 0x24
   3b7a0:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b7a4:	movw	r1, #31712	; 0x7be0
   3b7a8:	mov	r0, #1
   3b7ac:	movt	r1, #7
   3b7b0:	bl	1132c <__printf_chk@plt>
   3b7b4:	ldr	r3, [sp, #36]	; 0x24
   3b7b8:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b7bc:	add	r3, r3, #2
   3b7c0:	cmp	r6, r3
   3b7c4:	bhi	3c34c <__assert_fail@plt+0x2af48>
   3b7c8:	cmp	r6, r0
   3b7cc:	bls	3b7e0 <__assert_fail@plt+0x2a3dc>
   3b7d0:	rsb	r1, r0, r6
   3b7d4:	sub	r3, r1, #1
   3b7d8:	cmp	r3, #7
   3b7dc:	bls	3c350 <__assert_fail@plt+0x2af4c>
   3b7e0:	mov	r3, r0
   3b7e4:	mov	r2, #0
   3b7e8:	b	3c368 <__assert_fail@plt+0x2af64>
   3b7ec:	add	r3, r3, #2
   3b7f0:	cmp	r6, r3
   3b7f4:	bhi	3c310 <__assert_fail@plt+0x2af0c>
   3b7f8:	cmp	r6, r0
   3b7fc:	bls	3b810 <__assert_fail@plt+0x2a40c>
   3b800:	rsb	r1, r0, r6
   3b804:	sub	r3, r1, #1
   3b808:	cmp	r3, #7
   3b80c:	bls	3c314 <__assert_fail@plt+0x2af10>
   3b810:	mov	r3, r0
   3b814:	mov	r2, #0
   3b818:	b	3c32c <__assert_fail@plt+0x2af28>
   3b81c:	mov	r2, #0
   3b820:	mov	r3, r6
   3b824:	add	r1, sp, #40	; 0x28
   3b828:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b82c:	mov	r2, r0
   3b830:	mov	r3, r1
   3b834:	movw	r0, #64404	; 0xfb94
   3b838:	mov	r1, #0
   3b83c:	movt	r0, #5
   3b840:	str	r1, [sp]
   3b844:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b848:	movw	r1, #31648	; 0x7ba0
   3b84c:	movt	r1, #7
   3b850:	mov	r2, r0
   3b854:	mov	r0, #1
   3b858:	b	3b608 <__assert_fail@plt+0x2a204>
   3b85c:	mov	r2, #0
   3b860:	mov	r3, r6
   3b864:	add	r1, sp, #40	; 0x28
   3b868:	mov	r4, r2
   3b86c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b870:	ldr	ip, [sp, #36]	; 0x24
   3b874:	ldr	r3, [sp, #40]	; 0x28
   3b878:	str	r4, [sp]
   3b87c:	add	r3, ip, r3
   3b880:	str	r3, [sp, #36]	; 0x24
   3b884:	mov	r2, r0
   3b888:	mov	r3, r1
   3b88c:	mov	r5, r0
   3b890:	movw	r0, #64404	; 0xfb94
   3b894:	movt	r0, #5
   3b898:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b89c:	mov	r1, #1
   3b8a0:	mov	ip, r0
   3b8a4:	mov	r0, r5
   3b8a8:	str	ip, [sp, #28]
   3b8ac:	bl	39964 <__assert_fail@plt+0x28560>
   3b8b0:	mov	r2, #1
   3b8b4:	mov	r3, r6
   3b8b8:	add	r1, sp, #40	; 0x28
   3b8bc:	mov	r5, r0
   3b8c0:	ldr	r0, [sp, #36]	; 0x24
   3b8c4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b8c8:	str	r4, [sp]
   3b8cc:	mov	r2, r0
   3b8d0:	mov	r3, r1
   3b8d4:	movw	r0, #15492	; 0x3c84
   3b8d8:	movt	r0, #6
   3b8dc:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b8e0:	ldr	ip, [sp, #28]
   3b8e4:	movw	r1, #31624	; 0x7b88
   3b8e8:	movt	r1, #7
   3b8ec:	mov	r3, r5
   3b8f0:	mov	r2, ip
   3b8f4:	str	r0, [sp]
   3b8f8:	mov	r0, #1
   3b8fc:	bl	1132c <__printf_chk@plt>
   3b900:	ldr	r2, [sp, #36]	; 0x24
   3b904:	ldr	r3, [sp, #40]	; 0x28
   3b908:	add	r3, r2, r3
   3b90c:	str	r3, [sp, #36]	; 0x24
   3b910:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b914:	mov	r2, #1
   3b918:	mov	r3, r6
   3b91c:	add	r1, sp, #40	; 0x28
   3b920:	mov	r9, #1
   3b924:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b928:	mov	r2, r0
   3b92c:	mov	r3, r1
   3b930:	movw	r0, #15492	; 0x3c84
   3b934:	mov	r1, #0
   3b938:	movt	r0, #6
   3b93c:	str	r1, [sp]
   3b940:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b944:	movw	r1, #31608	; 0x7b78
   3b948:	movt	r1, #7
   3b94c:	mov	r2, r0
   3b950:	mov	r0, r9
   3b954:	b	3b608 <__assert_fail@plt+0x2a204>
   3b958:	mov	r2, #0
   3b95c:	mov	r3, r6
   3b960:	add	r1, sp, #40	; 0x28
   3b964:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b968:	ldr	ip, [sp, #36]	; 0x24
   3b96c:	ldr	r3, [sp, #40]	; 0x28
   3b970:	add	r3, ip, r3
   3b974:	str	r3, [sp, #36]	; 0x24
   3b978:	mov	r2, r0
   3b97c:	mov	r3, r1
   3b980:	mov	r4, r0
   3b984:	mov	r0, #0
   3b988:	str	r0, [sp]
   3b98c:	movw	r0, #64404	; 0xfb94
   3b990:	movt	r0, #5
   3b994:	bl	389e0 <__assert_fail@plt+0x275dc>
   3b998:	mov	r1, #1
   3b99c:	mov	r5, r0
   3b9a0:	mov	r0, r4
   3b9a4:	bl	39964 <__assert_fail@plt+0x28560>
   3b9a8:	mov	r2, r5
   3b9ac:	movw	r1, #31588	; 0x7b64
   3b9b0:	movt	r1, #7
   3b9b4:	mov	r3, r0
   3b9b8:	mov	r0, #1
   3b9bc:	bl	1132c <__printf_chk@plt>
   3b9c0:	ldr	r3, [sp, #36]	; 0x24
   3b9c4:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3b9c8:	sub	r4, r2, #112	; 0x70
   3b9cc:	mov	r1, #1
   3b9d0:	mov	r0, r4
   3b9d4:	bl	39964 <__assert_fail@plt+0x28560>
   3b9d8:	mov	r2, #1
   3b9dc:	mov	r3, r6
   3b9e0:	add	r1, sp, #40	; 0x28
   3b9e4:	mov	r5, r0
   3b9e8:	ldr	r0, [sp, #36]	; 0x24
   3b9ec:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3b9f0:	mov	r2, r0
   3b9f4:	mov	r3, r1
   3b9f8:	movw	r0, #15492	; 0x3c84
   3b9fc:	mov	r1, #0
   3ba00:	movt	r0, #6
   3ba04:	str	r1, [sp]
   3ba08:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ba0c:	movw	r1, #31564	; 0x7b4c
   3ba10:	mov	r2, r4
   3ba14:	mov	r3, r5
   3ba18:	movt	r1, #7
   3ba1c:	b	3b8f4 <__assert_fail@plt+0x2a4f0>
   3ba20:	sub	r4, r2, #80	; 0x50
   3ba24:	mov	r1, #1
   3ba28:	mov	r0, r4
   3ba2c:	bl	39964 <__assert_fail@plt+0x28560>
   3ba30:	mov	r2, r4
   3ba34:	movw	r1, #31544	; 0x7b38
   3ba38:	movt	r1, #7
   3ba3c:	mov	r3, r0
   3ba40:	mov	r0, #1
   3ba44:	bl	1132c <__printf_chk@plt>
   3ba48:	ldr	r3, [sp, #36]	; 0x24
   3ba4c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3ba50:	sub	r2, r2, #48	; 0x30
   3ba54:	movw	r1, #31532	; 0x7b2c
   3ba58:	mov	r0, #1
   3ba5c:	movt	r1, #7
   3ba60:	bl	1132c <__printf_chk@plt>
   3ba64:	ldr	r3, [sp, #36]	; 0x24
   3ba68:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3ba6c:	add	r3, r3, #3
   3ba70:	cmp	r6, r3
   3ba74:	bls	3c2ec <__assert_fail@plt+0x2aee8>
   3ba78:	mov	r1, #2
   3ba7c:	bl	4bee4 <warn@@Base+0x4f8>
   3ba80:	ldr	r3, [sp, #36]	; 0x24
   3ba84:	mov	r2, r0
   3ba88:	movw	r1, #31516	; 0x7b1c
   3ba8c:	mov	r0, #1
   3ba90:	movt	r1, #7
   3ba94:	add	r3, r3, #2
   3ba98:	str	r3, [sp, #36]	; 0x24
   3ba9c:	bl	1132c <__printf_chk@plt>
   3baa0:	ldr	r3, [sp, #36]	; 0x24
   3baa4:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3baa8:	movw	r1, #31504	; 0x7b10
   3baac:	mov	r0, #1
   3bab0:	movt	r1, #7
   3bab4:	bl	1132c <__printf_chk@plt>
   3bab8:	ldr	r3, [sp, #36]	; 0x24
   3babc:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bac0:	movw	r1, #31492	; 0x7b04
   3bac4:	mov	r0, #1
   3bac8:	movt	r1, #7
   3bacc:	bl	1132c <__printf_chk@plt>
   3bad0:	ldr	r3, [sp, #36]	; 0x24
   3bad4:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bad8:	movw	r1, #31480	; 0x7af8
   3badc:	mov	r0, #1
   3bae0:	movt	r1, #7
   3bae4:	bl	1132c <__printf_chk@plt>
   3bae8:	ldr	r3, [sp, #36]	; 0x24
   3baec:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3baf0:	movw	r1, #31468	; 0x7aec
   3baf4:	mov	r0, #1
   3baf8:	movt	r1, #7
   3bafc:	bl	1132c <__printf_chk@plt>
   3bb00:	ldr	r3, [sp, #36]	; 0x24
   3bb04:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bb08:	movw	r1, #31456	; 0x7ae0
   3bb0c:	mov	r0, #1
   3bb10:	movt	r1, #7
   3bb14:	bl	1132c <__printf_chk@plt>
   3bb18:	ldr	r3, [sp, #36]	; 0x24
   3bb1c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bb20:	movw	r1, #31444	; 0x7ad4
   3bb24:	mov	r0, #1
   3bb28:	movt	r1, #7
   3bb2c:	bl	1132c <__printf_chk@plt>
   3bb30:	ldr	r3, [sp, #36]	; 0x24
   3bb34:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bb38:	add	r3, r3, #3
   3bb3c:	cmp	r6, r3
   3bb40:	bls	3c2c8 <__assert_fail@plt+0x2aec4>
   3bb44:	mov	r1, #2
   3bb48:	bl	4bee4 <warn@@Base+0x4f8>
   3bb4c:	ldr	r3, [sp, #36]	; 0x24
   3bb50:	mov	r2, r0
   3bb54:	movw	r1, #31428	; 0x7ac4
   3bb58:	mov	r0, #1
   3bb5c:	movt	r1, #7
   3bb60:	add	r3, r3, #2
   3bb64:	str	r3, [sp, #36]	; 0x24
   3bb68:	bl	1132c <__printf_chk@plt>
   3bb6c:	ldr	r3, [sp, #36]	; 0x24
   3bb70:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bb74:	movw	r1, #31416	; 0x7ab8
   3bb78:	mov	r0, #1
   3bb7c:	movt	r1, #7
   3bb80:	bl	1132c <__printf_chk@plt>
   3bb84:	ldr	r3, [sp, #36]	; 0x24
   3bb88:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bb8c:	movw	r1, #31404	; 0x7aac
   3bb90:	mov	r0, #1
   3bb94:	movt	r1, #7
   3bb98:	bl	1132c <__printf_chk@plt>
   3bb9c:	ldr	r3, [sp, #36]	; 0x24
   3bba0:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bba4:	movw	r1, #31392	; 0x7aa0
   3bba8:	mov	r0, #1
   3bbac:	movt	r1, #7
   3bbb0:	bl	1132c <__printf_chk@plt>
   3bbb4:	ldr	r3, [sp, #36]	; 0x24
   3bbb8:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bbbc:	movw	r1, #31380	; 0x7a94
   3bbc0:	mov	r0, #1
   3bbc4:	movt	r1, #7
   3bbc8:	bl	1132c <__printf_chk@plt>
   3bbcc:	ldr	r3, [sp, #36]	; 0x24
   3bbd0:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bbd4:	mov	r2, #0
   3bbd8:	mov	r3, r6
   3bbdc:	add	r1, sp, #40	; 0x28
   3bbe0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3bbe4:	mov	r2, r0
   3bbe8:	mov	r3, r1
   3bbec:	movw	r0, #64404	; 0xfb94
   3bbf0:	mov	r1, #0
   3bbf4:	movt	r0, #5
   3bbf8:	str	r1, [sp]
   3bbfc:	bl	389e0 <__assert_fail@plt+0x275dc>
   3bc00:	movw	r1, #31356	; 0x7a7c
   3bc04:	movt	r1, #7
   3bc08:	mov	r2, r0
   3bc0c:	mov	r0, #1
   3bc10:	b	3b608 <__assert_fail@plt+0x2a204>
   3bc14:	movw	r1, #31344	; 0x7a70
   3bc18:	mov	r0, #1
   3bc1c:	movt	r1, #7
   3bc20:	bl	1132c <__printf_chk@plt>
   3bc24:	ldr	r3, [sp, #36]	; 0x24
   3bc28:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bc2c:	movw	r1, #31332	; 0x7a64
   3bc30:	mov	r0, #1
   3bc34:	movt	r1, #7
   3bc38:	bl	1132c <__printf_chk@plt>
   3bc3c:	ldr	r3, [sp, #36]	; 0x24
   3bc40:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bc44:	movw	r1, #31320	; 0x7a58
   3bc48:	mov	r0, #1
   3bc4c:	movt	r1, #7
   3bc50:	bl	1132c <__printf_chk@plt>
   3bc54:	ldr	r3, [sp, #36]	; 0x24
   3bc58:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bc5c:	movw	r1, #31308	; 0x7a4c
   3bc60:	mov	r0, #1
   3bc64:	movt	r1, #7
   3bc68:	bl	1132c <__printf_chk@plt>
   3bc6c:	ldr	r3, [sp, #36]	; 0x24
   3bc70:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bc74:	movw	r1, #31296	; 0x7a40
   3bc78:	mov	r0, #1
   3bc7c:	movt	r1, #7
   3bc80:	bl	1132c <__printf_chk@plt>
   3bc84:	ldr	r3, [sp, #36]	; 0x24
   3bc88:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bc8c:	movw	r1, #31284	; 0x7a34
   3bc90:	mov	r0, #1
   3bc94:	movt	r1, #7
   3bc98:	bl	1132c <__printf_chk@plt>
   3bc9c:	ldr	r3, [sp, #36]	; 0x24
   3bca0:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bca4:	movw	r1, #31272	; 0x7a28
   3bca8:	mov	r0, #1
   3bcac:	movt	r1, #7
   3bcb0:	bl	1132c <__printf_chk@plt>
   3bcb4:	ldr	r3, [sp, #36]	; 0x24
   3bcb8:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bcbc:	movw	r1, #31260	; 0x7a1c
   3bcc0:	mov	r0, #1
   3bcc4:	movt	r1, #7
   3bcc8:	bl	1132c <__printf_chk@plt>
   3bccc:	ldr	r3, [sp, #36]	; 0x24
   3bcd0:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bcd4:	movw	r1, #31248	; 0x7a10
   3bcd8:	mov	r0, #1
   3bcdc:	movt	r1, #7
   3bce0:	bl	1132c <__printf_chk@plt>
   3bce4:	ldr	r3, [sp, #36]	; 0x24
   3bce8:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bcec:	movw	r1, #31236	; 0x7a04
   3bcf0:	mov	r0, #1
   3bcf4:	movt	r1, #7
   3bcf8:	bl	1132c <__printf_chk@plt>
   3bcfc:	ldr	r3, [sp, #36]	; 0x24
   3bd00:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bd04:	movw	r1, #31220	; 0x79f4
   3bd08:	mov	r0, #1
   3bd0c:	movt	r1, #7
   3bd10:	bl	1132c <__printf_chk@plt>
   3bd14:	ldr	r3, [sp, #36]	; 0x24
   3bd18:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bd1c:	movw	r1, #31208	; 0x79e8
   3bd20:	mov	r0, #1
   3bd24:	movt	r1, #7
   3bd28:	bl	1132c <__printf_chk@plt>
   3bd2c:	ldr	r3, [sp, #36]	; 0x24
   3bd30:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bd34:	movw	r1, #31196	; 0x79dc
   3bd38:	mov	r0, #1
   3bd3c:	movt	r1, #7
   3bd40:	bl	1132c <__printf_chk@plt>
   3bd44:	ldr	r3, [sp, #36]	; 0x24
   3bd48:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bd4c:	add	r3, r3, #2
   3bd50:	cmp	r6, r3
   3bd54:	bhi	3c254 <__assert_fail@plt+0x2ae50>
   3bd58:	cmp	r6, r0
   3bd5c:	bls	3bd70 <__assert_fail@plt+0x2a96c>
   3bd60:	rsb	r1, r0, r6
   3bd64:	sub	r3, r1, #1
   3bd68:	cmp	r3, #7
   3bd6c:	bls	3c258 <__assert_fail@plt+0x2ae54>
   3bd70:	mov	r3, r0
   3bd74:	mov	r2, #0
   3bd78:	b	3c270 <__assert_fail@plt+0x2ae6c>
   3bd7c:	movw	r1, #31168	; 0x79c0
   3bd80:	mov	r0, #1
   3bd84:	movt	r1, #7
   3bd88:	bl	1132c <__printf_chk@plt>
   3bd8c:	ldr	r3, [sp, #36]	; 0x24
   3bd90:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bd94:	movw	r1, #31156	; 0x79b4
   3bd98:	mov	r0, #1
   3bd9c:	movt	r1, #7
   3bda0:	bl	1132c <__printf_chk@plt>
   3bda4:	ldr	r3, [sp, #36]	; 0x24
   3bda8:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bdac:	movw	r1, #31144	; 0x79a8
   3bdb0:	mov	r0, #1
   3bdb4:	movt	r1, #7
   3bdb8:	bl	1132c <__printf_chk@plt>
   3bdbc:	ldr	r3, [sp, #36]	; 0x24
   3bdc0:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bdc4:	mov	r2, #1
   3bdc8:	mov	r3, r6
   3bdcc:	add	r1, sp, #40	; 0x28
   3bdd0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3bdd4:	mov	r2, r0
   3bdd8:	mov	r3, r1
   3bddc:	movw	r0, #15492	; 0x3c84
   3bde0:	mov	r1, #0
   3bde4:	movt	r0, #6
   3bde8:	str	r1, [sp]
   3bdec:	bl	389e0 <__assert_fail@plt+0x275dc>
   3bdf0:	movw	r1, #31124	; 0x7994
   3bdf4:	movt	r1, #7
   3bdf8:	mov	r2, r0
   3bdfc:	mov	r0, #1
   3be00:	b	3b608 <__assert_fail@plt+0x2a204>
   3be04:	mov	r2, #0
   3be08:	mov	r3, r6
   3be0c:	add	r1, sp, #40	; 0x28
   3be10:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3be14:	mov	r2, r0
   3be18:	mov	r3, r1
   3be1c:	movw	r0, #64404	; 0xfb94
   3be20:	mov	r1, #0
   3be24:	movt	r0, #5
   3be28:	str	r1, [sp]
   3be2c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3be30:	movw	r1, #31104	; 0x7980
   3be34:	movt	r1, #7
   3be38:	mov	r2, r0
   3be3c:	mov	r0, #1
   3be40:	b	3b608 <__assert_fail@plt+0x2a204>
   3be44:	add	r3, r3, #5
   3be48:	cmp	r6, r3
   3be4c:	bhi	3c2b4 <__assert_fail@plt+0x2aeb0>
   3be50:	cmp	r6, r0
   3be54:	movls	r3, r0
   3be58:	movls	r2, #0
   3be5c:	bls	3be70 <__assert_fail@plt+0x2aa6c>
   3be60:	subs	r1, r6, r0
   3be64:	moveq	r3, r0
   3be68:	moveq	r2, r1
   3be6c:	bne	3c2b8 <__assert_fail@plt+0x2aeb4>
   3be70:	movw	r1, #31084	; 0x796c
   3be74:	mov	r0, #1
   3be78:	movt	r1, #7
   3be7c:	add	r3, r3, #4
   3be80:	str	r3, [sp, #36]	; 0x24
   3be84:	bl	1132c <__printf_chk@plt>
   3be88:	ldr	r0, [sp, #36]	; 0x24
   3be8c:	add	r3, r0, #4
   3be90:	cmp	r6, r3
   3be94:	bhi	3c528 <__assert_fail@plt+0x2b124>
   3be98:	cmp	r6, r0
   3be9c:	movls	r2, #0
   3bea0:	bls	3beb0 <__assert_fail@plt+0x2aaac>
   3bea4:	subs	r1, r6, r0
   3bea8:	moveq	r2, r1
   3beac:	bne	3c52c <__assert_fail@plt+0x2b128>
   3beb0:	movw	r1, #15308	; 0x3bcc
   3beb4:	mov	r0, #1
   3beb8:	movt	r1, #6
   3bebc:	str	r3, [sp, #36]	; 0x24
   3bec0:	bl	1132c <__printf_chk@plt>
   3bec4:	ldr	r3, [sp, #36]	; 0x24
   3bec8:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3becc:	add	r3, r3, #5
   3bed0:	cmp	r6, r3
   3bed4:	bls	3c290 <__assert_fail@plt+0x2ae8c>
   3bed8:	mov	r1, #4
   3bedc:	movw	r3, #26492	; 0x677c
   3bee0:	movt	r3, #9
   3bee4:	ldr	r3, [r3]
   3bee8:	blx	r3
   3beec:	ldr	r3, [sp, #36]	; 0x24
   3bef0:	mov	r2, r0
   3bef4:	movw	r1, #31060	; 0x7954
   3bef8:	mov	r0, #1
   3befc:	movt	r1, #7
   3bf00:	add	r3, r3, #4
   3bf04:	str	r3, [sp, #36]	; 0x24
   3bf08:	bl	1132c <__printf_chk@plt>
   3bf0c:	ldr	r0, [sp, #36]	; 0x24
   3bf10:	add	r3, r0, #4
   3bf14:	cmp	r6, r3
   3bf18:	bhi	3c540 <__assert_fail@plt+0x2b13c>
   3bf1c:	cmp	r6, r0
   3bf20:	bls	3bf34 <__assert_fail@plt+0x2ab30>
   3bf24:	rsb	r1, r0, r6
   3bf28:	sub	r2, r1, #1
   3bf2c:	cmp	r2, #7
   3bf30:	bls	3c544 <__assert_fail@plt+0x2b140>
   3bf34:	mov	r2, #0
   3bf38:	movw	r1, #31080	; 0x7968
   3bf3c:	mov	r0, #1
   3bf40:	movt	r1, #7
   3bf44:	str	r3, [sp, #36]	; 0x24
   3bf48:	bl	1132c <__printf_chk@plt>
   3bf4c:	ldr	r3, [sp, #36]	; 0x24
   3bf50:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bf54:	add	r3, r3, #5
   3bf58:	cmp	r6, r3
   3bf5c:	bls	3c230 <__assert_fail@plt+0x2ae2c>
   3bf60:	mov	r1, #4
   3bf64:	bl	4bee4 <warn@@Base+0x4f8>
   3bf68:	ldr	r3, [sp, #36]	; 0x24
   3bf6c:	mov	r2, r0
   3bf70:	movw	r1, #31040	; 0x7940
   3bf74:	mov	r0, #1
   3bf78:	movt	r1, #7
   3bf7c:	add	r3, r3, #4
   3bf80:	str	r3, [sp, #36]	; 0x24
   3bf84:	bl	1132c <__printf_chk@plt>
   3bf88:	ldr	r3, [sp, #36]	; 0x24
   3bf8c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bf90:	add	r3, r3, #5
   3bf94:	cmp	r6, r3
   3bf98:	bhi	3c1f4 <__assert_fail@plt+0x2adf0>
   3bf9c:	cmp	r6, r0
   3bfa0:	bls	3bfb4 <__assert_fail@plt+0x2abb0>
   3bfa4:	rsb	r1, r0, r6
   3bfa8:	sub	r3, r1, #1
   3bfac:	cmp	r3, #7
   3bfb0:	bls	3c1f8 <__assert_fail@plt+0x2adf4>
   3bfb4:	mov	r3, r0
   3bfb8:	mov	r2, #0
   3bfbc:	b	3c210 <__assert_fail@plt+0x2ae0c>
   3bfc0:	add	r3, r3, #3
   3bfc4:	cmp	r6, r3
   3bfc8:	bls	3c1d0 <__assert_fail@plt+0x2adcc>
   3bfcc:	mov	r1, #2
   3bfd0:	bl	4bee4 <warn@@Base+0x4f8>
   3bfd4:	ldr	r3, [sp, #36]	; 0x24
   3bfd8:	mov	r2, r0
   3bfdc:	movw	r1, #31000	; 0x7918
   3bfe0:	mov	r0, #1
   3bfe4:	movt	r1, #7
   3bfe8:	add	r3, r3, #2
   3bfec:	str	r3, [sp, #36]	; 0x24
   3bff0:	bl	1132c <__printf_chk@plt>
   3bff4:	ldr	r3, [sp, #36]	; 0x24
   3bff8:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3bffc:	add	r3, r3, #3
   3c000:	cmp	r6, r3
   3c004:	bhi	3c194 <__assert_fail@plt+0x2ad90>
   3c008:	cmp	r6, r0
   3c00c:	bls	3c020 <__assert_fail@plt+0x2ac1c>
   3c010:	rsb	r1, r0, r6
   3c014:	sub	r3, r1, #1
   3c018:	cmp	r3, #7
   3c01c:	bls	3c198 <__assert_fail@plt+0x2ad94>
   3c020:	mov	r3, r0
   3c024:	mov	r2, #0
   3c028:	b	3c1b0 <__assert_fail@plt+0x2adac>
   3c02c:	add	r3, r3, #2
   3c030:	cmp	r6, r3
   3c034:	bls	3c170 <__assert_fail@plt+0x2ad6c>
   3c038:	mov	r1, #1
   3c03c:	bl	4bee4 <warn@@Base+0x4f8>
   3c040:	ldr	r3, [sp, #36]	; 0x24
   3c044:	mov	r2, r0
   3c048:	mov	r0, #1
   3c04c:	movw	r1, #30960	; 0x78f0
   3c050:	movt	r1, #7
   3c054:	add	r3, r3, r0
   3c058:	str	r3, [sp, #36]	; 0x24
   3c05c:	bl	1132c <__printf_chk@plt>
   3c060:	ldr	r3, [sp, #36]	; 0x24
   3c064:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c068:	add	r3, r3, #2
   3c06c:	cmp	r6, r3
   3c070:	bhi	3c134 <__assert_fail@plt+0x2ad30>
   3c074:	cmp	r6, r0
   3c078:	bls	3c08c <__assert_fail@plt+0x2ac88>
   3c07c:	rsb	r1, r0, r6
   3c080:	sub	r3, r1, #1
   3c084:	cmp	r3, #7
   3c088:	bls	3c138 <__assert_fail@plt+0x2ad34>
   3c08c:	mov	r3, r0
   3c090:	mov	r2, #0
   3c094:	b	3c150 <__assert_fail@plt+0x2ad4c>
   3c098:	movw	r1, #30928	; 0x78d0
   3c09c:	mov	r0, #1
   3c0a0:	movt	r1, #7
   3c0a4:	bl	1132c <__printf_chk@plt>
   3c0a8:	ldr	r3, [sp, #36]	; 0x24
   3c0ac:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c0b0:	cmp	r8, #8
   3c0b4:	movls	ip, r0
   3c0b8:	movls	r1, r8
   3c0bc:	bhi	3c564 <__assert_fail@plt+0x2b160>
   3c0c0:	add	r3, ip, r1
   3c0c4:	cmp	r6, r3
   3c0c8:	bhi	3c0d8 <__assert_fail@plt+0x2acd4>
   3c0cc:	cmp	r6, ip
   3c0d0:	bls	3c0e4 <__assert_fail@plt+0x2ace0>
   3c0d4:	rsb	r1, ip, r6
   3c0d8:	sub	r3, r1, #1
   3c0dc:	cmp	r3, #7
   3c0e0:	bls	3c4ac <__assert_fail@plt+0x2b0a8>
   3c0e4:	mov	r2, #0
   3c0e8:	mov	r3, #0
   3c0ec:	mov	r1, #0
   3c0f0:	movw	r0, #18952	; 0x4a08
   3c0f4:	str	r1, [sp]
   3c0f8:	movt	r0, #6
   3c0fc:	add	ip, ip, r8
   3c100:	str	ip, [sp, #36]	; 0x24
   3c104:	bl	389e0 <__assert_fail@plt+0x275dc>
   3c108:	movw	r1, #30912	; 0x78c0
   3c10c:	movt	r1, #7
   3c110:	mov	r2, r0
   3c114:	mov	r0, #1
   3c118:	bl	1132c <__printf_chk@plt>
   3c11c:	ldr	r3, [sp, #36]	; 0x24
   3c120:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c124:	movw	r1, #32596	; 0x7f54
   3c128:	mov	r0, #0
   3c12c:	movt	r1, #7
   3c130:	b	3ae50 <__assert_fail@plt+0x29a4c>
   3c134:	mov	r1, #1
   3c138:	movw	r3, #26492	; 0x677c
   3c13c:	movt	r3, #9
   3c140:	ldr	r3, [r3]
   3c144:	blx	r3
   3c148:	ldr	r3, [sp, #36]	; 0x24
   3c14c:	mov	r2, r0
   3c150:	mov	r0, #1
   3c154:	movw	r1, #30940	; 0x78dc
   3c158:	movt	r1, #7
   3c15c:	add	r3, r3, r0
   3c160:	str	r3, [sp, #36]	; 0x24
   3c164:	bl	1132c <__printf_chk@plt>
   3c168:	ldr	r3, [sp, #36]	; 0x24
   3c16c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c170:	cmp	r6, r0
   3c174:	movls	r3, r0
   3c178:	movls	r2, #0
   3c17c:	bls	3c048 <__assert_fail@plt+0x2ac44>
   3c180:	subs	r1, r6, r0
   3c184:	moveq	r3, r0
   3c188:	moveq	r2, r1
   3c18c:	beq	3c048 <__assert_fail@plt+0x2ac44>
   3c190:	b	3c03c <__assert_fail@plt+0x2ac38>
   3c194:	mov	r1, #2
   3c198:	movw	r3, #26492	; 0x677c
   3c19c:	movt	r3, #9
   3c1a0:	ldr	r3, [r3]
   3c1a4:	blx	r3
   3c1a8:	ldr	r3, [sp, #36]	; 0x24
   3c1ac:	mov	r2, r0
   3c1b0:	movw	r1, #30980	; 0x7904
   3c1b4:	mov	r0, #1
   3c1b8:	movt	r1, #7
   3c1bc:	add	r3, r3, #2
   3c1c0:	str	r3, [sp, #36]	; 0x24
   3c1c4:	bl	1132c <__printf_chk@plt>
   3c1c8:	ldr	r3, [sp, #36]	; 0x24
   3c1cc:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c1d0:	cmp	r6, r0
   3c1d4:	movls	r3, r0
   3c1d8:	movls	r2, #0
   3c1dc:	bls	3bfdc <__assert_fail@plt+0x2abd8>
   3c1e0:	subs	r1, r6, r0
   3c1e4:	moveq	r3, r0
   3c1e8:	moveq	r2, r1
   3c1ec:	beq	3bfdc <__assert_fail@plt+0x2abd8>
   3c1f0:	b	3bfd0 <__assert_fail@plt+0x2abcc>
   3c1f4:	mov	r1, #4
   3c1f8:	movw	r3, #26492	; 0x677c
   3c1fc:	movt	r3, #9
   3c200:	ldr	r3, [r3]
   3c204:	blx	r3
   3c208:	ldr	r3, [sp, #36]	; 0x24
   3c20c:	mov	r2, r0
   3c210:	movw	r1, #31020	; 0x792c
   3c214:	mov	r0, #1
   3c218:	movt	r1, #7
   3c21c:	add	r3, r3, #4
   3c220:	str	r3, [sp, #36]	; 0x24
   3c224:	bl	1132c <__printf_chk@plt>
   3c228:	ldr	r3, [sp, #36]	; 0x24
   3c22c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c230:	cmp	r6, r0
   3c234:	movls	r3, r0
   3c238:	movls	r2, #0
   3c23c:	bls	3bf70 <__assert_fail@plt+0x2ab6c>
   3c240:	subs	r1, r6, r0
   3c244:	moveq	r3, r0
   3c248:	moveq	r2, r1
   3c24c:	beq	3bf70 <__assert_fail@plt+0x2ab6c>
   3c250:	b	3bf64 <__assert_fail@plt+0x2ab60>
   3c254:	mov	r1, #1
   3c258:	movw	r3, #26492	; 0x677c
   3c25c:	movt	r3, #9
   3c260:	ldr	r3, [r3]
   3c264:	blx	r3
   3c268:	ldr	r3, [sp, #36]	; 0x24
   3c26c:	mov	r2, r0
   3c270:	mov	r0, #1
   3c274:	movw	r1, #31180	; 0x79cc
   3c278:	movt	r1, #7
   3c27c:	add	r3, r3, r0
   3c280:	str	r3, [sp, #36]	; 0x24
   3c284:	bl	1132c <__printf_chk@plt>
   3c288:	ldr	r3, [sp, #36]	; 0x24
   3c28c:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c290:	cmp	r6, r0
   3c294:	bls	3c2a8 <__assert_fail@plt+0x2aea4>
   3c298:	rsb	r1, r0, r6
   3c29c:	sub	r3, r1, #1
   3c2a0:	cmp	r3, #7
   3c2a4:	bls	3bedc <__assert_fail@plt+0x2aad8>
   3c2a8:	mov	r3, r0
   3c2ac:	mov	r2, #0
   3c2b0:	b	3bef4 <__assert_fail@plt+0x2aaf0>
   3c2b4:	mov	r1, #4
   3c2b8:	bl	4bee4 <warn@@Base+0x4f8>
   3c2bc:	ldr	r3, [sp, #36]	; 0x24
   3c2c0:	mov	r2, r0
   3c2c4:	b	3be70 <__assert_fail@plt+0x2aa6c>
   3c2c8:	cmp	r6, r0
   3c2cc:	movls	r3, r0
   3c2d0:	movls	r2, #0
   3c2d4:	bls	3bb54 <__assert_fail@plt+0x2a750>
   3c2d8:	subs	r1, r6, r0
   3c2dc:	moveq	r3, r0
   3c2e0:	moveq	r2, r1
   3c2e4:	beq	3bb54 <__assert_fail@plt+0x2a750>
   3c2e8:	b	3bb48 <__assert_fail@plt+0x2a744>
   3c2ec:	cmp	r6, r0
   3c2f0:	movls	r3, r0
   3c2f4:	movls	r2, #0
   3c2f8:	bls	3ba88 <__assert_fail@plt+0x2a684>
   3c2fc:	subs	r1, r6, r0
   3c300:	moveq	r3, r0
   3c304:	moveq	r2, r1
   3c308:	beq	3ba88 <__assert_fail@plt+0x2a684>
   3c30c:	b	3ba7c <__assert_fail@plt+0x2a678>
   3c310:	mov	r1, #1
   3c314:	movw	r3, #26492	; 0x677c
   3c318:	movt	r3, #9
   3c31c:	ldr	r3, [r3]
   3c320:	blx	r3
   3c324:	ldr	r3, [sp, #36]	; 0x24
   3c328:	mov	r2, r0
   3c32c:	mov	r0, #1
   3c330:	movw	r1, #31664	; 0x7bb0
   3c334:	movt	r1, #7
   3c338:	add	r3, r3, r0
   3c33c:	str	r3, [sp, #36]	; 0x24
   3c340:	bl	1132c <__printf_chk@plt>
   3c344:	ldr	r3, [sp, #36]	; 0x24
   3c348:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c34c:	mov	r1, #1
   3c350:	movw	r3, #26492	; 0x677c
   3c354:	movt	r3, #9
   3c358:	ldr	r3, [r3]
   3c35c:	blx	r3
   3c360:	ldr	r3, [sp, #36]	; 0x24
   3c364:	mov	r2, r0
   3c368:	mov	r0, #1
   3c36c:	movw	r1, #31688	; 0x7bc8
   3c370:	movt	r1, #7
   3c374:	add	r3, r3, r0
   3c378:	str	r3, [sp, #36]	; 0x24
   3c37c:	bl	1132c <__printf_chk@plt>
   3c380:	ldr	r3, [sp, #36]	; 0x24
   3c384:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c388:	cmp	r6, r0
   3c38c:	bls	3c5f8 <__assert_fail@plt+0x2b1f4>
   3c390:	subs	r1, r6, r0
   3c394:	moveq	r2, #0
   3c398:	moveq	r3, #0
   3c39c:	moveq	r1, r0
   3c3a0:	beq	3b748 <__assert_fail@plt+0x2a344>
   3c3a4:	b	3b738 <__assert_fail@plt+0x2a334>
   3c3a8:	cmp	r6, r0
   3c3ac:	bls	3c618 <__assert_fail@plt+0x2b214>
   3c3b0:	subs	r1, r6, r0
   3c3b4:	moveq	r2, #0
   3c3b8:	moveq	r3, #0
   3c3bc:	moveq	r1, r0
   3c3c0:	beq	3b6e4 <__assert_fail@plt+0x2a2e0>
   3c3c4:	b	3b6d4 <__assert_fail@plt+0x2a2d0>
   3c3c8:	cmp	r6, r0
   3c3cc:	bls	3c608 <__assert_fail@plt+0x2b204>
   3c3d0:	rsb	r1, r0, r6
   3c3d4:	sub	r3, r1, #1
   3c3d8:	cmp	r3, #7
   3c3dc:	movhi	r2, #0
   3c3e0:	movhi	r3, #0
   3c3e4:	movhi	r1, r0
   3c3e8:	bhi	3af78 <__assert_fail@plt+0x29b74>
   3c3ec:	b	3af5c <__assert_fail@plt+0x29b58>
   3c3f0:	mov	r1, #1
   3c3f4:	movw	r3, #26492	; 0x677c
   3c3f8:	movt	r3, #9
   3c3fc:	ldr	r3, [r3]
   3c400:	blx	r3
   3c404:	ldr	r3, [sp, #36]	; 0x24
   3c408:	mov	r2, r0
   3c40c:	mov	r0, #1
   3c410:	movw	r1, #32268	; 0x7e0c
   3c414:	movt	r1, #7
   3c418:	add	r3, r3, r0
   3c41c:	str	r3, [sp, #36]	; 0x24
   3c420:	bl	1132c <__printf_chk@plt>
   3c424:	mov	r2, #0
   3c428:	mov	r3, r6
   3c42c:	ldr	r0, [sp, #36]	; 0x24
   3c430:	add	r1, sp, #40	; 0x28
   3c434:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3c438:	mov	ip, #0
   3c43c:	ldr	r2, [sp, #36]	; 0x24
   3c440:	ldr	r3, [sp, #40]	; 0x28
   3c444:	str	ip, [sp]
   3c448:	b	3b168 <__assert_fail@plt+0x29d64>
   3c44c:	mov	r1, #1
   3c450:	movw	r3, #26492	; 0x677c
   3c454:	movt	r3, #9
   3c458:	ldr	r3, [r3]
   3c45c:	blx	r3
   3c460:	ldr	ip, [sp, #36]	; 0x24
   3c464:	add	ip, ip, #1
   3c468:	mov	r2, r0
   3c46c:	mov	r3, r1
   3c470:	str	r6, [sp]
   3c474:	mov	r0, ip
   3c478:	str	ip, [sp, #36]	; 0x24
   3c47c:	bl	39dd0 <__assert_fail@plt+0x289cc>
   3c480:	mov	r3, r0
   3c484:	str	r0, [sp, #36]	; 0x24
   3c488:	b	3aed4 <__assert_fail@plt+0x29ad0>
   3c48c:	cmp	r6, r0
   3c490:	bls	3b31c <__assert_fail@plt+0x29f18>
   3c494:	rsb	r1, r0, r6
   3c498:	b	3b310 <__assert_fail@plt+0x29f0c>
   3c49c:	cmp	r6, r0
   3c4a0:	bls	3b684 <__assert_fail@plt+0x2a280>
   3c4a4:	rsb	r1, r0, r6
   3c4a8:	b	3b678 <__assert_fail@plt+0x2a274>
   3c4ac:	movw	r3, #26492	; 0x677c
   3c4b0:	movt	r3, #9
   3c4b4:	mov	r0, ip
   3c4b8:	ldr	r3, [r3]
   3c4bc:	blx	r3
   3c4c0:	ldr	ip, [sp, #36]	; 0x24
   3c4c4:	mov	r2, r0
   3c4c8:	mov	r3, r1
   3c4cc:	b	3c0ec <__assert_fail@plt+0x2ace8>
   3c4d0:	mov	r2, #5
   3c4d4:	movw	r1, #30836	; 0x7874
   3c4d8:	mov	r0, #0
   3c4dc:	movt	r1, #7
   3c4e0:	bl	11170 <dcgettext@plt>
   3c4e4:	mov	r1, sl
   3c4e8:	mov	r2, #8
   3c4ec:	bl	4b2b0 <error@@Base>
   3c4f0:	ldr	r0, [sp, #36]	; 0x24
   3c4f4:	mov	r1, #8
   3c4f8:	b	3b66c <__assert_fail@plt+0x2a268>
   3c4fc:	mov	r2, #5
   3c500:	movw	r1, #30836	; 0x7874
   3c504:	mov	r0, #0
   3c508:	movt	r1, #7
   3c50c:	bl	11170 <dcgettext@plt>
   3c510:	mov	r1, sl
   3c514:	mov	r2, #8
   3c518:	bl	4b2b0 <error@@Base>
   3c51c:	ldr	r0, [sp, #36]	; 0x24
   3c520:	mov	r1, #8
   3c524:	b	3b304 <__assert_fail@plt+0x29f00>
   3c528:	mov	r1, #4
   3c52c:	bl	4bee4 <warn@@Base+0x4f8>
   3c530:	ldr	r3, [sp, #36]	; 0x24
   3c534:	add	r3, r3, #4
   3c538:	mov	r2, r0
   3c53c:	b	3beb0 <__assert_fail@plt+0x2aaac>
   3c540:	mov	r1, #4
   3c544:	movw	r3, #26492	; 0x677c
   3c548:	movt	r3, #9
   3c54c:	ldr	r3, [r3]
   3c550:	blx	r3
   3c554:	ldr	r3, [sp, #36]	; 0x24
   3c558:	add	r3, r3, #4
   3c55c:	mov	r2, r0
   3c560:	b	3bf38 <__assert_fail@plt+0x2ab34>
   3c564:	mov	r2, #5
   3c568:	movw	r1, #30836	; 0x7874
   3c56c:	mov	r0, #0
   3c570:	movt	r1, #7
   3c574:	bl	11170 <dcgettext@plt>
   3c578:	mov	r1, r8
   3c57c:	mov	r2, #8
   3c580:	bl	4b2b0 <error@@Base>
   3c584:	ldr	ip, [sp, #36]	; 0x24
   3c588:	mov	r1, #8
   3c58c:	b	3c0c0 <__assert_fail@plt+0x2acbc>
   3c590:	cmp	r8, #8
   3c594:	movls	r1, r8
   3c598:	bhi	3c6f4 <__assert_fail@plt+0x2b2f0>
   3c59c:	add	r3, r0, r1
   3c5a0:	cmp	r6, r3
   3c5a4:	bhi	3c62c <__assert_fail@plt+0x2b228>
   3c5a8:	cmp	r6, r0
   3c5ac:	bhi	3c628 <__assert_fail@plt+0x2b224>
   3c5b0:	mov	r2, #0
   3c5b4:	mov	r3, #0
   3c5b8:	add	r0, r0, r8
   3c5bc:	str	r0, [sp, #36]	; 0x24
   3c5c0:	b	3b32c <__assert_fail@plt+0x29f28>
   3c5c4:	cmp	r8, #8
   3c5c8:	movls	r1, r8
   3c5cc:	bhi	3c6c8 <__assert_fail@plt+0x2b2c4>
   3c5d0:	add	r3, r0, r1
   3c5d4:	cmp	r6, r3
   3c5d8:	bhi	3c65c <__assert_fail@plt+0x2b258>
   3c5dc:	cmp	r6, r0
   3c5e0:	bhi	3c658 <__assert_fail@plt+0x2b254>
   3c5e4:	mov	r2, #0
   3c5e8:	mov	r3, #0
   3c5ec:	add	r0, r0, r8
   3c5f0:	str	r0, [sp, #36]	; 0x24
   3c5f4:	b	3b694 <__assert_fail@plt+0x2a290>
   3c5f8:	mov	r1, r0
   3c5fc:	mov	r2, #0
   3c600:	mov	r3, #0
   3c604:	b	3b748 <__assert_fail@plt+0x2a344>
   3c608:	mov	r1, r0
   3c60c:	mov	r2, #0
   3c610:	mov	r3, #0
   3c614:	b	3af78 <__assert_fail@plt+0x29b74>
   3c618:	mov	r1, r0
   3c61c:	mov	r2, #0
   3c620:	mov	r3, #0
   3c624:	b	3b6e4 <__assert_fail@plt+0x2a2e0>
   3c628:	rsb	r1, r0, r6
   3c62c:	sub	r3, r1, #1
   3c630:	cmp	r3, #7
   3c634:	bhi	3c5b0 <__assert_fail@plt+0x2b1ac>
   3c638:	movw	r3, #26492	; 0x677c
   3c63c:	movt	r3, #9
   3c640:	ldr	r3, [r3]
   3c644:	blx	r3
   3c648:	mov	r2, r0
   3c64c:	mov	r3, r1
   3c650:	ldr	r0, [sp, #36]	; 0x24
   3c654:	b	3c5b8 <__assert_fail@plt+0x2b1b4>
   3c658:	rsb	r1, r0, r6
   3c65c:	sub	r3, r1, #1
   3c660:	cmp	r3, #7
   3c664:	bhi	3c5e4 <__assert_fail@plt+0x2b1e0>
   3c668:	movw	r3, #26492	; 0x677c
   3c66c:	movt	r3, #9
   3c670:	ldr	r3, [r3]
   3c674:	blx	r3
   3c678:	mov	r2, r0
   3c67c:	mov	r3, r1
   3c680:	ldr	r0, [sp, #36]	; 0x24
   3c684:	b	3c5ec <__assert_fail@plt+0x2b1e8>
   3c688:	movw	r3, #26492	; 0x677c
   3c68c:	movt	r3, #9
   3c690:	ldr	r3, [r3]
   3c694:	blx	r3
   3c698:	mov	r2, r0
   3c69c:	mov	r3, r1
   3c6a0:	ldr	r0, [sp, #36]	; 0x24
   3c6a4:	b	3b324 <__assert_fail@plt+0x29f20>
   3c6a8:	movw	r3, #26492	; 0x677c
   3c6ac:	movt	r3, #9
   3c6b0:	ldr	r3, [r3]
   3c6b4:	blx	r3
   3c6b8:	mov	r2, r0
   3c6bc:	mov	r3, r1
   3c6c0:	ldr	r0, [sp, #36]	; 0x24
   3c6c4:	b	3b68c <__assert_fail@plt+0x2a288>
   3c6c8:	mov	r2, #5
   3c6cc:	movw	r1, #30836	; 0x7874
   3c6d0:	mov	r0, #0
   3c6d4:	movt	r1, #7
   3c6d8:	bl	11170 <dcgettext@plt>
   3c6dc:	mov	r1, r8
   3c6e0:	mov	r2, #8
   3c6e4:	bl	4b2b0 <error@@Base>
   3c6e8:	ldr	r0, [sp, #36]	; 0x24
   3c6ec:	mov	r1, #8
   3c6f0:	b	3c5d0 <__assert_fail@plt+0x2b1cc>
   3c6f4:	mov	r2, #5
   3c6f8:	movw	r1, #30836	; 0x7874
   3c6fc:	mov	r0, #0
   3c700:	movt	r1, #7
   3c704:	bl	11170 <dcgettext@plt>
   3c708:	mov	r1, r8
   3c70c:	mov	r2, #8
   3c710:	bl	4b2b0 <error@@Base>
   3c714:	ldr	r0, [sp, #36]	; 0x24
   3c718:	mov	r1, #8
   3c71c:	b	3c59c <__assert_fail@plt+0x2b198>
   3c720:	movw	r1, #32092	; 0x7d5c
   3c724:	mov	r0, #0
   3c728:	movt	r1, #7
   3c72c:	b	3ae50 <__assert_fail@plt+0x29a4c>
   3c730:	movw	r1, #31792	; 0x7c30
   3c734:	mov	r0, #0
   3c738:	movt	r1, #7
   3c73c:	b	3ae50 <__assert_fail@plt+0x29a4c>
   3c740:	bl	1117c <__stack_chk_fail@plt>
   3c744:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c748:	movw	r4, #26456	; 0x6758
   3c74c:	movt	r4, #9
   3c750:	movw	r5, #16680	; 0x4128
   3c754:	movt	r5, #9
   3c758:	sub	sp, sp, #172	; 0xac
   3c75c:	ldr	r3, [r4]
   3c760:	ldr	r1, [r5]
   3c764:	cmp	r3, #0
   3c768:	ldr	r7, [r0, #12]
   3c76c:	ldr	r2, [r0, #24]
   3c770:	moveq	r3, #1
   3c774:	str	r4, [sp, #108]	; 0x6c
   3c778:	str	r5, [sp, #104]	; 0x68
   3c77c:	add	r9, r7, r2
   3c780:	str	r0, [sp, #88]	; 0x58
   3c784:	str	r1, [sp, #164]	; 0xa4
   3c788:	streq	r3, [r4]
   3c78c:	bne	3cb18 <__assert_fail@plt+0x2b714>
   3c790:	mov	r2, #5
   3c794:	movw	r1, #32652	; 0x7f8c
   3c798:	mov	r0, #0
   3c79c:	movt	r1, #7
   3c7a0:	bl	11170 <dcgettext@plt>
   3c7a4:	ldr	r6, [sp, #88]	; 0x58
   3c7a8:	ldr	r2, [r6, #8]
   3c7ac:	mov	r1, r0
   3c7b0:	mov	r0, #1
   3c7b4:	bl	1132c <__printf_chk@plt>
   3c7b8:	cmp	r7, r9
   3c7bc:	bcs	3e96c <__assert_fail@plt+0x2d568>
   3c7c0:	movw	ip, #24696	; 0x6078
   3c7c4:	add	r4, sp, #120	; 0x78
   3c7c8:	movt	ip, #9
   3c7cc:	str	r4, [sp, #96]	; 0x60
   3c7d0:	str	ip, [sp, #60]	; 0x3c
   3c7d4:	mov	sl, r7
   3c7d8:	mov	fp, r9
   3c7dc:	str	r7, [sp, #56]	; 0x38
   3c7e0:	b	3c80c <__assert_fail@plt+0x2b408>
   3c7e4:	movw	r1, #33536	; 0x8300
   3c7e8:	mov	r0, #0
   3c7ec:	movt	r1, #7
   3c7f0:	mov	r2, #5
   3c7f4:	bl	11170 <dcgettext@plt>
   3c7f8:	mov	r1, r0
   3c7fc:	mov	r0, #1
   3c800:	bl	1132c <__printf_chk@plt>
   3c804:	cmp	fp, sl
   3c808:	bls	3e964 <__assert_fail@plt+0x2d560>
   3c80c:	ldr	r6, [sp, #88]	; 0x58
   3c810:	movw	r1, #26976	; 0x6960
   3c814:	mov	r2, #12
   3c818:	movt	r1, #6
   3c81c:	ldr	r5, [r6, #8]
   3c820:	mov	r0, r5
   3c824:	bl	113e0 <strncmp@plt>
   3c828:	subs	r4, r0, #0
   3c82c:	bne	3d150 <__assert_fail@plt+0x2bd4c>
   3c830:	mov	r0, r5
   3c834:	movw	r1, #32696	; 0x7fb8
   3c838:	movt	r1, #7
   3c83c:	bl	110f8 <strcmp@plt>
   3c840:	cmp	r0, #0
   3c844:	beq	3d150 <__assert_fail@plt+0x2bd4c>
   3c848:	movw	r7, #24696	; 0x6078
   3c84c:	movt	r7, #9
   3c850:	add	ip, r7, #1440	; 0x5a0
   3c854:	ldr	lr, [sp, #96]	; 0x60
   3c858:	add	ip, ip, #8
   3c85c:	str	fp, [sp, #112]	; 0x70
   3c860:	ldm	ip!, {r0, r1, r2, r3}
   3c864:	stmia	lr!, {r0, r1, r2, r3}
   3c868:	ldm	ip!, {r0, r1, r2, r3}
   3c86c:	stmia	lr!, {r0, r1, r2, r3}
   3c870:	ldm	ip, {r0, r1}
   3c874:	stm	lr, {r0, r1}
   3c878:	ldrb	r0, [sp, #152]	; 0x98
   3c87c:	cmp	r0, #0
   3c880:	beq	3f09c <__assert_fail@plt+0x2dc98>
   3c884:	ldrb	ip, [sp, #146]	; 0x92
   3c888:	mov	r0, #1488	; 0x5d0
   3c88c:	strb	r4, [r7, #1516]	; 0x5ec
   3c890:	mov	r1, #1
   3c894:	str	r4, [sp, #84]	; 0x54
   3c898:	mov	r2, #0
   3c89c:	str	r4, [r7, #1504]	; 0x5e0
   3c8a0:	mov	r3, #0
   3c8a4:	str	r4, [r7, #1512]	; 0x5e8
   3c8a8:	strb	r4, [r7, #1517]	; 0x5ed
   3c8ac:	str	r4, [r7, #1520]	; 0x5f0
   3c8b0:	mov	r4, fp
   3c8b4:	str	ip, [r7, #1508]	; 0x5e4
   3c8b8:	strd	r2, [r7, r0]
   3c8bc:	str	r1, [r7, #1496]	; 0x5d8
   3c8c0:	str	r1, [r7, #1500]	; 0x5dc
   3c8c4:	cmp	sl, r4
   3c8c8:	bcs	3c7e4 <__assert_fail@plt+0x2b3e0>
   3c8cc:	mov	r2, #5
   3c8d0:	movw	r1, #33568	; 0x8320
   3c8d4:	mov	r0, #0
   3c8d8:	movt	r1, #7
   3c8dc:	bl	11170 <dcgettext@plt>
   3c8e0:	mov	r1, r0
   3c8e4:	mov	r0, #1
   3c8e8:	bl	1132c <__printf_chk@plt>
   3c8ec:	ldr	r3, [sp, #112]	; 0x70
   3c8f0:	cmp	sl, r3
   3c8f4:	movwcs	ip, #16696	; 0x4138
   3c8f8:	movtcs	ip, #9
   3c8fc:	strcs	ip, [sp, #80]	; 0x50
   3c900:	bcs	3cbc8 <__assert_fail@plt+0x2b7c4>
   3c904:	movw	r4, #16696	; 0x4138
   3c908:	str	fp, [sp, #100]	; 0x64
   3c90c:	movt	r4, #9
   3c910:	mov	r8, r7
   3c914:	str	r4, [sp, #80]	; 0x50
   3c918:	b	3caac <__assert_fail@plt+0x2b6a8>
   3c91c:	rsb	sl, r0, r4
   3c920:	ldrb	r1, [sp, #152]	; 0x98
   3c924:	mov	r5, #0
   3c928:	uxtb	sl, sl
   3c92c:	mov	r0, sl
   3c930:	bl	52568 <zcfree@@Base+0xf38>
   3c934:	ldrb	r6, [sp, #145]	; 0x91
   3c938:	cmp	r6, #1
   3c93c:	uxtb	r7, r0
   3c940:	uxtb	r4, r7
   3c944:	strd	r4, [sp, #48]	; 0x30
   3c948:	beq	3d0d0 <__assert_fail@plt+0x2bccc>
   3c94c:	ldrb	r2, [r8, #1516]	; 0x5ec
   3c950:	uxtb	r6, r6
   3c954:	ldrd	r4, [sp, #48]	; 0x30
   3c958:	mov	r3, #0
   3c95c:	mov	r7, #0
   3c960:	mov	fp, #1488	; 0x5d0
   3c964:	adds	r4, r4, r2
   3c968:	mov	r2, r6
   3c96c:	adc	r5, r5, r3
   3c970:	mov	r3, r7
   3c974:	mov	r0, r4
   3c978:	mov	r1, r5
   3c97c:	bl	529fc <zcfree@@Base+0x13cc>
   3c980:	ldrb	r2, [sp, #144]	; 0x90
   3c984:	mov	r3, #0
   3c988:	strd	r2, [sp, #72]	; 0x48
   3c98c:	mov	r3, r7
   3c990:	ldr	r7, [sp, #72]	; 0x48
   3c994:	mov	r2, r6
   3c998:	ldr	ip, [sp, #72]	; 0x48
   3c99c:	umull	r6, r7, r0, r7
   3c9a0:	mov	r0, r4
   3c9a4:	mla	r1, r1, ip, r7
   3c9a8:	strd	r6, [sp, #32]
   3c9ac:	ldrd	r6, [r8, fp]
   3c9b0:	str	r1, [sp, #36]	; 0x24
   3c9b4:	mov	r1, r5
   3c9b8:	ldrd	r4, [sp, #32]
   3c9bc:	adds	r4, r4, r6
   3c9c0:	adc	r5, r5, r7
   3c9c4:	strd	r4, [r8, fp]
   3c9c8:	bl	529fc <zcfree@@Base+0x13cc>
   3c9cc:	movw	r1, #33660	; 0x837c
   3c9d0:	mov	r0, #0
   3c9d4:	movt	r1, #7
   3c9d8:	mov	r7, #0
   3c9dc:	strb	r2, [r8, #1516]	; 0x5ec
   3c9e0:	mov	r2, #5
   3c9e4:	bl	11170 <dcgettext@plt>
   3c9e8:	ldrd	r2, [sp, #48]	; 0x30
   3c9ec:	str	r7, [sp]
   3c9f0:	mov	r5, r0
   3c9f4:	movw	r0, #64404	; 0xfb94
   3c9f8:	movt	r0, #5
   3c9fc:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ca00:	ldrd	r2, [r8, fp]
   3ca04:	str	r7, [sp]
   3ca08:	mov	r4, r0
   3ca0c:	movw	r0, #18952	; 0x4a08
   3ca10:	movt	r0, #6
   3ca14:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ca18:	ldrb	ip, [r8, #1516]	; 0x5ec
   3ca1c:	mov	r1, r5
   3ca20:	mov	r3, r4
   3ca24:	mov	r2, sl
   3ca28:	stm	sp, {r0, ip}
   3ca2c:	mov	r0, #1
   3ca30:	bl	1132c <__printf_chk@plt>
   3ca34:	mov	r0, sl
   3ca38:	ldrb	r1, [sp, #152]	; 0x98
   3ca3c:	bl	52754 <zcfree@@Base+0x1124>
   3ca40:	ldr	r4, [sp, #148]	; 0x94
   3ca44:	ldr	r3, [r8, #1500]	; 0x5dc
   3ca48:	mov	r2, #5
   3ca4c:	mov	r0, #0
   3ca50:	mov	sl, r9
   3ca54:	uxtab	r4, r4, r1
   3ca58:	movw	r1, #33716	; 0x83b4
   3ca5c:	movt	r1, #7
   3ca60:	add	r3, r4, r3
   3ca64:	str	r3, [r8, #1500]	; 0x5dc
   3ca68:	bl	11170 <dcgettext@plt>
   3ca6c:	asr	r3, r4, #31
   3ca70:	mov	r2, r4
   3ca74:	mov	r1, #0
   3ca78:	str	r1, [sp]
   3ca7c:	mov	r5, r0
   3ca80:	movw	r0, #15492	; 0x3c84
   3ca84:	movt	r0, #6
   3ca88:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ca8c:	mov	r1, r5
   3ca90:	ldr	r3, [r8, #1500]	; 0x5dc
   3ca94:	mov	r2, r0
   3ca98:	mov	r0, #1
   3ca9c:	bl	1132c <__printf_chk@plt>
   3caa0:	ldr	r3, [sp, #112]	; 0x70
   3caa4:	cmp	r3, sl
   3caa8:	bls	3cbc4 <__assert_fail@plt+0x2b7c0>
   3caac:	ldr	r5, [sp, #56]	; 0x38
   3cab0:	movw	r1, #33596	; 0x833c
   3cab4:	mov	r0, #1
   3cab8:	movt	r1, #7
   3cabc:	rsb	r2, r5, sl
   3cac0:	add	r9, sl, #1
   3cac4:	bl	1132c <__printf_chk@plt>
   3cac8:	ldrb	r4, [sl]
   3cacc:	ldrb	r0, [sp, #153]	; 0x99
   3cad0:	cmp	r4, r0
   3cad4:	bcs	3c91c <__assert_fail@plt+0x2b518>
   3cad8:	cmp	r4, #12
   3cadc:	ldrls	pc, [pc, r4, lsl #2]
   3cae0:	b	3d718 <__assert_fail@plt+0x2c314>
   3cae4:	andeq	sp, r3, r0, rrx
   3cae8:	andeq	ip, r3, r0, lsl pc
   3caec:	strdeq	ip, [r3], -r4
   3caf0:	muleq	r3, r0, sp
   3caf4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   3caf8:	andeq	ip, r3, r0, lsr #30
   3cafc:	andeq	sp, r3, r0
   3cb00:	andeq	ip, r3, r0, ror #26
   3cb04:	andeq	ip, r3, r0, asr #25
   3cb08:	andeq	ip, r3, r4, lsl ip
   3cb0c:	andeq	ip, r3, r4, lsl #24
   3cb10:	ldrdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   3cb14:	andeq	ip, r3, r0, asr fp
   3cb18:	ands	r2, r3, #1
   3cb1c:	streq	r2, [sp, #92]	; 0x5c
   3cb20:	bne	3c790 <__assert_fail@plt+0x2b38c>
   3cb24:	tst	r3, #2
   3cb28:	bne	3d8bc <__assert_fail@plt+0x2c4b8>
   3cb2c:	ldr	r5, [sp, #92]	; 0x5c
   3cb30:	eor	r0, r5, #1
   3cb34:	ldr	ip, [sp, #104]	; 0x68
   3cb38:	ldr	r2, [sp, #164]	; 0xa4
   3cb3c:	ldr	r3, [ip]
   3cb40:	cmp	r2, r3
   3cb44:	bne	3f0f8 <__assert_fail@plt+0x2dcf4>
   3cb48:	add	sp, sp, #172	; 0xac
   3cb4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cb50:	ldr	r3, [sp, #100]	; 0x64
   3cb54:	mov	r2, #0
   3cb58:	mov	r0, r9
   3cb5c:	add	r1, sp, #116	; 0x74
   3cb60:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3cb64:	mov	r2, #5
   3cb68:	ldr	sl, [sp, #116]	; 0x74
   3cb6c:	add	sl, r9, sl
   3cb70:	mov	r4, r0
   3cb74:	mov	r5, r1
   3cb78:	mov	r0, #0
   3cb7c:	movw	r1, #34956	; 0x888c
   3cb80:	movt	r1, #7
   3cb84:	bl	11170 <dcgettext@plt>
   3cb88:	mov	r3, r5
   3cb8c:	mov	r1, #0
   3cb90:	mov	r2, r4
   3cb94:	str	r1, [sp]
   3cb98:	mov	r6, r0
   3cb9c:	movw	r0, #64404	; 0xfb94
   3cba0:	movt	r0, #5
   3cba4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3cba8:	mov	r1, r6
   3cbac:	mov	r2, r0
   3cbb0:	mov	r0, #1
   3cbb4:	bl	1132c <__printf_chk@plt>
   3cbb8:	ldr	r3, [sp, #112]	; 0x70
   3cbbc:	cmp	r3, sl
   3cbc0:	bhi	3caac <__assert_fail@plt+0x2b6a8>
   3cbc4:	ldr	fp, [sp, #100]	; 0x64
   3cbc8:	ldr	r7, [sp, #80]	; 0x50
   3cbcc:	mov	r0, #10
   3cbd0:	ldr	r1, [r7]
   3cbd4:	bl	111ac <_IO_putc@plt>
   3cbd8:	b	3c804 <__assert_fail@plt+0x2b400>
   3cbdc:	movw	r1, #34924	; 0x886c
   3cbe0:	movt	r1, #7
   3cbe4:	mov	r0, #0
   3cbe8:	mov	r2, #5
   3cbec:	mov	sl, r9
   3cbf0:	bl	11170 <dcgettext@plt>
   3cbf4:	mov	r1, r0
   3cbf8:	mov	r0, #1
   3cbfc:	bl	1132c <__printf_chk@plt>
   3cc00:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3cc04:	movw	r1, #34896	; 0x8850
   3cc08:	mov	r0, #0
   3cc0c:	movt	r1, #7
   3cc10:	b	3cbe8 <__assert_fail@plt+0x2b7e4>
   3cc14:	ldr	r4, [sp, #100]	; 0x64
   3cc18:	add	sl, sl, #3
   3cc1c:	cmp	r4, sl
   3cc20:	bhi	3d7e8 <__assert_fail@plt+0x2c3e4>
   3cc24:	cmp	r4, r9
   3cc28:	bls	3cc3c <__assert_fail@plt+0x2b838>
   3cc2c:	rsb	r1, r9, r4
   3cc30:	sub	r3, r1, #1
   3cc34:	cmp	r3, #7
   3cc38:	bls	3d7ec <__assert_fail@plt+0x2c3e8>
   3cc3c:	mov	r4, #0
   3cc40:	mov	r5, #0
   3cc44:	mov	r7, #1488	; 0x5d0
   3cc48:	mov	r6, #0
   3cc4c:	ldrd	r2, [r8, r7]
   3cc50:	mov	r0, r6
   3cc54:	movw	r1, #34848	; 0x8820
   3cc58:	movt	r1, #7
   3cc5c:	adds	r2, r2, r4
   3cc60:	strb	r6, [r8, #1516]	; 0x5ec
   3cc64:	adc	r3, r3, r5
   3cc68:	strd	r2, [r8, r7]
   3cc6c:	mov	r2, #5
   3cc70:	bl	11170 <dcgettext@plt>
   3cc74:	mov	r2, r4
   3cc78:	mov	r3, r5
   3cc7c:	str	r6, [sp]
   3cc80:	mov	r9, r0
   3cc84:	movw	r0, #64404	; 0xfb94
   3cc88:	movt	r0, #5
   3cc8c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3cc90:	ldrd	r2, [r8, r7]
   3cc94:	str	r6, [sp]
   3cc98:	mov	r4, r0
   3cc9c:	movw	r0, #18952	; 0x4a08
   3cca0:	movt	r0, #6
   3cca4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3cca8:	mov	r1, r9
   3ccac:	mov	r2, r4
   3ccb0:	mov	r3, r0
   3ccb4:	mov	r0, #1
   3ccb8:	bl	1132c <__printf_chk@plt>
   3ccbc:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3ccc0:	rsb	r0, r0, #255	; 0xff
   3ccc4:	ldrb	r1, [sp, #152]	; 0x98
   3ccc8:	bl	52774 <zcfree@@Base+0x1144>
   3cccc:	ldrb	fp, [sp, #145]	; 0x91
   3ccd0:	cmp	fp, #0
   3ccd4:	mov	r4, r0
   3ccd8:	asr	r5, r0, #31
   3ccdc:	mov	r6, r0
   3cce0:	strd	r4, [sp, #48]	; 0x30
   3cce4:	beq	3d80c <__assert_fail@plt+0x2c408>
   3cce8:	mov	r7, #1488	; 0x5d0
   3ccec:	ldrb	fp, [sp, #144]	; 0x90
   3ccf0:	ldrd	r4, [r8, r7]
   3ccf4:	mov	r0, #0
   3ccf8:	mov	r2, #5
   3ccfc:	movw	r1, #34764	; 0x87cc
   3cd00:	movt	r1, #7
   3cd04:	mov	sl, r9
   3cd08:	smlal	r4, r5, fp, r6
   3cd0c:	mov	r9, r0
   3cd10:	strd	r4, [r8, r7]
   3cd14:	bl	11170 <dcgettext@plt>
   3cd18:	smull	r2, r3, r6, fp
   3cd1c:	str	r9, [sp]
   3cd20:	mov	r5, r0
   3cd24:	movw	r0, #64404	; 0xfb94
   3cd28:	movt	r0, #5
   3cd2c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3cd30:	ldrd	r2, [r8, r7]
   3cd34:	str	r9, [sp]
   3cd38:	mov	r4, r0
   3cd3c:	movw	r0, #18952	; 0x4a08
   3cd40:	movt	r0, #6
   3cd44:	bl	389e0 <__assert_fail@plt+0x275dc>
   3cd48:	mov	r1, r5
   3cd4c:	mov	r2, r4
   3cd50:	mov	r3, r0
   3cd54:	mov	r0, #1
   3cd58:	bl	1132c <__printf_chk@plt>
   3cd5c:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3cd60:	mov	r2, #5
   3cd64:	movw	r1, #34744	; 0x87b8
   3cd68:	mov	r0, #0
   3cd6c:	movt	r1, #7
   3cd70:	bl	11170 <dcgettext@plt>
   3cd74:	mov	sl, r9
   3cd78:	mov	r1, r0
   3cd7c:	mov	r0, #1
   3cd80:	bl	1132c <__printf_chk@plt>
   3cd84:	mov	r3, #1
   3cd88:	str	r3, [r8, #1512]	; 0x5e8
   3cd8c:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3cd90:	mov	r2, #1
   3cd94:	ldr	r3, [sp, #100]	; 0x64
   3cd98:	mov	r0, r9
   3cd9c:	add	r1, sp, #116	; 0x74
   3cda0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3cda4:	ldr	r3, [r8, #1500]	; 0x5dc
   3cda8:	mov	r2, #5
   3cdac:	ldr	sl, [sp, #116]	; 0x74
   3cdb0:	add	sl, r9, sl
   3cdb4:	mov	r4, r0
   3cdb8:	mov	r6, r1
   3cdbc:	mov	r0, #0
   3cdc0:	movw	r1, #34620	; 0x873c
   3cdc4:	movt	r1, #7
   3cdc8:	add	r3, r3, r4
   3cdcc:	str	r3, [r8, #1500]	; 0x5dc
   3cdd0:	bl	11170 <dcgettext@plt>
   3cdd4:	mov	r1, #0
   3cdd8:	mov	r2, r4
   3cddc:	mov	r3, r6
   3cde0:	str	r1, [sp]
   3cde4:	mov	r5, r0
   3cde8:	movw	r0, #15492	; 0x3c84
   3cdec:	movt	r0, #6
   3cdf0:	b	3ca88 <__assert_fail@plt+0x2b684>
   3cdf4:	mov	r0, r9
   3cdf8:	add	r1, sp, #116	; 0x74
   3cdfc:	mov	r2, #0
   3ce00:	ldr	r3, [sp, #100]	; 0x64
   3ce04:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3ce08:	ldrb	r4, [sp, #145]	; 0x91
   3ce0c:	ldr	sl, [sp, #116]	; 0x74
   3ce10:	cmp	r4, #1
   3ce14:	str	r4, [sp, #72]	; 0x48
   3ce18:	add	sl, r9, sl
   3ce1c:	strd	r0, [sp, #48]	; 0x30
   3ce20:	beq	3e8a4 <__assert_fail@plt+0x2d4a0>
   3ce24:	ldr	r6, [sp, #72]	; 0x48
   3ce28:	mov	r7, #0
   3ce2c:	ldrb	r2, [r8, #1516]	; 0x5ec
   3ce30:	mov	r5, r7
   3ce34:	mov	r3, #0
   3ce38:	mov	fp, #1488	; 0x5d0
   3ce3c:	uxtb	r6, r6
   3ce40:	mov	r4, r6
   3ce44:	ldrd	r6, [sp, #48]	; 0x30
   3ce48:	adds	r6, r6, r2
   3ce4c:	mov	r2, r4
   3ce50:	adc	r7, r7, r3
   3ce54:	mov	r3, r5
   3ce58:	mov	r0, r6
   3ce5c:	strd	r6, [sp, #64]	; 0x40
   3ce60:	mov	r1, r7
   3ce64:	mov	r7, #0
   3ce68:	bl	529fc <zcfree@@Base+0x13cc>
   3ce6c:	ldrb	r6, [sp, #144]	; 0x90
   3ce70:	mov	r2, r4
   3ce74:	mov	r3, r5
   3ce78:	ldrd	r4, [r8, fp]
   3ce7c:	strd	r6, [sp, #72]	; 0x48
   3ce80:	ldr	r9, [sp, #72]	; 0x48
   3ce84:	ldr	ip, [sp, #72]	; 0x48
   3ce88:	umull	r6, r7, r0, r9
   3ce8c:	mov	r9, #0
   3ce90:	adds	r4, r4, r6
   3ce94:	mla	r7, r1, ip, r7
   3ce98:	ldrd	r0, [sp, #64]	; 0x40
   3ce9c:	adc	r5, r5, r7
   3cea0:	strd	r4, [r8, fp]
   3cea4:	bl	529fc <zcfree@@Base+0x13cc>
   3cea8:	movw	r1, #34588	; 0x871c
   3ceac:	mov	r0, r9
   3ceb0:	movt	r1, #7
   3ceb4:	strb	r2, [r8, #1516]	; 0x5ec
   3ceb8:	mov	r2, #5
   3cebc:	bl	11170 <dcgettext@plt>
   3cec0:	ldrd	r2, [sp, #48]	; 0x30
   3cec4:	str	r9, [sp]
   3cec8:	mov	r5, r0
   3cecc:	movw	r0, #64404	; 0xfb94
   3ced0:	movt	r0, #5
   3ced4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ced8:	ldrd	r2, [r8, fp]
   3cedc:	str	r9, [sp]
   3cee0:	mov	r4, r0
   3cee4:	movw	r0, #18952	; 0x4a08
   3cee8:	movt	r0, #6
   3ceec:	bl	389e0 <__assert_fail@plt+0x275dc>
   3cef0:	ldrb	ip, [r8, #1516]	; 0x5ec
   3cef4:	mov	r1, r5
   3cef8:	mov	r2, r4
   3cefc:	str	ip, [sp]
   3cf00:	mov	r3, r0
   3cf04:	mov	r0, #1
   3cf08:	bl	1132c <__printf_chk@plt>
   3cf0c:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3cf10:	movw	r1, #34552	; 0x86f8
   3cf14:	mov	r0, #0
   3cf18:	movt	r1, #7
   3cf1c:	b	3cbe8 <__assert_fail@plt+0x2b7e4>
   3cf20:	ldr	r3, [sp, #100]	; 0x64
   3cf24:	mov	r2, #0
   3cf28:	mov	r0, r9
   3cf2c:	add	r1, sp, #116	; 0x74
   3cf30:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3cf34:	mov	r2, #5
   3cf38:	ldr	sl, [sp, #116]	; 0x74
   3cf3c:	add	sl, r9, sl
   3cf40:	mov	r4, r0
   3cf44:	mov	r6, r1
   3cf48:	mov	r0, #0
   3cf4c:	movw	r1, #34700	; 0x878c
   3cf50:	movt	r1, #7
   3cf54:	bl	11170 <dcgettext@plt>
   3cf58:	mov	r1, #0
   3cf5c:	mov	r3, r6
   3cf60:	mov	r2, r4
   3cf64:	str	r1, [sp]
   3cf68:	mov	r5, r0
   3cf6c:	movw	r0, #64404	; 0xfb94
   3cf70:	movt	r0, #5
   3cf74:	bl	389e0 <__assert_fail@plt+0x275dc>
   3cf78:	mov	r1, r5
   3cf7c:	mov	r2, r0
   3cf80:	mov	r0, #1
   3cf84:	bl	1132c <__printf_chk@plt>
   3cf88:	str	r4, [r8, #1504]	; 0x5e0
   3cf8c:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3cf90:	ldr	r3, [sp, #100]	; 0x64
   3cf94:	mov	r2, #0
   3cf98:	mov	r0, r9
   3cf9c:	add	r1, sp, #116	; 0x74
   3cfa0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3cfa4:	mov	r2, #5
   3cfa8:	ldr	sl, [sp, #116]	; 0x74
   3cfac:	add	sl, r9, sl
   3cfb0:	mov	r4, r0
   3cfb4:	mov	r6, r1
   3cfb8:	mov	r0, #0
   3cfbc:	movw	r1, #34648	; 0x8758
   3cfc0:	movt	r1, #7
   3cfc4:	bl	11170 <dcgettext@plt>
   3cfc8:	mov	r1, #0
   3cfcc:	mov	r3, r6
   3cfd0:	mov	r2, r4
   3cfd4:	str	r1, [sp]
   3cfd8:	mov	r5, r0
   3cfdc:	movw	r0, #15492	; 0x3c84
   3cfe0:	movt	r0, #6
   3cfe4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3cfe8:	mov	r1, r5
   3cfec:	mov	r2, r0
   3cff0:	mov	r0, #1
   3cff4:	bl	1132c <__printf_chk@plt>
   3cff8:	str	r4, [r8, #1496]	; 0x5d8
   3cffc:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3d000:	ldr	r4, [r8, #1508]	; 0x5e4
   3d004:	mov	r0, #0
   3d008:	mov	r2, #5
   3d00c:	movw	r1, #34720	; 0x87a0
   3d010:	subs	r3, r4, r0
   3d014:	movt	r1, #7
   3d018:	rsbs	r4, r3, #0
   3d01c:	mov	sl, r9
   3d020:	adcs	r4, r4, r3
   3d024:	bl	11170 <dcgettext@plt>
   3d028:	mov	r1, #0
   3d02c:	mov	r3, #0
   3d030:	uxtb	r2, r4
   3d034:	str	r1, [sp]
   3d038:	mov	r5, r0
   3d03c:	movw	r0, #15492	; 0x3c84
   3d040:	movt	r0, #6
   3d044:	bl	389e0 <__assert_fail@plt+0x275dc>
   3d048:	mov	r1, r5
   3d04c:	mov	r2, r0
   3d050:	mov	r0, #1
   3d054:	bl	1132c <__printf_chk@plt>
   3d058:	str	r4, [r8, #1508]	; 0x5e4
   3d05c:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3d060:	add	r4, sp, #116	; 0x74
   3d064:	ldr	r3, [sp, #100]	; 0x64
   3d068:	mov	r0, r9
   3d06c:	mov	r2, #0
   3d070:	mov	r1, r4
   3d074:	ldrb	r6, [sp, #146]	; 0x92
   3d078:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3d07c:	ldr	sl, [sp, #116]	; 0x74
   3d080:	ldr	ip, [sp, #100]	; 0x64
   3d084:	add	fp, r9, sl
   3d088:	cmp	ip, fp
   3d08c:	cmpne	r0, #0
   3d090:	mov	r3, r0
   3d094:	movne	r0, #0
   3d098:	moveq	r0, #1
   3d09c:	beq	3d0ac <__assert_fail@plt+0x2bca8>
   3d0a0:	rsb	r2, fp, ip
   3d0a4:	cmp	r3, r2
   3d0a8:	bls	3e668 <__assert_fail@plt+0x2d264>
   3d0ac:	mov	r2, #5
   3d0b0:	movw	r1, #33740	; 0x83cc
   3d0b4:	mov	r0, #0
   3d0b8:	movt	r1, #7
   3d0bc:	bl	11170 <dcgettext@plt>
   3d0c0:	bl	4b9ec <warn@@Base>
   3d0c4:	ldr	sl, [sp, #116]	; 0x74
   3d0c8:	add	sl, r9, sl
   3d0cc:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3d0d0:	mov	ip, #1488	; 0x5d0
   3d0d4:	ldrb	fp, [sp, #144]	; 0x90
   3d0d8:	ldrd	r4, [r8, ip]
   3d0dc:	mov	r2, #5
   3d0e0:	movw	r1, #33608	; 0x8348
   3d0e4:	mov	r0, #0
   3d0e8:	movt	r1, #7
   3d0ec:	umlal	r4, r5, fp, r7
   3d0f0:	strd	r4, [r8, ip]
   3d0f4:	str	ip, [sp, #44]	; 0x2c
   3d0f8:	bl	11170 <dcgettext@plt>
   3d0fc:	umull	r2, r3, r7, fp
   3d100:	mov	r7, #0
   3d104:	str	r7, [sp]
   3d108:	mov	r5, r0
   3d10c:	movw	r0, #64404	; 0xfb94
   3d110:	movt	r0, #5
   3d114:	bl	389e0 <__assert_fail@plt+0x275dc>
   3d118:	ldr	ip, [sp, #44]	; 0x2c
   3d11c:	ldrd	r2, [r8, ip]
   3d120:	str	r7, [sp]
   3d124:	mov	r4, r0
   3d128:	movw	r0, #18952	; 0x4a08
   3d12c:	movt	r0, #6
   3d130:	bl	389e0 <__assert_fail@plt+0x275dc>
   3d134:	mov	r1, r5
   3d138:	mov	r3, r4
   3d13c:	mov	r2, sl
   3d140:	str	r0, [sp]
   3d144:	mov	r0, r6
   3d148:	bl	1132c <__printf_chk@plt>
   3d14c:	b	3ca34 <__assert_fail@plt+0x2b630>
   3d150:	add	r3, sp, #112	; 0x70
   3d154:	ldr	r0, [sp, #88]	; 0x58
   3d158:	str	r3, [sp]
   3d15c:	mov	r1, sl
   3d160:	mov	r2, fp
   3d164:	ldr	r3, [sp, #96]	; 0x60
   3d168:	bl	39468 <__assert_fail@plt+0x28064>
   3d16c:	cmp	r0, #0
   3d170:	str	r0, [sp, #84]	; 0x54
   3d174:	beq	3ea58 <__assert_fail@plt+0x2d654>
   3d178:	mov	r2, #5
   3d17c:	movw	r1, #32796	; 0x801c
   3d180:	mov	r0, #0
   3d184:	movt	r1, #7
   3d188:	bl	11170 <dcgettext@plt>
   3d18c:	ldr	r7, [sp, #56]	; 0x38
   3d190:	rsb	r2, r7, sl
   3d194:	mov	r1, r0
   3d198:	mov	r0, #1
   3d19c:	bl	1132c <__printf_chk@plt>
   3d1a0:	mov	r2, #5
   3d1a4:	movw	r1, #32836	; 0x8044
   3d1a8:	mov	r0, #0
   3d1ac:	movt	r1, #7
   3d1b0:	bl	11170 <dcgettext@plt>
   3d1b4:	ldr	r2, [sp, #120]	; 0x78
   3d1b8:	mov	r1, r0
   3d1bc:	mov	r0, #1
   3d1c0:	bl	1132c <__printf_chk@plt>
   3d1c4:	mov	r2, #5
   3d1c8:	movw	r1, #32872	; 0x8068
   3d1cc:	mov	r0, #0
   3d1d0:	movt	r1, #7
   3d1d4:	bl	11170 <dcgettext@plt>
   3d1d8:	ldrh	r2, [sp, #128]	; 0x80
   3d1dc:	mov	r1, r0
   3d1e0:	mov	r0, #1
   3d1e4:	bl	1132c <__printf_chk@plt>
   3d1e8:	mov	r2, #5
   3d1ec:	movw	r1, #32908	; 0x808c
   3d1f0:	mov	r0, #0
   3d1f4:	movt	r1, #7
   3d1f8:	bl	11170 <dcgettext@plt>
   3d1fc:	ldr	r2, [sp, #136]	; 0x88
   3d200:	mov	r1, r0
   3d204:	mov	r0, #1
   3d208:	bl	1132c <__printf_chk@plt>
   3d20c:	mov	r2, #5
   3d210:	movw	r1, #32944	; 0x80b0
   3d214:	mov	r0, #0
   3d218:	movt	r1, #7
   3d21c:	bl	11170 <dcgettext@plt>
   3d220:	ldrb	r2, [sp, #144]	; 0x90
   3d224:	mov	r1, r0
   3d228:	mov	r0, #1
   3d22c:	bl	1132c <__printf_chk@plt>
   3d230:	ldrh	r3, [sp, #128]	; 0x80
   3d234:	cmp	r3, #3
   3d238:	bhi	3d6f0 <__assert_fail@plt+0x2c2ec>
   3d23c:	mov	r2, #5
   3d240:	movw	r1, #33016	; 0x80f8
   3d244:	mov	r0, #0
   3d248:	movt	r1, #7
   3d24c:	bl	11170 <dcgettext@plt>
   3d250:	ldrb	r2, [sp, #146]	; 0x92
   3d254:	mov	r1, r0
   3d258:	mov	r0, #1
   3d25c:	bl	1132c <__printf_chk@plt>
   3d260:	mov	r2, #5
   3d264:	movw	r1, #33052	; 0x811c
   3d268:	mov	r0, #0
   3d26c:	movt	r1, #7
   3d270:	bl	11170 <dcgettext@plt>
   3d274:	ldr	r2, [sp, #148]	; 0x94
   3d278:	mov	r1, r0
   3d27c:	mov	r0, #1
   3d280:	bl	1132c <__printf_chk@plt>
   3d284:	mov	r2, #5
   3d288:	movw	r1, #33088	; 0x8140
   3d28c:	mov	r0, #0
   3d290:	movt	r1, #7
   3d294:	bl	11170 <dcgettext@plt>
   3d298:	ldrb	r2, [sp, #152]	; 0x98
   3d29c:	mov	r1, r0
   3d2a0:	mov	r0, #1
   3d2a4:	bl	1132c <__printf_chk@plt>
   3d2a8:	mov	r2, #5
   3d2ac:	movw	r1, #33124	; 0x8164
   3d2b0:	mov	r0, #0
   3d2b4:	movt	r1, #7
   3d2b8:	bl	11170 <dcgettext@plt>
   3d2bc:	ldrb	r2, [sp, #153]	; 0x99
   3d2c0:	mov	r1, r0
   3d2c4:	mov	r0, #1
   3d2c8:	bl	1132c <__printf_chk@plt>
   3d2cc:	ldrb	r0, [sp, #152]	; 0x98
   3d2d0:	cmp	r0, #0
   3d2d4:	beq	3d6d0 <__assert_fail@plt+0x2c2cc>
   3d2d8:	ldrb	r0, [sp, #153]	; 0x99
   3d2dc:	mov	ip, #1488	; 0x5d0
   3d2e0:	ldr	r8, [sp, #84]	; 0x54
   3d2e4:	mov	r5, #1
   3d2e8:	ldr	r9, [sp, #60]	; 0x3c
   3d2ec:	mov	r2, #0
   3d2f0:	add	r0, r8, r0
   3d2f4:	ldrb	r1, [sp, #146]	; 0x92
   3d2f8:	cmp	fp, r0
   3d2fc:	mov	r3, #0
   3d300:	mov	r0, #0
   3d304:	movw	r7, #24696	; 0x6078
   3d308:	strd	r2, [r9, ip]
   3d30c:	movt	r7, #9
   3d310:	str	r1, [r9, #1508]	; 0x5e4
   3d314:	strb	r0, [r9, #1516]	; 0x5ec
   3d318:	str	r0, [r9, #1504]	; 0x5e0
   3d31c:	str	r0, [r9, #1512]	; 0x5e8
   3d320:	strb	r0, [r9, #1517]	; 0x5ed
   3d324:	str	r0, [r9, #1520]	; 0x5f0
   3d328:	str	r5, [r9, #1496]	; 0x5d8
   3d32c:	str	r5, [r9, #1500]	; 0x5dc
   3d330:	bls	3ea6c <__assert_fail@plt+0x2d668>
   3d334:	mov	r2, #5
   3d338:	movw	r1, #33252	; 0x81e4
   3d33c:	movt	r1, #7
   3d340:	bl	11170 <dcgettext@plt>
   3d344:	mov	r1, r0
   3d348:	mov	r0, r5
   3d34c:	bl	1132c <__printf_chk@plt>
   3d350:	ldrb	r3, [sp, #153]	; 0x99
   3d354:	cmp	r3, #1
   3d358:	ble	3d39c <__assert_fail@plt+0x2bf98>
   3d35c:	ldr	ip, [sp, #84]	; 0x54
   3d360:	sub	r4, ip, #1
   3d364:	mov	r2, #5
   3d368:	movw	r1, #33264	; 0x81f0
   3d36c:	mov	r0, #0
   3d370:	movt	r1, #7
   3d374:	bl	11170 <dcgettext@plt>
   3d378:	mov	r2, r5
   3d37c:	ldrb	r3, [r4, #1]!
   3d380:	add	r5, r5, #1
   3d384:	mov	r1, r0
   3d388:	mov	r0, #1
   3d38c:	bl	1132c <__printf_chk@plt>
   3d390:	ldrb	r3, [sp, #153]	; 0x99
   3d394:	cmp	r5, r3
   3d398:	blt	3d364 <__assert_fail@plt+0x2bf60>
   3d39c:	ldr	r4, [sp, #84]	; 0x54
   3d3a0:	sub	r3, r3, #1
   3d3a4:	add	r5, r4, r3
   3d3a8:	ldrb	r0, [r4, r3]
   3d3ac:	cmp	r0, #0
   3d3b0:	bne	3d43c <__assert_fail@plt+0x2c038>
   3d3b4:	movw	r1, #33292	; 0x820c
   3d3b8:	mov	r2, #5
   3d3bc:	movt	r1, #7
   3d3c0:	bl	11170 <dcgettext@plt>
   3d3c4:	mov	r1, r0
   3d3c8:	mov	r0, #1
   3d3cc:	bl	1132c <__printf_chk@plt>
   3d3d0:	ldrb	r0, [r5, #1]
   3d3d4:	add	r4, r5, #1
   3d3d8:	cmp	r0, #0
   3d3dc:	bne	3d4ec <__assert_fail@plt+0x2c0e8>
   3d3e0:	movw	r1, #33380	; 0x8264
   3d3e4:	mov	r2, #5
   3d3e8:	movt	r1, #7
   3d3ec:	bl	11170 <dcgettext@plt>
   3d3f0:	mov	r1, r0
   3d3f4:	mov	r0, #1
   3d3f8:	bl	1132c <__printf_chk@plt>
   3d3fc:	movw	r9, #16696	; 0x4138
   3d400:	movt	r9, #9
   3d404:	mov	r0, #10
   3d408:	add	sl, r4, #1
   3d40c:	ldr	r1, [r9]
   3d410:	bl	111ac <_IO_putc@plt>
   3d414:	ldr	lr, [sp, #96]	; 0x60
   3d418:	ldr	ip, [pc, #3408]	; 3e170 <__assert_fail@plt+0x2cd6c>
   3d41c:	ldr	r4, [sp, #112]	; 0x70
   3d420:	ldm	lr!, {r0, r1, r2, r3}
   3d424:	stmia	ip!, {r0, r1, r2, r3}
   3d428:	ldm	lr!, {r0, r1, r2, r3}
   3d42c:	stmia	ip!, {r0, r1, r2, r3}
   3d430:	ldm	lr, {r0, r1}
   3d434:	stm	ip, {r0, r1}
   3d438:	b	3c8c4 <__assert_fail@plt+0x2b4c0>
   3d43c:	mov	r2, #5
   3d440:	movw	r1, #33328	; 0x8230
   3d444:	mov	r0, #0
   3d448:	movt	r1, #7
   3d44c:	bl	11170 <dcgettext@plt>
   3d450:	ldr	r6, [sp, #56]	; 0x38
   3d454:	rsb	r2, r6, r5
   3d458:	mov	r1, r0
   3d45c:	mov	r0, #1
   3d460:	bl	1132c <__printf_chk@plt>
   3d464:	cmp	fp, r5
   3d468:	bls	3d4cc <__assert_fail@plt+0x2c0c8>
   3d46c:	ldrb	r3, [r5]
   3d470:	cmp	r3, #0
   3d474:	beq	3d4cc <__assert_fail@plt+0x2c0c8>
   3d478:	mov	r4, #0
   3d47c:	b	3d48c <__assert_fail@plt+0x2c088>
   3d480:	ldrb	r3, [r5]
   3d484:	cmp	r3, #0
   3d488:	beq	3d4cc <__assert_fail@plt+0x2c0c8>
   3d48c:	rsb	r6, r5, fp
   3d490:	add	r4, r4, #1
   3d494:	str	r5, [sp]
   3d498:	movw	r1, #33368	; 0x8258
   3d49c:	mov	r2, r4
   3d4a0:	mov	r3, r6
   3d4a4:	movt	r1, #7
   3d4a8:	mov	r0, #1
   3d4ac:	bl	1132c <__printf_chk@plt>
   3d4b0:	mov	r0, r5
   3d4b4:	mov	r1, r6
   3d4b8:	bl	11350 <strnlen@plt>
   3d4bc:	add	r0, r0, #1
   3d4c0:	add	r5, r5, r0
   3d4c4:	cmp	fp, r5
   3d4c8:	bhi	3d480 <__assert_fail@plt+0x2c07c>
   3d4cc:	sub	r3, fp, #1
   3d4d0:	cmp	r5, r3
   3d4d4:	bcc	3d3d0 <__assert_fail@plt+0x2bfcc>
   3d4d8:	mov	ip, #0
   3d4dc:	mov	r9, fp
   3d4e0:	ldr	r7, [sp, #56]	; 0x38
   3d4e4:	str	ip, [sp, #92]	; 0x5c
   3d4e8:	b	3e974 <__assert_fail@plt+0x2d570>
   3d4ec:	mov	r2, #5
   3d4f0:	movw	r1, #33416	; 0x8288
   3d4f4:	mov	r0, #0
   3d4f8:	movt	r1, #7
   3d4fc:	bl	11170 <dcgettext@plt>
   3d500:	ldr	r8, [sp, #56]	; 0x38
   3d504:	rsb	r2, r8, r4
   3d508:	mov	r1, r0
   3d50c:	mov	r0, #1
   3d510:	bl	1132c <__printf_chk@plt>
   3d514:	mov	r2, #5
   3d518:	movw	r1, #33456	; 0x82b0
   3d51c:	mov	r0, #0
   3d520:	movt	r1, #7
   3d524:	bl	11170 <dcgettext@plt>
   3d528:	mov	r1, r0
   3d52c:	mov	r0, #1
   3d530:	bl	1132c <__printf_chk@plt>
   3d534:	cmp	fp, r4
   3d538:	bls	3d3fc <__assert_fail@plt+0x2bff8>
   3d53c:	ldrb	r3, [r5, #1]
   3d540:	cmp	r3, #0
   3d544:	beq	3d3fc <__assert_fail@plt+0x2bff8>
   3d548:	add	sl, sp, #116	; 0x74
   3d54c:	mov	ip, r4
   3d550:	mov	r6, #0
   3d554:	str	r7, [sp, #48]	; 0x30
   3d558:	ldr	r9, [sp, #60]	; 0x3c
   3d55c:	b	3d574 <__assert_fail@plt+0x2c170>
   3d560:	bls	3d6c8 <__assert_fail@plt+0x2c2c4>
   3d564:	ldrb	r3, [r5, r8]
   3d568:	cmp	r3, #0
   3d56c:	beq	3d6c8 <__assert_fail@plt+0x2c2c4>
   3d570:	mov	ip, r4
   3d574:	ldr	r2, [r9, #1520]	; 0x5f0
   3d578:	rsb	r7, r4, fp
   3d57c:	mov	r0, #1
   3d580:	movw	r1, #33484	; 0x82cc
   3d584:	add	r2, r2, r0
   3d588:	movt	r1, #7
   3d58c:	str	r2, [r9, #1520]	; 0x5f0
   3d590:	str	ip, [sp, #44]	; 0x2c
   3d594:	bl	1132c <__printf_chk@plt>
   3d598:	mov	r1, r7
   3d59c:	mov	r0, r4
   3d5a0:	bl	11350 <strnlen@plt>
   3d5a4:	mov	r2, #0
   3d5a8:	mov	r3, fp
   3d5ac:	mov	r1, sl
   3d5b0:	add	r0, r0, #1
   3d5b4:	add	r4, r4, r0
   3d5b8:	mov	r0, r4
   3d5bc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3d5c0:	str	r6, [sp]
   3d5c4:	mov	r3, r1
   3d5c8:	mov	r2, r0
   3d5cc:	movw	r0, #64404	; 0xfb94
   3d5d0:	movt	r0, #5
   3d5d4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3d5d8:	movw	r1, #33492	; 0x82d4
   3d5dc:	movt	r1, #7
   3d5e0:	mov	r2, r0
   3d5e4:	mov	r0, #1
   3d5e8:	bl	1132c <__printf_chk@plt>
   3d5ec:	ldr	r5, [sp, #116]	; 0x74
   3d5f0:	mov	r2, #0
   3d5f4:	mov	r3, fp
   3d5f8:	add	r4, r4, r5
   3d5fc:	mov	r1, sl
   3d600:	mov	r0, r4
   3d604:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3d608:	str	r6, [sp]
   3d60c:	mov	r3, r1
   3d610:	mov	r2, r0
   3d614:	movw	r0, #64404	; 0xfb94
   3d618:	movt	r0, #5
   3d61c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3d620:	movw	r1, #33492	; 0x82d4
   3d624:	movt	r1, #7
   3d628:	mov	r2, r0
   3d62c:	mov	r0, #1
   3d630:	bl	1132c <__printf_chk@plt>
   3d634:	ldr	r5, [sp, #116]	; 0x74
   3d638:	mov	r2, #0
   3d63c:	mov	r3, fp
   3d640:	add	r5, r4, r5
   3d644:	mov	r1, sl
   3d648:	mov	r0, r5
   3d64c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3d650:	str	r6, [sp]
   3d654:	mov	r3, r1
   3d658:	mov	r2, r0
   3d65c:	movw	r0, #64404	; 0xfb94
   3d660:	movt	r0, #5
   3d664:	bl	389e0 <__assert_fail@plt+0x275dc>
   3d668:	movw	r1, #33492	; 0x82d4
   3d66c:	movt	r1, #7
   3d670:	mov	r2, r0
   3d674:	mov	r0, #1
   3d678:	bl	1132c <__printf_chk@plt>
   3d67c:	ldr	ip, [sp, #44]	; 0x2c
   3d680:	ldr	r8, [sp, #116]	; 0x74
   3d684:	mov	r2, r7
   3d688:	movw	r1, #33496	; 0x82d8
   3d68c:	mov	r0, #1
   3d690:	mov	r3, ip
   3d694:	movt	r1, #7
   3d698:	add	r4, r5, r8
   3d69c:	bl	1132c <__printf_chk@plt>
   3d6a0:	cmp	fp, r4
   3d6a4:	bne	3d560 <__assert_fail@plt+0x2c15c>
   3d6a8:	mov	r2, #5
   3d6ac:	movw	r1, #33504	; 0x82e0
   3d6b0:	mov	r0, #0
   3d6b4:	movt	r1, #7
   3d6b8:	ldr	r7, [sp, #48]	; 0x30
   3d6bc:	bl	11170 <dcgettext@plt>
   3d6c0:	bl	4b9ec <warn@@Base>
   3d6c4:	b	3d3fc <__assert_fail@plt+0x2bff8>
   3d6c8:	ldr	r7, [sp, #48]	; 0x30
   3d6cc:	b	3d3fc <__assert_fail@plt+0x2bff8>
   3d6d0:	mov	r2, #5
   3d6d4:	movw	r1, #33160	; 0x8188
   3d6d8:	movt	r1, #7
   3d6dc:	bl	11170 <dcgettext@plt>
   3d6e0:	bl	4b9ec <warn@@Base>
   3d6e4:	mov	r3, #1
   3d6e8:	strb	r3, [sp, #152]	; 0x98
   3d6ec:	b	3d2d8 <__assert_fail@plt+0x2bed4>
   3d6f0:	mov	r2, #5
   3d6f4:	movw	r1, #32980	; 0x80d4
   3d6f8:	mov	r0, #0
   3d6fc:	movt	r1, #7
   3d700:	bl	11170 <dcgettext@plt>
   3d704:	ldrb	r2, [sp, #145]	; 0x91
   3d708:	mov	r1, r0
   3d70c:	mov	r0, #1
   3d710:	bl	1132c <__printf_chk@plt>
   3d714:	b	3d23c <__assert_fail@plt+0x2be38>
   3d718:	mov	r2, #5
   3d71c:	movw	r1, #34976	; 0x88a0
   3d720:	mov	r0, #0
   3d724:	movt	r1, #7
   3d728:	bl	11170 <dcgettext@plt>
   3d72c:	mov	r2, r4
   3d730:	mov	r1, r0
   3d734:	mov	r0, #1
   3d738:	bl	1132c <__printf_chk@plt>
   3d73c:	ldr	r5, [sp, #84]	; 0x54
   3d740:	cmp	r5, #0
   3d744:	beq	3e9ac <__assert_fail@plt+0x2d5a8>
   3d748:	add	r4, r5, r4
   3d74c:	ldrb	r5, [r4, #-1]
   3d750:	cmp	r5, #0
   3d754:	beq	3e9ac <__assert_fail@plt+0x2d5a8>
   3d758:	add	r4, sp, #116	; 0x74
   3d75c:	mov	r6, #0
   3d760:	ldr	r7, [sp, #100]	; 0x64
   3d764:	b	3d78c <__assert_fail@plt+0x2c388>
   3d768:	movw	r1, #35012	; 0x88c4
   3d76c:	movw	r3, #556	; 0x22c
   3d770:	movt	r1, #7
   3d774:	movt	r3, #6
   3d778:	mov	r0, #1
   3d77c:	sub	r5, r5, #1
   3d780:	bl	1132c <__printf_chk@plt>
   3d784:	ldr	r3, [sp, #116]	; 0x74
   3d788:	add	r9, r9, r3
   3d78c:	mov	r2, #0
   3d790:	mov	r3, r7
   3d794:	mov	r0, r9
   3d798:	mov	r1, r4
   3d79c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3d7a0:	str	r6, [sp]
   3d7a4:	mov	r2, r0
   3d7a8:	mov	r3, r1
   3d7ac:	movw	r0, #18952	; 0x4a08
   3d7b0:	movt	r0, #6
   3d7b4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3d7b8:	cmp	r5, #1
   3d7bc:	mov	r2, r0
   3d7c0:	bne	3d768 <__assert_fail@plt+0x2c364>
   3d7c4:	mov	r0, r5
   3d7c8:	movw	r1, #35012	; 0x88c4
   3d7cc:	movw	r3, #25084	; 0x61fc
   3d7d0:	movt	r1, #7
   3d7d4:	movt	r3, #7
   3d7d8:	bl	1132c <__printf_chk@plt>
   3d7dc:	ldr	sl, [sp, #116]	; 0x74
   3d7e0:	add	sl, r9, sl
   3d7e4:	b	3e9b0 <__assert_fail@plt+0x2d5ac>
   3d7e8:	mov	r1, #2
   3d7ec:	movw	r3, #26492	; 0x677c
   3d7f0:	movt	r3, #9
   3d7f4:	mov	r0, r9
   3d7f8:	ldr	r3, [r3]
   3d7fc:	blx	r3
   3d800:	mov	r4, r0
   3d804:	mov	r5, r1
   3d808:	b	3cc44 <__assert_fail@plt+0x2b840>
   3d80c:	ldrb	r0, [r8, #1516]	; 0x5ec
   3d810:	mov	r1, #0
   3d814:	ldrd	r4, [sp, #48]	; 0x30
   3d818:	mov	r2, #0
   3d81c:	mov	r3, #0
   3d820:	mov	r7, #0
   3d824:	adds	r4, r4, r0
   3d828:	mov	sl, r9
   3d82c:	adc	r5, r5, r1
   3d830:	mov	r9, #1488	; 0x5d0
   3d834:	mov	r0, r4
   3d838:	mov	r1, r5
   3d83c:	bl	529fc <zcfree@@Base+0x13cc>
   3d840:	ldrb	r6, [sp, #144]	; 0x90
   3d844:	mov	r2, #0
   3d848:	mov	r3, #0
   3d84c:	strd	r6, [sp, #64]	; 0x40
   3d850:	ldr	ip, [sp, #64]	; 0x40
   3d854:	umull	r6, r7, r0, ip
   3d858:	mov	r0, r4
   3d85c:	mla	r7, r1, ip, r7
   3d860:	mov	r1, r5
   3d864:	ldrd	r4, [r8, r9]
   3d868:	adds	r4, r4, r6
   3d86c:	adc	r5, r5, r7
   3d870:	strd	r4, [r8, r9]
   3d874:	bl	529fc <zcfree@@Base+0x13cc>
   3d878:	movw	r1, #34804	; 0x87f4
   3d87c:	mov	r0, fp
   3d880:	movt	r1, #7
   3d884:	strb	r2, [r8, #1516]	; 0x5ec
   3d888:	mov	r2, #5
   3d88c:	bl	11170 <dcgettext@plt>
   3d890:	ldrd	r2, [sp, #48]	; 0x30
   3d894:	str	fp, [sp]
   3d898:	mov	r5, r0
   3d89c:	movw	r0, #64404	; 0xfb94
   3d8a0:	movt	r0, #5
   3d8a4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3d8a8:	ldrd	r2, [r8, r9]
   3d8ac:	str	fp, [sp]
   3d8b0:	mov	r4, r0
   3d8b4:	movw	r0, #18952	; 0x4a08
   3d8b8:	b	3cee8 <__assert_fail@plt+0x2bae4>
   3d8bc:	mov	r2, #5
   3d8c0:	movw	r1, #35020	; 0x88cc
   3d8c4:	mov	r0, #0
   3d8c8:	movt	r1, #7
   3d8cc:	bl	11170 <dcgettext@plt>
   3d8d0:	ldr	r6, [sp, #88]	; 0x58
   3d8d4:	ldr	r2, [r6, #8]
   3d8d8:	mov	r1, r0
   3d8dc:	mov	r0, #1
   3d8e0:	bl	1132c <__printf_chk@plt>
   3d8e4:	cmp	r7, r9
   3d8e8:	ldrcs	r7, [sp, #92]	; 0x5c
   3d8ec:	eorcs	r0, r7, #1
   3d8f0:	bcs	3cb34 <__assert_fail@plt+0x2b730>
   3d8f4:	movw	sl, #26444	; 0x674c
   3d8f8:	movt	sl, #9
   3d8fc:	movw	r8, #24696	; 0x6078
   3d900:	add	ip, sp, #120	; 0x78
   3d904:	movt	r8, #9
   3d908:	str	ip, [sp, #96]	; 0x60
   3d90c:	str	r8, [sp, #60]	; 0x3c
   3d910:	ldr	r5, [sp, #88]	; 0x58
   3d914:	movw	r1, #26976	; 0x6960
   3d918:	mov	r2, #12
   3d91c:	movt	r1, #6
   3d920:	ldr	r4, [r5, #8]
   3d924:	mov	r0, r4
   3d928:	bl	113e0 <strncmp@plt>
   3d92c:	subs	r6, r0, #0
   3d930:	bne	3e178 <__assert_fail@plt+0x2cd74>
   3d934:	mov	r0, r4
   3d938:	movw	r1, #32696	; 0x7fb8
   3d93c:	movt	r1, #7
   3d940:	bl	110f8 <strcmp@plt>
   3d944:	cmp	r0, #0
   3d948:	beq	3e178 <__assert_fail@plt+0x2cd74>
   3d94c:	movw	r4, #24696	; 0x6078
   3d950:	movt	r4, #9
   3d954:	add	ip, r4, #1520	; 0x5f0
   3d958:	ldr	lr, [sp, #96]	; 0x60
   3d95c:	add	ip, ip, #8
   3d960:	str	r9, [sp, #112]	; 0x70
   3d964:	ldm	ip!, {r0, r1, r2, r3}
   3d968:	stmia	lr!, {r0, r1, r2, r3}
   3d96c:	ldm	ip!, {r0, r1, r2, r3}
   3d970:	stmia	lr!, {r0, r1, r2, r3}
   3d974:	ldm	ip, {r0, r1}
   3d978:	stm	lr, {r0, r1}
   3d97c:	ldrb	r0, [sp, #152]	; 0x98
   3d980:	cmp	r0, #0
   3d984:	beq	3e9c4 <__assert_fail@plt+0x2d5c0>
   3d988:	ldrb	r3, [sp, #146]	; 0x92
   3d98c:	mov	r1, #1488	; 0x5d0
   3d990:	mov	r5, r9
   3d994:	mov	r2, #0
   3d998:	str	r6, [sp, #48]	; 0x30
   3d99c:	str	r3, [r4, #1508]	; 0x5e4
   3d9a0:	mov	r3, #0
   3d9a4:	str	r6, [sp, #84]	; 0x54
   3d9a8:	strd	r2, [r4, r1]
   3d9ac:	mov	r3, #1
   3d9b0:	str	r6, [sp, #56]	; 0x38
   3d9b4:	str	r6, [sp, #80]	; 0x50
   3d9b8:	strb	r6, [r4, #1516]	; 0x5ec
   3d9bc:	str	r6, [r4, #1504]	; 0x5e0
   3d9c0:	str	r6, [r4, #1512]	; 0x5e8
   3d9c4:	strb	r6, [r4, #1517]	; 0x5ed
   3d9c8:	str	r6, [r4, #1520]	; 0x5f0
   3d9cc:	str	r3, [r4, #1496]	; 0x5d8
   3d9d0:	str	r3, [r4, #1500]	; 0x5dc
   3d9d4:	cmp	r7, r5
   3d9d8:	movwcs	r6, #16696	; 0x4138
   3d9dc:	movtcs	r6, #9
   3d9e0:	strcs	r6, [sp, #72]	; 0x48
   3d9e4:	bcs	3dbc4 <__assert_fail@plt+0x2c7c0>
   3d9e8:	str	r9, [sp, #64]	; 0x40
   3d9ec:	movw	r8, #16696	; 0x4138
   3d9f0:	ldr	r9, [sp, #56]	; 0x38
   3d9f4:	movt	r8, #9
   3d9f8:	mov	r3, r5
   3d9fc:	str	r8, [sp, #72]	; 0x48
   3da00:	str	r9, [sp, #100]	; 0x64
   3da04:	b	3db4c <__assert_fail@plt+0x2c748>
   3da08:	rsb	r5, r0, r5
   3da0c:	ldrb	r7, [sp, #152]	; 0x98
   3da10:	uxtb	r5, r5
   3da14:	mov	r1, r7
   3da18:	mov	r0, r5
   3da1c:	bl	52568 <zcfree@@Base+0xf38>
   3da20:	ldrb	r8, [sp, #145]	; 0x91
   3da24:	cmp	r8, #1
   3da28:	uxtb	r0, r0
   3da2c:	beq	3e104 <__assert_fail@plt+0x2cd00>
   3da30:	ldrb	r3, [r4, #1516]	; 0x5ec
   3da34:	mov	r1, r8
   3da38:	mov	fp, #1488	; 0x5d0
   3da3c:	add	r9, r0, r3
   3da40:	mov	r0, r9
   3da44:	bl	52568 <zcfree@@Base+0xf38>
   3da48:	ldrb	ip, [sp, #144]	; 0x90
   3da4c:	ldrd	r2, [r4, fp]
   3da50:	mov	r1, r8
   3da54:	mul	ip, ip, r0
   3da58:	mov	r0, r9
   3da5c:	adds	r2, r2, ip
   3da60:	adc	r3, r3, #0
   3da64:	strd	r2, [r4, fp]
   3da68:	bl	52754 <zcfree@@Base+0x1124>
   3da6c:	strb	r1, [r4, #1516]	; 0x5ec
   3da70:	mov	r1, r7
   3da74:	mov	r0, r5
   3da78:	bl	52754 <zcfree@@Base+0x1124>
   3da7c:	ldr	r2, [sp, #148]	; 0x94
   3da80:	ldr	r3, [r4, #1500]	; 0x5dc
   3da84:	mov	r7, r6
   3da88:	uxtab	r1, r2, r1
   3da8c:	add	r3, r1, r3
   3da90:	str	r3, [r4, #1500]	; 0x5dc
   3da94:	ldr	r9, [sp, #100]	; 0x64
   3da98:	cmp	r9, #0
   3da9c:	beq	3e094 <__assert_fail@plt+0x2cc90>
   3daa0:	ldr	r3, [r4, #1496]	; 0x5d8
   3daa4:	sub	r3, r3, #-268435455	; 0xf0000001
   3daa8:	ldr	r8, [r9, r3, lsl #4]
   3daac:	mov	r0, r8
   3dab0:	bl	1129c <strlen@plt>
   3dab4:	cmp	r0, #35	; 0x23
   3dab8:	mov	fp, r0
   3dabc:	addls	fp, r0, #1
   3dac0:	bls	3e0a0 <__assert_fail@plt+0x2cc9c>
   3dac4:	ldr	r3, [sl]
   3dac8:	cmp	r3, #0
   3dacc:	beq	3e144 <__assert_fail@plt+0x2cd40>
   3dad0:	add	fp, fp, #1
   3dad4:	mov	r0, fp
   3dad8:	bl	4eba0 <warn@@Base+0x31b4>
   3dadc:	mov	r1, r8
   3dae0:	mov	r2, fp
   3dae4:	mov	r6, r0
   3dae8:	bl	11308 <strncpy@plt>
   3daec:	ldr	r3, [sl]
   3daf0:	cmp	r3, #0
   3daf4:	beq	3e0b8 <__assert_fail@plt+0x2ccb4>
   3daf8:	ldrb	r0, [sp, #145]	; 0x91
   3dafc:	mov	r2, #1488	; 0x5d0
   3db00:	ldr	r3, [r4, #1500]	; 0x5dc
   3db04:	cmp	r0, #1
   3db08:	beq	3e494 <__assert_fail@plt+0x2d090>
   3db0c:	ldrd	r0, [r4, r2]
   3db10:	strd	r0, [sp]
   3db14:	movw	r1, #35376	; 0x8a30
   3db18:	ldrb	r2, [r4, #1516]	; 0x5ec
   3db1c:	movt	r1, #7
   3db20:	mov	r0, #1
   3db24:	str	r2, [sp, #8]
   3db28:	mov	r2, r6
   3db2c:	bl	1132c <__printf_chk@plt>
   3db30:	cmp	r5, #1
   3db34:	beq	3e0f8 <__assert_fail@plt+0x2ccf4>
   3db38:	mov	r0, r6
   3db3c:	bl	1111c <free@plt>
   3db40:	ldr	r3, [sp, #112]	; 0x70
   3db44:	cmp	r3, r7
   3db48:	bls	3dbb8 <__assert_fail@plt+0x2c7b4>
   3db4c:	ldrb	r5, [r7]
   3db50:	add	r6, r7, #1
   3db54:	ldrb	r0, [sp, #153]	; 0x99
   3db58:	cmp	r5, r0
   3db5c:	bcs	3da08 <__assert_fail@plt+0x2c604>
   3db60:	cmp	r5, #12
   3db64:	ldrls	pc, [pc, r5, lsl #2]
   3db68:	b	3e4b0 <__assert_fail@plt+0x2d0ac>
   3db6c:	andeq	sp, r3, r0, lsl ip
   3db70:	andeq	sp, r3, r0, lsr #23
   3db74:	muleq	r3, r0, lr
   3db78:	andeq	sp, r3, r4, ror #28
   3db7c:	andeq	sp, r3, ip, ror #27
   3db80:	andeq	sp, r3, r8, asr #27
   3db84:			; <UNDEFINED> instruction: 0x0003ddb0
   3db88:	andeq	sp, r3, r0, lsr #27
   3db8c:	andeq	sp, r3, r0, asr #26
   3db90:	strdeq	sp, [r3], -r0
   3db94:	andeq	sp, r3, r0, lsr #23
   3db98:	andeq	sp, r3, r0, lsr #23
   3db9c:	andeq	sp, r3, r8, lsr #25
   3dba0:	mov	r7, r6
   3dba4:	cmp	r5, #1
   3dba8:	beq	3da94 <__assert_fail@plt+0x2c690>
   3dbac:	ldr	r3, [sp, #112]	; 0x70
   3dbb0:	cmp	r3, r7
   3dbb4:	bhi	3db4c <__assert_fail@plt+0x2c748>
   3dbb8:	ldr	r4, [sp, #100]	; 0x64
   3dbbc:	ldr	r9, [sp, #64]	; 0x40
   3dbc0:	str	r4, [sp, #56]	; 0x38
   3dbc4:	ldr	r5, [sp, #56]	; 0x38
   3dbc8:	cmp	r5, #0
   3dbcc:	beq	3dbd8 <__assert_fail@plt+0x2c7d4>
   3dbd0:	mov	r0, r5
   3dbd4:	bl	1111c <free@plt>
   3dbd8:	ldr	r6, [sp, #48]	; 0x30
   3dbdc:	cmp	r6, #0
   3dbe0:	beq	3dbec <__assert_fail@plt+0x2c7e8>
   3dbe4:	mov	r0, r6
   3dbe8:	bl	1111c <free@plt>
   3dbec:	ldr	r8, [sp, #72]	; 0x48
   3dbf0:	mov	r0, #10
   3dbf4:	ldr	r1, [r8]
   3dbf8:	bl	111ac <_IO_putc@plt>
   3dbfc:	cmp	r9, r7
   3dc00:	bhi	3d910 <__assert_fail@plt+0x2c50c>
   3dc04:	ldr	r9, [sp, #92]	; 0x5c
   3dc08:	eor	r0, r9, #1
   3dc0c:	b	3cb34 <__assert_fail@plt+0x2b730>
   3dc10:	add	r8, sp, #116	; 0x74
   3dc14:	mov	r2, #0
   3dc18:	mov	r0, r6
   3dc1c:	mov	r1, r8
   3dc20:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3dc24:	ldr	r7, [sp, #116]	; 0x74
   3dc28:	subs	r2, r0, #0
   3dc2c:	beq	3e5d0 <__assert_fail@plt+0x2d1cc>
   3dc30:	ldrb	r5, [r6, r7]
   3dc34:	add	fp, r6, r7
   3dc38:	add	fp, fp, #1
   3dc3c:	add	r7, r2, r7
   3dc40:	sub	r3, r5, #1
   3dc44:	cmp	r3, #21
   3dc48:	ldrls	pc, [pc, r3, lsl #2]
   3dc4c:	b	3e060 <__assert_fail@plt+0x2cc5c>
   3dc50:	andeq	lr, r3, ip, lsl r0
   3dc54:	strdeq	sp, [r3], -ip
   3dc58:	andeq	sp, r3, r4, ror pc
   3dc5c:	andeq	sp, r3, ip, ror #30
   3dc60:	andeq	lr, r3, r0, rrx
   3dc64:	andeq	lr, r3, r0, rrx
   3dc68:	andeq	lr, r3, r0, rrx
   3dc6c:	andeq	lr, r3, r0, rrx
   3dc70:	andeq	lr, r3, r0, rrx
   3dc74:	andeq	lr, r3, r0, rrx
   3dc78:	andeq	lr, r3, r0, rrx
   3dc7c:	andeq	lr, r3, r0, rrx
   3dc80:	andeq	lr, r3, r0, rrx
   3dc84:	andeq	lr, r3, r0, rrx
   3dc88:	andeq	lr, r3, r0, rrx
   3dc8c:	andeq	lr, r3, r0, rrx
   3dc90:	andeq	lr, r3, r0, rrx
   3dc94:	andeq	lr, r3, r0, rrx
   3dc98:	andeq	lr, r3, r0, rrx
   3dc9c:	andeq	lr, r3, r0, rrx
   3dca0:	andeq	lr, r3, r0, rrx
   3dca4:	andeq	sp, r3, ip, ror #30
   3dca8:	ldr	r3, [sp, #64]	; 0x40
   3dcac:	mov	r0, r6
   3dcb0:	add	r1, sp, #116	; 0x74
   3dcb4:	mov	r2, #0
   3dcb8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3dcbc:	mov	r2, #5
   3dcc0:	movw	r1, #35284	; 0x89d4
   3dcc4:	movt	r1, #7
   3dcc8:	ldr	r7, [sp, #116]	; 0x74
   3dccc:	add	r7, r6, r7
   3dcd0:	mov	r5, r0
   3dcd4:	mov	r0, #0
   3dcd8:	bl	11170 <dcgettext@plt>
   3dcdc:	mov	r2, r5
   3dce0:	mov	r1, r0
   3dce4:	mov	r0, #1
   3dce8:	bl	1132c <__printf_chk@plt>
   3dcec:	b	3db40 <__assert_fail@plt+0x2c73c>
   3dcf0:	ldr	r5, [sp, #64]	; 0x40
   3dcf4:	add	r7, r7, #3
   3dcf8:	cmp	r5, r7
   3dcfc:	bhi	3e590 <__assert_fail@plt+0x2d18c>
   3dd00:	cmp	r5, r6
   3dd04:	bls	3dd18 <__assert_fail@plt+0x2c914>
   3dd08:	rsb	r1, r6, r5
   3dd0c:	sub	r3, r1, #1
   3dd10:	cmp	r3, #7
   3dd14:	bls	3e594 <__assert_fail@plt+0x2d190>
   3dd18:	mov	r0, #0
   3dd1c:	mov	r1, #0
   3dd20:	mov	ip, #1488	; 0x5d0
   3dd24:	mov	lr, #0
   3dd28:	ldrd	r2, [r4, ip]
   3dd2c:	strb	lr, [r4, #1516]	; 0x5ec
   3dd30:	adds	r2, r2, r0
   3dd34:	adc	r3, r3, r1
   3dd38:	strd	r2, [r4, ip]
   3dd3c:	b	3db40 <__assert_fail@plt+0x2c73c>
   3dd40:	rsb	r0, r0, #255	; 0xff
   3dd44:	ldrb	r1, [sp, #152]	; 0x98
   3dd48:	bl	52774 <zcfree@@Base+0x1144>
   3dd4c:	ldrb	r8, [sp, #145]	; 0x91
   3dd50:	cmp	r8, #1
   3dd54:	beq	3e5ec <__assert_fail@plt+0x2d1e8>
   3dd58:	ldrb	r3, [r4, #1516]	; 0x5ec
   3dd5c:	mov	r7, r6
   3dd60:	mov	r1, r8
   3dd64:	mov	r5, #1488	; 0x5d0
   3dd68:	add	r6, r0, r3
   3dd6c:	mov	r0, r6
   3dd70:	bl	52568 <zcfree@@Base+0xf38>
   3dd74:	ldrb	ip, [sp, #144]	; 0x90
   3dd78:	ldrd	r2, [r4, r5]
   3dd7c:	mov	r1, r8
   3dd80:	mul	ip, ip, r0
   3dd84:	mov	r0, r6
   3dd88:	adds	r2, r2, ip
   3dd8c:	adc	r3, r3, #0
   3dd90:	strd	r2, [r4, r5]
   3dd94:	bl	52754 <zcfree@@Base+0x1124>
   3dd98:	strb	r1, [r4, #1516]	; 0x5ec
   3dd9c:	b	3db40 <__assert_fail@plt+0x2c73c>
   3dda0:	mov	r3, #1
   3dda4:	mov	r7, r6
   3dda8:	str	r3, [r4, #1512]	; 0x5e8
   3ddac:	b	3db40 <__assert_fail@plt+0x2c73c>
   3ddb0:	ldr	r3, [r4, #1508]	; 0x5e4
   3ddb4:	mov	r7, r6
   3ddb8:	rsbs	r3, r3, #1
   3ddbc:	movcc	r3, #0
   3ddc0:	str	r3, [r4, #1508]	; 0x5e4
   3ddc4:	b	3db40 <__assert_fail@plt+0x2c73c>
   3ddc8:	mov	r0, r6
   3ddcc:	add	r1, sp, #116	; 0x74
   3ddd0:	mov	r2, #0
   3ddd4:	ldr	r3, [sp, #64]	; 0x40
   3ddd8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3dddc:	ldr	r7, [sp, #116]	; 0x74
   3dde0:	add	r7, r6, r7
   3dde4:	str	r0, [r4, #1504]	; 0x5e0
   3dde8:	b	3db40 <__assert_fail@plt+0x2c73c>
   3ddec:	mov	r0, r6
   3ddf0:	add	r1, sp, #116	; 0x74
   3ddf4:	mov	r2, #0
   3ddf8:	ldr	r3, [sp, #64]	; 0x40
   3ddfc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3de00:	ldr	ip, [sp, #100]	; 0x64
   3de04:	ldr	r7, [sp, #116]	; 0x74
   3de08:	cmp	ip, #0
   3de0c:	add	r7, r6, r7
   3de10:	mov	r5, r0
   3de14:	str	r0, [r4, #1496]	; 0x5d8
   3de18:	beq	3e9e0 <__assert_fail@plt+0x2d5dc>
   3de1c:	sub	r5, r0, #-268435455	; 0xf0000001
   3de20:	ldr	r8, [sp, #100]	; 0x64
   3de24:	add	r6, r8, r5, lsl #4
   3de28:	ldr	r3, [r6, #4]
   3de2c:	cmp	r3, #0
   3de30:	beq	3e61c <__assert_fail@plt+0x2d218>
   3de34:	ldr	r9, [sp, #48]	; 0x30
   3de38:	cmp	r9, #0
   3de3c:	beq	3e980 <__assert_fail@plt+0x2d57c>
   3de40:	ldr	ip, [sp, #48]	; 0x30
   3de44:	sub	r2, r3, #-1073741823	; 0xc0000001
   3de48:	movw	r1, #35272	; 0x89c8
   3de4c:	ldr	r3, [r6]
   3de50:	movt	r1, #7
   3de54:	mov	r0, #1
   3de58:	ldr	r2, [ip, r2, lsl #2]
   3de5c:	bl	1132c <__printf_chk@plt>
   3de60:	b	3db40 <__assert_fail@plt+0x2c73c>
   3de64:	ldr	r3, [sp, #64]	; 0x40
   3de68:	mov	r0, r6
   3de6c:	add	r1, sp, #116	; 0x74
   3de70:	mov	r2, #1
   3de74:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3de78:	ldr	r3, [r4, #1500]	; 0x5dc
   3de7c:	ldr	r7, [sp, #116]	; 0x74
   3de80:	add	r7, r6, r7
   3de84:	add	r0, r3, r0
   3de88:	str	r0, [r4, #1500]	; 0x5dc
   3de8c:	b	3db40 <__assert_fail@plt+0x2c73c>
   3de90:	mov	r0, r6
   3de94:	add	r1, sp, #116	; 0x74
   3de98:	mov	r2, #0
   3de9c:	ldr	r3, [sp, #64]	; 0x40
   3dea0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3dea4:	ldrb	r5, [sp, #145]	; 0x91
   3dea8:	ldr	r7, [sp, #116]	; 0x74
   3deac:	cmp	r5, #1
   3deb0:	add	r7, r6, r7
   3deb4:	beq	3e610 <__assert_fail@plt+0x2d20c>
   3deb8:	ldrb	r8, [r4, #1516]	; 0x5ec
   3debc:	mov	r1, r5
   3dec0:	mov	r6, #1488	; 0x5d0
   3dec4:	add	r8, r0, r8
   3dec8:	mov	r0, r8
   3decc:	bl	52568 <zcfree@@Base+0xf38>
   3ded0:	ldrb	ip, [sp, #144]	; 0x90
   3ded4:	ldrd	r2, [r4, r6]
   3ded8:	mov	r1, r5
   3dedc:	mul	ip, ip, r0
   3dee0:	mov	r0, r8
   3dee4:	adds	r2, r2, ip
   3dee8:	adc	r3, r3, #0
   3deec:	strd	r2, [r4, r6]
   3def0:	bl	52754 <zcfree@@Base+0x1124>
   3def4:	strb	r1, [r4, #1516]	; 0x5ec
   3def8:	b	3db40 <__assert_fail@plt+0x2c73c>
   3defc:	sub	r5, r2, #1
   3df00:	cmp	r5, #8
   3df04:	bls	3df2c <__assert_fail@plt+0x2cb28>
   3df08:	mov	r2, #5
   3df0c:	movw	r1, #30836	; 0x7874
   3df10:	mov	r0, #0
   3df14:	movt	r1, #7
   3df18:	bl	11170 <dcgettext@plt>
   3df1c:	mov	r1, r5
   3df20:	mov	r2, #8
   3df24:	mov	r5, r2
   3df28:	bl	4b2b0 <error@@Base>
   3df2c:	ldr	ip, [sp, #64]	; 0x40
   3df30:	add	r3, fp, r5
   3df34:	cmp	ip, r3
   3df38:	bhi	3df48 <__assert_fail@plt+0x2cb44>
   3df3c:	cmp	ip, fp
   3df40:	bls	3df54 <__assert_fail@plt+0x2cb50>
   3df44:	rsb	r5, fp, ip
   3df48:	sub	r3, r5, #1
   3df4c:	cmp	r3, #7
   3df50:	bls	3e940 <__assert_fail@plt+0x2d53c>
   3df54:	mov	r1, #1488	; 0x5d0
   3df58:	mov	r2, #0
   3df5c:	mov	r3, #0
   3df60:	strd	r2, [r4, r1]
   3df64:	mov	r3, #0
   3df68:	strb	r3, [r4, #1516]	; 0x5ec
   3df6c:	add	r7, r6, r7
   3df70:	b	3db40 <__assert_fail@plt+0x2c73c>
   3df74:	ldr	r5, [sp, #84]	; 0x54
   3df78:	add	r7, r6, r7
   3df7c:	ldr	r0, [sp, #100]	; 0x64
   3df80:	add	r5, r5, #1
   3df84:	str	r5, [sp, #84]	; 0x54
   3df88:	lsl	r5, r5, #4
   3df8c:	mov	r1, r5
   3df90:	bl	4ec00 <warn@@Base+0x3214>
   3df94:	sub	r3, r5, #16
   3df98:	ldr	r2, [r4, #1520]	; 0x5f0
   3df9c:	str	r0, [sp, #100]	; 0x64
   3dfa0:	mov	r0, fp
   3dfa4:	ldr	r9, [sp, #100]	; 0x64
   3dfa8:	add	r5, r9, r3
   3dfac:	str	fp, [r9, r3]
   3dfb0:	add	r3, r2, #1
   3dfb4:	str	r3, [r4, #1520]	; 0x5f0
   3dfb8:	bl	1129c <strlen@plt>
   3dfbc:	mov	r2, #0
   3dfc0:	ldr	r3, [sp, #112]	; 0x70
   3dfc4:	mov	r1, r8
   3dfc8:	add	r0, r0, #1
   3dfcc:	add	fp, fp, r0
   3dfd0:	mov	r0, fp
   3dfd4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3dfd8:	ldr	r3, [sp, #112]	; 0x70
   3dfdc:	mov	r2, #0
   3dfe0:	mov	r1, r8
   3dfe4:	str	r0, [r5, #4]
   3dfe8:	ldr	r0, [sp, #116]	; 0x74
   3dfec:	add	fp, fp, r0
   3dff0:	mov	r0, fp
   3dff4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3dff8:	ldr	r3, [sp, #112]	; 0x70
   3dffc:	mov	r1, r8
   3e000:	mov	r2, #0
   3e004:	str	r0, [r5, #8]
   3e008:	ldr	r0, [sp, #116]	; 0x74
   3e00c:	add	r0, fp, r0
   3e010:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3e014:	str	r0, [r5, #12]
   3e018:	b	3db40 <__assert_fail@plt+0x2c73c>
   3e01c:	ldrb	r1, [sp, #146]	; 0x92
   3e020:	mov	r0, #1488	; 0x5d0
   3e024:	mov	r2, #0
   3e028:	mov	r3, #0
   3e02c:	add	r7, r6, r7
   3e030:	strd	r2, [r4, r0]
   3e034:	str	r1, [r4, #1508]	; 0x5e4
   3e038:	mov	r3, #0
   3e03c:	mov	r2, #1
   3e040:	strb	r3, [r4, #1516]	; 0x5ec
   3e044:	str	r3, [r4, #1504]	; 0x5e0
   3e048:	str	r3, [r4, #1512]	; 0x5e8
   3e04c:	strb	r3, [r4, #1517]	; 0x5ed
   3e050:	str	r3, [r4, #1520]	; 0x5f0
   3e054:	str	r2, [r4, #1496]	; 0x5d8
   3e058:	str	r2, [r4, #1500]	; 0x5dc
   3e05c:	b	3db40 <__assert_fail@plt+0x2c73c>
   3e060:	mov	r2, #5
   3e064:	movw	r1, #35164	; 0x895c
   3e068:	mov	r0, #0
   3e06c:	movt	r1, #7
   3e070:	bl	11170 <dcgettext@plt>
   3e074:	ldr	r3, [sp, #116]	; 0x74
   3e078:	mov	r2, r5
   3e07c:	rsb	r3, r3, r7
   3e080:	add	r7, r6, r7
   3e084:	mov	r1, r0
   3e088:	mov	r0, #1
   3e08c:	bl	1132c <__printf_chk@plt>
   3e090:	b	3db40 <__assert_fail@plt+0x2c73c>
   3e094:	movw	r8, #61836	; 0xf18c
   3e098:	movt	r8, #5
   3e09c:	mov	fp, #10
   3e0a0:	mov	r0, fp
   3e0a4:	bl	4eba0 <warn@@Base+0x31b4>
   3e0a8:	mov	r1, r8
   3e0ac:	mov	r2, fp
   3e0b0:	mov	r6, r0
   3e0b4:	bl	11308 <strncpy@plt>
   3e0b8:	ldrb	r0, [sp, #145]	; 0x91
   3e0bc:	cmp	r0, #1
   3e0c0:	beq	3e11c <__assert_fail@plt+0x2cd18>
   3e0c4:	mov	r2, #1488	; 0x5d0
   3e0c8:	ldr	r3, [r4, #1500]	; 0x5dc
   3e0cc:	ldrd	r8, [r4, r2]
   3e0d0:	movw	r1, #35328	; 0x8a00
   3e0d4:	mov	r0, #1
   3e0d8:	movt	r1, #7
   3e0dc:	strd	r8, [sp]
   3e0e0:	ldrb	r2, [r4, #1516]	; 0x5ec
   3e0e4:	str	r2, [sp, #8]
   3e0e8:	mov	r2, r6
   3e0ec:	bl	1132c <__printf_chk@plt>
   3e0f0:	cmp	r5, #1
   3e0f4:	bne	3db38 <__assert_fail@plt+0x2c734>
   3e0f8:	mov	r0, #10
   3e0fc:	bl	112fc <putchar@plt>
   3e100:	b	3db38 <__assert_fail@plt+0x2c734>
   3e104:	mov	r1, #1488	; 0x5d0
   3e108:	ldrb	ip, [sp, #144]	; 0x90
   3e10c:	ldrd	r2, [r4, r1]
   3e110:	umlal	r2, r3, ip, r0
   3e114:	strd	r2, [r4, r1]
   3e118:	b	3da70 <__assert_fail@plt+0x2c66c>
   3e11c:	mov	r1, #1488	; 0x5d0
   3e120:	ldr	ip, [r4, #1500]	; 0x5dc
   3e124:	ldrd	r2, [r4, r1]
   3e128:	movw	r1, #35304	; 0x89e8
   3e12c:	movt	r1, #7
   3e130:	strd	r2, [sp]
   3e134:	mov	r3, ip
   3e138:	mov	r2, r6
   3e13c:	bl	1132c <__printf_chk@plt>
   3e140:	b	3db30 <__assert_fail@plt+0x2c72c>
   3e144:	mov	r0, #36	; 0x24
   3e148:	bl	4eba0 <warn@@Base+0x31b4>
   3e14c:	sub	r1, fp, #35	; 0x23
   3e150:	mov	r2, #36	; 0x24
   3e154:	add	r1, r8, r1
   3e158:	mov	r6, r0
   3e15c:	bl	11308 <strncpy@plt>
   3e160:	ldr	r3, [sl]
   3e164:	cmp	r3, #0
   3e168:	bne	3daf8 <__assert_fail@plt+0x2c6f4>
   3e16c:	b	3e0b8 <__assert_fail@plt+0x2ccb4>
   3e170:	andeq	r6, r9, r0, lsr #12
   3e174:	andeq	r6, r9, r0, ror r6
   3e178:	add	r3, sp, #112	; 0x70
   3e17c:	mov	r1, r7
   3e180:	str	r3, [sp]
   3e184:	mov	r2, r9
   3e188:	ldr	r0, [sp, #88]	; 0x58
   3e18c:	ldr	r3, [sp, #96]	; 0x60
   3e190:	bl	39468 <__assert_fail@plt+0x28064>
   3e194:	cmp	r0, #0
   3e198:	str	r0, [sp, #80]	; 0x50
   3e19c:	beq	3e9d8 <__assert_fail@plt+0x2d5d4>
   3e1a0:	ldrb	r0, [sp, #152]	; 0x98
   3e1a4:	cmp	r0, #0
   3e1a8:	beq	3e5b0 <__assert_fail@plt+0x2d1ac>
   3e1ac:	ldrb	r1, [sp, #153]	; 0x99
   3e1b0:	mov	ip, #1488	; 0x5d0
   3e1b4:	ldr	r7, [sp, #60]	; 0x3c
   3e1b8:	mov	r2, #0
   3e1bc:	ldr	r8, [sp, #80]	; 0x50
   3e1c0:	sub	r1, r1, #1
   3e1c4:	ldrb	r0, [sp, #146]	; 0x92
   3e1c8:	mov	r3, #0
   3e1cc:	strd	r2, [r7, ip]
   3e1d0:	movw	r4, #24696	; 0x6078
   3e1d4:	ldrb	r2, [r8, r1]
   3e1d8:	mov	r3, #1
   3e1dc:	ldr	ip, [sp, #60]	; 0x3c
   3e1e0:	add	r6, r8, r1
   3e1e4:	str	r0, [r7, #1508]	; 0x5e4
   3e1e8:	mov	r7, #0
   3e1ec:	cmp	r2, r7
   3e1f0:	movt	r4, #9
   3e1f4:	strb	r7, [ip, #1516]	; 0x5ec
   3e1f8:	str	r7, [ip, #1504]	; 0x5e0
   3e1fc:	str	r7, [ip, #1512]	; 0x5e8
   3e200:	strb	r7, [ip, #1517]	; 0x5ed
   3e204:	str	r7, [ip, #1520]	; 0x5f0
   3e208:	str	r3, [ip, #1496]	; 0x5d8
   3e20c:	str	r3, [ip, #1500]	; 0x5dc
   3e210:	streq	r2, [sp, #48]	; 0x30
   3e214:	beq	3e27c <__assert_fail@plt+0x2ce78>
   3e218:	mov	r5, r6
   3e21c:	mov	r0, r5
   3e220:	rsb	r1, r5, r9
   3e224:	bl	11350 <strnlen@plt>
   3e228:	add	r7, r7, #1
   3e22c:	add	r0, r0, #1
   3e230:	ldrb	r3, [r5, r0]!
   3e234:	cmp	r3, #0
   3e238:	bne	3e21c <__assert_fail@plt+0x2ce18>
   3e23c:	lsl	r0, r7, #2
   3e240:	bl	4eba0 <warn@@Base+0x31b4>
   3e244:	ldrb	r3, [r6]
   3e248:	cmp	r3, #0
   3e24c:	str	r0, [sp, #48]	; 0x30
   3e250:	beq	3e278 <__assert_fail@plt+0x2ce74>
   3e254:	sub	r7, r0, #4
   3e258:	str	r6, [r7, #4]!
   3e25c:	mov	r0, r6
   3e260:	rsb	r1, r9, r6
   3e264:	bl	11350 <strnlen@plt>
   3e268:	add	r0, r0, #1
   3e26c:	ldrb	r3, [r6, r0]!
   3e270:	cmp	r3, #0
   3e274:	bne	3e258 <__assert_fail@plt+0x2ce54>
   3e278:	mov	r6, r5
   3e27c:	ldrb	r3, [r6, #1]
   3e280:	add	r7, r6, #1
   3e284:	cmp	r3, #0
   3e288:	streq	r3, [sp, #84]	; 0x54
   3e28c:	streq	r3, [sp, #56]	; 0x38
   3e290:	beq	3e468 <__assert_fail@plt+0x2d064>
   3e294:	mov	ip, #0
   3e298:	add	r5, sp, #116	; 0x74
   3e29c:	mov	r8, r7
   3e2a0:	mov	fp, ip
   3e2a4:	str	ip, [sp, #84]	; 0x54
   3e2a8:	str	r4, [sp, #56]	; 0x38
   3e2ac:	rsb	r1, r8, r9
   3e2b0:	mov	r0, r8
   3e2b4:	bl	11350 <strnlen@plt>
   3e2b8:	mov	r2, #0
   3e2bc:	mov	r3, r9
   3e2c0:	mov	r1, r5
   3e2c4:	add	fp, fp, #1
   3e2c8:	add	r0, r0, #1
   3e2cc:	add	r8, r8, r0
   3e2d0:	mov	r0, r8
   3e2d4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3e2d8:	ldr	ip, [sp, #116]	; 0x74
   3e2dc:	mov	r2, #0
   3e2e0:	mov	r3, r9
   3e2e4:	add	r8, r8, ip
   3e2e8:	mov	r1, r5
   3e2ec:	mov	r0, r8
   3e2f0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3e2f4:	ldr	ip, [sp, #116]	; 0x74
   3e2f8:	mov	r3, r9
   3e2fc:	mov	r1, r5
   3e300:	add	r4, r8, ip
   3e304:	mov	r2, #0
   3e308:	mov	r0, r4
   3e30c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3e310:	ldr	r3, [sp, #116]	; 0x74
   3e314:	add	r8, r4, r3
   3e318:	ldrb	r3, [r4, r3]
   3e31c:	cmp	r3, #0
   3e320:	bne	3e2ac <__assert_fail@plt+0x2cea8>
   3e324:	lsl	r0, fp, #4
   3e328:	str	fp, [sp, #84]	; 0x54
   3e32c:	ldr	r4, [sp, #56]	; 0x38
   3e330:	bl	4eba0 <warn@@Base+0x31b4>
   3e334:	ldrb	r3, [r6, #1]
   3e338:	cmp	r3, #0
   3e33c:	str	r0, [sp, #56]	; 0x38
   3e340:	ldrne	r6, [sp, #56]	; 0x38
   3e344:	beq	3e3d0 <__assert_fail@plt+0x2cfcc>
   3e348:	str	r7, [r6]
   3e34c:	rsb	r1, r7, r9
   3e350:	mov	r0, r7
   3e354:	add	r6, r6, #16
   3e358:	bl	11350 <strnlen@plt>
   3e35c:	mov	r2, #0
   3e360:	mov	r3, r9
   3e364:	mov	r1, r5
   3e368:	add	r0, r0, #1
   3e36c:	add	r7, r7, r0
   3e370:	mov	r0, r7
   3e374:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3e378:	ldr	fp, [sp, #116]	; 0x74
   3e37c:	mov	r2, #0
   3e380:	mov	r3, r9
   3e384:	add	r7, r7, fp
   3e388:	mov	r1, r5
   3e38c:	str	r0, [r6, #-12]
   3e390:	mov	r0, r7
   3e394:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3e398:	ldr	fp, [sp, #116]	; 0x74
   3e39c:	mov	r3, r9
   3e3a0:	mov	r1, r5
   3e3a4:	add	fp, r7, fp
   3e3a8:	mov	r2, #0
   3e3ac:	str	r0, [r6, #-8]
   3e3b0:	mov	r0, fp
   3e3b4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3e3b8:	ldr	r3, [sp, #116]	; 0x74
   3e3bc:	add	r7, fp, r3
   3e3c0:	str	r0, [r6, #-4]
   3e3c4:	ldrb	r3, [fp, r3]
   3e3c8:	cmp	r3, #0
   3e3cc:	bne	3e348 <__assert_fail@plt+0x2cf44>
   3e3d0:	ldr	r5, [sp, #48]	; 0x30
   3e3d4:	cmp	r5, #0
   3e3d8:	beq	3ea08 <__assert_fail@plt+0x2d604>
   3e3dc:	ldr	r7, [sp, #56]	; 0x38
   3e3e0:	ldr	r3, [r7, #4]
   3e3e4:	cmp	r3, #0
   3e3e8:	subne	r3, r3, #-1073741823	; 0xc0000001
   3e3ec:	ldrne	ip, [sp, #48]	; 0x30
   3e3f0:	movweq	r5, #65004	; 0xfdec
   3e3f4:	movteq	r5, #5
   3e3f8:	ldrne	r5, [ip, r3, lsl #2]
   3e3fc:	ldr	r3, [sl]
   3e400:	cmp	r3, #0
   3e404:	bne	3e418 <__assert_fail@plt+0x2d014>
   3e408:	mov	r0, r5
   3e40c:	bl	1129c <strlen@plt>
   3e410:	cmp	r0, #75	; 0x4b
   3e414:	bhi	3e64c <__assert_fail@plt+0x2d248>
   3e418:	mov	r2, #5
   3e41c:	movw	r1, #35152	; 0x8950
   3e420:	mov	r0, #0
   3e424:	movt	r1, #7
   3e428:	bl	11170 <dcgettext@plt>
   3e42c:	mov	r2, r5
   3e430:	ldr	r5, [sp, #56]	; 0x38
   3e434:	ldr	r3, [r5]
   3e438:	mov	r1, r0
   3e43c:	mov	r0, #1
   3e440:	bl	1132c <__printf_chk@plt>
   3e444:	movw	r1, #35080	; 0x8908
   3e448:	mov	r0, #0
   3e44c:	movt	r1, #7
   3e450:	mov	r2, #5
   3e454:	bl	11170 <dcgettext@plt>
   3e458:	mov	r7, r8
   3e45c:	mov	r1, r0
   3e460:	mov	r0, #1
   3e464:	bl	1132c <__printf_chk@plt>
   3e468:	ldr	lr, [sp, #96]	; 0x60
   3e46c:	add	r7, r7, #1
   3e470:	ldr	ip, [pc, #-772]	; 3e174 <__assert_fail@plt+0x2cd70>
   3e474:	ldr	r5, [sp, #112]	; 0x70
   3e478:	ldm	lr!, {r0, r1, r2, r3}
   3e47c:	stmia	ip!, {r0, r1, r2, r3}
   3e480:	ldm	lr!, {r0, r1, r2, r3}
   3e484:	stmia	ip!, {r0, r1, r2, r3}
   3e488:	ldm	lr, {r0, r1}
   3e48c:	stm	ip, {r0, r1}
   3e490:	b	3d9d4 <__assert_fail@plt+0x2c5d0>
   3e494:	ldrd	r8, [r4, r2]
   3e498:	movw	r1, #35356	; 0x8a1c
   3e49c:	mov	r2, r6
   3e4a0:	movt	r1, #7
   3e4a4:	strd	r8, [sp]
   3e4a8:	bl	1132c <__printf_chk@plt>
   3e4ac:	b	3db30 <__assert_fail@plt+0x2c72c>
   3e4b0:	mov	r2, #5
   3e4b4:	movw	r1, #34976	; 0x88a0
   3e4b8:	mov	r0, #0
   3e4bc:	movt	r1, #7
   3e4c0:	bl	11170 <dcgettext@plt>
   3e4c4:	mov	r2, r5
   3e4c8:	mov	r1, r0
   3e4cc:	mov	r0, #1
   3e4d0:	bl	1132c <__printf_chk@plt>
   3e4d4:	ldr	r7, [sp, #80]	; 0x50
   3e4d8:	cmp	r7, #0
   3e4dc:	beq	3e634 <__assert_fail@plt+0x2d230>
   3e4e0:	add	r3, r7, r5
   3e4e4:	ldrb	r7, [r3, #-1]
   3e4e8:	cmp	r7, #0
   3e4ec:	beq	3e634 <__assert_fail@plt+0x2d230>
   3e4f0:	str	r5, [sp, #56]	; 0x38
   3e4f4:	add	r8, sp, #116	; 0x74
   3e4f8:	mov	fp, #0
   3e4fc:	ldr	r5, [sp, #64]	; 0x40
   3e500:	ldr	r9, [sp, #100]	; 0x64
   3e504:	b	3e52c <__assert_fail@plt+0x2d128>
   3e508:	movw	r1, #35012	; 0x88c4
   3e50c:	movw	r3, #556	; 0x22c
   3e510:	movt	r1, #7
   3e514:	movt	r3, #6
   3e518:	mov	r0, #1
   3e51c:	sub	r7, r7, #1
   3e520:	bl	1132c <__printf_chk@plt>
   3e524:	ldr	r3, [sp, #116]	; 0x74
   3e528:	add	r6, r6, r3
   3e52c:	mov	r2, #0
   3e530:	mov	r3, r5
   3e534:	mov	r0, r6
   3e538:	mov	r1, r8
   3e53c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3e540:	str	fp, [sp]
   3e544:	mov	r2, r0
   3e548:	mov	r3, r1
   3e54c:	movw	r0, #18952	; 0x4a08
   3e550:	movt	r0, #6
   3e554:	bl	389e0 <__assert_fail@plt+0x275dc>
   3e558:	cmp	r7, #1
   3e55c:	mov	r2, r0
   3e560:	bne	3e508 <__assert_fail@plt+0x2d104>
   3e564:	mov	r0, r7
   3e568:	movw	r1, #35012	; 0x88c4
   3e56c:	movw	r3, #25084	; 0x61fc
   3e570:	movt	r1, #7
   3e574:	movt	r3, #7
   3e578:	ldr	r5, [sp, #56]	; 0x38
   3e57c:	str	r9, [sp, #100]	; 0x64
   3e580:	bl	1132c <__printf_chk@plt>
   3e584:	ldr	r7, [sp, #116]	; 0x74
   3e588:	add	r7, r6, r7
   3e58c:	b	3e638 <__assert_fail@plt+0x2d234>
   3e590:	mov	r1, #2
   3e594:	movw	r3, #26492	; 0x677c
   3e598:	movt	r3, #9
   3e59c:	mov	r0, r6
   3e5a0:	ldr	r3, [r3]
   3e5a4:	blx	r3
   3e5a8:	mov	r1, #0
   3e5ac:	b	3dd20 <__assert_fail@plt+0x2c91c>
   3e5b0:	mov	r2, #5
   3e5b4:	movw	r1, #33160	; 0x8188
   3e5b8:	movt	r1, #7
   3e5bc:	bl	11170 <dcgettext@plt>
   3e5c0:	bl	4b9ec <warn@@Base>
   3e5c4:	mov	r3, #1
   3e5c8:	strb	r3, [sp, #152]	; 0x98
   3e5cc:	b	3e1ac <__assert_fail@plt+0x2cda8>
   3e5d0:	mov	r2, #5
   3e5d4:	movw	r1, #33740	; 0x83cc
   3e5d8:	movt	r1, #7
   3e5dc:	mov	r7, r6
   3e5e0:	bl	11170 <dcgettext@plt>
   3e5e4:	bl	4b9ec <warn@@Base>
   3e5e8:	b	3db40 <__assert_fail@plt+0x2c73c>
   3e5ec:	ldrb	ip, [sp, #144]	; 0x90
   3e5f0:	mov	r1, #1488	; 0x5d0
   3e5f4:	mov	r7, r6
   3e5f8:	mul	r0, ip, r0
   3e5fc:	ldrd	r2, [r4, r1]
   3e600:	adds	r2, r2, r0
   3e604:	adc	r3, r3, #0
   3e608:	strd	r2, [r4, r1]
   3e60c:	b	3db40 <__assert_fail@plt+0x2c73c>
   3e610:	ldrb	ip, [sp, #144]	; 0x90
   3e614:	mov	r1, #1488	; 0x5d0
   3e618:	b	3e5f8 <__assert_fail@plt+0x2d1f4>
   3e61c:	ldr	r2, [r8, r5, lsl #4]
   3e620:	movw	r1, #35224	; 0x8998
   3e624:	mov	r0, #1
   3e628:	movt	r1, #7
   3e62c:	bl	1132c <__printf_chk@plt>
   3e630:	b	3db40 <__assert_fail@plt+0x2c73c>
   3e634:	mov	r7, r6
   3e638:	ldr	r8, [sp, #72]	; 0x48
   3e63c:	mov	r0, #10
   3e640:	ldr	r1, [r8]
   3e644:	bl	111ac <_IO_putc@plt>
   3e648:	b	3dba4 <__assert_fail@plt+0x2c7a0>
   3e64c:	ldr	r6, [sp, #56]	; 0x38
   3e650:	movw	r1, #35072	; 0x8900
   3e654:	mov	r0, #1
   3e658:	movt	r1, #7
   3e65c:	ldr	r2, [r6]
   3e660:	bl	1132c <__printf_chk@plt>
   3e664:	b	3e444 <__assert_fail@plt+0x2d040>
   3e668:	mov	r2, #5
   3e66c:	movw	r1, #33784	; 0x83f8
   3e670:	movt	r1, #7
   3e674:	ldrb	r7, [fp]
   3e678:	add	sl, r3, sl
   3e67c:	bl	11170 <dcgettext@plt>
   3e680:	mov	r2, r7
   3e684:	mov	r1, r0
   3e688:	mov	r0, #1
   3e68c:	add	r5, fp, r0
   3e690:	bl	1132c <__printf_chk@plt>
   3e694:	sub	r3, r7, #1
   3e698:	cmp	r3, #127	; 0x7f
   3e69c:	ldrls	pc, [pc, r3, lsl #2]
   3e6a0:	b	3eeac <__assert_fail@plt+0x2daa8>
   3e6a4:	andeq	lr, r3, ip, lsl #21
   3e6a8:	andeq	lr, r3, r8, ror #21
   3e6ac:	muleq	r3, r4, fp
   3e6b0:	andeq	lr, r3, ip, lsr #26
   3e6b4:	andeq	lr, r3, ip, lsr #29
   3e6b8:	andeq	lr, r3, ip, lsr #29
   3e6bc:	andeq	lr, r3, ip, lsr #29
   3e6c0:	andeq	lr, r3, ip, lsr #29
   3e6c4:	andeq	lr, r3, ip, lsr #29
   3e6c8:	andeq	lr, r3, ip, lsr #29
   3e6cc:	andeq	lr, r3, ip, lsr #29
   3e6d0:	andeq	lr, r3, ip, lsr #29
   3e6d4:	andeq	lr, r3, ip, lsr #29
   3e6d8:	andeq	lr, r3, ip, lsr #29
   3e6dc:	andeq	lr, r3, ip, lsr #29
   3e6e0:	andeq	lr, r3, ip, lsr #29
   3e6e4:	andeq	lr, r3, r8, lsl #27
   3e6e8:	muleq	r3, r8, sp
   3e6ec:	andeq	lr, r3, r8, lsr #27
   3e6f0:			; <UNDEFINED> instruction: 0x0003edb8
   3e6f4:	andeq	lr, r3, r8, asr #27
   3e6f8:	ldrdeq	lr, [r3], -r8
   3e6fc:	andeq	lr, r3, r8, ror #27
   3e700:	strdeq	lr, [r3], -r8
   3e704:	andeq	lr, r3, r8, lsl #28
   3e708:	andeq	lr, r3, ip, lsr #29
   3e70c:	andeq	lr, r3, ip, lsr #29
   3e710:	andeq	lr, r3, ip, lsr #29
   3e714:	andeq	lr, r3, ip, lsr #29
   3e718:	andeq	lr, r3, ip, lsr #29
   3e71c:	andeq	lr, r3, ip, lsr #29
   3e720:	andeq	lr, r3, r8, lsl lr
   3e724:	andeq	lr, r3, ip, lsr #29
   3e728:	andeq	lr, r3, ip, lsr #29
   3e72c:	andeq	lr, r3, ip, lsr #29
   3e730:	andeq	lr, r3, ip, lsr #29
   3e734:	andeq	lr, r3, ip, lsr #29
   3e738:	andeq	lr, r3, ip, lsr #29
   3e73c:	andeq	lr, r3, ip, lsr #29
   3e740:	andeq	lr, r3, ip, lsr #29
   3e744:	andeq	lr, r3, ip, lsr #29
   3e748:	andeq	lr, r3, ip, lsr #29
   3e74c:	andeq	lr, r3, ip, lsr #29
   3e750:	andeq	lr, r3, ip, lsr #29
   3e754:	andeq	lr, r3, ip, lsr #29
   3e758:	andeq	lr, r3, ip, lsr #29
   3e75c:	andeq	lr, r3, ip, lsr #29
   3e760:	andeq	lr, r3, ip, lsr #29
   3e764:	andeq	lr, r3, ip, lsr #29
   3e768:	andeq	lr, r3, ip, lsr #29
   3e76c:	andeq	lr, r3, ip, lsr #29
   3e770:	andeq	lr, r3, ip, lsr #29
   3e774:	andeq	lr, r3, ip, lsr #29
   3e778:	andeq	lr, r3, ip, lsr #29
   3e77c:	andeq	lr, r3, ip, lsr #29
   3e780:	andeq	lr, r3, ip, lsr #29
   3e784:	andeq	lr, r3, ip, lsr #29
   3e788:	andeq	lr, r3, ip, lsr #29
   3e78c:	andeq	lr, r3, ip, lsr #29
   3e790:	andeq	lr, r3, ip, lsr #29
   3e794:	andeq	lr, r3, ip, lsr #29
   3e798:	andeq	lr, r3, ip, lsr #29
   3e79c:	andeq	lr, r3, ip, lsr #29
   3e7a0:	andeq	lr, r3, ip, lsr #29
   3e7a4:	andeq	lr, r3, ip, lsr #29
   3e7a8:	andeq	lr, r3, ip, lsr #29
   3e7ac:	andeq	lr, r3, ip, lsr #29
   3e7b0:	andeq	lr, r3, ip, lsr #29
   3e7b4:	andeq	lr, r3, ip, lsr #29
   3e7b8:	andeq	lr, r3, ip, lsr #29
   3e7bc:	andeq	lr, r3, ip, lsr #29
   3e7c0:	andeq	lr, r3, ip, lsr #29
   3e7c4:	andeq	lr, r3, ip, lsr #29
   3e7c8:	andeq	lr, r3, ip, lsr #29
   3e7cc:	andeq	lr, r3, ip, lsr #29
   3e7d0:	andeq	lr, r3, ip, lsr #29
   3e7d4:	andeq	lr, r3, ip, lsr #29
   3e7d8:	andeq	lr, r3, ip, lsr #29
   3e7dc:	andeq	lr, r3, ip, lsr #29
   3e7e0:	andeq	lr, r3, ip, lsr #29
   3e7e4:	andeq	lr, r3, ip, lsr #29
   3e7e8:	andeq	lr, r3, ip, lsr #29
   3e7ec:	andeq	lr, r3, ip, lsr #29
   3e7f0:	andeq	lr, r3, ip, lsr #29
   3e7f4:	andeq	lr, r3, ip, lsr #29
   3e7f8:	andeq	lr, r3, ip, lsr #29
   3e7fc:	andeq	lr, r3, ip, lsr #29
   3e800:	andeq	lr, r3, ip, lsr #29
   3e804:	andeq	lr, r3, ip, lsr #29
   3e808:	andeq	lr, r3, ip, lsr #29
   3e80c:	andeq	lr, r3, ip, lsr #29
   3e810:	andeq	lr, r3, ip, lsr #29
   3e814:	andeq	lr, r3, ip, lsr #29
   3e818:	andeq	lr, r3, ip, lsr #29
   3e81c:	andeq	lr, r3, ip, lsr #29
   3e820:	andeq	lr, r3, ip, lsr #29
   3e824:	andeq	lr, r3, ip, lsr #29
   3e828:	andeq	lr, r3, ip, lsr #29
   3e82c:	andeq	lr, r3, ip, lsr #29
   3e830:	andeq	lr, r3, ip, lsr #29
   3e834:	andeq	lr, r3, ip, lsr #29
   3e838:	andeq	lr, r3, ip, lsr #29
   3e83c:	andeq	lr, r3, ip, lsr #29
   3e840:	andeq	lr, r3, ip, lsr #29
   3e844:	andeq	lr, r3, ip, lsr #29
   3e848:	andeq	lr, r3, ip, lsr #29
   3e84c:	andeq	lr, r3, ip, lsr #29
   3e850:	andeq	lr, r3, ip, lsr #29
   3e854:	andeq	lr, r3, ip, lsr #29
   3e858:	andeq	lr, r3, ip, lsr #29
   3e85c:	andeq	lr, r3, ip, lsr #29
   3e860:	andeq	lr, r3, ip, lsr #29
   3e864:	andeq	lr, r3, ip, lsr #29
   3e868:	andeq	lr, r3, ip, lsr #29
   3e86c:	andeq	lr, r3, ip, lsr #29
   3e870:	andeq	lr, r3, ip, lsr #29
   3e874:	andeq	lr, r3, ip, lsr #29
   3e878:	andeq	lr, r3, ip, lsr #29
   3e87c:	andeq	lr, r3, ip, lsr #29
   3e880:	andeq	lr, r3, ip, lsr #29
   3e884:	andeq	lr, r3, ip, lsr #29
   3e888:	andeq	lr, r3, ip, lsr #29
   3e88c:	andeq	lr, r3, ip, lsr #29
   3e890:	andeq	lr, r3, ip, lsr #29
   3e894:	andeq	lr, r3, ip, lsr #29
   3e898:	andeq	lr, r3, ip, lsr #29
   3e89c:	andeq	lr, r3, ip, lsr #29
   3e8a0:	andeq	lr, r3, r8, lsr #28
   3e8a4:	ldrb	r2, [sp, #144]	; 0x90
   3e8a8:	mov	r5, #1488	; 0x5d0
   3e8ac:	ldr	r7, [sp, #48]	; 0x30
   3e8b0:	mov	r0, #0
   3e8b4:	ldrd	r4, [r5, r8]
   3e8b8:	movw	r1, #34560	; 0x8700
   3e8bc:	movt	r1, #7
   3e8c0:	mov	fp, r0
   3e8c4:	umull	r6, r7, r7, r2
   3e8c8:	strd	r6, [sp, #64]	; 0x40
   3e8cc:	ldr	r6, [sp, #52]	; 0x34
   3e8d0:	mla	r6, r2, r6, r7
   3e8d4:	mov	r2, #5
   3e8d8:	str	r6, [sp, #68]	; 0x44
   3e8dc:	ldrd	r6, [sp, #64]	; 0x40
   3e8e0:	adds	r4, r4, r6
   3e8e4:	adc	r5, r5, r7
   3e8e8:	mov	r7, #1488	; 0x5d0
   3e8ec:	strd	r4, [r8, r7]
   3e8f0:	bl	11170 <dcgettext@plt>
   3e8f4:	ldrd	r2, [sp, #64]	; 0x40
   3e8f8:	str	fp, [sp]
   3e8fc:	mov	r9, r0
   3e900:	movw	r0, #64404	; 0xfb94
   3e904:	movt	r0, #5
   3e908:	bl	389e0 <__assert_fail@plt+0x275dc>
   3e90c:	mov	ip, #1488	; 0x5d0
   3e910:	ldrd	r2, [r8, ip]
   3e914:	str	fp, [sp]
   3e918:	mov	r7, r0
   3e91c:	movw	r0, #18952	; 0x4a08
   3e920:	movt	r0, #6
   3e924:	bl	389e0 <__assert_fail@plt+0x275dc>
   3e928:	mov	r1, r9
   3e92c:	mov	r2, r7
   3e930:	mov	r3, r0
   3e934:	ldr	r0, [sp, #72]	; 0x48
   3e938:	bl	1132c <__printf_chk@plt>
   3e93c:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3e940:	movw	r3, #26492	; 0x677c
   3e944:	movt	r3, #9
   3e948:	mov	r0, fp
   3e94c:	mov	r1, r5
   3e950:	ldr	r3, [r3]
   3e954:	blx	r3
   3e958:	mov	r3, #1488	; 0x5d0
   3e95c:	strd	r0, [r4, r3]
   3e960:	b	3df64 <__assert_fail@plt+0x2cb60>
   3e964:	ldr	r7, [sp, #56]	; 0x38
   3e968:	mov	r9, fp
   3e96c:	mov	r8, #0
   3e970:	str	r8, [sp, #92]	; 0x5c
   3e974:	ldr	r4, [sp, #108]	; 0x6c
   3e978:	ldr	r3, [r4]
   3e97c:	b	3cb24 <__assert_fail@plt+0x2b720>
   3e980:	mov	r0, r9
   3e984:	mov	r2, #5
   3e988:	movw	r1, #35236	; 0x89a4
   3e98c:	movt	r1, #7
   3e990:	bl	11170 <dcgettext@plt>
   3e994:	ldr	r2, [r6, #4]
   3e998:	sub	r2, r2, #1
   3e99c:	mov	r1, r0
   3e9a0:	mov	r0, #1
   3e9a4:	bl	1132c <__printf_chk@plt>
   3e9a8:	b	3db40 <__assert_fail@plt+0x2c73c>
   3e9ac:	mov	sl, r9
   3e9b0:	ldr	r6, [sp, #80]	; 0x50
   3e9b4:	mov	r0, #10
   3e9b8:	ldr	r1, [r6]
   3e9bc:	bl	111ac <_IO_putc@plt>
   3e9c0:	b	3caa0 <__assert_fail@plt+0x2b69c>
   3e9c4:	movw	r1, #32712	; 0x7fc8
   3e9c8:	mov	r2, #5
   3e9cc:	movt	r1, #7
   3e9d0:	bl	11170 <dcgettext@plt>
   3e9d4:	bl	4b9ec <warn@@Base>
   3e9d8:	mov	r0, #0
   3e9dc:	b	3cb34 <__assert_fail@plt+0x2b730>
   3e9e0:	mov	r0, ip
   3e9e4:	mov	r2, #5
   3e9e8:	movw	r1, #35192	; 0x8978
   3e9ec:	movt	r1, #7
   3e9f0:	bl	11170 <dcgettext@plt>
   3e9f4:	sub	r2, r5, #1
   3e9f8:	mov	r1, r0
   3e9fc:	mov	r0, #1
   3ea00:	bl	1132c <__printf_chk@plt>
   3ea04:	b	3db40 <__assert_fail@plt+0x2c73c>
   3ea08:	ldr	r0, [sp, #48]	; 0x30
   3ea0c:	mov	r2, #5
   3ea10:	movw	r1, #35068	; 0x88fc
   3ea14:	movt	r1, #7
   3ea18:	bl	11170 <dcgettext@plt>
   3ea1c:	ldr	r6, [sp, #56]	; 0x38
   3ea20:	mov	r7, r8
   3ea24:	ldr	r2, [r6]
   3ea28:	mov	r1, r0
   3ea2c:	mov	r0, #1
   3ea30:	bl	1132c <__printf_chk@plt>
   3ea34:	ldr	r0, [sp, #48]	; 0x30
   3ea38:	mov	r2, #5
   3ea3c:	movw	r1, #35080	; 0x8908
   3ea40:	movt	r1, #7
   3ea44:	bl	11170 <dcgettext@plt>
   3ea48:	mov	r1, r0
   3ea4c:	mov	r0, #1
   3ea50:	bl	1132c <__printf_chk@plt>
   3ea54:	b	3e468 <__assert_fail@plt+0x2d064>
   3ea58:	ldr	r7, [sp, #56]	; 0x38
   3ea5c:	mov	r9, fp
   3ea60:	mov	r8, #1
   3ea64:	str	r8, [sp, #92]	; 0x5c
   3ea68:	b	3e974 <__assert_fail@plt+0x2d570>
   3ea6c:	mov	r2, #5
   3ea70:	movw	r1, #33208	; 0x81b8
   3ea74:	movt	r1, #7
   3ea78:	mov	r9, fp
   3ea7c:	ldr	r7, [sp, #56]	; 0x38
   3ea80:	bl	11170 <dcgettext@plt>
   3ea84:	bl	4b9ec <warn@@Base>
   3ea88:	b	3ea60 <__assert_fail@plt+0x2d65c>
   3ea8c:	mov	r2, #5
   3ea90:	movw	r1, #33808	; 0x8410
   3ea94:	mov	r0, #0
   3ea98:	movt	r1, #7
   3ea9c:	bl	11170 <dcgettext@plt>
   3eaa0:	mov	r1, r0
   3eaa4:	mov	r0, #1
   3eaa8:	bl	1132c <__printf_chk@plt>
   3eaac:	mov	r0, #1488	; 0x5d0
   3eab0:	mov	r1, #0
   3eab4:	mov	r3, #0
   3eab8:	mov	r2, #0
   3eabc:	str	r6, [r8, #1508]	; 0x5e4
   3eac0:	strd	r2, [r8, r0]
   3eac4:	mov	r3, #1
   3eac8:	strb	r1, [r8, #1516]	; 0x5ec
   3eacc:	str	r1, [r8, #1504]	; 0x5e0
   3ead0:	str	r1, [r8, #1512]	; 0x5e8
   3ead4:	strb	r1, [r8, #1517]	; 0x5ed
   3ead8:	str	r1, [r8, #1520]	; 0x5f0
   3eadc:	str	r3, [r8, #1496]	; 0x5d8
   3eae0:	str	r3, [r8, #1500]	; 0x5dc
   3eae4:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3eae8:	ldr	r1, [sp, #116]	; 0x74
   3eaec:	mvn	r1, r1
   3eaf0:	add	r1, r1, sl
   3eaf4:	cmp	r1, #8
   3eaf8:	bhi	3f0bc <__assert_fail@plt+0x2dcb8>
   3eafc:	ldr	r4, [sp, #100]	; 0x64
   3eb00:	add	r3, r5, r1
   3eb04:	cmp	r4, r3
   3eb08:	bhi	3eb18 <__assert_fail@plt+0x2d714>
   3eb0c:	cmp	r4, r5
   3eb10:	bls	3f0ec <__assert_fail@plt+0x2dce8>
   3eb14:	rsb	r1, r5, r4
   3eb18:	sub	r3, r1, #1
   3eb1c:	cmp	r3, #7
   3eb20:	bhi	3f0ec <__assert_fail@plt+0x2dce8>
   3eb24:	movw	r3, #26492	; 0x677c
   3eb28:	movt	r3, #9
   3eb2c:	mov	r0, r5
   3eb30:	ldr	r3, [r3]
   3eb34:	blx	r3
   3eb38:	mov	r4, r0
   3eb3c:	mov	r5, r1
   3eb40:	mov	r2, #5
   3eb44:	movw	r1, #33880	; 0x8458
   3eb48:	mov	r0, #0
   3eb4c:	movt	r1, #7
   3eb50:	bl	11170 <dcgettext@plt>
   3eb54:	mov	r6, #0
   3eb58:	mov	r3, r5
   3eb5c:	mov	r2, r4
   3eb60:	str	r6, [sp]
   3eb64:	mov	r7, r0
   3eb68:	movw	r0, #18952	; 0x4a08
   3eb6c:	movt	r0, #6
   3eb70:	bl	389e0 <__assert_fail@plt+0x275dc>
   3eb74:	mov	r1, r7
   3eb78:	mov	r2, r0
   3eb7c:	mov	r0, #1
   3eb80:	bl	1132c <__printf_chk@plt>
   3eb84:	mov	r3, #1488	; 0x5d0
   3eb88:	strb	r6, [r8, #1516]	; 0x5ec
   3eb8c:	strd	r4, [r8, r3]
   3eb90:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3eb94:	mov	r2, #5
   3eb98:	movw	r1, #33904	; 0x8470
   3eb9c:	mov	r0, #0
   3eba0:	movt	r1, #7
   3eba4:	bl	11170 <dcgettext@plt>
   3eba8:	mov	r1, r0
   3ebac:	mov	r0, #1
   3ebb0:	bl	1132c <__printf_chk@plt>
   3ebb4:	mov	r2, #5
   3ebb8:	mov	r0, #0
   3ebbc:	movw	r1, #33456	; 0x82b0
   3ebc0:	movt	r1, #7
   3ebc4:	mov	r6, r0
   3ebc8:	bl	11170 <dcgettext@plt>
   3ebcc:	mov	r1, r0
   3ebd0:	mov	r0, #1
   3ebd4:	bl	1132c <__printf_chk@plt>
   3ebd8:	ldr	r2, [r8, #1520]	; 0x5f0
   3ebdc:	mov	r0, #1
   3ebe0:	movw	r1, #33936	; 0x8490
   3ebe4:	add	r2, r2, r0
   3ebe8:	movt	r1, #7
   3ebec:	str	r2, [r8, #1520]	; 0x5f0
   3ebf0:	bl	1132c <__printf_chk@plt>
   3ebf4:	ldr	r7, [sp, #100]	; 0x64
   3ebf8:	mov	r0, r5
   3ebfc:	rsb	r1, r5, r7
   3ec00:	bl	11350 <strnlen@plt>
   3ec04:	mov	r1, r4
   3ec08:	mov	r2, r6
   3ec0c:	ldr	r3, [sp, #100]	; 0x64
   3ec10:	add	r0, r0, #1
   3ec14:	add	r7, r5, r0
   3ec18:	mov	r0, r7
   3ec1c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3ec20:	str	r6, [sp]
   3ec24:	mov	r3, r1
   3ec28:	mov	r2, r0
   3ec2c:	movw	r0, #64404	; 0xfb94
   3ec30:	movt	r0, #5
   3ec34:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ec38:	movw	r1, #33492	; 0x82d4
   3ec3c:	movt	r1, #7
   3ec40:	mov	r2, r0
   3ec44:	mov	r0, #1
   3ec48:	bl	1132c <__printf_chk@plt>
   3ec4c:	ldr	r3, [sp, #116]	; 0x74
   3ec50:	mov	r2, r6
   3ec54:	mov	r1, r4
   3ec58:	add	r7, r7, r3
   3ec5c:	ldr	r3, [sp, #100]	; 0x64
   3ec60:	mov	r0, r7
   3ec64:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3ec68:	str	r6, [sp]
   3ec6c:	mov	r3, r1
   3ec70:	mov	r2, r0
   3ec74:	movw	r0, #64404	; 0xfb94
   3ec78:	movt	r0, #5
   3ec7c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ec80:	movw	r1, #33492	; 0x82d4
   3ec84:	movt	r1, #7
   3ec88:	mov	r2, r0
   3ec8c:	mov	r0, #1
   3ec90:	bl	1132c <__printf_chk@plt>
   3ec94:	ldr	r3, [sp, #116]	; 0x74
   3ec98:	mov	r1, r4
   3ec9c:	mov	r2, r6
   3eca0:	add	r4, r7, r3
   3eca4:	ldr	r3, [sp, #100]	; 0x64
   3eca8:	mov	r0, r4
   3ecac:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3ecb0:	str	r6, [sp]
   3ecb4:	mov	r3, r1
   3ecb8:	mov	r2, r0
   3ecbc:	movw	r0, #64404	; 0xfb94
   3ecc0:	movt	r0, #5
   3ecc4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ecc8:	movw	r1, #33492	; 0x82d4
   3eccc:	movt	r1, #7
   3ecd0:	mov	r2, r0
   3ecd4:	mov	r0, #1
   3ecd8:	bl	1132c <__printf_chk@plt>
   3ecdc:	ldr	r3, [sp, #116]	; 0x74
   3ece0:	mov	r2, r5
   3ece4:	movw	r1, #33944	; 0x8498
   3ece8:	add	r4, r4, r3
   3ecec:	movt	r1, #7
   3ecf0:	mov	r0, #1
   3ecf4:	bl	1132c <__printf_chk@plt>
   3ecf8:	rsb	r3, r9, r4
   3ecfc:	cmp	sl, r3
   3ed00:	bne	3ed10 <__assert_fail@plt+0x2d90c>
   3ed04:	ldr	ip, [sp, #100]	; 0x64
   3ed08:	cmp	ip, r4
   3ed0c:	bne	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ed10:	mov	r2, #5
   3ed14:	movw	r1, #33952	; 0x84a0
   3ed18:	mov	r0, #0
   3ed1c:	movt	r1, #7
   3ed20:	bl	11170 <dcgettext@plt>
   3ed24:	bl	4b9ec <warn@@Base>
   3ed28:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ed2c:	mov	r2, #5
   3ed30:	movw	r1, #33992	; 0x84c8
   3ed34:	mov	r0, #0
   3ed38:	movt	r1, #7
   3ed3c:	bl	11170 <dcgettext@plt>
   3ed40:	ldr	r3, [sp, #100]	; 0x64
   3ed44:	mov	r1, r4
   3ed48:	mov	r2, #0
   3ed4c:	mov	r6, r0
   3ed50:	mov	r0, r5
   3ed54:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3ed58:	mov	r2, r0
   3ed5c:	mov	r3, r1
   3ed60:	movw	r0, #64404	; 0xfb94
   3ed64:	mov	r1, #0
   3ed68:	movt	r0, #5
   3ed6c:	str	r1, [sp]
   3ed70:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ed74:	mov	r1, r6
   3ed78:	mov	r2, r0
   3ed7c:	mov	r0, #1
   3ed80:	bl	1132c <__printf_chk@plt>
   3ed84:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ed88:	movw	r0, #34020	; 0x84e4
   3ed8c:	movt	r0, #7
   3ed90:	bl	11218 <puts@plt>
   3ed94:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ed98:	movw	r0, #34052	; 0x8504
   3ed9c:	movt	r0, #7
   3eda0:	bl	11218 <puts@plt>
   3eda4:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3eda8:	movw	r0, #34076	; 0x851c
   3edac:	movt	r0, #7
   3edb0:	bl	11218 <puts@plt>
   3edb4:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3edb8:	movw	r0, #34100	; 0x8534
   3edbc:	movt	r0, #7
   3edc0:	bl	11218 <puts@plt>
   3edc4:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3edc8:	movw	r0, #34132	; 0x8554
   3edcc:	movt	r0, #7
   3edd0:	bl	11218 <puts@plt>
   3edd4:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3edd8:	movw	r0, #34160	; 0x8570
   3eddc:	movt	r0, #7
   3ede0:	bl	11218 <puts@plt>
   3ede4:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ede8:	movw	r0, #34184	; 0x8588
   3edec:	movt	r0, #7
   3edf0:	bl	11218 <puts@plt>
   3edf4:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3edf8:	movw	r0, #34216	; 0x85a8
   3edfc:	movt	r0, #7
   3ee00:	bl	11218 <puts@plt>
   3ee04:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ee08:	movw	r0, #34248	; 0x85c8
   3ee0c:	movt	r0, #7
   3ee10:	bl	11218 <puts@plt>
   3ee14:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ee18:	movw	r0, #34284	; 0x85ec
   3ee1c:	movt	r0, #7
   3ee20:	bl	11218 <puts@plt>
   3ee24:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ee28:	ldr	r7, [sp, #116]	; 0x74
   3ee2c:	movw	r0, #34308	; 0x8604
   3ee30:	movt	r0, #7
   3ee34:	bl	11218 <puts@plt>
   3ee38:	mvn	r7, r7
   3ee3c:	add	r7, r7, sl
   3ee40:	add	r7, r5, r7
   3ee44:	cmp	r5, r7
   3ee48:	bcs	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ee4c:	mov	r0, r5
   3ee50:	mov	r3, r7
   3ee54:	mov	r1, r4
   3ee58:	mov	r2, #0
   3ee5c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3ee60:	ldr	r3, [sp, #116]	; 0x74
   3ee64:	add	r5, r5, r3
   3ee68:	cmp	r0, #2
   3ee6c:	beq	3f04c <__assert_fail@plt+0x2dc48>
   3ee70:	cmp	r0, #3
   3ee74:	beq	3ef5c <__assert_fail@plt+0x2db58>
   3ee78:	cmp	r0, #1
   3ee7c:	beq	3ef44 <__assert_fail@plt+0x2db40>
   3ee80:	mov	r6, r0
   3ee84:	mov	r2, #5
   3ee88:	movw	r1, #34464	; 0x86a0
   3ee8c:	mov	r0, #0
   3ee90:	movt	r1, #7
   3ee94:	bl	11170 <dcgettext@plt>
   3ee98:	mov	r2, r6
   3ee9c:	mov	r1, r0
   3eea0:	mov	r0, #1
   3eea4:	bl	1132c <__printf_chk@plt>
   3eea8:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3eeac:	tst	r7, #128	; 0x80
   3eeb0:	mov	r2, #5
   3eeb4:	ldr	r4, [sp, #116]	; 0x74
   3eeb8:	movwne	r1, #34504	; 0x86c8
   3eebc:	movweq	r1, #34520	; 0x86d8
   3eec0:	movtne	r1, #7
   3eec4:	movteq	r1, #7
   3eec8:	movne	r0, #0
   3eecc:	moveq	r0, #0
   3eed0:	bl	11170 <dcgettext@plt>
   3eed4:	mvn	r4, r4
   3eed8:	add	r4, r4, sl
   3eedc:	mov	r1, r0
   3eee0:	mov	r0, #1
   3eee4:	bl	1132c <__printf_chk@plt>
   3eee8:	mov	r2, #5
   3eeec:	movw	r1, #34532	; 0x86e4
   3eef0:	mov	r0, #0
   3eef4:	movt	r1, #7
   3eef8:	bl	11170 <dcgettext@plt>
   3eefc:	mov	r2, r4
   3ef00:	mov	r1, r0
   3ef04:	mov	r0, #1
   3ef08:	bl	1132c <__printf_chk@plt>
   3ef0c:	cmp	r4, #0
   3ef10:	movne	r5, fp
   3ef14:	beq	3ef34 <__assert_fail@plt+0x2db30>
   3ef18:	movw	r1, #34544	; 0x86f0
   3ef1c:	mov	r0, #1
   3ef20:	movt	r1, #7
   3ef24:	ldrb	r2, [r5, #1]!
   3ef28:	bl	1132c <__printf_chk@plt>
   3ef2c:	subs	r4, r4, #1
   3ef30:	bne	3ef18 <__assert_fail@plt+0x2db14>
   3ef34:	movw	r0, #15528	; 0x3ca8
   3ef38:	movt	r0, #6
   3ef3c:	bl	11218 <puts@plt>
   3ef40:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ef44:	movw	r0, #34344	; 0x8628
   3ef48:	movt	r0, #7
   3ef4c:	bl	11218 <puts@plt>
   3ef50:	cmp	r7, r5
   3ef54:	bhi	3ee4c <__assert_fail@plt+0x2da48>
   3ef58:	b	3d0c8 <__assert_fail@plt+0x2bcc4>
   3ef5c:	mov	r6, #0
   3ef60:	movw	r1, #34416	; 0x8670
   3ef64:	mov	r0, #1
   3ef68:	movt	r1, #7
   3ef6c:	bl	1132c <__printf_chk@plt>
   3ef70:	mov	r0, r5
   3ef74:	mov	r2, r6
   3ef78:	mov	r3, r7
   3ef7c:	mov	r1, r4
   3ef80:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3ef84:	str	r6, [sp]
   3ef88:	mov	r3, r1
   3ef8c:	mov	r2, r0
   3ef90:	movw	r0, #64404	; 0xfb94
   3ef94:	movt	r0, #5
   3ef98:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ef9c:	movw	r1, #34448	; 0x8690
   3efa0:	movt	r1, #7
   3efa4:	mov	r2, r0
   3efa8:	mov	r0, #1
   3efac:	bl	1132c <__printf_chk@plt>
   3efb0:	ldr	r3, [sp, #116]	; 0x74
   3efb4:	mov	r2, r6
   3efb8:	mov	r1, r4
   3efbc:	add	r5, r5, r3
   3efc0:	mov	r3, r7
   3efc4:	mov	r0, r5
   3efc8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3efcc:	str	r6, [sp]
   3efd0:	mov	r3, r1
   3efd4:	mov	r2, r0
   3efd8:	movw	r0, #64404	; 0xfb94
   3efdc:	movt	r0, #5
   3efe0:	bl	389e0 <__assert_fail@plt+0x275dc>
   3efe4:	movw	r1, #34452	; 0x8694
   3efe8:	movt	r1, #7
   3efec:	mov	r2, r0
   3eff0:	mov	r0, #1
   3eff4:	bl	1132c <__printf_chk@plt>
   3eff8:	ldr	r3, [sp, #116]	; 0x74
   3effc:	mov	r2, r6
   3f000:	mov	r1, r4
   3f004:	add	r5, r5, r3
   3f008:	mov	r3, r7
   3f00c:	mov	r0, r5
   3f010:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3f014:	str	r6, [sp]
   3f018:	mov	r3, r1
   3f01c:	mov	r2, r0
   3f020:	movw	r0, #64404	; 0xfb94
   3f024:	movt	r0, #5
   3f028:	bl	389e0 <__assert_fail@plt+0x275dc>
   3f02c:	movw	r1, #34456	; 0x8698
   3f030:	movt	r1, #7
   3f034:	mov	r2, r0
   3f038:	mov	r0, #1
   3f03c:	bl	1132c <__printf_chk@plt>
   3f040:	ldr	r3, [sp, #116]	; 0x74
   3f044:	add	r5, r5, r3
   3f048:	b	3ef50 <__assert_fail@plt+0x2db4c>
   3f04c:	mov	r0, r5
   3f050:	mov	r2, #0
   3f054:	mov	r3, r7
   3f058:	mov	r1, r4
   3f05c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3f060:	mov	r3, r1
   3f064:	mov	r2, r0
   3f068:	mov	r1, #0
   3f06c:	movw	r0, #64404	; 0xfb94
   3f070:	str	r1, [sp]
   3f074:	movt	r0, #5
   3f078:	bl	389e0 <__assert_fail@plt+0x275dc>
   3f07c:	movw	r1, #34372	; 0x8644
   3f080:	movt	r1, #7
   3f084:	mov	r2, r0
   3f088:	mov	r0, #1
   3f08c:	bl	1132c <__printf_chk@plt>
   3f090:	ldr	r3, [sp, #116]	; 0x74
   3f094:	add	r5, r5, r3
   3f098:	b	3ef50 <__assert_fail@plt+0x2db4c>
   3f09c:	mov	r2, #5
   3f0a0:	movw	r1, #32712	; 0x7fc8
   3f0a4:	movt	r1, #7
   3f0a8:	mov	r9, fp
   3f0ac:	ldr	r7, [sp, #56]	; 0x38
   3f0b0:	bl	11170 <dcgettext@plt>
   3f0b4:	bl	4b9ec <warn@@Base>
   3f0b8:	b	3ea60 <__assert_fail@plt+0x2d65c>
   3f0bc:	mov	r2, #5
   3f0c0:	movw	r1, #33828	; 0x8424
   3f0c4:	mov	r0, #0
   3f0c8:	movt	r1, #7
   3f0cc:	bl	11170 <dcgettext@plt>
   3f0d0:	ldr	r1, [sp, #116]	; 0x74
   3f0d4:	mov	r4, #0
   3f0d8:	mov	r5, #0
   3f0dc:	mvn	r1, r1
   3f0e0:	add	r1, r1, sl
   3f0e4:	bl	4b9ec <warn@@Base>
   3f0e8:	b	3eb40 <__assert_fail@plt+0x2d73c>
   3f0ec:	mov	r4, #0
   3f0f0:	mov	r5, #0
   3f0f4:	b	3eb40 <__assert_fail@plt+0x2d73c>
   3f0f8:	bl	1117c <__stack_chk_fail@plt>
   3f0fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f100:	movw	r6, #16680	; 0x4128
   3f104:	sub	sp, sp, #36	; 0x24
   3f108:	movt	r6, #9
   3f10c:	mov	fp, r3
   3f110:	mov	r8, r0
   3f114:	ldr	ip, [r6]
   3f118:	mov	r0, #72	; 0x48
   3f11c:	ldr	r3, [sp, #76]	; 0x4c
   3f120:	mov	r4, r1
   3f124:	str	r2, [sp, #12]
   3f128:	add	sl, r8, #1
   3f12c:	ldr	r2, [sp, #72]	; 0x48
   3f130:	str	ip, [sp, #28]
   3f134:	str	r3, [sp, #16]
   3f138:	str	r2, [sp, #8]
   3f13c:	bl	4eba0 <warn@@Base+0x31b4>
   3f140:	mov	r1, #0
   3f144:	mov	r2, #72	; 0x48
   3f148:	mov	r5, r0
   3f14c:	bl	112f0 <memset@plt>
   3f150:	mov	r0, #2
   3f154:	bl	4eba0 <warn@@Base+0x31b4>
   3f158:	str	r0, [r5, #12]
   3f15c:	mov	r0, #4
   3f160:	bl	4eba0 <warn@@Base+0x31b4>
   3f164:	cmp	sl, r4
   3f168:	str	sl, [r5, #20]
   3f16c:	ldrb	r7, [r8]
   3f170:	str	r0, [r5, #16]
   3f174:	bcs	3f1a0 <__assert_fail@plt+0x2dd9c>
   3f178:	ldrb	r3, [r8, #1]
   3f17c:	add	sl, r8, #2
   3f180:	cmp	r3, #0
   3f184:	bne	3f198 <__assert_fail@plt+0x2dd94>
   3f188:	b	3f1a0 <__assert_fail@plt+0x2dd9c>
   3f18c:	ldrb	r3, [sl], #1
   3f190:	cmp	r3, #0
   3f194:	beq	3f1a0 <__assert_fail@plt+0x2dd9c>
   3f198:	cmp	r4, sl
   3f19c:	bhi	3f18c <__assert_fail@plt+0x2dd88>
   3f1a0:	cmp	r4, sl
   3f1a4:	beq	3f588 <__assert_fail@plt+0x2e184>
   3f1a8:	ldrb	r3, [r8, #1]
   3f1ac:	cmp	r3, #101	; 0x65
   3f1b0:	bne	3f1d8 <__assert_fail@plt+0x2ddd4>
   3f1b4:	ldrb	r3, [r8, #2]
   3f1b8:	cmp	r3, #104	; 0x68
   3f1bc:	bne	3f1d8 <__assert_fail@plt+0x2ddd4>
   3f1c0:	ldrb	r3, [r8, #3]
   3f1c4:	cmp	r3, #0
   3f1c8:	movweq	r3, #26448	; 0x6750
   3f1cc:	movteq	r3, #9
   3f1d0:	ldreq	r3, [r3]
   3f1d4:	addeq	sl, sl, r3
   3f1d8:	cmp	r7, #3
   3f1dc:	ble	3f234 <__assert_fail@plt+0x2de30>
   3f1e0:	add	r8, sl, #1
   3f1e4:	cmp	r4, r8
   3f1e8:	bhi	3f2c8 <__assert_fail@plt+0x2dec4>
   3f1ec:	cmp	r4, sl
   3f1f0:	bhi	3f450 <__assert_fail@plt+0x2e04c>
   3f1f4:	mov	r3, #0
   3f1f8:	strb	r3, [r5, #70]	; 0x46
   3f1fc:	mov	r2, #5
   3f200:	movw	r1, #35440	; 0x8a70
   3f204:	mov	r0, #0
   3f208:	movt	r1, #7
   3f20c:	bl	11170 <dcgettext@plt>
   3f210:	ldrb	r1, [r5, #70]	; 0x46
   3f214:	bl	4b9ec <warn@@Base>
   3f218:	mov	r0, r4
   3f21c:	ldr	r2, [sp, #28]
   3f220:	ldr	r3, [r6]
   3f224:	cmp	r2, r3
   3f228:	bne	3f5e0 <__assert_fail@plt+0x2e1dc>
   3f22c:	add	sp, sp, #36	; 0x24
   3f230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f234:	movw	r9, #26448	; 0x6750
   3f238:	movt	r9, #9
   3f23c:	add	r8, sp, #24
   3f240:	mov	r3, #0
   3f244:	ldr	ip, [r9]
   3f248:	mov	r2, r3
   3f24c:	mov	r0, sl
   3f250:	strb	r3, [r5, #71]	; 0x47
   3f254:	mov	r1, r8
   3f258:	mov	r3, r4
   3f25c:	strb	ip, [r5, #70]	; 0x46
   3f260:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3f264:	ldr	ip, [sp, #24]
   3f268:	mov	r1, r8
   3f26c:	mov	r2, #1
   3f270:	mov	r3, r4
   3f274:	add	sl, sl, ip
   3f278:	str	r0, [r5, #24]
   3f27c:	mov	r0, sl
   3f280:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3f284:	ldr	ip, [sp, #24]
   3f288:	cmp	r7, #1
   3f28c:	add	ip, sl, ip
   3f290:	str	r0, [r5, #28]
   3f294:	bne	3f37c <__assert_fail@plt+0x2df78>
   3f298:	add	sl, ip, #1
   3f29c:	cmp	r4, sl
   3f2a0:	bhi	3f430 <__assert_fail@plt+0x2e02c>
   3f2a4:	cmp	r4, ip
   3f2a8:	bls	3f2bc <__assert_fail@plt+0x2deb8>
   3f2ac:	rsb	r1, ip, r4
   3f2b0:	sub	r3, r1, #1
   3f2b4:	cmp	r3, #7
   3f2b8:	bls	3f434 <__assert_fail@plt+0x2e030>
   3f2bc:	mov	r3, #0
   3f2c0:	str	r3, [r5, #64]	; 0x40
   3f2c4:	b	3f3a4 <__assert_fail@plt+0x2dfa0>
   3f2c8:	mov	r1, #1
   3f2cc:	movw	r9, #26492	; 0x677c
   3f2d0:	movt	r9, #9
   3f2d4:	mov	r0, sl
   3f2d8:	ldr	r3, [r9]
   3f2dc:	blx	r3
   3f2e0:	uxtb	ip, r0
   3f2e4:	strb	ip, [r5, #70]	; 0x46
   3f2e8:	sub	r3, ip, #1
   3f2ec:	cmp	r3, #7
   3f2f0:	bhi	3f1fc <__assert_fail@plt+0x2ddf8>
   3f2f4:	add	sl, sl, #2
   3f2f8:	cmp	r4, sl
   3f2fc:	bhi	3f3ec <__assert_fail@plt+0x2dfe8>
   3f300:	cmp	r4, r8
   3f304:	bls	3f318 <__assert_fail@plt+0x2df14>
   3f308:	rsb	r1, r8, r4
   3f30c:	sub	r3, r1, #1
   3f310:	cmp	r3, #7
   3f314:	bls	3f3f0 <__assert_fail@plt+0x2dfec>
   3f318:	mov	r3, #0
   3f31c:	strb	r3, [r5, #71]	; 0x47
   3f320:	add	r3, ip, r3
   3f324:	cmp	r3, #8
   3f328:	bgt	3f40c <__assert_fail@plt+0x2e008>
   3f32c:	add	r8, sp, #24
   3f330:	movw	r9, #26448	; 0x6750
   3f334:	movt	r9, #9
   3f338:	mov	r0, sl
   3f33c:	mov	r2, #0
   3f340:	mov	r3, r4
   3f344:	mov	r1, r8
   3f348:	str	ip, [r9]
   3f34c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3f350:	ldr	ip, [sp, #24]
   3f354:	mov	r1, r8
   3f358:	mov	r2, #1
   3f35c:	add	sl, sl, ip
   3f360:	mov	r3, r4
   3f364:	str	r0, [r5, #24]
   3f368:	mov	r0, sl
   3f36c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3f370:	ldr	ip, [sp, #24]
   3f374:	add	ip, sl, ip
   3f378:	str	r0, [r5, #28]
   3f37c:	mov	r0, ip
   3f380:	mov	r1, r8
   3f384:	mov	r2, #0
   3f388:	mov	r3, r4
   3f38c:	str	ip, [sp]
   3f390:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3f394:	ldr	sl, [sp, #24]
   3f398:	ldr	ip, [sp]
   3f39c:	add	sl, ip, sl
   3f3a0:	str	r0, [r5, #64]	; 0x40
   3f3a4:	ldr	r3, [r5, #20]
   3f3a8:	ldrb	r3, [r3]
   3f3ac:	cmp	r3, #122	; 0x7a
   3f3b0:	movne	r8, #0
   3f3b4:	movne	ip, r8
   3f3b8:	beq	3f464 <__assert_fail@plt+0x2e060>
   3f3bc:	ldr	r3, [sp, #12]
   3f3c0:	cmp	fp, #0
   3f3c4:	ldr	r2, [sp, #8]
   3f3c8:	str	r5, [r3]
   3f3cc:	strne	r7, [fp]
   3f3d0:	cmp	r2, #0
   3f3d4:	strne	ip, [r2]
   3f3d8:	ldrne	r3, [sp, #16]
   3f3dc:	movne	r0, sl
   3f3e0:	moveq	r0, sl
   3f3e4:	strne	r8, [r3]
   3f3e8:	b	3f21c <__assert_fail@plt+0x2de18>
   3f3ec:	mov	r1, #1
   3f3f0:	ldr	r3, [r9]
   3f3f4:	mov	r0, r8
   3f3f8:	blx	r3
   3f3fc:	uxtb	r0, r0
   3f400:	strb	r0, [r5, #71]	; 0x47
   3f404:	cmp	r0, #8
   3f408:	bls	3f5a8 <__assert_fail@plt+0x2e1a4>
   3f40c:	mov	r2, #5
   3f410:	movw	r1, #35480	; 0x8a98
   3f414:	mov	r0, #0
   3f418:	movt	r1, #7
   3f41c:	bl	11170 <dcgettext@plt>
   3f420:	ldrb	r1, [r5, #71]	; 0x47
   3f424:	bl	4b9ec <warn@@Base>
   3f428:	mov	r0, r4
   3f42c:	b	3f21c <__assert_fail@plt+0x2de18>
   3f430:	mov	r1, r7
   3f434:	movw	r3, #26492	; 0x677c
   3f438:	movt	r3, #9
   3f43c:	mov	r0, ip
   3f440:	ldr	r3, [r3]
   3f444:	blx	r3
   3f448:	str	r0, [r5, #64]	; 0x40
   3f44c:	b	3f3a4 <__assert_fail@plt+0x2dfa0>
   3f450:	rsb	r1, sl, r4
   3f454:	sub	r3, r1, #1
   3f458:	cmp	r3, #7
   3f45c:	bhi	3f1f4 <__assert_fail@plt+0x2ddf0>
   3f460:	b	3f2cc <__assert_fail@plt+0x2dec8>
   3f464:	mov	r1, r8
   3f468:	mov	r0, sl
   3f46c:	mov	r2, #0
   3f470:	mov	r3, r4
   3f474:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3f478:	ldr	r8, [sp, #24]
   3f47c:	add	r8, sl, r8
   3f480:	add	sl, r8, r0
   3f484:	mov	ip, r0
   3f488:	cmp	r4, sl
   3f48c:	bcc	3f5b4 <__assert_fail@plt+0x2e1b0>
   3f490:	cmp	r0, #0
   3f494:	beq	3f3bc <__assert_fail@plt+0x2dfb8>
   3f498:	ldr	r3, [r5, #20]
   3f49c:	cmp	r8, sl
   3f4a0:	add	r2, r3, #1
   3f4a4:	str	r2, [sp, #20]
   3f4a8:	bhi	3f554 <__assert_fail@plt+0x2e150>
   3f4ac:	ldr	r2, [sp, #20]
   3f4b0:	cmp	r4, r2
   3f4b4:	bls	3f3bc <__assert_fail@plt+0x2dfb8>
   3f4b8:	add	r2, r8, ip
   3f4bc:	cmp	r2, r8
   3f4c0:	bls	3f3bc <__assert_fail@plt+0x2dfb8>
   3f4c4:	ldr	r1, [r9]
   3f4c8:	sub	r4, r4, #1
   3f4cc:	mov	r0, r8
   3f4d0:	add	r9, r1, #1
   3f4d4:	b	3f4f8 <__assert_fail@plt+0x2e0f4>
   3f4d8:	cmp	r1, #82	; 0x52
   3f4dc:	beq	3f544 <__assert_fail@plt+0x2e140>
   3f4e0:	cmp	r1, #83	; 0x53
   3f4e4:	bne	3f3bc <__assert_fail@plt+0x2dfb8>
   3f4e8:	cmp	r3, r4
   3f4ec:	beq	3f3bc <__assert_fail@plt+0x2dfb8>
   3f4f0:	cmp	r2, r0
   3f4f4:	bls	3f3bc <__assert_fail@plt+0x2dfb8>
   3f4f8:	ldrb	r1, [r3, #1]!
   3f4fc:	cmp	r1, #76	; 0x4c
   3f500:	addeq	r0, r0, #1
   3f504:	beq	3f4e8 <__assert_fail@plt+0x2e0e4>
   3f508:	cmp	r1, #80	; 0x50
   3f50c:	bne	3f4d8 <__assert_fail@plt+0x2e0d4>
   3f510:	ldrb	r1, [r0]
   3f514:	and	r1, r1, #7
   3f518:	cmp	r1, #3
   3f51c:	moveq	r1, #5
   3f520:	beq	3f53c <__assert_fail@plt+0x2e138>
   3f524:	cmp	r1, #4
   3f528:	moveq	r1, #9
   3f52c:	beq	3f53c <__assert_fail@plt+0x2e138>
   3f530:	cmp	r1, #2
   3f534:	movne	r1, r9
   3f538:	moveq	r1, #3
   3f53c:	add	r0, r0, r1
   3f540:	b	3f4e8 <__assert_fail@plt+0x2e0e4>
   3f544:	ldrb	r1, [r0]
   3f548:	add	r0, r0, #1
   3f54c:	strb	r1, [r5, #68]	; 0x44
   3f550:	b	3f4e8 <__assert_fail@plt+0x2e0e4>
   3f554:	mov	r2, #5
   3f558:	movw	r1, #35556	; 0x8ae4
   3f55c:	mov	r0, #0
   3f560:	movt	r1, #7
   3f564:	str	r3, [sp, #4]
   3f568:	str	ip, [sp]
   3f56c:	bl	11170 <dcgettext@plt>
   3f570:	ldr	ip, [sp]
   3f574:	mov	r1, ip
   3f578:	bl	4b9ec <warn@@Base>
   3f57c:	mov	ip, #0
   3f580:	ldr	r3, [sp, #4]
   3f584:	b	3f4ac <__assert_fail@plt+0x2e0a8>
   3f588:	mov	r2, #5
   3f58c:	movw	r1, #35400	; 0x8a48
   3f590:	mov	r0, #0
   3f594:	movt	r1, #7
   3f598:	bl	11170 <dcgettext@plt>
   3f59c:	bl	4b9ec <warn@@Base>
   3f5a0:	mov	r0, r4
   3f5a4:	b	3f21c <__assert_fail@plt+0x2de18>
   3f5a8:	ldrb	ip, [r5, #70]	; 0x46
   3f5ac:	mov	r3, r0
   3f5b0:	b	3f320 <__assert_fail@plt+0x2df1c>
   3f5b4:	mov	r2, #5
   3f5b8:	movw	r1, #35520	; 0x8ac0
   3f5bc:	mov	r0, #0
   3f5c0:	movt	r1, #7
   3f5c4:	str	ip, [sp]
   3f5c8:	bl	11170 <dcgettext@plt>
   3f5cc:	ldr	ip, [sp]
   3f5d0:	mov	r1, ip
   3f5d4:	bl	4b9ec <warn@@Base>
   3f5d8:	mov	r0, r4
   3f5dc:	b	3f21c <__assert_fail@plt+0x2de18>
   3f5e0:	bl	1117c <__stack_chk_fail@plt>
   3f5e4:	ldr	r1, [pc, #20]	; 3f600 <__assert_fail@plt+0x2e1fc>
   3f5e8:	movw	r3, #24696	; 0x6078
   3f5ec:	movt	r3, #9
   3f5f0:	mov	r2, #101	; 0x65
   3f5f4:	str	r1, [r3, #1104]	; 0x450
   3f5f8:	str	r2, [r3, #1108]	; 0x454
   3f5fc:	bx	lr
   3f600:	andeq	r6, r7, r8, asr r6
   3f604:	ldr	r1, [pc, #20]	; 3f620 <__assert_fail@plt+0x2e21c>
   3f608:	movw	r3, #24696	; 0x6078
   3f60c:	movt	r3, #9
   3f610:	mov	r2, #101	; 0x65
   3f614:	str	r1, [r3, #1104]	; 0x450
   3f618:	str	r2, [r3, #1108]	; 0x454
   3f61c:	bx	lr
   3f620:	andeq	r6, r7, ip, ror #15
   3f624:	ldr	r1, [pc, #20]	; 3f640 <__assert_fail@plt+0x2e23c>
   3f628:	movw	r3, #24696	; 0x6078
   3f62c:	movt	r3, #9
   3f630:	mov	r2, #126	; 0x7e
   3f634:	str	r1, [r3, #1104]	; 0x450
   3f638:	str	r2, [r3, #1108]	; 0x454
   3f63c:	bx	lr
   3f640:	andeq	r6, r7, r0, lsl #19
   3f644:	ldr	r1, [pc, #20]	; 3f660 <__assert_fail@plt+0x2e25c>
   3f648:	movw	r3, #24696	; 0x6078
   3f64c:	movt	r3, #9
   3f650:	mov	r2, #96	; 0x60
   3f654:	str	r1, [r3, #1104]	; 0x450
   3f658:	str	r2, [r3, #1108]	; 0x454
   3f65c:	bx	lr
   3f660:	andeq	r6, r7, r8, ror fp
   3f664:	ldr	r1, [pc, #20]	; 3f680 <__assert_fail@plt+0x2e27c>
   3f668:	movw	r3, #24696	; 0x6078
   3f66c:	movt	r3, #9
   3f670:	mov	r2, #84	; 0x54
   3f674:	str	r1, [r3, #1104]	; 0x450
   3f678:	str	r2, [r3, #1108]	; 0x454
   3f67c:	bx	lr
   3f680:	strdeq	r6, [r7], -r8
   3f684:	cmp	r0, #62	; 0x3e
   3f688:	beq	3f700 <__assert_fail@plt+0x2e2fc>
   3f68c:	bhi	3f6b0 <__assert_fail@plt+0x2e2ac>
   3f690:	cmp	r0, #6
   3f694:	beq	3f6e4 <__assert_fail@plt+0x2e2e0>
   3f698:	cmp	r0, #22
   3f69c:	beq	3f71c <__assert_fail@plt+0x2e318>
   3f6a0:	cmp	r0, #3
   3f6a4:	bxne	lr
   3f6a8:	ldr	r1, [pc, #136]	; 3f738 <__assert_fail@plt+0x2e334>
   3f6ac:	b	3f6e8 <__assert_fail@plt+0x2e2e4>
   3f6b0:	cmp	r0, #180	; 0xb4
   3f6b4:	bxcc	lr
   3f6b8:	cmp	r0, #181	; 0xb5
   3f6bc:	bls	3f700 <__assert_fail@plt+0x2e2fc>
   3f6c0:	cmp	r0, #183	; 0xb7
   3f6c4:	bxne	lr
   3f6c8:	ldr	r1, [pc, #108]	; 3f73c <__assert_fail@plt+0x2e338>
   3f6cc:	movw	r3, #24696	; 0x6078
   3f6d0:	movt	r3, #9
   3f6d4:	mov	r2, #96	; 0x60
   3f6d8:	str	r1, [r3, #1104]	; 0x450
   3f6dc:	str	r2, [r3, #1108]	; 0x454
   3f6e0:	bx	lr
   3f6e4:	ldr	r1, [pc, #84]	; 3f740 <__assert_fail@plt+0x2e33c>
   3f6e8:	movw	r3, #24696	; 0x6078
   3f6ec:	movt	r3, #9
   3f6f0:	mov	r2, #101	; 0x65
   3f6f4:	str	r1, [r3, #1104]	; 0x450
   3f6f8:	str	r2, [r3, #1108]	; 0x454
   3f6fc:	bx	lr
   3f700:	ldr	r1, [pc, #60]	; 3f744 <__assert_fail@plt+0x2e340>
   3f704:	movw	r3, #24696	; 0x6078
   3f708:	movt	r3, #9
   3f70c:	mov	r2, #126	; 0x7e
   3f710:	str	r1, [r3, #1104]	; 0x450
   3f714:	str	r2, [r3, #1108]	; 0x454
   3f718:	bx	lr
   3f71c:	ldr	r1, [pc, #36]	; 3f748 <__assert_fail@plt+0x2e344>
   3f720:	movw	r3, #24696	; 0x6078
   3f724:	movt	r3, #9
   3f728:	mov	r2, #84	; 0x54
   3f72c:	str	r1, [r3, #1104]	; 0x450
   3f730:	str	r2, [r3, #1108]	; 0x454
   3f734:	bx	lr
   3f738:	andeq	r6, r7, r8, asr r6
   3f73c:	andeq	r6, r7, r8, ror fp
   3f740:	andeq	r6, r7, ip, ror #15
   3f744:	andeq	r6, r7, r0, lsl #19
   3f748:	strdeq	r6, [r7], -r8
   3f74c:	push	{r3, r4, r5, lr}
   3f750:	mov	r4, r0
   3f754:	mvn	r0, #0
   3f758:	mov	r5, r1
   3f75c:	bl	52568 <zcfree@@Base+0xf38>
   3f760:	cmp	r0, r4
   3f764:	bls	3f774 <__assert_fail@plt+0x2e370>
   3f768:	mul	r0, r4, r5
   3f76c:	pop	{r3, r4, r5, lr}
   3f770:	b	4eba0 <warn@@Base+0x31b4>
   3f774:	mov	r0, #0
   3f778:	pop	{r3, r4, r5, pc}
   3f77c:	push	{r3, r4, r5, lr}
   3f780:	mov	r4, r0
   3f784:	mvn	r0, #0
   3f788:	mov	r5, r1
   3f78c:	bl	52568 <zcfree@@Base+0xf38>
   3f790:	cmp	r0, r4
   3f794:	bls	3f7a4 <__assert_fail@plt+0x2e3a0>
   3f798:	mul	r0, r4, r5
   3f79c:	pop	{r3, r4, r5, lr}
   3f7a0:	b	4eba0 <warn@@Base+0x31b4>
   3f7a4:	movw	r3, #16692	; 0x4134
   3f7a8:	movt	r3, #9
   3f7ac:	mov	r2, #5
   3f7b0:	movw	r1, #35600	; 0x8b10
   3f7b4:	mov	r0, #0
   3f7b8:	movt	r1, #7
   3f7bc:	ldr	r5, [r3]
   3f7c0:	bl	11170 <dcgettext@plt>
   3f7c4:	mov	r3, r4
   3f7c8:	mov	r1, #1
   3f7cc:	mov	r2, r0
   3f7d0:	mov	r0, r5
   3f7d4:	bl	11338 <__fprintf_chk@plt>
   3f7d8:	mov	r0, #1
   3f7dc:	bl	4eaa8 <warn@@Base+0x30bc>
   3f7e0:	push	{r4, r5, r6, lr}
   3f7e4:	mov	r4, r1
   3f7e8:	mov	r6, r0
   3f7ec:	mov	r1, r2
   3f7f0:	mvn	r0, #0
   3f7f4:	mov	r5, r2
   3f7f8:	bl	52568 <zcfree@@Base+0xf38>
   3f7fc:	cmp	r0, r4
   3f800:	bls	3f814 <__assert_fail@plt+0x2e410>
   3f804:	mov	r0, r6
   3f808:	mul	r1, r4, r5
   3f80c:	pop	{r4, r5, r6, lr}
   3f810:	b	4ec00 <warn@@Base+0x3214>
   3f814:	movw	r3, #16692	; 0x4134
   3f818:	movt	r3, #9
   3f81c:	mov	r2, #5
   3f820:	movw	r1, #35676	; 0x8b5c
   3f824:	mov	r0, #0
   3f828:	movt	r1, #7
   3f82c:	ldr	r5, [r3]
   3f830:	bl	11170 <dcgettext@plt>
   3f834:	mov	r3, r4
   3f838:	mov	r1, #1
   3f83c:	mov	r2, r0
   3f840:	mov	r0, r5
   3f844:	bl	11338 <__fprintf_chk@plt>
   3f848:	mov	r0, #1
   3f84c:	bl	4eaa8 <warn@@Base+0x30bc>
   3f850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f854:	movw	r8, #16680	; 0x4128
   3f858:	sub	sp, sp, #196	; 0xc4
   3f85c:	movt	r8, #9
   3f860:	mov	sl, r2
   3f864:	cmp	sl, r3
   3f868:	ldr	r5, [sp, #248]	; 0xf8
   3f86c:	mov	r4, r0
   3f870:	ldr	r2, [r8]
   3f874:	mov	r9, r1
   3f878:	ldr	r6, [sp, #260]	; 0x104
   3f87c:	mov	r0, #0
   3f880:	ldr	r7, [sp, #268]	; 0x10c
   3f884:	mov	r1, #0
   3f888:	ldr	ip, [sp, #272]	; 0x110
   3f88c:	mov	fp, r3
   3f890:	str	r5, [sp, #64]	; 0x40
   3f894:	str	r2, [sp, #188]	; 0xbc
   3f898:	strd	r0, [sp, #104]	; 0x68
   3f89c:	ldr	r5, [sp, #252]	; 0xfc
   3f8a0:	str	r6, [sp, #48]	; 0x30
   3f8a4:	str	r7, [sp, #80]	; 0x50
   3f8a8:	str	ip, [sp, #68]	; 0x44
   3f8ac:	bhi	3fb2c <__assert_fail@plt+0x2e728>
   3f8b0:	movne	r2, #0
   3f8b4:	moveq	r2, #1
   3f8b8:	cmp	r9, #25
   3f8bc:	moveq	r2, #0
   3f8c0:	andne	r2, r2, #1
   3f8c4:	cmp	r2, #0
   3f8c8:	bne	3fb2c <__assert_fail@plt+0x2e728>
   3f8cc:	cmp	r9, #17
   3f8d0:	beq	40500 <__assert_fail@plt+0x2f0fc>
   3f8d4:	bls	3fb60 <__assert_fail@plt+0x2e75c>
   3f8d8:	cmp	r9, #23
   3f8dc:	beq	40518 <__assert_fail@plt+0x2f114>
   3f8e0:	bls	3fc30 <__assert_fail@plt+0x2e82c>
   3f8e4:	movw	r1, #7938	; 0x1f02
   3f8e8:	cmp	r9, r1
   3f8ec:	beq	403a4 <__assert_fail@plt+0x2efa0>
   3f8f0:	bhi	3fde8 <__assert_fail@plt+0x2e9e4>
   3f8f4:	cmp	r9, #25
   3f8f8:	beq	3fd94 <__assert_fail@plt+0x2e990>
   3f8fc:	movw	r3, #7937	; 0x1f01
   3f900:	cmp	r9, r3
   3f904:	bne	3fdf8 <__assert_fail@plt+0x2e9f4>
   3f908:	mov	r0, sl
   3f90c:	add	r1, sp, #100	; 0x64
   3f910:	mov	r2, #0
   3f914:	mov	r3, fp
   3f918:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3f91c:	ldr	ip, [sp, #100]	; 0x64
   3f920:	add	ip, sl, ip
   3f924:	str	ip, [sp, #52]	; 0x34
   3f928:	strd	r0, [sp, #104]	; 0x68
   3f92c:	ldr	r7, [sp, #264]	; 0x108
   3f930:	cmp	r7, #0
   3f934:	bne	3fbc8 <__assert_fail@plt+0x2e7c4>
   3f938:	mov	r0, r7
   3f93c:	mov	r2, #5
   3f940:	movw	r1, #36296	; 0x8dc8
   3f944:	movt	r1, #7
   3f948:	bl	11170 <dcgettext@plt>
   3f94c:	ldrd	r2, [sp, #104]	; 0x68
   3f950:	str	r7, [sp]
   3f954:	movw	r5, #14352	; 0x3810
   3f958:	movt	r5, #9
   3f95c:	str	r0, [sp, #84]	; 0x54
   3f960:	movw	r0, #18952	; 0x4a08
   3f964:	movt	r0, #6
   3f968:	bl	389e0 <__assert_fail@plt+0x275dc>
   3f96c:	ldr	r3, [sp, #104]	; 0x68
   3f970:	ldr	r2, [sp, #108]	; 0x6c
   3f974:	ldr	r1, [sp, #244]	; 0xf4
   3f978:	ldr	lr, [r5, #2124]	; 0x84c
   3f97c:	cmp	lr, #0
   3f980:	mov	ip, r0
   3f984:	ldr	r0, [sp, #240]	; 0xf0
   3f988:	umull	r6, r7, r3, r0
   3f98c:	mul	r2, r0, r2
   3f990:	mla	r2, r3, r1, r2
   3f994:	strd	r6, [sp, #72]	; 0x48
   3f998:	add	r2, r2, r7
   3f99c:	str	r2, [sp, #76]	; 0x4c
   3f9a0:	beq	41e48 <__assert_fail@plt+0x30a44>
   3f9a4:	ldrd	r0, [sp, #72]	; 0x48
   3f9a8:	movw	r3, #2136	; 0x858
   3f9ac:	ldrd	r6, [sp, #240]	; 0xf0
   3f9b0:	ldrd	r2, [r3, r5]
   3f9b4:	adds	r0, r0, r6
   3f9b8:	adc	r1, r1, r7
   3f9bc:	cmp	r1, r3
   3f9c0:	cmpeq	r0, r2
   3f9c4:	bhi	419a4 <__assert_fail@plt+0x305a0>
   3f9c8:	ldr	r1, [sp, #72]	; 0x48
   3f9cc:	movw	r3, #26492	; 0x677c
   3f9d0:	movt	r3, #9
   3f9d4:	add	r0, lr, r1
   3f9d8:	ldr	r1, [sp, #240]	; 0xf0
   3f9dc:	ldr	r3, [r3]
   3f9e0:	str	ip, [sp, #56]	; 0x38
   3f9e4:	blx	r3
   3f9e8:	ldr	r5, [sp, #264]	; 0x108
   3f9ec:	str	r5, [sp]
   3f9f0:	mov	r2, r0
   3f9f4:	mov	r3, r1
   3f9f8:	movw	r0, #18952	; 0x4a08
   3f9fc:	movt	r0, #6
   3fa00:	bl	389e0 <__assert_fail@plt+0x275dc>
   3fa04:	ldr	ip, [sp, #56]	; 0x38
   3fa08:	mov	r3, r0
   3fa0c:	ldr	r1, [sp, #84]	; 0x54
   3fa10:	mov	r2, ip
   3fa14:	mov	r0, #1
   3fa18:	mov	r7, #0
   3fa1c:	bl	1132c <__printf_chk@plt>
   3fa20:	movw	r3, #26428	; 0x673c
   3fa24:	movt	r3, #9
   3fa28:	ldr	r3, [r3]
   3fa2c:	cmp	r3, #0
   3fa30:	bne	3fbcc <__assert_fail@plt+0x2e7c8>
   3fa34:	movw	r3, #26460	; 0x675c
   3fa38:	movt	r3, #9
   3fa3c:	ldr	r3, [r3]
   3fa40:	cmp	r3, #0
   3fa44:	bne	3fbcc <__assert_fail@plt+0x2e7c8>
   3fa48:	rsbs	r3, r4, #1
   3fa4c:	ldr	ip, [sp, #264]	; 0x108
   3fa50:	movcc	r3, #0
   3fa54:	cmp	ip, #0
   3fa58:	orrne	r3, r3, #1
   3fa5c:	cmp	r3, #0
   3fa60:	bne	3fc28 <__assert_fail@plt+0x2e824>
   3fa64:	cmp	r4, #56	; 0x38
   3fa68:	beq	3ff9c <__assert_fail@plt+0x2eb98>
   3fa6c:	bhi	3ff64 <__assert_fail@plt+0x2eb60>
   3fa70:	cmp	r4, #25
   3fa74:	beq	3ff9c <__assert_fail@plt+0x2eb98>
   3fa78:	bhi	4004c <__assert_fail@plt+0x2ec48>
   3fa7c:	cmp	r4, #19
   3fa80:	beq	40918 <__assert_fail@plt+0x2f514>
   3fa84:	bls	408b4 <__assert_fail@plt+0x2f4b0>
   3fa88:	cmp	r4, #23
   3fa8c:	beq	4097c <__assert_fail@plt+0x2f578>
   3fa90:	cmp	r4, #24
   3fa94:	bne	3fc28 <__assert_fail@plt+0x2e824>
   3fa98:	movw	r3, #7968	; 0x1f20
   3fa9c:	cmp	r9, #32
   3faa0:	cmpne	r9, r3
   3faa4:	beq	3fc28 <__assert_fail@plt+0x2e824>
   3faa8:	sub	r3, r9, #17
   3faac:	ldrd	r4, [sp, #104]	; 0x68
   3fab0:	cmp	r9, #21
   3fab4:	cmpne	r3, #2
   3fab8:	bhi	3facc <__assert_fail@plt+0x2e6c8>
   3fabc:	ldrd	r0, [sp, #232]	; 0xe8
   3fac0:	adds	r4, r4, r0
   3fac4:	adc	r5, r5, r1
   3fac8:	strd	r4, [sp, #104]	; 0x68
   3facc:	ldr	r6, [sp, #80]	; 0x50
   3fad0:	ldrd	r2, [r6, #24]
   3fad4:	cmp	r3, r5
   3fad8:	cmpeq	r2, r4
   3fadc:	bhi	41714 <__assert_fail@plt+0x30310>
   3fae0:	mov	r2, #5
   3fae4:	movw	r1, #37808	; 0x93b0
   3fae8:	mov	r0, #0
   3faec:	movt	r1, #7
   3faf0:	bl	11170 <dcgettext@plt>
   3faf4:	ldrd	r2, [sp, #104]	; 0x68
   3faf8:	mov	r1, #0
   3fafc:	str	r1, [sp]
   3fb00:	mov	r4, r0
   3fb04:	movw	r0, #18952	; 0x4a08
   3fb08:	movt	r0, #6
   3fb0c:	bl	389e0 <__assert_fail@plt+0x275dc>
   3fb10:	ldr	r2, [r6, #12]
   3fb14:	rsb	r2, r2, sl
   3fb18:	mov	r1, r0
   3fb1c:	mov	r0, r4
   3fb20:	bl	4b9ec <warn@@Base>
   3fb24:	ldr	r0, [sp, #52]	; 0x34
   3fb28:	b	3fb48 <__assert_fail@plt+0x2e744>
   3fb2c:	mov	r2, #5
   3fb30:	movw	r1, #35776	; 0x8bc0
   3fb34:	mov	r0, #0
   3fb38:	movt	r1, #7
   3fb3c:	bl	11170 <dcgettext@plt>
   3fb40:	bl	4b9ec <warn@@Base>
   3fb44:	mov	r0, sl
   3fb48:	ldr	r2, [sp, #188]	; 0xbc
   3fb4c:	ldr	r3, [r8]
   3fb50:	cmp	r2, r3
   3fb54:	bne	41c7c <__assert_fail@plt+0x30878>
   3fb58:	add	sp, sp, #196	; 0xc4
   3fb5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fb60:	cmp	r9, #12
   3fb64:	bls	3fce8 <__assert_fail@plt+0x2e8e4>
   3fb68:	cmp	r9, #14
   3fb6c:	beq	40518 <__assert_fail@plt+0x2f114>
   3fb70:	bcc	40368 <__assert_fail@plt+0x2ef64>
   3fb74:	cmp	r9, #15
   3fb78:	beq	3feac <__assert_fail@plt+0x2eaa8>
   3fb7c:	cmp	r9, #16
   3fb80:	bne	3fdf8 <__assert_fail@plt+0x2e9f4>
   3fb84:	ldr	r0, [sp, #256]	; 0x100
   3fb88:	cmp	r0, #2
   3fb8c:	beq	41334 <__assert_fail@plt+0x2ff30>
   3fb90:	ldr	r6, [sp, #256]	; 0x100
   3fb94:	sub	r3, r6, #3
   3fb98:	cmp	r3, #1
   3fb9c:	bls	4100c <__assert_fail@plt+0x2fc08>
   3fba0:	movw	r1, #35796	; 0x8bd4
   3fba4:	mov	r0, #0
   3fba8:	movt	r1, #7
   3fbac:	mov	r2, #5
   3fbb0:	bl	11170 <dcgettext@plt>
   3fbb4:	str	sl, [sp, #52]	; 0x34
   3fbb8:	bl	4b2b0 <error@@Base>
   3fbbc:	ldr	ip, [sp, #264]	; 0x108
   3fbc0:	cmp	ip, #0
   3fbc4:	beq	414bc <__assert_fail@plt+0x300b8>
   3fbc8:	mov	r7, #0
   3fbcc:	movw	r5, #24696	; 0x6078
   3fbd0:	movt	r5, #9
   3fbd4:	ldr	r3, [r5, #1568]	; 0x620
   3fbd8:	cmp	r3, #0
   3fbdc:	bne	3fa48 <__assert_fail@plt+0x2e644>
   3fbe0:	ldr	ip, [sp, #48]	; 0x30
   3fbe4:	cmp	ip, #0
   3fbe8:	beq	3fa48 <__assert_fail@plt+0x2e644>
   3fbec:	cmp	r4, #72	; 0x48
   3fbf0:	beq	40114 <__assert_fail@plt+0x2ed10>
   3fbf4:	bls	400c8 <__assert_fail@plt+0x2ecc4>
   3fbf8:	movw	r3, #8468	; 0x2114
   3fbfc:	cmp	r4, r3
   3fc00:	bls	402a4 <__assert_fail@plt+0x2eea0>
   3fc04:	movw	r3, #8498	; 0x2132
   3fc08:	cmp	r4, r3
   3fc0c:	beq	40908 <__assert_fail@plt+0x2f504>
   3fc10:	add	r3, r3, #1
   3fc14:	cmp	r4, r3
   3fc18:	bne	3fa48 <__assert_fail@plt+0x2e644>
   3fc1c:	ldrd	r2, [sp, #104]	; 0x68
   3fc20:	ldr	r7, [sp, #48]	; 0x30
   3fc24:	strd	r2, [r7, #32]
   3fc28:	ldr	r0, [sp, #52]	; 0x34
   3fc2c:	b	3fb48 <__assert_fail@plt+0x2e744>
   3fc30:	cmp	r9, #19
   3fc34:	beq	4038c <__assert_fail@plt+0x2ef88>
   3fc38:	bcc	4031c <__assert_fail@plt+0x2ef18>
   3fc3c:	cmp	r9, #21
   3fc40:	beq	3feac <__assert_fail@plt+0x2eaa8>
   3fc44:	cmp	r9, #22
   3fc48:	bne	3fdf8 <__assert_fail@plt+0x2e9f4>
   3fc4c:	mov	r0, sl
   3fc50:	add	r1, sp, #100	; 0x64
   3fc54:	mov	r2, #0
   3fc58:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3fc5c:	ldr	ip, [sp, #264]	; 0x108
   3fc60:	ldr	r3, [sp, #100]	; 0x64
   3fc64:	cmp	ip, #0
   3fc68:	add	sl, sl, r3
   3fc6c:	mov	r7, r0
   3fc70:	bne	3fc8c <__assert_fail@plt+0x2e888>
   3fc74:	bl	3a08c <__assert_fail@plt+0x28c88>
   3fc78:	movw	r1, #31644	; 0x7b9c
   3fc7c:	movt	r1, #7
   3fc80:	mov	r2, r0
   3fc84:	mov	r0, #1
   3fc88:	bl	1132c <__printf_chk@plt>
   3fc8c:	ldrd	r0, [sp, #232]	; 0xe8
   3fc90:	ldr	r6, [sp, #64]	; 0x40
   3fc94:	ldrd	r2, [sp, #240]	; 0xf0
   3fc98:	strd	r0, [sp]
   3fc9c:	mov	r1, r7
   3fca0:	ldr	r7, [sp, #256]	; 0x100
   3fca4:	mov	r0, r4
   3fca8:	str	r6, [sp, #16]
   3fcac:	str	r5, [sp, #20]
   3fcb0:	str	r7, [sp, #24]
   3fcb4:	ldr	ip, [sp, #48]	; 0x30
   3fcb8:	ldr	r5, [sp, #264]	; 0x108
   3fcbc:	ldr	r6, [sp, #80]	; 0x50
   3fcc0:	ldr	r7, [sp, #68]	; 0x44
   3fcc4:	strd	r2, [sp, #8]
   3fcc8:	mov	r2, sl
   3fccc:	mov	r3, fp
   3fcd0:	str	ip, [sp, #28]
   3fcd4:	str	r5, [sp, #32]
   3fcd8:	str	r6, [sp, #36]	; 0x24
   3fcdc:	str	r7, [sp, #40]	; 0x28
   3fce0:	bl	3f850 <__assert_fail@plt+0x2e44c>
   3fce4:	b	3fb48 <__assert_fail@plt+0x2e744>
   3fce8:	cmp	r9, #11
   3fcec:	bcs	40500 <__assert_fail@plt+0x2f0fc>
   3fcf0:	cmp	r9, #5
   3fcf4:	beq	4031c <__assert_fail@plt+0x2ef18>
   3fcf8:	cmp	r9, #6
   3fcfc:	beq	4038c <__assert_fail@plt+0x2ef88>
   3fd00:	cmp	r9, #1
   3fd04:	bne	3fdf8 <__assert_fail@plt+0x2e9f4>
   3fd08:	ldr	r0, [sp, #240]	; 0xf0
   3fd0c:	cmp	r0, #8
   3fd10:	mov	r1, r0
   3fd14:	bhi	412f0 <__assert_fail@plt+0x2feec>
   3fd18:	add	r3, sl, r1
   3fd1c:	cmp	fp, r3
   3fd20:	bhi	3fd30 <__assert_fail@plt+0x2e92c>
   3fd24:	cmp	sl, fp
   3fd28:	bcs	3fd3c <__assert_fail@plt+0x2e938>
   3fd2c:	rsb	r1, sl, fp
   3fd30:	sub	r3, r1, #1
   3fd34:	cmp	r3, #7
   3fd38:	bls	41318 <__assert_fail@plt+0x2ff14>
   3fd3c:	mov	r2, #0
   3fd40:	mov	r3, #0
   3fd44:	strd	r2, [sp, #104]	; 0x68
   3fd48:	ldr	r5, [sp, #240]	; 0xf0
   3fd4c:	add	r5, sl, r5
   3fd50:	str	r5, [sp, #52]	; 0x34
   3fd54:	ldr	r7, [sp, #264]	; 0x108
   3fd58:	cmp	r7, #0
   3fd5c:	bne	3fbc8 <__assert_fail@plt+0x2e7c4>
   3fd60:	ldrd	r2, [sp, #104]	; 0x68
   3fd64:	movw	r0, #18952	; 0x4a08
   3fd68:	str	r7, [sp]
   3fd6c:	movt	r0, #6
   3fd70:	bl	389e0 <__assert_fail@plt+0x275dc>
   3fd74:	movw	r1, #35860	; 0x8c14
   3fd78:	movt	r1, #7
   3fd7c:	mov	r2, r0
   3fd80:	mov	r0, #1
   3fd84:	bl	1132c <__printf_chk@plt>
   3fd88:	movw	r3, #26428	; 0x673c
   3fd8c:	movt	r3, #9
   3fd90:	b	3fa28 <__assert_fail@plt+0x2e624>
   3fd94:	mov	r2, #1
   3fd98:	mov	r3, #0
   3fd9c:	str	sl, [sp, #52]	; 0x34
   3fda0:	strd	r2, [sp, #104]	; 0x68
   3fda4:	ldr	ip, [sp, #264]	; 0x108
   3fda8:	cmp	ip, #0
   3fdac:	bne	3fbc8 <__assert_fail@plt+0x2e7c4>
   3fdb0:	ldrd	r2, [sp, #104]	; 0x68
   3fdb4:	movw	r0, #15492	; 0x3c84
   3fdb8:	str	ip, [sp]
   3fdbc:	movt	r0, #6
   3fdc0:	mov	r7, ip
   3fdc4:	bl	389e0 <__assert_fail@plt+0x275dc>
   3fdc8:	movw	r1, #31644	; 0x7b9c
   3fdcc:	movt	r1, #7
   3fdd0:	mov	r2, r0
   3fdd4:	mov	r0, #1
   3fdd8:	bl	1132c <__printf_chk@plt>
   3fddc:	movw	r3, #26428	; 0x673c
   3fde0:	movt	r3, #9
   3fde4:	b	3fa28 <__assert_fail@plt+0x2e624>
   3fde8:	sub	r3, r9, #7936	; 0x1f00
   3fdec:	sub	r3, r3, #32
   3fdf0:	cmp	r3, #1
   3fdf4:	bls	40518 <__assert_fail@plt+0x2f114>
   3fdf8:	str	sl, [sp, #52]	; 0x34
   3fdfc:	cmp	r9, #16
   3fe00:	beq	3fbbc <__assert_fail@plt+0x2e7b8>
   3fe04:	bhi	3fed4 <__assert_fail@plt+0x2ead0>
   3fe08:	cmp	r9, #8
   3fe0c:	beq	40704 <__assert_fail@plt+0x2f300>
   3fe10:	bhi	401f8 <__assert_fail@plt+0x2edf4>
   3fe14:	cmp	r9, #4
   3fe18:	beq	40738 <__assert_fail@plt+0x2f334>
   3fe1c:	bhi	40844 <__assert_fail@plt+0x2f440>
   3fe20:	cmp	r9, #1
   3fe24:	beq	3fd54 <__assert_fail@plt+0x2e950>
   3fe28:	cmp	r9, #3
   3fe2c:	bne	40658 <__assert_fail@plt+0x2f254>
   3fe30:	ldr	r6, [sp, #52]	; 0x34
   3fe34:	add	r7, r6, #2
   3fe38:	cmp	fp, r7
   3fe3c:	bhi	41158 <__assert_fail@plt+0x2fd54>
   3fe40:	cmp	r6, fp
   3fe44:	bcs	3fe58 <__assert_fail@plt+0x2ea54>
   3fe48:	rsb	r1, r6, fp
   3fe4c:	sub	r3, r1, #1
   3fe50:	cmp	r3, #7
   3fe54:	bls	41e88 <__assert_fail@plt+0x30a84>
   3fe58:	mov	r2, #0
   3fe5c:	mov	r3, #0
   3fe60:	strd	r2, [sp, #104]	; 0x68
   3fe64:	mov	r2, #5
   3fe68:	movw	r1, #35876	; 0x8c24
   3fe6c:	mov	r0, #0
   3fe70:	movt	r1, #7
   3fe74:	bl	11170 <dcgettext@plt>
   3fe78:	mov	r7, fp
   3fe7c:	bl	4b9ec <warn@@Base>
   3fe80:	mov	r2, #0
   3fe84:	mov	r3, r2
   3fe88:	mov	r0, #0
   3fe8c:	mov	r1, #0
   3fe90:	strd	r0, [sp, #104]	; 0x68
   3fe94:	ldr	ip, [sp, #264]	; 0x108
   3fe98:	cmp	ip, #0
   3fe9c:	beq	40288 <__assert_fail@plt+0x2ee84>
   3fea0:	add	r2, r7, r2
   3fea4:	str	r2, [sp, #52]	; 0x34
   3fea8:	b	3fbcc <__assert_fail@plt+0x2e7c8>
   3feac:	mov	r0, sl
   3feb0:	add	r1, sp, #100	; 0x64
   3feb4:	mov	r2, #0
   3feb8:	mov	r3, fp
   3febc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   3fec0:	ldr	ip, [sp, #100]	; 0x64
   3fec4:	add	ip, sl, ip
   3fec8:	str	ip, [sp, #52]	; 0x34
   3fecc:	strd	r0, [sp, #104]	; 0x68
   3fed0:	b	3fdfc <__assert_fail@plt+0x2e9f8>
   3fed4:	cmp	r9, #24
   3fed8:	beq	40678 <__assert_fail@plt+0x2f274>
   3fedc:	bls	401c8 <__assert_fail@plt+0x2edc4>
   3fee0:	movw	r3, #7937	; 0x1f01
   3fee4:	cmp	r9, r3
   3fee8:	beq	3f92c <__assert_fail@plt+0x2e528>
   3feec:	bls	40f48 <__assert_fail@plt+0x2fb44>
   3fef0:	movw	r3, #7968	; 0x1f20
   3fef4:	cmp	r9, r3
   3fef8:	beq	407ac <__assert_fail@plt+0x2f3a8>
   3fefc:	add	r3, r3, #1
   3ff00:	cmp	r9, r3
   3ff04:	bne	4064c <__assert_fail@plt+0x2f248>
   3ff08:	ldr	r5, [sp, #264]	; 0x108
   3ff0c:	cmp	r5, #0
   3ff10:	bne	3fbc8 <__assert_fail@plt+0x2e7c4>
   3ff14:	mov	r0, r5
   3ff18:	mov	r2, #5
   3ff1c:	movw	r1, #36236	; 0x8d8c
   3ff20:	movt	r1, #7
   3ff24:	bl	11170 <dcgettext@plt>
   3ff28:	ldr	r6, [sp, #264]	; 0x108
   3ff2c:	ldrd	r2, [sp, #104]	; 0x68
   3ff30:	str	r6, [sp]
   3ff34:	mov	r7, r6
   3ff38:	mov	r5, r0
   3ff3c:	movw	r0, #18952	; 0x4a08
   3ff40:	movt	r0, #6
   3ff44:	bl	389e0 <__assert_fail@plt+0x275dc>
   3ff48:	mov	r1, r5
   3ff4c:	mov	r2, r0
   3ff50:	mov	r0, #1
   3ff54:	bl	1132c <__printf_chk@plt>
   3ff58:	movw	r3, #26428	; 0x673c
   3ff5c:	movt	r3, #9
   3ff60:	b	3fa28 <__assert_fail@plt+0x2e624>
   3ff64:	cmp	r4, #74	; 0x4a
   3ff68:	beq	3ff9c <__assert_fail@plt+0x2eb98>
   3ff6c:	bhi	40568 <__assert_fail@plt+0x2f164>
   3ff70:	cmp	r4, #66	; 0x42
   3ff74:	beq	409c0 <__assert_fail@plt+0x2f5bc>
   3ff78:	bhi	41554 <__assert_fail@plt+0x30150>
   3ff7c:	cmp	r4, #62	; 0x3e
   3ff80:	beq	40a54 <__assert_fail@plt+0x2f650>
   3ff84:	cmp	r4, #64	; 0x40
   3ff88:	movweq	r3, #24696	; 0x6078
   3ff8c:	movteq	r3, #9
   3ff90:	moveq	r2, #1
   3ff94:	streq	r2, [r3, #1572]	; 0x624
   3ff98:	bne	3fc28 <__assert_fail@plt+0x2e824>
   3ff9c:	ldr	r0, [sp, #256]	; 0x100
   3ffa0:	cmp	r0, #3
   3ffa4:	bgt	3ffb4 <__assert_fail@plt+0x2ebb0>
   3ffa8:	sub	r3, r9, #6
   3ffac:	cmp	r3, #1
   3ffb0:	bls	40fe8 <__assert_fail@plt+0x2fbe4>
   3ffb4:	cmp	r9, #23
   3ffb8:	beq	40fe8 <__assert_fail@plt+0x2fbe4>
   3ffbc:	cmp	r7, #0
   3ffc0:	beq	3fc28 <__assert_fail@plt+0x2e824>
   3ffc4:	movw	r1, #37776	; 0x9390
   3ffc8:	mov	r0, #1
   3ffcc:	movt	r1, #7
   3ffd0:	bl	1132c <__printf_chk@plt>
   3ffd4:	ldrd	r2, [sp, #232]	; 0xe8
   3ffd8:	ldrd	r4, [sp, #104]	; 0x68
   3ffdc:	mov	r0, r7
   3ffe0:	ldr	r6, [sp, #80]	; 0x50
   3ffe4:	strd	r2, [sp, #8]
   3ffe8:	strd	r4, [sp]
   3ffec:	ldr	r2, [sp, #64]	; 0x40
   3fff0:	ldr	r1, [sp, #240]	; 0xf0
   3fff4:	ldr	r3, [sp, #256]	; 0x100
   3fff8:	str	r6, [sp, #16]
   3fffc:	bl	3a9e8 <__assert_fail@plt+0x295e4>
   40000:	mov	r4, r0
   40004:	mov	r0, #41	; 0x29
   40008:	bl	112fc <putchar@plt>
   4000c:	cmp	r4, #0
   40010:	beq	3fc28 <__assert_fail@plt+0x2e824>
   40014:	movw	r3, #24696	; 0x6078
   40018:	movt	r3, #9
   4001c:	ldr	r0, [r3, #1572]	; 0x624
   40020:	cmp	r0, #0
   40024:	bne	3fc28 <__assert_fail@plt+0x2e824>
   40028:	movw	r1, #37780	; 0x9394
   4002c:	movt	r1, #7
   40030:	mov	r2, #5
   40034:	bl	11170 <dcgettext@plt>
   40038:	mov	r1, r0
   4003c:	mov	r0, #1
   40040:	bl	1132c <__printf_chk@plt>
   40044:	ldr	r0, [sp, #52]	; 0x34
   40048:	b	3fb48 <__assert_fail@plt+0x2e744>
   4004c:	cmp	r4, #42	; 0x2a
   40050:	beq	3ff9c <__assert_fail@plt+0x2eb98>
   40054:	bls	405c0 <__assert_fail@plt+0x2f1bc>
   40058:	cmp	r4, #50	; 0x32
   4005c:	beq	40f04 <__assert_fail@plt+0x2fb00>
   40060:	cmp	r4, #54	; 0x36
   40064:	bne	41430 <__assert_fail@plt+0x3002c>
   40068:	mov	r0, #9
   4006c:	bl	112fc <putchar@plt>
   40070:	ldrd	r2, [sp, #104]	; 0x68
   40074:	cmp	r3, #0
   40078:	cmpeq	r2, #2
   4007c:	beq	416fc <__assert_fail@plt+0x302f8>
   40080:	cmp	r3, #0
   40084:	cmpeq	r2, #3
   40088:	beq	415f8 <__assert_fail@plt+0x301f4>
   4008c:	cmp	r3, #0
   40090:	cmpeq	r2, #1
   40094:	beq	415e0 <__assert_fail@plt+0x301dc>
   40098:	subs	r2, r2, #64	; 0x40
   4009c:	sbc	r3, r3, #0
   400a0:	cmp	r3, #0
   400a4:	cmpeq	r2, #191	; 0xbf
   400a8:	mov	r2, #5
   400ac:	movwls	r1, #37676	; 0x932c
   400b0:	movwhi	r1, #37692	; 0x933c
   400b4:	movls	r0, #0
   400b8:	movtls	r1, #7
   400bc:	movhi	r0, #0
   400c0:	movthi	r1, #7
   400c4:	b	40034 <__assert_fail@plt+0x2ec30>
   400c8:	cmp	r4, #42	; 0x2a
   400cc:	beq	40114 <__assert_fail@plt+0x2ed10>
   400d0:	bhi	400f4 <__assert_fail@plt+0x2ecf0>
   400d4:	cmp	r4, #17
   400d8:	bne	41298 <__assert_fail@plt+0x2fe94>
   400dc:	ldr	r3, [r5, #1576]	; 0x628
   400e0:	cmp	r3, #0
   400e4:	ldrdne	r2, [sp, #104]	; 0x68
   400e8:	ldrne	r6, [sp, #48]	; 0x30
   400ec:	strdne	r2, [r6, #24]
   400f0:	b	3fc28 <__assert_fail@plt+0x2e824>
   400f4:	cmp	r4, #64	; 0x40
   400f8:	moveq	r3, #1
   400fc:	streq	r3, [r5, #1572]	; 0x624
   40100:	beq	40114 <__assert_fail@plt+0x2ed10>
   40104:	cmp	r4, #70	; 0x46
   40108:	beq	40114 <__assert_fail@plt+0x2ed10>
   4010c:	cmp	r4, #56	; 0x38
   40110:	bne	3fa48 <__assert_fail@plt+0x2e644>
   40114:	ldr	r0, [sp, #256]	; 0x100
   40118:	cmp	r0, #3
   4011c:	bgt	4012c <__assert_fail@plt+0x2ed28>
   40120:	sub	r3, r9, #6
   40124:	cmp	r3, #1
   40128:	bls	40134 <__assert_fail@plt+0x2ed30>
   4012c:	cmp	r9, #23
   40130:	bne	3fa48 <__assert_fail@plt+0x2e644>
   40134:	ldr	r6, [sp, #48]	; 0x30
   40138:	ldr	r3, [r6, #60]	; 0x3c
   4013c:	ldr	ip, [r6, #56]	; 0x38
   40140:	cmp	r3, #0
   40144:	cmpne	ip, r3
   40148:	bcs	4158c <__assert_fail@plt+0x30188>
   4014c:	ldr	r0, [r6, #52]	; 0x34
   40150:	str	r0, [sp, #84]	; 0x54
   40154:	ldr	r6, [sp, #68]	; 0x44
   40158:	cmp	r6, #0
   4015c:	beq	41990 <__assert_fail@plt+0x3058c>
   40160:	ldr	r6, [sp, #68]	; 0x44
   40164:	ldrd	r0, [sp, #104]	; 0x68
   40168:	ldrd	r2, [r6, #48]	; 0x30
   4016c:	adds	r2, r2, r0
   40170:	str	r2, [sp, #88]	; 0x58
   40174:	adc	r3, r3, r1
   40178:	strd	r2, [sp, #104]	; 0x68
   4017c:	str	r3, [sp, #92]	; 0x5c
   40180:	ldr	r0, [sp, #48]	; 0x30
   40184:	lsl	r3, ip, #3
   40188:	ldr	r2, [r5, #1572]	; 0x624
   4018c:	mov	r1, #4
   40190:	ldr	r5, [sp, #88]	; 0x58
   40194:	ldr	r6, [r0, #48]	; 0x30
   40198:	add	r0, r6, r3
   4019c:	str	r5, [r6, r3]
   401a0:	add	r1, r0, r1
   401a4:	ldr	r5, [sp, #48]	; 0x30
   401a8:	ldr	r6, [sp, #92]	; 0x5c
   401ac:	ldr	r0, [sp, #84]	; 0x54
   401b0:	str	r6, [r1]
   401b4:	str	r2, [r0, ip, lsl #2]
   401b8:	ldr	r3, [r5, #56]	; 0x38
   401bc:	add	r3, r3, #1
   401c0:	str	r3, [r5, #56]	; 0x38
   401c4:	b	3fa48 <__assert_fail@plt+0x2e644>
   401c8:	cmp	r9, #20
   401cc:	beq	40850 <__assert_fail@plt+0x2f44c>
   401d0:	bcc	407f4 <__assert_fail@plt+0x2f3f0>
   401d4:	cmp	r9, #22
   401d8:	bne	407f0 <__assert_fail@plt+0x2f3ec>
   401dc:	ldr	r6, [sp, #264]	; 0x108
   401e0:	cmp	r6, #0
   401e4:	bne	3fbc8 <__assert_fail@plt+0x2e7c4>
   401e8:	movw	r3, #26428	; 0x673c
   401ec:	movt	r3, #9
   401f0:	mov	r7, #0
   401f4:	b	3fa28 <__assert_fail@plt+0x2e624>
   401f8:	cmp	r9, #13
   401fc:	bhi	40f74 <__assert_fail@plt+0x2fb70>
   40200:	cmp	r9, #11
   40204:	bcs	3fda4 <__assert_fail@plt+0x2e9a0>
   40208:	cmp	r9, #9
   4020c:	beq	40678 <__assert_fail@plt+0x2f274>
   40210:	cmp	r9, #10
   40214:	bne	40658 <__assert_fail@plt+0x2f254>
   40218:	ldr	ip, [sp, #52]	; 0x34
   4021c:	add	r7, ip, #1
   40220:	cmp	fp, r7
   40224:	bhi	4105c <__assert_fail@plt+0x2fc58>
   40228:	cmp	ip, fp
   4022c:	bcs	40240 <__assert_fail@plt+0x2ee3c>
   40230:	rsb	r1, ip, fp
   40234:	sub	r3, r1, #1
   40238:	cmp	r3, #7
   4023c:	bls	41ea4 <__assert_fail@plt+0x30aa0>
   40240:	mov	r2, #0
   40244:	mov	r3, #0
   40248:	strd	r2, [sp, #104]	; 0x68
   4024c:	mov	r2, #5
   40250:	movw	r1, #35876	; 0x8c24
   40254:	mov	r0, #0
   40258:	movt	r1, #7
   4025c:	bl	11170 <dcgettext@plt>
   40260:	mov	r7, fp
   40264:	bl	4b9ec <warn@@Base>
   40268:	mov	r2, #0
   4026c:	mov	r3, r2
   40270:	mov	r0, #0
   40274:	mov	r1, #0
   40278:	strd	r0, [sp, #104]	; 0x68
   4027c:	ldr	r5, [sp, #264]	; 0x108
   40280:	cmp	r5, #0
   40284:	bne	3fea0 <__assert_fail@plt+0x2ea9c>
   40288:	str	fp, [sp]
   4028c:	mov	r0, r7
   40290:	bl	39dd0 <__assert_fail@plt+0x289cc>
   40294:	movw	r3, #26428	; 0x673c
   40298:	movt	r3, #9
   4029c:	str	r0, [sp, #52]	; 0x34
   402a0:	b	3fa28 <__assert_fail@plt+0x2e624>
   402a4:	movw	r3, #8465	; 0x2111
   402a8:	cmp	r4, r3
   402ac:	bcs	40114 <__assert_fail@plt+0x2ed10>
   402b0:	cmp	r4, #77	; 0x4d
   402b4:	beq	40114 <__assert_fail@plt+0x2ed10>
   402b8:	cmp	r4, #85	; 0x55
   402bc:	bne	41448 <__assert_fail@plt+0x30044>
   402c0:	ldr	r0, [sp, #256]	; 0x100
   402c4:	cmp	r0, #3
   402c8:	bgt	402d8 <__assert_fail@plt+0x2eed4>
   402cc:	sub	r3, r9, #6
   402d0:	cmp	r3, #1
   402d4:	bls	402e0 <__assert_fail@plt+0x2eedc>
   402d8:	cmp	r9, #23
   402dc:	bne	3fc28 <__assert_fail@plt+0x2e824>
   402e0:	ldr	r5, [sp, #48]	; 0x30
   402e4:	ldr	r3, [r5, #72]	; 0x48
   402e8:	ldr	r4, [r5, #68]	; 0x44
   402ec:	cmp	r3, #0
   402f0:	cmpne	r4, r3
   402f4:	bcs	41a04 <__assert_fail@plt+0x30600>
   402f8:	ldr	r5, [r5, #64]	; 0x40
   402fc:	mov	r3, r4
   40300:	ldrd	sl, [sp, #104]	; 0x68
   40304:	lsl	r4, r4, #3
   40308:	ldr	r7, [sp, #48]	; 0x30
   4030c:	add	r1, r3, #1
   40310:	strd	sl, [r5, r4]
   40314:	str	r1, [r7, #68]	; 0x44
   40318:	b	3fc28 <__assert_fail@plt+0x2e824>
   4031c:	add	r6, sl, #2
   40320:	str	r6, [sp, #52]	; 0x34
   40324:	cmp	fp, r6
   40328:	bls	4034c <__assert_fail@plt+0x2ef48>
   4032c:	mov	r1, #2
   40330:	movw	r3, #26492	; 0x677c
   40334:	movt	r3, #9
   40338:	mov	r0, sl
   4033c:	ldr	r3, [r3]
   40340:	blx	r3
   40344:	strd	r0, [sp, #104]	; 0x68
   40348:	b	3fdfc <__assert_fail@plt+0x2e9f8>
   4034c:	cmp	sl, fp
   40350:	bcs	3fdfc <__assert_fail@plt+0x2e9f8>
   40354:	rsb	r1, sl, fp
   40358:	sub	r3, r1, #1
   4035c:	cmp	r3, #7
   40360:	bhi	3fdfc <__assert_fail@plt+0x2e9f8>
   40364:	b	40330 <__assert_fail@plt+0x2ef2c>
   40368:	mov	r0, sl
   4036c:	add	r1, sp, #100	; 0x64
   40370:	mov	r2, #1
   40374:	bl	3a350 <__assert_fail@plt+0x28f4c>
   40378:	ldr	ip, [sp, #100]	; 0x64
   4037c:	add	ip, sl, ip
   40380:	str	ip, [sp, #52]	; 0x34
   40384:	strd	r0, [sp, #104]	; 0x68
   40388:	b	3fda4 <__assert_fail@plt+0x2e9a0>
   4038c:	add	r7, sl, #4
   40390:	str	r7, [sp, #52]	; 0x34
   40394:	cmp	fp, r7
   40398:	bls	4034c <__assert_fail@plt+0x2ef48>
   4039c:	mov	r1, #4
   403a0:	b	40330 <__assert_fail@plt+0x2ef2c>
   403a4:	mov	r0, sl
   403a8:	add	r1, sp, #100	; 0x64
   403ac:	bl	3a350 <__assert_fail@plt+0x28f4c>
   403b0:	ldr	ip, [sp, #100]	; 0x64
   403b4:	add	ip, sl, ip
   403b8:	str	ip, [sp, #52]	; 0x34
   403bc:	strd	r0, [sp, #104]	; 0x68
   403c0:	ldr	ip, [sp, #264]	; 0x108
   403c4:	cmp	ip, #0
   403c8:	bne	3fbc8 <__assert_fail@plt+0x2e7c4>
   403cc:	ldr	r6, [sp, #80]	; 0x50
   403d0:	mov	r1, #46	; 0x2e
   403d4:	ldr	r0, [r6, #8]
   403d8:	bl	11374 <strrchr@plt>
   403dc:	cmp	r0, #0
   403e0:	beq	414d4 <__assert_fail@plt+0x300d0>
   403e4:	movw	r1, #46844	; 0xb6fc
   403e8:	movt	r1, #7
   403ec:	bl	110f8 <strcmp@plt>
   403f0:	cmp	r0, #0
   403f4:	bne	414d4 <__assert_fail@plt+0x300d0>
   403f8:	mov	r2, #5
   403fc:	movw	r1, #37920	; 0x9420
   40400:	movt	r1, #7
   40404:	bl	11170 <dcgettext@plt>
   40408:	ldr	ip, [sp, #264]	; 0x108
   4040c:	ldrd	r2, [sp, #104]	; 0x68
   40410:	str	ip, [sp]
   40414:	str	r0, [sp, #84]	; 0x54
   40418:	movw	r0, #18952	; 0x4a08
   4041c:	movt	r0, #6
   40420:	bl	389e0 <__assert_fail@plt+0x275dc>
   40424:	ldr	r3, [sp, #104]	; 0x68
   40428:	ldr	r6, [sp, #64]	; 0x40
   4042c:	movw	r1, #14352	; 0x3810
   40430:	ldr	r2, [sp, #108]	; 0x6c
   40434:	movt	r1, #9
   40438:	mul	r2, r6, r2
   4043c:	umull	r6, r7, r3, r6
   40440:	mla	r5, r5, r3, r2
   40444:	strd	r6, [sp, #72]	; 0x48
   40448:	add	r5, r5, r7
   4044c:	str	r5, [sp, #76]	; 0x4c
   40450:	str	r0, [sp, #88]	; 0x58
   40454:	ldr	r0, [r1, #2060]	; 0x80c
   40458:	cmp	r0, #0
   4045c:	beq	41c48 <__assert_fail@plt+0x30844>
   40460:	add	r5, r1, #1920	; 0x780
   40464:	add	r1, r1, #2048	; 0x800
   40468:	mov	ip, #1
   4046c:	ldr	r7, [sp, #68]	; 0x44
   40470:	cmp	r7, #0
   40474:	beq	4048c <__assert_fail@plt+0x2f088>
   40478:	ldrd	r2, [r7, #56]	; 0x38
   4047c:	ldrd	r6, [sp, #72]	; 0x48
   40480:	adds	r6, r6, r2
   40484:	adc	r7, r7, r3
   40488:	strd	r6, [sp, #72]	; 0x48
   4048c:	ldrd	r2, [r1, #24]
   40490:	ldrd	r6, [sp, #72]	; 0x48
   40494:	cmp	r3, r7
   40498:	cmpeq	r2, r6
   4049c:	bcc	41a60 <__assert_fail@plt+0x3065c>
   404a0:	ldr	r3, [r5, #12]
   404a4:	cmp	r3, #0
   404a8:	beq	41a30 <__assert_fail@plt+0x3062c>
   404ac:	ldr	r7, [sp, #72]	; 0x48
   404b0:	movw	r3, #26492	; 0x677c
   404b4:	movt	r3, #9
   404b8:	ldr	r1, [sp, #64]	; 0x40
   404bc:	add	r0, r0, r7
   404c0:	ldr	r3, [r3]
   404c4:	blx	r3
   404c8:	ldrd	r2, [r5, #16]
   404cc:	mov	r6, r0
   404d0:	mov	r7, r1
   404d4:	subs	r6, r6, r2
   404d8:	sbc	r7, r7, r3
   404dc:	ldrd	r2, [r5, #24]
   404e0:	cmp	r7, r3
   404e4:	cmpeq	r6, r2
   404e8:	bhi	41be4 <__assert_fail@plt+0x307e0>
   404ec:	ldr	r3, [r5, #12]
   404f0:	add	r3, r3, r6
   404f4:	ldr	r1, [sp, #84]	; 0x54
   404f8:	ldr	r2, [sp, #88]	; 0x58
   404fc:	b	3fa14 <__assert_fail@plt+0x2e610>
   40500:	add	ip, sl, #1
   40504:	str	ip, [sp, #52]	; 0x34
   40508:	cmp	fp, ip
   4050c:	bls	4034c <__assert_fail@plt+0x2ef48>
   40510:	mov	r1, #1
   40514:	b	40330 <__assert_fail@plt+0x2ef2c>
   40518:	ldr	r6, [sp, #64]	; 0x40
   4051c:	cmp	r6, #8
   40520:	mov	r1, r6
   40524:	bhi	412ac <__assert_fail@plt+0x2fea8>
   40528:	add	r3, sl, r1
   4052c:	cmp	fp, r3
   40530:	bhi	40540 <__assert_fail@plt+0x2f13c>
   40534:	cmp	sl, fp
   40538:	bcs	4054c <__assert_fail@plt+0x2f148>
   4053c:	rsb	r1, sl, fp
   40540:	sub	r3, r1, #1
   40544:	cmp	r3, #7
   40548:	bls	412d4 <__assert_fail@plt+0x2fed0>
   4054c:	mov	r2, #0
   40550:	mov	r3, #0
   40554:	strd	r2, [sp, #104]	; 0x68
   40558:	ldr	r7, [sp, #64]	; 0x40
   4055c:	add	r7, sl, r7
   40560:	str	r7, [sp, #52]	; 0x34
   40564:	b	3fdfc <__assert_fail@plt+0x2e9f8>
   40568:	cmp	r4, #81	; 0x51
   4056c:	bhi	417d8 <__assert_fail@plt+0x303d4>
   40570:	cmp	r4, #78	; 0x4e
   40574:	bcs	3ffbc <__assert_fail@plt+0x2ebb8>
   40578:	cmp	r4, #76	; 0x4c
   4057c:	bne	417cc <__assert_fail@plt+0x303c8>
   40580:	mov	r0, #9
   40584:	bl	112fc <putchar@plt>
   40588:	ldrd	r2, [sp, #104]	; 0x68
   4058c:	cmp	r3, #0
   40590:	cmpeq	r2, #1
   40594:	beq	416e4 <__assert_fail@plt+0x302e0>
   40598:	bcc	416cc <__assert_fail@plt+0x302c8>
   4059c:	cmp	r3, #0
   405a0:	cmpeq	r2, #2
   405a4:	bne	41640 <__assert_fail@plt+0x3023c>
   405a8:	movw	r1, #37520	; 0x9290
   405ac:	mov	r0, #1
   405b0:	movt	r1, #7
   405b4:	bl	1132c <__printf_chk@plt>
   405b8:	ldr	r0, [sp, #52]	; 0x34
   405bc:	b	3fb48 <__assert_fail@plt+0x2e744>
   405c0:	cmp	r4, #32
   405c4:	bne	4143c <__assert_fail@plt+0x30038>
   405c8:	mov	r0, #9
   405cc:	bl	112fc <putchar@plt>
   405d0:	ldrd	r2, [sp, #104]	; 0x68
   405d4:	cmp	r3, #0
   405d8:	cmpeq	r2, #3
   405dc:	bhi	41868 <__assert_fail@plt+0x30464>
   405e0:	cmp	r2, #3
   405e4:	ldrls	pc, [pc, r2, lsl #2]
   405e8:	b	41868 <__assert_fail@plt+0x30464>
   405ec:	andeq	r0, r4, r8, lsr r6
   405f0:	andeq	r0, r4, r4, lsr #12
   405f4:	andeq	r0, r4, r0, lsl r6
   405f8:	strdeq	r0, [r4], -ip
   405fc:	movw	r1, #36472	; 0x8e78
   40600:	mov	r0, #0
   40604:	movt	r1, #7
   40608:	mov	r2, #5
   4060c:	b	40034 <__assert_fail@plt+0x2ec30>
   40610:	movw	r1, #36436	; 0x8e54
   40614:	mov	r0, #0
   40618:	movt	r1, #7
   4061c:	mov	r2, #5
   40620:	b	40034 <__assert_fail@plt+0x2ec30>
   40624:	movw	r1, #36424	; 0x8e48
   40628:	mov	r0, #0
   4062c:	movt	r1, #7
   40630:	mov	r2, #5
   40634:	b	40034 <__assert_fail@plt+0x2ec30>
   40638:	movw	r1, #36408	; 0x8e38
   4063c:	mov	r0, #0
   40640:	movt	r1, #7
   40644:	mov	r2, #5
   40648:	b	40034 <__assert_fail@plt+0x2ec30>
   4064c:	movw	r3, #7938	; 0x1f02
   40650:	cmp	r9, r3
   40654:	beq	403c0 <__assert_fail@plt+0x2efbc>
   40658:	mov	r2, #5
   4065c:	movw	r1, #36384	; 0x8e20
   40660:	mov	r0, #0
   40664:	movt	r1, #7
   40668:	bl	11170 <dcgettext@plt>
   4066c:	mov	r1, r9
   40670:	bl	4b9ec <warn@@Base>
   40674:	b	401dc <__assert_fail@plt+0x2edd8>
   40678:	mov	r3, fp
   4067c:	ldr	r0, [sp, #52]	; 0x34
   40680:	add	r1, sp, #100	; 0x64
   40684:	mov	r2, #0
   40688:	bl	3a350 <__assert_fail@plt+0x28f4c>
   4068c:	ldr	r3, [sp, #100]	; 0x64
   40690:	ldr	r5, [sp, #52]	; 0x34
   40694:	add	r7, r5, r3
   40698:	cmp	fp, r7
   4069c:	str	r1, [sp, #108]	; 0x6c
   406a0:	str	r0, [sp, #104]	; 0x68
   406a4:	bls	41488 <__assert_fail@plt+0x30084>
   406a8:	add	r3, r7, r0
   406ac:	cmp	fp, r3
   406b0:	bcc	406bc <__assert_fail@plt+0x2f2b8>
   406b4:	cmp	r7, r3
   406b8:	bls	406ec <__assert_fail@plt+0x2f2e8>
   406bc:	mov	r2, #5
   406c0:	movw	r1, #35900	; 0x8c3c
   406c4:	mov	r0, #0
   406c8:	movt	r1, #7
   406cc:	bl	11170 <dcgettext@plt>
   406d0:	ldr	r1, [sp, #104]	; 0x68
   406d4:	bl	4b9ec <warn@@Base>
   406d8:	rsb	r0, r7, fp
   406dc:	asr	r3, r0, #31
   406e0:	mov	r2, r0
   406e4:	strd	r2, [sp, #104]	; 0x68
   406e8:	mov	r1, r3
   406ec:	ldr	r6, [sp, #264]	; 0x108
   406f0:	cmp	r6, #0
   406f4:	beq	41454 <__assert_fail@plt+0x30050>
   406f8:	add	r0, r7, r0
   406fc:	str	r0, [sp, #52]	; 0x34
   40700:	b	3fbcc <__assert_fail@plt+0x2e7c8>
   40704:	ldr	ip, [sp, #264]	; 0x108
   40708:	cmp	ip, #0
   4070c:	beq	41464 <__assert_fail@plt+0x30060>
   40710:	ldr	r6, [sp, #52]	; 0x34
   40714:	rsb	r5, r6, fp
   40718:	ldr	r0, [sp, #52]	; 0x34
   4071c:	mov	r1, r5
   40720:	bl	11350 <strnlen@plt>
   40724:	ldr	ip, [sp, #52]	; 0x34
   40728:	add	r0, r0, #1
   4072c:	add	ip, ip, r0
   40730:	str	ip, [sp, #52]	; 0x34
   40734:	b	401dc <__assert_fail@plt+0x2edd8>
   40738:	ldr	r5, [sp, #52]	; 0x34
   4073c:	add	r7, r5, #4
   40740:	cmp	fp, r7
   40744:	bhi	411c8 <__assert_fail@plt+0x2fdc4>
   40748:	cmp	r5, fp
   4074c:	bcs	40760 <__assert_fail@plt+0x2f35c>
   40750:	rsb	r1, r5, fp
   40754:	sub	r3, r1, #1
   40758:	cmp	r3, #7
   4075c:	bls	41e6c <__assert_fail@plt+0x30a68>
   40760:	mov	r2, #0
   40764:	mov	r3, #0
   40768:	strd	r2, [sp, #104]	; 0x68
   4076c:	mov	r2, #5
   40770:	movw	r1, #35876	; 0x8c24
   40774:	mov	r0, #0
   40778:	movt	r1, #7
   4077c:	bl	11170 <dcgettext@plt>
   40780:	mov	r7, fp
   40784:	bl	4b9ec <warn@@Base>
   40788:	mov	r2, #0
   4078c:	mov	r3, r2
   40790:	mov	r0, #0
   40794:	mov	r1, #0
   40798:	strd	r0, [sp, #104]	; 0x68
   4079c:	ldr	r6, [sp, #264]	; 0x108
   407a0:	cmp	r6, #0
   407a4:	bne	3fea0 <__assert_fail@plt+0x2ea9c>
   407a8:	b	40288 <__assert_fail@plt+0x2ee84>
   407ac:	ldr	r5, [sp, #264]	; 0x108
   407b0:	cmp	r5, #0
   407b4:	bne	3fbc8 <__assert_fail@plt+0x2e7c4>
   407b8:	ldrd	r2, [sp, #104]	; 0x68
   407bc:	movw	r0, #18952	; 0x4a08
   407c0:	str	r5, [sp]
   407c4:	movt	r0, #6
   407c8:	bl	389e0 <__assert_fail@plt+0x275dc>
   407cc:	movw	r1, #35848	; 0x8c08
   407d0:	movt	r1, #7
   407d4:	mov	r7, r5
   407d8:	mov	r2, r0
   407dc:	mov	r0, #1
   407e0:	bl	1132c <__printf_chk@plt>
   407e4:	movw	r3, #26428	; 0x673c
   407e8:	movt	r3, #9
   407ec:	b	3fa28 <__assert_fail@plt+0x2e624>
   407f0:	bhi	3fd54 <__assert_fail@plt+0x2e950>
   407f4:	ldr	r6, [sp, #264]	; 0x108
   407f8:	cmp	r6, #0
   407fc:	bne	3fbc8 <__assert_fail@plt+0x2e7c4>
   40800:	ldrd	r2, [sp, #104]	; 0x68
   40804:	movw	r0, #18952	; 0x4a08
   40808:	str	r6, [sp]
   4080c:	movt	r0, #6
   40810:	ldrd	r6, [sp, #232]	; 0xe8
   40814:	adds	r2, r2, r6
   40818:	adc	r3, r3, r7
   4081c:	ldr	r7, [sp, #264]	; 0x108
   40820:	bl	389e0 <__assert_fail@plt+0x275dc>
   40824:	movw	r1, #31764	; 0x7c14
   40828:	movt	r1, #7
   4082c:	mov	r2, r0
   40830:	mov	r0, #1
   40834:	bl	1132c <__printf_chk@plt>
   40838:	movw	r3, #26428	; 0x673c
   4083c:	movt	r3, #9
   40840:	b	3fa28 <__assert_fail@plt+0x2e624>
   40844:	cmp	r9, #6
   40848:	beq	3fd54 <__assert_fail@plt+0x2e950>
   4084c:	bls	3fda4 <__assert_fail@plt+0x2e9a0>
   40850:	ldr	r5, [sp, #264]	; 0x108
   40854:	cmp	r5, #0
   40858:	beq	410cc <__assert_fail@plt+0x2fcc8>
   4085c:	ldr	r6, [sp, #52]	; 0x34
   40860:	add	r5, r6, #8
   40864:	movw	r3, #24696	; 0x6078
   40868:	movt	r3, #9
   4086c:	ldr	r3, [r3, #1568]	; 0x620
   40870:	cmp	r3, #0
   40874:	strne	r5, [sp, #52]	; 0x34
   40878:	bne	401dc <__assert_fail@plt+0x2edd8>
   4087c:	cmp	r5, fp
   40880:	bcc	41568 <__assert_fail@plt+0x30164>
   40884:	ldr	r7, [sp, #52]	; 0x34
   40888:	cmp	r7, fp
   4088c:	bcs	408a0 <__assert_fail@plt+0x2f49c>
   40890:	rsb	r1, r7, fp
   40894:	sub	r3, r1, #1
   40898:	cmp	r3, #7
   4089c:	bls	4156c <__assert_fail@plt+0x30168>
   408a0:	mov	r2, #0
   408a4:	mov	r3, #0
   408a8:	str	r5, [sp, #52]	; 0x34
   408ac:	strd	r2, [sp, #104]	; 0x68
   408b0:	b	401dc <__assert_fail@plt+0x2edd8>
   408b4:	cmp	r4, #2
   408b8:	beq	3ff9c <__assert_fail@plt+0x2eb98>
   408bc:	cmp	r4, #9
   408c0:	bne	3fc28 <__assert_fail@plt+0x2e824>
   408c4:	mov	r0, r4
   408c8:	bl	112fc <putchar@plt>
   408cc:	ldrd	r2, [sp, #104]	; 0x68
   408d0:	cmp	r3, #0
   408d4:	cmpeq	r2, #1
   408d8:	beq	41628 <__assert_fail@plt+0x30224>
   408dc:	bcc	41610 <__assert_fail@plt+0x3020c>
   408e0:	mvn	r0, #0
   408e4:	mvn	r1, #0
   408e8:	cmp	r3, r1
   408ec:	cmpeq	r2, r0
   408f0:	bne	3fc28 <__assert_fail@plt+0x2e824>
   408f4:	movw	r1, #37716	; 0x9354
   408f8:	mov	r0, #0
   408fc:	movt	r1, #7
   40900:	mov	r2, #5
   40904:	b	40034 <__assert_fail@plt+0x2ec30>
   40908:	ldrd	r2, [sp, #104]	; 0x68
   4090c:	ldr	ip, [sp, #48]	; 0x30
   40910:	strd	r2, [ip, #40]	; 0x28
   40914:	b	3fc28 <__assert_fail@plt+0x2e824>
   40918:	mov	r0, #9
   4091c:	bl	112fc <putchar@plt>
   40920:	ldrd	r2, [sp, #104]	; 0x68
   40924:	cmp	r3, #0
   40928:	cmpeq	r2, #14
   4092c:	beq	41d58 <__assert_fail@plt+0x30954>
   40930:	bhi	41380 <__assert_fail@plt+0x2ff7c>
   40934:	cmp	r3, #0
   40938:	cmpeq	r2, #7
   4093c:	beq	41ce0 <__assert_fail@plt+0x308dc>
   40940:	bhi	41830 <__assert_fail@plt+0x3042c>
   40944:	cmp	r3, #0
   40948:	cmpeq	r2, #3
   4094c:	beq	41db8 <__assert_fail@plt+0x309b4>
   40950:	bls	41b84 <__assert_fail@plt+0x30780>
   40954:	cmp	r3, #0
   40958:	cmpeq	r2, #5
   4095c:	beq	41da0 <__assert_fail@plt+0x3099c>
   40960:	bhi	41d88 <__assert_fail@plt+0x30984>
   40964:	movw	r1, #36584	; 0x8ee8
   40968:	mov	r0, #1
   4096c:	movt	r1, #7
   40970:	bl	1132c <__printf_chk@plt>
   40974:	ldr	r0, [sp, #52]	; 0x34
   40978:	b	3fb48 <__assert_fail@plt+0x2e744>
   4097c:	mov	r0, #9
   40980:	bl	112fc <putchar@plt>
   40984:	ldrd	r2, [sp, #104]	; 0x68
   40988:	cmp	r3, #0
   4098c:	cmpeq	r2, #2
   40990:	beq	4169c <__assert_fail@plt+0x30298>
   40994:	cmp	r3, #0
   40998:	cmpeq	r2, #3
   4099c:	beq	41684 <__assert_fail@plt+0x30280>
   409a0:	cmp	r3, #0
   409a4:	cmpeq	r2, #1
   409a8:	beq	416b4 <__assert_fail@plt+0x302b0>
   409ac:	movw	r1, #37476	; 0x9264
   409b0:	mov	r0, #0
   409b4:	movt	r1, #7
   409b8:	mov	r2, #5
   409bc:	b	40034 <__assert_fail@plt+0x2ec30>
   409c0:	mov	r0, #9
   409c4:	bl	112fc <putchar@plt>
   409c8:	ldrd	r2, [sp, #104]	; 0x68
   409cc:	cmp	r3, #0
   409d0:	cmpeq	r2, #3
   409d4:	bhi	41878 <__assert_fail@plt+0x30474>
   409d8:	cmp	r2, #3
   409dc:	ldrls	pc, [pc, r2, lsl #2]
   409e0:	b	41878 <__assert_fail@plt+0x30474>
   409e4:	andeq	r0, r4, ip, lsr sl
   409e8:	andeq	r0, r4, r4, lsr #20
   409ec:	andeq	r0, r4, ip, lsl #20
   409f0:	strdeq	r0, [r4], -r4
   409f4:	movw	r1, #37604	; 0x92e4
   409f8:	mov	r0, #1
   409fc:	movt	r1, #7
   40a00:	bl	1132c <__printf_chk@plt>
   40a04:	ldr	r0, [sp, #52]	; 0x34
   40a08:	b	3fb48 <__assert_fail@plt+0x2e744>
   40a0c:	movw	r1, #37592	; 0x92d8
   40a10:	mov	r0, #1
   40a14:	movt	r1, #7
   40a18:	bl	1132c <__printf_chk@plt>
   40a1c:	ldr	r0, [sp, #52]	; 0x34
   40a20:	b	3fb48 <__assert_fail@plt+0x2e744>
   40a24:	movw	r1, #37580	; 0x92cc
   40a28:	mov	r0, #1
   40a2c:	movt	r1, #7
   40a30:	bl	1132c <__printf_chk@plt>
   40a34:	ldr	r0, [sp, #52]	; 0x34
   40a38:	b	3fb48 <__assert_fail@plt+0x2e744>
   40a3c:	movw	r1, #37560	; 0x92b8
   40a40:	mov	r0, #1
   40a44:	movt	r1, #7
   40a48:	bl	1132c <__printf_chk@plt>
   40a4c:	ldr	r0, [sp, #52]	; 0x34
   40a50:	b	3fb48 <__assert_fail@plt+0x2e744>
   40a54:	mov	r0, #9
   40a58:	bl	112fc <putchar@plt>
   40a5c:	ldrd	r2, [sp, #104]	; 0x68
   40a60:	cmp	r3, #0
   40a64:	cmpeq	r2, #134	; 0x86
   40a68:	bhi	40ed4 <__assert_fail@plt+0x2fad0>
   40a6c:	cmp	r2, #134	; 0x86
   40a70:	ldrls	pc, [pc, r2, lsl #2]
   40a74:	b	40ed4 <__assert_fail@plt+0x2fad0>
   40a78:			; <UNDEFINED> instruction: 0x00040ebc
   40a7c:	andeq	r0, r4, r4, lsr #29
   40a80:	andeq	r0, r4, ip, lsl #29
   40a84:	andeq	r0, r4, r4, ror lr
   40a88:	andeq	r0, r4, ip, asr lr
   40a8c:	andeq	r0, r4, r4, asr #28
   40a90:	andeq	r0, r4, ip, lsr #28
   40a94:	andeq	r0, r4, r4, lsl lr
   40a98:	strdeq	r0, [r4], -ip
   40a9c:	andeq	r0, r4, r4, ror #27
   40aa0:	andeq	r0, r4, ip, asr #27
   40aa4:			; <UNDEFINED> instruction: 0x00040db4
   40aa8:	muleq	r4, ip, sp
   40aac:	andeq	r0, r4, r4, lsl #27
   40ab0:	andeq	r0, r4, ip, ror #26
   40ab4:	andeq	r0, r4, r4, asr sp
   40ab8:	andeq	r0, r4, ip, lsr sp
   40abc:	ldrdeq	r0, [r4], -r4
   40ac0:	ldrdeq	r0, [r4], -r4
   40ac4:	ldrdeq	r0, [r4], -r4
   40ac8:	ldrdeq	r0, [r4], -r4
   40acc:	ldrdeq	r0, [r4], -r4
   40ad0:	ldrdeq	r0, [r4], -r4
   40ad4:	ldrdeq	r0, [r4], -r4
   40ad8:	ldrdeq	r0, [r4], -r4
   40adc:	ldrdeq	r0, [r4], -r4
   40ae0:	ldrdeq	r0, [r4], -r4
   40ae4:	ldrdeq	r0, [r4], -r4
   40ae8:	ldrdeq	r0, [r4], -r4
   40aec:	ldrdeq	r0, [r4], -r4
   40af0:	ldrdeq	r0, [r4], -r4
   40af4:	ldrdeq	r0, [r4], -r4
   40af8:	ldrdeq	r0, [r4], -r4
   40afc:	ldrdeq	r0, [r4], -r4
   40b00:	ldrdeq	r0, [r4], -r4
   40b04:	ldrdeq	r0, [r4], -r4
   40b08:	ldrdeq	r0, [r4], -r4
   40b0c:	ldrdeq	r0, [r4], -r4
   40b10:	ldrdeq	r0, [r4], -r4
   40b14:	ldrdeq	r0, [r4], -r4
   40b18:	ldrdeq	r0, [r4], -r4
   40b1c:	ldrdeq	r0, [r4], -r4
   40b20:	ldrdeq	r0, [r4], -r4
   40b24:	ldrdeq	r0, [r4], -r4
   40b28:	ldrdeq	r0, [r4], -r4
   40b2c:	ldrdeq	r0, [r4], -r4
   40b30:	ldrdeq	r0, [r4], -r4
   40b34:	ldrdeq	r0, [r4], -r4
   40b38:	ldrdeq	r0, [r4], -r4
   40b3c:	ldrdeq	r0, [r4], -r4
   40b40:	ldrdeq	r0, [r4], -r4
   40b44:	ldrdeq	r0, [r4], -r4
   40b48:	ldrdeq	r0, [r4], -r4
   40b4c:	ldrdeq	r0, [r4], -r4
   40b50:	ldrdeq	r0, [r4], -r4
   40b54:	ldrdeq	r0, [r4], -r4
   40b58:	ldrdeq	r0, [r4], -r4
   40b5c:	ldrdeq	r0, [r4], -r4
   40b60:	ldrdeq	r0, [r4], -r4
   40b64:	ldrdeq	r0, [r4], -r4
   40b68:	ldrdeq	r0, [r4], -r4
   40b6c:	ldrdeq	r0, [r4], -r4
   40b70:	ldrdeq	r0, [r4], -r4
   40b74:	ldrdeq	r0, [r4], -r4
   40b78:	ldrdeq	r0, [r4], -r4
   40b7c:	ldrdeq	r0, [r4], -r4
   40b80:	ldrdeq	r0, [r4], -r4
   40b84:	ldrdeq	r0, [r4], -r4
   40b88:	ldrdeq	r0, [r4], -r4
   40b8c:	ldrdeq	r0, [r4], -r4
   40b90:	ldrdeq	r0, [r4], -r4
   40b94:	ldrdeq	r0, [r4], -r4
   40b98:	ldrdeq	r0, [r4], -r4
   40b9c:	ldrdeq	r0, [r4], -r4
   40ba0:	ldrdeq	r0, [r4], -r4
   40ba4:	ldrdeq	r0, [r4], -r4
   40ba8:	ldrdeq	r0, [r4], -r4
   40bac:	ldrdeq	r0, [r4], -r4
   40bb0:	ldrdeq	r0, [r4], -r4
   40bb4:	ldrdeq	r0, [r4], -r4
   40bb8:	ldrdeq	r0, [r4], -r4
   40bbc:	ldrdeq	r0, [r4], -r4
   40bc0:	ldrdeq	r0, [r4], -r4
   40bc4:	ldrdeq	r0, [r4], -r4
   40bc8:	ldrdeq	r0, [r4], -r4
   40bcc:	ldrdeq	r0, [r4], -r4
   40bd0:	ldrdeq	r0, [r4], -r4
   40bd4:	ldrdeq	r0, [r4], -r4
   40bd8:	ldrdeq	r0, [r4], -r4
   40bdc:	ldrdeq	r0, [r4], -r4
   40be0:	ldrdeq	r0, [r4], -r4
   40be4:	ldrdeq	r0, [r4], -r4
   40be8:	ldrdeq	r0, [r4], -r4
   40bec:	ldrdeq	r0, [r4], -r4
   40bf0:	ldrdeq	r0, [r4], -r4
   40bf4:	ldrdeq	r0, [r4], -r4
   40bf8:	ldrdeq	r0, [r4], -r4
   40bfc:	ldrdeq	r0, [r4], -r4
   40c00:	ldrdeq	r0, [r4], -r4
   40c04:	ldrdeq	r0, [r4], -r4
   40c08:	ldrdeq	r0, [r4], -r4
   40c0c:	ldrdeq	r0, [r4], -r4
   40c10:	ldrdeq	r0, [r4], -r4
   40c14:	ldrdeq	r0, [r4], -r4
   40c18:	ldrdeq	r0, [r4], -r4
   40c1c:	ldrdeq	r0, [r4], -r4
   40c20:	ldrdeq	r0, [r4], -r4
   40c24:	ldrdeq	r0, [r4], -r4
   40c28:	ldrdeq	r0, [r4], -r4
   40c2c:	ldrdeq	r0, [r4], -r4
   40c30:	ldrdeq	r0, [r4], -r4
   40c34:	ldrdeq	r0, [r4], -r4
   40c38:	ldrdeq	r0, [r4], -r4
   40c3c:	ldrdeq	r0, [r4], -r4
   40c40:	ldrdeq	r0, [r4], -r4
   40c44:	ldrdeq	r0, [r4], -r4
   40c48:	ldrdeq	r0, [r4], -r4
   40c4c:	ldrdeq	r0, [r4], -r4
   40c50:	ldrdeq	r0, [r4], -r4
   40c54:	ldrdeq	r0, [r4], -r4
   40c58:	ldrdeq	r0, [r4], -r4
   40c5c:	ldrdeq	r0, [r4], -r4
   40c60:	ldrdeq	r0, [r4], -r4
   40c64:	ldrdeq	r0, [r4], -r4
   40c68:	ldrdeq	r0, [r4], -r4
   40c6c:	ldrdeq	r0, [r4], -r4
   40c70:	ldrdeq	r0, [r4], -r4
   40c74:	ldrdeq	r0, [r4], -r4
   40c78:	andeq	r0, r4, r4, lsr #26
   40c7c:	andeq	r0, r4, ip, lsl #26
   40c80:	strdeq	r0, [r4], -r4
   40c84:	ldrdeq	r0, [r4], -ip
   40c88:	andeq	r0, r4, r4, asr #25
   40c8c:	andeq	r0, r4, ip, lsr #25
   40c90:	muleq	r4, r4, ip
   40c94:	movw	r1, #37304	; 0x91b8
   40c98:	mov	r0, #1
   40c9c:	movt	r1, #7
   40ca0:	bl	1132c <__printf_chk@plt>
   40ca4:	ldr	r0, [sp, #52]	; 0x34
   40ca8:	b	3fb48 <__assert_fail@plt+0x2e744>
   40cac:	movw	r1, #37280	; 0x91a0
   40cb0:	mov	r0, #1
   40cb4:	movt	r1, #7
   40cb8:	bl	1132c <__printf_chk@plt>
   40cbc:	ldr	r0, [sp, #52]	; 0x34
   40cc0:	b	3fb48 <__assert_fail@plt+0x2e744>
   40cc4:	movw	r1, #37260	; 0x918c
   40cc8:	mov	r0, #1
   40ccc:	movt	r1, #7
   40cd0:	bl	1132c <__printf_chk@plt>
   40cd4:	ldr	r0, [sp, #52]	; 0x34
   40cd8:	b	3fb48 <__assert_fail@plt+0x2e744>
   40cdc:	movw	r1, #37236	; 0x9174
   40ce0:	mov	r0, #1
   40ce4:	movt	r1, #7
   40ce8:	bl	1132c <__printf_chk@plt>
   40cec:	ldr	r0, [sp, #52]	; 0x34
   40cf0:	b	3fb48 <__assert_fail@plt+0x2e744>
   40cf4:	movw	r1, #37220	; 0x9164
   40cf8:	mov	r0, #1
   40cfc:	movt	r1, #7
   40d00:	bl	1132c <__printf_chk@plt>
   40d04:	ldr	r0, [sp, #52]	; 0x34
   40d08:	b	3fb48 <__assert_fail@plt+0x2e744>
   40d0c:	movw	r1, #37196	; 0x914c
   40d10:	mov	r0, #1
   40d14:	movt	r1, #7
   40d18:	bl	1132c <__printf_chk@plt>
   40d1c:	ldr	r0, [sp, #52]	; 0x34
   40d20:	b	3fb48 <__assert_fail@plt+0x2e744>
   40d24:	movw	r1, #37180	; 0x913c
   40d28:	mov	r0, #1
   40d2c:	movt	r1, #7
   40d30:	bl	1132c <__printf_chk@plt>
   40d34:	ldr	r0, [sp, #52]	; 0x34
   40d38:	b	3fb48 <__assert_fail@plt+0x2e744>
   40d3c:	movw	r1, #37328	; 0x91d0
   40d40:	mov	r0, #1
   40d44:	movt	r1, #7
   40d48:	bl	1132c <__printf_chk@plt>
   40d4c:	ldr	r0, [sp, #52]	; 0x34
   40d50:	b	3fb48 <__assert_fail@plt+0x2e744>
   40d54:	movw	r1, #37076	; 0x90d4
   40d58:	mov	r0, #1
   40d5c:	movt	r1, #7
   40d60:	bl	1132c <__printf_chk@plt>
   40d64:	ldr	r0, [sp, #52]	; 0x34
   40d68:	b	3fb48 <__assert_fail@plt+0x2e744>
   40d6c:	movw	r1, #37160	; 0x9128
   40d70:	mov	r0, #1
   40d74:	movt	r1, #7
   40d78:	bl	1132c <__printf_chk@plt>
   40d7c:	ldr	r0, [sp, #52]	; 0x34
   40d80:	b	3fb48 <__assert_fail@plt+0x2e744>
   40d84:	movw	r1, #37144	; 0x9118
   40d88:	mov	r0, #1
   40d8c:	movt	r1, #7
   40d90:	bl	1132c <__printf_chk@plt>
   40d94:	ldr	r0, [sp, #52]	; 0x34
   40d98:	b	3fb48 <__assert_fail@plt+0x2e744>
   40d9c:	movw	r1, #37132	; 0x910c
   40da0:	mov	r0, #1
   40da4:	movt	r1, #7
   40da8:	bl	1132c <__printf_chk@plt>
   40dac:	ldr	r0, [sp, #52]	; 0x34
   40db0:	b	3fb48 <__assert_fail@plt+0x2e744>
   40db4:	movw	r1, #37112	; 0x90f8
   40db8:	mov	r0, #1
   40dbc:	movt	r1, #7
   40dc0:	bl	1132c <__printf_chk@plt>
   40dc4:	ldr	r0, [sp, #52]	; 0x34
   40dc8:	b	3fb48 <__assert_fail@plt+0x2e744>
   40dcc:	movw	r1, #37092	; 0x90e4
   40dd0:	mov	r0, #1
   40dd4:	movt	r1, #7
   40dd8:	bl	1132c <__printf_chk@plt>
   40ddc:	ldr	r0, [sp, #52]	; 0x34
   40de0:	b	3fb48 <__assert_fail@plt+0x2e744>
   40de4:	movw	r1, #37056	; 0x90c0
   40de8:	mov	r0, #1
   40dec:	movt	r1, #7
   40df0:	bl	1132c <__printf_chk@plt>
   40df4:	ldr	r0, [sp, #52]	; 0x34
   40df8:	b	3fb48 <__assert_fail@plt+0x2e744>
   40dfc:	movw	r1, #37040	; 0x90b0
   40e00:	mov	r0, #1
   40e04:	movt	r1, #7
   40e08:	bl	1132c <__printf_chk@plt>
   40e0c:	ldr	r0, [sp, #52]	; 0x34
   40e10:	b	3fb48 <__assert_fail@plt+0x2e744>
   40e14:	movw	r1, #37028	; 0x90a4
   40e18:	mov	r0, #1
   40e1c:	movt	r1, #7
   40e20:	bl	1132c <__printf_chk@plt>
   40e24:	ldr	r0, [sp, #52]	; 0x34
   40e28:	b	3fb48 <__assert_fail@plt+0x2e744>
   40e2c:	movw	r1, #37012	; 0x9094
   40e30:	mov	r0, #1
   40e34:	movt	r1, #7
   40e38:	bl	1132c <__printf_chk@plt>
   40e3c:	ldr	r0, [sp, #52]	; 0x34
   40e40:	b	3fb48 <__assert_fail@plt+0x2e744>
   40e44:	movw	r1, #37000	; 0x9088
   40e48:	mov	r0, #1
   40e4c:	movt	r1, #7
   40e50:	bl	1132c <__printf_chk@plt>
   40e54:	ldr	r0, [sp, #52]	; 0x34
   40e58:	b	3fb48 <__assert_fail@plt+0x2e744>
   40e5c:	movw	r1, #36992	; 0x9080
   40e60:	mov	r0, #1
   40e64:	movt	r1, #7
   40e68:	bl	1132c <__printf_chk@plt>
   40e6c:	ldr	r0, [sp, #52]	; 0x34
   40e70:	b	3fb48 <__assert_fail@plt+0x2e744>
   40e74:	movw	r1, #36976	; 0x9070
   40e78:	mov	r0, #1
   40e7c:	movt	r1, #7
   40e80:	bl	1132c <__printf_chk@plt>
   40e84:	ldr	r0, [sp, #52]	; 0x34
   40e88:	b	3fb48 <__assert_fail@plt+0x2e744>
   40e8c:	movw	r1, #36964	; 0x9064
   40e90:	mov	r0, #1
   40e94:	movt	r1, #7
   40e98:	bl	1132c <__printf_chk@plt>
   40e9c:	ldr	r0, [sp, #52]	; 0x34
   40ea0:	b	3fb48 <__assert_fail@plt+0x2e744>
   40ea4:	movw	r1, #36944	; 0x9050
   40ea8:	mov	r0, #1
   40eac:	movt	r1, #7
   40eb0:	bl	1132c <__printf_chk@plt>
   40eb4:	ldr	r0, [sp, #52]	; 0x34
   40eb8:	b	3fb48 <__assert_fail@plt+0x2e744>
   40ebc:	movw	r1, #36936	; 0x9048
   40ec0:	mov	r0, #1
   40ec4:	movt	r1, #7
   40ec8:	bl	1132c <__printf_chk@plt>
   40ecc:	ldr	r0, [sp, #52]	; 0x34
   40ed0:	b	3fb48 <__assert_fail@plt+0x2e744>
   40ed4:	subs	r2, r2, #128	; 0x80
   40ed8:	sbc	r3, r3, #0
   40edc:	cmp	r3, #0
   40ee0:	cmpeq	r2, #127	; 0x7f
   40ee4:	mov	r2, #5
   40ee8:	movwls	r1, #37348	; 0x91e4
   40eec:	movwhi	r1, #37368	; 0x91f8
   40ef0:	movls	r0, #0
   40ef4:	movtls	r1, #7
   40ef8:	movhi	r0, #0
   40efc:	movthi	r1, #7
   40f00:	b	40034 <__assert_fail@plt+0x2ec30>
   40f04:	mov	r0, #9
   40f08:	bl	112fc <putchar@plt>
   40f0c:	ldrd	r2, [sp, #104]	; 0x68
   40f10:	cmp	r3, #0
   40f14:	cmpeq	r2, #2
   40f18:	beq	4166c <__assert_fail@plt+0x30268>
   40f1c:	cmp	r3, #0
   40f20:	cmpeq	r2, #3
   40f24:	beq	41654 <__assert_fail@plt+0x30250>
   40f28:	cmp	r3, #0
   40f2c:	cmpeq	r2, #1
   40f30:	beq	417b4 <__assert_fail@plt+0x303b0>
   40f34:	movw	r1, #37420	; 0x922c
   40f38:	mov	r0, #0
   40f3c:	movt	r1, #7
   40f40:	mov	r2, #5
   40f44:	b	40034 <__assert_fail@plt+0x2ec30>
   40f48:	cmp	r9, #25
   40f4c:	beq	3fda4 <__assert_fail@plt+0x2e9a0>
   40f50:	cmp	r9, #32
   40f54:	bne	40658 <__assert_fail@plt+0x2f254>
   40f58:	ldr	r7, [sp, #264]	; 0x108
   40f5c:	cmp	r7, #0
   40f60:	beq	41238 <__assert_fail@plt+0x2fe34>
   40f64:	ldr	ip, [sp, #52]	; 0x34
   40f68:	add	ip, ip, #8
   40f6c:	str	ip, [sp, #52]	; 0x34
   40f70:	b	401dc <__assert_fail@plt+0x2edd8>
   40f74:	cmp	r9, #14
   40f78:	bne	41ac0 <__assert_fail@plt+0x306bc>
   40f7c:	ldr	r7, [sp, #264]	; 0x108
   40f80:	cmp	r7, #0
   40f84:	bne	3fbc8 <__assert_fail@plt+0x2e7c4>
   40f88:	mov	r0, r7
   40f8c:	mov	r2, #5
   40f90:	movw	r1, #35940	; 0x8c64
   40f94:	movt	r1, #7
   40f98:	bl	11170 <dcgettext@plt>
   40f9c:	ldrd	r2, [sp, #104]	; 0x68
   40fa0:	str	r7, [sp]
   40fa4:	ldr	r7, [sp, #264]	; 0x108
   40fa8:	mov	r5, r0
   40fac:	movw	r0, #18952	; 0x4a08
   40fb0:	movt	r0, #6
   40fb4:	bl	389e0 <__assert_fail@plt+0x275dc>
   40fb8:	mov	r2, r0
   40fbc:	ldrd	r0, [sp, #104]	; 0x68
   40fc0:	str	r2, [sp, #60]	; 0x3c
   40fc4:	bl	39f00 <__assert_fail@plt+0x28afc>
   40fc8:	mov	r1, r5
   40fcc:	ldr	r2, [sp, #60]	; 0x3c
   40fd0:	mov	r3, r0
   40fd4:	mov	r0, #1
   40fd8:	bl	1132c <__printf_chk@plt>
   40fdc:	movw	r3, #26428	; 0x673c
   40fe0:	movt	r3, #9
   40fe4:	b	3fa28 <__assert_fail@plt+0x2e624>
   40fe8:	mov	r2, #5
   40fec:	movw	r1, #37756	; 0x937c
   40ff0:	mov	r0, #0
   40ff4:	movt	r1, #7
   40ff8:	bl	11170 <dcgettext@plt>
   40ffc:	mov	r1, r0
   41000:	mov	r0, #1
   41004:	bl	1132c <__printf_chk@plt>
   41008:	b	3ffbc <__assert_fail@plt+0x2ebb8>
   4100c:	ldr	r7, [sp, #64]	; 0x40
   41010:	cmp	r7, #8
   41014:	mov	r1, r7
   41018:	bhi	4188c <__assert_fail@plt+0x30488>
   4101c:	add	r3, sl, r1
   41020:	cmp	fp, r3
   41024:	bhi	41034 <__assert_fail@plt+0x2fc30>
   41028:	cmp	sl, fp
   4102c:	bcs	41040 <__assert_fail@plt+0x2fc3c>
   41030:	rsb	r1, sl, fp
   41034:	sub	r3, r1, #1
   41038:	cmp	r3, #7
   4103c:	bls	418b4 <__assert_fail@plt+0x304b0>
   41040:	mov	r2, #0
   41044:	mov	r3, #0
   41048:	strd	r2, [sp, #104]	; 0x68
   4104c:	ldr	ip, [sp, #64]	; 0x40
   41050:	add	ip, sl, ip
   41054:	str	ip, [sp, #52]	; 0x34
   41058:	b	3fbbc <__assert_fail@plt+0x2e7b8>
   4105c:	movw	r3, #26492	; 0x677c
   41060:	movt	r3, #9
   41064:	ldr	r0, [sp, #52]	; 0x34
   41068:	mov	r1, #1
   4106c:	ldr	r3, [r3]
   41070:	blx	r3
   41074:	add	r2, r7, r0
   41078:	str	r1, [sp, #108]	; 0x6c
   4107c:	cmp	fp, r2
   41080:	str	r0, [sp, #104]	; 0x68
   41084:	bcc	41098 <__assert_fail@plt+0x2fc94>
   41088:	cmp	r7, r2
   4108c:	movls	r2, r0
   41090:	movls	r3, r1
   41094:	bls	4027c <__assert_fail@plt+0x2ee78>
   41098:	mov	r2, #5
   4109c:	movw	r1, #35900	; 0x8c3c
   410a0:	mov	r0, #0
   410a4:	movt	r1, #7
   410a8:	bl	11170 <dcgettext@plt>
   410ac:	ldr	r1, [sp, #104]	; 0x68
   410b0:	bl	4b9ec <warn@@Base>
   410b4:	rsb	r2, r7, fp
   410b8:	asr	r1, r2, #31
   410bc:	mov	r0, r2
   410c0:	strd	r0, [sp, #104]	; 0x68
   410c4:	mov	r3, r1
   410c8:	b	4027c <__assert_fail@plt+0x2ee78>
   410cc:	ldr	r7, [sp, #52]	; 0x34
   410d0:	add	r5, r7, #8
   410d4:	cmp	fp, r5
   410d8:	bcs	418f4 <__assert_fail@plt+0x304f0>
   410dc:	mov	r2, #0
   410e0:	str	r2, [sp, #112]	; 0x70
   410e4:	mov	r0, r2
   410e8:	mov	r1, r2
   410ec:	str	r2, [sp, #104]	; 0x68
   410f0:	strd	r0, [sp, #72]	; 0x48
   410f4:	str	r2, [sp, #116]	; 0x74
   410f8:	str	r2, [sp, #108]	; 0x6c
   410fc:	cmp	r9, #20
   41100:	beq	41914 <__assert_fail@plt+0x30510>
   41104:	ldrd	r2, [sp, #72]	; 0x48
   41108:	add	lr, sp, #124	; 0x7c
   4110c:	str	lr, [sp]
   41110:	bl	3a2ac <__assert_fail@plt+0x28ea8>
   41114:	movw	r1, #35860	; 0x8c14
   41118:	movt	r1, #7
   4111c:	mov	r2, r0
   41120:	mov	r0, #1
   41124:	bl	1132c <__printf_chk@plt>
   41128:	movw	r3, #26428	; 0x673c
   4112c:	movt	r3, #9
   41130:	ldr	r2, [r3]
   41134:	cmp	r2, #0
   41138:	bne	40864 <__assert_fail@plt+0x2f460>
   4113c:	movw	r2, #26460	; 0x675c
   41140:	movt	r2, #9
   41144:	ldr	r2, [r2]
   41148:	cmp	r2, #0
   4114c:	bne	40864 <__assert_fail@plt+0x2f460>
   41150:	str	r5, [sp, #52]	; 0x34
   41154:	b	401f0 <__assert_fail@plt+0x2edec>
   41158:	movw	r3, #26492	; 0x677c
   4115c:	movt	r3, #9
   41160:	ldr	r0, [sp, #52]	; 0x34
   41164:	mov	r1, #2
   41168:	ldr	r3, [r3]
   4116c:	blx	r3
   41170:	add	r2, r7, r0
   41174:	str	r1, [sp, #108]	; 0x6c
   41178:	cmp	fp, r2
   4117c:	str	r0, [sp, #104]	; 0x68
   41180:	bcc	41194 <__assert_fail@plt+0x2fd90>
   41184:	cmp	r7, r2
   41188:	movls	r2, r0
   4118c:	movls	r3, r1
   41190:	bls	3fe94 <__assert_fail@plt+0x2ea90>
   41194:	mov	r2, #5
   41198:	movw	r1, #35900	; 0x8c3c
   4119c:	mov	r0, #0
   411a0:	movt	r1, #7
   411a4:	bl	11170 <dcgettext@plt>
   411a8:	ldr	r1, [sp, #104]	; 0x68
   411ac:	bl	4b9ec <warn@@Base>
   411b0:	rsb	r2, r7, fp
   411b4:	asr	r1, r2, #31
   411b8:	mov	r0, r2
   411bc:	strd	r0, [sp, #104]	; 0x68
   411c0:	mov	r3, r1
   411c4:	b	3fe94 <__assert_fail@plt+0x2ea90>
   411c8:	movw	r3, #26492	; 0x677c
   411cc:	movt	r3, #9
   411d0:	ldr	r0, [sp, #52]	; 0x34
   411d4:	mov	r1, r9
   411d8:	ldr	r3, [r3]
   411dc:	blx	r3
   411e0:	add	r2, r7, r0
   411e4:	str	r1, [sp, #108]	; 0x6c
   411e8:	cmp	fp, r2
   411ec:	str	r0, [sp, #104]	; 0x68
   411f0:	bcc	41204 <__assert_fail@plt+0x2fe00>
   411f4:	cmp	r7, r2
   411f8:	movls	r2, r0
   411fc:	movls	r3, r1
   41200:	bls	4079c <__assert_fail@plt+0x2f398>
   41204:	mov	r2, #5
   41208:	movw	r1, #35900	; 0x8c3c
   4120c:	mov	r0, #0
   41210:	movt	r1, #7
   41214:	bl	11170 <dcgettext@plt>
   41218:	ldr	r1, [sp, #104]	; 0x68
   4121c:	bl	4b9ec <warn@@Base>
   41220:	rsb	r2, r7, fp
   41224:	asr	r1, r2, #31
   41228:	mov	r0, r2
   4122c:	strd	r0, [sp, #104]	; 0x68
   41230:	mov	r3, r1
   41234:	b	4079c <__assert_fail@plt+0x2f398>
   41238:	ldr	r6, [sp, #52]	; 0x34
   4123c:	add	r5, r6, #8
   41240:	cmp	fp, r5
   41244:	bcs	418d0 <__assert_fail@plt+0x304cc>
   41248:	mov	r1, #0
   4124c:	str	r1, [sp, #112]	; 0x70
   41250:	mov	r2, r1
   41254:	mov	r3, r1
   41258:	mov	r0, r1
   4125c:	str	r1, [sp, #104]	; 0x68
   41260:	str	r1, [sp, #116]	; 0x74
   41264:	str	r1, [sp, #108]	; 0x6c
   41268:	add	ip, sp, #124	; 0x7c
   4126c:	str	ip, [sp]
   41270:	bl	3a2ac <__assert_fail@plt+0x28ea8>
   41274:	movw	r1, #36276	; 0x8db4
   41278:	movt	r1, #7
   4127c:	str	r5, [sp, #52]	; 0x34
   41280:	mov	r2, r0
   41284:	mov	r0, #1
   41288:	bl	1132c <__printf_chk@plt>
   4128c:	movw	r3, #26428	; 0x673c
   41290:	movt	r3, #9
   41294:	b	401f0 <__assert_fail@plt+0x2edec>
   41298:	cmp	r4, #25
   4129c:	beq	40114 <__assert_fail@plt+0x2ed10>
   412a0:	cmp	r4, #2
   412a4:	bne	3fa48 <__assert_fail@plt+0x2e644>
   412a8:	b	40114 <__assert_fail@plt+0x2ed10>
   412ac:	mov	r2, #5
   412b0:	movw	r1, #30836	; 0x7874
   412b4:	mov	r0, #0
   412b8:	movt	r1, #7
   412bc:	bl	11170 <dcgettext@plt>
   412c0:	ldr	r1, [sp, #64]	; 0x40
   412c4:	mov	r2, #8
   412c8:	bl	4b2b0 <error@@Base>
   412cc:	mov	r1, #8
   412d0:	b	40528 <__assert_fail@plt+0x2f124>
   412d4:	movw	r3, #26492	; 0x677c
   412d8:	movt	r3, #9
   412dc:	mov	r0, sl
   412e0:	ldr	r3, [r3]
   412e4:	blx	r3
   412e8:	strd	r0, [sp, #104]	; 0x68
   412ec:	b	40558 <__assert_fail@plt+0x2f154>
   412f0:	mov	r2, #5
   412f4:	movw	r1, #30836	; 0x7874
   412f8:	mov	r0, #0
   412fc:	movt	r1, #7
   41300:	bl	11170 <dcgettext@plt>
   41304:	ldr	r1, [sp, #240]	; 0xf0
   41308:	mov	r2, #8
   4130c:	bl	4b2b0 <error@@Base>
   41310:	mov	r1, #8
   41314:	b	3fd18 <__assert_fail@plt+0x2e914>
   41318:	movw	r3, #26492	; 0x677c
   4131c:	movt	r3, #9
   41320:	mov	r0, sl
   41324:	ldr	r3, [r3]
   41328:	blx	r3
   4132c:	strd	r0, [sp, #104]	; 0x68
   41330:	b	3fd48 <__assert_fail@plt+0x2e944>
   41334:	ldr	r1, [sp, #240]	; 0xf0
   41338:	cmp	r1, #8
   4133c:	bhi	41968 <__assert_fail@plt+0x30564>
   41340:	add	r3, sl, r1
   41344:	cmp	fp, r3
   41348:	bhi	41358 <__assert_fail@plt+0x2ff54>
   4134c:	cmp	sl, fp
   41350:	bcs	41364 <__assert_fail@plt+0x2ff60>
   41354:	rsb	r1, sl, fp
   41358:	sub	r3, r1, #1
   4135c:	cmp	r3, #7
   41360:	bls	4194c <__assert_fail@plt+0x30548>
   41364:	mov	r2, #0
   41368:	mov	r3, #0
   4136c:	strd	r2, [sp, #104]	; 0x68
   41370:	ldr	r5, [sp, #240]	; 0xf0
   41374:	add	r5, sl, r5
   41378:	str	r5, [sp, #52]	; 0x34
   4137c:	b	3fbbc <__assert_fail@plt+0x2e7b8>
   41380:	cmp	r3, #0
   41384:	cmpeq	r2, #22
   41388:	beq	41cc8 <__assert_fail@plt+0x308c4>
   4138c:	bls	417ec <__assert_fail@plt+0x303e8>
   41390:	cmp	r3, #0
   41394:	cmpeq	r2, #34	; 0x22
   41398:	beq	41c80 <__assert_fail@plt+0x3087c>
   4139c:	bhi	41acc <__assert_fail@plt+0x306c8>
   413a0:	cmp	r3, #0
   413a4:	cmpeq	r2, #29
   413a8:	beq	41d40 <__assert_fail@plt+0x3093c>
   413ac:	cmp	r3, #0
   413b0:	cmpeq	r2, #33	; 0x21
   413b4:	beq	41d28 <__assert_fail@plt+0x30924>
   413b8:	cmp	r3, #0
   413bc:	cmpeq	r2, #26
   413c0:	beq	41d10 <__assert_fail@plt+0x3090c>
   413c4:	subs	r2, r2, #32768	; 0x8000
   413c8:	mov	r1, #0
   413cc:	sbc	r3, r3, #0
   413d0:	movw	r0, #32767	; 0x7fff
   413d4:	cmp	r3, r1
   413d8:	cmpeq	r2, r0
   413dc:	movwls	r1, #36888	; 0x9018
   413e0:	movwhi	r1, #36920	; 0x9038
   413e4:	movtls	r1, #7
   413e8:	movthi	r1, #7
   413ec:	movls	r0, #0
   413f0:	movhi	r0, #0
   413f4:	mov	r2, #5
   413f8:	bl	11170 <dcgettext@plt>
   413fc:	ldrd	r2, [sp, #104]	; 0x68
   41400:	mov	r1, #0
   41404:	str	r1, [sp]
   41408:	mov	r4, r0
   4140c:	movw	r0, #18952	; 0x4a08
   41410:	movt	r0, #6
   41414:	bl	389e0 <__assert_fail@plt+0x275dc>
   41418:	mov	r1, r4
   4141c:	mov	r2, r0
   41420:	mov	r0, #1
   41424:	bl	1132c <__printf_chk@plt>
   41428:	ldr	r0, [sp, #52]	; 0x34
   4142c:	b	3fb48 <__assert_fail@plt+0x2e744>
   41430:	cmp	r4, #47	; 0x2f
   41434:	bne	3fc28 <__assert_fail@plt+0x2e824>
   41438:	b	3ffbc <__assert_fail@plt+0x2ebb8>
   4143c:	cmp	r4, #34	; 0x22
   41440:	beq	3ffbc <__assert_fail@plt+0x2ebb8>
   41444:	b	3fc28 <__assert_fail@plt+0x2e824>
   41448:	cmp	r4, #74	; 0x4a
   4144c:	bne	3fa48 <__assert_fail@plt+0x2e644>
   41450:	b	40114 <__assert_fail@plt+0x2ed10>
   41454:	str	fp, [sp]
   41458:	mov	r2, r0
   4145c:	mov	r3, r1
   41460:	b	4028c <__assert_fail@plt+0x2ee88>
   41464:	ldr	r7, [sp, #52]	; 0x34
   41468:	movw	r1, #35868	; 0x8c1c
   4146c:	mov	r0, #1
   41470:	movt	r1, #7
   41474:	rsb	r5, r7, fp
   41478:	mov	r3, r7
   4147c:	mov	r2, r5
   41480:	bl	1132c <__printf_chk@plt>
   41484:	b	40718 <__assert_fail@plt+0x2f314>
   41488:	mov	r2, #5
   4148c:	movw	r1, #35876	; 0x8c24
   41490:	mov	r0, #0
   41494:	movt	r1, #7
   41498:	bl	11170 <dcgettext@plt>
   4149c:	mov	r7, fp
   414a0:	bl	4b9ec <warn@@Base>
   414a4:	mov	r0, #0
   414a8:	mov	r2, #0
   414ac:	mov	r3, #0
   414b0:	mov	r1, r0
   414b4:	strd	r2, [sp, #104]	; 0x68
   414b8:	b	406ec <__assert_fail@plt+0x2f2e8>
   414bc:	movw	r0, #18952	; 0x4a08
   414c0:	ldrd	r2, [sp, #104]	; 0x68
   414c4:	str	ip, [sp]
   414c8:	movt	r0, #6
   414cc:	mov	r7, ip
   414d0:	b	40820 <__assert_fail@plt+0x2f41c>
   414d4:	mov	r2, #5
   414d8:	movw	r1, #37920	; 0x9420
   414dc:	mov	r0, #0
   414e0:	movt	r1, #7
   414e4:	bl	11170 <dcgettext@plt>
   414e8:	mov	ip, #0
   414ec:	ldrd	r2, [sp, #104]	; 0x68
   414f0:	str	ip, [sp]
   414f4:	str	ip, [sp, #56]	; 0x38
   414f8:	str	r0, [sp, #84]	; 0x54
   414fc:	movw	r0, #18952	; 0x4a08
   41500:	movt	r0, #6
   41504:	bl	389e0 <__assert_fail@plt+0x275dc>
   41508:	ldr	r3, [sp, #104]	; 0x68
   4150c:	ldr	r6, [sp, #64]	; 0x40
   41510:	movw	r1, #14352	; 0x3810
   41514:	ldr	r2, [sp, #108]	; 0x6c
   41518:	movt	r1, #9
   4151c:	ldr	ip, [sp, #56]	; 0x38
   41520:	mul	r2, r6, r2
   41524:	umull	r6, r7, r3, r6
   41528:	mla	r5, r5, r3, r2
   4152c:	strd	r6, [sp, #72]	; 0x48
   41530:	add	r5, r5, r7
   41534:	str	r5, [sp, #76]	; 0x4c
   41538:	str	r0, [sp, #88]	; 0x58
   4153c:	ldr	r0, [r1, #1996]	; 0x7cc
   41540:	cmp	r0, #0
   41544:	beq	41c64 <__assert_fail@plt+0x30860>
   41548:	add	r5, r1, #640	; 0x280
   4154c:	add	r1, r1, #1984	; 0x7c0
   41550:	b	4046c <__assert_fail@plt+0x2f068>
   41554:	cmp	r4, #70	; 0x46
   41558:	beq	3ff9c <__assert_fail@plt+0x2eb98>
   4155c:	cmp	r4, #72	; 0x48
   41560:	bne	3fc28 <__assert_fail@plt+0x2e824>
   41564:	b	3ff9c <__assert_fail@plt+0x2eb98>
   41568:	mov	r1, #8
   4156c:	movw	r3, #26492	; 0x677c
   41570:	movt	r3, #9
   41574:	ldr	r0, [sp, #52]	; 0x34
   41578:	ldr	r3, [r3]
   4157c:	str	r5, [sp, #52]	; 0x34
   41580:	blx	r3
   41584:	strd	r0, [sp, #104]	; 0x68
   41588:	b	401dc <__assert_fail@plt+0x2edd8>
   4158c:	ldr	r6, [sp, #48]	; 0x30
   41590:	add	r3, r3, #1024	; 0x400
   41594:	mov	r2, #8
   41598:	mov	r1, r3
   4159c:	ldr	r0, [r6, #48]	; 0x30
   415a0:	str	ip, [sp, #56]	; 0x38
   415a4:	str	r3, [sp, #60]	; 0x3c
   415a8:	bl	3f7e0 <__assert_fail@plt+0x2e3dc>
   415ac:	ldr	r3, [sp, #60]	; 0x3c
   415b0:	mov	r2, #4
   415b4:	mov	r1, r3
   415b8:	str	r0, [r6, #48]	; 0x30
   415bc:	ldr	r0, [r6, #52]	; 0x34
   415c0:	str	r3, [sp, #60]	; 0x3c
   415c4:	bl	3f7e0 <__assert_fail@plt+0x2e3dc>
   415c8:	ldr	r3, [sp, #60]	; 0x3c
   415cc:	ldr	ip, [sp, #56]	; 0x38
   415d0:	str	r3, [r6, #60]	; 0x3c
   415d4:	str	r0, [sp, #84]	; 0x54
   415d8:	str	r0, [r6, #52]	; 0x34
   415dc:	b	40154 <__assert_fail@plt+0x2ed50>
   415e0:	movw	r1, #37640	; 0x9308
   415e4:	mov	r0, #1
   415e8:	movt	r1, #7
   415ec:	bl	1132c <__printf_chk@plt>
   415f0:	ldr	r0, [sp, #52]	; 0x34
   415f4:	b	3fb48 <__assert_fail@plt+0x2e744>
   415f8:	movw	r1, #37664	; 0x9320
   415fc:	mov	r0, #1
   41600:	movt	r1, #7
   41604:	bl	1132c <__printf_chk@plt>
   41608:	ldr	r0, [sp, #52]	; 0x34
   4160c:	b	3fb48 <__assert_fail@plt+0x2e744>
   41610:	movw	r1, #37728	; 0x9360
   41614:	mov	r0, #1
   41618:	movt	r1, #7
   4161c:	bl	1132c <__printf_chk@plt>
   41620:	ldr	r0, [sp, #52]	; 0x34
   41624:	b	3fb48 <__assert_fail@plt+0x2e744>
   41628:	movw	r1, #37740	; 0x936c
   4162c:	mov	r0, #1
   41630:	movt	r1, #7
   41634:	bl	1132c <__printf_chk@plt>
   41638:	ldr	r0, [sp, #52]	; 0x34
   4163c:	b	3fb48 <__assert_fail@plt+0x2e744>
   41640:	movw	r1, #37536	; 0x92a0
   41644:	mov	r0, #0
   41648:	movt	r1, #7
   4164c:	mov	r2, #5
   41650:	b	40034 <__assert_fail@plt+0x2ec30>
   41654:	movw	r1, #37408	; 0x9220
   41658:	mov	r0, #1
   4165c:	movt	r1, #7
   41660:	bl	1132c <__printf_chk@plt>
   41664:	ldr	r0, [sp, #52]	; 0x34
   41668:	b	3fb48 <__assert_fail@plt+0x2e744>
   4166c:	movw	r1, #37396	; 0x9214
   41670:	mov	r0, #1
   41674:	movt	r1, #7
   41678:	bl	1132c <__printf_chk@plt>
   4167c:	ldr	r0, [sp, #52]	; 0x34
   41680:	b	3fb48 <__assert_fail@plt+0x2e744>
   41684:	movw	r1, #37464	; 0x9258
   41688:	mov	r0, #1
   4168c:	movt	r1, #7
   41690:	bl	1132c <__printf_chk@plt>
   41694:	ldr	r0, [sp, #52]	; 0x34
   41698:	b	3fb48 <__assert_fail@plt+0x2e744>
   4169c:	movw	r1, #37452	; 0x924c
   416a0:	mov	r0, #1
   416a4:	movt	r1, #7
   416a8:	bl	1132c <__printf_chk@plt>
   416ac:	ldr	r0, [sp, #52]	; 0x34
   416b0:	b	3fb48 <__assert_fail@plt+0x2e744>
   416b4:	movw	r1, #37444	; 0x9244
   416b8:	mov	r0, #1
   416bc:	movt	r1, #7
   416c0:	bl	1132c <__printf_chk@plt>
   416c4:	ldr	r0, [sp, #52]	; 0x34
   416c8:	b	3fb48 <__assert_fail@plt+0x2e744>
   416cc:	movw	r1, #37500	; 0x927c
   416d0:	mov	r0, #1
   416d4:	movt	r1, #7
   416d8:	bl	1132c <__printf_chk@plt>
   416dc:	ldr	r0, [sp, #52]	; 0x34
   416e0:	b	3fb48 <__assert_fail@plt+0x2e744>
   416e4:	movw	r1, #37508	; 0x9284
   416e8:	mov	r0, #1
   416ec:	movt	r1, #7
   416f0:	bl	1132c <__printf_chk@plt>
   416f4:	ldr	r0, [sp, #52]	; 0x34
   416f8:	b	3fb48 <__assert_fail@plt+0x2e744>
   416fc:	movw	r1, #37652	; 0x9314
   41700:	mov	r0, #1
   41704:	movt	r1, #7
   41708:	bl	1132c <__printf_chk@plt>
   4170c:	ldr	r0, [sp, #52]	; 0x34
   41710:	b	3fb48 <__assert_fail@plt+0x2e744>
   41714:	ldr	r7, [sp, #80]	; 0x50
   41718:	mov	r1, #0
   4171c:	mov	r3, fp
   41720:	mov	r2, r1
   41724:	ldr	r0, [r7, #12]
   41728:	add	r0, r0, r4
   4172c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   41730:	mov	r2, #5
   41734:	movw	r1, #37896	; 0x9408
   41738:	movt	r1, #7
   4173c:	mov	r4, r0
   41740:	mov	r0, #0
   41744:	bl	11170 <dcgettext@plt>
   41748:	mov	r2, r4
   4174c:	mov	r1, r0
   41750:	mov	r0, #1
   41754:	bl	1132c <__printf_chk@plt>
   41758:	cmp	r9, #16
   4175c:	beq	417a4 <__assert_fail@plt+0x303a0>
   41760:	movw	r3, #24696	; 0x6078
   41764:	movt	r3, #9
   41768:	ldr	r3, [r3, #4]
   4176c:	cmp	r3, #0
   41770:	beq	417a4 <__assert_fail@plt+0x303a0>
   41774:	ldr	r2, [r3]
   41778:	cmp	r2, r4
   4177c:	ldrne	r7, [sp, #52]	; 0x34
   41780:	bne	41794 <__assert_fail@plt+0x30390>
   41784:	b	41b1c <__assert_fail@plt+0x30718>
   41788:	ldr	r2, [r3]
   4178c:	cmp	r2, r4
   41790:	beq	41b18 <__assert_fail@plt+0x30714>
   41794:	ldr	r3, [r3, #20]
   41798:	cmp	r3, #0
   4179c:	bne	41788 <__assert_fail@plt+0x30384>
   417a0:	str	r7, [sp, #52]	; 0x34
   417a4:	mov	r0, #93	; 0x5d
   417a8:	bl	112fc <putchar@plt>
   417ac:	ldr	r0, [sp, #52]	; 0x34
   417b0:	b	3fb48 <__assert_fail@plt+0x2e744>
   417b4:	movw	r1, #37384	; 0x9208
   417b8:	mov	r0, #1
   417bc:	movt	r1, #7
   417c0:	bl	1132c <__printf_chk@plt>
   417c4:	ldr	r0, [sp, #52]	; 0x34
   417c8:	b	3fb48 <__assert_fail@plt+0x2e744>
   417cc:	cmp	r4, #77	; 0x4d
   417d0:	bne	3fc28 <__assert_fail@plt+0x2e824>
   417d4:	b	3ff9c <__assert_fail@plt+0x2eb98>
   417d8:	sub	r3, r4, #8448	; 0x2100
   417dc:	sub	r3, r3, #17
   417e0:	cmp	r3, #3
   417e4:	bhi	3fc28 <__assert_fail@plt+0x2e824>
   417e8:	b	3ff9c <__assert_fail@plt+0x2eb98>
   417ec:	cmp	r3, #0
   417f0:	cmpeq	r2, #17
   417f4:	beq	41cb0 <__assert_fail@plt+0x308ac>
   417f8:	bls	41b54 <__assert_fail@plt+0x30750>
   417fc:	cmp	r3, #0
   41800:	cmpeq	r2, #19
   41804:	beq	41c98 <__assert_fail@plt+0x30894>
   41808:	bcc	41b3c <__assert_fail@plt+0x30738>
   4180c:	cmp	r3, #0
   41810:	cmpeq	r2, #20
   41814:	bne	413c4 <__assert_fail@plt+0x2ffc0>
   41818:	movw	r1, #36792	; 0x8fb8
   4181c:	mov	r0, #1
   41820:	movt	r1, #7
   41824:	bl	1132c <__printf_chk@plt>
   41828:	ldr	r0, [sp, #52]	; 0x34
   4182c:	b	3fb48 <__assert_fail@plt+0x2e744>
   41830:	cmp	r3, #0
   41834:	cmpeq	r2, #10
   41838:	beq	41e18 <__assert_fail@plt+0x30a14>
   4183c:	bls	41bb4 <__assert_fail@plt+0x307b0>
   41840:	cmp	r3, #0
   41844:	cmpeq	r2, #12
   41848:	beq	41e00 <__assert_fail@plt+0x309fc>
   4184c:	bhi	41de8 <__assert_fail@plt+0x309e4>
   41850:	movw	r1, #36676	; 0x8f44
   41854:	mov	r0, #1
   41858:	movt	r1, #7
   4185c:	bl	1132c <__printf_chk@plt>
   41860:	ldr	r0, [sp, #52]	; 0x34
   41864:	b	3fb48 <__assert_fail@plt+0x2e744>
   41868:	movw	r1, #36508	; 0x8e9c
   4186c:	mov	r0, #0
   41870:	movt	r1, #7
   41874:	b	413f4 <__assert_fail@plt+0x2fff0>
   41878:	movw	r1, #37624	; 0x92f8
   4187c:	mov	r0, #0
   41880:	movt	r1, #7
   41884:	mov	r2, #5
   41888:	b	40034 <__assert_fail@plt+0x2ec30>
   4188c:	mov	r2, #5
   41890:	movw	r1, #30836	; 0x7874
   41894:	mov	r0, #0
   41898:	movt	r1, #7
   4189c:	bl	11170 <dcgettext@plt>
   418a0:	ldr	r1, [sp, #64]	; 0x40
   418a4:	mov	r2, #8
   418a8:	bl	4b2b0 <error@@Base>
   418ac:	mov	r1, #8
   418b0:	b	4101c <__assert_fail@plt+0x2fc18>
   418b4:	movw	r3, #26492	; 0x677c
   418b8:	movt	r3, #9
   418bc:	mov	r0, sl
   418c0:	ldr	r3, [r3]
   418c4:	blx	r3
   418c8:	strd	r0, [sp, #104]	; 0x68
   418cc:	b	4104c <__assert_fail@plt+0x2fc48>
   418d0:	mov	r0, r6
   418d4:	add	r1, sp, #112	; 0x70
   418d8:	add	r2, sp, #104	; 0x68
   418dc:	bl	4bfa4 <warn@@Base+0x5b8>
   418e0:	ldr	r0, [sp, #112]	; 0x70
   418e4:	ldr	r1, [sp, #116]	; 0x74
   418e8:	ldr	r2, [sp, #104]	; 0x68
   418ec:	ldr	r3, [sp, #108]	; 0x6c
   418f0:	b	41268 <__assert_fail@plt+0x2fe64>
   418f4:	mov	r0, r7
   418f8:	add	r1, sp, #112	; 0x70
   418fc:	add	r2, sp, #104	; 0x68
   41900:	bl	4bfa4 <warn@@Base+0x5b8>
   41904:	ldrd	r2, [sp, #104]	; 0x68
   41908:	ldrd	r0, [sp, #112]	; 0x70
   4190c:	strd	r2, [sp, #72]	; 0x48
   41910:	b	410fc <__assert_fail@plt+0x2fcf8>
   41914:	ldrd	r2, [sp, #72]	; 0x48
   41918:	ldrd	r6, [sp, #232]	; 0xe8
   4191c:	adds	r2, r2, r6
   41920:	adc	r3, r3, r7
   41924:	ldrd	r6, [sp, #72]	; 0x48
   41928:	cmp	r3, r7
   4192c:	cmpeq	r2, r6
   41930:	strdcs	r2, [sp, #72]	; 0x48
   41934:	bcs	41104 <__assert_fail@plt+0x2fd00>
   41938:	adds	r0, r0, #1
   4193c:	strd	r2, [sp, #72]	; 0x48
   41940:	adc	r1, r1, #0
   41944:	strd	r0, [sp, #112]	; 0x70
   41948:	b	41104 <__assert_fail@plt+0x2fd00>
   4194c:	movw	r3, #26492	; 0x677c
   41950:	movt	r3, #9
   41954:	mov	r0, sl
   41958:	ldr	r3, [r3]
   4195c:	blx	r3
   41960:	strd	r0, [sp, #104]	; 0x68
   41964:	b	41370 <__assert_fail@plt+0x2ff6c>
   41968:	mov	r2, #5
   4196c:	movw	r1, #30836	; 0x7874
   41970:	mov	r0, #0
   41974:	movt	r1, #7
   41978:	bl	11170 <dcgettext@plt>
   4197c:	ldr	r1, [sp, #240]	; 0xf0
   41980:	mov	r2, #8
   41984:	bl	4b2b0 <error@@Base>
   41988:	mov	r1, #8
   4198c:	b	41340 <__assert_fail@plt+0x2ff3c>
   41990:	ldr	r0, [sp, #104]	; 0x68
   41994:	ldr	r1, [sp, #108]	; 0x6c
   41998:	str	r0, [sp, #88]	; 0x58
   4199c:	str	r1, [sp, #92]	; 0x5c
   419a0:	b	40180 <__assert_fail@plt+0x2ed7c>
   419a4:	mov	r2, #5
   419a8:	movw	r1, #36348	; 0x8dfc
   419ac:	ldr	r0, [sp, #264]	; 0x108
   419b0:	movt	r1, #7
   419b4:	str	ip, [sp, #56]	; 0x38
   419b8:	bl	11170 <dcgettext@plt>
   419bc:	ldr	r7, [sp, #264]	; 0x108
   419c0:	ldr	r5, [r5, #2120]	; 0x848
   419c4:	ldrd	r2, [sp, #72]	; 0x48
   419c8:	str	r7, [sp]
   419cc:	mov	r1, r0
   419d0:	movw	r0, #18952	; 0x4a08
   419d4:	movt	r0, #6
   419d8:	str	r1, [sp, #60]	; 0x3c
   419dc:	bl	389e0 <__assert_fail@plt+0x275dc>
   419e0:	ldr	r1, [sp, #60]	; 0x3c
   419e4:	mov	r2, r0
   419e8:	mov	r0, r1
   419ec:	mov	r1, r5
   419f0:	bl	4b9ec <warn@@Base>
   419f4:	movw	r3, #35756	; 0x8bac
   419f8:	ldr	ip, [sp, #56]	; 0x38
   419fc:	movt	r3, #7
   41a00:	b	3fa0c <__assert_fail@plt+0x2e608>
   41a04:	ldr	r6, [sp, #48]	; 0x30
   41a08:	add	r9, r3, #1024	; 0x400
   41a0c:	mov	r2, #8
   41a10:	mov	r1, r9
   41a14:	ldr	r0, [r6, #64]	; 0x40
   41a18:	bl	3f7e0 <__assert_fail@plt+0x2e3dc>
   41a1c:	ldr	r3, [r6, #68]	; 0x44
   41a20:	str	r9, [r6, #72]	; 0x48
   41a24:	mov	r5, r0
   41a28:	str	r0, [r6, #64]	; 0x40
   41a2c:	b	40300 <__assert_fail@plt+0x2eefc>
   41a30:	cmp	ip, #0
   41a34:	movne	r0, r3
   41a38:	movwne	r1, #36120	; 0x8d18
   41a3c:	movweq	r1, #30100	; 0x7594
   41a40:	movne	r2, #5
   41a44:	movtne	r1, #7
   41a48:	moveq	r0, ip
   41a4c:	moveq	r2, #5
   41a50:	movteq	r1, #7
   41a54:	bl	11170 <dcgettext@plt>
   41a58:	mov	r3, r0
   41a5c:	b	404f4 <__assert_fail@plt+0x2f0f0>
   41a60:	mov	r2, #5
   41a64:	movw	r1, #36048	; 0x8cd0
   41a68:	mov	r0, #0
   41a6c:	movt	r1, #7
   41a70:	bl	11170 <dcgettext@plt>
   41a74:	mov	r5, #0
   41a78:	ldrd	r2, [sp, #72]	; 0x48
   41a7c:	str	r5, [sp]
   41a80:	mov	ip, r0
   41a84:	movw	r0, #18952	; 0x4a08
   41a88:	movt	r0, #6
   41a8c:	str	ip, [sp, #56]	; 0x38
   41a90:	bl	389e0 <__assert_fail@plt+0x275dc>
   41a94:	ldr	ip, [sp, #56]	; 0x38
   41a98:	mov	r1, r0
   41a9c:	mov	r0, ip
   41aa0:	bl	4b9ec <warn@@Base>
   41aa4:	mov	r0, r5
   41aa8:	movw	r1, #36092	; 0x8cfc
   41aac:	mov	r2, #5
   41ab0:	movt	r1, #7
   41ab4:	bl	11170 <dcgettext@plt>
   41ab8:	mov	r3, r0
   41abc:	b	404f4 <__assert_fail@plt+0x2f0f0>
   41ac0:	cmp	r9, #15
   41ac4:	bne	40658 <__assert_fail@plt+0x2f254>
   41ac8:	b	3fda4 <__assert_fail@plt+0x2e9a0>
   41acc:	movw	r0, #32769	; 0x8001
   41ad0:	mov	r1, #0
   41ad4:	cmp	r3, r1
   41ad8:	cmpeq	r2, r0
   41adc:	beq	41d70 <__assert_fail@plt+0x3096c>
   41ae0:	movw	r0, #34661	; 0x8765
   41ae4:	mov	r1, #0
   41ae8:	cmp	r3, r1
   41aec:	cmpeq	r2, r0
   41af0:	beq	41b3c <__assert_fail@plt+0x30738>
   41af4:	cmp	r3, #0
   41af8:	cmpeq	r2, #35	; 0x23
   41afc:	bne	413c4 <__assert_fail@plt+0x2ffc0>
   41b00:	movw	r1, #36852	; 0x8ff4
   41b04:	mov	r0, #1
   41b08:	movt	r1, #7
   41b0c:	bl	1132c <__printf_chk@plt>
   41b10:	ldr	r0, [sp, #52]	; 0x34
   41b14:	b	3fb48 <__assert_fail@plt+0x2e744>
   41b18:	str	r7, [sp, #52]	; 0x34
   41b1c:	ldr	r0, [r3, #4]
   41b20:	bl	39fb0 <__assert_fail@plt+0x28bac>
   41b24:	movw	r1, #9744	; 0x2610
   41b28:	movt	r1, #6
   41b2c:	mov	r2, r0
   41b30:	mov	r0, #1
   41b34:	bl	1132c <__printf_chk@plt>
   41b38:	b	417a4 <__assert_fail@plt+0x303a0>
   41b3c:	movw	r1, #36764	; 0x8f9c
   41b40:	mov	r0, #1
   41b44:	movt	r1, #7
   41b48:	bl	1132c <__printf_chk@plt>
   41b4c:	ldr	r0, [sp, #52]	; 0x34
   41b50:	b	3fb48 <__assert_fail@plt+0x2e744>
   41b54:	cmp	r3, #0
   41b58:	cmpeq	r2, #15
   41b5c:	beq	41dd0 <__assert_fail@plt+0x309cc>
   41b60:	cmp	r3, #0
   41b64:	cmpeq	r2, #16
   41b68:	bne	413c4 <__assert_fail@plt+0x2ffc0>
   41b6c:	movw	r1, #36732	; 0x8f7c
   41b70:	mov	r0, #1
   41b74:	movt	r1, #7
   41b78:	bl	1132c <__printf_chk@plt>
   41b7c:	ldr	r0, [sp, #52]	; 0x34
   41b80:	b	3fb48 <__assert_fail@plt+0x2e744>
   41b84:	cmp	r3, #0
   41b88:	cmpeq	r2, #1
   41b8c:	beq	41e30 <__assert_fail@plt+0x30a2c>
   41b90:	cmp	r3, #0
   41b94:	cmpeq	r2, #2
   41b98:	bne	413c4 <__assert_fail@plt+0x2ffc0>
   41b9c:	movw	r1, #36560	; 0x8ed0
   41ba0:	mov	r0, #1
   41ba4:	movt	r1, #7
   41ba8:	bl	1132c <__printf_chk@plt>
   41bac:	ldr	r0, [sp, #52]	; 0x34
   41bb0:	b	3fb48 <__assert_fail@plt+0x2e744>
   41bb4:	cmp	r3, #0
   41bb8:	cmpeq	r2, #8
   41bbc:	beq	41cf8 <__assert_fail@plt+0x308f4>
   41bc0:	cmp	r3, #0
   41bc4:	cmpeq	r2, #9
   41bc8:	bne	413c4 <__assert_fail@plt+0x2ffc0>
   41bcc:	movw	r1, #36648	; 0x8f28
   41bd0:	mov	r0, #1
   41bd4:	movt	r1, #7
   41bd8:	bl	1132c <__printf_chk@plt>
   41bdc:	ldr	r0, [sp, #52]	; 0x34
   41be0:	b	3fb48 <__assert_fail@plt+0x2e744>
   41be4:	mov	r2, #5
   41be8:	movw	r1, #36148	; 0x8d34
   41bec:	mov	r0, #0
   41bf0:	movt	r1, #7
   41bf4:	bl	11170 <dcgettext@plt>
   41bf8:	mov	r5, #0
   41bfc:	mov	r3, r7
   41c00:	mov	r2, r6
   41c04:	str	r5, [sp]
   41c08:	mov	ip, r0
   41c0c:	movw	r0, #18952	; 0x4a08
   41c10:	movt	r0, #6
   41c14:	str	ip, [sp, #56]	; 0x38
   41c18:	bl	389e0 <__assert_fail@plt+0x275dc>
   41c1c:	ldr	ip, [sp, #56]	; 0x38
   41c20:	mov	r1, r0
   41c24:	mov	r0, ip
   41c28:	bl	4b9ec <warn@@Base>
   41c2c:	mov	r0, r5
   41c30:	movw	r1, #36200	; 0x8d68
   41c34:	mov	r2, #5
   41c38:	movt	r1, #7
   41c3c:	bl	11170 <dcgettext@plt>
   41c40:	mov	r3, r0
   41c44:	b	404f4 <__assert_fail@plt+0x2f0f0>
   41c48:	movw	r1, #35980	; 0x8c8c
   41c4c:	ldr	r0, [sp, #264]	; 0x108
   41c50:	movt	r1, #7
   41c54:	mov	r2, #5
   41c58:	bl	11170 <dcgettext@plt>
   41c5c:	mov	r3, r0
   41c60:	b	404f4 <__assert_fail@plt+0x2f0f0>
   41c64:	movw	r1, #36016	; 0x8cb0
   41c68:	mov	r2, #5
   41c6c:	movt	r1, #7
   41c70:	bl	11170 <dcgettext@plt>
   41c74:	mov	r3, r0
   41c78:	b	404f4 <__assert_fail@plt+0x2f0f0>
   41c7c:	bl	1117c <__stack_chk_fail@plt>
   41c80:	movw	r1, #36836	; 0x8fe4
   41c84:	mov	r0, #1
   41c88:	movt	r1, #7
   41c8c:	bl	1132c <__printf_chk@plt>
   41c90:	ldr	r0, [sp, #52]	; 0x34
   41c94:	b	3fb48 <__assert_fail@plt+0x2e744>
   41c98:	movw	r1, #36788	; 0x8fb4
   41c9c:	mov	r0, #1
   41ca0:	movt	r1, #7
   41ca4:	bl	1132c <__printf_chk@plt>
   41ca8:	ldr	r0, [sp, #52]	; 0x34
   41cac:	b	3fb48 <__assert_fail@plt+0x2e744>
   41cb0:	movw	r1, #36748	; 0x8f8c
   41cb4:	mov	r0, #1
   41cb8:	movt	r1, #7
   41cbc:	bl	1132c <__printf_chk@plt>
   41cc0:	ldr	r0, [sp, #52]	; 0x34
   41cc4:	b	3fb48 <__assert_fail@plt+0x2e744>
   41cc8:	movw	r1, #36804	; 0x8fc4
   41ccc:	mov	r0, #1
   41cd0:	movt	r1, #7
   41cd4:	bl	1132c <__printf_chk@plt>
   41cd8:	ldr	r0, [sp, #52]	; 0x34
   41cdc:	b	3fb48 <__assert_fail@plt+0x2e744>
   41ce0:	movw	r1, #36616	; 0x8f08
   41ce4:	mov	r0, #1
   41ce8:	movt	r1, #7
   41cec:	bl	1132c <__printf_chk@plt>
   41cf0:	ldr	r0, [sp, #52]	; 0x34
   41cf4:	b	3fb48 <__assert_fail@plt+0x2e744>
   41cf8:	movw	r1, #36632	; 0x8f18
   41cfc:	mov	r0, #1
   41d00:	movt	r1, #7
   41d04:	bl	1132c <__printf_chk@plt>
   41d08:	ldr	r0, [sp, #52]	; 0x34
   41d0c:	b	3fb48 <__assert_fail@plt+0x2e744>
   41d10:	movw	r1, #36812	; 0x8fcc
   41d14:	mov	r0, #1
   41d18:	movt	r1, #7
   41d1c:	bl	1132c <__printf_chk@plt>
   41d20:	ldr	r0, [sp, #52]	; 0x34
   41d24:	b	3fb48 <__assert_fail@plt+0x2e744>
   41d28:	movw	r1, #36828	; 0x8fdc
   41d2c:	mov	r0, #1
   41d30:	movt	r1, #7
   41d34:	bl	1132c <__printf_chk@plt>
   41d38:	ldr	r0, [sp, #52]	; 0x34
   41d3c:	b	3fb48 <__assert_fail@plt+0x2e744>
   41d40:	movw	r1, #36820	; 0x8fd4
   41d44:	mov	r0, #1
   41d48:	movt	r1, #7
   41d4c:	bl	1132c <__printf_chk@plt>
   41d50:	ldr	r0, [sp, #52]	; 0x34
   41d54:	b	3fb48 <__assert_fail@plt+0x2e744>
   41d58:	movw	r1, #36708	; 0x8f64
   41d5c:	mov	r0, #1
   41d60:	movt	r1, #7
   41d64:	bl	1132c <__printf_chk@plt>
   41d68:	ldr	r0, [sp, #52]	; 0x34
   41d6c:	b	3fb48 <__assert_fail@plt+0x2e744>
   41d70:	movw	r1, #36868	; 0x9004
   41d74:	mov	r0, #1
   41d78:	movt	r1, #7
   41d7c:	bl	1132c <__printf_chk@plt>
   41d80:	ldr	r0, [sp, #52]	; 0x34
   41d84:	b	3fb48 <__assert_fail@plt+0x2e744>
   41d88:	movw	r1, #36604	; 0x8efc
   41d8c:	mov	r0, #1
   41d90:	movt	r1, #7
   41d94:	bl	1132c <__printf_chk@plt>
   41d98:	ldr	r0, [sp, #52]	; 0x34
   41d9c:	b	3fb48 <__assert_fail@plt+0x2e744>
   41da0:	movw	r1, #36592	; 0x8ef0
   41da4:	mov	r0, #1
   41da8:	movt	r1, #7
   41dac:	bl	1132c <__printf_chk@plt>
   41db0:	ldr	r0, [sp, #52]	; 0x34
   41db4:	b	3fb48 <__assert_fail@plt+0x2e744>
   41db8:	movw	r1, #36576	; 0x8ee0
   41dbc:	mov	r0, #1
   41dc0:	movt	r1, #7
   41dc4:	bl	1132c <__printf_chk@plt>
   41dc8:	ldr	r0, [sp, #52]	; 0x34
   41dcc:	b	3fb48 <__assert_fail@plt+0x2e744>
   41dd0:	movw	r1, #36724	; 0x8f74
   41dd4:	mov	r0, #1
   41dd8:	movt	r1, #7
   41ddc:	bl	1132c <__printf_chk@plt>
   41de0:	ldr	r0, [sp, #52]	; 0x34
   41de4:	b	3fb48 <__assert_fail@plt+0x2e744>
   41de8:	movw	r1, #36696	; 0x8f58
   41dec:	mov	r0, #1
   41df0:	movt	r1, #7
   41df4:	bl	1132c <__printf_chk@plt>
   41df8:	ldr	r0, [sp, #52]	; 0x34
   41dfc:	b	3fb48 <__assert_fail@plt+0x2e744>
   41e00:	movw	r1, #36684	; 0x8f4c
   41e04:	mov	r0, #1
   41e08:	movt	r1, #7
   41e0c:	bl	1132c <__printf_chk@plt>
   41e10:	ldr	r0, [sp, #52]	; 0x34
   41e14:	b	3fb48 <__assert_fail@plt+0x2e744>
   41e18:	movw	r1, #36664	; 0x8f38
   41e1c:	mov	r0, #1
   41e20:	movt	r1, #7
   41e24:	bl	1132c <__printf_chk@plt>
   41e28:	ldr	r0, [sp, #52]	; 0x34
   41e2c:	b	3fb48 <__assert_fail@plt+0x2e744>
   41e30:	movw	r1, #36548	; 0x8ec4
   41e34:	mov	r0, #1
   41e38:	movt	r1, #7
   41e3c:	bl	1132c <__printf_chk@plt>
   41e40:	ldr	r0, [sp, #52]	; 0x34
   41e44:	b	3fb48 <__assert_fail@plt+0x2e744>
   41e48:	movw	r1, #36320	; 0x8de0
   41e4c:	ldr	r0, [sp, #264]	; 0x108
   41e50:	movt	r1, #7
   41e54:	mov	r2, #5
   41e58:	str	ip, [sp, #56]	; 0x38
   41e5c:	bl	11170 <dcgettext@plt>
   41e60:	ldr	ip, [sp, #56]	; 0x38
   41e64:	mov	r3, r0
   41e68:	b	3fa0c <__assert_fail@plt+0x2e608>
   41e6c:	movw	r3, #26492	; 0x677c
   41e70:	movt	r3, #9
   41e74:	mov	r0, r5
   41e78:	ldr	r3, [r3]
   41e7c:	blx	r3
   41e80:	strd	r0, [sp, #104]	; 0x68
   41e84:	b	4076c <__assert_fail@plt+0x2f368>
   41e88:	movw	r3, #26492	; 0x677c
   41e8c:	movt	r3, #9
   41e90:	mov	r0, r6
   41e94:	ldr	r3, [r3]
   41e98:	blx	r3
   41e9c:	strd	r0, [sp, #104]	; 0x68
   41ea0:	b	3fe64 <__assert_fail@plt+0x2ea60>
   41ea4:	movw	r3, #26492	; 0x677c
   41ea8:	movt	r3, #9
   41eac:	mov	r0, ip
   41eb0:	ldr	r3, [r3]
   41eb4:	blx	r3
   41eb8:	strd	r0, [sp, #104]	; 0x68
   41ebc:	b	4024c <__assert_fail@plt+0x2ee48>
   41ec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41ec4:	movw	r6, #16680	; 0x4128
   41ec8:	ldr	r7, [r0, #12]
   41ecc:	sub	sp, sp, #284	; 0x11c
   41ed0:	movt	r6, #9
   41ed4:	cmp	r3, #0
   41ed8:	str	r3, [sp, #132]	; 0x84
   41edc:	str	r7, [sp, #100]	; 0x64
   41ee0:	mov	r7, r2
   41ee4:	ldr	r3, [r6]
   41ee8:	ldr	r2, [r0, #24]
   41eec:	ldr	ip, [sp, #100]	; 0x64
   41ef0:	str	r6, [sp, #160]	; 0xa0
   41ef4:	mov	r6, r1
   41ef8:	str	r0, [sp, #140]	; 0x8c
   41efc:	add	fp, ip, r2
   41f00:	str	r3, [sp, #276]	; 0x114
   41f04:	bne	41f1c <__assert_fail@plt+0x30b18>
   41f08:	movw	r3, #26428	; 0x673c
   41f0c:	movt	r3, #9
   41f10:	ldr	r3, [r3]
   41f14:	cmp	r3, #0
   41f18:	beq	4212c <__assert_fail@plt+0x30d28>
   41f1c:	movw	ip, #24696	; 0x6078
   41f20:	movt	ip, #9
   41f24:	str	ip, [sp, #136]	; 0x88
   41f28:	ldr	r3, [ip, #1568]	; 0x620
   41f2c:	cmp	r3, #0
   41f30:	beq	42064 <__assert_fail@plt+0x30c60>
   41f34:	mov	ip, #0
   41f38:	str	ip, [sp, #180]	; 0xb4
   41f3c:	ldr	ip, [sp, #132]	; 0x84
   41f40:	cmp	ip, #0
   41f44:	beq	42148 <__assert_fail@plt+0x30d44>
   41f48:	lsl	ip, r7, #6
   41f4c:	str	ip, [sp, #176]	; 0xb0
   41f50:	mov	r1, r6
   41f54:	ldr	r6, [sp, #176]	; 0xb0
   41f58:	movw	ip, #14352	; 0x3810
   41f5c:	movt	ip, #9
   41f60:	add	r4, ip, r6
   41f64:	mov	r0, r7
   41f68:	str	ip, [sp, #148]	; 0x94
   41f6c:	bl	33860 <__assert_fail@plt+0x2245c>
   41f70:	ldr	r5, [r4, #12]
   41f74:	cmp	r5, #0
   41f78:	beq	433b4 <__assert_fail@plt+0x31fb0>
   41f7c:	ldr	r7, [sp, #100]	; 0x64
   41f80:	cmp	r7, fp
   41f84:	bcs	42614 <__assert_fail@plt+0x31210>
   41f88:	movw	ip, #24696	; 0x6078
   41f8c:	movt	ip, #9
   41f90:	str	ip, [sp, #136]	; 0x88
   41f94:	movw	r6, #26492	; 0x677c
   41f98:	mov	sl, ip
   41f9c:	ldr	ip, [sp, #100]	; 0x64
   41fa0:	movt	r6, #9
   41fa4:	movw	r7, #26488	; 0x6778
   41fa8:	str	r6, [sp, #164]	; 0xa4
   41fac:	movt	r7, #9
   41fb0:	mov	r6, #0
   41fb4:	str	r7, [sp, #144]	; 0x90
   41fb8:	str	ip, [sp, #128]	; 0x80
   41fbc:	str	r6, [sp, #108]	; 0x6c
   41fc0:	ldr	r7, [sp, #100]	; 0x64
   41fc4:	mov	r2, #0
   41fc8:	mov	r3, #0
   41fcc:	strd	r2, [sp, #192]	; 0xc0
   41fd0:	add	r4, r7, #4
   41fd4:	strd	r2, [sp, #200]	; 0xc8
   41fd8:	cmp	fp, r4
   41fdc:	movhi	r1, #4
   41fe0:	bls	421e8 <__assert_fail@plt+0x30de4>
   41fe4:	ldr	r6, [sp, #164]	; 0xa4
   41fe8:	movw	r7, #26492	; 0x677c
   41fec:	ldr	r0, [sp, #100]	; 0x64
   41ff0:	movt	r7, #9
   41ff4:	ldr	r3, [r6]
   41ff8:	blx	r3
   41ffc:	mvn	r2, #0
   42000:	mov	r3, #0
   42004:	mov	r8, r0
   42008:	mov	r9, r1
   4200c:	cmp	r9, r3
   42010:	cmpeq	r8, r2
   42014:	bne	43178 <__assert_fail@plt+0x31d74>
   42018:	ldr	ip, [sp, #100]	; 0x64
   4201c:	add	r2, ip, #12
   42020:	cmp	fp, r2
   42024:	bhi	42314 <__assert_fail@plt+0x30f10>
   42028:	cmp	fp, r4
   4202c:	bls	4319c <__assert_fail@plt+0x31d98>
   42030:	rsb	r1, r4, fp
   42034:	sub	r3, r1, #1
   42038:	cmp	r3, #7
   4203c:	bls	42318 <__assert_fail@plt+0x30f14>
   42040:	mov	r7, #0
   42044:	mov	r6, #12
   42048:	mov	ip, #8
   4204c:	strd	r6, [sp, #80]	; 0x50
   42050:	mov	r4, r2
   42054:	mov	r7, #12
   42058:	str	ip, [sp, #96]	; 0x60
   4205c:	str	r7, [sp, #152]	; 0x98
   42060:	b	4221c <__assert_fail@plt+0x30e18>
   42064:	ldr	ip, [sp, #320]	; 0x140
   42068:	cmp	ip, #0
   4206c:	bne	43194 <__assert_fail@plt+0x31d90>
   42070:	ldr	ip, [sp, #100]	; 0x64
   42074:	cmp	ip, fp
   42078:	bcs	43414 <__assert_fail@plt+0x32010>
   4207c:	ldr	ip, [sp, #320]	; 0x140
   42080:	movw	sl, #26492	; 0x677c
   42084:	ldr	r8, [sp, #100]	; 0x64
   42088:	movt	sl, #9
   4208c:	mov	r4, ip
   42090:	str	ip, [sp, #180]	; 0xb4
   42094:	mov	r5, r8
   42098:	add	r9, r8, #4
   4209c:	cmp	fp, r9
   420a0:	bhi	4219c <__assert_fail@plt+0x30d98>
   420a4:	cmp	r8, fp
   420a8:	bcs	420bc <__assert_fail@plt+0x30cb8>
   420ac:	rsb	r1, r8, fp
   420b0:	sub	r3, r1, #1
   420b4:	cmp	r3, #7
   420b8:	bls	421a0 <__assert_fail@plt+0x30d9c>
   420bc:	mov	r4, #0
   420c0:	mov	r5, #0
   420c4:	mov	r2, #5
   420c8:	movw	r1, #38048	; 0x94a0
   420cc:	mov	r0, #0
   420d0:	movt	r1, #7
   420d4:	bl	11170 <dcgettext@plt>
   420d8:	mov	r2, r4
   420dc:	mov	r3, r5
   420e0:	mov	r4, #0
   420e4:	str	r4, [sp]
   420e8:	mov	r6, r0
   420ec:	movw	r0, #18952	; 0x4a08
   420f0:	movt	r0, #6
   420f4:	bl	389e0 <__assert_fail@plt+0x275dc>
   420f8:	ldr	r7, [sp, #140]	; 0x8c
   420fc:	ldr	r2, [r7, #8]
   42100:	mov	r1, r0
   42104:	mov	r0, r6
   42108:	bl	4b9ec <warn@@Base>
   4210c:	mov	r0, r4
   42110:	ldr	ip, [sp, #160]	; 0xa0
   42114:	ldr	r2, [sp, #276]	; 0x114
   42118:	ldr	r3, [ip]
   4211c:	cmp	r2, r3
   42120:	bne	4343c <__assert_fail@plt+0x32038>
   42124:	add	sp, sp, #284	; 0x11c
   42128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4212c:	movw	r3, #26460	; 0x675c
   42130:	movt	r3, #9
   42134:	ldr	r3, [r3]
   42138:	cmp	r3, #0
   4213c:	bne	41f1c <__assert_fail@plt+0x30b18>
   42140:	ldr	ip, [sp, #132]	; 0x84
   42144:	str	ip, [sp, #180]	; 0xb4
   42148:	movw	r3, #26488	; 0x6778
   4214c:	movt	r3, #9
   42150:	ldr	r0, [r3]
   42154:	cmp	r0, #0
   42158:	beq	43278 <__assert_fail@plt+0x31e74>
   4215c:	mov	r1, r6
   42160:	mov	r0, #10
   42164:	bl	33860 <__assert_fail@plt+0x2245c>
   42168:	mov	r1, r6
   4216c:	mov	r0, #30
   42170:	bl	33860 <__assert_fail@plt+0x2245c>
   42174:	mov	r1, r6
   42178:	mov	r0, #31
   4217c:	bl	33860 <__assert_fail@plt+0x2245c>
   42180:	mov	r1, r6
   42184:	mov	r0, #32
   42188:	bl	33860 <__assert_fail@plt+0x2245c>
   4218c:	mov	r1, r6
   42190:	mov	r0, #33	; 0x21
   42194:	bl	33860 <__assert_fail@plt+0x2245c>
   42198:	b	41f48 <__assert_fail@plt+0x30b44>
   4219c:	mov	r1, #4
   421a0:	ldr	r3, [sl]
   421a4:	mov	r0, r8
   421a8:	blx	r3
   421ac:	mvn	r2, #0
   421b0:	mov	r3, #0
   421b4:	cmp	r1, r3
   421b8:	cmpeq	r0, r2
   421bc:	bne	4223c <__assert_fail@plt+0x30e38>
   421c0:	add	r3, r8, #12
   421c4:	cmp	fp, r3
   421c8:	bhi	422f4 <__assert_fail@plt+0x30ef0>
   421cc:	cmp	fp, r9
   421d0:	bls	420bc <__assert_fail@plt+0x30cb8>
   421d4:	rsb	r1, r9, fp
   421d8:	sub	r3, r1, #1
   421dc:	cmp	r3, #7
   421e0:	bhi	420bc <__assert_fail@plt+0x30cb8>
   421e4:	b	422f8 <__assert_fail@plt+0x30ef4>
   421e8:	ldr	ip, [sp, #100]	; 0x64
   421ec:	cmp	fp, ip
   421f0:	bls	422d4 <__assert_fail@plt+0x30ed0>
   421f4:	rsb	r1, ip, fp
   421f8:	sub	r3, r1, #1
   421fc:	cmp	r3, #7
   42200:	bls	41fe4 <__assert_fail@plt+0x30be0>
   42204:	mov	ip, #4
   42208:	mov	r6, #4
   4220c:	mov	r7, #0
   42210:	str	ip, [sp, #152]	; 0x98
   42214:	strd	r6, [sp, #80]	; 0x50
   42218:	str	ip, [sp, #96]	; 0x60
   4221c:	add	r5, r4, #2
   42220:	cmp	r5, fp
   42224:	bcc	42aa4 <__assert_fail@plt+0x316a0>
   42228:	mov	ip, #0
   4222c:	mov	r8, #0
   42230:	mov	r9, #0
   42234:	str	ip, [sp, #104]	; 0x68
   42238:	b	42384 <__assert_fail@plt+0x30f80>
   4223c:	adds	r2, r0, #16
   42240:	sbc	r3, r1, #0
   42244:	cmp	r3, #0
   42248:	cmpeq	r2, #14
   4224c:	bls	432f4 <__assert_fail@plt+0x31ef0>
   42250:	add	r2, r0, #4
   42254:	mov	r3, r0
   42258:	add	r8, r8, r2
   4225c:	cmp	r3, #0
   42260:	ble	432a0 <__assert_fail@plt+0x31e9c>
   42264:	cmp	r8, r5
   42268:	bcc	432a0 <__assert_fail@plt+0x31e9c>
   4226c:	cmp	r8, fp
   42270:	add	r4, r4, #1
   42274:	bcc	42098 <__assert_fail@plt+0x30c94>
   42278:	cmp	r4, #0
   4227c:	str	r4, [sp, #180]	; 0xb4
   42280:	beq	43414 <__assert_fail@plt+0x32010>
   42284:	movw	r3, #13106	; 0x3332
   42288:	movt	r3, #819	; 0x333
   4228c:	cmp	r4, r3
   42290:	bls	432b4 <__assert_fail@plt+0x31eb0>
   42294:	ldr	r6, [sp, #136]	; 0x88
   42298:	mov	r3, #0
   4229c:	str	r3, [r6, #1580]	; 0x62c
   422a0:	mov	r2, #5
   422a4:	movw	r1, #38096	; 0x94d0
   422a8:	mov	r0, #0
   422ac:	movt	r1, #7
   422b0:	bl	11170 <dcgettext@plt>
   422b4:	ldr	r1, [sp, #180]	; 0xb4
   422b8:	bl	4b2b0 <error@@Base>
   422bc:	ldr	r6, [sp, #136]	; 0x88
   422c0:	mov	r3, #0
   422c4:	mov	r0, r3
   422c8:	str	r3, [r6, #1568]	; 0x620
   422cc:	str	r3, [r6, #1584]	; 0x630
   422d0:	b	42110 <__assert_fail@plt+0x30d0c>
   422d4:	mov	r7, #4
   422d8:	mov	r6, #4
   422dc:	str	r7, [sp, #152]	; 0x98
   422e0:	mov	r7, #0
   422e4:	strd	r6, [sp, #80]	; 0x50
   422e8:	mov	r7, #4
   422ec:	str	r7, [sp, #96]	; 0x60
   422f0:	b	4221c <__assert_fail@plt+0x30e18>
   422f4:	mov	r1, #8
   422f8:	ldr	r3, [sl]
   422fc:	mov	r0, r9
   42300:	blx	r3
   42304:	add	r3, r0, #12
   42308:	add	r8, r8, r3
   4230c:	mov	r3, r0
   42310:	b	4225c <__assert_fail@plt+0x30e58>
   42314:	mov	r1, #8
   42318:	ldr	r6, [sp, #164]	; 0xa4
   4231c:	mov	r0, r4
   42320:	mov	r4, r2
   42324:	ldr	r3, [r6]
   42328:	mov	r6, #12
   4232c:	blx	r3
   42330:	mov	ip, #8
   42334:	str	r6, [sp, #152]	; 0x98
   42338:	str	ip, [sp, #96]	; 0x60
   4233c:	mov	r8, r0
   42340:	mov	r9, r1
   42344:	mov	r0, #12
   42348:	mov	r1, #0
   4234c:	strd	r0, [sp, #80]	; 0x50
   42350:	add	r5, r4, #2
   42354:	cmp	fp, r5
   42358:	bhi	42ab4 <__assert_fail@plt+0x316b0>
   4235c:	cmp	r4, fp
   42360:	movcs	r6, #0
   42364:	strcs	r6, [sp, #104]	; 0x68
   42368:	bcs	42384 <__assert_fail@plt+0x30f80>
   4236c:	rsb	r1, r4, fp
   42370:	sub	r3, r1, #1
   42374:	cmp	r3, #7
   42378:	movhi	r7, #0
   4237c:	strhi	r7, [sp, #104]	; 0x68
   42380:	bls	42ab8 <__assert_fail@plt+0x316b4>
   42384:	ldr	r6, [sp, #320]	; 0x140
   42388:	ldr	r7, [sp, #100]	; 0x64
   4238c:	ldr	ip, [sp, #128]	; 0x80
   42390:	cmp	r6, #0
   42394:	rsb	r3, ip, r7
   42398:	asr	r7, r3, #31
   4239c:	mov	r6, r3
   423a0:	strd	r6, [sp, #64]	; 0x40
   423a4:	ldr	r7, [sp, #136]	; 0x88
   423a8:	beq	42ad0 <__assert_fail@plt+0x316cc>
   423ac:	ldr	r0, [r7, #1588]	; 0x634
   423b0:	mov	ip, #2
   423b4:	ldr	r1, [r7, #1592]	; 0x638
   423b8:	cmp	r1, #0
   423bc:	beq	432ac <__assert_fail@plt+0x31ea8>
   423c0:	add	lr, r0, ip, lsl #3
   423c4:	ldrd	r6, [sp, #64]	; 0x40
   423c8:	ldrd	r2, [lr, #8]
   423cc:	cmp	r7, r3
   423d0:	cmpeq	r6, r2
   423d4:	beq	42ae8 <__assert_fail@plt+0x316e4>
   423d8:	mov	lr, r5
   423dc:	lsl	ip, ip, #3
   423e0:	ldr	r6, [sp, #152]	; 0x98
   423e4:	ldrd	r4, [sp, #64]	; 0x40
   423e8:	b	42400 <__assert_fail@plt+0x30ffc>
   423ec:	add	r3, r0, ip
   423f0:	ldrd	r2, [r3, #8]
   423f4:	cmp	r5, r3
   423f8:	cmpeq	r4, r2
   423fc:	beq	42ae0 <__assert_fail@plt+0x316dc>
   42400:	subs	r1, r1, #1
   42404:	add	r0, r0, #104	; 0x68
   42408:	bne	423ec <__assert_fail@plt+0x30fe8>
   4240c:	mov	r5, lr
   42410:	str	r6, [sp, #152]	; 0x98
   42414:	str	r1, [sp, #76]	; 0x4c
   42418:	ldr	ip, [sp, #96]	; 0x60
   4241c:	add	r4, r5, ip
   42420:	cmp	fp, r4
   42424:	bhi	42a04 <__assert_fail@plt+0x31600>
   42428:	cmp	fp, r5
   4242c:	rsbhi	r1, r5, fp
   42430:	bhi	42a08 <__assert_fail@plt+0x31604>
   42434:	mov	r7, #0
   42438:	mov	r6, #0
   4243c:	strd	r6, [sp, #88]	; 0x58
   42440:	ldr	r7, [sp, #76]	; 0x4c
   42444:	cmp	r7, #0
   42448:	beq	42a34 <__assert_fail@plt+0x31630>
   4244c:	ldr	r7, [sp, #76]	; 0x4c
   42450:	add	r5, r4, #1
   42454:	ldr	ip, [sp, #76]	; 0x4c
   42458:	cmp	fp, r5
   4245c:	ldrd	r6, [r7, #32]
   42460:	strd	r6, [sp, #112]	; 0x70
   42464:	ldr	r7, [ip, #84]	; 0x54
   42468:	bhi	42a5c <__assert_fail@plt+0x31658>
   4246c:	cmp	fp, r4
   42470:	bls	42484 <__assert_fail@plt+0x31080>
   42474:	rsb	r1, r4, fp
   42478:	sub	r3, r1, #1
   4247c:	cmp	r3, #7
   42480:	bls	42a60 <__assert_fail@plt+0x3165c>
   42484:	mov	r3, #0
   42488:	mov	r2, #5
   4248c:	movw	r1, #38184	; 0x9528
   42490:	mov	r0, #0
   42494:	movt	r1, #7
   42498:	str	r3, [sp, #60]	; 0x3c
   4249c:	bl	11170 <dcgettext@plt>
   424a0:	ldr	r3, [sp, #60]	; 0x3c
   424a4:	ldr	r2, [sp, #96]	; 0x60
   424a8:	mov	r1, r3
   424ac:	bl	4b9ec <warn@@Base>
   424b0:	ldr	r6, [sp, #320]	; 0x140
   424b4:	ldr	ip, [sp, #96]	; 0x60
   424b8:	cmp	r6, #0
   424bc:	uxtb	ip, ip
   424c0:	str	ip, [sp, #156]	; 0x9c
   424c4:	beq	42a94 <__assert_fail@plt+0x31690>
   424c8:	add	r4, r4, #9
   424cc:	cmp	fp, r4
   424d0:	bcs	43140 <__assert_fail@plt+0x31d3c>
   424d4:	mov	r2, #0
   424d8:	mov	r3, #0
   424dc:	strd	r2, [sp, #192]	; 0xc0
   424e0:	strd	r2, [sp, #200]	; 0xc8
   424e4:	ldr	ip, [sp, #96]	; 0x60
   424e8:	add	r5, r4, ip
   424ec:	cmp	fp, r5
   424f0:	bhi	43118 <__assert_fail@plt+0x31d14>
   424f4:	cmp	fp, r4
   424f8:	rsbhi	r1, r4, fp
   424fc:	bls	42a94 <__assert_fail@plt+0x31690>
   42500:	sub	r3, r1, #1
   42504:	cmp	r3, #7
   42508:	bls	43128 <__assert_fail@plt+0x31d24>
   4250c:	mov	r2, #0
   42510:	mov	r3, #0
   42514:	strd	r2, [sp, #120]	; 0x78
   42518:	ldr	r6, [sp, #132]	; 0x84
   4251c:	cmp	r6, #0
   42520:	bne	42658 <__assert_fail@plt+0x31254>
   42524:	movw	r3, #26428	; 0x673c
   42528:	movt	r3, #9
   4252c:	ldr	r3, [r3]
   42530:	cmp	r3, #0
   42534:	bne	42658 <__assert_fail@plt+0x31254>
   42538:	movw	r3, #26460	; 0x675c
   4253c:	movt	r3, #9
   42540:	ldr	r3, [r3]
   42544:	cmp	r3, #0
   42548:	bne	42658 <__assert_fail@plt+0x31254>
   4254c:	ldr	ip, [sp, #144]	; 0x90
   42550:	ldr	r4, [ip]
   42554:	cmp	r4, #0
   42558:	beq	426fc <__assert_fail@plt+0x312f8>
   4255c:	ldr	r3, [sp, #140]	; 0x8c
   42560:	ldrd	r0, [sp, #80]	; 0x50
   42564:	ldrd	r2, [r3, #24]
   42568:	adds	r0, r0, r8
   4256c:	adc	r1, r1, r9
   42570:	strd	r2, [sp, #48]	; 0x30
   42574:	ldrd	r2, [sp, #64]	; 0x40
   42578:	adds	r0, r0, r2
   4257c:	adc	r1, r1, r3
   42580:	ldrd	r2, [sp, #48]	; 0x30
   42584:	cmp	r1, r3
   42588:	cmpeq	r0, r2
   4258c:	bhi	4334c <__assert_fail@plt+0x31f48>
   42590:	ldr	ip, [sp, #152]	; 0x98
   42594:	add	r6, ip, r8
   42598:	ldr	ip, [sp, #100]	; 0x64
   4259c:	add	ip, ip, r6
   425a0:	str	ip, [sp, #100]	; 0x64
   425a4:	cmp	fp, ip
   425a8:	bcc	4309c <__assert_fail@plt+0x31c98>
   425ac:	ldr	r6, [sp, #104]	; 0x68
   425b0:	sub	r3, r6, #2
   425b4:	cmp	r3, #2
   425b8:	bls	42af0 <__assert_fail@plt+0x316ec>
   425bc:	mov	r2, #5
   425c0:	movw	r1, #38796	; 0x978c
   425c4:	mov	r0, #0
   425c8:	movt	r1, #7
   425cc:	bl	11170 <dcgettext@plt>
   425d0:	mov	r1, #0
   425d4:	ldrd	r2, [sp, #64]	; 0x40
   425d8:	str	r1, [sp]
   425dc:	mov	r4, r0
   425e0:	movw	r0, #18952	; 0x4a08
   425e4:	movt	r0, #6
   425e8:	bl	389e0 <__assert_fail@plt+0x275dc>
   425ec:	ldr	r2, [sp, #104]	; 0x68
   425f0:	mov	r1, r0
   425f4:	mov	r0, r4
   425f8:	bl	4b9ec <warn@@Base>
   425fc:	ldr	ip, [sp, #100]	; 0x64
   42600:	ldr	r6, [sp, #108]	; 0x6c
   42604:	cmp	ip, fp
   42608:	add	r6, r6, #1
   4260c:	str	r6, [sp, #108]	; 0x6c
   42610:	bcc	41fc0 <__assert_fail@plt+0x30bbc>
   42614:	ldr	r7, [sp, #132]	; 0x84
   42618:	cmp	r7, #0
   4261c:	bne	43054 <__assert_fail@plt+0x31c50>
   42620:	movw	r3, #26428	; 0x673c
   42624:	movt	r3, #9
   42628:	ldr	r3, [r3]
   4262c:	cmp	r3, #0
   42630:	bne	43054 <__assert_fail@plt+0x31c50>
   42634:	movw	r3, #26460	; 0x675c
   42638:	movt	r3, #9
   4263c:	ldr	r3, [r3]
   42640:	cmp	r3, #0
   42644:	bne	43054 <__assert_fail@plt+0x31c50>
   42648:	mov	r0, #10
   4264c:	bl	112fc <putchar@plt>
   42650:	mov	r0, #1
   42654:	b	42110 <__assert_fail@plt+0x30d0c>
   42658:	ldr	r6, [sp, #136]	; 0x88
   4265c:	ldr	r3, [r6, #1568]	; 0x620
   42660:	cmp	r3, #0
   42664:	bne	426e0 <__assert_fail@plt+0x312dc>
   42668:	ldr	ip, [sp, #320]	; 0x140
   4266c:	cmp	ip, #0
   42670:	bne	426e0 <__assert_fail@plt+0x312dc>
   42674:	ldr	r6, [sp, #108]	; 0x6c
   42678:	ldr	r0, [sl, #1580]	; 0x62c
   4267c:	ldrd	r2, [sp, #64]	; 0x40
   42680:	add	ip, r6, r6, lsl #2
   42684:	ldr	r6, [sp, #156]	; 0x9c
   42688:	add	r1, r0, ip, lsl #4
   4268c:	strd	r2, [r1, #16]
   42690:	mov	r2, #0
   42694:	str	r6, [r0, ip, lsl #4]
   42698:	mov	r3, #0
   4269c:	ldr	ip, [sp, #96]	; 0x60
   426a0:	ldr	r6, [sp, #104]	; 0x68
   426a4:	strd	r2, [r1, #24]
   426a8:	mvn	r2, #0
   426ac:	str	ip, [r1, #4]
   426b0:	mov	r3, #0
   426b4:	ldr	ip, [sp, #320]	; 0x140
   426b8:	str	r6, [r1, #8]
   426bc:	strd	r2, [r1, #32]
   426c0:	str	ip, [r1, #48]	; 0x30
   426c4:	str	ip, [r1, #52]	; 0x34
   426c8:	str	ip, [r1, #60]	; 0x3c
   426cc:	str	ip, [r1, #56]	; 0x38
   426d0:	str	ip, [r1, #64]	; 0x40
   426d4:	str	ip, [r1, #72]	; 0x48
   426d8:	str	ip, [r1, #68]	; 0x44
   426dc:	strd	r2, [r1, #40]	; 0x28
   426e0:	ldr	r6, [sp, #132]	; 0x84
   426e4:	cmp	r6, #0
   426e8:	bne	4255c <__assert_fail@plt+0x31158>
   426ec:	ldr	ip, [sp, #144]	; 0x90
   426f0:	ldr	r4, [ip]
   426f4:	cmp	r4, #0
   426f8:	bne	4255c <__assert_fail@plt+0x31158>
   426fc:	mov	r2, #5
   42700:	movw	r1, #38248	; 0x9568
   42704:	mov	r0, r4
   42708:	movt	r1, #7
   4270c:	bl	11170 <dcgettext@plt>
   42710:	ldrd	r2, [sp, #64]	; 0x40
   42714:	str	r4, [sp]
   42718:	mov	r1, r0
   4271c:	movw	r0, #18952	; 0x4a08
   42720:	movt	r0, #6
   42724:	str	r1, [sp, #60]	; 0x3c
   42728:	bl	389e0 <__assert_fail@plt+0x275dc>
   4272c:	ldr	r1, [sp, #60]	; 0x3c
   42730:	mov	r2, r0
   42734:	mov	r0, #1
   42738:	bl	1132c <__printf_chk@plt>
   4273c:	mov	r2, #5
   42740:	mov	r0, r4
   42744:	movw	r1, #38284	; 0x958c
   42748:	movt	r1, #7
   4274c:	bl	11170 <dcgettext@plt>
   42750:	mov	r2, r8
   42754:	mov	r3, r9
   42758:	str	r4, [sp]
   4275c:	mov	r1, r0
   42760:	movw	r0, #18952	; 0x4a08
   42764:	movt	r0, #6
   42768:	str	r1, [sp, #60]	; 0x3c
   4276c:	bl	389e0 <__assert_fail@plt+0x275dc>
   42770:	ldr	r6, [sp, #96]	; 0x60
   42774:	movw	ip, #37956	; 0x9444
   42778:	movt	ip, #7
   4277c:	cmp	r6, #8
   42780:	ldr	r1, [sp, #60]	; 0x3c
   42784:	movw	r3, #37948	; 0x943c
   42788:	movt	r3, #7
   4278c:	movne	r3, ip
   42790:	mov	r2, r0
   42794:	mov	r0, #1
   42798:	bl	1132c <__printf_chk@plt>
   4279c:	mov	r2, #5
   427a0:	mov	r0, r4
   427a4:	movw	r1, #38316	; 0x95ac
   427a8:	movt	r1, #7
   427ac:	bl	11170 <dcgettext@plt>
   427b0:	ldr	r2, [sp, #104]	; 0x68
   427b4:	mov	r1, r0
   427b8:	mov	r0, #1
   427bc:	bl	1132c <__printf_chk@plt>
   427c0:	mov	r2, #5
   427c4:	mov	r0, r4
   427c8:	movw	r1, #38340	; 0x95c4
   427cc:	movt	r1, #7
   427d0:	bl	11170 <dcgettext@plt>
   427d4:	ldrd	r2, [sp, #88]	; 0x58
   427d8:	str	r4, [sp]
   427dc:	mov	r1, r0
   427e0:	movw	r0, #18952	; 0x4a08
   427e4:	movt	r0, #6
   427e8:	str	r1, [sp, #60]	; 0x3c
   427ec:	bl	389e0 <__assert_fail@plt+0x275dc>
   427f0:	ldr	r1, [sp, #60]	; 0x3c
   427f4:	mov	r2, r0
   427f8:	mov	r0, #1
   427fc:	bl	1132c <__printf_chk@plt>
   42800:	mov	r2, #5
   42804:	mov	r0, r4
   42808:	movw	r1, #38364	; 0x95dc
   4280c:	movt	r1, #7
   42810:	bl	11170 <dcgettext@plt>
   42814:	ldr	r2, [sp, #156]	; 0x9c
   42818:	mov	r1, r0
   4281c:	mov	r0, #1
   42820:	bl	1132c <__printf_chk@plt>
   42824:	ldr	ip, [sp, #320]	; 0x140
   42828:	cmp	ip, #0
   4282c:	bne	431c0 <__assert_fail@plt+0x31dbc>
   42830:	ldr	r6, [sp, #76]	; 0x4c
   42834:	cmp	r6, #0
   42838:	beq	4255c <__assert_fail@plt+0x31158>
   4283c:	mov	r2, #5
   42840:	movw	r1, #38436	; 0x9624
   42844:	mov	r0, #0
   42848:	movt	r1, #7
   4284c:	bl	11170 <dcgettext@plt>
   42850:	mov	r1, r0
   42854:	mov	r0, #1
   42858:	bl	1132c <__printf_chk@plt>
   4285c:	mov	r0, #0
   42860:	mov	r2, #5
   42864:	movw	r1, #38464	; 0x9640
   42868:	movt	r1, #7
   4286c:	mov	r4, r0
   42870:	bl	11170 <dcgettext@plt>
   42874:	ldrd	r2, [r6, #32]
   42878:	str	r4, [sp]
   4287c:	mov	r1, r0
   42880:	movw	r0, #18952	; 0x4a08
   42884:	movt	r0, #6
   42888:	str	r1, [sp, #60]	; 0x3c
   4288c:	bl	389e0 <__assert_fail@plt+0x275dc>
   42890:	ldr	r2, [r6, #84]	; 0x54
   42894:	mov	r3, r4
   42898:	str	r4, [sp]
   4289c:	mov	ip, r0
   428a0:	movw	r0, #18952	; 0x4a08
   428a4:	movt	r0, #6
   428a8:	str	ip, [sp, #56]	; 0x38
   428ac:	bl	389e0 <__assert_fail@plt+0x275dc>
   428b0:	ldr	ip, [sp, #56]	; 0x38
   428b4:	ldr	r1, [sp, #60]	; 0x3c
   428b8:	mov	r2, ip
   428bc:	mov	r3, r0
   428c0:	mov	r0, #1
   428c4:	bl	1132c <__printf_chk@plt>
   428c8:	mov	r0, r4
   428cc:	mov	r2, #5
   428d0:	movw	r1, #38508	; 0x966c
   428d4:	movt	r1, #7
   428d8:	bl	11170 <dcgettext@plt>
   428dc:	ldrd	r2, [r6, #40]	; 0x28
   428e0:	str	r4, [sp]
   428e4:	mov	r1, r0
   428e8:	movw	r0, #18952	; 0x4a08
   428ec:	movt	r0, #6
   428f0:	str	r1, [sp, #60]	; 0x3c
   428f4:	bl	389e0 <__assert_fail@plt+0x275dc>
   428f8:	ldr	r2, [r6, #88]	; 0x58
   428fc:	mov	r3, r4
   42900:	str	r4, [sp]
   42904:	mov	ip, r0
   42908:	movw	r0, #18952	; 0x4a08
   4290c:	movt	r0, #6
   42910:	str	ip, [sp, #56]	; 0x38
   42914:	bl	389e0 <__assert_fail@plt+0x275dc>
   42918:	ldr	ip, [sp, #56]	; 0x38
   4291c:	ldr	r1, [sp, #60]	; 0x3c
   42920:	mov	r2, ip
   42924:	mov	r3, r0
   42928:	mov	r0, #1
   4292c:	bl	1132c <__printf_chk@plt>
   42930:	mov	r0, r4
   42934:	mov	r2, #5
   42938:	movw	r1, #38552	; 0x9698
   4293c:	movt	r1, #7
   42940:	bl	11170 <dcgettext@plt>
   42944:	ldrd	r2, [r6, #48]	; 0x30
   42948:	str	r4, [sp]
   4294c:	mov	r1, r0
   42950:	movw	r0, #18952	; 0x4a08
   42954:	movt	r0, #6
   42958:	str	r1, [sp, #60]	; 0x3c
   4295c:	bl	389e0 <__assert_fail@plt+0x275dc>
   42960:	ldr	r2, [r6, #92]	; 0x5c
   42964:	mov	r3, r4
   42968:	str	r4, [sp]
   4296c:	mov	ip, r0
   42970:	movw	r0, #18952	; 0x4a08
   42974:	movt	r0, #6
   42978:	str	ip, [sp, #56]	; 0x38
   4297c:	bl	389e0 <__assert_fail@plt+0x275dc>
   42980:	ldr	ip, [sp, #56]	; 0x38
   42984:	ldr	r1, [sp, #60]	; 0x3c
   42988:	mov	r2, ip
   4298c:	mov	r3, r0
   42990:	mov	r0, #1
   42994:	bl	1132c <__printf_chk@plt>
   42998:	mov	r0, r4
   4299c:	mov	r2, #5
   429a0:	movw	r1, #38596	; 0x96c4
   429a4:	movt	r1, #7
   429a8:	bl	11170 <dcgettext@plt>
   429ac:	ldrd	r2, [r6, #56]	; 0x38
   429b0:	str	r4, [sp]
   429b4:	mov	r1, r0
   429b8:	movw	r0, #18952	; 0x4a08
   429bc:	movt	r0, #6
   429c0:	str	r1, [sp, #60]	; 0x3c
   429c4:	bl	389e0 <__assert_fail@plt+0x275dc>
   429c8:	ldr	r2, [r6, #96]	; 0x60
   429cc:	mov	r3, r4
   429d0:	str	r4, [sp]
   429d4:	mov	ip, r0
   429d8:	movw	r0, #18952	; 0x4a08
   429dc:	movt	r0, #6
   429e0:	str	ip, [sp, #56]	; 0x38
   429e4:	bl	389e0 <__assert_fail@plt+0x275dc>
   429e8:	ldr	ip, [sp, #56]	; 0x38
   429ec:	ldr	r1, [sp, #60]	; 0x3c
   429f0:	mov	r2, ip
   429f4:	mov	r3, r0
   429f8:	mov	r0, #1
   429fc:	bl	1132c <__printf_chk@plt>
   42a00:	b	4255c <__assert_fail@plt+0x31158>
   42a04:	ldr	r1, [sp, #96]	; 0x60
   42a08:	sub	r3, r1, #1
   42a0c:	cmp	r3, #7
   42a10:	bhi	42434 <__assert_fail@plt+0x31030>
   42a14:	ldr	r6, [sp, #164]	; 0xa4
   42a18:	mov	r0, r5
   42a1c:	ldr	r3, [r6]
   42a20:	blx	r3
   42a24:	ldr	r7, [sp, #76]	; 0x4c
   42a28:	cmp	r7, #0
   42a2c:	strd	r0, [sp, #88]	; 0x58
   42a30:	bne	4244c <__assert_fail@plt+0x31048>
   42a34:	ldr	r6, [sp, #176]	; 0xb0
   42a38:	add	r5, r4, #1
   42a3c:	ldr	ip, [sp, #148]	; 0x94
   42a40:	cmp	fp, r5
   42a44:	mov	r7, #0
   42a48:	add	r3, ip, r6
   42a4c:	mov	r6, #0
   42a50:	strd	r6, [sp, #112]	; 0x70
   42a54:	ldr	r7, [r3, #24]
   42a58:	bls	4246c <__assert_fail@plt+0x31068>
   42a5c:	mov	r1, #1
   42a60:	ldr	r6, [sp, #164]	; 0xa4
   42a64:	mov	r0, r4
   42a68:	ldr	r3, [r6]
   42a6c:	blx	r3
   42a70:	uxtb	r0, r0
   42a74:	str	r0, [sp, #156]	; 0x9c
   42a78:	sub	r3, r0, #2
   42a7c:	cmp	r3, #6
   42a80:	movhi	r3, r0
   42a84:	bhi	42488 <__assert_fail@plt+0x31084>
   42a88:	ldr	r6, [sp, #320]	; 0x140
   42a8c:	cmp	r6, #0
   42a90:	bne	424c8 <__assert_fail@plt+0x310c4>
   42a94:	mov	r0, #0
   42a98:	mov	r1, #0
   42a9c:	strd	r0, [sp, #120]	; 0x78
   42aa0:	b	42518 <__assert_fail@plt+0x31114>
   42aa4:	movw	r7, #26492	; 0x677c
   42aa8:	movt	r7, #9
   42aac:	mov	r8, #0
   42ab0:	mov	r9, #0
   42ab4:	mov	r1, #2
   42ab8:	ldr	r3, [r7]
   42abc:	mov	r0, r4
   42ac0:	blx	r3
   42ac4:	uxth	r0, r0
   42ac8:	str	r0, [sp, #104]	; 0x68
   42acc:	b	42384 <__assert_fail@plt+0x30f80>
   42ad0:	ldr	r0, [r7, #1596]	; 0x63c
   42ad4:	mov	ip, #1
   42ad8:	ldr	r1, [r7, #1600]	; 0x640
   42adc:	b	423b8 <__assert_fail@plt+0x30fb4>
   42ae0:	mov	r5, lr
   42ae4:	str	r6, [sp, #152]	; 0x98
   42ae8:	str	r0, [sp, #76]	; 0x4c
   42aec:	b	42418 <__assert_fail@plt+0x31014>
   42af0:	bl	38820 <__assert_fail@plt+0x2741c>
   42af4:	ldrd	r2, [sp, #88]	; 0x58
   42af8:	mov	r0, r7
   42afc:	mov	r1, #0
   42b00:	cmp	r3, r1
   42b04:	cmpeq	r2, r0
   42b08:	bcs	43154 <__assert_fail@plt+0x31d50>
   42b0c:	ldr	ip, [sp, #148]	; 0x94
   42b10:	ldr	r6, [sp, #176]	; 0xb0
   42b14:	ldrd	r2, [sp, #112]	; 0x70
   42b18:	add	r4, ip, r6
   42b1c:	adds	r0, r7, r2
   42b20:	adc	r1, r1, r3
   42b24:	ldrd	r2, [r4, #24]
   42b28:	cmp	r1, r3
   42b2c:	cmpeq	r0, r2
   42b30:	bhi	43248 <__assert_fail@plt+0x31e44>
   42b34:	ldr	r6, [sp, #136]	; 0x88
   42b38:	ldr	r2, [r4, #12]
   42b3c:	ldr	r3, [r6, #4]
   42b40:	cmp	r3, #0
   42b44:	beq	433d8 <__assert_fail@plt+0x31fd4>
   42b48:	ldr	r6, [sp, #100]	; 0x64
   42b4c:	cmp	r6, r5
   42b50:	bls	425fc <__assert_fail@plt+0x311f8>
   42b54:	ldr	r6, [sp, #108]	; 0x6c
   42b58:	mov	r7, #0
   42b5c:	ldr	r9, [sp, #136]	; 0x88
   42b60:	mvn	ip, #0
   42b64:	str	r7, [sp, #168]	; 0xa8
   42b68:	add	r3, r6, r6, lsl #2
   42b6c:	str	r7, [sp, #112]	; 0x70
   42b70:	str	ip, [sp, #172]	; 0xac
   42b74:	lsl	r3, r3, #4
   42b78:	str	fp, [sp, #80]	; 0x50
   42b7c:	str	r3, [sp, #120]	; 0x78
   42b80:	mov	r0, r5
   42b84:	ldr	r3, [sp, #100]	; 0x64
   42b88:	add	r1, sp, #188	; 0xbc
   42b8c:	mov	r2, #0
   42b90:	bl	3a350 <__assert_fail@plt+0x28f4c>
   42b94:	ldr	r3, [sp, #188]	; 0xbc
   42b98:	ldr	r7, [sp, #128]	; 0x80
   42b9c:	rsb	r6, r7, r5
   42ba0:	add	r5, r5, r3
   42ba4:	subs	r4, r0, #0
   42ba8:	bne	42cbc <__assert_fail@plt+0x318b8>
   42bac:	ldr	ip, [sp, #112]	; 0x70
   42bb0:	ldr	r7, [sp, #100]	; 0x64
   42bb4:	ldr	r0, [sp, #80]	; 0x50
   42bb8:	cmp	ip, #0
   42bbc:	cmpeq	r7, r0
   42bc0:	bne	42c0c <__assert_fail@plt+0x31808>
   42bc4:	cmp	r7, r5
   42bc8:	bls	43270 <__assert_fail@plt+0x31e6c>
   42bcc:	ldrb	r3, [r5]
   42bd0:	cmp	r3, #0
   42bd4:	bne	43270 <__assert_fail@plt+0x31e6c>
   42bd8:	add	r3, r5, #1
   42bdc:	mov	r0, r7
   42be0:	b	42bf4 <__assert_fail@plt+0x317f0>
   42be4:	ldrb	r1, [r2]
   42be8:	add	r3, r3, #1
   42bec:	cmp	r1, #0
   42bf0:	bne	42c00 <__assert_fail@plt+0x317fc>
   42bf4:	cmp	r3, r0
   42bf8:	mov	r2, r3
   42bfc:	bne	42be4 <__assert_fail@plt+0x317e0>
   42c00:	ldr	r7, [sp, #100]	; 0x64
   42c04:	cmp	r2, r7
   42c08:	beq	42cb4 <__assert_fail@plt+0x318b0>
   42c0c:	ldr	ip, [sp, #132]	; 0x84
   42c10:	cmp	ip, #0
   42c14:	movwne	r4, #26488	; 0x6778
   42c18:	movtne	r4, #9
   42c1c:	bne	42c7c <__assert_fail@plt+0x31878>
   42c20:	ldr	r7, [sp, #144]	; 0x90
   42c24:	movw	r4, #26488	; 0x6778
   42c28:	movt	r4, #9
   42c2c:	ldr	r3, [r7]
   42c30:	cmp	r6, r3
   42c34:	bcc	42c7c <__assert_fail@plt+0x31878>
   42c38:	ldr	ip, [sp, #148]	; 0x94
   42c3c:	ldr	r3, [ip, #2304]	; 0x900
   42c40:	cmn	r3, #1
   42c44:	beq	42c54 <__assert_fail@plt+0x31850>
   42c48:	ldr	r7, [sp, #112]	; 0x70
   42c4c:	cmp	r3, r7
   42c50:	ble	42c7c <__assert_fail@plt+0x31878>
   42c54:	mov	r2, #5
   42c58:	movw	r1, #39044	; 0x9884
   42c5c:	mov	r0, #0
   42c60:	movt	r1, #7
   42c64:	bl	11170 <dcgettext@plt>
   42c68:	ldr	r2, [sp, #112]	; 0x70
   42c6c:	mov	r3, r6
   42c70:	mov	r1, r0
   42c74:	mov	r0, #1
   42c78:	bl	1132c <__printf_chk@plt>
   42c7c:	ldr	ip, [sp, #112]	; 0x70
   42c80:	subs	ip, ip, #1
   42c84:	str	ip, [sp, #112]	; 0x70
   42c88:	bmi	42fb4 <__assert_fail@plt+0x31bb0>
   42c8c:	ldr	r3, [r4]
   42c90:	cmp	r3, #0
   42c94:	beq	42ca8 <__assert_fail@plt+0x318a4>
   42c98:	ldr	r7, [sp, #172]	; 0xac
   42c9c:	ldr	ip, [sp, #112]	; 0x70
   42ca0:	cmp	r7, ip
   42ca4:	bgt	43094 <__assert_fail@plt+0x31c90>
   42ca8:	ldr	r7, [sp, #100]	; 0x64
   42cac:	cmp	r7, r5
   42cb0:	bhi	42b80 <__assert_fail@plt+0x3177c>
   42cb4:	ldr	fp, [sp, #80]	; 0x50
   42cb8:	b	425fc <__assert_fail@plt+0x311f8>
   42cbc:	ldr	r7, [sp, #132]	; 0x84
   42cc0:	cmp	r7, #0
   42cc4:	movne	fp, #0
   42cc8:	movne	r8, #1
   42ccc:	bne	42cf0 <__assert_fail@plt+0x318ec>
   42cd0:	ldr	ip, [sp, #144]	; 0x90
   42cd4:	ldr	r3, [ip]
   42cd8:	cmp	r3, #0
   42cdc:	beq	42f3c <__assert_fail@plt+0x31b38>
   42ce0:	cmp	r6, r3
   42ce4:	bcs	42f34 <__assert_fail@plt+0x31b30>
   42ce8:	ldr	fp, [sp, #132]	; 0x84
   42cec:	mov	r8, fp
   42cf0:	ldr	r7, [r9, #4]
   42cf4:	cmp	r7, #0
   42cf8:	beq	42d14 <__assert_fail@plt+0x31910>
   42cfc:	ldr	r3, [r7]
   42d00:	cmp	r3, r4
   42d04:	beq	42d44 <__assert_fail@plt+0x31940>
   42d08:	ldr	r7, [r7, #20]
   42d0c:	cmp	r7, #0
   42d10:	bne	42cfc <__assert_fail@plt+0x318f8>
   42d14:	cmp	fp, #0
   42d18:	bne	433f8 <__assert_fail@plt+0x31ff4>
   42d1c:	mov	r2, #5
   42d20:	movw	r1, #39228	; 0x993c
   42d24:	mov	r0, #0
   42d28:	movt	r1, #7
   42d2c:	bl	11170 <dcgettext@plt>
   42d30:	mov	r1, r6
   42d34:	mov	r2, r4
   42d38:	bl	4b9ec <warn@@Base>
   42d3c:	mov	r0, #0
   42d40:	b	42110 <__assert_fail@plt+0x30d0c>
   42d44:	cmp	fp, #0
   42d48:	bne	42f94 <__assert_fail@plt+0x31b90>
   42d4c:	ldr	r3, [r7, #4]
   42d50:	cmp	r3, #17
   42d54:	beq	42f88 <__assert_fail@plt+0x31b84>
   42d58:	cmp	r3, #46	; 0x2e
   42d5c:	beq	42f78 <__assert_fail@plt+0x31b74>
   42d60:	cmp	r3, #3
   42d64:	beq	42f78 <__assert_fail@plt+0x31b74>
   42d68:	mov	r3, #0
   42d6c:	str	r3, [r9, #1576]	; 0x628
   42d70:	ldr	r4, [r7, #12]
   42d74:	cmp	r4, #0
   42d78:	beq	42f1c <__assert_fail@plt+0x31b18>
   42d7c:	ldr	r3, [r4]
   42d80:	cmp	r3, #0
   42d84:	beq	42f1c <__assert_fail@plt+0x31b18>
   42d88:	ldr	r0, [sp, #156]	; 0x9c
   42d8c:	eor	r8, r8, #1
   42d90:	ldr	r6, [sp, #132]	; 0x84
   42d94:	and	r8, r8, #1
   42d98:	mov	r1, #0
   42d9c:	str	r7, [sp, #152]	; 0x98
   42da0:	uxtb	r0, r0
   42da4:	cmp	r6, #0
   42da8:	orrne	r8, r8, #1
   42dac:	strd	r0, [sp, #88]	; 0x58
   42db0:	b	42e5c <__assert_fail@plt+0x31a58>
   42db4:	ldr	ip, [r9, #1580]	; 0x62c
   42db8:	cmp	ip, #0
   42dbc:	beq	42dd8 <__assert_fail@plt+0x319d4>
   42dc0:	ldr	r3, [sl, #1584]	; 0x630
   42dc4:	ldr	r6, [sp, #108]	; 0x6c
   42dc8:	cmp	r6, r3
   42dcc:	ldrcc	r7, [sp, #120]	; 0x78
   42dd0:	movcs	ip, #0
   42dd4:	addcc	ip, ip, r7
   42dd8:	cmp	r8, #0
   42ddc:	ldr	r6, [r4]
   42de0:	ldr	r3, [r4, #4]
   42de4:	beq	42e80 <__assert_fail@plt+0x31a7c>
   42de8:	ldrd	r0, [sp, #64]	; 0x40
   42dec:	mov	r2, r5
   42df0:	str	ip, [sp, #28]
   42df4:	mov	lr, #0
   42df8:	ldr	ip, [sp, #140]	; 0x8c
   42dfc:	strd	r0, [sp]
   42e00:	mov	r0, r6
   42e04:	ldrd	r6, [sp, #88]	; 0x58
   42e08:	mov	r1, r3
   42e0c:	str	lr, [sp, #20]
   42e10:	ldr	r3, [sp, #80]	; 0x50
   42e14:	strd	r6, [sp, #8]
   42e18:	ldr	r6, [sp, #104]	; 0x68
   42e1c:	ldr	r7, [sp, #96]	; 0x60
   42e20:	str	ip, [sp, #36]	; 0x24
   42e24:	str	r6, [sp, #24]
   42e28:	ldr	r6, [sp, #76]	; 0x4c
   42e2c:	str	r7, [sp, #16]
   42e30:	mov	r7, #1
   42e34:	str	r7, [sp, #32]
   42e38:	str	r6, [sp, #40]	; 0x28
   42e3c:	bl	3f850 <__assert_fail@plt+0x2e44c>
   42e40:	ldr	r4, [r4, #8]
   42e44:	cmp	r4, #0
   42e48:	mov	r5, r0
   42e4c:	beq	42f18 <__assert_fail@plt+0x31b14>
   42e50:	ldr	r3, [r4]
   42e54:	cmp	r3, #0
   42e58:	beq	42f18 <__assert_fail@plt+0x31b14>
   42e5c:	cmp	fp, #0
   42e60:	beq	42db4 <__assert_fail@plt+0x319b0>
   42e64:	ldr	r7, [sp, #128]	; 0x80
   42e68:	movw	r1, #39312	; 0x9990
   42e6c:	mov	r0, #1
   42e70:	movt	r1, #7
   42e74:	rsb	r2, r7, r5
   42e78:	bl	1132c <__printf_chk@plt>
   42e7c:	b	42db4 <__assert_fail@plt+0x319b0>
   42e80:	mov	r0, r6
   42e84:	str	r3, [sp, #60]	; 0x3c
   42e88:	str	ip, [sp, #56]	; 0x38
   42e8c:	bl	3a010 <__assert_fail@plt+0x28c0c>
   42e90:	movw	r1, #39324	; 0x999c
   42e94:	movt	r1, #7
   42e98:	mov	r7, #0
   42e9c:	mov	r2, r0
   42ea0:	mov	r0, #1
   42ea4:	bl	1132c <__printf_chk@plt>
   42ea8:	ldrd	r0, [sp, #64]	; 0x40
   42eac:	ldr	ip, [sp, #56]	; 0x38
   42eb0:	mov	r2, r5
   42eb4:	ldr	r3, [sp, #60]	; 0x3c
   42eb8:	strd	r0, [sp]
   42ebc:	ldrd	r0, [sp, #88]	; 0x58
   42ec0:	str	r7, [sp, #20]
   42ec4:	str	ip, [sp, #28]
   42ec8:	strd	r0, [sp, #8]
   42ecc:	mov	r0, r6
   42ed0:	ldr	r6, [sp, #96]	; 0x60
   42ed4:	mov	r1, r3
   42ed8:	ldr	ip, [sp, #76]	; 0x4c
   42edc:	ldr	r7, [sp, #140]	; 0x8c
   42ee0:	str	r6, [sp, #16]
   42ee4:	ldr	r6, [sp, #104]	; 0x68
   42ee8:	ldr	r3, [sp, #80]	; 0x50
   42eec:	str	ip, [sp, #40]	; 0x28
   42ef0:	str	r6, [sp, #24]
   42ef4:	str	r8, [sp, #32]
   42ef8:	str	r7, [sp, #36]	; 0x24
   42efc:	bl	3f850 <__assert_fail@plt+0x2e44c>
   42f00:	mov	r5, r0
   42f04:	mov	r0, #10
   42f08:	bl	112fc <putchar@plt>
   42f0c:	ldr	r4, [r4, #8]
   42f10:	cmp	r4, #0
   42f14:	bne	42e50 <__assert_fail@plt+0x31a4c>
   42f18:	ldr	r7, [sp, #152]	; 0x98
   42f1c:	ldr	r3, [r7, #8]
   42f20:	cmp	r3, #0
   42f24:	ldrne	r6, [sp, #112]	; 0x70
   42f28:	addne	r6, r6, #1
   42f2c:	strne	r6, [sp, #112]	; 0x70
   42f30:	b	42ca8 <__assert_fail@plt+0x318a4>
   42f34:	ldreq	r7, [sp, #112]	; 0x70
   42f38:	streq	r7, [sp, #172]	; 0xac
   42f3c:	ldr	ip, [sp, #148]	; 0x94
   42f40:	ldr	r3, [ip, #2304]	; 0x900
   42f44:	cmn	r3, #1
   42f48:	beq	43014 <__assert_fail@plt+0x31c10>
   42f4c:	ldr	r7, [sp, #112]	; 0x70
   42f50:	cmp	r3, r7
   42f54:	bgt	43014 <__assert_fail@plt+0x31c10>
   42f58:	ldr	ip, [sp, #168]	; 0xa8
   42f5c:	cmp	ip, r3
   42f60:	blt	430e0 <__assert_fail@plt+0x31cdc>
   42f64:	ldr	r7, [sp, #112]	; 0x70
   42f68:	mov	fp, #0
   42f6c:	mov	r8, fp
   42f70:	str	r7, [sp, #168]	; 0xa8
   42f74:	b	42cf0 <__assert_fail@plt+0x318ec>
   42f78:	mov	r3, #0
   42f7c:	str	r3, [r9, #1576]	; 0x628
   42f80:	str	r3, [r9, #1572]	; 0x624
   42f84:	b	42d70 <__assert_fail@plt+0x3196c>
   42f88:	mov	r3, #1
   42f8c:	str	r3, [r9, #1576]	; 0x628
   42f90:	b	42d70 <__assert_fail@plt+0x3196c>
   42f94:	ldr	r0, [r7, #4]
   42f98:	bl	39fb0 <__assert_fail@plt+0x28bac>
   42f9c:	movw	r1, #39304	; 0x9988
   42fa0:	movt	r1, #7
   42fa4:	mov	r2, r0
   42fa8:	mov	r0, #1
   42fac:	bl	1132c <__printf_chk@plt>
   42fb0:	b	42d4c <__assert_fail@plt+0x31948>
   42fb4:	ldr	r3, [r9, #1604]	; 0x644
   42fb8:	cmp	r3, #2
   42fbc:	bhi	42c8c <__assert_fail@plt+0x31888>
   42fc0:	mov	r2, #5
   42fc4:	movw	r1, #39076	; 0x98a4
   42fc8:	mov	r0, #0
   42fcc:	movt	r1, #7
   42fd0:	bl	11170 <dcgettext@plt>
   42fd4:	mov	r1, r6
   42fd8:	ldr	r6, [sp, #140]	; 0x8c
   42fdc:	ldr	r2, [r6, #8]
   42fe0:	bl	4b9ec <warn@@Base>
   42fe4:	ldr	r3, [sl, #1604]	; 0x644
   42fe8:	add	r3, r3, #1
   42fec:	str	r3, [sl, #1604]	; 0x644
   42ff0:	cmp	r3, #3
   42ff4:	bne	42c8c <__assert_fail@plt+0x31888>
   42ff8:	mov	r2, #5
   42ffc:	movw	r1, #39144	; 0x98e8
   43000:	mov	r0, #0
   43004:	movt	r1, #7
   43008:	bl	11170 <dcgettext@plt>
   4300c:	bl	4b9ec <warn@@Base>
   43010:	b	42c8c <__assert_fail@plt+0x31888>
   43014:	mov	r2, #5
   43018:	movw	r1, #39336	; 0x99a8
   4301c:	mov	r0, #0
   43020:	movt	r1, #7
   43024:	bl	11170 <dcgettext@plt>
   43028:	str	r4, [sp]
   4302c:	ldr	r2, [sp, #112]	; 0x70
   43030:	mov	r3, r6
   43034:	mov	r1, r0
   43038:	mov	r0, #1
   4303c:	mov	fp, r0
   43040:	bl	1132c <__printf_chk@plt>
   43044:	ldr	r7, [sp, #112]	; 0x70
   43048:	mov	r8, fp
   4304c:	str	r7, [sp, #168]	; 0xa8
   43050:	b	42cf0 <__assert_fail@plt+0x318ec>
   43054:	movw	r3, #24696	; 0x6078
   43058:	movt	r3, #9
   4305c:	ldr	r2, [r3, #1568]	; 0x620
   43060:	cmp	r2, #0
   43064:	bne	43088 <__assert_fail@plt+0x31c84>
   43068:	ldr	ip, [sp, #320]	; 0x140
   4306c:	cmp	ip, #0
   43070:	bne	43088 <__assert_fail@plt+0x31c84>
   43074:	ldr	r2, [r3, #1584]	; 0x630
   43078:	ldr	r6, [sp, #180]	; 0xb4
   4307c:	cmp	r2, r6
   43080:	strls	r2, [r3, #1568]	; 0x620
   43084:	strhi	r6, [r3, #1568]	; 0x620
   43088:	ldr	r7, [sp, #132]	; 0x84
   4308c:	cmp	r7, #0
   43090:	beq	42648 <__assert_fail@plt+0x31244>
   43094:	mov	r0, #1
   43098:	b	42110 <__assert_fail@plt+0x30d0c>
   4309c:	mov	r2, #5
   430a0:	movw	r1, #38732	; 0x974c
   430a4:	mov	r0, #0
   430a8:	movt	r1, #7
   430ac:	bl	11170 <dcgettext@plt>
   430b0:	mov	r3, #0
   430b4:	str	r3, [sp]
   430b8:	ldrd	r2, [sp, #64]	; 0x40
   430bc:	str	fp, [sp, #100]	; 0x64
   430c0:	mov	r4, r0
   430c4:	movw	r0, #18952	; 0x4a08
   430c8:	movt	r0, #6
   430cc:	bl	389e0 <__assert_fail@plt+0x275dc>
   430d0:	mov	r1, r0
   430d4:	mov	r0, r4
   430d8:	bl	4b9ec <warn@@Base>
   430dc:	b	425ac <__assert_fail@plt+0x311a8>
   430e0:	mov	r2, #5
   430e4:	movw	r1, #39208	; 0x9928
   430e8:	mov	r0, #0
   430ec:	movt	r1, #7
   430f0:	bl	11170 <dcgettext@plt>
   430f4:	mov	fp, #0
   430f8:	ldr	r2, [sp, #112]	; 0x70
   430fc:	mov	r3, r6
   43100:	mov	r8, fp
   43104:	mov	r1, r0
   43108:	mov	r0, #1
   4310c:	bl	1132c <__printf_chk@plt>
   43110:	str	r7, [sp, #168]	; 0xa8
   43114:	b	42cf0 <__assert_fail@plt+0x318ec>
   43118:	ldr	r1, [sp, #96]	; 0x60
   4311c:	sub	r3, r1, #1
   43120:	cmp	r3, #7
   43124:	bhi	4250c <__assert_fail@plt+0x31108>
   43128:	ldr	r6, [sp, #164]	; 0xa4
   4312c:	mov	r0, r4
   43130:	ldr	r3, [r6]
   43134:	blx	r3
   43138:	strd	r0, [sp, #120]	; 0x78
   4313c:	b	42518 <__assert_fail@plt+0x31114>
   43140:	mov	r0, r5
   43144:	add	r1, sp, #192	; 0xc0
   43148:	add	r2, sp, #200	; 0xc8
   4314c:	bl	4bfa4 <warn@@Base+0x5b8>
   43150:	b	424e4 <__assert_fail@plt+0x310e0>
   43154:	mov	r2, #5
   43158:	movw	r1, #38868	; 0x97d4
   4315c:	mov	r0, #0
   43160:	movt	r1, #7
   43164:	bl	11170 <dcgettext@plt>
   43168:	ldr	r1, [sp, #88]	; 0x58
   4316c:	mov	r2, r7
   43170:	bl	4b9ec <warn@@Base>
   43174:	b	42b48 <__assert_fail@plt+0x31744>
   43178:	mov	r6, #4
   4317c:	mov	r0, #4
   43180:	mov	r1, #0
   43184:	str	r6, [sp, #152]	; 0x98
   43188:	strd	r0, [sp, #80]	; 0x50
   4318c:	str	r6, [sp, #96]	; 0x60
   43190:	b	42350 <__assert_fail@plt+0x30f4c>
   43194:	str	r3, [sp, #180]	; 0xb4
   43198:	b	41f3c <__assert_fail@plt+0x30b38>
   4319c:	mov	r7, #0
   431a0:	mov	r6, #12
   431a4:	mov	ip, #8
   431a8:	strd	r6, [sp, #80]	; 0x50
   431ac:	mov	r4, r2
   431b0:	mov	r7, #12
   431b4:	str	ip, [sp, #96]	; 0x60
   431b8:	str	r7, [sp, #152]	; 0x98
   431bc:	b	4221c <__assert_fail@plt+0x30e18>
   431c0:	mov	r0, r4
   431c4:	mov	r2, #5
   431c8:	movw	r1, #38388	; 0x95f4
   431cc:	movt	r1, #7
   431d0:	bl	11170 <dcgettext@plt>
   431d4:	add	r3, sp, #212	; 0xd4
   431d8:	str	r3, [sp]
   431dc:	ldrd	r2, [sp, #200]	; 0xc8
   431e0:	mov	ip, r0
   431e4:	ldrd	r0, [sp, #192]	; 0xc0
   431e8:	str	ip, [sp, #56]	; 0x38
   431ec:	bl	3a2ac <__assert_fail@plt+0x28ea8>
   431f0:	ldr	ip, [sp, #56]	; 0x38
   431f4:	mov	r1, ip
   431f8:	mov	r2, r0
   431fc:	mov	r0, #1
   43200:	bl	1132c <__printf_chk@plt>
   43204:	mov	r0, r4
   43208:	mov	r2, #5
   4320c:	movw	r1, #38412	; 0x960c
   43210:	movt	r1, #7
   43214:	bl	11170 <dcgettext@plt>
   43218:	ldrd	r2, [sp, #120]	; 0x78
   4321c:	str	r4, [sp]
   43220:	mov	r1, r0
   43224:	movw	r0, #18952	; 0x4a08
   43228:	movt	r0, #6
   4322c:	str	r1, [sp, #60]	; 0x3c
   43230:	bl	389e0 <__assert_fail@plt+0x275dc>
   43234:	ldr	r1, [sp, #60]	; 0x3c
   43238:	mov	r2, r0
   4323c:	mov	r0, #1
   43240:	bl	1132c <__printf_chk@plt>
   43244:	b	42830 <__assert_fail@plt+0x3142c>
   43248:	mov	r2, #5
   4324c:	movw	r1, #38956	; 0x982c
   43250:	mov	r0, #0
   43254:	movt	r1, #7
   43258:	bl	11170 <dcgettext@plt>
   4325c:	ldr	r3, [sp, #112]	; 0x70
   43260:	ldr	r2, [r4, #24]
   43264:	add	r1, r7, r3
   43268:	bl	4b9ec <warn@@Base>
   4326c:	b	42b48 <__assert_fail@plt+0x31744>
   43270:	mov	r2, r5
   43274:	b	42c00 <__assert_fail@plt+0x317fc>
   43278:	mov	r2, #5
   4327c:	movw	r1, #28592	; 0x6fb0
   43280:	movt	r1, #7
   43284:	bl	11170 <dcgettext@plt>
   43288:	ldr	ip, [sp, #140]	; 0x8c
   4328c:	ldr	r2, [ip, #8]
   43290:	mov	r1, r0
   43294:	mov	r0, #1
   43298:	bl	1132c <__printf_chk@plt>
   4329c:	b	4215c <__assert_fail@plt+0x30d58>
   432a0:	mov	r4, r0
   432a4:	mov	r5, r1
   432a8:	b	420c4 <__assert_fail@plt+0x30cc0>
   432ac:	str	r1, [sp, #76]	; 0x4c
   432b0:	b	42418 <__assert_fail@plt+0x31014>
   432b4:	add	r5, r4, r4, lsl #2
   432b8:	movw	r4, #24696	; 0x6078
   432bc:	movt	r4, #9
   432c0:	lsl	r5, r5, #4
   432c4:	mov	r0, r5
   432c8:	bl	4eba0 <warn@@Base+0x31b4>
   432cc:	ldr	ip, [sp, #136]	; 0x88
   432d0:	cmp	r0, #0
   432d4:	str	r0, [ip, #1580]	; 0x62c
   432d8:	beq	422a0 <__assert_fail@plt+0x30e9c>
   432dc:	mov	r2, r5
   432e0:	mov	r1, #0
   432e4:	bl	112f0 <memset@plt>
   432e8:	ldr	ip, [sp, #180]	; 0xb4
   432ec:	str	ip, [r4, #1584]	; 0x630
   432f0:	b	41f3c <__assert_fail@plt+0x30b38>
   432f4:	mov	r4, r0
   432f8:	mov	r5, r1
   432fc:	mov	r2, #5
   43300:	movw	r1, #37996	; 0x946c
   43304:	mov	r0, #0
   43308:	movt	r1, #7
   4330c:	bl	11170 <dcgettext@plt>
   43310:	mov	r2, r4
   43314:	mov	r3, r5
   43318:	mov	r4, #0
   4331c:	str	r4, [sp]
   43320:	mov	r6, r0
   43324:	movw	r0, #18952	; 0x4a08
   43328:	movt	r0, #6
   4332c:	bl	389e0 <__assert_fail@plt+0x275dc>
   43330:	mov	r1, r0
   43334:	mov	r0, r6
   43338:	ldr	r6, [sp, #140]	; 0x8c
   4333c:	ldr	r2, [r6, #8]
   43340:	bl	4b9ec <warn@@Base>
   43344:	mov	r0, r4
   43348:	b	42110 <__assert_fail@plt+0x30d0c>
   4334c:	mov	r2, #5
   43350:	movw	r1, #38640	; 0x96f0
   43354:	mov	r0, #0
   43358:	movt	r1, #7
   4335c:	bl	11170 <dcgettext@plt>
   43360:	ldr	r6, [sp, #108]	; 0x6c
   43364:	ldrd	r2, [sp, #64]	; 0x40
   43368:	mov	r5, #0
   4336c:	str	r5, [sp]
   43370:	str	r6, [sp, #180]	; 0xb4
   43374:	mov	r4, r0
   43378:	movw	r0, #18952	; 0x4a08
   4337c:	movt	r0, #6
   43380:	bl	389e0 <__assert_fail@plt+0x275dc>
   43384:	mov	r2, r8
   43388:	str	r5, [sp]
   4338c:	mov	r3, r9
   43390:	mov	r6, r0
   43394:	movw	r0, #18952	; 0x4a08
   43398:	movt	r0, #6
   4339c:	bl	389e0 <__assert_fail@plt+0x275dc>
   433a0:	mov	r1, r6
   433a4:	mov	r2, r0
   433a8:	mov	r0, r4
   433ac:	bl	4b9ec <warn@@Base>
   433b0:	b	42614 <__assert_fail@plt+0x31210>
   433b4:	mov	r2, #5
   433b8:	movw	r1, #38152	; 0x9508
   433bc:	mov	r0, r5
   433c0:	movt	r1, #7
   433c4:	bl	11170 <dcgettext@plt>
   433c8:	ldr	r1, [r4, #8]
   433cc:	bl	4b9ec <warn@@Base>
   433d0:	mov	r0, r5
   433d4:	b	42110 <__assert_fail@plt+0x30d0c>
   433d8:	ldr	lr, [sp, #112]	; 0x70
   433dc:	ldr	ip, [sp, #88]	; 0x58
   433e0:	add	r1, r7, lr
   433e4:	add	r0, lr, ip
   433e8:	add	r1, r2, r1
   433ec:	add	r0, r2, r0
   433f0:	bl	3a47c <__assert_fail@plt+0x29078>
   433f4:	b	42b48 <__assert_fail@plt+0x31744>
   433f8:	mov	r0, #10
   433fc:	bl	112fc <putchar@plt>
   43400:	movw	r3, #16696	; 0x4138
   43404:	movt	r3, #9
   43408:	ldr	r0, [r3]
   4340c:	bl	11104 <fflush@plt>
   43410:	b	42d1c <__assert_fail@plt+0x31918>
   43414:	mov	r2, #5
   43418:	movw	r1, #37964	; 0x944c
   4341c:	mov	r0, #0
   43420:	movt	r1, #7
   43424:	bl	11170 <dcgettext@plt>
   43428:	ldr	r6, [sp, #140]	; 0x8c
   4342c:	ldr	r1, [r6, #8]
   43430:	bl	4b2b0 <error@@Base>
   43434:	mov	r0, #0
   43438:	b	42110 <__assert_fail@plt+0x30d0c>
   4343c:	bl	1117c <__stack_chk_fail@plt>
   43440:	push	{lr}		; (str lr, [sp, #-4]!)
   43444:	sub	sp, sp, #12
   43448:	mov	ip, #0
   4344c:	ldr	r2, [r0, #32]
   43450:	mov	r3, ip
   43454:	str	ip, [sp]
   43458:	bl	41ec0 <__assert_fail@plt+0x30abc>
   4345c:	add	sp, sp, #12
   43460:	pop	{pc}		; (ldr pc, [sp], #4)
   43464:	push	{lr}		; (str lr, [sp, #-4]!)
   43468:	sub	sp, sp, #12
   4346c:	ldr	r2, [r0, #32]
   43470:	mov	ip, #1
   43474:	mov	r3, #0
   43478:	str	ip, [sp]
   4347c:	bl	41ec0 <__assert_fail@plt+0x30abc>
   43480:	add	sp, sp, #12
   43484:	pop	{pc}		; (ldr pc, [sp], #4)
   43488:	push	{lr}		; (str lr, [sp, #-4]!)
   4348c:	sub	sp, sp, #12
   43490:	mov	ip, #0
   43494:	ldr	r2, [r0, #32]
   43498:	mov	r3, ip
   4349c:	str	ip, [sp]
   434a0:	bl	41ec0 <__assert_fail@plt+0x30abc>
   434a4:	add	sp, sp, #12
   434a8:	pop	{pc}		; (ldr pc, [sp], #4)
   434ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   434b0:	sub	sp, sp, #1168	; 0x490
   434b4:	sub	sp, sp, #12
   434b8:	movw	r4, #16680	; 0x4128
   434bc:	movt	r4, #9
   434c0:	str	r4, [sp, #108]	; 0x6c
   434c4:	mov	r4, r1
   434c8:	str	r0, [sp, #120]	; 0x78
   434cc:	mov	r0, #10
   434d0:	ldr	r5, [sp, #108]	; 0x6c
   434d4:	ldr	ip, [sp, #120]	; 0x78
   434d8:	ldr	r2, [r5]
   434dc:	ldr	r6, [ip, #12]
   434e0:	ldr	r3, [ip, #24]
   434e4:	str	r2, [sp, #1172]	; 0x494
   434e8:	add	fp, r6, r3
   434ec:	bl	33860 <__assert_fail@plt+0x2245c>
   434f0:	mov	r1, r4
   434f4:	mov	r0, #4
   434f8:	bl	33860 <__assert_fail@plt+0x2245c>
   434fc:	mov	r2, #5
   43500:	movw	r1, #28592	; 0x6fb0
   43504:	mov	r0, #0
   43508:	movt	r1, #7
   4350c:	bl	11170 <dcgettext@plt>
   43510:	ldr	r4, [sp, #120]	; 0x78
   43514:	ldr	r2, [r4, #8]
   43518:	mov	r1, r0
   4351c:	mov	r0, #1
   43520:	bl	1132c <__printf_chk@plt>
   43524:	cmp	r6, fp
   43528:	bcs	435a8 <__assert_fail@plt+0x321a4>
   4352c:	movw	r8, #26492	; 0x677c
   43530:	movt	r8, #9
   43534:	mov	r9, fp
   43538:	str	r6, [sp, #124]	; 0x7c
   4353c:	mov	r7, r8
   43540:	add	r4, r6, #2
   43544:	ldr	ip, [sp, #124]	; 0x7c
   43548:	cmp	r9, r4
   4354c:	rsb	r5, ip, r6
   43550:	bhi	435b0 <__assert_fail@plt+0x321ac>
   43554:	cmp	r9, r6
   43558:	bhi	43888 <__assert_fail@plt+0x32484>
   4355c:	mov	r2, #5
   43560:	movw	r1, #39372	; 0x99cc
   43564:	mov	r0, #0
   43568:	movt	r1, #7
   4356c:	bl	11170 <dcgettext@plt>
   43570:	ldr	r4, [sp, #120]	; 0x78
   43574:	ldr	r1, [r4, #8]
   43578:	bl	4b2b0 <error@@Base>
   4357c:	mov	r0, #0
   43580:	ldr	r4, [sp, #108]	; 0x6c
   43584:	ldr	r2, [sp, #1172]	; 0x494
   43588:	ldr	r3, [r4]
   4358c:	cmp	r2, r3
   43590:	bne	444ec <__assert_fail@plt+0x330e8>
   43594:	add	sp, sp, #1168	; 0x490
   43598:	add	sp, sp, #12
   4359c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   435a0:	mov	r0, #10
   435a4:	bl	112fc <putchar@plt>
   435a8:	mov	r0, #1
   435ac:	b	43580 <__assert_fail@plt+0x3217c>
   435b0:	mov	r1, #2
   435b4:	ldr	r3, [r7]
   435b8:	mov	r0, r6
   435bc:	blx	r3
   435c0:	cmp	r0, #4
   435c4:	bne	4355c <__assert_fail@plt+0x32158>
   435c8:	add	r6, r6, #3
   435cc:	cmp	r9, r6
   435d0:	bhi	436d0 <__assert_fail@plt+0x322cc>
   435d4:	cmp	r9, r4
   435d8:	bhi	438bc <__assert_fail@plt+0x324b8>
   435dc:	mov	r4, #0
   435e0:	str	r4, [sp, #104]	; 0x68
   435e4:	mov	ip, #4
   435e8:	str	ip, [sp, #96]	; 0x60
   435ec:	mov	r2, #5
   435f0:	movw	r1, #32796	; 0x801c
   435f4:	mov	r0, #0
   435f8:	movt	r1, #7
   435fc:	bl	11170 <dcgettext@plt>
   43600:	mov	r2, r5
   43604:	mov	r1, r0
   43608:	mov	r0, #1
   4360c:	bl	1132c <__printf_chk@plt>
   43610:	mov	r2, #5
   43614:	movw	r1, #39436	; 0x9a0c
   43618:	mov	r0, #0
   4361c:	movt	r1, #7
   43620:	bl	11170 <dcgettext@plt>
   43624:	mov	r2, #4
   43628:	mov	r1, r0
   4362c:	mov	r0, #1
   43630:	bl	1132c <__printf_chk@plt>
   43634:	mov	r2, #5
   43638:	movw	r1, #39472	; 0x9a30
   4363c:	mov	r0, #0
   43640:	movt	r1, #7
   43644:	bl	11170 <dcgettext@plt>
   43648:	ldr	r2, [sp, #96]	; 0x60
   4364c:	mov	r1, r0
   43650:	mov	r0, #1
   43654:	bl	1132c <__printf_chk@plt>
   43658:	ldr	r5, [sp, #104]	; 0x68
   4365c:	cmp	r5, #0
   43660:	beq	43700 <__assert_fail@plt+0x322fc>
   43664:	ldr	ip, [sp, #96]	; 0x60
   43668:	add	r5, r6, ip
   4366c:	cmp	r9, r5
   43670:	bls	4389c <__assert_fail@plt+0x32498>
   43674:	ldr	r1, [sp, #96]	; 0x60
   43678:	sub	r3, r1, #1
   4367c:	cmp	r3, #7
   43680:	bls	43a48 <__assert_fail@plt+0x32644>
   43684:	mov	r6, #0
   43688:	mov	r2, #0
   4368c:	mov	r3, #0
   43690:	strd	r2, [sp, #112]	; 0x70
   43694:	mov	r2, #5
   43698:	movw	r1, #39508	; 0x9a54
   4369c:	mov	r0, #0
   436a0:	movt	r1, #7
   436a4:	bl	11170 <dcgettext@plt>
   436a8:	mov	r2, r6
   436ac:	mov	r6, r5
   436b0:	mov	r1, r0
   436b4:	mov	r0, #1
   436b8:	bl	1132c <__printf_chk@plt>
   436bc:	cmp	r4, #0
   436c0:	bne	43714 <__assert_fail@plt+0x32310>
   436c4:	mov	fp, r6
   436c8:	str	r4, [sp, #100]	; 0x64
   436cc:	b	43a68 <__assert_fail@plt+0x32664>
   436d0:	mov	r1, #1
   436d4:	mov	r0, r4
   436d8:	ldr	r3, [r7]
   436dc:	blx	r3
   436e0:	tst	r0, #1
   436e4:	beq	444f0 <__assert_fail@plt+0x330ec>
   436e8:	and	ip, r0, #2
   436ec:	and	r4, r0, #4
   436f0:	str	ip, [sp, #104]	; 0x68
   436f4:	mov	ip, #8
   436f8:	str	ip, [sp, #96]	; 0x60
   436fc:	b	435ec <__assert_fail@plt+0x321e8>
   43700:	cmp	r4, #0
   43704:	mov	r0, #0
   43708:	mov	r1, #0
   4370c:	strd	r0, [sp, #112]	; 0x70
   43710:	beq	436c4 <__assert_fail@plt+0x322c0>
   43714:	add	fp, r6, #1
   43718:	cmp	r9, fp
   4371c:	bhi	43760 <__assert_fail@plt+0x3235c>
   43720:	cmp	r6, r9
   43724:	bcc	438d0 <__assert_fail@plt+0x324cc>
   43728:	mov	r1, #0
   4372c:	add	r0, sp, #148	; 0x94
   43730:	mov	r2, #1024	; 0x400
   43734:	bl	112f0 <memset@plt>
   43738:	mov	r0, #10
   4373c:	bl	112fc <putchar@plt>
   43740:	mov	r2, #5
   43744:	movw	r1, #39692	; 0x9b0c
   43748:	mov	r0, #0
   4374c:	movt	r1, #7
   43750:	bl	11170 <dcgettext@plt>
   43754:	bl	4b2b0 <error@@Base>
   43758:	mov	r0, #0
   4375c:	b	43580 <__assert_fail@plt+0x3217c>
   43760:	mov	r1, #1
   43764:	ldr	r3, [r7]
   43768:	mov	r0, r6
   4376c:	blx	r3
   43770:	mov	r1, #0
   43774:	mov	r2, #1024	; 0x400
   43778:	str	r0, [sp, #88]	; 0x58
   4377c:	add	r0, sp, #148	; 0x94
   43780:	bl	112f0 <memset@plt>
   43784:	ldr	r4, [sp, #88]	; 0x58
   43788:	cmp	r4, #0
   4378c:	beq	43a60 <__assert_fail@plt+0x3265c>
   43790:	mov	r2, #5
   43794:	movw	r1, #39548	; 0x9a7c
   43798:	mov	r0, #0
   4379c:	movt	r1, #7
   437a0:	bl	11170 <dcgettext@plt>
   437a4:	mov	r8, fp
   437a8:	movw	r5, #556	; 0x22c
   437ac:	add	r4, sp, #140	; 0x8c
   437b0:	movt	r5, #6
   437b4:	mov	r1, r0
   437b8:	mov	r0, #1
   437bc:	bl	1132c <__printf_chk@plt>
   437c0:	movw	ip, #28620	; 0x6fcc
   437c4:	movt	ip, #7
   437c8:	str	r5, [sp, #64]	; 0x40
   437cc:	str	r4, [sp, #128]	; 0x80
   437d0:	mov	r5, #0
   437d4:	mov	fp, ip
   437d8:	str	r5, [sp, #80]	; 0x50
   437dc:	str	r7, [sp, #100]	; 0x64
   437e0:	add	r5, r8, #1
   437e4:	cmp	r9, r5
   437e8:	bhi	438e4 <__assert_fail@plt+0x324e0>
   437ec:	cmp	r9, r8
   437f0:	bls	43804 <__assert_fail@plt+0x32400>
   437f4:	rsb	r1, r8, r9
   437f8:	sub	r3, r1, #1
   437fc:	cmp	r3, #7
   43800:	bls	438e8 <__assert_fail@plt+0x324e4>
   43804:	add	ip, sp, #148	; 0x94
   43808:	mov	r4, #0
   4380c:	mov	r0, r5
   43810:	ldr	r1, [sp, #128]	; 0x80
   43814:	mov	r2, #0
   43818:	mov	r3, r9
   4381c:	str	r5, [ip]
   43820:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43824:	ldr	r8, [sp, #140]	; 0x8c
   43828:	add	r8, r5, r8
   4382c:	strd	r0, [sp, #56]	; 0x38
   43830:	orrs	r1, r0, r1
   43834:	bne	43908 <__assert_fail@plt+0x32504>
   43838:	mov	r2, #5
   4383c:	movw	r1, #39580	; 0x9a9c
   43840:	mov	r0, #0
   43844:	movt	r1, #7
   43848:	bl	11170 <dcgettext@plt>
   4384c:	mov	r2, r4
   43850:	mov	r1, r0
   43854:	mov	r0, #1
   43858:	bl	1132c <__printf_chk@plt>
   4385c:	ldr	r4, [sp, #80]	; 0x50
   43860:	ldr	r5, [sp, #88]	; 0x58
   43864:	add	r4, r4, #1
   43868:	str	r4, [sp, #80]	; 0x50
   4386c:	cmp	r5, r4
   43870:	bhi	437e0 <__assert_fail@plt+0x323dc>
   43874:	ldr	r7, [sp, #100]	; 0x64
   43878:	add	r4, sp, #148	; 0x94
   4387c:	mov	fp, r8
   43880:	str	r4, [sp, #100]	; 0x64
   43884:	b	43a68 <__assert_fail@plt+0x32664>
   43888:	rsb	r1, r6, r9
   4388c:	sub	r3, r1, #1
   43890:	cmp	r3, #7
   43894:	bhi	4355c <__assert_fail@plt+0x32158>
   43898:	b	435b4 <__assert_fail@plt+0x321b0>
   4389c:	cmp	r9, r6
   438a0:	rsbhi	r1, r6, r9
   438a4:	bhi	43678 <__assert_fail@plt+0x32274>
   438a8:	mov	r0, #0
   438ac:	mov	r1, #0
   438b0:	mov	r6, #0
   438b4:	strd	r0, [sp, #112]	; 0x70
   438b8:	b	43694 <__assert_fail@plt+0x32290>
   438bc:	rsb	r1, r4, r9
   438c0:	sub	r3, r1, #1
   438c4:	cmp	r3, #7
   438c8:	bhi	435dc <__assert_fail@plt+0x321d8>
   438cc:	b	436d4 <__assert_fail@plt+0x322d0>
   438d0:	rsb	r1, r6, r9
   438d4:	sub	r3, r1, #1
   438d8:	cmp	r3, #7
   438dc:	bhi	43728 <__assert_fail@plt+0x32324>
   438e0:	b	43764 <__assert_fail@plt+0x32360>
   438e4:	mov	r1, #1
   438e8:	ldr	ip, [sp, #100]	; 0x64
   438ec:	mov	r0, r8
   438f0:	ldr	r3, [ip]
   438f4:	blx	r3
   438f8:	mov	r4, r0
   438fc:	add	r0, sp, #148	; 0x94
   43900:	add	ip, r0, r4, lsl #2
   43904:	b	4380c <__assert_fail@plt+0x32408>
   43908:	mov	r2, #5
   4390c:	movw	r1, #39620	; 0x9ac4
   43910:	mov	r0, #0
   43914:	movt	r1, #7
   43918:	bl	11170 <dcgettext@plt>
   4391c:	mov	r2, r4
   43920:	ldrd	r4, [sp, #56]	; 0x38
   43924:	mov	sl, r8
   43928:	subs	r4, r4, #1
   4392c:	sbc	r5, r5, #0
   43930:	strd	r4, [sp, #72]	; 0x48
   43934:	mov	r4, #0
   43938:	mov	r5, #0
   4393c:	mov	r1, r0
   43940:	mov	r0, #1
   43944:	bl	1132c <__printf_chk@plt>
   43948:	mov	r0, r8
   4394c:	b	439e4 <__assert_fail@plt+0x325e0>
   43950:	cmp	r9, sl
   43954:	bls	43968 <__assert_fail@plt+0x32564>
   43958:	rsb	r1, sl, r9
   4395c:	sub	r3, r1, #1
   43960:	cmp	r3, #7
   43964:	bls	439f4 <__assert_fail@plt+0x325f0>
   43968:	mvn	r8, #2
   4396c:	mov	r6, #0
   43970:	mov	r0, r6
   43974:	bl	3a08c <__assert_fail@plt+0x28c88>
   43978:	ldr	r3, [sp, #64]	; 0x40
   4397c:	mov	r2, r0
   43980:	ldrd	r0, [sp, #72]	; 0x48
   43984:	cmp	r1, r5
   43988:	cmpeq	r0, r4
   4398c:	movw	r1, #4484	; 0x1184
   43990:	mov	r0, #1
   43994:	movt	r1, #6
   43998:	moveq	r3, fp
   4399c:	bl	1132c <__printf_chk@plt>
   439a0:	cmp	r8, #20
   439a4:	bhi	43a0c <__assert_fail@plt+0x32608>
   439a8:	mov	r1, #1
   439ac:	movw	r3, #8191	; 0x1fff
   439b0:	lsl	r8, r1, r8
   439b4:	movt	r3, #16
   439b8:	and	r3, r8, r3
   439bc:	cmp	r3, #0
   439c0:	beq	43a0c <__assert_fail@plt+0x32608>
   439c4:	adds	r4, r4, #1
   439c8:	ldrd	r2, [sp, #56]	; 0x38
   439cc:	adc	r5, r5, #0
   439d0:	add	sl, sl, r1
   439d4:	cmp	r5, r3
   439d8:	cmpeq	r4, r2
   439dc:	beq	4445c <__assert_fail@plt+0x33058>
   439e0:	mov	r0, r7
   439e4:	add	r7, r0, #1
   439e8:	cmp	r9, r7
   439ec:	bls	43950 <__assert_fail@plt+0x3254c>
   439f0:	mov	r1, #1
   439f4:	ldr	ip, [sp, #100]	; 0x64
   439f8:	ldr	r3, [ip]
   439fc:	blx	r3
   43a00:	mov	r6, r0
   43a04:	sub	r8, r0, #3
   43a08:	b	43970 <__assert_fail@plt+0x3256c>
   43a0c:	mov	r2, #5
   43a10:	movw	r1, #39656	; 0x9ae8
   43a14:	mov	r0, #0
   43a18:	movt	r1, #7
   43a1c:	str	r6, [sp, #52]	; 0x34
   43a20:	bl	11170 <dcgettext@plt>
   43a24:	ldr	ip, [sp, #52]	; 0x34
   43a28:	mov	r4, r0
   43a2c:	mov	r0, ip
   43a30:	bl	3a08c <__assert_fail@plt+0x28c88>
   43a34:	mov	r1, r0
   43a38:	mov	r0, r4
   43a3c:	bl	4b2b0 <error@@Base>
   43a40:	mov	r0, #0
   43a44:	b	43580 <__assert_fail@plt+0x3217c>
   43a48:	mov	r0, r6
   43a4c:	ldr	r3, [r7]
   43a50:	blx	r3
   43a54:	strd	r0, [sp, #112]	; 0x70
   43a58:	ldr	r6, [sp, #112]	; 0x70
   43a5c:	b	43694 <__assert_fail@plt+0x32290>
   43a60:	add	ip, sp, #148	; 0x94
   43a64:	str	ip, [sp, #100]	; 0x64
   43a68:	mov	r0, #10
   43a6c:	bl	112fc <putchar@plt>
   43a70:	cmp	fp, r9
   43a74:	bcs	43740 <__assert_fail@plt+0x3233c>
   43a78:	add	r6, fp, #1
   43a7c:	mov	sl, r7
   43a80:	cmp	r9, r6
   43a84:	bhi	43b44 <__assert_fail@plt+0x32740>
   43a88:	cmp	r9, fp
   43a8c:	bls	435a0 <__assert_fail@plt+0x3219c>
   43a90:	rsb	r1, fp, r9
   43a94:	sub	r3, r1, #1
   43a98:	cmp	r3, #7
   43a9c:	bhi	435a0 <__assert_fail@plt+0x3219c>
   43aa0:	mov	r0, fp
   43aa4:	ldr	r3, [sl]
   43aa8:	blx	r3
   43aac:	subs	r4, r0, #0
   43ab0:	beq	444d4 <__assert_fail@plt+0x330d0>
   43ab4:	sub	r3, r4, #1
   43ab8:	cmp	r3, #9
   43abc:	ldrls	pc, [pc, r3, lsl #2]
   43ac0:	b	43e6c <__assert_fail@plt+0x32a68>
   43ac4:	ldrdeq	r3, [r4], -r4
   43ac8:	andeq	r3, r4, r4, ror sp
   43acc:	andeq	r3, r4, r0, ror #24
   43ad0:	andeq	r3, r4, r8, lsr ip
   43ad4:	andeq	r3, r4, r0, lsl lr
   43ad8:	strdeq	r3, [r4], -ip
   43adc:	andeq	r3, r4, r8, lsl #24
   43ae0:			; <UNDEFINED> instruction: 0x00043bb8
   43ae4:	andeq	r3, r4, ip, asr #22
   43ae8:	andeq	r3, r4, ip, ror #21
   43aec:	ldr	ip, [sp, #96]	; 0x60
   43af0:	add	fp, r6, ip
   43af4:	cmp	r9, fp
   43af8:	bhi	43f18 <__assert_fail@plt+0x32b14>
   43afc:	cmp	r9, r6
   43b00:	rsbhi	r1, r6, r9
   43b04:	bhi	43f1c <__assert_fail@plt+0x32b18>
   43b08:	mov	r4, #0
   43b0c:	movw	r1, #40352	; 0x9da0
   43b10:	movt	r1, #7
   43b14:	mov	r0, #0
   43b18:	mov	r2, #5
   43b1c:	bl	11170 <dcgettext@plt>
   43b20:	mov	r2, r4
   43b24:	mov	r1, r0
   43b28:	mov	r0, #1
   43b2c:	bl	1132c <__printf_chk@plt>
   43b30:	cmp	r9, fp
   43b34:	bls	43740 <__assert_fail@plt+0x3233c>
   43b38:	add	r6, fp, #1
   43b3c:	cmp	r9, r6
   43b40:	bls	43a88 <__assert_fail@plt+0x32684>
   43b44:	mov	r1, #1
   43b48:	b	43aa0 <__assert_fail@plt+0x3269c>
   43b4c:	mov	r0, r6
   43b50:	add	r1, sp, #140	; 0x8c
   43b54:	mov	r2, #0
   43b58:	mov	r3, r9
   43b5c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43b60:	ldr	r5, [sp, #96]	; 0x60
   43b64:	mov	r4, r0
   43b68:	ldr	r0, [sp, #140]	; 0x8c
   43b6c:	add	r0, r6, r0
   43b70:	add	fp, r0, r5
   43b74:	cmp	r9, fp
   43b78:	bhi	43ed8 <__assert_fail@plt+0x32ad4>
   43b7c:	cmp	r9, r0
   43b80:	rsbhi	r1, r0, r9
   43b84:	bhi	43edc <__assert_fail@plt+0x32ad8>
   43b88:	mov	r5, #0
   43b8c:	movw	r1, #40280	; 0x9d58
   43b90:	movt	r1, #7
   43b94:	mov	r0, #0
   43b98:	mov	r2, #5
   43b9c:	bl	11170 <dcgettext@plt>
   43ba0:	mov	r2, r4
   43ba4:	mov	r3, r5
   43ba8:	mov	r1, r0
   43bac:	mov	r0, #1
   43bb0:	bl	1132c <__printf_chk@plt>
   43bb4:	b	43b30 <__assert_fail@plt+0x3272c>
   43bb8:	mov	r0, r6
   43bbc:	add	r1, sp, #140	; 0x8c
   43bc0:	mov	r2, #0
   43bc4:	mov	r3, r9
   43bc8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43bcc:	ldr	r5, [sp, #96]	; 0x60
   43bd0:	mov	r4, r0
   43bd4:	ldr	r0, [sp, #140]	; 0x8c
   43bd8:	add	r0, r6, r0
   43bdc:	add	fp, r0, r5
   43be0:	cmp	r9, fp
   43be4:	bhi	43ef8 <__assert_fail@plt+0x32af4>
   43be8:	cmp	r9, r0
   43bec:	rsbhi	r1, r0, r9
   43bf0:	bhi	43efc <__assert_fail@plt+0x32af8>
   43bf4:	mov	r5, #0
   43bf8:	movw	r1, #40208	; 0x9d10
   43bfc:	mov	r0, #0
   43c00:	movt	r1, #7
   43c04:	b	43b98 <__assert_fail@plt+0x32794>
   43c08:	ldr	ip, [sp, #96]	; 0x60
   43c0c:	add	fp, r6, ip
   43c10:	cmp	r9, fp
   43c14:	bhi	43f3c <__assert_fail@plt+0x32b38>
   43c18:	cmp	r9, r6
   43c1c:	rsbhi	r1, r6, r9
   43c20:	bhi	43f40 <__assert_fail@plt+0x32b3c>
   43c24:	mov	r4, #0
   43c28:	movw	r1, #40156	; 0x9cdc
   43c2c:	mov	r0, #0
   43c30:	movt	r1, #7
   43c34:	b	43b18 <__assert_fail@plt+0x32714>
   43c38:	mov	r2, #5
   43c3c:	movw	r1, #39924	; 0x9bf4
   43c40:	mov	r0, #0
   43c44:	movt	r1, #7
   43c48:	bl	11170 <dcgettext@plt>
   43c4c:	mov	fp, r6
   43c50:	mov	r1, r0
   43c54:	mov	r0, #1
   43c58:	bl	1132c <__printf_chk@plt>
   43c5c:	b	43b30 <__assert_fail@plt+0x3272c>
   43c60:	add	r4, sp, #140	; 0x8c
   43c64:	mov	r0, r6
   43c68:	mov	r2, #0
   43c6c:	mov	r3, r9
   43c70:	mov	r1, r4
   43c74:	add	r5, sp, #152	; 0x98
   43c78:	str	r5, [sp, #64]	; 0x40
   43c7c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43c80:	ldr	fp, [sp, #140]	; 0x8c
   43c84:	mov	r1, r4
   43c88:	mov	r2, #0
   43c8c:	mov	r3, r9
   43c90:	add	r6, r6, fp
   43c94:	str	r0, [sp, #72]	; 0x48
   43c98:	mov	r0, r6
   43c9c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43ca0:	ldr	ip, [sp, #104]	; 0x68
   43ca4:	ldr	fp, [sp, #140]	; 0x8c
   43ca8:	cmp	ip, #0
   43cac:	add	fp, r6, fp
   43cb0:	str	r0, [sp, #56]	; 0x38
   43cb4:	bne	43f98 <__assert_fail@plt+0x32b94>
   43cb8:	movw	r1, #39736	; 0x9b38
   43cbc:	mov	r0, ip
   43cc0:	movt	r1, #7
   43cc4:	mov	r2, #5
   43cc8:	bl	11170 <dcgettext@plt>
   43ccc:	bl	4b2b0 <error@@Base>
   43cd0:	mov	r2, #5
   43cd4:	movw	r1, #39804	; 0x9b7c
   43cd8:	mov	r0, #0
   43cdc:	movt	r1, #7
   43ce0:	bl	11170 <dcgettext@plt>
   43ce4:	ldr	r2, [sp, #72]	; 0x48
   43ce8:	ldr	r3, [sp, #56]	; 0x38
   43cec:	mov	r1, r0
   43cf0:	mov	r0, #1
   43cf4:	bl	1132c <__printf_chk@plt>
   43cf8:	b	43b30 <__assert_fail@plt+0x3272c>
   43cfc:	mov	r0, r6
   43d00:	add	r1, sp, #140	; 0x8c
   43d04:	mov	r2, #0
   43d08:	mov	r3, r9
   43d0c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43d10:	ldr	r5, [sp, #96]	; 0x60
   43d14:	mov	r4, r0
   43d18:	ldr	r0, [sp, #140]	; 0x8c
   43d1c:	add	r0, r6, r0
   43d20:	add	fp, r0, r5
   43d24:	cmp	r9, fp
   43d28:	bhi	43f60 <__assert_fail@plt+0x32b5c>
   43d2c:	cmp	r9, r0
   43d30:	rsbhi	r1, r0, r9
   43d34:	bhi	43f64 <__assert_fail@plt+0x32b60>
   43d38:	mov	r0, #0
   43d3c:	mov	r1, #0
   43d40:	bl	39f00 <__assert_fail@plt+0x28afc>
   43d44:	movw	r1, #40100	; 0x9ca4
   43d48:	movt	r1, #7
   43d4c:	mov	r5, r0
   43d50:	mov	r0, #0
   43d54:	mov	r2, #5
   43d58:	bl	11170 <dcgettext@plt>
   43d5c:	mov	r3, r5
   43d60:	mov	r2, r4
   43d64:	mov	r1, r0
   43d68:	mov	r0, #1
   43d6c:	bl	1132c <__printf_chk@plt>
   43d70:	b	43b30 <__assert_fail@plt+0x3272c>
   43d74:	mov	r2, #0
   43d78:	mov	r0, r6
   43d7c:	mov	r3, r9
   43d80:	add	r1, sp, #140	; 0x8c
   43d84:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43d88:	ldr	r3, [sp, #140]	; 0x8c
   43d8c:	add	r6, r6, r3
   43d90:	rsb	r1, r6, r9
   43d94:	mov	r4, r0
   43d98:	mov	r0, r6
   43d9c:	bl	11350 <strnlen@plt>
   43da0:	movw	r1, #39996	; 0x9c3c
   43da4:	movt	r1, #7
   43da8:	mov	r2, #5
   43dac:	add	fp, r0, #1
   43db0:	mov	r0, #0
   43db4:	bl	11170 <dcgettext@plt>
   43db8:	mov	r3, r6
   43dbc:	mov	r2, r4
   43dc0:	add	fp, r6, fp
   43dc4:	mov	r1, r0
   43dc8:	mov	r0, #1
   43dcc:	bl	1132c <__printf_chk@plt>
   43dd0:	b	43b30 <__assert_fail@plt+0x3272c>
   43dd4:	mov	r2, #0
   43dd8:	mov	r0, r6
   43ddc:	mov	r3, r9
   43de0:	add	r1, sp, #140	; 0x8c
   43de4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43de8:	ldr	r3, [sp, #140]	; 0x8c
   43dec:	add	r6, r6, r3
   43df0:	rsb	r1, r6, r9
   43df4:	mov	r4, r0
   43df8:	mov	r0, r6
   43dfc:	bl	11350 <strnlen@plt>
   43e00:	movw	r1, #39948	; 0x9c0c
   43e04:	mov	r2, #5
   43e08:	movt	r1, #7
   43e0c:	b	43dac <__assert_fail@plt+0x329a8>
   43e10:	mov	r0, r6
   43e14:	add	r1, sp, #140	; 0x8c
   43e18:	mov	r2, #0
   43e1c:	mov	r3, r9
   43e20:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43e24:	ldr	r5, [sp, #96]	; 0x60
   43e28:	mov	r4, r0
   43e2c:	ldr	r0, [sp, #140]	; 0x8c
   43e30:	add	r0, r6, r0
   43e34:	add	fp, r0, r5
   43e38:	cmp	r9, fp
   43e3c:	bhi	43f7c <__assert_fail@plt+0x32b78>
   43e40:	cmp	r9, r0
   43e44:	rsbhi	r1, r0, r9
   43e48:	bhi	43f80 <__assert_fail@plt+0x32b7c>
   43e4c:	mov	r0, #0
   43e50:	mov	r1, #0
   43e54:	bl	39f00 <__assert_fail@plt+0x28afc>
   43e58:	movw	r1, #40044	; 0x9c6c
   43e5c:	movt	r1, #7
   43e60:	mov	r5, r0
   43e64:	mov	r0, #0
   43e68:	b	43d54 <__assert_fail@plt+0x32950>
   43e6c:	ldr	r5, [sp, #100]	; 0x64
   43e70:	cmp	r5, #0
   43e74:	beq	444b0 <__assert_fail@plt+0x330ac>
   43e78:	ldr	ip, [sp, #100]	; 0x64
   43e7c:	ldr	r8, [ip, r4, lsl #2]
   43e80:	cmp	r8, #0
   43e84:	beq	444b0 <__assert_fail@plt+0x330ac>
   43e88:	mov	r3, r9
   43e8c:	mov	r0, r8
   43e90:	add	r1, sp, #140	; 0x8c
   43e94:	mov	r2, #0
   43e98:	bl	3a350 <__assert_fail@plt+0x28f4c>
   43e9c:	ldr	r7, [sp, #140]	; 0x8c
   43ea0:	orrs	r3, r0, r1
   43ea4:	strd	r0, [sp, #64]	; 0x40
   43ea8:	bne	4404c <__assert_fail@plt+0x32c48>
   43eac:	mov	r2, #5
   43eb0:	movw	r1, #40444	; 0x9dfc
   43eb4:	mov	r0, #0
   43eb8:	movt	r1, #7
   43ebc:	bl	11170 <dcgettext@plt>
   43ec0:	mov	r2, r4
   43ec4:	mov	fp, r6
   43ec8:	mov	r1, r0
   43ecc:	mov	r0, #1
   43ed0:	bl	1132c <__printf_chk@plt>
   43ed4:	b	43b30 <__assert_fail@plt+0x3272c>
   43ed8:	ldr	r1, [sp, #96]	; 0x60
   43edc:	sub	r3, r1, #1
   43ee0:	cmp	r3, #7
   43ee4:	bhi	43b88 <__assert_fail@plt+0x32784>
   43ee8:	ldr	r3, [sl]
   43eec:	blx	r3
   43ef0:	mov	r5, r0
   43ef4:	b	43b8c <__assert_fail@plt+0x32788>
   43ef8:	ldr	r1, [sp, #96]	; 0x60
   43efc:	sub	r3, r1, #1
   43f00:	cmp	r3, #7
   43f04:	bhi	43bf4 <__assert_fail@plt+0x327f0>
   43f08:	ldr	r3, [sl]
   43f0c:	blx	r3
   43f10:	mov	r5, r0
   43f14:	b	43bf8 <__assert_fail@plt+0x327f4>
   43f18:	ldr	r1, [sp, #96]	; 0x60
   43f1c:	sub	r3, r1, #1
   43f20:	cmp	r3, #7
   43f24:	bhi	43b08 <__assert_fail@plt+0x32704>
   43f28:	mov	r0, r6
   43f2c:	ldr	r3, [sl]
   43f30:	blx	r3
   43f34:	mov	r4, r0
   43f38:	b	43b0c <__assert_fail@plt+0x32708>
   43f3c:	ldr	r1, [sp, #96]	; 0x60
   43f40:	sub	r3, r1, #1
   43f44:	cmp	r3, #7
   43f48:	bhi	43c24 <__assert_fail@plt+0x32820>
   43f4c:	mov	r0, r6
   43f50:	ldr	r3, [sl]
   43f54:	blx	r3
   43f58:	mov	r4, r0
   43f5c:	b	43c28 <__assert_fail@plt+0x32824>
   43f60:	ldr	r1, [sp, #96]	; 0x60
   43f64:	sub	r3, r1, #1
   43f68:	cmp	r3, #7
   43f6c:	bhi	43d38 <__assert_fail@plt+0x32934>
   43f70:	ldr	r3, [sl]
   43f74:	blx	r3
   43f78:	b	43d40 <__assert_fail@plt+0x3293c>
   43f7c:	ldr	r1, [sp, #96]	; 0x60
   43f80:	sub	r3, r1, #1
   43f84:	cmp	r3, #7
   43f88:	bhi	43e4c <__assert_fail@plt+0x32a48>
   43f8c:	ldr	r3, [sl]
   43f90:	blx	r3
   43f94:	b	43e54 <__assert_fail@plt+0x32a50>
   43f98:	movw	r5, #14352	; 0x3810
   43f9c:	movt	r5, #9
   43fa0:	ldr	r0, [sp, #56]	; 0x38
   43fa4:	mov	r1, #0
   43fa8:	ldr	r4, [r5, #268]	; 0x10c
   43fac:	cmp	r4, #0
   43fb0:	strd	r0, [sp, #80]	; 0x50
   43fb4:	beq	43cd0 <__assert_fail@plt+0x328cc>
   43fb8:	mov	r3, #280	; 0x118
   43fbc:	ldrd	r0, [sp, #112]	; 0x70
   43fc0:	ldrd	r2, [r3, r5]
   43fc4:	cmp	r1, r3
   43fc8:	cmpeq	r0, r2
   43fcc:	bcs	43cd0 <__assert_fail@plt+0x328cc>
   43fd0:	ldrd	r0, [sp, #80]	; 0x50
   43fd4:	orrs	r1, r0, r1
   43fd8:	beq	43cd0 <__assert_fail@plt+0x328cc>
   43fdc:	ldr	ip, [sp, #112]	; 0x70
   43fe0:	add	r6, r4, ip
   43fe4:	add	r4, r4, r2
   43fe8:	add	r7, r6, #4
   43fec:	cmp	r4, r7
   43ff0:	bhi	44194 <__assert_fail@plt+0x32d90>
   43ff4:	cmp	r6, r4
   43ff8:	bcs	4400c <__assert_fail@plt+0x32c08>
   43ffc:	rsb	r1, r6, r4
   44000:	sub	r0, r1, #1
   44004:	cmp	r0, #7
   44008:	bls	44198 <__assert_fail@plt+0x32d94>
   4400c:	mov	r0, #4
   44010:	mov	r1, #0
   44014:	mov	r5, #4
   44018:	cmp	r1, r3
   4401c:	cmpeq	r0, r2
   44020:	bhi	43cd0 <__assert_fail@plt+0x328cc>
   44024:	add	r6, r7, #2
   44028:	cmp	r4, r6
   4402c:	bhi	441f8 <__assert_fail@plt+0x32df4>
   44030:	cmp	r4, r7
   44034:	bls	43cd0 <__assert_fail@plt+0x328cc>
   44038:	rsb	r1, r7, r4
   4403c:	sub	r3, r1, #1
   44040:	cmp	r3, #7
   44044:	bhi	43cd0 <__assert_fail@plt+0x328cc>
   44048:	b	441fc <__assert_fail@plt+0x32df8>
   4404c:	mov	r2, #5
   44050:	movw	r1, #40464	; 0x9e10
   44054:	mov	r0, #0
   44058:	movt	r1, #7
   4405c:	bl	11170 <dcgettext@plt>
   44060:	mov	r2, r4
   44064:	mov	r5, #0
   44068:	mov	r4, #0
   4406c:	strd	r4, [sp, #88]	; 0x58
   44070:	mov	fp, #0
   44074:	mov	r1, r0
   44078:	mov	r0, #1
   4407c:	bl	1132c <__printf_chk@plt>
   44080:	add	r0, r8, r7
   44084:	ldrd	r4, [sp, #64]	; 0x40
   44088:	ldr	r7, [sp, #92]	; 0x5c
   4408c:	mov	r3, r0
   44090:	subs	r4, r4, #1
   44094:	str	sl, [sp, #80]	; 0x50
   44098:	sbc	r5, r5, #0
   4409c:	mov	sl, r6
   440a0:	strd	r4, [sp, #72]	; 0x48
   440a4:	mov	r4, fp
   440a8:	str	r7, [sp, #56]	; 0x38
   440ac:	ldr	r8, [sp, #88]	; 0x58
   440b0:	ldrd	r6, [sp, #88]	; 0x58
   440b4:	b	44154 <__assert_fail@plt+0x32d50>
   440b8:	cmp	r9, r3
   440bc:	bls	440d0 <__assert_fail@plt+0x32ccc>
   440c0:	rsb	r1, r3, r9
   440c4:	sub	r0, r1, #1
   440c8:	cmp	r0, #7
   440cc:	bls	44164 <__assert_fail@plt+0x32d60>
   440d0:	mov	r1, #0
   440d4:	ldr	ip, [sp, #56]	; 0x38
   440d8:	mov	r2, sl
   440dc:	str	r8, [sp]
   440e0:	mov	r0, #0
   440e4:	str	r8, [sp, #8]
   440e8:	mov	r3, r9
   440ec:	str	ip, [sp, #4]
   440f0:	str	ip, [sp, #12]
   440f4:	ldr	ip, [sp, #96]	; 0x60
   440f8:	str	fp, [sp, #20]
   440fc:	str	r4, [sp, #28]
   44100:	str	ip, [sp, #16]
   44104:	mov	ip, #4
   44108:	str	r4, [sp, #32]
   4410c:	str	ip, [sp, #24]
   44110:	str	r4, [sp, #36]	; 0x24
   44114:	str	r4, [sp, #40]	; 0x28
   44118:	bl	3f850 <__assert_fail@plt+0x2e44c>
   4411c:	mov	sl, r0
   44120:	ldrd	r0, [sp, #72]	; 0x48
   44124:	cmp	r1, r7
   44128:	cmpeq	r0, r6
   4412c:	beq	44138 <__assert_fail@plt+0x32d34>
   44130:	mov	r0, #44	; 0x2c
   44134:	bl	112fc <putchar@plt>
   44138:	adds	r6, r6, #1
   4413c:	ldrd	r2, [sp, #64]	; 0x40
   44140:	adc	r7, r7, #0
   44144:	cmp	r7, r3
   44148:	cmpeq	r6, r2
   4414c:	beq	4417c <__assert_fail@plt+0x32d78>
   44150:	mov	r3, r5
   44154:	add	r5, r3, #1
   44158:	cmp	r9, r5
   4415c:	bls	440b8 <__assert_fail@plt+0x32cb4>
   44160:	mov	r1, #1
   44164:	ldr	ip, [sp, #80]	; 0x50
   44168:	mov	r0, r3
   4416c:	ldr	r3, [ip]
   44170:	blx	r3
   44174:	mov	r1, r0
   44178:	b	440d4 <__assert_fail@plt+0x32cd0>
   4417c:	mov	r6, sl
   44180:	mov	r0, #10
   44184:	ldr	sl, [sp, #80]	; 0x50
   44188:	mov	fp, r6
   4418c:	bl	112fc <putchar@plt>
   44190:	b	43b30 <__assert_fail@plt+0x3272c>
   44194:	mov	r1, #4
   44198:	ldr	r3, [sl]
   4419c:	mov	r0, r6
   441a0:	blx	r3
   441a4:	mvn	r2, #0
   441a8:	mov	r3, #0
   441ac:	cmp	r1, r3
   441b0:	cmpeq	r0, r2
   441b4:	bne	44498 <__assert_fail@plt+0x33094>
   441b8:	add	r6, r6, #12
   441bc:	cmp	r4, r6
   441c0:	bhi	4446c <__assert_fail@plt+0x33068>
   441c4:	cmp	r4, r7
   441c8:	bls	441dc <__assert_fail@plt+0x32dd8>
   441cc:	rsb	r1, r7, r4
   441d0:	sub	r3, r1, #1
   441d4:	cmp	r3, #7
   441d8:	bls	44470 <__assert_fail@plt+0x3306c>
   441dc:	mov	r3, #280	; 0x118
   441e0:	mov	r7, r6
   441e4:	ldrd	r2, [r3, r5]
   441e8:	mov	r0, #12
   441ec:	mov	r1, #0
   441f0:	mov	r5, #8
   441f4:	b	44018 <__assert_fail@plt+0x32c14>
   441f8:	mov	r1, #2
   441fc:	ldr	r3, [sl]
   44200:	mov	r0, r7
   44204:	blx	r3
   44208:	sub	r3, r0, #2
   4420c:	cmp	r3, #2
   44210:	bhi	43cd0 <__assert_fail@plt+0x328cc>
   44214:	add	r5, r5, #1
   44218:	cmp	r0, #4
   4421c:	add	r6, r6, r5
   44220:	addeq	r6, r6, #1
   44224:	add	r7, r6, #4
   44228:	add	r0, r6, #3
   4422c:	cmp	r4, r7
   44230:	bhi	44250 <__assert_fail@plt+0x32e4c>
   44234:	cmp	r4, r0
   44238:	bls	43cd0 <__assert_fail@plt+0x328cc>
   4423c:	rsb	r1, r0, r4
   44240:	sub	r3, r1, #1
   44244:	cmp	r3, #7
   44248:	bhi	43cd0 <__assert_fail@plt+0x328cc>
   4424c:	b	44254 <__assert_fail@plt+0x32e50>
   44250:	mov	r1, #1
   44254:	ldr	r3, [sl]
   44258:	blx	r3
   4425c:	cmp	r0, #0
   44260:	beq	43cd0 <__assert_fail@plt+0x328cc>
   44264:	sub	r0, r0, #1
   44268:	str	r0, [sp, #88]	; 0x58
   4426c:	add	r6, r7, r0
   44270:	ldrb	r3, [r7, r0]
   44274:	mov	r5, r6
   44278:	cmp	r3, #0
   4427c:	beq	4429c <__assert_fail@plt+0x32e98>
   44280:	mov	r0, r5
   44284:	rsb	r1, r5, r4
   44288:	bl	11350 <strnlen@plt>
   4428c:	add	r0, r0, #1
   44290:	ldrb	r3, [r5, r0]!
   44294:	cmp	r3, #0
   44298:	bne	44280 <__assert_fail@plt+0x32e7c>
   4429c:	ldrb	r3, [r5, #1]
   442a0:	add	r5, r5, #1
   442a4:	cmp	r3, #0
   442a8:	beq	43cd0 <__assert_fail@plt+0x328cc>
   442ac:	ldrd	r2, [sp, #80]	; 0x50
   442b0:	cmp	r3, #0
   442b4:	cmpeq	r2, #1
   442b8:	beq	4435c <__assert_fail@plt+0x32f58>
   442bc:	str	r7, [sp, #128]	; 0x80
   442c0:	mov	r7, r3
   442c4:	str	r6, [sp, #132]	; 0x84
   442c8:	mov	r6, r2
   442cc:	rsb	r1, r5, r4
   442d0:	mov	r0, r5
   442d4:	bl	11350 <strnlen@plt>
   442d8:	subs	r6, r6, #1
   442dc:	mov	r2, #0
   442e0:	mov	r3, r4
   442e4:	add	r1, sp, #144	; 0x90
   442e8:	sbc	r7, r7, #0
   442ec:	add	r0, r0, #1
   442f0:	add	r5, r5, r0
   442f4:	mov	r0, r5
   442f8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   442fc:	ldr	r8, [sp, #144]	; 0x90
   44300:	mov	r2, #0
   44304:	mov	r3, r4
   44308:	add	r5, r5, r8
   4430c:	add	r1, sp, #144	; 0x90
   44310:	mov	r0, r5
   44314:	bl	3a350 <__assert_fail@plt+0x28f4c>
   44318:	ldr	r8, [sp, #144]	; 0x90
   4431c:	mov	r3, r4
   44320:	add	r1, sp, #144	; 0x90
   44324:	add	r8, r5, r8
   44328:	mov	r2, #0
   4432c:	mov	r0, r8
   44330:	bl	3a350 <__assert_fail@plt+0x28f4c>
   44334:	ldr	r3, [sp, #144]	; 0x90
   44338:	add	r5, r8, r3
   4433c:	ldrb	r3, [r8, r3]
   44340:	cmp	r3, #0
   44344:	beq	43cd0 <__assert_fail@plt+0x328cc>
   44348:	cmp	r7, #0
   4434c:	cmpeq	r6, #1
   44350:	bne	442cc <__assert_fail@plt+0x32ec8>
   44354:	ldr	r7, [sp, #128]	; 0x80
   44358:	ldr	r6, [sp, #132]	; 0x84
   4435c:	cmp	r4, r5
   44360:	beq	43cd0 <__assert_fail@plt+0x328cc>
   44364:	rsb	r1, r5, r4
   44368:	mov	r0, r5
   4436c:	bl	11350 <strnlen@plt>
   44370:	ldr	ip, [sp, #64]	; 0x40
   44374:	mov	r2, #0
   44378:	mov	r3, r4
   4437c:	sub	r1, ip, #8
   44380:	add	r0, r0, #1
   44384:	add	r0, r5, r0
   44388:	bl	3a350 <__assert_fail@plt+0x28f4c>
   4438c:	mov	r2, r0
   44390:	mov	r3, r1
   44394:	orrs	r0, r2, r3
   44398:	beq	44400 <__assert_fail@plt+0x32ffc>
   4439c:	ldr	ip, [sp, #88]	; 0x58
   443a0:	ldrb	r1, [r7, ip]
   443a4:	cmp	r1, #0
   443a8:	beq	43cd0 <__assert_fail@plt+0x328cc>
   443ac:	cmp	r3, #0
   443b0:	cmpeq	r2, #1
   443b4:	bls	44404 <__assert_fail@plt+0x33000>
   443b8:	mov	r7, r9
   443bc:	mov	r8, r2
   443c0:	mov	r9, r3
   443c4:	b	443d4 <__assert_fail@plt+0x32fd0>
   443c8:	cmp	r9, #0
   443cc:	cmpeq	r8, #1
   443d0:	beq	44464 <__assert_fail@plt+0x33060>
   443d4:	mov	r0, r6
   443d8:	rsb	r1, r6, r4
   443dc:	bl	11350 <strnlen@plt>
   443e0:	subs	r8, r8, #1
   443e4:	sbc	r9, r9, #0
   443e8:	add	r0, r0, #1
   443ec:	ldrb	r3, [r6, r0]!
   443f0:	cmp	r3, #0
   443f4:	bne	443c8 <__assert_fail@plt+0x32fc4>
   443f8:	mov	r9, r7
   443fc:	b	43cd0 <__assert_fail@plt+0x328cc>
   44400:	mov	r6, #0
   44404:	cmp	r5, #0
   44408:	beq	43cd0 <__assert_fail@plt+0x328cc>
   4440c:	mov	r2, #5
   44410:	movw	r1, #39856	; 0x9bb0
   44414:	mov	r0, #0
   44418:	movt	r1, #7
   4441c:	bl	11170 <dcgettext@plt>
   44420:	cmp	r6, #0
   44424:	ldr	r2, [sp, #72]	; 0x48
   44428:	movweq	r6, #25084	; 0x61fc
   4442c:	movteq	r6, #7
   44430:	movwne	r3, #39368	; 0x99c8
   44434:	str	r6, [sp]
   44438:	moveq	r3, r6
   4443c:	str	r5, [sp, #8]
   44440:	movtne	r3, #7
   44444:	mov	r1, r0
   44448:	str	r3, [sp, #4]
   4444c:	mov	r0, #1
   44450:	ldr	r3, [sp, #56]	; 0x38
   44454:	bl	1132c <__printf_chk@plt>
   44458:	b	43b30 <__assert_fail@plt+0x3272c>
   4445c:	mov	r8, r7
   44460:	b	4385c <__assert_fail@plt+0x32458>
   44464:	mov	r9, r7
   44468:	b	44404 <__assert_fail@plt+0x33000>
   4446c:	mov	r1, #8
   44470:	mov	r0, r7
   44474:	ldr	r3, [sl]
   44478:	blx	r3
   4447c:	mov	r3, #280	; 0x118
   44480:	ldrd	r2, [r3, r5]
   44484:	mov	r7, r6
   44488:	mov	r5, #8
   4448c:	adds	r0, r0, #12
   44490:	adc	r1, r1, #0
   44494:	b	44018 <__assert_fail@plt+0x32c14>
   44498:	mov	r3, #280	; 0x118
   4449c:	adds	r0, r0, #4
   444a0:	ldrd	r2, [r3, r5]
   444a4:	adc	r1, r1, #0
   444a8:	mov	r5, #4
   444ac:	b	44018 <__assert_fail@plt+0x32c14>
   444b0:	mov	r2, #5
   444b4:	movw	r1, #40408	; 0x9dd8
   444b8:	mov	r0, #0
   444bc:	movt	r1, #7
   444c0:	bl	11170 <dcgettext@plt>
   444c4:	mov	r1, r4
   444c8:	bl	4b2b0 <error@@Base>
   444cc:	mov	r0, #0
   444d0:	b	43580 <__assert_fail@plt+0x3217c>
   444d4:	mov	r0, #10
   444d8:	mov	r7, sl
   444dc:	bl	112fc <putchar@plt>
   444e0:	cmp	r9, r6
   444e4:	bhi	43540 <__assert_fail@plt+0x3213c>
   444e8:	b	435a8 <__assert_fail@plt+0x321a4>
   444ec:	bl	1117c <__stack_chk_fail@plt>
   444f0:	and	r4, r0, #2
   444f4:	str	r4, [sp, #104]	; 0x68
   444f8:	and	r4, r0, #4
   444fc:	b	435e4 <__assert_fail@plt+0x321e0>
   44500:	push	{r4, r5, r6, lr}
   44504:	mov	r5, r0
   44508:	ldr	r4, [r0, #8]
   4450c:	mov	r6, r1
   44510:	cmp	r4, r1
   44514:	bhi	445d0 <__assert_fail@plt+0x331cc>
   44518:	movw	r3, #24696	; 0x6078
   4451c:	movt	r3, #9
   44520:	ldr	r3, [r3, #1108]	; 0x454
   44524:	cmp	r3, #0
   44528:	bne	445c0 <__assert_fail@plt+0x331bc>
   4452c:	add	r1, r6, #1
   44530:	str	r1, [r5, #8]
   44534:	cmp	r1, #0
   44538:	beq	445c8 <__assert_fail@plt+0x331c4>
   4453c:	cmp	r1, #1024	; 0x400
   44540:	bhi	445d8 <__assert_fail@plt+0x331d4>
   44544:	mov	r2, #2
   44548:	ldr	r0, [r5, #12]
   4454c:	bl	3f7e0 <__assert_fail@plt+0x2e3dc>
   44550:	mov	r2, #4
   44554:	ldr	r1, [r5, #8]
   44558:	str	r0, [r5, #12]
   4455c:	ldr	r0, [r5, #16]
   44560:	bl	3f7e0 <__assert_fail@plt+0x2e3dc>
   44564:	ldr	r2, [r5, #12]
   44568:	cmp	r2, #0
   4456c:	str	r0, [r5, #16]
   44570:	beq	44604 <__assert_fail@plt+0x33200>
   44574:	cmp	r0, #0
   44578:	beq	44604 <__assert_fail@plt+0x33200>
   4457c:	ldr	r3, [r5, #8]
   44580:	cmp	r4, r3
   44584:	bcs	445b8 <__assert_fail@plt+0x331b4>
   44588:	sub	r3, r4, #-2147483647	; 0x80000001
   4458c:	sub	r6, r4, #-1073741823	; 0xc0000001
   44590:	mvn	ip, #0
   44594:	mov	r1, #0
   44598:	add	r3, r2, r3, lsl #1
   4459c:	add	r0, r0, r6, lsl #2
   445a0:	strh	ip, [r3, #2]!
   445a4:	add	r4, r4, #1
   445a8:	str	r1, [r0, #4]!
   445ac:	ldr	r2, [r5, #8]
   445b0:	cmp	r2, r4
   445b4:	bhi	445a0 <__assert_fail@plt+0x3319c>
   445b8:	mov	r0, #1
   445bc:	pop	{r4, r5, r6, pc}
   445c0:	cmp	r1, r3
   445c4:	bls	4452c <__assert_fail@plt+0x33128>
   445c8:	mvn	r0, #0
   445cc:	pop	{r4, r5, r6, pc}
   445d0:	mov	r0, #0
   445d4:	pop	{r4, r5, r6, pc}
   445d8:	mov	r2, #5
   445dc:	movw	r1, #40488	; 0x9e28
   445e0:	mov	r0, #0
   445e4:	movt	r1, #7
   445e8:	bl	11170 <dcgettext@plt>
   445ec:	mov	r1, r6
   445f0:	bl	4b2b0 <error@@Base>
   445f4:	mov	r3, #0
   445f8:	mvn	r0, #0
   445fc:	str	r3, [r5, #8]
   44600:	pop	{r4, r5, r6, pc}
   44604:	mov	r2, #5
   44608:	movw	r1, #40528	; 0x9e50
   4460c:	mov	r0, #0
   44610:	movt	r1, #7
   44614:	bl	11170 <dcgettext@plt>
   44618:	ldr	r1, [r5, #8]
   4461c:	bl	4b2b0 <error@@Base>
   44620:	mov	r3, #0
   44624:	mvn	r0, #0
   44628:	str	r3, [r5, #8]
   4462c:	pop	{r4, r5, r6, pc}
   44630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44634:	movw	r4, #16680	; 0x4128
   44638:	movt	r4, #9
   4463c:	sub	sp, sp, #148	; 0x94
   44640:	ldr	r5, [r0, #12]
   44644:	movw	r1, #65052	; 0xfe1c
   44648:	ldr	r2, [r4]
   4464c:	movt	r1, #5
   44650:	ldr	r3, [r0, #24]
   44654:	movw	ip, #26448	; 0x6750
   44658:	str	r0, [sp, #76]	; 0x4c
   4465c:	movt	ip, #9
   44660:	ldr	r0, [r0, #8]
   44664:	add	fp, r5, r3
   44668:	str	r4, [sp, #96]	; 0x60
   4466c:	mov	r4, #0
   44670:	str	r5, [sp, #64]	; 0x40
   44674:	str	ip, [sp, #68]	; 0x44
   44678:	str	r2, [sp, #140]	; 0x8c
   4467c:	str	r5, [sp, #108]	; 0x6c
   44680:	bl	110f8 <strcmp@plt>
   44684:	movw	r5, #24696	; 0x6078
   44688:	movt	r5, #9
   4468c:	mov	r2, #5
   44690:	add	ip, r5, #1600	; 0x640
   44694:	movw	r1, #40588	; 0x9e8c
   44698:	movt	r1, #7
   4469c:	add	ip, ip, #8
   446a0:	str	r4, [sp, #116]	; 0x74
   446a4:	str	r5, [sp, #28]
   446a8:	movw	r5, #26492	; 0x677c
   446ac:	str	r4, [sp, #52]	; 0x34
   446b0:	movt	r5, #9
   446b4:	str	ip, [sp, #100]	; 0x64
   446b8:	str	r4, [sp, #88]	; 0x58
   446bc:	str	r4, [sp, #72]	; 0x48
   446c0:	str	r5, [sp, #84]	; 0x54
   446c4:	subs	r3, r0, r4
   446c8:	rsbs	r0, r3, #0
   446cc:	adcs	r0, r0, r3
   446d0:	str	r0, [sp, #92]	; 0x5c
   446d4:	mov	r0, r4
   446d8:	bl	11170 <dcgettext@plt>
   446dc:	ldr	ip, [sp, #68]	; 0x44
   446e0:	mov	r2, #5
   446e4:	movw	r1, #28648	; 0x6fe8
   446e8:	movt	r1, #7
   446ec:	ldr	ip, [ip]
   446f0:	str	ip, [sp, #80]	; 0x50
   446f4:	str	r0, [sp, #48]	; 0x30
   446f8:	mov	r0, r4
   446fc:	bl	11170 <dcgettext@plt>
   44700:	ldr	r4, [sp, #76]	; 0x4c
   44704:	ldr	r2, [r4, #8]
   44708:	mov	r1, r0
   4470c:	mov	r0, #1
   44710:	bl	1132c <__printf_chk@plt>
   44714:	ldr	r8, [sp, #108]	; 0x6c
   44718:	cmp	fp, r8
   4471c:	bls	44868 <__assert_fail@plt+0x33464>
   44720:	add	r2, r8, #4
   44724:	mov	r3, #1
   44728:	cmp	fp, r2
   4472c:	str	r3, [sp, #124]	; 0x7c
   44730:	mov	r3, #0
   44734:	str	r3, [sp, #128]	; 0x80
   44738:	str	r3, [sp, #132]	; 0x84
   4473c:	bhi	447b4 <__assert_fail@plt+0x333b0>
   44740:	rsb	r1, r8, fp
   44744:	sub	r3, r1, #1
   44748:	cmp	r3, #7
   4474c:	strhi	r2, [sp, #108]	; 0x6c
   44750:	bls	447b8 <__assert_fail@plt+0x333b4>
   44754:	ldr	r4, [sp, #64]	; 0x40
   44758:	movw	r1, #40604	; 0x9e9c
   4475c:	mov	r0, #1
   44760:	movt	r1, #7
   44764:	rsb	r2, r4, r8
   44768:	bl	1132c <__printf_chk@plt>
   4476c:	ldr	r8, [sp, #108]	; 0x6c
   44770:	cmp	r8, fp
   44774:	bcs	44718 <__assert_fail@plt+0x33314>
   44778:	ldrb	r3, [r8]
   4477c:	cmp	r3, #0
   44780:	bne	44718 <__assert_fail@plt+0x33314>
   44784:	add	r3, r8, #1
   44788:	b	4479c <__assert_fail@plt+0x33398>
   4478c:	ldrb	r2, [r3]
   44790:	add	r3, r3, #1
   44794:	cmp	r2, #0
   44798:	bne	44718 <__assert_fail@plt+0x33314>
   4479c:	cmp	r3, fp
   447a0:	str	r3, [sp, #108]	; 0x6c
   447a4:	mov	r8, r3
   447a8:	bne	4478c <__assert_fail@plt+0x33388>
   447ac:	mov	r8, fp
   447b0:	b	44718 <__assert_fail@plt+0x33314>
   447b4:	mov	r1, #4
   447b8:	ldr	r5, [sp, #84]	; 0x54
   447bc:	mov	r0, r8
   447c0:	ldr	r3, [r5]
   447c4:	blx	r3
   447c8:	strd	r0, [sp, #40]	; 0x28
   447cc:	orrs	ip, r0, r1
   447d0:	ldr	r1, [sp, #108]	; 0x6c
   447d4:	add	r0, r1, #4
   447d8:	str	r0, [sp, #108]	; 0x6c
   447dc:	beq	44754 <__assert_fail@plt+0x33350>
   447e0:	ldrd	r4, [sp, #40]	; 0x28
   447e4:	mvn	r2, #0
   447e8:	mov	r3, #0
   447ec:	cmp	r5, r3
   447f0:	cmpeq	r4, r2
   447f4:	beq	465b8 <__assert_fail@plt+0x351b4>
   447f8:	add	sl, r4, #4
   447fc:	mov	r4, #4
   44800:	add	sl, r8, sl
   44804:	cmp	sl, fp
   44808:	movls	r3, #0
   4480c:	movhi	r3, #1
   44810:	cmp	sl, r0
   44814:	orrcc	r3, r3, #1
   44818:	cmp	r3, #0
   4481c:	bne	46584 <__assert_fail@plt+0x35180>
   44820:	add	ip, r0, r4
   44824:	cmp	fp, ip
   44828:	bhi	44890 <__assert_fail@plt+0x3348c>
   4482c:	cmp	fp, r0
   44830:	rsbhi	r1, r0, fp
   44834:	bhi	44894 <__assert_fail@plt+0x33490>
   44838:	ldr	r5, [sp, #92]	; 0x5c
   4483c:	str	ip, [sp, #108]	; 0x6c
   44840:	cmp	r5, #0
   44844:	beq	46418 <__assert_fail@plt+0x35014>
   44848:	mov	r2, #0
   4484c:	mov	r3, #0
   44850:	strd	r2, [sp, #56]	; 0x38
   44854:	cmp	fp, ip
   44858:	mov	r3, #0
   4485c:	str	r3, [sp, #120]	; 0x78
   44860:	bhi	46bd0 <__assert_fail@plt+0x357cc>
   44864:	str	fp, [sp, #108]	; 0x6c
   44868:	mov	r0, #10
   4486c:	bl	112fc <putchar@plt>
   44870:	ldr	ip, [sp, #96]	; 0x60
   44874:	ldr	r2, [sp, #140]	; 0x8c
   44878:	mov	r0, #1
   4487c:	ldr	r3, [ip]
   44880:	cmp	r2, r3
   44884:	bne	4745c <__assert_fail@plt+0x36058>
   44888:	add	sp, sp, #148	; 0x94
   4488c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44890:	mov	r1, r4
   44894:	sub	r3, r1, #1
   44898:	cmp	r3, #7
   4489c:	bhi	44838 <__assert_fail@plt+0x33434>
   448a0:	ldr	ip, [sp, #84]	; 0x54
   448a4:	ldr	r3, [ip]
   448a8:	blx	r3
   448ac:	ldr	r5, [sp, #92]	; 0x5c
   448b0:	ldr	ip, [sp, #108]	; 0x6c
   448b4:	cmp	r5, #0
   448b8:	add	ip, ip, r4
   448bc:	str	ip, [sp, #108]	; 0x6c
   448c0:	strd	r0, [sp, #56]	; 0x38
   448c4:	beq	46424 <__assert_fail@plt+0x35020>
   448c8:	orrs	lr, r0, r1
   448cc:	beq	44854 <__assert_fail@plt+0x33450>
   448d0:	lsl	r3, r4, #3
   448d4:	mov	r2, #1
   448d8:	sub	r3, r3, #1
   448dc:	ldr	lr, [sp, #56]	; 0x38
   448e0:	lsl	r3, r2, r3
   448e4:	sub	r5, r3, #4
   448e8:	eor	r3, r3, lr
   448ec:	rsb	r5, r3, r5
   448f0:	add	r5, ip, r5
   448f4:	cmp	r5, r8
   448f8:	bhi	46478 <__assert_fail@plt+0x35074>
   448fc:	ldr	ip, [sp, #72]	; 0x48
   44900:	cmp	ip, #0
   44904:	str	ip, [sp, #120]	; 0x78
   44908:	beq	4493c <__assert_fail@plt+0x33538>
   4490c:	ldr	r3, [ip, #4]
   44910:	cmp	r3, r5
   44914:	beq	472dc <__assert_fail@plt+0x35ed8>
   44918:	mov	r3, ip
   4491c:	b	4492c <__assert_fail@plt+0x33528>
   44920:	ldr	r2, [r3, #4]
   44924:	cmp	r2, r5
   44928:	beq	4664c <__assert_fail@plt+0x35248>
   4492c:	ldr	r3, [r3]
   44930:	cmp	r3, #0
   44934:	bne	44920 <__assert_fail@plt+0x3351c>
   44938:	str	r3, [sp, #120]	; 0x78
   4493c:	ldr	r0, [pc, #3992]	; 458dc <__assert_fail@plt+0x344d8>
   44940:	mov	r1, #0
   44944:	mov	r2, #72	; 0x48
   44948:	bl	112f0 <memset@plt>
   4494c:	ldrd	r2, [sp, #56]	; 0x38
   44950:	mov	r0, #0
   44954:	str	r4, [sp]
   44958:	movw	r7, #24696	; 0x6078
   4495c:	ldr	r5, [sp, #64]	; 0x40
   44960:	bl	389e0 <__assert_fail@plt+0x275dc>
   44964:	movt	r7, #9
   44968:	rsb	r8, r5, r8
   4496c:	mov	r2, r8
   44970:	mov	r1, r0
   44974:	movw	r0, #41020	; 0xa03c
   44978:	movt	r0, #7
   4497c:	bl	4b9ec <warn@@Base>
   44980:	ldr	ip, [sp, #28]
   44984:	mov	r0, #2
   44988:	mov	r3, #0
   4498c:	str	r3, [ip, #1616]	; 0x650
   44990:	bl	4eba0 <warn@@Base+0x31b4>
   44994:	ldr	r5, [sp, #28]
   44998:	str	r0, [r5, #1620]	; 0x654
   4499c:	mov	r0, #4
   449a0:	bl	4eba0 <warn@@Base+0x31b4>
   449a4:	ldr	r3, [sp, #116]	; 0x74
   449a8:	cmp	r3, #0
   449ac:	subne	r1, r3, #1
   449b0:	moveq	r1, r3
   449b4:	str	r0, [r5, #1624]	; 0x658
   449b8:	ldr	r0, [pc, #3868]	; 458dc <__assert_fail@plt+0x344d8>
   449bc:	bl	44500 <__assert_fail@plt+0x330fc>
   449c0:	cmp	r0, #0
   449c4:	blt	472c0 <__assert_fail@plt+0x35ebc>
   449c8:	ldr	ip, [sp, #68]	; 0x44
   449cc:	mov	r3, #0
   449d0:	ldr	r5, [sp, #100]	; 0x64
   449d4:	mov	r1, r3
   449d8:	ldr	r2, [ip]
   449dc:	ldr	ip, [sp, #28]
   449e0:	str	r5, [sp, #120]	; 0x78
   449e4:	mov	r5, r3
   449e8:	strb	r3, [ip, #1676]	; 0x68c
   449ec:	strb	r3, [ip, #1679]	; 0x68f
   449f0:	movw	r3, #25084	; 0x61fc
   449f4:	strb	r2, [ip, #1678]	; 0x68e
   449f8:	movt	r3, #7
   449fc:	str	r3, [ip, #1628]	; 0x65c
   44a00:	ldr	ip, [sp, #80]	; 0x50
   44a04:	str	ip, [sp, #32]
   44a08:	ldr	ip, [sp, #76]	; 0x4c
   44a0c:	add	r0, sp, #108	; 0x6c
   44a10:	str	fp, [sp]
   44a14:	add	r3, ip, #16
   44a18:	add	r2, ip, #12
   44a1c:	bl	3a0f4 <__assert_fail@plt+0x28cf0>
   44a20:	ldr	ip, [sp, #32]
   44a24:	movw	r3, #1640	; 0x668
   44a28:	cmp	ip, #8
   44a2c:	strd	r0, [r7, r3]
   44a30:	ldrls	r1, [sp, #32]
   44a34:	bhi	46db4 <__assert_fail@plt+0x359b0>
   44a38:	ldr	r0, [sp, #108]	; 0x6c
   44a3c:	add	r3, r0, r1
   44a40:	cmp	fp, r3
   44a44:	bhi	44a54 <__assert_fail@plt+0x33650>
   44a48:	cmp	fp, r0
   44a4c:	bls	44a60 <__assert_fail@plt+0x3365c>
   44a50:	rsb	r1, r0, fp
   44a54:	sub	r3, r1, #1
   44a58:	cmp	r3, #7
   44a5c:	bls	46ddc <__assert_fail@plt+0x359d8>
   44a60:	mov	r1, #1648	; 0x670
   44a64:	mov	ip, r0
   44a68:	mov	r2, #0
   44a6c:	mov	r3, #0
   44a70:	strd	r2, [r7, r1]
   44a74:	ldr	r3, [sp, #120]	; 0x78
   44a78:	ldr	lr, [sp, #32]
   44a7c:	ldr	r3, [r3, #20]
   44a80:	add	r0, ip, lr
   44a84:	str	r0, [sp, #108]	; 0x6c
   44a88:	ldrb	r3, [r3]
   44a8c:	cmp	r3, #122	; 0x7a
   44a90:	beq	46f10 <__assert_fail@plt+0x35b0c>
   44a94:	ldrb	r1, [r7, #1678]	; 0x68e
   44a98:	mov	r0, #0
   44a9c:	ldrd	r2, [sp, #40]	; 0x28
   44aa0:	str	r1, [sp]
   44aa4:	bl	389e0 <__assert_fail@plt+0x275dc>
   44aa8:	ldrd	r2, [sp, #56]	; 0x38
   44aac:	str	r4, [sp]
   44ab0:	mov	r6, r0
   44ab4:	mov	r0, #0
   44ab8:	bl	389e0 <__assert_fail@plt+0x275dc>
   44abc:	ldr	ip, [sp, #120]	; 0x78
   44ac0:	ldr	r4, [sp, #64]	; 0x40
   44ac4:	mov	r3, r6
   44ac8:	mov	r2, r8
   44acc:	movw	r1, #41160	; 0xa0c8
   44ad0:	movt	r1, #7
   44ad4:	str	r0, [sp]
   44ad8:	mov	r0, #1
   44adc:	ldr	ip, [ip, #4]
   44ae0:	rsb	ip, r4, ip
   44ae4:	str	ip, [sp, #4]
   44ae8:	bl	1132c <__printf_chk@plt>
   44aec:	ldrb	r3, [r7, #1679]	; 0x68f
   44af0:	cmp	r3, #0
   44af4:	bne	46d9c <__assert_fail@plt+0x35998>
   44af8:	ldrb	r1, [r7, #1678]	; 0x68e
   44afc:	movw	r4, #1640	; 0x668
   44b00:	ldrd	r2, [r7, r4]
   44b04:	mov	r0, #0
   44b08:	movw	r9, #26476	; 0x676c
   44b0c:	movt	r9, #9
   44b10:	str	r1, [sp]
   44b14:	bl	389e0 <__assert_fail@plt+0x275dc>
   44b18:	mov	r3, #1648	; 0x670
   44b1c:	ldrd	r4, [r4, r7]
   44b20:	ldrd	r2, [r3, r7]
   44b24:	ldrb	r1, [r7, #1678]	; 0x68e
   44b28:	adds	r2, r2, r4
   44b2c:	adc	r3, r3, r5
   44b30:	str	r1, [sp]
   44b34:	mov	r8, r0
   44b38:	mov	r0, #0
   44b3c:	bl	389e0 <__assert_fail@plt+0x275dc>
   44b40:	mov	r2, r8
   44b44:	movw	r1, #41200	; 0xa0f0
   44b48:	movt	r1, #7
   44b4c:	mov	r3, r0
   44b50:	mov	r0, #1
   44b54:	bl	1132c <__printf_chk@plt>
   44b58:	ldr	r4, [r9]
   44b5c:	cmp	r4, #0
   44b60:	bne	44b70 <__assert_fail@plt+0x3376c>
   44b64:	ldr	r3, [sp, #132]	; 0x84
   44b68:	cmp	r3, #0
   44b6c:	bne	46f7c <__assert_fail@plt+0x35b78>
   44b70:	ldr	r6, [pc, #3428]	; 458dc <__assert_fail@plt+0x344d8>
   44b74:	ldr	r7, [sp, #108]	; 0x6c
   44b78:	mov	r4, #7
   44b7c:	mov	r2, r7
   44b80:	cmp	sl, r2
   44b84:	bls	44f00 <__assert_fail@plt+0x33afc>
   44b88:	add	r0, r2, #1
   44b8c:	str	r0, [sp, #108]	; 0x6c
   44b90:	ldrb	ip, [r0, #-1]
   44b94:	ands	r3, ip, #192	; 0xc0
   44b98:	and	r5, ip, #63	; 0x3f
   44b9c:	movne	ip, r3
   44ba0:	sub	ip, ip, #1
   44ba4:	cmp	ip, #191	; 0xbf
   44ba8:	ldrls	pc, [pc, ip, lsl #2]
   44bac:	b	45148 <__assert_fail@plt+0x33d44>
   44bb0:	andeq	r5, r4, r4, lsl r0
   44bb4:	andeq	r5, r4, ip
   44bb8:	andeq	r5, r4, r4
   44bbc:	strdeq	r4, [r4], -r4	; <UNPREDICTABLE>
   44bc0:			; <UNDEFINED> instruction: 0x00044fb0
   44bc4:			; <UNDEFINED> instruction: 0x00044eb0
   44bc8:			; <UNDEFINED> instruction: 0x00044eb0
   44bcc:			; <UNDEFINED> instruction: 0x00044eb0
   44bd0:			; <UNDEFINED> instruction: 0x00044fb0
   44bd4:	andeq	r5, r4, r8, asr #2
   44bd8:	andeq	r5, r4, r8, asr #2
   44bdc:	andeq	r5, r4, r0, asr r1
   44be0:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   44be4:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   44be8:	strdeq	r5, [r4], -r8
   44bec:	andeq	r5, r4, r8, lsl #1
   44bf0:	andeq	r5, r4, r0, rrx
   44bf4:	andeq	r5, r4, r0, lsr #32
   44bf8:	andeq	r5, r4, r4, ror r1
   44bfc:			; <UNDEFINED> instruction: 0x00044fb0
   44c00:	andeq	r5, r4, r0, rrx
   44c04:	andeq	r5, r4, r8, lsl #1
   44c08:	andeq	r5, r4, r8, asr #2
   44c0c:	andeq	r5, r4, r8, asr #2
   44c10:	andeq	r5, r4, r8, asr #2
   44c14:	andeq	r5, r4, r8, asr #2
   44c18:	andeq	r5, r4, r8, asr #2
   44c1c:	andeq	r5, r4, r8, asr #2
   44c20:	strdeq	r4, [r4], -ip
   44c24:	andeq	r5, r4, r8, asr #2
   44c28:	andeq	r5, r4, r8, asr #2
   44c2c:	andeq	r5, r4, r8, asr #2
   44c30:	andeq	r5, r4, r8, asr #2
   44c34:	andeq	r5, r4, r8, asr #2
   44c38:	andeq	r5, r4, r8, asr #2
   44c3c:	andeq	r5, r4, r8, asr #2
   44c40:	andeq	r5, r4, r8, asr #2
   44c44:	andeq	r5, r4, r8, asr #2
   44c48:	andeq	r5, r4, r8, asr #2
   44c4c:	andeq	r5, r4, r8, asr #2
   44c50:	andeq	r5, r4, r8, asr #2
   44c54:	andeq	r5, r4, r8, asr #2
   44c58:	andeq	r5, r4, r8, asr #2
   44c5c:	andeq	r5, r4, r8, asr #2
   44c60:	andeq	r5, r4, r8, asr #2
   44c64:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   44c68:			; <UNDEFINED> instruction: 0x00044fb0
   44c6c:	andeq	r5, r4, r8, asr #2
   44c70:	andeq	r5, r4, r8, asr #2
   44c74:	andeq	r5, r4, r8, asr #2
   44c78:	andeq	r5, r4, r8, asr #2
   44c7c:	andeq	r5, r4, r8, asr #2
   44c80:	andeq	r5, r4, r8, asr #2
   44c84:	andeq	r5, r4, r8, asr #2
   44c88:	andeq	r5, r4, r8, asr #2
   44c8c:	andeq	r5, r4, r8, asr #2
   44c90:	andeq	r5, r4, r8, asr #2
   44c94:	andeq	r5, r4, r8, asr #2
   44c98:	andeq	r5, r4, r8, asr #2
   44c9c:	andeq	r5, r4, r8, asr #2
   44ca0:	andeq	r5, r4, r8, asr #2
   44ca4:	andeq	r5, r4, r8, asr #2
   44ca8:	andeq	r5, r4, r8, asr #2
   44cac:	andeq	r5, r4, r8, asr #2
   44cb0:	andeq	r5, r4, r8, asr #2
   44cb4:	andeq	r5, r4, r8, asr #2
   44cb8:	andeq	r5, r4, r8, asr #2
   44cbc:	andeq	r5, r4, r8, asr #2
   44cc0:	andeq	r5, r4, r8, asr #2
   44cc4:	andeq	r5, r4, r8, asr #2
   44cc8:	andeq	r5, r4, r8, asr #2
   44ccc:	andeq	r5, r4, r8, asr #2
   44cd0:	andeq	r5, r4, r8, asr #2
   44cd4:	andeq	r5, r4, r8, asr #2
   44cd8:	andeq	r5, r4, r8, asr #2
   44cdc:	andeq	r5, r4, r8, asr #2
   44ce0:	andeq	r5, r4, r8, asr #2
   44ce4:	andeq	r5, r4, r8, asr #2
   44ce8:	andeq	r5, r4, r8, asr #2
   44cec:	andeq	r5, r4, r8, asr #2
   44cf0:	andeq	r5, r4, r8, asr #2
   44cf4:	andeq	r5, r4, r8, asr #2
   44cf8:	andeq	r5, r4, r8, asr #2
   44cfc:	andeq	r5, r4, r8, asr #2
   44d00:	andeq	r5, r4, r8, asr #2
   44d04:	andeq	r5, r4, r8, asr #2
   44d08:	andeq	r5, r4, r8, asr #2
   44d0c:	andeq	r5, r4, r8, asr #2
   44d10:	andeq	r5, r4, r8, asr #2
   44d14:	andeq	r5, r4, r8, asr #2
   44d18:	andeq	r5, r4, r8, asr #2
   44d1c:	andeq	r5, r4, r8, asr #2
   44d20:	andeq	r5, r4, r8, asr #2
   44d24:	andeq	r5, r4, r8, asr #2
   44d28:	andeq	r5, r4, r8, asr #2
   44d2c:	andeq	r5, r4, r8, asr #2
   44d30:	andeq	r5, r4, r8, asr #2
   44d34:	andeq	r5, r4, r8, asr #2
   44d38:	andeq	r5, r4, r8, asr #2
   44d3c:	andeq	r5, r4, r8, asr #2
   44d40:	andeq	r5, r4, r8, asr #2
   44d44:	andeq	r5, r4, r8, asr #2
   44d48:	andeq	r5, r4, r8, asr #2
   44d4c:	andeq	r5, r4, r8, asr #2
   44d50:	andeq	r5, r4, r8, asr #2
   44d54:	andeq	r5, r4, r8, asr #2
   44d58:	andeq	r5, r4, r8, asr #2
   44d5c:	andeq	r5, r4, r8, asr #2
   44d60:	andeq	r5, r4, r8, asr #2
   44d64:	andeq	r5, r4, r8, asr #2
   44d68:	andeq	r5, r4, r8, asr #2
   44d6c:	andeq	r5, r4, r8, asr #2
   44d70:	andeq	r5, r4, r8, asr #2
   44d74:	andeq	r5, r4, r8, asr #2
   44d78:	andeq	r5, r4, r8, asr #2
   44d7c:	andeq	r5, r4, r8, asr #2
   44d80:	andeq	r5, r4, r8, asr #2
   44d84:	andeq	r5, r4, r8, asr #2
   44d88:	andeq	r5, r4, r8, asr #2
   44d8c:	andeq	r5, r4, r8, asr #2
   44d90:	andeq	r5, r4, r8, asr #2
   44d94:	andeq	r5, r4, r8, asr #2
   44d98:	andeq	r5, r4, r8, asr #2
   44d9c:	andeq	r5, r4, r8, asr #2
   44da0:	andeq	r5, r4, r8, asr #2
   44da4:	andeq	r5, r4, r8, asr #2
   44da8:	andeq	r5, r4, r8, asr #2
   44dac:	andeq	r5, r4, r0, lsl #3
   44db0:	andeq	r5, r4, r8, asr #2
   44db4:	andeq	r5, r4, r8, asr #2
   44db8:	andeq	r5, r4, r8, asr #2
   44dbc:	andeq	r5, r4, r8, asr #2
   44dc0:	andeq	r5, r4, r8, asr #2
   44dc4:	andeq	r5, r4, r8, asr #2
   44dc8:	andeq	r5, r4, r8, asr #2
   44dcc:	andeq	r5, r4, r8, asr #2
   44dd0:	andeq	r5, r4, r8, asr #2
   44dd4:	andeq	r5, r4, r8, asr #2
   44dd8:	andeq	r5, r4, r8, asr #2
   44ddc:	andeq	r5, r4, r8, asr #2
   44de0:	andeq	r5, r4, r8, asr #2
   44de4:	andeq	r5, r4, r8, asr #2
   44de8:	andeq	r5, r4, r8, asr #2
   44dec:	andeq	r5, r4, r8, asr #2
   44df0:	andeq	r5, r4, r8, asr #2
   44df4:	andeq	r5, r4, r8, asr #2
   44df8:	andeq	r5, r4, r8, asr #2
   44dfc:	andeq	r5, r4, r8, asr #2
   44e00:	andeq	r5, r4, r8, asr #2
   44e04:	andeq	r5, r4, r8, asr #2
   44e08:	andeq	r5, r4, r8, asr #2
   44e0c:	andeq	r5, r4, r8, asr #2
   44e10:	andeq	r5, r4, r8, asr #2
   44e14:	andeq	r5, r4, r8, asr #2
   44e18:	andeq	r5, r4, r8, asr #2
   44e1c:	andeq	r5, r4, r8, asr #2
   44e20:	andeq	r5, r4, r8, asr #2
   44e24:	andeq	r5, r4, r8, asr #2
   44e28:	andeq	r5, r4, r8, asr #2
   44e2c:	andeq	r5, r4, r8, asr #2
   44e30:	andeq	r5, r4, r8, asr #2
   44e34:	andeq	r5, r4, r8, asr #2
   44e38:	andeq	r5, r4, r8, asr #2
   44e3c:	andeq	r5, r4, r8, asr #2
   44e40:	andeq	r5, r4, r8, asr #2
   44e44:	andeq	r5, r4, r8, asr #2
   44e48:	andeq	r5, r4, r8, asr #2
   44e4c:	andeq	r5, r4, r8, asr #2
   44e50:	andeq	r5, r4, r8, asr #2
   44e54:	andeq	r5, r4, r8, asr #2
   44e58:	andeq	r5, r4, r8, asr #2
   44e5c:	andeq	r5, r4, r8, asr #2
   44e60:	andeq	r5, r4, r8, asr #2
   44e64:	andeq	r5, r4, r8, asr #2
   44e68:	andeq	r5, r4, r8, asr #2
   44e6c:	andeq	r5, r4, r8, asr #2
   44e70:	andeq	r5, r4, r8, asr #2
   44e74:	andeq	r5, r4, r8, asr #2
   44e78:	andeq	r5, r4, r8, asr #2
   44e7c:	andeq	r5, r4, r8, asr #2
   44e80:	andeq	r5, r4, r8, asr #2
   44e84:	andeq	r5, r4, r8, asr #2
   44e88:	andeq	r5, r4, r8, asr #2
   44e8c:	andeq	r5, r4, r8, asr #2
   44e90:	andeq	r5, r4, r8, asr #2
   44e94:	andeq	r5, r4, r8, asr #2
   44e98:	andeq	r5, r4, r8, asr #2
   44e9c:	andeq	r5, r4, r8, asr #2
   44ea0:	andeq	r5, r4, r8, asr #2
   44ea4:	andeq	r5, r4, r8, asr #2
   44ea8:	andeq	r5, r4, r8, asr #2
   44eac:	ldrdeq	r5, [r4], -ip
   44eb0:	mov	r2, #0
   44eb4:	mov	r3, fp
   44eb8:	add	r1, sp, #112	; 0x70
   44ebc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   44ec0:	ldr	r2, [sp, #108]	; 0x6c
   44ec4:	ldr	r3, [sp, #112]	; 0x70
   44ec8:	mov	r5, r0
   44ecc:	mov	r1, r0
   44ed0:	mov	r0, r6
   44ed4:	add	r3, r2, r3
   44ed8:	str	r3, [sp, #108]	; 0x6c
   44edc:	bl	44500 <__assert_fail@plt+0x330fc>
   44ee0:	cmp	r0, #0
   44ee4:	blt	450f0 <__assert_fail@plt+0x33cec>
   44ee8:	ldr	r2, [sp, #108]	; 0x6c
   44eec:	lsl	r5, r5, #1
   44ef0:	ldr	r3, [r6, #12]
   44ef4:	cmp	sl, r2
   44ef8:	strh	r4, [r3, r5]
   44efc:	bhi	44b88 <__assert_fail@plt+0x33784>
   44f00:	movw	r8, #25084	; 0x61fc
   44f04:	movt	r8, #7
   44f08:	str	r7, [sp, #108]	; 0x6c
   44f0c:	mov	ip, r7
   44f10:	mov	r7, #1
   44f14:	cmp	sl, ip
   44f18:	bls	44f64 <__assert_fail@plt+0x33b60>
   44f1c:	add	r0, ip, #1
   44f20:	str	r0, [sp, #108]	; 0x6c
   44f24:	ldrb	r4, [ip]
   44f28:	ands	r5, r4, #192	; 0xc0
   44f2c:	bne	451a4 <__assert_fail@plt+0x33da0>
   44f30:	cmp	r4, #0
   44f34:	mov	r5, r4
   44f38:	bne	451a4 <__assert_fail@plt+0x33da0>
   44f3c:	ldr	r3, [r9]
   44f40:	cmp	r3, #0
   44f44:	movne	ip, r0
   44f48:	bne	44f14 <__assert_fail@plt+0x33b10>
   44f4c:	movw	r0, #41932	; 0xa3cc
   44f50:	movt	r0, #7
   44f54:	bl	11218 <puts@plt>
   44f58:	ldr	ip, [sp, #108]	; 0x6c
   44f5c:	cmp	sl, ip
   44f60:	bhi	44f1c <__assert_fail@plt+0x33b18>
   44f64:	ldr	r3, [r9]
   44f68:	cmp	r3, #0
   44f6c:	beq	44f78 <__assert_fail@plt+0x33b74>
   44f70:	cmp	r7, #0
   44f74:	beq	46d88 <__assert_fail@plt+0x35984>
   44f78:	ldr	r4, [sp, #80]	; 0x50
   44f7c:	mov	r8, sl
   44f80:	ldr	r5, [sp, #68]	; 0x44
   44f84:	str	sl, [sp, #108]	; 0x6c
   44f88:	str	r4, [r5]
   44f8c:	b	44718 <__assert_fail@plt+0x33314>
   44f90:	add	r1, sp, #112	; 0x70
   44f94:	mov	r2, #0
   44f98:	mov	r3, fp
   44f9c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   44fa0:	ldr	r2, [sp, #108]	; 0x6c
   44fa4:	ldr	r3, [sp, #112]	; 0x70
   44fa8:	add	r2, r2, r3
   44fac:	b	44b80 <__assert_fail@plt+0x3377c>
   44fb0:	mov	r2, #0
   44fb4:	mov	r3, fp
   44fb8:	add	r1, sp, #112	; 0x70
   44fbc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   44fc0:	ldr	r3, [sp, #112]	; 0x70
   44fc4:	add	r1, sp, #112	; 0x70
   44fc8:	mov	r2, #0
   44fcc:	mov	r5, r0
   44fd0:	ldr	r0, [sp, #108]	; 0x6c
   44fd4:	add	r0, r0, r3
   44fd8:	mov	r3, fp
   44fdc:	str	r0, [sp, #108]	; 0x6c
   44fe0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   44fe4:	ldr	r2, [sp, #108]	; 0x6c
   44fe8:	mov	r1, r5
   44fec:	ldr	r3, [sp, #112]	; 0x70
   44ff0:	b	44ed0 <__assert_fail@plt+0x33acc>
   44ff4:	add	r2, r2, #5
   44ff8:	b	44b80 <__assert_fail@plt+0x3377c>
   44ffc:	add	r2, r2, #9
   45000:	b	44b80 <__assert_fail@plt+0x3377c>
   45004:	add	r2, r2, #3
   45008:	b	44b80 <__assert_fail@plt+0x3377c>
   4500c:	add	r2, r2, #2
   45010:	b	44b80 <__assert_fail@plt+0x3377c>
   45014:	ldr	r5, [sp, #32]
   45018:	add	r2, r0, r5
   4501c:	b	44b80 <__assert_fail@plt+0x3377c>
   45020:	mov	r2, #0
   45024:	add	r1, sp, #112	; 0x70
   45028:	mov	r3, fp
   4502c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45030:	ldr	ip, [sp, #108]	; 0x6c
   45034:	ldr	r0, [sp, #112]	; 0x70
   45038:	add	r1, sp, #112	; 0x70
   4503c:	mov	r2, #1
   45040:	mov	r3, fp
   45044:	add	r0, ip, r0
   45048:	str	r0, [sp, #108]	; 0x6c
   4504c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45050:	ldr	r2, [sp, #108]	; 0x6c
   45054:	ldr	r3, [sp, #112]	; 0x70
   45058:	add	r2, r2, r3
   4505c:	b	44b80 <__assert_fail@plt+0x3377c>
   45060:	mov	r2, #0
   45064:	mov	r3, fp
   45068:	add	r1, sp, #112	; 0x70
   4506c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45070:	add	r1, sp, #112	; 0x70
   45074:	ldr	r3, [sp, #112]	; 0x70
   45078:	mov	r2, #1
   4507c:	mov	r5, r0
   45080:	ldr	r0, [sp, #108]	; 0x6c
   45084:	b	44fd4 <__assert_fail@plt+0x33bd0>
   45088:	mov	r2, #0
   4508c:	mov	r3, fp
   45090:	add	r1, sp, #112	; 0x70
   45094:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45098:	ldr	r3, [sp, #112]	; 0x70
   4509c:	mov	r2, #0
   450a0:	add	r1, sp, #112	; 0x70
   450a4:	mov	r5, r0
   450a8:	ldr	r0, [sp, #108]	; 0x6c
   450ac:	add	r0, r0, r3
   450b0:	mov	r3, fp
   450b4:	str	r0, [sp, #108]	; 0x6c
   450b8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   450bc:	ldr	r2, [sp, #108]	; 0x6c
   450c0:	ldr	r3, [sp, #112]	; 0x70
   450c4:	add	r3, r2, r3
   450c8:	str	r3, [sp, #108]	; 0x6c
   450cc:	adds	r3, r3, r0
   450d0:	mov	r8, r0
   450d4:	strcc	r3, [sp, #108]	; 0x6c
   450d8:	bcs	463f4 <__assert_fail@plt+0x34ff0>
   450dc:	mov	r0, r6
   450e0:	mov	r1, r5
   450e4:	bl	44500 <__assert_fail@plt+0x330fc>
   450e8:	cmp	r0, #0
   450ec:	bge	44ee8 <__assert_fail@plt+0x33ae4>
   450f0:	ldr	r2, [sp, #108]	; 0x6c
   450f4:	b	44b80 <__assert_fail@plt+0x3377c>
   450f8:	mov	r2, #0
   450fc:	mov	r3, fp
   45100:	add	r1, sp, #112	; 0x70
   45104:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45108:	ldr	r2, [sp, #108]	; 0x6c
   4510c:	ldr	r3, [sp, #112]	; 0x70
   45110:	add	r2, r2, r3
   45114:	str	r2, [sp, #108]	; 0x6c
   45118:	adds	r2, r2, r0
   4511c:	mov	r5, r0
   45120:	bcc	44b80 <__assert_fail@plt+0x3377c>
   45124:	mov	r2, #5
   45128:	movw	r1, #41208	; 0xa0f8
   4512c:	mov	r0, #0
   45130:	movt	r1, #7
   45134:	bl	11170 <dcgettext@plt>
   45138:	mov	r1, r5
   4513c:	bl	4b9ec <warn@@Base>
   45140:	mov	r2, sl
   45144:	b	44b80 <__assert_fail@plt+0x3377c>
   45148:	mov	r2, r0
   4514c:	b	44b80 <__assert_fail@plt+0x3377c>
   45150:	mov	r2, #0
   45154:	add	r1, sp, #112	; 0x70
   45158:	mov	r3, fp
   4515c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45160:	ldr	ip, [sp, #108]	; 0x6c
   45164:	ldr	r0, [sp, #112]	; 0x70
   45168:	add	r1, sp, #112	; 0x70
   4516c:	mov	r2, #0
   45170:	b	45040 <__assert_fail@plt+0x33c3c>
   45174:	add	r1, sp, #112	; 0x70
   45178:	mov	r2, #1
   4517c:	b	44f98 <__assert_fail@plt+0x33b94>
   45180:	mov	r2, #0
   45184:	mov	r3, fp
   45188:	add	r1, sp, #112	; 0x70
   4518c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45190:	ldr	r2, [sp, #108]	; 0x6c
   45194:	ldr	r3, [sp, #112]	; 0x70
   45198:	mov	r0, r6
   4519c:	mov	r1, r5
   451a0:	b	44ed4 <__assert_fail@plt+0x33ad0>
   451a4:	sub	r3, r5, #1
   451a8:	and	r4, r4, #63	; 0x3f
   451ac:	cmp	r3, #191	; 0xbf
   451b0:	ldrls	pc, [pc, r3, lsl #2]
   451b4:	b	463b4 <__assert_fail@plt+0x34fb0>
   451b8:	andeq	r5, r4, ip, ror sp
   451bc:	andeq	r6, r4, ip, ror #3
   451c0:	andeq	r5, r4, r0, lsl #29
   451c4:	andeq	r5, r4, r8, asr #30
   451c8:	andeq	r5, r4, r0, ror #24
   451cc:	andeq	r6, r4, r8, lsl #5
   451d0:	andeq	r5, r4, r4, ror #31
   451d4:	andeq	r6, r4, r8, asr r0
   451d8:	andeq	r5, r4, r8, ror #25
   451dc:	andeq	r6, r4, r4, lsl r3
   451e0:	andeq	r5, r4, ip, asr #27
   451e4:	andeq	r6, r4, ip, asr r1
   451e8:	andeq	r5, r4, r0, lsl #24
   451ec:			; <UNDEFINED> instruction: 0x00045bb0
   451f0:	andeq	r5, r4, r8, lsr #21
   451f4:	andeq	r5, r4, r4, lsl #22
   451f8:	andeq	r5, r4, r0, ror #17
   451fc:	andeq	r5, r4, r0, lsl #20
   45200:	andeq	r5, r4, r0, lsr #19
   45204:	andeq	r5, r4, r4, asr r8
   45208:	andeq	r5, r4, r8, asr #15
   4520c:	andeq	r5, r4, r8, lsl #14
   45210:			; <UNDEFINED> instruction: 0x000463b4
   45214:			; <UNDEFINED> instruction: 0x000463b4
   45218:			; <UNDEFINED> instruction: 0x000463b4
   4521c:			; <UNDEFINED> instruction: 0x000463b4
   45220:			; <UNDEFINED> instruction: 0x000463b4
   45224:			; <UNDEFINED> instruction: 0x000463b4
   45228:	andeq	r5, r4, r8, asr r6
   4522c:			; <UNDEFINED> instruction: 0x000463b4
   45230:			; <UNDEFINED> instruction: 0x000463b4
   45234:			; <UNDEFINED> instruction: 0x000463b4
   45238:			; <UNDEFINED> instruction: 0x000463b4
   4523c:			; <UNDEFINED> instruction: 0x000463b4
   45240:			; <UNDEFINED> instruction: 0x000463b4
   45244:			; <UNDEFINED> instruction: 0x000463b4
   45248:			; <UNDEFINED> instruction: 0x000463b4
   4524c:			; <UNDEFINED> instruction: 0x000463b4
   45250:			; <UNDEFINED> instruction: 0x000463b4
   45254:			; <UNDEFINED> instruction: 0x000463b4
   45258:			; <UNDEFINED> instruction: 0x000463b4
   4525c:			; <UNDEFINED> instruction: 0x000463b4
   45260:			; <UNDEFINED> instruction: 0x000463b4
   45264:			; <UNDEFINED> instruction: 0x000463b4
   45268:	andeq	r5, r4, r0, ror #13
   4526c:	andeq	r5, r4, r4, lsr #12
   45270:	andeq	r5, r4, r4, ror r5
   45274:			; <UNDEFINED> instruction: 0x000463b4
   45278:			; <UNDEFINED> instruction: 0x000463b4
   4527c:			; <UNDEFINED> instruction: 0x000463b4
   45280:			; <UNDEFINED> instruction: 0x000463b4
   45284:			; <UNDEFINED> instruction: 0x000463b4
   45288:			; <UNDEFINED> instruction: 0x000463b4
   4528c:			; <UNDEFINED> instruction: 0x000463b4
   45290:			; <UNDEFINED> instruction: 0x000463b4
   45294:			; <UNDEFINED> instruction: 0x000463b4
   45298:			; <UNDEFINED> instruction: 0x000463b4
   4529c:			; <UNDEFINED> instruction: 0x000463b4
   452a0:			; <UNDEFINED> instruction: 0x000463b4
   452a4:			; <UNDEFINED> instruction: 0x000463b4
   452a8:			; <UNDEFINED> instruction: 0x000463b4
   452ac:			; <UNDEFINED> instruction: 0x000463b4
   452b0:			; <UNDEFINED> instruction: 0x000463b4
   452b4:	andeq	r5, r4, r4, lsr r5
   452b8:			; <UNDEFINED> instruction: 0x000463b4
   452bc:			; <UNDEFINED> instruction: 0x000463b4
   452c0:			; <UNDEFINED> instruction: 0x000463b4
   452c4:			; <UNDEFINED> instruction: 0x000463b4
   452c8:			; <UNDEFINED> instruction: 0x000463b4
   452cc:			; <UNDEFINED> instruction: 0x000463b4
   452d0:			; <UNDEFINED> instruction: 0x000463b4
   452d4:			; <UNDEFINED> instruction: 0x000463b4
   452d8:			; <UNDEFINED> instruction: 0x000463b4
   452dc:			; <UNDEFINED> instruction: 0x000463b4
   452e0:			; <UNDEFINED> instruction: 0x000463b4
   452e4:			; <UNDEFINED> instruction: 0x000463b4
   452e8:			; <UNDEFINED> instruction: 0x000463b4
   452ec:			; <UNDEFINED> instruction: 0x000463b4
   452f0:			; <UNDEFINED> instruction: 0x000463b4
   452f4:			; <UNDEFINED> instruction: 0x000463b4
   452f8:			; <UNDEFINED> instruction: 0x000463b4
   452fc:			; <UNDEFINED> instruction: 0x000463b4
   45300:			; <UNDEFINED> instruction: 0x000463b4
   45304:			; <UNDEFINED> instruction: 0x000463b4
   45308:			; <UNDEFINED> instruction: 0x000463b4
   4530c:			; <UNDEFINED> instruction: 0x000463b4
   45310:			; <UNDEFINED> instruction: 0x000463b4
   45314:			; <UNDEFINED> instruction: 0x000463b4
   45318:			; <UNDEFINED> instruction: 0x000463b4
   4531c:			; <UNDEFINED> instruction: 0x000463b4
   45320:			; <UNDEFINED> instruction: 0x000463b4
   45324:			; <UNDEFINED> instruction: 0x000463b4
   45328:			; <UNDEFINED> instruction: 0x000463b4
   4532c:			; <UNDEFINED> instruction: 0x000463b4
   45330:			; <UNDEFINED> instruction: 0x000463b4
   45334:			; <UNDEFINED> instruction: 0x000463b4
   45338:			; <UNDEFINED> instruction: 0x000463b4
   4533c:			; <UNDEFINED> instruction: 0x000463b4
   45340:			; <UNDEFINED> instruction: 0x000463b4
   45344:			; <UNDEFINED> instruction: 0x000463b4
   45348:			; <UNDEFINED> instruction: 0x000463b4
   4534c:			; <UNDEFINED> instruction: 0x000463b4
   45350:			; <UNDEFINED> instruction: 0x000463b4
   45354:			; <UNDEFINED> instruction: 0x000463b4
   45358:			; <UNDEFINED> instruction: 0x000463b4
   4535c:			; <UNDEFINED> instruction: 0x000463b4
   45360:			; <UNDEFINED> instruction: 0x000463b4
   45364:			; <UNDEFINED> instruction: 0x000463b4
   45368:			; <UNDEFINED> instruction: 0x000463b4
   4536c:			; <UNDEFINED> instruction: 0x000463b4
   45370:			; <UNDEFINED> instruction: 0x000463b4
   45374:			; <UNDEFINED> instruction: 0x000463b4
   45378:			; <UNDEFINED> instruction: 0x000463b4
   4537c:			; <UNDEFINED> instruction: 0x000463b4
   45380:			; <UNDEFINED> instruction: 0x000463b4
   45384:			; <UNDEFINED> instruction: 0x000463b4
   45388:			; <UNDEFINED> instruction: 0x000463b4
   4538c:			; <UNDEFINED> instruction: 0x000463b4
   45390:			; <UNDEFINED> instruction: 0x000463b4
   45394:			; <UNDEFINED> instruction: 0x000463b4
   45398:			; <UNDEFINED> instruction: 0x000463b4
   4539c:			; <UNDEFINED> instruction: 0x000463b4
   453a0:			; <UNDEFINED> instruction: 0x000463b4
   453a4:			; <UNDEFINED> instruction: 0x000463b4
   453a8:			; <UNDEFINED> instruction: 0x000463b4
   453ac:			; <UNDEFINED> instruction: 0x000463b4
   453b0:			; <UNDEFINED> instruction: 0x000463b4
   453b4:			; <UNDEFINED> instruction: 0x000454b8
   453b8:			; <UNDEFINED> instruction: 0x000463b4
   453bc:			; <UNDEFINED> instruction: 0x000463b4
   453c0:			; <UNDEFINED> instruction: 0x000463b4
   453c4:			; <UNDEFINED> instruction: 0x000463b4
   453c8:			; <UNDEFINED> instruction: 0x000463b4
   453cc:			; <UNDEFINED> instruction: 0x000463b4
   453d0:			; <UNDEFINED> instruction: 0x000463b4
   453d4:			; <UNDEFINED> instruction: 0x000463b4
   453d8:			; <UNDEFINED> instruction: 0x000463b4
   453dc:			; <UNDEFINED> instruction: 0x000463b4
   453e0:			; <UNDEFINED> instruction: 0x000463b4
   453e4:			; <UNDEFINED> instruction: 0x000463b4
   453e8:			; <UNDEFINED> instruction: 0x000463b4
   453ec:			; <UNDEFINED> instruction: 0x000463b4
   453f0:			; <UNDEFINED> instruction: 0x000463b4
   453f4:			; <UNDEFINED> instruction: 0x000463b4
   453f8:			; <UNDEFINED> instruction: 0x000463b4
   453fc:			; <UNDEFINED> instruction: 0x000463b4
   45400:			; <UNDEFINED> instruction: 0x000463b4
   45404:			; <UNDEFINED> instruction: 0x000463b4
   45408:			; <UNDEFINED> instruction: 0x000463b4
   4540c:			; <UNDEFINED> instruction: 0x000463b4
   45410:			; <UNDEFINED> instruction: 0x000463b4
   45414:			; <UNDEFINED> instruction: 0x000463b4
   45418:			; <UNDEFINED> instruction: 0x000463b4
   4541c:			; <UNDEFINED> instruction: 0x000463b4
   45420:			; <UNDEFINED> instruction: 0x000463b4
   45424:			; <UNDEFINED> instruction: 0x000463b4
   45428:			; <UNDEFINED> instruction: 0x000463b4
   4542c:			; <UNDEFINED> instruction: 0x000463b4
   45430:			; <UNDEFINED> instruction: 0x000463b4
   45434:			; <UNDEFINED> instruction: 0x000463b4
   45438:			; <UNDEFINED> instruction: 0x000463b4
   4543c:			; <UNDEFINED> instruction: 0x000463b4
   45440:			; <UNDEFINED> instruction: 0x000463b4
   45444:			; <UNDEFINED> instruction: 0x000463b4
   45448:			; <UNDEFINED> instruction: 0x000463b4
   4544c:			; <UNDEFINED> instruction: 0x000463b4
   45450:			; <UNDEFINED> instruction: 0x000463b4
   45454:			; <UNDEFINED> instruction: 0x000463b4
   45458:			; <UNDEFINED> instruction: 0x000463b4
   4545c:			; <UNDEFINED> instruction: 0x000463b4
   45460:			; <UNDEFINED> instruction: 0x000463b4
   45464:			; <UNDEFINED> instruction: 0x000463b4
   45468:			; <UNDEFINED> instruction: 0x000463b4
   4546c:			; <UNDEFINED> instruction: 0x000463b4
   45470:			; <UNDEFINED> instruction: 0x000463b4
   45474:			; <UNDEFINED> instruction: 0x000463b4
   45478:			; <UNDEFINED> instruction: 0x000463b4
   4547c:			; <UNDEFINED> instruction: 0x000463b4
   45480:			; <UNDEFINED> instruction: 0x000463b4
   45484:			; <UNDEFINED> instruction: 0x000463b4
   45488:			; <UNDEFINED> instruction: 0x000463b4
   4548c:			; <UNDEFINED> instruction: 0x000463b4
   45490:			; <UNDEFINED> instruction: 0x000463b4
   45494:			; <UNDEFINED> instruction: 0x000463b4
   45498:			; <UNDEFINED> instruction: 0x000463b4
   4549c:			; <UNDEFINED> instruction: 0x000463b4
   454a0:			; <UNDEFINED> instruction: 0x000463b4
   454a4:			; <UNDEFINED> instruction: 0x000463b4
   454a8:			; <UNDEFINED> instruction: 0x000463b4
   454ac:			; <UNDEFINED> instruction: 0x000463b4
   454b0:			; <UNDEFINED> instruction: 0x000463b4
   454b4:	andeq	r6, r4, ip, asr #1
   454b8:	mov	r2, #0
   454bc:	mov	r3, fp
   454c0:	add	r1, sp, #112	; 0x70
   454c4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   454c8:	ldr	r7, [r6, #8]
   454cc:	ldr	ip, [sp, #48]	; 0x30
   454d0:	cmp	r4, r7
   454d4:	ldr	r2, [r9]
   454d8:	ldr	r3, [sp, #112]	; 0x70
   454dc:	movcc	ip, r8
   454e0:	cmp	r2, #0
   454e4:	mov	r7, ip
   454e8:	ldr	ip, [sp, #108]	; 0x6c
   454ec:	add	ip, ip, r3
   454f0:	str	ip, [sp, #108]	; 0x6c
   454f4:	mov	r5, r0
   454f8:	beq	4689c <__assert_fail@plt+0x35498>
   454fc:	ldrb	r3, [r7]
   45500:	cmp	r3, #0
   45504:	bne	4689c <__assert_fail@plt+0x35498>
   45508:	sxth	r4, r4
   4550c:	ldr	r3, [r6, #28]
   45510:	ldr	r1, [r6, #12]
   45514:	mov	r0, #128	; 0x80
   45518:	lsl	r2, r4, #1
   4551c:	mul	r5, r3, r5
   45520:	ldr	r3, [r6, #16]
   45524:	mov	r7, #0
   45528:	strh	r0, [r1, r2]
   4552c:	str	r5, [r3, r4, lsl #2]
   45530:	b	44f14 <__assert_fail@plt+0x33b10>
   45534:	ldr	r0, [r9]
   45538:	cmp	r0, #0
   4553c:	beq	46ae0 <__assert_fail@plt+0x356dc>
   45540:	mov	r0, r6
   45544:	add	r1, sp, #124	; 0x7c
   45548:	add	r2, sp, #116	; 0x74
   4554c:	bl	39a0c <__assert_fail@plt+0x28608>
   45550:	ldr	r1, [r6, #24]
   45554:	mov	r7, #0
   45558:	ldrd	r2, [r6, #32]
   4555c:	ldr	ip, [sp, #108]	; 0x6c
   45560:	mul	r4, r1, r4
   45564:	adds	r2, r2, r4
   45568:	adc	r3, r3, #0
   4556c:	strd	r2, [r6, #32]
   45570:	b	44f14 <__assert_fail@plt+0x33b10>
   45574:	mov	r2, #0
   45578:	mov	r3, fp
   4557c:	add	r1, sp, #112	; 0x70
   45580:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45584:	ldr	ip, [sp, #108]	; 0x6c
   45588:	mov	r2, #0
   4558c:	mov	r3, fp
   45590:	add	r1, sp, #112	; 0x70
   45594:	mov	r4, r0
   45598:	ldr	r0, [sp, #112]	; 0x70
   4559c:	add	r0, ip, r0
   455a0:	str	r0, [sp, #108]	; 0x6c
   455a4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   455a8:	ldr	r2, [sp, #108]	; 0x6c
   455ac:	ldr	r3, [sp, #112]	; 0x70
   455b0:	add	r3, r2, r3
   455b4:	str	r3, [sp, #108]	; 0x6c
   455b8:	rsbs	r2, r0, #0
   455bc:	rsc	r3, r1, #0
   455c0:	mov	r1, r4
   455c4:	mov	r0, r6
   455c8:	strd	r2, [sp, #32]
   455cc:	bl	44500 <__assert_fail@plt+0x330fc>
   455d0:	ldr	r3, [r9]
   455d4:	ldr	r5, [sp, #48]	; 0x30
   455d8:	cmp	r0, #0
   455dc:	movge	r5, r8
   455e0:	cmp	r3, #0
   455e4:	beq	467e4 <__assert_fail@plt+0x353e0>
   455e8:	ldrb	r3, [r5]
   455ec:	cmp	r3, #0
   455f0:	bne	467e4 <__assert_fail@plt+0x353e0>
   455f4:	ldr	r7, [sp, #32]
   455f8:	ldr	r2, [r6, #28]
   455fc:	lsl	r1, r4, #1
   45600:	ldr	r0, [r6, #12]
   45604:	mov	ip, #128	; 0x80
   45608:	mul	r2, r2, r7
   4560c:	ldr	r3, [r6, #16]
   45610:	mov	r7, #0
   45614:	strh	ip, [r0, r1]
   45618:	ldr	ip, [sp, #108]	; 0x6c
   4561c:	str	r2, [r3, r4, lsl #2]
   45620:	b	44f14 <__assert_fail@plt+0x33b10>
   45624:	mov	r3, fp
   45628:	add	r1, sp, #112	; 0x70
   4562c:	mov	r2, #0
   45630:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45634:	ldr	r7, [r9]
   45638:	ldr	ip, [sp, #108]	; 0x6c
   4563c:	ldr	r3, [sp, #112]	; 0x70
   45640:	cmp	r7, #0
   45644:	add	ip, ip, r3
   45648:	str	ip, [sp, #108]	; 0x6c
   4564c:	beq	46e5c <__assert_fail@plt+0x35a58>
   45650:	mov	r7, #0
   45654:	b	44f14 <__assert_fail@plt+0x33b10>
   45658:	add	ip, ip, #9
   4565c:	cmp	sl, ip
   45660:	bhi	46b70 <__assert_fail@plt+0x3576c>
   45664:	cmp	sl, r0
   45668:	bls	46ea0 <__assert_fail@plt+0x35a9c>
   4566c:	rsb	r1, r0, sl
   45670:	sub	r3, r1, #1
   45674:	cmp	r3, #7
   45678:	movhi	r5, #0
   4567c:	movhi	r3, r0
   45680:	strhi	r5, [sp, #40]	; 0x28
   45684:	strhi	r5, [sp, #56]	; 0x38
   45688:	bls	46b74 <__assert_fail@plt+0x35770>
   4568c:	ldr	r0, [r9]
   45690:	add	r3, r3, #8
   45694:	str	r3, [sp, #108]	; 0x6c
   45698:	cmp	r0, #0
   4569c:	beq	46b1c <__assert_fail@plt+0x35718>
   456a0:	mov	r0, r6
   456a4:	add	r1, sp, #124	; 0x7c
   456a8:	add	r2, sp, #116	; 0x74
   456ac:	bl	39a0c <__assert_fail@plt+0x28608>
   456b0:	ldr	r1, [r6, #24]
   456b4:	mov	r7, #0
   456b8:	ldr	r5, [sp, #40]	; 0x28
   456bc:	ldr	r4, [sp, #56]	; 0x38
   456c0:	ldr	ip, [sp, #108]	; 0x6c
   456c4:	umull	r2, r3, r5, r1
   456c8:	mla	r3, r1, r4, r3
   456cc:	ldrd	r0, [r6, #32]
   456d0:	adds	r2, r2, r0
   456d4:	adc	r3, r3, r1
   456d8:	strd	r2, [r6, #32]
   456dc:	b	44f14 <__assert_fail@plt+0x33b10>
   456e0:	ldr	r7, [r9]
   456e4:	cmp	r7, #0
   456e8:	movne	ip, r0
   456ec:	movne	r7, #0
   456f0:	bne	44f14 <__assert_fail@plt+0x33b10>
   456f4:	movw	r0, #42368	; 0xa580
   456f8:	movt	r0, #7
   456fc:	bl	11218 <puts@plt>
   45700:	ldr	ip, [sp, #108]	; 0x6c
   45704:	b	44f14 <__assert_fail@plt+0x33b10>
   45708:	mov	r2, #0
   4570c:	mov	r3, fp
   45710:	add	r1, sp, #112	; 0x70
   45714:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45718:	ldr	ip, [sp, #108]	; 0x6c
   4571c:	mov	r2, #0
   45720:	mov	r3, fp
   45724:	add	r1, sp, #112	; 0x70
   45728:	str	r0, [sp, #32]
   4572c:	ldr	r0, [sp, #112]	; 0x70
   45730:	add	r0, ip, r0
   45734:	str	r0, [sp, #108]	; 0x6c
   45738:	bl	3a350 <__assert_fail@plt+0x28f4c>
   4573c:	ldr	r7, [r6, #8]
   45740:	ldr	r5, [sp, #32]
   45744:	ldr	r2, [sp, #108]	; 0x6c
   45748:	ldr	r3, [sp, #112]	; 0x70
   4574c:	cmp	r5, r7
   45750:	ldr	r4, [sp, #48]	; 0x30
   45754:	add	r3, r2, r3
   45758:	movcc	r4, r8
   4575c:	cmp	sl, r3
   45760:	str	r3, [sp, #108]	; 0x6c
   45764:	mov	r7, r4
   45768:	mov	ip, r0
   4576c:	bls	465fc <__assert_fail@plt+0x351f8>
   45770:	add	r4, r3, r0
   45774:	str	r4, [sp, #40]	; 0x28
   45778:	cmp	sl, r4
   4577c:	bcc	465fc <__assert_fail@plt+0x351f8>
   45780:	cmp	r3, r4
   45784:	bhi	465fc <__assert_fail@plt+0x351f8>
   45788:	ldr	r3, [r9]
   4578c:	cmp	r3, #0
   45790:	beq	470f0 <__assert_fail@plt+0x35cec>
   45794:	ldrb	r3, [r7]
   45798:	cmp	r3, #0
   4579c:	bne	470f0 <__assert_fail@plt+0x35cec>
   457a0:	ldr	r5, [sp, #32]
   457a4:	mov	r2, #22
   457a8:	ldr	r3, [r6, #12]
   457ac:	lsl	r4, r5, #1
   457b0:	strh	r2, [r3, r4]
   457b4:	ldr	r5, [sp, #40]	; 0x28
   457b8:	mov	r7, #0
   457bc:	str	r5, [sp, #108]	; 0x6c
   457c0:	mov	ip, r5
   457c4:	b	44f14 <__assert_fail@plt+0x33b10>
   457c8:	mov	r2, #0
   457cc:	mov	r3, fp
   457d0:	add	r1, sp, #112	; 0x70
   457d4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   457d8:	ldr	ip, [sp, #108]	; 0x6c
   457dc:	mov	r2, #1
   457e0:	mov	r3, fp
   457e4:	add	r1, sp, #112	; 0x70
   457e8:	mov	r4, r0
   457ec:	ldr	r0, [sp, #112]	; 0x70
   457f0:	add	r0, ip, r0
   457f4:	str	r0, [sp, #108]	; 0x6c
   457f8:	bl	3a350 <__assert_fail@plt+0x28f4c>
   457fc:	ldr	r2, [sp, #108]	; 0x6c
   45800:	ldr	r3, [sp, #112]	; 0x70
   45804:	mov	r1, r4
   45808:	add	r3, r2, r3
   4580c:	str	r3, [sp, #108]	; 0x6c
   45810:	mov	r7, r0
   45814:	mov	r0, r6
   45818:	bl	44500 <__assert_fail@plt+0x330fc>
   4581c:	ldr	r3, [r9]
   45820:	ldr	r5, [sp, #48]	; 0x30
   45824:	cmp	r0, #0
   45828:	movge	r5, r8
   4582c:	cmp	r3, #0
   45830:	beq	46818 <__assert_fail@plt+0x35414>
   45834:	ldrb	r3, [r5]
   45838:	cmp	r3, #0
   4583c:	bne	46818 <__assert_fail@plt+0x35414>
   45840:	ldr	r2, [r6, #28]
   45844:	lsl	r1, r4, #1
   45848:	ldr	r0, [r6, #12]
   4584c:	mov	ip, #20
   45850:	b	45608 <__assert_fail@plt+0x34204>
   45854:	mov	r2, #0
   45858:	mov	r3, fp
   4585c:	add	r1, sp, #112	; 0x70
   45860:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45864:	ldr	ip, [sp, #108]	; 0x6c
   45868:	mov	r2, #0
   4586c:	mov	r3, fp
   45870:	add	r1, sp, #112	; 0x70
   45874:	mov	r4, r0
   45878:	ldr	r0, [sp, #112]	; 0x70
   4587c:	add	r0, ip, r0
   45880:	str	r0, [sp, #108]	; 0x6c
   45884:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45888:	ldr	r7, [r6, #8]
   4588c:	ldr	ip, [sp, #48]	; 0x30
   45890:	cmp	r4, r7
   45894:	ldr	r2, [r9]
   45898:	ldr	r3, [sp, #112]	; 0x70
   4589c:	movcc	ip, r8
   458a0:	cmp	r2, #0
   458a4:	mov	r7, ip
   458a8:	ldr	ip, [sp, #108]	; 0x6c
   458ac:	add	ip, ip, r3
   458b0:	str	ip, [sp, #108]	; 0x6c
   458b4:	mov	r5, r0
   458b8:	beq	46858 <__assert_fail@plt+0x35454>
   458bc:	ldrb	r3, [r7]
   458c0:	cmp	r3, #0
   458c4:	bne	46858 <__assert_fail@plt+0x35454>
   458c8:	ldr	r3, [r6, #28]
   458cc:	lsl	r2, r4, #1
   458d0:	ldr	r1, [r6, #12]
   458d4:	mov	r0, #20
   458d8:	b	4551c <__assert_fail@plt+0x34118>
   458dc:	andeq	r6, r9, r0, asr #13
   458e0:	mov	r2, #0
   458e4:	mov	r3, fp
   458e8:	add	r1, sp, #112	; 0x70
   458ec:	bl	3a350 <__assert_fail@plt+0x28f4c>
   458f0:	ldr	ip, [sp, #108]	; 0x6c
   458f4:	mov	r2, #1
   458f8:	mov	r3, fp
   458fc:	add	r1, sp, #112	; 0x70
   45900:	mov	r4, r0
   45904:	ldr	r0, [sp, #112]	; 0x70
   45908:	add	r0, ip, r0
   4590c:	str	r0, [sp, #108]	; 0x6c
   45910:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45914:	ldr	r2, [sp, #108]	; 0x6c
   45918:	ldr	r3, [sp, #112]	; 0x70
   4591c:	mov	r1, r4
   45920:	add	r3, r2, r3
   45924:	str	r3, [sp, #108]	; 0x6c
   45928:	mov	r7, r0
   4592c:	mov	r0, r6
   45930:	bl	44500 <__assert_fail@plt+0x330fc>
   45934:	ldr	r3, [r9]
   45938:	ldr	r5, [sp, #48]	; 0x30
   4593c:	cmp	r0, #0
   45940:	movge	r5, r8
   45944:	cmp	r3, #0
   45948:	beq	45958 <__assert_fail@plt+0x34554>
   4594c:	ldrb	r3, [r5]
   45950:	cmp	r3, #0
   45954:	beq	455f8 <__assert_fail@plt+0x341f4>
   45958:	mov	r1, #0
   4595c:	mov	r0, r4
   45960:	bl	39964 <__assert_fail@plt+0x28560>
   45964:	ldr	ip, [r6, #28]
   45968:	movw	r1, #42172	; 0xa4bc
   4596c:	movt	r1, #7
   45970:	mov	r2, r5
   45974:	mul	ip, ip, r7
   45978:	mov	r3, r0
   4597c:	mov	r0, #1
   45980:	str	ip, [sp]
   45984:	bl	1132c <__printf_chk@plt>
   45988:	ldrb	r3, [r5]
   4598c:	cmp	r3, #0
   45990:	beq	455f8 <__assert_fail@plt+0x341f4>
   45994:	ldr	ip, [sp, #108]	; 0x6c
   45998:	mov	r7, #0
   4599c:	b	44f14 <__assert_fail@plt+0x33b10>
   459a0:	mov	r2, #1
   459a4:	mov	r3, fp
   459a8:	add	r1, sp, #112	; 0x70
   459ac:	bl	3a350 <__assert_fail@plt+0x28f4c>
   459b0:	ldr	lr, [r6, #28]
   459b4:	ldr	r7, [r9]
   459b8:	ldr	ip, [sp, #108]	; 0x6c
   459bc:	asr	r5, lr, #31
   459c0:	cmp	r7, #0
   459c4:	umull	r2, r3, r0, lr
   459c8:	mul	r4, r0, r5
   459cc:	ldr	r0, [sp, #112]	; 0x70
   459d0:	mla	r1, lr, r1, r4
   459d4:	add	ip, ip, r0
   459d8:	str	ip, [sp, #108]	; 0x6c
   459dc:	add	r3, r1, r3
   459e0:	strd	r2, [r6, #56]	; 0x38
   459e4:	bne	45650 <__assert_fail@plt+0x3424c>
   459e8:	movw	r1, #42296	; 0xa538
   459ec:	mov	r0, #1
   459f0:	movt	r1, #7
   459f4:	bl	1132c <__printf_chk@plt>
   459f8:	ldr	ip, [sp, #108]	; 0x6c
   459fc:	b	44f14 <__assert_fail@plt+0x33b10>
   45a00:	mov	r2, #0
   45a04:	mov	r3, fp
   45a08:	add	r1, sp, #112	; 0x70
   45a0c:	mov	r7, #0
   45a10:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45a14:	ldr	ip, [sp, #108]	; 0x6c
   45a18:	ldr	r3, [sp, #112]	; 0x70
   45a1c:	mov	r2, #1
   45a20:	add	r1, sp, #112	; 0x70
   45a24:	add	ip, ip, r3
   45a28:	mov	r3, fp
   45a2c:	str	ip, [sp, #108]	; 0x6c
   45a30:	str	r0, [r6, #48]	; 0x30
   45a34:	mov	r0, ip
   45a38:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45a3c:	ldr	lr, [r6, #28]
   45a40:	ldr	r4, [r9]
   45a44:	ldr	ip, [sp, #108]	; 0x6c
   45a48:	asr	r5, lr, #31
   45a4c:	cmp	r4, r7
   45a50:	strb	r7, [r6, #69]	; 0x45
   45a54:	umull	r2, r3, r0, lr
   45a58:	mul	r5, r0, r5
   45a5c:	ldr	r0, [sp, #112]	; 0x70
   45a60:	mla	r1, lr, r1, r5
   45a64:	add	ip, ip, r0
   45a68:	str	ip, [sp, #108]	; 0x6c
   45a6c:	add	r3, r1, r3
   45a70:	strd	r2, [r6, #56]	; 0x38
   45a74:	bne	44f14 <__assert_fail@plt+0x33b10>
   45a78:	mov	r1, r4
   45a7c:	ldr	r0, [r6, #48]	; 0x30
   45a80:	bl	39964 <__assert_fail@plt+0x28560>
   45a84:	movw	r1, #42264	; 0xa518
   45a88:	ldr	r3, [r6, #56]	; 0x38
   45a8c:	movt	r1, #7
   45a90:	mov	r7, r4
   45a94:	mov	r2, r0
   45a98:	mov	r0, #1
   45a9c:	bl	1132c <__printf_chk@plt>
   45aa0:	ldr	ip, [sp, #108]	; 0x6c
   45aa4:	b	44f14 <__assert_fail@plt+0x33b10>
   45aa8:	mov	r2, #0
   45aac:	mov	r3, fp
   45ab0:	add	r1, sp, #112	; 0x70
   45ab4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45ab8:	ldr	r2, [sp, #108]	; 0x6c
   45abc:	ldr	r3, [sp, #112]	; 0x70
   45ac0:	add	r3, r2, r3
   45ac4:	str	r3, [sp, #108]	; 0x6c
   45ac8:	cmp	sl, r3
   45acc:	mov	r7, r0
   45ad0:	bls	468e0 <__assert_fail@plt+0x354dc>
   45ad4:	rsb	r2, r3, sl
   45ad8:	cmp	r0, r2
   45adc:	bhi	468e0 <__assert_fail@plt+0x354dc>
   45ae0:	ldr	r4, [r9]
   45ae4:	cmp	r4, #0
   45ae8:	beq	471f4 <__assert_fail@plt+0x35df0>
   45aec:	add	ip, r3, r7
   45af0:	mov	r3, #1
   45af4:	str	ip, [sp, #108]	; 0x6c
   45af8:	mov	r7, #0
   45afc:	strb	r3, [r6, #69]	; 0x45
   45b00:	b	44f14 <__assert_fail@plt+0x33b10>
   45b04:	mov	r2, #0
   45b08:	mov	r3, fp
   45b0c:	add	r1, sp, #112	; 0x70
   45b10:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45b14:	ldr	ip, [sp, #108]	; 0x6c
   45b18:	mov	r2, #0
   45b1c:	mov	r3, fp
   45b20:	add	r1, sp, #112	; 0x70
   45b24:	str	r0, [sp, #32]
   45b28:	ldr	r0, [sp, #112]	; 0x70
   45b2c:	add	r0, ip, r0
   45b30:	str	r0, [sp, #108]	; 0x6c
   45b34:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45b38:	ldr	r1, [r6, #8]
   45b3c:	ldr	r5, [sp, #32]
   45b40:	ldr	r2, [sp, #108]	; 0x6c
   45b44:	ldr	r3, [sp, #112]	; 0x70
   45b48:	cmp	r5, r1
   45b4c:	ldr	ip, [sp, #48]	; 0x30
   45b50:	add	r3, r2, r3
   45b54:	movcc	ip, r8
   45b58:	cmp	sl, r3
   45b5c:	str	r3, [sp, #108]	; 0x6c
   45b60:	mov	r7, r0
   45b64:	bls	4661c <__assert_fail@plt+0x35218>
   45b68:	add	r4, r3, r7
   45b6c:	str	r4, [sp, #40]	; 0x28
   45b70:	cmp	sl, r4
   45b74:	bcc	4661c <__assert_fail@plt+0x35218>
   45b78:	cmp	r3, r4
   45b7c:	bhi	4661c <__assert_fail@plt+0x35218>
   45b80:	ldr	r3, [r9]
   45b84:	cmp	r3, #0
   45b88:	beq	47170 <__assert_fail@plt+0x35d6c>
   45b8c:	ldrb	r3, [ip]
   45b90:	cmp	r3, #0
   45b94:	bne	47170 <__assert_fail@plt+0x35d6c>
   45b98:	ldr	r5, [sp, #32]
   45b9c:	mov	r2, #16
   45ba0:	ldr	r3, [r6, #12]
   45ba4:	lsl	r4, r5, #1
   45ba8:	strh	r2, [r3, r4]
   45bac:	b	457b4 <__assert_fail@plt+0x343b0>
   45bb0:	mov	r3, fp
   45bb4:	add	r1, sp, #112	; 0x70
   45bb8:	mov	r2, #0
   45bbc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45bc0:	ldr	r7, [r9]
   45bc4:	ldr	ip, [sp, #108]	; 0x6c
   45bc8:	ldr	r3, [sp, #112]	; 0x70
   45bcc:	cmp	r7, #0
   45bd0:	add	ip, ip, r3
   45bd4:	str	ip, [sp, #108]	; 0x6c
   45bd8:	str	r0, [r6, #56]	; 0x38
   45bdc:	str	r1, [r6, #60]	; 0x3c
   45be0:	bne	45650 <__assert_fail@plt+0x3424c>
   45be4:	mov	r2, r0
   45be8:	movw	r1, #41900	; 0xa3ac
   45bec:	mov	r0, #1
   45bf0:	movt	r1, #7
   45bf4:	bl	1132c <__printf_chk@plt>
   45bf8:	ldr	ip, [sp, #108]	; 0x6c
   45bfc:	b	44f14 <__assert_fail@plt+0x33b10>
   45c00:	mov	r2, #0
   45c04:	mov	r3, fp
   45c08:	add	r1, sp, #112	; 0x70
   45c0c:	mov	r7, #0
   45c10:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45c14:	ldr	r3, [r9]
   45c18:	ldr	ip, [sp, #108]	; 0x6c
   45c1c:	ldr	r2, [sp, #112]	; 0x70
   45c20:	cmp	r3, r7
   45c24:	strb	r7, [r6, #69]	; 0x45
   45c28:	add	ip, ip, r2
   45c2c:	str	ip, [sp, #108]	; 0x6c
   45c30:	str	r0, [r6, #48]	; 0x30
   45c34:	bne	44f14 <__assert_fail@plt+0x33b10>
   45c38:	mov	r1, r3
   45c3c:	mov	r7, r3
   45c40:	bl	39964 <__assert_fail@plt+0x28560>
   45c44:	movw	r1, #41868	; 0xa38c
   45c48:	movt	r1, #7
   45c4c:	mov	r2, r0
   45c50:	mov	r0, #1
   45c54:	bl	1132c <__printf_chk@plt>
   45c58:	ldr	ip, [sp, #108]	; 0x6c
   45c5c:	b	44f14 <__assert_fail@plt+0x33b10>
   45c60:	mov	r2, #0
   45c64:	mov	r3, fp
   45c68:	add	r1, sp, #112	; 0x70
   45c6c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45c70:	ldr	ip, [sp, #108]	; 0x6c
   45c74:	mov	r2, #0
   45c78:	mov	r3, fp
   45c7c:	add	r1, sp, #112	; 0x70
   45c80:	mov	r4, r0
   45c84:	ldr	r0, [sp, #112]	; 0x70
   45c88:	add	r0, ip, r0
   45c8c:	str	r0, [sp, #108]	; 0x6c
   45c90:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45c94:	ldr	r7, [r6, #8]
   45c98:	ldr	ip, [sp, #48]	; 0x30
   45c9c:	cmp	r4, r7
   45ca0:	ldr	r2, [r9]
   45ca4:	ldr	r3, [sp, #112]	; 0x70
   45ca8:	movcc	ip, r8
   45cac:	cmp	r2, #0
   45cb0:	mov	r7, ip
   45cb4:	ldr	ip, [sp, #108]	; 0x6c
   45cb8:	add	ip, ip, r3
   45cbc:	str	ip, [sp, #108]	; 0x6c
   45cc0:	mov	r5, r0
   45cc4:	beq	468f0 <__assert_fail@plt+0x354ec>
   45cc8:	ldrb	r3, [r7]
   45ccc:	cmp	r3, #0
   45cd0:	bne	468f0 <__assert_fail@plt+0x354ec>
   45cd4:	ldr	r3, [r6, #28]
   45cd8:	lsl	r2, r4, #1
   45cdc:	ldr	r1, [r6, #12]
   45ce0:	mov	r0, #128	; 0x80
   45ce4:	b	4551c <__assert_fail@plt+0x34118>
   45ce8:	mov	r2, #0
   45cec:	mov	r3, fp
   45cf0:	add	r1, sp, #112	; 0x70
   45cf4:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45cf8:	ldr	ip, [sp, #108]	; 0x6c
   45cfc:	mov	r2, #0
   45d00:	mov	r3, fp
   45d04:	add	r1, sp, #112	; 0x70
   45d08:	mov	r5, r0
   45d0c:	ldr	r0, [sp, #112]	; 0x70
   45d10:	add	r0, ip, r0
   45d14:	str	r0, [sp, #108]	; 0x6c
   45d18:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45d1c:	ldr	r7, [r6, #8]
   45d20:	ldr	ip, [sp, #48]	; 0x30
   45d24:	cmp	r5, r7
   45d28:	ldr	r2, [r9]
   45d2c:	ldr	r3, [sp, #112]	; 0x70
   45d30:	movcc	ip, r8
   45d34:	cmp	r2, #0
   45d38:	mov	r7, ip
   45d3c:	ldr	ip, [sp, #108]	; 0x6c
   45d40:	add	ip, ip, r3
   45d44:	str	ip, [sp, #108]	; 0x6c
   45d48:	mov	r4, r0
   45d4c:	beq	469e4 <__assert_fail@plt+0x355e0>
   45d50:	ldrb	r3, [r7]
   45d54:	cmp	r3, #0
   45d58:	bne	469e4 <__assert_fail@plt+0x355e0>
   45d5c:	ldr	r1, [r6, #12]
   45d60:	lsl	r2, r5, #1
   45d64:	ldr	r3, [r6, #16]
   45d68:	mov	r0, #9
   45d6c:	mov	r7, #0
   45d70:	strh	r0, [r1, r2]
   45d74:	str	r4, [r3, r5, lsl #2]
   45d78:	b	44f14 <__assert_fail@plt+0x33b10>
   45d7c:	ldr	r4, [sp, #76]	; 0x4c
   45d80:	add	r0, sp, #108	; 0x6c
   45d84:	ldrb	r1, [r6, #68]	; 0x44
   45d88:	add	r2, r4, #12
   45d8c:	add	r3, r4, #16
   45d90:	str	sl, [sp]
   45d94:	bl	3a0f4 <__assert_fail@plt+0x28cf0>
   45d98:	mov	r4, r0
   45d9c:	ldr	r0, [r9]
   45da0:	mov	r5, r1
   45da4:	cmp	r0, #0
   45da8:	beq	46ab4 <__assert_fail@plt+0x356b0>
   45dac:	mov	r0, r6
   45db0:	add	r1, sp, #124	; 0x7c
   45db4:	add	r2, sp, #116	; 0x74
   45db8:	bl	39a0c <__assert_fail@plt+0x28608>
   45dbc:	strd	r4, [r6, #32]
   45dc0:	mov	r7, #0
   45dc4:	ldr	ip, [sp, #108]	; 0x6c
   45dc8:	b	44f14 <__assert_fail@plt+0x33b10>
   45dcc:	ldr	r3, [r9]
   45dd0:	cmp	r3, #0
   45dd4:	beq	46e3c <__assert_fail@plt+0x35a38>
   45dd8:	ldr	ip, [sp, #52]	; 0x34
   45ddc:	cmp	ip, #0
   45de0:	beq	46e18 <__assert_fail@plt+0x35a14>
   45de4:	ldr	r4, [sp, #52]	; 0x34
   45de8:	mov	r0, r6
   45dec:	ldrd	r2, [ip, #56]	; 0x38
   45df0:	ldr	r5, [sp, #52]	; 0x34
   45df4:	ldr	r1, [r4, #64]	; 0x40
   45df8:	ldr	ip, [ip, #48]	; 0x30
   45dfc:	ldr	r4, [r4]
   45e00:	strd	r2, [r6, #56]	; 0x38
   45e04:	ldrb	r3, [r5, #69]	; 0x45
   45e08:	str	r1, [r6, #64]	; 0x40
   45e0c:	ldr	r1, [r5, #8]
   45e10:	str	ip, [r6, #48]	; 0x30
   45e14:	strb	r3, [r6, #69]	; 0x45
   45e18:	sub	r1, r1, #1
   45e1c:	bl	44500 <__assert_fail@plt+0x330fc>
   45e20:	cmp	r0, #0
   45e24:	blt	470c0 <__assert_fail@plt+0x35cbc>
   45e28:	ldr	ip, [sp, #52]	; 0x34
   45e2c:	mov	r7, #0
   45e30:	ldr	r0, [r6, #12]
   45e34:	ldr	r2, [ip, #8]
   45e38:	ldr	r1, [ip, #12]
   45e3c:	lsl	r2, r2, #1
   45e40:	bl	11134 <memcpy@plt>
   45e44:	ldr	r5, [sp, #52]	; 0x34
   45e48:	ldr	r0, [r6, #16]
   45e4c:	ldr	r2, [r5, #8]
   45e50:	ldr	r1, [r5, #16]
   45e54:	lsl	r2, r2, #2
   45e58:	bl	11134 <memcpy@plt>
   45e5c:	ldr	r0, [r5, #12]
   45e60:	bl	1111c <free@plt>
   45e64:	ldr	r0, [r5, #16]
   45e68:	bl	1111c <free@plt>
   45e6c:	ldr	r0, [sp, #52]	; 0x34
   45e70:	bl	1111c <free@plt>
   45e74:	str	r4, [sp, #52]	; 0x34
   45e78:	ldr	ip, [sp, #108]	; 0x6c
   45e7c:	b	44f14 <__assert_fail@plt+0x33b10>
   45e80:	add	ip, ip, #3
   45e84:	cmp	sl, ip
   45e88:	bhi	46b90 <__assert_fail@plt+0x3578c>
   45e8c:	cmp	sl, r0
   45e90:	bls	46eb4 <__assert_fail@plt+0x35ab0>
   45e94:	rsb	r1, r0, sl
   45e98:	sub	r3, r1, #1
   45e9c:	cmp	r3, #7
   45ea0:	movhi	r4, #0
   45ea4:	movhi	r3, r0
   45ea8:	strhi	r4, [sp, #40]	; 0x28
   45eac:	strhi	r4, [sp, #56]	; 0x38
   45eb0:	bls	46b94 <__assert_fail@plt+0x35790>
   45eb4:	ldr	r0, [r9]
   45eb8:	add	r3, r3, #2
   45ebc:	str	r3, [sp, #108]	; 0x6c
   45ec0:	cmp	r0, #0
   45ec4:	bne	46570 <__assert_fail@plt+0x3516c>
   45ec8:	ldr	r1, [r6, #24]
   45ecc:	ldrd	r2, [r6, #32]
   45ed0:	ldr	r4, [sp, #40]	; 0x28
   45ed4:	ldr	r5, [sp, #56]	; 0x38
   45ed8:	strd	r2, [sp, #32]
   45edc:	umull	r2, r3, r4, r1
   45ee0:	ldrb	ip, [r6, #70]	; 0x46
   45ee4:	mul	r7, r4, r1
   45ee8:	str	ip, [sp]
   45eec:	mla	r3, r1, r5, r3
   45ef0:	ldrd	r4, [sp, #32]
   45ef4:	adds	r2, r2, r4
   45ef8:	adc	r3, r3, r5
   45efc:	bl	389e0 <__assert_fail@plt+0x275dc>
   45f00:	movw	r1, #41436	; 0xa1dc
   45f04:	mov	r2, r7
   45f08:	movt	r1, #7
   45f0c:	mov	r3, r0
   45f10:	mov	r0, #1
   45f14:	bl	1132c <__printf_chk@plt>
   45f18:	ldr	lr, [r6, #24]
   45f1c:	mov	r7, #0
   45f20:	ldr	r5, [sp, #40]	; 0x28
   45f24:	ldr	r4, [sp, #56]	; 0x38
   45f28:	ldrd	r2, [r6, #32]
   45f2c:	umull	r0, r1, r5, lr
   45f30:	ldr	ip, [sp, #108]	; 0x6c
   45f34:	adds	r2, r2, r0
   45f38:	mla	r1, lr, r4, r1
   45f3c:	adc	r3, r3, r1
   45f40:	strd	r2, [r6, #32]
   45f44:	b	44f14 <__assert_fail@plt+0x33b10>
   45f48:	add	ip, ip, #5
   45f4c:	cmp	sl, ip
   45f50:	bhi	46bb0 <__assert_fail@plt+0x357ac>
   45f54:	cmp	sl, r0
   45f58:	bls	46e78 <__assert_fail@plt+0x35a74>
   45f5c:	rsb	r1, r0, sl
   45f60:	sub	r3, r1, #1
   45f64:	cmp	r3, #7
   45f68:	movhi	r4, #0
   45f6c:	movhi	r3, r0
   45f70:	strhi	r4, [sp, #40]	; 0x28
   45f74:	strhi	r4, [sp, #56]	; 0x38
   45f78:	bls	46bb4 <__assert_fail@plt+0x357b0>
   45f7c:	ldr	r0, [r9]
   45f80:	add	r3, r3, #4
   45f84:	str	r3, [sp, #108]	; 0x6c
   45f88:	cmp	r0, #0
   45f8c:	bne	46570 <__assert_fail@plt+0x3516c>
   45f90:	ldr	r1, [r6, #24]
   45f94:	ldrd	r2, [r6, #32]
   45f98:	ldr	r4, [sp, #40]	; 0x28
   45f9c:	ldr	r5, [sp, #56]	; 0x38
   45fa0:	strd	r2, [sp, #32]
   45fa4:	umull	r2, r3, r4, r1
   45fa8:	ldrb	ip, [r6, #70]	; 0x46
   45fac:	mul	r7, r4, r1
   45fb0:	str	ip, [sp]
   45fb4:	mla	r3, r1, r5, r3
   45fb8:	ldrd	r4, [sp, #32]
   45fbc:	adds	r2, r2, r4
   45fc0:	adc	r3, r3, r5
   45fc4:	bl	389e0 <__assert_fail@plt+0x275dc>
   45fc8:	mov	r2, r7
   45fcc:	movw	r1, #41472	; 0xa200
   45fd0:	movt	r1, #7
   45fd4:	mov	r3, r0
   45fd8:	mov	r0, #1
   45fdc:	bl	1132c <__printf_chk@plt>
   45fe0:	b	45f18 <__assert_fail@plt+0x34b14>
   45fe4:	mov	r2, #0
   45fe8:	mov	r3, fp
   45fec:	add	r1, sp, #112	; 0x70
   45ff0:	bl	3a350 <__assert_fail@plt+0x28f4c>
   45ff4:	ldr	r5, [r6, #8]
   45ff8:	ldr	ip, [sp, #48]	; 0x30
   45ffc:	ldr	r2, [r9]
   46000:	ldr	r3, [sp, #112]	; 0x70
   46004:	cmp	r0, r5
   46008:	mov	r4, r0
   4600c:	movcc	ip, r8
   46010:	cmp	r2, #0
   46014:	mov	r5, ip
   46018:	ldr	ip, [sp, #108]	; 0x6c
   4601c:	add	ip, ip, r3
   46020:	str	ip, [sp, #108]	; 0x6c
   46024:	beq	46934 <__assert_fail@plt+0x35530>
   46028:	ldrb	r3, [r5]
   4602c:	cmp	r3, #0
   46030:	bne	46934 <__assert_fail@plt+0x35530>
   46034:	ldr	r0, [r6, #12]
   46038:	lsl	r1, r4, #1
   4603c:	ldr	r2, [r6, #16]
   46040:	mov	r3, #0
   46044:	mov	lr, #7
   46048:	mov	r7, r3
   4604c:	strh	lr, [r0, r1]
   46050:	str	r3, [r2, r4, lsl #2]
   46054:	b	44f14 <__assert_fail@plt+0x33b10>
   46058:	mov	r2, #0
   4605c:	mov	r3, fp
   46060:	add	r1, sp, #112	; 0x70
   46064:	bl	3a350 <__assert_fail@plt+0x28f4c>
   46068:	ldr	r5, [r6, #8]
   4606c:	ldr	ip, [sp, #48]	; 0x30
   46070:	ldr	r2, [r9]
   46074:	ldr	r3, [sp, #112]	; 0x70
   46078:	cmp	r0, r5
   4607c:	mov	r4, r0
   46080:	movcc	ip, r8
   46084:	cmp	r2, #0
   46088:	mov	r5, ip
   4608c:	ldr	ip, [sp, #108]	; 0x6c
   46090:	add	ip, ip, r3
   46094:	str	ip, [sp, #108]	; 0x6c
   46098:	beq	46a2c <__assert_fail@plt+0x35628>
   4609c:	ldrb	r3, [r5]
   460a0:	cmp	r3, #0
   460a4:	bne	46a2c <__assert_fail@plt+0x35628>
   460a8:	ldr	r0, [r6, #12]
   460ac:	lsl	r1, r4, #1
   460b0:	ldr	r2, [r6, #16]
   460b4:	mov	r3, #0
   460b8:	mov	lr, #8
   460bc:	mov	r7, r3
   460c0:	strh	lr, [r0, r1]
   460c4:	str	r3, [r2, r4, lsl #2]
   460c8:	b	44f14 <__assert_fail@plt+0x33b10>
   460cc:	ldr	r3, [sp, #120]	; 0x78
   460d0:	ldr	r2, [r3, #8]
   460d4:	cmp	r4, r2
   460d8:	bcs	46a8c <__assert_fail@plt+0x35688>
   460dc:	ldr	r5, [r6, #8]
   460e0:	ldr	ip, [sp, #48]	; 0x30
   460e4:	cmp	r4, r5
   460e8:	movcc	ip, r8
   460ec:	mov	r5, ip
   460f0:	ldr	r2, [r9]
   460f4:	cmp	r2, #0
   460f8:	beq	4696c <__assert_fail@plt+0x35568>
   460fc:	ldrb	r2, [r5]
   46100:	cmp	r2, #0
   46104:	bne	4696c <__assert_fail@plt+0x35568>
   46108:	mov	ip, r0
   4610c:	sxth	r4, r4
   46110:	ldr	r1, [r3, #12]
   46114:	ldr	lr, [r3, #16]
   46118:	lsl	r3, r4, #1
   4611c:	ldr	r2, [r6, #12]
   46120:	ldr	r0, [r6, #16]
   46124:	ldrh	r1, [r1, r3]
   46128:	ldr	lr, [lr, r4, lsl #2]
   4612c:	strh	r1, [r2, r3]
   46130:	str	lr, [r0, r4, lsl #2]
   46134:	ldr	r7, [r9]
   46138:	cmp	r7, #0
   4613c:	beq	44f14 <__assert_fail@plt+0x33b10>
   46140:	sxth	r1, r1
   46144:	cmn	r1, #1
   46148:	moveq	r1, #7
   4614c:	moveq	r7, #0
   46150:	strheq	r1, [r2, r3]
   46154:	bne	45650 <__assert_fail@plt+0x3424c>
   46158:	b	44f14 <__assert_fail@plt+0x33b10>
   4615c:	mov	r2, #0
   46160:	mov	r3, fp
   46164:	add	r1, sp, #112	; 0x70
   46168:	mov	r7, #0
   4616c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   46170:	ldr	ip, [sp, #108]	; 0x6c
   46174:	ldr	r3, [sp, #112]	; 0x70
   46178:	add	r1, sp, #112	; 0x70
   4617c:	mov	r2, #0
   46180:	add	ip, ip, r3
   46184:	mov	r3, fp
   46188:	str	ip, [sp, #108]	; 0x6c
   4618c:	str	r0, [r6, #48]	; 0x30
   46190:	mov	r0, ip
   46194:	bl	3a350 <__assert_fail@plt+0x28f4c>
   46198:	ldr	r4, [r9]
   4619c:	ldr	ip, [sp, #108]	; 0x6c
   461a0:	ldr	r3, [sp, #112]	; 0x70
   461a4:	cmp	r4, r7
   461a8:	strb	r7, [r6, #69]	; 0x45
   461ac:	add	ip, ip, r3
   461b0:	str	ip, [sp, #108]	; 0x6c
   461b4:	strd	r0, [r6, #56]	; 0x38
   461b8:	bne	44f14 <__assert_fail@plt+0x33b10>
   461bc:	mov	r1, r4
   461c0:	ldr	r0, [r6, #48]	; 0x30
   461c4:	bl	39964 <__assert_fail@plt+0x28560>
   461c8:	movw	r1, #41836	; 0xa36c
   461cc:	ldr	r3, [r6, #56]	; 0x38
   461d0:	movt	r1, #7
   461d4:	mov	r7, r4
   461d8:	mov	r2, r0
   461dc:	mov	r0, #1
   461e0:	bl	1132c <__printf_chk@plt>
   461e4:	ldr	ip, [sp, #108]	; 0x6c
   461e8:	b	44f14 <__assert_fail@plt+0x33b10>
   461ec:	add	ip, ip, #2
   461f0:	cmp	fp, ip
   461f4:	bhi	46a6c <__assert_fail@plt+0x35668>
   461f8:	cmp	fp, r0
   461fc:	bls	46e8c <__assert_fail@plt+0x35a88>
   46200:	rsb	r1, r0, fp
   46204:	sub	r3, r1, #1
   46208:	cmp	r3, #7
   4620c:	movhi	r4, #0
   46210:	movhi	r3, r0
   46214:	strhi	r4, [sp, #40]	; 0x28
   46218:	strhi	r4, [sp, #56]	; 0x38
   4621c:	bls	46a70 <__assert_fail@plt+0x3566c>
   46220:	ldr	r0, [r9]
   46224:	add	r3, r3, #1
   46228:	str	r3, [sp, #108]	; 0x6c
   4622c:	cmp	r0, #0
   46230:	bne	46570 <__assert_fail@plt+0x3516c>
   46234:	ldr	r1, [r6, #24]
   46238:	ldrd	r2, [r6, #32]
   4623c:	ldr	r4, [sp, #40]	; 0x28
   46240:	ldr	r5, [sp, #56]	; 0x38
   46244:	strd	r2, [sp, #32]
   46248:	umull	r2, r3, r4, r1
   4624c:	ldrb	ip, [r6, #70]	; 0x46
   46250:	mul	r7, r4, r1
   46254:	str	ip, [sp]
   46258:	mla	r3, r1, r5, r3
   4625c:	ldrd	r4, [sp, #32]
   46260:	adds	r2, r2, r4
   46264:	adc	r3, r3, r5
   46268:	bl	389e0 <__assert_fail@plt+0x275dc>
   4626c:	mov	r2, r7
   46270:	movw	r1, #41400	; 0xa1b8
   46274:	movt	r1, #7
   46278:	mov	r3, r0
   4627c:	mov	r0, #1
   46280:	bl	1132c <__printf_chk@plt>
   46284:	b	45f18 <__assert_fail@plt+0x34b14>
   46288:	mov	r2, #0
   4628c:	mov	r3, fp
   46290:	add	r1, sp, #112	; 0x70
   46294:	bl	3a350 <__assert_fail@plt+0x28f4c>
   46298:	ldr	r3, [sp, #120]	; 0x78
   4629c:	ldr	ip, [sp, #108]	; 0x6c
   462a0:	ldr	r1, [sp, #112]	; 0x70
   462a4:	ldr	r2, [r3, #8]
   462a8:	add	ip, ip, r1
   462ac:	str	ip, [sp, #108]	; 0x6c
   462b0:	mov	r4, r0
   462b4:	cmp	r4, r2
   462b8:	bcs	46a64 <__assert_fail@plt+0x35660>
   462bc:	ldr	r5, [r6, #8]
   462c0:	ldr	lr, [sp, #48]	; 0x30
   462c4:	cmp	r4, r5
   462c8:	movcc	lr, r8
   462cc:	mov	r5, lr
   462d0:	ldr	r2, [r9]
   462d4:	cmp	r2, #0
   462d8:	beq	469a8 <__assert_fail@plt+0x355a4>
   462dc:	ldrb	r2, [r5]
   462e0:	cmp	r2, #0
   462e4:	bne	469a8 <__assert_fail@plt+0x355a4>
   462e8:	ldr	r1, [r3, #12]
   462ec:	lsl	r2, r4, #1
   462f0:	ldr	r3, [r3, #16]
   462f4:	mov	r7, #0
   462f8:	ldr	r0, [r6, #12]
   462fc:	ldrh	lr, [r1, r2]
   46300:	ldr	r1, [r3, r4, lsl #2]
   46304:	ldr	r3, [r6, #16]
   46308:	strh	lr, [r0, r2]
   4630c:	str	r1, [r3, r4, lsl #2]
   46310:	b	44f14 <__assert_fail@plt+0x33b10>
   46314:	ldr	r3, [r9]
   46318:	cmp	r3, #0
   4631c:	beq	46e4c <__assert_fail@plt+0x35a48>
   46320:	mov	r0, #72	; 0x48
   46324:	mov	r7, #0
   46328:	bl	4eba0 <warn@@Base+0x31b4>
   4632c:	ldrd	r2, [r6, #56]	; 0x38
   46330:	ldr	ip, [r6, #8]
   46334:	mov	r1, #2
   46338:	ldr	lr, [r6, #48]	; 0x30
   4633c:	strd	r2, [r0, #56]	; 0x38
   46340:	mov	r4, r0
   46344:	ldrb	r3, [r6, #69]	; 0x45
   46348:	mov	r0, ip
   4634c:	ldr	r2, [r6, #64]	; 0x40
   46350:	str	lr, [r4, #48]	; 0x30
   46354:	str	ip, [r4, #8]
   46358:	strb	r3, [r4, #69]	; 0x45
   4635c:	str	r2, [r4, #64]	; 0x40
   46360:	bl	3f77c <__assert_fail@plt+0x2e378>
   46364:	mov	r1, #4
   46368:	str	r0, [r4, #12]
   4636c:	ldr	r0, [r4, #8]
   46370:	bl	3f77c <__assert_fail@plt+0x2e378>
   46374:	ldr	r2, [r4, #8]
   46378:	ldr	r1, [r6, #12]
   4637c:	lsl	r2, r2, #1
   46380:	str	r0, [r4, #16]
   46384:	ldr	r0, [r4, #12]
   46388:	bl	11134 <memcpy@plt>
   4638c:	ldr	r2, [r4, #8]
   46390:	ldr	r0, [r4, #16]
   46394:	ldr	r1, [r6, #16]
   46398:	lsl	r2, r2, #2
   4639c:	bl	11134 <memcpy@plt>
   463a0:	ldr	r5, [sp, #52]	; 0x34
   463a4:	ldr	ip, [sp, #108]	; 0x6c
   463a8:	str	r4, [sp, #52]	; 0x34
   463ac:	str	r5, [r4]
   463b0:	b	44f14 <__assert_fail@plt+0x33b10>
   463b4:	sub	r3, r5, #28
   463b8:	cmp	r3, #35	; 0x23
   463bc:	bhi	46a94 <__assert_fail@plt+0x35690>
   463c0:	mov	r2, #5
   463c4:	movw	r1, #42484	; 0xa5f4
   463c8:	mov	r0, #0
   463cc:	movt	r1, #7
   463d0:	bl	11170 <dcgettext@plt>
   463d4:	mov	r2, r5
   463d8:	mov	r1, r0
   463dc:	mov	r0, #1
   463e0:	bl	1132c <__printf_chk@plt>
   463e4:	str	sl, [sp, #108]	; 0x6c
   463e8:	mov	ip, sl
   463ec:	mov	r7, #0
   463f0:	b	44f14 <__assert_fail@plt+0x33b10>
   463f4:	mov	r2, #5
   463f8:	movw	r1, #41248	; 0xa120
   463fc:	mov	r0, #0
   46400:	movt	r1, #7
   46404:	bl	11170 <dcgettext@plt>
   46408:	mov	r1, r8
   4640c:	bl	4b9ec <warn@@Base>
   46410:	str	sl, [sp, #108]	; 0x6c
   46414:	b	450dc <__assert_fail@plt+0x33cd8>
   46418:	mov	r0, #0
   4641c:	mov	r1, #0
   46420:	strd	r0, [sp, #56]	; 0x38
   46424:	ldrd	r0, [sp, #56]	; 0x38
   46428:	mov	r3, #0
   4642c:	mvn	r2, #0
   46430:	cmp	r1, r3
   46434:	cmpeq	r0, r2
   46438:	movne	r3, #0
   4643c:	moveq	r3, #1
   46440:	cmp	r4, #4
   46444:	movne	r3, #0
   46448:	andeq	r3, r3, #1
   4644c:	cmp	r3, #0
   46450:	bne	44854 <__assert_fail@plt+0x33450>
   46454:	and	r3, r0, r1
   46458:	cmp	r4, #8
   4645c:	cmneq	r3, #1
   46460:	beq	44854 <__assert_fail@plt+0x33450>
   46464:	ldr	ip, [sp, #64]	; 0x40
   46468:	ldr	lr, [sp, #56]	; 0x38
   4646c:	add	r5, ip, lr
   46470:	cmp	r5, r8
   46474:	bls	448fc <__assert_fail@plt+0x334f8>
   46478:	ldr	ip, [sp, #88]	; 0x58
   4647c:	cmp	ip, #0
   46480:	str	ip, [sp, #120]	; 0x78
   46484:	beq	464b8 <__assert_fail@plt+0x350b4>
   46488:	ldr	r3, [ip, #4]
   4648c:	cmp	r3, r5
   46490:	beq	472b0 <__assert_fail@plt+0x35eac>
   46494:	mov	r3, ip
   46498:	b	464a8 <__assert_fail@plt+0x350a4>
   4649c:	ldr	r2, [r3, #4]
   464a0:	cmp	r2, r5
   464a4:	beq	4664c <__assert_fail@plt+0x35248>
   464a8:	ldr	r3, [r3]
   464ac:	cmp	r3, #0
   464b0:	bne	4649c <__assert_fail@plt+0x35098>
   464b4:	str	r3, [sp, #120]	; 0x78
   464b8:	add	r7, r5, #4
   464bc:	cmp	fp, r7
   464c0:	movhi	r1, #4
   464c4:	bls	47250 <__assert_fail@plt+0x35e4c>
   464c8:	ldr	ip, [sp, #84]	; 0x54
   464cc:	mov	r0, r5
   464d0:	ldr	r3, [ip]
   464d4:	blx	r3
   464d8:	mvn	r2, #0
   464dc:	mov	r3, #0
   464e0:	cmp	r1, r3
   464e4:	cmpeq	r0, r2
   464e8:	strd	r0, [sp, #40]	; 0x28
   464ec:	bne	47308 <__assert_fail@plt+0x35f04>
   464f0:	add	r2, r5, #12
   464f4:	cmp	fp, r2
   464f8:	bls	472ec <__assert_fail@plt+0x35ee8>
   464fc:	mov	r1, #8
   46500:	ldr	ip, [sp, #84]	; 0x54
   46504:	mov	r0, r7
   46508:	mov	r7, r2
   4650c:	mov	r6, #8
   46510:	ldr	r3, [ip]
   46514:	blx	r3
   46518:	strd	r0, [sp, #40]	; 0x28
   4651c:	ldrd	r0, [sp, #40]	; 0x28
   46520:	orrs	r1, r0, r1
   46524:	beq	46568 <__assert_fail@plt+0x35164>
   46528:	add	r9, r7, r6
   4652c:	cmp	fp, r9
   46530:	bhi	47310 <__assert_fail@plt+0x35f0c>
   46534:	cmp	r7, fp
   46538:	rsbcc	r1, r7, fp
   4653c:	bcc	47314 <__assert_fail@plt+0x35f10>
   46540:	ldr	ip, [sp, #92]	; 0x5c
   46544:	mov	r0, #0
   46548:	mov	r1, #0
   4654c:	cmp	ip, #0
   46550:	beq	4733c <__assert_fail@plt+0x35f38>
   46554:	orrs	lr, r0, r1
   46558:	movne	r3, #0
   4655c:	moveq	r3, #1
   46560:	cmp	r3, #0
   46564:	bne	47384 <__assert_fail@plt+0x35f80>
   46568:	ldr	r5, [sp, #120]	; 0x78
   4656c:	b	47278 <__assert_fail@plt+0x35e74>
   46570:	mov	r0, r6
   46574:	add	r1, sp, #124	; 0x7c
   46578:	add	r2, sp, #116	; 0x74
   4657c:	bl	39a0c <__assert_fail@plt+0x28608>
   46580:	b	45f18 <__assert_fail@plt+0x34b14>
   46584:	ldrd	r2, [sp, #40]	; 0x28
   46588:	mov	r0, #0
   4658c:	str	r4, [sp]
   46590:	mov	sl, fp
   46594:	bl	389e0 <__assert_fail@plt+0x275dc>
   46598:	ldr	r5, [sp, #64]	; 0x40
   4659c:	rsb	r2, r5, r8
   465a0:	mov	r1, r0
   465a4:	movw	r0, #40632	; 0x9eb8
   465a8:	movt	r0, #7
   465ac:	bl	4b9ec <warn@@Base>
   465b0:	ldr	r0, [sp, #108]	; 0x6c
   465b4:	b	44820 <__assert_fail@plt+0x3341c>
   465b8:	add	r1, r1, #12
   465bc:	cmp	fp, r1
   465c0:	bhi	46df8 <__assert_fail@plt+0x359f4>
   465c4:	cmp	fp, r0
   465c8:	bls	47074 <__assert_fail@plt+0x35c70>
   465cc:	rsb	r1, r0, fp
   465d0:	sub	r3, r1, #1
   465d4:	cmp	r3, #7
   465d8:	movhi	r4, #0
   465dc:	movhi	r5, #0
   465e0:	movhi	sl, #12
   465e4:	strdhi	r4, [sp, #40]	; 0x28
   465e8:	bls	46dfc <__assert_fail@plt+0x359f8>
   465ec:	add	r0, r0, #8
   465f0:	mov	r4, #8
   465f4:	str	r0, [sp, #108]	; 0x6c
   465f8:	b	44800 <__assert_fail@plt+0x333fc>
   465fc:	mov	r2, ip
   46600:	movw	r1, #42096	; 0xa470
   46604:	mov	r0, #1
   46608:	movt	r1, #7
   4660c:	bl	1132c <__printf_chk@plt>
   46610:	mov	r7, #0
   46614:	ldr	ip, [sp, #108]	; 0x6c
   46618:	b	44f14 <__assert_fail@plt+0x33b10>
   4661c:	movw	r1, #42028	; 0xa42c
   46620:	movt	r1, #7
   46624:	mov	r0, #0
   46628:	mov	r2, #5
   4662c:	bl	11170 <dcgettext@plt>
   46630:	mov	r2, r7
   46634:	mov	r7, #0
   46638:	mov	r1, r0
   4663c:	mov	r0, #1
   46640:	bl	1132c <__printf_chk@plt>
   46644:	ldr	ip, [sp, #108]	; 0x6c
   46648:	b	44f14 <__assert_fail@plt+0x33b10>
   4664c:	ldr	ip, [sp, #80]	; 0x50
   46650:	mov	r5, r3
   46654:	str	r3, [sp, #120]	; 0x78
   46658:	str	ip, [sp, #32]
   4665c:	ldr	r0, [pc, #-3464]	; 458dc <__assert_fail@plt+0x344d8>
   46660:	mov	r1, #0
   46664:	mov	r2, #72	; 0x48
   46668:	bl	112f0 <memset@plt>
   4666c:	ldr	r3, [r5, #8]
   46670:	mov	r1, #2
   46674:	ldr	r5, [sp, #28]
   46678:	movw	r7, #24696	; 0x6078
   4667c:	movt	r7, #9
   46680:	mov	r0, r3
   46684:	str	r3, [r5, #1616]	; 0x650
   46688:	bl	3f77c <__assert_fail@plt+0x2e378>
   4668c:	mov	r1, #4
   46690:	str	r0, [r5, #1620]	; 0x654
   46694:	ldr	r0, [r5, #1616]	; 0x650
   46698:	bl	3f77c <__assert_fail@plt+0x2e378>
   4669c:	ldr	r3, [sp, #120]	; 0x78
   466a0:	ldr	r2, [r5, #1616]	; 0x650
   466a4:	ldr	r1, [r3, #12]
   466a8:	lsl	r2, r2, #1
   466ac:	str	r0, [r5, #1624]	; 0x658
   466b0:	ldr	r0, [r5, #1620]	; 0x654
   466b4:	bl	11134 <memcpy@plt>
   466b8:	ldr	r3, [sp, #120]	; 0x78
   466bc:	ldr	r2, [r5, #1616]	; 0x650
   466c0:	ldr	r0, [r5, #1624]	; 0x658
   466c4:	ldr	r1, [r3, #16]
   466c8:	lsl	r2, r2, #2
   466cc:	bl	11134 <memcpy@plt>
   466d0:	ldr	r3, [sp, #120]	; 0x78
   466d4:	ldr	ip, [sp, #68]	; 0x44
   466d8:	ldr	r1, [sp, #116]	; 0x74
   466dc:	ldrb	r2, [r3, #70]	; 0x46
   466e0:	ldr	r0, [r3, #20]
   466e4:	cmp	r1, #0
   466e8:	subne	r1, r1, #1
   466ec:	strb	r2, [r5, #1678]	; 0x68e
   466f0:	ldrb	r2, [r3, #71]	; 0x47
   466f4:	str	r0, [r5, #1628]	; 0x65c
   466f8:	ldrb	r0, [r3, #70]	; 0x46
   466fc:	strb	r2, [r5, #1679]	; 0x68f
   46700:	ldr	r2, [r3, #24]
   46704:	str	r0, [ip]
   46708:	ldr	r0, [r3, #28]
   4670c:	str	r2, [r5, #1632]	; 0x660
   46710:	ldr	r2, [r3, #48]	; 0x30
   46714:	str	r0, [r5, #1636]	; 0x664
   46718:	ldr	r0, [r3, #64]	; 0x40
   4671c:	str	r2, [r5, #1656]	; 0x678
   46720:	ldrd	r2, [r3, #56]	; 0x38
   46724:	str	r0, [r5, #1672]	; 0x688
   46728:	mov	r0, #1664	; 0x680
   4672c:	strd	r2, [r5, r0]
   46730:	ldr	r0, [pc, #-3676]	; 458dc <__assert_fail@plt+0x344d8>
   46734:	bl	44500 <__assert_fail@plt+0x330fc>
   46738:	cmp	r0, #0
   4673c:	blt	472c0 <__assert_fail@plt+0x35ebc>
   46740:	ldr	r3, [sp, #120]	; 0x78
   46744:	ldr	ip, [sp, #28]
   46748:	ldr	r5, [sp, #64]	; 0x40
   4674c:	ldrb	r1, [r3, #68]	; 0x44
   46750:	rsb	r8, r5, r8
   46754:	ldrb	r5, [ip, #1679]	; 0x68f
   46758:	cmp	r1, #0
   4675c:	strb	r1, [ip, #1676]	; 0x68c
   46760:	beq	4678c <__assert_fail@plt+0x35388>
   46764:	and	r3, r1, #7
   46768:	cmp	r3, #3
   4676c:	beq	470b4 <__assert_fail@plt+0x35cb0>
   46770:	cmp	r3, #4
   46774:	beq	470a8 <__assert_fail@plt+0x35ca4>
   46778:	cmp	r3, #2
   4677c:	beq	47088 <__assert_fail@plt+0x35c84>
   46780:	ldr	ip, [sp, #68]	; 0x44
   46784:	ldr	ip, [ip]
   46788:	str	ip, [sp, #32]
   4678c:	cmp	r5, #0
   46790:	beq	44a08 <__assert_fail@plt+0x33604>
   46794:	cmp	r5, #4
   46798:	movls	r1, r5
   4679c:	bhi	46ec8 <__assert_fail@plt+0x35ac4>
   467a0:	ldr	r0, [sp, #108]	; 0x6c
   467a4:	add	r3, r0, r1
   467a8:	cmp	fp, r3
   467ac:	bhi	467bc <__assert_fail@plt+0x353b8>
   467b0:	cmp	fp, r0
   467b4:	bls	467c8 <__assert_fail@plt+0x353c4>
   467b8:	rsb	r1, r0, fp
   467bc:	sub	r3, r1, #1
   467c0:	cmp	r3, #7
   467c4:	bls	46ef8 <__assert_fail@plt+0x35af4>
   467c8:	mov	r5, #0
   467cc:	ldr	ip, [sp, #28]
   467d0:	ldrb	r3, [ip, #1679]	; 0x68f
   467d4:	ldrb	r1, [ip, #1676]	; 0x68c
   467d8:	add	r3, r0, r3
   467dc:	str	r3, [sp, #108]	; 0x6c
   467e0:	b	44a08 <__assert_fail@plt+0x33604>
   467e4:	mov	r1, #0
   467e8:	mov	r0, r4
   467ec:	bl	39964 <__assert_fail@plt+0x28560>
   467f0:	ldr	lr, [sp, #32]
   467f4:	ldr	ip, [r6, #28]
   467f8:	movw	r1, #42428	; 0xa5bc
   467fc:	mov	r2, r5
   46800:	movt	r1, #7
   46804:	mov	r7, lr
   46808:	mul	ip, ip, lr
   4680c:	mov	r3, r0
   46810:	mov	r0, #1
   46814:	b	45980 <__assert_fail@plt+0x3457c>
   46818:	mov	r1, #0
   4681c:	mov	r0, r4
   46820:	bl	39964 <__assert_fail@plt+0x28560>
   46824:	ldr	ip, [r6, #28]
   46828:	movw	r1, #42220	; 0xa4ec
   4682c:	mov	r2, r5
   46830:	movt	r1, #7
   46834:	mul	ip, ip, r7
   46838:	str	ip, [sp]
   4683c:	mov	r3, r0
   46840:	mov	r0, #1
   46844:	bl	1132c <__printf_chk@plt>
   46848:	ldrb	r3, [r5]
   4684c:	cmp	r3, #0
   46850:	bne	45994 <__assert_fail@plt+0x34590>
   46854:	b	45840 <__assert_fail@plt+0x3443c>
   46858:	mov	r1, #0
   4685c:	mov	r0, r4
   46860:	bl	39964 <__assert_fail@plt+0x28560>
   46864:	ldr	ip, [r6, #28]
   46868:	movw	r1, #41552	; 0xa250
   4686c:	mov	r2, r7
   46870:	movt	r1, #7
   46874:	mul	ip, ip, r5
   46878:	str	ip, [sp]
   4687c:	mov	r3, r0
   46880:	mov	r0, #1
   46884:	bl	1132c <__printf_chk@plt>
   46888:	ldrb	r3, [r7]
   4688c:	ldr	ip, [sp, #108]	; 0x6c
   46890:	cmp	r3, #0
   46894:	bne	45650 <__assert_fail@plt+0x3424c>
   46898:	b	458c8 <__assert_fail@plt+0x344c4>
   4689c:	mov	r1, #0
   468a0:	mov	r0, r4
   468a4:	bl	39964 <__assert_fail@plt+0x28560>
   468a8:	ldr	ip, [r6, #28]
   468ac:	movw	r1, #41316	; 0xa164
   468b0:	mov	r2, r7
   468b4:	movt	r1, #7
   468b8:	mul	ip, ip, r5
   468bc:	str	ip, [sp]
   468c0:	mov	r3, r0
   468c4:	mov	r0, #1
   468c8:	bl	1132c <__printf_chk@plt>
   468cc:	ldrb	r3, [r7]
   468d0:	ldr	ip, [sp, #108]	; 0x6c
   468d4:	cmp	r3, #0
   468d8:	bne	45650 <__assert_fail@plt+0x3424c>
   468dc:	b	45508 <__assert_fail@plt+0x34104>
   468e0:	movw	r1, #41948	; 0xa3dc
   468e4:	mov	r0, #0
   468e8:	movt	r1, #7
   468ec:	b	46628 <__assert_fail@plt+0x35224>
   468f0:	mov	r1, #0
   468f4:	mov	r0, r4
   468f8:	bl	39964 <__assert_fail@plt+0x28560>
   468fc:	ldr	ip, [r6, #28]
   46900:	movw	r1, #41508	; 0xa224
   46904:	mov	r2, r7
   46908:	movt	r1, #7
   4690c:	mul	ip, ip, r5
   46910:	str	ip, [sp]
   46914:	mov	r3, r0
   46918:	mov	r0, #1
   4691c:	bl	1132c <__printf_chk@plt>
   46920:	ldrb	r3, [r7]
   46924:	ldr	ip, [sp, #108]	; 0x6c
   46928:	cmp	r3, #0
   4692c:	bne	45650 <__assert_fail@plt+0x3424c>
   46930:	b	45cd4 <__assert_fail@plt+0x348d0>
   46934:	mov	r1, #0
   46938:	mov	r0, r4
   4693c:	bl	39964 <__assert_fail@plt+0x28560>
   46940:	movw	r1, #41628	; 0xa29c
   46944:	mov	r2, r5
   46948:	movt	r1, #7
   4694c:	mov	r3, r0
   46950:	mov	r0, #1
   46954:	bl	1132c <__printf_chk@plt>
   46958:	ldrb	r3, [r5]
   4695c:	ldr	ip, [sp, #108]	; 0x6c
   46960:	cmp	r3, #0
   46964:	bne	45650 <__assert_fail@plt+0x3424c>
   46968:	b	46034 <__assert_fail@plt+0x34c30>
   4696c:	mov	r1, #0
   46970:	mov	r0, r4
   46974:	bl	39964 <__assert_fail@plt+0x28560>
   46978:	movw	r1, #41352	; 0xa188
   4697c:	mov	r2, r5
   46980:	movt	r1, #7
   46984:	mov	r3, r0
   46988:	mov	r0, #1
   4698c:	bl	1132c <__printf_chk@plt>
   46990:	ldrb	r3, [r5]
   46994:	cmp	r3, #0
   46998:	bne	45994 <__assert_fail@plt+0x34590>
   4699c:	ldr	r3, [sp, #120]	; 0x78
   469a0:	ldr	ip, [sp, #108]	; 0x6c
   469a4:	b	4610c <__assert_fail@plt+0x34d08>
   469a8:	mov	r1, #0
   469ac:	mov	r0, r4
   469b0:	bl	39964 <__assert_fail@plt+0x28560>
   469b4:	movw	r1, #41592	; 0xa278
   469b8:	mov	r2, r5
   469bc:	movt	r1, #7
   469c0:	mov	r3, r0
   469c4:	mov	r0, #1
   469c8:	bl	1132c <__printf_chk@plt>
   469cc:	ldrb	r3, [r5]
   469d0:	cmp	r3, #0
   469d4:	bne	45994 <__assert_fail@plt+0x34590>
   469d8:	ldr	r3, [sp, #120]	; 0x78
   469dc:	ldr	ip, [sp, #108]	; 0x6c
   469e0:	b	462e8 <__assert_fail@plt+0x34ee4>
   469e4:	mov	r1, #0
   469e8:	mov	r0, r5
   469ec:	bl	39964 <__assert_fail@plt+0x28560>
   469f0:	mov	r2, r7
   469f4:	movw	r1, #41684	; 0xa2d4
   469f8:	movt	r1, #7
   469fc:	mov	r3, r0
   46a00:	mov	r0, #1
   46a04:	bl	1132c <__printf_chk@plt>
   46a08:	mov	r1, #0
   46a0c:	mov	r0, r4
   46a10:	bl	39964 <__assert_fail@plt+0x28560>
   46a14:	bl	11218 <puts@plt>
   46a18:	ldrb	r3, [r7]
   46a1c:	ldr	ip, [sp, #108]	; 0x6c
   46a20:	cmp	r3, #0
   46a24:	bne	45650 <__assert_fail@plt+0x3424c>
   46a28:	b	45d5c <__assert_fail@plt+0x34958>
   46a2c:	mov	r1, #0
   46a30:	mov	r0, r4
   46a34:	bl	39964 <__assert_fail@plt+0x28560>
   46a38:	movw	r1, #41656	; 0xa2b8
   46a3c:	mov	r2, r5
   46a40:	movt	r1, #7
   46a44:	mov	r3, r0
   46a48:	mov	r0, #1
   46a4c:	bl	1132c <__printf_chk@plt>
   46a50:	ldrb	r3, [r5]
   46a54:	ldr	ip, [sp, #108]	; 0x6c
   46a58:	cmp	r3, #0
   46a5c:	bne	45650 <__assert_fail@plt+0x3424c>
   46a60:	b	460a8 <__assert_fail@plt+0x34ca4>
   46a64:	ldr	r5, [sp, #48]	; 0x30
   46a68:	b	462d0 <__assert_fail@plt+0x34ecc>
   46a6c:	mov	r1, #1
   46a70:	ldr	r5, [sp, #84]	; 0x54
   46a74:	ldr	r3, [r5]
   46a78:	blx	r3
   46a7c:	ldr	r3, [sp, #108]	; 0x6c
   46a80:	str	r0, [sp, #40]	; 0x28
   46a84:	str	r1, [sp, #56]	; 0x38
   46a88:	b	46220 <__assert_fail@plt+0x34e1c>
   46a8c:	ldr	r5, [sp, #48]	; 0x30
   46a90:	b	460f0 <__assert_fail@plt+0x34cec>
   46a94:	mov	r2, #5
   46a98:	movw	r1, #42532	; 0xa624
   46a9c:	mov	r0, #0
   46aa0:	movt	r1, #7
   46aa4:	bl	11170 <dcgettext@plt>
   46aa8:	mov	r1, r5
   46aac:	bl	4b9ec <warn@@Base>
   46ab0:	b	463e4 <__assert_fail@plt+0x34fe0>
   46ab4:	ldrb	r1, [r6, #70]	; 0x46
   46ab8:	mov	r2, r4
   46abc:	mov	r3, r5
   46ac0:	str	r1, [sp]
   46ac4:	bl	389e0 <__assert_fail@plt+0x275dc>
   46ac8:	movw	r1, #41376	; 0xa1a0
   46acc:	movt	r1, #7
   46ad0:	mov	r2, r0
   46ad4:	mov	r0, #1
   46ad8:	bl	1132c <__printf_chk@plt>
   46adc:	b	45dbc <__assert_fail@plt+0x349b8>
   46ae0:	ldr	r5, [r6, #24]
   46ae4:	ldrd	r2, [r6, #32]
   46ae8:	ldrb	r1, [r6, #70]	; 0x46
   46aec:	mul	r5, r5, r4
   46af0:	str	r1, [sp]
   46af4:	adds	r2, r2, r5
   46af8:	adc	r3, r3, #0
   46afc:	bl	389e0 <__assert_fail@plt+0x275dc>
   46b00:	mov	r2, r5
   46b04:	movw	r1, #41284	; 0xa144
   46b08:	movt	r1, #7
   46b0c:	mov	r3, r0
   46b10:	mov	r0, #1
   46b14:	bl	1132c <__printf_chk@plt>
   46b18:	b	45550 <__assert_fail@plt+0x3414c>
   46b1c:	ldr	r1, [r6, #24]
   46b20:	ldrd	r2, [r6, #32]
   46b24:	ldr	r4, [sp, #40]	; 0x28
   46b28:	ldr	r5, [sp, #56]	; 0x38
   46b2c:	strd	r2, [sp, #32]
   46b30:	umull	r2, r3, r4, r1
   46b34:	ldrb	ip, [r6, #70]	; 0x46
   46b38:	mul	r7, r4, r1
   46b3c:	str	ip, [sp]
   46b40:	mla	r3, r1, r5, r3
   46b44:	ldrd	r4, [sp, #32]
   46b48:	adds	r2, r2, r4
   46b4c:	adc	r3, r3, r5
   46b50:	bl	389e0 <__assert_fail@plt+0x275dc>
   46b54:	mov	r2, r7
   46b58:	movw	r1, #42328	; 0xa558
   46b5c:	movt	r1, #7
   46b60:	mov	r3, r0
   46b64:	mov	r0, #1
   46b68:	bl	1132c <__printf_chk@plt>
   46b6c:	b	456b0 <__assert_fail@plt+0x342ac>
   46b70:	mov	r1, #8
   46b74:	ldr	ip, [sp, #84]	; 0x54
   46b78:	ldr	r3, [ip]
   46b7c:	blx	r3
   46b80:	ldr	r3, [sp, #108]	; 0x6c
   46b84:	str	r0, [sp, #40]	; 0x28
   46b88:	str	r1, [sp, #56]	; 0x38
   46b8c:	b	4568c <__assert_fail@plt+0x34288>
   46b90:	mov	r1, #2
   46b94:	ldr	r5, [sp, #84]	; 0x54
   46b98:	ldr	r3, [r5]
   46b9c:	blx	r3
   46ba0:	ldr	r3, [sp, #108]	; 0x6c
   46ba4:	str	r0, [sp, #40]	; 0x28
   46ba8:	str	r1, [sp, #56]	; 0x38
   46bac:	b	45eb4 <__assert_fail@plt+0x34ab0>
   46bb0:	mov	r1, #4
   46bb4:	ldr	r5, [sp, #84]	; 0x54
   46bb8:	ldr	r3, [r5]
   46bbc:	blx	r3
   46bc0:	ldr	r3, [sp, #108]	; 0x6c
   46bc4:	str	r0, [sp, #40]	; 0x28
   46bc8:	str	r1, [sp, #56]	; 0x38
   46bcc:	b	45f7c <__assert_fail@plt+0x34b78>
   46bd0:	add	r2, sp, #132	; 0x84
   46bd4:	add	r3, sp, #128	; 0x80
   46bd8:	mov	r0, ip
   46bdc:	stm	sp, {r2, r3}
   46be0:	mov	r1, fp
   46be4:	add	r2, sp, #120	; 0x78
   46be8:	add	r3, sp, #136	; 0x88
   46bec:	bl	3f0fc <__assert_fail@plt+0x2dcf8>
   46bf0:	ldr	r6, [sp, #120]	; 0x78
   46bf4:	cmp	r6, #0
   46bf8:	str	r0, [sp, #108]	; 0x6c
   46bfc:	beq	44868 <__assert_fail@plt+0x33464>
   46c00:	ldr	r3, [sp, #116]	; 0x74
   46c04:	mov	r0, r6
   46c08:	ldr	r5, [sp, #72]	; 0x48
   46c0c:	cmp	r3, #0
   46c10:	ldr	r1, [r6, #64]	; 0x40
   46c14:	subne	r3, r3, #1
   46c18:	str	r8, [r6, #4]
   46c1c:	cmp	r3, r1
   46c20:	movcs	r1, r3
   46c24:	str	r5, [r6]
   46c28:	bl	44500 <__assert_fail@plt+0x330fc>
   46c2c:	cmp	r0, #0
   46c30:	blt	44868 <__assert_fail@plt+0x33464>
   46c34:	ldrb	r3, [r6, #68]	; 0x44
   46c38:	cmp	r3, #0
   46c3c:	beq	46cdc <__assert_fail@plt+0x358d8>
   46c40:	and	r3, r3, #7
   46c44:	cmp	r3, #3
   46c48:	beq	4709c <__assert_fail@plt+0x35c98>
   46c4c:	cmp	r3, #4
   46c50:	beq	47090 <__assert_fail@plt+0x35c8c>
   46c54:	cmp	r3, #2
   46c58:	streq	r3, [sp, #32]
   46c5c:	ldrne	ip, [sp, #68]	; 0x44
   46c60:	ldrne	ip, [ip]
   46c64:	strne	ip, [sp, #32]
   46c68:	ldr	ip, [sp, #64]	; 0x40
   46c6c:	movw	r1, #40672	; 0x9ee0
   46c70:	mov	r0, #1
   46c74:	movt	r1, #7
   46c78:	rsb	r2, ip, r8
   46c7c:	movw	r9, #26476	; 0x676c
   46c80:	bl	1132c <__printf_chk@plt>
   46c84:	movt	r9, #9
   46c88:	ldrd	r0, [sp, #40]	; 0x28
   46c8c:	ldrb	r2, [r6, #70]	; 0x46
   46c90:	bl	38ad4 <__assert_fail@plt+0x276d0>
   46c94:	ldrd	r0, [sp, #56]	; 0x38
   46c98:	mov	r2, r4
   46c9c:	bl	38ad4 <__assert_fail@plt+0x276d0>
   46ca0:	ldr	r3, [r9]
   46ca4:	cmp	r3, #0
   46ca8:	beq	46ce8 <__assert_fail@plt+0x358e4>
   46cac:	ldr	ip, [r6, #28]
   46cb0:	movw	r1, #40680	; 0x9ee8
   46cb4:	ldr	r2, [r6, #20]
   46cb8:	movt	r1, #7
   46cbc:	ldr	r3, [r6, #24]
   46cc0:	mov	r0, #1
   46cc4:	str	ip, [sp]
   46cc8:	ldr	ip, [r6, #64]	; 0x40
   46ccc:	str	ip, [sp, #4]
   46cd0:	bl	1132c <__printf_chk@plt>
   46cd4:	str	r6, [sp, #72]	; 0x48
   46cd8:	b	44b74 <__assert_fail@plt+0x33770>
   46cdc:	ldr	ip, [sp, #80]	; 0x50
   46ce0:	str	ip, [sp, #32]
   46ce4:	b	46c68 <__assert_fail@plt+0x35864>
   46ce8:	movw	r0, #40708	; 0x9f04
   46cec:	movt	r0, #7
   46cf0:	bl	11218 <puts@plt>
   46cf4:	ldr	r2, [sp, #136]	; 0x88
   46cf8:	movw	r1, #40712	; 0x9f08
   46cfc:	mov	r0, #1
   46d00:	movt	r1, #7
   46d04:	bl	1132c <__printf_chk@plt>
   46d08:	movw	r1, #40744	; 0x9f28
   46d0c:	mov	r0, #1
   46d10:	movt	r1, #7
   46d14:	ldr	r2, [r6, #20]
   46d18:	bl	1132c <__printf_chk@plt>
   46d1c:	ldr	r3, [sp, #136]	; 0x88
   46d20:	cmp	r3, #3
   46d24:	bgt	47048 <__assert_fail@plt+0x35c44>
   46d28:	ldr	r2, [r6, #24]
   46d2c:	movw	r1, #40840	; 0x9f88
   46d30:	mov	r0, #1
   46d34:	movt	r1, #7
   46d38:	bl	1132c <__printf_chk@plt>
   46d3c:	ldr	r2, [r6, #28]
   46d40:	movw	r1, #40872	; 0x9fa8
   46d44:	mov	r0, #1
   46d48:	movt	r1, #7
   46d4c:	bl	1132c <__printf_chk@plt>
   46d50:	movw	r1, #40904	; 0x9fc8
   46d54:	mov	r0, #1
   46d58:	movt	r1, #7
   46d5c:	ldr	r2, [r6, #64]	; 0x40
   46d60:	bl	1132c <__printf_chk@plt>
   46d64:	ldr	r3, [sp, #132]	; 0x84
   46d68:	cmp	r3, #0
   46d6c:	bne	46fe8 <__assert_fail@plt+0x35be4>
   46d70:	movw	r4, #16696	; 0x4138
   46d74:	movt	r4, #9
   46d78:	ldr	r1, [r4]
   46d7c:	mov	r0, #10
   46d80:	bl	111ac <_IO_putc@plt>
   46d84:	b	46cd4 <__assert_fail@plt+0x358d0>
   46d88:	mov	r0, r6
   46d8c:	add	r1, sp, #124	; 0x7c
   46d90:	add	r2, sp, #116	; 0x74
   46d94:	bl	39a0c <__assert_fail@plt+0x28608>
   46d98:	b	44f78 <__assert_fail@plt+0x33b74>
   46d9c:	mov	r2, r5
   46da0:	movw	r1, #41192	; 0xa0e8
   46da4:	mov	r0, #1
   46da8:	movt	r1, #7
   46dac:	bl	1132c <__printf_chk@plt>
   46db0:	b	44af8 <__assert_fail@plt+0x336f4>
   46db4:	mov	r2, #5
   46db8:	movw	r1, #30836	; 0x7874
   46dbc:	mov	r0, #0
   46dc0:	movt	r1, #7
   46dc4:	bl	11170 <dcgettext@plt>
   46dc8:	ldr	r1, [sp, #32]
   46dcc:	mov	r2, #8
   46dd0:	bl	4b2b0 <error@@Base>
   46dd4:	mov	r1, #8
   46dd8:	b	44a38 <__assert_fail@plt+0x33634>
   46ddc:	ldr	ip, [sp, #84]	; 0x54
   46de0:	ldr	r3, [ip]
   46de4:	blx	r3
   46de8:	mov	r3, #1648	; 0x670
   46dec:	ldr	ip, [sp, #108]	; 0x6c
   46df0:	strd	r0, [r7, r3]
   46df4:	b	44a74 <__assert_fail@plt+0x33670>
   46df8:	mov	r1, #8
   46dfc:	ldr	r5, [sp, #84]	; 0x54
   46e00:	ldr	r3, [r5]
   46e04:	blx	r3
   46e08:	strd	r0, [sp, #40]	; 0x28
   46e0c:	add	sl, r0, #12
   46e10:	ldr	r0, [sp, #108]	; 0x6c
   46e14:	b	465ec <__assert_fail@plt+0x351e8>
   46e18:	ldr	r3, [r9]
   46e1c:	cmp	r3, #0
   46e20:	beq	45994 <__assert_fail@plt+0x34590>
   46e24:	movw	r0, #41804	; 0xa34c
   46e28:	movt	r0, #7
   46e2c:	bl	11218 <puts@plt>
   46e30:	ldr	r7, [sp, #52]	; 0x34
   46e34:	ldr	ip, [sp, #108]	; 0x6c
   46e38:	b	44f14 <__assert_fail@plt+0x33b10>
   46e3c:	movw	r0, #41736	; 0xa308
   46e40:	movt	r0, #7
   46e44:	bl	11218 <puts@plt>
   46e48:	b	45dd8 <__assert_fail@plt+0x349d4>
   46e4c:	movw	r0, #41712	; 0xa2f0
   46e50:	movt	r0, #7
   46e54:	bl	11218 <puts@plt>
   46e58:	b	46320 <__assert_fail@plt+0x34f1c>
   46e5c:	mov	r2, r0
   46e60:	movw	r1, #42396	; 0xa59c
   46e64:	mov	r0, #1
   46e68:	movt	r1, #7
   46e6c:	bl	1132c <__printf_chk@plt>
   46e70:	ldr	ip, [sp, #108]	; 0x6c
   46e74:	b	44f14 <__assert_fail@plt+0x33b10>
   46e78:	mov	ip, #0
   46e7c:	mov	r3, r0
   46e80:	str	ip, [sp, #40]	; 0x28
   46e84:	str	ip, [sp, #56]	; 0x38
   46e88:	b	45f7c <__assert_fail@plt+0x34b78>
   46e8c:	mov	ip, #0
   46e90:	mov	r3, r0
   46e94:	str	ip, [sp, #40]	; 0x28
   46e98:	str	ip, [sp, #56]	; 0x38
   46e9c:	b	46220 <__assert_fail@plt+0x34e1c>
   46ea0:	mov	r4, #0
   46ea4:	mov	r3, r0
   46ea8:	str	r4, [sp, #40]	; 0x28
   46eac:	str	r4, [sp, #56]	; 0x38
   46eb0:	b	4568c <__assert_fail@plt+0x34288>
   46eb4:	mov	ip, #0
   46eb8:	mov	r3, r0
   46ebc:	str	ip, [sp, #40]	; 0x28
   46ec0:	str	ip, [sp, #56]	; 0x38
   46ec4:	b	45eb4 <__assert_fail@plt+0x34ab0>
   46ec8:	mov	r2, #5
   46ecc:	movw	r1, #41064	; 0xa068
   46ed0:	mov	r0, #0
   46ed4:	movt	r1, #7
   46ed8:	bl	11170 <dcgettext@plt>
   46edc:	ldr	r5, [sp, #28]
   46ee0:	ldrb	r1, [r5, #1679]	; 0x68f
   46ee4:	bl	4b9ec <warn@@Base>
   46ee8:	mov	r3, #4
   46eec:	mov	r1, r3
   46ef0:	strb	r3, [r5, #1679]	; 0x68f
   46ef4:	b	467a0 <__assert_fail@plt+0x3539c>
   46ef8:	ldr	ip, [sp, #84]	; 0x54
   46efc:	ldr	r3, [ip]
   46f00:	blx	r3
   46f04:	mov	r5, r0
   46f08:	ldr	r0, [sp, #108]	; 0x6c
   46f0c:	b	467cc <__assert_fail@plt+0x353c8>
   46f10:	mov	r2, #0
   46f14:	mov	r3, fp
   46f18:	add	r1, sp, #112	; 0x70
   46f1c:	bl	3a350 <__assert_fail@plt+0x28f4c>
   46f20:	ldr	r2, [sp, #108]	; 0x6c
   46f24:	ldr	r3, [sp, #112]	; 0x70
   46f28:	add	r3, r2, r3
   46f2c:	str	r3, [sp, #128]	; 0x80
   46f30:	add	r3, r3, r0
   46f34:	str	r0, [sp, #132]	; 0x84
   46f38:	cmp	fp, r3
   46f3c:	str	r3, [sp, #108]	; 0x6c
   46f40:	bls	46f4c <__assert_fail@plt+0x35b48>
   46f44:	cmp	r0, #0
   46f48:	bge	44a94 <__assert_fail@plt+0x33690>
   46f4c:	mov	r2, #5
   46f50:	movw	r1, #41120	; 0xa0a0
   46f54:	mov	r0, #0
   46f58:	movt	r1, #7
   46f5c:	bl	11170 <dcgettext@plt>
   46f60:	ldr	r1, [sp, #132]	; 0x84
   46f64:	bl	4b9ec <warn@@Base>
   46f68:	mov	r3, #0
   46f6c:	str	fp, [sp, #108]	; 0x6c
   46f70:	str	r3, [sp, #128]	; 0x80
   46f74:	str	r3, [sp, #132]	; 0x84
   46f78:	b	44a94 <__assert_fail@plt+0x33690>
   46f7c:	movw	r1, #40936	; 0x9fe8
   46f80:	mov	r0, #1
   46f84:	movt	r1, #7
   46f88:	bl	1132c <__printf_chk@plt>
   46f8c:	ldr	r3, [sp, #132]	; 0x84
   46f90:	cmp	r3, #0
   46f94:	beq	46fc0 <__assert_fail@plt+0x35bbc>
   46f98:	ldr	r3, [sp, #128]	; 0x80
   46f9c:	mov	r0, #1
   46fa0:	movw	r1, #34544	; 0x86f0
   46fa4:	movt	r1, #7
   46fa8:	ldrb	r2, [r3, r4]
   46fac:	add	r4, r4, r0
   46fb0:	bl	1132c <__printf_chk@plt>
   46fb4:	ldr	r3, [sp, #132]	; 0x84
   46fb8:	cmp	r3, r4
   46fbc:	bhi	46f98 <__assert_fail@plt+0x35b94>
   46fc0:	movw	r4, #16696	; 0x4138
   46fc4:	movt	r4, #9
   46fc8:	mov	r0, #10
   46fcc:	ldr	r6, [pc, #1188]	; 47478 <__assert_fail@plt+0x36074>
   46fd0:	ldr	r1, [r4]
   46fd4:	bl	111ac <_IO_putc@plt>
   46fd8:	ldr	r1, [r4]
   46fdc:	mov	r0, #10
   46fe0:	bl	111ac <_IO_putc@plt>
   46fe4:	b	44b74 <__assert_fail@plt+0x33770>
   46fe8:	movw	r1, #40936	; 0x9fe8
   46fec:	mov	r0, #1
   46ff0:	movt	r1, #7
   46ff4:	bl	1132c <__printf_chk@plt>
   46ff8:	ldr	r3, [sp, #132]	; 0x84
   46ffc:	cmp	r3, #0
   47000:	movne	r4, #0
   47004:	beq	47030 <__assert_fail@plt+0x35c2c>
   47008:	ldr	r3, [sp, #128]	; 0x80
   4700c:	mov	r0, #1
   47010:	movw	r1, #34544	; 0x86f0
   47014:	movt	r1, #7
   47018:	ldrb	r2, [r3, r4]
   4701c:	add	r4, r4, r0
   47020:	bl	1132c <__printf_chk@plt>
   47024:	ldr	r3, [sp, #132]	; 0x84
   47028:	cmp	r3, r4
   4702c:	bhi	47008 <__assert_fail@plt+0x35c04>
   47030:	movw	r4, #16696	; 0x4138
   47034:	movt	r4, #9
   47038:	mov	r0, #10
   4703c:	ldr	r1, [r4]
   47040:	bl	111ac <_IO_putc@plt>
   47044:	b	46d78 <__assert_fail@plt+0x35974>
   47048:	ldrb	r2, [r6, #70]	; 0x46
   4704c:	movw	r1, #40776	; 0x9f48
   47050:	mov	r0, #1
   47054:	movt	r1, #7
   47058:	bl	1132c <__printf_chk@plt>
   4705c:	movw	r1, #40808	; 0x9f68
   47060:	ldrb	r2, [r6, #71]	; 0x47
   47064:	movt	r1, #7
   47068:	mov	r0, #1
   4706c:	bl	1132c <__printf_chk@plt>
   47070:	b	46d28 <__assert_fail@plt+0x35924>
   47074:	mov	r4, #0
   47078:	mov	r5, #0
   4707c:	mov	sl, #12
   47080:	strd	r4, [sp, #40]	; 0x28
   47084:	b	465ec <__assert_fail@plt+0x351e8>
   47088:	str	r3, [sp, #32]
   4708c:	b	4678c <__assert_fail@plt+0x35388>
   47090:	mov	r5, #8
   47094:	str	r5, [sp, #32]
   47098:	b	46c68 <__assert_fail@plt+0x35864>
   4709c:	mov	r5, #4
   470a0:	str	r5, [sp, #32]
   470a4:	b	46c68 <__assert_fail@plt+0x35864>
   470a8:	mov	ip, #8
   470ac:	str	ip, [sp, #32]
   470b0:	b	4678c <__assert_fail@plt+0x35388>
   470b4:	mov	ip, #4
   470b8:	str	ip, [sp, #32]
   470bc:	b	4678c <__assert_fail@plt+0x35388>
   470c0:	mov	r2, #5
   470c4:	movw	r1, #41760	; 0xa320
   470c8:	mov	r0, #0
   470cc:	movt	r1, #7
   470d0:	bl	11170 <dcgettext@plt>
   470d4:	str	r4, [sp, #52]	; 0x34
   470d8:	bl	4b9ec <warn@@Base>
   470dc:	mov	r3, #0
   470e0:	mov	r7, r3
   470e4:	str	r3, [r6, #8]
   470e8:	ldr	ip, [sp, #108]	; 0x6c
   470ec:	b	44f14 <__assert_fail@plt+0x33b10>
   470f0:	mov	r1, #0
   470f4:	ldr	r0, [sp, #32]
   470f8:	str	ip, [sp, #24]
   470fc:	bl	39964 <__assert_fail@plt+0x28560>
   47100:	mov	r2, r7
   47104:	movw	r1, #42140	; 0xa49c
   47108:	movt	r1, #7
   4710c:	mov	r5, #0
   47110:	mov	r3, r0
   47114:	mov	r0, #1
   47118:	bl	1132c <__printf_chk@plt>
   4711c:	ldr	r4, [sp, #68]	; 0x44
   47120:	ldr	ip, [sp, #24]
   47124:	mvn	r3, #0
   47128:	mov	r2, #0
   4712c:	ldr	r0, [sp, #108]	; 0x6c
   47130:	ldr	r1, [r4]
   47134:	mov	r4, ip
   47138:	strd	r4, [sp]
   4713c:	ldr	r5, [sp, #76]	; 0x4c
   47140:	mov	r4, #0
   47144:	str	r5, [sp, #16]
   47148:	mov	r5, #0
   4714c:	strd	r4, [sp, #8]
   47150:	bl	3a9e8 <__assert_fail@plt+0x295e4>
   47154:	movw	r0, #36588	; 0x8eec
   47158:	movt	r0, #7
   4715c:	bl	11218 <puts@plt>
   47160:	ldrb	r3, [r7]
   47164:	cmp	r3, #0
   47168:	bne	457b4 <__assert_fail@plt+0x343b0>
   4716c:	b	457a0 <__assert_fail@plt+0x3439c>
   47170:	mov	r1, #0
   47174:	ldr	r0, [sp, #32]
   47178:	str	ip, [sp, #24]
   4717c:	bl	39964 <__assert_fail@plt+0x28560>
   47180:	ldr	ip, [sp, #24]
   47184:	movw	r1, #42068	; 0xa454
   47188:	movt	r1, #7
   4718c:	mov	r5, #0
   47190:	mov	r2, ip
   47194:	mov	r3, r0
   47198:	mov	r0, #1
   4719c:	bl	1132c <__printf_chk@plt>
   471a0:	ldr	r4, [sp, #68]	; 0x44
   471a4:	mvn	r3, #0
   471a8:	mov	r2, #0
   471ac:	ldr	r0, [sp, #108]	; 0x6c
   471b0:	ldr	r1, [r4]
   471b4:	mov	r4, r7
   471b8:	strd	r4, [sp]
   471bc:	mov	r4, #0
   471c0:	ldr	r5, [sp, #76]	; 0x4c
   471c4:	str	r5, [sp, #16]
   471c8:	mov	r5, #0
   471cc:	strd	r4, [sp, #8]
   471d0:	bl	3a9e8 <__assert_fail@plt+0x295e4>
   471d4:	movw	r0, #36588	; 0x8eec
   471d8:	movt	r0, #7
   471dc:	bl	11218 <puts@plt>
   471e0:	ldr	ip, [sp, #24]
   471e4:	ldrb	r3, [ip]
   471e8:	cmp	r3, #0
   471ec:	bne	457b4 <__assert_fail@plt+0x343b0>
   471f0:	b	45b98 <__assert_fail@plt+0x34794>
   471f4:	movw	r1, #41996	; 0xa40c
   471f8:	mov	r0, #1
   471fc:	movt	r1, #7
   47200:	mov	r5, #0
   47204:	bl	1132c <__printf_chk@plt>
   47208:	ldr	ip, [sp, #68]	; 0x44
   4720c:	mov	r2, r4
   47210:	ldr	r4, [sp, #76]	; 0x4c
   47214:	mvn	r3, #0
   47218:	ldr	r0, [sp, #108]	; 0x6c
   4721c:	ldr	r1, [ip]
   47220:	str	r4, [sp, #16]
   47224:	mov	r4, r7
   47228:	strd	r4, [sp]
   4722c:	mov	r4, #0
   47230:	mov	r5, #0
   47234:	strd	r4, [sp, #8]
   47238:	bl	3a9e8 <__assert_fail@plt+0x295e4>
   4723c:	movw	r0, #36588	; 0x8eec
   47240:	movt	r0, #7
   47244:	bl	11218 <puts@plt>
   47248:	ldr	r3, [sp, #108]	; 0x6c
   4724c:	b	45aec <__assert_fail@plt+0x346e8>
   47250:	cmp	r5, fp
   47254:	bcs	4729c <__assert_fail@plt+0x35e98>
   47258:	rsb	r1, r5, fp
   4725c:	sub	r3, r1, #1
   47260:	cmp	r3, #7
   47264:	bls	464c8 <__assert_fail@plt+0x350c4>
   47268:	ldr	r5, [sp, #120]	; 0x78
   4726c:	mov	r2, #0
   47270:	mov	r3, #0
   47274:	strd	r2, [sp, #40]	; 0x28
   47278:	ldr	r0, [pc, #504]	; 47478 <__assert_fail@plt+0x36074>
   4727c:	mov	r1, #0
   47280:	mov	r2, #72	; 0x48
   47284:	bl	112f0 <memset@plt>
   47288:	cmp	r5, #0
   4728c:	ldrne	ip, [sp, #80]	; 0x50
   47290:	strne	ip, [sp, #32]
   47294:	bne	4666c <__assert_fail@plt+0x35268>
   47298:	b	4494c <__assert_fail@plt+0x33548>
   4729c:	mov	r0, #0
   472a0:	mov	r1, #0
   472a4:	ldr	r5, [sp, #120]	; 0x78
   472a8:	strd	r0, [sp, #40]	; 0x28
   472ac:	b	47278 <__assert_fail@plt+0x35e74>
   472b0:	ldr	ip, [sp, #80]	; 0x50
   472b4:	ldr	r5, [sp, #88]	; 0x58
   472b8:	str	ip, [sp, #32]
   472bc:	b	4665c <__assert_fail@plt+0x35258>
   472c0:	mov	r2, #5
   472c4:	movw	r1, #40996	; 0xa024
   472c8:	mov	r0, #0
   472cc:	movt	r1, #7
   472d0:	bl	11170 <dcgettext@plt>
   472d4:	bl	4b9ec <warn@@Base>
   472d8:	b	44868 <__assert_fail@plt+0x33464>
   472dc:	ldr	ip, [sp, #80]	; 0x50
   472e0:	ldr	r5, [sp, #72]	; 0x48
   472e4:	str	ip, [sp, #32]
   472e8:	b	4665c <__assert_fail@plt+0x35258>
   472ec:	cmp	fp, r7
   472f0:	bls	4729c <__assert_fail@plt+0x35e98>
   472f4:	rsb	r1, r7, fp
   472f8:	sub	r3, r1, #1
   472fc:	cmp	r3, #7
   47300:	bhi	47268 <__assert_fail@plt+0x35e64>
   47304:	b	46500 <__assert_fail@plt+0x350fc>
   47308:	mov	r6, #4
   4730c:	b	4651c <__assert_fail@plt+0x35118>
   47310:	mov	r1, r6
   47314:	sub	r3, r1, #1
   47318:	cmp	r3, #7
   4731c:	bhi	46540 <__assert_fail@plt+0x3513c>
   47320:	ldr	ip, [sp, #84]	; 0x54
   47324:	mov	r0, r7
   47328:	ldr	r3, [ip]
   4732c:	blx	r3
   47330:	ldr	ip, [sp, #92]	; 0x5c
   47334:	cmp	ip, #0
   47338:	bne	46554 <__assert_fail@plt+0x35150>
   4733c:	mov	r3, #0
   47340:	mvn	r2, #0
   47344:	cmp	r1, r3
   47348:	cmpeq	r0, r2
   4734c:	movne	r3, #0
   47350:	moveq	r3, #1
   47354:	cmp	r6, #4
   47358:	movne	r3, #0
   4735c:	andeq	r3, r3, #1
   47360:	cmp	r3, #0
   47364:	bne	46560 <__assert_fail@plt+0x3515c>
   47368:	and	r3, r0, r1
   4736c:	cmp	r6, #8
   47370:	cmneq	r3, #1
   47374:	movne	r3, #0
   47378:	moveq	r3, #1
   4737c:	cmp	r3, #0
   47380:	beq	46568 <__assert_fail@plt+0x35164>
   47384:	cmp	fp, r9
   47388:	mov	r3, #0
   4738c:	str	r3, [sp, #120]	; 0x78
   47390:	bhi	473b0 <__assert_fail@plt+0x35fac>
   47394:	mov	r2, #5
   47398:	movw	r1, #40964	; 0xa004
   4739c:	mov	r0, #0
   473a0:	movt	r1, #7
   473a4:	bl	11170 <dcgettext@plt>
   473a8:	bl	4b9ec <warn@@Base>
   473ac:	b	44868 <__assert_fail@plt+0x33464>
   473b0:	add	r2, sp, #132	; 0x84
   473b4:	add	r3, sp, #128	; 0x80
   473b8:	mov	r0, r9
   473bc:	stm	sp, {r2, r3}
   473c0:	mov	r1, fp
   473c4:	add	r2, sp, #120	; 0x78
   473c8:	add	r3, sp, #136	; 0x88
   473cc:	bl	3f0fc <__assert_fail@plt+0x2dcf8>
   473d0:	ldr	r6, [sp, #120]	; 0x78
   473d4:	cmp	r6, #0
   473d8:	beq	47394 <__assert_fail@plt+0x35f90>
   473dc:	ldr	r3, [sp, #116]	; 0x74
   473e0:	mov	r0, r6
   473e4:	ldr	ip, [sp, #88]	; 0x58
   473e8:	cmp	r3, #0
   473ec:	ldr	r1, [r6, #64]	; 0x40
   473f0:	subne	r3, r3, #1
   473f4:	str	r5, [r6, #4]
   473f8:	cmp	r3, r1
   473fc:	movcs	r1, r3
   47400:	str	ip, [r6]
   47404:	bl	44500 <__assert_fail@plt+0x330fc>
   47408:	cmp	r0, #0
   4740c:	blt	472c0 <__assert_fail@plt+0x35ebc>
   47410:	ldr	r5, [sp, #120]	; 0x78
   47414:	ldrb	r3, [r5, #68]	; 0x44
   47418:	cmp	r3, #0
   4741c:	beq	47450 <__assert_fail@plt+0x3604c>
   47420:	and	r3, r3, #7
   47424:	cmp	r3, #3
   47428:	beq	4746c <__assert_fail@plt+0x36068>
   4742c:	cmp	r3, #4
   47430:	beq	47460 <__assert_fail@plt+0x3605c>
   47434:	cmp	r3, #2
   47438:	streq	r3, [sp, #32]
   4743c:	ldrne	ip, [sp, #68]	; 0x44
   47440:	ldrne	ip, [ip]
   47444:	strne	ip, [sp, #32]
   47448:	str	r6, [sp, #88]	; 0x58
   4744c:	b	4665c <__assert_fail@plt+0x35258>
   47450:	ldr	ip, [sp, #80]	; 0x50
   47454:	str	ip, [sp, #32]
   47458:	b	47448 <__assert_fail@plt+0x36044>
   4745c:	bl	1117c <__stack_chk_fail@plt>
   47460:	mov	ip, #8
   47464:	str	ip, [sp, #32]
   47468:	b	47448 <__assert_fail@plt+0x36044>
   4746c:	mov	ip, #4
   47470:	str	ip, [sp, #32]
   47474:	b	47448 <__assert_fail@plt+0x36044>
   47478:	andeq	r6, r9, r0, asr #13
   4747c:	push	{r3, r4, r5, lr}
   47480:	mov	r4, r0
   47484:	mvn	r0, #0
   47488:	mov	r5, r1
   4748c:	bl	52568 <zcfree@@Base+0xf38>
   47490:	cmp	r0, r4
   47494:	bls	474a8 <__assert_fail@plt+0x360a4>
   47498:	mov	r0, r4
   4749c:	mov	r1, r5
   474a0:	pop	{r3, r4, r5, lr}
   474a4:	b	4ebc8 <warn@@Base+0x31dc>
   474a8:	movw	r3, #16692	; 0x4134
   474ac:	movt	r3, #9
   474b0:	mov	r2, #5
   474b4:	movw	r1, #42600	; 0xa668
   474b8:	mov	r0, #0
   474bc:	movt	r1, #7
   474c0:	ldr	r5, [r3]
   474c4:	bl	11170 <dcgettext@plt>
   474c8:	mov	r3, r4
   474cc:	mov	r1, #1
   474d0:	mov	r2, r0
   474d4:	mov	r0, r5
   474d8:	bl	11338 <__fprintf_chk@plt>
   474dc:	mov	r0, #1
   474e0:	bl	4eaa8 <warn@@Base+0x30bc>
   474e4:	movw	ip, #16680	; 0x4128
   474e8:	movt	ip, #9
   474ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   474f0:	mov	r8, r1
   474f4:	ldr	r7, [r0, #12]
   474f8:	sub	sp, sp, #172	; 0xac
   474fc:	ldr	r1, [ip]
   47500:	mov	fp, r0
   47504:	cmp	r7, #0
   47508:	ldrd	r2, [r0, #24]
   4750c:	str	ip, [sp, #16]
   47510:	str	r1, [sp, #164]	; 0xa4
   47514:	add	r6, r7, r2
   47518:	movweq	r1, #42684	; 0xa6bc
   4751c:	moveq	r0, r7
   47520:	movteq	r1, #7
   47524:	beq	4776c <__assert_fail@plt+0x36368>
   47528:	cmp	r3, #0
   4752c:	cmpeq	r2, #23
   47530:	bls	47760 <__assert_fail@plt+0x3635c>
   47534:	add	r5, r7, #4
   47538:	cmp	r6, r5
   4753c:	bls	475ec <__assert_fail@plt+0x361e8>
   47540:	mov	r1, #4
   47544:	movw	r9, #26492	; 0x677c
   47548:	movt	r9, #9
   4754c:	mov	r0, r7
   47550:	add	sl, r7, #8
   47554:	ldr	r3, [r9]
   47558:	blx	r3
   4755c:	cmp	r0, #1
   47560:	mov	r4, r0
   47564:	movls	r5, #0
   47568:	bls	47600 <__assert_fail@plt+0x361fc>
   4756c:	cmp	r6, sl
   47570:	bhi	47784 <__assert_fail@plt+0x36380>
   47574:	cmp	r6, r5
   47578:	bls	4758c <__assert_fail@plt+0x36188>
   4757c:	rsb	r1, r5, r6
   47580:	sub	r3, r1, #1
   47584:	cmp	r3, #7
   47588:	bls	47788 <__assert_fail@plt+0x36384>
   4758c:	add	r2, r7, #12
   47590:	cmp	r6, r2
   47594:	bls	48490 <__assert_fail@plt+0x3708c>
   47598:	mov	r0, sl
   4759c:	ldr	r3, [r9]
   475a0:	mov	r1, #4
   475a4:	str	r2, [sp, #12]
   475a8:	blx	r3
   475ac:	add	sl, r7, #16
   475b0:	cmp	r6, sl
   475b4:	mov	r5, #0
   475b8:	ldr	r2, [sp, #12]
   475bc:	str	r0, [sp, #52]	; 0x34
   475c0:	bhi	4763c <__assert_fail@plt+0x36238>
   475c4:	cmp	r6, r2
   475c8:	bls	47820 <__assert_fail@plt+0x3641c>
   475cc:	rsb	r1, r2, r6
   475d0:	sub	r3, r1, #1
   475d4:	cmp	r3, #7
   475d8:	bls	47640 <__assert_fail@plt+0x3623c>
   475dc:	mov	r3, #0
   475e0:	str	r3, [sp, #24]
   475e4:	mov	r2, r3
   475e8:	b	47658 <__assert_fail@plt+0x36254>
   475ec:	cmp	r7, r6
   475f0:	bcc	4779c <__assert_fail@plt+0x36398>
   475f4:	mov	r4, #0
   475f8:	add	sl, r7, #8
   475fc:	mov	r5, r4
   47600:	add	r2, r7, #12
   47604:	cmp	r6, r2
   47608:	bls	476e8 <__assert_fail@plt+0x362e4>
   4760c:	movw	r9, #26492	; 0x677c
   47610:	movt	r9, #9
   47614:	mov	r0, sl
   47618:	mov	r1, #4
   4761c:	ldr	r3, [r9]
   47620:	add	sl, r7, #16
   47624:	str	r2, [sp, #12]
   47628:	blx	r3
   4762c:	cmp	r6, sl
   47630:	ldr	r2, [sp, #12]
   47634:	str	r0, [sp, #52]	; 0x34
   47638:	bls	475cc <__assert_fail@plt+0x361c8>
   4763c:	mov	r1, #4
   47640:	ldr	r3, [r9]
   47644:	mov	r0, r2
   47648:	blx	r3
   4764c:	lsl	r2, r0, #3
   47650:	lsl	r3, r0, #2
   47654:	str	r0, [sp, #24]
   47658:	add	r2, sl, r2
   4765c:	str	r2, [sp, #20]
   47660:	add	r3, r2, r3
   47664:	str	r3, [sp, #28]
   47668:	cmp	sl, r2
   4766c:	ldr	ip, [sp, #28]
   47670:	movls	r3, #0
   47674:	movhi	r3, #1
   47678:	cmp	ip, r7
   4767c:	movcs	r7, r3
   47680:	orrcc	r7, r3, #1
   47684:	cmp	r7, #0
   47688:	bne	47720 <__assert_fail@plt+0x3631c>
   4768c:	ldr	ip, [sp, #24]
   47690:	adds	ip, ip, #0
   47694:	movne	ip, #1
   47698:	str	ip, [sp, #36]	; 0x24
   4769c:	mov	r7, ip
   476a0:	cmp	sl, r2
   476a4:	movne	r7, #0
   476a8:	andeq	r7, r7, #1
   476ac:	cmp	r7, #0
   476b0:	bne	47720 <__assert_fail@plt+0x3631c>
   476b4:	cmp	r8, #0
   476b8:	bne	47830 <__assert_fail@plt+0x3642c>
   476bc:	ldr	ip, [sp, #28]
   476c0:	cmp	r6, ip
   476c4:	bcc	479f0 <__assert_fail@plt+0x365ec>
   476c8:	cmp	r4, #1
   476cc:	beq	478f0 <__assert_fail@plt+0x364ec>
   476d0:	cmp	r4, #2
   476d4:	beq	477b0 <__assert_fail@plt+0x363ac>
   476d8:	cmp	r8, #0
   476dc:	bne	47a68 <__assert_fail@plt+0x36664>
   476e0:	mov	r0, #1
   476e4:	b	47744 <__assert_fail@plt+0x36340>
   476e8:	cmp	r6, sl
   476ec:	bls	47700 <__assert_fail@plt+0x362fc>
   476f0:	rsb	r1, sl, r6
   476f4:	sub	r3, r1, #1
   476f8:	cmp	r3, #7
   476fc:	bls	48460 <__assert_fail@plt+0x3705c>
   47700:	add	sl, r7, #16
   47704:	cmp	sl, r6
   47708:	bcc	48498 <__assert_fail@plt+0x37094>
   4770c:	mov	r3, #0
   47710:	str	r3, [sp, #52]	; 0x34
   47714:	mov	r2, r3
   47718:	str	r3, [sp, #24]
   4771c:	b	47658 <__assert_fail@plt+0x36254>
   47720:	movw	r1, #42760	; 0xa708
   47724:	movt	r1, #7
   47728:	mov	r0, #0
   4772c:	mov	r2, #5
   47730:	bl	11170 <dcgettext@plt>
   47734:	ldr	r1, [fp, #8]
   47738:	ldr	r2, [sp, #24]
   4773c:	bl	4b9ec <warn@@Base>
   47740:	mov	r0, #0
   47744:	ldr	ip, [sp, #16]
   47748:	ldr	r2, [sp, #164]	; 0xa4
   4774c:	ldr	r3, [ip]
   47750:	cmp	r2, r3
   47754:	bne	483c8 <__assert_fail@plt+0x36fc4>
   47758:	add	sp, sp, #172	; 0xac
   4775c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   47760:	movw	r1, #42708	; 0xa6d4
   47764:	movt	r1, #7
   47768:	mov	r0, #0
   4776c:	mov	r2, #5
   47770:	bl	11170 <dcgettext@plt>
   47774:	ldr	r1, [fp, #8]
   47778:	bl	4b9ec <warn@@Base>
   4777c:	mov	r0, #0
   47780:	b	47744 <__assert_fail@plt+0x36340>
   47784:	mov	r1, #4
   47788:	mov	r0, r5
   4778c:	ldr	r3, [r9]
   47790:	blx	r3
   47794:	mov	r5, r0
   47798:	b	47600 <__assert_fail@plt+0x361fc>
   4779c:	rsb	r1, r7, r6
   477a0:	sub	r3, r1, #1
   477a4:	cmp	r3, #7
   477a8:	bhi	475f4 <__assert_fail@plt+0x361f0>
   477ac:	b	47544 <__assert_fail@plt+0x36140>
   477b0:	ldr	ip, [sp, #28]
   477b4:	lsl	r4, r5, #2
   477b8:	movw	r1, #43160	; 0xa898
   477bc:	ldr	r0, [fp, #8]
   477c0:	movt	r1, #7
   477c4:	add	ip, ip, r4
   477c8:	str	ip, [sp, #56]	; 0x38
   477cc:	bl	110f8 <strcmp@plt>
   477d0:	ldr	ip, [sp, #28]
   477d4:	ldr	r1, [sp, #56]	; 0x38
   477d8:	cmp	ip, r1
   477dc:	bhi	477fc <__assert_fail@plt+0x363f8>
   477e0:	rsb	r3, ip, r1
   477e4:	cmp	r3, #0
   477e8:	add	r2, r3, #3
   477ec:	movlt	r3, r2
   477f0:	asr	r7, r3, #2
   477f4:	cmp	r7, r5
   477f8:	beq	47b50 <__assert_fail@plt+0x3674c>
   477fc:	mov	r2, #5
   47800:	movw	r1, #43176	; 0xa8a8
   47804:	mov	r0, #0
   47808:	movt	r1, #7
   4780c:	bl	11170 <dcgettext@plt>
   47810:	mov	r1, r5
   47814:	bl	4b9ec <warn@@Base>
   47818:	mov	r0, #0
   4781c:	b	47744 <__assert_fail@plt+0x36340>
   47820:	mov	r3, r5
   47824:	mov	r2, r5
   47828:	str	r5, [sp, #24]
   4782c:	b	47658 <__assert_fail@plt+0x36254>
   47830:	mov	r2, #5
   47834:	movw	r1, #28592	; 0x6fb0
   47838:	mov	r0, r7
   4783c:	movt	r1, #7
   47840:	bl	11170 <dcgettext@plt>
   47844:	ldr	r2, [fp, #8]
   47848:	mov	r1, r0
   4784c:	mov	r0, #1
   47850:	bl	1132c <__printf_chk@plt>
   47854:	mov	r2, #5
   47858:	mov	r0, r7
   4785c:	movw	r1, #42800	; 0xa730
   47860:	movt	r1, #7
   47864:	bl	11170 <dcgettext@plt>
   47868:	mov	r2, r4
   4786c:	mov	r1, r0
   47870:	mov	r0, #1
   47874:	bl	1132c <__printf_chk@plt>
   47878:	cmp	r4, #1
   4787c:	bls	478a4 <__assert_fail@plt+0x364a0>
   47880:	mov	r2, #5
   47884:	mov	r0, r7
   47888:	movw	r1, #42832	; 0xa750
   4788c:	movt	r1, #7
   47890:	bl	11170 <dcgettext@plt>
   47894:	mov	r2, r5
   47898:	mov	r1, r0
   4789c:	mov	r0, #1
   478a0:	bl	1132c <__printf_chk@plt>
   478a4:	mov	r2, #5
   478a8:	movw	r1, #42864	; 0xa770
   478ac:	mov	r0, #0
   478b0:	movt	r1, #7
   478b4:	bl	11170 <dcgettext@plt>
   478b8:	ldr	r2, [sp, #52]	; 0x34
   478bc:	mov	r1, r0
   478c0:	mov	r0, #1
   478c4:	bl	1132c <__printf_chk@plt>
   478c8:	mov	r2, #5
   478cc:	movw	r1, #42896	; 0xa790
   478d0:	mov	r0, #0
   478d4:	movt	r1, #7
   478d8:	bl	11170 <dcgettext@plt>
   478dc:	ldr	r2, [sp, #24]
   478e0:	mov	r1, r0
   478e4:	mov	r0, #1
   478e8:	bl	1132c <__printf_chk@plt>
   478ec:	b	476bc <__assert_fail@plt+0x362b8>
   478f0:	cmp	r8, #0
   478f4:	beq	47b08 <__assert_fail@plt+0x36704>
   478f8:	ldr	ip, [sp, #36]	; 0x24
   478fc:	cmp	ip, #0
   47900:	beq	47ed8 <__assert_fail@plt+0x36ad4>
   47904:	ldr	r4, [sp, #20]
   47908:	mov	r0, sl
   4790c:	ldr	ip, [sp, #20]
   47910:	movw	r9, #26492	; 0x677c
   47914:	str	fp, [sp, #20]
   47918:	movw	r7, #24696	; 0x6078
   4791c:	mov	fp, r4
   47920:	add	r4, r0, #8
   47924:	cmp	r6, r4
   47928:	add	ip, ip, #4
   4792c:	str	ip, [sp, #32]
   47930:	mov	ip, #0
   47934:	movt	r9, #9
   47938:	movt	r7, #9
   4793c:	mov	sl, ip
   47940:	bcs	47984 <__assert_fail@plt+0x36580>
   47944:	mov	r2, #0
   47948:	mov	r3, #0
   4794c:	strd	r2, [sp, #80]	; 0x50
   47950:	strd	r2, [sp, #88]	; 0x58
   47954:	ldr	ip, [sp, #32]
   47958:	add	sl, sl, #1
   4795c:	add	fp, fp, #4
   47960:	add	ip, ip, #4
   47964:	str	ip, [sp, #32]
   47968:	ldr	ip, [sp, #24]
   4796c:	cmp	ip, sl
   47970:	bls	47ed8 <__assert_fail@plt+0x36ad4>
   47974:	mov	r0, r4
   47978:	add	r4, r0, #8
   4797c:	cmp	r6, r4
   47980:	bcc	47944 <__assert_fail@plt+0x36540>
   47984:	add	r2, sp, #88	; 0x58
   47988:	add	r1, sp, #80	; 0x50
   4798c:	bl	4bfa4 <warn@@Base+0x5b8>
   47990:	ldrd	r2, [sp, #80]	; 0x50
   47994:	orrs	r0, r2, r3
   47998:	beq	48450 <__assert_fail@plt+0x3704c>
   4799c:	ldr	ip, [sp, #32]
   479a0:	cmp	r6, ip
   479a4:	bhi	47a00 <__assert_fail@plt+0x365fc>
   479a8:	cmp	r6, fp
   479ac:	bhi	47a54 <__assert_fail@plt+0x36650>
   479b0:	ldr	r5, [sp, #28]
   479b4:	cmp	r8, #0
   479b8:	bne	47a98 <__assert_fail@plt+0x36694>
   479bc:	cmp	r6, r5
   479c0:	bls	47a40 <__assert_fail@plt+0x3663c>
   479c4:	mov	r0, r5
   479c8:	add	r5, r5, #4
   479cc:	cmp	r6, r5
   479d0:	bhi	483cc <__assert_fail@plt+0x36fc8>
   479d4:	cmp	r6, r0
   479d8:	bhi	4843c <__assert_fail@plt+0x37038>
   479dc:	cmp	r8, #0
   479e0:	beq	47ae4 <__assert_fail@plt+0x366e0>
   479e4:	mov	r0, #10
   479e8:	bl	112fc <putchar@plt>
   479ec:	b	47954 <__assert_fail@plt+0x36550>
   479f0:	movw	r1, #42928	; 0xa7b0
   479f4:	mov	r0, #0
   479f8:	movt	r1, #7
   479fc:	b	4772c <__assert_fail@plt+0x36328>
   47a00:	mov	r1, #4
   47a04:	ldr	r3, [r9]
   47a08:	mov	r0, fp
   47a0c:	blx	r3
   47a10:	ldr	ip, [sp, #28]
   47a14:	add	r5, ip, r0, lsl #2
   47a18:	cmp	ip, r5
   47a1c:	bls	479b4 <__assert_fail@plt+0x365b0>
   47a20:	mov	r2, #5
   47a24:	movw	r1, #42976	; 0xa7e0
   47a28:	mov	r0, #0
   47a2c:	movt	r1, #7
   47a30:	bl	11170 <dcgettext@plt>
   47a34:	bl	4b9ec <warn@@Base>
   47a38:	mov	r0, #0
   47a3c:	b	47744 <__assert_fail@plt+0x36340>
   47a40:	movw	r1, #43068	; 0xa83c
   47a44:	ldr	fp, [sp, #20]
   47a48:	mov	r0, #0
   47a4c:	movt	r1, #7
   47a50:	b	4776c <__assert_fail@plt+0x36368>
   47a54:	rsb	r1, fp, r6
   47a58:	sub	r3, r1, #1
   47a5c:	cmp	r3, #7
   47a60:	bhi	479b0 <__assert_fail@plt+0x365ac>
   47a64:	b	47a04 <__assert_fail@plt+0x36600>
   47a68:	mov	r2, #5
   47a6c:	movw	r1, #43588	; 0xaa44
   47a70:	mov	r0, #0
   47a74:	movt	r1, #7
   47a78:	bl	11170 <dcgettext@plt>
   47a7c:	mov	r2, r4
   47a80:	mov	r1, r0
   47a84:	mov	r0, #1
   47a88:	bl	1132c <__printf_chk@plt>
   47a8c:	mov	r0, #10
   47a90:	bl	112fc <putchar@plt>
   47a94:	b	476e0 <__assert_fail@plt+0x362dc>
   47a98:	mov	r2, #5
   47a9c:	movw	r1, #43028	; 0xa814
   47aa0:	mov	r0, #0
   47aa4:	movt	r1, #7
   47aa8:	bl	11170 <dcgettext@plt>
   47aac:	add	r3, sp, #100	; 0x64
   47ab0:	str	r3, [sp]
   47ab4:	ldrd	r2, [sp, #88]	; 0x58
   47ab8:	mov	ip, r0
   47abc:	ldrd	r0, [sp, #80]	; 0x50
   47ac0:	str	ip, [sp, #12]
   47ac4:	bl	3a2ac <__assert_fail@plt+0x28ea8>
   47ac8:	ldr	ip, [sp, #12]
   47acc:	mov	r2, sl
   47ad0:	mov	r1, ip
   47ad4:	mov	r3, r0
   47ad8:	mov	r0, #1
   47adc:	bl	1132c <__printf_chk@plt>
   47ae0:	b	479bc <__assert_fail@plt+0x365b8>
   47ae4:	ldr	r3, [r7, #1688]	; 0x698
   47ae8:	ldr	r2, [r7, #1684]	; 0x694
   47aec:	cmp	r3, r2
   47af0:	bcs	47ee4 <__assert_fail@plt+0x36ae0>
   47af4:	ldr	r2, [r7, #1680]	; 0x690
   47af8:	add	r1, r3, #1
   47afc:	str	r1, [r7, #1688]	; 0x698
   47b00:	str	r8, [r2, r3, lsl #2]
   47b04:	b	47954 <__assert_fail@plt+0x36550>
   47b08:	ldr	ip, [sp, #28]
   47b0c:	movw	r4, #24696	; 0x6078
   47b10:	movt	r4, #9
   47b14:	rsb	r3, ip, r6
   47b18:	cmp	r3, #0
   47b1c:	add	r2, r3, #3
   47b20:	ldr	r0, [r4, #1680]	; 0x690
   47b24:	movlt	r3, r2
   47b28:	cmp	r0, #0
   47b2c:	asr	r3, r3, #2
   47b30:	beq	48310 <__assert_fail@plt+0x36f0c>
   47b34:	ldr	r1, [r4, #1688]	; 0x698
   47b38:	mov	r2, #4
   47b3c:	add	r1, r3, r1
   47b40:	str	r1, [r4, #1684]	; 0x694
   47b44:	bl	3f7e0 <__assert_fail@plt+0x2e3dc>
   47b48:	str	r0, [r4, #1680]	; 0x690
   47b4c:	b	478f8 <__assert_fail@plt+0x364f4>
   47b50:	ldr	ip, [sp, #52]	; 0x34
   47b54:	mul	r4, r4, ip
   47b58:	ldr	ip, [sp, #56]	; 0x38
   47b5c:	add	ip, ip, r4
   47b60:	str	ip, [sp, #68]	; 0x44
   47b64:	add	r4, ip, r4
   47b68:	cmp	r6, r4
   47b6c:	movwcc	r1, #43212	; 0xa8cc
   47b70:	movcc	r0, #0
   47b74:	movtcc	r1, #7
   47b78:	bcc	4776c <__assert_fail@plt+0x36368>
   47b7c:	rsbs	r0, r0, #1
   47b80:	movcc	r0, #0
   47b84:	cmp	r8, #0
   47b88:	str	r0, [sp, #72]	; 0x48
   47b8c:	bne	481fc <__assert_fail@plt+0x36df8>
   47b90:	ldr	ip, [sp, #72]	; 0x48
   47b94:	movw	r4, #24696	; 0x6078
   47b98:	ldr	r0, [sp, #52]	; 0x34
   47b9c:	movt	r4, #9
   47ba0:	cmp	ip, #0
   47ba4:	mov	r1, #104	; 0x68
   47ba8:	beq	481e8 <__assert_fail@plt+0x36de4>
   47bac:	str	r0, [r4, #1592]	; 0x638
   47bb0:	bl	4747c <__assert_fail@plt+0x36078>
   47bb4:	str	r0, [sp, #60]	; 0x3c
   47bb8:	str	r0, [r4, #1588]	; 0x634
   47bbc:	ldr	ip, [sp, #36]	; 0x24
   47bc0:	cmp	ip, #0
   47bc4:	beq	47f04 <__assert_fail@plt+0x36b00>
   47bc8:	movw	ip, #26492	; 0x677c
   47bcc:	movt	ip, #9
   47bd0:	lsl	r0, r7, #2
   47bd4:	mov	r1, #0
   47bd8:	str	r0, [sp, #64]	; 0x40
   47bdc:	mov	r4, sl
   47be0:	ldr	r5, [sp, #20]
   47be4:	mov	fp, ip
   47be8:	str	r1, [sp, #44]	; 0x2c
   47bec:	str	sl, [sp, #76]	; 0x4c
   47bf0:	b	47c2c <__assert_fail@plt+0x36828>
   47bf4:	cmp	r6, r5
   47bf8:	bls	47c0c <__assert_fail@plt+0x36808>
   47bfc:	rsb	r1, r5, r6
   47c00:	sub	r3, r1, #1
   47c04:	cmp	r3, #7
   47c08:	bls	47c60 <__assert_fail@plt+0x3685c>
   47c0c:	ldr	ip, [sp, #44]	; 0x2c
   47c10:	ldr	r0, [sp, #24]
   47c14:	add	ip, ip, #1
   47c18:	str	ip, [sp, #44]	; 0x2c
   47c1c:	cmp	r0, ip
   47c20:	bls	47f00 <__assert_fail@plt+0x36afc>
   47c24:	ldr	r5, [sp, #48]	; 0x30
   47c28:	ldr	r4, [sp, #40]	; 0x28
   47c2c:	add	ip, r4, #8
   47c30:	str	ip, [sp, #40]	; 0x28
   47c34:	cmp	r6, ip
   47c38:	bcs	47e40 <__assert_fail@plt+0x36a3c>
   47c3c:	mov	r0, #0
   47c40:	mov	r1, #0
   47c44:	strd	r0, [sp, #80]	; 0x50
   47c48:	strd	r0, [sp, #88]	; 0x58
   47c4c:	add	ip, r5, #4
   47c50:	str	ip, [sp, #48]	; 0x30
   47c54:	cmp	r6, ip
   47c58:	bls	47bf4 <__assert_fail@plt+0x367f0>
   47c5c:	mov	r1, #4
   47c60:	mov	r0, r5
   47c64:	ldr	r3, [fp]
   47c68:	blx	r3
   47c6c:	subs	r5, r0, #0
   47c70:	beq	47c0c <__assert_fail@plt+0x36808>
   47c74:	ldr	ip, [sp, #52]	; 0x34
   47c78:	cmp	ip, r5
   47c7c:	bcc	482e8 <__assert_fail@plt+0x36ee4>
   47c80:	cmp	r8, #0
   47c84:	beq	47e54 <__assert_fail@plt+0x36a50>
   47c88:	ldr	r0, [sp, #56]	; 0x38
   47c8c:	sub	sl, r5, #-1073741823	; 0xc0000001
   47c90:	ldr	ip, [sp, #64]	; 0x40
   47c94:	mla	sl, sl, ip, r0
   47c98:	ldr	ip, [sp, #56]	; 0x38
   47c9c:	cmp	sl, r6
   47ca0:	movls	r0, #0
   47ca4:	movhi	r0, #1
   47ca8:	cmp	sl, ip
   47cac:	orrcc	r0, r0, #1
   47cb0:	cmp	r0, #0
   47cb4:	bne	47eb0 <__assert_fail@plt+0x36aac>
   47cb8:	mov	r2, #5
   47cbc:	movw	r1, #43504	; 0xa9f0
   47cc0:	movt	r1, #7
   47cc4:	bl	11170 <dcgettext@plt>
   47cc8:	add	r3, sp, #100	; 0x64
   47ccc:	str	r3, [sp]
   47cd0:	ldrd	r2, [sp, #88]	; 0x58
   47cd4:	mov	r4, r0
   47cd8:	ldrd	r0, [sp, #80]	; 0x50
   47cdc:	bl	3a2ac <__assert_fail@plt+0x28ea8>
   47ce0:	mov	r1, r4
   47ce4:	ldr	r2, [sp, #44]	; 0x2c
   47ce8:	mov	r3, r0
   47cec:	mov	r0, #1
   47cf0:	bl	1132c <__printf_chk@plt>
   47cf4:	cmp	r7, #0
   47cf8:	beq	47de4 <__assert_fail@plt+0x369e0>
   47cfc:	ldr	ip, [sp, #60]	; 0x3c
   47d00:	mov	r9, #104	; 0x68
   47d04:	ldr	r3, [sp, #28]
   47d08:	mov	r0, sl
   47d0c:	mov	r4, #0
   47d10:	mla	r9, r9, r5, ip
   47d14:	mov	sl, r3
   47d18:	sub	r9, r9, #104	; 0x68
   47d1c:	str	r9, [sp, #32]
   47d20:	b	47d9c <__assert_fail@plt+0x36998>
   47d24:	cmp	r6, r0
   47d28:	bls	47d3c <__assert_fail@plt+0x36938>
   47d2c:	rsb	r1, r0, r6
   47d30:	sub	r3, r1, #1
   47d34:	cmp	r3, #7
   47d38:	bls	47dac <__assert_fail@plt+0x369a8>
   47d3c:	cmp	r8, #0
   47d40:	mov	r2, #0
   47d44:	bne	47dc0 <__assert_fail@plt+0x369bc>
   47d48:	add	r9, sl, #4
   47d4c:	cmp	r6, r9
   47d50:	bhi	47df8 <__assert_fail@plt+0x369f4>
   47d54:	cmp	r6, sl
   47d58:	bls	47d6c <__assert_fail@plt+0x36968>
   47d5c:	rsb	r1, sl, r6
   47d60:	sub	r0, r1, #1
   47d64:	cmp	r0, #7
   47d68:	bls	47dfc <__assert_fail@plt+0x369f8>
   47d6c:	mov	r1, r8
   47d70:	add	r1, r1, #1
   47d74:	ldr	r3, [sp, #32]
   47d78:	mov	ip, #0
   47d7c:	add	r0, r3, r1, lsl #3
   47d80:	str	r2, [r3, r1, lsl #3]
   47d84:	str	ip, [r0, #4]
   47d88:	add	r4, r4, #1
   47d8c:	mov	sl, r9
   47d90:	cmp	r7, r4
   47d94:	beq	47de4 <__assert_fail@plt+0x369e0>
   47d98:	mov	r0, r5
   47d9c:	add	r5, r0, #4
   47da0:	cmp	r6, r5
   47da4:	bls	47d24 <__assert_fail@plt+0x36920>
   47da8:	mov	r1, #4
   47dac:	ldr	r3, [fp]
   47db0:	blx	r3
   47db4:	cmp	r8, #0
   47db8:	mov	r2, r0
   47dbc:	beq	47d48 <__assert_fail@plt+0x36944>
   47dc0:	movw	r1, #43520	; 0xaa00
   47dc4:	mov	r0, #1
   47dc8:	movt	r1, #7
   47dcc:	add	r4, r4, #1
   47dd0:	add	r9, sl, #4
   47dd4:	bl	1132c <__printf_chk@plt>
   47dd8:	cmp	r7, r4
   47ddc:	mov	sl, r9
   47de0:	bne	47d98 <__assert_fail@plt+0x36994>
   47de4:	cmp	r8, #0
   47de8:	beq	47c0c <__assert_fail@plt+0x36808>
   47dec:	mov	r0, #10
   47df0:	bl	112fc <putchar@plt>
   47df4:	b	47c0c <__assert_fail@plt+0x36808>
   47df8:	mov	r1, #4
   47dfc:	mov	r0, sl
   47e00:	ldr	ip, [fp]
   47e04:	str	r2, [sp, #12]
   47e08:	blx	ip
   47e0c:	ldr	r2, [sp, #12]
   47e10:	cmp	r0, #7
   47e14:	mov	sl, r0
   47e18:	mov	r1, r0
   47e1c:	bls	47d70 <__assert_fail@plt+0x3696c>
   47e20:	mov	r2, #5
   47e24:	movw	r1, #43528	; 0xaa08
   47e28:	mov	r0, #0
   47e2c:	movt	r1, #7
   47e30:	bl	11170 <dcgettext@plt>
   47e34:	mov	r1, sl
   47e38:	bl	4b9ec <warn@@Base>
   47e3c:	b	47d88 <__assert_fail@plt+0x36984>
   47e40:	mov	r0, r4
   47e44:	add	r1, sp, #80	; 0x50
   47e48:	add	r2, sp, #88	; 0x58
   47e4c:	bl	4bfa4 <warn@@Base+0x5b8>
   47e50:	b	47c4c <__assert_fail@plt+0x36848>
   47e54:	ldr	ip, [sp, #40]	; 0x28
   47e58:	cmp	r6, ip
   47e5c:	bls	483a4 <__assert_fail@plt+0x36fa0>
   47e60:	ldr	r1, [sp, #56]	; 0x38
   47e64:	sub	sl, r5, #-1073741823	; 0xc0000001
   47e68:	ldr	ip, [sp, #64]	; 0x40
   47e6c:	mov	r3, #104	; 0x68
   47e70:	mul	r3, r3, r5
   47e74:	ldr	r0, [r4]
   47e78:	mla	sl, ip, sl, r1
   47e7c:	ldr	ip, [sp, #60]	; 0x3c
   47e80:	sub	r3, r3, #104	; 0x68
   47e84:	ldr	r2, [r4, #4]
   47e88:	cmp	sl, r1
   47e8c:	str	r0, [ip, r3]
   47e90:	add	r3, ip, r3
   47e94:	movcs	r1, #0
   47e98:	movcc	r1, #1
   47e9c:	cmp	sl, r6
   47ea0:	orrhi	r1, r1, #1
   47ea4:	str	r2, [r3, #4]
   47ea8:	cmp	r1, #0
   47eac:	beq	47cf4 <__assert_fail@plt+0x368f0>
   47eb0:	mov	r2, #5
   47eb4:	movw	r1, #43440	; 0xa9b0
   47eb8:	mov	r0, #0
   47ebc:	movt	r1, #7
   47ec0:	bl	11170 <dcgettext@plt>
   47ec4:	mov	r1, r5
   47ec8:	mov	r2, r7
   47ecc:	bl	4b9ec <warn@@Base>
   47ed0:	mov	r0, #0
   47ed4:	b	47744 <__assert_fail@plt+0x36340>
   47ed8:	cmp	r8, #0
   47edc:	bne	47a8c <__assert_fail@plt+0x36688>
   47ee0:	b	476e0 <__assert_fail@plt+0x362dc>
   47ee4:	mov	r2, #5
   47ee8:	movw	r1, #43108	; 0xa864
   47eec:	mov	r0, r8
   47ef0:	movt	r1, #7
   47ef4:	bl	11170 <dcgettext@plt>
   47ef8:	bl	4b2b0 <error@@Base>
   47efc:	b	47954 <__assert_fail@plt+0x36550>
   47f00:	ldr	sl, [sp, #76]	; 0x4c
   47f04:	cmp	r8, #0
   47f08:	bne	48338 <__assert_fail@plt+0x36f34>
   47f0c:	cmp	r7, #0
   47f10:	beq	47f94 <__assert_fail@plt+0x36b90>
   47f14:	movw	r9, #26492	; 0x677c
   47f18:	ldr	r0, [sp, #28]
   47f1c:	movt	r9, #9
   47f20:	mov	r4, #0
   47f24:	b	47f5c <__assert_fail@plt+0x36b58>
   47f28:	cmp	r6, r0
   47f2c:	bls	47f40 <__assert_fail@plt+0x36b3c>
   47f30:	rsb	r1, r0, r6
   47f34:	sub	r3, r1, #1
   47f38:	cmp	r3, #7
   47f3c:	bls	47f6c <__assert_fail@plt+0x36b68>
   47f40:	mov	r0, #0
   47f44:	cmp	r8, #0
   47f48:	bne	47f78 <__assert_fail@plt+0x36b74>
   47f4c:	add	r4, r4, #1
   47f50:	cmp	r7, r4
   47f54:	beq	47f94 <__assert_fail@plt+0x36b90>
   47f58:	mov	r0, r5
   47f5c:	add	r5, r0, #4
   47f60:	cmp	r6, r5
   47f64:	bls	47f28 <__assert_fail@plt+0x36b24>
   47f68:	mov	r1, #4
   47f6c:	ldr	r3, [r9]
   47f70:	blx	r3
   47f74:	b	47f44 <__assert_fail@plt+0x36b40>
   47f78:	bl	39ce4 <__assert_fail@plt+0x288e0>
   47f7c:	movw	r1, #43316	; 0xa934
   47f80:	movt	r1, #7
   47f84:	mov	r2, r0
   47f88:	mov	r0, #1
   47f8c:	bl	1132c <__printf_chk@plt>
   47f90:	b	47f4c <__assert_fail@plt+0x36b48>
   47f94:	cmp	r8, #0
   47f98:	bne	4832c <__assert_fail@plt+0x36f28>
   47f9c:	ldr	ip, [sp, #36]	; 0x24
   47fa0:	cmp	ip, #0
   47fa4:	beq	47ed8 <__assert_fail@plt+0x36ad4>
   47fa8:	lsl	ip, r7, #2
   47fac:	str	ip, [sp, #44]	; 0x2c
   47fb0:	mov	ip, #0
   47fb4:	movw	r5, #26492	; 0x677c
   47fb8:	ldr	r4, [sp, #20]
   47fbc:	movt	r5, #9
   47fc0:	mov	r0, sl
   47fc4:	mov	fp, ip
   47fc8:	b	47ffc <__assert_fail@plt+0x36bf8>
   47fcc:	cmp	r6, r4
   47fd0:	bls	47fe4 <__assert_fail@plt+0x36be0>
   47fd4:	rsb	r1, r4, r6
   47fd8:	sub	r3, r1, #1
   47fdc:	cmp	r3, #7
   47fe0:	bls	48030 <__assert_fail@plt+0x36c2c>
   47fe4:	ldr	ip, [sp, #24]
   47fe8:	add	fp, fp, #1
   47fec:	cmp	ip, fp
   47ff0:	bls	47ed8 <__assert_fail@plt+0x36ad4>
   47ff4:	ldr	r4, [sp, #36]	; 0x24
   47ff8:	ldr	r0, [sp, #32]
   47ffc:	add	ip, r0, #8
   48000:	str	ip, [sp, #32]
   48004:	cmp	r6, ip
   48008:	bcs	48194 <__assert_fail@plt+0x36d90>
   4800c:	mov	r0, #0
   48010:	mov	r1, #0
   48014:	strd	r0, [sp, #80]	; 0x50
   48018:	strd	r0, [sp, #88]	; 0x58
   4801c:	add	ip, r4, #4
   48020:	str	ip, [sp, #36]	; 0x24
   48024:	cmp	r6, ip
   48028:	bls	47fcc <__assert_fail@plt+0x36bc8>
   4802c:	mov	r1, #4
   48030:	mov	r0, r4
   48034:	ldr	r3, [r5]
   48038:	blx	r3
   4803c:	subs	r4, r0, #0
   48040:	beq	47fe4 <__assert_fail@plt+0x36be0>
   48044:	ldr	ip, [sp, #44]	; 0x2c
   48048:	sub	r9, r4, #-1073741823	; 0xc0000001
   4804c:	ldr	r0, [sp, #68]	; 0x44
   48050:	cmp	r8, #0
   48054:	mla	r9, ip, r9, r0
   48058:	bne	481a4 <__assert_fail@plt+0x36da0>
   4805c:	cmp	r7, #0
   48060:	beq	48180 <__assert_fail@plt+0x36d7c>
   48064:	ldr	ip, [sp, #60]	; 0x3c
   48068:	mov	sl, #104	; 0x68
   4806c:	ldr	r3, [sp, #28]
   48070:	mov	r0, r9
   48074:	str	fp, [sp, #40]	; 0x28
   48078:	mla	sl, sl, r4, ip
   4807c:	mov	fp, r3
   48080:	mov	r4, #0
   48084:	sub	sl, sl, #104	; 0x68
   48088:	str	sl, [sp, #20]
   4808c:	b	480fc <__assert_fail@plt+0x36cf8>
   48090:	cmp	r6, r0
   48094:	bls	480a8 <__assert_fail@plt+0x36ca4>
   48098:	rsb	r1, r0, r6
   4809c:	sub	r2, r1, #1
   480a0:	cmp	r2, #7
   480a4:	bls	4810c <__assert_fail@plt+0x36d08>
   480a8:	mov	r2, #0
   480ac:	cmp	r8, #0
   480b0:	bne	48164 <__assert_fail@plt+0x36d60>
   480b4:	add	r9, fp, #4
   480b8:	cmp	r6, r9
   480bc:	bhi	4811c <__assert_fail@plt+0x36d18>
   480c0:	cmp	r6, fp
   480c4:	bls	480d8 <__assert_fail@plt+0x36cd4>
   480c8:	rsb	r1, fp, r6
   480cc:	sub	r0, r1, #1
   480d0:	cmp	r0, #7
   480d4:	bls	48120 <__assert_fail@plt+0x36d1c>
   480d8:	mov	r1, r8
   480dc:	ldr	r3, [sp, #20]
   480e0:	add	r1, r1, #18
   480e4:	str	r2, [r3, r1, lsl #2]
   480e8:	add	r4, r4, #1
   480ec:	mov	fp, r9
   480f0:	cmp	r7, r4
   480f4:	beq	4817c <__assert_fail@plt+0x36d78>
   480f8:	mov	r0, sl
   480fc:	add	sl, r0, #4
   48100:	cmp	r6, sl
   48104:	bls	48090 <__assert_fail@plt+0x36c8c>
   48108:	mov	r1, #4
   4810c:	ldr	r2, [r5]
   48110:	blx	r2
   48114:	mov	r2, r0
   48118:	b	480ac <__assert_fail@plt+0x36ca8>
   4811c:	mov	r1, #4
   48120:	mov	r0, fp
   48124:	ldr	r3, [r5]
   48128:	str	r2, [sp, #12]
   4812c:	blx	r3
   48130:	ldr	r2, [sp, #12]
   48134:	cmp	r0, #7
   48138:	mov	fp, r0
   4813c:	mov	r1, r0
   48140:	bls	480dc <__assert_fail@plt+0x36cd8>
   48144:	mov	r2, #5
   48148:	movw	r1, #43528	; 0xaa08
   4814c:	mov	r0, #0
   48150:	movt	r1, #7
   48154:	bl	11170 <dcgettext@plt>
   48158:	mov	r1, fp
   4815c:	bl	4b9ec <warn@@Base>
   48160:	b	480e8 <__assert_fail@plt+0x36ce4>
   48164:	movw	r1, #43520	; 0xaa00
   48168:	mov	r0, #1
   4816c:	movt	r1, #7
   48170:	add	r9, fp, #4
   48174:	bl	1132c <__printf_chk@plt>
   48178:	b	480e8 <__assert_fail@plt+0x36ce4>
   4817c:	ldr	fp, [sp, #40]	; 0x28
   48180:	cmp	r8, #0
   48184:	beq	47fe4 <__assert_fail@plt+0x36be0>
   48188:	mov	r0, #10
   4818c:	bl	112fc <putchar@plt>
   48190:	b	47fe4 <__assert_fail@plt+0x36be0>
   48194:	add	r1, sp, #80	; 0x50
   48198:	add	r2, sp, #88	; 0x58
   4819c:	bl	4bfa4 <warn@@Base+0x5b8>
   481a0:	b	4801c <__assert_fail@plt+0x36c18>
   481a4:	mov	r2, #5
   481a8:	movw	r1, #43504	; 0xa9f0
   481ac:	mov	r0, #0
   481b0:	movt	r1, #7
   481b4:	bl	11170 <dcgettext@plt>
   481b8:	add	r3, sp, #100	; 0x64
   481bc:	str	r3, [sp]
   481c0:	ldrd	r2, [sp, #88]	; 0x58
   481c4:	mov	sl, r0
   481c8:	ldrd	r0, [sp, #80]	; 0x50
   481cc:	bl	3a2ac <__assert_fail@plt+0x28ea8>
   481d0:	mov	r1, sl
   481d4:	mov	r2, fp
   481d8:	mov	r3, r0
   481dc:	mov	r0, #1
   481e0:	bl	1132c <__printf_chk@plt>
   481e4:	b	4805c <__assert_fail@plt+0x36c58>
   481e8:	str	r0, [r4, #1600]	; 0x640
   481ec:	bl	4747c <__assert_fail@plt+0x36078>
   481f0:	str	r0, [sp, #60]	; 0x3c
   481f4:	str	r0, [r4, #1596]	; 0x63c
   481f8:	b	47bbc <__assert_fail@plt+0x367b8>
   481fc:	mov	r2, #5
   48200:	movw	r1, #43264	; 0xa900
   48204:	mov	r0, #0
   48208:	movt	r1, #7
   4820c:	bl	11170 <dcgettext@plt>
   48210:	mov	r1, r0
   48214:	mov	r0, #1
   48218:	bl	1132c <__printf_chk@plt>
   4821c:	ldr	ip, [sp, #72]	; 0x48
   48220:	mov	r2, #5
   48224:	cmp	ip, #0
   48228:	movwne	r1, #43280	; 0xa910
   4822c:	movweq	r1, #43292	; 0xa91c
   48230:	movne	r0, #0
   48234:	ldreq	r0, [sp, #72]	; 0x48
   48238:	movtne	r1, #7
   4823c:	movteq	r1, #7
   48240:	bl	11170 <dcgettext@plt>
   48244:	movw	r1, #43300	; 0xa924
   48248:	movt	r1, #7
   4824c:	mov	r2, r0
   48250:	mov	r0, #1
   48254:	bl	1132c <__printf_chk@plt>
   48258:	cmp	r7, #0
   4825c:	beq	482d4 <__assert_fail@plt+0x36ed0>
   48260:	movw	r9, #26492	; 0x677c
   48264:	ldr	r0, [sp, #28]
   48268:	movt	r9, #9
   4826c:	mov	r4, #0
   48270:	b	482b8 <__assert_fail@plt+0x36eb4>
   48274:	cmp	r6, r0
   48278:	bls	4828c <__assert_fail@plt+0x36e88>
   4827c:	rsb	r1, r0, r6
   48280:	sub	r3, r1, #1
   48284:	cmp	r3, #7
   48288:	bls	482c8 <__assert_fail@plt+0x36ec4>
   4828c:	mov	r0, #0
   48290:	bl	39ce4 <__assert_fail@plt+0x288e0>
   48294:	add	r4, r4, #1
   48298:	movw	r1, #43316	; 0xa934
   4829c:	movt	r1, #7
   482a0:	mov	r2, r0
   482a4:	mov	r0, #1
   482a8:	bl	1132c <__printf_chk@plt>
   482ac:	cmp	r7, r4
   482b0:	beq	482d4 <__assert_fail@plt+0x36ed0>
   482b4:	mov	r0, r5
   482b8:	add	r5, r0, #4
   482bc:	cmp	r6, r5
   482c0:	bls	48274 <__assert_fail@plt+0x36e70>
   482c4:	mov	r1, #4
   482c8:	ldr	r3, [r9]
   482cc:	blx	r3
   482d0:	b	48290 <__assert_fail@plt+0x36e8c>
   482d4:	mov	r0, #10
   482d8:	mov	ip, #0
   482dc:	str	ip, [sp, #60]	; 0x3c
   482e0:	bl	112fc <putchar@plt>
   482e4:	b	47bbc <__assert_fail@plt+0x367b8>
   482e8:	mov	r2, #5
   482ec:	movw	r1, #43324	; 0xa93c
   482f0:	mov	r0, #0
   482f4:	movt	r1, #7
   482f8:	bl	11170 <dcgettext@plt>
   482fc:	mov	r1, r5
   48300:	ldr	r2, [sp, #52]	; 0x34
   48304:	bl	4b9ec <warn@@Base>
   48308:	mov	r0, #0
   4830c:	b	47744 <__assert_fail@plt+0x36340>
   48310:	mov	r0, r3
   48314:	mov	r1, #4
   48318:	str	r3, [r4, #1684]	; 0x694
   4831c:	str	r8, [r4, #1688]	; 0x698
   48320:	bl	3f77c <__assert_fail@plt+0x2e378>
   48324:	str	r0, [r4, #1680]	; 0x690
   48328:	b	478f8 <__assert_fail@plt+0x364f4>
   4832c:	mov	r0, #10
   48330:	bl	112fc <putchar@plt>
   48334:	b	47f9c <__assert_fail@plt+0x36b98>
   48338:	mov	r0, #10
   4833c:	bl	112fc <putchar@plt>
   48340:	mov	r2, #5
   48344:	movw	r1, #43572	; 0xaa34
   48348:	mov	r0, #0
   4834c:	movt	r1, #7
   48350:	bl	11170 <dcgettext@plt>
   48354:	mov	r1, r0
   48358:	mov	r0, #1
   4835c:	bl	1132c <__printf_chk@plt>
   48360:	ldr	ip, [sp, #72]	; 0x48
   48364:	cmp	ip, #0
   48368:	movwne	r1, #43280	; 0xa910
   4836c:	movweq	r1, #43292	; 0xa91c
   48370:	movne	r2, #5
   48374:	moveq	r2, #5
   48378:	movne	r0, #0
   4837c:	ldreq	r0, [sp, #72]	; 0x48
   48380:	movtne	r1, #7
   48384:	movteq	r1, #7
   48388:	bl	11170 <dcgettext@plt>
   4838c:	movw	r1, #43300	; 0xa924
   48390:	movt	r1, #7
   48394:	mov	r2, r0
   48398:	mov	r0, #1
   4839c:	bl	1132c <__printf_chk@plt>
   483a0:	b	47f0c <__assert_fail@plt+0x36b08>
   483a4:	mov	r2, #5
   483a8:	movw	r1, #43384	; 0xa978
   483ac:	mov	r0, r8
   483b0:	movt	r1, #7
   483b4:	bl	11170 <dcgettext@plt>
   483b8:	mov	r1, r4
   483bc:	bl	4b9ec <warn@@Base>
   483c0:	mov	r0, r8
   483c4:	b	47744 <__assert_fail@plt+0x36340>
   483c8:	bl	1117c <__stack_chk_fail@plt>
   483cc:	mov	r1, #4
   483d0:	ldr	r3, [r9]
   483d4:	blx	r3
   483d8:	subs	r2, r0, #0
   483dc:	beq	479dc <__assert_fail@plt+0x365d8>
   483e0:	cmp	r8, #0
   483e4:	beq	483fc <__assert_fail@plt+0x36ff8>
   483e8:	movw	r1, #15128	; 0x3b18
   483ec:	mov	r0, #1
   483f0:	movt	r1, #6
   483f4:	bl	1132c <__printf_chk@plt>
   483f8:	b	479bc <__assert_fail@plt+0x365b8>
   483fc:	ldr	r3, [r7, #1688]	; 0x698
   48400:	ldr	r1, [r7, #1684]	; 0x694
   48404:	cmp	r3, r1
   48408:	bcs	48420 <__assert_fail@plt+0x3701c>
   4840c:	ldr	r1, [r7, #1680]	; 0x690
   48410:	add	r0, r3, #1
   48414:	str	r0, [r7, #1688]	; 0x698
   48418:	str	r2, [r1, r3, lsl #2]
   4841c:	b	479bc <__assert_fail@plt+0x365b8>
   48420:	mov	r2, #5
   48424:	movw	r1, #43108	; 0xa864
   48428:	mov	r0, r8
   4842c:	movt	r1, #7
   48430:	bl	11170 <dcgettext@plt>
   48434:	bl	4b2b0 <error@@Base>
   48438:	b	479bc <__assert_fail@plt+0x365b8>
   4843c:	rsb	r1, r0, r6
   48440:	sub	r3, r1, #1
   48444:	cmp	r3, #7
   48448:	bls	483d0 <__assert_fail@plt+0x36fcc>
   4844c:	b	479dc <__assert_fail@plt+0x365d8>
   48450:	ldrd	r2, [sp, #88]	; 0x58
   48454:	orrs	ip, r2, r3
   48458:	bne	4799c <__assert_fail@plt+0x36598>
   4845c:	b	47954 <__assert_fail@plt+0x36550>
   48460:	movw	r9, #26492	; 0x677c
   48464:	movt	r9, #9
   48468:	mov	r0, sl
   4846c:	add	sl, r7, #16
   48470:	ldr	r3, [r9]
   48474:	str	r2, [sp, #12]
   48478:	blx	r3
   4847c:	cmp	r6, sl
   48480:	ldr	r2, [sp, #12]
   48484:	str	r0, [sp, #52]	; 0x34
   48488:	bls	475dc <__assert_fail@plt+0x361d8>
   4848c:	b	4763c <__assert_fail@plt+0x36238>
   48490:	mov	r5, #0
   48494:	b	47700 <__assert_fail@plt+0x362fc>
   48498:	movw	r9, #26492	; 0x677c
   4849c:	mov	ip, #0
   484a0:	movt	r9, #9
   484a4:	str	ip, [sp, #52]	; 0x34
   484a8:	b	4763c <__assert_fail@plt+0x36238>
   484ac:	push	{r3, r4, r5, lr}
   484b0:	movw	r4, #14352	; 0x3810
   484b4:	movt	r4, #9
   484b8:	mov	r5, r0
   484bc:	ldr	r3, [r4, #2308]	; 0x904
   484c0:	cmn	r3, #1
   484c4:	beq	484d0 <__assert_fail@plt+0x370cc>
   484c8:	mov	r0, r3
   484cc:	pop	{r3, r4, r5, pc}
   484d0:	mov	r0, #34	; 0x22
   484d4:	mov	r1, r5
   484d8:	mov	r3, #1
   484dc:	str	r3, [r4, #2308]	; 0x904
   484e0:	bl	33860 <__assert_fail@plt+0x2245c>
   484e4:	cmp	r0, #0
   484e8:	bne	4852c <__assert_fail@plt+0x37128>
   484ec:	mov	r1, r5
   484f0:	mov	r0, #35	; 0x23
   484f4:	bl	33860 <__assert_fail@plt+0x2245c>
   484f8:	cmp	r0, #0
   484fc:	bne	48508 <__assert_fail@plt+0x37104>
   48500:	ldr	r0, [r4, #2308]	; 0x904
   48504:	pop	{r3, r4, r5, pc}
   48508:	movw	r4, #14352	; 0x3810
   4850c:	movt	r4, #9
   48510:	add	r0, r4, #2240	; 0x8c0
   48514:	mov	r1, #0
   48518:	bl	474e4 <__assert_fail@plt+0x360e0>
   4851c:	cmp	r0, #0
   48520:	bne	48500 <__assert_fail@plt+0x370fc>
   48524:	str	r0, [r4, #2308]	; 0x904
   48528:	pop	{r3, r4, r5, pc}
   4852c:	add	r0, r4, #2176	; 0x880
   48530:	mov	r1, #0
   48534:	bl	474e4 <__assert_fail@plt+0x360e0>
   48538:	cmp	r0, #0
   4853c:	streq	r0, [r4, #2308]	; 0x904
   48540:	b	484ec <__assert_fail@plt+0x370e8>
   48544:	push	{r4, r5, r6, lr}
   48548:	mov	r6, r1
   4854c:	bl	484ac <__assert_fail@plt+0x370a8>
   48550:	cmp	r0, #0
   48554:	popeq	{r4, r5, r6, pc}
   48558:	movw	r3, #24696	; 0x6078
   4855c:	movt	r3, #9
   48560:	ldr	r5, [r3, #1688]	; 0x698
   48564:	cmp	r5, #0
   48568:	beq	485a4 <__assert_fail@plt+0x371a0>
   4856c:	ldr	r0, [r3, #1680]	; 0x690
   48570:	ldr	r3, [r0]
   48574:	cmp	r3, r6
   48578:	beq	48604 <__assert_fail@plt+0x37200>
   4857c:	mov	ip, r0
   48580:	mov	r2, #0
   48584:	b	48598 <__assert_fail@plt+0x37194>
   48588:	ldr	r4, [ip, #4]!
   4858c:	cmp	r4, r6
   48590:	beq	485ac <__assert_fail@plt+0x371a8>
   48594:	mov	r2, r3
   48598:	add	r3, r2, #1
   4859c:	cmp	r3, r5
   485a0:	bne	48588 <__assert_fail@plt+0x37184>
   485a4:	mov	r0, #0
   485a8:	pop	{r4, r5, r6, pc}
   485ac:	cmp	r3, #0
   485b0:	beq	485f0 <__assert_fail@plt+0x371ec>
   485b4:	add	r2, r2, #1073741824	; 0x40000000
   485b8:	ldr	r1, [r0, r2, lsl #2]
   485bc:	lsl	r2, r2, #2
   485c0:	cmp	r1, #0
   485c4:	addeq	r3, r2, #4
   485c8:	beq	485f0 <__assert_fail@plt+0x371ec>
   485cc:	add	r2, r2, #4
   485d0:	add	r2, r0, r2
   485d4:	b	485e4 <__assert_fail@plt+0x371e0>
   485d8:	ldr	r1, [r2, #-4]
   485dc:	cmp	r1, #0
   485e0:	beq	485f8 <__assert_fail@plt+0x371f4>
   485e4:	subs	r3, r3, #1
   485e8:	sub	r2, r2, #4
   485ec:	bne	485d8 <__assert_fail@plt+0x371d4>
   485f0:	add	r0, r0, r3
   485f4:	pop	{r4, r5, r6, pc}
   485f8:	lsl	r3, r3, #2
   485fc:	add	r0, r0, r3
   48600:	pop	{r4, r5, r6, pc}
   48604:	mov	r3, #0
   48608:	b	485f0 <__assert_fail@plt+0x371ec>
   4860c:	push	{r4, r5, r6, lr}
   48610:	movw	r4, #24696	; 0x6078
   48614:	movt	r4, #9
   48618:	mov	r3, #0
   4861c:	mov	r6, r0
   48620:	sub	sp, sp, #8
   48624:	ldr	r5, [r4, #1568]	; 0x620
   48628:	str	r3, [r4, #1692]	; 0x69c
   4862c:	cmn	r5, #1
   48630:	str	r3, [r4, #1696]	; 0x6a0
   48634:	moveq	r0, r3
   48638:	beq	48648 <__assert_fail@plt+0x37244>
   4863c:	cmp	r5, r3
   48640:	movne	r0, r5
   48644:	beq	48650 <__assert_fail@plt+0x3724c>
   48648:	add	sp, sp, #8
   4864c:	pop	{r4, r5, r6, pc}
   48650:	bl	484ac <__assert_fail@plt+0x370a8>
   48654:	mov	r0, #3
   48658:	mov	r1, r6
   4865c:	bl	33860 <__assert_fail@plt+0x2245c>
   48660:	cmp	r0, #0
   48664:	beq	48690 <__assert_fail@plt+0x3728c>
   48668:	str	r5, [sp]
   4866c:	mov	r2, r5
   48670:	ldr	r0, [pc, #104]	; 486e0 <__assert_fail@plt+0x372dc>
   48674:	mov	r1, r6
   48678:	mov	r3, #1
   4867c:	bl	41ec0 <__assert_fail@plt+0x30abc>
   48680:	cmp	r0, #0
   48684:	beq	48690 <__assert_fail@plt+0x3728c>
   48688:	ldr	r0, [r4, #1568]	; 0x620
   4868c:	b	48648 <__assert_fail@plt+0x37244>
   48690:	mov	r0, #23
   48694:	mov	r1, r6
   48698:	bl	33860 <__assert_fail@plt+0x2245c>
   4869c:	cmp	r0, #0
   486a0:	bne	486b8 <__assert_fail@plt+0x372b4>
   486a4:	mvn	r3, #0
   486a8:	mov	r0, #0
   486ac:	str	r3, [r4, #1568]	; 0x620
   486b0:	add	sp, sp, #8
   486b4:	pop	{r4, r5, r6, pc}
   486b8:	mov	r3, #0
   486bc:	mov	r1, r6
   486c0:	str	r3, [sp]
   486c4:	mov	r2, #24
   486c8:	ldr	r0, [pc, #20]	; 486e4 <__assert_fail@plt+0x372e0>
   486cc:	mov	r3, #1
   486d0:	bl	41ec0 <__assert_fail@plt+0x30abc>
   486d4:	cmp	r0, #0
   486d8:	beq	486a4 <__assert_fail@plt+0x372a0>
   486dc:	b	48688 <__assert_fail@plt+0x37284>
   486e0:	ldrdeq	r3, [r9], -r0
   486e4:	ldrdeq	r3, [r9], -r0
   486e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   486ec:	sub	sp, sp, #28
   486f0:	ldrd	r2, [r0, #24]
   486f4:	str	r0, [sp, #12]
   486f8:	orrs	r0, r2, r3
   486fc:	beq	48814 <__assert_fail@plt+0x37410>
   48700:	mov	r0, r1
   48704:	bl	4860c <__assert_fail@plt+0x37208>
   48708:	subs	r4, r0, #0
   4870c:	beq	487ec <__assert_fail@plt+0x373e8>
   48710:	mov	r2, #5
   48714:	movw	r1, #28592	; 0x6fb0
   48718:	mov	r0, #0
   4871c:	movt	r1, #7
   48720:	bl	11170 <dcgettext@plt>
   48724:	ldr	r6, [sp, #12]
   48728:	movw	fp, #24696	; 0x6078
   4872c:	movt	fp, #9
   48730:	ldr	r2, [r6, #8]
   48734:	mov	r1, r0
   48738:	mov	r0, #1
   4873c:	bl	1132c <__printf_chk@plt>
   48740:	ldr	r0, [fp, #1568]	; 0x620
   48744:	mov	r1, #4
   48748:	add	r0, r0, #1
   4874c:	bl	4ebc8 <warn@@Base+0x31dc>
   48750:	ldr	r6, [fp, #1568]	; 0x620
   48754:	cmp	r6, #0
   48758:	str	r0, [sp, #20]
   4875c:	beq	489d8 <__assert_fail@plt+0x375d4>
   48760:	mov	r9, #0
   48764:	mvn	r6, #0
   48768:	mov	r7, #0
   4876c:	str	r9, [sp, #16]
   48770:	mov	r8, r9
   48774:	mov	r5, r9
   48778:	ldr	r4, [sp, #12]
   4877c:	b	487a0 <__assert_fail@plt+0x3739c>
   48780:	ldr	ip, [sp, #20]
   48784:	str	sl, [ip, r5, lsl #2]
   48788:	add	r5, r5, #1
   4878c:	ldr	r2, [fp, #1568]	; 0x620
   48790:	add	r8, r8, #1
   48794:	add	r9, r9, #80	; 0x50
   48798:	cmp	r8, r2
   4879c:	bcs	48848 <__assert_fail@plt+0x37444>
   487a0:	ldr	sl, [fp, #1580]	; 0x62c
   487a4:	add	sl, sl, r9
   487a8:	ldrd	r0, [sl, #32]
   487ac:	cmp	r1, r7
   487b0:	cmpeq	r0, r6
   487b4:	beq	4878c <__assert_fail@plt+0x37388>
   487b8:	ldrd	r2, [r4, #24]
   487bc:	cmp	r1, r3
   487c0:	cmpeq	r0, r2
   487c4:	bcc	48780 <__assert_fail@plt+0x3737c>
   487c8:	mov	r2, #5
   487cc:	movw	r1, #43700	; 0xaab4
   487d0:	mov	r0, #0
   487d4:	movt	r1, #7
   487d8:	bl	11170 <dcgettext@plt>
   487dc:	ldr	r1, [sl, #32]
   487e0:	mov	r2, r8
   487e4:	bl	4b9ec <warn@@Base>
   487e8:	b	4878c <__assert_fail@plt+0x37388>
   487ec:	mov	r2, #5
   487f0:	movw	r1, #43616	; 0xaa60
   487f4:	movt	r1, #7
   487f8:	bl	11170 <dcgettext@plt>
   487fc:	ldr	ip, [sp, #12]
   48800:	ldr	r1, [ip, #8]
   48804:	bl	4b9ec <warn@@Base>
   48808:	mov	r0, r4
   4880c:	add	sp, sp, #28
   48810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48814:	mov	r2, #5
   48818:	movw	r1, #28564	; 0x6f94
   4881c:	mov	r0, #0
   48820:	movt	r1, #7
   48824:	bl	11170 <dcgettext@plt>
   48828:	ldr	r6, [sp, #12]
   4882c:	ldr	r2, [r6, #8]
   48830:	mov	r1, r0
   48834:	mov	r0, #1
   48838:	bl	1132c <__printf_chk@plt>
   4883c:	mov	r0, #0
   48840:	add	sp, sp, #28
   48844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48848:	mov	r0, #80	; 0x50
   4884c:	str	r5, [sp, #16]
   48850:	bl	4eba0 <warn@@Base+0x31b4>
   48854:	ldr	r6, [sp, #12]
   48858:	ldr	r1, [sp, #16]
   4885c:	movw	r3, #34744	; 0x87b8
   48860:	mov	r2, #4
   48864:	movt	r3, #3
   48868:	ldrd	r4, [r6, #24]
   4886c:	mov	ip, r0
   48870:	ldr	r0, [sp, #20]
   48874:	strd	r4, [ip, #32]
   48878:	str	ip, [r0, r1, lsl #2]
   4887c:	bl	11398 <qsort@plt>
   48880:	ldr	ip, [sp, #16]
   48884:	cmp	ip, #0
   48888:	beq	489bc <__assert_fail@plt+0x375b8>
   4888c:	ldr	ip, [sp, #20]
   48890:	movw	r9, #26492	; 0x677c
   48894:	movt	r9, #9
   48898:	mov	r6, #0
   4889c:	sub	sl, ip, #4
   488a0:	str	r6, [sp, #8]
   488a4:	ldr	r3, [sl, #4]
   488a8:	mov	r2, #5
   488ac:	ldr	r6, [sp, #8]
   488b0:	movw	r1, #43756	; 0xaaec
   488b4:	mov	r0, #0
   488b8:	movt	r1, #7
   488bc:	add	r6, r6, #1
   488c0:	str	r6, [sp, #8]
   488c4:	ldr	r6, [r3]
   488c8:	bl	11170 <dcgettext@plt>
   488cc:	ldr	r3, [sl, #4]
   488d0:	mov	ip, #0
   488d4:	ldrd	r2, [r3, #16]
   488d8:	str	ip, [sp]
   488dc:	mov	r4, r0
   488e0:	movw	r0, #18952	; 0x4a08
   488e4:	movt	r0, #6
   488e8:	bl	389e0 <__assert_fail@plt+0x275dc>
   488ec:	mov	r1, r4
   488f0:	mov	r2, r0
   488f4:	mov	r0, #1
   488f8:	bl	1132c <__printf_chk@plt>
   488fc:	mov	r2, #5
   48900:	movw	r1, #43796	; 0xab14
   48904:	mov	r0, #0
   48908:	movt	r1, #7
   4890c:	bl	11170 <dcgettext@plt>
   48910:	mov	r1, r0
   48914:	mov	r0, #1
   48918:	bl	1132c <__printf_chk@plt>
   4891c:	ldr	r3, [sl, #4]!
   48920:	ldr	ip, [sp, #12]
   48924:	ldr	r1, [sl, #4]
   48928:	ldr	r2, [ip, #12]
   4892c:	ldr	r3, [r3, #32]
   48930:	ldr	r8, [r1, #32]
   48934:	add	fp, r2, r3
   48938:	add	r8, r2, r8
   4893c:	cmp	fp, r8
   48940:	movcc	r7, #0
   48944:	bcs	489ac <__assert_fail@plt+0x375a8>
   48948:	ldr	r3, [r9]
   4894c:	mov	r0, fp
   48950:	mov	r1, r6
   48954:	add	fp, fp, r6
   48958:	blx	r3
   4895c:	mov	r2, #5
   48960:	mov	r4, r0
   48964:	mov	r5, r1
   48968:	mov	r0, #0
   4896c:	movw	r1, #43812	; 0xab24
   48970:	movt	r1, #7
   48974:	bl	11170 <dcgettext@plt>
   48978:	mov	r2, r7
   4897c:	mov	r1, r0
   48980:	mov	r0, #1
   48984:	add	r7, r7, r0
   48988:	bl	1132c <__printf_chk@plt>
   4898c:	mov	r0, r4
   48990:	mov	r1, r5
   48994:	mov	r2, r6
   48998:	bl	38ad4 <__assert_fail@plt+0x276d0>
   4899c:	mov	r0, #10
   489a0:	bl	112fc <putchar@plt>
   489a4:	cmp	r8, fp
   489a8:	bhi	48948 <__assert_fail@plt+0x37544>
   489ac:	ldr	r6, [sp, #8]
   489b0:	ldr	ip, [sp, #16]
   489b4:	cmp	r6, ip
   489b8:	bne	488a4 <__assert_fail@plt+0x374a0>
   489bc:	mov	r0, #10
   489c0:	bl	112fc <putchar@plt>
   489c4:	ldr	r0, [sp, #20]
   489c8:	bl	1111c <free@plt>
   489cc:	mov	r0, #1
   489d0:	add	sp, sp, #28
   489d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   489d8:	mov	r0, #80	; 0x50
   489dc:	bl	4eba0 <warn@@Base+0x31b4>
   489e0:	ldr	lr, [sp, #12]
   489e4:	mov	r1, r6
   489e8:	movw	r3, #34744	; 0x87b8
   489ec:	mov	r2, #4
   489f0:	movt	r3, #3
   489f4:	ldrd	r4, [lr, #24]
   489f8:	mov	ip, r0
   489fc:	ldr	r0, [sp, #20]
   48a00:	strd	r4, [ip, #32]
   48a04:	str	ip, [r0]
   48a08:	bl	11398 <qsort@plt>
   48a0c:	b	489bc <__assert_fail@plt+0x375b8>
   48a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48a14:	sub	sp, sp, #84	; 0x54
   48a18:	ldr	r4, [r0, #24]
   48a1c:	ldr	ip, [r0, #12]
   48a20:	cmp	r4, #0
   48a24:	str	r0, [sp, #72]	; 0x48
   48a28:	str	ip, [sp, #56]	; 0x38
   48a2c:	beq	48f54 <__assert_fail@plt+0x37b50>
   48a30:	mov	r0, r1
   48a34:	bl	4860c <__assert_fail@plt+0x37208>
   48a38:	subs	r5, r0, #0
   48a3c:	beq	48fe8 <__assert_fail@plt+0x37be4>
   48a40:	movw	ip, #24696	; 0x6078
   48a44:	movt	ip, #9
   48a48:	str	ip, [sp, #68]	; 0x44
   48a4c:	ldr	r1, [ip, #1568]	; 0x620
   48a50:	cmp	r1, #0
   48a54:	beq	49010 <__assert_fail@plt+0x37c0c>
   48a58:	ldr	ip, [sp, #68]	; 0x44
   48a5c:	add	r1, r1, r1, lsl #2
   48a60:	ldr	r3, [ip, #1580]	; 0x62c
   48a64:	mov	ip, #0
   48a68:	mov	r2, ip
   48a6c:	str	ip, [sp, #64]	; 0x40
   48a70:	add	r1, r3, r1, lsl #4
   48a74:	ldr	r0, [r3, #68]	; 0x44
   48a78:	add	r3, r3, #80	; 0x50
   48a7c:	cmp	r3, r1
   48a80:	add	r2, r2, r0
   48a84:	bne	48a74 <__assert_fail@plt+0x37670>
   48a88:	cmp	r2, #0
   48a8c:	str	r2, [sp, #64]	; 0x40
   48a90:	beq	49010 <__assert_fail@plt+0x37c0c>
   48a94:	ldr	ip, [sp, #64]	; 0x40
   48a98:	lsl	r0, ip, #3
   48a9c:	bl	4eba0 <warn@@Base+0x31b4>
   48aa0:	ldr	ip, [sp, #68]	; 0x44
   48aa4:	movw	r3, #24696	; 0x6078
   48aa8:	movt	r3, #9
   48aac:	ldr	r5, [ip, #1568]	; 0x620
   48ab0:	cmp	r5, #0
   48ab4:	str	r0, [sp, #76]	; 0x4c
   48ab8:	beq	48b10 <__assert_fail@plt+0x3770c>
   48abc:	ldr	r1, [r3, #1580]	; 0x62c
   48ac0:	add	r5, r5, r5, lsl #2
   48ac4:	ldr	r0, [sp, #76]	; 0x4c
   48ac8:	add	r5, r1, r5, lsl #4
   48acc:	ldr	lr, [r1, #68]	; 0x44
   48ad0:	cmp	lr, #0
   48ad4:	beq	48b04 <__assert_fail@plt+0x37700>
   48ad8:	ldr	r6, [r1, #64]	; 0x40
   48adc:	lsl	lr, lr, #3
   48ae0:	mov	r3, #0
   48ae4:	ldr	ip, [r6, r3]
   48ae8:	mov	r2, r0
   48aec:	str	ip, [r2, r3]!
   48af0:	add	r3, r3, #8
   48af4:	cmp	r3, lr
   48af8:	str	r1, [r2, #4]
   48afc:	bne	48ae4 <__assert_fail@plt+0x376e0>
   48b00:	add	r0, r0, r3
   48b04:	add	r1, r1, #80	; 0x50
   48b08:	cmp	r1, r5
   48b0c:	bne	48acc <__assert_fail@plt+0x376c8>
   48b10:	movw	r3, #34760	; 0x87c8
   48b14:	ldr	r0, [sp, #76]	; 0x4c
   48b18:	movt	r3, #3
   48b1c:	ldr	r1, [sp, #64]	; 0x40
   48b20:	mov	r2, #8
   48b24:	bl	11398 <qsort@plt>
   48b28:	ldr	ip, [sp, #68]	; 0x44
   48b2c:	ldr	r3, [ip, #1700]	; 0x6a4
   48b30:	cmp	r3, #0
   48b34:	bne	48fac <__assert_fail@plt+0x37ba8>
   48b38:	mov	r2, #5
   48b3c:	movw	r1, #28592	; 0x6fb0
   48b40:	mov	r0, #0
   48b44:	movt	r1, #7
   48b48:	bl	11170 <dcgettext@plt>
   48b4c:	ldr	ip, [sp, #72]	; 0x48
   48b50:	ldr	r2, [ip, #8]
   48b54:	ldr	ip, [sp, #56]	; 0x38
   48b58:	add	r8, ip, r4
   48b5c:	mov	r1, r0
   48b60:	mov	r0, #1
   48b64:	bl	1132c <__printf_chk@plt>
   48b68:	mov	r2, #5
   48b6c:	movw	r1, #44184	; 0xac98
   48b70:	mov	r0, #0
   48b74:	movt	r1, #7
   48b78:	movw	ip, #16696	; 0x4138
   48b7c:	str	ip, [sp, #32]
   48b80:	bl	11170 <dcgettext@plt>
   48b84:	mov	r1, r0
   48b88:	mov	r0, #1
   48b8c:	bl	1132c <__printf_chk@plt>
   48b90:	ldr	ip, [sp, #32]
   48b94:	ldr	r5, [sp, #56]	; 0x38
   48b98:	movt	ip, #9
   48b9c:	str	ip, [sp, #32]
   48ba0:	ldr	ip, [sp, #76]	; 0x4c
   48ba4:	mov	r6, r5
   48ba8:	str	ip, [sp, #40]	; 0x28
   48bac:	movw	ip, #26492	; 0x677c
   48bb0:	movt	ip, #9
   48bb4:	str	ip, [sp, #60]	; 0x3c
   48bb8:	mov	ip, #0
   48bbc:	str	ip, [sp, #44]	; 0x2c
   48bc0:	ldr	ip, [sp, #40]	; 0x28
   48bc4:	ldr	r3, [ip, #4]
   48bc8:	ldr	ip, [ip]
   48bcc:	ldr	r9, [r3]
   48bd0:	ldr	r4, [r3, #24]
   48bd4:	sub	r3, r9, #2
   48bd8:	str	ip, [sp, #24]
   48bdc:	cmp	r3, #6
   48be0:	bhi	48df8 <__assert_fail@plt+0x379f4>
   48be4:	ldr	r0, [sp, #24]
   48be8:	ldr	ip, [sp, #56]	; 0x38
   48bec:	ldr	r1, [sp, #56]	; 0x38
   48bf0:	add	ip, ip, r0
   48bf4:	str	ip, [sp, #28]
   48bf8:	cmp	r1, ip
   48bfc:	cmpls	ip, r8
   48c00:	movcc	r0, #0
   48c04:	movcs	r0, #1
   48c08:	bcs	48f04 <__assert_fail@plt+0x37b00>
   48c0c:	ldr	ip, [sp, #68]	; 0x44
   48c10:	ldr	r3, [ip, #1700]	; 0x6a4
   48c14:	cmp	r3, #0
   48c18:	beq	48c80 <__assert_fail@plt+0x3787c>
   48c1c:	ldr	ip, [sp, #44]	; 0x2c
   48c20:	cmp	ip, #0
   48c24:	beq	48c80 <__assert_fail@plt+0x3787c>
   48c28:	ldr	ip, [sp, #28]
   48c2c:	cmp	ip, r6
   48c30:	movwhi	r1, #44008	; 0xabe8
   48c34:	movhi	r2, #5
   48c38:	movthi	r1, #7
   48c3c:	bhi	48c60 <__assert_fail@plt+0x3785c>
   48c40:	bcs	48c80 <__assert_fail@plt+0x3787c>
   48c44:	ldr	ip, [sp, #28]
   48c48:	cmp	ip, r5
   48c4c:	streq	r5, [sp, #28]
   48c50:	beq	48e1c <__assert_fail@plt+0x37a18>
   48c54:	movw	r1, #44056	; 0xac18
   48c58:	movt	r1, #7
   48c5c:	mov	r2, #5
   48c60:	bl	11170 <dcgettext@plt>
   48c64:	ldr	ip, [sp, #56]	; 0x38
   48c68:	ldr	r3, [sp, #28]
   48c6c:	rsb	r1, ip, r6
   48c70:	rsb	r2, ip, r3
   48c74:	ldr	ip, [sp, #72]	; 0x48
   48c78:	ldr	r3, [ip, #8]
   48c7c:	bl	4b9ec <warn@@Base>
   48c80:	ldr	ip, [sp, #28]
   48c84:	cmp	r8, ip
   48c88:	bls	4903c <__assert_fail@plt+0x37c38>
   48c8c:	lsl	r2, r9, #3
   48c90:	mvn	r0, #0
   48c94:	add	r3, r2, r0
   48c98:	sub	r1, r2, #33	; 0x21
   48c9c:	lsl	r0, r0, r3
   48ca0:	mvn	r2, #1
   48ca4:	orr	r1, r0, r2, lsl r1
   48ca8:	str	r1, [sp, #52]	; 0x34
   48cac:	ldr	r0, [sp, #52]	; 0x34
   48cb0:	rsb	r1, r3, #32
   48cb4:	lsl	ip, r9, #1
   48cb8:	str	ip, [sp, #20]
   48cbc:	orr	r1, r0, r2, lsr r1
   48cc0:	lsl	r2, r2, r3
   48cc4:	str	r1, [sp, #52]	; 0x34
   48cc8:	str	r2, [sp, #48]	; 0x30
   48ccc:	ldr	ip, [sp, #28]
   48cd0:	ldrd	r0, [sp, #48]	; 0x30
   48cd4:	add	sl, ip, r9
   48cd8:	str	r4, [sp, #36]	; 0x24
   48cdc:	mov	fp, ip
   48ce0:	mvn	r0, r0
   48ce4:	mvn	r1, r1
   48ce8:	strd	r0, [sp, #8]
   48cec:	b	48de4 <__assert_fail@plt+0x379e0>
   48cf0:	cmp	r8, fp
   48cf4:	bls	48efc <__assert_fail@plt+0x37af8>
   48cf8:	rsb	r1, fp, r8
   48cfc:	sub	r3, r1, #1
   48d00:	cmp	r3, #7
   48d04:	movhi	r6, #0
   48d08:	movhi	r7, #0
   48d0c:	bhi	48d28 <__assert_fail@plt+0x37924>
   48d10:	ldr	ip, [sp, #60]	; 0x3c
   48d14:	mov	r0, fp
   48d18:	ldr	r3, [ip]
   48d1c:	blx	r3
   48d20:	mov	r6, r0
   48d24:	mov	r7, r1
   48d28:	cmp	r8, sl
   48d2c:	bls	48efc <__assert_fail@plt+0x37af8>
   48d30:	ldr	r3, [sp, #20]
   48d34:	add	fp, fp, r3
   48d38:	cmp	r8, fp
   48d3c:	bhi	48ec0 <__assert_fail@plt+0x37abc>
   48d40:	subs	r1, r8, sl
   48d44:	moveq	r4, #0
   48d48:	moveq	r5, #0
   48d4c:	bne	48ec4 <__assert_fail@plt+0x37ac0>
   48d50:	ldr	r2, [sp, #24]
   48d54:	movw	r1, #44108	; 0xac4c
   48d58:	mov	r0, #1
   48d5c:	movt	r1, #7
   48d60:	bl	1132c <__printf_chk@plt>
   48d64:	orr	r2, r4, r6
   48d68:	orr	r3, r5, r7
   48d6c:	orrs	ip, r2, r3
   48d70:	beq	48f2c <__assert_fail@plt+0x37b28>
   48d74:	ldrd	r2, [sp, #8]
   48d78:	ldrd	r0, [sp, #8]
   48d7c:	and	r2, r2, r6
   48d80:	and	r3, r3, r7
   48d84:	cmp	r1, r3
   48d88:	cmpeq	r0, r2
   48d8c:	bne	48e4c <__assert_fail@plt+0x37a48>
   48d90:	and	r2, r0, r4
   48d94:	and	r3, r1, r5
   48d98:	cmp	r1, r3
   48d9c:	cmpeq	r0, r2
   48da0:	beq	48e4c <__assert_fail@plt+0x37a48>
   48da4:	mov	r0, r6
   48da8:	mov	r1, r7
   48dac:	mov	r2, r9
   48db0:	bl	38ad4 <__assert_fail@plt+0x276d0>
   48db4:	mov	r0, r4
   48db8:	mov	r1, r5
   48dbc:	mov	r2, r9
   48dc0:	bl	38ad4 <__assert_fail@plt+0x276d0>
   48dc4:	movw	r0, #44136	; 0xac68
   48dc8:	movt	r0, #7
   48dcc:	str	r4, [sp, #36]	; 0x24
   48dd0:	bl	11218 <puts@plt>
   48dd4:	ldr	r3, [sp, #20]
   48dd8:	cmp	r8, fp
   48ddc:	add	sl, sl, r3
   48de0:	bls	48eb8 <__assert_fail@plt+0x37ab4>
   48de4:	cmp	r8, sl
   48de8:	mov	r4, sl
   48dec:	bls	48cf0 <__assert_fail@plt+0x378ec>
   48df0:	mov	r1, r9
   48df4:	b	48cfc <__assert_fail@plt+0x378f8>
   48df8:	mov	r2, #5
   48dfc:	movw	r1, #43904	; 0xab80
   48e00:	mov	r0, #0
   48e04:	movt	r1, #7
   48e08:	bl	11170 <dcgettext@plt>
   48e0c:	mov	r1, r9
   48e10:	ldr	r2, [sp, #24]
   48e14:	str	r5, [sp, #28]
   48e18:	bl	4b9ec <warn@@Base>
   48e1c:	ldr	ip, [sp, #44]	; 0x2c
   48e20:	ldr	r0, [sp, #64]	; 0x40
   48e24:	add	ip, ip, #1
   48e28:	str	ip, [sp, #44]	; 0x2c
   48e2c:	ldr	ip, [sp, #40]	; 0x28
   48e30:	add	ip, ip, #8
   48e34:	str	ip, [sp, #40]	; 0x28
   48e38:	ldr	ip, [sp, #44]	; 0x2c
   48e3c:	cmp	ip, r0
   48e40:	beq	48f88 <__assert_fail@plt+0x37b84>
   48e44:	ldr	r5, [sp, #28]
   48e48:	b	48bc0 <__assert_fail@plt+0x377bc>
   48e4c:	ldr	r0, [sp, #36]	; 0x24
   48e50:	mov	r1, #0
   48e54:	mov	r2, r9
   48e58:	strd	r0, [sp]
   48e5c:	adds	r0, r0, r6
   48e60:	adc	r1, r1, r7
   48e64:	bl	38ad4 <__assert_fail@plt+0x276d0>
   48e68:	ldrd	r0, [sp]
   48e6c:	mov	r2, r9
   48e70:	adds	r0, r0, r4
   48e74:	adc	r1, r1, r5
   48e78:	bl	38ad4 <__assert_fail@plt+0x276d0>
   48e7c:	cmp	r7, r5
   48e80:	cmpeq	r6, r4
   48e84:	movweq	r1, #44152	; 0xac78
   48e88:	moveq	r0, #0
   48e8c:	movteq	r1, #7
   48e90:	beq	48ee4 <__assert_fail@plt+0x37ae0>
   48e94:	bhi	48ed8 <__assert_fail@plt+0x37ad4>
   48e98:	ldr	ip, [sp, #32]
   48e9c:	mov	r0, #10
   48ea0:	ldr	r1, [ip]
   48ea4:	bl	111ac <_IO_putc@plt>
   48ea8:	ldr	r3, [sp, #20]
   48eac:	cmp	r8, fp
   48eb0:	add	sl, sl, r3
   48eb4:	bhi	48de4 <__assert_fail@plt+0x379e0>
   48eb8:	mov	r6, fp
   48ebc:	b	48e1c <__assert_fail@plt+0x37a18>
   48ec0:	mov	r1, r9
   48ec4:	mov	r0, sl
   48ec8:	bl	4bee4 <warn@@Base+0x4f8>
   48ecc:	mov	r4, r0
   48ed0:	mov	r5, r1
   48ed4:	b	48d50 <__assert_fail@plt+0x3794c>
   48ed8:	movw	r1, #44168	; 0xac88
   48edc:	movt	r1, #7
   48ee0:	mov	r0, #0
   48ee4:	mov	r2, #5
   48ee8:	bl	11170 <dcgettext@plt>
   48eec:	ldr	ip, [sp, #32]
   48ef0:	ldr	r1, [ip]
   48ef4:	bl	113d4 <fputs@plt>
   48ef8:	b	48e98 <__assert_fail@plt+0x37a94>
   48efc:	mov	r6, r4
   48f00:	b	48e1c <__assert_fail@plt+0x37a18>
   48f04:	mov	r2, #5
   48f08:	movw	r1, #43964	; 0xabbc
   48f0c:	mov	r0, #0
   48f10:	movt	r1, #7
   48f14:	bl	11170 <dcgettext@plt>
   48f18:	ldr	r1, [sp, #24]
   48f1c:	ldr	r2, [sp, #44]	; 0x2c
   48f20:	str	r5, [sp, #28]
   48f24:	bl	4b9ec <warn@@Base>
   48f28:	b	48e1c <__assert_fail@plt+0x37a18>
   48f2c:	mov	r2, #5
   48f30:	movw	r1, #44120	; 0xac58
   48f34:	mov	r0, #0
   48f38:	movt	r1, #7
   48f3c:	bl	11170 <dcgettext@plt>
   48f40:	mov	r6, fp
   48f44:	mov	r1, r0
   48f48:	mov	r0, #1
   48f4c:	bl	1132c <__printf_chk@plt>
   48f50:	b	48e1c <__assert_fail@plt+0x37a18>
   48f54:	mov	r0, r4
   48f58:	mov	r2, #5
   48f5c:	movw	r1, #28564	; 0x6f94
   48f60:	movt	r1, #7
   48f64:	bl	11170 <dcgettext@plt>
   48f68:	ldr	ip, [sp, #72]	; 0x48
   48f6c:	ldr	r2, [ip, #8]
   48f70:	mov	r1, r0
   48f74:	mov	r0, #1
   48f78:	bl	1132c <__printf_chk@plt>
   48f7c:	mov	r0, r4
   48f80:	add	sp, sp, #84	; 0x54
   48f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48f88:	ldr	ip, [sp, #32]
   48f8c:	mov	r0, #10
   48f90:	ldr	r1, [ip]
   48f94:	bl	111ac <_IO_putc@plt>
   48f98:	ldr	r0, [sp, #76]	; 0x4c
   48f9c:	bl	1111c <free@plt>
   48fa0:	mov	r0, #1
   48fa4:	add	sp, sp, #84	; 0x54
   48fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   48fac:	ldr	ip, [sp, #76]	; 0x4c
   48fb0:	ldr	r3, [ip]
   48fb4:	cmp	r3, #0
   48fb8:	beq	48b38 <__assert_fail@plt+0x37734>
   48fbc:	mov	r2, #5
   48fc0:	movw	r1, #43860	; 0xab54
   48fc4:	mov	r0, #0
   48fc8:	movt	r1, #7
   48fcc:	bl	11170 <dcgettext@plt>
   48fd0:	ldr	ip, [sp, #72]	; 0x48
   48fd4:	ldr	r1, [ip, #8]
   48fd8:	ldr	ip, [sp, #76]	; 0x4c
   48fdc:	ldr	r2, [ip]
   48fe0:	bl	4b9ec <warn@@Base>
   48fe4:	b	48b38 <__assert_fail@plt+0x37734>
   48fe8:	mov	r2, #5
   48fec:	movw	r1, #43616	; 0xaa60
   48ff0:	movt	r1, #7
   48ff4:	bl	11170 <dcgettext@plt>
   48ff8:	ldr	ip, [sp, #72]	; 0x48
   48ffc:	ldr	r1, [ip, #8]
   49000:	bl	4b9ec <warn@@Base>
   49004:	mov	r0, r5
   49008:	add	sp, sp, #84	; 0x54
   4900c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49010:	mov	r2, #5
   49014:	movw	r1, #43820	; 0xab2c
   49018:	mov	r0, #0
   4901c:	movt	r1, #7
   49020:	bl	11170 <dcgettext@plt>
   49024:	mov	r1, r0
   49028:	mov	r0, #1
   4902c:	bl	1132c <__printf_chk@plt>
   49030:	mov	r0, #1
   49034:	add	sp, sp, #84	; 0x54
   49038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4903c:	ldr	r6, [sp, #28]
   49040:	b	48e1c <__assert_fail@plt+0x37a18>
   49044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   49048:	sub	sp, sp, #180	; 0xb4
   4904c:	movw	r5, #16680	; 0x4128
   49050:	movt	r5, #9
   49054:	str	r0, [sp, #56]	; 0x38
   49058:	mov	r4, r1
   4905c:	ldr	ip, [sp, #56]	; 0x38
   49060:	mov	r1, #46	; 0x2e
   49064:	ldr	r3, [r5]
   49068:	ldr	r0, [r0, #8]
   4906c:	ldr	ip, [ip, #12]
   49070:	str	r3, [sp, #172]	; 0xac
   49074:	str	r5, [sp, #164]	; 0xa4
   49078:	str	ip, [sp, #140]	; 0x8c
   4907c:	bl	11374 <strrchr@plt>
   49080:	subs	r3, r0, #0
   49084:	streq	r3, [sp, #152]	; 0x98
   49088:	beq	490a4 <__assert_fail@plt+0x37ca0>
   4908c:	movw	r1, #46844	; 0xb6fc
   49090:	movt	r1, #7
   49094:	bl	110f8 <strcmp@plt>
   49098:	rsbs	r0, r0, #1
   4909c:	movcc	r0, #0
   490a0:	str	r0, [sp, #152]	; 0x98
   490a4:	ldr	r5, [sp, #56]	; 0x38
   490a8:	ldr	r5, [r5, #24]
   490ac:	cmp	r5, #0
   490b0:	str	r5, [sp, #144]	; 0x90
   490b4:	beq	49e6c <__assert_fail@plt+0x38a68>
   490b8:	mov	r0, r4
   490bc:	bl	4860c <__assert_fail@plt+0x37208>
   490c0:	subs	r4, r0, #0
   490c4:	beq	49ec0 <__assert_fail@plt+0x38abc>
   490c8:	movw	r5, #24696	; 0x6078
   490cc:	movt	r5, #9
   490d0:	str	r5, [sp, #116]	; 0x74
   490d4:	ldr	r9, [r5, #1568]	; 0x620
   490d8:	cmp	r9, #0
   490dc:	beq	49f6c <__assert_fail@plt+0x38b68>
   490e0:	ldr	ip, [sp, #116]	; 0x74
   490e4:	mov	r2, #0
   490e8:	mov	r5, #1
   490ec:	mvn	sl, #0
   490f0:	mov	fp, #0
   490f4:	mov	r7, r2
   490f8:	ldr	ip, [ip, #1580]	; 0x62c
   490fc:	mov	r6, r2
   49100:	mov	r8, r5
   49104:	str	r2, [sp, #136]	; 0x88
   49108:	str	r5, [sp, #128]	; 0x80
   4910c:	str	ip, [sp, #40]	; 0x28
   49110:	mov	ip, r2
   49114:	ldr	lr, [sp, #40]	; 0x28
   49118:	str	r9, [sp, #24]
   4911c:	ldr	r5, [lr, #56]	; 0x38
   49120:	cmp	r5, #0
   49124:	moveq	r3, #0
   49128:	andne	r3, r8, #1
   4912c:	cmp	r6, r5
   49130:	movcc	r6, r5
   49134:	cmp	r3, #0
   49138:	beq	491b4 <__assert_fail@plt+0x37db0>
   4913c:	cmp	r2, #0
   49140:	streq	r7, [sp, #136]	; 0x88
   49144:	ldreq	r3, [lr, #48]	; 0x30
   49148:	moveq	r4, #1
   4914c:	movne	r4, #0
   49150:	ldreq	ip, [r3]
   49154:	cmp	r5, r4
   49158:	bls	491b0 <__assert_fail@plt+0x37dac>
   4915c:	ldr	r2, [lr, #48]	; 0x30
   49160:	lsl	r3, r4, #3
   49164:	mov	r0, ip
   49168:	mov	r1, #0
   4916c:	add	r9, r2, r3
   49170:	add	r2, r2, r3
   49174:	ldrd	r2, [r2]
   49178:	cmp	r1, r3
   4917c:	cmpeq	r0, r2
   49180:	bls	491a0 <__assert_fail@plt+0x37d9c>
   49184:	b	49e20 <__assert_fail@plt+0x38a1c>
   49188:	and	r0, r2, sl
   4918c:	and	r1, r3, fp
   49190:	ldrd	r2, [r9, #8]!
   49194:	cmp	r1, r3
   49198:	cmpeq	r0, r2
   4919c:	bhi	49e20 <__assert_fail@plt+0x38a1c>
   491a0:	add	r4, r4, #1
   491a4:	mov	ip, r2
   491a8:	cmp	r5, r4
   491ac:	bhi	49188 <__assert_fail@plt+0x37d84>
   491b0:	mov	r2, #1
   491b4:	ldr	r0, [sp, #24]
   491b8:	add	r7, r7, #1
   491bc:	add	lr, lr, #80	; 0x50
   491c0:	cmp	r7, r0
   491c4:	bne	4911c <__assert_fail@plt+0x37d18>
   491c8:	ldr	ip, [sp, #136]	; 0x88
   491cc:	cmp	r2, #0
   491d0:	str	r8, [sp, #128]	; 0x80
   491d4:	add	r5, ip, ip, lsl #2
   491d8:	lsl	r5, r5, #4
   491dc:	beq	49f80 <__assert_fail@plt+0x38b7c>
   491e0:	ldr	r0, [sp, #40]	; 0x28
   491e4:	add	r5, r0, r5
   491e8:	ldr	r3, [r5, #56]	; 0x38
   491ec:	cmp	r3, #0
   491f0:	beq	49204 <__assert_fail@plt+0x37e00>
   491f4:	ldr	r3, [r5, #48]	; 0x30
   491f8:	ldrd	r2, [r3]
   491fc:	orrs	r1, r2, r3
   49200:	bne	49ee4 <__assert_fail@plt+0x38ae0>
   49204:	ldr	r5, [sp, #128]	; 0x80
   49208:	cmp	r5, #0
   4920c:	movne	ip, #0
   49210:	strne	ip, [sp, #160]	; 0xa0
   49214:	beq	49f58 <__assert_fail@plt+0x38b54>
   49218:	mov	r2, #5
   4921c:	movw	r1, #28592	; 0x6fb0
   49220:	mov	r0, #0
   49224:	movt	r1, #7
   49228:	bl	11170 <dcgettext@plt>
   4922c:	ldr	r5, [sp, #56]	; 0x38
   49230:	ldr	r2, [r5, #8]
   49234:	mov	r1, r0
   49238:	mov	r0, #1
   4923c:	bl	1132c <__printf_chk@plt>
   49240:	ldr	r0, [sp, #56]	; 0x38
   49244:	mov	r2, #0
   49248:	mov	r3, #0
   4924c:	bl	337c0 <__assert_fail@plt+0x223bc>
   49250:	cmp	r0, #0
   49254:	bne	49f34 <__assert_fail@plt+0x38b30>
   49258:	mov	r2, #5
   4925c:	movw	r1, #44384	; 0xad60
   49260:	mov	r0, #0
   49264:	movt	r1, #7
   49268:	bl	11170 <dcgettext@plt>
   4926c:	mov	r1, r0
   49270:	mov	r0, #1
   49274:	bl	1132c <__printf_chk@plt>
   49278:	ldr	ip, [sp, #116]	; 0x74
   4927c:	ldr	r5, [sp, #136]	; 0x88
   49280:	ldr	r3, [ip, #1568]	; 0x620
   49284:	cmp	r5, r3
   49288:	bcs	49fdc <__assert_fail@plt+0x38bd8>
   4928c:	ldr	fp, [sp, #140]	; 0x8c
   49290:	add	r3, r5, r5, lsl #2
   49294:	movw	ip, #16696	; 0x4138
   49298:	movw	r5, #24696	; 0x6078
   4929c:	movt	ip, #9
   492a0:	movt	r5, #9
   492a4:	str	ip, [sp, #148]	; 0x94
   492a8:	lsl	r3, r3, #4
   492ac:	str	r5, [sp, #156]	; 0x9c
   492b0:	movw	ip, #26492	; 0x677c
   492b4:	mov	r5, #0
   492b8:	movt	ip, #9
   492bc:	str	r3, [sp, #112]	; 0x70
   492c0:	str	ip, [sp, #92]	; 0x5c
   492c4:	str	r5, [sp, #132]	; 0x84
   492c8:	ldr	ip, [sp, #128]	; 0x80
   492cc:	cmp	ip, #0
   492d0:	bne	49330 <__assert_fail@plt+0x37f2c>
   492d4:	ldr	r5, [sp, #116]	; 0x74
   492d8:	ldr	ip, [sp, #112]	; 0x70
   492dc:	ldr	r0, [r5, #1580]	; 0x62c
   492e0:	add	r0, r0, ip
   492e4:	ldr	r1, [r0, #56]	; 0x38
   492e8:	cmp	r1, #0
   492ec:	beq	49310 <__assert_fail@plt+0x37f0c>
   492f0:	ldr	r5, [sp, #160]	; 0xa0
   492f4:	ldr	r3, [sp, #128]	; 0x80
   492f8:	sub	r2, r5, #4
   492fc:	str	r3, [r2, #4]!
   49300:	add	r3, r3, #1
   49304:	ldr	r1, [r0, #56]	; 0x38
   49308:	cmp	r1, r3
   4930c:	bhi	492fc <__assert_fail@plt+0x37ef8>
   49310:	ldr	lr, [r0, #48]	; 0x30
   49314:	movw	r3, #34668	; 0x876c
   49318:	ldr	ip, [sp, #116]	; 0x74
   4931c:	movt	r3, #3
   49320:	ldr	r0, [sp, #160]	; 0xa0
   49324:	mov	r2, #4
   49328:	str	lr, [ip]
   4932c:	bl	11398 <qsort@plt>
   49330:	ldr	r5, [sp, #116]	; 0x74
   49334:	ldr	ip, [sp, #112]	; 0x70
   49338:	ldr	r4, [r5, #1580]	; 0x62c
   4933c:	add	r4, r4, ip
   49340:	ldr	r3, [r4, #56]	; 0x38
   49344:	cmp	r3, #0
   49348:	beq	49ca0 <__assert_fail@plt+0x3889c>
   4934c:	ldr	r5, [sp, #160]	; 0xa0
   49350:	mov	ip, #0
   49354:	mov	sl, fp
   49358:	str	ip, [sp, #60]	; 0x3c
   4935c:	str	r5, [sp, #88]	; 0x58
   49360:	b	494dc <__assert_fail@plt+0x380d8>
   49364:	ldr	r3, [r4, #48]	; 0x30
   49368:	ldr	r3, [r3, lr, lsl #3]
   4936c:	str	r3, [sp, #52]	; 0x34
   49370:	ldr	r3, [r4, #52]	; 0x34
   49374:	ldr	r5, [sp, #132]	; 0x84
   49378:	ldr	ip, [sp, #140]	; 0x8c
   4937c:	ldr	r3, [r3, lr, lsl #2]
   49380:	cmp	r5, #0
   49384:	ldr	r5, [sp, #52]	; 0x34
   49388:	ldr	r4, [r4, #24]
   4938c:	add	fp, ip, r5
   49390:	str	r3, [sp, #72]	; 0x48
   49394:	moveq	ip, #1
   49398:	streq	ip, [sp, #132]	; 0x84
   4939c:	beq	493ac <__assert_fail@plt+0x37fa8>
   493a0:	cmp	fp, sl
   493a4:	bhi	49c44 <__assert_fail@plt+0x38840>
   493a8:	bcc	49d18 <__assert_fail@plt+0x38914>
   493ac:	ldr	r5, [sp, #144]	; 0x90
   493b0:	ldr	ip, [sp, #52]	; 0x34
   493b4:	cmp	r5, ip
   493b8:	movwls	r1, #44560	; 0xae10
   493bc:	movls	r0, #0
   493c0:	movtls	r1, #7
   493c4:	bls	49550 <__assert_fail@plt+0x3814c>
   493c8:	ldr	r5, [sp, #152]	; 0x98
   493cc:	cmp	r5, #0
   493d0:	beq	49568 <__assert_fail@plt+0x38164>
   493d4:	ldr	ip, [sp, #116]	; 0x74
   493d8:	ldr	r5, [sp, #56]	; 0x38
   493dc:	ldr	r3, [ip, #1568]	; 0x620
   493e0:	ldr	ip, [sp, #136]	; 0x88
   493e4:	ldr	r1, [r5, #24]
   493e8:	cmp	r3, ip
   493ec:	ldr	r6, [r5, #12]
   493f0:	movwls	r1, #44616	; 0xae48
   493f4:	movls	r0, #0
   493f8:	movtls	r1, #7
   493fc:	bls	49c2c <__assert_fail@plt+0x38828>
   49400:	ldr	r5, [sp, #156]	; 0x9c
   49404:	ldr	ip, [sp, #112]	; 0x70
   49408:	ldr	r2, [r5, #1580]	; 0x62c
   4940c:	add	r3, r2, ip
   49410:	ldr	r7, [r2, ip]
   49414:	ldr	r0, [r3, #16]
   49418:	sub	r2, r7, #2
   4941c:	ldr	r5, [r3, #4]
   49420:	cmp	r2, #6
   49424:	ldr	r9, [r3, #8]
   49428:	bhi	49d64 <__assert_fail@plt+0x38960>
   4942c:	add	r6, r6, r1
   49430:	mov	r8, fp
   49434:	mov	r4, fp
   49438:	mov	r2, r0
   4943c:	mov	r3, #0
   49440:	strd	r2, [sp, #32]
   49444:	ldr	ip, [sp, #52]	; 0x34
   49448:	rsb	r2, r8, r4
   4944c:	movw	r1, #44108	; 0xac4c
   49450:	mov	r0, #1
   49454:	add	r2, r2, ip
   49458:	movt	r1, #7
   4945c:	bl	1132c <__printf_chk@plt>
   49460:	cmp	r6, r4
   49464:	bls	49540 <__assert_fail@plt+0x3813c>
   49468:	add	sl, r4, #1
   4946c:	cmp	r6, sl
   49470:	bhi	499c0 <__assert_fail@plt+0x385bc>
   49474:	rsb	r1, r4, r6
   49478:	sub	r3, r1, #1
   4947c:	cmp	r3, #7
   49480:	bls	499c4 <__assert_fail@plt+0x385c0>
   49484:	movw	r1, #44120	; 0xac58
   49488:	mov	r0, #0
   4948c:	movt	r1, #7
   49490:	mov	r2, #5
   49494:	bl	11170 <dcgettext@plt>
   49498:	mov	r1, r0
   4949c:	mov	r0, #1
   494a0:	bl	1132c <__printf_chk@plt>
   494a4:	ldr	r5, [sp, #116]	; 0x74
   494a8:	ldr	ip, [sp, #60]	; 0x3c
   494ac:	ldr	r4, [r5, #1580]	; 0x62c
   494b0:	add	ip, ip, #1
   494b4:	str	ip, [sp, #60]	; 0x3c
   494b8:	ldr	ip, [sp, #112]	; 0x70
   494bc:	ldr	r5, [sp, #88]	; 0x58
   494c0:	add	r4, r4, ip
   494c4:	add	r5, r5, #4
   494c8:	str	r5, [sp, #88]	; 0x58
   494cc:	ldr	r3, [r4, #56]	; 0x38
   494d0:	ldr	r5, [sp, #60]	; 0x3c
   494d4:	cmp	r3, r5
   494d8:	bls	49c9c <__assert_fail@plt+0x38898>
   494dc:	ldr	r5, [sp, #128]	; 0x80
   494e0:	cmp	r5, #0
   494e4:	ldr	r5, [sp, #60]	; 0x3c
   494e8:	ldreq	ip, [sp, #88]	; 0x58
   494ec:	ldrne	lr, [sp, #60]	; 0x3c
   494f0:	ldreq	lr, [ip]
   494f4:	cmp	r5, #0
   494f8:	beq	49364 <__assert_fail@plt+0x37f60>
   494fc:	ldr	ip, [sp, #128]	; 0x80
   49500:	lsl	r2, lr, #3
   49504:	ldr	r3, [r4, #48]	; 0x30
   49508:	cmp	ip, #0
   4950c:	add	r2, r3, r2
   49510:	ldreq	ip, [sp, #88]	; 0x58
   49514:	ldrne	r5, [sp, #60]	; 0x3c
   49518:	ldreq	r1, [ip, #-4]
   4951c:	subne	r1, r5, #-536870911	; 0xe0000001
   49520:	lsl	r1, r1, #3
   49524:	ldrd	r0, [r1, r3]
   49528:	ldrd	r2, [r2]
   4952c:	cmp	r1, r3
   49530:	cmpeq	r0, r2
   49534:	beq	494a4 <__assert_fail@plt+0x380a0>
   49538:	str	r2, [sp, #52]	; 0x34
   4953c:	b	49370 <__assert_fail@plt+0x37f6c>
   49540:	mov	fp, r4
   49544:	movw	r1, #44724	; 0xaeb4
   49548:	movt	r1, #7
   4954c:	mov	r0, #0
   49550:	mov	r2, #5
   49554:	mov	sl, fp
   49558:	bl	11170 <dcgettext@plt>
   4955c:	ldr	r1, [sp, #52]	; 0x34
   49560:	bl	4b9ec <warn@@Base>
   49564:	b	494a4 <__assert_fail@plt+0x380a0>
   49568:	ldr	r5, [sp, #116]	; 0x74
   4956c:	ldr	r3, [r5, #1568]	; 0x620
   49570:	ldr	r5, [sp, #56]	; 0x38
   49574:	ldr	ip, [r5, #12]
   49578:	ldr	r5, [sp, #136]	; 0x88
   4957c:	cmp	r3, r5
   49580:	ldr	r5, [sp, #56]	; 0x38
   49584:	ldr	r1, [r5, #24]
   49588:	bls	49c20 <__assert_fail@plt+0x3881c>
   4958c:	ldr	r5, [sp, #156]	; 0x9c
   49590:	ldr	r2, [r5, #1580]	; 0x62c
   49594:	ldr	r5, [sp, #112]	; 0x70
   49598:	add	r3, r2, r5
   4959c:	ldr	r7, [r2, r5]
   495a0:	ldr	r0, [r3, #16]
   495a4:	ldr	r5, [r3, #4]
   495a8:	sub	r2, r7, #2
   495ac:	ldr	r3, [r3, #8]
   495b0:	cmp	r2, #6
   495b4:	str	r5, [sp, #96]	; 0x60
   495b8:	str	r3, [sp, #100]	; 0x64
   495bc:	bhi	49de8 <__assert_fail@plt+0x389e4>
   495c0:	lsl	lr, r7, #3
   495c4:	mvn	r2, #0
   495c8:	add	r3, lr, r2
   495cc:	sub	lr, lr, #33	; 0x21
   495d0:	lsl	r2, r2, r3
   495d4:	str	r2, [sp, #124]	; 0x7c
   495d8:	ldr	r5, [sp, #124]	; 0x7c
   495dc:	mvn	r2, #1
   495e0:	ldr	r8, [sp, #148]	; 0x94
   495e4:	add	r6, ip, r1
   495e8:	orr	lr, r5, r2, lsl lr
   495ec:	str	lr, [sp, #124]	; 0x7c
   495f0:	ldr	r5, [sp, #124]	; 0x7c
   495f4:	rsb	lr, r3, #32
   495f8:	str	r4, [sp, #84]	; 0x54
   495fc:	orr	lr, r5, r2, lsr lr
   49600:	lsl	r2, r2, r3
   49604:	str	lr, [sp, #124]	; 0x7c
   49608:	lsl	r5, r7, #1
   4960c:	str	r2, [sp, #120]	; 0x78
   49610:	ldrd	r2, [sp, #120]	; 0x78
   49614:	str	fp, [sp, #76]	; 0x4c
   49618:	str	r5, [sp, #80]	; 0x50
   4961c:	mvn	r2, r2
   49620:	mvn	r3, r3
   49624:	strd	r2, [sp, #40]	; 0x28
   49628:	mov	r2, r0
   4962c:	mov	r3, #0
   49630:	strd	r2, [sp, #104]	; 0x68
   49634:	ldr	r5, [sp, #80]	; 0x50
   49638:	ldr	ip, [sp, #76]	; 0x4c
   4963c:	add	r3, fp, r5
   49640:	ldr	r5, [sp, #52]	; 0x34
   49644:	cmp	r6, r3
   49648:	rsb	r4, ip, fp
   4964c:	add	r4, r4, r5
   49650:	bcc	49544 <__assert_fail@plt+0x38140>
   49654:	movw	r1, #44108	; 0xac4c
   49658:	mov	r0, #1
   4965c:	movt	r1, #7
   49660:	mov	r2, r4
   49664:	add	r5, fp, r7
   49668:	bl	1132c <__printf_chk@plt>
   4966c:	cmp	r6, r5
   49670:	bhi	496f0 <__assert_fail@plt+0x382ec>
   49674:	cmp	r6, fp
   49678:	rsbhi	r1, fp, r6
   4967c:	bhi	496f4 <__assert_fail@plt+0x382f0>
   49680:	add	r9, r5, r7
   49684:	cmp	r9, r6
   49688:	bcc	49ff0 <__assert_fail@plt+0x38bec>
   4968c:	mov	fp, r9
   49690:	mov	r2, #0
   49694:	mov	r3, #0
   49698:	strd	r2, [sp, #24]
   4969c:	strd	r2, [sp, #32]
   496a0:	mov	r3, #0
   496a4:	ldr	r0, [sp, #56]	; 0x38
   496a8:	mov	r2, r4
   496ac:	bl	337c0 <__assert_fail@plt+0x223bc>
   496b0:	subs	r3, r0, #0
   496b4:	bne	49740 <__assert_fail@plt+0x3833c>
   496b8:	add	r2, r4, r7
   496bc:	ldr	r0, [sp, #56]	; 0x38
   496c0:	bl	337c0 <__assert_fail@plt+0x223bc>
   496c4:	cmp	r0, #0
   496c8:	bne	49740 <__assert_fail@plt+0x3833c>
   496cc:	mov	r2, #5
   496d0:	movw	r1, #44120	; 0xac58
   496d4:	movt	r1, #7
   496d8:	mov	sl, r9
   496dc:	bl	11170 <dcgettext@plt>
   496e0:	mov	r1, r0
   496e4:	mov	r0, #1
   496e8:	bl	1132c <__printf_chk@plt>
   496ec:	b	494a4 <__assert_fail@plt+0x380a0>
   496f0:	mov	r1, r7
   496f4:	sub	r3, r1, #1
   496f8:	cmp	r3, #7
   496fc:	bls	498d4 <__assert_fail@plt+0x384d0>
   49700:	mov	r0, #0
   49704:	mov	r1, #0
   49708:	strd	r0, [sp, #24]
   4970c:	add	r9, r5, r7
   49710:	cmp	r6, r9
   49714:	bhi	49868 <__assert_fail@plt+0x38464>
   49718:	cmp	r6, r5
   4971c:	rsbhi	r1, r5, r6
   49720:	bhi	4986c <__assert_fail@plt+0x38468>
   49724:	ldrd	r2, [sp, #24]
   49728:	mov	r0, #0
   4972c:	mov	r1, #0
   49730:	strd	r0, [sp, #32]
   49734:	orrs	r1, r2, r3
   49738:	mov	fp, r9
   4973c:	beq	496a0 <__assert_fail@plt+0x3829c>
   49740:	ldrd	r0, [sp, #40]	; 0x28
   49744:	ldrd	r2, [sp, #24]
   49748:	and	r2, r2, r0
   4974c:	and	r3, r3, r1
   49750:	cmp	r1, r3
   49754:	cmpeq	r0, r2
   49758:	beq	498ec <__assert_fail@plt+0x384e8>
   4975c:	add	sl, r9, #2
   49760:	cmp	r6, sl
   49764:	bcc	49d8c <__assert_fail@plt+0x38988>
   49768:	bhi	498a4 <__assert_fail@plt+0x384a0>
   4976c:	cmp	r9, r6
   49770:	bcs	4996c <__assert_fail@plt+0x38568>
   49774:	rsb	r1, r9, r6
   49778:	sub	r3, r1, #1
   4977c:	cmp	r3, #7
   49780:	movhi	r2, #0
   49784:	movhi	r3, #0
   49788:	movhi	fp, sl
   4978c:	strdhi	r2, [sp, #64]	; 0x40
   49790:	bls	498a8 <__assert_fail@plt+0x384a4>
   49794:	ldr	r0, [sp, #84]	; 0x54
   49798:	mov	r1, #0
   4979c:	mov	r5, r1
   497a0:	mov	r2, r7
   497a4:	mov	r4, r0
   497a8:	ldrd	r0, [sp, #24]
   497ac:	adds	r0, r0, r4
   497b0:	adc	r1, r1, r5
   497b4:	bl	38ad4 <__assert_fail@plt+0x276d0>
   497b8:	ldrd	r0, [sp, #32]
   497bc:	mov	r2, r7
   497c0:	adds	r0, r0, r4
   497c4:	adc	r1, r1, r5
   497c8:	bl	38ad4 <__assert_fail@plt+0x276d0>
   497cc:	ldr	r1, [r8]
   497d0:	mov	r0, #40	; 0x28
   497d4:	bl	111ac <_IO_putc@plt>
   497d8:	ldrd	r2, [sp, #64]	; 0x40
   497dc:	ldrd	r0, [sp, #104]	; 0x68
   497e0:	ldr	r5, [sp, #56]	; 0x38
   497e4:	strd	r2, [sp]
   497e8:	strd	r0, [sp, #8]
   497ec:	mov	r1, r7
   497f0:	ldr	r2, [sp, #96]	; 0x60
   497f4:	mov	r0, sl
   497f8:	ldr	r3, [sp, #100]	; 0x64
   497fc:	str	r5, [sp, #16]
   49800:	bl	3a9e8 <__assert_fail@plt+0x295e4>
   49804:	ldr	r1, [r8]
   49808:	mov	r4, r0
   4980c:	mov	r0, #41	; 0x29
   49810:	bl	111ac <_IO_putc@plt>
   49814:	adds	r4, r4, #0
   49818:	ldr	ip, [sp, #72]	; 0x48
   4981c:	movne	r4, #1
   49820:	cmp	ip, #0
   49824:	movne	r4, #0
   49828:	cmp	r4, #0
   4982c:	bne	49948 <__assert_fail@plt+0x38544>
   49830:	ldrd	r0, [sp, #24]
   49834:	ldrd	r2, [sp, #32]
   49838:	cmp	r1, r3
   4983c:	cmpeq	r0, r2
   49840:	beq	499a0 <__assert_fail@plt+0x3859c>
   49844:	ldrd	r0, [sp, #32]
   49848:	ldrd	r2, [sp, #24]
   4984c:	cmp	r1, r3
   49850:	cmpeq	r0, r2
   49854:	bcc	49980 <__assert_fail@plt+0x3857c>
   49858:	ldr	r1, [r8]
   4985c:	mov	r0, #10
   49860:	bl	111ac <_IO_putc@plt>
   49864:	b	49634 <__assert_fail@plt+0x38230>
   49868:	mov	r1, r7
   4986c:	sub	r3, r1, #1
   49870:	cmp	r3, #7
   49874:	bhi	49724 <__assert_fail@plt+0x38320>
   49878:	mov	r0, r5
   4987c:	ldr	r5, [sp, #92]	; 0x5c
   49880:	ldr	r3, [r5]
   49884:	blx	r3
   49888:	mov	r2, r0
   4988c:	mov	r3, r1
   49890:	strd	r0, [sp, #32]
   49894:	ldrd	r0, [sp, #24]
   49898:	orr	r2, r2, r0
   4989c:	orr	r3, r3, r1
   498a0:	b	49734 <__assert_fail@plt+0x38330>
   498a4:	mov	r1, #2
   498a8:	ldr	ip, [sp, #92]	; 0x5c
   498ac:	mov	r0, r9
   498b0:	ldr	r3, [ip]
   498b4:	blx	r3
   498b8:	uxtah	fp, sl, r0
   498bc:	cmp	r6, fp
   498c0:	bcc	49bac <__assert_fail@plt+0x387a8>
   498c4:	uxth	r2, r0
   498c8:	mov	r3, #0
   498cc:	strd	r2, [sp, #64]	; 0x40
   498d0:	b	49794 <__assert_fail@plt+0x38390>
   498d4:	ldr	ip, [sp, #92]	; 0x5c
   498d8:	mov	r0, fp
   498dc:	ldr	r3, [ip]
   498e0:	blx	r3
   498e4:	strd	r0, [sp, #24]
   498e8:	b	4970c <__assert_fail@plt+0x38308>
   498ec:	ldrd	r2, [sp, #32]
   498f0:	and	r2, r2, r0
   498f4:	and	r3, r3, r1
   498f8:	cmp	r1, r3
   498fc:	cmpeq	r0, r2
   49900:	beq	4975c <__assert_fail@plt+0x38358>
   49904:	ldrd	r0, [sp, #24]
   49908:	mov	r2, r7
   4990c:	bl	38ad4 <__assert_fail@plt+0x276d0>
   49910:	ldrd	r0, [sp, #32]
   49914:	mov	r2, r7
   49918:	bl	38ad4 <__assert_fail@plt+0x276d0>
   4991c:	ldr	r5, [sp, #32]
   49920:	mov	r2, #5
   49924:	movw	r1, #44924	; 0xaf7c
   49928:	mov	r0, #0
   4992c:	movt	r1, #7
   49930:	str	r5, [sp, #84]	; 0x54
   49934:	bl	11170 <dcgettext@plt>
   49938:	mov	r1, r0
   4993c:	mov	r0, #1
   49940:	bl	1132c <__printf_chk@plt>
   49944:	b	49634 <__assert_fail@plt+0x38230>
   49948:	mov	r2, #5
   4994c:	movw	r1, #37780	; 0x9394
   49950:	mov	r0, #0
   49954:	movt	r1, #7
   49958:	bl	11170 <dcgettext@plt>
   4995c:	mov	r1, r0
   49960:	mov	r0, #1
   49964:	bl	1132c <__printf_chk@plt>
   49968:	b	49830 <__assert_fail@plt+0x3842c>
   4996c:	mov	r0, #0
   49970:	mov	r1, #0
   49974:	mov	fp, sl
   49978:	strd	r0, [sp, #64]	; 0x40
   4997c:	b	49794 <__assert_fail@plt+0x38390>
   49980:	mov	r2, #5
   49984:	movw	r1, #44956	; 0xaf9c
   49988:	mov	r0, #0
   4998c:	movt	r1, #7
   49990:	bl	11170 <dcgettext@plt>
   49994:	ldr	r1, [r8]
   49998:	bl	113d4 <fputs@plt>
   4999c:	b	49858 <__assert_fail@plt+0x38454>
   499a0:	mov	r2, #5
   499a4:	movw	r1, #44940	; 0xaf8c
   499a8:	mov	r0, #0
   499ac:	movt	r1, #7
   499b0:	bl	11170 <dcgettext@plt>
   499b4:	ldr	r1, [r8]
   499b8:	bl	113d4 <fputs@plt>
   499bc:	b	49858 <__assert_fail@plt+0x38454>
   499c0:	mov	r1, #1
   499c4:	ldr	ip, [sp, #92]	; 0x5c
   499c8:	mov	r0, r4
   499cc:	ldr	r3, [ip]
   499d0:	blx	r3
   499d4:	cmp	r0, #4
   499d8:	ldrls	pc, [pc, r0, lsl #2]
   499dc:	b	49d40 <__assert_fail@plt+0x3893c>
   499e0:	andeq	r9, r4, r4, lsl #9
   499e4:	andeq	r9, r4, ip, asr #23
   499e8:	andeq	r9, r4, r0, ror #22
   499ec:	andeq	r9, r4, r0, asr sl
   499f0:	strdeq	r9, [r4], -r4
   499f4:	add	fp, r4, #5
   499f8:	cmp	r6, fp
   499fc:	bls	49df4 <__assert_fail@plt+0x389f0>
   49a00:	ldr	ip, [sp, #92]	; 0x5c
   49a04:	mov	r0, sl
   49a08:	mov	r1, #4
   49a0c:	add	sl, r4, #9
   49a10:	ldr	r3, [ip]
   49a14:	blx	r3
   49a18:	movw	r1, #44816	; 0xaf10
   49a1c:	movt	r1, #7
   49a20:	mov	r2, r0
   49a24:	mov	r0, #1
   49a28:	bl	1132c <__printf_chk@plt>
   49a2c:	cmp	r6, sl
   49a30:	bls	49a84 <__assert_fail@plt+0x38680>
   49a34:	mov	r1, #4
   49a38:	ldr	ip, [sp, #92]	; 0x5c
   49a3c:	mov	r0, fp
   49a40:	ldr	r3, [ip]
   49a44:	blx	r3
   49a48:	mov	r2, r0
   49a4c:	b	49a98 <__assert_fail@plt+0x38694>
   49a50:	mov	r0, sl
   49a54:	mov	r2, #0
   49a58:	mov	r3, r6
   49a5c:	add	r1, sp, #168	; 0xa8
   49a60:	bl	3a350 <__assert_fail@plt+0x28f4c>
   49a64:	ldr	fp, [sp, #168]	; 0xa8
   49a68:	bl	3a258 <__assert_fail@plt+0x28e54>
   49a6c:	add	fp, sl, fp
   49a70:	add	sl, fp, #4
   49a74:	cmp	r6, sl
   49a78:	bhi	49a34 <__assert_fail@plt+0x38630>
   49a7c:	cmp	r6, fp
   49a80:	bls	49a94 <__assert_fail@plt+0x38690>
   49a84:	rsb	r1, fp, r6
   49a88:	sub	r3, r1, #1
   49a8c:	cmp	r3, #7
   49a90:	bls	49a38 <__assert_fail@plt+0x38634>
   49a94:	mov	r2, #0
   49a98:	movw	r1, #44816	; 0xaf10
   49a9c:	mov	r0, #1
   49aa0:	movt	r1, #7
   49aa4:	add	fp, sl, #2
   49aa8:	bl	1132c <__printf_chk@plt>
   49aac:	cmp	r6, fp
   49ab0:	bcc	49bac <__assert_fail@plt+0x387a8>
   49ab4:	bhi	49c6c <__assert_fail@plt+0x38868>
   49ab8:	cmp	r6, sl
   49abc:	bls	49dd4 <__assert_fail@plt+0x389d0>
   49ac0:	rsb	r1, sl, r6
   49ac4:	sub	r2, r1, #1
   49ac8:	cmp	r2, #7
   49acc:	movhi	r2, #0
   49ad0:	movhi	r3, #0
   49ad4:	movhi	r4, fp
   49ad8:	strdhi	r2, [sp, #24]
   49adc:	bls	49c70 <__assert_fail@plt+0x3886c>
   49ae0:	ldr	ip, [sp, #148]	; 0x94
   49ae4:	mov	r0, #40	; 0x28
   49ae8:	ldr	r1, [ip]
   49aec:	bl	111ac <_IO_putc@plt>
   49af0:	ldrd	r2, [sp, #24]
   49af4:	ldrd	r0, [sp, #32]
   49af8:	ldr	ip, [sp, #56]	; 0x38
   49afc:	strd	r2, [sp]
   49b00:	mov	r2, r5
   49b04:	strd	r0, [sp, #8]
   49b08:	mov	r3, r9
   49b0c:	str	ip, [sp, #16]
   49b10:	mov	r1, r7
   49b14:	mov	r0, fp
   49b18:	bl	3a9e8 <__assert_fail@plt+0x295e4>
   49b1c:	ldr	ip, [sp, #148]	; 0x94
   49b20:	ldr	r1, [ip]
   49b24:	mov	sl, r0
   49b28:	mov	r0, #41	; 0x29
   49b2c:	bl	111ac <_IO_putc@plt>
   49b30:	adds	sl, sl, #0
   49b34:	ldr	ip, [sp, #72]	; 0x48
   49b38:	movne	sl, #1
   49b3c:	cmp	ip, #0
   49b40:	movne	sl, #0
   49b44:	cmp	sl, #0
   49b48:	bne	49db0 <__assert_fail@plt+0x389ac>
   49b4c:	ldr	ip, [sp, #148]	; 0x94
   49b50:	mov	r0, #10
   49b54:	ldr	r1, [ip]
   49b58:	bl	111ac <_IO_putc@plt>
   49b5c:	b	49444 <__assert_fail@plt+0x38040>
   49b60:	mov	r2, #0
   49b64:	mov	r0, sl
   49b68:	mov	r3, r6
   49b6c:	add	r1, sp, #168	; 0xa8
   49b70:	bl	3a350 <__assert_fail@plt+0x28f4c>
   49b74:	ldr	r3, [sp, #168]	; 0xa8
   49b78:	add	sl, sl, r3
   49b7c:	bl	3a258 <__assert_fail@plt+0x28e54>
   49b80:	mov	r2, #0
   49b84:	mov	r3, r6
   49b88:	mov	r0, sl
   49b8c:	add	r1, sp, #168	; 0xa8
   49b90:	bl	3a350 <__assert_fail@plt+0x28f4c>
   49b94:	ldr	r3, [sp, #168]	; 0xa8
   49b98:	add	sl, sl, r3
   49b9c:	bl	3a258 <__assert_fail@plt+0x28e54>
   49ba0:	add	fp, sl, #2
   49ba4:	cmp	r6, fp
   49ba8:	bcs	49ab4 <__assert_fail@plt+0x386b0>
   49bac:	mov	r2, #5
   49bb0:	movw	r1, #44724	; 0xaeb4
   49bb4:	mov	r0, #0
   49bb8:	movt	r1, #7
   49bbc:	bl	11170 <dcgettext@plt>
   49bc0:	ldr	r1, [sp, #52]	; 0x34
   49bc4:	bl	4b9ec <warn@@Base>
   49bc8:	b	494a4 <__assert_fail@plt+0x380a0>
   49bcc:	mov	r3, r6
   49bd0:	mov	r2, #0
   49bd4:	mov	r0, sl
   49bd8:	add	r1, sp, #168	; 0xa8
   49bdc:	bl	3a350 <__assert_fail@plt+0x28f4c>
   49be0:	ldr	ip, [sp, #168]	; 0xa8
   49be4:	add	r4, sl, ip
   49be8:	bl	3a258 <__assert_fail@plt+0x28e54>
   49bec:	movw	r1, #17408	; 0x4400
   49bf0:	mov	r0, #1
   49bf4:	movt	r1, #6
   49bf8:	bl	1132c <__printf_chk@plt>
   49bfc:	mov	r2, #5
   49c00:	movw	r1, #44784	; 0xaef0
   49c04:	mov	r0, #0
   49c08:	movt	r1, #7
   49c0c:	bl	11170 <dcgettext@plt>
   49c10:	mov	r1, r0
   49c14:	mov	r0, #1
   49c18:	bl	1132c <__printf_chk@plt>
   49c1c:	b	49444 <__assert_fail@plt+0x38040>
   49c20:	ldr	r0, [sp, #152]	; 0x98
   49c24:	movw	r1, #44864	; 0xaf40
   49c28:	movt	r1, #7
   49c2c:	mov	r2, #5
   49c30:	mov	sl, fp
   49c34:	bl	11170 <dcgettext@plt>
   49c38:	ldr	r1, [sp, #136]	; 0x88
   49c3c:	bl	4b9ec <warn@@Base>
   49c40:	b	494a4 <__assert_fail@plt+0x380a0>
   49c44:	mov	r2, #5
   49c48:	movw	r1, #44444	; 0xad9c
   49c4c:	mov	r0, #0
   49c50:	movt	r1, #7
   49c54:	bl	11170 <dcgettext@plt>
   49c58:	ldr	ip, [sp, #140]	; 0x8c
   49c5c:	ldr	r2, [sp, #52]	; 0x34
   49c60:	rsb	r1, ip, sl
   49c64:	bl	4b9ec <warn@@Base>
   49c68:	b	493ac <__assert_fail@plt+0x37fa8>
   49c6c:	mov	r1, #2
   49c70:	ldr	ip, [sp, #92]	; 0x5c
   49c74:	mov	r0, sl
   49c78:	ldr	r2, [ip]
   49c7c:	blx	r2
   49c80:	uxtah	r4, fp, r0
   49c84:	cmp	r6, r4
   49c88:	bcc	49e9c <__assert_fail@plt+0x38a98>
   49c8c:	uxth	r2, r0
   49c90:	mov	r3, #0
   49c94:	strd	r2, [sp, #24]
   49c98:	b	49ae0 <__assert_fail@plt+0x386dc>
   49c9c:	mov	fp, sl
   49ca0:	ldr	ip, [sp, #116]	; 0x74
   49ca4:	ldr	r5, [sp, #136]	; 0x88
   49ca8:	ldr	r3, [ip, #1568]	; 0x620
   49cac:	add	r5, r5, #1
   49cb0:	ldr	ip, [sp, #112]	; 0x70
   49cb4:	cmp	r3, r5
   49cb8:	str	r5, [sp, #136]	; 0x88
   49cbc:	add	ip, ip, #80	; 0x50
   49cc0:	str	ip, [sp, #112]	; 0x70
   49cc4:	bhi	492c8 <__assert_fail@plt+0x37ec4>
   49cc8:	ldr	ip, [sp, #56]	; 0x38
   49ccc:	ldr	r2, [ip, #12]
   49cd0:	ldr	r3, [ip, #24]
   49cd4:	add	r3, r2, r3
   49cd8:	cmp	fp, r3
   49cdc:	bcc	49fa8 <__assert_fail@plt+0x38ba4>
   49ce0:	ldr	ip, [sp, #148]	; 0x94
   49ce4:	mov	r0, #10
   49ce8:	ldr	r1, [ip]
   49cec:	bl	111ac <_IO_putc@plt>
   49cf0:	ldr	r0, [sp, #160]	; 0xa0
   49cf4:	bl	1111c <free@plt>
   49cf8:	mov	r0, #1
   49cfc:	ldr	r5, [sp, #164]	; 0xa4
   49d00:	ldr	r2, [sp, #172]	; 0xac
   49d04:	ldr	r3, [r5]
   49d08:	cmp	r2, r3
   49d0c:	bne	4a004 <__assert_fail@plt+0x38c00>
   49d10:	add	sp, sp, #180	; 0xb4
   49d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   49d18:	mov	r2, #5
   49d1c:	movw	r1, #44500	; 0xadd4
   49d20:	mov	r0, #0
   49d24:	movt	r1, #7
   49d28:	bl	11170 <dcgettext@plt>
   49d2c:	ldr	r5, [sp, #140]	; 0x8c
   49d30:	ldr	r2, [sp, #52]	; 0x34
   49d34:	rsb	r1, r5, sl
   49d38:	bl	4b9ec <warn@@Base>
   49d3c:	b	493ac <__assert_fail@plt+0x37fa8>
   49d40:	mov	r4, r0
   49d44:	mov	r2, #5
   49d48:	movw	r1, #44824	; 0xaf18
   49d4c:	mov	r0, #0
   49d50:	movt	r1, #7
   49d54:	bl	11170 <dcgettext@plt>
   49d58:	mov	r1, r4
   49d5c:	bl	4b9ec <warn@@Base>
   49d60:	b	494a4 <__assert_fail@plt+0x380a0>
   49d64:	movw	r1, #44668	; 0xae7c
   49d68:	mov	r0, #0
   49d6c:	movt	r1, #7
   49d70:	mov	r2, #5
   49d74:	bl	11170 <dcgettext@plt>
   49d78:	mov	r1, r7
   49d7c:	ldr	r2, [sp, #136]	; 0x88
   49d80:	mov	sl, fp
   49d84:	bl	4b9ec <warn@@Base>
   49d88:	b	494a4 <__assert_fail@plt+0x380a0>
   49d8c:	mov	r2, #5
   49d90:	movw	r1, #44724	; 0xaeb4
   49d94:	mov	r0, #0
   49d98:	movt	r1, #7
   49d9c:	bl	11170 <dcgettext@plt>
   49da0:	ldr	r1, [sp, #52]	; 0x34
   49da4:	mov	sl, r9
   49da8:	bl	4b9ec <warn@@Base>
   49dac:	b	494a4 <__assert_fail@plt+0x380a0>
   49db0:	mov	r2, #5
   49db4:	movw	r1, #37780	; 0x9394
   49db8:	mov	r0, #0
   49dbc:	movt	r1, #7
   49dc0:	bl	11170 <dcgettext@plt>
   49dc4:	mov	r1, r0
   49dc8:	mov	r0, #1
   49dcc:	bl	1132c <__printf_chk@plt>
   49dd0:	b	49b4c <__assert_fail@plt+0x38748>
   49dd4:	mov	r2, #0
   49dd8:	mov	r3, #0
   49ddc:	mov	r4, fp
   49de0:	strd	r2, [sp, #24]
   49de4:	b	49ae0 <__assert_fail@plt+0x386dc>
   49de8:	movw	r1, #44668	; 0xae7c
   49dec:	ldr	r0, [sp, #152]	; 0x98
   49df0:	b	49d6c <__assert_fail@plt+0x38968>
   49df4:	cmp	r6, sl
   49df8:	bhi	49e28 <__assert_fail@plt+0x38a24>
   49dfc:	add	sl, r4, #9
   49e00:	movw	r1, #44816	; 0xaf10
   49e04:	mov	r0, #1
   49e08:	movt	r1, #7
   49e0c:	mov	r2, #0
   49e10:	bl	1132c <__printf_chk@plt>
   49e14:	cmp	sl, r6
   49e18:	bcs	49a94 <__assert_fail@plt+0x38690>
   49e1c:	b	49a34 <__assert_fail@plt+0x38630>
   49e20:	mov	r8, #0
   49e24:	b	491b0 <__assert_fail@plt+0x37dac>
   49e28:	rsb	r1, sl, r6
   49e2c:	sub	r3, r1, #1
   49e30:	cmp	r3, #7
   49e34:	bhi	49dfc <__assert_fail@plt+0x389f8>
   49e38:	ldr	ip, [sp, #92]	; 0x5c
   49e3c:	mov	r0, sl
   49e40:	add	sl, r4, #9
   49e44:	ldr	r3, [ip]
   49e48:	blx	r3
   49e4c:	movw	r1, #44816	; 0xaf10
   49e50:	movt	r1, #7
   49e54:	mov	r2, r0
   49e58:	mov	r0, #1
   49e5c:	bl	1132c <__printf_chk@plt>
   49e60:	cmp	r6, sl
   49e64:	bls	49a94 <__assert_fail@plt+0x38690>
   49e68:	b	49a34 <__assert_fail@plt+0x38630>
   49e6c:	mov	r2, #5
   49e70:	movw	r1, #28564	; 0x6f94
   49e74:	mov	r0, r5
   49e78:	movt	r1, #7
   49e7c:	bl	11170 <dcgettext@plt>
   49e80:	ldr	ip, [sp, #56]	; 0x38
   49e84:	ldr	r2, [ip, #8]
   49e88:	mov	r1, r0
   49e8c:	mov	r0, #1
   49e90:	bl	1132c <__printf_chk@plt>
   49e94:	ldr	r0, [sp, #144]	; 0x90
   49e98:	b	49cfc <__assert_fail@plt+0x388f8>
   49e9c:	mov	r2, #5
   49ea0:	movw	r1, #44724	; 0xaeb4
   49ea4:	mov	r0, #0
   49ea8:	movt	r1, #7
   49eac:	bl	11170 <dcgettext@plt>
   49eb0:	ldr	r1, [sp, #52]	; 0x34
   49eb4:	mov	sl, fp
   49eb8:	bl	4b9ec <warn@@Base>
   49ebc:	b	494a4 <__assert_fail@plt+0x380a0>
   49ec0:	mov	r2, #5
   49ec4:	movw	r1, #43616	; 0xaa60
   49ec8:	movt	r1, #7
   49ecc:	bl	11170 <dcgettext@plt>
   49ed0:	ldr	r5, [sp, #56]	; 0x38
   49ed4:	ldr	r1, [r5, #8]
   49ed8:	bl	4b9ec <warn@@Base>
   49edc:	mov	r0, r4
   49ee0:	b	49cfc <__assert_fail@plt+0x388f8>
   49ee4:	mov	r2, #5
   49ee8:	movw	r1, #44256	; 0xace0
   49eec:	mov	r0, #0
   49ef0:	movt	r1, #7
   49ef4:	bl	11170 <dcgettext@plt>
   49ef8:	ldr	r3, [r5, #48]	; 0x30
   49efc:	ldr	ip, [sp, #56]	; 0x38
   49f00:	mov	r1, #0
   49f04:	ldrd	r2, [r3]
   49f08:	ldr	r5, [ip, #8]
   49f0c:	str	r1, [sp]
   49f10:	mov	r4, r0
   49f14:	movw	r0, #18952	; 0x4a08
   49f18:	movt	r0, #6
   49f1c:	bl	389e0 <__assert_fail@plt+0x275dc>
   49f20:	mov	r1, r5
   49f24:	mov	r2, r0
   49f28:	mov	r0, r4
   49f2c:	bl	4b9ec <warn@@Base>
   49f30:	b	49204 <__assert_fail@plt+0x37e00>
   49f34:	mov	r2, #5
   49f38:	movw	r1, #44300	; 0xad0c
   49f3c:	mov	r0, #0
   49f40:	movt	r1, #7
   49f44:	bl	11170 <dcgettext@plt>
   49f48:	mov	r1, r0
   49f4c:	mov	r0, #1
   49f50:	bl	1132c <__printf_chk@plt>
   49f54:	b	49258 <__assert_fail@plt+0x37e54>
   49f58:	mov	r0, r6
   49f5c:	mov	r1, #4
   49f60:	bl	3f77c <__assert_fail@plt+0x2e378>
   49f64:	str	r0, [sp, #160]	; 0xa0
   49f68:	b	49218 <__assert_fail@plt+0x37e14>
   49f6c:	mov	r5, r9
   49f70:	mov	r6, r9
   49f74:	mov	ip, #1
   49f78:	str	r9, [sp, #136]	; 0x88
   49f7c:	str	ip, [sp, #128]	; 0x80
   49f80:	mov	r2, #5
   49f84:	movw	r1, #44212	; 0xacb4
   49f88:	mov	r0, #0
   49f8c:	movt	r1, #7
   49f90:	bl	11170 <dcgettext@plt>
   49f94:	bl	4b2b0 <error@@Base>
   49f98:	ldr	lr, [sp, #116]	; 0x74
   49f9c:	ldr	lr, [lr, #1580]	; 0x62c
   49fa0:	str	lr, [sp, #40]	; 0x28
   49fa4:	b	491e0 <__assert_fail@plt+0x37ddc>
   49fa8:	mov	r2, #5
   49fac:	movw	r1, #44972	; 0xafac
   49fb0:	mov	r0, #0
   49fb4:	movt	r1, #7
   49fb8:	bl	11170 <dcgettext@plt>
   49fbc:	ldr	r5, [sp, #56]	; 0x38
   49fc0:	ldr	r1, [r5, #12]
   49fc4:	ldr	r3, [r5, #24]
   49fc8:	ldr	r2, [r5, #8]
   49fcc:	add	r1, r1, r3
   49fd0:	rsb	r1, fp, r1
   49fd4:	bl	4b9ec <warn@@Base>
   49fd8:	b	49ce0 <__assert_fail@plt+0x388dc>
   49fdc:	movw	r5, #16696	; 0x4138
   49fe0:	ldr	fp, [sp, #140]	; 0x8c
   49fe4:	movt	r5, #9
   49fe8:	str	r5, [sp, #148]	; 0x94
   49fec:	b	49cc8 <__assert_fail@plt+0x388c4>
   49ff0:	mov	r2, #0
   49ff4:	mov	r3, #0
   49ff8:	mov	r1, r7
   49ffc:	strd	r2, [sp, #24]
   4a000:	b	4986c <__assert_fail@plt+0x38468>
   4a004:	bl	1117c <__stack_chk_fail@plt>
   4a008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a00c:	sub	sp, sp, #68	; 0x44
   4a010:	str	r0, [sp, #60]	; 0x3c
   4a014:	mov	r0, r1
   4a018:	ldr	r6, [sp, #60]	; 0x3c
   4a01c:	ldr	r7, [sp, #60]	; 0x3c
   4a020:	str	r2, [sp, #44]	; 0x2c
   4a024:	ldr	r6, [r6, #12]
   4a028:	ldr	r3, [r7, #24]
   4a02c:	str	r6, [sp, #40]	; 0x28
   4a030:	add	r8, r6, r3
   4a034:	bl	4860c <__assert_fail@plt+0x37208>
   4a038:	mov	r2, #5
   4a03c:	movw	r1, #28592	; 0x6fb0
   4a040:	mov	r0, #0
   4a044:	movt	r1, #7
   4a048:	bl	11170 <dcgettext@plt>
   4a04c:	ldr	r2, [r7, #8]
   4a050:	mov	r1, r0
   4a054:	mov	r0, #1
   4a058:	bl	1132c <__printf_chk@plt>
   4a05c:	cmp	r6, r8
   4a060:	bcs	4a3d0 <__assert_fail@plt+0x38fcc>
   4a064:	movw	sl, #26492	; 0x677c
   4a068:	movt	sl, #9
   4a06c:	movw	r6, #24696	; 0x6078
   4a070:	movt	r6, #9
   4a074:	str	r6, [sp, #48]	; 0x30
   4a078:	ldr	r7, [sp, #40]	; 0x28
   4a07c:	add	r6, r7, #4
   4a080:	cmp	r8, r6
   4a084:	bhi	4a0e8 <__assert_fail@plt+0x38ce4>
   4a088:	cmp	r7, r8
   4a08c:	bcs	4a0a0 <__assert_fail@plt+0x38c9c>
   4a090:	rsb	r1, r7, r8
   4a094:	sub	r3, r1, #1
   4a098:	cmp	r3, #7
   4a09c:	bls	4a0ec <__assert_fail@plt+0x38ce8>
   4a0a0:	mov	r4, r6
   4a0a4:	mov	r1, #4
   4a0a8:	add	fp, r6, #2
   4a0ac:	cmp	r8, fp
   4a0b0:	bhi	4a664 <__assert_fail@plt+0x39260>
   4a0b4:	add	r3, fp, r1
   4a0b8:	mov	r6, #0
   4a0bc:	cmp	r8, r3
   4a0c0:	bls	4a6b4 <__assert_fail@plt+0x392b0>
   4a0c4:	mov	r7, #0
   4a0c8:	str	r6, [sp, #28]
   4a0cc:	str	r6, [sp, #52]	; 0x34
   4a0d0:	mov	r9, r1
   4a0d4:	mov	r6, #0
   4a0d8:	strd	r6, [sp, #32]
   4a0dc:	movw	r7, #65534	; 0xfffe
   4a0e0:	str	r7, [sp, #56]	; 0x38
   4a0e4:	b	4a220 <__assert_fail@plt+0x38e1c>
   4a0e8:	mov	r1, #4
   4a0ec:	ldr	r3, [sl]
   4a0f0:	movw	r7, #26492	; 0x677c
   4a0f4:	ldr	r0, [sp, #40]	; 0x28
   4a0f8:	movt	r7, #9
   4a0fc:	blx	r3
   4a100:	mvn	r2, #0
   4a104:	mov	r3, #0
   4a108:	mov	r4, r0
   4a10c:	mov	r5, r1
   4a110:	cmp	r5, r3
   4a114:	cmpeq	r4, r2
   4a118:	bne	4a658 <__assert_fail@plt+0x39254>
   4a11c:	ldr	lr, [sp, #40]	; 0x28
   4a120:	add	r3, lr, #12
   4a124:	cmp	r8, r3
   4a128:	bhi	4a154 <__assert_fail@plt+0x38d50>
   4a12c:	cmp	r8, r6
   4a130:	bls	4a144 <__assert_fail@plt+0x38d40>
   4a134:	rsb	r1, r6, r8
   4a138:	sub	r2, r1, #1
   4a13c:	cmp	r2, #7
   4a140:	bls	4a158 <__assert_fail@plt+0x38d54>
   4a144:	mov	r6, r3
   4a148:	mov	r1, #8
   4a14c:	mov	r4, r3
   4a150:	b	4a0a8 <__assert_fail@plt+0x38ca4>
   4a154:	mov	r1, #8
   4a158:	mov	r0, r6
   4a15c:	ldr	r2, [sl]
   4a160:	mov	r6, r3
   4a164:	blx	r2
   4a168:	mov	r9, #8
   4a16c:	mov	ip, #12
   4a170:	mov	r4, r0
   4a174:	mov	r5, r1
   4a178:	add	fp, r6, #2
   4a17c:	cmp	r8, fp
   4a180:	bhi	4a1cc <__assert_fail@plt+0x38dc8>
   4a184:	cmp	r6, r8
   4a188:	bcc	4a604 <__assert_fail@plt+0x39200>
   4a18c:	add	r3, fp, r9
   4a190:	strd	r4, [sp, #32]
   4a194:	cmp	r8, r3
   4a198:	bhi	4a688 <__assert_fail@plt+0x39284>
   4a19c:	mov	r6, #0
   4a1a0:	str	r6, [sp, #52]	; 0x34
   4a1a4:	ldr	r6, [sp, #32]
   4a1a8:	add	ip, ip, r4
   4a1ac:	ldr	r7, [sp, #40]	; 0x28
   4a1b0:	mov	fp, #0
   4a1b4:	mov	r0, fp
   4a1b8:	add	ip, r7, ip
   4a1bc:	str	r6, [sp, #28]
   4a1c0:	movw	r7, #65534	; 0xfffe
   4a1c4:	str	r7, [sp, #56]	; 0x38
   4a1c8:	b	4a238 <__assert_fail@plt+0x38e34>
   4a1cc:	strd	r4, [sp, #32]
   4a1d0:	add	ip, ip, r4
   4a1d4:	ldr	lr, [sp, #40]	; 0x28
   4a1d8:	ldr	r3, [sp, #32]
   4a1dc:	add	r4, lr, ip
   4a1e0:	str	r3, [sp, #28]
   4a1e4:	mov	r1, #2
   4a1e8:	ldr	r2, [r7]
   4a1ec:	add	r3, fp, r9
   4a1f0:	mov	r0, r6
   4a1f4:	str	r3, [sp, #24]
   4a1f8:	blx	r2
   4a1fc:	ldr	r3, [sp, #24]
   4a200:	cmp	r8, r3
   4a204:	uxth	r0, r0
   4a208:	str	r0, [sp, #52]	; 0x34
   4a20c:	sub	r2, r0, #2
   4a210:	uxth	r2, r2
   4a214:	str	r2, [sp, #56]	; 0x38
   4a218:	bls	4a410 <__assert_fail@plt+0x3900c>
   4a21c:	mov	r1, r9
   4a220:	sub	r2, r1, #1
   4a224:	cmp	r2, #7
   4a228:	bls	4a428 <__assert_fail@plt+0x39024>
   4a22c:	mov	fp, #0
   4a230:	mov	ip, r4
   4a234:	mov	r0, fp
   4a238:	ldr	r7, [sp, #48]	; 0x30
   4a23c:	ldr	lr, [r7, #1568]	; 0x620
   4a240:	sub	r2, lr, #1
   4a244:	cmn	r2, #3
   4a248:	bhi	4a2bc <__assert_fail@plt+0x38eb8>
   4a24c:	movw	r1, #24696	; 0x6078
   4a250:	movt	r1, #9
   4a254:	mov	r6, r0
   4a258:	mov	r7, #0
   4a25c:	ldr	r2, [r1, #1580]	; 0x62c
   4a260:	mov	r1, #0
   4a264:	mov	r4, r1
   4a268:	ldrd	r0, [r2, #16]
   4a26c:	add	r4, r4, #1
   4a270:	add	r2, r2, #80	; 0x50
   4a274:	cmp	r1, r7
   4a278:	cmpeq	r0, r6
   4a27c:	beq	4a2bc <__assert_fail@plt+0x38eb8>
   4a280:	cmp	r4, lr
   4a284:	bne	4a268 <__assert_fail@plt+0x38e64>
   4a288:	mov	r2, #5
   4a28c:	movw	r1, #45404	; 0xb15c
   4a290:	mov	r0, #0
   4a294:	movt	r1, #7
   4a298:	str	r3, [sp, #24]
   4a29c:	str	ip, [sp, #20]
   4a2a0:	bl	11170 <dcgettext@plt>
   4a2a4:	ldr	r6, [sp, #60]	; 0x3c
   4a2a8:	mov	r1, fp
   4a2ac:	ldr	r2, [r6, #8]
   4a2b0:	bl	4b9ec <warn@@Base>
   4a2b4:	ldr	r3, [sp, #24]
   4a2b8:	ldr	ip, [sp, #20]
   4a2bc:	add	r4, r3, r9
   4a2c0:	cmp	r8, r4
   4a2c4:	bhi	4a3e4 <__assert_fail@plt+0x38fe0>
   4a2c8:	cmp	r8, r3
   4a2cc:	rsbhi	r1, r3, r8
   4a2d0:	bhi	4a3e8 <__assert_fail@plt+0x38fe4>
   4a2d4:	mov	r5, #0
   4a2d8:	ldrd	r6, [sp, #32]
   4a2dc:	cmp	r6, #0
   4a2e0:	sbcs	r7, r7, #0
   4a2e4:	blt	4a2f8 <__assert_fail@plt+0x38ef4>
   4a2e8:	ldr	r6, [sp, #40]	; 0x28
   4a2ec:	cmp	r6, ip
   4a2f0:	strls	ip, [sp, #40]	; 0x28
   4a2f4:	bls	4a318 <__assert_fail@plt+0x38f14>
   4a2f8:	mov	r2, #5
   4a2fc:	movw	r1, #45028	; 0xafe4
   4a300:	mov	r0, #0
   4a304:	movt	r1, #7
   4a308:	bl	11170 <dcgettext@plt>
   4a30c:	ldr	r1, [sp, #28]
   4a310:	bl	4b9ec <warn@@Base>
   4a314:	str	r8, [sp, #40]	; 0x28
   4a318:	mov	r2, #5
   4a31c:	movw	r1, #45068	; 0xb00c
   4a320:	mov	r0, #0
   4a324:	movt	r1, #7
   4a328:	bl	11170 <dcgettext@plt>
   4a32c:	ldr	r2, [sp, #28]
   4a330:	mov	r1, r0
   4a334:	mov	r0, #1
   4a338:	bl	1132c <__printf_chk@plt>
   4a33c:	mov	r2, #5
   4a340:	movw	r1, #45112	; 0xb038
   4a344:	mov	r0, #0
   4a348:	movt	r1, #7
   4a34c:	bl	11170 <dcgettext@plt>
   4a350:	ldr	r2, [sp, #52]	; 0x34
   4a354:	mov	r1, r0
   4a358:	mov	r0, #1
   4a35c:	bl	1132c <__printf_chk@plt>
   4a360:	mov	r2, #5
   4a364:	movw	r1, #45156	; 0xb064
   4a368:	mov	r0, #0
   4a36c:	movt	r1, #7
   4a370:	bl	11170 <dcgettext@plt>
   4a374:	mov	r2, fp
   4a378:	mov	r1, r0
   4a37c:	mov	r0, #1
   4a380:	bl	1132c <__printf_chk@plt>
   4a384:	mov	r2, #5
   4a388:	movw	r1, #45204	; 0xb094
   4a38c:	mov	r0, #0
   4a390:	movt	r1, #7
   4a394:	bl	11170 <dcgettext@plt>
   4a398:	mov	r2, r5
   4a39c:	mov	r1, r0
   4a3a0:	mov	r0, #1
   4a3a4:	bl	1132c <__printf_chk@plt>
   4a3a8:	ldr	r7, [sp, #56]	; 0x38
   4a3ac:	cmp	r7, #1
   4a3b0:	bls	4a44c <__assert_fail@plt+0x39048>
   4a3b4:	ldr	r6, [sp, #48]	; 0x30
   4a3b8:	ldr	r0, [r6, #1704]	; 0x6a8
   4a3bc:	cmp	r0, #0
   4a3c0:	beq	4a630 <__assert_fail@plt+0x3922c>
   4a3c4:	ldr	r6, [sp, #40]	; 0x28
   4a3c8:	cmp	r6, r8
   4a3cc:	bcc	4a078 <__assert_fail@plt+0x38c74>
   4a3d0:	mov	r0, #10
   4a3d4:	bl	112fc <putchar@plt>
   4a3d8:	mov	r0, #1
   4a3dc:	add	sp, sp, #68	; 0x44
   4a3e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4a3e4:	mov	r1, r9
   4a3e8:	sub	r2, r1, #1
   4a3ec:	cmp	r2, #7
   4a3f0:	bhi	4a2d4 <__assert_fail@plt+0x38ed0>
   4a3f4:	mov	r0, r3
   4a3f8:	str	ip, [sp, #20]
   4a3fc:	ldr	r3, [sl]
   4a400:	blx	r3
   4a404:	ldr	ip, [sp, #20]
   4a408:	mov	r5, r0
   4a40c:	b	4a2d8 <__assert_fail@plt+0x38ed4>
   4a410:	cmp	fp, r8
   4a414:	rsbcc	r1, fp, r8
   4a418:	bcs	4a22c <__assert_fail@plt+0x38e28>
   4a41c:	sub	r2, r1, #1
   4a420:	cmp	r2, #7
   4a424:	bhi	4a22c <__assert_fail@plt+0x38e28>
   4a428:	mov	r0, fp
   4a42c:	str	r3, [sp, #24]
   4a430:	ldr	r2, [sl]
   4a434:	str	r4, [sp, #20]
   4a438:	blx	r2
   4a43c:	ldr	r3, [sp, #24]
   4a440:	ldr	ip, [sp, #20]
   4a444:	mov	fp, r0
   4a448:	b	4a238 <__assert_fail@plt+0x38e34>
   4a44c:	ldr	r6, [sp, #44]	; 0x2c
   4a450:	mov	r2, #5
   4a454:	movw	r7, #26168	; 0x6638
   4a458:	movt	r7, #7
   4a45c:	cmp	r6, #0
   4a460:	movwne	r1, #45304	; 0xb0f8
   4a464:	movweq	r1, #45340	; 0xb11c
   4a468:	movtne	r1, #7
   4a46c:	movteq	r1, #7
   4a470:	movne	r0, #0
   4a474:	ldreq	r0, [sp, #44]	; 0x2c
   4a478:	bl	11170 <dcgettext@plt>
   4a47c:	mov	r1, r0
   4a480:	mov	r0, #1
   4a484:	bl	1132c <__printf_chk@plt>
   4a488:	str	r9, [sp, #28]
   4a48c:	ldr	r6, [sp, #28]
   4a490:	mov	r0, r4
   4a494:	str	r7, [sp, #32]
   4a498:	add	r9, r0, r6
   4a49c:	cmp	r8, r9
   4a4a0:	bhi	4a584 <__assert_fail@plt+0x39180>
   4a4a4:	cmp	r0, r8
   4a4a8:	bcs	4a3c4 <__assert_fail@plt+0x38fc0>
   4a4ac:	rsb	r1, r0, r8
   4a4b0:	sub	r3, r1, #1
   4a4b4:	cmp	r3, #7
   4a4b8:	bhi	4a3c4 <__assert_fail@plt+0x38fc0>
   4a4bc:	ldr	r3, [sl]
   4a4c0:	blx	r3
   4a4c4:	mov	r4, r0
   4a4c8:	mov	r5, r1
   4a4cc:	orrs	r7, r4, r5
   4a4d0:	beq	4a3c4 <__assert_fail@plt+0x38fc0>
   4a4d4:	cmp	r8, r9
   4a4d8:	bls	4a3c4 <__assert_fail@plt+0x38fc0>
   4a4dc:	ldr	r6, [sp, #44]	; 0x2c
   4a4e0:	rsb	r1, r9, r8
   4a4e4:	sub	r3, r1, #1
   4a4e8:	cmp	r6, #0
   4a4ec:	mov	r6, r3
   4a4f0:	beq	4a5e4 <__assert_fail@plt+0x391e0>
   4a4f4:	add	fp, r9, #1
   4a4f8:	cmp	r8, fp
   4a4fc:	bhi	4a58c <__assert_fail@plt+0x39188>
   4a500:	cmp	r3, #7
   4a504:	bls	4a590 <__assert_fail@plt+0x3918c>
   4a508:	movw	r1, #45480	; 0xb1a8
   4a50c:	mov	r0, #0
   4a510:	movt	r1, #7
   4a514:	mov	r2, #5
   4a518:	subs	r6, r3, #1
   4a51c:	bl	11170 <dcgettext@plt>
   4a520:	mov	r5, r0
   4a524:	movw	r1, #17768	; 0x4568
   4a528:	mov	r0, #0
   4a52c:	movt	r1, #6
   4a530:	mov	r2, #5
   4a534:	bl	11170 <dcgettext@plt>
   4a538:	mov	r3, r0
   4a53c:	movw	r1, #45360	; 0xb130
   4a540:	str	r5, [sp]
   4a544:	mov	r2, r4
   4a548:	stmib	sp, {r6, fp}
   4a54c:	mov	r0, #1
   4a550:	movt	r1, #7
   4a554:	bl	1132c <__printf_chk@plt>
   4a558:	mov	r1, r6
   4a55c:	mov	r0, fp
   4a560:	bl	11350 <strnlen@plt>
   4a564:	add	r0, r0, #1
   4a568:	add	r0, fp, r0
   4a56c:	cmp	r8, r0
   4a570:	bls	4a3c4 <__assert_fail@plt+0x38fc0>
   4a574:	ldr	r6, [sp, #28]
   4a578:	add	r9, r0, r6
   4a57c:	cmp	r8, r9
   4a580:	bls	4a4a4 <__assert_fail@plt+0x390a0>
   4a584:	ldr	r1, [sp, #28]
   4a588:	b	4a4b0 <__assert_fail@plt+0x390ac>
   4a58c:	mov	r1, #1
   4a590:	mov	r0, r9
   4a594:	ldr	r3, [sl]
   4a598:	subs	r6, r6, #1
   4a59c:	blx	r3
   4a5a0:	ldr	lr, [sp, #32]
   4a5a4:	mov	r2, #5
   4a5a8:	lsl	r9, r0, #24
   4a5ac:	mov	r0, #0
   4a5b0:	ubfx	r1, r9, #28, #3
   4a5b4:	ldr	r1, [lr, r1, lsl #2]
   4a5b8:	bl	11170 <dcgettext@plt>
   4a5bc:	cmp	r9, #0
   4a5c0:	mov	r5, r0
   4a5c4:	bge	4a524 <__assert_fail@plt+0x39120>
   4a5c8:	movw	r1, #31584	; 0x7b60
   4a5cc:	mov	r0, #0
   4a5d0:	movt	r1, #7
   4a5d4:	mov	r2, #5
   4a5d8:	bl	11170 <dcgettext@plt>
   4a5dc:	mov	r3, r0
   4a5e0:	b	4a53c <__assert_fail@plt+0x39138>
   4a5e4:	str	r9, [sp]
   4a5e8:	mov	r2, r4
   4a5ec:	movw	r1, #45388	; 0xb14c
   4a5f0:	mov	r0, #1
   4a5f4:	movt	r1, #7
   4a5f8:	mov	fp, r9
   4a5fc:	bl	1132c <__printf_chk@plt>
   4a600:	b	4a558 <__assert_fail@plt+0x39154>
   4a604:	rsb	r1, r6, r8
   4a608:	sub	r3, r1, #1
   4a60c:	cmp	r3, #7
   4a610:	bhi	4a18c <__assert_fail@plt+0x38d88>
   4a614:	strd	r4, [sp, #32]
   4a618:	add	ip, ip, r4
   4a61c:	ldr	r3, [sp, #32]
   4a620:	ldr	r2, [sp, #40]	; 0x28
   4a624:	str	r3, [sp, #28]
   4a628:	add	r4, r2, ip
   4a62c:	b	4a1e8 <__assert_fail@plt+0x38de4>
   4a630:	mov	r2, #5
   4a634:	movw	r1, #45248	; 0xb0c0
   4a638:	movw	r7, #24696	; 0x6078
   4a63c:	movt	r1, #7
   4a640:	movt	r7, #9
   4a644:	bl	11170 <dcgettext@plt>
   4a648:	bl	4b9ec <warn@@Base>
   4a64c:	mov	r3, #1
   4a650:	str	r3, [r7, #1704]	; 0x6a8
   4a654:	b	4a3c4 <__assert_fail@plt+0x38fc0>
   4a658:	mov	ip, #4
   4a65c:	mov	r9, ip
   4a660:	b	4a178 <__assert_fail@plt+0x38d74>
   4a664:	mov	r3, #0
   4a668:	movw	r7, #26492	; 0x677c
   4a66c:	str	r3, [sp, #28]
   4a670:	mov	r2, #0
   4a674:	mov	r3, #0
   4a678:	mov	r9, r1
   4a67c:	movt	r7, #9
   4a680:	strd	r2, [sp, #32]
   4a684:	b	4a1e4 <__assert_fail@plt+0x38de0>
   4a688:	ldr	r7, [sp, #32]
   4a68c:	add	r4, ip, r4
   4a690:	ldr	r6, [sp, #40]	; 0x28
   4a694:	mov	r1, r9
   4a698:	add	r4, r6, r4
   4a69c:	str	r7, [sp, #28]
   4a6a0:	movw	r6, #65534	; 0xfffe
   4a6a4:	mov	r7, #0
   4a6a8:	str	r6, [sp, #56]	; 0x38
   4a6ac:	str	r7, [sp, #52]	; 0x34
   4a6b0:	b	4a220 <__assert_fail@plt+0x38e1c>
   4a6b4:	mov	r7, #0
   4a6b8:	strd	r6, [sp, #32]
   4a6bc:	mov	r7, #0
   4a6c0:	movw	r6, #65534	; 0xfffe
   4a6c4:	str	r7, [sp, #28]
   4a6c8:	mov	ip, r4
   4a6cc:	mov	r9, r1
   4a6d0:	ldr	r0, [sp, #32]
   4a6d4:	str	r7, [sp, #52]	; 0x34
   4a6d8:	mov	fp, r7
   4a6dc:	str	r6, [sp, #56]	; 0x38
   4a6e0:	b	4a238 <__assert_fail@plt+0x38e34>
   4a6e4:	mov	r2, #1
   4a6e8:	b	4a008 <__assert_fail@plt+0x38c04>
   4a6ec:	mov	r2, #0
   4a6f0:	b	4a008 <__assert_fail@plt+0x38c04>
   4a6f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4a6f8:	sub	sp, sp, #36	; 0x24
   4a6fc:	ldr	r6, [r0, #12]
   4a700:	mov	r4, r1
   4a704:	ldr	r3, [r0, #24]
   4a708:	mov	r2, #5
   4a70c:	str	r0, [sp, #28]
   4a710:	movw	r1, #28592	; 0x6fb0
   4a714:	mov	r0, #0
   4a718:	movt	r1, #7
   4a71c:	add	sl, r6, r3
   4a720:	bl	11170 <dcgettext@plt>
   4a724:	ldr	r3, [sp, #28]
   4a728:	ldr	r2, [r3, #8]
   4a72c:	mov	r1, r0
   4a730:	mov	r0, #1
   4a734:	bl	1132c <__printf_chk@plt>
   4a738:	mov	r0, r4
   4a73c:	bl	4860c <__assert_fail@plt+0x37208>
   4a740:	cmp	r6, sl
   4a744:	bcs	4abd8 <__assert_fail@plt+0x397d4>
   4a748:	mov	fp, sl
   4a74c:	movw	ip, #24696	; 0x6078
   4a750:	movw	r3, #26492	; 0x677c
   4a754:	movt	ip, #9
   4a758:	movt	r3, #9
   4a75c:	str	ip, [sp, #24]
   4a760:	str	r3, [sp, #20]
   4a764:	add	r8, r6, #4
   4a768:	cmp	fp, r8
   4a76c:	bhi	4aa48 <__assert_fail@plt+0x39644>
   4a770:	cmp	fp, r6
   4a774:	bls	4a788 <__assert_fail@plt+0x39384>
   4a778:	rsb	r1, r6, fp
   4a77c:	sub	r3, r1, #1
   4a780:	cmp	r3, #7
   4a784:	bls	4aa4c <__assert_fail@plt+0x39648>
   4a788:	mov	r9, #4
   4a78c:	mov	r5, r9
   4a790:	add	r4, r8, #2
   4a794:	cmp	r4, fp
   4a798:	bcc	4ab0c <__assert_fail@plt+0x39708>
   4a79c:	add	r7, r4, r5
   4a7a0:	cmp	fp, r7
   4a7a4:	bls	4adc0 <__assert_fail@plt+0x399bc>
   4a7a8:	movw	r3, #65534	; 0xfffe
   4a7ac:	mov	r0, #0
   4a7b0:	str	r3, [sp, #16]
   4a7b4:	mov	r1, #0
   4a7b8:	mov	r3, #0
   4a7bc:	strd	r0, [sp]
   4a7c0:	str	r3, [sp, #12]
   4a7c4:	sub	r3, r5, #1
   4a7c8:	cmp	r3, #7
   4a7cc:	bls	4ab68 <__assert_fail@plt+0x39764>
   4a7d0:	mov	r8, #0
   4a7d4:	ldr	r3, [sp, #24]
   4a7d8:	ldr	ip, [r3, #1568]	; 0x620
   4a7dc:	sub	r3, ip, #1
   4a7e0:	cmn	r3, #3
   4a7e4:	bhi	4a844 <__assert_fail@plt+0x39440>
   4a7e8:	movw	r0, #24696	; 0x6078
   4a7ec:	movt	r0, #9
   4a7f0:	mov	r2, r8
   4a7f4:	mov	r3, #0
   4a7f8:	ldr	r1, [r0, #1580]	; 0x62c
   4a7fc:	mov	r0, #0
   4a800:	ldrd	r4, [r1, #16]
   4a804:	add	r0, r0, #1
   4a808:	add	r1, r1, #80	; 0x50
   4a80c:	cmp	r5, r3
   4a810:	cmpeq	r4, r2
   4a814:	beq	4a844 <__assert_fail@plt+0x39440>
   4a818:	cmp	r0, ip
   4a81c:	bne	4a800 <__assert_fail@plt+0x393fc>
   4a820:	mov	r2, #5
   4a824:	movw	r1, #45404	; 0xb15c
   4a828:	mov	r0, #0
   4a82c:	movt	r1, #7
   4a830:	bl	11170 <dcgettext@plt>
   4a834:	ldr	ip, [sp, #28]
   4a838:	mov	r1, r8
   4a83c:	ldr	r2, [ip, #8]
   4a840:	bl	4b9ec <warn@@Base>
   4a844:	add	r4, r7, #1
   4a848:	cmp	fp, r4
   4a84c:	bls	4ab84 <__assert_fail@plt+0x39780>
   4a850:	ldr	ip, [sp, #20]
   4a854:	mov	r0, r7
   4a858:	mov	r1, #1
   4a85c:	add	sl, r7, #2
   4a860:	movw	r7, #26492	; 0x677c
   4a864:	movt	r7, #9
   4a868:	ldr	r3, [ip]
   4a86c:	blx	r3
   4a870:	cmp	fp, sl
   4a874:	uxtb	r5, r0
   4a878:	bhi	4abac <__assert_fail@plt+0x397a8>
   4a87c:	rsb	r1, r4, fp
   4a880:	sub	r3, r1, #1
   4a884:	cmp	r3, #7
   4a888:	bls	4abb0 <__assert_fail@plt+0x397ac>
   4a88c:	mov	r4, #0
   4a890:	ldr	r3, [sp, #16]
   4a894:	cmp	r3, #1
   4a898:	bhi	4abcc <__assert_fail@plt+0x397c8>
   4a89c:	mov	r2, #5
   4a8a0:	movw	r1, #45544	; 0xb1e8
   4a8a4:	mov	r0, #0
   4a8a8:	movt	r1, #7
   4a8ac:	bl	11170 <dcgettext@plt>
   4a8b0:	ldr	r2, [sp]
   4a8b4:	mov	r7, r2
   4a8b8:	mov	r1, r0
   4a8bc:	mov	r0, #1
   4a8c0:	bl	1132c <__printf_chk@plt>
   4a8c4:	mov	r2, #5
   4a8c8:	movw	r1, #45580	; 0xb20c
   4a8cc:	mov	r0, #0
   4a8d0:	movt	r1, #7
   4a8d4:	bl	11170 <dcgettext@plt>
   4a8d8:	ldr	r2, [sp, #12]
   4a8dc:	mov	r1, r0
   4a8e0:	mov	r0, #1
   4a8e4:	bl	1132c <__printf_chk@plt>
   4a8e8:	mov	r2, #5
   4a8ec:	movw	r1, #45612	; 0xb22c
   4a8f0:	mov	r0, #0
   4a8f4:	movt	r1, #7
   4a8f8:	bl	11170 <dcgettext@plt>
   4a8fc:	mov	r2, r8
   4a900:	mov	r1, r0
   4a904:	mov	r0, #1
   4a908:	bl	1132c <__printf_chk@plt>
   4a90c:	mov	r2, #5
   4a910:	movw	r1, #45648	; 0xb250
   4a914:	mov	r0, #0
   4a918:	movt	r1, #7
   4a91c:	bl	11170 <dcgettext@plt>
   4a920:	mov	r2, r5
   4a924:	mov	r1, r0
   4a928:	mov	r0, #1
   4a92c:	bl	1132c <__printf_chk@plt>
   4a930:	mov	r2, #5
   4a934:	movw	r1, #45680	; 0xb270
   4a938:	mov	r0, #0
   4a93c:	movt	r1, #7
   4a940:	bl	11170 <dcgettext@plt>
   4a944:	mov	r2, r4
   4a948:	add	r4, r5, r4
   4a94c:	uxtb	r4, r4
   4a950:	mov	r1, r0
   4a954:	mov	r0, #1
   4a958:	bl	1132c <__printf_chk@plt>
   4a95c:	sub	r0, r4, #1
   4a960:	uxtb	r3, r0
   4a964:	cmp	r3, #7
   4a968:	bhi	4ad50 <__assert_fail@plt+0x3994c>
   4a96c:	ands	r0, r0, r4
   4a970:	bne	4ad34 <__assert_fail@plt+0x39930>
   4a974:	cmp	r4, #4
   4a978:	movwhi	r1, #45804	; 0xb2ec
   4a97c:	movwls	r1, #45836	; 0xb30c
   4a980:	movthi	r1, #7
   4a984:	movtls	r1, #7
   4a988:	movhi	r2, #5
   4a98c:	movls	r2, #5
   4a990:	bl	11170 <dcgettext@plt>
   4a994:	mov	r1, r0
   4a998:	mov	r0, #1
   4a99c:	bl	1132c <__printf_chk@plt>
   4a9a0:	lsl	ip, r4, #1
   4a9a4:	rsb	r0, r6, sl
   4a9a8:	str	ip, [sp, #12]
   4a9ac:	mov	r1, ip
   4a9b0:	bl	52994 <zcfree@@Base+0x1364>
   4a9b4:	ldr	ip, [sp]
   4a9b8:	add	r9, r9, ip
   4a9bc:	add	r9, r6, r9
   4a9c0:	str	r9, [sp]
   4a9c4:	cmp	r1, #0
   4a9c8:	ldrne	r3, [sp, #12]
   4a9cc:	rsbne	r1, r1, r3
   4a9d0:	addne	sl, sl, r1
   4a9d4:	cmp	r9, r6
   4a9d8:	movcs	r6, #0
   4a9dc:	movcc	r6, #1
   4a9e0:	cmp	r9, fp
   4a9e4:	orrhi	r6, r6, #1
   4a9e8:	cmp	r6, #0
   4a9ec:	bne	4ad90 <__assert_fail@plt+0x3998c>
   4a9f0:	ldr	ip, [sp, #12]
   4a9f4:	add	r3, sl, ip
   4a9f8:	cmp	r9, r3
   4a9fc:	movwcs	ip, #16696	; 0x4138
   4aa00:	movtcs	ip, #9
   4aa04:	strcs	ip, [sp, #16]
   4aa08:	bcc	4ac94 <__assert_fail@plt+0x39890>
   4aa0c:	add	r6, sl, r4
   4aa10:	cmp	fp, r6
   4aa14:	bhi	4abec <__assert_fail@plt+0x397e8>
   4aa18:	cmp	fp, sl
   4aa1c:	rsbhi	r1, sl, fp
   4aa20:	bhi	4abf0 <__assert_fail@plt+0x397ec>
   4aa24:	add	r5, r6, r4
   4aa28:	cmp	fp, r5
   4aa2c:	bhi	4adb0 <__assert_fail@plt+0x399ac>
   4aa30:	mov	r9, #0
   4aa34:	mov	sl, r5
   4aa38:	mov	r8, r9
   4aa3c:	mov	r7, r9
   4aa40:	mov	r6, r9
   4aa44:	b	4ac40 <__assert_fail@plt+0x3983c>
   4aa48:	mov	r1, #4
   4aa4c:	ldr	ip, [sp, #20]
   4aa50:	mov	r0, r6
   4aa54:	movw	r7, #26492	; 0x677c
   4aa58:	movt	r7, #9
   4aa5c:	ldr	r3, [ip]
   4aa60:	blx	r3
   4aa64:	mvn	r2, #0
   4aa68:	mov	r3, #0
   4aa6c:	cmp	r1, r3
   4aa70:	cmpeq	r0, r2
   4aa74:	strd	r0, [sp]
   4aa78:	bne	4ad28 <__assert_fail@plt+0x39924>
   4aa7c:	add	r3, r6, #12
   4aa80:	cmp	fp, r3
   4aa84:	bhi	4aab0 <__assert_fail@plt+0x396ac>
   4aa88:	cmp	fp, r8
   4aa8c:	bls	4aaa0 <__assert_fail@plt+0x3969c>
   4aa90:	rsb	r1, r8, fp
   4aa94:	sub	r2, r1, #1
   4aa98:	cmp	r2, #7
   4aa9c:	bls	4aab4 <__assert_fail@plt+0x396b0>
   4aaa0:	mov	r8, r3
   4aaa4:	mov	r9, #12
   4aaa8:	mov	r5, #8
   4aaac:	b	4a790 <__assert_fail@plt+0x3938c>
   4aab0:	mov	r1, #8
   4aab4:	ldr	ip, [sp, #20]
   4aab8:	mov	r0, r8
   4aabc:	mov	r8, r3
   4aac0:	mov	r9, #12
   4aac4:	mov	r5, #8
   4aac8:	ldr	r2, [ip]
   4aacc:	blx	r2
   4aad0:	strd	r0, [sp]
   4aad4:	add	r4, r8, #2
   4aad8:	cmp	fp, r4
   4aadc:	bhi	4ab20 <__assert_fail@plt+0x3971c>
   4aae0:	cmp	r8, fp
   4aae4:	bcc	4ad14 <__assert_fail@plt+0x39910>
   4aae8:	add	r7, r4, r5
   4aaec:	mov	ip, #0
   4aaf0:	cmp	fp, r7
   4aaf4:	movw	r3, #65534	; 0xfffe
   4aaf8:	str	ip, [sp, #12]
   4aafc:	str	r3, [sp, #16]
   4ab00:	movls	r8, ip
   4ab04:	bls	4a7d4 <__assert_fail@plt+0x393d0>
   4ab08:	b	4a7c4 <__assert_fail@plt+0x393c0>
   4ab0c:	movw	r7, #26492	; 0x677c
   4ab10:	movt	r7, #9
   4ab14:	mov	r0, #0
   4ab18:	mov	r1, #0
   4ab1c:	strd	r0, [sp]
   4ab20:	mov	r1, #2
   4ab24:	ldr	r3, [r7]
   4ab28:	mov	r0, r8
   4ab2c:	blx	r3
   4ab30:	add	r7, r4, r5
   4ab34:	cmp	fp, r7
   4ab38:	uxth	r0, r0
   4ab3c:	str	r0, [sp, #12]
   4ab40:	sub	sl, r0, #2
   4ab44:	uxth	sl, sl
   4ab48:	str	sl, [sp, #16]
   4ab4c:	bhi	4a7c4 <__assert_fail@plt+0x393c0>
   4ab50:	cmp	fp, r4
   4ab54:	bls	4a7d0 <__assert_fail@plt+0x393cc>
   4ab58:	rsb	r5, r4, fp
   4ab5c:	sub	r3, r5, #1
   4ab60:	cmp	r3, #7
   4ab64:	bhi	4a7d0 <__assert_fail@plt+0x393cc>
   4ab68:	ldr	ip, [sp, #20]
   4ab6c:	mov	r0, r4
   4ab70:	mov	r1, r5
   4ab74:	ldr	r3, [ip]
   4ab78:	blx	r3
   4ab7c:	mov	r8, r0
   4ab80:	b	4a7d4 <__assert_fail@plt+0x393d0>
   4ab84:	cmp	fp, r7
   4ab88:	bhi	4acd8 <__assert_fail@plt+0x398d4>
   4ab8c:	add	sl, r7, #2
   4ab90:	cmp	fp, sl
   4ab94:	movls	r5, #0
   4ab98:	movls	r4, r5
   4ab9c:	bls	4a890 <__assert_fail@plt+0x3948c>
   4aba0:	movw	r7, #26492	; 0x677c
   4aba4:	movt	r7, #9
   4aba8:	mov	r5, #0
   4abac:	mov	r1, #1
   4abb0:	ldr	r3, [r7]
   4abb4:	mov	r0, r4
   4abb8:	blx	r3
   4abbc:	ldr	r3, [sp, #16]
   4abc0:	cmp	r3, #1
   4abc4:	uxtb	r4, r0
   4abc8:	bls	4a89c <__assert_fail@plt+0x39498>
   4abcc:	ldr	ip, [sp, #12]
   4abd0:	cmp	ip, #0
   4abd4:	bne	4ad74 <__assert_fail@plt+0x39970>
   4abd8:	mov	r0, #10
   4abdc:	bl	112fc <putchar@plt>
   4abe0:	mov	r0, #1
   4abe4:	add	sp, sp, #36	; 0x24
   4abe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4abec:	mov	r1, r4
   4abf0:	sub	r2, r1, #1
   4abf4:	cmp	r2, #7
   4abf8:	movhi	r9, #0
   4abfc:	movhi	r8, r9
   4ac00:	bhi	4ac1c <__assert_fail@plt+0x39818>
   4ac04:	ldr	r3, [sp, #20]
   4ac08:	mov	r0, sl
   4ac0c:	ldr	r2, [r3]
   4ac10:	blx	r2
   4ac14:	mov	r9, r0
   4ac18:	mov	r8, r1
   4ac1c:	add	r5, r6, r4
   4ac20:	cmp	fp, r5
   4ac24:	bhi	4aca8 <__assert_fail@plt+0x398a4>
   4ac28:	cmp	fp, r6
   4ac2c:	rsbhi	r1, r6, fp
   4ac30:	bhi	4acac <__assert_fail@plt+0x398a8>
   4ac34:	mov	r7, #0
   4ac38:	mov	sl, r5
   4ac3c:	mov	r6, r7
   4ac40:	movw	r1, #424	; 0x1a8
   4ac44:	mov	r0, #1
   4ac48:	movt	r1, #6
   4ac4c:	bl	1132c <__printf_chk@plt>
   4ac50:	mov	r0, r9
   4ac54:	mov	r1, r8
   4ac58:	mov	r2, r4
   4ac5c:	bl	38ad4 <__assert_fail@plt+0x276d0>
   4ac60:	mov	r0, r7
   4ac64:	mov	r1, r6
   4ac68:	mov	r2, r4
   4ac6c:	bl	38ad4 <__assert_fail@plt+0x276d0>
   4ac70:	ldr	r3, [sp, #16]
   4ac74:	mov	r0, #10
   4ac78:	ldr	r1, [r3]
   4ac7c:	bl	111ac <_IO_putc@plt>
   4ac80:	ldr	ip, [sp, #12]
   4ac84:	ldr	r3, [sp]
   4ac88:	add	r5, r5, ip
   4ac8c:	cmp	r3, r5
   4ac90:	bcs	4aa0c <__assert_fail@plt+0x39608>
   4ac94:	ldr	r3, [sp]
   4ac98:	cmp	fp, r3
   4ac9c:	bls	4abd8 <__assert_fail@plt+0x397d4>
   4aca0:	ldr	r6, [sp]
   4aca4:	b	4a764 <__assert_fail@plt+0x39360>
   4aca8:	mov	r1, r4
   4acac:	sub	r2, r1, #1
   4acb0:	cmp	r2, #7
   4acb4:	bhi	4ac34 <__assert_fail@plt+0x39830>
   4acb8:	ldr	ip, [sp, #20]
   4acbc:	mov	r0, r6
   4acc0:	mov	sl, r5
   4acc4:	ldr	r2, [ip]
   4acc8:	blx	r2
   4accc:	mov	r7, r0
   4acd0:	mov	r6, r1
   4acd4:	b	4ac40 <__assert_fail@plt+0x3983c>
   4acd8:	rsb	r1, r7, fp
   4acdc:	sub	r3, r1, #1
   4ace0:	cmp	r3, #7
   4ace4:	bhi	4ab8c <__assert_fail@plt+0x39788>
   4ace8:	ldr	ip, [sp, #20]
   4acec:	mov	r0, r7
   4acf0:	add	sl, r7, #2
   4acf4:	movw	r7, #26492	; 0x677c
   4acf8:	movt	r7, #9
   4acfc:	ldr	r3, [ip]
   4ad00:	blx	r3
   4ad04:	cmp	fp, sl
   4ad08:	uxtb	r5, r0
   4ad0c:	bls	4a88c <__assert_fail@plt+0x39488>
   4ad10:	b	4abac <__assert_fail@plt+0x397a8>
   4ad14:	rsb	r1, r8, fp
   4ad18:	sub	r3, r1, #1
   4ad1c:	cmp	r3, #7
   4ad20:	bhi	4aae8 <__assert_fail@plt+0x396e4>
   4ad24:	b	4ab24 <__assert_fail@plt+0x39720>
   4ad28:	mov	r9, #4
   4ad2c:	mov	r5, r9
   4ad30:	b	4aad4 <__assert_fail@plt+0x396d0>
   4ad34:	mov	r2, #5
   4ad38:	movw	r1, #45752	; 0xb2b8
   4ad3c:	mov	r0, #0
   4ad40:	movt	r1, #7
   4ad44:	bl	11170 <dcgettext@plt>
   4ad48:	bl	4b9ec <warn@@Base>
   4ad4c:	b	4abd8 <__assert_fail@plt+0x397d4>
   4ad50:	mov	r2, #5
   4ad54:	movw	r1, #45712	; 0xb290
   4ad58:	mov	r0, #0
   4ad5c:	movt	r1, #7
   4ad60:	bl	11170 <dcgettext@plt>
   4ad64:	ldr	r3, [sp, #28]
   4ad68:	ldr	r1, [r3, #8]
   4ad6c:	bl	4b2b0 <error@@Base>
   4ad70:	b	4abd8 <__assert_fail@plt+0x397d4>
   4ad74:	mov	r2, #5
   4ad78:	movw	r1, #45488	; 0xb1b0
   4ad7c:	mov	r0, #0
   4ad80:	movt	r1, #7
   4ad84:	bl	11170 <dcgettext@plt>
   4ad88:	bl	4b9ec <warn@@Base>
   4ad8c:	b	4abd8 <__assert_fail@plt+0x397d4>
   4ad90:	mov	r2, #5
   4ad94:	movw	r1, #45860	; 0xb324
   4ad98:	mov	r0, #0
   4ad9c:	movt	r1, #7
   4ada0:	bl	11170 <dcgettext@plt>
   4ada4:	mov	r1, r7
   4ada8:	bl	4b2b0 <error@@Base>
   4adac:	b	4abd8 <__assert_fail@plt+0x397d4>
   4adb0:	mov	r9, #0
   4adb4:	mov	r1, r4
   4adb8:	mov	r8, r9
   4adbc:	b	4acac <__assert_fail@plt+0x398a8>
   4adc0:	mov	r0, #0
   4adc4:	mov	r1, #0
   4adc8:	strd	r0, [sp]
   4adcc:	movw	r3, #65534	; 0xfffe
   4add0:	mov	ip, #0
   4add4:	str	r3, [sp, #16]
   4add8:	str	ip, [sp, #12]
   4addc:	ldr	r8, [sp]
   4ade0:	b	4a7d4 <__assert_fail@plt+0x393d0>
   4ade4:	mov	r1, #1
   4ade8:	b	474e4 <__assert_fail@plt+0x360e0>
   4adec:	push	{r4, r5, r6, r7, r8, lr}
   4adf0:	bl	38820 <__assert_fail@plt+0x2741c>
   4adf4:	mov	r4, #0
   4adf8:	mov	r0, r4
   4adfc:	add	r4, r4, #1
   4ae00:	bl	33824 <__assert_fail@plt+0x22420>
   4ae04:	cmp	r4, #36	; 0x24
   4ae08:	bne	4adf8 <__assert_fail@plt+0x399f4>
   4ae0c:	movw	r7, #24696	; 0x6078
   4ae10:	movt	r7, #9
   4ae14:	ldr	r8, [r7, #1580]	; 0x62c
   4ae18:	cmp	r8, #0
   4ae1c:	popeq	{r4, r5, r6, r7, r8, pc}
   4ae20:	ldr	r6, [r7, #1568]	; 0x620
   4ae24:	sub	r3, r6, #1
   4ae28:	cmn	r3, #3
   4ae2c:	movls	r4, r8
   4ae30:	movls	r5, #0
   4ae34:	bls	4ae54 <__assert_fail@plt+0x39a50>
   4ae38:	b	4ae94 <__assert_fail@plt+0x39a90>
   4ae3c:	ldr	r3, [r4, #72]	; 0x48
   4ae40:	cmp	r3, #0
   4ae44:	beq	4ae80 <__assert_fail@plt+0x39a7c>
   4ae48:	cmp	r5, r6
   4ae4c:	add	r4, r4, #80	; 0x50
   4ae50:	beq	4ae94 <__assert_fail@plt+0x39a90>
   4ae54:	ldr	r3, [r4, #60]	; 0x3c
   4ae58:	add	r5, r5, #1
   4ae5c:	cmp	r3, #0
   4ae60:	bne	4ae3c <__assert_fail@plt+0x39a38>
   4ae64:	ldr	r0, [r4, #48]	; 0x30
   4ae68:	bl	1111c <free@plt>
   4ae6c:	ldr	r0, [r4, #52]	; 0x34
   4ae70:	bl	1111c <free@plt>
   4ae74:	ldr	r3, [r4, #72]	; 0x48
   4ae78:	cmp	r3, #0
   4ae7c:	bne	4ae48 <__assert_fail@plt+0x39a44>
   4ae80:	ldr	r0, [r4, #64]	; 0x40
   4ae84:	add	r4, r4, #80	; 0x50
   4ae88:	bl	1111c <free@plt>
   4ae8c:	cmp	r5, r6
   4ae90:	bne	4ae54 <__assert_fail@plt+0x39a50>
   4ae94:	mov	r0, r8
   4ae98:	bl	1111c <free@plt>
   4ae9c:	mov	r3, #0
   4aea0:	str	r3, [r7, #1580]	; 0x62c
   4aea4:	str	r3, [r7, #1568]	; 0x620
   4aea8:	str	r3, [r7, #1584]	; 0x630
   4aeac:	pop	{r4, r5, r6, r7, r8, pc}
   4aeb0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   4aeb4:	movw	r8, #26476	; 0x676c
   4aeb8:	ldrb	r3, [r0]
   4aebc:	movw	r9, #26420	; 0x6734
   4aec0:	mov	r6, r0
   4aec4:	movt	r8, #9
   4aec8:	cmp	r3, #0
   4aecc:	movt	r9, #9
   4aed0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   4aed4:	movw	r4, #45892	; 0xb344
   4aed8:	ldr	r7, [pc, #200]	; 4afa8 <__assert_fail@plt+0x39ba4>
   4aedc:	movt	r4, #7
   4aee0:	mov	r5, #6
   4aee4:	b	4aef0 <__assert_fail@plt+0x39aec>
   4aee8:	bl	1129c <strlen@plt>
   4aeec:	mov	r5, r0
   4aef0:	mov	r2, r5
   4aef4:	mov	r1, r4
   4aef8:	mov	r0, r6
   4aefc:	bl	113e0 <strncmp@plt>
   4af00:	add	r2, r6, r5
   4af04:	cmp	r0, #0
   4af08:	bne	4af1c <__assert_fail@plt+0x39b18>
   4af0c:	ldrb	r3, [r6, r5]
   4af10:	cmp	r3, #44	; 0x2c
   4af14:	cmpne	r3, #0
   4af18:	beq	4af78 <__assert_fail@plt+0x39b74>
   4af1c:	ldr	r4, [r7, #12]!
   4af20:	cmp	r4, #0
   4af24:	mov	r0, r4
   4af28:	bne	4aee8 <__assert_fail@plt+0x39ae4>
   4af2c:	mov	r2, #5
   4af30:	mov	r0, r4
   4af34:	movw	r1, #45900	; 0xb34c
   4af38:	movt	r1, #7
   4af3c:	bl	11170 <dcgettext@plt>
   4af40:	mov	r1, r6
   4af44:	bl	4b9ec <warn@@Base>
   4af48:	mov	r0, r6
   4af4c:	mov	r1, #44	; 0x2c
   4af50:	bl	112a8 <strchr@plt>
   4af54:	subs	r6, r0, #0
   4af58:	beq	4afa4 <__assert_fail@plt+0x39ba0>
   4af5c:	ldrb	r3, [r6]
   4af60:	cmp	r3, #44	; 0x2c
   4af64:	ldrbeq	r3, [r6, #1]
   4af68:	addeq	r6, r6, #1
   4af6c:	cmp	r3, #0
   4af70:	bne	4aed4 <__assert_fail@plt+0x39ad0>
   4af74:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   4af78:	ldr	r3, [r7, #4]
   4af7c:	mov	r6, r2
   4af80:	ldr	r1, [r7, #8]
   4af84:	ldr	r0, [r3]
   4af88:	orr	r1, r0, r1
   4af8c:	str	r1, [r3]
   4af90:	ldr	r3, [r8]
   4af94:	cmp	r3, #0
   4af98:	movne	r3, #1
   4af9c:	strne	r3, [r9]
   4afa0:	b	4af5c <__assert_fail@plt+0x39b58>
   4afa4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   4afa8:	andeq	r6, r7, r8, asr #28
   4afac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4afb0:	movw	sl, #26428	; 0x673c
   4afb4:	movw	r8, #26408	; 0x6728
   4afb8:	movw	r7, #26472	; 0x6768
   4afbc:	movw	r5, #26420	; 0x6734
   4afc0:	movw	r6, #26476	; 0x676c
   4afc4:	sub	r4, r0, #1
   4afc8:	movt	sl, #9
   4afcc:	movt	r8, #9
   4afd0:	movt	r7, #9
   4afd4:	movt	r5, #9
   4afd8:	movt	r6, #9
   4afdc:	mov	r9, r0
   4afe0:	ldrb	r3, [r4, #1]!
   4afe4:	cmp	r3, #0
   4afe8:	beq	4b0d4 <__assert_fail@plt+0x39cd0>
   4afec:	sub	r3, r3, #70	; 0x46
   4aff0:	cmp	r3, #46	; 0x2e
   4aff4:	ldrls	pc, [pc, r3, lsl #2]
   4aff8:	b	4b1a4 <__assert_fail@plt+0x39da0>
   4affc:	strheq	fp, [r4], -r8
   4b000:	andeq	fp, r4, r4, lsr #3
   4b004:	andeq	fp, r4, r4, lsr #3
   4b008:	andeq	fp, r4, r4, lsr #3
   4b00c:	andeq	fp, r4, r4, lsr #3
   4b010:	andeq	fp, r4, r4, lsr #3
   4b014:	andeq	fp, r4, r0, lsl #2
   4b018:	andeq	fp, r4, r4, lsr #3
   4b01c:	andeq	fp, r4, r4, lsr #3
   4b020:	andeq	fp, r4, r4, lsr #3
   4b024:	andeq	fp, r4, r4, lsr #3
   4b028:	andeq	fp, r4, r4, lsr #3
   4b02c:	andeq	fp, r4, ip, ror #1
   4b030:	andeq	fp, r4, r4, lsr #3
   4b034:	andeq	fp, r4, r4, lsr #3
   4b038:	andeq	fp, r4, r4, lsr #3
   4b03c:	andeq	fp, r4, r4, lsr #3
   4b040:	andeq	fp, r4, r4, lsr #3
   4b044:	andeq	fp, r4, r4, lsr #3
   4b048:	andeq	fp, r4, r4, lsr #3
   4b04c:	andeq	fp, r4, r4, lsr #3
   4b050:	andeq	fp, r4, r4, lsr #3
   4b054:	andeq	fp, r4, r4, lsr #3
   4b058:	andeq	fp, r4, r4, lsr #3
   4b05c:	andeq	fp, r4, r4, lsr #3
   4b060:	andeq	fp, r4, r4, lsr #3
   4b064:	andeq	fp, r4, r4, lsr #3
   4b068:	ldrdeq	fp, [r4], -r8
   4b06c:	andeq	fp, r4, r4, lsr #3
   4b070:	andeq	fp, r4, r4, lsr #3
   4b074:	andeq	fp, r4, r4, lsr #3
   4b078:	andeq	fp, r4, r4, lsr #3
   4b07c:	andeq	fp, r4, r0, asr #1
   4b080:	andeq	fp, r4, r4, lsr #3
   4b084:	andeq	fp, r4, r4, lsr #3
   4b088:	muleq	r4, r0, r1
   4b08c:	andeq	fp, r4, r4, lsr #3
   4b090:	andeq	fp, r4, r4, lsr #3
   4b094:	andeq	fp, r4, r8, ror r1
   4b098:	andeq	fp, r4, ip, ror #2
   4b09c:	andeq	fp, r4, r4, lsr #3
   4b0a0:	andeq	fp, r4, r0, ror #2
   4b0a4:	andeq	fp, r4, ip, asr #2
   4b0a8:	andeq	fp, r4, r4, lsr #3
   4b0ac:	andeq	fp, r4, r8, lsr r1
   4b0b0:	andeq	fp, r4, ip, lsr #2
   4b0b4:	andeq	fp, r4, r8, lsl r1
   4b0b8:	mov	r3, #1
   4b0bc:	str	r3, [r6]
   4b0c0:	mov	r3, #1
   4b0c4:	str	r3, [r5]
   4b0c8:	ldrb	r3, [r4, #1]!
   4b0cc:	cmp	r3, #0
   4b0d0:	bne	4afec <__assert_fail@plt+0x39be8>
   4b0d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4b0d8:	movw	r3, #26432	; 0x6740
   4b0dc:	movt	r3, #9
   4b0e0:	mov	r2, #1
   4b0e4:	str	r2, [r3]
   4b0e8:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b0ec:	movw	r3, #26460	; 0x675c
   4b0f0:	movt	r3, #9
   4b0f4:	mov	r2, #1
   4b0f8:	str	r2, [r3]
   4b0fc:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b100:	movw	r3, #26456	; 0x6758
   4b104:	movt	r3, #9
   4b108:	ldr	r2, [r3]
   4b10c:	orr	r2, r2, #2
   4b110:	str	r2, [r3]
   4b114:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b118:	movw	r3, #26468	; 0x6764
   4b11c:	movt	r3, #9
   4b120:	mov	r2, #1
   4b124:	str	r2, [r3]
   4b128:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b12c:	mov	r3, #1
   4b130:	str	r3, [r8]
   4b134:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b138:	movw	r3, #26416	; 0x6730
   4b13c:	movt	r3, #9
   4b140:	mov	r2, #1
   4b144:	str	r2, [r3]
   4b148:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b14c:	movw	r3, #26424	; 0x6738
   4b150:	movt	r3, #9
   4b154:	mov	r2, #1
   4b158:	str	r2, [r3]
   4b15c:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b160:	mov	r3, #1
   4b164:	str	r3, [sl]
   4b168:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b16c:	mov	r3, #1
   4b170:	str	r3, [r7]
   4b174:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b178:	movw	r3, #26456	; 0x6758
   4b17c:	movt	r3, #9
   4b180:	ldr	r2, [r3]
   4b184:	orr	r2, r2, #1
   4b188:	str	r2, [r3]
   4b18c:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b190:	movw	r3, #26412	; 0x672c
   4b194:	movt	r3, #9
   4b198:	mov	r2, #1
   4b19c:	str	r2, [r3]
   4b1a0:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b1a4:	mov	r2, #5
   4b1a8:	movw	r1, #45900	; 0xb34c
   4b1ac:	mov	r0, #0
   4b1b0:	movt	r1, #7
   4b1b4:	bl	11170 <dcgettext@plt>
   4b1b8:	mov	r1, r9
   4b1bc:	bl	4b9ec <warn@@Base>
   4b1c0:	b	4afe0 <__assert_fail@plt+0x39bdc>
   4b1c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   4b1c8:	sub	sp, sp, #8
   4b1cc:	movw	r2, #26480	; 0x6770
   4b1d0:	movt	r2, #9
   4b1d4:	movw	sl, #26432	; 0x6740
   4b1d8:	movw	r9, #26456	; 0x6758
   4b1dc:	movt	sl, #9
   4b1e0:	movt	r9, #9
   4b1e4:	movw	r8, #26424	; 0x6738
   4b1e8:	movw	r7, #26468	; 0x6764
   4b1ec:	movt	r8, #9
   4b1f0:	movt	r7, #9
   4b1f4:	movw	r3, #26464	; 0x6760
   4b1f8:	movt	r3, #9
   4b1fc:	str	r3, [sp, #4]
   4b200:	mov	r3, #1
   4b204:	str	r3, [r2]
   4b208:	movw	fp, #26412	; 0x672c
   4b20c:	ldr	r2, [sp, #4]
   4b210:	movt	fp, #9
   4b214:	str	r3, [sl]
   4b218:	movw	r6, #26416	; 0x6730
   4b21c:	str	r3, [r9]
   4b220:	movt	r6, #9
   4b224:	str	r3, [r8]
   4b228:	movw	r5, #26460	; 0x675c
   4b22c:	str	r3, [r7]
   4b230:	movt	r5, #9
   4b234:	movw	r4, #26420	; 0x6734
   4b238:	movw	ip, #26472	; 0x6768
   4b23c:	movt	r4, #9
   4b240:	movt	ip, #9
   4b244:	movw	r0, #26408	; 0x6728
   4b248:	movw	r1, #26428	; 0x673c
   4b24c:	movt	r0, #9
   4b250:	movt	r1, #9
   4b254:	movw	sl, #26452	; 0x6754
   4b258:	movw	r9, #26440	; 0x6748
   4b25c:	movt	sl, #9
   4b260:	movt	r9, #9
   4b264:	movw	r8, #26436	; 0x6744
   4b268:	movw	r7, #26484	; 0x6774
   4b26c:	movt	r8, #9
   4b270:	movt	r7, #9
   4b274:	str	r3, [fp]
   4b278:	str	r3, [r6]
   4b27c:	str	r3, [r5]
   4b280:	str	r3, [r4]
   4b284:	str	r3, [ip]
   4b288:	str	r3, [r0]
   4b28c:	str	r3, [r1]
   4b290:	str	r3, [r2]
   4b294:	str	r3, [sl]
   4b298:	str	r3, [r9]
   4b29c:	str	r3, [r8]
   4b2a0:	str	r3, [r7]
   4b2a4:	add	sp, sp, #8
   4b2a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   4b2ac:	bx	lr

0004b2b0 <error@@Base>:
   4b2b0:	push	{r0, r1, r2, r3}
   4b2b4:	movw	r3, #16696	; 0x4138
   4b2b8:	push	{r4, r5, r6, r7, lr}
   4b2bc:	movw	r4, #16680	; 0x4128
   4b2c0:	movt	r4, #9
   4b2c4:	movt	r3, #9
   4b2c8:	sub	sp, sp, #12
   4b2cc:	movw	r5, #16692	; 0x4134
   4b2d0:	ldr	r2, [r4]
   4b2d4:	movt	r5, #9
   4b2d8:	ldr	r0, [r3]
   4b2dc:	ldr	r6, [sp, #32]
   4b2e0:	str	r2, [sp, #4]
   4b2e4:	bl	11104 <fflush@plt>
   4b2e8:	mov	r2, #5
   4b2ec:	movw	r1, #48116	; 0xbbf4
   4b2f0:	mov	r0, #0
   4b2f4:	movt	r1, #7
   4b2f8:	add	r3, sp, #36	; 0x24
   4b2fc:	ldr	r7, [r5]
   4b300:	str	r3, [sp]
   4b304:	bl	11170 <dcgettext@plt>
   4b308:	movw	r3, #13348	; 0x3424
   4b30c:	movt	r3, #9
   4b310:	mov	r1, #1
   4b314:	ldr	r3, [r3]
   4b318:	mov	r2, r0
   4b31c:	mov	r0, r7
   4b320:	bl	11338 <__fprintf_chk@plt>
   4b324:	mov	r2, r6
   4b328:	ldr	r3, [sp]
   4b32c:	mov	r1, #1
   4b330:	ldr	r0, [r5]
   4b334:	bl	11254 <__vfprintf_chk@plt>
   4b338:	ldr	r2, [sp, #4]
   4b33c:	ldr	r3, [r4]
   4b340:	cmp	r2, r3
   4b344:	bne	4b358 <error@@Base+0xa8>
   4b348:	add	sp, sp, #12
   4b34c:	pop	{r4, r5, r6, r7, lr}
   4b350:	add	sp, sp, #16
   4b354:	bx	lr
   4b358:	bl	1117c <__stack_chk_fail@plt>
   4b35c:	sub	r3, r1, #1
   4b360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4b364:	mov	r4, r1
   4b368:	sub	sp, sp, #20
   4b36c:	cmp	r3, #7
   4b370:	ldrls	pc, [pc, r3, lsl #2]
   4b374:	b	4b638 <error@@Base+0x388>
   4b378:	andeq	fp, r4, r0, asr #8
   4b37c:	andeq	fp, r4, r0, asr r4
   4b380:	andeq	fp, r4, r8, ror #8
   4b384:	andeq	fp, r4, ip, lsl #9
   4b388:			; <UNDEFINED> instruction: 0x0004b4b8
   4b38c:	andeq	fp, r4, r4, lsr #10
   4b390:	andeq	fp, r4, r0, lsr #11
   4b394:	muleq	r4, r8, r3
   4b398:	ldrb	sl, [r0, #6]
   4b39c:	mov	r7, #0
   4b3a0:	ldrb	r2, [r0, #5]
   4b3a4:	ldrb	r6, [r0, #4]
   4b3a8:	lsl	r8, sl, #8
   4b3ac:	lsr	r9, sl, #24
   4b3b0:	lsl	r4, r2, #16
   4b3b4:	lsr	r5, r2, #16
   4b3b8:	orr	r4, r4, r8
   4b3bc:	ldrb	r8, [r0, #7]
   4b3c0:	strd	r6, [sp]
   4b3c4:	orr	r5, r5, r9
   4b3c8:	orr	r4, r4, r8
   4b3cc:	ldr	r8, [sp]
   4b3d0:	ldr	r7, [sp]
   4b3d4:	mov	r9, #0
   4b3d8:	ldrb	sl, [r0, #2]
   4b3dc:	orr	r5, r5, r9
   4b3e0:	lsl	r2, r8, #24
   4b3e4:	ldrb	r8, [r0, #1]
   4b3e8:	mov	r9, #0
   4b3ec:	lsr	r3, r7, #8
   4b3f0:	ldrb	r7, [r0, #3]
   4b3f4:	orr	r4, r4, r2
   4b3f8:	strd	r8, [sp]
   4b3fc:	orr	r5, r5, r3
   4b400:	ldr	ip, [sp]
   4b404:	mov	r6, #0
   4b408:	ldrb	r2, [r0]
   4b40c:	lsl	r9, sl, #8
   4b410:	orr	r4, r4, r6
   4b414:	orr	r5, r5, r7
   4b418:	lsl	fp, ip, #16
   4b41c:	orr	r4, r4, r6
   4b420:	orr	r5, r5, r9
   4b424:	lsl	r1, r2, #24
   4b428:	orr	sl, r6, r4
   4b42c:	orr	fp, fp, r5
   4b430:	orr	r0, r6, sl
   4b434:	orr	r1, r1, fp
   4b438:	add	sp, sp, #20
   4b43c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b440:	ldrb	r0, [r0]
   4b444:	mov	r1, #0
   4b448:	add	sp, sp, #20
   4b44c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b450:	ldrb	r2, [r0]
   4b454:	mov	r1, #0
   4b458:	ldrb	r3, [r0, #1]
   4b45c:	orr	r0, r3, r2, lsl #8
   4b460:	add	sp, sp, #20
   4b464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b468:	ldrb	r1, [r0]
   4b46c:	ldrb	r2, [r0, #1]
   4b470:	ldrb	r3, [r0, #2]
   4b474:	lsl	r0, r1, #16
   4b478:	mov	r1, #0
   4b47c:	orr	r0, r0, r2, lsl #8
   4b480:	orr	r0, r0, r3
   4b484:	add	sp, sp, #20
   4b488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b48c:	ldrb	r1, [r0, #1]
   4b490:	ldrb	ip, [r0, #2]
   4b494:	ldrb	r3, [r0, #3]
   4b498:	ldrb	r2, [r0]
   4b49c:	lsl	r1, r1, #16
   4b4a0:	orr	r0, r1, ip, lsl #8
   4b4a4:	mov	r1, #0
   4b4a8:	orr	r0, r0, r3
   4b4ac:	orr	r0, r0, r2, lsl #24
   4b4b0:	add	sp, sp, #20
   4b4b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b4b8:	ldrb	r2, [r0, #1]
   4b4bc:	mov	r3, #0
   4b4c0:	ldrb	sl, [r0, #3]
   4b4c4:	mov	fp, #0
   4b4c8:	ldrb	r4, [r0, #2]
   4b4cc:	strd	r2, [sp]
   4b4d0:	mov	r2, #0
   4b4d4:	ldr	r3, [sp]
   4b4d8:	lsr	r9, sl, #24
   4b4dc:	lsl	r8, sl, #8
   4b4e0:	lsl	r6, r4, #16
   4b4e4:	ldrb	sl, [r0, #4]
   4b4e8:	orr	r6, r6, r8
   4b4ec:	lsr	r5, r3, #8
   4b4f0:	ldrb	r3, [r0]
   4b4f4:	orr	r0, r6, sl
   4b4f8:	ldr	r6, [sp]
   4b4fc:	lsr	r7, r4, #16
   4b500:	orr	r7, r7, r9
   4b504:	orr	r1, r7, fp
   4b508:	lsl	r4, r6, #24
   4b50c:	orr	r0, r0, r4
   4b510:	orr	r1, r1, r5
   4b514:	orr	r0, r0, r2
   4b518:	orr	r1, r1, r3
   4b51c:	add	sp, sp, #20
   4b520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b524:	ldrb	r6, [r0, #2]
   4b528:	mov	r7, #0
   4b52c:	ldrb	sl, [r0, #4]
   4b530:	ldrb	r8, [r0, #3]
   4b534:	strd	r6, [sp]
   4b538:	mov	r6, #0
   4b53c:	lsl	r4, sl, #8
   4b540:	ldr	r7, [sp]
   4b544:	lsl	r2, r8, #16
   4b548:	ldr	ip, [sp]
   4b54c:	lsr	r5, sl, #24
   4b550:	orr	r2, r2, r4
   4b554:	lsr	r3, r8, #16
   4b558:	ldrb	r4, [r0, #5]
   4b55c:	orr	r3, r3, r5
   4b560:	ldrb	sl, [r0]
   4b564:	lsr	r9, r7, #8
   4b568:	orr	r4, r4, r2
   4b56c:	ldrb	r7, [r0, #1]
   4b570:	lsl	r8, ip, #24
   4b574:	mov	r5, #0
   4b578:	orr	r5, r5, r3
   4b57c:	orr	r4, r4, r8
   4b580:	orr	r5, r5, r9
   4b584:	lsl	r1, sl, #8
   4b588:	orr	r4, r4, r6
   4b58c:	orr	r5, r5, r7
   4b590:	orr	r0, r6, r4
   4b594:	orr	r1, r1, r5
   4b598:	add	sp, sp, #20
   4b59c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b5a0:	ldrb	sl, [r0, #5]
   4b5a4:	mov	r7, #0
   4b5a8:	ldrb	r6, [r0, #3]
   4b5ac:	mov	fp, #0
   4b5b0:	ldrb	r4, [r0, #4]
   4b5b4:	lsr	r9, sl, #24
   4b5b8:	lsl	r8, sl, #8
   4b5bc:	ldrb	sl, [r0, #1]
   4b5c0:	strd	r6, [sp]
   4b5c4:	lsl	r2, r4, #16
   4b5c8:	ldr	r7, [sp]
   4b5cc:	lsr	r3, r4, #16
   4b5d0:	strd	sl, [sp, #8]
   4b5d4:	orr	r2, r2, r8
   4b5d8:	ldr	fp, [sp]
   4b5dc:	orr	r3, r3, r9
   4b5e0:	ldrb	r8, [r0, #6]
   4b5e4:	lsr	r5, r7, #8
   4b5e8:	ldr	ip, [sp, #8]
   4b5ec:	mov	r9, #0
   4b5f0:	ldrb	r7, [r0, #2]
   4b5f4:	lsl	r4, fp, #24
   4b5f8:	ldrb	r0, [r0]
   4b5fc:	orr	r2, r2, r8
   4b600:	orr	r3, r3, r9
   4b604:	orr	r2, r2, r4
   4b608:	orr	r3, r3, r5
   4b60c:	mov	r6, #0
   4b610:	lsl	fp, ip, #8
   4b614:	orr	r2, r2, r6
   4b618:	orr	r3, r3, r7
   4b61c:	lsl	r9, r0, #16
   4b620:	orr	r1, r3, fp
   4b624:	orr	r0, r2, r6
   4b628:	orr	r0, r0, r6
   4b62c:	orr	r1, r1, r9
   4b630:	add	sp, sp, #20
   4b634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b638:	mov	r2, #5
   4b63c:	movw	r1, #48128	; 0xbc00
   4b640:	mov	r0, #0
   4b644:	movt	r1, #7
   4b648:	bl	11170 <dcgettext@plt>
   4b64c:	mov	r1, r4
   4b650:	bl	4b2b0 <error@@Base>
   4b654:	bl	113ec <abort@plt>
   4b658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4b65c:	movw	r9, #16680	; 0x4128
   4b660:	movt	r9, #9
   4b664:	sub	sp, sp, #36	; 0x24
   4b668:	mov	r8, r0
   4b66c:	mov	sl, r1
   4b670:	ldr	r3, [r9]
   4b674:	mov	r5, r2
   4b678:	add	r0, r0, #100	; 0x64
   4b67c:	mov	r1, #0
   4b680:	mov	r2, #10
   4b684:	str	r3, [sp, #28]
   4b688:	bl	11290 <strtoul@plt>
   4b68c:	subs	r4, r0, #0
   4b690:	blt	4b818 <error@@Base+0x568>
   4b694:	ldr	r3, [r8, #40]	; 0x28
   4b698:	and	fp, r4, #1
   4b69c:	cmp	r5, #0
   4b6a0:	add	fp, fp, r4
   4b6a4:	add	r3, r3, #60	; 0x3c
   4b6a8:	add	r3, r3, fp
   4b6ac:	str	r3, [r8, #40]	; 0x28
   4b6b0:	beq	4b720 <error@@Base+0x470>
   4b6b4:	cmp	sl, #8
   4b6b8:	bhi	4b9b4 <error@@Base+0x704>
   4b6bc:	cmp	fp, sl
   4b6c0:	bcc	4b788 <error@@Base+0x4d8>
   4b6c4:	ldr	ip, [r8, #4]
   4b6c8:	mov	r1, #8
   4b6cc:	mov	r2, #1
   4b6d0:	add	r0, sp, #20
   4b6d4:	mov	r3, sl
   4b6d8:	str	ip, [sp]
   4b6dc:	bl	1135c <__fread_chk@plt>
   4b6e0:	cmp	sl, r0
   4b6e4:	beq	4b7a8 <error@@Base+0x4f8>
   4b6e8:	movw	r1, #48328	; 0xbcc8
   4b6ec:	mov	r0, #0
   4b6f0:	movt	r1, #7
   4b6f4:	mov	r2, #5
   4b6f8:	bl	11170 <dcgettext@plt>
   4b6fc:	ldr	r1, [r8]
   4b700:	bl	4b2b0 <error@@Base>
   4b704:	mov	r0, #0
   4b708:	ldr	r2, [sp, #28]
   4b70c:	ldr	r3, [r9]
   4b710:	cmp	r2, r3
   4b714:	bne	4b98c <error@@Base+0x6dc>
   4b718:	add	sp, sp, #36	; 0x24
   4b71c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4b720:	mov	r1, fp
   4b724:	ldr	r0, [r8, #4]
   4b728:	mov	r2, #1
   4b72c:	bl	113bc <fseek@plt>
   4b730:	cmp	r0, #0
   4b734:	movwne	r1, #48196	; 0xbc44
   4b738:	movne	r0, r5
   4b73c:	movtne	r1, #7
   4b740:	bne	4b774 <error@@Base+0x4c4>
   4b744:	add	r0, r8, #52	; 0x34
   4b748:	mov	r1, #1
   4b74c:	mov	r2, #60	; 0x3c
   4b750:	ldr	r3, [r8, #4]
   4b754:	bl	111f4 <fread@plt>
   4b758:	cmp	r0, #0
   4b75c:	cmpne	r0, #60	; 0x3c
   4b760:	moveq	r0, #1
   4b764:	beq	4b708 <error@@Base+0x458>
   4b768:	movw	r1, #48752	; 0xbe70
   4b76c:	movt	r1, #7
   4b770:	mov	r0, #0
   4b774:	mov	r2, #5
   4b778:	bl	11170 <dcgettext@plt>
   4b77c:	ldr	r1, [r8]
   4b780:	bl	4b2b0 <error@@Base>
   4b784:	b	4b704 <error@@Base+0x454>
   4b788:	mov	r2, #5
   4b78c:	movw	r1, #48296	; 0xbca8
   4b790:	mov	r0, #0
   4b794:	movt	r1, #7
   4b798:	bl	11170 <dcgettext@plt>
   4b79c:	ldr	r1, [r8]
   4b7a0:	bl	4b2b0 <error@@Base>
   4b7a4:	b	4b704 <error@@Base+0x454>
   4b7a8:	add	r0, sp, #20
   4b7ac:	mov	r1, sl
   4b7b0:	bl	4b35c <error@@Base+0xac>
   4b7b4:	rsb	fp, sl, fp
   4b7b8:	mov	r7, #0
   4b7bc:	mov	r6, fp
   4b7c0:	umull	r2, r3, r0, sl
   4b7c4:	mov	r4, r0
   4b7c8:	mov	r5, r1
   4b7cc:	strd	r4, [r8, #8]
   4b7d0:	mla	r3, sl, r1, r3
   4b7d4:	cmp	r7, r3
   4b7d8:	cmpeq	r6, r2
   4b7dc:	bcc	4b7ec <error@@Base+0x53c>
   4b7e0:	cmp	r5, r7
   4b7e4:	cmpeq	r4, r6
   4b7e8:	bls	4b840 <error@@Base+0x590>
   4b7ec:	mov	r2, #5
   4b7f0:	movw	r1, #48364	; 0xbcec
   4b7f4:	mov	r0, #0
   4b7f8:	movt	r1, #7
   4b7fc:	bl	11170 <dcgettext@plt>
   4b800:	ldr	r1, [r8]
   4b804:	ldr	r2, [r8, #8]
   4b808:	mov	r3, sl
   4b80c:	str	fp, [sp]
   4b810:	bl	4b2b0 <error@@Base>
   4b814:	b	4b704 <error@@Base+0x454>
   4b818:	mov	r2, #5
   4b81c:	movw	r1, #48156	; 0xbc1c
   4b820:	mov	r0, #0
   4b824:	movt	r1, #7
   4b828:	bl	11170 <dcgettext@plt>
   4b82c:	ldr	r1, [r8]
   4b830:	mov	r2, r4
   4b834:	bl	4b2b0 <error@@Base>
   4b838:	mov	r0, #0
   4b83c:	b	4b708 <error@@Base+0x458>
   4b840:	mul	r0, sl, r0
   4b844:	bl	11224 <malloc@plt>
   4b848:	subs	r3, r0, #0
   4b84c:	str	r3, [sp, #8]
   4b850:	beq	4b974 <error@@Base+0x6c4>
   4b854:	mov	r2, r4
   4b858:	mov	r1, sl
   4b85c:	ldr	r3, [r8, #4]
   4b860:	mov	r5, #0
   4b864:	bl	111f4 <fread@plt>
   4b868:	ldrd	r2, [r8, #8]
   4b86c:	mov	r4, r0
   4b870:	cmp	r5, r3
   4b874:	cmpeq	r4, r2
   4b878:	mov	r1, r0
   4b87c:	beq	4b88c <error@@Base+0x5dc>
   4b880:	ldr	r0, [sp, #8]
   4b884:	bl	1111c <free@plt>
   4b888:	b	4b6e8 <error@@Base+0x438>
   4b88c:	mls	r1, sl, r1, fp
   4b890:	lsl	r0, r0, #3
   4b894:	str	r1, [sp, #12]
   4b898:	bl	11224 <malloc@plt>
   4b89c:	cmp	r0, #0
   4b8a0:	str	r0, [r8, #16]
   4b8a4:	beq	4b990 <error@@Base+0x6e0>
   4b8a8:	orrs	r3, r4, r5
   4b8ac:	beq	4b8f8 <error@@Base+0x648>
   4b8b0:	mov	fp, r0
   4b8b4:	ldr	r6, [sp, #8]
   4b8b8:	mov	r7, #0
   4b8bc:	b	4b8c4 <error@@Base+0x614>
   4b8c0:	ldr	fp, [r8, #16]
   4b8c4:	mov	r0, r6
   4b8c8:	mov	r1, sl
   4b8cc:	bl	4b35c <error@@Base+0xac>
   4b8d0:	lsl	r3, r7, #3
   4b8d4:	add	r7, r7, #1
   4b8d8:	mov	r5, #0
   4b8dc:	add	r6, r6, sl
   4b8e0:	mov	r4, r7
   4b8e4:	strd	r0, [fp, r3]
   4b8e8:	ldrd	r2, [r8, #8]
   4b8ec:	cmp	r5, r3
   4b8f0:	cmpeq	r4, r2
   4b8f4:	bcc	4b8c0 <error@@Base+0x610>
   4b8f8:	ldr	r0, [sp, #8]
   4b8fc:	bl	1111c <free@plt>
   4b900:	ldr	r3, [sp, #12]
   4b904:	cmp	r3, #0
   4b908:	bne	4b92c <error@@Base+0x67c>
   4b90c:	ldr	r0, [sp, #12]
   4b910:	mov	r2, #5
   4b914:	movw	r1, #48592	; 0xbdd0
   4b918:	movt	r1, #7
   4b91c:	bl	11170 <dcgettext@plt>
   4b920:	ldr	r1, [r8]
   4b924:	bl	4b2b0 <error@@Base>
   4b928:	b	4b704 <error@@Base+0x454>
   4b92c:	ldr	r0, [sp, #12]
   4b930:	bl	11224 <malloc@plt>
   4b934:	cmp	r0, #0
   4b938:	str	r0, [r8, #20]
   4b93c:	beq	4b9d4 <error@@Base+0x724>
   4b940:	ldr	r3, [sp, #12]
   4b944:	mov	r1, #1
   4b948:	str	r3, [r8, #24]
   4b94c:	mov	r2, r3
   4b950:	ldr	r3, [r8, #4]
   4b954:	bl	111f4 <fread@plt>
   4b958:	ldr	r3, [sp, #12]
   4b95c:	cmp	r3, r0
   4b960:	beq	4b744 <error@@Base+0x494>
   4b964:	movw	r1, #48704	; 0xbe40
   4b968:	mov	r0, #0
   4b96c:	movt	r1, #7
   4b970:	b	4b774 <error@@Base+0x4c4>
   4b974:	mov	r2, #5
   4b978:	movw	r1, #48464	; 0xbd50
   4b97c:	movt	r1, #7
   4b980:	bl	11170 <dcgettext@plt>
   4b984:	bl	4b2b0 <error@@Base>
   4b988:	b	4b704 <error@@Base+0x454>
   4b98c:	bl	1117c <__stack_chk_fail@plt>
   4b990:	ldr	r0, [sp, #8]
   4b994:	bl	1111c <free@plt>
   4b998:	mov	r2, #5
   4b99c:	movw	r1, #48524	; 0xbd8c
   4b9a0:	mov	r0, #0
   4b9a4:	movt	r1, #7
   4b9a8:	bl	11170 <dcgettext@plt>
   4b9ac:	bl	4b2b0 <error@@Base>
   4b9b0:	b	4b704 <error@@Base+0x454>
   4b9b4:	movw	r0, #48240	; 0xbc70
   4b9b8:	movw	r1, #48284	; 0xbc9c
   4b9bc:	movw	r3, #48080	; 0xbbd0
   4b9c0:	movt	r0, #7
   4b9c4:	movt	r1, #7
   4b9c8:	movw	r2, #493	; 0x1ed
   4b9cc:	movt	r3, #7
   4b9d0:	bl	11404 <__assert_fail@plt>
   4b9d4:	mov	r2, #5
   4b9d8:	movw	r1, #48640	; 0xbe00
   4b9dc:	movt	r1, #7
   4b9e0:	bl	11170 <dcgettext@plt>
   4b9e4:	bl	4b2b0 <error@@Base>
   4b9e8:	b	4b704 <error@@Base+0x454>

0004b9ec <warn@@Base>:
   4b9ec:	push	{r0, r1, r2, r3}
   4b9f0:	movw	r3, #16696	; 0x4138
   4b9f4:	push	{r4, r5, r6, r7, lr}
   4b9f8:	movw	r4, #16680	; 0x4128
   4b9fc:	movt	r4, #9
   4ba00:	movt	r3, #9
   4ba04:	sub	sp, sp, #12
   4ba08:	movw	r5, #16692	; 0x4134
   4ba0c:	ldr	r2, [r4]
   4ba10:	movt	r5, #9
   4ba14:	ldr	r0, [r3]
   4ba18:	ldr	r6, [sp, #32]
   4ba1c:	str	r2, [sp, #4]
   4ba20:	bl	11104 <fflush@plt>
   4ba24:	mov	r2, #5
   4ba28:	movw	r1, #48812	; 0xbeac
   4ba2c:	mov	r0, #0
   4ba30:	movt	r1, #7
   4ba34:	add	r3, sp, #36	; 0x24
   4ba38:	ldr	r7, [r5]
   4ba3c:	str	r3, [sp]
   4ba40:	bl	11170 <dcgettext@plt>
   4ba44:	movw	r3, #13348	; 0x3424
   4ba48:	movt	r3, #9
   4ba4c:	mov	r1, #1
   4ba50:	ldr	r3, [r3]
   4ba54:	mov	r2, r0
   4ba58:	mov	r0, r7
   4ba5c:	bl	11338 <__fprintf_chk@plt>
   4ba60:	mov	r2, r6
   4ba64:	ldr	r3, [sp]
   4ba68:	mov	r1, #1
   4ba6c:	ldr	r0, [r5]
   4ba70:	bl	11254 <__vfprintf_chk@plt>
   4ba74:	ldr	r2, [sp, #4]
   4ba78:	ldr	r3, [r4]
   4ba7c:	cmp	r2, r3
   4ba80:	bne	4ba94 <warn@@Base+0xa8>
   4ba84:	add	sp, sp, #12
   4ba88:	pop	{r4, r5, r6, r7, lr}
   4ba8c:	add	sp, sp, #16
   4ba90:	bx	lr
   4ba94:	bl	1117c <__stack_chk_fail@plt>
   4ba98:	push	{r4, lr}
   4ba9c:	ldr	r4, [sp, #8]
   4baa0:	sub	ip, r4, #1
   4baa4:	cmp	ip, #7
   4baa8:	ldrls	pc, [pc, ip, lsl #2]
   4baac:	b	4bb0c <warn@@Base+0x120>
   4bab0:	andeq	fp, r4, r4, lsl #22
   4bab4:	strdeq	fp, [r4], -ip
   4bab8:	strdeq	fp, [r4], -r4
   4babc:	andeq	fp, r4, ip, ror #21
   4bac0:	andeq	fp, r4, ip, lsl #22
   4bac4:	andeq	fp, r4, ip, lsl #22
   4bac8:	andeq	fp, r4, ip, lsl #22
   4bacc:	ldrdeq	fp, [r4], -r0
   4bad0:	lsr	ip, r3, #24
   4bad4:	lsr	r1, r3, #16
   4bad8:	strb	r3, [r0, #4]
   4badc:	lsr	r3, r3, #8
   4bae0:	strb	ip, [r0, #7]
   4bae4:	strb	r1, [r0, #6]
   4bae8:	strb	r3, [r0, #5]
   4baec:	lsr	r3, r2, #24
   4baf0:	strb	r3, [r0, #3]
   4baf4:	lsr	r3, r2, #16
   4baf8:	strb	r3, [r0, #2]
   4bafc:	lsr	r3, r2, #8
   4bb00:	strb	r3, [r0, #1]
   4bb04:	strb	r2, [r0]
   4bb08:	pop	{r4, pc}
   4bb0c:	mov	r2, #5
   4bb10:	movw	r1, #48128	; 0xbc00
   4bb14:	mov	r0, #0
   4bb18:	movt	r1, #7
   4bb1c:	bl	11170 <dcgettext@plt>
   4bb20:	mov	r1, r4
   4bb24:	bl	4b2b0 <error@@Base>
   4bb28:	bl	113ec <abort@plt>
   4bb2c:	push	{r3, r4, r5, lr}
   4bb30:	ldr	r4, [sp, #16]
   4bb34:	sub	ip, r4, #1
   4bb38:	cmp	ip, #7
   4bb3c:	ldrls	pc, [pc, ip, lsl #2]
   4bb40:	b	4bbc8 <warn@@Base+0x1dc>
   4bb44:	andeq	fp, r4, r0, asr #23
   4bb48:			; <UNDEFINED> instruction: 0x0004bbb4
   4bb4c:	andeq	fp, r4, r4, lsr #23
   4bb50:	muleq	r4, r4, fp
   4bb54:	andeq	fp, r4, r8, asr #23
   4bb58:	andeq	fp, r4, r8, asr #23
   4bb5c:	andeq	fp, r4, r8, asr #23
   4bb60:	andeq	fp, r4, r4, ror #22
   4bb64:	lsr	r1, r2, #16
   4bb68:	lsr	r5, r3, #16
   4bb6c:	orr	r1, r1, r3, lsl #16
   4bb70:	lsr	r4, r2, #8
   4bb74:	lsr	ip, r2, #24
   4bb78:	strb	r2, [r0, #7]
   4bb7c:	lsr	r2, r1, #16
   4bb80:	mov	r3, #0
   4bb84:	orr	r2, r2, r5, lsl #16
   4bb88:	strb	r1, [r0, #5]
   4bb8c:	strb	r4, [r0, #6]
   4bb90:	strb	ip, [r0, #4]
   4bb94:	lsr	r1, r2, #8
   4bb98:	strb	r2, [r0, #3]
   4bb9c:	orr	r2, r1, r3, lsl #24
   4bba0:	lsr	r3, r3, #8
   4bba4:	lsr	r1, r2, #8
   4bba8:	strb	r2, [r0, #2]
   4bbac:	orr	r2, r1, r3, lsl #24
   4bbb0:	lsr	r3, r3, #8
   4bbb4:	lsr	r1, r2, #8
   4bbb8:	strb	r2, [r0, #1]
   4bbbc:	orr	r2, r1, r3, lsl #24
   4bbc0:	strb	r2, [r0]
   4bbc4:	pop	{r3, r4, r5, pc}
   4bbc8:	mov	r2, #5
   4bbcc:	movw	r1, #48128	; 0xbc00
   4bbd0:	mov	r0, #0
   4bbd4:	movt	r1, #7
   4bbd8:	bl	11170 <dcgettext@plt>
   4bbdc:	mov	r1, r4
   4bbe0:	bl	4b2b0 <error@@Base>
   4bbe4:	bl	113ec <abort@plt>
   4bbe8:	sub	r3, r1, #1
   4bbec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4bbf0:	mov	r4, r1
   4bbf4:	sub	sp, sp, #20
   4bbf8:	cmp	r3, #7
   4bbfc:	ldrls	pc, [pc, r3, lsl #2]
   4bc00:	b	4bec4 <warn@@Base+0x4d8>
   4bc04:	andeq	fp, r4, ip, asr #25
   4bc08:	ldrdeq	fp, [r4], -ip
   4bc0c:	strdeq	fp, [r4], -r4
   4bc10:	andeq	fp, r4, r8, lsl sp
   4bc14:	andeq	fp, r4, r4, asr #26
   4bc18:			; <UNDEFINED> instruction: 0x0004bdb0
   4bc1c:	andeq	fp, r4, ip, lsr #28
   4bc20:	andeq	fp, r4, r4, lsr #24
   4bc24:	ldrb	sl, [r0, #1]
   4bc28:	mov	r7, #0
   4bc2c:	ldrb	r2, [r0, #2]
   4bc30:	ldrb	r6, [r0, #3]
   4bc34:	lsl	r8, sl, #8
   4bc38:	lsr	r9, sl, #24
   4bc3c:	lsl	r4, r2, #16
   4bc40:	lsr	r5, r2, #16
   4bc44:	orr	r4, r4, r8
   4bc48:	ldrb	r8, [r0]
   4bc4c:	strd	r6, [sp]
   4bc50:	orr	r5, r5, r9
   4bc54:	orr	r4, r4, r8
   4bc58:	ldr	r8, [sp]
   4bc5c:	ldr	r7, [sp]
   4bc60:	mov	r9, #0
   4bc64:	ldrb	sl, [r0, #5]
   4bc68:	orr	r5, r5, r9
   4bc6c:	lsl	r2, r8, #24
   4bc70:	ldrb	r8, [r0, #6]
   4bc74:	mov	r9, #0
   4bc78:	lsr	r3, r7, #8
   4bc7c:	ldrb	r7, [r0, #4]
   4bc80:	orr	r4, r4, r2
   4bc84:	strd	r8, [sp]
   4bc88:	orr	r5, r5, r3
   4bc8c:	ldr	ip, [sp]
   4bc90:	mov	r6, #0
   4bc94:	ldrb	r2, [r0, #7]
   4bc98:	lsl	r9, sl, #8
   4bc9c:	orr	r4, r4, r6
   4bca0:	orr	r5, r5, r7
   4bca4:	lsl	fp, ip, #16
   4bca8:	orr	r4, r4, r6
   4bcac:	orr	r5, r5, r9
   4bcb0:	lsl	r1, r2, #24
   4bcb4:	orr	sl, r6, r4
   4bcb8:	orr	fp, fp, r5
   4bcbc:	orr	r0, r6, sl
   4bcc0:	orr	r1, r1, fp
   4bcc4:	add	sp, sp, #20
   4bcc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4bccc:	ldrb	r0, [r0]
   4bcd0:	mov	r1, #0
   4bcd4:	add	sp, sp, #20
   4bcd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4bcdc:	ldrb	r2, [r0, #1]
   4bce0:	mov	r1, #0
   4bce4:	ldrb	r3, [r0]
   4bce8:	orr	r0, r3, r2, lsl #8
   4bcec:	add	sp, sp, #20
   4bcf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4bcf4:	ldrb	r1, [r0, #2]
   4bcf8:	ldrb	r2, [r0, #1]
   4bcfc:	ldrb	r3, [r0]
   4bd00:	lsl	r0, r1, #16
   4bd04:	mov	r1, #0
   4bd08:	orr	r0, r0, r2, lsl #8
   4bd0c:	orr	r0, r0, r3
   4bd10:	add	sp, sp, #20
   4bd14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4bd18:	ldrb	r1, [r0, #2]
   4bd1c:	ldrb	ip, [r0, #1]
   4bd20:	ldrb	r3, [r0]
   4bd24:	ldrb	r2, [r0, #3]
   4bd28:	lsl	r1, r1, #16
   4bd2c:	orr	r0, r1, ip, lsl #8
   4bd30:	mov	r1, #0
   4bd34:	orr	r0, r0, r3
   4bd38:	orr	r0, r0, r2, lsl #24
   4bd3c:	add	sp, sp, #20
   4bd40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4bd44:	ldrb	r2, [r0, #3]
   4bd48:	mov	r3, #0
   4bd4c:	ldrb	sl, [r0, #1]
   4bd50:	mov	fp, #0
   4bd54:	ldrb	r4, [r0, #2]
   4bd58:	strd	r2, [sp]
   4bd5c:	mov	r2, #0
   4bd60:	ldr	r3, [sp]
   4bd64:	lsr	r9, sl, #24
   4bd68:	lsl	r8, sl, #8
   4bd6c:	lsl	r6, r4, #16
   4bd70:	ldrb	sl, [r0]
   4bd74:	orr	r6, r6, r8
   4bd78:	lsr	r5, r3, #8
   4bd7c:	ldrb	r3, [r0, #4]
   4bd80:	orr	r0, r6, sl
   4bd84:	ldr	r6, [sp]
   4bd88:	lsr	r7, r4, #16
   4bd8c:	orr	r7, r7, r9
   4bd90:	orr	r1, r7, fp
   4bd94:	lsl	r4, r6, #24
   4bd98:	orr	r0, r0, r4
   4bd9c:	orr	r1, r1, r5
   4bda0:	orr	r0, r0, r2
   4bda4:	orr	r1, r1, r3
   4bda8:	add	sp, sp, #20
   4bdac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4bdb0:	ldrb	r6, [r0, #3]
   4bdb4:	mov	r7, #0
   4bdb8:	ldrb	sl, [r0, #1]
   4bdbc:	ldrb	r8, [r0, #2]
   4bdc0:	strd	r6, [sp]
   4bdc4:	mov	r6, #0
   4bdc8:	lsl	r4, sl, #8
   4bdcc:	ldr	r7, [sp]
   4bdd0:	lsl	r2, r8, #16
   4bdd4:	ldr	ip, [sp]
   4bdd8:	lsr	r5, sl, #24
   4bddc:	orr	r2, r2, r4
   4bde0:	lsr	r3, r8, #16
   4bde4:	ldrb	r4, [r0]
   4bde8:	orr	r3, r3, r5
   4bdec:	ldrb	sl, [r0, #5]
   4bdf0:	lsr	r9, r7, #8
   4bdf4:	orr	r4, r4, r2
   4bdf8:	ldrb	r7, [r0, #4]
   4bdfc:	lsl	r8, ip, #24
   4be00:	mov	r5, #0
   4be04:	orr	r5, r5, r3
   4be08:	orr	r4, r4, r8
   4be0c:	orr	r5, r5, r9
   4be10:	lsl	r1, sl, #8
   4be14:	orr	r4, r4, r6
   4be18:	orr	r5, r5, r7
   4be1c:	orr	r0, r6, r4
   4be20:	orr	r1, r1, r5
   4be24:	add	sp, sp, #20
   4be28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4be2c:	ldrb	sl, [r0, #1]
   4be30:	mov	r7, #0
   4be34:	ldrb	r6, [r0, #3]
   4be38:	mov	fp, #0
   4be3c:	ldrb	r4, [r0, #2]
   4be40:	lsr	r9, sl, #24
   4be44:	lsl	r8, sl, #8
   4be48:	ldrb	sl, [r0, #5]
   4be4c:	strd	r6, [sp]
   4be50:	lsl	r2, r4, #16
   4be54:	ldr	r7, [sp]
   4be58:	lsr	r3, r4, #16
   4be5c:	strd	sl, [sp, #8]
   4be60:	orr	r2, r2, r8
   4be64:	ldr	fp, [sp]
   4be68:	orr	r3, r3, r9
   4be6c:	ldrb	r8, [r0]
   4be70:	lsr	r5, r7, #8
   4be74:	ldr	ip, [sp, #8]
   4be78:	mov	r9, #0
   4be7c:	ldrb	r7, [r0, #4]
   4be80:	lsl	r4, fp, #24
   4be84:	ldrb	r0, [r0, #6]
   4be88:	orr	r2, r2, r8
   4be8c:	orr	r3, r3, r9
   4be90:	orr	r2, r2, r4
   4be94:	orr	r3, r3, r5
   4be98:	mov	r6, #0
   4be9c:	lsl	fp, ip, #8
   4bea0:	orr	r2, r2, r6
   4bea4:	orr	r3, r3, r7
   4bea8:	lsl	r9, r0, #16
   4beac:	orr	r1, r3, fp
   4beb0:	orr	r0, r2, r6
   4beb4:	orr	r0, r0, r6
   4beb8:	orr	r1, r1, r9
   4bebc:	add	sp, sp, #20
   4bec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4bec4:	mov	r2, #5
   4bec8:	movw	r1, #48128	; 0xbc00
   4becc:	mov	r0, #0
   4bed0:	movt	r1, #7
   4bed4:	bl	11170 <dcgettext@plt>
   4bed8:	mov	r1, r4
   4bedc:	bl	4b2b0 <error@@Base>
   4bee0:	bl	113ec <abort@plt>
   4bee4:	movw	r3, #26492	; 0x677c
   4bee8:	movt	r3, #9
   4beec:	push	{r4, lr}
   4bef0:	mov	r4, r1
   4bef4:	ldr	r3, [r3]
   4bef8:	blx	r3
   4befc:	sub	r3, r4, #1
   4bf00:	cmp	r3, #7
   4bf04:	ldrls	pc, [pc, r3, lsl #2]
   4bf08:	b	4bfa0 <warn@@Base+0x5b4>
   4bf0c:	andeq	fp, r4, ip, asr #30
   4bf10:	andeq	fp, r4, r8, ror #30
   4bf14:	andeq	fp, r4, r4, lsl #31
   4bf18:	andeq	fp, r4, r0, lsr pc
   4bf1c:	andeq	fp, r4, ip, lsr #30
   4bf20:	andeq	fp, r4, ip, lsr #30
   4bf24:	andeq	fp, r4, ip, lsr #30
   4bf28:	andeq	fp, r4, ip, lsr #30
   4bf2c:	pop	{r4, pc}
   4bf30:	mov	r2, #-2147483648	; 0x80000000
   4bf34:	eor	r0, r0, r2
   4bf38:	mov	r3, #0
   4bf3c:	adds	r0, r0, #-2147483648	; 0x80000000
   4bf40:	eor	r1, r1, r3
   4bf44:	sbc	r1, r1, #0
   4bf48:	pop	{r4, pc}
   4bf4c:	mov	r2, #128	; 0x80
   4bf50:	eor	r0, r0, r2
   4bf54:	mov	r3, #0
   4bf58:	subs	r0, r0, #128	; 0x80
   4bf5c:	eor	r1, r1, r3
   4bf60:	sbc	r1, r1, #0
   4bf64:	pop	{r4, pc}
   4bf68:	mov	r2, #32768	; 0x8000
   4bf6c:	eor	r0, r0, r2
   4bf70:	mov	r3, #0
   4bf74:	subs	r0, r0, #32768	; 0x8000
   4bf78:	eor	r1, r1, r3
   4bf7c:	sbc	r1, r1, #0
   4bf80:	pop	{r4, pc}
   4bf84:	mov	r2, #8388608	; 0x800000
   4bf88:	eor	r0, r0, r2
   4bf8c:	mov	r3, #0
   4bf90:	subs	r0, r0, #8388608	; 0x800000
   4bf94:	eor	r1, r1, r3
   4bf98:	sbc	r1, r1, #0
   4bf9c:	pop	{r4, pc}
   4bfa0:	bl	113ec <abort@plt>
   4bfa4:	movw	ip, #26492	; 0x677c
   4bfa8:	movt	ip, #9
   4bfac:	movw	r3, #45916	; 0xb35c
   4bfb0:	movt	r3, #4
   4bfb4:	ldr	ip, [ip]
   4bfb8:	push	{r4, r5, r6, lr}
   4bfbc:	cmp	ip, r3
   4bfc0:	mov	r5, r1
   4bfc4:	mov	r6, r2
   4bfc8:	mov	r4, r0
   4bfcc:	beq	4bff4 <warn@@Base+0x608>
   4bfd0:	add	r0, r0, #4
   4bfd4:	mov	r1, #4
   4bfd8:	bl	4bbe8 <warn@@Base+0x1fc>
   4bfdc:	strd	r0, [r5]
   4bfe0:	mov	r0, r4
   4bfe4:	mov	r1, #4
   4bfe8:	bl	4bbe8 <warn@@Base+0x1fc>
   4bfec:	strd	r0, [r6]
   4bff0:	pop	{r4, r5, r6, pc}
   4bff4:	mov	r1, #4
   4bff8:	bl	4b35c <error@@Base+0xac>
   4bffc:	strd	r0, [r5]
   4c000:	add	r0, r4, #4
   4c004:	mov	r1, #4
   4c008:	bl	4b35c <error@@Base+0xac>
   4c00c:	strd	r0, [r6]
   4c010:	pop	{r4, r5, r6, pc}
   4c014:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4c018:	mov	r7, r1
   4c01c:	mov	r4, r2
   4c020:	mov	r6, r0
   4c024:	bl	4ea80 <warn@@Base+0x3094>
   4c028:	ldrb	r3, [r7]
   4c02c:	cmp	r3, #47	; 0x2f
   4c030:	beq	4c090 <warn@@Base+0x6a4>
   4c034:	cmp	r6, r0
   4c038:	beq	4c090 <warn@@Base+0x6a4>
   4c03c:	rsb	r5, r6, r0
   4c040:	add	r9, r5, r4
   4c044:	add	r0, r9, #1
   4c048:	cmp	r0, r5
   4c04c:	cmpcs	r0, r4
   4c050:	movcs	sl, #0
   4c054:	movcc	sl, #1
   4c058:	bcc	4c0c0 <warn@@Base+0x6d4>
   4c05c:	bl	11224 <malloc@plt>
   4c060:	subs	r8, r0, #0
   4c064:	beq	4c0e4 <warn@@Base+0x6f8>
   4c068:	mov	r1, r6
   4c06c:	mov	r2, r5
   4c070:	bl	11134 <memcpy@plt>
   4c074:	add	r0, r8, r5
   4c078:	mov	r1, r7
   4c07c:	mov	r2, r4
   4c080:	bl	11134 <memcpy@plt>
   4c084:	strb	sl, [r8, r9]
   4c088:	mov	r0, r8
   4c08c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c090:	adds	r0, r4, #1
   4c094:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c098:	bl	11224 <malloc@plt>
   4c09c:	subs	r5, r0, #0
   4c0a0:	beq	4c100 <warn@@Base+0x714>
   4c0a4:	mov	r1, r7
   4c0a8:	mov	r2, r4
   4c0ac:	bl	11134 <memcpy@plt>
   4c0b0:	mov	r3, #0
   4c0b4:	mov	r0, r5
   4c0b8:	strb	r3, [r5, r4]
   4c0bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c0c0:	mov	r2, #5
   4c0c4:	movw	r1, #48844	; 0xbecc
   4c0c8:	mov	r0, #0
   4c0cc:	movt	r1, #7
   4c0d0:	bl	11170 <dcgettext@plt>
   4c0d4:	mov	r1, r4
   4c0d8:	bl	4b2b0 <error@@Base>
   4c0dc:	mov	r0, #0
   4c0e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c0e4:	mov	r2, #5
   4c0e8:	movw	r1, #48828	; 0xbebc
   4c0ec:	movt	r1, #7
   4c0f0:	bl	11170 <dcgettext@plt>
   4c0f4:	bl	4b2b0 <error@@Base>
   4c0f8:	mov	r0, r8
   4c0fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c100:	mov	r2, #5
   4c104:	movw	r1, #48828	; 0xbebc
   4c108:	movt	r1, #7
   4c10c:	bl	11170 <dcgettext@plt>
   4c110:	bl	4b2b0 <error@@Base>
   4c114:	mov	r0, r5
   4c118:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c11c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4c120:	mov	r6, r0
   4c124:	mov	r0, r1
   4c128:	mov	r8, r2
   4c12c:	mov	r4, r3
   4c130:	mov	sl, r1
   4c134:	bl	112e4 <__strdup@plt>
   4c138:	mov	r7, #0
   4c13c:	mov	r9, #8
   4c140:	str	r4, [r6, #44]	; 0x2c
   4c144:	str	r8, [r6, #4]
   4c148:	mov	r4, #0
   4c14c:	mov	r5, #0
   4c150:	str	r7, [r6, #16]
   4c154:	strd	r4, [r6, #8]
   4c158:	mov	r1, r9
   4c15c:	mov	r2, r7
   4c160:	str	r7, [r6, #20]
   4c164:	str	r7, [r6, #24]
   4c168:	str	r7, [r6, #28]
   4c16c:	str	r7, [r6, #32]
   4c170:	str	r7, [r6, #36]	; 0x24
   4c174:	str	r7, [r6, #48]	; 0x30
   4c178:	str	r9, [r6, #40]	; 0x28
   4c17c:	str	r0, [r6]
   4c180:	mov	r0, r8
   4c184:	bl	113bc <fseek@plt>
   4c188:	subs	r4, r0, #0
   4c18c:	bne	4c2a4 <warn@@Base+0x8b8>
   4c190:	add	r5, r6, #52	; 0x34
   4c194:	mov	r1, #1
   4c198:	mov	r2, #60	; 0x3c
   4c19c:	mov	r3, r8
   4c1a0:	mov	r0, r5
   4c1a4:	bl	111f4 <fread@plt>
   4c1a8:	cmp	r0, #60	; 0x3c
   4c1ac:	beq	4c1c0 <warn@@Base+0x7d4>
   4c1b0:	cmp	r0, #0
   4c1b4:	bne	4c2cc <warn@@Base+0x8e0>
   4c1b8:	mov	r0, r4
   4c1bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c1c0:	movw	r1, #48940	; 0xbf2c
   4c1c4:	mov	r0, r5
   4c1c8:	movt	r1, #7
   4c1cc:	mov	r2, #16
   4c1d0:	bl	113e0 <strncmp@plt>
   4c1d4:	cmp	r0, #0
   4c1d8:	beq	4c2f4 <warn@@Base+0x908>
   4c1dc:	movw	r1, #48960	; 0xbf40
   4c1e0:	mov	r0, r5
   4c1e4:	movt	r1, #7
   4c1e8:	mov	r2, #16
   4c1ec:	bl	113e0 <strncmp@plt>
   4c1f0:	cmp	r0, #0
   4c1f4:	beq	4c33c <warn@@Base+0x950>
   4c1f8:	ldr	r3, [sp, #32]
   4c1fc:	cmp	r3, #0
   4c200:	bne	4c360 <warn@@Base+0x974>
   4c204:	mov	r0, r5
   4c208:	movw	r1, #49008	; 0xbf70
   4c20c:	mov	r2, #16
   4c210:	movt	r1, #7
   4c214:	bl	113e0 <strncmp@plt>
   4c218:	subs	r5, r0, #0
   4c21c:	bne	4c1b8 <warn@@Base+0x7cc>
   4c220:	add	r0, r6, #100	; 0x64
   4c224:	mov	r1, r5
   4c228:	mov	r2, #10
   4c22c:	bl	11290 <strtoul@plt>
   4c230:	cmp	r0, #7
   4c234:	mov	r4, r0
   4c238:	str	r0, [r6, #32]
   4c23c:	bls	4c3b8 <warn@@Base+0x9cc>
   4c240:	cmp	r0, #0
   4c244:	blt	4c314 <warn@@Base+0x928>
   4c248:	ldr	r3, [r6, #40]	; 0x28
   4c24c:	add	r0, r0, #1
   4c250:	add	r3, r3, #60	; 0x3c
   4c254:	add	r3, r3, r4
   4c258:	str	r3, [r6, #40]	; 0x28
   4c25c:	bl	11224 <malloc@plt>
   4c260:	cmp	r0, #0
   4c264:	str	r0, [r6, #28]
   4c268:	beq	4c3dc <warn@@Base+0x9f0>
   4c26c:	mov	r1, r4
   4c270:	mov	r2, #1
   4c274:	mov	r3, r8
   4c278:	bl	111f4 <fread@plt>
   4c27c:	cmp	r0, #1
   4c280:	bne	4c388 <warn@@Base+0x99c>
   4c284:	ldr	r3, [r6, #32]
   4c288:	tst	r3, #1
   4c28c:	bne	4c3cc <warn@@Base+0x9e0>
   4c290:	ldr	r1, [r6, #28]
   4c294:	mov	r2, #0
   4c298:	mov	r4, r2
   4c29c:	strb	r2, [r1, r3]
   4c2a0:	b	4c1b8 <warn@@Base+0x7cc>
   4c2a4:	mov	r2, #5
   4c2a8:	mov	r0, r7
   4c2ac:	movw	r1, #48896	; 0xbf00
   4c2b0:	movt	r1, #7
   4c2b4:	bl	11170 <dcgettext@plt>
   4c2b8:	mov	r4, #1
   4c2bc:	mov	r1, sl
   4c2c0:	bl	4b2b0 <error@@Base>
   4c2c4:	mov	r0, r4
   4c2c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c2cc:	mov	r2, #5
   4c2d0:	mov	r0, r4
   4c2d4:	movw	r1, #28496	; 0x6f50
   4c2d8:	movt	r1, #6
   4c2dc:	bl	11170 <dcgettext@plt>
   4c2e0:	mov	r4, #1
   4c2e4:	mov	r1, sl
   4c2e8:	bl	4b2b0 <error@@Base>
   4c2ec:	mov	r0, r4
   4c2f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4c2f4:	mov	r0, r6
   4c2f8:	mov	r1, #4
   4c2fc:	ldr	r2, [sp, #32]
   4c300:	bl	4b658 <error@@Base+0x3a8>
   4c304:	cmp	r0, #0
   4c308:	bne	4c204 <warn@@Base+0x818>
   4c30c:	mov	r4, #1
   4c310:	b	4c1b8 <warn@@Base+0x7cc>
   4c314:	movw	r1, #49076	; 0xbfb4
   4c318:	movt	r1, #7
   4c31c:	mov	r0, r5
   4c320:	mov	r2, #5
   4c324:	bl	11170 <dcgettext@plt>
   4c328:	mov	r1, sl
   4c32c:	ldr	r2, [r6, #32]
   4c330:	mov	r4, #1
   4c334:	bl	4b2b0 <error@@Base>
   4c338:	b	4c1b8 <warn@@Base+0x7cc>
   4c33c:	mov	r3, #1
   4c340:	mov	r1, r9
   4c344:	mov	r0, r6
   4c348:	str	r3, [r6, #48]	; 0x30
   4c34c:	ldr	r2, [sp, #32]
   4c350:	bl	4b658 <error@@Base+0x3a8>
   4c354:	cmp	r0, #0
   4c358:	bne	4c204 <warn@@Base+0x818>
   4c35c:	b	4c30c <warn@@Base+0x920>
   4c360:	mov	r0, r4
   4c364:	mov	r2, #5
   4c368:	movw	r1, #48980	; 0xbf54
   4c36c:	movt	r1, #7
   4c370:	bl	11170 <dcgettext@plt>
   4c374:	mov	r2, sl
   4c378:	mov	r1, r0
   4c37c:	mov	r0, #1
   4c380:	bl	1132c <__printf_chk@plt>
   4c384:	b	4c204 <warn@@Base+0x818>
   4c388:	ldr	r0, [r6, #28]
   4c38c:	mov	r4, #1
   4c390:	bl	1111c <free@plt>
   4c394:	str	r5, [r6, #28]
   4c398:	mov	r0, r5
   4c39c:	mov	r2, #5
   4c3a0:	movw	r1, #49176	; 0xc018
   4c3a4:	movt	r1, #7
   4c3a8:	bl	11170 <dcgettext@plt>
   4c3ac:	mov	r1, sl
   4c3b0:	bl	4b2b0 <error@@Base>
   4c3b4:	b	4c1b8 <warn@@Base+0x7cc>
   4c3b8:	movw	r1, #49028	; 0xbf84
   4c3bc:	mov	r0, r5
   4c3c0:	mov	r2, #5
   4c3c4:	movt	r1, #7
   4c3c8:	b	4c324 <warn@@Base+0x938>
   4c3cc:	mov	r0, r8
   4c3d0:	bl	11140 <_IO_getc@plt>
   4c3d4:	ldr	r3, [r6, #32]
   4c3d8:	b	4c290 <warn@@Base+0x8a4>
   4c3dc:	mov	r2, #5
   4c3e0:	movw	r1, #49124	; 0xbfe4
   4c3e4:	movt	r1, #7
   4c3e8:	mov	r4, #1
   4c3ec:	bl	11170 <dcgettext@plt>
   4c3f0:	bl	4b2b0 <error@@Base>
   4c3f4:	b	4c1b8 <warn@@Base+0x7cc>
   4c3f8:	push	{r4, lr}
   4c3fc:	mov	r4, r0
   4c400:	ldr	r0, [r0]
   4c404:	cmp	r0, #0
   4c408:	beq	4c410 <warn@@Base+0xa24>
   4c40c:	bl	1111c <free@plt>
   4c410:	ldr	r0, [r4, #16]
   4c414:	cmp	r0, #0
   4c418:	beq	4c420 <warn@@Base+0xa34>
   4c41c:	bl	1111c <free@plt>
   4c420:	ldr	r0, [r4, #20]
   4c424:	cmp	r0, #0
   4c428:	beq	4c430 <warn@@Base+0xa44>
   4c42c:	bl	1111c <free@plt>
   4c430:	ldr	r0, [r4, #28]
   4c434:	cmp	r0, #0
   4c438:	popeq	{r4, pc}
   4c43c:	pop	{r4, lr}
   4c440:	b	1111c <free@plt>
   4c444:	push	{r4, r5, lr}
   4c448:	mov	r4, r0
   4c44c:	ldr	r0, [r0]
   4c450:	sub	sp, sp, #12
   4c454:	mov	r5, r1
   4c458:	cmp	r0, #0
   4c45c:	beq	4c46c <warn@@Base+0xa80>
   4c460:	bl	110f8 <strcmp@plt>
   4c464:	cmp	r0, #0
   4c468:	beq	4c4b4 <warn@@Base+0xac8>
   4c46c:	ldr	r0, [r4, #4]
   4c470:	cmp	r0, #0
   4c474:	beq	4c47c <warn@@Base+0xa90>
   4c478:	bl	11344 <fclose@plt>
   4c47c:	mov	r0, r4
   4c480:	bl	4c3f8 <warn@@Base+0xa0c>
   4c484:	mov	r0, r5
   4c488:	movw	r1, #28608	; 0x6fc0
   4c48c:	movt	r1, #6
   4c490:	bl	1138c <fopen64@plt>
   4c494:	subs	r2, r0, #0
   4c498:	moveq	r0, #1
   4c49c:	beq	4c4b4 <warn@@Base+0xac8>
   4c4a0:	mov	r3, #0
   4c4a4:	mov	r0, r4
   4c4a8:	mov	r1, r5
   4c4ac:	str	r3, [sp]
   4c4b0:	bl	4c11c <warn@@Base+0x730>
   4c4b4:	add	sp, sp, #12
   4c4b8:	pop	{r4, r5, pc}
   4c4bc:	push	{r4, r5, r6, lr}
   4c4c0:	mov	r4, r0
   4c4c4:	mov	r5, r2
   4c4c8:	ldr	r0, [r0, #4]
   4c4cc:	mov	r2, #0
   4c4d0:	bl	113bc <fseek@plt>
   4c4d4:	subs	r6, r0, #0
   4c4d8:	bne	4c568 <warn@@Base+0xb7c>
   4c4dc:	add	r0, r4, #52	; 0x34
   4c4e0:	mov	r1, #1
   4c4e4:	mov	r2, #60	; 0x3c
   4c4e8:	ldr	r3, [r4, #4]
   4c4ec:	bl	111f4 <fread@plt>
   4c4f0:	cmp	r0, #60	; 0x3c
   4c4f4:	bne	4c524 <warn@@Base+0xb38>
   4c4f8:	movw	r1, #28532	; 0x6f74
   4c4fc:	add	r0, r4, #110	; 0x6e
   4c500:	movt	r1, #6
   4c504:	mov	r2, #2
   4c508:	bl	11158 <memcmp@plt>
   4c50c:	cmp	r0, #0
   4c510:	bne	4c548 <warn@@Base+0xb5c>
   4c514:	mov	r0, r4
   4c518:	mov	r1, r5
   4c51c:	pop	{r4, r5, r6, lr}
   4c520:	b	4c588 <warn@@Base+0xb9c>
   4c524:	mov	r0, r6
   4c528:	movw	r1, #28496	; 0x6f50
   4c52c:	mov	r2, #5
   4c530:	movt	r1, #6
   4c534:	bl	11170 <dcgettext@plt>
   4c538:	ldr	r1, [r4]
   4c53c:	bl	4b2b0 <error@@Base>
   4c540:	mov	r0, #0
   4c544:	pop	{r4, r5, r6, pc}
   4c548:	mov	r0, r6
   4c54c:	mov	r2, #5
   4c550:	movw	r1, #28536	; 0x6f78
   4c554:	movt	r1, #6
   4c558:	bl	11170 <dcgettext@plt>
   4c55c:	ldr	r1, [r4]
   4c560:	bl	4b2b0 <error@@Base>
   4c564:	b	4c540 <warn@@Base+0xb54>
   4c568:	mov	r2, #5
   4c56c:	movw	r1, #49228	; 0xc04c
   4c570:	mov	r0, #0
   4c574:	movt	r1, #7
   4c578:	bl	11170 <dcgettext@plt>
   4c57c:	ldr	r1, [r4]
   4c580:	bl	4b2b0 <error@@Base>
   4c584:	b	4c540 <warn@@Base+0xb54>
   4c588:	push	{r4, r5, r6, r7, r8, lr}
   4c58c:	movw	r4, #16680	; 0x4128
   4c590:	movt	r4, #9
   4c594:	ldrb	r3, [r0, #52]	; 0x34
   4c598:	sub	sp, sp, #8
   4c59c:	mov	r5, r0
   4c5a0:	ldr	r2, [r4]
   4c5a4:	cmp	r3, #47	; 0x2f
   4c5a8:	mov	r7, r1
   4c5ac:	movne	r3, #0
   4c5b0:	str	r2, [sp, #4]
   4c5b4:	movne	r2, r0
   4c5b8:	bne	4c5d0 <warn@@Base+0xbe4>
   4c5bc:	b	4c63c <warn@@Base+0xc50>
   4c5c0:	add	r2, r2, #1
   4c5c4:	ldrb	r1, [r2, #52]	; 0x34
   4c5c8:	cmp	r1, #47	; 0x2f
   4c5cc:	beq	4c628 <warn@@Base+0xc3c>
   4c5d0:	add	r3, r3, #1
   4c5d4:	cmp	r3, #16
   4c5d8:	bne	4c5c0 <warn@@Base+0xbd4>
   4c5dc:	mov	r0, #17
   4c5e0:	bl	4eba0 <warn@@Base+0x31b4>
   4c5e4:	ldr	r7, [r5, #52]!	; 0x34
   4c5e8:	mov	r2, #0
   4c5ec:	ldr	r6, [r5, #4]
   4c5f0:	ldr	ip, [r5, #8]
   4c5f4:	ldr	r1, [r5, #12]
   4c5f8:	mov	r3, r0
   4c5fc:	str	r7, [r3]
   4c600:	str	r6, [r3, #4]
   4c604:	str	ip, [r3, #8]
   4c608:	str	r1, [r3, #12]
   4c60c:	strb	r2, [r3, #16]
   4c610:	ldr	r2, [sp, #4]
   4c614:	ldr	r3, [r4]
   4c618:	cmp	r2, r3
   4c61c:	bne	4c824 <warn@@Base+0xe38>
   4c620:	add	sp, sp, #8
   4c624:	pop	{r4, r5, r6, r7, r8, pc}
   4c628:	add	r3, r5, r3
   4c62c:	mov	r2, #0
   4c630:	add	r0, r5, #52	; 0x34
   4c634:	strb	r2, [r3, #52]	; 0x34
   4c638:	b	4c610 <warn@@Base+0xc24>
   4c63c:	ldr	r3, [r0, #28]
   4c640:	cmp	r3, #0
   4c644:	beq	4c654 <warn@@Base+0xc68>
   4c648:	ldr	r3, [r0, #32]
   4c64c:	cmp	r3, #0
   4c650:	bne	4c674 <warn@@Base+0xc88>
   4c654:	mov	r2, #5
   4c658:	movw	r1, #49268	; 0xc074
   4c65c:	mov	r0, #0
   4c660:	movt	r1, #7
   4c664:	bl	11170 <dcgettext@plt>
   4c668:	bl	4b2b0 <error@@Base>
   4c66c:	mov	r0, #0
   4c670:	b	4c610 <warn@@Base+0xc24>
   4c674:	mov	r6, #0
   4c678:	add	r0, r0, #53	; 0x35
   4c67c:	str	r6, [r5, #36]	; 0x24
   4c680:	mov	r1, sp
   4c684:	mov	r2, #10
   4c688:	bl	11290 <strtoul@plt>
   4c68c:	ldr	r3, [r5, #44]	; 0x2c
   4c690:	cmp	r3, r6
   4c694:	mov	r8, r0
   4c698:	bne	4c744 <warn@@Base+0xd58>
   4c69c:	ldr	r2, [r5, #32]
   4c6a0:	cmp	r8, r2
   4c6a4:	bhi	4c7d4 <warn@@Base+0xde8>
   4c6a8:	ldr	r1, [r5, #28]
   4c6ac:	bcs	4c7f8 <warn@@Base+0xe0c>
   4c6b0:	ldrb	r3, [r1, r8]
   4c6b4:	add	r6, r1, r8
   4c6b8:	cmp	r3, #10
   4c6bc:	beq	4c7f8 <warn@@Base+0xe0c>
   4c6c0:	cmp	r3, #0
   4c6c4:	mov	r3, r8
   4c6c8:	bne	4c734 <warn@@Base+0xd48>
   4c6cc:	cmp	r3, #0
   4c6d0:	bne	4c774 <warn@@Base+0xd88>
   4c6d4:	mov	r2, r3
   4c6d8:	mov	r6, #0
   4c6dc:	strb	r6, [r1, r2]
   4c6e0:	ldr	r3, [r5, #44]	; 0x2c
   4c6e4:	cmp	r3, r6
   4c6e8:	beq	4c7c8 <warn@@Base+0xddc>
   4c6ec:	ldr	r3, [r5, #36]	; 0x24
   4c6f0:	cmp	r3, r6
   4c6f4:	beq	4c7c8 <warn@@Base+0xddc>
   4c6f8:	cmp	r2, r8
   4c6fc:	bhi	4c790 <warn@@Base+0xda4>
   4c700:	mov	r2, #5
   4c704:	movw	r1, #49392	; 0xc0f0
   4c708:	mov	r0, r6
   4c70c:	movt	r1, #7
   4c710:	bl	11170 <dcgettext@plt>
   4c714:	bl	4b2b0 <error@@Base>
   4c718:	mov	r0, r6
   4c71c:	b	4c610 <warn@@Base+0xc24>
   4c720:	ldrb	ip, [r6, #1]!
   4c724:	cmp	ip, #10
   4c728:	beq	4c6cc <warn@@Base+0xce0>
   4c72c:	cmp	ip, #0
   4c730:	beq	4c6cc <warn@@Base+0xce0>
   4c734:	add	r3, r3, #1
   4c738:	cmp	r2, r3
   4c73c:	bhi	4c720 <warn@@Base+0xd34>
   4c740:	b	4c6cc <warn@@Base+0xce0>
   4c744:	ldr	r0, [sp]
   4c748:	cmp	r0, r6
   4c74c:	beq	4c69c <warn@@Base+0xcb0>
   4c750:	ldrb	r3, [r0]
   4c754:	cmp	r3, #58	; 0x3a
   4c758:	bne	4c69c <warn@@Base+0xcb0>
   4c75c:	add	r0, r0, #1
   4c760:	mov	r1, r6
   4c764:	mov	r2, #10
   4c768:	bl	11290 <strtoul@plt>
   4c76c:	str	r0, [r5, #36]	; 0x24
   4c770:	b	4c69c <warn@@Base+0xcb0>
   4c774:	sub	r0, r3, #1
   4c778:	ldrb	ip, [r1, r0]
   4c77c:	cmp	ip, #47	; 0x2f
   4c780:	moveq	r3, r0
   4c784:	cmp	r3, r2
   4c788:	bhi	4c6d8 <warn@@Base+0xcec>
   4c78c:	b	4c6d4 <warn@@Base+0xce8>
   4c790:	ldr	r1, [r5, #28]
   4c794:	rsb	r2, r8, r2
   4c798:	ldr	r0, [r5]
   4c79c:	add	r1, r1, r8
   4c7a0:	bl	4c014 <warn@@Base+0x628>
   4c7a4:	subs	r6, r0, #0
   4c7a8:	beq	4c7c0 <warn@@Base+0xdd4>
   4c7ac:	mov	r0, r7
   4c7b0:	mov	r1, r6
   4c7b4:	bl	4c444 <warn@@Base+0xa58>
   4c7b8:	subs	r2, r0, #0
   4c7bc:	beq	4c800 <warn@@Base+0xe14>
   4c7c0:	mov	r0, r6
   4c7c4:	bl	1111c <free@plt>
   4c7c8:	ldr	r0, [r5, #28]
   4c7cc:	add	r0, r0, r8
   4c7d0:	b	4c610 <warn@@Base+0xc24>
   4c7d4:	mov	r2, #5
   4c7d8:	movw	r1, #49332	; 0xc0b4
   4c7dc:	mov	r0, #0
   4c7e0:	movt	r1, #7
   4c7e4:	bl	11170 <dcgettext@plt>
   4c7e8:	mov	r1, r8
   4c7ec:	bl	4b2b0 <error@@Base>
   4c7f0:	mov	r0, #0
   4c7f4:	b	4c610 <warn@@Base+0xc24>
   4c7f8:	mov	r3, r8
   4c7fc:	b	4c6cc <warn@@Base+0xce0>
   4c800:	mov	r0, r7
   4c804:	ldr	r1, [r5, #36]	; 0x24
   4c808:	bl	4c4bc <warn@@Base+0xad0>
   4c80c:	subs	r7, r0, #0
   4c810:	beq	4c7c0 <warn@@Base+0xdd4>
   4c814:	mov	r0, r6
   4c818:	bl	1111c <free@plt>
   4c81c:	mov	r0, r7
   4c820:	b	4c610 <warn@@Base+0xc24>
   4c824:	bl	1117c <__stack_chk_fail@plt>
   4c828:	push	{r4, r5, r6, r7, r8, r9, lr}
   4c82c:	mov	r4, r0
   4c830:	sub	sp, sp, #28
   4c834:	mov	r5, r2
   4c838:	mov	r8, r1
   4c83c:	mov	r2, #5
   4c840:	movw	r1, #50908	; 0xc6dc
   4c844:	mov	r0, #0
   4c848:	movt	r1, #5
   4c84c:	bl	11170 <dcgettext@plt>
   4c850:	ldr	r6, [r4]
   4c854:	mov	r9, r0
   4c858:	mov	r0, r6
   4c85c:	bl	1129c <strlen@plt>
   4c860:	mov	r7, r0
   4c864:	mov	r0, r5
   4c868:	bl	1129c <strlen@plt>
   4c86c:	ldr	r3, [r4, #44]	; 0x2c
   4c870:	cmp	r3, #0
   4c874:	add	r7, r0, r7
   4c878:	add	r1, r7, #3
   4c87c:	bne	4c8c4 <warn@@Base+0xed8>
   4c880:	mov	r0, r1
   4c884:	str	r1, [sp, #20]
   4c888:	bl	11224 <malloc@plt>
   4c88c:	ldr	r1, [sp, #20]
   4c890:	subs	r4, r0, #0
   4c894:	beq	4c994 <warn@@Base+0xfa8>
   4c898:	str	r6, [sp, #4]
   4c89c:	movw	ip, #49448	; 0xc128
   4c8a0:	str	r5, [sp, #8]
   4c8a4:	movt	ip, #7
   4c8a8:	mov	r2, #1
   4c8ac:	mvn	r3, #0
   4c8b0:	str	ip, [sp]
   4c8b4:	bl	113f8 <__snprintf_chk@plt>
   4c8b8:	mov	r0, r4
   4c8bc:	add	sp, sp, #28
   4c8c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4c8c4:	ldr	r3, [r4, #36]	; 0x24
   4c8c8:	cmp	r3, #0
   4c8cc:	beq	4c93c <warn@@Base+0xf50>
   4c8d0:	ldr	r0, [r8]
   4c8d4:	cmp	r0, #0
   4c8d8:	beq	4c980 <warn@@Base+0xf94>
   4c8dc:	bl	1129c <strlen@plt>
   4c8e0:	add	r7, r7, #5
   4c8e4:	add	r1, r7, r0
   4c8e8:	mov	r0, r1
   4c8ec:	str	r1, [sp, #20]
   4c8f0:	bl	11224 <malloc@plt>
   4c8f4:	ldr	r1, [sp, #20]
   4c8f8:	subs	r4, r0, #0
   4c8fc:	beq	4c994 <warn@@Base+0xfa8>
   4c900:	ldr	r3, [r8]
   4c904:	mov	r2, #1
   4c908:	str	r6, [sp, #4]
   4c90c:	cmp	r3, #0
   4c910:	str	r5, [sp, #12]
   4c914:	strne	r3, [sp, #8]
   4c918:	movw	r3, #49428	; 0xc114
   4c91c:	streq	r9, [sp, #8]
   4c920:	movt	r3, #7
   4c924:	str	r3, [sp]
   4c928:	mvn	r3, #0
   4c92c:	bl	113f8 <__snprintf_chk@plt>
   4c930:	mov	r0, r4
   4c934:	add	sp, sp, #28
   4c938:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4c93c:	mov	r0, r1
   4c940:	str	r1, [sp, #20]
   4c944:	bl	11224 <malloc@plt>
   4c948:	ldr	r1, [sp, #20]
   4c94c:	subs	r4, r0, #0
   4c950:	beq	4c994 <warn@@Base+0xfa8>
   4c954:	str	r6, [sp, #4]
   4c958:	mov	r2, #1
   4c95c:	str	r5, [sp, #8]
   4c960:	mvn	r3, #0
   4c964:	movw	ip, #49440	; 0xc120
   4c968:	movt	ip, #7
   4c96c:	str	ip, [sp]
   4c970:	bl	113f8 <__snprintf_chk@plt>
   4c974:	mov	r0, r4
   4c978:	add	sp, sp, #28
   4c97c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   4c980:	mov	r0, r9
   4c984:	bl	1129c <strlen@plt>
   4c988:	add	r1, r7, #5
   4c98c:	add	r1, r1, r0
   4c990:	b	4c8e8 <warn@@Base+0xefc>
   4c994:	mov	r2, #5
   4c998:	movw	r1, #48828	; 0xbebc
   4c99c:	mov	r0, #0
   4c9a0:	movt	r1, #7
   4c9a4:	bl	11170 <dcgettext@plt>
   4c9a8:	bl	4b2b0 <error@@Base>
   4c9ac:	mov	r0, #0
   4c9b0:	b	4c8bc <warn@@Base+0xed0>
   4c9b4:	push	{r3, r4, r5, r6, r7, lr}
   4c9b8:	subs	r4, r0, #0
   4c9bc:	beq	4ca40 <warn@@Base+0x1054>
   4c9c0:	ldr	r3, [r4]
   4c9c4:	cmp	r3, #0
   4c9c8:	beq	4ca30 <warn@@Base+0x1044>
   4c9cc:	mov	r2, r4
   4c9d0:	mov	r3, #0
   4c9d4:	ldr	r1, [r2, #4]!
   4c9d8:	add	r3, r3, #1
   4c9dc:	cmp	r1, #0
   4c9e0:	bne	4c9d4 <warn@@Base+0xfe8>
   4c9e4:	add	r3, r3, #1
   4c9e8:	lsl	r0, r3, #2
   4c9ec:	bl	4eba0 <warn@@Base+0x31b4>
   4c9f0:	mov	r6, r0
   4c9f4:	ldr	r0, [r4]
   4c9f8:	cmp	r0, #0
   4c9fc:	beq	4ca38 <warn@@Base+0x104c>
   4ca00:	rsb	r7, r4, #4
   4ca04:	mov	r5, #0
   4ca08:	bl	4ec44 <warn@@Base+0x3258>
   4ca0c:	str	r0, [r6, r5]
   4ca10:	add	r5, r7, r4
   4ca14:	ldr	r0, [r4, #4]!
   4ca18:	cmp	r0, #0
   4ca1c:	bne	4ca08 <warn@@Base+0x101c>
   4ca20:	mov	r3, #0
   4ca24:	mov	r0, r6
   4ca28:	str	r3, [r6, r5]
   4ca2c:	pop	{r3, r4, r5, r6, r7, pc}
   4ca30:	mov	r0, #4
   4ca34:	b	4c9ec <warn@@Base+0x1000>
   4ca38:	mov	r5, r0
   4ca3c:	b	4ca20 <warn@@Base+0x1034>
   4ca40:	mov	r0, r4
   4ca44:	pop	{r3, r4, r5, r6, r7, pc}
   4ca48:	push	{r3, r4, r5, lr}
   4ca4c:	subs	r5, r0, #0
   4ca50:	popeq	{r3, r4, r5, pc}
   4ca54:	ldr	r0, [r5]
   4ca58:	cmp	r0, #0
   4ca5c:	movne	r4, r5
   4ca60:	beq	4ca74 <warn@@Base+0x1088>
   4ca64:	bl	1111c <free@plt>
   4ca68:	ldr	r0, [r4, #4]!
   4ca6c:	cmp	r0, #0
   4ca70:	bne	4ca64 <warn@@Base+0x1078>
   4ca74:	mov	r0, r5
   4ca78:	pop	{r3, r4, r5, lr}
   4ca7c:	b	1111c <free@plt>
   4ca80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4ca84:	subs	r4, r0, #0
   4ca88:	sub	sp, sp, #12
   4ca8c:	beq	4cc98 <warn@@Base+0x12ac>
   4ca90:	bl	1129c <strlen@plt>
   4ca94:	mov	r9, #0
   4ca98:	movw	r5, #62012	; 0xf23c
   4ca9c:	movt	r5, #7
   4caa0:	mov	r7, r9
   4caa4:	mov	r8, r9
   4caa8:	mov	r6, r9
   4caac:	mov	fp, r9
   4cab0:	mov	sl, r9
   4cab4:	add	r0, r0, #1
   4cab8:	bl	4eba0 <warn@@Base+0x31b4>
   4cabc:	str	r0, [sp]
   4cac0:	ldrb	r3, [r4]
   4cac4:	lsl	r3, r3, #1
   4cac8:	ldrh	r3, [r5, r3]
   4cacc:	tst	r3, #64	; 0x40
   4cad0:	beq	4caf4 <warn@@Base+0x1108>
   4cad4:	mov	r3, r4
   4cad8:	ldrb	r2, [r3, #1]
   4cadc:	add	r4, r3, #1
   4cae0:	mov	r3, r4
   4cae4:	lsl	r2, r2, #1
   4cae8:	ldrh	r2, [r5, r2]
   4caec:	tst	r2, #64	; 0x40
   4caf0:	bne	4cad8 <warn@@Base+0x10ec>
   4caf4:	cmp	r7, #0
   4caf8:	beq	4cb10 <warn@@Base+0x1124>
   4cafc:	sub	r3, r7, #1
   4cb00:	cmp	r9, r3
   4cb04:	addlt	r3, r8, r9, lsl #2
   4cb08:	strlt	r3, [sp, #4]
   4cb0c:	blt	4cb3c <warn@@Base+0x1150>
   4cb10:	cmp	r8, #0
   4cb14:	beq	4cc84 <warn@@Base+0x1298>
   4cb18:	lsl	r7, r7, #1
   4cb1c:	mov	r0, r8
   4cb20:	lsl	r1, r7, #2
   4cb24:	bl	4ec00 <warn@@Base+0x3214>
   4cb28:	mov	r8, r0
   4cb2c:	add	r3, r8, r9, lsl #2
   4cb30:	str	r3, [sp, #4]
   4cb34:	mov	r3, #0
   4cb38:	str	r3, [r8, r9, lsl #2]
   4cb3c:	ldrb	r3, [r4]
   4cb40:	cmp	r3, #0
   4cb44:	beq	4cbfc <warn@@Base+0x1210>
   4cb48:	mov	r2, r4
   4cb4c:	ldr	lr, [sp]
   4cb50:	b	4cb74 <warn@@Base+0x1188>
   4cb54:	strb	r3, [lr]
   4cb58:	add	lr, lr, #1
   4cb5c:	mov	r6, #0
   4cb60:	ldrb	r3, [r2, #1]
   4cb64:	add	r2, r2, #1
   4cb68:	cmp	r3, #0
   4cb6c:	mov	r4, r2
   4cb70:	beq	4cc00 <warn@@Base+0x1214>
   4cb74:	lsl	r1, r3, #1
   4cb78:	mov	r4, r2
   4cb7c:	ldrh	r1, [r5, r1]
   4cb80:	tst	r1, #64	; 0x40
   4cb84:	beq	4cb94 <warn@@Base+0x11a8>
   4cb88:	orr	r0, r6, fp
   4cb8c:	orrs	r0, r0, sl
   4cb90:	beq	4cc78 <warn@@Base+0x128c>
   4cb94:	cmp	r6, #0
   4cb98:	bne	4cb54 <warn@@Base+0x1168>
   4cb9c:	cmp	r3, #92	; 0x5c
   4cba0:	moveq	r6, #1
   4cba4:	beq	4cb60 <warn@@Base+0x1174>
   4cba8:	cmp	sl, #0
   4cbac:	beq	4cbc8 <warn@@Base+0x11dc>
   4cbb0:	cmp	r3, #39	; 0x27
   4cbb4:	moveq	sl, r6
   4cbb8:	beq	4cb60 <warn@@Base+0x1174>
   4cbbc:	strb	r3, [lr]
   4cbc0:	add	lr, lr, #1
   4cbc4:	b	4cb60 <warn@@Base+0x1174>
   4cbc8:	cmp	fp, #0
   4cbcc:	beq	4cbe0 <warn@@Base+0x11f4>
   4cbd0:	cmp	r3, #34	; 0x22
   4cbd4:	moveq	fp, sl
   4cbd8:	bne	4cbbc <warn@@Base+0x11d0>
   4cbdc:	b	4cb60 <warn@@Base+0x1174>
   4cbe0:	cmp	r3, #39	; 0x27
   4cbe4:	moveq	sl, #1
   4cbe8:	beq	4cb60 <warn@@Base+0x1174>
   4cbec:	cmp	r3, #34	; 0x22
   4cbf0:	moveq	fp, #1
   4cbf4:	bne	4cbbc <warn@@Base+0x11d0>
   4cbf8:	b	4cb60 <warn@@Base+0x1174>
   4cbfc:	ldr	lr, [sp]
   4cc00:	mov	r3, #0
   4cc04:	ldr	r0, [sp]
   4cc08:	strb	r3, [lr]
   4cc0c:	add	r9, r9, #1
   4cc10:	bl	4ec44 <warn@@Base+0x3258>
   4cc14:	ldr	r3, [sp, #4]
   4cc18:	str	r0, [r3]
   4cc1c:	mov	r3, #0
   4cc20:	str	r3, [r8, r9, lsl #2]
   4cc24:	ldrb	r2, [r4]
   4cc28:	lsl	r3, r2, #1
   4cc2c:	ldrh	r3, [r5, r3]
   4cc30:	tst	r3, #64	; 0x40
   4cc34:	beq	4cc58 <warn@@Base+0x126c>
   4cc38:	mov	r3, r4
   4cc3c:	ldrb	r2, [r3, #1]
   4cc40:	add	r4, r3, #1
   4cc44:	mov	r3, r4
   4cc48:	lsl	r1, r2, #1
   4cc4c:	ldrh	r1, [r5, r1]
   4cc50:	tst	r1, #64	; 0x40
   4cc54:	bne	4cc3c <warn@@Base+0x1250>
   4cc58:	cmp	r2, #0
   4cc5c:	bne	4cac0 <warn@@Base+0x10d4>
   4cc60:	ldr	r0, [sp]
   4cc64:	mov	r9, r8
   4cc68:	bl	1111c <free@plt>
   4cc6c:	mov	r0, r9
   4cc70:	add	sp, sp, #12
   4cc74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4cc78:	mov	r6, r0
   4cc7c:	mov	sl, r0
   4cc80:	b	4cc00 <warn@@Base+0x1214>
   4cc84:	mov	r0, #32
   4cc88:	mov	r7, #8
   4cc8c:	bl	4eba0 <warn@@Base+0x31b4>
   4cc90:	mov	r8, r0
   4cc94:	b	4cb2c <warn@@Base+0x1140>
   4cc98:	mov	r9, r4
   4cc9c:	b	4cc6c <warn@@Base+0x1280>
   4cca0:	push	{r4, r5, r6, r7, r8, lr}
   4cca4:	subs	r5, r1, #0
   4cca8:	beq	4cd2c <warn@@Base+0x1340>
   4ccac:	ldr	r6, [r0]
   4ccb0:	cmp	r6, #0
   4ccb4:	movwne	r7, #62012	; 0xf23c
   4ccb8:	movne	r8, r0
   4ccbc:	movtne	r7, #7
   4ccc0:	beq	4cd54 <warn@@Base+0x1368>
   4ccc4:	ldrb	r4, [r6]
   4ccc8:	cmp	r4, #0
   4cccc:	bne	4ccfc <warn@@Base+0x1310>
   4ccd0:	b	4cd34 <warn@@Base+0x1348>
   4ccd4:	cmp	r4, #34	; 0x22
   4ccd8:	beq	4cd20 <warn@@Base+0x1334>
   4ccdc:	mov	r0, r4
   4cce0:	mov	r1, r5
   4cce4:	bl	11380 <fputc@plt>
   4cce8:	cmn	r0, #1
   4ccec:	beq	4cd2c <warn@@Base+0x1340>
   4ccf0:	ldrb	r4, [r6, #1]!
   4ccf4:	cmp	r4, #0
   4ccf8:	beq	4cd34 <warn@@Base+0x1348>
   4ccfc:	lsl	r3, r4, #1
   4cd00:	mov	r1, r5
   4cd04:	mov	r0, #92	; 0x5c
   4cd08:	ldrh	r3, [r7, r3]
   4cd0c:	tst	r3, #64	; 0x40
   4cd10:	bne	4cd20 <warn@@Base+0x1334>
   4cd14:	cmp	r4, #39	; 0x27
   4cd18:	cmpne	r4, r0
   4cd1c:	bne	4ccd4 <warn@@Base+0x12e8>
   4cd20:	bl	11380 <fputc@plt>
   4cd24:	cmn	r0, #1
   4cd28:	bne	4ccdc <warn@@Base+0x12f0>
   4cd2c:	mov	r0, #1
   4cd30:	pop	{r4, r5, r6, r7, r8, pc}
   4cd34:	mov	r0, #10
   4cd38:	mov	r1, r5
   4cd3c:	bl	11380 <fputc@plt>
   4cd40:	cmn	r0, #1
   4cd44:	beq	4cd2c <warn@@Base+0x1340>
   4cd48:	ldr	r6, [r8, #4]!
   4cd4c:	cmp	r6, #0
   4cd50:	bne	4ccc4 <warn@@Base+0x12d8>
   4cd54:	mov	r0, #0
   4cd58:	pop	{r4, r5, r6, r7, r8, pc}
   4cd5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4cd60:	sub	sp, sp, #20
   4cd64:	mov	r6, r1
   4cd68:	movw	r2, #62012	; 0xf23c
   4cd6c:	mov	sl, r0
   4cd70:	movt	r2, #7
   4cd74:	mov	r5, #0
   4cd78:	ldr	r1, [r0]
   4cd7c:	mov	r8, #2000	; 0x7d0
   4cd80:	str	r2, [sp, #8]
   4cd84:	b	4cd8c <warn@@Base+0x13a0>
   4cd88:	mov	r5, r4
   4cd8c:	add	r4, r5, #1
   4cd90:	cmp	r4, r1
   4cd94:	bge	4cf6c <warn@@Base+0x1580>
   4cd98:	ldr	r3, [r6]
   4cd9c:	lsl	r7, r4, #2
   4cda0:	ldr	r0, [r3, r4, lsl #2]
   4cda4:	ldrb	r2, [r0]
   4cda8:	cmp	r2, #64	; 0x40
   4cdac:	bne	4cd88 <warn@@Base+0x139c>
   4cdb0:	subs	r8, r8, #1
   4cdb4:	beq	4cfc4 <warn@@Base+0x15d8>
   4cdb8:	add	r0, r0, #1
   4cdbc:	movw	r1, #54740	; 0xd5d4
   4cdc0:	movt	r1, #7
   4cdc4:	bl	1138c <fopen64@plt>
   4cdc8:	subs	r9, r0, #0
   4cdcc:	beq	4cf64 <warn@@Base+0x1578>
   4cdd0:	mov	r1, #0
   4cdd4:	mov	r2, #2
   4cdd8:	bl	113bc <fseek@plt>
   4cddc:	cmn	r0, #1
   4cde0:	beq	4cf5c <warn@@Base+0x1570>
   4cde4:	mov	r0, r9
   4cde8:	bl	1114c <ftell@plt>
   4cdec:	cmn	r0, #1
   4cdf0:	mov	fp, r0
   4cdf4:	beq	4cf5c <warn@@Base+0x1570>
   4cdf8:	mov	r1, #0
   4cdfc:	mov	r0, r9
   4ce00:	mov	r2, r1
   4ce04:	bl	113bc <fseek@plt>
   4ce08:	cmn	r0, #1
   4ce0c:	beq	4cf5c <warn@@Base+0x1570>
   4ce10:	add	r0, fp, #1
   4ce14:	bl	4eba0 <warn@@Base+0x31b4>
   4ce18:	mov	r3, r9
   4ce1c:	mov	r1, #1
   4ce20:	mov	r2, fp
   4ce24:	str	r0, [sp, #12]
   4ce28:	bl	111f4 <fread@plt>
   4ce2c:	cmp	fp, r0
   4ce30:	mov	r3, r0
   4ce34:	beq	4ce50 <warn@@Base+0x1464>
   4ce38:	mov	r0, r9
   4ce3c:	str	r3, [sp]
   4ce40:	bl	11128 <ferror@plt>
   4ce44:	ldr	r3, [sp]
   4ce48:	cmp	r0, #0
   4ce4c:	bne	4cf5c <warn@@Base+0x1570>
   4ce50:	ldr	r2, [sp, #12]
   4ce54:	mov	r1, #0
   4ce58:	strb	r1, [r2, r3]
   4ce5c:	ldrb	r3, [r2]
   4ce60:	cmp	r3, #0
   4ce64:	beq	4cea0 <warn@@Base+0x14b4>
   4ce68:	ldr	r1, [sp, #8]
   4ce6c:	lsl	r3, r3, #1
   4ce70:	ldrh	r3, [r1, r3]
   4ce74:	tst	r3, #64	; 0x40
   4ce78:	beq	4cf74 <warn@@Base+0x1588>
   4ce7c:	ldr	r2, [sp, #12]
   4ce80:	b	4ce94 <warn@@Base+0x14a8>
   4ce84:	lsl	r3, r3, #1
   4ce88:	ldrh	r3, [r1, r3]
   4ce8c:	tst	r3, #64	; 0x40
   4ce90:	beq	4cf74 <warn@@Base+0x1588>
   4ce94:	ldrb	r3, [r2, #1]!
   4ce98:	cmp	r3, #0
   4ce9c:	bne	4ce84 <warn@@Base+0x1498>
   4cea0:	mov	r0, #4
   4cea4:	mov	ip, #0
   4cea8:	str	ip, [sp, #4]
   4ceac:	bl	4eba0 <warn@@Base+0x31b4>
   4ceb0:	ldr	ip, [sp, #4]
   4ceb4:	mov	r2, #0
   4ceb8:	mov	fp, r0
   4cebc:	str	r2, [r0]
   4cec0:	ldr	r0, [r6]
   4cec4:	str	ip, [sp]
   4cec8:	bl	4c9b4 <warn@@Base+0xfc8>
   4cecc:	ldm	sp, {r3, ip}
   4ced0:	str	r0, [r6]
   4ced4:	ldr	r1, [sl]
   4ced8:	stm	sp, {r3, ip}
   4cedc:	add	r1, r1, #1
   4cee0:	add	r1, r1, r3
   4cee4:	lsl	r1, r1, #2
   4cee8:	bl	4ec00 <warn@@Base+0x3214>
   4ceec:	ldr	r3, [sp]
   4cef0:	ldr	r2, [sl]
   4cef4:	add	lr, r7, #4
   4cef8:	rsb	r2, r4, r2
   4cefc:	lsl	r2, r2, #2
   4cf00:	mov	r1, r0
   4cf04:	add	r0, r3, r4
   4cf08:	str	r1, [r6]
   4cf0c:	mov	r4, r5
   4cf10:	add	r0, r1, r0, lsl #2
   4cf14:	add	r1, r1, lr
   4cf18:	str	r3, [sp]
   4cf1c:	bl	11110 <memmove@plt>
   4cf20:	ldr	ip, [sp, #4]
   4cf24:	mov	r1, fp
   4cf28:	ldr	r0, [r6]
   4cf2c:	mov	r2, ip
   4cf30:	add	r0, r0, r7
   4cf34:	bl	11134 <memcpy@plt>
   4cf38:	ldr	r2, [sl]
   4cf3c:	ldr	r3, [sp]
   4cf40:	mov	r0, fp
   4cf44:	sub	r2, r2, #1
   4cf48:	add	r3, r2, r3
   4cf4c:	str	r3, [sl]
   4cf50:	bl	1111c <free@plt>
   4cf54:	ldr	r0, [sp, #12]
   4cf58:	bl	1111c <free@plt>
   4cf5c:	mov	r0, r9
   4cf60:	bl	11344 <fclose@plt>
   4cf64:	ldr	r1, [sl]
   4cf68:	b	4cd88 <warn@@Base+0x139c>
   4cf6c:	add	sp, sp, #20
   4cf70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4cf74:	ldr	r0, [sp, #12]
   4cf78:	bl	4ca80 <warn@@Base+0x1094>
   4cf7c:	ldr	ip, [r0]
   4cf80:	mov	fp, r0
   4cf84:	ldr	r0, [r6]
   4cf88:	str	ip, [sp, #4]
   4cf8c:	bl	4c9b4 <warn@@Base+0xfc8>
   4cf90:	ldr	ip, [sp, #4]
   4cf94:	cmp	ip, #0
   4cf98:	moveq	r3, ip
   4cf9c:	str	r0, [r6]
   4cfa0:	beq	4ced4 <warn@@Base+0x14e8>
   4cfa4:	mov	r2, fp
   4cfa8:	mov	r3, #0
   4cfac:	ldr	r1, [r2, #4]!
   4cfb0:	add	r3, r3, #1
   4cfb4:	cmp	r1, #0
   4cfb8:	lsl	ip, r3, #2
   4cfbc:	bne	4cfac <warn@@Base+0x15c0>
   4cfc0:	b	4ced4 <warn@@Base+0x14e8>
   4cfc4:	movw	r1, #16692	; 0x4134
   4cfc8:	movt	r1, #9
   4cfcc:	ldr	r3, [r3]
   4cfd0:	movw	r2, #49456	; 0xc130
   4cfd4:	ldr	r0, [r1]
   4cfd8:	movt	r2, #7
   4cfdc:	mov	r1, #1
   4cfe0:	bl	11338 <__fprintf_chk@plt>
   4cfe4:	mov	r0, #1
   4cfe8:	bl	4eaa8 <warn@@Base+0x30bc>
   4cfec:	subs	r3, r0, #0
   4cff0:	beq	4d018 <warn@@Base+0x162c>
   4cff4:	ldr	r0, [r3]
   4cff8:	cmp	r0, #0
   4cffc:	bxeq	lr
   4d000:	mov	r0, #0
   4d004:	ldr	r2, [r3, #4]!
   4d008:	add	r0, r0, #1
   4d00c:	cmp	r2, #0
   4d010:	bne	4d004 <warn@@Base+0x1618>
   4d014:	bx	lr
   4d018:	mov	r0, r3
   4d01c:	bx	lr
   4d020:	cmp	r0, #46	; 0x2e
   4d024:	beq	4d4fc <warn@@Base+0x1b10>
   4d028:	bls	4d078 <warn@@Base+0x168c>
   4d02c:	cmp	r0, #67	; 0x43
   4d030:	beq	4d6d8 <warn@@Base+0x1cec>
   4d034:	bhi	4d104 <warn@@Base+0x1718>
   4d038:	cmp	r0, #56	; 0x38
   4d03c:	beq	4d69c <warn@@Base+0x1cb0>
   4d040:	bls	4d158 <warn@@Base+0x176c>
   4d044:	cmp	r0, #61	; 0x3d
   4d048:	beq	4d568 <warn@@Base+0x1b7c>
   4d04c:	bhi	4d260 <warn@@Base+0x1874>
   4d050:	cmp	r0, #58	; 0x3a
   4d054:	beq	4d49c <warn@@Base+0x1ab0>
   4d058:	bcc	4d490 <warn@@Base+0x1aa4>
   4d05c:	cmp	r0, #59	; 0x3b
   4d060:	beq	4d538 <warn@@Base+0x1b4c>
   4d064:	cmp	r0, #60	; 0x3c
   4d068:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d06c:	movw	r0, #53008	; 0xcf10
   4d070:	movt	r0, #7
   4d074:	bx	lr
   4d078:	cmp	r0, #25
   4d07c:	beq	4d6c0 <warn@@Base+0x1cd4>
   4d080:	bhi	4d0c4 <warn@@Base+0x16d8>
   4d084:	cmp	r0, #13
   4d088:	beq	4d4f0 <warn@@Base+0x1b04>
   4d08c:	bls	4d18c <warn@@Base+0x17a0>
   4d090:	cmp	r0, #19
   4d094:	beq	4d5e0 <warn@@Base+0x1bf4>
   4d098:	bhi	4d288 <warn@@Base+0x189c>
   4d09c:	cmp	r0, #16
   4d0a0:	beq	4d580 <warn@@Base+0x1b94>
   4d0a4:	bls	4d438 <warn@@Base+0x1a4c>
   4d0a8:	cmp	r0, #17
   4d0ac:	beq	4d600 <warn@@Base+0x1c14>
   4d0b0:	cmp	r0, #18
   4d0b4:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d0b8:	movw	r0, #52124	; 0xcb9c
   4d0bc:	movt	r0, #7
   4d0c0:	bx	lr
   4d0c4:	cmp	r0, #35	; 0x23
   4d0c8:	beq	4d6b4 <warn@@Base+0x1cc8>
   4d0cc:	bls	4d1c0 <warn@@Base+0x17d4>
   4d0d0:	cmp	r0, #40	; 0x28
   4d0d4:	beq	4d544 <warn@@Base+0x1b58>
   4d0d8:	bls	4d380 <warn@@Base+0x1994>
   4d0dc:	cmp	r0, #43	; 0x2b
   4d0e0:	beq	4d340 <warn@@Base+0x1954>
   4d0e4:	bhi	4d3a8 <warn@@Base+0x19bc>
   4d0e8:	cmp	r0, #41	; 0x29
   4d0ec:	beq	4d5b0 <warn@@Base+0x1bc4>
   4d0f0:	cmp	r0, #42	; 0x2a
   4d0f4:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d0f8:	movw	r0, #52616	; 0xcd88
   4d0fc:	movt	r0, #7
   4d100:	bx	lr
   4d104:	movw	r3, #16645	; 0x4105
   4d108:	cmp	r0, r3
   4d10c:	beq	4d6a8 <warn@@Base+0x1cbc>
   4d110:	bls	4d1f4 <warn@@Base+0x1808>
   4d114:	movw	r3, #16650	; 0x410a
   4d118:	cmp	r0, r3
   4d11c:	beq	4d6cc <warn@@Base+0x1ce0>
   4d120:	bls	4d34c <warn@@Base+0x1960>
   4d124:	movw	r3, #34663	; 0x8767
   4d128:	cmp	r0, r3
   4d12c:	beq	4d334 <warn@@Base+0x1948>
   4d130:	bhi	4d3c4 <warn@@Base+0x19d8>
   4d134:	movw	r3, #34661	; 0x8765
   4d138:	cmp	r0, r3
   4d13c:	beq	4d6e4 <warn@@Base+0x1cf8>
   4d140:	add	r3, r3, #1
   4d144:	cmp	r0, r3
   4d148:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d14c:	movw	r0, #53588	; 0xd154
   4d150:	movt	r0, #7
   4d154:	bx	lr
   4d158:	cmp	r0, #51	; 0x33
   4d15c:	beq	4d4d8 <warn@@Base+0x1aec>
   4d160:	bhi	4d2b0 <warn@@Base+0x18c4>
   4d164:	cmp	r0, #48	; 0x30
   4d168:	beq	4d630 <warn@@Base+0x1c44>
   4d16c:	bcc	4d624 <warn@@Base+0x1c38>
   4d170:	cmp	r0, #49	; 0x31
   4d174:	beq	4d618 <warn@@Base+0x1c2c>
   4d178:	cmp	r0, #50	; 0x32
   4d17c:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d180:	movw	r0, #52788	; 0xce34
   4d184:	movt	r0, #7
   4d188:	bx	lr
   4d18c:	cmp	r0, #4
   4d190:	beq	4d60c <warn@@Base+0x1c20>
   4d194:	bhi	4d238 <warn@@Base+0x184c>
   4d198:	cmp	r0, #1
   4d19c:	beq	4d514 <warn@@Base+0x1b28>
   4d1a0:	bcc	4d508 <warn@@Base+0x1b1c>
   4d1a4:	cmp	r0, #2
   4d1a8:	beq	4d598 <warn@@Base+0x1bac>
   4d1ac:	cmp	r0, #3
   4d1b0:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d1b4:	movw	r0, #51908	; 0xcac4
   4d1b8:	movt	r0, #7
   4d1bc:	bx	lr
   4d1c0:	cmp	r0, #30
   4d1c4:	beq	4d460 <warn@@Base+0x1a74>
   4d1c8:	bhi	4d2d8 <warn@@Base+0x18ec>
   4d1cc:	cmp	r0, #27
   4d1d0:	beq	4d484 <warn@@Base+0x1a98>
   4d1d4:	bcc	4d478 <warn@@Base+0x1a8c>
   4d1d8:	cmp	r0, #28
   4d1dc:	beq	4d46c <warn@@Base+0x1a80>
   4d1e0:	cmp	r0, #29
   4d1e4:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d1e8:	movw	r0, #52340	; 0xcc74
   4d1ec:	movt	r0, #7
   4d1f0:	bx	lr
   4d1f4:	movw	r3, #16530	; 0x4092
   4d1f8:	cmp	r0, r3
   4d1fc:	beq	4d63c <warn@@Base+0x1c50>
   4d200:	bhi	4d300 <warn@@Base+0x1914>
   4d204:	movw	r3, #16513	; 0x4081
   4d208:	cmp	r0, r3
   4d20c:	beq	4d58c <warn@@Base+0x1ba0>
   4d210:	bls	4d44c <warn@@Base+0x1a60>
   4d214:	movw	r3, #16528	; 0x4090
   4d218:	cmp	r0, r3
   4d21c:	beq	4d5a4 <warn@@Base+0x1bb8>
   4d220:	add	r3, r3, #1
   4d224:	cmp	r0, r3
   4d228:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d22c:	movw	r0, #53236	; 0xcff4
   4d230:	movt	r0, #7
   4d234:	bx	lr
   4d238:	cmp	r0, #8
   4d23c:	beq	4d55c <warn@@Base+0x1b70>
   4d240:	bls	4d3f8 <warn@@Base+0x1a0c>
   4d244:	cmp	r0, #10
   4d248:	beq	4d574 <warn@@Base+0x1b88>
   4d24c:	cmp	r0, #11
   4d250:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d254:	movw	r0, #52020	; 0xcb34
   4d258:	movt	r0, #7
   4d25c:	bx	lr
   4d260:	cmp	r0, #64	; 0x40
   4d264:	beq	4d4c0 <warn@@Base+0x1ad4>
   4d268:	bls	4d40c <warn@@Base+0x1a20>
   4d26c:	cmp	r0, #65	; 0x41
   4d270:	beq	4d5ec <warn@@Base+0x1c00>
   4d274:	cmp	r0, #66	; 0x42
   4d278:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d27c:	movw	r0, #53112	; 0xcf78
   4d280:	movt	r0, #7
   4d284:	bx	lr
   4d288:	cmp	r0, #22
   4d28c:	beq	4d4a8 <warn@@Base+0x1abc>
   4d290:	bls	4d3e4 <warn@@Base+0x19f8>
   4d294:	cmp	r0, #23
   4d298:	beq	4d66c <warn@@Base+0x1c80>
   4d29c:	cmp	r0, #24
   4d2a0:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d2a4:	movw	r0, #52228	; 0xcc04
   4d2a8:	movt	r0, #7
   4d2ac:	bx	lr
   4d2b0:	cmp	r0, #53	; 0x35
   4d2b4:	beq	4d660 <warn@@Base+0x1c74>
   4d2b8:	bcc	4d654 <warn@@Base+0x1c68>
   4d2bc:	cmp	r0, #54	; 0x36
   4d2c0:	beq	4d648 <warn@@Base+0x1c5c>
   4d2c4:	cmp	r0, #55	; 0x37
   4d2c8:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d2cc:	movw	r0, #52892	; 0xce9c
   4d2d0:	movt	r0, #7
   4d2d4:	bx	lr
   4d2d8:	cmp	r0, #32
   4d2dc:	beq	4d690 <warn@@Base+0x1ca4>
   4d2e0:	bcc	4d684 <warn@@Base+0x1c98>
   4d2e4:	cmp	r0, #33	; 0x21
   4d2e8:	beq	4d678 <warn@@Base+0x1c8c>
   4d2ec:	cmp	r0, #34	; 0x22
   4d2f0:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d2f4:	movw	r0, #52452	; 0xcce4
   4d2f8:	movt	r0, #7
   4d2fc:	bx	lr
   4d300:	movw	r3, #16642	; 0x4102
   4d304:	cmp	r0, r3
   4d308:	beq	4d4cc <warn@@Base+0x1ae0>
   4d30c:	bls	4d420 <warn@@Base+0x1a34>
   4d310:	movw	r3, #16643	; 0x4103
   4d314:	cmp	r0, r3
   4d318:	beq	4d4e4 <warn@@Base+0x1af8>
   4d31c:	add	r3, r3, #1
   4d320:	cmp	r0, r3
   4d324:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d328:	movw	r0, #53360	; 0xd070
   4d32c:	movt	r0, #7
   4d330:	bx	lr
   4d334:	movw	r0, #53612	; 0xd16c
   4d338:	movt	r0, #7
   4d33c:	bx	lr
   4d340:	movw	r0, #52632	; 0xcd98
   4d344:	movt	r0, #7
   4d348:	bx	lr
   4d34c:	movw	r3, #16647	; 0x4107
   4d350:	cmp	r0, r3
   4d354:	beq	4d52c <warn@@Base+0x1b40>
   4d358:	bcc	4d520 <warn@@Base+0x1b34>
   4d35c:	add	r3, r3, #1
   4d360:	cmp	r0, r3
   4d364:	beq	4d550 <warn@@Base+0x1b64>
   4d368:	add	r3, r3, #1
   4d36c:	cmp	r0, r3
   4d370:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d374:	movw	r0, #53508	; 0xd104
   4d378:	movt	r0, #7
   4d37c:	bx	lr
   4d380:	cmp	r0, #37	; 0x25
   4d384:	beq	4d5d4 <warn@@Base+0x1be8>
   4d388:	bcc	4d5c8 <warn@@Base+0x1bdc>
   4d38c:	cmp	r0, #38	; 0x26
   4d390:	beq	4d5bc <warn@@Base+0x1bd0>
   4d394:	cmp	r0, #39	; 0x27
   4d398:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d39c:	movw	r0, #52560	; 0xcd50
   4d3a0:	movt	r0, #7
   4d3a4:	bx	lr
   4d3a8:	cmp	r0, #44	; 0x2c
   4d3ac:	beq	4d6f0 <warn@@Base+0x1d04>
   4d3b0:	cmp	r0, #45	; 0x2d
   4d3b4:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d3b8:	movw	r0, #52672	; 0xcdc0
   4d3bc:	movt	r0, #7
   4d3c0:	bx	lr
   4d3c4:	cmp	r0, #40960	; 0xa000
   4d3c8:	beq	4d4b4 <warn@@Base+0x1ac8>
   4d3cc:	movw	r3, #40992	; 0xa020
   4d3d0:	cmp	r0, r3
   4d3d4:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d3d8:	movw	r0, #53660	; 0xd19c
   4d3dc:	movt	r0, #7
   4d3e0:	bx	lr
   4d3e4:	cmp	r0, #21
   4d3e8:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d3ec:	movw	r0, #52168	; 0xcbc8
   4d3f0:	movt	r0, #7
   4d3f4:	bx	lr
   4d3f8:	cmp	r0, #5
   4d3fc:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d400:	movw	r0, #51952	; 0xcaf0
   4d404:	movt	r0, #7
   4d408:	bx	lr
   4d40c:	cmp	r0, #63	; 0x3f
   4d410:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d414:	movw	r0, #53052	; 0xcf3c
   4d418:	movt	r0, #7
   4d41c:	bx	lr
   4d420:	movw	r3, #16641	; 0x4101
   4d424:	cmp	r0, r3
   4d428:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d42c:	movw	r0, #53288	; 0xd028
   4d430:	movt	r0, #7
   4d434:	bx	lr
   4d438:	cmp	r0, #15
   4d43c:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d440:	movw	r0, #52060	; 0xcb5c
   4d444:	movt	r0, #7
   4d448:	bx	lr
   4d44c:	cmp	r0, #71	; 0x47
   4d450:	bne	4d5f8 <warn@@Base+0x1c0c>
   4d454:	movw	r0, #53168	; 0xcfb0
   4d458:	movt	r0, #7
   4d45c:	bx	lr
   4d460:	movw	r0, #52368	; 0xcc90
   4d464:	movt	r0, #7
   4d468:	bx	lr
   4d46c:	movw	r0, #52320	; 0xcc60
   4d470:	movt	r0, #7
   4d474:	bx	lr
   4d478:	movw	r0, #52276	; 0xcc34
   4d47c:	movt	r0, #7
   4d480:	bx	lr
   4d484:	movw	r0, #52296	; 0xcc48
   4d488:	movt	r0, #7
   4d48c:	bx	lr
   4d490:	movw	r0, #52940	; 0xcecc
   4d494:	movt	r0, #7
   4d498:	bx	lr
   4d49c:	movw	r0, #52960	; 0xcee0
   4d4a0:	movt	r0, #7
   4d4a4:	bx	lr
   4d4a8:	movw	r0, #52192	; 0xcbe0
   4d4ac:	movt	r0, #7
   4d4b0:	bx	lr
   4d4b4:	movw	r0, #53636	; 0xd184
   4d4b8:	movt	r0, #7
   4d4bc:	bx	lr
   4d4c0:	movw	r0, #53072	; 0xcf50
   4d4c4:	movt	r0, #7
   4d4c8:	bx	lr
   4d4cc:	movw	r0, #53308	; 0xd03c
   4d4d0:	movt	r0, #7
   4d4d4:	bx	lr
   4d4d8:	movw	r0, #52808	; 0xce48
   4d4dc:	movt	r0, #7
   4d4e0:	bx	lr
   4d4e4:	movw	r0, #53336	; 0xd058
   4d4e8:	movt	r0, #7
   4d4ec:	bx	lr
   4d4f0:	movw	r0, #52044	; 0xcb4c
   4d4f4:	movt	r0, #7
   4d4f8:	bx	lr
   4d4fc:	movw	r0, #52692	; 0xcdd4
   4d500:	movt	r0, #7
   4d504:	bx	lr
   4d508:	movw	r0, #51852	; 0xca8c
   4d50c:	movt	r0, #7
   4d510:	bx	lr
   4d514:	movw	r0, #51868	; 0xca9c
   4d518:	movt	r0, #7
   4d51c:	bx	lr
   4d520:	movw	r0, #53400	; 0xd098
   4d524:	movt	r0, #7
   4d528:	bx	lr
   4d52c:	movw	r0, #53436	; 0xd0bc
   4d530:	movt	r0, #7
   4d534:	bx	lr
   4d538:	movw	r0, #52984	; 0xcef8
   4d53c:	movt	r0, #7
   4d540:	bx	lr
   4d544:	movw	r0, #52576	; 0xcd60
   4d548:	movt	r0, #7
   4d54c:	bx	lr
   4d550:	movw	r0, #53472	; 0xd0e0
   4d554:	movt	r0, #7
   4d558:	bx	lr
   4d55c:	movw	r0, #51976	; 0xcb08
   4d560:	movt	r0, #7
   4d564:	bx	lr
   4d568:	movw	r0, #53028	; 0xcf24
   4d56c:	movt	r0, #7
   4d570:	bx	lr
   4d574:	movw	r0, #52004	; 0xcb24
   4d578:	movt	r0, #7
   4d57c:	bx	lr
   4d580:	movw	r0, #52080	; 0xcb70
   4d584:	movt	r0, #7
   4d588:	bx	lr
   4d58c:	movw	r0, #53188	; 0xcfc4
   4d590:	movt	r0, #7
   4d594:	bx	lr
   4d598:	movw	r0, #51888	; 0xcab0
   4d59c:	movt	r0, #7
   4d5a0:	bx	lr
   4d5a4:	movw	r0, #53208	; 0xcfd8
   4d5a8:	movt	r0, #7
   4d5ac:	bx	lr
   4d5b0:	movw	r0, #52596	; 0xcd74
   4d5b4:	movt	r0, #7
   4d5b8:	bx	lr
   4d5bc:	movw	r0, #52540	; 0xcd3c
   4d5c0:	movt	r0, #7
   4d5c4:	bx	lr
   4d5c8:	movw	r0, #52500	; 0xcd14
   4d5cc:	movt	r0, #7
   4d5d0:	bx	lr
   4d5d4:	movw	r0, #52520	; 0xcd28
   4d5d8:	movt	r0, #7
   4d5dc:	bx	lr
   4d5e0:	movw	r0, #52144	; 0xcbb0
   4d5e4:	movt	r0, #7
   4d5e8:	bx	lr
   4d5ec:	movw	r0, #53092	; 0xcf64
   4d5f0:	movt	r0, #7
   4d5f4:	bx	lr
   4d5f8:	mov	r0, #0
   4d5fc:	bx	lr
   4d600:	movw	r0, #52104	; 0xcb88
   4d604:	movt	r0, #7
   4d608:	bx	lr
   4d60c:	movw	r0, #51928	; 0xcad8
   4d610:	movt	r0, #7
   4d614:	bx	lr
   4d618:	movw	r0, #52768	; 0xce20
   4d61c:	movt	r0, #7
   4d620:	bx	lr
   4d624:	movw	r0, #52712	; 0xcde8
   4d628:	movt	r0, #7
   4d62c:	bx	lr
   4d630:	movw	r0, #52740	; 0xce04
   4d634:	movt	r0, #7
   4d638:	bx	lr
   4d63c:	movw	r0, #53260	; 0xd00c
   4d640:	movt	r0, #7
   4d644:	bx	lr
   4d648:	movw	r0, #52868	; 0xce84
   4d64c:	movt	r0, #7
   4d650:	bx	lr
   4d654:	movw	r0, #52828	; 0xce5c
   4d658:	movt	r0, #7
   4d65c:	bx	lr
   4d660:	movw	r0, #52844	; 0xce6c
   4d664:	movt	r0, #7
   4d668:	bx	lr
   4d66c:	movw	r0, #52208	; 0xcbf0
   4d670:	movt	r0, #7
   4d674:	bx	lr
   4d678:	movw	r0, #52428	; 0xcccc
   4d67c:	movt	r0, #7
   4d680:	bx	lr
   4d684:	movw	r0, #52384	; 0xcca0
   4d688:	movt	r0, #7
   4d68c:	bx	lr
   4d690:	movw	r0, #52412	; 0xccbc
   4d694:	movt	r0, #7
   4d698:	bx	lr
   4d69c:	movw	r0, #52916	; 0xceb4
   4d6a0:	movt	r0, #7
   4d6a4:	bx	lr
   4d6a8:	movw	r0, #53380	; 0xd084
   4d6ac:	movt	r0, #7
   4d6b0:	bx	lr
   4d6b4:	movw	r0, #52472	; 0xccf8
   4d6b8:	movt	r0, #7
   4d6bc:	bx	lr
   4d6c0:	movw	r0, #52260	; 0xcc24
   4d6c4:	movt	r0, #7
   4d6c8:	bx	lr
   4d6cc:	movw	r0, #53532	; 0xd11c
   4d6d0:	movt	r0, #7
   4d6d4:	bx	lr
   4d6d8:	movw	r0, #53144	; 0xcf98
   4d6dc:	movt	r0, #7
   4d6e0:	bx	lr
   4d6e4:	movw	r0, #53564	; 0xd13c
   4d6e8:	movt	r0, #7
   4d6ec:	bx	lr
   4d6f0:	movw	r0, #52648	; 0xcda8
   4d6f4:	movt	r0, #7
   4d6f8:	bx	lr
   4d6fc:	cmp	r0, #16
   4d700:	beq	4d91c <warn@@Base+0x1f30>
   4d704:	bhi	4d738 <warn@@Base+0x1d4c>
   4d708:	cmp	r0, #8
   4d70c:	beq	4d8b0 <warn@@Base+0x1ec4>
   4d710:	bls	4d774 <warn@@Base+0x1d88>
   4d714:	cmp	r0, #12
   4d718:	beq	4d8d4 <warn@@Base+0x1ee8>
   4d71c:	bhi	4d7e8 <warn@@Base+0x1dfc>
   4d720:	cmp	r0, #10
   4d724:	beq	4d904 <warn@@Base+0x1f18>
   4d728:	bhi	4d88c <warn@@Base+0x1ea0>
   4d72c:	movw	r0, #53800	; 0xd228
   4d730:	movt	r0, #7
   4d734:	bx	lr
   4d738:	cmp	r0, #23
   4d73c:	beq	4d8bc <warn@@Base+0x1ed0>
   4d740:	bls	4d798 <warn@@Base+0x1dac>
   4d744:	movw	r3, #7937	; 0x1f01
   4d748:	cmp	r0, r3
   4d74c:	beq	4d8c8 <warn@@Base+0x1edc>
   4d750:	bhi	4d7bc <warn@@Base+0x1dd0>
   4d754:	cmp	r0, #25
   4d758:	beq	4d934 <warn@@Base+0x1f48>
   4d75c:	bcc	4d868 <warn@@Base+0x1e7c>
   4d760:	cmp	r0, #32
   4d764:	bne	4d7e0 <warn@@Base+0x1df4>
   4d768:	movw	r0, #54096	; 0xd350
   4d76c:	movt	r0, #7
   4d770:	bx	lr
   4d774:	cmp	r0, #4
   4d778:	beq	4d85c <warn@@Base+0x1e70>
   4d77c:	bls	4d800 <warn@@Base+0x1e14>
   4d780:	cmp	r0, #6
   4d784:	beq	4d8e0 <warn@@Base+0x1ef4>
   4d788:	bhi	4d898 <warn@@Base+0x1eac>
   4d78c:	movw	r0, #53736	; 0xd1e8
   4d790:	movt	r0, #7
   4d794:	bx	lr
   4d798:	cmp	r0, #19
   4d79c:	beq	4d874 <warn@@Base+0x1e88>
   4d7a0:	bls	4d81c <warn@@Base+0x1e30>
   4d7a4:	cmp	r0, #21
   4d7a8:	beq	4d910 <warn@@Base+0x1f24>
   4d7ac:	bhi	4d850 <warn@@Base+0x1e64>
   4d7b0:	movw	r0, #53980	; 0xd2dc
   4d7b4:	movt	r0, #7
   4d7b8:	bx	lr
   4d7bc:	movw	r3, #7968	; 0x1f20
   4d7c0:	cmp	r0, r3
   4d7c4:	beq	4d8ec <warn@@Base+0x1f00>
   4d7c8:	add	r3, r3, #1
   4d7cc:	cmp	r0, r3
   4d7d0:	beq	4d8a4 <warn@@Base+0x1eb8>
   4d7d4:	movw	r3, #7938	; 0x1f02
   4d7d8:	cmp	r0, r3
   4d7dc:	beq	4d8f8 <warn@@Base+0x1f0c>
   4d7e0:	mov	r0, #0
   4d7e4:	bx	lr
   4d7e8:	cmp	r0, #14
   4d7ec:	beq	4d928 <warn@@Base+0x1f3c>
   4d7f0:	bhi	4d880 <warn@@Base+0x1e94>
   4d7f4:	movw	r0, #53864	; 0xd268
   4d7f8:	movt	r0, #7
   4d7fc:	bx	lr
   4d800:	cmp	r0, #1
   4d804:	beq	4d838 <warn@@Base+0x1e4c>
   4d808:	cmp	r0, #3
   4d80c:	bne	4d7e0 <warn@@Base+0x1df4>
   4d810:	movw	r0, #53704	; 0xd1c8
   4d814:	movt	r0, #7
   4d818:	bx	lr
   4d81c:	cmp	r0, #17
   4d820:	beq	4d844 <warn@@Base+0x1e58>
   4d824:	cmp	r0, #18
   4d828:	bne	4d7e0 <warn@@Base+0x1df4>
   4d82c:	movw	r0, #53948	; 0xd2bc
   4d830:	movt	r0, #7
   4d834:	bx	lr
   4d838:	movw	r0, #53688	; 0xd1b8
   4d83c:	movt	r0, #7
   4d840:	bx	lr
   4d844:	movw	r0, #53932	; 0xd2ac
   4d848:	movt	r0, #7
   4d84c:	bx	lr
   4d850:	movw	r0, #54016	; 0xd300
   4d854:	movt	r0, #7
   4d858:	bx	lr
   4d85c:	movw	r0, #53720	; 0xd1d8
   4d860:	movt	r0, #7
   4d864:	bx	lr
   4d868:	movw	r0, #54056	; 0xd328
   4d86c:	movt	r0, #7
   4d870:	bx	lr
   4d874:	movw	r0, #53964	; 0xd2cc
   4d878:	movt	r0, #7
   4d87c:	bx	lr
   4d880:	movw	r0, #53896	; 0xd288
   4d884:	movt	r0, #7
   4d888:	bx	lr
   4d88c:	movw	r0, #53832	; 0xd248
   4d890:	movt	r0, #7
   4d894:	bx	lr
   4d898:	movw	r0, #53768	; 0xd208
   4d89c:	movt	r0, #7
   4d8a0:	bx	lr
   4d8a4:	movw	r0, #54184	; 0xd3a8
   4d8a8:	movt	r0, #7
   4d8ac:	bx	lr
   4d8b0:	movw	r0, #53784	; 0xd218
   4d8b4:	movt	r0, #7
   4d8b8:	bx	lr
   4d8bc:	movw	r0, #54036	; 0xd314
   4d8c0:	movt	r0, #7
   4d8c4:	bx	lr
   4d8c8:	movw	r0, #54116	; 0xd364
   4d8cc:	movt	r0, #7
   4d8d0:	bx	lr
   4d8d4:	movw	r0, #53848	; 0xd258
   4d8d8:	movt	r0, #7
   4d8dc:	bx	lr
   4d8e0:	movw	r0, #53752	; 0xd1f8
   4d8e4:	movt	r0, #7
   4d8e8:	bx	lr
   4d8ec:	movw	r0, #54164	; 0xd394
   4d8f0:	movt	r0, #7
   4d8f4:	bx	lr
   4d8f8:	movw	r0, #54140	; 0xd37c
   4d8fc:	movt	r0, #7
   4d900:	bx	lr
   4d904:	movw	r0, #53816	; 0xd238
   4d908:	movt	r0, #7
   4d90c:	bx	lr
   4d910:	movw	r0, #53996	; 0xd2ec
   4d914:	movt	r0, #7
   4d918:	bx	lr
   4d91c:	movw	r0, #53912	; 0xd298
   4d920:	movt	r0, #7
   4d924:	bx	lr
   4d928:	movw	r0, #53880	; 0xd278
   4d92c:	movt	r0, #7
   4d930:	bx	lr
   4d934:	movw	r0, #54072	; 0xd338
   4d938:	movt	r0, #7
   4d93c:	bx	lr
   4d940:	cmp	r0, #107	; 0x6b
   4d944:	beq	4e854 <warn@@Base+0x2e68>
   4d948:	bls	4d9b8 <warn@@Base+0x1fcc>
   4d94c:	movw	r3, #8459	; 0x210b
   4d950:	cmp	r0, r3
   4d954:	beq	4e878 <warn@@Base+0x2e8c>
   4d958:	bhi	4da5c <warn@@Base+0x2070>
   4d95c:	movw	r3, #8213	; 0x2015
   4d960:	cmp	r0, r3
   4d964:	beq	4e83c <warn@@Base+0x2e50>
   4d968:	bhi	4dac0 <warn@@Base+0x20d4>
   4d96c:	movw	r3, #8197	; 0x2005
   4d970:	cmp	r0, r3
   4d974:	beq	4e474 <warn@@Base+0x2a88>
   4d978:	bhi	4dcd4 <warn@@Base+0x22e8>
   4d97c:	cmp	r0, #137	; 0x89
   4d980:	beq	4df4c <warn@@Base+0x2560>
   4d984:	bls	4df94 <warn@@Base+0x25a8>
   4d988:	movw	r3, #8194	; 0x2002
   4d98c:	cmp	r0, r3
   4d990:	beq	4e774 <warn@@Base+0x2d88>
   4d994:	bhi	4e138 <warn@@Base+0x274c>
   4d998:	cmp	r0, #8192	; 0x2000
   4d99c:	beq	4e4a4 <warn@@Base+0x2ab8>
   4d9a0:	movw	r3, #8193	; 0x2001
   4d9a4:	cmp	r0, r3
   4d9a8:	bne	4e7f8 <warn@@Base+0x2e0c>
   4d9ac:	movw	r0, #56036	; 0xdae4
   4d9b0:	movt	r0, #7
   4d9b4:	bx	lr
   4d9b8:	cmp	r0, #61	; 0x3d
   4d9bc:	beq	4e860 <warn@@Base+0x2e74>
   4d9c0:	bhi	4da10 <warn@@Base+0x2024>
   4d9c4:	cmp	r0, #29
   4d9c8:	beq	4e848 <warn@@Base+0x2e5c>
   4d9cc:	bhi	4db14 <warn@@Base+0x2128>
   4d9d0:	cmp	r0, #17
   4d9d4:	beq	4e7e0 <warn@@Base+0x2df4>
   4d9d8:	bhi	4dbe4 <warn@@Base+0x21f8>
   4d9dc:	cmp	r0, #10
   4d9e0:	beq	4df88 <warn@@Base+0x259c>
   4d9e4:	bls	4e018 <warn@@Base+0x262c>
   4d9e8:	cmp	r0, #13
   4d9ec:	beq	4e714 <warn@@Base+0x2d28>
   4d9f0:	bhi	4e1c0 <warn@@Base+0x27d4>
   4d9f4:	cmp	r0, #11
   4d9f8:	beq	4e4ec <warn@@Base+0x2b00>
   4d9fc:	cmp	r0, #12
   4da00:	bne	4e7f8 <warn@@Base+0x2e0c>
   4da04:	movw	r0, #54304	; 0xd420
   4da08:	movt	r0, #7
   4da0c:	bx	lr
   4da10:	cmp	r0, #84	; 0x54
   4da14:	beq	4e86c <warn@@Base+0x2e80>
   4da18:	bhi	4dba4 <warn@@Base+0x21b8>
   4da1c:	cmp	r0, #72	; 0x48
   4da20:	beq	4e498 <warn@@Base+0x2aac>
   4da24:	bhi	4dc18 <warn@@Base+0x222c>
   4da28:	cmp	r0, #66	; 0x42
   4da2c:	beq	4df40 <warn@@Base+0x2554>
   4da30:	bls	4e09c <warn@@Base+0x26b0>
   4da34:	cmp	r0, #69	; 0x45
   4da38:	beq	4e744 <warn@@Base+0x2d58>
   4da3c:	bhi	4e0f8 <warn@@Base+0x270c>
   4da40:	cmp	r0, #67	; 0x43
   4da44:	beq	4e444 <warn@@Base+0x2a58>
   4da48:	cmp	r0, #68	; 0x44
   4da4c:	bne	4e7f8 <warn@@Base+0x2e0c>
   4da50:	movw	r0, #55180	; 0xd78c
   4da54:	movt	r0, #7
   4da58:	bx	lr
   4da5c:	movw	r3, #8705	; 0x2201
   4da60:	cmp	r0, r3
   4da64:	beq	4e884 <warn@@Base+0x2e98>
   4da68:	bhi	4db54 <warn@@Base+0x2168>
   4da6c:	movw	r3, #8470	; 0x2116
   4da70:	cmp	r0, r3
   4da74:	beq	4e830 <warn@@Base+0x2e44>
   4da78:	bhi	4dc4c <warn@@Base+0x2260>
   4da7c:	movw	r3, #8464	; 0x2110
   4da80:	cmp	r0, r3
   4da84:	beq	4df34 <warn@@Base+0x2548>
   4da88:	bls	4dfe4 <warn@@Base+0x25f8>
   4da8c:	movw	r3, #8467	; 0x2113
   4da90:	cmp	r0, r3
   4da94:	beq	4e890 <warn@@Base+0x2ea4>
   4da98:	bhi	4e15c <warn@@Base+0x2770>
   4da9c:	movw	r3, #8465	; 0x2111
   4daa0:	cmp	r0, r3
   4daa4:	beq	4e4d4 <warn@@Base+0x2ae8>
   4daa8:	add	r3, r3, #1
   4daac:	cmp	r0, r3
   4dab0:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dab4:	movw	r0, #57196	; 0xdf6c
   4dab8:	movt	r0, #7
   4dabc:	bx	lr
   4dac0:	movw	r3, #8227	; 0x2023
   4dac4:	cmp	r0, r3
   4dac8:	beq	4e480 <warn@@Base+0x2a94>
   4dacc:	bhi	4dc90 <warn@@Base+0x22a4>
   4dad0:	movw	r3, #8218	; 0x201a
   4dad4:	cmp	r0, r3
   4dad8:	beq	4df58 <warn@@Base+0x256c>
   4dadc:	bls	4e0c4 <warn@@Base+0x26d8>
   4dae0:	movw	r3, #8224	; 0x2020
   4dae4:	cmp	r0, r3
   4dae8:	beq	4e6e4 <warn@@Base+0x2cf8>
   4daec:	bhi	4e114 <warn@@Base+0x2728>
   4daf0:	movw	r3, #8219	; 0x201b
   4daf4:	cmp	r0, r3
   4daf8:	beq	4e6b4 <warn@@Base+0x2cc8>
   4dafc:	add	r3, r3, #4
   4db00:	cmp	r0, r3
   4db04:	bne	4e7f8 <warn@@Base+0x2e0c>
   4db08:	movw	r0, #56656	; 0xdd50
   4db0c:	movt	r0, #7
   4db10:	bx	lr
   4db14:	cmp	r0, #49	; 0x31
   4db18:	beq	4e624 <warn@@Base+0x2c38>
   4db1c:	bhi	4dd18 <warn@@Base+0x232c>
   4db20:	cmp	r0, #37	; 0x25
   4db24:	beq	4df7c <warn@@Base+0x2590>
   4db28:	bls	4e074 <warn@@Base+0x2688>
   4db2c:	cmp	r0, #44	; 0x2c
   4db30:	beq	4e6cc <warn@@Base+0x2ce0>
   4db34:	bhi	4e1dc <warn@@Base+0x27f0>
   4db38:	cmp	r0, #39	; 0x27
   4db3c:	beq	4e51c <warn@@Base+0x2b30>
   4db40:	cmp	r0, #42	; 0x2a
   4db44:	bne	4e7f8 <warn@@Base+0x2e0c>
   4db48:	movw	r0, #54724	; 0xd5c4
   4db4c:	movt	r0, #7
   4db50:	bx	lr
   4db54:	movw	r3, #16354	; 0x3fe2
   4db58:	cmp	r0, r3
   4db5c:	beq	4e7d4 <warn@@Base+0x2de8>
   4db60:	bhi	4dd4c <warn@@Base+0x2360>
   4db64:	movw	r3, #8965	; 0x2305
   4db68:	cmp	r0, r3
   4db6c:	beq	4df70 <warn@@Base+0x2584>
   4db70:	bls	4e040 <warn@@Base+0x2654>
   4db74:	movw	r3, #14849	; 0x3a01
   4db78:	cmp	r0, r3
   4db7c:	beq	4e78c <warn@@Base+0x2da0>
   4db80:	bhi	4e19c <warn@@Base+0x27b0>
   4db84:	movw	r3, #12816	; 0x3210
   4db88:	cmp	r0, r3
   4db8c:	beq	4e504 <warn@@Base+0x2b18>
   4db90:	cmp	r0, #14848	; 0x3a00
   4db94:	bne	4e7f8 <warn@@Base+0x2e0c>
   4db98:	movw	r0, #57772	; 0xe1ac
   4db9c:	movt	r0, #7
   4dba0:	bx	lr
   4dba4:	cmp	r0, #95	; 0x5f
   4dba8:	beq	4e7ec <warn@@Base+0x2e00>
   4dbac:	bhi	4dd90 <warn@@Base+0x23a4>
   4dbb0:	cmp	r0, #89	; 0x59
   4dbb4:	beq	4df64 <warn@@Base+0x2578>
   4dbb8:	bls	4dfbc <warn@@Base+0x25d0>
   4dbbc:	cmp	r0, #92	; 0x5c
   4dbc0:	beq	4e7a4 <warn@@Base+0x2db8>
   4dbc4:	bhi	4e180 <warn@@Base+0x2794>
   4dbc8:	cmp	r0, #90	; 0x5a
   4dbcc:	beq	4e4bc <warn@@Base+0x2ad0>
   4dbd0:	cmp	r0, #91	; 0x5b
   4dbd4:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dbd8:	movw	r0, #55616	; 0xd940
   4dbdc:	movt	r0, #7
   4dbe0:	bx	lr
   4dbe4:	cmp	r0, #23
   4dbe8:	beq	4e654 <warn@@Base+0x2c68>
   4dbec:	bhi	4de7c <warn@@Base+0x2490>
   4dbf0:	cmp	r0, #20
   4dbf4:	beq	4e66c <warn@@Base+0x2c80>
   4dbf8:	bhi	4e1f8 <warn@@Base+0x280c>
   4dbfc:	cmp	r0, #18
   4dc00:	beq	4e660 <warn@@Base+0x2c74>
   4dc04:	cmp	r0, #19
   4dc08:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dc0c:	movw	r0, #54408	; 0xd488
   4dc10:	movt	r0, #7
   4dc14:	bx	lr
   4dc18:	cmp	r0, #78	; 0x4e
   4dc1c:	beq	4e920 <warn@@Base+0x2f34>
   4dc20:	bhi	4de2c <warn@@Base+0x2440>
   4dc24:	cmp	r0, #75	; 0x4b
   4dc28:	beq	4e57c <warn@@Base+0x2b90>
   4dc2c:	bhi	4e29c <warn@@Base+0x28b0>
   4dc30:	cmp	r0, #73	; 0x49
   4dc34:	beq	4e570 <warn@@Base+0x2b84>
   4dc38:	cmp	r0, #74	; 0x4a
   4dc3c:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dc40:	movw	r0, #55288	; 0xd7f8
   4dc44:	movt	r0, #7
   4dc48:	bx	lr
   4dc4c:	movw	r3, #8497	; 0x2131
   4dc50:	cmp	r0, r3
   4dc54:	beq	4e8f0 <warn@@Base+0x2f04>
   4dc58:	bhi	4ddf8 <warn@@Base+0x240c>
   4dc5c:	movw	r3, #8473	; 0x2119
   4dc60:	cmp	r0, r3
   4dc64:	beq	4e938 <warn@@Base+0x2f4c>
   4dc68:	bhi	4e3b8 <warn@@Base+0x29cc>
   4dc6c:	movw	r3, #8471	; 0x2117
   4dc70:	cmp	r0, r3
   4dc74:	beq	4e92c <warn@@Base+0x2f40>
   4dc78:	add	r3, r3, #1
   4dc7c:	cmp	r0, r3
   4dc80:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dc84:	movw	r0, #57376	; 0xe020
   4dc88:	movt	r0, #7
   4dc8c:	bx	lr
   4dc90:	movw	r3, #8453	; 0x2105
   4dc94:	cmp	r0, r3
   4dc98:	beq	4e594 <warn@@Base+0x2ba8>
   4dc9c:	bhi	4dea4 <warn@@Base+0x24b8>
   4dca0:	movw	r3, #8450	; 0x2102
   4dca4:	cmp	r0, r3
   4dca8:	beq	4e5ac <warn@@Base+0x2bc0>
   4dcac:	bhi	4e254 <warn@@Base+0x2868>
   4dcb0:	movw	r3, #8233	; 0x2029
   4dcb4:	cmp	r0, r3
   4dcb8:	beq	4e5a0 <warn@@Base+0x2bb4>
   4dcbc:	add	r3, r3, #216	; 0xd8
   4dcc0:	cmp	r0, r3
   4dcc4:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dcc8:	movw	r0, #56808	; 0xdde8
   4dccc:	movt	r0, #7
   4dcd0:	bx	lr
   4dcd4:	movw	r3, #8203	; 0x200b
   4dcd8:	cmp	r0, r3
   4dcdc:	beq	4e534 <warn@@Base+0x2b48>
   4dce0:	bhi	4ddc4 <warn@@Base+0x23d8>
   4dce4:	movw	r3, #8200	; 0x2008
   4dce8:	cmp	r0, r3
   4dcec:	beq	4e54c <warn@@Base+0x2b60>
   4dcf0:	bhi	4e214 <warn@@Base+0x2828>
   4dcf4:	movw	r3, #8198	; 0x2006
   4dcf8:	cmp	r0, r3
   4dcfc:	beq	4e540 <warn@@Base+0x2b54>
   4dd00:	add	r3, r3, #1
   4dd04:	cmp	r0, r3
   4dd08:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dd0c:	movw	r0, #56196	; 0xdb84
   4dd10:	movt	r0, #7
   4dd14:	bx	lr
   4dd18:	cmp	r0, #55	; 0x37
   4dd1c:	beq	4e950 <warn@@Base+0x2f64>
   4dd20:	bhi	4de54 <warn@@Base+0x2468>
   4dd24:	cmp	r0, #52	; 0x34
   4dd28:	beq	4e908 <warn@@Base+0x2f1c>
   4dd2c:	bhi	4e314 <warn@@Base+0x2928>
   4dd30:	cmp	r0, #50	; 0x32
   4dd34:	beq	4e8fc <warn@@Base+0x2f10>
   4dd38:	cmp	r0, #51	; 0x33
   4dd3c:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dd40:	movw	r0, #54848	; 0xd640
   4dd44:	movt	r0, #7
   4dd48:	bx	lr
   4dd4c:	movw	r3, #16360	; 0x3fe8
   4dd50:	cmp	r0, r3
   4dd54:	beq	4e5c4 <warn@@Base+0x2bd8>
   4dd58:	bhi	4df00 <warn@@Base+0x2514>
   4dd5c:	movw	r3, #16357	; 0x3fe5
   4dd60:	cmp	r0, r3
   4dd64:	beq	4e968 <warn@@Base+0x2f7c>
   4dd68:	bhi	4e394 <warn@@Base+0x29a8>
   4dd6c:	movw	r3, #16355	; 0x3fe3
   4dd70:	cmp	r0, r3
   4dd74:	beq	4e95c <warn@@Base+0x2f70>
   4dd78:	add	r3, r3, #1
   4dd7c:	cmp	r0, r3
   4dd80:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dd84:	movw	r0, #57888	; 0xe220
   4dd88:	movt	r0, #7
   4dd8c:	bx	lr
   4dd90:	cmp	r0, #101	; 0x65
   4dd94:	beq	4e5f4 <warn@@Base+0x2c08>
   4dd98:	bhi	4ded8 <warn@@Base+0x24ec>
   4dd9c:	cmp	r0, #98	; 0x62
   4dda0:	beq	4e60c <warn@@Base+0x2c20>
   4dda4:	bhi	4e238 <warn@@Base+0x284c>
   4dda8:	cmp	r0, #96	; 0x60
   4ddac:	beq	4e600 <warn@@Base+0x2c14>
   4ddb0:	cmp	r0, #97	; 0x61
   4ddb4:	bne	4e7f8 <warn@@Base+0x2e0c>
   4ddb8:	movw	r0, #55732	; 0xd9b4
   4ddbc:	movt	r0, #7
   4ddc0:	bx	lr
   4ddc4:	movw	r3, #8210	; 0x2012
   4ddc8:	cmp	r0, r3
   4ddcc:	beq	4e684 <warn@@Base+0x2c98>
   4ddd0:	bhi	4e278 <warn@@Base+0x288c>
   4ddd4:	movw	r3, #8208	; 0x2010
   4ddd8:	cmp	r0, r3
   4dddc:	beq	4e8c0 <warn@@Base+0x2ed4>
   4dde0:	add	r3, r3, #1
   4dde4:	cmp	r0, r3
   4dde8:	bne	4e7f8 <warn@@Base+0x2e0c>
   4ddec:	movw	r0, #56368	; 0xdc30
   4ddf0:	movt	r0, #7
   4ddf4:	bx	lr
   4ddf8:	movw	r3, #8500	; 0x2134
   4ddfc:	cmp	r0, r3
   4de00:	beq	4e818 <warn@@Base+0x2e2c>
   4de04:	bhi	4e370 <warn@@Base+0x2984>
   4de08:	movw	r3, #8498	; 0x2132
   4de0c:	cmp	r0, r3
   4de10:	beq	4e564 <warn@@Base+0x2b78>
   4de14:	add	r3, r3, #1
   4de18:	cmp	r0, r3
   4de1c:	bne	4e7f8 <warn@@Base+0x2e0c>
   4de20:	movw	r0, #57512	; 0xe0a8
   4de24:	movt	r0, #7
   4de28:	bx	lr
   4de2c:	cmp	r0, #81	; 0x51
   4de30:	beq	4e8d8 <warn@@Base+0x2eec>
   4de34:	bhi	4e354 <warn@@Base+0x2968>
   4de38:	cmp	r0, #79	; 0x4f
   4de3c:	beq	4e8cc <warn@@Base+0x2ee0>
   4de40:	cmp	r0, #80	; 0x50
   4de44:	bne	4e7f8 <warn@@Base+0x2e0c>
   4de48:	movw	r0, #55420	; 0xd87c
   4de4c:	movt	r0, #7
   4de50:	bx	lr
   4de54:	cmp	r0, #58	; 0x3a
   4de58:	beq	4e69c <warn@@Base+0x2cb0>
   4de5c:	bhi	4e2f8 <warn@@Base+0x290c>
   4de60:	cmp	r0, #56	; 0x38
   4de64:	beq	4e980 <warn@@Base+0x2f94>
   4de68:	cmp	r0, #57	; 0x39
   4de6c:	bne	4e7f8 <warn@@Base+0x2e0c>
   4de70:	movw	r0, #54976	; 0xd6c0
   4de74:	movt	r0, #7
   4de78:	bx	lr
   4de7c:	cmp	r0, #26
   4de80:	beq	4e998 <warn@@Base+0x2fac>
   4de84:	bhi	4e3dc <warn@@Base+0x29f0>
   4de88:	cmp	r0, #24
   4de8c:	beq	4e98c <warn@@Base+0x2fa0>
   4de90:	cmp	r0, #25
   4de94:	bne	4e7f8 <warn@@Base+0x2e0c>
   4de98:	movw	r0, #54508	; 0xd4ec
   4de9c:	movt	r0, #7
   4dea0:	bx	lr
   4dea4:	movw	r3, #8456	; 0x2108
   4dea8:	cmp	r0, r3
   4deac:	beq	4e800 <warn@@Base+0x2e14>
   4deb0:	bhi	4e330 <warn@@Base+0x2944>
   4deb4:	movw	r3, #8454	; 0x2106
   4deb8:	cmp	r0, r3
   4debc:	beq	4e48c <warn@@Base+0x2aa0>
   4dec0:	add	r3, r3, #1
   4dec4:	cmp	r0, r3
   4dec8:	bne	4e7f8 <warn@@Base+0x2e0c>
   4decc:	movw	r0, #56912	; 0xde50
   4ded0:	movt	r0, #7
   4ded4:	bx	lr
   4ded8:	cmp	r0, #104	; 0x68
   4dedc:	beq	4e5dc <warn@@Base+0x2bf0>
   4dee0:	bhi	4e2dc <warn@@Base+0x28f0>
   4dee4:	cmp	r0, #102	; 0x66
   4dee8:	beq	4e5d0 <warn@@Base+0x2be4>
   4deec:	cmp	r0, #103	; 0x67
   4def0:	bne	4e7f8 <warn@@Base+0x2e0c>
   4def4:	movw	r0, #55844	; 0xda24
   4def8:	movt	r0, #7
   4defc:	bx	lr
   4df00:	movw	r3, #16363	; 0x3feb
   4df04:	cmp	r0, r3
   4df08:	beq	4e63c <warn@@Base+0x2c50>
   4df0c:	bhi	4e2b8 <warn@@Base+0x28cc>
   4df10:	movw	r3, #16361	; 0x3fe9
   4df14:	cmp	r0, r3
   4df18:	beq	4e630 <warn@@Base+0x2c44>
   4df1c:	add	r3, r3, #1
   4df20:	cmp	r0, r3
   4df24:	bne	4e7f8 <warn@@Base+0x2e0c>
   4df28:	movw	r0, #58052	; 0xe2c4
   4df2c:	movt	r0, #7
   4df30:	bx	lr
   4df34:	movw	r0, #57144	; 0xdf38
   4df38:	movt	r0, #7
   4df3c:	bx	lr
   4df40:	movw	r0, #55136	; 0xd760
   4df44:	movt	r0, #7
   4df48:	bx	lr
   4df4c:	movw	r0, #56012	; 0xdacc
   4df50:	movt	r0, #7
   4df54:	bx	lr
   4df58:	movw	r0, #56612	; 0xdd24
   4df5c:	movt	r0, #7
   4df60:	bx	lr
   4df64:	movw	r0, #55580	; 0xd91c
   4df68:	movt	r0, #7
   4df6c:	bx	lr
   4df70:	movw	r0, #57728	; 0xe180
   4df74:	movt	r0, #7
   4df78:	bx	lr
   4df7c:	movw	r0, #54688	; 0xd5a0
   4df80:	movt	r0, #7
   4df84:	bx	lr
   4df88:	movw	r0, #54268	; 0xd3fc
   4df8c:	movt	r0, #7
   4df90:	bx	lr
   4df94:	cmp	r0, #109	; 0x6d
   4df98:	beq	4e7c8 <warn@@Base+0x2ddc>
   4df9c:	bcc	4e7bc <warn@@Base+0x2dd0>
   4dfa0:	cmp	r0, #110	; 0x6e
   4dfa4:	beq	4e7b0 <warn@@Base+0x2dc4>
   4dfa8:	cmp	r0, #135	; 0x87
   4dfac:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dfb0:	movw	r0, #55996	; 0xdabc
   4dfb4:	movt	r0, #7
   4dfb8:	bx	lr
   4dfbc:	cmp	r0, #86	; 0x56
   4dfc0:	beq	4e8b4 <warn@@Base+0x2ec8>
   4dfc4:	bcc	4e8a8 <warn@@Base+0x2ebc>
   4dfc8:	cmp	r0, #87	; 0x57
   4dfcc:	beq	4e89c <warn@@Base+0x2eb0>
   4dfd0:	cmp	r0, #88	; 0x58
   4dfd4:	bne	4e7f8 <warn@@Base+0x2e0c>
   4dfd8:	movw	r0, #55564	; 0xd90c
   4dfdc:	movt	r0, #7
   4dfe0:	bx	lr
   4dfe4:	movw	r3, #8461	; 0x210d
   4dfe8:	cmp	r0, r3
   4dfec:	beq	4e738 <warn@@Base+0x2d4c>
   4dff0:	bcc	4e72c <warn@@Base+0x2d40>
   4dff4:	add	r3, r3, #1
   4dff8:	cmp	r0, r3
   4dffc:	beq	4e720 <warn@@Base+0x2d34>
   4e000:	add	r3, r3, #1
   4e004:	cmp	r0, r3
   4e008:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e00c:	movw	r0, #57120	; 0xdf20
   4e010:	movt	r0, #7
   4e014:	bx	lr
   4e018:	cmp	r0, #2
   4e01c:	beq	4e780 <warn@@Base+0x2d94>
   4e020:	bls	4e40c <warn@@Base+0x2a20>
   4e024:	cmp	r0, #3
   4e028:	beq	4e798 <warn@@Base+0x2dac>
   4e02c:	cmp	r0, #9
   4e030:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e034:	movw	r0, #54252	; 0xd3ec
   4e038:	movt	r0, #7
   4e03c:	bx	lr
   4e040:	movw	r3, #8962	; 0x2302
   4e044:	cmp	r0, r3
   4e048:	beq	4e438 <warn@@Base+0x2a4c>
   4e04c:	bls	4e420 <warn@@Base+0x2a34>
   4e050:	movw	r3, #8963	; 0x2303
   4e054:	cmp	r0, r3
   4e058:	beq	4e6d8 <warn@@Base+0x2cec>
   4e05c:	add	r3, r3, #1
   4e060:	cmp	r0, r3
   4e064:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e068:	movw	r0, #57704	; 0xe168
   4e06c:	movt	r0, #7
   4e070:	bx	lr
   4e074:	cmp	r0, #32
   4e078:	beq	4e75c <warn@@Base+0x2d70>
   4e07c:	bls	4e3f8 <warn@@Base+0x2a0c>
   4e080:	cmp	r0, #33	; 0x21
   4e084:	beq	4e750 <warn@@Base+0x2d64>
   4e088:	cmp	r0, #34	; 0x22
   4e08c:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e090:	movw	r0, #54668	; 0xd58c
   4e094:	movt	r0, #7
   4e098:	bx	lr
   4e09c:	cmp	r0, #63	; 0x3f
   4e0a0:	beq	4e708 <warn@@Base+0x2d1c>
   4e0a4:	bcc	4e6fc <warn@@Base+0x2d10>
   4e0a8:	cmp	r0, #64	; 0x40
   4e0ac:	beq	4e6f0 <warn@@Base+0x2d04>
   4e0b0:	cmp	r0, #65	; 0x41
   4e0b4:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e0b8:	movw	r0, #55120	; 0xd750
   4e0bc:	movt	r0, #7
   4e0c0:	bx	lr
   4e0c4:	movw	r3, #8215	; 0x2017
   4e0c8:	cmp	r0, r3
   4e0cc:	beq	4e468 <warn@@Base+0x2a7c>
   4e0d0:	bcc	4e45c <warn@@Base+0x2a70>
   4e0d4:	add	r3, r3, #1
   4e0d8:	cmp	r0, r3
   4e0dc:	beq	4e450 <warn@@Base+0x2a64>
   4e0e0:	add	r3, r3, #1
   4e0e4:	cmp	r0, r3
   4e0e8:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e0ec:	movw	r0, #56576	; 0xdd00
   4e0f0:	movt	r0, #7
   4e0f4:	bx	lr
   4e0f8:	cmp	r0, #70	; 0x46
   4e0fc:	beq	4e6c0 <warn@@Base+0x2cd4>
   4e100:	cmp	r0, #71	; 0x47
   4e104:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e108:	movw	r0, #55236	; 0xd7c4
   4e10c:	movt	r0, #7
   4e110:	bx	lr
   4e114:	movw	r3, #8225	; 0x2021
   4e118:	cmp	r0, r3
   4e11c:	beq	4e4b0 <warn@@Base+0x2ac4>
   4e120:	add	r3, r3, #1
   4e124:	cmp	r0, r3
   4e128:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e12c:	movw	r0, #56724	; 0xdd94
   4e130:	movt	r0, #7
   4e134:	bx	lr
   4e138:	movw	r3, #8195	; 0x2003
   4e13c:	cmp	r0, r3
   4e140:	beq	4e4e0 <warn@@Base+0x2af4>
   4e144:	add	r3, r3, #1
   4e148:	cmp	r0, r3
   4e14c:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e150:	movw	r0, #56104	; 0xdb28
   4e154:	movt	r0, #7
   4e158:	bx	lr
   4e15c:	movw	r3, #8468	; 0x2114
   4e160:	cmp	r0, r3
   4e164:	beq	4e4c8 <warn@@Base+0x2adc>
   4e168:	add	r3, r3, #1
   4e16c:	cmp	r0, r3
   4e170:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e174:	movw	r0, #57296	; 0xdfd0
   4e178:	movt	r0, #7
   4e17c:	bx	lr
   4e180:	cmp	r0, #93	; 0x5d
   4e184:	beq	4e510 <warn@@Base+0x2b24>
   4e188:	cmp	r0, #94	; 0x5e
   4e18c:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e190:	movw	r0, #55668	; 0xd974
   4e194:	movt	r0, #7
   4e198:	bx	lr
   4e19c:	movw	r3, #14850	; 0x3a02
   4e1a0:	cmp	r0, r3
   4e1a4:	beq	4e4f8 <warn@@Base+0x2b0c>
   4e1a8:	movw	r3, #16353	; 0x3fe1
   4e1ac:	cmp	r0, r3
   4e1b0:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e1b4:	movw	r0, #57828	; 0xe1e4
   4e1b8:	movt	r0, #7
   4e1bc:	bx	lr
   4e1c0:	cmp	r0, #15
   4e1c4:	beq	4e528 <warn@@Base+0x2b3c>
   4e1c8:	cmp	r0, #16
   4e1cc:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e1d0:	movw	r0, #54360	; 0xd458
   4e1d4:	movt	r0, #7
   4e1d8:	bx	lr
   4e1dc:	cmp	r0, #46	; 0x2e
   4e1e0:	beq	4e678 <warn@@Base+0x2c8c>
   4e1e4:	cmp	r0, #47	; 0x2f
   4e1e8:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e1ec:	movw	r0, #54784	; 0xd600
   4e1f0:	movt	r0, #7
   4e1f4:	bx	lr
   4e1f8:	cmp	r0, #21
   4e1fc:	beq	4e558 <warn@@Base+0x2b6c>
   4e200:	cmp	r0, #22
   4e204:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e208:	movw	r0, #54452	; 0xd4b4
   4e20c:	movt	r0, #7
   4e210:	bx	lr
   4e214:	movw	r3, #8201	; 0x2009
   4e218:	cmp	r0, r3
   4e21c:	beq	4e618 <warn@@Base+0x2c2c>
   4e220:	add	r3, r3, #1
   4e224:	cmp	r0, r3
   4e228:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e22c:	movw	r0, #56268	; 0xdbcc
   4e230:	movt	r0, #7
   4e234:	bx	lr
   4e238:	cmp	r0, #99	; 0x63
   4e23c:	beq	4e5b8 <warn@@Base+0x2bcc>
   4e240:	cmp	r0, #100	; 0x64
   4e244:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e248:	movw	r0, #55788	; 0xd9ec
   4e24c:	movt	r0, #7
   4e250:	bx	lr
   4e254:	movw	r3, #8451	; 0x2103
   4e258:	cmp	r0, r3
   4e25c:	beq	4e690 <warn@@Base+0x2ca4>
   4e260:	add	r3, r3, #1
   4e264:	cmp	r0, r3
   4e268:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e26c:	movw	r0, #56856	; 0xde18
   4e270:	movt	r0, #7
   4e274:	bx	lr
   4e278:	movw	r3, #8211	; 0x2013
   4e27c:	cmp	r0, r3
   4e280:	beq	4e588 <warn@@Base+0x2b9c>
   4e284:	add	r3, r3, #1
   4e288:	cmp	r0, r3
   4e28c:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e290:	movw	r0, #56448	; 0xdc80
   4e294:	movt	r0, #7
   4e298:	bx	lr
   4e29c:	cmp	r0, #76	; 0x4c
   4e2a0:	beq	4e648 <warn@@Base+0x2c5c>
   4e2a4:	cmp	r0, #77	; 0x4d
   4e2a8:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e2ac:	movw	r0, #55356	; 0xd83c
   4e2b0:	movt	r0, #7
   4e2b4:	bx	lr
   4e2b8:	movw	r3, #16364	; 0x3fec
   4e2bc:	cmp	r0, r3
   4e2c0:	beq	4e5e8 <warn@@Base+0x2bfc>
   4e2c4:	add	r3, r3, #1
   4e2c8:	cmp	r0, r3
   4e2cc:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e2d0:	movw	r0, #58144	; 0xe320
   4e2d4:	movt	r0, #7
   4e2d8:	bx	lr
   4e2dc:	cmp	r0, #105	; 0x69
   4e2e0:	beq	4e6a8 <warn@@Base+0x2cbc>
   4e2e4:	cmp	r0, #106	; 0x6a
   4e2e8:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e2ec:	movw	r0, #55888	; 0xda50
   4e2f0:	movt	r0, #7
   4e2f4:	bx	lr
   4e2f8:	cmp	r0, #59	; 0x3b
   4e2fc:	beq	4e914 <warn@@Base+0x2f28>
   4e300:	cmp	r0, #60	; 0x3c
   4e304:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e308:	movw	r0, #55028	; 0xd6f4
   4e30c:	movt	r0, #7
   4e310:	bx	lr
   4e314:	cmp	r0, #53	; 0x35
   4e318:	beq	4e80c <warn@@Base+0x2e20>
   4e31c:	cmp	r0, #54	; 0x36
   4e320:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e324:	movw	r0, #54908	; 0xd67c
   4e328:	movt	r0, #7
   4e32c:	bx	lr
   4e330:	movw	r3, #8457	; 0x2109
   4e334:	cmp	r0, r3
   4e338:	beq	4e8e4 <warn@@Base+0x2ef8>
   4e33c:	add	r3, r3, #1
   4e340:	cmp	r0, r3
   4e344:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e348:	movw	r0, #56980	; 0xde94
   4e34c:	movt	r0, #7
   4e350:	bx	lr
   4e354:	cmp	r0, #82	; 0x52
   4e358:	beq	4e824 <warn@@Base+0x2e38>
   4e35c:	cmp	r0, #83	; 0x53
   4e360:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e364:	movw	r0, #55476	; 0xd8b4
   4e368:	movt	r0, #7
   4e36c:	bx	lr
   4e370:	movw	r3, #8501	; 0x2135
   4e374:	cmp	r0, r3
   4e378:	beq	4e974 <warn@@Base+0x2f88>
   4e37c:	add	r3, r3, #1
   4e380:	cmp	r0, r3
   4e384:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e388:	movw	r0, #57572	; 0xe0e4
   4e38c:	movt	r0, #7
   4e390:	bx	lr
   4e394:	movw	r3, #16358	; 0x3fe6
   4e398:	cmp	r0, r3
   4e39c:	beq	4e944 <warn@@Base+0x2f58>
   4e3a0:	add	r3, r3, #1
   4e3a4:	cmp	r0, r3
   4e3a8:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e3ac:	movw	r0, #57968	; 0xe270
   4e3b0:	movt	r0, #7
   4e3b4:	bx	lr
   4e3b8:	movw	r3, #8474	; 0x211a
   4e3bc:	cmp	r0, r3
   4e3c0:	beq	4e9a4 <warn@@Base+0x2fb8>
   4e3c4:	add	r3, r3, #22
   4e3c8:	cmp	r0, r3
   4e3cc:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e3d0:	movw	r0, #57448	; 0xe068
   4e3d4:	movt	r0, #7
   4e3d8:	bx	lr
   4e3dc:	cmp	r0, #27
   4e3e0:	beq	4e768 <warn@@Base+0x2d7c>
   4e3e4:	cmp	r0, #28
   4e3e8:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e3ec:	movw	r0, #54568	; 0xd528
   4e3f0:	movt	r0, #7
   4e3f4:	bx	lr
   4e3f8:	cmp	r0, #30
   4e3fc:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e400:	movw	r0, #54612	; 0xd554
   4e404:	movt	r0, #7
   4e408:	bx	lr
   4e40c:	cmp	r0, #1
   4e410:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e414:	movw	r0, #54208	; 0xd3c0
   4e418:	movt	r0, #7
   4e41c:	bx	lr
   4e420:	movw	r3, #8961	; 0x2301
   4e424:	cmp	r0, r3
   4e428:	bne	4e7f8 <warn@@Base+0x2e0c>
   4e42c:	movw	r0, #57624	; 0xe118
   4e430:	movt	r0, #7
   4e434:	bx	lr
   4e438:	movw	r0, #57656	; 0xe138
   4e43c:	movt	r0, #7
   4e440:	bx	lr
   4e444:	movw	r0, #55160	; 0xd778
   4e448:	movt	r0, #7
   4e44c:	bx	lr
   4e450:	movw	r0, #56544	; 0xdce0
   4e454:	movt	r0, #7
   4e458:	bx	lr
   4e45c:	movw	r0, #56496	; 0xdcb0
   4e460:	movt	r0, #7
   4e464:	bx	lr
   4e468:	movw	r0, #56516	; 0xdcc4
   4e46c:	movt	r0, #7
   4e470:	bx	lr
   4e474:	movw	r0, #56128	; 0xdb40
   4e478:	movt	r0, #7
   4e47c:	bx	lr
   4e480:	movw	r0, #56752	; 0xddb0
   4e484:	movt	r0, #7
   4e488:	bx	lr
   4e48c:	movw	r0, #56896	; 0xde40
   4e490:	movt	r0, #7
   4e494:	bx	lr
   4e498:	movw	r0, #55256	; 0xd7d8
   4e49c:	movt	r0, #7
   4e4a0:	bx	lr
   4e4a4:	movw	r0, #56316	; 0xdbfc
   4e4a8:	movt	r0, #7
   4e4ac:	bx	lr
   4e4b0:	movw	r0, #56696	; 0xdd78
   4e4b4:	movt	r0, #7
   4e4b8:	bx	lr
   4e4bc:	movw	r0, #55596	; 0xd92c
   4e4c0:	movt	r0, #7
   4e4c4:	bx	lr
   4e4c8:	movw	r0, #57256	; 0xdfa8
   4e4cc:	movt	r0, #7
   4e4d0:	bx	lr
   4e4d4:	movw	r0, #57168	; 0xdf50
   4e4d8:	movt	r0, #7
   4e4dc:	bx	lr
   4e4e0:	movw	r0, #56076	; 0xdb0c
   4e4e4:	movt	r0, #7
   4e4e8:	bx	lr
   4e4ec:	movw	r0, #54288	; 0xd410
   4e4f0:	movt	r0, #7
   4e4f4:	bx	lr
   4e4f8:	movw	r0, #57808	; 0xe1d0
   4e4fc:	movt	r0, #7
   4e500:	bx	lr
   4e504:	movw	r0, #57744	; 0xe190
   4e508:	movt	r0, #7
   4e50c:	bx	lr
   4e510:	movw	r0, #55656	; 0xd968
   4e514:	movt	r0, #7
   4e518:	bx	lr
   4e51c:	movw	r0, #54704	; 0xd5b0
   4e520:	movt	r0, #7
   4e524:	bx	lr
   4e528:	movw	r0, #54340	; 0xd444
   4e52c:	movt	r0, #7
   4e530:	bx	lr
   4e534:	movw	r0, #56292	; 0xdbe4
   4e538:	movt	r0, #7
   4e53c:	bx	lr
   4e540:	movw	r0, #56160	; 0xdb60
   4e544:	movt	r0, #7
   4e548:	bx	lr
   4e54c:	movw	r0, #56220	; 0xdb9c
   4e550:	movt	r0, #7
   4e554:	bx	lr
   4e558:	movw	r0, #54440	; 0xd4a8
   4e55c:	movt	r0, #7
   4e560:	bx	lr
   4e564:	movw	r0, #57488	; 0xe090
   4e568:	movt	r0, #7
   4e56c:	bx	lr
   4e570:	movw	r0, #55276	; 0xd7ec
   4e574:	movt	r0, #7
   4e578:	bx	lr
   4e57c:	movw	r0, #55308	; 0xd80c
   4e580:	movt	r0, #7
   4e584:	bx	lr
   4e588:	movw	r0, #56420	; 0xdc64
   4e58c:	movt	r0, #7
   4e590:	bx	lr
   4e594:	movw	r0, #56876	; 0xde2c
   4e598:	movt	r0, #7
   4e59c:	bx	lr
   4e5a0:	movw	r0, #56780	; 0xddcc
   4e5a4:	movt	r0, #7
   4e5a8:	bx	lr
   4e5ac:	movw	r0, #56824	; 0xddf8
   4e5b0:	movt	r0, #7
   4e5b4:	bx	lr
   4e5b8:	movw	r0, #55772	; 0xd9dc
   4e5bc:	movt	r0, #7
   4e5c0:	bx	lr
   4e5c4:	movw	r0, #57996	; 0xe28c
   4e5c8:	movt	r0, #7
   4e5cc:	bx	lr
   4e5d0:	movw	r0, #55828	; 0xda14
   4e5d4:	movt	r0, #7
   4e5d8:	bx	lr
   4e5dc:	movw	r0, #55856	; 0xda30
   4e5e0:	movt	r0, #7
   4e5e4:	bx	lr
   4e5e8:	movw	r0, #58112	; 0xe300
   4e5ec:	movt	r0, #7
   4e5f0:	bx	lr
   4e5f4:	movw	r0, #55812	; 0xda04
   4e5f8:	movt	r0, #7
   4e5fc:	bx	lr
   4e600:	movw	r0, #55708	; 0xd99c
   4e604:	movt	r0, #7
   4e608:	bx	lr
   4e60c:	movw	r0, #55748	; 0xd9c4
   4e610:	movt	r0, #7
   4e614:	bx	lr
   4e618:	movw	r0, #56240	; 0xdbb0
   4e61c:	movt	r0, #7
   4e620:	bx	lr
   4e624:	movw	r0, #54804	; 0xd614
   4e628:	movt	r0, #7
   4e62c:	bx	lr
   4e630:	movw	r0, #58024	; 0xe2a8
   4e634:	movt	r0, #7
   4e638:	bx	lr
   4e63c:	movw	r0, #58080	; 0xe2e0
   4e640:	movt	r0, #7
   4e644:	bx	lr
   4e648:	movw	r0, #55336	; 0xd828
   4e64c:	movt	r0, #7
   4e650:	bx	lr
   4e654:	movw	r0, #54472	; 0xd4c8
   4e658:	movt	r0, #7
   4e65c:	bx	lr
   4e660:	movw	r0, #54392	; 0xd478
   4e664:	movt	r0, #7
   4e668:	bx	lr
   4e66c:	movw	r0, #54424	; 0xd498
   4e670:	movt	r0, #7
   4e674:	bx	lr
   4e678:	movw	r0, #54764	; 0xd5ec
   4e67c:	movt	r0, #7
   4e680:	bx	lr
   4e684:	movw	r0, #56396	; 0xdc4c
   4e688:	movt	r0, #7
   4e68c:	bx	lr
   4e690:	movw	r0, #56840	; 0xde08
   4e694:	movt	r0, #7
   4e698:	bx	lr
   4e69c:	movw	r0, #54996	; 0xd6d4
   4e6a0:	movt	r0, #7
   4e6a4:	bx	lr
   4e6a8:	movw	r0, #55872	; 0xda40
   4e6ac:	movt	r0, #7
   4e6b0:	bx	lr
   4e6b4:	movw	r0, #56636	; 0xdd3c
   4e6b8:	movt	r0, #7
   4e6bc:	bx	lr
   4e6c0:	movw	r0, #55220	; 0xd7b4
   4e6c4:	movt	r0, #7
   4e6c8:	bx	lr
   4e6cc:	movw	r0, #54744	; 0xd5d8
   4e6d0:	movt	r0, #7
   4e6d4:	bx	lr
   4e6d8:	movw	r0, #57684	; 0xe154
   4e6dc:	movt	r0, #7
   4e6e0:	bx	lr
   4e6e4:	movw	r0, #56676	; 0xdd64
   4e6e8:	movt	r0, #7
   4e6ec:	bx	lr
   4e6f0:	movw	r0, #55100	; 0xd73c
   4e6f4:	movt	r0, #7
   4e6f8:	bx	lr
   4e6fc:	movw	r0, #55068	; 0xd71c
   4e700:	movt	r0, #7
   4e704:	bx	lr
   4e708:	movw	r0, #55084	; 0xd72c
   4e70c:	movt	r0, #7
   4e710:	bx	lr
   4e714:	movw	r0, #54324	; 0xd434
   4e718:	movt	r0, #7
   4e71c:	bx	lr
   4e720:	movw	r0, #57088	; 0xdf00
   4e724:	movt	r0, #7
   4e728:	bx	lr
   4e72c:	movw	r0, #57024	; 0xdec0
   4e730:	movt	r0, #7
   4e734:	bx	lr
   4e738:	movw	r0, #57052	; 0xdedc
   4e73c:	movt	r0, #7
   4e740:	bx	lr
   4e744:	movw	r0, #55204	; 0xd7a4
   4e748:	movt	r0, #7
   4e74c:	bx	lr
   4e750:	movw	r0, #54648	; 0xd578
   4e754:	movt	r0, #7
   4e758:	bx	lr
   4e75c:	movw	r0, #54632	; 0xd568
   4e760:	movt	r0, #7
   4e764:	bx	lr
   4e768:	movw	r0, #54552	; 0xd518
   4e76c:	movt	r0, #7
   4e770:	bx	lr
   4e774:	movw	r0, #56052	; 0xdaf4
   4e778:	movt	r0, #7
   4e77c:	bx	lr
   4e780:	movw	r0, #54224	; 0xd3d0
   4e784:	movt	r0, #7
   4e788:	bx	lr
   4e78c:	movw	r0, #57788	; 0xe1bc
   4e790:	movt	r0, #7
   4e794:	bx	lr
   4e798:	movw	r0, #54240	; 0xd3e0
   4e79c:	movt	r0, #7
   4e7a0:	bx	lr
   4e7a4:	movw	r0, #55636	; 0xd954
   4e7a8:	movt	r0, #7
   4e7ac:	bx	lr
   4e7b0:	movw	r0, #55976	; 0xdaa8
   4e7b4:	movt	r0, #7
   4e7b8:	bx	lr
   4e7bc:	movw	r0, #55936	; 0xda80
   4e7c0:	movt	r0, #7
   4e7c4:	bx	lr
   4e7c8:	movw	r0, #55956	; 0xda94
   4e7cc:	movt	r0, #7
   4e7d0:	bx	lr
   4e7d4:	movw	r0, #57852	; 0xe1fc
   4e7d8:	movt	r0, #7
   4e7dc:	bx	lr
   4e7e0:	movw	r0, #54376	; 0xd468
   4e7e4:	movt	r0, #7
   4e7e8:	bx	lr
   4e7ec:	movw	r0, #55688	; 0xd988
   4e7f0:	movt	r0, #7
   4e7f4:	bx	lr
   4e7f8:	mov	r0, #0
   4e7fc:	bx	lr
   4e800:	movw	r0, #56932	; 0xde64
   4e804:	movt	r0, #7
   4e808:	bx	lr
   4e80c:	movw	r0, #54888	; 0xd668
   4e810:	movt	r0, #7
   4e814:	bx	lr
   4e818:	movw	r0, #57532	; 0xe0bc
   4e81c:	movt	r0, #7
   4e820:	bx	lr
   4e824:	movw	r0, #55460	; 0xd8a4
   4e828:	movt	r0, #7
   4e82c:	bx	lr
   4e830:	movw	r0, #57316	; 0xdfe4
   4e834:	movt	r0, #7
   4e838:	bx	lr
   4e83c:	movw	r0, #56468	; 0xdc94
   4e840:	movt	r0, #7
   4e844:	bx	lr
   4e848:	movw	r0, #54588	; 0xd53c
   4e84c:	movt	r0, #7
   4e850:	bx	lr
   4e854:	movw	r0, #55912	; 0xda68
   4e858:	movt	r0, #7
   4e85c:	bx	lr
   4e860:	movw	r0, #55048	; 0xd708
   4e864:	movt	r0, #7
   4e868:	bx	lr
   4e86c:	movw	r0, #55492	; 0xd8c4
   4e870:	movt	r0, #7
   4e874:	bx	lr
   4e878:	movw	r0, #57000	; 0xdea8
   4e87c:	movt	r0, #7
   4e880:	bx	lr
   4e884:	movw	r0, #57596	; 0xe0fc
   4e888:	movt	r0, #7
   4e88c:	bx	lr
   4e890:	movw	r0, #57228	; 0xdf8c
   4e894:	movt	r0, #7
   4e898:	bx	lr
   4e89c:	movw	r0, #55544	; 0xd8f8
   4e8a0:	movt	r0, #7
   4e8a4:	bx	lr
   4e8a8:	movw	r0, #55508	; 0xd8d4
   4e8ac:	movt	r0, #7
   4e8b0:	bx	lr
   4e8b4:	movw	r0, #55524	; 0xd8e4
   4e8b8:	movt	r0, #7
   4e8bc:	bx	lr
   4e8c0:	movw	r0, #56340	; 0xdc14
   4e8c4:	movt	r0, #7
   4e8c8:	bx	lr
   4e8cc:	movw	r0, #55400	; 0xd868
   4e8d0:	movt	r0, #7
   4e8d4:	bx	lr
   4e8d8:	movw	r0, #55440	; 0xd890
   4e8dc:	movt	r0, #7
   4e8e0:	bx	lr
   4e8e4:	movw	r0, #56956	; 0xde7c
   4e8e8:	movt	r0, #7
   4e8ec:	bx	lr
   4e8f0:	movw	r0, #57468	; 0xe07c
   4e8f4:	movt	r0, #7
   4e8f8:	bx	lr
   4e8fc:	movw	r0, #54828	; 0xd62c
   4e900:	movt	r0, #7
   4e904:	bx	lr
   4e908:	movw	r0, #54868	; 0xd654
   4e90c:	movt	r0, #7
   4e910:	bx	lr
   4e914:	movw	r0, #55012	; 0xd6e4
   4e918:	movt	r0, #7
   4e91c:	bx	lr
   4e920:	movw	r0, #55384	; 0xd858
   4e924:	movt	r0, #7
   4e928:	bx	lr
   4e92c:	movw	r0, #57348	; 0xe004
   4e930:	movt	r0, #7
   4e934:	bx	lr
   4e938:	movw	r0, #57408	; 0xe040
   4e93c:	movt	r0, #7
   4e940:	bx	lr
   4e944:	movw	r0, #57940	; 0xe254
   4e948:	movt	r0, #7
   4e94c:	bx	lr
   4e950:	movw	r0, #54936	; 0xd698
   4e954:	movt	r0, #7
   4e958:	bx	lr
   4e95c:	movw	r0, #57872	; 0xe210
   4e960:	movt	r0, #7
   4e964:	bx	lr
   4e968:	movw	r0, #57908	; 0xe234
   4e96c:	movt	r0, #7
   4e970:	bx	lr
   4e974:	movw	r0, #57552	; 0xe0d0
   4e978:	movt	r0, #7
   4e97c:	bx	lr
   4e980:	movw	r0, #54948	; 0xd6a4
   4e984:	movt	r0, #7
   4e988:	bx	lr
   4e98c:	movw	r0, #54492	; 0xd4dc
   4e990:	movt	r0, #7
   4e994:	bx	lr
   4e998:	movw	r0, #54528	; 0xd500
   4e99c:	movt	r0, #7
   4e9a0:	bx	lr
   4e9a4:	movw	r0, #57428	; 0xe054
   4e9a8:	movt	r0, #7
   4e9ac:	bx	lr
   4e9b0:	sub	r0, r0, #3
   4e9b4:	cmp	r0, #249	; 0xf9
   4e9b8:	movwls	r3, #49500	; 0xc15c
   4e9bc:	movtls	r3, #7
   4e9c0:	ldrls	r0, [r3, r0, lsl #2]
   4e9c4:	movhi	r0, #0
   4e9c8:	bx	lr
   4e9cc:	cmp	r0, #144	; 0x90
   4e9d0:	movwls	r3, #49500	; 0xc15c
   4e9d4:	movtls	r3, #7
   4e9d8:	addls	r0, r3, r0, lsl #2
   4e9dc:	ldrls	r0, [r0, #1000]	; 0x3e8
   4e9e0:	movhi	r0, #0
   4e9e4:	bx	lr
   4e9e8:	cmp	r0, #192	; 0xc0
   4e9ec:	movwls	r3, #49500	; 0xc15c
   4e9f0:	movtls	r3, #7
   4e9f4:	addls	r0, r3, r0, lsl #2
   4e9f8:	ldrls	r0, [r0, #1580]	; 0x62c
   4e9fc:	movhi	r0, #0
   4ea00:	bx	lr
   4ea04:	ldrb	r3, [r0]
   4ea08:	cmp	r3, #0
   4ea0c:	bxeq	lr
   4ea10:	add	r2, r0, #1
   4ea14:	cmp	r3, #47	; 0x2f
   4ea18:	moveq	r0, r2
   4ea1c:	ldrb	r3, [r2], #1
   4ea20:	cmp	r3, #0
   4ea24:	bne	4ea14 <warn@@Base+0x3028>
   4ea28:	bx	lr
   4ea2c:	ldrb	r3, [r0]
   4ea30:	movw	r2, #62012	; 0xf23c
   4ea34:	movt	r2, #7
   4ea38:	lsl	r1, r3, #1
   4ea3c:	ldrh	r2, [r2, r1]
   4ea40:	tst	r2, #136	; 0x88
   4ea44:	beq	4ea58 <warn@@Base+0x306c>
   4ea48:	ldrb	r2, [r0, #1]
   4ea4c:	cmp	r2, #58	; 0x3a
   4ea50:	ldrbeq	r3, [r0, #2]
   4ea54:	addeq	r0, r0, #2
   4ea58:	cmp	r3, #0
   4ea5c:	bxeq	lr
   4ea60:	add	r2, r0, #1
   4ea64:	cmp	r3, #47	; 0x2f
   4ea68:	cmpne	r3, #92	; 0x5c
   4ea6c:	moveq	r0, r2
   4ea70:	ldrb	r3, [r2], #1
   4ea74:	cmp	r3, #0
   4ea78:	bne	4ea64 <warn@@Base+0x3078>
   4ea7c:	bx	lr
   4ea80:	ldrb	r3, [r0]
   4ea84:	cmp	r3, #0
   4ea88:	bxeq	lr
   4ea8c:	add	r2, r0, #1
   4ea90:	cmp	r3, #47	; 0x2f
   4ea94:	moveq	r0, r2
   4ea98:	ldrb	r3, [r2], #1
   4ea9c:	cmp	r3, #0
   4eaa0:	bne	4ea90 <warn@@Base+0x30a4>
   4eaa4:	bx	lr
   4eaa8:	movw	r3, #26500	; 0x6784
   4eaac:	movt	r3, #9
   4eab0:	push	{r4, lr}
   4eab4:	mov	r4, r0
   4eab8:	ldr	r3, [r3]
   4eabc:	cmp	r3, #0
   4eac0:	beq	4eac8 <warn@@Base+0x30dc>
   4eac4:	blx	r3
   4eac8:	mov	r0, r4
   4eacc:	bl	11278 <exit@plt>
   4ead0:	push	{r4, lr}
   4ead4:	movw	r4, #26404	; 0x6724
   4ead8:	movt	r4, #9
   4eadc:	movw	r3, #16664	; 0x4118
   4eae0:	movt	r3, #9
   4eae4:	ldr	r2, [r4]
   4eae8:	str	r0, [r3]
   4eaec:	cmp	r2, #0
   4eaf0:	popne	{r4, pc}
   4eaf4:	mov	r0, r2
   4eaf8:	bl	113a4 <sbrk@plt>
   4eafc:	str	r0, [r4]
   4eb00:	pop	{r4, pc}
   4eb04:	movw	r3, #26404	; 0x6724
   4eb08:	movt	r3, #9
   4eb0c:	push	{r4, r5, lr}
   4eb10:	mov	r5, r0
   4eb14:	ldr	r4, [r3]
   4eb18:	sub	sp, sp, #20
   4eb1c:	cmp	r4, #0
   4eb20:	beq	4eb88 <warn@@Base+0x319c>
   4eb24:	mov	r0, #0
   4eb28:	bl	113a4 <sbrk@plt>
   4eb2c:	rsb	r4, r4, r0
   4eb30:	movw	r3, #16664	; 0x4118
   4eb34:	movt	r3, #9
   4eb38:	movw	r2, #16692	; 0x4134
   4eb3c:	movt	r2, #9
   4eb40:	ldr	r3, [r3]
   4eb44:	movw	r1, #25084	; 0x61fc
   4eb48:	ldr	r0, [r2]
   4eb4c:	movw	r2, #13660	; 0x355c
   4eb50:	movt	r2, #6
   4eb54:	movt	r1, #7
   4eb58:	ldrb	ip, [r3]
   4eb5c:	str	r5, [sp, #4]
   4eb60:	cmp	ip, #0
   4eb64:	str	r4, [sp, #8]
   4eb68:	movne	r1, r2
   4eb6c:	movw	r2, #62524	; 0xf43c
   4eb70:	str	r1, [sp]
   4eb74:	movt	r2, #7
   4eb78:	mov	r1, #1
   4eb7c:	bl	11338 <__fprintf_chk@plt>
   4eb80:	mov	r0, #1
   4eb84:	bl	4eaa8 <warn@@Base+0x30bc>
   4eb88:	mov	r0, r4
   4eb8c:	movw	r4, #16672	; 0x4120
   4eb90:	bl	113a4 <sbrk@plt>
   4eb94:	movt	r4, #9
   4eb98:	rsb	r4, r4, r0
   4eb9c:	b	4eb30 <warn@@Base+0x3144>
   4eba0:	cmp	r0, #0
   4eba4:	push	{r4, lr}
   4eba8:	movne	r4, r0
   4ebac:	moveq	r4, #1
   4ebb0:	mov	r0, r4
   4ebb4:	bl	11224 <malloc@plt>
   4ebb8:	cmp	r0, #0
   4ebbc:	popne	{r4, pc}
   4ebc0:	mov	r0, r4
   4ebc4:	bl	4eb04 <warn@@Base+0x3118>
   4ebc8:	cmp	r1, #0
   4ebcc:	cmpne	r0, #0
   4ebd0:	push	{r3, r4, r5, lr}
   4ebd4:	mov	r4, r1
   4ebd8:	moveq	r4, #1
   4ebdc:	mov	r5, r0
   4ebe0:	moveq	r5, r4
   4ebe4:	mov	r1, r4
   4ebe8:	mov	r0, r5
   4ebec:	bl	110d4 <calloc@plt>
   4ebf0:	cmp	r0, #0
   4ebf4:	popne	{r3, r4, r5, pc}
   4ebf8:	mul	r0, r5, r4
   4ebfc:	bl	4eb04 <warn@@Base+0x3118>
   4ec00:	cmp	r1, #0
   4ec04:	push	{r4, lr}
   4ec08:	movne	r4, r1
   4ec0c:	moveq	r4, #1
   4ec10:	cmp	r0, #0
   4ec14:	beq	4ec30 <warn@@Base+0x3244>
   4ec18:	mov	r1, r4
   4ec1c:	bl	11194 <realloc@plt>
   4ec20:	cmp	r0, #0
   4ec24:	popne	{r4, pc}
   4ec28:	mov	r0, r4
   4ec2c:	bl	4eb04 <warn@@Base+0x3118>
   4ec30:	mov	r0, r4
   4ec34:	bl	11224 <malloc@plt>
   4ec38:	cmp	r0, #0
   4ec3c:	popne	{r4, pc}
   4ec40:	b	4ec28 <warn@@Base+0x323c>
   4ec44:	push	{r3, r4, r5, lr}
   4ec48:	mov	r5, r0
   4ec4c:	bl	1129c <strlen@plt>
   4ec50:	add	r4, r0, #1
   4ec54:	mov	r0, r4
   4ec58:	bl	4eba0 <warn@@Base+0x31b4>
   4ec5c:	mov	r1, r5
   4ec60:	mov	r2, r4
   4ec64:	pop	{r3, r4, r5, lr}
   4ec68:	b	11134 <memcpy@plt>
   4ec6c:	ldr	r3, [r0]
   4ec70:	push	{r4, r5, r6}
   4ec74:	cmp	r3, #3
   4ec78:	mov	r6, r0
   4ec7c:	movhi	r5, #0
   4ec80:	movls	r5, #1
   4ec84:	cmp	r2, #0
   4ec88:	moveq	r5, #0
   4ec8c:	cmp	r5, #0
   4ec90:	beq	4ed00 <warn@@Base+0x3314>
   4ec94:	mov	r0, #0
   4ec98:	b	4ecd4 <warn@@Base+0x32e8>
   4ec9c:	cmp	ip, #0
   4eca0:	rsb	r3, r3, #4
   4eca4:	mov	ip, r5
   4eca8:	movne	r3, #0
   4ecac:	bne	4ecbc <warn@@Base+0x32d0>
   4ecb0:	cmp	r3, #3
   4ecb4:	movhi	ip, #0
   4ecb8:	movls	ip, #1
   4ecbc:	add	r0, r0, #1
   4ecc0:	cmp	r2, r0
   4ecc4:	movls	ip, #0
   4ecc8:	andhi	ip, ip, #1
   4eccc:	cmp	ip, #0
   4ecd0:	beq	4ed04 <warn@@Base+0x3318>
   4ecd4:	cmp	r3, #1
   4ecd8:	ldrb	ip, [r1, r0]
   4ecdc:	movhi	r4, #255	; 0xff
   4ece0:	movls	r4, #0
   4ece4:	cmp	ip, r4
   4ece8:	bne	4ec9c <warn@@Base+0x32b0>
   4ecec:	add	r3, r3, #1
   4ecf0:	cmp	r3, #3
   4ecf4:	movhi	ip, #0
   4ecf8:	movls	ip, #1
   4ecfc:	b	4ecbc <warn@@Base+0x32d0>
   4ed00:	mov	r0, r5
   4ed04:	str	r3, [r6]
   4ed08:	pop	{r4, r5, r6}
   4ed0c:	bx	lr
   4ed10:	push	{r3, r4, r5, r6, r7, lr}
   4ed14:	mov	r5, r2
   4ed18:	ldr	r4, [r0, #28]
   4ed1c:	mov	r7, r1
   4ed20:	ldr	r2, [r4, #52]	; 0x34
   4ed24:	cmp	r2, #0
   4ed28:	beq	4ee14 <warn@@Base+0x3428>
   4ed2c:	ldr	r3, [r4, #40]	; 0x28
   4ed30:	cmp	r3, #0
   4ed34:	beq	4eda0 <warn@@Base+0x33b4>
   4ed38:	cmp	r5, r3
   4ed3c:	bcs	4edc4 <warn@@Base+0x33d8>
   4ed40:	ldr	r0, [r4, #48]	; 0x30
   4ed44:	rsb	r1, r5, r7
   4ed48:	rsb	r3, r0, r3
   4ed4c:	add	r0, r2, r0
   4ed50:	cmp	r3, r5
   4ed54:	movcc	r6, r3
   4ed58:	movcs	r6, r5
   4ed5c:	mov	r2, r6
   4ed60:	bl	11134 <memcpy@plt>
   4ed64:	subs	r5, r5, r6
   4ed68:	bne	4edf0 <warn@@Base+0x3404>
   4ed6c:	ldr	r3, [r4, #48]	; 0x30
   4ed70:	ldr	r1, [r4, #40]	; 0x28
   4ed74:	add	r3, r6, r3
   4ed78:	str	r3, [r4, #48]	; 0x30
   4ed7c:	cmp	r3, r1
   4ed80:	ldr	r3, [r4, #44]	; 0x2c
   4ed84:	streq	r5, [r4, #48]	; 0x30
   4ed88:	cmp	r1, r3
   4ed8c:	bls	4ede8 <warn@@Base+0x33fc>
   4ed90:	add	r3, r6, r3
   4ed94:	mov	r0, #0
   4ed98:	str	r3, [r4, #44]	; 0x2c
   4ed9c:	pop	{r3, r4, r5, r6, r7, pc}
   4eda0:	ldr	r3, [r4, #36]	; 0x24
   4eda4:	mov	r0, #1
   4eda8:	mov	r1, #0
   4edac:	str	r1, [r4, #48]	; 0x30
   4edb0:	lsl	r3, r0, r3
   4edb4:	str	r1, [r4, #44]	; 0x2c
   4edb8:	cmp	r5, r3
   4edbc:	str	r3, [r4, #40]	; 0x28
   4edc0:	bcc	4ed40 <warn@@Base+0x3354>
   4edc4:	rsb	r1, r3, r7
   4edc8:	mov	r0, r2
   4edcc:	mov	r2, r3
   4edd0:	bl	11134 <memcpy@plt>
   4edd4:	ldr	r3, [r4, #40]	; 0x28
   4edd8:	mov	r0, #0
   4eddc:	str	r0, [r4, #48]	; 0x30
   4ede0:	str	r3, [r4, #44]	; 0x2c
   4ede4:	pop	{r3, r4, r5, r6, r7, pc}
   4ede8:	mov	r0, #0
   4edec:	pop	{r3, r4, r5, r6, r7, pc}
   4edf0:	rsb	r1, r5, r7
   4edf4:	ldr	r0, [r4, #52]	; 0x34
   4edf8:	mov	r2, r5
   4edfc:	bl	11134 <memcpy@plt>
   4ee00:	ldr	r3, [r4, #40]	; 0x28
   4ee04:	str	r5, [r4, #48]	; 0x30
   4ee08:	mov	r0, #0
   4ee0c:	str	r3, [r4, #44]	; 0x2c
   4ee10:	pop	{r3, r4, r5, r6, r7, pc}
   4ee14:	ldr	r1, [r4, #36]	; 0x24
   4ee18:	mov	r6, #1
   4ee1c:	ldr	r3, [r0, #32]
   4ee20:	mov	r2, r6
   4ee24:	lsl	r1, r6, r1
   4ee28:	ldr	r0, [r0, #40]	; 0x28
   4ee2c:	blx	r3
   4ee30:	cmp	r0, #0
   4ee34:	str	r0, [r4, #52]	; 0x34
   4ee38:	movne	r2, r0
   4ee3c:	bne	4ed2c <warn@@Base+0x3340>
   4ee40:	mov	r0, r6
   4ee44:	pop	{r3, r4, r5, r6, r7, pc}
   4ee48:	cmp	r0, #0
   4ee4c:	push	{r4, r5, r6}
   4ee50:	beq	4eedc <warn@@Base+0x34f0>
   4ee54:	ldr	r3, [r0, #28]
   4ee58:	cmp	r3, #0
   4ee5c:	beq	4eedc <warn@@Base+0x34f0>
   4ee60:	ldr	r1, [r3, #8]
   4ee64:	mov	r2, #0
   4ee68:	mov	r5, #7104	; 0x1bc0
   4ee6c:	str	r2, [r3, #28]
   4ee70:	cmp	r1, r2
   4ee74:	str	r2, [r0, #20]
   4ee78:	str	r2, [r0, #8]
   4ee7c:	movw	ip, #7108	; 0x1bc4
   4ee80:	str	r2, [r0, #24]
   4ee84:	mov	r2, #0
   4ee88:	andne	r1, r1, #1
   4ee8c:	mov	r6, #1
   4ee90:	strne	r1, [r0, #48]	; 0x30
   4ee94:	mvn	r4, #0
   4ee98:	str	r2, [r3]
   4ee9c:	mov	r0, r2
   4eea0:	str	r2, [r3, #4]
   4eea4:	mov	r1, #32768	; 0x8000
   4eea8:	str	r2, [r3, #12]
   4eeac:	str	r2, [r3, #32]
   4eeb0:	str	r2, [r3, #56]	; 0x38
   4eeb4:	str	r2, [r3, #60]	; 0x3c
   4eeb8:	add	r2, r3, #1328	; 0x530
   4eebc:	str	r6, [r3, r5]
   4eec0:	str	r4, [r3, ip]
   4eec4:	str	r1, [r3, #20]
   4eec8:	str	r2, [r3, #108]	; 0x6c
   4eecc:	str	r2, [r3, #80]	; 0x50
   4eed0:	str	r2, [r3, #76]	; 0x4c
   4eed4:	pop	{r4, r5, r6}
   4eed8:	bx	lr
   4eedc:	mvn	r0, #1
   4eee0:	b	4eed4 <warn@@Base+0x34e8>
   4eee4:	subs	r3, r0, #0
   4eee8:	beq	4ef0c <warn@@Base+0x3520>
   4eeec:	ldr	r3, [r3, #28]
   4eef0:	cmp	r3, #0
   4eef4:	beq	4ef0c <warn@@Base+0x3520>
   4eef8:	mov	r2, #0
   4eefc:	str	r2, [r3, #40]	; 0x28
   4ef00:	str	r2, [r3, #44]	; 0x2c
   4ef04:	str	r2, [r3, #48]	; 0x30
   4ef08:	b	4ee48 <warn@@Base+0x345c>
   4ef0c:	mvn	r0, #1
   4ef10:	bx	lr
   4ef14:	push	{r4, r5, r6, r7, r8, lr}
   4ef18:	subs	r6, r0, #0
   4ef1c:	mov	r4, r1
   4ef20:	beq	4efa4 <warn@@Base+0x35b8>
   4ef24:	ldr	r5, [r6, #28]
   4ef28:	cmp	r5, #0
   4ef2c:	beq	4efa4 <warn@@Base+0x35b8>
   4ef30:	cmp	r1, #0
   4ef34:	rsblt	r4, r1, #0
   4ef38:	movlt	r7, #0
   4ef3c:	blt	4ef50 <warn@@Base+0x3564>
   4ef40:	asr	r7, r4, #4
   4ef44:	cmp	r4, #47	; 0x2f
   4ef48:	add	r7, r7, #1
   4ef4c:	andle	r4, r4, #15
   4ef50:	sub	r3, r4, #8
   4ef54:	cmp	r4, #0
   4ef58:	cmpne	r3, #7
   4ef5c:	movls	r8, #0
   4ef60:	movhi	r8, #1
   4ef64:	bhi	4efa4 <warn@@Base+0x35b8>
   4ef68:	ldr	r1, [r5, #52]	; 0x34
   4ef6c:	cmp	r1, #0
   4ef70:	beq	4ef90 <warn@@Base+0x35a4>
   4ef74:	ldr	r2, [r5, #36]	; 0x24
   4ef78:	cmp	r4, r2
   4ef7c:	beq	4ef90 <warn@@Base+0x35a4>
   4ef80:	ldr	r3, [r6, #36]	; 0x24
   4ef84:	ldr	r0, [r6, #40]	; 0x28
   4ef88:	blx	r3
   4ef8c:	str	r8, [r5, #52]	; 0x34
   4ef90:	str	r7, [r5, #8]
   4ef94:	mov	r0, r6
   4ef98:	str	r4, [r5, #36]	; 0x24
   4ef9c:	pop	{r4, r5, r6, r7, r8, lr}
   4efa0:	b	4eee4 <warn@@Base+0x34f8>
   4efa4:	mvn	r0, #1
   4efa8:	pop	{r4, r5, r6, r7, r8, pc}
   4efac:	cmp	r2, #0
   4efb0:	ldr	ip, [pc, #244]	; 4f0ac <warn@@Base+0x36c0>
   4efb4:	push	{r3, r4, r5, r6, r7, lr}
   4efb8:	add	ip, pc, ip
   4efbc:	mov	r4, r0
   4efc0:	mov	r6, r1
   4efc4:	beq	4f060 <warn@@Base+0x3674>
   4efc8:	ldrb	r2, [r2]
   4efcc:	cmp	r2, #49	; 0x31
   4efd0:	bne	4f060 <warn@@Base+0x3674>
   4efd4:	cmp	r3, #56	; 0x38
   4efd8:	bne	4f060 <warn@@Base+0x3674>
   4efdc:	cmp	r0, #0
   4efe0:	beq	4f0a4 <warn@@Base+0x36b8>
   4efe4:	ldr	r3, [r0, #32]
   4efe8:	mov	r2, #0
   4efec:	str	r2, [r0, #24]
   4eff0:	cmp	r3, r2
   4eff4:	beq	4f068 <warn@@Base+0x367c>
   4eff8:	ldr	r2, [r4, #36]	; 0x24
   4effc:	ldr	r0, [r0, #40]	; 0x28
   4f000:	cmp	r2, #0
   4f004:	beq	4f08c <warn@@Base+0x36a0>
   4f008:	mov	r1, #1
   4f00c:	movw	r2, #7116	; 0x1bcc
   4f010:	blx	r3
   4f014:	subs	r5, r0, #0
   4f018:	beq	4f09c <warn@@Base+0x36b0>
   4f01c:	str	r5, [r4, #28]
   4f020:	mov	r1, r6
   4f024:	mov	r0, r4
   4f028:	mov	r6, #0
   4f02c:	str	r6, [r5, #52]	; 0x34
   4f030:	bl	4ef14 <warn@@Base+0x3528>
   4f034:	subs	r7, r0, #0
   4f038:	bne	4f044 <warn@@Base+0x3658>
   4f03c:	mov	r0, r7
   4f040:	pop	{r3, r4, r5, r6, r7, pc}
   4f044:	ldr	r0, [r4, #40]	; 0x28
   4f048:	mov	r1, r5
   4f04c:	ldr	r3, [r4, #36]	; 0x24
   4f050:	blx	r3
   4f054:	str	r6, [r4, #28]
   4f058:	mov	r0, r7
   4f05c:	pop	{r3, r4, r5, r6, r7, pc}
   4f060:	mvn	r0, #5
   4f064:	pop	{r3, r4, r5, r6, r7, pc}
   4f068:	ldr	r2, [pc, #64]	; 4f0b0 <warn@@Base+0x36c4>
   4f06c:	mov	r0, r3
   4f070:	ldr	r2, [ip, r2]
   4f074:	str	r3, [r4, #40]	; 0x28
   4f078:	str	r2, [r4, #32]
   4f07c:	mov	r3, r2
   4f080:	ldr	r2, [r4, #36]	; 0x24
   4f084:	cmp	r2, #0
   4f088:	bne	4f008 <warn@@Base+0x361c>
   4f08c:	ldr	r2, [pc, #32]	; 4f0b4 <warn@@Base+0x36c8>
   4f090:	ldr	r2, [ip, r2]
   4f094:	str	r2, [r4, #36]	; 0x24
   4f098:	b	4f008 <warn@@Base+0x361c>
   4f09c:	mvn	r0, #3
   4f0a0:	pop	{r3, r4, r5, r6, r7, pc}
   4f0a4:	mvn	r0, #1
   4f0a8:	pop	{r3, r4, r5, r6, r7, pc}
   4f0ac:	andeq	r4, r4, r0, asr #32
   4f0b0:	andeq	r0, r0, r4, lsr r1
   4f0b4:	andeq	r0, r0, r8, lsr #2
   4f0b8:	mov	r3, r2
   4f0bc:	mov	r2, r1
   4f0c0:	mov	r1, #15
   4f0c4:	b	4efac <warn@@Base+0x35c0>
   4f0c8:	cmp	r0, #0
   4f0cc:	push	{r4, r5}
   4f0d0:	beq	4f130 <warn@@Base+0x3744>
   4f0d4:	ldr	r3, [r0, #28]
   4f0d8:	cmp	r3, #0
   4f0dc:	beq	4f130 <warn@@Base+0x3744>
   4f0e0:	cmp	r1, #0
   4f0e4:	movlt	r0, #0
   4f0e8:	strlt	r0, [r3, #56]	; 0x38
   4f0ec:	strlt	r0, [r3, #60]	; 0x3c
   4f0f0:	blt	4f128 <warn@@Base+0x373c>
   4f0f4:	cmp	r1, #16
   4f0f8:	bgt	4f130 <warn@@Base+0x3744>
   4f0fc:	ldr	ip, [r3, #60]	; 0x3c
   4f100:	add	r0, r1, ip
   4f104:	cmp	r0, #32
   4f108:	bhi	4f130 <warn@@Base+0x3744>
   4f10c:	mvn	r5, #0
   4f110:	ldr	r4, [r3, #56]	; 0x38
   4f114:	bic	r1, r2, r5, lsl r1
   4f118:	str	r0, [r3, #60]	; 0x3c
   4f11c:	mov	r0, #0
   4f120:	add	ip, r4, r1, lsl ip
   4f124:	str	ip, [r3, #56]	; 0x38
   4f128:	pop	{r4, r5}
   4f12c:	bx	lr
   4f130:	mvn	r0, #1
   4f134:	b	4f128 <warn@@Base+0x373c>
   4f138:	ldr	r3, [pc, #4036]	; 50104 <warn@@Base+0x4718>
   4f13c:	ldr	r2, [pc, #4036]	; 50108 <warn@@Base+0x471c>
   4f140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4f144:	add	r3, pc, r3
   4f148:	sub	sp, sp, #84	; 0x54
   4f14c:	subs	sl, r0, #0
   4f150:	str	r1, [sp, #36]	; 0x24
   4f154:	ldr	r2, [r3, r2]
   4f158:	ldr	r3, [r2]
   4f15c:	str	r2, [sp, #16]
   4f160:	str	r3, [sp, #76]	; 0x4c
   4f164:	beq	504d8 <warn@@Base+0x4aec>
   4f168:	ldr	r7, [sl, #28]
   4f16c:	cmp	r7, #0
   4f170:	beq	504d8 <warn@@Base+0x4aec>
   4f174:	ldr	fp, [sl, #12]
   4f178:	cmp	fp, #0
   4f17c:	beq	504d8 <warn@@Base+0x4aec>
   4f180:	ldr	ip, [sl]
   4f184:	cmp	ip, #0
   4f188:	beq	500d4 <warn@@Base+0x46e8>
   4f18c:	ldr	r0, [sl, #4]
   4f190:	str	r0, [sp, #20]
   4f194:	ldr	r1, [sl, #16]
   4f198:	mov	r0, #0
   4f19c:	ldr	r2, [pc, #3944]	; 5010c <warn@@Base+0x4720>
   4f1a0:	mov	r8, ip
   4f1a4:	ldr	r3, [r7]
   4f1a8:	add	r2, pc, r2
   4f1ac:	str	r1, [sp, #8]
   4f1b0:	add	r2, r2, #2176	; 0x880
   4f1b4:	str	r2, [sp, #32]
   4f1b8:	add	r1, r2, #36	; 0x24
   4f1bc:	ldr	r2, [sp, #8]
   4f1c0:	ldr	r5, [sp, #20]
   4f1c4:	cmp	r3, #11
   4f1c8:	ldr	r6, [r7, #56]	; 0x38
   4f1cc:	ldr	r4, [r7, #60]	; 0x3c
   4f1d0:	moveq	r3, #12
   4f1d4:	str	r0, [sp, #28]
   4f1d8:	str	r1, [sp, #40]	; 0x28
   4f1dc:	str	r2, [sp, #12]
   4f1e0:	ldr	r0, [pc, #3880]	; 50110 <warn@@Base+0x4724>
   4f1e4:	ldr	r1, [pc, #3880]	; 50114 <warn@@Base+0x4728>
   4f1e8:	ldr	r2, [pc, #3880]	; 50118 <warn@@Base+0x472c>
   4f1ec:	add	r0, pc, r0
   4f1f0:	add	r1, pc, r1
   4f1f4:	streq	r3, [r7]
   4f1f8:	add	r2, pc, r2
   4f1fc:	str	r0, [sp, #44]	; 0x2c
   4f200:	str	r1, [sp, #48]	; 0x30
   4f204:	str	r2, [sp, #52]	; 0x34
   4f208:	str	sl, [sp, #24]
   4f20c:	cmp	r3, #30
   4f210:	addls	pc, pc, r3, lsl #2
   4f214:	b	504d8 <warn@@Base+0x4aec>
   4f218:	b	4fc40 <warn@@Base+0x4254>
   4f21c:	b	4f2ac <warn@@Base+0x38c0>
   4f220:	b	4f49c <warn@@Base+0x3ab0>
   4f224:	b	4f4e4 <warn@@Base+0x3af8>
   4f228:	b	4fcfc <warn@@Base+0x4310>
   4f22c:	b	4fd2c <warn@@Base+0x4340>
   4f230:	b	4fde8 <warn@@Base+0x43fc>
   4f234:	b	4ff00 <warn@@Base+0x4514>
   4f238:	b	4fb58 <warn@@Base+0x416c>
   4f23c:	b	4f364 <warn@@Base+0x3978>
   4f240:	b	4f3a4 <warn@@Base+0x39b8>
   4f244:	b	4f3d4 <warn@@Base+0x39e8>
   4f248:	b	4f3e4 <warn@@Base+0x39f8>
   4f24c:	b	4fbf4 <warn@@Base+0x4208>
   4f250:	b	4fc30 <warn@@Base+0x4244>
   4f254:	b	4f9e8 <warn@@Base+0x3ffc>
   4f258:	b	4f2e8 <warn@@Base+0x38fc>
   4f25c:	b	4fa4c <warn@@Base+0x4060>
   4f260:	b	4f57c <warn@@Base+0x3b90>
   4f264:	b	4f8a8 <warn@@Base+0x3ebc>
   4f268:	b	4f8b0 <warn@@Base+0x3ec4>
   4f26c:	b	4f944 <warn@@Base+0x3f58>
   4f270:	b	4f964 <warn@@Base+0x3f78>
   4f274:	b	4ff38 <warn@@Base+0x454c>
   4f278:	b	4f818 <warn@@Base+0x3e2c>
   4f27c:	b	4ff08 <warn@@Base+0x451c>
   4f280:	b	4ff98 <warn@@Base+0x45ac>
   4f284:	b	50080 <warn@@Base+0x4694>
   4f288:	b	4f9d4 <warn@@Base+0x3fe8>
   4f28c:	b	4fb44 <warn@@Base+0x4158>
   4f290:	b	4fcf4 <warn@@Base+0x4308>
   4f294:	cmp	r5, #0
   4f298:	beq	4f600 <warn@@Base+0x3c14>
   4f29c:	ldrb	r3, [r8], #1
   4f2a0:	sub	r5, r5, #1
   4f2a4:	add	r6, r6, r3, lsl r4
   4f2a8:	add	r4, r4, #8
   4f2ac:	cmp	r4, #15
   4f2b0:	bls	4f294 <warn@@Base+0x38a8>
   4f2b4:	uxtb	r3, r6
   4f2b8:	str	r6, [r7, #16]
   4f2bc:	cmp	r3, #8
   4f2c0:	beq	4f44c <warn@@Base+0x3a60>
   4f2c4:	ldr	r1, [pc, #3664]	; 5011c <warn@@Base+0x4730>
   4f2c8:	add	r1, pc, r1
   4f2cc:	b	4fbdc <warn@@Base+0x41f0>
   4f2d0:	cmp	r5, #0
   4f2d4:	beq	4f600 <warn@@Base+0x3c14>
   4f2d8:	ldrb	r3, [r8], #1
   4f2dc:	sub	r5, r5, #1
   4f2e0:	add	r6, r6, r3, lsl r4
   4f2e4:	add	r4, r4, #8
   4f2e8:	cmp	r4, #13
   4f2ec:	bls	4f2d0 <warn@@Base+0x38e4>
   4f2f0:	and	r3, r6, #31
   4f2f4:	movw	r2, #286	; 0x11e
   4f2f8:	add	r3, r3, #256	; 0x100
   4f2fc:	ubfx	r0, r6, #10, #4
   4f300:	add	r3, r3, #1
   4f304:	str	r3, [r7, #96]	; 0x60
   4f308:	cmp	r3, r2
   4f30c:	ubfx	r3, r6, #5, #5
   4f310:	add	r3, r3, #1
   4f314:	add	r0, r0, #4
   4f318:	sub	r4, r4, #14
   4f31c:	str	r3, [r7, #100]	; 0x64
   4f320:	str	r0, [r7, #92]	; 0x5c
   4f324:	lsr	r6, r6, #14
   4f328:	bhi	504e0 <warn@@Base+0x4af4>
   4f32c:	cmp	r3, #30
   4f330:	bhi	504e0 <warn@@Base+0x4af4>
   4f334:	mov	r3, #0
   4f338:	mov	r1, #17
   4f33c:	mov	r2, r3
   4f340:	str	r3, [r7, #104]	; 0x68
   4f344:	str	r1, [r7]
   4f348:	b	4fa5c <warn@@Base+0x4070>
   4f34c:	cmp	r5, #0
   4f350:	beq	4f600 <warn@@Base+0x3c14>
   4f354:	ldrb	r3, [r8], #1
   4f358:	sub	r5, r5, #1
   4f35c:	add	r6, r6, r3, lsl r4
   4f360:	add	r4, r4, #8
   4f364:	cmp	r4, #31
   4f368:	bls	4f34c <warn@@Base+0x3960>
   4f36c:	lsr	r1, r6, #24
   4f370:	lsr	r3, r6, #8
   4f374:	ldr	ip, [sp, #24]
   4f378:	add	r1, r1, r6, lsl #24
   4f37c:	and	r2, r6, #65280	; 0xff00
   4f380:	and	r3, r3, #65280	; 0xff00
   4f384:	mov	r6, #0
   4f388:	add	r3, r1, r3
   4f38c:	mov	r4, r6
   4f390:	add	r3, r3, r2, lsl #8
   4f394:	str	r3, [r7, #24]
   4f398:	str	r3, [ip, #48]	; 0x30
   4f39c:	mov	r3, #10
   4f3a0:	str	r3, [r7]
   4f3a4:	ldr	r3, [r7, #12]
   4f3a8:	cmp	r3, #0
   4f3ac:	beq	50820 <warn@@Base+0x4e34>
   4f3b0:	mov	r0, #0
   4f3b4:	mov	r1, r0
   4f3b8:	mov	r2, r0
   4f3bc:	bl	516e8 <zcfree@@Base+0xb8>
   4f3c0:	ldr	ip, [sp, #24]
   4f3c4:	mov	r3, #11
   4f3c8:	str	r0, [r7, #24]
   4f3cc:	str	r0, [ip, #48]	; 0x30
   4f3d0:	str	r3, [r7]
   4f3d4:	ldr	ip, [sp, #36]	; 0x24
   4f3d8:	sub	r3, ip, #5
   4f3dc:	cmp	r3, #1
   4f3e0:	bls	4f600 <warn@@Base+0x3c14>
   4f3e4:	ldr	r3, [r7, #4]
   4f3e8:	cmp	r3, #0
   4f3ec:	bne	4f7a4 <warn@@Base+0x3db8>
   4f3f0:	cmp	r4, #2
   4f3f4:	bhi	4f410 <warn@@Base+0x3a24>
   4f3f8:	cmp	r5, #0
   4f3fc:	beq	4f600 <warn@@Base+0x3c14>
   4f400:	ldrb	r3, [r8], #1
   4f404:	sub	r5, r5, #1
   4f408:	add	r6, r6, r3, lsl r4
   4f40c:	add	r4, r4, #8
   4f410:	lsr	r2, r6, #1
   4f414:	and	r1, r6, #1
   4f418:	and	r3, r2, #3
   4f41c:	str	r1, [r7, #4]
   4f420:	cmp	r3, #2
   4f424:	beq	50314 <warn@@Base+0x4928>
   4f428:	cmp	r3, #3
   4f42c:	beq	505a4 <warn@@Base+0x4bb8>
   4f430:	cmp	r3, #1
   4f434:	beq	50558 <warn@@Base+0x4b6c>
   4f438:	mov	r3, #13
   4f43c:	str	r3, [r7]
   4f440:	lsr	r6, r2, #2
   4f444:	sub	r4, r4, #3
   4f448:	b	4f20c <warn@@Base+0x3820>
   4f44c:	ldr	r1, [pc, #3276]	; 50120 <warn@@Base+0x4734>
   4f450:	tst	r6, #57344	; 0xe000
   4f454:	add	r1, pc, r1
   4f458:	bne	4fbdc <warn@@Base+0x41f0>
   4f45c:	ldr	r3, [r7, #32]
   4f460:	cmp	r3, #0
   4f464:	ubfxne	r2, r6, #8, #1
   4f468:	strne	r2, [r3]
   4f46c:	tst	r6, #512	; 0x200
   4f470:	bne	50848 <warn@@Base+0x4e5c>
   4f474:	mov	r4, #0
   4f478:	mov	r3, #2
   4f47c:	mov	r6, r4
   4f480:	str	r3, [r7]
   4f484:	cmp	r5, #0
   4f488:	beq	4f600 <warn@@Base+0x3c14>
   4f48c:	ldrb	r3, [r8], #1
   4f490:	sub	r5, r5, #1
   4f494:	add	r6, r6, r3, lsl r4
   4f498:	add	r4, r4, #8
   4f49c:	cmp	r4, #31
   4f4a0:	bls	4f484 <warn@@Base+0x3a98>
   4f4a4:	ldr	r3, [r7, #32]
   4f4a8:	cmp	r3, #0
   4f4ac:	strne	r6, [r3, #4]
   4f4b0:	ldr	r3, [r7, #16]
   4f4b4:	tst	r3, #512	; 0x200
   4f4b8:	bne	505f0 <warn@@Base+0x4c04>
   4f4bc:	mov	r4, #0
   4f4c0:	mov	r3, #3
   4f4c4:	mov	r6, r4
   4f4c8:	str	r3, [r7]
   4f4cc:	cmp	r5, #0
   4f4d0:	beq	4f600 <warn@@Base+0x3c14>
   4f4d4:	ldrb	r3, [r8], #1
   4f4d8:	sub	r5, r5, #1
   4f4dc:	add	r6, r6, r3, lsl r4
   4f4e0:	add	r4, r4, #8
   4f4e4:	cmp	r4, #15
   4f4e8:	bls	4f4cc <warn@@Base+0x3ae0>
   4f4ec:	ldr	r3, [r7, #32]
   4f4f0:	cmp	r3, #0
   4f4f4:	uxtbne	r2, r6
   4f4f8:	strne	r2, [r3, #8]
   4f4fc:	lsrne	r2, r6, #8
   4f500:	strne	r2, [r3, #12]
   4f504:	ldr	r2, [r7, #16]
   4f508:	tst	r2, #512	; 0x200
   4f50c:	mov	r1, r2
   4f510:	bne	50520 <warn@@Base+0x4b34>
   4f514:	ands	r4, r2, #1024	; 0x400
   4f518:	mov	r3, #4
   4f51c:	str	r3, [r7]
   4f520:	moveq	r6, r4
   4f524:	beq	4fd0c <warn@@Base+0x4320>
   4f528:	mov	r4, #0
   4f52c:	mov	r6, r4
   4f530:	cmp	r5, #0
   4f534:	beq	4f600 <warn@@Base+0x3c14>
   4f538:	ldrb	r3, [r8], #1
   4f53c:	sub	r5, r5, #1
   4f540:	add	r6, r6, r3, lsl r4
   4f544:	add	r4, r4, #8
   4f548:	cmp	r4, #15
   4f54c:	bls	4f530 <warn@@Base+0x3b44>
   4f550:	ldr	r3, [r7, #32]
   4f554:	str	r6, [r7, #64]	; 0x40
   4f558:	cmp	r3, #0
   4f55c:	strne	r6, [r3, #20]
   4f560:	ands	r3, r2, #512	; 0x200
   4f564:	bne	50648 <warn@@Base+0x4c5c>
   4f568:	mov	r6, r3
   4f56c:	mov	r4, r3
   4f570:	mov	r1, r2
   4f574:	and	r3, r2, #1024	; 0x400
   4f578:	b	4fd20 <warn@@Base+0x4334>
   4f57c:	ldr	ip, [r7, #104]	; 0x68
   4f580:	ldr	r0, [r7, #96]	; 0x60
   4f584:	mov	sl, #1
   4f588:	ldr	r9, [r7, #100]	; 0x64
   4f58c:	add	r1, r7, #110	; 0x6e
   4f590:	str	r1, [sp, #60]	; 0x3c
   4f594:	add	r9, r0, r9
   4f598:	str	r0, [sp, #56]	; 0x38
   4f59c:	cmp	ip, r9
   4f5a0:	bcs	507f8 <warn@@Base+0x4e0c>
   4f5a4:	ldr	r0, [r7, #84]	; 0x54
   4f5a8:	ldr	r1, [r7, #76]	; 0x4c
   4f5ac:	lsl	r0, sl, r0
   4f5b0:	sub	r0, r0, #1
   4f5b4:	and	r3, r6, r0
   4f5b8:	add	r3, r1, r3, lsl #2
   4f5bc:	ldrb	r2, [r3, #1]
   4f5c0:	ldrh	r3, [r3, #2]
   4f5c4:	cmp	r4, r2
   4f5c8:	bcc	4f5f8 <warn@@Base+0x3c0c>
   4f5cc:	b	50278 <warn@@Base+0x488c>
   4f5d0:	ldrb	r3, [r8], #1
   4f5d4:	sub	r5, r5, #1
   4f5d8:	add	r6, r6, r3, lsl r4
   4f5dc:	add	r4, r4, #8
   4f5e0:	and	r3, r6, r0
   4f5e4:	add	r3, r1, r3, lsl #2
   4f5e8:	ldrb	r2, [r3, #1]
   4f5ec:	ldrh	r3, [r3, #2]
   4f5f0:	cmp	r2, r4
   4f5f4:	bls	50278 <warn@@Base+0x488c>
   4f5f8:	cmp	r5, #0
   4f5fc:	bne	4f5d0 <warn@@Base+0x3be4>
   4f600:	ldr	sl, [sp, #24]
   4f604:	mov	ip, r8
   4f608:	ldr	r3, [r7, #40]	; 0x28
   4f60c:	ldr	r0, [sp, #8]
   4f610:	cmp	r3, #0
   4f614:	str	fp, [sl, #12]
   4f618:	str	ip, [sl]
   4f61c:	str	r0, [sl, #16]
   4f620:	str	r5, [sl, #4]
   4f624:	str	r6, [r7, #56]	; 0x38
   4f628:	str	r4, [r7, #60]	; 0x3c
   4f62c:	bne	4f650 <warn@@Base+0x3c64>
   4f630:	ldr	ip, [sp, #12]
   4f634:	cmp	r0, ip
   4f638:	beq	4f67c <warn@@Base+0x3c90>
   4f63c:	ldr	r3, [r7]
   4f640:	cmp	r3, #28
   4f644:	bhi	4f67c <warn@@Base+0x3c90>
   4f648:	cmp	r3, #25
   4f64c:	bhi	4f794 <warn@@Base+0x3da8>
   4f650:	ldr	r0, [sp, #8]
   4f654:	mov	r1, fp
   4f658:	ldr	ip, [sp, #12]
   4f65c:	rsb	r2, r0, ip
   4f660:	mov	r0, sl
   4f664:	bl	4ed10 <warn@@Base+0x3324>
   4f668:	cmp	r0, #0
   4f66c:	movne	r3, #30
   4f670:	mvnne	r0, #3
   4f674:	strne	r3, [r7]
   4f678:	bne	4f748 <warn@@Base+0x3d5c>
   4f67c:	ldr	r5, [sl, #4]
   4f680:	ldr	ip, [sp, #20]
   4f684:	ldr	r3, [r7, #8]
   4f688:	ldr	r4, [sl, #16]
   4f68c:	rsb	r5, r5, ip
   4f690:	ldr	ip, [sp, #12]
   4f694:	cmp	r3, #0
   4f698:	ldr	r1, [sl, #8]
   4f69c:	ldr	r3, [r7, #28]
   4f6a0:	rsb	r4, r4, ip
   4f6a4:	ldr	r2, [sl, #20]
   4f6a8:	add	r1, r1, r5
   4f6ac:	add	r3, r3, r4
   4f6b0:	str	r1, [sl, #8]
   4f6b4:	add	r2, r2, r4
   4f6b8:	str	r2, [sl, #20]
   4f6bc:	str	r3, [r7, #28]
   4f6c0:	beq	4f6f4 <warn@@Base+0x3d08>
   4f6c4:	cmp	r4, #0
   4f6c8:	beq	4f6f4 <warn@@Base+0x3d08>
   4f6cc:	ldr	r3, [r7, #16]
   4f6d0:	mov	r2, r4
   4f6d4:	ldr	r1, [sl, #12]
   4f6d8:	cmp	r3, #0
   4f6dc:	ldr	r0, [r7, #24]
   4f6e0:	rsb	r1, r4, r1
   4f6e4:	bne	4f7bc <warn@@Base+0x3dd0>
   4f6e8:	bl	516e8 <zcfree@@Base+0xb8>
   4f6ec:	str	r0, [r7, #24]
   4f6f0:	str	r0, [sl, #48]	; 0x30
   4f6f4:	ldr	r2, [r7, #4]
   4f6f8:	ldr	r3, [r7]
   4f6fc:	cmp	r2, #0
   4f700:	ldr	r1, [r7, #60]	; 0x3c
   4f704:	movne	r2, #64	; 0x40
   4f708:	moveq	r2, #0
   4f70c:	cmp	r3, #11
   4f710:	add	r2, r2, r1
   4f714:	beq	4f778 <warn@@Base+0x3d8c>
   4f718:	cmp	r3, #19
   4f71c:	cmpne	r3, #14
   4f720:	moveq	r3, #256	; 0x100
   4f724:	bne	4f77c <warn@@Base+0x3d90>
   4f728:	orrs	r4, r4, r5
   4f72c:	add	r2, r3, r2
   4f730:	str	r2, [sl, #44]	; 0x2c
   4f734:	bne	4f764 <warn@@Base+0x3d78>
   4f738:	ldr	r3, [sp, #28]
   4f73c:	cmp	r3, #0
   4f740:	mov	r0, r3
   4f744:	mvneq	r0, #4
   4f748:	ldr	ip, [sp, #16]
   4f74c:	ldr	r2, [sp, #76]	; 0x4c
   4f750:	ldr	r3, [ip]
   4f754:	cmp	r2, r3
   4f758:	bne	50910 <warn@@Base+0x4f24>
   4f75c:	add	sp, sp, #84	; 0x54
   4f760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4f764:	ldr	ip, [sp, #36]	; 0x24
   4f768:	cmp	ip, #4
   4f76c:	ldrne	r0, [sp, #28]
   4f770:	bne	4f748 <warn@@Base+0x3d5c>
   4f774:	b	4f738 <warn@@Base+0x3d4c>
   4f778:	add	r2, r2, #128	; 0x80
   4f77c:	orrs	r4, r4, r5
   4f780:	mov	r3, #0
   4f784:	add	r2, r3, r2
   4f788:	str	r2, [sl, #44]	; 0x2c
   4f78c:	beq	4f738 <warn@@Base+0x3d4c>
   4f790:	b	4f764 <warn@@Base+0x3d78>
   4f794:	ldr	ip, [sp, #36]	; 0x24
   4f798:	cmp	ip, #4
   4f79c:	bne	4f650 <warn@@Base+0x3c64>
   4f7a0:	b	4f67c <warn@@Base+0x3c90>
   4f7a4:	and	r2, r4, #7
   4f7a8:	mov	r3, #26
   4f7ac:	lsr	r6, r6, r2
   4f7b0:	bic	r4, r4, #7
   4f7b4:	str	r3, [r7]
   4f7b8:	b	4f20c <warn@@Base+0x3820>
   4f7bc:	bl	51c08 <zcfree@@Base+0x5d8>
   4f7c0:	b	4f6ec <warn@@Base+0x3d00>
   4f7c4:	cmp	r5, #0
   4f7c8:	beq	4f600 <warn@@Base+0x3c14>
   4f7cc:	ldrb	r3, [r8], #1
   4f7d0:	sub	r5, r5, #1
   4f7d4:	add	r6, r6, r3, lsl r4
   4f7d8:	add	r4, r4, #8
   4f7dc:	cmp	r4, r1
   4f7e0:	bcc	4f7c4 <warn@@Base+0x3dd8>
   4f7e4:	movw	r3, #7108	; 0x1bc4
   4f7e8:	ldr	ip, [r7, #68]	; 0x44
   4f7ec:	ldr	r2, [r7, r3]
   4f7f0:	mvn	r0, #0
   4f7f4:	bic	r0, r6, r0, lsl r1
   4f7f8:	rsb	r4, r1, r4
   4f7fc:	lsr	r6, r6, r1
   4f800:	add	r0, ip, r0
   4f804:	add	r1, r1, r2
   4f808:	str	r0, [r7, #68]	; 0x44
   4f80c:	str	r1, [r7, r3]
   4f810:	mov	r3, #24
   4f814:	str	r3, [r7]
   4f818:	ldr	ip, [sp, #8]
   4f81c:	cmp	ip, #0
   4f820:	beq	4f600 <warn@@Base+0x3c14>
   4f824:	ldr	r0, [sp, #12]
   4f828:	ldr	r3, [r7, #68]	; 0x44
   4f82c:	rsb	r2, ip, r0
   4f830:	cmp	r2, r3
   4f834:	bcs	50168 <warn@@Base+0x477c>
   4f838:	ldr	r1, [r7, #44]	; 0x2c
   4f83c:	rsb	r2, r2, r3
   4f840:	cmp	r2, r1
   4f844:	bls	4f860 <warn@@Base+0x3e74>
   4f848:	mov	r3, #7104	; 0x1bc0
   4f84c:	ldr	r1, [pc, #2256]	; 50124 <warn@@Base+0x4738>
   4f850:	ldr	r3, [r7, r3]
   4f854:	add	r1, pc, r1
   4f858:	cmp	r3, #0
   4f85c:	bne	4fbdc <warn@@Base+0x41f0>
   4f860:	ldr	r1, [r7, #48]	; 0x30
   4f864:	ldr	r0, [r7, #64]	; 0x40
   4f868:	cmp	r2, r1
   4f86c:	rsbhi	r2, r1, r2
   4f870:	rsbls	r1, r2, r1
   4f874:	ldrhi	r3, [r7, #40]	; 0x28
   4f878:	ldrhi	r1, [r7, #52]	; 0x34
   4f87c:	ldrls	r3, [r7, #52]	; 0x34
   4f880:	rsbhi	r3, r2, r3
   4f884:	cmp	r2, r0
   4f888:	movcs	r2, r0
   4f88c:	add	r3, r3, r1
   4f890:	b	50174 <warn@@Base+0x4788>
   4f894:	ldr	ip, [sp, #36]	; 0x24
   4f898:	mov	r3, #19
   4f89c:	str	r3, [r7]
   4f8a0:	cmp	ip, #6
   4f8a4:	beq	4f600 <warn@@Base+0x3c14>
   4f8a8:	mov	r3, #20
   4f8ac:	str	r3, [r7]
   4f8b0:	ldr	ip, [sp, #8]
   4f8b4:	movw	r3, #257	; 0x101
   4f8b8:	cmp	r5, #5
   4f8bc:	cmphi	ip, r3
   4f8c0:	movls	r3, #0
   4f8c4:	movhi	r3, #1
   4f8c8:	bhi	5042c <warn@@Base+0x4a40>
   4f8cc:	ldr	r1, [r7, #84]	; 0x54
   4f8d0:	movw	r0, #7108	; 0x1bc4
   4f8d4:	mvn	r9, #0
   4f8d8:	ldr	r2, [r7, #76]	; 0x4c
   4f8dc:	str	r3, [r7, r0]
   4f8e0:	mvn	r9, r9, lsl r1
   4f8e4:	and	r3, r6, r9
   4f8e8:	add	r0, r2, r3, lsl #2
   4f8ec:	ldrb	r1, [r2, r3, lsl #2]
   4f8f0:	ldrb	r3, [r0, #1]
   4f8f4:	ldrh	r0, [r0, #2]
   4f8f8:	cmp	r4, r3
   4f8fc:	mov	ip, r3
   4f900:	bcc	4f938 <warn@@Base+0x3f4c>
   4f904:	b	50320 <warn@@Base+0x4934>
   4f908:	ldrb	r3, [r8], #1
   4f90c:	sub	r5, r5, #1
   4f910:	add	r6, r6, r3, lsl r4
   4f914:	add	r4, r4, #8
   4f918:	and	r3, r6, r9
   4f91c:	add	r0, r2, r3, lsl #2
   4f920:	ldrb	r1, [r2, r3, lsl #2]
   4f924:	ldrb	r3, [r0, #1]
   4f928:	ldrh	r0, [r0, #2]
   4f92c:	cmp	r3, r4
   4f930:	mov	ip, r3
   4f934:	bls	50320 <warn@@Base+0x4934>
   4f938:	cmp	r5, #0
   4f93c:	bne	4f908 <warn@@Base+0x3f1c>
   4f940:	b	4f600 <warn@@Base+0x3c14>
   4f944:	ldr	r1, [r7, #72]	; 0x48
   4f948:	cmp	r1, #0
   4f94c:	bne	4ff60 <warn@@Base+0x4574>
   4f950:	ldr	r3, [r7, #64]	; 0x40
   4f954:	movw	r1, #7112	; 0x1bc8
   4f958:	mov	r2, #22
   4f95c:	str	r3, [r7, r1]
   4f960:	str	r2, [r7]
   4f964:	ldr	r3, [r7, #88]	; 0x58
   4f968:	mvn	r9, #0
   4f96c:	ldr	r2, [r7, #80]	; 0x50
   4f970:	mvn	r9, r9, lsl r3
   4f974:	and	r3, r6, r9
   4f978:	add	r0, r2, r3, lsl #2
   4f97c:	ldrb	r1, [r2, r3, lsl #2]
   4f980:	ldrb	r3, [r0, #1]
   4f984:	ldrh	r0, [r0, #2]
   4f988:	cmp	r4, r3
   4f98c:	mov	ip, r3
   4f990:	bcc	4f9c8 <warn@@Base+0x3fdc>
   4f994:	b	501bc <warn@@Base+0x47d0>
   4f998:	ldrb	r3, [r8], #1
   4f99c:	sub	r5, r5, #1
   4f9a0:	add	r6, r6, r3, lsl r4
   4f9a4:	add	r4, r4, #8
   4f9a8:	and	r3, r6, r9
   4f9ac:	add	r0, r2, r3, lsl #2
   4f9b0:	ldrb	r1, [r2, r3, lsl #2]
   4f9b4:	ldrb	r3, [r0, #1]
   4f9b8:	ldrh	r0, [r0, #2]
   4f9bc:	cmp	r3, r4
   4f9c0:	mov	ip, r3
   4f9c4:	bls	501bc <warn@@Base+0x47d0>
   4f9c8:	cmp	r5, #0
   4f9cc:	bne	4f998 <warn@@Base+0x3fac>
   4f9d0:	b	4f600 <warn@@Base+0x3c14>
   4f9d4:	mov	r3, #1
   4f9d8:	mov	ip, r8
   4f9dc:	ldr	sl, [sp, #24]
   4f9e0:	str	r3, [sp, #28]
   4f9e4:	b	4f608 <warn@@Base+0x3c1c>
   4f9e8:	ldr	r9, [r7, #64]	; 0x40
   4f9ec:	cmp	r9, #0
   4f9f0:	beq	500f8 <warn@@Base+0x470c>
   4f9f4:	ldr	ip, [sp, #8]
   4f9f8:	cmp	r5, r9
   4f9fc:	movcc	r9, r5
   4fa00:	cmp	r9, ip
   4fa04:	movcs	r9, ip
   4fa08:	cmp	r9, #0
   4fa0c:	beq	4f600 <warn@@Base+0x3c14>
   4fa10:	mov	r0, fp
   4fa14:	mov	r1, r8
   4fa18:	mov	r2, r9
   4fa1c:	rsb	r5, r9, r5
   4fa20:	bl	11134 <memcpy@plt>
   4fa24:	ldr	r3, [r7, #64]	; 0x40
   4fa28:	ldr	ip, [sp, #8]
   4fa2c:	add	fp, fp, r9
   4fa30:	add	r8, r8, r9
   4fa34:	rsb	ip, r9, ip
   4fa38:	rsb	r9, r9, r3
   4fa3c:	str	ip, [sp, #8]
   4fa40:	ldr	r3, [r7]
   4fa44:	str	r9, [r7, #64]	; 0x40
   4fa48:	b	4f20c <warn@@Base+0x3820>
   4fa4c:	ldr	r0, [r7, #92]	; 0x5c
   4fa50:	ldr	r2, [r7, #104]	; 0x68
   4fa54:	cmp	r0, r2
   4fa58:	bls	4fab8 <warn@@Base+0x40cc>
   4fa5c:	ldr	r1, [pc, #1732]	; 50128 <warn@@Base+0x473c>
   4fa60:	add	r1, pc, r1
   4fa64:	add	r1, r1, r2, lsl #1
   4fa68:	add	r1, r1, #2160	; 0x870
   4fa6c:	add	r1, r1, #14
   4fa70:	cmp	r4, #2
   4fa74:	bhi	4fa90 <warn@@Base+0x40a4>
   4fa78:	cmp	r5, #0
   4fa7c:	beq	4f600 <warn@@Base+0x3c14>
   4fa80:	ldrb	r3, [r8], #1
   4fa84:	sub	r5, r5, #1
   4fa88:	add	r6, r6, r3, lsl r4
   4fa8c:	add	r4, r4, #8
   4fa90:	ldrh	r3, [r1, #2]!
   4fa94:	add	r2, r2, #1
   4fa98:	cmp	r0, r2
   4fa9c:	and	ip, r6, #7
   4faa0:	str	r2, [r7, #104]	; 0x68
   4faa4:	sub	r4, r4, #3
   4faa8:	add	r3, r7, r3, lsl #1
   4faac:	lsr	r6, r6, #3
   4fab0:	strh	ip, [r3, #112]	; 0x70
   4fab4:	bhi	4fa70 <warn@@Base+0x4084>
   4fab8:	cmp	r2, #18
   4fabc:	bhi	4faf4 <warn@@Base+0x4108>
   4fac0:	sub	r3, r2, #1
   4fac4:	ldr	ip, [sp, #32]
   4fac8:	ldr	r0, [sp, #40]	; 0x28
   4facc:	mov	r1, #0
   4fad0:	add	r3, ip, r3, lsl #1
   4fad4:	ldrh	r2, [r3, #2]!
   4fad8:	add	r2, r2, #56	; 0x38
   4fadc:	cmp	r3, r0
   4fae0:	lsl	r2, r2, #1
   4fae4:	strh	r1, [r7, r2]
   4fae8:	bne	4fad4 <warn@@Base+0x40e8>
   4faec:	mov	r3, #19
   4faf0:	str	r3, [r7, #104]	; 0x68
   4faf4:	add	r3, r7, #1328	; 0x530
   4faf8:	mov	r1, #7
   4fafc:	str	r3, [r7, #108]	; 0x6c
   4fb00:	add	r2, r7, #84	; 0x54
   4fb04:	str	r3, [r7, #76]	; 0x4c
   4fb08:	mov	r0, #0
   4fb0c:	str	r1, [r7, #84]	; 0x54
   4fb10:	add	r3, r7, #752	; 0x2f0
   4fb14:	str	r2, [sp]
   4fb18:	add	r1, r7, #112	; 0x70
   4fb1c:	str	r3, [sp, #4]
   4fb20:	mov	r2, #19
   4fb24:	add	r3, r7, #108	; 0x6c
   4fb28:	bl	51018 <warn@@Base+0x562c>
   4fb2c:	cmp	r0, #0
   4fb30:	str	r0, [sp, #28]
   4fb34:	beq	507bc <warn@@Base+0x4dd0>
   4fb38:	ldr	r1, [pc, #1516]	; 5012c <warn@@Base+0x4740>
   4fb3c:	add	r1, pc, r1
   4fb40:	b	4fbdc <warn@@Base+0x41f0>
   4fb44:	mvn	r3, #2
   4fb48:	mov	ip, r8
   4fb4c:	ldr	sl, [sp, #24]
   4fb50:	str	r3, [sp, #28]
   4fb54:	b	4f608 <warn@@Base+0x3c1c>
   4fb58:	ldr	r1, [r7, #16]
   4fb5c:	tst	r1, #512	; 0x200
   4fb60:	bne	4fbc0 <warn@@Base+0x41d4>
   4fb64:	ldr	r3, [r7, #32]
   4fb68:	mov	r0, #0
   4fb6c:	cmp	r3, #0
   4fb70:	ubfxne	r1, r1, #9, #1
   4fb74:	strne	r1, [r3, #44]	; 0x2c
   4fb78:	movne	r2, #1
   4fb7c:	mov	r1, r0
   4fb80:	strne	r2, [r3, #48]	; 0x30
   4fb84:	mov	r2, r0
   4fb88:	bl	51c08 <zcfree@@Base+0x5d8>
   4fb8c:	ldr	ip, [sp, #24]
   4fb90:	mov	r2, #11
   4fb94:	mov	r3, r2
   4fb98:	str	r0, [r7, #24]
   4fb9c:	str	r0, [ip, #48]	; 0x30
   4fba0:	str	r2, [r7]
   4fba4:	b	4f20c <warn@@Base+0x3820>
   4fba8:	cmp	r5, #0
   4fbac:	beq	4f600 <warn@@Base+0x3c14>
   4fbb0:	ldrb	r3, [r8], #1
   4fbb4:	sub	r5, r5, #1
   4fbb8:	add	r6, r6, r3, lsl r4
   4fbbc:	add	r4, r4, #8
   4fbc0:	cmp	r4, #15
   4fbc4:	bls	4fba8 <warn@@Base+0x41bc>
   4fbc8:	ldrh	r3, [r7, #24]
   4fbcc:	cmp	r3, r6
   4fbd0:	beq	504ec <warn@@Base+0x4b00>
   4fbd4:	ldr	r1, [pc, #1364]	; 50130 <warn@@Base+0x4744>
   4fbd8:	add	r1, pc, r1
   4fbdc:	ldr	ip, [sp, #24]
   4fbe0:	mov	r2, #29
   4fbe4:	mov	r3, r2
   4fbe8:	str	r1, [ip, #24]
   4fbec:	str	r2, [r7]
   4fbf0:	b	4f20c <warn@@Base+0x3820>
   4fbf4:	and	r3, r4, #7
   4fbf8:	bic	r4, r4, #7
   4fbfc:	cmp	r4, #31
   4fc00:	lsr	r6, r6, r3
   4fc04:	bls	4fc24 <warn@@Base+0x4238>
   4fc08:	b	5049c <warn@@Base+0x4ab0>
   4fc0c:	ldrb	r3, [r8], #1
   4fc10:	sub	r5, r5, #1
   4fc14:	add	r6, r6, r3, lsl r4
   4fc18:	add	r4, r4, #8
   4fc1c:	cmp	r4, #31
   4fc20:	bhi	5049c <warn@@Base+0x4ab0>
   4fc24:	cmp	r5, #0
   4fc28:	bne	4fc0c <warn@@Base+0x4220>
   4fc2c:	b	4f600 <warn@@Base+0x3c14>
   4fc30:	ldr	r9, [r7, #64]	; 0x40
   4fc34:	mov	r3, #15
   4fc38:	str	r3, [r7]
   4fc3c:	b	4f9ec <warn@@Base+0x4000>
   4fc40:	ldr	r2, [r7, #8]
   4fc44:	cmp	r2, #0
   4fc48:	bne	4fc70 <warn@@Base+0x4284>
   4fc4c:	mov	r3, #12
   4fc50:	str	r3, [r7]
   4fc54:	b	4f20c <warn@@Base+0x3820>
   4fc58:	cmp	r5, #0
   4fc5c:	beq	4f600 <warn@@Base+0x3c14>
   4fc60:	ldrb	r3, [r8], #1
   4fc64:	sub	r5, r5, #1
   4fc68:	add	r6, r6, r3, lsl r4
   4fc6c:	add	r4, r4, #8
   4fc70:	cmp	r4, #15
   4fc74:	bls	4fc58 <warn@@Base+0x426c>
   4fc78:	tst	r2, #2
   4fc7c:	beq	4fc8c <warn@@Base+0x42a0>
   4fc80:	movw	r3, #35615	; 0x8b1f
   4fc84:	cmp	r6, r3
   4fc88:	beq	50880 <warn@@Base+0x4e94>
   4fc8c:	ldr	r3, [r7, #32]
   4fc90:	mov	r1, #0
   4fc94:	str	r1, [r7, #16]
   4fc98:	cmp	r3, r1
   4fc9c:	mvnne	r1, #0
   4fca0:	strne	r1, [r3, #48]	; 0x30
   4fca4:	tst	r2, #1
   4fca8:	beq	5054c <warn@@Base+0x4b60>
   4fcac:	lsl	r3, r6, #8
   4fcb0:	movw	r2, #4229	; 0x1085
   4fcb4:	movt	r2, #2114	; 0x842
   4fcb8:	uxth	r3, r3
   4fcbc:	add	r3, r3, r6, lsr #8
   4fcc0:	umull	ip, r2, r2, r3
   4fcc4:	rsb	r1, r2, r3
   4fcc8:	add	r2, r2, r1, lsr #1
   4fccc:	lsr	r2, r2, #4
   4fcd0:	rsb	r2, r2, r2, lsl #5
   4fcd4:	cmp	r3, r2
   4fcd8:	bne	5054c <warn@@Base+0x4b60>
   4fcdc:	and	r3, r6, #15
   4fce0:	cmp	r3, #8
   4fce4:	beq	508c8 <warn@@Base+0x4edc>
   4fce8:	ldr	r1, [pc, #1092]	; 50134 <warn@@Base+0x4748>
   4fcec:	add	r1, pc, r1
   4fcf0:	b	4fbdc <warn@@Base+0x41f0>
   4fcf4:	mvn	r0, #3
   4fcf8:	b	4f748 <warn@@Base+0x3d5c>
   4fcfc:	ldr	r2, [r7, #16]
   4fd00:	tst	r2, #1024	; 0x400
   4fd04:	mov	r1, r2
   4fd08:	bne	4f548 <warn@@Base+0x3b5c>
   4fd0c:	ldr	r2, [r7, #32]
   4fd10:	cmp	r2, #0
   4fd14:	moveq	r3, r2
   4fd18:	movne	r3, #0
   4fd1c:	strne	r3, [r2, #16]
   4fd20:	mov	r2, #5
   4fd24:	str	r2, [r7]
   4fd28:	b	4fd34 <warn@@Base+0x4348>
   4fd2c:	ldr	r1, [r7, #16]
   4fd30:	and	r3, r1, #1024	; 0x400
   4fd34:	cmp	r3, #0
   4fd38:	beq	4fdc0 <warn@@Base+0x43d4>
   4fd3c:	ldr	r3, [r7, #64]	; 0x40
   4fd40:	cmp	r5, r3
   4fd44:	movcc	r9, r5
   4fd48:	movcs	r9, r3
   4fd4c:	cmp	r9, #0
   4fd50:	beq	4fdb4 <warn@@Base+0x43c8>
   4fd54:	ldr	r2, [r7, #32]
   4fd58:	cmp	r2, #0
   4fd5c:	beq	4fd98 <warn@@Base+0x43ac>
   4fd60:	ldr	r0, [r2, #16]
   4fd64:	cmp	r0, #0
   4fd68:	beq	4fd98 <warn@@Base+0x43ac>
   4fd6c:	ldr	r1, [r2, #20]
   4fd70:	ldr	r2, [r2, #24]
   4fd74:	rsb	r3, r3, r1
   4fd78:	add	r1, r9, r3
   4fd7c:	add	r0, r0, r3
   4fd80:	cmp	r1, r2
   4fd84:	mov	r1, r8
   4fd88:	rsbhi	r2, r3, r2
   4fd8c:	movls	r2, r9
   4fd90:	bl	11134 <memcpy@plt>
   4fd94:	ldr	r1, [r7, #16]
   4fd98:	tst	r1, #512	; 0x200
   4fd9c:	bne	505c4 <warn@@Base+0x4bd8>
   4fda0:	ldr	r3, [r7, #64]	; 0x40
   4fda4:	rsb	r5, r9, r5
   4fda8:	add	r8, r8, r9
   4fdac:	rsb	r3, r9, r3
   4fdb0:	str	r3, [r7, #64]	; 0x40
   4fdb4:	cmp	r3, #0
   4fdb8:	bne	4f600 <warn@@Base+0x3c14>
   4fdbc:	ldr	r1, [r7, #16]
   4fdc0:	ands	r2, r1, #2048	; 0x800
   4fdc4:	mov	r3, #0
   4fdc8:	str	r3, [r7, #64]	; 0x40
   4fdcc:	mov	r3, #6
   4fdd0:	str	r3, [r7]
   4fdd4:	bne	4fdf4 <warn@@Base+0x4408>
   4fdd8:	ldr	r3, [r7, #32]
   4fddc:	cmp	r3, #0
   4fde0:	strne	r2, [r3, #28]
   4fde4:	b	4fe68 <warn@@Base+0x447c>
   4fde8:	ldr	r1, [r7, #16]
   4fdec:	ands	r2, r1, #2048	; 0x800
   4fdf0:	beq	4fdd8 <warn@@Base+0x43ec>
   4fdf4:	cmp	r5, #0
   4fdf8:	beq	4f600 <warn@@Base+0x3c14>
   4fdfc:	sub	r2, r8, #1
   4fe00:	mov	r9, #0
   4fe04:	ldr	r3, [r7, #32]
   4fe08:	add	r9, r9, #1
   4fe0c:	ldrb	sl, [r2, #1]!
   4fe10:	cmp	r3, #0
   4fe14:	beq	4fe3c <warn@@Base+0x4450>
   4fe18:	ldr	r1, [r3, #28]
   4fe1c:	cmp	r1, #0
   4fe20:	beq	4fe3c <warn@@Base+0x4450>
   4fe24:	ldr	r0, [r3, #32]
   4fe28:	ldr	r3, [r7, #64]	; 0x40
   4fe2c:	cmp	r3, r0
   4fe30:	addcc	r0, r3, #1
   4fe34:	strcc	r0, [r7, #64]	; 0x40
   4fe38:	strbcc	sl, [r1, r3]
   4fe3c:	cmp	sl, #0
   4fe40:	cmpne	r9, r5
   4fe44:	bcc	4fe04 <warn@@Base+0x4418>
   4fe48:	ldr	r3, [r7, #16]
   4fe4c:	tst	r3, #512	; 0x200
   4fe50:	bne	504c0 <warn@@Base+0x4ad4>
   4fe54:	cmp	sl, #0
   4fe58:	rsb	r5, r9, r5
   4fe5c:	add	r8, r8, r9
   4fe60:	bne	4f600 <warn@@Base+0x3c14>
   4fe64:	ldr	r1, [r7, #16]
   4fe68:	mov	r3, #0
   4fe6c:	str	r3, [r7, #64]	; 0x40
   4fe70:	mov	r3, #7
   4fe74:	str	r3, [r7]
   4fe78:	ands	r3, r1, #4096	; 0x1000
   4fe7c:	beq	500e8 <warn@@Base+0x46fc>
   4fe80:	cmp	r5, #0
   4fe84:	beq	4f600 <warn@@Base+0x3c14>
   4fe88:	sub	r2, r8, #1
   4fe8c:	mov	r9, #0
   4fe90:	ldr	r3, [r7, #32]
   4fe94:	add	r9, r9, #1
   4fe98:	ldrb	sl, [r2, #1]!
   4fe9c:	cmp	r3, #0
   4fea0:	beq	4fec8 <warn@@Base+0x44dc>
   4fea4:	ldr	r1, [r3, #36]	; 0x24
   4fea8:	cmp	r1, #0
   4feac:	beq	4fec8 <warn@@Base+0x44dc>
   4feb0:	ldr	r0, [r3, #40]	; 0x28
   4feb4:	ldr	r3, [r7, #64]	; 0x40
   4feb8:	cmp	r3, r0
   4febc:	addcc	r0, r3, #1
   4fec0:	strcc	r0, [r7, #64]	; 0x40
   4fec4:	strbcc	sl, [r1, r3]
   4fec8:	cmp	sl, #0
   4fecc:	cmpne	r9, r5
   4fed0:	bcc	4fe90 <warn@@Base+0x44a4>
   4fed4:	ldr	r3, [r7, #16]
   4fed8:	tst	r3, #512	; 0x200
   4fedc:	bne	50414 <warn@@Base+0x4a28>
   4fee0:	cmp	sl, #0
   4fee4:	rsb	r5, r9, r5
   4fee8:	add	r8, r8, r9
   4feec:	bne	4f600 <warn@@Base+0x3c14>
   4fef0:	ldr	r1, [r7, #16]
   4fef4:	mov	r3, #8
   4fef8:	str	r3, [r7]
   4fefc:	b	4fb5c <warn@@Base+0x4170>
   4ff00:	ldr	r1, [r7, #16]
   4ff04:	b	4fe78 <warn@@Base+0x448c>
   4ff08:	ldr	ip, [sp, #8]
   4ff0c:	cmp	ip, #0
   4ff10:	beq	4f600 <warn@@Base+0x3c14>
   4ff14:	ldr	r1, [r7, #64]	; 0x40
   4ff18:	mov	r2, #20
   4ff1c:	sub	ip, ip, #1
   4ff20:	mov	r3, r2
   4ff24:	str	ip, [sp, #8]
   4ff28:	add	fp, fp, #1
   4ff2c:	strb	r1, [fp, #-1]
   4ff30:	str	r2, [r7]
   4ff34:	b	4f20c <warn@@Base+0x3820>
   4ff38:	ldr	r1, [r7, #72]	; 0x48
   4ff3c:	cmp	r1, #0
   4ff40:	beq	4f810 <warn@@Base+0x3e24>
   4ff44:	b	4f7dc <warn@@Base+0x3df0>
   4ff48:	cmp	r5, #0
   4ff4c:	beq	4f600 <warn@@Base+0x3c14>
   4ff50:	ldrb	r3, [r8], #1
   4ff54:	sub	r5, r5, #1
   4ff58:	add	r6, r6, r3, lsl r4
   4ff5c:	add	r4, r4, #8
   4ff60:	cmp	r4, r1
   4ff64:	bcc	4ff48 <warn@@Base+0x455c>
   4ff68:	movw	r2, #7108	; 0x1bc4
   4ff6c:	ldr	r3, [r7, #64]	; 0x40
   4ff70:	ldr	r0, [r7, r2]
   4ff74:	mvn	ip, #0
   4ff78:	bic	ip, r6, ip, lsl r1
   4ff7c:	rsb	r4, r1, r4
   4ff80:	lsr	r6, r6, r1
   4ff84:	add	r3, ip, r3
   4ff88:	add	r1, r1, r0
   4ff8c:	str	r3, [r7, #64]	; 0x40
   4ff90:	str	r1, [r7, r2]
   4ff94:	b	4f954 <warn@@Base+0x3f68>
   4ff98:	ldr	r3, [r7, #8]
   4ff9c:	cmp	r3, #0
   4ffa0:	bne	4ffc8 <warn@@Base+0x45dc>
   4ffa4:	mov	r2, #27
   4ffa8:	str	r2, [r7]
   4ffac:	b	50084 <warn@@Base+0x4698>
   4ffb0:	cmp	r5, #0
   4ffb4:	beq	4f600 <warn@@Base+0x3c14>
   4ffb8:	ldrb	r3, [r8], #1
   4ffbc:	sub	r5, r5, #1
   4ffc0:	add	r6, r6, r3, lsl r4
   4ffc4:	add	r4, r4, #8
   4ffc8:	cmp	r4, #31
   4ffcc:	bls	4ffb0 <warn@@Base+0x45c4>
   4ffd0:	ldr	ip, [sp, #12]
   4ffd4:	ldr	r0, [sp, #8]
   4ffd8:	ldr	r3, [r7, #28]
   4ffdc:	rsb	r2, r0, ip
   4ffe0:	ldr	ip, [sp, #24]
   4ffe4:	cmp	r2, #0
   4ffe8:	add	r3, r3, r2
   4ffec:	ldr	r1, [ip, #20]
   4fff0:	add	r1, r1, r2
   4fff4:	str	r1, [ip, #20]
   4fff8:	str	r3, [r7, #28]
   4fffc:	beq	50024 <warn@@Base+0x4638>
   50000:	ldr	r3, [r7, #16]
   50004:	rsb	r1, r2, fp
   50008:	ldr	r0, [r7, #24]
   5000c:	cmp	r3, #0
   50010:	beq	5076c <warn@@Base+0x4d80>
   50014:	bl	51c08 <zcfree@@Base+0x5d8>
   50018:	ldr	ip, [sp, #24]
   5001c:	str	r0, [r7, #24]
   50020:	str	r0, [ip, #48]	; 0x30
   50024:	ldr	r3, [r7, #16]
   50028:	cmp	r3, #0
   5002c:	lsreq	r3, r6, #8
   50030:	lsreq	r1, r6, #24
   50034:	andeq	r3, r3, #65280	; 0xff00
   50038:	addeq	r1, r1, r6, lsl #24
   5003c:	andeq	r2, r6, #65280	; 0xff00
   50040:	addeq	r3, r1, r3
   50044:	movne	r2, r6
   50048:	addeq	r2, r3, r2, lsl #8
   5004c:	ldr	r3, [r7, #24]
   50050:	cmp	r2, r3
   50054:	beq	50754 <warn@@Base+0x4d68>
   50058:	ldr	ip, [sp, #8]
   5005c:	mov	r2, #29
   50060:	ldr	r1, [pc, #208]	; 50138 <warn@@Base+0x474c>
   50064:	mov	r3, r2
   50068:	str	ip, [sp, #12]
   5006c:	add	r1, pc, r1
   50070:	ldr	ip, [sp, #24]
   50074:	str	r1, [ip, #24]
   50078:	str	r2, [r7]
   5007c:	b	4f20c <warn@@Base+0x3820>
   50080:	ldr	r3, [r7, #8]
   50084:	cmp	r3, #0
   50088:	beq	50774 <warn@@Base+0x4d88>
   5008c:	ldr	r3, [r7, #16]
   50090:	cmp	r3, #0
   50094:	bne	500b4 <warn@@Base+0x46c8>
   50098:	b	50774 <warn@@Base+0x4d88>
   5009c:	cmp	r5, #0
   500a0:	beq	4f600 <warn@@Base+0x3c14>
   500a4:	ldrb	r3, [r8], #1
   500a8:	sub	r5, r5, #1
   500ac:	add	r6, r6, r3, lsl r4
   500b0:	add	r4, r4, #8
   500b4:	cmp	r4, #31
   500b8:	bls	5009c <warn@@Base+0x46b0>
   500bc:	ldr	r3, [r7, #28]
   500c0:	cmp	r3, r6
   500c4:	beq	5086c <warn@@Base+0x4e80>
   500c8:	ldr	r1, [pc, #108]	; 5013c <warn@@Base+0x4750>
   500cc:	add	r1, pc, r1
   500d0:	b	4fbdc <warn@@Base+0x41f0>
   500d4:	ldr	r3, [sl, #4]
   500d8:	cmp	r3, #0
   500dc:	bne	504d8 <warn@@Base+0x4aec>
   500e0:	str	ip, [sp, #20]
   500e4:	b	4f194 <warn@@Base+0x37a8>
   500e8:	ldr	r2, [r7, #32]
   500ec:	cmp	r2, #0
   500f0:	strne	r3, [r2, #36]	; 0x24
   500f4:	b	4fef4 <warn@@Base+0x4508>
   500f8:	mov	r3, #11
   500fc:	str	r3, [r7]
   50100:	b	4f20c <warn@@Base+0x3820>
   50104:			; <UNDEFINED> instruction: 0x00043eb4
   50108:	andeq	r0, r0, r0, lsr #2
   5010c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   50110:	andeq	r0, r3, r0, lsl #25
   50114:	andeq	r0, r3, r0, ror #24
   50118:	andeq	r0, r3, r4, lsl ip
   5011c:	andeq	r0, r3, r0, ror sl
   50120:	andeq	r0, r3, r4, lsl r9
   50124:	andeq	r0, r3, r4, ror #12
   50128:	andeq	pc, r2, r8, lsl sl	; <UNPREDICTABLE>
   5012c:			; <UNDEFINED> instruction: 0x000302b4
   50130:	andeq	r0, r3, ip, lsr #3
   50134:	andeq	r0, r3, ip, asr #32
   50138:	andeq	pc, r2, ip, ror #28
   5013c:	andeq	pc, r2, r4, lsr #28
   50140:			; <UNDEFINED> instruction: 0x0002fbb4
   50144:	strdeq	pc, [r2], -r4
   50148:	andeq	pc, r2, r8, ror #17
   5014c:	ldrdeq	pc, [r2], -r0
   50150:	andeq	lr, r2, ip, lsl #30
   50154:	andeq	pc, r2, r4, ror #15
   50158:	muleq	r2, ip, r8
   5015c:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   50160:	andeq	pc, r2, r4, asr r4	; <UNPREDICTABLE>
   50164:			; <UNDEFINED> instruction: 0x0002f3b8
   50168:	ldr	r2, [r7, #64]	; 0x40
   5016c:	rsb	r3, r3, fp
   50170:	mov	r0, r2
   50174:	ldr	ip, [sp, #8]
   50178:	cmp	r2, ip
   5017c:	movcs	r2, ip
   50180:	rsb	ip, r2, ip
   50184:	add	r1, fp, r2
   50188:	str	ip, [sp, #8]
   5018c:	rsb	r2, r2, r0
   50190:	str	r2, [r7, #64]	; 0x40
   50194:	ldrb	r2, [r3], #1
   50198:	strb	r2, [fp], #1
   5019c:	cmp	fp, r1
   501a0:	bne	50194 <warn@@Base+0x47a8>
   501a4:	ldr	r3, [r7, #64]	; 0x40
   501a8:	cmp	r3, #0
   501ac:	moveq	r3, #20
   501b0:	ldrne	r3, [r7]
   501b4:	streq	r3, [r7]
   501b8:	b	4f20c <warn@@Base+0x3820>
   501bc:	tst	r1, #240	; 0xf0
   501c0:	bne	502c4 <warn@@Base+0x48d8>
   501c4:	add	r1, r3, r1
   501c8:	mov	r9, r3
   501cc:	mvn	r3, #0
   501d0:	str	r0, [sp, #56]	; 0x38
   501d4:	mvn	r3, r3, lsl r1
   501d8:	str	r3, [sp, #60]	; 0x3c
   501dc:	and	r3, r3, r6
   501e0:	add	r3, r0, r3, lsr r9
   501e4:	add	r0, r2, r3, lsl #2
   501e8:	ldrb	r1, [r2, r3, lsl #2]
   501ec:	ldrb	r3, [r0, #1]
   501f0:	ldrh	r0, [r0, #2]
   501f4:	add	sl, r9, r3
   501f8:	cmp	r4, sl
   501fc:	bcs	50260 <warn@@Base+0x4874>
   50200:	cmp	r5, #0
   50204:	beq	4f600 <warn@@Base+0x3c14>
   50208:	str	fp, [sp, #64]	; 0x40
   5020c:	str	ip, [sp, #68]	; 0x44
   50210:	ldr	sl, [sp, #56]	; 0x38
   50214:	ldr	fp, [sp, #60]	; 0x3c
   50218:	b	50224 <warn@@Base+0x4838>
   5021c:	cmp	r5, #0
   50220:	beq	50510 <warn@@Base+0x4b24>
   50224:	ldrb	r3, [r8], #1
   50228:	sub	r5, r5, #1
   5022c:	add	r6, r6, r3, lsl r4
   50230:	add	r4, r4, #8
   50234:	and	r3, r6, fp
   50238:	add	r3, sl, r3, lsr r9
   5023c:	add	r0, r2, r3, lsl #2
   50240:	ldrb	r1, [r2, r3, lsl #2]
   50244:	ldrb	r3, [r0, #1]
   50248:	ldrh	r0, [r0, #2]
   5024c:	add	ip, r3, r9
   50250:	cmp	ip, r4
   50254:	bhi	5021c <warn@@Base+0x4830>
   50258:	ldr	fp, [sp, #64]	; 0x40
   5025c:	ldr	ip, [sp, #68]	; 0x44
   50260:	movw	r2, #7108	; 0x1bc4
   50264:	lsr	r6, r6, r9
   50268:	ldr	r2, [r7, r2]
   5026c:	rsb	r4, ip, r4
   50270:	add	r9, r9, r2
   50274:	b	502cc <warn@@Base+0x48e0>
   50278:	cmp	r3, #15
   5027c:	bls	502f4 <warn@@Base+0x4908>
   50280:	cmp	r3, #16
   50284:	beq	5067c <warn@@Base+0x4c90>
   50288:	cmp	r3, #17
   5028c:	beq	5070c <warn@@Base+0x4d20>
   50290:	add	r1, r2, #7
   50294:	cmp	r4, r1
   50298:	bcc	502b8 <warn@@Base+0x48cc>
   5029c:	b	506b0 <warn@@Base+0x4cc4>
   502a0:	ldrb	r3, [r8], #1
   502a4:	sub	r5, r5, #1
   502a8:	add	r6, r6, r3, lsl r4
   502ac:	add	r4, r4, #8
   502b0:	cmp	r4, r1
   502b4:	bcs	506b0 <warn@@Base+0x4cc4>
   502b8:	cmp	r5, #0
   502bc:	bne	502a0 <warn@@Base+0x48b4>
   502c0:	b	4f600 <warn@@Base+0x3c14>
   502c4:	movw	r2, #7108	; 0x1bc4
   502c8:	ldr	r9, [r7, r2]
   502cc:	tst	r1, #64	; 0x40
   502d0:	movw	r2, #7108	; 0x1bc4
   502d4:	add	r9, r9, r3
   502d8:	lsr	r6, r6, r3
   502dc:	rsb	r4, r3, r4
   502e0:	str	r9, [r7, r2]
   502e4:	beq	504f8 <warn@@Base+0x4b0c>
   502e8:	ldr	r1, [pc, #-432]	; 50140 <warn@@Base+0x4754>
   502ec:	add	r1, pc, r1
   502f0:	b	4fbdc <warn@@Base+0x41f0>
   502f4:	add	r1, ip, #1
   502f8:	add	r0, r7, ip, lsl #1
   502fc:	str	r1, [r7, #104]	; 0x68
   50300:	lsr	r6, r6, r2
   50304:	rsb	r4, r2, r4
   50308:	mov	ip, r1
   5030c:	strh	r3, [r0, #112]	; 0x70
   50310:	b	4f59c <warn@@Base+0x3bb0>
   50314:	mov	r3, #16
   50318:	str	r3, [r7]
   5031c:	b	4f440 <warn@@Base+0x3a54>
   50320:	cmp	r1, #0
   50324:	beq	50494 <warn@@Base+0x4aa8>
   50328:	tst	r1, #240	; 0xf0
   5032c:	bne	50494 <warn@@Base+0x4aa8>
   50330:	add	r1, r3, r1
   50334:	mov	sl, r3
   50338:	mvn	r3, #0
   5033c:	str	r0, [sp, #60]	; 0x3c
   50340:	mvn	r3, r3, lsl r1
   50344:	str	r3, [sp, #56]	; 0x38
   50348:	and	r3, r3, r6
   5034c:	add	r3, r0, r3, lsr sl
   50350:	add	r0, r2, r3, lsl #2
   50354:	ldrb	r1, [r2, r3, lsl #2]
   50358:	ldrb	r3, [r0, #1]
   5035c:	ldrh	r0, [r0, #2]
   50360:	add	r9, sl, r3
   50364:	cmp	r4, r9
   50368:	bcs	503cc <warn@@Base+0x49e0>
   5036c:	cmp	r5, #0
   50370:	beq	4f600 <warn@@Base+0x3c14>
   50374:	str	fp, [sp, #64]	; 0x40
   50378:	str	ip, [sp, #68]	; 0x44
   5037c:	ldr	fp, [sp, #60]	; 0x3c
   50380:	ldr	ip, [sp, #56]	; 0x38
   50384:	b	50390 <warn@@Base+0x49a4>
   50388:	cmp	r5, #0
   5038c:	beq	50510 <warn@@Base+0x4b24>
   50390:	ldrb	r3, [r8], #1
   50394:	sub	r5, r5, #1
   50398:	add	r6, r6, r3, lsl r4
   5039c:	add	r4, r4, #8
   503a0:	and	r3, r6, ip
   503a4:	add	r3, fp, r3, lsr sl
   503a8:	add	r0, r2, r3, lsl #2
   503ac:	ldrb	r1, [r2, r3, lsl #2]
   503b0:	ldrb	r3, [r0, #1]
   503b4:	ldrh	r0, [r0, #2]
   503b8:	add	r9, r3, sl
   503bc:	cmp	r9, r4
   503c0:	bhi	50388 <warn@@Base+0x499c>
   503c4:	ldr	fp, [sp, #64]	; 0x40
   503c8:	ldr	ip, [sp, #68]	; 0x44
   503cc:	lsr	r6, r6, sl
   503d0:	rsb	r4, ip, r4
   503d4:	cmp	r1, #0
   503d8:	movw	r2, #7108	; 0x1bc4
   503dc:	lsr	r6, r6, r3
   503e0:	rsb	r4, r3, r4
   503e4:	str	r0, [r7, #64]	; 0x40
   503e8:	moveq	r3, #25
   503ec:	str	r9, [r7, r2]
   503f0:	streq	r3, [r7]
   503f4:	beq	4f20c <warn@@Base+0x3820>
   503f8:	tst	r1, #32
   503fc:	beq	505dc <warn@@Base+0x4bf0>
   50400:	mov	r3, #11
   50404:	mvn	r1, #0
   50408:	str	r3, [r7]
   5040c:	str	r1, [r7, r2]
   50410:	b	4f20c <warn@@Base+0x3820>
   50414:	ldr	r0, [r7, #24]
   50418:	mov	r1, r8
   5041c:	mov	r2, r9
   50420:	bl	51c08 <zcfree@@Base+0x5d8>
   50424:	str	r0, [r7, #24]
   50428:	b	4fee0 <warn@@Base+0x44f4>
   5042c:	ldr	ip, [sp, #24]
   50430:	ldr	r1, [sp, #8]
   50434:	str	fp, [ip, #12]
   50438:	mov	r0, ip
   5043c:	str	r1, [ip, #16]
   50440:	str	r8, [ip]
   50444:	str	r5, [ip, #4]
   50448:	ldr	r1, [sp, #12]
   5044c:	str	r6, [r7, #56]	; 0x38
   50450:	str	r4, [r7, #60]	; 0x3c
   50454:	bl	51f8c <zcfree@@Base+0x95c>
   50458:	ldr	ip, [sp, #24]
   5045c:	ldr	r3, [r7]
   50460:	ldr	r6, [r7, #56]	; 0x38
   50464:	ldr	fp, [ip, #12]
   50468:	cmp	r3, #11
   5046c:	ldr	ip, [ip, #16]
   50470:	movweq	r2, #7108	; 0x1bc4
   50474:	ldr	r4, [r7, #60]	; 0x3c
   50478:	mvneq	r1, #0
   5047c:	str	ip, [sp, #8]
   50480:	ldr	ip, [sp, #24]
   50484:	ldr	r8, [ip]
   50488:	ldr	r5, [ip, #4]
   5048c:	streq	r1, [r7, r2]
   50490:	b	4f20c <warn@@Base+0x3820>
   50494:	mov	r9, r3
   50498:	b	503d4 <warn@@Base+0x49e8>
   5049c:	lsr	r3, r6, #16
   504a0:	uxth	r9, r6
   504a4:	eor	r3, r3, #65280	; 0xff00
   504a8:	eor	r3, r3, #255	; 0xff
   504ac:	cmp	r9, r3
   504b0:	beq	50624 <warn@@Base+0x4c38>
   504b4:	ldr	r1, [pc, #-888]	; 50144 <warn@@Base+0x4758>
   504b8:	add	r1, pc, r1
   504bc:	b	4fbdc <warn@@Base+0x41f0>
   504c0:	ldr	r0, [r7, #24]
   504c4:	mov	r1, r8
   504c8:	mov	r2, r9
   504cc:	bl	51c08 <zcfree@@Base+0x5d8>
   504d0:	str	r0, [r7, #24]
   504d4:	b	4fe54 <warn@@Base+0x4468>
   504d8:	mvn	r0, #1
   504dc:	b	4f748 <warn@@Base+0x3d5c>
   504e0:	ldr	r1, [pc, #-928]	; 50148 <warn@@Base+0x475c>
   504e4:	add	r1, pc, r1
   504e8:	b	4fbdc <warn@@Base+0x41f0>
   504ec:	mov	r4, #0
   504f0:	mov	r6, r4
   504f4:	b	4fb64 <warn@@Base+0x4178>
   504f8:	and	r1, r1, #15
   504fc:	mov	r3, #23
   50500:	str	r0, [r7, #68]	; 0x44
   50504:	str	r1, [r7, #72]	; 0x48
   50508:	str	r3, [r7]
   5050c:	b	4ff3c <warn@@Base+0x4550>
   50510:	mov	ip, r8
   50514:	ldr	fp, [sp, #64]	; 0x40
   50518:	ldr	sl, [sp, #24]
   5051c:	b	4f608 <warn@@Base+0x3c1c>
   50520:	add	r1, sp, #72	; 0x48
   50524:	mov	r2, #2
   50528:	ldr	r0, [r7, #24]
   5052c:	strb	r6, [sp, #72]	; 0x48
   50530:	lsr	r6, r6, #8
   50534:	strb	r6, [sp, #73]	; 0x49
   50538:	bl	51c08 <zcfree@@Base+0x5d8>
   5053c:	ldr	r2, [r7, #16]
   50540:	mov	r1, r2
   50544:	str	r0, [r7, #24]
   50548:	b	4f514 <warn@@Base+0x3b28>
   5054c:	ldr	r1, [pc, #-1032]	; 5014c <warn@@Base+0x4760>
   50550:	add	r1, pc, r1
   50554:	b	4fbdc <warn@@Base+0x41f0>
   50558:	ldr	ip, [sp, #36]	; 0x24
   5055c:	mov	r1, #9
   50560:	ldr	r3, [pc, #-1048]	; 50150 <warn@@Base+0x4764>
   50564:	cmp	ip, #6
   50568:	str	r1, [r7, #84]	; 0x54
   5056c:	add	r3, pc, r3
   50570:	str	r3, [r7, #76]	; 0x4c
   50574:	add	r1, r3, #2048	; 0x800
   50578:	mov	r3, #5
   5057c:	str	r1, [r7, #80]	; 0x50
   50580:	str	r3, [r7, #88]	; 0x58
   50584:	mov	r3, #19
   50588:	str	r3, [r7]
   5058c:	bne	4f440 <warn@@Base+0x3a54>
   50590:	mov	ip, r8
   50594:	ldr	sl, [sp, #24]
   50598:	lsr	r6, r6, #3
   5059c:	sub	r4, r4, #3
   505a0:	b	4f608 <warn@@Base+0x3c1c>
   505a4:	ldr	ip, [sp, #24]
   505a8:	mov	r1, #29
   505ac:	ldr	r0, [pc, #-1120]	; 50154 <warn@@Base+0x4768>
   505b0:	mov	r3, r1
   505b4:	add	r0, pc, r0
   505b8:	str	r0, [ip, #24]
   505bc:	str	r1, [r7]
   505c0:	b	4f440 <warn@@Base+0x3a54>
   505c4:	ldr	r0, [r7, #24]
   505c8:	mov	r1, r8
   505cc:	mov	r2, r9
   505d0:	bl	51c08 <zcfree@@Base+0x5d8>
   505d4:	str	r0, [r7, #24]
   505d8:	b	4fda0 <warn@@Base+0x43b4>
   505dc:	tst	r1, #64	; 0x40
   505e0:	beq	50740 <warn@@Base+0x4d54>
   505e4:	ldr	r1, [pc, #-1172]	; 50158 <warn@@Base+0x476c>
   505e8:	add	r1, pc, r1
   505ec:	b	4fbdc <warn@@Base+0x41f0>
   505f0:	ldr	r0, [r7, #24]
   505f4:	add	r1, sp, #72	; 0x48
   505f8:	mov	r2, #4
   505fc:	lsr	r3, r6, #8
   50600:	strb	r6, [sp, #72]	; 0x48
   50604:	strb	r3, [sp, #73]	; 0x49
   50608:	lsr	r3, r6, #16
   5060c:	lsr	r6, r6, #24
   50610:	strb	r3, [sp, #74]	; 0x4a
   50614:	strb	r6, [sp, #75]	; 0x4b
   50618:	bl	51c08 <zcfree@@Base+0x5d8>
   5061c:	str	r0, [r7, #24]
   50620:	b	4f4bc <warn@@Base+0x3ad0>
   50624:	ldr	ip, [sp, #36]	; 0x24
   50628:	mov	r3, #14
   5062c:	str	r9, [r7, #64]	; 0x40
   50630:	cmp	ip, #6
   50634:	str	r3, [r7]
   50638:	beq	509bc <warn@@Base+0x4fd0>
   5063c:	mov	r4, #0
   50640:	mov	r6, r4
   50644:	b	4fc34 <warn@@Base+0x4248>
   50648:	add	r1, sp, #72	; 0x48
   5064c:	ldr	r0, [r7, #24]
   50650:	mov	r2, #2
   50654:	strb	r6, [sp, #72]	; 0x48
   50658:	lsr	r6, r6, #8
   5065c:	strb	r6, [sp, #73]	; 0x49
   50660:	bl	51c08 <zcfree@@Base+0x5d8>
   50664:	ldr	r1, [r7, #16]
   50668:	mov	r6, #0
   5066c:	and	r3, r1, #1024	; 0x400
   50670:	mov	r4, r6
   50674:	str	r0, [r7, #24]
   50678:	b	4fd20 <warn@@Base+0x4334>
   5067c:	add	r1, r2, #2
   50680:	cmp	r4, r1
   50684:	bcc	506a4 <warn@@Base+0x4cb8>
   50688:	b	50790 <warn@@Base+0x4da4>
   5068c:	ldrb	r3, [r8], #1
   50690:	sub	r5, r5, #1
   50694:	add	r6, r6, r3, lsl r4
   50698:	add	r4, r4, #8
   5069c:	cmp	r4, r1
   506a0:	bcs	50790 <warn@@Base+0x4da4>
   506a4:	cmp	r5, #0
   506a8:	bne	5068c <warn@@Base+0x4ca0>
   506ac:	b	4f600 <warn@@Base+0x3c14>
   506b0:	lsr	r6, r6, r2
   506b4:	movw	r3, #65529	; 0xfff9
   506b8:	movt	r3, #65535	; 0xffff
   506bc:	and	r0, r6, #127	; 0x7f
   506c0:	rsb	r3, r2, r3
   506c4:	add	r0, r0, #11
   506c8:	add	r4, r4, r3
   506cc:	lsr	r6, r6, #7
   506d0:	mov	r1, #0
   506d4:	add	r0, r0, ip
   506d8:	cmp	r0, r9
   506dc:	bhi	509d0 <warn@@Base+0x4fe4>
   506e0:	add	r3, ip, #55	; 0x37
   506e4:	ldr	ip, [sp, #60]	; 0x3c
   506e8:	uxth	r1, r1
   506ec:	add	r2, ip, r0, lsl #1
   506f0:	add	r3, r7, r3, lsl #1
   506f4:	strh	r1, [r3, #2]!
   506f8:	cmp	r3, r2
   506fc:	bne	506f4 <warn@@Base+0x4d08>
   50700:	mov	ip, r0
   50704:	str	r0, [r7, #104]	; 0x68
   50708:	b	4f59c <warn@@Base+0x3bb0>
   5070c:	add	r1, r2, #3
   50710:	cmp	r4, r1
   50714:	bcc	50734 <warn@@Base+0x4d48>
   50718:	b	507d0 <warn@@Base+0x4de4>
   5071c:	ldrb	r3, [r8], #1
   50720:	sub	r5, r5, #1
   50724:	add	r6, r6, r3, lsl r4
   50728:	add	r4, r4, #8
   5072c:	cmp	r4, r1
   50730:	bcs	507d0 <warn@@Base+0x4de4>
   50734:	cmp	r5, #0
   50738:	bne	5071c <warn@@Base+0x4d30>
   5073c:	b	4f600 <warn@@Base+0x3c14>
   50740:	and	r1, r1, #15
   50744:	mov	r3, #21
   50748:	str	r1, [r7, #72]	; 0x48
   5074c:	str	r3, [r7]
   50750:	b	4f948 <warn@@Base+0x3f5c>
   50754:	ldr	ip, [sp, #8]
   50758:	mov	r4, #0
   5075c:	ldr	r3, [r7, #8]
   50760:	mov	r6, r4
   50764:	str	ip, [sp, #12]
   50768:	b	4ffa4 <warn@@Base+0x45b8>
   5076c:	bl	516e8 <zcfree@@Base+0xb8>
   50770:	b	50018 <warn@@Base+0x462c>
   50774:	ldr	sl, [sp, #24]
   50778:	mov	ip, r8
   5077c:	mov	r3, #28
   50780:	str	r3, [r7]
   50784:	mov	r3, #1
   50788:	str	r3, [sp, #28]
   5078c:	b	4f608 <warn@@Base+0x3c1c>
   50790:	cmp	ip, #0
   50794:	lsr	r6, r6, r2
   50798:	rsb	r4, r2, r4
   5079c:	beq	50a48 <warn@@Base+0x505c>
   507a0:	add	r3, r7, ip, lsl #1
   507a4:	and	r0, r6, #3
   507a8:	sub	r4, r4, #2
   507ac:	add	r0, r0, #3
   507b0:	ldrh	r1, [r3, #110]	; 0x6e
   507b4:	lsr	r6, r6, #2
   507b8:	b	506d4 <warn@@Base+0x4ce8>
   507bc:	ldr	ip, [sp, #28]
   507c0:	mov	r3, #18
   507c4:	str	r3, [r7]
   507c8:	str	ip, [r7, #104]	; 0x68
   507cc:	b	4f580 <warn@@Base+0x3b94>
   507d0:	lsr	r6, r6, r2
   507d4:	movw	r3, #65533	; 0xfffd
   507d8:	movt	r3, #65535	; 0xffff
   507dc:	and	r0, r6, #7
   507e0:	rsb	r3, r2, r3
   507e4:	add	r0, r0, #3
   507e8:	add	r4, r4, r3
   507ec:	lsr	r6, r6, #3
   507f0:	mov	r1, #0
   507f4:	b	506d4 <warn@@Base+0x4ce8>
   507f8:	ldr	r3, [r7]
   507fc:	cmp	r3, #29
   50800:	beq	4f20c <warn@@Base+0x3820>
   50804:	mov	r3, #624	; 0x270
   50808:	ldrh	r3, [r7, r3]
   5080c:	cmp	r3, #0
   50810:	bne	5095c <warn@@Base+0x4f70>
   50814:	ldr	r1, [pc, #-1728]	; 5015c <warn@@Base+0x4770>
   50818:	add	r1, pc, r1
   5081c:	b	4fbdc <warn@@Base+0x41f0>
   50820:	ldr	sl, [sp, #24]
   50824:	mov	r0, #2
   50828:	ldr	r1, [sp, #8]
   5082c:	str	fp, [sl, #12]
   50830:	str	r1, [sl, #16]
   50834:	str	r8, [sl]
   50838:	str	r5, [sl, #4]
   5083c:	str	r6, [r7, #56]	; 0x38
   50840:	str	r4, [r7, #60]	; 0x3c
   50844:	b	4f748 <warn@@Base+0x3d5c>
   50848:	ldr	r0, [r7, #24]
   5084c:	add	r1, sp, #72	; 0x48
   50850:	mov	r2, #2
   50854:	strb	r6, [sp, #72]	; 0x48
   50858:	lsr	r6, r6, #8
   5085c:	strb	r6, [sp, #73]	; 0x49
   50860:	bl	51c08 <zcfree@@Base+0x5d8>
   50864:	str	r0, [r7, #24]
   50868:	b	4f474 <warn@@Base+0x3a88>
   5086c:	mov	r4, #0
   50870:	mov	ip, r8
   50874:	ldr	sl, [sp, #24]
   50878:	mov	r6, r4
   5087c:	b	5077c <warn@@Base+0x4d90>
   50880:	mov	r0, #0
   50884:	mov	r1, r0
   50888:	mov	r2, r0
   5088c:	mov	r4, r0
   50890:	bl	51c08 <zcfree@@Base+0x5d8>
   50894:	add	r1, sp, #72	; 0x48
   50898:	mov	r2, #2
   5089c:	mov	r3, #31
   508a0:	strb	r3, [sp, #72]	; 0x48
   508a4:	mvn	r3, #116	; 0x74
   508a8:	strb	r3, [sp, #73]	; 0x49
   508ac:	mov	r6, r4
   508b0:	str	r0, [r7, #24]
   508b4:	bl	51c08 <zcfree@@Base+0x5d8>
   508b8:	mov	r3, #1
   508bc:	str	r3, [r7]
   508c0:	str	r0, [r7, #24]
   508c4:	b	4f20c <warn@@Base+0x3820>
   508c8:	ldr	r2, [r7, #36]	; 0x24
   508cc:	lsr	r6, r6, #4
   508d0:	and	r3, r6, #15
   508d4:	cmp	r2, #0
   508d8:	add	r3, r3, #8
   508dc:	streq	r3, [r7, #36]	; 0x24
   508e0:	beq	50914 <warn@@Base+0x4f28>
   508e4:	cmp	r3, r2
   508e8:	bls	50914 <warn@@Base+0x4f28>
   508ec:	ldr	ip, [sp, #24]
   508f0:	mov	r2, #29
   508f4:	ldr	r1, [pc, #-1948]	; 50160 <warn@@Base+0x4774>
   508f8:	sub	r4, r4, #4
   508fc:	mov	r3, r2
   50900:	add	r1, pc, r1
   50904:	str	r1, [ip, #24]
   50908:	str	r2, [r7]
   5090c:	b	4f20c <warn@@Base+0x3820>
   50910:	bl	1117c <__stack_chk_fail@plt>
   50914:	mov	r0, #0
   50918:	mov	r2, #1
   5091c:	lsl	r3, r2, r3
   50920:	mov	r1, r0
   50924:	str	r3, [r7, #20]
   50928:	mov	r2, r0
   5092c:	bl	516e8 <zcfree@@Base+0xb8>
   50930:	tst	r6, #512	; 0x200
   50934:	ldr	ip, [sp, #24]
   50938:	mov	r6, #0
   5093c:	moveq	r2, #11
   50940:	movne	r2, #9
   50944:	mov	r4, r6
   50948:	mov	r3, r2
   5094c:	str	r0, [r7, #24]
   50950:	str	r0, [ip, #48]	; 0x30
   50954:	str	r2, [r7]
   50958:	b	4f20c <warn@@Base+0x3820>
   5095c:	add	r9, r7, #108	; 0x6c
   50960:	add	r1, r7, #1328	; 0x530
   50964:	mov	r0, #9
   50968:	str	r1, [r7, #108]	; 0x6c
   5096c:	str	r1, [r7, #76]	; 0x4c
   50970:	mov	r3, r9
   50974:	str	r0, [r7, #84]	; 0x54
   50978:	add	r1, r7, #84	; 0x54
   5097c:	ldr	r2, [sp, #56]	; 0x38
   50980:	add	sl, r7, #752	; 0x2f0
   50984:	str	r1, [sp]
   50988:	mov	r0, #1
   5098c:	str	sl, [sp, #4]
   50990:	add	r1, r7, #112	; 0x70
   50994:	bl	51018 <warn@@Base+0x562c>
   50998:	cmp	r0, #0
   5099c:	str	r0, [sp, #28]
   509a0:	beq	509ec <warn@@Base+0x5000>
   509a4:	ldr	ip, [sp, #48]	; 0x30
   509a8:	mov	r3, #29
   509ac:	ldr	r0, [sp, #24]
   509b0:	str	ip, [r0, #24]
   509b4:	str	r3, [r7]
   509b8:	b	4f20c <warn@@Base+0x3820>
   509bc:	mov	r4, #0
   509c0:	mov	ip, r8
   509c4:	ldr	sl, [sp, #24]
   509c8:	mov	r6, r4
   509cc:	b	4f608 <warn@@Base+0x3c1c>
   509d0:	ldr	ip, [sp, #52]	; 0x34
   509d4:	mov	r3, #29
   509d8:	ldr	r0, [sp, #24]
   509dc:	str	ip, [r0, #24]
   509e0:	str	r3, [r7]
   509e4:	mov	r3, #29
   509e8:	b	4f20c <warn@@Base+0x3820>
   509ec:	ldr	r1, [r7, #96]	; 0x60
   509f0:	mov	r2, #6
   509f4:	ldr	r0, [r7, #108]	; 0x6c
   509f8:	mov	r3, r9
   509fc:	add	r1, r1, #56	; 0x38
   50a00:	str	r2, [r7, #88]	; 0x58
   50a04:	add	r2, r7, #88	; 0x58
   50a08:	str	r0, [r7, #80]	; 0x50
   50a0c:	add	r1, r7, r1, lsl #1
   50a10:	str	sl, [sp, #4]
   50a14:	mov	r0, #2
   50a18:	str	r2, [sp]
   50a1c:	ldr	r2, [r7, #100]	; 0x64
   50a20:	bl	51018 <warn@@Base+0x562c>
   50a24:	cmp	r0, #0
   50a28:	str	r0, [sp, #28]
   50a2c:	beq	4f894 <warn@@Base+0x3ea8>
   50a30:	ldr	ip, [sp, #44]	; 0x2c
   50a34:	mov	r3, #29
   50a38:	ldr	r0, [sp, #24]
   50a3c:	str	ip, [r0, #24]
   50a40:	str	r3, [r7]
   50a44:	b	4f20c <warn@@Base+0x3820>
   50a48:	ldr	ip, [sp, #24]
   50a4c:	mov	r3, #29
   50a50:	ldr	r2, [pc, #-2292]	; 50164 <warn@@Base+0x4778>
   50a54:	add	r2, pc, r2
   50a58:	str	r2, [ip, #24]
   50a5c:	str	r3, [r7]
   50a60:	b	509e4 <warn@@Base+0x4ff8>
   50a64:	push	{r4, lr}
   50a68:	subs	r4, r0, #0
   50a6c:	beq	50ac0 <warn@@Base+0x50d4>
   50a70:	ldr	r1, [r4, #28]
   50a74:	cmp	r1, #0
   50a78:	beq	50ac0 <warn@@Base+0x50d4>
   50a7c:	ldr	r3, [r4, #36]	; 0x24
   50a80:	cmp	r3, #0
   50a84:	beq	50ac0 <warn@@Base+0x50d4>
   50a88:	ldr	r2, [r1, #52]	; 0x34
   50a8c:	cmp	r2, #0
   50a90:	beq	50aa8 <warn@@Base+0x50bc>
   50a94:	mov	r1, r2
   50a98:	ldr	r0, [r4, #40]	; 0x28
   50a9c:	blx	r3
   50aa0:	ldr	r3, [r4, #36]	; 0x24
   50aa4:	ldr	r1, [r4, #28]
   50aa8:	ldr	r0, [r4, #40]	; 0x28
   50aac:	blx	r3
   50ab0:	mov	r3, #0
   50ab4:	mov	r0, r3
   50ab8:	str	r3, [r4, #28]
   50abc:	pop	{r4, pc}
   50ac0:	mvn	r0, #1
   50ac4:	pop	{r4, pc}
   50ac8:	cmp	r0, #0
   50acc:	push	{r3, r4, r5, lr}
   50ad0:	mov	r3, r1
   50ad4:	mov	r5, r2
   50ad8:	beq	50b50 <warn@@Base+0x5164>
   50adc:	ldr	r4, [r0, #28]
   50ae0:	cmp	r4, #0
   50ae4:	beq	50b50 <warn@@Base+0x5164>
   50ae8:	ldr	r2, [r4, #44]	; 0x2c
   50aec:	cmp	r2, #0
   50af0:	beq	50b30 <warn@@Base+0x5144>
   50af4:	cmp	r1, #0
   50af8:	beq	50b30 <warn@@Base+0x5144>
   50afc:	ldr	r1, [r4, #48]	; 0x30
   50b00:	mov	r0, r3
   50b04:	ldr	ip, [r4, #52]	; 0x34
   50b08:	rsb	r2, r1, r2
   50b0c:	add	r1, ip, r1
   50b10:	bl	11134 <memcpy@plt>
   50b14:	ldr	r2, [r4, #48]	; 0x30
   50b18:	ldr	r1, [r4, #52]	; 0x34
   50b1c:	mov	r3, r0
   50b20:	ldr	r0, [r4, #44]	; 0x2c
   50b24:	rsb	r0, r2, r0
   50b28:	add	r0, r3, r0
   50b2c:	bl	11134 <memcpy@plt>
   50b30:	cmp	r5, #0
   50b34:	beq	50b48 <warn@@Base+0x515c>
   50b38:	ldr	r3, [r4, #44]	; 0x2c
   50b3c:	mov	r0, #0
   50b40:	str	r3, [r5]
   50b44:	pop	{r3, r4, r5, pc}
   50b48:	mov	r0, r5
   50b4c:	pop	{r3, r4, r5, pc}
   50b50:	mvn	r0, #1
   50b54:	pop	{r3, r4, r5, pc}
   50b58:	push	{r3, r4, r5, r6, r7, lr}
   50b5c:	subs	r6, r0, #0
   50b60:	mov	r7, r1
   50b64:	mov	r5, r2
   50b68:	beq	50bec <warn@@Base+0x5200>
   50b6c:	ldr	r4, [r6, #28]
   50b70:	cmp	r4, #0
   50b74:	beq	50bec <warn@@Base+0x5200>
   50b78:	ldr	r3, [r4, #8]
   50b7c:	cmp	r3, #0
   50b80:	ldr	r3, [r4]
   50b84:	bne	50bb4 <warn@@Base+0x51c8>
   50b88:	cmp	r3, #10
   50b8c:	beq	50bbc <warn@@Base+0x51d0>
   50b90:	mov	r0, r6
   50b94:	add	r1, r7, r5
   50b98:	mov	r2, r5
   50b9c:	bl	4ed10 <warn@@Base+0x3324>
   50ba0:	cmp	r0, #0
   50ba4:	bne	50bf4 <warn@@Base+0x5208>
   50ba8:	mov	r3, #1
   50bac:	str	r3, [r4, #12]
   50bb0:	pop	{r3, r4, r5, r6, r7, pc}
   50bb4:	cmp	r3, #10
   50bb8:	bne	50bec <warn@@Base+0x5200>
   50bbc:	mov	r0, #0
   50bc0:	mov	r1, r0
   50bc4:	mov	r2, r0
   50bc8:	bl	516e8 <zcfree@@Base+0xb8>
   50bcc:	mov	r1, r7
   50bd0:	mov	r2, r5
   50bd4:	bl	516e8 <zcfree@@Base+0xb8>
   50bd8:	ldr	r3, [r4, #24]
   50bdc:	cmp	r0, r3
   50be0:	beq	50b90 <warn@@Base+0x51a4>
   50be4:	mvn	r0, #2
   50be8:	pop	{r3, r4, r5, r6, r7, pc}
   50bec:	mvn	r0, #1
   50bf0:	pop	{r3, r4, r5, r6, r7, pc}
   50bf4:	mov	r3, #30
   50bf8:	mvn	r0, #3
   50bfc:	str	r3, [r4]
   50c00:	pop	{r3, r4, r5, r6, r7, pc}
   50c04:	cmp	r0, #0
   50c08:	beq	50c38 <warn@@Base+0x524c>
   50c0c:	ldr	r3, [r0, #28]
   50c10:	cmp	r3, #0
   50c14:	beq	50c38 <warn@@Base+0x524c>
   50c18:	ldr	r2, [r3, #8]
   50c1c:	tst	r2, #2
   50c20:	beq	50c38 <warn@@Base+0x524c>
   50c24:	mov	r2, #0
   50c28:	str	r1, [r3, #32]
   50c2c:	mov	r0, r2
   50c30:	str	r2, [r1, #48]	; 0x30
   50c34:	bx	lr
   50c38:	mvn	r0, #1
   50c3c:	bx	lr
   50c40:	ldr	r3, [pc, #348]	; 50da4 <warn@@Base+0x53b8>
   50c44:	ldr	r2, [pc, #348]	; 50da8 <warn@@Base+0x53bc>
   50c48:	add	r3, pc, r3
   50c4c:	push	{r4, r5, r6, r7, r8, lr}
   50c50:	subs	r4, r0, #0
   50c54:	ldr	r7, [r3, r2]
   50c58:	sub	sp, sp, #8
   50c5c:	ldr	r3, [r7]
   50c60:	str	r3, [sp, #4]
   50c64:	beq	50d98 <warn@@Base+0x53ac>
   50c68:	ldr	r5, [r4, #28]
   50c6c:	cmp	r5, #0
   50c70:	beq	50d98 <warn@@Base+0x53ac>
   50c74:	ldr	r2, [r4, #4]
   50c78:	cmp	r2, #0
   50c7c:	beq	50d84 <warn@@Base+0x5398>
   50c80:	ldr	r3, [r5]
   50c84:	cmp	r3, #31
   50c88:	addeq	r6, r5, #104	; 0x68
   50c8c:	beq	50d0c <warn@@Base+0x5320>
   50c90:	ldr	r1, [r5, #60]	; 0x3c
   50c94:	mov	r0, #31
   50c98:	ldr	r3, [r5, #56]	; 0x38
   50c9c:	bic	r2, r1, #7
   50ca0:	and	r1, r1, #7
   50ca4:	cmp	r2, #7
   50ca8:	str	r2, [r5, #60]	; 0x3c
   50cac:	lsl	r3, r3, r1
   50cb0:	str	r0, [r5]
   50cb4:	str	r3, [r5, #56]	; 0x38
   50cb8:	movls	r2, #0
   50cbc:	bls	50cf0 <warn@@Base+0x5304>
   50cc0:	sub	r2, r2, #8
   50cc4:	sub	r0, sp, #1
   50cc8:	lsr	r2, r2, #3
   50ccc:	add	ip, sp, r2
   50cd0:	strb	r3, [r0, #1]!
   50cd4:	cmp	r0, ip
   50cd8:	lsr	r3, r3, #8
   50cdc:	bne	50cd0 <warn@@Base+0x52e4>
   50ce0:	add	r2, r2, #1
   50ce4:	str	r3, [r5, #56]	; 0x38
   50ce8:	mov	r3, #0
   50cec:	str	r3, [r5, #60]	; 0x3c
   50cf0:	mov	r6, r5
   50cf4:	mov	r3, #0
   50cf8:	mov	r1, sp
   50cfc:	str	r3, [r6, #104]!	; 0x68
   50d00:	mov	r0, r6
   50d04:	bl	4ec6c <warn@@Base+0x3280>
   50d08:	ldr	r2, [r4, #4]
   50d0c:	mov	r0, r6
   50d10:	ldr	r1, [r4]
   50d14:	bl	4ec6c <warn@@Base+0x3280>
   50d18:	ldr	r1, [r5, #104]	; 0x68
   50d1c:	ldr	r2, [r4, #4]
   50d20:	ldr	r3, [r4]
   50d24:	cmp	r1, #4
   50d28:	ldr	r6, [r4, #8]
   50d2c:	rsb	r2, r0, r2
   50d30:	add	r3, r3, r0
   50d34:	add	r6, r0, r6
   50d38:	str	r2, [r4, #4]
   50d3c:	str	r3, [r4]
   50d40:	mvnne	r0, #2
   50d44:	str	r6, [r4, #8]
   50d48:	bne	50d6c <warn@@Base+0x5380>
   50d4c:	ldr	r8, [r4, #20]
   50d50:	mov	r0, r4
   50d54:	bl	4eee4 <warn@@Base+0x34f8>
   50d58:	mov	r0, #0
   50d5c:	str	r6, [r4, #8]
   50d60:	mov	r3, #11
   50d64:	str	r8, [r4, #20]
   50d68:	str	r3, [r5]
   50d6c:	ldr	r2, [sp, #4]
   50d70:	ldr	r3, [r7]
   50d74:	cmp	r2, r3
   50d78:	bne	50da0 <warn@@Base+0x53b4>
   50d7c:	add	sp, sp, #8
   50d80:	pop	{r4, r5, r6, r7, r8, pc}
   50d84:	ldr	r3, [r5, #60]	; 0x3c
   50d88:	cmp	r3, #7
   50d8c:	bhi	50c80 <warn@@Base+0x5294>
   50d90:	mvn	r0, #4
   50d94:	b	50d6c <warn@@Base+0x5380>
   50d98:	mvn	r0, #1
   50d9c:	b	50d6c <warn@@Base+0x5380>
   50da0:	bl	1117c <__stack_chk_fail@plt>
   50da4:			; <UNDEFINED> instruction: 0x000423b0
   50da8:	andeq	r0, r0, r0, lsr #2
   50dac:	cmp	r0, #0
   50db0:	beq	50de4 <warn@@Base+0x53f8>
   50db4:	ldr	r3, [r0, #28]
   50db8:	cmp	r3, #0
   50dbc:	beq	50de4 <warn@@Base+0x53f8>
   50dc0:	ldr	r2, [r3]
   50dc4:	cmp	r2, #13
   50dc8:	beq	50dd4 <warn@@Base+0x53e8>
   50dcc:	mov	r0, #0
   50dd0:	bx	lr
   50dd4:	ldr	r0, [r3, #60]	; 0x3c
   50dd8:	rsbs	r0, r0, #1
   50ddc:	movcc	r0, #0
   50de0:	bx	lr
   50de4:	mvn	r0, #1
   50de8:	bx	lr
   50dec:	cmp	r1, #0
   50df0:	cmpne	r0, #0
   50df4:	push	{r4, r5, r6, r7, r8, lr}
   50df8:	mov	r7, r0
   50dfc:	mov	r4, r1
   50e00:	beq	50f64 <warn@@Base+0x5578>
   50e04:	ldr	r5, [r1, #28]
   50e08:	cmp	r5, #0
   50e0c:	beq	50f64 <warn@@Base+0x5578>
   50e10:	ldr	r3, [r1, #32]
   50e14:	cmp	r3, #0
   50e18:	beq	50f64 <warn@@Base+0x5578>
   50e1c:	ldr	r2, [r1, #36]	; 0x24
   50e20:	cmp	r2, #0
   50e24:	beq	50f64 <warn@@Base+0x5578>
   50e28:	ldr	r0, [r1, #40]	; 0x28
   50e2c:	movw	r2, #7116	; 0x1bcc
   50e30:	mov	r1, #1
   50e34:	blx	r3
   50e38:	subs	r6, r0, #0
   50e3c:	beq	50f6c <warn@@Base+0x5580>
   50e40:	ldr	r8, [r5, #52]	; 0x34
   50e44:	cmp	r8, #0
   50e48:	beq	50e70 <warn@@Base+0x5484>
   50e4c:	ldr	r1, [r5, #36]	; 0x24
   50e50:	mov	r3, #1
   50e54:	mov	r2, r3
   50e58:	ldr	ip, [r4, #32]
   50e5c:	lsl	r1, r3, r1
   50e60:	ldr	r0, [r4, #40]	; 0x28
   50e64:	blx	ip
   50e68:	subs	r8, r0, #0
   50e6c:	beq	50f74 <warn@@Base+0x5588>
   50e70:	add	r2, r4, #48	; 0x30
   50e74:	mov	r3, r4
   50e78:	mov	ip, r7
   50e7c:	ldr	r4, [r3]
   50e80:	add	r3, r3, #16
   50e84:	ldr	lr, [r3, #-12]
   50e88:	add	ip, ip, #16
   50e8c:	ldr	r0, [r3, #-8]
   50e90:	ldr	r1, [r3, #-4]
   50e94:	cmp	r3, r2
   50e98:	str	r4, [ip, #-16]
   50e9c:	str	lr, [ip, #-12]
   50ea0:	str	r0, [ip, #-8]
   50ea4:	str	r1, [ip, #-4]
   50ea8:	bne	50e7c <warn@@Base+0x5490>
   50eac:	ldr	lr, [r3]
   50eb0:	mov	r1, r5
   50eb4:	ldr	r3, [r3, #4]
   50eb8:	mov	r0, r6
   50ebc:	movw	r2, #7116	; 0x1bcc
   50ec0:	str	lr, [ip]
   50ec4:	str	r3, [ip, #4]
   50ec8:	bl	11134 <memcpy@plt>
   50ecc:	ldr	r1, [r5, #76]	; 0x4c
   50ed0:	add	r3, r5, #1328	; 0x530
   50ed4:	cmp	r1, r3
   50ed8:	bcs	50f24 <warn@@Base+0x5538>
   50edc:	ldr	r2, [r5, #108]	; 0x6c
   50ee0:	cmp	r8, #0
   50ee4:	rsb	r3, r3, r2
   50ee8:	bic	r3, r3, #3
   50eec:	add	r3, r3, #1328	; 0x530
   50ef0:	add	r3, r6, r3
   50ef4:	str	r3, [r6, #108]	; 0x6c
   50ef8:	beq	50f14 <warn@@Base+0x5528>
   50efc:	ldr	r3, [r5, #36]	; 0x24
   50f00:	mov	r2, #1
   50f04:	ldr	r1, [r5, #52]	; 0x34
   50f08:	mov	r0, r8
   50f0c:	lsl	r2, r2, r3
   50f10:	bl	11134 <memcpy@plt>
   50f14:	str	r8, [r6, #52]	; 0x34
   50f18:	mov	r0, #0
   50f1c:	str	r6, [r7, #28]
   50f20:	pop	{r4, r5, r6, r7, r8, pc}
   50f24:	add	r2, r5, #7040	; 0x1b80
   50f28:	add	r2, r2, #60	; 0x3c
   50f2c:	cmp	r1, r2
   50f30:	bhi	50edc <warn@@Base+0x54f0>
   50f34:	ldr	r2, [r5, #80]	; 0x50
   50f38:	rsb	r1, r3, r1
   50f3c:	bic	r1, r1, #3
   50f40:	rsb	r2, r3, r2
   50f44:	add	r1, r1, #1328	; 0x530
   50f48:	bic	r2, r2, #3
   50f4c:	add	r1, r6, r1
   50f50:	add	r2, r2, #1328	; 0x530
   50f54:	str	r1, [r6, #76]	; 0x4c
   50f58:	add	r2, r6, r2
   50f5c:	str	r2, [r6, #80]	; 0x50
   50f60:	b	50edc <warn@@Base+0x54f0>
   50f64:	mvn	r0, #1
   50f68:	pop	{r4, r5, r6, r7, r8, pc}
   50f6c:	mvn	r0, #3
   50f70:	pop	{r4, r5, r6, r7, r8, pc}
   50f74:	ldr	r0, [r4, #40]	; 0x28
   50f78:	mov	r1, r6
   50f7c:	ldr	r3, [r4, #36]	; 0x24
   50f80:	blx	r3
   50f84:	mvn	r0, #3
   50f88:	pop	{r4, r5, r6, r7, r8, pc}
   50f8c:	cmp	r0, #0
   50f90:	beq	50fb4 <warn@@Base+0x55c8>
   50f94:	ldr	r3, [r0, #28]
   50f98:	cmp	r3, #0
   50f9c:	beq	50fb4 <warn@@Base+0x55c8>
   50fa0:	mov	r2, #7104	; 0x1bc0
   50fa4:	mov	r1, #1
   50fa8:	mvn	r0, #2
   50fac:	str	r1, [r3, r2]
   50fb0:	bx	lr
   50fb4:	mvn	r0, #1
   50fb8:	bx	lr
   50fbc:	cmp	r0, #0
   50fc0:	beq	5100c <warn@@Base+0x5620>
   50fc4:	ldr	r3, [r0, #28]
   50fc8:	cmp	r3, #0
   50fcc:	beq	5100c <warn@@Base+0x5620>
   50fd0:	movw	r1, #7108	; 0x1bc4
   50fd4:	ldr	r2, [r3]
   50fd8:	ldr	r1, [r3, r1]
   50fdc:	cmp	r2, #15
   50fe0:	lsl	r1, r1, #16
   50fe4:	ldreq	r0, [r3, #64]	; 0x40
   50fe8:	beq	51004 <warn@@Base+0x5618>
   50fec:	cmp	r2, #24
   50ff0:	movweq	r0, #7112	; 0x1bc8
   50ff4:	ldreq	r2, [r3, #64]	; 0x40
   50ff8:	ldreq	r0, [r3, r0]
   50ffc:	movne	r0, #0
   51000:	rsbeq	r0, r2, r0
   51004:	add	r0, r0, r1
   51008:	bx	lr
   5100c:	mov	r0, #0
   51010:	movt	r0, #65535	; 0xffff
   51014:	bx	lr
   51018:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5101c:	sub	sp, sp, #148	; 0x94
   51020:	ldr	r7, [pc, #1460]	; 515dc <warn@@Base+0x5bf0>
   51024:	add	ip, sp, #74	; 0x4a
   51028:	ldr	r4, [sp, #184]	; 0xb8
   5102c:	add	r5, sp, #106	; 0x6a
   51030:	ldr	r6, [pc, #1448]	; 515e0 <warn@@Base+0x5bf4>
   51034:	add	r7, pc, r7
   51038:	str	r1, [sp, #28]
   5103c:	str	r4, [sp, #44]	; 0x2c
   51040:	mov	r1, r7
   51044:	ldr	r6, [r7, r6]
   51048:	ldr	r4, [sp, #188]	; 0xbc
   5104c:	str	r3, [sp, #20]
   51050:	mov	r3, #0
   51054:	ldr	r1, [r6]
   51058:	str	r6, [sp, #40]	; 0x28
   5105c:	str	r1, [sp, #140]	; 0x8c
   51060:	strh	r3, [ip, #2]!
   51064:	cmp	ip, r5
   51068:	bne	51060 <warn@@Base+0x5674>
   5106c:	cmp	r2, #0
   51070:	beq	510a0 <warn@@Base+0x56b4>
   51074:	ldr	r7, [sp, #28]
   51078:	add	r6, r7, r2, lsl #1
   5107c:	mov	r3, r7
   51080:	ldrh	r1, [r3], #2
   51084:	add	ip, sp, #144	; 0x90
   51088:	cmp	r3, r6
   5108c:	add	r1, ip, r1, lsl #1
   51090:	ldrh	ip, [r1, #-68]	; 0xffffffbc
   51094:	add	ip, ip, #1
   51098:	strh	ip, [r1, #-68]	; 0xffffffbc
   5109c:	bne	51080 <warn@@Base+0x5694>
   510a0:	ldr	r6, [sp, #44]	; 0x2c
   510a4:	add	r3, sp, #108	; 0x6c
   510a8:	mov	ip, #15
   510ac:	ldr	sl, [r6]
   510b0:	ldrh	r1, [r3, #-2]!
   510b4:	cmp	r1, #0
   510b8:	bne	51134 <warn@@Base+0x5748>
   510bc:	subs	ip, ip, #1
   510c0:	bne	510b0 <warn@@Base+0x56c4>
   510c4:	ldr	r1, [sp, #20]
   510c8:	mov	r2, #1
   510cc:	ldr	r4, [sp, #20]
   510d0:	mov	ip, #64	; 0x40
   510d4:	ldr	r5, [sp, #20]
   510d8:	ldr	r3, [r1]
   510dc:	mov	r1, #0
   510e0:	ldr	r6, [sp, #44]	; 0x2c
   510e4:	add	r0, r3, #4
   510e8:	str	r0, [r4]
   510ec:	strb	ip, [r3]
   510f0:	mov	r0, r1
   510f4:	strb	r2, [r3, #1]
   510f8:	strh	r1, [r3, #2]
   510fc:	ldr	r3, [r4]
   51100:	add	r4, r3, #4
   51104:	str	r4, [r5]
   51108:	strb	ip, [r3]
   5110c:	strb	r2, [r3, #1]
   51110:	strh	r1, [r3, #2]
   51114:	str	r2, [r6]
   51118:	ldr	r5, [sp, #40]	; 0x28
   5111c:	ldr	r2, [sp, #140]	; 0x8c
   51120:	ldr	r3, [r5]
   51124:	cmp	r2, r3
   51128:	bne	515d8 <warn@@Base+0x5bec>
   5112c:	add	sp, sp, #148	; 0x94
   51130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   51134:	cmp	ip, sl
   51138:	movcc	sl, ip
   5113c:	cmp	ip, #0
   51140:	beq	510c4 <warn@@Base+0x56d8>
   51144:	cmp	ip, #1
   51148:	bls	515c8 <warn@@Base+0x5bdc>
   5114c:	ldrh	r7, [sp, #78]	; 0x4e
   51150:	add	r8, sp, #78	; 0x4e
   51154:	mov	r9, #1
   51158:	cmp	r7, #0
   5115c:	bne	51180 <warn@@Base+0x5794>
   51160:	mov	r3, r8
   51164:	b	51174 <warn@@Base+0x5788>
   51168:	ldrh	r1, [r3, #2]!
   5116c:	cmp	r1, #0
   51170:	bne	51180 <warn@@Base+0x5794>
   51174:	add	r9, r9, #1
   51178:	cmp	r9, ip
   5117c:	bne	51168 <warn@@Base+0x577c>
   51180:	mov	r6, r8
   51184:	mov	r1, r7
   51188:	mov	r3, #1
   5118c:	b	51194 <warn@@Base+0x57a8>
   51190:	ldrh	r1, [r6, #2]!
   51194:	rsbs	r3, r1, r3, lsl #1
   51198:	bmi	51528 <warn@@Base+0x5b3c>
   5119c:	cmp	r5, r6
   511a0:	bne	51190 <warn@@Base+0x57a4>
   511a4:	cmp	r3, #0
   511a8:	beq	511c4 <warn@@Base+0x57d8>
   511ac:	rsbs	r3, r0, #1
   511b0:	movcc	r3, #0
   511b4:	cmp	ip, #1
   511b8:	orrne	r3, r3, #1
   511bc:	cmp	r3, #0
   511c0:	bne	51528 <warn@@Base+0x5b3c>
   511c4:	add	r5, sp, #144	; 0x90
   511c8:	mov	r6, #0
   511cc:	mov	r1, r6
   511d0:	mov	r3, #1
   511d4:	strh	r6, [r5, #-34]!	; 0xffffffde
   511d8:	b	511e0 <warn@@Base+0x57f4>
   511dc:	ldrh	r7, [r8, #2]!
   511e0:	add	r3, r3, #1
   511e4:	add	r1, r7, r1
   511e8:	cmp	r3, #15
   511ec:	uxth	r1, r1
   511f0:	strh	r1, [r5, #2]!
   511f4:	bne	511dc <warn@@Base+0x57f0>
   511f8:	cmp	r2, #0
   511fc:	beq	51240 <warn@@Base+0x5854>
   51200:	ldr	r5, [sp, #28]
   51204:	mov	r3, #0
   51208:	sub	r1, r5, #2
   5120c:	ldrh	r5, [r1, #2]!
   51210:	cmp	r5, #0
   51214:	beq	51234 <warn@@Base+0x5848>
   51218:	add	r6, sp, #144	; 0x90
   5121c:	add	r5, r6, r5, lsl #1
   51220:	ldrh	r6, [r5, #-36]	; 0xffffffdc
   51224:	add	r7, r6, #1
   51228:	strh	r7, [r5, #-36]	; 0xffffffdc
   5122c:	lsl	r6, r6, #1
   51230:	strh	r3, [r4, r6]
   51234:	add	r3, r3, #1
   51238:	cmp	r3, r2
   5123c:	bne	5120c <warn@@Base+0x5820>
   51240:	cmp	r0, #0
   51244:	beq	5156c <warn@@Base+0x5b80>
   51248:	cmp	r0, #1
   5124c:	beq	51530 <warn@@Base+0x5b44>
   51250:	ldr	r3, [pc, #908]	; 515e4 <warn@@Base+0x5bf8>
   51254:	mvn	r7, #0
   51258:	str	r7, [sp, #32]
   5125c:	add	r3, pc, r3
   51260:	add	r1, r3, #128	; 0x80
   51264:	add	r3, r3, #192	; 0xc0
   51268:	str	r1, [sp, #68]	; 0x44
   5126c:	str	r3, [sp, #64]	; 0x40
   51270:	cmp	r9, sl
   51274:	movcs	sl, r9
   51278:	mov	r3, #1
   5127c:	subs	r6, r0, r3
   51280:	lsl	r2, r3, sl
   51284:	rsbs	r5, r6, #0
   51288:	str	sl, [sp, #16]
   5128c:	adcs	r5, r5, r6
   51290:	ldr	r6, [sp, #20]
   51294:	str	r5, [sp, #48]	; 0x30
   51298:	mov	r1, r5
   5129c:	cmp	r2, #852	; 0x354
   512a0:	movls	r1, #0
   512a4:	andhi	r1, r1, #1
   512a8:	ldr	r6, [r6]
   512ac:	cmp	r1, #0
   512b0:	str	r6, [sp, #12]
   512b4:	bne	51564 <warn@@Base+0x5b78>
   512b8:	subs	r1, r0, #2
   512bc:	rsbs	r0, r1, #0
   512c0:	adcs	r0, r0, r1
   512c4:	str	r0, [sp, #56]	; 0x38
   512c8:	cmp	r2, #592	; 0x250
   512cc:	movls	r0, #0
   512d0:	andhi	r0, r0, #1
   512d4:	cmp	r0, #0
   512d8:	bne	51564 <warn@@Base+0x5b78>
   512dc:	ldr	r5, [sp, #16]
   512e0:	add	r1, sp, #76	; 0x4c
   512e4:	mov	fp, r3
   512e8:	str	r1, [sp, #60]	; 0x3c
   512ec:	mov	sl, r0
   512f0:	mov	r1, r9
   512f4:	mov	r8, ip
   512f8:	sub	r7, r2, #1
   512fc:	str	r2, [sp, #24]
   51300:	sub	r4, r4, #2
   51304:	mvn	r2, #0
   51308:	str	r4, [sp, #8]
   5130c:	str	r7, [sp, #52]	; 0x34
   51310:	str	r2, [sp, #36]	; 0x24
   51314:	ldr	r3, [sp, #8]
   51318:	uxtb	r6, r1
   5131c:	ldr	r4, [sp, #32]
   51320:	ldrh	ip, [r3, #2]!
   51324:	cmp	r4, ip
   51328:	str	r3, [sp, #8]
   5132c:	movgt	r3, #0
   51330:	strgt	r3, [sp]
   51334:	bgt	5135c <warn@@Base+0x5970>
   51338:	ldrlt	r7, [sp, #68]	; 0x44
   5133c:	lsllt	ip, ip, #1
   51340:	ldrlt	r2, [sp, #64]	; 0x40
   51344:	movge	ip, #0
   51348:	movge	r4, #96	; 0x60
   5134c:	strge	r4, [sp]
   51350:	ldrblt	r7, [r7, ip]
   51354:	ldrhlt	ip, [r2, ip]
   51358:	strlt	r7, [sp]
   5135c:	lsl	r7, fp, r5
   51360:	lsl	r1, fp, r1
   51364:	add	r3, r7, r0, lsr sl
   51368:	str	r7, [sp, #4]
   5136c:	rsb	r3, r1, r3
   51370:	mov	r2, r7
   51374:	ldr	r7, [sp, #12]
   51378:	rsb	r4, r1, r1, lsl #30
   5137c:	add	r3, r7, r3, lsl #2
   51380:	ldr	r7, [sp]
   51384:	lsl	r4, r4, #2
   51388:	subs	r2, r2, r1
   5138c:	strb	r7, [r3]
   51390:	strb	r6, [r3, #1]
   51394:	strh	ip, [r3, #2]
   51398:	add	r3, r3, r4
   5139c:	bne	51388 <warn@@Base+0x599c>
   513a0:	sub	r3, r9, #1
   513a4:	lsl	r3, fp, r3
   513a8:	tst	r3, r0
   513ac:	beq	513bc <warn@@Base+0x59d0>
   513b0:	lsr	r3, r3, #1
   513b4:	tst	r0, r3
   513b8:	bne	513b0 <warn@@Base+0x59c4>
   513bc:	cmp	r3, #0
   513c0:	add	ip, sp, #144	; 0x90
   513c4:	subne	r2, r3, #1
   513c8:	andne	r0, r2, r0
   513cc:	add	r2, ip, r9, lsl #1
   513d0:	addne	r0, r0, r3
   513d4:	moveq	r0, r3
   513d8:	ldrh	r3, [r2, #-68]	; 0xffffffbc
   513dc:	sub	r3, r3, #1
   513e0:	uxth	r3, r3
   513e4:	strh	r3, [r2, #-68]	; 0xffffffbc
   513e8:	cmp	r3, #0
   513ec:	bne	5140c <warn@@Base+0x5a20>
   513f0:	cmp	r9, r8
   513f4:	beq	51580 <warn@@Base+0x5b94>
   513f8:	ldr	r1, [sp, #8]
   513fc:	ldr	r4, [sp, #28]
   51400:	ldrh	r3, [r1, #2]
   51404:	lsl	r3, r3, #1
   51408:	ldrh	r9, [r4, r3]
   5140c:	ldr	r6, [sp, #16]
   51410:	cmp	r6, r9
   51414:	bcs	5155c <warn@@Base+0x5b70>
   51418:	ldr	r7, [sp, #52]	; 0x34
   5141c:	ldr	r1, [sp, #36]	; 0x24
   51420:	and	ip, r0, r7
   51424:	cmp	ip, r1
   51428:	beq	5155c <warn@@Base+0x5b70>
   5142c:	ldr	r2, [sp, #16]
   51430:	cmp	sl, #0
   51434:	ldr	r4, [sp, #4]
   51438:	ldr	r3, [sp, #12]
   5143c:	moveq	sl, r2
   51440:	cmp	r9, r8
   51444:	rsb	r5, sl, r9
   51448:	add	r3, r3, r4, lsl #2
   5144c:	str	r3, [sp, #12]
   51450:	lsl	r3, fp, r5
   51454:	mov	r1, r5
   51458:	bcs	514a8 <warn@@Base+0x5abc>
   5145c:	lsl	r4, r9, #1
   51460:	add	r6, sp, #144	; 0x90
   51464:	add	r2, r6, r4
   51468:	ldrh	r2, [r2, #-68]	; 0xffffffbc
   5146c:	rsb	r3, r2, r3
   51470:	cmp	r3, #0
   51474:	ble	514a8 <warn@@Base+0x5abc>
   51478:	add	r7, sp, #76	; 0x4c
   5147c:	add	r4, r7, r4
   51480:	b	51494 <warn@@Base+0x5aa8>
   51484:	ldrh	r2, [r4, #2]!
   51488:	rsb	r3, r2, r3
   5148c:	cmp	r3, #0
   51490:	ble	514a8 <warn@@Base+0x5abc>
   51494:	add	r5, r5, #1
   51498:	lsl	r3, r3, #1
   5149c:	add	r2, sl, r5
   514a0:	cmp	r2, r8
   514a4:	bcc	51484 <warn@@Base+0x5a98>
   514a8:	ldr	r2, [sp, #24]
   514ac:	ldr	r3, [sp, #48]	; 0x30
   514b0:	add	r2, r2, fp, lsl r5
   514b4:	str	r2, [sp, #24]
   514b8:	cmp	r2, #852	; 0x354
   514bc:	movls	r3, #0
   514c0:	andhi	r3, r3, #1
   514c4:	cmp	r3, #0
   514c8:	bne	51564 <warn@@Base+0x5b78>
   514cc:	ldr	r3, [sp, #56]	; 0x38
   514d0:	cmp	r2, #592	; 0x250
   514d4:	movls	r3, #0
   514d8:	andhi	r3, r3, #1
   514dc:	cmp	r3, #0
   514e0:	bne	51564 <warn@@Base+0x5b78>
   514e4:	ldr	r3, [sp, #20]
   514e8:	ldr	r4, [sp, #20]
   514ec:	ldr	r6, [sp, #16]
   514f0:	ldr	r2, [r3]
   514f4:	lsl	r3, ip, #2
   514f8:	ldr	r7, [sp, #12]
   514fc:	str	ip, [sp, #36]	; 0x24
   51500:	strb	r5, [r2, ip, lsl #2]
   51504:	ldr	r2, [r4]
   51508:	add	r2, r2, r3
   5150c:	strb	r6, [r2, #1]
   51510:	ldr	r2, [r4]
   51514:	add	r3, r2, r3
   51518:	rsb	r2, r2, r7
   5151c:	asr	r2, r2, #2
   51520:	strh	r2, [r3, #2]
   51524:	b	51314 <warn@@Base+0x5928>
   51528:	mvn	r0, #0
   5152c:	b	51118 <warn@@Base+0x572c>
   51530:	ldr	r3, [pc, #176]	; 515e8 <warn@@Base+0x5bfc>
   51534:	mov	r7, #256	; 0x100
   51538:	str	r7, [sp, #32]
   5153c:	add	r3, pc, r3
   51540:	sub	r2, r3, #512	; 0x200
   51544:	sub	r3, r3, #448	; 0x1c0
   51548:	sub	r2, r2, #2
   5154c:	sub	r3, r3, #2
   51550:	str	r2, [sp, #68]	; 0x44
   51554:	str	r3, [sp, #64]	; 0x40
   51558:	b	51270 <warn@@Base+0x5884>
   5155c:	rsb	r1, sl, r9
   51560:	b	51314 <warn@@Base+0x5928>
   51564:	mov	r0, #1
   51568:	b	51118 <warn@@Base+0x572c>
   5156c:	mov	r2, #19
   51570:	str	r4, [sp, #68]	; 0x44
   51574:	str	r4, [sp, #64]	; 0x40
   51578:	str	r2, [sp, #32]
   5157c:	b	51270 <warn@@Base+0x5884>
   51580:	cmp	r0, #0
   51584:	beq	515a0 <warn@@Base+0x5bb4>
   51588:	ldr	ip, [sp, #12]
   5158c:	mov	r1, #64	; 0x40
   51590:	add	r2, ip, r0, lsl #2
   51594:	strb	r1, [ip, r0, lsl #2]
   51598:	strb	r6, [r2, #1]
   5159c:	strh	r3, [r2, #2]
   515a0:	ldr	r1, [sp, #20]
   515a4:	mov	r0, #0
   515a8:	ldr	r2, [sp, #24]
   515ac:	ldr	r4, [sp, #44]	; 0x2c
   515b0:	ldr	r3, [r1]
   515b4:	add	r3, r3, r2, lsl #2
   515b8:	str	r3, [r1]
   515bc:	ldr	r3, [sp, #16]
   515c0:	str	r3, [r4]
   515c4:	b	51118 <warn@@Base+0x572c>
   515c8:	add	r8, sp, #144	; 0x90
   515cc:	mov	r9, #1
   515d0:	ldrh	r7, [r8, #-66]!	; 0xffffffbe
   515d4:	b	51180 <warn@@Base+0x5794>
   515d8:	bl	1117c <__stack_chk_fail@plt>
   515dc:	andeq	r1, r4, r4, asr #31
   515e0:	andeq	r0, r0, r0, lsr #2
   515e4:	andeq	lr, r2, ip, lsr #25
   515e8:	andeq	lr, r2, ip, asr #19
   515ec:	ldr	r0, [pc, #4]	; 515f8 <warn@@Base+0x5c0c>
   515f0:	add	r0, pc, r0
   515f4:	bx	lr
   515f8:	andeq	lr, r0, r4, asr #11
   515fc:	mov	r0, #85	; 0x55
   51600:	bx	lr
   51604:	ldr	r3, [pc, #20]	; 51620 <warn@@Base+0x5c34>
   51608:	rsb	r0, r0, #2
   5160c:	ldr	r2, [pc, #16]	; 51624 <warn@@Base+0x5c38>
   51610:	add	r3, pc, r3
   51614:	ldr	r3, [r3, r2]
   51618:	ldr	r0, [r3, r0, lsl #2]
   5161c:	bx	lr
   51620:	andeq	r1, r4, r8, ror #19
   51624:	andeq	r0, r0, ip, lsr r1

00051628 <zcalloc@@Base>:
   51628:	mul	r0, r2, r1
   5162c:	b	11224 <malloc@plt>

00051630 <zcfree@@Base>:
   51630:	mov	r0, r1
   51634:	b	1111c <free@plt>
   51638:	push	{r4, r5, r6}
   5163c:	movw	r4, #32881	; 0x8071
   51640:	movt	r4, #32775	; 0x8007
   51644:	asr	r6, r2, #31
   51648:	uxth	r5, r0
   5164c:	smull	r3, ip, r4, r2
   51650:	lsr	r3, r1, #16
   51654:	add	r0, r3, r0, lsr #16
   51658:	uxtah	r1, r5, r1
   5165c:	add	ip, ip, r2
   51660:	cmp	r1, #0
   51664:	rsb	ip, r6, ip, asr #15
   51668:	rsb	r3, ip, ip, lsl #12
   5166c:	add	ip, ip, r3, lsl #4
   51670:	rsb	ip, ip, r2
   51674:	rsb	r0, ip, r0
   51678:	mul	ip, r5, ip
   5167c:	umull	r3, r4, r4, ip
   51680:	lsr	r4, r4, #15
   51684:	rsb	r5, r4, r4, lsl #12
   51688:	add	r4, r4, r5, lsl #4
   5168c:	rsb	ip, r4, ip
   51690:	add	ip, r0, ip
   51694:	movweq	r0, #65520	; 0xfff0
   51698:	add	r3, ip, #65280	; 0xff00
   5169c:	add	r3, r3, #241	; 0xf1
   516a0:	beq	516b8 <zcfree@@Base+0x88>
   516a4:	sub	r0, r1, #1
   516a8:	movw	r2, #65520	; 0xfff0
   516ac:	cmp	r0, r2
   516b0:	subhi	r0, r1, #65280	; 0xff00
   516b4:	subhi	r0, r0, #242	; 0xf2
   516b8:	movw	r2, #65505	; 0xffe1
   516bc:	movt	r2, #1
   516c0:	cmp	r3, r2
   516c4:	movw	r2, #65520	; 0xfff0
   516c8:	subhi	ip, ip, #65280	; 0xff00
   516cc:	subhi	r3, ip, #241	; 0xf1
   516d0:	cmp	r3, r2
   516d4:	subhi	r3, r3, #65280	; 0xff00
   516d8:	subhi	r3, r3, #241	; 0xf1
   516dc:	pop	{r4, r5, r6}
   516e0:	orr	r0, r0, r3, lsl #16
   516e4:	bx	lr
   516e8:	cmp	r2, #1
   516ec:	mov	r3, r1
   516f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   516f4:	lsr	r4, r0, #16
   516f8:	uxth	r0, r0
   516fc:	beq	518a0 <zcfree@@Base+0x270>
   51700:	cmp	r1, #0
   51704:	beq	51a28 <zcfree@@Base+0x3f8>
   51708:	cmp	r2, #15
   5170c:	bhi	51768 <zcfree@@Base+0x138>
   51710:	cmp	r2, #0
   51714:	beq	51730 <zcfree@@Base+0x100>
   51718:	add	r2, r1, r2
   5171c:	ldrb	r1, [r3], #1
   51720:	cmp	r3, r2
   51724:	add	r0, r0, r1
   51728:	add	r4, r4, r0
   5172c:	bne	5171c <zcfree@@Base+0xec>
   51730:	movw	r3, #65520	; 0xfff0
   51734:	cmp	r0, r3
   51738:	movw	r3, #32881	; 0x8071
   5173c:	movt	r3, #32775	; 0x8007
   51740:	subhi	r0, r0, #65280	; 0xff00
   51744:	umull	r1, r3, r3, r4
   51748:	subhi	r0, r0, #241	; 0xf1
   5174c:	lsr	r3, r3, #15
   51750:	rsb	r2, r3, r3, lsl #12
   51754:	add	r3, r3, r2, lsl #4
   51758:	rsb	r4, r3, r4
   5175c:	orr	r0, r0, r4, lsl #16
   51760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   51764:	bx	lr
   51768:	movw	r8, #5551	; 0x15af
   5176c:	cmp	r2, r8
   51770:	movwhi	r7, #32881	; 0x8071
   51774:	movthi	r7, #32775	; 0x8007
   51778:	bls	518dc <zcfree@@Base+0x2ac>
   5177c:	sub	r2, r2, #5504	; 0x1580
   51780:	add	r6, r3, #5504	; 0x1580
   51784:	sub	r2, r2, #48	; 0x30
   51788:	add	r5, r6, #48	; 0x30
   5178c:	ldrb	r1, [r3]
   51790:	add	r3, r3, #16
   51794:	ldrb	r9, [r3, #-15]
   51798:	add	r0, r0, r1
   5179c:	ldrb	ip, [r3, #-14]
   517a0:	add	r9, r0, r9
   517a4:	ldrb	fp, [r3, #-13]
   517a8:	add	r0, r9, r0
   517ac:	add	ip, r9, ip
   517b0:	ldrb	r1, [r3, #-12]
   517b4:	add	sl, r0, ip
   517b8:	ldrb	r9, [r3, #-11]
   517bc:	add	ip, ip, fp
   517c0:	add	r1, ip, r1
   517c4:	ldrb	r0, [r3, #-10]
   517c8:	add	sl, sl, ip
   517cc:	ldrb	ip, [r3, #-9]
   517d0:	add	sl, sl, r1
   517d4:	add	r1, r1, r9
   517d8:	add	r0, r1, r0
   517dc:	ldrb	r9, [r3, #-8]
   517e0:	add	sl, sl, r1
   517e4:	ldrb	r1, [r3, #-7]
   517e8:	add	sl, sl, r0
   517ec:	add	r0, r0, ip
   517f0:	add	r9, r0, r9
   517f4:	ldrb	ip, [r3, #-6]
   517f8:	add	sl, sl, r0
   517fc:	ldrb	r0, [r3, #-5]
   51800:	add	sl, sl, r9
   51804:	add	r9, r9, r1
   51808:	add	sl, sl, r9
   5180c:	ldrb	r1, [r3, #-4]
   51810:	add	ip, r9, ip
   51814:	add	r9, sl, ip
   51818:	add	ip, ip, r0
   5181c:	ldrb	sl, [r3, #-3]
   51820:	add	r1, ip, r1
   51824:	ldrb	r0, [r3, #-2]
   51828:	add	r9, r9, ip
   5182c:	add	r9, r9, r1
   51830:	ldrb	ip, [r3, #-1]
   51834:	add	r1, r1, sl
   51838:	cmp	r3, r5
   5183c:	add	r0, r1, r0
   51840:	add	r9, r9, r1
   51844:	add	r1, r9, r0
   51848:	add	r0, r0, ip
   5184c:	add	r1, r1, r0
   51850:	add	r4, r4, r1
   51854:	bne	5178c <zcfree@@Base+0x15c>
   51858:	umull	r3, ip, r7, r0
   5185c:	cmp	r2, r8
   51860:	umull	r3, r1, r7, r4
   51864:	add	r3, r6, #48	; 0x30
   51868:	lsr	ip, ip, #15
   5186c:	rsb	r5, ip, ip, lsl #12
   51870:	lsr	r1, r1, #15
   51874:	add	ip, ip, r5, lsl #4
   51878:	rsb	r5, r1, r1, lsl #12
   5187c:	rsb	r0, ip, r0
   51880:	add	r1, r1, r5, lsl #4
   51884:	rsb	r4, r1, r4
   51888:	bhi	5177c <zcfree@@Base+0x14c>
   5188c:	cmp	r2, #0
   51890:	bne	518d4 <zcfree@@Base+0x2a4>
   51894:	orr	r0, r0, r4, lsl #16
   51898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   5189c:	bx	lr
   518a0:	ldrb	r2, [r1]
   518a4:	movw	r3, #65520	; 0xfff0
   518a8:	add	r0, r0, r2
   518ac:	cmp	r0, r3
   518b0:	movw	r3, #65520	; 0xfff0
   518b4:	subhi	r0, r0, #65280	; 0xff00
   518b8:	subhi	r0, r0, #241	; 0xf1
   518bc:	add	r4, r0, r4
   518c0:	cmp	r4, r3
   518c4:	subhi	r4, r4, #65280	; 0xff00
   518c8:	subhi	r4, r4, #241	; 0xf1
   518cc:	orr	r0, r0, r4, lsl #16
   518d0:	b	51898 <zcfree@@Base+0x268>
   518d4:	cmp	r2, #15
   518d8:	bls	51a30 <zcfree@@Base+0x400>
   518dc:	mov	r1, r2
   518e0:	mov	ip, r3
   518e4:	ldrb	r6, [ip]
   518e8:	sub	r1, r1, #16
   518ec:	ldrb	r5, [ip, #1]
   518f0:	cmp	r1, #15
   518f4:	add	r6, r0, r6
   518f8:	ldrb	r0, [ip, #2]
   518fc:	add	r5, r6, r5
   51900:	ldrb	r8, [ip, #3]
   51904:	add	r6, r5, r6
   51908:	add	r0, r5, r0
   5190c:	ldrb	r5, [ip, #4]
   51910:	add	r7, r6, r0
   51914:	add	r0, r0, r8
   51918:	ldrb	r6, [ip, #5]
   5191c:	add	r5, r0, r5
   51920:	add	r7, r7, r0
   51924:	ldrb	r0, [ip, #6]
   51928:	add	r7, r7, r5
   5192c:	add	r5, r5, r6
   51930:	ldrb	r6, [ip, #7]
   51934:	add	r0, r5, r0
   51938:	add	r7, r7, r5
   5193c:	ldrb	r5, [ip, #8]
   51940:	add	r7, r7, r0
   51944:	add	r0, r0, r6
   51948:	ldrb	r6, [ip, #9]
   5194c:	add	r5, r0, r5
   51950:	add	r7, r7, r0
   51954:	ldrb	r0, [ip, #10]
   51958:	add	r7, r7, r5
   5195c:	add	r5, r5, r6
   51960:	ldrb	r6, [ip, #11]
   51964:	add	r0, r5, r0
   51968:	add	r7, r7, r5
   5196c:	ldrb	r5, [ip, #12]
   51970:	add	r7, r7, r0
   51974:	add	r0, r0, r6
   51978:	ldrb	r6, [ip, #13]
   5197c:	add	r5, r0, r5
   51980:	add	r7, r7, r0
   51984:	ldrb	r0, [ip, #14]
   51988:	add	r7, r7, r5
   5198c:	add	r5, r5, r6
   51990:	ldrb	r6, [ip, #15]
   51994:	add	r0, r5, r0
   51998:	add	r7, r7, r5
   5199c:	add	r5, r7, r0
   519a0:	add	r0, r0, r6
   519a4:	add	r5, r5, r0
   519a8:	add	ip, ip, #16
   519ac:	add	r4, r4, r5
   519b0:	bhi	518e4 <zcfree@@Base+0x2b4>
   519b4:	sub	r1, r2, #16
   519b8:	tst	r2, #15
   519bc:	sub	r2, r2, #17
   519c0:	lsr	r1, r1, #4
   519c4:	add	ip, r1, #1
   519c8:	sub	r2, r2, r1, lsl #4
   519cc:	add	r3, r3, ip, lsl #4
   519d0:	beq	519f0 <zcfree@@Base+0x3c0>
   519d4:	add	r1, r3, r2
   519d8:	sub	r3, r3, #1
   519dc:	ldrb	r2, [r3, #1]!
   519e0:	cmp	r3, r1
   519e4:	add	r0, r0, r2
   519e8:	add	r4, r4, r0
   519ec:	bne	519dc <zcfree@@Base+0x3ac>
   519f0:	movw	r3, #32881	; 0x8071
   519f4:	movt	r3, #32775	; 0x8007
   519f8:	umull	r1, r2, r3, r0
   519fc:	umull	r1, r3, r3, r4
   51a00:	lsr	r2, r2, #15
   51a04:	rsb	r1, r2, r2, lsl #12
   51a08:	lsr	r3, r3, #15
   51a0c:	add	r2, r2, r1, lsl #4
   51a10:	rsb	r1, r3, r3, lsl #12
   51a14:	rsb	r0, r2, r0
   51a18:	add	r3, r3, r1, lsl #4
   51a1c:	rsb	r4, r3, r4
   51a20:	orr	r0, r0, r4, lsl #16
   51a24:	b	51898 <zcfree@@Base+0x268>
   51a28:	mov	r0, #1
   51a2c:	b	51760 <zcfree@@Base+0x130>
   51a30:	sub	r2, r2, #1
   51a34:	b	519d4 <zcfree@@Base+0x3a4>
   51a38:	cmp	r2, #0
   51a3c:	blt	51a44 <zcfree@@Base+0x414>
   51a40:	b	51638 <zcfree@@Base+0x8>
   51a44:	mvn	r0, #0
   51a48:	bx	lr
   51a4c:	cmp	r2, #0
   51a50:	blt	51a58 <zcfree@@Base+0x428>
   51a54:	b	51638 <zcfree@@Base+0x8>
   51a58:	mvn	r0, #0
   51a5c:	bx	lr
   51a60:	push	{r4, r5}
   51a64:	mov	r5, #0
   51a68:	ldr	r3, [r1, r5]
   51a6c:	cmp	r3, #0
   51a70:	beq	51aac <zcfree@@Base+0x47c>
   51a74:	add	r2, r1, #4
   51a78:	mov	ip, #0
   51a7c:	tst	r3, #1
   51a80:	add	r2, r2, #4
   51a84:	ldrne	r4, [r2, #-8]
   51a88:	eorne	ip, ip, r4
   51a8c:	lsrs	r3, r3, #1
   51a90:	bne	51a7c <zcfree@@Base+0x44c>
   51a94:	str	ip, [r0, r5]
   51a98:	add	r5, r5, #4
   51a9c:	cmp	r5, #128	; 0x80
   51aa0:	bne	51a68 <zcfree@@Base+0x438>
   51aa4:	pop	{r4, r5}
   51aa8:	bx	lr
   51aac:	mov	ip, r3
   51ab0:	str	ip, [r0, r5]
   51ab4:	add	r5, r5, #4
   51ab8:	cmp	r5, #128	; 0x80
   51abc:	bne	51a68 <zcfree@@Base+0x438>
   51ac0:	b	51aa4 <zcfree@@Base+0x474>
   51ac4:	ldr	r3, [pc, #292]	; 51bf0 <zcfree@@Base+0x5c0>
   51ac8:	push	{r4, r5, r6, r7, r8, r9, lr}
   51acc:	subs	r9, r2, #0
   51ad0:	ldr	r2, [pc, #284]	; 51bf4 <zcfree@@Base+0x5c4>
   51ad4:	add	r3, pc, r3
   51ad8:	sub	sp, sp, #268	; 0x10c
   51adc:	mov	r4, r0
   51ae0:	mov	r8, r1
   51ae4:	movle	r0, r0
   51ae8:	ldr	r7, [r3, r2]
   51aec:	ldr	r3, [r7]
   51af0:	str	r3, [sp, #260]	; 0x104
   51af4:	ble	51bd4 <zcfree@@Base+0x5a4>
   51af8:	add	r5, sp, #264	; 0x108
   51afc:	add	r2, sp, #256	; 0x100
   51b00:	movw	r3, #33568	; 0x8320
   51b04:	mov	r1, #1
   51b08:	movt	r3, #60856	; 0xedb8
   51b0c:	str	r3, [r5, #-132]!	; 0xffffff7c
   51b10:	mov	r3, r5
   51b14:	str	r1, [r3, #4]!
   51b18:	cmp	r3, r2
   51b1c:	lsl	r1, r1, #1
   51b20:	bne	51b14 <zcfree@@Base+0x4e4>
   51b24:	add	r6, sp, #4
   51b28:	mov	r1, r5
   51b2c:	mov	r0, r6
   51b30:	bl	51a60 <zcfree@@Base+0x430>
   51b34:	mov	r0, r5
   51b38:	mov	r1, r6
   51b3c:	bl	51a60 <zcfree@@Base+0x430>
   51b40:	mov	r0, r6
   51b44:	mov	r1, r5
   51b48:	bl	51a60 <zcfree@@Base+0x430>
   51b4c:	tst	r9, #1
   51b50:	beq	51b80 <zcfree@@Base+0x550>
   51b54:	cmp	r4, #0
   51b58:	beq	51b80 <zcfree@@Base+0x550>
   51b5c:	add	ip, sp, #8
   51b60:	mov	r3, r4
   51b64:	mov	r4, #0
   51b68:	tst	r3, #1
   51b6c:	add	ip, ip, #4
   51b70:	ldrne	r1, [ip, #-8]
   51b74:	eorne	r4, r4, r1
   51b78:	lsrs	r3, r3, #1
   51b7c:	bne	51b68 <zcfree@@Base+0x538>
   51b80:	asrs	r9, r9, #1
   51b84:	beq	51bd0 <zcfree@@Base+0x5a0>
   51b88:	mov	r0, r5
   51b8c:	mov	r1, r6
   51b90:	bl	51a60 <zcfree@@Base+0x430>
   51b94:	tst	r9, #1
   51b98:	beq	51bc8 <zcfree@@Base+0x598>
   51b9c:	cmp	r4, #0
   51ba0:	beq	51bc8 <zcfree@@Base+0x598>
   51ba4:	add	r2, sp, #136	; 0x88
   51ba8:	mov	r3, r4
   51bac:	mov	r4, #0
   51bb0:	tst	r3, #1
   51bb4:	add	r2, r2, #4
   51bb8:	ldrne	r1, [r2, #-8]
   51bbc:	eorne	r4, r4, r1
   51bc0:	lsrs	r3, r3, #1
   51bc4:	bne	51bb0 <zcfree@@Base+0x580>
   51bc8:	asrs	r9, r9, #1
   51bcc:	bne	51b40 <zcfree@@Base+0x510>
   51bd0:	eor	r0, r4, r8
   51bd4:	ldr	r2, [sp, #260]	; 0x104
   51bd8:	ldr	r3, [r7]
   51bdc:	cmp	r2, r3
   51be0:	bne	51bec <zcfree@@Base+0x5bc>
   51be4:	add	sp, sp, #268	; 0x10c
   51be8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   51bec:	bl	1117c <__stack_chk_fail@plt>
   51bf0:	andeq	r1, r4, r4, lsr #10
   51bf4:	andeq	r0, r0, r0, lsr #2
   51bf8:	ldr	r0, [pc, #4]	; 51c04 <zcfree@@Base+0x5d4>
   51bfc:	add	r0, pc, r0
   51c00:	bx	lr
   51c04:			; <UNDEFINED> instruction: 0x0002e4bc
   51c08:	cmp	r1, #0
   51c0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   51c10:	sub	sp, sp, #8
   51c14:	beq	51f64 <zcfree@@Base+0x934>
   51c18:	cmp	r2, #0
   51c1c:	mvn	r0, r0
   51c20:	beq	51c5c <zcfree@@Base+0x62c>
   51c24:	tst	r1, #3
   51c28:	beq	51c6c <zcfree@@Base+0x63c>
   51c2c:	ldr	ip, [pc, #832]	; 51f74 <zcfree@@Base+0x944>
   51c30:	add	ip, pc, ip
   51c34:	b	51c40 <zcfree@@Base+0x610>
   51c38:	tst	r1, #3
   51c3c:	beq	51c6c <zcfree@@Base+0x63c>
   51c40:	ldrb	r3, [r1], #1
   51c44:	subs	r2, r2, #1
   51c48:	eor	r3, r0, r3
   51c4c:	uxtb	r3, r3
   51c50:	ldr	r3, [ip, r3, lsl #2]
   51c54:	eor	r0, r3, r0, lsr #8
   51c58:	bne	51c38 <zcfree@@Base+0x608>
   51c5c:	mvn	r0, r0
   51c60:	add	sp, sp, #8
   51c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   51c68:	bx	lr
   51c6c:	cmp	r2, #31
   51c70:	bls	51eb8 <zcfree@@Base+0x888>
   51c74:	sub	r5, r2, #32
   51c78:	add	r4, r1, #32
   51c7c:	ldr	r3, [pc, #756]	; 51f78 <zcfree@@Base+0x948>
   51c80:	mov	ip, r1
   51c84:	lsr	r5, r5, #5
   51c88:	str	r1, [sp, #4]
   51c8c:	add	r3, pc, r3
   51c90:	str	r5, [sp]
   51c94:	add	r4, r4, r5, lsl #5
   51c98:	mov	fp, r4
   51c9c:	ldm	ip, {r4, r5}
   51ca0:	add	ip, ip, #32
   51ca4:	ldr	r8, [ip, #-24]	; 0xffffffe8
   51ca8:	eor	r4, r0, r4
   51cac:	ubfx	r7, r4, #8, #8
   51cb0:	ubfx	r1, r4, #16, #8
   51cb4:	uxtb	r6, r4
   51cb8:	lsr	r4, r4, #24
   51cbc:	add	r6, r6, #768	; 0x300
   51cc0:	add	r7, r7, #512	; 0x200
   51cc4:	ldr	r0, [r3, r4, lsl #2]
   51cc8:	add	r1, r1, #256	; 0x100
   51ccc:	ldr	r6, [r3, r6, lsl #2]
   51cd0:	ldr	r4, [r3, r7, lsl #2]
   51cd4:	eor	r0, r6, r0
   51cd8:	ldr	r1, [r3, r1, lsl #2]
   51cdc:	eor	r0, r0, r5
   51ce0:	ldr	r7, [ip, #-20]	; 0xffffffec
   51ce4:	eor	r0, r0, r4
   51ce8:	ldr	r6, [ip, #-16]
   51cec:	eor	r0, r0, r1
   51cf0:	ldr	r5, [ip, #-12]
   51cf4:	ubfx	r1, r0, #8, #8
   51cf8:	uxtb	r9, r0
   51cfc:	lsr	r4, r0, #24
   51d00:	add	r9, r9, #768	; 0x300
   51d04:	add	r1, r1, #512	; 0x200
   51d08:	ldr	r4, [r3, r4, lsl #2]
   51d0c:	ubfx	r0, r0, #16, #8
   51d10:	ldr	r9, [r3, r9, lsl #2]
   51d14:	add	r0, r0, #256	; 0x100
   51d18:	ldr	sl, [r3, r1, lsl #2]
   51d1c:	eor	r1, r9, r4
   51d20:	ldr	r0, [r3, r0, lsl #2]
   51d24:	eor	r1, r1, r8
   51d28:	ldr	r4, [ip, #-8]
   51d2c:	eor	r1, r1, sl
   51d30:	eor	r1, r1, r0
   51d34:	ldr	r0, [ip, #-4]
   51d38:	cmp	ip, fp
   51d3c:	lsr	r8, r1, #24
   51d40:	uxtb	sl, r1
   51d44:	add	sl, sl, #768	; 0x300
   51d48:	ldr	r9, [r3, r8, lsl #2]
   51d4c:	ubfx	r8, r1, #8, #8
   51d50:	ldr	sl, [r3, sl, lsl #2]
   51d54:	add	r8, r8, #512	; 0x200
   51d58:	ubfx	r1, r1, #16, #8
   51d5c:	add	r1, r1, #256	; 0x100
   51d60:	eor	r9, sl, r9
   51d64:	ldr	r8, [r3, r8, lsl #2]
   51d68:	eor	r7, r9, r7
   51d6c:	ldr	r1, [r3, r1, lsl #2]
   51d70:	eor	r7, r7, r8
   51d74:	eor	r7, r7, r1
   51d78:	ubfx	r9, r7, #8, #8
   51d7c:	uxtb	r8, r7
   51d80:	lsr	r1, r7, #24
   51d84:	add	r8, r8, #768	; 0x300
   51d88:	add	r9, r9, #512	; 0x200
   51d8c:	ldr	r1, [r3, r1, lsl #2]
   51d90:	ubfx	r7, r7, #16, #8
   51d94:	ldr	r8, [r3, r8, lsl #2]
   51d98:	add	r7, r7, #256	; 0x100
   51d9c:	ldr	r9, [r3, r9, lsl #2]
   51da0:	eor	r1, r8, r1
   51da4:	ldr	r7, [r3, r7, lsl #2]
   51da8:	eor	r6, r1, r6
   51dac:	eor	r6, r6, r9
   51db0:	eor	r6, r6, r7
   51db4:	ubfx	r7, r6, #8, #8
   51db8:	uxtb	r8, r6
   51dbc:	lsr	r1, r6, #24
   51dc0:	add	r8, r8, #768	; 0x300
   51dc4:	add	r7, r7, #512	; 0x200
   51dc8:	ldr	r1, [r3, r1, lsl #2]
   51dcc:	ubfx	r6, r6, #16, #8
   51dd0:	ldr	r8, [r3, r8, lsl #2]
   51dd4:	add	r6, r6, #256	; 0x100
   51dd8:	ldr	r7, [r3, r7, lsl #2]
   51ddc:	eor	r8, r8, r1
   51de0:	ldr	r1, [r3, r6, lsl #2]
   51de4:	eor	r5, r8, r5
   51de8:	eor	r5, r5, r7
   51dec:	eor	r5, r5, r1
   51df0:	ubfx	r8, r5, #8, #8
   51df4:	ubfx	r1, r5, #16, #8
   51df8:	uxtb	r7, r5
   51dfc:	lsr	r5, r5, #24
   51e00:	add	r7, r7, #768	; 0x300
   51e04:	add	r8, r8, #512	; 0x200
   51e08:	ldr	r6, [r3, r5, lsl #2]
   51e0c:	add	r1, r1, #256	; 0x100
   51e10:	ldr	r7, [r3, r7, lsl #2]
   51e14:	ldr	r5, [r3, r8, lsl #2]
   51e18:	eor	r6, r7, r6
   51e1c:	ldr	r1, [r3, r1, lsl #2]
   51e20:	eor	r4, r6, r4
   51e24:	eor	r4, r4, r5
   51e28:	eor	r4, r4, r1
   51e2c:	ubfx	r7, r4, #8, #8
   51e30:	ubfx	r1, r4, #16, #8
   51e34:	uxtb	r6, r4
   51e38:	lsr	r4, r4, #24
   51e3c:	add	r6, r6, #768	; 0x300
   51e40:	add	r7, r7, #512	; 0x200
   51e44:	ldr	r5, [r3, r4, lsl #2]
   51e48:	add	r1, r1, #256	; 0x100
   51e4c:	ldr	r6, [r3, r6, lsl #2]
   51e50:	ldr	r4, [r3, r7, lsl #2]
   51e54:	eor	r5, r6, r5
   51e58:	ldr	r1, [r3, r1, lsl #2]
   51e5c:	eor	r0, r5, r0
   51e60:	eor	r0, r0, r4
   51e64:	eor	r0, r0, r1
   51e68:	ubfx	r5, r0, #8, #8
   51e6c:	ubfx	r1, r0, #16, #8
   51e70:	uxtb	r6, r0
   51e74:	lsr	r0, r0, #24
   51e78:	add	r6, r6, #768	; 0x300
   51e7c:	add	r5, r5, #512	; 0x200
   51e80:	ldr	r4, [r3, r0, lsl #2]
   51e84:	add	r1, r1, #256	; 0x100
   51e88:	ldr	r0, [r3, r6, lsl #2]
   51e8c:	ldr	r5, [r3, r5, lsl #2]
   51e90:	eor	r0, r4, r0
   51e94:	ldr	r1, [r3, r1, lsl #2]
   51e98:	eor	r0, r0, r5
   51e9c:	eor	r0, r0, r1
   51ea0:	bne	51c9c <zcfree@@Base+0x66c>
   51ea4:	ldr	r5, [sp]
   51ea8:	and	r2, r2, #31
   51eac:	ldr	r1, [sp, #4]
   51eb0:	add	r3, r5, #1
   51eb4:	add	r1, r1, r3, lsl #5
   51eb8:	cmp	r2, #3
   51ebc:	bls	51f30 <zcfree@@Base+0x900>
   51ec0:	ldr	r3, [pc, #180]	; 51f7c <zcfree@@Base+0x94c>
   51ec4:	mov	ip, r2
   51ec8:	mov	r4, r1
   51ecc:	add	r3, pc, r3
   51ed0:	ldr	r5, [r4], #4
   51ed4:	sub	ip, ip, #4
   51ed8:	cmp	ip, #3
   51edc:	eor	r0, r0, r5
   51ee0:	ubfx	r6, r0, #8, #8
   51ee4:	ubfx	r5, r0, #16, #8
   51ee8:	uxtb	r8, r0
   51eec:	lsr	r0, r0, #24
   51ef0:	add	r8, r8, #768	; 0x300
   51ef4:	add	r6, r6, #512	; 0x200
   51ef8:	ldr	r7, [r3, r0, lsl #2]
   51efc:	add	r5, r5, #256	; 0x100
   51f00:	ldr	r0, [r3, r8, lsl #2]
   51f04:	ldr	r6, [r3, r6, lsl #2]
   51f08:	eor	r0, r7, r0
   51f0c:	ldr	r5, [r3, r5, lsl #2]
   51f10:	eor	r0, r0, r6
   51f14:	eor	r0, r0, r5
   51f18:	bhi	51ed0 <zcfree@@Base+0x8a0>
   51f1c:	sub	r3, r2, #4
   51f20:	and	r2, r2, #3
   51f24:	bic	r3, r3, #3
   51f28:	add	r3, r3, #4
   51f2c:	add	r1, r1, r3
   51f30:	cmp	r2, #0
   51f34:	beq	51c5c <zcfree@@Base+0x62c>
   51f38:	ldr	ip, [pc, #64]	; 51f80 <zcfree@@Base+0x950>
   51f3c:	add	r2, r1, r2
   51f40:	add	ip, pc, ip
   51f44:	ldrb	r3, [r1], #1
   51f48:	eor	r3, r0, r3
   51f4c:	cmp	r1, r2
   51f50:	uxtb	r3, r3
   51f54:	ldr	r3, [ip, r3, lsl #2]
   51f58:	eor	r0, r3, r0, lsr #8
   51f5c:	bne	51f44 <zcfree@@Base+0x914>
   51f60:	b	51c5c <zcfree@@Base+0x62c>
   51f64:	mov	r0, r1
   51f68:	add	sp, sp, #8
   51f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   51f70:	bx	lr
   51f74:	andeq	lr, r2, r8, lsl #9
   51f78:	andeq	lr, r2, ip, lsr #8
   51f7c:	andeq	lr, r2, ip, ror #3
   51f80:	andeq	lr, r2, r8, ror r1
   51f84:	b	51ac4 <zcfree@@Base+0x494>
   51f88:	b	51ac4 <zcfree@@Base+0x494>
   51f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   51f90:	mov	sl, r0
   51f94:	ldr	fp, [sl, #28]
   51f98:	sub	sp, sp, #64	; 0x40
   51f9c:	ldr	r3, [sl, #16]
   51fa0:	mov	r0, #1
   51fa4:	mov	ip, r0
   51fa8:	ldr	r4, [sl, #12]
   51fac:	ldr	r7, [fp, #88]	; 0x58
   51fb0:	sub	r6, r3, #256	; 0x100
   51fb4:	ldr	r2, [fp, #84]	; 0x54
   51fb8:	rsb	r1, r1, r3
   51fbc:	ldr	r3, [sl]
   51fc0:	sub	r4, r4, #1
   51fc4:	lsl	r2, r0, r2
   51fc8:	lsl	r0, r0, r7
   51fcc:	ldr	r7, [fp, #40]	; 0x28
   51fd0:	sub	r3, r3, #1
   51fd4:	str	r3, [sp, #4]
   51fd8:	sub	r2, r2, #1
   51fdc:	ldr	r3, [fp, #44]	; 0x2c
   51fe0:	sub	r0, r0, #1
   51fe4:	str	r7, [sp, #24]
   51fe8:	sub	r6, r6, #1
   51fec:	ldr	r7, [fp, #52]	; 0x34
   51ff0:	add	r6, r4, r6
   51ff4:	ldr	r8, [fp, #48]	; 0x30
   51ff8:	add	r1, r4, r1
   51ffc:	ldr	r5, [sl, #4]
   52000:	sub	r7, r7, #1
   52004:	str	r3, [sp, #44]	; 0x2c
   52008:	str	r2, [sp, #16]
   5200c:	sub	r5, r5, #5
   52010:	str	r0, [sp, #36]	; 0x24
   52014:	ldr	r3, [fp, #56]	; 0x38
   52018:	ldr	r2, [fp, #60]	; 0x3c
   5201c:	ldr	r0, [fp, #76]	; 0x4c
   52020:	ldr	r9, [fp, #80]	; 0x50
   52024:	str	r6, [sp, #8]
   52028:	str	r7, [sp, #48]	; 0x30
   5202c:	ldr	r6, [sp, #24]
   52030:	ldr	r7, [sp, #4]
   52034:	add	r6, r8, r6
   52038:	str	r8, [sp, #20]
   5203c:	add	r5, r7, r5
   52040:	str	r1, [sp, #40]	; 0x28
   52044:	str	r6, [sp, #52]	; 0x34
   52048:	str	r5, [sp, #12]
   5204c:	str	fp, [sp, #28]
   52050:	str	sl, [sp, #32]
   52054:	cmp	r2, #14
   52058:	bhi	52084 <zcfree@@Base+0xa54>
   5205c:	ldr	r8, [sp, #4]
   52060:	add	r1, r2, #8
   52064:	add	r8, r8, #2
   52068:	ldrb	r6, [r8]
   5206c:	ldrb	r5, [r8, #-1]
   52070:	str	r8, [sp, #4]
   52074:	lsl	r1, r6, r1
   52078:	add	r1, r1, r5, lsl r2
   5207c:	add	r2, r2, #16
   52080:	add	r3, r3, r1
   52084:	ldr	r5, [sp, #16]
   52088:	and	r1, r3, r5
   5208c:	add	r5, r0, r1, lsl #2
   52090:	ldrb	r1, [r0, r1, lsl #2]
   52094:	ldrb	r6, [r5, #1]
   52098:	cmp	r1, #0
   5209c:	ldrh	r5, [r5, #2]
   520a0:	lsr	r3, r3, r6
   520a4:	rsb	r2, r6, r2
   520a8:	bne	520e8 <zcfree@@Base+0xab8>
   520ac:	b	52228 <zcfree@@Base+0xbf8>
   520b0:	tst	r1, #64	; 0x40
   520b4:	bne	52254 <zcfree@@Base+0xc24>
   520b8:	lsl	r1, ip, r1
   520bc:	sub	r1, r1, #1
   520c0:	and	r1, r3, r1
   520c4:	add	r5, r1, r5
   520c8:	add	r7, r0, r5, lsl #2
   520cc:	ldrb	r1, [r0, r5, lsl #2]
   520d0:	ldrb	r6, [r7, #1]
   520d4:	cmp	r1, #0
   520d8:	ldrh	r5, [r7, #2]
   520dc:	lsr	r3, r3, r6
   520e0:	rsb	r2, r6, r2
   520e4:	beq	52228 <zcfree@@Base+0xbf8>
   520e8:	tst	r1, #16
   520ec:	beq	520b0 <zcfree@@Base+0xa80>
   520f0:	ands	r1, r1, #15
   520f4:	mov	fp, r5
   520f8:	beq	52134 <zcfree@@Base+0xb04>
   520fc:	cmp	r1, r2
   52100:	bls	5211c <zcfree@@Base+0xaec>
   52104:	ldr	r7, [sp, #4]
   52108:	add	r7, r7, #1
   5210c:	ldrb	r6, [r7]
   52110:	str	r7, [sp, #4]
   52114:	add	r3, r3, r6, lsl r2
   52118:	add	r2, r2, #8
   5211c:	lsl	r6, ip, r1
   52120:	rsb	r2, r1, r2
   52124:	sub	r6, r6, #1
   52128:	and	r6, r3, r6
   5212c:	lsr	r3, r3, r1
   52130:	add	fp, r5, r6
   52134:	cmp	r2, #14
   52138:	bls	52284 <zcfree@@Base+0xc54>
   5213c:	ldr	r1, [sp, #36]	; 0x24
   52140:	and	r5, r3, r1
   52144:	add	r1, r9, r5, lsl #2
   52148:	ldrb	r5, [r9, r5, lsl #2]
   5214c:	ldrb	r6, [r1, #1]
   52150:	tst	r5, #16
   52154:	ldrh	r1, [r1, #2]
   52158:	lsr	r3, r3, r6
   5215c:	rsb	r2, r6, r2
   52160:	beq	52198 <zcfree@@Base+0xb68>
   52164:	b	522b0 <zcfree@@Base+0xc80>
   52168:	lsl	r5, ip, r5
   5216c:	sub	r5, r5, #1
   52170:	and	r5, r3, r5
   52174:	add	r1, r5, r1
   52178:	add	r7, r9, r1, lsl #2
   5217c:	ldrb	r5, [r9, r1, lsl #2]
   52180:	ldrb	r6, [r7, #1]
   52184:	tst	r5, #16
   52188:	ldrh	r1, [r7, #2]
   5218c:	lsr	r3, r3, r6
   52190:	rsb	r2, r6, r2
   52194:	bne	522b0 <zcfree@@Base+0xc80>
   52198:	tst	r5, #64	; 0x40
   5219c:	beq	52168 <zcfree@@Base+0xb38>
   521a0:	ldr	fp, [sp, #28]
   521a4:	mov	r1, #29
   521a8:	ldr	sl, [sp, #32]
   521ac:	ldr	r0, [pc, #936]	; 5255c <zcfree@@Base+0xf2c>
   521b0:	add	r0, pc, r0
   521b4:	str	r0, [sl, #24]
   521b8:	str	r1, [fp]
   521bc:	ldr	r5, [sp, #8]
   521c0:	lsr	r0, r2, #3
   521c4:	ldr	r6, [sp, #4]
   521c8:	mvn	ip, #0
   521cc:	cmp	r4, r5
   521d0:	ldr	r7, [sp, #12]
   521d4:	rsb	r1, r0, r6
   521d8:	sub	r2, r2, r0, lsl #3
   521dc:	ldrcs	r8, [sp, #8]
   521e0:	rsb	r0, r1, r7
   521e4:	add	r1, r1, #1
   521e8:	str	r1, [sl]
   521ec:	add	r1, r4, #1
   521f0:	rsbcc	r4, r4, r5
   521f4:	rsbcs	r4, r4, r8
   521f8:	str	r1, [sl, #12]
   521fc:	add	r4, r4, #256	; 0x100
   52200:	add	r0, r0, #5
   52204:	bic	r3, r3, ip, lsl r2
   52208:	str	r0, [sl, #4]
   5220c:	add	r4, r4, #1
   52210:	str	r4, [sl, #16]
   52214:	str	r3, [fp, #56]	; 0x38
   52218:	str	r2, [fp, #60]	; 0x3c
   5221c:	add	sp, sp, #64	; 0x40
   52220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   52224:	bx	lr
   52228:	strb	r5, [r4, #1]
   5222c:	add	r4, r4, #1
   52230:	ldr	r7, [sp, #8]
   52234:	ldr	r8, [sp, #4]
   52238:	ldr	r1, [sp, #12]
   5223c:	cmp	r4, r7
   52240:	cmpcc	r8, r1
   52244:	bcc	52054 <zcfree@@Base+0xa24>
   52248:	ldr	fp, [sp, #28]
   5224c:	ldr	sl, [sp, #32]
   52250:	b	521bc <zcfree@@Base+0xb8c>
   52254:	ldr	fp, [sp, #28]
   52258:	tst	r1, #32
   5225c:	ldr	sl, [sp, #32]
   52260:	movne	r1, #11
   52264:	strne	r1, [fp]
   52268:	bne	521bc <zcfree@@Base+0xb8c>
   5226c:	ldr	r0, [pc, #748]	; 52560 <zcfree@@Base+0xf30>
   52270:	mov	r1, #29
   52274:	add	r0, pc, r0
   52278:	str	r0, [sl, #24]
   5227c:	str	r1, [fp]
   52280:	b	521bc <zcfree@@Base+0xb8c>
   52284:	ldr	r8, [sp, #4]
   52288:	add	r5, r2, #8
   5228c:	add	r8, r8, #2
   52290:	ldrb	r6, [r8]
   52294:	ldrb	r1, [r8, #-1]
   52298:	str	r8, [sp, #4]
   5229c:	lsl	r5, r6, r5
   522a0:	add	r1, r5, r1, lsl r2
   522a4:	add	r2, r2, #16
   522a8:	add	r3, r3, r1
   522ac:	b	5213c <zcfree@@Base+0xb0c>
   522b0:	and	r5, r5, #15
   522b4:	cmp	r5, r2
   522b8:	bls	522f8 <zcfree@@Base+0xcc8>
   522bc:	ldr	r6, [sp, #4]
   522c0:	ldrb	r7, [r6, #1]
   522c4:	add	r6, r2, #8
   522c8:	cmp	r5, r6
   522cc:	ldrhi	r8, [sp, #4]
   522d0:	add	r3, r3, r7, lsl r2
   522d4:	ldrls	r7, [sp, #4]
   522d8:	addhi	r2, r2, #16
   522dc:	movls	r2, r6
   522e0:	ldrbhi	r7, [r8, #2]
   522e4:	addls	r7, r7, #1
   522e8:	addhi	r8, r8, #2
   522ec:	strls	r7, [sp, #4]
   522f0:	strhi	r8, [sp, #4]
   522f4:	addhi	r3, r3, r7, lsl r6
   522f8:	lsl	r6, ip, r5
   522fc:	ldr	r8, [sp, #40]	; 0x28
   52300:	sub	r6, r6, #1
   52304:	rsb	r2, r5, r2
   52308:	and	r6, r3, r6
   5230c:	rsb	r7, r8, r4
   52310:	add	r8, r6, r1
   52314:	lsr	r3, r3, r5
   52318:	cmp	r8, r7
   5231c:	bls	5241c <zcfree@@Base+0xdec>
   52320:	ldr	r1, [sp, #44]	; 0x2c
   52324:	rsb	r7, r7, r8
   52328:	cmp	r1, r7
   5232c:	bcs	52344 <zcfree@@Base+0xd14>
   52330:	ldr	r6, [sp, #28]
   52334:	mov	r5, #7104	; 0x1bc0
   52338:	ldr	r1, [r6, r5]
   5233c:	cmp	r1, #0
   52340:	bne	5253c <zcfree@@Base+0xf0c>
   52344:	ldr	r1, [sp, #20]
   52348:	cmp	r1, #0
   5234c:	bne	52478 <zcfree@@Base+0xe48>
   52350:	ldr	r5, [sp, #24]
   52354:	cmp	fp, r7
   52358:	ldr	r6, [sp, #48]	; 0x30
   5235c:	rsb	r1, r7, r5
   52360:	add	r1, r6, r1
   52364:	str	r1, [sp, #56]	; 0x38
   52368:	bls	52398 <zcfree@@Base+0xd68>
   5236c:	rsb	fp, r7, fp
   52370:	mov	sl, r1
   52374:	add	r6, r1, r7
   52378:	mov	r1, r4
   5237c:	ldrb	r5, [sl, #1]!
   52380:	cmp	sl, r6
   52384:	strb	r5, [r1, #1]!
   52388:	bne	5237c <zcfree@@Base+0xd4c>
   5238c:	add	r4, r4, r7
   52390:	rsb	r8, r8, r4
   52394:	str	r8, [sp, #56]	; 0x38
   52398:	ldr	r5, [sp, #56]	; 0x38
   5239c:	cmp	fp, #2
   523a0:	mov	r1, r4
   523a4:	strhi	r0, [sp, #60]	; 0x3c
   523a8:	movhi	r6, #0
   523ac:	movhi	sl, r5
   523b0:	bls	523f0 <zcfree@@Base+0xdc0>
   523b4:	ldrb	r8, [r5, #1]
   523b8:	add	r7, sl, r6
   523bc:	sub	fp, fp, #3
   523c0:	add	r0, r4, r6
   523c4:	cmp	fp, #2
   523c8:	add	r5, r5, #3
   523cc:	strb	r8, [r1, #1]
   523d0:	add	r6, r6, #3
   523d4:	ldrb	r8, [r5, #-1]
   523d8:	add	r1, r1, #3
   523dc:	strb	r8, [r1, #-1]
   523e0:	ldrb	r7, [r7, #3]
   523e4:	strb	r7, [r0, #3]
   523e8:	bhi	523b4 <zcfree@@Base+0xd84>
   523ec:	ldr	r0, [sp, #60]	; 0x3c
   523f0:	cmp	fp, #0
   523f4:	moveq	r4, r1
   523f8:	beq	52230 <zcfree@@Base+0xc00>
   523fc:	ldrb	r4, [r5, #1]
   52400:	cmp	fp, #2
   52404:	strb	r4, [r1, #1]
   52408:	addne	r4, r1, #1
   5240c:	ldrbeq	r5, [r5, #2]
   52410:	addeq	r4, r1, #2
   52414:	strbeq	r5, [r1, #2]
   52418:	b	52230 <zcfree@@Base+0xc00>
   5241c:	rsb	r1, r8, r4
   52420:	ldrb	r6, [r1, #1]
   52424:	sub	fp, fp, #3
   52428:	mov	r7, r1
   5242c:	cmp	fp, #2
   52430:	mov	r5, r4
   52434:	add	r4, r4, #3
   52438:	strb	r6, [r4, #-2]
   5243c:	ldrb	r6, [r1, #2]
   52440:	strb	r6, [r4, #-1]
   52444:	ldrb	r6, [r1, #3]!
   52448:	strb	r6, [r5, #3]
   5244c:	bhi	52420 <zcfree@@Base+0xdf0>
   52450:	cmp	fp, #0
   52454:	beq	52230 <zcfree@@Base+0xc00>
   52458:	ldrb	r1, [r7, #4]
   5245c:	cmp	fp, #2
   52460:	addne	r4, r5, #4
   52464:	addeq	r4, r5, #5
   52468:	strb	r1, [r5, #4]
   5246c:	ldrbeq	r1, [r7, #5]
   52470:	strbeq	r1, [r5, #5]
   52474:	b	52230 <zcfree@@Base+0xc00>
   52478:	ldr	r1, [sp, #20]
   5247c:	cmp	r1, r7
   52480:	bcs	524f0 <zcfree@@Base+0xec0>
   52484:	rsb	sl, r1, r7
   52488:	ldr	r5, [sp, #52]	; 0x34
   5248c:	ldr	r6, [sp, #48]	; 0x30
   52490:	cmp	fp, sl
   52494:	rsb	r7, r7, r5
   52498:	add	r7, r6, r7
   5249c:	str	r7, [sp, #56]	; 0x38
   524a0:	bls	52398 <zcfree@@Base+0xd68>
   524a4:	rsb	fp, sl, fp
   524a8:	add	r6, r7, sl
   524ac:	mov	r1, r4
   524b0:	ldrb	r5, [r7, #1]!
   524b4:	cmp	r7, r6
   524b8:	strb	r5, [r1, #1]!
   524bc:	bne	524b0 <zcfree@@Base+0xe80>
   524c0:	ldr	r7, [sp, #20]
   524c4:	add	r4, r4, sl
   524c8:	cmp	r7, fp
   524cc:	bcs	52530 <zcfree@@Base+0xf00>
   524d0:	ldr	r1, [sp, #48]	; 0x30
   524d4:	rsb	fp, r7, fp
   524d8:	add	r6, r4, r7
   524dc:	ldrb	r5, [r1, #1]!
   524e0:	strb	r5, [r4, #1]!
   524e4:	cmp	r4, r6
   524e8:	bne	524dc <zcfree@@Base+0xeac>
   524ec:	b	52390 <zcfree@@Base+0xd60>
   524f0:	ldr	r5, [sp, #20]
   524f4:	cmp	fp, r7
   524f8:	ldr	r6, [sp, #48]	; 0x30
   524fc:	rsb	r1, r7, r5
   52500:	add	r1, r6, r1
   52504:	str	r1, [sp, #56]	; 0x38
   52508:	bls	52398 <zcfree@@Base+0xd68>
   5250c:	rsb	fp, r7, fp
   52510:	mov	sl, r1
   52514:	add	r6, r1, r7
   52518:	mov	r1, r4
   5251c:	ldrb	r5, [sl, #1]!
   52520:	cmp	sl, r6
   52524:	strb	r5, [r1, #1]!
   52528:	bne	5251c <zcfree@@Base+0xeec>
   5252c:	b	5238c <zcfree@@Base+0xd5c>
   52530:	ldr	r7, [sp, #48]	; 0x30
   52534:	str	r7, [sp, #56]	; 0x38
   52538:	b	52398 <zcfree@@Base+0xd68>
   5253c:	ldr	sl, [sp, #32]
   52540:	mov	r1, #29
   52544:	ldr	r0, [pc, #24]	; 52564 <zcfree@@Base+0xf34>
   52548:	mov	fp, r6
   5254c:	add	r0, pc, r0
   52550:	str	r0, [sl, #24]
   52554:	str	r1, [r6]
   52558:	b	521bc <zcfree@@Base+0xb8c>
   5255c:	strdeq	sp, [r2], -r0
   52560:	andeq	sp, r2, r0, lsl ip
   52564:	andeq	sp, r2, ip, ror #18
   52568:	subs	r2, r1, #1
   5256c:	bxeq	lr
   52570:	bcc	52748 <zcfree@@Base+0x1118>
   52574:	cmp	r0, r1
   52578:	bls	5272c <zcfree@@Base+0x10fc>
   5257c:	tst	r1, r2
   52580:	beq	52738 <zcfree@@Base+0x1108>
   52584:	clz	r3, r0
   52588:	clz	r2, r1
   5258c:	sub	r3, r2, r3
   52590:	rsbs	r3, r3, #31
   52594:	addne	r3, r3, r3, lsl #1
   52598:	mov	r2, #0
   5259c:	addne	pc, pc, r3, lsl #2
   525a0:	nop	{0}
   525a4:	cmp	r0, r1, lsl #31
   525a8:	adc	r2, r2, r2
   525ac:	subcs	r0, r0, r1, lsl #31
   525b0:	cmp	r0, r1, lsl #30
   525b4:	adc	r2, r2, r2
   525b8:	subcs	r0, r0, r1, lsl #30
   525bc:	cmp	r0, r1, lsl #29
   525c0:	adc	r2, r2, r2
   525c4:	subcs	r0, r0, r1, lsl #29
   525c8:	cmp	r0, r1, lsl #28
   525cc:	adc	r2, r2, r2
   525d0:	subcs	r0, r0, r1, lsl #28
   525d4:	cmp	r0, r1, lsl #27
   525d8:	adc	r2, r2, r2
   525dc:	subcs	r0, r0, r1, lsl #27
   525e0:	cmp	r0, r1, lsl #26
   525e4:	adc	r2, r2, r2
   525e8:	subcs	r0, r0, r1, lsl #26
   525ec:	cmp	r0, r1, lsl #25
   525f0:	adc	r2, r2, r2
   525f4:	subcs	r0, r0, r1, lsl #25
   525f8:	cmp	r0, r1, lsl #24
   525fc:	adc	r2, r2, r2
   52600:	subcs	r0, r0, r1, lsl #24
   52604:	cmp	r0, r1, lsl #23
   52608:	adc	r2, r2, r2
   5260c:	subcs	r0, r0, r1, lsl #23
   52610:	cmp	r0, r1, lsl #22
   52614:	adc	r2, r2, r2
   52618:	subcs	r0, r0, r1, lsl #22
   5261c:	cmp	r0, r1, lsl #21
   52620:	adc	r2, r2, r2
   52624:	subcs	r0, r0, r1, lsl #21
   52628:	cmp	r0, r1, lsl #20
   5262c:	adc	r2, r2, r2
   52630:	subcs	r0, r0, r1, lsl #20
   52634:	cmp	r0, r1, lsl #19
   52638:	adc	r2, r2, r2
   5263c:	subcs	r0, r0, r1, lsl #19
   52640:	cmp	r0, r1, lsl #18
   52644:	adc	r2, r2, r2
   52648:	subcs	r0, r0, r1, lsl #18
   5264c:	cmp	r0, r1, lsl #17
   52650:	adc	r2, r2, r2
   52654:	subcs	r0, r0, r1, lsl #17
   52658:	cmp	r0, r1, lsl #16
   5265c:	adc	r2, r2, r2
   52660:	subcs	r0, r0, r1, lsl #16
   52664:	cmp	r0, r1, lsl #15
   52668:	adc	r2, r2, r2
   5266c:	subcs	r0, r0, r1, lsl #15
   52670:	cmp	r0, r1, lsl #14
   52674:	adc	r2, r2, r2
   52678:	subcs	r0, r0, r1, lsl #14
   5267c:	cmp	r0, r1, lsl #13
   52680:	adc	r2, r2, r2
   52684:	subcs	r0, r0, r1, lsl #13
   52688:	cmp	r0, r1, lsl #12
   5268c:	adc	r2, r2, r2
   52690:	subcs	r0, r0, r1, lsl #12
   52694:	cmp	r0, r1, lsl #11
   52698:	adc	r2, r2, r2
   5269c:	subcs	r0, r0, r1, lsl #11
   526a0:	cmp	r0, r1, lsl #10
   526a4:	adc	r2, r2, r2
   526a8:	subcs	r0, r0, r1, lsl #10
   526ac:	cmp	r0, r1, lsl #9
   526b0:	adc	r2, r2, r2
   526b4:	subcs	r0, r0, r1, lsl #9
   526b8:	cmp	r0, r1, lsl #8
   526bc:	adc	r2, r2, r2
   526c0:	subcs	r0, r0, r1, lsl #8
   526c4:	cmp	r0, r1, lsl #7
   526c8:	adc	r2, r2, r2
   526cc:	subcs	r0, r0, r1, lsl #7
   526d0:	cmp	r0, r1, lsl #6
   526d4:	adc	r2, r2, r2
   526d8:	subcs	r0, r0, r1, lsl #6
   526dc:	cmp	r0, r1, lsl #5
   526e0:	adc	r2, r2, r2
   526e4:	subcs	r0, r0, r1, lsl #5
   526e8:	cmp	r0, r1, lsl #4
   526ec:	adc	r2, r2, r2
   526f0:	subcs	r0, r0, r1, lsl #4
   526f4:	cmp	r0, r1, lsl #3
   526f8:	adc	r2, r2, r2
   526fc:	subcs	r0, r0, r1, lsl #3
   52700:	cmp	r0, r1, lsl #2
   52704:	adc	r2, r2, r2
   52708:	subcs	r0, r0, r1, lsl #2
   5270c:	cmp	r0, r1, lsl #1
   52710:	adc	r2, r2, r2
   52714:	subcs	r0, r0, r1, lsl #1
   52718:	cmp	r0, r1
   5271c:	adc	r2, r2, r2
   52720:	subcs	r0, r0, r1
   52724:	mov	r0, r2
   52728:	bx	lr
   5272c:	moveq	r0, #1
   52730:	movne	r0, #0
   52734:	bx	lr
   52738:	clz	r2, r1
   5273c:	rsb	r2, r2, #31
   52740:	lsr	r0, r0, r2
   52744:	bx	lr
   52748:	cmp	r0, #0
   5274c:	mvnne	r0, #0
   52750:	b	52a38 <zcfree@@Base+0x1408>
   52754:	cmp	r1, #0
   52758:	beq	52748 <zcfree@@Base+0x1118>
   5275c:	push	{r0, r1, lr}
   52760:	bl	52568 <zcfree@@Base+0xf38>
   52764:	pop	{r1, r2, lr}
   52768:	mul	r3, r2, r0
   5276c:	sub	r1, r1, r3
   52770:	bx	lr
   52774:	cmp	r1, #0
   52778:	beq	52984 <zcfree@@Base+0x1354>
   5277c:	eor	ip, r0, r1
   52780:	rsbmi	r1, r1, #0
   52784:	subs	r2, r1, #1
   52788:	beq	52950 <zcfree@@Base+0x1320>
   5278c:	movs	r3, r0
   52790:	rsbmi	r3, r0, #0
   52794:	cmp	r3, r1
   52798:	bls	5295c <zcfree@@Base+0x132c>
   5279c:	tst	r1, r2
   527a0:	beq	5296c <zcfree@@Base+0x133c>
   527a4:	clz	r2, r3
   527a8:	clz	r0, r1
   527ac:	sub	r2, r0, r2
   527b0:	rsbs	r2, r2, #31
   527b4:	addne	r2, r2, r2, lsl #1
   527b8:	mov	r0, #0
   527bc:	addne	pc, pc, r2, lsl #2
   527c0:	nop	{0}
   527c4:	cmp	r3, r1, lsl #31
   527c8:	adc	r0, r0, r0
   527cc:	subcs	r3, r3, r1, lsl #31
   527d0:	cmp	r3, r1, lsl #30
   527d4:	adc	r0, r0, r0
   527d8:	subcs	r3, r3, r1, lsl #30
   527dc:	cmp	r3, r1, lsl #29
   527e0:	adc	r0, r0, r0
   527e4:	subcs	r3, r3, r1, lsl #29
   527e8:	cmp	r3, r1, lsl #28
   527ec:	adc	r0, r0, r0
   527f0:	subcs	r3, r3, r1, lsl #28
   527f4:	cmp	r3, r1, lsl #27
   527f8:	adc	r0, r0, r0
   527fc:	subcs	r3, r3, r1, lsl #27
   52800:	cmp	r3, r1, lsl #26
   52804:	adc	r0, r0, r0
   52808:	subcs	r3, r3, r1, lsl #26
   5280c:	cmp	r3, r1, lsl #25
   52810:	adc	r0, r0, r0
   52814:	subcs	r3, r3, r1, lsl #25
   52818:	cmp	r3, r1, lsl #24
   5281c:	adc	r0, r0, r0
   52820:	subcs	r3, r3, r1, lsl #24
   52824:	cmp	r3, r1, lsl #23
   52828:	adc	r0, r0, r0
   5282c:	subcs	r3, r3, r1, lsl #23
   52830:	cmp	r3, r1, lsl #22
   52834:	adc	r0, r0, r0
   52838:	subcs	r3, r3, r1, lsl #22
   5283c:	cmp	r3, r1, lsl #21
   52840:	adc	r0, r0, r0
   52844:	subcs	r3, r3, r1, lsl #21
   52848:	cmp	r3, r1, lsl #20
   5284c:	adc	r0, r0, r0
   52850:	subcs	r3, r3, r1, lsl #20
   52854:	cmp	r3, r1, lsl #19
   52858:	adc	r0, r0, r0
   5285c:	subcs	r3, r3, r1, lsl #19
   52860:	cmp	r3, r1, lsl #18
   52864:	adc	r0, r0, r0
   52868:	subcs	r3, r3, r1, lsl #18
   5286c:	cmp	r3, r1, lsl #17
   52870:	adc	r0, r0, r0
   52874:	subcs	r3, r3, r1, lsl #17
   52878:	cmp	r3, r1, lsl #16
   5287c:	adc	r0, r0, r0
   52880:	subcs	r3, r3, r1, lsl #16
   52884:	cmp	r3, r1, lsl #15
   52888:	adc	r0, r0, r0
   5288c:	subcs	r3, r3, r1, lsl #15
   52890:	cmp	r3, r1, lsl #14
   52894:	adc	r0, r0, r0
   52898:	subcs	r3, r3, r1, lsl #14
   5289c:	cmp	r3, r1, lsl #13
   528a0:	adc	r0, r0, r0
   528a4:	subcs	r3, r3, r1, lsl #13
   528a8:	cmp	r3, r1, lsl #12
   528ac:	adc	r0, r0, r0
   528b0:	subcs	r3, r3, r1, lsl #12
   528b4:	cmp	r3, r1, lsl #11
   528b8:	adc	r0, r0, r0
   528bc:	subcs	r3, r3, r1, lsl #11
   528c0:	cmp	r3, r1, lsl #10
   528c4:	adc	r0, r0, r0
   528c8:	subcs	r3, r3, r1, lsl #10
   528cc:	cmp	r3, r1, lsl #9
   528d0:	adc	r0, r0, r0
   528d4:	subcs	r3, r3, r1, lsl #9
   528d8:	cmp	r3, r1, lsl #8
   528dc:	adc	r0, r0, r0
   528e0:	subcs	r3, r3, r1, lsl #8
   528e4:	cmp	r3, r1, lsl #7
   528e8:	adc	r0, r0, r0
   528ec:	subcs	r3, r3, r1, lsl #7
   528f0:	cmp	r3, r1, lsl #6
   528f4:	adc	r0, r0, r0
   528f8:	subcs	r3, r3, r1, lsl #6
   528fc:	cmp	r3, r1, lsl #5
   52900:	adc	r0, r0, r0
   52904:	subcs	r3, r3, r1, lsl #5
   52908:	cmp	r3, r1, lsl #4
   5290c:	adc	r0, r0, r0
   52910:	subcs	r3, r3, r1, lsl #4
   52914:	cmp	r3, r1, lsl #3
   52918:	adc	r0, r0, r0
   5291c:	subcs	r3, r3, r1, lsl #3
   52920:	cmp	r3, r1, lsl #2
   52924:	adc	r0, r0, r0
   52928:	subcs	r3, r3, r1, lsl #2
   5292c:	cmp	r3, r1, lsl #1
   52930:	adc	r0, r0, r0
   52934:	subcs	r3, r3, r1, lsl #1
   52938:	cmp	r3, r1
   5293c:	adc	r0, r0, r0
   52940:	subcs	r3, r3, r1
   52944:	cmp	ip, #0
   52948:	rsbmi	r0, r0, #0
   5294c:	bx	lr
   52950:	teq	ip, r0
   52954:	rsbmi	r0, r0, #0
   52958:	bx	lr
   5295c:	movcc	r0, #0
   52960:	asreq	r0, ip, #31
   52964:	orreq	r0, r0, #1
   52968:	bx	lr
   5296c:	clz	r2, r1
   52970:	rsb	r2, r2, #31
   52974:	cmp	ip, #0
   52978:	lsr	r0, r3, r2
   5297c:	rsbmi	r0, r0, #0
   52980:	bx	lr
   52984:	cmp	r0, #0
   52988:	mvngt	r0, #-2147483648	; 0x80000000
   5298c:	movlt	r0, #-2147483648	; 0x80000000
   52990:	b	52a38 <zcfree@@Base+0x1408>
   52994:	cmp	r1, #0
   52998:	beq	52984 <zcfree@@Base+0x1354>
   5299c:	push	{r0, r1, lr}
   529a0:	bl	5277c <zcfree@@Base+0x114c>
   529a4:	pop	{r1, r2, lr}
   529a8:	mul	r3, r2, r0
   529ac:	sub	r1, r1, r3
   529b0:	bx	lr
   529b4:	cmp	r3, #0
   529b8:	cmpeq	r2, #0
   529bc:	bne	529e0 <zcfree@@Base+0x13b0>
   529c0:	cmp	r1, #0
   529c4:	movlt	r1, #-2147483648	; 0x80000000
   529c8:	movlt	r0, #0
   529cc:	blt	529dc <zcfree@@Base+0x13ac>
   529d0:	cmpeq	r0, #0
   529d4:	mvnne	r1, #-2147483648	; 0x80000000
   529d8:	mvnne	r0, #0
   529dc:	b	52a38 <zcfree@@Base+0x1408>
   529e0:	sub	sp, sp, #8
   529e4:	push	{sp, lr}
   529e8:	bl	52a48 <zcfree@@Base+0x1418>
   529ec:	ldr	lr, [sp, #4]
   529f0:	add	sp, sp, #8
   529f4:	pop	{r2, r3}
   529f8:	bx	lr
   529fc:	cmp	r3, #0
   52a00:	cmpeq	r2, #0
   52a04:	bne	52a1c <zcfree@@Base+0x13ec>
   52a08:	cmp	r1, #0
   52a0c:	cmpeq	r0, #0
   52a10:	mvnne	r1, #0
   52a14:	mvnne	r0, #0
   52a18:	b	52a38 <zcfree@@Base+0x1408>
   52a1c:	sub	sp, sp, #8
   52a20:	push	{sp, lr}
   52a24:	bl	52a84 <zcfree@@Base+0x1454>
   52a28:	ldr	lr, [sp, #4]
   52a2c:	add	sp, sp, #8
   52a30:	pop	{r2, r3}
   52a34:	bx	lr
   52a38:	push	{r1, lr}
   52a3c:	mov	r0, #8
   52a40:	bl	110e0 <raise@plt>
   52a44:	pop	{r1, pc}
   52a48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   52a4c:	mov	r8, r2
   52a50:	mov	r6, r0
   52a54:	mov	r7, r1
   52a58:	mov	sl, r3
   52a5c:	ldr	r9, [sp, #32]
   52a60:	bl	52ac0 <zcfree@@Base+0x1490>
   52a64:	umull	r4, r5, r8, r0
   52a68:	mul	r8, r8, r1
   52a6c:	mla	r2, r0, sl, r8
   52a70:	add	r5, r2, r5
   52a74:	subs	r4, r6, r4
   52a78:	sbc	r5, r7, r5
   52a7c:	strd	r4, [r9]
   52a80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   52a84:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   52a88:	mov	r8, r2
   52a8c:	mov	r6, r0
   52a90:	mov	r7, r1
   52a94:	mov	r5, r3
   52a98:	ldr	r9, [sp, #32]
   52a9c:	bl	52f4c <zcfree@@Base+0x191c>
   52aa0:	mul	r3, r0, r5
   52aa4:	umull	r4, r5, r0, r8
   52aa8:	mla	r8, r8, r1, r3
   52aac:	add	r5, r8, r5
   52ab0:	subs	r4, r6, r4
   52ab4:	sbc	r5, r7, r5
   52ab8:	strd	r4, [r9]
   52abc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   52ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   52ac4:	rsbs	r4, r0, #0
   52ac8:	rsc	r5, r1, #0
   52acc:	cmp	r1, #0
   52ad0:	mvn	r6, #0
   52ad4:	sub	sp, sp, #12
   52ad8:	movge	r4, r0
   52adc:	movge	r5, r1
   52ae0:	movge	r6, #0
   52ae4:	cmp	r3, #0
   52ae8:	blt	52d20 <zcfree@@Base+0x16f0>
   52aec:	cmp	r3, #0
   52af0:	mov	sl, r4
   52af4:	mov	ip, r5
   52af8:	mov	r0, r2
   52afc:	mov	r1, r3
   52b00:	mov	r8, r2
   52b04:	mov	r7, r4
   52b08:	mov	r9, r5
   52b0c:	bne	52c04 <zcfree@@Base+0x15d4>
   52b10:	cmp	r2, r5
   52b14:	bls	52c40 <zcfree@@Base+0x1610>
   52b18:	clz	r3, r2
   52b1c:	cmp	r3, #0
   52b20:	rsbne	r2, r3, #32
   52b24:	lslne	r8, r0, r3
   52b28:	lsrne	r2, r4, r2
   52b2c:	lslne	r7, r4, r3
   52b30:	orrne	r9, r2, r5, lsl r3
   52b34:	lsr	r4, r8, #16
   52b38:	uxth	sl, r8
   52b3c:	mov	r1, r4
   52b40:	mov	r0, r9
   52b44:	bl	52568 <zcfree@@Base+0xf38>
   52b48:	mov	r1, r4
   52b4c:	mov	fp, r0
   52b50:	mov	r0, r9
   52b54:	bl	52754 <zcfree@@Base+0x1124>
   52b58:	mul	r0, sl, fp
   52b5c:	lsr	r2, r7, #16
   52b60:	orr	r1, r2, r1, lsl #16
   52b64:	cmp	r0, r1
   52b68:	bls	52b8c <zcfree@@Base+0x155c>
   52b6c:	adds	r1, r1, r8
   52b70:	sub	r3, fp, #1
   52b74:	bcs	52b88 <zcfree@@Base+0x1558>
   52b78:	cmp	r0, r1
   52b7c:	subhi	fp, fp, #2
   52b80:	addhi	r1, r1, r8
   52b84:	bhi	52b8c <zcfree@@Base+0x155c>
   52b88:	mov	fp, r3
   52b8c:	rsb	r9, r0, r1
   52b90:	mov	r1, r4
   52b94:	uxth	r7, r7
   52b98:	mov	r0, r9
   52b9c:	bl	52568 <zcfree@@Base+0xf38>
   52ba0:	mov	r1, r4
   52ba4:	mov	r5, r0
   52ba8:	mov	r0, r9
   52bac:	bl	52754 <zcfree@@Base+0x1124>
   52bb0:	mul	sl, sl, r5
   52bb4:	orr	r1, r7, r1, lsl #16
   52bb8:	cmp	sl, r1
   52bbc:	bls	52bdc <zcfree@@Base+0x15ac>
   52bc0:	adds	r8, r1, r8
   52bc4:	sub	r3, r5, #1
   52bc8:	bcs	52bd8 <zcfree@@Base+0x15a8>
   52bcc:	cmp	sl, r8
   52bd0:	subhi	r5, r5, #2
   52bd4:	bhi	52bdc <zcfree@@Base+0x15ac>
   52bd8:	mov	r5, r3
   52bdc:	orr	r3, r5, fp, lsl #16
   52be0:	mov	r4, #0
   52be4:	cmp	r6, #0
   52be8:	mov	r0, r3
   52bec:	mov	r1, r4
   52bf0:	beq	52bfc <zcfree@@Base+0x15cc>
   52bf4:	rsbs	r0, r0, #0
   52bf8:	rsc	r1, r1, #0
   52bfc:	add	sp, sp, #12
   52c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   52c04:	cmp	r3, r5
   52c08:	movhi	r4, #0
   52c0c:	movhi	r3, r4
   52c10:	bhi	52be4 <zcfree@@Base+0x15b4>
   52c14:	clz	r5, r1
   52c18:	cmp	r5, #0
   52c1c:	bne	52e0c <zcfree@@Base+0x17dc>
   52c20:	cmp	r1, ip
   52c24:	cmpcs	r2, sl
   52c28:	movhi	r4, #0
   52c2c:	movls	r4, #1
   52c30:	movls	r3, #1
   52c34:	movls	r4, r5
   52c38:	movhi	r3, r4
   52c3c:	b	52be4 <zcfree@@Base+0x15b4>
   52c40:	cmp	r2, #0
   52c44:	bne	52c58 <zcfree@@Base+0x1628>
   52c48:	mov	r1, r2
   52c4c:	mov	r0, #1
   52c50:	bl	52568 <zcfree@@Base+0xf38>
   52c54:	mov	r8, r0
   52c58:	clz	r3, r8
   52c5c:	cmp	r3, #0
   52c60:	bne	52d30 <zcfree@@Base+0x1700>
   52c64:	rsb	r9, r8, r9
   52c68:	lsr	r5, r8, #16
   52c6c:	uxth	sl, r8
   52c70:	mov	r4, #1
   52c74:	mov	r1, r5
   52c78:	mov	r0, r9
   52c7c:	bl	52568 <zcfree@@Base+0xf38>
   52c80:	mov	r1, r5
   52c84:	mov	fp, r0
   52c88:	mov	r0, r9
   52c8c:	bl	52754 <zcfree@@Base+0x1124>
   52c90:	mul	r0, sl, fp
   52c94:	lsr	r2, r7, #16
   52c98:	orr	r1, r2, r1, lsl #16
   52c9c:	cmp	r0, r1
   52ca0:	bls	52cc0 <zcfree@@Base+0x1690>
   52ca4:	adds	r1, r1, r8
   52ca8:	sub	r3, fp, #1
   52cac:	bcs	52f2c <zcfree@@Base+0x18fc>
   52cb0:	cmp	r0, r1
   52cb4:	subhi	fp, fp, #2
   52cb8:	addhi	r1, r1, r8
   52cbc:	bls	52f2c <zcfree@@Base+0x18fc>
   52cc0:	rsb	r2, r0, r1
   52cc4:	mov	r1, r5
   52cc8:	str	r2, [sp]
   52ccc:	uxth	r7, r7
   52cd0:	mov	r0, r2
   52cd4:	bl	52568 <zcfree@@Base+0xf38>
   52cd8:	ldr	r2, [sp]
   52cdc:	mov	r1, r5
   52ce0:	mov	r9, r0
   52ce4:	mov	r0, r2
   52ce8:	bl	52754 <zcfree@@Base+0x1124>
   52cec:	mul	sl, sl, r9
   52cf0:	orr	r1, r7, r1, lsl #16
   52cf4:	cmp	sl, r1
   52cf8:	bls	52d18 <zcfree@@Base+0x16e8>
   52cfc:	adds	r8, r1, r8
   52d00:	sub	r3, r9, #1
   52d04:	bcs	52d14 <zcfree@@Base+0x16e4>
   52d08:	cmp	sl, r8
   52d0c:	subhi	r9, r9, #2
   52d10:	bhi	52d18 <zcfree@@Base+0x16e8>
   52d14:	mov	r9, r3
   52d18:	orr	r3, r9, fp, lsl #16
   52d1c:	b	52be4 <zcfree@@Base+0x15b4>
   52d20:	mvn	r6, r6
   52d24:	rsbs	r2, r2, #0
   52d28:	rsc	r3, r3, #0
   52d2c:	b	52aec <zcfree@@Base+0x14bc>
   52d30:	lsl	r8, r8, r3
   52d34:	rsb	fp, r3, #32
   52d38:	lsr	r4, r9, fp
   52d3c:	lsr	fp, r7, fp
   52d40:	lsr	r5, r8, #16
   52d44:	orr	fp, fp, r9, lsl r3
   52d48:	mov	r0, r4
   52d4c:	lsl	r7, r7, r3
   52d50:	mov	r1, r5
   52d54:	uxth	sl, r8
   52d58:	bl	52568 <zcfree@@Base+0xf38>
   52d5c:	mov	r1, r5
   52d60:	mov	r3, r0
   52d64:	mov	r0, r4
   52d68:	str	r3, [sp]
   52d6c:	bl	52754 <zcfree@@Base+0x1124>
   52d70:	ldr	r3, [sp]
   52d74:	lsr	r2, fp, #16
   52d78:	mul	r0, sl, r3
   52d7c:	orr	r1, r2, r1, lsl #16
   52d80:	cmp	r0, r1
   52d84:	bls	52da4 <zcfree@@Base+0x1774>
   52d88:	adds	r1, r1, r8
   52d8c:	sub	r2, r3, #1
   52d90:	bcs	52f44 <zcfree@@Base+0x1914>
   52d94:	cmp	r0, r1
   52d98:	subhi	r3, r3, #2
   52d9c:	addhi	r1, r1, r8
   52da0:	bls	52f44 <zcfree@@Base+0x1914>
   52da4:	rsb	r9, r0, r1
   52da8:	mov	r1, r5
   52dac:	str	r3, [sp]
   52db0:	uxth	fp, fp
   52db4:	mov	r0, r9
   52db8:	bl	52568 <zcfree@@Base+0xf38>
   52dbc:	mov	r1, r5
   52dc0:	mov	r4, r0
   52dc4:	mov	r0, r9
   52dc8:	bl	52754 <zcfree@@Base+0x1124>
   52dcc:	mul	r9, sl, r4
   52dd0:	ldr	r3, [sp]
   52dd4:	orr	r1, fp, r1, lsl #16
   52dd8:	cmp	r9, r1
   52ddc:	bls	52e00 <zcfree@@Base+0x17d0>
   52de0:	adds	r1, r1, r8
   52de4:	sub	r2, r4, #1
   52de8:	bcs	52dfc <zcfree@@Base+0x17cc>
   52dec:	cmp	r9, r1
   52df0:	subhi	r4, r4, #2
   52df4:	addhi	r1, r1, r8
   52df8:	bhi	52e00 <zcfree@@Base+0x17d0>
   52dfc:	mov	r4, r2
   52e00:	rsb	r9, r9, r1
   52e04:	orr	r4, r4, r3, lsl #16
   52e08:	b	52c74 <zcfree@@Base+0x1644>
   52e0c:	rsb	sl, r5, #32
   52e10:	lsl	r3, r2, r5
   52e14:	lsr	r0, r2, sl
   52e18:	lsr	r2, ip, sl
   52e1c:	orr	r4, r0, r1, lsl r5
   52e20:	lsr	sl, r7, sl
   52e24:	mov	r0, r2
   52e28:	orr	sl, sl, ip, lsl r5
   52e2c:	lsr	r9, r4, #16
   52e30:	str	r3, [sp, #4]
   52e34:	str	r2, [sp]
   52e38:	uxth	fp, r4
   52e3c:	mov	r1, r9
   52e40:	bl	52568 <zcfree@@Base+0xf38>
   52e44:	ldr	r2, [sp]
   52e48:	mov	r1, r9
   52e4c:	mov	r8, r0
   52e50:	mov	r0, r2
   52e54:	bl	52754 <zcfree@@Base+0x1124>
   52e58:	mul	r0, fp, r8
   52e5c:	lsr	r2, sl, #16
   52e60:	orr	r1, r2, r1, lsl #16
   52e64:	cmp	r0, r1
   52e68:	bls	52e88 <zcfree@@Base+0x1858>
   52e6c:	adds	r1, r1, r4
   52e70:	sub	r2, r8, #1
   52e74:	bcs	52f3c <zcfree@@Base+0x190c>
   52e78:	cmp	r0, r1
   52e7c:	subhi	r8, r8, #2
   52e80:	addhi	r1, r1, r4
   52e84:	bls	52f3c <zcfree@@Base+0x190c>
   52e88:	rsb	ip, r0, r1
   52e8c:	mov	r1, r9
   52e90:	str	ip, [sp]
   52e94:	mov	r0, ip
   52e98:	bl	52568 <zcfree@@Base+0xf38>
   52e9c:	ldr	ip, [sp]
   52ea0:	mov	r1, r9
   52ea4:	mov	r2, r0
   52ea8:	mov	r0, ip
   52eac:	str	r2, [sp]
   52eb0:	bl	52754 <zcfree@@Base+0x1124>
   52eb4:	ldr	r2, [sp]
   52eb8:	uxth	ip, sl
   52ebc:	mul	fp, fp, r2
   52ec0:	orr	ip, ip, r1, lsl #16
   52ec4:	cmp	fp, ip
   52ec8:	bls	52ee8 <zcfree@@Base+0x18b8>
   52ecc:	adds	ip, ip, r4
   52ed0:	sub	r1, r2, #1
   52ed4:	bcs	52f34 <zcfree@@Base+0x1904>
   52ed8:	cmp	fp, ip
   52edc:	subhi	r2, r2, #2
   52ee0:	addhi	ip, ip, r4
   52ee4:	bls	52f34 <zcfree@@Base+0x1904>
   52ee8:	ldr	r0, [sp, #4]
   52eec:	orr	r1, r2, r8, lsl #16
   52ef0:	rsb	fp, fp, ip
   52ef4:	umull	r2, r3, r1, r0
   52ef8:	cmp	fp, r3
   52efc:	bcc	52f20 <zcfree@@Base+0x18f0>
   52f00:	movne	r4, #0
   52f04:	moveq	r4, #1
   52f08:	cmp	r2, r7, lsl r5
   52f0c:	movls	r4, #0
   52f10:	andhi	r4, r4, #1
   52f14:	cmp	r4, #0
   52f18:	moveq	r3, r1
   52f1c:	beq	52be4 <zcfree@@Base+0x15b4>
   52f20:	sub	r3, r1, #1
   52f24:	mov	r4, #0
   52f28:	b	52be4 <zcfree@@Base+0x15b4>
   52f2c:	mov	fp, r3
   52f30:	b	52cc0 <zcfree@@Base+0x1690>
   52f34:	mov	r2, r1
   52f38:	b	52ee8 <zcfree@@Base+0x18b8>
   52f3c:	mov	r8, r2
   52f40:	b	52e88 <zcfree@@Base+0x1858>
   52f44:	mov	r3, r2
   52f48:	b	52da4 <zcfree@@Base+0x1774>
   52f4c:	cmp	r3, #0
   52f50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   52f54:	mov	r6, r0
   52f58:	sub	sp, sp, #12
   52f5c:	mov	r5, r1
   52f60:	mov	r7, r0
   52f64:	mov	r4, r2
   52f68:	mov	r8, r1
   52f6c:	bne	5304c <zcfree@@Base+0x1a1c>
   52f70:	cmp	r2, r1
   52f74:	bls	53088 <zcfree@@Base+0x1a58>
   52f78:	clz	r3, r2
   52f7c:	cmp	r3, #0
   52f80:	rsbne	r8, r3, #32
   52f84:	lslne	r4, r2, r3
   52f88:	lsrne	r8, r0, r8
   52f8c:	lslne	r7, r0, r3
   52f90:	orrne	r8, r8, r1, lsl r3
   52f94:	lsr	r5, r4, #16
   52f98:	uxth	sl, r4
   52f9c:	mov	r1, r5
   52fa0:	mov	r0, r8
   52fa4:	bl	52568 <zcfree@@Base+0xf38>
   52fa8:	mov	r1, r5
   52fac:	mov	r9, r0
   52fb0:	mov	r0, r8
   52fb4:	bl	52754 <zcfree@@Base+0x1124>
   52fb8:	mul	r0, sl, r9
   52fbc:	lsr	r3, r7, #16
   52fc0:	orr	r1, r3, r1, lsl #16
   52fc4:	cmp	r0, r1
   52fc8:	bls	52fec <zcfree@@Base+0x19bc>
   52fcc:	adds	r1, r1, r4
   52fd0:	sub	r2, r9, #1
   52fd4:	bcs	52fe8 <zcfree@@Base+0x19b8>
   52fd8:	cmp	r0, r1
   52fdc:	subhi	r9, r9, #2
   52fe0:	addhi	r1, r1, r4
   52fe4:	bhi	52fec <zcfree@@Base+0x19bc>
   52fe8:	mov	r9, r2
   52fec:	rsb	r8, r0, r1
   52ff0:	mov	r1, r5
   52ff4:	uxth	r7, r7
   52ff8:	mov	r0, r8
   52ffc:	bl	52568 <zcfree@@Base+0xf38>
   53000:	mov	r1, r5
   53004:	mov	r6, r0
   53008:	mov	r0, r8
   5300c:	bl	52754 <zcfree@@Base+0x1124>
   53010:	mul	sl, sl, r6
   53014:	orr	r1, r7, r1, lsl #16
   53018:	cmp	sl, r1
   5301c:	bls	53038 <zcfree@@Base+0x1a08>
   53020:	adds	r4, r1, r4
   53024:	sub	r3, r6, #1
   53028:	bcs	53334 <zcfree@@Base+0x1d04>
   5302c:	cmp	sl, r4
   53030:	subhi	r6, r6, #2
   53034:	bls	53334 <zcfree@@Base+0x1d04>
   53038:	orr	r0, r6, r9, lsl #16
   5303c:	mov	r6, #0
   53040:	mov	r1, r6
   53044:	add	sp, sp, #12
   53048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5304c:	cmp	r3, r1
   53050:	movhi	r6, #0
   53054:	movhi	r0, r6
   53058:	bhi	53040 <zcfree@@Base+0x1a10>
   5305c:	clz	r7, r3
   53060:	cmp	r7, #0
   53064:	bne	53164 <zcfree@@Base+0x1b34>
   53068:	cmp	r3, r1
   5306c:	cmpcs	r2, r6
   53070:	movhi	r6, #0
   53074:	movls	r6, #1
   53078:	movls	r0, #1
   5307c:	movls	r6, r7
   53080:	movhi	r0, r6
   53084:	b	53040 <zcfree@@Base+0x1a10>
   53088:	cmp	r2, #0
   5308c:	bne	530a0 <zcfree@@Base+0x1a70>
   53090:	mov	r1, r2
   53094:	mov	r0, #1
   53098:	bl	52568 <zcfree@@Base+0xf38>
   5309c:	mov	r4, r0
   530a0:	clz	r3, r4
   530a4:	cmp	r3, #0
   530a8:	bne	53260 <zcfree@@Base+0x1c30>
   530ac:	rsb	r5, r4, r5
   530b0:	lsr	r8, r4, #16
   530b4:	uxth	sl, r4
   530b8:	mov	r6, #1
   530bc:	mov	r1, r8
   530c0:	mov	r0, r5
   530c4:	bl	52568 <zcfree@@Base+0xf38>
   530c8:	mov	r1, r8
   530cc:	mov	r9, r0
   530d0:	mov	r0, r5
   530d4:	bl	52754 <zcfree@@Base+0x1124>
   530d8:	mul	r0, sl, r9
   530dc:	lsr	r3, r7, #16
   530e0:	orr	r1, r3, r1, lsl #16
   530e4:	cmp	r0, r1
   530e8:	bls	53108 <zcfree@@Base+0x1ad8>
   530ec:	adds	r1, r1, r4
   530f0:	sub	r2, r9, #1
   530f4:	bcs	5333c <zcfree@@Base+0x1d0c>
   530f8:	cmp	r0, r1
   530fc:	subhi	r9, r9, #2
   53100:	addhi	r1, r1, r4
   53104:	bls	5333c <zcfree@@Base+0x1d0c>
   53108:	rsb	fp, r0, r1
   5310c:	mov	r1, r8
   53110:	uxth	r7, r7
   53114:	mov	r0, fp
   53118:	bl	52568 <zcfree@@Base+0xf38>
   5311c:	mov	r1, r8
   53120:	mov	r5, r0
   53124:	mov	r0, fp
   53128:	bl	52754 <zcfree@@Base+0x1124>
   5312c:	mul	sl, sl, r5
   53130:	orr	r1, r7, r1, lsl #16
   53134:	cmp	sl, r1
   53138:	bls	53154 <zcfree@@Base+0x1b24>
   5313c:	adds	r4, r1, r4
   53140:	sub	r3, r5, #1
   53144:	bcs	53344 <zcfree@@Base+0x1d14>
   53148:	cmp	sl, r4
   5314c:	subhi	r5, r5, #2
   53150:	bls	53344 <zcfree@@Base+0x1d14>
   53154:	orr	r0, r5, r9, lsl #16
   53158:	mov	r1, r6
   5315c:	add	sp, sp, #12
   53160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   53164:	rsb	r1, r7, #32
   53168:	lsl	r0, r2, r7
   5316c:	lsr	r2, r2, r1
   53170:	lsr	fp, r5, r1
   53174:	orr	r8, r2, r3, lsl r7
   53178:	lsr	r1, r6, r1
   5317c:	str	r0, [sp, #4]
   53180:	orr	r5, r1, r5, lsl r7
   53184:	lsr	r9, r8, #16
   53188:	mov	r0, fp
   5318c:	uxth	sl, r8
   53190:	mov	r1, r9
   53194:	bl	52568 <zcfree@@Base+0xf38>
   53198:	mov	r1, r9
   5319c:	mov	r4, r0
   531a0:	mov	r0, fp
   531a4:	bl	52754 <zcfree@@Base+0x1124>
   531a8:	mul	r0, sl, r4
   531ac:	lsr	ip, r5, #16
   531b0:	orr	r1, ip, r1, lsl #16
   531b4:	cmp	r0, r1
   531b8:	bls	531cc <zcfree@@Base+0x1b9c>
   531bc:	adds	r1, r1, r8
   531c0:	sub	r2, r4, #1
   531c4:	bcc	53360 <zcfree@@Base+0x1d30>
   531c8:	mov	r4, r2
   531cc:	rsb	ip, r0, r1
   531d0:	mov	r1, r9
   531d4:	str	ip, [sp]
   531d8:	uxth	r5, r5
   531dc:	mov	r0, ip
   531e0:	bl	52568 <zcfree@@Base+0xf38>
   531e4:	ldr	ip, [sp]
   531e8:	mov	r1, r9
   531ec:	mov	fp, r0
   531f0:	mov	r0, ip
   531f4:	bl	52754 <zcfree@@Base+0x1124>
   531f8:	mul	sl, sl, fp
   531fc:	orr	r1, r5, r1, lsl #16
   53200:	cmp	sl, r1
   53204:	bls	53218 <zcfree@@Base+0x1be8>
   53208:	adds	r1, r1, r8
   5320c:	sub	r2, fp, #1
   53210:	bcc	5334c <zcfree@@Base+0x1d1c>
   53214:	mov	fp, r2
   53218:	ldr	r3, [sp, #4]
   5321c:	orr	r0, fp, r4, lsl #16
   53220:	rsb	sl, sl, r1
   53224:	umull	r4, r5, r0, r3
   53228:	cmp	sl, r5
   5322c:	bcc	5324c <zcfree@@Base+0x1c1c>
   53230:	movne	r3, #0
   53234:	moveq	r3, #1
   53238:	cmp	r4, r6, lsl r7
   5323c:	movls	r6, #0
   53240:	andhi	r6, r3, #1
   53244:	cmp	r6, #0
   53248:	beq	53040 <zcfree@@Base+0x1a10>
   5324c:	mov	r6, #0
   53250:	sub	r0, r0, #1
   53254:	mov	r1, r6
   53258:	add	sp, sp, #12
   5325c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   53260:	lsl	r4, r4, r3
   53264:	rsb	r9, r3, #32
   53268:	lsr	r2, r5, r9
   5326c:	lsr	r9, r6, r9
   53270:	lsr	r8, r4, #16
   53274:	orr	r9, r9, r5, lsl r3
   53278:	mov	r0, r2
   5327c:	lsl	r7, r6, r3
   53280:	mov	r1, r8
   53284:	str	r2, [sp]
   53288:	bl	52568 <zcfree@@Base+0xf38>
   5328c:	ldr	r2, [sp]
   53290:	mov	r1, r8
   53294:	uxth	sl, r4
   53298:	mov	fp, r0
   5329c:	mov	r0, r2
   532a0:	bl	52754 <zcfree@@Base+0x1124>
   532a4:	mul	r0, sl, fp
   532a8:	lsr	r3, r9, #16
   532ac:	orr	r1, r3, r1, lsl #16
   532b0:	cmp	r0, r1
   532b4:	bls	532d4 <zcfree@@Base+0x1ca4>
   532b8:	adds	r1, r1, r4
   532bc:	sub	r3, fp, #1
   532c0:	bcs	53374 <zcfree@@Base+0x1d44>
   532c4:	cmp	r0, r1
   532c8:	subhi	fp, fp, #2
   532cc:	addhi	r1, r1, r4
   532d0:	bls	53374 <zcfree@@Base+0x1d44>
   532d4:	rsb	r5, r0, r1
   532d8:	mov	r1, r8
   532dc:	uxth	r9, r9
   532e0:	mov	r0, r5
   532e4:	bl	52568 <zcfree@@Base+0xf38>
   532e8:	mov	r1, r8
   532ec:	mov	r6, r0
   532f0:	mov	r0, r5
   532f4:	bl	52754 <zcfree@@Base+0x1124>
   532f8:	mul	r5, sl, r6
   532fc:	orr	r1, r9, r1, lsl #16
   53300:	cmp	r5, r1
   53304:	bls	53328 <zcfree@@Base+0x1cf8>
   53308:	adds	r1, r1, r4
   5330c:	sub	r3, r6, #1
   53310:	bcs	53324 <zcfree@@Base+0x1cf4>
   53314:	cmp	r5, r1
   53318:	subhi	r6, r6, #2
   5331c:	addhi	r1, r1, r4
   53320:	bhi	53328 <zcfree@@Base+0x1cf8>
   53324:	mov	r6, r3
   53328:	rsb	r5, r5, r1
   5332c:	orr	r6, r6, fp, lsl #16
   53330:	b	530bc <zcfree@@Base+0x1a8c>
   53334:	mov	r6, r3
   53338:	b	53038 <zcfree@@Base+0x1a08>
   5333c:	mov	r9, r2
   53340:	b	53108 <zcfree@@Base+0x1ad8>
   53344:	mov	r5, r3
   53348:	b	53154 <zcfree@@Base+0x1b24>
   5334c:	cmp	sl, r1
   53350:	subhi	fp, fp, #2
   53354:	addhi	r1, r1, r8
   53358:	bhi	53218 <zcfree@@Base+0x1be8>
   5335c:	b	53214 <zcfree@@Base+0x1be4>
   53360:	cmp	r0, r1
   53364:	subhi	r4, r4, #2
   53368:	addhi	r1, r1, r8
   5336c:	bhi	531cc <zcfree@@Base+0x1b9c>
   53370:	b	531c8 <zcfree@@Base+0x1b98>
   53374:	mov	fp, r3
   53378:	b	532d4 <zcfree@@Base+0x1ca4>
   5337c:	ldr	r3, [r0]
   53380:	tst	r3, #1073741824	; 0x40000000
   53384:	orrne	r3, r3, #-2147483648	; 0x80000000
   53388:	biceq	r3, r3, #-2147483648	; 0x80000000
   5338c:	add	r0, r0, r3
   53390:	bx	lr
   53394:	cmp	r1, #0
   53398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5339c:	mov	r6, r0
   533a0:	sub	sp, sp, #12
   533a4:	mov	r9, r2
   533a8:	beq	5342c <zcfree@@Base+0x1dfc>
   533ac:	sub	r1, r1, #1
   533b0:	mov	r7, #0
   533b4:	str	r1, [sp, #4]
   533b8:	mov	r8, r1
   533bc:	add	r4, r7, r8
   533c0:	add	r4, r4, r4, lsr #31
   533c4:	asr	r4, r4, #1
   533c8:	lsl	r5, r4, #3
   533cc:	add	fp, r6, r5
   533d0:	mov	r0, fp
   533d4:	bl	5337c <zcfree@@Base+0x1d4c>
   533d8:	ldr	r3, [sp, #4]
   533dc:	cmp	r3, r4
   533e0:	mov	sl, r0
   533e4:	add	r0, r5, #8
   533e8:	add	r0, r6, r0
   533ec:	beq	5343c <zcfree@@Base+0x1e0c>
   533f0:	bl	5337c <zcfree@@Base+0x1d4c>
   533f4:	cmp	sl, r9
   533f8:	sub	r0, r0, #1
   533fc:	bls	5341c <zcfree@@Base+0x1dec>
   53400:	cmp	r4, r7
   53404:	sub	r8, r4, #1
   53408:	bne	533bc <zcfree@@Base+0x1d8c>
   5340c:	mov	fp, #0
   53410:	mov	r0, fp
   53414:	add	sp, sp, #12
   53418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5341c:	cmp	r0, r9
   53420:	add	r7, r4, #1
   53424:	bcc	533bc <zcfree@@Base+0x1d8c>
   53428:	b	53410 <zcfree@@Base+0x1de0>
   5342c:	mov	fp, r1
   53430:	mov	r0, fp
   53434:	add	sp, sp, #12
   53438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5343c:	cmp	sl, r9
   53440:	bhi	53400 <zcfree@@Base+0x1dd0>
   53444:	b	53410 <zcfree@@Base+0x1de0>
   53448:	cmp	r0, #1
   5344c:	beq	53480 <zcfree@@Base+0x1e50>
   53450:	cmp	r0, #2
   53454:	beq	53474 <zcfree@@Base+0x1e44>
   53458:	cmp	r0, #0
   5345c:	beq	53468 <zcfree@@Base+0x1e38>
   53460:	mov	r0, #0
   53464:	bx	lr
   53468:	ldr	r0, [pc, #28]	; 5348c <zcfree@@Base+0x1e5c>
   5346c:	add	r0, pc, r0
   53470:	bx	lr
   53474:	ldr	r0, [pc, #20]	; 53490 <zcfree@@Base+0x1e60>
   53478:	add	r0, pc, r0
   5347c:	bx	lr
   53480:	ldr	r0, [pc, #12]	; 53494 <zcfree@@Base+0x1e64>
   53484:	add	r0, pc, r0
   53488:	bx	lr
   5348c:	andeq	r0, r0, r0, lsl #23
   53490:	andeq	r0, r0, r4, lsl #23
   53494:	andeq	r0, r0, r0, ror fp
   53498:	ldr	r3, [pc, #276]	; 535b4 <zcfree@@Base+0x1f84>
   5349c:	ldr	r2, [pc, #276]	; 535b8 <zcfree@@Base+0x1f88>
   534a0:	add	r3, pc, r3
   534a4:	push	{r4, r5, lr}
   534a8:	mov	r4, r0
   534ac:	ldr	r2, [r3, r2]
   534b0:	sub	sp, sp, #12
   534b4:	sub	r5, r1, #2
   534b8:	cmp	r2, #0
   534bc:	beq	53594 <zcfree@@Base+0x1f64>
   534c0:	mov	r0, r5
   534c4:	add	r1, sp, #4
   534c8:	bl	1120c <__gnu_Unwind_Find_exidx@plt>
   534cc:	cmp	r0, #0
   534d0:	beq	53560 <zcfree@@Base+0x1f30>
   534d4:	mov	r2, r5
   534d8:	ldr	r1, [sp, #4]
   534dc:	bl	53394 <zcfree@@Base+0x1d64>
   534e0:	subs	r5, r0, #0
   534e4:	beq	53560 <zcfree@@Base+0x1f30>
   534e8:	bl	5337c <zcfree@@Base+0x1d4c>
   534ec:	ldr	r3, [r5, #4]
   534f0:	cmp	r3, #1
   534f4:	str	r0, [r4, #72]	; 0x48
   534f8:	beq	53548 <zcfree@@Base+0x1f18>
   534fc:	cmp	r3, #0
   53500:	add	r0, r5, #4
   53504:	strlt	r0, [r4, #76]	; 0x4c
   53508:	movlt	r3, #1
   5350c:	strlt	r3, [r4, #80]	; 0x50
   53510:	blt	53524 <zcfree@@Base+0x1ef4>
   53514:	bl	5337c <zcfree@@Base+0x1d4c>
   53518:	mov	r3, #0
   5351c:	str	r3, [r4, #80]	; 0x50
   53520:	str	r0, [r4, #76]	; 0x4c
   53524:	ldr	r3, [r0]
   53528:	cmp	r3, #0
   5352c:	blt	53578 <zcfree@@Base+0x1f48>
   53530:	bl	5337c <zcfree@@Base+0x1d4c>
   53534:	mov	r3, #0
   53538:	str	r0, [r4, #16]
   5353c:	mov	r0, r3
   53540:	add	sp, sp, #12
   53544:	pop	{r4, r5, pc}
   53548:	mov	r3, #5
   5354c:	mov	r2, #0
   53550:	mov	r0, r3
   53554:	str	r2, [r4, #16]
   53558:	add	sp, sp, #12
   5355c:	pop	{r4, r5, pc}
   53560:	mov	r3, #9
   53564:	mov	r2, #0
   53568:	mov	r0, r3
   5356c:	str	r2, [r4, #16]
   53570:	add	sp, sp, #12
   53574:	pop	{r4, r5, pc}
   53578:	ubfx	r0, r3, #24, #4
   5357c:	bl	53448 <zcfree@@Base+0x1e18>
   53580:	cmp	r0, #0
   53584:	str	r0, [r4, #16]
   53588:	moveq	r3, #9
   5358c:	movne	r3, #0
   53590:	b	5353c <zcfree@@Base+0x1f0c>
   53594:	ldr	r2, [pc, #32]	; 535bc <zcfree@@Base+0x1f8c>
   53598:	ldr	r1, [pc, #32]	; 535c0 <zcfree@@Base+0x1f90>
   5359c:	ldr	r2, [r3, r2]
   535a0:	ldr	r0, [r3, r1]
   535a4:	rsb	r3, r0, r2
   535a8:	asr	r3, r3, #3
   535ac:	str	r3, [sp, #4]
   535b0:	b	534d4 <zcfree@@Base+0x1ea4>
   535b4:	andeq	pc, r3, r8, asr fp	; <UNPREDICTABLE>
   535b8:	andeq	r0, r0, r4, lsr #2
   535bc:	andeq	r0, r0, ip, lsr #2
   535c0:	andeq	r0, r0, r8, lsr r1
   535c4:	ldr	r3, [r0]
   535c8:	push	{r4, lr}
   535cc:	tst	r3, #1
   535d0:	mov	r4, r0
   535d4:	bne	535ec <zcfree@@Base+0x1fbc>
   535d8:	tst	r3, #2
   535dc:	add	r0, r0, #72	; 0x48
   535e0:	beq	53610 <zcfree@@Base+0x1fe0>
   535e4:	bl	543bc <zcfree@@Base+0x2d8c>
   535e8:	ldr	r3, [r4]
   535ec:	tst	r3, #4
   535f0:	beq	53620 <zcfree@@Base+0x1ff0>
   535f4:	tst	r3, #8
   535f8:	beq	53634 <zcfree@@Base+0x2004>
   535fc:	tst	r3, #16
   53600:	popne	{r4, pc}
   53604:	add	r0, r4, #464	; 0x1d0
   53608:	pop	{r4, lr}
   5360c:	b	54464 <zcfree@@Base+0x2e34>
   53610:	bl	543ac <zcfree@@Base+0x2d7c>
   53614:	ldr	r3, [r4]
   53618:	tst	r3, #4
   5361c:	bne	535f4 <zcfree@@Base+0x1fc4>
   53620:	add	r0, r4, #208	; 0xd0
   53624:	bl	543cc <zcfree@@Base+0x2d9c>
   53628:	ldr	r3, [r4]
   5362c:	tst	r3, #8
   53630:	bne	535fc <zcfree@@Base+0x1fcc>
   53634:	add	r0, r4, #336	; 0x150
   53638:	bl	543dc <zcfree@@Base+0x2dac>
   5363c:	ldr	r3, [r4]
   53640:	tst	r3, #16
   53644:	popne	{r4, pc}
   53648:	b	53604 <zcfree@@Base+0x1fd4>
   5364c:	ldr	r3, [r0]
   53650:	cmp	r3, #0
   53654:	ldrne	r0, [r3, r0]
   53658:	moveq	r0, r3
   5365c:	bx	lr
   53660:	mov	r0, #9
   53664:	bx	lr
   53668:	nop	{0}
   5366c:	bx	lr
   53670:	push	{r4, r5, r6, lr}
   53674:	mov	r4, r0
   53678:	mov	r5, r1
   5367c:	b	536a4 <zcfree@@Base+0x2074>
   53680:	ldr	ip, [r5, #64]	; 0x40
   53684:	mov	r0, #1
   53688:	ldr	r3, [r4, #16]
   5368c:	mov	r1, r4
   53690:	mov	r2, r5
   53694:	str	ip, [r4, #20]
   53698:	blx	r3
   5369c:	cmp	r0, #8
   536a0:	bne	536bc <zcfree@@Base+0x208c>
   536a4:	mov	r0, r4
   536a8:	ldr	r1, [r5, #64]	; 0x40
   536ac:	bl	53498 <zcfree@@Base+0x1e68>
   536b0:	subs	r6, r0, #0
   536b4:	beq	53680 <zcfree@@Base+0x2050>
   536b8:	bl	113ec <abort@plt>
   536bc:	cmp	r0, #7
   536c0:	bne	536b8 <zcfree@@Base+0x2088>
   536c4:	mov	r0, r6
   536c8:	ldr	r1, [r5, #64]	; 0x40
   536cc:	bl	53668 <zcfree@@Base+0x2038>
   536d0:	add	r0, r5, #4
   536d4:	bl	54398 <zcfree@@Base+0x2d68>
   536d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   536dc:	add	r5, r1, #4
   536e0:	sub	sp, sp, #980	; 0x3d4
   536e4:	mov	r4, r0
   536e8:	mov	ip, r2
   536ec:	add	r3, sp, #20
   536f0:	str	r3, [sp, #12]
   536f4:	add	lr, sp, #20
   536f8:	ldm	r5!, {r0, r1, r2, r3}
   536fc:	cmp	ip, #0
   53700:	ldr	r9, [r4, #12]
   53704:	mov	r8, #0
   53708:	ldr	sl, [r4, #24]
   5370c:	movne	fp, #10
   53710:	moveq	fp, #9
   53714:	add	r6, sp, #16
   53718:	stmia	lr!, {r0, r1, r2, r3}
   5371c:	add	r7, sp, #496	; 0x1f0
   53720:	ldm	r5!, {r0, r1, r2, r3}
   53724:	stmia	lr!, {r0, r1, r2, r3}
   53728:	ldm	r5!, {r0, r1, r2, r3}
   5372c:	stmia	lr!, {r0, r1, r2, r3}
   53730:	ldm	r5, {r0, r1, r2, r3}
   53734:	stm	lr, {r0, r1, r2, r3}
   53738:	mov	r0, r4
   5373c:	ldr	r1, [sp, #80]	; 0x50
   53740:	str	r8, [sp, #16]
   53744:	bl	53498 <zcfree@@Base+0x1e68>
   53748:	mov	r5, r0
   5374c:	cmp	r5, #0
   53750:	beq	5378c <zcfree@@Base+0x215c>
   53754:	ldr	r0, [sp, #72]	; 0x48
   53758:	mov	r2, r4
   5375c:	str	r6, [sp]
   53760:	orr	r1, fp, #16
   53764:	str	sl, [sp, #4]
   53768:	mov	r3, r4
   5376c:	str	r0, [sp, #84]	; 0x54
   53770:	mov	r0, #1
   53774:	blx	r9
   53778:	cmp	r0, #0
   5377c:	bne	53820 <zcfree@@Base+0x21f0>
   53780:	mov	r0, r5
   53784:	add	sp, sp, #980	; 0x3d4
   53788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5378c:	ldr	r3, [sp, #80]	; 0x50
   53790:	mov	r1, r6
   53794:	mov	r2, #480	; 0x1e0
   53798:	mov	r0, r7
   5379c:	str	r3, [r4, #20]
   537a0:	bl	11134 <memcpy@plt>
   537a4:	ldr	r3, [r4, #16]
   537a8:	mov	r1, r4
   537ac:	mov	r2, r7
   537b0:	mov	r0, fp
   537b4:	blx	r3
   537b8:	ldr	r3, [sp, #552]	; 0x228
   537bc:	mov	r1, fp
   537c0:	str	r6, [sp]
   537c4:	str	sl, [sp, #4]
   537c8:	mov	r2, r4
   537cc:	str	r3, [sp, #84]	; 0x54
   537d0:	mov	r3, r4
   537d4:	mov	r8, r0
   537d8:	mov	r0, #1
   537dc:	blx	r9
   537e0:	cmp	r0, #0
   537e4:	bne	53820 <zcfree@@Base+0x21f0>
   537e8:	mov	r0, r6
   537ec:	mov	r1, r7
   537f0:	mov	r2, #480	; 0x1e0
   537f4:	bl	11134 <memcpy@plt>
   537f8:	cmp	r8, #8
   537fc:	bne	53818 <zcfree@@Base+0x21e8>
   53800:	mov	r0, r4
   53804:	ldr	r1, [sp, #80]	; 0x50
   53808:	bl	53498 <zcfree@@Base+0x1e68>
   5380c:	mov	fp, #9
   53810:	mov	r5, r0
   53814:	b	5374c <zcfree@@Base+0x211c>
   53818:	cmp	r8, #7
   5381c:	beq	5382c <zcfree@@Base+0x21fc>
   53820:	mov	r0, #9
   53824:	add	sp, sp, #980	; 0x3d4
   53828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5382c:	mov	r0, r5
   53830:	ldr	r1, [sp, #80]	; 0x50
   53834:	bl	53668 <zcfree@@Base+0x2038>
   53838:	add	r0, sp, #20
   5383c:	bl	54398 <zcfree@@Base+0x2d68>
   53840:	ldr	r0, [r0, #68]	; 0x44
   53844:	bx	lr
   53848:	ldr	r3, [r1, #60]	; 0x3c
   5384c:	push	{r4, r5, r6, r7, lr}
   53850:	add	lr, r1, #4
   53854:	str	r3, [r1, #64]	; 0x40
   53858:	mov	r7, r1
   5385c:	mov	r4, r0
   53860:	sub	sp, sp, #484	; 0x1e4
   53864:	ldm	lr!, {r0, r1, r2, r3}
   53868:	add	ip, sp, #4
   5386c:	add	r6, sp, #480	; 0x1e0
   53870:	mvn	r5, #0
   53874:	stmia	ip!, {r0, r1, r2, r3}
   53878:	ldm	lr!, {r0, r1, r2, r3}
   5387c:	stmia	ip!, {r0, r1, r2, r3}
   53880:	ldm	lr!, {r0, r1, r2, r3}
   53884:	stmia	ip!, {r0, r1, r2, r3}
   53888:	ldm	lr, {r0, r1, r2, r3}
   5388c:	stm	ip, {r0, r1, r2, r3}
   53890:	str	r5, [r6, #-480]!	; 0xfffffe20
   53894:	b	538b4 <zcfree@@Base+0x2284>
   53898:	ldr	r3, [r4, #16]
   5389c:	mov	r1, r4
   538a0:	mov	r2, sp
   538a4:	blx	r3
   538a8:	cmp	r0, #8
   538ac:	mov	r5, r0
   538b0:	bne	538d4 <zcfree@@Base+0x22a4>
   538b4:	mov	r0, r4
   538b8:	ldr	r1, [sp, #64]	; 0x40
   538bc:	bl	53498 <zcfree@@Base+0x1e68>
   538c0:	cmp	r0, #0
   538c4:	beq	53898 <zcfree@@Base+0x2268>
   538c8:	mov	r0, #9
   538cc:	add	sp, sp, #484	; 0x1e4
   538d0:	pop	{r4, r5, r6, r7, pc}
   538d4:	mov	r0, sp
   538d8:	bl	535c4 <zcfree@@Base+0x1f94>
   538dc:	cmp	r5, #6
   538e0:	bne	538c8 <zcfree@@Base+0x2298>
   538e4:	mov	r0, r4
   538e8:	mov	r1, r7
   538ec:	bl	53670 <zcfree@@Base+0x2040>
   538f0:	push	{r4}		; (str r4, [sp, #-4]!)
   538f4:	ldr	r4, [r3, #60]	; 0x3c
   538f8:	str	r1, [r0, #12]
   538fc:	mov	r1, r3
   53900:	str	r2, [r0, #24]
   53904:	mov	r2, #0
   53908:	str	r4, [r3, #64]	; 0x40
   5390c:	pop	{r4}		; (ldr r4, [sp], #4)
   53910:	b	536d8 <zcfree@@Base+0x20a8>
   53914:	push	{r4, r5, r6, lr}
   53918:	mov	r4, r0
   5391c:	ldr	r6, [r0, #12]
   53920:	mov	r5, r1
   53924:	ldr	r3, [r0, #20]
   53928:	cmp	r6, #0
   5392c:	str	r3, [r1, #64]	; 0x40
   53930:	beq	53940 <zcfree@@Base+0x2310>
   53934:	mov	r2, #1
   53938:	bl	536d8 <zcfree@@Base+0x20a8>
   5393c:	bl	113ec <abort@plt>
   53940:	ldr	r3, [r0, #16]
   53944:	mov	r1, r4
   53948:	mov	r0, #2
   5394c:	mov	r2, r5
   53950:	blx	r3
   53954:	cmp	r0, #7
   53958:	beq	53974 <zcfree@@Base+0x2344>
   5395c:	cmp	r0, #8
   53960:	bne	53970 <zcfree@@Base+0x2340>
   53964:	mov	r0, r4
   53968:	mov	r1, r5
   5396c:	bl	53670 <zcfree@@Base+0x2040>
   53970:	bl	113ec <abort@plt>
   53974:	mov	r0, r6
   53978:	ldr	r1, [r5, #64]	; 0x40
   5397c:	bl	53668 <zcfree@@Base+0x2038>
   53980:	add	r0, r5, #4
   53984:	bl	54398 <zcfree@@Base+0x2d68>
   53988:	ldr	r2, [r0, #12]
   5398c:	cmp	r2, #0
   53990:	beq	539a4 <zcfree@@Base+0x2374>
   53994:	ldr	ip, [r1, #60]	; 0x3c
   53998:	mov	r2, #0
   5399c:	str	ip, [r1, #64]	; 0x40
   539a0:	b	536d8 <zcfree@@Base+0x20a8>
   539a4:	b	53848 <zcfree@@Base+0x2218>
   539a8:	bx	lr
   539ac:	push	{r3, lr}
   539b0:	ldr	r3, [r0, #8]
   539b4:	cmp	r3, #0
   539b8:	popeq	{r3, pc}
   539bc:	mov	r1, r0
   539c0:	mov	r0, #1
   539c4:	blx	r3
   539c8:	pop	{r3, pc}
   539cc:	cmp	r1, #4
   539d0:	addls	pc, pc, r1, lsl #2
   539d4:	b	53a08 <zcfree@@Base+0x23d8>
   539d8:	b	539f4 <zcfree@@Base+0x23c4>
   539dc:	b	539ec <zcfree@@Base+0x23bc>
   539e0:	b	53a08 <zcfree@@Base+0x23d8>
   539e4:	b	539ec <zcfree@@Base+0x23bc>
   539e8:	b	539ec <zcfree@@Base+0x23bc>
   539ec:	mov	r0, #1
   539f0:	bx	lr
   539f4:	cmp	r2, #15
   539f8:	cmpls	r3, #0
   539fc:	moveq	r3, #0
   53a00:	movne	r3, #1
   53a04:	beq	53a10 <zcfree@@Base+0x23e0>
   53a08:	mov	r0, #2
   53a0c:	bx	lr
   53a10:	add	r2, r0, r2, lsl #2
   53a14:	mov	r0, r3
   53a18:	ldr	r3, [r2, #4]
   53a1c:	ldr	r2, [sp]
   53a20:	str	r3, [r2]
   53a24:	bx	lr
   53a28:	push	{lr}		; (str lr, [sp, #-4]!)
   53a2c:	sub	sp, sp, #20
   53a30:	mov	r2, r1
   53a34:	mov	r1, #0
   53a38:	add	ip, sp, #12
   53a3c:	mov	r3, r1
   53a40:	str	ip, [sp]
   53a44:	bl	539cc <zcfree@@Base+0x239c>
   53a48:	ldr	r0, [sp, #12]
   53a4c:	add	sp, sp, #20
   53a50:	pop	{pc}		; (ldr pc, [sp], #4)
   53a54:	cmp	r1, #4
   53a58:	addls	pc, pc, r1, lsl #2
   53a5c:	b	53a90 <zcfree@@Base+0x2460>
   53a60:	b	53a7c <zcfree@@Base+0x244c>
   53a64:	b	53a74 <zcfree@@Base+0x2444>
   53a68:	b	53a90 <zcfree@@Base+0x2460>
   53a6c:	b	53a74 <zcfree@@Base+0x2444>
   53a70:	b	53a74 <zcfree@@Base+0x2444>
   53a74:	mov	r0, #1
   53a78:	bx	lr
   53a7c:	cmp	r2, #15
   53a80:	cmpls	r3, #0
   53a84:	moveq	r3, #0
   53a88:	movne	r3, #1
   53a8c:	beq	53a98 <zcfree@@Base+0x2468>
   53a90:	mov	r0, #2
   53a94:	bx	lr
   53a98:	ldr	ip, [sp]
   53a9c:	add	r2, r0, r2, lsl #2
   53aa0:	mov	r0, r3
   53aa4:	ldr	r1, [ip]
   53aa8:	str	r1, [r2, #4]
   53aac:	bx	lr
   53ab0:	push	{lr}		; (str lr, [sp, #-4]!)
   53ab4:	sub	sp, sp, #20
   53ab8:	add	ip, sp, #16
   53abc:	mov	lr, r1
   53ac0:	mov	r1, #0
   53ac4:	str	r2, [ip, #-4]!
   53ac8:	mov	r3, r1
   53acc:	str	ip, [sp]
   53ad0:	mov	r2, lr
   53ad4:	bl	53a54 <zcfree@@Base+0x2424>
   53ad8:	add	sp, sp, #20
   53adc:	pop	{pc}		; (ldr pc, [sp], #4)
   53ae0:	ldr	r3, [r2, #60]	; 0x3c
   53ae4:	push	{r4, r5, r6, r7, r8, lr}
   53ae8:	add	lr, r2, #4
   53aec:	str	r3, [r2, #64]	; 0x40
   53af0:	mov	r8, r0
   53af4:	mov	r7, r1
   53af8:	sub	sp, sp, #568	; 0x238
   53afc:	ldm	lr!, {r0, r1, r2, r3}
   53b00:	add	ip, sp, #92	; 0x5c
   53b04:	mvn	r6, #0
   53b08:	add	r4, sp, #88	; 0x58
   53b0c:	stmia	ip!, {r0, r1, r2, r3}
   53b10:	ldm	lr!, {r0, r1, r2, r3}
   53b14:	stmia	ip!, {r0, r1, r2, r3}
   53b18:	ldm	lr!, {r0, r1, r2, r3}
   53b1c:	stmia	ip!, {r0, r1, r2, r3}
   53b20:	ldm	lr, {r0, r1, r2, r3}
   53b24:	stm	ip, {r0, r1, r2, r3}
   53b28:	str	r6, [sp, #88]	; 0x58
   53b2c:	b	53b6c <zcfree@@Base+0x253c>
   53b30:	bl	53ab0 <zcfree@@Base+0x2480>
   53b34:	mov	r1, r7
   53b38:	mov	r0, r4
   53b3c:	blx	r8
   53b40:	mov	r1, sp
   53b44:	mov	r2, r4
   53b48:	cmp	r0, #0
   53b4c:	mov	r0, #8
   53b50:	bne	53b8c <zcfree@@Base+0x255c>
   53b54:	ldr	r3, [sp, #16]
   53b58:	blx	r3
   53b5c:	cmp	r0, #9
   53b60:	cmpne	r0, #5
   53b64:	mov	r6, r0
   53b68:	beq	53b90 <zcfree@@Base+0x2560>
   53b6c:	ldr	r1, [sp, #152]	; 0x98
   53b70:	mov	r0, sp
   53b74:	bl	53498 <zcfree@@Base+0x1e68>
   53b78:	mov	r2, sp
   53b7c:	mov	r1, #12
   53b80:	cmp	r0, #0
   53b84:	mov	r0, r4
   53b88:	beq	53b30 <zcfree@@Base+0x2500>
   53b8c:	mov	r6, #9
   53b90:	mov	r0, r4
   53b94:	bl	535c4 <zcfree@@Base+0x1f94>
   53b98:	mov	r0, r6
   53b9c:	add	sp, sp, #568	; 0x238
   53ba0:	pop	{r4, r5, r6, r7, r8, pc}
   53ba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   53ba8:	mov	r4, r1
   53bac:	ldr	r1, [r1, #76]	; 0x4c
   53bb0:	mov	r8, r2
   53bb4:	sub	sp, sp, #44	; 0x2c
   53bb8:	subs	r6, r3, #0
   53bbc:	ldr	ip, [pc, #1064]	; 53fec <zcfree@@Base+0x29bc>
   53bc0:	add	r3, r1, #4
   53bc4:	ldr	r2, [r1]
   53bc8:	and	r7, r0, #3
   53bcc:	add	ip, pc, ip
   53bd0:	str	r3, [sp, #32]
   53bd4:	str	ip, [sp, #4]
   53bd8:	str	r2, [sp, #28]
   53bdc:	bne	53d88 <zcfree@@Base+0x2758>
   53be0:	lsl	r2, r2, #8
   53be4:	strb	r6, [sp, #37]	; 0x25
   53be8:	str	r2, [sp, #28]
   53bec:	mov	r2, #3
   53bf0:	strb	r2, [sp, #36]	; 0x24
   53bf4:	cmp	r7, #2
   53bf8:	ldr	r2, [r4, #80]	; 0x50
   53bfc:	ldreq	r3, [r4, #56]	; 0x38
   53c00:	ands	r2, r2, #1
   53c04:	bne	53d5c <zcfree@@Base+0x272c>
   53c08:	eor	r0, r0, #8
   53c0c:	str	r2, [sp, #8]
   53c10:	ubfx	r0, r0, #3, #1
   53c14:	str	r0, [sp, #12]
   53c18:	ldr	r9, [r3]
   53c1c:	cmp	r9, #0
   53c20:	beq	53d64 <zcfree@@Base+0x2734>
   53c24:	cmp	r6, #2
   53c28:	mov	r0, r8
   53c2c:	addeq	r5, r3, #8
   53c30:	addne	r5, r3, #4
   53c34:	ldreq	sl, [r3, #4]
   53c38:	mov	r1, #15
   53c3c:	ldrhne	sl, [r3, #2]
   53c40:	ldrhne	r9, [r3]
   53c44:	ldr	r3, [r4, #72]	; 0x48
   53c48:	bic	fp, sl, #1
   53c4c:	add	fp, fp, r3
   53c50:	bl	53a28 <zcfree@@Base+0x23f8>
   53c54:	cmp	fp, r0
   53c58:	movhi	r0, #0
   53c5c:	bhi	53c74 <zcfree@@Base+0x2644>
   53c60:	bic	r3, r9, #1
   53c64:	add	fp, fp, r3
   53c68:	cmp	r0, fp
   53c6c:	movcs	r0, #0
   53c70:	movcc	r0, #1
   53c74:	and	sl, sl, #1
   53c78:	and	r9, r9, #1
   53c7c:	orr	r9, r9, sl, lsl #1
   53c80:	cmp	r9, #1
   53c84:	beq	53e00 <zcfree@@Base+0x27d0>
   53c88:	bcc	53de4 <zcfree@@Base+0x27b4>
   53c8c:	cmp	r9, #2
   53c90:	bne	53d78 <zcfree@@Base+0x2748>
   53c94:	ldr	r3, [r5]
   53c98:	cmp	r7, #0
   53c9c:	bic	fp, r3, #-2147483648	; 0x80000000
   53ca0:	bne	53db4 <zcfree@@Base+0x2784>
   53ca4:	cmp	r0, #0
   53ca8:	beq	53dd0 <zcfree@@Base+0x27a0>
   53cac:	ldr	r2, [sp, #12]
   53cb0:	cmp	fp, #0
   53cb4:	orreq	r2, r2, #1
   53cb8:	cmp	r2, #0
   53cbc:	beq	53dd0 <zcfree@@Base+0x27a0>
   53cc0:	cmp	fp, #0
   53cc4:	beq	53d38 <zcfree@@Base+0x2708>
   53cc8:	add	r2, r4, #88	; 0x58
   53ccc:	add	ip, sp, #24
   53cd0:	mov	sl, r7
   53cd4:	str	r7, [sp, #20]
   53cd8:	str	r6, [sp, #16]
   53cdc:	add	r9, r5, #4
   53ce0:	mov	r7, r2
   53ce4:	mov	r6, ip
   53ce8:	b	53cf8 <zcfree@@Base+0x26c8>
   53cec:	cmp	r3, fp
   53cf0:	mov	sl, r3
   53cf4:	beq	53d38 <zcfree@@Base+0x2708>
   53cf8:	mov	r0, r9
   53cfc:	str	r7, [sp, #24]
   53d00:	bl	5364c <zcfree@@Base+0x201c>
   53d04:	mov	r3, r6
   53d08:	mov	r2, #0
   53d0c:	add	r9, r9, #4
   53d10:	mov	r1, r0
   53d14:	mov	r0, r4
   53d18:	bl	11284 <__cxa_type_match@plt>
   53d1c:	add	r3, sl, #1
   53d20:	cmp	r0, #0
   53d24:	beq	53cec <zcfree@@Base+0x26bc>
   53d28:	cmp	fp, sl
   53d2c:	ldr	r7, [sp, #20]
   53d30:	ldr	r6, [sp, #16]
   53d34:	bne	53dcc <zcfree@@Base+0x279c>
   53d38:	mov	r0, r8
   53d3c:	mov	r1, #13
   53d40:	bl	53a28 <zcfree@@Base+0x23f8>
   53d44:	ldr	r2, [sp, #24]
   53d48:	str	r5, [r4, #40]	; 0x28
   53d4c:	mov	r3, #6
   53d50:	str	r2, [r4, #36]	; 0x24
   53d54:	str	r0, [r4, #32]
   53d58:	b	53d7c <zcfree@@Base+0x274c>
   53d5c:	mov	ip, #0
   53d60:	str	ip, [sp, #8]
   53d64:	cmp	r6, #2
   53d68:	ble	53e5c <zcfree@@Base+0x282c>
   53d6c:	bl	53660 <zcfree@@Base+0x2030>
   53d70:	cmp	r0, #0
   53d74:	beq	53e70 <zcfree@@Base+0x2840>
   53d78:	mov	r3, #9
   53d7c:	mov	r0, r3
   53d80:	add	sp, sp, #44	; 0x2c
   53d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   53d88:	cmp	r6, #2
   53d8c:	bgt	53bf4 <zcfree@@Base+0x25c4>
   53d90:	lsr	r1, r2, #16
   53d94:	strb	r1, [sp, #37]	; 0x25
   53d98:	lsl	r2, r2, #16
   53d9c:	mov	ip, #2
   53da0:	uxtb	r1, r1
   53da4:	str	r2, [sp, #28]
   53da8:	strb	ip, [sp, #36]	; 0x24
   53dac:	add	r3, r3, r1, lsl #2
   53db0:	b	53bf4 <zcfree@@Base+0x25c4>
   53db4:	mov	r0, r8
   53db8:	mov	r1, #13
   53dbc:	ldr	r9, [r4, #32]
   53dc0:	bl	53a28 <zcfree@@Base+0x23f8>
   53dc4:	cmp	r9, r0
   53dc8:	beq	53f10 <zcfree@@Base+0x28e0>
   53dcc:	ldr	r3, [r5]
   53dd0:	cmp	r3, #0
   53dd4:	addlt	r5, r5, #4
   53dd8:	add	fp, fp, #1
   53ddc:	add	r3, r5, fp, lsl #2
   53de0:	b	53c18 <zcfree@@Base+0x25e8>
   53de4:	cmp	r7, #0
   53de8:	moveq	r0, #0
   53dec:	andne	r0, r0, #1
   53df0:	cmp	r0, #0
   53df4:	bne	53f74 <zcfree@@Base+0x2944>
   53df8:	add	r3, r5, #4
   53dfc:	b	53c18 <zcfree@@Base+0x25e8>
   53e00:	cmp	r7, #0
   53e04:	bne	53ebc <zcfree@@Base+0x288c>
   53e08:	cmp	r0, #0
   53e0c:	beq	53e54 <zcfree@@Base+0x2824>
   53e10:	ldm	r5, {r2, r3}
   53e14:	cmn	r3, #2
   53e18:	lsr	r9, r2, #31
   53e1c:	beq	53d78 <zcfree@@Base+0x2748>
   53e20:	cmn	r3, #1
   53e24:	add	r3, r4, #88	; 0x58
   53e28:	str	r3, [sp, #24]
   53e2c:	beq	53f50 <zcfree@@Base+0x2920>
   53e30:	add	r0, r5, #4
   53e34:	bl	5364c <zcfree@@Base+0x201c>
   53e38:	mov	r2, r9
   53e3c:	add	r3, sp, #24
   53e40:	mov	r1, r0
   53e44:	mov	r0, r4
   53e48:	bl	11284 <__cxa_type_match@plt>
   53e4c:	cmp	r0, #0
   53e50:	bne	53fbc <zcfree@@Base+0x298c>
   53e54:	add	r3, r5, #8
   53e58:	b	53c18 <zcfree@@Base+0x25e8>
   53e5c:	mov	r0, r8
   53e60:	add	r1, sp, #28
   53e64:	bl	545d4 <zcfree@@Base+0x2fa4>
   53e68:	cmp	r0, #0
   53e6c:	bne	53d78 <zcfree@@Base+0x2748>
   53e70:	ldr	ip, [sp, #8]
   53e74:	cmp	ip, #0
   53e78:	moveq	r3, #8
   53e7c:	beq	53d7c <zcfree@@Base+0x274c>
   53e80:	mov	r1, #15
   53e84:	mov	r0, r8
   53e88:	bl	53a28 <zcfree@@Base+0x23f8>
   53e8c:	mov	r1, #14
   53e90:	mov	r2, r0
   53e94:	mov	r0, r8
   53e98:	bl	53ab0 <zcfree@@Base+0x2480>
   53e9c:	ldr	r3, [pc, #332]	; 53ff0 <zcfree@@Base+0x29c0>
   53ea0:	ldr	ip, [sp, #4]
   53ea4:	mov	r0, r8
   53ea8:	mov	r1, #15
   53eac:	ldr	r2, [ip, r3]
   53eb0:	bl	53ab0 <zcfree@@Base+0x2480>
   53eb4:	mov	r3, #7
   53eb8:	b	53d7c <zcfree@@Base+0x274c>
   53ebc:	mov	r0, r8
   53ec0:	mov	r1, #13
   53ec4:	ldr	r9, [r4, #32]
   53ec8:	bl	53a28 <zcfree@@Base+0x23f8>
   53ecc:	cmp	r9, r0
   53ed0:	bne	53e54 <zcfree@@Base+0x2824>
   53ed4:	ldr	r3, [r4, #40]	; 0x28
   53ed8:	cmp	r5, r3
   53edc:	bne	53e54 <zcfree@@Base+0x2824>
   53ee0:	mov	r0, r5
   53ee4:	bl	5337c <zcfree@@Base+0x1d4c>
   53ee8:	mov	r1, #15
   53eec:	mov	r2, r0
   53ef0:	mov	r0, r8
   53ef4:	bl	53ab0 <zcfree@@Base+0x2480>
   53ef8:	mov	r0, r8
   53efc:	mov	r2, r4
   53f00:	mov	r1, #0
   53f04:	bl	53ab0 <zcfree@@Base+0x2480>
   53f08:	mov	r3, #7
   53f0c:	b	53d7c <zcfree@@Base+0x274c>
   53f10:	ldr	r3, [r4, #40]	; 0x28
   53f14:	cmp	r5, r3
   53f18:	bne	53dcc <zcfree@@Base+0x279c>
   53f1c:	mov	r2, #4
   53f20:	mov	r3, #0
   53f24:	str	fp, [r4, #40]	; 0x28
   53f28:	str	r3, [r4, #44]	; 0x2c
   53f2c:	add	r3, r5, r2
   53f30:	str	r2, [r4, #48]	; 0x30
   53f34:	str	r3, [r4, #52]	; 0x34
   53f38:	ldr	r3, [r5]
   53f3c:	cmp	r3, #0
   53f40:	blt	53fb0 <zcfree@@Base+0x2980>
   53f44:	mov	ip, #1
   53f48:	str	ip, [sp, #8]
   53f4c:	b	53dd8 <zcfree@@Base+0x27a8>
   53f50:	mov	r0, r8
   53f54:	mov	r1, #13
   53f58:	bl	53a28 <zcfree@@Base+0x23f8>
   53f5c:	str	r0, [r4, #32]
   53f60:	ldr	r3, [sp, #24]
   53f64:	str	r3, [r4, #36]	; 0x24
   53f68:	str	r5, [r4, #40]	; 0x28
   53f6c:	mov	r3, #6
   53f70:	b	53d7c <zcfree@@Base+0x274c>
   53f74:	mov	r0, r5
   53f78:	add	r5, r5, #4
   53f7c:	bl	5337c <zcfree@@Base+0x1d4c>
   53f80:	str	r5, [r4, #56]	; 0x38
   53f84:	mov	r6, r0
   53f88:	mov	r0, r4
   53f8c:	bl	11230 <__cxa_begin_cleanup@plt>
   53f90:	cmp	r0, #0
   53f94:	beq	53d78 <zcfree@@Base+0x2748>
   53f98:	mov	r0, r8
   53f9c:	mov	r2, r6
   53fa0:	mov	r1, #15
   53fa4:	bl	53ab0 <zcfree@@Base+0x2480>
   53fa8:	mov	r3, #7
   53fac:	b	53d7c <zcfree@@Base+0x274c>
   53fb0:	add	r0, fp, #1
   53fb4:	add	r0, r5, r0, lsl #2
   53fb8:	b	53ee4 <zcfree@@Base+0x28b4>
   53fbc:	mov	r9, r0
   53fc0:	mov	r1, #13
   53fc4:	mov	r0, r8
   53fc8:	bl	53a28 <zcfree@@Base+0x23f8>
   53fcc:	cmp	r9, #2
   53fd0:	str	r0, [r4, #32]
   53fd4:	bne	53f60 <zcfree@@Base+0x2930>
   53fd8:	ldr	r2, [sp, #24]
   53fdc:	mov	r3, r4
   53fe0:	str	r2, [r3, #44]!	; 0x2c
   53fe4:	str	r3, [r4, #36]	; 0x24
   53fe8:	b	53f68 <zcfree@@Base+0x2938>
   53fec:	andeq	pc, r3, ip, lsr #8
   53ff0:	andeq	r0, r0, r0, asr #2
   53ff4:	mov	r3, #0
   53ff8:	b	53ba4 <zcfree@@Base+0x2574>
   53ffc:	mov	r3, #1
   54000:	b	53ba4 <zcfree@@Base+0x2574>
   54004:	mov	r3, #2
   54008:	b	53ba4 <zcfree@@Base+0x2574>
   5400c:	push	{r4, r5, r6, r7, r8, lr}
   54010:	mov	r4, r0
   54014:	sub	sp, sp, #272	; 0x110
   54018:	cmp	r1, #4
   5401c:	addls	pc, pc, r1, lsl #2
   54020:	b	54040 <zcfree@@Base+0x2a10>
   54024:	b	54234 <zcfree@@Base+0x2c04>
   54028:	b	540b4 <zcfree@@Base+0x2a84>
   5402c:	b	54040 <zcfree@@Base+0x2a10>
   54030:	b	54038 <zcfree@@Base+0x2a08>
   54034:	b	5404c <zcfree@@Base+0x2a1c>
   54038:	cmp	r3, #3
   5403c:	beq	54278 <zcfree@@Base+0x2c48>
   54040:	mov	r0, #2
   54044:	add	sp, sp, #272	; 0x110
   54048:	pop	{r4, r5, r6, r7, r8, pc}
   5404c:	cmp	r2, #16
   54050:	cmpls	r3, #0
   54054:	bne	54040 <zcfree@@Base+0x2a10>
   54058:	ldr	r3, [r0]
   5405c:	tst	r3, #16
   54060:	bne	542f4 <zcfree@@Base+0x2cc4>
   54064:	add	r5, sp, #136	; 0x88
   54068:	str	r2, [sp, #4]
   5406c:	mov	r0, r5
   54070:	bl	54478 <zcfree@@Base+0x2e48>
   54074:	ldr	r1, [r4, #56]	; 0x38
   54078:	ldr	r2, [sp, #4]
   5407c:	mov	r3, #0
   54080:	mov	r0, #1
   54084:	ands	ip, r2, r0, lsl r3
   54088:	ldrne	ip, [r1]
   5408c:	addne	r1, r1, #4
   54090:	strne	ip, [r5, r3, lsl #2]
   54094:	add	r3, r3, #1
   54098:	cmp	r3, #4
   5409c:	bne	54084 <zcfree@@Base+0x2a54>
   540a0:	mov	r0, r5
   540a4:	str	r1, [r4, #56]	; 0x38
   540a8:	bl	54464 <zcfree@@Base+0x2e34>
   540ac:	mov	r0, #0
   540b0:	b	54044 <zcfree@@Base+0x2a14>
   540b4:	bic	r1, r3, #4
   540b8:	cmp	r1, #1
   540bc:	bne	54040 <zcfree@@Base+0x2a10>
   540c0:	cmp	r3, #1
   540c4:	lsr	r5, r2, #16
   540c8:	uxth	r6, r2
   540cc:	add	r2, r6, r5
   540d0:	movne	r1, #32
   540d4:	moveq	r1, #16
   540d8:	cmp	r1, r2
   540dc:	bcc	54040 <zcfree@@Base+0x2a10>
   540e0:	subs	r0, r3, #1
   540e4:	rsbs	r7, r0, #0
   540e8:	adcs	r7, r7, r0
   540ec:	cmp	r5, #15
   540f0:	movls	r1, #0
   540f4:	movhi	r1, #1
   540f8:	tst	r7, r1
   540fc:	bne	54040 <zcfree@@Base+0x2a10>
   54100:	cmp	r1, #0
   54104:	movne	r8, r6
   54108:	bne	54118 <zcfree@@Base+0x2ae8>
   5410c:	cmp	r2, #16
   54110:	bls	5431c <zcfree@@Base+0x2cec>
   54114:	sub	r8, r2, #16
   54118:	cmp	r8, #0
   5411c:	cmpne	r3, #5
   54120:	bne	54040 <zcfree@@Base+0x2a10>
   54124:	cmp	r5, #15
   54128:	bhi	54158 <zcfree@@Base+0x2b28>
   5412c:	ldr	r2, [r4]
   54130:	tst	r2, #1
   54134:	beq	54158 <zcfree@@Base+0x2b28>
   54138:	cmp	r3, #5
   5413c:	mov	r0, r4
   54140:	bic	r3, r2, #1
   54144:	str	r3, [r4]
   54148:	beq	54388 <zcfree@@Base+0x2d58>
   5414c:	bic	r2, r2, #3
   54150:	str	r2, [r0], #72	; 0x48
   54154:	bl	543b4 <zcfree@@Base+0x2d84>
   54158:	cmp	r8, #0
   5415c:	beq	5416c <zcfree@@Base+0x2b3c>
   54160:	ldr	r3, [r4]
   54164:	tst	r3, #4
   54168:	bne	54360 <zcfree@@Base+0x2d30>
   5416c:	cmp	r7, #0
   54170:	bne	54374 <zcfree@@Base+0x2d44>
   54174:	cmp	r5, #15
   54178:	bls	54344 <zcfree@@Base+0x2d14>
   5417c:	cmp	r8, #0
   54180:	bne	54350 <zcfree@@Base+0x2d20>
   54184:	ldr	ip, [r4, #56]	; 0x38
   54188:	cmp	r6, #0
   5418c:	mov	r2, ip
   54190:	ble	541c4 <zcfree@@Base+0x2b94>
   54194:	add	r0, sp, #136	; 0x88
   54198:	lsl	r6, r6, #1
   5419c:	add	r0, r0, r5, lsl #3
   541a0:	sub	r1, r6, #1
   541a4:	rsb	r0, ip, r0
   541a8:	sub	r3, ip, #4
   541ac:	sub	r1, r1, #1
   541b0:	ldr	r2, [r3, #4]!
   541b4:	cmn	r1, #1
   541b8:	str	r2, [r0, r3]
   541bc:	bne	541ac <zcfree@@Base+0x2b7c>
   541c0:	add	r2, ip, r6, lsl #2
   541c4:	cmp	r8, #0
   541c8:	beq	54208 <zcfree@@Base+0x2bd8>
   541cc:	cmp	r5, #16
   541d0:	movcs	r0, r5
   541d4:	movcc	r0, #16
   541d8:	add	r6, sp, #272	; 0x110
   541dc:	lsl	r1, r8, #1
   541e0:	mov	ip, r2
   541e4:	add	r0, r6, r0, lsl #3
   541e8:	sub	r3, r1, #1
   541ec:	sub	r0, r0, #392	; 0x188
   541f0:	sub	r3, r3, #1
   541f4:	ldr	r6, [ip], #4
   541f8:	cmn	r3, #1
   541fc:	str	r6, [r0], #4
   54200:	bne	541f0 <zcfree@@Base+0x2bc0>
   54204:	add	r2, r2, r1, lsl #2
   54208:	cmp	r7, #0
   5420c:	bne	54324 <zcfree@@Base+0x2cf4>
   54210:	cmp	r5, #15
   54214:	str	r2, [r4, #56]	; 0x38
   54218:	bls	54338 <zcfree@@Base+0x2d08>
   5421c:	cmp	r8, #0
   54220:	beq	5422c <zcfree@@Base+0x2bfc>
   54224:	add	r0, sp, #8
   54228:	bl	543cc <zcfree@@Base+0x2d9c>
   5422c:	mov	r0, #0
   54230:	b	54044 <zcfree@@Base+0x2a14>
   54234:	cmp	r3, #0
   54238:	bne	54040 <zcfree@@Base+0x2a10>
   5423c:	ldr	r1, [r0, #56]	; 0x38
   54240:	uxth	r5, r2
   54244:	mov	ip, #1
   54248:	ands	r0, r5, ip, lsl r3
   5424c:	add	r0, r4, r3, lsl #2
   54250:	add	r3, r3, #1
   54254:	ldrne	r6, [r1]
   54258:	addne	r1, r1, #4
   5425c:	strne	r6, [r0, #4]
   54260:	cmp	r3, #16
   54264:	bne	54248 <zcfree@@Base+0x2c18>
   54268:	ands	r0, r2, #8192	; 0x2000
   5426c:	streq	r1, [r4, #56]	; 0x38
   54270:	beq	54044 <zcfree@@Base+0x2a14>
   54274:	b	5422c <zcfree@@Base+0x2bfc>
   54278:	lsr	r6, r2, #16
   5427c:	uxth	r7, r2
   54280:	add	r3, r7, r6
   54284:	cmp	r3, #16
   54288:	bhi	54040 <zcfree@@Base+0x2a10>
   5428c:	ldr	r3, [r0]
   54290:	tst	r3, #8
   54294:	bne	5430c <zcfree@@Base+0x2cdc>
   54298:	add	r5, sp, #136	; 0x88
   5429c:	lsl	r7, r7, #1
   542a0:	mov	r0, r5
   542a4:	bl	54420 <zcfree@@Base+0x2df0>
   542a8:	ldr	ip, [r4, #56]	; 0x38
   542ac:	cmp	r7, #0
   542b0:	add	r0, r5, r6, lsl #3
   542b4:	sub	r3, r7, #1
   542b8:	mov	r2, ip
   542bc:	beq	542e0 <zcfree@@Base+0x2cb0>
   542c0:	rsb	r0, ip, r0
   542c4:	sub	r2, ip, #4
   542c8:	sub	r3, r3, #1
   542cc:	ldr	r1, [r2, #4]!
   542d0:	cmn	r3, #1
   542d4:	str	r1, [r0, r2]
   542d8:	bne	542c8 <zcfree@@Base+0x2c98>
   542dc:	add	r2, ip, r7, lsl #2
   542e0:	mov	r0, r5
   542e4:	str	r2, [r4, #56]	; 0x38
   542e8:	bl	543dc <zcfree@@Base+0x2dac>
   542ec:	mov	r0, #0
   542f0:	b	54044 <zcfree@@Base+0x2a14>
   542f4:	bic	r3, r3, #16
   542f8:	str	r3, [r0], #464	; 0x1d0
   542fc:	str	r2, [sp, #4]
   54300:	bl	54478 <zcfree@@Base+0x2e48>
   54304:	ldr	r2, [sp, #4]
   54308:	b	54064 <zcfree@@Base+0x2a34>
   5430c:	bic	r3, r3, #8
   54310:	str	r3, [r0], #336	; 0x150
   54314:	bl	54420 <zcfree@@Base+0x2df0>
   54318:	b	54298 <zcfree@@Base+0x2c68>
   5431c:	mov	r8, r1
   54320:	b	54124 <zcfree@@Base+0x2af4>
   54324:	add	r2, r2, #4
   54328:	add	r0, sp, #136	; 0x88
   5432c:	str	r2, [r4, #56]	; 0x38
   54330:	bl	543ac <zcfree@@Base+0x2d7c>
   54334:	b	5422c <zcfree@@Base+0x2bfc>
   54338:	add	r0, sp, #136	; 0x88
   5433c:	bl	543bc <zcfree@@Base+0x2d8c>
   54340:	b	5421c <zcfree@@Base+0x2bec>
   54344:	add	r0, sp, #136	; 0x88
   54348:	bl	543c4 <zcfree@@Base+0x2d94>
   5434c:	b	5417c <zcfree@@Base+0x2b4c>
   54350:	add	r0, sp, #8
   54354:	bl	543d4 <zcfree@@Base+0x2da4>
   54358:	rsb	r6, r5, #16
   5435c:	b	54184 <zcfree@@Base+0x2b54>
   54360:	mov	r0, r4
   54364:	bic	r3, r3, #4
   54368:	str	r3, [r0], #208	; 0xd0
   5436c:	bl	543d4 <zcfree@@Base+0x2da4>
   54370:	b	5416c <zcfree@@Base+0x2b3c>
   54374:	add	r0, sp, #136	; 0x88
   54378:	bl	543b4 <zcfree@@Base+0x2d84>
   5437c:	cmp	r8, #0
   54380:	bne	54358 <zcfree@@Base+0x2d28>
   54384:	b	54184 <zcfree@@Base+0x2b54>
   54388:	orr	r3, r3, #2
   5438c:	str	r3, [r0], #72	; 0x48
   54390:	bl	543c4 <zcfree@@Base+0x2d94>
   54394:	b	54158 <zcfree@@Base+0x2b28>
   54398:	add	r1, r0, #52	; 0x34
   5439c:	ldm	r1, {r3, r4, r5}
   543a0:	push	{r3, r4, r5}
   543a4:	ldm	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
   543a8:	ldm	sp, {sp, lr, pc}
   543ac:	fldmiax	r0, {d0-d15}	;@ Deprecated
   543b0:	bx	lr
   543b4:	fstmiax	r0, {d0-d15}	;@ Deprecated
   543b8:	bx	lr
   543bc:	vldmia	r0, {d0-d15}
   543c0:	bx	lr
   543c4:	vstmia	r0, {d0-d15}
   543c8:	bx	lr
   543cc:	vldmia	r0, {d16-d31}
   543d0:	bx	lr
   543d4:	vstmia	r0, {d16-d31}
   543d8:	bx	lr
   543dc:	ldfe	f0, [r0], #8
   543e0:	ldfe	f1, [r0], #8
   543e4:	ldfe	f2, [r0], #8
   543e8:	ldfe	f3, [r0], #8
   543ec:	ldfe	f4, [r0], #8
   543f0:	ldfe	f5, [r0], #8
   543f4:	ldfe	f6, [r0], #8
   543f8:	ldfe	f7, [r0], #8
   543fc:	ldfp	f0, [r0], #8
   54400:	ldfp	f1, [r0], #8
   54404:	ldfp	f2, [r0], #8
   54408:	ldfp	f3, [r0], #8
   5440c:	ldfp	f4, [r0], #8
   54410:	ldfp	f5, [r0], #8
   54414:	ldfp	f6, [r0], #8
   54418:	ldfp	f7, [r0], #8
   5441c:	bx	lr
   54420:	stfe	f0, [r0], #8
   54424:	stfe	f1, [r0], #8
   54428:	stfe	f2, [r0], #8
   5442c:	stfe	f3, [r0], #8
   54430:	stfe	f4, [r0], #8
   54434:	stfe	f5, [r0], #8
   54438:	stfe	f6, [r0], #8
   5443c:	stfe	f7, [r0], #8
   54440:	stfp	f0, [r0], #8
   54444:	stfp	f1, [r0], #8
   54448:	stfp	f2, [r0], #8
   5444c:	stfp	f3, [r0], #8
   54450:	stfp	f4, [r0], #8
   54454:	stfp	f5, [r0], #8
   54458:	stfp	f6, [r0], #8
   5445c:	stfp	f7, [r0], #8
   54460:	bx	lr
   54464:	ldc2	1, cr8, [r0], #4
   54468:	ldc2	1, cr9, [r0], #4
   5446c:	ldc2	1, cr10, [r0], #4
   54470:	ldc2	1, cr11, [r0], #4
   54474:	bx	lr
   54478:	stc2	1, cr8, [r0], #4
   5447c:	stc2	1, cr9, [r0], #4
   54480:	stc2	1, cr10, [r0], #4
   54484:	stc2	1, cr11, [r0], #4
   54488:	bx	lr
   5448c:	push	{sp, lr, pc}
   54490:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   54494:	mov	r3, #0
   54498:	push	{r2, r3}
   5449c:	add	r1, sp, #4
   544a0:	bl	53848 <zcfree@@Base+0x2218>
   544a4:	ldr	lr, [sp, #64]	; 0x40
   544a8:	add	sp, sp, #72	; 0x48
   544ac:	bx	lr
   544b0:	push	{sp, lr, pc}
   544b4:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   544b8:	mov	r3, #0
   544bc:	push	{r2, r3}
   544c0:	add	r1, sp, #4
   544c4:	bl	53914 <zcfree@@Base+0x22e4>
   544c8:	ldr	lr, [sp, #64]	; 0x40
   544cc:	add	sp, sp, #72	; 0x48
   544d0:	bx	lr
   544d4:	push	{sp, lr, pc}
   544d8:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   544dc:	mov	r3, #0
   544e0:	push	{r2, r3}
   544e4:	add	r1, sp, #4
   544e8:	bl	53988 <zcfree@@Base+0x2358>
   544ec:	ldr	lr, [sp, #64]	; 0x40
   544f0:	add	sp, sp, #72	; 0x48
   544f4:	bx	lr
   544f8:	push	{sp, lr, pc}
   544fc:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   54500:	mov	r3, #0
   54504:	push	{r2, r3}
   54508:	add	r3, sp, #4
   5450c:	bl	538f0 <zcfree@@Base+0x22c0>
   54510:	ldr	lr, [sp, #64]	; 0x40
   54514:	add	sp, sp, #72	; 0x48
   54518:	bx	lr
   5451c:	push	{sp, lr, pc}
   54520:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   54524:	mov	r3, #0
   54528:	push	{r2, r3}
   5452c:	add	r2, sp, #4
   54530:	bl	53ae0 <zcfree@@Base+0x24b0>
   54534:	ldr	lr, [sp, #64]	; 0x40
   54538:	add	sp, sp, #72	; 0x48
   5453c:	bx	lr
   54540:	ldrb	r2, [r0, #8]
   54544:	mov	r3, r0
   54548:	cmp	r2, #0
   5454c:	bne	54564 <zcfree@@Base+0x2f34>
   54550:	ldrb	r2, [r0, #9]
   54554:	cmp	r2, #0
   54558:	bne	54580 <zcfree@@Base+0x2f50>
   5455c:	mov	r0, #176	; 0xb0
   54560:	bx	lr
   54564:	ldr	r0, [r0]
   54568:	sub	r2, r2, #1
   5456c:	strb	r2, [r3, #8]
   54570:	lsl	r2, r0, #8
   54574:	lsr	r0, r0, #24
   54578:	str	r2, [r3]
   5457c:	bx	lr
   54580:	ldr	r1, [r0, #4]
   54584:	sub	r2, r2, #1
   54588:	strb	r2, [r0, #9]
   5458c:	mov	r2, #3
   54590:	add	r0, r1, #4
   54594:	str	r0, [r3, #4]
   54598:	ldr	r0, [r1]
   5459c:	strb	r2, [r3, #8]
   545a0:	b	54570 <zcfree@@Base+0x2f40>
   545a4:	push	{lr}		; (str lr, [sp, #-4]!)
   545a8:	sub	sp, sp, #20
   545ac:	mov	r1, #0
   545b0:	add	r2, sp, #12
   545b4:	mov	r3, r1
   545b8:	str	r2, [sp]
   545bc:	mov	r2, #12
   545c0:	bl	539cc <zcfree@@Base+0x239c>
   545c4:	ldr	r0, [sp, #12]
   545c8:	add	sp, sp, #20
   545cc:	pop	{pc}		; (ldr pc, [sp], #4)
   545d0:	b	545a4 <zcfree@@Base+0x2f74>
   545d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   545d8:	sub	sp, sp, #20
   545dc:	add	r7, sp, #12
   545e0:	mov	r6, r0
   545e4:	mov	r5, r1
   545e8:	mov	r8, #0
   545ec:	mov	r0, r5
   545f0:	bl	54540 <zcfree@@Base+0x2f10>
   545f4:	cmp	r0, #176	; 0xb0
   545f8:	mov	r4, r0
   545fc:	beq	54818 <zcfree@@Base+0x31e8>
   54600:	bic	r2, r0, #127	; 0x7f
   54604:	ands	r1, r2, #255	; 0xff
   54608:	beq	54674 <zcfree@@Base+0x3044>
   5460c:	and	r2, r0, #240	; 0xf0
   54610:	cmp	r2, #128	; 0x80
   54614:	beq	54770 <zcfree@@Base+0x3140>
   54618:	cmp	r2, #144	; 0x90
   5461c:	beq	546c4 <zcfree@@Base+0x3094>
   54620:	cmp	r2, #160	; 0xa0
   54624:	beq	546ec <zcfree@@Base+0x30bc>
   54628:	cmp	r2, #176	; 0xb0
   5462c:	beq	54724 <zcfree@@Base+0x30f4>
   54630:	cmp	r2, #192	; 0xc0
   54634:	beq	547b8 <zcfree@@Base+0x3188>
   54638:	and	r3, r0, #248	; 0xf8
   5463c:	cmp	r3, #208	; 0xd0
   54640:	bne	54668 <zcfree@@Base+0x3038>
   54644:	and	r4, r0, #7
   54648:	mov	r1, #1
   5464c:	add	r2, r4, #1
   54650:	mov	r0, r6
   54654:	orr	r2, r2, #524288	; 0x80000
   54658:	mov	r3, #5
   5465c:	bl	5400c <zcfree@@Base+0x29dc>
   54660:	cmp	r0, #0
   54664:	beq	545ec <zcfree@@Base+0x2fbc>
   54668:	mov	r0, #9
   5466c:	add	sp, sp, #20
   54670:	pop	{r4, r5, r6, r7, r8, r9, pc}
   54674:	lsl	r9, r0, #2
   54678:	mov	r3, r1
   5467c:	str	r7, [sp]
   54680:	mov	r0, r6
   54684:	mov	r2, #13
   54688:	uxtb	r9, r9
   5468c:	bl	539cc <zcfree@@Base+0x239c>
   54690:	ldr	r3, [sp, #12]
   54694:	add	r9, r9, #4
   54698:	tst	r4, #64	; 0x40
   5469c:	rsbne	r9, r9, r3
   546a0:	addeq	r9, r3, r9
   546a4:	str	r9, [sp, #12]
   546a8:	mov	r1, #0
   546ac:	str	r7, [sp]
   546b0:	mov	r3, r1
   546b4:	mov	r0, r6
   546b8:	mov	r2, #13
   546bc:	bl	53a54 <zcfree@@Base+0x2424>
   546c0:	b	545ec <zcfree@@Base+0x2fbc>
   546c4:	and	r3, r0, #13
   546c8:	cmp	r3, #13
   546cc:	beq	54668 <zcfree@@Base+0x3038>
   546d0:	mov	r1, #0
   546d4:	and	r2, r0, #15
   546d8:	str	r7, [sp]
   546dc:	mov	r3, r1
   546e0:	mov	r0, r6
   546e4:	bl	539cc <zcfree@@Base+0x239c>
   546e8:	b	546a8 <zcfree@@Base+0x3078>
   546ec:	mvn	r4, r0
   546f0:	mov	r2, #4080	; 0xff0
   546f4:	and	r4, r4, #7
   546f8:	tst	r0, #8
   546fc:	asr	r2, r2, r4
   54700:	mov	r1, #0
   54704:	and	r2, r2, #4080	; 0xff0
   54708:	orrne	r2, r2, #16384	; 0x4000
   5470c:	mov	r3, r1
   54710:	mov	r0, r6
   54714:	bl	5400c <zcfree@@Base+0x29dc>
   54718:	cmp	r0, #0
   5471c:	bne	54668 <zcfree@@Base+0x3038>
   54720:	b	545ec <zcfree@@Base+0x2fbc>
   54724:	cmp	r0, #177	; 0xb1
   54728:	beq	54860 <zcfree@@Base+0x3230>
   5472c:	cmp	r0, #178	; 0xb2
   54730:	beq	5487c <zcfree@@Base+0x324c>
   54734:	cmp	r0, #179	; 0xb3
   54738:	beq	548fc <zcfree@@Base+0x32cc>
   5473c:	and	r3, r0, #252	; 0xfc
   54740:	cmp	r3, #180	; 0xb4
   54744:	beq	54668 <zcfree@@Base+0x3038>
   54748:	and	r2, r0, #7
   5474c:	mov	r1, #1
   54750:	add	r2, r2, r1
   54754:	mov	r3, r1
   54758:	orr	r2, r2, #524288	; 0x80000
   5475c:	mov	r0, r6
   54760:	bl	5400c <zcfree@@Base+0x29dc>
   54764:	cmp	r0, #0
   54768:	bne	54668 <zcfree@@Base+0x3038>
   5476c:	b	545ec <zcfree@@Base+0x2fbc>
   54770:	mov	r0, r5
   54774:	lsl	r4, r4, #8
   54778:	bl	54540 <zcfree@@Base+0x2f10>
   5477c:	orr	r0, r0, r4
   54780:	cmp	r0, #32768	; 0x8000
   54784:	beq	54668 <zcfree@@Base+0x3038>
   54788:	lsl	r4, r0, #4
   5478c:	mov	r1, #0
   54790:	movw	r2, #65520	; 0xfff0
   54794:	mov	r3, r1
   54798:	and	r2, r4, r2
   5479c:	mov	r0, r6
   547a0:	bl	5400c <zcfree@@Base+0x29dc>
   547a4:	cmp	r0, #0
   547a8:	bne	54668 <zcfree@@Base+0x3038>
   547ac:	tst	r4, #32768	; 0x8000
   547b0:	movne	r8, #1
   547b4:	b	545ec <zcfree@@Base+0x2fbc>
   547b8:	cmp	r0, #198	; 0xc6
   547bc:	beq	5491c <zcfree@@Base+0x32ec>
   547c0:	cmp	r0, #199	; 0xc7
   547c4:	beq	54938 <zcfree@@Base+0x3308>
   547c8:	and	r3, r0, #248	; 0xf8
   547cc:	cmp	r3, #192	; 0xc0
   547d0:	beq	54968 <zcfree@@Base+0x3338>
   547d4:	cmp	r0, #200	; 0xc8
   547d8:	beq	54990 <zcfree@@Base+0x3360>
   547dc:	cmp	r0, #201	; 0xc9
   547e0:	bne	54668 <zcfree@@Base+0x3038>
   547e4:	mov	r0, r5
   547e8:	bl	54540 <zcfree@@Base+0x2f10>
   547ec:	mov	r1, #1
   547f0:	and	r3, r0, #15
   547f4:	and	r2, r0, #240	; 0xf0
   547f8:	add	r3, r3, #1
   547fc:	mov	r0, r6
   54800:	orr	r2, r3, r2, lsl #12
   54804:	mov	r3, #5
   54808:	bl	5400c <zcfree@@Base+0x29dc>
   5480c:	cmp	r0, #0
   54810:	bne	54668 <zcfree@@Base+0x3038>
   54814:	b	545ec <zcfree@@Base+0x2fbc>
   54818:	cmp	r8, #0
   5481c:	movne	r0, #0
   54820:	bne	5466c <zcfree@@Base+0x303c>
   54824:	add	r4, sp, #12
   54828:	mov	r1, r8
   5482c:	mov	r2, #14
   54830:	mov	r3, r8
   54834:	mov	r0, r6
   54838:	str	r4, [sp]
   5483c:	bl	539cc <zcfree@@Base+0x239c>
   54840:	str	r4, [sp]
   54844:	mov	r0, r6
   54848:	mov	r1, r8
   5484c:	mov	r2, #15
   54850:	mov	r3, r8
   54854:	bl	53a54 <zcfree@@Base+0x2424>
   54858:	mov	r0, r8
   5485c:	b	5466c <zcfree@@Base+0x303c>
   54860:	mov	r0, r5
   54864:	bl	54540 <zcfree@@Base+0x2f10>
   54868:	subs	r2, r0, #0
   5486c:	beq	54668 <zcfree@@Base+0x3038>
   54870:	ands	r1, r2, #240	; 0xf0
   54874:	beq	5470c <zcfree@@Base+0x30dc>
   54878:	b	54668 <zcfree@@Base+0x3038>
   5487c:	mov	r1, #0
   54880:	mov	r2, #13
   54884:	mov	r3, r1
   54888:	str	r7, [sp]
   5488c:	mov	r0, r6
   54890:	mov	r4, #2
   54894:	bl	539cc <zcfree@@Base+0x239c>
   54898:	mov	r0, r5
   5489c:	bl	54540 <zcfree@@Base+0x2f10>
   548a0:	tst	r0, #128	; 0x80
   548a4:	beq	548cc <zcfree@@Base+0x329c>
   548a8:	and	r2, r0, #127	; 0x7f
   548ac:	ldr	r3, [sp, #12]
   548b0:	mov	r0, r5
   548b4:	add	r3, r3, r2, lsl r4
   548b8:	str	r3, [sp, #12]
   548bc:	bl	54540 <zcfree@@Base+0x2f10>
   548c0:	add	r4, r4, #7
   548c4:	tst	r0, #128	; 0x80
   548c8:	bne	548a8 <zcfree@@Base+0x3278>
   548cc:	ldr	ip, [sp, #12]
   548d0:	and	lr, r0, #127	; 0x7f
   548d4:	mov	r1, #0
   548d8:	str	r7, [sp]
   548dc:	add	ip, ip, #516	; 0x204
   548e0:	mov	r3, r1
   548e4:	mov	r0, r6
   548e8:	mov	r2, #13
   548ec:	add	r4, ip, lr, lsl r4
   548f0:	str	r4, [sp, #12]
   548f4:	bl	53a54 <zcfree@@Base+0x2424>
   548f8:	b	545ec <zcfree@@Base+0x2fbc>
   548fc:	mov	r0, r5
   54900:	bl	54540 <zcfree@@Base+0x2f10>
   54904:	mov	r1, #1
   54908:	and	r3, r0, #15
   5490c:	and	r2, r0, #240	; 0xf0
   54910:	add	r3, r3, #1
   54914:	orr	r2, r3, r2, lsl #12
   54918:	b	5470c <zcfree@@Base+0x30dc>
   5491c:	mov	r0, r5
   54920:	bl	54540 <zcfree@@Base+0x2f10>
   54924:	mov	r1, #3
   54928:	and	r3, r0, #15
   5492c:	and	r2, r0, #240	; 0xf0
   54930:	add	r3, r3, #1
   54934:	b	54914 <zcfree@@Base+0x32e4>
   54938:	mov	r0, r5
   5493c:	bl	54540 <zcfree@@Base+0x2f10>
   54940:	subs	r2, r0, #0
   54944:	beq	54668 <zcfree@@Base+0x3038>
   54948:	ands	r3, r2, #240	; 0xf0
   5494c:	bne	54668 <zcfree@@Base+0x3038>
   54950:	mov	r0, r6
   54954:	mov	r1, #4
   54958:	bl	5400c <zcfree@@Base+0x29dc>
   5495c:	cmp	r0, #0
   54960:	bne	54668 <zcfree@@Base+0x3038>
   54964:	b	545ec <zcfree@@Base+0x2fbc>
   54968:	and	r2, r0, #15
   5496c:	mov	r1, #3
   54970:	add	r2, r2, #1
   54974:	mov	r3, r1
   54978:	orr	r2, r2, #655360	; 0xa0000
   5497c:	mov	r0, r6
   54980:	bl	5400c <zcfree@@Base+0x29dc>
   54984:	cmp	r0, #0
   54988:	bne	54668 <zcfree@@Base+0x3038>
   5498c:	b	545ec <zcfree@@Base+0x2fbc>
   54990:	mov	r0, r5
   54994:	bl	54540 <zcfree@@Base+0x2f10>
   54998:	mov	r1, #1
   5499c:	and	r2, r0, #240	; 0xf0
   549a0:	and	r3, r0, #15
   549a4:	add	r2, r2, #16
   549a8:	add	r3, r3, #1
   549ac:	mov	r0, r6
   549b0:	orr	r2, r3, r2, lsl #12
   549b4:	mov	r3, #5
   549b8:	bl	5400c <zcfree@@Base+0x29dc>
   549bc:	cmp	r0, #0
   549c0:	bne	54668 <zcfree@@Base+0x3038>
   549c4:	b	545ec <zcfree@@Base+0x2fbc>
   549c8:	ldr	r3, [r0, #76]	; 0x4c
   549cc:	mov	r0, r1
   549d0:	push	{lr}		; (str lr, [sp, #-4]!)
   549d4:	sub	sp, sp, #20
   549d8:	ldr	r2, [r3, #4]
   549dc:	add	ip, r3, #8
   549e0:	mov	lr, #3
   549e4:	strb	lr, [sp, #12]
   549e8:	ldrb	r3, [r3, #7]
   549ec:	add	r1, sp, #4
   549f0:	lsl	r2, r2, #8
   549f4:	stmib	sp, {r2, ip}
   549f8:	strb	r3, [sp, #13]
   549fc:	bl	545d4 <zcfree@@Base+0x2fa4>
   54a00:	add	sp, sp, #20
   54a04:	pop	{pc}		; (ldr pc, [sp], #4)
   54a08:	push	{r3, lr}
   54a0c:	bl	545d0 <zcfree@@Base+0x2fa0>
   54a10:	ldr	r0, [r0, #72]	; 0x48
   54a14:	pop	{r3, pc}
   54a18:	push	{r3, lr}
   54a1c:	bl	545d0 <zcfree@@Base+0x2fa0>
   54a20:	ldr	r3, [r0, #76]	; 0x4c
   54a24:	ldrb	r2, [r3, #7]
   54a28:	add	r0, r3, r2, lsl #2
   54a2c:	add	r0, r0, #8
   54a30:	pop	{r3, pc}
   54a34:	push	{r3, lr}
   54a38:	bl	113ec <abort@plt>
   54a3c:	push	{r3, lr}
   54a40:	bl	113ec <abort@plt>
   54a44:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   54a48:	mov	r7, r0
   54a4c:	ldr	r6, [pc, #76]	; 54aa0 <zcfree@@Base+0x3470>
   54a50:	mov	r8, r1
   54a54:	ldr	r5, [pc, #72]	; 54aa4 <zcfree@@Base+0x3474>
   54a58:	mov	r9, r2
   54a5c:	add	r6, pc, r6
   54a60:	bl	110b4 <calloc@plt-0x20>
   54a64:	add	r5, pc, r5
   54a68:	rsb	r6, r5, r6
   54a6c:	asrs	r6, r6, #2
   54a70:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   54a74:	sub	r5, r5, #4
   54a78:	mov	r4, #0
   54a7c:	add	r4, r4, #1
   54a80:	ldr	r3, [r5, #4]!
   54a84:	mov	r0, r7
   54a88:	mov	r1, r8
   54a8c:	mov	r2, r9
   54a90:	blx	r3
   54a94:	cmp	r4, r6
   54a98:	bne	54a7c <zcfree@@Base+0x344c>
   54a9c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   54aa0:	andeq	lr, r3, r4, ror r4
   54aa4:	andeq	lr, r3, r8, ror #8
   54aa8:	bx	lr

Disassembly of section .fini:

00054aac <.fini>:
   54aac:	push	{r3, lr}
   54ab0:	pop	{r3, pc}
