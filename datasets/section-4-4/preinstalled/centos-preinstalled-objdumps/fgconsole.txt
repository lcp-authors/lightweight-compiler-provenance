
centos-preinstalled/fgconsole:     file format elf32-littlearm


Disassembly of section .init:

000106b8 <.init>:
   106b8:	push	{r3, lr}
   106bc:	bl	10a24 <close@plt+0x274>
   106c0:	pop	{r3, pc}

Disassembly of section .plt:

000106c4 <dcgettext@plt-0x14>:
   106c4:	push	{lr}		; (str lr, [sp, #-4]!)
   106c8:	ldr	lr, [pc, #4]	; 106d4 <dcgettext@plt-0x4>
   106cc:	add	lr, pc, lr
   106d0:	ldr	pc, [lr, #8]!
   106d4:	andeq	r1, r1, ip, lsr #18

000106d8 <dcgettext@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #69632	; 0x11000
   106e0:	ldr	pc, [ip, #2348]!	; 0x92c

000106e4 <__stack_chk_fail@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #69632	; 0x11000
   106ec:	ldr	pc, [ip, #2340]!	; 0x924

000106f0 <textdomain@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #69632	; 0x11000
   106f8:	ldr	pc, [ip, #2332]!	; 0x91c

000106fc <perror@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #69632	; 0x11000
   10704:	ldr	pc, [ip, #2324]!	; 0x914

00010708 <ioctl@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #69632	; 0x11000
   10710:	ldr	pc, [ip, #2316]!	; 0x90c

00010714 <puts@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #69632	; 0x11000
   1071c:	ldr	pc, [ip, #2308]!	; 0x904

00010720 <__libc_start_main@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #69632	; 0x11000
   10728:	ldr	pc, [ip, #2300]!	; 0x8fc

0001072c <__gmon_start__@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2292]!	; 0x8f4

00010738 <open@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2284]!	; 0x8ec

00010744 <getopt_long@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010750 <exit@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2268]!	; 0x8dc

0001075c <__printf_chk@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2260]!	; 0x8d4

00010768 <__fprintf_chk@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2252]!	; 0x8cc

00010774 <setlocale@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010780 <strrchr@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2236]!	; 0x8bc

0001078c <bindtextdomain@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2228]!	; 0x8b4

00010798 <isatty@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2220]!	; 0x8ac

000107a4 <abort@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2212]!	; 0x8a4

000107b0 <close@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2204]!	; 0x89c

Disassembly of section .text:

000107bc <.text>:
   107bc:	movw	ip, #3512	; 0xdb8
   107c0:	movt	ip, #1
   107c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   107c8:	mov	r6, r1
   107cc:	mov	r8, r0
   107d0:	sub	sp, sp, #156	; 0x9c
   107d4:	ldm	ip!, {r0, r1, r2, r3}
   107d8:	add	lr, sp, #84	; 0x54
   107dc:	movw	r5, #8288	; 0x2060
   107e0:	movt	r5, #2
   107e4:	mvn	r4, #0
   107e8:	str	r4, [sp, #12]
   107ec:	ldr	r7, [r5]
   107f0:	stmia	lr!, {r0, r1, r2, r3}
   107f4:	ldm	ip!, {r0, r1, r2, r3}
   107f8:	str	r7, [sp, #148]	; 0x94
   107fc:	mov	r7, #0
   10800:	mov	r9, r7
   10804:	stmia	lr!, {r0, r1, r2, r3}
   10808:	ldm	ip!, {r0, r1, r2, r3}
   1080c:	stmia	lr!, {r0, r1, r2, r3}
   10810:	ldm	ip, {r0, r1, r2, r3}
   10814:	stm	lr, {r0, r1, r2, r3}
   10818:	movw	r1, #4048	; 0xfd0
   1081c:	mov	r0, #6
   10820:	movt	r1, #1
   10824:	bl	10774 <setlocale@plt>
   10828:	movw	r0, #3784	; 0xec8
   1082c:	movw	r1, #3788	; 0xecc
   10830:	movt	r0, #1
   10834:	movt	r1, #1
   10838:	bl	1078c <bindtextdomain@plt>
   1083c:	movw	r0, #3784	; 0xec8
   10840:	movt	r0, #1
   10844:	bl	106f0 <textdomain@plt>
   10848:	ldr	r4, [r6]
   1084c:	mov	r1, #47	; 0x2f
   10850:	mov	r0, r4
   10854:	bl	10780 <strrchr@plt>
   10858:	cmp	r0, #0
   1085c:	addne	r0, r0, #1
   10860:	moveq	r0, r4
   10864:	movw	r4, #8300	; 0x206c
   10868:	movt	r4, #2
   1086c:	str	r0, [r4]
   10870:	str	r9, [sp]
   10874:	movw	r2, #3832	; 0xef8
   10878:	mov	r0, r8
   1087c:	movt	r2, #1
   10880:	mov	r1, r6
   10884:	add	r3, sp, #84	; 0x54
   10888:	bl	10744 <getopt_long@plt>
   1088c:	cmn	r0, #1
   10890:	beq	108f4 <close@plt+0x144>
   10894:	cmp	r0, #86	; 0x56
   10898:	beq	108c0 <close@plt+0x110>
   1089c:	ble	108b4 <close@plt+0x104>
   108a0:	cmp	r0, #104	; 0x68
   108a4:	beq	108bc <close@plt+0x10c>
   108a8:	cmp	r0, #110	; 0x6e
   108ac:	moveq	r7, #1
   108b0:	b	10870 <close@plt+0xc0>
   108b4:	cmp	r0, #63	; 0x3f
   108b8:	bne	10870 <close@plt+0xc0>
   108bc:	bl	10b1c <close@plt+0x36c>
   108c0:	mov	r2, #5
   108c4:	movw	r1, #3808	; 0xee0
   108c8:	mov	r0, #0
   108cc:	movt	r1, #1
   108d0:	bl	106d8 <dcgettext@plt>
   108d4:	ldr	r2, [r4]
   108d8:	movw	r3, #3820	; 0xeec
   108dc:	movt	r3, #1
   108e0:	mov	r1, r0
   108e4:	mov	r0, #1
   108e8:	bl	1075c <__printf_chk@plt>
   108ec:	mov	r0, #0
   108f0:	bl	10750 <exit@plt>
   108f4:	mov	r0, #0
   108f8:	bl	10c38 <close@plt+0x488>
   108fc:	cmp	r7, #0
   10900:	mov	r4, r0
   10904:	beq	10948 <close@plt+0x198>
   10908:	mov	r1, #22016	; 0x5600
   1090c:	add	r2, sp, #12
   10910:	bl	10708 <ioctl@plt>
   10914:	cmp	r0, #0
   10918:	blt	10928 <close@plt+0x178>
   1091c:	ldr	r2, [sp, #12]
   10920:	cmn	r2, #1
   10924:	bne	109a4 <close@plt+0x1f4>
   10928:	mov	r2, #5
   1092c:	movw	r1, #3836	; 0xefc
   10930:	mov	r0, #0
   10934:	movt	r1, #1
   10938:	bl	106d8 <dcgettext@plt>
   1093c:	bl	106fc <perror@plt>
   10940:	mov	r0, #2
   10944:	bl	10750 <exit@plt>
   10948:	movw	r1, #21534	; 0x541e
   1094c:	add	r2, sp, #24
   10950:	bl	10708 <ioctl@plt>
   10954:	cmp	r0, #0
   10958:	beq	109d4 <close@plt+0x224>
   1095c:	mov	r0, r4
   10960:	movw	r1, #22019	; 0x5603
   10964:	add	r2, sp, #16
   10968:	bl	10708 <ioctl@plt>
   1096c:	cmp	r0, #0
   10970:	bne	109c0 <close@plt+0x210>
   10974:	ldrh	r2, [sp, #16]
   10978:	movw	r1, #3860	; 0xf14
   1097c:	mov	r0, #1
   10980:	movt	r1, #1
   10984:	bl	1075c <__printf_chk@plt>
   10988:	ldr	r2, [sp, #148]	; 0x94
   1098c:	ldr	r3, [r5]
   10990:	mov	r0, r7
   10994:	cmp	r2, r3
   10998:	bne	109bc <close@plt+0x20c>
   1099c:	add	sp, sp, #156	; 0x9c
   109a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   109a4:	movw	r1, #3860	; 0xf14
   109a8:	mov	r0, #1
   109ac:	movt	r1, #1
   109b0:	bl	1075c <__printf_chk@plt>
   109b4:	mov	r0, #0
   109b8:	bl	10750 <exit@plt>
   109bc:	bl	106e4 <__stack_chk_fail@plt>
   109c0:	movw	r0, #3872	; 0xf20
   109c4:	movt	r0, #1
   109c8:	bl	106fc <perror@plt>
   109cc:	mov	r0, #1
   109d0:	bl	10750 <exit@plt>
   109d4:	movw	r0, #3864	; 0xf18
   109d8:	movt	r0, #1
   109dc:	bl	10714 <puts@plt>
   109e0:	mov	r0, r7
   109e4:	bl	10750 <exit@plt>
   109e8:	mov	fp, #0
   109ec:	mov	lr, #0
   109f0:	pop	{r1}		; (ldr r1, [sp], #4)
   109f4:	mov	r2, sp
   109f8:	push	{r2}		; (str r2, [sp, #-4]!)
   109fc:	push	{r0}		; (str r0, [sp, #-4]!)
   10a00:	ldr	ip, [pc, #16]	; 10a18 <close@plt+0x268>
   10a04:	push	{ip}		; (str ip, [sp, #-4]!)
   10a08:	ldr	r0, [pc, #12]	; 10a1c <close@plt+0x26c>
   10a0c:	ldr	r3, [pc, #12]	; 10a20 <close@plt+0x270>
   10a10:	bl	10720 <__libc_start_main@plt>
   10a14:	bl	107a4 <abort@plt>
   10a18:	andeq	r0, r1, r4, lsr #27
   10a1c:			; <UNDEFINED> instruction: 0x000107bc
   10a20:	andeq	r0, r1, r0, asr #26
   10a24:	ldr	r3, [pc, #20]	; 10a40 <close@plt+0x290>
   10a28:	ldr	r2, [pc, #20]	; 10a44 <close@plt+0x294>
   10a2c:	add	r3, pc, r3
   10a30:	ldr	r2, [r3, r2]
   10a34:	cmp	r2, #0
   10a38:	bxeq	lr
   10a3c:	b	1072c <__gmon_start__@plt>
   10a40:	andeq	r1, r1, ip, asr #11
   10a44:	andeq	r0, r0, r8, asr r0
   10a48:	push	{r3, lr}
   10a4c:	movw	r0, #8288	; 0x2060
   10a50:	ldr	r3, [pc, #36]	; 10a7c <close@plt+0x2cc>
   10a54:	movt	r0, #2
   10a58:	rsb	r3, r0, r3
   10a5c:	cmp	r3, #6
   10a60:	popls	{r3, pc}
   10a64:	movw	r3, #0
   10a68:	movt	r3, #0
   10a6c:	cmp	r3, #0
   10a70:	popeq	{r3, pc}
   10a74:	blx	r3
   10a78:	pop	{r3, pc}
   10a7c:	andeq	r2, r2, r3, rrx
   10a80:	push	{r3, lr}
   10a84:	movw	r0, #8288	; 0x2060
   10a88:	movw	r3, #8288	; 0x2060
   10a8c:	movt	r0, #2
   10a90:	movt	r3, #2
   10a94:	rsb	r3, r0, r3
   10a98:	asr	r3, r3, #2
   10a9c:	add	r3, r3, r3, lsr #31
   10aa0:	asrs	r1, r3, #1
   10aa4:	popeq	{r3, pc}
   10aa8:	movw	r2, #0
   10aac:	movt	r2, #0
   10ab0:	cmp	r2, #0
   10ab4:	popeq	{r3, pc}
   10ab8:	blx	r2
   10abc:	pop	{r3, pc}
   10ac0:	push	{r4, lr}
   10ac4:	movw	r4, #8296	; 0x2068
   10ac8:	movt	r4, #2
   10acc:	ldrb	r3, [r4]
   10ad0:	cmp	r3, #0
   10ad4:	popne	{r4, pc}
   10ad8:	bl	10a48 <close@plt+0x298>
   10adc:	mov	r3, #1
   10ae0:	strb	r3, [r4]
   10ae4:	pop	{r4, pc}
   10ae8:	movw	r0, #7940	; 0x1f04
   10aec:	movt	r0, #2
   10af0:	push	{r3, lr}
   10af4:	ldr	r3, [r0]
   10af8:	cmp	r3, #0
   10afc:	beq	10b14 <close@plt+0x364>
   10b00:	movw	r3, #0
   10b04:	movt	r3, #0
   10b08:	cmp	r3, #0
   10b0c:	beq	10b14 <close@plt+0x364>
   10b10:	blx	r3
   10b14:	pop	{r3, lr}
   10b18:	b	10a80 <close@plt+0x2d0>
   10b1c:	movw	r3, #8292	; 0x2064
   10b20:	movt	r3, #2
   10b24:	push	{r4, lr}
   10b28:	mov	r2, #5
   10b2c:	sub	sp, sp, #8
   10b30:	movw	r1, #3576	; 0xdf8
   10b34:	mov	r0, #0
   10b38:	movt	r1, #1
   10b3c:	ldr	r4, [r3]
   10b40:	bl	106d8 <dcgettext@plt>
   10b44:	movw	r3, #8300	; 0x206c
   10b48:	movt	r3, #2
   10b4c:	movw	ip, #3824	; 0xef0
   10b50:	mov	r1, #1
   10b54:	ldr	r3, [r3]
   10b58:	movt	ip, #1
   10b5c:	str	ip, [sp]
   10b60:	str	r3, [sp, #4]
   10b64:	mov	r2, r0
   10b68:	mov	r0, r4
   10b6c:	bl	10768 <__fprintf_chk@plt>
   10b70:	mov	r0, #1
   10b74:	bl	10750 <exit@plt>
   10b78:	push	{r4, lr}
   10b7c:	mov	r1, #2
   10b80:	mov	r4, r0
   10b84:	bl	10738 <open@plt>
   10b88:	cmp	r0, #0
   10b8c:	popge	{r4, pc}
   10b90:	mov	r0, r4
   10b94:	mov	r1, #1
   10b98:	bl	10738 <open@plt>
   10b9c:	cmp	r0, #0
   10ba0:	popge	{r4, pc}
   10ba4:	mov	r0, r4
   10ba8:	mov	r1, #0
   10bac:	bl	10738 <open@plt>
   10bb0:	orr	r0, r0, r0, asr #31
   10bb4:	pop	{r4, pc}
   10bb8:	push	{r4, r5, lr}
   10bbc:	movw	r4, #8288	; 0x2060
   10bc0:	movt	r4, #2
   10bc4:	sub	sp, sp, #12
   10bc8:	mov	r2, #0
   10bcc:	mov	r5, r0
   10bd0:	ldr	r3, [r4]
   10bd4:	strb	r2, [sp, #3]
   10bd8:	str	r3, [sp, #4]
   10bdc:	bl	10798 <isatty@plt>
   10be0:	cmp	r0, #0
   10be4:	bne	10c04 <close@plt+0x454>
   10be8:	mov	r0, #0
   10bec:	ldr	r2, [sp, #4]
   10bf0:	ldr	r3, [r4]
   10bf4:	cmp	r2, r3
   10bf8:	bne	10c34 <close@plt+0x484>
   10bfc:	add	sp, sp, #12
   10c00:	pop	{r4, r5, pc}
   10c04:	mov	r0, r5
   10c08:	movw	r1, #19251	; 0x4b33
   10c0c:	add	r2, sp, #3
   10c10:	bl	10708 <ioctl@plt>
   10c14:	cmp	r0, #0
   10c18:	bne	10be8 <close@plt+0x438>
   10c1c:	ldrb	r0, [sp, #3]
   10c20:	sub	r0, r0, #1
   10c24:	cmp	r0, #1
   10c28:	movhi	r0, #0
   10c2c:	movls	r0, #1
   10c30:	b	10bec <close@plt+0x43c>
   10c34:	bl	106e4 <__stack_chk_fail@plt>
   10c38:	push	{r3, r4, r5, lr}
   10c3c:	subs	r4, r0, #0
   10c40:	beq	10c64 <close@plt+0x4b4>
   10c44:	bl	10b78 <close@plt+0x3c8>
   10c48:	subs	r5, r0, #0
   10c4c:	blt	10d04 <close@plt+0x554>
   10c50:	bl	10bb8 <close@plt+0x408>
   10c54:	cmp	r0, #0
   10c58:	mov	r0, r5
   10c5c:	beq	10d00 <close@plt+0x550>
   10c60:	pop	{r3, r4, r5, pc}
   10c64:	movw	r4, #3928	; 0xf58
   10c68:	movw	r0, #3956	; 0xf74
   10c6c:	movt	r4, #1
   10c70:	movt	r0, #1
   10c74:	bl	10b78 <close@plt+0x3c8>
   10c78:	subs	r5, r0, #0
   10c7c:	blt	10c94 <close@plt+0x4e4>
   10c80:	bl	10bb8 <close@plt+0x408>
   10c84:	cmp	r0, #0
   10c88:	mov	r0, r5
   10c8c:	bne	10cf4 <close@plt+0x544>
   10c90:	bl	107b0 <close@plt>
   10c94:	ldr	r0, [r4, #4]!
   10c98:	cmp	r0, #0
   10c9c:	bne	10c74 <close@plt+0x4c4>
   10ca0:	mov	r5, r0
   10ca4:	mov	r0, r5
   10ca8:	bl	10bb8 <close@plt+0x408>
   10cac:	cmp	r0, #0
   10cb0:	bne	10cf8 <close@plt+0x548>
   10cb4:	add	r5, r5, #1
   10cb8:	cmp	r5, #3
   10cbc:	bne	10ca4 <close@plt+0x4f4>
   10cc0:	movw	r3, #8292	; 0x2064
   10cc4:	movt	r3, #2
   10cc8:	mov	r2, #5
   10ccc:	movw	r1, #3992	; 0xf98
   10cd0:	movt	r1, #1
   10cd4:	ldr	r4, [r3]
   10cd8:	bl	106d8 <dcgettext@plt>
   10cdc:	mov	r1, #1
   10ce0:	mov	r2, r0
   10ce4:	mov	r0, r4
   10ce8:	bl	10768 <__fprintf_chk@plt>
   10cec:	mov	r0, #1
   10cf0:	bl	10750 <exit@plt>
   10cf4:	pop	{r3, r4, r5, pc}
   10cf8:	mov	r0, r5
   10cfc:	pop	{r3, r4, r5, pc}
   10d00:	bl	107b0 <close@plt>
   10d04:	movw	r3, #8292	; 0x2064
   10d08:	movt	r3, #2
   10d0c:	mov	r2, #5
   10d10:	movw	r1, #3972	; 0xf84
   10d14:	mov	r0, #0
   10d18:	movt	r1, #1
   10d1c:	ldr	r5, [r3]
   10d20:	bl	106d8 <dcgettext@plt>
   10d24:	mov	r3, r4
   10d28:	mov	r1, #1
   10d2c:	mov	r2, r0
   10d30:	mov	r0, r5
   10d34:	bl	10768 <__fprintf_chk@plt>
   10d38:	mov	r0, #1
   10d3c:	bl	10750 <exit@plt>
   10d40:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10d44:	mov	r7, r0
   10d48:	ldr	r6, [pc, #76]	; 10d9c <close@plt+0x5ec>
   10d4c:	mov	r8, r1
   10d50:	ldr	r5, [pc, #72]	; 10da0 <close@plt+0x5f0>
   10d54:	mov	r9, r2
   10d58:	add	r6, pc, r6
   10d5c:	bl	106b8 <dcgettext@plt-0x20>
   10d60:	add	r5, pc, r5
   10d64:	rsb	r6, r5, r6
   10d68:	asrs	r6, r6, #2
   10d6c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10d70:	sub	r5, r5, #4
   10d74:	mov	r4, #0
   10d78:	add	r4, r4, #1
   10d7c:	ldr	r3, [r5, #4]!
   10d80:	mov	r0, r7
   10d84:	mov	r1, r8
   10d88:	mov	r2, r9
   10d8c:	blx	r3
   10d90:	cmp	r4, r6
   10d94:	bne	10d78 <close@plt+0x5c8>
   10d98:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10d9c:	andeq	r1, r1, r0, lsr #3
   10da0:	muleq	r1, r4, r1
   10da4:	bx	lr

Disassembly of section .fini:

00010da8 <.fini>:
   10da8:	push	{r3, lr}
   10dac:	pop	{r3, pc}
