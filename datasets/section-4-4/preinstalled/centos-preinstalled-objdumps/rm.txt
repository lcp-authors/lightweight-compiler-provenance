
centos-preinstalled/rm:     file format elf32-littlearm


Disassembly of section .init:

00011304 <.init>:
   11304:	push	{r3, lr}
   11308:	bl	11cfc <__assert_fail@plt+0x66c>
   1130c:	pop	{r3, pc}

Disassembly of section .plt:

00011310 <fdopen@plt-0x14>:
   11310:	push	{lr}		; (str lr, [sp, #-4]!)
   11314:	ldr	lr, [pc, #4]	; 11320 <fdopen@plt-0x4>
   11318:	add	lr, pc, lr
   1131c:	ldr	pc, [lr, #8]!
   11320:	andeq	sl, r1, r0, ror #25

00011324 <fdopen@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #106496	; 0x1a000
   1132c:	ldr	pc, [ip, #3296]!	; 0xce0

00011330 <fstatfs64@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #106496	; 0x1a000
   11338:	ldr	pc, [ip, #3288]!	; 0xcd8

0001133c <calloc@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #106496	; 0x1a000
   11344:	ldr	pc, [ip, #3280]!	; 0xcd0

00011348 <fputs_unlocked@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #106496	; 0x1a000
   11350:	ldr	pc, [ip, #3272]!	; 0xcc8

00011354 <raise@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #106496	; 0x1a000
   1135c:	ldr	pc, [ip, #3264]!	; 0xcc0

00011360 <__getdelim@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #106496	; 0x1a000
   11368:	ldr	pc, [ip, #3256]!	; 0xcb8

0001136c <strcmp@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #106496	; 0x1a000
   11374:	ldr	pc, [ip, #3248]!	; 0xcb0

00011378 <fflush@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #106496	; 0x1a000
   11380:	ldr	pc, [ip, #3240]!	; 0xca8

00011384 <unlinkat@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #106496	; 0x1a000
   1138c:	ldr	pc, [ip, #3232]!	; 0xca0

00011390 <memmove@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #106496	; 0x1a000
   11398:	ldr	pc, [ip, #3224]!	; 0xc98

0001139c <free@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #106496	; 0x1a000
   113a4:	ldr	pc, [ip, #3216]!	; 0xc90

000113a8 <faccessat@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #106496	; 0x1a000
   113b0:	ldr	pc, [ip, #3208]!	; 0xc88

000113b4 <_exit@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #106496	; 0x1a000
   113bc:	ldr	pc, [ip, #3200]!	; 0xc80

000113c0 <memcpy@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #106496	; 0x1a000
   113c8:	ldr	pc, [ip, #3192]!	; 0xc78

000113cc <mbsinit@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #106496	; 0x1a000
   113d4:	ldr	pc, [ip, #3184]!	; 0xc70

000113d8 <memcmp@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #106496	; 0x1a000
   113e0:	ldr	pc, [ip, #3176]!	; 0xc68

000113e4 <dcgettext@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #106496	; 0x1a000
   113ec:	ldr	pc, [ip, #3168]!	; 0xc60

000113f0 <__stack_chk_fail@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #106496	; 0x1a000
   113f8:	ldr	pc, [ip, #3160]!	; 0xc58

000113fc <realloc@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #106496	; 0x1a000
   11404:	ldr	pc, [ip, #3152]!	; 0xc50

00011408 <textdomain@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #106496	; 0x1a000
   11410:	ldr	pc, [ip, #3144]!	; 0xc48

00011414 <geteuid@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #106496	; 0x1a000
   1141c:	ldr	pc, [ip, #3136]!	; 0xc40

00011420 <__fxstatat64@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #106496	; 0x1a000
   11428:	ldr	pc, [ip, #3128]!	; 0xc38

0001142c <iswprint@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #106496	; 0x1a000
   11434:	ldr	pc, [ip, #3120]!	; 0xc30

00011438 <__fxstat64@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #106496	; 0x1a000
   11440:	ldr	pc, [ip, #3112]!	; 0xc28

00011444 <fwrite@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #106496	; 0x1a000
   1144c:	ldr	pc, [ip, #3104]!	; 0xc20

00011450 <lseek64@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #106496	; 0x1a000
   11458:	ldr	pc, [ip, #3096]!	; 0xc18

0001145c <__ctype_get_mb_cur_max@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #106496	; 0x1a000
   11464:	ldr	pc, [ip, #3088]!	; 0xc10

00011468 <strcpy@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #106496	; 0x1a000
   11470:	ldr	pc, [ip, #3080]!	; 0xc08

00011474 <__fpending@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #106496	; 0x1a000
   1147c:	ldr	pc, [ip, #3072]!	; 0xc00

00011480 <mbrtowc@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #106496	; 0x1a000
   11488:	ldr	pc, [ip, #3064]!	; 0xbf8

0001148c <error@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #106496	; 0x1a000
   11494:	ldr	pc, [ip, #3056]!	; 0xbf0

00011498 <open64@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #106496	; 0x1a000
   114a0:	ldr	pc, [ip, #3048]!	; 0xbe8

000114a4 <getenv@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #106496	; 0x1a000
   114ac:	ldr	pc, [ip, #3040]!	; 0xbe0

000114b0 <malloc@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #106496	; 0x1a000
   114b8:	ldr	pc, [ip, #3032]!	; 0xbd8

000114bc <__libc_start_main@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #106496	; 0x1a000
   114c4:	ldr	pc, [ip, #3024]!	; 0xbd0

000114c8 <__freading@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #106496	; 0x1a000
   114d0:	ldr	pc, [ip, #3016]!	; 0xbc8

000114d4 <__gmon_start__@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #106496	; 0x1a000
   114dc:	ldr	pc, [ip, #3008]!	; 0xbc0

000114e0 <getopt_long@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #106496	; 0x1a000
   114e8:	ldr	pc, [ip, #3000]!	; 0xbb8

000114ec <__ctype_b_loc@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #106496	; 0x1a000
   114f4:	ldr	pc, [ip, #2992]!	; 0xbb0

000114f8 <exit@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #106496	; 0x1a000
   11500:	ldr	pc, [ip, #2984]!	; 0xba8

00011504 <strlen@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #106496	; 0x1a000
   1150c:	ldr	pc, [ip, #2976]!	; 0xba0

00011510 <openat64@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #106496	; 0x1a000
   11518:	ldr	pc, [ip, #2968]!	; 0xb98

0001151c <ungetc@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #106496	; 0x1a000
   11524:	ldr	pc, [ip, #2960]!	; 0xb90

00011528 <fcntl@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #106496	; 0x1a000
   11530:	ldr	pc, [ip, #2952]!	; 0xb88

00011534 <__errno_location@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #106496	; 0x1a000
   1153c:	ldr	pc, [ip, #2944]!	; 0xb80

00011540 <__cxa_atexit@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #106496	; 0x1a000
   11548:	ldr	pc, [ip, #2936]!	; 0xb78

0001154c <memset@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #106496	; 0x1a000
   11554:	ldr	pc, [ip, #2928]!	; 0xb70

00011558 <fscanf@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #106496	; 0x1a000
   11560:	ldr	pc, [ip, #2920]!	; 0xb68

00011564 <__printf_chk@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #106496	; 0x1a000
   1156c:	ldr	pc, [ip, #2912]!	; 0xb60

00011570 <fileno@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #106496	; 0x1a000
   11578:	ldr	pc, [ip, #2904]!	; 0xb58

0001157c <__fprintf_chk@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #106496	; 0x1a000
   11584:	ldr	pc, [ip, #2896]!	; 0xb50

00011588 <fclose@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #106496	; 0x1a000
   11590:	ldr	pc, [ip, #2888]!	; 0xb48

00011594 <fseeko64@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #106496	; 0x1a000
   1159c:	ldr	pc, [ip, #2880]!	; 0xb40

000115a0 <rpmatch@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #106496	; 0x1a000
   115a8:	ldr	pc, [ip, #2872]!	; 0xb38

000115ac <__uflow@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #106496	; 0x1a000
   115b4:	ldr	pc, [ip, #2864]!	; 0xb30

000115b8 <__overflow@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #106496	; 0x1a000
   115c0:	ldr	pc, [ip, #2856]!	; 0xb28

000115c4 <setlocale@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #106496	; 0x1a000
   115cc:	ldr	pc, [ip, #2848]!	; 0xb20

000115d0 <strrchr@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #106496	; 0x1a000
   115d8:	ldr	pc, [ip, #2840]!	; 0xb18

000115dc <nl_langinfo@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #106496	; 0x1a000
   115e4:	ldr	pc, [ip, #2832]!	; 0xb10

000115e8 <readdir64@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #106496	; 0x1a000
   115f0:	ldr	pc, [ip, #2824]!	; 0xb08

000115f4 <fdopendir@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #106496	; 0x1a000
   115fc:	ldr	pc, [ip, #2816]!	; 0xb00

00011600 <dirfd@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #106496	; 0x1a000
   11608:	ldr	pc, [ip, #2808]!	; 0xaf8

0001160c <fchdir@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #106496	; 0x1a000
   11614:	ldr	pc, [ip, #2800]!	; 0xaf0

00011618 <qsort@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #106496	; 0x1a000
   11620:	ldr	pc, [ip, #2792]!	; 0xae8

00011624 <bindtextdomain@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #106496	; 0x1a000
   1162c:	ldr	pc, [ip, #2784]!	; 0xae0

00011630 <__xstat64@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #106496	; 0x1a000
   11638:	ldr	pc, [ip, #2776]!	; 0xad8

0001163c <isatty@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #106496	; 0x1a000
   11644:	ldr	pc, [ip, #2768]!	; 0xad0

00011648 <strncmp@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #106496	; 0x1a000
   11650:	ldr	pc, [ip, #2760]!	; 0xac8

00011654 <abort@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #106496	; 0x1a000
   1165c:	ldr	pc, [ip, #2752]!	; 0xac0

00011660 <close@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #106496	; 0x1a000
   11668:	ldr	pc, [ip, #2744]!	; 0xab8

0001166c <__lxstat64@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #106496	; 0x1a000
   11674:	ldr	pc, [ip, #2736]!	; 0xab0

00011678 <dcngettext@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #106496	; 0x1a000
   11680:	ldr	pc, [ip, #2728]!	; 0xaa8

00011684 <closedir@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #106496	; 0x1a000
   1168c:	ldr	pc, [ip, #2720]!	; 0xaa0

00011690 <__assert_fail@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #106496	; 0x1a000
   11698:	ldr	pc, [ip, #2712]!	; 0xa98

Disassembly of section .text:

000116a0 <close_stdin@@Base-0x1cfc>:
   116a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116a4:	sub	sp, sp, #180	; 0xb4
   116a8:	ldr	r9, [pc, #1412]	; 11c34 <__assert_fail@plt+0x5a4>
   116ac:	mov	r6, r1
   116b0:	ldr	r2, [pc, #1408]	; 11c38 <__assert_fail@plt+0x5a8>
   116b4:	mov	r4, r0
   116b8:	add	r9, pc, r9
   116bc:	ldr	r0, [r1]
   116c0:	ldr	r3, [pc, #1396]	; 11c3c <__assert_fail@plt+0x5ac>
   116c4:	mov	r1, #1
   116c8:	ldr	r2, [r9, r2]
   116cc:	mov	r5, #0
   116d0:	str	r1, [sp, #28]
   116d4:	add	r3, pc, r3
   116d8:	ldr	r1, [pc, #1376]	; 11c40 <__assert_fail@plt+0x5b0>
   116dc:	mov	fp, r5
   116e0:	ldr	r2, [r2]
   116e4:	add	r1, pc, r1
   116e8:	str	r3, [sp, #24]
   116ec:	str	r1, [sp, #36]	; 0x24
   116f0:	str	r2, [sp, #172]	; 0xac
   116f4:	bl	137b4 <close_stdin@@Base+0x418>
   116f8:	ldr	r1, [pc, #1348]	; 11c44 <__assert_fail@plt+0x5b4>
   116fc:	mov	r0, #6
   11700:	ldr	sl, [pc, #1344]	; 11c48 <__assert_fail@plt+0x5b8>
   11704:	add	r1, pc, r1
   11708:	ldr	r8, [pc, #1340]	; 11c4c <__assert_fail@plt+0x5bc>
   1170c:	bl	115c4 <setlocale@plt>
   11710:	ldr	r3, [sp, #24]
   11714:	ldr	r1, [pc, #1332]	; 11c50 <__assert_fail@plt+0x5c0>
   11718:	add	sl, pc, sl
   1171c:	add	r8, pc, r8
   11720:	add	r7, sl, #28
   11724:	add	r1, pc, r1
   11728:	mov	r0, r3
   1172c:	bl	11624 <bindtextdomain@plt>
   11730:	ldr	r3, [sp, #24]
   11734:	mov	r0, r3
   11738:	bl	11408 <textdomain@plt>
   1173c:	ldr	r3, [pc, #1296]	; 11c54 <__assert_fail@plt+0x5c4>
   11740:	ldr	r2, [pc, #1296]	; 11c58 <__assert_fail@plt+0x5c8>
   11744:	add	r2, pc, r2
   11748:	str	r2, [sp, #32]
   1174c:	ldr	r0, [r9, r3]
   11750:	bl	1a43c <fts_children@@Base+0x2820>
   11754:	mov	r0, r5
   11758:	mov	r3, #4
   1175c:	strb	r5, [sp, #44]	; 0x2c
   11760:	strb	r5, [sp, #52]	; 0x34
   11764:	strb	r5, [sp, #54]	; 0x36
   11768:	strb	r5, [sp, #53]	; 0x35
   1176c:	str	r5, [sp, #56]	; 0x38
   11770:	str	r3, [sp, #48]	; 0x30
   11774:	bl	1163c <isatty@plt>
   11778:	strb	r5, [sp, #61]	; 0x3d
   1177c:	strb	r5, [sp, #62]	; 0x3e
   11780:	subs	r0, r0, r5
   11784:	movne	r0, #1
   11788:	strb	r0, [sp, #60]	; 0x3c
   1178c:	mov	r5, #0
   11790:	mov	r0, r4
   11794:	str	r5, [sp]
   11798:	mov	r1, r6
   1179c:	mov	r2, r8
   117a0:	mov	r3, r7
   117a4:	bl	114e0 <getopt_long@plt>
   117a8:	cmn	r0, #1
   117ac:	beq	11a6c <__assert_fail@plt+0x3dc>
   117b0:	cmp	r0, #105	; 0x69
   117b4:	beq	11a48 <__assert_fail@plt+0x3b8>
   117b8:	ble	117f0 <__assert_fail@plt+0x160>
   117bc:	movw	r3, #257	; 0x101
   117c0:	cmp	r0, r3
   117c4:	beq	11a3c <__assert_fail@plt+0x3ac>
   117c8:	ble	11824 <__assert_fail@plt+0x194>
   117cc:	movw	r3, #259	; 0x103
   117d0:	cmp	r0, r3
   117d4:	beq	11a30 <__assert_fail@plt+0x3a0>
   117d8:	blt	11924 <__assert_fail@plt+0x294>
   117dc:	cmp	r0, #260	; 0x104
   117e0:	bne	11934 <__assert_fail@plt+0x2a4>
   117e4:	mov	r3, #1
   117e8:	strb	r3, [sp, #60]	; 0x3c
   117ec:	b	1178c <__assert_fail@plt+0xfc>
   117f0:	cmp	r0, #73	; 0x49
   117f4:	beq	11a1c <__assert_fail@plt+0x38c>
   117f8:	ble	118a4 <__assert_fail@plt+0x214>
   117fc:	cmp	r0, #100	; 0x64
   11800:	beq	11a10 <__assert_fail@plt+0x380>
   11804:	cmp	r0, #102	; 0x66
   11808:	bne	119f0 <__assert_fail@plt+0x360>
   1180c:	mov	r2, #5
   11810:	mov	r3, #1
   11814:	mov	fp, r5
   11818:	str	r2, [sp, #48]	; 0x30
   1181c:	strb	r3, [sp, #44]	; 0x2c
   11820:	b	1178c <__assert_fail@plt+0xfc>
   11824:	cmp	r0, #118	; 0x76
   11828:	beq	11a04 <__assert_fail@plt+0x374>
   1182c:	cmp	r0, #256	; 0x100
   11830:	bne	1192c <__assert_fail@plt+0x29c>
   11834:	ldr	r3, [pc, #1056]	; 11c5c <__assert_fail@plt+0x5cc>
   11838:	ldr	r3, [r9, r3]
   1183c:	ldr	r1, [r3]
   11840:	cmp	r1, #0
   11844:	beq	11b54 <__assert_fail@plt+0x4c4>
   11848:	ldr	r3, [pc, #1040]	; 11c60 <__assert_fail@plt+0x5d0>
   1184c:	mov	ip, #4
   11850:	str	ip, [sp]
   11854:	mov	r2, sl
   11858:	ldr	r0, [sp, #36]	; 0x24
   1185c:	ldr	lr, [r9, r3]
   11860:	ldr	r3, [sp, #32]
   11864:	ldr	lr, [lr]
   11868:	str	ip, [sp, #24]
   1186c:	str	lr, [sp, #4]
   11870:	bl	132cc <__assert_fail@plt+0x1c3c>
   11874:	ldr	r1, [sp, #32]
   11878:	ldr	ip, [sp, #24]
   1187c:	ldr	r3, [r1, r0, lsl #2]
   11880:	cmp	r3, #1
   11884:	beq	11a5c <__assert_fail@plt+0x3cc>
   11888:	cmp	r3, #2
   1188c:	beq	11b54 <__assert_fail@plt+0x4c4>
   11890:	cmp	r3, #0
   11894:	moveq	fp, r3
   11898:	moveq	r3, #5
   1189c:	streq	r3, [sp, #48]	; 0x30
   118a0:	b	1178c <__assert_fail@plt+0xfc>
   118a4:	cmn	r0, #3
   118a8:	beq	118bc <__assert_fail@plt+0x22c>
   118ac:	cmn	r0, #2
   118b0:	bne	11934 <__assert_fail@plt+0x2a4>
   118b4:	mov	r0, r5
   118b8:	bl	11df4 <__assert_fail@plt+0x764>
   118bc:	ldr	r2, [pc, #928]	; 11c64 <__assert_fail@plt+0x5d4>
   118c0:	ldr	r3, [pc, #928]	; 11c68 <__assert_fail@plt+0x5d8>
   118c4:	ldr	r1, [pc, #928]	; 11c6c <__assert_fail@plt+0x5dc>
   118c8:	ldr	r0, [r9, r2]
   118cc:	ldr	r3, [r9, r3]
   118d0:	add	r1, pc, r1
   118d4:	ldr	r2, [pc, #916]	; 11c70 <__assert_fail@plt+0x5e0>
   118d8:	ldr	r0, [r0]
   118dc:	ldr	r3, [r3]
   118e0:	add	r2, pc, r2
   118e4:	str	r1, [sp, #8]
   118e8:	str	r2, [sp, #12]
   118ec:	ldr	lr, [pc, #896]	; 11c74 <__assert_fail@plt+0x5e4>
   118f0:	ldr	ip, [pc, #896]	; 11c78 <__assert_fail@plt+0x5e8>
   118f4:	ldr	r1, [pc, #896]	; 11c7c <__assert_fail@plt+0x5ec>
   118f8:	add	lr, pc, lr
   118fc:	ldr	r2, [pc, #892]	; 11c80 <__assert_fail@plt+0x5f0>
   11900:	add	ip, pc, ip
   11904:	str	r5, [sp, #16]
   11908:	add	r1, pc, r1
   1190c:	str	lr, [sp]
   11910:	add	r2, pc, r2
   11914:	str	ip, [sp, #4]
   11918:	bl	1551c <close_stdin@@Base+0x2180>
   1191c:	mov	r0, r5
   11920:	bl	114f8 <exit@plt>
   11924:	str	r5, [sp, #28]
   11928:	b	1178c <__assert_fail@plt+0xfc>
   1192c:	cmp	r0, #114	; 0x72
   11930:	beq	119f8 <__assert_fail@plt+0x368>
   11934:	cmp	r4, #1
   11938:	addgt	sl, sp, #64	; 0x40
   1193c:	movgt	r8, r6
   11940:	movgt	r5, #1
   11944:	bgt	11958 <__assert_fail@plt+0x2c8>
   11948:	b	119e8 <__assert_fail@plt+0x358>
   1194c:	add	r5, r5, #1
   11950:	cmp	r5, r4
   11954:	beq	119e8 <__assert_fail@plt+0x358>
   11958:	ldr	r7, [r8, #4]!
   1195c:	ldrb	r3, [r7]
   11960:	cmp	r3, #45	; 0x2d
   11964:	bne	1194c <__assert_fail@plt+0x2bc>
   11968:	ldrb	r3, [r7, #1]
   1196c:	cmp	r3, #0
   11970:	beq	1194c <__assert_fail@plt+0x2bc>
   11974:	mov	r0, #3
   11978:	mov	r1, r7
   1197c:	mov	r2, sl
   11980:	bl	1166c <__lxstat64@plt>
   11984:	cmp	r0, #0
   11988:	bne	1194c <__assert_fail@plt+0x2bc>
   1198c:	ldr	r3, [pc, #752]	; 11c84 <__assert_fail@plt+0x5f4>
   11990:	mov	r2, #5
   11994:	ldr	r1, [pc, #748]	; 11c88 <__assert_fail@plt+0x5f8>
   11998:	ldr	r3, [r9, r3]
   1199c:	add	r1, pc, r1
   119a0:	ldr	r4, [r3]
   119a4:	bl	113e4 <dcgettext@plt>
   119a8:	mov	r2, r7
   119ac:	ldr	r5, [r6]
   119b0:	mov	r8, r0
   119b4:	mov	r0, #1
   119b8:	mov	r1, r0
   119bc:	bl	14cfc <close_stdin@@Base+0x1960>
   119c0:	mov	r6, r0
   119c4:	mov	r0, r7
   119c8:	bl	15004 <close_stdin@@Base+0x1c68>
   119cc:	str	r6, [sp]
   119d0:	mov	r2, r8
   119d4:	mov	r3, r5
   119d8:	mov	r1, #1
   119dc:	str	r0, [sp, #4]
   119e0:	mov	r0, r4
   119e4:	bl	1157c <__fprintf_chk@plt>
   119e8:	mov	r0, #1
   119ec:	bl	11df4 <__assert_fail@plt+0x764>
   119f0:	cmp	r0, #82	; 0x52
   119f4:	bne	11934 <__assert_fail@plt+0x2a4>
   119f8:	mov	r3, #1
   119fc:	strb	r3, [sp, #53]	; 0x35
   11a00:	b	1178c <__assert_fail@plt+0xfc>
   11a04:	mov	r3, #1
   11a08:	strb	r3, [sp, #61]	; 0x3d
   11a0c:	b	1178c <__assert_fail@plt+0xfc>
   11a10:	mov	r3, #1
   11a14:	strb	r3, [sp, #54]	; 0x36
   11a18:	b	1178c <__assert_fail@plt+0xfc>
   11a1c:	mov	r3, #4
   11a20:	strb	r5, [sp, #44]	; 0x2c
   11a24:	mov	fp, #1
   11a28:	str	r3, [sp, #48]	; 0x30
   11a2c:	b	1178c <__assert_fail@plt+0xfc>
   11a30:	mov	r3, #1
   11a34:	str	r3, [sp, #28]
   11a38:	b	1178c <__assert_fail@plt+0xfc>
   11a3c:	mov	r3, #1
   11a40:	strb	r3, [sp, #52]	; 0x34
   11a44:	b	1178c <__assert_fail@plt+0xfc>
   11a48:	mov	r3, #3
   11a4c:	mov	fp, r5
   11a50:	str	r3, [sp, #48]	; 0x30
   11a54:	strb	r5, [sp, #44]	; 0x2c
   11a58:	b	1178c <__assert_fail@plt+0xfc>
   11a5c:	str	ip, [sp, #48]	; 0x30
   11a60:	mov	fp, r3
   11a64:	strb	r5, [sp, #44]	; 0x2c
   11a68:	b	1178c <__assert_fail@plt+0xfc>
   11a6c:	ldr	r3, [pc, #536]	; 11c8c <__assert_fail@plt+0x5fc>
   11a70:	ldr	r5, [r9, r3]
   11a74:	ldr	r3, [r5]
   11a78:	cmp	r4, r3
   11a7c:	ble	11b68 <__assert_fail@plt+0x4d8>
   11a80:	ldrb	r3, [sp, #53]	; 0x35
   11a84:	cmp	r3, #0
   11a88:	beq	11a98 <__assert_fail@plt+0x408>
   11a8c:	ldr	r1, [sp, #28]
   11a90:	cmp	r1, #0
   11a94:	bne	11bd4 <__assert_fail@plt+0x544>
   11a98:	ldr	r3, [r5]
   11a9c:	cmp	fp, #0
   11aa0:	add	r6, r6, r3, lsl #2
   11aa4:	beq	11b18 <__assert_fail@plt+0x488>
   11aa8:	ldrb	r0, [sp, #53]	; 0x35
   11aac:	rsb	r4, r3, r4
   11ab0:	cmp	r0, #0
   11ab4:	bne	11bb4 <__assert_fail@plt+0x524>
   11ab8:	cmp	r4, #3
   11abc:	bls	11b18 <__assert_fail@plt+0x488>
   11ac0:	ldr	r1, [pc, #456]	; 11c90 <__assert_fail@plt+0x600>
   11ac4:	mov	lr, #5
   11ac8:	ldr	r2, [pc, #452]	; 11c94 <__assert_fail@plt+0x604>
   11acc:	ldr	ip, [pc, #432]	; 11c84 <__assert_fail@plt+0x5f4>
   11ad0:	add	r1, pc, r1
   11ad4:	add	r2, pc, r2
   11ad8:	ldr	ip, [r9, ip]
   11adc:	mov	r3, r4
   11ae0:	str	lr, [sp]
   11ae4:	ldr	r5, [ip]
   11ae8:	bl	11678 <dcngettext@plt>
   11aec:	ldr	r3, [pc, #420]	; 11c98 <__assert_fail@plt+0x608>
   11af0:	mov	r1, #1
   11af4:	ldr	r3, [r9, r3]
   11af8:	str	r4, [sp]
   11afc:	ldr	r3, [r3]
   11b00:	mov	r2, r0
   11b04:	mov	r0, r5
   11b08:	bl	1157c <__fprintf_chk@plt>
   11b0c:	bl	15964 <close_stdin@@Base+0x25c8>
   11b10:	cmp	r0, #0
   11b14:	beq	11b9c <__assert_fail@plt+0x50c>
   11b18:	mov	r0, r6
   11b1c:	add	r1, sp, #44	; 0x2c
   11b20:	bl	127fc <__assert_fail@plt+0x116c>
   11b24:	sub	r3, r0, #2
   11b28:	cmp	r3, #2
   11b2c:	bls	11ba4 <__assert_fail@plt+0x514>
   11b30:	ldr	r3, [pc, #356]	; 11c9c <__assert_fail@plt+0x60c>
   11b34:	movw	r2, #354	; 0x162
   11b38:	ldr	r0, [pc, #352]	; 11ca0 <__assert_fail@plt+0x610>
   11b3c:	ldr	r1, [pc, #352]	; 11ca4 <__assert_fail@plt+0x614>
   11b40:	add	r3, pc, r3
   11b44:	add	r0, pc, r0
   11b48:	add	r3, r3, #24
   11b4c:	add	r1, pc, r1
   11b50:	bl	11690 <__assert_fail@plt>
   11b54:	mov	fp, #0
   11b58:	mov	r2, #3
   11b5c:	strb	fp, [sp, #44]	; 0x2c
   11b60:	str	r2, [sp, #48]	; 0x30
   11b64:	b	1178c <__assert_fail@plt+0xfc>
   11b68:	ldrb	r4, [sp, #44]	; 0x2c
   11b6c:	cmp	r4, #0
   11b70:	bne	11b9c <__assert_fail@plt+0x50c>
   11b74:	ldr	r1, [pc, #300]	; 11ca8 <__assert_fail@plt+0x618>
   11b78:	mov	r0, r4
   11b7c:	mov	r2, #5
   11b80:	add	r1, pc, r1
   11b84:	bl	113e4 <dcgettext@plt>
   11b88:	mov	r1, r4
   11b8c:	mov	r2, r0
   11b90:	mov	r0, r4
   11b94:	bl	1148c <error@plt>
   11b98:	b	119e8 <__assert_fail@plt+0x358>
   11b9c:	mov	r0, #0
   11ba0:	bl	114f8 <exit@plt>
   11ba4:	subs	r3, r0, #4
   11ba8:	rsbs	r0, r3, #0
   11bac:	adcs	r0, r0, r3
   11bb0:	bl	114f8 <exit@plt>
   11bb4:	ldr	r1, [pc, #240]	; 11cac <__assert_fail@plt+0x61c>
   11bb8:	mov	lr, #5
   11bbc:	ldr	r2, [pc, #236]	; 11cb0 <__assert_fail@plt+0x620>
   11bc0:	mov	r0, #0
   11bc4:	ldr	ip, [pc, #184]	; 11c84 <__assert_fail@plt+0x5f4>
   11bc8:	add	r1, pc, r1
   11bcc:	add	r2, pc, r2
   11bd0:	b	11ad8 <__assert_fail@plt+0x448>
   11bd4:	ldr	r0, [pc, #216]	; 11cb4 <__assert_fail@plt+0x624>
   11bd8:	add	r0, pc, r0
   11bdc:	bl	15010 <close_stdin@@Base+0x1c74>
   11be0:	cmp	r0, #0
   11be4:	mov	r7, r0
   11be8:	str	r0, [sp, #56]	; 0x38
   11bec:	bne	11a98 <__assert_fail@plt+0x408>
   11bf0:	bl	11534 <__errno_location@plt>
   11bf4:	ldr	r1, [pc, #188]	; 11cb8 <__assert_fail@plt+0x628>
   11bf8:	mov	r2, #5
   11bfc:	add	r1, pc, r1
   11c00:	ldr	r8, [r0]
   11c04:	mov	r0, r7
   11c08:	bl	113e4 <dcgettext@plt>
   11c0c:	mov	r7, r0
   11c10:	ldr	r0, [pc, #164]	; 11cbc <__assert_fail@plt+0x62c>
   11c14:	add	r0, pc, r0
   11c18:	bl	15004 <close_stdin@@Base+0x1c68>
   11c1c:	mov	r1, r8
   11c20:	mov	r2, r7
   11c24:	mov	r3, r0
   11c28:	mov	r0, #1
   11c2c:	bl	1148c <error@plt>
   11c30:	b	11a98 <__assert_fail@plt+0x408>
   11c34:	andeq	sl, r1, r0, asr #18
   11c38:	andeq	r0, r0, ip, lsr r1
   11c3c:	muleq	r0, r4, r4
   11c40:	andeq	r9, r0, ip, asr r5
   11c44:	andeq	r9, r0, r4, lsr #10
   11c48:	andeq	sl, r1, r8, ror #13
   11c4c:	andeq	r9, r0, r0, lsr #11
   11c50:	andeq	r9, r0, r8, lsl #10
   11c54:	andeq	r0, r0, r8, ror r1
   11c58:	andeq	r8, r0, ip, lsr #26
   11c5c:	andeq	r0, r0, r4, ror r1
   11c60:	andeq	r0, r0, ip, asr #2
   11c64:	andeq	r0, r0, ip, asr r1
   11c68:	andeq	r0, r0, r4, asr #2
   11c6c:	andeq	r9, r0, r0, lsr #7
   11c70:	andeq	r9, r0, r4, lsr #7
   11c74:	andeq	r9, r0, ip, asr r3
   11c78:	andeq	r9, r0, r0, ror #6
   11c7c:	andeq	r9, r0, r8, asr #6
   11c80:	andeq	r9, r0, r4, asr r2
   11c84:	andeq	r0, r0, r8, asr #2
   11c88:	strdeq	r9, [r0], -r8
   11c8c:	andeq	r0, r0, r0, asr #2
   11c90:	ldrdeq	r9, [r0], -r0
   11c94:	andeq	r9, r0, r8, ror #5
   11c98:	andeq	r0, r0, r8, ror #2
   11c9c:	andeq	r8, r0, r0, lsr r9
   11ca0:			; <UNDEFINED> instruction: 0x000091b4
   11ca4:	strdeq	r9, [r0], -r8
   11ca8:	andeq	r9, r0, r4, asr #2
   11cac:	andeq	r9, r0, r8, lsl #3
   11cb0:	andeq	r9, r0, ip, lsr #3
   11cb4:	strdeq	sl, [r1], -r8
   11cb8:	ldrdeq	r9, [r0], -r8
   11cbc:	andeq	r9, r0, r0, ror #1
   11cc0:	mov	fp, #0
   11cc4:	mov	lr, #0
   11cc8:	pop	{r1}		; (ldr r1, [sp], #4)
   11ccc:	mov	r2, sp
   11cd0:	push	{r2}		; (str r2, [sp, #-4]!)
   11cd4:	push	{r0}		; (str r0, [sp, #-4]!)
   11cd8:	ldr	ip, [pc, #16]	; 11cf0 <__assert_fail@plt+0x660>
   11cdc:	push	{ip}		; (str ip, [sp, #-4]!)
   11ce0:	ldr	r0, [pc, #12]	; 11cf4 <__assert_fail@plt+0x664>
   11ce4:	ldr	r3, [pc, #12]	; 11cf8 <__assert_fail@plt+0x668>
   11ce8:	bl	114bc <__libc_start_main@plt>
   11cec:	bl	11654 <abort@plt>
   11cf0:	andeq	sl, r1, r8, lsr r4
   11cf4:	andeq	r1, r1, r0, lsr #13
   11cf8:	ldrdeq	sl, [r1], -r4
   11cfc:	ldr	r3, [pc, #20]	; 11d18 <__assert_fail@plt+0x688>
   11d00:	ldr	r2, [pc, #20]	; 11d1c <__assert_fail@plt+0x68c>
   11d04:	add	r3, pc, r3
   11d08:	ldr	r2, [r3, r2]
   11d0c:	cmp	r2, #0
   11d10:	bxeq	lr
   11d14:	b	114d4 <__gmon_start__@plt>
   11d18:	strdeq	sl, [r1], -r4
   11d1c:	andeq	r0, r0, r0, asr r1
   11d20:	push	{r3, lr}
   11d24:	movw	r0, #49612	; 0xc1cc
   11d28:	ldr	r3, [pc, #36]	; 11d54 <__assert_fail@plt+0x6c4>
   11d2c:	movt	r0, #2
   11d30:	rsb	r3, r0, r3
   11d34:	cmp	r3, #6
   11d38:	popls	{r3, pc}
   11d3c:	movw	r3, #0
   11d40:	movt	r3, #0
   11d44:	cmp	r3, #0
   11d48:	popeq	{r3, pc}
   11d4c:	blx	r3
   11d50:	pop	{r3, pc}
   11d54:	andeq	ip, r2, pc, asr #3
   11d58:	push	{r3, lr}
   11d5c:	movw	r0, #49612	; 0xc1cc
   11d60:	movw	r3, #49612	; 0xc1cc
   11d64:	movt	r0, #2
   11d68:	movt	r3, #2
   11d6c:	rsb	r3, r0, r3
   11d70:	asr	r3, r3, #2
   11d74:	add	r3, r3, r3, lsr #31
   11d78:	asrs	r1, r3, #1
   11d7c:	popeq	{r3, pc}
   11d80:	movw	r2, #0
   11d84:	movt	r2, #0
   11d88:	cmp	r2, #0
   11d8c:	popeq	{r3, pc}
   11d90:	blx	r2
   11d94:	pop	{r3, pc}
   11d98:	push	{r4, lr}
   11d9c:	movw	r4, #49616	; 0xc1d0
   11da0:	movt	r4, #2
   11da4:	ldrb	r3, [r4]
   11da8:	cmp	r3, #0
   11dac:	popne	{r4, pc}
   11db0:	bl	11d20 <__assert_fail@plt+0x690>
   11db4:	mov	r3, #1
   11db8:	strb	r3, [r4]
   11dbc:	pop	{r4, pc}
   11dc0:	movw	r0, #48644	; 0xbe04
   11dc4:	movt	r0, #2
   11dc8:	push	{r3, lr}
   11dcc:	ldr	r3, [r0]
   11dd0:	cmp	r3, #0
   11dd4:	beq	11dec <__assert_fail@plt+0x75c>
   11dd8:	movw	r3, #0
   11ddc:	movt	r3, #0
   11de0:	cmp	r3, #0
   11de4:	beq	11dec <__assert_fail@plt+0x75c>
   11de8:	blx	r3
   11dec:	pop	{r3, lr}
   11df0:	b	11d58 <__assert_fail@plt+0x6c8>
   11df4:	push	{r4, r5, r6, lr}
   11df8:	subs	r4, r0, #0
   11dfc:	ldr	r5, [pc, #580]	; 12048 <__assert_fail@plt+0x9b8>
   11e00:	add	r5, pc, r5
   11e04:	beq	11e4c <__assert_fail@plt+0x7bc>
   11e08:	ldr	r3, [pc, #572]	; 1204c <__assert_fail@plt+0x9bc>
   11e0c:	mov	r2, #5
   11e10:	ldr	r1, [pc, #568]	; 12050 <__assert_fail@plt+0x9c0>
   11e14:	mov	r0, #0
   11e18:	ldr	r3, [r5, r3]
   11e1c:	add	r1, pc, r1
   11e20:	ldr	r6, [r3]
   11e24:	bl	113e4 <dcgettext@plt>
   11e28:	ldr	r3, [pc, #548]	; 12054 <__assert_fail@plt+0x9c4>
   11e2c:	mov	r1, #1
   11e30:	ldr	r3, [r5, r3]
   11e34:	ldr	r3, [r3]
   11e38:	mov	r2, r0
   11e3c:	mov	r0, r6
   11e40:	bl	1157c <__fprintf_chk@plt>
   11e44:	mov	r0, r4
   11e48:	bl	114f8 <exit@plt>
   11e4c:	ldr	r1, [pc, #516]	; 12058 <__assert_fail@plt+0x9c8>
   11e50:	mov	r2, #5
   11e54:	add	r1, pc, r1
   11e58:	bl	113e4 <dcgettext@plt>
   11e5c:	ldr	r3, [pc, #496]	; 12054 <__assert_fail@plt+0x9c4>
   11e60:	ldr	r6, [r5, r3]
   11e64:	ldr	r2, [r6]
   11e68:	mov	r1, r0
   11e6c:	mov	r0, #1
   11e70:	bl	11564 <__printf_chk@plt>
   11e74:	ldr	r1, [pc, #480]	; 1205c <__assert_fail@plt+0x9cc>
   11e78:	mov	r2, #5
   11e7c:	mov	r0, r4
   11e80:	add	r1, pc, r1
   11e84:	bl	113e4 <dcgettext@plt>
   11e88:	ldr	r3, [pc, #464]	; 12060 <__assert_fail@plt+0x9d0>
   11e8c:	ldr	r5, [r5, r3]
   11e90:	ldr	r1, [r5]
   11e94:	bl	11348 <fputs_unlocked@plt>
   11e98:	ldr	r1, [pc, #452]	; 12064 <__assert_fail@plt+0x9d4>
   11e9c:	mov	r2, #5
   11ea0:	mov	r0, r4
   11ea4:	add	r1, pc, r1
   11ea8:	bl	113e4 <dcgettext@plt>
   11eac:	ldr	r1, [r5]
   11eb0:	bl	11348 <fputs_unlocked@plt>
   11eb4:	ldr	r1, [pc, #428]	; 12068 <__assert_fail@plt+0x9d8>
   11eb8:	mov	r2, #5
   11ebc:	mov	r0, r4
   11ec0:	add	r1, pc, r1
   11ec4:	bl	113e4 <dcgettext@plt>
   11ec8:	ldr	r1, [r5]
   11ecc:	bl	11348 <fputs_unlocked@plt>
   11ed0:	ldr	r1, [pc, #404]	; 1206c <__assert_fail@plt+0x9dc>
   11ed4:	mov	r2, #5
   11ed8:	mov	r0, r4
   11edc:	add	r1, pc, r1
   11ee0:	bl	113e4 <dcgettext@plt>
   11ee4:	ldr	r1, [r5]
   11ee8:	bl	11348 <fputs_unlocked@plt>
   11eec:	ldr	r1, [pc, #380]	; 12070 <__assert_fail@plt+0x9e0>
   11ef0:	mov	r2, #5
   11ef4:	mov	r0, r4
   11ef8:	add	r1, pc, r1
   11efc:	bl	113e4 <dcgettext@plt>
   11f00:	ldr	r1, [r5]
   11f04:	bl	11348 <fputs_unlocked@plt>
   11f08:	ldr	r1, [pc, #356]	; 12074 <__assert_fail@plt+0x9e4>
   11f0c:	mov	r2, #5
   11f10:	mov	r0, r4
   11f14:	add	r1, pc, r1
   11f18:	bl	113e4 <dcgettext@plt>
   11f1c:	ldr	r1, [r5]
   11f20:	bl	11348 <fputs_unlocked@plt>
   11f24:	ldr	r1, [pc, #332]	; 12078 <__assert_fail@plt+0x9e8>
   11f28:	mov	r2, #5
   11f2c:	mov	r0, r4
   11f30:	add	r1, pc, r1
   11f34:	bl	113e4 <dcgettext@plt>
   11f38:	ldr	r1, [r5]
   11f3c:	bl	11348 <fputs_unlocked@plt>
   11f40:	ldr	r1, [pc, #308]	; 1207c <__assert_fail@plt+0x9ec>
   11f44:	mov	r2, #5
   11f48:	mov	r0, r4
   11f4c:	add	r1, pc, r1
   11f50:	bl	113e4 <dcgettext@plt>
   11f54:	ldr	r2, [r6]
   11f58:	mov	r3, r2
   11f5c:	mov	r1, r0
   11f60:	mov	r0, #1
   11f64:	bl	11564 <__printf_chk@plt>
   11f68:	ldr	r1, [pc, #272]	; 12080 <__assert_fail@plt+0x9f0>
   11f6c:	mov	r2, #5
   11f70:	mov	r0, r4
   11f74:	add	r1, pc, r1
   11f78:	bl	113e4 <dcgettext@plt>
   11f7c:	ldr	r1, [r5]
   11f80:	bl	11348 <fputs_unlocked@plt>
   11f84:	ldr	r1, [pc, #248]	; 12084 <__assert_fail@plt+0x9f4>
   11f88:	mov	r2, #5
   11f8c:	mov	r0, r4
   11f90:	add	r1, pc, r1
   11f94:	bl	113e4 <dcgettext@plt>
   11f98:	ldr	r2, [pc, #232]	; 12088 <__assert_fail@plt+0x9f8>
   11f9c:	ldr	r3, [pc, #232]	; 1208c <__assert_fail@plt+0x9fc>
   11fa0:	add	r2, pc, r2
   11fa4:	add	r3, pc, r3
   11fa8:	mov	r1, r0
   11fac:	mov	r0, #1
   11fb0:	bl	11564 <__printf_chk@plt>
   11fb4:	mov	r0, #5
   11fb8:	mov	r1, r4
   11fbc:	bl	115c4 <setlocale@plt>
   11fc0:	cmp	r0, #0
   11fc4:	beq	11fe0 <__assert_fail@plt+0x950>
   11fc8:	ldr	r1, [pc, #192]	; 12090 <__assert_fail@plt+0xa00>
   11fcc:	mov	r2, #3
   11fd0:	add	r1, pc, r1
   11fd4:	bl	11648 <strncmp@plt>
   11fd8:	cmp	r0, #0
   11fdc:	bne	12014 <__assert_fail@plt+0x984>
   11fe0:	ldr	r1, [pc, #172]	; 12094 <__assert_fail@plt+0xa04>
   11fe4:	mov	r2, #5
   11fe8:	mov	r0, #0
   11fec:	add	r1, pc, r1
   11ff0:	bl	113e4 <dcgettext@plt>
   11ff4:	mov	r5, r0
   11ff8:	ldr	r0, [r6]
   11ffc:	bl	13608 <close_stdin@@Base+0x26c>
   12000:	mov	r1, r5
   12004:	mov	r2, r0
   12008:	mov	r0, #1
   1200c:	bl	11564 <__printf_chk@plt>
   12010:	b	11e44 <__assert_fail@plt+0x7b4>
   12014:	ldr	r1, [pc, #124]	; 12098 <__assert_fail@plt+0xa08>
   12018:	mov	r2, #5
   1201c:	mov	r0, r4
   12020:	add	r1, pc, r1
   12024:	bl	113e4 <dcgettext@plt>
   12028:	mov	r5, r0
   1202c:	ldr	r0, [r6]
   12030:	bl	13608 <close_stdin@@Base+0x26c>
   12034:	mov	r1, r5
   12038:	mov	r2, r0
   1203c:	mov	r0, #1
   12040:	bl	11564 <__printf_chk@plt>
   12044:	b	11fe0 <__assert_fail@plt+0x950>
   12048:	strdeq	sl, [r1], -r8
   1204c:	andeq	r0, r0, r8, asr #2
   12050:	andeq	r8, r0, r4, ror r6
   12054:	andeq	r0, r0, r8, ror #2
   12058:	andeq	r8, r0, r4, ror #12
   1205c:	andeq	r8, r0, r8, asr r6
   12060:	andeq	r0, r0, ip, asr r1
   12064:	ldrdeq	r8, [r0], -r4
   12068:	andeq	r8, r0, r0, lsr r8
   1206c:	strdeq	r8, [r0], -r4
   12070:	strdeq	r8, [r0], -r0
   12074:	andeq	r8, r0, r4, lsl #20
   12078:	andeq	r8, r0, r0, lsr #20
   1207c:	andeq	r8, r0, r0, lsr #21
   12080:	strdeq	r8, [r0], -r4
   12084:			; <UNDEFINED> instruction: 0x00008bbc
   12088:	andeq	r8, r0, r4, asr #23
   1208c:	ldrdeq	r8, [r0], -r0
   12090:	andeq	r8, r0, ip, asr #23
   12094:	strdeq	r8, [r0], -ip
   12098:	andeq	r8, r0, r0, lsl #23
   1209c:	push	{r4, r5, r6, r7, r8, r9, lr}
   120a0:	cmp	r3, #0
   120a4:	ldr	lr, [pc, #528]	; 122bc <__assert_fail@plt+0xc2c>
   120a8:	mov	r6, r3
   120ac:	ldr	ip, [pc, #524]	; 122c0 <__assert_fail@plt+0xc30>
   120b0:	sub	sp, sp, #124	; 0x7c
   120b4:	add	lr, pc, lr
   120b8:	mov	r4, r1
   120bc:	mov	r8, r2
   120c0:	mov	r7, r0
   120c4:	ldr	r5, [lr, ip]
   120c8:	mov	r1, lr
   120cc:	movne	r2, #512	; 0x200
   120d0:	moveq	r2, #0
   120d4:	ldr	r0, [r0]
   120d8:	ldr	r3, [r5]
   120dc:	ldr	r1, [r4, #24]
   120e0:	str	r3, [sp, #116]	; 0x74
   120e4:	bl	11384 <unlinkat@plt>
   120e8:	cmp	r0, #0
   120ec:	bne	12138 <__assert_fail@plt+0xaa8>
   120f0:	ldrb	r3, [r8, #17]
   120f4:	cmp	r3, #0
   120f8:	beq	12200 <__assert_fail@plt+0xb70>
   120fc:	cmp	r6, #0
   12100:	bne	1221c <__assert_fail@plt+0xb8c>
   12104:	ldr	r1, [pc, #440]	; 122c4 <__assert_fail@plt+0xc34>
   12108:	mov	r2, #5
   1210c:	add	r1, pc, r1
   12110:	bl	113e4 <dcgettext@plt>
   12114:	mov	r6, r0
   12118:	ldr	r0, [r4, #28]
   1211c:	bl	15004 <close_stdin@@Base+0x1c68>
   12120:	mov	r1, r6
   12124:	mov	r2, r0
   12128:	mov	r0, #1
   1212c:	bl	11564 <__printf_chk@plt>
   12130:	mov	r0, #2
   12134:	b	12204 <__assert_fail@plt+0xb74>
   12138:	bl	11534 <__errno_location@plt>
   1213c:	ldr	r6, [r0]
   12140:	mov	r9, r0
   12144:	cmp	r6, #30
   12148:	beq	12240 <__assert_fail@plt+0xbb0>
   1214c:	ldrb	r3, [r8]
   12150:	cmp	r3, #0
   12154:	bne	121e4 <__assert_fail@plt+0xb54>
   12158:	ldrh	r3, [r4, #60]	; 0x3c
   1215c:	cmp	r3, #4
   12160:	beq	12270 <__assert_fail@plt+0xbe0>
   12164:	ldr	r1, [pc, #348]	; 122c8 <__assert_fail@plt+0xc38>
   12168:	mov	r2, #5
   1216c:	mov	r0, #0
   12170:	add	r1, pc, r1
   12174:	bl	113e4 <dcgettext@plt>
   12178:	mov	r7, r0
   1217c:	ldr	r0, [r4, #28]
   12180:	bl	15004 <close_stdin@@Base+0x1c68>
   12184:	mov	r2, r7
   12188:	mov	r1, r6
   1218c:	mov	r3, r0
   12190:	mov	r0, #0
   12194:	bl	1148c <error@plt>
   12198:	ldr	r3, [r4, #4]
   1219c:	ldr	r2, [r3, #48]	; 0x30
   121a0:	cmp	r2, #0
   121a4:	blt	121dc <__assert_fail@plt+0xb4c>
   121a8:	ldr	r2, [r3, #16]
   121ac:	cmp	r2, #0
   121b0:	bne	121dc <__assert_fail@plt+0xb4c>
   121b4:	mov	r1, #1
   121b8:	b	121c8 <__assert_fail@plt+0xb38>
   121bc:	ldr	r2, [r3, #16]
   121c0:	cmp	r2, #0
   121c4:	bne	121dc <__assert_fail@plt+0xb4c>
   121c8:	str	r1, [r3, #16]
   121cc:	ldr	r3, [r3, #4]
   121d0:	ldr	r2, [r3, #48]	; 0x30
   121d4:	cmp	r2, #0
   121d8:	bge	121bc <__assert_fail@plt+0xb2c>
   121dc:	mov	r0, #4
   121e0:	b	12204 <__assert_fail@plt+0xb74>
   121e4:	cmp	r6, #20
   121e8:	beq	12200 <__assert_fail@plt+0xb70>
   121ec:	ble	12234 <__assert_fail@plt+0xba4>
   121f0:	cmp	r6, #22
   121f4:	beq	12200 <__assert_fail@plt+0xb70>
   121f8:	cmp	r6, #84	; 0x54
   121fc:	bne	12158 <__assert_fail@plt+0xac8>
   12200:	mov	r0, #2
   12204:	ldr	r2, [sp, #116]	; 0x74
   12208:	ldr	r3, [r5]
   1220c:	cmp	r2, r3
   12210:	bne	122b8 <__assert_fail@plt+0xc28>
   12214:	add	sp, sp, #124	; 0x7c
   12218:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1221c:	ldr	r1, [pc, #168]	; 122cc <__assert_fail@plt+0xc3c>
   12220:	mov	r2, #5
   12224:	add	r1, pc, r1
   12228:	bl	113e4 <dcgettext@plt>
   1222c:	mov	r6, r0
   12230:	b	12118 <__assert_fail@plt+0xa88>
   12234:	cmp	r6, #2
   12238:	bne	12158 <__assert_fail@plt+0xac8>
   1223c:	b	12200 <__assert_fail@plt+0xb70>
   12240:	ldr	r1, [r7]
   12244:	mov	r3, #256	; 0x100
   12248:	ldr	r2, [r4, #24]
   1224c:	mov	r0, #3
   12250:	str	r3, [sp]
   12254:	add	r3, sp, #8
   12258:	bl	11420 <__fxstatat64@plt>
   1225c:	cmp	r0, #0
   12260:	bne	122a4 <__assert_fail@plt+0xc14>
   12264:	mov	r3, #30
   12268:	str	r3, [r9]
   1226c:	b	1214c <__assert_fail@plt+0xabc>
   12270:	cmp	r6, #39	; 0x27
   12274:	beq	1228c <__assert_fail@plt+0xbfc>
   12278:	sub	r3, r6, #20
   1227c:	cmp	r3, #1
   12280:	bls	1228c <__assert_fail@plt+0xbfc>
   12284:	cmp	r6, #17
   12288:	bne	12164 <__assert_fail@plt+0xad4>
   1228c:	ldr	r3, [r4, #32]
   12290:	cmp	r3, #1
   12294:	cmpne	r3, #13
   12298:	streq	r3, [r9]
   1229c:	moveq	r6, r3
   122a0:	b	12164 <__assert_fail@plt+0xad4>
   122a4:	ldr	r3, [r9]
   122a8:	cmp	r3, #2
   122ac:	moveq	r6, r3
   122b0:	bne	12264 <__assert_fail@plt+0xbd4>
   122b4:	b	1214c <__assert_fail@plt+0xabc>
   122b8:	bl	113f0 <__stack_chk_fail@plt>
   122bc:	andeq	r9, r1, r4, asr #30
   122c0:	andeq	r0, r0, ip, lsr r1
   122c4:	muleq	r0, r4, sp
   122c8:	andeq	r8, r0, ip, lsr sp
   122cc:	andeq	r8, r0, r4, ror #24
   122d0:	push	{r4, r5, r6, r7, r8, lr}
   122d4:	mvn	r6, #0
   122d8:	ldrd	r4, [r2, #48]	; 0x30
   122dc:	mvn	r7, #0
   122e0:	mov	r8, r2
   122e4:	sub	sp, sp, #8
   122e8:	cmp	r5, r7
   122ec:	cmpeq	r4, r6
   122f0:	mov	r2, r1
   122f4:	beq	12314 <__assert_fail@plt+0xc84>
   122f8:	cmp	r4, #0
   122fc:	sbcs	r3, r5, #0
   12300:	movge	r3, #0
   12304:	blt	12354 <__assert_fail@plt+0xcc4>
   12308:	mov	r0, r3
   1230c:	add	sp, sp, #8
   12310:	pop	{r4, r5, r6, r7, r8, pc}
   12314:	mov	r1, r0
   12318:	mov	r3, #256	; 0x100
   1231c:	mov	r0, #3
   12320:	str	r3, [sp]
   12324:	mov	r3, r8
   12328:	bl	11420 <__fxstatat64@plt>
   1232c:	cmp	r0, #0
   12330:	ldrdeq	r4, [r8, #48]	; 0x30
   12334:	beq	122f8 <__assert_fail@plt+0xc68>
   12338:	mvn	r2, #1
   1233c:	mvn	r3, #0
   12340:	strd	r2, [r8, #48]	; 0x30
   12344:	bl	11534 <__errno_location@plt>
   12348:	ldr	r0, [r0]
   1234c:	asr	r1, r0, #31
   12350:	strd	r0, [r8, #96]	; 0x60
   12354:	bl	11534 <__errno_location@plt>
   12358:	ldr	r2, [r8, #96]	; 0x60
   1235c:	mvn	r3, #0
   12360:	str	r2, [r0]
   12364:	b	12308 <__assert_fail@plt+0xc78>
   12368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1236c:	mov	r6, r1
   12370:	ldr	r7, [pc, #1116]	; 127d4 <__assert_fail@plt+0x1144>
   12374:	sub	sp, sp, #140	; 0x8c
   12378:	ldr	r1, [pc, #1112]	; 127d8 <__assert_fail@plt+0x1148>
   1237c:	mov	r8, r3
   12380:	add	r7, pc, r7
   12384:	ldr	r5, [sp, #180]	; 0xb4
   12388:	ldr	r9, [r6, #24]
   1238c:	mov	sl, r0
   12390:	ldr	r1, [r7, r1]
   12394:	cmp	r5, #0
   12398:	str	r1, [sp, #12]
   1239c:	ldr	r1, [r6, #28]
   123a0:	str	r1, [sp, #20]
   123a4:	ldr	r1, [sp, #12]
   123a8:	ldr	r3, [r1]
   123ac:	str	r3, [sp, #132]	; 0x84
   123b0:	movne	r3, #2
   123b4:	strne	r3, [r5]
   123b8:	cmp	r2, #0
   123bc:	mvn	r3, #0
   123c0:	movne	r2, #4
   123c4:	moveq	r2, #0
   123c8:	cmp	r5, #0
   123cc:	str	r2, [sp, #16]
   123d0:	mvn	r2, #0
   123d4:	strd	r2, [sp, #72]	; 0x48
   123d8:	moveq	fp, r5
   123dc:	beq	12468 <__assert_fail@plt+0xdd8>
   123e0:	mov	r1, r9
   123e4:	mov	r2, #51456	; 0xc900
   123e8:	bl	11510 <openat64@plt>
   123ec:	subs	fp, r0, #0
   123f0:	blt	1245c <__assert_fail@plt+0xdcc>
   123f4:	bl	115f4 <fdopendir@plt>
   123f8:	subs	r4, r0, #0
   123fc:	beq	12780 <__assert_fail@plt+0x10f0>
   12400:	bl	11534 <__errno_location@plt>
   12404:	mov	r3, #0
   12408:	mov	fp, r0
   1240c:	str	r3, [r0]
   12410:	b	12434 <__assert_fail@plt+0xda4>
   12414:	ldrb	r3, [r0, #20]
   12418:	cmp	r3, #46	; 0x2e
   1241c:	movne	r3, #1
   12420:	moveq	r3, #2
   12424:	ldrb	r3, [r2, r3]
   12428:	cmp	r3, #0
   1242c:	cmpne	r3, #47	; 0x2f
   12430:	bne	12454 <__assert_fail@plt+0xdc4>
   12434:	mov	r0, r4
   12438:	bl	115e8 <readdir64@plt>
   1243c:	cmp	r0, #0
   12440:	beq	125a0 <__assert_fail@plt+0xf10>
   12444:	ldrb	r3, [r0, #19]
   12448:	add	r2, r0, #19
   1244c:	cmp	r3, #46	; 0x2e
   12450:	beq	12414 <__assert_fail@plt+0xd84>
   12454:	mov	r0, r4
   12458:	bl	11684 <closedir@plt>
   1245c:	mov	fp, #0
   12460:	mov	r3, #3
   12464:	str	r3, [r5]
   12468:	ldr	r3, [r6, #16]
   1246c:	cmp	r3, #0
   12470:	bne	12570 <__assert_fail@plt+0xee0>
   12474:	ldr	r3, [r8, #4]
   12478:	cmp	r3, #5
   1247c:	beq	124c4 <__assert_fail@plt+0xe34>
   12480:	ldrb	r2, [r8]
   12484:	cmp	r2, #0
   12488:	beq	12578 <__assert_fail@plt+0xee8>
   1248c:	cmp	r3, #3
   12490:	bne	124c4 <__assert_fail@plt+0xe34>
   12494:	ldr	r3, [sp, #16]
   12498:	cmp	r3, #0
   1249c:	movne	r5, #0
   124a0:	beq	127c4 <__assert_fail@plt+0x1134>
   124a4:	ldr	r1, [sp, #16]
   124a8:	cmp	r1, #4
   124ac:	beq	1266c <__assert_fail@plt+0xfdc>
   124b0:	cmp	r1, #10
   124b4:	bne	12678 <__assert_fail@plt+0xfe8>
   124b8:	ldr	r3, [r8, #4]
   124bc:	cmp	r3, #3
   124c0:	beq	124e4 <__assert_fail@plt+0xe54>
   124c4:	mov	r0, #2
   124c8:	ldr	r1, [sp, #12]
   124cc:	ldr	r2, [sp, #132]	; 0x84
   124d0:	ldr	r3, [r1]
   124d4:	cmp	r2, r3
   124d8:	bne	127d0 <__assert_fail@plt+0x1140>
   124dc:	add	sp, sp, #140	; 0x8c
   124e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124e4:	ldr	r0, [sp, #20]
   124e8:	bl	15004 <close_stdin@@Base+0x1c68>
   124ec:	mov	r6, r0
   124f0:	add	r4, sp, #24
   124f4:	mov	r0, sl
   124f8:	mov	r1, r9
   124fc:	mov	r2, r4
   12500:	bl	122d0 <__assert_fail@plt+0xc40>
   12504:	cmp	r0, #0
   12508:	bne	1278c <__assert_fail@plt+0x10fc>
   1250c:	ldr	r3, [pc, #712]	; 127dc <__assert_fail@plt+0x114c>
   12510:	cmp	r5, #0
   12514:	ldr	r3, [r7, r3]
   12518:	ldr	r5, [r3]
   1251c:	beq	126ec <__assert_fail@plt+0x105c>
   12520:	ldr	r1, [pc, #696]	; 127e0 <__assert_fail@plt+0x1150>
   12524:	mov	r2, #5
   12528:	add	r1, pc, r1
   1252c:	bl	113e4 <dcgettext@plt>
   12530:	mov	r8, r0
   12534:	ldr	r3, [pc, #680]	; 127e4 <__assert_fail@plt+0x1154>
   12538:	mov	r0, r4
   1253c:	ldr	r3, [r7, r3]
   12540:	ldr	r4, [r3]
   12544:	bl	136ac <close_stdin@@Base+0x310>
   12548:	str	r6, [sp, #4]
   1254c:	mov	r2, r8
   12550:	mov	r1, #1
   12554:	mov	r3, r4
   12558:	str	r0, [sp]
   1255c:	mov	r0, r5
   12560:	bl	1157c <__fprintf_chk@plt>
   12564:	bl	15964 <close_stdin@@Base+0x25c8>
   12568:	cmp	r0, #0
   1256c:	bne	124c4 <__assert_fail@plt+0xe34>
   12570:	mov	r0, #3
   12574:	b	124c8 <__assert_fail@plt+0xe38>
   12578:	cmp	r3, #3
   1257c:	beq	1258c <__assert_fail@plt+0xefc>
   12580:	ldrb	r3, [r8, #16]
   12584:	cmp	r3, #0
   12588:	beq	124c4 <__assert_fail@plt+0xe34>
   1258c:	bl	1562c <close_stdin@@Base+0x2290>
   12590:	cmp	r0, #0
   12594:	beq	125c4 <__assert_fail@plt+0xf34>
   12598:	ldr	r3, [r8, #4]
   1259c:	b	1248c <__assert_fail@plt+0xdfc>
   125a0:	ldr	fp, [fp]
   125a4:	mov	r0, r4
   125a8:	bl	11684 <closedir@plt>
   125ac:	cmp	fp, #0
   125b0:	movne	fp, #0
   125b4:	moveq	fp, #1
   125b8:	moveq	r3, #4
   125bc:	movne	r3, #3
   125c0:	b	12464 <__assert_fail@plt+0xdd4>
   125c4:	add	r4, sp, #24
   125c8:	mov	r0, sl
   125cc:	mov	r1, r9
   125d0:	mov	r2, r4
   125d4:	bl	122d0 <__assert_fail@plt+0xc40>
   125d8:	cmp	r0, #0
   125dc:	bne	12704 <__assert_fail@plt+0x1074>
   125e0:	ldr	r3, [sp, #40]	; 0x28
   125e4:	and	r3, r3, #61440	; 0xf000
   125e8:	cmp	r3, #40960	; 0xa000
   125ec:	beq	12598 <__assert_fail@plt+0xf08>
   125f0:	mov	r0, sl
   125f4:	mov	r1, r9
   125f8:	mov	r2, #2
   125fc:	mov	r3, #512	; 0x200
   12600:	bl	113a8 <faccessat@plt>
   12604:	cmp	r0, #0
   12608:	beq	12598 <__assert_fail@plt+0xf08>
   1260c:	bl	11534 <__errno_location@plt>
   12610:	ldr	r3, [r0]
   12614:	cmp	r3, #13
   12618:	movne	r4, r3
   1261c:	bne	1270c <__assert_fail@plt+0x107c>
   12620:	ldr	r2, [sp, #16]
   12624:	mov	r5, #1
   12628:	cmp	r2, #0
   1262c:	bne	124a4 <__assert_fail@plt+0xe14>
   12630:	mov	r2, r4
   12634:	mov	r0, sl
   12638:	mov	r1, r9
   1263c:	bl	122d0 <__assert_fail@plt+0xc40>
   12640:	cmp	r0, #0
   12644:	bne	12704 <__assert_fail@plt+0x1074>
   12648:	ldr	r3, [sp, #40]	; 0x28
   1264c:	and	r3, r3, #61440	; 0xf000
   12650:	cmp	r3, #40960	; 0xa000
   12654:	beq	124b8 <__assert_fail@plt+0xe28>
   12658:	cmp	r3, #16384	; 0x4000
   1265c:	strne	r0, [sp, #16]
   12660:	bne	12678 <__assert_fail@plt+0xfe8>
   12664:	mov	r2, #4
   12668:	str	r2, [sp, #16]
   1266c:	ldrb	r3, [r8, #9]
   12670:	cmp	r3, #0
   12674:	beq	12748 <__assert_fail@plt+0x10b8>
   12678:	ldr	r0, [sp, #20]
   1267c:	bl	15004 <close_stdin@@Base+0x1c68>
   12680:	ldr	r3, [sp, #16]
   12684:	ldr	r1, [sp, #176]	; 0xb0
   12688:	cmp	r3, #4
   1268c:	cmpeq	r1, #2
   12690:	mov	r6, r0
   12694:	bne	124f0 <__assert_fail@plt+0xe60>
   12698:	cmp	fp, #0
   1269c:	bne	124f0 <__assert_fail@plt+0xe60>
   126a0:	ldr	r3, [pc, #308]	; 127dc <__assert_fail@plt+0x114c>
   126a4:	cmp	r5, #0
   126a8:	ldr	r3, [r7, r3]
   126ac:	ldr	r4, [r3]
   126b0:	bne	12764 <__assert_fail@plt+0x10d4>
   126b4:	ldr	r1, [pc, #300]	; 127e8 <__assert_fail@plt+0x1158>
   126b8:	mov	r2, #5
   126bc:	mov	r0, r5
   126c0:	add	r1, pc, r1
   126c4:	bl	113e4 <dcgettext@plt>
   126c8:	mov	r2, r0
   126cc:	ldr	r3, [pc, #272]	; 127e4 <__assert_fail@plt+0x1154>
   126d0:	mov	r0, r4
   126d4:	mov	r1, #1
   126d8:	ldr	r3, [r7, r3]
   126dc:	str	r6, [sp]
   126e0:	ldr	r3, [r3]
   126e4:	bl	1157c <__fprintf_chk@plt>
   126e8:	b	12564 <__assert_fail@plt+0xed4>
   126ec:	ldr	r1, [pc, #248]	; 127ec <__assert_fail@plt+0x115c>
   126f0:	mov	r2, #5
   126f4:	add	r1, pc, r1
   126f8:	bl	113e4 <dcgettext@plt>
   126fc:	mov	r8, r0
   12700:	b	12534 <__assert_fail@plt+0xea4>
   12704:	bl	11534 <__errno_location@plt>
   12708:	ldr	r4, [r0]
   1270c:	ldr	r0, [sp, #20]
   12710:	bl	15004 <close_stdin@@Base+0x1c68>
   12714:	ldr	r1, [pc, #212]	; 127f0 <__assert_fail@plt+0x1160>
   12718:	mov	r2, #5
   1271c:	add	r1, pc, r1
   12720:	mov	r5, r0
   12724:	mov	r0, #0
   12728:	bl	113e4 <dcgettext@plt>
   1272c:	mov	r3, r5
   12730:	mov	r1, r4
   12734:	mov	r2, r0
   12738:	mov	r0, #0
   1273c:	bl	1148c <error@plt>
   12740:	mov	r0, #4
   12744:	b	124c8 <__assert_fail@plt+0xe38>
   12748:	ldrb	r3, [r8, #10]
   1274c:	cmp	r3, #0
   12750:	beq	1275c <__assert_fail@plt+0x10cc>
   12754:	cmp	fp, #0
   12758:	bne	124e4 <__assert_fail@plt+0xe54>
   1275c:	mov	r4, #21
   12760:	b	1270c <__assert_fail@plt+0x107c>
   12764:	ldr	r1, [pc, #136]	; 127f4 <__assert_fail@plt+0x1164>
   12768:	mov	r2, #5
   1276c:	mov	r0, fp
   12770:	add	r1, pc, r1
   12774:	bl	113e4 <dcgettext@plt>
   12778:	mov	r2, r0
   1277c:	b	126cc <__assert_fail@plt+0x103c>
   12780:	mov	r0, fp
   12784:	bl	11660 <close@plt>
   12788:	b	1245c <__assert_fail@plt+0xdcc>
   1278c:	bl	11534 <__errno_location@plt>
   12790:	ldr	r1, [pc, #96]	; 127f8 <__assert_fail@plt+0x1168>
   12794:	mov	r2, #5
   12798:	add	r1, pc, r1
   1279c:	ldr	r4, [r0]
   127a0:	mov	r0, #0
   127a4:	bl	113e4 <dcgettext@plt>
   127a8:	mov	r3, r6
   127ac:	mov	r1, r4
   127b0:	mov	r2, r0
   127b4:	mov	r0, #0
   127b8:	bl	1148c <error@plt>
   127bc:	mov	r0, #4
   127c0:	b	124c8 <__assert_fail@plt+0xe38>
   127c4:	add	r4, sp, #24
   127c8:	mov	r5, r3
   127cc:	b	12630 <__assert_fail@plt+0xfa0>
   127d0:	bl	113f0 <__stack_chk_fail@plt>
   127d4:	andeq	r9, r1, r8, ror ip
   127d8:	andeq	r0, r0, ip, lsr r1
   127dc:	andeq	r0, r0, r8, asr #2
   127e0:	andeq	r8, r0, r8, ror #19
   127e4:	andeq	r0, r0, r8, ror #2
   127e8:	andeq	r8, r0, r0, lsr r8
   127ec:	andeq	r8, r0, r0, asr #16
   127f0:	muleq	r0, r0, r7
   127f4:	andeq	r8, r0, r0, asr r7
   127f8:	andeq	r8, r0, r4, lsl r7
   127fc:	ldr	r3, [pc, #1964]	; 12fb0 <__assert_fail@plt+0x1920>
   12800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12804:	mov	r9, r1
   12808:	ldr	r1, [pc, #1956]	; 12fb4 <__assert_fail@plt+0x1924>
   1280c:	add	r3, pc, r3
   12810:	ldr	r2, [r0]
   12814:	sub	sp, sp, #52	; 0x34
   12818:	ldr	r1, [r3, r1]
   1281c:	cmp	r2, #0
   12820:	ldr	r3, [r1]
   12824:	str	r1, [sp, #16]
   12828:	str	r3, [sp, #44]	; 0x2c
   1282c:	beq	12cc8 <__assert_fail@plt+0x1638>
   12830:	ldrb	r1, [r9, #8]
   12834:	mov	r2, #0
   12838:	ldr	sl, [pc, #1912]	; 12fb8 <__assert_fail@plt+0x1928>
   1283c:	mov	r7, #2
   12840:	cmp	r1, r2
   12844:	ldr	fp, [pc, #1904]	; 12fbc <__assert_fail@plt+0x192c>
   12848:	add	sl, pc, sl
   1284c:	movne	r1, #600	; 0x258
   12850:	moveq	r1, #536	; 0x218
   12854:	bl	158d8 <close_stdin@@Base+0x253c>
   12858:	ldr	r1, [pc, #1888]	; 12fc0 <__assert_fail@plt+0x1930>
   1285c:	ldr	r2, [pc, #1888]	; 12fc4 <__assert_fail@plt+0x1934>
   12860:	add	fp, pc, fp
   12864:	add	r1, pc, r1
   12868:	ldr	r3, [pc, #1880]	; 12fc8 <__assert_fail@plt+0x1938>
   1286c:	str	r1, [sp, #20]
   12870:	add	r2, pc, r2
   12874:	ldr	r1, [pc, #1872]	; 12fcc <__assert_fail@plt+0x193c>
   12878:	add	r3, pc, r3
   1287c:	str	r2, [sp, #24]
   12880:	add	r1, pc, r1
   12884:	str	r3, [sp, #28]
   12888:	str	r1, [sp, #32]
   1288c:	mov	r8, r0
   12890:	mov	r0, r8
   12894:	bl	1738c <fts_read@@Base>
   12898:	subs	r6, r0, #0
   1289c:	beq	12948 <__assert_fail@plt+0x12b8>
   128a0:	ldrh	ip, [r6, #60]	; 0x3c
   128a4:	sub	r3, ip, #1
   128a8:	cmp	r3, #12
   128ac:	addls	pc, pc, r3, lsl #2
   128b0:	b	12aec <__assert_fail@plt+0x145c>
   128b4:	b	12a3c <__assert_fail@plt+0x13ac>
   128b8:	b	12a0c <__assert_fail@plt+0x137c>
   128bc:	b	1299c <__assert_fail@plt+0x130c>
   128c0:	b	1299c <__assert_fail@plt+0x130c>
   128c4:	b	12aec <__assert_fail@plt+0x145c>
   128c8:	b	1299c <__assert_fail@plt+0x130c>
   128cc:	b	128e8 <__assert_fail@plt+0x1258>
   128d0:	b	1299c <__assert_fail@plt+0x130c>
   128d4:	b	12aec <__assert_fail@plt+0x145c>
   128d8:	b	1299c <__assert_fail@plt+0x130c>
   128dc:	b	1299c <__assert_fail@plt+0x130c>
   128e0:	b	1299c <__assert_fail@plt+0x130c>
   128e4:	b	1299c <__assert_fail@plt+0x130c>
   128e8:	mov	r1, sl
   128ec:	mov	r2, #5
   128f0:	mov	r0, #0
   128f4:	ldr	r4, [r6, #32]
   128f8:	bl	113e4 <dcgettext@plt>
   128fc:	mov	r5, r0
   12900:	ldr	r0, [r6, #28]
   12904:	bl	15004 <close_stdin@@Base+0x1c68>
   12908:	mov	r1, r4
   1290c:	mov	r2, r5
   12910:	mov	r3, r0
   12914:	mov	r0, #0
   12918:	bl	1148c <error@plt>
   1291c:	mov	r0, r8
   12920:	mov	r1, r6
   12924:	mov	r2, #4
   12928:	bl	17bf0 <fts_set@@Base>
   1292c:	mov	r0, r8
   12930:	bl	1738c <fts_read@@Base>
   12934:	mov	r0, r8
   12938:	mov	r7, #4
   1293c:	bl	1738c <fts_read@@Base>
   12940:	subs	r6, r0, #0
   12944:	bne	128a0 <__assert_fail@plt+0x1210>
   12948:	bl	11534 <__errno_location@plt>
   1294c:	ldr	r5, [r0]
   12950:	mov	r4, r0
   12954:	cmp	r5, #0
   12958:	bne	12f08 <__assert_fail@plt+0x1878>
   1295c:	mov	r0, r8
   12960:	bl	17214 <fts_close@@Base>
   12964:	cmp	r0, #0
   12968:	beq	12ccc <__assert_fail@plt+0x163c>
   1296c:	ldr	r1, [pc, #1628]	; 12fd0 <__assert_fail@plt+0x1940>
   12970:	mov	r2, #5
   12974:	mov	r0, #0
   12978:	ldr	r4, [r4]
   1297c:	add	r1, pc, r1
   12980:	mov	r7, #4
   12984:	bl	113e4 <dcgettext@plt>
   12988:	mov	r1, r4
   1298c:	mov	r2, r0
   12990:	mov	r0, #0
   12994:	bl	1148c <error@plt>
   12998:	b	12ccc <__assert_fail@plt+0x163c>
   1299c:	cmp	ip, #6
   129a0:	beq	12c24 <__assert_fail@plt+0x1594>
   129a4:	movw	r2, #65533	; 0xfffd
   129a8:	and	r2, ip, r2
   129ac:	subs	r2, r2, #4
   129b0:	ldr	r0, [r8, #32]
   129b4:	rsbs	r4, r2, #0
   129b8:	mov	r3, #3
   129bc:	adcs	r4, r4, r2
   129c0:	str	r3, [sp]
   129c4:	mov	r1, r6
   129c8:	mov	r3, #0
   129cc:	mov	r2, r4
   129d0:	str	r3, [sp, #4]
   129d4:	mov	r3, r9
   129d8:	bl	12368 <__assert_fail@plt+0xcd8>
   129dc:	cmp	r0, #2
   129e0:	subne	r3, r0, #2
   129e4:	beq	12cec <__assert_fail@plt+0x165c>
   129e8:	cmp	r3, #2
   129ec:	bhi	12f8c <__assert_fail@plt+0x18fc>
   129f0:	cmp	r0, #4
   129f4:	moveq	r7, r0
   129f8:	beq	12890 <__assert_fail@plt+0x1200>
   129fc:	cmp	r0, #3
   12a00:	cmpeq	r7, #2
   12a04:	moveq	r7, #3
   12a08:	b	12890 <__assert_fail@plt+0x1200>
   12a0c:	mov	r1, fp
   12a10:	mov	r2, #5
   12a14:	mov	r0, #0
   12a18:	bl	113e4 <dcgettext@plt>
   12a1c:	mov	r4, r0
   12a20:	ldr	r0, [r6, #28]
   12a24:	bl	15004 <close_stdin@@Base+0x1c68>
   12a28:	mov	r2, r4
   12a2c:	mov	r3, r0
   12a30:	mov	r0, #0
   12a34:	mov	r1, r0
   12a38:	b	12918 <__assert_fail@plt+0x1288>
   12a3c:	ldrb	r5, [r9, #9]
   12a40:	cmp	r5, #0
   12a44:	bne	12b4c <__assert_fail@plt+0x14bc>
   12a48:	ldrb	r2, [r9, #10]
   12a4c:	cmp	r2, #0
   12a50:	bne	12db0 <__assert_fail@plt+0x1720>
   12a54:	mov	r5, #21
   12a58:	ldr	r1, [pc, #1396]	; 12fd4 <__assert_fail@plt+0x1944>
   12a5c:	mov	r2, #5
   12a60:	mov	r0, #0
   12a64:	add	r1, pc, r1
   12a68:	bl	113e4 <dcgettext@plt>
   12a6c:	mov	r4, r0
   12a70:	ldr	r0, [r6, #28]
   12a74:	bl	15004 <close_stdin@@Base+0x1c68>
   12a78:	mov	r2, r4
   12a7c:	mov	r1, r5
   12a80:	mov	r3, r0
   12a84:	mov	r0, #0
   12a88:	bl	1148c <error@plt>
   12a8c:	ldr	r3, [r6, #4]
   12a90:	ldr	r2, [r3, #48]	; 0x30
   12a94:	cmp	r2, #0
   12a98:	blt	12ad0 <__assert_fail@plt+0x1440>
   12a9c:	ldr	r2, [r3, #16]
   12aa0:	cmp	r2, #0
   12aa4:	bne	12ad0 <__assert_fail@plt+0x1440>
   12aa8:	mov	r1, #1
   12aac:	b	12abc <__assert_fail@plt+0x142c>
   12ab0:	ldr	r2, [r3, #16]
   12ab4:	cmp	r2, #0
   12ab8:	bne	12ad0 <__assert_fail@plt+0x1440>
   12abc:	str	r1, [r3, #16]
   12ac0:	ldr	r3, [r3, #4]
   12ac4:	ldr	r2, [r3, #48]	; 0x30
   12ac8:	cmp	r2, #0
   12acc:	bge	12ab0 <__assert_fail@plt+0x1420>
   12ad0:	mov	r1, r6
   12ad4:	mov	r0, r8
   12ad8:	mov	r2, #4
   12adc:	bl	17bf0 <fts_set@@Base>
   12ae0:	mov	r0, r8
   12ae4:	bl	1738c <fts_read@@Base>
   12ae8:	b	12934 <__assert_fail@plt+0x12a4>
   12aec:	ldr	r1, [pc, #1252]	; 12fd8 <__assert_fail@plt+0x1948>
   12af0:	mov	r2, #5
   12af4:	mov	r0, #0
   12af8:	add	r1, pc, r1
   12afc:	bl	113e4 <dcgettext@plt>
   12b00:	ldrh	r4, [r6, #60]	; 0x3c
   12b04:	mov	r5, r0
   12b08:	ldr	r0, [r6, #28]
   12b0c:	bl	15004 <close_stdin@@Base+0x1c68>
   12b10:	ldr	r1, [pc, #1220]	; 12fdc <__assert_fail@plt+0x194c>
   12b14:	mov	r2, r5
   12b18:	mov	r3, r4
   12b1c:	add	r1, pc, r1
   12b20:	stm	sp, {r0, r1}
   12b24:	mov	r0, #0
   12b28:	mov	r1, r0
   12b2c:	bl	1148c <error@plt>
   12b30:	bl	11654 <abort@plt>
   12b34:	ldr	r2, [sp, #36]	; 0x24
   12b38:	mov	r0, r4
   12b3c:	ldr	r5, [r2]
   12b40:	bl	11684 <closedir@plt>
   12b44:	cmp	r5, #0
   12b48:	bne	12e30 <__assert_fail@plt+0x17a0>
   12b4c:	ldr	r4, [r6, #48]	; 0x30
   12b50:	cmp	r4, #0
   12b54:	bne	12b8c <__assert_fail@plt+0x14fc>
   12b58:	ldr	r0, [r6, #24]
   12b5c:	bl	13608 <close_stdin@@Base+0x26c>
   12b60:	ldrb	r3, [r0]
   12b64:	cmp	r3, #46	; 0x2e
   12b68:	beq	12d08 <__assert_fail@plt+0x1678>
   12b6c:	ldr	ip, [r9, #12]
   12b70:	cmp	ip, #0
   12b74:	beq	12b8c <__assert_fail@plt+0x14fc>
   12b78:	ldrd	r0, [r6, #168]	; 0xa8
   12b7c:	ldrd	r2, [ip]
   12b80:	cmp	r1, r3
   12b84:	cmpeq	r0, r2
   12b88:	beq	12e44 <__assert_fail@plt+0x17b4>
   12b8c:	ldr	r0, [r8, #32]
   12b90:	mov	r3, #2
   12b94:	mov	r1, r6
   12b98:	str	r3, [sp]
   12b9c:	mov	r2, #1
   12ba0:	add	r3, sp, #40	; 0x28
   12ba4:	str	r3, [sp, #4]
   12ba8:	mov	r3, r9
   12bac:	bl	12368 <__assert_fail@plt+0xcd8>
   12bb0:	cmp	r0, #2
   12bb4:	mov	r4, r0
   12bb8:	beq	12d9c <__assert_fail@plt+0x170c>
   12bbc:	ldr	r3, [r6, #4]
   12bc0:	ldr	r2, [r3, #48]	; 0x30
   12bc4:	cmp	r2, #0
   12bc8:	blt	12c00 <__assert_fail@plt+0x1570>
   12bcc:	ldr	r2, [r3, #16]
   12bd0:	cmp	r2, #0
   12bd4:	bne	12c00 <__assert_fail@plt+0x1570>
   12bd8:	mov	r1, #1
   12bdc:	b	12bec <__assert_fail@plt+0x155c>
   12be0:	ldr	r2, [r3, #16]
   12be4:	cmp	r2, #0
   12be8:	bne	12c00 <__assert_fail@plt+0x1570>
   12bec:	str	r1, [r3, #16]
   12bf0:	ldr	r3, [r3, #4]
   12bf4:	ldr	r2, [r3, #48]	; 0x30
   12bf8:	cmp	r2, #0
   12bfc:	bge	12be0 <__assert_fail@plt+0x1550>
   12c00:	mov	r1, r6
   12c04:	mov	r2, #4
   12c08:	mov	r0, r8
   12c0c:	bl	17bf0 <fts_set@@Base>
   12c10:	mov	r0, r8
   12c14:	bl	1738c <fts_read@@Base>
   12c18:	sub	r3, r4, #2
   12c1c:	mov	r0, r4
   12c20:	b	129e8 <__assert_fail@plt+0x1358>
   12c24:	ldrb	r3, [r9, #8]
   12c28:	cmp	r3, #0
   12c2c:	beq	129a4 <__assert_fail@plt+0x1314>
   12c30:	ldr	r3, [r6, #48]	; 0x30
   12c34:	cmp	r3, #0
   12c38:	ble	129a4 <__assert_fail@plt+0x1314>
   12c3c:	ldrd	r0, [r6, #72]	; 0x48
   12c40:	ldrd	r2, [r8, #16]
   12c44:	cmp	r1, r3
   12c48:	cmpeq	r0, r2
   12c4c:	beq	129a4 <__assert_fail@plt+0x1314>
   12c50:	ldr	r3, [r6, #4]
   12c54:	ldr	r2, [r3, #48]	; 0x30
   12c58:	cmp	r2, #0
   12c5c:	blt	12c94 <__assert_fail@plt+0x1604>
   12c60:	ldr	r2, [r3, #16]
   12c64:	cmp	r2, #0
   12c68:	bne	12c94 <__assert_fail@plt+0x1604>
   12c6c:	mov	r1, #1
   12c70:	b	12c80 <__assert_fail@plt+0x15f0>
   12c74:	ldr	r2, [r3, #16]
   12c78:	cmp	r2, #0
   12c7c:	bne	12c94 <__assert_fail@plt+0x1604>
   12c80:	str	r1, [r3, #16]
   12c84:	ldr	r3, [r3, #4]
   12c88:	ldr	r2, [r3, #48]	; 0x30
   12c8c:	cmp	r2, #0
   12c90:	bge	12c74 <__assert_fail@plt+0x15e4>
   12c94:	ldr	r1, [sp, #20]
   12c98:	mov	r2, #5
   12c9c:	mov	r0, #0
   12ca0:	bl	113e4 <dcgettext@plt>
   12ca4:	mov	r4, r0
   12ca8:	ldr	r0, [r6, #28]
   12cac:	bl	15004 <close_stdin@@Base+0x1c68>
   12cb0:	mov	r2, r4
   12cb4:	mov	r3, r0
   12cb8:	mov	r0, #0
   12cbc:	mov	r1, r0
   12cc0:	bl	1148c <error@plt>
   12cc4:	b	12934 <__assert_fail@plt+0x12a4>
   12cc8:	mov	r7, #2
   12ccc:	ldr	r1, [sp, #16]
   12cd0:	mov	r0, r7
   12cd4:	ldr	r2, [sp, #44]	; 0x2c
   12cd8:	ldr	r3, [r1]
   12cdc:	cmp	r2, r3
   12ce0:	bne	12fac <__assert_fail@plt+0x191c>
   12ce4:	add	sp, sp, #52	; 0x34
   12ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cec:	mov	r3, r4
   12cf0:	mov	r1, r6
   12cf4:	add	r0, r8, #32
   12cf8:	mov	r2, r9
   12cfc:	bl	1209c <__assert_fail@plt+0xa0c>
   12d00:	sub	r3, r0, #2
   12d04:	b	129e8 <__assert_fail@plt+0x1358>
   12d08:	ldrb	r3, [r0, #1]
   12d0c:	cmp	r3, #46	; 0x2e
   12d10:	movne	r3, #1
   12d14:	moveq	r3, #2
   12d18:	ldrb	r3, [r0, r3]
   12d1c:	cmp	r3, #0
   12d20:	cmpne	r3, #47	; 0x2f
   12d24:	bne	12b6c <__assert_fail@plt+0x14dc>
   12d28:	ldr	r1, [pc, #688]	; 12fe0 <__assert_fail@plt+0x1950>
   12d2c:	mov	r2, #5
   12d30:	mov	r0, r4
   12d34:	add	r1, pc, r1
   12d38:	bl	113e4 <dcgettext@plt>
   12d3c:	ldr	r1, [pc, #672]	; 12fe4 <__assert_fail@plt+0x1954>
   12d40:	add	r1, pc, r1
   12d44:	mov	r7, r0
   12d48:	mov	r0, r4
   12d4c:	bl	14ffc <close_stdin@@Base+0x1c60>
   12d50:	ldr	r1, [pc, #656]	; 12fe8 <__assert_fail@plt+0x1958>
   12d54:	add	r1, pc, r1
   12d58:	mov	r5, r0
   12d5c:	mov	r0, #1
   12d60:	bl	14ffc <close_stdin@@Base+0x1c60>
   12d64:	ldr	r1, [r6, #28]
   12d68:	mov	r3, r0
   12d6c:	mov	r0, #2
   12d70:	str	r3, [sp, #12]
   12d74:	bl	14ffc <close_stdin@@Base+0x1c60>
   12d78:	ldr	r3, [sp, #12]
   12d7c:	mov	r2, r7
   12d80:	mov	r1, r4
   12d84:	str	r3, [sp]
   12d88:	mov	r3, r5
   12d8c:	str	r0, [sp, #4]
   12d90:	mov	r0, r4
   12d94:	bl	1148c <error@plt>
   12d98:	b	1291c <__assert_fail@plt+0x128c>
   12d9c:	ldr	r5, [sp, #40]	; 0x28
   12da0:	cmp	r5, #4
   12da4:	beq	12ecc <__assert_fail@plt+0x183c>
   12da8:	mov	r3, #0
   12dac:	b	12c1c <__assert_fail@plt+0x158c>
   12db0:	mov	r2, #51456	; 0xc900
   12db4:	ldr	r0, [r8, #32]
   12db8:	ldr	r1, [r6, #24]
   12dbc:	bl	11510 <openat64@plt>
   12dc0:	subs	r2, r0, #0
   12dc4:	str	r2, [sp, #36]	; 0x24
   12dc8:	blt	12e30 <__assert_fail@plt+0x17a0>
   12dcc:	bl	115f4 <fdopendir@plt>
   12dd0:	subs	r4, r0, #0
   12dd4:	beq	12f80 <__assert_fail@plt+0x18f0>
   12dd8:	bl	11534 <__errno_location@plt>
   12ddc:	str	r0, [sp, #36]	; 0x24
   12de0:	str	r5, [r0]
   12de4:	b	12e08 <__assert_fail@plt+0x1778>
   12de8:	ldrb	r3, [r0, #20]
   12dec:	cmp	r3, #46	; 0x2e
   12df0:	movne	r3, #1
   12df4:	moveq	r3, #2
   12df8:	ldrb	r3, [r1, r3]
   12dfc:	cmp	r3, #0
   12e00:	cmpne	r3, #47	; 0x2f
   12e04:	bne	12e28 <__assert_fail@plt+0x1798>
   12e08:	mov	r0, r4
   12e0c:	bl	115e8 <readdir64@plt>
   12e10:	cmp	r0, #0
   12e14:	beq	12b34 <__assert_fail@plt+0x14a4>
   12e18:	ldrb	r2, [r0, #19]
   12e1c:	add	r1, r0, #19
   12e20:	cmp	r2, #46	; 0x2e
   12e24:	beq	12de8 <__assert_fail@plt+0x1758>
   12e28:	mov	r0, r4
   12e2c:	bl	11684 <closedir@plt>
   12e30:	ldrb	r3, [r9, #10]
   12e34:	cmp	r3, #0
   12e38:	beq	12a54 <__assert_fail@plt+0x13c4>
   12e3c:	mov	r5, #39	; 0x27
   12e40:	b	12a58 <__assert_fail@plt+0x13c8>
   12e44:	ldrd	r2, [r6, #72]	; 0x48
   12e48:	ldrd	r0, [ip, #8]
   12e4c:	cmp	r3, r1
   12e50:	cmpeq	r2, r0
   12e54:	bne	12b8c <__assert_fail@plt+0x14fc>
   12e58:	ldr	r3, [r6, #28]
   12e5c:	ldrb	r2, [r3]
   12e60:	cmp	r2, #47	; 0x2f
   12e64:	bne	12f34 <__assert_fail@plt+0x18a4>
   12e68:	ldrb	r4, [r3, #1]
   12e6c:	cmp	r4, #0
   12e70:	bne	12f34 <__assert_fail@plt+0x18a4>
   12e74:	ldr	r1, [pc, #368]	; 12fec <__assert_fail@plt+0x195c>
   12e78:	mov	r2, #5
   12e7c:	mov	r0, r4
   12e80:	add	r1, pc, r1
   12e84:	bl	113e4 <dcgettext@plt>
   12e88:	mov	r5, r0
   12e8c:	ldr	r0, [r6, #28]
   12e90:	bl	15004 <close_stdin@@Base+0x1c68>
   12e94:	mov	r1, r4
   12e98:	mov	r2, r5
   12e9c:	mov	r3, r0
   12ea0:	mov	r0, r4
   12ea4:	bl	1148c <error@plt>
   12ea8:	ldr	r1, [sp, #24]
   12eac:	mov	r2, #5
   12eb0:	mov	r0, #0
   12eb4:	bl	113e4 <dcgettext@plt>
   12eb8:	mov	r2, r0
   12ebc:	mov	r0, #0
   12ec0:	mov	r1, r0
   12ec4:	bl	1148c <error@plt>
   12ec8:	b	1291c <__assert_fail@plt+0x128c>
   12ecc:	mov	r3, #1
   12ed0:	mov	r1, r6
   12ed4:	mov	r2, r9
   12ed8:	add	r0, r8, #32
   12edc:	bl	1209c <__assert_fail@plt+0xa0c>
   12ee0:	mov	r1, r6
   12ee4:	mov	r2, r5
   12ee8:	mov	r4, r0
   12eec:	mov	r0, r8
   12ef0:	bl	17bf0 <fts_set@@Base>
   12ef4:	mov	r0, r8
   12ef8:	bl	1738c <fts_read@@Base>
   12efc:	cmp	r4, #2
   12f00:	bne	12bbc <__assert_fail@plt+0x152c>
   12f04:	b	12da8 <__assert_fail@plt+0x1718>
   12f08:	ldr	r1, [pc, #224]	; 12ff0 <__assert_fail@plt+0x1960>
   12f0c:	mov	r0, r6
   12f10:	mov	r2, #5
   12f14:	mov	r7, #4
   12f18:	add	r1, pc, r1
   12f1c:	bl	113e4 <dcgettext@plt>
   12f20:	mov	r1, r5
   12f24:	mov	r2, r0
   12f28:	mov	r0, r6
   12f2c:	bl	1148c <error@plt>
   12f30:	b	1295c <__assert_fail@plt+0x12cc>
   12f34:	mov	r2, #5
   12f38:	ldr	r1, [sp, #28]
   12f3c:	mov	r0, #0
   12f40:	bl	113e4 <dcgettext@plt>
   12f44:	ldr	r1, [r6, #28]
   12f48:	mov	r5, r0
   12f4c:	mov	r0, #0
   12f50:	bl	14ffc <close_stdin@@Base+0x1c60>
   12f54:	ldr	r1, [sp, #32]
   12f58:	mov	r4, r0
   12f5c:	mov	r0, #1
   12f60:	bl	14ffc <close_stdin@@Base+0x1c60>
   12f64:	mov	r2, r5
   12f68:	mov	r3, r4
   12f6c:	str	r0, [sp]
   12f70:	mov	r0, #0
   12f74:	mov	r1, r0
   12f78:	bl	1148c <error@plt>
   12f7c:	b	12ea8 <__assert_fail@plt+0x1818>
   12f80:	ldr	r0, [sp, #36]	; 0x24
   12f84:	bl	11660 <close@plt>
   12f88:	b	12e30 <__assert_fail@plt+0x17a0>
   12f8c:	ldr	r0, [pc, #96]	; 12ff4 <__assert_fail@plt+0x1964>
   12f90:	movw	r2, #574	; 0x23e
   12f94:	ldr	r1, [pc, #92]	; 12ff8 <__assert_fail@plt+0x1968>
   12f98:	ldr	r3, [pc, #92]	; 12ffc <__assert_fail@plt+0x196c>
   12f9c:	add	r0, pc, r0
   12fa0:	add	r1, pc, r1
   12fa4:	add	r3, pc, r3
   12fa8:	bl	11690 <__assert_fail@plt>
   12fac:	bl	113f0 <__stack_chk_fail@plt>
   12fb0:	andeq	r9, r1, ip, ror #15
   12fb4:	andeq	r0, r0, ip, lsr r1
   12fb8:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   12fbc:	andeq	r8, r0, r4, lsl #16
   12fc0:	ldrdeq	r8, [r0], -r0
   12fc4:	muleq	r0, r0, r7
   12fc8:	andeq	r8, r0, ip, asr #14
   12fcc:	andeq	r8, r0, r4, ror r4
   12fd0:	andeq	r8, r0, ip, asr r8
   12fd4:	andeq	r8, r0, r8, asr #8
   12fd8:	andeq	r8, r0, r0, asr #12
   12fdc:	andeq	r8, r0, r4, asr r6
   12fe0:	andeq	r8, r0, r4, lsr #4
   12fe4:	andeq	r8, r0, ip, asr #4
   12fe8:	andeq	r8, r0, ip, lsr r2
   12fec:	andeq	r8, r0, r4, lsl r1
   12ff0:	andeq	r8, r0, r0, lsr r0
   12ff4:	andeq	r8, r0, ip, ror #3
   12ff8:	andeq	r8, r0, r8, lsr #4
   12ffc:	andeq	r7, r0, r0, ror #29
   13000:	mov	r0, #1
   13004:	b	11df4 <__assert_fail@plt+0x764>
   13008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1300c:	sub	sp, sp, #12
   13010:	mov	r7, r1
   13014:	mov	r6, r3
   13018:	str	r2, [sp]
   1301c:	mov	sl, r0
   13020:	bl	11504 <strlen@plt>
   13024:	ldr	fp, [r7]
   13028:	cmp	fp, #0
   1302c:	mov	r8, r0
   13030:	beq	130f4 <__assert_fail@plt+0x1a64>
   13034:	mov	r3, #0
   13038:	ldr	r4, [sp]
   1303c:	str	r3, [sp, #4]
   13040:	mov	r5, r3
   13044:	mvn	r9, #0
   13048:	b	13074 <__assert_fail@plt+0x19e4>
   1304c:	bl	113d8 <memcmp@plt>
   13050:	ldr	r3, [sp, #4]
   13054:	cmp	r0, #0
   13058:	movne	r3, #1
   1305c:	str	r3, [sp, #4]
   13060:	ldr	fp, [r7, #4]!
   13064:	add	r5, r5, #1
   13068:	add	r4, r4, r6
   1306c:	cmp	fp, #0
   13070:	beq	130d0 <__assert_fail@plt+0x1a40>
   13074:	mov	r0, fp
   13078:	mov	r1, sl
   1307c:	mov	r2, r8
   13080:	bl	11648 <strncmp@plt>
   13084:	cmp	r0, #0
   13088:	mov	r0, fp
   1308c:	bne	13060 <__assert_fail@plt+0x19d0>
   13090:	bl	11504 <strlen@plt>
   13094:	ldr	r3, [sp]
   13098:	mov	r1, r4
   1309c:	mov	r2, r6
   130a0:	cmp	r0, r8
   130a4:	mla	r0, r6, r9, r3
   130a8:	beq	130e8 <__assert_fail@plt+0x1a58>
   130ac:	cmn	r9, #1
   130b0:	moveq	r9, r5
   130b4:	beq	13060 <__assert_fail@plt+0x19d0>
   130b8:	ldr	r3, [sp]
   130bc:	cmp	r3, #0
   130c0:	bne	1304c <__assert_fail@plt+0x19bc>
   130c4:	mov	r3, #1
   130c8:	str	r3, [sp, #4]
   130cc:	b	13060 <__assert_fail@plt+0x19d0>
   130d0:	ldr	r3, [sp, #4]
   130d4:	cmp	r3, #0
   130d8:	bne	130fc <__assert_fail@plt+0x1a6c>
   130dc:	mov	r0, r9
   130e0:	add	sp, sp, #12
   130e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130e8:	mov	r0, r5
   130ec:	add	sp, sp, #12
   130f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130f4:	mvn	r9, #0
   130f8:	b	130dc <__assert_fail@plt+0x1a4c>
   130fc:	mvn	r0, #1
   13100:	b	130e0 <__assert_fail@plt+0x1a50>
   13104:	cmn	r2, #1
   13108:	push	{r4, r5, r6, lr}
   1310c:	mov	r4, r0
   13110:	sub	sp, sp, #8
   13114:	mov	r5, r1
   13118:	mov	r0, #0
   1311c:	beq	13174 <__assert_fail@plt+0x1ae4>
   13120:	ldr	r1, [pc, #100]	; 1318c <__assert_fail@plt+0x1afc>
   13124:	mov	r2, #5
   13128:	add	r1, pc, r1
   1312c:	bl	113e4 <dcgettext@plt>
   13130:	mov	r6, r0
   13134:	mov	r2, r5
   13138:	mov	r1, #6
   1313c:	mov	r0, #0
   13140:	bl	14cfc <close_stdin@@Base+0x1960>
   13144:	mov	r1, r4
   13148:	mov	r5, r0
   1314c:	mov	r0, #1
   13150:	bl	14ffc <close_stdin@@Base+0x1c60>
   13154:	mov	r3, r5
   13158:	mov	r2, r6
   1315c:	str	r0, [sp]
   13160:	mov	r0, #0
   13164:	mov	r1, r0
   13168:	bl	1148c <error@plt>
   1316c:	add	sp, sp, #8
   13170:	pop	{r4, r5, r6, pc}
   13174:	ldr	r1, [pc, #20]	; 13190 <__assert_fail@plt+0x1b00>
   13178:	mov	r2, #5
   1317c:	add	r1, pc, r1
   13180:	bl	113e4 <dcgettext@plt>
   13184:	mov	r6, r0
   13188:	b	13134 <__assert_fail@plt+0x1aa4>
   1318c:	andeq	r8, r0, r8, ror #1
   13190:	andeq	r8, r0, r8, ror r0
   13194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13198:	mov	r4, r1
   1319c:	ldr	r1, [pc, #276]	; 132b8 <__assert_fail@plt+0x1c28>
   131a0:	sub	sp, sp, #12
   131a4:	mov	r7, r0
   131a8:	mov	r6, r2
   131ac:	add	r1, pc, r1
   131b0:	mov	r2, #5
   131b4:	mov	r0, #0
   131b8:	bl	113e4 <dcgettext@plt>
   131bc:	ldr	r3, [pc, #248]	; 132bc <__assert_fail@plt+0x1c2c>
   131c0:	ldr	r2, [pc, #248]	; 132c0 <__assert_fail@plt+0x1c30>
   131c4:	add	r3, pc, r3
   131c8:	ldr	r9, [r3, r2]
   131cc:	ldr	r1, [r9]
   131d0:	bl	11348 <fputs_unlocked@plt>
   131d4:	ldr	fp, [r7]
   131d8:	cmp	fp, #0
   131dc:	beq	1327c <__assert_fail@plt+0x1bec>
   131e0:	ldr	sl, [pc, #220]	; 132c4 <__assert_fail@plt+0x1c34>
   131e4:	mov	r8, #0
   131e8:	ldr	r3, [pc, #216]	; 132c8 <__assert_fail@plt+0x1c38>
   131ec:	mov	r5, r8
   131f0:	add	sl, pc, sl
   131f4:	add	r3, pc, r3
   131f8:	str	r3, [sp, #4]
   131fc:	b	13238 <__assert_fail@plt+0x1ba8>
   13200:	mov	r0, fp
   13204:	ldr	fp, [r9]
   13208:	bl	15004 <close_stdin@@Base+0x1c68>
   1320c:	mov	r1, #1
   13210:	mov	r2, sl
   13214:	mov	r8, r4
   13218:	mov	r3, r0
   1321c:	mov	r0, fp
   13220:	bl	1157c <__fprintf_chk@plt>
   13224:	ldr	fp, [r7, #4]!
   13228:	add	r5, r5, #1
   1322c:	add	r4, r4, r6
   13230:	cmp	fp, #0
   13234:	beq	1327c <__assert_fail@plt+0x1bec>
   13238:	cmp	r5, #0
   1323c:	mov	r1, r4
   13240:	mov	r2, r6
   13244:	mov	r0, r8
   13248:	beq	13200 <__assert_fail@plt+0x1b70>
   1324c:	bl	113d8 <memcmp@plt>
   13250:	cmp	r0, #0
   13254:	bne	13200 <__assert_fail@plt+0x1b70>
   13258:	mov	r0, fp
   1325c:	ldr	fp, [r9]
   13260:	bl	15004 <close_stdin@@Base+0x1c68>
   13264:	mov	r1, #1
   13268:	ldr	r2, [sp, #4]
   1326c:	mov	r3, r0
   13270:	mov	r0, fp
   13274:	bl	1157c <__fprintf_chk@plt>
   13278:	b	13224 <__assert_fail@plt+0x1b94>
   1327c:	ldr	r0, [r9]
   13280:	ldr	r3, [r0, #20]
   13284:	ldr	r2, [r0, #24]
   13288:	cmp	r3, r2
   1328c:	bcs	132a8 <__assert_fail@plt+0x1c18>
   13290:	add	r1, r3, #1
   13294:	mov	r2, #10
   13298:	str	r1, [r0, #20]
   1329c:	strb	r2, [r3]
   132a0:	add	sp, sp, #12
   132a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132a8:	mov	r1, #10
   132ac:	add	sp, sp, #12
   132b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132b4:	b	115b8 <__overflow@plt>
   132b8:	andeq	r8, r0, r4, lsl #1
   132bc:	andeq	r8, r1, r4, lsr lr
   132c0:	andeq	r0, r0, r8, asr #2
   132c4:	andeq	r8, r0, r8, asr r0
   132c8:	andeq	r8, r0, ip, asr r0
   132cc:	push	{r4, r5, r6, r7, r8, lr}
   132d0:	mov	r7, r1
   132d4:	ldr	r4, [sp, #24]
   132d8:	mov	r1, r2
   132dc:	mov	r6, r2
   132e0:	mov	r5, r3
   132e4:	mov	r2, r3
   132e8:	mov	r8, r0
   132ec:	mov	r3, r4
   132f0:	mov	r0, r7
   132f4:	bl	13008 <__assert_fail@plt+0x1978>
   132f8:	subs	r2, r0, #0
   132fc:	blt	13308 <__assert_fail@plt+0x1c78>
   13300:	mov	r0, r2
   13304:	pop	{r4, r5, r6, r7, r8, pc}
   13308:	mov	r0, r8
   1330c:	mov	r1, r7
   13310:	bl	13104 <__assert_fail@plt+0x1a74>
   13314:	mov	r0, r6
   13318:	mov	r1, r5
   1331c:	mov	r2, r4
   13320:	bl	13194 <__assert_fail@plt+0x1b04>
   13324:	ldr	r3, [sp, #28]
   13328:	blx	r3
   1332c:	mvn	r0, #0
   13330:	pop	{r4, r5, r6, r7, r8, pc}
   13334:	push	{r4, r5, r6, r7, r8, lr}
   13338:	mov	r8, r0
   1333c:	ldr	r5, [r1]
   13340:	mov	r6, r3
   13344:	cmp	r5, #0
   13348:	beq	13380 <__assert_fail@plt+0x1cf0>
   1334c:	mov	r4, r2
   13350:	mov	r7, r1
   13354:	b	13364 <__assert_fail@plt+0x1cd4>
   13358:	ldr	r5, [r7, #4]!
   1335c:	cmp	r5, #0
   13360:	beq	13380 <__assert_fail@plt+0x1cf0>
   13364:	mov	r1, r4
   13368:	mov	r0, r8
   1336c:	mov	r2, r6
   13370:	add	r4, r4, r6
   13374:	bl	113d8 <memcmp@plt>
   13378:	cmp	r0, #0
   1337c:	bne	13358 <__assert_fail@plt+0x1cc8>
   13380:	mov	r0, r5
   13384:	pop	{r4, r5, r6, r7, r8, pc}
   13388:	ldr	r3, [pc, #8]	; 13398 <__assert_fail@plt+0x1d08>
   1338c:	add	r3, pc, r3
   13390:	str	r0, [r3]
   13394:	bx	lr
   13398:	andeq	r8, r1, r4, asr lr

0001339c <close_stdin@@Base>:
   1339c:	push	{r4, r5, r6, r7, lr}
   133a0:	sub	sp, sp, #12
   133a4:	ldr	r4, [pc, #256]	; 134ac <close_stdin@@Base+0x110>
   133a8:	ldr	r3, [pc, #256]	; 134b0 <close_stdin@@Base+0x114>
   133ac:	add	r4, pc, r4
   133b0:	ldr	r6, [r4, r3]
   133b4:	ldr	r5, [r6]
   133b8:	mov	r0, r5
   133bc:	bl	15a68 <close_stdin@@Base+0x26cc>
   133c0:	cmp	r0, #0
   133c4:	mov	r0, r5
   133c8:	bne	13440 <close_stdin@@Base+0xa4>
   133cc:	bl	17df0 <fts_children@@Base+0x1d4>
   133d0:	cmp	r0, #0
   133d4:	beq	13480 <close_stdin@@Base+0xe4>
   133d8:	ldr	r1, [pc, #212]	; 134b4 <close_stdin@@Base+0x118>
   133dc:	mov	r2, #5
   133e0:	mov	r0, #0
   133e4:	add	r1, pc, r1
   133e8:	bl	113e4 <dcgettext@plt>
   133ec:	ldr	r2, [pc, #196]	; 134b8 <close_stdin@@Base+0x11c>
   133f0:	ldr	r5, [pc, r2]
   133f4:	cmp	r5, #0
   133f8:	mov	r6, r0
   133fc:	beq	1348c <close_stdin@@Base+0xf0>
   13400:	bl	11534 <__errno_location@plt>
   13404:	ldr	r7, [r0]
   13408:	mov	r0, r5
   1340c:	bl	14eb0 <close_stdin@@Base+0x1b14>
   13410:	ldr	r2, [pc, #164]	; 134bc <close_stdin@@Base+0x120>
   13414:	str	r6, [sp]
   13418:	mov	r1, r7
   1341c:	add	r2, pc, r2
   13420:	mov	r3, r0
   13424:	mov	r0, #0
   13428:	bl	1148c <error@plt>
   1342c:	bl	134f0 <close_stdin@@Base+0x154>
   13430:	ldr	r3, [pc, #136]	; 134c0 <close_stdin@@Base+0x124>
   13434:	ldr	r3, [r4, r3]
   13438:	ldr	r0, [r3]
   1343c:	bl	113b4 <_exit@plt>
   13440:	mov	r1, #1
   13444:	mov	r2, #0
   13448:	mov	r3, #0
   1344c:	str	r1, [sp]
   13450:	bl	15aa8 <close_stdin@@Base+0x270c>
   13454:	cmp	r0, #0
   13458:	ldr	r0, [r6]
   1345c:	bne	133cc <close_stdin@@Base+0x30>
   13460:	bl	15a08 <close_stdin@@Base+0x266c>
   13464:	mov	r5, r0
   13468:	ldr	r0, [r6]
   1346c:	bl	17df0 <fts_children@@Base+0x1d4>
   13470:	cmp	r0, #0
   13474:	bne	133d8 <close_stdin@@Base+0x3c>
   13478:	cmp	r5, #0
   1347c:	bne	133d8 <close_stdin@@Base+0x3c>
   13480:	add	sp, sp, #12
   13484:	pop	{r4, r5, r6, r7, lr}
   13488:	b	134f0 <close_stdin@@Base+0x154>
   1348c:	bl	11534 <__errno_location@plt>
   13490:	ldr	r2, [pc, #44]	; 134c4 <close_stdin@@Base+0x128>
   13494:	mov	r3, r6
   13498:	add	r2, pc, r2
   1349c:	ldr	r1, [r0]
   134a0:	mov	r0, r5
   134a4:	bl	1148c <error@plt>
   134a8:	b	1342c <close_stdin@@Base+0x90>
   134ac:	andeq	r8, r1, ip, asr #24
   134b0:	andeq	r0, r0, r8, asr r1
   134b4:	andeq	r7, r0, r4, ror lr
   134b8:	strdeq	r8, [r1], -r0
   134bc:	andeq	r7, r0, r0, asr lr
   134c0:	andeq	r0, r0, r0, ror #2
   134c4:	ldrdeq	r7, [r0], -r8
   134c8:	ldr	r3, [pc, #8]	; 134d8 <close_stdin@@Base+0x13c>
   134cc:	add	r3, pc, r3
   134d0:	str	r0, [r3]
   134d4:	bx	lr
   134d8:	andeq	r8, r1, r8, lsl sp
   134dc:	ldr	r3, [pc, #8]	; 134ec <close_stdin@@Base+0x150>
   134e0:	add	r3, pc, r3
   134e4:	strb	r0, [r3, #4]
   134e8:	bx	lr
   134ec:	andeq	r8, r1, r4, lsl #26
   134f0:	push	{r4, r5, r6, r7, lr}
   134f4:	sub	sp, sp, #12
   134f8:	ldr	r4, [pc, #228]	; 135e4 <close_stdin@@Base+0x248>
   134fc:	ldr	r3, [pc, #228]	; 135e8 <close_stdin@@Base+0x24c>
   13500:	add	r4, pc, r4
   13504:	ldr	r3, [r4, r3]
   13508:	ldr	r0, [r3]
   1350c:	bl	17df0 <fts_children@@Base+0x1d4>
   13510:	cmp	r0, #0
   13514:	beq	1353c <close_stdin@@Base+0x1a0>
   13518:	ldr	r3, [pc, #204]	; 135ec <close_stdin@@Base+0x250>
   1351c:	add	r3, pc, r3
   13520:	ldrb	r3, [r3, #4]
   13524:	cmp	r3, #0
   13528:	beq	1355c <close_stdin@@Base+0x1c0>
   1352c:	bl	11534 <__errno_location@plt>
   13530:	ldr	r3, [r0]
   13534:	cmp	r3, #32
   13538:	bne	1355c <close_stdin@@Base+0x1c0>
   1353c:	ldr	r3, [pc, #172]	; 135f0 <close_stdin@@Base+0x254>
   13540:	ldr	r3, [r4, r3]
   13544:	ldr	r0, [r3]
   13548:	bl	17df0 <fts_children@@Base+0x1d4>
   1354c:	cmp	r0, #0
   13550:	bne	135b0 <close_stdin@@Base+0x214>
   13554:	add	sp, sp, #12
   13558:	pop	{r4, r5, r6, r7, pc}
   1355c:	ldr	r1, [pc, #144]	; 135f4 <close_stdin@@Base+0x258>
   13560:	mov	r0, #0
   13564:	mov	r2, #5
   13568:	add	r1, pc, r1
   1356c:	bl	113e4 <dcgettext@plt>
   13570:	ldr	r3, [pc, #128]	; 135f8 <close_stdin@@Base+0x25c>
   13574:	ldr	r5, [pc, r3]
   13578:	cmp	r5, #0
   1357c:	mov	r6, r0
   13580:	beq	135c0 <close_stdin@@Base+0x224>
   13584:	bl	11534 <__errno_location@plt>
   13588:	ldr	r7, [r0]
   1358c:	mov	r0, r5
   13590:	bl	14eb0 <close_stdin@@Base+0x1b14>
   13594:	ldr	r2, [pc, #96]	; 135fc <close_stdin@@Base+0x260>
   13598:	str	r6, [sp]
   1359c:	mov	r1, r7
   135a0:	add	r2, pc, r2
   135a4:	mov	r3, r0
   135a8:	mov	r0, #0
   135ac:	bl	1148c <error@plt>
   135b0:	ldr	r3, [pc, #72]	; 13600 <close_stdin@@Base+0x264>
   135b4:	ldr	r3, [r4, r3]
   135b8:	ldr	r0, [r3]
   135bc:	bl	113b4 <_exit@plt>
   135c0:	bl	11534 <__errno_location@plt>
   135c4:	ldr	r2, [pc, #56]	; 13604 <close_stdin@@Base+0x268>
   135c8:	add	r2, pc, r2
   135cc:	mov	r3, r0
   135d0:	mov	r0, r5
   135d4:	ldr	r1, [r3]
   135d8:	mov	r3, r6
   135dc:	bl	1148c <error@plt>
   135e0:	b	135b0 <close_stdin@@Base+0x214>
   135e4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   135e8:	andeq	r0, r0, ip, asr r1
   135ec:	andeq	r8, r1, r8, asr #25
   135f0:	andeq	r0, r0, r8, asr #2
   135f4:	andeq	r7, r0, ip, lsl #26
   135f8:	andeq	r8, r1, r0, ror ip
   135fc:	andeq	r7, r0, ip, asr #25
   13600:	andeq	r0, r0, r0, ror #2
   13604:	andeq	r7, r0, r8, lsr #25
   13608:	ldrb	r3, [r0]
   1360c:	cmp	r3, #47	; 0x2f
   13610:	bne	1362c <close_stdin@@Base+0x290>
   13614:	add	r2, r0, #1
   13618:	mov	r0, r2
   1361c:	add	r2, r2, #1
   13620:	ldrb	r3, [r0]
   13624:	cmp	r3, #47	; 0x2f
   13628:	beq	13618 <close_stdin@@Base+0x27c>
   1362c:	cmp	r3, #0
   13630:	bxeq	lr
   13634:	mov	r2, r0
   13638:	mov	r1, #0
   1363c:	cmp	r3, #47	; 0x2f
   13640:	moveq	r1, #1
   13644:	beq	13654 <close_stdin@@Base+0x2b8>
   13648:	cmp	r1, #0
   1364c:	movne	r0, r2
   13650:	movne	r1, #0
   13654:	ldrb	r3, [r2, #1]!
   13658:	cmp	r3, #0
   1365c:	bne	1363c <close_stdin@@Base+0x2a0>
   13660:	bx	lr
   13664:	push	{r4, lr}
   13668:	mov	r4, r0
   1366c:	bl	11504 <strlen@plt>
   13670:	cmp	r0, #1
   13674:	popls	{r4, pc}
   13678:	sub	r3, r0, #1
   1367c:	ldrb	r2, [r4, r3]
   13680:	cmp	r2, #47	; 0x2f
   13684:	popne	{r4, pc}
   13688:	mov	r0, r3
   1368c:	cmp	r0, #1
   13690:	sub	r3, r3, #1
   13694:	beq	136a8 <close_stdin@@Base+0x30c>
   13698:	ldrb	r2, [r4, r3]
   1369c:	cmp	r2, #47	; 0x2f
   136a0:	popne	{r4, pc}
   136a4:	b	13688 <close_stdin@@Base+0x2ec>
   136a8:	pop	{r4, pc}
   136ac:	ldr	r3, [r0, #16]
   136b0:	and	r3, r3, #61440	; 0xf000
   136b4:	cmp	r3, #32768	; 0x8000
   136b8:	beq	13700 <close_stdin@@Base+0x364>
   136bc:	cmp	r3, #16384	; 0x4000
   136c0:	mov	r0, #0
   136c4:	beq	13740 <close_stdin@@Base+0x3a4>
   136c8:	cmp	r3, #24576	; 0x6000
   136cc:	beq	13750 <close_stdin@@Base+0x3b4>
   136d0:	cmp	r3, #8192	; 0x2000
   136d4:	beq	13760 <close_stdin@@Base+0x3c4>
   136d8:	cmp	r3, #4096	; 0x1000
   136dc:	beq	13770 <close_stdin@@Base+0x3d4>
   136e0:	cmp	r3, #40960	; 0xa000
   136e4:	beq	13780 <close_stdin@@Base+0x3e4>
   136e8:	cmp	r3, #49152	; 0xc000
   136ec:	beq	13730 <close_stdin@@Base+0x394>
   136f0:	ldr	r1, [pc, #152]	; 13790 <close_stdin@@Base+0x3f4>
   136f4:	mov	r2, #5
   136f8:	add	r1, pc, r1
   136fc:	b	113e4 <dcgettext@plt>
   13700:	ldrd	r2, [r0, #48]	; 0x30
   13704:	mov	r0, #0
   13708:	orrs	r1, r2, r3
   1370c:	bne	13720 <close_stdin@@Base+0x384>
   13710:	ldr	r1, [pc, #124]	; 13794 <close_stdin@@Base+0x3f8>
   13714:	mov	r2, #5
   13718:	add	r1, pc, r1
   1371c:	b	113e4 <dcgettext@plt>
   13720:	ldr	r1, [pc, #112]	; 13798 <close_stdin@@Base+0x3fc>
   13724:	mov	r2, #5
   13728:	add	r1, pc, r1
   1372c:	b	113e4 <dcgettext@plt>
   13730:	ldr	r1, [pc, #100]	; 1379c <close_stdin@@Base+0x400>
   13734:	mov	r2, #5
   13738:	add	r1, pc, r1
   1373c:	b	113e4 <dcgettext@plt>
   13740:	ldr	r1, [pc, #88]	; 137a0 <close_stdin@@Base+0x404>
   13744:	mov	r2, #5
   13748:	add	r1, pc, r1
   1374c:	b	113e4 <dcgettext@plt>
   13750:	ldr	r1, [pc, #76]	; 137a4 <close_stdin@@Base+0x408>
   13754:	mov	r2, #5
   13758:	add	r1, pc, r1
   1375c:	b	113e4 <dcgettext@plt>
   13760:	ldr	r1, [pc, #64]	; 137a8 <close_stdin@@Base+0x40c>
   13764:	mov	r2, #5
   13768:	add	r1, pc, r1
   1376c:	b	113e4 <dcgettext@plt>
   13770:	ldr	r1, [pc, #52]	; 137ac <close_stdin@@Base+0x410>
   13774:	mov	r2, #5
   13778:	add	r1, pc, r1
   1377c:	b	113e4 <dcgettext@plt>
   13780:	ldr	r1, [pc, #40]	; 137b0 <close_stdin@@Base+0x414>
   13784:	mov	r2, #5
   13788:	add	r1, pc, r1
   1378c:	b	113e4 <dcgettext@plt>
   13790:	andeq	r7, r0, r4, lsl #24
   13794:	andeq	r7, r0, r8, ror #22
   13798:	andeq	r7, r0, ip, ror #22
   1379c:			; <UNDEFINED> instruction: 0x00007bbc
   137a0:	andeq	r7, r0, ip, asr fp
   137a4:	andeq	r7, r0, r8, asr fp
   137a8:	andeq	r7, r0, ip, asr fp
   137ac:	andeq	r7, r0, r4, ror #22
   137b0:	andeq	r7, r0, ip, asr fp
   137b4:	push	{r3, r4, r5, r6, r7, lr}
   137b8:	subs	r4, r0, #0
   137bc:	ldr	r5, [pc, #172]	; 13870 <close_stdin@@Base+0x4d4>
   137c0:	add	r5, pc, r5
   137c4:	beq	1384c <close_stdin@@Base+0x4b0>
   137c8:	mov	r1, #47	; 0x2f
   137cc:	bl	115d0 <strrchr@plt>
   137d0:	subs	r6, r0, #0
   137d4:	beq	13830 <close_stdin@@Base+0x494>
   137d8:	add	r7, r6, #1
   137dc:	rsb	r3, r4, r7
   137e0:	cmp	r3, #6
   137e4:	ble	13830 <close_stdin@@Base+0x494>
   137e8:	ldr	r1, [pc, #132]	; 13874 <close_stdin@@Base+0x4d8>
   137ec:	sub	r0, r6, #6
   137f0:	mov	r2, #7
   137f4:	add	r1, pc, r1
   137f8:	bl	11648 <strncmp@plt>
   137fc:	cmp	r0, #0
   13800:	bne	13830 <close_stdin@@Base+0x494>
   13804:	ldr	r1, [pc, #108]	; 13878 <close_stdin@@Base+0x4dc>
   13808:	mov	r0, r7
   1380c:	mov	r2, #3
   13810:	add	r1, pc, r1
   13814:	bl	11648 <strncmp@plt>
   13818:	cmp	r0, #0
   1381c:	movne	r4, r7
   13820:	ldreq	r3, [pc, #84]	; 1387c <close_stdin@@Base+0x4e0>
   13824:	addeq	r4, r6, #4
   13828:	ldreq	r3, [r5, r3]
   1382c:	streq	r4, [r3]
   13830:	ldr	r2, [pc, #72]	; 13880 <close_stdin@@Base+0x4e4>
   13834:	ldr	r3, [pc, #72]	; 13884 <close_stdin@@Base+0x4e8>
   13838:	ldr	r2, [r5, r2]
   1383c:	str	r4, [r2]
   13840:	ldr	r3, [r5, r3]
   13844:	str	r4, [r3]
   13848:	pop	{r3, r4, r5, r6, r7, pc}
   1384c:	ldr	r3, [pc, #52]	; 13888 <close_stdin@@Base+0x4ec>
   13850:	mov	r1, #1
   13854:	ldr	r0, [pc, #48]	; 1388c <close_stdin@@Base+0x4f0>
   13858:	mov	r2, #55	; 0x37
   1385c:	ldr	r3, [r5, r3]
   13860:	add	r0, pc, r0
   13864:	ldr	r3, [r3]
   13868:	bl	11444 <fwrite@plt>
   1386c:	bl	11654 <abort@plt>
   13870:	andeq	r8, r1, r8, lsr r8
   13874:	andeq	r7, r0, ip, asr #22
   13878:	andeq	r7, r0, r8, lsr fp
   1387c:	andeq	r0, r0, r0, ror r1
   13880:	andeq	r0, r0, r8, ror #2
   13884:	andeq	r0, r0, r4, ror #2
   13888:	andeq	r0, r0, r8, asr #2
   1388c:	andeq	r7, r0, r8, lsr #21
   13890:	push	{r3, lr}
   13894:	mov	r3, r0
   13898:	mov	r2, #0
   1389c:	cmp	r1, #8
   138a0:	str	r2, [r3], #4
   138a4:	add	r3, r3, #4
   138a8:	str	r2, [r0, #4]
   138ac:	str	r2, [r3], #4
   138b0:	str	r2, [r3], #4
   138b4:	str	r2, [r3], #4
   138b8:	str	r2, [r3], #4
   138bc:	str	r2, [r3], #4
   138c0:	str	r2, [r3], #4
   138c4:	str	r2, [r3], #4
   138c8:	str	r2, [r3], #4
   138cc:	str	r2, [r3], #4
   138d0:	str	r2, [r3]
   138d4:	beq	138e0 <close_stdin@@Base+0x544>
   138d8:	str	r1, [r0]
   138dc:	pop	{r3, pc}
   138e0:	bl	11654 <abort@plt>
   138e4:	push	{r4, r5, r6, lr}
   138e8:	mov	r4, r0
   138ec:	mov	r6, r1
   138f0:	mov	r0, #0
   138f4:	mov	r1, r4
   138f8:	mov	r2, #5
   138fc:	bl	113e4 <dcgettext@plt>
   13900:	cmp	r0, r4
   13904:	mov	r5, r0
   13908:	beq	13910 <close_stdin@@Base+0x574>
   1390c:	pop	{r4, r5, r6, pc}
   13910:	bl	19160 <fts_children@@Base+0x1544>
   13914:	ldrb	r3, [r0]
   13918:	bic	r3, r3, #32
   1391c:	cmp	r3, #85	; 0x55
   13920:	bne	13994 <close_stdin@@Base+0x5f8>
   13924:	ldrb	r3, [r0, #1]
   13928:	bic	r3, r3, #32
   1392c:	cmp	r3, #84	; 0x54
   13930:	bne	13980 <close_stdin@@Base+0x5e4>
   13934:	ldrb	r3, [r0, #2]
   13938:	bic	r3, r3, #32
   1393c:	cmp	r3, #70	; 0x46
   13940:	bne	13980 <close_stdin@@Base+0x5e4>
   13944:	ldrb	r3, [r0, #3]
   13948:	cmp	r3, #45	; 0x2d
   1394c:	bne	13980 <close_stdin@@Base+0x5e4>
   13950:	ldrb	r3, [r0, #4]
   13954:	cmp	r3, #56	; 0x38
   13958:	bne	13980 <close_stdin@@Base+0x5e4>
   1395c:	ldrb	r3, [r0, #5]
   13960:	cmp	r3, #0
   13964:	bne	13980 <close_stdin@@Base+0x5e4>
   13968:	ldrb	r3, [r5]
   1396c:	cmp	r3, #96	; 0x60
   13970:	beq	13a0c <close_stdin@@Base+0x670>
   13974:	ldr	r0, [pc, #180]	; 13a30 <close_stdin@@Base+0x694>
   13978:	add	r0, pc, r0
   1397c:	pop	{r4, r5, r6, pc}
   13980:	cmp	r6, #7
   13984:	beq	13a18 <close_stdin@@Base+0x67c>
   13988:	ldr	r0, [pc, #164]	; 13a34 <close_stdin@@Base+0x698>
   1398c:	add	r0, pc, r0
   13990:	pop	{r4, r5, r6, pc}
   13994:	cmp	r3, #71	; 0x47
   13998:	bne	13980 <close_stdin@@Base+0x5e4>
   1399c:	ldrb	r3, [r0, #1]
   139a0:	bic	r3, r3, #32
   139a4:	cmp	r3, #66	; 0x42
   139a8:	bne	13980 <close_stdin@@Base+0x5e4>
   139ac:	ldrb	r3, [r0, #2]
   139b0:	cmp	r3, #49	; 0x31
   139b4:	bne	13980 <close_stdin@@Base+0x5e4>
   139b8:	ldrb	r3, [r0, #3]
   139bc:	cmp	r3, #56	; 0x38
   139c0:	bne	13980 <close_stdin@@Base+0x5e4>
   139c4:	ldrb	r3, [r0, #4]
   139c8:	cmp	r3, #48	; 0x30
   139cc:	bne	13980 <close_stdin@@Base+0x5e4>
   139d0:	ldrb	r3, [r0, #5]
   139d4:	cmp	r3, #51	; 0x33
   139d8:	bne	13980 <close_stdin@@Base+0x5e4>
   139dc:	ldrb	r3, [r0, #6]
   139e0:	cmp	r3, #48	; 0x30
   139e4:	bne	13980 <close_stdin@@Base+0x5e4>
   139e8:	ldrb	r3, [r0, #7]
   139ec:	cmp	r3, #0
   139f0:	bne	13980 <close_stdin@@Base+0x5e4>
   139f4:	ldrb	r3, [r5]
   139f8:	cmp	r3, #96	; 0x60
   139fc:	beq	13a24 <close_stdin@@Base+0x688>
   13a00:	ldr	r0, [pc, #48]	; 13a38 <close_stdin@@Base+0x69c>
   13a04:	add	r0, pc, r0
   13a08:	pop	{r4, r5, r6, pc}
   13a0c:	ldr	r0, [pc, #40]	; 13a3c <close_stdin@@Base+0x6a0>
   13a10:	add	r0, pc, r0
   13a14:	pop	{r4, r5, r6, pc}
   13a18:	ldr	r0, [pc, #32]	; 13a40 <close_stdin@@Base+0x6a4>
   13a1c:	add	r0, pc, r0
   13a20:	pop	{r4, r5, r6, pc}
   13a24:	ldr	r0, [pc, #24]	; 13a44 <close_stdin@@Base+0x6a8>
   13a28:	add	r0, pc, r0
   13a2c:	pop	{r4, r5, r6, pc}
   13a30:	strdeq	r7, [r0], -r4
   13a34:	andeq	r7, r0, r8, ror #19
   13a38:	andeq	r7, r0, ip, ror #18
   13a3c:	andeq	r7, r0, r0, ror r9
   13a40:	andeq	r7, r0, ip, asr r9
   13a44:	andeq	r7, r0, r4, asr r9
   13a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a4c:	sub	sp, sp, #124	; 0x7c
   13a50:	ldr	ip, [pc, #3304]	; 14740 <close_stdin@@Base+0x13a4>
   13a54:	mov	sl, r1
   13a58:	str	r0, [sp, #40]	; 0x28
   13a5c:	mov	r8, r3
   13a60:	ldr	r0, [pc, #3292]	; 14744 <close_stdin@@Base+0x13a8>
   13a64:	add	ip, pc, ip
   13a68:	str	r2, [sp, #32]
   13a6c:	ldr	r1, [sp, #164]	; 0xa4
   13a70:	mov	r3, ip
   13a74:	ldr	r0, [ip, r0]
   13a78:	ldr	r2, [sp, #172]	; 0xac
   13a7c:	ubfx	r1, r1, #1, #1
   13a80:	str	r1, [sp, #36]	; 0x24
   13a84:	str	r0, [sp, #56]	; 0x38
   13a88:	ldr	r0, [sp, #168]	; 0xa8
   13a8c:	ldr	r1, [sp, #176]	; 0xb0
   13a90:	str	r2, [sp, #72]	; 0x48
   13a94:	str	r0, [sp, #48]	; 0x30
   13a98:	ldr	r0, [sp, #56]	; 0x38
   13a9c:	str	r1, [sp, #68]	; 0x44
   13aa0:	ldr	r3, [r0]
   13aa4:	str	r3, [sp, #116]	; 0x74
   13aa8:	bl	1145c <__ctype_get_mb_cur_max@plt>
   13aac:	ldr	r2, [sp, #160]	; 0xa0
   13ab0:	str	r0, [sp, #64]	; 0x40
   13ab4:	cmp	r2, #8
   13ab8:	addls	pc, pc, r2, lsl #2
   13abc:	b	1461c <close_stdin@@Base+0x1280>
   13ac0:	b	13ae4 <close_stdin@@Base+0x748>
   13ac4:	b	14334 <close_stdin@@Base+0xf98>
   13ac8:	b	14364 <close_stdin@@Base+0xfc8>
   13acc:	b	14214 <close_stdin@@Base+0xe78>
   13ad0:	b	14254 <close_stdin@@Base+0xeb8>
   13ad4:	b	14280 <close_stdin@@Base+0xee4>
   13ad8:	b	142a0 <close_stdin@@Base+0xf04>
   13adc:	b	142a0 <close_stdin@@Base+0xf04>
   13ae0:	b	142a0 <close_stdin@@Base+0xf04>
   13ae4:	mov	r2, #0
   13ae8:	str	r2, [sp, #36]	; 0x24
   13aec:	mov	r9, r2
   13af0:	str	r2, [sp, #24]
   13af4:	str	r2, [sp, #28]
   13af8:	str	r2, [sp, #52]	; 0x34
   13afc:	ldr	r0, [sp, #36]	; 0x24
   13b00:	mov	fp, #0
   13b04:	ldr	r1, [sp, #24]
   13b08:	eor	r2, r0, #1
   13b0c:	eor	r3, r1, #1
   13b10:	and	r3, r2, r3
   13b14:	and	r2, r1, r0
   13b18:	str	r3, [sp, #44]	; 0x2c
   13b1c:	str	r2, [sp, #76]	; 0x4c
   13b20:	cmn	r8, #1
   13b24:	beq	13ea4 <close_stdin@@Base+0xb08>
   13b28:	subs	r3, fp, r8
   13b2c:	movne	r3, #1
   13b30:	cmp	r3, #0
   13b34:	beq	13ebc <close_stdin@@Base+0xb20>
   13b38:	ldr	r3, [sp, #28]
   13b3c:	ldr	r0, [sp, #24]
   13b40:	adds	r7, r3, #0
   13b44:	movne	r7, #1
   13b48:	ands	r6, r7, r0
   13b4c:	bne	143a8 <close_stdin@@Base+0x100c>
   13b50:	ldr	r1, [sp, #32]
   13b54:	add	r5, r1, fp
   13b58:	ldrb	r4, [r5]
   13b5c:	cmp	r4, #126	; 0x7e
   13b60:	addls	pc, pc, r4, lsl #2
   13b64:	b	14128 <close_stdin@@Base+0xd8c>
   13b68:	b	14034 <close_stdin@@Base+0xc98>
   13b6c:	b	14128 <close_stdin@@Base+0xd8c>
   13b70:	b	14128 <close_stdin@@Base+0xd8c>
   13b74:	b	14128 <close_stdin@@Base+0xd8c>
   13b78:	b	14128 <close_stdin@@Base+0xd8c>
   13b7c:	b	14128 <close_stdin@@Base+0xd8c>
   13b80:	b	14128 <close_stdin@@Base+0xd8c>
   13b84:	b	1401c <close_stdin@@Base+0xc80>
   13b88:	b	14004 <close_stdin@@Base+0xc68>
   13b8c:	b	1402c <close_stdin@@Base+0xc90>
   13b90:	b	14024 <close_stdin@@Base+0xc88>
   13b94:	b	14014 <close_stdin@@Base+0xc78>
   13b98:	b	1400c <close_stdin@@Base+0xc70>
   13b9c:	b	13fd0 <close_stdin@@Base+0xc34>
   13ba0:	b	14128 <close_stdin@@Base+0xd8c>
   13ba4:	b	14128 <close_stdin@@Base+0xd8c>
   13ba8:	b	14128 <close_stdin@@Base+0xd8c>
   13bac:	b	14128 <close_stdin@@Base+0xd8c>
   13bb0:	b	14128 <close_stdin@@Base+0xd8c>
   13bb4:	b	14128 <close_stdin@@Base+0xd8c>
   13bb8:	b	14128 <close_stdin@@Base+0xd8c>
   13bbc:	b	14128 <close_stdin@@Base+0xd8c>
   13bc0:	b	14128 <close_stdin@@Base+0xd8c>
   13bc4:	b	14128 <close_stdin@@Base+0xd8c>
   13bc8:	b	14128 <close_stdin@@Base+0xd8c>
   13bcc:	b	14128 <close_stdin@@Base+0xd8c>
   13bd0:	b	14128 <close_stdin@@Base+0xd8c>
   13bd4:	b	14128 <close_stdin@@Base+0xd8c>
   13bd8:	b	14128 <close_stdin@@Base+0xd8c>
   13bdc:	b	14128 <close_stdin@@Base+0xd8c>
   13be0:	b	14128 <close_stdin@@Base+0xd8c>
   13be4:	b	14128 <close_stdin@@Base+0xd8c>
   13be8:	b	13f5c <close_stdin@@Base+0xbc0>
   13bec:	b	13f5c <close_stdin@@Base+0xbc0>
   13bf0:	b	13f5c <close_stdin@@Base+0xbc0>
   13bf4:	b	13f54 <close_stdin@@Base+0xbb8>
   13bf8:	b	13f5c <close_stdin@@Base+0xbc0>
   13bfc:	b	13e30 <close_stdin@@Base+0xa94>
   13c00:	b	13f5c <close_stdin@@Base+0xbc0>
   13c04:	b	140d0 <close_stdin@@Base+0xd34>
   13c08:	b	13f5c <close_stdin@@Base+0xbc0>
   13c0c:	b	13f5c <close_stdin@@Base+0xbc0>
   13c10:	b	13f5c <close_stdin@@Base+0xbc0>
   13c14:	b	13e30 <close_stdin@@Base+0xa94>
   13c18:	b	13e30 <close_stdin@@Base+0xa94>
   13c1c:	b	13e30 <close_stdin@@Base+0xa94>
   13c20:	b	13e30 <close_stdin@@Base+0xa94>
   13c24:	b	13e30 <close_stdin@@Base+0xa94>
   13c28:	b	13e30 <close_stdin@@Base+0xa94>
   13c2c:	b	13e30 <close_stdin@@Base+0xa94>
   13c30:	b	13e30 <close_stdin@@Base+0xa94>
   13c34:	b	13e30 <close_stdin@@Base+0xa94>
   13c38:	b	13e30 <close_stdin@@Base+0xa94>
   13c3c:	b	13e30 <close_stdin@@Base+0xa94>
   13c40:	b	13e30 <close_stdin@@Base+0xa94>
   13c44:	b	13e30 <close_stdin@@Base+0xa94>
   13c48:	b	13e30 <close_stdin@@Base+0xa94>
   13c4c:	b	13e30 <close_stdin@@Base+0xa94>
   13c50:	b	13e30 <close_stdin@@Base+0xa94>
   13c54:	b	13f5c <close_stdin@@Base+0xbc0>
   13c58:	b	13f5c <close_stdin@@Base+0xbc0>
   13c5c:	b	13f5c <close_stdin@@Base+0xbc0>
   13c60:	b	13f5c <close_stdin@@Base+0xbc0>
   13c64:	b	13d64 <close_stdin@@Base+0x9c8>
   13c68:	b	14128 <close_stdin@@Base+0xd8c>
   13c6c:	b	13e30 <close_stdin@@Base+0xa94>
   13c70:	b	13e30 <close_stdin@@Base+0xa94>
   13c74:	b	13e30 <close_stdin@@Base+0xa94>
   13c78:	b	13e30 <close_stdin@@Base+0xa94>
   13c7c:	b	13e30 <close_stdin@@Base+0xa94>
   13c80:	b	13e30 <close_stdin@@Base+0xa94>
   13c84:	b	13e30 <close_stdin@@Base+0xa94>
   13c88:	b	13e30 <close_stdin@@Base+0xa94>
   13c8c:	b	13e30 <close_stdin@@Base+0xa94>
   13c90:	b	13e30 <close_stdin@@Base+0xa94>
   13c94:	b	13e30 <close_stdin@@Base+0xa94>
   13c98:	b	13e30 <close_stdin@@Base+0xa94>
   13c9c:	b	13e30 <close_stdin@@Base+0xa94>
   13ca0:	b	13e30 <close_stdin@@Base+0xa94>
   13ca4:	b	13e30 <close_stdin@@Base+0xa94>
   13ca8:	b	13e30 <close_stdin@@Base+0xa94>
   13cac:	b	13e30 <close_stdin@@Base+0xa94>
   13cb0:	b	13e30 <close_stdin@@Base+0xa94>
   13cb4:	b	13e30 <close_stdin@@Base+0xa94>
   13cb8:	b	13e30 <close_stdin@@Base+0xa94>
   13cbc:	b	13e30 <close_stdin@@Base+0xa94>
   13cc0:	b	13e30 <close_stdin@@Base+0xa94>
   13cc4:	b	13e30 <close_stdin@@Base+0xa94>
   13cc8:	b	13e30 <close_stdin@@Base+0xa94>
   13ccc:	b	13e30 <close_stdin@@Base+0xa94>
   13cd0:	b	13e30 <close_stdin@@Base+0xa94>
   13cd4:	b	13f5c <close_stdin@@Base+0xbc0>
   13cd8:	b	140b4 <close_stdin@@Base+0xd18>
   13cdc:	b	13e30 <close_stdin@@Base+0xa94>
   13ce0:	b	13f5c <close_stdin@@Base+0xbc0>
   13ce4:	b	13e30 <close_stdin@@Base+0xa94>
   13ce8:	b	13f5c <close_stdin@@Base+0xbc0>
   13cec:	b	13e30 <close_stdin@@Base+0xa94>
   13cf0:	b	13e30 <close_stdin@@Base+0xa94>
   13cf4:	b	13e30 <close_stdin@@Base+0xa94>
   13cf8:	b	13e30 <close_stdin@@Base+0xa94>
   13cfc:	b	13e30 <close_stdin@@Base+0xa94>
   13d00:	b	13e30 <close_stdin@@Base+0xa94>
   13d04:	b	13e30 <close_stdin@@Base+0xa94>
   13d08:	b	13e30 <close_stdin@@Base+0xa94>
   13d0c:	b	13e30 <close_stdin@@Base+0xa94>
   13d10:	b	13e30 <close_stdin@@Base+0xa94>
   13d14:	b	13e30 <close_stdin@@Base+0xa94>
   13d18:	b	13e30 <close_stdin@@Base+0xa94>
   13d1c:	b	13e30 <close_stdin@@Base+0xa94>
   13d20:	b	13e30 <close_stdin@@Base+0xa94>
   13d24:	b	13e30 <close_stdin@@Base+0xa94>
   13d28:	b	13e30 <close_stdin@@Base+0xa94>
   13d2c:	b	13e30 <close_stdin@@Base+0xa94>
   13d30:	b	13e30 <close_stdin@@Base+0xa94>
   13d34:	b	13e30 <close_stdin@@Base+0xa94>
   13d38:	b	13e30 <close_stdin@@Base+0xa94>
   13d3c:	b	13e30 <close_stdin@@Base+0xa94>
   13d40:	b	13e30 <close_stdin@@Base+0xa94>
   13d44:	b	13e30 <close_stdin@@Base+0xa94>
   13d48:	b	13e30 <close_stdin@@Base+0xa94>
   13d4c:	b	13e30 <close_stdin@@Base+0xa94>
   13d50:	b	13e30 <close_stdin@@Base+0xa94>
   13d54:	b	13f3c <close_stdin@@Base+0xba0>
   13d58:	b	13f5c <close_stdin@@Base+0xbc0>
   13d5c:	b	13f3c <close_stdin@@Base+0xba0>
   13d60:	b	13f54 <close_stdin@@Base+0xbb8>
   13d64:	ldr	r3, [sp, #160]	; 0xa0
   13d68:	cmp	r3, #2
   13d6c:	beq	145f8 <close_stdin@@Base+0x125c>
   13d70:	cmp	r3, #3
   13d74:	bne	13e30 <close_stdin@@Base+0xa94>
   13d78:	ldr	r1, [sp, #164]	; 0xa4
   13d7c:	tst	r1, #4
   13d80:	beq	13e30 <close_stdin@@Base+0xa94>
   13d84:	add	r3, fp, #2
   13d88:	cmp	r8, r3
   13d8c:	bls	13e30 <close_stdin@@Base+0xa94>
   13d90:	ldrb	r2, [r5, #1]
   13d94:	mov	r1, #1
   13d98:	cmp	r2, #63	; 0x3f
   13d9c:	bne	13e30 <close_stdin@@Base+0xa94>
   13da0:	ldr	r0, [sp, #32]
   13da4:	ldrb	ip, [r0, r3]
   13da8:	sub	r0, ip, #33	; 0x21
   13dac:	uxtb	r0, r0
   13db0:	cmp	r0, #29
   13db4:	bhi	13e30 <close_stdin@@Base+0xa94>
   13db8:	lsl	r1, r1, r0
   13dbc:	movw	r0, #20929	; 0x51c1
   13dc0:	movt	r0, #14336	; 0x3800
   13dc4:	and	r0, r1, r0
   13dc8:	cmp	r0, #0
   13dcc:	beq	13e30 <close_stdin@@Base+0xa94>
   13dd0:	ldr	r1, [sp, #36]	; 0x24
   13dd4:	cmp	r1, #0
   13dd8:	bne	13f78 <close_stdin@@Base+0xbdc>
   13ddc:	cmp	r9, sl
   13de0:	mov	r4, ip
   13de4:	mov	fp, r3
   13de8:	ldrcc	r0, [sp, #40]	; 0x28
   13dec:	strbcc	r2, [r0, r9]
   13df0:	add	r2, r9, #1
   13df4:	cmp	sl, r2
   13df8:	ldrhi	r0, [sp, #40]	; 0x28
   13dfc:	movhi	r1, #34	; 0x22
   13e00:	strbhi	r1, [r0, r2]
   13e04:	add	r2, r9, #2
   13e08:	cmp	sl, r2
   13e0c:	ldrhi	r0, [sp, #40]	; 0x28
   13e10:	movhi	r1, #34	; 0x22
   13e14:	strbhi	r1, [r0, r2]
   13e18:	add	r2, r9, #3
   13e1c:	cmp	sl, r2
   13e20:	add	r9, r9, #4
   13e24:	ldrhi	r0, [sp, #40]	; 0x28
   13e28:	movhi	r1, #63	; 0x3f
   13e2c:	strbhi	r1, [r0, r2]
   13e30:	ldr	r0, [sp, #44]	; 0x2c
   13e34:	cmp	r0, #0
   13e38:	bne	13e60 <close_stdin@@Base+0xac4>
   13e3c:	ldr	r1, [sp, #48]	; 0x30
   13e40:	cmp	r1, #0
   13e44:	beq	13e60 <close_stdin@@Base+0xac4>
   13e48:	ubfx	r2, r4, #5, #8
   13e4c:	and	r3, r4, #31
   13e50:	ldr	r2, [r1, r2, lsl #2]
   13e54:	lsr	r3, r2, r3
   13e58:	tst	r3, #1
   13e5c:	bne	13e68 <close_stdin@@Base+0xacc>
   13e60:	cmp	r6, #0
   13e64:	beq	13e88 <close_stdin@@Base+0xaec>
   13e68:	ldr	r2, [sp, #36]	; 0x24
   13e6c:	cmp	r2, #0
   13e70:	bne	13f78 <close_stdin@@Base+0xbdc>
   13e74:	cmp	r9, sl
   13e78:	ldrcc	r0, [sp, #40]	; 0x28
   13e7c:	movcc	r3, #92	; 0x5c
   13e80:	strbcc	r3, [r0, r9]
   13e84:	add	r9, r9, #1
   13e88:	add	fp, fp, #1
   13e8c:	cmp	r9, sl
   13e90:	ldrcc	r1, [sp, #40]	; 0x28
   13e94:	strbcc	r4, [r1, r9]
   13e98:	cmn	r8, #1
   13e9c:	add	r9, r9, #1
   13ea0:	bne	13b28 <close_stdin@@Base+0x78c>
   13ea4:	ldr	r2, [sp, #32]
   13ea8:	ldrb	r3, [r2, fp]
   13eac:	adds	r3, r3, #0
   13eb0:	movne	r3, #1
   13eb4:	cmp	r3, #0
   13eb8:	bne	13b38 <close_stdin@@Base+0x79c>
   13ebc:	ldr	r3, [sp, #160]	; 0xa0
   13ec0:	cmp	r9, #0
   13ec4:	cmpeq	r3, #2
   13ec8:	bne	13ed8 <close_stdin@@Base+0xb3c>
   13ecc:	ldr	r0, [sp, #36]	; 0x24
   13ed0:	cmp	r0, #0
   13ed4:	bne	13f78 <close_stdin@@Base+0xbdc>
   13ed8:	ldr	r1, [sp, #36]	; 0x24
   13edc:	ldr	r2, [sp, #52]	; 0x34
   13ee0:	eor	r3, r1, #1
   13ee4:	cmp	r2, #0
   13ee8:	moveq	r3, #0
   13eec:	andne	r3, r3, #1
   13ef0:	cmp	r3, #0
   13ef4:	beq	13f20 <close_stdin@@Base+0xb84>
   13ef8:	ldrb	r3, [r2]
   13efc:	cmp	r3, #0
   13f00:	beq	13f20 <close_stdin@@Base+0xb84>
   13f04:	ldr	r1, [sp, #40]	; 0x28
   13f08:	cmp	sl, r9
   13f0c:	strbhi	r3, [r1, r9]
   13f10:	ldrb	r3, [r2, #1]!
   13f14:	add	r9, r9, #1
   13f18:	cmp	r3, #0
   13f1c:	bne	13f08 <close_stdin@@Base+0xb6c>
   13f20:	cmp	r9, sl
   13f24:	movcs	r0, r9
   13f28:	ldrcc	r1, [sp, #40]	; 0x28
   13f2c:	movcc	r3, #0
   13f30:	movcc	r0, r9
   13f34:	strbcc	r3, [r1, r9]
   13f38:	b	13fb4 <close_stdin@@Base+0xc18>
   13f3c:	cmn	r8, #1
   13f40:	beq	14608 <close_stdin@@Base+0x126c>
   13f44:	subs	r3, r8, #1
   13f48:	movne	r3, #1
   13f4c:	cmp	r3, #0
   13f50:	bne	13e30 <close_stdin@@Base+0xa94>
   13f54:	cmp	fp, #0
   13f58:	bne	13e30 <close_stdin@@Base+0xa94>
   13f5c:	ldr	r3, [sp, #36]	; 0x24
   13f60:	ldr	r0, [sp, #160]	; 0xa0
   13f64:	cmp	r0, #2
   13f68:	movne	r3, #0
   13f6c:	andeq	r3, r3, #1
   13f70:	cmp	r3, #0
   13f74:	beq	13e30 <close_stdin@@Base+0xa94>
   13f78:	ldr	r2, [sp, #164]	; 0xa4
   13f7c:	mov	ip, #0
   13f80:	ldr	r0, [sp, #160]	; 0xa0
   13f84:	bic	r3, r2, #2
   13f88:	ldr	r1, [sp, #72]	; 0x48
   13f8c:	ldr	r2, [sp, #68]	; 0x44
   13f90:	stm	sp, {r0, r3}
   13f94:	mov	r3, r8
   13f98:	str	r1, [sp, #12]
   13f9c:	mov	r1, sl
   13fa0:	str	r2, [sp, #16]
   13fa4:	ldr	r0, [sp, #40]	; 0x28
   13fa8:	ldr	r2, [sp, #32]
   13fac:	str	ip, [sp, #8]
   13fb0:	bl	13a48 <close_stdin@@Base+0x6ac>
   13fb4:	ldr	r1, [sp, #56]	; 0x38
   13fb8:	ldr	r2, [sp, #116]	; 0x74
   13fbc:	ldr	r3, [r1]
   13fc0:	cmp	r2, r3
   13fc4:	bne	146f8 <close_stdin@@Base+0x135c>
   13fc8:	add	sp, sp, #124	; 0x7c
   13fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fd0:	mov	r3, #114	; 0x72
   13fd4:	ldr	r2, [sp, #36]	; 0x24
   13fd8:	ldr	r0, [sp, #160]	; 0xa0
   13fdc:	cmp	r0, #2
   13fe0:	movne	r2, #0
   13fe4:	andeq	r2, r2, #1
   13fe8:	cmp	r2, #0
   13fec:	bne	13f78 <close_stdin@@Base+0xbdc>
   13ff0:	ldr	r1, [sp, #24]
   13ff4:	cmp	r1, #0
   13ff8:	beq	13e30 <close_stdin@@Base+0xa94>
   13ffc:	mov	r4, r3
   14000:	b	13e68 <close_stdin@@Base+0xacc>
   14004:	mov	r3, #98	; 0x62
   14008:	b	13ff0 <close_stdin@@Base+0xc54>
   1400c:	mov	r3, #102	; 0x66
   14010:	b	13ff0 <close_stdin@@Base+0xc54>
   14014:	mov	r3, #118	; 0x76
   14018:	b	13ff0 <close_stdin@@Base+0xc54>
   1401c:	mov	r3, #97	; 0x61
   14020:	b	13ff0 <close_stdin@@Base+0xc54>
   14024:	mov	r3, #110	; 0x6e
   14028:	b	13fd4 <close_stdin@@Base+0xc38>
   1402c:	mov	r3, #116	; 0x74
   14030:	b	13fd4 <close_stdin@@Base+0xc38>
   14034:	ldr	r2, [sp, #24]
   14038:	cmp	r2, #0
   1403c:	beq	145e4 <close_stdin@@Base+0x1248>
   14040:	ldr	r3, [sp, #36]	; 0x24
   14044:	cmp	r3, #0
   14048:	bne	13f78 <close_stdin@@Base+0xbdc>
   1404c:	cmp	r9, sl
   14050:	add	r2, r9, #1
   14054:	ldrcc	r0, [sp, #40]	; 0x28
   14058:	movcc	r3, #92	; 0x5c
   1405c:	strbcc	r3, [r0, r9]
   14060:	add	r3, fp, #1
   14064:	cmp	r8, r3
   14068:	bls	140a8 <close_stdin@@Base+0xd0c>
   1406c:	ldr	r1, [sp, #32]
   14070:	ldrb	r3, [r1, r3]
   14074:	sub	r3, r3, #48	; 0x30
   14078:	cmp	r3, #9
   1407c:	bhi	140a8 <close_stdin@@Base+0xd0c>
   14080:	cmp	sl, r2
   14084:	ldrhi	r0, [sp, #40]	; 0x28
   14088:	movhi	r3, #48	; 0x30
   1408c:	strbhi	r3, [r0, r2]
   14090:	add	r3, r9, #2
   14094:	cmp	sl, r3
   14098:	ldrhi	r1, [sp, #40]	; 0x28
   1409c:	movhi	r2, #48	; 0x30
   140a0:	strbhi	r2, [r1, r3]
   140a4:	add	r2, r9, #3
   140a8:	mov	r9, r2
   140ac:	mov	r4, #48	; 0x30
   140b0:	b	13e3c <close_stdin@@Base+0xaa0>
   140b4:	ldr	r1, [sp, #76]	; 0x4c
   140b8:	cmp	r1, #0
   140bc:	beq	140c8 <close_stdin@@Base+0xd2c>
   140c0:	cmp	r7, #0
   140c4:	bne	13e88 <close_stdin@@Base+0xaec>
   140c8:	mov	r3, r4
   140cc:	b	13fd4 <close_stdin@@Base+0xc38>
   140d0:	ldr	r1, [sp, #160]	; 0xa0
   140d4:	cmp	r1, #2
   140d8:	bne	13e30 <close_stdin@@Base+0xa94>
   140dc:	ldr	r2, [sp, #36]	; 0x24
   140e0:	cmp	r2, #0
   140e4:	bne	13f78 <close_stdin@@Base+0xbdc>
   140e8:	cmp	r9, sl
   140ec:	ldrcc	r0, [sp, #40]	; 0x28
   140f0:	movcc	r3, #39	; 0x27
   140f4:	strbcc	r3, [r0, r9]
   140f8:	add	r3, r9, #1
   140fc:	cmp	sl, r3
   14100:	ldrhi	r1, [sp, #40]	; 0x28
   14104:	movhi	r2, #92	; 0x5c
   14108:	strbhi	r2, [r1, r3]
   1410c:	add	r3, r9, #2
   14110:	cmp	sl, r3
   14114:	add	r9, r9, #3
   14118:	ldrhi	r0, [sp, #40]	; 0x28
   1411c:	movhi	r2, #39	; 0x27
   14120:	strbhi	r2, [r0, r3]
   14124:	b	13e30 <close_stdin@@Base+0xa94>
   14128:	ldr	r1, [sp, #64]	; 0x40
   1412c:	cmp	r1, #1
   14130:	bne	14428 <close_stdin@@Base+0x108c>
   14134:	bl	114ec <__ctype_b_loc@plt>
   14138:	ldr	r2, [sp, #64]	; 0x40
   1413c:	sxth	r3, r4
   14140:	str	r2, [sp, #60]	; 0x3c
   14144:	lsl	r3, r3, #1
   14148:	ldr	r2, [r0]
   1414c:	ldrh	r2, [r2, r3]
   14150:	eor	r2, r2, #16384	; 0x4000
   14154:	ubfx	r2, r2, #14, #1
   14158:	ldr	r1, [sp, #24]
   1415c:	ands	r2, r2, r1
   14160:	beq	13e30 <close_stdin@@Base+0xa94>
   14164:	ldr	r3, [sp, #60]	; 0x3c
   14168:	mov	r0, #92	; 0x5c
   1416c:	ldr	r7, [sp, #36]	; 0x24
   14170:	add	r1, r3, fp
   14174:	str	r8, [sp, #60]	; 0x3c
   14178:	ldr	r3, [sp, #40]	; 0x28
   1417c:	b	141e0 <close_stdin@@Base+0xe44>
   14180:	cmp	r7, #0
   14184:	bne	14620 <close_stdin@@Base+0x1284>
   14188:	add	ip, r9, #1
   1418c:	cmp	r9, sl
   14190:	strbcc	r0, [r3, r9]
   14194:	cmp	sl, ip
   14198:	lsrhi	r8, r4, #6
   1419c:	addhi	r8, r8, #48	; 0x30
   141a0:	strbhi	r8, [r3, ip]
   141a4:	add	ip, r9, #2
   141a8:	add	r9, r9, #3
   141ac:	cmp	sl, ip
   141b0:	ubfxhi	r8, r4, #3, #3
   141b4:	and	r4, r4, #7
   141b8:	add	r4, r4, #48	; 0x30
   141bc:	addhi	r8, r8, #48	; 0x30
   141c0:	strbhi	r8, [r3, ip]
   141c4:	add	fp, fp, #1
   141c8:	cmp	r1, fp
   141cc:	bls	1420c <close_stdin@@Base+0xe70>
   141d0:	cmp	r9, sl
   141d4:	strbcc	r4, [r3, r9]
   141d8:	ldrb	r4, [r5, #1]!
   141dc:	add	r9, r9, #1
   141e0:	cmp	r2, #0
   141e4:	bne	14180 <close_stdin@@Base+0xde4>
   141e8:	cmp	r6, #0
   141ec:	beq	141c4 <close_stdin@@Base+0xe28>
   141f0:	add	fp, fp, #1
   141f4:	cmp	r9, sl
   141f8:	strbcc	r0, [r3, r9]
   141fc:	cmp	r1, fp
   14200:	add	r9, r9, #1
   14204:	mov	r6, #0
   14208:	bhi	141d0 <close_stdin@@Base+0xe34>
   1420c:	ldr	r8, [sp, #60]	; 0x3c
   14210:	b	13e8c <close_stdin@@Base+0xaf0>
   14214:	ldr	r3, [sp, #36]	; 0x24
   14218:	cmp	r3, #0
   1421c:	bne	14720 <close_stdin@@Base+0x1384>
   14220:	cmp	sl, #0
   14224:	beq	14638 <close_stdin@@Base+0x129c>
   14228:	ldr	r1, [sp, #40]	; 0x28
   1422c:	mov	r0, #1
   14230:	ldr	r2, [pc, #1296]	; 14748 <close_stdin@@Base+0x13ac>
   14234:	mov	r3, #34	; 0x22
   14238:	str	r0, [sp, #24]
   1423c:	mov	r9, r0
   14240:	add	r2, pc, r2
   14244:	str	r0, [sp, #28]
   14248:	strb	r3, [r1]
   1424c:	str	r2, [sp, #52]	; 0x34
   14250:	b	13afc <close_stdin@@Base+0x760>
   14254:	ldr	r3, [pc, #1264]	; 1474c <close_stdin@@Base+0x13b0>
   14258:	mov	r2, #1
   1425c:	mov	r0, #3
   14260:	str	r2, [sp, #36]	; 0x24
   14264:	add	r3, pc, r3
   14268:	str	r2, [sp, #24]
   1426c:	str	r3, [sp, #52]	; 0x34
   14270:	mov	r9, #0
   14274:	str	r2, [sp, #28]
   14278:	str	r0, [sp, #160]	; 0xa0
   1427c:	b	13afc <close_stdin@@Base+0x760>
   14280:	mov	r0, #0
   14284:	mov	r1, #1
   14288:	str	r0, [sp, #36]	; 0x24
   1428c:	mov	r9, r0
   14290:	str	r1, [sp, #24]
   14294:	str	r0, [sp, #28]
   14298:	str	r0, [sp, #52]	; 0x34
   1429c:	b	13afc <close_stdin@@Base+0x760>
   142a0:	ldr	r3, [sp, #160]	; 0xa0
   142a4:	cmp	r3, #8
   142a8:	beq	142d4 <close_stdin@@Base+0xf38>
   142ac:	ldr	r0, [pc, #1180]	; 14750 <close_stdin@@Base+0x13b4>
   142b0:	mov	r1, r3
   142b4:	add	r0, pc, r0
   142b8:	bl	138e4 <close_stdin@@Base+0x548>
   142bc:	ldr	r1, [sp, #160]	; 0xa0
   142c0:	str	r0, [sp, #72]	; 0x48
   142c4:	ldr	r0, [pc, #1160]	; 14754 <close_stdin@@Base+0x13b8>
   142c8:	add	r0, pc, r0
   142cc:	bl	138e4 <close_stdin@@Base+0x548>
   142d0:	str	r0, [sp, #68]	; 0x44
   142d4:	ldr	r0, [sp, #36]	; 0x24
   142d8:	cmp	r0, #0
   142dc:	movne	r9, #0
   142e0:	bne	14318 <close_stdin@@Base+0xf7c>
   142e4:	ldr	r1, [sp, #72]	; 0x48
   142e8:	ldrb	r3, [r1]
   142ec:	cmp	r3, #0
   142f0:	beq	146f0 <close_stdin@@Base+0x1354>
   142f4:	mov	r2, r1
   142f8:	ldr	r1, [sp, #40]	; 0x28
   142fc:	mov	r9, r0
   14300:	cmp	r9, sl
   14304:	strbcc	r3, [r1, r9]
   14308:	ldrb	r3, [r2, #1]!
   1430c:	add	r9, r9, #1
   14310:	cmp	r3, #0
   14314:	bne	14300 <close_stdin@@Base+0xf64>
   14318:	ldr	r0, [sp, #68]	; 0x44
   1431c:	str	r0, [sp, #52]	; 0x34
   14320:	bl	11504 <strlen@plt>
   14324:	mov	r2, #1
   14328:	str	r2, [sp, #24]
   1432c:	str	r0, [sp, #28]
   14330:	b	13afc <close_stdin@@Base+0x760>
   14334:	ldr	r3, [pc, #1052]	; 14758 <close_stdin@@Base+0x13bc>
   14338:	mov	r2, #0
   1433c:	mov	r1, #1
   14340:	mov	r0, #2
   14344:	add	r3, pc, r3
   14348:	str	r1, [sp, #36]	; 0x24
   1434c:	str	r2, [sp, #24]
   14350:	mov	r9, r2
   14354:	str	r1, [sp, #28]
   14358:	str	r3, [sp, #52]	; 0x34
   1435c:	str	r0, [sp, #160]	; 0xa0
   14360:	b	13afc <close_stdin@@Base+0x760>
   14364:	ldr	r3, [sp, #36]	; 0x24
   14368:	cmp	r3, #0
   1436c:	bne	146fc <close_stdin@@Base+0x1360>
   14370:	cmp	sl, #0
   14374:	beq	14658 <close_stdin@@Base+0x12bc>
   14378:	ldr	r1, [sp, #40]	; 0x28
   1437c:	mov	r3, #39	; 0x27
   14380:	ldr	r2, [sp, #36]	; 0x24
   14384:	mov	r0, #1
   14388:	mov	r9, r0
   1438c:	str	r0, [sp, #28]
   14390:	strb	r3, [r1]
   14394:	ldr	r3, [pc, #960]	; 1475c <close_stdin@@Base+0x13c0>
   14398:	str	r2, [sp, #24]
   1439c:	add	r3, pc, r3
   143a0:	str	r3, [sp, #52]	; 0x34
   143a4:	b	13afc <close_stdin@@Base+0x760>
   143a8:	ldr	r2, [sp, #28]
   143ac:	cmp	r2, #1
   143b0:	add	r4, fp, r2
   143b4:	movls	r3, #0
   143b8:	movhi	r3, #1
   143bc:	cmn	r8, #1
   143c0:	movne	r3, #0
   143c4:	cmp	r3, #0
   143c8:	beq	143d8 <close_stdin@@Base+0x103c>
   143cc:	ldr	r0, [sp, #32]
   143d0:	bl	11504 <strlen@plt>
   143d4:	mov	r8, r0
   143d8:	cmp	r8, r4
   143dc:	ldrcc	r3, [sp, #32]
   143e0:	movcc	r6, #0
   143e4:	addcc	r5, r3, fp
   143e8:	bcc	13b58 <close_stdin@@Base+0x7bc>
   143ec:	ldr	r0, [sp, #32]
   143f0:	ldr	r1, [sp, #52]	; 0x34
   143f4:	add	r5, r0, fp
   143f8:	ldr	r2, [sp, #28]
   143fc:	mov	r0, r5
   14400:	bl	113d8 <memcmp@plt>
   14404:	cmp	r0, #0
   14408:	bne	14420 <close_stdin@@Base+0x1084>
   1440c:	ldr	r1, [sp, #36]	; 0x24
   14410:	cmp	r1, #0
   14414:	bne	13f78 <close_stdin@@Base+0xbdc>
   14418:	mov	r6, #1
   1441c:	b	13b58 <close_stdin@@Base+0x7bc>
   14420:	mov	r6, #0
   14424:	b	13b58 <close_stdin@@Base+0x7bc>
   14428:	add	r7, sp, #108	; 0x6c
   1442c:	cmn	r8, #1
   14430:	mov	r3, #0
   14434:	str	r3, [sp, #108]	; 0x6c
   14438:	str	r3, [r7, #4]
   1443c:	beq	14628 <close_stdin@@Base+0x128c>
   14440:	mov	r1, #0
   14444:	ldr	r0, [sp, #32]
   14448:	mov	ip, #1
   1444c:	str	r9, [sp, #88]	; 0x58
   14450:	str	r6, [sp, #96]	; 0x60
   14454:	mov	r9, r1
   14458:	str	r5, [sp, #100]	; 0x64
   1445c:	mov	r6, ip
   14460:	mov	r5, r7
   14464:	add	r3, sp, #104	; 0x68
   14468:	sub	r0, r0, #1
   1446c:	str	r3, [sp, #80]	; 0x50
   14470:	str	r0, [sp, #84]	; 0x54
   14474:	str	r1, [sp, #60]	; 0x3c
   14478:	str	r4, [sp, #92]	; 0x5c
   1447c:	ldr	r2, [sp, #32]
   14480:	add	r7, r9, fp
   14484:	add	r0, sp, #104	; 0x68
   14488:	mov	r3, r5
   1448c:	add	r4, r2, r7
   14490:	rsb	r2, r7, r8
   14494:	mov	r1, r4
   14498:	bl	11480 <mbrtowc@plt>
   1449c:	subs	r2, r0, #0
   144a0:	beq	145ac <close_stdin@@Base+0x1210>
   144a4:	cmn	r2, #1
   144a8:	beq	146d4 <close_stdin@@Base+0x1338>
   144ac:	cmn	r2, #2
   144b0:	beq	14678 <close_stdin@@Base+0x12dc>
   144b4:	ldr	r3, [sp, #36]	; 0x24
   144b8:	ldr	r0, [sp, #160]	; 0xa0
   144bc:	cmp	r0, #2
   144c0:	movne	r3, #0
   144c4:	andeq	r3, r3, #1
   144c8:	cmp	r3, #0
   144cc:	beq	14588 <close_stdin@@Base+0x11ec>
   144d0:	cmp	r2, #1
   144d4:	beq	14588 <close_stdin@@Base+0x11ec>
   144d8:	ldr	r1, [sp, #84]	; 0x54
   144dc:	add	r3, r1, r2
   144e0:	add	r7, r3, r7
   144e4:	ldrb	r3, [r4, #1]!
   144e8:	sub	r3, r3, #91	; 0x5b
   144ec:	cmp	r3, #33	; 0x21
   144f0:	addls	pc, pc, r3, lsl #2
   144f4:	b	14580 <close_stdin@@Base+0x11e4>
   144f8:	b	13f78 <close_stdin@@Base+0xbdc>
   144fc:	b	13f78 <close_stdin@@Base+0xbdc>
   14500:	b	14580 <close_stdin@@Base+0x11e4>
   14504:	b	13f78 <close_stdin@@Base+0xbdc>
   14508:	b	14580 <close_stdin@@Base+0x11e4>
   1450c:	b	13f78 <close_stdin@@Base+0xbdc>
   14510:	b	14580 <close_stdin@@Base+0x11e4>
   14514:	b	14580 <close_stdin@@Base+0x11e4>
   14518:	b	14580 <close_stdin@@Base+0x11e4>
   1451c:	b	14580 <close_stdin@@Base+0x11e4>
   14520:	b	14580 <close_stdin@@Base+0x11e4>
   14524:	b	14580 <close_stdin@@Base+0x11e4>
   14528:	b	14580 <close_stdin@@Base+0x11e4>
   1452c:	b	14580 <close_stdin@@Base+0x11e4>
   14530:	b	14580 <close_stdin@@Base+0x11e4>
   14534:	b	14580 <close_stdin@@Base+0x11e4>
   14538:	b	14580 <close_stdin@@Base+0x11e4>
   1453c:	b	14580 <close_stdin@@Base+0x11e4>
   14540:	b	14580 <close_stdin@@Base+0x11e4>
   14544:	b	14580 <close_stdin@@Base+0x11e4>
   14548:	b	14580 <close_stdin@@Base+0x11e4>
   1454c:	b	14580 <close_stdin@@Base+0x11e4>
   14550:	b	14580 <close_stdin@@Base+0x11e4>
   14554:	b	14580 <close_stdin@@Base+0x11e4>
   14558:	b	14580 <close_stdin@@Base+0x11e4>
   1455c:	b	14580 <close_stdin@@Base+0x11e4>
   14560:	b	14580 <close_stdin@@Base+0x11e4>
   14564:	b	14580 <close_stdin@@Base+0x11e4>
   14568:	b	14580 <close_stdin@@Base+0x11e4>
   1456c:	b	14580 <close_stdin@@Base+0x11e4>
   14570:	b	14580 <close_stdin@@Base+0x11e4>
   14574:	b	14580 <close_stdin@@Base+0x11e4>
   14578:	b	14580 <close_stdin@@Base+0x11e4>
   1457c:	b	13f78 <close_stdin@@Base+0xbdc>
   14580:	cmp	r4, r7
   14584:	bne	144e4 <close_stdin@@Base+0x1148>
   14588:	ldr	r0, [sp, #104]	; 0x68
   1458c:	add	r9, r9, r2
   14590:	bl	1142c <iswprint@plt>
   14594:	cmp	r0, #0
   14598:	mov	r0, r5
   1459c:	moveq	r6, #0
   145a0:	bl	113cc <mbsinit@plt>
   145a4:	cmp	r0, #0
   145a8:	beq	1447c <close_stdin@@Base+0x10e0>
   145ac:	mov	ip, r6
   145b0:	eor	r2, ip, #1
   145b4:	str	r9, [sp, #60]	; 0x3c
   145b8:	ldr	r4, [sp, #92]	; 0x5c
   145bc:	uxtb	r2, r2
   145c0:	ldr	r9, [sp, #88]	; 0x58
   145c4:	ldr	r6, [sp, #96]	; 0x60
   145c8:	ldr	r5, [sp, #100]	; 0x64
   145cc:	ldr	r3, [sp, #60]	; 0x3c
   145d0:	cmp	r3, #1
   145d4:	bls	14158 <close_stdin@@Base+0xdbc>
   145d8:	ldr	r0, [sp, #24]
   145dc:	and	r2, r2, r0
   145e0:	b	14164 <close_stdin@@Base+0xdc8>
   145e4:	ldr	r2, [sp, #164]	; 0xa4
   145e8:	tst	r2, #1
   145ec:	addne	fp, fp, #1
   145f0:	bne	13b20 <close_stdin@@Base+0x784>
   145f4:	b	13e30 <close_stdin@@Base+0xa94>
   145f8:	ldr	r0, [sp, #36]	; 0x24
   145fc:	cmp	r0, #0
   14600:	beq	13e30 <close_stdin@@Base+0xa94>
   14604:	b	13f78 <close_stdin@@Base+0xbdc>
   14608:	ldr	r2, [sp, #32]
   1460c:	ldrb	r3, [r2, #1]
   14610:	adds	r3, r3, #0
   14614:	movne	r3, #1
   14618:	b	13f4c <close_stdin@@Base+0xbb0>
   1461c:	bl	11654 <abort@plt>
   14620:	ldr	r8, [sp, #60]	; 0x3c
   14624:	b	13f78 <close_stdin@@Base+0xbdc>
   14628:	ldr	r0, [sp, #32]
   1462c:	bl	11504 <strlen@plt>
   14630:	mov	r8, r0
   14634:	b	14440 <close_stdin@@Base+0x10a4>
   14638:	ldr	r2, [pc, #288]	; 14760 <close_stdin@@Base+0x13c4>
   1463c:	mov	r1, #1
   14640:	mov	r9, r1
   14644:	str	r1, [sp, #24]
   14648:	add	r2, pc, r2
   1464c:	str	r1, [sp, #28]
   14650:	str	r2, [sp, #52]	; 0x34
   14654:	b	13afc <close_stdin@@Base+0x760>
   14658:	ldr	r2, [pc, #260]	; 14764 <close_stdin@@Base+0x13c8>
   1465c:	mov	r3, #1
   14660:	mov	r9, r3
   14664:	str	r3, [sp, #28]
   14668:	add	r2, pc, r2
   1466c:	str	sl, [sp, #24]
   14670:	str	r2, [sp, #52]	; 0x34
   14674:	b	13afc <close_stdin@@Base+0x760>
   14678:	cmp	r8, r7
   1467c:	str	r9, [sp, #60]	; 0x3c
   14680:	mov	ip, r4
   14684:	ldr	r6, [sp, #96]	; 0x60
   14688:	ldr	r9, [sp, #88]	; 0x58
   1468c:	ldr	r4, [sp, #92]	; 0x5c
   14690:	ldr	r5, [sp, #100]	; 0x64
   14694:	bls	146cc <close_stdin@@Base+0x1330>
   14698:	ldrb	r3, [ip]
   1469c:	cmp	r3, #0
   146a0:	beq	146cc <close_stdin@@Base+0x1330>
   146a4:	ldr	r3, [sp, #60]	; 0x3c
   146a8:	b	146b8 <close_stdin@@Base+0x131c>
   146ac:	ldrb	r2, [r5, r3]
   146b0:	cmp	r2, #0
   146b4:	beq	146c8 <close_stdin@@Base+0x132c>
   146b8:	add	r3, r3, #1
   146bc:	add	r2, fp, r3
   146c0:	cmp	r8, r2
   146c4:	bhi	146ac <close_stdin@@Base+0x1310>
   146c8:	str	r3, [sp, #60]	; 0x3c
   146cc:	mov	r2, #1
   146d0:	b	145cc <close_stdin@@Base+0x1230>
   146d4:	str	r9, [sp, #60]	; 0x3c
   146d8:	mov	r2, #1
   146dc:	ldr	r4, [sp, #92]	; 0x5c
   146e0:	ldr	r6, [sp, #96]	; 0x60
   146e4:	ldr	r9, [sp, #88]	; 0x58
   146e8:	ldr	r5, [sp, #100]	; 0x64
   146ec:	b	145cc <close_stdin@@Base+0x1230>
   146f0:	ldr	r9, [sp, #36]	; 0x24
   146f4:	b	14318 <close_stdin@@Base+0xf7c>
   146f8:	bl	113f0 <__stack_chk_fail@plt>
   146fc:	ldr	r1, [pc, #100]	; 14768 <close_stdin@@Base+0x13cc>
   14700:	mov	r3, #0
   14704:	mov	r0, #1
   14708:	str	r3, [sp, #24]
   1470c:	add	r1, pc, r1
   14710:	str	r0, [sp, #28]
   14714:	mov	r9, r3
   14718:	str	r1, [sp, #52]	; 0x34
   1471c:	b	13afc <close_stdin@@Base+0x760>
   14720:	ldr	r0, [pc, #68]	; 1476c <close_stdin@@Base+0x13d0>
   14724:	mov	r3, #1
   14728:	mov	r9, #0
   1472c:	str	r3, [sp, #24]
   14730:	add	r0, pc, r0
   14734:	str	r3, [sp, #28]
   14738:	str	r0, [sp, #52]	; 0x34
   1473c:	b	13afc <close_stdin@@Base+0x760>
   14740:	muleq	r1, r4, r5
   14744:	andeq	r0, r0, ip, lsr r1
   14748:	andeq	r7, r0, r8, lsr r1
   1474c:	andeq	r7, r0, r4, lsl r1
   14750:	ldrdeq	r7, [r0], -r0
   14754:	andeq	r7, r0, ip, lsr #1
   14758:	andeq	r7, r0, r0, lsr r0
   1475c:	ldrdeq	r6, [r0], -r8
   14760:	andeq	r6, r0, r0, lsr sp
   14764:	andeq	r6, r0, ip, lsl #26
   14768:	andeq	r6, r0, r8, ror #24
   1476c:	andeq	r6, r0, r8, asr #24
   14770:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14774:	sub	sp, sp, #44	; 0x2c
   14778:	mov	r6, r0
   1477c:	mov	r9, r1
   14780:	mov	sl, r2
   14784:	mov	r4, r3
   14788:	bl	11534 <__errno_location@plt>
   1478c:	ldr	fp, [pc, #412]	; 14930 <close_stdin@@Base+0x1594>
   14790:	cmp	r6, #0
   14794:	add	fp, pc, fp
   14798:	ldr	r5, [fp]
   1479c:	ldr	r1, [r0]
   147a0:	mov	r8, r0
   147a4:	str	r1, [sp, #36]	; 0x24
   147a8:	blt	14928 <close_stdin@@Base+0x158c>
   147ac:	ldr	r3, [pc, #384]	; 14934 <close_stdin@@Base+0x1598>
   147b0:	add	r3, pc, r3
   147b4:	ldr	r3, [r3]
   147b8:	cmp	r6, r3
   147bc:	bcc	14810 <close_stdin@@Base+0x1474>
   147c0:	add	r7, r6, #1
   147c4:	cmn	r7, #-536870911	; 0xe0000001
   147c8:	bhi	1492c <close_stdin@@Base+0x1590>
   147cc:	add	r3, fp, #4
   147d0:	cmp	r5, r3
   147d4:	beq	14900 <close_stdin@@Base+0x1564>
   147d8:	mov	r0, r5
   147dc:	lsl	r1, r7, #3
   147e0:	bl	156c4 <close_stdin@@Base+0x2328>
   147e4:	mov	r5, r0
   147e8:	str	r0, [fp]
   147ec:	ldr	fp, [pc, #324]	; 14938 <close_stdin@@Base+0x159c>
   147f0:	mov	r1, #0
   147f4:	add	fp, pc, fp
   147f8:	ldr	r0, [fp]
   147fc:	rsb	r2, r0, r7
   14800:	add	r0, r5, r0, lsl #3
   14804:	lsl	r2, r2, #3
   14808:	bl	1154c <memset@plt>
   1480c:	str	r7, [fp]
   14810:	add	r2, r4, #8
   14814:	str	r2, [sp, #32]
   14818:	ldr	r1, [r4]
   1481c:	add	fp, r5, r6, lsl #3
   14820:	ldr	lr, [sp, #32]
   14824:	mov	r2, r9
   14828:	ldr	r3, [r4, #4]
   1482c:	ldr	ip, [r5, r6, lsl #3]
   14830:	ldr	r7, [fp, #4]
   14834:	orr	r3, r3, #1
   14838:	str	r1, [sp]
   1483c:	str	r3, [sp, #4]
   14840:	mov	r1, ip
   14844:	str	lr, [sp, #8]
   14848:	mov	r0, r7
   1484c:	ldr	lr, [r4, #40]	; 0x28
   14850:	str	r3, [sp, #28]
   14854:	mov	r3, sl
   14858:	str	lr, [sp, #12]
   1485c:	ldr	lr, [r4, #44]	; 0x2c
   14860:	str	ip, [sp, #24]
   14864:	str	lr, [sp, #16]
   14868:	bl	13a48 <close_stdin@@Base+0x6ac>
   1486c:	ldr	ip, [sp, #24]
   14870:	cmp	ip, r0
   14874:	bhi	148ec <close_stdin@@Base+0x1550>
   14878:	ldr	r3, [pc, #188]	; 1493c <close_stdin@@Base+0x15a0>
   1487c:	add	r1, r0, #1
   14880:	str	r1, [r5, r6, lsl #3]
   14884:	add	r3, pc, r3
   14888:	cmp	r7, r3
   1488c:	beq	148a0 <close_stdin@@Base+0x1504>
   14890:	mov	r0, r7
   14894:	str	r1, [sp, #24]
   14898:	bl	1139c <free@plt>
   1489c:	ldr	r1, [sp, #24]
   148a0:	mov	r0, r1
   148a4:	str	r1, [sp, #24]
   148a8:	bl	1566c <close_stdin@@Base+0x22d0>
   148ac:	ldr	r3, [sp, #28]
   148b0:	ldr	lr, [sp, #32]
   148b4:	mov	r2, r9
   148b8:	str	r0, [fp, #4]
   148bc:	mov	r7, r0
   148c0:	ldr	ip, [r4]
   148c4:	str	r3, [sp, #4]
   148c8:	mov	r3, sl
   148cc:	str	lr, [sp, #8]
   148d0:	str	ip, [sp]
   148d4:	ldr	ip, [r4, #40]	; 0x28
   148d8:	ldr	r1, [sp, #24]
   148dc:	str	ip, [sp, #12]
   148e0:	ldr	ip, [r4, #44]	; 0x2c
   148e4:	str	ip, [sp, #16]
   148e8:	bl	13a48 <close_stdin@@Base+0x6ac>
   148ec:	ldr	r1, [sp, #36]	; 0x24
   148f0:	mov	r0, r7
   148f4:	str	r1, [r8]
   148f8:	add	sp, sp, #44	; 0x2c
   148fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14900:	lsl	r1, r7, #3
   14904:	mov	r0, #0
   14908:	str	r3, [sp, #24]
   1490c:	bl	156c4 <close_stdin@@Base+0x2328>
   14910:	ldr	r3, [sp, #24]
   14914:	mov	r5, r0
   14918:	ldm	r3, {r0, r1}
   1491c:	str	r5, [fp]
   14920:	stm	r5, {r0, r1}
   14924:	b	147ec <close_stdin@@Base+0x1450>
   14928:	bl	11654 <abort@plt>
   1492c:	bl	15880 <close_stdin@@Base+0x24e4>
   14930:	andeq	r7, r1, r4, lsr #20
   14934:	ldrdeq	r7, [r1], -r4
   14938:	muleq	r1, r0, r9
   1493c:	andeq	r7, r1, ip, ror #18
   14940:	push	{r4, r5, r6, lr}
   14944:	mov	r5, r0
   14948:	bl	11534 <__errno_location@plt>
   1494c:	cmp	r5, #0
   14950:	mov	r1, #48	; 0x30
   14954:	mov	r4, r0
   14958:	ldr	r0, [pc, #24]	; 14978 <close_stdin@@Base+0x15dc>
   1495c:	ldr	r6, [r4]
   14960:	add	r0, pc, r0
   14964:	add	r0, r0, #256	; 0x100
   14968:	movne	r0, r5
   1496c:	bl	15840 <close_stdin@@Base+0x24a4>
   14970:	str	r6, [r4]
   14974:	pop	{r4, r5, r6, pc}
   14978:	muleq	r1, r0, r8
   1497c:	cmp	r0, #0
   14980:	beq	1498c <close_stdin@@Base+0x15f0>
   14984:	ldr	r0, [r0]
   14988:	bx	lr
   1498c:	ldr	r0, [pc, #12]	; 149a0 <close_stdin@@Base+0x1604>
   14990:	add	r0, pc, r0
   14994:	add	r0, r0, #256	; 0x100
   14998:	ldr	r0, [r0]
   1499c:	bx	lr
   149a0:	andeq	r7, r1, r0, ror #16
   149a4:	cmp	r0, #0
   149a8:	beq	149b4 <close_stdin@@Base+0x1618>
   149ac:	str	r1, [r0]
   149b0:	bx	lr
   149b4:	ldr	r0, [pc, #12]	; 149c8 <close_stdin@@Base+0x162c>
   149b8:	add	r0, pc, r0
   149bc:	add	r0, r0, #256	; 0x100
   149c0:	str	r1, [r0]
   149c4:	bx	lr
   149c8:	andeq	r7, r1, r8, lsr r8
   149cc:	cmp	r0, #0
   149d0:	movne	r3, r0
   149d4:	beq	14a04 <close_stdin@@Base+0x1668>
   149d8:	lsr	ip, r1, #5
   149dc:	and	r1, r1, #31
   149e0:	add	r3, r3, ip, lsl #2
   149e4:	ldr	ip, [r3, #8]
   149e8:	lsr	r0, ip, r1
   149ec:	eor	r2, r0, r2
   149f0:	and	r0, r0, #1
   149f4:	and	r2, r2, #1
   149f8:	eor	ip, ip, r2, lsl r1
   149fc:	str	ip, [r3, #8]
   14a00:	bx	lr
   14a04:	ldr	r3, [pc, #8]	; 14a14 <close_stdin@@Base+0x1678>
   14a08:	add	r3, pc, r3
   14a0c:	add	r3, r3, #256	; 0x100
   14a10:	b	149d8 <close_stdin@@Base+0x163c>
   14a14:	andeq	r7, r1, r8, ror #15
   14a18:	subs	r3, r0, #0
   14a1c:	beq	14a2c <close_stdin@@Base+0x1690>
   14a20:	ldr	r0, [r3, #4]
   14a24:	str	r1, [r3, #4]
   14a28:	bx	lr
   14a2c:	ldr	r3, [pc, #8]	; 14a3c <close_stdin@@Base+0x16a0>
   14a30:	add	r3, pc, r3
   14a34:	add	r3, r3, #256	; 0x100
   14a38:	b	14a20 <close_stdin@@Base+0x1684>
   14a3c:	andeq	r7, r1, r0, asr #15
   14a40:	cmp	r0, #0
   14a44:	push	{r3, lr}
   14a48:	beq	14a6c <close_stdin@@Base+0x16d0>
   14a4c:	cmp	r2, #0
   14a50:	cmpne	r1, #0
   14a54:	mov	r3, #8
   14a58:	strne	r1, [r0, #40]	; 0x28
   14a5c:	str	r3, [r0]
   14a60:	strne	r2, [r0, #44]	; 0x2c
   14a64:	popne	{r3, pc}
   14a68:	bl	11654 <abort@plt>
   14a6c:	ldr	r0, [pc, #8]	; 14a7c <close_stdin@@Base+0x16e0>
   14a70:	add	r0, pc, r0
   14a74:	add	r0, r0, #256	; 0x100
   14a78:	b	14a4c <close_stdin@@Base+0x16b0>
   14a7c:	andeq	r7, r1, r0, lsl #15
   14a80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a84:	sub	sp, sp, #24
   14a88:	mov	r7, r0
   14a8c:	mov	sl, r1
   14a90:	ldr	r4, [sp, #56]	; 0x38
   14a94:	mov	r9, r2
   14a98:	mov	r8, r3
   14a9c:	cmp	r4, #0
   14aa0:	beq	14af4 <close_stdin@@Base+0x1758>
   14aa4:	bl	11534 <__errno_location@plt>
   14aa8:	ldr	r3, [r4]
   14aac:	add	lr, r4, #8
   14ab0:	mov	r1, sl
   14ab4:	mov	r2, r9
   14ab8:	ldr	r6, [r0]
   14abc:	mov	r5, r0
   14ac0:	str	r3, [sp]
   14ac4:	mov	r0, r7
   14ac8:	ldr	ip, [r4, #4]
   14acc:	mov	r3, r8
   14ad0:	stmib	sp, {ip, lr}
   14ad4:	ldr	ip, [r4, #40]	; 0x28
   14ad8:	str	ip, [sp, #12]
   14adc:	ldr	ip, [r4, #44]	; 0x2c
   14ae0:	str	ip, [sp, #16]
   14ae4:	bl	13a48 <close_stdin@@Base+0x6ac>
   14ae8:	str	r6, [r5]
   14aec:	add	sp, sp, #24
   14af0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14af4:	ldr	r4, [pc, #8]	; 14b04 <close_stdin@@Base+0x1768>
   14af8:	add	r4, pc, r4
   14afc:	add	r4, r4, #256	; 0x100
   14b00:	b	14aa4 <close_stdin@@Base+0x1708>
   14b04:	strdeq	r7, [r1], -r8
   14b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b0c:	subs	r4, r3, #0
   14b10:	sub	sp, sp, #36	; 0x24
   14b14:	mov	r7, r0
   14b18:	mov	r6, r1
   14b1c:	mov	r5, r2
   14b20:	beq	14bdc <close_stdin@@Base+0x1840>
   14b24:	bl	11534 <__errno_location@plt>
   14b28:	ldr	r3, [r4]
   14b2c:	ldr	sl, [r4, #4]
   14b30:	add	r9, r4, #8
   14b34:	mov	r8, r0
   14b38:	mov	r0, #0
   14b3c:	ldr	r2, [r8]
   14b40:	cmp	r5, r0
   14b44:	orreq	sl, sl, #1
   14b48:	str	r9, [sp, #8]
   14b4c:	mov	r1, r0
   14b50:	stm	sp, {r3, sl}
   14b54:	mov	r3, r6
   14b58:	ldr	ip, [r4, #40]	; 0x28
   14b5c:	str	r2, [sp, #28]
   14b60:	mov	r2, r7
   14b64:	str	ip, [sp, #12]
   14b68:	ldr	ip, [r4, #44]	; 0x2c
   14b6c:	str	ip, [sp, #16]
   14b70:	bl	13a48 <close_stdin@@Base+0x6ac>
   14b74:	add	r1, r0, #1
   14b78:	mov	fp, r0
   14b7c:	str	r1, [sp, #24]
   14b80:	mov	r0, r1
   14b84:	bl	1566c <close_stdin@@Base+0x22d0>
   14b88:	ldr	lr, [r4]
   14b8c:	str	sl, [sp, #4]
   14b90:	mov	r3, r6
   14b94:	str	r9, [sp, #8]
   14b98:	mov	r2, r7
   14b9c:	str	lr, [sp]
   14ba0:	ldr	lr, [r4, #40]	; 0x28
   14ba4:	ldr	r1, [sp, #24]
   14ba8:	str	lr, [sp, #12]
   14bac:	ldr	lr, [r4, #44]	; 0x2c
   14bb0:	str	lr, [sp, #16]
   14bb4:	str	r0, [sp, #24]
   14bb8:	bl	13a48 <close_stdin@@Base+0x6ac>
   14bbc:	ldr	r3, [sp, #28]
   14bc0:	cmp	r5, #0
   14bc4:	str	r3, [r8]
   14bc8:	ldr	ip, [sp, #24]
   14bcc:	strne	fp, [r5]
   14bd0:	mov	r0, ip
   14bd4:	add	sp, sp, #36	; 0x24
   14bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bdc:	ldr	r4, [pc, #8]	; 14bec <close_stdin@@Base+0x1850>
   14be0:	add	r4, pc, r4
   14be4:	add	r4, r4, #256	; 0x100
   14be8:	b	14b24 <close_stdin@@Base+0x1788>
   14bec:	andeq	r7, r1, r0, lsl r6
   14bf0:	mov	r3, r2
   14bf4:	mov	r2, #0
   14bf8:	b	14b08 <close_stdin@@Base+0x176c>
   14bfc:	ldr	r2, [pc, #152]	; 14c9c <close_stdin@@Base+0x1900>
   14c00:	push	{r3, r4, r5, r6, r7, lr}
   14c04:	add	r2, pc, r2
   14c08:	ldr	r3, [pc, #144]	; 14ca0 <close_stdin@@Base+0x1904>
   14c0c:	ldr	r6, [r2]
   14c10:	add	r3, pc, r3
   14c14:	cmp	r6, #1
   14c18:	ldr	r7, [r3]
   14c1c:	movhi	r4, #1
   14c20:	movhi	r5, r7
   14c24:	bls	14c40 <close_stdin@@Base+0x18a4>
   14c28:	ldr	r0, [r5, #12]
   14c2c:	add	r4, r4, #1
   14c30:	bl	1139c <free@plt>
   14c34:	cmp	r4, r6
   14c38:	add	r5, r5, #8
   14c3c:	bne	14c28 <close_stdin@@Base+0x188c>
   14c40:	ldr	r4, [pc, #92]	; 14ca4 <close_stdin@@Base+0x1908>
   14c44:	ldr	r0, [r7, #4]
   14c48:	add	r4, pc, r4
   14c4c:	cmp	r0, r4
   14c50:	beq	14c68 <close_stdin@@Base+0x18cc>
   14c54:	bl	1139c <free@plt>
   14c58:	ldr	r3, [pc, #72]	; 14ca8 <close_stdin@@Base+0x190c>
   14c5c:	mov	r2, #256	; 0x100
   14c60:	add	r3, pc, r3
   14c64:	stmib	r3, {r2, r4}
   14c68:	ldr	r4, [pc, #60]	; 14cac <close_stdin@@Base+0x1910>
   14c6c:	add	r4, pc, r4
   14c70:	add	r5, r4, #4
   14c74:	cmp	r7, r5
   14c78:	beq	14c88 <close_stdin@@Base+0x18ec>
   14c7c:	mov	r0, r7
   14c80:	bl	1139c <free@plt>
   14c84:	str	r5, [r4]
   14c88:	ldr	r3, [pc, #32]	; 14cb0 <close_stdin@@Base+0x1914>
   14c8c:	mov	r2, #1
   14c90:	add	r3, pc, r3
   14c94:	str	r2, [r3]
   14c98:	pop	{r3, r4, r5, r6, r7, pc}
   14c9c:	andeq	r7, r1, r0, lsl #11
   14ca0:	andeq	r7, r1, r8, lsr #11
   14ca4:	andeq	r7, r1, r8, lsr #11
   14ca8:	andeq	r7, r1, r8, asr r5
   14cac:	andeq	r7, r1, ip, asr #10
   14cb0:	strdeq	r7, [r1], -r4
   14cb4:	ldr	r3, [pc, #12]	; 14cc8 <close_stdin@@Base+0x192c>
   14cb8:	mvn	r2, #0
   14cbc:	add	r3, pc, r3
   14cc0:	add	r3, r3, #256	; 0x100
   14cc4:	b	14770 <close_stdin@@Base+0x13d4>
   14cc8:	andeq	r7, r1, r4, lsr r5
   14ccc:	ldr	r3, [pc, #8]	; 14cdc <close_stdin@@Base+0x1940>
   14cd0:	add	r3, pc, r3
   14cd4:	add	r3, r3, #256	; 0x100
   14cd8:	b	14770 <close_stdin@@Base+0x13d4>
   14cdc:	andeq	r7, r1, r0, lsr #10
   14ce0:	mov	r1, r0
   14ce4:	mov	r0, #0
   14ce8:	b	14cb4 <close_stdin@@Base+0x1918>
   14cec:	mov	r2, r1
   14cf0:	mov	r1, r0
   14cf4:	mov	r0, #0
   14cf8:	b	14ccc <close_stdin@@Base+0x1930>
   14cfc:	ldr	r3, [pc, #92]	; 14d60 <close_stdin@@Base+0x19c4>
   14d00:	ldr	ip, [pc, #92]	; 14d64 <close_stdin@@Base+0x19c8>
   14d04:	add	r3, pc, r3
   14d08:	push	{r4, r5, r6, r7, lr}
   14d0c:	sub	sp, sp, #60	; 0x3c
   14d10:	ldr	r4, [r3, ip]
   14d14:	add	r5, sp, #4
   14d18:	mov	r7, r2
   14d1c:	mov	r6, r0
   14d20:	mov	r0, r5
   14d24:	ldr	r3, [r4]
   14d28:	str	r3, [sp, #52]	; 0x34
   14d2c:	bl	13890 <close_stdin@@Base+0x4f4>
   14d30:	mov	r3, r5
   14d34:	mvn	r2, #0
   14d38:	mov	r0, r6
   14d3c:	mov	r1, r7
   14d40:	bl	14770 <close_stdin@@Base+0x13d4>
   14d44:	ldr	r2, [sp, #52]	; 0x34
   14d48:	ldr	r3, [r4]
   14d4c:	cmp	r2, r3
   14d50:	bne	14d5c <close_stdin@@Base+0x19c0>
   14d54:	add	sp, sp, #60	; 0x3c
   14d58:	pop	{r4, r5, r6, r7, pc}
   14d5c:	bl	113f0 <__stack_chk_fail@plt>
   14d60:	strdeq	r7, [r1], -r4
   14d64:	andeq	r0, r0, ip, lsr r1
   14d68:	ldr	ip, [pc, #96]	; 14dd0 <close_stdin@@Base+0x1a34>
   14d6c:	push	{r4, r5, r6, r7, r8, lr}
   14d70:	add	ip, pc, ip
   14d74:	ldr	lr, [pc, #88]	; 14dd4 <close_stdin@@Base+0x1a38>
   14d78:	sub	sp, sp, #56	; 0x38
   14d7c:	mov	r8, r3
   14d80:	add	r5, sp, #4
   14d84:	mov	r7, r2
   14d88:	mov	r6, r0
   14d8c:	ldr	r4, [ip, lr]
   14d90:	mov	r0, r5
   14d94:	ldr	r3, [r4]
   14d98:	str	r3, [sp, #52]	; 0x34
   14d9c:	bl	13890 <close_stdin@@Base+0x4f4>
   14da0:	mov	r2, r8
   14da4:	mov	r3, r5
   14da8:	mov	r0, r6
   14dac:	mov	r1, r7
   14db0:	bl	14770 <close_stdin@@Base+0x13d4>
   14db4:	ldr	r2, [sp, #52]	; 0x34
   14db8:	ldr	r3, [r4]
   14dbc:	cmp	r2, r3
   14dc0:	bne	14dcc <close_stdin@@Base+0x1a30>
   14dc4:	add	sp, sp, #56	; 0x38
   14dc8:	pop	{r4, r5, r6, r7, r8, pc}
   14dcc:	bl	113f0 <__stack_chk_fail@plt>
   14dd0:	andeq	r7, r1, r8, lsl #5
   14dd4:	andeq	r0, r0, ip, lsr r1
   14dd8:	mov	r2, r1
   14ddc:	mov	r1, r0
   14de0:	mov	r0, #0
   14de4:	b	14cfc <close_stdin@@Base+0x1960>
   14de8:	mov	ip, r1
   14dec:	mov	r3, r2
   14df0:	mov	r1, r0
   14df4:	mov	r2, ip
   14df8:	mov	r0, #0
   14dfc:	b	14d68 <close_stdin@@Base+0x19cc>
   14e00:	push	{r4, r5, r6, r7, r8, lr}
   14e04:	mov	r5, r2
   14e08:	ldr	lr, [pc, #136]	; 14e98 <close_stdin@@Base+0x1afc>
   14e0c:	mov	r7, r0
   14e10:	mov	r6, r1
   14e14:	ldr	r4, [pc, #128]	; 14e9c <close_stdin@@Base+0x1b00>
   14e18:	add	lr, pc, lr
   14e1c:	sub	sp, sp, #56	; 0x38
   14e20:	add	lr, lr, #256	; 0x100
   14e24:	ldr	r8, [pc, #116]	; 14ea0 <close_stdin@@Base+0x1b04>
   14e28:	add	r4, pc, r4
   14e2c:	add	ip, sp, #4
   14e30:	ldm	lr!, {r0, r1, r2, r3}
   14e34:	ldr	r4, [r4, r8]
   14e38:	stmia	ip!, {r0, r1, r2, r3}
   14e3c:	ldm	lr!, {r0, r1, r2, r3}
   14e40:	ldr	r8, [r4]
   14e44:	stmia	ip!, {r0, r1, r2, r3}
   14e48:	ldm	lr, {r0, r1, r2, r3}
   14e4c:	str	r8, [sp, #52]	; 0x34
   14e50:	stm	ip, {r0, r1, r2, r3}
   14e54:	mov	r1, r5
   14e58:	add	r5, sp, #4
   14e5c:	mov	r2, #1
   14e60:	mov	r0, r5
   14e64:	bl	149cc <close_stdin@@Base+0x1630>
   14e68:	mov	r2, r6
   14e6c:	mov	r3, r5
   14e70:	mov	r1, r7
   14e74:	mov	r0, #0
   14e78:	bl	14770 <close_stdin@@Base+0x13d4>
   14e7c:	ldr	r2, [sp, #52]	; 0x34
   14e80:	ldr	r3, [r4]
   14e84:	cmp	r2, r3
   14e88:	bne	14e94 <close_stdin@@Base+0x1af8>
   14e8c:	add	sp, sp, #56	; 0x38
   14e90:	pop	{r4, r5, r6, r7, r8, pc}
   14e94:	bl	113f0 <__stack_chk_fail@plt>
   14e98:	ldrdeq	r7, [r1], -r8
   14e9c:	ldrdeq	r7, [r1], -r0
   14ea0:	andeq	r0, r0, ip, lsr r1
   14ea4:	mov	r2, r1
   14ea8:	mvn	r1, #0
   14eac:	b	14e00 <close_stdin@@Base+0x1a64>
   14eb0:	mov	r1, #58	; 0x3a
   14eb4:	b	14ea4 <close_stdin@@Base+0x1b08>
   14eb8:	mov	r2, #58	; 0x3a
   14ebc:	b	14e00 <close_stdin@@Base+0x1a64>
   14ec0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14ec4:	mov	r5, r2
   14ec8:	ldr	lr, [pc, #144]	; 14f60 <close_stdin@@Base+0x1bc4>
   14ecc:	mov	r8, r0
   14ed0:	mov	r9, r1
   14ed4:	mov	r7, r3
   14ed8:	add	lr, pc, lr
   14edc:	ldr	r4, [pc, #128]	; 14f64 <close_stdin@@Base+0x1bc8>
   14ee0:	add	lr, lr, #256	; 0x100
   14ee4:	sub	sp, sp, #56	; 0x38
   14ee8:	ldr	sl, [pc, #120]	; 14f68 <close_stdin@@Base+0x1bcc>
   14eec:	add	r4, pc, r4
   14ef0:	ldm	lr!, {r0, r1, r2, r3}
   14ef4:	add	ip, sp, #4
   14ef8:	ldr	r4, [r4, sl]
   14efc:	ldr	r6, [sp, #88]	; 0x58
   14f00:	stmia	ip!, {r0, r1, r2, r3}
   14f04:	ldm	lr!, {r0, r1, r2, r3}
   14f08:	ldr	sl, [r4]
   14f0c:	stmia	ip!, {r0, r1, r2, r3}
   14f10:	ldm	lr, {r0, r1, r2, r3}
   14f14:	str	sl, [sp, #52]	; 0x34
   14f18:	stm	ip, {r0, r1, r2, r3}
   14f1c:	mov	r2, r5
   14f20:	add	r5, sp, #4
   14f24:	mov	r1, r9
   14f28:	mov	r0, r5
   14f2c:	bl	14a40 <close_stdin@@Base+0x16a4>
   14f30:	mov	r2, r6
   14f34:	mov	r3, r5
   14f38:	mov	r0, r8
   14f3c:	mov	r1, r7
   14f40:	bl	14770 <close_stdin@@Base+0x13d4>
   14f44:	ldr	r2, [sp, #52]	; 0x34
   14f48:	ldr	r3, [r4]
   14f4c:	cmp	r2, r3
   14f50:	bne	14f5c <close_stdin@@Base+0x1bc0>
   14f54:	add	sp, sp, #56	; 0x38
   14f58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f5c:	bl	113f0 <__stack_chk_fail@plt>
   14f60:	andeq	r7, r1, r8, lsl r3
   14f64:	andeq	r7, r1, ip, lsl #2
   14f68:	andeq	r0, r0, ip, lsr r1
   14f6c:	push	{lr}		; (str lr, [sp, #-4]!)
   14f70:	sub	sp, sp, #12
   14f74:	mvn	ip, #0
   14f78:	str	ip, [sp]
   14f7c:	bl	14ec0 <close_stdin@@Base+0x1b24>
   14f80:	add	sp, sp, #12
   14f84:	pop	{pc}		; (ldr pc, [sp], #4)
   14f88:	mov	ip, r1
   14f8c:	mov	r3, r2
   14f90:	mov	r1, r0
   14f94:	mov	r2, ip
   14f98:	mov	r0, #0
   14f9c:	b	14f6c <close_stdin@@Base+0x1bd0>
   14fa0:	push	{lr}		; (str lr, [sp, #-4]!)
   14fa4:	sub	sp, sp, #12
   14fa8:	mov	lr, r1
   14fac:	mov	ip, r2
   14fb0:	mov	r1, r0
   14fb4:	str	r3, [sp]
   14fb8:	mov	r2, lr
   14fbc:	mov	r3, ip
   14fc0:	mov	r0, #0
   14fc4:	bl	14ec0 <close_stdin@@Base+0x1b24>
   14fc8:	add	sp, sp, #12
   14fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   14fd0:	ldr	r3, [pc, #12]	; 14fe4 <close_stdin@@Base+0x1c48>
   14fd4:	ldr	ip, [pc, #12]	; 14fe8 <close_stdin@@Base+0x1c4c>
   14fd8:	add	r3, pc, r3
   14fdc:	ldr	r3, [r3, ip]
   14fe0:	b	14770 <close_stdin@@Base+0x13d4>
   14fe4:	andeq	r7, r1, r0, lsr #32
   14fe8:	andeq	r0, r0, r4, lsr r1
   14fec:	mov	r2, r1
   14ff0:	mov	r1, r0
   14ff4:	mov	r0, #0
   14ff8:	b	14fd0 <close_stdin@@Base+0x1c34>
   14ffc:	mvn	r2, #0
   15000:	b	14fd0 <close_stdin@@Base+0x1c34>
   15004:	mov	r1, r0
   15008:	mov	r0, #0
   1500c:	b	14ffc <close_stdin@@Base+0x1c60>
   15010:	ldr	r3, [pc, #104]	; 15080 <close_stdin@@Base+0x1ce4>
   15014:	ldr	ip, [pc, #104]	; 15084 <close_stdin@@Base+0x1ce8>
   15018:	add	r3, pc, r3
   1501c:	ldr	r1, [pc, #100]	; 15088 <close_stdin@@Base+0x1cec>
   15020:	push	{r4, r5, r6, r7, lr}
   15024:	sub	sp, sp, #116	; 0x74
   15028:	ldr	r7, [r3, ip]
   1502c:	mov	r6, r0
   15030:	mov	r2, sp
   15034:	mov	r0, #3
   15038:	add	r1, pc, r1
   1503c:	ldr	r3, [r7]
   15040:	str	r3, [sp, #108]	; 0x6c
   15044:	bl	1166c <__lxstat64@plt>
   15048:	cmp	r0, #0
   1504c:	ldrdeq	r2, [sp]
   15050:	moveq	r0, r6
   15054:	ldrdeq	r4, [sp, #96]	; 0x60
   15058:	movne	r0, #0
   1505c:	strdeq	r2, [r6, #8]
   15060:	strdeq	r4, [r6]
   15064:	ldr	r2, [sp, #108]	; 0x6c
   15068:	ldr	r3, [r7]
   1506c:	cmp	r2, r3
   15070:	bne	1507c <close_stdin@@Base+0x1ce0>
   15074:	add	sp, sp, #116	; 0x74
   15078:	pop	{r4, r5, r6, r7, pc}
   1507c:	bl	113f0 <__stack_chk_fail@plt>
   15080:	andeq	r6, r1, r0, ror #31
   15084:	andeq	r0, r0, ip, lsr r1
   15088:			; <UNDEFINED> instruction: 0x00005cbc
   1508c:	push	{r4, r5, r6, r7, lr}
   15090:	cmp	r1, #0
   15094:	sub	sp, sp, #36	; 0x24
   15098:	ldr	r7, [pc, #896]	; 15420 <close_stdin@@Base+0x2084>
   1509c:	mov	ip, r3
   150a0:	mov	r5, r0
   150a4:	add	r7, pc, r7
   150a8:	ldr	r4, [sp, #56]	; 0x38
   150ac:	ldr	r6, [sp, #60]	; 0x3c
   150b0:	beq	153f4 <close_stdin@@Base+0x2058>
   150b4:	str	r2, [sp]
   150b8:	mov	r3, r1
   150bc:	ldr	r2, [pc, #864]	; 15424 <close_stdin@@Base+0x2088>
   150c0:	mov	r1, #1
   150c4:	str	ip, [sp, #4]
   150c8:	add	r2, pc, r2
   150cc:	bl	1157c <__fprintf_chk@plt>
   150d0:	ldr	r1, [pc, #848]	; 15428 <close_stdin@@Base+0x208c>
   150d4:	mov	r2, #5
   150d8:	mov	r0, #0
   150dc:	add	r1, pc, r1
   150e0:	bl	113e4 <dcgettext@plt>
   150e4:	ldr	r2, [pc, #832]	; 1542c <close_stdin@@Base+0x2090>
   150e8:	movw	ip, #2013	; 0x7dd
   150ec:	mov	r1, #1
   150f0:	ldr	r2, [r7, r2]
   150f4:	str	ip, [sp]
   150f8:	mov	r3, r0
   150fc:	mov	r0, r5
   15100:	bl	1157c <__fprintf_chk@plt>
   15104:	ldr	r1, [pc, #804]	; 15430 <close_stdin@@Base+0x2094>
   15108:	mov	r0, #0
   1510c:	mov	r2, #5
   15110:	add	r1, pc, r1
   15114:	bl	113e4 <dcgettext@plt>
   15118:	mov	r1, r5
   1511c:	bl	11348 <fputs_unlocked@plt>
   15120:	cmp	r6, #9
   15124:	addls	pc, pc, r6, lsl #2
   15128:	b	15410 <close_stdin@@Base+0x2074>
   1512c:	b	151c0 <close_stdin@@Base+0x1e24>
   15130:	b	151c4 <close_stdin@@Base+0x1e28>
   15134:	b	151f4 <close_stdin@@Base+0x1e58>
   15138:	b	15228 <close_stdin@@Base+0x1e8c>
   1513c:	b	15264 <close_stdin@@Base+0x1ec8>
   15140:	b	152a4 <close_stdin@@Base+0x1f08>
   15144:	b	152ec <close_stdin@@Base+0x1f50>
   15148:	b	1533c <close_stdin@@Base+0x1fa0>
   1514c:	b	15394 <close_stdin@@Base+0x1ff8>
   15150:	b	15154 <close_stdin@@Base+0x1db8>
   15154:	ldr	r1, [pc, #728]	; 15434 <close_stdin@@Base+0x2098>
   15158:	mov	r0, #0
   1515c:	add	r1, pc, r1
   15160:	mov	r2, #5
   15164:	bl	113e4 <dcgettext@plt>
   15168:	ldm	r4, {r3, ip}
   1516c:	mov	r1, #1
   15170:	str	ip, [sp]
   15174:	ldr	ip, [r4, #8]
   15178:	str	ip, [sp, #4]
   1517c:	ldr	ip, [r4, #12]
   15180:	str	ip, [sp, #8]
   15184:	ldr	ip, [r4, #16]
   15188:	str	ip, [sp, #12]
   1518c:	ldr	ip, [r4, #20]
   15190:	str	ip, [sp, #16]
   15194:	ldr	ip, [r4, #24]
   15198:	str	ip, [sp, #20]
   1519c:	ldr	ip, [r4, #28]
   151a0:	str	ip, [sp, #24]
   151a4:	ldr	ip, [r4, #32]
   151a8:	str	ip, [sp, #28]
   151ac:	mov	r2, r0
   151b0:	mov	r0, r5
   151b4:	bl	1157c <__fprintf_chk@plt>
   151b8:	add	sp, sp, #36	; 0x24
   151bc:	pop	{r4, r5, r6, r7, pc}
   151c0:	bl	11654 <abort@plt>
   151c4:	ldr	r1, [pc, #620]	; 15438 <close_stdin@@Base+0x209c>
   151c8:	mov	r2, #5
   151cc:	mov	r0, #0
   151d0:	add	r1, pc, r1
   151d4:	bl	113e4 <dcgettext@plt>
   151d8:	ldr	r3, [r4]
   151dc:	mov	r1, #1
   151e0:	mov	r2, r0
   151e4:	mov	r0, r5
   151e8:	add	sp, sp, #36	; 0x24
   151ec:	pop	{r4, r5, r6, r7, lr}
   151f0:	b	1157c <__fprintf_chk@plt>
   151f4:	ldr	r1, [pc, #576]	; 1543c <close_stdin@@Base+0x20a0>
   151f8:	mov	r2, #5
   151fc:	mov	r0, #0
   15200:	add	r1, pc, r1
   15204:	bl	113e4 <dcgettext@plt>
   15208:	ldm	r4, {r3, ip}
   1520c:	mov	r1, #1
   15210:	str	ip, [sp, #56]	; 0x38
   15214:	mov	r2, r0
   15218:	mov	r0, r5
   1521c:	add	sp, sp, #36	; 0x24
   15220:	pop	{r4, r5, r6, r7, lr}
   15224:	b	1157c <__fprintf_chk@plt>
   15228:	ldr	r1, [pc, #528]	; 15440 <close_stdin@@Base+0x20a4>
   1522c:	mov	r2, #5
   15230:	mov	r0, #0
   15234:	add	r1, pc, r1
   15238:	bl	113e4 <dcgettext@plt>
   1523c:	ldm	r4, {r3, ip}
   15240:	mov	r1, #1
   15244:	str	ip, [sp, #56]	; 0x38
   15248:	ldr	ip, [r4, #8]
   1524c:	str	ip, [sp, #60]	; 0x3c
   15250:	mov	r2, r0
   15254:	mov	r0, r5
   15258:	add	sp, sp, #36	; 0x24
   1525c:	pop	{r4, r5, r6, r7, lr}
   15260:	b	1157c <__fprintf_chk@plt>
   15264:	ldr	r1, [pc, #472]	; 15444 <close_stdin@@Base+0x20a8>
   15268:	mov	r2, #5
   1526c:	mov	r0, #0
   15270:	add	r1, pc, r1
   15274:	bl	113e4 <dcgettext@plt>
   15278:	ldm	r4, {r3, ip}
   1527c:	mov	r1, #1
   15280:	str	ip, [sp]
   15284:	ldr	ip, [r4, #8]
   15288:	str	ip, [sp, #4]
   1528c:	ldr	ip, [r4, #12]
   15290:	str	ip, [sp, #8]
   15294:	mov	r2, r0
   15298:	mov	r0, r5
   1529c:	bl	1157c <__fprintf_chk@plt>
   152a0:	b	151b8 <close_stdin@@Base+0x1e1c>
   152a4:	ldr	r1, [pc, #412]	; 15448 <close_stdin@@Base+0x20ac>
   152a8:	mov	r2, #5
   152ac:	mov	r0, #0
   152b0:	add	r1, pc, r1
   152b4:	bl	113e4 <dcgettext@plt>
   152b8:	ldm	r4, {r3, ip}
   152bc:	mov	r1, #1
   152c0:	str	ip, [sp]
   152c4:	ldr	ip, [r4, #8]
   152c8:	str	ip, [sp, #4]
   152cc:	ldr	ip, [r4, #12]
   152d0:	str	ip, [sp, #8]
   152d4:	ldr	ip, [r4, #16]
   152d8:	str	ip, [sp, #12]
   152dc:	mov	r2, r0
   152e0:	mov	r0, r5
   152e4:	bl	1157c <__fprintf_chk@plt>
   152e8:	b	151b8 <close_stdin@@Base+0x1e1c>
   152ec:	ldr	r1, [pc, #344]	; 1544c <close_stdin@@Base+0x20b0>
   152f0:	mov	r2, #5
   152f4:	mov	r0, #0
   152f8:	add	r1, pc, r1
   152fc:	bl	113e4 <dcgettext@plt>
   15300:	ldm	r4, {r3, ip}
   15304:	mov	r1, #1
   15308:	str	ip, [sp]
   1530c:	ldr	ip, [r4, #8]
   15310:	str	ip, [sp, #4]
   15314:	ldr	ip, [r4, #12]
   15318:	str	ip, [sp, #8]
   1531c:	ldr	ip, [r4, #16]
   15320:	str	ip, [sp, #12]
   15324:	ldr	ip, [r4, #20]
   15328:	str	ip, [sp, #16]
   1532c:	mov	r2, r0
   15330:	mov	r0, r5
   15334:	bl	1157c <__fprintf_chk@plt>
   15338:	b	151b8 <close_stdin@@Base+0x1e1c>
   1533c:	ldr	r1, [pc, #268]	; 15450 <close_stdin@@Base+0x20b4>
   15340:	mov	r2, #5
   15344:	mov	r0, #0
   15348:	add	r1, pc, r1
   1534c:	bl	113e4 <dcgettext@plt>
   15350:	ldm	r4, {r3, ip}
   15354:	mov	r1, #1
   15358:	str	ip, [sp]
   1535c:	ldr	ip, [r4, #8]
   15360:	str	ip, [sp, #4]
   15364:	ldr	ip, [r4, #12]
   15368:	str	ip, [sp, #8]
   1536c:	ldr	ip, [r4, #16]
   15370:	str	ip, [sp, #12]
   15374:	ldr	ip, [r4, #20]
   15378:	str	ip, [sp, #16]
   1537c:	ldr	ip, [r4, #24]
   15380:	str	ip, [sp, #20]
   15384:	mov	r2, r0
   15388:	mov	r0, r5
   1538c:	bl	1157c <__fprintf_chk@plt>
   15390:	b	151b8 <close_stdin@@Base+0x1e1c>
   15394:	ldr	r1, [pc, #184]	; 15454 <close_stdin@@Base+0x20b8>
   15398:	mov	r2, #5
   1539c:	mov	r0, #0
   153a0:	add	r1, pc, r1
   153a4:	bl	113e4 <dcgettext@plt>
   153a8:	ldm	r4, {r3, ip}
   153ac:	mov	r1, #1
   153b0:	str	ip, [sp]
   153b4:	ldr	ip, [r4, #8]
   153b8:	str	ip, [sp, #4]
   153bc:	ldr	ip, [r4, #12]
   153c0:	str	ip, [sp, #8]
   153c4:	ldr	ip, [r4, #16]
   153c8:	str	ip, [sp, #12]
   153cc:	ldr	ip, [r4, #20]
   153d0:	str	ip, [sp, #16]
   153d4:	ldr	ip, [r4, #24]
   153d8:	str	ip, [sp, #20]
   153dc:	ldr	ip, [r4, #28]
   153e0:	str	ip, [sp, #24]
   153e4:	mov	r2, r0
   153e8:	mov	r0, r5
   153ec:	bl	1157c <__fprintf_chk@plt>
   153f0:	b	151b8 <close_stdin@@Base+0x1e1c>
   153f4:	str	r3, [sp]
   153f8:	mov	r3, r2
   153fc:	ldr	r2, [pc, #84]	; 15458 <close_stdin@@Base+0x20bc>
   15400:	mov	r1, #1
   15404:	add	r2, pc, r2
   15408:	bl	1157c <__fprintf_chk@plt>
   1540c:	b	150d0 <close_stdin@@Base+0x1d34>
   15410:	ldr	r1, [pc, #68]	; 1545c <close_stdin@@Base+0x20c0>
   15414:	mov	r0, #0
   15418:	add	r1, pc, r1
   1541c:	b	15160 <close_stdin@@Base+0x1dc4>
   15420:	andeq	r6, r1, r4, asr pc
   15424:	andeq	r6, r0, r0, lsl #6
   15428:	andeq	r6, r0, r0, lsl #6
   1542c:	andeq	r0, r0, ip, ror #2
   15430:	ldrdeq	r6, [r0], -r0
   15434:	andeq	r6, r0, ip, asr r4
   15438:	ldrdeq	r6, [r0], -ip
   1543c:			; <UNDEFINED> instruction: 0x000062bc
   15440:	andeq	r6, r0, r0, lsr #5
   15444:	andeq	r6, r0, r0, lsl #5
   15448:	andeq	r6, r0, r0, ror #4
   1544c:	andeq	r6, r0, ip, lsr r2
   15450:	andeq	r6, r0, r4, lsl r2
   15454:	andeq	r6, r0, r8, ror #3
   15458:	ldrdeq	r5, [r0], -r0
   1545c:	ldrdeq	r6, [r0], -r4
   15460:	push	{r4, r5, lr}
   15464:	sub	sp, sp, #12
   15468:	ldr	r5, [sp, #24]
   1546c:	ldr	ip, [r5]
   15470:	cmp	ip, #0
   15474:	beq	15490 <close_stdin@@Base+0x20f4>
   15478:	mov	lr, r5
   1547c:	mov	ip, #0
   15480:	ldr	r4, [lr, #4]!
   15484:	add	ip, ip, #1
   15488:	cmp	r4, #0
   1548c:	bne	15480 <close_stdin@@Base+0x20e4>
   15490:	stm	sp, {r5, ip}
   15494:	bl	1508c <close_stdin@@Base+0x1cf0>
   15498:	add	sp, sp, #12
   1549c:	pop	{r4, r5, pc}
   154a0:	push	{r4, r5, r6, r7, lr}
   154a4:	sub	sp, sp, #60	; 0x3c
   154a8:	ldr	r4, [pc, #100]	; 15514 <close_stdin@@Base+0x2178>
   154ac:	mov	ip, #0
   154b0:	ldr	r5, [pc, #96]	; 15518 <close_stdin@@Base+0x217c>
   154b4:	mov	lr, ip
   154b8:	add	r4, pc, r4
   154bc:	ldr	r6, [sp, #80]	; 0x50
   154c0:	ldr	r7, [r4, r5]
   154c4:	add	r5, sp, #12
   154c8:	ldr	r4, [r7]
   154cc:	str	r4, [sp, #52]	; 0x34
   154d0:	ldr	r4, [r6, ip]
   154d4:	cmp	r4, #0
   154d8:	str	r4, [r5, ip]
   154dc:	beq	154f0 <close_stdin@@Base+0x2154>
   154e0:	add	lr, lr, #1
   154e4:	add	ip, ip, #4
   154e8:	cmp	lr, #10
   154ec:	bne	154d0 <close_stdin@@Base+0x2134>
   154f0:	stm	sp, {r5, lr}
   154f4:	bl	1508c <close_stdin@@Base+0x1cf0>
   154f8:	ldr	r2, [sp, #52]	; 0x34
   154fc:	ldr	r3, [r7]
   15500:	cmp	r2, r3
   15504:	bne	15510 <close_stdin@@Base+0x2174>
   15508:	add	sp, sp, #60	; 0x3c
   1550c:	pop	{r4, r5, r6, r7, pc}
   15510:	bl	113f0 <__stack_chk_fail@plt>
   15514:	andeq	r6, r1, r0, asr #22
   15518:	andeq	r0, r0, ip, lsr r1
   1551c:	push	{r3}		; (str r3, [sp, #-4]!)
   15520:	push	{r4, lr}
   15524:	sub	sp, sp, #20
   15528:	ldr	lr, [pc, #72]	; 15578 <close_stdin@@Base+0x21dc>
   1552c:	add	ip, sp, #32
   15530:	ldr	r4, [pc, #68]	; 1557c <close_stdin@@Base+0x21e0>
   15534:	add	lr, pc, lr
   15538:	ldr	r3, [sp, #28]
   1553c:	ldr	r4, [lr, r4]
   15540:	str	ip, [sp]
   15544:	str	ip, [sp, #8]
   15548:	ldr	ip, [r4]
   1554c:	str	ip, [sp, #12]
   15550:	bl	154a0 <close_stdin@@Base+0x2104>
   15554:	ldr	r2, [sp, #12]
   15558:	ldr	r3, [r4]
   1555c:	cmp	r2, r3
   15560:	bne	15574 <close_stdin@@Base+0x21d8>
   15564:	add	sp, sp, #20
   15568:	pop	{r4, lr}
   1556c:	add	sp, sp, #4
   15570:	bx	lr
   15574:	bl	113f0 <__stack_chk_fail@plt>
   15578:	andeq	r6, r1, r4, asr #21
   1557c:	andeq	r0, r0, ip, lsr r1
   15580:	ldr	r1, [pc, #132]	; 1560c <close_stdin@@Base+0x2270>
   15584:	mov	r2, #5
   15588:	push	{r4, lr}
   1558c:	add	r1, pc, r1
   15590:	mov	r0, #0
   15594:	ldr	r4, [pc, #116]	; 15610 <close_stdin@@Base+0x2274>
   15598:	bl	113e4 <dcgettext@plt>
   1559c:	ldr	r2, [pc, #112]	; 15614 <close_stdin@@Base+0x2278>
   155a0:	add	r4, pc, r4
   155a4:	add	r2, pc, r2
   155a8:	mov	r1, r0
   155ac:	mov	r0, #1
   155b0:	bl	11564 <__printf_chk@plt>
   155b4:	ldr	r1, [pc, #92]	; 15618 <close_stdin@@Base+0x227c>
   155b8:	mov	r2, #5
   155bc:	mov	r0, #0
   155c0:	add	r1, pc, r1
   155c4:	bl	113e4 <dcgettext@plt>
   155c8:	ldr	r2, [pc, #76]	; 1561c <close_stdin@@Base+0x2280>
   155cc:	ldr	r3, [pc, #76]	; 15620 <close_stdin@@Base+0x2284>
   155d0:	add	r2, pc, r2
   155d4:	add	r3, pc, r3
   155d8:	mov	r1, r0
   155dc:	mov	r0, #1
   155e0:	bl	11564 <__printf_chk@plt>
   155e4:	ldr	r1, [pc, #56]	; 15624 <close_stdin@@Base+0x2288>
   155e8:	mov	r0, #0
   155ec:	mov	r2, #5
   155f0:	add	r1, pc, r1
   155f4:	bl	113e4 <dcgettext@plt>
   155f8:	ldr	r3, [pc, #40]	; 15628 <close_stdin@@Base+0x228c>
   155fc:	ldr	r3, [r4, r3]
   15600:	pop	{r4, lr}
   15604:	ldr	r1, [r3]
   15608:	b	11348 <fputs_unlocked@plt>
   1560c:	muleq	r0, ip, r0
   15610:	andeq	r6, r1, r8, asr sl
   15614:	andeq	r5, r0, ip, asr #23
   15618:	andeq	r6, r0, r0, lsl #1
   1561c:	muleq	r0, r4, r5
   15620:	andeq	r5, r0, r0, lsr #11
   15624:	andeq	r6, r0, r4, rrx
   15628:	andeq	r0, r0, ip, asr r1
   1562c:	push	{r4, lr}
   15630:	ldr	r4, [pc, #48]	; 15668 <close_stdin@@Base+0x22cc>
   15634:	add	r4, pc, r4
   15638:	ldrb	r3, [r4]
   1563c:	cmp	r3, #0
   15640:	beq	1564c <close_stdin@@Base+0x22b0>
   15644:	ldrb	r0, [r4, #1]
   15648:	pop	{r4, pc}
   1564c:	bl	11414 <geteuid@plt>
   15650:	mov	r3, #1
   15654:	strb	r3, [r4]
   15658:	rsbs	r0, r0, #1
   1565c:	movcc	r0, #0
   15660:	strb	r0, [r4, #1]
   15664:	pop	{r4, pc}
   15668:	andeq	r6, r1, ip, ror #25
   1566c:	push	{r4, lr}
   15670:	mov	r4, r0
   15674:	bl	114b0 <malloc@plt>
   15678:	rsbs	r3, r0, #1
   1567c:	movcc	r3, #0
   15680:	cmp	r4, #0
   15684:	moveq	r3, #0
   15688:	cmp	r3, #0
   1568c:	popeq	{r4, pc}
   15690:	bl	15880 <close_stdin@@Base+0x24e4>
   15694:	push	{r3, r4, r5, lr}
   15698:	mov	r4, r0
   1569c:	mvn	r0, #0
   156a0:	mov	r5, r1
   156a4:	bl	19848 <fts_children@@Base+0x1c2c>
   156a8:	cmp	r0, r4
   156ac:	bcc	156bc <close_stdin@@Base+0x2320>
   156b0:	mul	r0, r4, r5
   156b4:	pop	{r3, r4, r5, lr}
   156b8:	b	1566c <close_stdin@@Base+0x22d0>
   156bc:	bl	15880 <close_stdin@@Base+0x24e4>
   156c0:	b	1566c <close_stdin@@Base+0x22d0>
   156c4:	rsbs	r3, r1, #1
   156c8:	push	{r4, lr}
   156cc:	movcc	r3, #0
   156d0:	cmp	r0, #0
   156d4:	mov	r4, r1
   156d8:	moveq	r3, #0
   156dc:	cmp	r3, #0
   156e0:	bne	15704 <close_stdin@@Base+0x2368>
   156e4:	bl	113fc <realloc@plt>
   156e8:	rsbs	r3, r0, #1
   156ec:	movcc	r3, #0
   156f0:	cmp	r4, #0
   156f4:	moveq	r3, #0
   156f8:	cmp	r3, #0
   156fc:	popeq	{r4, pc}
   15700:	bl	15880 <close_stdin@@Base+0x24e4>
   15704:	bl	1139c <free@plt>
   15708:	mov	r0, #0
   1570c:	pop	{r4, pc}
   15710:	push	{r4, r5, r6, lr}
   15714:	mov	r5, r1
   15718:	mov	r6, r0
   1571c:	mov	r1, r2
   15720:	mvn	r0, #0
   15724:	mov	r4, r2
   15728:	bl	19848 <fts_children@@Base+0x1c2c>
   1572c:	cmp	r0, r5
   15730:	bcc	15744 <close_stdin@@Base+0x23a8>
   15734:	mov	r0, r6
   15738:	mul	r1, r5, r4
   1573c:	pop	{r4, r5, r6, lr}
   15740:	b	156c4 <close_stdin@@Base+0x2328>
   15744:	bl	15880 <close_stdin@@Base+0x24e4>
   15748:	push	{r3, r4, r5, r6, r7, lr}
   1574c:	subs	r7, r0, #0
   15750:	mov	r5, r1
   15754:	mov	r6, r2
   15758:	ldr	r4, [r1]
   1575c:	beq	15794 <close_stdin@@Base+0x23f8>
   15760:	movw	r0, #43690	; 0xaaaa
   15764:	mov	r1, r2
   15768:	bfi	r0, r0, #16, #16
   1576c:	bl	19848 <fts_children@@Base+0x1c2c>
   15770:	cmp	r4, r0
   15774:	addcc	r3, r4, #1
   15778:	addcc	r4, r4, r3, lsr #1
   1577c:	bcs	157b8 <close_stdin@@Base+0x241c>
   15780:	str	r4, [r5]
   15784:	mov	r0, r7
   15788:	mul	r1, r6, r4
   1578c:	pop	{r3, r4, r5, r6, r7, lr}
   15790:	b	156c4 <close_stdin@@Base+0x2328>
   15794:	cmp	r4, #0
   15798:	bne	15780 <close_stdin@@Base+0x23e4>
   1579c:	mov	r0, #64	; 0x40
   157a0:	mov	r1, r2
   157a4:	bl	19848 <fts_children@@Base+0x1c2c>
   157a8:	cmp	r0, #0
   157ac:	movne	r4, r0
   157b0:	addeq	r4, r0, #1
   157b4:	b	15780 <close_stdin@@Base+0x23e4>
   157b8:	bl	15880 <close_stdin@@Base+0x24e4>
   157bc:	cmp	r0, #0
   157c0:	push	{r3, lr}
   157c4:	ldr	r3, [r1]
   157c8:	beq	157f4 <close_stdin@@Base+0x2458>
   157cc:	movw	r2, #43689	; 0xaaa9
   157d0:	movt	r2, #43690	; 0xaaaa
   157d4:	cmp	r3, r2
   157d8:	addls	r2, r3, #1
   157dc:	addls	r3, r3, r2, lsr #1
   157e0:	bhi	1580c <close_stdin@@Base+0x2470>
   157e4:	str	r3, [r1]
   157e8:	mov	r1, r3
   157ec:	pop	{r3, lr}
   157f0:	b	156c4 <close_stdin@@Base+0x2328>
   157f4:	cmp	r3, #0
   157f8:	moveq	r3, #64	; 0x40
   157fc:	str	r3, [r1]
   15800:	mov	r1, r3
   15804:	pop	{r3, lr}
   15808:	b	156c4 <close_stdin@@Base+0x2328>
   1580c:	bl	15880 <close_stdin@@Base+0x24e4>
   15810:	push	{r4, lr}
   15814:	mov	r4, r0
   15818:	bl	1566c <close_stdin@@Base+0x22d0>
   1581c:	mov	r2, r4
   15820:	mov	r1, #0
   15824:	pop	{r4, lr}
   15828:	b	1154c <memset@plt>
   1582c:	push	{r3, lr}
   15830:	bl	1133c <calloc@plt>
   15834:	cmp	r0, #0
   15838:	popne	{r3, pc}
   1583c:	bl	15880 <close_stdin@@Base+0x24e4>
   15840:	push	{r3, r4, r5, lr}
   15844:	mov	r4, r1
   15848:	mov	r5, r0
   1584c:	mov	r0, r1
   15850:	bl	1566c <close_stdin@@Base+0x22d0>
   15854:	mov	r1, r5
   15858:	mov	r2, r4
   1585c:	pop	{r3, r4, r5, lr}
   15860:	b	113c0 <memcpy@plt>
   15864:	push	{r4, lr}
   15868:	mov	r4, r0
   1586c:	bl	11504 <strlen@plt>
   15870:	add	r1, r0, #1
   15874:	mov	r0, r4
   15878:	pop	{r4, lr}
   1587c:	b	15840 <close_stdin@@Base+0x24a4>
   15880:	ldr	r3, [pc, #64]	; 158c8 <close_stdin@@Base+0x252c>
   15884:	mov	r2, #5
   15888:	ldr	ip, [pc, #60]	; 158cc <close_stdin@@Base+0x2530>
   1588c:	mov	r0, #0
   15890:	add	r3, pc, r3
   15894:	ldr	r1, [pc, #52]	; 158d0 <close_stdin@@Base+0x2534>
   15898:	push	{r4, lr}
   1589c:	add	r1, pc, r1
   158a0:	ldr	r3, [r3, ip]
   158a4:	ldr	r4, [r3]
   158a8:	bl	113e4 <dcgettext@plt>
   158ac:	ldr	r2, [pc, #32]	; 158d4 <close_stdin@@Base+0x2538>
   158b0:	mov	r1, #0
   158b4:	add	r2, pc, r2
   158b8:	mov	r3, r0
   158bc:	mov	r0, r4
   158c0:	bl	1148c <error@plt>
   158c4:	bl	11654 <abort@plt>
   158c8:	andeq	r6, r1, r8, ror #14
   158cc:	andeq	r0, r0, r0, ror #2
   158d0:	andeq	r5, r0, r8, lsr #28
   158d4:			; <UNDEFINED> instruction: 0x000059bc
   158d8:	push	{r3, lr}
   158dc:	orr	r1, r1, #512	; 0x200
   158e0:	bl	16e7c <fts_open@@Base>
   158e4:	cmp	r0, #0
   158e8:	popne	{r3, pc}
   158ec:	bl	11534 <__errno_location@plt>
   158f0:	ldr	r3, [r0]
   158f4:	cmp	r3, #22
   158f8:	beq	15900 <close_stdin@@Base+0x2564>
   158fc:	bl	15880 <close_stdin@@Base+0x24e4>
   15900:	ldr	r0, [pc, #24]	; 15920 <close_stdin@@Base+0x2584>
   15904:	mov	r2, #41	; 0x29
   15908:	ldr	r1, [pc, #20]	; 15924 <close_stdin@@Base+0x2588>
   1590c:	ldr	r3, [pc, #20]	; 15928 <close_stdin@@Base+0x258c>
   15910:	add	r0, pc, r0
   15914:	add	r1, pc, r1
   15918:	add	r3, pc, r3
   1591c:	bl	11690 <__assert_fail@plt>
   15920:	ldrdeq	r5, [r0], -r4
   15924:	strdeq	r5, [r0], -r0
   15928:	andeq	r5, r0, r0, asr #27
   1592c:	ldr	r3, [r0, #48]	; 0x30
   15930:	and	r3, r3, #17
   15934:	cmp	r3, #16
   15938:	beq	1595c <close_stdin@@Base+0x25c0>
   1593c:	cmp	r3, #17
   15940:	beq	1594c <close_stdin@@Base+0x25b0>
   15944:	mov	r0, #0
   15948:	bx	lr
   1594c:	ldr	r0, [r1, #48]	; 0x30
   15950:	adds	r0, r0, #0
   15954:	movne	r0, #1
   15958:	bx	lr
   1595c:	mov	r0, #1
   15960:	bx	lr
   15964:	ldr	r3, [pc, #144]	; 159fc <close_stdin@@Base+0x2660>
   15968:	mov	r2, #10
   1596c:	push	{r4, r5, lr}
   15970:	add	r3, pc, r3
   15974:	ldr	lr, [pc, #132]	; 15a00 <close_stdin@@Base+0x2664>
   15978:	sub	sp, sp, #20
   1597c:	ldr	ip, [pc, #128]	; 15a04 <close_stdin@@Base+0x2668>
   15980:	mov	r4, #0
   15984:	add	r0, sp, #4
   15988:	add	r1, sp, #8
   1598c:	ldr	r5, [r3, lr]
   15990:	str	r4, [sp, #4]
   15994:	str	r4, [sp, #8]
   15998:	ldr	lr, [r5]
   1599c:	str	lr, [sp, #12]
   159a0:	ldr	r3, [r3, ip]
   159a4:	ldr	r3, [r3]
   159a8:	bl	11360 <__getdelim@plt>
   159ac:	cmp	r0, #0
   159b0:	ble	159d4 <close_stdin@@Base+0x2638>
   159b4:	ldr	r3, [sp, #4]
   159b8:	add	r0, r3, r0
   159bc:	strb	r4, [r0, #-1]
   159c0:	ldr	r0, [sp, #4]
   159c4:	bl	115a0 <rpmatch@plt>
   159c8:	cmp	r0, r4
   159cc:	movle	r4, #0
   159d0:	movgt	r4, #1
   159d4:	ldr	r0, [sp, #4]
   159d8:	bl	1139c <free@plt>
   159dc:	ldr	r2, [sp, #12]
   159e0:	ldr	r3, [r5]
   159e4:	mov	r0, r4
   159e8:	cmp	r2, r3
   159ec:	bne	159f8 <close_stdin@@Base+0x265c>
   159f0:	add	sp, sp, #20
   159f4:	pop	{r4, r5, pc}
   159f8:	bl	113f0 <__stack_chk_fail@plt>
   159fc:	andeq	r6, r1, r8, lsl #13
   15a00:	andeq	r0, r0, ip, lsr r1
   15a04:	andeq	r0, r0, r8, asr r1
   15a08:	push	{r4, lr}
   15a0c:	subs	r4, r0, #0
   15a10:	sub	sp, sp, #8
   15a14:	beq	15a24 <close_stdin@@Base+0x2688>
   15a18:	bl	114c8 <__freading@plt>
   15a1c:	cmp	r0, #0
   15a20:	bne	15a34 <close_stdin@@Base+0x2698>
   15a24:	mov	r0, r4
   15a28:	add	sp, sp, #8
   15a2c:	pop	{r4, lr}
   15a30:	b	11378 <fflush@plt>
   15a34:	ldr	r3, [r4]
   15a38:	tst	r3, #256	; 0x100
   15a3c:	beq	15a24 <close_stdin@@Base+0x2688>
   15a40:	mov	r3, #1
   15a44:	mov	r0, r4
   15a48:	str	r3, [sp]
   15a4c:	mov	r2, #0
   15a50:	mov	r3, #0
   15a54:	bl	15aa8 <close_stdin@@Base+0x270c>
   15a58:	mov	r0, r4
   15a5c:	add	sp, sp, #8
   15a60:	pop	{r4, lr}
   15a64:	b	11378 <fflush@plt>
   15a68:	ldr	r2, [r0, #20]
   15a6c:	ldr	r3, [r0, #16]
   15a70:	cmp	r2, r3
   15a74:	bhi	15aa0 <close_stdin@@Base+0x2704>
   15a78:	ldr	r3, [r0]
   15a7c:	ldr	r1, [r0, #8]
   15a80:	ands	r3, r3, #256	; 0x100
   15a84:	ldr	r2, [r0, #4]
   15a88:	ldrne	r3, [r0, #36]	; 0x24
   15a8c:	rsb	r2, r2, r1
   15a90:	ldrne	r1, [r0, #44]	; 0x2c
   15a94:	rsbne	r3, r3, r1
   15a98:	add	r0, r2, r3
   15a9c:	bx	lr
   15aa0:	mov	r0, #0
   15aa4:	bx	lr
   15aa8:	push	{r4, r5, r6, r7, lr}
   15aac:	sub	sp, sp, #20
   15ab0:	ldmib	r0, {r1, ip}
   15ab4:	mov	r6, r0
   15ab8:	ldr	r4, [sp, #40]	; 0x28
   15abc:	cmp	ip, r1
   15ac0:	beq	15ad8 <close_stdin@@Base+0x273c>
   15ac4:	str	r4, [sp, #40]	; 0x28
   15ac8:	mov	r0, r6
   15acc:	add	sp, sp, #20
   15ad0:	pop	{r4, r5, r6, r7, lr}
   15ad4:	b	11594 <fseeko64@plt>
   15ad8:	ldr	ip, [r0, #20]
   15adc:	ldr	r1, [r0, #16]
   15ae0:	cmp	ip, r1
   15ae4:	bne	15ac4 <close_stdin@@Base+0x2728>
   15ae8:	ldr	r7, [r0, #36]	; 0x24
   15aec:	cmp	r7, #0
   15af0:	bne	15ac4 <close_stdin@@Base+0x2728>
   15af4:	str	r2, [sp, #12]
   15af8:	mvn	r5, #0
   15afc:	str	r3, [sp, #8]
   15b00:	bl	11570 <fileno@plt>
   15b04:	str	r4, [sp]
   15b08:	mvn	r4, #0
   15b0c:	ldr	r2, [sp, #12]
   15b10:	ldr	r3, [sp, #8]
   15b14:	bl	11450 <lseek64@plt>
   15b18:	mov	r2, r0
   15b1c:	mov	r3, r1
   15b20:	cmp	r3, r5
   15b24:	cmpeq	r2, r4
   15b28:	beq	15b48 <close_stdin@@Base+0x27ac>
   15b2c:	ldr	r1, [r6]
   15b30:	mov	r0, r7
   15b34:	strd	r2, [r6, #80]	; 0x50
   15b38:	bic	r3, r1, #16
   15b3c:	str	r3, [r6]
   15b40:	add	sp, sp, #20
   15b44:	pop	{r4, r5, r6, r7, pc}
   15b48:	mvn	r0, #0
   15b4c:	b	15b40 <close_stdin@@Base+0x27a4>
   15b50:	push	{r4, r5}
   15b54:	mov	ip, r1
   15b58:	ldrd	r4, [r0, #8]
   15b5c:	ldrd	r2, [r1, #8]
   15b60:	cmp	r5, r3
   15b64:	cmpeq	r4, r2
   15b68:	movne	r0, #0
   15b6c:	beq	15b78 <close_stdin@@Base+0x27dc>
   15b70:	pop	{r4, r5}
   15b74:	bx	lr
   15b78:	ldrd	r0, [r0]
   15b7c:	ldrd	r2, [ip]
   15b80:	pop	{r4, r5}
   15b84:	cmp	r1, r3
   15b88:	cmpeq	r0, r2
   15b8c:	movne	r0, #0
   15b90:	moveq	r0, #1
   15b94:	bx	lr
   15b98:	push	{r3, lr}
   15b9c:	mov	r2, r1
   15ba0:	mov	r3, #0
   15ba4:	ldrd	r0, [r0, #8]
   15ba8:	bl	19a54 <fts_children@@Base+0x1e38>
   15bac:	mov	r0, r2
   15bb0:	pop	{r3, pc}
   15bb4:	push	{r3, lr}
   15bb8:	mov	r2, r1
   15bbc:	mov	r3, #0
   15bc0:	ldrd	r0, [r0]
   15bc4:	bl	19a54 <fts_children@@Base+0x1e38>
   15bc8:	mov	r0, r2
   15bcc:	pop	{r3, pc}
   15bd0:	ldrd	r2, [r0]
   15bd4:	ldrd	r0, [r1]
   15bd8:	cmp	r3, r1
   15bdc:	cmpeq	r2, r0
   15be0:	movne	r0, #0
   15be4:	moveq	r0, #1
   15be8:	bx	lr
   15bec:	ldr	r3, [r0]
   15bf0:	ldr	r2, [r1]
   15bf4:	ldrd	r0, [r3, #168]	; 0xa8
   15bf8:	ldrd	r2, [r2, #168]	; 0xa8
   15bfc:	cmp	r1, r3
   15c00:	cmpeq	r0, r2
   15c04:	bcc	15c14 <close_stdin@@Base+0x2878>
   15c08:	movls	r0, #0
   15c0c:	movhi	r0, #1
   15c10:	bx	lr
   15c14:	mvn	r0, #0
   15c18:	bx	lr
   15c1c:	push	{r3, r4, r5, r6, r7, lr}
   15c20:	mov	r7, r2
   15c24:	ldr	r2, [r0, #40]	; 0x28
   15c28:	mov	r5, r0
   15c2c:	mov	r4, r1
   15c30:	ldr	r6, [r0, #44]	; 0x2c
   15c34:	cmp	r2, r7
   15c38:	bcc	15cb4 <close_stdin@@Base+0x2918>
   15c3c:	ldr	ip, [r0, #8]
   15c40:	cmp	r4, #0
   15c44:	beq	15d04 <close_stdin@@Base+0x2968>
   15c48:	str	r4, [ip], #4
   15c4c:	ldr	r4, [r4, #8]
   15c50:	cmp	r4, #0
   15c54:	bne	15c48 <close_stdin@@Base+0x28ac>
   15c58:	ldr	r0, [r5, #8]
   15c5c:	mov	r3, r6
   15c60:	mov	r2, #4
   15c64:	mov	r1, r7
   15c68:	bl	11618 <qsort@plt>
   15c6c:	ldr	r2, [r5, #8]
   15c70:	subs	r3, r7, #1
   15c74:	ldr	r4, [r2]
   15c78:	beq	15cfc <close_stdin@@Base+0x2960>
   15c7c:	add	ip, r2, #4
   15c80:	mov	r6, r4
   15c84:	b	15c8c <close_stdin@@Base+0x28f0>
   15c88:	ldr	r6, [ip, #-4]
   15c8c:	ldr	r5, [ip], #4
   15c90:	subs	r3, r3, #1
   15c94:	str	r5, [r6, #8]
   15c98:	bne	15c88 <close_stdin@@Base+0x28ec>
   15c9c:	add	r7, r2, r7, lsl #2
   15ca0:	ldr	r2, [r7, #-4]
   15ca4:	mov	r3, #0
   15ca8:	mov	r0, r4
   15cac:	str	r3, [r2, #8]
   15cb0:	pop	{r3, r4, r5, r6, r7, pc}
   15cb4:	add	r1, r7, #40	; 0x28
   15cb8:	str	r1, [r0, #40]	; 0x28
   15cbc:	cmn	r1, #-1073741823	; 0xc0000001
   15cc0:	bhi	15ce0 <close_stdin@@Base+0x2944>
   15cc4:	lsl	r1, r1, #2
   15cc8:	ldr	r0, [r0, #8]
   15ccc:	bl	113fc <realloc@plt>
   15cd0:	cmp	r0, #0
   15cd4:	movne	ip, r0
   15cd8:	strne	r0, [r5, #8]
   15cdc:	bne	15c40 <close_stdin@@Base+0x28a4>
   15ce0:	ldr	r0, [r5, #8]
   15ce4:	bl	1139c <free@plt>
   15ce8:	mov	r3, #0
   15cec:	mov	r0, r4
   15cf0:	str	r3, [r5, #8]
   15cf4:	str	r3, [r5, #40]	; 0x28
   15cf8:	pop	{r3, r4, r5, r6, r7, pc}
   15cfc:	mov	r2, r4
   15d00:	b	15ca4 <close_stdin@@Base+0x2908>
   15d04:	mov	r0, ip
   15d08:	b	15c5c <close_stdin@@Base+0x28c0>
   15d0c:	push	{r3, r4, r5, r6, r7, lr}
   15d10:	mov	r6, r0
   15d14:	add	r0, r2, #184	; 0xb8
   15d18:	mov	r5, r2
   15d1c:	mov	r7, r1
   15d20:	bl	114b0 <malloc@plt>
   15d24:	subs	r4, r0, #0
   15d28:	beq	15d74 <close_stdin@@Base+0x29d8>
   15d2c:	mov	r1, r7
   15d30:	mov	r2, r5
   15d34:	add	r0, r4, #176	; 0xb0
   15d38:	bl	113c0 <memcpy@plt>
   15d3c:	add	r1, r4, r5
   15d40:	mov	r3, #0
   15d44:	mov	r2, #3
   15d48:	strb	r3, [r1, #176]	; 0xb0
   15d4c:	str	r5, [r4, #52]	; 0x34
   15d50:	str	r6, [r4, #44]	; 0x2c
   15d54:	ldr	r1, [r6, #24]
   15d58:	str	r3, [r4, #32]
   15d5c:	str	r3, [r4, #12]
   15d60:	str	r1, [r4, #28]
   15d64:	strh	r3, [r4, #62]	; 0x3e
   15d68:	str	r3, [r4, #16]
   15d6c:	str	r3, [r4, #20]
   15d70:	strh	r2, [r4, #64]	; 0x40
   15d74:	mov	r0, r4
   15d78:	pop	{r3, r4, r5, r6, r7, pc}
   15d7c:	push	{r3, r4, r5, lr}
   15d80:	subs	r4, r0, #0
   15d84:	popeq	{r3, r4, r5, pc}
   15d88:	ldr	r0, [r4, #12]
   15d8c:	ldr	r5, [r4, #8]
   15d90:	cmp	r0, #0
   15d94:	beq	15d9c <close_stdin@@Base+0x2a00>
   15d98:	bl	11684 <closedir@plt>
   15d9c:	mov	r0, r4
   15da0:	mov	r4, r5
   15da4:	bl	1139c <free@plt>
   15da8:	cmp	r5, #0
   15dac:	bne	15d88 <close_stdin@@Base+0x29ec>
   15db0:	pop	{r3, r4, r5, pc}
   15db4:	push	{r4, lr}
   15db8:	mov	r4, r0
   15dbc:	b	15dcc <close_stdin@@Base+0x2a30>
   15dc0:	bl	19118 <fts_children@@Base+0x14fc>
   15dc4:	cmp	r0, #0
   15dc8:	bge	15de4 <close_stdin@@Base+0x2a48>
   15dcc:	mov	r0, r4
   15dd0:	bl	190cc <fts_children@@Base+0x14b0>
   15dd4:	cmp	r0, #0
   15dd8:	mov	r0, r4
   15ddc:	beq	15dc0 <close_stdin@@Base+0x2a24>
   15de0:	pop	{r4, pc}
   15de4:	bl	11660 <close@plt>
   15de8:	b	15dcc <close_stdin@@Base+0x2a30>
   15dec:	push	{r3, r4, r5, lr}
   15df0:	mov	r5, r1
   15df4:	ldr	r1, [r0, #32]
   15df8:	mov	r4, r0
   15dfc:	subs	r0, r1, r5
   15e00:	rsbs	r3, r0, #0
   15e04:	adcs	r3, r3, r0
   15e08:	cmn	r1, #100	; 0x64
   15e0c:	moveq	r3, #0
   15e10:	cmp	r3, #0
   15e14:	bne	15e5c <close_stdin@@Base+0x2ac0>
   15e18:	cmp	r2, #0
   15e1c:	bne	15e44 <close_stdin@@Base+0x2aa8>
   15e20:	ldr	r3, [r4, #48]	; 0x30
   15e24:	tst	r3, #4
   15e28:	bne	15e3c <close_stdin@@Base+0x2aa0>
   15e2c:	cmp	r1, #0
   15e30:	blt	15e3c <close_stdin@@Base+0x2aa0>
   15e34:	mov	r0, r1
   15e38:	bl	11660 <close@plt>
   15e3c:	str	r5, [r4, #32]
   15e40:	pop	{r3, r4, r5, pc}
   15e44:	add	r0, r4, #60	; 0x3c
   15e48:	bl	190d4 <fts_children@@Base+0x14b8>
   15e4c:	cmp	r0, #0
   15e50:	bge	15e38 <close_stdin@@Base+0x2a9c>
   15e54:	str	r5, [r4, #32]
   15e58:	pop	{r3, r4, r5, pc}
   15e5c:	bl	11654 <abort@plt>
   15e60:	push	{r3, r4, r5, lr}
   15e64:	mov	r4, r0
   15e68:	ldr	r3, [r0, #48]	; 0x30
   15e6c:	ands	r5, r3, #4
   15e70:	movne	r5, #0
   15e74:	bne	15e8c <close_stdin@@Base+0x2af0>
   15e78:	tst	r3, #512	; 0x200
   15e7c:	beq	15e9c <close_stdin@@Base+0x2b00>
   15e80:	mvn	r1, #99	; 0x63
   15e84:	mov	r2, #1
   15e88:	bl	15dec <close_stdin@@Base+0x2a50>
   15e8c:	add	r0, r4, #60	; 0x3c
   15e90:	bl	15db4 <close_stdin@@Base+0x2a18>
   15e94:	mov	r0, r5
   15e98:	pop	{r3, r4, r5, pc}
   15e9c:	ldr	r0, [r0, #28]
   15ea0:	bl	1160c <fchdir@plt>
   15ea4:	adds	r5, r0, #0
   15ea8:	movne	r5, #1
   15eac:	b	15e8c <close_stdin@@Base+0x2af0>
   15eb0:	push	{r4, r5, r6, r7, lr}
   15eb4:	mov	r4, r2
   15eb8:	ldr	r2, [r2, #48]	; 0x30
   15ebc:	sub	sp, sp, #12
   15ec0:	mov	r6, r1
   15ec4:	add	r5, r4, #72	; 0x48
   15ec8:	cmp	r2, #0
   15ecc:	ldr	r2, [r1]
   15ed0:	bne	15edc <close_stdin@@Base+0x2b40>
   15ed4:	tst	r2, #1
   15ed8:	bne	15eec <close_stdin@@Base+0x2b50>
   15edc:	tst	r2, #2
   15ee0:	bne	15eec <close_stdin@@Base+0x2b50>
   15ee4:	cmp	r3, #0
   15ee8:	beq	15f38 <close_stdin@@Base+0x2b9c>
   15eec:	mov	r0, #3
   15ef0:	ldr	r1, [r4, #24]
   15ef4:	mov	r2, r5
   15ef8:	bl	11630 <__xstat64@plt>
   15efc:	cmp	r0, #0
   15f00:	beq	15f5c <close_stdin@@Base+0x2bc0>
   15f04:	bl	11534 <__errno_location@plt>
   15f08:	ldr	r6, [r0]
   15f0c:	mov	r7, r0
   15f10:	cmp	r6, #2
   15f14:	beq	16000 <close_stdin@@Base+0x2c64>
   15f18:	str	r6, [r4, #32]
   15f1c:	mov	r0, r5
   15f20:	mov	r1, #0
   15f24:	mov	r2, #104	; 0x68
   15f28:	bl	1154c <memset@plt>
   15f2c:	mov	r0, #10
   15f30:	add	sp, sp, #12
   15f34:	pop	{r4, r5, r6, r7, pc}
   15f38:	ldr	r2, [r4, #24]
   15f3c:	mov	r1, r0
   15f40:	mov	r3, #256	; 0x100
   15f44:	mov	r0, #3
   15f48:	str	r3, [sp]
   15f4c:	mov	r3, r5
   15f50:	bl	11420 <__fxstatat64@plt>
   15f54:	cmp	r0, #0
   15f58:	bne	15f8c <close_stdin@@Base+0x2bf0>
   15f5c:	ldr	r0, [r4, #88]	; 0x58
   15f60:	and	r0, r0, #61440	; 0xf000
   15f64:	cmp	r0, #16384	; 0x4000
   15f68:	beq	15f9c <close_stdin@@Base+0x2c00>
   15f6c:	cmp	r0, #40960	; 0xa000
   15f70:	moveq	r0, #12
   15f74:	beq	15f30 <close_stdin@@Base+0x2b94>
   15f78:	cmp	r0, #32768	; 0x8000
   15f7c:	movne	r0, #3
   15f80:	moveq	r0, #8
   15f84:	add	sp, sp, #12
   15f88:	pop	{r4, r5, r6, r7, pc}
   15f8c:	bl	11534 <__errno_location@plt>
   15f90:	ldr	r3, [r0]
   15f94:	str	r3, [r4, #32]
   15f98:	b	15f1c <close_stdin@@Base+0x2b80>
   15f9c:	ldr	r3, [r6]
   15fa0:	ldrb	r1, [r4, #176]	; 0xb0
   15fa4:	tst	r3, #32
   15fa8:	ldr	r2, [r4, #92]	; 0x5c
   15fac:	moveq	r3, #2
   15fb0:	movne	r3, #0
   15fb4:	cmp	r1, #46	; 0x2e
   15fb8:	rsb	r3, r3, r2
   15fbc:	str	r3, [r4, #56]	; 0x38
   15fc0:	beq	15fcc <close_stdin@@Base+0x2c30>
   15fc4:	mov	r0, #1
   15fc8:	b	15f30 <close_stdin@@Base+0x2b94>
   15fcc:	ldrb	r3, [r4, #177]	; 0xb1
   15fd0:	cmp	r3, #0
   15fd4:	beq	15fec <close_stdin@@Base+0x2c50>
   15fd8:	ldr	r3, [r4, #176]	; 0xb0
   15fdc:	bic	r3, r3, #-16777216	; 0xff000000
   15fe0:	bic	r3, r3, #255	; 0xff
   15fe4:	cmp	r3, #11776	; 0x2e00
   15fe8:	bne	15fc4 <close_stdin@@Base+0x2c28>
   15fec:	ldr	r0, [r4, #48]	; 0x30
   15ff0:	cmp	r0, #0
   15ff4:	movne	r0, #5
   15ff8:	moveq	r0, #1
   15ffc:	b	15f30 <close_stdin@@Base+0x2b94>
   16000:	mov	r0, #3
   16004:	ldr	r1, [r4, #24]
   16008:	mov	r2, r5
   1600c:	bl	1166c <__lxstat64@plt>
   16010:	cmp	r0, #0
   16014:	streq	r0, [r7]
   16018:	moveq	r0, #13
   1601c:	beq	15f30 <close_stdin@@Base+0x2b94>
   16020:	b	15f18 <close_stdin@@Base+0x2b7c>
   16024:	push	{r3, r4, r5, lr}
   16028:	mov	r4, r0
   1602c:	ldr	r3, [r1]
   16030:	add	r0, r3, #256	; 0x100
   16034:	add	r2, r0, r2
   16038:	cmp	r3, r2
   1603c:	bhi	16068 <close_stdin@@Base+0x2ccc>
   16040:	str	r2, [r1]
   16044:	mov	r1, r2
   16048:	ldr	r0, [r4]
   1604c:	bl	113fc <realloc@plt>
   16050:	subs	r5, r0, #0
   16054:	strne	r5, [r4]
   16058:	movne	r3, #1
   1605c:	beq	16090 <close_stdin@@Base+0x2cf4>
   16060:	mov	r0, r3
   16064:	pop	{r3, r4, r5, pc}
   16068:	ldr	r0, [r4]
   1606c:	mov	r5, #0
   16070:	bl	1139c <free@plt>
   16074:	str	r5, [r4]
   16078:	bl	11534 <__errno_location@plt>
   1607c:	mov	r3, r5
   16080:	mov	r2, #36	; 0x24
   16084:	str	r2, [r0]
   16088:	mov	r0, r3
   1608c:	pop	{r3, r4, r5, pc}
   16090:	ldr	r0, [r4]
   16094:	bl	1139c <free@plt>
   16098:	str	r5, [r4]
   1609c:	mov	r3, r5
   160a0:	b	16060 <close_stdin@@Base+0x2cc4>
   160a4:	movw	r3, #258	; 0x102
   160a8:	and	r3, r0, r3
   160ac:	cmp	r3, #0
   160b0:	ldr	ip, [pc, #116]	; 1612c <close_stdin@@Base+0x2d90>
   160b4:	push	{r4, lr}
   160b8:	add	ip, pc, ip
   160bc:	sub	sp, sp, #8
   160c0:	mov	r4, r1
   160c4:	beq	16104 <close_stdin@@Base+0x2d68>
   160c8:	ldr	lr, [pc, #96]	; 16130 <close_stdin@@Base+0x2d94>
   160cc:	mov	r0, #31
   160d0:	ldr	r2, [pc, #92]	; 16134 <close_stdin@@Base+0x2d98>
   160d4:	mov	r1, #0
   160d8:	ldr	r3, [pc, #88]	; 16138 <close_stdin@@Base+0x2d9c>
   160dc:	ldr	ip, [ip, lr]
   160e0:	add	r2, pc, r2
   160e4:	add	r3, pc, r3
   160e8:	str	ip, [sp]
   160ec:	bl	188c4 <fts_children@@Base+0xca8>
   160f0:	str	r0, [r4]
   160f4:	adds	r0, r0, #0
   160f8:	movne	r0, #1
   160fc:	add	sp, sp, #8
   16100:	pop	{r4, pc}
   16104:	mov	r0, #32
   16108:	bl	114b0 <malloc@plt>
   1610c:	cmp	r0, #0
   16110:	str	r0, [r4]
   16114:	moveq	r0, r0
   16118:	beq	160fc <close_stdin@@Base+0x2d60>
   1611c:	bl	17e70 <fts_children@@Base+0x254>
   16120:	mov	r0, #1
   16124:	add	sp, sp, #8
   16128:	pop	{r4, pc}
   1612c:	andeq	r5, r1, r0, asr #30
   16130:	andeq	r0, r0, r8, lsr r1
   16134:			; <UNDEFINED> instruction: 0xfffffab0
   16138:			; <UNDEFINED> instruction: 0xfffffa64
   1613c:	tst	r1, #16
   16140:	push	{r4, lr}
   16144:	moveq	r3, #18688	; 0x4900
   16148:	movne	r3, #51456	; 0xc900
   1614c:	tst	r1, #2048	; 0x800
   16150:	moveq	ip, #0
   16154:	movne	ip, #262144	; 0x40000
   16158:	tst	r1, #512	; 0x200
   1615c:	orr	r3, ip, r3
   16160:	beq	16190 <close_stdin@@Base+0x2df4>
   16164:	mov	r1, r2
   16168:	mov	r2, r3
   1616c:	bl	19580 <fts_children@@Base+0x1964>
   16170:	mov	r4, r0
   16174:	cmp	r4, #0
   16178:	blt	16188 <close_stdin@@Base+0x2dec>
   1617c:	mov	r0, r4
   16180:	mov	r1, #1
   16184:	bl	17d80 <fts_children@@Base+0x164>
   16188:	mov	r0, r4
   1618c:	pop	{r4, pc}
   16190:	mov	r0, r2
   16194:	mov	r1, r3
   16198:	bl	17f64 <fts_children@@Base+0x348>
   1619c:	mov	r4, r0
   161a0:	b	16174 <close_stdin@@Base+0x2dd8>
   161a4:	movw	r3, #258	; 0x102
   161a8:	and	r3, r0, r3
   161ac:	cmp	r3, #0
   161b0:	push	{r4, r5, r6, r7, r8, lr}
   161b4:	mov	r8, r1
   161b8:	mov	r6, r2
   161bc:	beq	16224 <close_stdin@@Base+0x2e88>
   161c0:	mov	r0, #24
   161c4:	bl	114b0 <malloc@plt>
   161c8:	subs	r7, r0, #0
   161cc:	beq	16250 <close_stdin@@Base+0x2eb4>
   161d0:	ldrd	r4, [r6, #72]	; 0x48
   161d4:	mov	r1, r7
   161d8:	strd	r4, [r7]
   161dc:	ldrd	r4, [r6, #168]	; 0xa8
   161e0:	str	r6, [r7, #16]
   161e4:	strd	r4, [r7, #8]
   161e8:	ldr	r0, [r8]
   161ec:	bl	18eec <fts_children@@Base+0x12d0>
   161f0:	cmp	r7, r0
   161f4:	mov	r4, r0
   161f8:	beq	16248 <close_stdin@@Base+0x2eac>
   161fc:	mov	r0, r7
   16200:	bl	1139c <free@plt>
   16204:	cmp	r4, #0
   16208:	beq	16250 <close_stdin@@Base+0x2eb4>
   1620c:	ldr	r3, [r4, #16]
   16210:	mov	r2, #2
   16214:	mov	r0, #1
   16218:	strh	r2, [r6, #60]	; 0x3c
   1621c:	str	r3, [r6]
   16220:	pop	{r4, r5, r6, r7, r8, pc}
   16224:	ldr	r0, [r1]
   16228:	add	r1, r2, #72	; 0x48
   1622c:	bl	17e8c <fts_children@@Base+0x270>
   16230:	cmp	r0, #0
   16234:	beq	16248 <close_stdin@@Base+0x2eac>
   16238:	mov	r3, #2
   1623c:	str	r6, [r6]
   16240:	strh	r3, [r6, #60]	; 0x3c
   16244:	pop	{r4, r5, r6, r7, r8, pc}
   16248:	mov	r0, #1
   1624c:	pop	{r4, r5, r6, r7, r8, pc}
   16250:	mov	r0, #0
   16254:	pop	{r4, r5, r6, r7, r8, pc}
   16258:	ldr	ip, [pc, #568]	; 16498 <close_stdin@@Base+0x30fc>
   1625c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16260:	mov	sl, r0
   16264:	ldr	r0, [pc, #560]	; 1649c <close_stdin@@Base+0x3100>
   16268:	add	ip, pc, ip
   1626c:	sub	sp, sp, #124	; 0x7c
   16270:	mov	r9, r3
   16274:	mov	r3, ip
   16278:	mov	r5, r1
   1627c:	ldr	r0, [ip, r0]
   16280:	mov	fp, r2
   16284:	ldr	r4, [sp, #160]	; 0xa0
   16288:	ldr	r3, [r0]
   1628c:	cmp	r4, #0
   16290:	str	r0, [sp]
   16294:	moveq	r7, r4
   16298:	str	r3, [sp, #116]	; 0x74
   1629c:	beq	162b0 <close_stdin@@Base+0x2f14>
   162a0:	ldrb	r3, [r4]
   162a4:	cmp	r3, #46	; 0x2e
   162a8:	beq	16388 <close_stdin@@Base+0x2fec>
   162ac:	mov	r7, #0
   162b0:	ldr	r6, [sl, #48]	; 0x30
   162b4:	ands	r8, r6, #4
   162b8:	beq	162fc <close_stdin@@Base+0x2f60>
   162bc:	ands	r8, r6, #512	; 0x200
   162c0:	beq	162dc <close_stdin@@Base+0x2f40>
   162c4:	cmp	r9, #0
   162c8:	movlt	r8, #0
   162cc:	blt	162dc <close_stdin@@Base+0x2f40>
   162d0:	mov	r0, r9
   162d4:	mov	r8, #0
   162d8:	bl	11660 <close@plt>
   162dc:	ldr	r1, [sp]
   162e0:	mov	r0, r8
   162e4:	ldr	r2, [sp, #116]	; 0x74
   162e8:	ldr	r3, [r1]
   162ec:	cmp	r2, r3
   162f0:	bne	1648c <close_stdin@@Base+0x30f0>
   162f4:	add	sp, sp, #124	; 0x7c
   162f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162fc:	lsr	r2, r9, #31
   16300:	tst	r7, r2
   16304:	bne	163a4 <close_stdin@@Base+0x3008>
   16308:	cmp	r2, #0
   1630c:	streq	r9, [sp, #4]
   16310:	bne	16490 <close_stdin@@Base+0x30f4>
   16314:	tst	r6, #2
   16318:	bne	16348 <close_stdin@@Base+0x2fac>
   1631c:	cmp	r4, #0
   16320:	beq	163ec <close_stdin@@Base+0x3050>
   16324:	ldrb	r2, [r4]
   16328:	cmp	r2, #46	; 0x2e
   1632c:	bne	163ec <close_stdin@@Base+0x3050>
   16330:	ldrb	r2, [r4, #1]
   16334:	cmp	r2, #46	; 0x2e
   16338:	bne	163ec <close_stdin@@Base+0x3050>
   1633c:	ldrb	r2, [r4, #2]
   16340:	cmp	r2, #0
   16344:	bne	163ec <close_stdin@@Base+0x3050>
   16348:	mov	r0, #3
   1634c:	ldr	r1, [sp, #4]
   16350:	add	r2, sp, #8
   16354:	bl	11438 <__fxstat64@plt>
   16358:	cmp	r0, #0
   1635c:	beq	16404 <close_stdin@@Base+0x3068>
   16360:	mvn	r8, #0
   16364:	cmp	r9, #0
   16368:	bge	162dc <close_stdin@@Base+0x2f40>
   1636c:	bl	11534 <__errno_location@plt>
   16370:	ldr	r5, [r0]
   16374:	mov	r4, r0
   16378:	ldr	r0, [sp, #4]
   1637c:	bl	11660 <close@plt>
   16380:	str	r5, [r4]
   16384:	b	162dc <close_stdin@@Base+0x2f40>
   16388:	ldrb	r3, [r4, #1]
   1638c:	cmp	r3, #46	; 0x2e
   16390:	bne	162ac <close_stdin@@Base+0x2f10>
   16394:	ldrb	r3, [r4, #2]
   16398:	rsbs	r7, r3, #1
   1639c:	movcc	r7, #0
   163a0:	b	162b0 <close_stdin@@Base+0x2f14>
   163a4:	tst	r6, #512	; 0x200
   163a8:	bne	16428 <close_stdin@@Base+0x308c>
   163ac:	mov	r1, r6
   163b0:	mov	r7, #1
   163b4:	ldr	r0, [sl, #32]
   163b8:	mov	r2, r4
   163bc:	bl	1613c <close_stdin@@Base+0x2da0>
   163c0:	cmp	r0, #0
   163c4:	str	r0, [sp, #4]
   163c8:	blt	16484 <close_stdin@@Base+0x30e8>
   163cc:	ldr	r6, [sl, #48]	; 0x30
   163d0:	b	16314 <close_stdin@@Base+0x2f78>
   163d4:	ldrd	r4, [fp]
   163d8:	ldrd	r0, [sp, #104]	; 0x68
   163dc:	cmp	r5, r1
   163e0:	cmpeq	r4, r0
   163e4:	bne	16418 <close_stdin@@Base+0x307c>
   163e8:	ldr	r6, [sl, #48]	; 0x30
   163ec:	tst	r6, #512	; 0x200
   163f0:	bne	1646c <close_stdin@@Base+0x30d0>
   163f4:	ldr	r0, [sp, #4]
   163f8:	bl	1160c <fchdir@plt>
   163fc:	mov	r8, r0
   16400:	b	16364 <close_stdin@@Base+0x2fc8>
   16404:	ldrd	r2, [r5]
   16408:	ldrd	r4, [sp, #8]
   1640c:	cmp	r3, r5
   16410:	cmpeq	r2, r4
   16414:	beq	163d4 <close_stdin@@Base+0x3038>
   16418:	bl	11534 <__errno_location@plt>
   1641c:	mov	r3, #2
   16420:	str	r3, [r0]
   16424:	b	16360 <close_stdin@@Base+0x2fc4>
   16428:	add	r7, sl, #60	; 0x3c
   1642c:	mov	r0, r7
   16430:	bl	190cc <fts_children@@Base+0x14b0>
   16434:	cmp	r0, #0
   16438:	bne	163ac <close_stdin@@Base+0x3010>
   1643c:	mov	r0, r7
   16440:	bl	19118 <fts_children@@Base+0x14fc>
   16444:	cmp	r0, #0
   16448:	str	r0, [sp, #4]
   1644c:	ldrlt	r1, [sl, #48]	; 0x30
   16450:	blt	163b0 <close_stdin@@Base+0x3014>
   16454:	ldr	r6, [sl, #48]	; 0x30
   16458:	mov	r7, #1
   1645c:	ldr	r9, [sp, #4]
   16460:	tst	r6, #2
   16464:	beq	163ec <close_stdin@@Base+0x3050>
   16468:	b	16348 <close_stdin@@Base+0x2fac>
   1646c:	eor	r2, r7, #1
   16470:	mov	r0, sl
   16474:	ldr	r1, [sp, #4]
   16478:	uxtb	r2, r2
   1647c:	bl	15dec <close_stdin@@Base+0x2a50>
   16480:	b	162dc <close_stdin@@Base+0x2f40>
   16484:	mvn	r8, #0
   16488:	b	162dc <close_stdin@@Base+0x2f40>
   1648c:	bl	113f0 <__stack_chk_fail@plt>
   16490:	mov	r1, r6
   16494:	b	163b4 <close_stdin@@Base+0x3018>
   16498:	muleq	r1, r0, sp
   1649c:	andeq	r0, r0, ip, lsr r1
   164a0:	push	{r4, r5, r6, r7, lr}
   164a4:	movw	r3, #258	; 0x102
   164a8:	ldr	r5, [pc, #216]	; 16588 <close_stdin@@Base+0x31ec>
   164ac:	and	r3, r0, r3
   164b0:	ldr	r4, [pc, #212]	; 1658c <close_stdin@@Base+0x31f0>
   164b4:	cmp	r3, #0
   164b8:	add	r5, pc, r5
   164bc:	sub	sp, sp, #36	; 0x24
   164c0:	mov	ip, r1
   164c4:	ldr	r6, [r5, r4]
   164c8:	mov	r3, r5
   164cc:	ldr	r3, [r6]
   164d0:	str	r3, [sp, #28]
   164d4:	bne	1652c <close_stdin@@Base+0x3190>
   164d8:	ldr	r3, [r2, #4]
   164dc:	cmp	r3, #0
   164e0:	beq	16514 <close_stdin@@Base+0x3178>
   164e4:	ldr	r1, [r3, #48]	; 0x30
   164e8:	cmp	r1, #0
   164ec:	blt	16514 <close_stdin@@Base+0x3178>
   164f0:	ldr	r7, [ip]
   164f4:	ldrd	r0, [r7, #16]
   164f8:	orrs	r4, r0, r1
   164fc:	beq	16584 <close_stdin@@Base+0x31e8>
   16500:	ldrd	r4, [r7]
   16504:	ldrd	r0, [r2, #168]	; 0xa8
   16508:	cmp	r5, r1
   1650c:	cmpeq	r4, r0
   16510:	beq	16558 <close_stdin@@Base+0x31bc>
   16514:	ldr	r2, [sp, #28]
   16518:	ldr	r3, [r6]
   1651c:	cmp	r2, r3
   16520:	bne	16580 <close_stdin@@Base+0x31e4>
   16524:	add	sp, sp, #36	; 0x24
   16528:	pop	{r4, r5, r6, r7, pc}
   1652c:	ldrd	r4, [r2, #72]	; 0x48
   16530:	mov	r1, sp
   16534:	ldrd	r2, [r2, #168]	; 0xa8
   16538:	ldr	r0, [ip]
   1653c:	strd	r4, [sp]
   16540:	strd	r2, [sp, #8]
   16544:	bl	18f60 <fts_children@@Base+0x1344>
   16548:	cmp	r0, #0
   1654c:	beq	16584 <close_stdin@@Base+0x31e8>
   16550:	bl	1139c <free@plt>
   16554:	b	16514 <close_stdin@@Base+0x3178>
   16558:	ldrd	r0, [r7, #8]
   1655c:	ldrd	r4, [r2, #72]	; 0x48
   16560:	cmp	r1, r5
   16564:	cmpeq	r0, r4
   16568:	ldrdeq	r0, [r3, #72]	; 0x48
   1656c:	strdeq	r0, [r7, #8]
   16570:	ldreq	r1, [ip]
   16574:	ldrdeq	r2, [r3, #168]	; 0xa8
   16578:	strdeq	r2, [r1]
   1657c:	b	16514 <close_stdin@@Base+0x3178>
   16580:	bl	113f0 <__stack_chk_fail@plt>
   16584:	bl	11654 <abort@plt>
   16588:	andeq	r5, r1, r0, asr #22
   1658c:	andeq	r0, r0, ip, lsr r1
   16590:	ldr	r3, [pc, #2256]	; 16e68 <close_stdin@@Base+0x3acc>
   16594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16598:	add	r3, pc, r3
   1659c:	ldr	r2, [pc, #2248]	; 16e6c <close_stdin@@Base+0x3ad0>
   165a0:	sub	sp, sp, #164	; 0xa4
   165a4:	ldr	r9, [r0]
   165a8:	mov	r5, r0
   165ac:	str	r1, [sp, #52]	; 0x34
   165b0:	ldr	r2, [r3, r2]
   165b4:	ldr	r0, [r9, #12]
   165b8:	adds	r1, r0, #0
   165bc:	ldr	r3, [r2]
   165c0:	str	r2, [sp, #48]	; 0x30
   165c4:	movne	r1, #1
   165c8:	cmp	r1, #0
   165cc:	str	r1, [sp, #44]	; 0x2c
   165d0:	str	r3, [sp, #156]	; 0x9c
   165d4:	bne	16b08 <close_stdin@@Base+0x376c>
   165d8:	ldr	r3, [r5, #48]	; 0x30
   165dc:	ldr	r1, [r9, #24]
   165e0:	and	r3, r3, #516	; 0x204
   165e4:	cmp	r3, #512	; 0x200
   165e8:	ldr	r3, [r5, #48]	; 0x30
   165ec:	ldreq	r0, [r5, #32]
   165f0:	mvnne	r0, #99	; 0x63
   165f4:	tst	r3, #16
   165f8:	moveq	r2, #18688	; 0x4900
   165fc:	bne	16a94 <close_stdin@@Base+0x36f8>
   16600:	tst	r3, #2048	; 0x800
   16604:	moveq	r3, #0
   16608:	movne	r3, #262144	; 0x40000
   1660c:	orr	r2, r3, r2
   16610:	bl	19580 <fts_children@@Base+0x1964>
   16614:	subs	r4, r0, #0
   16618:	blt	16d34 <close_stdin@@Base+0x3998>
   1661c:	mov	r1, #1
   16620:	bl	17d80 <fts_children@@Base+0x164>
   16624:	mov	r0, r4
   16628:	bl	115f4 <fdopendir@plt>
   1662c:	cmp	r0, #0
   16630:	beq	16d1c <close_stdin@@Base+0x3980>
   16634:	ldrh	r3, [r9, #60]	; 0x3c
   16638:	str	r0, [r9, #12]
   1663c:	cmp	r3, #11
   16640:	beq	16d50 <close_stdin@@Base+0x39b4>
   16644:	ldr	r0, [r5, #48]	; 0x30
   16648:	tst	r0, #256	; 0x100
   1664c:	bne	16b78 <close_stdin@@Base+0x37dc>
   16650:	ldr	r2, [r5, #44]	; 0x2c
   16654:	movw	r3, #34464	; 0x86a0
   16658:	movt	r3, #1
   1665c:	cmp	r2, #0
   16660:	mvnne	r3, #0
   16664:	str	r3, [sp, #20]
   16668:	ldr	r3, [sp, #52]	; 0x34
   1666c:	cmp	r3, #2
   16670:	moveq	r6, #0
   16674:	beq	1668c <close_stdin@@Base+0x32f0>
   16678:	ldr	r3, [r5, #48]	; 0x30
   1667c:	and	r3, r3, #24
   16680:	cmp	r3, #24
   16684:	mvnne	r6, #0
   16688:	beq	16b60 <close_stdin@@Base+0x37c4>
   1668c:	ldr	r1, [sp, #44]	; 0x2c
   16690:	cmp	r1, #0
   16694:	movne	r1, #1
   16698:	strne	r1, [sp, #60]	; 0x3c
   1669c:	beq	16a38 <close_stdin@@Base+0x369c>
   166a0:	ldr	r3, [r9, #40]	; 0x28
   166a4:	ldr	r2, [r9, #28]
   166a8:	str	r3, [sp, #28]
   166ac:	sub	r3, r3, #1
   166b0:	ldr	r1, [sp, #28]
   166b4:	ldrb	r2, [r2, r3]
   166b8:	cmp	r2, #47	; 0x2f
   166bc:	moveq	r1, r3
   166c0:	ands	r0, r0, #4
   166c4:	str	r1, [sp, #28]
   166c8:	ldrne	r3, [r5, #24]
   166cc:	movne	r1, #47	; 0x2f
   166d0:	ldrne	r0, [sp, #28]
   166d4:	streq	r0, [sp, #36]	; 0x24
   166d8:	addne	r2, r3, r0
   166dc:	strbne	r1, [r3, r0]
   166e0:	addne	r2, r2, #1
   166e4:	ldr	r3, [r9, #48]	; 0x30
   166e8:	add	r0, r5, #48	; 0x30
   166ec:	ldr	r1, [sp, #28]
   166f0:	add	r3, r3, #1
   166f4:	ldr	fp, [r5, #36]	; 0x24
   166f8:	str	r3, [sp, #24]
   166fc:	add	r1, r1, #1
   16700:	ldr	r3, [pc, #1896]	; 16e70 <close_stdin@@Base+0x3ad4>
   16704:	rsb	fp, r1, fp
   16708:	strne	r2, [sp, #36]	; 0x24
   1670c:	mov	r2, #0
   16710:	add	r3, pc, r3
   16714:	str	r1, [sp, #12]
   16718:	str	r2, [sp, #32]
   1671c:	mov	sl, r2
   16720:	mov	r7, r2
   16724:	str	r2, [sp, #16]
   16728:	str	r3, [sp, #40]	; 0x28
   1672c:	str	r0, [sp, #56]	; 0x38
   16730:	b	16800 <close_stdin@@Base+0x3464>
   16734:	ldr	r2, [sp, #12]
   16738:	adds	r0, r0, r2
   1673c:	bcs	168dc <close_stdin@@Base+0x3540>
   16740:	ldr	r3, [sp, #24]
   16744:	str	r3, [r4, #48]	; 0x30
   16748:	ldr	r3, [r5]
   1674c:	str	r0, [r4, #40]	; 0x28
   16750:	str	r3, [r4, #4]
   16754:	ldrd	r2, [r8]
   16758:	strd	r2, [r4, #168]	; 0xa8
   1675c:	ldr	r3, [r5, #48]	; 0x30
   16760:	tst	r3, #4
   16764:	addeq	r3, r4, #176	; 0xb0
   16768:	streq	r3, [r4, #24]
   1676c:	bne	16924 <close_stdin@@Base+0x3588>
   16770:	ldr	r3, [r5, #44]	; 0x2c
   16774:	cmp	r3, #0
   16778:	beq	16788 <close_stdin@@Base+0x33ec>
   1677c:	ldr	r3, [r5, #48]	; 0x30
   16780:	ands	r3, r3, #1024	; 0x400
   16784:	beq	16944 <close_stdin@@Base+0x35a8>
   16788:	ldr	r3, [r5, #48]	; 0x30
   1678c:	and	r3, r3, #24
   16790:	cmp	r3, #24
   16794:	movne	r2, #0
   16798:	beq	1697c <close_stdin@@Base+0x35e0>
   1679c:	mov	r0, #11
   167a0:	strh	r0, [r4, #60]	; 0x3c
   167a4:	ldrb	r3, [r8, #18]
   167a8:	sub	r3, r3, #1
   167ac:	cmp	r3, #11
   167b0:	ldrls	r1, [sp, #40]	; 0x28
   167b4:	movhi	r3, #0
   167b8:	ldrls	r3, [r1, r3, lsl #2]
   167bc:	cmp	r2, #0
   167c0:	moveq	r2, #2
   167c4:	movne	r2, #1
   167c8:	str	r3, [r4, #88]	; 0x58
   167cc:	mov	r3, #0
   167d0:	strd	r2, [r4, #120]	; 0x78
   167d4:	ldr	r2, [sp, #16]
   167d8:	add	r7, r7, #1
   167dc:	ldr	r0, [sp, #20]
   167e0:	mov	r3, #0
   167e4:	cmp	r2, #0
   167e8:	str	r3, [r4, #8]
   167ec:	streq	r4, [sp, #16]
   167f0:	strne	r4, [sl, #8]
   167f4:	cmp	r0, r7
   167f8:	bls	169a4 <close_stdin@@Base+0x3608>
   167fc:	mov	sl, r4
   16800:	ldr	r0, [r9, #12]
   16804:	cmp	r0, #0
   16808:	beq	169a4 <close_stdin@@Base+0x3608>
   1680c:	bl	115e8 <readdir64@plt>
   16810:	subs	r8, r0, #0
   16814:	beq	16990 <close_stdin@@Base+0x35f4>
   16818:	ldr	r3, [r5, #48]	; 0x30
   1681c:	tst	r3, #32
   16820:	bne	16830 <close_stdin@@Base+0x3494>
   16824:	ldrb	r3, [r8, #19]
   16828:	cmp	r3, #46	; 0x2e
   1682c:	beq	1695c <close_stdin@@Base+0x35c0>
   16830:	add	r6, r8, #19
   16834:	mov	r0, r6
   16838:	bl	11504 <strlen@plt>
   1683c:	mov	r1, r6
   16840:	mov	r2, r0
   16844:	mov	r0, r5
   16848:	bl	15d0c <close_stdin@@Base+0x2970>
   1684c:	subs	r4, r0, #0
   16850:	beq	16cd4 <close_stdin@@Base+0x3938>
   16854:	mov	r0, r6
   16858:	bl	11504 <strlen@plt>
   1685c:	cmp	fp, r0
   16860:	bhi	16734 <close_stdin@@Base+0x3398>
   16864:	mov	r3, r5
   16868:	ldr	r1, [sp, #28]
   1686c:	ldr	fp, [r3, #24]!
   16870:	add	r2, r1, #2
   16874:	add	r1, r5, #36	; 0x24
   16878:	add	r2, r2, r0
   1687c:	mov	r0, r3
   16880:	bl	16024 <close_stdin@@Base+0x2c88>
   16884:	cmp	r0, #0
   16888:	beq	16cd4 <close_stdin@@Base+0x3938>
   1688c:	ldr	r3, [r5, #24]
   16890:	cmp	r3, fp
   16894:	beq	168bc <close_stdin@@Base+0x3520>
   16898:	ldr	r2, [r5, #48]	; 0x30
   1689c:	tst	r2, #4
   168a0:	ldrne	r2, [sp, #12]
   168a4:	moveq	r0, #1
   168a8:	streq	r0, [sp, #32]
   168ac:	addne	r3, r3, r2
   168b0:	strne	r3, [sp, #36]	; 0x24
   168b4:	movne	r3, #1
   168b8:	strne	r3, [sp, #32]
   168bc:	ldr	r1, [sp, #12]
   168c0:	mov	r0, r6
   168c4:	ldr	fp, [r5, #36]	; 0x24
   168c8:	rsb	fp, r1, fp
   168cc:	bl	11504 <strlen@plt>
   168d0:	ldr	r2, [sp, #12]
   168d4:	adds	r0, r0, r2
   168d8:	bcc	16740 <close_stdin@@Base+0x33a4>
   168dc:	mov	r0, r4
   168e0:	mov	r4, #0
   168e4:	bl	1139c <free@plt>
   168e8:	ldr	r0, [sp, #16]
   168ec:	bl	15d7c <close_stdin@@Base+0x29e0>
   168f0:	ldr	r0, [r9, #12]
   168f4:	bl	11684 <closedir@plt>
   168f8:	str	r4, [r9, #12]
   168fc:	mov	r3, #7
   16900:	strh	r3, [r9, #60]	; 0x3c
   16904:	ldr	r3, [r5, #48]	; 0x30
   16908:	orr	r3, r3, #16384	; 0x4000
   1690c:	str	r3, [r5, #48]	; 0x30
   16910:	bl	11534 <__errno_location@plt>
   16914:	mov	r2, #36	; 0x24
   16918:	mov	r3, r4
   1691c:	str	r2, [r0]
   16920:	b	16b34 <close_stdin@@Base+0x3798>
   16924:	ldr	r3, [r4, #28]
   16928:	add	r1, r4, #176	; 0xb0
   1692c:	ldr	r2, [r4, #52]	; 0x34
   16930:	ldr	r0, [sp, #36]	; 0x24
   16934:	str	r3, [r4, #24]
   16938:	add	r2, r2, #1
   1693c:	bl	11390 <memmove@plt>
   16940:	b	16770 <close_stdin@@Base+0x33d4>
   16944:	ldr	r0, [r5, #32]
   16948:	mov	r2, r4
   1694c:	ldr	r1, [sp, #56]	; 0x38
   16950:	bl	15eb0 <close_stdin@@Base+0x2b14>
   16954:	strh	r0, [r4, #60]	; 0x3c
   16958:	b	167d4 <close_stdin@@Base+0x3438>
   1695c:	ldrb	r3, [r8, #20]
   16960:	cmp	r3, #0
   16964:	beq	16974 <close_stdin@@Base+0x35d8>
   16968:	ldrh	r3, [r8, #20]
   1696c:	cmp	r3, #46	; 0x2e
   16970:	bne	16830 <close_stdin@@Base+0x3494>
   16974:	mov	r4, sl
   16978:	b	167fc <close_stdin@@Base+0x3460>
   1697c:	ldrb	r3, [r8, #18]
   16980:	tst	r3, #251	; 0xfb
   16984:	moveq	r2, #0
   16988:	movne	r2, #1
   1698c:	b	1679c <close_stdin@@Base+0x3400>
   16990:	ldr	r0, [r9, #12]
   16994:	cmp	r0, #0
   16998:	beq	169a4 <close_stdin@@Base+0x3608>
   1699c:	bl	11684 <closedir@plt>
   169a0:	str	r8, [r9, #12]
   169a4:	ldr	r1, [sp, #32]
   169a8:	cmp	r1, #0
   169ac:	bne	16bc8 <close_stdin@@Base+0x382c>
   169b0:	ldr	r3, [r5, #48]	; 0x30
   169b4:	tst	r3, #4
   169b8:	beq	169ec <close_stdin@@Base+0x3650>
   169bc:	ldr	r3, [r5, #36]	; 0x24
   169c0:	ldr	r2, [sp, #12]
   169c4:	cmp	r3, r2
   169c8:	beq	169d4 <close_stdin@@Base+0x3638>
   169cc:	cmp	r7, #0
   169d0:	bne	169e0 <close_stdin@@Base+0x3644>
   169d4:	ldr	r3, [sp, #36]	; 0x24
   169d8:	sub	r3, r3, #1
   169dc:	str	r3, [sp, #36]	; 0x24
   169e0:	ldr	r0, [sp, #36]	; 0x24
   169e4:	mov	r3, #0
   169e8:	strb	r3, [r0]
   169ec:	ldr	r1, [sp, #44]	; 0x2c
   169f0:	ldr	r2, [sp, #60]	; 0x3c
   169f4:	eor	r3, r1, #1
   169f8:	tst	r2, r3
   169fc:	bne	16ab4 <close_stdin@@Base+0x3718>
   16a00:	cmp	r7, #0
   16a04:	beq	16da0 <close_stdin@@Base+0x3a04>
   16a08:	movw	r3, #10000	; 0x2710
   16a0c:	cmp	r7, r3
   16a10:	bls	16b1c <close_stdin@@Base+0x3780>
   16a14:	ldr	r3, [r5, #44]	; 0x2c
   16a18:	cmp	r3, #0
   16a1c:	beq	16dc0 <close_stdin@@Base+0x3a24>
   16a20:	mov	r0, r5
   16a24:	ldr	r1, [sp, #16]
   16a28:	mov	r2, r7
   16a2c:	bl	15c1c <close_stdin@@Base+0x2880>
   16a30:	mov	r3, r0
   16a34:	b	16b34 <close_stdin@@Base+0x3798>
   16a38:	adds	r6, r6, #0
   16a3c:	ldr	r2, [sp, #52]	; 0x34
   16a40:	movne	r6, #1
   16a44:	subs	r3, r2, #3
   16a48:	rsbs	r7, r3, #0
   16a4c:	adcs	r7, r7, r3
   16a50:	orrs	r3, r6, r7
   16a54:	beq	16b54 <close_stdin@@Base+0x37b8>
   16a58:	tst	r0, #512	; 0x200
   16a5c:	bne	16c58 <close_stdin@@Base+0x38bc>
   16a60:	mov	r3, #0
   16a64:	mov	r0, r5
   16a68:	str	r3, [sp]
   16a6c:	add	r1, r9, #72	; 0x48
   16a70:	add	r2, r9, #168	; 0xa8
   16a74:	mov	r3, r4
   16a78:	bl	16258 <close_stdin@@Base+0x2ebc>
   16a7c:	cmp	r0, #0
   16a80:	bne	16c74 <close_stdin@@Base+0x38d8>
   16a84:	mov	r3, #1
   16a88:	ldr	r0, [r5, #48]	; 0x30
   16a8c:	str	r3, [sp, #60]	; 0x3c
   16a90:	b	166a0 <close_stdin@@Base+0x3304>
   16a94:	tst	r3, #1
   16a98:	moveq	r2, #51456	; 0xc900
   16a9c:	beq	16600 <close_stdin@@Base+0x3264>
   16aa0:	ldr	r2, [r9, #48]	; 0x30
   16aa4:	cmp	r2, #0
   16aa8:	movne	r2, #51456	; 0xc900
   16aac:	moveq	r2, #18688	; 0x4900
   16ab0:	b	16600 <close_stdin@@Base+0x3264>
   16ab4:	ldr	r3, [sp, #52]	; 0x34
   16ab8:	cmp	r3, #1
   16abc:	cmpne	r7, #0
   16ac0:	bne	16a08 <close_stdin@@Base+0x366c>
   16ac4:	ldr	r3, [r9, #48]	; 0x30
   16ac8:	cmp	r3, #0
   16acc:	bne	16d70 <close_stdin@@Base+0x39d4>
   16ad0:	mov	r0, r5
   16ad4:	bl	15e60 <close_stdin@@Base+0x2ac4>
   16ad8:	adds	r0, r0, #0
   16adc:	movne	r0, #1
   16ae0:	cmp	r0, #0
   16ae4:	beq	16a00 <close_stdin@@Base+0x3664>
   16ae8:	mov	r3, #7
   16aec:	strh	r3, [r9, #60]	; 0x3c
   16af0:	ldr	r3, [r5, #48]	; 0x30
   16af4:	ldr	r0, [sp, #16]
   16af8:	orr	r3, r3, #16384	; 0x4000
   16afc:	str	r3, [r5, #48]	; 0x30
   16b00:	bl	15d7c <close_stdin@@Base+0x29e0>
   16b04:	b	16d48 <close_stdin@@Base+0x39ac>
   16b08:	bl	11600 <dirfd@plt>
   16b0c:	subs	r4, r0, #0
   16b10:	blt	16e2c <close_stdin@@Base+0x3a90>
   16b14:	ldr	r0, [r5, #48]	; 0x30
   16b18:	b	16650 <close_stdin@@Base+0x32b4>
   16b1c:	ldr	r3, [r5, #44]	; 0x2c
   16b20:	cmp	r3, #0
   16b24:	beq	16b30 <close_stdin@@Base+0x3794>
   16b28:	cmp	r7, #1
   16b2c:	bhi	16a20 <close_stdin@@Base+0x3684>
   16b30:	ldr	r3, [sp, #16]
   16b34:	ldr	r1, [sp, #48]	; 0x30
   16b38:	mov	r0, r3
   16b3c:	ldr	r2, [sp, #156]	; 0x9c
   16b40:	ldr	r3, [r1]
   16b44:	cmp	r2, r3
   16b48:	bne	16e64 <close_stdin@@Base+0x3ac8>
   16b4c:	add	sp, sp, #164	; 0xa4
   16b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b54:	ldr	r2, [sp, #44]	; 0x2c
   16b58:	str	r2, [sp, #60]	; 0x3c
   16b5c:	b	166a0 <close_stdin@@Base+0x3304>
   16b60:	tst	r0, #32
   16b64:	ldr	r6, [r9, #92]	; 0x5c
   16b68:	movne	r3, #0
   16b6c:	moveq	r3, #2
   16b70:	rsb	r6, r3, r6
   16b74:	b	1668c <close_stdin@@Base+0x32f0>
   16b78:	add	r6, r5, #56	; 0x38
   16b7c:	mov	r2, r9
   16b80:	mov	r1, r6
   16b84:	bl	164a0 <close_stdin@@Base+0x3104>
   16b88:	add	r1, r5, #48	; 0x30
   16b8c:	mov	r2, r9
   16b90:	mov	r3, #0
   16b94:	ldr	r0, [r5, #32]
   16b98:	bl	15eb0 <close_stdin@@Base+0x2b14>
   16b9c:	mov	r1, r6
   16ba0:	ldr	r0, [r5, #48]	; 0x30
   16ba4:	mov	r2, r9
   16ba8:	bl	161a4 <close_stdin@@Base+0x2e08>
   16bac:	subs	r6, r0, #0
   16bb0:	bne	16b14 <close_stdin@@Base+0x3778>
   16bb4:	bl	11534 <__errno_location@plt>
   16bb8:	mov	r2, #12
   16bbc:	mov	r3, r6
   16bc0:	str	r2, [r0]
   16bc4:	b	16b34 <close_stdin@@Base+0x3798>
   16bc8:	ldr	r3, [r5, #4]
   16bcc:	ldr	r2, [r5, #24]
   16bd0:	cmp	r3, #0
   16bd4:	beq	16c04 <close_stdin@@Base+0x3868>
   16bd8:	ldr	r1, [r3, #24]
   16bdc:	add	r0, r3, #176	; 0xb0
   16be0:	cmp	r1, r0
   16be4:	ldrne	r0, [r3, #28]
   16be8:	str	r2, [r3, #28]
   16bec:	rsbne	r1, r0, r1
   16bf0:	addne	r1, r2, r1
   16bf4:	strne	r1, [r3, #24]
   16bf8:	ldr	r3, [r3, #8]
   16bfc:	cmp	r3, #0
   16c00:	bne	16bd8 <close_stdin@@Base+0x383c>
   16c04:	ldr	r3, [sp, #16]
   16c08:	b	16c3c <close_stdin@@Base+0x38a0>
   16c0c:	ldr	r1, [r3, #24]
   16c10:	add	r0, r3, #176	; 0xb0
   16c14:	cmp	r1, r0
   16c18:	ldrne	r0, [r3, #28]
   16c1c:	str	r2, [r3, #28]
   16c20:	rsbne	r1, r0, r1
   16c24:	addne	r1, r2, r1
   16c28:	strne	r1, [r3, #24]
   16c2c:	ldr	r1, [r3, #8]
   16c30:	cmp	r1, #0
   16c34:	ldreq	r1, [r3, #4]
   16c38:	mov	r3, r1
   16c3c:	ldr	r1, [r3, #48]	; 0x30
   16c40:	cmp	r1, #0
   16c44:	bge	16c0c <close_stdin@@Base+0x3870>
   16c48:	ldr	r3, [r5, #48]	; 0x30
   16c4c:	tst	r3, #4
   16c50:	bne	169bc <close_stdin@@Base+0x3620>
   16c54:	b	169ec <close_stdin@@Base+0x3650>
   16c58:	mov	r0, r4
   16c5c:	bl	195ec <fts_children@@Base+0x19d0>
   16c60:	subs	r4, r0, #0
   16c64:	blt	16c74 <close_stdin@@Base+0x38d8>
   16c68:	mov	r1, #1
   16c6c:	bl	17d80 <fts_children@@Base+0x164>
   16c70:	b	16a60 <close_stdin@@Base+0x36c4>
   16c74:	tst	r6, r7
   16c78:	beq	16c88 <close_stdin@@Base+0x38ec>
   16c7c:	bl	11534 <__errno_location@plt>
   16c80:	ldr	r3, [r0]
   16c84:	str	r3, [r9, #32]
   16c88:	ldrh	r3, [r9, #62]	; 0x3e
   16c8c:	ldr	r0, [r9, #12]
   16c90:	orr	r3, r3, #1
   16c94:	strh	r3, [r9, #62]	; 0x3e
   16c98:	bl	11684 <closedir@plt>
   16c9c:	mov	r3, #0
   16ca0:	str	r3, [r9, #12]
   16ca4:	ldr	r3, [r5, #48]	; 0x30
   16ca8:	tst	r3, #512	; 0x200
   16cac:	beq	16cc0 <close_stdin@@Base+0x3924>
   16cb0:	cmp	r4, #0
   16cb4:	blt	16cc0 <close_stdin@@Base+0x3924>
   16cb8:	mov	r0, r4
   16cbc:	bl	11660 <close@plt>
   16cc0:	mov	r3, #0
   16cc4:	str	r3, [r9, #12]
   16cc8:	str	r3, [sp, #60]	; 0x3c
   16ccc:	ldr	r0, [r5, #48]	; 0x30
   16cd0:	b	166a0 <close_stdin@@Base+0x3304>
   16cd4:	bl	11534 <__errno_location@plt>
   16cd8:	mov	r6, r0
   16cdc:	mov	r0, r4
   16ce0:	ldr	r4, [r6]
   16ce4:	bl	1139c <free@plt>
   16ce8:	ldr	r0, [sp, #16]
   16cec:	bl	15d7c <close_stdin@@Base+0x29e0>
   16cf0:	ldr	r0, [r9, #12]
   16cf4:	bl	11684 <closedir@plt>
   16cf8:	mov	r2, #7
   16cfc:	mov	r3, #0
   16d00:	strh	r2, [r9, #60]	; 0x3c
   16d04:	str	r3, [r9, #12]
   16d08:	ldr	r2, [r5, #48]	; 0x30
   16d0c:	orr	r2, r2, #16384	; 0x4000
   16d10:	str	r2, [r5, #48]	; 0x30
   16d14:	str	r4, [r6]
   16d18:	b	16b34 <close_stdin@@Base+0x3798>
   16d1c:	bl	11534 <__errno_location@plt>
   16d20:	ldr	r6, [r0]
   16d24:	mov	r5, r0
   16d28:	mov	r0, r4
   16d2c:	bl	11660 <close@plt>
   16d30:	str	r6, [r5]
   16d34:	ldr	r2, [sp, #52]	; 0x34
   16d38:	mov	r4, #0
   16d3c:	str	r4, [r9, #12]
   16d40:	cmp	r2, #3
   16d44:	beq	16e48 <close_stdin@@Base+0x3aac>
   16d48:	mov	r3, #0
   16d4c:	b	16b34 <close_stdin@@Base+0x3798>
   16d50:	ldr	r0, [r5, #32]
   16d54:	add	r1, r5, #48	; 0x30
   16d58:	mov	r2, r9
   16d5c:	mov	r3, #0
   16d60:	bl	15eb0 <close_stdin@@Base+0x2b14>
   16d64:	strh	r0, [r9, #60]	; 0x3c
   16d68:	ldr	r0, [r5, #48]	; 0x30
   16d6c:	b	16650 <close_stdin@@Base+0x32b4>
   16d70:	ldr	r2, [r9, #4]
   16d74:	mov	r0, r5
   16d78:	ldr	r1, [pc, #244]	; 16e74 <close_stdin@@Base+0x3ad8>
   16d7c:	mvn	r3, #0
   16d80:	add	r1, pc, r1
   16d84:	str	r1, [sp]
   16d88:	add	r1, r2, #72	; 0x48
   16d8c:	add	r2, r2, #168	; 0xa8
   16d90:	bl	16258 <close_stdin@@Base+0x2ebc>
   16d94:	adds	r0, r0, #0
   16d98:	movne	r0, #1
   16d9c:	b	16ae0 <close_stdin@@Base+0x3744>
   16da0:	ldr	r0, [sp, #52]	; 0x34
   16da4:	cmp	r0, #3
   16da8:	ldr	r0, [sp, #16]
   16dac:	moveq	r3, #6
   16db0:	strheq	r3, [r9, #60]	; 0x3c
   16db4:	bl	15d7c <close_stdin@@Base+0x29e0>
   16db8:	mov	r3, #0
   16dbc:	b	16b34 <close_stdin@@Base+0x3798>
   16dc0:	ldr	r3, [r5, #48]	; 0x30
   16dc4:	tst	r3, #512	; 0x200
   16dc8:	beq	16b30 <close_stdin@@Base+0x3794>
   16dcc:	ldr	r0, [r5, #32]
   16dd0:	add	r1, sp, #64	; 0x40
   16dd4:	bl	11330 <fstatfs64@plt>
   16dd8:	cmp	r0, #0
   16ddc:	bne	16e00 <close_stdin@@Base+0x3a64>
   16de0:	ldr	r2, [sp, #64]	; 0x40
   16de4:	movw	r3, #26985	; 0x6969
   16de8:	cmp	r2, r3
   16dec:	beq	16b1c <close_stdin@@Base+0x3780>
   16df0:	movw	r3, #6548	; 0x1994
   16df4:	movt	r3, #258	; 0x102
   16df8:	cmp	r2, r3
   16dfc:	beq	16b1c <close_stdin@@Base+0x3780>
   16e00:	ldr	r3, [pc, #112]	; 16e78 <close_stdin@@Base+0x3adc>
   16e04:	mov	r2, r7
   16e08:	ldr	r1, [sp, #16]
   16e0c:	mov	r0, r5
   16e10:	add	r3, pc, r3
   16e14:	str	r3, [r5, #44]	; 0x2c
   16e18:	bl	15c1c <close_stdin@@Base+0x2880>
   16e1c:	mov	r3, #0
   16e20:	str	r3, [r5, #44]	; 0x2c
   16e24:	str	r0, [sp, #16]
   16e28:	b	16b30 <close_stdin@@Base+0x3794>
   16e2c:	ldr	r0, [r9, #12]
   16e30:	mov	r4, #0
   16e34:	bl	11684 <closedir@plt>
   16e38:	ldr	r2, [sp, #52]	; 0x34
   16e3c:	str	r4, [r9, #12]
   16e40:	cmp	r2, #3
   16e44:	bne	16d48 <close_stdin@@Base+0x39ac>
   16e48:	mov	r3, #4
   16e4c:	strh	r3, [r9, #60]	; 0x3c
   16e50:	bl	11534 <__errno_location@plt>
   16e54:	mov	r3, r4
   16e58:	ldr	r2, [r0]
   16e5c:	str	r2, [r9, #32]
   16e60:	b	16b34 <close_stdin@@Base+0x3798>
   16e64:	bl	113f0 <__stack_chk_fail@plt>
   16e68:	andeq	r5, r1, r0, ror #20
   16e6c:	andeq	r0, r0, ip, lsr r1
   16e70:	andeq	r5, r0, r0
   16e74:	andeq	r4, r0, r0, lsl r2
   16e78:			; <UNDEFINED> instruction: 0xffffedd4

00016e7c <fts_open@@Base>:
   16e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e80:	mov	fp, r1
   16e84:	bic	r1, r1, #8128	; 0x1fc0
   16e88:	sub	sp, sp, #20
   16e8c:	bics	r4, r1, #63	; 0x3f
   16e90:	mov	r7, r0
   16e94:	mov	r8, r2
   16e98:	bne	171c8 <fts_open@@Base+0x34c>
   16e9c:	and	r3, fp, #516	; 0x204
   16ea0:	cmp	r3, #516	; 0x204
   16ea4:	beq	171ec <fts_open@@Base+0x370>
   16ea8:	ands	r5, fp, #18
   16eac:	beq	171b0 <fts_open@@Base+0x334>
   16eb0:	mov	r0, #96	; 0x60
   16eb4:	bl	114b0 <malloc@plt>
   16eb8:	subs	r5, r0, #0
   16ebc:	beq	17100 <fts_open@@Base+0x284>
   16ec0:	mov	r1, r4
   16ec4:	mov	r2, #96	; 0x60
   16ec8:	bl	1154c <memset@plt>
   16ecc:	tst	fp, #2
   16ed0:	bicne	r3, fp, #512	; 0x200
   16ed4:	streq	fp, [r5, #48]	; 0x30
   16ed8:	str	r8, [r5, #44]	; 0x2c
   16edc:	orrne	r3, r3, #4
   16ee0:	strne	r3, [r5, #48]	; 0x30
   16ee4:	mvn	r3, #99	; 0x63
   16ee8:	str	r3, [r5, #32]
   16eec:	ldr	r3, [r7]
   16ef0:	cmp	r3, #0
   16ef4:	beq	171e4 <fts_open@@Base+0x368>
   16ef8:	mov	r6, r7
   16efc:	mov	r4, #0
   16f00:	mov	r0, r3
   16f04:	bl	11504 <strlen@plt>
   16f08:	ldr	r3, [r6, #4]!
   16f0c:	cmp	r4, r0
   16f10:	movcc	r4, r0
   16f14:	cmp	r3, #0
   16f18:	bne	16f00 <fts_open@@Base+0x84>
   16f1c:	add	r2, r4, #1
   16f20:	cmp	r2, #4096	; 0x1000
   16f24:	movcc	r2, #4096	; 0x1000
   16f28:	add	r0, r5, #24
   16f2c:	add	r1, r5, #36	; 0x24
   16f30:	bl	16024 <close_stdin@@Base+0x2c88>
   16f34:	subs	sl, r0, #0
   16f38:	beq	17144 <fts_open@@Base+0x2c8>
   16f3c:	ldr	r1, [r7]
   16f40:	cmp	r1, #0
   16f44:	beq	1715c <fts_open@@Base+0x2e0>
   16f48:	ldr	r1, [pc, #696]	; 17208 <fts_open@@Base+0x38c>
   16f4c:	mov	r0, r5
   16f50:	mov	r2, #0
   16f54:	add	r1, pc, r1
   16f58:	bl	15d0c <close_stdin@@Base+0x2970>
   16f5c:	subs	r9, r0, #0
   16f60:	beq	1713c <fts_open@@Base+0x2c0>
   16f64:	mvn	r3, #0
   16f68:	str	r3, [r9, #48]	; 0x30
   16f6c:	ldr	r1, [r7]
   16f70:	cmp	r8, #0
   16f74:	ldrne	sl, [r5, #48]	; 0x30
   16f78:	ubfxne	sl, sl, #10, #1
   16f7c:	cmp	r1, #0
   16f80:	beq	17200 <fts_open@@Base+0x384>
   16f84:	mov	r2, #0
   16f88:	and	fp, fp, #4096	; 0x1000
   16f8c:	add	r3, r5, #48	; 0x30
   16f90:	str	fp, [sp, #4]
   16f94:	str	r2, [sp, #8]
   16f98:	mov	fp, sl
   16f9c:	str	r3, [sp, #12]
   16fa0:	mov	r6, r2
   16fa4:	mov	r4, r2
   16fa8:	mov	sl, r1
   16fac:	b	16fe4 <fts_open@@Base+0x168>
   16fb0:	cmp	r8, #0
   16fb4:	mov	r3, #11
   16fb8:	mov	r2, #2
   16fbc:	strh	r3, [sl, #60]	; 0x3c
   16fc0:	mov	r3, #0
   16fc4:	strd	r2, [sl, #120]	; 0x78
   16fc8:	beq	1706c <fts_open@@Base+0x1f0>
   16fcc:	str	r4, [sl, #8]
   16fd0:	mov	r4, sl
   16fd4:	ldr	sl, [r7, #4]!
   16fd8:	add	r6, r6, #1
   16fdc:	cmp	sl, #0
   16fe0:	beq	17098 <fts_open@@Base+0x21c>
   16fe4:	mov	r0, sl
   16fe8:	bl	11504 <strlen@plt>
   16fec:	ldr	r3, [sp, #4]
   16ff0:	cmp	r3, #0
   16ff4:	mov	r2, r0
   16ff8:	bne	17014 <fts_open@@Base+0x198>
   16ffc:	cmp	r0, #2
   17000:	bls	17014 <fts_open@@Base+0x198>
   17004:	add	r3, sl, r0
   17008:	ldrb	r0, [r3, #-1]
   1700c:	cmp	r0, #47	; 0x2f
   17010:	beq	1710c <fts_open@@Base+0x290>
   17014:	mov	r1, sl
   17018:	mov	r0, r5
   1701c:	bl	15d0c <close_stdin@@Base+0x2970>
   17020:	subs	sl, r0, #0
   17024:	beq	1712c <fts_open@@Base+0x2b0>
   17028:	cmp	r4, #0
   1702c:	moveq	r3, #0
   17030:	andne	r3, fp, #1
   17034:	mov	r2, #0
   17038:	cmp	r3, r2
   1703c:	str	r2, [sl, #48]	; 0x30
   17040:	str	r9, [sl, #4]
   17044:	add	r2, sl, #176	; 0xb0
   17048:	str	r2, [sl, #24]
   1704c:	bne	16fb0 <fts_open@@Base+0x134>
   17050:	ldr	r0, [r5, #32]
   17054:	mov	r2, sl
   17058:	ldr	r1, [sp, #12]
   1705c:	bl	15eb0 <close_stdin@@Base+0x2b14>
   17060:	cmp	r8, #0
   17064:	strh	r0, [sl, #60]	; 0x3c
   17068:	bne	16fcc <fts_open@@Base+0x150>
   1706c:	cmp	r4, #0
   17070:	str	r8, [sl, #8]
   17074:	streq	sl, [sp, #8]
   17078:	add	r6, r6, #1
   1707c:	ldrne	r3, [sp, #8]
   17080:	moveq	r4, sl
   17084:	strne	sl, [sp, #8]
   17088:	strne	sl, [r3, #8]
   1708c:	ldr	sl, [r7, #4]!
   17090:	cmp	sl, #0
   17094:	bne	16fe4 <fts_open@@Base+0x168>
   17098:	cmp	r8, #0
   1709c:	cmpne	r6, #1
   170a0:	bhi	17198 <fts_open@@Base+0x31c>
   170a4:	ldr	r1, [pc, #352]	; 1720c <fts_open@@Base+0x390>
   170a8:	mov	r0, r5
   170ac:	mov	r2, #0
   170b0:	add	r1, pc, r1
   170b4:	bl	15d0c <close_stdin@@Base+0x2970>
   170b8:	cmp	r0, #0
   170bc:	str	r0, [r5]
   170c0:	beq	1712c <fts_open@@Base+0x2b0>
   170c4:	str	r4, [r0, #8]
   170c8:	mov	r2, #9
   170cc:	ldr	r3, [r5]
   170d0:	add	r1, r5, #56	; 0x38
   170d4:	strh	r2, [r3, #60]	; 0x3c
   170d8:	ldr	r0, [r5, #48]	; 0x30
   170dc:	bl	160a4 <close_stdin@@Base+0x2d08>
   170e0:	cmp	r0, #0
   170e4:	beq	1712c <fts_open@@Base+0x2b0>
   170e8:	ldr	r1, [r5, #48]	; 0x30
   170ec:	tst	r1, #516	; 0x204
   170f0:	beq	17164 <fts_open@@Base+0x2e8>
   170f4:	add	r0, r5, #60	; 0x3c
   170f8:	mvn	r1, #0
   170fc:	bl	190a0 <fts_children@@Base+0x1484>
   17100:	mov	r0, r5
   17104:	add	sp, sp, #20
   17108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1710c:	ldrb	r1, [r3, #-2]
   17110:	sub	r3, r3, #1
   17114:	cmp	r1, #47	; 0x2f
   17118:	bne	17014 <fts_open@@Base+0x198>
   1711c:	sub	r2, r2, #1
   17120:	cmp	r2, #1
   17124:	bne	1710c <fts_open@@Base+0x290>
   17128:	b	17014 <fts_open@@Base+0x198>
   1712c:	mov	r0, r4
   17130:	bl	15d7c <close_stdin@@Base+0x29e0>
   17134:	mov	r0, r9
   17138:	bl	1139c <free@plt>
   1713c:	ldr	r0, [r5, #24]
   17140:	bl	1139c <free@plt>
   17144:	mov	r0, r5
   17148:	mov	r5, #0
   1714c:	bl	1139c <free@plt>
   17150:	mov	r0, r5
   17154:	add	sp, sp, #20
   17158:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1715c:	mov	r9, r1
   17160:	b	16f70 <fts_open@@Base+0xf4>
   17164:	ldr	r2, [pc, #164]	; 17210 <fts_open@@Base+0x394>
   17168:	ldr	r0, [r5, #32]
   1716c:	add	r2, pc, r2
   17170:	bl	1613c <close_stdin@@Base+0x2da0>
   17174:	mvn	r1, #0
   17178:	cmp	r0, #0
   1717c:	str	r0, [r5, #28]
   17180:	add	r0, r5, #60	; 0x3c
   17184:	ldrlt	r3, [r5, #48]	; 0x30
   17188:	orrlt	r3, r3, #4
   1718c:	strlt	r3, [r5, #48]	; 0x30
   17190:	bl	190a0 <fts_children@@Base+0x1484>
   17194:	b	17100 <fts_open@@Base+0x284>
   17198:	mov	r1, r4
   1719c:	mov	r2, r6
   171a0:	mov	r0, r5
   171a4:	bl	15c1c <close_stdin@@Base+0x2880>
   171a8:	mov	r4, r0
   171ac:	b	170a4 <fts_open@@Base+0x228>
   171b0:	bl	11534 <__errno_location@plt>
   171b4:	mov	r3, #22
   171b8:	str	r3, [r0]
   171bc:	mov	r0, r5
   171c0:	add	sp, sp, #20
   171c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171c8:	bl	11534 <__errno_location@plt>
   171cc:	mov	r5, #0
   171d0:	mov	r3, #22
   171d4:	str	r3, [r0]
   171d8:	mov	r0, r5
   171dc:	add	sp, sp, #20
   171e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171e4:	mov	r2, #4096	; 0x1000
   171e8:	b	16f28 <fts_open@@Base+0xac>
   171ec:	bl	11534 <__errno_location@plt>
   171f0:	mov	r5, r4
   171f4:	mov	r3, #22
   171f8:	str	r3, [r0]
   171fc:	b	17100 <fts_open@@Base+0x284>
   17200:	mov	r4, r1
   17204:	b	170a4 <fts_open@@Base+0x228>
   17208:	ldrdeq	r3, [r0], -r4
   1720c:	andeq	r3, r0, r8, ror fp
   17210:	andeq	r3, r0, r0, lsr #28

00017214 <fts_close@@Base>:
   17214:	push	{r4, r5, r6, lr}
   17218:	mov	r5, r0
   1721c:	ldr	r3, [r0]
   17220:	cmp	r3, #0
   17224:	beq	17260 <fts_close@@Base+0x4c>
   17228:	ldr	r2, [r3, #48]	; 0x30
   1722c:	cmp	r2, #0
   17230:	blt	1734c <fts_close@@Base+0x138>
   17234:	ldr	r4, [r3, #8]
   17238:	mov	r0, r3
   1723c:	cmp	r4, #0
   17240:	ldreq	r4, [r3, #4]
   17244:	bl	1139c <free@plt>
   17248:	ldr	r2, [r4, #48]	; 0x30
   1724c:	mov	r3, r4
   17250:	cmp	r2, #0
   17254:	bge	17234 <fts_close@@Base+0x20>
   17258:	mov	r0, r4
   1725c:	bl	1139c <free@plt>
   17260:	ldr	r0, [r5, #4]
   17264:	cmp	r0, #0
   17268:	beq	17270 <fts_close@@Base+0x5c>
   1726c:	bl	15d7c <close_stdin@@Base+0x29e0>
   17270:	ldr	r0, [r5, #8]
   17274:	bl	1139c <free@plt>
   17278:	ldr	r0, [r5, #24]
   1727c:	bl	1139c <free@plt>
   17280:	ldr	r3, [r5, #48]	; 0x30
   17284:	tst	r3, #512	; 0x200
   17288:	beq	17300 <fts_close@@Base+0xec>
   1728c:	ldr	r0, [r5, #32]
   17290:	cmp	r0, #0
   17294:	blt	172a4 <fts_close@@Base+0x90>
   17298:	bl	11660 <close@plt>
   1729c:	cmp	r0, #0
   172a0:	bne	17340 <fts_close@@Base+0x12c>
   172a4:	mov	r4, #0
   172a8:	add	r0, r5, #60	; 0x3c
   172ac:	bl	15db4 <close_stdin@@Base+0x2a18>
   172b0:	ldr	r0, [r5, #52]	; 0x34
   172b4:	cmp	r0, #0
   172b8:	beq	172c0 <fts_close@@Base+0xac>
   172bc:	bl	18aa8 <fts_children@@Base+0xe8c>
   172c0:	ldr	r2, [r5, #48]	; 0x30
   172c4:	movw	r3, #258	; 0x102
   172c8:	ldr	r0, [r5, #56]	; 0x38
   172cc:	and	r3, r2, r3
   172d0:	cmp	r3, #0
   172d4:	beq	17338 <fts_close@@Base+0x124>
   172d8:	cmp	r0, #0
   172dc:	beq	172e4 <fts_close@@Base+0xd0>
   172e0:	bl	18aa8 <fts_children@@Base+0xe8c>
   172e4:	mov	r0, r5
   172e8:	bl	1139c <free@plt>
   172ec:	cmp	r4, #0
   172f0:	moveq	r3, r4
   172f4:	bne	1737c <fts_close@@Base+0x168>
   172f8:	mov	r0, r3
   172fc:	pop	{r4, r5, r6, pc}
   17300:	tst	r3, #4
   17304:	bne	172a4 <fts_close@@Base+0x90>
   17308:	ldr	r0, [r5, #28]
   1730c:	bl	1160c <fchdir@plt>
   17310:	cmp	r0, #0
   17314:	bne	17354 <fts_close@@Base+0x140>
   17318:	ldr	r0, [r5, #28]
   1731c:	bl	11660 <close@plt>
   17320:	cmp	r0, #0
   17324:	beq	172a4 <fts_close@@Base+0x90>
   17328:	bl	11534 <__errno_location@plt>
   1732c:	mov	r6, r0
   17330:	ldr	r4, [r6]
   17334:	b	172a8 <fts_close@@Base+0x94>
   17338:	bl	1139c <free@plt>
   1733c:	b	172e4 <fts_close@@Base+0xd0>
   17340:	bl	11534 <__errno_location@plt>
   17344:	ldr	r4, [r0]
   17348:	b	172a8 <fts_close@@Base+0x94>
   1734c:	mov	r4, r3
   17350:	b	17258 <fts_close@@Base+0x44>
   17354:	bl	11534 <__errno_location@plt>
   17358:	mov	r6, r0
   1735c:	ldr	r0, [r5, #28]
   17360:	ldr	r4, [r6]
   17364:	bl	11660 <close@plt>
   17368:	cmp	r0, #0
   1736c:	beq	172a8 <fts_close@@Base+0x94>
   17370:	cmp	r4, #0
   17374:	bne	172a8 <fts_close@@Base+0x94>
   17378:	b	17330 <fts_close@@Base+0x11c>
   1737c:	bl	11534 <__errno_location@plt>
   17380:	mvn	r3, #0
   17384:	str	r4, [r0]
   17388:	b	172f8 <fts_close@@Base+0xe4>

0001738c <fts_read@@Base>:
   1738c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17390:	sub	sp, sp, #124	; 0x7c
   17394:	ldr	r9, [pc, #2100]	; 17bd0 <fts_read@@Base+0x844>
   17398:	mov	r8, r0
   1739c:	ldr	r3, [pc, #2096]	; 17bd4 <fts_read@@Base+0x848>
   173a0:	add	r9, pc, r9
   173a4:	ldr	fp, [r0]
   173a8:	ldr	sl, [r9, r3]
   173ac:	cmp	fp, #0
   173b0:	ldr	r3, [sl]
   173b4:	str	r3, [sp, #116]	; 0x74
   173b8:	beq	1755c <fts_read@@Base+0x1d0>
   173bc:	ldr	r3, [r0, #48]	; 0x30
   173c0:	ands	r3, r3, #16384	; 0x4000
   173c4:	bne	1755c <fts_read@@Base+0x1d0>
   173c8:	ldrh	r2, [fp, #64]	; 0x40
   173cc:	mov	r1, #3
   173d0:	strh	r1, [fp, #64]	; 0x40
   173d4:	cmp	r2, #1
   173d8:	beq	17774 <fts_read@@Base+0x3e8>
   173dc:	cmp	r2, #2
   173e0:	ldrh	r3, [fp, #60]	; 0x3c
   173e4:	beq	174d8 <fts_read@@Base+0x14c>
   173e8:	cmp	r3, #1
   173ec:	bne	1741c <fts_read@@Base+0x90>
   173f0:	b	17550 <fts_read@@Base+0x1c4>
   173f4:	str	r6, [r8]
   173f8:	mov	r0, fp
   173fc:	bl	1139c <free@plt>
   17400:	ldr	r4, [r6, #48]	; 0x30
   17404:	cmp	r4, #0
   17408:	beq	1757c <fts_read@@Base+0x1f0>
   1740c:	ldrh	r3, [r6, #64]	; 0x40
   17410:	cmp	r3, #4
   17414:	bne	17678 <fts_read@@Base+0x2ec>
   17418:	mov	fp, r6
   1741c:	ldr	r6, [fp, #8]
   17420:	cmp	r6, #0
   17424:	bne	173f4 <fts_read@@Base+0x68>
   17428:	ldr	r4, [fp, #4]
   1742c:	ldr	r3, [r4, #12]
   17430:	cmp	r3, #0
   17434:	bne	1797c <fts_read@@Base+0x5f0>
   17438:	str	r4, [r8]
   1743c:	mov	r0, fp
   17440:	bl	1139c <free@plt>
   17444:	ldr	r3, [r4, #48]	; 0x30
   17448:	cmn	r3, #1
   1744c:	beq	17838 <fts_read@@Base+0x4ac>
   17450:	ldrh	r3, [r4, #60]	; 0x3c
   17454:	cmp	r3, #11
   17458:	beq	176ec <fts_read@@Base+0x360>
   1745c:	ldr	r3, [r4, #40]	; 0x28
   17460:	mov	r1, #0
   17464:	ldr	r2, [r8, #24]
   17468:	strb	r1, [r2, r3]
   1746c:	ldr	r3, [r4, #48]	; 0x30
   17470:	cmp	r3, r1
   17474:	beq	177e0 <fts_read@@Base+0x454>
   17478:	ldrh	r3, [r4, #62]	; 0x3e
   1747c:	tst	r3, #2
   17480:	beq	17790 <fts_read@@Base+0x404>
   17484:	ldr	r3, [r8, #48]	; 0x30
   17488:	tst	r3, #4
   1748c:	beq	177f4 <fts_read@@Base+0x468>
   17490:	ldr	r0, [r4, #36]	; 0x24
   17494:	bl	11660 <close@plt>
   17498:	ldr	r3, [r4, #32]
   1749c:	cmp	r3, #0
   174a0:	movne	r3, #7
   174a4:	strhne	r3, [r4, #60]	; 0x3c
   174a8:	bne	174c4 <fts_read@@Base+0x138>
   174ac:	mov	r3, #6
   174b0:	add	r1, r8, #56	; 0x38
   174b4:	strh	r3, [r4, #60]	; 0x3c
   174b8:	mov	r2, r4
   174bc:	ldr	r0, [r8, #48]	; 0x30
   174c0:	bl	164a0 <close_stdin@@Base+0x3104>
   174c4:	ldr	r3, [r8, #48]	; 0x30
   174c8:	tst	r3, #16384	; 0x4000
   174cc:	bne	1755c <fts_read@@Base+0x1d0>
   174d0:	mov	r6, r4
   174d4:	b	17560 <fts_read@@Base+0x1d4>
   174d8:	sub	r2, r3, #12
   174dc:	cmp	r2, #1
   174e0:	bls	17810 <fts_read@@Base+0x484>
   174e4:	cmp	r3, #1
   174e8:	bne	1741c <fts_read@@Base+0x90>
   174ec:	ldr	r3, [r8, #48]	; 0x30
   174f0:	tst	r3, #64	; 0x40
   174f4:	beq	176f0 <fts_read@@Base+0x364>
   174f8:	ldrd	r6, [fp, #72]	; 0x48
   174fc:	ldrd	r4, [r8, #16]
   17500:	cmp	r7, r5
   17504:	cmpeq	r6, r4
   17508:	beq	176f0 <fts_read@@Base+0x364>
   1750c:	ldrh	r3, [fp, #62]	; 0x3e
   17510:	tst	r3, #2
   17514:	bne	17970 <fts_read@@Base+0x5e4>
   17518:	ldr	r0, [r8, #4]
   1751c:	cmp	r0, #0
   17520:	beq	17530 <fts_read@@Base+0x1a4>
   17524:	bl	15d7c <close_stdin@@Base+0x29e0>
   17528:	mov	r3, #0
   1752c:	str	r3, [r8, #4]
   17530:	mov	r3, #6
   17534:	add	r1, r8, #56	; 0x38
   17538:	strh	r3, [fp, #60]	; 0x3c
   1753c:	mov	r2, fp
   17540:	ldr	r0, [r8, #48]	; 0x30
   17544:	mov	r6, fp
   17548:	bl	164a0 <close_stdin@@Base+0x3104>
   1754c:	b	17560 <fts_read@@Base+0x1d4>
   17550:	cmp	r2, #4
   17554:	bne	174ec <fts_read@@Base+0x160>
   17558:	b	1750c <fts_read@@Base+0x180>
   1755c:	mov	r6, #0
   17560:	ldr	r2, [sp, #116]	; 0x74
   17564:	mov	r0, r6
   17568:	ldr	r3, [sl]
   1756c:	cmp	r2, r3
   17570:	bne	17ae4 <fts_read@@Base+0x758>
   17574:	add	sp, sp, #124	; 0x7c
   17578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1757c:	mov	r0, r8
   17580:	bl	15e60 <close_stdin@@Base+0x2ac4>
   17584:	cmp	r0, #0
   17588:	bne	178e0 <fts_read@@Base+0x554>
   1758c:	ldr	r2, [r8, #48]	; 0x30
   17590:	movw	r3, #258	; 0x102
   17594:	ldr	r0, [r8, #56]	; 0x38
   17598:	and	r3, r2, r3
   1759c:	cmp	r3, #0
   175a0:	beq	178c8 <fts_read@@Base+0x53c>
   175a4:	cmp	r0, #0
   175a8:	beq	175b0 <fts_read@@Base+0x224>
   175ac:	bl	18aa8 <fts_children@@Base+0xe8c>
   175b0:	ldr	r3, [r6, #52]	; 0x34
   175b4:	add	r4, r6, #176	; 0xb0
   175b8:	add	r2, r3, #1
   175bc:	mov	r1, r4
   175c0:	str	r3, [r6, #40]	; 0x28
   175c4:	ldr	r0, [r8, #24]
   175c8:	bl	11390 <memmove@plt>
   175cc:	mov	r0, r4
   175d0:	mov	r1, #47	; 0x2f
   175d4:	bl	115d0 <strrchr@plt>
   175d8:	cmp	r0, #0
   175dc:	beq	1760c <fts_read@@Base+0x280>
   175e0:	cmp	r4, r0
   175e4:	beq	178d0 <fts_read@@Base+0x544>
   175e8:	add	r7, r0, #1
   175ec:	mov	r0, r7
   175f0:	bl	11504 <strlen@plt>
   175f4:	mov	r1, r7
   175f8:	mov	r5, r0
   175fc:	mov	r0, r4
   17600:	add	r2, r5, #1
   17604:	bl	11390 <memmove@plt>
   17608:	str	r5, [r6, #52]	; 0x34
   1760c:	ldr	r3, [r8, #24]
   17610:	add	r1, r8, #56	; 0x38
   17614:	str	r3, [r6, #28]
   17618:	str	r3, [r6, #24]
   1761c:	ldr	r0, [r8, #48]	; 0x30
   17620:	bl	160a4 <close_stdin@@Base+0x2d08>
   17624:	str	r6, [r8]
   17628:	ldrh	r0, [r6, #60]	; 0x3c
   1762c:	cmp	r0, #11
   17630:	beq	176d0 <fts_read@@Base+0x344>
   17634:	cmp	r0, #1
   17638:	bne	17560 <fts_read@@Base+0x1d4>
   1763c:	ldr	r3, [r6, #48]	; 0x30
   17640:	add	r1, r8, #56	; 0x38
   17644:	ldr	r0, [r8, #48]	; 0x30
   17648:	mov	r2, r6
   1764c:	cmp	r3, #0
   17650:	ldrdeq	r4, [r6, #72]	; 0x48
   17654:	strdeq	r4, [r8, #16]
   17658:	bl	161a4 <close_stdin@@Base+0x2e08>
   1765c:	subs	r4, r0, #0
   17660:	bne	17560 <fts_read@@Base+0x1d4>
   17664:	bl	11534 <__errno_location@plt>
   17668:	mov	r6, r4
   1766c:	mov	r3, #12
   17670:	str	r3, [r0]
   17674:	b	17560 <fts_read@@Base+0x1d4>
   17678:	cmp	r3, #2
   1767c:	beq	179ac <fts_read@@Base+0x620>
   17680:	ldr	r0, [r6, #4]
   17684:	mov	ip, #47	; 0x2f
   17688:	ldr	r2, [r8, #24]
   1768c:	add	r1, r6, #176	; 0xb0
   17690:	ldr	r3, [r0, #40]	; 0x28
   17694:	ldr	lr, [r0, #28]
   17698:	sub	r0, r3, #1
   1769c:	ldrb	lr, [lr, r0]
   176a0:	cmp	lr, ip
   176a4:	moveq	r3, r0
   176a8:	add	r0, r2, r3
   176ac:	strb	ip, [r2, r3]
   176b0:	add	r0, r0, #1
   176b4:	ldr	r2, [r6, #52]	; 0x34
   176b8:	add	r2, r2, #1
   176bc:	bl	11390 <memmove@plt>
   176c0:	str	r6, [r8]
   176c4:	ldrh	r0, [r6, #60]	; 0x3c
   176c8:	cmp	r0, #11
   176cc:	bne	17634 <fts_read@@Base+0x2a8>
   176d0:	ldrd	r4, [r6, #120]	; 0x78
   176d4:	cmp	r5, #0
   176d8:	cmpeq	r4, #2
   176dc:	beq	178f4 <fts_read@@Base+0x568>
   176e0:	cmp	r5, #0
   176e4:	cmpeq	r4, #1
   176e8:	beq	17560 <fts_read@@Base+0x1d4>
   176ec:	bl	11654 <abort@plt>
   176f0:	ldr	r0, [r8, #4]
   176f4:	cmp	r0, #0
   176f8:	beq	1786c <fts_read@@Base+0x4e0>
   176fc:	tst	r3, #8192	; 0x2000
   17700:	bne	17858 <fts_read@@Base+0x4cc>
   17704:	ldr	ip, [fp, #24]
   17708:	mov	r0, r8
   1770c:	add	r1, fp, #72	; 0x48
   17710:	add	r2, fp, #168	; 0xa8
   17714:	mvn	r3, #0
   17718:	str	ip, [sp]
   1771c:	bl	16258 <close_stdin@@Base+0x2ebc>
   17720:	cmp	r0, #0
   17724:	beq	17764 <fts_read@@Base+0x3d8>
   17728:	bl	11534 <__errno_location@plt>
   1772c:	ldrh	r3, [fp, #62]	; 0x3e
   17730:	orr	r3, r3, #1
   17734:	ldr	r2, [r0]
   17738:	strh	r3, [fp, #62]	; 0x3e
   1773c:	str	r2, [fp, #32]
   17740:	ldr	r6, [r8, #4]
   17744:	cmp	r6, #0
   17748:	beq	17768 <fts_read@@Base+0x3dc>
   1774c:	ldr	r3, [r6, #4]
   17750:	ldr	r3, [r3, #24]
   17754:	str	r3, [r6, #24]
   17758:	ldr	r6, [r6, #8]
   1775c:	cmp	r6, #0
   17760:	bne	1774c <fts_read@@Base+0x3c0>
   17764:	ldr	r6, [r8, #4]
   17768:	mov	r3, #0
   1776c:	str	r3, [r8, #4]
   17770:	b	17680 <fts_read@@Base+0x2f4>
   17774:	ldr	r0, [r0, #32]
   17778:	add	r1, r8, #48	; 0x30
   1777c:	mov	r2, fp
   17780:	mov	r6, fp
   17784:	bl	15eb0 <close_stdin@@Base+0x2b14>
   17788:	strh	r0, [fp, #60]	; 0x3c
   1778c:	b	17560 <fts_read@@Base+0x1d4>
   17790:	tst	r3, #1
   17794:	bne	17498 <fts_read@@Base+0x10c>
   17798:	ldr	r2, [r4, #4]
   1779c:	mov	r0, r8
   177a0:	ldr	r1, [pc, #1072]	; 17bd8 <fts_read@@Base+0x84c>
   177a4:	mvn	r3, #0
   177a8:	add	r1, pc, r1
   177ac:	str	r1, [sp]
   177b0:	add	r1, r2, #72	; 0x48
   177b4:	add	r2, r2, #168	; 0xa8
   177b8:	bl	16258 <close_stdin@@Base+0x2ebc>
   177bc:	cmp	r0, #0
   177c0:	beq	17498 <fts_read@@Base+0x10c>
   177c4:	bl	11534 <__errno_location@plt>
   177c8:	ldr	r3, [r0]
   177cc:	str	r3, [r4, #32]
   177d0:	ldr	r3, [r8, #48]	; 0x30
   177d4:	orr	r3, r3, #16384	; 0x4000
   177d8:	str	r3, [r8, #48]	; 0x30
   177dc:	b	17498 <fts_read@@Base+0x10c>
   177e0:	mov	r0, r8
   177e4:	bl	15e60 <close_stdin@@Base+0x2ac4>
   177e8:	cmp	r0, #0
   177ec:	beq	17498 <fts_read@@Base+0x10c>
   177f0:	b	177c4 <fts_read@@Base+0x438>
   177f4:	tst	r3, #512	; 0x200
   177f8:	beq	179d8 <fts_read@@Base+0x64c>
   177fc:	mov	r0, r8
   17800:	ldr	r1, [r4, #36]	; 0x24
   17804:	mov	r2, #1
   17808:	bl	15dec <close_stdin@@Base+0x2a50>
   1780c:	b	17490 <fts_read@@Base+0x104>
   17810:	ldr	r0, [r0, #32]
   17814:	add	r1, r8, #48	; 0x30
   17818:	mov	r2, fp
   1781c:	mov	r3, #1
   17820:	bl	15eb0 <close_stdin@@Base+0x2b14>
   17824:	cmp	r0, #1
   17828:	strh	r0, [fp, #60]	; 0x3c
   1782c:	beq	17a14 <fts_read@@Base+0x688>
   17830:	mov	r6, fp
   17834:	b	17624 <fts_read@@Base+0x298>
   17838:	mov	r0, r4
   1783c:	bl	1139c <free@plt>
   17840:	bl	11534 <__errno_location@plt>
   17844:	mov	r3, #0
   17848:	mov	r6, r3
   1784c:	str	r3, [r0]
   17850:	str	r3, [r8]
   17854:	b	17560 <fts_read@@Base+0x1d4>
   17858:	bic	r3, r3, #8192	; 0x2000
   1785c:	str	r3, [r8, #48]	; 0x30
   17860:	bl	15d7c <close_stdin@@Base+0x29e0>
   17864:	mov	r3, #0
   17868:	str	r3, [r8, #4]
   1786c:	mov	r0, r8
   17870:	mov	r1, #3
   17874:	bl	16590 <close_stdin@@Base+0x31f4>
   17878:	cmp	r0, #0
   1787c:	str	r0, [r8, #4]
   17880:	movne	r6, r0
   17884:	bne	17768 <fts_read@@Base+0x3dc>
   17888:	ldr	r0, [r8, #48]	; 0x30
   1788c:	tst	r0, #16384	; 0x4000
   17890:	bne	1755c <fts_read@@Base+0x1d0>
   17894:	ldr	r3, [fp, #32]
   17898:	cmp	r3, #0
   1789c:	beq	178b4 <fts_read@@Base+0x528>
   178a0:	ldrh	r3, [fp, #60]	; 0x3c
   178a4:	cmp	r3, #4
   178a8:	movne	r3, #7
   178ac:	strhne	r3, [fp, #60]	; 0x3c
   178b0:	ldrne	r0, [r8, #48]	; 0x30
   178b4:	add	r1, r8, #56	; 0x38
   178b8:	mov	r2, fp
   178bc:	bl	164a0 <close_stdin@@Base+0x3104>
   178c0:	mov	r6, fp
   178c4:	b	17560 <fts_read@@Base+0x1d4>
   178c8:	bl	1139c <free@plt>
   178cc:	b	175b0 <fts_read@@Base+0x224>
   178d0:	ldrb	r3, [r6, #177]	; 0xb1
   178d4:	cmp	r3, #0
   178d8:	bne	175e8 <fts_read@@Base+0x25c>
   178dc:	b	1760c <fts_read@@Base+0x280>
   178e0:	ldr	r3, [r8, #48]	; 0x30
   178e4:	mov	r6, r4
   178e8:	orr	r3, r3, #16384	; 0x4000
   178ec:	str	r3, [r8, #48]	; 0x30
   178f0:	b	17560 <fts_read@@Base+0x1d4>
   178f4:	ldr	r3, [r6, #48]	; 0x30
   178f8:	ldr	r4, [r6, #4]
   178fc:	cmp	r3, #0
   17900:	ble	17920 <fts_read@@Base+0x594>
   17904:	ldr	r3, [r4, #56]	; 0x38
   17908:	cmp	r3, #0
   1790c:	bne	17920 <fts_read@@Base+0x594>
   17910:	ldr	r3, [r8, #48]	; 0x30
   17914:	and	r3, r3, #24
   17918:	cmp	r3, #24
   1791c:	beq	17a9c <fts_read@@Base+0x710>
   17920:	mov	r3, #0
   17924:	ldr	r0, [r8, #32]
   17928:	add	r1, r8, #48	; 0x30
   1792c:	mov	r2, r6
   17930:	bl	15eb0 <close_stdin@@Base+0x2b14>
   17934:	ldr	r3, [r6, #88]	; 0x58
   17938:	and	r3, r3, #61440	; 0xf000
   1793c:	cmp	r3, #16384	; 0x4000
   17940:	strh	r0, [r6, #60]	; 0x3c
   17944:	bne	17634 <fts_read@@Base+0x2a8>
   17948:	ldr	r3, [r6, #48]	; 0x30
   1794c:	cmp	r3, #0
   17950:	beq	17634 <fts_read@@Base+0x2a8>
   17954:	ldr	r3, [r4, #56]	; 0x38
   17958:	cmp	r3, #0
   1795c:	beq	17634 <fts_read@@Base+0x2a8>
   17960:	sub	r3, r3, #1
   17964:	str	r3, [r4, #56]	; 0x38
   17968:	ldrh	r0, [r6, #60]	; 0x3c
   1796c:	b	17634 <fts_read@@Base+0x2a8>
   17970:	ldr	r0, [fp, #36]	; 0x24
   17974:	bl	11660 <close@plt>
   17978:	b	17518 <fts_read@@Base+0x18c>
   1797c:	str	r4, [r8]
   17980:	mov	r0, r8
   17984:	ldr	r3, [r4, #40]	; 0x28
   17988:	mov	r1, #3
   1798c:	ldr	r2, [r8, #24]
   17990:	strb	r6, [r2, r3]
   17994:	bl	16590 <close_stdin@@Base+0x31f4>
   17998:	subs	r6, r0, #0
   1799c:	beq	17a50 <fts_read@@Base+0x6c4>
   179a0:	mov	r0, fp
   179a4:	bl	1139c <free@plt>
   179a8:	b	17680 <fts_read@@Base+0x2f4>
   179ac:	ldr	r0, [r8, #32]
   179b0:	add	r1, r8, #48	; 0x30
   179b4:	mov	r2, r6
   179b8:	mov	r3, #1
   179bc:	bl	15eb0 <close_stdin@@Base+0x2b14>
   179c0:	cmp	r0, #1
   179c4:	strh	r0, [r6, #60]	; 0x3c
   179c8:	beq	17a64 <fts_read@@Base+0x6d8>
   179cc:	mov	r3, #3
   179d0:	strh	r3, [r6, #64]	; 0x40
   179d4:	b	17680 <fts_read@@Base+0x2f4>
   179d8:	ldr	r0, [r4, #36]	; 0x24
   179dc:	bl	1160c <fchdir@plt>
   179e0:	cmp	r0, #0
   179e4:	beq	17490 <fts_read@@Base+0x104>
   179e8:	bl	11534 <__errno_location@plt>
   179ec:	ldr	r5, [r0]
   179f0:	mov	r6, r0
   179f4:	ldr	r0, [r4, #36]	; 0x24
   179f8:	bl	11660 <close@plt>
   179fc:	str	r5, [r6]
   17a00:	str	r5, [r4, #32]
   17a04:	ldr	r3, [r8, #48]	; 0x30
   17a08:	orr	r3, r3, #16384	; 0x4000
   17a0c:	str	r3, [r8, #48]	; 0x30
   17a10:	b	17490 <fts_read@@Base+0x104>
   17a14:	ldr	r1, [r8, #48]	; 0x30
   17a18:	tst	r1, #4
   17a1c:	bne	17830 <fts_read@@Base+0x4a4>
   17a20:	ldr	r2, [pc, #436]	; 17bdc <fts_read@@Base+0x850>
   17a24:	ldr	r0, [r8, #32]
   17a28:	add	r2, pc, r2
   17a2c:	bl	1613c <close_stdin@@Base+0x2da0>
   17a30:	cmp	r0, #0
   17a34:	str	r0, [fp, #36]	; 0x24
   17a38:	blt	17ae8 <fts_read@@Base+0x75c>
   17a3c:	ldrh	r3, [fp, #62]	; 0x3e
   17a40:	mov	r6, fp
   17a44:	orr	r3, r3, #2
   17a48:	strh	r3, [fp, #62]	; 0x3e
   17a4c:	b	17624 <fts_read@@Base+0x298>
   17a50:	ldr	r3, [r8, #48]	; 0x30
   17a54:	tst	r3, #16384	; 0x4000
   17a58:	bne	1755c <fts_read@@Base+0x1d0>
   17a5c:	ldr	r4, [fp, #4]
   17a60:	b	17438 <fts_read@@Base+0xac>
   17a64:	ldr	r1, [r8, #48]	; 0x30
   17a68:	tst	r1, #4
   17a6c:	bne	179cc <fts_read@@Base+0x640>
   17a70:	ldr	r2, [pc, #360]	; 17be0 <fts_read@@Base+0x854>
   17a74:	ldr	r0, [r8, #32]
   17a78:	add	r2, pc, r2
   17a7c:	bl	1613c <close_stdin@@Base+0x2da0>
   17a80:	cmp	r0, #0
   17a84:	str	r0, [r6, #36]	; 0x24
   17a88:	blt	17b04 <fts_read@@Base+0x778>
   17a8c:	ldrh	r3, [r6, #62]	; 0x3e
   17a90:	orr	r3, r3, #2
   17a94:	strh	r3, [r6, #62]	; 0x3e
   17a98:	b	179cc <fts_read@@Base+0x640>
   17a9c:	ldr	r7, [r4, #44]	; 0x2c
   17aa0:	ldr	r3, [r7, #48]	; 0x30
   17aa4:	ldr	r5, [r7, #52]	; 0x34
   17aa8:	tst	r3, #512	; 0x200
   17aac:	beq	17920 <fts_read@@Base+0x594>
   17ab0:	cmp	r5, #0
   17ab4:	beq	17b88 <fts_read@@Base+0x7fc>
   17ab8:	ldrd	r2, [r4, #72]	; 0x48
   17abc:	add	r1, sp, #120	; 0x78
   17ac0:	mov	r0, r5
   17ac4:	strd	r2, [r1, #-112]!	; 0xffffff90
   17ac8:	bl	18610 <fts_children@@Base+0x9f4>
   17acc:	subs	fp, r0, #0
   17ad0:	beq	17b1c <fts_read@@Base+0x790>
   17ad4:	ldrb	r7, [fp, #8]
   17ad8:	cmp	r7, #0
   17adc:	bne	17968 <fts_read@@Base+0x5dc>
   17ae0:	b	17920 <fts_read@@Base+0x594>
   17ae4:	bl	113f0 <__stack_chk_fail@plt>
   17ae8:	bl	11534 <__errno_location@plt>
   17aec:	mov	r6, fp
   17af0:	mov	r3, #7
   17af4:	ldr	r2, [r0]
   17af8:	strh	r3, [fp, #60]	; 0x3c
   17afc:	str	r2, [fp, #32]
   17b00:	b	17624 <fts_read@@Base+0x298>
   17b04:	bl	11534 <__errno_location@plt>
   17b08:	mov	r3, #7
   17b0c:	ldr	r2, [r0]
   17b10:	strh	r3, [r6, #60]	; 0x3c
   17b14:	str	r2, [r6, #32]
   17b18:	b	179cc <fts_read@@Base+0x640>
   17b1c:	mov	r0, #16
   17b20:	bl	114b0 <malloc@plt>
   17b24:	subs	r9, r0, #0
   17b28:	beq	17920 <fts_read@@Base+0x594>
   17b2c:	ldr	r0, [r7, #32]
   17b30:	add	r1, sp, #24
   17b34:	bl	11330 <fstatfs64@plt>
   17b38:	cmp	r0, #0
   17b3c:	movne	r7, fp
   17b40:	bne	17b5c <fts_read@@Base+0x7d0>
   17b44:	ldr	r7, [sp, #24]
   17b48:	movw	r3, #18803	; 0x4973
   17b4c:	movt	r3, #21093	; 0x5265
   17b50:	subs	r3, r7, r3
   17b54:	rsbs	r7, r3, #0
   17b58:	adcs	r7, r7, r3
   17b5c:	strb	r7, [r9, #8]
   17b60:	mov	r0, r5
   17b64:	ldrd	r2, [r4, #72]	; 0x48
   17b68:	mov	r1, r9
   17b6c:	strd	r2, [r9]
   17b70:	bl	18eec <fts_children@@Base+0x12d0>
   17b74:	cmp	r0, #0
   17b78:	beq	17bc4 <fts_read@@Base+0x838>
   17b7c:	cmp	r9, r0
   17b80:	beq	17ad8 <fts_read@@Base+0x74c>
   17b84:	b	176ec <fts_read@@Base+0x360>
   17b88:	ldr	ip, [pc, #84]	; 17be4 <fts_read@@Base+0x858>
   17b8c:	mov	r1, r5
   17b90:	ldr	r2, [pc, #80]	; 17be8 <fts_read@@Base+0x85c>
   17b94:	mov	r0, #13
   17b98:	ldr	r3, [pc, #76]	; 17bec <fts_read@@Base+0x860>
   17b9c:	ldr	ip, [r9, ip]
   17ba0:	add	r2, pc, r2
   17ba4:	add	r3, pc, r3
   17ba8:	str	ip, [sp]
   17bac:	bl	188c4 <fts_children@@Base+0xca8>
   17bb0:	cmp	r0, #0
   17bb4:	mov	r5, r0
   17bb8:	str	r0, [r7, #52]	; 0x34
   17bbc:	bne	17ab8 <fts_read@@Base+0x72c>
   17bc0:	b	17920 <fts_read@@Base+0x594>
   17bc4:	mov	r0, r9
   17bc8:	bl	1139c <free@plt>
   17bcc:	b	17920 <fts_read@@Base+0x594>
   17bd0:	andeq	r4, r1, r8, asr ip
   17bd4:	andeq	r0, r0, ip, lsr r1
   17bd8:	andeq	r3, r0, r8, ror #15
   17bdc:	andeq	r3, r0, r4, ror #10
   17be0:	andeq	r3, r0, r4, lsl r5
   17be4:	andeq	r0, r0, r8, lsr r1
   17be8:			; <UNDEFINED> instruction: 0xffffe00c
   17bec:			; <UNDEFINED> instruction: 0xffffe024

00017bf0 <fts_set@@Base>:
   17bf0:	cmp	r2, #4
   17bf4:	push	{r3, lr}
   17bf8:	movls	r3, #0
   17bfc:	strhls	r2, [r1, #64]	; 0x40
   17c00:	bls	17c14 <fts_set@@Base+0x24>
   17c04:	bl	11534 <__errno_location@plt>
   17c08:	mov	r3, #1
   17c0c:	mov	r2, #22
   17c10:	str	r2, [r0]
   17c14:	mov	r0, r3
   17c18:	pop	{r3, pc}

00017c1c <fts_children@@Base>:
   17c1c:	push	{r4, r5, r6, r7, r8, lr}
   17c20:	bics	r7, r1, #8192	; 0x2000
   17c24:	mov	r5, r1
   17c28:	mov	r4, r0
   17c2c:	bne	17d28 <fts_children@@Base+0x10c>
   17c30:	bl	11534 <__errno_location@plt>
   17c34:	ldr	r6, [r4]
   17c38:	str	r7, [r0]
   17c3c:	mov	r8, r0
   17c40:	ldr	r3, [r4, #48]	; 0x30
   17c44:	ands	r3, r3, #16384	; 0x4000
   17c48:	bne	17d40 <fts_children@@Base+0x124>
   17c4c:	ldrh	r2, [r6, #60]	; 0x3c
   17c50:	cmp	r2, #9
   17c54:	ldreq	r3, [r6, #8]
   17c58:	beq	17cc8 <fts_children@@Base+0xac>
   17c5c:	cmp	r2, #1
   17c60:	bne	17cc8 <fts_children@@Base+0xac>
   17c64:	ldr	r0, [r4, #4]
   17c68:	cmp	r0, #0
   17c6c:	beq	17c74 <fts_children@@Base+0x58>
   17c70:	bl	15d7c <close_stdin@@Base+0x29e0>
   17c74:	cmp	r5, #8192	; 0x2000
   17c78:	ldreq	r3, [r4, #48]	; 0x30
   17c7c:	moveq	r5, #2
   17c80:	movne	r5, #1
   17c84:	orreq	r3, r3, #8192	; 0x2000
   17c88:	streq	r3, [r4, #48]	; 0x30
   17c8c:	ldr	r3, [r6, #48]	; 0x30
   17c90:	cmp	r3, #0
   17c94:	bne	17cb4 <fts_children@@Base+0x98>
   17c98:	ldr	r3, [r6, #24]
   17c9c:	ldrb	r3, [r3]
   17ca0:	cmp	r3, #47	; 0x2f
   17ca4:	beq	17cb4 <fts_children@@Base+0x98>
   17ca8:	ldr	r1, [r4, #48]	; 0x30
   17cac:	ands	r6, r1, #4
   17cb0:	beq	17cd0 <fts_children@@Base+0xb4>
   17cb4:	mov	r1, r5
   17cb8:	mov	r0, r4
   17cbc:	bl	16590 <close_stdin@@Base+0x31f4>
   17cc0:	mov	r3, r0
   17cc4:	str	r0, [r4, #4]
   17cc8:	mov	r0, r3
   17ccc:	pop	{r4, r5, r6, r7, r8, pc}
   17cd0:	ldr	r2, [pc, #164]	; 17d7c <fts_children@@Base+0x160>
   17cd4:	ldr	r0, [r4, #32]
   17cd8:	add	r2, pc, r2
   17cdc:	bl	1613c <close_stdin@@Base+0x2da0>
   17ce0:	subs	r7, r0, #0
   17ce4:	strlt	r6, [r4, #4]
   17ce8:	movlt	r3, r6
   17cec:	blt	17cc8 <fts_children@@Base+0xac>
   17cf0:	mov	r1, r5
   17cf4:	mov	r0, r4
   17cf8:	bl	16590 <close_stdin@@Base+0x31f4>
   17cfc:	ldr	r3, [r4, #48]	; 0x30
   17d00:	ands	r5, r3, #512	; 0x200
   17d04:	str	r0, [r4, #4]
   17d08:	beq	17d48 <fts_children@@Base+0x12c>
   17d0c:	mov	r1, r7
   17d10:	mov	r0, r4
   17d14:	mov	r2, #1
   17d18:	bl	15dec <close_stdin@@Base+0x2a50>
   17d1c:	ldr	r3, [r4, #4]
   17d20:	mov	r0, r3
   17d24:	pop	{r4, r5, r6, r7, r8, pc}
   17d28:	bl	11534 <__errno_location@plt>
   17d2c:	mov	r3, #0
   17d30:	mov	r2, #22
   17d34:	str	r2, [r0]
   17d38:	mov	r0, r3
   17d3c:	pop	{r4, r5, r6, r7, r8, pc}
   17d40:	mov	r3, r7
   17d44:	b	17cc8 <fts_children@@Base+0xac>
   17d48:	mov	r0, r7
   17d4c:	bl	1160c <fchdir@plt>
   17d50:	cmp	r0, #0
   17d54:	bne	17d64 <fts_children@@Base+0x148>
   17d58:	mov	r0, r7
   17d5c:	bl	11660 <close@plt>
   17d60:	b	17d1c <fts_children@@Base+0x100>
   17d64:	ldr	r4, [r8]
   17d68:	mov	r0, r7
   17d6c:	bl	11660 <close@plt>
   17d70:	mov	r3, r5
   17d74:	str	r4, [r8]
   17d78:	b	17cc8 <fts_children@@Base+0xac>
   17d7c:			; <UNDEFINED> instruction: 0x000032b4
   17d80:	push	{r3, r4, r5, lr}
   17d84:	mov	r2, #0
   17d88:	mov	r4, r1
   17d8c:	mov	r1, #1
   17d90:	mov	r5, r0
   17d94:	bl	196d4 <fts_children@@Base+0x1ab8>
   17d98:	cmp	r0, #0
   17d9c:	blt	17ddc <fts_children@@Base+0x1c0>
   17da0:	cmp	r4, #0
   17da4:	orrne	r2, r0, #1
   17da8:	biceq	r2, r0, #1
   17dac:	cmp	r2, r0
   17db0:	beq	17dd4 <fts_children@@Base+0x1b8>
   17db4:	mov	r0, r5
   17db8:	mov	r1, #2
   17dbc:	bl	196d4 <fts_children@@Base+0x1ab8>
   17dc0:	cmn	r0, #1
   17dc4:	movne	r0, #0
   17dc8:	moveq	r0, #1
   17dcc:	rsb	r0, r0, #0
   17dd0:	pop	{r3, r4, r5, pc}
   17dd4:	mov	r0, #0
   17dd8:	pop	{r3, r4, r5, pc}
   17ddc:	mvn	r0, #0
   17de0:	pop	{r3, r4, r5, pc}
   17de4:	movw	r1, #1030	; 0x406
   17de8:	mov	r2, #0
   17dec:	b	196d4 <fts_children@@Base+0x1ab8>
   17df0:	push	{r4, r5, r6, lr}
   17df4:	mov	r4, r0
   17df8:	bl	11474 <__fpending@plt>
   17dfc:	mov	r6, r0
   17e00:	mov	r0, r4
   17e04:	ldr	r4, [r4]
   17e08:	bl	19634 <fts_children@@Base+0x1a18>
   17e0c:	and	r4, r4, #32
   17e10:	adds	r5, r0, #0
   17e14:	movne	r5, #1
   17e18:	cmp	r4, #0
   17e1c:	bne	17e3c <fts_children@@Base+0x220>
   17e20:	cmp	r5, #0
   17e24:	beq	17e34 <fts_children@@Base+0x218>
   17e28:	cmp	r6, #0
   17e2c:	beq	17e58 <fts_children@@Base+0x23c>
   17e30:	mvn	r4, #0
   17e34:	mov	r0, r4
   17e38:	pop	{r4, r5, r6, pc}
   17e3c:	cmp	r5, #0
   17e40:	bne	17e30 <fts_children@@Base+0x214>
   17e44:	bl	11534 <__errno_location@plt>
   17e48:	mvn	r4, #0
   17e4c:	str	r5, [r0]
   17e50:	mov	r0, r4
   17e54:	pop	{r4, r5, r6, pc}
   17e58:	bl	11534 <__errno_location@plt>
   17e5c:	ldr	r4, [r0]
   17e60:	subs	r4, r4, #9
   17e64:	mvnne	r4, #0
   17e68:	mov	r0, r4
   17e6c:	pop	{r4, r5, r6, pc}
   17e70:	mov	r2, #0
   17e74:	mov	r3, #0
   17e78:	movw	r1, #62998	; 0xf616
   17e7c:	strd	r2, [r0, #16]
   17e80:	movt	r1, #149	; 0x95
   17e84:	str	r1, [r0, #24]
   17e88:	bx	lr
   17e8c:	push	{r3, r4, r5, r6, r7, lr}
   17e90:	movw	r3, #62998	; 0xf616
   17e94:	ldr	r2, [r0, #24]
   17e98:	movt	r3, #149	; 0x95
   17e9c:	mov	ip, r0
   17ea0:	cmp	r2, r3
   17ea4:	bne	17f38 <fts_children@@Base+0x31c>
   17ea8:	ldrd	r6, [r0, #16]
   17eac:	orrs	r0, r6, r7
   17eb0:	beq	17ef4 <fts_children@@Base+0x2d8>
   17eb4:	ldrd	r4, [r1, #96]	; 0x60
   17eb8:	ldrd	r2, [ip]
   17ebc:	cmp	r5, r3
   17ec0:	cmpeq	r4, r2
   17ec4:	beq	17f20 <fts_children@@Base+0x304>
   17ec8:	adds	r2, r6, #1
   17ecc:	adc	r3, r7, #0
   17ed0:	and	r6, r6, r2
   17ed4:	and	r7, r7, r3
   17ed8:	strd	r2, [ip, #16]
   17edc:	orrs	r0, r6, r7
   17ee0:	bne	17f18 <fts_children@@Base+0x2fc>
   17ee4:	orrs	r0, r2, r3
   17ee8:	bne	17f00 <fts_children@@Base+0x2e4>
   17eec:	mov	r0, #1
   17ef0:	pop	{r3, r4, r5, r6, r7, pc}
   17ef4:	mov	r2, #1
   17ef8:	mov	r3, #0
   17efc:	strd	r2, [ip, #16]
   17f00:	ldrd	r2, [r1]
   17f04:	mov	r0, #0
   17f08:	strd	r2, [ip, #8]
   17f0c:	ldrd	r2, [r1, #96]	; 0x60
   17f10:	strd	r2, [ip]
   17f14:	pop	{r3, r4, r5, r6, r7, pc}
   17f18:	mov	r0, #0
   17f1c:	pop	{r3, r4, r5, r6, r7, pc}
   17f20:	ldrd	r4, [r1]
   17f24:	ldrd	r2, [ip, #8]
   17f28:	cmp	r5, r3
   17f2c:	cmpeq	r4, r2
   17f30:	bne	17ec8 <fts_children@@Base+0x2ac>
   17f34:	b	17eec <fts_children@@Base+0x2d0>
   17f38:	ldr	r0, [pc, #24]	; 17f58 <fts_children@@Base+0x33c>
   17f3c:	mov	r2, #60	; 0x3c
   17f40:	ldr	r1, [pc, #20]	; 17f5c <fts_children@@Base+0x340>
   17f44:	ldr	r3, [pc, #20]	; 17f60 <fts_children@@Base+0x344>
   17f48:	add	r0, pc, r0
   17f4c:	add	r1, pc, r1
   17f50:	add	r3, pc, r3
   17f54:	bl	11690 <__assert_fail@plt>
   17f58:	andeq	r3, r0, r4, lsl #16
   17f5c:	andeq	r3, r0, r8, lsl r8
   17f60:	strdeq	r3, [r0], -r0
   17f64:	push	{r1, r2, r3}
   17f68:	ldr	r3, [pc, #88]	; 17fc8 <fts_children@@Base+0x3ac>
   17f6c:	ldr	r2, [pc, #88]	; 17fcc <fts_children@@Base+0x3b0>
   17f70:	add	r3, pc, r3
   17f74:	push	{r4, lr}
   17f78:	sub	sp, sp, #12
   17f7c:	ldr	r4, [r3, r2]
   17f80:	ldr	r1, [sp, #20]
   17f84:	ldr	r3, [r4]
   17f88:	ands	r2, r1, #64	; 0x40
   17f8c:	ldrne	r2, [sp, #24]
   17f90:	str	r3, [sp, #4]
   17f94:	addne	r3, sp, #24
   17f98:	strne	r3, [sp]
   17f9c:	bl	11498 <open64@plt>
   17fa0:	bl	195f8 <fts_children@@Base+0x19dc>
   17fa4:	ldr	r2, [sp, #4]
   17fa8:	ldr	r3, [r4]
   17fac:	cmp	r2, r3
   17fb0:	bne	17fc4 <fts_children@@Base+0x3a8>
   17fb4:	add	sp, sp, #12
   17fb8:	pop	{r4, lr}
   17fbc:	add	sp, sp, #12
   17fc0:	bx	lr
   17fc4:	bl	113f0 <__stack_chk_fail@plt>
   17fc8:	andeq	r4, r1, r8, lsl #1
   17fcc:	andeq	r0, r0, ip, lsr r1
   17fd0:	cmp	r0, #9
   17fd4:	push	{r4, r5, r6, r7, r8, lr}
   17fd8:	bhi	1806c <fts_children@@Base+0x450>
   17fdc:	mov	r7, #11
   17fe0:	movw	r8, #43691	; 0xaaab
   17fe4:	movt	r8, #43690	; 0xaaaa
   17fe8:	cmp	r7, #9
   17fec:	bls	18064 <fts_children@@Base+0x448>
   17ff0:	umull	r2, r3, r8, r7
   17ff4:	lsr	r3, r3, #1
   17ff8:	add	r3, r3, r3, lsl #1
   17ffc:	cmp	r7, r3
   18000:	beq	18050 <fts_children@@Base+0x434>
   18004:	mov	r6, #16
   18008:	mov	r5, #9
   1800c:	mov	r4, #3
   18010:	b	18020 <fts_children@@Base+0x404>
   18014:	bl	19a34 <fts_children@@Base+0x1e18>
   18018:	cmp	r1, #0
   1801c:	beq	18050 <fts_children@@Base+0x434>
   18020:	add	r5, r5, r6
   18024:	add	r4, r4, #2
   18028:	cmp	r5, r7
   1802c:	mov	r0, r7
   18030:	add	r6, r6, #8
   18034:	mov	r1, r4
   18038:	bcc	18014 <fts_children@@Base+0x3f8>
   1803c:	mov	r1, r4
   18040:	mov	r0, r7
   18044:	bl	19a34 <fts_children@@Base+0x1e18>
   18048:	cmp	r1, #0
   1804c:	bne	1805c <fts_children@@Base+0x440>
   18050:	add	r7, r7, #2
   18054:	cmn	r7, #1
   18058:	bne	17fe8 <fts_children@@Base+0x3cc>
   1805c:	mov	r0, r7
   18060:	pop	{r4, r5, r6, r7, r8, pc}
   18064:	mov	r4, #3
   18068:	b	1803c <fts_children@@Base+0x420>
   1806c:	orr	r7, r0, #1
   18070:	cmn	r7, #1
   18074:	bne	17fe0 <fts_children@@Base+0x3c4>
   18078:	b	1805c <fts_children@@Base+0x440>
   1807c:	push	{r3, lr}
   18080:	ror	r0, r0, #3
   18084:	bl	19a34 <fts_children@@Base+0x1e18>
   18088:	mov	r0, r1
   1808c:	pop	{r3, pc}
   18090:	subs	r3, r1, r0
   18094:	rsbs	r0, r3, #0
   18098:	adcs	r0, r0, r3
   1809c:	bx	lr
   180a0:	push	{r4, lr}
   180a4:	mov	r4, r0
   180a8:	ldr	r3, [r4, #24]
   180ac:	mov	r0, r1
   180b0:	ldr	r1, [r4, #8]
   180b4:	blx	r3
   180b8:	ldr	r3, [r4, #8]
   180bc:	cmp	r0, r3
   180c0:	bcs	180d0 <fts_children@@Base+0x4b4>
   180c4:	ldr	r3, [r4]
   180c8:	add	r0, r3, r0, lsl #3
   180cc:	pop	{r4, pc}
   180d0:	bl	11654 <abort@plt>
   180d4:	push	{r4, r5, r6, r7, r8, lr}
   180d8:	mov	r7, r2
   180dc:	mov	r8, r3
   180e0:	mov	r6, r0
   180e4:	mov	r5, r1
   180e8:	bl	180a0 <fts_children@@Base+0x484>
   180ec:	str	r0, [r7]
   180f0:	mov	r4, r0
   180f4:	ldr	r2, [r0]
   180f8:	cmp	r2, #0
   180fc:	beq	18190 <fts_children@@Base+0x574>
   18100:	cmp	r5, r2
   18104:	beq	18124 <fts_children@@Base+0x508>
   18108:	mov	r1, r2
   1810c:	ldr	r3, [r6, #28]
   18110:	mov	r0, r5
   18114:	blx	r3
   18118:	cmp	r0, #0
   1811c:	beq	18184 <fts_children@@Base+0x568>
   18120:	ldr	r2, [r4]
   18124:	cmp	r8, #0
   18128:	beq	18154 <fts_children@@Base+0x538>
   1812c:	ldr	r3, [r4, #4]
   18130:	cmp	r3, #0
   18134:	streq	r3, [r4]
   18138:	ldmne	r3, {r0, r1}
   1813c:	movne	ip, #0
   18140:	stmne	r4, {r0, r1}
   18144:	strne	ip, [r3]
   18148:	ldrne	r1, [r6, #36]	; 0x24
   1814c:	strne	r1, [r3, #4]
   18150:	strne	r3, [r6, #36]	; 0x24
   18154:	mov	r0, r2
   18158:	pop	{r4, r5, r6, r7, r8, pc}
   1815c:	ldr	r2, [ip]
   18160:	cmp	r2, r5
   18164:	beq	181a4 <fts_children@@Base+0x588>
   18168:	mov	r1, r2
   1816c:	mov	r0, r5
   18170:	ldr	r2, [r6, #28]
   18174:	blx	r2
   18178:	cmp	r0, #0
   1817c:	bne	1819c <fts_children@@Base+0x580>
   18180:	ldr	r4, [r4, #4]
   18184:	ldr	ip, [r4, #4]
   18188:	cmp	ip, #0
   1818c:	bne	1815c <fts_children@@Base+0x540>
   18190:	mov	r2, #0
   18194:	mov	r0, r2
   18198:	pop	{r4, r5, r6, r7, r8, pc}
   1819c:	ldr	ip, [r4, #4]
   181a0:	ldr	r2, [ip]
   181a4:	cmp	r8, #0
   181a8:	beq	18154 <fts_children@@Base+0x538>
   181ac:	ldr	r1, [ip, #4]
   181b0:	mov	r3, #0
   181b4:	mov	r0, r2
   181b8:	str	r1, [r4, #4]
   181bc:	str	r3, [ip]
   181c0:	ldr	r3, [r6, #36]	; 0x24
   181c4:	str	r3, [ip, #4]
   181c8:	str	ip, [r6, #36]	; 0x24
   181cc:	pop	{r4, r5, r6, r7, r8, pc}
   181d0:	ldr	r1, [pc, #176]	; 18288 <fts_children@@Base+0x66c>
   181d4:	mov	r2, r0
   181d8:	ldr	r3, [r0]
   181dc:	add	r1, pc, r1
   181e0:	cmp	r3, r1
   181e4:	beq	18274 <fts_children@@Base+0x658>
   181e8:	vldr	s15, [r3, #8]
   181ec:	vldr	s14, [pc, #136]	; 1827c <fts_children@@Base+0x660>
   181f0:	vcmpe.f32	s15, s14
   181f4:	vmrs	APSR_nzcv, fpscr
   181f8:	ble	18260 <fts_children@@Base+0x644>
   181fc:	vldr	s13, [pc, #124]	; 18280 <fts_children@@Base+0x664>
   18200:	vcmpe.f32	s15, s13
   18204:	vmrs	APSR_nzcv, fpscr
   18208:	bpl	18260 <fts_children@@Base+0x644>
   1820c:	vldr	s13, [pc, #112]	; 18284 <fts_children@@Base+0x668>
   18210:	vldr	s12, [r3, #12]
   18214:	vcmpe.f32	s12, s13
   18218:	vmrs	APSR_nzcv, fpscr
   1821c:	ble	18260 <fts_children@@Base+0x644>
   18220:	vldr	s13, [r3]
   18224:	vcmpe.f32	s13, #0.0
   18228:	vmrs	APSR_nzcv, fpscr
   1822c:	blt	18260 <fts_children@@Base+0x644>
   18230:	vadd.f32	s14, s13, s14
   18234:	vldr	s12, [r3, #4]
   18238:	vcmpe.f32	s14, s12
   1823c:	vmrs	APSR_nzcv, fpscr
   18240:	bpl	18260 <fts_children@@Base+0x644>
   18244:	vmov.f32	s13, #112	; 0x3f800000  1.0
   18248:	vcmpe.f32	s12, s13
   1824c:	vmrs	APSR_nzcv, fpscr
   18250:	bhi	18260 <fts_children@@Base+0x644>
   18254:	vcmpe.f32	s15, s14
   18258:	vmrs	APSR_nzcv, fpscr
   1825c:	bgt	18274 <fts_children@@Base+0x658>
   18260:	ldr	r3, [pc, #36]	; 1828c <fts_children@@Base+0x670>
   18264:	mov	r0, #0
   18268:	add	r3, pc, r3
   1826c:	str	r3, [r2]
   18270:	bx	lr
   18274:	mov	r0, #1
   18278:	bx	lr
   1827c:	stclcc	12, cr12, [ip, #820]	; 0x334
   18280:	svccc	0x00666666
   18284:	svccc	0x008ccccd
   18288:	muleq	r0, ip, r5
   1828c:	andeq	r3, r0, r0, lsl r5
   18290:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18294:	mov	r8, r1
   18298:	ldr	r6, [r1]
   1829c:	mov	r5, r0
   182a0:	ldr	r3, [r1, #4]
   182a4:	mov	sl, r2
   182a8:	cmp	r6, r3
   182ac:	addcc	r6, r6, #8
   182b0:	movcc	r9, #0
   182b4:	bcs	1835c <fts_children@@Base+0x740>
   182b8:	ldr	fp, [r6, #-8]
   182bc:	mov	r7, r6
   182c0:	cmp	fp, #0
   182c4:	beq	18350 <fts_children@@Base+0x734>
   182c8:	ldr	r4, [r6, #-4]
   182cc:	cmp	r4, #0
   182d0:	bne	182f0 <fts_children@@Base+0x6d4>
   182d4:	b	18340 <fts_children@@Base+0x724>
   182d8:	ldr	r2, [r0, #4]
   182dc:	cmp	r3, #0
   182e0:	str	r2, [r4, #4]
   182e4:	str	r4, [r0, #4]
   182e8:	mov	r4, r3
   182ec:	beq	1833c <fts_children@@Base+0x720>
   182f0:	ldr	fp, [r4]
   182f4:	mov	r0, r5
   182f8:	mov	r1, fp
   182fc:	bl	180a0 <fts_children@@Base+0x484>
   18300:	ldr	r3, [r4, #4]
   18304:	ldr	r2, [r0]
   18308:	cmp	r2, #0
   1830c:	bne	182d8 <fts_children@@Base+0x6bc>
   18310:	str	fp, [r0]
   18314:	cmp	r3, #0
   18318:	ldr	r1, [r5, #12]
   1831c:	add	r1, r1, #1
   18320:	str	r1, [r5, #12]
   18324:	str	r2, [r4]
   18328:	ldr	r2, [r5, #36]	; 0x24
   1832c:	str	r2, [r4, #4]
   18330:	str	r4, [r5, #36]	; 0x24
   18334:	mov	r4, r3
   18338:	bne	182f0 <fts_children@@Base+0x6d4>
   1833c:	ldr	fp, [r6, #-8]
   18340:	cmp	sl, #0
   18344:	str	r9, [r6, #-4]
   18348:	beq	18364 <fts_children@@Base+0x748>
   1834c:	ldr	r3, [r8, #4]
   18350:	cmp	r3, r7
   18354:	add	r6, r6, #8
   18358:	bhi	182b8 <fts_children@@Base+0x69c>
   1835c:	mov	r0, #1
   18360:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18364:	mov	r0, r5
   18368:	mov	r1, fp
   1836c:	bl	180a0 <fts_children@@Base+0x484>
   18370:	ldr	r3, [r0]
   18374:	mov	r4, r0
   18378:	cmp	r3, #0
   1837c:	beq	183c8 <fts_children@@Base+0x7ac>
   18380:	ldr	r0, [r5, #36]	; 0x24
   18384:	cmp	r0, #0
   18388:	beq	183dc <fts_children@@Base+0x7c0>
   1838c:	ldr	r2, [r0, #4]
   18390:	str	r2, [r5, #36]	; 0x24
   18394:	str	fp, [r0]
   18398:	ldr	r2, [r4, #4]
   1839c:	str	r2, [r0, #4]
   183a0:	str	r0, [r4, #4]
   183a4:	str	r9, [r6, #-8]
   183a8:	add	r6, r6, #8
   183ac:	ldr	r3, [r8, #4]
   183b0:	ldr	r2, [r8, #12]
   183b4:	cmp	r3, r7
   183b8:	sub	r2, r2, #1
   183bc:	str	r2, [r8, #12]
   183c0:	bhi	182b8 <fts_children@@Base+0x69c>
   183c4:	b	1835c <fts_children@@Base+0x740>
   183c8:	str	fp, [r0]
   183cc:	ldr	r3, [r5, #12]
   183d0:	add	r3, r3, #1
   183d4:	str	r3, [r5, #12]
   183d8:	b	183a4 <fts_children@@Base+0x788>
   183dc:	mov	r0, #8
   183e0:	bl	114b0 <malloc@plt>
   183e4:	cmp	r0, #0
   183e8:	bne	18394 <fts_children@@Base+0x778>
   183ec:	mov	r0, sl
   183f0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183f4:	ldr	r0, [r0, #8]
   183f8:	bx	lr
   183fc:	ldr	r0, [r0, #12]
   18400:	bx	lr
   18404:	ldr	r0, [r0, #16]
   18408:	bx	lr
   1840c:	ldr	r3, [r0]
   18410:	ldr	r2, [r0, #4]
   18414:	cmp	r3, r2
   18418:	bcs	1847c <fts_children@@Base+0x860>
   1841c:	add	r1, r3, #8
   18420:	add	r2, r2, #7
   18424:	rsb	r2, r1, r2
   18428:	add	r3, r3, #16
   1842c:	bic	r2, r2, #7
   18430:	mov	r0, #0
   18434:	add	ip, r3, r2
   18438:	ldr	r3, [r1, #-8]
   1843c:	cmp	r3, #0
   18440:	beq	1846c <fts_children@@Base+0x850>
   18444:	ldr	r3, [r1, #-4]
   18448:	mov	r2, #1
   1844c:	cmp	r3, #0
   18450:	beq	18464 <fts_children@@Base+0x848>
   18454:	ldr	r3, [r3, #4]
   18458:	add	r2, r2, #1
   1845c:	cmp	r3, #0
   18460:	bne	18454 <fts_children@@Base+0x838>
   18464:	cmp	r0, r2
   18468:	movcc	r0, r2
   1846c:	add	r1, r1, #8
   18470:	cmp	r1, ip
   18474:	bne	18438 <fts_children@@Base+0x81c>
   18478:	bx	lr
   1847c:	mov	r0, #0
   18480:	bx	lr
   18484:	push	{r4}		; (str r4, [sp, #-4]!)
   18488:	ldr	r3, [r0]
   1848c:	ldr	r2, [r0, #4]
   18490:	cmp	r3, r2
   18494:	bcs	18524 <fts_children@@Base+0x908>
   18498:	add	r2, r2, #7
   1849c:	add	r1, r3, #8
   184a0:	rsb	ip, r1, r2
   184a4:	add	r3, r3, #16
   184a8:	bic	ip, ip, #7
   184ac:	mov	r2, #0
   184b0:	add	r4, r3, ip
   184b4:	mov	ip, r2
   184b8:	ldr	r3, [r1, #-8]
   184bc:	cmp	r3, #0
   184c0:	beq	184e8 <fts_children@@Base+0x8cc>
   184c4:	ldr	r3, [r1, #-4]
   184c8:	add	ip, ip, #1
   184cc:	add	r2, r2, #1
   184d0:	cmp	r3, #0
   184d4:	beq	184e8 <fts_children@@Base+0x8cc>
   184d8:	ldr	r3, [r3, #4]
   184dc:	add	r2, r2, #1
   184e0:	cmp	r3, #0
   184e4:	bne	184d8 <fts_children@@Base+0x8bc>
   184e8:	add	r1, r1, #8
   184ec:	cmp	r1, r4
   184f0:	bne	184b8 <fts_children@@Base+0x89c>
   184f4:	ldr	r3, [r0, #12]
   184f8:	cmp	r3, ip
   184fc:	movne	r0, #0
   18500:	beq	1850c <fts_children@@Base+0x8f0>
   18504:	pop	{r4}		; (ldr r4, [sp], #4)
   18508:	bx	lr
   1850c:	ldr	r0, [r0, #16]
   18510:	pop	{r4}		; (ldr r4, [sp], #4)
   18514:	subs	r3, r0, r2
   18518:	rsbs	r0, r3, #0
   1851c:	adcs	r0, r0, r3
   18520:	bx	lr
   18524:	mov	r2, #0
   18528:	mov	ip, r2
   1852c:	b	184f4 <fts_children@@Base+0x8d8>
   18530:	push	{r4, r5, r6, r7, r8, lr}
   18534:	sub	sp, sp, #8
   18538:	mov	r4, r1
   1853c:	mov	r5, r0
   18540:	bl	18404 <fts_children@@Base+0x7e8>
   18544:	mov	r8, r0
   18548:	mov	r0, r5
   1854c:	bl	183f4 <fts_children@@Base+0x7d8>
   18550:	mov	r6, r0
   18554:	mov	r0, r5
   18558:	bl	183fc <fts_children@@Base+0x7e0>
   1855c:	mov	r7, r0
   18560:	mov	r0, r5
   18564:	bl	1840c <fts_children@@Base+0x7f0>
   18568:	ldr	r2, [pc, #144]	; 18600 <fts_children@@Base+0x9e4>
   1856c:	mov	r3, r8
   18570:	mov	r1, #1
   18574:	add	r2, pc, r2
   18578:	mov	r5, r0
   1857c:	mov	r0, r4
   18580:	bl	1157c <__fprintf_chk@plt>
   18584:	ldr	r2, [pc, #120]	; 18604 <fts_children@@Base+0x9e8>
   18588:	mov	r3, r6
   1858c:	mov	r0, r4
   18590:	mov	r1, #1
   18594:	add	r2, pc, r2
   18598:	bl	1157c <__fprintf_chk@plt>
   1859c:	vmov	s15, r7
   185a0:	vldr	d5, [pc, #80]	; 185f8 <fts_children@@Base+0x9dc>
   185a4:	ldr	r2, [pc, #92]	; 18608 <fts_children@@Base+0x9ec>
   185a8:	vcvt.f64.u32	d4, s15
   185ac:	mov	r3, r7
   185b0:	vmov	s15, r6
   185b4:	mov	r0, r4
   185b8:	mov	r1, #1
   185bc:	add	r2, pc, r2
   185c0:	vmul.f64	d5, d4, d5
   185c4:	vcvt.f64.u32	d6, s15
   185c8:	vdiv.f64	d7, d5, d6
   185cc:	vstr	d7, [sp]
   185d0:	bl	1157c <__fprintf_chk@plt>
   185d4:	ldr	r2, [pc, #48]	; 1860c <fts_children@@Base+0x9f0>
   185d8:	mov	r0, r4
   185dc:	mov	r3, r5
   185e0:	mov	r1, #1
   185e4:	add	r2, pc, r2
   185e8:	add	sp, sp, #8
   185ec:	pop	{r4, r5, r6, r7, r8, lr}
   185f0:	b	1157c <__fprintf_chk@plt>
   185f4:	nop	{0}
   185f8:	andeq	r0, r0, r0
   185fc:	subsmi	r0, r9, r0
   18600:	andeq	r3, r0, r8, lsl r2
   18604:	andeq	r3, r0, r0, lsl r2
   18608:	andeq	r3, r0, r0, lsl #4
   1860c:	strdeq	r3, [r0], -ip
   18610:	push	{r4, r5, r6, lr}
   18614:	mov	r6, r0
   18618:	mov	r5, r1
   1861c:	bl	180a0 <fts_children@@Base+0x484>
   18620:	ldr	r3, [r0]
   18624:	mov	r4, r0
   18628:	cmp	r3, #0
   1862c:	bne	18638 <fts_children@@Base+0xa1c>
   18630:	b	18664 <fts_children@@Base+0xa48>
   18634:	ldr	r3, [r4]
   18638:	cmp	r5, r3
   1863c:	mov	r1, r3
   18640:	mov	r0, r5
   18644:	beq	18670 <fts_children@@Base+0xa54>
   18648:	ldr	r3, [r6, #28]
   1864c:	blx	r3
   18650:	cmp	r0, #0
   18654:	bne	1866c <fts_children@@Base+0xa50>
   18658:	ldr	r4, [r4, #4]
   1865c:	cmp	r4, #0
   18660:	bne	18634 <fts_children@@Base+0xa18>
   18664:	mov	r0, #0
   18668:	pop	{r4, r5, r6, pc}
   1866c:	ldr	r3, [r4]
   18670:	mov	r0, r3
   18674:	pop	{r4, r5, r6, pc}
   18678:	push	{r3, lr}
   1867c:	ldr	r3, [r0, #16]
   18680:	cmp	r3, #0
   18684:	beq	186c4 <fts_children@@Base+0xaa8>
   18688:	ldr	r3, [r0]
   1868c:	ldr	r2, [r0, #4]
   18690:	cmp	r3, r2
   18694:	bcs	186c0 <fts_children@@Base+0xaa4>
   18698:	ldr	r0, [r3]
   1869c:	cmp	r0, #0
   186a0:	beq	186b4 <fts_children@@Base+0xa98>
   186a4:	b	186cc <fts_children@@Base+0xab0>
   186a8:	ldr	r0, [r3]
   186ac:	cmp	r0, #0
   186b0:	popne	{r3, pc}
   186b4:	add	r3, r3, #8
   186b8:	cmp	r3, r2
   186bc:	bcc	186a8 <fts_children@@Base+0xa8c>
   186c0:	bl	11654 <abort@plt>
   186c4:	mov	r0, r3
   186c8:	pop	{r3, pc}
   186cc:	pop	{r3, pc}
   186d0:	push	{r3, r4, r5, lr}
   186d4:	mov	r5, r0
   186d8:	mov	r4, r1
   186dc:	bl	180a0 <fts_children@@Base+0x484>
   186e0:	mov	r2, r0
   186e4:	mov	r3, r0
   186e8:	b	186f4 <fts_children@@Base+0xad8>
   186ec:	cmp	r3, #0
   186f0:	beq	1870c <fts_children@@Base+0xaf0>
   186f4:	ldr	ip, [r3]
   186f8:	ldr	r3, [r3, #4]
   186fc:	cmp	ip, r4
   18700:	bne	186ec <fts_children@@Base+0xad0>
   18704:	cmp	r3, #0
   18708:	bne	18734 <fts_children@@Base+0xb18>
   1870c:	ldr	r3, [r5, #4]
   18710:	b	18720 <fts_children@@Base+0xb04>
   18714:	ldr	r0, [r2]
   18718:	cmp	r0, #0
   1871c:	popne	{r3, r4, r5, pc}
   18720:	add	r2, r2, #8
   18724:	cmp	r2, r3
   18728:	bcc	18714 <fts_children@@Base+0xaf8>
   1872c:	mov	r0, #0
   18730:	pop	{r3, r4, r5, pc}
   18734:	ldr	r0, [r3]
   18738:	pop	{r3, r4, r5, pc}
   1873c:	push	{r4, r5, r6, r7}
   18740:	mov	r6, r0
   18744:	ldm	r0, {r5, ip}
   18748:	cmp	ip, r5
   1874c:	bls	187d0 <fts_children@@Base+0xbb4>
   18750:	add	r5, r5, #8
   18754:	mov	r0, #0
   18758:	ldr	r3, [r5, #-8]
   1875c:	mov	r7, r5
   18760:	cmp	r3, #0
   18764:	beq	187b0 <fts_children@@Base+0xb94>
   18768:	cmp	r2, r0
   1876c:	bls	187bc <fts_children@@Base+0xba0>
   18770:	str	r3, [r1, r0, lsl #2]
   18774:	add	r4, r0, #1
   18778:	ldr	r3, [r5, #-4]
   1877c:	add	ip, r1, r0, lsl #2
   18780:	cmp	r3, #0
   18784:	beq	187c4 <fts_children@@Base+0xba8>
   18788:	mov	r0, r4
   1878c:	cmp	r0, r2
   18790:	beq	187bc <fts_children@@Base+0xba0>
   18794:	ldr	r4, [r3]
   18798:	add	r0, r0, #1
   1879c:	str	r4, [ip, #4]!
   187a0:	ldr	r3, [r3, #4]
   187a4:	cmp	r3, #0
   187a8:	bne	1878c <fts_children@@Base+0xb70>
   187ac:	ldr	ip, [r6, #4]
   187b0:	cmp	ip, r7
   187b4:	add	r5, r5, #8
   187b8:	bhi	18758 <fts_children@@Base+0xb3c>
   187bc:	pop	{r4, r5, r6, r7}
   187c0:	bx	lr
   187c4:	ldr	ip, [r6, #4]
   187c8:	mov	r0, r4
   187cc:	b	187b0 <fts_children@@Base+0xb94>
   187d0:	mov	r0, #0
   187d4:	b	187bc <fts_children@@Base+0xba0>
   187d8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   187dc:	mov	r7, r2
   187e0:	ldr	r8, [r0]
   187e4:	mov	r9, r0
   187e8:	ldr	r2, [r0, #4]
   187ec:	mov	r6, r1
   187f0:	mov	r5, #0
   187f4:	cmp	r2, r8
   187f8:	bls	18848 <fts_children@@Base+0xc2c>
   187fc:	ldr	r3, [r8]
   18800:	cmp	r3, #0
   18804:	beq	1883c <fts_children@@Base+0xc20>
   18808:	mov	r0, r3
   1880c:	mov	r4, r8
   18810:	b	18818 <fts_children@@Base+0xbfc>
   18814:	ldr	r0, [r4]
   18818:	mov	r1, r7
   1881c:	blx	r6
   18820:	cmp	r0, #0
   18824:	beq	18848 <fts_children@@Base+0xc2c>
   18828:	ldr	r4, [r4, #4]
   1882c:	add	r5, r5, #1
   18830:	cmp	r4, #0
   18834:	bne	18814 <fts_children@@Base+0xbf8>
   18838:	ldr	r2, [r9, #4]
   1883c:	add	r8, r8, #8
   18840:	cmp	r2, r8
   18844:	bhi	187fc <fts_children@@Base+0xbe0>
   18848:	mov	r0, r5
   1884c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18850:	push	{r3, r4, r5, lr}
   18854:	mov	r5, r1
   18858:	ldrb	r3, [r0]
   1885c:	cmp	r3, #0
   18860:	beq	18890 <fts_children@@Base+0xc74>
   18864:	mov	r4, r0
   18868:	mov	r1, #0
   1886c:	rsb	r0, r1, r1, lsl #5
   18870:	mov	r1, r5
   18874:	add	r0, r3, r0
   18878:	bl	19a34 <fts_children@@Base+0x1e18>
   1887c:	ldrb	r3, [r4, #1]!
   18880:	cmp	r3, #0
   18884:	bne	1886c <fts_children@@Base+0xc50>
   18888:	mov	r0, r1
   1888c:	pop	{r3, r4, r5, pc}
   18890:	mov	r1, r3
   18894:	b	18888 <fts_children@@Base+0xc6c>
   18898:	push	{r4}		; (str r4, [sp, #-4]!)
   1889c:	mov	ip, r0
   188a0:	ldr	r4, [pc, #24]	; 188c0 <fts_children@@Base+0xca4>
   188a4:	add	r4, pc, r4
   188a8:	ldm	r4!, {r0, r1, r2, r3}
   188ac:	ldr	r4, [r4]
   188b0:	stmia	ip!, {r0, r1, r2, r3}
   188b4:	str	r4, [ip]
   188b8:	pop	{r4}		; (ldr r4, [sp], #4)
   188bc:	bx	lr
   188c0:	ldrdeq	r2, [r0], -r4
   188c4:	push	{r4, r5, r6, r7, r8, lr}
   188c8:	subs	r8, r2, #0
   188cc:	mov	r7, r0
   188d0:	mov	r5, r1
   188d4:	mov	r6, r3
   188d8:	beq	189cc <fts_children@@Base+0xdb0>
   188dc:	cmp	r6, #0
   188e0:	beq	189c0 <fts_children@@Base+0xda4>
   188e4:	mov	r0, #40	; 0x28
   188e8:	bl	114b0 <malloc@plt>
   188ec:	subs	r4, r0, #0
   188f0:	beq	189e4 <fts_children@@Base+0xdc8>
   188f4:	cmp	r5, #0
   188f8:	beq	189d8 <fts_children@@Base+0xdbc>
   188fc:	mov	r0, r4
   18900:	str	r5, [r0, #20]!
   18904:	bl	181d0 <fts_children@@Base+0x5b4>
   18908:	cmp	r0, #0
   1890c:	beq	189b0 <fts_children@@Base+0xd94>
   18910:	ldrb	r3, [r5, #16]
   18914:	vldr	s15, [r5, #8]
   18918:	cmp	r3, #0
   1891c:	bne	18944 <fts_children@@Base+0xd28>
   18920:	vmov	s14, r7
   18924:	vcvt.f32.u32	s13, s14
   18928:	vldr	s14, [pc, #188]	; 189ec <fts_children@@Base+0xdd0>
   1892c:	vdiv.f32	s15, s13, s15
   18930:	vcmpe.f32	s15, s14
   18934:	vmrs	APSR_nzcv, fpscr
   18938:	bge	189a8 <fts_children@@Base+0xd8c>
   1893c:	vcvt.u32.f32	s15, s15
   18940:	vmov	r7, s15
   18944:	mov	r0, r7
   18948:	bl	17fd0 <fts_children@@Base+0x3b4>
   1894c:	cmn	r0, #-1073741823	; 0xc0000001
   18950:	mov	r5, r0
   18954:	bhi	189a8 <fts_children@@Base+0xd8c>
   18958:	cmp	r0, #0
   1895c:	str	r0, [r4, #8]
   18960:	beq	189b0 <fts_children@@Base+0xd94>
   18964:	mov	r1, #8
   18968:	bl	1133c <calloc@plt>
   1896c:	cmp	r0, #0
   18970:	str	r0, [r4]
   18974:	beq	189b0 <fts_children@@Base+0xd94>
   18978:	ldr	r3, [sp, #24]
   1897c:	mov	r2, #0
   18980:	add	r5, r0, r5, lsl #3
   18984:	str	r8, [r4, #24]
   18988:	str	r5, [r4, #4]
   1898c:	mov	r0, r4
   18990:	str	r6, [r4, #28]
   18994:	str	r3, [r4, #32]
   18998:	str	r2, [r4, #12]
   1899c:	str	r2, [r4, #16]
   189a0:	str	r2, [r4, #36]	; 0x24
   189a4:	pop	{r4, r5, r6, r7, r8, pc}
   189a8:	mov	r3, #0
   189ac:	str	r3, [r4, #8]
   189b0:	mov	r0, r4
   189b4:	bl	1139c <free@plt>
   189b8:	mov	r0, #0
   189bc:	pop	{r4, r5, r6, r7, r8, pc}
   189c0:	ldr	r6, [pc, #40]	; 189f0 <fts_children@@Base+0xdd4>
   189c4:	add	r6, pc, r6
   189c8:	b	188e4 <fts_children@@Base+0xcc8>
   189cc:	ldr	r8, [pc, #32]	; 189f4 <fts_children@@Base+0xdd8>
   189d0:	add	r8, pc, r8
   189d4:	b	188dc <fts_children@@Base+0xcc0>
   189d8:	ldr	r5, [pc, #24]	; 189f8 <fts_children@@Base+0xddc>
   189dc:	add	r5, pc, r5
   189e0:	b	188fc <fts_children@@Base+0xce0>
   189e4:	mov	r0, r4
   189e8:	pop	{r4, r5, r6, r7, r8, pc}
   189ec:	svcmi	0x00800000
   189f0:			; <UNDEFINED> instruction: 0xfffff6c4
   189f4:			; <UNDEFINED> instruction: 0xfffff6a4
   189f8:	muleq	r0, ip, sp
   189fc:	push	{r4, r5, r6, r7, r8, lr}
   18a00:	mov	r5, r0
   18a04:	ldr	r7, [r0]
   18a08:	ldr	r3, [r0, #4]
   18a0c:	cmp	r7, r3
   18a10:	addcc	r7, r7, #8
   18a14:	movcc	r6, #0
   18a18:	bcs	18a98 <fts_children@@Base+0xe7c>
   18a1c:	ldr	r2, [r7, #-8]
   18a20:	mov	r8, r7
   18a24:	cmp	r2, #0
   18a28:	beq	18a8c <fts_children@@Base+0xe70>
   18a2c:	ldr	r4, [r7, #-4]
   18a30:	cmp	r4, #0
   18a34:	beq	18a6c <fts_children@@Base+0xe50>
   18a38:	ldr	r3, [r5, #32]
   18a3c:	cmp	r3, #0
   18a40:	beq	18a4c <fts_children@@Base+0xe30>
   18a44:	ldr	r0, [r4]
   18a48:	blx	r3
   18a4c:	ldr	r3, [r4, #4]
   18a50:	str	r6, [r4]
   18a54:	ldr	r2, [r5, #36]	; 0x24
   18a58:	cmp	r3, #0
   18a5c:	str	r2, [r4, #4]
   18a60:	str	r4, [r5, #36]	; 0x24
   18a64:	mov	r4, r3
   18a68:	bne	18a38 <fts_children@@Base+0xe1c>
   18a6c:	ldr	r3, [r5, #32]
   18a70:	cmp	r3, #0
   18a74:	beq	18a80 <fts_children@@Base+0xe64>
   18a78:	ldr	r0, [r7, #-8]
   18a7c:	blx	r3
   18a80:	str	r6, [r7, #-8]
   18a84:	str	r6, [r7, #-4]
   18a88:	ldr	r3, [r5, #4]
   18a8c:	cmp	r3, r8
   18a90:	add	r7, r7, #8
   18a94:	bhi	18a1c <fts_children@@Base+0xe00>
   18a98:	mov	r3, #0
   18a9c:	str	r3, [r5, #12]
   18aa0:	str	r3, [r5, #16]
   18aa4:	pop	{r4, r5, r6, r7, r8, pc}
   18aa8:	push	{r3, r4, r5, r6, r7, lr}
   18aac:	mov	r5, r0
   18ab0:	ldr	r3, [r0, #32]
   18ab4:	cmp	r3, #0
   18ab8:	beq	18ac8 <fts_children@@Base+0xeac>
   18abc:	ldr	r3, [r0, #16]
   18ac0:	cmp	r3, #0
   18ac4:	bne	18b44 <fts_children@@Base+0xf28>
   18ac8:	ldr	r3, [r5, #4]
   18acc:	ldr	r6, [r5]
   18ad0:	cmp	r6, r3
   18ad4:	bcs	18b10 <fts_children@@Base+0xef4>
   18ad8:	add	r6, r6, #8
   18adc:	ldr	r0, [r6, #-4]
   18ae0:	mov	r7, r6
   18ae4:	cmp	r0, #0
   18ae8:	beq	18b04 <fts_children@@Base+0xee8>
   18aec:	ldr	r4, [r0, #4]
   18af0:	bl	1139c <free@plt>
   18af4:	cmp	r4, #0
   18af8:	mov	r0, r4
   18afc:	bne	18aec <fts_children@@Base+0xed0>
   18b00:	ldr	r3, [r5, #4]
   18b04:	cmp	r7, r3
   18b08:	add	r6, r6, #8
   18b0c:	bcc	18adc <fts_children@@Base+0xec0>
   18b10:	ldr	r0, [r5, #36]	; 0x24
   18b14:	cmp	r0, #0
   18b18:	beq	18b30 <fts_children@@Base+0xf14>
   18b1c:	ldr	r4, [r0, #4]
   18b20:	bl	1139c <free@plt>
   18b24:	cmp	r4, #0
   18b28:	mov	r0, r4
   18b2c:	bne	18b1c <fts_children@@Base+0xf00>
   18b30:	ldr	r0, [r5]
   18b34:	bl	1139c <free@plt>
   18b38:	mov	r0, r5
   18b3c:	pop	{r3, r4, r5, r6, r7, lr}
   18b40:	b	1139c <free@plt>
   18b44:	ldr	r6, [r0]
   18b48:	ldr	r3, [r0, #4]
   18b4c:	cmp	r6, r3
   18b50:	bcs	18b10 <fts_children@@Base+0xef4>
   18b54:	ldr	r0, [r6]
   18b58:	cmp	r0, #0
   18b5c:	movne	r4, r6
   18b60:	bne	18b6c <fts_children@@Base+0xf50>
   18b64:	b	18b84 <fts_children@@Base+0xf68>
   18b68:	ldr	r0, [r4]
   18b6c:	ldr	r3, [r5, #32]
   18b70:	blx	r3
   18b74:	ldr	r4, [r4, #4]
   18b78:	cmp	r4, #0
   18b7c:	bne	18b68 <fts_children@@Base+0xf4c>
   18b80:	ldr	r3, [r5, #4]
   18b84:	add	r6, r6, #8
   18b88:	cmp	r3, r6
   18b8c:	bhi	18b54 <fts_children@@Base+0xf38>
   18b90:	b	18acc <fts_children@@Base+0xeb0>
   18b94:	ldr	r3, [pc, #392]	; 18d24 <fts_children@@Base+0x1108>
   18b98:	ldr	r2, [pc, #392]	; 18d28 <fts_children@@Base+0x110c>
   18b9c:	add	r3, pc, r3
   18ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ba4:	sub	sp, sp, #52	; 0x34
   18ba8:	ldr	r5, [r0, #20]
   18bac:	mov	r4, r0
   18bb0:	ldr	r6, [r3, r2]
   18bb4:	vldr	s15, [r5, #8]
   18bb8:	ldrb	r2, [r5, #16]
   18bbc:	ldr	r3, [r6]
   18bc0:	cmp	r2, #0
   18bc4:	str	r3, [sp, #44]	; 0x2c
   18bc8:	bne	18bf0 <fts_children@@Base+0xfd4>
   18bcc:	vmov	s14, r1
   18bd0:	vcvt.f32.u32	s13, s14
   18bd4:	vldr	s14, [pc, #324]	; 18d20 <fts_children@@Base+0x1104>
   18bd8:	vdiv.f32	s15, s13, s15
   18bdc:	vcmpe.f32	s15, s14
   18be0:	vmrs	APSR_nzcv, fpscr
   18be4:	bge	18ce8 <fts_children@@Base+0x10cc>
   18be8:	vcvt.u32.f32	s15, s15
   18bec:	vmov	r1, s15
   18bf0:	mov	r0, r1
   18bf4:	bl	17fd0 <fts_children@@Base+0x3b4>
   18bf8:	sub	r3, r0, #1
   18bfc:	mov	r7, r0
   18c00:	cmn	r3, #-1073741822	; 0xc0000002
   18c04:	bhi	18ce8 <fts_children@@Base+0x10cc>
   18c08:	ldr	r3, [r4, #8]
   18c0c:	cmp	r3, r0
   18c10:	beq	18cc8 <fts_children@@Base+0x10ac>
   18c14:	mov	r1, #8
   18c18:	bl	1133c <calloc@plt>
   18c1c:	cmp	r0, #0
   18c20:	mov	r3, r0
   18c24:	str	r0, [sp, #4]
   18c28:	beq	18ce8 <fts_children@@Base+0x10cc>
   18c2c:	ldr	fp, [r4, #24]
   18c30:	add	r8, sp, #4
   18c34:	ldr	sl, [r4, #28]
   18c38:	mov	ip, #0
   18c3c:	ldr	r9, [r4, #32]
   18c40:	mov	r0, r8
   18c44:	ldr	lr, [r4, #36]	; 0x24
   18c48:	mov	r2, ip
   18c4c:	mov	r1, r4
   18c50:	add	r3, r3, r7, lsl #3
   18c54:	str	r5, [sp, #24]
   18c58:	str	r7, [sp, #12]
   18c5c:	str	r3, [sp, #8]
   18c60:	str	fp, [sp, #28]
   18c64:	str	sl, [sp, #32]
   18c68:	str	r9, [sp, #36]	; 0x24
   18c6c:	str	lr, [sp, #40]	; 0x28
   18c70:	str	ip, [sp, #16]
   18c74:	str	ip, [sp, #20]
   18c78:	bl	18290 <fts_children@@Base+0x674>
   18c7c:	subs	r5, r0, #0
   18c80:	bne	18cf0 <fts_children@@Base+0x10d4>
   18c84:	ldr	r3, [sp, #40]	; 0x28
   18c88:	mov	r0, r4
   18c8c:	mov	r1, r8
   18c90:	mov	r2, #1
   18c94:	str	r3, [r4, #36]	; 0x24
   18c98:	bl	18290 <fts_children@@Base+0x674>
   18c9c:	cmp	r0, #0
   18ca0:	beq	18d1c <fts_children@@Base+0x1100>
   18ca4:	mov	r0, r4
   18ca8:	mov	r1, r8
   18cac:	mov	r2, r5
   18cb0:	bl	18290 <fts_children@@Base+0x674>
   18cb4:	cmp	r0, #0
   18cb8:	beq	18d1c <fts_children@@Base+0x1100>
   18cbc:	ldr	r0, [sp, #4]
   18cc0:	bl	1139c <free@plt>
   18cc4:	b	18ccc <fts_children@@Base+0x10b0>
   18cc8:	mov	r5, #1
   18ccc:	ldr	r1, [sp, #44]	; 0x2c
   18cd0:	mov	r0, r5
   18cd4:	ldr	r3, [r6]
   18cd8:	cmp	r1, r3
   18cdc:	bne	18d18 <fts_children@@Base+0x10fc>
   18ce0:	add	sp, sp, #52	; 0x34
   18ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ce8:	mov	r5, #0
   18cec:	b	18ccc <fts_children@@Base+0x10b0>
   18cf0:	ldr	r0, [r4]
   18cf4:	bl	1139c <free@plt>
   18cf8:	add	r0, sp, #8
   18cfc:	ldr	ip, [sp, #4]
   18d00:	ldm	r0, {r0, r1, r2}
   18d04:	ldr	r3, [sp, #40]	; 0x28
   18d08:	str	ip, [r4]
   18d0c:	stmib	r4, {r0, r1, r2}
   18d10:	str	r3, [r4, #36]	; 0x24
   18d14:	b	18ccc <fts_children@@Base+0x10b0>
   18d18:	bl	113f0 <__stack_chk_fail@plt>
   18d1c:	bl	11654 <abort@plt>
   18d20:	svcmi	0x00800000
   18d24:	andeq	r3, r1, ip, asr r4
   18d28:	andeq	r0, r0, ip, lsr r1
   18d2c:	ldr	r3, [pc, #428]	; 18ee0 <fts_children@@Base+0x12c4>
   18d30:	ldr	ip, [pc, #428]	; 18ee4 <fts_children@@Base+0x12c8>
   18d34:	add	r3, pc, r3
   18d38:	push	{r4, r5, r6, r7, r8, lr}
   18d3c:	subs	r8, r1, #0
   18d40:	ldr	r4, [r3, ip]
   18d44:	sub	sp, sp, #8
   18d48:	mov	r5, r2
   18d4c:	mov	r6, r0
   18d50:	ldr	r3, [r4]
   18d54:	str	r3, [sp, #4]
   18d58:	beq	18e98 <fts_children@@Base+0x127c>
   18d5c:	mov	r3, #0
   18d60:	mov	r2, sp
   18d64:	bl	180d4 <fts_children@@Base+0x4b8>
   18d68:	cmp	r0, #0
   18d6c:	beq	18d98 <fts_children@@Base+0x117c>
   18d70:	cmp	r5, #0
   18d74:	moveq	r0, r5
   18d78:	strne	r0, [r5]
   18d7c:	movne	r0, #0
   18d80:	ldr	r2, [sp, #4]
   18d84:	ldr	r3, [r4]
   18d88:	cmp	r2, r3
   18d8c:	bne	18ed8 <fts_children@@Base+0x12bc>
   18d90:	add	sp, sp, #8
   18d94:	pop	{r4, r5, r6, r7, r8, pc}
   18d98:	vldr	s11, [r6, #8]
   18d9c:	vcvt.f32.u32	s14, s11
   18da0:	ldr	r3, [r6, #20]
   18da4:	vldr	s15, [r3, #8]
   18da8:	vldr	s13, [r6, #12]
   18dac:	vmul.f32	s15, s14, s15
   18db0:	vcvt.f32.u32	s14, s13
   18db4:	vcmpe.f32	s14, s15
   18db8:	vmrs	APSR_nzcv, fpscr
   18dbc:	bgt	18e0c <fts_children@@Base+0x11f0>
   18dc0:	ldr	r3, [sp]
   18dc4:	ldr	r2, [r3]
   18dc8:	cmp	r2, #0
   18dcc:	beq	18e9c <fts_children@@Base+0x1280>
   18dd0:	ldr	r3, [r6, #36]	; 0x24
   18dd4:	cmp	r3, #0
   18dd8:	beq	18ec0 <fts_children@@Base+0x12a4>
   18ddc:	ldr	r2, [r3, #4]
   18de0:	str	r2, [r6, #36]	; 0x24
   18de4:	str	r8, [r3]
   18de8:	mov	r0, #1
   18dec:	ldr	r2, [sp]
   18df0:	ldr	r1, [r2, #4]
   18df4:	str	r1, [r3, #4]
   18df8:	str	r3, [r2, #4]
   18dfc:	ldr	r3, [r6, #16]
   18e00:	add	r3, r3, r0
   18e04:	str	r3, [r6, #16]
   18e08:	b	18d80 <fts_children@@Base+0x1164>
   18e0c:	add	r0, r6, #20
   18e10:	bl	181d0 <fts_children@@Base+0x5b4>
   18e14:	vldr	s11, [r6, #8]
   18e18:	vcvt.f32.u32	s15, s11
   18e1c:	ldr	r3, [r6, #20]
   18e20:	vldr	s14, [r3, #8]
   18e24:	vldr	s11, [r6, #12]
   18e28:	vmul.f32	s13, s14, s15
   18e2c:	vcvt.f32.u32	s12, s11
   18e30:	vcmpe.f32	s12, s13
   18e34:	vmrs	APSR_nzcv, fpscr
   18e38:	ble	18dc0 <fts_children@@Base+0x11a4>
   18e3c:	ldrb	r2, [r3, #16]
   18e40:	cmp	r2, #0
   18e44:	vldreq	s13, [r3, #12]
   18e48:	vldrne	s14, [r3, #12]
   18e4c:	vmuleq.f32	s15, s15, s13
   18e50:	vmul.f32	s15, s14, s15
   18e54:	vldr	s14, [pc, #128]	; 18edc <fts_children@@Base+0x12c0>
   18e58:	vcmpe.f32	s15, s14
   18e5c:	vmrs	APSR_nzcv, fpscr
   18e60:	bge	18ed0 <fts_children@@Base+0x12b4>
   18e64:	vcvt.u32.f32	s15, s15
   18e68:	mov	r0, r6
   18e6c:	vmov	r1, s15
   18e70:	bl	18b94 <fts_children@@Base+0xf78>
   18e74:	cmp	r0, #0
   18e78:	beq	18ed0 <fts_children@@Base+0x12b4>
   18e7c:	mov	r2, sp
   18e80:	mov	r0, r6
   18e84:	mov	r1, r8
   18e88:	mov	r3, #0
   18e8c:	bl	180d4 <fts_children@@Base+0x4b8>
   18e90:	cmp	r0, #0
   18e94:	beq	18dc0 <fts_children@@Base+0x11a4>
   18e98:	bl	11654 <abort@plt>
   18e9c:	str	r8, [r3]
   18ea0:	mov	r0, #1
   18ea4:	ldr	r2, [r6, #16]
   18ea8:	ldr	r3, [r6, #12]
   18eac:	add	r2, r2, r0
   18eb0:	str	r2, [r6, #16]
   18eb4:	add	r3, r3, r0
   18eb8:	str	r3, [r6, #12]
   18ebc:	b	18d80 <fts_children@@Base+0x1164>
   18ec0:	mov	r0, #8
   18ec4:	bl	114b0 <malloc@plt>
   18ec8:	subs	r3, r0, #0
   18ecc:	bne	18de4 <fts_children@@Base+0x11c8>
   18ed0:	mvn	r0, #0
   18ed4:	b	18d80 <fts_children@@Base+0x1164>
   18ed8:	bl	113f0 <__stack_chk_fail@plt>
   18edc:	svcmi	0x00800000
   18ee0:	andeq	r3, r1, r4, asr #5
   18ee4:	andeq	r0, r0, ip, lsr r1
   18ee8:	b	18d2c <fts_children@@Base+0x1110>
   18eec:	ldr	r3, [pc, #100]	; 18f58 <fts_children@@Base+0x133c>
   18ef0:	ldr	ip, [pc, #100]	; 18f5c <fts_children@@Base+0x1340>
   18ef4:	add	r3, pc, r3
   18ef8:	push	{r4, r5, lr}
   18efc:	sub	sp, sp, #12
   18f00:	ldr	r4, [r3, ip]
   18f04:	mov	r5, r1
   18f08:	mov	r2, sp
   18f0c:	ldr	r3, [r4]
   18f10:	str	r3, [sp, #4]
   18f14:	bl	18d2c <fts_children@@Base+0x1110>
   18f18:	cmn	r0, #1
   18f1c:	beq	18f4c <fts_children@@Base+0x1330>
   18f20:	cmp	r0, #0
   18f24:	movne	r0, r5
   18f28:	beq	18f44 <fts_children@@Base+0x1328>
   18f2c:	ldr	r2, [sp, #4]
   18f30:	ldr	r3, [r4]
   18f34:	cmp	r2, r3
   18f38:	bne	18f54 <fts_children@@Base+0x1338>
   18f3c:	add	sp, sp, #12
   18f40:	pop	{r4, r5, pc}
   18f44:	ldr	r0, [sp]
   18f48:	b	18f2c <fts_children@@Base+0x1310>
   18f4c:	mov	r0, #0
   18f50:	b	18f2c <fts_children@@Base+0x1310>
   18f54:	bl	113f0 <__stack_chk_fail@plt>
   18f58:	andeq	r3, r1, r4, lsl #2
   18f5c:	andeq	r0, r0, ip, lsr r1
   18f60:	ldr	ip, [pc, #304]	; 19098 <fts_children@@Base+0x147c>
   18f64:	mov	r3, #1
   18f68:	push	{r4, r5, r6, r7, lr}
   18f6c:	add	ip, pc, ip
   18f70:	ldr	lr, [pc, #292]	; 1909c <fts_children@@Base+0x1480>
   18f74:	sub	sp, sp, #12
   18f78:	mov	r4, r0
   18f7c:	mov	r2, sp
   18f80:	ldr	r5, [ip, lr]
   18f84:	ldr	ip, [r5]
   18f88:	str	ip, [sp, #4]
   18f8c:	bl	180d4 <fts_children@@Base+0x4b8>
   18f90:	subs	r6, r0, #0
   18f94:	beq	18fb4 <fts_children@@Base+0x1398>
   18f98:	ldr	r3, [sp]
   18f9c:	ldr	r2, [r4, #16]
   18fa0:	sub	r2, r2, #1
   18fa4:	str	r2, [r4, #16]
   18fa8:	ldr	r3, [r3]
   18fac:	cmp	r3, #0
   18fb0:	beq	18fd0 <fts_children@@Base+0x13b4>
   18fb4:	ldr	r2, [sp, #4]
   18fb8:	mov	r0, r6
   18fbc:	ldr	r3, [r5]
   18fc0:	cmp	r2, r3
   18fc4:	bne	19094 <fts_children@@Base+0x1478>
   18fc8:	add	sp, sp, #12
   18fcc:	pop	{r4, r5, r6, r7, pc}
   18fd0:	vldr	s12, [r4, #8]
   18fd4:	vcvt.f32.u32	s14, s12
   18fd8:	ldr	r3, [r4, #12]
   18fdc:	ldr	r2, [r4, #20]
   18fe0:	sub	r3, r3, #1
   18fe4:	str	r3, [r4, #12]
   18fe8:	vldr	s15, [r2]
   18fec:	vmov	s13, r3
   18ff0:	vmul.f32	s15, s14, s15
   18ff4:	vcvt.f32.u32	s14, s13
   18ff8:	vcmpe.f32	s14, s15
   18ffc:	vmrs	APSR_nzcv, fpscr
   19000:	bpl	18fb4 <fts_children@@Base+0x1398>
   19004:	add	r0, r4, #20
   19008:	bl	181d0 <fts_children@@Base+0x5b4>
   1900c:	vldr	s12, [r4, #8]
   19010:	vcvt.f32.u32	s15, s12
   19014:	ldr	r3, [r4, #20]
   19018:	vldr	s14, [r3]
   1901c:	vldr	s12, [r4, #12]
   19020:	vmul.f32	s14, s15, s14
   19024:	vcvt.f32.u32	s13, s12
   19028:	vcmpe.f32	s13, s14
   1902c:	vmrs	APSR_nzcv, fpscr
   19030:	bpl	18fb4 <fts_children@@Base+0x1398>
   19034:	vldr	s14, [r3, #4]
   19038:	vmul.f32	s15, s15, s14
   1903c:	ldrb	r2, [r3, #16]
   19040:	mov	r0, r4
   19044:	cmp	r2, #0
   19048:	vldreq	s14, [r3, #8]
   1904c:	vmuleq.f32	s15, s15, s14
   19050:	vcvt.u32.f32	s15, s15
   19054:	vmov	r1, s15
   19058:	bl	18b94 <fts_children@@Base+0xf78>
   1905c:	cmp	r0, #0
   19060:	bne	18fb4 <fts_children@@Base+0x1398>
   19064:	ldr	r0, [r4, #36]	; 0x24
   19068:	cmp	r0, #0
   1906c:	bne	19078 <fts_children@@Base+0x145c>
   19070:	b	19088 <fts_children@@Base+0x146c>
   19074:	mov	r0, r7
   19078:	ldr	r7, [r0, #4]
   1907c:	bl	1139c <free@plt>
   19080:	cmp	r7, #0
   19084:	bne	19074 <fts_children@@Base+0x1458>
   19088:	mov	r3, #0
   1908c:	str	r3, [r4, #36]	; 0x24
   19090:	b	18fb4 <fts_children@@Base+0x1398>
   19094:	bl	113f0 <__stack_chk_fail@plt>
   19098:	andeq	r3, r1, ip, lsl #1
   1909c:	andeq	r0, r0, ip, lsr r1
   190a0:	mov	r3, #0
   190a4:	mov	r2, #1
   190a8:	str	r1, [r0]
   190ac:	str	r1, [r0, #4]
   190b0:	str	r1, [r0, #8]
   190b4:	str	r1, [r0, #12]
   190b8:	str	r1, [r0, #16]
   190bc:	strb	r2, [r0, #28]
   190c0:	str	r3, [r0, #20]
   190c4:	str	r3, [r0, #24]
   190c8:	bx	lr
   190cc:	ldrb	r0, [r0, #28]
   190d0:	bx	lr
   190d4:	ldrb	ip, [r0, #28]
   190d8:	mov	r3, r0
   190dc:	ldr	r2, [r0, #20]
   190e0:	eor	ip, ip, #1
   190e4:	add	r2, ip, r2
   190e8:	and	r2, r2, #3
   190ec:	ldr	r0, [r0, r2, lsl #2]
   190f0:	str	r1, [r3, r2, lsl #2]
   190f4:	ldr	r1, [r3, #24]
   190f8:	str	r2, [r3, #20]
   190fc:	cmp	r1, r2
   19100:	mov	r2, #0
   19104:	addeq	r1, ip, r1
   19108:	strb	r2, [r3, #28]
   1910c:	andeq	r1, r1, #3
   19110:	streq	r1, [r3, #24]
   19114:	bx	lr
   19118:	push	{r4, lr}
   1911c:	mov	r4, r0
   19120:	bl	190cc <fts_children@@Base+0x14b0>
   19124:	cmp	r0, #0
   19128:	bne	1915c <fts_children@@Base+0x1540>
   1912c:	ldr	r3, [r4, #20]
   19130:	ldr	r2, [r4, #16]
   19134:	ldr	r0, [r4, r3, lsl #2]
   19138:	str	r2, [r4, r3, lsl #2]
   1913c:	ldr	r2, [r4, #24]
   19140:	cmp	r3, r2
   19144:	addne	r3, r3, #3
   19148:	moveq	r3, #1
   1914c:	andne	r3, r3, #3
   19150:	strbeq	r3, [r4, #28]
   19154:	strne	r3, [r4, #20]
   19158:	pop	{r4, pc}
   1915c:	bl	11654 <abort@plt>
   19160:	ldr	r3, [pc, #984]	; 19540 <fts_children@@Base+0x1924>
   19164:	mov	r0, #14
   19168:	ldr	r2, [pc, #980]	; 19544 <fts_children@@Base+0x1928>
   1916c:	add	r3, pc, r3
   19170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19174:	sub	sp, sp, #132	; 0x84
   19178:	ldr	r6, [r3, r2]
   1917c:	ldr	r3, [r6]
   19180:	str	r3, [sp, #124]	; 0x7c
   19184:	bl	115dc <nl_langinfo@plt>
   19188:	subs	r5, r0, #0
   1918c:	beq	19240 <fts_children@@Base+0x1624>
   19190:	ldr	r3, [pc, #944]	; 19548 <fts_children@@Base+0x192c>
   19194:	ldr	r4, [pc, r3]
   19198:	cmp	r4, #0
   1919c:	beq	1924c <fts_children@@Base+0x1630>
   191a0:	ldrb	r7, [r4]
   191a4:	cmp	r7, #0
   191a8:	bne	191dc <fts_children@@Base+0x15c0>
   191ac:	b	19214 <fts_children@@Base+0x15f8>
   191b0:	mov	r0, r4
   191b4:	bl	11504 <strlen@plt>
   191b8:	add	r0, r0, #1
   191bc:	add	r7, r4, r0
   191c0:	mov	r0, r7
   191c4:	bl	11504 <strlen@plt>
   191c8:	add	r0, r0, #1
   191cc:	add	r4, r7, r0
   191d0:	ldrb	r7, [r7, r0]
   191d4:	cmp	r7, #0
   191d8:	beq	19214 <fts_children@@Base+0x15f8>
   191dc:	mov	r0, r5
   191e0:	mov	r1, r4
   191e4:	bl	1136c <strcmp@plt>
   191e8:	cmp	r0, #0
   191ec:	beq	19204 <fts_children@@Base+0x15e8>
   191f0:	cmp	r7, #42	; 0x2a
   191f4:	bne	191b0 <fts_children@@Base+0x1594>
   191f8:	ldrb	r3, [r4, #1]
   191fc:	cmp	r3, #0
   19200:	bne	191b0 <fts_children@@Base+0x1594>
   19204:	mov	r0, r4
   19208:	bl	11504 <strlen@plt>
   1920c:	add	r0, r0, #1
   19210:	add	r5, r4, r0
   19214:	ldrb	r3, [r5]
   19218:	cmp	r3, #0
   1921c:	ldreq	r5, [pc, #808]	; 1954c <fts_children@@Base+0x1930>
   19220:	addeq	r5, pc, r5
   19224:	ldr	r2, [sp, #124]	; 0x7c
   19228:	mov	r0, r5
   1922c:	ldr	r3, [r6]
   19230:	cmp	r2, r3
   19234:	bne	19514 <fts_children@@Base+0x18f8>
   19238:	add	sp, sp, #132	; 0x84
   1923c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19240:	ldr	r5, [pc, #776]	; 19550 <fts_children@@Base+0x1934>
   19244:	add	r5, pc, r5
   19248:	b	19190 <fts_children@@Base+0x1574>
   1924c:	ldr	r0, [pc, #768]	; 19554 <fts_children@@Base+0x1938>
   19250:	add	r0, pc, r0
   19254:	bl	114a4 <getenv@plt>
   19258:	subs	r8, r0, #0
   1925c:	beq	194ec <fts_children@@Base+0x18d0>
   19260:	ldrb	r3, [r8]
   19264:	cmp	r3, #0
   19268:	beq	19480 <fts_children@@Base+0x1864>
   1926c:	bl	11504 <strlen@plt>
   19270:	subs	sl, r0, #0
   19274:	subne	r3, sl, #1
   19278:	bne	19490 <fts_children@@Base+0x1874>
   1927c:	mov	r9, #0
   19280:	mov	fp, r9
   19284:	add	r9, sl, r9
   19288:	add	r0, r9, #14
   1928c:	bl	114b0 <malloc@plt>
   19290:	subs	r7, r0, #0
   19294:	beq	194e0 <fts_children@@Base+0x18c4>
   19298:	mov	r1, r8
   1929c:	mov	r2, sl
   192a0:	bl	113c0 <memcpy@plt>
   192a4:	cmp	fp, #0
   192a8:	add	ip, r7, r9
   192ac:	movne	r3, #47	; 0x2f
   192b0:	strbne	r3, [r7, sl]
   192b4:	ldr	r3, [pc, #668]	; 19558 <fts_children@@Base+0x193c>
   192b8:	add	r3, pc, r3
   192bc:	ldm	r3!, {r0, r1, r2}
   192c0:	ldrh	r3, [r3]
   192c4:	str	r0, [r7, r9]
   192c8:	mov	r0, r7
   192cc:	str	r1, [ip, #4]
   192d0:	mov	r1, #32768	; 0x8000
   192d4:	strh	r3, [ip, #12]
   192d8:	str	r2, [ip, #8]
   192dc:	bl	11498 <open64@plt>
   192e0:	subs	r8, r0, #0
   192e4:	blt	194a8 <fts_children@@Base+0x188c>
   192e8:	ldr	r1, [pc, #620]	; 1955c <fts_children@@Base+0x1940>
   192ec:	add	r1, pc, r1
   192f0:	bl	11324 <fdopen@plt>
   192f4:	subs	fp, r0, #0
   192f8:	beq	19500 <fts_children@@Base+0x18e4>
   192fc:	ldr	r0, [pc, #604]	; 19560 <fts_children@@Base+0x1944>
   19300:	add	sl, sp, #20
   19304:	add	r9, sp, #72	; 0x48
   19308:	mov	r8, #0
   1930c:	add	r0, pc, r0
   19310:	str	r0, [sp, #12]
   19314:	ldr	r3, [fp, #4]
   19318:	ldr	r2, [fp, #8]
   1931c:	cmp	r3, r2
   19320:	bcs	1940c <fts_children@@Base+0x17f0>
   19324:	add	r2, r3, #1
   19328:	str	r2, [fp, #4]
   1932c:	ldrb	r0, [r3]
   19330:	cmp	r0, #32
   19334:	beq	19314 <fts_children@@Base+0x16f8>
   19338:	sub	r3, r0, #9
   1933c:	cmp	r3, #1
   19340:	bls	19314 <fts_children@@Base+0x16f8>
   19344:	cmp	r0, #35	; 0x23
   19348:	beq	19420 <fts_children@@Base+0x1804>
   1934c:	mov	r1, fp
   19350:	bl	1151c <ungetc@plt>
   19354:	mov	r0, fp
   19358:	ldr	r1, [sp, #12]
   1935c:	mov	r2, sl
   19360:	mov	r3, r9
   19364:	bl	11558 <fscanf@plt>
   19368:	cmp	r0, #1
   1936c:	ble	19450 <fts_children@@Base+0x1834>
   19370:	mov	r0, sl
   19374:	bl	11504 <strlen@plt>
   19378:	str	r0, [sp, #8]
   1937c:	mov	r0, r9
   19380:	bl	11504 <strlen@plt>
   19384:	cmp	r8, #0
   19388:	mov	r2, r0
   1938c:	bne	194b4 <fts_children@@Base+0x1898>
   19390:	ldr	r3, [sp, #8]
   19394:	str	r2, [sp]
   19398:	add	r8, r0, r3
   1939c:	add	r0, r8, #3
   193a0:	add	r8, r8, #2
   193a4:	bl	114b0 <malloc@plt>
   193a8:	ldr	r2, [sp]
   193ac:	mov	r3, r0
   193b0:	cmp	r3, #0
   193b4:	beq	19518 <fts_children@@Base+0x18fc>
   193b8:	ldr	r0, [sp, #8]
   193bc:	movw	r1, #65534	; 0xfffe
   193c0:	movt	r1, #65535	; 0xffff
   193c4:	rsb	r2, r2, r8
   193c8:	rsb	r1, r0, r1
   193cc:	stm	sp, {r2, r3}
   193d0:	add	r0, r1, r2
   193d4:	mov	r1, sl
   193d8:	add	r0, r3, r0
   193dc:	mov	r4, r3
   193e0:	bl	11468 <strcpy@plt>
   193e4:	ldr	r2, [sp]
   193e8:	ldr	r3, [sp, #4]
   193ec:	mov	r1, r9
   193f0:	sub	r0, r2, #1
   193f4:	add	r0, r3, r0
   193f8:	bl	11468 <strcpy@plt>
   193fc:	ldr	r3, [fp, #4]
   19400:	ldr	r2, [fp, #8]
   19404:	cmp	r3, r2
   19408:	bcc	19324 <fts_children@@Base+0x1708>
   1940c:	mov	r0, fp
   19410:	bl	115ac <__uflow@plt>
   19414:	cmn	r0, #1
   19418:	beq	19450 <fts_children@@Base+0x1834>
   1941c:	b	19330 <fts_children@@Base+0x1714>
   19420:	ldr	r3, [fp, #4]
   19424:	ldr	r2, [fp, #8]
   19428:	cmp	r3, r2
   1942c:	bcs	19534 <fts_children@@Base+0x1918>
   19430:	add	r2, r3, #1
   19434:	str	r2, [fp, #4]
   19438:	ldrb	r0, [r3]
   1943c:	cmp	r0, #10
   19440:	cmnne	r0, #1
   19444:	bne	19420 <fts_children@@Base+0x1804>
   19448:	cmn	r0, #1
   1944c:	bne	19314 <fts_children@@Base+0x16f8>
   19450:	mov	r0, fp
   19454:	bl	19634 <fts_children@@Base+0x1a18>
   19458:	cmp	r8, #0
   1945c:	beq	194a8 <fts_children@@Base+0x188c>
   19460:	mov	r3, #0
   19464:	strb	r3, [r4, r8]
   19468:	mov	r0, r7
   1946c:	bl	1139c <free@plt>
   19470:	ldr	r3, [pc, #236]	; 19564 <fts_children@@Base+0x1948>
   19474:	add	r3, pc, r3
   19478:	str	r4, [r3]
   1947c:	b	191a0 <fts_children@@Base+0x1584>
   19480:	ldr	r8, [pc, #224]	; 19568 <fts_children@@Base+0x194c>
   19484:	mov	r3, #7
   19488:	mov	sl, #8
   1948c:	add	r8, pc, r8
   19490:	ldrb	r3, [r8, r3]
   19494:	cmp	r3, #47	; 0x2f
   19498:	movne	r9, #1
   1949c:	movne	fp, r9
   194a0:	bne	19284 <fts_children@@Base+0x1668>
   194a4:	b	1927c <fts_children@@Base+0x1660>
   194a8:	ldr	r4, [pc, #188]	; 1956c <fts_children@@Base+0x1950>
   194ac:	add	r4, pc, r4
   194b0:	b	19468 <fts_children@@Base+0x184c>
   194b4:	ldr	r0, [sp, #8]
   194b8:	str	r2, [sp]
   194bc:	add	r3, r0, r2
   194c0:	mov	r0, r4
   194c4:	add	r8, r3, r8
   194c8:	add	r1, r8, #3
   194cc:	add	r8, r8, #2
   194d0:	bl	113fc <realloc@plt>
   194d4:	ldr	r2, [sp]
   194d8:	mov	r3, r0
   194dc:	b	193b0 <fts_children@@Base+0x1794>
   194e0:	ldr	r4, [pc, #136]	; 19570 <fts_children@@Base+0x1954>
   194e4:	add	r4, pc, r4
   194e8:	b	19470 <fts_children@@Base+0x1854>
   194ec:	ldr	r8, [pc, #128]	; 19574 <fts_children@@Base+0x1958>
   194f0:	mov	r3, #7
   194f4:	mov	sl, #8
   194f8:	add	r8, pc, r8
   194fc:	b	19490 <fts_children@@Base+0x1874>
   19500:	ldr	r4, [pc, #112]	; 19578 <fts_children@@Base+0x195c>
   19504:	mov	r0, r8
   19508:	add	r4, pc, r4
   1950c:	bl	11660 <close@plt>
   19510:	b	19468 <fts_children@@Base+0x184c>
   19514:	bl	113f0 <__stack_chk_fail@plt>
   19518:	mov	r0, r4
   1951c:	ldr	r4, [pc, #88]	; 1957c <fts_children@@Base+0x1960>
   19520:	bl	1139c <free@plt>
   19524:	mov	r0, fp
   19528:	add	r4, pc, r4
   1952c:	bl	19634 <fts_children@@Base+0x1a18>
   19530:	b	19468 <fts_children@@Base+0x184c>
   19534:	mov	r0, fp
   19538:	bl	115ac <__uflow@plt>
   1953c:	b	1943c <fts_children@@Base+0x1820>
   19540:	andeq	r2, r1, ip, lsl #29
   19544:	andeq	r0, r0, ip, lsr r1
   19548:	muleq	r1, r0, r1
   1954c:	andeq	r2, r0, r4, ror #11
   19550:	andeq	r1, r0, r4, ror #19
   19554:			; <UNDEFINED> instruction: 0x000025bc
   19558:	andeq	r2, r0, r4, ror #10
   1955c:	strdeq	r1, [r0], -r0
   19560:	andeq	r2, r0, r0, lsr #10
   19564:			; <UNDEFINED> instruction: 0x00012eb0
   19568:	andeq	r2, r0, ip, ror #6
   1956c:	andeq	r1, r0, ip, ror r7
   19570:	andeq	r1, r0, r4, asr #14
   19574:	andeq	r2, r0, r0, lsl #6
   19578:	andeq	r1, r0, r0, lsr #14
   1957c:	andeq	r1, r0, r0, lsl #14
   19580:	push	{r2, r3}
   19584:	ldr	r3, [pc, #88]	; 195e4 <fts_children@@Base+0x19c8>
   19588:	ldr	ip, [pc, #88]	; 195e8 <fts_children@@Base+0x19cc>
   1958c:	add	r3, pc, r3
   19590:	push	{r4, lr}
   19594:	sub	sp, sp, #8
   19598:	ldr	r4, [r3, ip]
   1959c:	ldr	r2, [sp, #16]
   195a0:	ldr	ip, [r4]
   195a4:	ands	r3, r2, #64	; 0x40
   195a8:	ldrne	r3, [sp, #20]
   195ac:	str	ip, [sp, #4]
   195b0:	addne	ip, sp, #20
   195b4:	strne	ip, [sp]
   195b8:	bl	11510 <openat64@plt>
   195bc:	bl	195f8 <fts_children@@Base+0x19dc>
   195c0:	ldr	r2, [sp, #4]
   195c4:	ldr	r3, [r4]
   195c8:	cmp	r2, r3
   195cc:	bne	195e0 <fts_children@@Base+0x19c4>
   195d0:	add	sp, sp, #8
   195d4:	pop	{r4, lr}
   195d8:	add	sp, sp, #8
   195dc:	bx	lr
   195e0:	bl	113f0 <__stack_chk_fail@plt>
   195e4:	andeq	r2, r1, ip, ror #20
   195e8:	andeq	r0, r0, ip, lsr r1
   195ec:	mov	r1, #0
   195f0:	mov	r2, #3
   195f4:	b	196d4 <fts_children@@Base+0x1ab8>
   195f8:	cmp	r0, #2
   195fc:	push	{r3, r4, r5, r6, r7, lr}
   19600:	mov	r4, r0
   19604:	bhi	1962c <fts_children@@Base+0x1a10>
   19608:	bl	195ec <fts_children@@Base+0x19d0>
   1960c:	mov	r7, r0
   19610:	bl	11534 <__errno_location@plt>
   19614:	ldr	r6, [r0]
   19618:	mov	r5, r0
   1961c:	mov	r0, r4
   19620:	mov	r4, r7
   19624:	bl	11660 <close@plt>
   19628:	str	r6, [r5]
   1962c:	mov	r0, r4
   19630:	pop	{r3, r4, r5, r6, r7, pc}
   19634:	push	{r4, r5, r6, lr}
   19638:	sub	sp, sp, #8
   1963c:	mov	r4, r0
   19640:	bl	11570 <fileno@plt>
   19644:	cmp	r0, #0
   19648:	mov	r0, r4
   1964c:	blt	196c8 <fts_children@@Base+0x1aac>
   19650:	bl	114c8 <__freading@plt>
   19654:	cmp	r0, #0
   19658:	bne	19694 <fts_children@@Base+0x1a78>
   1965c:	mov	r0, r4
   19660:	bl	15a08 <close_stdin@@Base+0x266c>
   19664:	cmp	r0, #0
   19668:	beq	196c4 <fts_children@@Base+0x1aa8>
   1966c:	bl	11534 <__errno_location@plt>
   19670:	ldr	r6, [r0]
   19674:	mov	r5, r0
   19678:	mov	r0, r4
   1967c:	bl	11588 <fclose@plt>
   19680:	cmp	r6, #0
   19684:	mvnne	r0, #0
   19688:	strne	r6, [r5]
   1968c:	add	sp, sp, #8
   19690:	pop	{r4, r5, r6, pc}
   19694:	mov	r0, r4
   19698:	bl	11570 <fileno@plt>
   1969c:	mov	r1, #1
   196a0:	mov	r2, #0
   196a4:	mov	r3, #0
   196a8:	str	r1, [sp]
   196ac:	bl	11450 <lseek64@plt>
   196b0:	mvn	r2, #0
   196b4:	mvn	r3, #0
   196b8:	cmp	r1, r3
   196bc:	cmpeq	r0, r2
   196c0:	bne	1965c <fts_children@@Base+0x1a40>
   196c4:	mov	r0, r4
   196c8:	add	sp, sp, #8
   196cc:	pop	{r4, r5, r6, lr}
   196d0:	b	11588 <fclose@plt>
   196d4:	push	{r1, r2, r3}
   196d8:	movw	ip, #1030	; 0x406
   196dc:	ldr	r3, [pc, #336]	; 19834 <fts_children@@Base+0x1c18>
   196e0:	push	{r4, r5, r6, r7, r8, lr}
   196e4:	add	r3, pc, r3
   196e8:	ldr	lr, [pc, #328]	; 19838 <fts_children@@Base+0x1c1c>
   196ec:	sub	sp, sp, #12
   196f0:	add	r2, sp, #40	; 0x28
   196f4:	mov	r6, r0
   196f8:	ldr	r1, [sp, #36]	; 0x24
   196fc:	ldr	r4, [r3, lr]
   19700:	cmp	r1, ip
   19704:	str	r2, [sp]
   19708:	ldr	r3, [r4]
   1970c:	str	r3, [sp, #4]
   19710:	bne	19794 <fts_children@@Base+0x1b78>
   19714:	ldr	r8, [pc, #288]	; 1983c <fts_children@@Base+0x1c20>
   19718:	add	r3, sp, #44	; 0x2c
   1971c:	str	r3, [sp]
   19720:	add	r8, pc, r8
   19724:	ldr	r7, [sp, #40]	; 0x28
   19728:	ldr	r3, [r8]
   1972c:	mov	r2, r7
   19730:	cmp	r3, #0
   19734:	blt	19820 <fts_children@@Base+0x1c04>
   19738:	bl	11528 <fcntl@plt>
   1973c:	subs	r5, r0, #0
   19740:	blt	197a4 <fts_children@@Base+0x1b88>
   19744:	ldr	r3, [pc, #244]	; 19840 <fts_children@@Base+0x1c24>
   19748:	mov	r2, #1
   1974c:	add	r3, pc, r3
   19750:	str	r2, [r3]
   19754:	cmp	r5, #0
   19758:	blt	19770 <fts_children@@Base+0x1b54>
   1975c:	ldr	r3, [pc, #224]	; 19844 <fts_children@@Base+0x1c28>
   19760:	add	r3, pc, r3
   19764:	ldr	r3, [r3]
   19768:	cmn	r3, #1
   1976c:	beq	197d4 <fts_children@@Base+0x1bb8>
   19770:	ldr	r2, [sp, #4]
   19774:	mov	r0, r5
   19778:	ldr	r3, [r4]
   1977c:	cmp	r2, r3
   19780:	bne	19830 <fts_children@@Base+0x1c14>
   19784:	add	sp, sp, #12
   19788:	pop	{r4, r5, r6, r7, r8, lr}
   1978c:	add	sp, sp, #12
   19790:	bx	lr
   19794:	ldr	r2, [sp, #40]	; 0x28
   19798:	bl	11528 <fcntl@plt>
   1979c:	mov	r5, r0
   197a0:	b	19770 <fts_children@@Base+0x1b54>
   197a4:	bl	11534 <__errno_location@plt>
   197a8:	ldr	r3, [r0]
   197ac:	cmp	r3, #22
   197b0:	bne	19744 <fts_children@@Base+0x1b28>
   197b4:	mov	r0, r6
   197b8:	mov	r2, r7
   197bc:	mov	r1, #0
   197c0:	bl	196d4 <fts_children@@Base+0x1ab8>
   197c4:	subs	r5, r0, #0
   197c8:	blt	19770 <fts_children@@Base+0x1b54>
   197cc:	mvn	r3, #0
   197d0:	str	r3, [r8]
   197d4:	mov	r0, r5
   197d8:	mov	r1, #1
   197dc:	bl	11528 <fcntl@plt>
   197e0:	subs	r2, r0, #0
   197e4:	blt	19800 <fts_children@@Base+0x1be4>
   197e8:	orr	r2, r2, #1
   197ec:	mov	r0, r5
   197f0:	mov	r1, #2
   197f4:	bl	11528 <fcntl@plt>
   197f8:	cmn	r0, #1
   197fc:	bne	19770 <fts_children@@Base+0x1b54>
   19800:	bl	11534 <__errno_location@plt>
   19804:	ldr	r7, [r0]
   19808:	mov	r6, r0
   1980c:	mov	r0, r5
   19810:	mvn	r5, #0
   19814:	bl	11660 <close@plt>
   19818:	str	r7, [r6]
   1981c:	b	19770 <fts_children@@Base+0x1b54>
   19820:	mov	r1, #0
   19824:	bl	196d4 <fts_children@@Base+0x1ab8>
   19828:	mov	r5, r0
   1982c:	b	19754 <fts_children@@Base+0x1b38>
   19830:	bl	113f0 <__stack_chk_fail@plt>
   19834:	andeq	r2, r1, r4, lsl r9
   19838:	andeq	r0, r0, ip, lsr r1
   1983c:	andeq	r2, r1, r8, lsl #24
   19840:	ldrdeq	r2, [r1], -ip
   19844:	andeq	r2, r1, r8, asr #23
   19848:	subs	r2, r1, #1
   1984c:	bxeq	lr
   19850:	bcc	19a28 <fts_children@@Base+0x1e0c>
   19854:	cmp	r0, r1
   19858:	bls	19a0c <fts_children@@Base+0x1df0>
   1985c:	tst	r1, r2
   19860:	beq	19a18 <fts_children@@Base+0x1dfc>
   19864:	clz	r3, r0
   19868:	clz	r2, r1
   1986c:	sub	r3, r2, r3
   19870:	rsbs	r3, r3, #31
   19874:	addne	r3, r3, r3, lsl #1
   19878:	mov	r2, #0
   1987c:	addne	pc, pc, r3, lsl #2
   19880:	nop	{0}
   19884:	cmp	r0, r1, lsl #31
   19888:	adc	r2, r2, r2
   1988c:	subcs	r0, r0, r1, lsl #31
   19890:	cmp	r0, r1, lsl #30
   19894:	adc	r2, r2, r2
   19898:	subcs	r0, r0, r1, lsl #30
   1989c:	cmp	r0, r1, lsl #29
   198a0:	adc	r2, r2, r2
   198a4:	subcs	r0, r0, r1, lsl #29
   198a8:	cmp	r0, r1, lsl #28
   198ac:	adc	r2, r2, r2
   198b0:	subcs	r0, r0, r1, lsl #28
   198b4:	cmp	r0, r1, lsl #27
   198b8:	adc	r2, r2, r2
   198bc:	subcs	r0, r0, r1, lsl #27
   198c0:	cmp	r0, r1, lsl #26
   198c4:	adc	r2, r2, r2
   198c8:	subcs	r0, r0, r1, lsl #26
   198cc:	cmp	r0, r1, lsl #25
   198d0:	adc	r2, r2, r2
   198d4:	subcs	r0, r0, r1, lsl #25
   198d8:	cmp	r0, r1, lsl #24
   198dc:	adc	r2, r2, r2
   198e0:	subcs	r0, r0, r1, lsl #24
   198e4:	cmp	r0, r1, lsl #23
   198e8:	adc	r2, r2, r2
   198ec:	subcs	r0, r0, r1, lsl #23
   198f0:	cmp	r0, r1, lsl #22
   198f4:	adc	r2, r2, r2
   198f8:	subcs	r0, r0, r1, lsl #22
   198fc:	cmp	r0, r1, lsl #21
   19900:	adc	r2, r2, r2
   19904:	subcs	r0, r0, r1, lsl #21
   19908:	cmp	r0, r1, lsl #20
   1990c:	adc	r2, r2, r2
   19910:	subcs	r0, r0, r1, lsl #20
   19914:	cmp	r0, r1, lsl #19
   19918:	adc	r2, r2, r2
   1991c:	subcs	r0, r0, r1, lsl #19
   19920:	cmp	r0, r1, lsl #18
   19924:	adc	r2, r2, r2
   19928:	subcs	r0, r0, r1, lsl #18
   1992c:	cmp	r0, r1, lsl #17
   19930:	adc	r2, r2, r2
   19934:	subcs	r0, r0, r1, lsl #17
   19938:	cmp	r0, r1, lsl #16
   1993c:	adc	r2, r2, r2
   19940:	subcs	r0, r0, r1, lsl #16
   19944:	cmp	r0, r1, lsl #15
   19948:	adc	r2, r2, r2
   1994c:	subcs	r0, r0, r1, lsl #15
   19950:	cmp	r0, r1, lsl #14
   19954:	adc	r2, r2, r2
   19958:	subcs	r0, r0, r1, lsl #14
   1995c:	cmp	r0, r1, lsl #13
   19960:	adc	r2, r2, r2
   19964:	subcs	r0, r0, r1, lsl #13
   19968:	cmp	r0, r1, lsl #12
   1996c:	adc	r2, r2, r2
   19970:	subcs	r0, r0, r1, lsl #12
   19974:	cmp	r0, r1, lsl #11
   19978:	adc	r2, r2, r2
   1997c:	subcs	r0, r0, r1, lsl #11
   19980:	cmp	r0, r1, lsl #10
   19984:	adc	r2, r2, r2
   19988:	subcs	r0, r0, r1, lsl #10
   1998c:	cmp	r0, r1, lsl #9
   19990:	adc	r2, r2, r2
   19994:	subcs	r0, r0, r1, lsl #9
   19998:	cmp	r0, r1, lsl #8
   1999c:	adc	r2, r2, r2
   199a0:	subcs	r0, r0, r1, lsl #8
   199a4:	cmp	r0, r1, lsl #7
   199a8:	adc	r2, r2, r2
   199ac:	subcs	r0, r0, r1, lsl #7
   199b0:	cmp	r0, r1, lsl #6
   199b4:	adc	r2, r2, r2
   199b8:	subcs	r0, r0, r1, lsl #6
   199bc:	cmp	r0, r1, lsl #5
   199c0:	adc	r2, r2, r2
   199c4:	subcs	r0, r0, r1, lsl #5
   199c8:	cmp	r0, r1, lsl #4
   199cc:	adc	r2, r2, r2
   199d0:	subcs	r0, r0, r1, lsl #4
   199d4:	cmp	r0, r1, lsl #3
   199d8:	adc	r2, r2, r2
   199dc:	subcs	r0, r0, r1, lsl #3
   199e0:	cmp	r0, r1, lsl #2
   199e4:	adc	r2, r2, r2
   199e8:	subcs	r0, r0, r1, lsl #2
   199ec:	cmp	r0, r1, lsl #1
   199f0:	adc	r2, r2, r2
   199f4:	subcs	r0, r0, r1, lsl #1
   199f8:	cmp	r0, r1
   199fc:	adc	r2, r2, r2
   19a00:	subcs	r0, r0, r1
   19a04:	mov	r0, r2
   19a08:	bx	lr
   19a0c:	moveq	r0, #1
   19a10:	movne	r0, #0
   19a14:	bx	lr
   19a18:	clz	r2, r1
   19a1c:	rsb	r2, r2, #31
   19a20:	lsr	r0, r0, r2
   19a24:	bx	lr
   19a28:	cmp	r0, #0
   19a2c:	mvnne	r0, #0
   19a30:	b	19a90 <fts_children@@Base+0x1e74>
   19a34:	cmp	r1, #0
   19a38:	beq	19a28 <fts_children@@Base+0x1e0c>
   19a3c:	push	{r0, r1, lr}
   19a40:	bl	19848 <fts_children@@Base+0x1c2c>
   19a44:	pop	{r1, r2, lr}
   19a48:	mul	r3, r2, r0
   19a4c:	sub	r1, r1, r3
   19a50:	bx	lr
   19a54:	cmp	r3, #0
   19a58:	cmpeq	r2, #0
   19a5c:	bne	19a74 <fts_children@@Base+0x1e58>
   19a60:	cmp	r1, #0
   19a64:	cmpeq	r0, #0
   19a68:	mvnne	r1, #0
   19a6c:	mvnne	r0, #0
   19a70:	b	19a90 <fts_children@@Base+0x1e74>
   19a74:	sub	sp, sp, #8
   19a78:	push	{sp, lr}
   19a7c:	bl	19adc <fts_children@@Base+0x1ec0>
   19a80:	ldr	lr, [sp, #4]
   19a84:	add	sp, sp, #8
   19a88:	pop	{r2, r3}
   19a8c:	bx	lr
   19a90:	push	{r1, lr}
   19a94:	mov	r0, #8
   19a98:	bl	11354 <raise@plt>
   19a9c:	pop	{r1, pc}
   19aa0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19aa4:	mov	r8, r2
   19aa8:	mov	r6, r0
   19aac:	mov	r7, r1
   19ab0:	mov	sl, r3
   19ab4:	ldr	r9, [sp, #32]
   19ab8:	bl	19b18 <fts_children@@Base+0x1efc>
   19abc:	umull	r4, r5, r8, r0
   19ac0:	mul	r8, r8, r1
   19ac4:	mla	r2, r0, sl, r8
   19ac8:	add	r5, r2, r5
   19acc:	subs	r4, r6, r4
   19ad0:	sbc	r5, r7, r5
   19ad4:	strd	r4, [r9]
   19ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19adc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19ae0:	mov	r8, r2
   19ae4:	mov	r6, r0
   19ae8:	mov	r7, r1
   19aec:	mov	r5, r3
   19af0:	ldr	r9, [sp, #32]
   19af4:	bl	19fa4 <fts_children@@Base+0x2388>
   19af8:	mul	r3, r0, r5
   19afc:	umull	r4, r5, r0, r8
   19b00:	mla	r8, r8, r1, r3
   19b04:	add	r5, r8, r5
   19b08:	subs	r4, r6, r4
   19b0c:	sbc	r5, r7, r5
   19b10:	strd	r4, [r9]
   19b14:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b1c:	rsbs	r4, r0, #0
   19b20:	rsc	r5, r1, #0
   19b24:	cmp	r1, #0
   19b28:	mvn	r6, #0
   19b2c:	sub	sp, sp, #12
   19b30:	movge	r4, r0
   19b34:	movge	r5, r1
   19b38:	movge	r6, #0
   19b3c:	cmp	r3, #0
   19b40:	blt	19d78 <fts_children@@Base+0x215c>
   19b44:	cmp	r3, #0
   19b48:	mov	sl, r4
   19b4c:	mov	ip, r5
   19b50:	mov	r0, r2
   19b54:	mov	r1, r3
   19b58:	mov	r8, r2
   19b5c:	mov	r7, r4
   19b60:	mov	r9, r5
   19b64:	bne	19c5c <fts_children@@Base+0x2040>
   19b68:	cmp	r2, r5
   19b6c:	bls	19c98 <fts_children@@Base+0x207c>
   19b70:	clz	r3, r2
   19b74:	cmp	r3, #0
   19b78:	rsbne	r2, r3, #32
   19b7c:	lslne	r8, r0, r3
   19b80:	lsrne	r2, r4, r2
   19b84:	lslne	r7, r4, r3
   19b88:	orrne	r9, r2, r5, lsl r3
   19b8c:	lsr	r4, r8, #16
   19b90:	uxth	sl, r8
   19b94:	mov	r1, r4
   19b98:	mov	r0, r9
   19b9c:	bl	19848 <fts_children@@Base+0x1c2c>
   19ba0:	mov	r1, r4
   19ba4:	mov	fp, r0
   19ba8:	mov	r0, r9
   19bac:	bl	19a34 <fts_children@@Base+0x1e18>
   19bb0:	mul	r0, sl, fp
   19bb4:	lsr	r2, r7, #16
   19bb8:	orr	r1, r2, r1, lsl #16
   19bbc:	cmp	r0, r1
   19bc0:	bls	19be4 <fts_children@@Base+0x1fc8>
   19bc4:	adds	r1, r1, r8
   19bc8:	sub	r3, fp, #1
   19bcc:	bcs	19be0 <fts_children@@Base+0x1fc4>
   19bd0:	cmp	r0, r1
   19bd4:	subhi	fp, fp, #2
   19bd8:	addhi	r1, r1, r8
   19bdc:	bhi	19be4 <fts_children@@Base+0x1fc8>
   19be0:	mov	fp, r3
   19be4:	rsb	r9, r0, r1
   19be8:	mov	r1, r4
   19bec:	uxth	r7, r7
   19bf0:	mov	r0, r9
   19bf4:	bl	19848 <fts_children@@Base+0x1c2c>
   19bf8:	mov	r1, r4
   19bfc:	mov	r5, r0
   19c00:	mov	r0, r9
   19c04:	bl	19a34 <fts_children@@Base+0x1e18>
   19c08:	mul	sl, sl, r5
   19c0c:	orr	r1, r7, r1, lsl #16
   19c10:	cmp	sl, r1
   19c14:	bls	19c34 <fts_children@@Base+0x2018>
   19c18:	adds	r8, r1, r8
   19c1c:	sub	r3, r5, #1
   19c20:	bcs	19c30 <fts_children@@Base+0x2014>
   19c24:	cmp	sl, r8
   19c28:	subhi	r5, r5, #2
   19c2c:	bhi	19c34 <fts_children@@Base+0x2018>
   19c30:	mov	r5, r3
   19c34:	orr	r3, r5, fp, lsl #16
   19c38:	mov	r4, #0
   19c3c:	cmp	r6, #0
   19c40:	mov	r0, r3
   19c44:	mov	r1, r4
   19c48:	beq	19c54 <fts_children@@Base+0x2038>
   19c4c:	rsbs	r0, r0, #0
   19c50:	rsc	r1, r1, #0
   19c54:	add	sp, sp, #12
   19c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c5c:	cmp	r3, r5
   19c60:	movhi	r4, #0
   19c64:	movhi	r3, r4
   19c68:	bhi	19c3c <fts_children@@Base+0x2020>
   19c6c:	clz	r5, r1
   19c70:	cmp	r5, #0
   19c74:	bne	19e64 <fts_children@@Base+0x2248>
   19c78:	cmp	r1, ip
   19c7c:	cmpcs	r2, sl
   19c80:	movhi	r4, #0
   19c84:	movls	r4, #1
   19c88:	movls	r3, #1
   19c8c:	movls	r4, r5
   19c90:	movhi	r3, r4
   19c94:	b	19c3c <fts_children@@Base+0x2020>
   19c98:	cmp	r2, #0
   19c9c:	bne	19cb0 <fts_children@@Base+0x2094>
   19ca0:	mov	r1, r2
   19ca4:	mov	r0, #1
   19ca8:	bl	19848 <fts_children@@Base+0x1c2c>
   19cac:	mov	r8, r0
   19cb0:	clz	r3, r8
   19cb4:	cmp	r3, #0
   19cb8:	bne	19d88 <fts_children@@Base+0x216c>
   19cbc:	rsb	r9, r8, r9
   19cc0:	lsr	r5, r8, #16
   19cc4:	uxth	sl, r8
   19cc8:	mov	r4, #1
   19ccc:	mov	r1, r5
   19cd0:	mov	r0, r9
   19cd4:	bl	19848 <fts_children@@Base+0x1c2c>
   19cd8:	mov	r1, r5
   19cdc:	mov	fp, r0
   19ce0:	mov	r0, r9
   19ce4:	bl	19a34 <fts_children@@Base+0x1e18>
   19ce8:	mul	r0, sl, fp
   19cec:	lsr	r2, r7, #16
   19cf0:	orr	r1, r2, r1, lsl #16
   19cf4:	cmp	r0, r1
   19cf8:	bls	19d18 <fts_children@@Base+0x20fc>
   19cfc:	adds	r1, r1, r8
   19d00:	sub	r3, fp, #1
   19d04:	bcs	19f84 <fts_children@@Base+0x2368>
   19d08:	cmp	r0, r1
   19d0c:	subhi	fp, fp, #2
   19d10:	addhi	r1, r1, r8
   19d14:	bls	19f84 <fts_children@@Base+0x2368>
   19d18:	rsb	r2, r0, r1
   19d1c:	mov	r1, r5
   19d20:	str	r2, [sp]
   19d24:	uxth	r7, r7
   19d28:	mov	r0, r2
   19d2c:	bl	19848 <fts_children@@Base+0x1c2c>
   19d30:	ldr	r2, [sp]
   19d34:	mov	r1, r5
   19d38:	mov	r9, r0
   19d3c:	mov	r0, r2
   19d40:	bl	19a34 <fts_children@@Base+0x1e18>
   19d44:	mul	sl, sl, r9
   19d48:	orr	r1, r7, r1, lsl #16
   19d4c:	cmp	sl, r1
   19d50:	bls	19d70 <fts_children@@Base+0x2154>
   19d54:	adds	r8, r1, r8
   19d58:	sub	r3, r9, #1
   19d5c:	bcs	19d6c <fts_children@@Base+0x2150>
   19d60:	cmp	sl, r8
   19d64:	subhi	r9, r9, #2
   19d68:	bhi	19d70 <fts_children@@Base+0x2154>
   19d6c:	mov	r9, r3
   19d70:	orr	r3, r9, fp, lsl #16
   19d74:	b	19c3c <fts_children@@Base+0x2020>
   19d78:	mvn	r6, r6
   19d7c:	rsbs	r2, r2, #0
   19d80:	rsc	r3, r3, #0
   19d84:	b	19b44 <fts_children@@Base+0x1f28>
   19d88:	lsl	r8, r8, r3
   19d8c:	rsb	fp, r3, #32
   19d90:	lsr	r4, r9, fp
   19d94:	lsr	fp, r7, fp
   19d98:	lsr	r5, r8, #16
   19d9c:	orr	fp, fp, r9, lsl r3
   19da0:	mov	r0, r4
   19da4:	lsl	r7, r7, r3
   19da8:	mov	r1, r5
   19dac:	uxth	sl, r8
   19db0:	bl	19848 <fts_children@@Base+0x1c2c>
   19db4:	mov	r1, r5
   19db8:	mov	r3, r0
   19dbc:	mov	r0, r4
   19dc0:	str	r3, [sp]
   19dc4:	bl	19a34 <fts_children@@Base+0x1e18>
   19dc8:	ldr	r3, [sp]
   19dcc:	lsr	r2, fp, #16
   19dd0:	mul	r0, sl, r3
   19dd4:	orr	r1, r2, r1, lsl #16
   19dd8:	cmp	r0, r1
   19ddc:	bls	19dfc <fts_children@@Base+0x21e0>
   19de0:	adds	r1, r1, r8
   19de4:	sub	r2, r3, #1
   19de8:	bcs	19f9c <fts_children@@Base+0x2380>
   19dec:	cmp	r0, r1
   19df0:	subhi	r3, r3, #2
   19df4:	addhi	r1, r1, r8
   19df8:	bls	19f9c <fts_children@@Base+0x2380>
   19dfc:	rsb	r9, r0, r1
   19e00:	mov	r1, r5
   19e04:	str	r3, [sp]
   19e08:	uxth	fp, fp
   19e0c:	mov	r0, r9
   19e10:	bl	19848 <fts_children@@Base+0x1c2c>
   19e14:	mov	r1, r5
   19e18:	mov	r4, r0
   19e1c:	mov	r0, r9
   19e20:	bl	19a34 <fts_children@@Base+0x1e18>
   19e24:	mul	r9, sl, r4
   19e28:	ldr	r3, [sp]
   19e2c:	orr	r1, fp, r1, lsl #16
   19e30:	cmp	r9, r1
   19e34:	bls	19e58 <fts_children@@Base+0x223c>
   19e38:	adds	r1, r1, r8
   19e3c:	sub	r2, r4, #1
   19e40:	bcs	19e54 <fts_children@@Base+0x2238>
   19e44:	cmp	r9, r1
   19e48:	subhi	r4, r4, #2
   19e4c:	addhi	r1, r1, r8
   19e50:	bhi	19e58 <fts_children@@Base+0x223c>
   19e54:	mov	r4, r2
   19e58:	rsb	r9, r9, r1
   19e5c:	orr	r4, r4, r3, lsl #16
   19e60:	b	19ccc <fts_children@@Base+0x20b0>
   19e64:	rsb	sl, r5, #32
   19e68:	lsl	r3, r2, r5
   19e6c:	lsr	r0, r2, sl
   19e70:	lsr	r2, ip, sl
   19e74:	orr	r4, r0, r1, lsl r5
   19e78:	lsr	sl, r7, sl
   19e7c:	mov	r0, r2
   19e80:	orr	sl, sl, ip, lsl r5
   19e84:	lsr	r9, r4, #16
   19e88:	str	r3, [sp, #4]
   19e8c:	str	r2, [sp]
   19e90:	uxth	fp, r4
   19e94:	mov	r1, r9
   19e98:	bl	19848 <fts_children@@Base+0x1c2c>
   19e9c:	ldr	r2, [sp]
   19ea0:	mov	r1, r9
   19ea4:	mov	r8, r0
   19ea8:	mov	r0, r2
   19eac:	bl	19a34 <fts_children@@Base+0x1e18>
   19eb0:	mul	r0, fp, r8
   19eb4:	lsr	r2, sl, #16
   19eb8:	orr	r1, r2, r1, lsl #16
   19ebc:	cmp	r0, r1
   19ec0:	bls	19ee0 <fts_children@@Base+0x22c4>
   19ec4:	adds	r1, r1, r4
   19ec8:	sub	r2, r8, #1
   19ecc:	bcs	19f94 <fts_children@@Base+0x2378>
   19ed0:	cmp	r0, r1
   19ed4:	subhi	r8, r8, #2
   19ed8:	addhi	r1, r1, r4
   19edc:	bls	19f94 <fts_children@@Base+0x2378>
   19ee0:	rsb	ip, r0, r1
   19ee4:	mov	r1, r9
   19ee8:	str	ip, [sp]
   19eec:	mov	r0, ip
   19ef0:	bl	19848 <fts_children@@Base+0x1c2c>
   19ef4:	ldr	ip, [sp]
   19ef8:	mov	r1, r9
   19efc:	mov	r2, r0
   19f00:	mov	r0, ip
   19f04:	str	r2, [sp]
   19f08:	bl	19a34 <fts_children@@Base+0x1e18>
   19f0c:	ldr	r2, [sp]
   19f10:	uxth	ip, sl
   19f14:	mul	fp, fp, r2
   19f18:	orr	ip, ip, r1, lsl #16
   19f1c:	cmp	fp, ip
   19f20:	bls	19f40 <fts_children@@Base+0x2324>
   19f24:	adds	ip, ip, r4
   19f28:	sub	r1, r2, #1
   19f2c:	bcs	19f8c <fts_children@@Base+0x2370>
   19f30:	cmp	fp, ip
   19f34:	subhi	r2, r2, #2
   19f38:	addhi	ip, ip, r4
   19f3c:	bls	19f8c <fts_children@@Base+0x2370>
   19f40:	ldr	r0, [sp, #4]
   19f44:	orr	r1, r2, r8, lsl #16
   19f48:	rsb	fp, fp, ip
   19f4c:	umull	r2, r3, r1, r0
   19f50:	cmp	fp, r3
   19f54:	bcc	19f78 <fts_children@@Base+0x235c>
   19f58:	movne	r4, #0
   19f5c:	moveq	r4, #1
   19f60:	cmp	r2, r7, lsl r5
   19f64:	movls	r4, #0
   19f68:	andhi	r4, r4, #1
   19f6c:	cmp	r4, #0
   19f70:	moveq	r3, r1
   19f74:	beq	19c3c <fts_children@@Base+0x2020>
   19f78:	sub	r3, r1, #1
   19f7c:	mov	r4, #0
   19f80:	b	19c3c <fts_children@@Base+0x2020>
   19f84:	mov	fp, r3
   19f88:	b	19d18 <fts_children@@Base+0x20fc>
   19f8c:	mov	r2, r1
   19f90:	b	19f40 <fts_children@@Base+0x2324>
   19f94:	mov	r8, r2
   19f98:	b	19ee0 <fts_children@@Base+0x22c4>
   19f9c:	mov	r3, r2
   19fa0:	b	19dfc <fts_children@@Base+0x21e0>
   19fa4:	cmp	r3, #0
   19fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19fac:	mov	r6, r0
   19fb0:	sub	sp, sp, #12
   19fb4:	mov	r5, r1
   19fb8:	mov	r7, r0
   19fbc:	mov	r4, r2
   19fc0:	mov	r8, r1
   19fc4:	bne	1a0a4 <fts_children@@Base+0x2488>
   19fc8:	cmp	r2, r1
   19fcc:	bls	1a0e0 <fts_children@@Base+0x24c4>
   19fd0:	clz	r3, r2
   19fd4:	cmp	r3, #0
   19fd8:	rsbne	r8, r3, #32
   19fdc:	lslne	r4, r2, r3
   19fe0:	lsrne	r8, r0, r8
   19fe4:	lslne	r7, r0, r3
   19fe8:	orrne	r8, r8, r1, lsl r3
   19fec:	lsr	r5, r4, #16
   19ff0:	uxth	sl, r4
   19ff4:	mov	r1, r5
   19ff8:	mov	r0, r8
   19ffc:	bl	19848 <fts_children@@Base+0x1c2c>
   1a000:	mov	r1, r5
   1a004:	mov	r9, r0
   1a008:	mov	r0, r8
   1a00c:	bl	19a34 <fts_children@@Base+0x1e18>
   1a010:	mul	r0, sl, r9
   1a014:	lsr	r3, r7, #16
   1a018:	orr	r1, r3, r1, lsl #16
   1a01c:	cmp	r0, r1
   1a020:	bls	1a044 <fts_children@@Base+0x2428>
   1a024:	adds	r1, r1, r4
   1a028:	sub	r2, r9, #1
   1a02c:	bcs	1a040 <fts_children@@Base+0x2424>
   1a030:	cmp	r0, r1
   1a034:	subhi	r9, r9, #2
   1a038:	addhi	r1, r1, r4
   1a03c:	bhi	1a044 <fts_children@@Base+0x2428>
   1a040:	mov	r9, r2
   1a044:	rsb	r8, r0, r1
   1a048:	mov	r1, r5
   1a04c:	uxth	r7, r7
   1a050:	mov	r0, r8
   1a054:	bl	19848 <fts_children@@Base+0x1c2c>
   1a058:	mov	r1, r5
   1a05c:	mov	r6, r0
   1a060:	mov	r0, r8
   1a064:	bl	19a34 <fts_children@@Base+0x1e18>
   1a068:	mul	sl, sl, r6
   1a06c:	orr	r1, r7, r1, lsl #16
   1a070:	cmp	sl, r1
   1a074:	bls	1a090 <fts_children@@Base+0x2474>
   1a078:	adds	r4, r1, r4
   1a07c:	sub	r3, r6, #1
   1a080:	bcs	1a38c <fts_children@@Base+0x2770>
   1a084:	cmp	sl, r4
   1a088:	subhi	r6, r6, #2
   1a08c:	bls	1a38c <fts_children@@Base+0x2770>
   1a090:	orr	r0, r6, r9, lsl #16
   1a094:	mov	r6, #0
   1a098:	mov	r1, r6
   1a09c:	add	sp, sp, #12
   1a0a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0a4:	cmp	r3, r1
   1a0a8:	movhi	r6, #0
   1a0ac:	movhi	r0, r6
   1a0b0:	bhi	1a098 <fts_children@@Base+0x247c>
   1a0b4:	clz	r7, r3
   1a0b8:	cmp	r7, #0
   1a0bc:	bne	1a1bc <fts_children@@Base+0x25a0>
   1a0c0:	cmp	r3, r1
   1a0c4:	cmpcs	r2, r6
   1a0c8:	movhi	r6, #0
   1a0cc:	movls	r6, #1
   1a0d0:	movls	r0, #1
   1a0d4:	movls	r6, r7
   1a0d8:	movhi	r0, r6
   1a0dc:	b	1a098 <fts_children@@Base+0x247c>
   1a0e0:	cmp	r2, #0
   1a0e4:	bne	1a0f8 <fts_children@@Base+0x24dc>
   1a0e8:	mov	r1, r2
   1a0ec:	mov	r0, #1
   1a0f0:	bl	19848 <fts_children@@Base+0x1c2c>
   1a0f4:	mov	r4, r0
   1a0f8:	clz	r3, r4
   1a0fc:	cmp	r3, #0
   1a100:	bne	1a2b8 <fts_children@@Base+0x269c>
   1a104:	rsb	r5, r4, r5
   1a108:	lsr	r8, r4, #16
   1a10c:	uxth	sl, r4
   1a110:	mov	r6, #1
   1a114:	mov	r1, r8
   1a118:	mov	r0, r5
   1a11c:	bl	19848 <fts_children@@Base+0x1c2c>
   1a120:	mov	r1, r8
   1a124:	mov	r9, r0
   1a128:	mov	r0, r5
   1a12c:	bl	19a34 <fts_children@@Base+0x1e18>
   1a130:	mul	r0, sl, r9
   1a134:	lsr	r3, r7, #16
   1a138:	orr	r1, r3, r1, lsl #16
   1a13c:	cmp	r0, r1
   1a140:	bls	1a160 <fts_children@@Base+0x2544>
   1a144:	adds	r1, r1, r4
   1a148:	sub	r2, r9, #1
   1a14c:	bcs	1a394 <fts_children@@Base+0x2778>
   1a150:	cmp	r0, r1
   1a154:	subhi	r9, r9, #2
   1a158:	addhi	r1, r1, r4
   1a15c:	bls	1a394 <fts_children@@Base+0x2778>
   1a160:	rsb	fp, r0, r1
   1a164:	mov	r1, r8
   1a168:	uxth	r7, r7
   1a16c:	mov	r0, fp
   1a170:	bl	19848 <fts_children@@Base+0x1c2c>
   1a174:	mov	r1, r8
   1a178:	mov	r5, r0
   1a17c:	mov	r0, fp
   1a180:	bl	19a34 <fts_children@@Base+0x1e18>
   1a184:	mul	sl, sl, r5
   1a188:	orr	r1, r7, r1, lsl #16
   1a18c:	cmp	sl, r1
   1a190:	bls	1a1ac <fts_children@@Base+0x2590>
   1a194:	adds	r4, r1, r4
   1a198:	sub	r3, r5, #1
   1a19c:	bcs	1a39c <fts_children@@Base+0x2780>
   1a1a0:	cmp	sl, r4
   1a1a4:	subhi	r5, r5, #2
   1a1a8:	bls	1a39c <fts_children@@Base+0x2780>
   1a1ac:	orr	r0, r5, r9, lsl #16
   1a1b0:	mov	r1, r6
   1a1b4:	add	sp, sp, #12
   1a1b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a1bc:	rsb	r1, r7, #32
   1a1c0:	lsl	r0, r2, r7
   1a1c4:	lsr	r2, r2, r1
   1a1c8:	lsr	fp, r5, r1
   1a1cc:	orr	r8, r2, r3, lsl r7
   1a1d0:	lsr	r1, r6, r1
   1a1d4:	str	r0, [sp, #4]
   1a1d8:	orr	r5, r1, r5, lsl r7
   1a1dc:	lsr	r9, r8, #16
   1a1e0:	mov	r0, fp
   1a1e4:	uxth	sl, r8
   1a1e8:	mov	r1, r9
   1a1ec:	bl	19848 <fts_children@@Base+0x1c2c>
   1a1f0:	mov	r1, r9
   1a1f4:	mov	r4, r0
   1a1f8:	mov	r0, fp
   1a1fc:	bl	19a34 <fts_children@@Base+0x1e18>
   1a200:	mul	r0, sl, r4
   1a204:	lsr	ip, r5, #16
   1a208:	orr	r1, ip, r1, lsl #16
   1a20c:	cmp	r0, r1
   1a210:	bls	1a224 <fts_children@@Base+0x2608>
   1a214:	adds	r1, r1, r8
   1a218:	sub	r2, r4, #1
   1a21c:	bcc	1a3b8 <fts_children@@Base+0x279c>
   1a220:	mov	r4, r2
   1a224:	rsb	ip, r0, r1
   1a228:	mov	r1, r9
   1a22c:	str	ip, [sp]
   1a230:	uxth	r5, r5
   1a234:	mov	r0, ip
   1a238:	bl	19848 <fts_children@@Base+0x1c2c>
   1a23c:	ldr	ip, [sp]
   1a240:	mov	r1, r9
   1a244:	mov	fp, r0
   1a248:	mov	r0, ip
   1a24c:	bl	19a34 <fts_children@@Base+0x1e18>
   1a250:	mul	sl, sl, fp
   1a254:	orr	r1, r5, r1, lsl #16
   1a258:	cmp	sl, r1
   1a25c:	bls	1a270 <fts_children@@Base+0x2654>
   1a260:	adds	r1, r1, r8
   1a264:	sub	r2, fp, #1
   1a268:	bcc	1a3a4 <fts_children@@Base+0x2788>
   1a26c:	mov	fp, r2
   1a270:	ldr	r3, [sp, #4]
   1a274:	orr	r0, fp, r4, lsl #16
   1a278:	rsb	sl, sl, r1
   1a27c:	umull	r4, r5, r0, r3
   1a280:	cmp	sl, r5
   1a284:	bcc	1a2a4 <fts_children@@Base+0x2688>
   1a288:	movne	r3, #0
   1a28c:	moveq	r3, #1
   1a290:	cmp	r4, r6, lsl r7
   1a294:	movls	r6, #0
   1a298:	andhi	r6, r3, #1
   1a29c:	cmp	r6, #0
   1a2a0:	beq	1a098 <fts_children@@Base+0x247c>
   1a2a4:	mov	r6, #0
   1a2a8:	sub	r0, r0, #1
   1a2ac:	mov	r1, r6
   1a2b0:	add	sp, sp, #12
   1a2b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a2b8:	lsl	r4, r4, r3
   1a2bc:	rsb	r9, r3, #32
   1a2c0:	lsr	r2, r5, r9
   1a2c4:	lsr	r9, r6, r9
   1a2c8:	lsr	r8, r4, #16
   1a2cc:	orr	r9, r9, r5, lsl r3
   1a2d0:	mov	r0, r2
   1a2d4:	lsl	r7, r6, r3
   1a2d8:	mov	r1, r8
   1a2dc:	str	r2, [sp]
   1a2e0:	bl	19848 <fts_children@@Base+0x1c2c>
   1a2e4:	ldr	r2, [sp]
   1a2e8:	mov	r1, r8
   1a2ec:	uxth	sl, r4
   1a2f0:	mov	fp, r0
   1a2f4:	mov	r0, r2
   1a2f8:	bl	19a34 <fts_children@@Base+0x1e18>
   1a2fc:	mul	r0, sl, fp
   1a300:	lsr	r3, r9, #16
   1a304:	orr	r1, r3, r1, lsl #16
   1a308:	cmp	r0, r1
   1a30c:	bls	1a32c <fts_children@@Base+0x2710>
   1a310:	adds	r1, r1, r4
   1a314:	sub	r3, fp, #1
   1a318:	bcs	1a3cc <fts_children@@Base+0x27b0>
   1a31c:	cmp	r0, r1
   1a320:	subhi	fp, fp, #2
   1a324:	addhi	r1, r1, r4
   1a328:	bls	1a3cc <fts_children@@Base+0x27b0>
   1a32c:	rsb	r5, r0, r1
   1a330:	mov	r1, r8
   1a334:	uxth	r9, r9
   1a338:	mov	r0, r5
   1a33c:	bl	19848 <fts_children@@Base+0x1c2c>
   1a340:	mov	r1, r8
   1a344:	mov	r6, r0
   1a348:	mov	r0, r5
   1a34c:	bl	19a34 <fts_children@@Base+0x1e18>
   1a350:	mul	r5, sl, r6
   1a354:	orr	r1, r9, r1, lsl #16
   1a358:	cmp	r5, r1
   1a35c:	bls	1a380 <fts_children@@Base+0x2764>
   1a360:	adds	r1, r1, r4
   1a364:	sub	r3, r6, #1
   1a368:	bcs	1a37c <fts_children@@Base+0x2760>
   1a36c:	cmp	r5, r1
   1a370:	subhi	r6, r6, #2
   1a374:	addhi	r1, r1, r4
   1a378:	bhi	1a380 <fts_children@@Base+0x2764>
   1a37c:	mov	r6, r3
   1a380:	rsb	r5, r5, r1
   1a384:	orr	r6, r6, fp, lsl #16
   1a388:	b	1a114 <fts_children@@Base+0x24f8>
   1a38c:	mov	r6, r3
   1a390:	b	1a090 <fts_children@@Base+0x2474>
   1a394:	mov	r9, r2
   1a398:	b	1a160 <fts_children@@Base+0x2544>
   1a39c:	mov	r5, r3
   1a3a0:	b	1a1ac <fts_children@@Base+0x2590>
   1a3a4:	cmp	sl, r1
   1a3a8:	subhi	fp, fp, #2
   1a3ac:	addhi	r1, r1, r8
   1a3b0:	bhi	1a270 <fts_children@@Base+0x2654>
   1a3b4:	b	1a26c <fts_children@@Base+0x2650>
   1a3b8:	cmp	r0, r1
   1a3bc:	subhi	r4, r4, #2
   1a3c0:	addhi	r1, r1, r8
   1a3c4:	bhi	1a224 <fts_children@@Base+0x2608>
   1a3c8:	b	1a220 <fts_children@@Base+0x2604>
   1a3cc:	mov	fp, r3
   1a3d0:	b	1a32c <fts_children@@Base+0x2710>
   1a3d4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a3d8:	mov	r7, r0
   1a3dc:	ldr	r6, [pc, #76]	; 1a430 <fts_children@@Base+0x2814>
   1a3e0:	mov	r8, r1
   1a3e4:	ldr	r5, [pc, #72]	; 1a434 <fts_children@@Base+0x2818>
   1a3e8:	mov	r9, r2
   1a3ec:	add	r6, pc, r6
   1a3f0:	bl	11304 <fdopen@plt-0x20>
   1a3f4:	add	r5, pc, r5
   1a3f8:	rsb	r6, r5, r6
   1a3fc:	asrs	r6, r6, #2
   1a400:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a404:	sub	r5, r5, #4
   1a408:	mov	r4, #0
   1a40c:	add	r4, r4, #1
   1a410:	ldr	r3, [r5, #4]!
   1a414:	mov	r0, r7
   1a418:	mov	r1, r8
   1a41c:	mov	r2, r9
   1a420:	blx	r3
   1a424:	cmp	r4, r6
   1a428:	bne	1a40c <fts_children@@Base+0x27f0>
   1a42c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a430:	andeq	r1, r1, ip, lsl #20
   1a434:	andeq	r1, r1, r0, lsl #20
   1a438:	bx	lr
   1a43c:	ldr	r3, [pc, #28]	; 1a460 <fts_children@@Base+0x2844>
   1a440:	mov	r1, #0
   1a444:	ldr	r2, [pc, #24]	; 1a464 <fts_children@@Base+0x2848>
   1a448:	add	r3, pc, r3
   1a44c:	ldr	r3, [r3, r2]
   1a450:	cmp	r3, #0
   1a454:	ldrne	r2, [r3]
   1a458:	moveq	r2, r3
   1a45c:	b	11540 <__cxa_atexit@plt>
   1a460:			; <UNDEFINED> instruction: 0x00011bb0
   1a464:	andeq	r0, r0, r4, asr r1

Disassembly of section .fini:

0001a468 <.fini>:
   1a468:	push	{r3, lr}
   1a46c:	pop	{r3, pc}
