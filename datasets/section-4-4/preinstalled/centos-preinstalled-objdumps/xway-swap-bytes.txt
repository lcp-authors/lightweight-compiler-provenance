
centos-preinstalled/xway-swap-bytes:     file format elf32-littlearm


Disassembly of section .init:

00010484 <.init>:
   10484:	push	{r3, lr}
   10488:	bl	1061c <abort@plt+0x124>
   1048c:	pop	{r3, pc}

Disassembly of section .plt:

00010490 <read@plt-0x14>:
   10490:	push	{lr}		; (str lr, [sp, #-4]!)
   10494:	ldr	lr, [pc, #4]	; 104a0 <read@plt-0x4>
   10498:	add	lr, pc, lr
   1049c:	ldr	pc, [lr, #8]!
   104a0:	andeq	r0, r1, r0, ror #22

000104a4 <read@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2912]!	; 0xb60

000104b0 <__stack_chk_fail@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2904]!	; 0xb58

000104bc <perror@plt>:
   104bc:	add	ip, pc, #0, 12
   104c0:	add	ip, ip, #16, 20	; 0x10000
   104c4:	ldr	pc, [ip, #2896]!	; 0xb50

000104c8 <__libc_start_main@plt>:
   104c8:	add	ip, pc, #0, 12
   104cc:	add	ip, ip, #16, 20	; 0x10000
   104d0:	ldr	pc, [ip, #2888]!	; 0xb48

000104d4 <__gmon_start__@plt>:
   104d4:	add	ip, pc, #0, 12
   104d8:	add	ip, ip, #16, 20	; 0x10000
   104dc:	ldr	pc, [ip, #2880]!	; 0xb40

000104e0 <memset@plt>:
   104e0:	add	ip, pc, #0, 12
   104e4:	add	ip, ip, #16, 20	; 0x10000
   104e8:	ldr	pc, [ip, #2872]!	; 0xb38

000104ec <write@plt>:
   104ec:	add	ip, pc, #0, 12
   104f0:	add	ip, ip, #16, 20	; 0x10000
   104f4:	ldr	pc, [ip, #2864]!	; 0xb30

000104f8 <abort@plt>:
   104f8:	add	ip, pc, #0, 12
   104fc:	add	ip, ip, #16, 20	; 0x10000
   10500:	ldr	pc, [ip, #2856]!	; 0xb28

Disassembly of section .text:

00010504 <.text>:
   10504:	push	{r4, r5, r6, lr}
   10508:	movw	r6, #3840	; 0xf00
   1050c:	movt	r6, #2
   10510:	sub	sp, sp, #264	; 0x108
   10514:	add	r5, sp, #4
   10518:	ldr	r3, [r6]
   1051c:	str	r3, [sp, #260]	; 0x104
   10520:	mov	r2, #128	; 0x80
   10524:	mov	r1, r5
   10528:	mov	r0, #0
   1052c:	bl	104a4 <read@plt>
   10530:	subs	r4, r0, #0
   10534:	ble	105ac <abort@plt+0xb4>
   10538:	add	r4, r4, #1
   1053c:	mov	r2, #128	; 0x80
   10540:	mov	r1, #0
   10544:	add	r0, sp, #132	; 0x84
   10548:	bl	104e0 <memset@plt>
   1054c:	asr	r2, r4, #1
   10550:	cmp	r2, #0
   10554:	ble	1057c <abort@plt+0x84>
   10558:	add	ip, sp, #132	; 0x84
   1055c:	mov	r3, #0
   10560:	eor	r1, r3, #1
   10564:	add	r3, r3, #1
   10568:	cmp	r3, r2
   1056c:	lsl	r1, r1, #1
   10570:	ldrh	r1, [r5, r1]
   10574:	strh	r1, [ip], #2
   10578:	bne	10560 <abort@plt+0x68>
   1057c:	bic	r4, r4, #1
   10580:	add	r1, sp, #132	; 0x84
   10584:	mov	r0, #1
   10588:	mov	r2, r4
   1058c:	bl	104ec <write@plt>
   10590:	cmp	r4, r0
   10594:	bne	105b0 <abort@plt+0xb8>
   10598:	mov	r2, #128	; 0x80
   1059c:	mov	r1, #0
   105a0:	mov	r0, r5
   105a4:	bl	104e0 <memset@plt>
   105a8:	b	10520 <abort@plt+0x28>
   105ac:	beq	105c0 <abort@plt+0xc8>
   105b0:	movw	r0, #1864	; 0x748
   105b4:	movt	r0, #1
   105b8:	bl	104bc <perror@plt>
   105bc:	mov	r4, #1
   105c0:	ldr	r2, [sp, #260]	; 0x104
   105c4:	mov	r0, r4
   105c8:	ldr	r3, [r6]
   105cc:	cmp	r2, r3
   105d0:	bne	105dc <abort@plt+0xe4>
   105d4:	add	sp, sp, #264	; 0x108
   105d8:	pop	{r4, r5, r6, pc}
   105dc:	bl	104b0 <__stack_chk_fail@plt>
   105e0:	mov	fp, #0
   105e4:	mov	lr, #0
   105e8:	pop	{r1}		; (ldr r1, [sp], #4)
   105ec:	mov	r2, sp
   105f0:	push	{r2}		; (str r2, [sp, #-4]!)
   105f4:	push	{r0}		; (str r0, [sp, #-4]!)
   105f8:	ldr	ip, [pc, #16]	; 10610 <abort@plt+0x118>
   105fc:	push	{ip}		; (str ip, [sp, #-4]!)
   10600:	ldr	r0, [pc, #12]	; 10614 <abort@plt+0x11c>
   10604:	ldr	r3, [pc, #12]	; 10618 <abort@plt+0x120>
   10608:	bl	104c8 <__libc_start_main@plt>
   1060c:	bl	104f8 <abort@plt>
   10610:	andeq	r0, r1, r4, lsr r7
   10614:	andeq	r0, r1, r4, lsl #10
   10618:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1061c:	ldr	r3, [pc, #20]	; 10638 <abort@plt+0x140>
   10620:	ldr	r2, [pc, #20]	; 1063c <abort@plt+0x144>
   10624:	add	r3, pc, r3
   10628:	ldr	r2, [r3, r2]
   1062c:	cmp	r2, #0
   10630:	bxeq	lr
   10634:	b	104d4 <__gmon_start__@plt>
   10638:	ldrdeq	r0, [r1], -r4
   1063c:	andeq	r0, r0, ip, lsr #32
   10640:	movw	r0, #4148	; 0x1034
   10644:	movt	r0, #2
   10648:	movw	r3, #4148	; 0x1034
   1064c:	movt	r3, #2
   10650:	cmp	r3, r0
   10654:	bxeq	lr
   10658:	movw	r3, #0
   1065c:	movt	r3, #0
   10660:	cmp	r3, #0
   10664:	bxeq	lr
   10668:	bx	r3
   1066c:	movw	r0, #4148	; 0x1034
   10670:	movt	r0, #2
   10674:	movw	r1, #4148	; 0x1034
   10678:	movt	r1, #2
   1067c:	sub	r1, r1, r0
   10680:	asr	r1, r1, #2
   10684:	add	r1, r1, r1, lsr #31
   10688:	asrs	r1, r1, #1
   1068c:	bxeq	lr
   10690:	movw	r3, #0
   10694:	movt	r3, #0
   10698:	cmp	r3, #0
   1069c:	bxeq	lr
   106a0:	bx	r3
   106a4:	push	{r4, lr}
   106a8:	movw	r4, #4148	; 0x1034
   106ac:	movt	r4, #2
   106b0:	ldrb	r3, [r4]
   106b4:	cmp	r3, #0
   106b8:	popne	{r4, pc}
   106bc:	bl	10640 <abort@plt+0x148>
   106c0:	mov	r3, #1
   106c4:	strb	r3, [r4]
   106c8:	pop	{r4, pc}
   106cc:	b	1066c <abort@plt+0x174>
   106d0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   106d4:	mov	r7, r0
   106d8:	ldr	r6, [pc, #76]	; 1072c <abort@plt+0x234>
   106dc:	mov	r8, r1
   106e0:	ldr	r5, [pc, #72]	; 10730 <abort@plt+0x238>
   106e4:	mov	r9, r2
   106e8:	add	r6, pc, r6
   106ec:	bl	10484 <read@plt-0x20>
   106f0:	add	r5, pc, r5
   106f4:	rsb	r6, r5, r6
   106f8:	asrs	r6, r6, #2
   106fc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10700:	sub	r5, r5, #4
   10704:	mov	r4, #0
   10708:	add	r4, r4, #1
   1070c:	ldr	r3, [r5, #4]!
   10710:	mov	r0, r7
   10714:	mov	r1, r8
   10718:	mov	r2, r9
   1071c:	blx	r3
   10720:	cmp	r4, r6
   10724:	bne	10708 <abort@plt+0x210>
   10728:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1072c:	andeq	r0, r1, ip, lsl #16
   10730:	andeq	r0, r1, r0, lsl #16
   10734:	bx	lr

Disassembly of section .fini:

00010738 <.fini>:
   10738:	push	{r3, lr}
   1073c:	pop	{r3, pc}
