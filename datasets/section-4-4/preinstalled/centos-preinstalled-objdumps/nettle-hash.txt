
centos-preinstalled/nettle-hash:     file format elf32-littlearm


Disassembly of section .init:

00010968 <_init@@Base>:
   10968:	push	{r3, lr}
   1096c:	bl	10e78 <abort@plt+0x3e8>
   10970:	pop	{r3, pc}

Disassembly of section .plt:

00010974 <nettle_base16_encode_update@plt-0x14>:
   10974:	push	{lr}		; (str lr, [sp, #-4]!)
   10978:	ldr	lr, [pc, #4]	; 10984 <_init@@Base+0x1c>
   1097c:	add	lr, pc, lr
   10980:	ldr	pc, [lr, #8]!
   10984:	andeq	r1, r1, ip, ror r6

00010988 <nettle_base16_encode_update@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1660]!	; 0x67c

00010994 <strcmp@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1652]!	; 0x674

000109a0 <strtol@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1644]!	; 0x66c

000109ac <fopen@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1636]!	; 0x664

000109b8 <fflush@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1628]!	; 0x65c

000109c4 <free@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1620]!	; 0x654

000109d0 <ferror@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1612]!	; 0x64c

000109dc <__stack_chk_fail@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1604]!	; 0x644

000109e8 <fwrite@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1596]!	; 0x63c

000109f4 <fread@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1588]!	; 0x634

00010a00 <puts@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1580]!	; 0x62c

00010a0c <malloc@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1572]!	; 0x624

00010a18 <__libc_start_main@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #69632	; 0x11000
   10a20:	ldr	pc, [ip, #1564]!	; 0x61c

00010a24 <strerror@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1556]!	; 0x614

00010a30 <__vfprintf_chk@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1548]!	; 0x60c

00010a3c <__gmon_start__@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1540]!	; 0x604

00010a48 <getopt_long@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #69632	; 0x11000
   10a50:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a54 <exit@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #69632	; 0x11000
   10a5c:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a60 <feof@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #69632	; 0x11000
   10a68:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a6c <__errno_location@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #69632	; 0x11000
   10a74:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a78 <__printf_chk@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #69632	; 0x11000
   10a80:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a84 <fclose@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #69632	; 0x11000
   10a8c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a90 <abort@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #69632	; 0x11000
   10a98:	ldr	pc, [ip, #1484]!	; 0x5cc

Disassembly of section .text:

00010a9c <.text>:
   10a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10aa0:	mov	r4, #0
   10aa4:	ldr	r8, [pc, #824]	; 10de4 <abort@plt+0x354>
   10aa8:	sub	sp, sp, #28
   10aac:	ldr	r7, [pc, #820]	; 10de8 <abort@plt+0x358>
   10ab0:	mov	r5, r0
   10ab4:	ldr	fp, [pc, #816]	; 10dec <abort@plt+0x35c>
   10ab8:	add	r8, pc, r8
   10abc:	add	r7, pc, r7
   10ac0:	mov	r6, r1
   10ac4:	mov	r9, r4
   10ac8:	movw	sl, #769	; 0x301
   10acc:	add	fp, pc, fp
   10ad0:	str	r4, [sp, #12]
   10ad4:	str	r4, [sp, #16]
   10ad8:	str	r9, [sp]
   10adc:	mov	r0, r5
   10ae0:	mov	r1, r6
   10ae4:	mov	r2, r8
   10ae8:	mov	r3, r7
   10aec:	bl	10a48 <getopt_long@plt>
   10af0:	cmn	r0, #1
   10af4:	beq	10c04 <abort@plt+0x174>
   10af8:	cmp	r0, #108	; 0x6c
   10afc:	beq	10bd8 <abort@plt+0x148>
   10b00:	ble	10b24 <abort@plt+0x94>
   10b04:	cmp	r0, sl
   10b08:	beq	10bd0 <abort@plt+0x140>
   10b0c:	movw	r3, #770	; 0x302
   10b10:	cmp	r0, r3
   10b14:	beq	10b60 <abort@plt+0xd0>
   10b18:	cmp	r0, #768	; 0x300
   10b1c:	beq	10bc0 <abort@plt+0x130>
   10b20:	bl	10a90 <abort@plt>
   10b24:	cmp	r0, #86	; 0x56
   10b28:	beq	10b48 <abort@plt+0xb8>
   10b2c:	cmp	r0, #97	; 0x61
   10b30:	bne	10b20 <abort@plt+0x90>
   10b34:	ldr	r3, [pc, #692]	; 10df0 <abort@plt+0x360>
   10b38:	ldr	r3, [fp, r3]
   10b3c:	ldr	r3, [r3]
   10b40:	str	r3, [sp, #16]
   10b44:	b	10ad8 <abort@plt+0x48>
   10b48:	ldr	r0, [pc, #676]	; 10df4 <abort@plt+0x364>
   10b4c:	add	r0, pc, r0
   10b50:	bl	10a00 <puts@plt>
   10b54:	mov	r0, #0
   10b58:	add	sp, sp, #28
   10b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b60:	ldr	r1, [pc, #656]	; 10df8 <abort@plt+0x368>
   10b64:	mov	r0, #1
   10b68:	ldr	r2, [pc, #652]	; 10dfc <abort@plt+0x36c>
   10b6c:	add	r1, pc, r1
   10b70:	add	r2, pc, r2
   10b74:	bl	10a78 <__printf_chk@plt>
   10b78:	ldr	r3, [pc, #640]	; 10e00 <abort@plt+0x370>
   10b7c:	ldr	r4, [fp, r3]
   10b80:	ldr	ip, [r4]
   10b84:	cmp	ip, #0
   10b88:	beq	10b54 <abort@plt+0xc4>
   10b8c:	ldr	r5, [pc, #624]	; 10e04 <abort@plt+0x374>
   10b90:	add	r5, pc, r5
   10b94:	ldr	r2, [ip]
   10b98:	mov	r0, #1
   10b9c:	ldr	r3, [ip, #8]
   10ba0:	mov	r1, r5
   10ba4:	ldr	ip, [ip, #12]
   10ba8:	str	ip, [sp]
   10bac:	bl	10a78 <__printf_chk@plt>
   10bb0:	ldr	ip, [r4, #4]!
   10bb4:	cmp	ip, #0
   10bb8:	bne	10b94 <abort@plt+0x104>
   10bbc:	b	10b54 <abort@plt+0xc4>
   10bc0:	ldr	r0, [pc, #576]	; 10e08 <abort@plt+0x378>
   10bc4:	add	r0, pc, r0
   10bc8:	bl	10a00 <puts@plt>
   10bcc:	b	10b54 <abort@plt+0xc4>
   10bd0:	mov	r4, #1
   10bd4:	b	10ad8 <abort@plt+0x48>
   10bd8:	ldr	r3, [pc, #528]	; 10df0 <abort@plt+0x360>
   10bdc:	mov	r1, #0
   10be0:	mov	r2, #10
   10be4:	ldr	r3, [fp, r3]
   10be8:	ldr	r0, [r3]
   10bec:	str	r3, [sp, #12]
   10bf0:	bl	109a0 <strtol@plt>
   10bf4:	cmp	r0, #0
   10bf8:	ble	10dd0 <abort@plt+0x340>
   10bfc:	str	r0, [sp, #12]
   10c00:	b	10ad8 <abort@plt+0x48>
   10c04:	ldr	r2, [sp, #16]
   10c08:	cmp	r2, #0
   10c0c:	beq	10dc4 <abort@plt+0x334>
   10c10:	ldr	r3, [pc, #488]	; 10e00 <abort@plt+0x370>
   10c14:	mov	r9, r2
   10c18:	ldr	r8, [fp, r3]
   10c1c:	sub	r8, r8, #4
   10c20:	b	10c38 <abort@plt+0x1a8>
   10c24:	mov	r0, r9
   10c28:	ldr	r1, [r7]
   10c2c:	bl	10994 <strcmp@plt>
   10c30:	cmp	r0, #0
   10c34:	beq	10c54 <abort@plt+0x1c4>
   10c38:	ldr	r7, [r8, #4]!
   10c3c:	cmp	r7, #0
   10c40:	bne	10c24 <abort@plt+0x194>
   10c44:	ldr	r0, [pc, #448]	; 10e0c <abort@plt+0x37c>
   10c48:	ldr	r1, [sp, #16]
   10c4c:	add	r0, pc, r0
   10c50:	bl	1119c <abort@plt+0x70c>
   10c54:	ldr	r3, [sp, #12]
   10c58:	cmp	r3, #0
   10c5c:	bne	10d3c <abort@plt+0x2ac>
   10c60:	ldr	r3, [r7, #8]
   10c64:	str	r3, [sp, #12]
   10c68:	ldr	r3, [pc, #416]	; 10e10 <abort@plt+0x380>
   10c6c:	ldr	r3, [fp, r3]
   10c70:	ldr	r3, [r3]
   10c74:	rsb	sl, r3, r5
   10c78:	cmp	sl, #0
   10c7c:	beq	10d5c <abort@plt+0x2cc>
   10c80:	ble	10d08 <abort@plt+0x278>
   10c84:	ldr	ip, [pc, #392]	; 10e14 <abort@plt+0x384>
   10c88:	add	r6, r6, r3, lsl #2
   10c8c:	ldr	r2, [pc, #388]	; 10e18 <abort@plt+0x388>
   10c90:	mov	r5, #0
   10c94:	add	ip, pc, ip
   10c98:	str	fp, [sp, #20]
   10c9c:	add	r2, pc, r2
   10ca0:	str	r2, [sp, #16]
   10ca4:	mov	fp, ip
   10ca8:	ldr	r0, [r6]
   10cac:	mov	r9, r6
   10cb0:	ldr	r1, [sp, #16]
   10cb4:	add	r6, r6, #4
   10cb8:	bl	109ac <fopen@plt>
   10cbc:	subs	r8, r0, #0
   10cc0:	beq	10da0 <abort@plt+0x310>
   10cc4:	mov	r1, fp
   10cc8:	ldr	r2, [r6, #-4]
   10ccc:	mov	r0, #1
   10cd0:	bl	10a78 <__printf_chk@plt>
   10cd4:	mov	r0, r7
   10cd8:	ldr	r1, [sp, #12]
   10cdc:	mov	r2, r4
   10ce0:	mov	r3, r8
   10ce4:	bl	11030 <abort@plt+0x5a0>
   10ce8:	cmp	r0, #0
   10cec:	beq	10d7c <abort@plt+0x2ec>
   10cf0:	mov	r0, r8
   10cf4:	add	r5, r5, #1
   10cf8:	bl	10a84 <fclose@plt>
   10cfc:	cmp	r5, sl
   10d00:	bne	10ca8 <abort@plt+0x218>
   10d04:	ldr	fp, [sp, #20]
   10d08:	ldr	r3, [pc, #268]	; 10e1c <abort@plt+0x38c>
   10d0c:	ldr	r3, [fp, r3]
   10d10:	ldr	r0, [r3]
   10d14:	bl	109b8 <fflush@plt>
   10d18:	cmp	r0, #0
   10d1c:	beq	10b54 <abort@plt+0xc4>
   10d20:	bl	10a6c <__errno_location@plt>
   10d24:	ldr	r0, [r0]
   10d28:	bl	10a24 <strerror@plt>
   10d2c:	mov	r1, r0
   10d30:	ldr	r0, [pc, #232]	; 10e20 <abort@plt+0x390>
   10d34:	add	r0, pc, r0
   10d38:	bl	1119c <abort@plt+0x70c>
   10d3c:	ldr	r3, [r7, #8]
   10d40:	ldr	r2, [sp, #12]
   10d44:	cmp	r3, r2
   10d48:	bcs	10c68 <abort@plt+0x1d8>
   10d4c:	ldr	r0, [pc, #208]	; 10e24 <abort@plt+0x394>
   10d50:	mov	r1, r2
   10d54:	add	r0, pc, r0
   10d58:	bl	1119c <abort@plt+0x70c>
   10d5c:	ldr	r3, [pc, #196]	; 10e28 <abort@plt+0x398>
   10d60:	mov	r0, r7
   10d64:	ldr	r1, [sp, #12]
   10d68:	mov	r2, r4
   10d6c:	ldr	r3, [fp, r3]
   10d70:	ldr	r3, [r3]
   10d74:	bl	11030 <abort@plt+0x5a0>
   10d78:	b	10d08 <abort@plt+0x278>
   10d7c:	bl	10a6c <__errno_location@plt>
   10d80:	ldr	r4, [r9]
   10d84:	ldr	r0, [r0]
   10d88:	bl	10a24 <strerror@plt>
   10d8c:	mov	r1, r4
   10d90:	mov	r2, r0
   10d94:	ldr	r0, [pc, #144]	; 10e2c <abort@plt+0x39c>
   10d98:	add	r0, pc, r0
   10d9c:	bl	1119c <abort@plt+0x70c>
   10da0:	bl	10a6c <__errno_location@plt>
   10da4:	ldr	r4, [r9]
   10da8:	ldr	r0, [r0]
   10dac:	bl	10a24 <strerror@plt>
   10db0:	mov	r1, r4
   10db4:	mov	r2, r0
   10db8:	ldr	r0, [pc, #112]	; 10e30 <abort@plt+0x3a0>
   10dbc:	add	r0, pc, r0
   10dc0:	bl	1119c <abort@plt+0x70c>
   10dc4:	ldr	r0, [pc, #104]	; 10e34 <abort@plt+0x3a4>
   10dc8:	add	r0, pc, r0
   10dcc:	bl	1119c <abort@plt+0x70c>
   10dd0:	ldr	r3, [sp, #12]
   10dd4:	ldr	r0, [pc, #92]	; 10e38 <abort@plt+0x3a8>
   10dd8:	ldr	r1, [r3]
   10ddc:	add	r0, pc, r0
   10de0:	bl	1119c <abort@plt+0x70c>
   10de4:	andeq	r0, r0, ip, asr sl
   10de8:	andeq	r1, r1, r4, asr #7
   10dec:	andeq	r1, r1, ip, lsr #10
   10df0:	andeq	r0, r0, r4, lsl #1
   10df4:	andeq	r0, r0, r8, lsr r9
   10df8:	andeq	r0, r0, r4, asr r9
   10dfc:	andeq	r0, r0, ip, lsl #19
   10e00:	andeq	r0, r0, ip, ror r0
   10e04:	andeq	r0, r0, r4, ror r9
   10e08:	andeq	r0, r0, r0, ror r7
   10e0c:			; <UNDEFINED> instruction: 0x000009bc
   10e10:	andeq	r0, r0, ip, rrx
   10e14:	andeq	r0, r0, ip, lsr r9
   10e18:	andeq	r0, r0, r8, lsl r9
   10e1c:	andeq	r0, r0, r0, lsl #1
   10e20:	andeq	r0, r0, r0, asr #17
   10e24:	andeq	r0, r0, r8, lsr #16
   10e28:	andeq	r0, r0, r8, ror r0
   10e2c:	andeq	r0, r0, r0, asr #16
   10e30:	strdeq	r0, [r0], -ip
   10e34:	andeq	r0, r0, r4, asr r7
   10e38:	andeq	r0, r0, r4, asr #13
   10e3c:	mov	fp, #0
   10e40:	mov	lr, #0
   10e44:	pop	{r1}		; (ldr r1, [sp], #4)
   10e48:	mov	r2, sp
   10e4c:	push	{r2}		; (str r2, [sp, #-4]!)
   10e50:	push	{r0}		; (str r0, [sp, #-4]!)
   10e54:	ldr	ip, [pc, #16]	; 10e6c <abort@plt+0x3dc>
   10e58:	push	{ip}		; (str ip, [sp, #-4]!)
   10e5c:	ldr	r0, [pc, #12]	; 10e70 <abort@plt+0x3e0>
   10e60:	ldr	r3, [pc, #12]	; 10e74 <abort@plt+0x3e4>
   10e64:	bl	10a18 <__libc_start_main@plt>
   10e68:	bl	10a90 <abort@plt>
   10e6c:	andeq	r1, r1, ip, lsl r3
   10e70:	muleq	r1, ip, sl
   10e74:			; <UNDEFINED> instruction: 0x000112b8
   10e78:	ldr	r3, [pc, #20]	; 10e94 <abort@plt+0x404>
   10e7c:	ldr	r2, [pc, #20]	; 10e98 <abort@plt+0x408>
   10e80:	add	r3, pc, r3
   10e84:	ldr	r2, [r3, r2]
   10e88:	cmp	r2, #0
   10e8c:	bxeq	lr
   10e90:	b	10a3c <__gmon_start__@plt>
   10e94:	andeq	r1, r1, r8, ror r1
   10e98:	andeq	r0, r0, r4, ror r0
   10e9c:	push	{r3, lr}
   10ea0:	movw	r0, #8332	; 0x208c
   10ea4:	ldr	r3, [pc, #36]	; 10ed0 <abort@plt+0x440>
   10ea8:	movt	r0, #2
   10eac:	rsb	r3, r0, r3
   10eb0:	cmp	r3, #6
   10eb4:	popls	{r3, pc}
   10eb8:	movw	r3, #0
   10ebc:	movt	r3, #0
   10ec0:	cmp	r3, #0
   10ec4:	popeq	{r3, pc}
   10ec8:	blx	r3
   10ecc:	pop	{r3, pc}
   10ed0:	andeq	r2, r2, pc, lsl #1
   10ed4:	push	{r3, lr}
   10ed8:	movw	r0, #8332	; 0x208c
   10edc:	movw	r3, #8332	; 0x208c
   10ee0:	movt	r0, #2
   10ee4:	movt	r3, #2
   10ee8:	rsb	r3, r0, r3
   10eec:	asr	r3, r3, #2
   10ef0:	add	r3, r3, r3, lsr #31
   10ef4:	asrs	r1, r3, #1
   10ef8:	popeq	{r3, pc}
   10efc:	movw	r2, #0
   10f00:	movt	r2, #0
   10f04:	cmp	r2, #0
   10f08:	popeq	{r3, pc}
   10f0c:	blx	r2
   10f10:	pop	{r3, pc}
   10f14:	push	{r4, lr}
   10f18:	movw	r4, #8332	; 0x208c
   10f1c:	movt	r4, #2
   10f20:	ldrb	r3, [r4]
   10f24:	cmp	r3, #0
   10f28:	popne	{r4, pc}
   10f2c:	bl	10e9c <abort@plt+0x40c>
   10f30:	mov	r3, #1
   10f34:	strb	r3, [r4]
   10f38:	pop	{r4, pc}
   10f3c:	movw	r0, #7812	; 0x1e84
   10f40:	movt	r0, #2
   10f44:	push	{r3, lr}
   10f48:	ldr	r3, [r0]
   10f4c:	cmp	r3, #0
   10f50:	beq	10f68 <abort@plt+0x4d8>
   10f54:	movw	r3, #0
   10f58:	movt	r3, #0
   10f5c:	cmp	r3, #0
   10f60:	beq	10f68 <abort@plt+0x4d8>
   10f64:	blx	r3
   10f68:	pop	{r3, lr}
   10f6c:	b	10ed4 <abort@plt+0x444>
   10f70:	ldr	r3, [pc, #176]	; 11028 <abort@plt+0x598>
   10f74:	ldr	ip, [pc, #176]	; 1102c <abort@plt+0x59c>
   10f78:	add	r3, pc, r3
   10f7c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10f80:	sub	sp, sp, #16384	; 0x4000
   10f84:	ldr	r9, [r3, ip]
   10f88:	sub	sp, sp, #12
   10f8c:	mov	r4, r2
   10f90:	add	r2, sp, #16384	; 0x4000
   10f94:	add	r5, sp, #4
   10f98:	mov	r8, r0
   10f9c:	ldr	r3, [r9]
   10fa0:	mov	r7, r1
   10fa4:	str	r3, [r2, #4]
   10fa8:	b	10fd0 <abort@plt+0x540>
   10fac:	mov	r1, r6
   10fb0:	ldr	r3, [r8]
   10fb4:	mov	r0, r7
   10fb8:	mov	r2, r5
   10fbc:	blx	r3
   10fc0:	mov	r0, r4
   10fc4:	bl	10a60 <feof@plt>
   10fc8:	cmp	r0, #0
   10fcc:	bne	1101c <abort@plt+0x58c>
   10fd0:	mov	r1, #1
   10fd4:	mov	r2, #16384	; 0x4000
   10fd8:	mov	r3, r4
   10fdc:	mov	r0, r5
   10fe0:	bl	109f4 <fread@plt>
   10fe4:	mov	r6, r0
   10fe8:	mov	r0, r4
   10fec:	bl	109d0 <ferror@plt>
   10ff0:	cmp	r0, #0
   10ff4:	beq	10fac <abort@plt+0x51c>
   10ff8:	mov	r0, #0
   10ffc:	add	r3, sp, #16384	; 0x4000
   11000:	ldr	r2, [r3, #4]
   11004:	ldr	r3, [r9]
   11008:	cmp	r2, r3
   1100c:	bne	11024 <abort@plt+0x594>
   11010:	add	sp, sp, #16384	; 0x4000
   11014:	add	sp, sp, #12
   11018:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1101c:	mov	r0, #1
   11020:	b	10ffc <abort@plt+0x56c>
   11024:	bl	109dc <__stack_chk_fail@plt>
   11028:	andeq	r1, r1, r0, lsl #1
   1102c:	andeq	r0, r0, r8, rrx
   11030:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11034:	mov	r8, r0
   11038:	ldr	r0, [r0, #4]
   1103c:	mov	r7, r3
   11040:	mov	r6, r1
   11044:	mov	r5, r2
   11048:	bl	11270 <abort@plt+0x7e0>
   1104c:	ldr	r3, [r8, #16]
   11050:	ldr	r9, [pc, #308]	; 1118c <abort@plt+0x6fc>
   11054:	add	r9, pc, r9
   11058:	mov	r4, r0
   1105c:	blx	r3
   11060:	mov	r2, r7
   11064:	add	r0, r8, #20
   11068:	mov	r1, r4
   1106c:	bl	10f70 <abort@plt+0x4e0>
   11070:	subs	r7, r0, #0
   11074:	beq	1117c <abort@plt+0x6ec>
   11078:	mov	r0, r6
   1107c:	bl	11270 <abort@plt+0x7e0>
   11080:	ldr	r3, [r8, #24]
   11084:	mov	r1, r6
   11088:	mov	r2, r0
   1108c:	mov	r7, r0
   11090:	mov	r0, r4
   11094:	blx	r3
   11098:	mov	r0, r4
   1109c:	bl	109c4 <free@plt>
   110a0:	cmp	r5, #0
   110a4:	bne	1114c <abort@plt+0x6bc>
   110a8:	mov	r0, #17
   110ac:	bl	11270 <abort@plt+0x7e0>
   110b0:	cmp	r6, #8
   110b4:	mov	r4, r0
   110b8:	bls	1110c <abort@plt+0x67c>
   110bc:	ldr	sl, [pc, #204]	; 11190 <abort@plt+0x700>
   110c0:	mov	r2, r5
   110c4:	mov	r9, r5
   110c8:	mov	r5, #8
   110cc:	add	sl, pc, sl
   110d0:	b	110d8 <abort@plt+0x648>
   110d4:	mov	r5, r3
   110d8:	add	r2, r7, r2
   110dc:	mov	r0, r4
   110e0:	mov	r1, #8
   110e4:	bl	10988 <nettle_base16_encode_update@plt>
   110e8:	mov	r2, r4
   110ec:	strb	r9, [r4, #16]
   110f0:	mov	r0, #1
   110f4:	mov	r1, sl
   110f8:	bl	10a78 <__printf_chk@plt>
   110fc:	add	r3, r5, #8
   11100:	cmp	r6, r3
   11104:	mov	r2, r5
   11108:	bhi	110d4 <abort@plt+0x644>
   1110c:	rsb	r6, r5, r6
   11110:	add	r2, r7, r5
   11114:	mov	r0, r4
   11118:	mov	r1, r6
   1111c:	bl	10988 <nettle_base16_encode_update@plt>
   11120:	ldr	r1, [pc, #108]	; 11194 <abort@plt+0x704>
   11124:	mov	r3, #0
   11128:	mov	r2, r4
   1112c:	strb	r3, [r4, r6, lsl #1]
   11130:	add	r1, pc, r1
   11134:	ldr	r3, [r8]
   11138:	mov	r0, #1
   1113c:	bl	10a78 <__printf_chk@plt>
   11140:	mov	r0, r4
   11144:	bl	109c4 <free@plt>
   11148:	b	11168 <abort@plt+0x6d8>
   1114c:	ldr	r3, [pc, #68]	; 11198 <abort@plt+0x708>
   11150:	mov	r1, r6
   11154:	mov	r0, r7
   11158:	mov	r2, #1
   1115c:	ldr	r3, [r9, r3]
   11160:	ldr	r3, [r3]
   11164:	bl	109e8 <fwrite@plt>
   11168:	mov	r0, r7
   1116c:	mov	r7, #1
   11170:	bl	109c4 <free@plt>
   11174:	mov	r0, r7
   11178:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1117c:	mov	r0, r4
   11180:	bl	109c4 <free@plt>
   11184:	mov	r0, r7
   11188:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1118c:	andeq	r0, r1, r4, lsr #31
   11190:	andeq	r0, r0, ip, asr r2
   11194:	strdeq	r0, [r0], -ip
   11198:	andeq	r0, r0, r0, lsl #1
   1119c:	push	{r0, r1, r2, r3}
   111a0:	mov	r1, #1
   111a4:	ldr	r0, [pc, #64]	; 111ec <abort@plt+0x75c>
   111a8:	push	{r4, lr}
   111ac:	add	r0, pc, r0
   111b0:	ldr	r4, [pc, #56]	; 111f0 <abort@plt+0x760>
   111b4:	sub	sp, sp, #8
   111b8:	add	ip, sp, #20
   111bc:	ldr	lr, [pc, #48]	; 111f4 <abort@plt+0x764>
   111c0:	ldr	r2, [sp, #16]
   111c4:	ldr	r4, [r0, r4]
   111c8:	mov	r3, ip
   111cc:	str	ip, [sp]
   111d0:	ldr	ip, [r4]
   111d4:	str	ip, [sp, #4]
   111d8:	ldr	r0, [r0, lr]
   111dc:	ldr	r0, [r0]
   111e0:	bl	10a30 <__vfprintf_chk@plt>
   111e4:	mov	r0, #1
   111e8:	bl	10a54 <exit@plt>
   111ec:	andeq	r0, r1, ip, asr #28
   111f0:	andeq	r0, r0, r8, rrx
   111f4:	andeq	r0, r0, r0, ror r0
   111f8:	push	{r0, r1, r2, r3}
   111fc:	mov	r1, #1
   11200:	ldr	r0, [pc, #92]	; 11264 <abort@plt+0x7d4>
   11204:	push	{r4, lr}
   11208:	add	r0, pc, r0
   1120c:	ldr	r4, [pc, #84]	; 11268 <abort@plt+0x7d8>
   11210:	sub	sp, sp, #8
   11214:	add	ip, sp, #20
   11218:	ldr	lr, [pc, #76]	; 1126c <abort@plt+0x7dc>
   1121c:	ldr	r2, [sp, #16]
   11220:	ldr	r4, [r0, r4]
   11224:	mov	r3, ip
   11228:	str	ip, [sp]
   1122c:	ldr	ip, [r4]
   11230:	str	ip, [sp, #4]
   11234:	ldr	r0, [r0, lr]
   11238:	ldr	r0, [r0]
   1123c:	bl	10a30 <__vfprintf_chk@plt>
   11240:	ldr	r2, [sp, #4]
   11244:	ldr	r3, [r4]
   11248:	cmp	r2, r3
   1124c:	bne	11260 <abort@plt+0x7d0>
   11250:	add	sp, sp, #8
   11254:	pop	{r4, lr}
   11258:	add	sp, sp, #16
   1125c:	bx	lr
   11260:	bl	109dc <__stack_chk_fail@plt>
   11264:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11268:	andeq	r0, r0, r8, rrx
   1126c:	andeq	r0, r0, r0, ror r0
   11270:	push	{r3, lr}
   11274:	bl	10a0c <malloc@plt>
   11278:	ldr	r3, [pc, #44]	; 112ac <abort@plt+0x81c>
   1127c:	add	r3, pc, r3
   11280:	cmp	r0, #0
   11284:	popne	{r3, pc}
   11288:	ldr	ip, [pc, #32]	; 112b0 <abort@plt+0x820>
   1128c:	mov	r1, #1
   11290:	ldr	r0, [pc, #28]	; 112b4 <abort@plt+0x824>
   11294:	mov	r2, #26
   11298:	ldr	r3, [r3, ip]
   1129c:	add	r0, pc, r0
   112a0:	ldr	r3, [r3]
   112a4:	bl	109e8 <fwrite@plt>
   112a8:	bl	10a90 <abort@plt>
   112ac:	andeq	r0, r1, ip, ror sp
   112b0:	andeq	r0, r0, r0, ror r0
   112b4:	andeq	r0, r0, ip, ror r4
   112b8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   112bc:	mov	r7, r0
   112c0:	ldr	r6, [pc, #76]	; 11314 <abort@plt+0x884>
   112c4:	mov	r8, r1
   112c8:	ldr	r5, [pc, #72]	; 11318 <abort@plt+0x888>
   112cc:	mov	r9, r2
   112d0:	add	r6, pc, r6
   112d4:	bl	10968 <_init@@Base>
   112d8:	add	r5, pc, r5
   112dc:	rsb	r6, r5, r6
   112e0:	asrs	r6, r6, #2
   112e4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   112e8:	sub	r5, r5, #4
   112ec:	mov	r4, #0
   112f0:	add	r4, r4, #1
   112f4:	ldr	r3, [r5, #4]!
   112f8:	mov	r0, r7
   112fc:	mov	r1, r8
   11300:	mov	r2, r9
   11304:	blx	r3
   11308:	cmp	r4, r6
   1130c:	bne	112f0 <abort@plt+0x860>
   11310:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11314:	andeq	r0, r1, r8, lsr #23
   11318:	muleq	r1, ip, fp
   1131c:	bx	lr

Disassembly of section .fini:

00011320 <_fini@@Base>:
   11320:	push	{r3, lr}
   11324:	pop	{r3, pc}
