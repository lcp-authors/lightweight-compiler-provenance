
centos-preinstalled/plistutil:     file format elf32-littlearm


Disassembly of section .init:

00010844 <_init@@Base>:
   10844:	push	{r3, lr}
   10848:	bl	10b64 <strcmp@plt+0x21c>
   1084c:	pop	{r3, pc}

Disassembly of section .plt:

00010850 <abort@plt-0x14>:
   10850:	push	{lr}		; (str lr, [sp, #-4]!)
   10854:	ldr	lr, [pc, #4]	; 10860 <_init@@Base+0x1c>
   10858:	add	lr, pc, lr
   1085c:	ldr	pc, [lr, #8]!
   10860:	andeq	r1, r1, r0, lsr #15

00010864 <abort@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #1952]!	; 0x7a0

00010870 <memcmp@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #1944]!	; 0x798

0001087c <__xstat@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #1936]!	; 0x790

00010888 <__libc_start_main@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #69632	; 0x11000
   10890:	ldr	pc, [ip, #1928]!	; 0x788

00010894 <plist_from_xml@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #69632	; 0x11000
   1089c:	ldr	pc, [ip, #1920]!	; 0x780

000108a0 <__gmon_start__@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #69632	; 0x11000
   108a8:	ldr	pc, [ip, #1912]!	; 0x778

000108ac <fclose@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #69632	; 0x11000
   108b4:	ldr	pc, [ip, #1904]!	; 0x770

000108b8 <putchar@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #69632	; 0x11000
   108c0:	ldr	pc, [ip, #1896]!	; 0x768

000108c4 <fopen@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #69632	; 0x11000
   108cc:	ldr	pc, [ip, #1888]!	; 0x760

000108d0 <free@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #69632	; 0x11000
   108d8:	ldr	pc, [ip, #1880]!	; 0x758

000108dc <plist_to_bin@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #69632	; 0x11000
   108e4:	ldr	pc, [ip, #1872]!	; 0x750

000108e8 <plist_to_xml@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #69632	; 0x11000
   108f0:	ldr	pc, [ip, #1864]!	; 0x748

000108f4 <fwrite@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #69632	; 0x11000
   108fc:	ldr	pc, [ip, #1856]!	; 0x740

00010900 <malloc@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #69632	; 0x11000
   10908:	ldr	pc, [ip, #1848]!	; 0x738

0001090c <__stack_chk_fail@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #69632	; 0x11000
   10914:	ldr	pc, [ip, #1840]!	; 0x730

00010918 <puts@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #69632	; 0x11000
   10920:	ldr	pc, [ip, #1832]!	; 0x728

00010924 <plist_from_bin@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #69632	; 0x11000
   1092c:	ldr	pc, [ip, #1824]!	; 0x720

00010930 <fread@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #69632	; 0x11000
   10938:	ldr	pc, [ip, #1816]!	; 0x718

0001093c <plist_free@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #69632	; 0x11000
   10944:	ldr	pc, [ip, #1808]!	; 0x710

00010948 <strcmp@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #69632	; 0x11000
   10950:	ldr	pc, [ip, #1800]!	; 0x708

Disassembly of section .text:

00010954 <.text>:
   10954:	push	{r4, r5, r6, r7, r8, r9, lr}
   10958:	movw	r4, #8296	; 0x2068
   1095c:	movt	r4, #2
   10960:	sub	sp, sp, #20
   10964:	mov	r5, r0
   10968:	mov	r0, #88	; 0x58
   1096c:	ldr	r2, [r4]
   10970:	mov	r3, #0
   10974:	mov	r7, r1
   10978:	str	r3, [sp]
   1097c:	str	r3, [sp, #4]
   10980:	str	r2, [sp, #12]
   10984:	str	r3, [sp, #8]
   10988:	bl	10900 <malloc@plt>
   1098c:	mov	r1, r7
   10990:	mov	r6, r0
   10994:	mov	r0, r5
   10998:	bl	10c5c <strcmp@plt+0x314>
   1099c:	subs	r5, r0, #0
   109a0:	beq	10ae0 <strcmp@plt+0x198>
   109a4:	movw	r1, #4064	; 0xfe0
   109a8:	ldr	r0, [r5]
   109ac:	movt	r1, #1
   109b0:	bl	108c4 <fopen@plt>
   109b4:	subs	r8, r0, #0
   109b8:	beq	10ad8 <strcmp@plt+0x190>
   109bc:	ldr	r1, [r5]
   109c0:	mov	r2, r6
   109c4:	mov	r0, #3
   109c8:	bl	1087c <__xstat@plt>
   109cc:	ldr	r9, [r6, #44]	; 0x2c
   109d0:	add	r0, r9, #1
   109d4:	bl	10900 <malloc@plt>
   109d8:	mov	r2, r9
   109dc:	mov	r1, #1
   109e0:	mov	r3, r8
   109e4:	mov	r7, r0
   109e8:	bl	10930 <fread@plt>
   109ec:	mov	r9, r0
   109f0:	mov	r0, r8
   109f4:	bl	108ac <fclose@plt>
   109f8:	mov	r2, #8
   109fc:	mov	r0, r7
   10a00:	movw	r1, #4068	; 0xfe4
   10a04:	movt	r1, #1
   10a08:	bl	10870 <memcmp@plt>
   10a0c:	mov	r1, r9
   10a10:	mov	r2, sp
   10a14:	cmp	r0, #0
   10a18:	mov	r0, r7
   10a1c:	beq	10ac0 <strcmp@plt+0x178>
   10a20:	bl	10894 <plist_from_xml@plt>
   10a24:	ldr	r0, [sp]
   10a28:	add	r1, sp, #4
   10a2c:	add	r2, sp, #8
   10a30:	bl	108dc <plist_to_bin@plt>
   10a34:	ldr	r0, [sp]
   10a38:	bl	1093c <plist_free@plt>
   10a3c:	mov	r0, r7
   10a40:	bl	108d0 <free@plt>
   10a44:	mov	r0, r6
   10a48:	bl	108d0 <free@plt>
   10a4c:	ldr	r3, [sp, #4]
   10a50:	cmp	r3, #0
   10a54:	beq	10b14 <strcmp@plt+0x1cc>
   10a58:	ldr	r0, [r5, #4]
   10a5c:	cmp	r0, #0
   10a60:	beq	10af4 <strcmp@plt+0x1ac>
   10a64:	movw	r1, #4080	; 0xff0
   10a68:	movt	r1, #1
   10a6c:	bl	108c4 <fopen@plt>
   10a70:	subs	r6, r0, #0
   10a74:	beq	10ad8 <strcmp@plt+0x190>
   10a78:	ldr	r0, [sp, #4]
   10a7c:	mov	r2, #1
   10a80:	ldr	r1, [sp, #8]
   10a84:	mov	r3, r6
   10a88:	bl	108f4 <fwrite@plt>
   10a8c:	mov	r0, r6
   10a90:	bl	108ac <fclose@plt>
   10a94:	ldr	r0, [sp, #4]
   10a98:	bl	108d0 <free@plt>
   10a9c:	mov	r0, r5
   10aa0:	bl	108d0 <free@plt>
   10aa4:	mov	r0, #0
   10aa8:	ldr	r2, [sp, #12]
   10aac:	ldr	r3, [r4]
   10ab0:	cmp	r2, r3
   10ab4:	bne	10b24 <strcmp@plt+0x1dc>
   10ab8:	add	sp, sp, #20
   10abc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10ac0:	bl	10924 <plist_from_bin@plt>
   10ac4:	ldr	r0, [sp]
   10ac8:	add	r1, sp, #4
   10acc:	add	r2, sp, #8
   10ad0:	bl	108e8 <plist_to_xml@plt>
   10ad4:	b	10a34 <strcmp@plt+0xec>
   10ad8:	mov	r0, #1
   10adc:	b	10aa8 <strcmp@plt+0x160>
   10ae0:	bl	10e1c <strcmp@plt+0x4d4>
   10ae4:	mov	r0, r6
   10ae8:	bl	108d0 <free@plt>
   10aec:	mov	r0, r5
   10af0:	b	10aa8 <strcmp@plt+0x160>
   10af4:	movw	r2, #8300	; 0x206c
   10af8:	movt	r2, #2
   10afc:	mov	r0, r3
   10b00:	ldr	r1, [sp, #8]
   10b04:	ldr	r3, [r2]
   10b08:	mov	r2, #1
   10b0c:	bl	108f4 <fwrite@plt>
   10b10:	b	10a94 <strcmp@plt+0x14c>
   10b14:	movw	r0, #4084	; 0xff4
   10b18:	movt	r0, #1
   10b1c:	bl	10918 <puts@plt>
   10b20:	b	10a9c <strcmp@plt+0x154>
   10b24:	bl	1090c <__stack_chk_fail@plt>
   10b28:	mov	fp, #0
   10b2c:	mov	lr, #0
   10b30:	pop	{r1}		; (ldr r1, [sp], #4)
   10b34:	mov	r2, sp
   10b38:	push	{r2}		; (str r2, [sp, #-4]!)
   10b3c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b40:	ldr	ip, [pc, #16]	; 10b58 <strcmp@plt+0x210>
   10b44:	push	{ip}		; (str ip, [sp, #-4]!)
   10b48:	ldr	r0, [pc, #12]	; 10b5c <strcmp@plt+0x214>
   10b4c:	ldr	r3, [pc, #12]	; 10b60 <strcmp@plt+0x218>
   10b50:	bl	10888 <__libc_start_main@plt>
   10b54:	bl	10864 <abort@plt>
   10b58:	andeq	r0, r1, r0, asr #29
   10b5c:	andeq	r0, r1, r4, asr r9
   10b60:	andeq	r0, r1, ip, asr lr
   10b64:	ldr	r3, [pc, #20]	; 10b80 <strcmp@plt+0x238>
   10b68:	ldr	r2, [pc, #20]	; 10b84 <strcmp@plt+0x23c>
   10b6c:	add	r3, pc, r3
   10b70:	ldr	r2, [r3, r2]
   10b74:	cmp	r2, #0
   10b78:	bxeq	lr
   10b7c:	b	108a0 <__gmon_start__@plt>
   10b80:	andeq	r1, r1, ip, lsl #9
   10b84:	andeq	r0, r0, ip, asr r0
   10b88:	push	{r3, lr}
   10b8c:	movw	r0, #8292	; 0x2064
   10b90:	ldr	r3, [pc, #36]	; 10bbc <strcmp@plt+0x274>
   10b94:	movt	r0, #2
   10b98:	rsb	r3, r0, r3
   10b9c:	cmp	r3, #6
   10ba0:	popls	{r3, pc}
   10ba4:	movw	r3, #0
   10ba8:	movt	r3, #0
   10bac:	cmp	r3, #0
   10bb0:	popeq	{r3, pc}
   10bb4:	blx	r3
   10bb8:	pop	{r3, pc}
   10bbc:	andeq	r2, r2, r7, rrx
   10bc0:	push	{r3, lr}
   10bc4:	movw	r0, #8292	; 0x2064
   10bc8:	movw	r3, #8292	; 0x2064
   10bcc:	movt	r0, #2
   10bd0:	movt	r3, #2
   10bd4:	rsb	r3, r0, r3
   10bd8:	asr	r3, r3, #2
   10bdc:	add	r3, r3, r3, lsr #31
   10be0:	asrs	r1, r3, #1
   10be4:	popeq	{r3, pc}
   10be8:	movw	r2, #0
   10bec:	movt	r2, #0
   10bf0:	cmp	r2, #0
   10bf4:	popeq	{r3, pc}
   10bf8:	blx	r2
   10bfc:	pop	{r3, pc}
   10c00:	push	{r4, lr}
   10c04:	movw	r4, #8304	; 0x2070
   10c08:	movt	r4, #2
   10c0c:	ldrb	r3, [r4]
   10c10:	cmp	r3, #0
   10c14:	popne	{r4, pc}
   10c18:	bl	10b88 <strcmp@plt+0x240>
   10c1c:	mov	r3, #1
   10c20:	strb	r3, [r4]
   10c24:	pop	{r4, pc}
   10c28:	movw	r0, #7924	; 0x1ef4
   10c2c:	movt	r0, #2
   10c30:	push	{r3, lr}
   10c34:	ldr	r3, [r0]
   10c38:	cmp	r3, #0
   10c3c:	beq	10c54 <strcmp@plt+0x30c>
   10c40:	movw	r3, #0
   10c44:	movt	r3, #0
   10c48:	cmp	r3, #0
   10c4c:	beq	10c54 <strcmp@plt+0x30c>
   10c50:	blx	r3
   10c54:	pop	{r3, lr}
   10c58:	b	10bc0 <strcmp@plt+0x278>
   10c5c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c60:	mov	r7, r0
   10c64:	mov	r0, #12
   10c68:	mov	r6, r1
   10c6c:	bl	10900 <malloc@plt>
   10c70:	cmp	r7, #1
   10c74:	mov	r2, #0
   10c78:	movgt	r4, #1
   10c7c:	movgt	sl, r4
   10c80:	mov	r3, r0
   10c84:	mov	r9, r0
   10c88:	str	r2, [r3], #4
   10c8c:	str	r2, [r0, #4]
   10c90:	str	r2, [r3, #4]
   10c94:	ble	10d70 <strcmp@plt+0x428>
   10c98:	ldr	r5, [r6, r4, lsl #2]
   10c9c:	movw	r1, #3796	; 0xed4
   10ca0:	movt	r1, #1
   10ca4:	add	r8, r6, r4, lsl #2
   10ca8:	mov	r0, r5
   10cac:	bl	10948 <strcmp@plt>
   10cb0:	cmp	r0, #0
   10cb4:	beq	10d50 <strcmp@plt+0x408>
   10cb8:	ldrb	r3, [r5]
   10cbc:	cmp	r3, #45	; 0x2d
   10cc0:	beq	10d84 <strcmp@plt+0x43c>
   10cc4:	movw	r1, #3824	; 0xef0
   10cc8:	mov	r0, r5
   10ccc:	movt	r1, #1
   10cd0:	bl	10948 <strcmp@plt>
   10cd4:	cmp	r0, #0
   10cd8:	beq	10da8 <strcmp@plt+0x460>
   10cdc:	movw	r1, #3808	; 0xee0
   10ce0:	mov	r0, r5
   10ce4:	movt	r1, #1
   10ce8:	bl	10948 <strcmp@plt>
   10cec:	cmp	r0, #0
   10cf0:	bne	10cf8 <strcmp@plt+0x3b0>
   10cf4:	strb	sl, [r9, #8]
   10cf8:	movw	r1, #3816	; 0xee8
   10cfc:	mov	r0, r5
   10d00:	movt	r1, #1
   10d04:	bl	10948 <strcmp@plt>
   10d08:	cmp	r0, #0
   10d0c:	beq	10d34 <strcmp@plt+0x3ec>
   10d10:	ldrb	r3, [r5]
   10d14:	cmp	r3, #45	; 0x2d
   10d18:	bne	10d64 <strcmp@plt+0x41c>
   10d1c:	ldrb	r3, [r5, #1]
   10d20:	cmp	r3, #104	; 0x68
   10d24:	bne	10d64 <strcmp@plt+0x41c>
   10d28:	ldrb	r3, [r5, #2]
   10d2c:	cmp	r3, #0
   10d30:	bne	10d64 <strcmp@plt+0x41c>
   10d34:	mov	r0, r9
   10d38:	bl	108d0 <free@plt>
   10d3c:	mov	r0, #0
   10d40:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d44:	ldrb	r3, [r5, #2]
   10d48:	cmp	r3, #0
   10d4c:	bne	10d90 <strcmp@plt+0x448>
   10d50:	add	r4, r4, #1
   10d54:	cmp	r4, r7
   10d58:	beq	10d34 <strcmp@plt+0x3ec>
   10d5c:	ldr	r3, [r8, #4]
   10d60:	str	r3, [r9]
   10d64:	add	r4, r4, #1
   10d68:	cmp	r7, r4
   10d6c:	bgt	10c98 <strcmp@plt+0x350>
   10d70:	ldr	r4, [r9]
   10d74:	mov	r0, r9
   10d78:	cmp	r4, #0
   10d7c:	beq	10e10 <strcmp@plt+0x4c8>
   10d80:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d84:	ldrb	fp, [r5, #1]
   10d88:	cmp	fp, #105	; 0x69
   10d8c:	beq	10d44 <strcmp@plt+0x3fc>
   10d90:	movw	r1, #3824	; 0xef0
   10d94:	mov	r0, r5
   10d98:	movt	r1, #1
   10d9c:	bl	10948 <strcmp@plt>
   10da0:	cmp	r0, #0
   10da4:	bne	10dc0 <strcmp@plt+0x478>
   10da8:	add	r4, r4, #1
   10dac:	cmp	r4, r7
   10db0:	beq	10d34 <strcmp@plt+0x3ec>
   10db4:	ldr	r3, [r8, #4]
   10db8:	str	r3, [r9, #4]
   10dbc:	b	10d64 <strcmp@plt+0x41c>
   10dc0:	cmp	fp, #111	; 0x6f
   10dc4:	beq	10e00 <strcmp@plt+0x4b8>
   10dc8:	movw	r1, #3808	; 0xee0
   10dcc:	mov	r0, r5
   10dd0:	movt	r1, #1
   10dd4:	bl	10948 <strcmp@plt>
   10dd8:	cmp	r0, #0
   10ddc:	beq	10cf4 <strcmp@plt+0x3ac>
   10de0:	cmp	fp, #100	; 0x64
   10de4:	beq	10df0 <strcmp@plt+0x4a8>
   10de8:	cmp	fp, #118	; 0x76
   10dec:	bne	10cf8 <strcmp@plt+0x3b0>
   10df0:	ldrb	r3, [r5, #2]
   10df4:	cmp	r3, #0
   10df8:	beq	10cf4 <strcmp@plt+0x3ac>
   10dfc:	b	10cf8 <strcmp@plt+0x3b0>
   10e00:	ldrb	r3, [r5, #2]
   10e04:	cmp	r3, #0
   10e08:	beq	10da8 <strcmp@plt+0x460>
   10e0c:	b	10dc8 <strcmp@plt+0x480>
   10e10:	bl	108d0 <free@plt>
   10e14:	mov	r0, r4
   10e18:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e1c:	push	{r3, lr}
   10e20:	movw	r0, #3836	; 0xefc
   10e24:	movt	r0, #1
   10e28:	bl	10918 <puts@plt>
   10e2c:	mov	r0, #10
   10e30:	bl	108b8 <putchar@plt>
   10e34:	movw	r0, #3920	; 0xf50
   10e38:	movt	r0, #1
   10e3c:	bl	10918 <puts@plt>
   10e40:	movw	r0, #3960	; 0xf78
   10e44:	movt	r0, #1
   10e48:	bl	10918 <puts@plt>
   10e4c:	movw	r0, #4004	; 0xfa4
   10e50:	pop	{r3, lr}
   10e54:	movt	r0, #1
   10e58:	b	10918 <puts@plt>
   10e5c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10e60:	mov	r7, r0
   10e64:	ldr	r6, [pc, #76]	; 10eb8 <strcmp@plt+0x570>
   10e68:	mov	r8, r1
   10e6c:	ldr	r5, [pc, #72]	; 10ebc <strcmp@plt+0x574>
   10e70:	mov	r9, r2
   10e74:	add	r6, pc, r6
   10e78:	bl	10844 <_init@@Base>
   10e7c:	add	r5, pc, r5
   10e80:	rsb	r6, r5, r6
   10e84:	asrs	r6, r6, #2
   10e88:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10e8c:	sub	r5, r5, #4
   10e90:	mov	r4, #0
   10e94:	add	r4, r4, #1
   10e98:	ldr	r3, [r5, #4]!
   10e9c:	mov	r0, r7
   10ea0:	mov	r1, r8
   10ea4:	mov	r2, r9
   10ea8:	blx	r3
   10eac:	cmp	r4, r6
   10eb0:	bne	10e94 <strcmp@plt+0x54c>
   10eb4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10eb8:	andeq	r1, r1, r4, ror r0
   10ebc:	andeq	r1, r1, r8, rrx
   10ec0:	bx	lr

Disassembly of section .fini:

00010ec4 <_fini@@Base>:
   10ec4:	push	{r3, lr}
   10ec8:	pop	{r3, pc}
