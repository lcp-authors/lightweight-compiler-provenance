
centos-preinstalled/nl-link-ifindex2name:     file format elf32-littlearm


Disassembly of section .init:

00010664 <.init>:
   10664:	push	{r3, lr}
   10668:	bl	1080c <exit@plt+0x104>
   1066c:	pop	{r3, pc}

Disassembly of section .plt:

00010670 <abort@plt-0x14>:
   10670:	push	{lr}		; (str lr, [sp, #-4]!)
   10674:	ldr	lr, [pc, #4]	; 10680 <abort@plt-0x4>
   10678:	add	lr, pc, lr
   1067c:	ldr	pc, [lr, #8]!
   10680:	andeq	r0, r1, r0, lsl #19

00010684 <abort@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2432]!	; 0x980

00010690 <rtnl_link_i2name@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2424]!	; 0x978

0001069c <nl_cli_fatal@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2416]!	; 0x970

000106a8 <__libc_start_main@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2408]!	; 0x968

000106b4 <__gmon_start__@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2400]!	; 0x960

000106c0 <nl_cli_alloc_socket@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2392]!	; 0x958

000106cc <nl_cli_link_alloc_cache@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2384]!	; 0x950

000106d8 <__stack_chk_fail@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2376]!	; 0x948

000106e4 <puts@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2368]!	; 0x940

000106f0 <nl_cli_parse_u32@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2360]!	; 0x938

000106fc <nl_cli_connect@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2352]!	; 0x930

00010708 <exit@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2344]!	; 0x928

Disassembly of section .text:

00010714 <.text>:
   10714:	push	{r4, r5, r6, lr}
   10718:	movw	r4, #4168	; 0x1048
   1071c:	movt	r4, #2
   10720:	sub	sp, sp, #24
   10724:	cmp	r0, #1
   10728:	mov	r5, r1
   1072c:	ldr	r3, [r4]
   10730:	str	r3, [sp, #20]
   10734:	ble	107bc <exit@plt+0xb4>
   10738:	bl	106c0 <nl_cli_alloc_socket@plt>
   1073c:	mov	r1, #0
   10740:	mov	r6, r0
   10744:	bl	106fc <nl_cli_connect@plt>
   10748:	mov	r0, r6
   1074c:	bl	106cc <nl_cli_link_alloc_cache@plt>
   10750:	mov	r6, r0
   10754:	ldr	r0, [r5, #4]
   10758:	bl	106f0 <nl_cli_parse_u32@plt>
   1075c:	add	r2, sp, #4
   10760:	mov	r3, #16
   10764:	mov	r1, r0
   10768:	mov	r5, r0
   1076c:	mov	r0, r6
   10770:	bl	10690 <rtnl_link_i2name@plt>
   10774:	cmp	r0, #0
   10778:	beq	107a0 <exit@plt+0x98>
   1077c:	add	r0, sp, #4
   10780:	bl	106e4 <puts@plt>
   10784:	ldr	r2, [sp, #20]
   10788:	ldr	r3, [r4]
   1078c:	mov	r0, #0
   10790:	cmp	r2, r3
   10794:	bne	107b8 <exit@plt+0xb0>
   10798:	add	sp, sp, #24
   1079c:	pop	{r4, r5, r6, pc}
   107a0:	mov	r2, r5
   107a4:	movw	r1, #2468	; 0x9a4
   107a8:	mov	r0, #2
   107ac:	movt	r1, #1
   107b0:	bl	1069c <nl_cli_fatal@plt>
   107b4:	b	1077c <exit@plt+0x74>
   107b8:	bl	106d8 <__stack_chk_fail@plt>
   107bc:	movw	r0, #2428	; 0x97c
   107c0:	movt	r0, #1
   107c4:	bl	106e4 <puts@plt>
   107c8:	mov	r0, #0
   107cc:	bl	10708 <exit@plt>
   107d0:	mov	fp, #0
   107d4:	mov	lr, #0
   107d8:	pop	{r1}		; (ldr r1, [sp], #4)
   107dc:	mov	r2, sp
   107e0:	push	{r2}		; (str r2, [sp, #-4]!)
   107e4:	push	{r0}		; (str r0, [sp, #-4]!)
   107e8:	ldr	ip, [pc, #16]	; 10800 <exit@plt+0xf8>
   107ec:	push	{ip}		; (str ip, [sp, #-4]!)
   107f0:	ldr	r0, [pc, #12]	; 10804 <exit@plt+0xfc>
   107f4:	ldr	r3, [pc, #12]	; 10808 <exit@plt+0x100>
   107f8:	bl	106a8 <__libc_start_main@plt>
   107fc:	bl	10684 <abort@plt>
   10800:	andeq	r0, r1, r8, ror #18
   10804:	andeq	r0, r1, r4, lsl r7
   10808:	andeq	r0, r1, r4, lsl #18
   1080c:	ldr	r3, [pc, #20]	; 10828 <exit@plt+0x120>
   10810:	ldr	r2, [pc, #20]	; 1082c <exit@plt+0x124>
   10814:	add	r3, pc, r3
   10818:	ldr	r2, [r3, r2]
   1081c:	cmp	r2, #0
   10820:	bxeq	lr
   10824:	b	106b4 <__gmon_start__@plt>
   10828:	andeq	r0, r1, r4, ror #15
   1082c:	andeq	r0, r0, ip, lsr r0
   10830:	push	{r3, lr}
   10834:	movw	r0, #4164	; 0x1044
   10838:	ldr	r3, [pc, #36]	; 10864 <exit@plt+0x15c>
   1083c:	movt	r0, #2
   10840:	rsb	r3, r0, r3
   10844:	cmp	r3, #6
   10848:	popls	{r3, pc}
   1084c:	movw	r3, #0
   10850:	movt	r3, #0
   10854:	cmp	r3, #0
   10858:	popeq	{r3, pc}
   1085c:	blx	r3
   10860:	pop	{r3, pc}
   10864:	andeq	r1, r2, r7, asr #32
   10868:	push	{r3, lr}
   1086c:	movw	r0, #4164	; 0x1044
   10870:	movw	r3, #4164	; 0x1044
   10874:	movt	r0, #2
   10878:	movt	r3, #2
   1087c:	rsb	r3, r0, r3
   10880:	asr	r3, r3, #2
   10884:	add	r3, r3, r3, lsr #31
   10888:	asrs	r1, r3, #1
   1088c:	popeq	{r3, pc}
   10890:	movw	r2, #0
   10894:	movt	r2, #0
   10898:	cmp	r2, #0
   1089c:	popeq	{r3, pc}
   108a0:	blx	r2
   108a4:	pop	{r3, pc}
   108a8:	push	{r4, lr}
   108ac:	movw	r4, #4172	; 0x104c
   108b0:	movt	r4, #2
   108b4:	ldrb	r3, [r4]
   108b8:	cmp	r3, #0
   108bc:	popne	{r4, pc}
   108c0:	bl	10830 <exit@plt+0x128>
   108c4:	mov	r3, #1
   108c8:	strb	r3, [r4]
   108cc:	pop	{r4, pc}
   108d0:	movw	r0, #3772	; 0xebc
   108d4:	movt	r0, #2
   108d8:	push	{r3, lr}
   108dc:	ldr	r3, [r0]
   108e0:	cmp	r3, #0
   108e4:	beq	108fc <exit@plt+0x1f4>
   108e8:	movw	r3, #0
   108ec:	movt	r3, #0
   108f0:	cmp	r3, #0
   108f4:	beq	108fc <exit@plt+0x1f4>
   108f8:	blx	r3
   108fc:	pop	{r3, lr}
   10900:	b	10868 <exit@plt+0x160>
   10904:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10908:	mov	r7, r0
   1090c:	ldr	r6, [pc, #76]	; 10960 <exit@plt+0x258>
   10910:	mov	r8, r1
   10914:	ldr	r5, [pc, #72]	; 10964 <exit@plt+0x25c>
   10918:	mov	r9, r2
   1091c:	add	r6, pc, r6
   10920:	bl	10664 <abort@plt-0x20>
   10924:	add	r5, pc, r5
   10928:	rsb	r6, r5, r6
   1092c:	asrs	r6, r6, #2
   10930:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10934:	sub	r5, r5, #4
   10938:	mov	r4, #0
   1093c:	add	r4, r4, #1
   10940:	ldr	r3, [r5, #4]!
   10944:	mov	r0, r7
   10948:	mov	r1, r8
   1094c:	mov	r2, r9
   10950:	blx	r3
   10954:	cmp	r4, r6
   10958:	bne	1093c <exit@plt+0x234>
   1095c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10960:	muleq	r1, r4, r5
   10964:	andeq	r0, r1, r8, lsl #11
   10968:	bx	lr

Disassembly of section .fini:

0001096c <.fini>:
   1096c:	push	{r3, lr}
   10970:	pop	{r3, pc}
