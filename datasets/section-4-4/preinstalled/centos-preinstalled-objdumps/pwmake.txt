
centos-preinstalled/pwmake:     file format elf32-littlearm


Disassembly of section .init:

00010870 <_init@@Base>:
   10870:	push	{r3, lr}
   10874:	bl	10b68 <abort@plt+0x200>
   10878:	pop	{r3, pc}

Disassembly of section .plt:

0001087c <pwquality_read_config@plt-0x14>:
   1087c:	push	{lr}		; (str lr, [sp, #-4]!)
   10880:	ldr	lr, [pc, #4]	; 1088c <_init@@Base+0x1c>
   10884:	add	lr, pc, lr
   10888:	ldr	pc, [lr, #8]!
   1088c:	andeq	r0, r1, r4, ror r7

00010890 <pwquality_read_config@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #16, 20	; 0x10000
   10898:	ldr	pc, [ip, #1908]!	; 0x774

0001089c <strtol@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #16, 20	; 0x10000
   108a4:	ldr	pc, [ip, #1900]!	; 0x76c

000108a8 <free@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #16, 20	; 0x10000
   108b0:	ldr	pc, [ip, #1892]!	; 0x764

000108b4 <dcgettext@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #16, 20	; 0x10000
   108bc:	ldr	pc, [ip, #1884]!	; 0x75c

000108c0 <__stack_chk_fail@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #16, 20	; 0x10000
   108c8:	ldr	pc, [ip, #1876]!	; 0x754

000108cc <pwquality_strerror@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #16, 20	; 0x10000
   108d4:	ldr	pc, [ip, #1868]!	; 0x74c

000108d8 <textdomain@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #16, 20	; 0x10000
   108e0:	ldr	pc, [ip, #1860]!	; 0x744

000108e4 <pwquality_free_settings@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #16, 20	; 0x10000
   108ec:	ldr	pc, [ip, #1852]!	; 0x73c

000108f0 <puts@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #16, 20	; 0x10000
   108f8:	ldr	pc, [ip, #1844]!	; 0x734

000108fc <__libc_start_main@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #16, 20	; 0x10000
   10904:	ldr	pc, [ip, #1836]!	; 0x72c

00010908 <__gmon_start__@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #16, 20	; 0x10000
   10910:	ldr	pc, [ip, #1828]!	; 0x724

00010914 <exit@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #16, 20	; 0x10000
   1091c:	ldr	pc, [ip, #1820]!	; 0x71c

00010920 <pwquality_generate@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #16, 20	; 0x10000
   10928:	ldr	pc, [ip, #1812]!	; 0x714

0001092c <__xpg_basename@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #16, 20	; 0x10000
   10934:	ldr	pc, [ip, #1804]!	; 0x70c

00010938 <__fprintf_chk@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #16, 20	; 0x10000
   10940:	ldr	pc, [ip, #1796]!	; 0x704

00010944 <pwquality_default_settings@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #16, 20	; 0x10000
   1094c:	ldr	pc, [ip, #1788]!	; 0x6fc

00010950 <setlocale@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #16, 20	; 0x10000
   10958:	ldr	pc, [ip, #1780]!	; 0x6f4

0001095c <bindtextdomain@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #16, 20	; 0x10000
   10964:	ldr	pc, [ip, #1772]!	; 0x6ec

00010968 <abort@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #16, 20	; 0x10000
   10970:	ldr	pc, [ip, #1764]!	; 0x6e4

Disassembly of section .text:

00010974 <.text>:
   10974:	push	{r4, r5, r6, r7, r8, lr}
   10978:	movw	r4, #4192	; 0x1060
   1097c:	movt	r4, #2
   10980:	sub	sp, sp, #16
   10984:	mov	r6, r0
   10988:	mov	r5, r1
   1098c:	ldr	r3, [r4]
   10990:	movw	r1, #3368	; 0xd28
   10994:	mov	r0, #6
   10998:	movt	r1, #1
   1099c:	str	r3, [sp, #12]
   109a0:	bl	10950 <setlocale@plt>
   109a4:	movw	r0, #3356	; 0xd1c
   109a8:	movw	r1, #3400	; 0xd48
   109ac:	movt	r0, #1
   109b0:	movt	r1, #1
   109b4:	bl	1095c <bindtextdomain@plt>
   109b8:	movw	r0, #3356	; 0xd1c
   109bc:	movt	r0, #1
   109c0:	bl	108d8 <textdomain@plt>
   109c4:	cmp	r6, #2
   109c8:	bne	10b18 <abort@plt+0x1b0>
   109cc:	ldr	r0, [r5, #4]
   109d0:	mov	r1, #0
   109d4:	mov	r2, #10
   109d8:	bl	1089c <strtol@plt>
   109dc:	mov	r7, r0
   109e0:	bl	10944 <pwquality_default_settings@plt>
   109e4:	subs	r5, r0, #0
   109e8:	beq	10adc <abort@plt+0x174>
   109ec:	mov	r1, #0
   109f0:	add	r2, sp, #8
   109f4:	bl	10890 <pwquality_read_config@plt>
   109f8:	subs	r8, r0, #0
   109fc:	bne	10a94 <abort@plt+0x12c>
   10a00:	mov	r1, r7
   10a04:	add	r2, sp, #4
   10a08:	mov	r0, r5
   10a0c:	bl	10920 <pwquality_generate@plt>
   10a10:	mov	r6, r0
   10a14:	mov	r0, r5
   10a18:	bl	108e4 <pwquality_free_settings@plt>
   10a1c:	cmp	r6, #0
   10a20:	bne	10a54 <abort@plt+0xec>
   10a24:	ldr	r0, [sp, #4]
   10a28:	bl	108f0 <puts@plt>
   10a2c:	ldr	r0, [sp, #4]
   10a30:	bl	108a8 <free@plt>
   10a34:	ldr	r2, [sp, #12]
   10a38:	ldr	r3, [r4]
   10a3c:	mov	r0, r6
   10a40:	cmp	r2, r3
   10a44:	bne	10a50 <abort@plt+0xe8>
   10a48:	add	sp, sp, #16
   10a4c:	pop	{r4, r5, r6, r7, r8, pc}
   10a50:	bl	108c0 <__stack_chk_fail@plt>
   10a54:	movw	r3, #4200	; 0x1068
   10a58:	movt	r3, #2
   10a5c:	mov	r2, r6
   10a60:	mov	r1, r8
   10a64:	ldr	r4, [r3]
   10a68:	mov	r0, r8
   10a6c:	mov	r3, r8
   10a70:	bl	108cc <pwquality_strerror@plt>
   10a74:	movw	r2, #3420	; 0xd5c
   10a78:	mov	r1, #1
   10a7c:	movt	r2, #1
   10a80:	mov	r3, r0
   10a84:	mov	r0, r4
   10a88:	bl	10938 <__fprintf_chk@plt>
   10a8c:	mov	r0, #1
   10a90:	bl	10914 <exit@plt>
   10a94:	movw	r3, #4200	; 0x1068
   10a98:	movt	r3, #2
   10a9c:	mov	r0, #0
   10aa0:	mov	r2, r8
   10aa4:	ldr	r4, [r3]
   10aa8:	mov	r1, r0
   10aac:	ldr	r3, [sp, #8]
   10ab0:	bl	108cc <pwquality_strerror@plt>
   10ab4:	mov	r1, #1
   10ab8:	movw	r2, #3420	; 0xd5c
   10abc:	movt	r2, #1
   10ac0:	mov	r3, r0
   10ac4:	mov	r0, r4
   10ac8:	bl	10938 <__fprintf_chk@plt>
   10acc:	mov	r0, r5
   10ad0:	bl	108e4 <pwquality_free_settings@plt>
   10ad4:	mov	r0, #3
   10ad8:	bl	10914 <exit@plt>
   10adc:	movw	r3, #4200	; 0x1068
   10ae0:	movt	r3, #2
   10ae4:	mov	r1, r5
   10ae8:	mvn	r2, #7
   10aec:	ldr	r4, [r3]
   10af0:	mov	r3, r5
   10af4:	bl	108cc <pwquality_strerror@plt>
   10af8:	movw	r2, #3420	; 0xd5c
   10afc:	mov	r1, #1
   10b00:	movt	r2, #1
   10b04:	mov	r3, r0
   10b08:	mov	r0, r4
   10b0c:	bl	10938 <__fprintf_chk@plt>
   10b10:	mov	r0, r6
   10b14:	bl	10914 <exit@plt>
   10b18:	ldr	r0, [r5]
   10b1c:	bl	1092c <__xpg_basename@plt>
   10b20:	bl	10c60 <abort@plt+0x2f8>
   10b24:	mov	r0, #3
   10b28:	bl	10914 <exit@plt>
   10b2c:	mov	fp, #0
   10b30:	mov	lr, #0
   10b34:	pop	{r1}		; (ldr r1, [sp], #4)
   10b38:	mov	r2, sp
   10b3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10b40:	push	{r0}		; (str r0, [sp, #-4]!)
   10b44:	ldr	ip, [pc, #16]	; 10b5c <abort@plt+0x1f4>
   10b48:	push	{ip}		; (str ip, [sp, #-4]!)
   10b4c:	ldr	r0, [pc, #12]	; 10b60 <abort@plt+0x1f8>
   10b50:	ldr	r3, [pc, #12]	; 10b64 <abort@plt+0x1fc>
   10b54:	bl	108fc <__libc_start_main@plt>
   10b58:	bl	10968 <abort@plt>
   10b5c:	andeq	r0, r1, r8, lsl #26
   10b60:	andeq	r0, r1, r4, ror r9
   10b64:	andeq	r0, r1, r4, lsr #25
   10b68:	ldr	r3, [pc, #20]	; 10b84 <abort@plt+0x21c>
   10b6c:	ldr	r2, [pc, #20]	; 10b88 <abort@plt+0x220>
   10b70:	add	r3, pc, r3
   10b74:	ldr	r2, [r3, r2]
   10b78:	cmp	r2, #0
   10b7c:	bxeq	lr
   10b80:	b	10908 <__gmon_start__@plt>
   10b84:	andeq	r0, r1, r8, lsl #9
   10b88:	andeq	r0, r0, r8, asr r0
   10b8c:	push	{r3, lr}
   10b90:	movw	r0, #4192	; 0x1060
   10b94:	ldr	r3, [pc, #36]	; 10bc0 <abort@plt+0x258>
   10b98:	movt	r0, #2
   10b9c:	rsb	r3, r0, r3
   10ba0:	cmp	r3, #6
   10ba4:	popls	{r3, pc}
   10ba8:	movw	r3, #0
   10bac:	movt	r3, #0
   10bb0:	cmp	r3, #0
   10bb4:	popeq	{r3, pc}
   10bb8:	blx	r3
   10bbc:	pop	{r3, pc}
   10bc0:	andeq	r1, r2, r3, rrx
   10bc4:	push	{r3, lr}
   10bc8:	movw	r0, #4192	; 0x1060
   10bcc:	movw	r3, #4192	; 0x1060
   10bd0:	movt	r0, #2
   10bd4:	movt	r3, #2
   10bd8:	rsb	r3, r0, r3
   10bdc:	asr	r3, r3, #2
   10be0:	add	r3, r3, r3, lsr #31
   10be4:	asrs	r1, r3, #1
   10be8:	popeq	{r3, pc}
   10bec:	movw	r2, #0
   10bf0:	movt	r2, #0
   10bf4:	cmp	r2, #0
   10bf8:	popeq	{r3, pc}
   10bfc:	blx	r2
   10c00:	pop	{r3, pc}
   10c04:	push	{r4, lr}
   10c08:	movw	r4, #4204	; 0x106c
   10c0c:	movt	r4, #2
   10c10:	ldrb	r3, [r4]
   10c14:	cmp	r3, #0
   10c18:	popne	{r4, pc}
   10c1c:	bl	10b8c <abort@plt+0x224>
   10c20:	mov	r3, #1
   10c24:	strb	r3, [r4]
   10c28:	pop	{r4, pc}
   10c2c:	movw	r0, #3828	; 0xef4
   10c30:	movt	r0, #2
   10c34:	push	{r3, lr}
   10c38:	ldr	r3, [r0]
   10c3c:	cmp	r3, #0
   10c40:	beq	10c58 <abort@plt+0x2f0>
   10c44:	movw	r3, #0
   10c48:	movt	r3, #0
   10c4c:	cmp	r3, #0
   10c50:	beq	10c58 <abort@plt+0x2f0>
   10c54:	blx	r3
   10c58:	pop	{r3, lr}
   10c5c:	b	10bc4 <abort@plt+0x25c>
   10c60:	movw	r2, #4200	; 0x1068
   10c64:	movt	r2, #2
   10c68:	push	{r4, r5, r6, lr}
   10c6c:	movw	r1, #3372	; 0xd2c
   10c70:	ldr	r5, [r2]
   10c74:	mov	r4, r0
   10c78:	movt	r1, #1
   10c7c:	mov	r2, #5
   10c80:	movw	r0, #3356	; 0xd1c
   10c84:	movt	r0, #1
   10c88:	bl	108b4 <dcgettext@plt>
   10c8c:	mov	r3, r4
   10c90:	mov	r1, #1
   10c94:	mov	r2, r0
   10c98:	mov	r0, r5
   10c9c:	pop	{r4, r5, r6, lr}
   10ca0:	b	10938 <__fprintf_chk@plt>
   10ca4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10ca8:	mov	r7, r0
   10cac:	ldr	r6, [pc, #76]	; 10d00 <abort@plt+0x398>
   10cb0:	mov	r8, r1
   10cb4:	ldr	r5, [pc, #72]	; 10d04 <abort@plt+0x39c>
   10cb8:	mov	r9, r2
   10cbc:	add	r6, pc, r6
   10cc0:	bl	10870 <_init@@Base>
   10cc4:	add	r5, pc, r5
   10cc8:	rsb	r6, r5, r6
   10ccc:	asrs	r6, r6, #2
   10cd0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10cd4:	sub	r5, r5, #4
   10cd8:	mov	r4, #0
   10cdc:	add	r4, r4, #1
   10ce0:	ldr	r3, [r5, #4]!
   10ce4:	mov	r0, r7
   10ce8:	mov	r1, r8
   10cec:	mov	r2, r9
   10cf0:	blx	r3
   10cf4:	cmp	r4, r6
   10cf8:	bne	10cdc <abort@plt+0x374>
   10cfc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10d00:	andeq	r0, r1, ip, lsr #4
   10d04:	andeq	r0, r1, r0, lsr #4
   10d08:	bx	lr

Disassembly of section .fini:

00010d0c <_fini@@Base>:
   10d0c:	push	{r3, lr}
   10d10:	pop	{r3, pc}
