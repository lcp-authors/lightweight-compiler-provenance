
centos-preinstalled/date:     file format elf32-littlearm


Disassembly of section .init:

00011238 <.init>:
   11238:	push	{r3, lr}
   1123c:	bl	11e24 <close@plt+0x878>
   11240:	pop	{r3, pc}

Disassembly of section .plt:

00011244 <fdopen@plt-0x14>:
   11244:	push	{lr}		; (str lr, [sp, #-4]!)
   11248:	ldr	lr, [pc, #4]	; 11254 <fdopen@plt-0x4>
   1124c:	add	lr, pc, lr
   11250:	ldr	pc, [lr, #8]!
   11254:	andeq	fp, r1, ip, lsr #27

00011258 <fdopen@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #110592	; 0x1b000
   11260:	ldr	pc, [ip, #3500]!	; 0xdac

00011264 <calloc@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #110592	; 0x1b000
   1126c:	ldr	pc, [ip, #3492]!	; 0xda4

00011270 <fputs_unlocked@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #110592	; 0x1b000
   11278:	ldr	pc, [ip, #3484]!	; 0xd9c

0001127c <raise@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #110592	; 0x1b000
   11284:	ldr	pc, [ip, #3476]!	; 0xd94

00011288 <__getdelim@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #110592	; 0x1b000
   11290:	ldr	pc, [ip, #3468]!	; 0xd8c

00011294 <strcmp@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #110592	; 0x1b000
   1129c:	ldr	pc, [ip, #3460]!	; 0xd84

000112a0 <mktime@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #110592	; 0x1b000
   112a8:	ldr	pc, [ip, #3452]!	; 0xd7c

000112ac <fflush@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #110592	; 0x1b000
   112b4:	ldr	pc, [ip, #3444]!	; 0xd74

000112b8 <free@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #110592	; 0x1b000
   112c0:	ldr	pc, [ip, #3436]!	; 0xd6c

000112c4 <clock_gettime@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #110592	; 0x1b000
   112cc:	ldr	pc, [ip, #3428]!	; 0xd64

000112d0 <_exit@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #110592	; 0x1b000
   112d8:	ldr	pc, [ip, #3420]!	; 0xd5c

000112dc <memcpy@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #110592	; 0x1b000
   112e4:	ldr	pc, [ip, #3412]!	; 0xd54

000112e8 <mbsinit@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #110592	; 0x1b000
   112f0:	ldr	pc, [ip, #3404]!	; 0xd4c

000112f4 <time@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #110592	; 0x1b000
   112fc:	ldr	pc, [ip, #3396]!	; 0xd44

00011300 <memcmp@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #110592	; 0x1b000
   11308:	ldr	pc, [ip, #3388]!	; 0xd3c

0001130c <dcgettext@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #110592	; 0x1b000
   11314:	ldr	pc, [ip, #3380]!	; 0xd34

00011318 <__stack_chk_fail@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #110592	; 0x1b000
   11320:	ldr	pc, [ip, #3372]!	; 0xd2c

00011324 <realloc@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #110592	; 0x1b000
   1132c:	ldr	pc, [ip, #3364]!	; 0xd24

00011330 <textdomain@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #110592	; 0x1b000
   11338:	ldr	pc, [ip, #3356]!	; 0xd1c

0001133c <iswprint@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #110592	; 0x1b000
   11344:	ldr	pc, [ip, #3348]!	; 0xd14

00011348 <fwrite@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #110592	; 0x1b000
   11350:	ldr	pc, [ip, #3340]!	; 0xd0c

00011354 <lseek64@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #110592	; 0x1b000
   1135c:	ldr	pc, [ip, #3332]!	; 0xd04

00011360 <__stpcpy_chk@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #110592	; 0x1b000
   11368:	ldr	pc, [ip, #3324]!	; 0xcfc

0001136c <__ctype_get_mb_cur_max@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #110592	; 0x1b000
   11374:	ldr	pc, [ip, #3316]!	; 0xcf4

00011378 <strcpy@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #110592	; 0x1b000
   11380:	ldr	pc, [ip, #3308]!	; 0xcec

00011384 <gettimeofday@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #110592	; 0x1b000
   1138c:	ldr	pc, [ip, #3300]!	; 0xce4

00011390 <__fpending@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #110592	; 0x1b000
   11398:	ldr	pc, [ip, #3292]!	; 0xcdc

0001139c <mbrtowc@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #110592	; 0x1b000
   113a4:	ldr	pc, [ip, #3284]!	; 0xcd4

000113a8 <error@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #110592	; 0x1b000
   113b0:	ldr	pc, [ip, #3276]!	; 0xccc

000113b4 <open64@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #110592	; 0x1b000
   113bc:	ldr	pc, [ip, #3268]!	; 0xcc4

000113c0 <getenv@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #110592	; 0x1b000
   113c8:	ldr	pc, [ip, #3260]!	; 0xcbc

000113cc <malloc@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #110592	; 0x1b000
   113d4:	ldr	pc, [ip, #3252]!	; 0xcb4

000113d8 <settimeofday@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #110592	; 0x1b000
   113e0:	ldr	pc, [ip, #3244]!	; 0xcac

000113e4 <__libc_start_main@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #110592	; 0x1b000
   113ec:	ldr	pc, [ip, #3236]!	; 0xca4

000113f0 <strftime@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #110592	; 0x1b000
   113f8:	ldr	pc, [ip, #3228]!	; 0xc9c

000113fc <__freading@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #110592	; 0x1b000
   11404:	ldr	pc, [ip, #3220]!	; 0xc94

00011408 <localtime@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #110592	; 0x1b000
   11410:	ldr	pc, [ip, #3212]!	; 0xc8c

00011414 <__ctype_tolower_loc@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #110592	; 0x1b000
   1141c:	ldr	pc, [ip, #3204]!	; 0xc84

00011420 <__ctype_toupper_loc@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #110592	; 0x1b000
   11428:	ldr	pc, [ip, #3196]!	; 0xc7c

0001142c <__gmon_start__@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #110592	; 0x1b000
   11434:	ldr	pc, [ip, #3188]!	; 0xc74

00011438 <getopt_long@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #110592	; 0x1b000
   11440:	ldr	pc, [ip, #3180]!	; 0xc6c

00011444 <__ctype_b_loc@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #110592	; 0x1b000
   1144c:	ldr	pc, [ip, #3172]!	; 0xc64

00011450 <exit@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #110592	; 0x1b000
   11458:	ldr	pc, [ip, #3164]!	; 0xc5c

0001145c <strlen@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #110592	; 0x1b000
   11464:	ldr	pc, [ip, #3156]!	; 0xc54

00011468 <strchr@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #110592	; 0x1b000
   11470:	ldr	pc, [ip, #3148]!	; 0xc4c

00011474 <setenv@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #110592	; 0x1b000
   1147c:	ldr	pc, [ip, #3140]!	; 0xc44

00011480 <ungetc@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #110592	; 0x1b000
   11488:	ldr	pc, [ip, #3132]!	; 0xc3c

0001148c <__errno_location@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #110592	; 0x1b000
   11494:	ldr	pc, [ip, #3124]!	; 0xc34

00011498 <__sprintf_chk@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #110592	; 0x1b000
   114a0:	ldr	pc, [ip, #3116]!	; 0xc2c

000114a4 <__cxa_atexit@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #110592	; 0x1b000
   114ac:	ldr	pc, [ip, #3108]!	; 0xc24

000114b0 <memset@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #110592	; 0x1b000
   114b8:	ldr	pc, [ip, #3100]!	; 0xc1c

000114bc <clock_settime@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #110592	; 0x1b000
   114c4:	ldr	pc, [ip, #3092]!	; 0xc14

000114c8 <fscanf@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #110592	; 0x1b000
   114d0:	ldr	pc, [ip, #3084]!	; 0xc0c

000114d4 <__printf_chk@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #110592	; 0x1b000
   114dc:	ldr	pc, [ip, #3076]!	; 0xc04

000114e0 <fileno@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #110592	; 0x1b000
   114e8:	ldr	pc, [ip, #3068]!	; 0xbfc

000114ec <__fprintf_chk@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #110592	; 0x1b000
   114f4:	ldr	pc, [ip, #3060]!	; 0xbf4

000114f8 <fclose@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #110592	; 0x1b000
   11500:	ldr	pc, [ip, #3052]!	; 0xbec

00011504 <fseeko64@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #110592	; 0x1b000
   1150c:	ldr	pc, [ip, #3044]!	; 0xbe4

00011510 <__uflow@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #110592	; 0x1b000
   11518:	ldr	pc, [ip, #3036]!	; 0xbdc

0001151c <__overflow@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #110592	; 0x1b000
   11524:	ldr	pc, [ip, #3028]!	; 0xbd4

00011528 <setlocale@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #110592	; 0x1b000
   11530:	ldr	pc, [ip, #3020]!	; 0xbcc

00011534 <putenv@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #110592	; 0x1b000
   1153c:	ldr	pc, [ip, #3012]!	; 0xbc4

00011540 <strrchr@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #110592	; 0x1b000
   11548:	ldr	pc, [ip, #3004]!	; 0xbbc

0001154c <nl_langinfo@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #110592	; 0x1b000
   11554:	ldr	pc, [ip, #2996]!	; 0xbb4

00011558 <fputc@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #110592	; 0x1b000
   11560:	ldr	pc, [ip, #2988]!	; 0xbac

00011564 <fopen64@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #110592	; 0x1b000
   1156c:	ldr	pc, [ip, #2980]!	; 0xba4

00011570 <bindtextdomain@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #110592	; 0x1b000
   11578:	ldr	pc, [ip, #2972]!	; 0xb9c

0001157c <__xstat64@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #110592	; 0x1b000
   11584:	ldr	pc, [ip, #2964]!	; 0xb94

00011588 <unsetenv@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #110592	; 0x1b000
   11590:	ldr	pc, [ip, #2956]!	; 0xb8c

00011594 <strncmp@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #110592	; 0x1b000
   1159c:	ldr	pc, [ip, #2948]!	; 0xb84

000115a0 <abort@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #110592	; 0x1b000
   115a8:	ldr	pc, [ip, #2940]!	; 0xb7c

000115ac <close@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #110592	; 0x1b000
   115b4:	ldr	pc, [ip, #2932]!	; 0xb74

Disassembly of section .text:

000115b8 <close_stdout@@Base-0x128c>:
   115b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115bc:	sub	sp, sp, #180	; 0xb4
   115c0:	ldr	r4, [pc, #1936]	; 11d58 <close@plt+0x7ac>
   115c4:	mov	r6, #0
   115c8:	ldr	r3, [pc, #1932]	; 11d5c <close@plt+0x7b0>
   115cc:	mov	r9, r0
   115d0:	add	r4, pc, r4
   115d4:	str	r6, [sp, #20]
   115d8:	ldr	r5, [pc, #1920]	; 11d60 <close@plt+0x7b4>
   115dc:	mov	r8, r1
   115e0:	ldr	r3, [r4, r3]
   115e4:	mov	sl, r6
   115e8:	ldr	r7, [pc, #1908]	; 11d64 <close@plt+0x7b8>
   115ec:	add	r5, pc, r5
   115f0:	ldr	r0, [r1]
   115f4:	add	r1, r5, #36	; 0x24
   115f8:	ldr	r3, [r3]
   115fc:	add	r7, pc, r7
   11600:	add	r2, r7, #8
   11604:	str	r1, [sp, #40]	; 0x28
   11608:	str	r2, [sp, #36]	; 0x24
   1160c:	str	r3, [sp, #172]	; 0xac
   11610:	str	r6, [sp, #24]
   11614:	str	r6, [sp, #32]
   11618:	str	r6, [sp, #28]
   1161c:	bl	1684c <close_stdout@@Base+0x4008>
   11620:	ldr	r1, [pc, #1856]	; 11d68 <close@plt+0x7bc>
   11624:	mov	r0, #6
   11628:	ldr	fp, [pc, #1852]	; 11d6c <close@plt+0x7c0>
   1162c:	add	r1, pc, r1
   11630:	bl	11528 <setlocale@plt>
   11634:	add	fp, pc, fp
   11638:	ldr	r1, [pc, #1840]	; 11d70 <close@plt+0x7c4>
   1163c:	mov	r0, fp
   11640:	add	r1, pc, r1
   11644:	bl	11570 <bindtextdomain@plt>
   11648:	mov	r0, fp
   1164c:	bl	11330 <textdomain@plt>
   11650:	ldr	r3, [pc, #1820]	; 11d74 <close@plt+0x7c8>
   11654:	ldr	fp, [pc, #1820]	; 11d78 <close@plt+0x7cc>
   11658:	ldr	r0, [r4, r3]
   1165c:	add	fp, pc, fp
   11660:	bl	19ba0 <close_stdout@@Base+0x735c>
   11664:	add	fp, fp, #144	; 0x90
   11668:	str	fp, [sp, #44]	; 0x2c
   1166c:	mov	fp, #0
   11670:	mov	r0, r9
   11674:	str	fp, [sp]
   11678:	mov	r1, r8
   1167c:	add	r2, r5, #304	; 0x130
   11680:	add	r3, r7, #24
   11684:	bl	11438 <getopt_long@plt>
   11688:	cmn	r0, #1
   1168c:	beq	118c0 <close@plt+0x314>
   11690:	cmp	r0, #100	; 0x64
   11694:	beq	118ac <close@plt+0x300>
   11698:	ble	116c8 <close@plt+0x11c>
   1169c:	cmp	r0, #115	; 0x73
   116a0:	beq	11888 <close@plt+0x2dc>
   116a4:	bgt	11720 <close@plt+0x174>
   116a8:	cmp	r0, #102	; 0x66
   116ac:	beq	117e8 <close@plt+0x23c>
   116b0:	cmp	r0, #114	; 0x72
   116b4:	bne	11880 <close@plt+0x2d4>
   116b8:	ldr	r3, [pc, #1724]	; 11d7c <close@plt+0x7d0>
   116bc:	ldr	r3, [r4, r3]
   116c0:	ldr	r6, [r3]
   116c4:	b	1166c <close@plt+0xc0>
   116c8:	cmn	r0, #2
   116cc:	beq	118a4 <close@plt+0x2f8>
   116d0:	ble	117fc <close@plt+0x250>
   116d4:	cmp	r0, #73	; 0x49
   116d8:	beq	11794 <close@plt+0x1e8>
   116dc:	cmp	r0, #82	; 0x52
   116e0:	bne	11880 <close@plt+0x2d4>
   116e4:	mov	r3, r5
   116e8:	cmp	sl, #0
   116ec:	moveq	sl, r3
   116f0:	beq	1166c <close@plt+0xc0>
   116f4:	ldr	r1, [pc, #1668]	; 11d80 <close@plt+0x7d4>
   116f8:	mov	r2, #5
   116fc:	mov	r0, #0
   11700:	mov	sl, r3
   11704:	add	r1, pc, r1
   11708:	bl	1130c <dcgettext@plt>
   1170c:	mov	r1, #0
   11710:	mov	r2, r0
   11714:	mov	r0, #1
   11718:	bl	113a8 <error@plt>
   1171c:	b	1166c <close@plt+0xc0>
   11720:	cmp	r0, #117	; 0x75
   11724:	beq	1177c <close@plt+0x1d0>
   11728:	cmp	r0, #256	; 0x100
   1172c:	bne	11880 <close@plt+0x2d4>
   11730:	ldr	r1, [pc, #1604]	; 11d7c <close@plt+0x7d0>
   11734:	mov	r3, #4
   11738:	ldr	ip, [pc, #1604]	; 11d84 <close@plt+0x7d8>
   1173c:	ldr	r0, [pc, #1604]	; 11d88 <close@plt+0x7dc>
   11740:	ldr	r1, [r4, r1]
   11744:	str	r3, [sp]
   11748:	add	r0, pc, r0
   1174c:	ldr	ip, [r4, ip]
   11750:	ldr	r2, [sp, #36]	; 0x24
   11754:	ldr	r3, [sp, #40]	; 0x28
   11758:	ldr	ip, [ip]
   1175c:	ldr	r1, [r1]
   11760:	str	ip, [sp, #4]
   11764:	bl	12760 <close@plt+0x11b4>
   11768:	add	r3, r5, #48	; 0x30
   1176c:	add	r0, r5, r0, lsl #2
   11770:	ldr	r2, [r0, #36]	; 0x24
   11774:	add	r3, r3, r2, lsl #5
   11778:	b	116e8 <close@plt+0x13c>
   1177c:	ldr	r0, [pc, #1544]	; 11d8c <close@plt+0x7e0>
   11780:	add	r0, pc, r0
   11784:	bl	11534 <putenv@plt>
   11788:	cmp	r0, #0
   1178c:	beq	1166c <close@plt+0xc0>
   11790:	bl	18900 <close_stdout@@Base+0x60bc>
   11794:	ldr	r3, [pc, #1504]	; 11d7c <close@plt+0x7d0>
   11798:	ldr	r3, [r4, r3]
   1179c:	ldr	r1, [r3]
   117a0:	cmp	r1, #0
   117a4:	beq	117dc <close@plt+0x230>
   117a8:	ldr	r3, [pc, #1492]	; 11d84 <close@plt+0x7d8>
   117ac:	mov	r2, #4
   117b0:	str	r2, [sp]
   117b4:	mov	r2, r7
   117b8:	ldr	r0, [pc, #1488]	; 11d90 <close@plt+0x7e4>
   117bc:	ldr	ip, [r4, r3]
   117c0:	add	r3, r5, #28
   117c4:	add	r0, pc, r0
   117c8:	ldr	ip, [ip]
   117cc:	str	ip, [sp, #4]
   117d0:	bl	12760 <close@plt+0x11b4>
   117d4:	add	r0, r5, r0, lsl #2
   117d8:	ldr	r1, [r0, #28]
   117dc:	ldr	r0, [sp, #44]	; 0x2c
   117e0:	add	r3, r0, r1, lsl #5
   117e4:	b	116e8 <close@plt+0x13c>
   117e8:	ldr	r3, [pc, #1420]	; 11d7c <close@plt+0x7d0>
   117ec:	ldr	r3, [r4, r3]
   117f0:	ldr	r3, [r3]
   117f4:	str	r3, [sp, #20]
   117f8:	b	1166c <close@plt+0xc0>
   117fc:	cmn	r0, #3
   11800:	bne	11880 <close@plt+0x2d4>
   11804:	ldr	r1, [pc, #1416]	; 11d94 <close@plt+0x7e8>
   11808:	ldr	r3, [pc, #1416]	; 11d98 <close@plt+0x7ec>
   1180c:	ldr	r2, [pc, #1416]	; 11d9c <close@plt+0x7f0>
   11810:	ldr	r0, [r4, r1]
   11814:	ldr	r3, [r4, r3]
   11818:	add	r2, pc, r2
   1181c:	ldr	r1, [pc, #1404]	; 11da0 <close@plt+0x7f4>
   11820:	ldr	r0, [r0]
   11824:	ldr	r3, [r3]
   11828:	add	r1, pc, r1
   1182c:	stm	sp, {r2, fp}
   11830:	ldr	r2, [pc, #1388]	; 11da4 <close@plt+0x7f8>
   11834:	add	r2, pc, r2
   11838:	bl	185dc <close_stdout@@Base+0x5d98>
   1183c:	mov	r0, fp
   11840:	bl	11450 <exit@plt>
   11844:	ldr	r1, [pc, #1372]	; 11da8 <close@plt+0x7fc>
   11848:	mov	r0, r7
   1184c:	mov	r2, #5
   11850:	add	r1, pc, r1
   11854:	bl	1130c <dcgettext@plt>
   11858:	ldr	r3, [fp]
   1185c:	add	r3, r3, #1
   11860:	mov	r4, r0
   11864:	ldr	r0, [r8, r3, lsl #2]
   11868:	bl	1809c <close_stdout@@Base+0x5858>
   1186c:	mov	r1, r7
   11870:	mov	r2, r4
   11874:	mov	r3, r0
   11878:	mov	r0, r7
   1187c:	bl	113a8 <error@plt>
   11880:	mov	r0, #1
   11884:	bl	12074 <close@plt+0xac8>
   11888:	ldr	r3, [pc, #1260]	; 11d7c <close@plt+0x7d0>
   1188c:	mov	r1, #1
   11890:	str	r1, [sp, #24]
   11894:	ldr	r3, [r4, r3]
   11898:	ldr	r3, [r3]
   1189c:	str	r3, [sp, #32]
   118a0:	b	1166c <close@plt+0xc0>
   118a4:	mov	r0, fp
   118a8:	bl	12074 <close@plt+0xac8>
   118ac:	ldr	r3, [pc, #1224]	; 11d7c <close@plt+0x7d0>
   118b0:	ldr	r3, [r4, r3]
   118b4:	ldr	r3, [r3]
   118b8:	str	r3, [sp, #28]
   118bc:	b	1166c <close@plt+0xc0>
   118c0:	ldr	r2, [sp, #20]
   118c4:	ldr	r0, [sp, #28]
   118c8:	subs	ip, r2, fp
   118cc:	movne	ip, #1
   118d0:	subs	r3, r6, fp
   118d4:	movne	r3, #1
   118d8:	cmp	r0, fp
   118dc:	moveq	r5, ip
   118e0:	addne	r5, ip, #1
   118e4:	add	r5, r5, r3
   118e8:	cmp	r5, #1
   118ec:	ble	11918 <close@plt+0x36c>
   118f0:	ldr	r1, [pc, #1204]	; 11dac <close@plt+0x800>
   118f4:	mov	r0, fp
   118f8:	add	r1, pc, r1
   118fc:	mov	r2, #5
   11900:	bl	1130c <dcgettext@plt>
   11904:	mov	r1, fp
   11908:	mov	r2, r0
   1190c:	mov	r0, fp
   11910:	bl	113a8 <error@plt>
   11914:	b	11880 <close@plt+0x2d4>
   11918:	ldr	r1, [sp, #24]
   1191c:	and	r2, r5, #1
   11920:	ands	r7, r2, r1
   11924:	bne	11a8c <close@plt+0x4e0>
   11928:	ldr	r1, [pc, #1152]	; 11db0 <close@plt+0x804>
   1192c:	ldr	fp, [r4, r1]
   11930:	ldr	r1, [fp]
   11934:	cmp	r9, r1
   11938:	ble	11964 <close@plt+0x3b8>
   1193c:	add	r0, r1, #1
   11940:	cmp	r9, r0
   11944:	bgt	11844 <close@plt+0x298>
   11948:	ldr	r1, [r8, r1, lsl #2]
   1194c:	ldrb	r1, [r1]
   11950:	cmp	r1, #43	; 0x2b
   11954:	beq	11c14 <close@plt+0x668>
   11958:	ldr	r0, [sp, #24]
   1195c:	orrs	r0, r2, r0
   11960:	bne	11cac <close@plt+0x700>
   11964:	cmp	sl, #0
   11968:	beq	11cdc <close@plt+0x730>
   1196c:	cmp	ip, #0
   11970:	beq	11ae0 <close@plt+0x534>
   11974:	ldr	r1, [sp, #20]
   11978:	ldrb	r3, [r1]
   1197c:	cmp	r3, #45	; 0x2d
   11980:	bne	11a9c <close@plt+0x4f0>
   11984:	ldrb	r0, [r1, #1]
   11988:	cmp	r0, #0
   1198c:	bne	11a9c <close@plt+0x4f0>
   11990:	ldr	r1, [pc, #1052]	; 11db4 <close@plt+0x808>
   11994:	mov	r2, #5
   11998:	add	r1, pc, r1
   1199c:	bl	1130c <dcgettext@plt>
   119a0:	ldr	r3, [pc, #1040]	; 11db8 <close@plt+0x80c>
   119a4:	str	r0, [sp, #20]
   119a8:	ldr	r3, [r4, r3]
   119ac:	ldr	r8, [r3]
   119b0:	ldr	fp, [pc, #1028]	; 11dbc <close@plt+0x810>
   119b4:	add	r9, sp, #52	; 0x34
   119b8:	add	r7, sp, #56	; 0x38
   119bc:	add	r5, sp, #64	; 0x40
   119c0:	add	fp, pc, fp
   119c4:	mov	r6, #1
   119c8:	mov	r3, #0
   119cc:	str	r3, [sp, #52]	; 0x34
   119d0:	str	r3, [sp, #56]	; 0x38
   119d4:	mov	r0, r9
   119d8:	mov	r1, r7
   119dc:	mov	r2, #10
   119e0:	mov	r3, r8
   119e4:	bl	11288 <__getdelim@plt>
   119e8:	subs	r4, r0, #0
   119ec:	blt	11a68 <close@plt+0x4bc>
   119f0:	mov	r0, r5
   119f4:	ldr	r1, [sp, #52]	; 0x34
   119f8:	mov	r2, #0
   119fc:	bl	15b18 <close_stdout@@Base+0x32d4>
   11a00:	cmp	r0, #0
   11a04:	bne	11a54 <close@plt+0x4a8>
   11a08:	ldr	r3, [sp, #52]	; 0x34
   11a0c:	sub	r4, r4, #1
   11a10:	mov	r1, fp
   11a14:	ldrb	r2, [r3, r4]
   11a18:	cmp	r2, #10
   11a1c:	mov	r2, #5
   11a20:	strbeq	r0, [r3, r4]
   11a24:	mov	r0, #0
   11a28:	mov	r6, r0
   11a2c:	bl	1130c <dcgettext@plt>
   11a30:	mov	r4, r0
   11a34:	ldr	r0, [sp, #52]	; 0x34
   11a38:	bl	1809c <close_stdout@@Base+0x5858>
   11a3c:	mov	r2, r4
   11a40:	mov	r1, r6
   11a44:	mov	r3, r0
   11a48:	mov	r0, r6
   11a4c:	bl	113a8 <error@plt>
   11a50:	b	119d4 <close@plt+0x428>
   11a54:	mov	r0, sl
   11a58:	ldm	r5, {r1, r2}
   11a5c:	bl	11f1c <close@plt+0x970>
   11a60:	and	r6, r0, r6
   11a64:	b	119d4 <close@plt+0x428>
   11a68:	mov	r0, r8
   11a6c:	bl	18958 <close_stdout@@Base+0x6114>
   11a70:	cmn	r0, #1
   11a74:	beq	11be8 <close@plt+0x63c>
   11a78:	ldr	r0, [sp, #52]	; 0x34
   11a7c:	bl	112b8 <free@plt>
   11a80:	rsbs	r0, r6, #1
   11a84:	movcc	r0, #0
   11a88:	bl	11450 <exit@plt>
   11a8c:	ldr	r1, [pc, #812]	; 11dc0 <close@plt+0x814>
   11a90:	mov	r0, fp
   11a94:	add	r1, pc, r1
   11a98:	b	118fc <close@plt+0x350>
   11a9c:	ldr	r1, [pc, #800]	; 11dc4 <close@plt+0x818>
   11aa0:	ldr	r0, [sp, #20]
   11aa4:	add	r1, pc, r1
   11aa8:	bl	11564 <fopen64@plt>
   11aac:	subs	r8, r0, #0
   11ab0:	bne	119b0 <close@plt+0x404>
   11ab4:	bl	1148c <__errno_location@plt>
   11ab8:	ldr	r4, [r0]
   11abc:	ldr	r0, [sp, #20]
   11ac0:	bl	1809c <close_stdout@@Base+0x5858>
   11ac4:	ldr	r2, [pc, #764]	; 11dc8 <close@plt+0x81c>
   11ac8:	mov	r1, r4
   11acc:	add	r2, pc, r2
   11ad0:	mov	r3, r0
   11ad4:	mov	r0, #1
   11ad8:	bl	113a8 <error@plt>
   11adc:	b	119b0 <close@plt+0x404>
   11ae0:	ldr	r0, [sp, #24]
   11ae4:	eor	r5, r5, #1
   11ae8:	eor	r2, r0, #1
   11aec:	tst	r5, r2
   11af0:	beq	11b94 <close@plt+0x5e8>
   11af4:	ldr	r3, [fp]
   11af8:	cmp	r9, r3
   11afc:	ble	11ccc <close@plt+0x720>
   11b00:	ldr	r8, [r8, r3, lsl #2]
   11b04:	add	r7, sp, #56	; 0x38
   11b08:	mov	r1, #1
   11b0c:	mov	r2, #14
   11b10:	str	r1, [sp, #24]
   11b14:	mov	r0, r7
   11b18:	mov	r1, r8
   11b1c:	str	ip, [sp, #12]
   11b20:	str	r8, [sp, #32]
   11b24:	bl	16534 <close_stdout@@Base+0x3cf0>
   11b28:	ldr	ip, [sp, #12]
   11b2c:	str	ip, [sp, #60]	; 0x3c
   11b30:	mov	r4, r0
   11b34:	cmp	r4, #0
   11b38:	bne	11b70 <close@plt+0x5c4>
   11b3c:	ldr	r1, [pc, #648]	; 11dcc <close@plt+0x820>
   11b40:	mov	r2, #5
   11b44:	mov	r0, r4
   11b48:	add	r1, pc, r1
   11b4c:	bl	1130c <dcgettext@plt>
   11b50:	mov	r5, r0
   11b54:	ldr	r0, [sp, #32]
   11b58:	bl	1809c <close_stdout@@Base+0x5858>
   11b5c:	mov	r2, r5
   11b60:	mov	r1, r4
   11b64:	mov	r3, r0
   11b68:	mov	r0, #1
   11b6c:	bl	113a8 <error@plt>
   11b70:	ldr	r2, [sp, #24]
   11b74:	cmp	r2, #0
   11b78:	bne	11c68 <close@plt+0x6bc>
   11b7c:	mov	r6, #1
   11b80:	mov	r0, sl
   11b84:	ldm	r7, {r1, r2}
   11b88:	bl	11f1c <close@plt+0x970>
   11b8c:	and	r6, r0, r6
   11b90:	b	11a80 <close@plt+0x4d4>
   11b94:	cmp	r3, #0
   11b98:	beq	11d28 <close@plt+0x77c>
   11b9c:	mov	r0, #3
   11ba0:	mov	r1, r6
   11ba4:	add	r2, sp, #64	; 0x40
   11ba8:	bl	1157c <__xstat64@plt>
   11bac:	cmp	r0, #0
   11bb0:	beq	11bd0 <close@plt+0x624>
   11bb4:	bl	1148c <__errno_location@plt>
   11bb8:	ldr	r2, [pc, #528]	; 11dd0 <close@plt+0x824>
   11bbc:	mov	r3, r6
   11bc0:	add	r2, pc, r2
   11bc4:	ldr	r1, [r0]
   11bc8:	mov	r0, #1
   11bcc:	bl	113a8 <error@plt>
   11bd0:	ldr	r2, [sp, #148]	; 0x94
   11bd4:	add	r7, sp, #56	; 0x38
   11bd8:	ldr	r3, [sp, #144]	; 0x90
   11bdc:	str	r2, [sp, #60]	; 0x3c
   11be0:	str	r3, [sp, #56]	; 0x38
   11be4:	b	11b70 <close@plt+0x5c4>
   11be8:	bl	1148c <__errno_location@plt>
   11bec:	ldr	r4, [r0]
   11bf0:	ldr	r0, [sp, #20]
   11bf4:	bl	1809c <close_stdout@@Base+0x5858>
   11bf8:	ldr	r2, [pc, #468]	; 11dd4 <close@plt+0x828>
   11bfc:	mov	r1, r4
   11c00:	add	r2, pc, r2
   11c04:	mov	r3, r0
   11c08:	mov	r0, #1
   11c0c:	bl	113a8 <error@plt>
   11c10:	b	11a78 <close@plt+0x4cc>
   11c14:	cmp	sl, #0
   11c18:	beq	11c50 <close@plt+0x6a4>
   11c1c:	ldr	r1, [pc, #436]	; 11dd8 <close@plt+0x82c>
   11c20:	mov	r2, #5
   11c24:	mov	r0, r7
   11c28:	str	r3, [sp, #16]
   11c2c:	add	r1, pc, r1
   11c30:	str	ip, [sp, #12]
   11c34:	bl	1130c <dcgettext@plt>
   11c38:	mov	r1, r7
   11c3c:	mov	r2, r0
   11c40:	mov	r0, #1
   11c44:	bl	113a8 <error@plt>
   11c48:	ldr	ip, [sp, #12]
   11c4c:	ldr	r3, [sp, #16]
   11c50:	ldr	r2, [fp]
   11c54:	add	r1, r2, #1
   11c58:	str	r1, [fp]
   11c5c:	ldr	sl, [r8, r2, lsl #2]
   11c60:	add	sl, sl, #1
   11c64:	b	11964 <close@plt+0x3b8>
   11c68:	mov	r0, r7
   11c6c:	bl	180a8 <close_stdout@@Base+0x5864>
   11c70:	cmp	r0, #0
   11c74:	beq	11b7c <close@plt+0x5d0>
   11c78:	bl	1148c <__errno_location@plt>
   11c7c:	ldr	r1, [pc, #344]	; 11ddc <close@plt+0x830>
   11c80:	mov	r6, #0
   11c84:	mov	r2, #5
   11c88:	add	r1, pc, r1
   11c8c:	ldr	r4, [r0]
   11c90:	mov	r0, r6
   11c94:	bl	1130c <dcgettext@plt>
   11c98:	mov	r1, r4
   11c9c:	mov	r2, r0
   11ca0:	mov	r0, r6
   11ca4:	bl	113a8 <error@plt>
   11ca8:	b	11b80 <close@plt+0x5d4>
   11cac:	ldr	r1, [pc, #300]	; 11de0 <close@plt+0x834>
   11cb0:	mov	r0, r7
   11cb4:	mov	r2, #5
   11cb8:	add	r1, pc, r1
   11cbc:	bl	1130c <dcgettext@plt>
   11cc0:	ldr	r3, [fp]
   11cc4:	mov	r4, r0
   11cc8:	b	11864 <close@plt+0x2b8>
   11ccc:	add	r7, sp, #56	; 0x38
   11cd0:	mov	r0, r7
   11cd4:	bl	1442c <close_stdout@@Base+0x1be8>
   11cd8:	b	11b7c <close@plt+0x5d0>
   11cdc:	mov	r0, #108	; 0x6c
   11ce0:	movt	r0, #2
   11ce4:	str	r3, [sp, #16]
   11ce8:	str	ip, [sp, #12]
   11cec:	bl	1154c <nl_langinfo@plt>
   11cf0:	ldr	r3, [sp, #16]
   11cf4:	ldr	ip, [sp, #12]
   11cf8:	mov	sl, r0
   11cfc:	ldrb	r0, [r0]
   11d00:	cmp	r0, #0
   11d04:	bne	1196c <close@plt+0x3c0>
   11d08:	ldr	r1, [pc, #212]	; 11de4 <close@plt+0x838>
   11d0c:	mov	r2, #2
   11d10:	add	r1, pc, r1
   11d14:	bl	1130c <dcgettext@plt>
   11d18:	ldr	ip, [sp, #12]
   11d1c:	ldr	r3, [sp, #16]
   11d20:	mov	sl, r0
   11d24:	b	1196c <close@plt+0x3c0>
   11d28:	ldr	r2, [sp, #32]
   11d2c:	add	r7, sp, #56	; 0x38
   11d30:	ldr	r0, [sp, #28]
   11d34:	cmp	r2, #0
   11d38:	moveq	r2, r0
   11d3c:	str	r2, [sp, #32]
   11d40:	ldr	r1, [sp, #32]
   11d44:	mov	r2, r3
   11d48:	mov	r0, r7
   11d4c:	bl	15b18 <close_stdout@@Base+0x32d4>
   11d50:	mov	r4, r0
   11d54:	b	11b34 <close@plt+0x588>
   11d58:	andeq	fp, r1, r8, lsr #20
   11d5c:	andeq	r0, r0, r0, lsr r1
   11d60:	andeq	r8, r0, r8, ror #11
   11d64:	andeq	fp, r1, ip, asr #2
   11d68:	strdeq	r9, [r0], -r4
   11d6c:	andeq	r9, r0, ip, lsr #16
   11d70:	andeq	r9, r0, r4, ror #17
   11d74:	andeq	r0, r0, r4, asr #2
   11d78:	andeq	r8, r0, r8, ror r5
   11d7c:	andeq	r0, r0, ip, ror #2
   11d80:	andeq	r9, r0, ip, ror #16
   11d84:	andeq	r0, r0, r0, asr #2
   11d88:	strdeq	r9, [r0], -r0
   11d8c:	ldrdeq	r9, [r0], -r0
   11d90:	andeq	r9, r0, r0, lsl #15
   11d94:	andeq	r0, r0, r4, asr r1
   11d98:	andeq	r0, r0, r8, lsr r1
   11d9c:	andeq	r9, r0, r8, asr #14
   11da0:	andeq	r9, r0, r0, lsr r7
   11da4:	andeq	r9, r0, r8, lsr #12
   11da8:	andeq	r9, r0, r8, asr #15
   11dac:	muleq	r0, ip, r6
   11db0:	andeq	r0, r0, r4, lsr r1
   11db4:	andeq	r9, r0, r0, asr #14
   11db8:	andeq	r0, r0, r0, asr r1
   11dbc:	andeq	r9, r0, ip, lsr #14
   11dc0:	andeq	r9, r0, r4, asr #10
   11dc4:	andeq	r9, r0, r4, asr #12
   11dc8:	andeq	r9, r0, r0, asr #14
   11dcc:	andeq	r9, r0, r4, lsr #11
   11dd0:	andeq	r9, r0, ip, asr #12
   11dd4:	andeq	r9, r0, ip, lsl #12
   11dd8:	andeq	r9, r0, r4, asr #6
   11ddc:	andeq	r9, r0, r4, ror r4
   11de0:	andeq	r9, r0, r4, ror r3
   11de4:			; <UNDEFINED> instruction: 0x000093b0
   11de8:	mov	fp, #0
   11dec:	mov	lr, #0
   11df0:	pop	{r1}		; (ldr r1, [sp], #4)
   11df4:	mov	r2, sp
   11df8:	push	{r2}		; (str r2, [sp, #-4]!)
   11dfc:	push	{r0}		; (str r0, [sp, #-4]!)
   11e00:	ldr	ip, [pc, #16]	; 11e18 <close@plt+0x86c>
   11e04:	push	{ip}		; (str ip, [sp, #-4]!)
   11e08:	ldr	r0, [pc, #12]	; 11e1c <close@plt+0x870>
   11e0c:	ldr	r3, [pc, #12]	; 11e20 <close@plt+0x874>
   11e10:	bl	113e4 <__libc_start_main@plt>
   11e14:	bl	115a0 <abort@plt>
   11e18:	muleq	r1, ip, fp
   11e1c:			; <UNDEFINED> instruction: 0x000115b8
   11e20:	andeq	r9, r1, r8, lsr fp
   11e24:	ldr	r3, [pc, #20]	; 11e40 <close@plt+0x894>
   11e28:	ldr	r2, [pc, #20]	; 11e44 <close@plt+0x898>
   11e2c:	add	r3, pc, r3
   11e30:	ldr	r2, [r3, r2]
   11e34:	cmp	r2, #0
   11e38:	bxeq	lr
   11e3c:	b	1142c <__gmon_start__@plt>
   11e40:	andeq	fp, r1, ip, asr #3
   11e44:	andeq	r0, r0, r8, asr #2
   11e48:	push	{r3, lr}
   11e4c:	movw	r0, #53696	; 0xd1c0
   11e50:	ldr	r3, [pc, #36]	; 11e7c <close@plt+0x8d0>
   11e54:	movt	r0, #2
   11e58:	rsb	r3, r0, r3
   11e5c:	cmp	r3, #6
   11e60:	popls	{r3, pc}
   11e64:	movw	r3, #0
   11e68:	movt	r3, #0
   11e6c:	cmp	r3, #0
   11e70:	popeq	{r3, pc}
   11e74:	blx	r3
   11e78:	pop	{r3, pc}
   11e7c:	andeq	sp, r2, r3, asr #3
   11e80:	push	{r3, lr}
   11e84:	movw	r0, #53696	; 0xd1c0
   11e88:	movw	r3, #53696	; 0xd1c0
   11e8c:	movt	r0, #2
   11e90:	movt	r3, #2
   11e94:	rsb	r3, r0, r3
   11e98:	asr	r3, r3, #2
   11e9c:	add	r3, r3, r3, lsr #31
   11ea0:	asrs	r1, r3, #1
   11ea4:	popeq	{r3, pc}
   11ea8:	movw	r2, #0
   11eac:	movt	r2, #0
   11eb0:	cmp	r2, #0
   11eb4:	popeq	{r3, pc}
   11eb8:	blx	r2
   11ebc:	pop	{r3, pc}
   11ec0:	push	{r4, lr}
   11ec4:	movw	r4, #53696	; 0xd1c0
   11ec8:	movt	r4, #2
   11ecc:	ldrb	r3, [r4]
   11ed0:	cmp	r3, #0
   11ed4:	popne	{r4, pc}
   11ed8:	bl	11e48 <close@plt+0x89c>
   11edc:	mov	r3, #1
   11ee0:	strb	r3, [r4]
   11ee4:	pop	{r4, pc}
   11ee8:	movw	r0, #51020	; 0xc74c
   11eec:	movt	r0, #2
   11ef0:	push	{r3, lr}
   11ef4:	ldr	r3, [r0]
   11ef8:	cmp	r3, #0
   11efc:	beq	11f14 <close@plt+0x968>
   11f00:	movw	r3, #0
   11f04:	movt	r3, #0
   11f08:	cmp	r3, #0
   11f0c:	beq	11f14 <close@plt+0x968>
   11f10:	blx	r3
   11f14:	pop	{r3, lr}
   11f18:	b	11e80 <close@plt+0x8d4>
   11f1c:	push	{r4, r5, r6, r7, lr}
   11f20:	sub	sp, sp, #52	; 0x34
   11f24:	ldr	r4, [pc, #296]	; 12054 <close@plt+0xaa8>
   11f28:	mov	r5, r0
   11f2c:	ldr	ip, [pc, #292]	; 12058 <close@plt+0xaac>
   11f30:	add	r0, sp, #8
   11f34:	add	r4, pc, r4
   11f38:	stm	r0, {r1, r2}
   11f3c:	ldr	r6, [r4, ip]
   11f40:	ldr	r3, [r6]
   11f44:	str	r3, [sp, #44]	; 0x2c
   11f48:	bl	11408 <localtime@plt>
   11f4c:	subs	r7, r0, #0
   11f50:	beq	12004 <close@plt+0xa58>
   11f54:	ldr	r3, [pc, #256]	; 1205c <close@plt+0xab0>
   11f58:	add	r3, pc, r3
   11f5c:	cmp	r5, r3
   11f60:	beq	11ff0 <close@plt+0xa44>
   11f64:	ldr	ip, [pc, #244]	; 12060 <close@plt+0xab4>
   11f68:	mov	r1, r5
   11f6c:	ldr	r0, [sp, #12]
   11f70:	mov	r2, r7
   11f74:	mov	r3, #0
   11f78:	ldr	r4, [r4, ip]
   11f7c:	str	r0, [sp]
   11f80:	ldr	r0, [r4]
   11f84:	bl	143f4 <close_stdout@@Base+0x1bb0>
   11f88:	ldr	r0, [r4]
   11f8c:	ldr	r3, [r0, #20]
   11f90:	ldr	r2, [r0, #24]
   11f94:	cmp	r3, r2
   11f98:	addcc	r1, r3, #1
   11f9c:	movcc	r2, #10
   11fa0:	strcc	r1, [r0, #20]
   11fa4:	strbcc	r2, [r3]
   11fa8:	bcs	12048 <close@plt+0xa9c>
   11fac:	ldr	r3, [pc, #176]	; 12064 <close@plt+0xab8>
   11fb0:	add	r3, pc, r3
   11fb4:	cmp	r5, r3
   11fb8:	movne	r0, #1
   11fbc:	beq	11fd8 <close@plt+0xa2c>
   11fc0:	ldr	r2, [sp, #44]	; 0x2c
   11fc4:	ldr	r3, [r6]
   11fc8:	cmp	r2, r3
   11fcc:	bne	12044 <close@plt+0xa98>
   11fd0:	add	sp, sp, #52	; 0x34
   11fd4:	pop	{r4, r5, r6, r7, pc}
   11fd8:	ldr	r1, [pc, #136]	; 12068 <close@plt+0xabc>
   11fdc:	mov	r0, #2
   11fe0:	add	r1, pc, r1
   11fe4:	bl	11528 <setlocale@plt>
   11fe8:	mov	r0, #1
   11fec:	b	11fc0 <close@plt+0xa14>
   11ff0:	ldr	r1, [pc, #116]	; 1206c <close@plt+0xac0>
   11ff4:	mov	r0, #2
   11ff8:	add	r1, pc, r1
   11ffc:	bl	11528 <setlocale@plt>
   12000:	b	11f64 <close@plt+0x9b8>
   12004:	ldr	r1, [pc, #100]	; 12070 <close@plt+0xac4>
   12008:	mov	r2, #5
   1200c:	add	r1, pc, r1
   12010:	bl	1130c <dcgettext@plt>
   12014:	add	r2, sp, #20
   12018:	mov	r4, r0
   1201c:	ldr	r0, [sp, #8]
   12020:	asr	r1, r0, #31
   12024:	bl	144a8 <close_stdout@@Base+0x1c64>
   12028:	mov	r1, r7
   1202c:	mov	r2, r4
   12030:	mov	r3, r0
   12034:	mov	r0, r7
   12038:	bl	113a8 <error@plt>
   1203c:	mov	r0, r7
   12040:	b	11fc0 <close@plt+0xa14>
   12044:	bl	11318 <__stack_chk_fail@plt>
   12048:	mov	r1, #10
   1204c:	bl	1151c <__overflow@plt>
   12050:	b	11fac <close@plt+0xa00>
   12054:	andeq	fp, r1, r4, asr #1
   12058:	andeq	r0, r0, r0, lsr r1
   1205c:	andeq	r7, r0, ip, ror ip
   12060:	andeq	r0, r0, r4, asr r1
   12064:	andeq	r7, r0, r4, lsr #24
   12068:	andeq	r8, r0, r0, asr #30
   1206c:	andeq	r7, r0, r4, lsr sp
   12070:	andeq	r7, r0, r8, lsl #26
   12074:	push	{r4, r5, r6, lr}
   12078:	subs	r4, r0, #0
   1207c:	ldr	r5, [pc, #908]	; 12410 <close@plt+0xe64>
   12080:	add	r5, pc, r5
   12084:	beq	120cc <close@plt+0xb20>
   12088:	ldr	r3, [pc, #900]	; 12414 <close@plt+0xe68>
   1208c:	mov	r2, #5
   12090:	ldr	r1, [pc, #896]	; 12418 <close@plt+0xe6c>
   12094:	mov	r0, #0
   12098:	ldr	r3, [r5, r3]
   1209c:	add	r1, pc, r1
   120a0:	ldr	r6, [r3]
   120a4:	bl	1130c <dcgettext@plt>
   120a8:	ldr	r3, [pc, #876]	; 1241c <close@plt+0xe70>
   120ac:	mov	r1, #1
   120b0:	ldr	r3, [r5, r3]
   120b4:	ldr	r3, [r3]
   120b8:	mov	r2, r0
   120bc:	mov	r0, r6
   120c0:	bl	114ec <__fprintf_chk@plt>
   120c4:	mov	r0, r4
   120c8:	bl	11450 <exit@plt>
   120cc:	ldr	r1, [pc, #844]	; 12420 <close@plt+0xe74>
   120d0:	mov	r2, #5
   120d4:	add	r1, pc, r1
   120d8:	bl	1130c <dcgettext@plt>
   120dc:	ldr	r3, [pc, #824]	; 1241c <close@plt+0xe70>
   120e0:	ldr	r6, [r5, r3]
   120e4:	ldr	r2, [r6]
   120e8:	mov	r3, r2
   120ec:	mov	r1, r0
   120f0:	mov	r0, #1
   120f4:	bl	114d4 <__printf_chk@plt>
   120f8:	ldr	r1, [pc, #804]	; 12424 <close@plt+0xe78>
   120fc:	mov	r2, #5
   12100:	mov	r0, r4
   12104:	add	r1, pc, r1
   12108:	bl	1130c <dcgettext@plt>
   1210c:	ldr	r3, [pc, #788]	; 12428 <close@plt+0xe7c>
   12110:	ldr	r5, [r5, r3]
   12114:	ldr	r1, [r5]
   12118:	bl	11270 <fputs_unlocked@plt>
   1211c:	ldr	r1, [pc, #776]	; 1242c <close@plt+0xe80>
   12120:	mov	r2, #5
   12124:	mov	r0, r4
   12128:	add	r1, pc, r1
   1212c:	bl	1130c <dcgettext@plt>
   12130:	ldr	r1, [r5]
   12134:	bl	11270 <fputs_unlocked@plt>
   12138:	ldr	r1, [pc, #752]	; 12430 <close@plt+0xe84>
   1213c:	mov	r2, #5
   12140:	mov	r0, r4
   12144:	add	r1, pc, r1
   12148:	bl	1130c <dcgettext@plt>
   1214c:	ldr	r1, [r5]
   12150:	bl	11270 <fputs_unlocked@plt>
   12154:	ldr	r1, [pc, #728]	; 12434 <close@plt+0xe88>
   12158:	mov	r2, #5
   1215c:	mov	r0, r4
   12160:	add	r1, pc, r1
   12164:	bl	1130c <dcgettext@plt>
   12168:	ldr	r1, [r5]
   1216c:	bl	11270 <fputs_unlocked@plt>
   12170:	ldr	r1, [pc, #704]	; 12438 <close@plt+0xe8c>
   12174:	mov	r2, #5
   12178:	mov	r0, r4
   1217c:	add	r1, pc, r1
   12180:	bl	1130c <dcgettext@plt>
   12184:	ldr	r1, [r5]
   12188:	bl	11270 <fputs_unlocked@plt>
   1218c:	ldr	r1, [pc, #680]	; 1243c <close@plt+0xe90>
   12190:	mov	r2, #5
   12194:	mov	r0, r4
   12198:	add	r1, pc, r1
   1219c:	bl	1130c <dcgettext@plt>
   121a0:	ldr	r1, [r5]
   121a4:	bl	11270 <fputs_unlocked@plt>
   121a8:	ldr	r1, [pc, #656]	; 12440 <close@plt+0xe94>
   121ac:	mov	r2, #5
   121b0:	mov	r0, r4
   121b4:	add	r1, pc, r1
   121b8:	bl	1130c <dcgettext@plt>
   121bc:	ldr	r1, [r5]
   121c0:	bl	11270 <fputs_unlocked@plt>
   121c4:	ldr	r1, [pc, #632]	; 12444 <close@plt+0xe98>
   121c8:	mov	r2, #5
   121cc:	mov	r0, r4
   121d0:	add	r1, pc, r1
   121d4:	bl	1130c <dcgettext@plt>
   121d8:	ldr	r1, [r5]
   121dc:	bl	11270 <fputs_unlocked@plt>
   121e0:	ldr	r1, [pc, #608]	; 12448 <close@plt+0xe9c>
   121e4:	mov	r2, #5
   121e8:	mov	r0, r4
   121ec:	add	r1, pc, r1
   121f0:	bl	1130c <dcgettext@plt>
   121f4:	ldr	r1, [r5]
   121f8:	bl	11270 <fputs_unlocked@plt>
   121fc:	ldr	r1, [pc, #584]	; 1244c <close@plt+0xea0>
   12200:	mov	r2, #5
   12204:	mov	r0, r4
   12208:	add	r1, pc, r1
   1220c:	bl	1130c <dcgettext@plt>
   12210:	ldr	r1, [r5]
   12214:	bl	11270 <fputs_unlocked@plt>
   12218:	ldr	r1, [pc, #560]	; 12450 <close@plt+0xea4>
   1221c:	mov	r2, #5
   12220:	mov	r0, r4
   12224:	add	r1, pc, r1
   12228:	bl	1130c <dcgettext@plt>
   1222c:	ldr	r1, [r5]
   12230:	bl	11270 <fputs_unlocked@plt>
   12234:	ldr	r1, [pc, #536]	; 12454 <close@plt+0xea8>
   12238:	mov	r2, #5
   1223c:	mov	r0, r4
   12240:	add	r1, pc, r1
   12244:	bl	1130c <dcgettext@plt>
   12248:	ldr	r1, [r5]
   1224c:	bl	11270 <fputs_unlocked@plt>
   12250:	ldr	r1, [pc, #512]	; 12458 <close@plt+0xeac>
   12254:	mov	r2, #5
   12258:	mov	r0, r4
   1225c:	add	r1, pc, r1
   12260:	bl	1130c <dcgettext@plt>
   12264:	ldr	r1, [r5]
   12268:	bl	11270 <fputs_unlocked@plt>
   1226c:	ldr	r1, [pc, #488]	; 1245c <close@plt+0xeb0>
   12270:	mov	r2, #5
   12274:	mov	r0, r4
   12278:	add	r1, pc, r1
   1227c:	bl	1130c <dcgettext@plt>
   12280:	ldr	r1, [r5]
   12284:	bl	11270 <fputs_unlocked@plt>
   12288:	ldr	r1, [pc, #464]	; 12460 <close@plt+0xeb4>
   1228c:	mov	r2, #5
   12290:	mov	r0, r4
   12294:	add	r1, pc, r1
   12298:	bl	1130c <dcgettext@plt>
   1229c:	ldr	r1, [r5]
   122a0:	bl	11270 <fputs_unlocked@plt>
   122a4:	ldr	r1, [pc, #440]	; 12464 <close@plt+0xeb8>
   122a8:	mov	r2, #5
   122ac:	mov	r0, r4
   122b0:	add	r1, pc, r1
   122b4:	bl	1130c <dcgettext@plt>
   122b8:	ldr	r1, [r5]
   122bc:	bl	11270 <fputs_unlocked@plt>
   122c0:	ldr	r1, [pc, #416]	; 12468 <close@plt+0xebc>
   122c4:	mov	r2, #5
   122c8:	mov	r0, r4
   122cc:	add	r1, pc, r1
   122d0:	bl	1130c <dcgettext@plt>
   122d4:	ldr	r1, [r5]
   122d8:	bl	11270 <fputs_unlocked@plt>
   122dc:	ldr	r1, [pc, #392]	; 1246c <close@plt+0xec0>
   122e0:	mov	r2, #5
   122e4:	mov	r0, r4
   122e8:	add	r1, pc, r1
   122ec:	bl	1130c <dcgettext@plt>
   122f0:	ldr	r1, [r5]
   122f4:	bl	11270 <fputs_unlocked@plt>
   122f8:	ldr	r1, [pc, #368]	; 12470 <close@plt+0xec4>
   122fc:	mov	r2, #5
   12300:	mov	r0, r4
   12304:	add	r1, pc, r1
   12308:	bl	1130c <dcgettext@plt>
   1230c:	ldr	r1, [r5]
   12310:	bl	11270 <fputs_unlocked@plt>
   12314:	ldr	r1, [pc, #344]	; 12474 <close@plt+0xec8>
   12318:	mov	r2, #5
   1231c:	mov	r0, r4
   12320:	add	r1, pc, r1
   12324:	bl	1130c <dcgettext@plt>
   12328:	ldr	r1, [r5]
   1232c:	bl	11270 <fputs_unlocked@plt>
   12330:	ldr	r1, [pc, #320]	; 12478 <close@plt+0xecc>
   12334:	mov	r2, #5
   12338:	mov	r0, r4
   1233c:	add	r1, pc, r1
   12340:	bl	1130c <dcgettext@plt>
   12344:	ldr	r1, [r5]
   12348:	bl	11270 <fputs_unlocked@plt>
   1234c:	ldr	r1, [pc, #296]	; 1247c <close@plt+0xed0>
   12350:	mov	r2, #5
   12354:	mov	r0, r4
   12358:	add	r1, pc, r1
   1235c:	bl	1130c <dcgettext@plt>
   12360:	ldr	r2, [pc, #280]	; 12480 <close@plt+0xed4>
   12364:	ldr	r3, [pc, #280]	; 12484 <close@plt+0xed8>
   12368:	add	r2, pc, r2
   1236c:	add	r3, pc, r3
   12370:	mov	r1, r0
   12374:	mov	r0, #1
   12378:	bl	114d4 <__printf_chk@plt>
   1237c:	mov	r0, #5
   12380:	mov	r1, r4
   12384:	bl	11528 <setlocale@plt>
   12388:	cmp	r0, #0
   1238c:	beq	123a8 <close@plt+0xdfc>
   12390:	ldr	r1, [pc, #240]	; 12488 <close@plt+0xedc>
   12394:	mov	r2, #3
   12398:	add	r1, pc, r1
   1239c:	bl	11594 <strncmp@plt>
   123a0:	cmp	r0, #0
   123a4:	bne	123dc <close@plt+0xe30>
   123a8:	ldr	r1, [pc, #220]	; 1248c <close@plt+0xee0>
   123ac:	mov	r2, #5
   123b0:	mov	r0, #0
   123b4:	add	r1, pc, r1
   123b8:	bl	1130c <dcgettext@plt>
   123bc:	mov	r5, r0
   123c0:	ldr	r0, [r6]
   123c4:	bl	1295c <close_stdout@@Base+0x118>
   123c8:	mov	r1, r5
   123cc:	mov	r2, r0
   123d0:	mov	r0, #1
   123d4:	bl	114d4 <__printf_chk@plt>
   123d8:	b	120c4 <close@plt+0xb18>
   123dc:	ldr	r1, [pc, #172]	; 12490 <close@plt+0xee4>
   123e0:	mov	r2, #5
   123e4:	mov	r0, r4
   123e8:	add	r1, pc, r1
   123ec:	bl	1130c <dcgettext@plt>
   123f0:	mov	r5, r0
   123f4:	ldr	r0, [r6]
   123f8:	bl	1295c <close_stdout@@Base+0x118>
   123fc:	mov	r1, r5
   12400:	mov	r2, r0
   12404:	mov	r0, #1
   12408:	bl	114d4 <__printf_chk@plt>
   1240c:	b	123a8 <close@plt+0xdfc>
   12410:	andeq	sl, r1, r8, ror pc
   12414:	andeq	r0, r0, ip, lsr r1
   12418:	muleq	r0, r4, ip
   1241c:	andeq	r0, r0, r0, ror #2
   12420:	andeq	r7, r0, r4, lsl #25
   12424:			; <UNDEFINED> instruction: 0x00007cb0
   12428:	andeq	r0, r0, r4, asr r1
   1242c:	ldrdeq	r7, [r0], -r4
   12430:	andeq	r7, r0, r4, lsl #26
   12434:	muleq	r0, ip, lr
   12438:	andeq	r7, r0, r4, asr pc
   1243c:	andeq	r8, r0, r8, lsl r1
   12440:	andeq	r8, r0, ip, lsr #2
   12444:	andeq	r8, r0, r8, asr #2
   12448:			; <UNDEFINED> instruction: 0x000081b0
   1244c:	andeq	r8, r0, r8, ror #4
   12450:	strdeq	r8, [r0], -ip
   12454:	andeq	r8, r0, r8, lsl #7
   12458:	andeq	r8, r0, r8, asr #7
   1245c:	andeq	r8, r0, ip, lsr r4
   12460:	andeq	r8, r0, r0, asr r5
   12464:	andeq	r8, r0, r0, lsr #11
   12468:	andeq	r8, r0, ip, ror r6
   1246c:	andeq	r8, r0, r0, lsl #14
   12470:	andeq	r8, r0, ip, lsr #16
   12474:	andeq	r8, r0, r4, ror #17
   12478:			; <UNDEFINED> instruction: 0x000089b8
   1247c:	andeq	r8, r0, ip, ror #21
   12480:	strdeq	r8, [r0], -r4
   12484:	andeq	r8, r0, r0, lsl #22
   12488:	strdeq	r8, [r0], -ip
   1248c:	andeq	r8, r0, ip, lsr #22
   12490:			; <UNDEFINED> instruction: 0x00008ab0
   12494:	mov	r0, #1
   12498:	b	12074 <close@plt+0xac8>
   1249c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124a0:	sub	sp, sp, #12
   124a4:	mov	r7, r1
   124a8:	mov	r6, r3
   124ac:	str	r2, [sp]
   124b0:	mov	sl, r0
   124b4:	bl	1145c <strlen@plt>
   124b8:	ldr	fp, [r7]
   124bc:	cmp	fp, #0
   124c0:	mov	r8, r0
   124c4:	beq	12588 <close@plt+0xfdc>
   124c8:	mov	r3, #0
   124cc:	ldr	r4, [sp]
   124d0:	str	r3, [sp, #4]
   124d4:	mov	r5, r3
   124d8:	mvn	r9, #0
   124dc:	b	12508 <close@plt+0xf5c>
   124e0:	bl	11300 <memcmp@plt>
   124e4:	ldr	r3, [sp, #4]
   124e8:	cmp	r0, #0
   124ec:	movne	r3, #1
   124f0:	str	r3, [sp, #4]
   124f4:	ldr	fp, [r7, #4]!
   124f8:	add	r5, r5, #1
   124fc:	add	r4, r4, r6
   12500:	cmp	fp, #0
   12504:	beq	12564 <close@plt+0xfb8>
   12508:	mov	r0, fp
   1250c:	mov	r1, sl
   12510:	mov	r2, r8
   12514:	bl	11594 <strncmp@plt>
   12518:	cmp	r0, #0
   1251c:	mov	r0, fp
   12520:	bne	124f4 <close@plt+0xf48>
   12524:	bl	1145c <strlen@plt>
   12528:	ldr	r3, [sp]
   1252c:	mov	r1, r4
   12530:	mov	r2, r6
   12534:	cmp	r0, r8
   12538:	mla	r0, r6, r9, r3
   1253c:	beq	1257c <close@plt+0xfd0>
   12540:	cmn	r9, #1
   12544:	moveq	r9, r5
   12548:	beq	124f4 <close@plt+0xf48>
   1254c:	ldr	r3, [sp]
   12550:	cmp	r3, #0
   12554:	bne	124e0 <close@plt+0xf34>
   12558:	mov	r3, #1
   1255c:	str	r3, [sp, #4]
   12560:	b	124f4 <close@plt+0xf48>
   12564:	ldr	r3, [sp, #4]
   12568:	cmp	r3, #0
   1256c:	bne	12590 <close@plt+0xfe4>
   12570:	mov	r0, r9
   12574:	add	sp, sp, #12
   12578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1257c:	mov	r0, r5
   12580:	add	sp, sp, #12
   12584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12588:	mvn	r9, #0
   1258c:	b	12570 <close@plt+0xfc4>
   12590:	mvn	r0, #1
   12594:	b	12574 <close@plt+0xfc8>
   12598:	cmn	r2, #1
   1259c:	push	{r4, r5, r6, lr}
   125a0:	mov	r4, r0
   125a4:	sub	sp, sp, #8
   125a8:	mov	r5, r1
   125ac:	mov	r0, #0
   125b0:	beq	12608 <close@plt+0x105c>
   125b4:	ldr	r1, [pc, #100]	; 12620 <close@plt+0x1074>
   125b8:	mov	r2, #5
   125bc:	add	r1, pc, r1
   125c0:	bl	1130c <dcgettext@plt>
   125c4:	mov	r6, r0
   125c8:	mov	r2, r5
   125cc:	mov	r1, #6
   125d0:	mov	r0, #0
   125d4:	bl	17d94 <close_stdout@@Base+0x5550>
   125d8:	mov	r1, r4
   125dc:	mov	r5, r0
   125e0:	mov	r0, #1
   125e4:	bl	18094 <close_stdout@@Base+0x5850>
   125e8:	mov	r3, r5
   125ec:	mov	r2, r6
   125f0:	str	r0, [sp]
   125f4:	mov	r0, #0
   125f8:	mov	r1, r0
   125fc:	bl	113a8 <error@plt>
   12600:	add	sp, sp, #8
   12604:	pop	{r4, r5, r6, pc}
   12608:	ldr	r1, [pc, #20]	; 12624 <close@plt+0x1078>
   1260c:	mov	r2, #5
   12610:	add	r1, pc, r1
   12614:	bl	1130c <dcgettext@plt>
   12618:	mov	r6, r0
   1261c:	b	125c8 <close@plt+0x101c>
   12620:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   12624:	andeq	r8, r0, r8, lsl #23
   12628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1262c:	mov	r4, r1
   12630:	ldr	r1, [pc, #276]	; 1274c <close@plt+0x11a0>
   12634:	sub	sp, sp, #12
   12638:	mov	r7, r0
   1263c:	mov	r6, r2
   12640:	add	r1, pc, r1
   12644:	mov	r2, #5
   12648:	mov	r0, #0
   1264c:	bl	1130c <dcgettext@plt>
   12650:	ldr	r3, [pc, #248]	; 12750 <close@plt+0x11a4>
   12654:	ldr	r2, [pc, #248]	; 12754 <close@plt+0x11a8>
   12658:	add	r3, pc, r3
   1265c:	ldr	r9, [r3, r2]
   12660:	ldr	r1, [r9]
   12664:	bl	11270 <fputs_unlocked@plt>
   12668:	ldr	fp, [r7]
   1266c:	cmp	fp, #0
   12670:	beq	12710 <close@plt+0x1164>
   12674:	ldr	sl, [pc, #220]	; 12758 <close@plt+0x11ac>
   12678:	mov	r8, #0
   1267c:	ldr	r3, [pc, #216]	; 1275c <close@plt+0x11b0>
   12680:	mov	r5, r8
   12684:	add	sl, pc, sl
   12688:	add	r3, pc, r3
   1268c:	str	r3, [sp, #4]
   12690:	b	126cc <close@plt+0x1120>
   12694:	mov	r0, fp
   12698:	ldr	fp, [r9]
   1269c:	bl	1809c <close_stdout@@Base+0x5858>
   126a0:	mov	r1, #1
   126a4:	mov	r2, sl
   126a8:	mov	r8, r4
   126ac:	mov	r3, r0
   126b0:	mov	r0, fp
   126b4:	bl	114ec <__fprintf_chk@plt>
   126b8:	ldr	fp, [r7, #4]!
   126bc:	add	r5, r5, #1
   126c0:	add	r4, r4, r6
   126c4:	cmp	fp, #0
   126c8:	beq	12710 <close@plt+0x1164>
   126cc:	cmp	r5, #0
   126d0:	mov	r1, r4
   126d4:	mov	r2, r6
   126d8:	mov	r0, r8
   126dc:	beq	12694 <close@plt+0x10e8>
   126e0:	bl	11300 <memcmp@plt>
   126e4:	cmp	r0, #0
   126e8:	bne	12694 <close@plt+0x10e8>
   126ec:	mov	r0, fp
   126f0:	ldr	fp, [r9]
   126f4:	bl	1809c <close_stdout@@Base+0x5858>
   126f8:	mov	r1, #1
   126fc:	ldr	r2, [sp, #4]
   12700:	mov	r3, r0
   12704:	mov	r0, fp
   12708:	bl	114ec <__fprintf_chk@plt>
   1270c:	b	126b8 <close@plt+0x110c>
   12710:	ldr	r0, [r9]
   12714:	ldr	r3, [r0, #20]
   12718:	ldr	r2, [r0, #24]
   1271c:	cmp	r3, r2
   12720:	bcs	1273c <close@plt+0x1190>
   12724:	add	r1, r3, #1
   12728:	mov	r2, #10
   1272c:	str	r1, [r0, #20]
   12730:	strb	r2, [r3]
   12734:	add	sp, sp, #12
   12738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1273c:	mov	r1, #10
   12740:	add	sp, sp, #12
   12744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12748:	b	1151c <__overflow@plt>
   1274c:	muleq	r0, r4, fp
   12750:	andeq	sl, r1, r0, lsr #19
   12754:	andeq	r0, r0, ip, lsr r1
   12758:	andeq	r8, r0, r8, ror #22
   1275c:	andeq	r8, r0, ip, ror #22
   12760:	push	{r4, r5, r6, r7, r8, lr}
   12764:	mov	r7, r1
   12768:	ldr	r4, [sp, #24]
   1276c:	mov	r1, r2
   12770:	mov	r6, r2
   12774:	mov	r5, r3
   12778:	mov	r2, r3
   1277c:	mov	r8, r0
   12780:	mov	r3, r4
   12784:	mov	r0, r7
   12788:	bl	1249c <close@plt+0xef0>
   1278c:	subs	r2, r0, #0
   12790:	blt	1279c <close@plt+0x11f0>
   12794:	mov	r0, r2
   12798:	pop	{r4, r5, r6, r7, r8, pc}
   1279c:	mov	r0, r8
   127a0:	mov	r1, r7
   127a4:	bl	12598 <close@plt+0xfec>
   127a8:	mov	r0, r6
   127ac:	mov	r1, r5
   127b0:	mov	r2, r4
   127b4:	bl	12628 <close@plt+0x107c>
   127b8:	ldr	r3, [sp, #28]
   127bc:	blx	r3
   127c0:	mvn	r0, #0
   127c4:	pop	{r4, r5, r6, r7, r8, pc}
   127c8:	push	{r4, r5, r6, r7, r8, lr}
   127cc:	mov	r8, r0
   127d0:	ldr	r5, [r1]
   127d4:	mov	r6, r3
   127d8:	cmp	r5, #0
   127dc:	beq	12814 <close@plt+0x1268>
   127e0:	mov	r4, r2
   127e4:	mov	r7, r1
   127e8:	b	127f8 <close@plt+0x124c>
   127ec:	ldr	r5, [r7, #4]!
   127f0:	cmp	r5, #0
   127f4:	beq	12814 <close@plt+0x1268>
   127f8:	mov	r1, r4
   127fc:	mov	r0, r8
   12800:	mov	r2, r6
   12804:	add	r4, r4, r6
   12808:	bl	11300 <memcmp@plt>
   1280c:	cmp	r0, #0
   12810:	bne	127ec <close@plt+0x1240>
   12814:	mov	r0, r5
   12818:	pop	{r4, r5, r6, r7, r8, pc}
   1281c:	ldr	r3, [pc, #8]	; 1282c <close@plt+0x1280>
   12820:	add	r3, pc, r3
   12824:	str	r0, [r3]
   12828:	bx	lr
   1282c:	muleq	r1, ip, r9
   12830:	ldr	r3, [pc, #8]	; 12840 <close@plt+0x1294>
   12834:	add	r3, pc, r3
   12838:	strb	r0, [r3, #4]
   1283c:	bx	lr
   12840:	andeq	sl, r1, r8, lsl #19

00012844 <close_stdout@@Base>:
   12844:	push	{r4, r5, r6, r7, lr}
   12848:	sub	sp, sp, #12
   1284c:	ldr	r4, [pc, #228]	; 12938 <close_stdout@@Base+0xf4>
   12850:	ldr	r3, [pc, #228]	; 1293c <close_stdout@@Base+0xf8>
   12854:	add	r4, pc, r4
   12858:	ldr	r3, [r4, r3]
   1285c:	ldr	r0, [r3]
   12860:	bl	18b00 <close_stdout@@Base+0x62bc>
   12864:	cmp	r0, #0
   12868:	beq	12890 <close_stdout@@Base+0x4c>
   1286c:	ldr	r3, [pc, #204]	; 12940 <close_stdout@@Base+0xfc>
   12870:	add	r3, pc, r3
   12874:	ldrb	r3, [r3, #4]
   12878:	cmp	r3, #0
   1287c:	beq	128b0 <close_stdout@@Base+0x6c>
   12880:	bl	1148c <__errno_location@plt>
   12884:	ldr	r3, [r0]
   12888:	cmp	r3, #32
   1288c:	bne	128b0 <close_stdout@@Base+0x6c>
   12890:	ldr	r3, [pc, #172]	; 12944 <close_stdout@@Base+0x100>
   12894:	ldr	r3, [r4, r3]
   12898:	ldr	r0, [r3]
   1289c:	bl	18b00 <close_stdout@@Base+0x62bc>
   128a0:	cmp	r0, #0
   128a4:	bne	12904 <close_stdout@@Base+0xc0>
   128a8:	add	sp, sp, #12
   128ac:	pop	{r4, r5, r6, r7, pc}
   128b0:	ldr	r1, [pc, #144]	; 12948 <close_stdout@@Base+0x104>
   128b4:	mov	r0, #0
   128b8:	mov	r2, #5
   128bc:	add	r1, pc, r1
   128c0:	bl	1130c <dcgettext@plt>
   128c4:	ldr	r3, [pc, #128]	; 1294c <close_stdout@@Base+0x108>
   128c8:	ldr	r5, [pc, r3]
   128cc:	cmp	r5, #0
   128d0:	mov	r6, r0
   128d4:	beq	12914 <close_stdout@@Base+0xd0>
   128d8:	bl	1148c <__errno_location@plt>
   128dc:	ldr	r7, [r0]
   128e0:	mov	r0, r5
   128e4:	bl	17f48 <close_stdout@@Base+0x5704>
   128e8:	ldr	r2, [pc, #96]	; 12950 <close_stdout@@Base+0x10c>
   128ec:	str	r6, [sp]
   128f0:	mov	r1, r7
   128f4:	add	r2, pc, r2
   128f8:	mov	r3, r0
   128fc:	mov	r0, #0
   12900:	bl	113a8 <error@plt>
   12904:	ldr	r3, [pc, #72]	; 12954 <close_stdout@@Base+0x110>
   12908:	ldr	r3, [r4, r3]
   1290c:	ldr	r0, [r3]
   12910:	bl	112d0 <_exit@plt>
   12914:	bl	1148c <__errno_location@plt>
   12918:	ldr	r2, [pc, #56]	; 12958 <close_stdout@@Base+0x114>
   1291c:	add	r2, pc, r2
   12920:	mov	r3, r0
   12924:	mov	r0, r5
   12928:	ldr	r1, [r3]
   1292c:	mov	r3, r6
   12930:	bl	113a8 <error@plt>
   12934:	b	12904 <close_stdout@@Base+0xc0>
   12938:	andeq	sl, r1, r4, lsr #15
   1293c:	andeq	r0, r0, r4, asr r1
   12940:	andeq	sl, r1, ip, asr #18
   12944:	andeq	r0, r0, ip, lsr r1
   12948:	andeq	r8, r0, r0, asr #18
   1294c:	strdeq	sl, [r1], -r4
   12950:	andeq	r8, r0, r4, lsl r9
   12954:	andeq	r0, r0, r8, asr r1
   12958:	strdeq	r8, [r0], -r0
   1295c:	ldrb	r3, [r0]
   12960:	cmp	r3, #47	; 0x2f
   12964:	bne	12980 <close_stdout@@Base+0x13c>
   12968:	add	r2, r0, #1
   1296c:	mov	r0, r2
   12970:	add	r2, r2, #1
   12974:	ldrb	r3, [r0]
   12978:	cmp	r3, #47	; 0x2f
   1297c:	beq	1296c <close_stdout@@Base+0x128>
   12980:	cmp	r3, #0
   12984:	bxeq	lr
   12988:	mov	r2, r0
   1298c:	mov	r1, #0
   12990:	cmp	r3, #47	; 0x2f
   12994:	moveq	r1, #1
   12998:	beq	129a8 <close_stdout@@Base+0x164>
   1299c:	cmp	r1, #0
   129a0:	movne	r0, r2
   129a4:	movne	r1, #0
   129a8:	ldrb	r3, [r2, #1]!
   129ac:	cmp	r3, #0
   129b0:	bne	12990 <close_stdout@@Base+0x14c>
   129b4:	bx	lr
   129b8:	push	{r4, lr}
   129bc:	mov	r4, r0
   129c0:	bl	1145c <strlen@plt>
   129c4:	cmp	r0, #1
   129c8:	popls	{r4, pc}
   129cc:	sub	r3, r0, #1
   129d0:	ldrb	r2, [r4, r3]
   129d4:	cmp	r2, #47	; 0x2f
   129d8:	popne	{r4, pc}
   129dc:	mov	r0, r3
   129e0:	cmp	r0, #1
   129e4:	sub	r3, r3, #1
   129e8:	beq	129fc <close_stdout@@Base+0x1b8>
   129ec:	ldrb	r2, [r4, r3]
   129f0:	cmp	r2, #47	; 0x2f
   129f4:	popne	{r4, pc}
   129f8:	b	129dc <close_stdout@@Base+0x198>
   129fc:	pop	{r4, pc}
   12a00:	cmp	r2, #0
   12a04:	push	{r3, r4, r5, r6, r7, lr}
   12a08:	mov	r6, r0
   12a0c:	mov	r5, r1
   12a10:	popeq	{r3, r4, r5, r6, r7, pc}
   12a14:	mov	r4, r2
   12a18:	bl	11414 <__ctype_tolower_loc@plt>
   12a1c:	mov	r7, r0
   12a20:	ldrb	r2, [r5], #1
   12a24:	mov	r1, r6
   12a28:	ldr	r3, [r7]
   12a2c:	ldr	r0, [r3, r2, lsl #2]
   12a30:	bl	11558 <fputc@plt>
   12a34:	subs	r4, r4, #1
   12a38:	bne	12a20 <close_stdout@@Base+0x1dc>
   12a3c:	pop	{r3, r4, r5, r6, r7, pc}
   12a40:	cmp	r2, #0
   12a44:	push	{r3, r4, r5, r6, r7, lr}
   12a48:	mov	r6, r0
   12a4c:	mov	r5, r1
   12a50:	popeq	{r3, r4, r5, r6, r7, pc}
   12a54:	mov	r4, r2
   12a58:	bl	11420 <__ctype_toupper_loc@plt>
   12a5c:	mov	r7, r0
   12a60:	ldrb	r2, [r5], #1
   12a64:	mov	r1, r6
   12a68:	ldr	r3, [r7]
   12a6c:	ldr	r0, [r3, r2, lsl #2]
   12a70:	bl	11558 <fputc@plt>
   12a74:	subs	r4, r4, #1
   12a78:	bne	12a60 <close_stdout@@Base+0x21c>
   12a7c:	pop	{r3, r4, r5, r6, r7, pc}
   12a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a84:	sub	sp, sp, #1152	; 0x480
   12a88:	ldr	ip, [pc, #3988]	; 13a24 <close_stdout@@Base+0x11e0>
   12a8c:	sub	sp, sp, #12
   12a90:	ldr	r6, [r3, #8]
   12a94:	mov	fp, r1
   12a98:	ldr	r5, [pc, #3976]	; 13a28 <close_stdout@@Base+0x11e4>
   12a9c:	add	ip, pc, ip
   12aa0:	str	r3, [sp, #16]
   12aa4:	cmp	r6, #12
   12aa8:	str	r6, [sp, #12]
   12aac:	mov	r3, ip
   12ab0:	str	r0, [sp, #60]	; 0x3c
   12ab4:	subgt	r6, r6, #12
   12ab8:	ldr	r5, [ip, r5]
   12abc:	mov	r4, r2
   12ac0:	ldr	ip, [sp, #16]
   12ac4:	strgt	r6, [sp, #12]
   12ac8:	ldr	r3, [r5]
   12acc:	ldr	ip, [ip, #40]	; 0x28
   12ad0:	str	r5, [sp, #20]
   12ad4:	str	r3, [sp, #1156]	; 0x484
   12ad8:	str	ip, [sp, #68]	; 0x44
   12adc:	bgt	12af0 <close_stdout@@Base+0x2ac>
   12ae0:	ldr	r6, [sp, #12]
   12ae4:	cmp	r6, #0
   12ae8:	moveq	r6, #12
   12aec:	str	r6, [sp, #12]
   12af0:	ldrb	r0, [r4]
   12af4:	cmp	r0, #0
   12af8:	beq	12b84 <close_stdout@@Base+0x340>
   12afc:	mov	r7, #0
   12b00:	movw	r6, #46021	; 0xb3c5
   12b04:	mov	sl, r7
   12b08:	movt	r6, #37282	; 0x91a2
   12b0c:	movw	ip, #34953	; 0x8889
   12b10:	str	r6, [sp, #52]	; 0x34
   12b14:	movt	ip, #34952	; 0x8888
   12b18:	movw	r6, #34079	; 0x851f
   12b1c:	str	ip, [sp, #44]	; 0x2c
   12b20:	movt	r6, #20971	; 0x51eb
   12b24:	movw	ip, #9363	; 0x2493
   12b28:	str	r6, [sp, #40]	; 0x28
   12b2c:	movt	ip, #37449	; 0x9249
   12b30:	movw	r6, #26215	; 0x6667
   12b34:	str	ip, [sp, #36]	; 0x24
   12b38:	movt	r6, #26214	; 0x6666
   12b3c:	movw	ip, #52429	; 0xcccd
   12b40:	str	r6, [sp, #48]	; 0x30
   12b44:	movt	ip, #52428	; 0xcccc
   12b48:	str	ip, [sp, #32]
   12b4c:	cmp	r0, #37	; 0x25
   12b50:	beq	12bac <close_stdout@@Base+0x368>
   12b54:	cmn	sl, #3
   12b58:	bhi	12ba4 <close_stdout@@Base+0x360>
   12b5c:	cmp	fp, #0
   12b60:	beq	12b6c <close_stdout@@Base+0x328>
   12b64:	mov	r1, fp
   12b68:	bl	11558 <fputc@plt>
   12b6c:	add	sl, sl, #1
   12b70:	ldrb	r0, [r4, #1]
   12b74:	add	r4, r4, #1
   12b78:	cmp	r0, #0
   12b7c:	bne	12b4c <close_stdout@@Base+0x308>
   12b80:	mov	r0, sl
   12b84:	ldr	r6, [sp, #20]
   12b88:	ldr	r2, [sp, #1156]	; 0x484
   12b8c:	ldr	r3, [r6]
   12b90:	cmp	r2, r3
   12b94:	bne	143f0 <close_stdout@@Base+0x1bac>
   12b98:	add	sp, sp, #1152	; 0x480
   12b9c:	add	sp, sp, #12
   12ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ba4:	mov	r0, #0
   12ba8:	b	12b84 <close_stdout@@Base+0x340>
   12bac:	ldr	r6, [sp, #60]	; 0x3c
   12bb0:	mov	r3, r4
   12bb4:	mov	r1, #0
   12bb8:	str	r1, [sp, #24]
   12bbc:	str	r6, [sp, #28]
   12bc0:	ldrb	r2, [r3, #1]
   12bc4:	add	r3, r3, #1
   12bc8:	cmp	r2, #48	; 0x30
   12bcc:	mov	r4, r3
   12bd0:	beq	12e74 <close_stdout@@Base+0x630>
   12bd4:	bhi	12e5c <close_stdout@@Base+0x618>
   12bd8:	cmp	r2, #35	; 0x23
   12bdc:	moveq	r1, #1
   12be0:	beq	12bc0 <close_stdout@@Base+0x37c>
   12be4:	cmp	r2, #45	; 0x2d
   12be8:	beq	12e74 <close_stdout@@Base+0x630>
   12bec:	sub	r0, r2, #48	; 0x30
   12bf0:	cmp	r0, #9
   12bf4:	mvnhi	r5, #0
   12bf8:	bhi	12c4c <close_stdout@@Base+0x408>
   12bfc:	movw	ip, #52428	; 0xcccc
   12c00:	add	r3, r3, #1
   12c04:	movt	ip, #3276	; 0xccc
   12c08:	mov	r5, #0
   12c0c:	b	12c3c <close_stdout@@Base+0x3f8>
   12c10:	ldrb	r2, [r3, #-1]
   12c14:	beq	12e8c <close_stdout@@Base+0x648>
   12c18:	add	r5, r5, r5, lsl #2
   12c1c:	sub	r2, r2, #48	; 0x30
   12c20:	add	r5, r2, r5, lsl #1
   12c24:	mov	r4, r3
   12c28:	add	r3, r3, #1
   12c2c:	ldrb	r2, [r4]
   12c30:	sub	r0, r2, #48	; 0x30
   12c34:	cmp	r0, #9
   12c38:	bhi	12c4c <close_stdout@@Base+0x408>
   12c3c:	cmp	r5, ip
   12c40:	ble	12c10 <close_stdout@@Base+0x3cc>
   12c44:	mvn	r5, #-2147483648	; 0x80000000
   12c48:	b	12c24 <close_stdout@@Base+0x3e0>
   12c4c:	cmp	r2, #69	; 0x45
   12c50:	beq	12e7c <close_stdout@@Base+0x638>
   12c54:	cmp	r2, #79	; 0x4f
   12c58:	movne	r3, #0
   12c5c:	beq	12e7c <close_stdout@@Base+0x638>
   12c60:	mov	r8, r2
   12c64:	cmp	r2, #122	; 0x7a
   12c68:	addls	pc, pc, r2, lsl #2
   12c6c:	b	13668 <close_stdout@@Base+0xe24>
   12c70:	b	13660 <close_stdout@@Base+0xe1c>
   12c74:	b	13668 <close_stdout@@Base+0xe24>
   12c78:	b	13668 <close_stdout@@Base+0xe24>
   12c7c:	b	13668 <close_stdout@@Base+0xe24>
   12c80:	b	13668 <close_stdout@@Base+0xe24>
   12c84:	b	13668 <close_stdout@@Base+0xe24>
   12c88:	b	13668 <close_stdout@@Base+0xe24>
   12c8c:	b	13668 <close_stdout@@Base+0xe24>
   12c90:	b	13668 <close_stdout@@Base+0xe24>
   12c94:	b	13668 <close_stdout@@Base+0xe24>
   12c98:	b	13668 <close_stdout@@Base+0xe24>
   12c9c:	b	13668 <close_stdout@@Base+0xe24>
   12ca0:	b	13668 <close_stdout@@Base+0xe24>
   12ca4:	b	13668 <close_stdout@@Base+0xe24>
   12ca8:	b	13668 <close_stdout@@Base+0xe24>
   12cac:	b	13668 <close_stdout@@Base+0xe24>
   12cb0:	b	13668 <close_stdout@@Base+0xe24>
   12cb4:	b	13668 <close_stdout@@Base+0xe24>
   12cb8:	b	13668 <close_stdout@@Base+0xe24>
   12cbc:	b	13668 <close_stdout@@Base+0xe24>
   12cc0:	b	13668 <close_stdout@@Base+0xe24>
   12cc4:	b	13668 <close_stdout@@Base+0xe24>
   12cc8:	b	13668 <close_stdout@@Base+0xe24>
   12ccc:	b	13668 <close_stdout@@Base+0xe24>
   12cd0:	b	13668 <close_stdout@@Base+0xe24>
   12cd4:	b	13668 <close_stdout@@Base+0xe24>
   12cd8:	b	13668 <close_stdout@@Base+0xe24>
   12cdc:	b	13668 <close_stdout@@Base+0xe24>
   12ce0:	b	13668 <close_stdout@@Base+0xe24>
   12ce4:	b	13668 <close_stdout@@Base+0xe24>
   12ce8:	b	13668 <close_stdout@@Base+0xe24>
   12cec:	b	13668 <close_stdout@@Base+0xe24>
   12cf0:	b	13668 <close_stdout@@Base+0xe24>
   12cf4:	b	13668 <close_stdout@@Base+0xe24>
   12cf8:	b	13668 <close_stdout@@Base+0xe24>
   12cfc:	b	13668 <close_stdout@@Base+0xe24>
   12d00:	b	13668 <close_stdout@@Base+0xe24>
   12d04:	b	135e8 <close_stdout@@Base+0xda4>
   12d08:	b	13668 <close_stdout@@Base+0xe24>
   12d0c:	b	13668 <close_stdout@@Base+0xe24>
   12d10:	b	13668 <close_stdout@@Base+0xe24>
   12d14:	b	13668 <close_stdout@@Base+0xe24>
   12d18:	b	13668 <close_stdout@@Base+0xe24>
   12d1c:	b	13668 <close_stdout@@Base+0xe24>
   12d20:	b	13668 <close_stdout@@Base+0xe24>
   12d24:	b	13668 <close_stdout@@Base+0xe24>
   12d28:	b	13668 <close_stdout@@Base+0xe24>
   12d2c:	b	13668 <close_stdout@@Base+0xe24>
   12d30:	b	13668 <close_stdout@@Base+0xe24>
   12d34:	b	13668 <close_stdout@@Base+0xe24>
   12d38:	b	13668 <close_stdout@@Base+0xe24>
   12d3c:	b	13668 <close_stdout@@Base+0xe24>
   12d40:	b	13668 <close_stdout@@Base+0xe24>
   12d44:	b	13668 <close_stdout@@Base+0xe24>
   12d48:	b	13668 <close_stdout@@Base+0xe24>
   12d4c:	b	13668 <close_stdout@@Base+0xe24>
   12d50:	b	13668 <close_stdout@@Base+0xe24>
   12d54:	b	13668 <close_stdout@@Base+0xe24>
   12d58:	b	136cc <close_stdout@@Base+0xe88>
   12d5c:	b	13668 <close_stdout@@Base+0xe24>
   12d60:	b	13668 <close_stdout@@Base+0xe24>
   12d64:	b	13668 <close_stdout@@Base+0xe24>
   12d68:	b	13668 <close_stdout@@Base+0xe24>
   12d6c:	b	13668 <close_stdout@@Base+0xe24>
   12d70:	b	13668 <close_stdout@@Base+0xe24>
   12d74:	b	12e9c <close_stdout@@Base+0x658>
   12d78:	b	12e9c <close_stdout@@Base+0x658>
   12d7c:	b	13a40 <close_stdout@@Base+0x11fc>
   12d80:	b	1359c <close_stdout@@Base+0xd58>
   12d84:	b	13668 <close_stdout@@Base+0xe24>
   12d88:	b	134e8 <close_stdout@@Base+0xca4>
   12d8c:	b	1338c <close_stdout@@Base+0xb48>
   12d90:	b	13370 <close_stdout@@Base+0xb2c>
   12d94:	b	13358 <close_stdout@@Base+0xb14>
   12d98:	b	13668 <close_stdout@@Base+0xe24>
   12d9c:	b	13668 <close_stdout@@Base+0xe24>
   12da0:	b	13668 <close_stdout@@Base+0xe24>
   12da4:	b	1333c <close_stdout@@Base+0xaf8>
   12da8:	b	132f8 <close_stdout@@Base+0xab4>
   12dac:	b	13668 <close_stdout@@Base+0xe24>
   12db0:	b	13770 <close_stdout@@Base+0xf2c>
   12db4:	b	13668 <close_stdout@@Base+0xe24>
   12db8:	b	130a4 <close_stdout@@Base+0x860>
   12dbc:	b	13044 <close_stdout@@Base+0x800>
   12dc0:	b	132ec <close_stdout@@Base+0xaa8>
   12dc4:	b	13cb4 <close_stdout@@Base+0x1470>
   12dc8:	b	1338c <close_stdout@@Base+0xb48>
   12dcc:	b	13c14 <close_stdout@@Base+0x13d0>
   12dd0:	b	12fac <close_stdout@@Base+0x768>
   12dd4:	b	13c70 <close_stdout@@Base+0x142c>
   12dd8:	b	13cf0 <close_stdout@@Base+0x14ac>
   12ddc:	b	13668 <close_stdout@@Base+0xe24>
   12de0:	b	13668 <close_stdout@@Base+0xe24>
   12de4:	b	13668 <close_stdout@@Base+0xe24>
   12de8:	b	13668 <close_stdout@@Base+0xe24>
   12dec:	b	13668 <close_stdout@@Base+0xe24>
   12df0:	b	13668 <close_stdout@@Base+0xe24>
   12df4:	b	135cc <close_stdout@@Base+0xd88>
   12df8:	b	135b0 <close_stdout@@Base+0xd6c>
   12dfc:	b	13000 <close_stdout@@Base+0x7bc>
   12e00:	b	131a4 <close_stdout@@Base+0x960>
   12e04:	b	13190 <close_stdout@@Base+0x94c>
   12e08:	b	13668 <close_stdout@@Base+0xe24>
   12e0c:	b	1338c <close_stdout@@Base+0xb48>
   12e10:	b	135b0 <close_stdout@@Base+0xd6c>
   12e14:	b	13668 <close_stdout@@Base+0xe24>
   12e18:	b	131d0 <close_stdout@@Base+0x98c>
   12e1c:	b	1315c <close_stdout@@Base+0x918>
   12e20:	b	131c0 <close_stdout@@Base+0x97c>
   12e24:	b	13278 <close_stdout@@Base+0xa34>
   12e28:	b	13208 <close_stdout@@Base+0x9c4>
   12e2c:	b	13668 <close_stdout@@Base+0xe24>
   12e30:	b	13018 <close_stdout@@Base+0x7d4>
   12e34:	b	13668 <close_stdout@@Base+0xe24>
   12e38:	b	13008 <close_stdout@@Base+0x7c4>
   12e3c:	b	137f4 <close_stdout@@Base+0xfb0>
   12e40:	b	13784 <close_stdout@@Base+0xf40>
   12e44:	b	132b4 <close_stdout@@Base+0xa70>
   12e48:	b	13668 <close_stdout@@Base+0xe24>
   12e4c:	b	13298 <close_stdout@@Base+0xa54>
   12e50:	b	12fac <close_stdout@@Base+0x768>
   12e54:	b	1367c <close_stdout@@Base+0xe38>
   12e58:	b	13768 <close_stdout@@Base+0xf24>
   12e5c:	cmp	r2, #94	; 0x5e
   12e60:	moveq	ip, #1
   12e64:	streq	ip, [sp, #28]
   12e68:	beq	12bc0 <close_stdout@@Base+0x37c>
   12e6c:	cmp	r2, #95	; 0x5f
   12e70:	bne	12bec <close_stdout@@Base+0x3a8>
   12e74:	str	r2, [sp, #24]
   12e78:	b	12bc0 <close_stdout@@Base+0x37c>
   12e7c:	mov	r3, r2
   12e80:	add	r4, r4, #1
   12e84:	ldrb	r2, [r4]
   12e88:	b	12c60 <close_stdout@@Base+0x41c>
   12e8c:	cmp	r2, #55	; 0x37
   12e90:	ble	12c18 <close_stdout@@Base+0x3d4>
   12e94:	mvn	r5, #-2147483648	; 0x80000000
   12e98:	b	12c24 <close_stdout@@Base+0x3e0>
   12e9c:	cmp	r3, #0
   12ea0:	bne	134f8 <close_stdout@@Base+0xcb4>
   12ea4:	ldr	ip, [sp, #28]
   12ea8:	cmp	r1, #0
   12eac:	movne	ip, #1
   12eb0:	str	ip, [sp, #28]
   12eb4:	add	r7, sp, #136	; 0x88
   12eb8:	mov	ip, #0
   12ebc:	str	ip, [sp, #56]	; 0x38
   12ec0:	mov	lr, r2
   12ec4:	str	ip, [sp, #64]	; 0x40
   12ec8:	sub	ip, r7, #10
   12ecc:	mov	r3, #32
   12ed0:	strb	r3, [sp, #124]	; 0x7c
   12ed4:	mov	r3, #37	; 0x25
   12ed8:	strb	r3, [sp, #125]	; 0x7d
   12edc:	sub	r0, r7, #4
   12ee0:	mov	r1, #1024	; 0x400
   12ee4:	sub	r2, r7, #12
   12ee8:	ldr	r3, [sp, #16]
   12eec:	strb	lr, [ip]
   12ef0:	mov	r9, #0
   12ef4:	strb	r9, [ip, #1]
   12ef8:	bl	113f0 <strftime@plt>
   12efc:	cmp	r0, #0
   12f00:	beq	12b70 <close_stdout@@Base+0x32c>
   12f04:	sub	r6, r0, #1
   12f08:	bic	r3, r5, r5, asr #31
   12f0c:	cmp	r3, r6
   12f10:	movcs	r8, r3
   12f14:	movcc	r8, r6
   12f18:	mvn	r2, sl
   12f1c:	cmp	r8, r2
   12f20:	bcs	12ba4 <close_stdout@@Base+0x360>
   12f24:	cmp	fp, r9
   12f28:	beq	12fa4 <close_stdout@@Base+0x760>
   12f2c:	cmp	r6, r3
   12f30:	ldr	ip, [sp, #64]	; 0x40
   12f34:	movcs	r3, #0
   12f38:	movcc	r3, #1
   12f3c:	cmp	ip, r9
   12f40:	movne	r3, #0
   12f44:	cmp	r3, r9
   12f48:	beq	12f7c <close_stdout@@Base+0x738>
   12f4c:	ldr	ip, [sp, #24]
   12f50:	rsb	r5, r6, r5
   12f54:	cmp	ip, #48	; 0x30
   12f58:	beq	140b4 <close_stdout@@Base+0x1870>
   12f5c:	cmp	r5, #0
   12f60:	beq	12f7c <close_stdout@@Base+0x738>
   12f64:	add	r9, r9, #1
   12f68:	mov	r0, #32
   12f6c:	mov	r1, fp
   12f70:	bl	11558 <fputc@plt>
   12f74:	cmp	r9, r5
   12f78:	bne	12f64 <close_stdout@@Base+0x720>
   12f7c:	ldr	ip, [sp, #56]	; 0x38
   12f80:	cmp	ip, #0
   12f84:	bne	13f84 <close_stdout@@Base+0x1740>
   12f88:	ldr	ip, [sp, #28]
   12f8c:	cmp	ip, #0
   12f90:	beq	13f6c <close_stdout@@Base+0x1728>
   12f94:	sub	r1, r7, #3
   12f98:	mov	r2, r6
   12f9c:	mov	r0, fp
   12fa0:	bl	12a40 <close_stdout@@Base+0x1fc>
   12fa4:	add	sl, sl, r8
   12fa8:	b	12b70 <close_stdout@@Base+0x32c>
   12fac:	cmp	r3, #79	; 0x4f
   12fb0:	beq	134f8 <close_stdout@@Base+0xcb4>
   12fb4:	mov	lr, r2
   12fb8:	mov	ip, #0
   12fbc:	str	ip, [sp, #56]	; 0x38
   12fc0:	cmp	r3, #0
   12fc4:	mov	r2, #32
   12fc8:	addeq	r7, sp, #136	; 0x88
   12fcc:	strb	r2, [sp, #124]	; 0x7c
   12fd0:	streq	r3, [sp, #64]	; 0x40
   12fd4:	mov	r2, #37	; 0x25
   12fd8:	subeq	ip, r7, #10
   12fdc:	strb	r2, [sp, #125]	; 0x7d
   12fe0:	beq	12edc <close_stdout@@Base+0x698>
   12fe4:	mov	ip, #0
   12fe8:	str	ip, [sp, #64]	; 0x40
   12fec:	add	r7, sp, #136	; 0x88
   12ff0:	strb	r3, [sp, #126]	; 0x7e
   12ff4:	uxtb	lr, r8
   12ff8:	sub	ip, r7, #9
   12ffc:	b	12edc <close_stdout@@Base+0x698>
   13000:	cmp	r3, #79	; 0x4f
   13004:	beq	134f8 <close_stdout@@Base+0xcb4>
   13008:	mov	r6, #0
   1300c:	mov	lr, r2
   13010:	str	r6, [sp, #56]	; 0x38
   13014:	b	12fc0 <close_stdout@@Base+0x77c>
   13018:	mov	lr, r2
   1301c:	mov	r6, #0
   13020:	str	r6, [sp, #56]	; 0x38
   13024:	ldr	ip, [sp, #28]
   13028:	cmp	r1, #0
   1302c:	ldr	r6, [sp, #56]	; 0x38
   13030:	movne	ip, #0
   13034:	str	ip, [sp, #28]
   13038:	movne	r6, #1
   1303c:	str	r6, [sp, #56]	; 0x38
   13040:	b	12fc0 <close_stdout@@Base+0x77c>
   13044:	cmp	r3, #69	; 0x45
   13048:	beq	134f8 <close_stdout@@Base+0xcb4>
   1304c:	ldr	r6, [sp, #16]
   13050:	ldr	ip, [r6]
   13054:	mov	r6, #2
   13058:	str	r6, [sp, #64]	; 0x40
   1305c:	mov	r2, #0
   13060:	lsr	r0, ip, #31
   13064:	str	r2, [sp, #72]	; 0x48
   13068:	str	r0, [sp, #56]	; 0x38
   1306c:	ldr	r6, [sp, #56]	; 0x38
   13070:	eor	r1, r6, #1
   13074:	cmp	r3, #79	; 0x4f
   13078:	movne	r1, #0
   1307c:	andeq	r1, r1, #1
   13080:	cmp	r1, #0
   13084:	beq	13aac <close_stdout@@Base+0x1268>
   13088:	mov	r2, #32
   1308c:	mov	r6, #0
   13090:	strb	r2, [sp, #124]	; 0x7c
   13094:	mov	r2, #37	; 0x25
   13098:	str	r6, [sp, #56]	; 0x38
   1309c:	strb	r2, [sp, #125]	; 0x7d
   130a0:	b	12fec <close_stdout@@Base+0x7a8>
   130a4:	ldr	r7, [pc, #2432]	; 13a2c <close_stdout@@Base+0x11e8>
   130a8:	add	r7, pc, r7
   130ac:	ldr	r1, [sp, #1204]	; 0x4b4
   130b0:	mov	r2, r7
   130b4:	ldr	ip, [sp, #1200]	; 0x4b0
   130b8:	ldr	r3, [sp, #16]
   130bc:	str	r1, [sp, #4]
   130c0:	mov	r1, #0
   130c4:	str	ip, [sp]
   130c8:	ldr	r0, [sp, #28]
   130cc:	bl	12a80 <close_stdout@@Base+0x23c>
   130d0:	bic	r3, r5, r5, asr #31
   130d4:	mvn	r2, sl
   130d8:	cmp	r0, r3
   130dc:	movcs	r6, r0
   130e0:	movcc	r6, r3
   130e4:	cmp	r6, r2
   130e8:	bcs	12ba4 <close_stdout@@Base+0x360>
   130ec:	cmp	fp, #0
   130f0:	beq	13154 <close_stdout@@Base+0x910>
   130f4:	cmp	r0, r3
   130f8:	bcs	13130 <close_stdout@@Base+0x8ec>
   130fc:	ldr	ip, [sp, #24]
   13100:	rsb	r5, r0, r5
   13104:	cmp	ip, #48	; 0x30
   13108:	beq	140e0 <close_stdout@@Base+0x189c>
   1310c:	cmp	r5, #0
   13110:	movne	r8, #0
   13114:	beq	13130 <close_stdout@@Base+0x8ec>
   13118:	add	r8, r8, #1
   1311c:	mov	r0, #32
   13120:	mov	r1, fp
   13124:	bl	11558 <fputc@plt>
   13128:	cmp	r8, r5
   1312c:	bne	13118 <close_stdout@@Base+0x8d4>
   13130:	ldr	r2, [sp, #1200]	; 0x4b0
   13134:	mov	r1, fp
   13138:	ldr	r3, [sp, #1204]	; 0x4b4
   1313c:	ldr	r0, [sp, #28]
   13140:	str	r2, [sp]
   13144:	mov	r2, r7
   13148:	str	r3, [sp, #4]
   1314c:	ldr	r3, [sp, #16]
   13150:	bl	12a80 <close_stdout@@Base+0x23c>
   13154:	add	sl, sl, r6
   13158:	b	12b70 <close_stdout@@Base+0x32c>
   1315c:	cmp	r3, #69	; 0x45
   13160:	beq	134f8 <close_stdout@@Base+0xcb4>
   13164:	ldr	r6, [sp, #16]
   13168:	ldr	ip, [r6, #8]
   1316c:	ldr	r6, [sp, #24]
   13170:	cmp	r6, #45	; 0x2d
   13174:	cmpne	r6, #48	; 0x30
   13178:	mov	r6, #2
   1317c:	str	r6, [sp, #64]	; 0x40
   13180:	ldr	r6, [sp, #24]
   13184:	movne	r6, #95	; 0x5f
   13188:	str	r6, [sp, #24]
   1318c:	b	1305c <close_stdout@@Base+0x818>
   13190:	cmp	r3, #69	; 0x45
   13194:	beq	134f8 <close_stdout@@Base+0xcb4>
   13198:	ldr	r6, [sp, #16]
   1319c:	ldr	ip, [r6, #12]
   131a0:	b	1316c <close_stdout@@Base+0x928>
   131a4:	cmp	r3, #69	; 0x45
   131a8:	beq	134f8 <close_stdout@@Base+0xcb4>
   131ac:	ldr	r6, [sp, #16]
   131b0:	ldr	ip, [r6, #12]
   131b4:	mov	r6, #2
   131b8:	str	r6, [sp, #64]	; 0x40
   131bc:	b	1305c <close_stdout@@Base+0x818>
   131c0:	cmp	r3, #69	; 0x45
   131c4:	beq	134f8 <close_stdout@@Base+0xcb4>
   131c8:	ldr	ip, [sp, #12]
   131cc:	b	1316c <close_stdout@@Base+0x928>
   131d0:	cmp	r3, #69	; 0x45
   131d4:	beq	134f8 <close_stdout@@Base+0xcb4>
   131d8:	ldr	r6, [sp, #16]
   131dc:	mov	r2, #0
   131e0:	str	r2, [sp, #72]	; 0x48
   131e4:	ldr	ip, [r6, #28]
   131e8:	mov	r6, #3
   131ec:	cmn	ip, #1
   131f0:	str	r6, [sp, #64]	; 0x40
   131f4:	add	ip, ip, #1
   131f8:	movge	r0, #0
   131fc:	movlt	r0, #1
   13200:	str	r0, [sp, #56]	; 0x38
   13204:	b	1306c <close_stdout@@Base+0x828>
   13208:	bic	r3, r5, r5, asr #31
   1320c:	mvn	r2, sl
   13210:	cmp	r3, #1
   13214:	movcs	r7, r3
   13218:	movcc	r7, #1
   1321c:	cmp	r7, r2
   13220:	bcs	12ba4 <close_stdout@@Base+0x360>
   13224:	cmp	fp, #0
   13228:	beq	13594 <close_stdout@@Base+0xd50>
   1322c:	cmp	r3, #1
   13230:	bls	13268 <close_stdout@@Base+0xa24>
   13234:	ldr	ip, [sp, #24]
   13238:	sub	r5, r5, #1
   1323c:	cmp	ip, #48	; 0x30
   13240:	beq	142f4 <close_stdout@@Base+0x1ab0>
   13244:	cmp	r5, #0
   13248:	movne	r6, #0
   1324c:	beq	13268 <close_stdout@@Base+0xa24>
   13250:	add	r6, r6, #1
   13254:	mov	r0, #32
   13258:	mov	r1, fp
   1325c:	bl	11558 <fputc@plt>
   13260:	cmp	r6, r5
   13264:	bne	13250 <close_stdout@@Base+0xa0c>
   13268:	mov	r1, fp
   1326c:	mov	r0, #10
   13270:	bl	11558 <fputc@plt>
   13274:	b	13594 <close_stdout@@Base+0xd50>
   13278:	cmp	r3, #69	; 0x45
   1327c:	beq	134f8 <close_stdout@@Base+0xcb4>
   13280:	ldr	r6, [sp, #16]
   13284:	mov	r2, #0
   13288:	str	r2, [sp, #72]	; 0x48
   1328c:	ldr	ip, [r6, #16]
   13290:	mov	r6, #2
   13294:	b	131ec <close_stdout@@Base+0x9a8>
   13298:	cmp	r3, #69	; 0x45
   1329c:	beq	134f8 <close_stdout@@Base+0xcb4>
   132a0:	ldr	r6, [sp, #16]
   132a4:	ldr	ip, [r6, #24]
   132a8:	mov	r6, #1
   132ac:	str	r6, [sp, #64]	; 0x40
   132b0:	b	1305c <close_stdout@@Base+0x818>
   132b4:	ldr	ip, [sp, #16]
   132b8:	mov	r6, #1
   132bc:	str	r6, [sp, #64]	; 0x40
   132c0:	ldr	r2, [ip, #24]
   132c4:	ldr	ip, [sp, #36]	; 0x24
   132c8:	add	r2, r2, #6
   132cc:	smull	ip, r0, ip, r2
   132d0:	asr	r1, r2, #31
   132d4:	add	r0, r0, r2
   132d8:	rsb	r1, r1, r0, asr #2
   132dc:	rsb	r1, r1, r1, lsl #3
   132e0:	rsb	r2, r1, r2
   132e4:	add	ip, r2, r6
   132e8:	b	1305c <close_stdout@@Base+0x818>
   132ec:	ldr	r7, [pc, #1852]	; 13a30 <close_stdout@@Base+0x11ec>
   132f0:	add	r7, pc, r7
   132f4:	b	130ac <close_stdout@@Base+0x868>
   132f8:	cmp	r3, #69	; 0x45
   132fc:	beq	134f8 <close_stdout@@Base+0xcb4>
   13300:	cmn	r5, #1
   13304:	beq	141ec <close_stdout@@Base+0x19a8>
   13308:	cmp	r5, #8
   1330c:	bgt	143e4 <close_stdout@@Base+0x1ba0>
   13310:	ldr	ip, [sp, #1204]	; 0x4b4
   13314:	mov	r2, r5
   13318:	ldr	r0, [sp, #48]	; 0x30
   1331c:	smull	r6, r1, r0, ip
   13320:	add	r2, r2, #1
   13324:	cmp	r2, #9
   13328:	asr	ip, ip, #31
   1332c:	rsb	ip, ip, r1, asr #2
   13330:	bne	1331c <close_stdout@@Base+0xad8>
   13334:	str	r5, [sp, #64]	; 0x40
   13338:	b	1305c <close_stdout@@Base+0x818>
   1333c:	cmp	r3, #69	; 0x45
   13340:	beq	134f8 <close_stdout@@Base+0xcb4>
   13344:	ldr	r6, [sp, #16]
   13348:	ldr	ip, [r6, #4]
   1334c:	mov	r6, #2
   13350:	str	r6, [sp, #64]	; 0x40
   13354:	b	1305c <close_stdout@@Base+0x818>
   13358:	cmp	r3, #69	; 0x45
   1335c:	beq	134f8 <close_stdout@@Base+0xcb4>
   13360:	mov	r6, #2
   13364:	ldr	ip, [sp, #12]
   13368:	str	r6, [sp, #64]	; 0x40
   1336c:	b	1305c <close_stdout@@Base+0x818>
   13370:	cmp	r3, #69	; 0x45
   13374:	beq	134f8 <close_stdout@@Base+0xcb4>
   13378:	ldr	r6, [sp, #16]
   1337c:	ldr	ip, [r6, #8]
   13380:	mov	r6, #2
   13384:	str	r6, [sp, #64]	; 0x40
   13388:	b	1305c <close_stdout@@Base+0x818>
   1338c:	cmp	r3, #69	; 0x45
   13390:	beq	134f8 <close_stdout@@Base+0xcb4>
   13394:	ldr	ip, [sp, #16]
   13398:	ldr	r0, [ip, #24]
   1339c:	ldr	r7, [ip, #28]
   133a0:	ldr	r9, [ip, #20]
   133a4:	str	r0, [sp, #56]	; 0x38
   133a8:	rsb	r0, r0, r7
   133ac:	ldr	ip, [sp, #36]	; 0x24
   133b0:	add	r0, r0, #380	; 0x17c
   133b4:	add	r0, r0, #2
   133b8:	cmp	r9, #0
   133bc:	smull	ip, r6, ip, r0
   133c0:	asr	ip, r0, #31
   133c4:	mvnge	r1, #99	; 0x63
   133c8:	movlt	r1, #300	; 0x12c
   133cc:	add	r1, r9, r1
   133d0:	add	r6, r6, r0
   133d4:	rsb	ip, ip, r6, asr #2
   133d8:	rsb	ip, ip, ip, lsl #3
   133dc:	rsb	r0, ip, r0
   133e0:	rsb	r0, r0, r7
   133e4:	adds	r0, r0, #3
   133e8:	str	r0, [sp, #64]	; 0x40
   133ec:	bmi	14204 <close_stdout@@Base+0x19c0>
   133f0:	tst	r1, #3
   133f4:	mvnne	r0, #364	; 0x16c
   133f8:	bne	13450 <close_stdout@@Base+0xc0c>
   133fc:	ldr	r0, [sp, #40]	; 0x28
   13400:	smull	r6, r0, r0, r1
   13404:	mov	r6, #100	; 0x64
   13408:	str	r0, [sp, #76]	; 0x4c
   1340c:	asr	r0, r1, #31
   13410:	ldr	ip, [sp, #76]	; 0x4c
   13414:	rsb	ip, r0, ip, asr #5
   13418:	mls	r6, r6, ip, r1
   1341c:	cmp	r6, #0
   13420:	movwne	r0, #65170	; 0xfe92
   13424:	movtne	r0, #65535	; 0xffff
   13428:	bne	13450 <close_stdout@@Base+0xc0c>
   1342c:	ldr	ip, [sp, #76]	; 0x4c
   13430:	mov	r6, #400	; 0x190
   13434:	rsb	r0, r0, ip, asr #7
   13438:	movw	ip, #65170	; 0xfe92
   1343c:	movt	ip, #65535	; 0xffff
   13440:	mls	r1, r6, r0, r1
   13444:	cmp	r1, #0
   13448:	moveq	r0, ip
   1344c:	mvnne	r0, #364	; 0x16c
   13450:	ldr	r6, [sp, #56]	; 0x38
   13454:	add	r0, r7, r0
   13458:	ldr	ip, [sp, #36]	; 0x24
   1345c:	rsb	r1, r6, r0
   13460:	add	r1, r1, #380	; 0x17c
   13464:	add	r1, r1, #2
   13468:	smull	ip, r6, ip, r1
   1346c:	asr	ip, r1, #31
   13470:	add	r6, r6, r1
   13474:	rsb	ip, ip, r6, asr #2
   13478:	rsb	ip, ip, ip, lsl #3
   1347c:	rsb	r1, ip, r1
   13480:	rsb	r1, r1, r0
   13484:	adds	r1, r1, #3
   13488:	ldrmi	r1, [sp, #64]	; 0x40
   1348c:	movmi	r7, #0
   13490:	movpl	r7, #1
   13494:	cmp	r2, #71	; 0x47
   13498:	beq	1417c <close_stdout@@Base+0x1938>
   1349c:	cmp	r2, #103	; 0x67
   134a0:	bne	14158 <close_stdout@@Base+0x1914>
   134a4:	ldr	r6, [sp, #40]	; 0x28
   134a8:	asr	r2, r9, #31
   134ac:	mov	r1, #100	; 0x64
   134b0:	smull	r6, r0, r6, r9
   134b4:	ldr	r6, [sp, #40]	; 0x28
   134b8:	rsb	r2, r2, r0, asr #5
   134bc:	mls	r2, r1, r2, r9
   134c0:	add	r2, r2, r7
   134c4:	smull	r6, ip, r6, r2
   134c8:	asr	r0, r2, #31
   134cc:	rsb	ip, r0, ip, asr #5
   134d0:	mls	ip, r1, ip, r2
   134d4:	cmp	ip, #0
   134d8:	blt	14370 <close_stdout@@Base+0x1b2c>
   134dc:	mov	r6, #2
   134e0:	str	r6, [sp, #64]	; 0x40
   134e4:	b	1305c <close_stdout@@Base+0x818>
   134e8:	ldr	r7, [pc, #1348]	; 13a34 <close_stdout@@Base+0x11f0>
   134ec:	cmp	r3, #0
   134f0:	add	r7, pc, r7
   134f4:	beq	130ac <close_stdout@@Base+0x868>
   134f8:	sub	r3, r4, #1
   134fc:	mov	r6, #1
   13500:	ldrb	r2, [r3]
   13504:	mov	r9, r3
   13508:	add	r6, r6, #1
   1350c:	sub	r3, r3, #1
   13510:	cmp	r2, #37	; 0x25
   13514:	bne	13500 <close_stdout@@Base+0xcbc>
   13518:	bic	r3, r5, r5, asr #31
   1351c:	mvn	r2, sl
   13520:	cmp	r6, r3
   13524:	movcs	r7, r6
   13528:	movcc	r7, r3
   1352c:	cmp	r7, r2
   13530:	bcs	12ba4 <close_stdout@@Base+0x360>
   13534:	cmp	fp, #0
   13538:	beq	13594 <close_stdout@@Base+0xd50>
   1353c:	cmp	r6, r3
   13540:	bcs	13578 <close_stdout@@Base+0xd34>
   13544:	ldr	ip, [sp, #24]
   13548:	rsb	r5, r6, r5
   1354c:	cmp	ip, #48	; 0x30
   13550:	beq	13f98 <close_stdout@@Base+0x1754>
   13554:	cmp	r5, #0
   13558:	movne	r8, #0
   1355c:	beq	13578 <close_stdout@@Base+0xd34>
   13560:	add	r8, r8, #1
   13564:	mov	r0, #32
   13568:	mov	r1, fp
   1356c:	bl	11558 <fputc@plt>
   13570:	cmp	r8, r5
   13574:	bne	13560 <close_stdout@@Base+0xd1c>
   13578:	ldr	ip, [sp, #28]
   1357c:	cmp	ip, #0
   13580:	beq	13f30 <close_stdout@@Base+0x16ec>
   13584:	mov	r1, r9
   13588:	mov	r2, r6
   1358c:	mov	r0, fp
   13590:	bl	12a40 <close_stdout@@Base+0x1fc>
   13594:	add	sl, sl, r7
   13598:	b	12b70 <close_stdout@@Base+0x32c>
   1359c:	ldr	r7, [pc, #1172]	; 13a38 <close_stdout@@Base+0x11f4>
   135a0:	cmp	r3, #0
   135a4:	add	r7, pc, r7
   135a8:	beq	130ac <close_stdout@@Base+0x868>
   135ac:	b	134f8 <close_stdout@@Base+0xcb4>
   135b0:	cmp	r1, #0
   135b4:	ldr	r6, [sp, #28]
   135b8:	movne	r6, #1
   135bc:	cmp	r3, #0
   135c0:	str	r6, [sp, #28]
   135c4:	bne	134f8 <close_stdout@@Base+0xcb4>
   135c8:	b	12eb4 <close_stdout@@Base+0x670>
   135cc:	cmp	r3, #0
   135d0:	bne	134f8 <close_stdout@@Base+0xcb4>
   135d4:	ldr	r6, [sp, #28]
   135d8:	cmp	r1, #0
   135dc:	movne	r6, #1
   135e0:	str	r6, [sp, #28]
   135e4:	b	12eb4 <close_stdout@@Base+0x670>
   135e8:	cmp	r3, #0
   135ec:	bne	13670 <close_stdout@@Base+0xe2c>
   135f0:	bic	r1, r5, r5, asr #31
   135f4:	mvn	r0, sl
   135f8:	cmp	r1, #1
   135fc:	movcs	r6, r1
   13600:	movcc	r6, #1
   13604:	cmp	r6, r0
   13608:	bcs	12ba4 <close_stdout@@Base+0x360>
   1360c:	cmp	fp, #0
   13610:	beq	13154 <close_stdout@@Base+0x910>
   13614:	cmp	r1, #1
   13618:	bls	1431c <close_stdout@@Base+0x1ad8>
   1361c:	ldr	ip, [sp, #24]
   13620:	sub	r5, r5, #1
   13624:	cmp	ip, #48	; 0x30
   13628:	beq	143bc <close_stdout@@Base+0x1b78>
   1362c:	cmp	r5, #0
   13630:	movne	r7, r3
   13634:	beq	1431c <close_stdout@@Base+0x1ad8>
   13638:	add	r7, r7, #1
   1363c:	mov	r0, #32
   13640:	mov	r1, fp
   13644:	bl	11558 <fputc@plt>
   13648:	cmp	r7, r5
   1364c:	bne	13638 <close_stdout@@Base+0xdf4>
   13650:	ldrb	r0, [r4]
   13654:	mov	r1, fp
   13658:	bl	11558 <fputc@plt>
   1365c:	b	13154 <close_stdout@@Base+0x910>
   13660:	ldrb	r2, [r4, #-1]
   13664:	sub	r4, r4, #1
   13668:	cmp	r2, #37	; 0x25
   1366c:	bne	134f8 <close_stdout@@Base+0xcb4>
   13670:	mov	r9, r4
   13674:	mov	r6, #1
   13678:	b	13518 <close_stdout@@Base+0xcd4>
   1367c:	cmp	r3, #69	; 0x45
   13680:	beq	1412c <close_stdout@@Base+0x18e8>
   13684:	ldr	ip, [sp, #16]
   13688:	mov	r1, #100	; 0x64
   1368c:	ldr	r6, [sp, #40]	; 0x28
   13690:	ldr	r2, [ip, #20]
   13694:	smull	r6, ip, r6, r2
   13698:	asr	r0, r2, #31
   1369c:	rsb	ip, r0, ip, asr #5
   136a0:	mls	ip, r1, ip, r2
   136a4:	cmp	ip, #0
   136a8:	bge	134dc <close_stdout@@Base+0xc98>
   136ac:	movw	r1, #63636	; 0xf894
   136b0:	movt	r1, #65535	; 0xffff
   136b4:	cmp	r2, r1
   136b8:	bge	14384 <close_stdout@@Base+0x1b40>
   136bc:	mov	r6, #2
   136c0:	rsb	ip, ip, #0
   136c4:	str	r6, [sp, #64]	; 0x40
   136c8:	b	1305c <close_stdout@@Base+0x818>
   136cc:	ldrb	r2, [r4, #1]
   136d0:	cmp	r2, #58	; 0x3a
   136d4:	beq	14138 <close_stdout@@Base+0x18f4>
   136d8:	add	r1, r4, #1
   136dc:	mov	r7, #1
   136e0:	cmp	r2, #122	; 0x7a
   136e4:	moveq	r4, r1
   136e8:	bne	134f8 <close_stdout@@Base+0xcb4>
   136ec:	ldr	r6, [sp, #16]
   136f0:	ldr	r2, [r6, #32]
   136f4:	cmp	r2, #0
   136f8:	blt	12b70 <close_stdout@@Base+0x32c>
   136fc:	ldr	r9, [r6, #36]	; 0x24
   13700:	ldr	ip, [sp, #44]	; 0x2c
   13704:	ldr	r0, [sp, #44]	; 0x2c
   13708:	asr	r2, r9, #31
   1370c:	smull	ip, r1, ip, r9
   13710:	ldr	ip, [sp, #52]	; 0x34
   13714:	add	r1, r1, r9
   13718:	smull	ip, r6, ip, r9
   1371c:	rsb	r1, r2, r1, asr #5
   13720:	smull	r0, ip, r0, r1
   13724:	add	r6, r6, r9
   13728:	asr	r0, r1, #31
   1372c:	rsb	r2, r2, r6, asr #11
   13730:	str	r2, [sp, #64]	; 0x40
   13734:	add	r2, ip, r1
   13738:	rsb	r6, r1, r1, lsl #4
   1373c:	rsb	r2, r0, r2, asr #5
   13740:	sub	r6, r9, r6, lsl #2
   13744:	rsb	r2, r2, r2, lsl #4
   13748:	sub	r2, r1, r2, lsl #2
   1374c:	cmp	r7, #3
   13750:	addls	pc, pc, r7, lsl #2
   13754:	b	141fc <close_stdout@@Base+0x19b8>
   13758:	b	13e3c <close_stdout@@Base+0x15f8>
   1375c:	b	13de0 <close_stdout@@Base+0x159c>
   13760:	b	13da8 <close_stdout@@Base+0x1564>
   13764:	b	13e0c <close_stdout@@Base+0x15c8>
   13768:	mov	r7, #0
   1376c:	b	136ec <close_stdout@@Base+0xea8>
   13770:	mov	lr, #112	; 0x70
   13774:	mov	r6, #1
   13778:	mov	r8, lr
   1377c:	str	r6, [sp, #56]	; 0x38
   13780:	b	13024 <close_stdout@@Base+0x7e0>
   13784:	bic	r3, r5, r5, asr #31
   13788:	mvn	r2, sl
   1378c:	cmp	r3, #1
   13790:	movcs	r7, r3
   13794:	movcc	r7, #1
   13798:	cmp	r7, r2
   1379c:	bcs	12ba4 <close_stdout@@Base+0x360>
   137a0:	cmp	fp, #0
   137a4:	beq	13594 <close_stdout@@Base+0xd50>
   137a8:	cmp	r3, #1
   137ac:	bls	137e4 <close_stdout@@Base+0xfa0>
   137b0:	ldr	r6, [sp, #24]
   137b4:	sub	r5, r5, #1
   137b8:	cmp	r6, #48	; 0x30
   137bc:	beq	142cc <close_stdout@@Base+0x1a88>
   137c0:	cmp	r5, #0
   137c4:	movne	r6, #0
   137c8:	beq	137e4 <close_stdout@@Base+0xfa0>
   137cc:	add	r6, r6, #1
   137d0:	mov	r0, #32
   137d4:	mov	r1, fp
   137d8:	bl	11558 <fputc@plt>
   137dc:	cmp	r6, r5
   137e0:	bne	137cc <close_stdout@@Base+0xf88>
   137e4:	mov	r1, fp
   137e8:	mov	r0, #9
   137ec:	bl	11558 <fputc@plt>
   137f0:	b	13594 <close_stdout@@Base+0xd50>
   137f4:	ldr	lr, [sp, #16]
   137f8:	add	ip, sp, #80	; 0x50
   137fc:	add	r7, sp, #136	; 0x88
   13800:	ldm	lr!, {r0, r1, r2, r3}
   13804:	stmia	ip!, {r0, r1, r2, r3}
   13808:	ldm	lr!, {r0, r1, r2, r3}
   1380c:	stmia	ip!, {r0, r1, r2, r3}
   13810:	ldm	lr, {r0, r1, r2}
   13814:	stm	ip, {r0, r1, r2}
   13818:	add	r0, sp, #80	; 0x50
   1381c:	bl	112a0 <mktime@plt>
   13820:	ldr	r6, [sp, #48]	; 0x30
   13824:	add	r2, r7, #9
   13828:	lsr	r1, r0, #31
   1382c:	smull	r3, ip, r6, r0
   13830:	asr	r3, r0, #31
   13834:	cmp	r1, #0
   13838:	mov	r8, r2
   1383c:	rsb	r3, r3, ip, asr #2
   13840:	add	ip, r3, r3, lsl #2
   13844:	sub	ip, r0, ip, lsl #1
   13848:	mov	r0, r3
   1384c:	rsbne	ip, ip, #48	; 0x30
   13850:	addeq	ip, ip, #48	; 0x30
   13854:	cmp	r3, #0
   13858:	uxtb	ip, ip
   1385c:	strb	ip, [r2], #-1
   13860:	bne	1382c <close_stdout@@Base+0xfe8>
   13864:	cmp	r5, #1
   13868:	movge	r6, r5
   1386c:	movlt	r6, #1
   13870:	cmp	r1, #0
   13874:	str	r6, [sp, #64]	; 0x40
   13878:	bne	13e68 <close_stdout@@Base+0x1624>
   1387c:	ldr	ip, [sp, #24]
   13880:	add	r7, r7, #10
   13884:	str	r7, [sp, #72]	; 0x48
   13888:	cmp	ip, #45	; 0x2d
   1388c:	beq	140d8 <close_stdout@@Base+0x1894>
   13890:	ldr	r2, [sp, #64]	; 0x40
   13894:	rsb	r6, r7, r8
   13898:	add	r6, r6, r2
   1389c:	cmp	r6, #0
   138a0:	movgt	r7, #0
   138a4:	strgt	r7, [sp, #56]	; 0x38
   138a8:	ble	140d8 <close_stdout@@Base+0x1894>
   138ac:	ldr	ip, [sp, #24]
   138b0:	mvn	r3, sl
   138b4:	cmp	ip, #95	; 0x5f
   138b8:	beq	13fc0 <close_stdout@@Base+0x177c>
   138bc:	ldr	r2, [sp, #64]	; 0x40
   138c0:	cmp	r2, r3
   138c4:	bcs	12ba4 <close_stdout@@Base+0x360>
   138c8:	cmp	r7, #0
   138cc:	beq	13954 <close_stdout@@Base+0x1110>
   138d0:	bic	r2, r5, r5, asr #31
   138d4:	cmp	r2, #1
   138d8:	movcs	r7, r2
   138dc:	movcc	r7, #1
   138e0:	cmp	r3, r7
   138e4:	bls	12ba4 <close_stdout@@Base+0x360>
   138e8:	cmp	fp, #0
   138ec:	beq	13950 <close_stdout@@Base+0x110c>
   138f0:	cmp	r2, #1
   138f4:	ldr	r3, [sp, #64]	; 0x40
   138f8:	movls	r2, #0
   138fc:	movhi	r2, #1
   13900:	cmp	r3, #0
   13904:	movne	r2, #0
   13908:	cmp	r2, #0
   1390c:	beq	13944 <close_stdout@@Base+0x1100>
   13910:	ldr	ip, [sp, #24]
   13914:	sub	r5, r5, #1
   13918:	cmp	ip, #48	; 0x30
   1391c:	beq	142a4 <close_stdout@@Base+0x1a60>
   13920:	cmp	r5, #0
   13924:	movne	r9, #0
   13928:	beq	13944 <close_stdout@@Base+0x1100>
   1392c:	add	r9, r9, #1
   13930:	mov	r0, #32
   13934:	mov	r1, fp
   13938:	bl	11558 <fputc@plt>
   1393c:	cmp	r9, r5
   13940:	bne	1392c <close_stdout@@Base+0x10e8>
   13944:	ldr	r0, [sp, #56]	; 0x38
   13948:	mov	r1, fp
   1394c:	bl	11558 <fputc@plt>
   13950:	add	sl, sl, r7
   13954:	cmp	fp, #0
   13958:	moveq	r5, r6
   1395c:	beq	1397c <close_stdout@@Base+0x1138>
   13960:	mov	r5, #0
   13964:	add	r5, r5, #1
   13968:	mov	r0, #48	; 0x30
   1396c:	mov	r1, fp
   13970:	bl	11558 <fputc@plt>
   13974:	cmp	r5, r6
   13978:	bne	13964 <close_stdout@@Base+0x1120>
   1397c:	mov	r9, #0
   13980:	add	sl, sl, r5
   13984:	mov	r5, r9
   13988:	ldr	r3, [sp, #72]	; 0x48
   1398c:	rsb	r7, r8, r3
   13990:	mvn	r3, sl
   13994:	cmp	r7, r9
   13998:	movcs	r6, r7
   1399c:	movcc	r6, r9
   139a0:	cmp	r6, r3
   139a4:	bcs	12ba4 <close_stdout@@Base+0x360>
   139a8:	cmp	fp, #0
   139ac:	beq	13154 <close_stdout@@Base+0x910>
   139b0:	cmp	r7, r9
   139b4:	ldr	ip, [sp, #64]	; 0x40
   139b8:	movcs	r9, #0
   139bc:	movcc	r9, #1
   139c0:	cmp	ip, #0
   139c4:	movne	r9, #0
   139c8:	cmp	r9, #0
   139cc:	beq	13a04 <close_stdout@@Base+0x11c0>
   139d0:	ldr	ip, [sp, #24]
   139d4:	rsb	r5, r7, r5
   139d8:	cmp	ip, #48	; 0x30
   139dc:	beq	1408c <close_stdout@@Base+0x1848>
   139e0:	cmp	r5, #0
   139e4:	movne	r9, #0
   139e8:	beq	13a04 <close_stdout@@Base+0x11c0>
   139ec:	add	r9, r9, #1
   139f0:	mov	r0, #32
   139f4:	mov	r1, fp
   139f8:	bl	11558 <fputc@plt>
   139fc:	cmp	r9, r5
   13a00:	bne	139ec <close_stdout@@Base+0x11a8>
   13a04:	ldr	ip, [sp, #28]
   13a08:	cmp	ip, #0
   13a0c:	beq	13f54 <close_stdout@@Base+0x1710>
   13a10:	mov	r1, r8
   13a14:	mov	r2, r7
   13a18:	mov	r0, fp
   13a1c:	bl	12a40 <close_stdout@@Base+0x1fc>
   13a20:	b	13154 <close_stdout@@Base+0x910>
   13a24:	andeq	sl, r1, ip, asr r5
   13a28:	andeq	r0, r0, r0, lsr r1
   13a2c:	andeq	r8, r0, r0, lsl #3
   13a30:	andeq	r7, r0, r0, asr #30
   13a34:	andeq	r7, r0, ip, lsr #26
   13a38:	andeq	r7, r0, ip, ror #24
   13a3c:	strdeq	r6, [r0], -r4
   13a40:	cmp	r3, #79	; 0x4f
   13a44:	beq	134f8 <close_stdout@@Base+0xcb4>
   13a48:	cmp	r3, #69	; 0x45
   13a4c:	beq	141cc <close_stdout@@Base+0x1988>
   13a50:	ldr	r6, [sp, #16]
   13a54:	mov	r0, #100	; 0x64
   13a58:	ldr	ip, [sp, #40]	; 0x28
   13a5c:	ldr	r3, [r6, #20]
   13a60:	smull	ip, r1, ip, r3
   13a64:	asr	r2, r3, #31
   13a68:	rsb	r2, r2, r1, asr #5
   13a6c:	add	r1, r2, #19
   13a70:	mls	r2, r0, r2, r3
   13a74:	cmp	r2, #0
   13a78:	movge	ip, #0
   13a7c:	blt	14338 <close_stdout@@Base+0x1af4>
   13a80:	movw	r2, #63636	; 0xf894
   13a84:	movt	r2, #65535	; 0xffff
   13a88:	cmp	r3, r2
   13a8c:	rsb	ip, ip, r1
   13a90:	mov	r6, #2
   13a94:	str	r6, [sp, #64]	; 0x40
   13a98:	movge	r2, #0
   13a9c:	movlt	r2, #1
   13aa0:	str	r2, [sp, #56]	; 0x38
   13aa4:	mov	r2, #0
   13aa8:	str	r2, [sp, #72]	; 0x48
   13aac:	ldr	r0, [sp, #56]	; 0x38
   13ab0:	add	r7, sp, #136	; 0x88
   13ab4:	str	sl, [sp, #76]	; 0x4c
   13ab8:	mov	r9, #58	; 0x3a
   13abc:	cmp	r0, #0
   13ac0:	add	r3, r7, #10
   13ac4:	rsbne	ip, ip, #0
   13ac8:	ldr	sl, [sp, #32]
   13acc:	b	13ad4 <close_stdout@@Base+0x1290>
   13ad0:	mov	r3, r8
   13ad4:	umull	r6, r1, sl, ip
   13ad8:	tst	r2, #1
   13adc:	strbne	r9, [r3, #-1]
   13ae0:	subne	r3, r3, #1
   13ae4:	asrs	r2, r2, #1
   13ae8:	sub	r8, r3, #1
   13aec:	moveq	r6, #0
   13af0:	movne	r6, #1
   13af4:	lsr	r1, r1, #3
   13af8:	cmp	r1, #0
   13afc:	orrne	r6, r6, #1
   13b00:	add	r0, r1, r1, lsl #2
   13b04:	cmp	r6, #0
   13b08:	sub	r0, ip, r0, lsl #1
   13b0c:	mov	ip, r1
   13b10:	add	r0, r0, #48	; 0x30
   13b14:	strb	r0, [r3, #-1]
   13b18:	bne	13ad0 <close_stdout@@Base+0x128c>
   13b1c:	ldr	ip, [sp, #64]	; 0x40
   13b20:	ldr	r0, [sp, #56]	; 0x38
   13b24:	cmp	ip, r5
   13b28:	movlt	ip, r5
   13b2c:	ldr	sl, [sp, #76]	; 0x4c
   13b30:	cmp	r0, #0
   13b34:	str	ip, [sp, #64]	; 0x40
   13b38:	bne	13f48 <close_stdout@@Base+0x1704>
   13b3c:	ldr	r1, [sp, #72]	; 0x48
   13b40:	cmp	r1, #0
   13b44:	beq	1387c <close_stdout@@Base+0x1038>
   13b48:	mov	r3, #43	; 0x2b
   13b4c:	str	r3, [sp, #56]	; 0x38
   13b50:	ldr	r6, [sp, #24]
   13b54:	cmp	r6, #45	; 0x2d
   13b58:	beq	13e80 <close_stdout@@Base+0x163c>
   13b5c:	add	r7, r7, #10
   13b60:	ldr	ip, [sp, #64]	; 0x40
   13b64:	rsb	r6, r7, r8
   13b68:	str	r7, [sp, #72]	; 0x48
   13b6c:	add	r6, ip, r6
   13b70:	sub	r6, r6, #1
   13b74:	cmp	r6, #0
   13b78:	movgt	r7, #1
   13b7c:	bgt	138ac <close_stdout@@Base+0x1068>
   13b80:	bic	r9, r5, r5, asr #31
   13b84:	mvn	r3, sl
   13b88:	cmp	r9, #1
   13b8c:	movcs	r2, r9
   13b90:	movcc	r2, #1
   13b94:	str	r2, [sp, #76]	; 0x4c
   13b98:	cmp	r2, r3
   13b9c:	bcs	12ba4 <close_stdout@@Base+0x360>
   13ba0:	cmp	fp, #0
   13ba4:	beq	13c08 <close_stdout@@Base+0x13c4>
   13ba8:	cmp	r9, #1
   13bac:	ldr	r6, [sp, #64]	; 0x40
   13bb0:	movls	r3, #0
   13bb4:	movhi	r3, #1
   13bb8:	cmp	r6, #0
   13bbc:	movne	r3, #0
   13bc0:	cmp	r3, #0
   13bc4:	beq	13bfc <close_stdout@@Base+0x13b8>
   13bc8:	ldr	ip, [sp, #24]
   13bcc:	sub	r6, r5, #1
   13bd0:	cmp	ip, #48	; 0x30
   13bd4:	beq	14394 <close_stdout@@Base+0x1b50>
   13bd8:	cmp	r6, #0
   13bdc:	movne	r7, #0
   13be0:	beq	13bfc <close_stdout@@Base+0x13b8>
   13be4:	add	r7, r7, #1
   13be8:	mov	r0, #32
   13bec:	mov	r1, fp
   13bf0:	bl	11558 <fputc@plt>
   13bf4:	cmp	r7, r6
   13bf8:	bne	13be4 <close_stdout@@Base+0x13a0>
   13bfc:	ldr	r0, [sp, #56]	; 0x38
   13c00:	mov	r1, fp
   13c04:	bl	11558 <fputc@plt>
   13c08:	ldr	r2, [sp, #76]	; 0x4c
   13c0c:	add	sl, sl, r2
   13c10:	b	13988 <close_stdout@@Base+0x1144>
   13c14:	cmp	r3, #69	; 0x45
   13c18:	beq	134f8 <close_stdout@@Base+0xcb4>
   13c1c:	ldr	ip, [sp, #16]
   13c20:	mov	r6, #2
   13c24:	str	r6, [sp, #64]	; 0x40
   13c28:	ldr	r6, [sp, #36]	; 0x24
   13c2c:	ldr	r2, [ip, #24]
   13c30:	ldr	r1, [ip, #28]
   13c34:	add	r2, r2, #6
   13c38:	smull	r6, ip, r6, r2
   13c3c:	asr	r0, r2, #31
   13c40:	add	ip, ip, r2
   13c44:	rsb	r0, r0, ip, asr #2
   13c48:	ldr	ip, [sp, #36]	; 0x24
   13c4c:	rsb	r0, r0, r0, lsl #3
   13c50:	rsb	r2, r0, r2
   13c54:	rsb	r2, r2, r1
   13c58:	add	r2, r2, #7
   13c5c:	smull	ip, r0, ip, r2
   13c60:	asr	r1, r2, #31
   13c64:	add	r2, r0, r2
   13c68:	rsb	ip, r1, r2, asr #2
   13c6c:	b	1305c <close_stdout@@Base+0x818>
   13c70:	cmp	r3, #69	; 0x45
   13c74:	beq	14120 <close_stdout@@Base+0x18dc>
   13c78:	cmp	r3, #79	; 0x4f
   13c7c:	beq	134f8 <close_stdout@@Base+0xcb4>
   13c80:	ldr	ip, [sp, #16]
   13c84:	movw	r3, #63636	; 0xf894
   13c88:	movt	r3, #65535	; 0xffff
   13c8c:	mov	r6, #4
   13c90:	str	r6, [sp, #64]	; 0x40
   13c94:	ldr	r2, [ip, #20]
   13c98:	cmp	r2, r3
   13c9c:	add	ip, r2, #1888	; 0x760
   13ca0:	add	ip, ip, #12
   13ca4:	movge	r3, #0
   13ca8:	movlt	r3, #1
   13cac:	str	r3, [sp, #56]	; 0x38
   13cb0:	b	13aa4 <close_stdout@@Base+0x1260>
   13cb4:	cmp	r3, #69	; 0x45
   13cb8:	beq	134f8 <close_stdout@@Base+0xcb4>
   13cbc:	ldr	r6, [sp, #16]
   13cc0:	mov	ip, #2
   13cc4:	str	ip, [sp, #64]	; 0x40
   13cc8:	ldr	r1, [r6, #28]
   13ccc:	ldr	r2, [r6, #24]
   13cd0:	ldr	r6, [sp, #36]	; 0x24
   13cd4:	rsb	r2, r2, r1
   13cd8:	add	r2, r2, #7
   13cdc:	smull	r6, r0, r6, r2
   13ce0:	asr	r1, r2, #31
   13ce4:	add	r2, r0, r2
   13ce8:	rsb	ip, r1, r2, asr ip
   13cec:	b	1305c <close_stdout@@Base+0x818>
   13cf0:	ldr	ip, [sp, #28]
   13cf4:	cmp	r1, #0
   13cf8:	ldr	r6, [sp, #68]	; 0x44
   13cfc:	moveq	r8, #0
   13d00:	movne	r8, #1
   13d04:	movne	ip, #0
   13d08:	cmp	r6, #0
   13d0c:	str	ip, [sp, #28]
   13d10:	beq	14324 <close_stdout@@Base+0x1ae0>
   13d14:	mov	r0, r6
   13d18:	bl	1145c <strlen@plt>
   13d1c:	mov	r6, r0
   13d20:	bic	r3, r5, r5, asr #31
   13d24:	mvn	r2, sl
   13d28:	cmp	r6, r3
   13d2c:	movcs	r7, r6
   13d30:	movcc	r7, r3
   13d34:	cmp	r7, r2
   13d38:	bcs	12ba4 <close_stdout@@Base+0x360>
   13d3c:	cmp	fp, #0
   13d40:	beq	13594 <close_stdout@@Base+0xd50>
   13d44:	cmp	r3, r6
   13d48:	bls	13d80 <close_stdout@@Base+0x153c>
   13d4c:	ldr	ip, [sp, #24]
   13d50:	rsb	r5, r6, r5
   13d54:	cmp	ip, #48	; 0x30
   13d58:	beq	14348 <close_stdout@@Base+0x1b04>
   13d5c:	cmp	r5, #0
   13d60:	movne	r9, #0
   13d64:	beq	13d80 <close_stdout@@Base+0x153c>
   13d68:	add	r9, r9, #1
   13d6c:	mov	r0, #32
   13d70:	mov	r1, fp
   13d74:	bl	11558 <fputc@plt>
   13d78:	cmp	r9, r5
   13d7c:	bne	13d68 <close_stdout@@Base+0x1524>
   13d80:	cmp	r8, #0
   13d84:	bne	141b8 <close_stdout@@Base+0x1974>
   13d88:	ldr	ip, [sp, #28]
   13d8c:	cmp	ip, #0
   13d90:	beq	14108 <close_stdout@@Base+0x18c4>
   13d94:	mov	r2, r6
   13d98:	mov	r0, fp
   13d9c:	ldr	r1, [sp, #68]	; 0x44
   13da0:	bl	12a40 <close_stdout@@Base+0x1fc>
   13da4:	b	13594 <close_stdout@@Base+0xd50>
   13da8:	mov	r0, #100	; 0x64
   13dac:	movw	r1, #10000	; 0x2710
   13db0:	mul	r2, r0, r2
   13db4:	ldr	r0, [sp, #64]	; 0x40
   13db8:	lsr	r9, r9, #31
   13dbc:	str	r9, [sp, #56]	; 0x38
   13dc0:	mla	ip, r1, r0, r2
   13dc4:	mov	r1, #1
   13dc8:	mov	r0, #9
   13dcc:	mov	r2, #20
   13dd0:	str	r1, [sp, #72]	; 0x48
   13dd4:	str	r0, [sp, #64]	; 0x40
   13dd8:	add	ip, ip, r6
   13ddc:	b	1306c <close_stdout@@Base+0x828>
   13de0:	ldr	r0, [sp, #64]	; 0x40
   13de4:	mov	ip, #100	; 0x64
   13de8:	lsr	r9, r9, #31
   13dec:	mov	r1, #1
   13df0:	mov	r6, #6
   13df4:	str	r9, [sp, #56]	; 0x38
   13df8:	mla	ip, ip, r0, r2
   13dfc:	str	r1, [sp, #72]	; 0x48
   13e00:	mov	r2, #4
   13e04:	str	r6, [sp, #64]	; 0x40
   13e08:	b	1306c <close_stdout@@Base+0x828>
   13e0c:	cmp	r6, #0
   13e10:	bne	13da8 <close_stdout@@Base+0x1564>
   13e14:	cmp	r2, #0
   13e18:	bne	13de0 <close_stdout@@Base+0x159c>
   13e1c:	lsr	r9, r9, #31
   13e20:	ldr	ip, [sp, #64]	; 0x40
   13e24:	mov	r1, #1
   13e28:	mov	r6, #3
   13e2c:	str	r9, [sp, #56]	; 0x38
   13e30:	str	r1, [sp, #72]	; 0x48
   13e34:	str	r6, [sp, #64]	; 0x40
   13e38:	b	1306c <close_stdout@@Base+0x828>
   13e3c:	ldr	r1, [sp, #64]	; 0x40
   13e40:	mov	ip, #100	; 0x64
   13e44:	mov	r6, #1
   13e48:	lsr	r9, r9, #31
   13e4c:	str	r6, [sp, #72]	; 0x48
   13e50:	mov	r6, #5
   13e54:	mla	ip, ip, r1, r2
   13e58:	str	r9, [sp, #56]	; 0x38
   13e5c:	mov	r2, #0
   13e60:	str	r6, [sp, #64]	; 0x40
   13e64:	b	1306c <close_stdout@@Base+0x828>
   13e68:	ldr	r6, [sp, #24]
   13e6c:	cmp	r6, #45	; 0x2d
   13e70:	movne	r3, #45	; 0x2d
   13e74:	strne	r3, [sp, #56]	; 0x38
   13e78:	bne	13b5c <close_stdout@@Base+0x1318>
   13e7c:	str	r6, [sp, #56]	; 0x38
   13e80:	bic	r9, r5, r5, asr #31
   13e84:	mvn	r3, sl
   13e88:	cmp	r9, #1
   13e8c:	movcs	ip, r9
   13e90:	movcc	ip, #1
   13e94:	str	ip, [sp, #24]
   13e98:	cmp	ip, r3
   13e9c:	bcs	12ba4 <close_stdout@@Base+0x360>
   13ea0:	cmp	fp, #0
   13ea4:	beq	13f14 <close_stdout@@Base+0x16d0>
   13ea8:	cmp	r9, #1
   13eac:	ldr	r2, [sp, #64]	; 0x40
   13eb0:	movls	r3, #0
   13eb4:	movhi	r3, #1
   13eb8:	cmp	r2, #0
   13ebc:	movne	r3, #0
   13ec0:	cmp	r3, #0
   13ec4:	beq	13f08 <close_stdout@@Base+0x16c4>
   13ec8:	subs	r2, r5, #1
   13ecc:	beq	13f08 <close_stdout@@Base+0x16c4>
   13ed0:	mov	r6, #0
   13ed4:	str	r4, [sp, #72]	; 0x48
   13ed8:	mov	r3, r6
   13edc:	mov	r4, r2
   13ee0:	mov	r6, r5
   13ee4:	mov	r5, r3
   13ee8:	add	r5, r5, #1
   13eec:	mov	r0, #32
   13ef0:	mov	r1, fp
   13ef4:	bl	11558 <fputc@plt>
   13ef8:	cmp	r5, r4
   13efc:	bne	13ee8 <close_stdout@@Base+0x16a4>
   13f00:	ldr	r4, [sp, #72]	; 0x48
   13f04:	mov	r5, r6
   13f08:	ldr	r0, [sp, #56]	; 0x38
   13f0c:	mov	r1, fp
   13f10:	bl	11558 <fputc@plt>
   13f14:	ldr	r3, [sp, #24]
   13f18:	add	r7, r7, #10
   13f1c:	mov	r6, #45	; 0x2d
   13f20:	str	r7, [sp, #72]	; 0x48
   13f24:	add	sl, sl, r3
   13f28:	str	r6, [sp, #24]
   13f2c:	b	13988 <close_stdout@@Base+0x1144>
   13f30:	mov	r0, r9
   13f34:	mov	r1, r6
   13f38:	mov	r2, #1
   13f3c:	mov	r3, fp
   13f40:	bl	11348 <fwrite@plt>
   13f44:	b	13594 <close_stdout@@Base+0xd50>
   13f48:	mov	r2, #45	; 0x2d
   13f4c:	str	r2, [sp, #56]	; 0x38
   13f50:	b	13b50 <close_stdout@@Base+0x130c>
   13f54:	mov	r0, r8
   13f58:	mov	r1, r7
   13f5c:	mov	r2, #1
   13f60:	mov	r3, fp
   13f64:	bl	11348 <fwrite@plt>
   13f68:	b	13154 <close_stdout@@Base+0x910>
   13f6c:	sub	r0, r7, #3
   13f70:	mov	r1, r6
   13f74:	mov	r2, #1
   13f78:	mov	r3, fp
   13f7c:	bl	11348 <fwrite@plt>
   13f80:	b	12fa4 <close_stdout@@Base+0x760>
   13f84:	sub	r1, r7, #3
   13f88:	mov	r2, r6
   13f8c:	mov	r0, fp
   13f90:	bl	12a00 <close_stdout@@Base+0x1bc>
   13f94:	b	12fa4 <close_stdout@@Base+0x760>
   13f98:	cmp	r5, #0
   13f9c:	beq	13578 <close_stdout@@Base+0xd34>
   13fa0:	mov	r8, #0
   13fa4:	add	r8, r8, #1
   13fa8:	mov	r0, #48	; 0x30
   13fac:	mov	r1, fp
   13fb0:	bl	11558 <fputc@plt>
   13fb4:	cmp	r8, r5
   13fb8:	bne	13fa4 <close_stdout@@Base+0x1760>
   13fbc:	b	13578 <close_stdout@@Base+0xd34>
   13fc0:	cmp	r6, r3
   13fc4:	bcs	12ba4 <close_stdout@@Base+0x360>
   13fc8:	cmp	fp, #0
   13fcc:	movne	r9, #0
   13fd0:	beq	13fec <close_stdout@@Base+0x17a8>
   13fd4:	add	r9, r9, #1
   13fd8:	mov	r0, #32
   13fdc:	mov	r1, fp
   13fe0:	bl	11558 <fputc@plt>
   13fe4:	cmp	r6, r9
   13fe8:	bne	13fd4 <close_stdout@@Base+0x1790>
   13fec:	cmp	r6, r5
   13ff0:	add	sl, sl, r6
   13ff4:	movge	r5, #0
   13ff8:	movge	r9, r5
   13ffc:	rsblt	r5, r6, r5
   14000:	biclt	r9, r5, r5, asr #31
   14004:	cmp	r7, #0
   14008:	beq	13988 <close_stdout@@Base+0x1144>
   1400c:	cmp	r9, #1
   14010:	movcs	r2, r9
   14014:	movcc	r2, #1
   14018:	mvn	r3, sl
   1401c:	cmp	r2, r3
   14020:	str	r2, [sp, #76]	; 0x4c
   14024:	bcs	12ba4 <close_stdout@@Base+0x360>
   14028:	cmp	fp, #0
   1402c:	beq	14080 <close_stdout@@Base+0x183c>
   14030:	cmp	r9, #1
   14034:	ldr	r6, [sp, #64]	; 0x40
   14038:	movls	r3, #0
   1403c:	movhi	r3, #1
   14040:	cmp	r6, #0
   14044:	movne	r3, #0
   14048:	cmp	r3, #0
   1404c:	beq	14074 <close_stdout@@Base+0x1830>
   14050:	subs	r6, r5, #1
   14054:	beq	14074 <close_stdout@@Base+0x1830>
   14058:	mov	r7, #0
   1405c:	add	r7, r7, #1
   14060:	mov	r0, #32
   14064:	mov	r1, fp
   14068:	bl	11558 <fputc@plt>
   1406c:	cmp	r7, r6
   14070:	bne	1405c <close_stdout@@Base+0x1818>
   14074:	ldr	r0, [sp, #56]	; 0x38
   14078:	mov	r1, fp
   1407c:	bl	11558 <fputc@plt>
   14080:	ldr	ip, [sp, #76]	; 0x4c
   14084:	add	sl, sl, ip
   14088:	b	13988 <close_stdout@@Base+0x1144>
   1408c:	cmp	r5, #0
   14090:	beq	13a04 <close_stdout@@Base+0x11c0>
   14094:	mov	r9, #0
   14098:	add	r9, r9, #1
   1409c:	mov	r0, #48	; 0x30
   140a0:	mov	r1, fp
   140a4:	bl	11558 <fputc@plt>
   140a8:	cmp	r9, r5
   140ac:	bne	14098 <close_stdout@@Base+0x1854>
   140b0:	b	13a04 <close_stdout@@Base+0x11c0>
   140b4:	cmp	r5, #0
   140b8:	beq	12f7c <close_stdout@@Base+0x738>
   140bc:	add	r9, r9, #1
   140c0:	mov	r0, #48	; 0x30
   140c4:	mov	r1, fp
   140c8:	bl	11558 <fputc@plt>
   140cc:	cmp	r9, r5
   140d0:	bne	140bc <close_stdout@@Base+0x1878>
   140d4:	b	12f7c <close_stdout@@Base+0x738>
   140d8:	bic	r9, r5, r5, asr #31
   140dc:	b	13988 <close_stdout@@Base+0x1144>
   140e0:	cmp	r5, #0
   140e4:	beq	13130 <close_stdout@@Base+0x8ec>
   140e8:	mov	r8, #0
   140ec:	add	r8, r8, #1
   140f0:	mov	r0, #48	; 0x30
   140f4:	mov	r1, fp
   140f8:	bl	11558 <fputc@plt>
   140fc:	cmp	r8, r5
   14100:	bne	140ec <close_stdout@@Base+0x18a8>
   14104:	b	13130 <close_stdout@@Base+0x8ec>
   14108:	mov	r1, r6
   1410c:	ldr	r0, [sp, #68]	; 0x44
   14110:	mov	r2, #1
   14114:	mov	r3, fp
   14118:	bl	11348 <fwrite@plt>
   1411c:	b	13594 <close_stdout@@Base+0xd50>
   14120:	mov	r6, #0
   14124:	str	r6, [sp, #64]	; 0x40
   14128:	b	13088 <close_stdout@@Base+0x844>
   1412c:	mov	ip, #0
   14130:	str	ip, [sp, #64]	; 0x40
   14134:	b	13088 <close_stdout@@Base+0x844>
   14138:	add	r0, r4, #2
   1413c:	mov	r7, #1
   14140:	mov	r1, r0
   14144:	ldrb	r2, [r0], #1
   14148:	add	r7, r7, #1
   1414c:	cmp	r2, #58	; 0x3a
   14150:	bne	136e0 <close_stdout@@Base+0xe9c>
   14154:	b	14140 <close_stdout@@Base+0x18fc>
   14158:	ldr	ip, [sp, #36]	; 0x24
   1415c:	asr	r2, r1, #31
   14160:	mov	r6, #2
   14164:	str	r6, [sp, #64]	; 0x40
   14168:	smull	ip, r0, ip, r1
   1416c:	add	r1, r0, r1
   14170:	rsb	ip, r2, r1, asr r6
   14174:	add	ip, ip, #1
   14178:	b	1305c <close_stdout@@Base+0x818>
   1417c:	movw	r1, #63636	; 0xf894
   14180:	movt	r1, #65535	; 0xffff
   14184:	rsb	r1, r7, r1
   14188:	add	ip, r9, #1888	; 0x760
   1418c:	cmp	r9, r1
   14190:	add	ip, ip, #12
   14194:	mov	r2, #0
   14198:	mov	r6, #4
   1419c:	movge	r1, #0
   141a0:	movlt	r1, #1
   141a4:	add	ip, ip, r7
   141a8:	str	r1, [sp, #56]	; 0x38
   141ac:	str	r2, [sp, #72]	; 0x48
   141b0:	str	r6, [sp, #64]	; 0x40
   141b4:	b	1306c <close_stdout@@Base+0x828>
   141b8:	mov	r2, r6
   141bc:	mov	r0, fp
   141c0:	ldr	r1, [sp, #68]	; 0x44
   141c4:	bl	12a00 <close_stdout@@Base+0x1bc>
   141c8:	b	13594 <close_stdout@@Base+0xd50>
   141cc:	mov	ip, #0
   141d0:	mov	r2, #32
   141d4:	str	ip, [sp, #56]	; 0x38
   141d8:	strb	r2, [sp, #124]	; 0x7c
   141dc:	mov	r2, #37	; 0x25
   141e0:	str	ip, [sp, #64]	; 0x40
   141e4:	strb	r2, [sp, #125]	; 0x7d
   141e8:	b	12fec <close_stdout@@Base+0x7a8>
   141ec:	mov	r5, #9
   141f0:	ldr	ip, [sp, #1204]	; 0x4b4
   141f4:	str	r5, [sp, #64]	; 0x40
   141f8:	b	1305c <close_stdout@@Base+0x818>
   141fc:	ldrb	r2, [r4]
   14200:	b	13668 <close_stdout@@Base+0xe24>
   14204:	sub	r1, r1, #1
   14208:	tst	r1, #3
   1420c:	movwne	r1, #365	; 0x16d
   14210:	bne	14264 <close_stdout@@Base+0x1a20>
   14214:	ldr	r0, [sp, #40]	; 0x28
   14218:	smull	r6, r0, r0, r1
   1421c:	mov	r6, #100	; 0x64
   14220:	str	r0, [sp, #72]	; 0x48
   14224:	asr	r0, r1, #31
   14228:	ldr	ip, [sp, #72]	; 0x48
   1422c:	rsb	ip, r0, ip, asr #5
   14230:	mls	r6, r6, ip, r1
   14234:	cmp	r6, #0
   14238:	movwne	r1, #366	; 0x16e
   1423c:	bne	14264 <close_stdout@@Base+0x1a20>
   14240:	ldr	ip, [sp, #72]	; 0x48
   14244:	mov	r6, #400	; 0x190
   14248:	rsb	r0, r0, ip, asr #7
   1424c:	movw	ip, #366	; 0x16e
   14250:	mls	r1, r6, r0, r1
   14254:	movw	r0, #365	; 0x16d
   14258:	cmp	r1, #0
   1425c:	moveq	r1, ip
   14260:	movne	r1, r0
   14264:	ldr	r6, [sp, #56]	; 0x38
   14268:	add	r0, r7, r1
   1426c:	ldr	ip, [sp, #36]	; 0x24
   14270:	mvn	r7, #0
   14274:	rsb	r1, r6, r0
   14278:	add	r1, r1, #380	; 0x17c
   1427c:	add	r1, r1, #2
   14280:	smull	ip, r6, ip, r1
   14284:	asr	ip, r1, #31
   14288:	add	r6, r6, r1
   1428c:	rsb	ip, ip, r6, asr #2
   14290:	rsb	ip, ip, ip, lsl #3
   14294:	rsb	r1, ip, r1
   14298:	rsb	r1, r1, r0
   1429c:	add	r1, r1, #3
   142a0:	b	13494 <close_stdout@@Base+0xc50>
   142a4:	cmp	r5, #0
   142a8:	beq	13944 <close_stdout@@Base+0x1100>
   142ac:	mov	r9, #0
   142b0:	add	r9, r9, #1
   142b4:	mov	r0, #48	; 0x30
   142b8:	mov	r1, fp
   142bc:	bl	11558 <fputc@plt>
   142c0:	cmp	r9, r5
   142c4:	bne	142b0 <close_stdout@@Base+0x1a6c>
   142c8:	b	13944 <close_stdout@@Base+0x1100>
   142cc:	cmp	r5, #0
   142d0:	beq	137e4 <close_stdout@@Base+0xfa0>
   142d4:	mov	r6, #0
   142d8:	add	r6, r6, #1
   142dc:	mov	r0, #48	; 0x30
   142e0:	mov	r1, fp
   142e4:	bl	11558 <fputc@plt>
   142e8:	cmp	r6, r5
   142ec:	bne	142d8 <close_stdout@@Base+0x1a94>
   142f0:	b	137e4 <close_stdout@@Base+0xfa0>
   142f4:	cmp	r5, #0
   142f8:	beq	13268 <close_stdout@@Base+0xa24>
   142fc:	mov	r6, #0
   14300:	add	r6, r6, #1
   14304:	mov	r0, #48	; 0x30
   14308:	mov	r1, fp
   1430c:	bl	11558 <fputc@plt>
   14310:	cmp	r6, r5
   14314:	bne	14300 <close_stdout@@Base+0x1abc>
   14318:	b	13268 <close_stdout@@Base+0xa24>
   1431c:	mov	r0, r2
   14320:	b	13654 <close_stdout@@Base+0xe10>
   14324:	ldr	ip, [pc, #-2288]	; 13a3c <close_stdout@@Base+0x11f8>
   14328:	ldr	r6, [sp, #68]	; 0x44
   1432c:	add	ip, pc, ip
   14330:	str	ip, [sp, #68]	; 0x44
   14334:	b	13d20 <close_stdout@@Base+0x14dc>
   14338:	cmp	r1, #0
   1433c:	movle	ip, #0
   14340:	movgt	ip, #1
   14344:	b	13a80 <close_stdout@@Base+0x123c>
   14348:	cmp	r5, #0
   1434c:	beq	13d80 <close_stdout@@Base+0x153c>
   14350:	mov	r9, #0
   14354:	add	r9, r9, #1
   14358:	mov	r0, #48	; 0x30
   1435c:	mov	r1, fp
   14360:	bl	11558 <fputc@plt>
   14364:	cmp	r9, r5
   14368:	bne	14354 <close_stdout@@Base+0x1b10>
   1436c:	b	13d80 <close_stdout@@Base+0x153c>
   14370:	movw	r2, #63636	; 0xf894
   14374:	movt	r2, #65535	; 0xffff
   14378:	rsb	r2, r7, r2
   1437c:	cmp	r9, r2
   14380:	blt	136bc <close_stdout@@Base+0xe78>
   14384:	mov	r6, #2
   14388:	add	ip, ip, #100	; 0x64
   1438c:	str	r6, [sp, #64]	; 0x40
   14390:	b	1305c <close_stdout@@Base+0x818>
   14394:	cmp	r6, #0
   14398:	beq	13bfc <close_stdout@@Base+0x13b8>
   1439c:	mov	r7, #0
   143a0:	add	r7, r7, #1
   143a4:	mov	r0, #48	; 0x30
   143a8:	mov	r1, fp
   143ac:	bl	11558 <fputc@plt>
   143b0:	cmp	r7, r6
   143b4:	bne	143a0 <close_stdout@@Base+0x1b5c>
   143b8:	b	13bfc <close_stdout@@Base+0x13b8>
   143bc:	cmp	r5, #0
   143c0:	beq	1431c <close_stdout@@Base+0x1ad8>
   143c4:	mov	r7, r3
   143c8:	add	r7, r7, #1
   143cc:	mov	r0, #48	; 0x30
   143d0:	mov	r1, fp
   143d4:	bl	11558 <fputc@plt>
   143d8:	cmp	r7, r5
   143dc:	bne	143c8 <close_stdout@@Base+0x1b84>
   143e0:	b	13650 <close_stdout@@Base+0xe0c>
   143e4:	ldr	ip, [sp, #1204]	; 0x4b4
   143e8:	str	r5, [sp, #64]	; 0x40
   143ec:	b	1305c <close_stdout@@Base+0x818>
   143f0:	bl	11318 <__stack_chk_fail@plt>
   143f4:	push	{r4, lr}
   143f8:	sub	sp, sp, #8
   143fc:	mov	lr, r2
   14400:	mov	r4, r1
   14404:	ldr	ip, [sp, #16]
   14408:	mov	r1, r0
   1440c:	str	r3, [sp]
   14410:	mov	r2, r4
   14414:	mov	r3, lr
   14418:	mov	r0, #0
   1441c:	str	ip, [sp, #4]
   14420:	bl	12a80 <close_stdout@@Base+0x23c>
   14424:	add	sp, sp, #8
   14428:	pop	{r4, pc}
   1442c:	ldr	r3, [pc, #108]	; 144a0 <close_stdout@@Base+0x1c5c>
   14430:	mov	r1, r0
   14434:	ldr	r2, [pc, #104]	; 144a4 <close_stdout@@Base+0x1c60>
   14438:	add	r3, pc, r3
   1443c:	push	{r4, r5, lr}
   14440:	sub	sp, sp, #20
   14444:	ldr	r4, [r3, r2]
   14448:	mov	r5, r0
   1444c:	mov	r0, #0
   14450:	ldr	r3, [r4]
   14454:	str	r3, [sp, #12]
   14458:	bl	112c4 <clock_gettime@plt>
   1445c:	cmp	r0, #0
   14460:	beq	14484 <close_stdout@@Base+0x1c40>
   14464:	mov	r1, #0
   14468:	add	r0, sp, #4
   1446c:	bl	11384 <gettimeofday@plt>
   14470:	ldr	r3, [sp, #8]
   14474:	mov	r1, #1000	; 0x3e8
   14478:	ldr	r2, [sp, #4]
   1447c:	mul	r3, r1, r3
   14480:	stm	r5, {r2, r3}
   14484:	ldr	r2, [sp, #12]
   14488:	ldr	r3, [r4]
   1448c:	cmp	r2, r3
   14490:	bne	1449c <close_stdout@@Base+0x1c58>
   14494:	add	sp, sp, #20
   14498:	pop	{r4, r5, pc}
   1449c:	bl	11318 <__stack_chk_fail@plt>
   144a0:	andeq	r8, r1, r0, asr #23
   144a4:	andeq	r0, r0, r0, lsr r1
   144a8:	push	{r4, r5, r6, r7, r8, lr}
   144ac:	mov	r4, r0
   144b0:	mov	r5, r1
   144b4:	cmp	r4, #0
   144b8:	sbcs	r3, r5, #0
   144bc:	add	r6, r2, #19
   144c0:	mov	r3, #0
   144c4:	strb	r3, [r2, #20]
   144c8:	blt	14518 <close_stdout@@Base+0x1cd4>
   144cc:	mov	r0, r4
   144d0:	mov	r1, r5
   144d4:	mov	r2, #10
   144d8:	mov	r3, #0
   144dc:	bl	191ac <close_stdout@@Base+0x6968>
   144e0:	mov	r7, r6
   144e4:	mov	r0, r4
   144e8:	mov	r1, r5
   144ec:	mov	r3, #0
   144f0:	add	ip, r2, #48	; 0x30
   144f4:	mov	r2, #10
   144f8:	strb	ip, [r6], #-1
   144fc:	bl	191ac <close_stdout@@Base+0x6968>
   14500:	mov	r4, r0
   14504:	mov	r5, r1
   14508:	orrs	r3, r4, r5
   1450c:	bne	144cc <close_stdout@@Base+0x1c88>
   14510:	mov	r0, r7
   14514:	pop	{r4, r5, r6, r7, r8, pc}
   14518:	mov	r0, r4
   1451c:	mov	r1, r5
   14520:	mov	r2, #10
   14524:	mov	r3, #0
   14528:	bl	191ac <close_stdout@@Base+0x6968>
   1452c:	mov	r8, r6
   14530:	mov	r0, r4
   14534:	mov	r1, r5
   14538:	mov	r3, #0
   1453c:	rsb	ip, r2, #48	; 0x30
   14540:	mov	r2, #10
   14544:	strb	ip, [r6], #-1
   14548:	bl	191ac <close_stdout@@Base+0x6968>
   1454c:	mov	r4, r0
   14550:	mov	r5, r1
   14554:	orrs	r3, r4, r5
   14558:	bne	14518 <close_stdout@@Base+0x1cd4>
   1455c:	mov	r7, r6
   14560:	mov	r3, #45	; 0x2d
   14564:	mov	r0, r7
   14568:	strb	r3, [r8, #-1]
   1456c:	pop	{r4, r5, r6, r7, r8, pc}
   14570:	mov	ip, r0
   14574:	push	{r4, r5, r6, r7, r8}
   14578:	sub	sp, sp, #20
   1457c:	ldr	r4, [ip, #92]	; 0x5c
   14580:	add	r0, sp, #4
   14584:	cmp	r4, #0
   14588:	stm	r0, {r1, r2, r3}
   1458c:	ldr	r3, [sp, #8]
   14590:	ldr	r2, [sp, #12]
   14594:	beq	145a4 <close_stdout@@Base+0x1d60>
   14598:	ldr	r1, [ip, #32]
   1459c:	cmp	r1, #0
   145a0:	beq	14604 <close_stdout@@Base+0x1dc0>
   145a4:	cmp	r2, #4
   145a8:	bhi	1463c <close_stdout@@Base+0x1df8>
   145ac:	cmp	r2, #2
   145b0:	ldr	r2, [ip, #108]	; 0x6c
   145b4:	add	r2, r2, #1
   145b8:	str	r2, [ip, #108]	; 0x6c
   145bc:	bls	1462c <close_stdout@@Base+0x1de8>
   145c0:	movw	r1, #34079	; 0x851f
   145c4:	movt	r1, #20971	; 0x51eb
   145c8:	asr	r4, r3, #31
   145cc:	mov	r0, #100	; 0x64
   145d0:	smull	r5, r2, r1, r3
   145d4:	rsb	r2, r4, r2, asr #5
   145d8:	str	r2, [ip, #44]	; 0x2c
   145dc:	mls	r3, r0, r2, r3
   145e0:	str	r3, [ip, #48]	; 0x30
   145e4:	mov	r3, #0
   145e8:	mov	r2, #2
   145ec:	str	r3, [ip, #52]	; 0x34
   145f0:	str	r3, [ip, #56]	; 0x38
   145f4:	str	r2, [ip, #20]
   145f8:	add	sp, sp, #20
   145fc:	pop	{r4, r5, r6, r7, r8}
   14600:	bx	lr
   14604:	ldrb	r1, [ip, #89]	; 0x59
   14608:	cmp	r1, #0
   1460c:	bne	145a4 <close_stdout@@Base+0x1d60>
   14610:	ldr	r1, [ip, #108]	; 0x6c
   14614:	cmp	r1, #0
   14618:	bne	146a0 <close_stdout@@Base+0x1e5c>
   1461c:	cmp	r2, #2
   14620:	movls	r2, #1
   14624:	strls	r2, [ip, #108]	; 0x6c
   14628:	bhi	146a0 <close_stdout@@Base+0x1e5c>
   1462c:	str	r3, [ip, #44]	; 0x2c
   14630:	mov	r3, #0
   14634:	str	r3, [ip, #48]	; 0x30
   14638:	b	145e4 <close_stdout@@Base+0x1da0>
   1463c:	movw	r0, #34079	; 0x851f
   14640:	movt	r0, #20971	; 0x51eb
   14644:	asr	r6, r3, #31
   14648:	sub	r2, r2, #4
   1464c:	smull	r5, r1, r0, r3
   14650:	str	r2, [ip, #32]
   14654:	movw	r7, #35757	; 0x8bad
   14658:	movt	r7, #26843	; 0x68db
   1465c:	mov	r5, #100	; 0x64
   14660:	add	r4, r4, #1
   14664:	smull	r8, r7, r7, r3
   14668:	rsb	r1, r6, r1, asr #5
   1466c:	str	r4, [ip, #92]	; 0x5c
   14670:	smull	r2, r0, r0, r1
   14674:	asr	r2, r1, #31
   14678:	mls	r3, r5, r1, r3
   1467c:	rsb	r6, r6, r7, asr #12
   14680:	str	r6, [ip, #28]
   14684:	rsb	r0, r2, r0, asr #5
   14688:	mls	r1, r5, r0, r1
   1468c:	str	r3, [ip, #40]	; 0x28
   14690:	str	r1, [ip, #36]	; 0x24
   14694:	add	sp, sp, #20
   14698:	pop	{r4, r5, r6, r7, r8}
   1469c:	bx	lr
   146a0:	ldm	r0, {r0, r1, r2}
   146a4:	add	ip, ip, #24
   146a8:	stm	ip, {r0, r1, r2}
   146ac:	b	145f8 <close_stdout@@Base+0x1db4>
   146b0:	sub	sp, sp, #16
   146b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   146b8:	add	sl, sp, #36	; 0x24
   146bc:	ldr	ip, [sp, #64]	; 0x40
   146c0:	mov	r4, #1
   146c4:	ldr	r9, [sp, #60]	; 0x3c
   146c8:	ldr	r8, [r0, #84]	; 0x54
   146cc:	stm	sl, {r1, r2, r3}
   146d0:	mla	r8, r9, ip, r8
   146d4:	ldr	r7, [sp, #56]	; 0x38
   146d8:	ldr	fp, [sp, #52]	; 0x34
   146dc:	ldr	r2, [sp, #44]	; 0x2c
   146e0:	ldr	r6, [r0, #80]	; 0x50
   146e4:	ldr	r5, [r0, #76]	; 0x4c
   146e8:	str	r8, [r0, #84]	; 0x54
   146ec:	ldr	r8, [r0, #68]	; 0x44
   146f0:	mla	r6, r7, ip, r6
   146f4:	ldr	r1, [r0, #72]	; 0x48
   146f8:	mla	r5, fp, ip, r5
   146fc:	ldr	sl, [sp, #48]	; 0x30
   14700:	mla	r3, r2, ip, r8
   14704:	ldr	fp, [r0, #60]	; 0x3c
   14708:	ldr	r9, [r0, #64]	; 0x40
   1470c:	ldr	r7, [sp, #36]	; 0x24
   14710:	ldr	r2, [sp, #40]	; 0x28
   14714:	mla	r1, sl, ip, r1
   14718:	str	r6, [r0, #80]	; 0x50
   1471c:	mla	r9, r2, ip, r9
   14720:	str	r5, [r0, #76]	; 0x4c
   14724:	mla	ip, r7, ip, fp
   14728:	str	r3, [r0, #68]	; 0x44
   1472c:	str	r1, [r0, #72]	; 0x48
   14730:	strb	r4, [r0, #89]	; 0x59
   14734:	str	r9, [r0, #64]	; 0x40
   14738:	str	ip, [r0, #60]	; 0x3c
   1473c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   14740:	add	sp, sp, #16
   14744:	bx	lr
   14748:	push	{r4, r5, lr}
   1474c:	cmn	r2, #1
   14750:	sub	sp, sp, #12
   14754:	mov	r4, r0
   14758:	str	r2, [sp, #4]
   1475c:	beq	147cc <close_stdout@@Base+0x1f88>
   14760:	ldr	r5, [r1]
   14764:	ldr	r0, [r1, #4]
   14768:	ldr	r2, [r4, #4]
   1476c:	ldr	r3, [r4]
   14770:	eor	r0, r0, r2
   14774:	ldr	ip, [r4, #8]
   14778:	eor	r3, r5, r3
   1477c:	ldr	r2, [r1, #8]
   14780:	orr	r0, r0, r3
   14784:	ldr	r5, [r1, #12]
   14788:	ldr	r3, [r4, #12]
   1478c:	eor	r2, r2, ip
   14790:	orr	r2, r0, r2
   14794:	ldr	ip, [r1, #16]
   14798:	eor	r3, r5, r3
   1479c:	ldr	r0, [r4, #16]
   147a0:	orr	r2, r2, r3
   147a4:	ldr	r1, [r1, #20]
   147a8:	ldr	r3, [r4, #20]
   147ac:	eor	r0, ip, r0
   147b0:	orr	r2, r2, r0
   147b4:	eor	r3, r1, r3
   147b8:	orrs	r3, r2, r3
   147bc:	movne	r0, #0
   147c0:	moveq	r0, #1
   147c4:	add	sp, sp, #12
   147c8:	pop	{r4, r5, pc}
   147cc:	add	r0, sp, #4
   147d0:	bl	11408 <localtime@plt>
   147d4:	subs	r1, r0, #0
   147d8:	bne	14760 <close_stdout@@Base+0x1f1c>
   147dc:	mov	r0, r1
   147e0:	b	147c4 <close_stdout@@Base+0x1f80>
   147e4:	push	{r3, r4, r5, lr}
   147e8:	mov	r5, r0
   147ec:	ldr	r0, [pc, #60]	; 14830 <close_stdout@@Base+0x1fec>
   147f0:	add	r0, pc, r0
   147f4:	bl	113c0 <getenv@plt>
   147f8:	subs	r4, r0, #0
   147fc:	popeq	{r3, r4, r5, pc}
   14800:	bl	1145c <strlen@plt>
   14804:	add	r2, r0, #1
   14808:	cmp	r2, #100	; 0x64
   1480c:	bhi	14820 <close_stdout@@Base+0x1fdc>
   14810:	mov	r0, r5
   14814:	mov	r1, r4
   14818:	pop	{r3, r4, r5, lr}
   1481c:	b	112dc <memcpy@plt>
   14820:	mov	r0, r4
   14824:	mov	r1, r2
   14828:	pop	{r3, r4, r5, lr}
   1482c:	b	188c0 <close_stdout@@Base+0x607c>
   14830:	andeq	r6, r0, r4, lsr #28
   14834:	cmp	r3, #2
   14838:	push	{r4, r5}
   1483c:	ldr	r3, [sp, #8]
   14840:	bhi	1488c <close_stdout@@Base+0x2048>
   14844:	cmp	r3, #0
   14848:	movlt	r3, #100	; 0x64
   1484c:	mullt	r2, r3, r2
   14850:	blt	14894 <close_stdout@@Base+0x2050>
   14854:	rsb	r2, r2, r2, lsl #4
   14858:	cmp	r1, #0
   1485c:	rsbne	r3, r3, #0
   14860:	lsl	r2, r2, #2
   14864:	add	r2, r2, r3
   14868:	eor	r3, r2, r2, asr #31
   1486c:	sub	r3, r3, r2, asr #31
   14870:	cmp	r3, #1440	; 0x5a0
   14874:	ldrgt	r3, [r0]
   14878:	addgt	r3, r3, #1
   1487c:	strgt	r3, [r0]
   14880:	mov	r0, r2
   14884:	pop	{r4, r5}
   14888:	bx	lr
   1488c:	cmp	r3, #0
   14890:	bge	14854 <close_stdout@@Base+0x2010>
   14894:	movw	r1, #34079	; 0x851f
   14898:	movt	r1, #20971	; 0x51eb
   1489c:	asr	r4, r2, #31
   148a0:	mov	ip, #100	; 0x64
   148a4:	smull	r5, r3, r1, r2
   148a8:	rsb	r3, r4, r3, asr #5
   148ac:	mls	r2, ip, r3, r2
   148b0:	rsb	r3, r3, r3, lsl #4
   148b4:	add	r2, r2, r3, lsl #2
   148b8:	b	14868 <close_stdout@@Base+0x2024>
   148bc:	push	{r4, r5, r6, lr}
   148c0:	mov	r6, r0
   148c4:	ldr	r4, [pc, #172]	; 14978 <close_stdout@@Base+0x2134>
   148c8:	mov	r5, r1
   148cc:	ldr	r3, [pc, #168]	; 1497c <close_stdout@@Base+0x2138>
   148d0:	add	r4, pc, r4
   148d4:	add	r3, pc, r3
   148d8:	b	148e8 <close_stdout@@Base+0x20a4>
   148dc:	ldr	r3, [r4, #12]!
   148e0:	cmp	r3, #0
   148e4:	beq	14904 <close_stdout@@Base+0x20c0>
   148e8:	mov	r1, r3
   148ec:	mov	r0, r5
   148f0:	bl	11294 <strcmp@plt>
   148f4:	cmp	r0, #0
   148f8:	bne	148dc <close_stdout@@Base+0x2098>
   148fc:	mov	r0, r4
   14900:	pop	{r4, r5, r6, pc}
   14904:	ldr	r1, [r6, #116]	; 0x74
   14908:	add	r4, r6, #116	; 0x74
   1490c:	cmp	r1, #0
   14910:	bne	14958 <close_stdout@@Base+0x2114>
   14914:	ldr	r4, [pc, #100]	; 14980 <close_stdout@@Base+0x213c>
   14918:	ldr	r1, [pc, #100]	; 14984 <close_stdout@@Base+0x2140>
   1491c:	add	r4, pc, r4
   14920:	add	r1, pc, r1
   14924:	add	r4, r4, #48	; 0x30
   14928:	b	14938 <close_stdout@@Base+0x20f4>
   1492c:	ldr	r1, [r4, #12]!
   14930:	cmp	r1, #0
   14934:	beq	14970 <close_stdout@@Base+0x212c>
   14938:	mov	r0, r5
   1493c:	bl	11294 <strcmp@plt>
   14940:	cmp	r0, #0
   14944:	bne	1492c <close_stdout@@Base+0x20e8>
   14948:	b	148fc <close_stdout@@Base+0x20b8>
   1494c:	ldr	r1, [r4, #12]!
   14950:	cmp	r1, #0
   14954:	beq	14914 <close_stdout@@Base+0x20d0>
   14958:	mov	r0, r5
   1495c:	bl	11294 <strcmp@plt>
   14960:	cmp	r0, #0
   14964:	bne	1494c <close_stdout@@Base+0x2108>
   14968:	mov	r0, r4
   1496c:	pop	{r4, r5, r6, pc}
   14970:	mov	r0, r1
   14974:	pop	{r4, r5, r6, pc}
   14978:	andeq	r7, r1, r0, ror pc
   1497c:	andeq	r6, r0, r4, asr #26
   14980:	andeq	r7, r1, r4, lsr #30
   14984:	strdeq	r6, [r0], -ip
   14988:	ldr	r1, [pc, #3964]	; 1590c <close_stdout@@Base+0x30c8>
   1498c:	mov	r2, #0
   14990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14994:	add	r1, pc, r1
   14998:	ldr	r4, [pc, #3952]	; 15910 <close_stdout@@Base+0x30cc>
   1499c:	sub	sp, sp, #748	; 0x2ec
   149a0:	movw	r3, #64912	; 0xfd90
   149a4:	movt	r3, #65535	; 0xffff
   149a8:	str	r2, [sp, #36]	; 0x24
   149ac:	mov	sl, r0
   149b0:	ldr	r4, [r1, r4]
   149b4:	add	r1, sp, #744	; 0x2e8
   149b8:	ldr	ip, [pc, #3924]	; 15914 <close_stdout@@Base+0x30d0>
   149bc:	add	r8, sp, #160	; 0xa0
   149c0:	ldr	r0, [pc, #3920]	; 15918 <close_stdout@@Base+0x30d4>
   149c4:	mov	r5, r2
   149c8:	strh	r2, [r1, r3]
   149cc:	add	ip, pc, ip
   149d0:	ldr	r3, [r4]
   149d4:	add	r0, pc, r0
   149d8:	str	r4, [sp, #44]	; 0x2c
   149dc:	mvn	fp, #1
   149e0:	ldr	r4, [pc, #3892]	; 1591c <close_stdout@@Base+0x30d8>
   149e4:	add	r7, sp, #120	; 0x78
   149e8:	add	ip, ip, #1136	; 0x470
   149ec:	add	r0, r0, #1008	; 0x3f0
   149f0:	movw	r9, #39321	; 0x9999
   149f4:	add	r4, pc, r4
   149f8:	movt	r9, #6553	; 0x1999
   149fc:	str	r7, [sp, #32]
   14a00:	str	ip, [sp, #76]	; 0x4c
   14a04:	str	r0, [sp, #72]	; 0x48
   14a08:	str	r3, [sp, #740]	; 0x2e4
   14a0c:	str	r4, [sp, #40]	; 0x28
   14a10:	str	r9, [sp, #68]	; 0x44
   14a14:	ldr	r9, [sp, #40]	; 0x28
   14a18:	ldrsb	r4, [r9, r5]
   14a1c:	cmn	r4, #93	; 0x5d
   14a20:	beq	14a78 <close_stdout@@Base+0x2234>
   14a24:	cmn	fp, #2
   14a28:	beq	14e28 <close_stdout@@Base+0x25e4>
   14a2c:	cmp	fp, #0
   14a30:	ble	14ec0 <close_stdout@@Base+0x267c>
   14a34:	movw	r3, #277	; 0x115
   14a38:	cmp	fp, r3
   14a3c:	movhi	r3, #2
   14a40:	ldrls	r3, [pc, #3800]	; 15920 <close_stdout@@Base+0x30dc>
   14a44:	addls	r3, pc, r3
   14a48:	addls	r3, r3, fp
   14a4c:	ldrbls	r3, [r3, #116]	; 0x74
   14a50:	add	r4, r4, r3
   14a54:	cmp	r4, #112	; 0x70
   14a58:	bhi	14a78 <close_stdout@@Base+0x2234>
   14a5c:	ldr	r2, [pc, #3776]	; 15924 <close_stdout@@Base+0x30e0>
   14a60:	add	r2, pc, r2
   14a64:	add	r4, r2, r4
   14a68:	add	r2, r4, #396	; 0x18c
   14a6c:	ldrsb	r2, [r2]
   14a70:	cmp	r2, r3
   14a74:	beq	14b30 <close_stdout@@Base+0x22ec>
   14a78:	ldr	r3, [pc, #3752]	; 15928 <close_stdout@@Base+0x30e4>
   14a7c:	add	r3, pc, r3
   14a80:	add	r3, r3, r5
   14a84:	ldrb	r4, [r3, #628]	; 0x274
   14a88:	cmp	r4, #0
   14a8c:	bne	14b40 <close_stdout@@Base+0x22fc>
   14a90:	ldr	r4, [sp, #36]	; 0x24
   14a94:	cmp	r4, #3
   14a98:	beq	14df8 <close_stdout@@Base+0x25b4>
   14a9c:	ldr	r1, [pc, #3720]	; 1592c <close_stdout@@Base+0x30e8>
   14aa0:	ldr	r3, [sp, #32]
   14aa4:	add	r1, pc, r1
   14aa8:	b	14ac0 <close_stdout@@Base+0x227c>
   14aac:	cmp	r3, r7
   14ab0:	beq	14e08 <close_stdout@@Base+0x25c4>
   14ab4:	ldrsh	r5, [ip, #-2]
   14ab8:	sub	r8, r8, #28
   14abc:	sub	r3, r3, #2
   14ac0:	ldrsb	r2, [r1, r5]
   14ac4:	mov	ip, r3
   14ac8:	cmn	r2, #93	; 0x5d
   14acc:	beq	14aac <close_stdout@@Base+0x2268>
   14ad0:	add	r2, r2, #1
   14ad4:	cmp	r2, #112	; 0x70
   14ad8:	bhi	14aac <close_stdout@@Base+0x2268>
   14adc:	add	r2, r1, r2
   14ae0:	ldrb	r0, [r2, #396]	; 0x18c
   14ae4:	cmp	r0, #1
   14ae8:	bne	14aac <close_stdout@@Base+0x2268>
   14aec:	ldrb	r5, [r2, #512]	; 0x200
   14af0:	cmp	r5, #0
   14af4:	beq	14aac <close_stdout@@Base+0x2268>
   14af8:	ldr	r9, [sp, #80]	; 0x50
   14afc:	add	r6, sp, #92	; 0x5c
   14b00:	ldr	r4, [sp, #84]	; 0x54
   14b04:	str	r9, [sp, #96]	; 0x60
   14b08:	mov	r9, #3
   14b0c:	str	r4, [sp, #100]	; 0x64
   14b10:	add	r4, r8, #28
   14b14:	ldm	r6!, {r0, r1, r2, r3}
   14b18:	mov	r8, r4
   14b1c:	str	r9, [sp, #36]	; 0x24
   14b20:	stmia	r4!, {r0, r1, r2, r3}
   14b24:	ldm	r6, {r0, r1, r2}
   14b28:	stm	r4, {r0, r1, r2}
   14b2c:	b	14dd0 <close_stdout@@Base+0x258c>
   14b30:	ldrb	r5, [r4, #512]	; 0x200
   14b34:	cmp	r5, #0
   14b38:	bne	14f90 <close_stdout@@Base+0x274c>
   14b3c:	mov	r4, r5
   14b40:	ldr	r3, [pc, #3560]	; 15930 <close_stdout@@Base+0x30ec>
   14b44:	sub	r1, r4, #4
   14b48:	add	r3, pc, r3
   14b4c:	add	r3, r3, r4
   14b50:	ldrb	r6, [r3, #744]	; 0x2e8
   14b54:	rsb	r2, r6, #1
   14b58:	rsb	r2, r2, r2, lsl #3
   14b5c:	add	r3, r8, r2, lsl #2
   14b60:	ldr	r2, [r8, r2, lsl #2]
   14b64:	ldr	r9, [r3, #4]
   14b68:	ldr	r0, [r3, #20]
   14b6c:	str	r2, [sp, #48]	; 0x30
   14b70:	str	r9, [sp, #52]	; 0x34
   14b74:	ldr	r9, [r3, #8]
   14b78:	str	r0, [sp, #56]	; 0x38
   14b7c:	ldr	r5, [r3, #24]
   14b80:	str	r9, [sp, #64]	; 0x40
   14b84:	ldr	r9, [r3, #12]
   14b88:	str	r9, [sp, #60]	; 0x3c
   14b8c:	ldr	r9, [r3, #16]
   14b90:	cmp	r1, #87	; 0x57
   14b94:	addls	pc, pc, r1, lsl #2
   14b98:	b	14d2c <close_stdout@@Base+0x24e8>
   14b9c:	b	15170 <close_stdout@@Base+0x292c>
   14ba0:	b	14d2c <close_stdout@@Base+0x24e8>
   14ba4:	b	14d2c <close_stdout@@Base+0x24e8>
   14ba8:	b	15154 <close_stdout@@Base+0x2910>
   14bac:	b	15144 <close_stdout@@Base+0x2900>
   14bb0:	b	1527c <close_stdout@@Base+0x2a38>
   14bb4:	b	1526c <close_stdout@@Base+0x2a28>
   14bb8:	b	1525c <close_stdout@@Base+0x2a18>
   14bbc:	b	1524c <close_stdout@@Base+0x2a08>
   14bc0:	b	14d2c <close_stdout@@Base+0x24e8>
   14bc4:	b	14d2c <close_stdout@@Base+0x24e8>
   14bc8:	b	14d2c <close_stdout@@Base+0x24e8>
   14bcc:	b	14d2c <close_stdout@@Base+0x24e8>
   14bd0:	b	14d2c <close_stdout@@Base+0x24e8>
   14bd4:	b	15228 <close_stdout@@Base+0x29e4>
   14bd8:	b	155ac <close_stdout@@Base+0x2d68>
   14bdc:	b	15580 <close_stdout@@Base+0x2d3c>
   14be0:	b	14d2c <close_stdout@@Base+0x24e8>
   14be4:	b	1555c <close_stdout@@Base+0x2d18>
   14be8:	b	15534 <close_stdout@@Base+0x2cf0>
   14bec:	b	15508 <close_stdout@@Base+0x2cc4>
   14bf0:	b	14d2c <close_stdout@@Base+0x24e8>
   14bf4:	b	14d2c <close_stdout@@Base+0x24e8>
   14bf8:	b	154d8 <close_stdout@@Base+0x2c94>
   14bfc:	b	154b8 <close_stdout@@Base+0x2c74>
   14c00:	b	15490 <close_stdout@@Base+0x2c4c>
   14c04:	b	15484 <close_stdout@@Base+0x2c40>
   14c08:	b	15478 <close_stdout@@Base+0x2c34>
   14c0c:	b	1546c <close_stdout@@Base+0x2c28>
   14c10:	b	15458 <close_stdout@@Base+0x2c14>
   14c14:	b	15424 <close_stdout@@Base+0x2be0>
   14c18:	b	15414 <close_stdout@@Base+0x2bd0>
   14c1c:	b	15404 <close_stdout@@Base+0x2bc0>
   14c20:	b	153f0 <close_stdout@@Base+0x2bac>
   14c24:	b	15388 <close_stdout@@Base+0x2b44>
   14c28:	b	15374 <close_stdout@@Base+0x2b30>
   14c2c:	b	15130 <close_stdout@@Base+0x28ec>
   14c30:	b	15104 <close_stdout@@Base+0x28c0>
   14c34:	b	150e8 <close_stdout@@Base+0x28a4>
   14c38:	b	153dc <close_stdout@@Base+0x2b98>
   14c3c:	b	153b0 <close_stdout@@Base+0x2b6c>
   14c40:	b	1539c <close_stdout@@Base+0x2b58>
   14c44:	b	1532c <close_stdout@@Base+0x2ae8>
   14c48:	b	15318 <close_stdout@@Base+0x2ad4>
   14c4c:	b	152f8 <close_stdout@@Base+0x2ab4>
   14c50:	b	14d2c <close_stdout@@Base+0x24e8>
   14c54:	b	152cc <close_stdout@@Base+0x2a88>
   14c58:	b	152a4 <close_stdout@@Base+0x2a60>
   14c5c:	b	14d0c <close_stdout@@Base+0x24c8>
   14c60:	b	14d0c <close_stdout@@Base+0x24c8>
   14c64:	b	15298 <close_stdout@@Base+0x2a54>
   14c68:	b	14fe8 <close_stdout@@Base+0x27a4>
   14c6c:	b	15188 <close_stdout@@Base+0x2944>
   14c70:	b	1528c <close_stdout@@Base+0x2a48>
   14c74:	b	150a0 <close_stdout@@Base+0x285c>
   14c78:	b	151cc <close_stdout@@Base+0x2988>
   14c7c:	b	151c4 <close_stdout@@Base+0x2980>
   14c80:	b	15074 <close_stdout@@Base+0x2830>
   14c84:	b	15050 <close_stdout@@Base+0x280c>
   14c88:	b	151b8 <close_stdout@@Base+0x2974>
   14c8c:	b	1502c <close_stdout@@Base+0x27e8>
   14c90:	b	151a0 <close_stdout@@Base+0x295c>
   14c94:	b	15194 <close_stdout@@Base+0x2950>
   14c98:	b	1500c <close_stdout@@Base+0x27c8>
   14c9c:	b	155d4 <close_stdout@@Base+0x2d90>
   14ca0:	b	1521c <close_stdout@@Base+0x29d8>
   14ca4:	b	150c4 <close_stdout@@Base+0x2880>
   14ca8:	b	151fc <close_stdout@@Base+0x29b8>
   14cac:	b	151d8 <close_stdout@@Base+0x2994>
   14cb0:	b	15124 <close_stdout@@Base+0x28e0>
   14cb4:	b	14d2c <close_stdout@@Base+0x24e8>
   14cb8:	b	14fe8 <close_stdout@@Base+0x27a4>
   14cbc:	b	150a0 <close_stdout@@Base+0x285c>
   14cc0:	b	15074 <close_stdout@@Base+0x2830>
   14cc4:	b	1502c <close_stdout@@Base+0x27e8>
   14cc8:	b	1500c <close_stdout@@Base+0x27c8>
   14ccc:	b	150c4 <close_stdout@@Base+0x2880>
   14cd0:	b	15050 <close_stdout@@Base+0x280c>
   14cd4:	b	14d2c <close_stdout@@Base+0x24e8>
   14cd8:	b	14d2c <close_stdout@@Base+0x24e8>
   14cdc:	b	14d2c <close_stdout@@Base+0x24e8>
   14ce0:	b	1534c <close_stdout@@Base+0x2b08>
   14ce4:	b	14d2c <close_stdout@@Base+0x24e8>
   14ce8:	b	15360 <close_stdout@@Base+0x2b1c>
   14cec:	b	1520c <close_stdout@@Base+0x29c8>
   14cf0:	b	14cfc <close_stdout@@Base+0x24b8>
   14cf4:	b	151ac <close_stdout@@Base+0x2968>
   14cf8:	b	15118 <close_stdout@@Base+0x28d4>
   14cfc:	sub	r3, r8, #28
   14d00:	mov	r0, sl
   14d04:	ldm	r3, {r1, r2, r3}
   14d08:	bl	14570 <close_stdout@@Base+0x1d2c>
   14d0c:	add	r3, r8, #12
   14d10:	mov	r2, #1
   14d14:	str	r2, [sp, #16]
   14d18:	ldm	r3, {r0, r1, r2, r3}
   14d1c:	stm	sp, {r0, r1, r2, r3}
   14d20:	mov	r0, sl
   14d24:	ldm	r8, {r1, r2, r3}
   14d28:	bl	146b0 <close_stdout@@Base+0x1e6c>
   14d2c:	ldr	r2, [pc, #3072]	; 15934 <close_stdout@@Base+0x30f0>
   14d30:	sxth	r6, r6
   14d34:	ldr	r3, [sp, #32]
   14d38:	add	r2, pc, r2
   14d3c:	add	r4, r2, r4
   14d40:	sub	ip, r3, r6, lsl #1
   14d44:	rsb	r6, r6, r6, lsl #3
   14d48:	ldrb	r1, [r4, #836]	; 0x344
   14d4c:	ldr	r4, [sp, #48]	; 0x30
   14d50:	sub	r3, r8, r6, lsl #2
   14d54:	sub	r1, r1, #28
   14d58:	add	r8, r3, #28
   14d5c:	str	r9, [r3, #44]	; 0x2c
   14d60:	add	r0, r2, r1
   14d64:	str	r4, [r3, #28]
   14d68:	add	r0, r0, #928	; 0x3a0
   14d6c:	ldr	r4, [sp, #52]	; 0x34
   14d70:	ldr	r9, [sp, #56]	; 0x38
   14d74:	str	r5, [r3, #52]	; 0x34
   14d78:	str	r4, [r3, #32]
   14d7c:	ldr	r4, [sp, #64]	; 0x40
   14d80:	str	r9, [r3, #48]	; 0x30
   14d84:	ldrsb	r0, [r0]
   14d88:	str	r4, [r3, #36]	; 0x24
   14d8c:	ldr	r4, [sp, #60]	; 0x3c
   14d90:	str	r4, [r3, #40]	; 0x28
   14d94:	ldrsh	r3, [ip]
   14d98:	add	r0, r0, r3
   14d9c:	cmp	r0, #112	; 0x70
   14da0:	bhi	14dbc <close_stdout@@Base+0x2578>
   14da4:	add	r2, r2, r0
   14da8:	add	r0, r2, #396	; 0x18c
   14dac:	ldrsb	r0, [r0]
   14db0:	cmp	r0, r3
   14db4:	ldrbeq	r5, [r2, #512]	; 0x200
   14db8:	beq	14dd0 <close_stdout@@Base+0x258c>
   14dbc:	ldr	r3, [pc, #2932]	; 15938 <close_stdout@@Base+0x30f4>
   14dc0:	add	r3, pc, r3
   14dc4:	add	r1, r3, r1
   14dc8:	add	r1, r1, #956	; 0x3bc
   14dcc:	ldrsb	r5, [r1]
   14dd0:	add	r9, ip, #2
   14dd4:	add	r3, r7, #38	; 0x26
   14dd8:	cmp	r9, r3
   14ddc:	str	r9, [sp, #32]
   14de0:	strh	r5, [ip, #2]
   14de4:	bcs	156f0 <close_stdout@@Base+0x2eac>
   14de8:	cmp	r5, #12
   14dec:	bne	14a14 <close_stdout@@Base+0x21d0>
   14df0:	mov	r0, #0
   14df4:	b	14e0c <close_stdout@@Base+0x25c8>
   14df8:	cmp	fp, #0
   14dfc:	mvngt	fp, #1
   14e00:	bgt	14a9c <close_stdout@@Base+0x2258>
   14e04:	bne	14a9c <close_stdout@@Base+0x2258>
   14e08:	mov	r0, #1
   14e0c:	ldr	r4, [sp, #44]	; 0x2c
   14e10:	ldr	r2, [sp, #740]	; 0x2e4
   14e14:	ldr	r3, [r4]
   14e18:	cmp	r2, r3
   14e1c:	bne	15908 <close_stdout@@Base+0x30c4>
   14e20:	add	sp, sp, #748	; 0x2ec
   14e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e28:	ldr	r3, [sl]
   14e2c:	ldrb	ip, [r3]
   14e30:	sub	r2, ip, #9
   14e34:	uxtb	r2, r2
   14e38:	cmp	ip, #32
   14e3c:	cmpne	r2, #4
   14e40:	bls	14ecc <close_stdout@@Base+0x2688>
   14e44:	subs	r0, ip, #45	; 0x2d
   14e48:	sub	r2, ip, #48	; 0x30
   14e4c:	rsbs	r1, r0, #0
   14e50:	adcs	r1, r1, r0
   14e54:	cmp	r2, #9
   14e58:	movhi	r6, r1
   14e5c:	orrls	r6, r1, #1
   14e60:	cmp	r6, #0
   14e64:	bne	14ee0 <close_stdout@@Base+0x269c>
   14e68:	cmp	ip, #43	; 0x2b
   14e6c:	beq	14fd8 <close_stdout@@Base+0x2794>
   14e70:	bic	r2, ip, #32
   14e74:	sub	r2, r2, #65	; 0x41
   14e78:	cmp	r2, #25
   14e7c:	bls	15748 <close_stdout@@Base+0x2f04>
   14e80:	cmp	ip, #40	; 0x28
   14e84:	beq	14eac <close_stdout@@Base+0x2668>
   14e88:	b	15894 <close_stdout@@Base+0x3050>
   14e8c:	cmp	r2, #40	; 0x28
   14e90:	addeq	r6, r6, #1
   14e94:	beq	14ea0 <close_stdout@@Base+0x265c>
   14e98:	cmp	r2, #41	; 0x29
   14e9c:	subeq	r6, r6, #1
   14ea0:	cmp	r6, #0
   14ea4:	beq	14fe0 <close_stdout@@Base+0x279c>
   14ea8:	mov	r3, r0
   14eac:	add	r0, r3, #1
   14eb0:	str	r0, [sl]
   14eb4:	ldrb	r2, [r0, #-1]
   14eb8:	cmp	r2, #0
   14ebc:	bne	14e8c <close_stdout@@Base+0x2648>
   14ec0:	mov	fp, #0
   14ec4:	mov	r3, fp
   14ec8:	b	14a50 <close_stdout@@Base+0x220c>
   14ecc:	add	r0, r3, #1
   14ed0:	str	r0, [sl]
   14ed4:	ldrb	ip, [r3, #1]
   14ed8:	mov	r3, r0
   14edc:	b	14e30 <close_stdout@@Base+0x25ec>
   14ee0:	cmp	ip, #43	; 0x2b
   14ee4:	movne	r9, r1
   14ee8:	orreq	r9, r1, #1
   14eec:	cmp	r9, #0
   14ef0:	beq	15724 <close_stdout@@Base+0x2ee0>
   14ef4:	cmp	r1, #0
   14ef8:	mvnne	r9, #0
   14efc:	moveq	r9, #1
   14f00:	add	r0, r3, #1
   14f04:	str	r0, [sl]
   14f08:	ldrb	ip, [r3, #1]
   14f0c:	sub	r3, ip, #9
   14f10:	cmp	ip, #32
   14f14:	cmpne	r3, #4
   14f18:	bls	14f88 <close_stdout@@Base+0x2744>
   14f1c:	sub	r2, ip, #48	; 0x30
   14f20:	cmp	r2, #9
   14f24:	bhi	14ed8 <close_stdout@@Base+0x2694>
   14f28:	ldrb	r1, [r0, #1]
   14f2c:	add	r6, r0, #1
   14f30:	sub	r3, r1, #48	; 0x30
   14f34:	cmp	r3, #9
   14f38:	mov	r3, r0
   14f3c:	bhi	155e0 <close_stdout@@Base+0x2d9c>
   14f40:	add	r0, r3, #2
   14f44:	ldr	fp, [sp, #68]	; 0x44
   14f48:	b	14f68 <close_stdout@@Base+0x2724>
   14f4c:	mov	r6, r0
   14f50:	ldrb	r1, [r0], #1
   14f54:	sub	ip, r1, #48	; 0x30
   14f58:	cmp	ip, #9
   14f5c:	bhi	155e0 <close_stdout@@Base+0x2d9c>
   14f60:	cmp	r2, fp
   14f64:	bhi	14f80 <close_stdout@@Base+0x273c>
   14f68:	add	r2, r2, r2, lsl #2
   14f6c:	lsl	ip, r2, #1
   14f70:	add	r2, r1, ip
   14f74:	sub	r2, r2, #48	; 0x30
   14f78:	cmp	r2, ip
   14f7c:	bcs	14f4c <close_stdout@@Base+0x2708>
   14f80:	mov	fp, #63	; 0x3f
   14f84:	b	14a34 <close_stdout@@Base+0x21f0>
   14f88:	mov	r3, r0
   14f8c:	b	14f00 <close_stdout@@Base+0x26bc>
   14f90:	ldr	r4, [sp, #36]	; 0x24
   14f94:	add	r6, sp, #92	; 0x5c
   14f98:	ldr	r9, [sp, #80]	; 0x50
   14f9c:	add	r8, r8, #28
   14fa0:	cmp	r4, #0
   14fa4:	ldr	ip, [sp, #32]
   14fa8:	subne	r4, r4, #1
   14fac:	strne	r4, [sp, #36]	; 0x24
   14fb0:	ldr	r4, [sp, #84]	; 0x54
   14fb4:	mvn	fp, #1
   14fb8:	str	r9, [sp, #96]	; 0x60
   14fbc:	str	r4, [sp, #100]	; 0x64
   14fc0:	mov	r4, r8
   14fc4:	ldm	r6!, {r0, r1, r2, r3}
   14fc8:	stmia	r4!, {r0, r1, r2, r3}
   14fcc:	ldm	r6, {r0, r1, r2}
   14fd0:	stm	r4, {r0, r1, r2}
   14fd4:	b	14dd0 <close_stdout@@Base+0x258c>
   14fd8:	mov	r9, #1
   14fdc:	b	14f00 <close_stdout@@Base+0x26bc>
   14fe0:	ldrb	ip, [r3, #1]
   14fe4:	b	14ed8 <close_stdout@@Base+0x2694>
   14fe8:	ldr	r9, [r8, #-24]	; 0xffffffe8
   14fec:	mov	r5, #0
   14ff0:	str	r9, [sp, #48]	; 0x30
   14ff4:	mov	r9, r5
   14ff8:	str	r5, [sp, #56]	; 0x38
   14ffc:	str	r5, [sp, #60]	; 0x3c
   15000:	str	r5, [sp, #64]	; 0x40
   15004:	str	r5, [sp, #52]	; 0x34
   15008:	b	14d2c <close_stdout@@Base+0x24e8>
   1500c:	ldr	r9, [r8, #-24]	; 0xffffffe8
   15010:	mov	r5, #0
   15014:	str	r5, [sp, #56]	; 0x38
   15018:	str	r5, [sp, #60]	; 0x3c
   1501c:	str	r5, [sp, #64]	; 0x40
   15020:	str	r5, [sp, #52]	; 0x34
   15024:	str	r5, [sp, #48]	; 0x30
   15028:	b	14d2c <close_stdout@@Base+0x24e8>
   1502c:	ldr	r9, [r8, #-24]	; 0xffffffe8
   15030:	mov	r5, #0
   15034:	str	r9, [sp, #60]	; 0x3c
   15038:	mov	r9, r5
   1503c:	str	r5, [sp, #56]	; 0x38
   15040:	str	r5, [sp, #64]	; 0x40
   15044:	str	r5, [sp, #52]	; 0x34
   15048:	str	r5, [sp, #48]	; 0x30
   1504c:	b	14d2c <close_stdout@@Base+0x24e8>
   15050:	ldr	r9, [r8]
   15054:	mov	r5, #0
   15058:	str	r5, [sp, #56]	; 0x38
   1505c:	str	r5, [sp, #60]	; 0x3c
   15060:	str	r9, [sp, #64]	; 0x40
   15064:	mov	r9, r5
   15068:	str	r5, [sp, #52]	; 0x34
   1506c:	str	r5, [sp, #48]	; 0x30
   15070:	b	14d2c <close_stdout@@Base+0x24e8>
   15074:	ldr	r3, [r8, #-24]	; 0xffffffe8
   15078:	ldr	r2, [r8]
   1507c:	mov	r5, #0
   15080:	mov	r9, r5
   15084:	str	r5, [sp, #56]	; 0x38
   15088:	str	r5, [sp, #60]	; 0x3c
   1508c:	mul	r2, r2, r3
   15090:	str	r5, [sp, #52]	; 0x34
   15094:	str	r5, [sp, #48]	; 0x30
   15098:	str	r2, [sp, #64]	; 0x40
   1509c:	b	14d2c <close_stdout@@Base+0x24e8>
   150a0:	ldr	r9, [r8, #-24]	; 0xffffffe8
   150a4:	mov	r5, #0
   150a8:	str	r9, [sp, #52]	; 0x34
   150ac:	mov	r9, r5
   150b0:	str	r5, [sp, #56]	; 0x38
   150b4:	str	r5, [sp, #60]	; 0x3c
   150b8:	str	r5, [sp, #64]	; 0x40
   150bc:	str	r5, [sp, #48]	; 0x30
   150c0:	b	14d2c <close_stdout@@Base+0x24e8>
   150c4:	ldr	r9, [r8, #-24]	; 0xffffffe8
   150c8:	mov	r5, #0
   150cc:	str	r9, [sp, #56]	; 0x38
   150d0:	mov	r9, r5
   150d4:	str	r5, [sp, #60]	; 0x3c
   150d8:	str	r5, [sp, #64]	; 0x40
   150dc:	str	r5, [sp, #52]	; 0x34
   150e0:	str	r5, [sp, #48]	; 0x30
   150e4:	b	14d2c <close_stdout@@Base+0x24e8>
   150e8:	ldr	r3, [r8, #-104]	; 0xffffff98
   150ec:	cmp	r3, #3
   150f0:	bls	1571c <close_stdout@@Base+0x2ed8>
   150f4:	sub	r2, r8, #112	; 0x70
   150f8:	add	r3, sl, #24
   150fc:	ldm	r2, {r0, r1, r2}
   15100:	stm	r3, {r0, r1, r2}
   15104:	ldr	r3, [r8, #-52]	; 0xffffffcc
   15108:	str	r3, [sl, #36]	; 0x24
   1510c:	ldr	r3, [r8, #4]
   15110:	str	r3, [sl, #40]	; 0x28
   15114:	b	14d2c <close_stdout@@Base+0x24e8>
   15118:	ldr	r1, [r8, #4]
   1511c:	str	r1, [sp, #48]	; 0x30
   15120:	b	14d2c <close_stdout@@Base+0x24e8>
   15124:	mov	r5, #0
   15128:	mov	r9, #1
   1512c:	b	150cc <close_stdout@@Base+0x2888>
   15130:	ldr	r3, [r8, #-24]	; 0xffffffe8
   15134:	str	r3, [sl, #4]
   15138:	ldr	r3, [r8]
   1513c:	str	r3, [sl, #8]
   15140:	b	14d2c <close_stdout@@Base+0x24e8>
   15144:	ldr	r3, [sl, #108]	; 0x6c
   15148:	add	r3, r3, #1
   1514c:	str	r3, [sl, #108]	; 0x6c
   15150:	b	14d2c <close_stdout@@Base+0x24e8>
   15154:	ldr	r2, [sl, #108]	; 0x6c
   15158:	ldr	r3, [sl, #92]	; 0x5c
   1515c:	add	r2, r2, #1
   15160:	str	r2, [sl, #108]	; 0x6c
   15164:	add	r3, r3, #1
   15168:	str	r3, [sl, #92]	; 0x5c
   1516c:	b	14d2c <close_stdout@@Base+0x24e8>
   15170:	ldm	r8, {r0, r1}
   15174:	add	r3, sl, #52	; 0x34
   15178:	mov	r2, #1
   1517c:	stm	r3, {r0, r1}
   15180:	strb	r2, [sl, #88]	; 0x58
   15184:	b	14d2c <close_stdout@@Base+0x24e8>
   15188:	mov	r5, #0
   1518c:	mov	r9, #1
   15190:	b	14ff0 <close_stdout@@Base+0x27ac>
   15194:	mov	r5, #0
   15198:	ldr	r9, [r8, #-28]	; 0xffffffe4
   1519c:	b	15014 <close_stdout@@Base+0x27d0>
   151a0:	mov	r5, #0
   151a4:	mov	r9, #1
   151a8:	b	15034 <close_stdout@@Base+0x27f0>
   151ac:	mvn	r0, #0
   151b0:	str	r0, [sp, #48]	; 0x30
   151b4:	b	14d2c <close_stdout@@Base+0x24e8>
   151b8:	mov	r5, #0
   151bc:	ldr	r9, [r8, #-28]	; 0xffffffe4
   151c0:	b	15034 <close_stdout@@Base+0x27f0>
   151c4:	ldr	r3, [r8, #-28]	; 0xffffffe4
   151c8:	b	15078 <close_stdout@@Base+0x2834>
   151cc:	mov	r5, #0
   151d0:	mov	r9, #1
   151d4:	b	150a8 <close_stdout@@Base+0x2864>
   151d8:	ldr	r1, [r8, #-28]	; 0xffffffe4
   151dc:	mov	r9, #0
   151e0:	str	r1, [sp, #56]	; 0x38
   151e4:	str	r9, [sp, #60]	; 0x3c
   151e8:	str	r9, [sp, #64]	; 0x40
   151ec:	str	r9, [sp, #52]	; 0x34
   151f0:	str	r9, [sp, #48]	; 0x30
   151f4:	ldr	r5, [r8, #-24]	; 0xffffffe8
   151f8:	b	14d2c <close_stdout@@Base+0x24e8>
   151fc:	ldr	r0, [r8, #-28]	; 0xffffffe4
   15200:	mov	r9, #0
   15204:	str	r0, [sp, #56]	; 0x38
   15208:	b	151e4 <close_stdout@@Base+0x29a0>
   1520c:	mov	r0, sl
   15210:	ldm	r8, {r1, r2, r3}
   15214:	bl	14570 <close_stdout@@Base+0x1d2c>
   15218:	b	14d2c <close_stdout@@Base+0x24e8>
   1521c:	mov	r5, #0
   15220:	ldr	r9, [r8, #-28]	; 0xffffffe4
   15224:	b	150cc <close_stdout@@Base+0x2888>
   15228:	ldr	r2, [r8, #-24]	; 0xffffffe8
   1522c:	mov	r3, #0
   15230:	str	r3, [sl, #48]	; 0x30
   15234:	str	r3, [sl, #52]	; 0x34
   15238:	str	r2, [sl, #44]	; 0x2c
   1523c:	str	r3, [sl, #56]	; 0x38
   15240:	ldr	r3, [r8]
   15244:	str	r3, [sl, #20]
   15248:	b	14d2c <close_stdout@@Base+0x24e8>
   1524c:	ldr	r3, [sl, #96]	; 0x60
   15250:	add	r3, r3, #1
   15254:	str	r3, [sl, #96]	; 0x60
   15258:	b	14d2c <close_stdout@@Base+0x24e8>
   1525c:	ldr	r3, [sl, #92]	; 0x5c
   15260:	add	r3, r3, #1
   15264:	str	r3, [sl, #92]	; 0x5c
   15268:	b	14d2c <close_stdout@@Base+0x24e8>
   1526c:	ldr	r3, [sl, #112]	; 0x70
   15270:	add	r3, r3, #1
   15274:	str	r3, [sl, #112]	; 0x70
   15278:	b	14d2c <close_stdout@@Base+0x24e8>
   1527c:	ldr	r3, [sl, #100]	; 0x64
   15280:	add	r3, r3, #1
   15284:	str	r3, [sl, #100]	; 0x64
   15288:	b	14d2c <close_stdout@@Base+0x24e8>
   1528c:	mov	r5, #0
   15290:	ldr	r9, [r8, #-28]	; 0xffffffe4
   15294:	b	150a8 <close_stdout@@Base+0x2864>
   15298:	mov	r5, #0
   1529c:	ldr	r9, [r8, #-28]	; 0xffffffe4
   152a0:	b	14ff0 <close_stdout@@Base+0x27ac>
   152a4:	mov	r3, r8
   152a8:	sub	ip, r8, #28
   152ac:	ldr	r2, [r3], #-16
   152b0:	str	r2, [sp, #16]
   152b4:	ldm	r3, {r0, r1, r2, r3}
   152b8:	stm	sp, {r0, r1, r2, r3}
   152bc:	mov	r0, sl
   152c0:	ldm	ip, {r1, r2, r3}
   152c4:	bl	146b0 <close_stdout@@Base+0x1e6c>
   152c8:	b	14d2c <close_stdout@@Base+0x24e8>
   152cc:	sub	r2, r8, #56	; 0x38
   152d0:	add	r3, sl, #24
   152d4:	ldm	r2, {r0, r1, r2}
   152d8:	stm	r3, {r0, r1, r2}
   152dc:	ldr	r3, [r8, #-24]	; 0xffffffe8
   152e0:	rsb	r3, r3, #0
   152e4:	str	r3, [sl, #36]	; 0x24
   152e8:	ldr	r3, [r8, #4]
   152ec:	rsb	r3, r3, #0
   152f0:	str	r3, [sl, #40]	; 0x28
   152f4:	b	14d2c <close_stdout@@Base+0x24e8>
   152f8:	ldr	r2, [r8, #-52]	; 0xffffffcc
   152fc:	add	r3, sl, #24
   15300:	str	r2, [sl, #40]	; 0x28
   15304:	ldr	r2, [r8, #-28]	; 0xffffffe4
   15308:	str	r2, [sl, #36]	; 0x24
   1530c:	ldm	r8, {r0, r1, r2}
   15310:	stm	r3, {r0, r1, r2}
   15314:	b	14d2c <close_stdout@@Base+0x24e8>
   15318:	ldr	r3, [r8, #-24]	; 0xffffffe8
   1531c:	str	r3, [sl, #40]	; 0x28
   15320:	ldr	r3, [r8]
   15324:	str	r3, [sl, #36]	; 0x24
   15328:	b	14d2c <close_stdout@@Base+0x24e8>
   1532c:	ldr	r2, [r8, #-84]	; 0xffffffac
   15330:	str	r2, [sl, #36]	; 0x24
   15334:	add	r3, sl, #24
   15338:	ldr	r2, [r8, #-52]	; 0xffffffcc
   1533c:	str	r2, [sl, #40]	; 0x28
   15340:	ldm	r8, {r0, r1, r2}
   15344:	stm	r3, {r0, r1, r2}
   15348:	b	14d2c <close_stdout@@Base+0x24e8>
   1534c:	ldr	r0, [r8, #4]
   15350:	mov	r1, #0
   15354:	str	r1, [sp, #52]	; 0x34
   15358:	str	r0, [sp, #48]	; 0x30
   1535c:	b	14d2c <close_stdout@@Base+0x24e8>
   15360:	ldr	r2, [r8, #4]
   15364:	mov	r3, #0
   15368:	str	r3, [sp, #52]	; 0x34
   1536c:	str	r2, [sp, #48]	; 0x30
   15370:	b	14d2c <close_stdout@@Base+0x24e8>
   15374:	ldr	r3, [r8, #-28]	; 0xffffffe4
   15378:	str	r3, [sl, #4]
   1537c:	ldr	r3, [r8]
   15380:	str	r3, [sl, #8]
   15384:	b	14d2c <close_stdout@@Base+0x24e8>
   15388:	mov	r3, #0
   1538c:	str	r3, [sl, #4]
   15390:	ldr	r3, [r8, #-28]	; 0xffffffe4
   15394:	str	r3, [sl, #8]
   15398:	b	14d2c <close_stdout@@Base+0x24e8>
   1539c:	ldr	r3, [r8, #-28]	; 0xffffffe4
   153a0:	str	r3, [sl, #36]	; 0x24
   153a4:	ldr	r3, [r8, #4]
   153a8:	str	r3, [sl, #40]	; 0x28
   153ac:	b	14d2c <close_stdout@@Base+0x24e8>
   153b0:	ldr	r3, [r8, #-56]	; 0xffffffc8
   153b4:	str	r3, [sl, #36]	; 0x24
   153b8:	ldr	r3, [r8, #-24]	; 0xffffffe8
   153bc:	rsb	r3, r3, #0
   153c0:	str	r3, [sl, #40]	; 0x28
   153c4:	ldr	r3, [r8, #4]
   153c8:	rsb	r3, r3, #0
   153cc:	str	r3, [sl, #28]
   153d0:	ldr	r3, [r8, #8]
   153d4:	str	r3, [sl, #32]
   153d8:	b	14d2c <close_stdout@@Base+0x24e8>
   153dc:	ldr	r3, [r8, #-52]	; 0xffffffcc
   153e0:	str	r3, [sl, #40]	; 0x28
   153e4:	ldr	r3, [r8, #-28]	; 0xffffffe4
   153e8:	str	r3, [sl, #36]	; 0x24
   153ec:	b	153c4 <close_stdout@@Base+0x2b80>
   153f0:	mov	r3, #0
   153f4:	str	r3, [sl, #4]
   153f8:	ldr	r3, [r8]
   153fc:	str	r3, [sl, #8]
   15400:	b	14d2c <close_stdout@@Base+0x24e8>
   15404:	ldr	r3, [r8, #-28]	; 0xffffffe4
   15408:	add	r3, r3, #60	; 0x3c
   1540c:	str	r3, [sl, #16]
   15410:	b	14d2c <close_stdout@@Base+0x24e8>
   15414:	ldr	r3, [r8]
   15418:	add	r3, r3, #60	; 0x3c
   1541c:	str	r3, [sl, #16]
   15420:	b	14d2c <close_stdout@@Base+0x24e8>
   15424:	ldr	lr, [r8]
   15428:	add	r0, sl, #112	; 0x70
   1542c:	ldr	ip, [r8, #-56]	; 0xffffffc8
   15430:	ldrb	r1, [r8, #-28]	; 0xffffffe4
   15434:	ldr	r2, [r8, #-24]	; 0xffffffe8
   15438:	ldr	r3, [r8, #-20]	; 0xffffffec
   1543c:	str	lr, [sp]
   15440:	str	ip, [sp, #28]
   15444:	bl	14834 <close_stdout@@Base+0x1ff0>
   15448:	ldr	ip, [sp, #28]
   1544c:	add	r0, ip, r0
   15450:	str	r0, [sl, #16]
   15454:	b	14d2c <close_stdout@@Base+0x24e8>
   15458:	add	r3, r8, #12
   1545c:	mov	r1, #420	; 0x1a4
   15460:	mov	r2, #1
   15464:	str	r1, [sl, #16]
   15468:	b	14d14 <close_stdout@@Base+0x24d0>
   1546c:	ldr	r1, [r8, #-28]	; 0xffffffe4
   15470:	add	r3, r8, #12
   15474:	b	15460 <close_stdout@@Base+0x2c1c>
   15478:	mov	r3, #420	; 0x1a4
   1547c:	str	r3, [sl, #16]
   15480:	b	14d2c <close_stdout@@Base+0x24e8>
   15484:	ldr	r3, [r8]
   15488:	str	r3, [sl, #16]
   1548c:	b	14d2c <close_stdout@@Base+0x24e8>
   15490:	mov	r3, #1
   15494:	str	r3, [sl, #12]
   15498:	ldr	r2, [r8, #-28]	; 0xffffffe4
   1549c:	ldr	r3, [sl, #104]	; 0x68
   154a0:	cmp	r2, #0
   154a4:	movle	r2, #1
   154a8:	movgt	r2, #2
   154ac:	add	r3, r2, r3
   154b0:	str	r3, [sl, #104]	; 0x68
   154b4:	b	14d2c <close_stdout@@Base+0x24e8>
   154b8:	ldr	r2, [r8]
   154bc:	ldr	r3, [sl, #104]	; 0x68
   154c0:	str	r2, [sl, #12]
   154c4:	ldr	r2, [r8]
   154c8:	cmp	r2, #0
   154cc:	addgt	r3, r3, #1
   154d0:	str	r3, [sl, #104]	; 0x68
   154d4:	b	14d2c <close_stdout@@Base+0x24e8>
   154d8:	ldr	r3, [sl, #112]	; 0x70
   154dc:	mov	r0, sl
   154e0:	add	r3, r3, #1
   154e4:	str	r3, [r0, #112]!	; 0x70
   154e8:	ldr	ip, [r8]
   154ec:	ldrb	r1, [r8, #-28]	; 0xffffffe4
   154f0:	ldr	r2, [r8, #-24]	; 0xffffffe8
   154f4:	ldr	r3, [r8, #-20]	; 0xffffffec
   154f8:	str	ip, [sp]
   154fc:	bl	14834 <close_stdout@@Base+0x1ff0>
   15500:	str	r0, [sl, #16]
   15504:	b	14d2c <close_stdout@@Base+0x24e8>
   15508:	ldr	ip, [r8, #-136]	; 0xffffff78
   1550c:	mov	r3, #2
   15510:	ldr	r0, [r8, #-80]	; 0xffffffb0
   15514:	ldr	r1, [r8, #-28]	; 0xffffffe4
   15518:	ldr	r2, [r8, #-24]	; 0xffffffe8
   1551c:	str	ip, [sl, #44]	; 0x2c
   15520:	str	r0, [sl, #48]	; 0x30
   15524:	str	r1, [sl, #52]	; 0x34
   15528:	str	r2, [sl, #56]	; 0x38
   1552c:	str	r3, [sl, #20]
   15530:	b	14d2c <close_stdout@@Base+0x24e8>
   15534:	ldr	r0, [r8, #-80]	; 0xffffffb0
   15538:	mov	r3, #0
   1553c:	ldr	r1, [r8, #-24]	; 0xffffffe8
   15540:	mov	r2, #2
   15544:	str	r3, [sl, #52]	; 0x34
   15548:	str	r0, [sl, #44]	; 0x2c
   1554c:	str	r1, [sl, #48]	; 0x30
   15550:	str	r3, [sl, #56]	; 0x38
   15554:	str	r2, [sl, #20]
   15558:	b	14d2c <close_stdout@@Base+0x24e8>
   1555c:	ldr	r1, [r8, #-24]	; 0xffffffe8
   15560:	mov	r3, #0
   15564:	mov	r2, #2
   15568:	str	r3, [sl, #48]	; 0x30
   1556c:	str	r3, [sl, #52]	; 0x34
   15570:	str	r1, [sl, #44]	; 0x2c
   15574:	str	r3, [sl, #56]	; 0x38
   15578:	str	r2, [sl, #20]
   1557c:	b	14d2c <close_stdout@@Base+0x24e8>
   15580:	ldr	r3, [r8, #-24]	; 0xffffffe8
   15584:	ldr	r0, [r8, #-136]	; 0xffffff78
   15588:	ldr	r1, [r8, #-80]	; 0xffffffb0
   1558c:	ldr	r2, [r8, #-28]	; 0xffffffe4
   15590:	str	r0, [sl, #44]	; 0x2c
   15594:	str	r1, [sl, #48]	; 0x30
   15598:	str	r2, [sl, #52]	; 0x34
   1559c:	str	r3, [sl, #56]	; 0x38
   155a0:	ldr	r3, [r8]
   155a4:	str	r3, [sl, #20]
   155a8:	b	14d2c <close_stdout@@Base+0x24e8>
   155ac:	ldr	r1, [r8, #-80]	; 0xffffffb0
   155b0:	mov	r3, #0
   155b4:	ldr	r2, [r8, #-24]	; 0xffffffe8
   155b8:	str	r3, [sl, #52]	; 0x34
   155bc:	str	r1, [sl, #44]	; 0x2c
   155c0:	str	r2, [sl, #48]	; 0x30
   155c4:	str	r3, [sl, #56]	; 0x38
   155c8:	ldr	r3, [r8]
   155cc:	str	r3, [sl, #20]
   155d0:	b	14d2c <close_stdout@@Base+0x24e8>
   155d4:	mov	r5, #0
   155d8:	mov	r9, #1
   155dc:	b	15014 <close_stdout@@Base+0x27d0>
   155e0:	and	r1, r1, #253	; 0xfd
   155e4:	cmp	r1, #44	; 0x2c
   155e8:	bne	156b4 <close_stdout@@Base+0x2e70>
   155ec:	ldrb	r0, [r6, #1]
   155f0:	sub	r0, r0, #48	; 0x30
   155f4:	cmp	r0, #9
   155f8:	bhi	156b4 <close_stdout@@Base+0x2e70>
   155fc:	cmn	r9, #1
   15600:	beq	15808 <close_stdout@@Base+0x2fc4>
   15604:	cmp	r2, #0
   15608:	mov	ip, r2
   1560c:	blt	14f80 <close_stdout@@Base+0x273c>
   15610:	ldrb	r1, [r6, #2]
   15614:	add	r6, r6, #2
   15618:	mov	r3, r0
   1561c:	mov	r0, #8
   15620:	sub	r2, r1, #48	; 0x30
   15624:	cmp	r2, #9
   15628:	add	r3, r3, r3, lsl #2
   1562c:	ldrbls	r1, [r6, #1]
   15630:	lsl	r3, r3, #1
   15634:	addls	r3, r3, r2
   15638:	addls	r6, r6, #1
   1563c:	subls	r2, r1, #48	; 0x30
   15640:	subs	r0, r0, #1
   15644:	bne	15624 <close_stdout@@Base+0x2de0>
   15648:	cmn	r9, #1
   1564c:	beq	15a1c <close_stdout@@Base+0x31d8>
   15650:	cmp	r2, #9
   15654:	bhi	15674 <close_stdout@@Base+0x2e30>
   15658:	add	r2, r6, #1
   1565c:	mov	r6, r2
   15660:	add	r2, r2, #1
   15664:	ldrb	r1, [r6]
   15668:	sub	r1, r1, #48	; 0x30
   1566c:	cmp	r1, #9
   15670:	bls	1565c <close_stdout@@Base+0x2e18>
   15674:	lsr	r2, r9, #31
   15678:	cmp	r3, #0
   1567c:	moveq	r2, #0
   15680:	andne	r2, r2, #1
   15684:	cmp	r2, #0
   15688:	beq	15a54 <close_stdout@@Base+0x3210>
   1568c:	subs	ip, ip, #1
   15690:	bpl	14f80 <close_stdout@@Base+0x273c>
   15694:	mov	r9, #51712	; 0xca00
   15698:	movt	r9, #15258	; 0x3b9a
   1569c:	rsb	r9, r3, r9
   156a0:	str	ip, [sp, #92]	; 0x5c
   156a4:	str	r9, [sp, #80]	; 0x50
   156a8:	mov	fp, #276	; 0x114
   156ac:	str	r6, [sl]
   156b0:	b	14a34 <close_stdout@@Base+0x21f0>
   156b4:	cmn	r9, #1
   156b8:	lsr	r1, r9, #31
   156bc:	strb	r1, [sp, #92]	; 0x5c
   156c0:	beq	156f8 <close_stdout@@Base+0x2eb4>
   156c4:	cmp	r2, #0
   156c8:	str	r2, [sp, #80]	; 0x50
   156cc:	blt	14f80 <close_stdout@@Base+0x273c>
   156d0:	cmp	r9, #0
   156d4:	rsb	r3, r3, r6
   156d8:	str	r3, [sp, #84]	; 0x54
   156dc:	movw	r3, #274	; 0x112
   156e0:	movw	fp, #275	; 0x113
   156e4:	str	r6, [sl]
   156e8:	movne	fp, r3
   156ec:	b	14a34 <close_stdout@@Base+0x21f0>
   156f0:	mov	r0, #2
   156f4:	b	14e0c <close_stdout@@Base+0x25c8>
   156f8:	rsb	r2, r2, #0
   156fc:	str	r2, [sp, #80]	; 0x50
   15700:	cmp	r2, #0
   15704:	bgt	14f80 <close_stdout@@Base+0x273c>
   15708:	rsb	r3, r3, r6
   1570c:	str	r6, [sl]
   15710:	str	r3, [sp, #84]	; 0x54
   15714:	movw	fp, #274	; 0x112
   15718:	b	14a34 <close_stdout@@Base+0x21f0>
   1571c:	ldr	r2, [r8, #-108]	; 0xffffff94
   15720:	b	15330 <close_stdout@@Base+0x2aec>
   15724:	ldrb	r1, [r3, #1]
   15728:	add	r6, r3, #1
   1572c:	sub	r0, r1, #48	; 0x30
   15730:	cmp	r0, #9
   15734:	bhi	155e0 <close_stdout@@Base+0x2d9c>
   15738:	ldr	r0, [sp, #68]	; 0x44
   1573c:	cmp	r2, r0
   15740:	bls	14f40 <close_stdout@@Base+0x26fc>
   15744:	b	14f80 <close_stdout@@Base+0x273c>
   15748:	add	r9, sp, #720	; 0x2d0
   1574c:	mov	r2, r9
   15750:	rsb	r3, r9, r2
   15754:	cmp	r3, #18
   15758:	strbls	ip, [r2]
   1575c:	ldr	r3, [sl]
   15760:	addls	r2, r2, #1
   15764:	add	r1, r3, #1
   15768:	str	r1, [sl]
   1576c:	ldrb	ip, [r3, #1]
   15770:	bic	r3, ip, #32
   15774:	sub	r3, r3, #65	; 0x41
   15778:	cmp	r3, #25
   1577c:	bls	15750 <close_stdout@@Base+0x2f0c>
   15780:	cmp	ip, #46	; 0x2e
   15784:	beq	15750 <close_stdout@@Base+0x2f0c>
   15788:	mov	r3, #0
   1578c:	strb	r3, [r2]
   15790:	ldrb	r3, [sp, #720]	; 0x2d0
   15794:	cmp	r3, #0
   15798:	addne	r2, sp, #716	; 0x2cc
   1579c:	addne	r2, r2, #3
   157a0:	beq	157c0 <close_stdout@@Base+0x2f7c>
   157a4:	sub	r1, r3, #97	; 0x61
   157a8:	cmp	r1, #25
   157ac:	subls	r3, r3, #32
   157b0:	strb	r3, [r2, #1]!
   157b4:	ldrb	r3, [r2, #1]
   157b8:	cmp	r3, #0
   157bc:	bne	157a4 <close_stdout@@Base+0x2f60>
   157c0:	ldr	fp, [pc, #372]	; 1593c <close_stdout@@Base+0x30f8>
   157c4:	ldr	r1, [pc, #372]	; 15940 <close_stdout@@Base+0x30fc>
   157c8:	add	fp, pc, fp
   157cc:	add	r1, pc, r1
   157d0:	add	fp, fp, #948	; 0x3b4
   157d4:	b	157e4 <close_stdout@@Base+0x2fa0>
   157d8:	ldr	r1, [fp, #12]!
   157dc:	cmp	r1, #0
   157e0:	beq	15820 <close_stdout@@Base+0x2fdc>
   157e4:	mov	r0, r9
   157e8:	bl	11294 <strcmp@plt>
   157ec:	cmp	r0, #0
   157f0:	bne	157d8 <close_stdout@@Base+0x2f94>
   157f4:	mov	r0, fp
   157f8:	ldr	r3, [r0, #8]
   157fc:	ldr	fp, [r0, #4]
   15800:	str	r3, [sp, #92]	; 0x5c
   15804:	b	14a2c <close_stdout@@Base+0x21e8>
   15808:	rsb	ip, r2, #0
   1580c:	cmp	ip, #0
   15810:	bgt	14f80 <close_stdout@@Base+0x273c>
   15814:	cmn	r2, ip
   15818:	bne	14f80 <close_stdout@@Base+0x273c>
   1581c:	b	15610 <close_stdout@@Base+0x2dcc>
   15820:	mov	r0, r9
   15824:	bl	1145c <strlen@plt>
   15828:	cmp	r0, #3
   1582c:	str	r0, [sp, #48]	; 0x30
   15830:	moveq	r6, #1
   15834:	beq	15840 <close_stdout@@Base+0x2ffc>
   15838:	cmp	r0, #4
   1583c:	beq	15a08 <close_stdout@@Base+0x31c4>
   15840:	ldr	r0, [sp, #76]	; 0x4c
   15844:	ldr	r1, [pc, #248]	; 15944 <close_stdout@@Base+0x3100>
   15848:	add	fp, r0, #4
   1584c:	add	r1, pc, r1
   15850:	b	15878 <close_stdout@@Base+0x3034>
   15854:	mov	r2, #3
   15858:	bl	11594 <strncmp@plt>
   1585c:	rsbs	r0, r0, #1
   15860:	movcc	r0, #0
   15864:	cmp	r0, #0
   15868:	bne	157f4 <close_stdout@@Base+0x2fb0>
   1586c:	ldr	r1, [fp, #12]!
   15870:	cmp	r1, #0
   15874:	beq	158a4 <close_stdout@@Base+0x3060>
   15878:	cmp	r6, #0
   1587c:	mov	r0, r9
   15880:	bne	15854 <close_stdout@@Base+0x3010>
   15884:	bl	11294 <strcmp@plt>
   15888:	rsbs	r0, r0, #1
   1588c:	movcc	r0, #0
   15890:	b	15864 <close_stdout@@Base+0x3020>
   15894:	add	r2, r3, #1
   15898:	str	r2, [sl]
   1589c:	ldrb	fp, [r3]
   158a0:	b	14a2c <close_stdout@@Base+0x21e8>
   158a4:	mov	r0, sl
   158a8:	mov	r1, r9
   158ac:	bl	148bc <close_stdout@@Base+0x2078>
   158b0:	cmp	r0, #0
   158b4:	bne	157f8 <close_stdout@@Base+0x2fb4>
   158b8:	ldr	r1, [pc, #136]	; 15948 <close_stdout@@Base+0x3104>
   158bc:	mov	r0, r9
   158c0:	add	r1, pc, r1
   158c4:	bl	11294 <strcmp@plt>
   158c8:	cmp	r0, #0
   158cc:	beq	159f8 <close_stdout@@Base+0x31b4>
   158d0:	ldr	r3, [pc, #116]	; 1594c <close_stdout@@Base+0x3108>
   158d4:	ldr	r6, [sp, #72]	; 0x48
   158d8:	add	r3, pc, r3
   158dc:	mov	r1, r3
   158e0:	b	158f0 <close_stdout@@Base+0x30ac>
   158e4:	ldr	r1, [r6, #12]!
   158e8:	cmp	r1, #0
   158ec:	beq	15968 <close_stdout@@Base+0x3124>
   158f0:	mov	r0, r9
   158f4:	bl	11294 <strcmp@plt>
   158f8:	cmp	r0, #0
   158fc:	bne	158e4 <close_stdout@@Base+0x30a0>
   15900:	mov	r0, r6
   15904:	b	157f8 <close_stdout@@Base+0x2fb4>
   15908:	bl	11318 <__stack_chk_fail@plt>
   1590c:	andeq	r8, r1, r4, ror #12
   15910:	andeq	r0, r0, r0, lsr r1
   15914:	andeq	r7, r1, r4, ror lr
   15918:	andeq	r7, r1, ip, ror #28
   1591c:	andeq	r6, r0, r8, asr #16
   15920:	strdeq	r6, [r0], -r8
   15924:	ldrdeq	r6, [r0], -ip
   15928:	andeq	r6, r0, r0, asr #15
   1592c:	muleq	r0, r8, r7
   15930:	strdeq	r6, [r0], -r4
   15934:	andeq	r6, r0, r4, lsl #10
   15938:	andeq	r6, r0, ip, ror r4
   1593c:	andeq	r7, r1, r8, ror r0
   15940:	andeq	r5, r0, r4, asr lr
   15944:	ldrdeq	r5, [r0], -r8
   15948:	andeq	r5, r0, r0, lsl #27
   1594c:	andeq	r5, r0, r4, asr sp
   15950:			; <UNDEFINED> instruction: 0x00016eb8
   15954:	andeq	r5, r0, r8, lsr #25
   15958:	andeq	r6, r1, r4, asr #28
   1595c:	andeq	r5, r0, ip, lsr #23
   15960:	andeq	r6, r1, r4, ror #26
   15964:	andeq	r6, r1, r4, lsr sp
   15968:	ldr	r0, [sp, #48]	; 0x30
   1596c:	mov	r3, r1
   15970:	sub	fp, r0, #1
   15974:	ldrb	r2, [r9, fp]
   15978:	cmp	r2, #83	; 0x53
   1597c:	beq	15a78 <close_stdout@@Base+0x3234>
   15980:	ldr	r6, [pc, #-56]	; 15950 <close_stdout@@Base+0x310c>
   15984:	ldr	r1, [pc, #-56]	; 15954 <close_stdout@@Base+0x3110>
   15988:	add	r6, pc, r6
   1598c:	add	r1, pc, r1
   15990:	add	r6, r6, #1440	; 0x5a0
   15994:	mov	r0, r9
   15998:	bl	11294 <strcmp@plt>
   1599c:	cmp	r0, #0
   159a0:	beq	15900 <close_stdout@@Base+0x30bc>
   159a4:	ldr	r1, [r6, #12]!
   159a8:	cmp	r1, #0
   159ac:	bne	15994 <close_stdout@@Base+0x3150>
   159b0:	ldr	r3, [sp, #48]	; 0x30
   159b4:	cmp	r3, #1
   159b8:	ldrb	r3, [sp, #720]	; 0x2d0
   159bc:	beq	15ad0 <close_stdout@@Base+0x328c>
   159c0:	cmp	r3, #0
   159c4:	movne	r1, r9
   159c8:	movne	r0, #0
   159cc:	movne	r2, r9
   159d0:	beq	14f80 <close_stdout@@Base+0x273c>
   159d4:	cmp	r3, #46	; 0x2e
   159d8:	ldrb	r3, [r1, #1]
   159dc:	addne	r2, r2, #1
   159e0:	moveq	r0, #1
   159e4:	cmp	r3, #0
   159e8:	strb	r3, [r2]
   159ec:	beq	15ab0 <close_stdout@@Base+0x326c>
   159f0:	ldrb	r3, [r1, #1]!
   159f4:	b	159d4 <close_stdout@@Base+0x3190>
   159f8:	ldr	r0, [pc, #-168]	; 15958 <close_stdout@@Base+0x3114>
   159fc:	add	r0, pc, r0
   15a00:	add	r0, r0, #624	; 0x270
   15a04:	b	157f8 <close_stdout@@Base+0x2fb4>
   15a08:	ldrb	r6, [sp, #723]	; 0x2d3
   15a0c:	subs	r3, r6, #46	; 0x2e
   15a10:	rsbs	r6, r3, #0
   15a14:	adcs	r6, r6, r3
   15a18:	b	15840 <close_stdout@@Base+0x2ffc>
   15a1c:	cmp	r2, #9
   15a20:	bhi	15674 <close_stdout@@Base+0x2e30>
   15a24:	cmp	r1, #48	; 0x30
   15a28:	addeq	r2, r6, #1
   15a2c:	beq	15a3c <close_stdout@@Base+0x31f8>
   15a30:	b	15a70 <close_stdout@@Base+0x322c>
   15a34:	cmp	r1, #48	; 0x30
   15a38:	bne	15a70 <close_stdout@@Base+0x322c>
   15a3c:	mov	r6, r2
   15a40:	ldrb	r1, [r2], #1
   15a44:	sub	r0, r1, #48	; 0x30
   15a48:	cmp	r0, #9
   15a4c:	bls	15a34 <close_stdout@@Base+0x31f0>
   15a50:	b	15674 <close_stdout@@Base+0x2e30>
   15a54:	cmp	r9, #0
   15a58:	movw	fp, #277	; 0x115
   15a5c:	str	ip, [sp, #92]	; 0x5c
   15a60:	str	r3, [sp, #80]	; 0x50
   15a64:	movne	fp, #276	; 0x114
   15a68:	str	r6, [sl]
   15a6c:	b	14a34 <close_stdout@@Base+0x21f0>
   15a70:	add	r3, r3, #1
   15a74:	b	15658 <close_stdout@@Base+0x2e14>
   15a78:	ldr	r1, [pc, #-292]	; 1595c <close_stdout@@Base+0x3118>
   15a7c:	ldr	r6, [sp, #72]	; 0x48
   15a80:	add	r1, pc, r1
   15a84:	strb	r3, [r9, fp]
   15a88:	mov	r0, r9
   15a8c:	bl	11294 <strcmp@plt>
   15a90:	cmp	r0, #0
   15a94:	beq	15900 <close_stdout@@Base+0x30bc>
   15a98:	ldr	r1, [r6, #12]!
   15a9c:	cmp	r1, #0
   15aa0:	bne	15a88 <close_stdout@@Base+0x3244>
   15aa4:	mov	r3, #83	; 0x53
   15aa8:	strb	r3, [r9, fp]
   15aac:	b	15980 <close_stdout@@Base+0x313c>
   15ab0:	cmp	r0, #0
   15ab4:	beq	14f80 <close_stdout@@Base+0x273c>
   15ab8:	mov	r1, r9
   15abc:	mov	r0, sl
   15ac0:	bl	148bc <close_stdout@@Base+0x2078>
   15ac4:	cmp	r0, #0
   15ac8:	bne	157f8 <close_stdout@@Base+0x2fb4>
   15acc:	b	14f80 <close_stdout@@Base+0x273c>
   15ad0:	cmp	r3, #65	; 0x41
   15ad4:	beq	15b08 <close_stdout@@Base+0x32c4>
   15ad8:	ldr	r2, [pc, #-384]	; 15960 <close_stdout@@Base+0x311c>
   15adc:	add	r2, pc, r2
   15ae0:	add	r2, r2, #648	; 0x288
   15ae4:	ldr	r1, [r2]
   15ae8:	mov	r0, r2
   15aec:	cmp	r1, #0
   15af0:	beq	159c0 <close_stdout@@Base+0x317c>
   15af4:	ldrb	r1, [r1]
   15af8:	add	r2, r2, #12
   15afc:	cmp	r1, r3
   15b00:	bne	15ae4 <close_stdout@@Base+0x32a0>
   15b04:	b	157f8 <close_stdout@@Base+0x2fb4>
   15b08:	ldr	r0, [pc, #-428]	; 15964 <close_stdout@@Base+0x3120>
   15b0c:	add	r0, pc, r0
   15b10:	add	r0, r0, #636	; 0x27c
   15b14:	b	157f8 <close_stdout@@Base+0x2fb4>
   15b18:	ldr	r3, [pc, #2312]	; 16428 <close_stdout@@Base+0x3be4>
   15b1c:	cmp	r2, #0
   15b20:	ldr	ip, [pc, #2308]	; 1642c <close_stdout@@Base+0x3be8>
   15b24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b28:	add	r3, pc, r3
   15b2c:	sub	sp, sp, #500	; 0x1f4
   15b30:	mov	r4, r1
   15b34:	str	r0, [sp, #32]
   15b38:	ldr	ip, [r3, ip]
   15b3c:	ldr	r3, [ip]
   15b40:	str	ip, [sp, #24]
   15b44:	str	r3, [sp, #492]	; 0x1ec
   15b48:	beq	16350 <close_stdout@@Base+0x3b0c>
   15b4c:	mov	r0, r2
   15b50:	ldr	r9, [r2]
   15b54:	ldr	r2, [r2, #4]
   15b58:	str	r2, [sp, #28]
   15b5c:	bl	11408 <localtime@plt>
   15b60:	subs	r5, r0, #0
   15b64:	beq	15dfc <close_stdout@@Base+0x35b8>
   15b68:	mov	r1, r4
   15b6c:	mov	r4, r1
   15b70:	add	r1, r1, #1
   15b74:	ldrb	fp, [r4]
   15b78:	sub	r6, fp, #9
   15b7c:	cmp	fp, #32
   15b80:	cmpne	r6, #4
   15b84:	movhi	r6, #0
   15b88:	movls	r6, #1
   15b8c:	bls	15b6c <close_stdout@@Base+0x3328>
   15b90:	ldr	r1, [pc, #2200]	; 16430 <close_stdout@@Base+0x3bec>
   15b94:	mov	r0, r4
   15b98:	mov	r2, #4
   15b9c:	add	r1, pc, r1
   15ba0:	bl	11594 <strncmp@plt>
   15ba4:	cmp	r0, #0
   15ba8:	bne	15c04 <close_stdout@@Base+0x33c0>
   15bac:	ldrb	r6, [r4, #4]
   15bb0:	add	r8, r4, #4
   15bb4:	cmp	r6, #0
   15bb8:	beq	15c04 <close_stdout@@Base+0x33c0>
   15bbc:	mov	r1, r8
   15bc0:	mov	sl, #1
   15bc4:	b	15be4 <close_stdout@@Base+0x33a0>
   15bc8:	cmp	r6, #34	; 0x22
   15bcc:	beq	16274 <close_stdout@@Base+0x3a30>
   15bd0:	ldrb	r6, [r1, #1]
   15bd4:	add	sl, sl, #1
   15bd8:	add	r1, r1, #1
   15bdc:	cmp	r6, #0
   15be0:	beq	15e04 <close_stdout@@Base+0x35c0>
   15be4:	cmp	r6, #92	; 0x5c
   15be8:	bne	15bc8 <close_stdout@@Base+0x3384>
   15bec:	ldrb	r3, [r1, #1]
   15bf0:	add	r1, r1, #1
   15bf4:	cmp	r3, #34	; 0x22
   15bf8:	cmpne	r3, #92	; 0x5c
   15bfc:	beq	15bd0 <close_stdout@@Base+0x338c>
   15c00:	mov	r6, #0
   15c04:	add	r7, sp, #292	; 0x124
   15c08:	mov	r3, fp
   15c0c:	mov	fp, r6
   15c10:	cmp	r3, #0
   15c14:	beq	15df0 <close_stdout@@Base+0x35ac>
   15c18:	ldr	r1, [r5, #20]
   15c1c:	mov	r3, #0
   15c20:	str	r3, [sp, #172]	; 0xac
   15c24:	mov	ip, #2
   15c28:	add	r1, r1, #1888	; 0x760
   15c2c:	str	r4, [sp, #140]	; 0x8c
   15c30:	add	r1, r1, #12
   15c34:	str	r1, [sp, #168]	; 0xa8
   15c38:	ldr	r1, [r5, #16]
   15c3c:	add	r8, r9, #7733248	; 0x760000
   15c40:	movw	r0, #269	; 0x10d
   15c44:	mov	sl, #62720	; 0xf500
   15c48:	add	r1, r1, #1
   15c4c:	str	r1, [sp, #176]	; 0xb0
   15c50:	ldr	lr, [r5, #12]
   15c54:	add	r8, r8, #42752	; 0xa700
   15c58:	ldr	r1, [sp, #28]
   15c5c:	movt	sl, #355	; 0x163
   15c60:	add	r4, sp, #96	; 0x60
   15c64:	mov	r9, r3
   15c68:	str	lr, [sp, #180]	; 0xb4
   15c6c:	ldr	lr, [r5, #8]
   15c70:	str	lr, [sp, #184]	; 0xb8
   15c74:	ldr	lr, [r5, #4]
   15c78:	str	lr, [sp, #188]	; 0xbc
   15c7c:	ldr	lr, [r5]
   15c80:	str	r1, [sp, #196]	; 0xc4
   15c84:	str	ip, [sp, #160]	; 0xa0
   15c88:	str	lr, [sp, #192]	; 0xc0
   15c8c:	ldr	lr, [r5, #32]
   15c90:	str	r3, [sp, #200]	; 0xc8
   15c94:	str	r3, [sp, #204]	; 0xcc
   15c98:	str	r3, [sp, #208]	; 0xd0
   15c9c:	str	r3, [sp, #212]	; 0xd4
   15ca0:	str	r3, [sp, #216]	; 0xd8
   15ca4:	str	r3, [sp, #220]	; 0xdc
   15ca8:	str	r3, [sp, #224]	; 0xe0
   15cac:	strb	r3, [sp, #228]	; 0xe4
   15cb0:	strb	r3, [sp, #229]	; 0xe5
   15cb4:	str	r3, [sp, #232]	; 0xe8
   15cb8:	str	r3, [sp, #236]	; 0xec
   15cbc:	str	r3, [sp, #248]	; 0xf8
   15cc0:	str	r3, [sp, #240]	; 0xf0
   15cc4:	str	r3, [sp, #244]	; 0xf4
   15cc8:	str	r3, [sp, #252]	; 0xfc
   15ccc:	ldr	ip, [r5, #40]	; 0x28
   15cd0:	str	lr, [sp, #84]	; 0x54
   15cd4:	str	r0, [sp, #260]	; 0x104
   15cd8:	str	ip, [sp, #256]	; 0x100
   15cdc:	ldr	r0, [r5, #32]
   15ce0:	str	r3, [sp, #268]	; 0x10c
   15ce4:	str	r0, [sp, #264]	; 0x108
   15ce8:	mov	r0, r4
   15cec:	add	r3, r8, r9
   15cf0:	str	r3, [sp, #96]	; 0x60
   15cf4:	bl	11408 <localtime@plt>
   15cf8:	cmp	r0, #0
   15cfc:	beq	15d1c <close_stdout@@Base+0x34d8>
   15d00:	ldr	r3, [r0, #40]	; 0x28
   15d04:	cmp	r3, #0
   15d08:	beq	15d1c <close_stdout@@Base+0x34d8>
   15d0c:	ldr	r2, [r0, #32]
   15d10:	ldr	r1, [sp, #264]	; 0x108
   15d14:	cmp	r2, r1
   15d18:	bne	16330 <close_stdout@@Base+0x3aec>
   15d1c:	add	r9, r9, #7733248	; 0x760000
   15d20:	add	r9, r9, #42752	; 0xa700
   15d24:	cmp	r9, sl
   15d28:	bne	15ce8 <close_stdout@@Base+0x34a4>
   15d2c:	ldr	r0, [sp, #256]	; 0x100
   15d30:	cmp	r0, #0
   15d34:	beq	15d58 <close_stdout@@Base+0x3514>
   15d38:	ldr	r1, [sp, #268]	; 0x10c
   15d3c:	cmp	r1, #0
   15d40:	beq	15d58 <close_stdout@@Base+0x3514>
   15d44:	bl	11294 <strcmp@plt>
   15d48:	cmp	r0, #0
   15d4c:	streq	r0, [sp, #268]	; 0x10c
   15d50:	mvneq	r3, #0
   15d54:	streq	r3, [sp, #264]	; 0x108
   15d58:	add	r0, sp, #140	; 0x8c
   15d5c:	bl	14988 <close_stdout@@Base+0x2144>
   15d60:	cmp	r0, #0
   15d64:	beq	15dcc <close_stdout@@Base+0x3588>
   15d68:	mov	r5, #0
   15d6c:	cmp	fp, #0
   15d70:	beq	15d9c <close_stdout@@Base+0x3558>
   15d74:	cmp	r6, #0
   15d78:	beq	16364 <close_stdout@@Base+0x3b20>
   15d7c:	ldr	r0, [pc, #1712]	; 16434 <close_stdout@@Base+0x3bf0>
   15d80:	mov	r1, r6
   15d84:	mov	r2, #1
   15d88:	add	r0, pc, r0
   15d8c:	bl	11474 <setenv@plt>
   15d90:	rsbs	r0, r0, #1
   15d94:	movcc	r0, #0
   15d98:	and	r5, r0, r5
   15d9c:	cmp	r6, r7
   15da0:	beq	15dfc <close_stdout@@Base+0x35b8>
   15da4:	mov	r0, r6
   15da8:	bl	112b8 <free@plt>
   15dac:	mov	r0, r5
   15db0:	ldr	sl, [sp, #24]
   15db4:	ldr	r2, [sp, #492]	; 0x1ec
   15db8:	ldr	r3, [sl]
   15dbc:	cmp	r2, r3
   15dc0:	bne	16424 <close_stdout@@Base+0x3be0>
   15dc4:	add	sp, sp, #500	; 0x1f4
   15dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dcc:	ldrb	r5, [sp, #228]	; 0xe4
   15dd0:	cmp	r5, #0
   15dd4:	beq	15e14 <close_stdout@@Base+0x35d0>
   15dd8:	add	r3, sp, #192	; 0xc0
   15ddc:	ldr	r8, [sp, #32]
   15de0:	mov	r5, #1
   15de4:	ldm	r3, {r0, r1}
   15de8:	stm	r8, {r0, r1}
   15dec:	b	15d6c <close_stdout@@Base+0x3528>
   15df0:	ldr	r4, [pc, #1600]	; 16438 <close_stdout@@Base+0x3bf4>
   15df4:	add	r4, pc, r4
   15df8:	b	15c18 <close_stdout@@Base+0x33d4>
   15dfc:	mov	r0, r5
   15e00:	b	15db0 <close_stdout@@Base+0x356c>
   15e04:	mov	r3, fp
   15e08:	add	r7, sp, #292	; 0x124
   15e0c:	mov	fp, r6
   15e10:	b	15c10 <close_stdout@@Base+0x33cc>
   15e14:	ldr	r3, [sp, #248]	; 0xf8
   15e18:	ldr	ip, [sp, #232]	; 0xe8
   15e1c:	ldr	r0, [sp, #236]	; 0xec
   15e20:	orr	r2, ip, r3
   15e24:	ldr	r9, [sp, #244]	; 0xf4
   15e28:	ldr	r1, [sp, #240]	; 0xf0
   15e2c:	orr	r2, r2, r0
   15e30:	ldr	r8, [sp, #252]	; 0xfc
   15e34:	orr	r9, r2, r9
   15e38:	add	r8, r1, r8
   15e3c:	orr	r8, r9, r8
   15e40:	cmp	r8, #1
   15e44:	bhi	15d6c <close_stdout@@Base+0x3528>
   15e48:	ldr	r5, [sp, #168]	; 0xa8
   15e4c:	ldr	r8, [sp, #172]	; 0xac
   15e50:	cmp	r5, #0
   15e54:	rsblt	r5, r5, #0
   15e58:	blt	15e74 <close_stdout@@Base+0x3630>
   15e5c:	cmp	r8, #2
   15e60:	bne	15e74 <close_stdout@@Base+0x3630>
   15e64:	cmp	r5, #68	; 0x44
   15e68:	movw	r8, #1900	; 0x76c
   15e6c:	movle	r8, #2000	; 0x7d0
   15e70:	add	r5, r5, r8
   15e74:	ldr	r8, [sp, #180]	; 0xb4
   15e78:	cmp	r3, #0
   15e7c:	ldr	r3, [sp, #176]	; 0xb0
   15e80:	sub	r5, r5, #1888	; 0x760
   15e84:	sub	r5, r5, #12
   15e88:	str	r5, [sp, #72]	; 0x48
   15e8c:	sub	r3, r3, #1
   15e90:	str	r8, [sp, #64]	; 0x40
   15e94:	str	r3, [sp, #68]	; 0x44
   15e98:	beq	1637c <close_stdout@@Base+0x3b38>
   15e9c:	ldr	r3, [sp, #160]	; 0xa0
   15ea0:	ldr	r0, [sp, #184]	; 0xb8
   15ea4:	cmp	r3, #0
   15ea8:	beq	163f4 <close_stdout@@Base+0x3bb0>
   15eac:	cmp	r3, #1
   15eb0:	beq	163cc <close_stdout@@Base+0x3b88>
   15eb4:	cmp	r0, #23
   15eb8:	bhi	163e4 <close_stdout@@Base+0x3ba0>
   15ebc:	mov	r3, r0
   15ec0:	ldr	ip, [sp, #188]	; 0xbc
   15ec4:	ldr	r0, [sp, #192]	; 0xc0
   15ec8:	str	r3, [sp, #60]	; 0x3c
   15ecc:	str	ip, [sp, #56]	; 0x38
   15ed0:	str	r0, [sp, #52]	; 0x34
   15ed4:	cmp	r2, #0
   15ed8:	add	lr, sp, #52	; 0x34
   15edc:	mov	ip, r4
   15ee0:	mvnne	r3, #0
   15ee4:	strne	r3, [sp, #84]	; 0x54
   15ee8:	cmp	r1, #0
   15eec:	mov	r8, lr
   15ef0:	ldrne	r3, [sp, #152]	; 0x98
   15ef4:	strne	r3, [sp, #84]	; 0x54
   15ef8:	ldm	lr!, {r0, r1, r2, r3}
   15efc:	stmia	ip!, {r0, r1, r2, r3}
   15f00:	ldm	lr!, {r0, r1, r2, r3}
   15f04:	stmia	ip!, {r0, r1, r2, r3}
   15f08:	ldm	lr, {r0, r1, r2}
   15f0c:	stm	ip, {r0, r1, r2}
   15f10:	mov	r0, r8
   15f14:	bl	112a0 <mktime@plt>
   15f18:	mov	r1, r8
   15f1c:	mov	r5, r0
   15f20:	mov	r0, r4
   15f24:	mov	r2, r5
   15f28:	bl	14748 <close_stdout@@Base+0x1f04>
   15f2c:	cmp	r0, #0
   15f30:	bne	1600c <close_stdout@@Base+0x37c8>
   15f34:	ldr	r5, [sp, #252]	; 0xfc
   15f38:	cmp	r5, #0
   15f3c:	beq	15d6c <close_stdout@@Base+0x3528>
   15f40:	ldr	r9, [sp, #156]	; 0x9c
   15f44:	movw	r2, #34953	; 0x8889
   15f48:	movt	r2, #34952	; 0x8888
   15f4c:	eor	r3, r9, r9, asr #31
   15f50:	sub	r3, r3, r9, asr #31
   15f54:	cmp	fp, #0
   15f58:	smull	sl, r2, r2, r3
   15f5c:	asr	r1, r3, #31
   15f60:	add	r5, r2, r3
   15f64:	rsb	r5, r1, r5, asr #5
   15f68:	rsb	r2, r5, r5, lsl #4
   15f6c:	sub	r3, r3, r2, lsl #2
   15f70:	beq	1640c <close_stdout@@Base+0x3bc8>
   15f74:	ldr	r2, [pc, #1216]	; 1643c <close_stdout@@Base+0x3bf8>
   15f78:	mov	r1, #1
   15f7c:	str	r5, [sp, #4]
   15f80:	add	r5, sp, #392	; 0x188
   15f84:	str	r3, [sp, #8]
   15f88:	add	r2, pc, r2
   15f8c:	ldr	r3, [pc, #1196]	; 16440 <close_stdout@@Base+0x3bfc>
   15f90:	add	r9, r2, r9, lsr #31
   15f94:	mov	r0, r5
   15f98:	mov	r2, #19
   15f9c:	add	r3, pc, r3
   15fa0:	str	r9, [sp]
   15fa4:	bl	11498 <__sprintf_chk@plt>
   15fa8:	ldr	r0, [pc, #1172]	; 16444 <close_stdout@@Base+0x3c00>
   15fac:	mov	r1, r5
   15fb0:	mov	r2, #1
   15fb4:	add	r0, pc, r0
   15fb8:	bl	11474 <setenv@plt>
   15fbc:	cmp	r0, #0
   15fc0:	bne	15d68 <close_stdout@@Base+0x3524>
   15fc4:	mov	lr, r4
   15fc8:	mov	ip, r8
   15fcc:	ldm	lr!, {r0, r1, r2, r3}
   15fd0:	mov	fp, #1
   15fd4:	stmia	ip!, {r0, r1, r2, r3}
   15fd8:	ldm	lr!, {r0, r1, r2, r3}
   15fdc:	stmia	ip!, {r0, r1, r2, r3}
   15fe0:	ldm	lr, {r0, r1, r2}
   15fe4:	stm	ip, {r0, r1, r2}
   15fe8:	mov	r0, r8
   15fec:	bl	112a0 <mktime@plt>
   15ff0:	mov	r1, r8
   15ff4:	mov	r5, r0
   15ff8:	mov	r0, r4
   15ffc:	mov	r2, r5
   16000:	bl	14748 <close_stdout@@Base+0x1f04>
   16004:	cmp	r0, #0
   16008:	beq	15d68 <close_stdout@@Base+0x3524>
   1600c:	ldr	r3, [sp, #236]	; 0xec
   16010:	cmp	r3, #0
   16014:	beq	1609c <close_stdout@@Base+0x3858>
   16018:	ldr	r1, [sp, #232]	; 0xe8
   1601c:	cmp	r1, #0
   16020:	bne	1609c <close_stdout@@Base+0x3858>
   16024:	ldr	r4, [sp, #148]	; 0x94
   16028:	movw	r3, #9363	; 0x2493
   1602c:	ldr	lr, [sp, #76]	; 0x4c
   16030:	movt	r3, #37449	; 0x9249
   16034:	ldr	r0, [sp, #144]	; 0x90
   16038:	rsb	r2, lr, r4
   1603c:	ldr	ip, [sp, #64]	; 0x40
   16040:	add	r2, r2, #7
   16044:	cmp	r0, #0
   16048:	smull	r5, r3, r3, r2
   1604c:	asr	r5, r2, #31
   16050:	add	r3, r3, r2
   16054:	rsb	r3, r5, r3, asr #2
   16058:	rsb	r3, r3, r3, lsl #3
   1605c:	rsb	r3, r3, r2
   16060:	ble	1606c <close_stdout@@Base+0x3828>
   16064:	subs	r1, r4, lr
   16068:	movne	r1, #1
   1606c:	rsb	r2, r1, r0
   16070:	mov	r0, r8
   16074:	mvn	r1, #0
   16078:	str	r1, [sp, #84]	; 0x54
   1607c:	rsb	r2, r2, r2, lsl #3
   16080:	add	r3, r3, r2
   16084:	add	ip, ip, r3
   16088:	str	ip, [sp, #64]	; 0x40
   1608c:	bl	112a0 <mktime@plt>
   16090:	cmn	r0, #1
   16094:	mov	r5, r0
   16098:	beq	15d68 <close_stdout@@Base+0x3524>
   1609c:	ldr	r3, [sp, #200]	; 0xc8
   160a0:	ldr	r1, [sp, #204]	; 0xcc
   160a4:	ldr	r2, [sp, #208]	; 0xd0
   160a8:	orr	r0, r1, r3
   160ac:	orrs	r0, r0, r2
   160b0:	beq	16144 <close_stdout@@Base+0x3900>
   160b4:	ldr	r0, [sp, #68]	; 0x44
   160b8:	lsr	r4, r1, #31
   160bc:	ldr	r5, [sp, #64]	; 0x40
   160c0:	lsr	ip, r2, #31
   160c4:	ldr	r9, [sp, #72]	; 0x48
   160c8:	add	r1, r1, r0
   160cc:	add	r2, r2, r5
   160d0:	cmp	r0, r1
   160d4:	movle	r0, r4
   160d8:	eorgt	r0, r4, #1
   160dc:	cmp	r5, r2
   160e0:	eorgt	ip, ip, #1
   160e4:	add	r4, r3, r9
   160e8:	lsr	r3, r3, #31
   160ec:	orr	r0, r0, ip
   160f0:	cmp	r9, r4
   160f4:	movle	r9, r3
   160f8:	eorgt	r9, r3, #1
   160fc:	orrs	r9, r0, r9
   16100:	bne	15d68 <close_stdout@@Base+0x3524>
   16104:	ldr	r5, [sp, #100]	; 0x64
   16108:	mov	r0, r8
   1610c:	ldr	lr, [sp, #104]	; 0x68
   16110:	ldr	ip, [sp, #96]	; 0x60
   16114:	ldr	r3, [sp, #128]	; 0x80
   16118:	str	r5, [sp, #56]	; 0x38
   1611c:	str	r4, [sp, #72]	; 0x48
   16120:	str	r1, [sp, #68]	; 0x44
   16124:	str	r2, [sp, #64]	; 0x40
   16128:	str	lr, [sp, #60]	; 0x3c
   1612c:	str	ip, [sp, #52]	; 0x34
   16130:	str	r3, [sp, #84]	; 0x54
   16134:	bl	112a0 <mktime@plt>
   16138:	cmn	r0, #1
   1613c:	mov	r5, r0
   16140:	beq	15d68 <close_stdout@@Base+0x3524>
   16144:	ldr	r3, [sp, #252]	; 0xfc
   16148:	cmp	r3, #0
   1614c:	beq	16180 <close_stdout@@Base+0x393c>
   16150:	ldr	r3, [sp, #156]	; 0x9c
   16154:	ldr	r2, [sp, #88]	; 0x58
   16158:	rsb	r3, r3, r3, lsl #4
   1615c:	rsb	r2, r2, r3, lsl #2
   16160:	rsb	r3, r2, r5
   16164:	lsr	r2, r2, #31
   16168:	cmp	r5, r3
   1616c:	movge	r5, r2
   16170:	eorlt	r5, r2, #1
   16174:	cmp	r5, #0
   16178:	bne	15d68 <close_stdout@@Base+0x3524>
   1617c:	mov	r5, r3
   16180:	ldr	r3, [sp, #224]	; 0xe0
   16184:	movw	r1, #12193	; 0x2fa1
   16188:	ldr	r9, [sp, #196]	; 0xc4
   1618c:	movt	r1, #17592	; 0x44b8
   16190:	mov	r4, #51712	; 0xca00
   16194:	movt	r4, #15258	; 0x3b9a
   16198:	add	r9, r9, r3
   1619c:	ldr	r0, [sp, #212]	; 0xd4
   161a0:	mov	ip, #3600	; 0xe10
   161a4:	mov	r3, #51712	; 0xca00
   161a8:	smull	sl, r8, r1, r9
   161ac:	asr	r2, r9, #31
   161b0:	mul	ip, ip, r0
   161b4:	movt	r3, #15258	; 0x3b9a
   161b8:	ldr	r0, [sp, #216]	; 0xd8
   161bc:	rsb	r2, r2, r8, asr #28
   161c0:	rsb	r0, r0, r0, lsl #4
   161c4:	mls	r2, r4, r2, r9
   161c8:	lsl	r0, r0, #2
   161cc:	add	r3, r2, r3
   161d0:	smull	r2, r8, r1, r3
   161d4:	add	r2, r5, ip
   161d8:	lsr	ip, ip, #31
   161dc:	asr	sl, r3, #31
   161e0:	str	sl, [sp, #36]	; 0x24
   161e4:	cmp	r5, r2
   161e8:	movle	sl, ip
   161ec:	eorgt	sl, ip, #1
   161f0:	add	ip, r2, r0
   161f4:	lsr	r0, r0, #31
   161f8:	cmp	ip, r2
   161fc:	movge	r5, r0
   16200:	eorlt	r5, r0, #1
   16204:	ldr	r0, [sp, #36]	; 0x24
   16208:	orr	r5, r5, sl
   1620c:	rsb	r2, r0, r8, asr #28
   16210:	ldr	r8, [sp, #220]	; 0xdc
   16214:	mls	r2, r4, r2, r3
   16218:	add	r0, ip, r8
   1621c:	lsr	r8, r8, #31
   16220:	cmp	r0, ip
   16224:	movge	ip, r8
   16228:	eorlt	ip, r8, #1
   1622c:	rsb	r9, r2, r9
   16230:	orr	r5, r5, ip
   16234:	smull	sl, r1, r1, r9
   16238:	asr	r9, r9, #31
   1623c:	rsb	r1, r9, r1, asr #28
   16240:	add	r3, r0, r1
   16244:	lsr	r1, r1, #31
   16248:	cmp	r3, r0
   1624c:	movge	r0, r1
   16250:	eorlt	r0, r1, #1
   16254:	orrs	r0, r5, r0
   16258:	bne	15d68 <close_stdout@@Base+0x3524>
   1625c:	ldr	r5, [sp, #32]
   16260:	ldr	r8, [sp, #32]
   16264:	str	r3, [r5]
   16268:	mov	r5, #1
   1626c:	str	r2, [r8, #4]
   16270:	b	15d6c <close_stdout@@Base+0x3528>
   16274:	add	r7, sp, #292	; 0x124
   16278:	cmp	sl, #100	; 0x64
   1627c:	mov	r0, r7
   16280:	movls	fp, #0
   16284:	movhi	fp, #1
   16288:	bl	147e4 <close_stdout@@Base+0x1fa0>
   1628c:	cmp	fp, #0
   16290:	addeq	sl, sp, #392	; 0x188
   16294:	mov	r6, r0
   16298:	bne	163bc <close_stdout@@Base+0x3b78>
   1629c:	ldrb	r2, [r4, #4]
   162a0:	mov	lr, sl
   162a4:	cmp	r2, #34	; 0x22
   162a8:	beq	162d4 <close_stdout@@Base+0x3a90>
   162ac:	subs	r3, r2, #92	; 0x5c
   162b0:	rsbs	r2, r3, #0
   162b4:	adcs	r2, r2, r3
   162b8:	add	r3, r8, r2
   162bc:	ldrb	r2, [r8, r2]
   162c0:	add	r8, r3, #1
   162c4:	strb	r2, [lr], #1
   162c8:	ldrb	r2, [r3, #1]
   162cc:	cmp	r2, #34	; 0x22
   162d0:	bne	162ac <close_stdout@@Base+0x3a68>
   162d4:	ldr	r0, [pc, #364]	; 16448 <close_stdout@@Base+0x3c04>
   162d8:	mov	r2, #0
   162dc:	mov	r1, sl
   162e0:	strb	r2, [lr]
   162e4:	add	r0, pc, r0
   162e8:	mov	r2, #1
   162ec:	bl	11474 <setenv@plt>
   162f0:	cmp	fp, #0
   162f4:	mov	r4, r0
   162f8:	bne	163b0 <close_stdout@@Base+0x3b6c>
   162fc:	cmp	r4, #0
   16300:	movne	r5, #0
   16304:	bne	15d9c <close_stdout@@Base+0x3558>
   16308:	add	r2, r8, #1
   1630c:	mov	r4, r2
   16310:	add	r2, r2, #1
   16314:	ldrb	r3, [r4]
   16318:	sub	r1, r3, #9
   1631c:	cmp	r3, #32
   16320:	cmpne	r1, #4
   16324:	bls	1630c <close_stdout@@Base+0x3ac8>
   16328:	mov	fp, #1
   1632c:	b	15c10 <close_stdout@@Base+0x33cc>
   16330:	str	r3, [sp, #268]	; 0x10c
   16334:	movw	r3, #269	; 0x10d
   16338:	str	r3, [sp, #272]	; 0x110
   1633c:	mov	r2, #0
   16340:	ldr	r3, [r0, #32]
   16344:	str	r2, [sp, #280]	; 0x118
   16348:	str	r3, [sp, #276]	; 0x114
   1634c:	b	15d2c <close_stdout@@Base+0x34e8>
   16350:	add	r5, sp, #44	; 0x2c
   16354:	mov	r0, r5
   16358:	bl	1442c <close_stdout@@Base+0x1be8>
   1635c:	mov	r2, r5
   16360:	b	15b4c <close_stdout@@Base+0x3308>
   16364:	ldr	r0, [pc, #224]	; 1644c <close_stdout@@Base+0x3c08>
   16368:	add	r0, pc, r0
   1636c:	bl	11588 <unsetenv@plt>
   16370:	rsbs	r0, r0, #1
   16374:	movcc	r0, #0
   16378:	b	15d98 <close_stdout@@Base+0x3554>
   1637c:	ldrb	r3, [sp, #229]	; 0xe5
   16380:	cmp	r3, #0
   16384:	beq	16398 <close_stdout@@Base+0x3b54>
   16388:	cmp	ip, #0
   1638c:	bne	16398 <close_stdout@@Base+0x3b54>
   16390:	cmp	r0, #0
   16394:	beq	15e9c <close_stdout@@Base+0x3658>
   16398:	mov	r3, #0
   1639c:	str	r3, [sp, #52]	; 0x34
   163a0:	str	r3, [sp, #56]	; 0x38
   163a4:	str	r3, [sp, #60]	; 0x3c
   163a8:	str	r3, [sp, #196]	; 0xc4
   163ac:	b	15ed4 <close_stdout@@Base+0x3690>
   163b0:	mov	r0, sl
   163b4:	bl	112b8 <free@plt>
   163b8:	b	162fc <close_stdout@@Base+0x3ab8>
   163bc:	mov	r0, sl
   163c0:	bl	186ec <close_stdout@@Base+0x5ea8>
   163c4:	mov	sl, r0
   163c8:	b	1629c <close_stdout@@Base+0x3a58>
   163cc:	sub	r3, r0, #1
   163d0:	cmp	r3, #10
   163d4:	addls	r3, r0, #12
   163d8:	bls	15ec0 <close_stdout@@Base+0x367c>
   163dc:	cmp	r0, #12
   163e0:	beq	15ebc <close_stdout@@Base+0x3678>
   163e4:	mvn	r3, #0
   163e8:	mov	r5, #0
   163ec:	str	r3, [sp, #60]	; 0x3c
   163f0:	b	15d6c <close_stdout@@Base+0x3528>
   163f4:	sub	ip, r0, #1
   163f8:	cmp	ip, #10
   163fc:	bls	15ebc <close_stdout@@Base+0x3678>
   16400:	cmp	r0, #12
   16404:	bne	163e4 <close_stdout@@Base+0x3ba0>
   16408:	b	15ec0 <close_stdout@@Base+0x367c>
   1640c:	mov	r0, r7
   16410:	str	r3, [sp, #20]
   16414:	bl	147e4 <close_stdout@@Base+0x1fa0>
   16418:	ldr	r3, [sp, #20]
   1641c:	mov	r6, r0
   16420:	b	15f74 <close_stdout@@Base+0x3730>
   16424:	bl	11318 <__stack_chk_fail@plt>
   16428:	ldrdeq	r7, [r1], -r0
   1642c:	andeq	r0, r0, r0, lsr r1
   16430:	andeq	r5, r0, ip, lsr #21
   16434:	andeq	r5, r0, ip, lsl #17
   16438:	andeq	r5, r0, r0, asr r8
   1643c:	ldrdeq	r5, [r0], -r8
   16440:			; <UNDEFINED> instruction: 0x000056b4
   16444:	andeq	r5, r0, r0, ror #12
   16448:	andeq	r5, r0, r0, lsr r3
   1644c:	andeq	r5, r0, ip, lsr #5
   16450:	ldr	ip, [pc, #212]	; 1652c <close_stdout@@Base+0x3ce8>
   16454:	cmp	r2, #1
   16458:	push	{r4, r5, r6, lr}
   1645c:	add	ip, pc, ip
   16460:	ldr	r4, [pc, #200]	; 16530 <close_stdout@@Base+0x3cec>
   16464:	sub	sp, sp, #8
   16468:	mov	r5, r0
   1646c:	ldr	r4, [ip, r4]
   16470:	ldr	ip, [r4]
   16474:	str	ip, [sp, #4]
   16478:	beq	164d8 <close_stdout@@Base+0x3c94>
   1647c:	bcc	164b0 <close_stdout@@Base+0x3c6c>
   16480:	cmp	r2, #2
   16484:	bne	164ac <close_stdout@@Base+0x3c68>
   16488:	tst	r3, #4
   1648c:	bne	16504 <close_stdout@@Base+0x3cc0>
   16490:	mov	r0, #1
   16494:	ldr	r2, [sp, #4]
   16498:	ldr	r3, [r4]
   1649c:	cmp	r2, r3
   164a0:	bne	16528 <close_stdout@@Base+0x3ce4>
   164a4:	add	sp, sp, #8
   164a8:	pop	{r4, r5, r6, pc}
   164ac:	bl	115a0 <abort@plt>
   164b0:	mov	r0, sp
   164b4:	bl	112f4 <time@plt>
   164b8:	mov	r0, sp
   164bc:	bl	11408 <localtime@plt>
   164c0:	cmp	r0, #0
   164c4:	beq	16490 <close_stdout@@Base+0x3c4c>
   164c8:	ldr	r3, [r0, #20]
   164cc:	mov	r0, #0
   164d0:	str	r3, [r5]
   164d4:	b	16494 <close_stdout@@Base+0x3c50>
   164d8:	ldr	r2, [r1]
   164dc:	str	r2, [r0]
   164e0:	ldr	r1, [r1]
   164e4:	cmp	r1, #68	; 0x44
   164e8:	movgt	r0, #0
   164ec:	bgt	16494 <close_stdout@@Base+0x3c50>
   164f0:	ands	r0, r3, #16
   164f4:	addeq	r2, r2, #100	; 0x64
   164f8:	streq	r2, [r5]
   164fc:	beq	16494 <close_stdout@@Base+0x3c50>
   16500:	b	16490 <close_stdout@@Base+0x3c4c>
   16504:	ldr	r3, [r1]
   16508:	mov	ip, #100	; 0x64
   1650c:	ldr	r2, [r1, #4]
   16510:	mov	r0, #0
   16514:	mla	r3, ip, r3, r2
   16518:	sub	r3, r3, #1888	; 0x760
   1651c:	sub	r3, r3, #12
   16520:	str	r3, [r5]
   16524:	b	16494 <close_stdout@@Base+0x3c50>
   16528:	bl	11318 <__stack_chk_fail@plt>
   1652c:	muleq	r1, ip, fp
   16530:	andeq	r0, r0, r0, lsr r1
   16534:	ldr	r3, [pc, #772]	; 16840 <close_stdout@@Base+0x3ffc>
   16538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1653c:	mov	r6, r1
   16540:	ldr	r1, [pc, #764]	; 16844 <close_stdout@@Base+0x4000>
   16544:	add	r3, pc, r3
   16548:	sub	sp, sp, #148	; 0x94
   1654c:	mov	r9, r0
   16550:	mov	r0, r6
   16554:	mov	r7, r2
   16558:	ldr	r8, [r3, r1]
   1655c:	ldr	r3, [r8]
   16560:	str	r3, [sp, #140]	; 0x8c
   16564:	bl	1145c <strlen@plt>
   16568:	ands	r4, r7, #8
   1656c:	moveq	sl, r4
   16570:	mov	fp, r0
   16574:	moveq	r5, r0
   16578:	beq	16594 <close_stdout@@Base+0x3d50>
   1657c:	mov	r0, r6
   16580:	mov	r1, #46	; 0x2e
   16584:	bl	11468 <strchr@plt>
   16588:	subs	sl, r0, #0
   1658c:	rsbne	r5, r6, sl
   16590:	moveq	r5, fp
   16594:	bic	r3, r5, #2
   16598:	cmp	r3, #8
   1659c:	beq	165c4 <close_stdout@@Base+0x3d80>
   165a0:	cmp	r5, #12
   165a4:	beq	165c4 <close_stdout@@Base+0x3d80>
   165a8:	mov	r0, #0
   165ac:	ldr	r2, [sp, #140]	; 0x8c
   165b0:	ldr	r3, [r8]
   165b4:	cmp	r2, r3
   165b8:	bne	1683c <close_stdout@@Base+0x3ff8>
   165bc:	add	sp, sp, #148	; 0x94
   165c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165c4:	cmp	sl, #0
   165c8:	beq	165e0 <close_stdout@@Base+0x3d9c>
   165cc:	cmp	r4, #0
   165d0:	beq	165a8 <close_stdout@@Base+0x3d64>
   165d4:	rsb	fp, r5, fp
   165d8:	cmp	fp, #3
   165dc:	bne	165a8 <close_stdout@@Base+0x3d64>
   165e0:	cmp	r5, #0
   165e4:	beq	1665c <close_stdout@@Base+0x3e18>
   165e8:	ldrb	r3, [r6]
   165ec:	sub	r3, r3, #48	; 0x30
   165f0:	cmp	r3, #9
   165f4:	bhi	165a8 <close_stdout@@Base+0x3d64>
   165f8:	sub	r3, r6, #1
   165fc:	mov	ip, r6
   16600:	add	r3, r3, r5
   16604:	b	16618 <close_stdout@@Base+0x3dd4>
   16608:	ldrb	r4, [ip, #1]!
   1660c:	sub	r4, r4, #48	; 0x30
   16610:	cmp	r4, #9
   16614:	bhi	165a8 <close_stdout@@Base+0x3d64>
   16618:	cmp	ip, r3
   1661c:	bne	16608 <close_stdout@@Base+0x3dc4>
   16620:	lsrs	r5, r5, #1
   16624:	beq	1665c <close_stdout@@Base+0x3e18>
   16628:	add	r1, sp, #8
   1662c:	add	ip, r6, r5, lsl #1
   16630:	mov	r3, r6
   16634:	ldrb	r2, [r3]
   16638:	add	r3, r3, #2
   1663c:	ldrb	r0, [r3, #-1]
   16640:	cmp	r3, ip
   16644:	sub	r2, r2, #48	; 0x30
   16648:	add	r2, r2, r2, lsl #2
   1664c:	add	r2, r0, r2, lsl #1
   16650:	sub	r2, r2, #48	; 0x30
   16654:	str	r2, [r1, #4]!
   16658:	bne	16634 <close_stdout@@Base+0x3df0>
   1665c:	tst	r7, #1
   16660:	bne	167e8 <close_stdout@@Base+0x3fa4>
   16664:	sub	r2, r5, #4
   16668:	add	r1, sp, #12
   1666c:	ldr	r4, [r1, #4]
   16670:	tst	r7, #2
   16674:	ldr	ip, [r1, #8]
   16678:	ldr	r3, [r1, #12]
   1667c:	ldr	r0, [r1]
   16680:	str	r4, [sp, #48]	; 0x30
   16684:	sub	r0, r0, #1
   16688:	str	ip, [sp, #44]	; 0x2c
   1668c:	str	r0, [sp, #52]	; 0x34
   16690:	str	r3, [sp, #40]	; 0x28
   16694:	bne	16818 <close_stdout@@Base+0x3fd4>
   16698:	cmp	sl, #0
   1669c:	beq	16834 <close_stdout@@Base+0x3ff0>
   166a0:	ldrb	r3, [sl, #1]
   166a4:	sub	r3, r3, #48	; 0x30
   166a8:	cmp	r3, #9
   166ac:	bhi	165a8 <close_stdout@@Base+0x3d64>
   166b0:	ldrb	r2, [sl, #2]
   166b4:	sub	r1, r2, #48	; 0x30
   166b8:	cmp	r1, #9
   166bc:	bhi	165a8 <close_stdout@@Base+0x3d64>
   166c0:	add	r3, r3, r3, lsl #2
   166c4:	add	r3, r2, r3, lsl #1
   166c8:	sub	r3, r3, #48	; 0x30
   166cc:	str	r3, [sp, #36]	; 0x24
   166d0:	add	lr, sp, #36	; 0x24
   166d4:	add	ip, sp, #80	; 0x50
   166d8:	mvn	r5, #0
   166dc:	ldm	lr!, {r0, r1, r2, r3}
   166e0:	mov	r4, ip
   166e4:	stmia	ip!, {r0, r1, r2, r3}
   166e8:	ldm	lr!, {r0, r1, r2, r3}
   166ec:	stmia	ip!, {r0, r1, r2, r3}
   166f0:	ldm	lr, {r0, r1, r2}
   166f4:	stm	ip, {r0, r1, r2}
   166f8:	mov	r0, r4
   166fc:	str	r5, [sp, #112]	; 0x70
   16700:	bl	112a0 <mktime@plt>
   16704:	cmp	r0, r5
   16708:	str	r0, [sp, #4]
   1670c:	movne	r0, r4
   16710:	beq	167d4 <close_stdout@@Base+0x3f90>
   16714:	ldr	r2, [r0, #20]
   16718:	ldr	r4, [r0, #16]
   1671c:	ldr	r1, [sp, #52]	; 0x34
   16720:	ldr	r3, [sp, #56]	; 0x38
   16724:	eor	r4, r4, r1
   16728:	ldr	ip, [r0, #12]
   1672c:	eor	r3, r2, r3
   16730:	ldr	r1, [sp, #48]	; 0x30
   16734:	ldr	r2, [r0, #8]
   16738:	orr	r4, r4, r3
   1673c:	ldr	r3, [sp, #44]	; 0x2c
   16740:	eor	ip, ip, r1
   16744:	orr	r4, r4, ip
   16748:	ldr	r1, [r0, #4]
   1674c:	eor	r3, r2, r3
   16750:	ldr	ip, [sp, #40]	; 0x28
   16754:	ldr	r2, [r0]
   16758:	orr	r0, r4, r3
   1675c:	ldr	r3, [sp, #36]	; 0x24
   16760:	eor	r1, r1, ip
   16764:	orr	r1, r0, r1
   16768:	eor	r2, r3, r2
   1676c:	orrs	r2, r1, r2
   16770:	beq	167c4 <close_stdout@@Base+0x3f80>
   16774:	cmp	r3, #60	; 0x3c
   16778:	bne	165a8 <close_stdout@@Base+0x3d64>
   1677c:	add	r4, sp, #124	; 0x7c
   16780:	mov	r1, r6
   16784:	mov	r2, #16
   16788:	mov	r0, r4
   1678c:	bl	11360 <__stpcpy_chk@plt>
   16790:	ldr	ip, [pc, #176]	; 16848 <close_stdout@@Base+0x4004>
   16794:	mov	r1, r4
   16798:	mov	r2, r7
   1679c:	add	ip, pc, ip
   167a0:	ldrh	lr, [ip]
   167a4:	ldrb	ip, [ip, #2]
   167a8:	mov	r3, r0
   167ac:	add	r0, sp, #8
   167b0:	strh	lr, [r3, #-2]
   167b4:	strb	ip, [r3]
   167b8:	bl	16534 <close_stdout@@Base+0x3cf0>
   167bc:	cmp	r0, #0
   167c0:	beq	165ac <close_stdout@@Base+0x3d68>
   167c4:	ldr	r3, [sp, #4]
   167c8:	mov	r0, #1
   167cc:	str	r3, [r9]
   167d0:	b	165ac <close_stdout@@Base+0x3d68>
   167d4:	add	r0, sp, #4
   167d8:	bl	11408 <localtime@plt>
   167dc:	cmp	r0, #0
   167e0:	bne	16714 <close_stdout@@Base+0x3ed0>
   167e4:	b	165a8 <close_stdout@@Base+0x3d64>
   167e8:	add	r4, sp, #12
   167ec:	add	r0, sp, #56	; 0x38
   167f0:	sub	r2, r5, #4
   167f4:	mov	r3, r7
   167f8:	mov	r1, r4
   167fc:	bl	16450 <close_stdout@@Base+0x3c0c>
   16800:	cmp	r0, #0
   16804:	bne	165a8 <close_stdout@@Base+0x3d64>
   16808:	sub	r1, r5, #-1073741820	; 0xc0000004
   1680c:	mov	r2, r0
   16810:	add	r1, r4, r1, lsl #2
   16814:	b	1666c <close_stdout@@Base+0x3e28>
   16818:	add	r1, r1, #16
   1681c:	add	r0, sp, #56	; 0x38
   16820:	mov	r3, r7
   16824:	bl	16450 <close_stdout@@Base+0x3c0c>
   16828:	cmp	r0, #0
   1682c:	beq	16698 <close_stdout@@Base+0x3e54>
   16830:	b	165a8 <close_stdout@@Base+0x3d64>
   16834:	str	sl, [sp, #36]	; 0x24
   16838:	b	166d0 <close_stdout@@Base+0x3e8c>
   1683c:	bl	11318 <__stack_chk_fail@plt>
   16840:			; <UNDEFINED> instruction: 0x00016ab4
   16844:	andeq	r0, r0, r0, lsr r1
   16848:			; <UNDEFINED> instruction: 0x000051b0
   1684c:	push	{r3, r4, r5, r6, r7, lr}
   16850:	subs	r4, r0, #0
   16854:	ldr	r5, [pc, #172]	; 16908 <close_stdout@@Base+0x40c4>
   16858:	add	r5, pc, r5
   1685c:	beq	168e4 <close_stdout@@Base+0x40a0>
   16860:	mov	r1, #47	; 0x2f
   16864:	bl	11540 <strrchr@plt>
   16868:	subs	r6, r0, #0
   1686c:	beq	168c8 <close_stdout@@Base+0x4084>
   16870:	add	r7, r6, #1
   16874:	rsb	r3, r4, r7
   16878:	cmp	r3, #6
   1687c:	ble	168c8 <close_stdout@@Base+0x4084>
   16880:	ldr	r1, [pc, #132]	; 1690c <close_stdout@@Base+0x40c8>
   16884:	sub	r0, r6, #6
   16888:	mov	r2, #7
   1688c:	add	r1, pc, r1
   16890:	bl	11594 <strncmp@plt>
   16894:	cmp	r0, #0
   16898:	bne	168c8 <close_stdout@@Base+0x4084>
   1689c:	ldr	r1, [pc, #108]	; 16910 <close_stdout@@Base+0x40cc>
   168a0:	mov	r0, r7
   168a4:	mov	r2, #3
   168a8:	add	r1, pc, r1
   168ac:	bl	11594 <strncmp@plt>
   168b0:	cmp	r0, #0
   168b4:	movne	r4, r7
   168b8:	ldreq	r3, [pc, #84]	; 16914 <close_stdout@@Base+0x40d0>
   168bc:	addeq	r4, r6, #4
   168c0:	ldreq	r3, [r5, r3]
   168c4:	streq	r4, [r3]
   168c8:	ldr	r2, [pc, #72]	; 16918 <close_stdout@@Base+0x40d4>
   168cc:	ldr	r3, [pc, #72]	; 1691c <close_stdout@@Base+0x40d8>
   168d0:	ldr	r2, [r5, r2]
   168d4:	str	r4, [r2]
   168d8:	ldr	r3, [r5, r3]
   168dc:	str	r4, [r3]
   168e0:	pop	{r3, r4, r5, r6, r7, pc}
   168e4:	ldr	r3, [pc, #52]	; 16920 <close_stdout@@Base+0x40dc>
   168e8:	mov	r1, #1
   168ec:	ldr	r0, [pc, #48]	; 16924 <close_stdout@@Base+0x40e0>
   168f0:	mov	r2, #55	; 0x37
   168f4:	ldr	r3, [r5, r3]
   168f8:	add	r0, pc, r0
   168fc:	ldr	r3, [r3]
   16900:	bl	11348 <fwrite@plt>
   16904:	bl	115a0 <abort@plt>
   16908:	andeq	r6, r1, r0, lsr #15
   1690c:	strdeq	r5, [r0], -ip
   16910:	andeq	r5, r0, r8, ror #1
   16914:	andeq	r0, r0, r8, ror #2
   16918:	andeq	r0, r0, r0, ror #2
   1691c:	andeq	r0, r0, ip, asr r1
   16920:	andeq	r0, r0, ip, lsr r1
   16924:	andeq	r5, r0, r8, asr r0
   16928:	push	{r3, lr}
   1692c:	mov	r3, r0
   16930:	mov	r2, #0
   16934:	cmp	r1, #8
   16938:	str	r2, [r3], #4
   1693c:	add	r3, r3, #4
   16940:	str	r2, [r0, #4]
   16944:	str	r2, [r3], #4
   16948:	str	r2, [r3], #4
   1694c:	str	r2, [r3], #4
   16950:	str	r2, [r3], #4
   16954:	str	r2, [r3], #4
   16958:	str	r2, [r3], #4
   1695c:	str	r2, [r3], #4
   16960:	str	r2, [r3], #4
   16964:	str	r2, [r3], #4
   16968:	str	r2, [r3]
   1696c:	beq	16978 <close_stdout@@Base+0x4134>
   16970:	str	r1, [r0]
   16974:	pop	{r3, pc}
   16978:	bl	115a0 <abort@plt>
   1697c:	push	{r4, r5, r6, lr}
   16980:	mov	r4, r0
   16984:	mov	r6, r1
   16988:	mov	r0, #0
   1698c:	mov	r1, r4
   16990:	mov	r2, #5
   16994:	bl	1130c <dcgettext@plt>
   16998:	cmp	r0, r4
   1699c:	mov	r5, r0
   169a0:	beq	169a8 <close_stdout@@Base+0x4164>
   169a4:	pop	{r4, r5, r6, pc}
   169a8:	bl	18b80 <close_stdout@@Base+0x633c>
   169ac:	ldrb	r3, [r0]
   169b0:	bic	r3, r3, #32
   169b4:	cmp	r3, #85	; 0x55
   169b8:	bne	16a2c <close_stdout@@Base+0x41e8>
   169bc:	ldrb	r3, [r0, #1]
   169c0:	bic	r3, r3, #32
   169c4:	cmp	r3, #84	; 0x54
   169c8:	bne	16a18 <close_stdout@@Base+0x41d4>
   169cc:	ldrb	r3, [r0, #2]
   169d0:	bic	r3, r3, #32
   169d4:	cmp	r3, #70	; 0x46
   169d8:	bne	16a18 <close_stdout@@Base+0x41d4>
   169dc:	ldrb	r3, [r0, #3]
   169e0:	cmp	r3, #45	; 0x2d
   169e4:	bne	16a18 <close_stdout@@Base+0x41d4>
   169e8:	ldrb	r3, [r0, #4]
   169ec:	cmp	r3, #56	; 0x38
   169f0:	bne	16a18 <close_stdout@@Base+0x41d4>
   169f4:	ldrb	r3, [r0, #5]
   169f8:	cmp	r3, #0
   169fc:	bne	16a18 <close_stdout@@Base+0x41d4>
   16a00:	ldrb	r3, [r5]
   16a04:	cmp	r3, #96	; 0x60
   16a08:	beq	16aa4 <close_stdout@@Base+0x4260>
   16a0c:	ldr	r0, [pc, #180]	; 16ac8 <close_stdout@@Base+0x4284>
   16a10:	add	r0, pc, r0
   16a14:	pop	{r4, r5, r6, pc}
   16a18:	cmp	r6, #7
   16a1c:	beq	16ab0 <close_stdout@@Base+0x426c>
   16a20:	ldr	r0, [pc, #164]	; 16acc <close_stdout@@Base+0x4288>
   16a24:	add	r0, pc, r0
   16a28:	pop	{r4, r5, r6, pc}
   16a2c:	cmp	r3, #71	; 0x47
   16a30:	bne	16a18 <close_stdout@@Base+0x41d4>
   16a34:	ldrb	r3, [r0, #1]
   16a38:	bic	r3, r3, #32
   16a3c:	cmp	r3, #66	; 0x42
   16a40:	bne	16a18 <close_stdout@@Base+0x41d4>
   16a44:	ldrb	r3, [r0, #2]
   16a48:	cmp	r3, #49	; 0x31
   16a4c:	bne	16a18 <close_stdout@@Base+0x41d4>
   16a50:	ldrb	r3, [r0, #3]
   16a54:	cmp	r3, #56	; 0x38
   16a58:	bne	16a18 <close_stdout@@Base+0x41d4>
   16a5c:	ldrb	r3, [r0, #4]
   16a60:	cmp	r3, #48	; 0x30
   16a64:	bne	16a18 <close_stdout@@Base+0x41d4>
   16a68:	ldrb	r3, [r0, #5]
   16a6c:	cmp	r3, #51	; 0x33
   16a70:	bne	16a18 <close_stdout@@Base+0x41d4>
   16a74:	ldrb	r3, [r0, #6]
   16a78:	cmp	r3, #48	; 0x30
   16a7c:	bne	16a18 <close_stdout@@Base+0x41d4>
   16a80:	ldrb	r3, [r0, #7]
   16a84:	cmp	r3, #0
   16a88:	bne	16a18 <close_stdout@@Base+0x41d4>
   16a8c:	ldrb	r3, [r5]
   16a90:	cmp	r3, #96	; 0x60
   16a94:	beq	16abc <close_stdout@@Base+0x4278>
   16a98:	ldr	r0, [pc, #48]	; 16ad0 <close_stdout@@Base+0x428c>
   16a9c:	add	r0, pc, r0
   16aa0:	pop	{r4, r5, r6, pc}
   16aa4:	ldr	r0, [pc, #40]	; 16ad4 <close_stdout@@Base+0x4290>
   16aa8:	add	r0, pc, r0
   16aac:	pop	{r4, r5, r6, pc}
   16ab0:	ldr	r0, [pc, #32]	; 16ad8 <close_stdout@@Base+0x4294>
   16ab4:	add	r0, pc, r0
   16ab8:	pop	{r4, r5, r6, pc}
   16abc:	ldr	r0, [pc, #24]	; 16adc <close_stdout@@Base+0x4298>
   16ac0:	add	r0, pc, r0
   16ac4:	pop	{r4, r5, r6, pc}
   16ac8:	andeq	r4, r0, r4, lsr #31
   16acc:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   16ad0:	andeq	r4, r0, ip, lsl pc
   16ad4:	andeq	r4, r0, r0, lsr #30
   16ad8:	andeq	r4, r0, ip, lsl #30
   16adc:	andeq	r4, r0, r4, lsl #30
   16ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ae4:	sub	sp, sp, #124	; 0x7c
   16ae8:	ldr	ip, [pc, #3304]	; 177d8 <close_stdout@@Base+0x4f94>
   16aec:	mov	sl, r1
   16af0:	str	r0, [sp, #40]	; 0x28
   16af4:	mov	r8, r3
   16af8:	ldr	r0, [pc, #3292]	; 177dc <close_stdout@@Base+0x4f98>
   16afc:	add	ip, pc, ip
   16b00:	str	r2, [sp, #32]
   16b04:	ldr	r1, [sp, #164]	; 0xa4
   16b08:	mov	r3, ip
   16b0c:	ldr	r0, [ip, r0]
   16b10:	ldr	r2, [sp, #172]	; 0xac
   16b14:	ubfx	r1, r1, #1, #1
   16b18:	str	r1, [sp, #36]	; 0x24
   16b1c:	str	r0, [sp, #56]	; 0x38
   16b20:	ldr	r0, [sp, #168]	; 0xa8
   16b24:	ldr	r1, [sp, #176]	; 0xb0
   16b28:	str	r2, [sp, #72]	; 0x48
   16b2c:	str	r0, [sp, #48]	; 0x30
   16b30:	ldr	r0, [sp, #56]	; 0x38
   16b34:	str	r1, [sp, #68]	; 0x44
   16b38:	ldr	r3, [r0]
   16b3c:	str	r3, [sp, #116]	; 0x74
   16b40:	bl	1136c <__ctype_get_mb_cur_max@plt>
   16b44:	ldr	r2, [sp, #160]	; 0xa0
   16b48:	str	r0, [sp, #64]	; 0x40
   16b4c:	cmp	r2, #8
   16b50:	addls	pc, pc, r2, lsl #2
   16b54:	b	176b4 <close_stdout@@Base+0x4e70>
   16b58:	b	16b7c <close_stdout@@Base+0x4338>
   16b5c:	b	173cc <close_stdout@@Base+0x4b88>
   16b60:	b	173fc <close_stdout@@Base+0x4bb8>
   16b64:	b	172ac <close_stdout@@Base+0x4a68>
   16b68:	b	172ec <close_stdout@@Base+0x4aa8>
   16b6c:	b	17318 <close_stdout@@Base+0x4ad4>
   16b70:	b	17338 <close_stdout@@Base+0x4af4>
   16b74:	b	17338 <close_stdout@@Base+0x4af4>
   16b78:	b	17338 <close_stdout@@Base+0x4af4>
   16b7c:	mov	r2, #0
   16b80:	str	r2, [sp, #36]	; 0x24
   16b84:	mov	r9, r2
   16b88:	str	r2, [sp, #24]
   16b8c:	str	r2, [sp, #28]
   16b90:	str	r2, [sp, #52]	; 0x34
   16b94:	ldr	r0, [sp, #36]	; 0x24
   16b98:	mov	fp, #0
   16b9c:	ldr	r1, [sp, #24]
   16ba0:	eor	r2, r0, #1
   16ba4:	eor	r3, r1, #1
   16ba8:	and	r3, r2, r3
   16bac:	and	r2, r1, r0
   16bb0:	str	r3, [sp, #44]	; 0x2c
   16bb4:	str	r2, [sp, #76]	; 0x4c
   16bb8:	cmn	r8, #1
   16bbc:	beq	16f3c <close_stdout@@Base+0x46f8>
   16bc0:	subs	r3, fp, r8
   16bc4:	movne	r3, #1
   16bc8:	cmp	r3, #0
   16bcc:	beq	16f54 <close_stdout@@Base+0x4710>
   16bd0:	ldr	r3, [sp, #28]
   16bd4:	ldr	r0, [sp, #24]
   16bd8:	adds	r7, r3, #0
   16bdc:	movne	r7, #1
   16be0:	ands	r6, r7, r0
   16be4:	bne	17440 <close_stdout@@Base+0x4bfc>
   16be8:	ldr	r1, [sp, #32]
   16bec:	add	r5, r1, fp
   16bf0:	ldrb	r4, [r5]
   16bf4:	cmp	r4, #126	; 0x7e
   16bf8:	addls	pc, pc, r4, lsl #2
   16bfc:	b	171c0 <close_stdout@@Base+0x497c>
   16c00:	b	170cc <close_stdout@@Base+0x4888>
   16c04:	b	171c0 <close_stdout@@Base+0x497c>
   16c08:	b	171c0 <close_stdout@@Base+0x497c>
   16c0c:	b	171c0 <close_stdout@@Base+0x497c>
   16c10:	b	171c0 <close_stdout@@Base+0x497c>
   16c14:	b	171c0 <close_stdout@@Base+0x497c>
   16c18:	b	171c0 <close_stdout@@Base+0x497c>
   16c1c:	b	170b4 <close_stdout@@Base+0x4870>
   16c20:	b	1709c <close_stdout@@Base+0x4858>
   16c24:	b	170c4 <close_stdout@@Base+0x4880>
   16c28:	b	170bc <close_stdout@@Base+0x4878>
   16c2c:	b	170ac <close_stdout@@Base+0x4868>
   16c30:	b	170a4 <close_stdout@@Base+0x4860>
   16c34:	b	17068 <close_stdout@@Base+0x4824>
   16c38:	b	171c0 <close_stdout@@Base+0x497c>
   16c3c:	b	171c0 <close_stdout@@Base+0x497c>
   16c40:	b	171c0 <close_stdout@@Base+0x497c>
   16c44:	b	171c0 <close_stdout@@Base+0x497c>
   16c48:	b	171c0 <close_stdout@@Base+0x497c>
   16c4c:	b	171c0 <close_stdout@@Base+0x497c>
   16c50:	b	171c0 <close_stdout@@Base+0x497c>
   16c54:	b	171c0 <close_stdout@@Base+0x497c>
   16c58:	b	171c0 <close_stdout@@Base+0x497c>
   16c5c:	b	171c0 <close_stdout@@Base+0x497c>
   16c60:	b	171c0 <close_stdout@@Base+0x497c>
   16c64:	b	171c0 <close_stdout@@Base+0x497c>
   16c68:	b	171c0 <close_stdout@@Base+0x497c>
   16c6c:	b	171c0 <close_stdout@@Base+0x497c>
   16c70:	b	171c0 <close_stdout@@Base+0x497c>
   16c74:	b	171c0 <close_stdout@@Base+0x497c>
   16c78:	b	171c0 <close_stdout@@Base+0x497c>
   16c7c:	b	171c0 <close_stdout@@Base+0x497c>
   16c80:	b	16ff4 <close_stdout@@Base+0x47b0>
   16c84:	b	16ff4 <close_stdout@@Base+0x47b0>
   16c88:	b	16ff4 <close_stdout@@Base+0x47b0>
   16c8c:	b	16fec <close_stdout@@Base+0x47a8>
   16c90:	b	16ff4 <close_stdout@@Base+0x47b0>
   16c94:	b	16ec8 <close_stdout@@Base+0x4684>
   16c98:	b	16ff4 <close_stdout@@Base+0x47b0>
   16c9c:	b	17168 <close_stdout@@Base+0x4924>
   16ca0:	b	16ff4 <close_stdout@@Base+0x47b0>
   16ca4:	b	16ff4 <close_stdout@@Base+0x47b0>
   16ca8:	b	16ff4 <close_stdout@@Base+0x47b0>
   16cac:	b	16ec8 <close_stdout@@Base+0x4684>
   16cb0:	b	16ec8 <close_stdout@@Base+0x4684>
   16cb4:	b	16ec8 <close_stdout@@Base+0x4684>
   16cb8:	b	16ec8 <close_stdout@@Base+0x4684>
   16cbc:	b	16ec8 <close_stdout@@Base+0x4684>
   16cc0:	b	16ec8 <close_stdout@@Base+0x4684>
   16cc4:	b	16ec8 <close_stdout@@Base+0x4684>
   16cc8:	b	16ec8 <close_stdout@@Base+0x4684>
   16ccc:	b	16ec8 <close_stdout@@Base+0x4684>
   16cd0:	b	16ec8 <close_stdout@@Base+0x4684>
   16cd4:	b	16ec8 <close_stdout@@Base+0x4684>
   16cd8:	b	16ec8 <close_stdout@@Base+0x4684>
   16cdc:	b	16ec8 <close_stdout@@Base+0x4684>
   16ce0:	b	16ec8 <close_stdout@@Base+0x4684>
   16ce4:	b	16ec8 <close_stdout@@Base+0x4684>
   16ce8:	b	16ec8 <close_stdout@@Base+0x4684>
   16cec:	b	16ff4 <close_stdout@@Base+0x47b0>
   16cf0:	b	16ff4 <close_stdout@@Base+0x47b0>
   16cf4:	b	16ff4 <close_stdout@@Base+0x47b0>
   16cf8:	b	16ff4 <close_stdout@@Base+0x47b0>
   16cfc:	b	16dfc <close_stdout@@Base+0x45b8>
   16d00:	b	171c0 <close_stdout@@Base+0x497c>
   16d04:	b	16ec8 <close_stdout@@Base+0x4684>
   16d08:	b	16ec8 <close_stdout@@Base+0x4684>
   16d0c:	b	16ec8 <close_stdout@@Base+0x4684>
   16d10:	b	16ec8 <close_stdout@@Base+0x4684>
   16d14:	b	16ec8 <close_stdout@@Base+0x4684>
   16d18:	b	16ec8 <close_stdout@@Base+0x4684>
   16d1c:	b	16ec8 <close_stdout@@Base+0x4684>
   16d20:	b	16ec8 <close_stdout@@Base+0x4684>
   16d24:	b	16ec8 <close_stdout@@Base+0x4684>
   16d28:	b	16ec8 <close_stdout@@Base+0x4684>
   16d2c:	b	16ec8 <close_stdout@@Base+0x4684>
   16d30:	b	16ec8 <close_stdout@@Base+0x4684>
   16d34:	b	16ec8 <close_stdout@@Base+0x4684>
   16d38:	b	16ec8 <close_stdout@@Base+0x4684>
   16d3c:	b	16ec8 <close_stdout@@Base+0x4684>
   16d40:	b	16ec8 <close_stdout@@Base+0x4684>
   16d44:	b	16ec8 <close_stdout@@Base+0x4684>
   16d48:	b	16ec8 <close_stdout@@Base+0x4684>
   16d4c:	b	16ec8 <close_stdout@@Base+0x4684>
   16d50:	b	16ec8 <close_stdout@@Base+0x4684>
   16d54:	b	16ec8 <close_stdout@@Base+0x4684>
   16d58:	b	16ec8 <close_stdout@@Base+0x4684>
   16d5c:	b	16ec8 <close_stdout@@Base+0x4684>
   16d60:	b	16ec8 <close_stdout@@Base+0x4684>
   16d64:	b	16ec8 <close_stdout@@Base+0x4684>
   16d68:	b	16ec8 <close_stdout@@Base+0x4684>
   16d6c:	b	16ff4 <close_stdout@@Base+0x47b0>
   16d70:	b	1714c <close_stdout@@Base+0x4908>
   16d74:	b	16ec8 <close_stdout@@Base+0x4684>
   16d78:	b	16ff4 <close_stdout@@Base+0x47b0>
   16d7c:	b	16ec8 <close_stdout@@Base+0x4684>
   16d80:	b	16ff4 <close_stdout@@Base+0x47b0>
   16d84:	b	16ec8 <close_stdout@@Base+0x4684>
   16d88:	b	16ec8 <close_stdout@@Base+0x4684>
   16d8c:	b	16ec8 <close_stdout@@Base+0x4684>
   16d90:	b	16ec8 <close_stdout@@Base+0x4684>
   16d94:	b	16ec8 <close_stdout@@Base+0x4684>
   16d98:	b	16ec8 <close_stdout@@Base+0x4684>
   16d9c:	b	16ec8 <close_stdout@@Base+0x4684>
   16da0:	b	16ec8 <close_stdout@@Base+0x4684>
   16da4:	b	16ec8 <close_stdout@@Base+0x4684>
   16da8:	b	16ec8 <close_stdout@@Base+0x4684>
   16dac:	b	16ec8 <close_stdout@@Base+0x4684>
   16db0:	b	16ec8 <close_stdout@@Base+0x4684>
   16db4:	b	16ec8 <close_stdout@@Base+0x4684>
   16db8:	b	16ec8 <close_stdout@@Base+0x4684>
   16dbc:	b	16ec8 <close_stdout@@Base+0x4684>
   16dc0:	b	16ec8 <close_stdout@@Base+0x4684>
   16dc4:	b	16ec8 <close_stdout@@Base+0x4684>
   16dc8:	b	16ec8 <close_stdout@@Base+0x4684>
   16dcc:	b	16ec8 <close_stdout@@Base+0x4684>
   16dd0:	b	16ec8 <close_stdout@@Base+0x4684>
   16dd4:	b	16ec8 <close_stdout@@Base+0x4684>
   16dd8:	b	16ec8 <close_stdout@@Base+0x4684>
   16ddc:	b	16ec8 <close_stdout@@Base+0x4684>
   16de0:	b	16ec8 <close_stdout@@Base+0x4684>
   16de4:	b	16ec8 <close_stdout@@Base+0x4684>
   16de8:	b	16ec8 <close_stdout@@Base+0x4684>
   16dec:	b	16fd4 <close_stdout@@Base+0x4790>
   16df0:	b	16ff4 <close_stdout@@Base+0x47b0>
   16df4:	b	16fd4 <close_stdout@@Base+0x4790>
   16df8:	b	16fec <close_stdout@@Base+0x47a8>
   16dfc:	ldr	r3, [sp, #160]	; 0xa0
   16e00:	cmp	r3, #2
   16e04:	beq	17690 <close_stdout@@Base+0x4e4c>
   16e08:	cmp	r3, #3
   16e0c:	bne	16ec8 <close_stdout@@Base+0x4684>
   16e10:	ldr	r1, [sp, #164]	; 0xa4
   16e14:	tst	r1, #4
   16e18:	beq	16ec8 <close_stdout@@Base+0x4684>
   16e1c:	add	r3, fp, #2
   16e20:	cmp	r8, r3
   16e24:	bls	16ec8 <close_stdout@@Base+0x4684>
   16e28:	ldrb	r2, [r5, #1]
   16e2c:	mov	r1, #1
   16e30:	cmp	r2, #63	; 0x3f
   16e34:	bne	16ec8 <close_stdout@@Base+0x4684>
   16e38:	ldr	r0, [sp, #32]
   16e3c:	ldrb	ip, [r0, r3]
   16e40:	sub	r0, ip, #33	; 0x21
   16e44:	uxtb	r0, r0
   16e48:	cmp	r0, #29
   16e4c:	bhi	16ec8 <close_stdout@@Base+0x4684>
   16e50:	lsl	r1, r1, r0
   16e54:	movw	r0, #20929	; 0x51c1
   16e58:	movt	r0, #14336	; 0x3800
   16e5c:	and	r0, r1, r0
   16e60:	cmp	r0, #0
   16e64:	beq	16ec8 <close_stdout@@Base+0x4684>
   16e68:	ldr	r1, [sp, #36]	; 0x24
   16e6c:	cmp	r1, #0
   16e70:	bne	17010 <close_stdout@@Base+0x47cc>
   16e74:	cmp	r9, sl
   16e78:	mov	r4, ip
   16e7c:	mov	fp, r3
   16e80:	ldrcc	r0, [sp, #40]	; 0x28
   16e84:	strbcc	r2, [r0, r9]
   16e88:	add	r2, r9, #1
   16e8c:	cmp	sl, r2
   16e90:	ldrhi	r0, [sp, #40]	; 0x28
   16e94:	movhi	r1, #34	; 0x22
   16e98:	strbhi	r1, [r0, r2]
   16e9c:	add	r2, r9, #2
   16ea0:	cmp	sl, r2
   16ea4:	ldrhi	r0, [sp, #40]	; 0x28
   16ea8:	movhi	r1, #34	; 0x22
   16eac:	strbhi	r1, [r0, r2]
   16eb0:	add	r2, r9, #3
   16eb4:	cmp	sl, r2
   16eb8:	add	r9, r9, #4
   16ebc:	ldrhi	r0, [sp, #40]	; 0x28
   16ec0:	movhi	r1, #63	; 0x3f
   16ec4:	strbhi	r1, [r0, r2]
   16ec8:	ldr	r0, [sp, #44]	; 0x2c
   16ecc:	cmp	r0, #0
   16ed0:	bne	16ef8 <close_stdout@@Base+0x46b4>
   16ed4:	ldr	r1, [sp, #48]	; 0x30
   16ed8:	cmp	r1, #0
   16edc:	beq	16ef8 <close_stdout@@Base+0x46b4>
   16ee0:	ubfx	r2, r4, #5, #8
   16ee4:	and	r3, r4, #31
   16ee8:	ldr	r2, [r1, r2, lsl #2]
   16eec:	lsr	r3, r2, r3
   16ef0:	tst	r3, #1
   16ef4:	bne	16f00 <close_stdout@@Base+0x46bc>
   16ef8:	cmp	r6, #0
   16efc:	beq	16f20 <close_stdout@@Base+0x46dc>
   16f00:	ldr	r2, [sp, #36]	; 0x24
   16f04:	cmp	r2, #0
   16f08:	bne	17010 <close_stdout@@Base+0x47cc>
   16f0c:	cmp	r9, sl
   16f10:	ldrcc	r0, [sp, #40]	; 0x28
   16f14:	movcc	r3, #92	; 0x5c
   16f18:	strbcc	r3, [r0, r9]
   16f1c:	add	r9, r9, #1
   16f20:	add	fp, fp, #1
   16f24:	cmp	r9, sl
   16f28:	ldrcc	r1, [sp, #40]	; 0x28
   16f2c:	strbcc	r4, [r1, r9]
   16f30:	cmn	r8, #1
   16f34:	add	r9, r9, #1
   16f38:	bne	16bc0 <close_stdout@@Base+0x437c>
   16f3c:	ldr	r2, [sp, #32]
   16f40:	ldrb	r3, [r2, fp]
   16f44:	adds	r3, r3, #0
   16f48:	movne	r3, #1
   16f4c:	cmp	r3, #0
   16f50:	bne	16bd0 <close_stdout@@Base+0x438c>
   16f54:	ldr	r3, [sp, #160]	; 0xa0
   16f58:	cmp	r9, #0
   16f5c:	cmpeq	r3, #2
   16f60:	bne	16f70 <close_stdout@@Base+0x472c>
   16f64:	ldr	r0, [sp, #36]	; 0x24
   16f68:	cmp	r0, #0
   16f6c:	bne	17010 <close_stdout@@Base+0x47cc>
   16f70:	ldr	r1, [sp, #36]	; 0x24
   16f74:	ldr	r2, [sp, #52]	; 0x34
   16f78:	eor	r3, r1, #1
   16f7c:	cmp	r2, #0
   16f80:	moveq	r3, #0
   16f84:	andne	r3, r3, #1
   16f88:	cmp	r3, #0
   16f8c:	beq	16fb8 <close_stdout@@Base+0x4774>
   16f90:	ldrb	r3, [r2]
   16f94:	cmp	r3, #0
   16f98:	beq	16fb8 <close_stdout@@Base+0x4774>
   16f9c:	ldr	r1, [sp, #40]	; 0x28
   16fa0:	cmp	sl, r9
   16fa4:	strbhi	r3, [r1, r9]
   16fa8:	ldrb	r3, [r2, #1]!
   16fac:	add	r9, r9, #1
   16fb0:	cmp	r3, #0
   16fb4:	bne	16fa0 <close_stdout@@Base+0x475c>
   16fb8:	cmp	r9, sl
   16fbc:	movcs	r0, r9
   16fc0:	ldrcc	r1, [sp, #40]	; 0x28
   16fc4:	movcc	r3, #0
   16fc8:	movcc	r0, r9
   16fcc:	strbcc	r3, [r1, r9]
   16fd0:	b	1704c <close_stdout@@Base+0x4808>
   16fd4:	cmn	r8, #1
   16fd8:	beq	176a0 <close_stdout@@Base+0x4e5c>
   16fdc:	subs	r3, r8, #1
   16fe0:	movne	r3, #1
   16fe4:	cmp	r3, #0
   16fe8:	bne	16ec8 <close_stdout@@Base+0x4684>
   16fec:	cmp	fp, #0
   16ff0:	bne	16ec8 <close_stdout@@Base+0x4684>
   16ff4:	ldr	r3, [sp, #36]	; 0x24
   16ff8:	ldr	r0, [sp, #160]	; 0xa0
   16ffc:	cmp	r0, #2
   17000:	movne	r3, #0
   17004:	andeq	r3, r3, #1
   17008:	cmp	r3, #0
   1700c:	beq	16ec8 <close_stdout@@Base+0x4684>
   17010:	ldr	r2, [sp, #164]	; 0xa4
   17014:	mov	ip, #0
   17018:	ldr	r0, [sp, #160]	; 0xa0
   1701c:	bic	r3, r2, #2
   17020:	ldr	r1, [sp, #72]	; 0x48
   17024:	ldr	r2, [sp, #68]	; 0x44
   17028:	stm	sp, {r0, r3}
   1702c:	mov	r3, r8
   17030:	str	r1, [sp, #12]
   17034:	mov	r1, sl
   17038:	str	r2, [sp, #16]
   1703c:	ldr	r0, [sp, #40]	; 0x28
   17040:	ldr	r2, [sp, #32]
   17044:	str	ip, [sp, #8]
   17048:	bl	16ae0 <close_stdout@@Base+0x429c>
   1704c:	ldr	r1, [sp, #56]	; 0x38
   17050:	ldr	r2, [sp, #116]	; 0x74
   17054:	ldr	r3, [r1]
   17058:	cmp	r2, r3
   1705c:	bne	17790 <close_stdout@@Base+0x4f4c>
   17060:	add	sp, sp, #124	; 0x7c
   17064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17068:	mov	r3, #114	; 0x72
   1706c:	ldr	r2, [sp, #36]	; 0x24
   17070:	ldr	r0, [sp, #160]	; 0xa0
   17074:	cmp	r0, #2
   17078:	movne	r2, #0
   1707c:	andeq	r2, r2, #1
   17080:	cmp	r2, #0
   17084:	bne	17010 <close_stdout@@Base+0x47cc>
   17088:	ldr	r1, [sp, #24]
   1708c:	cmp	r1, #0
   17090:	beq	16ec8 <close_stdout@@Base+0x4684>
   17094:	mov	r4, r3
   17098:	b	16f00 <close_stdout@@Base+0x46bc>
   1709c:	mov	r3, #98	; 0x62
   170a0:	b	17088 <close_stdout@@Base+0x4844>
   170a4:	mov	r3, #102	; 0x66
   170a8:	b	17088 <close_stdout@@Base+0x4844>
   170ac:	mov	r3, #118	; 0x76
   170b0:	b	17088 <close_stdout@@Base+0x4844>
   170b4:	mov	r3, #97	; 0x61
   170b8:	b	17088 <close_stdout@@Base+0x4844>
   170bc:	mov	r3, #110	; 0x6e
   170c0:	b	1706c <close_stdout@@Base+0x4828>
   170c4:	mov	r3, #116	; 0x74
   170c8:	b	1706c <close_stdout@@Base+0x4828>
   170cc:	ldr	r2, [sp, #24]
   170d0:	cmp	r2, #0
   170d4:	beq	1767c <close_stdout@@Base+0x4e38>
   170d8:	ldr	r3, [sp, #36]	; 0x24
   170dc:	cmp	r3, #0
   170e0:	bne	17010 <close_stdout@@Base+0x47cc>
   170e4:	cmp	r9, sl
   170e8:	add	r2, r9, #1
   170ec:	ldrcc	r0, [sp, #40]	; 0x28
   170f0:	movcc	r3, #92	; 0x5c
   170f4:	strbcc	r3, [r0, r9]
   170f8:	add	r3, fp, #1
   170fc:	cmp	r8, r3
   17100:	bls	17140 <close_stdout@@Base+0x48fc>
   17104:	ldr	r1, [sp, #32]
   17108:	ldrb	r3, [r1, r3]
   1710c:	sub	r3, r3, #48	; 0x30
   17110:	cmp	r3, #9
   17114:	bhi	17140 <close_stdout@@Base+0x48fc>
   17118:	cmp	sl, r2
   1711c:	ldrhi	r0, [sp, #40]	; 0x28
   17120:	movhi	r3, #48	; 0x30
   17124:	strbhi	r3, [r0, r2]
   17128:	add	r3, r9, #2
   1712c:	cmp	sl, r3
   17130:	ldrhi	r1, [sp, #40]	; 0x28
   17134:	movhi	r2, #48	; 0x30
   17138:	strbhi	r2, [r1, r3]
   1713c:	add	r2, r9, #3
   17140:	mov	r9, r2
   17144:	mov	r4, #48	; 0x30
   17148:	b	16ed4 <close_stdout@@Base+0x4690>
   1714c:	ldr	r1, [sp, #76]	; 0x4c
   17150:	cmp	r1, #0
   17154:	beq	17160 <close_stdout@@Base+0x491c>
   17158:	cmp	r7, #0
   1715c:	bne	16f20 <close_stdout@@Base+0x46dc>
   17160:	mov	r3, r4
   17164:	b	1706c <close_stdout@@Base+0x4828>
   17168:	ldr	r1, [sp, #160]	; 0xa0
   1716c:	cmp	r1, #2
   17170:	bne	16ec8 <close_stdout@@Base+0x4684>
   17174:	ldr	r2, [sp, #36]	; 0x24
   17178:	cmp	r2, #0
   1717c:	bne	17010 <close_stdout@@Base+0x47cc>
   17180:	cmp	r9, sl
   17184:	ldrcc	r0, [sp, #40]	; 0x28
   17188:	movcc	r3, #39	; 0x27
   1718c:	strbcc	r3, [r0, r9]
   17190:	add	r3, r9, #1
   17194:	cmp	sl, r3
   17198:	ldrhi	r1, [sp, #40]	; 0x28
   1719c:	movhi	r2, #92	; 0x5c
   171a0:	strbhi	r2, [r1, r3]
   171a4:	add	r3, r9, #2
   171a8:	cmp	sl, r3
   171ac:	add	r9, r9, #3
   171b0:	ldrhi	r0, [sp, #40]	; 0x28
   171b4:	movhi	r2, #39	; 0x27
   171b8:	strbhi	r2, [r0, r3]
   171bc:	b	16ec8 <close_stdout@@Base+0x4684>
   171c0:	ldr	r1, [sp, #64]	; 0x40
   171c4:	cmp	r1, #1
   171c8:	bne	174c0 <close_stdout@@Base+0x4c7c>
   171cc:	bl	11444 <__ctype_b_loc@plt>
   171d0:	ldr	r2, [sp, #64]	; 0x40
   171d4:	sxth	r3, r4
   171d8:	str	r2, [sp, #60]	; 0x3c
   171dc:	lsl	r3, r3, #1
   171e0:	ldr	r2, [r0]
   171e4:	ldrh	r2, [r2, r3]
   171e8:	eor	r2, r2, #16384	; 0x4000
   171ec:	ubfx	r2, r2, #14, #1
   171f0:	ldr	r1, [sp, #24]
   171f4:	ands	r2, r2, r1
   171f8:	beq	16ec8 <close_stdout@@Base+0x4684>
   171fc:	ldr	r3, [sp, #60]	; 0x3c
   17200:	mov	r0, #92	; 0x5c
   17204:	ldr	r7, [sp, #36]	; 0x24
   17208:	add	r1, r3, fp
   1720c:	str	r8, [sp, #60]	; 0x3c
   17210:	ldr	r3, [sp, #40]	; 0x28
   17214:	b	17278 <close_stdout@@Base+0x4a34>
   17218:	cmp	r7, #0
   1721c:	bne	176b8 <close_stdout@@Base+0x4e74>
   17220:	add	ip, r9, #1
   17224:	cmp	r9, sl
   17228:	strbcc	r0, [r3, r9]
   1722c:	cmp	sl, ip
   17230:	lsrhi	r8, r4, #6
   17234:	addhi	r8, r8, #48	; 0x30
   17238:	strbhi	r8, [r3, ip]
   1723c:	add	ip, r9, #2
   17240:	add	r9, r9, #3
   17244:	cmp	sl, ip
   17248:	ubfxhi	r8, r4, #3, #3
   1724c:	and	r4, r4, #7
   17250:	add	r4, r4, #48	; 0x30
   17254:	addhi	r8, r8, #48	; 0x30
   17258:	strbhi	r8, [r3, ip]
   1725c:	add	fp, fp, #1
   17260:	cmp	r1, fp
   17264:	bls	172a4 <close_stdout@@Base+0x4a60>
   17268:	cmp	r9, sl
   1726c:	strbcc	r4, [r3, r9]
   17270:	ldrb	r4, [r5, #1]!
   17274:	add	r9, r9, #1
   17278:	cmp	r2, #0
   1727c:	bne	17218 <close_stdout@@Base+0x49d4>
   17280:	cmp	r6, #0
   17284:	beq	1725c <close_stdout@@Base+0x4a18>
   17288:	add	fp, fp, #1
   1728c:	cmp	r9, sl
   17290:	strbcc	r0, [r3, r9]
   17294:	cmp	r1, fp
   17298:	add	r9, r9, #1
   1729c:	mov	r6, #0
   172a0:	bhi	17268 <close_stdout@@Base+0x4a24>
   172a4:	ldr	r8, [sp, #60]	; 0x3c
   172a8:	b	16f24 <close_stdout@@Base+0x46e0>
   172ac:	ldr	r3, [sp, #36]	; 0x24
   172b0:	cmp	r3, #0
   172b4:	bne	177b8 <close_stdout@@Base+0x4f74>
   172b8:	cmp	sl, #0
   172bc:	beq	176d0 <close_stdout@@Base+0x4e8c>
   172c0:	ldr	r1, [sp, #40]	; 0x28
   172c4:	mov	r0, #1
   172c8:	ldr	r2, [pc, #1296]	; 177e0 <close_stdout@@Base+0x4f9c>
   172cc:	mov	r3, #34	; 0x22
   172d0:	str	r0, [sp, #24]
   172d4:	mov	r9, r0
   172d8:	add	r2, pc, r2
   172dc:	str	r0, [sp, #28]
   172e0:	strb	r3, [r1]
   172e4:	str	r2, [sp, #52]	; 0x34
   172e8:	b	16b94 <close_stdout@@Base+0x4350>
   172ec:	ldr	r3, [pc, #1264]	; 177e4 <close_stdout@@Base+0x4fa0>
   172f0:	mov	r2, #1
   172f4:	mov	r0, #3
   172f8:	str	r2, [sp, #36]	; 0x24
   172fc:	add	r3, pc, r3
   17300:	str	r2, [sp, #24]
   17304:	str	r3, [sp, #52]	; 0x34
   17308:	mov	r9, #0
   1730c:	str	r2, [sp, #28]
   17310:	str	r0, [sp, #160]	; 0xa0
   17314:	b	16b94 <close_stdout@@Base+0x4350>
   17318:	mov	r0, #0
   1731c:	mov	r1, #1
   17320:	str	r0, [sp, #36]	; 0x24
   17324:	mov	r9, r0
   17328:	str	r1, [sp, #24]
   1732c:	str	r0, [sp, #28]
   17330:	str	r0, [sp, #52]	; 0x34
   17334:	b	16b94 <close_stdout@@Base+0x4350>
   17338:	ldr	r3, [sp, #160]	; 0xa0
   1733c:	cmp	r3, #8
   17340:	beq	1736c <close_stdout@@Base+0x4b28>
   17344:	ldr	r0, [pc, #1180]	; 177e8 <close_stdout@@Base+0x4fa4>
   17348:	mov	r1, r3
   1734c:	add	r0, pc, r0
   17350:	bl	1697c <close_stdout@@Base+0x4138>
   17354:	ldr	r1, [sp, #160]	; 0xa0
   17358:	str	r0, [sp, #72]	; 0x48
   1735c:	ldr	r0, [pc, #1160]	; 177ec <close_stdout@@Base+0x4fa8>
   17360:	add	r0, pc, r0
   17364:	bl	1697c <close_stdout@@Base+0x4138>
   17368:	str	r0, [sp, #68]	; 0x44
   1736c:	ldr	r0, [sp, #36]	; 0x24
   17370:	cmp	r0, #0
   17374:	movne	r9, #0
   17378:	bne	173b0 <close_stdout@@Base+0x4b6c>
   1737c:	ldr	r1, [sp, #72]	; 0x48
   17380:	ldrb	r3, [r1]
   17384:	cmp	r3, #0
   17388:	beq	17788 <close_stdout@@Base+0x4f44>
   1738c:	mov	r2, r1
   17390:	ldr	r1, [sp, #40]	; 0x28
   17394:	mov	r9, r0
   17398:	cmp	r9, sl
   1739c:	strbcc	r3, [r1, r9]
   173a0:	ldrb	r3, [r2, #1]!
   173a4:	add	r9, r9, #1
   173a8:	cmp	r3, #0
   173ac:	bne	17398 <close_stdout@@Base+0x4b54>
   173b0:	ldr	r0, [sp, #68]	; 0x44
   173b4:	str	r0, [sp, #52]	; 0x34
   173b8:	bl	1145c <strlen@plt>
   173bc:	mov	r2, #1
   173c0:	str	r2, [sp, #24]
   173c4:	str	r0, [sp, #28]
   173c8:	b	16b94 <close_stdout@@Base+0x4350>
   173cc:	ldr	r3, [pc, #1052]	; 177f0 <close_stdout@@Base+0x4fac>
   173d0:	mov	r2, #0
   173d4:	mov	r1, #1
   173d8:	mov	r0, #2
   173dc:	add	r3, pc, r3
   173e0:	str	r1, [sp, #36]	; 0x24
   173e4:	str	r2, [sp, #24]
   173e8:	mov	r9, r2
   173ec:	str	r1, [sp, #28]
   173f0:	str	r3, [sp, #52]	; 0x34
   173f4:	str	r0, [sp, #160]	; 0xa0
   173f8:	b	16b94 <close_stdout@@Base+0x4350>
   173fc:	ldr	r3, [sp, #36]	; 0x24
   17400:	cmp	r3, #0
   17404:	bne	17794 <close_stdout@@Base+0x4f50>
   17408:	cmp	sl, #0
   1740c:	beq	176f0 <close_stdout@@Base+0x4eac>
   17410:	ldr	r1, [sp, #40]	; 0x28
   17414:	mov	r3, #39	; 0x27
   17418:	ldr	r2, [sp, #36]	; 0x24
   1741c:	mov	r0, #1
   17420:	mov	r9, r0
   17424:	str	r0, [sp, #28]
   17428:	strb	r3, [r1]
   1742c:	ldr	r3, [pc, #960]	; 177f4 <close_stdout@@Base+0x4fb0>
   17430:	str	r2, [sp, #24]
   17434:	add	r3, pc, r3
   17438:	str	r3, [sp, #52]	; 0x34
   1743c:	b	16b94 <close_stdout@@Base+0x4350>
   17440:	ldr	r2, [sp, #28]
   17444:	cmp	r2, #1
   17448:	add	r4, fp, r2
   1744c:	movls	r3, #0
   17450:	movhi	r3, #1
   17454:	cmn	r8, #1
   17458:	movne	r3, #0
   1745c:	cmp	r3, #0
   17460:	beq	17470 <close_stdout@@Base+0x4c2c>
   17464:	ldr	r0, [sp, #32]
   17468:	bl	1145c <strlen@plt>
   1746c:	mov	r8, r0
   17470:	cmp	r8, r4
   17474:	ldrcc	r3, [sp, #32]
   17478:	movcc	r6, #0
   1747c:	addcc	r5, r3, fp
   17480:	bcc	16bf0 <close_stdout@@Base+0x43ac>
   17484:	ldr	r0, [sp, #32]
   17488:	ldr	r1, [sp, #52]	; 0x34
   1748c:	add	r5, r0, fp
   17490:	ldr	r2, [sp, #28]
   17494:	mov	r0, r5
   17498:	bl	11300 <memcmp@plt>
   1749c:	cmp	r0, #0
   174a0:	bne	174b8 <close_stdout@@Base+0x4c74>
   174a4:	ldr	r1, [sp, #36]	; 0x24
   174a8:	cmp	r1, #0
   174ac:	bne	17010 <close_stdout@@Base+0x47cc>
   174b0:	mov	r6, #1
   174b4:	b	16bf0 <close_stdout@@Base+0x43ac>
   174b8:	mov	r6, #0
   174bc:	b	16bf0 <close_stdout@@Base+0x43ac>
   174c0:	add	r7, sp, #108	; 0x6c
   174c4:	cmn	r8, #1
   174c8:	mov	r3, #0
   174cc:	str	r3, [sp, #108]	; 0x6c
   174d0:	str	r3, [r7, #4]
   174d4:	beq	176c0 <close_stdout@@Base+0x4e7c>
   174d8:	mov	r1, #0
   174dc:	ldr	r0, [sp, #32]
   174e0:	mov	ip, #1
   174e4:	str	r9, [sp, #88]	; 0x58
   174e8:	str	r6, [sp, #96]	; 0x60
   174ec:	mov	r9, r1
   174f0:	str	r5, [sp, #100]	; 0x64
   174f4:	mov	r6, ip
   174f8:	mov	r5, r7
   174fc:	add	r3, sp, #104	; 0x68
   17500:	sub	r0, r0, #1
   17504:	str	r3, [sp, #80]	; 0x50
   17508:	str	r0, [sp, #84]	; 0x54
   1750c:	str	r1, [sp, #60]	; 0x3c
   17510:	str	r4, [sp, #92]	; 0x5c
   17514:	ldr	r2, [sp, #32]
   17518:	add	r7, r9, fp
   1751c:	add	r0, sp, #104	; 0x68
   17520:	mov	r3, r5
   17524:	add	r4, r2, r7
   17528:	rsb	r2, r7, r8
   1752c:	mov	r1, r4
   17530:	bl	1139c <mbrtowc@plt>
   17534:	subs	r2, r0, #0
   17538:	beq	17644 <close_stdout@@Base+0x4e00>
   1753c:	cmn	r2, #1
   17540:	beq	1776c <close_stdout@@Base+0x4f28>
   17544:	cmn	r2, #2
   17548:	beq	17710 <close_stdout@@Base+0x4ecc>
   1754c:	ldr	r3, [sp, #36]	; 0x24
   17550:	ldr	r0, [sp, #160]	; 0xa0
   17554:	cmp	r0, #2
   17558:	movne	r3, #0
   1755c:	andeq	r3, r3, #1
   17560:	cmp	r3, #0
   17564:	beq	17620 <close_stdout@@Base+0x4ddc>
   17568:	cmp	r2, #1
   1756c:	beq	17620 <close_stdout@@Base+0x4ddc>
   17570:	ldr	r1, [sp, #84]	; 0x54
   17574:	add	r3, r1, r2
   17578:	add	r7, r3, r7
   1757c:	ldrb	r3, [r4, #1]!
   17580:	sub	r3, r3, #91	; 0x5b
   17584:	cmp	r3, #33	; 0x21
   17588:	addls	pc, pc, r3, lsl #2
   1758c:	b	17618 <close_stdout@@Base+0x4dd4>
   17590:	b	17010 <close_stdout@@Base+0x47cc>
   17594:	b	17010 <close_stdout@@Base+0x47cc>
   17598:	b	17618 <close_stdout@@Base+0x4dd4>
   1759c:	b	17010 <close_stdout@@Base+0x47cc>
   175a0:	b	17618 <close_stdout@@Base+0x4dd4>
   175a4:	b	17010 <close_stdout@@Base+0x47cc>
   175a8:	b	17618 <close_stdout@@Base+0x4dd4>
   175ac:	b	17618 <close_stdout@@Base+0x4dd4>
   175b0:	b	17618 <close_stdout@@Base+0x4dd4>
   175b4:	b	17618 <close_stdout@@Base+0x4dd4>
   175b8:	b	17618 <close_stdout@@Base+0x4dd4>
   175bc:	b	17618 <close_stdout@@Base+0x4dd4>
   175c0:	b	17618 <close_stdout@@Base+0x4dd4>
   175c4:	b	17618 <close_stdout@@Base+0x4dd4>
   175c8:	b	17618 <close_stdout@@Base+0x4dd4>
   175cc:	b	17618 <close_stdout@@Base+0x4dd4>
   175d0:	b	17618 <close_stdout@@Base+0x4dd4>
   175d4:	b	17618 <close_stdout@@Base+0x4dd4>
   175d8:	b	17618 <close_stdout@@Base+0x4dd4>
   175dc:	b	17618 <close_stdout@@Base+0x4dd4>
   175e0:	b	17618 <close_stdout@@Base+0x4dd4>
   175e4:	b	17618 <close_stdout@@Base+0x4dd4>
   175e8:	b	17618 <close_stdout@@Base+0x4dd4>
   175ec:	b	17618 <close_stdout@@Base+0x4dd4>
   175f0:	b	17618 <close_stdout@@Base+0x4dd4>
   175f4:	b	17618 <close_stdout@@Base+0x4dd4>
   175f8:	b	17618 <close_stdout@@Base+0x4dd4>
   175fc:	b	17618 <close_stdout@@Base+0x4dd4>
   17600:	b	17618 <close_stdout@@Base+0x4dd4>
   17604:	b	17618 <close_stdout@@Base+0x4dd4>
   17608:	b	17618 <close_stdout@@Base+0x4dd4>
   1760c:	b	17618 <close_stdout@@Base+0x4dd4>
   17610:	b	17618 <close_stdout@@Base+0x4dd4>
   17614:	b	17010 <close_stdout@@Base+0x47cc>
   17618:	cmp	r4, r7
   1761c:	bne	1757c <close_stdout@@Base+0x4d38>
   17620:	ldr	r0, [sp, #104]	; 0x68
   17624:	add	r9, r9, r2
   17628:	bl	1133c <iswprint@plt>
   1762c:	cmp	r0, #0
   17630:	mov	r0, r5
   17634:	moveq	r6, #0
   17638:	bl	112e8 <mbsinit@plt>
   1763c:	cmp	r0, #0
   17640:	beq	17514 <close_stdout@@Base+0x4cd0>
   17644:	mov	ip, r6
   17648:	eor	r2, ip, #1
   1764c:	str	r9, [sp, #60]	; 0x3c
   17650:	ldr	r4, [sp, #92]	; 0x5c
   17654:	uxtb	r2, r2
   17658:	ldr	r9, [sp, #88]	; 0x58
   1765c:	ldr	r6, [sp, #96]	; 0x60
   17660:	ldr	r5, [sp, #100]	; 0x64
   17664:	ldr	r3, [sp, #60]	; 0x3c
   17668:	cmp	r3, #1
   1766c:	bls	171f0 <close_stdout@@Base+0x49ac>
   17670:	ldr	r0, [sp, #24]
   17674:	and	r2, r2, r0
   17678:	b	171fc <close_stdout@@Base+0x49b8>
   1767c:	ldr	r2, [sp, #164]	; 0xa4
   17680:	tst	r2, #1
   17684:	addne	fp, fp, #1
   17688:	bne	16bb8 <close_stdout@@Base+0x4374>
   1768c:	b	16ec8 <close_stdout@@Base+0x4684>
   17690:	ldr	r0, [sp, #36]	; 0x24
   17694:	cmp	r0, #0
   17698:	beq	16ec8 <close_stdout@@Base+0x4684>
   1769c:	b	17010 <close_stdout@@Base+0x47cc>
   176a0:	ldr	r2, [sp, #32]
   176a4:	ldrb	r3, [r2, #1]
   176a8:	adds	r3, r3, #0
   176ac:	movne	r3, #1
   176b0:	b	16fe4 <close_stdout@@Base+0x47a0>
   176b4:	bl	115a0 <abort@plt>
   176b8:	ldr	r8, [sp, #60]	; 0x3c
   176bc:	b	17010 <close_stdout@@Base+0x47cc>
   176c0:	ldr	r0, [sp, #32]
   176c4:	bl	1145c <strlen@plt>
   176c8:	mov	r8, r0
   176cc:	b	174d8 <close_stdout@@Base+0x4c94>
   176d0:	ldr	r2, [pc, #288]	; 177f8 <close_stdout@@Base+0x4fb4>
   176d4:	mov	r1, #1
   176d8:	mov	r9, r1
   176dc:	str	r1, [sp, #24]
   176e0:	add	r2, pc, r2
   176e4:	str	r1, [sp, #28]
   176e8:	str	r2, [sp, #52]	; 0x34
   176ec:	b	16b94 <close_stdout@@Base+0x4350>
   176f0:	ldr	r2, [pc, #260]	; 177fc <close_stdout@@Base+0x4fb8>
   176f4:	mov	r3, #1
   176f8:	mov	r9, r3
   176fc:	str	r3, [sp, #28]
   17700:	add	r2, pc, r2
   17704:	str	sl, [sp, #24]
   17708:	str	r2, [sp, #52]	; 0x34
   1770c:	b	16b94 <close_stdout@@Base+0x4350>
   17710:	cmp	r8, r7
   17714:	str	r9, [sp, #60]	; 0x3c
   17718:	mov	ip, r4
   1771c:	ldr	r6, [sp, #96]	; 0x60
   17720:	ldr	r9, [sp, #88]	; 0x58
   17724:	ldr	r4, [sp, #92]	; 0x5c
   17728:	ldr	r5, [sp, #100]	; 0x64
   1772c:	bls	17764 <close_stdout@@Base+0x4f20>
   17730:	ldrb	r3, [ip]
   17734:	cmp	r3, #0
   17738:	beq	17764 <close_stdout@@Base+0x4f20>
   1773c:	ldr	r3, [sp, #60]	; 0x3c
   17740:	b	17750 <close_stdout@@Base+0x4f0c>
   17744:	ldrb	r2, [r5, r3]
   17748:	cmp	r2, #0
   1774c:	beq	17760 <close_stdout@@Base+0x4f1c>
   17750:	add	r3, r3, #1
   17754:	add	r2, fp, r3
   17758:	cmp	r8, r2
   1775c:	bhi	17744 <close_stdout@@Base+0x4f00>
   17760:	str	r3, [sp, #60]	; 0x3c
   17764:	mov	r2, #1
   17768:	b	17664 <close_stdout@@Base+0x4e20>
   1776c:	str	r9, [sp, #60]	; 0x3c
   17770:	mov	r2, #1
   17774:	ldr	r4, [sp, #92]	; 0x5c
   17778:	ldr	r6, [sp, #96]	; 0x60
   1777c:	ldr	r9, [sp, #88]	; 0x58
   17780:	ldr	r5, [sp, #100]	; 0x64
   17784:	b	17664 <close_stdout@@Base+0x4e20>
   17788:	ldr	r9, [sp, #36]	; 0x24
   1778c:	b	173b0 <close_stdout@@Base+0x4b6c>
   17790:	bl	11318 <__stack_chk_fail@plt>
   17794:	ldr	r1, [pc, #100]	; 17800 <close_stdout@@Base+0x4fbc>
   17798:	mov	r3, #0
   1779c:	mov	r0, #1
   177a0:	str	r3, [sp, #24]
   177a4:	add	r1, pc, r1
   177a8:	str	r0, [sp, #28]
   177ac:	mov	r9, r3
   177b0:	str	r1, [sp, #52]	; 0x34
   177b4:	b	16b94 <close_stdout@@Base+0x4350>
   177b8:	ldr	r0, [pc, #68]	; 17804 <close_stdout@@Base+0x4fc0>
   177bc:	mov	r3, #1
   177c0:	mov	r9, #0
   177c4:	str	r3, [sp, #24]
   177c8:	add	r0, pc, r0
   177cc:	str	r3, [sp, #28]
   177d0:	str	r0, [sp, #52]	; 0x34
   177d4:	b	16b94 <close_stdout@@Base+0x4350>
   177d8:	strdeq	r6, [r1], -ip
   177dc:	andeq	r0, r0, r0, lsr r1
   177e0:	andeq	r4, r0, r8, ror #13
   177e4:	andeq	r4, r0, r4, asr #13
   177e8:	andeq	r4, r0, r0, lsl #13
   177ec:	andeq	r4, r0, ip, asr r6
   177f0:	andeq	r4, r0, r0, ror #11
   177f4:	andeq	r4, r0, r8, lsl #11
   177f8:	andeq	r4, r0, r0, ror #5
   177fc:			; <UNDEFINED> instruction: 0x000042bc
   17800:	andeq	r4, r0, r8, lsl r2
   17804:	strdeq	r4, [r0], -r8
   17808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1780c:	sub	sp, sp, #44	; 0x2c
   17810:	mov	r6, r0
   17814:	mov	r9, r1
   17818:	mov	sl, r2
   1781c:	mov	r4, r3
   17820:	bl	1148c <__errno_location@plt>
   17824:	ldr	fp, [pc, #412]	; 179c8 <close_stdout@@Base+0x5184>
   17828:	cmp	r6, #0
   1782c:	add	fp, pc, fp
   17830:	ldr	r5, [fp]
   17834:	ldr	r1, [r0]
   17838:	mov	r8, r0
   1783c:	str	r1, [sp, #36]	; 0x24
   17840:	blt	179c0 <close_stdout@@Base+0x517c>
   17844:	ldr	r3, [pc, #384]	; 179cc <close_stdout@@Base+0x5188>
   17848:	add	r3, pc, r3
   1784c:	ldr	r3, [r3]
   17850:	cmp	r6, r3
   17854:	bcc	178a8 <close_stdout@@Base+0x5064>
   17858:	add	r7, r6, #1
   1785c:	cmn	r7, #-536870911	; 0xe0000001
   17860:	bhi	179c4 <close_stdout@@Base+0x5180>
   17864:	add	r3, fp, #4
   17868:	cmp	r5, r3
   1786c:	beq	17998 <close_stdout@@Base+0x5154>
   17870:	mov	r0, r5
   17874:	lsl	r1, r7, #3
   17878:	bl	18744 <close_stdout@@Base+0x5f00>
   1787c:	mov	r5, r0
   17880:	str	r0, [fp]
   17884:	ldr	fp, [pc, #324]	; 179d0 <close_stdout@@Base+0x518c>
   17888:	mov	r1, #0
   1788c:	add	fp, pc, fp
   17890:	ldr	r0, [fp]
   17894:	rsb	r2, r0, r7
   17898:	add	r0, r5, r0, lsl #3
   1789c:	lsl	r2, r2, #3
   178a0:	bl	114b0 <memset@plt>
   178a4:	str	r7, [fp]
   178a8:	add	r2, r4, #8
   178ac:	str	r2, [sp, #32]
   178b0:	ldr	r1, [r4]
   178b4:	add	fp, r5, r6, lsl #3
   178b8:	ldr	lr, [sp, #32]
   178bc:	mov	r2, r9
   178c0:	ldr	r3, [r4, #4]
   178c4:	ldr	ip, [r5, r6, lsl #3]
   178c8:	ldr	r7, [fp, #4]
   178cc:	orr	r3, r3, #1
   178d0:	str	r1, [sp]
   178d4:	str	r3, [sp, #4]
   178d8:	mov	r1, ip
   178dc:	str	lr, [sp, #8]
   178e0:	mov	r0, r7
   178e4:	ldr	lr, [r4, #40]	; 0x28
   178e8:	str	r3, [sp, #28]
   178ec:	mov	r3, sl
   178f0:	str	lr, [sp, #12]
   178f4:	ldr	lr, [r4, #44]	; 0x2c
   178f8:	str	ip, [sp, #24]
   178fc:	str	lr, [sp, #16]
   17900:	bl	16ae0 <close_stdout@@Base+0x429c>
   17904:	ldr	ip, [sp, #24]
   17908:	cmp	ip, r0
   1790c:	bhi	17984 <close_stdout@@Base+0x5140>
   17910:	ldr	r3, [pc, #188]	; 179d4 <close_stdout@@Base+0x5190>
   17914:	add	r1, r0, #1
   17918:	str	r1, [r5, r6, lsl #3]
   1791c:	add	r3, pc, r3
   17920:	cmp	r7, r3
   17924:	beq	17938 <close_stdout@@Base+0x50f4>
   17928:	mov	r0, r7
   1792c:	str	r1, [sp, #24]
   17930:	bl	112b8 <free@plt>
   17934:	ldr	r1, [sp, #24]
   17938:	mov	r0, r1
   1793c:	str	r1, [sp, #24]
   17940:	bl	186ec <close_stdout@@Base+0x5ea8>
   17944:	ldr	r3, [sp, #28]
   17948:	ldr	lr, [sp, #32]
   1794c:	mov	r2, r9
   17950:	str	r0, [fp, #4]
   17954:	mov	r7, r0
   17958:	ldr	ip, [r4]
   1795c:	str	r3, [sp, #4]
   17960:	mov	r3, sl
   17964:	str	lr, [sp, #8]
   17968:	str	ip, [sp]
   1796c:	ldr	ip, [r4, #40]	; 0x28
   17970:	ldr	r1, [sp, #24]
   17974:	str	ip, [sp, #12]
   17978:	ldr	ip, [r4, #44]	; 0x2c
   1797c:	str	ip, [sp, #16]
   17980:	bl	16ae0 <close_stdout@@Base+0x429c>
   17984:	ldr	r1, [sp, #36]	; 0x24
   17988:	mov	r0, r7
   1798c:	str	r1, [r8]
   17990:	add	sp, sp, #44	; 0x2c
   17994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17998:	lsl	r1, r7, #3
   1799c:	mov	r0, #0
   179a0:	str	r3, [sp, #24]
   179a4:	bl	18744 <close_stdout@@Base+0x5f00>
   179a8:	ldr	r3, [sp, #24]
   179ac:	mov	r5, r0
   179b0:	ldm	r3, {r0, r1}
   179b4:	str	r5, [fp]
   179b8:	stm	r5, {r0, r1}
   179bc:	b	17884 <close_stdout@@Base+0x5040>
   179c0:	bl	115a0 <abort@plt>
   179c4:	bl	18900 <close_stdout@@Base+0x60bc>
   179c8:	andeq	r5, r1, r0, lsl #19
   179cc:	andeq	r5, r1, r0, lsr r9
   179d0:	andeq	r5, r1, ip, ror #17
   179d4:	andeq	r5, r1, ip, lsr #17
   179d8:	push	{r4, r5, r6, lr}
   179dc:	mov	r5, r0
   179e0:	bl	1148c <__errno_location@plt>
   179e4:	cmp	r5, #0
   179e8:	mov	r1, #48	; 0x30
   179ec:	mov	r4, r0
   179f0:	ldr	r0, [pc, #24]	; 17a10 <close_stdout@@Base+0x51cc>
   179f4:	ldr	r6, [r4]
   179f8:	add	r0, pc, r0
   179fc:	add	r0, r0, #256	; 0x100
   17a00:	movne	r0, r5
   17a04:	bl	188c0 <close_stdout@@Base+0x607c>
   17a08:	str	r6, [r4]
   17a0c:	pop	{r4, r5, r6, pc}
   17a10:	ldrdeq	r5, [r1], -r0
   17a14:	cmp	r0, #0
   17a18:	beq	17a24 <close_stdout@@Base+0x51e0>
   17a1c:	ldr	r0, [r0]
   17a20:	bx	lr
   17a24:	ldr	r0, [pc, #12]	; 17a38 <close_stdout@@Base+0x51f4>
   17a28:	add	r0, pc, r0
   17a2c:	add	r0, r0, #256	; 0x100
   17a30:	ldr	r0, [r0]
   17a34:	bx	lr
   17a38:	andeq	r5, r1, r0, lsr #15
   17a3c:	cmp	r0, #0
   17a40:	beq	17a4c <close_stdout@@Base+0x5208>
   17a44:	str	r1, [r0]
   17a48:	bx	lr
   17a4c:	ldr	r0, [pc, #12]	; 17a60 <close_stdout@@Base+0x521c>
   17a50:	add	r0, pc, r0
   17a54:	add	r0, r0, #256	; 0x100
   17a58:	str	r1, [r0]
   17a5c:	bx	lr
   17a60:	andeq	r5, r1, r8, ror r7
   17a64:	cmp	r0, #0
   17a68:	movne	r3, r0
   17a6c:	beq	17a9c <close_stdout@@Base+0x5258>
   17a70:	lsr	ip, r1, #5
   17a74:	and	r1, r1, #31
   17a78:	add	r3, r3, ip, lsl #2
   17a7c:	ldr	ip, [r3, #8]
   17a80:	lsr	r0, ip, r1
   17a84:	eor	r2, r0, r2
   17a88:	and	r0, r0, #1
   17a8c:	and	r2, r2, #1
   17a90:	eor	ip, ip, r2, lsl r1
   17a94:	str	ip, [r3, #8]
   17a98:	bx	lr
   17a9c:	ldr	r3, [pc, #8]	; 17aac <close_stdout@@Base+0x5268>
   17aa0:	add	r3, pc, r3
   17aa4:	add	r3, r3, #256	; 0x100
   17aa8:	b	17a70 <close_stdout@@Base+0x522c>
   17aac:	andeq	r5, r1, r8, lsr #14
   17ab0:	subs	r3, r0, #0
   17ab4:	beq	17ac4 <close_stdout@@Base+0x5280>
   17ab8:	ldr	r0, [r3, #4]
   17abc:	str	r1, [r3, #4]
   17ac0:	bx	lr
   17ac4:	ldr	r3, [pc, #8]	; 17ad4 <close_stdout@@Base+0x5290>
   17ac8:	add	r3, pc, r3
   17acc:	add	r3, r3, #256	; 0x100
   17ad0:	b	17ab8 <close_stdout@@Base+0x5274>
   17ad4:	andeq	r5, r1, r0, lsl #14
   17ad8:	cmp	r0, #0
   17adc:	push	{r3, lr}
   17ae0:	beq	17b04 <close_stdout@@Base+0x52c0>
   17ae4:	cmp	r2, #0
   17ae8:	cmpne	r1, #0
   17aec:	mov	r3, #8
   17af0:	strne	r1, [r0, #40]	; 0x28
   17af4:	str	r3, [r0]
   17af8:	strne	r2, [r0, #44]	; 0x2c
   17afc:	popne	{r3, pc}
   17b00:	bl	115a0 <abort@plt>
   17b04:	ldr	r0, [pc, #8]	; 17b14 <close_stdout@@Base+0x52d0>
   17b08:	add	r0, pc, r0
   17b0c:	add	r0, r0, #256	; 0x100
   17b10:	b	17ae4 <close_stdout@@Base+0x52a0>
   17b14:	andeq	r5, r1, r0, asr #13
   17b18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17b1c:	sub	sp, sp, #24
   17b20:	mov	r7, r0
   17b24:	mov	sl, r1
   17b28:	ldr	r4, [sp, #56]	; 0x38
   17b2c:	mov	r9, r2
   17b30:	mov	r8, r3
   17b34:	cmp	r4, #0
   17b38:	beq	17b8c <close_stdout@@Base+0x5348>
   17b3c:	bl	1148c <__errno_location@plt>
   17b40:	ldr	r3, [r4]
   17b44:	add	lr, r4, #8
   17b48:	mov	r1, sl
   17b4c:	mov	r2, r9
   17b50:	ldr	r6, [r0]
   17b54:	mov	r5, r0
   17b58:	str	r3, [sp]
   17b5c:	mov	r0, r7
   17b60:	ldr	ip, [r4, #4]
   17b64:	mov	r3, r8
   17b68:	stmib	sp, {ip, lr}
   17b6c:	ldr	ip, [r4, #40]	; 0x28
   17b70:	str	ip, [sp, #12]
   17b74:	ldr	ip, [r4, #44]	; 0x2c
   17b78:	str	ip, [sp, #16]
   17b7c:	bl	16ae0 <close_stdout@@Base+0x429c>
   17b80:	str	r6, [r5]
   17b84:	add	sp, sp, #24
   17b88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b8c:	ldr	r4, [pc, #8]	; 17b9c <close_stdout@@Base+0x5358>
   17b90:	add	r4, pc, r4
   17b94:	add	r4, r4, #256	; 0x100
   17b98:	b	17b3c <close_stdout@@Base+0x52f8>
   17b9c:	andeq	r5, r1, r8, lsr r6
   17ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ba4:	subs	r4, r3, #0
   17ba8:	sub	sp, sp, #36	; 0x24
   17bac:	mov	r7, r0
   17bb0:	mov	r6, r1
   17bb4:	mov	r5, r2
   17bb8:	beq	17c74 <close_stdout@@Base+0x5430>
   17bbc:	bl	1148c <__errno_location@plt>
   17bc0:	ldr	r3, [r4]
   17bc4:	ldr	sl, [r4, #4]
   17bc8:	add	r9, r4, #8
   17bcc:	mov	r8, r0
   17bd0:	mov	r0, #0
   17bd4:	ldr	r2, [r8]
   17bd8:	cmp	r5, r0
   17bdc:	orreq	sl, sl, #1
   17be0:	str	r9, [sp, #8]
   17be4:	mov	r1, r0
   17be8:	stm	sp, {r3, sl}
   17bec:	mov	r3, r6
   17bf0:	ldr	ip, [r4, #40]	; 0x28
   17bf4:	str	r2, [sp, #28]
   17bf8:	mov	r2, r7
   17bfc:	str	ip, [sp, #12]
   17c00:	ldr	ip, [r4, #44]	; 0x2c
   17c04:	str	ip, [sp, #16]
   17c08:	bl	16ae0 <close_stdout@@Base+0x429c>
   17c0c:	add	r1, r0, #1
   17c10:	mov	fp, r0
   17c14:	str	r1, [sp, #24]
   17c18:	mov	r0, r1
   17c1c:	bl	186ec <close_stdout@@Base+0x5ea8>
   17c20:	ldr	lr, [r4]
   17c24:	str	sl, [sp, #4]
   17c28:	mov	r3, r6
   17c2c:	str	r9, [sp, #8]
   17c30:	mov	r2, r7
   17c34:	str	lr, [sp]
   17c38:	ldr	lr, [r4, #40]	; 0x28
   17c3c:	ldr	r1, [sp, #24]
   17c40:	str	lr, [sp, #12]
   17c44:	ldr	lr, [r4, #44]	; 0x2c
   17c48:	str	lr, [sp, #16]
   17c4c:	str	r0, [sp, #24]
   17c50:	bl	16ae0 <close_stdout@@Base+0x429c>
   17c54:	ldr	r3, [sp, #28]
   17c58:	cmp	r5, #0
   17c5c:	str	r3, [r8]
   17c60:	ldr	ip, [sp, #24]
   17c64:	strne	fp, [r5]
   17c68:	mov	r0, ip
   17c6c:	add	sp, sp, #36	; 0x24
   17c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c74:	ldr	r4, [pc, #8]	; 17c84 <close_stdout@@Base+0x5440>
   17c78:	add	r4, pc, r4
   17c7c:	add	r4, r4, #256	; 0x100
   17c80:	b	17bbc <close_stdout@@Base+0x5378>
   17c84:	andeq	r5, r1, r0, asr r5
   17c88:	mov	r3, r2
   17c8c:	mov	r2, #0
   17c90:	b	17ba0 <close_stdout@@Base+0x535c>
   17c94:	ldr	r2, [pc, #152]	; 17d34 <close_stdout@@Base+0x54f0>
   17c98:	push	{r3, r4, r5, r6, r7, lr}
   17c9c:	add	r2, pc, r2
   17ca0:	ldr	r3, [pc, #144]	; 17d38 <close_stdout@@Base+0x54f4>
   17ca4:	ldr	r6, [r2]
   17ca8:	add	r3, pc, r3
   17cac:	cmp	r6, #1
   17cb0:	ldr	r7, [r3]
   17cb4:	movhi	r4, #1
   17cb8:	movhi	r5, r7
   17cbc:	bls	17cd8 <close_stdout@@Base+0x5494>
   17cc0:	ldr	r0, [r5, #12]
   17cc4:	add	r4, r4, #1
   17cc8:	bl	112b8 <free@plt>
   17ccc:	cmp	r4, r6
   17cd0:	add	r5, r5, #8
   17cd4:	bne	17cc0 <close_stdout@@Base+0x547c>
   17cd8:	ldr	r4, [pc, #92]	; 17d3c <close_stdout@@Base+0x54f8>
   17cdc:	ldr	r0, [r7, #4]
   17ce0:	add	r4, pc, r4
   17ce4:	cmp	r0, r4
   17ce8:	beq	17d00 <close_stdout@@Base+0x54bc>
   17cec:	bl	112b8 <free@plt>
   17cf0:	ldr	r3, [pc, #72]	; 17d40 <close_stdout@@Base+0x54fc>
   17cf4:	mov	r2, #256	; 0x100
   17cf8:	add	r3, pc, r3
   17cfc:	stmib	r3, {r2, r4}
   17d00:	ldr	r4, [pc, #60]	; 17d44 <close_stdout@@Base+0x5500>
   17d04:	add	r4, pc, r4
   17d08:	add	r5, r4, #4
   17d0c:	cmp	r7, r5
   17d10:	beq	17d20 <close_stdout@@Base+0x54dc>
   17d14:	mov	r0, r7
   17d18:	bl	112b8 <free@plt>
   17d1c:	str	r5, [r4]
   17d20:	ldr	r3, [pc, #32]	; 17d48 <close_stdout@@Base+0x5504>
   17d24:	mov	r2, #1
   17d28:	add	r3, pc, r3
   17d2c:	str	r2, [r3]
   17d30:	pop	{r3, r4, r5, r6, r7, pc}
   17d34:	ldrdeq	r5, [r1], -ip
   17d38:	andeq	r5, r1, r4, lsl #10
   17d3c:	andeq	r5, r1, r8, ror #9
   17d40:			; <UNDEFINED> instruction: 0x000154b4
   17d44:	andeq	r5, r1, r8, lsr #9
   17d48:	andeq	r5, r1, r0, asr r4
   17d4c:	ldr	r3, [pc, #12]	; 17d60 <close_stdout@@Base+0x551c>
   17d50:	mvn	r2, #0
   17d54:	add	r3, pc, r3
   17d58:	add	r3, r3, #256	; 0x100
   17d5c:	b	17808 <close_stdout@@Base+0x4fc4>
   17d60:	andeq	r5, r1, r4, ror r4
   17d64:	ldr	r3, [pc, #8]	; 17d74 <close_stdout@@Base+0x5530>
   17d68:	add	r3, pc, r3
   17d6c:	add	r3, r3, #256	; 0x100
   17d70:	b	17808 <close_stdout@@Base+0x4fc4>
   17d74:	andeq	r5, r1, r0, ror #8
   17d78:	mov	r1, r0
   17d7c:	mov	r0, #0
   17d80:	b	17d4c <close_stdout@@Base+0x5508>
   17d84:	mov	r2, r1
   17d88:	mov	r1, r0
   17d8c:	mov	r0, #0
   17d90:	b	17d64 <close_stdout@@Base+0x5520>
   17d94:	ldr	r3, [pc, #92]	; 17df8 <close_stdout@@Base+0x55b4>
   17d98:	ldr	ip, [pc, #92]	; 17dfc <close_stdout@@Base+0x55b8>
   17d9c:	add	r3, pc, r3
   17da0:	push	{r4, r5, r6, r7, lr}
   17da4:	sub	sp, sp, #60	; 0x3c
   17da8:	ldr	r4, [r3, ip]
   17dac:	add	r5, sp, #4
   17db0:	mov	r7, r2
   17db4:	mov	r6, r0
   17db8:	mov	r0, r5
   17dbc:	ldr	r3, [r4]
   17dc0:	str	r3, [sp, #52]	; 0x34
   17dc4:	bl	16928 <close_stdout@@Base+0x40e4>
   17dc8:	mov	r3, r5
   17dcc:	mvn	r2, #0
   17dd0:	mov	r0, r6
   17dd4:	mov	r1, r7
   17dd8:	bl	17808 <close_stdout@@Base+0x4fc4>
   17ddc:	ldr	r2, [sp, #52]	; 0x34
   17de0:	ldr	r3, [r4]
   17de4:	cmp	r2, r3
   17de8:	bne	17df4 <close_stdout@@Base+0x55b0>
   17dec:	add	sp, sp, #60	; 0x3c
   17df0:	pop	{r4, r5, r6, r7, pc}
   17df4:	bl	11318 <__stack_chk_fail@plt>
   17df8:	andeq	r5, r1, ip, asr r2
   17dfc:	andeq	r0, r0, r0, lsr r1
   17e00:	ldr	ip, [pc, #96]	; 17e68 <close_stdout@@Base+0x5624>
   17e04:	push	{r4, r5, r6, r7, r8, lr}
   17e08:	add	ip, pc, ip
   17e0c:	ldr	lr, [pc, #88]	; 17e6c <close_stdout@@Base+0x5628>
   17e10:	sub	sp, sp, #56	; 0x38
   17e14:	mov	r8, r3
   17e18:	add	r5, sp, #4
   17e1c:	mov	r7, r2
   17e20:	mov	r6, r0
   17e24:	ldr	r4, [ip, lr]
   17e28:	mov	r0, r5
   17e2c:	ldr	r3, [r4]
   17e30:	str	r3, [sp, #52]	; 0x34
   17e34:	bl	16928 <close_stdout@@Base+0x40e4>
   17e38:	mov	r2, r8
   17e3c:	mov	r3, r5
   17e40:	mov	r0, r6
   17e44:	mov	r1, r7
   17e48:	bl	17808 <close_stdout@@Base+0x4fc4>
   17e4c:	ldr	r2, [sp, #52]	; 0x34
   17e50:	ldr	r3, [r4]
   17e54:	cmp	r2, r3
   17e58:	bne	17e64 <close_stdout@@Base+0x5620>
   17e5c:	add	sp, sp, #56	; 0x38
   17e60:	pop	{r4, r5, r6, r7, r8, pc}
   17e64:	bl	11318 <__stack_chk_fail@plt>
   17e68:	strdeq	r5, [r1], -r0
   17e6c:	andeq	r0, r0, r0, lsr r1
   17e70:	mov	r2, r1
   17e74:	mov	r1, r0
   17e78:	mov	r0, #0
   17e7c:	b	17d94 <close_stdout@@Base+0x5550>
   17e80:	mov	ip, r1
   17e84:	mov	r3, r2
   17e88:	mov	r1, r0
   17e8c:	mov	r2, ip
   17e90:	mov	r0, #0
   17e94:	b	17e00 <close_stdout@@Base+0x55bc>
   17e98:	push	{r4, r5, r6, r7, r8, lr}
   17e9c:	mov	r5, r2
   17ea0:	ldr	lr, [pc, #136]	; 17f30 <close_stdout@@Base+0x56ec>
   17ea4:	mov	r7, r0
   17ea8:	mov	r6, r1
   17eac:	ldr	r4, [pc, #128]	; 17f34 <close_stdout@@Base+0x56f0>
   17eb0:	add	lr, pc, lr
   17eb4:	sub	sp, sp, #56	; 0x38
   17eb8:	add	lr, lr, #256	; 0x100
   17ebc:	ldr	r8, [pc, #116]	; 17f38 <close_stdout@@Base+0x56f4>
   17ec0:	add	r4, pc, r4
   17ec4:	add	ip, sp, #4
   17ec8:	ldm	lr!, {r0, r1, r2, r3}
   17ecc:	ldr	r4, [r4, r8]
   17ed0:	stmia	ip!, {r0, r1, r2, r3}
   17ed4:	ldm	lr!, {r0, r1, r2, r3}
   17ed8:	ldr	r8, [r4]
   17edc:	stmia	ip!, {r0, r1, r2, r3}
   17ee0:	ldm	lr, {r0, r1, r2, r3}
   17ee4:	str	r8, [sp, #52]	; 0x34
   17ee8:	stm	ip, {r0, r1, r2, r3}
   17eec:	mov	r1, r5
   17ef0:	add	r5, sp, #4
   17ef4:	mov	r2, #1
   17ef8:	mov	r0, r5
   17efc:	bl	17a64 <close_stdout@@Base+0x5220>
   17f00:	mov	r2, r6
   17f04:	mov	r3, r5
   17f08:	mov	r1, r7
   17f0c:	mov	r0, #0
   17f10:	bl	17808 <close_stdout@@Base+0x4fc4>
   17f14:	ldr	r2, [sp, #52]	; 0x34
   17f18:	ldr	r3, [r4]
   17f1c:	cmp	r2, r3
   17f20:	bne	17f2c <close_stdout@@Base+0x56e8>
   17f24:	add	sp, sp, #56	; 0x38
   17f28:	pop	{r4, r5, r6, r7, r8, pc}
   17f2c:	bl	11318 <__stack_chk_fail@plt>
   17f30:	andeq	r5, r1, r8, lsl r3
   17f34:	andeq	r5, r1, r8, lsr r1
   17f38:	andeq	r0, r0, r0, lsr r1
   17f3c:	mov	r2, r1
   17f40:	mvn	r1, #0
   17f44:	b	17e98 <close_stdout@@Base+0x5654>
   17f48:	mov	r1, #58	; 0x3a
   17f4c:	b	17f3c <close_stdout@@Base+0x56f8>
   17f50:	mov	r2, #58	; 0x3a
   17f54:	b	17e98 <close_stdout@@Base+0x5654>
   17f58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17f5c:	mov	r5, r2
   17f60:	ldr	lr, [pc, #144]	; 17ff8 <close_stdout@@Base+0x57b4>
   17f64:	mov	r8, r0
   17f68:	mov	r9, r1
   17f6c:	mov	r7, r3
   17f70:	add	lr, pc, lr
   17f74:	ldr	r4, [pc, #128]	; 17ffc <close_stdout@@Base+0x57b8>
   17f78:	add	lr, lr, #256	; 0x100
   17f7c:	sub	sp, sp, #56	; 0x38
   17f80:	ldr	sl, [pc, #120]	; 18000 <close_stdout@@Base+0x57bc>
   17f84:	add	r4, pc, r4
   17f88:	ldm	lr!, {r0, r1, r2, r3}
   17f8c:	add	ip, sp, #4
   17f90:	ldr	r4, [r4, sl]
   17f94:	ldr	r6, [sp, #88]	; 0x58
   17f98:	stmia	ip!, {r0, r1, r2, r3}
   17f9c:	ldm	lr!, {r0, r1, r2, r3}
   17fa0:	ldr	sl, [r4]
   17fa4:	stmia	ip!, {r0, r1, r2, r3}
   17fa8:	ldm	lr, {r0, r1, r2, r3}
   17fac:	str	sl, [sp, #52]	; 0x34
   17fb0:	stm	ip, {r0, r1, r2, r3}
   17fb4:	mov	r2, r5
   17fb8:	add	r5, sp, #4
   17fbc:	mov	r1, r9
   17fc0:	mov	r0, r5
   17fc4:	bl	17ad8 <close_stdout@@Base+0x5294>
   17fc8:	mov	r2, r6
   17fcc:	mov	r3, r5
   17fd0:	mov	r0, r8
   17fd4:	mov	r1, r7
   17fd8:	bl	17808 <close_stdout@@Base+0x4fc4>
   17fdc:	ldr	r2, [sp, #52]	; 0x34
   17fe0:	ldr	r3, [r4]
   17fe4:	cmp	r2, r3
   17fe8:	bne	17ff4 <close_stdout@@Base+0x57b0>
   17fec:	add	sp, sp, #56	; 0x38
   17ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17ff4:	bl	11318 <__stack_chk_fail@plt>
   17ff8:	andeq	r5, r1, r8, asr r2
   17ffc:	andeq	r5, r1, r4, ror r0
   18000:	andeq	r0, r0, r0, lsr r1
   18004:	push	{lr}		; (str lr, [sp, #-4]!)
   18008:	sub	sp, sp, #12
   1800c:	mvn	ip, #0
   18010:	str	ip, [sp]
   18014:	bl	17f58 <close_stdout@@Base+0x5714>
   18018:	add	sp, sp, #12
   1801c:	pop	{pc}		; (ldr pc, [sp], #4)
   18020:	mov	ip, r1
   18024:	mov	r3, r2
   18028:	mov	r1, r0
   1802c:	mov	r2, ip
   18030:	mov	r0, #0
   18034:	b	18004 <close_stdout@@Base+0x57c0>
   18038:	push	{lr}		; (str lr, [sp, #-4]!)
   1803c:	sub	sp, sp, #12
   18040:	mov	lr, r1
   18044:	mov	ip, r2
   18048:	mov	r1, r0
   1804c:	str	r3, [sp]
   18050:	mov	r2, lr
   18054:	mov	r3, ip
   18058:	mov	r0, #0
   1805c:	bl	17f58 <close_stdout@@Base+0x5714>
   18060:	add	sp, sp, #12
   18064:	pop	{pc}		; (ldr pc, [sp], #4)
   18068:	ldr	r3, [pc, #12]	; 1807c <close_stdout@@Base+0x5838>
   1806c:	ldr	ip, [pc, #12]	; 18080 <close_stdout@@Base+0x583c>
   18070:	add	r3, pc, r3
   18074:	ldr	r3, [r3, ip]
   18078:	b	17808 <close_stdout@@Base+0x4fc4>
   1807c:	andeq	r4, r1, r8, lsl #31
   18080:	andeq	r0, r0, ip, lsr #2
   18084:	mov	r2, r1
   18088:	mov	r1, r0
   1808c:	mov	r0, #0
   18090:	b	18068 <close_stdout@@Base+0x5824>
   18094:	mvn	r2, #0
   18098:	b	18068 <close_stdout@@Base+0x5824>
   1809c:	mov	r1, r0
   180a0:	mov	r0, #0
   180a4:	b	18094 <close_stdout@@Base+0x5850>
   180a8:	ldr	r3, [pc, #148]	; 18144 <close_stdout@@Base+0x5900>
   180ac:	mov	r1, r0
   180b0:	ldr	r2, [pc, #144]	; 18148 <close_stdout@@Base+0x5904>
   180b4:	add	r3, pc, r3
   180b8:	push	{r4, r5, r6, lr}
   180bc:	sub	sp, sp, #16
   180c0:	ldr	r4, [r3, r2]
   180c4:	mov	r5, r0
   180c8:	mov	r0, #0
   180cc:	ldr	r3, [r4]
   180d0:	str	r3, [sp, #12]
   180d4:	bl	114bc <clock_settime@plt>
   180d8:	subs	r6, r0, #0
   180dc:	beq	18124 <close_stdout@@Base+0x58e0>
   180e0:	bl	1148c <__errno_location@plt>
   180e4:	ldr	r3, [r0]
   180e8:	cmp	r3, #1
   180ec:	beq	18124 <close_stdout@@Base+0x58e0>
   180f0:	ldr	r3, [r5, #4]
   180f4:	movw	r2, #19923	; 0x4dd3
   180f8:	movt	r2, #4194	; 0x1062
   180fc:	ldr	ip, [r5]
   18100:	add	r0, sp, #4
   18104:	mov	r1, #0
   18108:	smull	lr, r2, r2, r3
   1810c:	asr	r3, r3, #31
   18110:	str	ip, [sp, #4]
   18114:	rsb	r3, r3, r2, asr #6
   18118:	str	r3, [sp, #8]
   1811c:	bl	113d8 <settimeofday@plt>
   18120:	b	18128 <close_stdout@@Base+0x58e4>
   18124:	mov	r0, r6
   18128:	ldr	r2, [sp, #12]
   1812c:	ldr	r3, [r4]
   18130:	cmp	r2, r3
   18134:	bne	18140 <close_stdout@@Base+0x58fc>
   18138:	add	sp, sp, #16
   1813c:	pop	{r4, r5, r6, pc}
   18140:	bl	11318 <__stack_chk_fail@plt>
   18144:	andeq	r4, r1, r4, asr #30
   18148:	andeq	r0, r0, r0, lsr r1
   1814c:	push	{r4, r5, r6, r7, lr}
   18150:	cmp	r1, #0
   18154:	sub	sp, sp, #36	; 0x24
   18158:	ldr	r7, [pc, #896]	; 184e0 <close_stdout@@Base+0x5c9c>
   1815c:	mov	ip, r3
   18160:	mov	r5, r0
   18164:	add	r7, pc, r7
   18168:	ldr	r4, [sp, #56]	; 0x38
   1816c:	ldr	r6, [sp, #60]	; 0x3c
   18170:	beq	184b4 <close_stdout@@Base+0x5c70>
   18174:	str	r2, [sp]
   18178:	mov	r3, r1
   1817c:	ldr	r2, [pc, #864]	; 184e4 <close_stdout@@Base+0x5ca0>
   18180:	mov	r1, #1
   18184:	str	ip, [sp, #4]
   18188:	add	r2, pc, r2
   1818c:	bl	114ec <__fprintf_chk@plt>
   18190:	ldr	r1, [pc, #848]	; 184e8 <close_stdout@@Base+0x5ca4>
   18194:	mov	r2, #5
   18198:	mov	r0, #0
   1819c:	add	r1, pc, r1
   181a0:	bl	1130c <dcgettext@plt>
   181a4:	ldr	r2, [pc, #832]	; 184ec <close_stdout@@Base+0x5ca8>
   181a8:	movw	ip, #2013	; 0x7dd
   181ac:	mov	r1, #1
   181b0:	ldr	r2, [r7, r2]
   181b4:	str	ip, [sp]
   181b8:	mov	r3, r0
   181bc:	mov	r0, r5
   181c0:	bl	114ec <__fprintf_chk@plt>
   181c4:	ldr	r1, [pc, #804]	; 184f0 <close_stdout@@Base+0x5cac>
   181c8:	mov	r0, #0
   181cc:	mov	r2, #5
   181d0:	add	r1, pc, r1
   181d4:	bl	1130c <dcgettext@plt>
   181d8:	mov	r1, r5
   181dc:	bl	11270 <fputs_unlocked@plt>
   181e0:	cmp	r6, #9
   181e4:	addls	pc, pc, r6, lsl #2
   181e8:	b	184d0 <close_stdout@@Base+0x5c8c>
   181ec:	b	18280 <close_stdout@@Base+0x5a3c>
   181f0:	b	18284 <close_stdout@@Base+0x5a40>
   181f4:	b	182b4 <close_stdout@@Base+0x5a70>
   181f8:	b	182e8 <close_stdout@@Base+0x5aa4>
   181fc:	b	18324 <close_stdout@@Base+0x5ae0>
   18200:	b	18364 <close_stdout@@Base+0x5b20>
   18204:	b	183ac <close_stdout@@Base+0x5b68>
   18208:	b	183fc <close_stdout@@Base+0x5bb8>
   1820c:	b	18454 <close_stdout@@Base+0x5c10>
   18210:	b	18214 <close_stdout@@Base+0x59d0>
   18214:	ldr	r1, [pc, #728]	; 184f4 <close_stdout@@Base+0x5cb0>
   18218:	mov	r0, #0
   1821c:	add	r1, pc, r1
   18220:	mov	r2, #5
   18224:	bl	1130c <dcgettext@plt>
   18228:	ldm	r4, {r3, ip}
   1822c:	mov	r1, #1
   18230:	str	ip, [sp]
   18234:	ldr	ip, [r4, #8]
   18238:	str	ip, [sp, #4]
   1823c:	ldr	ip, [r4, #12]
   18240:	str	ip, [sp, #8]
   18244:	ldr	ip, [r4, #16]
   18248:	str	ip, [sp, #12]
   1824c:	ldr	ip, [r4, #20]
   18250:	str	ip, [sp, #16]
   18254:	ldr	ip, [r4, #24]
   18258:	str	ip, [sp, #20]
   1825c:	ldr	ip, [r4, #28]
   18260:	str	ip, [sp, #24]
   18264:	ldr	ip, [r4, #32]
   18268:	str	ip, [sp, #28]
   1826c:	mov	r2, r0
   18270:	mov	r0, r5
   18274:	bl	114ec <__fprintf_chk@plt>
   18278:	add	sp, sp, #36	; 0x24
   1827c:	pop	{r4, r5, r6, r7, pc}
   18280:	bl	115a0 <abort@plt>
   18284:	ldr	r1, [pc, #620]	; 184f8 <close_stdout@@Base+0x5cb4>
   18288:	mov	r2, #5
   1828c:	mov	r0, #0
   18290:	add	r1, pc, r1
   18294:	bl	1130c <dcgettext@plt>
   18298:	ldr	r3, [r4]
   1829c:	mov	r1, #1
   182a0:	mov	r2, r0
   182a4:	mov	r0, r5
   182a8:	add	sp, sp, #36	; 0x24
   182ac:	pop	{r4, r5, r6, r7, lr}
   182b0:	b	114ec <__fprintf_chk@plt>
   182b4:	ldr	r1, [pc, #576]	; 184fc <close_stdout@@Base+0x5cb8>
   182b8:	mov	r2, #5
   182bc:	mov	r0, #0
   182c0:	add	r1, pc, r1
   182c4:	bl	1130c <dcgettext@plt>
   182c8:	ldm	r4, {r3, ip}
   182cc:	mov	r1, #1
   182d0:	str	ip, [sp, #56]	; 0x38
   182d4:	mov	r2, r0
   182d8:	mov	r0, r5
   182dc:	add	sp, sp, #36	; 0x24
   182e0:	pop	{r4, r5, r6, r7, lr}
   182e4:	b	114ec <__fprintf_chk@plt>
   182e8:	ldr	r1, [pc, #528]	; 18500 <close_stdout@@Base+0x5cbc>
   182ec:	mov	r2, #5
   182f0:	mov	r0, #0
   182f4:	add	r1, pc, r1
   182f8:	bl	1130c <dcgettext@plt>
   182fc:	ldm	r4, {r3, ip}
   18300:	mov	r1, #1
   18304:	str	ip, [sp, #56]	; 0x38
   18308:	ldr	ip, [r4, #8]
   1830c:	str	ip, [sp, #60]	; 0x3c
   18310:	mov	r2, r0
   18314:	mov	r0, r5
   18318:	add	sp, sp, #36	; 0x24
   1831c:	pop	{r4, r5, r6, r7, lr}
   18320:	b	114ec <__fprintf_chk@plt>
   18324:	ldr	r1, [pc, #472]	; 18504 <close_stdout@@Base+0x5cc0>
   18328:	mov	r2, #5
   1832c:	mov	r0, #0
   18330:	add	r1, pc, r1
   18334:	bl	1130c <dcgettext@plt>
   18338:	ldm	r4, {r3, ip}
   1833c:	mov	r1, #1
   18340:	str	ip, [sp]
   18344:	ldr	ip, [r4, #8]
   18348:	str	ip, [sp, #4]
   1834c:	ldr	ip, [r4, #12]
   18350:	str	ip, [sp, #8]
   18354:	mov	r2, r0
   18358:	mov	r0, r5
   1835c:	bl	114ec <__fprintf_chk@plt>
   18360:	b	18278 <close_stdout@@Base+0x5a34>
   18364:	ldr	r1, [pc, #412]	; 18508 <close_stdout@@Base+0x5cc4>
   18368:	mov	r2, #5
   1836c:	mov	r0, #0
   18370:	add	r1, pc, r1
   18374:	bl	1130c <dcgettext@plt>
   18378:	ldm	r4, {r3, ip}
   1837c:	mov	r1, #1
   18380:	str	ip, [sp]
   18384:	ldr	ip, [r4, #8]
   18388:	str	ip, [sp, #4]
   1838c:	ldr	ip, [r4, #12]
   18390:	str	ip, [sp, #8]
   18394:	ldr	ip, [r4, #16]
   18398:	str	ip, [sp, #12]
   1839c:	mov	r2, r0
   183a0:	mov	r0, r5
   183a4:	bl	114ec <__fprintf_chk@plt>
   183a8:	b	18278 <close_stdout@@Base+0x5a34>
   183ac:	ldr	r1, [pc, #344]	; 1850c <close_stdout@@Base+0x5cc8>
   183b0:	mov	r2, #5
   183b4:	mov	r0, #0
   183b8:	add	r1, pc, r1
   183bc:	bl	1130c <dcgettext@plt>
   183c0:	ldm	r4, {r3, ip}
   183c4:	mov	r1, #1
   183c8:	str	ip, [sp]
   183cc:	ldr	ip, [r4, #8]
   183d0:	str	ip, [sp, #4]
   183d4:	ldr	ip, [r4, #12]
   183d8:	str	ip, [sp, #8]
   183dc:	ldr	ip, [r4, #16]
   183e0:	str	ip, [sp, #12]
   183e4:	ldr	ip, [r4, #20]
   183e8:	str	ip, [sp, #16]
   183ec:	mov	r2, r0
   183f0:	mov	r0, r5
   183f4:	bl	114ec <__fprintf_chk@plt>
   183f8:	b	18278 <close_stdout@@Base+0x5a34>
   183fc:	ldr	r1, [pc, #268]	; 18510 <close_stdout@@Base+0x5ccc>
   18400:	mov	r2, #5
   18404:	mov	r0, #0
   18408:	add	r1, pc, r1
   1840c:	bl	1130c <dcgettext@plt>
   18410:	ldm	r4, {r3, ip}
   18414:	mov	r1, #1
   18418:	str	ip, [sp]
   1841c:	ldr	ip, [r4, #8]
   18420:	str	ip, [sp, #4]
   18424:	ldr	ip, [r4, #12]
   18428:	str	ip, [sp, #8]
   1842c:	ldr	ip, [r4, #16]
   18430:	str	ip, [sp, #12]
   18434:	ldr	ip, [r4, #20]
   18438:	str	ip, [sp, #16]
   1843c:	ldr	ip, [r4, #24]
   18440:	str	ip, [sp, #20]
   18444:	mov	r2, r0
   18448:	mov	r0, r5
   1844c:	bl	114ec <__fprintf_chk@plt>
   18450:	b	18278 <close_stdout@@Base+0x5a34>
   18454:	ldr	r1, [pc, #184]	; 18514 <close_stdout@@Base+0x5cd0>
   18458:	mov	r2, #5
   1845c:	mov	r0, #0
   18460:	add	r1, pc, r1
   18464:	bl	1130c <dcgettext@plt>
   18468:	ldm	r4, {r3, ip}
   1846c:	mov	r1, #1
   18470:	str	ip, [sp]
   18474:	ldr	ip, [r4, #8]
   18478:	str	ip, [sp, #4]
   1847c:	ldr	ip, [r4, #12]
   18480:	str	ip, [sp, #8]
   18484:	ldr	ip, [r4, #16]
   18488:	str	ip, [sp, #12]
   1848c:	ldr	ip, [r4, #20]
   18490:	str	ip, [sp, #16]
   18494:	ldr	ip, [r4, #24]
   18498:	str	ip, [sp, #20]
   1849c:	ldr	ip, [r4, #28]
   184a0:	str	ip, [sp, #24]
   184a4:	mov	r2, r0
   184a8:	mov	r0, r5
   184ac:	bl	114ec <__fprintf_chk@plt>
   184b0:	b	18278 <close_stdout@@Base+0x5a34>
   184b4:	str	r3, [sp]
   184b8:	mov	r3, r2
   184bc:	ldr	r2, [pc, #84]	; 18518 <close_stdout@@Base+0x5cd4>
   184c0:	mov	r1, #1
   184c4:	add	r2, pc, r2
   184c8:	bl	114ec <__fprintf_chk@plt>
   184cc:	b	18190 <close_stdout@@Base+0x594c>
   184d0:	ldr	r1, [pc, #68]	; 1851c <close_stdout@@Base+0x5cd8>
   184d4:	mov	r0, #0
   184d8:	add	r1, pc, r1
   184dc:	b	18220 <close_stdout@@Base+0x59dc>
   184e0:	muleq	r1, r4, lr
   184e4:	andeq	r3, r0, ip, lsl #17
   184e8:	andeq	r3, r0, ip, lsl #17
   184ec:	andeq	r0, r0, r4, ror #2
   184f0:	andeq	r3, r0, ip, asr r8
   184f4:	andeq	r3, r0, r8, ror #19
   184f8:	andeq	r3, r0, r8, ror #16
   184fc:	andeq	r3, r0, r8, asr #16
   18500:	andeq	r3, r0, ip, lsr #16
   18504:	andeq	r3, r0, ip, lsl #16
   18508:	andeq	r3, r0, ip, ror #15
   1850c:	andeq	r3, r0, r8, asr #15
   18510:	andeq	r3, r0, r0, lsr #15
   18514:	andeq	r3, r0, r4, ror r7
   18518:	andeq	r3, r0, ip, asr r5
   1851c:	andeq	r3, r0, r0, ror #14
   18520:	push	{r4, r5, lr}
   18524:	sub	sp, sp, #12
   18528:	ldr	r5, [sp, #24]
   1852c:	ldr	ip, [r5]
   18530:	cmp	ip, #0
   18534:	beq	18550 <close_stdout@@Base+0x5d0c>
   18538:	mov	lr, r5
   1853c:	mov	ip, #0
   18540:	ldr	r4, [lr, #4]!
   18544:	add	ip, ip, #1
   18548:	cmp	r4, #0
   1854c:	bne	18540 <close_stdout@@Base+0x5cfc>
   18550:	stm	sp, {r5, ip}
   18554:	bl	1814c <close_stdout@@Base+0x5908>
   18558:	add	sp, sp, #12
   1855c:	pop	{r4, r5, pc}
   18560:	push	{r4, r5, r6, r7, lr}
   18564:	sub	sp, sp, #60	; 0x3c
   18568:	ldr	r4, [pc, #100]	; 185d4 <close_stdout@@Base+0x5d90>
   1856c:	mov	ip, #0
   18570:	ldr	r5, [pc, #96]	; 185d8 <close_stdout@@Base+0x5d94>
   18574:	mov	lr, ip
   18578:	add	r4, pc, r4
   1857c:	ldr	r6, [sp, #80]	; 0x50
   18580:	ldr	r7, [r4, r5]
   18584:	add	r5, sp, #12
   18588:	ldr	r4, [r7]
   1858c:	str	r4, [sp, #52]	; 0x34
   18590:	ldr	r4, [r6, ip]
   18594:	cmp	r4, #0
   18598:	str	r4, [r5, ip]
   1859c:	beq	185b0 <close_stdout@@Base+0x5d6c>
   185a0:	add	lr, lr, #1
   185a4:	add	ip, ip, #4
   185a8:	cmp	lr, #10
   185ac:	bne	18590 <close_stdout@@Base+0x5d4c>
   185b0:	stm	sp, {r5, lr}
   185b4:	bl	1814c <close_stdout@@Base+0x5908>
   185b8:	ldr	r2, [sp, #52]	; 0x34
   185bc:	ldr	r3, [r7]
   185c0:	cmp	r2, r3
   185c4:	bne	185d0 <close_stdout@@Base+0x5d8c>
   185c8:	add	sp, sp, #60	; 0x3c
   185cc:	pop	{r4, r5, r6, r7, pc}
   185d0:	bl	11318 <__stack_chk_fail@plt>
   185d4:	andeq	r4, r1, r0, lsl #21
   185d8:	andeq	r0, r0, r0, lsr r1
   185dc:	push	{r3}		; (str r3, [sp, #-4]!)
   185e0:	push	{r4, lr}
   185e4:	sub	sp, sp, #20
   185e8:	ldr	lr, [pc, #72]	; 18638 <close_stdout@@Base+0x5df4>
   185ec:	add	ip, sp, #32
   185f0:	ldr	r4, [pc, #68]	; 1863c <close_stdout@@Base+0x5df8>
   185f4:	add	lr, pc, lr
   185f8:	ldr	r3, [sp, #28]
   185fc:	ldr	r4, [lr, r4]
   18600:	str	ip, [sp]
   18604:	str	ip, [sp, #8]
   18608:	ldr	ip, [r4]
   1860c:	str	ip, [sp, #12]
   18610:	bl	18560 <close_stdout@@Base+0x5d1c>
   18614:	ldr	r2, [sp, #12]
   18618:	ldr	r3, [r4]
   1861c:	cmp	r2, r3
   18620:	bne	18634 <close_stdout@@Base+0x5df0>
   18624:	add	sp, sp, #20
   18628:	pop	{r4, lr}
   1862c:	add	sp, sp, #4
   18630:	bx	lr
   18634:	bl	11318 <__stack_chk_fail@plt>
   18638:	andeq	r4, r1, r4, lsl #20
   1863c:	andeq	r0, r0, r0, lsr r1
   18640:	ldr	r1, [pc, #132]	; 186cc <close_stdout@@Base+0x5e88>
   18644:	mov	r2, #5
   18648:	push	{r4, lr}
   1864c:	add	r1, pc, r1
   18650:	mov	r0, #0
   18654:	ldr	r4, [pc, #116]	; 186d0 <close_stdout@@Base+0x5e8c>
   18658:	bl	1130c <dcgettext@plt>
   1865c:	ldr	r2, [pc, #112]	; 186d4 <close_stdout@@Base+0x5e90>
   18660:	add	r4, pc, r4
   18664:	add	r2, pc, r2
   18668:	mov	r1, r0
   1866c:	mov	r0, #1
   18670:	bl	114d4 <__printf_chk@plt>
   18674:	ldr	r1, [pc, #92]	; 186d8 <close_stdout@@Base+0x5e94>
   18678:	mov	r2, #5
   1867c:	mov	r0, #0
   18680:	add	r1, pc, r1
   18684:	bl	1130c <dcgettext@plt>
   18688:	ldr	r2, [pc, #76]	; 186dc <close_stdout@@Base+0x5e98>
   1868c:	ldr	r3, [pc, #76]	; 186e0 <close_stdout@@Base+0x5e9c>
   18690:	add	r2, pc, r2
   18694:	add	r3, pc, r3
   18698:	mov	r1, r0
   1869c:	mov	r0, #1
   186a0:	bl	114d4 <__printf_chk@plt>
   186a4:	ldr	r1, [pc, #56]	; 186e4 <close_stdout@@Base+0x5ea0>
   186a8:	mov	r0, #0
   186ac:	mov	r2, #5
   186b0:	add	r1, pc, r1
   186b4:	bl	1130c <dcgettext@plt>
   186b8:	ldr	r3, [pc, #40]	; 186e8 <close_stdout@@Base+0x5ea4>
   186bc:	ldr	r3, [r4, r3]
   186c0:	pop	{r4, lr}
   186c4:	ldr	r1, [r3]
   186c8:	b	11270 <fputs_unlocked@plt>
   186cc:	andeq	r3, r0, r8, lsr #12
   186d0:	muleq	r1, r8, r9
   186d4:	andeq	r3, r0, r8, lsr #12
   186d8:	andeq	r3, r0, r4, lsr #12
   186dc:	andeq	r2, r0, ip, asr #15
   186e0:	ldrdeq	r2, [r0], -r8
   186e4:	andeq	r3, r0, r8, lsl #12
   186e8:	andeq	r0, r0, r4, asr r1
   186ec:	push	{r4, lr}
   186f0:	mov	r4, r0
   186f4:	bl	113cc <malloc@plt>
   186f8:	rsbs	r3, r0, #1
   186fc:	movcc	r3, #0
   18700:	cmp	r4, #0
   18704:	moveq	r3, #0
   18708:	cmp	r3, #0
   1870c:	popeq	{r4, pc}
   18710:	bl	18900 <close_stdout@@Base+0x60bc>
   18714:	push	{r3, r4, r5, lr}
   18718:	mov	r4, r0
   1871c:	mvn	r0, #0
   18720:	mov	r5, r1
   18724:	bl	18fa0 <close_stdout@@Base+0x675c>
   18728:	cmp	r0, r4
   1872c:	bcc	1873c <close_stdout@@Base+0x5ef8>
   18730:	mul	r0, r4, r5
   18734:	pop	{r3, r4, r5, lr}
   18738:	b	186ec <close_stdout@@Base+0x5ea8>
   1873c:	bl	18900 <close_stdout@@Base+0x60bc>
   18740:	b	186ec <close_stdout@@Base+0x5ea8>
   18744:	rsbs	r3, r1, #1
   18748:	push	{r4, lr}
   1874c:	movcc	r3, #0
   18750:	cmp	r0, #0
   18754:	mov	r4, r1
   18758:	moveq	r3, #0
   1875c:	cmp	r3, #0
   18760:	bne	18784 <close_stdout@@Base+0x5f40>
   18764:	bl	11324 <realloc@plt>
   18768:	rsbs	r3, r0, #1
   1876c:	movcc	r3, #0
   18770:	cmp	r4, #0
   18774:	moveq	r3, #0
   18778:	cmp	r3, #0
   1877c:	popeq	{r4, pc}
   18780:	bl	18900 <close_stdout@@Base+0x60bc>
   18784:	bl	112b8 <free@plt>
   18788:	mov	r0, #0
   1878c:	pop	{r4, pc}
   18790:	push	{r4, r5, r6, lr}
   18794:	mov	r5, r1
   18798:	mov	r6, r0
   1879c:	mov	r1, r2
   187a0:	mvn	r0, #0
   187a4:	mov	r4, r2
   187a8:	bl	18fa0 <close_stdout@@Base+0x675c>
   187ac:	cmp	r0, r5
   187b0:	bcc	187c4 <close_stdout@@Base+0x5f80>
   187b4:	mov	r0, r6
   187b8:	mul	r1, r5, r4
   187bc:	pop	{r4, r5, r6, lr}
   187c0:	b	18744 <close_stdout@@Base+0x5f00>
   187c4:	bl	18900 <close_stdout@@Base+0x60bc>
   187c8:	push	{r3, r4, r5, r6, r7, lr}
   187cc:	subs	r7, r0, #0
   187d0:	mov	r5, r1
   187d4:	mov	r6, r2
   187d8:	ldr	r4, [r1]
   187dc:	beq	18814 <close_stdout@@Base+0x5fd0>
   187e0:	movw	r0, #43690	; 0xaaaa
   187e4:	mov	r1, r2
   187e8:	bfi	r0, r0, #16, #16
   187ec:	bl	18fa0 <close_stdout@@Base+0x675c>
   187f0:	cmp	r4, r0
   187f4:	addcc	r3, r4, #1
   187f8:	addcc	r4, r4, r3, lsr #1
   187fc:	bcs	18838 <close_stdout@@Base+0x5ff4>
   18800:	str	r4, [r5]
   18804:	mov	r0, r7
   18808:	mul	r1, r6, r4
   1880c:	pop	{r3, r4, r5, r6, r7, lr}
   18810:	b	18744 <close_stdout@@Base+0x5f00>
   18814:	cmp	r4, #0
   18818:	bne	18800 <close_stdout@@Base+0x5fbc>
   1881c:	mov	r0, #64	; 0x40
   18820:	mov	r1, r2
   18824:	bl	18fa0 <close_stdout@@Base+0x675c>
   18828:	cmp	r0, #0
   1882c:	movne	r4, r0
   18830:	addeq	r4, r0, #1
   18834:	b	18800 <close_stdout@@Base+0x5fbc>
   18838:	bl	18900 <close_stdout@@Base+0x60bc>
   1883c:	cmp	r0, #0
   18840:	push	{r3, lr}
   18844:	ldr	r3, [r1]
   18848:	beq	18874 <close_stdout@@Base+0x6030>
   1884c:	movw	r2, #43689	; 0xaaa9
   18850:	movt	r2, #43690	; 0xaaaa
   18854:	cmp	r3, r2
   18858:	addls	r2, r3, #1
   1885c:	addls	r3, r3, r2, lsr #1
   18860:	bhi	1888c <close_stdout@@Base+0x6048>
   18864:	str	r3, [r1]
   18868:	mov	r1, r3
   1886c:	pop	{r3, lr}
   18870:	b	18744 <close_stdout@@Base+0x5f00>
   18874:	cmp	r3, #0
   18878:	moveq	r3, #64	; 0x40
   1887c:	str	r3, [r1]
   18880:	mov	r1, r3
   18884:	pop	{r3, lr}
   18888:	b	18744 <close_stdout@@Base+0x5f00>
   1888c:	bl	18900 <close_stdout@@Base+0x60bc>
   18890:	push	{r4, lr}
   18894:	mov	r4, r0
   18898:	bl	186ec <close_stdout@@Base+0x5ea8>
   1889c:	mov	r2, r4
   188a0:	mov	r1, #0
   188a4:	pop	{r4, lr}
   188a8:	b	114b0 <memset@plt>
   188ac:	push	{r3, lr}
   188b0:	bl	11264 <calloc@plt>
   188b4:	cmp	r0, #0
   188b8:	popne	{r3, pc}
   188bc:	bl	18900 <close_stdout@@Base+0x60bc>
   188c0:	push	{r3, r4, r5, lr}
   188c4:	mov	r4, r1
   188c8:	mov	r5, r0
   188cc:	mov	r0, r1
   188d0:	bl	186ec <close_stdout@@Base+0x5ea8>
   188d4:	mov	r1, r5
   188d8:	mov	r2, r4
   188dc:	pop	{r3, r4, r5, lr}
   188e0:	b	112dc <memcpy@plt>
   188e4:	push	{r4, lr}
   188e8:	mov	r4, r0
   188ec:	bl	1145c <strlen@plt>
   188f0:	add	r1, r0, #1
   188f4:	mov	r0, r4
   188f8:	pop	{r4, lr}
   188fc:	b	188c0 <close_stdout@@Base+0x607c>
   18900:	ldr	r3, [pc, #64]	; 18948 <close_stdout@@Base+0x6104>
   18904:	mov	r2, #5
   18908:	ldr	ip, [pc, #60]	; 1894c <close_stdout@@Base+0x6108>
   1890c:	mov	r0, #0
   18910:	add	r3, pc, r3
   18914:	ldr	r1, [pc, #52]	; 18950 <close_stdout@@Base+0x610c>
   18918:	push	{r4, lr}
   1891c:	add	r1, pc, r1
   18920:	ldr	r3, [r3, ip]
   18924:	ldr	r4, [r3]
   18928:	bl	1130c <dcgettext@plt>
   1892c:	ldr	r2, [pc, #32]	; 18954 <close_stdout@@Base+0x6110>
   18930:	mov	r1, #0
   18934:	add	r2, pc, r2
   18938:	mov	r3, r0
   1893c:	mov	r0, r4
   18940:	bl	113a8 <error@plt>
   18944:	bl	115a0 <abort@plt>
   18948:	andeq	r4, r1, r8, ror #13
   1894c:	andeq	r0, r0, r8, asr r1
   18950:	andeq	r3, r0, ip, lsl #8
   18954:	ldrdeq	r2, [r0], -r8
   18958:	push	{r4, r5, r6, lr}
   1895c:	sub	sp, sp, #8
   18960:	mov	r4, r0
   18964:	bl	114e0 <fileno@plt>
   18968:	cmp	r0, #0
   1896c:	mov	r0, r4
   18970:	blt	189ec <close_stdout@@Base+0x61a8>
   18974:	bl	113fc <__freading@plt>
   18978:	cmp	r0, #0
   1897c:	bne	189b8 <close_stdout@@Base+0x6174>
   18980:	mov	r0, r4
   18984:	bl	189f8 <close_stdout@@Base+0x61b4>
   18988:	cmp	r0, #0
   1898c:	beq	189e8 <close_stdout@@Base+0x61a4>
   18990:	bl	1148c <__errno_location@plt>
   18994:	ldr	r6, [r0]
   18998:	mov	r5, r0
   1899c:	mov	r0, r4
   189a0:	bl	114f8 <fclose@plt>
   189a4:	cmp	r6, #0
   189a8:	mvnne	r0, #0
   189ac:	strne	r6, [r5]
   189b0:	add	sp, sp, #8
   189b4:	pop	{r4, r5, r6, pc}
   189b8:	mov	r0, r4
   189bc:	bl	114e0 <fileno@plt>
   189c0:	mov	r1, #1
   189c4:	mov	r2, #0
   189c8:	mov	r3, #0
   189cc:	str	r1, [sp]
   189d0:	bl	11354 <lseek64@plt>
   189d4:	mvn	r2, #0
   189d8:	mvn	r3, #0
   189dc:	cmp	r1, r3
   189e0:	cmpeq	r0, r2
   189e4:	bne	18980 <close_stdout@@Base+0x613c>
   189e8:	mov	r0, r4
   189ec:	add	sp, sp, #8
   189f0:	pop	{r4, r5, r6, lr}
   189f4:	b	114f8 <fclose@plt>
   189f8:	push	{r4, lr}
   189fc:	subs	r4, r0, #0
   18a00:	sub	sp, sp, #8
   18a04:	beq	18a14 <close_stdout@@Base+0x61d0>
   18a08:	bl	113fc <__freading@plt>
   18a0c:	cmp	r0, #0
   18a10:	bne	18a24 <close_stdout@@Base+0x61e0>
   18a14:	mov	r0, r4
   18a18:	add	sp, sp, #8
   18a1c:	pop	{r4, lr}
   18a20:	b	112ac <fflush@plt>
   18a24:	ldr	r3, [r4]
   18a28:	tst	r3, #256	; 0x100
   18a2c:	beq	18a14 <close_stdout@@Base+0x61d0>
   18a30:	mov	r3, #1
   18a34:	mov	r0, r4
   18a38:	str	r3, [sp]
   18a3c:	mov	r2, #0
   18a40:	mov	r3, #0
   18a44:	bl	18a58 <close_stdout@@Base+0x6214>
   18a48:	mov	r0, r4
   18a4c:	add	sp, sp, #8
   18a50:	pop	{r4, lr}
   18a54:	b	112ac <fflush@plt>
   18a58:	push	{r4, r5, r6, r7, lr}
   18a5c:	sub	sp, sp, #20
   18a60:	ldmib	r0, {r1, ip}
   18a64:	mov	r6, r0
   18a68:	ldr	r4, [sp, #40]	; 0x28
   18a6c:	cmp	ip, r1
   18a70:	beq	18a88 <close_stdout@@Base+0x6244>
   18a74:	str	r4, [sp, #40]	; 0x28
   18a78:	mov	r0, r6
   18a7c:	add	sp, sp, #20
   18a80:	pop	{r4, r5, r6, r7, lr}
   18a84:	b	11504 <fseeko64@plt>
   18a88:	ldr	ip, [r0, #20]
   18a8c:	ldr	r1, [r0, #16]
   18a90:	cmp	ip, r1
   18a94:	bne	18a74 <close_stdout@@Base+0x6230>
   18a98:	ldr	r7, [r0, #36]	; 0x24
   18a9c:	cmp	r7, #0
   18aa0:	bne	18a74 <close_stdout@@Base+0x6230>
   18aa4:	str	r2, [sp, #12]
   18aa8:	mvn	r5, #0
   18aac:	str	r3, [sp, #8]
   18ab0:	bl	114e0 <fileno@plt>
   18ab4:	str	r4, [sp]
   18ab8:	mvn	r4, #0
   18abc:	ldr	r2, [sp, #12]
   18ac0:	ldr	r3, [sp, #8]
   18ac4:	bl	11354 <lseek64@plt>
   18ac8:	mov	r2, r0
   18acc:	mov	r3, r1
   18ad0:	cmp	r3, r5
   18ad4:	cmpeq	r2, r4
   18ad8:	beq	18af8 <close_stdout@@Base+0x62b4>
   18adc:	ldr	r1, [r6]
   18ae0:	mov	r0, r7
   18ae4:	strd	r2, [r6, #80]	; 0x50
   18ae8:	bic	r3, r1, #16
   18aec:	str	r3, [r6]
   18af0:	add	sp, sp, #20
   18af4:	pop	{r4, r5, r6, r7, pc}
   18af8:	mvn	r0, #0
   18afc:	b	18af0 <close_stdout@@Base+0x62ac>
   18b00:	push	{r4, r5, r6, lr}
   18b04:	mov	r4, r0
   18b08:	bl	11390 <__fpending@plt>
   18b0c:	mov	r6, r0
   18b10:	mov	r0, r4
   18b14:	ldr	r4, [r4]
   18b18:	bl	18958 <close_stdout@@Base+0x6114>
   18b1c:	and	r4, r4, #32
   18b20:	adds	r5, r0, #0
   18b24:	movne	r5, #1
   18b28:	cmp	r4, #0
   18b2c:	bne	18b4c <close_stdout@@Base+0x6308>
   18b30:	cmp	r5, #0
   18b34:	beq	18b44 <close_stdout@@Base+0x6300>
   18b38:	cmp	r6, #0
   18b3c:	beq	18b68 <close_stdout@@Base+0x6324>
   18b40:	mvn	r4, #0
   18b44:	mov	r0, r4
   18b48:	pop	{r4, r5, r6, pc}
   18b4c:	cmp	r5, #0
   18b50:	bne	18b40 <close_stdout@@Base+0x62fc>
   18b54:	bl	1148c <__errno_location@plt>
   18b58:	mvn	r4, #0
   18b5c:	str	r5, [r0]
   18b60:	mov	r0, r4
   18b64:	pop	{r4, r5, r6, pc}
   18b68:	bl	1148c <__errno_location@plt>
   18b6c:	ldr	r4, [r0]
   18b70:	subs	r4, r4, #9
   18b74:	mvnne	r4, #0
   18b78:	mov	r0, r4
   18b7c:	pop	{r4, r5, r6, pc}
   18b80:	ldr	r3, [pc, #984]	; 18f60 <close_stdout@@Base+0x671c>
   18b84:	mov	r0, #14
   18b88:	ldr	r2, [pc, #980]	; 18f64 <close_stdout@@Base+0x6720>
   18b8c:	add	r3, pc, r3
   18b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b94:	sub	sp, sp, #132	; 0x84
   18b98:	ldr	r6, [r3, r2]
   18b9c:	ldr	r3, [r6]
   18ba0:	str	r3, [sp, #124]	; 0x7c
   18ba4:	bl	1154c <nl_langinfo@plt>
   18ba8:	subs	r5, r0, #0
   18bac:	beq	18c60 <close_stdout@@Base+0x641c>
   18bb0:	ldr	r3, [pc, #944]	; 18f68 <close_stdout@@Base+0x6724>
   18bb4:	ldr	r4, [pc, r3]
   18bb8:	cmp	r4, #0
   18bbc:	beq	18c6c <close_stdout@@Base+0x6428>
   18bc0:	ldrb	r7, [r4]
   18bc4:	cmp	r7, #0
   18bc8:	bne	18bfc <close_stdout@@Base+0x63b8>
   18bcc:	b	18c34 <close_stdout@@Base+0x63f0>
   18bd0:	mov	r0, r4
   18bd4:	bl	1145c <strlen@plt>
   18bd8:	add	r0, r0, #1
   18bdc:	add	r7, r4, r0
   18be0:	mov	r0, r7
   18be4:	bl	1145c <strlen@plt>
   18be8:	add	r0, r0, #1
   18bec:	add	r4, r7, r0
   18bf0:	ldrb	r7, [r7, r0]
   18bf4:	cmp	r7, #0
   18bf8:	beq	18c34 <close_stdout@@Base+0x63f0>
   18bfc:	mov	r0, r5
   18c00:	mov	r1, r4
   18c04:	bl	11294 <strcmp@plt>
   18c08:	cmp	r0, #0
   18c0c:	beq	18c24 <close_stdout@@Base+0x63e0>
   18c10:	cmp	r7, #42	; 0x2a
   18c14:	bne	18bd0 <close_stdout@@Base+0x638c>
   18c18:	ldrb	r3, [r4, #1]
   18c1c:	cmp	r3, #0
   18c20:	bne	18bd0 <close_stdout@@Base+0x638c>
   18c24:	mov	r0, r4
   18c28:	bl	1145c <strlen@plt>
   18c2c:	add	r0, r0, #1
   18c30:	add	r5, r4, r0
   18c34:	ldrb	r3, [r5]
   18c38:	cmp	r3, #0
   18c3c:	ldreq	r5, [pc, #808]	; 18f6c <close_stdout@@Base+0x6728>
   18c40:	addeq	r5, pc, r5
   18c44:	ldr	r2, [sp, #124]	; 0x7c
   18c48:	mov	r0, r5
   18c4c:	ldr	r3, [r6]
   18c50:	cmp	r2, r3
   18c54:	bne	18f34 <close_stdout@@Base+0x66f0>
   18c58:	add	sp, sp, #132	; 0x84
   18c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c60:	ldr	r5, [pc, #776]	; 18f70 <close_stdout@@Base+0x672c>
   18c64:	add	r5, pc, r5
   18c68:	b	18bb0 <close_stdout@@Base+0x636c>
   18c6c:	ldr	r0, [pc, #768]	; 18f74 <close_stdout@@Base+0x6730>
   18c70:	add	r0, pc, r0
   18c74:	bl	113c0 <getenv@plt>
   18c78:	subs	r8, r0, #0
   18c7c:	beq	18f0c <close_stdout@@Base+0x66c8>
   18c80:	ldrb	r3, [r8]
   18c84:	cmp	r3, #0
   18c88:	beq	18ea0 <close_stdout@@Base+0x665c>
   18c8c:	bl	1145c <strlen@plt>
   18c90:	subs	sl, r0, #0
   18c94:	subne	r3, sl, #1
   18c98:	bne	18eb0 <close_stdout@@Base+0x666c>
   18c9c:	mov	r9, #0
   18ca0:	mov	fp, r9
   18ca4:	add	r9, sl, r9
   18ca8:	add	r0, r9, #14
   18cac:	bl	113cc <malloc@plt>
   18cb0:	subs	r7, r0, #0
   18cb4:	beq	18f00 <close_stdout@@Base+0x66bc>
   18cb8:	mov	r1, r8
   18cbc:	mov	r2, sl
   18cc0:	bl	112dc <memcpy@plt>
   18cc4:	cmp	fp, #0
   18cc8:	add	ip, r7, r9
   18ccc:	movne	r3, #47	; 0x2f
   18cd0:	strbne	r3, [r7, sl]
   18cd4:	ldr	r3, [pc, #668]	; 18f78 <close_stdout@@Base+0x6734>
   18cd8:	add	r3, pc, r3
   18cdc:	ldm	r3!, {r0, r1, r2}
   18ce0:	ldrh	r3, [r3]
   18ce4:	str	r0, [r7, r9]
   18ce8:	mov	r0, r7
   18cec:	str	r1, [ip, #4]
   18cf0:	mov	r1, #32768	; 0x8000
   18cf4:	strh	r3, [ip, #12]
   18cf8:	str	r2, [ip, #8]
   18cfc:	bl	113b4 <open64@plt>
   18d00:	subs	r8, r0, #0
   18d04:	blt	18ec8 <close_stdout@@Base+0x6684>
   18d08:	ldr	r1, [pc, #620]	; 18f7c <close_stdout@@Base+0x6738>
   18d0c:	add	r1, pc, r1
   18d10:	bl	11258 <fdopen@plt>
   18d14:	subs	fp, r0, #0
   18d18:	beq	18f20 <close_stdout@@Base+0x66dc>
   18d1c:	ldr	r0, [pc, #604]	; 18f80 <close_stdout@@Base+0x673c>
   18d20:	add	sl, sp, #20
   18d24:	add	r9, sp, #72	; 0x48
   18d28:	mov	r8, #0
   18d2c:	add	r0, pc, r0
   18d30:	str	r0, [sp, #12]
   18d34:	ldr	r3, [fp, #4]
   18d38:	ldr	r2, [fp, #8]
   18d3c:	cmp	r3, r2
   18d40:	bcs	18e2c <close_stdout@@Base+0x65e8>
   18d44:	add	r2, r3, #1
   18d48:	str	r2, [fp, #4]
   18d4c:	ldrb	r0, [r3]
   18d50:	cmp	r0, #32
   18d54:	beq	18d34 <close_stdout@@Base+0x64f0>
   18d58:	sub	r3, r0, #9
   18d5c:	cmp	r3, #1
   18d60:	bls	18d34 <close_stdout@@Base+0x64f0>
   18d64:	cmp	r0, #35	; 0x23
   18d68:	beq	18e40 <close_stdout@@Base+0x65fc>
   18d6c:	mov	r1, fp
   18d70:	bl	11480 <ungetc@plt>
   18d74:	mov	r0, fp
   18d78:	ldr	r1, [sp, #12]
   18d7c:	mov	r2, sl
   18d80:	mov	r3, r9
   18d84:	bl	114c8 <fscanf@plt>
   18d88:	cmp	r0, #1
   18d8c:	ble	18e70 <close_stdout@@Base+0x662c>
   18d90:	mov	r0, sl
   18d94:	bl	1145c <strlen@plt>
   18d98:	str	r0, [sp, #8]
   18d9c:	mov	r0, r9
   18da0:	bl	1145c <strlen@plt>
   18da4:	cmp	r8, #0
   18da8:	mov	r2, r0
   18dac:	bne	18ed4 <close_stdout@@Base+0x6690>
   18db0:	ldr	r3, [sp, #8]
   18db4:	str	r2, [sp]
   18db8:	add	r8, r0, r3
   18dbc:	add	r0, r8, #3
   18dc0:	add	r8, r8, #2
   18dc4:	bl	113cc <malloc@plt>
   18dc8:	ldr	r2, [sp]
   18dcc:	mov	r3, r0
   18dd0:	cmp	r3, #0
   18dd4:	beq	18f38 <close_stdout@@Base+0x66f4>
   18dd8:	ldr	r0, [sp, #8]
   18ddc:	movw	r1, #65534	; 0xfffe
   18de0:	movt	r1, #65535	; 0xffff
   18de4:	rsb	r2, r2, r8
   18de8:	rsb	r1, r0, r1
   18dec:	stm	sp, {r2, r3}
   18df0:	add	r0, r1, r2
   18df4:	mov	r1, sl
   18df8:	add	r0, r3, r0
   18dfc:	mov	r4, r3
   18e00:	bl	11378 <strcpy@plt>
   18e04:	ldr	r2, [sp]
   18e08:	ldr	r3, [sp, #4]
   18e0c:	mov	r1, r9
   18e10:	sub	r0, r2, #1
   18e14:	add	r0, r3, r0
   18e18:	bl	11378 <strcpy@plt>
   18e1c:	ldr	r3, [fp, #4]
   18e20:	ldr	r2, [fp, #8]
   18e24:	cmp	r3, r2
   18e28:	bcc	18d44 <close_stdout@@Base+0x6500>
   18e2c:	mov	r0, fp
   18e30:	bl	11510 <__uflow@plt>
   18e34:	cmn	r0, #1
   18e38:	beq	18e70 <close_stdout@@Base+0x662c>
   18e3c:	b	18d50 <close_stdout@@Base+0x650c>
   18e40:	ldr	r3, [fp, #4]
   18e44:	ldr	r2, [fp, #8]
   18e48:	cmp	r3, r2
   18e4c:	bcs	18f54 <close_stdout@@Base+0x6710>
   18e50:	add	r2, r3, #1
   18e54:	str	r2, [fp, #4]
   18e58:	ldrb	r0, [r3]
   18e5c:	cmp	r0, #10
   18e60:	cmnne	r0, #1
   18e64:	bne	18e40 <close_stdout@@Base+0x65fc>
   18e68:	cmn	r0, #1
   18e6c:	bne	18d34 <close_stdout@@Base+0x64f0>
   18e70:	mov	r0, fp
   18e74:	bl	18958 <close_stdout@@Base+0x6114>
   18e78:	cmp	r8, #0
   18e7c:	beq	18ec8 <close_stdout@@Base+0x6684>
   18e80:	mov	r3, #0
   18e84:	strb	r3, [r4, r8]
   18e88:	mov	r0, r7
   18e8c:	bl	112b8 <free@plt>
   18e90:	ldr	r3, [pc, #236]	; 18f84 <close_stdout@@Base+0x6740>
   18e94:	add	r3, pc, r3
   18e98:	str	r4, [r3]
   18e9c:	b	18bc0 <close_stdout@@Base+0x637c>
   18ea0:	ldr	r8, [pc, #224]	; 18f88 <close_stdout@@Base+0x6744>
   18ea4:	mov	r3, #7
   18ea8:	mov	sl, #8
   18eac:	add	r8, pc, r8
   18eb0:	ldrb	r3, [r8, r3]
   18eb4:	cmp	r3, #47	; 0x2f
   18eb8:	movne	r9, #1
   18ebc:	movne	fp, r9
   18ec0:	bne	18ca4 <close_stdout@@Base+0x6460>
   18ec4:	b	18c9c <close_stdout@@Base+0x6458>
   18ec8:	ldr	r4, [pc, #188]	; 18f8c <close_stdout@@Base+0x6748>
   18ecc:	add	r4, pc, r4
   18ed0:	b	18e88 <close_stdout@@Base+0x6644>
   18ed4:	ldr	r0, [sp, #8]
   18ed8:	str	r2, [sp]
   18edc:	add	r3, r0, r2
   18ee0:	mov	r0, r4
   18ee4:	add	r8, r3, r8
   18ee8:	add	r1, r8, #3
   18eec:	add	r8, r8, #2
   18ef0:	bl	11324 <realloc@plt>
   18ef4:	ldr	r2, [sp]
   18ef8:	mov	r3, r0
   18efc:	b	18dd0 <close_stdout@@Base+0x658c>
   18f00:	ldr	r4, [pc, #136]	; 18f90 <close_stdout@@Base+0x674c>
   18f04:	add	r4, pc, r4
   18f08:	b	18e90 <close_stdout@@Base+0x664c>
   18f0c:	ldr	r8, [pc, #128]	; 18f94 <close_stdout@@Base+0x6750>
   18f10:	mov	r3, #7
   18f14:	mov	sl, #8
   18f18:	add	r8, pc, r8
   18f1c:	b	18eb0 <close_stdout@@Base+0x666c>
   18f20:	ldr	r4, [pc, #112]	; 18f98 <close_stdout@@Base+0x6754>
   18f24:	mov	r0, r8
   18f28:	add	r4, pc, r4
   18f2c:	bl	115ac <close@plt>
   18f30:	b	18e88 <close_stdout@@Base+0x6644>
   18f34:	bl	11318 <__stack_chk_fail@plt>
   18f38:	mov	r0, r4
   18f3c:	ldr	r4, [pc, #88]	; 18f9c <close_stdout@@Base+0x6758>
   18f40:	bl	112b8 <free@plt>
   18f44:	mov	r0, fp
   18f48:	add	r4, pc, r4
   18f4c:	bl	18958 <close_stdout@@Base+0x6114>
   18f50:	b	18e88 <close_stdout@@Base+0x6644>
   18f54:	mov	r0, fp
   18f58:	bl	11510 <__uflow@plt>
   18f5c:	b	18e5c <close_stdout@@Base+0x6618>
   18f60:	andeq	r4, r1, ip, ror #8
   18f64:	andeq	r0, r0, r0, lsr r1
   18f68:	andeq	r4, r1, r4, asr #14
   18f6c:	andeq	r3, r0, r8, lsl #2
   18f70:			; <UNDEFINED> instruction: 0x000022bc
   18f74:	andeq	r3, r0, r0, ror #1
   18f78:	andeq	r3, r0, r8, lsl #1
   18f7c:	ldrdeq	r2, [r0], -ip
   18f80:	andeq	r3, r0, r4, asr #32
   18f84:	andeq	r4, r1, r4, ror #8
   18f88:	muleq	r0, r0, lr
   18f8c:	andeq	r2, r0, r4, asr r0
   18f90:	andeq	r2, r0, ip, lsl r0
   18f94:	andeq	r2, r0, r4, lsr #28
   18f98:	strdeq	r1, [r0], -r8
   18f9c:	ldrdeq	r1, [r0], -r8
   18fa0:	subs	r2, r1, #1
   18fa4:	bxeq	lr
   18fa8:	bcc	19180 <close_stdout@@Base+0x693c>
   18fac:	cmp	r0, r1
   18fb0:	bls	19164 <close_stdout@@Base+0x6920>
   18fb4:	tst	r1, r2
   18fb8:	beq	19170 <close_stdout@@Base+0x692c>
   18fbc:	clz	r3, r0
   18fc0:	clz	r2, r1
   18fc4:	sub	r3, r2, r3
   18fc8:	rsbs	r3, r3, #31
   18fcc:	addne	r3, r3, r3, lsl #1
   18fd0:	mov	r2, #0
   18fd4:	addne	pc, pc, r3, lsl #2
   18fd8:	nop	{0}
   18fdc:	cmp	r0, r1, lsl #31
   18fe0:	adc	r2, r2, r2
   18fe4:	subcs	r0, r0, r1, lsl #31
   18fe8:	cmp	r0, r1, lsl #30
   18fec:	adc	r2, r2, r2
   18ff0:	subcs	r0, r0, r1, lsl #30
   18ff4:	cmp	r0, r1, lsl #29
   18ff8:	adc	r2, r2, r2
   18ffc:	subcs	r0, r0, r1, lsl #29
   19000:	cmp	r0, r1, lsl #28
   19004:	adc	r2, r2, r2
   19008:	subcs	r0, r0, r1, lsl #28
   1900c:	cmp	r0, r1, lsl #27
   19010:	adc	r2, r2, r2
   19014:	subcs	r0, r0, r1, lsl #27
   19018:	cmp	r0, r1, lsl #26
   1901c:	adc	r2, r2, r2
   19020:	subcs	r0, r0, r1, lsl #26
   19024:	cmp	r0, r1, lsl #25
   19028:	adc	r2, r2, r2
   1902c:	subcs	r0, r0, r1, lsl #25
   19030:	cmp	r0, r1, lsl #24
   19034:	adc	r2, r2, r2
   19038:	subcs	r0, r0, r1, lsl #24
   1903c:	cmp	r0, r1, lsl #23
   19040:	adc	r2, r2, r2
   19044:	subcs	r0, r0, r1, lsl #23
   19048:	cmp	r0, r1, lsl #22
   1904c:	adc	r2, r2, r2
   19050:	subcs	r0, r0, r1, lsl #22
   19054:	cmp	r0, r1, lsl #21
   19058:	adc	r2, r2, r2
   1905c:	subcs	r0, r0, r1, lsl #21
   19060:	cmp	r0, r1, lsl #20
   19064:	adc	r2, r2, r2
   19068:	subcs	r0, r0, r1, lsl #20
   1906c:	cmp	r0, r1, lsl #19
   19070:	adc	r2, r2, r2
   19074:	subcs	r0, r0, r1, lsl #19
   19078:	cmp	r0, r1, lsl #18
   1907c:	adc	r2, r2, r2
   19080:	subcs	r0, r0, r1, lsl #18
   19084:	cmp	r0, r1, lsl #17
   19088:	adc	r2, r2, r2
   1908c:	subcs	r0, r0, r1, lsl #17
   19090:	cmp	r0, r1, lsl #16
   19094:	adc	r2, r2, r2
   19098:	subcs	r0, r0, r1, lsl #16
   1909c:	cmp	r0, r1, lsl #15
   190a0:	adc	r2, r2, r2
   190a4:	subcs	r0, r0, r1, lsl #15
   190a8:	cmp	r0, r1, lsl #14
   190ac:	adc	r2, r2, r2
   190b0:	subcs	r0, r0, r1, lsl #14
   190b4:	cmp	r0, r1, lsl #13
   190b8:	adc	r2, r2, r2
   190bc:	subcs	r0, r0, r1, lsl #13
   190c0:	cmp	r0, r1, lsl #12
   190c4:	adc	r2, r2, r2
   190c8:	subcs	r0, r0, r1, lsl #12
   190cc:	cmp	r0, r1, lsl #11
   190d0:	adc	r2, r2, r2
   190d4:	subcs	r0, r0, r1, lsl #11
   190d8:	cmp	r0, r1, lsl #10
   190dc:	adc	r2, r2, r2
   190e0:	subcs	r0, r0, r1, lsl #10
   190e4:	cmp	r0, r1, lsl #9
   190e8:	adc	r2, r2, r2
   190ec:	subcs	r0, r0, r1, lsl #9
   190f0:	cmp	r0, r1, lsl #8
   190f4:	adc	r2, r2, r2
   190f8:	subcs	r0, r0, r1, lsl #8
   190fc:	cmp	r0, r1, lsl #7
   19100:	adc	r2, r2, r2
   19104:	subcs	r0, r0, r1, lsl #7
   19108:	cmp	r0, r1, lsl #6
   1910c:	adc	r2, r2, r2
   19110:	subcs	r0, r0, r1, lsl #6
   19114:	cmp	r0, r1, lsl #5
   19118:	adc	r2, r2, r2
   1911c:	subcs	r0, r0, r1, lsl #5
   19120:	cmp	r0, r1, lsl #4
   19124:	adc	r2, r2, r2
   19128:	subcs	r0, r0, r1, lsl #4
   1912c:	cmp	r0, r1, lsl #3
   19130:	adc	r2, r2, r2
   19134:	subcs	r0, r0, r1, lsl #3
   19138:	cmp	r0, r1, lsl #2
   1913c:	adc	r2, r2, r2
   19140:	subcs	r0, r0, r1, lsl #2
   19144:	cmp	r0, r1, lsl #1
   19148:	adc	r2, r2, r2
   1914c:	subcs	r0, r0, r1, lsl #1
   19150:	cmp	r0, r1
   19154:	adc	r2, r2, r2
   19158:	subcs	r0, r0, r1
   1915c:	mov	r0, r2
   19160:	bx	lr
   19164:	moveq	r0, #1
   19168:	movne	r0, #0
   1916c:	bx	lr
   19170:	clz	r2, r1
   19174:	rsb	r2, r2, #31
   19178:	lsr	r0, r0, r2
   1917c:	bx	lr
   19180:	cmp	r0, #0
   19184:	mvnne	r0, #0
   19188:	b	191f4 <close_stdout@@Base+0x69b0>
   1918c:	cmp	r1, #0
   19190:	beq	19180 <close_stdout@@Base+0x693c>
   19194:	push	{r0, r1, lr}
   19198:	bl	18fa0 <close_stdout@@Base+0x675c>
   1919c:	pop	{r1, r2, lr}
   191a0:	mul	r3, r2, r0
   191a4:	sub	r1, r1, r3
   191a8:	bx	lr
   191ac:	cmp	r3, #0
   191b0:	cmpeq	r2, #0
   191b4:	bne	191d8 <close_stdout@@Base+0x6994>
   191b8:	cmp	r1, #0
   191bc:	movlt	r1, #-2147483648	; 0x80000000
   191c0:	movlt	r0, #0
   191c4:	blt	191d4 <close_stdout@@Base+0x6990>
   191c8:	cmpeq	r0, #0
   191cc:	mvnne	r1, #-2147483648	; 0x80000000
   191d0:	mvnne	r0, #0
   191d4:	b	191f4 <close_stdout@@Base+0x69b0>
   191d8:	sub	sp, sp, #8
   191dc:	push	{sp, lr}
   191e0:	bl	19204 <close_stdout@@Base+0x69c0>
   191e4:	ldr	lr, [sp, #4]
   191e8:	add	sp, sp, #8
   191ec:	pop	{r2, r3}
   191f0:	bx	lr
   191f4:	push	{r1, lr}
   191f8:	mov	r0, #8
   191fc:	bl	1127c <raise@plt>
   19200:	pop	{r1, pc}
   19204:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19208:	mov	r8, r2
   1920c:	mov	r6, r0
   19210:	mov	r7, r1
   19214:	mov	sl, r3
   19218:	ldr	r9, [sp, #32]
   1921c:	bl	1927c <close_stdout@@Base+0x6a38>
   19220:	umull	r4, r5, r8, r0
   19224:	mul	r8, r8, r1
   19228:	mla	r2, r0, sl, r8
   1922c:	add	r5, r2, r5
   19230:	subs	r4, r6, r4
   19234:	sbc	r5, r7, r5
   19238:	strd	r4, [r9]
   1923c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19240:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19244:	mov	r8, r2
   19248:	mov	r6, r0
   1924c:	mov	r7, r1
   19250:	mov	r5, r3
   19254:	ldr	r9, [sp, #32]
   19258:	bl	19708 <close_stdout@@Base+0x6ec4>
   1925c:	mul	r3, r0, r5
   19260:	umull	r4, r5, r0, r8
   19264:	mla	r8, r8, r1, r3
   19268:	add	r5, r8, r5
   1926c:	subs	r4, r6, r4
   19270:	sbc	r5, r7, r5
   19274:	strd	r4, [r9]
   19278:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1927c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19280:	rsbs	r4, r0, #0
   19284:	rsc	r5, r1, #0
   19288:	cmp	r1, #0
   1928c:	mvn	r6, #0
   19290:	sub	sp, sp, #12
   19294:	movge	r4, r0
   19298:	movge	r5, r1
   1929c:	movge	r6, #0
   192a0:	cmp	r3, #0
   192a4:	blt	194dc <close_stdout@@Base+0x6c98>
   192a8:	cmp	r3, #0
   192ac:	mov	sl, r4
   192b0:	mov	ip, r5
   192b4:	mov	r0, r2
   192b8:	mov	r1, r3
   192bc:	mov	r8, r2
   192c0:	mov	r7, r4
   192c4:	mov	r9, r5
   192c8:	bne	193c0 <close_stdout@@Base+0x6b7c>
   192cc:	cmp	r2, r5
   192d0:	bls	193fc <close_stdout@@Base+0x6bb8>
   192d4:	clz	r3, r2
   192d8:	cmp	r3, #0
   192dc:	rsbne	r2, r3, #32
   192e0:	lslne	r8, r0, r3
   192e4:	lsrne	r2, r4, r2
   192e8:	lslne	r7, r4, r3
   192ec:	orrne	r9, r2, r5, lsl r3
   192f0:	lsr	r4, r8, #16
   192f4:	uxth	sl, r8
   192f8:	mov	r1, r4
   192fc:	mov	r0, r9
   19300:	bl	18fa0 <close_stdout@@Base+0x675c>
   19304:	mov	r1, r4
   19308:	mov	fp, r0
   1930c:	mov	r0, r9
   19310:	bl	1918c <close_stdout@@Base+0x6948>
   19314:	mul	r0, sl, fp
   19318:	lsr	r2, r7, #16
   1931c:	orr	r1, r2, r1, lsl #16
   19320:	cmp	r0, r1
   19324:	bls	19348 <close_stdout@@Base+0x6b04>
   19328:	adds	r1, r1, r8
   1932c:	sub	r3, fp, #1
   19330:	bcs	19344 <close_stdout@@Base+0x6b00>
   19334:	cmp	r0, r1
   19338:	subhi	fp, fp, #2
   1933c:	addhi	r1, r1, r8
   19340:	bhi	19348 <close_stdout@@Base+0x6b04>
   19344:	mov	fp, r3
   19348:	rsb	r9, r0, r1
   1934c:	mov	r1, r4
   19350:	uxth	r7, r7
   19354:	mov	r0, r9
   19358:	bl	18fa0 <close_stdout@@Base+0x675c>
   1935c:	mov	r1, r4
   19360:	mov	r5, r0
   19364:	mov	r0, r9
   19368:	bl	1918c <close_stdout@@Base+0x6948>
   1936c:	mul	sl, sl, r5
   19370:	orr	r1, r7, r1, lsl #16
   19374:	cmp	sl, r1
   19378:	bls	19398 <close_stdout@@Base+0x6b54>
   1937c:	adds	r8, r1, r8
   19380:	sub	r3, r5, #1
   19384:	bcs	19394 <close_stdout@@Base+0x6b50>
   19388:	cmp	sl, r8
   1938c:	subhi	r5, r5, #2
   19390:	bhi	19398 <close_stdout@@Base+0x6b54>
   19394:	mov	r5, r3
   19398:	orr	r3, r5, fp, lsl #16
   1939c:	mov	r4, #0
   193a0:	cmp	r6, #0
   193a4:	mov	r0, r3
   193a8:	mov	r1, r4
   193ac:	beq	193b8 <close_stdout@@Base+0x6b74>
   193b0:	rsbs	r0, r0, #0
   193b4:	rsc	r1, r1, #0
   193b8:	add	sp, sp, #12
   193bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193c0:	cmp	r3, r5
   193c4:	movhi	r4, #0
   193c8:	movhi	r3, r4
   193cc:	bhi	193a0 <close_stdout@@Base+0x6b5c>
   193d0:	clz	r5, r1
   193d4:	cmp	r5, #0
   193d8:	bne	195c8 <close_stdout@@Base+0x6d84>
   193dc:	cmp	r1, ip
   193e0:	cmpcs	r2, sl
   193e4:	movhi	r4, #0
   193e8:	movls	r4, #1
   193ec:	movls	r3, #1
   193f0:	movls	r4, r5
   193f4:	movhi	r3, r4
   193f8:	b	193a0 <close_stdout@@Base+0x6b5c>
   193fc:	cmp	r2, #0
   19400:	bne	19414 <close_stdout@@Base+0x6bd0>
   19404:	mov	r1, r2
   19408:	mov	r0, #1
   1940c:	bl	18fa0 <close_stdout@@Base+0x675c>
   19410:	mov	r8, r0
   19414:	clz	r3, r8
   19418:	cmp	r3, #0
   1941c:	bne	194ec <close_stdout@@Base+0x6ca8>
   19420:	rsb	r9, r8, r9
   19424:	lsr	r5, r8, #16
   19428:	uxth	sl, r8
   1942c:	mov	r4, #1
   19430:	mov	r1, r5
   19434:	mov	r0, r9
   19438:	bl	18fa0 <close_stdout@@Base+0x675c>
   1943c:	mov	r1, r5
   19440:	mov	fp, r0
   19444:	mov	r0, r9
   19448:	bl	1918c <close_stdout@@Base+0x6948>
   1944c:	mul	r0, sl, fp
   19450:	lsr	r2, r7, #16
   19454:	orr	r1, r2, r1, lsl #16
   19458:	cmp	r0, r1
   1945c:	bls	1947c <close_stdout@@Base+0x6c38>
   19460:	adds	r1, r1, r8
   19464:	sub	r3, fp, #1
   19468:	bcs	196e8 <close_stdout@@Base+0x6ea4>
   1946c:	cmp	r0, r1
   19470:	subhi	fp, fp, #2
   19474:	addhi	r1, r1, r8
   19478:	bls	196e8 <close_stdout@@Base+0x6ea4>
   1947c:	rsb	r2, r0, r1
   19480:	mov	r1, r5
   19484:	str	r2, [sp]
   19488:	uxth	r7, r7
   1948c:	mov	r0, r2
   19490:	bl	18fa0 <close_stdout@@Base+0x675c>
   19494:	ldr	r2, [sp]
   19498:	mov	r1, r5
   1949c:	mov	r9, r0
   194a0:	mov	r0, r2
   194a4:	bl	1918c <close_stdout@@Base+0x6948>
   194a8:	mul	sl, sl, r9
   194ac:	orr	r1, r7, r1, lsl #16
   194b0:	cmp	sl, r1
   194b4:	bls	194d4 <close_stdout@@Base+0x6c90>
   194b8:	adds	r8, r1, r8
   194bc:	sub	r3, r9, #1
   194c0:	bcs	194d0 <close_stdout@@Base+0x6c8c>
   194c4:	cmp	sl, r8
   194c8:	subhi	r9, r9, #2
   194cc:	bhi	194d4 <close_stdout@@Base+0x6c90>
   194d0:	mov	r9, r3
   194d4:	orr	r3, r9, fp, lsl #16
   194d8:	b	193a0 <close_stdout@@Base+0x6b5c>
   194dc:	mvn	r6, r6
   194e0:	rsbs	r2, r2, #0
   194e4:	rsc	r3, r3, #0
   194e8:	b	192a8 <close_stdout@@Base+0x6a64>
   194ec:	lsl	r8, r8, r3
   194f0:	rsb	fp, r3, #32
   194f4:	lsr	r4, r9, fp
   194f8:	lsr	fp, r7, fp
   194fc:	lsr	r5, r8, #16
   19500:	orr	fp, fp, r9, lsl r3
   19504:	mov	r0, r4
   19508:	lsl	r7, r7, r3
   1950c:	mov	r1, r5
   19510:	uxth	sl, r8
   19514:	bl	18fa0 <close_stdout@@Base+0x675c>
   19518:	mov	r1, r5
   1951c:	mov	r3, r0
   19520:	mov	r0, r4
   19524:	str	r3, [sp]
   19528:	bl	1918c <close_stdout@@Base+0x6948>
   1952c:	ldr	r3, [sp]
   19530:	lsr	r2, fp, #16
   19534:	mul	r0, sl, r3
   19538:	orr	r1, r2, r1, lsl #16
   1953c:	cmp	r0, r1
   19540:	bls	19560 <close_stdout@@Base+0x6d1c>
   19544:	adds	r1, r1, r8
   19548:	sub	r2, r3, #1
   1954c:	bcs	19700 <close_stdout@@Base+0x6ebc>
   19550:	cmp	r0, r1
   19554:	subhi	r3, r3, #2
   19558:	addhi	r1, r1, r8
   1955c:	bls	19700 <close_stdout@@Base+0x6ebc>
   19560:	rsb	r9, r0, r1
   19564:	mov	r1, r5
   19568:	str	r3, [sp]
   1956c:	uxth	fp, fp
   19570:	mov	r0, r9
   19574:	bl	18fa0 <close_stdout@@Base+0x675c>
   19578:	mov	r1, r5
   1957c:	mov	r4, r0
   19580:	mov	r0, r9
   19584:	bl	1918c <close_stdout@@Base+0x6948>
   19588:	mul	r9, sl, r4
   1958c:	ldr	r3, [sp]
   19590:	orr	r1, fp, r1, lsl #16
   19594:	cmp	r9, r1
   19598:	bls	195bc <close_stdout@@Base+0x6d78>
   1959c:	adds	r1, r1, r8
   195a0:	sub	r2, r4, #1
   195a4:	bcs	195b8 <close_stdout@@Base+0x6d74>
   195a8:	cmp	r9, r1
   195ac:	subhi	r4, r4, #2
   195b0:	addhi	r1, r1, r8
   195b4:	bhi	195bc <close_stdout@@Base+0x6d78>
   195b8:	mov	r4, r2
   195bc:	rsb	r9, r9, r1
   195c0:	orr	r4, r4, r3, lsl #16
   195c4:	b	19430 <close_stdout@@Base+0x6bec>
   195c8:	rsb	sl, r5, #32
   195cc:	lsl	r3, r2, r5
   195d0:	lsr	r0, r2, sl
   195d4:	lsr	r2, ip, sl
   195d8:	orr	r4, r0, r1, lsl r5
   195dc:	lsr	sl, r7, sl
   195e0:	mov	r0, r2
   195e4:	orr	sl, sl, ip, lsl r5
   195e8:	lsr	r9, r4, #16
   195ec:	str	r3, [sp, #4]
   195f0:	str	r2, [sp]
   195f4:	uxth	fp, r4
   195f8:	mov	r1, r9
   195fc:	bl	18fa0 <close_stdout@@Base+0x675c>
   19600:	ldr	r2, [sp]
   19604:	mov	r1, r9
   19608:	mov	r8, r0
   1960c:	mov	r0, r2
   19610:	bl	1918c <close_stdout@@Base+0x6948>
   19614:	mul	r0, fp, r8
   19618:	lsr	r2, sl, #16
   1961c:	orr	r1, r2, r1, lsl #16
   19620:	cmp	r0, r1
   19624:	bls	19644 <close_stdout@@Base+0x6e00>
   19628:	adds	r1, r1, r4
   1962c:	sub	r2, r8, #1
   19630:	bcs	196f8 <close_stdout@@Base+0x6eb4>
   19634:	cmp	r0, r1
   19638:	subhi	r8, r8, #2
   1963c:	addhi	r1, r1, r4
   19640:	bls	196f8 <close_stdout@@Base+0x6eb4>
   19644:	rsb	ip, r0, r1
   19648:	mov	r1, r9
   1964c:	str	ip, [sp]
   19650:	mov	r0, ip
   19654:	bl	18fa0 <close_stdout@@Base+0x675c>
   19658:	ldr	ip, [sp]
   1965c:	mov	r1, r9
   19660:	mov	r2, r0
   19664:	mov	r0, ip
   19668:	str	r2, [sp]
   1966c:	bl	1918c <close_stdout@@Base+0x6948>
   19670:	ldr	r2, [sp]
   19674:	uxth	ip, sl
   19678:	mul	fp, fp, r2
   1967c:	orr	ip, ip, r1, lsl #16
   19680:	cmp	fp, ip
   19684:	bls	196a4 <close_stdout@@Base+0x6e60>
   19688:	adds	ip, ip, r4
   1968c:	sub	r1, r2, #1
   19690:	bcs	196f0 <close_stdout@@Base+0x6eac>
   19694:	cmp	fp, ip
   19698:	subhi	r2, r2, #2
   1969c:	addhi	ip, ip, r4
   196a0:	bls	196f0 <close_stdout@@Base+0x6eac>
   196a4:	ldr	r0, [sp, #4]
   196a8:	orr	r1, r2, r8, lsl #16
   196ac:	rsb	fp, fp, ip
   196b0:	umull	r2, r3, r1, r0
   196b4:	cmp	fp, r3
   196b8:	bcc	196dc <close_stdout@@Base+0x6e98>
   196bc:	movne	r4, #0
   196c0:	moveq	r4, #1
   196c4:	cmp	r2, r7, lsl r5
   196c8:	movls	r4, #0
   196cc:	andhi	r4, r4, #1
   196d0:	cmp	r4, #0
   196d4:	moveq	r3, r1
   196d8:	beq	193a0 <close_stdout@@Base+0x6b5c>
   196dc:	sub	r3, r1, #1
   196e0:	mov	r4, #0
   196e4:	b	193a0 <close_stdout@@Base+0x6b5c>
   196e8:	mov	fp, r3
   196ec:	b	1947c <close_stdout@@Base+0x6c38>
   196f0:	mov	r2, r1
   196f4:	b	196a4 <close_stdout@@Base+0x6e60>
   196f8:	mov	r8, r2
   196fc:	b	19644 <close_stdout@@Base+0x6e00>
   19700:	mov	r3, r2
   19704:	b	19560 <close_stdout@@Base+0x6d1c>
   19708:	cmp	r3, #0
   1970c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19710:	mov	r6, r0
   19714:	sub	sp, sp, #12
   19718:	mov	r5, r1
   1971c:	mov	r7, r0
   19720:	mov	r4, r2
   19724:	mov	r8, r1
   19728:	bne	19808 <close_stdout@@Base+0x6fc4>
   1972c:	cmp	r2, r1
   19730:	bls	19844 <close_stdout@@Base+0x7000>
   19734:	clz	r3, r2
   19738:	cmp	r3, #0
   1973c:	rsbne	r8, r3, #32
   19740:	lslne	r4, r2, r3
   19744:	lsrne	r8, r0, r8
   19748:	lslne	r7, r0, r3
   1974c:	orrne	r8, r8, r1, lsl r3
   19750:	lsr	r5, r4, #16
   19754:	uxth	sl, r4
   19758:	mov	r1, r5
   1975c:	mov	r0, r8
   19760:	bl	18fa0 <close_stdout@@Base+0x675c>
   19764:	mov	r1, r5
   19768:	mov	r9, r0
   1976c:	mov	r0, r8
   19770:	bl	1918c <close_stdout@@Base+0x6948>
   19774:	mul	r0, sl, r9
   19778:	lsr	r3, r7, #16
   1977c:	orr	r1, r3, r1, lsl #16
   19780:	cmp	r0, r1
   19784:	bls	197a8 <close_stdout@@Base+0x6f64>
   19788:	adds	r1, r1, r4
   1978c:	sub	r2, r9, #1
   19790:	bcs	197a4 <close_stdout@@Base+0x6f60>
   19794:	cmp	r0, r1
   19798:	subhi	r9, r9, #2
   1979c:	addhi	r1, r1, r4
   197a0:	bhi	197a8 <close_stdout@@Base+0x6f64>
   197a4:	mov	r9, r2
   197a8:	rsb	r8, r0, r1
   197ac:	mov	r1, r5
   197b0:	uxth	r7, r7
   197b4:	mov	r0, r8
   197b8:	bl	18fa0 <close_stdout@@Base+0x675c>
   197bc:	mov	r1, r5
   197c0:	mov	r6, r0
   197c4:	mov	r0, r8
   197c8:	bl	1918c <close_stdout@@Base+0x6948>
   197cc:	mul	sl, sl, r6
   197d0:	orr	r1, r7, r1, lsl #16
   197d4:	cmp	sl, r1
   197d8:	bls	197f4 <close_stdout@@Base+0x6fb0>
   197dc:	adds	r4, r1, r4
   197e0:	sub	r3, r6, #1
   197e4:	bcs	19af0 <close_stdout@@Base+0x72ac>
   197e8:	cmp	sl, r4
   197ec:	subhi	r6, r6, #2
   197f0:	bls	19af0 <close_stdout@@Base+0x72ac>
   197f4:	orr	r0, r6, r9, lsl #16
   197f8:	mov	r6, #0
   197fc:	mov	r1, r6
   19800:	add	sp, sp, #12
   19804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19808:	cmp	r3, r1
   1980c:	movhi	r6, #0
   19810:	movhi	r0, r6
   19814:	bhi	197fc <close_stdout@@Base+0x6fb8>
   19818:	clz	r7, r3
   1981c:	cmp	r7, #0
   19820:	bne	19920 <close_stdout@@Base+0x70dc>
   19824:	cmp	r3, r1
   19828:	cmpcs	r2, r6
   1982c:	movhi	r6, #0
   19830:	movls	r6, #1
   19834:	movls	r0, #1
   19838:	movls	r6, r7
   1983c:	movhi	r0, r6
   19840:	b	197fc <close_stdout@@Base+0x6fb8>
   19844:	cmp	r2, #0
   19848:	bne	1985c <close_stdout@@Base+0x7018>
   1984c:	mov	r1, r2
   19850:	mov	r0, #1
   19854:	bl	18fa0 <close_stdout@@Base+0x675c>
   19858:	mov	r4, r0
   1985c:	clz	r3, r4
   19860:	cmp	r3, #0
   19864:	bne	19a1c <close_stdout@@Base+0x71d8>
   19868:	rsb	r5, r4, r5
   1986c:	lsr	r8, r4, #16
   19870:	uxth	sl, r4
   19874:	mov	r6, #1
   19878:	mov	r1, r8
   1987c:	mov	r0, r5
   19880:	bl	18fa0 <close_stdout@@Base+0x675c>
   19884:	mov	r1, r8
   19888:	mov	r9, r0
   1988c:	mov	r0, r5
   19890:	bl	1918c <close_stdout@@Base+0x6948>
   19894:	mul	r0, sl, r9
   19898:	lsr	r3, r7, #16
   1989c:	orr	r1, r3, r1, lsl #16
   198a0:	cmp	r0, r1
   198a4:	bls	198c4 <close_stdout@@Base+0x7080>
   198a8:	adds	r1, r1, r4
   198ac:	sub	r2, r9, #1
   198b0:	bcs	19af8 <close_stdout@@Base+0x72b4>
   198b4:	cmp	r0, r1
   198b8:	subhi	r9, r9, #2
   198bc:	addhi	r1, r1, r4
   198c0:	bls	19af8 <close_stdout@@Base+0x72b4>
   198c4:	rsb	fp, r0, r1
   198c8:	mov	r1, r8
   198cc:	uxth	r7, r7
   198d0:	mov	r0, fp
   198d4:	bl	18fa0 <close_stdout@@Base+0x675c>
   198d8:	mov	r1, r8
   198dc:	mov	r5, r0
   198e0:	mov	r0, fp
   198e4:	bl	1918c <close_stdout@@Base+0x6948>
   198e8:	mul	sl, sl, r5
   198ec:	orr	r1, r7, r1, lsl #16
   198f0:	cmp	sl, r1
   198f4:	bls	19910 <close_stdout@@Base+0x70cc>
   198f8:	adds	r4, r1, r4
   198fc:	sub	r3, r5, #1
   19900:	bcs	19b00 <close_stdout@@Base+0x72bc>
   19904:	cmp	sl, r4
   19908:	subhi	r5, r5, #2
   1990c:	bls	19b00 <close_stdout@@Base+0x72bc>
   19910:	orr	r0, r5, r9, lsl #16
   19914:	mov	r1, r6
   19918:	add	sp, sp, #12
   1991c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19920:	rsb	r1, r7, #32
   19924:	lsl	r0, r2, r7
   19928:	lsr	r2, r2, r1
   1992c:	lsr	fp, r5, r1
   19930:	orr	r8, r2, r3, lsl r7
   19934:	lsr	r1, r6, r1
   19938:	str	r0, [sp, #4]
   1993c:	orr	r5, r1, r5, lsl r7
   19940:	lsr	r9, r8, #16
   19944:	mov	r0, fp
   19948:	uxth	sl, r8
   1994c:	mov	r1, r9
   19950:	bl	18fa0 <close_stdout@@Base+0x675c>
   19954:	mov	r1, r9
   19958:	mov	r4, r0
   1995c:	mov	r0, fp
   19960:	bl	1918c <close_stdout@@Base+0x6948>
   19964:	mul	r0, sl, r4
   19968:	lsr	ip, r5, #16
   1996c:	orr	r1, ip, r1, lsl #16
   19970:	cmp	r0, r1
   19974:	bls	19988 <close_stdout@@Base+0x7144>
   19978:	adds	r1, r1, r8
   1997c:	sub	r2, r4, #1
   19980:	bcc	19b1c <close_stdout@@Base+0x72d8>
   19984:	mov	r4, r2
   19988:	rsb	ip, r0, r1
   1998c:	mov	r1, r9
   19990:	str	ip, [sp]
   19994:	uxth	r5, r5
   19998:	mov	r0, ip
   1999c:	bl	18fa0 <close_stdout@@Base+0x675c>
   199a0:	ldr	ip, [sp]
   199a4:	mov	r1, r9
   199a8:	mov	fp, r0
   199ac:	mov	r0, ip
   199b0:	bl	1918c <close_stdout@@Base+0x6948>
   199b4:	mul	sl, sl, fp
   199b8:	orr	r1, r5, r1, lsl #16
   199bc:	cmp	sl, r1
   199c0:	bls	199d4 <close_stdout@@Base+0x7190>
   199c4:	adds	r1, r1, r8
   199c8:	sub	r2, fp, #1
   199cc:	bcc	19b08 <close_stdout@@Base+0x72c4>
   199d0:	mov	fp, r2
   199d4:	ldr	r3, [sp, #4]
   199d8:	orr	r0, fp, r4, lsl #16
   199dc:	rsb	sl, sl, r1
   199e0:	umull	r4, r5, r0, r3
   199e4:	cmp	sl, r5
   199e8:	bcc	19a08 <close_stdout@@Base+0x71c4>
   199ec:	movne	r3, #0
   199f0:	moveq	r3, #1
   199f4:	cmp	r4, r6, lsl r7
   199f8:	movls	r6, #0
   199fc:	andhi	r6, r3, #1
   19a00:	cmp	r6, #0
   19a04:	beq	197fc <close_stdout@@Base+0x6fb8>
   19a08:	mov	r6, #0
   19a0c:	sub	r0, r0, #1
   19a10:	mov	r1, r6
   19a14:	add	sp, sp, #12
   19a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a1c:	lsl	r4, r4, r3
   19a20:	rsb	r9, r3, #32
   19a24:	lsr	r2, r5, r9
   19a28:	lsr	r9, r6, r9
   19a2c:	lsr	r8, r4, #16
   19a30:	orr	r9, r9, r5, lsl r3
   19a34:	mov	r0, r2
   19a38:	lsl	r7, r6, r3
   19a3c:	mov	r1, r8
   19a40:	str	r2, [sp]
   19a44:	bl	18fa0 <close_stdout@@Base+0x675c>
   19a48:	ldr	r2, [sp]
   19a4c:	mov	r1, r8
   19a50:	uxth	sl, r4
   19a54:	mov	fp, r0
   19a58:	mov	r0, r2
   19a5c:	bl	1918c <close_stdout@@Base+0x6948>
   19a60:	mul	r0, sl, fp
   19a64:	lsr	r3, r9, #16
   19a68:	orr	r1, r3, r1, lsl #16
   19a6c:	cmp	r0, r1
   19a70:	bls	19a90 <close_stdout@@Base+0x724c>
   19a74:	adds	r1, r1, r4
   19a78:	sub	r3, fp, #1
   19a7c:	bcs	19b30 <close_stdout@@Base+0x72ec>
   19a80:	cmp	r0, r1
   19a84:	subhi	fp, fp, #2
   19a88:	addhi	r1, r1, r4
   19a8c:	bls	19b30 <close_stdout@@Base+0x72ec>
   19a90:	rsb	r5, r0, r1
   19a94:	mov	r1, r8
   19a98:	uxth	r9, r9
   19a9c:	mov	r0, r5
   19aa0:	bl	18fa0 <close_stdout@@Base+0x675c>
   19aa4:	mov	r1, r8
   19aa8:	mov	r6, r0
   19aac:	mov	r0, r5
   19ab0:	bl	1918c <close_stdout@@Base+0x6948>
   19ab4:	mul	r5, sl, r6
   19ab8:	orr	r1, r9, r1, lsl #16
   19abc:	cmp	r5, r1
   19ac0:	bls	19ae4 <close_stdout@@Base+0x72a0>
   19ac4:	adds	r1, r1, r4
   19ac8:	sub	r3, r6, #1
   19acc:	bcs	19ae0 <close_stdout@@Base+0x729c>
   19ad0:	cmp	r5, r1
   19ad4:	subhi	r6, r6, #2
   19ad8:	addhi	r1, r1, r4
   19adc:	bhi	19ae4 <close_stdout@@Base+0x72a0>
   19ae0:	mov	r6, r3
   19ae4:	rsb	r5, r5, r1
   19ae8:	orr	r6, r6, fp, lsl #16
   19aec:	b	19878 <close_stdout@@Base+0x7034>
   19af0:	mov	r6, r3
   19af4:	b	197f4 <close_stdout@@Base+0x6fb0>
   19af8:	mov	r9, r2
   19afc:	b	198c4 <close_stdout@@Base+0x7080>
   19b00:	mov	r5, r3
   19b04:	b	19910 <close_stdout@@Base+0x70cc>
   19b08:	cmp	sl, r1
   19b0c:	subhi	fp, fp, #2
   19b10:	addhi	r1, r1, r8
   19b14:	bhi	199d4 <close_stdout@@Base+0x7190>
   19b18:	b	199d0 <close_stdout@@Base+0x718c>
   19b1c:	cmp	r0, r1
   19b20:	subhi	r4, r4, #2
   19b24:	addhi	r1, r1, r8
   19b28:	bhi	19988 <close_stdout@@Base+0x7144>
   19b2c:	b	19984 <close_stdout@@Base+0x7140>
   19b30:	mov	fp, r3
   19b34:	b	19a90 <close_stdout@@Base+0x724c>
   19b38:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19b3c:	mov	r7, r0
   19b40:	ldr	r6, [pc, #76]	; 19b94 <close_stdout@@Base+0x7350>
   19b44:	mov	r8, r1
   19b48:	ldr	r5, [pc, #72]	; 19b98 <close_stdout@@Base+0x7354>
   19b4c:	mov	r9, r2
   19b50:	add	r6, pc, r6
   19b54:	bl	11238 <fdopen@plt-0x20>
   19b58:	add	r5, pc, r5
   19b5c:	rsb	r6, r5, r6
   19b60:	asrs	r6, r6, #2
   19b64:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   19b68:	sub	r5, r5, #4
   19b6c:	mov	r4, #0
   19b70:	add	r4, r4, #1
   19b74:	ldr	r3, [r5, #4]!
   19b78:	mov	r0, r7
   19b7c:	mov	r1, r8
   19b80:	mov	r2, r9
   19b84:	blx	r3
   19b88:	cmp	r4, r6
   19b8c:	bne	19b70 <close_stdout@@Base+0x732c>
   19b90:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19b94:	strdeq	r2, [r1], -r0
   19b98:	andeq	r2, r1, r4, ror #23
   19b9c:	bx	lr
   19ba0:	ldr	r3, [pc, #28]	; 19bc4 <close_stdout@@Base+0x7380>
   19ba4:	mov	r1, #0
   19ba8:	ldr	r2, [pc, #24]	; 19bc8 <close_stdout@@Base+0x7384>
   19bac:	add	r3, pc, r3
   19bb0:	ldr	r3, [r3, r2]
   19bb4:	cmp	r3, #0
   19bb8:	ldrne	r2, [r3]
   19bbc:	moveq	r2, r3
   19bc0:	b	114a4 <__cxa_atexit@plt>
   19bc4:	andeq	r3, r1, ip, asr #8
   19bc8:	andeq	r0, r0, ip, asr #2

Disassembly of section .fini:

00019bcc <.fini>:
   19bcc:	push	{r3, lr}
   19bd0:	pop	{r3, pc}
