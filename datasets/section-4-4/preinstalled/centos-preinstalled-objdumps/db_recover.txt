
centos-preinstalled/db_recover:     file format elf32-littlearm


Disassembly of section .init:

00010a8c <_init@@Base>:
   10a8c:	push	{r3, lr}
   10a90:	bl	11158 <__errno_location@plt+0x568>
   10a94:	pop	{r3, pc}

Disassembly of section .plt:

00010a98 <sigemptyset@plt-0x14>:
   10a98:	push	{lr}		; (str lr, [sp, #-4]!)
   10a9c:	ldr	lr, [pc, #4]	; 10aa8 <_init@@Base+0x1c>
   10aa0:	add	lr, pc, lr
   10aa4:	ldr	pc, [lr, #8]!
   10aa8:	andeq	r1, r1, r8, asr r5

00010aac <sigemptyset@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1368]!	; 0x558

00010ab8 <strerror@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1360]!	; 0x550

00010ac4 <abort@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1352]!	; 0x548

00010ad0 <localtime@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1344]!	; 0x540

00010adc <__libc_start_main@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1336]!	; 0x538

00010ae8 <__gmon_start__@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1328]!	; 0x530

00010af4 <__printf_chk@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1320]!	; 0x528

00010b00 <strchr@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1312]!	; 0x520

00010b0c <putchar@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1304]!	; 0x518

00010b18 <mktime@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1296]!	; 0x510

00010b24 <memset@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1288]!	; 0x508

00010b30 <free@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1280]!	; 0x500

00010b3c <fflush@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b48 <strlen@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b54 <getopt@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b60 <raise@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b6c <fwrite@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b78 <time@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b84 <__stack_chk_fail@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b90 <sigaction@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b9c <__fprintf_chk@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1208]!	; 0x4b8

00010ba8 <db_env_create@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bb4 <puts@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bc0 <db_version@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bcc <db_strerror@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1176]!	; 0x498

00010bd8 <__strdup@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1168]!	; 0x490

00010be4 <__db_rpath@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1160]!	; 0x488

00010bf0 <__errno_location@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1152]!	; 0x480

Disassembly of section .text:

00010bfc <db_recover_feedback@@Base-0x654>:
   10bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c00:	sub	sp, sp, #52	; 0x34
   10c04:	ldr	r4, [pc, #1232]	; 110dc <__errno_location@plt+0x4ec>
   10c08:	mov	r7, r0
   10c0c:	ldr	r3, [pc, #1228]	; 110e0 <__errno_location@plt+0x4f0>
   10c10:	mov	r5, r1
   10c14:	add	r4, pc, r4
   10c18:	ldr	r0, [r1]
   10c1c:	ldr	r3, [r4, r3]
   10c20:	str	r3, [sp, #8]
   10c24:	ldr	r3, [r3]
   10c28:	str	r3, [sp, #44]	; 0x2c
   10c2c:	bl	10be4 <__db_rpath@plt>
   10c30:	ldr	r3, [pc, #1196]	; 110e4 <__errno_location@plt+0x4f4>
   10c34:	ldr	r9, [r4, r3]
   10c38:	cmp	r0, #0
   10c3c:	str	r0, [r9]
   10c40:	addne	r0, r0, #1
   10c44:	strne	r0, [r9]
   10c48:	ldreq	r3, [r5]
   10c4c:	streq	r3, [r9]
   10c50:	bl	1157c <db_recover_feedback@@Base+0x32c>
   10c54:	cmp	r0, #0
   10c58:	bne	10e78 <__errno_location@plt+0x288>
   10c5c:	ldr	r8, [pc, #1156]	; 110e8 <__errno_location@plt+0x4f8>
   10c60:	add	sl, sp, #48	; 0x30
   10c64:	mov	r6, r0
   10c68:	str	r0, [sp, #28]
   10c6c:	add	r8, pc, r8
   10c70:	str	r0, [sl, #-8]!
   10c74:	str	r0, [sp, #20]
   10c78:	str	r0, [sp, #16]
   10c7c:	str	r0, [sp, #12]
   10c80:	str	r0, [sp, #24]
   10c84:	mov	r0, r7
   10c88:	mov	r1, r5
   10c8c:	mov	r2, r8
   10c90:	bl	10b54 <getopt@plt>
   10c94:	cmn	r0, #1
   10c98:	beq	10d48 <__errno_location@plt+0x158>
   10c9c:	sub	r0, r0, #80	; 0x50
   10ca0:	cmp	r0, #38	; 0x26
   10ca4:	addls	pc, pc, r0, lsl #2
   10ca8:	b	10f94 <__errno_location@plt+0x3a4>
   10cac:	b	10ec8 <__errno_location@plt+0x2d8>
   10cb0:	b	10f94 <__errno_location@plt+0x3a4>
   10cb4:	b	10f94 <__errno_location@plt+0x3a4>
   10cb8:	b	10f94 <__errno_location@plt+0x3a4>
   10cbc:	b	10f94 <__errno_location@plt+0x3a4>
   10cc0:	b	10f94 <__errno_location@plt+0x3a4>
   10cc4:	b	10eac <__errno_location@plt+0x2bc>
   10cc8:	b	10f94 <__errno_location@plt+0x3a4>
   10ccc:	b	10f94 <__errno_location@plt+0x3a4>
   10cd0:	b	10f94 <__errno_location@plt+0x3a4>
   10cd4:	b	10f94 <__errno_location@plt+0x3a4>
   10cd8:	b	10f94 <__errno_location@plt+0x3a4>
   10cdc:	b	10f94 <__errno_location@plt+0x3a4>
   10ce0:	b	10f94 <__errno_location@plt+0x3a4>
   10ce4:	b	10f94 <__errno_location@plt+0x3a4>
   10ce8:	b	10f94 <__errno_location@plt+0x3a4>
   10cec:	b	10f94 <__errno_location@plt+0x3a4>
   10cf0:	b	10f94 <__errno_location@plt+0x3a4>
   10cf4:	b	10f94 <__errno_location@plt+0x3a4>
   10cf8:	b	10ea0 <__errno_location@plt+0x2b0>
   10cfc:	b	10f94 <__errno_location@plt+0x3a4>
   10d00:	b	10e94 <__errno_location@plt+0x2a4>
   10d04:	b	10f88 <__errno_location@plt+0x398>
   10d08:	b	10f94 <__errno_location@plt+0x3a4>
   10d0c:	b	10f74 <__errno_location@plt+0x384>
   10d10:	b	10f94 <__errno_location@plt+0x3a4>
   10d14:	b	10f94 <__errno_location@plt+0x3a4>
   10d18:	b	10f94 <__errno_location@plt+0x3a4>
   10d1c:	b	10f94 <__errno_location@plt+0x3a4>
   10d20:	b	10f94 <__errno_location@plt+0x3a4>
   10d24:	b	10f94 <__errno_location@plt+0x3a4>
   10d28:	b	10f94 <__errno_location@plt+0x3a4>
   10d2c:	b	10f94 <__errno_location@plt+0x3a4>
   10d30:	b	10f94 <__errno_location@plt+0x3a4>
   10d34:	b	10f94 <__errno_location@plt+0x3a4>
   10d38:	b	10f94 <__errno_location@plt+0x3a4>
   10d3c:	b	10f54 <__errno_location@plt+0x364>
   10d40:	b	10f94 <__errno_location@plt+0x3a4>
   10d44:	b	10f48 <__errno_location@plt+0x358>
   10d48:	ldr	r3, [pc, #924]	; 110ec <__errno_location@plt+0x4fc>
   10d4c:	ldr	r3, [r4, r3]
   10d50:	ldr	r3, [r3]
   10d54:	cmp	r7, r3
   10d58:	bne	10f94 <__errno_location@plt+0x3a4>
   10d5c:	bl	116f8 <db_recover_feedback@@Base+0x4a8>
   10d60:	add	r0, sp, #36	; 0x24
   10d64:	mov	r1, #0
   10d68:	bl	10ba8 <db_env_create@plt>
   10d6c:	ldr	r3, [pc, #892]	; 110f0 <__errno_location@plt+0x500>
   10d70:	cmp	r0, #0
   10d74:	bne	10f9c <__errno_location@plt+0x3ac>
   10d78:	ldr	r0, [sp, #36]	; 0x24
   10d7c:	ldr	r5, [r4, r3]
   10d80:	ldr	r3, [r0, #932]	; 0x3a4
   10d84:	ldr	r1, [r5]
   10d88:	blx	r3
   10d8c:	ldr	r0, [sp, #36]	; 0x24
   10d90:	ldr	r1, [r9]
   10d94:	ldr	r3, [r0, #936]	; 0x3a8
   10d98:	blx	r3
   10d9c:	ldr	r3, [sp, #16]
   10da0:	cmp	r3, #0
   10da4:	bne	11000 <__errno_location@plt+0x410>
   10da8:	ldr	r3, [sp, #20]
   10dac:	cmp	r3, #0
   10db0:	bne	11088 <__errno_location@plt+0x498>
   10db4:	ldr	r3, [sp, #40]	; 0x28
   10db8:	cmp	r3, #0
   10dbc:	bne	11054 <__errno_location@plt+0x464>
   10dc0:	cmp	r6, #0
   10dc4:	beq	10de4 <__errno_location@plt+0x1f4>
   10dc8:	ldr	r0, [sp, #36]	; 0x24
   10dcc:	mov	r1, r6
   10dd0:	mov	r2, #1
   10dd4:	ldr	r3, [r0, #924]	; 0x39c
   10dd8:	blx	r3
   10ddc:	subs	r1, r0, #0
   10de0:	bne	110bc <__errno_location@plt+0x4cc>
   10de4:	ldr	r3, [sp, #24]
   10de8:	ldr	r1, [sp, #12]
   10dec:	cmp	r3, #0
   10df0:	ldr	r0, [sp, #36]	; 0x24
   10df4:	moveq	r2, #2
   10df8:	movne	r2, #131072	; 0x20000
   10dfc:	cmp	r1, #0
   10e00:	orr	r2, r2, #9728	; 0x2600
   10e04:	orr	r2, r2, #5
   10e08:	ldr	r1, [sp, #28]
   10e0c:	moveq	r3, #65536	; 0x10000
   10e10:	movne	r3, #256	; 0x100
   10e14:	ldr	ip, [r0, #748]	; 0x2ec
   10e18:	orr	r2, r2, r3
   10e1c:	mov	r3, #0
   10e20:	blx	ip
   10e24:	subs	r1, r0, #0
   10e28:	moveq	r7, r1
   10e2c:	bne	110a0 <__errno_location@plt+0x4b0>
   10e30:	ldr	r3, [pc, #700]	; 110f4 <__errno_location@plt+0x504>
   10e34:	ldr	r3, [r4, r3]
   10e38:	ldr	r3, [r3]
   10e3c:	cmp	r3, #0
   10e40:	bne	11048 <__errno_location@plt+0x458>
   10e44:	ldr	r0, [sp, #36]	; 0x24
   10e48:	mov	r1, #0
   10e4c:	ldr	r3, [r0, #328]	; 0x148
   10e50:	blx	r3
   10e54:	cmp	r0, #0
   10e58:	bne	11018 <__errno_location@plt+0x428>
   10e5c:	cmp	r6, #0
   10e60:	beq	10e6c <__errno_location@plt+0x27c>
   10e64:	mov	r0, r6
   10e68:	bl	10b30 <free@plt>
   10e6c:	bl	11748 <db_recover_feedback@@Base+0x4f8>
   10e70:	adds	r0, r7, #0
   10e74:	movne	r0, #1
   10e78:	ldr	r1, [sp, #8]
   10e7c:	ldr	r2, [sp, #44]	; 0x2c
   10e80:	ldr	r3, [r1]
   10e84:	cmp	r2, r3
   10e88:	bne	110d8 <__errno_location@plt+0x4e8>
   10e8c:	add	sp, sp, #52	; 0x34
   10e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e94:	mov	r3, #1
   10e98:	str	r3, [sp, #12]
   10e9c:	b	10c84 <__errno_location@plt+0x94>
   10ea0:	mov	r3, #1
   10ea4:	str	r3, [sp, #24]
   10ea8:	b	10c84 <__errno_location@plt+0x94>
   10eac:	mov	r0, #0
   10eb0:	mov	r1, r0
   10eb4:	mov	r2, r0
   10eb8:	bl	10bc0 <db_version@plt>
   10ebc:	bl	10bb4 <puts@plt>
   10ec0:	mov	r0, #0
   10ec4:	b	10e78 <__errno_location@plt+0x288>
   10ec8:	cmp	r6, #0
   10ecc:	bne	10fd0 <__errno_location@plt+0x3e0>
   10ed0:	ldr	r3, [pc, #544]	; 110f8 <__errno_location@plt+0x508>
   10ed4:	ldr	fp, [r4, r3]
   10ed8:	ldr	r0, [fp]
   10edc:	bl	10bd8 <__strdup@plt>
   10ee0:	ldr	fp, [fp]
   10ee4:	mov	r6, r0
   10ee8:	mov	r0, fp
   10eec:	bl	10b48 <strlen@plt>
   10ef0:	mov	r1, #0
   10ef4:	mov	r2, r0
   10ef8:	mov	r0, fp
   10efc:	bl	10b24 <memset@plt>
   10f00:	cmp	r6, #0
   10f04:	bne	10c84 <__errno_location@plt+0x94>
   10f08:	ldr	r3, [pc, #480]	; 110f0 <__errno_location@plt+0x500>
   10f0c:	ldr	r5, [r9]
   10f10:	ldr	r3, [r4, r3]
   10f14:	ldr	r4, [r3]
   10f18:	bl	10bf0 <__errno_location@plt>
   10f1c:	ldr	r0, [r0]
   10f20:	bl	10ab8 <strerror@plt>
   10f24:	ldr	r2, [pc, #464]	; 110fc <__errno_location@plt+0x50c>
   10f28:	mov	r3, r5
   10f2c:	mov	r1, #1
   10f30:	add	r2, pc, r2
   10f34:	str	r0, [sp]
   10f38:	mov	r0, r4
   10f3c:	bl	10b9c <__fprintf_chk@plt>
   10f40:	mov	r0, #1
   10f44:	b	10e78 <__errno_location@plt+0x288>
   10f48:	mov	r3, #1
   10f4c:	str	r3, [sp, #20]
   10f50:	b	10c84 <__errno_location@plt+0x94>
   10f54:	ldr	r3, [pc, #412]	; 110f8 <__errno_location@plt+0x508>
   10f58:	mov	r1, sl
   10f5c:	ldr	r3, [r4, r3]
   10f60:	ldr	r0, [r3]
   10f64:	bl	112a8 <db_recover_feedback@@Base+0x58>
   10f68:	cmp	r0, #0
   10f6c:	beq	10c84 <__errno_location@plt+0x94>
   10f70:	b	10e78 <__errno_location@plt+0x288>
   10f74:	ldr	r3, [pc, #380]	; 110f8 <__errno_location@plt+0x508>
   10f78:	ldr	r3, [r4, r3]
   10f7c:	ldr	r3, [r3]
   10f80:	str	r3, [sp, #28]
   10f84:	b	10c84 <__errno_location@plt+0x94>
   10f88:	mov	r3, #1
   10f8c:	str	r3, [sp, #16]
   10f90:	b	10c84 <__errno_location@plt+0x94>
   10f94:	bl	11518 <db_recover_feedback@@Base+0x2c8>
   10f98:	b	10e78 <__errno_location@plt+0x288>
   10f9c:	ldr	r3, [r4, r3]
   10fa0:	ldr	r5, [r9]
   10fa4:	ldr	r4, [r3]
   10fa8:	bl	10bcc <db_strerror@plt>
   10fac:	ldr	r2, [pc, #332]	; 11100 <__errno_location@plt+0x510>
   10fb0:	mov	r3, r5
   10fb4:	mov	r1, #1
   10fb8:	add	r2, pc, r2
   10fbc:	str	r0, [sp]
   10fc0:	mov	r0, r4
   10fc4:	bl	10b9c <__fprintf_chk@plt>
   10fc8:	mov	r0, #1
   10fcc:	b	10e78 <__errno_location@plt+0x288>
   10fd0:	ldr	r3, [pc, #280]	; 110f0 <__errno_location@plt+0x500>
   10fd4:	mov	r1, #1
   10fd8:	ldr	r0, [pc, #292]	; 11104 <__errno_location@plt+0x514>
   10fdc:	mov	r2, #43	; 0x2b
   10fe0:	ldr	r3, [r4, r3]
   10fe4:	add	r0, pc, r0
   10fe8:	ldr	r3, [r3]
   10fec:	bl	10b6c <fwrite@plt>
   10ff0:	mov	r0, r6
   10ff4:	bl	10b30 <free@plt>
   10ff8:	mov	r0, #1
   10ffc:	b	10e78 <__errno_location@plt+0x288>
   11000:	ldr	r3, [pc, #256]	; 11108 <__errno_location@plt+0x518>
   11004:	ldr	r0, [sp, #36]	; 0x24
   11008:	ldr	r1, [r4, r3]
   1100c:	ldr	r3, [r0, #944]	; 0x3b0
   11010:	blx	r3
   11014:	b	10da8 <__errno_location@plt+0x1b8>
   11018:	ldr	r4, [r5]
   1101c:	mov	r7, #1
   11020:	ldr	r5, [r9]
   11024:	bl	10bcc <db_strerror@plt>
   11028:	ldr	r2, [pc, #220]	; 1110c <__errno_location@plt+0x51c>
   1102c:	mov	r1, r7
   11030:	add	r2, pc, r2
   11034:	mov	r3, r5
   11038:	str	r0, [sp]
   1103c:	mov	r0, r4
   11040:	bl	10b9c <__fprintf_chk@plt>
   11044:	b	10e5c <__errno_location@plt+0x26c>
   11048:	mov	r0, #10
   1104c:	bl	10b0c <putchar@plt>
   11050:	b	10e44 <__errno_location@plt+0x254>
   11054:	ldr	r0, [sp, #36]	; 0x24
   11058:	add	r1, sp, #40	; 0x28
   1105c:	ldr	r3, [r0, #1088]	; 0x440
   11060:	blx	r3
   11064:	subs	r1, r0, #0
   11068:	beq	10dc0 <__errno_location@plt+0x1d0>
   1106c:	ldr	r0, [sp, #36]	; 0x24
   11070:	mov	r7, #1
   11074:	ldr	r2, [pc, #148]	; 11110 <__errno_location@plt+0x520>
   11078:	ldr	r3, [r0, #344]	; 0x158
   1107c:	add	r2, pc, r2
   11080:	blx	r3
   11084:	b	10e30 <__errno_location@plt+0x240>
   11088:	ldr	r0, [sp, #36]	; 0x24
   1108c:	mov	r1, #16
   11090:	mov	r2, #1
   11094:	ldr	r3, [r0, #1092]	; 0x444
   11098:	blx	r3
   1109c:	b	10db4 <__errno_location@plt+0x1c4>
   110a0:	ldr	r0, [sp, #36]	; 0x24
   110a4:	mov	r7, #1
   110a8:	ldr	r2, [pc, #100]	; 11114 <__errno_location@plt+0x524>
   110ac:	ldr	r3, [r0, #344]	; 0x158
   110b0:	add	r2, pc, r2
   110b4:	blx	r3
   110b8:	b	10e30 <__errno_location@plt+0x240>
   110bc:	ldr	r0, [sp, #36]	; 0x24
   110c0:	mov	r7, #1
   110c4:	ldr	r2, [pc, #76]	; 11118 <__errno_location@plt+0x528>
   110c8:	ldr	r3, [r0, #344]	; 0x158
   110cc:	add	r2, pc, r2
   110d0:	blx	r3
   110d4:	b	10e30 <__errno_location@plt+0x240>
   110d8:	bl	10b84 <__stack_chk_fail@plt>
   110dc:	andeq	r1, r1, r4, ror #7
   110e0:	andeq	r0, r0, ip, lsl #1
   110e4:	muleq	r0, r0, r0
   110e8:	ldrdeq	r0, [r0], -r8
   110ec:	andeq	r0, r0, r8, lsl #1
   110f0:	muleq	r0, r8, r0
   110f4:	andeq	r0, r0, r0, lsl #1
   110f8:	muleq	r0, ip, r0
   110fc:	strdeq	r0, [r0], -ip
   11100:	muleq	r0, r8, r9
   11104:	andeq	r0, r0, ip, lsl r9
   11108:	andeq	r0, r0, r4, lsl #1
   1110c:	andeq	r0, r0, ip, ror #18
   11110:	andeq	r0, r0, ip, ror #17
   11114:	ldrdeq	r0, [r0], -ip
   11118:			; <UNDEFINED> instruction: 0x000008b4
   1111c:	mov	fp, #0
   11120:	mov	lr, #0
   11124:	pop	{r1}		; (ldr r1, [sp], #4)
   11128:	mov	r2, sp
   1112c:	push	{r2}		; (str r2, [sp, #-4]!)
   11130:	push	{r0}		; (str r0, [sp, #-4]!)
   11134:	ldr	ip, [pc, #16]	; 1114c <__errno_location@plt+0x55c>
   11138:	push	{ip}		; (str ip, [sp, #-4]!)
   1113c:	ldr	r0, [pc, #12]	; 11150 <__errno_location@plt+0x560>
   11140:	ldr	r3, [pc, #12]	; 11154 <__errno_location@plt+0x564>
   11144:	bl	10adc <__libc_start_main@plt>
   11148:	bl	10ac4 <abort@plt>
   1114c:	ldrdeq	r1, [r1], -ip
   11150:	strdeq	r0, [r1], -ip
   11154:	andeq	r1, r1, r8, ror r7
   11158:	ldr	r3, [pc, #20]	; 11174 <__errno_location@plt+0x584>
   1115c:	ldr	r2, [pc, #20]	; 11178 <__errno_location@plt+0x588>
   11160:	add	r3, pc, r3
   11164:	ldr	r2, [r3, r2]
   11168:	cmp	r2, #0
   1116c:	bxeq	lr
   11170:	b	10ae8 <__gmon_start__@plt>
   11174:	muleq	r1, r8, lr
   11178:	andeq	r0, r0, ip, ror r0
   1117c:	push	{r3, lr}
   11180:	movw	r0, #8356	; 0x20a4
   11184:	ldr	r3, [pc, #36]	; 111b0 <__errno_location@plt+0x5c0>
   11188:	movt	r0, #2
   1118c:	rsb	r3, r0, r3
   11190:	cmp	r3, #6
   11194:	popls	{r3, pc}
   11198:	movw	r3, #0
   1119c:	movt	r3, #0
   111a0:	cmp	r3, #0
   111a4:	popeq	{r3, pc}
   111a8:	blx	r3
   111ac:	pop	{r3, pc}
   111b0:	andeq	r2, r2, r7, lsr #1
   111b4:	push	{r3, lr}
   111b8:	movw	r0, #8356	; 0x20a4
   111bc:	movw	r3, #8356	; 0x20a4
   111c0:	movt	r0, #2
   111c4:	movt	r3, #2
   111c8:	rsb	r3, r0, r3
   111cc:	asr	r3, r3, #2
   111d0:	add	r3, r3, r3, lsr #31
   111d4:	asrs	r1, r3, #1
   111d8:	popeq	{r3, pc}
   111dc:	movw	r2, #0
   111e0:	movt	r2, #0
   111e4:	cmp	r2, #0
   111e8:	popeq	{r3, pc}
   111ec:	blx	r2
   111f0:	pop	{r3, pc}
   111f4:	push	{r4, lr}
   111f8:	movw	r4, #8356	; 0x20a4
   111fc:	movt	r4, #2
   11200:	ldrb	r3, [r4]
   11204:	cmp	r3, #0
   11208:	popne	{r4, pc}
   1120c:	bl	1117c <__errno_location@plt+0x58c>
   11210:	mov	r3, #1
   11214:	strb	r3, [r4]
   11218:	pop	{r4, pc}
   1121c:	movw	r0, #7924	; 0x1ef4
   11220:	movt	r0, #2
   11224:	push	{r3, lr}
   11228:	ldr	r3, [r0]
   1122c:	cmp	r3, #0
   11230:	beq	11248 <__errno_location@plt+0x658>
   11234:	movw	r3, #0
   11238:	movt	r3, #0
   1123c:	cmp	r3, #0
   11240:	beq	11248 <__errno_location@plt+0x658>
   11244:	blx	r3
   11248:	pop	{r3, lr}
   1124c:	b	111b4 <__errno_location@plt+0x5c4>

00011250 <db_recover_feedback@@Base>:
   11250:	push	{r4, lr}
   11254:	cmp	r1, #2
   11258:	ldr	r4, [pc, #56]	; 11298 <db_recover_feedback@@Base+0x48>
   1125c:	add	r4, pc, r4
   11260:	popne	{r4, pc}
   11264:	ldr	r1, [pc, #48]	; 1129c <db_recover_feedback@@Base+0x4c>
   11268:	mov	r0, #1
   1126c:	add	r1, pc, r1
   11270:	bl	10af4 <__printf_chk@plt>
   11274:	ldr	r3, [pc, #36]	; 112a0 <db_recover_feedback@@Base+0x50>
   11278:	ldr	r3, [r4, r3]
   1127c:	ldr	r0, [r3]
   11280:	bl	10b3c <fflush@plt>
   11284:	ldr	r3, [pc, #24]	; 112a4 <db_recover_feedback@@Base+0x54>
   11288:	mov	r2, #1
   1128c:	ldr	r3, [r4, r3]
   11290:	str	r2, [r3]
   11294:	pop	{r4, pc}
   11298:	muleq	r1, ip, sp
   1129c:	andeq	r0, r0, ip, ror r5
   112a0:	muleq	r0, r4, r0
   112a4:	andeq	r0, r0, r0, lsl #1
   112a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   112ac:	sub	sp, sp, #20
   112b0:	ldr	r5, [pc, #584]	; 11500 <db_recover_feedback@@Base+0x2b0>
   112b4:	add	r6, sp, #8
   112b8:	ldr	r3, [pc, #580]	; 11504 <db_recover_feedback@@Base+0x2b4>
   112bc:	mov	r4, r0
   112c0:	add	r5, pc, r5
   112c4:	mov	r0, r6
   112c8:	mov	r9, r1
   112cc:	ldr	r7, [r5, r3]
   112d0:	ldr	r3, [r7]
   112d4:	str	r3, [sp, #12]
   112d8:	bl	10b78 <time@plt>
   112dc:	mov	r0, r6
   112e0:	bl	10ad0 <localtime@plt>
   112e4:	subs	r6, r0, #0
   112e8:	beq	114b4 <db_recover_feedback@@Base+0x264>
   112ec:	mov	r0, r4
   112f0:	mov	r1, #46	; 0x2e
   112f4:	bl	10b00 <strchr@plt>
   112f8:	subs	r8, r0, #0
   112fc:	streq	r8, [r6]
   11300:	beq	1137c <db_recover_feedback@@Base+0x12c>
   11304:	add	r0, r8, #1
   11308:	bl	10b48 <strlen@plt>
   1130c:	cmp	r0, #2
   11310:	beq	11358 <db_recover_feedback@@Base+0x108>
   11314:	ldr	r0, [pc, #492]	; 11508 <db_recover_feedback@@Base+0x2b8>
   11318:	mov	r1, #1
   1131c:	ldr	r3, [pc, #488]	; 1150c <db_recover_feedback@@Base+0x2bc>
   11320:	ldr	r2, [pc, #488]	; 11510 <db_recover_feedback@@Base+0x2c0>
   11324:	ldr	r0, [r5, r0]
   11328:	ldr	r3, [r5, r3]
   1132c:	add	r2, pc, r2
   11330:	ldr	r0, [r0]
   11334:	ldr	r3, [r3]
   11338:	bl	10b9c <__fprintf_chk@plt>
   1133c:	mov	r0, #1
   11340:	ldr	r2, [sp, #12]
   11344:	ldr	r3, [r7]
   11348:	cmp	r2, r3
   1134c:	bne	114fc <db_recover_feedback@@Base+0x2ac>
   11350:	add	sp, sp, #20
   11354:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11358:	ldrb	r3, [r8, #1]
   1135c:	mov	r1, #0
   11360:	ldrb	r2, [r8, #2]
   11364:	sub	r3, r3, #48	; 0x30
   11368:	strb	r1, [r8]
   1136c:	sub	r2, r2, #48	; 0x30
   11370:	add	r3, r3, r3, lsl #2
   11374:	add	r3, r2, r3, lsl #1
   11378:	str	r3, [r6]
   1137c:	mov	r0, r4
   11380:	bl	10b48 <strlen@plt>
   11384:	cmp	r0, #10
   11388:	beq	11484 <db_recover_feedback@@Base+0x234>
   1138c:	cmp	r0, #12
   11390:	beq	11430 <db_recover_feedback@@Base+0x1e0>
   11394:	cmp	r0, #8
   11398:	bne	11314 <db_recover_feedback@@Base+0xc4>
   1139c:	ldrb	r3, [r4]
   113a0:	mvn	r1, #0
   113a4:	ldrb	r2, [r4, #1]
   113a8:	mov	r0, r6
   113ac:	sub	r3, r3, #48	; 0x30
   113b0:	add	r3, r3, r3, lsl #2
   113b4:	add	r3, r2, r3, lsl #1
   113b8:	sub	r3, r3, #49	; 0x31
   113bc:	str	r3, [r6, #16]
   113c0:	ldrb	r3, [r4, #2]
   113c4:	ldrb	r2, [r4, #3]
   113c8:	sub	r3, r3, #48	; 0x30
   113cc:	sub	r2, r2, #48	; 0x30
   113d0:	add	r3, r3, r3, lsl #2
   113d4:	add	r3, r2, r3, lsl #1
   113d8:	str	r3, [r6, #12]
   113dc:	ldrb	r3, [r4, #4]
   113e0:	ldrb	r2, [r4, #5]
   113e4:	sub	r3, r3, #48	; 0x30
   113e8:	sub	r2, r2, #48	; 0x30
   113ec:	add	r3, r3, r3, lsl #2
   113f0:	add	r3, r2, r3, lsl #1
   113f4:	str	r3, [r6, #8]
   113f8:	ldrb	r3, [r4, #6]
   113fc:	ldrb	r2, [r4, #7]
   11400:	sub	r3, r3, #48	; 0x30
   11404:	str	r1, [r6, #32]
   11408:	sub	r2, r2, #48	; 0x30
   1140c:	add	r3, r3, r3, lsl #2
   11410:	add	r3, r2, r3, lsl #1
   11414:	str	r3, [r6, #4]
   11418:	bl	10b18 <mktime@plt>
   1141c:	cmn	r0, #1
   11420:	str	r0, [r9]
   11424:	movne	r0, #0
   11428:	bne	11340 <db_recover_feedback@@Base+0xf0>
   1142c:	b	11314 <db_recover_feedback@@Base+0xc4>
   11430:	ldrb	r1, [r4]
   11434:	mov	r2, #100	; 0x64
   11438:	ldrb	r3, [r4, #1]
   1143c:	add	r4, r4, #4
   11440:	sub	r1, r1, #48	; 0x30
   11444:	sub	r3, r3, #48	; 0x30
   11448:	add	r1, r1, r1, lsl #2
   1144c:	add	r1, r3, r1, lsl #1
   11450:	mul	r2, r2, r1
   11454:	str	r2, [r6, #20]
   11458:	ldrb	r1, [r4, #-2]
   1145c:	ldrb	r3, [r4, #-1]
   11460:	sub	r1, r1, #48	; 0x30
   11464:	sub	r3, r3, #48	; 0x30
   11468:	add	r1, r1, r1, lsl #2
   1146c:	add	r3, r3, r1, lsl #1
   11470:	add	r3, r2, r3
   11474:	sub	r3, r3, #1888	; 0x760
   11478:	sub	r3, r3, #12
   1147c:	str	r3, [r6, #20]
   11480:	b	1139c <db_recover_feedback@@Base+0x14c>
   11484:	ldrb	r2, [r4]
   11488:	add	r4, r4, #2
   1148c:	ldrb	r1, [r4, #-1]
   11490:	sub	r2, r2, #48	; 0x30
   11494:	sub	r1, r1, #48	; 0x30
   11498:	add	r2, r2, r2, lsl #2
   1149c:	add	r3, r1, r2, lsl #1
   114a0:	cmp	r3, #68	; 0x44
   114a4:	addle	r3, r3, #2000	; 0x7d0
   114a8:	addgt	r3, r3, #1888	; 0x760
   114ac:	addgt	r3, r3, #12
   114b0:	b	11474 <db_recover_feedback@@Base+0x224>
   114b4:	ldr	r2, [pc, #76]	; 11508 <db_recover_feedback@@Base+0x2b8>
   114b8:	ldr	r3, [pc, #76]	; 1150c <db_recover_feedback@@Base+0x2bc>
   114bc:	ldr	r2, [r5, r2]
   114c0:	ldr	r3, [r5, r3]
   114c4:	ldr	r4, [r2]
   114c8:	ldr	r5, [r3]
   114cc:	bl	10bf0 <__errno_location@plt>
   114d0:	ldr	r0, [r0]
   114d4:	bl	10ab8 <strerror@plt>
   114d8:	ldr	r2, [pc, #52]	; 11514 <db_recover_feedback@@Base+0x2c4>
   114dc:	mov	r3, r5
   114e0:	mov	r1, #1
   114e4:	add	r2, pc, r2
   114e8:	str	r0, [sp]
   114ec:	mov	r0, r4
   114f0:	bl	10b9c <__fprintf_chk@plt>
   114f4:	mov	r0, #1
   114f8:	b	11340 <db_recover_feedback@@Base+0xf0>
   114fc:	bl	10b84 <__stack_chk_fail@plt>
   11500:	andeq	r0, r1, r8, lsr sp
   11504:	andeq	r0, r0, ip, lsl #1
   11508:	muleq	r0, r8, r0
   1150c:	muleq	r0, r0, r0
   11510:	strdeq	r0, [r0], -r8
   11514:	andeq	r0, r0, r4, lsr #6
   11518:	ldr	r3, [pc, #72]	; 11568 <db_recover_feedback@@Base+0x318>
   1151c:	mov	r1, #1
   11520:	ldr	r2, [pc, #68]	; 1156c <db_recover_feedback@@Base+0x31c>
   11524:	ldr	r0, [pc, #68]	; 11570 <db_recover_feedback@@Base+0x320>
   11528:	add	r3, pc, r3
   1152c:	push	{lr}		; (str lr, [sp, #-4]!)
   11530:	sub	sp, sp, #12
   11534:	ldr	r0, [r3, r0]
   11538:	ldr	r3, [r3, r2]
   1153c:	ldr	ip, [pc, #48]	; 11574 <db_recover_feedback@@Base+0x324>
   11540:	ldr	r2, [pc, #48]	; 11578 <db_recover_feedback@@Base+0x328>
   11544:	add	ip, pc, ip
   11548:	ldr	r3, [r3]
   1154c:	add	r2, pc, r2
   11550:	ldr	r0, [r0]
   11554:	str	ip, [sp]
   11558:	bl	10b9c <__fprintf_chk@plt>
   1155c:	mov	r0, #1
   11560:	add	sp, sp, #12
   11564:	pop	{pc}		; (ldr pc, [sp], #4)
   11568:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1156c:	muleq	r0, r0, r0
   11570:	muleq	r0, r8, r0
   11574:	andeq	r0, r0, r0, asr #6
   11578:	andeq	r0, r0, r8, lsr #6
   1157c:	push	{r4, r5, r6, r7, lr}
   11580:	sub	sp, sp, #36	; 0x24
   11584:	ldr	r4, [pc, #160]	; 1162c <db_recover_feedback@@Base+0x3dc>
   11588:	add	r0, sp, #16
   1158c:	ldr	r3, [pc, #156]	; 11630 <db_recover_feedback@@Base+0x3e0>
   11590:	add	r1, sp, #20
   11594:	add	r4, pc, r4
   11598:	add	r2, sp, #24
   1159c:	ldr	r5, [r4, r3]
   115a0:	ldr	r3, [r5]
   115a4:	str	r3, [sp, #28]
   115a8:	bl	10bc0 <db_version@plt>
   115ac:	ldr	r3, [sp, #16]
   115b0:	ldr	r6, [sp, #20]
   115b4:	cmp	r3, #5
   115b8:	beq	11618 <db_recover_feedback@@Base+0x3c8>
   115bc:	ldr	r0, [pc, #112]	; 11634 <db_recover_feedback@@Base+0x3e4>
   115c0:	mov	lr, #5
   115c4:	ldr	r7, [pc, #108]	; 11638 <db_recover_feedback@@Base+0x3e8>
   115c8:	mov	ip, #3
   115cc:	ldr	r2, [pc, #104]	; 1163c <db_recover_feedback@@Base+0x3ec>
   115d0:	mov	r1, #1
   115d4:	ldr	r0, [r4, r0]
   115d8:	ldr	r4, [r4, r7]
   115dc:	add	r2, pc, r2
   115e0:	str	r3, [sp, #8]
   115e4:	ldr	r0, [r0]
   115e8:	ldr	r3, [r4]
   115ec:	str	r6, [sp, #12]
   115f0:	str	lr, [sp]
   115f4:	str	ip, [sp, #4]
   115f8:	bl	10b9c <__fprintf_chk@plt>
   115fc:	mov	r0, #1
   11600:	ldr	r2, [sp, #28]
   11604:	ldr	r3, [r5]
   11608:	cmp	r2, r3
   1160c:	bne	11628 <db_recover_feedback@@Base+0x3d8>
   11610:	add	sp, sp, #36	; 0x24
   11614:	pop	{r4, r5, r6, r7, pc}
   11618:	cmp	r6, #3
   1161c:	moveq	r0, #0
   11620:	bne	115bc <db_recover_feedback@@Base+0x36c>
   11624:	b	11600 <db_recover_feedback@@Base+0x3b0>
   11628:	bl	10b84 <__stack_chk_fail@plt>
   1162c:	andeq	r0, r1, r4, ror #20
   11630:	andeq	r0, r0, ip, lsl #1
   11634:	muleq	r0, r8, r0
   11638:	muleq	r0, r0, r0
   1163c:	andeq	r0, r0, r4, ror #5
   11640:	cmp	r0, #0
   11644:	bne	1165c <db_recover_feedback@@Base+0x40c>
   11648:	ldr	r3, [pc, #28]	; 1166c <db_recover_feedback@@Base+0x41c>
   1164c:	mov	r2, #2
   11650:	add	r3, pc, r3
   11654:	str	r2, [r3]
   11658:	bx	lr
   1165c:	ldr	r3, [pc, #12]	; 11670 <db_recover_feedback@@Base+0x420>
   11660:	add	r3, pc, r3
   11664:	str	r0, [r3]
   11668:	bx	lr
   1166c:	andeq	r0, r1, r0, asr sl
   11670:	andeq	r0, r1, r0, asr #20
   11674:	ldr	r3, [pc, #112]	; 116ec <db_recover_feedback@@Base+0x49c>
   11678:	cmp	r1, #0
   1167c:	ldr	r2, [pc, #108]	; 116f0 <db_recover_feedback@@Base+0x4a0>
   11680:	add	r3, pc, r3
   11684:	push	{r4, r5, r6, lr}
   11688:	sub	sp, sp, #288	; 0x120
   1168c:	ldr	r5, [r3, r2]
   11690:	mov	r6, r0
   11694:	ldr	r3, [r5]
   11698:	str	r3, [sp, #284]	; 0x11c
   1169c:	movne	r3, #0
   116a0:	ldreq	r3, [pc, #76]	; 116f4 <db_recover_feedback@@Base+0x4a4>
   116a4:	addeq	r3, pc, r3
   116a8:	add	r4, sp, #288	; 0x120
   116ac:	add	r0, sp, #8
   116b0:	str	r3, [r4, #-284]!	; 0xfffffee4
   116b4:	bl	10aac <sigemptyset@plt>
   116b8:	add	r2, sp, #144	; 0x90
   116bc:	mov	r1, r4
   116c0:	mov	r0, r6
   116c4:	mov	r3, #0
   116c8:	str	r3, [sp, #136]	; 0x88
   116cc:	bl	10b90 <sigaction@plt>
   116d0:	ldr	r2, [sp, #284]	; 0x11c
   116d4:	ldr	r3, [r5]
   116d8:	cmp	r2, r3
   116dc:	bne	116e8 <db_recover_feedback@@Base+0x498>
   116e0:	add	sp, sp, #288	; 0x120
   116e4:	pop	{r4, r5, r6, pc}
   116e8:	bl	10b84 <__stack_chk_fail@plt>
   116ec:	andeq	r0, r1, r8, ror r9
   116f0:	andeq	r0, r0, ip, lsl #1
   116f4:			; <UNDEFINED> instruction: 0xffffff94
   116f8:	push	{r3, lr}
   116fc:	mov	r0, #1
   11700:	mov	r1, #0
   11704:	bl	11674 <db_recover_feedback@@Base+0x424>
   11708:	mov	r0, #2
   1170c:	mov	r1, #0
   11710:	bl	11674 <db_recover_feedback@@Base+0x424>
   11714:	mov	r0, #13
   11718:	mov	r1, #0
   1171c:	bl	11674 <db_recover_feedback@@Base+0x424>
   11720:	mov	r0, #15
   11724:	mov	r1, #0
   11728:	pop	{r3, lr}
   1172c:	b	11674 <db_recover_feedback@@Base+0x424>
   11730:	ldr	r3, [pc, #12]	; 11744 <db_recover_feedback@@Base+0x4f4>
   11734:	ldr	r0, [pc, r3]
   11738:	adds	r0, r0, #0
   1173c:	movne	r0, #1
   11740:	bx	lr
   11744:	andeq	r0, r1, ip, ror #18
   11748:	ldr	r3, [pc, #36]	; 11774 <db_recover_feedback@@Base+0x524>
   1174c:	push	{r4, lr}
   11750:	ldr	r4, [pc, r3]
   11754:	cmp	r4, #0
   11758:	popeq	{r4, pc}
   1175c:	mov	r0, r4
   11760:	mov	r1, #1
   11764:	bl	11674 <db_recover_feedback@@Base+0x424>
   11768:	mov	r0, r4
   1176c:	pop	{r4, lr}
   11770:	b	10b60 <raise@plt>
   11774:	andeq	r0, r1, r0, asr r9
   11778:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1177c:	mov	r7, r0
   11780:	ldr	r6, [pc, #76]	; 117d4 <db_recover_feedback@@Base+0x584>
   11784:	mov	r8, r1
   11788:	ldr	r5, [pc, #72]	; 117d8 <db_recover_feedback@@Base+0x588>
   1178c:	mov	r9, r2
   11790:	add	r6, pc, r6
   11794:	bl	10a8c <_init@@Base>
   11798:	add	r5, pc, r5
   1179c:	rsb	r6, r5, r6
   117a0:	asrs	r6, r6, #2
   117a4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   117a8:	sub	r5, r5, #4
   117ac:	mov	r4, #0
   117b0:	add	r4, r4, #1
   117b4:	ldr	r3, [r5, #4]!
   117b8:	mov	r0, r7
   117bc:	mov	r1, r8
   117c0:	mov	r2, r9
   117c4:	blx	r3
   117c8:	cmp	r4, r6
   117cc:	bne	117b0 <db_recover_feedback@@Base+0x560>
   117d0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   117d4:	andeq	r0, r1, r8, asr r7
   117d8:	andeq	r0, r1, ip, asr #14
   117dc:	bx	lr

Disassembly of section .fini:

000117e0 <_fini@@Base>:
   117e0:	push	{r3, lr}
   117e4:	pop	{r3, pc}
