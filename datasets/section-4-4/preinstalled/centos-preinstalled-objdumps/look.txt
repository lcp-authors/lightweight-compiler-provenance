
centos-preinstalled/look:     file format elf32-littlearm


Disassembly of section .init:

00010a04 <.init>:
   10a04:	push	{r3, lr}
   10a08:	bl	11110 <abort@plt+0x56c>
   10a0c:	pop	{r3, pc}

Disassembly of section .plt:

00010a10 <free@plt-0x14>:
   10a10:	push	{lr}		; (str lr, [sp, #-4]!)
   10a14:	ldr	lr, [pc, #4]	; 10a20 <free@plt-0x4>
   10a18:	add	lr, pc, lr
   10a1c:	ldr	pc, [lr, #8]!
   10a20:	andeq	r1, r1, r0, ror #11

00010a24 <free@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a30 <ferror@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a3c <_exit@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a48 <mmap64@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #69632	; 0x11000
   10a50:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a54 <dcgettext@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #69632	; 0x11000
   10a5c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a60 <__stack_chk_fail@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #69632	; 0x11000
   10a68:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a6c <textdomain@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #69632	; 0x11000
   10a74:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a78 <err@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #69632	; 0x11000
   10a80:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a84 <__fxstat64@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #69632	; 0x11000
   10a8c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a90 <_IO_putc@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #69632	; 0x11000
   10a98:	ldr	pc, [ip, #1432]!	; 0x598

00010a9c <__fpending@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #69632	; 0x11000
   10aa4:	ldr	pc, [ip, #1424]!	; 0x590

00010aa8 <open64@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #69632	; 0x11000
   10ab0:	ldr	pc, [ip, #1416]!	; 0x588

00010ab4 <malloc@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #69632	; 0x11000
   10abc:	ldr	pc, [ip, #1408]!	; 0x580

00010ac0 <__libc_start_main@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #69632	; 0x11000
   10ac8:	ldr	pc, [ip, #1400]!	; 0x578

00010acc <__gmon_start__@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1392]!	; 0x570

00010ad8 <getopt_long@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1384]!	; 0x568

00010ae4 <__ctype_b_loc@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1376]!	; 0x560

00010af0 <exit@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1368]!	; 0x558

00010afc <strlen@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1360]!	; 0x550

00010b08 <strchr@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1352]!	; 0x548

00010b14 <warnx@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1344]!	; 0x540

00010b20 <__errno_location@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1336]!	; 0x538

00010b2c <strncasecmp@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1328]!	; 0x530

00010b38 <__cxa_atexit@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1320]!	; 0x528

00010b44 <__printf_chk@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1312]!	; 0x520

00010b50 <__fprintf_chk@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1304]!	; 0x518

00010b5c <fclose@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1296]!	; 0x510

00010b68 <setlocale@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1288]!	; 0x508

00010b74 <warn@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1280]!	; 0x500

00010b80 <bindtextdomain@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b8c <fputs@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b98 <strncmp@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1256]!	; 0x4e8

00010ba4 <abort@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1248]!	; 0x4e0

Disassembly of section .text:

00010bb0 <.text>:
   10bb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bb4:	movw	r5, #8360	; 0x20a8
   10bb8:	movt	r5, #2
   10bbc:	sub	sp, sp, #132	; 0x84
   10bc0:	mov	r7, r1
   10bc4:	mov	r8, r0
   10bc8:	ldr	r3, [r5]
   10bcc:	movw	r1, #5596	; 0x15dc
   10bd0:	mov	r0, #6
   10bd4:	movt	r1, #1
   10bd8:	movw	r4, #8392	; 0x20c8
   10bdc:	movw	r6, #6028	; 0x178c
   10be0:	str	r3, [sp, #124]	; 0x7c
   10be4:	bl	10b68 <setlocale@plt>
   10be8:	movw	r0, #6052	; 0x17a4
   10bec:	movw	r1, #6064	; 0x17b0
   10bf0:	movt	r0, #1
   10bf4:	movt	r1, #1
   10bf8:	bl	10b80 <bindtextdomain@plt>
   10bfc:	movw	r0, #6052	; 0x17a4
   10c00:	movt	r0, #1
   10c04:	movt	r4, #2
   10c08:	bl	10a6c <textdomain@plt>
   10c0c:	movw	r0, #4996	; 0x1384
   10c10:	movt	r0, #1
   10c14:	movw	r9, #8384	; 0x20c0
   10c18:	bl	11528 <abort@plt+0x984>
   10c1c:	movw	r1, #5596	; 0x15dc
   10c20:	mov	r0, #6
   10c24:	movt	r1, #1
   10c28:	bl	10b68 <setlocale@plt>
   10c2c:	movt	r6, #1
   10c30:	mov	r3, #0
   10c34:	movt	r9, #2
   10c38:	mov	fp, r3
   10c3c:	mov	sl, r3
   10c40:	str	r3, [r4, #16]
   10c44:	str	sl, [sp]
   10c48:	movw	r2, #6116	; 0x17e4
   10c4c:	movw	r3, #5476	; 0x1564
   10c50:	movt	r2, #1
   10c54:	movt	r3, #1
   10c58:	mov	r0, r8
   10c5c:	mov	r1, r7
   10c60:	bl	10ad8 <getopt_long@plt>
   10c64:	cmn	r0, #1
   10c68:	beq	10d98 <abort@plt+0x1f4>
   10c6c:	sub	r0, r0, #86	; 0x56
   10c70:	cmp	r0, #30
   10c74:	ldrls	pc, [pc, r0, lsl #2]
   10c78:	b	10d88 <abort@plt+0x1e4>
   10c7c:	andeq	r0, r1, r4, lsl #26
   10c80:	andeq	r0, r1, r8, lsl #27
   10c84:	andeq	r0, r1, r8, lsl #27
   10c88:	andeq	r0, r1, r8, lsl #27
   10c8c:	andeq	r0, r1, r8, lsl #27
   10c90:	andeq	r0, r1, r8, lsl #27
   10c94:	andeq	r0, r1, r8, lsl #27
   10c98:	andeq	r0, r1, r8, lsl #27
   10c9c:	andeq	r0, r1, r8, lsl #27
   10ca0:	andeq	r0, r1, r8, lsl #27
   10ca4:	andeq	r0, r1, r8, lsl #27
   10ca8:	strdeq	r0, [r1], -r8
   10cac:	andeq	r0, r1, r8, lsl #27
   10cb0:	andeq	r0, r1, r8, lsl #27
   10cb4:	andeq	r0, r1, ip, ror sp
   10cb8:	andeq	r0, r1, r8, lsl #27
   10cbc:	andeq	r0, r1, r0, ror sp
   10cc0:	andeq	r0, r1, r8, lsl #27
   10cc4:	andeq	r0, r1, r0, ror #26
   10cc8:	andeq	r0, r1, r8, lsl #27
   10ccc:	andeq	r0, r1, r8, lsl #27
   10cd0:	andeq	r0, r1, r8, lsl #27
   10cd4:	andeq	r0, r1, r8, lsl #27
   10cd8:	andeq	r0, r1, r8, lsl #27
   10cdc:	andeq	r0, r1, r8, lsl #27
   10ce0:	andeq	r0, r1, r8, lsl #27
   10ce4:	andeq	r0, r1, r8, lsl #27
   10ce8:	andeq	r0, r1, r8, lsl #27
   10cec:	andeq	r0, r1, r8, lsl #27
   10cf0:	andeq	r0, r1, r8, lsl #27
   10cf4:	andeq	r0, r1, r4, asr sp
   10cf8:	movw	r6, #6004	; 0x1774
   10cfc:	movt	r6, #1
   10d00:	b	10c44 <abort@plt+0xa0>
   10d04:	mov	r2, #5
   10d08:	movw	r1, #6084	; 0x17c4
   10d0c:	mov	r0, #0
   10d10:	movt	r1, #1
   10d14:	bl	10a54 <dcgettext@plt>
   10d18:	movw	r2, #8352	; 0x20a0
   10d1c:	movt	r2, #2
   10d20:	movw	r3, #6096	; 0x17d0
   10d24:	movt	r3, #1
   10d28:	ldr	r2, [r2]
   10d2c:	mov	r1, r0
   10d30:	mov	r0, #1
   10d34:	bl	10b44 <__printf_chk@plt>
   10d38:	mov	r0, #0
   10d3c:	ldr	r2, [sp, #124]	; 0x7c
   10d40:	ldr	r3, [r5]
   10d44:	cmp	r2, r3
   10d48:	bne	110a8 <abort@plt+0x504>
   10d4c:	add	sp, sp, #132	; 0x84
   10d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d54:	ldr	r3, [r9]
   10d58:	ldrsb	fp, [r3]
   10d5c:	b	10c44 <abort@plt+0xa0>
   10d60:	movw	r3, #8376	; 0x20b8
   10d64:	movt	r3, #2
   10d68:	ldr	r0, [r3]
   10d6c:	bl	11208 <abort@plt+0x664>
   10d70:	mov	r3, #1
   10d74:	str	r3, [r4, #12]
   10d78:	b	10c44 <abort@plt+0xa0>
   10d7c:	mov	r3, #1
   10d80:	str	r3, [r4, #8]
   10d84:	b	10c44 <abort@plt+0xa0>
   10d88:	movw	r3, #8372	; 0x20b4
   10d8c:	movt	r3, #2
   10d90:	ldr	r0, [r3]
   10d94:	bl	11208 <abort@plt+0x664>
   10d98:	movw	r3, #8368	; 0x20b0
   10d9c:	movt	r3, #2
   10da0:	ldr	r3, [r3]
   10da4:	rsb	r8, r3, r8
   10da8:	cmp	r8, #1
   10dac:	add	r2, r7, r3, lsl #2
   10db0:	beq	10f94 <abort@plt+0x3f0>
   10db4:	cmp	r8, #2
   10db8:	bne	10d88 <abort@plt+0x1e4>
   10dbc:	ldr	r3, [r7, r3, lsl #2]
   10dc0:	ldr	r6, [r2, #4]
   10dc4:	str	r3, [r4, #16]
   10dc8:	cmp	fp, #0
   10dcc:	beq	10de8 <abort@plt+0x244>
   10dd0:	ldr	r0, [r4, #16]
   10dd4:	mov	r1, fp
   10dd8:	bl	10b08 <strchr@plt>
   10ddc:	cmp	r0, #0
   10de0:	movne	r3, #0
   10de4:	strbne	r3, [r0, #1]
   10de8:	mov	r1, #0
   10dec:	mov	r0, r6
   10df0:	mov	r2, r1
   10df4:	bl	10aa8 <open64@plt>
   10df8:	subs	r7, r0, #0
   10dfc:	blt	110ac <abort@plt+0x508>
   10e00:	mov	r0, #3
   10e04:	mov	r1, r7
   10e08:	add	r2, sp, #16
   10e0c:	bl	10a84 <__fxstat64@plt>
   10e10:	cmp	r0, #0
   10e14:	bne	110ac <abort@plt+0x508>
   10e18:	mov	r2, #1
   10e1c:	str	r7, [sp]
   10e20:	mov	r3, r2
   10e24:	mov	r8, #0
   10e28:	mov	r9, #0
   10e2c:	ldr	r1, [sp, #64]	; 0x40
   10e30:	strd	r8, [sp, #8]
   10e34:	bl	10a48 <mmap64@plt>
   10e38:	cmn	r0, #1
   10e3c:	mov	r7, r0
   10e40:	beq	110ac <abort@plt+0x508>
   10e44:	ldr	r3, [r4, #8]
   10e48:	movw	r6, #8392	; 0x20c8
   10e4c:	movt	r6, #2
   10e50:	ldr	r8, [sp, #64]	; 0x40
   10e54:	cmp	r3, #0
   10e58:	add	r8, r0, r8
   10e5c:	ldrne	sl, [r6, #16]
   10e60:	movne	r9, sl
   10e64:	bne	10f74 <abort@plt+0x3d0>
   10e68:	ldr	r0, [r6, #16]
   10e6c:	bl	10afc <strlen@plt>
   10e70:	str	r0, [r6, #4]
   10e74:	ldr	r9, [r4, #4]
   10e78:	movw	r6, #8392	; 0x20c8
   10e7c:	movt	r6, #2
   10e80:	add	r9, r9, #1
   10e84:	mov	r0, r9
   10e88:	bl	10ab4 <malloc@plt>
   10e8c:	rsbs	r3, r0, #1
   10e90:	movcc	r3, #0
   10e94:	cmp	r9, #0
   10e98:	moveq	r3, #0
   10e9c:	cmp	r3, #0
   10ea0:	bne	110c0 <abort@plt+0x51c>
   10ea4:	rsb	r3, r7, r8
   10ea8:	str	r0, [r6]
   10eac:	add	r6, r3, r3, lsr #31
   10eb0:	add	r6, r7, r6, asr #1
   10eb4:	b	10ec4 <abort@plt+0x320>
   10eb8:	ldrsb	r3, [r6], #1
   10ebc:	cmp	r3, #10
   10ec0:	beq	10ecc <abort@plt+0x328>
   10ec4:	cmp	r8, r6
   10ec8:	bhi	10eb8 <abort@plt+0x314>
   10ecc:	mov	r9, r8
   10ed0:	cmp	r9, r7
   10ed4:	movls	r3, #0
   10ed8:	movhi	r3, #1
   10edc:	cmp	r6, r9
   10ee0:	movcs	r3, #0
   10ee4:	cmp	r3, #0
   10ee8:	beq	10fbc <abort@plt+0x418>
   10eec:	mov	r0, r6
   10ef0:	mov	r1, r9
   10ef4:	bl	112b0 <abort@plt+0x70c>
   10ef8:	cmp	r0, #1
   10efc:	moveq	r7, r6
   10f00:	moveq	r6, r9
   10f04:	rsb	r3, r7, r6
   10f08:	add	r3, r3, r3, lsr #31
   10f0c:	asr	r2, r3, #1
   10f10:	add	r3, r7, r2
   10f14:	cmp	r6, r3
   10f18:	bls	10f44 <abort@plt+0x3a0>
   10f1c:	ldrsb	r2, [r7, r2]
   10f20:	add	r3, r3, #1
   10f24:	cmp	r2, #10
   10f28:	bne	10f3c <abort@plt+0x398>
   10f2c:	b	10f44 <abort@plt+0x3a0>
   10f30:	ldrsb	r2, [r3], #1
   10f34:	cmp	r2, #10
   10f38:	beq	10f44 <abort@plt+0x3a0>
   10f3c:	cmp	r3, r6
   10f40:	bne	10f30 <abort@plt+0x38c>
   10f44:	mov	r9, r6
   10f48:	mov	r6, r3
   10f4c:	b	10ed0 <abort@plt+0x32c>
   10f50:	bl	10ae4 <__ctype_b_loc@plt>
   10f54:	sxtb	r3, r6
   10f58:	sxth	r3, r3
   10f5c:	lsl	r3, r3, #1
   10f60:	ldr	r2, [r0]
   10f64:	ldrh	r3, [r2, r3]
   10f68:	tst	r3, #8
   10f6c:	strbne	r6, [sl]
   10f70:	addne	sl, sl, #1
   10f74:	ldrb	r6, [r9], #1
   10f78:	cmp	r6, #0
   10f7c:	bne	10f50 <abort@plt+0x3ac>
   10f80:	strb	r6, [sl]
   10f84:	ldr	r3, [r4, #16]
   10f88:	rsb	sl, r3, sl
   10f8c:	str	sl, [r4, #4]
   10f90:	b	10e74 <abort@plt+0x2d0>
   10f94:	ldr	r3, [r7, r3, lsl #2]
   10f98:	str	r8, [r4, #12]
   10f9c:	str	r8, [r4, #8]
   10fa0:	str	r3, [r4, #16]
   10fa4:	b	10dc8 <abort@plt+0x224>
   10fa8:	ldrsb	r3, [r7], #1
   10fac:	cmp	r3, #10
   10fb0:	beq	10fbc <abort@plt+0x418>
   10fb4:	cmp	r7, r8
   10fb8:	bne	10fa8 <abort@plt+0x404>
   10fbc:	cmp	r8, r7
   10fc0:	bls	11090 <abort@plt+0x4ec>
   10fc4:	mov	r0, r7
   10fc8:	mov	r1, r8
   10fcc:	bl	112b0 <abort@plt+0x70c>
   10fd0:	cmn	r0, #1
   10fd4:	beq	11090 <abort@plt+0x4ec>
   10fd8:	cmp	r0, #0
   10fdc:	bne	10fa8 <abort@plt+0x404>
   10fe0:	cmp	r7, #0
   10fe4:	beq	11044 <abort@plt+0x4a0>
   10fe8:	movw	r9, #8376	; 0x20b8
   10fec:	movt	r9, #2
   10ff0:	mov	r6, r7
   10ff4:	mov	r0, r6
   10ff8:	mov	r1, r8
   10ffc:	bl	112b0 <abort@plt+0x70c>
   11000:	cmp	r0, #0
   11004:	bne	11044 <abort@plt+0x4a0>
   11008:	mov	r0, r6
   1100c:	mov	r1, r8
   11010:	bl	112b0 <abort@plt+0x70c>
   11014:	cmp	r0, #0
   11018:	beq	11058 <abort@plt+0x4b4>
   1101c:	ldrsb	r2, [r6]
   11020:	add	r3, r6, #1
   11024:	cmp	r2, #10
   11028:	bne	1103c <abort@plt+0x498>
   1102c:	b	11080 <abort@plt+0x4dc>
   11030:	ldrsb	r2, [r3], #1
   11034:	cmp	r2, #10
   11038:	beq	11080 <abort@plt+0x4dc>
   1103c:	cmp	r8, r3
   11040:	bhi	11030 <abort@plt+0x48c>
   11044:	ldr	r0, [r4]
   11048:	bl	10a24 <free@plt>
   1104c:	rsbs	r0, r7, #1
   11050:	movcc	r0, #0
   11054:	b	10d3c <abort@plt+0x198>
   11058:	ldrsb	r0, [r6], #1
   1105c:	ldr	r1, [r9]
   11060:	bl	10a90 <_IO_putc@plt>
   11064:	cmn	r0, #1
   11068:	beq	11098 <abort@plt+0x4f4>
   1106c:	ldrsb	r2, [r6, #-1]
   11070:	mov	r3, r6
   11074:	cmp	r2, #10
   11078:	cmpne	r8, r6
   1107c:	bhi	11058 <abort@plt+0x4b4>
   11080:	cmp	r8, r3
   11084:	bls	11044 <abort@plt+0x4a0>
   11088:	mov	r6, r3
   1108c:	b	10ff4 <abort@plt+0x450>
   11090:	mov	r7, #0
   11094:	b	11044 <abort@plt+0x4a0>
   11098:	movw	r1, #6156	; 0x180c
   1109c:	mov	r0, #1
   110a0:	movt	r1, #1
   110a4:	bl	10a78 <err@plt>
   110a8:	bl	10a60 <__stack_chk_fail@plt>
   110ac:	movw	r1, #6124	; 0x17ec
   110b0:	mov	r2, r6
   110b4:	mov	r0, #1
   110b8:	movt	r1, #1
   110bc:	bl	10a78 <err@plt>
   110c0:	movw	r1, #6128	; 0x17f0
   110c4:	mov	r2, r9
   110c8:	mov	r0, #1
   110cc:	movt	r1, #1
   110d0:	bl	10a78 <err@plt>
   110d4:	mov	fp, #0
   110d8:	mov	lr, #0
   110dc:	pop	{r1}		; (ldr r1, [sp], #4)
   110e0:	mov	r2, sp
   110e4:	push	{r2}		; (str r2, [sp, #-4]!)
   110e8:	push	{r0}		; (str r0, [sp, #-4]!)
   110ec:	ldr	ip, [pc, #16]	; 11104 <abort@plt+0x560>
   110f0:	push	{ip}		; (str ip, [sp, #-4]!)
   110f4:	ldr	r0, [pc, #12]	; 11108 <abort@plt+0x564>
   110f8:	ldr	r3, [pc, #12]	; 1110c <abort@plt+0x568>
   110fc:	bl	10ac0 <__libc_start_main@plt>
   11100:	bl	10ba4 <abort@plt>
   11104:	andeq	r1, r1, r4, lsr #10
   11108:			; <UNDEFINED> instruction: 0x00010bb0
   1110c:	andeq	r1, r1, r0, asr #9
   11110:	ldr	r3, [pc, #20]	; 1112c <abort@plt+0x588>
   11114:	ldr	r2, [pc, #20]	; 11130 <abort@plt+0x58c>
   11118:	add	r3, pc, r3
   1111c:	ldr	r2, [r3, r2]
   11120:	cmp	r2, #0
   11124:	bxeq	lr
   11128:	b	10acc <__gmon_start__@plt>
   1112c:	andeq	r0, r1, r0, ror #29
   11130:	muleq	r0, r0, r0
   11134:	push	{r3, lr}
   11138:	movw	r0, #8348	; 0x209c
   1113c:	ldr	r3, [pc, #36]	; 11168 <abort@plt+0x5c4>
   11140:	movt	r0, #2
   11144:	rsb	r3, r0, r3
   11148:	cmp	r3, #6
   1114c:	popls	{r3, pc}
   11150:	movw	r3, #0
   11154:	movt	r3, #0
   11158:	cmp	r3, #0
   1115c:	popeq	{r3, pc}
   11160:	blx	r3
   11164:	pop	{r3, pc}
   11168:	muleq	r2, pc, r0	; <UNPREDICTABLE>
   1116c:	push	{r3, lr}
   11170:	movw	r0, #8348	; 0x209c
   11174:	movw	r3, #8348	; 0x209c
   11178:	movt	r0, #2
   1117c:	movt	r3, #2
   11180:	rsb	r3, r0, r3
   11184:	asr	r3, r3, #2
   11188:	add	r3, r3, r3, lsr #31
   1118c:	asrs	r1, r3, #1
   11190:	popeq	{r3, pc}
   11194:	movw	r2, #0
   11198:	movt	r2, #0
   1119c:	cmp	r2, #0
   111a0:	popeq	{r3, pc}
   111a4:	blx	r2
   111a8:	pop	{r3, pc}
   111ac:	push	{r4, lr}
   111b0:	movw	r4, #8388	; 0x20c4
   111b4:	movt	r4, #2
   111b8:	ldrb	r3, [r4]
   111bc:	cmp	r3, #0
   111c0:	popne	{r4, pc}
   111c4:	bl	11134 <abort@plt+0x590>
   111c8:	mov	r3, #1
   111cc:	strb	r3, [r4]
   111d0:	pop	{r4, pc}
   111d4:	movw	r0, #7940	; 0x1f04
   111d8:	movt	r0, #2
   111dc:	push	{r3, lr}
   111e0:	ldr	r3, [r0]
   111e4:	cmp	r3, #0
   111e8:	beq	11200 <abort@plt+0x65c>
   111ec:	movw	r3, #0
   111f0:	movt	r3, #0
   111f4:	cmp	r3, #0
   111f8:	beq	11200 <abort@plt+0x65c>
   111fc:	blx	r3
   11200:	pop	{r3, lr}
   11204:	b	1116c <abort@plt+0x5c8>
   11208:	push	{r4, lr}
   1120c:	mov	r2, #5
   11210:	mov	r4, r0
   11214:	movw	r1, #5588	; 0x15d4
   11218:	mov	r0, #0
   1121c:	movt	r1, #1
   11220:	bl	10a54 <dcgettext@plt>
   11224:	mov	r1, r4
   11228:	bl	10b8c <fputs@plt>
   1122c:	mov	r2, #5
   11230:	movw	r1, #5600	; 0x15e0
   11234:	mov	r0, #0
   11238:	movt	r1, #1
   1123c:	bl	10a54 <dcgettext@plt>
   11240:	movw	r3, #8352	; 0x20a0
   11244:	movt	r3, #2
   11248:	mov	r1, #1
   1124c:	ldr	r3, [r3]
   11250:	mov	r2, r0
   11254:	mov	r0, r4
   11258:	bl	10b50 <__fprintf_chk@plt>
   1125c:	mov	r2, #5
   11260:	movw	r1, #5632	; 0x1600
   11264:	mov	r0, #0
   11268:	movt	r1, #1
   1126c:	bl	10a54 <dcgettext@plt>
   11270:	mov	r1, r4
   11274:	bl	10b8c <fputs@plt>
   11278:	mov	r2, #5
   1127c:	movw	r1, #5644	; 0x160c
   11280:	mov	r0, #0
   11284:	movt	r1, #1
   11288:	bl	10a54 <dcgettext@plt>
   1128c:	mov	r1, r4
   11290:	bl	10b8c <fputs@plt>
   11294:	movw	r3, #8372	; 0x20b4
   11298:	movt	r3, #2
   1129c:	ldr	r0, [r3]
   112a0:	subs	r3, r4, r0
   112a4:	rsbs	r0, r3, #0
   112a8:	adcs	r0, r0, r3
   112ac:	bl	10af0 <exit@plt>
   112b0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   112b4:	cmp	r0, r1
   112b8:	movw	r8, #8392	; 0x20c8
   112bc:	movt	r8, #2
   112c0:	ldr	r7, [r8]
   112c4:	ldr	r6, [r8, #4]
   112c8:	bcs	11340 <abort@plt+0x79c>
   112cc:	ldrb	r4, [r0]
   112d0:	cmp	r4, #10
   112d4:	beq	11340 <abort@plt+0x79c>
   112d8:	cmp	r6, #0
   112dc:	beq	11340 <abort@plt+0x79c>
   112e0:	sub	r9, r1, #1
   112e4:	mov	r5, r0
   112e8:	b	11300 <abort@plt+0x75c>
   112ec:	ldrb	r4, [r5, #1]!
   112f0:	cmp	r4, #10
   112f4:	beq	11340 <abort@plt+0x79c>
   112f8:	cmp	r6, #0
   112fc:	beq	11340 <abort@plt+0x79c>
   11300:	ldr	r3, [r8, #8]
   11304:	cmp	r3, #0
   11308:	beq	1132c <abort@plt+0x788>
   1130c:	bl	10ae4 <__ctype_b_loc@plt>
   11310:	sxtb	r3, r4
   11314:	sxth	r3, r3
   11318:	lsl	r3, r3, #1
   1131c:	ldr	r2, [r0]
   11320:	ldrh	r3, [r2, r3]
   11324:	tst	r3, #8
   11328:	beq	11338 <abort@plt+0x794>
   1132c:	strb	r4, [r7]
   11330:	sub	r6, r6, #1
   11334:	add	r7, r7, #1
   11338:	cmp	r5, r9
   1133c:	bne	112ec <abort@plt+0x748>
   11340:	mov	r3, #0
   11344:	strb	r3, [r7]
   11348:	ldr	r2, [r8, #12]
   1134c:	movw	r3, #8392	; 0x20c8
   11350:	movt	r3, #2
   11354:	cmp	r2, #0
   11358:	ldr	r0, [r3]
   1135c:	ldr	r1, [r3, #16]
   11360:	ldr	r2, [r3, #4]
   11364:	beq	1137c <abort@plt+0x7d8>
   11368:	bl	10b2c <strncasecmp@plt>
   1136c:	cmp	r0, #0
   11370:	lsrle	r0, r0, #31
   11374:	mvngt	r0, #0
   11378:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1137c:	bl	10b98 <strncmp@plt>
   11380:	b	1136c <abort@plt+0x7c8>
   11384:	movw	r3, #8376	; 0x20b8
   11388:	movt	r3, #2
   1138c:	push	{r4, r5, r6, lr}
   11390:	ldr	r4, [r3]
   11394:	mov	r0, r4
   11398:	bl	10a9c <__fpending@plt>
   1139c:	mov	r6, r0
   113a0:	mov	r0, r4
   113a4:	bl	10a30 <ferror@plt>
   113a8:	mov	r5, r0
   113ac:	mov	r0, r4
   113b0:	bl	10b5c <fclose@plt>
   113b4:	adds	r4, r0, #0
   113b8:	movne	r4, #1
   113bc:	cmp	r5, #0
   113c0:	bne	11438 <abort@plt+0x894>
   113c4:	cmp	r4, #0
   113c8:	beq	113e4 <abort@plt+0x840>
   113cc:	cmp	r6, #0
   113d0:	beq	11488 <abort@plt+0x8e4>
   113d4:	bl	10b20 <__errno_location@plt>
   113d8:	ldr	r3, [r0]
   113dc:	cmp	r3, #32
   113e0:	bne	1149c <abort@plt+0x8f8>
   113e4:	movw	r3, #8372	; 0x20b4
   113e8:	movt	r3, #2
   113ec:	ldr	r4, [r3]
   113f0:	mov	r0, r4
   113f4:	bl	10a9c <__fpending@plt>
   113f8:	mov	r6, r0
   113fc:	mov	r0, r4
   11400:	bl	10a30 <ferror@plt>
   11404:	mov	r5, r0
   11408:	mov	r0, r4
   1140c:	bl	10b5c <fclose@plt>
   11410:	adds	r4, r0, #0
   11414:	movne	r4, #1
   11418:	cmp	r5, #0
   1141c:	beq	11464 <abort@plt+0x8c0>
   11420:	cmp	r4, #0
   11424:	bne	11430 <abort@plt+0x88c>
   11428:	bl	10b20 <__errno_location@plt>
   1142c:	str	r4, [r0]
   11430:	mov	r0, #1
   11434:	bl	10a3c <_exit@plt>
   11438:	cmp	r4, #0
   1143c:	bne	113d4 <abort@plt+0x830>
   11440:	bl	10b20 <__errno_location@plt>
   11444:	str	r4, [r0]
   11448:	mov	r2, #5
   1144c:	movw	r1, #5992	; 0x1768
   11450:	mov	r0, #0
   11454:	movt	r1, #1
   11458:	bl	10a54 <dcgettext@plt>
   1145c:	bl	10b14 <warnx@plt>
   11460:	b	11430 <abort@plt+0x88c>
   11464:	cmp	r4, #0
   11468:	popeq	{r4, r5, r6, pc}
   1146c:	cmp	r6, #0
   11470:	bne	11430 <abort@plt+0x88c>
   11474:	bl	10b20 <__errno_location@plt>
   11478:	ldr	r3, [r0]
   1147c:	cmp	r3, #9
   11480:	bne	11430 <abort@plt+0x88c>
   11484:	pop	{r4, r5, r6, pc}
   11488:	bl	10b20 <__errno_location@plt>
   1148c:	ldr	r3, [r0]
   11490:	cmp	r3, #9
   11494:	bne	113dc <abort@plt+0x838>
   11498:	b	113e4 <abort@plt+0x840>
   1149c:	cmp	r3, #0
   114a0:	beq	11448 <abort@plt+0x8a4>
   114a4:	mov	r2, #5
   114a8:	movw	r1, #5992	; 0x1768
   114ac:	mov	r0, #0
   114b0:	movt	r1, #1
   114b4:	bl	10a54 <dcgettext@plt>
   114b8:	bl	10b74 <warn@plt>
   114bc:	b	11430 <abort@plt+0x88c>
   114c0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   114c4:	mov	r7, r0
   114c8:	ldr	r6, [pc, #76]	; 1151c <abort@plt+0x978>
   114cc:	mov	r8, r1
   114d0:	ldr	r5, [pc, #72]	; 11520 <abort@plt+0x97c>
   114d4:	mov	r9, r2
   114d8:	add	r6, pc, r6
   114dc:	bl	10a04 <free@plt-0x20>
   114e0:	add	r5, pc, r5
   114e4:	rsb	r6, r5, r6
   114e8:	asrs	r6, r6, #2
   114ec:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   114f0:	sub	r5, r5, #4
   114f4:	mov	r4, #0
   114f8:	add	r4, r4, #1
   114fc:	ldr	r3, [r5, #4]!
   11500:	mov	r0, r7
   11504:	mov	r1, r8
   11508:	mov	r2, r9
   1150c:	blx	r3
   11510:	cmp	r4, r6
   11514:	bne	114f8 <abort@plt+0x954>
   11518:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1151c:	andeq	r0, r1, r0, lsr #20
   11520:	andeq	r0, r1, r4, lsl sl
   11524:	bx	lr
   11528:	ldr	r3, [pc, #28]	; 1154c <abort@plt+0x9a8>
   1152c:	mov	r1, #0
   11530:	ldr	r2, [pc, #24]	; 11550 <abort@plt+0x9ac>
   11534:	add	r3, pc, r3
   11538:	ldr	r3, [r3, r2]
   1153c:	cmp	r3, #0
   11540:	ldrne	r2, [r3]
   11544:	moveq	r2, r3
   11548:	b	10b38 <__cxa_atexit@plt>
   1154c:	andeq	r0, r1, r4, asr #21
   11550:	muleq	r0, r4, r0

Disassembly of section .fini:

00011554 <.fini>:
   11554:	push	{r3, lr}
   11558:	pop	{r3, pc}
