
centos-preinstalled/chmod:     file format elf32-littlearm


Disassembly of section .init:

000111d0 <.init>:
   111d0:	push	{r3, lr}
   111d4:	bl	123c4 <__assert_fail@plt+0xeb0>
   111d8:	pop	{r3, pc}

Disassembly of section .plt:

000111dc <fdopen@plt-0x14>:
   111dc:	push	{lr}		; (str lr, [sp, #-4]!)
   111e0:	ldr	lr, [pc, #4]	; 111ec <fdopen@plt-0x4>
   111e4:	add	lr, pc, lr
   111e8:	ldr	pc, [lr, #8]!
   111ec:	andeq	r9, r1, r4, lsl lr

000111f0 <fdopen@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #102400	; 0x19000
   111f8:	ldr	pc, [ip, #3604]!	; 0xe14

000111fc <fstatfs64@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #102400	; 0x19000
   11204:	ldr	pc, [ip, #3596]!	; 0xe0c

00011208 <calloc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #102400	; 0x19000
   11210:	ldr	pc, [ip, #3588]!	; 0xe04

00011214 <fputs_unlocked@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #102400	; 0x19000
   1121c:	ldr	pc, [ip, #3580]!	; 0xdfc

00011220 <raise@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #102400	; 0x19000
   11228:	ldr	pc, [ip, #3572]!	; 0xdf4

0001122c <strcmp@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #102400	; 0x19000
   11234:	ldr	pc, [ip, #3564]!	; 0xdec

00011238 <fflush@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #102400	; 0x19000
   11240:	ldr	pc, [ip, #3556]!	; 0xde4

00011244 <memmove@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #102400	; 0x19000
   1124c:	ldr	pc, [ip, #3548]!	; 0xddc

00011250 <free@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #102400	; 0x19000
   11258:	ldr	pc, [ip, #3540]!	; 0xdd4

0001125c <_exit@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #102400	; 0x19000
   11264:	ldr	pc, [ip, #3532]!	; 0xdcc

00011268 <memcpy@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #102400	; 0x19000
   11270:	ldr	pc, [ip, #3524]!	; 0xdc4

00011274 <mbsinit@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #102400	; 0x19000
   1127c:	ldr	pc, [ip, #3516]!	; 0xdbc

00011280 <memcmp@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #102400	; 0x19000
   11288:	ldr	pc, [ip, #3508]!	; 0xdb4

0001128c <dcgettext@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #102400	; 0x19000
   11294:	ldr	pc, [ip, #3500]!	; 0xdac

00011298 <__stack_chk_fail@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #102400	; 0x19000
   112a0:	ldr	pc, [ip, #3492]!	; 0xda4

000112a4 <realloc@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #102400	; 0x19000
   112ac:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b0 <textdomain@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #102400	; 0x19000
   112b8:	ldr	pc, [ip, #3476]!	; 0xd94

000112bc <__fxstatat64@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #102400	; 0x19000
   112c4:	ldr	pc, [ip, #3468]!	; 0xd8c

000112c8 <iswprint@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #102400	; 0x19000
   112d0:	ldr	pc, [ip, #3460]!	; 0xd84

000112d4 <__fxstat64@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #102400	; 0x19000
   112dc:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e0 <fwrite@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #102400	; 0x19000
   112e8:	ldr	pc, [ip, #3444]!	; 0xd74

000112ec <lseek64@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #102400	; 0x19000
   112f4:	ldr	pc, [ip, #3436]!	; 0xd6c

000112f8 <__ctype_get_mb_cur_max@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #102400	; 0x19000
   11300:	ldr	pc, [ip, #3428]!	; 0xd64

00011304 <strcpy@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #102400	; 0x19000
   1130c:	ldr	pc, [ip, #3420]!	; 0xd5c

00011310 <__fpending@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #102400	; 0x19000
   11318:	ldr	pc, [ip, #3412]!	; 0xd54

0001131c <mbrtowc@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #102400	; 0x19000
   11324:	ldr	pc, [ip, #3404]!	; 0xd4c

00011328 <error@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #102400	; 0x19000
   11330:	ldr	pc, [ip, #3396]!	; 0xd44

00011334 <open64@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #102400	; 0x19000
   1133c:	ldr	pc, [ip, #3388]!	; 0xd3c

00011340 <getenv@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #102400	; 0x19000
   11348:	ldr	pc, [ip, #3380]!	; 0xd34

0001134c <malloc@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #102400	; 0x19000
   11354:	ldr	pc, [ip, #3372]!	; 0xd2c

00011358 <__libc_start_main@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #102400	; 0x19000
   11360:	ldr	pc, [ip, #3364]!	; 0xd24

00011364 <__freading@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #102400	; 0x19000
   1136c:	ldr	pc, [ip, #3356]!	; 0xd1c

00011370 <__gmon_start__@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #102400	; 0x19000
   11378:	ldr	pc, [ip, #3348]!	; 0xd14

0001137c <getopt_long@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #102400	; 0x19000
   11384:	ldr	pc, [ip, #3340]!	; 0xd0c

00011388 <__ctype_b_loc@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #102400	; 0x19000
   11390:	ldr	pc, [ip, #3332]!	; 0xd04

00011394 <exit@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #102400	; 0x19000
   1139c:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a0 <strlen@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #102400	; 0x19000
   113a8:	ldr	pc, [ip, #3316]!	; 0xcf4

000113ac <openat64@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #102400	; 0x19000
   113b4:	ldr	pc, [ip, #3308]!	; 0xcec

000113b8 <ungetc@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #102400	; 0x19000
   113c0:	ldr	pc, [ip, #3300]!	; 0xce4

000113c4 <fcntl@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #102400	; 0x19000
   113cc:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d0 <fchmodat@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #102400	; 0x19000
   113d8:	ldr	pc, [ip, #3284]!	; 0xcd4

000113dc <__errno_location@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #102400	; 0x19000
   113e4:	ldr	pc, [ip, #3276]!	; 0xccc

000113e8 <__cxa_atexit@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #102400	; 0x19000
   113f0:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f4 <memset@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #102400	; 0x19000
   113fc:	ldr	pc, [ip, #3260]!	; 0xcbc

00011400 <fscanf@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #102400	; 0x19000
   11408:	ldr	pc, [ip, #3252]!	; 0xcb4

0001140c <__printf_chk@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #102400	; 0x19000
   11414:	ldr	pc, [ip, #3244]!	; 0xcac

00011418 <fileno@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #102400	; 0x19000
   11420:	ldr	pc, [ip, #3236]!	; 0xca4

00011424 <__fprintf_chk@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #102400	; 0x19000
   1142c:	ldr	pc, [ip, #3228]!	; 0xc9c

00011430 <fclose@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #102400	; 0x19000
   11438:	ldr	pc, [ip, #3220]!	; 0xc94

0001143c <fseeko64@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #102400	; 0x19000
   11444:	ldr	pc, [ip, #3212]!	; 0xc8c

00011448 <__uflow@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #102400	; 0x19000
   11450:	ldr	pc, [ip, #3204]!	; 0xc84

00011454 <setlocale@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #102400	; 0x19000
   1145c:	ldr	pc, [ip, #3196]!	; 0xc7c

00011460 <strrchr@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #102400	; 0x19000
   11468:	ldr	pc, [ip, #3188]!	; 0xc74

0001146c <nl_langinfo@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #102400	; 0x19000
   11474:	ldr	pc, [ip, #3180]!	; 0xc6c

00011478 <readdir64@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #102400	; 0x19000
   11480:	ldr	pc, [ip, #3172]!	; 0xc64

00011484 <fdopendir@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #102400	; 0x19000
   1148c:	ldr	pc, [ip, #3164]!	; 0xc5c

00011490 <dirfd@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #102400	; 0x19000
   11498:	ldr	pc, [ip, #3156]!	; 0xc54

0001149c <fchdir@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #102400	; 0x19000
   114a4:	ldr	pc, [ip, #3148]!	; 0xc4c

000114a8 <qsort@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #102400	; 0x19000
   114b0:	ldr	pc, [ip, #3140]!	; 0xc44

000114b4 <bindtextdomain@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #102400	; 0x19000
   114bc:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c0 <umask@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #102400	; 0x19000
   114c8:	ldr	pc, [ip, #3124]!	; 0xc34

000114cc <__xstat64@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #102400	; 0x19000
   114d4:	ldr	pc, [ip, #3116]!	; 0xc2c

000114d8 <strncmp@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #102400	; 0x19000
   114e0:	ldr	pc, [ip, #3108]!	; 0xc24

000114e4 <abort@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #102400	; 0x19000
   114ec:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f0 <close@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #102400	; 0x19000
   114f8:	ldr	pc, [ip, #3092]!	; 0xc14

000114fc <__lxstat64@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #102400	; 0x19000
   11504:	ldr	pc, [ip, #3084]!	; 0xc0c

00011508 <closedir@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #102400	; 0x19000
   11510:	ldr	pc, [ip, #3076]!	; 0xc04

00011514 <__assert_fail@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #102400	; 0x19000
   1151c:	ldr	pc, [ip, #3068]!	; 0xbfc

Disassembly of section .text:

00011520 <close_stdout@@Base-0x124c>:
   11520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11524:	sub	sp, sp, #204	; 0xcc
   11528:	ldr	r5, [pc, #3420]	; 1228c <__assert_fail@plt+0xd78>
   1152c:	mov	r6, r0
   11530:	ldr	r2, [pc, #3416]	; 12290 <__assert_fail@plt+0xd7c>
   11534:	mov	fp, #0
   11538:	add	r5, pc, r5
   1153c:	ldr	ip, [pc, #3408]	; 12294 <__assert_fail@plt+0xd80>
   11540:	ldr	r0, [r1]
   11544:	mov	r4, r1
   11548:	ldr	r2, [r5, r2]
   1154c:	add	ip, pc, ip
   11550:	str	ip, [sp, #36]	; 0x24
   11554:	mov	r8, fp
   11558:	ldr	ip, [pc, #3384]	; 12298 <__assert_fail@plt+0xd84>
   1155c:	mov	r9, fp
   11560:	ldr	r2, [r2]
   11564:	add	ip, pc, ip
   11568:	str	fp, [sp, #32]
   1156c:	str	ip, [sp, #40]	; 0x28
   11570:	str	r2, [sp, #196]	; 0xc4
   11574:	str	fp, [sp, #60]	; 0x3c
   11578:	str	fp, [sp, #28]
   1157c:	bl	12fc8 <close_stdout@@Base+0x85c>
   11580:	ldr	r1, [pc, #3348]	; 1229c <__assert_fail@plt+0xd88>
   11584:	mov	r0, #6
   11588:	ldr	sl, [pc, #3344]	; 122a0 <__assert_fail@plt+0xd8c>
   1158c:	add	r1, pc, r1
   11590:	ldr	r7, [pc, #3340]	; 122a4 <__assert_fail@plt+0xd90>
   11594:	bl	11454 <setlocale@plt>
   11598:	add	sl, pc, sl
   1159c:	ldr	r1, [pc, #3332]	; 122a8 <__assert_fail@plt+0xd94>
   115a0:	add	r7, pc, r7
   115a4:	mov	r0, sl
   115a8:	add	r1, pc, r1
   115ac:	bl	114b4 <bindtextdomain@plt>
   115b0:	mov	r0, sl
   115b4:	bl	112b0 <textdomain@plt>
   115b8:	ldr	ip, [pc, #3308]	; 122ac <__assert_fail@plt+0xd98>
   115bc:	ldr	r3, [pc, #3308]	; 122b0 <__assert_fail@plt+0xd9c>
   115c0:	add	ip, pc, ip
   115c4:	str	ip, [sp, #44]	; 0x2c
   115c8:	ldr	ip, [pc, #3300]	; 122b4 <__assert_fail@plt+0xda0>
   115cc:	add	ip, pc, ip
   115d0:	str	ip, [sp, #48]	; 0x30
   115d4:	ldr	ip, [pc, #3292]	; 122b8 <__assert_fail@plt+0xda4>
   115d8:	ldr	r0, [r5, r3]
   115dc:	add	ip, pc, ip
   115e0:	str	ip, [sp, #52]	; 0x34
   115e4:	bl	19b2c <fts_children@@Base+0x2928>
   115e8:	ldr	r3, [pc, #3276]	; 122bc <__assert_fail@plt+0xda8>
   115ec:	add	r3, pc, r3
   115f0:	strb	fp, [r3]
   115f4:	strb	fp, [r3, #1]
   115f8:	strb	fp, [r3, #2]
   115fc:	ldr	r3, [pc, #3260]	; 122c0 <__assert_fail@plt+0xdac>
   11600:	mov	fp, #0
   11604:	mov	r0, r6
   11608:	str	fp, [sp]
   1160c:	mov	r1, r4
   11610:	mov	r2, r7
   11614:	add	r3, pc, r3
   11618:	bl	1137c <getopt_long@plt>
   1161c:	cmn	r0, #1
   11620:	beq	11814 <__assert_fail@plt+0x300>
   11624:	cmp	r0, #99	; 0x63
   11628:	beq	117c4 <__assert_fail@plt+0x2b0>
   1162c:	ble	11670 <__assert_fail@plt+0x15c>
   11630:	cmp	r0, #118	; 0x76
   11634:	beq	117d4 <__assert_fail@plt+0x2c0>
   11638:	ble	11720 <__assert_fail@plt+0x20c>
   1163c:	cmp	r0, #256	; 0x100
   11640:	beq	117e0 <__assert_fail@plt+0x2cc>
   11644:	ble	11860 <__assert_fail@plt+0x34c>
   11648:	movw	r3, #257	; 0x101
   1164c:	cmp	r0, r3
   11650:	beq	116e4 <__assert_fail@plt+0x1d0>
   11654:	add	r3, r3, #1
   11658:	cmp	r0, r3
   1165c:	bne	11718 <__assert_fail@plt+0x204>
   11660:	ldr	r3, [pc, #3164]	; 122c4 <__assert_fail@plt+0xdb0>
   11664:	ldr	r3, [r5, r3]
   11668:	ldr	r8, [r3]
   1166c:	b	115fc <__assert_fail@plt+0xe8>
   11670:	cmp	r0, #55	; 0x37
   11674:	bgt	116f0 <__assert_fail@plt+0x1dc>
   11678:	cmp	r0, #48	; 0x30
   1167c:	bge	11748 <__assert_fail@plt+0x234>
   11680:	cmn	r0, #2
   11684:	beq	116dc <__assert_fail@plt+0x1c8>
   11688:	bgt	11850 <__assert_fail@plt+0x33c>
   1168c:	cmn	r0, #3
   11690:	bne	11718 <__assert_fail@plt+0x204>
   11694:	ldr	r2, [pc, #3116]	; 122c8 <__assert_fail@plt+0xdb4>
   11698:	ldr	r3, [pc, #3116]	; 122cc <__assert_fail@plt+0xdb8>
   1169c:	ldr	r1, [pc, #3116]	; 122d0 <__assert_fail@plt+0xdbc>
   116a0:	ldr	r0, [r5, r2]
   116a4:	ldr	r3, [r5, r3]
   116a8:	add	r1, pc, r1
   116ac:	ldr	r2, [pc, #3104]	; 122d4 <__assert_fail@plt+0xdc0>
   116b0:	ldr	r0, [r0]
   116b4:	add	r2, pc, r2
   116b8:	ldr	r3, [r3]
   116bc:	stm	sp, {r1, r2, fp}
   116c0:	ldr	r1, [pc, #3088]	; 122d8 <__assert_fail@plt+0xdc4>
   116c4:	ldr	r2, [pc, #3088]	; 122dc <__assert_fail@plt+0xdc8>
   116c8:	add	r1, pc, r1
   116cc:	add	r2, pc, r2
   116d0:	bl	14d30 <close_stdout@@Base+0x25c4>
   116d4:	mov	r0, fp
   116d8:	bl	11394 <exit@plt>
   116dc:	mov	r0, fp
   116e0:	bl	124bc <__assert_fail@plt+0xfa8>
   116e4:	mov	ip, #1
   116e8:	str	ip, [sp, #32]
   116ec:	b	115fc <__assert_fail@plt+0xe8>
   116f0:	cmp	r0, #82	; 0x52
   116f4:	ldreq	ip, [sp, #52]	; 0x34
   116f8:	moveq	r3, #1
   116fc:	strbeq	r3, [ip, #2]
   11700:	beq	115fc <__assert_fail@plt+0xe8>
   11704:	ble	1186c <__assert_fail@plt+0x358>
   11708:	cmp	r0, #88	; 0x58
   1170c:	beq	11748 <__assert_fail@plt+0x234>
   11710:	cmp	r0, #97	; 0x61
   11714:	beq	11748 <__assert_fail@plt+0x234>
   11718:	mov	r0, #1
   1171c:	bl	124bc <__assert_fail@plt+0xfa8>
   11720:	cmp	r0, #111	; 0x6f
   11724:	beq	11748 <__assert_fail@plt+0x234>
   11728:	bgt	11878 <__assert_fail@plt+0x364>
   1172c:	cmp	r0, #102	; 0x66
   11730:	ldreq	ip, [sp, #48]	; 0x30
   11734:	moveq	r3, #1
   11738:	strbeq	r3, [ip, #1]
   1173c:	beq	115fc <__assert_fail@plt+0xe8>
   11740:	cmp	r0, #103	; 0x67
   11744:	bne	11718 <__assert_fail@plt+0x204>
   11748:	ldr	r3, [pc, #2960]	; 122e0 <__assert_fail@plt+0xdcc>
   1174c:	cmp	r9, #0
   11750:	moveq	r2, r9
   11754:	addne	r2, r9, #1
   11758:	ldr	r3, [r5, r3]
   1175c:	ldr	r3, [r3]
   11760:	sub	r3, r3, #-1073741823	; 0xc0000001
   11764:	ldr	r3, [r4, r3, lsl #2]
   11768:	str	r2, [sp, #20]
   1176c:	mov	r0, r3
   11770:	str	r3, [sp, #24]
   11774:	bl	113a0 <strlen@plt>
   11778:	ldr	r2, [sp, #20]
   1177c:	ldr	r1, [sp, #60]	; 0x3c
   11780:	ldr	r3, [sp, #24]
   11784:	add	sl, r0, r2
   11788:	mov	fp, r0
   1178c:	cmp	sl, r1
   11790:	bcs	117e8 <__assert_fail@plt+0x2d4>
   11794:	ldr	ip, [sp, #28]
   11798:	mov	r1, r3
   1179c:	mov	r3, #44	; 0x2c
   117a0:	add	r0, ip, r2
   117a4:	add	r2, fp, #1
   117a8:	strb	r3, [ip, r9]
   117ac:	mov	r9, sl
   117b0:	bl	11268 <memcpy@plt>
   117b4:	ldr	ip, [sp, #40]	; 0x28
   117b8:	mov	r3, #1
   117bc:	strb	r3, [ip]
   117c0:	b	115fc <__assert_fail@plt+0xe8>
   117c4:	ldr	ip, [sp, #36]	; 0x24
   117c8:	mov	r3, #1
   117cc:	str	r3, [ip]
   117d0:	b	115fc <__assert_fail@plt+0xe8>
   117d4:	ldr	ip, [sp, #44]	; 0x2c
   117d8:	str	fp, [ip]
   117dc:	b	115fc <__assert_fail@plt+0xe8>
   117e0:	str	fp, [sp, #32]
   117e4:	b	115fc <__assert_fail@plt+0xe8>
   117e8:	add	r1, sp, #200	; 0xc8
   117ec:	add	ip, sl, #1
   117f0:	ldr	r0, [sp, #28]
   117f4:	str	ip, [r1, #-140]!	; 0xffffff74
   117f8:	str	r2, [sp, #20]
   117fc:	str	r3, [sp, #24]
   11800:	bl	14f90 <close_stdout@@Base+0x2824>
   11804:	ldr	r3, [sp, #24]
   11808:	ldr	r2, [sp, #20]
   1180c:	str	r0, [sp, #28]
   11810:	b	11794 <__assert_fail@plt+0x280>
   11814:	cmp	r8, fp
   11818:	ldr	ip, [sp, #28]
   1181c:	beq	11d04 <__assert_fail@plt+0x7f0>
   11820:	cmp	ip, fp
   11824:	beq	11884 <__assert_fail@plt+0x370>
   11828:	ldr	r1, [pc, #2740]	; 122e4 <__assert_fail@plt+0xdd0>
   1182c:	mov	r0, fp
   11830:	mov	r2, #5
   11834:	add	r1, pc, r1
   11838:	bl	1128c <dcgettext@plt>
   1183c:	mov	r1, fp
   11840:	mov	r2, r0
   11844:	mov	r0, fp
   11848:	bl	11328 <error@plt>
   1184c:	b	11718 <__assert_fail@plt+0x204>
   11850:	sub	r0, r0, #43	; 0x2b
   11854:	cmp	r0, #1
   11858:	bhi	11718 <__assert_fail@plt+0x204>
   1185c:	b	11748 <__assert_fail@plt+0x234>
   11860:	cmp	r0, #120	; 0x78
   11864:	bgt	11718 <__assert_fail@plt+0x204>
   11868:	b	11748 <__assert_fail@plt+0x234>
   1186c:	cmp	r0, #61	; 0x3d
   11870:	bne	11718 <__assert_fail@plt+0x204>
   11874:	b	11748 <__assert_fail@plt+0x234>
   11878:	cmp	r0, #114	; 0x72
   1187c:	blt	11718 <__assert_fail@plt+0x204>
   11880:	b	11748 <__assert_fail@plt+0x234>
   11884:	ldr	r3, [pc, #2644]	; 122e0 <__assert_fail@plt+0xdcc>
   11888:	ldr	r5, [r5, r3]
   1188c:	ldr	r3, [r5]
   11890:	cmp	r6, r3
   11894:	bgt	118c0 <__assert_fail@plt+0x3ac>
   11898:	ldr	r1, [pc, #2632]	; 122e8 <__assert_fail@plt+0xdd4>
   1189c:	mov	r2, #5
   118a0:	mov	r0, #0
   118a4:	add	r1, pc, r1
   118a8:	bl	1128c <dcgettext@plt>
   118ac:	mov	r2, r0
   118b0:	mov	r0, #0
   118b4:	mov	r1, r0
   118b8:	bl	11328 <error@plt>
   118bc:	b	11718 <__assert_fail@plt+0x204>
   118c0:	mov	r0, r8
   118c4:	bl	12e04 <close_stdout@@Base+0x698>
   118c8:	ldr	r3, [pc, #2588]	; 122ec <__assert_fail@plt+0xdd8>
   118cc:	add	r3, pc, r3
   118d0:	cmp	r0, #0
   118d4:	str	r0, [r3, #4]
   118d8:	beq	1220c <__assert_fail@plt+0xcf8>
   118dc:	ldr	r6, [pc, #2572]	; 122f0 <__assert_fail@plt+0xddc>
   118e0:	add	r6, pc, r6
   118e4:	ldrb	r3, [r6, #2]
   118e8:	cmp	r3, #0
   118ec:	beq	118fc <__assert_fail@plt+0x3e8>
   118f0:	ldr	ip, [sp, #32]
   118f4:	cmp	ip, #0
   118f8:	bne	12118 <__assert_fail@plt+0xc04>
   118fc:	ldr	r3, [pc, #2544]	; 122f4 <__assert_fail@plt+0xde0>
   11900:	mov	r2, #0
   11904:	add	r3, pc, r3
   11908:	str	r2, [r3, #32]
   1190c:	ldr	r0, [r5]
   11910:	add	ip, sp, #172	; 0xac
   11914:	str	ip, [sp, #32]
   11918:	add	ip, sp, #184	; 0xb8
   1191c:	str	ip, [sp, #36]	; 0x24
   11920:	movw	r1, #1041	; 0x411
   11924:	ldr	ip, [pc, #2508]	; 122f8 <__assert_fail@plt+0xde4>
   11928:	add	r0, r4, r0, lsl #2
   1192c:	mov	r2, #0
   11930:	mov	sl, #1
   11934:	add	ip, pc, ip
   11938:	str	ip, [sp, #48]	; 0x30
   1193c:	ldr	ip, [pc, #2488]	; 122fc <__assert_fail@plt+0xde8>
   11940:	add	ip, pc, ip
   11944:	str	ip, [sp, #40]	; 0x28
   11948:	add	ip, sp, #173	; 0xad
   1194c:	str	ip, [sp, #44]	; 0x2c
   11950:	add	ip, sp, #185	; 0xb9
   11954:	str	ip, [sp, #52]	; 0x34
   11958:	bl	150ac <close_stdout@@Base+0x2940>
   1195c:	mov	r7, r0
   11960:	mov	r0, r7
   11964:	bl	16974 <fts_read@@Base>
   11968:	subs	r6, r0, #0
   1196c:	beq	11f0c <__assert_fail@plt+0x9f8>
   11970:	ldrh	r3, [r6, #60]	; 0x3c
   11974:	ldr	r8, [r6, #28]
   11978:	sub	r3, r3, #2
   1197c:	ldr	r9, [r6, #24]
   11980:	cmp	r3, #11
   11984:	addls	pc, pc, r3, lsl #2
   11988:	b	11adc <__assert_fail@plt+0x5c8>
   1198c:	b	11ac8 <__assert_fail@plt+0x5b4>
   11990:	b	11adc <__assert_fail@plt+0x5c8>
   11994:	b	119c8 <__assert_fail@plt+0x4b4>
   11998:	b	11adc <__assert_fail@plt+0x5c8>
   1199c:	b	119bc <__assert_fail@plt+0x4a8>
   119a0:	b	11c94 <__assert_fail@plt+0x780>
   119a4:	b	11adc <__assert_fail@plt+0x5c8>
   119a8:	b	11adc <__assert_fail@plt+0x5c8>
   119ac:	b	11c2c <__assert_fail@plt+0x718>
   119b0:	b	11adc <__assert_fail@plt+0x5c8>
   119b4:	b	11adc <__assert_fail@plt+0x5c8>
   119b8:	b	11be0 <__assert_fail@plt+0x6cc>
   119bc:	mov	fp, #1
   119c0:	and	sl, fp, sl
   119c4:	b	11960 <__assert_fail@plt+0x44c>
   119c8:	ldr	r3, [pc, #2352]	; 12300 <__assert_fail@plt+0xdec>
   119cc:	add	r3, pc, r3
   119d0:	ldrb	r4, [r3, #1]
   119d4:	cmp	r4, #0
   119d8:	beq	12098 <__assert_fail@plt+0xb84>
   119dc:	mov	ip, #0
   119e0:	str	ip, [sp, #28]
   119e4:	mov	r4, ip
   119e8:	mov	fp, ip
   119ec:	ldr	ip, [sp, #48]	; 0x30
   119f0:	ldr	r5, [ip]
   119f4:	cmp	r5, #2
   119f8:	beq	11aa0 <__assert_fail@plt+0x58c>
   119fc:	cmp	r5, #0
   11a00:	bne	11aa0 <__assert_fail@plt+0x58c>
   11a04:	cmp	fp, #0
   11a08:	bne	11cd0 <__assert_fail@plt+0x7bc>
   11a0c:	ldr	r0, [sp, #28]
   11a10:	add	r1, sp, #172	; 0xac
   11a14:	bl	12928 <close_stdout@@Base+0x1bc>
   11a18:	mov	r0, r4
   11a1c:	add	r1, sp, #184	; 0xb8
   11a20:	strb	fp, [sp, #182]	; 0xb6
   11a24:	bl	12928 <close_stdout@@Base+0x1bc>
   11a28:	ldr	r1, [pc, #2260]	; 12304 <__assert_fail@plt+0xdf0>
   11a2c:	mov	r0, fp
   11a30:	mov	r2, #5
   11a34:	add	r1, pc, r1
   11a38:	strb	fp, [sp, #194]	; 0xc2
   11a3c:	bl	1128c <dcgettext@plt>
   11a40:	mov	r5, fp
   11a44:	mov	r9, r0
   11a48:	mov	r0, r8
   11a4c:	mov	fp, r5
   11a50:	bl	14818 <close_stdout@@Base+0x20ac>
   11a54:	ldr	ip, [sp, #28]
   11a58:	ubfx	r3, r4, #0, #12
   11a5c:	mov	r1, r9
   11a60:	mov	r2, r0
   11a64:	add	r0, sp, #185	; 0xb9
   11a68:	str	r0, [sp]
   11a6c:	ubfx	r0, ip, #0, #12
   11a70:	str	r0, [sp, #4]
   11a74:	add	r0, sp, #173	; 0xad
   11a78:	str	r0, [sp, #8]
   11a7c:	mov	r0, #1
   11a80:	bl	1140c <__printf_chk@plt>
   11a84:	cmp	r5, #0
   11a88:	beq	11aa0 <__assert_fail@plt+0x58c>
   11a8c:	ldr	r3, [pc, #2164]	; 12308 <__assert_fail@plt+0xdf4>
   11a90:	add	r3, pc, r3
   11a94:	ldrb	r2, [r3]
   11a98:	cmp	r2, #0
   11a9c:	bne	11dc4 <__assert_fail@plt+0x8b0>
   11aa0:	ldr	r3, [pc, #2148]	; 1230c <__assert_fail@plt+0xdf8>
   11aa4:	add	r3, pc, r3
   11aa8:	ldrb	r3, [r3, #2]
   11aac:	cmp	r3, #0
   11ab0:	bne	119c0 <__assert_fail@plt+0x4ac>
   11ab4:	mov	r1, r6
   11ab8:	mov	r0, r7
   11abc:	mov	r2, #4
   11ac0:	bl	171d8 <fts_set@@Base>
   11ac4:	b	119c0 <__assert_fail@plt+0x4ac>
   11ac8:	mov	r0, r7
   11acc:	mov	r1, r6
   11ad0:	bl	15100 <close_stdout@@Base+0x2994>
   11ad4:	cmp	r0, #0
   11ad8:	bne	120d4 <__assert_fail@plt+0xbc0>
   11adc:	ldr	r3, [pc, #2092]	; 12310 <__assert_fail@plt+0xdfc>
   11ae0:	add	r3, pc, r3
   11ae4:	ldr	r1, [r3, #32]
   11ae8:	cmp	r1, #0
   11aec:	beq	11b04 <__assert_fail@plt+0x5f0>
   11af0:	ldrd	r4, [r6, #168]	; 0xa8
   11af4:	ldrd	r2, [r1]
   11af8:	cmp	r5, r3
   11afc:	cmpeq	r4, r2
   11b00:	beq	11e68 <__assert_fail@plt+0x954>
   11b04:	ldr	r4, [r6, #88]	; 0x58
   11b08:	mov	fp, #0
   11b0c:	ldr	r5, [pc, #2048]	; 12314 <__assert_fail@plt+0xe00>
   11b10:	and	ip, r4, #61440	; 0xf000
   11b14:	str	fp, [sp]
   11b18:	subs	r0, ip, #16384	; 0x4000
   11b1c:	add	r5, pc, r5
   11b20:	rsbs	r1, r0, #0
   11b24:	adcs	r1, r1, r0
   11b28:	ldr	r2, [r5, #8]
   11b2c:	ldr	r3, [r5, #4]
   11b30:	mov	r0, r4
   11b34:	str	ip, [sp, #24]
   11b38:	bl	12e98 <close_stdout@@Base+0x72c>
   11b3c:	ldr	ip, [sp, #24]
   11b40:	cmp	ip, #40960	; 0xa000
   11b44:	str	r0, [sp, #28]
   11b48:	beq	11dbc <__assert_fail@plt+0x8a8>
   11b4c:	ldr	r0, [r7, #32]
   11b50:	mov	r1, r9
   11b54:	ldr	r2, [sp, #28]
   11b58:	mov	r3, fp
   11b5c:	bl	113d0 <fchmodat@plt>
   11b60:	cmp	r0, fp
   11b64:	bne	11f68 <__assert_fail@plt+0xa54>
   11b68:	ldr	r3, [pc, #1960]	; 12318 <__assert_fail@plt+0xe04>
   11b6c:	add	r3, pc, r3
   11b70:	ldr	r3, [r3]
   11b74:	cmp	r3, #2
   11b78:	beq	12284 <__assert_fail@plt+0xd70>
   11b7c:	ldr	ip, [sp, #28]
   11b80:	tst	ip, #3584	; 0xe00
   11b84:	ldreq	r3, [sp, #28]
   11b88:	bne	11fbc <__assert_fail@plt+0xaa8>
   11b8c:	eor	r3, r3, r4
   11b90:	ubfx	r3, r3, #0, #12
   11b94:	cmp	r3, #0
   11b98:	beq	12020 <__assert_fail@plt+0xb0c>
   11b9c:	ldr	r0, [sp, #28]
   11ba0:	add	r1, sp, #172	; 0xac
   11ba4:	bl	12928 <close_stdout@@Base+0x1bc>
   11ba8:	mov	r0, r4
   11bac:	add	r1, sp, #184	; 0xb8
   11bb0:	mov	r5, #0
   11bb4:	strb	r5, [sp, #182]	; 0xb6
   11bb8:	bl	12928 <close_stdout@@Base+0x1bc>
   11bbc:	ldr	r1, [pc, #1880]	; 1231c <__assert_fail@plt+0xe08>
   11bc0:	mov	r0, r5
   11bc4:	mov	r2, #5
   11bc8:	strb	r5, [sp, #194]	; 0xc2
   11bcc:	add	r1, pc, r1
   11bd0:	mov	r5, #1
   11bd4:	bl	1128c <dcgettext@plt>
   11bd8:	mov	r9, r0
   11bdc:	b	11a48 <__assert_fail@plt+0x534>
   11be0:	ldr	r3, [pc, #1848]	; 12320 <__assert_fail@plt+0xe0c>
   11be4:	add	r3, pc, r3
   11be8:	ldrb	r4, [r3, #1]
   11bec:	cmp	r4, #0
   11bf0:	bne	119dc <__assert_fail@plt+0x4c8>
   11bf4:	ldr	r1, [pc, #1832]	; 12324 <__assert_fail@plt+0xe10>
   11bf8:	mov	r2, #5
   11bfc:	mov	r0, r4
   11c00:	add	r1, pc, r1
   11c04:	bl	1128c <dcgettext@plt>
   11c08:	mov	r5, r0
   11c0c:	mov	r0, r8
   11c10:	bl	14818 <close_stdout@@Base+0x20ac>
   11c14:	mov	r1, r4
   11c18:	mov	r2, r5
   11c1c:	mov	r3, r0
   11c20:	mov	r0, r4
   11c24:	bl	11328 <error@plt>
   11c28:	b	119dc <__assert_fail@plt+0x4c8>
   11c2c:	ldr	r3, [r6, #48]	; 0x30
   11c30:	cmp	r3, #0
   11c34:	bne	11c44 <__assert_fail@plt+0x730>
   11c38:	ldr	r3, [r6, #16]
   11c3c:	cmp	r3, #0
   11c40:	beq	1219c <__assert_fail@plt+0xc88>
   11c44:	ldr	r3, [pc, #1756]	; 12328 <__assert_fail@plt+0xe14>
   11c48:	add	r3, pc, r3
   11c4c:	ldrb	r4, [r3, #1]
   11c50:	cmp	r4, #0
   11c54:	bne	119dc <__assert_fail@plt+0x4c8>
   11c58:	ldr	r1, [pc, #1740]	; 1232c <__assert_fail@plt+0xe18>
   11c5c:	mov	r0, r4
   11c60:	add	r1, pc, r1
   11c64:	mov	r2, #5
   11c68:	ldr	r5, [r6, #32]
   11c6c:	bl	1128c <dcgettext@plt>
   11c70:	mov	r9, r0
   11c74:	mov	r0, r8
   11c78:	bl	14818 <close_stdout@@Base+0x20ac>
   11c7c:	mov	r1, r5
   11c80:	mov	r2, r9
   11c84:	mov	r3, r0
   11c88:	mov	r0, r4
   11c8c:	bl	11328 <error@plt>
   11c90:	b	119dc <__assert_fail@plt+0x4c8>
   11c94:	ldr	r3, [pc, #1684]	; 12330 <__assert_fail@plt+0xe1c>
   11c98:	add	r3, pc, r3
   11c9c:	ldrb	r4, [r3, #1]
   11ca0:	cmp	r4, #0
   11ca4:	bne	119dc <__assert_fail@plt+0x4c8>
   11ca8:	mov	r0, r8
   11cac:	ldr	r5, [r6, #32]
   11cb0:	bl	14818 <close_stdout@@Base+0x20ac>
   11cb4:	ldr	r2, [pc, #1656]	; 12334 <__assert_fail@plt+0xe20>
   11cb8:	mov	r1, r5
   11cbc:	add	r2, pc, r2
   11cc0:	mov	r3, r0
   11cc4:	mov	r0, r4
   11cc8:	bl	11328 <error@plt>
   11ccc:	b	119dc <__assert_fail@plt+0x4c8>
   11cd0:	ldr	r1, [sp, #40]	; 0x28
   11cd4:	mov	r2, #5
   11cd8:	mov	r0, r5
   11cdc:	bl	1128c <dcgettext@plt>
   11ce0:	mov	r9, r0
   11ce4:	mov	r0, r8
   11ce8:	bl	14818 <close_stdout@@Base+0x20ac>
   11cec:	mov	r1, r9
   11cf0:	mov	r2, r0
   11cf4:	mov	r0, #1
   11cf8:	bl	1140c <__printf_chk@plt>
   11cfc:	mov	fp, #1
   11d00:	b	11a84 <__assert_fail@plt+0x570>
   11d04:	ldr	r3, [pc, #1492]	; 122e0 <__assert_fail@plt+0xdcc>
   11d08:	cmp	ip, #0
   11d0c:	ldr	r5, [r5, r3]
   11d10:	ldreq	r3, [r5]
   11d14:	addeq	r2, r3, #1
   11d18:	streq	r2, [r5]
   11d1c:	ldreq	r3, [r4, r3, lsl #2]
   11d20:	streq	r3, [sp, #28]
   11d24:	ldr	r3, [r5]
   11d28:	cmp	r6, r3
   11d2c:	ble	11d60 <__assert_fail@plt+0x84c>
   11d30:	ldr	r0, [sp, #28]
   11d34:	bl	12a78 <close_stdout@@Base+0x30c>
   11d38:	ldr	r7, [pc, #1528]	; 12338 <__assert_fail@plt+0xe24>
   11d3c:	add	r7, pc, r7
   11d40:	cmp	r0, #0
   11d44:	mov	r6, r0
   11d48:	str	r0, [r7, #4]
   11d4c:	beq	1224c <__assert_fail@plt+0xd38>
   11d50:	mov	r0, #0
   11d54:	bl	114c0 <umask@plt>
   11d58:	str	r0, [r7, #8]
   11d5c:	b	118dc <__assert_fail@plt+0x3c8>
   11d60:	ldr	ip, [sp, #28]
   11d64:	cmp	ip, #0
   11d68:	beq	11898 <__assert_fail@plt+0x384>
   11d6c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11d70:	ldr	ip, [sp, #28]
   11d74:	ldr	r3, [r4, r3, lsl #2]
   11d78:	cmp	r3, ip
   11d7c:	bne	11898 <__assert_fail@plt+0x384>
   11d80:	ldr	r1, [pc, #1460]	; 1233c <__assert_fail@plt+0xe28>
   11d84:	mov	r2, #5
   11d88:	mov	r0, #0
   11d8c:	sub	r6, r6, #-1073741823	; 0xc0000001
   11d90:	add	r1, pc, r1
   11d94:	bl	1128c <dcgettext@plt>
   11d98:	mov	r5, r0
   11d9c:	ldr	r0, [r4, r6, lsl #2]
   11da0:	bl	14818 <close_stdout@@Base+0x20ac>
   11da4:	mov	r2, r5
   11da8:	mov	r3, r0
   11dac:	mov	r0, #0
   11db0:	mov	r1, r0
   11db4:	bl	11328 <error@plt>
   11db8:	b	11718 <__assert_fail@plt+0x204>
   11dbc:	mov	fp, #1
   11dc0:	b	119ec <__assert_fail@plt+0x4d8>
   11dc4:	and	r1, r4, #61440	; 0xf000
   11dc8:	mov	r5, #0
   11dcc:	subs	r2, r1, #16384	; 0x4000
   11dd0:	ldr	r3, [r3, #4]
   11dd4:	rsbs	r1, r2, #0
   11dd8:	mov	r0, r4
   11ddc:	adcs	r1, r1, r2
   11de0:	str	r5, [sp]
   11de4:	mov	r2, r5
   11de8:	bl	12e98 <close_stdout@@Base+0x72c>
   11dec:	ldr	ip, [sp, #28]
   11df0:	bics	ip, ip, r0
   11df4:	mov	r4, r0
   11df8:	beq	11aa0 <__assert_fail@plt+0x58c>
   11dfc:	ldr	r0, [sp, #28]
   11e00:	add	r1, sp, #172	; 0xac
   11e04:	bl	12928 <close_stdout@@Base+0x1bc>
   11e08:	mov	r0, r4
   11e0c:	add	r1, sp, #184	; 0xb8
   11e10:	mov	fp, r5
   11e14:	bl	12928 <close_stdout@@Base+0x1bc>
   11e18:	ldr	r1, [pc, #1312]	; 12340 <__assert_fail@plt+0xe2c>
   11e1c:	mov	r2, #5
   11e20:	mov	r0, r5
   11e24:	add	r1, pc, r1
   11e28:	strb	r5, [sp, #194]	; 0xc2
   11e2c:	strb	r5, [sp, #182]	; 0xb6
   11e30:	bl	1128c <dcgettext@plt>
   11e34:	mov	r4, r0
   11e38:	mov	r0, r8
   11e3c:	bl	146c4 <close_stdout@@Base+0x1f58>
   11e40:	ldr	ip, [sp, #44]	; 0x2c
   11e44:	mov	r2, r4
   11e48:	mov	r1, r5
   11e4c:	str	ip, [sp]
   11e50:	ldr	ip, [sp, #52]	; 0x34
   11e54:	str	ip, [sp, #4]
   11e58:	mov	r3, r0
   11e5c:	mov	r0, r5
   11e60:	bl	11328 <error@plt>
   11e64:	b	11aa0 <__assert_fail@plt+0x58c>
   11e68:	ldrd	r2, [r6, #72]	; 0x48
   11e6c:	ldrd	r0, [r1, #8]
   11e70:	cmp	r3, r1
   11e74:	cmpeq	r2, r0
   11e78:	bne	11b04 <__assert_fail@plt+0x5f0>
   11e7c:	ldrb	r3, [r8]
   11e80:	cmp	r3, #47	; 0x2f
   11e84:	bne	121b8 <__assert_fail@plt+0xca4>
   11e88:	ldrb	r4, [r8, #1]
   11e8c:	cmp	r4, #0
   11e90:	bne	121b8 <__assert_fail@plt+0xca4>
   11e94:	ldr	r1, [pc, #1192]	; 12344 <__assert_fail@plt+0xe30>
   11e98:	mov	r2, #5
   11e9c:	mov	r0, r4
   11ea0:	add	r1, pc, r1
   11ea4:	bl	1128c <dcgettext@plt>
   11ea8:	mov	r5, r0
   11eac:	mov	r0, r8
   11eb0:	bl	14818 <close_stdout@@Base+0x20ac>
   11eb4:	mov	r1, r4
   11eb8:	mov	r2, r5
   11ebc:	mov	r3, r0
   11ec0:	mov	r0, r4
   11ec4:	bl	11328 <error@plt>
   11ec8:	ldr	r1, [pc, #1144]	; 12348 <__assert_fail@plt+0xe34>
   11ecc:	mov	r2, #5
   11ed0:	mov	r0, #0
   11ed4:	mov	fp, #0
   11ed8:	add	r1, pc, r1
   11edc:	bl	1128c <dcgettext@plt>
   11ee0:	mov	r2, r0
   11ee4:	mov	r0, #0
   11ee8:	mov	r1, r0
   11eec:	bl	11328 <error@plt>
   11ef0:	mov	r1, r6
   11ef4:	mov	r2, #4
   11ef8:	mov	r0, r7
   11efc:	bl	171d8 <fts_set@@Base>
   11f00:	mov	r0, r7
   11f04:	bl	16974 <fts_read@@Base>
   11f08:	b	119c0 <__assert_fail@plt+0x4ac>
   11f0c:	bl	113dc <__errno_location@plt>
   11f10:	ldr	r5, [r0]
   11f14:	mov	r4, r0
   11f18:	cmp	r5, #0
   11f1c:	beq	11f4c <__assert_fail@plt+0xa38>
   11f20:	ldr	r3, [pc, #1060]	; 1234c <__assert_fail@plt+0xe38>
   11f24:	add	r3, pc, r3
   11f28:	ldrb	r6, [r3, #1]
   11f2c:	cmp	r6, #0
   11f30:	beq	12174 <__assert_fail@plt+0xc60>
   11f34:	mov	r0, r7
   11f38:	bl	167fc <fts_close@@Base>
   11f3c:	cmp	r0, #0
   11f40:	bne	120a8 <__assert_fail@plt+0xb94>
   11f44:	mov	r0, #1
   11f48:	bl	11394 <exit@plt>
   11f4c:	mov	r0, r7
   11f50:	bl	167fc <fts_close@@Base>
   11f54:	cmp	r0, #0
   11f58:	bne	120a8 <__assert_fail@plt+0xb94>
   11f5c:	cmp	sl, #0
   11f60:	bne	11f48 <__assert_fail@plt+0xa34>
   11f64:	b	11f44 <__assert_fail@plt+0xa30>
   11f68:	ldrb	r5, [r5, #1]
   11f6c:	cmp	r5, fp
   11f70:	bne	119ec <__assert_fail@plt+0x4d8>
   11f74:	bl	113dc <__errno_location@plt>
   11f78:	ldr	r1, [pc, #976]	; 12350 <__assert_fail@plt+0xe3c>
   11f7c:	mov	r2, #5
   11f80:	mov	fp, r5
   11f84:	add	r1, pc, r1
   11f88:	ldr	r9, [r0]
   11f8c:	mov	r0, r5
   11f90:	bl	1128c <dcgettext@plt>
   11f94:	mov	r2, r0
   11f98:	mov	r0, r8
   11f9c:	str	r2, [sp, #20]
   11fa0:	bl	14818 <close_stdout@@Base+0x20ac>
   11fa4:	mov	r1, r9
   11fa8:	ldr	r2, [sp, #20]
   11fac:	mov	r3, r0
   11fb0:	mov	r0, r5
   11fb4:	bl	11328 <error@plt>
   11fb8:	b	119ec <__assert_fail@plt+0x4d8>
   11fbc:	mov	r0, #3
   11fc0:	mov	r1, r9
   11fc4:	add	r2, sp, #64	; 0x40
   11fc8:	bl	114cc <__xstat64@plt>
   11fcc:	cmp	r0, #0
   11fd0:	beq	12110 <__assert_fail@plt+0xbfc>
   11fd4:	ldrb	r5, [r5, #1]
   11fd8:	cmp	r5, #0
   11fdc:	bne	12020 <__assert_fail@plt+0xb0c>
   11fe0:	bl	113dc <__errno_location@plt>
   11fe4:	ldr	r1, [pc, #872]	; 12354 <__assert_fail@plt+0xe40>
   11fe8:	mov	r2, #5
   11fec:	add	r1, pc, r1
   11ff0:	ldr	fp, [r0]
   11ff4:	mov	r0, r5
   11ff8:	bl	1128c <dcgettext@plt>
   11ffc:	mov	r2, r0
   12000:	mov	r0, r9
   12004:	str	r2, [sp, #20]
   12008:	bl	14818 <close_stdout@@Base+0x20ac>
   1200c:	mov	r1, fp
   12010:	ldr	r2, [sp, #20]
   12014:	mov	r3, r0
   12018:	mov	r0, r5
   1201c:	bl	11328 <error@plt>
   12020:	ldr	r3, [pc, #816]	; 12358 <__assert_fail@plt+0xe44>
   12024:	ldr	r5, [pc, r3]
   12028:	cmp	r5, #0
   1202c:	bne	12284 <__assert_fail@plt+0xd70>
   12030:	ldr	r0, [sp, #28]
   12034:	add	r1, sp, #172	; 0xac
   12038:	bl	12928 <close_stdout@@Base+0x1bc>
   1203c:	mov	r0, r4
   12040:	add	r1, sp, #184	; 0xb8
   12044:	strb	r5, [sp, #182]	; 0xb6
   12048:	bl	12928 <close_stdout@@Base+0x1bc>
   1204c:	ldr	r1, [pc, #776]	; 1235c <__assert_fail@plt+0xe48>
   12050:	mov	r2, #5
   12054:	mov	r0, r5
   12058:	add	r1, pc, r1
   1205c:	strb	r5, [sp, #194]	; 0xc2
   12060:	bl	1128c <dcgettext@plt>
   12064:	mov	r5, r0
   12068:	mov	r0, r8
   1206c:	bl	14818 <close_stdout@@Base+0x20ac>
   12070:	ldr	ip, [sp, #28]
   12074:	mov	r1, r5
   12078:	mov	r5, #1
   1207c:	ubfx	r3, ip, #0, #12
   12080:	ldr	ip, [sp, #44]	; 0x2c
   12084:	str	ip, [sp]
   12088:	mov	r2, r0
   1208c:	mov	r0, #1
   12090:	bl	1140c <__printf_chk@plt>
   12094:	b	11cfc <__assert_fail@plt+0x7e8>
   12098:	ldr	r1, [pc, #704]	; 12360 <__assert_fail@plt+0xe4c>
   1209c:	mov	r0, r4
   120a0:	add	r1, pc, r1
   120a4:	b	11c64 <__assert_fail@plt+0x750>
   120a8:	ldr	r1, [pc, #692]	; 12364 <__assert_fail@plt+0xe50>
   120ac:	mov	r2, #5
   120b0:	mov	r0, #0
   120b4:	ldr	r4, [r4]
   120b8:	add	r1, pc, r1
   120bc:	bl	1128c <dcgettext@plt>
   120c0:	mov	r1, r4
   120c4:	mov	r2, r0
   120c8:	mov	r0, #0
   120cc:	bl	11328 <error@plt>
   120d0:	b	11f44 <__assert_fail@plt+0xa30>
   120d4:	ldr	r1, [pc, #652]	; 12368 <__assert_fail@plt+0xe54>
   120d8:	mov	r2, #5
   120dc:	mov	r0, #0
   120e0:	mov	fp, #0
   120e4:	add	r1, pc, r1
   120e8:	bl	1128c <dcgettext@plt>
   120ec:	mov	r4, r0
   120f0:	mov	r0, r8
   120f4:	bl	14818 <close_stdout@@Base+0x20ac>
   120f8:	mov	r2, r4
   120fc:	mov	r3, r0
   12100:	mov	r0, #0
   12104:	mov	r1, r0
   12108:	bl	11328 <error@plt>
   1210c:	b	119c0 <__assert_fail@plt+0x4ac>
   12110:	ldr	r3, [sp, #80]	; 0x50
   12114:	b	11b8c <__assert_fail@plt+0x678>
   12118:	add	r0, r6, #16
   1211c:	bl	14824 <close_stdout@@Base+0x20b8>
   12120:	cmp	r0, #0
   12124:	mov	r7, r0
   12128:	str	r0, [r6, #32]
   1212c:	bne	1190c <__assert_fail@plt+0x3f8>
   12130:	bl	113dc <__errno_location@plt>
   12134:	ldr	r1, [pc, #560]	; 1236c <__assert_fail@plt+0xe58>
   12138:	mov	r2, #5
   1213c:	add	r1, pc, r1
   12140:	ldr	r6, [r0]
   12144:	mov	r0, r7
   12148:	bl	1128c <dcgettext@plt>
   1214c:	mov	r7, r0
   12150:	ldr	r0, [pc, #536]	; 12370 <__assert_fail@plt+0xe5c>
   12154:	add	r0, pc, r0
   12158:	bl	14818 <close_stdout@@Base+0x20ac>
   1215c:	mov	r1, r6
   12160:	mov	r2, r7
   12164:	mov	r3, r0
   12168:	mov	r0, #1
   1216c:	bl	11328 <error@plt>
   12170:	b	1190c <__assert_fail@plt+0x3f8>
   12174:	ldr	r1, [pc, #504]	; 12374 <__assert_fail@plt+0xe60>
   12178:	mov	r0, r6
   1217c:	mov	r2, #5
   12180:	add	r1, pc, r1
   12184:	bl	1128c <dcgettext@plt>
   12188:	mov	r1, r5
   1218c:	mov	r2, r0
   12190:	mov	r0, r6
   12194:	bl	11328 <error@plt>
   12198:	b	11f34 <__assert_fail@plt+0xa20>
   1219c:	mov	fp, #1
   121a0:	mov	r1, r6
   121a4:	str	fp, [r6, #16]
   121a8:	mov	r2, fp
   121ac:	mov	r0, r7
   121b0:	bl	171d8 <fts_set@@Base>
   121b4:	b	119c0 <__assert_fail@plt+0x4ac>
   121b8:	ldr	r1, [pc, #440]	; 12378 <__assert_fail@plt+0xe64>
   121bc:	mov	r2, #5
   121c0:	mov	r0, #0
   121c4:	add	r1, pc, r1
   121c8:	bl	1128c <dcgettext@plt>
   121cc:	mov	r1, r8
   121d0:	mov	r5, r0
   121d4:	mov	r0, #0
   121d8:	bl	14810 <close_stdout@@Base+0x20a4>
   121dc:	ldr	r1, [pc, #408]	; 1237c <__assert_fail@plt+0xe68>
   121e0:	add	r1, pc, r1
   121e4:	mov	r4, r0
   121e8:	mov	r0, #1
   121ec:	bl	14810 <close_stdout@@Base+0x20a4>
   121f0:	mov	r2, r5
   121f4:	mov	r3, r4
   121f8:	str	r0, [sp]
   121fc:	mov	r0, #0
   12200:	mov	r1, r0
   12204:	bl	11328 <error@plt>
   12208:	b	11ec8 <__assert_fail@plt+0x9b4>
   1220c:	bl	113dc <__errno_location@plt>
   12210:	ldr	r1, [pc, #360]	; 12380 <__assert_fail@plt+0xe6c>
   12214:	mov	r2, #5
   12218:	add	r1, pc, r1
   1221c:	ldr	r6, [r0]
   12220:	ldr	r0, [sp, #28]
   12224:	bl	1128c <dcgettext@plt>
   12228:	mov	r7, r0
   1222c:	mov	r0, r8
   12230:	bl	14818 <close_stdout@@Base+0x20ac>
   12234:	mov	r1, r6
   12238:	mov	r2, r7
   1223c:	mov	r3, r0
   12240:	mov	r0, #1
   12244:	bl	11328 <error@plt>
   12248:	b	118dc <__assert_fail@plt+0x3c8>
   1224c:	ldr	r1, [pc, #304]	; 12384 <__assert_fail@plt+0xe70>
   12250:	mov	r2, #5
   12254:	add	r1, pc, r1
   12258:	bl	1128c <dcgettext@plt>
   1225c:	mov	r4, r0
   12260:	ldr	r0, [sp, #28]
   12264:	bl	14818 <close_stdout@@Base+0x20ac>
   12268:	mov	r1, r6
   1226c:	mov	r2, r4
   12270:	mov	r3, r0
   12274:	mov	r0, r6
   12278:	bl	11328 <error@plt>
   1227c:	mov	r0, #1
   12280:	bl	124bc <__assert_fail@plt+0xfa8>
   12284:	mov	fp, #1
   12288:	b	11a8c <__assert_fail@plt+0x578>
   1228c:	andeq	r9, r1, r0, asr #21
   12290:	andeq	r0, r0, r4, lsr #2
   12294:	andeq	r9, r1, ip, lsl #24
   12298:	andeq	r9, r1, ip, asr #24
   1229c:	andeq	r8, r0, ip, ror #13
   122a0:	andeq	r8, r0, r8, lsl #19
   122a4:	andeq	r8, r0, r0, lsl #21
   122a8:	andeq	r8, r0, ip, lsr sl
   122ac:	muleq	r1, r8, fp
   122b0:	andeq	r0, r0, r4, lsr r1
   122b4:	andeq	r9, r1, r4, ror #23
   122b8:	ldrdeq	r9, [r1], -r4
   122bc:	andeq	r9, r1, r4, asr #23
   122c0:	andeq	r9, r1, r8, lsl r8
   122c4:	andeq	r0, r0, r8, asr r1
   122c8:	andeq	r0, r0, r0, asr #2
   122cc:	andeq	r0, r0, ip, lsr #2
   122d0:	andeq	r8, r0, r8, asr r9
   122d4:	andeq	r8, r0, ip, asr r9
   122d8:	andeq	r8, r0, r0, lsr r9
   122dc:	andeq	r8, r0, r0, asr r8
   122e0:	andeq	r0, r0, r8, lsr #2
   122e4:	andeq	r8, r0, r0, lsr r8
   122e8:	andeq	r8, r0, ip, ror #15
   122ec:	andeq	r9, r1, r4, ror #17
   122f0:	ldrdeq	r9, [r1], -r0
   122f4:	andeq	r9, r1, ip, lsr #17
   122f8:	andeq	r9, r1, r4, lsr #16
   122fc:	andeq	r8, r0, r0, lsl #21
   12300:	andeq	r9, r1, r4, ror #15
   12304:	andeq	r8, r0, ip, lsr #18
   12308:	andeq	r9, r1, r0, lsr #14
   1230c:	andeq	r9, r1, ip, lsl #14
   12310:	ldrdeq	r9, [r1], -r0
   12314:	muleq	r1, r4, r6
   12318:	andeq	r9, r1, ip, ror #11
   1231c:	andeq	r8, r0, r0, ror #14
   12320:	andeq	r9, r1, ip, asr #11
   12324:	andeq	r8, r0, r4, lsr r5
   12328:	andeq	r9, r1, r8, ror #10
   1232c:	andeq	r8, r0, r4, lsr #9
   12330:	andeq	r9, r1, r8, lsl r5
   12334:	andeq	r8, r0, r0, asr #15
   12338:	andeq	r9, r1, r4, ror r4
   1233c:	andeq	r8, r0, r0, lsl r3
   12340:	ldrdeq	r8, [r0], -r0
   12344:	andeq	r8, r0, r8, ror r3
   12348:	andeq	r8, r0, ip, lsr #7
   1234c:	andeq	r9, r1, ip, lsl #5
   12350:	andeq	r8, r0, r4, lsr r3
   12354:	andeq	r8, r0, r8, ror #5
   12358:	andeq	r9, r1, r4, lsr r1
   1235c:	andeq	r8, r0, r4, asr #6
   12360:	andeq	r8, r0, r8, ror r0
   12364:	andeq	r8, r0, r0, ror #4
   12368:	andeq	r8, r0, r8, ror r0
   1236c:	andeq	r7, r0, r0, lsl #31
   12370:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   12374:	andeq	r7, r0, r4, ror pc
   12378:	andeq	r8, r0, r4, lsl #1
   1237c:	andeq	r7, r0, r0, lsl pc
   12380:	andeq	r7, r0, r4, lsr #29
   12384:	andeq	r7, r0, r8, lsl #29
   12388:	mov	fp, #0
   1238c:	mov	lr, #0
   12390:	pop	{r1}		; (ldr r1, [sp], #4)
   12394:	mov	r2, sp
   12398:	push	{r2}		; (str r2, [sp, #-4]!)
   1239c:	push	{r0}		; (str r0, [sp, #-4]!)
   123a0:	ldr	ip, [pc, #16]	; 123b8 <__assert_fail@plt+0xea4>
   123a4:	push	{ip}		; (str ip, [sp, #-4]!)
   123a8:	ldr	r0, [pc, #12]	; 123bc <__assert_fail@plt+0xea8>
   123ac:	ldr	r3, [pc, #12]	; 123c0 <__assert_fail@plt+0xeac>
   123b0:	bl	11358 <__libc_start_main@plt>
   123b4:	bl	114e4 <abort@plt>
   123b8:	andeq	r9, r1, r8, lsr #22
   123bc:	andeq	r1, r1, r0, lsr #10
   123c0:	andeq	r9, r1, r4, asr #21
   123c4:	ldr	r3, [pc, #20]	; 123e0 <__assert_fail@plt+0xecc>
   123c8:	ldr	r2, [pc, #20]	; 123e4 <__assert_fail@plt+0xed0>
   123cc:	add	r3, pc, r3
   123d0:	ldr	r2, [r3, r2]
   123d4:	cmp	r2, #0
   123d8:	bxeq	lr
   123dc:	b	11370 <__gmon_start__@plt>
   123e0:	andeq	r8, r1, ip, lsr #24
   123e4:	andeq	r0, r0, r8, lsr r1
   123e8:	push	{r3, lr}
   123ec:	movw	r0, #45484	; 0xb1ac
   123f0:	ldr	r3, [pc, #36]	; 1241c <__assert_fail@plt+0xf08>
   123f4:	movt	r0, #2
   123f8:	rsb	r3, r0, r3
   123fc:	cmp	r3, #6
   12400:	popls	{r3, pc}
   12404:	movw	r3, #0
   12408:	movt	r3, #0
   1240c:	cmp	r3, #0
   12410:	popeq	{r3, pc}
   12414:	blx	r3
   12418:	pop	{r3, pc}
   1241c:	andeq	fp, r2, pc, lsr #3
   12420:	push	{r3, lr}
   12424:	movw	r0, #45484	; 0xb1ac
   12428:	movw	r3, #45484	; 0xb1ac
   1242c:	movt	r0, #2
   12430:	movt	r3, #2
   12434:	rsb	r3, r0, r3
   12438:	asr	r3, r3, #2
   1243c:	add	r3, r3, r3, lsr #31
   12440:	asrs	r1, r3, #1
   12444:	popeq	{r3, pc}
   12448:	movw	r2, #0
   1244c:	movt	r2, #0
   12450:	cmp	r2, #0
   12454:	popeq	{r3, pc}
   12458:	blx	r2
   1245c:	pop	{r3, pc}
   12460:	push	{r4, lr}
   12464:	movw	r4, #45488	; 0xb1b0
   12468:	movt	r4, #2
   1246c:	ldrb	r3, [r4]
   12470:	cmp	r3, #0
   12474:	popne	{r4, pc}
   12478:	bl	123e8 <__assert_fail@plt+0xed4>
   1247c:	mov	r3, #1
   12480:	strb	r3, [r4]
   12484:	pop	{r4, pc}
   12488:	movw	r0, #44592	; 0xae30
   1248c:	movt	r0, #2
   12490:	push	{r3, lr}
   12494:	ldr	r3, [r0]
   12498:	cmp	r3, #0
   1249c:	beq	124b4 <__assert_fail@plt+0xfa0>
   124a0:	movw	r3, #0
   124a4:	movt	r3, #0
   124a8:	cmp	r3, #0
   124ac:	beq	124b4 <__assert_fail@plt+0xfa0>
   124b0:	blx	r3
   124b4:	pop	{r3, lr}
   124b8:	b	12420 <__assert_fail@plt+0xf0c>
   124bc:	push	{r4, r5, r6, lr}
   124c0:	subs	r4, r0, #0
   124c4:	ldr	r5, [pc, #552]	; 126f4 <__assert_fail@plt+0x11e0>
   124c8:	sub	sp, sp, #8
   124cc:	add	r5, pc, r5
   124d0:	beq	12518 <__assert_fail@plt+0x1004>
   124d4:	ldr	r3, [pc, #540]	; 126f8 <__assert_fail@plt+0x11e4>
   124d8:	mov	r2, #5
   124dc:	ldr	r1, [pc, #536]	; 126fc <__assert_fail@plt+0x11e8>
   124e0:	mov	r0, #0
   124e4:	ldr	r3, [r5, r3]
   124e8:	add	r1, pc, r1
   124ec:	ldr	r6, [r3]
   124f0:	bl	1128c <dcgettext@plt>
   124f4:	ldr	r3, [pc, #516]	; 12700 <__assert_fail@plt+0x11ec>
   124f8:	mov	r1, #1
   124fc:	ldr	r3, [r5, r3]
   12500:	ldr	r3, [r3]
   12504:	mov	r2, r0
   12508:	mov	r0, r6
   1250c:	bl	11424 <__fprintf_chk@plt>
   12510:	mov	r0, r4
   12514:	bl	11394 <exit@plt>
   12518:	ldr	r1, [pc, #484]	; 12704 <__assert_fail@plt+0x11f0>
   1251c:	mov	r2, #5
   12520:	add	r1, pc, r1
   12524:	bl	1128c <dcgettext@plt>
   12528:	ldr	r3, [pc, #464]	; 12700 <__assert_fail@plt+0x11ec>
   1252c:	ldr	r6, [r5, r3]
   12530:	ldr	r3, [r6]
   12534:	mov	r2, r3
   12538:	str	r3, [sp]
   1253c:	mov	r1, r0
   12540:	mov	r0, #1
   12544:	bl	1140c <__printf_chk@plt>
   12548:	ldr	r1, [pc, #440]	; 12708 <__assert_fail@plt+0x11f4>
   1254c:	mov	r2, #5
   12550:	mov	r0, r4
   12554:	add	r1, pc, r1
   12558:	bl	1128c <dcgettext@plt>
   1255c:	ldr	r3, [pc, #424]	; 1270c <__assert_fail@plt+0x11f8>
   12560:	ldr	r5, [r5, r3]
   12564:	ldr	r1, [r5]
   12568:	bl	11214 <fputs_unlocked@plt>
   1256c:	ldr	r1, [pc, #412]	; 12710 <__assert_fail@plt+0x11fc>
   12570:	mov	r2, #5
   12574:	mov	r0, r4
   12578:	add	r1, pc, r1
   1257c:	bl	1128c <dcgettext@plt>
   12580:	ldr	r1, [r5]
   12584:	bl	11214 <fputs_unlocked@plt>
   12588:	ldr	r1, [pc, #388]	; 12714 <__assert_fail@plt+0x1200>
   1258c:	mov	r2, #5
   12590:	mov	r0, r4
   12594:	add	r1, pc, r1
   12598:	bl	1128c <dcgettext@plt>
   1259c:	ldr	r1, [r5]
   125a0:	bl	11214 <fputs_unlocked@plt>
   125a4:	ldr	r1, [pc, #364]	; 12718 <__assert_fail@plt+0x1204>
   125a8:	mov	r2, #5
   125ac:	mov	r0, r4
   125b0:	add	r1, pc, r1
   125b4:	bl	1128c <dcgettext@plt>
   125b8:	ldr	r1, [r5]
   125bc:	bl	11214 <fputs_unlocked@plt>
   125c0:	ldr	r1, [pc, #340]	; 1271c <__assert_fail@plt+0x1208>
   125c4:	mov	r2, #5
   125c8:	mov	r0, r4
   125cc:	add	r1, pc, r1
   125d0:	bl	1128c <dcgettext@plt>
   125d4:	ldr	r1, [r5]
   125d8:	bl	11214 <fputs_unlocked@plt>
   125dc:	ldr	r1, [pc, #316]	; 12720 <__assert_fail@plt+0x120c>
   125e0:	mov	r2, #5
   125e4:	mov	r0, r4
   125e8:	add	r1, pc, r1
   125ec:	bl	1128c <dcgettext@plt>
   125f0:	ldr	r1, [r5]
   125f4:	bl	11214 <fputs_unlocked@plt>
   125f8:	ldr	r1, [pc, #292]	; 12724 <__assert_fail@plt+0x1210>
   125fc:	mov	r2, #5
   12600:	mov	r0, r4
   12604:	add	r1, pc, r1
   12608:	bl	1128c <dcgettext@plt>
   1260c:	ldr	r1, [r5]
   12610:	bl	11214 <fputs_unlocked@plt>
   12614:	ldr	r1, [pc, #268]	; 12728 <__assert_fail@plt+0x1214>
   12618:	mov	r2, #5
   1261c:	mov	r0, r4
   12620:	add	r1, pc, r1
   12624:	bl	1128c <dcgettext@plt>
   12628:	ldr	r1, [r5]
   1262c:	bl	11214 <fputs_unlocked@plt>
   12630:	ldr	r1, [pc, #244]	; 1272c <__assert_fail@plt+0x1218>
   12634:	mov	r2, #5
   12638:	mov	r0, r4
   1263c:	add	r1, pc, r1
   12640:	bl	1128c <dcgettext@plt>
   12644:	ldr	r2, [pc, #228]	; 12730 <__assert_fail@plt+0x121c>
   12648:	ldr	r3, [pc, #228]	; 12734 <__assert_fail@plt+0x1220>
   1264c:	add	r2, pc, r2
   12650:	add	r3, pc, r3
   12654:	mov	r1, r0
   12658:	mov	r0, #1
   1265c:	bl	1140c <__printf_chk@plt>
   12660:	mov	r0, #5
   12664:	mov	r1, r4
   12668:	bl	11454 <setlocale@plt>
   1266c:	cmp	r0, #0
   12670:	beq	1268c <__assert_fail@plt+0x1178>
   12674:	ldr	r1, [pc, #188]	; 12738 <__assert_fail@plt+0x1224>
   12678:	mov	r2, #3
   1267c:	add	r1, pc, r1
   12680:	bl	114d8 <strncmp@plt>
   12684:	cmp	r0, #0
   12688:	bne	126c0 <__assert_fail@plt+0x11ac>
   1268c:	ldr	r1, [pc, #168]	; 1273c <__assert_fail@plt+0x1228>
   12690:	mov	r2, #5
   12694:	mov	r0, #0
   12698:	add	r1, pc, r1
   1269c:	bl	1128c <dcgettext@plt>
   126a0:	mov	r5, r0
   126a4:	ldr	r0, [r6]
   126a8:	bl	12884 <close_stdout@@Base+0x118>
   126ac:	mov	r1, r5
   126b0:	mov	r2, r0
   126b4:	mov	r0, #1
   126b8:	bl	1140c <__printf_chk@plt>
   126bc:	b	12510 <__assert_fail@plt+0xffc>
   126c0:	ldr	r1, [pc, #120]	; 12740 <__assert_fail@plt+0x122c>
   126c4:	mov	r2, #5
   126c8:	mov	r0, r4
   126cc:	add	r1, pc, r1
   126d0:	bl	1128c <dcgettext@plt>
   126d4:	mov	r5, r0
   126d8:	ldr	r0, [r6]
   126dc:	bl	12884 <close_stdout@@Base+0x118>
   126e0:	mov	r1, r5
   126e4:	mov	r2, r0
   126e8:	mov	r0, #1
   126ec:	bl	1140c <__printf_chk@plt>
   126f0:	b	1268c <__assert_fail@plt+0x1178>
   126f4:	andeq	r8, r1, ip, lsr #22
   126f8:	andeq	r0, r0, r0, lsr r1
   126fc:	andeq	r7, r0, r8, ror r6
   12700:	andeq	r0, r0, ip, asr #2
   12704:	andeq	r7, r0, r8, ror #12
   12708:			; <UNDEFINED> instruction: 0x000076bc
   1270c:	andeq	r0, r0, r0, asr #2
   12710:	andeq	r7, r0, r4, lsl #14
   12714:			; <UNDEFINED> instruction: 0x000077b4
   12718:	andeq	r7, r0, r8, lsl r8
   1271c:	andeq	r7, r0, r0, asr #16
   12720:	andeq	r7, r0, r8, ror #16
   12724:	andeq	r7, r0, ip, ror r8
   12728:	muleq	r0, r8, r8
   1272c:	andeq	r7, r0, r8, asr #17
   12730:	ldrdeq	r7, [r0], -r0
   12734:	ldrdeq	r7, [r0], -ip
   12738:	ldrdeq	r7, [r0], -r8
   1273c:	andeq	r7, r0, r8, lsl #18
   12740:	andeq	r7, r0, ip, lsl #17
   12744:	ldr	r3, [pc, #8]	; 12754 <__assert_fail@plt+0x1240>
   12748:	add	r3, pc, r3
   1274c:	str	r0, [r3]
   12750:	bx	lr
   12754:	andeq	r8, r1, ip, lsl #21
   12758:	ldr	r3, [pc, #8]	; 12768 <__assert_fail@plt+0x1254>
   1275c:	add	r3, pc, r3
   12760:	strb	r0, [r3, #4]
   12764:	bx	lr
   12768:	andeq	r8, r1, r8, ror sl

0001276c <close_stdout@@Base>:
   1276c:	push	{r4, r5, r6, r7, lr}
   12770:	sub	sp, sp, #12
   12774:	ldr	r4, [pc, #228]	; 12860 <close_stdout@@Base+0xf4>
   12778:	ldr	r3, [pc, #228]	; 12864 <close_stdout@@Base+0xf8>
   1277c:	add	r4, pc, r4
   12780:	ldr	r3, [r4, r3]
   12784:	ldr	r0, [r3]
   12788:	bl	173d8 <fts_children@@Base+0x1d4>
   1278c:	cmp	r0, #0
   12790:	beq	127b8 <close_stdout@@Base+0x4c>
   12794:	ldr	r3, [pc, #204]	; 12868 <close_stdout@@Base+0xfc>
   12798:	add	r3, pc, r3
   1279c:	ldrb	r3, [r3, #4]
   127a0:	cmp	r3, #0
   127a4:	beq	127d8 <close_stdout@@Base+0x6c>
   127a8:	bl	113dc <__errno_location@plt>
   127ac:	ldr	r3, [r0]
   127b0:	cmp	r3, #32
   127b4:	bne	127d8 <close_stdout@@Base+0x6c>
   127b8:	ldr	r3, [pc, #172]	; 1286c <close_stdout@@Base+0x100>
   127bc:	ldr	r3, [r4, r3]
   127c0:	ldr	r0, [r3]
   127c4:	bl	173d8 <fts_children@@Base+0x1d4>
   127c8:	cmp	r0, #0
   127cc:	bne	1282c <close_stdout@@Base+0xc0>
   127d0:	add	sp, sp, #12
   127d4:	pop	{r4, r5, r6, r7, pc}
   127d8:	ldr	r1, [pc, #144]	; 12870 <close_stdout@@Base+0x104>
   127dc:	mov	r0, #0
   127e0:	mov	r2, #5
   127e4:	add	r1, pc, r1
   127e8:	bl	1128c <dcgettext@plt>
   127ec:	ldr	r3, [pc, #128]	; 12874 <close_stdout@@Base+0x108>
   127f0:	ldr	r5, [pc, r3]
   127f4:	cmp	r5, #0
   127f8:	mov	r6, r0
   127fc:	beq	1283c <close_stdout@@Base+0xd0>
   12800:	bl	113dc <__errno_location@plt>
   12804:	ldr	r7, [r0]
   12808:	mov	r0, r5
   1280c:	bl	146c4 <close_stdout@@Base+0x1f58>
   12810:	ldr	r2, [pc, #96]	; 12878 <close_stdout@@Base+0x10c>
   12814:	str	r6, [sp]
   12818:	mov	r1, r7
   1281c:	add	r2, pc, r2
   12820:	mov	r3, r0
   12824:	mov	r0, #0
   12828:	bl	11328 <error@plt>
   1282c:	ldr	r3, [pc, #72]	; 1287c <close_stdout@@Base+0x110>
   12830:	ldr	r3, [r4, r3]
   12834:	ldr	r0, [r3]
   12838:	bl	1125c <_exit@plt>
   1283c:	bl	113dc <__errno_location@plt>
   12840:	ldr	r2, [pc, #56]	; 12880 <close_stdout@@Base+0x114>
   12844:	add	r2, pc, r2
   12848:	mov	r3, r0
   1284c:	mov	r0, r5
   12850:	ldr	r1, [r3]
   12854:	mov	r3, r6
   12858:	bl	11328 <error@plt>
   1285c:	b	1282c <close_stdout@@Base+0xc0>
   12860:	andeq	r8, r1, ip, ror r8
   12864:	andeq	r0, r0, r0, asr #2
   12868:	andeq	r8, r1, ip, lsr sl
   1286c:	andeq	r0, r0, r0, lsr r1
   12870:	andeq	r7, r0, r8, lsl #25
   12874:	andeq	r8, r1, r4, ror #19
   12878:	andeq	r7, r0, ip, asr ip
   1287c:	andeq	r0, r0, r4, asr #2
   12880:	andeq	r7, r0, r8, lsr ip
   12884:	ldrb	r3, [r0]
   12888:	cmp	r3, #47	; 0x2f
   1288c:	bne	128a8 <close_stdout@@Base+0x13c>
   12890:	add	r2, r0, #1
   12894:	mov	r0, r2
   12898:	add	r2, r2, #1
   1289c:	ldrb	r3, [r0]
   128a0:	cmp	r3, #47	; 0x2f
   128a4:	beq	12894 <close_stdout@@Base+0x128>
   128a8:	cmp	r3, #0
   128ac:	bxeq	lr
   128b0:	mov	r2, r0
   128b4:	mov	r1, #0
   128b8:	cmp	r3, #47	; 0x2f
   128bc:	moveq	r1, #1
   128c0:	beq	128d0 <close_stdout@@Base+0x164>
   128c4:	cmp	r1, #0
   128c8:	movne	r0, r2
   128cc:	movne	r1, #0
   128d0:	ldrb	r3, [r2, #1]!
   128d4:	cmp	r3, #0
   128d8:	bne	128b8 <close_stdout@@Base+0x14c>
   128dc:	bx	lr
   128e0:	push	{r4, lr}
   128e4:	mov	r4, r0
   128e8:	bl	113a0 <strlen@plt>
   128ec:	cmp	r0, #1
   128f0:	popls	{r4, pc}
   128f4:	sub	r3, r0, #1
   128f8:	ldrb	r2, [r4, r3]
   128fc:	cmp	r2, #47	; 0x2f
   12900:	popne	{r4, pc}
   12904:	mov	r0, r3
   12908:	cmp	r0, #1
   1290c:	sub	r3, r3, #1
   12910:	beq	12924 <close_stdout@@Base+0x1b8>
   12914:	ldrb	r2, [r4, r3]
   12918:	cmp	r2, #47	; 0x2f
   1291c:	popne	{r4, pc}
   12920:	b	12904 <close_stdout@@Base+0x198>
   12924:	pop	{r4, pc}
   12928:	and	r3, r0, #61440	; 0xf000
   1292c:	cmp	r3, #32768	; 0x8000
   12930:	moveq	r3, #45	; 0x2d
   12934:	beq	12980 <close_stdout@@Base+0x214>
   12938:	cmp	r3, #16384	; 0x4000
   1293c:	moveq	r3, #100	; 0x64
   12940:	beq	12980 <close_stdout@@Base+0x214>
   12944:	cmp	r3, #24576	; 0x6000
   12948:	moveq	r3, #98	; 0x62
   1294c:	beq	12980 <close_stdout@@Base+0x214>
   12950:	cmp	r3, #8192	; 0x2000
   12954:	moveq	r3, #99	; 0x63
   12958:	beq	12980 <close_stdout@@Base+0x214>
   1295c:	cmp	r3, #40960	; 0xa000
   12960:	moveq	r3, #108	; 0x6c
   12964:	beq	12980 <close_stdout@@Base+0x214>
   12968:	cmp	r3, #4096	; 0x1000
   1296c:	moveq	r3, #112	; 0x70
   12970:	beq	12980 <close_stdout@@Base+0x214>
   12974:	cmp	r3, #49152	; 0xc000
   12978:	movne	r3, #63	; 0x3f
   1297c:	moveq	r3, #115	; 0x73
   12980:	tst	r0, #256	; 0x100
   12984:	strb	r3, [r1]
   12988:	moveq	r3, #45	; 0x2d
   1298c:	movne	r3, #114	; 0x72
   12990:	tst	r0, #128	; 0x80
   12994:	strb	r3, [r1, #1]
   12998:	moveq	r3, #45	; 0x2d
   1299c:	movne	r3, #119	; 0x77
   129a0:	tst	r0, #2048	; 0x800
   129a4:	strb	r3, [r1, #2]
   129a8:	beq	12a40 <close_stdout@@Base+0x2d4>
   129ac:	tst	r0, #64	; 0x40
   129b0:	moveq	r3, #83	; 0x53
   129b4:	movne	r3, #115	; 0x73
   129b8:	tst	r0, #32
   129bc:	strb	r3, [r1, #3]
   129c0:	moveq	r3, #45	; 0x2d
   129c4:	movne	r3, #114	; 0x72
   129c8:	tst	r0, #16
   129cc:	strb	r3, [r1, #4]
   129d0:	moveq	r3, #45	; 0x2d
   129d4:	movne	r3, #119	; 0x77
   129d8:	tst	r0, #1024	; 0x400
   129dc:	strb	r3, [r1, #5]
   129e0:	beq	12a60 <close_stdout@@Base+0x2f4>
   129e4:	tst	r0, #8
   129e8:	moveq	r3, #83	; 0x53
   129ec:	movne	r3, #115	; 0x73
   129f0:	tst	r0, #4
   129f4:	strb	r3, [r1, #6]
   129f8:	moveq	r3, #45	; 0x2d
   129fc:	movne	r3, #114	; 0x72
   12a00:	tst	r0, #2
   12a04:	strb	r3, [r1, #7]
   12a08:	moveq	r3, #45	; 0x2d
   12a0c:	movne	r3, #119	; 0x77
   12a10:	tst	r0, #512	; 0x200
   12a14:	strb	r3, [r1, #8]
   12a18:	beq	12a50 <close_stdout@@Base+0x2e4>
   12a1c:	tst	r0, #1
   12a20:	moveq	r3, #84	; 0x54
   12a24:	movne	r3, #116	; 0x74
   12a28:	strb	r3, [r1, #9]
   12a2c:	mov	r2, #32
   12a30:	mov	r3, #0
   12a34:	strb	r2, [r1, #10]
   12a38:	strb	r3, [r1, #11]
   12a3c:	bx	lr
   12a40:	tst	r0, #64	; 0x40
   12a44:	moveq	r3, #45	; 0x2d
   12a48:	movne	r3, #120	; 0x78
   12a4c:	b	129b8 <close_stdout@@Base+0x24c>
   12a50:	tst	r0, #1
   12a54:	moveq	r3, #45	; 0x2d
   12a58:	movne	r3, #120	; 0x78
   12a5c:	b	12a28 <close_stdout@@Base+0x2bc>
   12a60:	tst	r0, #8
   12a64:	moveq	r3, #45	; 0x2d
   12a68:	movne	r3, #120	; 0x78
   12a6c:	b	129f0 <close_stdout@@Base+0x284>
   12a70:	ldr	r0, [r0, #16]
   12a74:	b	12928 <close_stdout@@Base+0x1bc>
   12a78:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a7c:	mov	r5, r0
   12a80:	ldrb	r2, [r0]
   12a84:	sub	r3, r2, #48	; 0x30
   12a88:	cmp	r3, #7
   12a8c:	bls	12b2c <close_stdout@@Base+0x3c0>
   12a90:	cmp	r2, #0
   12a94:	moveq	r0, #16
   12a98:	beq	12adc <close_stdout@@Base+0x370>
   12a9c:	mov	lr, r5
   12aa0:	mov	r1, #1
   12aa4:	cmp	r2, #43	; 0x2b
   12aa8:	moveq	r3, #1
   12aac:	beq	12ac0 <close_stdout@@Base+0x354>
   12ab0:	and	r2, r2, #239	; 0xef
   12ab4:	subs	r2, r2, #45	; 0x2d
   12ab8:	rsbs	r3, r2, #0
   12abc:	adcs	r3, r3, r2
   12ac0:	ldrb	r2, [lr, #1]!
   12ac4:	add	r1, r1, r3
   12ac8:	cmp	r2, #0
   12acc:	bne	12aa4 <close_stdout@@Base+0x338>
   12ad0:	cmn	r1, #-268435455	; 0xf0000001
   12ad4:	bhi	12e00 <close_stdout@@Base+0x694>
   12ad8:	lsl	r0, r1, #4
   12adc:	bl	14e40 <close_stdout@@Base+0x26d4>
   12ae0:	mov	r7, #0
   12ae4:	movw	r9, #4095	; 0xfff
   12ae8:	mov	r8, #1
   12aec:	mov	r6, #0
   12af0:	mov	r3, r5
   12af4:	add	r5, r5, #1
   12af8:	ldrb	sl, [r3]
   12afc:	cmp	sl, #97	; 0x61
   12b00:	beq	12d30 <close_stdout@@Base+0x5c4>
   12b04:	bls	12b64 <close_stdout@@Base+0x3f8>
   12b08:	cmp	sl, #111	; 0x6f
   12b0c:	beq	12d4c <close_stdout@@Base+0x5e0>
   12b10:	cmp	sl, #117	; 0x75
   12b14:	beq	12d44 <close_stdout@@Base+0x5d8>
   12b18:	cmp	sl, #103	; 0x67
   12b1c:	beq	12d38 <close_stdout@@Base+0x5cc>
   12b20:	bl	11250 <free@plt>
   12b24:	mov	r0, #0
   12b28:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b2c:	mov	r1, r0
   12b30:	mov	r4, #0
   12b34:	b	12b4c <close_stdout@@Base+0x3e0>
   12b38:	ldrb	r2, [r1, #1]
   12b3c:	sub	r1, r2, #48	; 0x30
   12b40:	cmp	r1, #7
   12b44:	bhi	12d58 <close_stdout@@Base+0x5ec>
   12b48:	mov	r1, ip
   12b4c:	add	r4, r2, r4, lsl #3
   12b50:	add	ip, r1, #1
   12b54:	sub	r4, r4, #48	; 0x30
   12b58:	cmp	r4, #4096	; 0x1000
   12b5c:	bcc	12b38 <close_stdout@@Base+0x3cc>
   12b60:	b	12b24 <close_stdout@@Base+0x3b8>
   12b64:	cmp	sl, #45	; 0x2d
   12b68:	beq	12b7c <close_stdout@@Base+0x410>
   12b6c:	cmp	sl, #61	; 0x3d
   12b70:	beq	12b7c <close_stdout@@Base+0x410>
   12b74:	cmp	sl, #43	; 0x2b
   12b78:	bne	12b20 <close_stdout@@Base+0x3b4>
   12b7c:	add	r5, r0, r7, lsl #4
   12b80:	add	r7, r7, #1
   12b84:	add	r4, r5, #8
   12b88:	b	12be8 <close_stdout@@Base+0x47c>
   12b8c:	cmp	ip, #111	; 0x6f
   12b90:	beq	12d20 <close_stdout@@Base+0x5b4>
   12b94:	cmp	ip, #117	; 0x75
   12b98:	addeq	r3, r3, #2
   12b9c:	moveq	r2, #3
   12ba0:	moveq	fp, #448	; 0x1c0
   12ba4:	bne	12c3c <close_stdout@@Base+0x4d0>
   12ba8:	cmp	r6, #0
   12bac:	strb	sl, [r4, #-8]
   12bb0:	strb	r2, [r4, #-7]
   12bb4:	str	r6, [r4, #-4]
   12bb8:	str	fp, [r5, #8]
   12bbc:	andne	fp, fp, r6
   12bc0:	str	fp, [r5, #12]
   12bc4:	ldrb	sl, [r3]
   12bc8:	cmp	sl, #43	; 0x2b
   12bcc:	beq	12bdc <close_stdout@@Base+0x470>
   12bd0:	and	r2, sl, #239	; 0xef
   12bd4:	cmp	r2, #45	; 0x2d
   12bd8:	bne	12de0 <close_stdout@@Base+0x674>
   12bdc:	add	r5, r5, #16
   12be0:	add	r4, r4, #16
   12be4:	add	r7, r7, #1
   12be8:	ldrb	ip, [r3, #1]
   12bec:	add	r1, r3, #1
   12bf0:	cmp	ip, #103	; 0x67
   12bf4:	beq	12d10 <close_stdout@@Base+0x5a4>
   12bf8:	bhi	12b8c <close_stdout@@Base+0x420>
   12bfc:	sub	r3, ip, #48	; 0x30
   12c00:	cmp	r3, #7
   12c04:	movls	r2, #0
   12c08:	bls	12c24 <close_stdout@@Base+0x4b8>
   12c0c:	b	12c3c <close_stdout@@Base+0x4d0>
   12c10:	ldrb	ip, [r1, #1]
   12c14:	sub	r1, ip, #48	; 0x30
   12c18:	cmp	r1, #7
   12c1c:	bhi	12db0 <close_stdout@@Base+0x644>
   12c20:	mov	r1, r3
   12c24:	add	r2, ip, r2, lsl #3
   12c28:	add	r3, r1, #1
   12c2c:	sub	r2, r2, #48	; 0x30
   12c30:	cmp	r2, #4096	; 0x1000
   12c34:	bcc	12c10 <close_stdout@@Base+0x4a4>
   12c38:	b	12b24 <close_stdout@@Base+0x3b8>
   12c3c:	mov	r2, #1
   12c40:	mov	fp, #0
   12c44:	sub	ip, ip, #88	; 0x58
   12c48:	mov	r3, r1
   12c4c:	cmp	ip, #32
   12c50:	addls	pc, pc, ip, lsl #2
   12c54:	b	12ba8 <close_stdout@@Base+0x43c>
   12c58:	b	12cdc <close_stdout@@Base+0x570>
   12c5c:	b	12ba8 <close_stdout@@Base+0x43c>
   12c60:	b	12ba8 <close_stdout@@Base+0x43c>
   12c64:	b	12ba8 <close_stdout@@Base+0x43c>
   12c68:	b	12ba8 <close_stdout@@Base+0x43c>
   12c6c:	b	12ba8 <close_stdout@@Base+0x43c>
   12c70:	b	12ba8 <close_stdout@@Base+0x43c>
   12c74:	b	12ba8 <close_stdout@@Base+0x43c>
   12c78:	b	12ba8 <close_stdout@@Base+0x43c>
   12c7c:	b	12ba8 <close_stdout@@Base+0x43c>
   12c80:	b	12ba8 <close_stdout@@Base+0x43c>
   12c84:	b	12ba8 <close_stdout@@Base+0x43c>
   12c88:	b	12ba8 <close_stdout@@Base+0x43c>
   12c8c:	b	12ba8 <close_stdout@@Base+0x43c>
   12c90:	b	12ba8 <close_stdout@@Base+0x43c>
   12c94:	b	12ba8 <close_stdout@@Base+0x43c>
   12c98:	b	12ba8 <close_stdout@@Base+0x43c>
   12c9c:	b	12ba8 <close_stdout@@Base+0x43c>
   12ca0:	b	12ba8 <close_stdout@@Base+0x43c>
   12ca4:	b	12ba8 <close_stdout@@Base+0x43c>
   12ca8:	b	12ba8 <close_stdout@@Base+0x43c>
   12cac:	b	12ba8 <close_stdout@@Base+0x43c>
   12cb0:	b	12ba8 <close_stdout@@Base+0x43c>
   12cb4:	b	12ba8 <close_stdout@@Base+0x43c>
   12cb8:	b	12ba8 <close_stdout@@Base+0x43c>
   12cbc:	b	12ba8 <close_stdout@@Base+0x43c>
   12cc0:	b	12d08 <close_stdout@@Base+0x59c>
   12cc4:	b	12d00 <close_stdout@@Base+0x594>
   12cc8:	b	12cf8 <close_stdout@@Base+0x58c>
   12ccc:	b	12ba8 <close_stdout@@Base+0x43c>
   12cd0:	b	12ba8 <close_stdout@@Base+0x43c>
   12cd4:	b	12cf0 <close_stdout@@Base+0x584>
   12cd8:	b	12ce8 <close_stdout@@Base+0x57c>
   12cdc:	mov	r2, #2
   12ce0:	ldrb	ip, [r1, #1]!
   12ce4:	b	12c44 <close_stdout@@Base+0x4d8>
   12ce8:	orr	fp, fp, #73	; 0x49
   12cec:	b	12ce0 <close_stdout@@Base+0x574>
   12cf0:	orr	fp, fp, #146	; 0x92
   12cf4:	b	12ce0 <close_stdout@@Base+0x574>
   12cf8:	orr	fp, fp, #512	; 0x200
   12cfc:	b	12ce0 <close_stdout@@Base+0x574>
   12d00:	orr	fp, fp, #3072	; 0xc00
   12d04:	b	12ce0 <close_stdout@@Base+0x574>
   12d08:	orr	fp, fp, #292	; 0x124
   12d0c:	b	12ce0 <close_stdout@@Base+0x574>
   12d10:	add	r3, r3, #2
   12d14:	mov	r2, #3
   12d18:	mov	fp, #56	; 0x38
   12d1c:	b	12ba8 <close_stdout@@Base+0x43c>
   12d20:	add	r3, r3, #2
   12d24:	mov	r2, #3
   12d28:	mov	fp, #7
   12d2c:	b	12ba8 <close_stdout@@Base+0x43c>
   12d30:	movw	r6, #4095	; 0xfff
   12d34:	b	12af0 <close_stdout@@Base+0x384>
   12d38:	orr	r6, r6, #1072	; 0x430
   12d3c:	orr	r6, r6, #8
   12d40:	b	12af0 <close_stdout@@Base+0x384>
   12d44:	orr	r6, r6, #2496	; 0x9c0
   12d48:	b	12af0 <close_stdout@@Base+0x384>
   12d4c:	orr	r6, r6, #516	; 0x204
   12d50:	orr	r6, r6, #3
   12d54:	b	12af0 <close_stdout@@Base+0x384>
   12d58:	cmp	r2, #0
   12d5c:	bne	12b24 <close_stdout@@Base+0x3b8>
   12d60:	rsb	ip, r5, ip
   12d64:	mov	r0, #32
   12d68:	cmp	ip, #4
   12d6c:	andle	r5, r4, #3072	; 0xc00
   12d70:	movwgt	r5, #4095	; 0xfff
   12d74:	mvnle	r5, r5, lsr #10
   12d78:	mvnle	r5, r5, lsl #10
   12d7c:	bl	14e40 <close_stdout@@Base+0x26d4>
   12d80:	mov	r1, #61	; 0x3d
   12d84:	mov	r2, #1
   12d88:	mov	r3, r0
   12d8c:	strb	r1, [r0]
   12d90:	strb	r2, [r0, #1]
   12d94:	movw	r1, #4095	; 0xfff
   12d98:	str	r4, [r0, #8]
   12d9c:	mov	r2, #0
   12da0:	str	r5, [r0, #12]
   12da4:	str	r1, [r0, #4]
   12da8:	strb	r2, [r3, #17]
   12dac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12db0:	cmp	r6, #0
   12db4:	bne	12b24 <close_stdout@@Base+0x3b8>
   12db8:	cmp	ip, #44	; 0x2c
   12dbc:	cmpne	ip, #0
   12dc0:	bne	12b24 <close_stdout@@Base+0x3b8>
   12dc4:	movw	r6, #4095	; 0xfff
   12dc8:	strb	sl, [r4, #-8]
   12dcc:	strb	r8, [r4, #-7]
   12dd0:	mov	fp, r6
   12dd4:	str	r9, [r4, #-4]
   12dd8:	str	r2, [r5, #8]
   12ddc:	b	12bc0 <close_stdout@@Base+0x454>
   12de0:	cmp	sl, #44	; 0x2c
   12de4:	addeq	r5, r3, #1
   12de8:	beq	12aec <close_stdout@@Base+0x380>
   12dec:	cmp	sl, #0
   12df0:	bne	12b20 <close_stdout@@Base+0x3b4>
   12df4:	add	r7, r0, r7, lsl #4
   12df8:	strb	sl, [r7, #1]
   12dfc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e00:	bl	15054 <close_stdout@@Base+0x28e8>
   12e04:	ldr	r3, [pc, #132]	; 12e90 <close_stdout@@Base+0x724>
   12e08:	mov	r1, r0
   12e0c:	ldr	ip, [pc, #128]	; 12e94 <close_stdout@@Base+0x728>
   12e10:	mov	r0, #3
   12e14:	add	r3, pc, r3
   12e18:	push	{r4, r5, r6, lr}
   12e1c:	sub	sp, sp, #112	; 0x70
   12e20:	ldr	r4, [r3, ip]
   12e24:	mov	r2, sp
   12e28:	ldr	r3, [r4]
   12e2c:	str	r3, [sp, #108]	; 0x6c
   12e30:	bl	114cc <__xstat64@plt>
   12e34:	subs	r5, r0, #0
   12e38:	movne	r0, #0
   12e3c:	bne	12e74 <close_stdout@@Base+0x708>
   12e40:	mov	r0, #32
   12e44:	ldr	r6, [sp, #16]
   12e48:	bl	14e40 <close_stdout@@Base+0x26d4>
   12e4c:	mov	r2, #61	; 0x3d
   12e50:	mov	r1, #1
   12e54:	mov	r3, r0
   12e58:	strb	r2, [r0]
   12e5c:	strb	r5, [r0, #17]
   12e60:	movw	r2, #4095	; 0xfff
   12e64:	str	r6, [r0, #8]
   12e68:	strb	r1, [r0, #1]
   12e6c:	str	r2, [r3, #4]
   12e70:	str	r2, [r3, #12]
   12e74:	ldr	r2, [sp, #108]	; 0x6c
   12e78:	ldr	r3, [r4]
   12e7c:	cmp	r2, r3
   12e80:	bne	12e8c <close_stdout@@Base+0x720>
   12e84:	add	sp, sp, #112	; 0x70
   12e88:	pop	{r4, r5, r6, pc}
   12e8c:	bl	11298 <__stack_chk_fail@plt>
   12e90:	andeq	r8, r1, r4, ror #3
   12e94:	andeq	r0, r0, r4, lsr #2
   12e98:	push	{r4, r5, r6, r7, r8, r9}
   12e9c:	ubfx	r0, r0, #0, #12
   12ea0:	ldrb	ip, [r3, #1]
   12ea4:	ldr	r8, [sp, #24]
   12ea8:	cmp	ip, #0
   12eac:	beq	12fc0 <close_stdout@@Base+0x854>
   12eb0:	add	r3, r3, #16
   12eb4:	mvn	r2, r2
   12eb8:	mov	r7, #0
   12ebc:	b	12f40 <close_stdout@@Base+0x7d4>
   12ec0:	cmp	ip, #3
   12ec4:	bne	12efc <close_stdout@@Base+0x790>
   12ec8:	and	r5, r5, r0
   12ecc:	tst	r5, #292	; 0x124
   12ed0:	moveq	ip, #0
   12ed4:	movne	ip, #292	; 0x124
   12ed8:	tst	r5, #146	; 0x92
   12edc:	moveq	r9, #0
   12ee0:	movne	r9, #146	; 0x92
   12ee4:	tst	r5, #73	; 0x49
   12ee8:	orr	ip, r9, ip
   12eec:	moveq	r9, #0
   12ef0:	movne	r9, #73	; 0x49
   12ef4:	orr	ip, ip, r9
   12ef8:	orr	r5, ip, r5
   12efc:	cmp	r4, #0
   12f00:	ldrb	ip, [r3, #-16]
   12f04:	bic	r5, r5, r6
   12f08:	movne	r9, r4
   12f0c:	moveq	r9, r2
   12f10:	cmp	ip, #45	; 0x2d
   12f14:	and	r5, r5, r9
   12f18:	beq	12fb4 <close_stdout@@Base+0x848>
   12f1c:	cmp	ip, #61	; 0x3d
   12f20:	beq	12f74 <close_stdout@@Base+0x808>
   12f24:	cmp	ip, #43	; 0x2b
   12f28:	orreq	r7, r7, r5
   12f2c:	orreq	r0, r0, r5
   12f30:	add	r3, r3, #16
   12f34:	ldrb	ip, [r3, #-15]
   12f38:	cmp	ip, #0
   12f3c:	beq	12fa4 <close_stdout@@Base+0x838>
   12f40:	cmp	r1, #0
   12f44:	ldr	r6, [r3, #-4]
   12f48:	ldr	r4, [r3, #-12]
   12f4c:	movne	r5, #3072	; 0xc00
   12f50:	moveq	r5, #0
   12f54:	cmp	ip, #2
   12f58:	bic	r6, r5, r6
   12f5c:	ldr	r5, [r3, #-8]
   12f60:	bne	12ec0 <close_stdout@@Base+0x754>
   12f64:	and	ip, r0, #73	; 0x49
   12f68:	orrs	ip, ip, r1
   12f6c:	orrne	r5, r5, #73	; 0x49
   12f70:	b	12efc <close_stdout@@Base+0x790>
   12f74:	add	r3, r3, #16
   12f78:	cmp	r4, #0
   12f7c:	ldrb	ip, [r3, #-15]
   12f80:	mvnne	r4, r4
   12f84:	orr	r6, r4, r6
   12f88:	cmp	ip, #0
   12f8c:	and	r0, r6, r0
   12f90:	mvn	r6, r6
   12f94:	ubfx	r6, r6, #0, #12
   12f98:	orr	r7, r7, r6
   12f9c:	orr	r0, r0, r5
   12fa0:	bne	12f40 <close_stdout@@Base+0x7d4>
   12fa4:	cmp	r8, #0
   12fa8:	strne	r7, [r8]
   12fac:	pop	{r4, r5, r6, r7, r8, r9}
   12fb0:	bx	lr
   12fb4:	orr	r7, r7, r5
   12fb8:	bic	r0, r0, r5
   12fbc:	b	12f30 <close_stdout@@Base+0x7c4>
   12fc0:	mov	r7, ip
   12fc4:	b	12fa4 <close_stdout@@Base+0x838>
   12fc8:	push	{r3, r4, r5, r6, r7, lr}
   12fcc:	subs	r4, r0, #0
   12fd0:	ldr	r5, [pc, #172]	; 13084 <close_stdout@@Base+0x918>
   12fd4:	add	r5, pc, r5
   12fd8:	beq	13060 <close_stdout@@Base+0x8f4>
   12fdc:	mov	r1, #47	; 0x2f
   12fe0:	bl	11460 <strrchr@plt>
   12fe4:	subs	r6, r0, #0
   12fe8:	beq	13044 <close_stdout@@Base+0x8d8>
   12fec:	add	r7, r6, #1
   12ff0:	rsb	r3, r4, r7
   12ff4:	cmp	r3, #6
   12ff8:	ble	13044 <close_stdout@@Base+0x8d8>
   12ffc:	ldr	r1, [pc, #132]	; 13088 <close_stdout@@Base+0x91c>
   13000:	sub	r0, r6, #6
   13004:	mov	r2, #7
   13008:	add	r1, pc, r1
   1300c:	bl	114d8 <strncmp@plt>
   13010:	cmp	r0, #0
   13014:	bne	13044 <close_stdout@@Base+0x8d8>
   13018:	ldr	r1, [pc, #108]	; 1308c <close_stdout@@Base+0x920>
   1301c:	mov	r0, r7
   13020:	mov	r2, #3
   13024:	add	r1, pc, r1
   13028:	bl	114d8 <strncmp@plt>
   1302c:	cmp	r0, #0
   13030:	movne	r4, r7
   13034:	ldreq	r3, [pc, #84]	; 13090 <close_stdout@@Base+0x924>
   13038:	addeq	r4, r6, #4
   1303c:	ldreq	r3, [r5, r3]
   13040:	streq	r4, [r3]
   13044:	ldr	r2, [pc, #72]	; 13094 <close_stdout@@Base+0x928>
   13048:	ldr	r3, [pc, #72]	; 13098 <close_stdout@@Base+0x92c>
   1304c:	ldr	r2, [r5, r2]
   13050:	str	r4, [r2]
   13054:	ldr	r3, [r5, r3]
   13058:	str	r4, [r3]
   1305c:	pop	{r3, r4, r5, r6, r7, pc}
   13060:	ldr	r3, [pc, #52]	; 1309c <close_stdout@@Base+0x930>
   13064:	mov	r1, #1
   13068:	ldr	r0, [pc, #48]	; 130a0 <close_stdout@@Base+0x934>
   1306c:	mov	r2, #55	; 0x37
   13070:	ldr	r3, [r5, r3]
   13074:	add	r0, pc, r0
   13078:	ldr	r3, [r3]
   1307c:	bl	112e0 <fwrite@plt>
   13080:	bl	114e4 <abort@plt>
   13084:	andeq	r8, r1, r4, lsr #32
   13088:			; <UNDEFINED> instruction: 0x000074b0
   1308c:	muleq	r0, ip, r4
   13090:	andeq	r0, r0, r4, asr r1
   13094:	andeq	r0, r0, ip, asr #2
   13098:	andeq	r0, r0, r8, asr #2
   1309c:	andeq	r0, r0, r0, lsr r1
   130a0:	andeq	r7, r0, ip, lsl #8
   130a4:	push	{r3, lr}
   130a8:	mov	r3, r0
   130ac:	mov	r2, #0
   130b0:	cmp	r1, #8
   130b4:	str	r2, [r3], #4
   130b8:	add	r3, r3, #4
   130bc:	str	r2, [r0, #4]
   130c0:	str	r2, [r3], #4
   130c4:	str	r2, [r3], #4
   130c8:	str	r2, [r3], #4
   130cc:	str	r2, [r3], #4
   130d0:	str	r2, [r3], #4
   130d4:	str	r2, [r3], #4
   130d8:	str	r2, [r3], #4
   130dc:	str	r2, [r3], #4
   130e0:	str	r2, [r3], #4
   130e4:	str	r2, [r3]
   130e8:	beq	130f4 <close_stdout@@Base+0x988>
   130ec:	str	r1, [r0]
   130f0:	pop	{r3, pc}
   130f4:	bl	114e4 <abort@plt>
   130f8:	push	{r4, r5, r6, lr}
   130fc:	mov	r4, r0
   13100:	mov	r6, r1
   13104:	mov	r0, #0
   13108:	mov	r1, r4
   1310c:	mov	r2, #5
   13110:	bl	1128c <dcgettext@plt>
   13114:	cmp	r0, r4
   13118:	mov	r5, r0
   1311c:	beq	13124 <close_stdout@@Base+0x9b8>
   13120:	pop	{r4, r5, r6, pc}
   13124:	bl	18748 <fts_children@@Base+0x1544>
   13128:	ldrb	r3, [r0]
   1312c:	bic	r3, r3, #32
   13130:	cmp	r3, #85	; 0x55
   13134:	bne	131a8 <close_stdout@@Base+0xa3c>
   13138:	ldrb	r3, [r0, #1]
   1313c:	bic	r3, r3, #32
   13140:	cmp	r3, #84	; 0x54
   13144:	bne	13194 <close_stdout@@Base+0xa28>
   13148:	ldrb	r3, [r0, #2]
   1314c:	bic	r3, r3, #32
   13150:	cmp	r3, #70	; 0x46
   13154:	bne	13194 <close_stdout@@Base+0xa28>
   13158:	ldrb	r3, [r0, #3]
   1315c:	cmp	r3, #45	; 0x2d
   13160:	bne	13194 <close_stdout@@Base+0xa28>
   13164:	ldrb	r3, [r0, #4]
   13168:	cmp	r3, #56	; 0x38
   1316c:	bne	13194 <close_stdout@@Base+0xa28>
   13170:	ldrb	r3, [r0, #5]
   13174:	cmp	r3, #0
   13178:	bne	13194 <close_stdout@@Base+0xa28>
   1317c:	ldrb	r3, [r5]
   13180:	cmp	r3, #96	; 0x60
   13184:	beq	13220 <close_stdout@@Base+0xab4>
   13188:	ldr	r0, [pc, #180]	; 13244 <close_stdout@@Base+0xad8>
   1318c:	add	r0, pc, r0
   13190:	pop	{r4, r5, r6, pc}
   13194:	cmp	r6, #7
   13198:	beq	1322c <close_stdout@@Base+0xac0>
   1319c:	ldr	r0, [pc, #164]	; 13248 <close_stdout@@Base+0xadc>
   131a0:	add	r0, pc, r0
   131a4:	pop	{r4, r5, r6, pc}
   131a8:	cmp	r3, #71	; 0x47
   131ac:	bne	13194 <close_stdout@@Base+0xa28>
   131b0:	ldrb	r3, [r0, #1]
   131b4:	bic	r3, r3, #32
   131b8:	cmp	r3, #66	; 0x42
   131bc:	bne	13194 <close_stdout@@Base+0xa28>
   131c0:	ldrb	r3, [r0, #2]
   131c4:	cmp	r3, #49	; 0x31
   131c8:	bne	13194 <close_stdout@@Base+0xa28>
   131cc:	ldrb	r3, [r0, #3]
   131d0:	cmp	r3, #56	; 0x38
   131d4:	bne	13194 <close_stdout@@Base+0xa28>
   131d8:	ldrb	r3, [r0, #4]
   131dc:	cmp	r3, #48	; 0x30
   131e0:	bne	13194 <close_stdout@@Base+0xa28>
   131e4:	ldrb	r3, [r0, #5]
   131e8:	cmp	r3, #51	; 0x33
   131ec:	bne	13194 <close_stdout@@Base+0xa28>
   131f0:	ldrb	r3, [r0, #6]
   131f4:	cmp	r3, #48	; 0x30
   131f8:	bne	13194 <close_stdout@@Base+0xa28>
   131fc:	ldrb	r3, [r0, #7]
   13200:	cmp	r3, #0
   13204:	bne	13194 <close_stdout@@Base+0xa28>
   13208:	ldrb	r3, [r5]
   1320c:	cmp	r3, #96	; 0x60
   13210:	beq	13238 <close_stdout@@Base+0xacc>
   13214:	ldr	r0, [pc, #48]	; 1324c <close_stdout@@Base+0xae0>
   13218:	add	r0, pc, r0
   1321c:	pop	{r4, r5, r6, pc}
   13220:	ldr	r0, [pc, #40]	; 13250 <close_stdout@@Base+0xae4>
   13224:	add	r0, pc, r0
   13228:	pop	{r4, r5, r6, pc}
   1322c:	ldr	r0, [pc, #32]	; 13254 <close_stdout@@Base+0xae8>
   13230:	add	r0, pc, r0
   13234:	pop	{r4, r5, r6, pc}
   13238:	ldr	r0, [pc, #24]	; 13258 <close_stdout@@Base+0xaec>
   1323c:	add	r0, pc, r0
   13240:	pop	{r4, r5, r6, pc}
   13244:	andeq	r7, r0, r8, asr r3
   13248:	andeq	r7, r0, ip, asr #6
   1324c:	ldrdeq	r7, [r0], -r0
   13250:	ldrdeq	r7, [r0], -r4
   13254:	andeq	r7, r0, r0, asr #5
   13258:			; <UNDEFINED> instruction: 0x000072b8
   1325c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13260:	sub	sp, sp, #124	; 0x7c
   13264:	ldr	ip, [pc, #3304]	; 13f54 <close_stdout@@Base+0x17e8>
   13268:	mov	sl, r1
   1326c:	str	r0, [sp, #40]	; 0x28
   13270:	mov	r8, r3
   13274:	ldr	r0, [pc, #3292]	; 13f58 <close_stdout@@Base+0x17ec>
   13278:	add	ip, pc, ip
   1327c:	str	r2, [sp, #32]
   13280:	ldr	r1, [sp, #164]	; 0xa4
   13284:	mov	r3, ip
   13288:	ldr	r0, [ip, r0]
   1328c:	ldr	r2, [sp, #172]	; 0xac
   13290:	ubfx	r1, r1, #1, #1
   13294:	str	r1, [sp, #36]	; 0x24
   13298:	str	r0, [sp, #56]	; 0x38
   1329c:	ldr	r0, [sp, #168]	; 0xa8
   132a0:	ldr	r1, [sp, #176]	; 0xb0
   132a4:	str	r2, [sp, #72]	; 0x48
   132a8:	str	r0, [sp, #48]	; 0x30
   132ac:	ldr	r0, [sp, #56]	; 0x38
   132b0:	str	r1, [sp, #68]	; 0x44
   132b4:	ldr	r3, [r0]
   132b8:	str	r3, [sp, #116]	; 0x74
   132bc:	bl	112f8 <__ctype_get_mb_cur_max@plt>
   132c0:	ldr	r2, [sp, #160]	; 0xa0
   132c4:	str	r0, [sp, #64]	; 0x40
   132c8:	cmp	r2, #8
   132cc:	addls	pc, pc, r2, lsl #2
   132d0:	b	13e30 <close_stdout@@Base+0x16c4>
   132d4:	b	132f8 <close_stdout@@Base+0xb8c>
   132d8:	b	13b48 <close_stdout@@Base+0x13dc>
   132dc:	b	13b78 <close_stdout@@Base+0x140c>
   132e0:	b	13a28 <close_stdout@@Base+0x12bc>
   132e4:	b	13a68 <close_stdout@@Base+0x12fc>
   132e8:	b	13a94 <close_stdout@@Base+0x1328>
   132ec:	b	13ab4 <close_stdout@@Base+0x1348>
   132f0:	b	13ab4 <close_stdout@@Base+0x1348>
   132f4:	b	13ab4 <close_stdout@@Base+0x1348>
   132f8:	mov	r2, #0
   132fc:	str	r2, [sp, #36]	; 0x24
   13300:	mov	r9, r2
   13304:	str	r2, [sp, #24]
   13308:	str	r2, [sp, #28]
   1330c:	str	r2, [sp, #52]	; 0x34
   13310:	ldr	r0, [sp, #36]	; 0x24
   13314:	mov	fp, #0
   13318:	ldr	r1, [sp, #24]
   1331c:	eor	r2, r0, #1
   13320:	eor	r3, r1, #1
   13324:	and	r3, r2, r3
   13328:	and	r2, r1, r0
   1332c:	str	r3, [sp, #44]	; 0x2c
   13330:	str	r2, [sp, #76]	; 0x4c
   13334:	cmn	r8, #1
   13338:	beq	136b8 <close_stdout@@Base+0xf4c>
   1333c:	subs	r3, fp, r8
   13340:	movne	r3, #1
   13344:	cmp	r3, #0
   13348:	beq	136d0 <close_stdout@@Base+0xf64>
   1334c:	ldr	r3, [sp, #28]
   13350:	ldr	r0, [sp, #24]
   13354:	adds	r7, r3, #0
   13358:	movne	r7, #1
   1335c:	ands	r6, r7, r0
   13360:	bne	13bbc <close_stdout@@Base+0x1450>
   13364:	ldr	r1, [sp, #32]
   13368:	add	r5, r1, fp
   1336c:	ldrb	r4, [r5]
   13370:	cmp	r4, #126	; 0x7e
   13374:	addls	pc, pc, r4, lsl #2
   13378:	b	1393c <close_stdout@@Base+0x11d0>
   1337c:	b	13848 <close_stdout@@Base+0x10dc>
   13380:	b	1393c <close_stdout@@Base+0x11d0>
   13384:	b	1393c <close_stdout@@Base+0x11d0>
   13388:	b	1393c <close_stdout@@Base+0x11d0>
   1338c:	b	1393c <close_stdout@@Base+0x11d0>
   13390:	b	1393c <close_stdout@@Base+0x11d0>
   13394:	b	1393c <close_stdout@@Base+0x11d0>
   13398:	b	13830 <close_stdout@@Base+0x10c4>
   1339c:	b	13818 <close_stdout@@Base+0x10ac>
   133a0:	b	13840 <close_stdout@@Base+0x10d4>
   133a4:	b	13838 <close_stdout@@Base+0x10cc>
   133a8:	b	13828 <close_stdout@@Base+0x10bc>
   133ac:	b	13820 <close_stdout@@Base+0x10b4>
   133b0:	b	137e4 <close_stdout@@Base+0x1078>
   133b4:	b	1393c <close_stdout@@Base+0x11d0>
   133b8:	b	1393c <close_stdout@@Base+0x11d0>
   133bc:	b	1393c <close_stdout@@Base+0x11d0>
   133c0:	b	1393c <close_stdout@@Base+0x11d0>
   133c4:	b	1393c <close_stdout@@Base+0x11d0>
   133c8:	b	1393c <close_stdout@@Base+0x11d0>
   133cc:	b	1393c <close_stdout@@Base+0x11d0>
   133d0:	b	1393c <close_stdout@@Base+0x11d0>
   133d4:	b	1393c <close_stdout@@Base+0x11d0>
   133d8:	b	1393c <close_stdout@@Base+0x11d0>
   133dc:	b	1393c <close_stdout@@Base+0x11d0>
   133e0:	b	1393c <close_stdout@@Base+0x11d0>
   133e4:	b	1393c <close_stdout@@Base+0x11d0>
   133e8:	b	1393c <close_stdout@@Base+0x11d0>
   133ec:	b	1393c <close_stdout@@Base+0x11d0>
   133f0:	b	1393c <close_stdout@@Base+0x11d0>
   133f4:	b	1393c <close_stdout@@Base+0x11d0>
   133f8:	b	1393c <close_stdout@@Base+0x11d0>
   133fc:	b	13770 <close_stdout@@Base+0x1004>
   13400:	b	13770 <close_stdout@@Base+0x1004>
   13404:	b	13770 <close_stdout@@Base+0x1004>
   13408:	b	13768 <close_stdout@@Base+0xffc>
   1340c:	b	13770 <close_stdout@@Base+0x1004>
   13410:	b	13644 <close_stdout@@Base+0xed8>
   13414:	b	13770 <close_stdout@@Base+0x1004>
   13418:	b	138e4 <close_stdout@@Base+0x1178>
   1341c:	b	13770 <close_stdout@@Base+0x1004>
   13420:	b	13770 <close_stdout@@Base+0x1004>
   13424:	b	13770 <close_stdout@@Base+0x1004>
   13428:	b	13644 <close_stdout@@Base+0xed8>
   1342c:	b	13644 <close_stdout@@Base+0xed8>
   13430:	b	13644 <close_stdout@@Base+0xed8>
   13434:	b	13644 <close_stdout@@Base+0xed8>
   13438:	b	13644 <close_stdout@@Base+0xed8>
   1343c:	b	13644 <close_stdout@@Base+0xed8>
   13440:	b	13644 <close_stdout@@Base+0xed8>
   13444:	b	13644 <close_stdout@@Base+0xed8>
   13448:	b	13644 <close_stdout@@Base+0xed8>
   1344c:	b	13644 <close_stdout@@Base+0xed8>
   13450:	b	13644 <close_stdout@@Base+0xed8>
   13454:	b	13644 <close_stdout@@Base+0xed8>
   13458:	b	13644 <close_stdout@@Base+0xed8>
   1345c:	b	13644 <close_stdout@@Base+0xed8>
   13460:	b	13644 <close_stdout@@Base+0xed8>
   13464:	b	13644 <close_stdout@@Base+0xed8>
   13468:	b	13770 <close_stdout@@Base+0x1004>
   1346c:	b	13770 <close_stdout@@Base+0x1004>
   13470:	b	13770 <close_stdout@@Base+0x1004>
   13474:	b	13770 <close_stdout@@Base+0x1004>
   13478:	b	13578 <close_stdout@@Base+0xe0c>
   1347c:	b	1393c <close_stdout@@Base+0x11d0>
   13480:	b	13644 <close_stdout@@Base+0xed8>
   13484:	b	13644 <close_stdout@@Base+0xed8>
   13488:	b	13644 <close_stdout@@Base+0xed8>
   1348c:	b	13644 <close_stdout@@Base+0xed8>
   13490:	b	13644 <close_stdout@@Base+0xed8>
   13494:	b	13644 <close_stdout@@Base+0xed8>
   13498:	b	13644 <close_stdout@@Base+0xed8>
   1349c:	b	13644 <close_stdout@@Base+0xed8>
   134a0:	b	13644 <close_stdout@@Base+0xed8>
   134a4:	b	13644 <close_stdout@@Base+0xed8>
   134a8:	b	13644 <close_stdout@@Base+0xed8>
   134ac:	b	13644 <close_stdout@@Base+0xed8>
   134b0:	b	13644 <close_stdout@@Base+0xed8>
   134b4:	b	13644 <close_stdout@@Base+0xed8>
   134b8:	b	13644 <close_stdout@@Base+0xed8>
   134bc:	b	13644 <close_stdout@@Base+0xed8>
   134c0:	b	13644 <close_stdout@@Base+0xed8>
   134c4:	b	13644 <close_stdout@@Base+0xed8>
   134c8:	b	13644 <close_stdout@@Base+0xed8>
   134cc:	b	13644 <close_stdout@@Base+0xed8>
   134d0:	b	13644 <close_stdout@@Base+0xed8>
   134d4:	b	13644 <close_stdout@@Base+0xed8>
   134d8:	b	13644 <close_stdout@@Base+0xed8>
   134dc:	b	13644 <close_stdout@@Base+0xed8>
   134e0:	b	13644 <close_stdout@@Base+0xed8>
   134e4:	b	13644 <close_stdout@@Base+0xed8>
   134e8:	b	13770 <close_stdout@@Base+0x1004>
   134ec:	b	138c8 <close_stdout@@Base+0x115c>
   134f0:	b	13644 <close_stdout@@Base+0xed8>
   134f4:	b	13770 <close_stdout@@Base+0x1004>
   134f8:	b	13644 <close_stdout@@Base+0xed8>
   134fc:	b	13770 <close_stdout@@Base+0x1004>
   13500:	b	13644 <close_stdout@@Base+0xed8>
   13504:	b	13644 <close_stdout@@Base+0xed8>
   13508:	b	13644 <close_stdout@@Base+0xed8>
   1350c:	b	13644 <close_stdout@@Base+0xed8>
   13510:	b	13644 <close_stdout@@Base+0xed8>
   13514:	b	13644 <close_stdout@@Base+0xed8>
   13518:	b	13644 <close_stdout@@Base+0xed8>
   1351c:	b	13644 <close_stdout@@Base+0xed8>
   13520:	b	13644 <close_stdout@@Base+0xed8>
   13524:	b	13644 <close_stdout@@Base+0xed8>
   13528:	b	13644 <close_stdout@@Base+0xed8>
   1352c:	b	13644 <close_stdout@@Base+0xed8>
   13530:	b	13644 <close_stdout@@Base+0xed8>
   13534:	b	13644 <close_stdout@@Base+0xed8>
   13538:	b	13644 <close_stdout@@Base+0xed8>
   1353c:	b	13644 <close_stdout@@Base+0xed8>
   13540:	b	13644 <close_stdout@@Base+0xed8>
   13544:	b	13644 <close_stdout@@Base+0xed8>
   13548:	b	13644 <close_stdout@@Base+0xed8>
   1354c:	b	13644 <close_stdout@@Base+0xed8>
   13550:	b	13644 <close_stdout@@Base+0xed8>
   13554:	b	13644 <close_stdout@@Base+0xed8>
   13558:	b	13644 <close_stdout@@Base+0xed8>
   1355c:	b	13644 <close_stdout@@Base+0xed8>
   13560:	b	13644 <close_stdout@@Base+0xed8>
   13564:	b	13644 <close_stdout@@Base+0xed8>
   13568:	b	13750 <close_stdout@@Base+0xfe4>
   1356c:	b	13770 <close_stdout@@Base+0x1004>
   13570:	b	13750 <close_stdout@@Base+0xfe4>
   13574:	b	13768 <close_stdout@@Base+0xffc>
   13578:	ldr	r3, [sp, #160]	; 0xa0
   1357c:	cmp	r3, #2
   13580:	beq	13e0c <close_stdout@@Base+0x16a0>
   13584:	cmp	r3, #3
   13588:	bne	13644 <close_stdout@@Base+0xed8>
   1358c:	ldr	r1, [sp, #164]	; 0xa4
   13590:	tst	r1, #4
   13594:	beq	13644 <close_stdout@@Base+0xed8>
   13598:	add	r3, fp, #2
   1359c:	cmp	r8, r3
   135a0:	bls	13644 <close_stdout@@Base+0xed8>
   135a4:	ldrb	r2, [r5, #1]
   135a8:	mov	r1, #1
   135ac:	cmp	r2, #63	; 0x3f
   135b0:	bne	13644 <close_stdout@@Base+0xed8>
   135b4:	ldr	r0, [sp, #32]
   135b8:	ldrb	ip, [r0, r3]
   135bc:	sub	r0, ip, #33	; 0x21
   135c0:	uxtb	r0, r0
   135c4:	cmp	r0, #29
   135c8:	bhi	13644 <close_stdout@@Base+0xed8>
   135cc:	lsl	r1, r1, r0
   135d0:	movw	r0, #20929	; 0x51c1
   135d4:	movt	r0, #14336	; 0x3800
   135d8:	and	r0, r1, r0
   135dc:	cmp	r0, #0
   135e0:	beq	13644 <close_stdout@@Base+0xed8>
   135e4:	ldr	r1, [sp, #36]	; 0x24
   135e8:	cmp	r1, #0
   135ec:	bne	1378c <close_stdout@@Base+0x1020>
   135f0:	cmp	r9, sl
   135f4:	mov	r4, ip
   135f8:	mov	fp, r3
   135fc:	ldrcc	r0, [sp, #40]	; 0x28
   13600:	strbcc	r2, [r0, r9]
   13604:	add	r2, r9, #1
   13608:	cmp	sl, r2
   1360c:	ldrhi	r0, [sp, #40]	; 0x28
   13610:	movhi	r1, #34	; 0x22
   13614:	strbhi	r1, [r0, r2]
   13618:	add	r2, r9, #2
   1361c:	cmp	sl, r2
   13620:	ldrhi	r0, [sp, #40]	; 0x28
   13624:	movhi	r1, #34	; 0x22
   13628:	strbhi	r1, [r0, r2]
   1362c:	add	r2, r9, #3
   13630:	cmp	sl, r2
   13634:	add	r9, r9, #4
   13638:	ldrhi	r0, [sp, #40]	; 0x28
   1363c:	movhi	r1, #63	; 0x3f
   13640:	strbhi	r1, [r0, r2]
   13644:	ldr	r0, [sp, #44]	; 0x2c
   13648:	cmp	r0, #0
   1364c:	bne	13674 <close_stdout@@Base+0xf08>
   13650:	ldr	r1, [sp, #48]	; 0x30
   13654:	cmp	r1, #0
   13658:	beq	13674 <close_stdout@@Base+0xf08>
   1365c:	ubfx	r2, r4, #5, #8
   13660:	and	r3, r4, #31
   13664:	ldr	r2, [r1, r2, lsl #2]
   13668:	lsr	r3, r2, r3
   1366c:	tst	r3, #1
   13670:	bne	1367c <close_stdout@@Base+0xf10>
   13674:	cmp	r6, #0
   13678:	beq	1369c <close_stdout@@Base+0xf30>
   1367c:	ldr	r2, [sp, #36]	; 0x24
   13680:	cmp	r2, #0
   13684:	bne	1378c <close_stdout@@Base+0x1020>
   13688:	cmp	r9, sl
   1368c:	ldrcc	r0, [sp, #40]	; 0x28
   13690:	movcc	r3, #92	; 0x5c
   13694:	strbcc	r3, [r0, r9]
   13698:	add	r9, r9, #1
   1369c:	add	fp, fp, #1
   136a0:	cmp	r9, sl
   136a4:	ldrcc	r1, [sp, #40]	; 0x28
   136a8:	strbcc	r4, [r1, r9]
   136ac:	cmn	r8, #1
   136b0:	add	r9, r9, #1
   136b4:	bne	1333c <close_stdout@@Base+0xbd0>
   136b8:	ldr	r2, [sp, #32]
   136bc:	ldrb	r3, [r2, fp]
   136c0:	adds	r3, r3, #0
   136c4:	movne	r3, #1
   136c8:	cmp	r3, #0
   136cc:	bne	1334c <close_stdout@@Base+0xbe0>
   136d0:	ldr	r3, [sp, #160]	; 0xa0
   136d4:	cmp	r9, #0
   136d8:	cmpeq	r3, #2
   136dc:	bne	136ec <close_stdout@@Base+0xf80>
   136e0:	ldr	r0, [sp, #36]	; 0x24
   136e4:	cmp	r0, #0
   136e8:	bne	1378c <close_stdout@@Base+0x1020>
   136ec:	ldr	r1, [sp, #36]	; 0x24
   136f0:	ldr	r2, [sp, #52]	; 0x34
   136f4:	eor	r3, r1, #1
   136f8:	cmp	r2, #0
   136fc:	moveq	r3, #0
   13700:	andne	r3, r3, #1
   13704:	cmp	r3, #0
   13708:	beq	13734 <close_stdout@@Base+0xfc8>
   1370c:	ldrb	r3, [r2]
   13710:	cmp	r3, #0
   13714:	beq	13734 <close_stdout@@Base+0xfc8>
   13718:	ldr	r1, [sp, #40]	; 0x28
   1371c:	cmp	sl, r9
   13720:	strbhi	r3, [r1, r9]
   13724:	ldrb	r3, [r2, #1]!
   13728:	add	r9, r9, #1
   1372c:	cmp	r3, #0
   13730:	bne	1371c <close_stdout@@Base+0xfb0>
   13734:	cmp	r9, sl
   13738:	movcs	r0, r9
   1373c:	ldrcc	r1, [sp, #40]	; 0x28
   13740:	movcc	r3, #0
   13744:	movcc	r0, r9
   13748:	strbcc	r3, [r1, r9]
   1374c:	b	137c8 <close_stdout@@Base+0x105c>
   13750:	cmn	r8, #1
   13754:	beq	13e1c <close_stdout@@Base+0x16b0>
   13758:	subs	r3, r8, #1
   1375c:	movne	r3, #1
   13760:	cmp	r3, #0
   13764:	bne	13644 <close_stdout@@Base+0xed8>
   13768:	cmp	fp, #0
   1376c:	bne	13644 <close_stdout@@Base+0xed8>
   13770:	ldr	r3, [sp, #36]	; 0x24
   13774:	ldr	r0, [sp, #160]	; 0xa0
   13778:	cmp	r0, #2
   1377c:	movne	r3, #0
   13780:	andeq	r3, r3, #1
   13784:	cmp	r3, #0
   13788:	beq	13644 <close_stdout@@Base+0xed8>
   1378c:	ldr	r2, [sp, #164]	; 0xa4
   13790:	mov	ip, #0
   13794:	ldr	r0, [sp, #160]	; 0xa0
   13798:	bic	r3, r2, #2
   1379c:	ldr	r1, [sp, #72]	; 0x48
   137a0:	ldr	r2, [sp, #68]	; 0x44
   137a4:	stm	sp, {r0, r3}
   137a8:	mov	r3, r8
   137ac:	str	r1, [sp, #12]
   137b0:	mov	r1, sl
   137b4:	str	r2, [sp, #16]
   137b8:	ldr	r0, [sp, #40]	; 0x28
   137bc:	ldr	r2, [sp, #32]
   137c0:	str	ip, [sp, #8]
   137c4:	bl	1325c <close_stdout@@Base+0xaf0>
   137c8:	ldr	r1, [sp, #56]	; 0x38
   137cc:	ldr	r2, [sp, #116]	; 0x74
   137d0:	ldr	r3, [r1]
   137d4:	cmp	r2, r3
   137d8:	bne	13f0c <close_stdout@@Base+0x17a0>
   137dc:	add	sp, sp, #124	; 0x7c
   137e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137e4:	mov	r3, #114	; 0x72
   137e8:	ldr	r2, [sp, #36]	; 0x24
   137ec:	ldr	r0, [sp, #160]	; 0xa0
   137f0:	cmp	r0, #2
   137f4:	movne	r2, #0
   137f8:	andeq	r2, r2, #1
   137fc:	cmp	r2, #0
   13800:	bne	1378c <close_stdout@@Base+0x1020>
   13804:	ldr	r1, [sp, #24]
   13808:	cmp	r1, #0
   1380c:	beq	13644 <close_stdout@@Base+0xed8>
   13810:	mov	r4, r3
   13814:	b	1367c <close_stdout@@Base+0xf10>
   13818:	mov	r3, #98	; 0x62
   1381c:	b	13804 <close_stdout@@Base+0x1098>
   13820:	mov	r3, #102	; 0x66
   13824:	b	13804 <close_stdout@@Base+0x1098>
   13828:	mov	r3, #118	; 0x76
   1382c:	b	13804 <close_stdout@@Base+0x1098>
   13830:	mov	r3, #97	; 0x61
   13834:	b	13804 <close_stdout@@Base+0x1098>
   13838:	mov	r3, #110	; 0x6e
   1383c:	b	137e8 <close_stdout@@Base+0x107c>
   13840:	mov	r3, #116	; 0x74
   13844:	b	137e8 <close_stdout@@Base+0x107c>
   13848:	ldr	r2, [sp, #24]
   1384c:	cmp	r2, #0
   13850:	beq	13df8 <close_stdout@@Base+0x168c>
   13854:	ldr	r3, [sp, #36]	; 0x24
   13858:	cmp	r3, #0
   1385c:	bne	1378c <close_stdout@@Base+0x1020>
   13860:	cmp	r9, sl
   13864:	add	r2, r9, #1
   13868:	ldrcc	r0, [sp, #40]	; 0x28
   1386c:	movcc	r3, #92	; 0x5c
   13870:	strbcc	r3, [r0, r9]
   13874:	add	r3, fp, #1
   13878:	cmp	r8, r3
   1387c:	bls	138bc <close_stdout@@Base+0x1150>
   13880:	ldr	r1, [sp, #32]
   13884:	ldrb	r3, [r1, r3]
   13888:	sub	r3, r3, #48	; 0x30
   1388c:	cmp	r3, #9
   13890:	bhi	138bc <close_stdout@@Base+0x1150>
   13894:	cmp	sl, r2
   13898:	ldrhi	r0, [sp, #40]	; 0x28
   1389c:	movhi	r3, #48	; 0x30
   138a0:	strbhi	r3, [r0, r2]
   138a4:	add	r3, r9, #2
   138a8:	cmp	sl, r3
   138ac:	ldrhi	r1, [sp, #40]	; 0x28
   138b0:	movhi	r2, #48	; 0x30
   138b4:	strbhi	r2, [r1, r3]
   138b8:	add	r2, r9, #3
   138bc:	mov	r9, r2
   138c0:	mov	r4, #48	; 0x30
   138c4:	b	13650 <close_stdout@@Base+0xee4>
   138c8:	ldr	r1, [sp, #76]	; 0x4c
   138cc:	cmp	r1, #0
   138d0:	beq	138dc <close_stdout@@Base+0x1170>
   138d4:	cmp	r7, #0
   138d8:	bne	1369c <close_stdout@@Base+0xf30>
   138dc:	mov	r3, r4
   138e0:	b	137e8 <close_stdout@@Base+0x107c>
   138e4:	ldr	r1, [sp, #160]	; 0xa0
   138e8:	cmp	r1, #2
   138ec:	bne	13644 <close_stdout@@Base+0xed8>
   138f0:	ldr	r2, [sp, #36]	; 0x24
   138f4:	cmp	r2, #0
   138f8:	bne	1378c <close_stdout@@Base+0x1020>
   138fc:	cmp	r9, sl
   13900:	ldrcc	r0, [sp, #40]	; 0x28
   13904:	movcc	r3, #39	; 0x27
   13908:	strbcc	r3, [r0, r9]
   1390c:	add	r3, r9, #1
   13910:	cmp	sl, r3
   13914:	ldrhi	r1, [sp, #40]	; 0x28
   13918:	movhi	r2, #92	; 0x5c
   1391c:	strbhi	r2, [r1, r3]
   13920:	add	r3, r9, #2
   13924:	cmp	sl, r3
   13928:	add	r9, r9, #3
   1392c:	ldrhi	r0, [sp, #40]	; 0x28
   13930:	movhi	r2, #39	; 0x27
   13934:	strbhi	r2, [r0, r3]
   13938:	b	13644 <close_stdout@@Base+0xed8>
   1393c:	ldr	r1, [sp, #64]	; 0x40
   13940:	cmp	r1, #1
   13944:	bne	13c3c <close_stdout@@Base+0x14d0>
   13948:	bl	11388 <__ctype_b_loc@plt>
   1394c:	ldr	r2, [sp, #64]	; 0x40
   13950:	sxth	r3, r4
   13954:	str	r2, [sp, #60]	; 0x3c
   13958:	lsl	r3, r3, #1
   1395c:	ldr	r2, [r0]
   13960:	ldrh	r2, [r2, r3]
   13964:	eor	r2, r2, #16384	; 0x4000
   13968:	ubfx	r2, r2, #14, #1
   1396c:	ldr	r1, [sp, #24]
   13970:	ands	r2, r2, r1
   13974:	beq	13644 <close_stdout@@Base+0xed8>
   13978:	ldr	r3, [sp, #60]	; 0x3c
   1397c:	mov	r0, #92	; 0x5c
   13980:	ldr	r7, [sp, #36]	; 0x24
   13984:	add	r1, r3, fp
   13988:	str	r8, [sp, #60]	; 0x3c
   1398c:	ldr	r3, [sp, #40]	; 0x28
   13990:	b	139f4 <close_stdout@@Base+0x1288>
   13994:	cmp	r7, #0
   13998:	bne	13e34 <close_stdout@@Base+0x16c8>
   1399c:	add	ip, r9, #1
   139a0:	cmp	r9, sl
   139a4:	strbcc	r0, [r3, r9]
   139a8:	cmp	sl, ip
   139ac:	lsrhi	r8, r4, #6
   139b0:	addhi	r8, r8, #48	; 0x30
   139b4:	strbhi	r8, [r3, ip]
   139b8:	add	ip, r9, #2
   139bc:	add	r9, r9, #3
   139c0:	cmp	sl, ip
   139c4:	ubfxhi	r8, r4, #3, #3
   139c8:	and	r4, r4, #7
   139cc:	add	r4, r4, #48	; 0x30
   139d0:	addhi	r8, r8, #48	; 0x30
   139d4:	strbhi	r8, [r3, ip]
   139d8:	add	fp, fp, #1
   139dc:	cmp	r1, fp
   139e0:	bls	13a20 <close_stdout@@Base+0x12b4>
   139e4:	cmp	r9, sl
   139e8:	strbcc	r4, [r3, r9]
   139ec:	ldrb	r4, [r5, #1]!
   139f0:	add	r9, r9, #1
   139f4:	cmp	r2, #0
   139f8:	bne	13994 <close_stdout@@Base+0x1228>
   139fc:	cmp	r6, #0
   13a00:	beq	139d8 <close_stdout@@Base+0x126c>
   13a04:	add	fp, fp, #1
   13a08:	cmp	r9, sl
   13a0c:	strbcc	r0, [r3, r9]
   13a10:	cmp	r1, fp
   13a14:	add	r9, r9, #1
   13a18:	mov	r6, #0
   13a1c:	bhi	139e4 <close_stdout@@Base+0x1278>
   13a20:	ldr	r8, [sp, #60]	; 0x3c
   13a24:	b	136a0 <close_stdout@@Base+0xf34>
   13a28:	ldr	r3, [sp, #36]	; 0x24
   13a2c:	cmp	r3, #0
   13a30:	bne	13f34 <close_stdout@@Base+0x17c8>
   13a34:	cmp	sl, #0
   13a38:	beq	13e4c <close_stdout@@Base+0x16e0>
   13a3c:	ldr	r1, [sp, #40]	; 0x28
   13a40:	mov	r0, #1
   13a44:	ldr	r2, [pc, #1296]	; 13f5c <close_stdout@@Base+0x17f0>
   13a48:	mov	r3, #34	; 0x22
   13a4c:	str	r0, [sp, #24]
   13a50:	mov	r9, r0
   13a54:	add	r2, pc, r2
   13a58:	str	r0, [sp, #28]
   13a5c:	strb	r3, [r1]
   13a60:	str	r2, [sp, #52]	; 0x34
   13a64:	b	13310 <close_stdout@@Base+0xba4>
   13a68:	ldr	r3, [pc, #1264]	; 13f60 <close_stdout@@Base+0x17f4>
   13a6c:	mov	r2, #1
   13a70:	mov	r0, #3
   13a74:	str	r2, [sp, #36]	; 0x24
   13a78:	add	r3, pc, r3
   13a7c:	str	r2, [sp, #24]
   13a80:	str	r3, [sp, #52]	; 0x34
   13a84:	mov	r9, #0
   13a88:	str	r2, [sp, #28]
   13a8c:	str	r0, [sp, #160]	; 0xa0
   13a90:	b	13310 <close_stdout@@Base+0xba4>
   13a94:	mov	r0, #0
   13a98:	mov	r1, #1
   13a9c:	str	r0, [sp, #36]	; 0x24
   13aa0:	mov	r9, r0
   13aa4:	str	r1, [sp, #24]
   13aa8:	str	r0, [sp, #28]
   13aac:	str	r0, [sp, #52]	; 0x34
   13ab0:	b	13310 <close_stdout@@Base+0xba4>
   13ab4:	ldr	r3, [sp, #160]	; 0xa0
   13ab8:	cmp	r3, #8
   13abc:	beq	13ae8 <close_stdout@@Base+0x137c>
   13ac0:	ldr	r0, [pc, #1180]	; 13f64 <close_stdout@@Base+0x17f8>
   13ac4:	mov	r1, r3
   13ac8:	add	r0, pc, r0
   13acc:	bl	130f8 <close_stdout@@Base+0x98c>
   13ad0:	ldr	r1, [sp, #160]	; 0xa0
   13ad4:	str	r0, [sp, #72]	; 0x48
   13ad8:	ldr	r0, [pc, #1160]	; 13f68 <close_stdout@@Base+0x17fc>
   13adc:	add	r0, pc, r0
   13ae0:	bl	130f8 <close_stdout@@Base+0x98c>
   13ae4:	str	r0, [sp, #68]	; 0x44
   13ae8:	ldr	r0, [sp, #36]	; 0x24
   13aec:	cmp	r0, #0
   13af0:	movne	r9, #0
   13af4:	bne	13b2c <close_stdout@@Base+0x13c0>
   13af8:	ldr	r1, [sp, #72]	; 0x48
   13afc:	ldrb	r3, [r1]
   13b00:	cmp	r3, #0
   13b04:	beq	13f04 <close_stdout@@Base+0x1798>
   13b08:	mov	r2, r1
   13b0c:	ldr	r1, [sp, #40]	; 0x28
   13b10:	mov	r9, r0
   13b14:	cmp	r9, sl
   13b18:	strbcc	r3, [r1, r9]
   13b1c:	ldrb	r3, [r2, #1]!
   13b20:	add	r9, r9, #1
   13b24:	cmp	r3, #0
   13b28:	bne	13b14 <close_stdout@@Base+0x13a8>
   13b2c:	ldr	r0, [sp, #68]	; 0x44
   13b30:	str	r0, [sp, #52]	; 0x34
   13b34:	bl	113a0 <strlen@plt>
   13b38:	mov	r2, #1
   13b3c:	str	r2, [sp, #24]
   13b40:	str	r0, [sp, #28]
   13b44:	b	13310 <close_stdout@@Base+0xba4>
   13b48:	ldr	r3, [pc, #1052]	; 13f6c <close_stdout@@Base+0x1800>
   13b4c:	mov	r2, #0
   13b50:	mov	r1, #1
   13b54:	mov	r0, #2
   13b58:	add	r3, pc, r3
   13b5c:	str	r1, [sp, #36]	; 0x24
   13b60:	str	r2, [sp, #24]
   13b64:	mov	r9, r2
   13b68:	str	r1, [sp, #28]
   13b6c:	str	r3, [sp, #52]	; 0x34
   13b70:	str	r0, [sp, #160]	; 0xa0
   13b74:	b	13310 <close_stdout@@Base+0xba4>
   13b78:	ldr	r3, [sp, #36]	; 0x24
   13b7c:	cmp	r3, #0
   13b80:	bne	13f10 <close_stdout@@Base+0x17a4>
   13b84:	cmp	sl, #0
   13b88:	beq	13e6c <close_stdout@@Base+0x1700>
   13b8c:	ldr	r1, [sp, #40]	; 0x28
   13b90:	mov	r3, #39	; 0x27
   13b94:	ldr	r2, [sp, #36]	; 0x24
   13b98:	mov	r0, #1
   13b9c:	mov	r9, r0
   13ba0:	str	r0, [sp, #28]
   13ba4:	strb	r3, [r1]
   13ba8:	ldr	r3, [pc, #960]	; 13f70 <close_stdout@@Base+0x1804>
   13bac:	str	r2, [sp, #24]
   13bb0:	add	r3, pc, r3
   13bb4:	str	r3, [sp, #52]	; 0x34
   13bb8:	b	13310 <close_stdout@@Base+0xba4>
   13bbc:	ldr	r2, [sp, #28]
   13bc0:	cmp	r2, #1
   13bc4:	add	r4, fp, r2
   13bc8:	movls	r3, #0
   13bcc:	movhi	r3, #1
   13bd0:	cmn	r8, #1
   13bd4:	movne	r3, #0
   13bd8:	cmp	r3, #0
   13bdc:	beq	13bec <close_stdout@@Base+0x1480>
   13be0:	ldr	r0, [sp, #32]
   13be4:	bl	113a0 <strlen@plt>
   13be8:	mov	r8, r0
   13bec:	cmp	r8, r4
   13bf0:	ldrcc	r3, [sp, #32]
   13bf4:	movcc	r6, #0
   13bf8:	addcc	r5, r3, fp
   13bfc:	bcc	1336c <close_stdout@@Base+0xc00>
   13c00:	ldr	r0, [sp, #32]
   13c04:	ldr	r1, [sp, #52]	; 0x34
   13c08:	add	r5, r0, fp
   13c0c:	ldr	r2, [sp, #28]
   13c10:	mov	r0, r5
   13c14:	bl	11280 <memcmp@plt>
   13c18:	cmp	r0, #0
   13c1c:	bne	13c34 <close_stdout@@Base+0x14c8>
   13c20:	ldr	r1, [sp, #36]	; 0x24
   13c24:	cmp	r1, #0
   13c28:	bne	1378c <close_stdout@@Base+0x1020>
   13c2c:	mov	r6, #1
   13c30:	b	1336c <close_stdout@@Base+0xc00>
   13c34:	mov	r6, #0
   13c38:	b	1336c <close_stdout@@Base+0xc00>
   13c3c:	add	r7, sp, #108	; 0x6c
   13c40:	cmn	r8, #1
   13c44:	mov	r3, #0
   13c48:	str	r3, [sp, #108]	; 0x6c
   13c4c:	str	r3, [r7, #4]
   13c50:	beq	13e3c <close_stdout@@Base+0x16d0>
   13c54:	mov	r1, #0
   13c58:	ldr	r0, [sp, #32]
   13c5c:	mov	ip, #1
   13c60:	str	r9, [sp, #88]	; 0x58
   13c64:	str	r6, [sp, #96]	; 0x60
   13c68:	mov	r9, r1
   13c6c:	str	r5, [sp, #100]	; 0x64
   13c70:	mov	r6, ip
   13c74:	mov	r5, r7
   13c78:	add	r3, sp, #104	; 0x68
   13c7c:	sub	r0, r0, #1
   13c80:	str	r3, [sp, #80]	; 0x50
   13c84:	str	r0, [sp, #84]	; 0x54
   13c88:	str	r1, [sp, #60]	; 0x3c
   13c8c:	str	r4, [sp, #92]	; 0x5c
   13c90:	ldr	r2, [sp, #32]
   13c94:	add	r7, r9, fp
   13c98:	add	r0, sp, #104	; 0x68
   13c9c:	mov	r3, r5
   13ca0:	add	r4, r2, r7
   13ca4:	rsb	r2, r7, r8
   13ca8:	mov	r1, r4
   13cac:	bl	1131c <mbrtowc@plt>
   13cb0:	subs	r2, r0, #0
   13cb4:	beq	13dc0 <close_stdout@@Base+0x1654>
   13cb8:	cmn	r2, #1
   13cbc:	beq	13ee8 <close_stdout@@Base+0x177c>
   13cc0:	cmn	r2, #2
   13cc4:	beq	13e8c <close_stdout@@Base+0x1720>
   13cc8:	ldr	r3, [sp, #36]	; 0x24
   13ccc:	ldr	r0, [sp, #160]	; 0xa0
   13cd0:	cmp	r0, #2
   13cd4:	movne	r3, #0
   13cd8:	andeq	r3, r3, #1
   13cdc:	cmp	r3, #0
   13ce0:	beq	13d9c <close_stdout@@Base+0x1630>
   13ce4:	cmp	r2, #1
   13ce8:	beq	13d9c <close_stdout@@Base+0x1630>
   13cec:	ldr	r1, [sp, #84]	; 0x54
   13cf0:	add	r3, r1, r2
   13cf4:	add	r7, r3, r7
   13cf8:	ldrb	r3, [r4, #1]!
   13cfc:	sub	r3, r3, #91	; 0x5b
   13d00:	cmp	r3, #33	; 0x21
   13d04:	addls	pc, pc, r3, lsl #2
   13d08:	b	13d94 <close_stdout@@Base+0x1628>
   13d0c:	b	1378c <close_stdout@@Base+0x1020>
   13d10:	b	1378c <close_stdout@@Base+0x1020>
   13d14:	b	13d94 <close_stdout@@Base+0x1628>
   13d18:	b	1378c <close_stdout@@Base+0x1020>
   13d1c:	b	13d94 <close_stdout@@Base+0x1628>
   13d20:	b	1378c <close_stdout@@Base+0x1020>
   13d24:	b	13d94 <close_stdout@@Base+0x1628>
   13d28:	b	13d94 <close_stdout@@Base+0x1628>
   13d2c:	b	13d94 <close_stdout@@Base+0x1628>
   13d30:	b	13d94 <close_stdout@@Base+0x1628>
   13d34:	b	13d94 <close_stdout@@Base+0x1628>
   13d38:	b	13d94 <close_stdout@@Base+0x1628>
   13d3c:	b	13d94 <close_stdout@@Base+0x1628>
   13d40:	b	13d94 <close_stdout@@Base+0x1628>
   13d44:	b	13d94 <close_stdout@@Base+0x1628>
   13d48:	b	13d94 <close_stdout@@Base+0x1628>
   13d4c:	b	13d94 <close_stdout@@Base+0x1628>
   13d50:	b	13d94 <close_stdout@@Base+0x1628>
   13d54:	b	13d94 <close_stdout@@Base+0x1628>
   13d58:	b	13d94 <close_stdout@@Base+0x1628>
   13d5c:	b	13d94 <close_stdout@@Base+0x1628>
   13d60:	b	13d94 <close_stdout@@Base+0x1628>
   13d64:	b	13d94 <close_stdout@@Base+0x1628>
   13d68:	b	13d94 <close_stdout@@Base+0x1628>
   13d6c:	b	13d94 <close_stdout@@Base+0x1628>
   13d70:	b	13d94 <close_stdout@@Base+0x1628>
   13d74:	b	13d94 <close_stdout@@Base+0x1628>
   13d78:	b	13d94 <close_stdout@@Base+0x1628>
   13d7c:	b	13d94 <close_stdout@@Base+0x1628>
   13d80:	b	13d94 <close_stdout@@Base+0x1628>
   13d84:	b	13d94 <close_stdout@@Base+0x1628>
   13d88:	b	13d94 <close_stdout@@Base+0x1628>
   13d8c:	b	13d94 <close_stdout@@Base+0x1628>
   13d90:	b	1378c <close_stdout@@Base+0x1020>
   13d94:	cmp	r4, r7
   13d98:	bne	13cf8 <close_stdout@@Base+0x158c>
   13d9c:	ldr	r0, [sp, #104]	; 0x68
   13da0:	add	r9, r9, r2
   13da4:	bl	112c8 <iswprint@plt>
   13da8:	cmp	r0, #0
   13dac:	mov	r0, r5
   13db0:	moveq	r6, #0
   13db4:	bl	11274 <mbsinit@plt>
   13db8:	cmp	r0, #0
   13dbc:	beq	13c90 <close_stdout@@Base+0x1524>
   13dc0:	mov	ip, r6
   13dc4:	eor	r2, ip, #1
   13dc8:	str	r9, [sp, #60]	; 0x3c
   13dcc:	ldr	r4, [sp, #92]	; 0x5c
   13dd0:	uxtb	r2, r2
   13dd4:	ldr	r9, [sp, #88]	; 0x58
   13dd8:	ldr	r6, [sp, #96]	; 0x60
   13ddc:	ldr	r5, [sp, #100]	; 0x64
   13de0:	ldr	r3, [sp, #60]	; 0x3c
   13de4:	cmp	r3, #1
   13de8:	bls	1396c <close_stdout@@Base+0x1200>
   13dec:	ldr	r0, [sp, #24]
   13df0:	and	r2, r2, r0
   13df4:	b	13978 <close_stdout@@Base+0x120c>
   13df8:	ldr	r2, [sp, #164]	; 0xa4
   13dfc:	tst	r2, #1
   13e00:	addne	fp, fp, #1
   13e04:	bne	13334 <close_stdout@@Base+0xbc8>
   13e08:	b	13644 <close_stdout@@Base+0xed8>
   13e0c:	ldr	r0, [sp, #36]	; 0x24
   13e10:	cmp	r0, #0
   13e14:	beq	13644 <close_stdout@@Base+0xed8>
   13e18:	b	1378c <close_stdout@@Base+0x1020>
   13e1c:	ldr	r2, [sp, #32]
   13e20:	ldrb	r3, [r2, #1]
   13e24:	adds	r3, r3, #0
   13e28:	movne	r3, #1
   13e2c:	b	13760 <close_stdout@@Base+0xff4>
   13e30:	bl	114e4 <abort@plt>
   13e34:	ldr	r8, [sp, #60]	; 0x3c
   13e38:	b	1378c <close_stdout@@Base+0x1020>
   13e3c:	ldr	r0, [sp, #32]
   13e40:	bl	113a0 <strlen@plt>
   13e44:	mov	r8, r0
   13e48:	b	13c54 <close_stdout@@Base+0x14e8>
   13e4c:	ldr	r2, [pc, #288]	; 13f74 <close_stdout@@Base+0x1808>
   13e50:	mov	r1, #1
   13e54:	mov	r9, r1
   13e58:	str	r1, [sp, #24]
   13e5c:	add	r2, pc, r2
   13e60:	str	r1, [sp, #28]
   13e64:	str	r2, [sp, #52]	; 0x34
   13e68:	b	13310 <close_stdout@@Base+0xba4>
   13e6c:	ldr	r2, [pc, #260]	; 13f78 <close_stdout@@Base+0x180c>
   13e70:	mov	r3, #1
   13e74:	mov	r9, r3
   13e78:	str	r3, [sp, #28]
   13e7c:	add	r2, pc, r2
   13e80:	str	sl, [sp, #24]
   13e84:	str	r2, [sp, #52]	; 0x34
   13e88:	b	13310 <close_stdout@@Base+0xba4>
   13e8c:	cmp	r8, r7
   13e90:	str	r9, [sp, #60]	; 0x3c
   13e94:	mov	ip, r4
   13e98:	ldr	r6, [sp, #96]	; 0x60
   13e9c:	ldr	r9, [sp, #88]	; 0x58
   13ea0:	ldr	r4, [sp, #92]	; 0x5c
   13ea4:	ldr	r5, [sp, #100]	; 0x64
   13ea8:	bls	13ee0 <close_stdout@@Base+0x1774>
   13eac:	ldrb	r3, [ip]
   13eb0:	cmp	r3, #0
   13eb4:	beq	13ee0 <close_stdout@@Base+0x1774>
   13eb8:	ldr	r3, [sp, #60]	; 0x3c
   13ebc:	b	13ecc <close_stdout@@Base+0x1760>
   13ec0:	ldrb	r2, [r5, r3]
   13ec4:	cmp	r2, #0
   13ec8:	beq	13edc <close_stdout@@Base+0x1770>
   13ecc:	add	r3, r3, #1
   13ed0:	add	r2, fp, r3
   13ed4:	cmp	r8, r2
   13ed8:	bhi	13ec0 <close_stdout@@Base+0x1754>
   13edc:	str	r3, [sp, #60]	; 0x3c
   13ee0:	mov	r2, #1
   13ee4:	b	13de0 <close_stdout@@Base+0x1674>
   13ee8:	str	r9, [sp, #60]	; 0x3c
   13eec:	mov	r2, #1
   13ef0:	ldr	r4, [sp, #92]	; 0x5c
   13ef4:	ldr	r6, [sp, #96]	; 0x60
   13ef8:	ldr	r9, [sp, #88]	; 0x58
   13efc:	ldr	r5, [sp, #100]	; 0x64
   13f00:	b	13de0 <close_stdout@@Base+0x1674>
   13f04:	ldr	r9, [sp, #36]	; 0x24
   13f08:	b	13b2c <close_stdout@@Base+0x13c0>
   13f0c:	bl	11298 <__stack_chk_fail@plt>
   13f10:	ldr	r1, [pc, #100]	; 13f7c <close_stdout@@Base+0x1810>
   13f14:	mov	r3, #0
   13f18:	mov	r0, #1
   13f1c:	str	r3, [sp, #24]
   13f20:	add	r1, pc, r1
   13f24:	str	r0, [sp, #28]
   13f28:	mov	r9, r3
   13f2c:	str	r1, [sp, #52]	; 0x34
   13f30:	b	13310 <close_stdout@@Base+0xba4>
   13f34:	ldr	r0, [pc, #68]	; 13f80 <close_stdout@@Base+0x1814>
   13f38:	mov	r3, #1
   13f3c:	mov	r9, #0
   13f40:	str	r3, [sp, #24]
   13f44:	add	r0, pc, r0
   13f48:	str	r3, [sp, #28]
   13f4c:	str	r0, [sp, #52]	; 0x34
   13f50:	b	13310 <close_stdout@@Base+0xba4>
   13f54:	andeq	r7, r1, r0, lsl #27
   13f58:	andeq	r0, r0, r4, lsr #2
   13f5c:	muleq	r0, ip, sl
   13f60:	andeq	r6, r0, r8, ror sl
   13f64:	andeq	r6, r0, r4, lsr sl
   13f68:	andeq	r6, r0, r0, lsl sl
   13f6c:	muleq	r0, r4, r9
   13f70:	andeq	r6, r0, ip, lsr r9
   13f74:	muleq	r0, r4, r6
   13f78:	andeq	r6, r0, r0, ror r6
   13f7c:	andeq	r6, r0, ip, asr #11
   13f80:	andeq	r6, r0, ip, lsr #11
   13f84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f88:	sub	sp, sp, #44	; 0x2c
   13f8c:	mov	r6, r0
   13f90:	mov	r9, r1
   13f94:	mov	sl, r2
   13f98:	mov	r4, r3
   13f9c:	bl	113dc <__errno_location@plt>
   13fa0:	ldr	fp, [pc, #412]	; 14144 <close_stdout@@Base+0x19d8>
   13fa4:	cmp	r6, #0
   13fa8:	add	fp, pc, fp
   13fac:	ldr	r5, [fp]
   13fb0:	ldr	r1, [r0]
   13fb4:	mov	r8, r0
   13fb8:	str	r1, [sp, #36]	; 0x24
   13fbc:	blt	1413c <close_stdout@@Base+0x19d0>
   13fc0:	ldr	r3, [pc, #384]	; 14148 <close_stdout@@Base+0x19dc>
   13fc4:	add	r3, pc, r3
   13fc8:	ldr	r3, [r3]
   13fcc:	cmp	r6, r3
   13fd0:	bcc	14024 <close_stdout@@Base+0x18b8>
   13fd4:	add	r7, r6, #1
   13fd8:	cmn	r7, #-536870911	; 0xe0000001
   13fdc:	bhi	14140 <close_stdout@@Base+0x19d4>
   13fe0:	add	r3, fp, #4
   13fe4:	cmp	r5, r3
   13fe8:	beq	14114 <close_stdout@@Base+0x19a8>
   13fec:	mov	r0, r5
   13ff0:	lsl	r1, r7, #3
   13ff4:	bl	14e98 <close_stdout@@Base+0x272c>
   13ff8:	mov	r5, r0
   13ffc:	str	r0, [fp]
   14000:	ldr	fp, [pc, #324]	; 1414c <close_stdout@@Base+0x19e0>
   14004:	mov	r1, #0
   14008:	add	fp, pc, fp
   1400c:	ldr	r0, [fp]
   14010:	rsb	r2, r0, r7
   14014:	add	r0, r5, r0, lsl #3
   14018:	lsl	r2, r2, #3
   1401c:	bl	113f4 <memset@plt>
   14020:	str	r7, [fp]
   14024:	add	r2, r4, #8
   14028:	str	r2, [sp, #32]
   1402c:	ldr	r1, [r4]
   14030:	add	fp, r5, r6, lsl #3
   14034:	ldr	lr, [sp, #32]
   14038:	mov	r2, r9
   1403c:	ldr	r3, [r4, #4]
   14040:	ldr	ip, [r5, r6, lsl #3]
   14044:	ldr	r7, [fp, #4]
   14048:	orr	r3, r3, #1
   1404c:	str	r1, [sp]
   14050:	str	r3, [sp, #4]
   14054:	mov	r1, ip
   14058:	str	lr, [sp, #8]
   1405c:	mov	r0, r7
   14060:	ldr	lr, [r4, #40]	; 0x28
   14064:	str	r3, [sp, #28]
   14068:	mov	r3, sl
   1406c:	str	lr, [sp, #12]
   14070:	ldr	lr, [r4, #44]	; 0x2c
   14074:	str	ip, [sp, #24]
   14078:	str	lr, [sp, #16]
   1407c:	bl	1325c <close_stdout@@Base+0xaf0>
   14080:	ldr	ip, [sp, #24]
   14084:	cmp	ip, r0
   14088:	bhi	14100 <close_stdout@@Base+0x1994>
   1408c:	ldr	r3, [pc, #188]	; 14150 <close_stdout@@Base+0x19e4>
   14090:	add	r1, r0, #1
   14094:	str	r1, [r5, r6, lsl #3]
   14098:	add	r3, pc, r3
   1409c:	cmp	r7, r3
   140a0:	beq	140b4 <close_stdout@@Base+0x1948>
   140a4:	mov	r0, r7
   140a8:	str	r1, [sp, #24]
   140ac:	bl	11250 <free@plt>
   140b0:	ldr	r1, [sp, #24]
   140b4:	mov	r0, r1
   140b8:	str	r1, [sp, #24]
   140bc:	bl	14e40 <close_stdout@@Base+0x26d4>
   140c0:	ldr	r3, [sp, #28]
   140c4:	ldr	lr, [sp, #32]
   140c8:	mov	r2, r9
   140cc:	str	r0, [fp, #4]
   140d0:	mov	r7, r0
   140d4:	ldr	ip, [r4]
   140d8:	str	r3, [sp, #4]
   140dc:	mov	r3, sl
   140e0:	str	lr, [sp, #8]
   140e4:	str	ip, [sp]
   140e8:	ldr	ip, [r4, #40]	; 0x28
   140ec:	ldr	r1, [sp, #24]
   140f0:	str	ip, [sp, #12]
   140f4:	ldr	ip, [r4, #44]	; 0x2c
   140f8:	str	ip, [sp, #16]
   140fc:	bl	1325c <close_stdout@@Base+0xaf0>
   14100:	ldr	r1, [sp, #36]	; 0x24
   14104:	mov	r0, r7
   14108:	str	r1, [r8]
   1410c:	add	sp, sp, #44	; 0x2c
   14110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14114:	lsl	r1, r7, #3
   14118:	mov	r0, #0
   1411c:	str	r3, [sp, #24]
   14120:	bl	14e98 <close_stdout@@Base+0x272c>
   14124:	ldr	r3, [sp, #24]
   14128:	mov	r5, r0
   1412c:	ldm	r3, {r0, r1}
   14130:	str	r5, [fp]
   14134:	stm	r5, {r0, r1}
   14138:	b	14000 <close_stdout@@Base+0x1894>
   1413c:	bl	114e4 <abort@plt>
   14140:	bl	15054 <close_stdout@@Base+0x28e8>
   14144:	strdeq	r7, [r1], -r0
   14148:	andeq	r7, r1, r0, lsr #3
   1414c:	andeq	r7, r1, ip, asr r1
   14150:	andeq	r7, r1, r8, asr #2
   14154:	push	{r4, r5, r6, lr}
   14158:	mov	r5, r0
   1415c:	bl	113dc <__errno_location@plt>
   14160:	cmp	r5, #0
   14164:	mov	r1, #48	; 0x30
   14168:	mov	r4, r0
   1416c:	ldr	r0, [pc, #24]	; 1418c <close_stdout@@Base+0x1a20>
   14170:	ldr	r6, [r4]
   14174:	add	r0, pc, r0
   14178:	add	r0, r0, #256	; 0x100
   1417c:	movne	r0, r5
   14180:	bl	15014 <close_stdout@@Base+0x28a8>
   14184:	str	r6, [r4]
   14188:	pop	{r4, r5, r6, pc}
   1418c:	andeq	r7, r1, ip, rrx
   14190:	cmp	r0, #0
   14194:	beq	141a0 <close_stdout@@Base+0x1a34>
   14198:	ldr	r0, [r0]
   1419c:	bx	lr
   141a0:	ldr	r0, [pc, #12]	; 141b4 <close_stdout@@Base+0x1a48>
   141a4:	add	r0, pc, r0
   141a8:	add	r0, r0, #256	; 0x100
   141ac:	ldr	r0, [r0]
   141b0:	bx	lr
   141b4:	andeq	r7, r1, ip, lsr r0
   141b8:	cmp	r0, #0
   141bc:	beq	141c8 <close_stdout@@Base+0x1a5c>
   141c0:	str	r1, [r0]
   141c4:	bx	lr
   141c8:	ldr	r0, [pc, #12]	; 141dc <close_stdout@@Base+0x1a70>
   141cc:	add	r0, pc, r0
   141d0:	add	r0, r0, #256	; 0x100
   141d4:	str	r1, [r0]
   141d8:	bx	lr
   141dc:	andeq	r7, r1, r4, lsl r0
   141e0:	cmp	r0, #0
   141e4:	movne	r3, r0
   141e8:	beq	14218 <close_stdout@@Base+0x1aac>
   141ec:	lsr	ip, r1, #5
   141f0:	and	r1, r1, #31
   141f4:	add	r3, r3, ip, lsl #2
   141f8:	ldr	ip, [r3, #8]
   141fc:	lsr	r0, ip, r1
   14200:	eor	r2, r0, r2
   14204:	and	r0, r0, #1
   14208:	and	r2, r2, #1
   1420c:	eor	ip, ip, r2, lsl r1
   14210:	str	ip, [r3, #8]
   14214:	bx	lr
   14218:	ldr	r3, [pc, #8]	; 14228 <close_stdout@@Base+0x1abc>
   1421c:	add	r3, pc, r3
   14220:	add	r3, r3, #256	; 0x100
   14224:	b	141ec <close_stdout@@Base+0x1a80>
   14228:	andeq	r6, r1, r4, asr #31
   1422c:	subs	r3, r0, #0
   14230:	beq	14240 <close_stdout@@Base+0x1ad4>
   14234:	ldr	r0, [r3, #4]
   14238:	str	r1, [r3, #4]
   1423c:	bx	lr
   14240:	ldr	r3, [pc, #8]	; 14250 <close_stdout@@Base+0x1ae4>
   14244:	add	r3, pc, r3
   14248:	add	r3, r3, #256	; 0x100
   1424c:	b	14234 <close_stdout@@Base+0x1ac8>
   14250:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14254:	cmp	r0, #0
   14258:	push	{r3, lr}
   1425c:	beq	14280 <close_stdout@@Base+0x1b14>
   14260:	cmp	r2, #0
   14264:	cmpne	r1, #0
   14268:	mov	r3, #8
   1426c:	strne	r1, [r0, #40]	; 0x28
   14270:	str	r3, [r0]
   14274:	strne	r2, [r0, #44]	; 0x2c
   14278:	popne	{r3, pc}
   1427c:	bl	114e4 <abort@plt>
   14280:	ldr	r0, [pc, #8]	; 14290 <close_stdout@@Base+0x1b24>
   14284:	add	r0, pc, r0
   14288:	add	r0, r0, #256	; 0x100
   1428c:	b	14260 <close_stdout@@Base+0x1af4>
   14290:	andeq	r6, r1, ip, asr pc
   14294:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14298:	sub	sp, sp, #24
   1429c:	mov	r7, r0
   142a0:	mov	sl, r1
   142a4:	ldr	r4, [sp, #56]	; 0x38
   142a8:	mov	r9, r2
   142ac:	mov	r8, r3
   142b0:	cmp	r4, #0
   142b4:	beq	14308 <close_stdout@@Base+0x1b9c>
   142b8:	bl	113dc <__errno_location@plt>
   142bc:	ldr	r3, [r4]
   142c0:	add	lr, r4, #8
   142c4:	mov	r1, sl
   142c8:	mov	r2, r9
   142cc:	ldr	r6, [r0]
   142d0:	mov	r5, r0
   142d4:	str	r3, [sp]
   142d8:	mov	r0, r7
   142dc:	ldr	ip, [r4, #4]
   142e0:	mov	r3, r8
   142e4:	stmib	sp, {ip, lr}
   142e8:	ldr	ip, [r4, #40]	; 0x28
   142ec:	str	ip, [sp, #12]
   142f0:	ldr	ip, [r4, #44]	; 0x2c
   142f4:	str	ip, [sp, #16]
   142f8:	bl	1325c <close_stdout@@Base+0xaf0>
   142fc:	str	r6, [r5]
   14300:	add	sp, sp, #24
   14304:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14308:	ldr	r4, [pc, #8]	; 14318 <close_stdout@@Base+0x1bac>
   1430c:	add	r4, pc, r4
   14310:	add	r4, r4, #256	; 0x100
   14314:	b	142b8 <close_stdout@@Base+0x1b4c>
   14318:	ldrdeq	r6, [r1], -r4
   1431c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14320:	subs	r4, r3, #0
   14324:	sub	sp, sp, #36	; 0x24
   14328:	mov	r7, r0
   1432c:	mov	r6, r1
   14330:	mov	r5, r2
   14334:	beq	143f0 <close_stdout@@Base+0x1c84>
   14338:	bl	113dc <__errno_location@plt>
   1433c:	ldr	r3, [r4]
   14340:	ldr	sl, [r4, #4]
   14344:	add	r9, r4, #8
   14348:	mov	r8, r0
   1434c:	mov	r0, #0
   14350:	ldr	r2, [r8]
   14354:	cmp	r5, r0
   14358:	orreq	sl, sl, #1
   1435c:	str	r9, [sp, #8]
   14360:	mov	r1, r0
   14364:	stm	sp, {r3, sl}
   14368:	mov	r3, r6
   1436c:	ldr	ip, [r4, #40]	; 0x28
   14370:	str	r2, [sp, #28]
   14374:	mov	r2, r7
   14378:	str	ip, [sp, #12]
   1437c:	ldr	ip, [r4, #44]	; 0x2c
   14380:	str	ip, [sp, #16]
   14384:	bl	1325c <close_stdout@@Base+0xaf0>
   14388:	add	r1, r0, #1
   1438c:	mov	fp, r0
   14390:	str	r1, [sp, #24]
   14394:	mov	r0, r1
   14398:	bl	14e40 <close_stdout@@Base+0x26d4>
   1439c:	ldr	lr, [r4]
   143a0:	str	sl, [sp, #4]
   143a4:	mov	r3, r6
   143a8:	str	r9, [sp, #8]
   143ac:	mov	r2, r7
   143b0:	str	lr, [sp]
   143b4:	ldr	lr, [r4, #40]	; 0x28
   143b8:	ldr	r1, [sp, #24]
   143bc:	str	lr, [sp, #12]
   143c0:	ldr	lr, [r4, #44]	; 0x2c
   143c4:	str	lr, [sp, #16]
   143c8:	str	r0, [sp, #24]
   143cc:	bl	1325c <close_stdout@@Base+0xaf0>
   143d0:	ldr	r3, [sp, #28]
   143d4:	cmp	r5, #0
   143d8:	str	r3, [r8]
   143dc:	ldr	ip, [sp, #24]
   143e0:	strne	fp, [r5]
   143e4:	mov	r0, ip
   143e8:	add	sp, sp, #36	; 0x24
   143ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143f0:	ldr	r4, [pc, #8]	; 14400 <close_stdout@@Base+0x1c94>
   143f4:	add	r4, pc, r4
   143f8:	add	r4, r4, #256	; 0x100
   143fc:	b	14338 <close_stdout@@Base+0x1bcc>
   14400:	andeq	r6, r1, ip, ror #27
   14404:	mov	r3, r2
   14408:	mov	r2, #0
   1440c:	b	1431c <close_stdout@@Base+0x1bb0>
   14410:	ldr	r2, [pc, #152]	; 144b0 <close_stdout@@Base+0x1d44>
   14414:	push	{r3, r4, r5, r6, r7, lr}
   14418:	add	r2, pc, r2
   1441c:	ldr	r3, [pc, #144]	; 144b4 <close_stdout@@Base+0x1d48>
   14420:	ldr	r6, [r2]
   14424:	add	r3, pc, r3
   14428:	cmp	r6, #1
   1442c:	ldr	r7, [r3]
   14430:	movhi	r4, #1
   14434:	movhi	r5, r7
   14438:	bls	14454 <close_stdout@@Base+0x1ce8>
   1443c:	ldr	r0, [r5, #12]
   14440:	add	r4, r4, #1
   14444:	bl	11250 <free@plt>
   14448:	cmp	r4, r6
   1444c:	add	r5, r5, #8
   14450:	bne	1443c <close_stdout@@Base+0x1cd0>
   14454:	ldr	r4, [pc, #92]	; 144b8 <close_stdout@@Base+0x1d4c>
   14458:	ldr	r0, [r7, #4]
   1445c:	add	r4, pc, r4
   14460:	cmp	r0, r4
   14464:	beq	1447c <close_stdout@@Base+0x1d10>
   14468:	bl	11250 <free@plt>
   1446c:	ldr	r3, [pc, #72]	; 144bc <close_stdout@@Base+0x1d50>
   14470:	mov	r2, #256	; 0x100
   14474:	add	r3, pc, r3
   14478:	stmib	r3, {r2, r4}
   1447c:	ldr	r4, [pc, #60]	; 144c0 <close_stdout@@Base+0x1d54>
   14480:	add	r4, pc, r4
   14484:	add	r5, r4, #4
   14488:	cmp	r7, r5
   1448c:	beq	1449c <close_stdout@@Base+0x1d30>
   14490:	mov	r0, r7
   14494:	bl	11250 <free@plt>
   14498:	str	r5, [r4]
   1449c:	ldr	r3, [pc, #32]	; 144c4 <close_stdout@@Base+0x1d58>
   144a0:	mov	r2, #1
   144a4:	add	r3, pc, r3
   144a8:	str	r2, [r3]
   144ac:	pop	{r3, r4, r5, r6, r7, pc}
   144b0:	andeq	r6, r1, ip, asr #26
   144b4:	andeq	r6, r1, r4, ror sp
   144b8:	andeq	r6, r1, r4, lsl #27
   144bc:	andeq	r6, r1, r4, lsr #26
   144c0:	andeq	r6, r1, r8, lsl sp
   144c4:	andeq	r6, r1, r0, asr #25
   144c8:	ldr	r3, [pc, #12]	; 144dc <close_stdout@@Base+0x1d70>
   144cc:	mvn	r2, #0
   144d0:	add	r3, pc, r3
   144d4:	add	r3, r3, #256	; 0x100
   144d8:	b	13f84 <close_stdout@@Base+0x1818>
   144dc:	andeq	r6, r1, r0, lsl sp
   144e0:	ldr	r3, [pc, #8]	; 144f0 <close_stdout@@Base+0x1d84>
   144e4:	add	r3, pc, r3
   144e8:	add	r3, r3, #256	; 0x100
   144ec:	b	13f84 <close_stdout@@Base+0x1818>
   144f0:	strdeq	r6, [r1], -ip
   144f4:	mov	r1, r0
   144f8:	mov	r0, #0
   144fc:	b	144c8 <close_stdout@@Base+0x1d5c>
   14500:	mov	r2, r1
   14504:	mov	r1, r0
   14508:	mov	r0, #0
   1450c:	b	144e0 <close_stdout@@Base+0x1d74>
   14510:	ldr	r3, [pc, #92]	; 14574 <close_stdout@@Base+0x1e08>
   14514:	ldr	ip, [pc, #92]	; 14578 <close_stdout@@Base+0x1e0c>
   14518:	add	r3, pc, r3
   1451c:	push	{r4, r5, r6, r7, lr}
   14520:	sub	sp, sp, #60	; 0x3c
   14524:	ldr	r4, [r3, ip]
   14528:	add	r5, sp, #4
   1452c:	mov	r7, r2
   14530:	mov	r6, r0
   14534:	mov	r0, r5
   14538:	ldr	r3, [r4]
   1453c:	str	r3, [sp, #52]	; 0x34
   14540:	bl	130a4 <close_stdout@@Base+0x938>
   14544:	mov	r3, r5
   14548:	mvn	r2, #0
   1454c:	mov	r0, r6
   14550:	mov	r1, r7
   14554:	bl	13f84 <close_stdout@@Base+0x1818>
   14558:	ldr	r2, [sp, #52]	; 0x34
   1455c:	ldr	r3, [r4]
   14560:	cmp	r2, r3
   14564:	bne	14570 <close_stdout@@Base+0x1e04>
   14568:	add	sp, sp, #60	; 0x3c
   1456c:	pop	{r4, r5, r6, r7, pc}
   14570:	bl	11298 <__stack_chk_fail@plt>
   14574:	andeq	r6, r1, r0, ror #21
   14578:	andeq	r0, r0, r4, lsr #2
   1457c:	ldr	ip, [pc, #96]	; 145e4 <close_stdout@@Base+0x1e78>
   14580:	push	{r4, r5, r6, r7, r8, lr}
   14584:	add	ip, pc, ip
   14588:	ldr	lr, [pc, #88]	; 145e8 <close_stdout@@Base+0x1e7c>
   1458c:	sub	sp, sp, #56	; 0x38
   14590:	mov	r8, r3
   14594:	add	r5, sp, #4
   14598:	mov	r7, r2
   1459c:	mov	r6, r0
   145a0:	ldr	r4, [ip, lr]
   145a4:	mov	r0, r5
   145a8:	ldr	r3, [r4]
   145ac:	str	r3, [sp, #52]	; 0x34
   145b0:	bl	130a4 <close_stdout@@Base+0x938>
   145b4:	mov	r2, r8
   145b8:	mov	r3, r5
   145bc:	mov	r0, r6
   145c0:	mov	r1, r7
   145c4:	bl	13f84 <close_stdout@@Base+0x1818>
   145c8:	ldr	r2, [sp, #52]	; 0x34
   145cc:	ldr	r3, [r4]
   145d0:	cmp	r2, r3
   145d4:	bne	145e0 <close_stdout@@Base+0x1e74>
   145d8:	add	sp, sp, #56	; 0x38
   145dc:	pop	{r4, r5, r6, r7, r8, pc}
   145e0:	bl	11298 <__stack_chk_fail@plt>
   145e4:	andeq	r6, r1, r4, ror sl
   145e8:	andeq	r0, r0, r4, lsr #2
   145ec:	mov	r2, r1
   145f0:	mov	r1, r0
   145f4:	mov	r0, #0
   145f8:	b	14510 <close_stdout@@Base+0x1da4>
   145fc:	mov	ip, r1
   14600:	mov	r3, r2
   14604:	mov	r1, r0
   14608:	mov	r2, ip
   1460c:	mov	r0, #0
   14610:	b	1457c <close_stdout@@Base+0x1e10>
   14614:	push	{r4, r5, r6, r7, r8, lr}
   14618:	mov	r5, r2
   1461c:	ldr	lr, [pc, #136]	; 146ac <close_stdout@@Base+0x1f40>
   14620:	mov	r7, r0
   14624:	mov	r6, r1
   14628:	ldr	r4, [pc, #128]	; 146b0 <close_stdout@@Base+0x1f44>
   1462c:	add	lr, pc, lr
   14630:	sub	sp, sp, #56	; 0x38
   14634:	add	lr, lr, #256	; 0x100
   14638:	ldr	r8, [pc, #116]	; 146b4 <close_stdout@@Base+0x1f48>
   1463c:	add	r4, pc, r4
   14640:	add	ip, sp, #4
   14644:	ldm	lr!, {r0, r1, r2, r3}
   14648:	ldr	r4, [r4, r8]
   1464c:	stmia	ip!, {r0, r1, r2, r3}
   14650:	ldm	lr!, {r0, r1, r2, r3}
   14654:	ldr	r8, [r4]
   14658:	stmia	ip!, {r0, r1, r2, r3}
   1465c:	ldm	lr, {r0, r1, r2, r3}
   14660:	str	r8, [sp, #52]	; 0x34
   14664:	stm	ip, {r0, r1, r2, r3}
   14668:	mov	r1, r5
   1466c:	add	r5, sp, #4
   14670:	mov	r2, #1
   14674:	mov	r0, r5
   14678:	bl	141e0 <close_stdout@@Base+0x1a74>
   1467c:	mov	r2, r6
   14680:	mov	r3, r5
   14684:	mov	r1, r7
   14688:	mov	r0, #0
   1468c:	bl	13f84 <close_stdout@@Base+0x1818>
   14690:	ldr	r2, [sp, #52]	; 0x34
   14694:	ldr	r3, [r4]
   14698:	cmp	r2, r3
   1469c:	bne	146a8 <close_stdout@@Base+0x1f3c>
   146a0:	add	sp, sp, #56	; 0x38
   146a4:	pop	{r4, r5, r6, r7, r8, pc}
   146a8:	bl	11298 <__stack_chk_fail@plt>
   146ac:			; <UNDEFINED> instruction: 0x00016bb4
   146b0:			; <UNDEFINED> instruction: 0x000169bc
   146b4:	andeq	r0, r0, r4, lsr #2
   146b8:	mov	r2, r1
   146bc:	mvn	r1, #0
   146c0:	b	14614 <close_stdout@@Base+0x1ea8>
   146c4:	mov	r1, #58	; 0x3a
   146c8:	b	146b8 <close_stdout@@Base+0x1f4c>
   146cc:	mov	r2, #58	; 0x3a
   146d0:	b	14614 <close_stdout@@Base+0x1ea8>
   146d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   146d8:	mov	r5, r2
   146dc:	ldr	lr, [pc, #144]	; 14774 <close_stdout@@Base+0x2008>
   146e0:	mov	r8, r0
   146e4:	mov	r9, r1
   146e8:	mov	r7, r3
   146ec:	add	lr, pc, lr
   146f0:	ldr	r4, [pc, #128]	; 14778 <close_stdout@@Base+0x200c>
   146f4:	add	lr, lr, #256	; 0x100
   146f8:	sub	sp, sp, #56	; 0x38
   146fc:	ldr	sl, [pc, #120]	; 1477c <close_stdout@@Base+0x2010>
   14700:	add	r4, pc, r4
   14704:	ldm	lr!, {r0, r1, r2, r3}
   14708:	add	ip, sp, #4
   1470c:	ldr	r4, [r4, sl]
   14710:	ldr	r6, [sp, #88]	; 0x58
   14714:	stmia	ip!, {r0, r1, r2, r3}
   14718:	ldm	lr!, {r0, r1, r2, r3}
   1471c:	ldr	sl, [r4]
   14720:	stmia	ip!, {r0, r1, r2, r3}
   14724:	ldm	lr, {r0, r1, r2, r3}
   14728:	str	sl, [sp, #52]	; 0x34
   1472c:	stm	ip, {r0, r1, r2, r3}
   14730:	mov	r2, r5
   14734:	add	r5, sp, #4
   14738:	mov	r1, r9
   1473c:	mov	r0, r5
   14740:	bl	14254 <close_stdout@@Base+0x1ae8>
   14744:	mov	r2, r6
   14748:	mov	r3, r5
   1474c:	mov	r0, r8
   14750:	mov	r1, r7
   14754:	bl	13f84 <close_stdout@@Base+0x1818>
   14758:	ldr	r2, [sp, #52]	; 0x34
   1475c:	ldr	r3, [r4]
   14760:	cmp	r2, r3
   14764:	bne	14770 <close_stdout@@Base+0x2004>
   14768:	add	sp, sp, #56	; 0x38
   1476c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14770:	bl	11298 <__stack_chk_fail@plt>
   14774:	strdeq	r6, [r1], -r4
   14778:	strdeq	r6, [r1], -r8
   1477c:	andeq	r0, r0, r4, lsr #2
   14780:	push	{lr}		; (str lr, [sp, #-4]!)
   14784:	sub	sp, sp, #12
   14788:	mvn	ip, #0
   1478c:	str	ip, [sp]
   14790:	bl	146d4 <close_stdout@@Base+0x1f68>
   14794:	add	sp, sp, #12
   14798:	pop	{pc}		; (ldr pc, [sp], #4)
   1479c:	mov	ip, r1
   147a0:	mov	r3, r2
   147a4:	mov	r1, r0
   147a8:	mov	r2, ip
   147ac:	mov	r0, #0
   147b0:	b	14780 <close_stdout@@Base+0x2014>
   147b4:	push	{lr}		; (str lr, [sp, #-4]!)
   147b8:	sub	sp, sp, #12
   147bc:	mov	lr, r1
   147c0:	mov	ip, r2
   147c4:	mov	r1, r0
   147c8:	str	r3, [sp]
   147cc:	mov	r2, lr
   147d0:	mov	r3, ip
   147d4:	mov	r0, #0
   147d8:	bl	146d4 <close_stdout@@Base+0x1f68>
   147dc:	add	sp, sp, #12
   147e0:	pop	{pc}		; (ldr pc, [sp], #4)
   147e4:	ldr	r3, [pc, #12]	; 147f8 <close_stdout@@Base+0x208c>
   147e8:	ldr	ip, [pc, #12]	; 147fc <close_stdout@@Base+0x2090>
   147ec:	add	r3, pc, r3
   147f0:	ldr	r3, [r3, ip]
   147f4:	b	13f84 <close_stdout@@Base+0x1818>
   147f8:	andeq	r6, r1, ip, lsl #16
   147fc:	andeq	r0, r0, ip, lsl r1
   14800:	mov	r2, r1
   14804:	mov	r1, r0
   14808:	mov	r0, #0
   1480c:	b	147e4 <close_stdout@@Base+0x2078>
   14810:	mvn	r2, #0
   14814:	b	147e4 <close_stdout@@Base+0x2078>
   14818:	mov	r1, r0
   1481c:	mov	r0, #0
   14820:	b	14810 <close_stdout@@Base+0x20a4>
   14824:	ldr	r3, [pc, #104]	; 14894 <close_stdout@@Base+0x2128>
   14828:	ldr	ip, [pc, #104]	; 14898 <close_stdout@@Base+0x212c>
   1482c:	add	r3, pc, r3
   14830:	ldr	r1, [pc, #100]	; 1489c <close_stdout@@Base+0x2130>
   14834:	push	{r4, r5, r6, r7, lr}
   14838:	sub	sp, sp, #116	; 0x74
   1483c:	ldr	r7, [r3, ip]
   14840:	mov	r6, r0
   14844:	mov	r2, sp
   14848:	mov	r0, #3
   1484c:	add	r1, pc, r1
   14850:	ldr	r3, [r7]
   14854:	str	r3, [sp, #108]	; 0x6c
   14858:	bl	114fc <__lxstat64@plt>
   1485c:	cmp	r0, #0
   14860:	ldrdeq	r2, [sp]
   14864:	moveq	r0, r6
   14868:	ldrdeq	r4, [sp, #96]	; 0x60
   1486c:	movne	r0, #0
   14870:	strdeq	r2, [r6, #8]
   14874:	strdeq	r4, [r6]
   14878:	ldr	r2, [sp, #108]	; 0x6c
   1487c:	ldr	r3, [r7]
   14880:	cmp	r2, r3
   14884:	bne	14890 <close_stdout@@Base+0x2124>
   14888:	add	sp, sp, #116	; 0x74
   1488c:	pop	{r4, r5, r6, r7, pc}
   14890:	bl	11298 <__stack_chk_fail@plt>
   14894:	andeq	r6, r1, ip, asr #15
   14898:	andeq	r0, r0, r4, lsr #2
   1489c:	andeq	r5, r0, r4, lsr #17
   148a0:	push	{r4, r5, r6, r7, lr}
   148a4:	cmp	r1, #0
   148a8:	sub	sp, sp, #36	; 0x24
   148ac:	ldr	r7, [pc, #896]	; 14c34 <close_stdout@@Base+0x24c8>
   148b0:	mov	ip, r3
   148b4:	mov	r5, r0
   148b8:	add	r7, pc, r7
   148bc:	ldr	r4, [sp, #56]	; 0x38
   148c0:	ldr	r6, [sp, #60]	; 0x3c
   148c4:	beq	14c08 <close_stdout@@Base+0x249c>
   148c8:	str	r2, [sp]
   148cc:	mov	r3, r1
   148d0:	ldr	r2, [pc, #864]	; 14c38 <close_stdout@@Base+0x24cc>
   148d4:	mov	r1, #1
   148d8:	str	ip, [sp, #4]
   148dc:	add	r2, pc, r2
   148e0:	bl	11424 <__fprintf_chk@plt>
   148e4:	ldr	r1, [pc, #848]	; 14c3c <close_stdout@@Base+0x24d0>
   148e8:	mov	r2, #5
   148ec:	mov	r0, #0
   148f0:	add	r1, pc, r1
   148f4:	bl	1128c <dcgettext@plt>
   148f8:	ldr	r2, [pc, #832]	; 14c40 <close_stdout@@Base+0x24d4>
   148fc:	movw	ip, #2013	; 0x7dd
   14900:	mov	r1, #1
   14904:	ldr	r2, [r7, r2]
   14908:	str	ip, [sp]
   1490c:	mov	r3, r0
   14910:	mov	r0, r5
   14914:	bl	11424 <__fprintf_chk@plt>
   14918:	ldr	r1, [pc, #804]	; 14c44 <close_stdout@@Base+0x24d8>
   1491c:	mov	r0, #0
   14920:	mov	r2, #5
   14924:	add	r1, pc, r1
   14928:	bl	1128c <dcgettext@plt>
   1492c:	mov	r1, r5
   14930:	bl	11214 <fputs_unlocked@plt>
   14934:	cmp	r6, #9
   14938:	addls	pc, pc, r6, lsl #2
   1493c:	b	14c24 <close_stdout@@Base+0x24b8>
   14940:	b	149d4 <close_stdout@@Base+0x2268>
   14944:	b	149d8 <close_stdout@@Base+0x226c>
   14948:	b	14a08 <close_stdout@@Base+0x229c>
   1494c:	b	14a3c <close_stdout@@Base+0x22d0>
   14950:	b	14a78 <close_stdout@@Base+0x230c>
   14954:	b	14ab8 <close_stdout@@Base+0x234c>
   14958:	b	14b00 <close_stdout@@Base+0x2394>
   1495c:	b	14b50 <close_stdout@@Base+0x23e4>
   14960:	b	14ba8 <close_stdout@@Base+0x243c>
   14964:	b	14968 <close_stdout@@Base+0x21fc>
   14968:	ldr	r1, [pc, #728]	; 14c48 <close_stdout@@Base+0x24dc>
   1496c:	mov	r0, #0
   14970:	add	r1, pc, r1
   14974:	mov	r2, #5
   14978:	bl	1128c <dcgettext@plt>
   1497c:	ldm	r4, {r3, ip}
   14980:	mov	r1, #1
   14984:	str	ip, [sp]
   14988:	ldr	ip, [r4, #8]
   1498c:	str	ip, [sp, #4]
   14990:	ldr	ip, [r4, #12]
   14994:	str	ip, [sp, #8]
   14998:	ldr	ip, [r4, #16]
   1499c:	str	ip, [sp, #12]
   149a0:	ldr	ip, [r4, #20]
   149a4:	str	ip, [sp, #16]
   149a8:	ldr	ip, [r4, #24]
   149ac:	str	ip, [sp, #20]
   149b0:	ldr	ip, [r4, #28]
   149b4:	str	ip, [sp, #24]
   149b8:	ldr	ip, [r4, #32]
   149bc:	str	ip, [sp, #28]
   149c0:	mov	r2, r0
   149c4:	mov	r0, r5
   149c8:	bl	11424 <__fprintf_chk@plt>
   149cc:	add	sp, sp, #36	; 0x24
   149d0:	pop	{r4, r5, r6, r7, pc}
   149d4:	bl	114e4 <abort@plt>
   149d8:	ldr	r1, [pc, #620]	; 14c4c <close_stdout@@Base+0x24e0>
   149dc:	mov	r2, #5
   149e0:	mov	r0, #0
   149e4:	add	r1, pc, r1
   149e8:	bl	1128c <dcgettext@plt>
   149ec:	ldr	r3, [r4]
   149f0:	mov	r1, #1
   149f4:	mov	r2, r0
   149f8:	mov	r0, r5
   149fc:	add	sp, sp, #36	; 0x24
   14a00:	pop	{r4, r5, r6, r7, lr}
   14a04:	b	11424 <__fprintf_chk@plt>
   14a08:	ldr	r1, [pc, #576]	; 14c50 <close_stdout@@Base+0x24e4>
   14a0c:	mov	r2, #5
   14a10:	mov	r0, #0
   14a14:	add	r1, pc, r1
   14a18:	bl	1128c <dcgettext@plt>
   14a1c:	ldm	r4, {r3, ip}
   14a20:	mov	r1, #1
   14a24:	str	ip, [sp, #56]	; 0x38
   14a28:	mov	r2, r0
   14a2c:	mov	r0, r5
   14a30:	add	sp, sp, #36	; 0x24
   14a34:	pop	{r4, r5, r6, r7, lr}
   14a38:	b	11424 <__fprintf_chk@plt>
   14a3c:	ldr	r1, [pc, #528]	; 14c54 <close_stdout@@Base+0x24e8>
   14a40:	mov	r2, #5
   14a44:	mov	r0, #0
   14a48:	add	r1, pc, r1
   14a4c:	bl	1128c <dcgettext@plt>
   14a50:	ldm	r4, {r3, ip}
   14a54:	mov	r1, #1
   14a58:	str	ip, [sp, #56]	; 0x38
   14a5c:	ldr	ip, [r4, #8]
   14a60:	str	ip, [sp, #60]	; 0x3c
   14a64:	mov	r2, r0
   14a68:	mov	r0, r5
   14a6c:	add	sp, sp, #36	; 0x24
   14a70:	pop	{r4, r5, r6, r7, lr}
   14a74:	b	11424 <__fprintf_chk@plt>
   14a78:	ldr	r1, [pc, #472]	; 14c58 <close_stdout@@Base+0x24ec>
   14a7c:	mov	r2, #5
   14a80:	mov	r0, #0
   14a84:	add	r1, pc, r1
   14a88:	bl	1128c <dcgettext@plt>
   14a8c:	ldm	r4, {r3, ip}
   14a90:	mov	r1, #1
   14a94:	str	ip, [sp]
   14a98:	ldr	ip, [r4, #8]
   14a9c:	str	ip, [sp, #4]
   14aa0:	ldr	ip, [r4, #12]
   14aa4:	str	ip, [sp, #8]
   14aa8:	mov	r2, r0
   14aac:	mov	r0, r5
   14ab0:	bl	11424 <__fprintf_chk@plt>
   14ab4:	b	149cc <close_stdout@@Base+0x2260>
   14ab8:	ldr	r1, [pc, #412]	; 14c5c <close_stdout@@Base+0x24f0>
   14abc:	mov	r2, #5
   14ac0:	mov	r0, #0
   14ac4:	add	r1, pc, r1
   14ac8:	bl	1128c <dcgettext@plt>
   14acc:	ldm	r4, {r3, ip}
   14ad0:	mov	r1, #1
   14ad4:	str	ip, [sp]
   14ad8:	ldr	ip, [r4, #8]
   14adc:	str	ip, [sp, #4]
   14ae0:	ldr	ip, [r4, #12]
   14ae4:	str	ip, [sp, #8]
   14ae8:	ldr	ip, [r4, #16]
   14aec:	str	ip, [sp, #12]
   14af0:	mov	r2, r0
   14af4:	mov	r0, r5
   14af8:	bl	11424 <__fprintf_chk@plt>
   14afc:	b	149cc <close_stdout@@Base+0x2260>
   14b00:	ldr	r1, [pc, #344]	; 14c60 <close_stdout@@Base+0x24f4>
   14b04:	mov	r2, #5
   14b08:	mov	r0, #0
   14b0c:	add	r1, pc, r1
   14b10:	bl	1128c <dcgettext@plt>
   14b14:	ldm	r4, {r3, ip}
   14b18:	mov	r1, #1
   14b1c:	str	ip, [sp]
   14b20:	ldr	ip, [r4, #8]
   14b24:	str	ip, [sp, #4]
   14b28:	ldr	ip, [r4, #12]
   14b2c:	str	ip, [sp, #8]
   14b30:	ldr	ip, [r4, #16]
   14b34:	str	ip, [sp, #12]
   14b38:	ldr	ip, [r4, #20]
   14b3c:	str	ip, [sp, #16]
   14b40:	mov	r2, r0
   14b44:	mov	r0, r5
   14b48:	bl	11424 <__fprintf_chk@plt>
   14b4c:	b	149cc <close_stdout@@Base+0x2260>
   14b50:	ldr	r1, [pc, #268]	; 14c64 <close_stdout@@Base+0x24f8>
   14b54:	mov	r2, #5
   14b58:	mov	r0, #0
   14b5c:	add	r1, pc, r1
   14b60:	bl	1128c <dcgettext@plt>
   14b64:	ldm	r4, {r3, ip}
   14b68:	mov	r1, #1
   14b6c:	str	ip, [sp]
   14b70:	ldr	ip, [r4, #8]
   14b74:	str	ip, [sp, #4]
   14b78:	ldr	ip, [r4, #12]
   14b7c:	str	ip, [sp, #8]
   14b80:	ldr	ip, [r4, #16]
   14b84:	str	ip, [sp, #12]
   14b88:	ldr	ip, [r4, #20]
   14b8c:	str	ip, [sp, #16]
   14b90:	ldr	ip, [r4, #24]
   14b94:	str	ip, [sp, #20]
   14b98:	mov	r2, r0
   14b9c:	mov	r0, r5
   14ba0:	bl	11424 <__fprintf_chk@plt>
   14ba4:	b	149cc <close_stdout@@Base+0x2260>
   14ba8:	ldr	r1, [pc, #184]	; 14c68 <close_stdout@@Base+0x24fc>
   14bac:	mov	r2, #5
   14bb0:	mov	r0, #0
   14bb4:	add	r1, pc, r1
   14bb8:	bl	1128c <dcgettext@plt>
   14bbc:	ldm	r4, {r3, ip}
   14bc0:	mov	r1, #1
   14bc4:	str	ip, [sp]
   14bc8:	ldr	ip, [r4, #8]
   14bcc:	str	ip, [sp, #4]
   14bd0:	ldr	ip, [r4, #12]
   14bd4:	str	ip, [sp, #8]
   14bd8:	ldr	ip, [r4, #16]
   14bdc:	str	ip, [sp, #12]
   14be0:	ldr	ip, [r4, #20]
   14be4:	str	ip, [sp, #16]
   14be8:	ldr	ip, [r4, #24]
   14bec:	str	ip, [sp, #20]
   14bf0:	ldr	ip, [r4, #28]
   14bf4:	str	ip, [sp, #24]
   14bf8:	mov	r2, r0
   14bfc:	mov	r0, r5
   14c00:	bl	11424 <__fprintf_chk@plt>
   14c04:	b	149cc <close_stdout@@Base+0x2260>
   14c08:	str	r3, [sp]
   14c0c:	mov	r3, r2
   14c10:	ldr	r2, [pc, #84]	; 14c6c <close_stdout@@Base+0x2500>
   14c14:	mov	r1, #1
   14c18:	add	r2, pc, r2
   14c1c:	bl	11424 <__fprintf_chk@plt>
   14c20:	b	148e4 <close_stdout@@Base+0x2178>
   14c24:	ldr	r1, [pc, #68]	; 14c70 <close_stdout@@Base+0x2504>
   14c28:	mov	r0, #0
   14c2c:	add	r1, pc, r1
   14c30:	b	14974 <close_stdout@@Base+0x2208>
   14c34:	andeq	r6, r1, r0, asr #14
   14c38:	andeq	r5, r0, r4, ror #24
   14c3c:	andeq	r5, r0, r4, ror #24
   14c40:	andeq	r0, r0, r0, asr r1
   14c44:	andeq	r5, r0, r4, lsr ip
   14c48:	andeq	r5, r0, r0, asr #27
   14c4c:	andeq	r5, r0, r0, asr #24
   14c50:	andeq	r5, r0, r0, lsr #24
   14c54:	andeq	r5, r0, r4, lsl #24
   14c58:	andeq	r5, r0, r4, ror #23
   14c5c:	andeq	r5, r0, r4, asr #23
   14c60:	andeq	r5, r0, r0, lsr #23
   14c64:	andeq	r5, r0, r8, ror fp
   14c68:	andeq	r5, r0, ip, asr #22
   14c6c:	andeq	r5, r0, r4, lsr r9
   14c70:	andeq	r5, r0, r8, lsr fp
   14c74:	push	{r4, r5, lr}
   14c78:	sub	sp, sp, #12
   14c7c:	ldr	r5, [sp, #24]
   14c80:	ldr	ip, [r5]
   14c84:	cmp	ip, #0
   14c88:	beq	14ca4 <close_stdout@@Base+0x2538>
   14c8c:	mov	lr, r5
   14c90:	mov	ip, #0
   14c94:	ldr	r4, [lr, #4]!
   14c98:	add	ip, ip, #1
   14c9c:	cmp	r4, #0
   14ca0:	bne	14c94 <close_stdout@@Base+0x2528>
   14ca4:	stm	sp, {r5, ip}
   14ca8:	bl	148a0 <close_stdout@@Base+0x2134>
   14cac:	add	sp, sp, #12
   14cb0:	pop	{r4, r5, pc}
   14cb4:	push	{r4, r5, r6, r7, lr}
   14cb8:	sub	sp, sp, #60	; 0x3c
   14cbc:	ldr	r4, [pc, #100]	; 14d28 <close_stdout@@Base+0x25bc>
   14cc0:	mov	ip, #0
   14cc4:	ldr	r5, [pc, #96]	; 14d2c <close_stdout@@Base+0x25c0>
   14cc8:	mov	lr, ip
   14ccc:	add	r4, pc, r4
   14cd0:	ldr	r6, [sp, #80]	; 0x50
   14cd4:	ldr	r7, [r4, r5]
   14cd8:	add	r5, sp, #12
   14cdc:	ldr	r4, [r7]
   14ce0:	str	r4, [sp, #52]	; 0x34
   14ce4:	ldr	r4, [r6, ip]
   14ce8:	cmp	r4, #0
   14cec:	str	r4, [r5, ip]
   14cf0:	beq	14d04 <close_stdout@@Base+0x2598>
   14cf4:	add	lr, lr, #1
   14cf8:	add	ip, ip, #4
   14cfc:	cmp	lr, #10
   14d00:	bne	14ce4 <close_stdout@@Base+0x2578>
   14d04:	stm	sp, {r5, lr}
   14d08:	bl	148a0 <close_stdout@@Base+0x2134>
   14d0c:	ldr	r2, [sp, #52]	; 0x34
   14d10:	ldr	r3, [r7]
   14d14:	cmp	r2, r3
   14d18:	bne	14d24 <close_stdout@@Base+0x25b8>
   14d1c:	add	sp, sp, #60	; 0x3c
   14d20:	pop	{r4, r5, r6, r7, pc}
   14d24:	bl	11298 <__stack_chk_fail@plt>
   14d28:	andeq	r6, r1, ip, lsr #6
   14d2c:	andeq	r0, r0, r4, lsr #2
   14d30:	push	{r3}		; (str r3, [sp, #-4]!)
   14d34:	push	{r4, lr}
   14d38:	sub	sp, sp, #20
   14d3c:	ldr	lr, [pc, #72]	; 14d8c <close_stdout@@Base+0x2620>
   14d40:	add	ip, sp, #32
   14d44:	ldr	r4, [pc, #68]	; 14d90 <close_stdout@@Base+0x2624>
   14d48:	add	lr, pc, lr
   14d4c:	ldr	r3, [sp, #28]
   14d50:	ldr	r4, [lr, r4]
   14d54:	str	ip, [sp]
   14d58:	str	ip, [sp, #8]
   14d5c:	ldr	ip, [r4]
   14d60:	str	ip, [sp, #12]
   14d64:	bl	14cb4 <close_stdout@@Base+0x2548>
   14d68:	ldr	r2, [sp, #12]
   14d6c:	ldr	r3, [r4]
   14d70:	cmp	r2, r3
   14d74:	bne	14d88 <close_stdout@@Base+0x261c>
   14d78:	add	sp, sp, #20
   14d7c:	pop	{r4, lr}
   14d80:	add	sp, sp, #4
   14d84:	bx	lr
   14d88:	bl	11298 <__stack_chk_fail@plt>
   14d8c:			; <UNDEFINED> instruction: 0x000162b0
   14d90:	andeq	r0, r0, r4, lsr #2
   14d94:	ldr	r1, [pc, #132]	; 14e20 <close_stdout@@Base+0x26b4>
   14d98:	mov	r2, #5
   14d9c:	push	{r4, lr}
   14da0:	add	r1, pc, r1
   14da4:	mov	r0, #0
   14da8:	ldr	r4, [pc, #116]	; 14e24 <close_stdout@@Base+0x26b8>
   14dac:	bl	1128c <dcgettext@plt>
   14db0:	ldr	r2, [pc, #112]	; 14e28 <close_stdout@@Base+0x26bc>
   14db4:	add	r4, pc, r4
   14db8:	add	r2, pc, r2
   14dbc:	mov	r1, r0
   14dc0:	mov	r0, #1
   14dc4:	bl	1140c <__printf_chk@plt>
   14dc8:	ldr	r1, [pc, #92]	; 14e2c <close_stdout@@Base+0x26c0>
   14dcc:	mov	r2, #5
   14dd0:	mov	r0, #0
   14dd4:	add	r1, pc, r1
   14dd8:	bl	1128c <dcgettext@plt>
   14ddc:	ldr	r2, [pc, #76]	; 14e30 <close_stdout@@Base+0x26c4>
   14de0:	ldr	r3, [pc, #76]	; 14e34 <close_stdout@@Base+0x26c8>
   14de4:	add	r2, pc, r2
   14de8:	add	r3, pc, r3
   14dec:	mov	r1, r0
   14df0:	mov	r0, #1
   14df4:	bl	1140c <__printf_chk@plt>
   14df8:	ldr	r1, [pc, #56]	; 14e38 <close_stdout@@Base+0x26cc>
   14dfc:	mov	r0, #0
   14e00:	mov	r2, #5
   14e04:	add	r1, pc, r1
   14e08:	bl	1128c <dcgettext@plt>
   14e0c:	ldr	r3, [pc, #40]	; 14e3c <close_stdout@@Base+0x26d0>
   14e10:	ldr	r3, [r4, r3]
   14e14:	pop	{r4, lr}
   14e18:	ldr	r1, [r3]
   14e1c:	b	11214 <fputs_unlocked@plt>
   14e20:	andeq	r5, r0, r0, lsl #20
   14e24:	andeq	r6, r1, r4, asr #4
   14e28:	andeq	r5, r0, r0, lsl #20
   14e2c:	strdeq	r5, [r0], -ip
   14e30:	andeq	r5, r0, r8, lsr r1
   14e34:	andeq	r5, r0, r4, asr #2
   14e38:	andeq	r5, r0, r0, ror #19
   14e3c:	andeq	r0, r0, r0, asr #2
   14e40:	push	{r4, lr}
   14e44:	mov	r4, r0
   14e48:	bl	1134c <malloc@plt>
   14e4c:	rsbs	r3, r0, #1
   14e50:	movcc	r3, #0
   14e54:	cmp	r4, #0
   14e58:	moveq	r3, #0
   14e5c:	cmp	r3, #0
   14e60:	popeq	{r4, pc}
   14e64:	bl	15054 <close_stdout@@Base+0x28e8>
   14e68:	push	{r3, r4, r5, lr}
   14e6c:	mov	r4, r0
   14e70:	mvn	r0, #0
   14e74:	mov	r5, r1
   14e78:	bl	18f38 <fts_children@@Base+0x1d34>
   14e7c:	cmp	r0, r4
   14e80:	bcc	14e90 <close_stdout@@Base+0x2724>
   14e84:	mul	r0, r4, r5
   14e88:	pop	{r3, r4, r5, lr}
   14e8c:	b	14e40 <close_stdout@@Base+0x26d4>
   14e90:	bl	15054 <close_stdout@@Base+0x28e8>
   14e94:	b	14e40 <close_stdout@@Base+0x26d4>
   14e98:	rsbs	r3, r1, #1
   14e9c:	push	{r4, lr}
   14ea0:	movcc	r3, #0
   14ea4:	cmp	r0, #0
   14ea8:	mov	r4, r1
   14eac:	moveq	r3, #0
   14eb0:	cmp	r3, #0
   14eb4:	bne	14ed8 <close_stdout@@Base+0x276c>
   14eb8:	bl	112a4 <realloc@plt>
   14ebc:	rsbs	r3, r0, #1
   14ec0:	movcc	r3, #0
   14ec4:	cmp	r4, #0
   14ec8:	moveq	r3, #0
   14ecc:	cmp	r3, #0
   14ed0:	popeq	{r4, pc}
   14ed4:	bl	15054 <close_stdout@@Base+0x28e8>
   14ed8:	bl	11250 <free@plt>
   14edc:	mov	r0, #0
   14ee0:	pop	{r4, pc}
   14ee4:	push	{r4, r5, r6, lr}
   14ee8:	mov	r5, r1
   14eec:	mov	r6, r0
   14ef0:	mov	r1, r2
   14ef4:	mvn	r0, #0
   14ef8:	mov	r4, r2
   14efc:	bl	18f38 <fts_children@@Base+0x1d34>
   14f00:	cmp	r0, r5
   14f04:	bcc	14f18 <close_stdout@@Base+0x27ac>
   14f08:	mov	r0, r6
   14f0c:	mul	r1, r5, r4
   14f10:	pop	{r4, r5, r6, lr}
   14f14:	b	14e98 <close_stdout@@Base+0x272c>
   14f18:	bl	15054 <close_stdout@@Base+0x28e8>
   14f1c:	push	{r3, r4, r5, r6, r7, lr}
   14f20:	subs	r7, r0, #0
   14f24:	mov	r5, r1
   14f28:	mov	r6, r2
   14f2c:	ldr	r4, [r1]
   14f30:	beq	14f68 <close_stdout@@Base+0x27fc>
   14f34:	movw	r0, #43690	; 0xaaaa
   14f38:	mov	r1, r2
   14f3c:	bfi	r0, r0, #16, #16
   14f40:	bl	18f38 <fts_children@@Base+0x1d34>
   14f44:	cmp	r4, r0
   14f48:	addcc	r3, r4, #1
   14f4c:	addcc	r4, r4, r3, lsr #1
   14f50:	bcs	14f8c <close_stdout@@Base+0x2820>
   14f54:	str	r4, [r5]
   14f58:	mov	r0, r7
   14f5c:	mul	r1, r6, r4
   14f60:	pop	{r3, r4, r5, r6, r7, lr}
   14f64:	b	14e98 <close_stdout@@Base+0x272c>
   14f68:	cmp	r4, #0
   14f6c:	bne	14f54 <close_stdout@@Base+0x27e8>
   14f70:	mov	r0, #64	; 0x40
   14f74:	mov	r1, r2
   14f78:	bl	18f38 <fts_children@@Base+0x1d34>
   14f7c:	cmp	r0, #0
   14f80:	movne	r4, r0
   14f84:	addeq	r4, r0, #1
   14f88:	b	14f54 <close_stdout@@Base+0x27e8>
   14f8c:	bl	15054 <close_stdout@@Base+0x28e8>
   14f90:	cmp	r0, #0
   14f94:	push	{r3, lr}
   14f98:	ldr	r3, [r1]
   14f9c:	beq	14fc8 <close_stdout@@Base+0x285c>
   14fa0:	movw	r2, #43689	; 0xaaa9
   14fa4:	movt	r2, #43690	; 0xaaaa
   14fa8:	cmp	r3, r2
   14fac:	addls	r2, r3, #1
   14fb0:	addls	r3, r3, r2, lsr #1
   14fb4:	bhi	14fe0 <close_stdout@@Base+0x2874>
   14fb8:	str	r3, [r1]
   14fbc:	mov	r1, r3
   14fc0:	pop	{r3, lr}
   14fc4:	b	14e98 <close_stdout@@Base+0x272c>
   14fc8:	cmp	r3, #0
   14fcc:	moveq	r3, #64	; 0x40
   14fd0:	str	r3, [r1]
   14fd4:	mov	r1, r3
   14fd8:	pop	{r3, lr}
   14fdc:	b	14e98 <close_stdout@@Base+0x272c>
   14fe0:	bl	15054 <close_stdout@@Base+0x28e8>
   14fe4:	push	{r4, lr}
   14fe8:	mov	r4, r0
   14fec:	bl	14e40 <close_stdout@@Base+0x26d4>
   14ff0:	mov	r2, r4
   14ff4:	mov	r1, #0
   14ff8:	pop	{r4, lr}
   14ffc:	b	113f4 <memset@plt>
   15000:	push	{r3, lr}
   15004:	bl	11208 <calloc@plt>
   15008:	cmp	r0, #0
   1500c:	popne	{r3, pc}
   15010:	bl	15054 <close_stdout@@Base+0x28e8>
   15014:	push	{r3, r4, r5, lr}
   15018:	mov	r4, r1
   1501c:	mov	r5, r0
   15020:	mov	r0, r1
   15024:	bl	14e40 <close_stdout@@Base+0x26d4>
   15028:	mov	r1, r5
   1502c:	mov	r2, r4
   15030:	pop	{r3, r4, r5, lr}
   15034:	b	11268 <memcpy@plt>
   15038:	push	{r4, lr}
   1503c:	mov	r4, r0
   15040:	bl	113a0 <strlen@plt>
   15044:	add	r1, r0, #1
   15048:	mov	r0, r4
   1504c:	pop	{r4, lr}
   15050:	b	15014 <close_stdout@@Base+0x28a8>
   15054:	ldr	r3, [pc, #64]	; 1509c <close_stdout@@Base+0x2930>
   15058:	mov	r2, #5
   1505c:	ldr	ip, [pc, #60]	; 150a0 <close_stdout@@Base+0x2934>
   15060:	mov	r0, #0
   15064:	add	r3, pc, r3
   15068:	ldr	r1, [pc, #52]	; 150a4 <close_stdout@@Base+0x2938>
   1506c:	push	{r4, lr}
   15070:	add	r1, pc, r1
   15074:	ldr	r3, [r3, ip]
   15078:	ldr	r4, [r3]
   1507c:	bl	1128c <dcgettext@plt>
   15080:	ldr	r2, [pc, #32]	; 150a8 <close_stdout@@Base+0x293c>
   15084:	mov	r1, #0
   15088:	add	r2, pc, r2
   1508c:	mov	r3, r0
   15090:	mov	r0, r4
   15094:	bl	11328 <error@plt>
   15098:	bl	114e4 <abort@plt>
   1509c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   150a0:	andeq	r0, r0, r4, asr #2
   150a4:	andeq	r5, r0, r4, ror #15
   150a8:	strdeq	r5, [r0], -r4
   150ac:	push	{r3, lr}
   150b0:	orr	r1, r1, #512	; 0x200
   150b4:	bl	16464 <fts_open@@Base>
   150b8:	cmp	r0, #0
   150bc:	popne	{r3, pc}
   150c0:	bl	113dc <__errno_location@plt>
   150c4:	ldr	r3, [r0]
   150c8:	cmp	r3, #22
   150cc:	beq	150d4 <close_stdout@@Base+0x2968>
   150d0:	bl	15054 <close_stdout@@Base+0x28e8>
   150d4:	ldr	r0, [pc, #24]	; 150f4 <close_stdout@@Base+0x2988>
   150d8:	mov	r2, #41	; 0x29
   150dc:	ldr	r1, [pc, #20]	; 150f8 <close_stdout@@Base+0x298c>
   150e0:	ldr	r3, [pc, #20]	; 150fc <close_stdout@@Base+0x2990>
   150e4:	add	r0, pc, r0
   150e8:	add	r1, pc, r1
   150ec:	add	r3, pc, r3
   150f0:	bl	11514 <__assert_fail@plt>
   150f4:	muleq	r0, r0, r7
   150f8:	andeq	r5, r0, ip, lsr #15
   150fc:	andeq	r5, r0, ip, ror r7
   15100:	ldr	r3, [r0, #48]	; 0x30
   15104:	and	r3, r3, #17
   15108:	cmp	r3, #16
   1510c:	beq	15130 <close_stdout@@Base+0x29c4>
   15110:	cmp	r3, #17
   15114:	beq	15120 <close_stdout@@Base+0x29b4>
   15118:	mov	r0, #0
   1511c:	bx	lr
   15120:	ldr	r0, [r1, #48]	; 0x30
   15124:	adds	r0, r0, #0
   15128:	movne	r0, #1
   1512c:	bx	lr
   15130:	mov	r0, #1
   15134:	bx	lr
   15138:	push	{r4, r5}
   1513c:	mov	ip, r1
   15140:	ldrd	r4, [r0, #8]
   15144:	ldrd	r2, [r1, #8]
   15148:	cmp	r5, r3
   1514c:	cmpeq	r4, r2
   15150:	movne	r0, #0
   15154:	beq	15160 <close_stdout@@Base+0x29f4>
   15158:	pop	{r4, r5}
   1515c:	bx	lr
   15160:	ldrd	r0, [r0]
   15164:	ldrd	r2, [ip]
   15168:	pop	{r4, r5}
   1516c:	cmp	r1, r3
   15170:	cmpeq	r0, r2
   15174:	movne	r0, #0
   15178:	moveq	r0, #1
   1517c:	bx	lr
   15180:	push	{r3, lr}
   15184:	mov	r2, r1
   15188:	mov	r3, #0
   1518c:	ldrd	r0, [r0, #8]
   15190:	bl	19144 <fts_children@@Base+0x1f40>
   15194:	mov	r0, r2
   15198:	pop	{r3, pc}
   1519c:	push	{r3, lr}
   151a0:	mov	r2, r1
   151a4:	mov	r3, #0
   151a8:	ldrd	r0, [r0]
   151ac:	bl	19144 <fts_children@@Base+0x1f40>
   151b0:	mov	r0, r2
   151b4:	pop	{r3, pc}
   151b8:	ldrd	r2, [r0]
   151bc:	ldrd	r0, [r1]
   151c0:	cmp	r3, r1
   151c4:	cmpeq	r2, r0
   151c8:	movne	r0, #0
   151cc:	moveq	r0, #1
   151d0:	bx	lr
   151d4:	ldr	r3, [r0]
   151d8:	ldr	r2, [r1]
   151dc:	ldrd	r0, [r3, #168]	; 0xa8
   151e0:	ldrd	r2, [r2, #168]	; 0xa8
   151e4:	cmp	r1, r3
   151e8:	cmpeq	r0, r2
   151ec:	bcc	151fc <close_stdout@@Base+0x2a90>
   151f0:	movls	r0, #0
   151f4:	movhi	r0, #1
   151f8:	bx	lr
   151fc:	mvn	r0, #0
   15200:	bx	lr
   15204:	push	{r3, r4, r5, r6, r7, lr}
   15208:	mov	r7, r2
   1520c:	ldr	r2, [r0, #40]	; 0x28
   15210:	mov	r5, r0
   15214:	mov	r4, r1
   15218:	ldr	r6, [r0, #44]	; 0x2c
   1521c:	cmp	r2, r7
   15220:	bcc	1529c <close_stdout@@Base+0x2b30>
   15224:	ldr	ip, [r0, #8]
   15228:	cmp	r4, #0
   1522c:	beq	152ec <close_stdout@@Base+0x2b80>
   15230:	str	r4, [ip], #4
   15234:	ldr	r4, [r4, #8]
   15238:	cmp	r4, #0
   1523c:	bne	15230 <close_stdout@@Base+0x2ac4>
   15240:	ldr	r0, [r5, #8]
   15244:	mov	r3, r6
   15248:	mov	r2, #4
   1524c:	mov	r1, r7
   15250:	bl	114a8 <qsort@plt>
   15254:	ldr	r2, [r5, #8]
   15258:	subs	r3, r7, #1
   1525c:	ldr	r4, [r2]
   15260:	beq	152e4 <close_stdout@@Base+0x2b78>
   15264:	add	ip, r2, #4
   15268:	mov	r6, r4
   1526c:	b	15274 <close_stdout@@Base+0x2b08>
   15270:	ldr	r6, [ip, #-4]
   15274:	ldr	r5, [ip], #4
   15278:	subs	r3, r3, #1
   1527c:	str	r5, [r6, #8]
   15280:	bne	15270 <close_stdout@@Base+0x2b04>
   15284:	add	r7, r2, r7, lsl #2
   15288:	ldr	r2, [r7, #-4]
   1528c:	mov	r3, #0
   15290:	mov	r0, r4
   15294:	str	r3, [r2, #8]
   15298:	pop	{r3, r4, r5, r6, r7, pc}
   1529c:	add	r1, r7, #40	; 0x28
   152a0:	str	r1, [r0, #40]	; 0x28
   152a4:	cmn	r1, #-1073741823	; 0xc0000001
   152a8:	bhi	152c8 <close_stdout@@Base+0x2b5c>
   152ac:	lsl	r1, r1, #2
   152b0:	ldr	r0, [r0, #8]
   152b4:	bl	112a4 <realloc@plt>
   152b8:	cmp	r0, #0
   152bc:	movne	ip, r0
   152c0:	strne	r0, [r5, #8]
   152c4:	bne	15228 <close_stdout@@Base+0x2abc>
   152c8:	ldr	r0, [r5, #8]
   152cc:	bl	11250 <free@plt>
   152d0:	mov	r3, #0
   152d4:	mov	r0, r4
   152d8:	str	r3, [r5, #8]
   152dc:	str	r3, [r5, #40]	; 0x28
   152e0:	pop	{r3, r4, r5, r6, r7, pc}
   152e4:	mov	r2, r4
   152e8:	b	1528c <close_stdout@@Base+0x2b20>
   152ec:	mov	r0, ip
   152f0:	b	15244 <close_stdout@@Base+0x2ad8>
   152f4:	push	{r3, r4, r5, r6, r7, lr}
   152f8:	mov	r6, r0
   152fc:	add	r0, r2, #184	; 0xb8
   15300:	mov	r5, r2
   15304:	mov	r7, r1
   15308:	bl	1134c <malloc@plt>
   1530c:	subs	r4, r0, #0
   15310:	beq	1535c <close_stdout@@Base+0x2bf0>
   15314:	mov	r1, r7
   15318:	mov	r2, r5
   1531c:	add	r0, r4, #176	; 0xb0
   15320:	bl	11268 <memcpy@plt>
   15324:	add	r1, r4, r5
   15328:	mov	r3, #0
   1532c:	mov	r2, #3
   15330:	strb	r3, [r1, #176]	; 0xb0
   15334:	str	r5, [r4, #52]	; 0x34
   15338:	str	r6, [r4, #44]	; 0x2c
   1533c:	ldr	r1, [r6, #24]
   15340:	str	r3, [r4, #32]
   15344:	str	r3, [r4, #12]
   15348:	str	r1, [r4, #28]
   1534c:	strh	r3, [r4, #62]	; 0x3e
   15350:	str	r3, [r4, #16]
   15354:	str	r3, [r4, #20]
   15358:	strh	r2, [r4, #64]	; 0x40
   1535c:	mov	r0, r4
   15360:	pop	{r3, r4, r5, r6, r7, pc}
   15364:	push	{r3, r4, r5, lr}
   15368:	subs	r4, r0, #0
   1536c:	popeq	{r3, r4, r5, pc}
   15370:	ldr	r0, [r4, #12]
   15374:	ldr	r5, [r4, #8]
   15378:	cmp	r0, #0
   1537c:	beq	15384 <close_stdout@@Base+0x2c18>
   15380:	bl	11508 <closedir@plt>
   15384:	mov	r0, r4
   15388:	mov	r4, r5
   1538c:	bl	11250 <free@plt>
   15390:	cmp	r5, #0
   15394:	bne	15370 <close_stdout@@Base+0x2c04>
   15398:	pop	{r3, r4, r5, pc}
   1539c:	push	{r4, lr}
   153a0:	mov	r4, r0
   153a4:	b	153b4 <close_stdout@@Base+0x2c48>
   153a8:	bl	18700 <fts_children@@Base+0x14fc>
   153ac:	cmp	r0, #0
   153b0:	bge	153cc <close_stdout@@Base+0x2c60>
   153b4:	mov	r0, r4
   153b8:	bl	186b4 <fts_children@@Base+0x14b0>
   153bc:	cmp	r0, #0
   153c0:	mov	r0, r4
   153c4:	beq	153a8 <close_stdout@@Base+0x2c3c>
   153c8:	pop	{r4, pc}
   153cc:	bl	114f0 <close@plt>
   153d0:	b	153b4 <close_stdout@@Base+0x2c48>
   153d4:	push	{r3, r4, r5, lr}
   153d8:	mov	r5, r1
   153dc:	ldr	r1, [r0, #32]
   153e0:	mov	r4, r0
   153e4:	subs	r0, r1, r5
   153e8:	rsbs	r3, r0, #0
   153ec:	adcs	r3, r3, r0
   153f0:	cmn	r1, #100	; 0x64
   153f4:	moveq	r3, #0
   153f8:	cmp	r3, #0
   153fc:	bne	15444 <close_stdout@@Base+0x2cd8>
   15400:	cmp	r2, #0
   15404:	bne	1542c <close_stdout@@Base+0x2cc0>
   15408:	ldr	r3, [r4, #48]	; 0x30
   1540c:	tst	r3, #4
   15410:	bne	15424 <close_stdout@@Base+0x2cb8>
   15414:	cmp	r1, #0
   15418:	blt	15424 <close_stdout@@Base+0x2cb8>
   1541c:	mov	r0, r1
   15420:	bl	114f0 <close@plt>
   15424:	str	r5, [r4, #32]
   15428:	pop	{r3, r4, r5, pc}
   1542c:	add	r0, r4, #60	; 0x3c
   15430:	bl	186bc <fts_children@@Base+0x14b8>
   15434:	cmp	r0, #0
   15438:	bge	15420 <close_stdout@@Base+0x2cb4>
   1543c:	str	r5, [r4, #32]
   15440:	pop	{r3, r4, r5, pc}
   15444:	bl	114e4 <abort@plt>
   15448:	push	{r3, r4, r5, lr}
   1544c:	mov	r4, r0
   15450:	ldr	r3, [r0, #48]	; 0x30
   15454:	ands	r5, r3, #4
   15458:	movne	r5, #0
   1545c:	bne	15474 <close_stdout@@Base+0x2d08>
   15460:	tst	r3, #512	; 0x200
   15464:	beq	15484 <close_stdout@@Base+0x2d18>
   15468:	mvn	r1, #99	; 0x63
   1546c:	mov	r2, #1
   15470:	bl	153d4 <close_stdout@@Base+0x2c68>
   15474:	add	r0, r4, #60	; 0x3c
   15478:	bl	1539c <close_stdout@@Base+0x2c30>
   1547c:	mov	r0, r5
   15480:	pop	{r3, r4, r5, pc}
   15484:	ldr	r0, [r0, #28]
   15488:	bl	1149c <fchdir@plt>
   1548c:	adds	r5, r0, #0
   15490:	movne	r5, #1
   15494:	b	15474 <close_stdout@@Base+0x2d08>
   15498:	push	{r4, r5, r6, r7, lr}
   1549c:	mov	r4, r2
   154a0:	ldr	r2, [r2, #48]	; 0x30
   154a4:	sub	sp, sp, #12
   154a8:	mov	r6, r1
   154ac:	add	r5, r4, #72	; 0x48
   154b0:	cmp	r2, #0
   154b4:	ldr	r2, [r1]
   154b8:	bne	154c4 <close_stdout@@Base+0x2d58>
   154bc:	tst	r2, #1
   154c0:	bne	154d4 <close_stdout@@Base+0x2d68>
   154c4:	tst	r2, #2
   154c8:	bne	154d4 <close_stdout@@Base+0x2d68>
   154cc:	cmp	r3, #0
   154d0:	beq	15520 <close_stdout@@Base+0x2db4>
   154d4:	mov	r0, #3
   154d8:	ldr	r1, [r4, #24]
   154dc:	mov	r2, r5
   154e0:	bl	114cc <__xstat64@plt>
   154e4:	cmp	r0, #0
   154e8:	beq	15544 <close_stdout@@Base+0x2dd8>
   154ec:	bl	113dc <__errno_location@plt>
   154f0:	ldr	r6, [r0]
   154f4:	mov	r7, r0
   154f8:	cmp	r6, #2
   154fc:	beq	155e8 <close_stdout@@Base+0x2e7c>
   15500:	str	r6, [r4, #32]
   15504:	mov	r0, r5
   15508:	mov	r1, #0
   1550c:	mov	r2, #104	; 0x68
   15510:	bl	113f4 <memset@plt>
   15514:	mov	r0, #10
   15518:	add	sp, sp, #12
   1551c:	pop	{r4, r5, r6, r7, pc}
   15520:	ldr	r2, [r4, #24]
   15524:	mov	r1, r0
   15528:	mov	r3, #256	; 0x100
   1552c:	mov	r0, #3
   15530:	str	r3, [sp]
   15534:	mov	r3, r5
   15538:	bl	112bc <__fxstatat64@plt>
   1553c:	cmp	r0, #0
   15540:	bne	15574 <close_stdout@@Base+0x2e08>
   15544:	ldr	r0, [r4, #88]	; 0x58
   15548:	and	r0, r0, #61440	; 0xf000
   1554c:	cmp	r0, #16384	; 0x4000
   15550:	beq	15584 <close_stdout@@Base+0x2e18>
   15554:	cmp	r0, #40960	; 0xa000
   15558:	moveq	r0, #12
   1555c:	beq	15518 <close_stdout@@Base+0x2dac>
   15560:	cmp	r0, #32768	; 0x8000
   15564:	movne	r0, #3
   15568:	moveq	r0, #8
   1556c:	add	sp, sp, #12
   15570:	pop	{r4, r5, r6, r7, pc}
   15574:	bl	113dc <__errno_location@plt>
   15578:	ldr	r3, [r0]
   1557c:	str	r3, [r4, #32]
   15580:	b	15504 <close_stdout@@Base+0x2d98>
   15584:	ldr	r3, [r6]
   15588:	ldrb	r1, [r4, #176]	; 0xb0
   1558c:	tst	r3, #32
   15590:	ldr	r2, [r4, #92]	; 0x5c
   15594:	moveq	r3, #2
   15598:	movne	r3, #0
   1559c:	cmp	r1, #46	; 0x2e
   155a0:	rsb	r3, r3, r2
   155a4:	str	r3, [r4, #56]	; 0x38
   155a8:	beq	155b4 <close_stdout@@Base+0x2e48>
   155ac:	mov	r0, #1
   155b0:	b	15518 <close_stdout@@Base+0x2dac>
   155b4:	ldrb	r3, [r4, #177]	; 0xb1
   155b8:	cmp	r3, #0
   155bc:	beq	155d4 <close_stdout@@Base+0x2e68>
   155c0:	ldr	r3, [r4, #176]	; 0xb0
   155c4:	bic	r3, r3, #-16777216	; 0xff000000
   155c8:	bic	r3, r3, #255	; 0xff
   155cc:	cmp	r3, #11776	; 0x2e00
   155d0:	bne	155ac <close_stdout@@Base+0x2e40>
   155d4:	ldr	r0, [r4, #48]	; 0x30
   155d8:	cmp	r0, #0
   155dc:	movne	r0, #5
   155e0:	moveq	r0, #1
   155e4:	b	15518 <close_stdout@@Base+0x2dac>
   155e8:	mov	r0, #3
   155ec:	ldr	r1, [r4, #24]
   155f0:	mov	r2, r5
   155f4:	bl	114fc <__lxstat64@plt>
   155f8:	cmp	r0, #0
   155fc:	streq	r0, [r7]
   15600:	moveq	r0, #13
   15604:	beq	15518 <close_stdout@@Base+0x2dac>
   15608:	b	15500 <close_stdout@@Base+0x2d94>
   1560c:	push	{r3, r4, r5, lr}
   15610:	mov	r4, r0
   15614:	ldr	r3, [r1]
   15618:	add	r0, r3, #256	; 0x100
   1561c:	add	r2, r0, r2
   15620:	cmp	r3, r2
   15624:	bhi	15650 <close_stdout@@Base+0x2ee4>
   15628:	str	r2, [r1]
   1562c:	mov	r1, r2
   15630:	ldr	r0, [r4]
   15634:	bl	112a4 <realloc@plt>
   15638:	subs	r5, r0, #0
   1563c:	strne	r5, [r4]
   15640:	movne	r3, #1
   15644:	beq	15678 <close_stdout@@Base+0x2f0c>
   15648:	mov	r0, r3
   1564c:	pop	{r3, r4, r5, pc}
   15650:	ldr	r0, [r4]
   15654:	mov	r5, #0
   15658:	bl	11250 <free@plt>
   1565c:	str	r5, [r4]
   15660:	bl	113dc <__errno_location@plt>
   15664:	mov	r3, r5
   15668:	mov	r2, #36	; 0x24
   1566c:	str	r2, [r0]
   15670:	mov	r0, r3
   15674:	pop	{r3, r4, r5, pc}
   15678:	ldr	r0, [r4]
   1567c:	bl	11250 <free@plt>
   15680:	str	r5, [r4]
   15684:	mov	r3, r5
   15688:	b	15648 <close_stdout@@Base+0x2edc>
   1568c:	movw	r3, #258	; 0x102
   15690:	and	r3, r0, r3
   15694:	cmp	r3, #0
   15698:	ldr	ip, [pc, #116]	; 15714 <close_stdout@@Base+0x2fa8>
   1569c:	push	{r4, lr}
   156a0:	add	ip, pc, ip
   156a4:	sub	sp, sp, #8
   156a8:	mov	r4, r1
   156ac:	beq	156ec <close_stdout@@Base+0x2f80>
   156b0:	ldr	lr, [pc, #96]	; 15718 <close_stdout@@Base+0x2fac>
   156b4:	mov	r0, #31
   156b8:	ldr	r2, [pc, #92]	; 1571c <close_stdout@@Base+0x2fb0>
   156bc:	mov	r1, #0
   156c0:	ldr	r3, [pc, #88]	; 15720 <close_stdout@@Base+0x2fb4>
   156c4:	ldr	ip, [ip, lr]
   156c8:	add	r2, pc, r2
   156cc:	add	r3, pc, r3
   156d0:	str	ip, [sp]
   156d4:	bl	17eac <fts_children@@Base+0xca8>
   156d8:	str	r0, [r4]
   156dc:	adds	r0, r0, #0
   156e0:	movne	r0, #1
   156e4:	add	sp, sp, #8
   156e8:	pop	{r4, pc}
   156ec:	mov	r0, #32
   156f0:	bl	1134c <malloc@plt>
   156f4:	cmp	r0, #0
   156f8:	str	r0, [r4]
   156fc:	moveq	r0, r0
   15700:	beq	156e4 <close_stdout@@Base+0x2f78>
   15704:	bl	17458 <fts_children@@Base+0x254>
   15708:	mov	r0, #1
   1570c:	add	sp, sp, #8
   15710:	pop	{r4, pc}
   15714:	andeq	r5, r1, r8, asr r9
   15718:	andeq	r0, r0, r0, lsr #2
   1571c:			; <UNDEFINED> instruction: 0xfffffab0
   15720:			; <UNDEFINED> instruction: 0xfffffa64
   15724:	tst	r1, #16
   15728:	push	{r4, lr}
   1572c:	moveq	r3, #18688	; 0x4900
   15730:	movne	r3, #51456	; 0xc900
   15734:	tst	r1, #2048	; 0x800
   15738:	moveq	ip, #0
   1573c:	movne	ip, #262144	; 0x40000
   15740:	tst	r1, #512	; 0x200
   15744:	orr	r3, ip, r3
   15748:	beq	15778 <close_stdout@@Base+0x300c>
   1574c:	mov	r1, r2
   15750:	mov	r2, r3
   15754:	bl	18b68 <fts_children@@Base+0x1964>
   15758:	mov	r4, r0
   1575c:	cmp	r4, #0
   15760:	blt	15770 <close_stdout@@Base+0x3004>
   15764:	mov	r0, r4
   15768:	mov	r1, #1
   1576c:	bl	17368 <fts_children@@Base+0x164>
   15770:	mov	r0, r4
   15774:	pop	{r4, pc}
   15778:	mov	r0, r2
   1577c:	mov	r1, r3
   15780:	bl	1754c <fts_children@@Base+0x348>
   15784:	mov	r4, r0
   15788:	b	1575c <close_stdout@@Base+0x2ff0>
   1578c:	movw	r3, #258	; 0x102
   15790:	and	r3, r0, r3
   15794:	cmp	r3, #0
   15798:	push	{r4, r5, r6, r7, r8, lr}
   1579c:	mov	r8, r1
   157a0:	mov	r6, r2
   157a4:	beq	1580c <close_stdout@@Base+0x30a0>
   157a8:	mov	r0, #24
   157ac:	bl	1134c <malloc@plt>
   157b0:	subs	r7, r0, #0
   157b4:	beq	15838 <close_stdout@@Base+0x30cc>
   157b8:	ldrd	r4, [r6, #72]	; 0x48
   157bc:	mov	r1, r7
   157c0:	strd	r4, [r7]
   157c4:	ldrd	r4, [r6, #168]	; 0xa8
   157c8:	str	r6, [r7, #16]
   157cc:	strd	r4, [r7, #8]
   157d0:	ldr	r0, [r8]
   157d4:	bl	184d4 <fts_children@@Base+0x12d0>
   157d8:	cmp	r7, r0
   157dc:	mov	r4, r0
   157e0:	beq	15830 <close_stdout@@Base+0x30c4>
   157e4:	mov	r0, r7
   157e8:	bl	11250 <free@plt>
   157ec:	cmp	r4, #0
   157f0:	beq	15838 <close_stdout@@Base+0x30cc>
   157f4:	ldr	r3, [r4, #16]
   157f8:	mov	r2, #2
   157fc:	mov	r0, #1
   15800:	strh	r2, [r6, #60]	; 0x3c
   15804:	str	r3, [r6]
   15808:	pop	{r4, r5, r6, r7, r8, pc}
   1580c:	ldr	r0, [r1]
   15810:	add	r1, r2, #72	; 0x48
   15814:	bl	17474 <fts_children@@Base+0x270>
   15818:	cmp	r0, #0
   1581c:	beq	15830 <close_stdout@@Base+0x30c4>
   15820:	mov	r3, #2
   15824:	str	r6, [r6]
   15828:	strh	r3, [r6, #60]	; 0x3c
   1582c:	pop	{r4, r5, r6, r7, r8, pc}
   15830:	mov	r0, #1
   15834:	pop	{r4, r5, r6, r7, r8, pc}
   15838:	mov	r0, #0
   1583c:	pop	{r4, r5, r6, r7, r8, pc}
   15840:	ldr	ip, [pc, #568]	; 15a80 <close_stdout@@Base+0x3314>
   15844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15848:	mov	sl, r0
   1584c:	ldr	r0, [pc, #560]	; 15a84 <close_stdout@@Base+0x3318>
   15850:	add	ip, pc, ip
   15854:	sub	sp, sp, #124	; 0x7c
   15858:	mov	r9, r3
   1585c:	mov	r3, ip
   15860:	mov	r5, r1
   15864:	ldr	r0, [ip, r0]
   15868:	mov	fp, r2
   1586c:	ldr	r4, [sp, #160]	; 0xa0
   15870:	ldr	r3, [r0]
   15874:	cmp	r4, #0
   15878:	str	r0, [sp]
   1587c:	moveq	r7, r4
   15880:	str	r3, [sp, #116]	; 0x74
   15884:	beq	15898 <close_stdout@@Base+0x312c>
   15888:	ldrb	r3, [r4]
   1588c:	cmp	r3, #46	; 0x2e
   15890:	beq	15970 <close_stdout@@Base+0x3204>
   15894:	mov	r7, #0
   15898:	ldr	r6, [sl, #48]	; 0x30
   1589c:	ands	r8, r6, #4
   158a0:	beq	158e4 <close_stdout@@Base+0x3178>
   158a4:	ands	r8, r6, #512	; 0x200
   158a8:	beq	158c4 <close_stdout@@Base+0x3158>
   158ac:	cmp	r9, #0
   158b0:	movlt	r8, #0
   158b4:	blt	158c4 <close_stdout@@Base+0x3158>
   158b8:	mov	r0, r9
   158bc:	mov	r8, #0
   158c0:	bl	114f0 <close@plt>
   158c4:	ldr	r1, [sp]
   158c8:	mov	r0, r8
   158cc:	ldr	r2, [sp, #116]	; 0x74
   158d0:	ldr	r3, [r1]
   158d4:	cmp	r2, r3
   158d8:	bne	15a74 <close_stdout@@Base+0x3308>
   158dc:	add	sp, sp, #124	; 0x7c
   158e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158e4:	lsr	r2, r9, #31
   158e8:	tst	r7, r2
   158ec:	bne	1598c <close_stdout@@Base+0x3220>
   158f0:	cmp	r2, #0
   158f4:	streq	r9, [sp, #4]
   158f8:	bne	15a78 <close_stdout@@Base+0x330c>
   158fc:	tst	r6, #2
   15900:	bne	15930 <close_stdout@@Base+0x31c4>
   15904:	cmp	r4, #0
   15908:	beq	159d4 <close_stdout@@Base+0x3268>
   1590c:	ldrb	r2, [r4]
   15910:	cmp	r2, #46	; 0x2e
   15914:	bne	159d4 <close_stdout@@Base+0x3268>
   15918:	ldrb	r2, [r4, #1]
   1591c:	cmp	r2, #46	; 0x2e
   15920:	bne	159d4 <close_stdout@@Base+0x3268>
   15924:	ldrb	r2, [r4, #2]
   15928:	cmp	r2, #0
   1592c:	bne	159d4 <close_stdout@@Base+0x3268>
   15930:	mov	r0, #3
   15934:	ldr	r1, [sp, #4]
   15938:	add	r2, sp, #8
   1593c:	bl	112d4 <__fxstat64@plt>
   15940:	cmp	r0, #0
   15944:	beq	159ec <close_stdout@@Base+0x3280>
   15948:	mvn	r8, #0
   1594c:	cmp	r9, #0
   15950:	bge	158c4 <close_stdout@@Base+0x3158>
   15954:	bl	113dc <__errno_location@plt>
   15958:	ldr	r5, [r0]
   1595c:	mov	r4, r0
   15960:	ldr	r0, [sp, #4]
   15964:	bl	114f0 <close@plt>
   15968:	str	r5, [r4]
   1596c:	b	158c4 <close_stdout@@Base+0x3158>
   15970:	ldrb	r3, [r4, #1]
   15974:	cmp	r3, #46	; 0x2e
   15978:	bne	15894 <close_stdout@@Base+0x3128>
   1597c:	ldrb	r3, [r4, #2]
   15980:	rsbs	r7, r3, #1
   15984:	movcc	r7, #0
   15988:	b	15898 <close_stdout@@Base+0x312c>
   1598c:	tst	r6, #512	; 0x200
   15990:	bne	15a10 <close_stdout@@Base+0x32a4>
   15994:	mov	r1, r6
   15998:	mov	r7, #1
   1599c:	ldr	r0, [sl, #32]
   159a0:	mov	r2, r4
   159a4:	bl	15724 <close_stdout@@Base+0x2fb8>
   159a8:	cmp	r0, #0
   159ac:	str	r0, [sp, #4]
   159b0:	blt	15a6c <close_stdout@@Base+0x3300>
   159b4:	ldr	r6, [sl, #48]	; 0x30
   159b8:	b	158fc <close_stdout@@Base+0x3190>
   159bc:	ldrd	r4, [fp]
   159c0:	ldrd	r0, [sp, #104]	; 0x68
   159c4:	cmp	r5, r1
   159c8:	cmpeq	r4, r0
   159cc:	bne	15a00 <close_stdout@@Base+0x3294>
   159d0:	ldr	r6, [sl, #48]	; 0x30
   159d4:	tst	r6, #512	; 0x200
   159d8:	bne	15a54 <close_stdout@@Base+0x32e8>
   159dc:	ldr	r0, [sp, #4]
   159e0:	bl	1149c <fchdir@plt>
   159e4:	mov	r8, r0
   159e8:	b	1594c <close_stdout@@Base+0x31e0>
   159ec:	ldrd	r2, [r5]
   159f0:	ldrd	r4, [sp, #8]
   159f4:	cmp	r3, r5
   159f8:	cmpeq	r2, r4
   159fc:	beq	159bc <close_stdout@@Base+0x3250>
   15a00:	bl	113dc <__errno_location@plt>
   15a04:	mov	r3, #2
   15a08:	str	r3, [r0]
   15a0c:	b	15948 <close_stdout@@Base+0x31dc>
   15a10:	add	r7, sl, #60	; 0x3c
   15a14:	mov	r0, r7
   15a18:	bl	186b4 <fts_children@@Base+0x14b0>
   15a1c:	cmp	r0, #0
   15a20:	bne	15994 <close_stdout@@Base+0x3228>
   15a24:	mov	r0, r7
   15a28:	bl	18700 <fts_children@@Base+0x14fc>
   15a2c:	cmp	r0, #0
   15a30:	str	r0, [sp, #4]
   15a34:	ldrlt	r1, [sl, #48]	; 0x30
   15a38:	blt	15998 <close_stdout@@Base+0x322c>
   15a3c:	ldr	r6, [sl, #48]	; 0x30
   15a40:	mov	r7, #1
   15a44:	ldr	r9, [sp, #4]
   15a48:	tst	r6, #2
   15a4c:	beq	159d4 <close_stdout@@Base+0x3268>
   15a50:	b	15930 <close_stdout@@Base+0x31c4>
   15a54:	eor	r2, r7, #1
   15a58:	mov	r0, sl
   15a5c:	ldr	r1, [sp, #4]
   15a60:	uxtb	r2, r2
   15a64:	bl	153d4 <close_stdout@@Base+0x2c68>
   15a68:	b	158c4 <close_stdout@@Base+0x3158>
   15a6c:	mvn	r8, #0
   15a70:	b	158c4 <close_stdout@@Base+0x3158>
   15a74:	bl	11298 <__stack_chk_fail@plt>
   15a78:	mov	r1, r6
   15a7c:	b	1599c <close_stdout@@Base+0x3230>
   15a80:	andeq	r5, r1, r8, lsr #15
   15a84:	andeq	r0, r0, r4, lsr #2
   15a88:	push	{r4, r5, r6, r7, lr}
   15a8c:	movw	r3, #258	; 0x102
   15a90:	ldr	r5, [pc, #216]	; 15b70 <close_stdout@@Base+0x3404>
   15a94:	and	r3, r0, r3
   15a98:	ldr	r4, [pc, #212]	; 15b74 <close_stdout@@Base+0x3408>
   15a9c:	cmp	r3, #0
   15aa0:	add	r5, pc, r5
   15aa4:	sub	sp, sp, #36	; 0x24
   15aa8:	mov	ip, r1
   15aac:	ldr	r6, [r5, r4]
   15ab0:	mov	r3, r5
   15ab4:	ldr	r3, [r6]
   15ab8:	str	r3, [sp, #28]
   15abc:	bne	15b14 <close_stdout@@Base+0x33a8>
   15ac0:	ldr	r3, [r2, #4]
   15ac4:	cmp	r3, #0
   15ac8:	beq	15afc <close_stdout@@Base+0x3390>
   15acc:	ldr	r1, [r3, #48]	; 0x30
   15ad0:	cmp	r1, #0
   15ad4:	blt	15afc <close_stdout@@Base+0x3390>
   15ad8:	ldr	r7, [ip]
   15adc:	ldrd	r0, [r7, #16]
   15ae0:	orrs	r4, r0, r1
   15ae4:	beq	15b6c <close_stdout@@Base+0x3400>
   15ae8:	ldrd	r4, [r7]
   15aec:	ldrd	r0, [r2, #168]	; 0xa8
   15af0:	cmp	r5, r1
   15af4:	cmpeq	r4, r0
   15af8:	beq	15b40 <close_stdout@@Base+0x33d4>
   15afc:	ldr	r2, [sp, #28]
   15b00:	ldr	r3, [r6]
   15b04:	cmp	r2, r3
   15b08:	bne	15b68 <close_stdout@@Base+0x33fc>
   15b0c:	add	sp, sp, #36	; 0x24
   15b10:	pop	{r4, r5, r6, r7, pc}
   15b14:	ldrd	r4, [r2, #72]	; 0x48
   15b18:	mov	r1, sp
   15b1c:	ldrd	r2, [r2, #168]	; 0xa8
   15b20:	ldr	r0, [ip]
   15b24:	strd	r4, [sp]
   15b28:	strd	r2, [sp, #8]
   15b2c:	bl	18548 <fts_children@@Base+0x1344>
   15b30:	cmp	r0, #0
   15b34:	beq	15b6c <close_stdout@@Base+0x3400>
   15b38:	bl	11250 <free@plt>
   15b3c:	b	15afc <close_stdout@@Base+0x3390>
   15b40:	ldrd	r0, [r7, #8]
   15b44:	ldrd	r4, [r2, #72]	; 0x48
   15b48:	cmp	r1, r5
   15b4c:	cmpeq	r0, r4
   15b50:	ldrdeq	r0, [r3, #72]	; 0x48
   15b54:	strdeq	r0, [r7, #8]
   15b58:	ldreq	r1, [ip]
   15b5c:	ldrdeq	r2, [r3, #168]	; 0xa8
   15b60:	strdeq	r2, [r1]
   15b64:	b	15afc <close_stdout@@Base+0x3390>
   15b68:	bl	11298 <__stack_chk_fail@plt>
   15b6c:	bl	114e4 <abort@plt>
   15b70:	andeq	r5, r1, r8, asr r5
   15b74:	andeq	r0, r0, r4, lsr #2
   15b78:	ldr	r3, [pc, #2256]	; 16450 <close_stdout@@Base+0x3ce4>
   15b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b80:	add	r3, pc, r3
   15b84:	ldr	r2, [pc, #2248]	; 16454 <close_stdout@@Base+0x3ce8>
   15b88:	sub	sp, sp, #164	; 0xa4
   15b8c:	ldr	r9, [r0]
   15b90:	mov	r5, r0
   15b94:	str	r1, [sp, #52]	; 0x34
   15b98:	ldr	r2, [r3, r2]
   15b9c:	ldr	r0, [r9, #12]
   15ba0:	adds	r1, r0, #0
   15ba4:	ldr	r3, [r2]
   15ba8:	str	r2, [sp, #48]	; 0x30
   15bac:	movne	r1, #1
   15bb0:	cmp	r1, #0
   15bb4:	str	r1, [sp, #44]	; 0x2c
   15bb8:	str	r3, [sp, #156]	; 0x9c
   15bbc:	bne	160f0 <close_stdout@@Base+0x3984>
   15bc0:	ldr	r3, [r5, #48]	; 0x30
   15bc4:	ldr	r1, [r9, #24]
   15bc8:	and	r3, r3, #516	; 0x204
   15bcc:	cmp	r3, #512	; 0x200
   15bd0:	ldr	r3, [r5, #48]	; 0x30
   15bd4:	ldreq	r0, [r5, #32]
   15bd8:	mvnne	r0, #99	; 0x63
   15bdc:	tst	r3, #16
   15be0:	moveq	r2, #18688	; 0x4900
   15be4:	bne	1607c <close_stdout@@Base+0x3910>
   15be8:	tst	r3, #2048	; 0x800
   15bec:	moveq	r3, #0
   15bf0:	movne	r3, #262144	; 0x40000
   15bf4:	orr	r2, r3, r2
   15bf8:	bl	18b68 <fts_children@@Base+0x1964>
   15bfc:	subs	r4, r0, #0
   15c00:	blt	1631c <close_stdout@@Base+0x3bb0>
   15c04:	mov	r1, #1
   15c08:	bl	17368 <fts_children@@Base+0x164>
   15c0c:	mov	r0, r4
   15c10:	bl	11484 <fdopendir@plt>
   15c14:	cmp	r0, #0
   15c18:	beq	16304 <close_stdout@@Base+0x3b98>
   15c1c:	ldrh	r3, [r9, #60]	; 0x3c
   15c20:	str	r0, [r9, #12]
   15c24:	cmp	r3, #11
   15c28:	beq	16338 <close_stdout@@Base+0x3bcc>
   15c2c:	ldr	r0, [r5, #48]	; 0x30
   15c30:	tst	r0, #256	; 0x100
   15c34:	bne	16160 <close_stdout@@Base+0x39f4>
   15c38:	ldr	r2, [r5, #44]	; 0x2c
   15c3c:	movw	r3, #34464	; 0x86a0
   15c40:	movt	r3, #1
   15c44:	cmp	r2, #0
   15c48:	mvnne	r3, #0
   15c4c:	str	r3, [sp, #20]
   15c50:	ldr	r3, [sp, #52]	; 0x34
   15c54:	cmp	r3, #2
   15c58:	moveq	r6, #0
   15c5c:	beq	15c74 <close_stdout@@Base+0x3508>
   15c60:	ldr	r3, [r5, #48]	; 0x30
   15c64:	and	r3, r3, #24
   15c68:	cmp	r3, #24
   15c6c:	mvnne	r6, #0
   15c70:	beq	16148 <close_stdout@@Base+0x39dc>
   15c74:	ldr	r1, [sp, #44]	; 0x2c
   15c78:	cmp	r1, #0
   15c7c:	movne	r1, #1
   15c80:	strne	r1, [sp, #60]	; 0x3c
   15c84:	beq	16020 <close_stdout@@Base+0x38b4>
   15c88:	ldr	r3, [r9, #40]	; 0x28
   15c8c:	ldr	r2, [r9, #28]
   15c90:	str	r3, [sp, #28]
   15c94:	sub	r3, r3, #1
   15c98:	ldr	r1, [sp, #28]
   15c9c:	ldrb	r2, [r2, r3]
   15ca0:	cmp	r2, #47	; 0x2f
   15ca4:	moveq	r1, r3
   15ca8:	ands	r0, r0, #4
   15cac:	str	r1, [sp, #28]
   15cb0:	ldrne	r3, [r5, #24]
   15cb4:	movne	r1, #47	; 0x2f
   15cb8:	ldrne	r0, [sp, #28]
   15cbc:	streq	r0, [sp, #36]	; 0x24
   15cc0:	addne	r2, r3, r0
   15cc4:	strbne	r1, [r3, r0]
   15cc8:	addne	r2, r2, #1
   15ccc:	ldr	r3, [r9, #48]	; 0x30
   15cd0:	add	r0, r5, #48	; 0x30
   15cd4:	ldr	r1, [sp, #28]
   15cd8:	add	r3, r3, #1
   15cdc:	ldr	fp, [r5, #36]	; 0x24
   15ce0:	str	r3, [sp, #24]
   15ce4:	add	r1, r1, #1
   15ce8:	ldr	r3, [pc, #1896]	; 16458 <close_stdout@@Base+0x3cec>
   15cec:	rsb	fp, r1, fp
   15cf0:	strne	r2, [sp, #36]	; 0x24
   15cf4:	mov	r2, #0
   15cf8:	add	r3, pc, r3
   15cfc:	str	r1, [sp, #12]
   15d00:	str	r2, [sp, #32]
   15d04:	mov	sl, r2
   15d08:	mov	r7, r2
   15d0c:	str	r2, [sp, #16]
   15d10:	str	r3, [sp, #40]	; 0x28
   15d14:	str	r0, [sp, #56]	; 0x38
   15d18:	b	15de8 <close_stdout@@Base+0x367c>
   15d1c:	ldr	r2, [sp, #12]
   15d20:	adds	r0, r0, r2
   15d24:	bcs	15ec4 <close_stdout@@Base+0x3758>
   15d28:	ldr	r3, [sp, #24]
   15d2c:	str	r3, [r4, #48]	; 0x30
   15d30:	ldr	r3, [r5]
   15d34:	str	r0, [r4, #40]	; 0x28
   15d38:	str	r3, [r4, #4]
   15d3c:	ldrd	r2, [r8]
   15d40:	strd	r2, [r4, #168]	; 0xa8
   15d44:	ldr	r3, [r5, #48]	; 0x30
   15d48:	tst	r3, #4
   15d4c:	addeq	r3, r4, #176	; 0xb0
   15d50:	streq	r3, [r4, #24]
   15d54:	bne	15f0c <close_stdout@@Base+0x37a0>
   15d58:	ldr	r3, [r5, #44]	; 0x2c
   15d5c:	cmp	r3, #0
   15d60:	beq	15d70 <close_stdout@@Base+0x3604>
   15d64:	ldr	r3, [r5, #48]	; 0x30
   15d68:	ands	r3, r3, #1024	; 0x400
   15d6c:	beq	15f2c <close_stdout@@Base+0x37c0>
   15d70:	ldr	r3, [r5, #48]	; 0x30
   15d74:	and	r3, r3, #24
   15d78:	cmp	r3, #24
   15d7c:	movne	r2, #0
   15d80:	beq	15f64 <close_stdout@@Base+0x37f8>
   15d84:	mov	r0, #11
   15d88:	strh	r0, [r4, #60]	; 0x3c
   15d8c:	ldrb	r3, [r8, #18]
   15d90:	sub	r3, r3, #1
   15d94:	cmp	r3, #11
   15d98:	ldrls	r1, [sp, #40]	; 0x28
   15d9c:	movhi	r3, #0
   15da0:	ldrls	r3, [r1, r3, lsl #2]
   15da4:	cmp	r2, #0
   15da8:	moveq	r2, #2
   15dac:	movne	r2, #1
   15db0:	str	r3, [r4, #88]	; 0x58
   15db4:	mov	r3, #0
   15db8:	strd	r2, [r4, #120]	; 0x78
   15dbc:	ldr	r2, [sp, #16]
   15dc0:	add	r7, r7, #1
   15dc4:	ldr	r0, [sp, #20]
   15dc8:	mov	r3, #0
   15dcc:	cmp	r2, #0
   15dd0:	str	r3, [r4, #8]
   15dd4:	streq	r4, [sp, #16]
   15dd8:	strne	r4, [sl, #8]
   15ddc:	cmp	r0, r7
   15de0:	bls	15f8c <close_stdout@@Base+0x3820>
   15de4:	mov	sl, r4
   15de8:	ldr	r0, [r9, #12]
   15dec:	cmp	r0, #0
   15df0:	beq	15f8c <close_stdout@@Base+0x3820>
   15df4:	bl	11478 <readdir64@plt>
   15df8:	subs	r8, r0, #0
   15dfc:	beq	15f78 <close_stdout@@Base+0x380c>
   15e00:	ldr	r3, [r5, #48]	; 0x30
   15e04:	tst	r3, #32
   15e08:	bne	15e18 <close_stdout@@Base+0x36ac>
   15e0c:	ldrb	r3, [r8, #19]
   15e10:	cmp	r3, #46	; 0x2e
   15e14:	beq	15f44 <close_stdout@@Base+0x37d8>
   15e18:	add	r6, r8, #19
   15e1c:	mov	r0, r6
   15e20:	bl	113a0 <strlen@plt>
   15e24:	mov	r1, r6
   15e28:	mov	r2, r0
   15e2c:	mov	r0, r5
   15e30:	bl	152f4 <close_stdout@@Base+0x2b88>
   15e34:	subs	r4, r0, #0
   15e38:	beq	162bc <close_stdout@@Base+0x3b50>
   15e3c:	mov	r0, r6
   15e40:	bl	113a0 <strlen@plt>
   15e44:	cmp	fp, r0
   15e48:	bhi	15d1c <close_stdout@@Base+0x35b0>
   15e4c:	mov	r3, r5
   15e50:	ldr	r1, [sp, #28]
   15e54:	ldr	fp, [r3, #24]!
   15e58:	add	r2, r1, #2
   15e5c:	add	r1, r5, #36	; 0x24
   15e60:	add	r2, r2, r0
   15e64:	mov	r0, r3
   15e68:	bl	1560c <close_stdout@@Base+0x2ea0>
   15e6c:	cmp	r0, #0
   15e70:	beq	162bc <close_stdout@@Base+0x3b50>
   15e74:	ldr	r3, [r5, #24]
   15e78:	cmp	r3, fp
   15e7c:	beq	15ea4 <close_stdout@@Base+0x3738>
   15e80:	ldr	r2, [r5, #48]	; 0x30
   15e84:	tst	r2, #4
   15e88:	ldrne	r2, [sp, #12]
   15e8c:	moveq	r0, #1
   15e90:	streq	r0, [sp, #32]
   15e94:	addne	r3, r3, r2
   15e98:	strne	r3, [sp, #36]	; 0x24
   15e9c:	movne	r3, #1
   15ea0:	strne	r3, [sp, #32]
   15ea4:	ldr	r1, [sp, #12]
   15ea8:	mov	r0, r6
   15eac:	ldr	fp, [r5, #36]	; 0x24
   15eb0:	rsb	fp, r1, fp
   15eb4:	bl	113a0 <strlen@plt>
   15eb8:	ldr	r2, [sp, #12]
   15ebc:	adds	r0, r0, r2
   15ec0:	bcc	15d28 <close_stdout@@Base+0x35bc>
   15ec4:	mov	r0, r4
   15ec8:	mov	r4, #0
   15ecc:	bl	11250 <free@plt>
   15ed0:	ldr	r0, [sp, #16]
   15ed4:	bl	15364 <close_stdout@@Base+0x2bf8>
   15ed8:	ldr	r0, [r9, #12]
   15edc:	bl	11508 <closedir@plt>
   15ee0:	str	r4, [r9, #12]
   15ee4:	mov	r3, #7
   15ee8:	strh	r3, [r9, #60]	; 0x3c
   15eec:	ldr	r3, [r5, #48]	; 0x30
   15ef0:	orr	r3, r3, #16384	; 0x4000
   15ef4:	str	r3, [r5, #48]	; 0x30
   15ef8:	bl	113dc <__errno_location@plt>
   15efc:	mov	r2, #36	; 0x24
   15f00:	mov	r3, r4
   15f04:	str	r2, [r0]
   15f08:	b	1611c <close_stdout@@Base+0x39b0>
   15f0c:	ldr	r3, [r4, #28]
   15f10:	add	r1, r4, #176	; 0xb0
   15f14:	ldr	r2, [r4, #52]	; 0x34
   15f18:	ldr	r0, [sp, #36]	; 0x24
   15f1c:	str	r3, [r4, #24]
   15f20:	add	r2, r2, #1
   15f24:	bl	11244 <memmove@plt>
   15f28:	b	15d58 <close_stdout@@Base+0x35ec>
   15f2c:	ldr	r0, [r5, #32]
   15f30:	mov	r2, r4
   15f34:	ldr	r1, [sp, #56]	; 0x38
   15f38:	bl	15498 <close_stdout@@Base+0x2d2c>
   15f3c:	strh	r0, [r4, #60]	; 0x3c
   15f40:	b	15dbc <close_stdout@@Base+0x3650>
   15f44:	ldrb	r3, [r8, #20]
   15f48:	cmp	r3, #0
   15f4c:	beq	15f5c <close_stdout@@Base+0x37f0>
   15f50:	ldrh	r3, [r8, #20]
   15f54:	cmp	r3, #46	; 0x2e
   15f58:	bne	15e18 <close_stdout@@Base+0x36ac>
   15f5c:	mov	r4, sl
   15f60:	b	15de4 <close_stdout@@Base+0x3678>
   15f64:	ldrb	r3, [r8, #18]
   15f68:	tst	r3, #251	; 0xfb
   15f6c:	moveq	r2, #0
   15f70:	movne	r2, #1
   15f74:	b	15d84 <close_stdout@@Base+0x3618>
   15f78:	ldr	r0, [r9, #12]
   15f7c:	cmp	r0, #0
   15f80:	beq	15f8c <close_stdout@@Base+0x3820>
   15f84:	bl	11508 <closedir@plt>
   15f88:	str	r8, [r9, #12]
   15f8c:	ldr	r1, [sp, #32]
   15f90:	cmp	r1, #0
   15f94:	bne	161b0 <close_stdout@@Base+0x3a44>
   15f98:	ldr	r3, [r5, #48]	; 0x30
   15f9c:	tst	r3, #4
   15fa0:	beq	15fd4 <close_stdout@@Base+0x3868>
   15fa4:	ldr	r3, [r5, #36]	; 0x24
   15fa8:	ldr	r2, [sp, #12]
   15fac:	cmp	r3, r2
   15fb0:	beq	15fbc <close_stdout@@Base+0x3850>
   15fb4:	cmp	r7, #0
   15fb8:	bne	15fc8 <close_stdout@@Base+0x385c>
   15fbc:	ldr	r3, [sp, #36]	; 0x24
   15fc0:	sub	r3, r3, #1
   15fc4:	str	r3, [sp, #36]	; 0x24
   15fc8:	ldr	r0, [sp, #36]	; 0x24
   15fcc:	mov	r3, #0
   15fd0:	strb	r3, [r0]
   15fd4:	ldr	r1, [sp, #44]	; 0x2c
   15fd8:	ldr	r2, [sp, #60]	; 0x3c
   15fdc:	eor	r3, r1, #1
   15fe0:	tst	r2, r3
   15fe4:	bne	1609c <close_stdout@@Base+0x3930>
   15fe8:	cmp	r7, #0
   15fec:	beq	16388 <close_stdout@@Base+0x3c1c>
   15ff0:	movw	r3, #10000	; 0x2710
   15ff4:	cmp	r7, r3
   15ff8:	bls	16104 <close_stdout@@Base+0x3998>
   15ffc:	ldr	r3, [r5, #44]	; 0x2c
   16000:	cmp	r3, #0
   16004:	beq	163a8 <close_stdout@@Base+0x3c3c>
   16008:	mov	r0, r5
   1600c:	ldr	r1, [sp, #16]
   16010:	mov	r2, r7
   16014:	bl	15204 <close_stdout@@Base+0x2a98>
   16018:	mov	r3, r0
   1601c:	b	1611c <close_stdout@@Base+0x39b0>
   16020:	adds	r6, r6, #0
   16024:	ldr	r2, [sp, #52]	; 0x34
   16028:	movne	r6, #1
   1602c:	subs	r3, r2, #3
   16030:	rsbs	r7, r3, #0
   16034:	adcs	r7, r7, r3
   16038:	orrs	r3, r6, r7
   1603c:	beq	1613c <close_stdout@@Base+0x39d0>
   16040:	tst	r0, #512	; 0x200
   16044:	bne	16240 <close_stdout@@Base+0x3ad4>
   16048:	mov	r3, #0
   1604c:	mov	r0, r5
   16050:	str	r3, [sp]
   16054:	add	r1, r9, #72	; 0x48
   16058:	add	r2, r9, #168	; 0xa8
   1605c:	mov	r3, r4
   16060:	bl	15840 <close_stdout@@Base+0x30d4>
   16064:	cmp	r0, #0
   16068:	bne	1625c <close_stdout@@Base+0x3af0>
   1606c:	mov	r3, #1
   16070:	ldr	r0, [r5, #48]	; 0x30
   16074:	str	r3, [sp, #60]	; 0x3c
   16078:	b	15c88 <close_stdout@@Base+0x351c>
   1607c:	tst	r3, #1
   16080:	moveq	r2, #51456	; 0xc900
   16084:	beq	15be8 <close_stdout@@Base+0x347c>
   16088:	ldr	r2, [r9, #48]	; 0x30
   1608c:	cmp	r2, #0
   16090:	movne	r2, #51456	; 0xc900
   16094:	moveq	r2, #18688	; 0x4900
   16098:	b	15be8 <close_stdout@@Base+0x347c>
   1609c:	ldr	r3, [sp, #52]	; 0x34
   160a0:	cmp	r3, #1
   160a4:	cmpne	r7, #0
   160a8:	bne	15ff0 <close_stdout@@Base+0x3884>
   160ac:	ldr	r3, [r9, #48]	; 0x30
   160b0:	cmp	r3, #0
   160b4:	bne	16358 <close_stdout@@Base+0x3bec>
   160b8:	mov	r0, r5
   160bc:	bl	15448 <close_stdout@@Base+0x2cdc>
   160c0:	adds	r0, r0, #0
   160c4:	movne	r0, #1
   160c8:	cmp	r0, #0
   160cc:	beq	15fe8 <close_stdout@@Base+0x387c>
   160d0:	mov	r3, #7
   160d4:	strh	r3, [r9, #60]	; 0x3c
   160d8:	ldr	r3, [r5, #48]	; 0x30
   160dc:	ldr	r0, [sp, #16]
   160e0:	orr	r3, r3, #16384	; 0x4000
   160e4:	str	r3, [r5, #48]	; 0x30
   160e8:	bl	15364 <close_stdout@@Base+0x2bf8>
   160ec:	b	16330 <close_stdout@@Base+0x3bc4>
   160f0:	bl	11490 <dirfd@plt>
   160f4:	subs	r4, r0, #0
   160f8:	blt	16414 <close_stdout@@Base+0x3ca8>
   160fc:	ldr	r0, [r5, #48]	; 0x30
   16100:	b	15c38 <close_stdout@@Base+0x34cc>
   16104:	ldr	r3, [r5, #44]	; 0x2c
   16108:	cmp	r3, #0
   1610c:	beq	16118 <close_stdout@@Base+0x39ac>
   16110:	cmp	r7, #1
   16114:	bhi	16008 <close_stdout@@Base+0x389c>
   16118:	ldr	r3, [sp, #16]
   1611c:	ldr	r1, [sp, #48]	; 0x30
   16120:	mov	r0, r3
   16124:	ldr	r2, [sp, #156]	; 0x9c
   16128:	ldr	r3, [r1]
   1612c:	cmp	r2, r3
   16130:	bne	1644c <close_stdout@@Base+0x3ce0>
   16134:	add	sp, sp, #164	; 0xa4
   16138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1613c:	ldr	r2, [sp, #44]	; 0x2c
   16140:	str	r2, [sp, #60]	; 0x3c
   16144:	b	15c88 <close_stdout@@Base+0x351c>
   16148:	tst	r0, #32
   1614c:	ldr	r6, [r9, #92]	; 0x5c
   16150:	movne	r3, #0
   16154:	moveq	r3, #2
   16158:	rsb	r6, r3, r6
   1615c:	b	15c74 <close_stdout@@Base+0x3508>
   16160:	add	r6, r5, #56	; 0x38
   16164:	mov	r2, r9
   16168:	mov	r1, r6
   1616c:	bl	15a88 <close_stdout@@Base+0x331c>
   16170:	add	r1, r5, #48	; 0x30
   16174:	mov	r2, r9
   16178:	mov	r3, #0
   1617c:	ldr	r0, [r5, #32]
   16180:	bl	15498 <close_stdout@@Base+0x2d2c>
   16184:	mov	r1, r6
   16188:	ldr	r0, [r5, #48]	; 0x30
   1618c:	mov	r2, r9
   16190:	bl	1578c <close_stdout@@Base+0x3020>
   16194:	subs	r6, r0, #0
   16198:	bne	160fc <close_stdout@@Base+0x3990>
   1619c:	bl	113dc <__errno_location@plt>
   161a0:	mov	r2, #12
   161a4:	mov	r3, r6
   161a8:	str	r2, [r0]
   161ac:	b	1611c <close_stdout@@Base+0x39b0>
   161b0:	ldr	r3, [r5, #4]
   161b4:	ldr	r2, [r5, #24]
   161b8:	cmp	r3, #0
   161bc:	beq	161ec <close_stdout@@Base+0x3a80>
   161c0:	ldr	r1, [r3, #24]
   161c4:	add	r0, r3, #176	; 0xb0
   161c8:	cmp	r1, r0
   161cc:	ldrne	r0, [r3, #28]
   161d0:	str	r2, [r3, #28]
   161d4:	rsbne	r1, r0, r1
   161d8:	addne	r1, r2, r1
   161dc:	strne	r1, [r3, #24]
   161e0:	ldr	r3, [r3, #8]
   161e4:	cmp	r3, #0
   161e8:	bne	161c0 <close_stdout@@Base+0x3a54>
   161ec:	ldr	r3, [sp, #16]
   161f0:	b	16224 <close_stdout@@Base+0x3ab8>
   161f4:	ldr	r1, [r3, #24]
   161f8:	add	r0, r3, #176	; 0xb0
   161fc:	cmp	r1, r0
   16200:	ldrne	r0, [r3, #28]
   16204:	str	r2, [r3, #28]
   16208:	rsbne	r1, r0, r1
   1620c:	addne	r1, r2, r1
   16210:	strne	r1, [r3, #24]
   16214:	ldr	r1, [r3, #8]
   16218:	cmp	r1, #0
   1621c:	ldreq	r1, [r3, #4]
   16220:	mov	r3, r1
   16224:	ldr	r1, [r3, #48]	; 0x30
   16228:	cmp	r1, #0
   1622c:	bge	161f4 <close_stdout@@Base+0x3a88>
   16230:	ldr	r3, [r5, #48]	; 0x30
   16234:	tst	r3, #4
   16238:	bne	15fa4 <close_stdout@@Base+0x3838>
   1623c:	b	15fd4 <close_stdout@@Base+0x3868>
   16240:	mov	r0, r4
   16244:	bl	18bd4 <fts_children@@Base+0x19d0>
   16248:	subs	r4, r0, #0
   1624c:	blt	1625c <close_stdout@@Base+0x3af0>
   16250:	mov	r1, #1
   16254:	bl	17368 <fts_children@@Base+0x164>
   16258:	b	16048 <close_stdout@@Base+0x38dc>
   1625c:	tst	r6, r7
   16260:	beq	16270 <close_stdout@@Base+0x3b04>
   16264:	bl	113dc <__errno_location@plt>
   16268:	ldr	r3, [r0]
   1626c:	str	r3, [r9, #32]
   16270:	ldrh	r3, [r9, #62]	; 0x3e
   16274:	ldr	r0, [r9, #12]
   16278:	orr	r3, r3, #1
   1627c:	strh	r3, [r9, #62]	; 0x3e
   16280:	bl	11508 <closedir@plt>
   16284:	mov	r3, #0
   16288:	str	r3, [r9, #12]
   1628c:	ldr	r3, [r5, #48]	; 0x30
   16290:	tst	r3, #512	; 0x200
   16294:	beq	162a8 <close_stdout@@Base+0x3b3c>
   16298:	cmp	r4, #0
   1629c:	blt	162a8 <close_stdout@@Base+0x3b3c>
   162a0:	mov	r0, r4
   162a4:	bl	114f0 <close@plt>
   162a8:	mov	r3, #0
   162ac:	str	r3, [r9, #12]
   162b0:	str	r3, [sp, #60]	; 0x3c
   162b4:	ldr	r0, [r5, #48]	; 0x30
   162b8:	b	15c88 <close_stdout@@Base+0x351c>
   162bc:	bl	113dc <__errno_location@plt>
   162c0:	mov	r6, r0
   162c4:	mov	r0, r4
   162c8:	ldr	r4, [r6]
   162cc:	bl	11250 <free@plt>
   162d0:	ldr	r0, [sp, #16]
   162d4:	bl	15364 <close_stdout@@Base+0x2bf8>
   162d8:	ldr	r0, [r9, #12]
   162dc:	bl	11508 <closedir@plt>
   162e0:	mov	r2, #7
   162e4:	mov	r3, #0
   162e8:	strh	r2, [r9, #60]	; 0x3c
   162ec:	str	r3, [r9, #12]
   162f0:	ldr	r2, [r5, #48]	; 0x30
   162f4:	orr	r2, r2, #16384	; 0x4000
   162f8:	str	r2, [r5, #48]	; 0x30
   162fc:	str	r4, [r6]
   16300:	b	1611c <close_stdout@@Base+0x39b0>
   16304:	bl	113dc <__errno_location@plt>
   16308:	ldr	r6, [r0]
   1630c:	mov	r5, r0
   16310:	mov	r0, r4
   16314:	bl	114f0 <close@plt>
   16318:	str	r6, [r5]
   1631c:	ldr	r2, [sp, #52]	; 0x34
   16320:	mov	r4, #0
   16324:	str	r4, [r9, #12]
   16328:	cmp	r2, #3
   1632c:	beq	16430 <close_stdout@@Base+0x3cc4>
   16330:	mov	r3, #0
   16334:	b	1611c <close_stdout@@Base+0x39b0>
   16338:	ldr	r0, [r5, #32]
   1633c:	add	r1, r5, #48	; 0x30
   16340:	mov	r2, r9
   16344:	mov	r3, #0
   16348:	bl	15498 <close_stdout@@Base+0x2d2c>
   1634c:	strh	r0, [r9, #60]	; 0x3c
   16350:	ldr	r0, [r5, #48]	; 0x30
   16354:	b	15c38 <close_stdout@@Base+0x34cc>
   16358:	ldr	r2, [r9, #4]
   1635c:	mov	r0, r5
   16360:	ldr	r1, [pc, #244]	; 1645c <close_stdout@@Base+0x3cf0>
   16364:	mvn	r3, #0
   16368:	add	r1, pc, r1
   1636c:	str	r1, [sp]
   16370:	add	r1, r2, #72	; 0x48
   16374:	add	r2, r2, #168	; 0xa8
   16378:	bl	15840 <close_stdout@@Base+0x30d4>
   1637c:	adds	r0, r0, #0
   16380:	movne	r0, #1
   16384:	b	160c8 <close_stdout@@Base+0x395c>
   16388:	ldr	r0, [sp, #52]	; 0x34
   1638c:	cmp	r0, #3
   16390:	ldr	r0, [sp, #16]
   16394:	moveq	r3, #6
   16398:	strheq	r3, [r9, #60]	; 0x3c
   1639c:	bl	15364 <close_stdout@@Base+0x2bf8>
   163a0:	mov	r3, #0
   163a4:	b	1611c <close_stdout@@Base+0x39b0>
   163a8:	ldr	r3, [r5, #48]	; 0x30
   163ac:	tst	r3, #512	; 0x200
   163b0:	beq	16118 <close_stdout@@Base+0x39ac>
   163b4:	ldr	r0, [r5, #32]
   163b8:	add	r1, sp, #64	; 0x40
   163bc:	bl	111fc <fstatfs64@plt>
   163c0:	cmp	r0, #0
   163c4:	bne	163e8 <close_stdout@@Base+0x3c7c>
   163c8:	ldr	r2, [sp, #64]	; 0x40
   163cc:	movw	r3, #26985	; 0x6969
   163d0:	cmp	r2, r3
   163d4:	beq	16104 <close_stdout@@Base+0x3998>
   163d8:	movw	r3, #6548	; 0x1994
   163dc:	movt	r3, #258	; 0x102
   163e0:	cmp	r2, r3
   163e4:	beq	16104 <close_stdout@@Base+0x3998>
   163e8:	ldr	r3, [pc, #112]	; 16460 <close_stdout@@Base+0x3cf4>
   163ec:	mov	r2, r7
   163f0:	ldr	r1, [sp, #16]
   163f4:	mov	r0, r5
   163f8:	add	r3, pc, r3
   163fc:	str	r3, [r5, #44]	; 0x2c
   16400:	bl	15204 <close_stdout@@Base+0x2a98>
   16404:	mov	r3, #0
   16408:	str	r3, [r5, #44]	; 0x2c
   1640c:	str	r0, [sp, #16]
   16410:	b	16118 <close_stdout@@Base+0x39ac>
   16414:	ldr	r0, [r9, #12]
   16418:	mov	r4, #0
   1641c:	bl	11508 <closedir@plt>
   16420:	ldr	r2, [sp, #52]	; 0x34
   16424:	str	r4, [r9, #12]
   16428:	cmp	r2, #3
   1642c:	bne	16330 <close_stdout@@Base+0x3bc4>
   16430:	mov	r3, #4
   16434:	strh	r3, [r9, #60]	; 0x3c
   16438:	bl	113dc <__errno_location@plt>
   1643c:	mov	r3, r4
   16440:	ldr	r2, [r0]
   16444:	str	r2, [r9, #32]
   16448:	b	1611c <close_stdout@@Base+0x39b0>
   1644c:	bl	11298 <__stack_chk_fail@plt>
   16450:	andeq	r5, r1, r8, ror r4
   16454:	andeq	r0, r0, r4, lsr #2
   16458:	andeq	r4, r0, r8, lsr #23
   1645c:	andeq	r4, r0, r8, ror #10
   16460:			; <UNDEFINED> instruction: 0xffffedd4

00016464 <fts_open@@Base>:
   16464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16468:	mov	fp, r1
   1646c:	bic	r1, r1, #8128	; 0x1fc0
   16470:	sub	sp, sp, #20
   16474:	bics	r4, r1, #63	; 0x3f
   16478:	mov	r7, r0
   1647c:	mov	r8, r2
   16480:	bne	167b0 <fts_open@@Base+0x34c>
   16484:	and	r3, fp, #516	; 0x204
   16488:	cmp	r3, #516	; 0x204
   1648c:	beq	167d4 <fts_open@@Base+0x370>
   16490:	ands	r5, fp, #18
   16494:	beq	16798 <fts_open@@Base+0x334>
   16498:	mov	r0, #96	; 0x60
   1649c:	bl	1134c <malloc@plt>
   164a0:	subs	r5, r0, #0
   164a4:	beq	166e8 <fts_open@@Base+0x284>
   164a8:	mov	r1, r4
   164ac:	mov	r2, #96	; 0x60
   164b0:	bl	113f4 <memset@plt>
   164b4:	tst	fp, #2
   164b8:	bicne	r3, fp, #512	; 0x200
   164bc:	streq	fp, [r5, #48]	; 0x30
   164c0:	str	r8, [r5, #44]	; 0x2c
   164c4:	orrne	r3, r3, #4
   164c8:	strne	r3, [r5, #48]	; 0x30
   164cc:	mvn	r3, #99	; 0x63
   164d0:	str	r3, [r5, #32]
   164d4:	ldr	r3, [r7]
   164d8:	cmp	r3, #0
   164dc:	beq	167cc <fts_open@@Base+0x368>
   164e0:	mov	r6, r7
   164e4:	mov	r4, #0
   164e8:	mov	r0, r3
   164ec:	bl	113a0 <strlen@plt>
   164f0:	ldr	r3, [r6, #4]!
   164f4:	cmp	r4, r0
   164f8:	movcc	r4, r0
   164fc:	cmp	r3, #0
   16500:	bne	164e8 <fts_open@@Base+0x84>
   16504:	add	r2, r4, #1
   16508:	cmp	r2, #4096	; 0x1000
   1650c:	movcc	r2, #4096	; 0x1000
   16510:	add	r0, r5, #24
   16514:	add	r1, r5, #36	; 0x24
   16518:	bl	1560c <close_stdout@@Base+0x2ea0>
   1651c:	subs	sl, r0, #0
   16520:	beq	1672c <fts_open@@Base+0x2c8>
   16524:	ldr	r1, [r7]
   16528:	cmp	r1, #0
   1652c:	beq	16744 <fts_open@@Base+0x2e0>
   16530:	ldr	r1, [pc, #696]	; 167f0 <fts_open@@Base+0x38c>
   16534:	mov	r0, r5
   16538:	mov	r2, #0
   1653c:	add	r1, pc, r1
   16540:	bl	152f4 <close_stdout@@Base+0x2b88>
   16544:	subs	r9, r0, #0
   16548:	beq	16724 <fts_open@@Base+0x2c0>
   1654c:	mvn	r3, #0
   16550:	str	r3, [r9, #48]	; 0x30
   16554:	ldr	r1, [r7]
   16558:	cmp	r8, #0
   1655c:	ldrne	sl, [r5, #48]	; 0x30
   16560:	ubfxne	sl, sl, #10, #1
   16564:	cmp	r1, #0
   16568:	beq	167e8 <fts_open@@Base+0x384>
   1656c:	mov	r2, #0
   16570:	and	fp, fp, #4096	; 0x1000
   16574:	add	r3, r5, #48	; 0x30
   16578:	str	fp, [sp, #4]
   1657c:	str	r2, [sp, #8]
   16580:	mov	fp, sl
   16584:	str	r3, [sp, #12]
   16588:	mov	r6, r2
   1658c:	mov	r4, r2
   16590:	mov	sl, r1
   16594:	b	165cc <fts_open@@Base+0x168>
   16598:	cmp	r8, #0
   1659c:	mov	r3, #11
   165a0:	mov	r2, #2
   165a4:	strh	r3, [sl, #60]	; 0x3c
   165a8:	mov	r3, #0
   165ac:	strd	r2, [sl, #120]	; 0x78
   165b0:	beq	16654 <fts_open@@Base+0x1f0>
   165b4:	str	r4, [sl, #8]
   165b8:	mov	r4, sl
   165bc:	ldr	sl, [r7, #4]!
   165c0:	add	r6, r6, #1
   165c4:	cmp	sl, #0
   165c8:	beq	16680 <fts_open@@Base+0x21c>
   165cc:	mov	r0, sl
   165d0:	bl	113a0 <strlen@plt>
   165d4:	ldr	r3, [sp, #4]
   165d8:	cmp	r3, #0
   165dc:	mov	r2, r0
   165e0:	bne	165fc <fts_open@@Base+0x198>
   165e4:	cmp	r0, #2
   165e8:	bls	165fc <fts_open@@Base+0x198>
   165ec:	add	r3, sl, r0
   165f0:	ldrb	r0, [r3, #-1]
   165f4:	cmp	r0, #47	; 0x2f
   165f8:	beq	166f4 <fts_open@@Base+0x290>
   165fc:	mov	r1, sl
   16600:	mov	r0, r5
   16604:	bl	152f4 <close_stdout@@Base+0x2b88>
   16608:	subs	sl, r0, #0
   1660c:	beq	16714 <fts_open@@Base+0x2b0>
   16610:	cmp	r4, #0
   16614:	moveq	r3, #0
   16618:	andne	r3, fp, #1
   1661c:	mov	r2, #0
   16620:	cmp	r3, r2
   16624:	str	r2, [sl, #48]	; 0x30
   16628:	str	r9, [sl, #4]
   1662c:	add	r2, sl, #176	; 0xb0
   16630:	str	r2, [sl, #24]
   16634:	bne	16598 <fts_open@@Base+0x134>
   16638:	ldr	r0, [r5, #32]
   1663c:	mov	r2, sl
   16640:	ldr	r1, [sp, #12]
   16644:	bl	15498 <close_stdout@@Base+0x2d2c>
   16648:	cmp	r8, #0
   1664c:	strh	r0, [sl, #60]	; 0x3c
   16650:	bne	165b4 <fts_open@@Base+0x150>
   16654:	cmp	r4, #0
   16658:	str	r8, [sl, #8]
   1665c:	streq	sl, [sp, #8]
   16660:	add	r6, r6, #1
   16664:	ldrne	r3, [sp, #8]
   16668:	moveq	r4, sl
   1666c:	strne	sl, [sp, #8]
   16670:	strne	sl, [r3, #8]
   16674:	ldr	sl, [r7, #4]!
   16678:	cmp	sl, #0
   1667c:	bne	165cc <fts_open@@Base+0x168>
   16680:	cmp	r8, #0
   16684:	cmpne	r6, #1
   16688:	bhi	16780 <fts_open@@Base+0x31c>
   1668c:	ldr	r1, [pc, #352]	; 167f4 <fts_open@@Base+0x390>
   16690:	mov	r0, r5
   16694:	mov	r2, #0
   16698:	add	r1, pc, r1
   1669c:	bl	152f4 <close_stdout@@Base+0x2b88>
   166a0:	cmp	r0, #0
   166a4:	str	r0, [r5]
   166a8:	beq	16714 <fts_open@@Base+0x2b0>
   166ac:	str	r4, [r0, #8]
   166b0:	mov	r2, #9
   166b4:	ldr	r3, [r5]
   166b8:	add	r1, r5, #56	; 0x38
   166bc:	strh	r2, [r3, #60]	; 0x3c
   166c0:	ldr	r0, [r5, #48]	; 0x30
   166c4:	bl	1568c <close_stdout@@Base+0x2f20>
   166c8:	cmp	r0, #0
   166cc:	beq	16714 <fts_open@@Base+0x2b0>
   166d0:	ldr	r1, [r5, #48]	; 0x30
   166d4:	tst	r1, #516	; 0x204
   166d8:	beq	1674c <fts_open@@Base+0x2e8>
   166dc:	add	r0, r5, #60	; 0x3c
   166e0:	mvn	r1, #0
   166e4:	bl	18688 <fts_children@@Base+0x1484>
   166e8:	mov	r0, r5
   166ec:	add	sp, sp, #20
   166f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166f4:	ldrb	r1, [r3, #-2]
   166f8:	sub	r3, r3, #1
   166fc:	cmp	r1, #47	; 0x2f
   16700:	bne	165fc <fts_open@@Base+0x198>
   16704:	sub	r2, r2, #1
   16708:	cmp	r2, #1
   1670c:	bne	166f4 <fts_open@@Base+0x290>
   16710:	b	165fc <fts_open@@Base+0x198>
   16714:	mov	r0, r4
   16718:	bl	15364 <close_stdout@@Base+0x2bf8>
   1671c:	mov	r0, r9
   16720:	bl	11250 <free@plt>
   16724:	ldr	r0, [r5, #24]
   16728:	bl	11250 <free@plt>
   1672c:	mov	r0, r5
   16730:	mov	r5, #0
   16734:	bl	11250 <free@plt>
   16738:	mov	r0, r5
   1673c:	add	sp, sp, #20
   16740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16744:	mov	r9, r1
   16748:	b	16558 <fts_open@@Base+0xf4>
   1674c:	ldr	r2, [pc, #164]	; 167f8 <fts_open@@Base+0x394>
   16750:	ldr	r0, [r5, #32]
   16754:	add	r2, pc, r2
   16758:	bl	15724 <close_stdout@@Base+0x2fb8>
   1675c:	mvn	r1, #0
   16760:	cmp	r0, #0
   16764:	str	r0, [r5, #28]
   16768:	add	r0, r5, #60	; 0x3c
   1676c:	ldrlt	r3, [r5, #48]	; 0x30
   16770:	orrlt	r3, r3, #4
   16774:	strlt	r3, [r5, #48]	; 0x30
   16778:	bl	18688 <fts_children@@Base+0x1484>
   1677c:	b	166e8 <fts_open@@Base+0x284>
   16780:	mov	r1, r4
   16784:	mov	r2, r6
   16788:	mov	r0, r5
   1678c:	bl	15204 <close_stdout@@Base+0x2a98>
   16790:	mov	r4, r0
   16794:	b	1668c <fts_open@@Base+0x228>
   16798:	bl	113dc <__errno_location@plt>
   1679c:	mov	r3, #22
   167a0:	str	r3, [r0]
   167a4:	mov	r0, r5
   167a8:	add	sp, sp, #20
   167ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167b0:	bl	113dc <__errno_location@plt>
   167b4:	mov	r5, #0
   167b8:	mov	r3, #22
   167bc:	str	r3, [r0]
   167c0:	mov	r0, r5
   167c4:	add	sp, sp, #20
   167c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167cc:	mov	r2, #4096	; 0x1000
   167d0:	b	16510 <fts_open@@Base+0xac>
   167d4:	bl	113dc <__errno_location@plt>
   167d8:	mov	r5, r4
   167dc:	mov	r3, #22
   167e0:	str	r3, [r0]
   167e4:	b	166e8 <fts_open@@Base+0x284>
   167e8:	mov	r4, r1
   167ec:	b	1668c <fts_open@@Base+0x228>
   167f0:	andeq	r3, r0, ip, lsr r7
   167f4:	andeq	r3, r0, r0, ror #11
   167f8:	andeq	r4, r0, r0, lsl #3

000167fc <fts_close@@Base>:
   167fc:	push	{r4, r5, r6, lr}
   16800:	mov	r5, r0
   16804:	ldr	r3, [r0]
   16808:	cmp	r3, #0
   1680c:	beq	16848 <fts_close@@Base+0x4c>
   16810:	ldr	r2, [r3, #48]	; 0x30
   16814:	cmp	r2, #0
   16818:	blt	16934 <fts_close@@Base+0x138>
   1681c:	ldr	r4, [r3, #8]
   16820:	mov	r0, r3
   16824:	cmp	r4, #0
   16828:	ldreq	r4, [r3, #4]
   1682c:	bl	11250 <free@plt>
   16830:	ldr	r2, [r4, #48]	; 0x30
   16834:	mov	r3, r4
   16838:	cmp	r2, #0
   1683c:	bge	1681c <fts_close@@Base+0x20>
   16840:	mov	r0, r4
   16844:	bl	11250 <free@plt>
   16848:	ldr	r0, [r5, #4]
   1684c:	cmp	r0, #0
   16850:	beq	16858 <fts_close@@Base+0x5c>
   16854:	bl	15364 <close_stdout@@Base+0x2bf8>
   16858:	ldr	r0, [r5, #8]
   1685c:	bl	11250 <free@plt>
   16860:	ldr	r0, [r5, #24]
   16864:	bl	11250 <free@plt>
   16868:	ldr	r3, [r5, #48]	; 0x30
   1686c:	tst	r3, #512	; 0x200
   16870:	beq	168e8 <fts_close@@Base+0xec>
   16874:	ldr	r0, [r5, #32]
   16878:	cmp	r0, #0
   1687c:	blt	1688c <fts_close@@Base+0x90>
   16880:	bl	114f0 <close@plt>
   16884:	cmp	r0, #0
   16888:	bne	16928 <fts_close@@Base+0x12c>
   1688c:	mov	r4, #0
   16890:	add	r0, r5, #60	; 0x3c
   16894:	bl	1539c <close_stdout@@Base+0x2c30>
   16898:	ldr	r0, [r5, #52]	; 0x34
   1689c:	cmp	r0, #0
   168a0:	beq	168a8 <fts_close@@Base+0xac>
   168a4:	bl	18090 <fts_children@@Base+0xe8c>
   168a8:	ldr	r2, [r5, #48]	; 0x30
   168ac:	movw	r3, #258	; 0x102
   168b0:	ldr	r0, [r5, #56]	; 0x38
   168b4:	and	r3, r2, r3
   168b8:	cmp	r3, #0
   168bc:	beq	16920 <fts_close@@Base+0x124>
   168c0:	cmp	r0, #0
   168c4:	beq	168cc <fts_close@@Base+0xd0>
   168c8:	bl	18090 <fts_children@@Base+0xe8c>
   168cc:	mov	r0, r5
   168d0:	bl	11250 <free@plt>
   168d4:	cmp	r4, #0
   168d8:	moveq	r3, r4
   168dc:	bne	16964 <fts_close@@Base+0x168>
   168e0:	mov	r0, r3
   168e4:	pop	{r4, r5, r6, pc}
   168e8:	tst	r3, #4
   168ec:	bne	1688c <fts_close@@Base+0x90>
   168f0:	ldr	r0, [r5, #28]
   168f4:	bl	1149c <fchdir@plt>
   168f8:	cmp	r0, #0
   168fc:	bne	1693c <fts_close@@Base+0x140>
   16900:	ldr	r0, [r5, #28]
   16904:	bl	114f0 <close@plt>
   16908:	cmp	r0, #0
   1690c:	beq	1688c <fts_close@@Base+0x90>
   16910:	bl	113dc <__errno_location@plt>
   16914:	mov	r6, r0
   16918:	ldr	r4, [r6]
   1691c:	b	16890 <fts_close@@Base+0x94>
   16920:	bl	11250 <free@plt>
   16924:	b	168cc <fts_close@@Base+0xd0>
   16928:	bl	113dc <__errno_location@plt>
   1692c:	ldr	r4, [r0]
   16930:	b	16890 <fts_close@@Base+0x94>
   16934:	mov	r4, r3
   16938:	b	16840 <fts_close@@Base+0x44>
   1693c:	bl	113dc <__errno_location@plt>
   16940:	mov	r6, r0
   16944:	ldr	r0, [r5, #28]
   16948:	ldr	r4, [r6]
   1694c:	bl	114f0 <close@plt>
   16950:	cmp	r0, #0
   16954:	beq	16890 <fts_close@@Base+0x94>
   16958:	cmp	r4, #0
   1695c:	bne	16890 <fts_close@@Base+0x94>
   16960:	b	16918 <fts_close@@Base+0x11c>
   16964:	bl	113dc <__errno_location@plt>
   16968:	mvn	r3, #0
   1696c:	str	r4, [r0]
   16970:	b	168e0 <fts_close@@Base+0xe4>

00016974 <fts_read@@Base>:
   16974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16978:	sub	sp, sp, #124	; 0x7c
   1697c:	ldr	r9, [pc, #2100]	; 171b8 <fts_read@@Base+0x844>
   16980:	mov	r8, r0
   16984:	ldr	r3, [pc, #2096]	; 171bc <fts_read@@Base+0x848>
   16988:	add	r9, pc, r9
   1698c:	ldr	fp, [r0]
   16990:	ldr	sl, [r9, r3]
   16994:	cmp	fp, #0
   16998:	ldr	r3, [sl]
   1699c:	str	r3, [sp, #116]	; 0x74
   169a0:	beq	16b44 <fts_read@@Base+0x1d0>
   169a4:	ldr	r3, [r0, #48]	; 0x30
   169a8:	ands	r3, r3, #16384	; 0x4000
   169ac:	bne	16b44 <fts_read@@Base+0x1d0>
   169b0:	ldrh	r2, [fp, #64]	; 0x40
   169b4:	mov	r1, #3
   169b8:	strh	r1, [fp, #64]	; 0x40
   169bc:	cmp	r2, #1
   169c0:	beq	16d5c <fts_read@@Base+0x3e8>
   169c4:	cmp	r2, #2
   169c8:	ldrh	r3, [fp, #60]	; 0x3c
   169cc:	beq	16ac0 <fts_read@@Base+0x14c>
   169d0:	cmp	r3, #1
   169d4:	bne	16a04 <fts_read@@Base+0x90>
   169d8:	b	16b38 <fts_read@@Base+0x1c4>
   169dc:	str	r6, [r8]
   169e0:	mov	r0, fp
   169e4:	bl	11250 <free@plt>
   169e8:	ldr	r4, [r6, #48]	; 0x30
   169ec:	cmp	r4, #0
   169f0:	beq	16b64 <fts_read@@Base+0x1f0>
   169f4:	ldrh	r3, [r6, #64]	; 0x40
   169f8:	cmp	r3, #4
   169fc:	bne	16c60 <fts_read@@Base+0x2ec>
   16a00:	mov	fp, r6
   16a04:	ldr	r6, [fp, #8]
   16a08:	cmp	r6, #0
   16a0c:	bne	169dc <fts_read@@Base+0x68>
   16a10:	ldr	r4, [fp, #4]
   16a14:	ldr	r3, [r4, #12]
   16a18:	cmp	r3, #0
   16a1c:	bne	16f64 <fts_read@@Base+0x5f0>
   16a20:	str	r4, [r8]
   16a24:	mov	r0, fp
   16a28:	bl	11250 <free@plt>
   16a2c:	ldr	r3, [r4, #48]	; 0x30
   16a30:	cmn	r3, #1
   16a34:	beq	16e20 <fts_read@@Base+0x4ac>
   16a38:	ldrh	r3, [r4, #60]	; 0x3c
   16a3c:	cmp	r3, #11
   16a40:	beq	16cd4 <fts_read@@Base+0x360>
   16a44:	ldr	r3, [r4, #40]	; 0x28
   16a48:	mov	r1, #0
   16a4c:	ldr	r2, [r8, #24]
   16a50:	strb	r1, [r2, r3]
   16a54:	ldr	r3, [r4, #48]	; 0x30
   16a58:	cmp	r3, r1
   16a5c:	beq	16dc8 <fts_read@@Base+0x454>
   16a60:	ldrh	r3, [r4, #62]	; 0x3e
   16a64:	tst	r3, #2
   16a68:	beq	16d78 <fts_read@@Base+0x404>
   16a6c:	ldr	r3, [r8, #48]	; 0x30
   16a70:	tst	r3, #4
   16a74:	beq	16ddc <fts_read@@Base+0x468>
   16a78:	ldr	r0, [r4, #36]	; 0x24
   16a7c:	bl	114f0 <close@plt>
   16a80:	ldr	r3, [r4, #32]
   16a84:	cmp	r3, #0
   16a88:	movne	r3, #7
   16a8c:	strhne	r3, [r4, #60]	; 0x3c
   16a90:	bne	16aac <fts_read@@Base+0x138>
   16a94:	mov	r3, #6
   16a98:	add	r1, r8, #56	; 0x38
   16a9c:	strh	r3, [r4, #60]	; 0x3c
   16aa0:	mov	r2, r4
   16aa4:	ldr	r0, [r8, #48]	; 0x30
   16aa8:	bl	15a88 <close_stdout@@Base+0x331c>
   16aac:	ldr	r3, [r8, #48]	; 0x30
   16ab0:	tst	r3, #16384	; 0x4000
   16ab4:	bne	16b44 <fts_read@@Base+0x1d0>
   16ab8:	mov	r6, r4
   16abc:	b	16b48 <fts_read@@Base+0x1d4>
   16ac0:	sub	r2, r3, #12
   16ac4:	cmp	r2, #1
   16ac8:	bls	16df8 <fts_read@@Base+0x484>
   16acc:	cmp	r3, #1
   16ad0:	bne	16a04 <fts_read@@Base+0x90>
   16ad4:	ldr	r3, [r8, #48]	; 0x30
   16ad8:	tst	r3, #64	; 0x40
   16adc:	beq	16cd8 <fts_read@@Base+0x364>
   16ae0:	ldrd	r6, [fp, #72]	; 0x48
   16ae4:	ldrd	r4, [r8, #16]
   16ae8:	cmp	r7, r5
   16aec:	cmpeq	r6, r4
   16af0:	beq	16cd8 <fts_read@@Base+0x364>
   16af4:	ldrh	r3, [fp, #62]	; 0x3e
   16af8:	tst	r3, #2
   16afc:	bne	16f58 <fts_read@@Base+0x5e4>
   16b00:	ldr	r0, [r8, #4]
   16b04:	cmp	r0, #0
   16b08:	beq	16b18 <fts_read@@Base+0x1a4>
   16b0c:	bl	15364 <close_stdout@@Base+0x2bf8>
   16b10:	mov	r3, #0
   16b14:	str	r3, [r8, #4]
   16b18:	mov	r3, #6
   16b1c:	add	r1, r8, #56	; 0x38
   16b20:	strh	r3, [fp, #60]	; 0x3c
   16b24:	mov	r2, fp
   16b28:	ldr	r0, [r8, #48]	; 0x30
   16b2c:	mov	r6, fp
   16b30:	bl	15a88 <close_stdout@@Base+0x331c>
   16b34:	b	16b48 <fts_read@@Base+0x1d4>
   16b38:	cmp	r2, #4
   16b3c:	bne	16ad4 <fts_read@@Base+0x160>
   16b40:	b	16af4 <fts_read@@Base+0x180>
   16b44:	mov	r6, #0
   16b48:	ldr	r2, [sp, #116]	; 0x74
   16b4c:	mov	r0, r6
   16b50:	ldr	r3, [sl]
   16b54:	cmp	r2, r3
   16b58:	bne	170cc <fts_read@@Base+0x758>
   16b5c:	add	sp, sp, #124	; 0x7c
   16b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b64:	mov	r0, r8
   16b68:	bl	15448 <close_stdout@@Base+0x2cdc>
   16b6c:	cmp	r0, #0
   16b70:	bne	16ec8 <fts_read@@Base+0x554>
   16b74:	ldr	r2, [r8, #48]	; 0x30
   16b78:	movw	r3, #258	; 0x102
   16b7c:	ldr	r0, [r8, #56]	; 0x38
   16b80:	and	r3, r2, r3
   16b84:	cmp	r3, #0
   16b88:	beq	16eb0 <fts_read@@Base+0x53c>
   16b8c:	cmp	r0, #0
   16b90:	beq	16b98 <fts_read@@Base+0x224>
   16b94:	bl	18090 <fts_children@@Base+0xe8c>
   16b98:	ldr	r3, [r6, #52]	; 0x34
   16b9c:	add	r4, r6, #176	; 0xb0
   16ba0:	add	r2, r3, #1
   16ba4:	mov	r1, r4
   16ba8:	str	r3, [r6, #40]	; 0x28
   16bac:	ldr	r0, [r8, #24]
   16bb0:	bl	11244 <memmove@plt>
   16bb4:	mov	r0, r4
   16bb8:	mov	r1, #47	; 0x2f
   16bbc:	bl	11460 <strrchr@plt>
   16bc0:	cmp	r0, #0
   16bc4:	beq	16bf4 <fts_read@@Base+0x280>
   16bc8:	cmp	r4, r0
   16bcc:	beq	16eb8 <fts_read@@Base+0x544>
   16bd0:	add	r7, r0, #1
   16bd4:	mov	r0, r7
   16bd8:	bl	113a0 <strlen@plt>
   16bdc:	mov	r1, r7
   16be0:	mov	r5, r0
   16be4:	mov	r0, r4
   16be8:	add	r2, r5, #1
   16bec:	bl	11244 <memmove@plt>
   16bf0:	str	r5, [r6, #52]	; 0x34
   16bf4:	ldr	r3, [r8, #24]
   16bf8:	add	r1, r8, #56	; 0x38
   16bfc:	str	r3, [r6, #28]
   16c00:	str	r3, [r6, #24]
   16c04:	ldr	r0, [r8, #48]	; 0x30
   16c08:	bl	1568c <close_stdout@@Base+0x2f20>
   16c0c:	str	r6, [r8]
   16c10:	ldrh	r0, [r6, #60]	; 0x3c
   16c14:	cmp	r0, #11
   16c18:	beq	16cb8 <fts_read@@Base+0x344>
   16c1c:	cmp	r0, #1
   16c20:	bne	16b48 <fts_read@@Base+0x1d4>
   16c24:	ldr	r3, [r6, #48]	; 0x30
   16c28:	add	r1, r8, #56	; 0x38
   16c2c:	ldr	r0, [r8, #48]	; 0x30
   16c30:	mov	r2, r6
   16c34:	cmp	r3, #0
   16c38:	ldrdeq	r4, [r6, #72]	; 0x48
   16c3c:	strdeq	r4, [r8, #16]
   16c40:	bl	1578c <close_stdout@@Base+0x3020>
   16c44:	subs	r4, r0, #0
   16c48:	bne	16b48 <fts_read@@Base+0x1d4>
   16c4c:	bl	113dc <__errno_location@plt>
   16c50:	mov	r6, r4
   16c54:	mov	r3, #12
   16c58:	str	r3, [r0]
   16c5c:	b	16b48 <fts_read@@Base+0x1d4>
   16c60:	cmp	r3, #2
   16c64:	beq	16f94 <fts_read@@Base+0x620>
   16c68:	ldr	r0, [r6, #4]
   16c6c:	mov	ip, #47	; 0x2f
   16c70:	ldr	r2, [r8, #24]
   16c74:	add	r1, r6, #176	; 0xb0
   16c78:	ldr	r3, [r0, #40]	; 0x28
   16c7c:	ldr	lr, [r0, #28]
   16c80:	sub	r0, r3, #1
   16c84:	ldrb	lr, [lr, r0]
   16c88:	cmp	lr, ip
   16c8c:	moveq	r3, r0
   16c90:	add	r0, r2, r3
   16c94:	strb	ip, [r2, r3]
   16c98:	add	r0, r0, #1
   16c9c:	ldr	r2, [r6, #52]	; 0x34
   16ca0:	add	r2, r2, #1
   16ca4:	bl	11244 <memmove@plt>
   16ca8:	str	r6, [r8]
   16cac:	ldrh	r0, [r6, #60]	; 0x3c
   16cb0:	cmp	r0, #11
   16cb4:	bne	16c1c <fts_read@@Base+0x2a8>
   16cb8:	ldrd	r4, [r6, #120]	; 0x78
   16cbc:	cmp	r5, #0
   16cc0:	cmpeq	r4, #2
   16cc4:	beq	16edc <fts_read@@Base+0x568>
   16cc8:	cmp	r5, #0
   16ccc:	cmpeq	r4, #1
   16cd0:	beq	16b48 <fts_read@@Base+0x1d4>
   16cd4:	bl	114e4 <abort@plt>
   16cd8:	ldr	r0, [r8, #4]
   16cdc:	cmp	r0, #0
   16ce0:	beq	16e54 <fts_read@@Base+0x4e0>
   16ce4:	tst	r3, #8192	; 0x2000
   16ce8:	bne	16e40 <fts_read@@Base+0x4cc>
   16cec:	ldr	ip, [fp, #24]
   16cf0:	mov	r0, r8
   16cf4:	add	r1, fp, #72	; 0x48
   16cf8:	add	r2, fp, #168	; 0xa8
   16cfc:	mvn	r3, #0
   16d00:	str	ip, [sp]
   16d04:	bl	15840 <close_stdout@@Base+0x30d4>
   16d08:	cmp	r0, #0
   16d0c:	beq	16d4c <fts_read@@Base+0x3d8>
   16d10:	bl	113dc <__errno_location@plt>
   16d14:	ldrh	r3, [fp, #62]	; 0x3e
   16d18:	orr	r3, r3, #1
   16d1c:	ldr	r2, [r0]
   16d20:	strh	r3, [fp, #62]	; 0x3e
   16d24:	str	r2, [fp, #32]
   16d28:	ldr	r6, [r8, #4]
   16d2c:	cmp	r6, #0
   16d30:	beq	16d50 <fts_read@@Base+0x3dc>
   16d34:	ldr	r3, [r6, #4]
   16d38:	ldr	r3, [r3, #24]
   16d3c:	str	r3, [r6, #24]
   16d40:	ldr	r6, [r6, #8]
   16d44:	cmp	r6, #0
   16d48:	bne	16d34 <fts_read@@Base+0x3c0>
   16d4c:	ldr	r6, [r8, #4]
   16d50:	mov	r3, #0
   16d54:	str	r3, [r8, #4]
   16d58:	b	16c68 <fts_read@@Base+0x2f4>
   16d5c:	ldr	r0, [r0, #32]
   16d60:	add	r1, r8, #48	; 0x30
   16d64:	mov	r2, fp
   16d68:	mov	r6, fp
   16d6c:	bl	15498 <close_stdout@@Base+0x2d2c>
   16d70:	strh	r0, [fp, #60]	; 0x3c
   16d74:	b	16b48 <fts_read@@Base+0x1d4>
   16d78:	tst	r3, #1
   16d7c:	bne	16a80 <fts_read@@Base+0x10c>
   16d80:	ldr	r2, [r4, #4]
   16d84:	mov	r0, r8
   16d88:	ldr	r1, [pc, #1072]	; 171c0 <fts_read@@Base+0x84c>
   16d8c:	mvn	r3, #0
   16d90:	add	r1, pc, r1
   16d94:	str	r1, [sp]
   16d98:	add	r1, r2, #72	; 0x48
   16d9c:	add	r2, r2, #168	; 0xa8
   16da0:	bl	15840 <close_stdout@@Base+0x30d4>
   16da4:	cmp	r0, #0
   16da8:	beq	16a80 <fts_read@@Base+0x10c>
   16dac:	bl	113dc <__errno_location@plt>
   16db0:	ldr	r3, [r0]
   16db4:	str	r3, [r4, #32]
   16db8:	ldr	r3, [r8, #48]	; 0x30
   16dbc:	orr	r3, r3, #16384	; 0x4000
   16dc0:	str	r3, [r8, #48]	; 0x30
   16dc4:	b	16a80 <fts_read@@Base+0x10c>
   16dc8:	mov	r0, r8
   16dcc:	bl	15448 <close_stdout@@Base+0x2cdc>
   16dd0:	cmp	r0, #0
   16dd4:	beq	16a80 <fts_read@@Base+0x10c>
   16dd8:	b	16dac <fts_read@@Base+0x438>
   16ddc:	tst	r3, #512	; 0x200
   16de0:	beq	16fc0 <fts_read@@Base+0x64c>
   16de4:	mov	r0, r8
   16de8:	ldr	r1, [r4, #36]	; 0x24
   16dec:	mov	r2, #1
   16df0:	bl	153d4 <close_stdout@@Base+0x2c68>
   16df4:	b	16a78 <fts_read@@Base+0x104>
   16df8:	ldr	r0, [r0, #32]
   16dfc:	add	r1, r8, #48	; 0x30
   16e00:	mov	r2, fp
   16e04:	mov	r3, #1
   16e08:	bl	15498 <close_stdout@@Base+0x2d2c>
   16e0c:	cmp	r0, #1
   16e10:	strh	r0, [fp, #60]	; 0x3c
   16e14:	beq	16ffc <fts_read@@Base+0x688>
   16e18:	mov	r6, fp
   16e1c:	b	16c0c <fts_read@@Base+0x298>
   16e20:	mov	r0, r4
   16e24:	bl	11250 <free@plt>
   16e28:	bl	113dc <__errno_location@plt>
   16e2c:	mov	r3, #0
   16e30:	mov	r6, r3
   16e34:	str	r3, [r0]
   16e38:	str	r3, [r8]
   16e3c:	b	16b48 <fts_read@@Base+0x1d4>
   16e40:	bic	r3, r3, #8192	; 0x2000
   16e44:	str	r3, [r8, #48]	; 0x30
   16e48:	bl	15364 <close_stdout@@Base+0x2bf8>
   16e4c:	mov	r3, #0
   16e50:	str	r3, [r8, #4]
   16e54:	mov	r0, r8
   16e58:	mov	r1, #3
   16e5c:	bl	15b78 <close_stdout@@Base+0x340c>
   16e60:	cmp	r0, #0
   16e64:	str	r0, [r8, #4]
   16e68:	movne	r6, r0
   16e6c:	bne	16d50 <fts_read@@Base+0x3dc>
   16e70:	ldr	r0, [r8, #48]	; 0x30
   16e74:	tst	r0, #16384	; 0x4000
   16e78:	bne	16b44 <fts_read@@Base+0x1d0>
   16e7c:	ldr	r3, [fp, #32]
   16e80:	cmp	r3, #0
   16e84:	beq	16e9c <fts_read@@Base+0x528>
   16e88:	ldrh	r3, [fp, #60]	; 0x3c
   16e8c:	cmp	r3, #4
   16e90:	movne	r3, #7
   16e94:	strhne	r3, [fp, #60]	; 0x3c
   16e98:	ldrne	r0, [r8, #48]	; 0x30
   16e9c:	add	r1, r8, #56	; 0x38
   16ea0:	mov	r2, fp
   16ea4:	bl	15a88 <close_stdout@@Base+0x331c>
   16ea8:	mov	r6, fp
   16eac:	b	16b48 <fts_read@@Base+0x1d4>
   16eb0:	bl	11250 <free@plt>
   16eb4:	b	16b98 <fts_read@@Base+0x224>
   16eb8:	ldrb	r3, [r6, #177]	; 0xb1
   16ebc:	cmp	r3, #0
   16ec0:	bne	16bd0 <fts_read@@Base+0x25c>
   16ec4:	b	16bf4 <fts_read@@Base+0x280>
   16ec8:	ldr	r3, [r8, #48]	; 0x30
   16ecc:	mov	r6, r4
   16ed0:	orr	r3, r3, #16384	; 0x4000
   16ed4:	str	r3, [r8, #48]	; 0x30
   16ed8:	b	16b48 <fts_read@@Base+0x1d4>
   16edc:	ldr	r3, [r6, #48]	; 0x30
   16ee0:	ldr	r4, [r6, #4]
   16ee4:	cmp	r3, #0
   16ee8:	ble	16f08 <fts_read@@Base+0x594>
   16eec:	ldr	r3, [r4, #56]	; 0x38
   16ef0:	cmp	r3, #0
   16ef4:	bne	16f08 <fts_read@@Base+0x594>
   16ef8:	ldr	r3, [r8, #48]	; 0x30
   16efc:	and	r3, r3, #24
   16f00:	cmp	r3, #24
   16f04:	beq	17084 <fts_read@@Base+0x710>
   16f08:	mov	r3, #0
   16f0c:	ldr	r0, [r8, #32]
   16f10:	add	r1, r8, #48	; 0x30
   16f14:	mov	r2, r6
   16f18:	bl	15498 <close_stdout@@Base+0x2d2c>
   16f1c:	ldr	r3, [r6, #88]	; 0x58
   16f20:	and	r3, r3, #61440	; 0xf000
   16f24:	cmp	r3, #16384	; 0x4000
   16f28:	strh	r0, [r6, #60]	; 0x3c
   16f2c:	bne	16c1c <fts_read@@Base+0x2a8>
   16f30:	ldr	r3, [r6, #48]	; 0x30
   16f34:	cmp	r3, #0
   16f38:	beq	16c1c <fts_read@@Base+0x2a8>
   16f3c:	ldr	r3, [r4, #56]	; 0x38
   16f40:	cmp	r3, #0
   16f44:	beq	16c1c <fts_read@@Base+0x2a8>
   16f48:	sub	r3, r3, #1
   16f4c:	str	r3, [r4, #56]	; 0x38
   16f50:	ldrh	r0, [r6, #60]	; 0x3c
   16f54:	b	16c1c <fts_read@@Base+0x2a8>
   16f58:	ldr	r0, [fp, #36]	; 0x24
   16f5c:	bl	114f0 <close@plt>
   16f60:	b	16b00 <fts_read@@Base+0x18c>
   16f64:	str	r4, [r8]
   16f68:	mov	r0, r8
   16f6c:	ldr	r3, [r4, #40]	; 0x28
   16f70:	mov	r1, #3
   16f74:	ldr	r2, [r8, #24]
   16f78:	strb	r6, [r2, r3]
   16f7c:	bl	15b78 <close_stdout@@Base+0x340c>
   16f80:	subs	r6, r0, #0
   16f84:	beq	17038 <fts_read@@Base+0x6c4>
   16f88:	mov	r0, fp
   16f8c:	bl	11250 <free@plt>
   16f90:	b	16c68 <fts_read@@Base+0x2f4>
   16f94:	ldr	r0, [r8, #32]
   16f98:	add	r1, r8, #48	; 0x30
   16f9c:	mov	r2, r6
   16fa0:	mov	r3, #1
   16fa4:	bl	15498 <close_stdout@@Base+0x2d2c>
   16fa8:	cmp	r0, #1
   16fac:	strh	r0, [r6, #60]	; 0x3c
   16fb0:	beq	1704c <fts_read@@Base+0x6d8>
   16fb4:	mov	r3, #3
   16fb8:	strh	r3, [r6, #64]	; 0x40
   16fbc:	b	16c68 <fts_read@@Base+0x2f4>
   16fc0:	ldr	r0, [r4, #36]	; 0x24
   16fc4:	bl	1149c <fchdir@plt>
   16fc8:	cmp	r0, #0
   16fcc:	beq	16a78 <fts_read@@Base+0x104>
   16fd0:	bl	113dc <__errno_location@plt>
   16fd4:	ldr	r5, [r0]
   16fd8:	mov	r6, r0
   16fdc:	ldr	r0, [r4, #36]	; 0x24
   16fe0:	bl	114f0 <close@plt>
   16fe4:	str	r5, [r6]
   16fe8:	str	r5, [r4, #32]
   16fec:	ldr	r3, [r8, #48]	; 0x30
   16ff0:	orr	r3, r3, #16384	; 0x4000
   16ff4:	str	r3, [r8, #48]	; 0x30
   16ff8:	b	16a78 <fts_read@@Base+0x104>
   16ffc:	ldr	r1, [r8, #48]	; 0x30
   17000:	tst	r1, #4
   17004:	bne	16e18 <fts_read@@Base+0x4a4>
   17008:	ldr	r2, [pc, #436]	; 171c4 <fts_read@@Base+0x850>
   1700c:	ldr	r0, [r8, #32]
   17010:	add	r2, pc, r2
   17014:	bl	15724 <close_stdout@@Base+0x2fb8>
   17018:	cmp	r0, #0
   1701c:	str	r0, [fp, #36]	; 0x24
   17020:	blt	170d0 <fts_read@@Base+0x75c>
   17024:	ldrh	r3, [fp, #62]	; 0x3e
   17028:	mov	r6, fp
   1702c:	orr	r3, r3, #2
   17030:	strh	r3, [fp, #62]	; 0x3e
   17034:	b	16c0c <fts_read@@Base+0x298>
   17038:	ldr	r3, [r8, #48]	; 0x30
   1703c:	tst	r3, #16384	; 0x4000
   17040:	bne	16b44 <fts_read@@Base+0x1d0>
   17044:	ldr	r4, [fp, #4]
   17048:	b	16a20 <fts_read@@Base+0xac>
   1704c:	ldr	r1, [r8, #48]	; 0x30
   17050:	tst	r1, #4
   17054:	bne	16fb4 <fts_read@@Base+0x640>
   17058:	ldr	r2, [pc, #360]	; 171c8 <fts_read@@Base+0x854>
   1705c:	ldr	r0, [r8, #32]
   17060:	add	r2, pc, r2
   17064:	bl	15724 <close_stdout@@Base+0x2fb8>
   17068:	cmp	r0, #0
   1706c:	str	r0, [r6, #36]	; 0x24
   17070:	blt	170ec <fts_read@@Base+0x778>
   17074:	ldrh	r3, [r6, #62]	; 0x3e
   17078:	orr	r3, r3, #2
   1707c:	strh	r3, [r6, #62]	; 0x3e
   17080:	b	16fb4 <fts_read@@Base+0x640>
   17084:	ldr	r7, [r4, #44]	; 0x2c
   17088:	ldr	r3, [r7, #48]	; 0x30
   1708c:	ldr	r5, [r7, #52]	; 0x34
   17090:	tst	r3, #512	; 0x200
   17094:	beq	16f08 <fts_read@@Base+0x594>
   17098:	cmp	r5, #0
   1709c:	beq	17170 <fts_read@@Base+0x7fc>
   170a0:	ldrd	r2, [r4, #72]	; 0x48
   170a4:	add	r1, sp, #120	; 0x78
   170a8:	mov	r0, r5
   170ac:	strd	r2, [r1, #-112]!	; 0xffffff90
   170b0:	bl	17bf8 <fts_children@@Base+0x9f4>
   170b4:	subs	fp, r0, #0
   170b8:	beq	17104 <fts_read@@Base+0x790>
   170bc:	ldrb	r7, [fp, #8]
   170c0:	cmp	r7, #0
   170c4:	bne	16f50 <fts_read@@Base+0x5dc>
   170c8:	b	16f08 <fts_read@@Base+0x594>
   170cc:	bl	11298 <__stack_chk_fail@plt>
   170d0:	bl	113dc <__errno_location@plt>
   170d4:	mov	r6, fp
   170d8:	mov	r3, #7
   170dc:	ldr	r2, [r0]
   170e0:	strh	r3, [fp, #60]	; 0x3c
   170e4:	str	r2, [fp, #32]
   170e8:	b	16c0c <fts_read@@Base+0x298>
   170ec:	bl	113dc <__errno_location@plt>
   170f0:	mov	r3, #7
   170f4:	ldr	r2, [r0]
   170f8:	strh	r3, [r6, #60]	; 0x3c
   170fc:	str	r2, [r6, #32]
   17100:	b	16fb4 <fts_read@@Base+0x640>
   17104:	mov	r0, #16
   17108:	bl	1134c <malloc@plt>
   1710c:	subs	r9, r0, #0
   17110:	beq	16f08 <fts_read@@Base+0x594>
   17114:	ldr	r0, [r7, #32]
   17118:	add	r1, sp, #24
   1711c:	bl	111fc <fstatfs64@plt>
   17120:	cmp	r0, #0
   17124:	movne	r7, fp
   17128:	bne	17144 <fts_read@@Base+0x7d0>
   1712c:	ldr	r7, [sp, #24]
   17130:	movw	r3, #18803	; 0x4973
   17134:	movt	r3, #21093	; 0x5265
   17138:	subs	r3, r7, r3
   1713c:	rsbs	r7, r3, #0
   17140:	adcs	r7, r7, r3
   17144:	strb	r7, [r9, #8]
   17148:	mov	r0, r5
   1714c:	ldrd	r2, [r4, #72]	; 0x48
   17150:	mov	r1, r9
   17154:	strd	r2, [r9]
   17158:	bl	184d4 <fts_children@@Base+0x12d0>
   1715c:	cmp	r0, #0
   17160:	beq	171ac <fts_read@@Base+0x838>
   17164:	cmp	r9, r0
   17168:	beq	170c0 <fts_read@@Base+0x74c>
   1716c:	b	16cd4 <fts_read@@Base+0x360>
   17170:	ldr	ip, [pc, #84]	; 171cc <fts_read@@Base+0x858>
   17174:	mov	r1, r5
   17178:	ldr	r2, [pc, #80]	; 171d0 <fts_read@@Base+0x85c>
   1717c:	mov	r0, #13
   17180:	ldr	r3, [pc, #76]	; 171d4 <fts_read@@Base+0x860>
   17184:	ldr	ip, [r9, ip]
   17188:	add	r2, pc, r2
   1718c:	add	r3, pc, r3
   17190:	str	ip, [sp]
   17194:	bl	17eac <fts_children@@Base+0xca8>
   17198:	cmp	r0, #0
   1719c:	mov	r5, r0
   171a0:	str	r0, [r7, #52]	; 0x34
   171a4:	bne	170a0 <fts_read@@Base+0x72c>
   171a8:	b	16f08 <fts_read@@Base+0x594>
   171ac:	mov	r0, r9
   171b0:	bl	11250 <free@plt>
   171b4:	b	16f08 <fts_read@@Base+0x594>
   171b8:	andeq	r4, r1, r0, ror r6
   171bc:	andeq	r0, r0, r4, lsr #2
   171c0:	andeq	r3, r0, r0, asr #22
   171c4:	andeq	r3, r0, r4, asr #17
   171c8:	andeq	r3, r0, r4, ror r8
   171cc:	andeq	r0, r0, r0, lsr #2
   171d0:			; <UNDEFINED> instruction: 0xffffe00c
   171d4:			; <UNDEFINED> instruction: 0xffffe024

000171d8 <fts_set@@Base>:
   171d8:	cmp	r2, #4
   171dc:	push	{r3, lr}
   171e0:	movls	r3, #0
   171e4:	strhls	r2, [r1, #64]	; 0x40
   171e8:	bls	171fc <fts_set@@Base+0x24>
   171ec:	bl	113dc <__errno_location@plt>
   171f0:	mov	r3, #1
   171f4:	mov	r2, #22
   171f8:	str	r2, [r0]
   171fc:	mov	r0, r3
   17200:	pop	{r3, pc}

00017204 <fts_children@@Base>:
   17204:	push	{r4, r5, r6, r7, r8, lr}
   17208:	bics	r7, r1, #8192	; 0x2000
   1720c:	mov	r5, r1
   17210:	mov	r4, r0
   17214:	bne	17310 <fts_children@@Base+0x10c>
   17218:	bl	113dc <__errno_location@plt>
   1721c:	ldr	r6, [r4]
   17220:	str	r7, [r0]
   17224:	mov	r8, r0
   17228:	ldr	r3, [r4, #48]	; 0x30
   1722c:	ands	r3, r3, #16384	; 0x4000
   17230:	bne	17328 <fts_children@@Base+0x124>
   17234:	ldrh	r2, [r6, #60]	; 0x3c
   17238:	cmp	r2, #9
   1723c:	ldreq	r3, [r6, #8]
   17240:	beq	172b0 <fts_children@@Base+0xac>
   17244:	cmp	r2, #1
   17248:	bne	172b0 <fts_children@@Base+0xac>
   1724c:	ldr	r0, [r4, #4]
   17250:	cmp	r0, #0
   17254:	beq	1725c <fts_children@@Base+0x58>
   17258:	bl	15364 <close_stdout@@Base+0x2bf8>
   1725c:	cmp	r5, #8192	; 0x2000
   17260:	ldreq	r3, [r4, #48]	; 0x30
   17264:	moveq	r5, #2
   17268:	movne	r5, #1
   1726c:	orreq	r3, r3, #8192	; 0x2000
   17270:	streq	r3, [r4, #48]	; 0x30
   17274:	ldr	r3, [r6, #48]	; 0x30
   17278:	cmp	r3, #0
   1727c:	bne	1729c <fts_children@@Base+0x98>
   17280:	ldr	r3, [r6, #24]
   17284:	ldrb	r3, [r3]
   17288:	cmp	r3, #47	; 0x2f
   1728c:	beq	1729c <fts_children@@Base+0x98>
   17290:	ldr	r1, [r4, #48]	; 0x30
   17294:	ands	r6, r1, #4
   17298:	beq	172b8 <fts_children@@Base+0xb4>
   1729c:	mov	r1, r5
   172a0:	mov	r0, r4
   172a4:	bl	15b78 <close_stdout@@Base+0x340c>
   172a8:	mov	r3, r0
   172ac:	str	r0, [r4, #4]
   172b0:	mov	r0, r3
   172b4:	pop	{r4, r5, r6, r7, r8, pc}
   172b8:	ldr	r2, [pc, #164]	; 17364 <fts_children@@Base+0x160>
   172bc:	ldr	r0, [r4, #32]
   172c0:	add	r2, pc, r2
   172c4:	bl	15724 <close_stdout@@Base+0x2fb8>
   172c8:	subs	r7, r0, #0
   172cc:	strlt	r6, [r4, #4]
   172d0:	movlt	r3, r6
   172d4:	blt	172b0 <fts_children@@Base+0xac>
   172d8:	mov	r1, r5
   172dc:	mov	r0, r4
   172e0:	bl	15b78 <close_stdout@@Base+0x340c>
   172e4:	ldr	r3, [r4, #48]	; 0x30
   172e8:	ands	r5, r3, #512	; 0x200
   172ec:	str	r0, [r4, #4]
   172f0:	beq	17330 <fts_children@@Base+0x12c>
   172f4:	mov	r1, r7
   172f8:	mov	r0, r4
   172fc:	mov	r2, #1
   17300:	bl	153d4 <close_stdout@@Base+0x2c68>
   17304:	ldr	r3, [r4, #4]
   17308:	mov	r0, r3
   1730c:	pop	{r4, r5, r6, r7, r8, pc}
   17310:	bl	113dc <__errno_location@plt>
   17314:	mov	r3, #0
   17318:	mov	r2, #22
   1731c:	str	r2, [r0]
   17320:	mov	r0, r3
   17324:	pop	{r4, r5, r6, r7, r8, pc}
   17328:	mov	r3, r7
   1732c:	b	172b0 <fts_children@@Base+0xac>
   17330:	mov	r0, r7
   17334:	bl	1149c <fchdir@plt>
   17338:	cmp	r0, #0
   1733c:	bne	1734c <fts_children@@Base+0x148>
   17340:	mov	r0, r7
   17344:	bl	114f0 <close@plt>
   17348:	b	17304 <fts_children@@Base+0x100>
   1734c:	ldr	r4, [r8]
   17350:	mov	r0, r7
   17354:	bl	114f0 <close@plt>
   17358:	mov	r3, r5
   1735c:	str	r4, [r8]
   17360:	b	172b0 <fts_children@@Base+0xac>
   17364:	andeq	r3, r0, r4, lsl r6
   17368:	push	{r3, r4, r5, lr}
   1736c:	mov	r2, #0
   17370:	mov	r4, r1
   17374:	mov	r1, #1
   17378:	mov	r5, r0
   1737c:	bl	18cbc <fts_children@@Base+0x1ab8>
   17380:	cmp	r0, #0
   17384:	blt	173c4 <fts_children@@Base+0x1c0>
   17388:	cmp	r4, #0
   1738c:	orrne	r2, r0, #1
   17390:	biceq	r2, r0, #1
   17394:	cmp	r2, r0
   17398:	beq	173bc <fts_children@@Base+0x1b8>
   1739c:	mov	r0, r5
   173a0:	mov	r1, #2
   173a4:	bl	18cbc <fts_children@@Base+0x1ab8>
   173a8:	cmn	r0, #1
   173ac:	movne	r0, #0
   173b0:	moveq	r0, #1
   173b4:	rsb	r0, r0, #0
   173b8:	pop	{r3, r4, r5, pc}
   173bc:	mov	r0, #0
   173c0:	pop	{r3, r4, r5, pc}
   173c4:	mvn	r0, #0
   173c8:	pop	{r3, r4, r5, pc}
   173cc:	movw	r1, #1030	; 0x406
   173d0:	mov	r2, #0
   173d4:	b	18cbc <fts_children@@Base+0x1ab8>
   173d8:	push	{r4, r5, r6, lr}
   173dc:	mov	r4, r0
   173e0:	bl	11310 <__fpending@plt>
   173e4:	mov	r6, r0
   173e8:	mov	r0, r4
   173ec:	ldr	r4, [r4]
   173f0:	bl	18c1c <fts_children@@Base+0x1a18>
   173f4:	and	r4, r4, #32
   173f8:	adds	r5, r0, #0
   173fc:	movne	r5, #1
   17400:	cmp	r4, #0
   17404:	bne	17424 <fts_children@@Base+0x220>
   17408:	cmp	r5, #0
   1740c:	beq	1741c <fts_children@@Base+0x218>
   17410:	cmp	r6, #0
   17414:	beq	17440 <fts_children@@Base+0x23c>
   17418:	mvn	r4, #0
   1741c:	mov	r0, r4
   17420:	pop	{r4, r5, r6, pc}
   17424:	cmp	r5, #0
   17428:	bne	17418 <fts_children@@Base+0x214>
   1742c:	bl	113dc <__errno_location@plt>
   17430:	mvn	r4, #0
   17434:	str	r5, [r0]
   17438:	mov	r0, r4
   1743c:	pop	{r4, r5, r6, pc}
   17440:	bl	113dc <__errno_location@plt>
   17444:	ldr	r4, [r0]
   17448:	subs	r4, r4, #9
   1744c:	mvnne	r4, #0
   17450:	mov	r0, r4
   17454:	pop	{r4, r5, r6, pc}
   17458:	mov	r2, #0
   1745c:	mov	r3, #0
   17460:	movw	r1, #62998	; 0xf616
   17464:	strd	r2, [r0, #16]
   17468:	movt	r1, #149	; 0x95
   1746c:	str	r1, [r0, #24]
   17470:	bx	lr
   17474:	push	{r3, r4, r5, r6, r7, lr}
   17478:	movw	r3, #62998	; 0xf616
   1747c:	ldr	r2, [r0, #24]
   17480:	movt	r3, #149	; 0x95
   17484:	mov	ip, r0
   17488:	cmp	r2, r3
   1748c:	bne	17520 <fts_children@@Base+0x31c>
   17490:	ldrd	r6, [r0, #16]
   17494:	orrs	r0, r6, r7
   17498:	beq	174dc <fts_children@@Base+0x2d8>
   1749c:	ldrd	r4, [r1, #96]	; 0x60
   174a0:	ldrd	r2, [ip]
   174a4:	cmp	r5, r3
   174a8:	cmpeq	r4, r2
   174ac:	beq	17508 <fts_children@@Base+0x304>
   174b0:	adds	r2, r6, #1
   174b4:	adc	r3, r7, #0
   174b8:	and	r6, r6, r2
   174bc:	and	r7, r7, r3
   174c0:	strd	r2, [ip, #16]
   174c4:	orrs	r0, r6, r7
   174c8:	bne	17500 <fts_children@@Base+0x2fc>
   174cc:	orrs	r0, r2, r3
   174d0:	bne	174e8 <fts_children@@Base+0x2e4>
   174d4:	mov	r0, #1
   174d8:	pop	{r3, r4, r5, r6, r7, pc}
   174dc:	mov	r2, #1
   174e0:	mov	r3, #0
   174e4:	strd	r2, [ip, #16]
   174e8:	ldrd	r2, [r1]
   174ec:	mov	r0, #0
   174f0:	strd	r2, [ip, #8]
   174f4:	ldrd	r2, [r1, #96]	; 0x60
   174f8:	strd	r2, [ip]
   174fc:	pop	{r3, r4, r5, r6, r7, pc}
   17500:	mov	r0, #0
   17504:	pop	{r3, r4, r5, r6, r7, pc}
   17508:	ldrd	r4, [r1]
   1750c:	ldrd	r2, [ip, #8]
   17510:	cmp	r5, r3
   17514:	cmpeq	r4, r2
   17518:	bne	174b0 <fts_children@@Base+0x2ac>
   1751c:	b	174d4 <fts_children@@Base+0x2d0>
   17520:	ldr	r0, [pc, #24]	; 17540 <fts_children@@Base+0x33c>
   17524:	mov	r2, #60	; 0x3c
   17528:	ldr	r1, [pc, #20]	; 17544 <fts_children@@Base+0x340>
   1752c:	ldr	r3, [pc, #20]	; 17548 <fts_children@@Base+0x344>
   17530:	add	r0, pc, r0
   17534:	add	r1, pc, r1
   17538:	add	r3, pc, r3
   1753c:	bl	11514 <__assert_fail@plt>
   17540:			; <UNDEFINED> instruction: 0x000033b4
   17544:	andeq	r3, r0, r8, asr #7
   17548:	andeq	r3, r0, r0, lsr #7
   1754c:	push	{r1, r2, r3}
   17550:	ldr	r3, [pc, #88]	; 175b0 <fts_children@@Base+0x3ac>
   17554:	ldr	r2, [pc, #88]	; 175b4 <fts_children@@Base+0x3b0>
   17558:	add	r3, pc, r3
   1755c:	push	{r4, lr}
   17560:	sub	sp, sp, #12
   17564:	ldr	r4, [r3, r2]
   17568:	ldr	r1, [sp, #20]
   1756c:	ldr	r3, [r4]
   17570:	ands	r2, r1, #64	; 0x40
   17574:	ldrne	r2, [sp, #24]
   17578:	str	r3, [sp, #4]
   1757c:	addne	r3, sp, #24
   17580:	strne	r3, [sp]
   17584:	bl	11334 <open64@plt>
   17588:	bl	18be0 <fts_children@@Base+0x19dc>
   1758c:	ldr	r2, [sp, #4]
   17590:	ldr	r3, [r4]
   17594:	cmp	r2, r3
   17598:	bne	175ac <fts_children@@Base+0x3a8>
   1759c:	add	sp, sp, #12
   175a0:	pop	{r4, lr}
   175a4:	add	sp, sp, #12
   175a8:	bx	lr
   175ac:	bl	11298 <__stack_chk_fail@plt>
   175b0:	andeq	r3, r1, r0, lsr #21
   175b4:	andeq	r0, r0, r4, lsr #2
   175b8:	cmp	r0, #9
   175bc:	push	{r4, r5, r6, r7, r8, lr}
   175c0:	bhi	17654 <fts_children@@Base+0x450>
   175c4:	mov	r7, #11
   175c8:	movw	r8, #43691	; 0xaaab
   175cc:	movt	r8, #43690	; 0xaaaa
   175d0:	cmp	r7, #9
   175d4:	bls	1764c <fts_children@@Base+0x448>
   175d8:	umull	r2, r3, r8, r7
   175dc:	lsr	r3, r3, #1
   175e0:	add	r3, r3, r3, lsl #1
   175e4:	cmp	r7, r3
   175e8:	beq	17638 <fts_children@@Base+0x434>
   175ec:	mov	r6, #16
   175f0:	mov	r5, #9
   175f4:	mov	r4, #3
   175f8:	b	17608 <fts_children@@Base+0x404>
   175fc:	bl	19124 <fts_children@@Base+0x1f20>
   17600:	cmp	r1, #0
   17604:	beq	17638 <fts_children@@Base+0x434>
   17608:	add	r5, r5, r6
   1760c:	add	r4, r4, #2
   17610:	cmp	r5, r7
   17614:	mov	r0, r7
   17618:	add	r6, r6, #8
   1761c:	mov	r1, r4
   17620:	bcc	175fc <fts_children@@Base+0x3f8>
   17624:	mov	r1, r4
   17628:	mov	r0, r7
   1762c:	bl	19124 <fts_children@@Base+0x1f20>
   17630:	cmp	r1, #0
   17634:	bne	17644 <fts_children@@Base+0x440>
   17638:	add	r7, r7, #2
   1763c:	cmn	r7, #1
   17640:	bne	175d0 <fts_children@@Base+0x3cc>
   17644:	mov	r0, r7
   17648:	pop	{r4, r5, r6, r7, r8, pc}
   1764c:	mov	r4, #3
   17650:	b	17624 <fts_children@@Base+0x420>
   17654:	orr	r7, r0, #1
   17658:	cmn	r7, #1
   1765c:	bne	175c8 <fts_children@@Base+0x3c4>
   17660:	b	17644 <fts_children@@Base+0x440>
   17664:	push	{r3, lr}
   17668:	ror	r0, r0, #3
   1766c:	bl	19124 <fts_children@@Base+0x1f20>
   17670:	mov	r0, r1
   17674:	pop	{r3, pc}
   17678:	subs	r3, r1, r0
   1767c:	rsbs	r0, r3, #0
   17680:	adcs	r0, r0, r3
   17684:	bx	lr
   17688:	push	{r4, lr}
   1768c:	mov	r4, r0
   17690:	ldr	r3, [r4, #24]
   17694:	mov	r0, r1
   17698:	ldr	r1, [r4, #8]
   1769c:	blx	r3
   176a0:	ldr	r3, [r4, #8]
   176a4:	cmp	r0, r3
   176a8:	bcs	176b8 <fts_children@@Base+0x4b4>
   176ac:	ldr	r3, [r4]
   176b0:	add	r0, r3, r0, lsl #3
   176b4:	pop	{r4, pc}
   176b8:	bl	114e4 <abort@plt>
   176bc:	push	{r4, r5, r6, r7, r8, lr}
   176c0:	mov	r7, r2
   176c4:	mov	r8, r3
   176c8:	mov	r6, r0
   176cc:	mov	r5, r1
   176d0:	bl	17688 <fts_children@@Base+0x484>
   176d4:	str	r0, [r7]
   176d8:	mov	r4, r0
   176dc:	ldr	r2, [r0]
   176e0:	cmp	r2, #0
   176e4:	beq	17778 <fts_children@@Base+0x574>
   176e8:	cmp	r5, r2
   176ec:	beq	1770c <fts_children@@Base+0x508>
   176f0:	mov	r1, r2
   176f4:	ldr	r3, [r6, #28]
   176f8:	mov	r0, r5
   176fc:	blx	r3
   17700:	cmp	r0, #0
   17704:	beq	1776c <fts_children@@Base+0x568>
   17708:	ldr	r2, [r4]
   1770c:	cmp	r8, #0
   17710:	beq	1773c <fts_children@@Base+0x538>
   17714:	ldr	r3, [r4, #4]
   17718:	cmp	r3, #0
   1771c:	streq	r3, [r4]
   17720:	ldmne	r3, {r0, r1}
   17724:	movne	ip, #0
   17728:	stmne	r4, {r0, r1}
   1772c:	strne	ip, [r3]
   17730:	ldrne	r1, [r6, #36]	; 0x24
   17734:	strne	r1, [r3, #4]
   17738:	strne	r3, [r6, #36]	; 0x24
   1773c:	mov	r0, r2
   17740:	pop	{r4, r5, r6, r7, r8, pc}
   17744:	ldr	r2, [ip]
   17748:	cmp	r2, r5
   1774c:	beq	1778c <fts_children@@Base+0x588>
   17750:	mov	r1, r2
   17754:	mov	r0, r5
   17758:	ldr	r2, [r6, #28]
   1775c:	blx	r2
   17760:	cmp	r0, #0
   17764:	bne	17784 <fts_children@@Base+0x580>
   17768:	ldr	r4, [r4, #4]
   1776c:	ldr	ip, [r4, #4]
   17770:	cmp	ip, #0
   17774:	bne	17744 <fts_children@@Base+0x540>
   17778:	mov	r2, #0
   1777c:	mov	r0, r2
   17780:	pop	{r4, r5, r6, r7, r8, pc}
   17784:	ldr	ip, [r4, #4]
   17788:	ldr	r2, [ip]
   1778c:	cmp	r8, #0
   17790:	beq	1773c <fts_children@@Base+0x538>
   17794:	ldr	r1, [ip, #4]
   17798:	mov	r3, #0
   1779c:	mov	r0, r2
   177a0:	str	r1, [r4, #4]
   177a4:	str	r3, [ip]
   177a8:	ldr	r3, [r6, #36]	; 0x24
   177ac:	str	r3, [ip, #4]
   177b0:	str	ip, [r6, #36]	; 0x24
   177b4:	pop	{r4, r5, r6, r7, r8, pc}
   177b8:	ldr	r1, [pc, #176]	; 17870 <fts_children@@Base+0x66c>
   177bc:	mov	r2, r0
   177c0:	ldr	r3, [r0]
   177c4:	add	r1, pc, r1
   177c8:	cmp	r3, r1
   177cc:	beq	1785c <fts_children@@Base+0x658>
   177d0:	vldr	s15, [r3, #8]
   177d4:	vldr	s14, [pc, #136]	; 17864 <fts_children@@Base+0x660>
   177d8:	vcmpe.f32	s15, s14
   177dc:	vmrs	APSR_nzcv, fpscr
   177e0:	ble	17848 <fts_children@@Base+0x644>
   177e4:	vldr	s13, [pc, #124]	; 17868 <fts_children@@Base+0x664>
   177e8:	vcmpe.f32	s15, s13
   177ec:	vmrs	APSR_nzcv, fpscr
   177f0:	bpl	17848 <fts_children@@Base+0x644>
   177f4:	vldr	s13, [pc, #112]	; 1786c <fts_children@@Base+0x668>
   177f8:	vldr	s12, [r3, #12]
   177fc:	vcmpe.f32	s12, s13
   17800:	vmrs	APSR_nzcv, fpscr
   17804:	ble	17848 <fts_children@@Base+0x644>
   17808:	vldr	s13, [r3]
   1780c:	vcmpe.f32	s13, #0.0
   17810:	vmrs	APSR_nzcv, fpscr
   17814:	blt	17848 <fts_children@@Base+0x644>
   17818:	vadd.f32	s14, s13, s14
   1781c:	vldr	s12, [r3, #4]
   17820:	vcmpe.f32	s14, s12
   17824:	vmrs	APSR_nzcv, fpscr
   17828:	bpl	17848 <fts_children@@Base+0x644>
   1782c:	vmov.f32	s13, #112	; 0x3f800000  1.0
   17830:	vcmpe.f32	s12, s13
   17834:	vmrs	APSR_nzcv, fpscr
   17838:	bhi	17848 <fts_children@@Base+0x644>
   1783c:	vcmpe.f32	s15, s14
   17840:	vmrs	APSR_nzcv, fpscr
   17844:	bgt	1785c <fts_children@@Base+0x658>
   17848:	ldr	r3, [pc, #36]	; 17874 <fts_children@@Base+0x670>
   1784c:	mov	r0, #0
   17850:	add	r3, pc, r3
   17854:	str	r3, [r2]
   17858:	bx	lr
   1785c:	mov	r0, #1
   17860:	bx	lr
   17864:	stclcc	12, cr12, [ip, #820]	; 0x334
   17868:	svccc	0x00666666
   1786c:	svccc	0x008ccccd
   17870:	andeq	r3, r0, ip, asr #2
   17874:	andeq	r3, r0, r0, asr #1
   17878:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1787c:	mov	r8, r1
   17880:	ldr	r6, [r1]
   17884:	mov	r5, r0
   17888:	ldr	r3, [r1, #4]
   1788c:	mov	sl, r2
   17890:	cmp	r6, r3
   17894:	addcc	r6, r6, #8
   17898:	movcc	r9, #0
   1789c:	bcs	17944 <fts_children@@Base+0x740>
   178a0:	ldr	fp, [r6, #-8]
   178a4:	mov	r7, r6
   178a8:	cmp	fp, #0
   178ac:	beq	17938 <fts_children@@Base+0x734>
   178b0:	ldr	r4, [r6, #-4]
   178b4:	cmp	r4, #0
   178b8:	bne	178d8 <fts_children@@Base+0x6d4>
   178bc:	b	17928 <fts_children@@Base+0x724>
   178c0:	ldr	r2, [r0, #4]
   178c4:	cmp	r3, #0
   178c8:	str	r2, [r4, #4]
   178cc:	str	r4, [r0, #4]
   178d0:	mov	r4, r3
   178d4:	beq	17924 <fts_children@@Base+0x720>
   178d8:	ldr	fp, [r4]
   178dc:	mov	r0, r5
   178e0:	mov	r1, fp
   178e4:	bl	17688 <fts_children@@Base+0x484>
   178e8:	ldr	r3, [r4, #4]
   178ec:	ldr	r2, [r0]
   178f0:	cmp	r2, #0
   178f4:	bne	178c0 <fts_children@@Base+0x6bc>
   178f8:	str	fp, [r0]
   178fc:	cmp	r3, #0
   17900:	ldr	r1, [r5, #12]
   17904:	add	r1, r1, #1
   17908:	str	r1, [r5, #12]
   1790c:	str	r2, [r4]
   17910:	ldr	r2, [r5, #36]	; 0x24
   17914:	str	r2, [r4, #4]
   17918:	str	r4, [r5, #36]	; 0x24
   1791c:	mov	r4, r3
   17920:	bne	178d8 <fts_children@@Base+0x6d4>
   17924:	ldr	fp, [r6, #-8]
   17928:	cmp	sl, #0
   1792c:	str	r9, [r6, #-4]
   17930:	beq	1794c <fts_children@@Base+0x748>
   17934:	ldr	r3, [r8, #4]
   17938:	cmp	r3, r7
   1793c:	add	r6, r6, #8
   17940:	bhi	178a0 <fts_children@@Base+0x69c>
   17944:	mov	r0, #1
   17948:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1794c:	mov	r0, r5
   17950:	mov	r1, fp
   17954:	bl	17688 <fts_children@@Base+0x484>
   17958:	ldr	r3, [r0]
   1795c:	mov	r4, r0
   17960:	cmp	r3, #0
   17964:	beq	179b0 <fts_children@@Base+0x7ac>
   17968:	ldr	r0, [r5, #36]	; 0x24
   1796c:	cmp	r0, #0
   17970:	beq	179c4 <fts_children@@Base+0x7c0>
   17974:	ldr	r2, [r0, #4]
   17978:	str	r2, [r5, #36]	; 0x24
   1797c:	str	fp, [r0]
   17980:	ldr	r2, [r4, #4]
   17984:	str	r2, [r0, #4]
   17988:	str	r0, [r4, #4]
   1798c:	str	r9, [r6, #-8]
   17990:	add	r6, r6, #8
   17994:	ldr	r3, [r8, #4]
   17998:	ldr	r2, [r8, #12]
   1799c:	cmp	r3, r7
   179a0:	sub	r2, r2, #1
   179a4:	str	r2, [r8, #12]
   179a8:	bhi	178a0 <fts_children@@Base+0x69c>
   179ac:	b	17944 <fts_children@@Base+0x740>
   179b0:	str	fp, [r0]
   179b4:	ldr	r3, [r5, #12]
   179b8:	add	r3, r3, #1
   179bc:	str	r3, [r5, #12]
   179c0:	b	1798c <fts_children@@Base+0x788>
   179c4:	mov	r0, #8
   179c8:	bl	1134c <malloc@plt>
   179cc:	cmp	r0, #0
   179d0:	bne	1797c <fts_children@@Base+0x778>
   179d4:	mov	r0, sl
   179d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179dc:	ldr	r0, [r0, #8]
   179e0:	bx	lr
   179e4:	ldr	r0, [r0, #12]
   179e8:	bx	lr
   179ec:	ldr	r0, [r0, #16]
   179f0:	bx	lr
   179f4:	ldr	r3, [r0]
   179f8:	ldr	r2, [r0, #4]
   179fc:	cmp	r3, r2
   17a00:	bcs	17a64 <fts_children@@Base+0x860>
   17a04:	add	r1, r3, #8
   17a08:	add	r2, r2, #7
   17a0c:	rsb	r2, r1, r2
   17a10:	add	r3, r3, #16
   17a14:	bic	r2, r2, #7
   17a18:	mov	r0, #0
   17a1c:	add	ip, r3, r2
   17a20:	ldr	r3, [r1, #-8]
   17a24:	cmp	r3, #0
   17a28:	beq	17a54 <fts_children@@Base+0x850>
   17a2c:	ldr	r3, [r1, #-4]
   17a30:	mov	r2, #1
   17a34:	cmp	r3, #0
   17a38:	beq	17a4c <fts_children@@Base+0x848>
   17a3c:	ldr	r3, [r3, #4]
   17a40:	add	r2, r2, #1
   17a44:	cmp	r3, #0
   17a48:	bne	17a3c <fts_children@@Base+0x838>
   17a4c:	cmp	r0, r2
   17a50:	movcc	r0, r2
   17a54:	add	r1, r1, #8
   17a58:	cmp	r1, ip
   17a5c:	bne	17a20 <fts_children@@Base+0x81c>
   17a60:	bx	lr
   17a64:	mov	r0, #0
   17a68:	bx	lr
   17a6c:	push	{r4}		; (str r4, [sp, #-4]!)
   17a70:	ldr	r3, [r0]
   17a74:	ldr	r2, [r0, #4]
   17a78:	cmp	r3, r2
   17a7c:	bcs	17b0c <fts_children@@Base+0x908>
   17a80:	add	r2, r2, #7
   17a84:	add	r1, r3, #8
   17a88:	rsb	ip, r1, r2
   17a8c:	add	r3, r3, #16
   17a90:	bic	ip, ip, #7
   17a94:	mov	r2, #0
   17a98:	add	r4, r3, ip
   17a9c:	mov	ip, r2
   17aa0:	ldr	r3, [r1, #-8]
   17aa4:	cmp	r3, #0
   17aa8:	beq	17ad0 <fts_children@@Base+0x8cc>
   17aac:	ldr	r3, [r1, #-4]
   17ab0:	add	ip, ip, #1
   17ab4:	add	r2, r2, #1
   17ab8:	cmp	r3, #0
   17abc:	beq	17ad0 <fts_children@@Base+0x8cc>
   17ac0:	ldr	r3, [r3, #4]
   17ac4:	add	r2, r2, #1
   17ac8:	cmp	r3, #0
   17acc:	bne	17ac0 <fts_children@@Base+0x8bc>
   17ad0:	add	r1, r1, #8
   17ad4:	cmp	r1, r4
   17ad8:	bne	17aa0 <fts_children@@Base+0x89c>
   17adc:	ldr	r3, [r0, #12]
   17ae0:	cmp	r3, ip
   17ae4:	movne	r0, #0
   17ae8:	beq	17af4 <fts_children@@Base+0x8f0>
   17aec:	pop	{r4}		; (ldr r4, [sp], #4)
   17af0:	bx	lr
   17af4:	ldr	r0, [r0, #16]
   17af8:	pop	{r4}		; (ldr r4, [sp], #4)
   17afc:	subs	r3, r0, r2
   17b00:	rsbs	r0, r3, #0
   17b04:	adcs	r0, r0, r3
   17b08:	bx	lr
   17b0c:	mov	r2, #0
   17b10:	mov	ip, r2
   17b14:	b	17adc <fts_children@@Base+0x8d8>
   17b18:	push	{r4, r5, r6, r7, r8, lr}
   17b1c:	sub	sp, sp, #8
   17b20:	mov	r4, r1
   17b24:	mov	r5, r0
   17b28:	bl	179ec <fts_children@@Base+0x7e8>
   17b2c:	mov	r8, r0
   17b30:	mov	r0, r5
   17b34:	bl	179dc <fts_children@@Base+0x7d8>
   17b38:	mov	r6, r0
   17b3c:	mov	r0, r5
   17b40:	bl	179e4 <fts_children@@Base+0x7e0>
   17b44:	mov	r7, r0
   17b48:	mov	r0, r5
   17b4c:	bl	179f4 <fts_children@@Base+0x7f0>
   17b50:	ldr	r2, [pc, #144]	; 17be8 <fts_children@@Base+0x9e4>
   17b54:	mov	r3, r8
   17b58:	mov	r1, #1
   17b5c:	add	r2, pc, r2
   17b60:	mov	r5, r0
   17b64:	mov	r0, r4
   17b68:	bl	11424 <__fprintf_chk@plt>
   17b6c:	ldr	r2, [pc, #120]	; 17bec <fts_children@@Base+0x9e8>
   17b70:	mov	r3, r6
   17b74:	mov	r0, r4
   17b78:	mov	r1, #1
   17b7c:	add	r2, pc, r2
   17b80:	bl	11424 <__fprintf_chk@plt>
   17b84:	vmov	s15, r7
   17b88:	vldr	d5, [pc, #80]	; 17be0 <fts_children@@Base+0x9dc>
   17b8c:	ldr	r2, [pc, #92]	; 17bf0 <fts_children@@Base+0x9ec>
   17b90:	vcvt.f64.u32	d4, s15
   17b94:	mov	r3, r7
   17b98:	vmov	s15, r6
   17b9c:	mov	r0, r4
   17ba0:	mov	r1, #1
   17ba4:	add	r2, pc, r2
   17ba8:	vmul.f64	d5, d4, d5
   17bac:	vcvt.f64.u32	d6, s15
   17bb0:	vdiv.f64	d7, d5, d6
   17bb4:	vstr	d7, [sp]
   17bb8:	bl	11424 <__fprintf_chk@plt>
   17bbc:	ldr	r2, [pc, #48]	; 17bf4 <fts_children@@Base+0x9f0>
   17bc0:	mov	r0, r4
   17bc4:	mov	r3, r5
   17bc8:	mov	r1, #1
   17bcc:	add	r2, pc, r2
   17bd0:	add	sp, sp, #8
   17bd4:	pop	{r4, r5, r6, r7, r8, lr}
   17bd8:	b	11424 <__fprintf_chk@plt>
   17bdc:	nop	{0}
   17be0:	andeq	r0, r0, r0
   17be4:	subsmi	r0, r9, r0
   17be8:	andeq	r2, r0, r8, asr #27
   17bec:	andeq	r2, r0, r0, asr #27
   17bf0:			; <UNDEFINED> instruction: 0x00002db0
   17bf4:	andeq	r2, r0, ip, lsr #27
   17bf8:	push	{r4, r5, r6, lr}
   17bfc:	mov	r6, r0
   17c00:	mov	r5, r1
   17c04:	bl	17688 <fts_children@@Base+0x484>
   17c08:	ldr	r3, [r0]
   17c0c:	mov	r4, r0
   17c10:	cmp	r3, #0
   17c14:	bne	17c20 <fts_children@@Base+0xa1c>
   17c18:	b	17c4c <fts_children@@Base+0xa48>
   17c1c:	ldr	r3, [r4]
   17c20:	cmp	r5, r3
   17c24:	mov	r1, r3
   17c28:	mov	r0, r5
   17c2c:	beq	17c58 <fts_children@@Base+0xa54>
   17c30:	ldr	r3, [r6, #28]
   17c34:	blx	r3
   17c38:	cmp	r0, #0
   17c3c:	bne	17c54 <fts_children@@Base+0xa50>
   17c40:	ldr	r4, [r4, #4]
   17c44:	cmp	r4, #0
   17c48:	bne	17c1c <fts_children@@Base+0xa18>
   17c4c:	mov	r0, #0
   17c50:	pop	{r4, r5, r6, pc}
   17c54:	ldr	r3, [r4]
   17c58:	mov	r0, r3
   17c5c:	pop	{r4, r5, r6, pc}
   17c60:	push	{r3, lr}
   17c64:	ldr	r3, [r0, #16]
   17c68:	cmp	r3, #0
   17c6c:	beq	17cac <fts_children@@Base+0xaa8>
   17c70:	ldr	r3, [r0]
   17c74:	ldr	r2, [r0, #4]
   17c78:	cmp	r3, r2
   17c7c:	bcs	17ca8 <fts_children@@Base+0xaa4>
   17c80:	ldr	r0, [r3]
   17c84:	cmp	r0, #0
   17c88:	beq	17c9c <fts_children@@Base+0xa98>
   17c8c:	b	17cb4 <fts_children@@Base+0xab0>
   17c90:	ldr	r0, [r3]
   17c94:	cmp	r0, #0
   17c98:	popne	{r3, pc}
   17c9c:	add	r3, r3, #8
   17ca0:	cmp	r3, r2
   17ca4:	bcc	17c90 <fts_children@@Base+0xa8c>
   17ca8:	bl	114e4 <abort@plt>
   17cac:	mov	r0, r3
   17cb0:	pop	{r3, pc}
   17cb4:	pop	{r3, pc}
   17cb8:	push	{r3, r4, r5, lr}
   17cbc:	mov	r5, r0
   17cc0:	mov	r4, r1
   17cc4:	bl	17688 <fts_children@@Base+0x484>
   17cc8:	mov	r2, r0
   17ccc:	mov	r3, r0
   17cd0:	b	17cdc <fts_children@@Base+0xad8>
   17cd4:	cmp	r3, #0
   17cd8:	beq	17cf4 <fts_children@@Base+0xaf0>
   17cdc:	ldr	ip, [r3]
   17ce0:	ldr	r3, [r3, #4]
   17ce4:	cmp	ip, r4
   17ce8:	bne	17cd4 <fts_children@@Base+0xad0>
   17cec:	cmp	r3, #0
   17cf0:	bne	17d1c <fts_children@@Base+0xb18>
   17cf4:	ldr	r3, [r5, #4]
   17cf8:	b	17d08 <fts_children@@Base+0xb04>
   17cfc:	ldr	r0, [r2]
   17d00:	cmp	r0, #0
   17d04:	popne	{r3, r4, r5, pc}
   17d08:	add	r2, r2, #8
   17d0c:	cmp	r2, r3
   17d10:	bcc	17cfc <fts_children@@Base+0xaf8>
   17d14:	mov	r0, #0
   17d18:	pop	{r3, r4, r5, pc}
   17d1c:	ldr	r0, [r3]
   17d20:	pop	{r3, r4, r5, pc}
   17d24:	push	{r4, r5, r6, r7}
   17d28:	mov	r6, r0
   17d2c:	ldm	r0, {r5, ip}
   17d30:	cmp	ip, r5
   17d34:	bls	17db8 <fts_children@@Base+0xbb4>
   17d38:	add	r5, r5, #8
   17d3c:	mov	r0, #0
   17d40:	ldr	r3, [r5, #-8]
   17d44:	mov	r7, r5
   17d48:	cmp	r3, #0
   17d4c:	beq	17d98 <fts_children@@Base+0xb94>
   17d50:	cmp	r2, r0
   17d54:	bls	17da4 <fts_children@@Base+0xba0>
   17d58:	str	r3, [r1, r0, lsl #2]
   17d5c:	add	r4, r0, #1
   17d60:	ldr	r3, [r5, #-4]
   17d64:	add	ip, r1, r0, lsl #2
   17d68:	cmp	r3, #0
   17d6c:	beq	17dac <fts_children@@Base+0xba8>
   17d70:	mov	r0, r4
   17d74:	cmp	r0, r2
   17d78:	beq	17da4 <fts_children@@Base+0xba0>
   17d7c:	ldr	r4, [r3]
   17d80:	add	r0, r0, #1
   17d84:	str	r4, [ip, #4]!
   17d88:	ldr	r3, [r3, #4]
   17d8c:	cmp	r3, #0
   17d90:	bne	17d74 <fts_children@@Base+0xb70>
   17d94:	ldr	ip, [r6, #4]
   17d98:	cmp	ip, r7
   17d9c:	add	r5, r5, #8
   17da0:	bhi	17d40 <fts_children@@Base+0xb3c>
   17da4:	pop	{r4, r5, r6, r7}
   17da8:	bx	lr
   17dac:	ldr	ip, [r6, #4]
   17db0:	mov	r0, r4
   17db4:	b	17d98 <fts_children@@Base+0xb94>
   17db8:	mov	r0, #0
   17dbc:	b	17da4 <fts_children@@Base+0xba0>
   17dc0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   17dc4:	mov	r7, r2
   17dc8:	ldr	r8, [r0]
   17dcc:	mov	r9, r0
   17dd0:	ldr	r2, [r0, #4]
   17dd4:	mov	r6, r1
   17dd8:	mov	r5, #0
   17ddc:	cmp	r2, r8
   17de0:	bls	17e30 <fts_children@@Base+0xc2c>
   17de4:	ldr	r3, [r8]
   17de8:	cmp	r3, #0
   17dec:	beq	17e24 <fts_children@@Base+0xc20>
   17df0:	mov	r0, r3
   17df4:	mov	r4, r8
   17df8:	b	17e00 <fts_children@@Base+0xbfc>
   17dfc:	ldr	r0, [r4]
   17e00:	mov	r1, r7
   17e04:	blx	r6
   17e08:	cmp	r0, #0
   17e0c:	beq	17e30 <fts_children@@Base+0xc2c>
   17e10:	ldr	r4, [r4, #4]
   17e14:	add	r5, r5, #1
   17e18:	cmp	r4, #0
   17e1c:	bne	17dfc <fts_children@@Base+0xbf8>
   17e20:	ldr	r2, [r9, #4]
   17e24:	add	r8, r8, #8
   17e28:	cmp	r2, r8
   17e2c:	bhi	17de4 <fts_children@@Base+0xbe0>
   17e30:	mov	r0, r5
   17e34:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17e38:	push	{r3, r4, r5, lr}
   17e3c:	mov	r5, r1
   17e40:	ldrb	r3, [r0]
   17e44:	cmp	r3, #0
   17e48:	beq	17e78 <fts_children@@Base+0xc74>
   17e4c:	mov	r4, r0
   17e50:	mov	r1, #0
   17e54:	rsb	r0, r1, r1, lsl #5
   17e58:	mov	r1, r5
   17e5c:	add	r0, r3, r0
   17e60:	bl	19124 <fts_children@@Base+0x1f20>
   17e64:	ldrb	r3, [r4, #1]!
   17e68:	cmp	r3, #0
   17e6c:	bne	17e54 <fts_children@@Base+0xc50>
   17e70:	mov	r0, r1
   17e74:	pop	{r3, r4, r5, pc}
   17e78:	mov	r1, r3
   17e7c:	b	17e70 <fts_children@@Base+0xc6c>
   17e80:	push	{r4}		; (str r4, [sp, #-4]!)
   17e84:	mov	ip, r0
   17e88:	ldr	r4, [pc, #24]	; 17ea8 <fts_children@@Base+0xca4>
   17e8c:	add	r4, pc, r4
   17e90:	ldm	r4!, {r0, r1, r2, r3}
   17e94:	ldr	r4, [r4]
   17e98:	stmia	ip!, {r0, r1, r2, r3}
   17e9c:	str	r4, [ip]
   17ea0:	pop	{r4}		; (ldr r4, [sp], #4)
   17ea4:	bx	lr
   17ea8:	andeq	r2, r0, r4, lsl #21
   17eac:	push	{r4, r5, r6, r7, r8, lr}
   17eb0:	subs	r8, r2, #0
   17eb4:	mov	r7, r0
   17eb8:	mov	r5, r1
   17ebc:	mov	r6, r3
   17ec0:	beq	17fb4 <fts_children@@Base+0xdb0>
   17ec4:	cmp	r6, #0
   17ec8:	beq	17fa8 <fts_children@@Base+0xda4>
   17ecc:	mov	r0, #40	; 0x28
   17ed0:	bl	1134c <malloc@plt>
   17ed4:	subs	r4, r0, #0
   17ed8:	beq	17fcc <fts_children@@Base+0xdc8>
   17edc:	cmp	r5, #0
   17ee0:	beq	17fc0 <fts_children@@Base+0xdbc>
   17ee4:	mov	r0, r4
   17ee8:	str	r5, [r0, #20]!
   17eec:	bl	177b8 <fts_children@@Base+0x5b4>
   17ef0:	cmp	r0, #0
   17ef4:	beq	17f98 <fts_children@@Base+0xd94>
   17ef8:	ldrb	r3, [r5, #16]
   17efc:	vldr	s15, [r5, #8]
   17f00:	cmp	r3, #0
   17f04:	bne	17f2c <fts_children@@Base+0xd28>
   17f08:	vmov	s14, r7
   17f0c:	vcvt.f32.u32	s13, s14
   17f10:	vldr	s14, [pc, #188]	; 17fd4 <fts_children@@Base+0xdd0>
   17f14:	vdiv.f32	s15, s13, s15
   17f18:	vcmpe.f32	s15, s14
   17f1c:	vmrs	APSR_nzcv, fpscr
   17f20:	bge	17f90 <fts_children@@Base+0xd8c>
   17f24:	vcvt.u32.f32	s15, s15
   17f28:	vmov	r7, s15
   17f2c:	mov	r0, r7
   17f30:	bl	175b8 <fts_children@@Base+0x3b4>
   17f34:	cmn	r0, #-1073741823	; 0xc0000001
   17f38:	mov	r5, r0
   17f3c:	bhi	17f90 <fts_children@@Base+0xd8c>
   17f40:	cmp	r0, #0
   17f44:	str	r0, [r4, #8]
   17f48:	beq	17f98 <fts_children@@Base+0xd94>
   17f4c:	mov	r1, #8
   17f50:	bl	11208 <calloc@plt>
   17f54:	cmp	r0, #0
   17f58:	str	r0, [r4]
   17f5c:	beq	17f98 <fts_children@@Base+0xd94>
   17f60:	ldr	r3, [sp, #24]
   17f64:	mov	r2, #0
   17f68:	add	r5, r0, r5, lsl #3
   17f6c:	str	r8, [r4, #24]
   17f70:	str	r5, [r4, #4]
   17f74:	mov	r0, r4
   17f78:	str	r6, [r4, #28]
   17f7c:	str	r3, [r4, #32]
   17f80:	str	r2, [r4, #12]
   17f84:	str	r2, [r4, #16]
   17f88:	str	r2, [r4, #36]	; 0x24
   17f8c:	pop	{r4, r5, r6, r7, r8, pc}
   17f90:	mov	r3, #0
   17f94:	str	r3, [r4, #8]
   17f98:	mov	r0, r4
   17f9c:	bl	11250 <free@plt>
   17fa0:	mov	r0, #0
   17fa4:	pop	{r4, r5, r6, r7, r8, pc}
   17fa8:	ldr	r6, [pc, #40]	; 17fd8 <fts_children@@Base+0xdd4>
   17fac:	add	r6, pc, r6
   17fb0:	b	17ecc <fts_children@@Base+0xcc8>
   17fb4:	ldr	r8, [pc, #32]	; 17fdc <fts_children@@Base+0xdd8>
   17fb8:	add	r8, pc, r8
   17fbc:	b	17ec4 <fts_children@@Base+0xcc0>
   17fc0:	ldr	r5, [pc, #24]	; 17fe0 <fts_children@@Base+0xddc>
   17fc4:	add	r5, pc, r5
   17fc8:	b	17ee4 <fts_children@@Base+0xce0>
   17fcc:	mov	r0, r4
   17fd0:	pop	{r4, r5, r6, r7, r8, pc}
   17fd4:	svcmi	0x00800000
   17fd8:			; <UNDEFINED> instruction: 0xfffff6c4
   17fdc:			; <UNDEFINED> instruction: 0xfffff6a4
   17fe0:	andeq	r2, r0, ip, asr #18
   17fe4:	push	{r4, r5, r6, r7, r8, lr}
   17fe8:	mov	r5, r0
   17fec:	ldr	r7, [r0]
   17ff0:	ldr	r3, [r0, #4]
   17ff4:	cmp	r7, r3
   17ff8:	addcc	r7, r7, #8
   17ffc:	movcc	r6, #0
   18000:	bcs	18080 <fts_children@@Base+0xe7c>
   18004:	ldr	r2, [r7, #-8]
   18008:	mov	r8, r7
   1800c:	cmp	r2, #0
   18010:	beq	18074 <fts_children@@Base+0xe70>
   18014:	ldr	r4, [r7, #-4]
   18018:	cmp	r4, #0
   1801c:	beq	18054 <fts_children@@Base+0xe50>
   18020:	ldr	r3, [r5, #32]
   18024:	cmp	r3, #0
   18028:	beq	18034 <fts_children@@Base+0xe30>
   1802c:	ldr	r0, [r4]
   18030:	blx	r3
   18034:	ldr	r3, [r4, #4]
   18038:	str	r6, [r4]
   1803c:	ldr	r2, [r5, #36]	; 0x24
   18040:	cmp	r3, #0
   18044:	str	r2, [r4, #4]
   18048:	str	r4, [r5, #36]	; 0x24
   1804c:	mov	r4, r3
   18050:	bne	18020 <fts_children@@Base+0xe1c>
   18054:	ldr	r3, [r5, #32]
   18058:	cmp	r3, #0
   1805c:	beq	18068 <fts_children@@Base+0xe64>
   18060:	ldr	r0, [r7, #-8]
   18064:	blx	r3
   18068:	str	r6, [r7, #-8]
   1806c:	str	r6, [r7, #-4]
   18070:	ldr	r3, [r5, #4]
   18074:	cmp	r3, r8
   18078:	add	r7, r7, #8
   1807c:	bhi	18004 <fts_children@@Base+0xe00>
   18080:	mov	r3, #0
   18084:	str	r3, [r5, #12]
   18088:	str	r3, [r5, #16]
   1808c:	pop	{r4, r5, r6, r7, r8, pc}
   18090:	push	{r3, r4, r5, r6, r7, lr}
   18094:	mov	r5, r0
   18098:	ldr	r3, [r0, #32]
   1809c:	cmp	r3, #0
   180a0:	beq	180b0 <fts_children@@Base+0xeac>
   180a4:	ldr	r3, [r0, #16]
   180a8:	cmp	r3, #0
   180ac:	bne	1812c <fts_children@@Base+0xf28>
   180b0:	ldr	r3, [r5, #4]
   180b4:	ldr	r6, [r5]
   180b8:	cmp	r6, r3
   180bc:	bcs	180f8 <fts_children@@Base+0xef4>
   180c0:	add	r6, r6, #8
   180c4:	ldr	r0, [r6, #-4]
   180c8:	mov	r7, r6
   180cc:	cmp	r0, #0
   180d0:	beq	180ec <fts_children@@Base+0xee8>
   180d4:	ldr	r4, [r0, #4]
   180d8:	bl	11250 <free@plt>
   180dc:	cmp	r4, #0
   180e0:	mov	r0, r4
   180e4:	bne	180d4 <fts_children@@Base+0xed0>
   180e8:	ldr	r3, [r5, #4]
   180ec:	cmp	r7, r3
   180f0:	add	r6, r6, #8
   180f4:	bcc	180c4 <fts_children@@Base+0xec0>
   180f8:	ldr	r0, [r5, #36]	; 0x24
   180fc:	cmp	r0, #0
   18100:	beq	18118 <fts_children@@Base+0xf14>
   18104:	ldr	r4, [r0, #4]
   18108:	bl	11250 <free@plt>
   1810c:	cmp	r4, #0
   18110:	mov	r0, r4
   18114:	bne	18104 <fts_children@@Base+0xf00>
   18118:	ldr	r0, [r5]
   1811c:	bl	11250 <free@plt>
   18120:	mov	r0, r5
   18124:	pop	{r3, r4, r5, r6, r7, lr}
   18128:	b	11250 <free@plt>
   1812c:	ldr	r6, [r0]
   18130:	ldr	r3, [r0, #4]
   18134:	cmp	r6, r3
   18138:	bcs	180f8 <fts_children@@Base+0xef4>
   1813c:	ldr	r0, [r6]
   18140:	cmp	r0, #0
   18144:	movne	r4, r6
   18148:	bne	18154 <fts_children@@Base+0xf50>
   1814c:	b	1816c <fts_children@@Base+0xf68>
   18150:	ldr	r0, [r4]
   18154:	ldr	r3, [r5, #32]
   18158:	blx	r3
   1815c:	ldr	r4, [r4, #4]
   18160:	cmp	r4, #0
   18164:	bne	18150 <fts_children@@Base+0xf4c>
   18168:	ldr	r3, [r5, #4]
   1816c:	add	r6, r6, #8
   18170:	cmp	r3, r6
   18174:	bhi	1813c <fts_children@@Base+0xf38>
   18178:	b	180b4 <fts_children@@Base+0xeb0>
   1817c:	ldr	r3, [pc, #392]	; 1830c <fts_children@@Base+0x1108>
   18180:	ldr	r2, [pc, #392]	; 18310 <fts_children@@Base+0x110c>
   18184:	add	r3, pc, r3
   18188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1818c:	sub	sp, sp, #52	; 0x34
   18190:	ldr	r5, [r0, #20]
   18194:	mov	r4, r0
   18198:	ldr	r6, [r3, r2]
   1819c:	vldr	s15, [r5, #8]
   181a0:	ldrb	r2, [r5, #16]
   181a4:	ldr	r3, [r6]
   181a8:	cmp	r2, #0
   181ac:	str	r3, [sp, #44]	; 0x2c
   181b0:	bne	181d8 <fts_children@@Base+0xfd4>
   181b4:	vmov	s14, r1
   181b8:	vcvt.f32.u32	s13, s14
   181bc:	vldr	s14, [pc, #324]	; 18308 <fts_children@@Base+0x1104>
   181c0:	vdiv.f32	s15, s13, s15
   181c4:	vcmpe.f32	s15, s14
   181c8:	vmrs	APSR_nzcv, fpscr
   181cc:	bge	182d0 <fts_children@@Base+0x10cc>
   181d0:	vcvt.u32.f32	s15, s15
   181d4:	vmov	r1, s15
   181d8:	mov	r0, r1
   181dc:	bl	175b8 <fts_children@@Base+0x3b4>
   181e0:	sub	r3, r0, #1
   181e4:	mov	r7, r0
   181e8:	cmn	r3, #-1073741822	; 0xc0000002
   181ec:	bhi	182d0 <fts_children@@Base+0x10cc>
   181f0:	ldr	r3, [r4, #8]
   181f4:	cmp	r3, r0
   181f8:	beq	182b0 <fts_children@@Base+0x10ac>
   181fc:	mov	r1, #8
   18200:	bl	11208 <calloc@plt>
   18204:	cmp	r0, #0
   18208:	mov	r3, r0
   1820c:	str	r0, [sp, #4]
   18210:	beq	182d0 <fts_children@@Base+0x10cc>
   18214:	ldr	fp, [r4, #24]
   18218:	add	r8, sp, #4
   1821c:	ldr	sl, [r4, #28]
   18220:	mov	ip, #0
   18224:	ldr	r9, [r4, #32]
   18228:	mov	r0, r8
   1822c:	ldr	lr, [r4, #36]	; 0x24
   18230:	mov	r2, ip
   18234:	mov	r1, r4
   18238:	add	r3, r3, r7, lsl #3
   1823c:	str	r5, [sp, #24]
   18240:	str	r7, [sp, #12]
   18244:	str	r3, [sp, #8]
   18248:	str	fp, [sp, #28]
   1824c:	str	sl, [sp, #32]
   18250:	str	r9, [sp, #36]	; 0x24
   18254:	str	lr, [sp, #40]	; 0x28
   18258:	str	ip, [sp, #16]
   1825c:	str	ip, [sp, #20]
   18260:	bl	17878 <fts_children@@Base+0x674>
   18264:	subs	r5, r0, #0
   18268:	bne	182d8 <fts_children@@Base+0x10d4>
   1826c:	ldr	r3, [sp, #40]	; 0x28
   18270:	mov	r0, r4
   18274:	mov	r1, r8
   18278:	mov	r2, #1
   1827c:	str	r3, [r4, #36]	; 0x24
   18280:	bl	17878 <fts_children@@Base+0x674>
   18284:	cmp	r0, #0
   18288:	beq	18304 <fts_children@@Base+0x1100>
   1828c:	mov	r0, r4
   18290:	mov	r1, r8
   18294:	mov	r2, r5
   18298:	bl	17878 <fts_children@@Base+0x674>
   1829c:	cmp	r0, #0
   182a0:	beq	18304 <fts_children@@Base+0x1100>
   182a4:	ldr	r0, [sp, #4]
   182a8:	bl	11250 <free@plt>
   182ac:	b	182b4 <fts_children@@Base+0x10b0>
   182b0:	mov	r5, #1
   182b4:	ldr	r1, [sp, #44]	; 0x2c
   182b8:	mov	r0, r5
   182bc:	ldr	r3, [r6]
   182c0:	cmp	r1, r3
   182c4:	bne	18300 <fts_children@@Base+0x10fc>
   182c8:	add	sp, sp, #52	; 0x34
   182cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   182d0:	mov	r5, #0
   182d4:	b	182b4 <fts_children@@Base+0x10b0>
   182d8:	ldr	r0, [r4]
   182dc:	bl	11250 <free@plt>
   182e0:	add	r0, sp, #8
   182e4:	ldr	ip, [sp, #4]
   182e8:	ldm	r0, {r0, r1, r2}
   182ec:	ldr	r3, [sp, #40]	; 0x28
   182f0:	str	ip, [r4]
   182f4:	stmib	r4, {r0, r1, r2}
   182f8:	str	r3, [r4, #36]	; 0x24
   182fc:	b	182b4 <fts_children@@Base+0x10b0>
   18300:	bl	11298 <__stack_chk_fail@plt>
   18304:	bl	114e4 <abort@plt>
   18308:	svcmi	0x00800000
   1830c:	andeq	r2, r1, r4, ror lr
   18310:	andeq	r0, r0, r4, lsr #2
   18314:	ldr	r3, [pc, #428]	; 184c8 <fts_children@@Base+0x12c4>
   18318:	ldr	ip, [pc, #428]	; 184cc <fts_children@@Base+0x12c8>
   1831c:	add	r3, pc, r3
   18320:	push	{r4, r5, r6, r7, r8, lr}
   18324:	subs	r8, r1, #0
   18328:	ldr	r4, [r3, ip]
   1832c:	sub	sp, sp, #8
   18330:	mov	r5, r2
   18334:	mov	r6, r0
   18338:	ldr	r3, [r4]
   1833c:	str	r3, [sp, #4]
   18340:	beq	18480 <fts_children@@Base+0x127c>
   18344:	mov	r3, #0
   18348:	mov	r2, sp
   1834c:	bl	176bc <fts_children@@Base+0x4b8>
   18350:	cmp	r0, #0
   18354:	beq	18380 <fts_children@@Base+0x117c>
   18358:	cmp	r5, #0
   1835c:	moveq	r0, r5
   18360:	strne	r0, [r5]
   18364:	movne	r0, #0
   18368:	ldr	r2, [sp, #4]
   1836c:	ldr	r3, [r4]
   18370:	cmp	r2, r3
   18374:	bne	184c0 <fts_children@@Base+0x12bc>
   18378:	add	sp, sp, #8
   1837c:	pop	{r4, r5, r6, r7, r8, pc}
   18380:	vldr	s11, [r6, #8]
   18384:	vcvt.f32.u32	s14, s11
   18388:	ldr	r3, [r6, #20]
   1838c:	vldr	s15, [r3, #8]
   18390:	vldr	s13, [r6, #12]
   18394:	vmul.f32	s15, s14, s15
   18398:	vcvt.f32.u32	s14, s13
   1839c:	vcmpe.f32	s14, s15
   183a0:	vmrs	APSR_nzcv, fpscr
   183a4:	bgt	183f4 <fts_children@@Base+0x11f0>
   183a8:	ldr	r3, [sp]
   183ac:	ldr	r2, [r3]
   183b0:	cmp	r2, #0
   183b4:	beq	18484 <fts_children@@Base+0x1280>
   183b8:	ldr	r3, [r6, #36]	; 0x24
   183bc:	cmp	r3, #0
   183c0:	beq	184a8 <fts_children@@Base+0x12a4>
   183c4:	ldr	r2, [r3, #4]
   183c8:	str	r2, [r6, #36]	; 0x24
   183cc:	str	r8, [r3]
   183d0:	mov	r0, #1
   183d4:	ldr	r2, [sp]
   183d8:	ldr	r1, [r2, #4]
   183dc:	str	r1, [r3, #4]
   183e0:	str	r3, [r2, #4]
   183e4:	ldr	r3, [r6, #16]
   183e8:	add	r3, r3, r0
   183ec:	str	r3, [r6, #16]
   183f0:	b	18368 <fts_children@@Base+0x1164>
   183f4:	add	r0, r6, #20
   183f8:	bl	177b8 <fts_children@@Base+0x5b4>
   183fc:	vldr	s11, [r6, #8]
   18400:	vcvt.f32.u32	s15, s11
   18404:	ldr	r3, [r6, #20]
   18408:	vldr	s14, [r3, #8]
   1840c:	vldr	s11, [r6, #12]
   18410:	vmul.f32	s13, s14, s15
   18414:	vcvt.f32.u32	s12, s11
   18418:	vcmpe.f32	s12, s13
   1841c:	vmrs	APSR_nzcv, fpscr
   18420:	ble	183a8 <fts_children@@Base+0x11a4>
   18424:	ldrb	r2, [r3, #16]
   18428:	cmp	r2, #0
   1842c:	vldreq	s13, [r3, #12]
   18430:	vldrne	s14, [r3, #12]
   18434:	vmuleq.f32	s15, s15, s13
   18438:	vmul.f32	s15, s14, s15
   1843c:	vldr	s14, [pc, #128]	; 184c4 <fts_children@@Base+0x12c0>
   18440:	vcmpe.f32	s15, s14
   18444:	vmrs	APSR_nzcv, fpscr
   18448:	bge	184b8 <fts_children@@Base+0x12b4>
   1844c:	vcvt.u32.f32	s15, s15
   18450:	mov	r0, r6
   18454:	vmov	r1, s15
   18458:	bl	1817c <fts_children@@Base+0xf78>
   1845c:	cmp	r0, #0
   18460:	beq	184b8 <fts_children@@Base+0x12b4>
   18464:	mov	r2, sp
   18468:	mov	r0, r6
   1846c:	mov	r1, r8
   18470:	mov	r3, #0
   18474:	bl	176bc <fts_children@@Base+0x4b8>
   18478:	cmp	r0, #0
   1847c:	beq	183a8 <fts_children@@Base+0x11a4>
   18480:	bl	114e4 <abort@plt>
   18484:	str	r8, [r3]
   18488:	mov	r0, #1
   1848c:	ldr	r2, [r6, #16]
   18490:	ldr	r3, [r6, #12]
   18494:	add	r2, r2, r0
   18498:	str	r2, [r6, #16]
   1849c:	add	r3, r3, r0
   184a0:	str	r3, [r6, #12]
   184a4:	b	18368 <fts_children@@Base+0x1164>
   184a8:	mov	r0, #8
   184ac:	bl	1134c <malloc@plt>
   184b0:	subs	r3, r0, #0
   184b4:	bne	183cc <fts_children@@Base+0x11c8>
   184b8:	mvn	r0, #0
   184bc:	b	18368 <fts_children@@Base+0x1164>
   184c0:	bl	11298 <__stack_chk_fail@plt>
   184c4:	svcmi	0x00800000
   184c8:	ldrdeq	r2, [r1], -ip
   184cc:	andeq	r0, r0, r4, lsr #2
   184d0:	b	18314 <fts_children@@Base+0x1110>
   184d4:	ldr	r3, [pc, #100]	; 18540 <fts_children@@Base+0x133c>
   184d8:	ldr	ip, [pc, #100]	; 18544 <fts_children@@Base+0x1340>
   184dc:	add	r3, pc, r3
   184e0:	push	{r4, r5, lr}
   184e4:	sub	sp, sp, #12
   184e8:	ldr	r4, [r3, ip]
   184ec:	mov	r5, r1
   184f0:	mov	r2, sp
   184f4:	ldr	r3, [r4]
   184f8:	str	r3, [sp, #4]
   184fc:	bl	18314 <fts_children@@Base+0x1110>
   18500:	cmn	r0, #1
   18504:	beq	18534 <fts_children@@Base+0x1330>
   18508:	cmp	r0, #0
   1850c:	movne	r0, r5
   18510:	beq	1852c <fts_children@@Base+0x1328>
   18514:	ldr	r2, [sp, #4]
   18518:	ldr	r3, [r4]
   1851c:	cmp	r2, r3
   18520:	bne	1853c <fts_children@@Base+0x1338>
   18524:	add	sp, sp, #12
   18528:	pop	{r4, r5, pc}
   1852c:	ldr	r0, [sp]
   18530:	b	18514 <fts_children@@Base+0x1310>
   18534:	mov	r0, #0
   18538:	b	18514 <fts_children@@Base+0x1310>
   1853c:	bl	11298 <__stack_chk_fail@plt>
   18540:	andeq	r2, r1, ip, lsl fp
   18544:	andeq	r0, r0, r4, lsr #2
   18548:	ldr	ip, [pc, #304]	; 18680 <fts_children@@Base+0x147c>
   1854c:	mov	r3, #1
   18550:	push	{r4, r5, r6, r7, lr}
   18554:	add	ip, pc, ip
   18558:	ldr	lr, [pc, #292]	; 18684 <fts_children@@Base+0x1480>
   1855c:	sub	sp, sp, #12
   18560:	mov	r4, r0
   18564:	mov	r2, sp
   18568:	ldr	r5, [ip, lr]
   1856c:	ldr	ip, [r5]
   18570:	str	ip, [sp, #4]
   18574:	bl	176bc <fts_children@@Base+0x4b8>
   18578:	subs	r6, r0, #0
   1857c:	beq	1859c <fts_children@@Base+0x1398>
   18580:	ldr	r3, [sp]
   18584:	ldr	r2, [r4, #16]
   18588:	sub	r2, r2, #1
   1858c:	str	r2, [r4, #16]
   18590:	ldr	r3, [r3]
   18594:	cmp	r3, #0
   18598:	beq	185b8 <fts_children@@Base+0x13b4>
   1859c:	ldr	r2, [sp, #4]
   185a0:	mov	r0, r6
   185a4:	ldr	r3, [r5]
   185a8:	cmp	r2, r3
   185ac:	bne	1867c <fts_children@@Base+0x1478>
   185b0:	add	sp, sp, #12
   185b4:	pop	{r4, r5, r6, r7, pc}
   185b8:	vldr	s12, [r4, #8]
   185bc:	vcvt.f32.u32	s14, s12
   185c0:	ldr	r3, [r4, #12]
   185c4:	ldr	r2, [r4, #20]
   185c8:	sub	r3, r3, #1
   185cc:	str	r3, [r4, #12]
   185d0:	vldr	s15, [r2]
   185d4:	vmov	s13, r3
   185d8:	vmul.f32	s15, s14, s15
   185dc:	vcvt.f32.u32	s14, s13
   185e0:	vcmpe.f32	s14, s15
   185e4:	vmrs	APSR_nzcv, fpscr
   185e8:	bpl	1859c <fts_children@@Base+0x1398>
   185ec:	add	r0, r4, #20
   185f0:	bl	177b8 <fts_children@@Base+0x5b4>
   185f4:	vldr	s12, [r4, #8]
   185f8:	vcvt.f32.u32	s15, s12
   185fc:	ldr	r3, [r4, #20]
   18600:	vldr	s14, [r3]
   18604:	vldr	s12, [r4, #12]
   18608:	vmul.f32	s14, s15, s14
   1860c:	vcvt.f32.u32	s13, s12
   18610:	vcmpe.f32	s13, s14
   18614:	vmrs	APSR_nzcv, fpscr
   18618:	bpl	1859c <fts_children@@Base+0x1398>
   1861c:	vldr	s14, [r3, #4]
   18620:	vmul.f32	s15, s15, s14
   18624:	ldrb	r2, [r3, #16]
   18628:	mov	r0, r4
   1862c:	cmp	r2, #0
   18630:	vldreq	s14, [r3, #8]
   18634:	vmuleq.f32	s15, s15, s14
   18638:	vcvt.u32.f32	s15, s15
   1863c:	vmov	r1, s15
   18640:	bl	1817c <fts_children@@Base+0xf78>
   18644:	cmp	r0, #0
   18648:	bne	1859c <fts_children@@Base+0x1398>
   1864c:	ldr	r0, [r4, #36]	; 0x24
   18650:	cmp	r0, #0
   18654:	bne	18660 <fts_children@@Base+0x145c>
   18658:	b	18670 <fts_children@@Base+0x146c>
   1865c:	mov	r0, r7
   18660:	ldr	r7, [r0, #4]
   18664:	bl	11250 <free@plt>
   18668:	cmp	r7, #0
   1866c:	bne	1865c <fts_children@@Base+0x1458>
   18670:	mov	r3, #0
   18674:	str	r3, [r4, #36]	; 0x24
   18678:	b	1859c <fts_children@@Base+0x1398>
   1867c:	bl	11298 <__stack_chk_fail@plt>
   18680:	andeq	r2, r1, r4, lsr #21
   18684:	andeq	r0, r0, r4, lsr #2
   18688:	mov	r3, #0
   1868c:	mov	r2, #1
   18690:	str	r1, [r0]
   18694:	str	r1, [r0, #4]
   18698:	str	r1, [r0, #8]
   1869c:	str	r1, [r0, #12]
   186a0:	str	r1, [r0, #16]
   186a4:	strb	r2, [r0, #28]
   186a8:	str	r3, [r0, #20]
   186ac:	str	r3, [r0, #24]
   186b0:	bx	lr
   186b4:	ldrb	r0, [r0, #28]
   186b8:	bx	lr
   186bc:	ldrb	ip, [r0, #28]
   186c0:	mov	r3, r0
   186c4:	ldr	r2, [r0, #20]
   186c8:	eor	ip, ip, #1
   186cc:	add	r2, ip, r2
   186d0:	and	r2, r2, #3
   186d4:	ldr	r0, [r0, r2, lsl #2]
   186d8:	str	r1, [r3, r2, lsl #2]
   186dc:	ldr	r1, [r3, #24]
   186e0:	str	r2, [r3, #20]
   186e4:	cmp	r1, r2
   186e8:	mov	r2, #0
   186ec:	addeq	r1, ip, r1
   186f0:	strb	r2, [r3, #28]
   186f4:	andeq	r1, r1, #3
   186f8:	streq	r1, [r3, #24]
   186fc:	bx	lr
   18700:	push	{r4, lr}
   18704:	mov	r4, r0
   18708:	bl	186b4 <fts_children@@Base+0x14b0>
   1870c:	cmp	r0, #0
   18710:	bne	18744 <fts_children@@Base+0x1540>
   18714:	ldr	r3, [r4, #20]
   18718:	ldr	r2, [r4, #16]
   1871c:	ldr	r0, [r4, r3, lsl #2]
   18720:	str	r2, [r4, r3, lsl #2]
   18724:	ldr	r2, [r4, #24]
   18728:	cmp	r3, r2
   1872c:	addne	r3, r3, #3
   18730:	moveq	r3, #1
   18734:	andne	r3, r3, #3
   18738:	strbeq	r3, [r4, #28]
   1873c:	strne	r3, [r4, #20]
   18740:	pop	{r4, pc}
   18744:	bl	114e4 <abort@plt>
   18748:	ldr	r3, [pc, #984]	; 18b28 <fts_children@@Base+0x1924>
   1874c:	mov	r0, #14
   18750:	ldr	r2, [pc, #980]	; 18b2c <fts_children@@Base+0x1928>
   18754:	add	r3, pc, r3
   18758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1875c:	sub	sp, sp, #132	; 0x84
   18760:	ldr	r6, [r3, r2]
   18764:	ldr	r3, [r6]
   18768:	str	r3, [sp, #124]	; 0x7c
   1876c:	bl	1146c <nl_langinfo@plt>
   18770:	subs	r5, r0, #0
   18774:	beq	18828 <fts_children@@Base+0x1624>
   18778:	ldr	r3, [pc, #944]	; 18b30 <fts_children@@Base+0x192c>
   1877c:	ldr	r4, [pc, r3]
   18780:	cmp	r4, #0
   18784:	beq	18834 <fts_children@@Base+0x1630>
   18788:	ldrb	r7, [r4]
   1878c:	cmp	r7, #0
   18790:	bne	187c4 <fts_children@@Base+0x15c0>
   18794:	b	187fc <fts_children@@Base+0x15f8>
   18798:	mov	r0, r4
   1879c:	bl	113a0 <strlen@plt>
   187a0:	add	r0, r0, #1
   187a4:	add	r7, r4, r0
   187a8:	mov	r0, r7
   187ac:	bl	113a0 <strlen@plt>
   187b0:	add	r0, r0, #1
   187b4:	add	r4, r7, r0
   187b8:	ldrb	r7, [r7, r0]
   187bc:	cmp	r7, #0
   187c0:	beq	187fc <fts_children@@Base+0x15f8>
   187c4:	mov	r0, r5
   187c8:	mov	r1, r4
   187cc:	bl	1122c <strcmp@plt>
   187d0:	cmp	r0, #0
   187d4:	beq	187ec <fts_children@@Base+0x15e8>
   187d8:	cmp	r7, #42	; 0x2a
   187dc:	bne	18798 <fts_children@@Base+0x1594>
   187e0:	ldrb	r3, [r4, #1]
   187e4:	cmp	r3, #0
   187e8:	bne	18798 <fts_children@@Base+0x1594>
   187ec:	mov	r0, r4
   187f0:	bl	113a0 <strlen@plt>
   187f4:	add	r0, r0, #1
   187f8:	add	r5, r4, r0
   187fc:	ldrb	r3, [r5]
   18800:	cmp	r3, #0
   18804:	ldreq	r5, [pc, #808]	; 18b34 <fts_children@@Base+0x1930>
   18808:	addeq	r5, pc, r5
   1880c:	ldr	r2, [sp, #124]	; 0x7c
   18810:	mov	r0, r5
   18814:	ldr	r3, [r6]
   18818:	cmp	r2, r3
   1881c:	bne	18afc <fts_children@@Base+0x18f8>
   18820:	add	sp, sp, #132	; 0x84
   18824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18828:	ldr	r5, [pc, #776]	; 18b38 <fts_children@@Base+0x1934>
   1882c:	add	r5, pc, r5
   18830:	b	18778 <fts_children@@Base+0x1574>
   18834:	ldr	r0, [pc, #768]	; 18b3c <fts_children@@Base+0x1938>
   18838:	add	r0, pc, r0
   1883c:	bl	11340 <getenv@plt>
   18840:	subs	r8, r0, #0
   18844:	beq	18ad4 <fts_children@@Base+0x18d0>
   18848:	ldrb	r3, [r8]
   1884c:	cmp	r3, #0
   18850:	beq	18a68 <fts_children@@Base+0x1864>
   18854:	bl	113a0 <strlen@plt>
   18858:	subs	sl, r0, #0
   1885c:	subne	r3, sl, #1
   18860:	bne	18a78 <fts_children@@Base+0x1874>
   18864:	mov	r9, #0
   18868:	mov	fp, r9
   1886c:	add	r9, sl, r9
   18870:	add	r0, r9, #14
   18874:	bl	1134c <malloc@plt>
   18878:	subs	r7, r0, #0
   1887c:	beq	18ac8 <fts_children@@Base+0x18c4>
   18880:	mov	r1, r8
   18884:	mov	r2, sl
   18888:	bl	11268 <memcpy@plt>
   1888c:	cmp	fp, #0
   18890:	add	ip, r7, r9
   18894:	movne	r3, #47	; 0x2f
   18898:	strbne	r3, [r7, sl]
   1889c:	ldr	r3, [pc, #668]	; 18b40 <fts_children@@Base+0x193c>
   188a0:	add	r3, pc, r3
   188a4:	ldm	r3!, {r0, r1, r2}
   188a8:	ldrh	r3, [r3]
   188ac:	str	r0, [r7, r9]
   188b0:	mov	r0, r7
   188b4:	str	r1, [ip, #4]
   188b8:	mov	r1, #32768	; 0x8000
   188bc:	strh	r3, [ip, #12]
   188c0:	str	r2, [ip, #8]
   188c4:	bl	11334 <open64@plt>
   188c8:	subs	r8, r0, #0
   188cc:	blt	18a90 <fts_children@@Base+0x188c>
   188d0:	ldr	r1, [pc, #620]	; 18b44 <fts_children@@Base+0x1940>
   188d4:	add	r1, pc, r1
   188d8:	bl	111f0 <fdopen@plt>
   188dc:	subs	fp, r0, #0
   188e0:	beq	18ae8 <fts_children@@Base+0x18e4>
   188e4:	ldr	r0, [pc, #604]	; 18b48 <fts_children@@Base+0x1944>
   188e8:	add	sl, sp, #20
   188ec:	add	r9, sp, #72	; 0x48
   188f0:	mov	r8, #0
   188f4:	add	r0, pc, r0
   188f8:	str	r0, [sp, #12]
   188fc:	ldr	r3, [fp, #4]
   18900:	ldr	r2, [fp, #8]
   18904:	cmp	r3, r2
   18908:	bcs	189f4 <fts_children@@Base+0x17f0>
   1890c:	add	r2, r3, #1
   18910:	str	r2, [fp, #4]
   18914:	ldrb	r0, [r3]
   18918:	cmp	r0, #32
   1891c:	beq	188fc <fts_children@@Base+0x16f8>
   18920:	sub	r3, r0, #9
   18924:	cmp	r3, #1
   18928:	bls	188fc <fts_children@@Base+0x16f8>
   1892c:	cmp	r0, #35	; 0x23
   18930:	beq	18a08 <fts_children@@Base+0x1804>
   18934:	mov	r1, fp
   18938:	bl	113b8 <ungetc@plt>
   1893c:	mov	r0, fp
   18940:	ldr	r1, [sp, #12]
   18944:	mov	r2, sl
   18948:	mov	r3, r9
   1894c:	bl	11400 <fscanf@plt>
   18950:	cmp	r0, #1
   18954:	ble	18a38 <fts_children@@Base+0x1834>
   18958:	mov	r0, sl
   1895c:	bl	113a0 <strlen@plt>
   18960:	str	r0, [sp, #8]
   18964:	mov	r0, r9
   18968:	bl	113a0 <strlen@plt>
   1896c:	cmp	r8, #0
   18970:	mov	r2, r0
   18974:	bne	18a9c <fts_children@@Base+0x1898>
   18978:	ldr	r3, [sp, #8]
   1897c:	str	r2, [sp]
   18980:	add	r8, r0, r3
   18984:	add	r0, r8, #3
   18988:	add	r8, r8, #2
   1898c:	bl	1134c <malloc@plt>
   18990:	ldr	r2, [sp]
   18994:	mov	r3, r0
   18998:	cmp	r3, #0
   1899c:	beq	18b00 <fts_children@@Base+0x18fc>
   189a0:	ldr	r0, [sp, #8]
   189a4:	movw	r1, #65534	; 0xfffe
   189a8:	movt	r1, #65535	; 0xffff
   189ac:	rsb	r2, r2, r8
   189b0:	rsb	r1, r0, r1
   189b4:	stm	sp, {r2, r3}
   189b8:	add	r0, r1, r2
   189bc:	mov	r1, sl
   189c0:	add	r0, r3, r0
   189c4:	mov	r4, r3
   189c8:	bl	11304 <strcpy@plt>
   189cc:	ldr	r2, [sp]
   189d0:	ldr	r3, [sp, #4]
   189d4:	mov	r1, r9
   189d8:	sub	r0, r2, #1
   189dc:	add	r0, r3, r0
   189e0:	bl	11304 <strcpy@plt>
   189e4:	ldr	r3, [fp, #4]
   189e8:	ldr	r2, [fp, #8]
   189ec:	cmp	r3, r2
   189f0:	bcc	1890c <fts_children@@Base+0x1708>
   189f4:	mov	r0, fp
   189f8:	bl	11448 <__uflow@plt>
   189fc:	cmn	r0, #1
   18a00:	beq	18a38 <fts_children@@Base+0x1834>
   18a04:	b	18918 <fts_children@@Base+0x1714>
   18a08:	ldr	r3, [fp, #4]
   18a0c:	ldr	r2, [fp, #8]
   18a10:	cmp	r3, r2
   18a14:	bcs	18b1c <fts_children@@Base+0x1918>
   18a18:	add	r2, r3, #1
   18a1c:	str	r2, [fp, #4]
   18a20:	ldrb	r0, [r3]
   18a24:	cmp	r0, #10
   18a28:	cmnne	r0, #1
   18a2c:	bne	18a08 <fts_children@@Base+0x1804>
   18a30:	cmn	r0, #1
   18a34:	bne	188fc <fts_children@@Base+0x16f8>
   18a38:	mov	r0, fp
   18a3c:	bl	18c1c <fts_children@@Base+0x1a18>
   18a40:	cmp	r8, #0
   18a44:	beq	18a90 <fts_children@@Base+0x188c>
   18a48:	mov	r3, #0
   18a4c:	strb	r3, [r4, r8]
   18a50:	mov	r0, r7
   18a54:	bl	11250 <free@plt>
   18a58:	ldr	r3, [pc, #236]	; 18b4c <fts_children@@Base+0x1948>
   18a5c:	add	r3, pc, r3
   18a60:	str	r4, [r3]
   18a64:	b	18788 <fts_children@@Base+0x1584>
   18a68:	ldr	r8, [pc, #224]	; 18b50 <fts_children@@Base+0x194c>
   18a6c:	mov	r3, #7
   18a70:	mov	sl, #8
   18a74:	add	r8, pc, r8
   18a78:	ldrb	r3, [r8, r3]
   18a7c:	cmp	r3, #47	; 0x2f
   18a80:	movne	r9, #1
   18a84:	movne	fp, r9
   18a88:	bne	1886c <fts_children@@Base+0x1668>
   18a8c:	b	18864 <fts_children@@Base+0x1660>
   18a90:	ldr	r4, [pc, #188]	; 18b54 <fts_children@@Base+0x1950>
   18a94:	add	r4, pc, r4
   18a98:	b	18a50 <fts_children@@Base+0x184c>
   18a9c:	ldr	r0, [sp, #8]
   18aa0:	str	r2, [sp]
   18aa4:	add	r3, r0, r2
   18aa8:	mov	r0, r4
   18aac:	add	r8, r3, r8
   18ab0:	add	r1, r8, #3
   18ab4:	add	r8, r8, #2
   18ab8:	bl	112a4 <realloc@plt>
   18abc:	ldr	r2, [sp]
   18ac0:	mov	r3, r0
   18ac4:	b	18998 <fts_children@@Base+0x1794>
   18ac8:	ldr	r4, [pc, #136]	; 18b58 <fts_children@@Base+0x1954>
   18acc:	add	r4, pc, r4
   18ad0:	b	18a58 <fts_children@@Base+0x1854>
   18ad4:	ldr	r8, [pc, #128]	; 18b5c <fts_children@@Base+0x1958>
   18ad8:	mov	r3, #7
   18adc:	mov	sl, #8
   18ae0:	add	r8, pc, r8
   18ae4:	b	18a78 <fts_children@@Base+0x1874>
   18ae8:	ldr	r4, [pc, #112]	; 18b60 <fts_children@@Base+0x195c>
   18aec:	mov	r0, r8
   18af0:	add	r4, pc, r4
   18af4:	bl	114f0 <close@plt>
   18af8:	b	18a50 <fts_children@@Base+0x184c>
   18afc:	bl	11298 <__stack_chk_fail@plt>
   18b00:	mov	r0, r4
   18b04:	ldr	r4, [pc, #88]	; 18b64 <fts_children@@Base+0x1960>
   18b08:	bl	11250 <free@plt>
   18b0c:	mov	r0, fp
   18b10:	add	r4, pc, r4
   18b14:	bl	18c1c <fts_children@@Base+0x1a18>
   18b18:	b	18a50 <fts_children@@Base+0x184c>
   18b1c:	mov	r0, fp
   18b20:	bl	11448 <__uflow@plt>
   18b24:	b	18a24 <fts_children@@Base+0x1820>
   18b28:	andeq	r2, r1, r4, lsr #17
   18b2c:	andeq	r0, r0, r4, lsr #2
   18b30:	muleq	r1, r4, fp
   18b34:	muleq	r0, r4, r1
   18b38:	andeq	r1, r0, ip, asr #8
   18b3c:	andeq	r2, r0, ip, ror #2
   18b40:	andeq	r2, r0, r4, lsl r1
   18b44:	strdeq	r2, [r0], -r0
   18b48:	ldrdeq	r2, [r0], -r4
   18b4c:			; <UNDEFINED> instruction: 0x000128b4
   18b50:	andeq	r1, r0, ip, lsl pc
   18b54:	andeq	r1, r0, r4, ror #3
   18b58:	andeq	r1, r0, ip, lsr #3
   18b5c:			; <UNDEFINED> instruction: 0x00001eb0
   18b60:	andeq	r1, r0, r8, lsl #3
   18b64:	andeq	r1, r0, r8, ror #2
   18b68:	push	{r2, r3}
   18b6c:	ldr	r3, [pc, #88]	; 18bcc <fts_children@@Base+0x19c8>
   18b70:	ldr	ip, [pc, #88]	; 18bd0 <fts_children@@Base+0x19cc>
   18b74:	add	r3, pc, r3
   18b78:	push	{r4, lr}
   18b7c:	sub	sp, sp, #8
   18b80:	ldr	r4, [r3, ip]
   18b84:	ldr	r2, [sp, #16]
   18b88:	ldr	ip, [r4]
   18b8c:	ands	r3, r2, #64	; 0x40
   18b90:	ldrne	r3, [sp, #20]
   18b94:	str	ip, [sp, #4]
   18b98:	addne	ip, sp, #20
   18b9c:	strne	ip, [sp]
   18ba0:	bl	113ac <openat64@plt>
   18ba4:	bl	18be0 <fts_children@@Base+0x19dc>
   18ba8:	ldr	r2, [sp, #4]
   18bac:	ldr	r3, [r4]
   18bb0:	cmp	r2, r3
   18bb4:	bne	18bc8 <fts_children@@Base+0x19c4>
   18bb8:	add	sp, sp, #8
   18bbc:	pop	{r4, lr}
   18bc0:	add	sp, sp, #8
   18bc4:	bx	lr
   18bc8:	bl	11298 <__stack_chk_fail@plt>
   18bcc:	andeq	r2, r1, r4, lsl #9
   18bd0:	andeq	r0, r0, r4, lsr #2
   18bd4:	mov	r1, #0
   18bd8:	mov	r2, #3
   18bdc:	b	18cbc <fts_children@@Base+0x1ab8>
   18be0:	cmp	r0, #2
   18be4:	push	{r3, r4, r5, r6, r7, lr}
   18be8:	mov	r4, r0
   18bec:	bhi	18c14 <fts_children@@Base+0x1a10>
   18bf0:	bl	18bd4 <fts_children@@Base+0x19d0>
   18bf4:	mov	r7, r0
   18bf8:	bl	113dc <__errno_location@plt>
   18bfc:	ldr	r6, [r0]
   18c00:	mov	r5, r0
   18c04:	mov	r0, r4
   18c08:	mov	r4, r7
   18c0c:	bl	114f0 <close@plt>
   18c10:	str	r6, [r5]
   18c14:	mov	r0, r4
   18c18:	pop	{r3, r4, r5, r6, r7, pc}
   18c1c:	push	{r4, r5, r6, lr}
   18c20:	sub	sp, sp, #8
   18c24:	mov	r4, r0
   18c28:	bl	11418 <fileno@plt>
   18c2c:	cmp	r0, #0
   18c30:	mov	r0, r4
   18c34:	blt	18cb0 <fts_children@@Base+0x1aac>
   18c38:	bl	11364 <__freading@plt>
   18c3c:	cmp	r0, #0
   18c40:	bne	18c7c <fts_children@@Base+0x1a78>
   18c44:	mov	r0, r4
   18c48:	bl	18e30 <fts_children@@Base+0x1c2c>
   18c4c:	cmp	r0, #0
   18c50:	beq	18cac <fts_children@@Base+0x1aa8>
   18c54:	bl	113dc <__errno_location@plt>
   18c58:	ldr	r6, [r0]
   18c5c:	mov	r5, r0
   18c60:	mov	r0, r4
   18c64:	bl	11430 <fclose@plt>
   18c68:	cmp	r6, #0
   18c6c:	mvnne	r0, #0
   18c70:	strne	r6, [r5]
   18c74:	add	sp, sp, #8
   18c78:	pop	{r4, r5, r6, pc}
   18c7c:	mov	r0, r4
   18c80:	bl	11418 <fileno@plt>
   18c84:	mov	r1, #1
   18c88:	mov	r2, #0
   18c8c:	mov	r3, #0
   18c90:	str	r1, [sp]
   18c94:	bl	112ec <lseek64@plt>
   18c98:	mvn	r2, #0
   18c9c:	mvn	r3, #0
   18ca0:	cmp	r1, r3
   18ca4:	cmpeq	r0, r2
   18ca8:	bne	18c44 <fts_children@@Base+0x1a40>
   18cac:	mov	r0, r4
   18cb0:	add	sp, sp, #8
   18cb4:	pop	{r4, r5, r6, lr}
   18cb8:	b	11430 <fclose@plt>
   18cbc:	push	{r1, r2, r3}
   18cc0:	movw	ip, #1030	; 0x406
   18cc4:	ldr	r3, [pc, #336]	; 18e1c <fts_children@@Base+0x1c18>
   18cc8:	push	{r4, r5, r6, r7, r8, lr}
   18ccc:	add	r3, pc, r3
   18cd0:	ldr	lr, [pc, #328]	; 18e20 <fts_children@@Base+0x1c1c>
   18cd4:	sub	sp, sp, #12
   18cd8:	add	r2, sp, #40	; 0x28
   18cdc:	mov	r6, r0
   18ce0:	ldr	r1, [sp, #36]	; 0x24
   18ce4:	ldr	r4, [r3, lr]
   18ce8:	cmp	r1, ip
   18cec:	str	r2, [sp]
   18cf0:	ldr	r3, [r4]
   18cf4:	str	r3, [sp, #4]
   18cf8:	bne	18d7c <fts_children@@Base+0x1b78>
   18cfc:	ldr	r8, [pc, #288]	; 18e24 <fts_children@@Base+0x1c20>
   18d00:	add	r3, sp, #44	; 0x2c
   18d04:	str	r3, [sp]
   18d08:	add	r8, pc, r8
   18d0c:	ldr	r7, [sp, #40]	; 0x28
   18d10:	ldr	r3, [r8]
   18d14:	mov	r2, r7
   18d18:	cmp	r3, #0
   18d1c:	blt	18e08 <fts_children@@Base+0x1c04>
   18d20:	bl	113c4 <fcntl@plt>
   18d24:	subs	r5, r0, #0
   18d28:	blt	18d8c <fts_children@@Base+0x1b88>
   18d2c:	ldr	r3, [pc, #244]	; 18e28 <fts_children@@Base+0x1c24>
   18d30:	mov	r2, #1
   18d34:	add	r3, pc, r3
   18d38:	str	r2, [r3]
   18d3c:	cmp	r5, #0
   18d40:	blt	18d58 <fts_children@@Base+0x1b54>
   18d44:	ldr	r3, [pc, #224]	; 18e2c <fts_children@@Base+0x1c28>
   18d48:	add	r3, pc, r3
   18d4c:	ldr	r3, [r3]
   18d50:	cmn	r3, #1
   18d54:	beq	18dbc <fts_children@@Base+0x1bb8>
   18d58:	ldr	r2, [sp, #4]
   18d5c:	mov	r0, r5
   18d60:	ldr	r3, [r4]
   18d64:	cmp	r2, r3
   18d68:	bne	18e18 <fts_children@@Base+0x1c14>
   18d6c:	add	sp, sp, #12
   18d70:	pop	{r4, r5, r6, r7, r8, lr}
   18d74:	add	sp, sp, #12
   18d78:	bx	lr
   18d7c:	ldr	r2, [sp, #40]	; 0x28
   18d80:	bl	113c4 <fcntl@plt>
   18d84:	mov	r5, r0
   18d88:	b	18d58 <fts_children@@Base+0x1b54>
   18d8c:	bl	113dc <__errno_location@plt>
   18d90:	ldr	r3, [r0]
   18d94:	cmp	r3, #22
   18d98:	bne	18d2c <fts_children@@Base+0x1b28>
   18d9c:	mov	r0, r6
   18da0:	mov	r2, r7
   18da4:	mov	r1, #0
   18da8:	bl	18cbc <fts_children@@Base+0x1ab8>
   18dac:	subs	r5, r0, #0
   18db0:	blt	18d58 <fts_children@@Base+0x1b54>
   18db4:	mvn	r3, #0
   18db8:	str	r3, [r8]
   18dbc:	mov	r0, r5
   18dc0:	mov	r1, #1
   18dc4:	bl	113c4 <fcntl@plt>
   18dc8:	subs	r2, r0, #0
   18dcc:	blt	18de8 <fts_children@@Base+0x1be4>
   18dd0:	orr	r2, r2, #1
   18dd4:	mov	r0, r5
   18dd8:	mov	r1, #2
   18ddc:	bl	113c4 <fcntl@plt>
   18de0:	cmn	r0, #1
   18de4:	bne	18d58 <fts_children@@Base+0x1b54>
   18de8:	bl	113dc <__errno_location@plt>
   18dec:	ldr	r7, [r0]
   18df0:	mov	r6, r0
   18df4:	mov	r0, r5
   18df8:	mvn	r5, #0
   18dfc:	bl	114f0 <close@plt>
   18e00:	str	r7, [r6]
   18e04:	b	18d58 <fts_children@@Base+0x1b54>
   18e08:	mov	r1, #0
   18e0c:	bl	18cbc <fts_children@@Base+0x1ab8>
   18e10:	mov	r5, r0
   18e14:	b	18d3c <fts_children@@Base+0x1b38>
   18e18:	bl	11298 <__stack_chk_fail@plt>
   18e1c:	andeq	r2, r1, ip, lsr #6
   18e20:	andeq	r0, r0, r4, lsr #2
   18e24:	andeq	r2, r1, ip, lsl #12
   18e28:	andeq	r2, r1, r0, ror #11
   18e2c:	andeq	r2, r1, ip, asr #11
   18e30:	push	{r4, lr}
   18e34:	subs	r4, r0, #0
   18e38:	sub	sp, sp, #8
   18e3c:	beq	18e4c <fts_children@@Base+0x1c48>
   18e40:	bl	11364 <__freading@plt>
   18e44:	cmp	r0, #0
   18e48:	bne	18e5c <fts_children@@Base+0x1c58>
   18e4c:	mov	r0, r4
   18e50:	add	sp, sp, #8
   18e54:	pop	{r4, lr}
   18e58:	b	11238 <fflush@plt>
   18e5c:	ldr	r3, [r4]
   18e60:	tst	r3, #256	; 0x100
   18e64:	beq	18e4c <fts_children@@Base+0x1c48>
   18e68:	mov	r3, #1
   18e6c:	mov	r0, r4
   18e70:	str	r3, [sp]
   18e74:	mov	r2, #0
   18e78:	mov	r3, #0
   18e7c:	bl	18e90 <fts_children@@Base+0x1c8c>
   18e80:	mov	r0, r4
   18e84:	add	sp, sp, #8
   18e88:	pop	{r4, lr}
   18e8c:	b	11238 <fflush@plt>
   18e90:	push	{r4, r5, r6, r7, lr}
   18e94:	sub	sp, sp, #20
   18e98:	ldmib	r0, {r1, ip}
   18e9c:	mov	r6, r0
   18ea0:	ldr	r4, [sp, #40]	; 0x28
   18ea4:	cmp	ip, r1
   18ea8:	beq	18ec0 <fts_children@@Base+0x1cbc>
   18eac:	str	r4, [sp, #40]	; 0x28
   18eb0:	mov	r0, r6
   18eb4:	add	sp, sp, #20
   18eb8:	pop	{r4, r5, r6, r7, lr}
   18ebc:	b	1143c <fseeko64@plt>
   18ec0:	ldr	ip, [r0, #20]
   18ec4:	ldr	r1, [r0, #16]
   18ec8:	cmp	ip, r1
   18ecc:	bne	18eac <fts_children@@Base+0x1ca8>
   18ed0:	ldr	r7, [r0, #36]	; 0x24
   18ed4:	cmp	r7, #0
   18ed8:	bne	18eac <fts_children@@Base+0x1ca8>
   18edc:	str	r2, [sp, #12]
   18ee0:	mvn	r5, #0
   18ee4:	str	r3, [sp, #8]
   18ee8:	bl	11418 <fileno@plt>
   18eec:	str	r4, [sp]
   18ef0:	mvn	r4, #0
   18ef4:	ldr	r2, [sp, #12]
   18ef8:	ldr	r3, [sp, #8]
   18efc:	bl	112ec <lseek64@plt>
   18f00:	mov	r2, r0
   18f04:	mov	r3, r1
   18f08:	cmp	r3, r5
   18f0c:	cmpeq	r2, r4
   18f10:	beq	18f30 <fts_children@@Base+0x1d2c>
   18f14:	ldr	r1, [r6]
   18f18:	mov	r0, r7
   18f1c:	strd	r2, [r6, #80]	; 0x50
   18f20:	bic	r3, r1, #16
   18f24:	str	r3, [r6]
   18f28:	add	sp, sp, #20
   18f2c:	pop	{r4, r5, r6, r7, pc}
   18f30:	mvn	r0, #0
   18f34:	b	18f28 <fts_children@@Base+0x1d24>
   18f38:	subs	r2, r1, #1
   18f3c:	bxeq	lr
   18f40:	bcc	19118 <fts_children@@Base+0x1f14>
   18f44:	cmp	r0, r1
   18f48:	bls	190fc <fts_children@@Base+0x1ef8>
   18f4c:	tst	r1, r2
   18f50:	beq	19108 <fts_children@@Base+0x1f04>
   18f54:	clz	r3, r0
   18f58:	clz	r2, r1
   18f5c:	sub	r3, r2, r3
   18f60:	rsbs	r3, r3, #31
   18f64:	addne	r3, r3, r3, lsl #1
   18f68:	mov	r2, #0
   18f6c:	addne	pc, pc, r3, lsl #2
   18f70:	nop	{0}
   18f74:	cmp	r0, r1, lsl #31
   18f78:	adc	r2, r2, r2
   18f7c:	subcs	r0, r0, r1, lsl #31
   18f80:	cmp	r0, r1, lsl #30
   18f84:	adc	r2, r2, r2
   18f88:	subcs	r0, r0, r1, lsl #30
   18f8c:	cmp	r0, r1, lsl #29
   18f90:	adc	r2, r2, r2
   18f94:	subcs	r0, r0, r1, lsl #29
   18f98:	cmp	r0, r1, lsl #28
   18f9c:	adc	r2, r2, r2
   18fa0:	subcs	r0, r0, r1, lsl #28
   18fa4:	cmp	r0, r1, lsl #27
   18fa8:	adc	r2, r2, r2
   18fac:	subcs	r0, r0, r1, lsl #27
   18fb0:	cmp	r0, r1, lsl #26
   18fb4:	adc	r2, r2, r2
   18fb8:	subcs	r0, r0, r1, lsl #26
   18fbc:	cmp	r0, r1, lsl #25
   18fc0:	adc	r2, r2, r2
   18fc4:	subcs	r0, r0, r1, lsl #25
   18fc8:	cmp	r0, r1, lsl #24
   18fcc:	adc	r2, r2, r2
   18fd0:	subcs	r0, r0, r1, lsl #24
   18fd4:	cmp	r0, r1, lsl #23
   18fd8:	adc	r2, r2, r2
   18fdc:	subcs	r0, r0, r1, lsl #23
   18fe0:	cmp	r0, r1, lsl #22
   18fe4:	adc	r2, r2, r2
   18fe8:	subcs	r0, r0, r1, lsl #22
   18fec:	cmp	r0, r1, lsl #21
   18ff0:	adc	r2, r2, r2
   18ff4:	subcs	r0, r0, r1, lsl #21
   18ff8:	cmp	r0, r1, lsl #20
   18ffc:	adc	r2, r2, r2
   19000:	subcs	r0, r0, r1, lsl #20
   19004:	cmp	r0, r1, lsl #19
   19008:	adc	r2, r2, r2
   1900c:	subcs	r0, r0, r1, lsl #19
   19010:	cmp	r0, r1, lsl #18
   19014:	adc	r2, r2, r2
   19018:	subcs	r0, r0, r1, lsl #18
   1901c:	cmp	r0, r1, lsl #17
   19020:	adc	r2, r2, r2
   19024:	subcs	r0, r0, r1, lsl #17
   19028:	cmp	r0, r1, lsl #16
   1902c:	adc	r2, r2, r2
   19030:	subcs	r0, r0, r1, lsl #16
   19034:	cmp	r0, r1, lsl #15
   19038:	adc	r2, r2, r2
   1903c:	subcs	r0, r0, r1, lsl #15
   19040:	cmp	r0, r1, lsl #14
   19044:	adc	r2, r2, r2
   19048:	subcs	r0, r0, r1, lsl #14
   1904c:	cmp	r0, r1, lsl #13
   19050:	adc	r2, r2, r2
   19054:	subcs	r0, r0, r1, lsl #13
   19058:	cmp	r0, r1, lsl #12
   1905c:	adc	r2, r2, r2
   19060:	subcs	r0, r0, r1, lsl #12
   19064:	cmp	r0, r1, lsl #11
   19068:	adc	r2, r2, r2
   1906c:	subcs	r0, r0, r1, lsl #11
   19070:	cmp	r0, r1, lsl #10
   19074:	adc	r2, r2, r2
   19078:	subcs	r0, r0, r1, lsl #10
   1907c:	cmp	r0, r1, lsl #9
   19080:	adc	r2, r2, r2
   19084:	subcs	r0, r0, r1, lsl #9
   19088:	cmp	r0, r1, lsl #8
   1908c:	adc	r2, r2, r2
   19090:	subcs	r0, r0, r1, lsl #8
   19094:	cmp	r0, r1, lsl #7
   19098:	adc	r2, r2, r2
   1909c:	subcs	r0, r0, r1, lsl #7
   190a0:	cmp	r0, r1, lsl #6
   190a4:	adc	r2, r2, r2
   190a8:	subcs	r0, r0, r1, lsl #6
   190ac:	cmp	r0, r1, lsl #5
   190b0:	adc	r2, r2, r2
   190b4:	subcs	r0, r0, r1, lsl #5
   190b8:	cmp	r0, r1, lsl #4
   190bc:	adc	r2, r2, r2
   190c0:	subcs	r0, r0, r1, lsl #4
   190c4:	cmp	r0, r1, lsl #3
   190c8:	adc	r2, r2, r2
   190cc:	subcs	r0, r0, r1, lsl #3
   190d0:	cmp	r0, r1, lsl #2
   190d4:	adc	r2, r2, r2
   190d8:	subcs	r0, r0, r1, lsl #2
   190dc:	cmp	r0, r1, lsl #1
   190e0:	adc	r2, r2, r2
   190e4:	subcs	r0, r0, r1, lsl #1
   190e8:	cmp	r0, r1
   190ec:	adc	r2, r2, r2
   190f0:	subcs	r0, r0, r1
   190f4:	mov	r0, r2
   190f8:	bx	lr
   190fc:	moveq	r0, #1
   19100:	movne	r0, #0
   19104:	bx	lr
   19108:	clz	r2, r1
   1910c:	rsb	r2, r2, #31
   19110:	lsr	r0, r0, r2
   19114:	bx	lr
   19118:	cmp	r0, #0
   1911c:	mvnne	r0, #0
   19120:	b	19180 <fts_children@@Base+0x1f7c>
   19124:	cmp	r1, #0
   19128:	beq	19118 <fts_children@@Base+0x1f14>
   1912c:	push	{r0, r1, lr}
   19130:	bl	18f38 <fts_children@@Base+0x1d34>
   19134:	pop	{r1, r2, lr}
   19138:	mul	r3, r2, r0
   1913c:	sub	r1, r1, r3
   19140:	bx	lr
   19144:	cmp	r3, #0
   19148:	cmpeq	r2, #0
   1914c:	bne	19164 <fts_children@@Base+0x1f60>
   19150:	cmp	r1, #0
   19154:	cmpeq	r0, #0
   19158:	mvnne	r1, #0
   1915c:	mvnne	r0, #0
   19160:	b	19180 <fts_children@@Base+0x1f7c>
   19164:	sub	sp, sp, #8
   19168:	push	{sp, lr}
   1916c:	bl	191cc <fts_children@@Base+0x1fc8>
   19170:	ldr	lr, [sp, #4]
   19174:	add	sp, sp, #8
   19178:	pop	{r2, r3}
   1917c:	bx	lr
   19180:	push	{r1, lr}
   19184:	mov	r0, #8
   19188:	bl	11220 <raise@plt>
   1918c:	pop	{r1, pc}
   19190:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19194:	mov	r8, r2
   19198:	mov	r6, r0
   1919c:	mov	r7, r1
   191a0:	mov	sl, r3
   191a4:	ldr	r9, [sp, #32]
   191a8:	bl	19208 <fts_children@@Base+0x2004>
   191ac:	umull	r4, r5, r8, r0
   191b0:	mul	r8, r8, r1
   191b4:	mla	r2, r0, sl, r8
   191b8:	add	r5, r2, r5
   191bc:	subs	r4, r6, r4
   191c0:	sbc	r5, r7, r5
   191c4:	strd	r4, [r9]
   191c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   191cc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   191d0:	mov	r8, r2
   191d4:	mov	r6, r0
   191d8:	mov	r7, r1
   191dc:	mov	r5, r3
   191e0:	ldr	r9, [sp, #32]
   191e4:	bl	19694 <fts_children@@Base+0x2490>
   191e8:	mul	r3, r0, r5
   191ec:	umull	r4, r5, r0, r8
   191f0:	mla	r8, r8, r1, r3
   191f4:	add	r5, r8, r5
   191f8:	subs	r4, r6, r4
   191fc:	sbc	r5, r7, r5
   19200:	strd	r4, [r9]
   19204:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1920c:	rsbs	r4, r0, #0
   19210:	rsc	r5, r1, #0
   19214:	cmp	r1, #0
   19218:	mvn	r6, #0
   1921c:	sub	sp, sp, #12
   19220:	movge	r4, r0
   19224:	movge	r5, r1
   19228:	movge	r6, #0
   1922c:	cmp	r3, #0
   19230:	blt	19468 <fts_children@@Base+0x2264>
   19234:	cmp	r3, #0
   19238:	mov	sl, r4
   1923c:	mov	ip, r5
   19240:	mov	r0, r2
   19244:	mov	r1, r3
   19248:	mov	r8, r2
   1924c:	mov	r7, r4
   19250:	mov	r9, r5
   19254:	bne	1934c <fts_children@@Base+0x2148>
   19258:	cmp	r2, r5
   1925c:	bls	19388 <fts_children@@Base+0x2184>
   19260:	clz	r3, r2
   19264:	cmp	r3, #0
   19268:	rsbne	r2, r3, #32
   1926c:	lslne	r8, r0, r3
   19270:	lsrne	r2, r4, r2
   19274:	lslne	r7, r4, r3
   19278:	orrne	r9, r2, r5, lsl r3
   1927c:	lsr	r4, r8, #16
   19280:	uxth	sl, r8
   19284:	mov	r1, r4
   19288:	mov	r0, r9
   1928c:	bl	18f38 <fts_children@@Base+0x1d34>
   19290:	mov	r1, r4
   19294:	mov	fp, r0
   19298:	mov	r0, r9
   1929c:	bl	19124 <fts_children@@Base+0x1f20>
   192a0:	mul	r0, sl, fp
   192a4:	lsr	r2, r7, #16
   192a8:	orr	r1, r2, r1, lsl #16
   192ac:	cmp	r0, r1
   192b0:	bls	192d4 <fts_children@@Base+0x20d0>
   192b4:	adds	r1, r1, r8
   192b8:	sub	r3, fp, #1
   192bc:	bcs	192d0 <fts_children@@Base+0x20cc>
   192c0:	cmp	r0, r1
   192c4:	subhi	fp, fp, #2
   192c8:	addhi	r1, r1, r8
   192cc:	bhi	192d4 <fts_children@@Base+0x20d0>
   192d0:	mov	fp, r3
   192d4:	rsb	r9, r0, r1
   192d8:	mov	r1, r4
   192dc:	uxth	r7, r7
   192e0:	mov	r0, r9
   192e4:	bl	18f38 <fts_children@@Base+0x1d34>
   192e8:	mov	r1, r4
   192ec:	mov	r5, r0
   192f0:	mov	r0, r9
   192f4:	bl	19124 <fts_children@@Base+0x1f20>
   192f8:	mul	sl, sl, r5
   192fc:	orr	r1, r7, r1, lsl #16
   19300:	cmp	sl, r1
   19304:	bls	19324 <fts_children@@Base+0x2120>
   19308:	adds	r8, r1, r8
   1930c:	sub	r3, r5, #1
   19310:	bcs	19320 <fts_children@@Base+0x211c>
   19314:	cmp	sl, r8
   19318:	subhi	r5, r5, #2
   1931c:	bhi	19324 <fts_children@@Base+0x2120>
   19320:	mov	r5, r3
   19324:	orr	r3, r5, fp, lsl #16
   19328:	mov	r4, #0
   1932c:	cmp	r6, #0
   19330:	mov	r0, r3
   19334:	mov	r1, r4
   19338:	beq	19344 <fts_children@@Base+0x2140>
   1933c:	rsbs	r0, r0, #0
   19340:	rsc	r1, r1, #0
   19344:	add	sp, sp, #12
   19348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1934c:	cmp	r3, r5
   19350:	movhi	r4, #0
   19354:	movhi	r3, r4
   19358:	bhi	1932c <fts_children@@Base+0x2128>
   1935c:	clz	r5, r1
   19360:	cmp	r5, #0
   19364:	bne	19554 <fts_children@@Base+0x2350>
   19368:	cmp	r1, ip
   1936c:	cmpcs	r2, sl
   19370:	movhi	r4, #0
   19374:	movls	r4, #1
   19378:	movls	r3, #1
   1937c:	movls	r4, r5
   19380:	movhi	r3, r4
   19384:	b	1932c <fts_children@@Base+0x2128>
   19388:	cmp	r2, #0
   1938c:	bne	193a0 <fts_children@@Base+0x219c>
   19390:	mov	r1, r2
   19394:	mov	r0, #1
   19398:	bl	18f38 <fts_children@@Base+0x1d34>
   1939c:	mov	r8, r0
   193a0:	clz	r3, r8
   193a4:	cmp	r3, #0
   193a8:	bne	19478 <fts_children@@Base+0x2274>
   193ac:	rsb	r9, r8, r9
   193b0:	lsr	r5, r8, #16
   193b4:	uxth	sl, r8
   193b8:	mov	r4, #1
   193bc:	mov	r1, r5
   193c0:	mov	r0, r9
   193c4:	bl	18f38 <fts_children@@Base+0x1d34>
   193c8:	mov	r1, r5
   193cc:	mov	fp, r0
   193d0:	mov	r0, r9
   193d4:	bl	19124 <fts_children@@Base+0x1f20>
   193d8:	mul	r0, sl, fp
   193dc:	lsr	r2, r7, #16
   193e0:	orr	r1, r2, r1, lsl #16
   193e4:	cmp	r0, r1
   193e8:	bls	19408 <fts_children@@Base+0x2204>
   193ec:	adds	r1, r1, r8
   193f0:	sub	r3, fp, #1
   193f4:	bcs	19674 <fts_children@@Base+0x2470>
   193f8:	cmp	r0, r1
   193fc:	subhi	fp, fp, #2
   19400:	addhi	r1, r1, r8
   19404:	bls	19674 <fts_children@@Base+0x2470>
   19408:	rsb	r2, r0, r1
   1940c:	mov	r1, r5
   19410:	str	r2, [sp]
   19414:	uxth	r7, r7
   19418:	mov	r0, r2
   1941c:	bl	18f38 <fts_children@@Base+0x1d34>
   19420:	ldr	r2, [sp]
   19424:	mov	r1, r5
   19428:	mov	r9, r0
   1942c:	mov	r0, r2
   19430:	bl	19124 <fts_children@@Base+0x1f20>
   19434:	mul	sl, sl, r9
   19438:	orr	r1, r7, r1, lsl #16
   1943c:	cmp	sl, r1
   19440:	bls	19460 <fts_children@@Base+0x225c>
   19444:	adds	r8, r1, r8
   19448:	sub	r3, r9, #1
   1944c:	bcs	1945c <fts_children@@Base+0x2258>
   19450:	cmp	sl, r8
   19454:	subhi	r9, r9, #2
   19458:	bhi	19460 <fts_children@@Base+0x225c>
   1945c:	mov	r9, r3
   19460:	orr	r3, r9, fp, lsl #16
   19464:	b	1932c <fts_children@@Base+0x2128>
   19468:	mvn	r6, r6
   1946c:	rsbs	r2, r2, #0
   19470:	rsc	r3, r3, #0
   19474:	b	19234 <fts_children@@Base+0x2030>
   19478:	lsl	r8, r8, r3
   1947c:	rsb	fp, r3, #32
   19480:	lsr	r4, r9, fp
   19484:	lsr	fp, r7, fp
   19488:	lsr	r5, r8, #16
   1948c:	orr	fp, fp, r9, lsl r3
   19490:	mov	r0, r4
   19494:	lsl	r7, r7, r3
   19498:	mov	r1, r5
   1949c:	uxth	sl, r8
   194a0:	bl	18f38 <fts_children@@Base+0x1d34>
   194a4:	mov	r1, r5
   194a8:	mov	r3, r0
   194ac:	mov	r0, r4
   194b0:	str	r3, [sp]
   194b4:	bl	19124 <fts_children@@Base+0x1f20>
   194b8:	ldr	r3, [sp]
   194bc:	lsr	r2, fp, #16
   194c0:	mul	r0, sl, r3
   194c4:	orr	r1, r2, r1, lsl #16
   194c8:	cmp	r0, r1
   194cc:	bls	194ec <fts_children@@Base+0x22e8>
   194d0:	adds	r1, r1, r8
   194d4:	sub	r2, r3, #1
   194d8:	bcs	1968c <fts_children@@Base+0x2488>
   194dc:	cmp	r0, r1
   194e0:	subhi	r3, r3, #2
   194e4:	addhi	r1, r1, r8
   194e8:	bls	1968c <fts_children@@Base+0x2488>
   194ec:	rsb	r9, r0, r1
   194f0:	mov	r1, r5
   194f4:	str	r3, [sp]
   194f8:	uxth	fp, fp
   194fc:	mov	r0, r9
   19500:	bl	18f38 <fts_children@@Base+0x1d34>
   19504:	mov	r1, r5
   19508:	mov	r4, r0
   1950c:	mov	r0, r9
   19510:	bl	19124 <fts_children@@Base+0x1f20>
   19514:	mul	r9, sl, r4
   19518:	ldr	r3, [sp]
   1951c:	orr	r1, fp, r1, lsl #16
   19520:	cmp	r9, r1
   19524:	bls	19548 <fts_children@@Base+0x2344>
   19528:	adds	r1, r1, r8
   1952c:	sub	r2, r4, #1
   19530:	bcs	19544 <fts_children@@Base+0x2340>
   19534:	cmp	r9, r1
   19538:	subhi	r4, r4, #2
   1953c:	addhi	r1, r1, r8
   19540:	bhi	19548 <fts_children@@Base+0x2344>
   19544:	mov	r4, r2
   19548:	rsb	r9, r9, r1
   1954c:	orr	r4, r4, r3, lsl #16
   19550:	b	193bc <fts_children@@Base+0x21b8>
   19554:	rsb	sl, r5, #32
   19558:	lsl	r3, r2, r5
   1955c:	lsr	r0, r2, sl
   19560:	lsr	r2, ip, sl
   19564:	orr	r4, r0, r1, lsl r5
   19568:	lsr	sl, r7, sl
   1956c:	mov	r0, r2
   19570:	orr	sl, sl, ip, lsl r5
   19574:	lsr	r9, r4, #16
   19578:	str	r3, [sp, #4]
   1957c:	str	r2, [sp]
   19580:	uxth	fp, r4
   19584:	mov	r1, r9
   19588:	bl	18f38 <fts_children@@Base+0x1d34>
   1958c:	ldr	r2, [sp]
   19590:	mov	r1, r9
   19594:	mov	r8, r0
   19598:	mov	r0, r2
   1959c:	bl	19124 <fts_children@@Base+0x1f20>
   195a0:	mul	r0, fp, r8
   195a4:	lsr	r2, sl, #16
   195a8:	orr	r1, r2, r1, lsl #16
   195ac:	cmp	r0, r1
   195b0:	bls	195d0 <fts_children@@Base+0x23cc>
   195b4:	adds	r1, r1, r4
   195b8:	sub	r2, r8, #1
   195bc:	bcs	19684 <fts_children@@Base+0x2480>
   195c0:	cmp	r0, r1
   195c4:	subhi	r8, r8, #2
   195c8:	addhi	r1, r1, r4
   195cc:	bls	19684 <fts_children@@Base+0x2480>
   195d0:	rsb	ip, r0, r1
   195d4:	mov	r1, r9
   195d8:	str	ip, [sp]
   195dc:	mov	r0, ip
   195e0:	bl	18f38 <fts_children@@Base+0x1d34>
   195e4:	ldr	ip, [sp]
   195e8:	mov	r1, r9
   195ec:	mov	r2, r0
   195f0:	mov	r0, ip
   195f4:	str	r2, [sp]
   195f8:	bl	19124 <fts_children@@Base+0x1f20>
   195fc:	ldr	r2, [sp]
   19600:	uxth	ip, sl
   19604:	mul	fp, fp, r2
   19608:	orr	ip, ip, r1, lsl #16
   1960c:	cmp	fp, ip
   19610:	bls	19630 <fts_children@@Base+0x242c>
   19614:	adds	ip, ip, r4
   19618:	sub	r1, r2, #1
   1961c:	bcs	1967c <fts_children@@Base+0x2478>
   19620:	cmp	fp, ip
   19624:	subhi	r2, r2, #2
   19628:	addhi	ip, ip, r4
   1962c:	bls	1967c <fts_children@@Base+0x2478>
   19630:	ldr	r0, [sp, #4]
   19634:	orr	r1, r2, r8, lsl #16
   19638:	rsb	fp, fp, ip
   1963c:	umull	r2, r3, r1, r0
   19640:	cmp	fp, r3
   19644:	bcc	19668 <fts_children@@Base+0x2464>
   19648:	movne	r4, #0
   1964c:	moveq	r4, #1
   19650:	cmp	r2, r7, lsl r5
   19654:	movls	r4, #0
   19658:	andhi	r4, r4, #1
   1965c:	cmp	r4, #0
   19660:	moveq	r3, r1
   19664:	beq	1932c <fts_children@@Base+0x2128>
   19668:	sub	r3, r1, #1
   1966c:	mov	r4, #0
   19670:	b	1932c <fts_children@@Base+0x2128>
   19674:	mov	fp, r3
   19678:	b	19408 <fts_children@@Base+0x2204>
   1967c:	mov	r2, r1
   19680:	b	19630 <fts_children@@Base+0x242c>
   19684:	mov	r8, r2
   19688:	b	195d0 <fts_children@@Base+0x23cc>
   1968c:	mov	r3, r2
   19690:	b	194ec <fts_children@@Base+0x22e8>
   19694:	cmp	r3, #0
   19698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1969c:	mov	r6, r0
   196a0:	sub	sp, sp, #12
   196a4:	mov	r5, r1
   196a8:	mov	r7, r0
   196ac:	mov	r4, r2
   196b0:	mov	r8, r1
   196b4:	bne	19794 <fts_children@@Base+0x2590>
   196b8:	cmp	r2, r1
   196bc:	bls	197d0 <fts_children@@Base+0x25cc>
   196c0:	clz	r3, r2
   196c4:	cmp	r3, #0
   196c8:	rsbne	r8, r3, #32
   196cc:	lslne	r4, r2, r3
   196d0:	lsrne	r8, r0, r8
   196d4:	lslne	r7, r0, r3
   196d8:	orrne	r8, r8, r1, lsl r3
   196dc:	lsr	r5, r4, #16
   196e0:	uxth	sl, r4
   196e4:	mov	r1, r5
   196e8:	mov	r0, r8
   196ec:	bl	18f38 <fts_children@@Base+0x1d34>
   196f0:	mov	r1, r5
   196f4:	mov	r9, r0
   196f8:	mov	r0, r8
   196fc:	bl	19124 <fts_children@@Base+0x1f20>
   19700:	mul	r0, sl, r9
   19704:	lsr	r3, r7, #16
   19708:	orr	r1, r3, r1, lsl #16
   1970c:	cmp	r0, r1
   19710:	bls	19734 <fts_children@@Base+0x2530>
   19714:	adds	r1, r1, r4
   19718:	sub	r2, r9, #1
   1971c:	bcs	19730 <fts_children@@Base+0x252c>
   19720:	cmp	r0, r1
   19724:	subhi	r9, r9, #2
   19728:	addhi	r1, r1, r4
   1972c:	bhi	19734 <fts_children@@Base+0x2530>
   19730:	mov	r9, r2
   19734:	rsb	r8, r0, r1
   19738:	mov	r1, r5
   1973c:	uxth	r7, r7
   19740:	mov	r0, r8
   19744:	bl	18f38 <fts_children@@Base+0x1d34>
   19748:	mov	r1, r5
   1974c:	mov	r6, r0
   19750:	mov	r0, r8
   19754:	bl	19124 <fts_children@@Base+0x1f20>
   19758:	mul	sl, sl, r6
   1975c:	orr	r1, r7, r1, lsl #16
   19760:	cmp	sl, r1
   19764:	bls	19780 <fts_children@@Base+0x257c>
   19768:	adds	r4, r1, r4
   1976c:	sub	r3, r6, #1
   19770:	bcs	19a7c <fts_children@@Base+0x2878>
   19774:	cmp	sl, r4
   19778:	subhi	r6, r6, #2
   1977c:	bls	19a7c <fts_children@@Base+0x2878>
   19780:	orr	r0, r6, r9, lsl #16
   19784:	mov	r6, #0
   19788:	mov	r1, r6
   1978c:	add	sp, sp, #12
   19790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19794:	cmp	r3, r1
   19798:	movhi	r6, #0
   1979c:	movhi	r0, r6
   197a0:	bhi	19788 <fts_children@@Base+0x2584>
   197a4:	clz	r7, r3
   197a8:	cmp	r7, #0
   197ac:	bne	198ac <fts_children@@Base+0x26a8>
   197b0:	cmp	r3, r1
   197b4:	cmpcs	r2, r6
   197b8:	movhi	r6, #0
   197bc:	movls	r6, #1
   197c0:	movls	r0, #1
   197c4:	movls	r6, r7
   197c8:	movhi	r0, r6
   197cc:	b	19788 <fts_children@@Base+0x2584>
   197d0:	cmp	r2, #0
   197d4:	bne	197e8 <fts_children@@Base+0x25e4>
   197d8:	mov	r1, r2
   197dc:	mov	r0, #1
   197e0:	bl	18f38 <fts_children@@Base+0x1d34>
   197e4:	mov	r4, r0
   197e8:	clz	r3, r4
   197ec:	cmp	r3, #0
   197f0:	bne	199a8 <fts_children@@Base+0x27a4>
   197f4:	rsb	r5, r4, r5
   197f8:	lsr	r8, r4, #16
   197fc:	uxth	sl, r4
   19800:	mov	r6, #1
   19804:	mov	r1, r8
   19808:	mov	r0, r5
   1980c:	bl	18f38 <fts_children@@Base+0x1d34>
   19810:	mov	r1, r8
   19814:	mov	r9, r0
   19818:	mov	r0, r5
   1981c:	bl	19124 <fts_children@@Base+0x1f20>
   19820:	mul	r0, sl, r9
   19824:	lsr	r3, r7, #16
   19828:	orr	r1, r3, r1, lsl #16
   1982c:	cmp	r0, r1
   19830:	bls	19850 <fts_children@@Base+0x264c>
   19834:	adds	r1, r1, r4
   19838:	sub	r2, r9, #1
   1983c:	bcs	19a84 <fts_children@@Base+0x2880>
   19840:	cmp	r0, r1
   19844:	subhi	r9, r9, #2
   19848:	addhi	r1, r1, r4
   1984c:	bls	19a84 <fts_children@@Base+0x2880>
   19850:	rsb	fp, r0, r1
   19854:	mov	r1, r8
   19858:	uxth	r7, r7
   1985c:	mov	r0, fp
   19860:	bl	18f38 <fts_children@@Base+0x1d34>
   19864:	mov	r1, r8
   19868:	mov	r5, r0
   1986c:	mov	r0, fp
   19870:	bl	19124 <fts_children@@Base+0x1f20>
   19874:	mul	sl, sl, r5
   19878:	orr	r1, r7, r1, lsl #16
   1987c:	cmp	sl, r1
   19880:	bls	1989c <fts_children@@Base+0x2698>
   19884:	adds	r4, r1, r4
   19888:	sub	r3, r5, #1
   1988c:	bcs	19a8c <fts_children@@Base+0x2888>
   19890:	cmp	sl, r4
   19894:	subhi	r5, r5, #2
   19898:	bls	19a8c <fts_children@@Base+0x2888>
   1989c:	orr	r0, r5, r9, lsl #16
   198a0:	mov	r1, r6
   198a4:	add	sp, sp, #12
   198a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198ac:	rsb	r1, r7, #32
   198b0:	lsl	r0, r2, r7
   198b4:	lsr	r2, r2, r1
   198b8:	lsr	fp, r5, r1
   198bc:	orr	r8, r2, r3, lsl r7
   198c0:	lsr	r1, r6, r1
   198c4:	str	r0, [sp, #4]
   198c8:	orr	r5, r1, r5, lsl r7
   198cc:	lsr	r9, r8, #16
   198d0:	mov	r0, fp
   198d4:	uxth	sl, r8
   198d8:	mov	r1, r9
   198dc:	bl	18f38 <fts_children@@Base+0x1d34>
   198e0:	mov	r1, r9
   198e4:	mov	r4, r0
   198e8:	mov	r0, fp
   198ec:	bl	19124 <fts_children@@Base+0x1f20>
   198f0:	mul	r0, sl, r4
   198f4:	lsr	ip, r5, #16
   198f8:	orr	r1, ip, r1, lsl #16
   198fc:	cmp	r0, r1
   19900:	bls	19914 <fts_children@@Base+0x2710>
   19904:	adds	r1, r1, r8
   19908:	sub	r2, r4, #1
   1990c:	bcc	19aa8 <fts_children@@Base+0x28a4>
   19910:	mov	r4, r2
   19914:	rsb	ip, r0, r1
   19918:	mov	r1, r9
   1991c:	str	ip, [sp]
   19920:	uxth	r5, r5
   19924:	mov	r0, ip
   19928:	bl	18f38 <fts_children@@Base+0x1d34>
   1992c:	ldr	ip, [sp]
   19930:	mov	r1, r9
   19934:	mov	fp, r0
   19938:	mov	r0, ip
   1993c:	bl	19124 <fts_children@@Base+0x1f20>
   19940:	mul	sl, sl, fp
   19944:	orr	r1, r5, r1, lsl #16
   19948:	cmp	sl, r1
   1994c:	bls	19960 <fts_children@@Base+0x275c>
   19950:	adds	r1, r1, r8
   19954:	sub	r2, fp, #1
   19958:	bcc	19a94 <fts_children@@Base+0x2890>
   1995c:	mov	fp, r2
   19960:	ldr	r3, [sp, #4]
   19964:	orr	r0, fp, r4, lsl #16
   19968:	rsb	sl, sl, r1
   1996c:	umull	r4, r5, r0, r3
   19970:	cmp	sl, r5
   19974:	bcc	19994 <fts_children@@Base+0x2790>
   19978:	movne	r3, #0
   1997c:	moveq	r3, #1
   19980:	cmp	r4, r6, lsl r7
   19984:	movls	r6, #0
   19988:	andhi	r6, r3, #1
   1998c:	cmp	r6, #0
   19990:	beq	19788 <fts_children@@Base+0x2584>
   19994:	mov	r6, #0
   19998:	sub	r0, r0, #1
   1999c:	mov	r1, r6
   199a0:	add	sp, sp, #12
   199a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199a8:	lsl	r4, r4, r3
   199ac:	rsb	r9, r3, #32
   199b0:	lsr	r2, r5, r9
   199b4:	lsr	r9, r6, r9
   199b8:	lsr	r8, r4, #16
   199bc:	orr	r9, r9, r5, lsl r3
   199c0:	mov	r0, r2
   199c4:	lsl	r7, r6, r3
   199c8:	mov	r1, r8
   199cc:	str	r2, [sp]
   199d0:	bl	18f38 <fts_children@@Base+0x1d34>
   199d4:	ldr	r2, [sp]
   199d8:	mov	r1, r8
   199dc:	uxth	sl, r4
   199e0:	mov	fp, r0
   199e4:	mov	r0, r2
   199e8:	bl	19124 <fts_children@@Base+0x1f20>
   199ec:	mul	r0, sl, fp
   199f0:	lsr	r3, r9, #16
   199f4:	orr	r1, r3, r1, lsl #16
   199f8:	cmp	r0, r1
   199fc:	bls	19a1c <fts_children@@Base+0x2818>
   19a00:	adds	r1, r1, r4
   19a04:	sub	r3, fp, #1
   19a08:	bcs	19abc <fts_children@@Base+0x28b8>
   19a0c:	cmp	r0, r1
   19a10:	subhi	fp, fp, #2
   19a14:	addhi	r1, r1, r4
   19a18:	bls	19abc <fts_children@@Base+0x28b8>
   19a1c:	rsb	r5, r0, r1
   19a20:	mov	r1, r8
   19a24:	uxth	r9, r9
   19a28:	mov	r0, r5
   19a2c:	bl	18f38 <fts_children@@Base+0x1d34>
   19a30:	mov	r1, r8
   19a34:	mov	r6, r0
   19a38:	mov	r0, r5
   19a3c:	bl	19124 <fts_children@@Base+0x1f20>
   19a40:	mul	r5, sl, r6
   19a44:	orr	r1, r9, r1, lsl #16
   19a48:	cmp	r5, r1
   19a4c:	bls	19a70 <fts_children@@Base+0x286c>
   19a50:	adds	r1, r1, r4
   19a54:	sub	r3, r6, #1
   19a58:	bcs	19a6c <fts_children@@Base+0x2868>
   19a5c:	cmp	r5, r1
   19a60:	subhi	r6, r6, #2
   19a64:	addhi	r1, r1, r4
   19a68:	bhi	19a70 <fts_children@@Base+0x286c>
   19a6c:	mov	r6, r3
   19a70:	rsb	r5, r5, r1
   19a74:	orr	r6, r6, fp, lsl #16
   19a78:	b	19804 <fts_children@@Base+0x2600>
   19a7c:	mov	r6, r3
   19a80:	b	19780 <fts_children@@Base+0x257c>
   19a84:	mov	r9, r2
   19a88:	b	19850 <fts_children@@Base+0x264c>
   19a8c:	mov	r5, r3
   19a90:	b	1989c <fts_children@@Base+0x2698>
   19a94:	cmp	sl, r1
   19a98:	subhi	fp, fp, #2
   19a9c:	addhi	r1, r1, r8
   19aa0:	bhi	19960 <fts_children@@Base+0x275c>
   19aa4:	b	1995c <fts_children@@Base+0x2758>
   19aa8:	cmp	r0, r1
   19aac:	subhi	r4, r4, #2
   19ab0:	addhi	r1, r1, r8
   19ab4:	bhi	19914 <fts_children@@Base+0x2710>
   19ab8:	b	19910 <fts_children@@Base+0x270c>
   19abc:	mov	fp, r3
   19ac0:	b	19a1c <fts_children@@Base+0x2818>
   19ac4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19ac8:	mov	r7, r0
   19acc:	ldr	r6, [pc, #76]	; 19b20 <fts_children@@Base+0x291c>
   19ad0:	mov	r8, r1
   19ad4:	ldr	r5, [pc, #72]	; 19b24 <fts_children@@Base+0x2920>
   19ad8:	mov	r9, r2
   19adc:	add	r6, pc, r6
   19ae0:	bl	111d0 <fdopen@plt-0x20>
   19ae4:	add	r5, pc, r5
   19ae8:	rsb	r6, r5, r6
   19aec:	asrs	r6, r6, #2
   19af0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   19af4:	sub	r5, r5, #4
   19af8:	mov	r4, #0
   19afc:	add	r4, r4, #1
   19b00:	ldr	r3, [r5, #4]!
   19b04:	mov	r0, r7
   19b08:	mov	r1, r8
   19b0c:	mov	r2, r9
   19b10:	blx	r3
   19b14:	cmp	r4, r6
   19b18:	bne	19afc <fts_children@@Base+0x28f8>
   19b1c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19b20:	andeq	r1, r1, r8, asr #6
   19b24:	andeq	r1, r1, ip, lsr r3
   19b28:	bx	lr
   19b2c:	ldr	r3, [pc, #28]	; 19b50 <fts_children@@Base+0x294c>
   19b30:	mov	r1, #0
   19b34:	ldr	r2, [pc, #24]	; 19b54 <fts_children@@Base+0x2950>
   19b38:	add	r3, pc, r3
   19b3c:	ldr	r3, [r3, r2]
   19b40:	cmp	r3, #0
   19b44:	ldrne	r2, [r3]
   19b48:	moveq	r2, r3
   19b4c:	b	113e8 <__cxa_atexit@plt>
   19b50:	andeq	r1, r1, r0, asr #9
   19b54:	andeq	r0, r0, ip, lsr r1

Disassembly of section .fini:

00019b58 <.fini>:
   19b58:	push	{r3, lr}
   19b5c:	pop	{r3, pc}
