
centos-preinstalled/chown:     file format elf32-littlearm


Disassembly of section .init:

00011370 <.init>:
   11370:	push	{r3, lr}
   11374:	bl	11d44 <__assert_fail@plt+0x618>
   11378:	pop	{r3, pc}

Disassembly of section .plt:

0001137c <fdopen@plt-0x14>:
   1137c:	push	{lr}		; (str lr, [sp, #-4]!)
   11380:	ldr	lr, [pc, #4]	; 1138c <fdopen@plt-0x4>
   11384:	add	lr, pc, lr
   11388:	ldr	pc, [lr, #8]!
   1138c:	andeq	fp, r1, r4, ror ip

00011390 <fdopen@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #110592	; 0x1b000
   11398:	ldr	pc, [ip, #3188]!	; 0xc74

0001139c <fstatfs64@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #110592	; 0x1b000
   113a4:	ldr	pc, [ip, #3180]!	; 0xc6c

000113a8 <calloc@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #110592	; 0x1b000
   113b0:	ldr	pc, [ip, #3172]!	; 0xc64

000113b4 <endgrent@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #110592	; 0x1b000
   113bc:	ldr	pc, [ip, #3164]!	; 0xc5c

000113c0 <fputs_unlocked@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #110592	; 0x1b000
   113c8:	ldr	pc, [ip, #3156]!	; 0xc54

000113cc <raise@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #110592	; 0x1b000
   113d4:	ldr	pc, [ip, #3148]!	; 0xc4c

000113d8 <getpwnam@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #110592	; 0x1b000
   113e0:	ldr	pc, [ip, #3140]!	; 0xc44

000113e4 <strcmp@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #110592	; 0x1b000
   113ec:	ldr	pc, [ip, #3132]!	; 0xc3c

000113f0 <getpwuid@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #110592	; 0x1b000
   113f8:	ldr	pc, [ip, #3124]!	; 0xc34

000113fc <fflush@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #110592	; 0x1b000
   11404:	ldr	pc, [ip, #3116]!	; 0xc2c

00011408 <memmove@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #110592	; 0x1b000
   11410:	ldr	pc, [ip, #3108]!	; 0xc24

00011414 <free@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #110592	; 0x1b000
   1141c:	ldr	pc, [ip, #3100]!	; 0xc1c

00011420 <__openat64_2@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #110592	; 0x1b000
   11428:	ldr	pc, [ip, #3092]!	; 0xc14

0001142c <_exit@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #110592	; 0x1b000
   11434:	ldr	pc, [ip, #3084]!	; 0xc0c

00011438 <memcpy@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #110592	; 0x1b000
   11440:	ldr	pc, [ip, #3076]!	; 0xc04

00011444 <mbsinit@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #110592	; 0x1b000
   1144c:	ldr	pc, [ip, #3068]!	; 0xbfc

00011450 <memcmp@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #110592	; 0x1b000
   11458:	ldr	pc, [ip, #3060]!	; 0xbf4

0001145c <stpcpy@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #110592	; 0x1b000
   11464:	ldr	pc, [ip, #3052]!	; 0xbec

00011468 <dcgettext@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #110592	; 0x1b000
   11470:	ldr	pc, [ip, #3044]!	; 0xbe4

00011474 <__stack_chk_fail@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #110592	; 0x1b000
   1147c:	ldr	pc, [ip, #3036]!	; 0xbdc

00011480 <realloc@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #110592	; 0x1b000
   11488:	ldr	pc, [ip, #3028]!	; 0xbd4

0001148c <textdomain@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #110592	; 0x1b000
   11494:	ldr	pc, [ip, #3020]!	; 0xbcc

00011498 <__fxstatat64@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #110592	; 0x1b000
   114a0:	ldr	pc, [ip, #3012]!	; 0xbc4

000114a4 <iswprint@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #110592	; 0x1b000
   114ac:	ldr	pc, [ip, #3004]!	; 0xbbc

000114b0 <__fxstat64@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #110592	; 0x1b000
   114b8:	ldr	pc, [ip, #2996]!	; 0xbb4

000114bc <fwrite@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #110592	; 0x1b000
   114c4:	ldr	pc, [ip, #2988]!	; 0xbac

000114c8 <lseek64@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #110592	; 0x1b000
   114d0:	ldr	pc, [ip, #2980]!	; 0xba4

000114d4 <__ctype_get_mb_cur_max@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #110592	; 0x1b000
   114dc:	ldr	pc, [ip, #2972]!	; 0xb9c

000114e0 <strcpy@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #110592	; 0x1b000
   114e8:	ldr	pc, [ip, #2964]!	; 0xb94

000114ec <__fpending@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #110592	; 0x1b000
   114f4:	ldr	pc, [ip, #2956]!	; 0xb8c

000114f8 <mbrtowc@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #110592	; 0x1b000
   11500:	ldr	pc, [ip, #2948]!	; 0xb84

00011504 <error@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #110592	; 0x1b000
   1150c:	ldr	pc, [ip, #2940]!	; 0xb7c

00011510 <open64@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #110592	; 0x1b000
   11518:	ldr	pc, [ip, #2932]!	; 0xb74

0001151c <getenv@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #110592	; 0x1b000
   11524:	ldr	pc, [ip, #2924]!	; 0xb6c

00011528 <malloc@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #110592	; 0x1b000
   11530:	ldr	pc, [ip, #2916]!	; 0xb64

00011534 <__libc_start_main@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #110592	; 0x1b000
   1153c:	ldr	pc, [ip, #2908]!	; 0xb5c

00011540 <__freading@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #110592	; 0x1b000
   11548:	ldr	pc, [ip, #2900]!	; 0xb54

0001154c <__gmon_start__@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #110592	; 0x1b000
   11554:	ldr	pc, [ip, #2892]!	; 0xb4c

00011558 <getopt_long@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #110592	; 0x1b000
   11560:	ldr	pc, [ip, #2884]!	; 0xb44

00011564 <__ctype_b_loc@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #110592	; 0x1b000
   1156c:	ldr	pc, [ip, #2876]!	; 0xb3c

00011570 <exit@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #110592	; 0x1b000
   11578:	ldr	pc, [ip, #2868]!	; 0xb34

0001157c <strtoul@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #110592	; 0x1b000
   11584:	ldr	pc, [ip, #2860]!	; 0xb2c

00011588 <strlen@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #110592	; 0x1b000
   11590:	ldr	pc, [ip, #2852]!	; 0xb24

00011594 <strchr@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #110592	; 0x1b000
   1159c:	ldr	pc, [ip, #2844]!	; 0xb1c

000115a0 <openat64@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #110592	; 0x1b000
   115a8:	ldr	pc, [ip, #2836]!	; 0xb14

000115ac <fchown@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #110592	; 0x1b000
   115b4:	ldr	pc, [ip, #2828]!	; 0xb0c

000115b8 <ungetc@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #110592	; 0x1b000
   115c0:	ldr	pc, [ip, #2820]!	; 0xb04

000115c4 <fcntl@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #110592	; 0x1b000
   115cc:	ldr	pc, [ip, #2812]!	; 0xafc

000115d0 <__errno_location@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #110592	; 0x1b000
   115d8:	ldr	pc, [ip, #2804]!	; 0xaf4

000115dc <__cxa_atexit@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #110592	; 0x1b000
   115e4:	ldr	pc, [ip, #2796]!	; 0xaec

000115e8 <memset@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #110592	; 0x1b000
   115f0:	ldr	pc, [ip, #2788]!	; 0xae4

000115f4 <fscanf@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #110592	; 0x1b000
   115fc:	ldr	pc, [ip, #2780]!	; 0xadc

00011600 <__printf_chk@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #110592	; 0x1b000
   11608:	ldr	pc, [ip, #2772]!	; 0xad4

0001160c <fileno@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #110592	; 0x1b000
   11614:	ldr	pc, [ip, #2764]!	; 0xacc

00011618 <__fprintf_chk@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #110592	; 0x1b000
   11620:	ldr	pc, [ip, #2756]!	; 0xac4

00011624 <fclose@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #110592	; 0x1b000
   1162c:	ldr	pc, [ip, #2748]!	; 0xabc

00011630 <fseeko64@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #110592	; 0x1b000
   11638:	ldr	pc, [ip, #2740]!	; 0xab4

0001163c <__uflow@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #110592	; 0x1b000
   11644:	ldr	pc, [ip, #2732]!	; 0xaac

00011648 <setlocale@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #110592	; 0x1b000
   11650:	ldr	pc, [ip, #2724]!	; 0xaa4

00011654 <endpwent@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #110592	; 0x1b000
   1165c:	ldr	pc, [ip, #2716]!	; 0xa9c

00011660 <strrchr@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #110592	; 0x1b000
   11668:	ldr	pc, [ip, #2708]!	; 0xa94

0001166c <nl_langinfo@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #110592	; 0x1b000
   11674:	ldr	pc, [ip, #2700]!	; 0xa8c

00011678 <readdir64@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #110592	; 0x1b000
   11680:	ldr	pc, [ip, #2692]!	; 0xa84

00011684 <fdopendir@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #110592	; 0x1b000
   1168c:	ldr	pc, [ip, #2684]!	; 0xa7c

00011690 <dirfd@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #110592	; 0x1b000
   11698:	ldr	pc, [ip, #2676]!	; 0xa74

0001169c <fchdir@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #110592	; 0x1b000
   116a4:	ldr	pc, [ip, #2668]!	; 0xa6c

000116a8 <qsort@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #110592	; 0x1b000
   116b0:	ldr	pc, [ip, #2660]!	; 0xa64

000116b4 <fchownat@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #110592	; 0x1b000
   116bc:	ldr	pc, [ip, #2652]!	; 0xa5c

000116c0 <bindtextdomain@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #110592	; 0x1b000
   116c8:	ldr	pc, [ip, #2644]!	; 0xa54

000116cc <__xstat64@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #110592	; 0x1b000
   116d4:	ldr	pc, [ip, #2636]!	; 0xa4c

000116d8 <strncmp@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #110592	; 0x1b000
   116e0:	ldr	pc, [ip, #2628]!	; 0xa44

000116e4 <abort@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #110592	; 0x1b000
   116ec:	ldr	pc, [ip, #2620]!	; 0xa3c

000116f0 <close@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #110592	; 0x1b000
   116f8:	ldr	pc, [ip, #2612]!	; 0xa34

000116fc <__lxstat64@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #110592	; 0x1b000
   11704:	ldr	pc, [ip, #2604]!	; 0xa2c

00011708 <closedir@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #110592	; 0x1b000
   11710:	ldr	pc, [ip, #2596]!	; 0xa24

00011714 <getgrgid@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #110592	; 0x1b000
   1171c:	ldr	pc, [ip, #2588]!	; 0xa1c

00011720 <getgrnam@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #110592	; 0x1b000
   11728:	ldr	pc, [ip, #2580]!	; 0xa14

0001172c <__assert_fail@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #110592	; 0x1b000
   11734:	ldr	pc, [ip, #2572]!	; 0xa0c

Disassembly of section .text:

00011738 <close_stdout@@Base-0x1954>:
   11738:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1173c:	sub	sp, sp, #204	; 0xcc
   11740:	ldr	r8, [pc, #1360]	; 11c98 <__assert_fail@plt+0x56c>
   11744:	mov	r5, r0
   11748:	ldr	r2, [pc, #1356]	; 11c9c <__assert_fail@plt+0x570>
   1174c:	mvn	r3, #0
   11750:	add	r8, pc, r8
   11754:	ldr	r0, [r1]
   11758:	mov	r4, r1
   1175c:	mov	ip, #0
   11760:	ldr	r2, [r8, r2]
   11764:	add	r9, sp, #64	; 0x40
   11768:	str	r3, [sp, #20]
   1176c:	mov	sl, #16
   11770:	str	r3, [sp, #48]	; 0x30
   11774:	ldr	r2, [r2]
   11778:	str	r3, [sp, #52]	; 0x34
   1177c:	str	r3, [sp, #56]	; 0x38
   11780:	str	r3, [sp, #60]	; 0x3c
   11784:	str	r2, [sp, #196]	; 0xc4
   11788:	str	ip, [sp, #24]
   1178c:	add	ip, sp, #56	; 0x38
   11790:	str	ip, [sp, #28]
   11794:	add	ip, sp, #60	; 0x3c
   11798:	str	ip, [sp, #32]
   1179c:	bl	132ac <close_stdout@@Base+0x220>
   117a0:	ldr	r1, [pc, #1272]	; 11ca0 <__assert_fail@plt+0x574>
   117a4:	mov	r0, #6
   117a8:	ldr	r6, [pc, #1268]	; 11ca4 <__assert_fail@plt+0x578>
   117ac:	add	r1, pc, r1
   117b0:	ldr	r7, [pc, #1264]	; 11ca8 <__assert_fail@plt+0x57c>
   117b4:	bl	11648 <setlocale@plt>
   117b8:	add	r6, pc, r6
   117bc:	ldr	r1, [pc, #1256]	; 11cac <__assert_fail@plt+0x580>
   117c0:	add	r7, pc, r7
   117c4:	mov	r0, r6
   117c8:	add	r1, pc, r1
   117cc:	bl	116c0 <bindtextdomain@plt>
   117d0:	mov	r0, r6
   117d4:	bl	1148c <textdomain@plt>
   117d8:	ldr	r3, [pc, #1232]	; 11cb0 <__assert_fail@plt+0x584>
   117dc:	ldr	ip, [pc, #1232]	; 11cb4 <__assert_fail@plt+0x588>
   117e0:	ldr	r6, [pc, #1232]	; 11cb8 <__assert_fail@plt+0x58c>
   117e4:	ldr	r0, [r8, r3]
   117e8:	add	ip, pc, ip
   117ec:	str	ip, [sp, #40]	; 0x28
   117f0:	add	r6, pc, r6
   117f4:	ldr	ip, [pc, #1216]	; 11cbc <__assert_fail@plt+0x590>
   117f8:	add	ip, pc, ip
   117fc:	str	ip, [sp, #36]	; 0x24
   11800:	bl	1a744 <fts_children@@Base+0x2928>
   11804:	mov	r0, r9
   11808:	bl	121e4 <__assert_fail@plt+0xab8>
   1180c:	mov	fp, #0
   11810:	mov	r0, r5
   11814:	str	fp, [sp]
   11818:	mov	r1, r4
   1181c:	mov	r2, r7
   11820:	mov	r3, r6
   11824:	bl	11558 <getopt_long@plt>
   11828:	cmn	r0, #1
   1182c:	beq	119ec <__assert_fail@plt+0x2c0>
   11830:	cmp	r0, #102	; 0x66
   11834:	beq	119e0 <__assert_fail@plt+0x2b4>
   11838:	bgt	118a8 <__assert_fail@plt+0x17c>
   1183c:	cmp	r0, #76	; 0x4c
   11840:	beq	119d8 <__assert_fail@plt+0x2ac>
   11844:	bgt	118d8 <__assert_fail@plt+0x1ac>
   11848:	cmn	r0, #2
   1184c:	beq	119d0 <__assert_fail@plt+0x2a4>
   11850:	cmp	r0, #72	; 0x48
   11854:	beq	11940 <__assert_fail@plt+0x214>
   11858:	cmn	r0, #3
   1185c:	bne	118f0 <__assert_fail@plt+0x1c4>
   11860:	ldr	r2, [pc, #1112]	; 11cc0 <__assert_fail@plt+0x594>
   11864:	ldr	r3, [pc, #1112]	; 11cc4 <__assert_fail@plt+0x598>
   11868:	ldr	r1, [pc, #1112]	; 11cc8 <__assert_fail@plt+0x59c>
   1186c:	ldr	r0, [r8, r2]
   11870:	ldr	r3, [r8, r3]
   11874:	add	r1, pc, r1
   11878:	ldr	r2, [pc, #1100]	; 11ccc <__assert_fail@plt+0x5a0>
   1187c:	ldr	r0, [r0]
   11880:	add	r2, pc, r2
   11884:	ldr	r3, [r3]
   11888:	stm	sp, {r1, r2, fp}
   1188c:	ldr	r1, [pc, #1084]	; 11cd0 <__assert_fail@plt+0x5a4>
   11890:	ldr	r2, [pc, #1084]	; 11cd4 <__assert_fail@plt+0x5a8>
   11894:	add	r1, pc, r1
   11898:	add	r2, pc, r2
   1189c:	bl	15410 <close_stdout@@Base+0x2384>
   118a0:	mov	r0, fp
   118a4:	bl	11570 <exit@plt>
   118a8:	movw	r3, #257	; 0x101
   118ac:	cmp	r0, r3
   118b0:	beq	11968 <__assert_fail@plt+0x23c>
   118b4:	bgt	118f8 <__assert_fail@plt+0x1cc>
   118b8:	cmp	r0, #118	; 0x76
   118bc:	beq	119c8 <__assert_fail@plt+0x29c>
   118c0:	cmp	r0, #256	; 0x100
   118c4:	beq	11934 <__assert_fail@plt+0x208>
   118c8:	cmp	r0, #104	; 0x68
   118cc:	bne	118f0 <__assert_fail@plt+0x1c4>
   118d0:	str	fp, [sp, #20]
   118d4:	b	1180c <__assert_fail@plt+0xe0>
   118d8:	cmp	r0, #82	; 0x52
   118dc:	beq	1195c <__assert_fail@plt+0x230>
   118e0:	cmp	r0, #99	; 0x63
   118e4:	beq	11928 <__assert_fail@plt+0x1fc>
   118e8:	cmp	r0, #80	; 0x50
   118ec:	beq	119c0 <__assert_fail@plt+0x294>
   118f0:	mov	r0, #1
   118f4:	bl	11e3c <__assert_fail@plt+0x710>
   118f8:	movw	r3, #259	; 0x103
   118fc:	cmp	r0, r3
   11900:	beq	11950 <__assert_fail@plt+0x224>
   11904:	blt	11948 <__assert_fail@plt+0x21c>
   11908:	cmp	r0, #260	; 0x104
   1190c:	bne	118f0 <__assert_fail@plt+0x1c4>
   11910:	ldr	r3, [pc, #960]	; 11cd8 <__assert_fail@plt+0x5ac>
   11914:	ldr	ip, [sp, #36]	; 0x24
   11918:	ldr	r3, [r8, r3]
   1191c:	ldr	r3, [r3]
   11920:	str	r3, [ip]
   11924:	b	1180c <__assert_fail@plt+0xe0>
   11928:	mov	r3, #1
   1192c:	str	r3, [sp, #64]	; 0x40
   11930:	b	1180c <__assert_fail@plt+0xe0>
   11934:	mov	ip, #1
   11938:	str	ip, [sp, #20]
   1193c:	b	1180c <__assert_fail@plt+0xe0>
   11940:	mov	sl, #17
   11944:	b	1180c <__assert_fail@plt+0xe0>
   11948:	str	fp, [sp, #24]
   1194c:	b	1180c <__assert_fail@plt+0xe0>
   11950:	mov	ip, #1
   11954:	str	ip, [sp, #24]
   11958:	b	1180c <__assert_fail@plt+0xe0>
   1195c:	mov	r3, #1
   11960:	strb	r3, [sp, #68]	; 0x44
   11964:	b	1180c <__assert_fail@plt+0xe0>
   11968:	ldr	r0, [pc, #872]	; 11cd8 <__assert_fail@plt+0x5ac>
   1196c:	mov	r3, fp
   11970:	add	r1, sp, #56	; 0x38
   11974:	add	r2, sp, #60	; 0x3c
   11978:	ldr	r0, [r8, r0]
   1197c:	str	fp, [sp]
   11980:	str	r0, [sp, #44]	; 0x2c
   11984:	ldr	r0, [r0]
   11988:	bl	14ebc <close_stdout@@Base+0x1e30>
   1198c:	subs	r3, r0, #0
   11990:	beq	1180c <__assert_fail@plt+0xe0>
   11994:	ldr	ip, [sp, #44]	; 0x2c
   11998:	ldr	r0, [ip]
   1199c:	str	r3, [sp, #16]
   119a0:	bl	14afc <close_stdout@@Base+0x1a70>
   119a4:	mov	r1, fp
   119a8:	ldr	r3, [sp, #16]
   119ac:	ldr	r2, [sp, #40]	; 0x28
   119b0:	str	r0, [sp]
   119b4:	mov	r0, #1
   119b8:	bl	11504 <error@plt>
   119bc:	b	1180c <__assert_fail@plt+0xe0>
   119c0:	mov	sl, #16
   119c4:	b	1180c <__assert_fail@plt+0xe0>
   119c8:	str	fp, [sp, #64]	; 0x40
   119cc:	b	1180c <__assert_fail@plt+0xe0>
   119d0:	mov	r0, fp
   119d4:	bl	11e3c <__assert_fail@plt+0x710>
   119d8:	mov	sl, #2
   119dc:	b	1180c <__assert_fail@plt+0xe0>
   119e0:	mov	r3, #1
   119e4:	strb	r3, [sp, #77]	; 0x4d
   119e8:	b	1180c <__assert_fail@plt+0xe0>
   119ec:	ldrb	r3, [sp, #68]	; 0x44
   119f0:	cmp	r3, fp
   119f4:	moveq	sl, #16
   119f8:	beq	11a04 <__assert_fail@plt+0x2d8>
   119fc:	cmp	sl, #16
   11a00:	beq	11b30 <__assert_fail@plt+0x404>
   11a04:	ldr	ip, [sp, #20]
   11a08:	ldr	r2, [pc, #716]	; 11cdc <__assert_fail@plt+0x5b0>
   11a0c:	ldr	r3, [pc, #716]	; 11ce0 <__assert_fail@plt+0x5b4>
   11a10:	adds	r1, ip, #0
   11a14:	add	r3, pc, r3
   11a18:	movne	r1, #1
   11a1c:	strb	r1, [sp, #76]	; 0x4c
   11a20:	ldr	r6, [r8, r2]
   11a24:	ldr	r7, [r3]
   11a28:	ldr	r3, [r6]
   11a2c:	cmp	r7, #0
   11a30:	rsb	r2, r3, r5
   11a34:	beq	11c10 <__assert_fail@plt+0x4e4>
   11a38:	cmp	r2, #0
   11a3c:	ble	11ac8 <__assert_fail@plt+0x39c>
   11a40:	mov	r0, #3
   11a44:	mov	r1, r7
   11a48:	add	r2, sp, #88	; 0x58
   11a4c:	bl	116cc <__xstat64@plt>
   11a50:	cmp	r0, #0
   11a54:	bne	11b6c <__assert_fail@plt+0x440>
   11a58:	ldr	r3, [sp, #112]	; 0x70
   11a5c:	ldr	r5, [sp, #116]	; 0x74
   11a60:	mov	r0, r3
   11a64:	str	r3, [sp, #48]	; 0x30
   11a68:	str	r5, [sp, #52]	; 0x34
   11a6c:	bl	12280 <__assert_fail@plt+0xb54>
   11a70:	str	r0, [sp, #80]	; 0x50
   11a74:	mov	r0, r5
   11a78:	bl	12214 <__assert_fail@plt+0xae8>
   11a7c:	str	r0, [sp, #84]	; 0x54
   11a80:	ldrb	r3, [sp, #68]	; 0x44
   11a84:	cmp	r3, #0
   11a88:	beq	11a98 <__assert_fail@plt+0x36c>
   11a8c:	ldr	ip, [sp, #24]
   11a90:	cmp	ip, #0
   11a94:	bne	11bac <__assert_fail@plt+0x480>
   11a98:	ldr	r0, [r6]
   11a9c:	orr	r1, sl, #1024	; 0x400
   11aa0:	ldr	r2, [sp, #56]	; 0x38
   11aa4:	ldr	r3, [sp, #60]	; 0x3c
   11aa8:	add	r0, r4, r0, lsl #2
   11aac:	stm	sp, {r2, r3, r9}
   11ab0:	ldr	r2, [sp, #48]	; 0x30
   11ab4:	ldr	r3, [sp, #52]	; 0x34
   11ab8:	bl	122ec <__assert_fail@plt+0xbc0>
   11abc:	rsbs	r0, r0, #1
   11ac0:	movcc	r0, #0
   11ac4:	bl	11570 <exit@plt>
   11ac8:	cmp	r5, r3
   11acc:	mov	r0, #0
   11ad0:	bgt	11af8 <__assert_fail@plt+0x3cc>
   11ad4:	ldr	r1, [pc, #520]	; 11ce4 <__assert_fail@plt+0x5b8>
   11ad8:	mov	r2, #5
   11adc:	add	r1, pc, r1
   11ae0:	bl	11468 <dcgettext@plt>
   11ae4:	mov	r2, r0
   11ae8:	mov	r0, #0
   11aec:	mov	r1, r0
   11af0:	bl	11504 <error@plt>
   11af4:	b	118f0 <__assert_fail@plt+0x1c4>
   11af8:	ldr	r1, [pc, #488]	; 11ce8 <__assert_fail@plt+0x5bc>
   11afc:	mov	r2, #5
   11b00:	sub	r5, r5, #-1073741823	; 0xc0000001
   11b04:	add	r1, pc, r1
   11b08:	bl	11468 <dcgettext@plt>
   11b0c:	mov	r6, r0
   11b10:	ldr	r0, [r4, r5, lsl #2]
   11b14:	bl	14afc <close_stdout@@Base+0x1a70>
   11b18:	mov	r2, r6
   11b1c:	mov	r3, r0
   11b20:	mov	r0, #0
   11b24:	mov	r1, r0
   11b28:	bl	11504 <error@plt>
   11b2c:	b	118f0 <__assert_fail@plt+0x1c4>
   11b30:	ldr	ip, [sp, #20]
   11b34:	cmp	ip, #1
   11b38:	strne	fp, [sp, #20]
   11b3c:	bne	11a04 <__assert_fail@plt+0x2d8>
   11b40:	ldr	r1, [pc, #420]	; 11cec <__assert_fail@plt+0x5c0>
   11b44:	mov	r2, #5
   11b48:	mov	r0, fp
   11b4c:	add	r1, pc, r1
   11b50:	bl	11468 <dcgettext@plt>
   11b54:	mov	r1, fp
   11b58:	mov	r2, r0
   11b5c:	ldr	r0, [sp, #20]
   11b60:	bl	11504 <error@plt>
   11b64:	str	fp, [sp, #20]
   11b68:	b	11a04 <__assert_fail@plt+0x2d8>
   11b6c:	bl	115d0 <__errno_location@plt>
   11b70:	ldr	r1, [pc, #376]	; 11cf0 <__assert_fail@plt+0x5c4>
   11b74:	mov	r2, #5
   11b78:	add	r1, pc, r1
   11b7c:	ldr	r5, [r0]
   11b80:	mov	r0, #0
   11b84:	bl	11468 <dcgettext@plt>
   11b88:	mov	r8, r0
   11b8c:	mov	r0, r7
   11b90:	bl	14afc <close_stdout@@Base+0x1a70>
   11b94:	mov	r1, r5
   11b98:	mov	r2, r8
   11b9c:	mov	r3, r0
   11ba0:	mov	r0, #1
   11ba4:	bl	11504 <error@plt>
   11ba8:	b	11a58 <__assert_fail@plt+0x32c>
   11bac:	ldr	r0, [pc, #320]	; 11cf4 <__assert_fail@plt+0x5c8>
   11bb0:	add	r0, pc, r0
   11bb4:	add	r0, r0, #8
   11bb8:	bl	14b08 <close_stdout@@Base+0x1a7c>
   11bbc:	cmp	r0, #0
   11bc0:	mov	r5, r0
   11bc4:	str	r0, [sp, #72]	; 0x48
   11bc8:	bne	11a98 <__assert_fail@plt+0x36c>
   11bcc:	bl	115d0 <__errno_location@plt>
   11bd0:	ldr	r1, [pc, #288]	; 11cf8 <__assert_fail@plt+0x5cc>
   11bd4:	mov	r2, #5
   11bd8:	add	r1, pc, r1
   11bdc:	ldr	r7, [r0]
   11be0:	mov	r0, r5
   11be4:	bl	11468 <dcgettext@plt>
   11be8:	mov	r5, r0
   11bec:	ldr	r0, [pc, #264]	; 11cfc <__assert_fail@plt+0x5d0>
   11bf0:	add	r0, pc, r0
   11bf4:	bl	14afc <close_stdout@@Base+0x1a70>
   11bf8:	mov	r1, r7
   11bfc:	mov	r2, r5
   11c00:	mov	r3, r0
   11c04:	mov	r0, #1
   11c08:	bl	11504 <error@plt>
   11c0c:	b	11a98 <__assert_fail@plt+0x36c>
   11c10:	cmp	r2, #1
   11c14:	ble	11ac8 <__assert_fail@plt+0x39c>
   11c18:	add	r2, r9, #20
   11c1c:	add	r1, sp, #48	; 0x30
   11c20:	str	r2, [sp]
   11c24:	add	r2, sp, #52	; 0x34
   11c28:	ldr	r0, [r4, r3, lsl #2]
   11c2c:	add	r3, r9, #16
   11c30:	bl	14ebc <close_stdout@@Base+0x1e30>
   11c34:	subs	r5, r0, #0
   11c38:	beq	11c64 <__assert_fail@plt+0x538>
   11c3c:	ldr	r3, [r6]
   11c40:	ldr	r0, [r4, r3, lsl #2]
   11c44:	bl	14afc <close_stdout@@Base+0x1a70>
   11c48:	ldr	r2, [pc, #176]	; 11d00 <__assert_fail@plt+0x5d4>
   11c4c:	mov	r1, r7
   11c50:	mov	r3, r5
   11c54:	add	r2, pc, r2
   11c58:	str	r0, [sp]
   11c5c:	mov	r0, #1
   11c60:	bl	11504 <error@plt>
   11c64:	ldr	r3, [sp, #80]	; 0x50
   11c68:	cmp	r3, #0
   11c6c:	beq	11c80 <__assert_fail@plt+0x554>
   11c70:	ldr	r3, [r6]
   11c74:	add	r3, r3, #1
   11c78:	str	r3, [r6]
   11c7c:	b	11a80 <__assert_fail@plt+0x354>
   11c80:	ldr	r3, [sp, #84]	; 0x54
   11c84:	cmp	r3, #0
   11c88:	ldrne	r3, [pc, #116]	; 11d04 <__assert_fail@plt+0x5d8>
   11c8c:	addne	r3, pc, r3
   11c90:	strne	r3, [sp, #80]	; 0x50
   11c94:	b	11c70 <__assert_fail@plt+0x544>
   11c98:	andeq	fp, r1, r8, lsr #17
   11c9c:	andeq	r0, r0, ip, asr #2
   11ca0:	andeq	r9, r0, r0, lsl #15
   11ca4:	andeq	r9, r0, r8, lsl #19
   11ca8:	andeq	r9, r0, r8, lsl #21
   11cac:	andeq	r9, r0, ip, lsr sl
   11cb0:	andeq	r0, r0, ip, asr r1
   11cb4:	andeq	r9, r0, r0, lsr sl
   11cb8:	andeq	fp, r1, ip, lsl #12
   11cbc:	ldrdeq	fp, [r1], -r8
   11cc0:	andeq	r0, r0, r8, ror #2
   11cc4:	andeq	r0, r0, r4, asr r1
   11cc8:			; <UNDEFINED> instruction: 0x000099b4
   11ccc:			; <UNDEFINED> instruction: 0x000099b8
   11cd0:	andeq	r9, r0, ip, lsl #19
   11cd4:	andeq	r9, r0, r4, lsr #17
   11cd8:	andeq	r0, r0, r0, lsl #3
   11cdc:	andeq	r0, r0, r0, asr r1
   11ce0:			; <UNDEFINED> instruction: 0x0001b7bc
   11ce4:	andeq	r9, r0, r4, lsr #15
   11ce8:	andeq	r9, r0, ip, lsl #15
   11cec:	andeq	r9, r0, r8, lsl #14
   11cf0:	andeq	r9, r0, r4, lsr r7
   11cf4:	andeq	fp, r1, r0, lsr #12
   11cf8:	ldrdeq	r9, [r0], -r4
   11cfc:	ldrdeq	r9, [r0], -ip
   11d00:	andeq	r9, r0, r4, asr #11
   11d04:	andeq	r9, r0, r0, lsr #5
   11d08:	mov	fp, #0
   11d0c:	mov	lr, #0
   11d10:	pop	{r1}		; (ldr r1, [sp], #4)
   11d14:	mov	r2, sp
   11d18:	push	{r2}		; (str r2, [sp, #-4]!)
   11d1c:	push	{r0}		; (str r0, [sp, #-4]!)
   11d20:	ldr	ip, [pc, #16]	; 11d38 <__assert_fail@plt+0x60c>
   11d24:	push	{ip}		; (str ip, [sp, #-4]!)
   11d28:	ldr	r0, [pc, #12]	; 11d3c <__assert_fail@plt+0x610>
   11d2c:	ldr	r3, [pc, #12]	; 11d40 <__assert_fail@plt+0x614>
   11d30:	bl	11534 <__libc_start_main@plt>
   11d34:	bl	116e4 <abort@plt>
   11d38:	andeq	sl, r1, r0, asr #14
   11d3c:	andeq	r1, r1, r8, lsr r7
   11d40:	ldrdeq	sl, [r1], -ip
   11d44:	ldr	r3, [pc, #20]	; 11d60 <__assert_fail@plt+0x634>
   11d48:	ldr	r2, [pc, #20]	; 11d64 <__assert_fail@plt+0x638>
   11d4c:	add	r3, pc, r3
   11d50:	ldr	r2, [r3, r2]
   11d54:	cmp	r2, #0
   11d58:	bxeq	lr
   11d5c:	b	1154c <__gmon_start__@plt>
   11d60:	andeq	fp, r1, ip, lsr #5
   11d64:	andeq	r0, r0, r0, ror #2
   11d68:	push	{r3, lr}
   11d6c:	movw	r0, #53712	; 0xd1d0
   11d70:	ldr	r3, [pc, #36]	; 11d9c <__assert_fail@plt+0x670>
   11d74:	movt	r0, #2
   11d78:	rsb	r3, r0, r3
   11d7c:	cmp	r3, #6
   11d80:	popls	{r3, pc}
   11d84:	movw	r3, #0
   11d88:	movt	r3, #0
   11d8c:	cmp	r3, #0
   11d90:	popeq	{r3, pc}
   11d94:	blx	r3
   11d98:	pop	{r3, pc}
   11d9c:	ldrdeq	sp, [r2], -r3
   11da0:	push	{r3, lr}
   11da4:	movw	r0, #53712	; 0xd1d0
   11da8:	movw	r3, #53712	; 0xd1d0
   11dac:	movt	r0, #2
   11db0:	movt	r3, #2
   11db4:	rsb	r3, r0, r3
   11db8:	asr	r3, r3, #2
   11dbc:	add	r3, r3, r3, lsr #31
   11dc0:	asrs	r1, r3, #1
   11dc4:	popeq	{r3, pc}
   11dc8:	movw	r2, #0
   11dcc:	movt	r2, #0
   11dd0:	cmp	r2, #0
   11dd4:	popeq	{r3, pc}
   11dd8:	blx	r2
   11ddc:	pop	{r3, pc}
   11de0:	push	{r4, lr}
   11de4:	movw	r4, #53712	; 0xd1d0
   11de8:	movt	r4, #2
   11dec:	ldrb	r3, [r4]
   11df0:	cmp	r3, #0
   11df4:	popne	{r4, pc}
   11df8:	bl	11d68 <__assert_fail@plt+0x63c>
   11dfc:	mov	r3, #1
   11e00:	strb	r3, [r4]
   11e04:	pop	{r4, pc}
   11e08:	movw	r0, #52736	; 0xce00
   11e0c:	movt	r0, #2
   11e10:	push	{r3, lr}
   11e14:	ldr	r3, [r0]
   11e18:	cmp	r3, #0
   11e1c:	beq	11e34 <__assert_fail@plt+0x708>
   11e20:	movw	r3, #0
   11e24:	movt	r3, #0
   11e28:	cmp	r3, #0
   11e2c:	beq	11e34 <__assert_fail@plt+0x708>
   11e30:	blx	r3
   11e34:	pop	{r3, lr}
   11e38:	b	11da0 <__assert_fail@plt+0x674>
   11e3c:	push	{r4, r5, r6, lr}
   11e40:	subs	r4, r0, #0
   11e44:	ldr	r5, [pc, #704]	; 1210c <__assert_fail@plt+0x9e0>
   11e48:	sub	sp, sp, #8
   11e4c:	add	r5, pc, r5
   11e50:	beq	11e98 <__assert_fail@plt+0x76c>
   11e54:	ldr	r3, [pc, #692]	; 12110 <__assert_fail@plt+0x9e4>
   11e58:	mov	r2, #5
   11e5c:	ldr	r1, [pc, #688]	; 12114 <__assert_fail@plt+0x9e8>
   11e60:	mov	r0, #0
   11e64:	ldr	r3, [r5, r3]
   11e68:	add	r1, pc, r1
   11e6c:	ldr	r6, [r3]
   11e70:	bl	11468 <dcgettext@plt>
   11e74:	ldr	r3, [pc, #668]	; 12118 <__assert_fail@plt+0x9ec>
   11e78:	mov	r1, #1
   11e7c:	ldr	r3, [r5, r3]
   11e80:	ldr	r3, [r3]
   11e84:	mov	r2, r0
   11e88:	mov	r0, r6
   11e8c:	bl	11618 <__fprintf_chk@plt>
   11e90:	mov	r0, r4
   11e94:	bl	11570 <exit@plt>
   11e98:	ldr	r1, [pc, #636]	; 1211c <__assert_fail@plt+0x9f0>
   11e9c:	mov	r2, #5
   11ea0:	add	r1, pc, r1
   11ea4:	bl	11468 <dcgettext@plt>
   11ea8:	ldr	r3, [pc, #616]	; 12118 <__assert_fail@plt+0x9ec>
   11eac:	ldr	r6, [r5, r3]
   11eb0:	ldr	r2, [r6]
   11eb4:	mov	r3, r2
   11eb8:	mov	r1, r0
   11ebc:	mov	r0, #1
   11ec0:	bl	11600 <__printf_chk@plt>
   11ec4:	ldr	r1, [pc, #596]	; 12120 <__assert_fail@plt+0x9f4>
   11ec8:	mov	r2, #5
   11ecc:	mov	r0, r4
   11ed0:	add	r1, pc, r1
   11ed4:	bl	11468 <dcgettext@plt>
   11ed8:	ldr	r3, [pc, #580]	; 12124 <__assert_fail@plt+0x9f8>
   11edc:	ldr	r5, [r5, r3]
   11ee0:	ldr	r1, [r5]
   11ee4:	bl	113c0 <fputs_unlocked@plt>
   11ee8:	ldr	r1, [pc, #568]	; 12128 <__assert_fail@plt+0x9fc>
   11eec:	mov	r2, #5
   11ef0:	mov	r0, r4
   11ef4:	add	r1, pc, r1
   11ef8:	bl	11468 <dcgettext@plt>
   11efc:	ldr	r1, [r5]
   11f00:	bl	113c0 <fputs_unlocked@plt>
   11f04:	ldr	r1, [pc, #544]	; 1212c <__assert_fail@plt+0xa00>
   11f08:	mov	r2, #5
   11f0c:	mov	r0, r4
   11f10:	add	r1, pc, r1
   11f14:	bl	11468 <dcgettext@plt>
   11f18:	ldr	r1, [r5]
   11f1c:	bl	113c0 <fputs_unlocked@plt>
   11f20:	ldr	r1, [pc, #520]	; 12130 <__assert_fail@plt+0xa04>
   11f24:	mov	r2, #5
   11f28:	mov	r0, r4
   11f2c:	add	r1, pc, r1
   11f30:	bl	11468 <dcgettext@plt>
   11f34:	ldr	r1, [r5]
   11f38:	bl	113c0 <fputs_unlocked@plt>
   11f3c:	ldr	r1, [pc, #496]	; 12134 <__assert_fail@plt+0xa08>
   11f40:	mov	r2, #5
   11f44:	mov	r0, r4
   11f48:	add	r1, pc, r1
   11f4c:	bl	11468 <dcgettext@plt>
   11f50:	ldr	r1, [r5]
   11f54:	bl	113c0 <fputs_unlocked@plt>
   11f58:	ldr	r1, [pc, #472]	; 12138 <__assert_fail@plt+0xa0c>
   11f5c:	mov	r2, #5
   11f60:	mov	r0, r4
   11f64:	add	r1, pc, r1
   11f68:	bl	11468 <dcgettext@plt>
   11f6c:	ldr	r1, [r5]
   11f70:	bl	113c0 <fputs_unlocked@plt>
   11f74:	ldr	r1, [pc, #448]	; 1213c <__assert_fail@plt+0xa10>
   11f78:	mov	r2, #5
   11f7c:	mov	r0, r4
   11f80:	add	r1, pc, r1
   11f84:	bl	11468 <dcgettext@plt>
   11f88:	ldr	r1, [r5]
   11f8c:	bl	113c0 <fputs_unlocked@plt>
   11f90:	ldr	r1, [pc, #424]	; 12140 <__assert_fail@plt+0xa14>
   11f94:	mov	r2, #5
   11f98:	mov	r0, r4
   11f9c:	add	r1, pc, r1
   11fa0:	bl	11468 <dcgettext@plt>
   11fa4:	ldr	r1, [r5]
   11fa8:	bl	113c0 <fputs_unlocked@plt>
   11fac:	ldr	r1, [pc, #400]	; 12144 <__assert_fail@plt+0xa18>
   11fb0:	mov	r2, #5
   11fb4:	mov	r0, r4
   11fb8:	add	r1, pc, r1
   11fbc:	bl	11468 <dcgettext@plt>
   11fc0:	ldr	r1, [r5]
   11fc4:	bl	113c0 <fputs_unlocked@plt>
   11fc8:	ldr	r1, [pc, #376]	; 12148 <__assert_fail@plt+0xa1c>
   11fcc:	mov	r2, #5
   11fd0:	mov	r0, r4
   11fd4:	add	r1, pc, r1
   11fd8:	bl	11468 <dcgettext@plt>
   11fdc:	ldr	r1, [r5]
   11fe0:	bl	113c0 <fputs_unlocked@plt>
   11fe4:	ldr	r1, [pc, #352]	; 1214c <__assert_fail@plt+0xa20>
   11fe8:	mov	r2, #5
   11fec:	mov	r0, r4
   11ff0:	add	r1, pc, r1
   11ff4:	bl	11468 <dcgettext@plt>
   11ff8:	ldr	r1, [r5]
   11ffc:	bl	113c0 <fputs_unlocked@plt>
   12000:	ldr	r1, [pc, #328]	; 12150 <__assert_fail@plt+0xa24>
   12004:	mov	r2, #5
   12008:	mov	r0, r4
   1200c:	add	r1, pc, r1
   12010:	bl	11468 <dcgettext@plt>
   12014:	ldr	r1, [r5]
   12018:	bl	113c0 <fputs_unlocked@plt>
   1201c:	ldr	r1, [pc, #304]	; 12154 <__assert_fail@plt+0xa28>
   12020:	mov	r2, #5
   12024:	mov	r0, r4
   12028:	add	r1, pc, r1
   1202c:	bl	11468 <dcgettext@plt>
   12030:	ldr	r3, [r6]
   12034:	mov	r2, r3
   12038:	str	r3, [sp]
   1203c:	mov	r1, r0
   12040:	mov	r0, #1
   12044:	bl	11600 <__printf_chk@plt>
   12048:	ldr	r1, [pc, #264]	; 12158 <__assert_fail@plt+0xa2c>
   1204c:	mov	r2, #5
   12050:	mov	r0, r4
   12054:	add	r1, pc, r1
   12058:	bl	11468 <dcgettext@plt>
   1205c:	ldr	r2, [pc, #248]	; 1215c <__assert_fail@plt+0xa30>
   12060:	ldr	r3, [pc, #248]	; 12160 <__assert_fail@plt+0xa34>
   12064:	add	r2, pc, r2
   12068:	add	r3, pc, r3
   1206c:	mov	r1, r0
   12070:	mov	r0, #1
   12074:	bl	11600 <__printf_chk@plt>
   12078:	mov	r0, #5
   1207c:	mov	r1, r4
   12080:	bl	11648 <setlocale@plt>
   12084:	cmp	r0, #0
   12088:	beq	120a4 <__assert_fail@plt+0x978>
   1208c:	ldr	r1, [pc, #208]	; 12164 <__assert_fail@plt+0xa38>
   12090:	mov	r2, #3
   12094:	add	r1, pc, r1
   12098:	bl	116d8 <strncmp@plt>
   1209c:	cmp	r0, #0
   120a0:	bne	120d8 <__assert_fail@plt+0x9ac>
   120a4:	ldr	r1, [pc, #188]	; 12168 <__assert_fail@plt+0xa3c>
   120a8:	mov	r2, #5
   120ac:	mov	r0, #0
   120b0:	add	r1, pc, r1
   120b4:	bl	11468 <dcgettext@plt>
   120b8:	mov	r5, r0
   120bc:	ldr	r0, [r6]
   120c0:	bl	131a4 <close_stdout@@Base+0x118>
   120c4:	mov	r1, r5
   120c8:	mov	r2, r0
   120cc:	mov	r0, #1
   120d0:	bl	11600 <__printf_chk@plt>
   120d4:	b	11e90 <__assert_fail@plt+0x764>
   120d8:	ldr	r1, [pc, #140]	; 1216c <__assert_fail@plt+0xa40>
   120dc:	mov	r2, #5
   120e0:	mov	r0, r4
   120e4:	add	r1, pc, r1
   120e8:	bl	11468 <dcgettext@plt>
   120ec:	mov	r5, r0
   120f0:	ldr	r0, [r6]
   120f4:	bl	131a4 <close_stdout@@Base+0x118>
   120f8:	mov	r1, r5
   120fc:	mov	r2, r0
   12100:	mov	r0, #1
   12104:	bl	11600 <__printf_chk@plt>
   12108:	b	120a4 <__assert_fail@plt+0x978>
   1210c:	andeq	fp, r1, ip, lsr #3
   12110:	andeq	r0, r0, r8, asr r1
   12114:	andeq	r8, r0, r0, lsl r9
   12118:	andeq	r0, r0, r4, ror r1
   1211c:	andeq	r8, r0, r0, lsl #18
   12120:	andeq	r8, r0, r4, lsr r9
   12124:	andeq	r0, r0, r8, ror #2
   12128:	andeq	r8, r0, r4, lsr #19
   1212c:	andeq	r8, r0, r4, asr sl
   12130:	andeq	r8, r0, r0, lsr #22
   12134:	andeq	r8, r0, ip, ror fp
   12138:			; <UNDEFINED> instruction: 0x00008cb4
   1213c:	andeq	r8, r0, r8, lsl sp
   12140:	andeq	r8, r0, r8, ror sp
   12144:	andeq	r8, r0, r4, lsr #27
   12148:	andeq	r8, r0, ip, asr pc
   1214c:	andeq	r8, r0, r0, ror pc
   12150:	andeq	r8, r0, ip, lsl #31
   12154:	andeq	r9, r0, r0, lsr r0
   12158:	ldrdeq	r9, [r0], -r0
   1215c:	ldrdeq	r9, [r0], -r8
   12160:	andeq	r9, r0, r4, ror #1
   12164:	andeq	r9, r0, r0, ror #1
   12168:	andeq	r9, r0, r0, lsl r1
   1216c:	muleq	r0, r4, r0
   12170:	push	{r4, r5, r6, lr}
   12174:	subs	r5, r0, #0
   12178:	mov	r4, r1
   1217c:	beq	121c8 <__assert_fail@plt+0xa9c>
   12180:	cmp	r1, #0
   12184:	beq	121d4 <__assert_fail@plt+0xaa8>
   12188:	bl	11588 <strlen@plt>
   1218c:	mov	r6, r0
   12190:	mov	r0, r4
   12194:	bl	11588 <strlen@plt>
   12198:	add	r0, r6, r0
   1219c:	add	r0, r0, #2
   121a0:	bl	15520 <close_stdout@@Base+0x2494>
   121a4:	mov	r1, r5
   121a8:	mov	r6, r0
   121ac:	bl	1145c <stpcpy@plt>
   121b0:	mov	r3, #58	; 0x3a
   121b4:	mov	r1, r4
   121b8:	strb	r3, [r0], #1
   121bc:	bl	114e0 <strcpy@plt>
   121c0:	mov	r0, r6
   121c4:	pop	{r4, r5, r6, pc}
   121c8:	cmp	r1, #0
   121cc:	beq	121dc <__assert_fail@plt+0xab0>
   121d0:	mov	r0, r1
   121d4:	pop	{r4, r5, r6, lr}
   121d8:	b	15718 <close_stdout@@Base+0x268c>
   121dc:	mov	r6, r1
   121e0:	b	121c0 <__assert_fail@plt+0xa94>
   121e4:	mov	r3, #1
   121e8:	mov	r2, #2
   121ec:	strb	r3, [r0, #12]
   121f0:	mov	r3, #0
   121f4:	str	r2, [r0]
   121f8:	str	r3, [r0, #8]
   121fc:	strb	r3, [r0, #4]
   12200:	strb	r3, [r0, #13]
   12204:	str	r3, [r0, #16]
   12208:	str	r3, [r0, #20]
   1220c:	bx	lr
   12210:	bx	lr
   12214:	ldr	r3, [pc, #92]	; 12278 <__assert_fail@plt+0xb4c>
   12218:	ldr	r2, [pc, #92]	; 1227c <__assert_fail@plt+0xb50>
   1221c:	add	r3, pc, r3
   12220:	push	{r4, r5, lr}
   12224:	sub	sp, sp, #36	; 0x24
   12228:	ldr	r4, [r3, r2]
   1222c:	mov	r5, r0
   12230:	ldr	r3, [r4]
   12234:	str	r3, [sp, #28]
   12238:	bl	11714 <getgrgid@plt>
   1223c:	subs	r1, r0, #0
   12240:	beq	12264 <__assert_fail@plt+0xb38>
   12244:	ldr	r0, [r1]
   12248:	bl	15718 <close_stdout@@Base+0x268c>
   1224c:	ldr	r2, [sp, #28]
   12250:	ldr	r3, [r4]
   12254:	cmp	r2, r3
   12258:	bne	12274 <__assert_fail@plt+0xb48>
   1225c:	add	sp, sp, #36	; 0x24
   12260:	pop	{r4, r5, pc}
   12264:	mov	r0, r5
   12268:	add	r2, sp, #4
   1226c:	bl	13248 <close_stdout@@Base+0x1bc>
   12270:	b	12248 <__assert_fail@plt+0xb1c>
   12274:	bl	11474 <__stack_chk_fail@plt>
   12278:	ldrdeq	sl, [r1], -ip
   1227c:	andeq	r0, r0, ip, asr #2
   12280:	ldr	r3, [pc, #92]	; 122e4 <__assert_fail@plt+0xbb8>
   12284:	ldr	r2, [pc, #92]	; 122e8 <__assert_fail@plt+0xbbc>
   12288:	add	r3, pc, r3
   1228c:	push	{r4, r5, lr}
   12290:	sub	sp, sp, #36	; 0x24
   12294:	ldr	r4, [r3, r2]
   12298:	mov	r5, r0
   1229c:	ldr	r3, [r4]
   122a0:	str	r3, [sp, #28]
   122a4:	bl	113f0 <getpwuid@plt>
   122a8:	subs	r1, r0, #0
   122ac:	beq	122d0 <__assert_fail@plt+0xba4>
   122b0:	ldr	r0, [r1]
   122b4:	bl	15718 <close_stdout@@Base+0x268c>
   122b8:	ldr	r2, [sp, #28]
   122bc:	ldr	r3, [r4]
   122c0:	cmp	r2, r3
   122c4:	bne	122e0 <__assert_fail@plt+0xbb4>
   122c8:	add	sp, sp, #36	; 0x24
   122cc:	pop	{r4, r5, pc}
   122d0:	mov	r0, r5
   122d4:	add	r2, sp, #4
   122d8:	bl	13248 <close_stdout@@Base+0x1bc>
   122dc:	b	122b4 <__assert_fail@plt+0xb88>
   122e0:	bl	11474 <__stack_chk_fail@plt>
   122e4:	andeq	sl, r1, r0, ror sp
   122e8:	andeq	r0, r0, ip, asr #2
   122ec:	ldr	ip, [pc, #3312]	; 12fe4 <__assert_fail@plt+0x18b8>
   122f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122f4:	add	ip, pc, ip
   122f8:	ldr	lr, [pc, #3304]	; 12fe8 <__assert_fail@plt+0x18bc>
   122fc:	sub	sp, sp, #292	; 0x124
   12300:	str	r2, [sp, #32]
   12304:	str	r3, [sp, #36]	; 0x24
   12308:	mov	r3, ip
   1230c:	ldr	lr, [ip, lr]
   12310:	ldr	r4, [sp, #332]	; 0x14c
   12314:	ldr	ip, [sp, #328]	; 0x148
   12318:	ldr	r3, [lr]
   1231c:	cmn	ip, #1
   12320:	cmneq	r4, #1
   12324:	str	lr, [sp, #44]	; 0x2c
   12328:	ldr	r7, [sp, #336]	; 0x150
   1232c:	str	r3, [sp, #284]	; 0x11c
   12330:	moveq	r2, #0
   12334:	movne	r2, #1
   12338:	movne	r3, #0
   1233c:	bne	12350 <__assert_fail@plt+0xc24>
   12340:	ldrb	r3, [r7, #12]
   12344:	cmp	r3, #0
   12348:	movne	r3, r2
   1234c:	beq	12a2c <__assert_fail@plt+0x1300>
   12350:	ldr	r4, [pc, #3220]	; 12fec <__assert_fail@plt+0x18c0>
   12354:	orr	r1, r3, r1
   12358:	ldr	ip, [pc, #3216]	; 12ff0 <__assert_fail@plt+0x18c4>
   1235c:	mov	r2, #0
   12360:	add	r4, pc, r4
   12364:	str	r4, [sp, #52]	; 0x34
   12368:	add	ip, pc, ip
   1236c:	ldr	r4, [pc, #3200]	; 12ff4 <__assert_fail@plt+0x18c8>
   12370:	str	ip, [sp, #48]	; 0x30
   12374:	ldr	ip, [pc, #3196]	; 12ff8 <__assert_fail@plt+0x18cc>
   12378:	add	r4, pc, r4
   1237c:	str	r4, [sp, #56]	; 0x38
   12380:	add	ip, pc, ip
   12384:	str	ip, [sp, #60]	; 0x3c
   12388:	bl	1578c <close_stdout@@Base+0x2700>
   1238c:	ldr	r4, [pc, #3176]	; 12ffc <__assert_fail@plt+0x18d0>
   12390:	add	r4, pc, r4
   12394:	mov	r6, r0
   12398:	bl	115d0 <__errno_location@plt>
   1239c:	str	r4, [sp, #64]	; 0x40
   123a0:	mov	fp, r6
   123a4:	ldr	r4, [pc, #3156]	; 13000 <__assert_fail@plt+0x18d4>
   123a8:	mov	ip, #1
   123ac:	str	ip, [sp, #24]
   123b0:	add	r4, pc, r4
   123b4:	str	r4, [sp, #68]	; 0x44
   123b8:	str	r0, [sp, #40]	; 0x28
   123bc:	mov	r0, fp
   123c0:	bl	1758c <fts_read@@Base>
   123c4:	subs	sl, r0, #0
   123c8:	beq	124e8 <__assert_fail@plt+0xdbc>
   123cc:	ldr	r4, [sl, #28]
   123d0:	ldrh	r5, [sl, #60]	; 0x3c
   123d4:	ldr	r9, [sl, #24]
   123d8:	str	r4, [sp, #28]
   123dc:	sub	r4, r5, #1
   123e0:	cmp	r4, #9
   123e4:	addls	pc, pc, r4, lsl #2
   123e8:	b	125c8 <__assert_fail@plt+0xe9c>
   123ec:	b	126d4 <__assert_fail@plt+0xfa8>
   123f0:	b	125b4 <__assert_fail@plt+0xe88>
   123f4:	b	125c8 <__assert_fail@plt+0xe9c>
   123f8:	b	1256c <__assert_fail@plt+0xe40>
   123fc:	b	125c8 <__assert_fail@plt+0xe9c>
   12400:	b	124cc <__assert_fail@plt+0xda0>
   12404:	b	12498 <__assert_fail@plt+0xd6c>
   12408:	b	125c8 <__assert_fail@plt+0xe9c>
   1240c:	b	125c8 <__assert_fail@plt+0xe9c>
   12410:	b	12414 <__assert_fail@plt+0xce8>
   12414:	ldr	r3, [sl, #48]	; 0x30
   12418:	cmp	r3, #0
   1241c:	bne	1242c <__assert_fail@plt+0xd00>
   12420:	ldr	r3, [sl, #16]
   12424:	cmp	r3, #0
   12428:	beq	12b98 <__assert_fail@plt+0x146c>
   1242c:	ldrb	r4, [r7, #13]
   12430:	ldr	r1, [pc, #3020]	; 13004 <__assert_fail@plt+0x18d8>
   12434:	cmp	r4, #0
   12438:	mov	r0, r4
   1243c:	add	r1, pc, r1
   12440:	beq	12584 <__assert_fail@plt+0xe58>
   12444:	mov	r8, #0
   12448:	mov	r4, #1
   1244c:	mov	r6, r8
   12450:	mov	r2, r8
   12454:	str	r8, [sp, #16]
   12458:	ldr	r3, [r7]
   1245c:	cmp	r3, #2
   12460:	beq	126ac <__assert_fail@plt+0xf80>
   12464:	ldr	ip, [sp, #16]
   12468:	tst	ip, r2
   1246c:	beq	127c4 <__assert_fail@plt+0x1098>
   12470:	cmp	r4, #0
   12474:	beq	127c4 <__assert_fail@plt+0x1098>
   12478:	ldr	ip, [sp, #32]
   1247c:	cmn	ip, #1
   12480:	beq	127ac <__assert_fail@plt+0x1080>
   12484:	ldr	r1, [r6, #24]
   12488:	cmp	ip, r1
   1248c:	beq	127ac <__assert_fail@plt+0x1080>
   12490:	mov	r5, #2
   12494:	b	127e4 <__assert_fail@plt+0x10b8>
   12498:	ldrb	r4, [r7, #13]
   1249c:	cmp	r4, #0
   124a0:	bne	12444 <__assert_fail@plt+0xd18>
   124a4:	ldr	r0, [sp, #28]
   124a8:	ldr	r5, [sl, #32]
   124ac:	bl	14afc <close_stdout@@Base+0x1a70>
   124b0:	ldr	r2, [pc, #2896]	; 13008 <__assert_fail@plt+0x18dc>
   124b4:	mov	r1, r5
   124b8:	add	r2, pc, r2
   124bc:	mov	r3, r0
   124c0:	mov	r0, r4
   124c4:	bl	11504 <error@plt>
   124c8:	b	12444 <__assert_fail@plt+0xd18>
   124cc:	ldrb	r3, [r7, #4]
   124d0:	cmp	r3, #0
   124d4:	bne	125c8 <__assert_fail@plt+0xe9c>
   124d8:	mov	r0, fp
   124dc:	bl	1758c <fts_read@@Base>
   124e0:	subs	sl, r0, #0
   124e4:	bne	123cc <__assert_fail@plt+0xca0>
   124e8:	ldr	ip, [sp, #40]	; 0x28
   124ec:	mov	r6, fp
   124f0:	ldr	r4, [ip]
   124f4:	cmp	r4, #0
   124f8:	beq	1250c <__assert_fail@plt+0xde0>
   124fc:	ldrb	r5, [r7, #13]
   12500:	cmp	r5, #0
   12504:	strne	sl, [sp, #24]
   12508:	beq	12bb0 <__assert_fail@plt+0x1484>
   1250c:	mov	r0, r6
   12510:	bl	17414 <fts_close@@Base>
   12514:	cmp	r0, #0
   12518:	beq	1254c <__assert_fail@plt+0xe20>
   1251c:	ldr	ip, [sp, #40]	; 0x28
   12520:	mov	r2, #5
   12524:	ldr	r1, [pc, #2784]	; 1300c <__assert_fail@plt+0x18e0>
   12528:	mov	r0, #0
   1252c:	add	r1, pc, r1
   12530:	ldr	r4, [ip]
   12534:	bl	11468 <dcgettext@plt>
   12538:	mov	r1, r4
   1253c:	mov	r2, r0
   12540:	mov	r0, #0
   12544:	str	r0, [sp, #24]
   12548:	bl	11504 <error@plt>
   1254c:	ldr	ip, [sp, #44]	; 0x2c
   12550:	ldr	r2, [sp, #284]	; 0x11c
   12554:	ldr	r0, [sp, #24]
   12558:	ldr	r3, [ip]
   1255c:	cmp	r2, r3
   12560:	bne	12fd8 <__assert_fail@plt+0x18ac>
   12564:	add	sp, sp, #292	; 0x124
   12568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1256c:	ldrb	r4, [r7, #13]
   12570:	cmp	r4, #0
   12574:	bne	12444 <__assert_fail@plt+0xd18>
   12578:	ldr	r1, [pc, #2704]	; 13010 <__assert_fail@plt+0x18e4>
   1257c:	mov	r0, r4
   12580:	add	r1, pc, r1
   12584:	mov	r2, #5
   12588:	ldr	r5, [sl, #32]
   1258c:	bl	11468 <dcgettext@plt>
   12590:	mov	r6, r0
   12594:	ldr	r0, [sp, #28]
   12598:	bl	14afc <close_stdout@@Base+0x1a70>
   1259c:	mov	r1, r5
   125a0:	mov	r2, r6
   125a4:	mov	r3, r0
   125a8:	mov	r0, r4
   125ac:	bl	11504 <error@plt>
   125b0:	b	12444 <__assert_fail@plt+0xd18>
   125b4:	mov	r0, fp
   125b8:	mov	r1, sl
   125bc:	bl	157e0 <close_stdout@@Base+0x2754>
   125c0:	cmp	r0, #0
   125c4:	bne	12c00 <__assert_fail@plt+0x14d4>
   125c8:	ldr	r0, [sp, #328]	; 0x148
   125cc:	ldr	r1, [sp, #332]	; 0x14c
   125d0:	cmn	r0, #1
   125d4:	movne	ip, #0
   125d8:	moveq	ip, #1
   125dc:	cmn	r1, #1
   125e0:	movne	r1, #0
   125e4:	moveq	r1, #1
   125e8:	ands	r8, ip, r1
   125ec:	str	r1, [sp, #20]
   125f0:	beq	12600 <__assert_fail@plt+0xed4>
   125f4:	ldr	r3, [r7]
   125f8:	cmp	r3, #2
   125fc:	beq	12b70 <__assert_fail@plt+0x1444>
   12600:	ldrb	r3, [r7, #12]
   12604:	add	r6, sl, #72	; 0x48
   12608:	cmp	r3, #0
   1260c:	beq	12620 <__assert_fail@plt+0xef4>
   12610:	ldr	r3, [sl, #88]	; 0x58
   12614:	and	r3, r3, #61440	; 0xf000
   12618:	cmp	r3, #40960	; 0xa000
   1261c:	beq	12c3c <__assert_fail@plt+0x1510>
   12620:	cmp	ip, #0
   12624:	bne	12a40 <__assert_fail@plt+0x1314>
   12628:	ldr	r3, [r6, #24]
   1262c:	ldr	r0, [sp, #328]	; 0x148
   12630:	cmp	r0, r3
   12634:	strne	ip, [sp, #16]
   12638:	beq	12a40 <__assert_fail@plt+0x1314>
   1263c:	uxth	r4, r4
   12640:	cmp	r4, #1
   12644:	bls	128d0 <__assert_fail@plt+0x11a4>
   12648:	movw	r3, #65533	; 0xfffd
   1264c:	and	r3, r5, r3
   12650:	cmp	r3, #4
   12654:	beq	128d0 <__assert_fail@plt+0x11a4>
   12658:	ldr	r4, [sp, #16]
   1265c:	cmp	r4, #0
   12660:	beq	12fdc <__assert_fail@plt+0x18b0>
   12664:	ldrb	r4, [r7, #12]
   12668:	cmp	r4, #0
   1266c:	bne	12954 <__assert_fail@plt+0x1228>
   12670:	ldr	r0, [fp, #32]
   12674:	mov	r3, #256	; 0x100
   12678:	mov	r1, r9
   1267c:	str	r3, [sp]
   12680:	ldr	r2, [sp, #32]
   12684:	ldr	r3, [sp, #36]	; 0x24
   12688:	bl	116b4 <fchownat@plt>
   1268c:	cmp	r0, #0
   12690:	bne	12a04 <__assert_fail@plt+0x12d8>
   12694:	ldr	r8, [sp, #24]
   12698:	mov	r4, #1
   1269c:	ldr	r3, [r7]
   126a0:	ldr	r2, [sp, #16]
   126a4:	cmp	r3, #2
   126a8:	bne	12464 <__assert_fail@plt+0xd38>
   126ac:	ldrb	r3, [r7, #4]
   126b0:	cmp	r3, #0
   126b4:	strne	r8, [sp, #24]
   126b8:	bne	123bc <__assert_fail@plt+0xc90>
   126bc:	mov	r1, sl
   126c0:	mov	r0, fp
   126c4:	mov	r2, #4
   126c8:	str	r8, [sp, #24]
   126cc:	bl	17df0 <fts_set@@Base>
   126d0:	b	123bc <__assert_fail@plt+0xc90>
   126d4:	ldrb	r3, [r7, #4]
   126d8:	cmp	r3, #0
   126dc:	beq	125c8 <__assert_fail@plt+0xe9c>
   126e0:	ldr	ip, [r7, #8]
   126e4:	cmp	ip, #0
   126e8:	beq	123bc <__assert_fail@plt+0xc90>
   126ec:	ldrd	r0, [sl, #168]	; 0xa8
   126f0:	ldrd	r2, [ip]
   126f4:	cmp	r1, r3
   126f8:	cmpeq	r0, r2
   126fc:	bne	123bc <__assert_fail@plt+0xc90>
   12700:	ldrd	r2, [sl, #72]	; 0x48
   12704:	ldrd	r0, [ip, #8]
   12708:	cmp	r3, r1
   1270c:	cmpeq	r2, r0
   12710:	bne	123bc <__assert_fail@plt+0xc90>
   12714:	ldr	ip, [sp, #28]
   12718:	ldrb	r3, [ip]
   1271c:	cmp	r3, #47	; 0x2f
   12720:	bne	12e94 <__assert_fail@plt+0x1768>
   12724:	ldrb	r4, [ip, #1]
   12728:	cmp	r4, #0
   1272c:	bne	12e94 <__assert_fail@plt+0x1768>
   12730:	ldr	r1, [pc, #2268]	; 13014 <__assert_fail@plt+0x18e8>
   12734:	mov	r2, #5
   12738:	mov	r0, r4
   1273c:	add	r1, pc, r1
   12740:	bl	11468 <dcgettext@plt>
   12744:	mov	r5, r0
   12748:	ldr	r0, [sp, #28]
   1274c:	bl	14afc <close_stdout@@Base+0x1a70>
   12750:	mov	r1, r4
   12754:	mov	r2, r5
   12758:	mov	r3, r0
   1275c:	mov	r0, r4
   12760:	bl	11504 <error@plt>
   12764:	ldr	r1, [pc, #2220]	; 13018 <__assert_fail@plt+0x18ec>
   12768:	mov	r0, #0
   1276c:	mov	r2, #5
   12770:	mov	r4, r0
   12774:	add	r1, pc, r1
   12778:	str	r0, [sp, #24]
   1277c:	bl	11468 <dcgettext@plt>
   12780:	mov	r1, r4
   12784:	mov	r2, r0
   12788:	mov	r0, r4
   1278c:	bl	11504 <error@plt>
   12790:	mov	r0, fp
   12794:	mov	r1, sl
   12798:	mov	r2, #4
   1279c:	bl	17df0 <fts_set@@Base>
   127a0:	mov	r0, fp
   127a4:	bl	1758c <fts_read@@Base>
   127a8:	b	123bc <__assert_fail@plt+0xc90>
   127ac:	ldr	ip, [sp, #36]	; 0x24
   127b0:	cmn	ip, #1
   127b4:	beq	127c4 <__assert_fail@plt+0x1098>
   127b8:	ldr	r1, [r6, #28]
   127bc:	cmp	ip, r1
   127c0:	bne	12490 <__assert_fail@plt+0xd64>
   127c4:	cmp	r3, #0
   127c8:	bne	126ac <__assert_fail@plt+0xf80>
   127cc:	cmp	r2, #0
   127d0:	moveq	r5, #3
   127d4:	beq	127e4 <__assert_fail@plt+0x10b8>
   127d8:	cmp	r4, #0
   127dc:	movne	r5, #4
   127e0:	moveq	r5, #1
   127e4:	cmp	r6, #0
   127e8:	streq	r6, [sp, #16]
   127ec:	beq	12808 <__assert_fail@plt+0x10dc>
   127f0:	ldr	r0, [r6, #24]
   127f4:	bl	12280 <__assert_fail@plt+0xb54>
   127f8:	str	r0, [sp, #16]
   127fc:	ldr	r0, [r6, #28]
   12800:	bl	12214 <__assert_fail@plt+0xae8>
   12804:	mov	r6, r0
   12808:	cmp	r5, #1
   1280c:	ldr	r9, [r7, #16]
   12810:	ldr	r4, [r7, #20]
   12814:	beq	12a98 <__assert_fail@plt+0x136c>
   12818:	mov	r1, r4
   1281c:	mov	r0, r9
   12820:	bl	12170 <__assert_fail@plt+0xa44>
   12824:	cmp	r4, #0
   12828:	movne	r1, r6
   1282c:	moveq	r1, #0
   12830:	cmp	r9, #0
   12834:	str	r0, [sp, #24]
   12838:	ldr	r0, [sp, #16]
   1283c:	moveq	r0, #0
   12840:	bl	12170 <__assert_fail@plt+0xa44>
   12844:	cmp	r5, #3
   12848:	str	r0, [sp, #20]
   1284c:	beq	12a68 <__assert_fail@plt+0x133c>
   12850:	cmp	r5, #4
   12854:	beq	129e0 <__assert_fail@plt+0x12b4>
   12858:	cmp	r9, #0
   1285c:	beq	12ca8 <__assert_fail@plt+0x157c>
   12860:	ldr	r1, [pc, #1972]	; 1301c <__assert_fail@plt+0x18f0>
   12864:	mov	r0, #0
   12868:	mov	r2, #5
   1286c:	add	r1, pc, r1
   12870:	bl	11468 <dcgettext@plt>
   12874:	mov	r4, r0
   12878:	ldr	r0, [sp, #28]
   1287c:	bl	14afc <close_stdout@@Base+0x1a70>
   12880:	ldr	ip, [sp, #24]
   12884:	mov	r1, r4
   12888:	ldr	r3, [sp, #20]
   1288c:	str	ip, [sp]
   12890:	mov	r2, r0
   12894:	mov	r0, #1
   12898:	bl	11600 <__printf_chk@plt>
   1289c:	ldr	r0, [sp, #20]
   128a0:	bl	11414 <free@plt>
   128a4:	ldr	r0, [sp, #24]
   128a8:	bl	11414 <free@plt>
   128ac:	ldr	r0, [sp, #16]
   128b0:	bl	11414 <free@plt>
   128b4:	mov	r0, r6
   128b8:	bl	11414 <free@plt>
   128bc:	ldrb	r3, [r7, #4]
   128c0:	cmp	r3, #0
   128c4:	strne	r8, [sp, #24]
   128c8:	bne	123bc <__assert_fail@plt+0xc90>
   128cc:	b	126bc <__assert_fail@plt+0xf90>
   128d0:	ldr	r3, [r7, #8]
   128d4:	cmp	r3, #0
   128d8:	beq	12658 <__assert_fail@plt+0xf2c>
   128dc:	ldrd	r4, [r6, #96]	; 0x60
   128e0:	ldrd	r0, [r3]
   128e4:	cmp	r5, r1
   128e8:	cmpeq	r4, r0
   128ec:	bne	12658 <__assert_fail@plt+0xf2c>
   128f0:	ldrd	r0, [r6]
   128f4:	ldrd	r2, [r3, #8]
   128f8:	cmp	r1, r3
   128fc:	cmpeq	r0, r2
   12900:	bne	12658 <__assert_fail@plt+0xf2c>
   12904:	ldr	r4, [sp, #28]
   12908:	ldrb	r3, [r4]
   1290c:	cmp	r3, #47	; 0x2f
   12910:	bne	12da8 <__assert_fail@plt+0x167c>
   12914:	ldrb	r4, [r4, #1]
   12918:	cmp	r4, #0
   1291c:	bne	12da8 <__assert_fail@plt+0x167c>
   12920:	ldr	r1, [sp, #68]	; 0x44
   12924:	mov	r2, #5
   12928:	mov	r0, r4
   1292c:	bl	11468 <dcgettext@plt>
   12930:	mov	r5, r0
   12934:	ldr	r0, [sp, #28]
   12938:	bl	14afc <close_stdout@@Base+0x1a70>
   1293c:	mov	r1, r4
   12940:	mov	r2, r5
   12944:	mov	r3, r0
   12948:	mov	r0, r4
   1294c:	bl	11504 <error@plt>
   12950:	b	12df0 <__assert_fail@plt+0x16c4>
   12954:	cmp	r8, #0
   12958:	ldr	r4, [fp, #32]
   1295c:	beq	12acc <__assert_fail@plt+0x13a0>
   12960:	mov	r3, #0
   12964:	mov	r0, r4
   12968:	str	r3, [sp]
   1296c:	mov	r1, r9
   12970:	ldr	r2, [sp, #32]
   12974:	ldr	r3, [sp, #36]	; 0x24
   12978:	bl	116b4 <fchownat@plt>
   1297c:	cmp	r0, #0
   12980:	beq	12d98 <__assert_fail@plt+0x166c>
   12984:	ldrb	r8, [r7, #13]
   12988:	cmp	r8, #0
   1298c:	bne	12a1c <__assert_fail@plt+0x12f0>
   12990:	ldr	ip, [sp, #32]
   12994:	mov	r2, #5
   12998:	mov	r0, r8
   1299c:	cmn	ip, #1
   129a0:	ldr	ip, [sp, #40]	; 0x28
   129a4:	ldrne	r1, [sp, #48]	; 0x30
   129a8:	ldreq	r1, [sp, #52]	; 0x34
   129ac:	ldr	r4, [ip]
   129b0:	bl	11468 <dcgettext@plt>
   129b4:	mov	r5, r0
   129b8:	ldr	r0, [sp, #28]
   129bc:	bl	14afc <close_stdout@@Base+0x1a70>
   129c0:	mov	r1, r4
   129c4:	mov	r2, r5
   129c8:	mov	r4, #1
   129cc:	mov	r3, r0
   129d0:	mov	r0, #0
   129d4:	bl	11504 <error@plt>
   129d8:	mov	r2, #0
   129dc:	b	12458 <__assert_fail@plt+0xd2c>
   129e0:	cmp	r9, #0
   129e4:	beq	12c84 <__assert_fail@plt+0x1558>
   129e8:	ldr	r1, [pc, #1584]	; 13020 <__assert_fail@plt+0x18f4>
   129ec:	mov	r0, #0
   129f0:	mov	r2, #5
   129f4:	add	r1, pc, r1
   129f8:	bl	11468 <dcgettext@plt>
   129fc:	mov	r4, r0
   12a00:	b	12878 <__assert_fail@plt+0x114c>
   12a04:	ldr	ip, [sp, #40]	; 0x28
   12a08:	ldr	r3, [ip]
   12a0c:	cmp	r3, #95	; 0x5f
   12a10:	bne	12984 <__assert_fail@plt+0x1258>
   12a14:	ldr	r8, [sp, #24]
   12a18:	b	1269c <__assert_fail@plt+0xf70>
   12a1c:	mov	r8, #0
   12a20:	mov	r4, #1
   12a24:	mov	r2, r8
   12a28:	b	12458 <__assert_fail@plt+0xd2c>
   12a2c:	ldr	r3, [r7]
   12a30:	cmp	r3, #2
   12a34:	moveq	r3, #8
   12a38:	movne	r3, #0
   12a3c:	b	12350 <__assert_fail@plt+0xc24>
   12a40:	ldr	r1, [sp, #20]
   12a44:	cmp	r1, #0
   12a48:	bne	12c78 <__assert_fail@plt+0x154c>
   12a4c:	ldr	r3, [r6, #28]
   12a50:	ldr	r2, [sp, #332]	; 0x14c
   12a54:	subs	r2, r2, r3
   12a58:	rsbs	r3, r2, #0
   12a5c:	adcs	r3, r3, r2
   12a60:	str	r3, [sp, #16]
   12a64:	b	1263c <__assert_fail@plt+0xf10>
   12a68:	ldr	ip, [sp, #20]
   12a6c:	cmp	ip, #0
   12a70:	beq	12d24 <__assert_fail@plt+0x15f8>
   12a74:	cmp	r9, #0
   12a78:	beq	12ccc <__assert_fail@plt+0x15a0>
   12a7c:	ldr	r1, [pc, #1440]	; 13024 <__assert_fail@plt+0x18f8>
   12a80:	mov	r0, #0
   12a84:	mov	r2, #5
   12a88:	add	r1, pc, r1
   12a8c:	bl	11468 <dcgettext@plt>
   12a90:	mov	r4, r0
   12a94:	b	12878 <__assert_fail@plt+0x114c>
   12a98:	ldr	r1, [pc, #1416]	; 13028 <__assert_fail@plt+0x18fc>
   12a9c:	mov	r2, #5
   12aa0:	mov	r0, #0
   12aa4:	add	r1, pc, r1
   12aa8:	bl	11468 <dcgettext@plt>
   12aac:	mov	r4, r0
   12ab0:	ldr	r0, [sp, #28]
   12ab4:	bl	14afc <close_stdout@@Base+0x1a70>
   12ab8:	mov	r1, r4
   12abc:	mov	r2, r0
   12ac0:	mov	r0, r5
   12ac4:	bl	11600 <__printf_chk@plt>
   12ac8:	b	128ac <__assert_fail@plt+0x1180>
   12acc:	ldr	r3, [r6, #16]
   12ad0:	and	r3, r3, #61440	; 0xf000
   12ad4:	cmp	r3, #32768	; 0x8000
   12ad8:	beq	12cf0 <__assert_fail@plt+0x15c4>
   12adc:	cmp	r3, #16384	; 0x4000
   12ae0:	moveq	r5, #18688	; 0x4900
   12ae4:	bne	12960 <__assert_fail@plt+0x1234>
   12ae8:	mov	r0, r4
   12aec:	mov	r1, r9
   12af0:	mov	r2, r5
   12af4:	str	ip, [sp, #8]
   12af8:	bl	11420 <__openat64_2@plt>
   12afc:	ldr	ip, [sp, #8]
   12b00:	subs	r3, r0, #0
   12b04:	blt	12bd8 <__assert_fail@plt+0x14ac>
   12b08:	mov	r1, r3
   12b0c:	mov	r0, #3
   12b10:	add	r2, sp, #176	; 0xb0
   12b14:	str	r3, [sp, #12]
   12b18:	str	ip, [sp, #8]
   12b1c:	bl	114b0 <__fxstat64@plt>
   12b20:	ldr	r3, [sp, #12]
   12b24:	ldr	ip, [sp, #8]
   12b28:	cmp	r0, #0
   12b2c:	bne	12e18 <__assert_fail@plt+0x16ec>
   12b30:	add	r2, sp, #512	; 0x200
   12b34:	ldrd	r0, [r6, #96]	; 0x60
   12b38:	ldrd	r4, [r2, #-240]	; 0xffffff10
   12b3c:	cmp	r1, r5
   12b40:	cmpeq	r0, r4
   12b44:	beq	12d54 <__assert_fail@plt+0x1628>
   12b48:	ldr	r4, [sp, #40]	; 0x28
   12b4c:	mov	r0, r3
   12b50:	ldr	r5, [r4]
   12b54:	bl	116f0 <close@plt>
   12b58:	mov	ip, #0
   12b5c:	str	ip, [sp, #16]
   12b60:	ldr	ip, [sp, #40]	; 0x28
   12b64:	mov	r4, #1
   12b68:	str	r5, [ip]
   12b6c:	b	1269c <__assert_fail@plt+0xf70>
   12b70:	ldr	r3, [r7, #8]
   12b74:	cmp	r3, #0
   12b78:	bne	12600 <__assert_fail@plt+0xed4>
   12b7c:	ldrb	r3, [r7, #12]
   12b80:	add	r6, sl, #72	; 0x48
   12b84:	cmp	r3, #0
   12b88:	moveq	r0, #1
   12b8c:	streq	r0, [sp, #16]
   12b90:	beq	1263c <__assert_fail@plt+0xf10>
   12b94:	b	12610 <__assert_fail@plt+0xee4>
   12b98:	mov	r2, #1
   12b9c:	mov	r1, sl
   12ba0:	str	r2, [sl, #16]
   12ba4:	mov	r0, fp
   12ba8:	bl	17df0 <fts_set@@Base>
   12bac:	b	123bc <__assert_fail@plt+0xc90>
   12bb0:	ldr	r1, [pc, #1140]	; 1302c <__assert_fail@plt+0x1900>
   12bb4:	mov	r2, #5
   12bb8:	add	r1, pc, r1
   12bbc:	bl	11468 <dcgettext@plt>
   12bc0:	mov	r1, r4
   12bc4:	mov	r2, r0
   12bc8:	mov	r0, r5
   12bcc:	bl	11504 <error@plt>
   12bd0:	str	r5, [sp, #24]
   12bd4:	b	1250c <__assert_fail@plt+0xde0>
   12bd8:	ldr	r0, [sp, #40]	; 0x28
   12bdc:	ldr	r3, [r0]
   12be0:	cmp	r3, #13
   12be4:	bne	12984 <__assert_fail@plt+0x1258>
   12be8:	ldr	r3, [r6, #16]
   12bec:	and	r3, r3, #61440	; 0xf000
   12bf0:	cmp	r3, #32768	; 0x8000
   12bf4:	beq	12f3c <__assert_fail@plt+0x1810>
   12bf8:	ldr	r4, [fp, #32]
   12bfc:	b	12960 <__assert_fail@plt+0x1234>
   12c00:	ldr	r1, [pc, #1064]	; 13030 <__assert_fail@plt+0x1904>
   12c04:	mov	r2, #5
   12c08:	mov	r0, #0
   12c0c:	str	r0, [sp, #24]
   12c10:	add	r1, pc, r1
   12c14:	bl	11468 <dcgettext@plt>
   12c18:	mov	r4, r0
   12c1c:	ldr	r0, [sp, #28]
   12c20:	bl	14afc <close_stdout@@Base+0x1a70>
   12c24:	mov	r2, r4
   12c28:	mov	r3, r0
   12c2c:	mov	r0, #0
   12c30:	mov	r1, r0
   12c34:	bl	11504 <error@plt>
   12c38:	b	123bc <__assert_fail@plt+0xc90>
   12c3c:	add	r6, sp, #72	; 0x48
   12c40:	ldr	r1, [fp, #32]
   12c44:	mov	r2, #0
   12c48:	mov	r0, #3
   12c4c:	str	r2, [sp]
   12c50:	mov	r3, r6
   12c54:	mov	r2, r9
   12c58:	str	ip, [sp, #8]
   12c5c:	bl	11498 <__fxstatat64@plt>
   12c60:	ldr	ip, [sp, #8]
   12c64:	cmp	r0, #0
   12c68:	bne	12cf8 <__assert_fail@plt+0x15cc>
   12c6c:	ldrh	r5, [sl, #60]	; 0x3c
   12c70:	sub	r4, r5, #1
   12c74:	b	12620 <__assert_fail@plt+0xef4>
   12c78:	mov	r2, #1
   12c7c:	str	r2, [sp, #16]
   12c80:	b	1263c <__assert_fail@plt+0xf10>
   12c84:	cmp	r4, #0
   12c88:	beq	12f04 <__assert_fail@plt+0x17d8>
   12c8c:	ldr	r1, [pc, #928]	; 13034 <__assert_fail@plt+0x1908>
   12c90:	mov	r0, r9
   12c94:	mov	r2, #5
   12c98:	add	r1, pc, r1
   12c9c:	bl	11468 <dcgettext@plt>
   12ca0:	mov	r4, r0
   12ca4:	b	12878 <__assert_fail@plt+0x114c>
   12ca8:	cmp	r4, #0
   12cac:	beq	12ee8 <__assert_fail@plt+0x17bc>
   12cb0:	ldr	r1, [pc, #896]	; 13038 <__assert_fail@plt+0x190c>
   12cb4:	mov	r0, r9
   12cb8:	mov	r2, #5
   12cbc:	add	r1, pc, r1
   12cc0:	bl	11468 <dcgettext@plt>
   12cc4:	mov	r4, r0
   12cc8:	b	12878 <__assert_fail@plt+0x114c>
   12ccc:	cmp	r4, #0
   12cd0:	beq	12f20 <__assert_fail@plt+0x17f4>
   12cd4:	ldr	r1, [pc, #864]	; 1303c <__assert_fail@plt+0x1910>
   12cd8:	mov	r0, r9
   12cdc:	mov	r2, #5
   12ce0:	add	r1, pc, r1
   12ce4:	bl	11468 <dcgettext@plt>
   12ce8:	mov	r4, r0
   12cec:	b	12878 <__assert_fail@plt+0x114c>
   12cf0:	mov	r5, #2304	; 0x900
   12cf4:	b	12ae8 <__assert_fail@plt+0x13bc>
   12cf8:	ldrb	r4, [r7, #13]
   12cfc:	cmp	r4, #0
   12d00:	beq	12e34 <__assert_fail@plt+0x1708>
   12d04:	mov	r2, #0
   12d08:	ldr	ip, [sp, #24]
   12d0c:	mov	r4, #1
   12d10:	and	r8, r2, ip
   12d14:	mov	ip, #0
   12d18:	str	ip, [sp, #16]
   12d1c:	uxtb	r8, r8
   12d20:	b	12458 <__assert_fail@plt+0xd2c>
   12d24:	cmp	r9, #0
   12d28:	beq	12e74 <__assert_fail@plt+0x1748>
   12d2c:	ldr	r1, [pc, #780]	; 13040 <__assert_fail@plt+0x1914>
   12d30:	mov	r2, #5
   12d34:	add	r1, pc, r1
   12d38:	bl	11468 <dcgettext@plt>
   12d3c:	mov	r4, r0
   12d40:	ldr	ip, [sp, #24]
   12d44:	str	ip, [sp, #20]
   12d48:	mov	ip, #0
   12d4c:	str	ip, [sp, #24]
   12d50:	b	12878 <__assert_fail@plt+0x114c>
   12d54:	ldrd	r0, [r6]
   12d58:	ldrd	r4, [sp, #176]	; 0xb0
   12d5c:	cmp	r1, r5
   12d60:	cmpeq	r0, r4
   12d64:	bne	12b48 <__assert_fail@plt+0x141c>
   12d68:	cmp	ip, #0
   12d6c:	bne	12f88 <__assert_fail@plt+0x185c>
   12d70:	ldr	r2, [sp, #200]	; 0xc8
   12d74:	ldr	r4, [sp, #328]	; 0x148
   12d78:	cmp	r4, r2
   12d7c:	beq	12f88 <__assert_fail@plt+0x185c>
   12d80:	ldr	ip, [sp, #40]	; 0x28
   12d84:	mov	r0, r3
   12d88:	ldr	r4, [ip]
   12d8c:	bl	116f0 <close@plt>
   12d90:	ldr	ip, [sp, #40]	; 0x28
   12d94:	str	r4, [ip]
   12d98:	ldr	r8, [sp, #24]
   12d9c:	mov	r4, #1
   12da0:	ldr	r2, [sp, #16]
   12da4:	b	12458 <__assert_fail@plt+0xd2c>
   12da8:	mov	r2, #5
   12dac:	ldr	r1, [sp, #60]	; 0x3c
   12db0:	mov	r0, #0
   12db4:	bl	11468 <dcgettext@plt>
   12db8:	ldr	r1, [sp, #28]
   12dbc:	mov	r5, r0
   12dc0:	mov	r0, #0
   12dc4:	bl	14af4 <close_stdout@@Base+0x1a68>
   12dc8:	ldr	r1, [sp, #64]	; 0x40
   12dcc:	mov	r4, r0
   12dd0:	mov	r0, #1
   12dd4:	bl	14af4 <close_stdout@@Base+0x1a68>
   12dd8:	mov	r2, r5
   12ddc:	mov	r3, r4
   12de0:	str	r0, [sp]
   12de4:	mov	r0, #0
   12de8:	mov	r1, r0
   12dec:	bl	11504 <error@plt>
   12df0:	ldr	r1, [sp, #56]	; 0x38
   12df4:	mov	r0, #0
   12df8:	mov	r2, #5
   12dfc:	str	r0, [sp, #24]
   12e00:	bl	11468 <dcgettext@plt>
   12e04:	mov	r2, r0
   12e08:	mov	r0, #0
   12e0c:	mov	r1, r0
   12e10:	bl	11504 <error@plt>
   12e14:	b	123bc <__assert_fail@plt+0xc90>
   12e18:	ldr	ip, [sp, #40]	; 0x28
   12e1c:	mov	r0, r3
   12e20:	ldr	r4, [ip]
   12e24:	bl	116f0 <close@plt>
   12e28:	ldr	ip, [sp, #40]	; 0x28
   12e2c:	str	r4, [ip]
   12e30:	b	12984 <__assert_fail@plt+0x1258>
   12e34:	ldr	ip, [sp, #40]	; 0x28
   12e38:	mov	r2, #5
   12e3c:	ldr	r1, [pc, #512]	; 13044 <__assert_fail@plt+0x1918>
   12e40:	mov	r0, r4
   12e44:	add	r1, pc, r1
   12e48:	ldr	r5, [ip]
   12e4c:	bl	11468 <dcgettext@plt>
   12e50:	mov	r8, r0
   12e54:	ldr	r0, [sp, #28]
   12e58:	bl	14afc <close_stdout@@Base+0x1a70>
   12e5c:	mov	r1, r5
   12e60:	mov	r2, r8
   12e64:	mov	r3, r0
   12e68:	mov	r0, r4
   12e6c:	bl	11504 <error@plt>
   12e70:	b	12d04 <__assert_fail@plt+0x15d8>
   12e74:	cmp	r4, #0
   12e78:	beq	12f70 <__assert_fail@plt+0x1844>
   12e7c:	ldr	r1, [pc, #452]	; 13048 <__assert_fail@plt+0x191c>
   12e80:	mov	r2, #5
   12e84:	add	r1, pc, r1
   12e88:	bl	11468 <dcgettext@plt>
   12e8c:	mov	r4, r0
   12e90:	b	12d40 <__assert_fail@plt+0x1614>
   12e94:	ldr	r1, [pc, #432]	; 1304c <__assert_fail@plt+0x1920>
   12e98:	mov	r2, #5
   12e9c:	mov	r0, #0
   12ea0:	add	r1, pc, r1
   12ea4:	bl	11468 <dcgettext@plt>
   12ea8:	ldr	r1, [sp, #28]
   12eac:	mov	r5, r0
   12eb0:	mov	r0, #0
   12eb4:	bl	14af4 <close_stdout@@Base+0x1a68>
   12eb8:	ldr	r1, [pc, #400]	; 13050 <__assert_fail@plt+0x1924>
   12ebc:	add	r1, pc, r1
   12ec0:	mov	r4, r0
   12ec4:	mov	r0, #1
   12ec8:	bl	14af4 <close_stdout@@Base+0x1a68>
   12ecc:	mov	r2, r5
   12ed0:	mov	r3, r4
   12ed4:	str	r0, [sp]
   12ed8:	mov	r0, #0
   12edc:	mov	r1, r0
   12ee0:	bl	11504 <error@plt>
   12ee4:	b	12764 <__assert_fail@plt+0x1038>
   12ee8:	ldr	r1, [pc, #356]	; 13054 <__assert_fail@plt+0x1928>
   12eec:	mov	r0, r4
   12ef0:	mov	r2, #5
   12ef4:	add	r1, pc, r1
   12ef8:	bl	11468 <dcgettext@plt>
   12efc:	mov	r4, r0
   12f00:	b	12878 <__assert_fail@plt+0x114c>
   12f04:	ldr	r1, [pc, #332]	; 13058 <__assert_fail@plt+0x192c>
   12f08:	mov	r0, r4
   12f0c:	mov	r2, #5
   12f10:	add	r1, pc, r1
   12f14:	bl	11468 <dcgettext@plt>
   12f18:	mov	r4, r0
   12f1c:	b	12878 <__assert_fail@plt+0x114c>
   12f20:	ldr	r1, [pc, #308]	; 1305c <__assert_fail@plt+0x1930>
   12f24:	mov	r0, r4
   12f28:	mov	r2, #5
   12f2c:	add	r1, pc, r1
   12f30:	bl	11468 <dcgettext@plt>
   12f34:	mov	r4, r0
   12f38:	b	12878 <__assert_fail@plt+0x114c>
   12f3c:	mov	r0, r4
   12f40:	orr	r2, r5, #1
   12f44:	mov	r1, r9
   12f48:	str	ip, [sp, #8]
   12f4c:	bl	11420 <__openat64_2@plt>
   12f50:	ldr	ip, [sp, #8]
   12f54:	subs	r3, r0, #0
   12f58:	bge	12b08 <__assert_fail@plt+0x13dc>
   12f5c:	ldr	r4, [sp, #40]	; 0x28
   12f60:	ldr	r3, [r4]
   12f64:	cmp	r3, #13
   12f68:	bne	12984 <__assert_fail@plt+0x1258>
   12f6c:	b	12bf8 <__assert_fail@plt+0x14cc>
   12f70:	ldr	r1, [pc, #232]	; 13060 <__assert_fail@plt+0x1934>
   12f74:	mov	r2, #5
   12f78:	add	r1, pc, r1
   12f7c:	bl	11468 <dcgettext@plt>
   12f80:	mov	r4, r0
   12f84:	b	12d40 <__assert_fail@plt+0x1614>
   12f88:	ldr	ip, [sp, #20]
   12f8c:	cmp	ip, #0
   12f90:	bne	12fa4 <__assert_fail@plt+0x1878>
   12f94:	ldr	r2, [sp, #204]	; 0xcc
   12f98:	ldr	r4, [sp, #332]	; 0x14c
   12f9c:	cmp	r4, r2
   12fa0:	bne	12d80 <__assert_fail@plt+0x1654>
   12fa4:	mov	r0, r3
   12fa8:	ldr	r1, [sp, #32]
   12fac:	ldr	r2, [sp, #36]	; 0x24
   12fb0:	str	r3, [sp, #12]
   12fb4:	bl	115ac <fchown@plt>
   12fb8:	ldr	r3, [sp, #12]
   12fbc:	cmp	r0, #0
   12fc0:	bne	12e18 <__assert_fail@plt+0x16ec>
   12fc4:	mov	r0, r3
   12fc8:	bl	116f0 <close@plt>
   12fcc:	cmp	r0, #0
   12fd0:	bne	12984 <__assert_fail@plt+0x1258>
   12fd4:	b	12d98 <__assert_fail@plt+0x166c>
   12fd8:	bl	11474 <__stack_chk_fail@plt>
   12fdc:	mov	r2, #1
   12fe0:	b	12d08 <__assert_fail@plt+0x15dc>
   12fe4:	andeq	sl, r1, r4, lsl #26
   12fe8:	andeq	r0, r0, ip, asr #2
   12fec:	ldrdeq	r9, [r0], -r0
   12ff0:	andeq	r9, r0, ip, lsr #3
   12ff4:	andeq	r9, r0, r4, rrx
   12ff8:	andeq	r9, r0, r0, lsr #32
   12ffc:	andeq	r8, r0, ip, lsr pc
   13000:	andeq	r8, r0, r0, asr #31
   13004:	ldrdeq	r8, [r0], -r4
   13008:	andeq	r8, r0, r4, ror #26
   1300c:	andeq	r9, r0, r4, ror #3
   13010:	andeq	r8, r0, r4, lsr #29
   13014:	andeq	r8, r0, r4, lsr ip
   13018:	andeq	r8, r0, r8, ror #24
   1301c:	andeq	r8, r0, r4, lsl sp
   13020:	andeq	r8, r0, r4, asr #25
   13024:	andeq	r8, r0, r4, ror #22
   13028:	andeq	r8, r0, r4, lsr #21
   1302c:	andeq	r8, r0, r8, lsr #15
   13030:	andeq	r8, r0, r0, lsr r8
   13034:	andeq	r8, r0, r0, asr #20
   13038:	andeq	r8, r0, ip, ror #17
   1303c:	andeq	r8, r0, ip, lsr r9
   13040:	andeq	r8, r0, r8, lsr r9
   13044:			; <UNDEFINED> instruction: 0x000086b8
   13048:	andeq	r8, r0, r0, lsl r8
   1304c:	andeq	r8, r0, r0, lsl #10
   13050:	andeq	r8, r0, r0, lsl r4
   13054:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   13058:	andeq	r8, r0, r4, ror #15
   1305c:	andeq	r8, r0, ip, lsl r7
   13060:	ldrdeq	r8, [r0], -r0
   13064:	ldr	r3, [pc, #8]	; 13074 <__assert_fail@plt+0x1948>
   13068:	add	r3, pc, r3
   1306c:	str	r0, [r3]
   13070:	bx	lr
   13074:	andeq	sl, r1, r0, lsl #3
   13078:	ldr	r3, [pc, #8]	; 13088 <__assert_fail@plt+0x195c>
   1307c:	add	r3, pc, r3
   13080:	strb	r0, [r3, #4]
   13084:	bx	lr
   13088:	andeq	sl, r1, ip, ror #2

0001308c <close_stdout@@Base>:
   1308c:	push	{r4, r5, r6, r7, lr}
   13090:	sub	sp, sp, #12
   13094:	ldr	r4, [pc, #228]	; 13180 <close_stdout@@Base+0xf4>
   13098:	ldr	r3, [pc, #228]	; 13184 <close_stdout@@Base+0xf8>
   1309c:	add	r4, pc, r4
   130a0:	ldr	r3, [r4, r3]
   130a4:	ldr	r0, [r3]
   130a8:	bl	17ff0 <fts_children@@Base+0x1d4>
   130ac:	cmp	r0, #0
   130b0:	beq	130d8 <close_stdout@@Base+0x4c>
   130b4:	ldr	r3, [pc, #204]	; 13188 <close_stdout@@Base+0xfc>
   130b8:	add	r3, pc, r3
   130bc:	ldrb	r3, [r3, #4]
   130c0:	cmp	r3, #0
   130c4:	beq	130f8 <close_stdout@@Base+0x6c>
   130c8:	bl	115d0 <__errno_location@plt>
   130cc:	ldr	r3, [r0]
   130d0:	cmp	r3, #32
   130d4:	bne	130f8 <close_stdout@@Base+0x6c>
   130d8:	ldr	r3, [pc, #172]	; 1318c <close_stdout@@Base+0x100>
   130dc:	ldr	r3, [r4, r3]
   130e0:	ldr	r0, [r3]
   130e4:	bl	17ff0 <fts_children@@Base+0x1d4>
   130e8:	cmp	r0, #0
   130ec:	bne	1314c <close_stdout@@Base+0xc0>
   130f0:	add	sp, sp, #12
   130f4:	pop	{r4, r5, r6, r7, pc}
   130f8:	ldr	r1, [pc, #144]	; 13190 <close_stdout@@Base+0x104>
   130fc:	mov	r0, #0
   13100:	mov	r2, #5
   13104:	add	r1, pc, r1
   13108:	bl	11468 <dcgettext@plt>
   1310c:	ldr	r3, [pc, #128]	; 13194 <close_stdout@@Base+0x108>
   13110:	ldr	r5, [pc, r3]
   13114:	cmp	r5, #0
   13118:	mov	r6, r0
   1311c:	beq	1315c <close_stdout@@Base+0xd0>
   13120:	bl	115d0 <__errno_location@plt>
   13124:	ldr	r7, [r0]
   13128:	mov	r0, r5
   1312c:	bl	149a8 <close_stdout@@Base+0x191c>
   13130:	ldr	r2, [pc, #96]	; 13198 <close_stdout@@Base+0x10c>
   13134:	str	r6, [sp]
   13138:	mov	r1, r7
   1313c:	add	r2, pc, r2
   13140:	mov	r3, r0
   13144:	mov	r0, #0
   13148:	bl	11504 <error@plt>
   1314c:	ldr	r3, [pc, #72]	; 1319c <close_stdout@@Base+0x110>
   13150:	ldr	r3, [r4, r3]
   13154:	ldr	r0, [r3]
   13158:	bl	1142c <_exit@plt>
   1315c:	bl	115d0 <__errno_location@plt>
   13160:	ldr	r2, [pc, #56]	; 131a0 <close_stdout@@Base+0x114>
   13164:	add	r2, pc, r2
   13168:	mov	r3, r0
   1316c:	mov	r0, r5
   13170:	ldr	r1, [r3]
   13174:	mov	r3, r6
   13178:	bl	11504 <error@plt>
   1317c:	b	1314c <close_stdout@@Base+0xc0>
   13180:	andeq	r9, r1, ip, asr pc
   13184:	andeq	r0, r0, r8, ror #2
   13188:	andeq	sl, r1, r0, lsr r1
   1318c:	andeq	r0, r0, r8, asr r1
   13190:	andeq	r8, r0, r8, lsr #12
   13194:	ldrdeq	sl, [r1], -r8
   13198:	ldrdeq	r8, [r0], -ip
   1319c:	andeq	r0, r0, ip, ror #2
   131a0:	strheq	r8, [r0], -r8	; <UNPREDICTABLE>
   131a4:	ldrb	r3, [r0]
   131a8:	cmp	r3, #47	; 0x2f
   131ac:	bne	131c8 <close_stdout@@Base+0x13c>
   131b0:	add	r2, r0, #1
   131b4:	mov	r0, r2
   131b8:	add	r2, r2, #1
   131bc:	ldrb	r3, [r0]
   131c0:	cmp	r3, #47	; 0x2f
   131c4:	beq	131b4 <close_stdout@@Base+0x128>
   131c8:	cmp	r3, #0
   131cc:	bxeq	lr
   131d0:	mov	r2, r0
   131d4:	mov	r1, #0
   131d8:	cmp	r3, #47	; 0x2f
   131dc:	moveq	r1, #1
   131e0:	beq	131f0 <close_stdout@@Base+0x164>
   131e4:	cmp	r1, #0
   131e8:	movne	r0, r2
   131ec:	movne	r1, #0
   131f0:	ldrb	r3, [r2, #1]!
   131f4:	cmp	r3, #0
   131f8:	bne	131d8 <close_stdout@@Base+0x14c>
   131fc:	bx	lr
   13200:	push	{r4, lr}
   13204:	mov	r4, r0
   13208:	bl	11588 <strlen@plt>
   1320c:	cmp	r0, #1
   13210:	popls	{r4, pc}
   13214:	sub	r3, r0, #1
   13218:	ldrb	r2, [r4, r3]
   1321c:	cmp	r2, #47	; 0x2f
   13220:	popne	{r4, pc}
   13224:	mov	r0, r3
   13228:	cmp	r0, #1
   1322c:	sub	r3, r3, #1
   13230:	beq	13244 <close_stdout@@Base+0x1b8>
   13234:	ldrb	r2, [r4, r3]
   13238:	cmp	r2, #47	; 0x2f
   1323c:	popne	{r4, pc}
   13240:	b	13224 <close_stdout@@Base+0x198>
   13244:	pop	{r4, pc}
   13248:	push	{r3, r4, r5, r6, r7, lr}
   1324c:	add	r6, r2, #19
   13250:	mov	r4, r0
   13254:	mov	r5, r1
   13258:	mov	r3, #0
   1325c:	strb	r3, [r2, #20]
   13260:	mov	r0, r4
   13264:	mov	r1, r5
   13268:	mov	r2, #10
   1326c:	mov	r3, #0
   13270:	bl	19d5c <fts_children@@Base+0x1f40>
   13274:	mov	r7, r6
   13278:	mov	r0, r4
   1327c:	mov	r1, r5
   13280:	mov	r3, #0
   13284:	add	ip, r2, #48	; 0x30
   13288:	mov	r2, #10
   1328c:	strb	ip, [r6], #-1
   13290:	bl	19d5c <fts_children@@Base+0x1f40>
   13294:	mov	r4, r0
   13298:	mov	r5, r1
   1329c:	orrs	r3, r4, r5
   132a0:	bne	13260 <close_stdout@@Base+0x1d4>
   132a4:	mov	r0, r7
   132a8:	pop	{r3, r4, r5, r6, r7, pc}
   132ac:	push	{r3, r4, r5, r6, r7, lr}
   132b0:	subs	r4, r0, #0
   132b4:	ldr	r5, [pc, #172]	; 13368 <close_stdout@@Base+0x2dc>
   132b8:	add	r5, pc, r5
   132bc:	beq	13344 <close_stdout@@Base+0x2b8>
   132c0:	mov	r1, #47	; 0x2f
   132c4:	bl	11660 <strrchr@plt>
   132c8:	subs	r6, r0, #0
   132cc:	beq	13328 <close_stdout@@Base+0x29c>
   132d0:	add	r7, r6, #1
   132d4:	rsb	r3, r4, r7
   132d8:	cmp	r3, #6
   132dc:	ble	13328 <close_stdout@@Base+0x29c>
   132e0:	ldr	r1, [pc, #132]	; 1336c <close_stdout@@Base+0x2e0>
   132e4:	sub	r0, r6, #6
   132e8:	mov	r2, #7
   132ec:	add	r1, pc, r1
   132f0:	bl	116d8 <strncmp@plt>
   132f4:	cmp	r0, #0
   132f8:	bne	13328 <close_stdout@@Base+0x29c>
   132fc:	ldr	r1, [pc, #108]	; 13370 <close_stdout@@Base+0x2e4>
   13300:	mov	r0, r7
   13304:	mov	r2, #3
   13308:	add	r1, pc, r1
   1330c:	bl	116d8 <strncmp@plt>
   13310:	cmp	r0, #0
   13314:	movne	r4, r7
   13318:	ldreq	r3, [pc, #84]	; 13374 <close_stdout@@Base+0x2e8>
   1331c:	addeq	r4, r6, #4
   13320:	ldreq	r3, [r5, r3]
   13324:	streq	r4, [r3]
   13328:	ldr	r2, [pc, #72]	; 13378 <close_stdout@@Base+0x2ec>
   1332c:	ldr	r3, [pc, #72]	; 1337c <close_stdout@@Base+0x2f0>
   13330:	ldr	r2, [r5, r2]
   13334:	str	r4, [r2]
   13338:	ldr	r3, [r5, r3]
   1333c:	str	r4, [r3]
   13340:	pop	{r3, r4, r5, r6, r7, pc}
   13344:	ldr	r3, [pc, #52]	; 13380 <close_stdout@@Base+0x2f4>
   13348:	mov	r1, #1
   1334c:	ldr	r0, [pc, #48]	; 13384 <close_stdout@@Base+0x2f8>
   13350:	mov	r2, #55	; 0x37
   13354:	ldr	r3, [r5, r3]
   13358:	add	r0, pc, r0
   1335c:	ldr	r3, [r3]
   13360:	bl	114bc <fwrite@plt>
   13364:	bl	116e4 <abort@plt>
   13368:	andeq	r9, r1, r0, asr #26
   1336c:	andeq	r8, r0, r4, lsl #9
   13370:	andeq	r8, r0, r0, ror r4
   13374:	andeq	r0, r0, ip, ror r1
   13378:	andeq	r0, r0, r4, ror r1
   1337c:	andeq	r0, r0, r0, ror r1
   13380:	andeq	r0, r0, r8, asr r1
   13384:	andeq	r8, r0, r0, ror #7
   13388:	push	{r3, lr}
   1338c:	mov	r3, r0
   13390:	mov	r2, #0
   13394:	cmp	r1, #8
   13398:	str	r2, [r3], #4
   1339c:	add	r3, r3, #4
   133a0:	str	r2, [r0, #4]
   133a4:	str	r2, [r3], #4
   133a8:	str	r2, [r3], #4
   133ac:	str	r2, [r3], #4
   133b0:	str	r2, [r3], #4
   133b4:	str	r2, [r3], #4
   133b8:	str	r2, [r3], #4
   133bc:	str	r2, [r3], #4
   133c0:	str	r2, [r3], #4
   133c4:	str	r2, [r3], #4
   133c8:	str	r2, [r3]
   133cc:	beq	133d8 <close_stdout@@Base+0x34c>
   133d0:	str	r1, [r0]
   133d4:	pop	{r3, pc}
   133d8:	bl	116e4 <abort@plt>
   133dc:	push	{r4, r5, r6, lr}
   133e0:	mov	r4, r0
   133e4:	mov	r6, r1
   133e8:	mov	r0, #0
   133ec:	mov	r1, r4
   133f0:	mov	r2, #5
   133f4:	bl	11468 <dcgettext@plt>
   133f8:	cmp	r0, r4
   133fc:	mov	r5, r0
   13400:	beq	13408 <close_stdout@@Base+0x37c>
   13404:	pop	{r4, r5, r6, pc}
   13408:	bl	19360 <fts_children@@Base+0x1544>
   1340c:	ldrb	r3, [r0]
   13410:	bic	r3, r3, #32
   13414:	cmp	r3, #85	; 0x55
   13418:	bne	1348c <close_stdout@@Base+0x400>
   1341c:	ldrb	r3, [r0, #1]
   13420:	bic	r3, r3, #32
   13424:	cmp	r3, #84	; 0x54
   13428:	bne	13478 <close_stdout@@Base+0x3ec>
   1342c:	ldrb	r3, [r0, #2]
   13430:	bic	r3, r3, #32
   13434:	cmp	r3, #70	; 0x46
   13438:	bne	13478 <close_stdout@@Base+0x3ec>
   1343c:	ldrb	r3, [r0, #3]
   13440:	cmp	r3, #45	; 0x2d
   13444:	bne	13478 <close_stdout@@Base+0x3ec>
   13448:	ldrb	r3, [r0, #4]
   1344c:	cmp	r3, #56	; 0x38
   13450:	bne	13478 <close_stdout@@Base+0x3ec>
   13454:	ldrb	r3, [r0, #5]
   13458:	cmp	r3, #0
   1345c:	bne	13478 <close_stdout@@Base+0x3ec>
   13460:	ldrb	r3, [r5]
   13464:	cmp	r3, #96	; 0x60
   13468:	beq	13504 <close_stdout@@Base+0x478>
   1346c:	ldr	r0, [pc, #180]	; 13528 <close_stdout@@Base+0x49c>
   13470:	add	r0, pc, r0
   13474:	pop	{r4, r5, r6, pc}
   13478:	cmp	r6, #7
   1347c:	beq	13510 <close_stdout@@Base+0x484>
   13480:	ldr	r0, [pc, #164]	; 1352c <close_stdout@@Base+0x4a0>
   13484:	add	r0, pc, r0
   13488:	pop	{r4, r5, r6, pc}
   1348c:	cmp	r3, #71	; 0x47
   13490:	bne	13478 <close_stdout@@Base+0x3ec>
   13494:	ldrb	r3, [r0, #1]
   13498:	bic	r3, r3, #32
   1349c:	cmp	r3, #66	; 0x42
   134a0:	bne	13478 <close_stdout@@Base+0x3ec>
   134a4:	ldrb	r3, [r0, #2]
   134a8:	cmp	r3, #49	; 0x31
   134ac:	bne	13478 <close_stdout@@Base+0x3ec>
   134b0:	ldrb	r3, [r0, #3]
   134b4:	cmp	r3, #56	; 0x38
   134b8:	bne	13478 <close_stdout@@Base+0x3ec>
   134bc:	ldrb	r3, [r0, #4]
   134c0:	cmp	r3, #48	; 0x30
   134c4:	bne	13478 <close_stdout@@Base+0x3ec>
   134c8:	ldrb	r3, [r0, #5]
   134cc:	cmp	r3, #51	; 0x33
   134d0:	bne	13478 <close_stdout@@Base+0x3ec>
   134d4:	ldrb	r3, [r0, #6]
   134d8:	cmp	r3, #48	; 0x30
   134dc:	bne	13478 <close_stdout@@Base+0x3ec>
   134e0:	ldrb	r3, [r0, #7]
   134e4:	cmp	r3, #0
   134e8:	bne	13478 <close_stdout@@Base+0x3ec>
   134ec:	ldrb	r3, [r5]
   134f0:	cmp	r3, #96	; 0x60
   134f4:	beq	1351c <close_stdout@@Base+0x490>
   134f8:	ldr	r0, [pc, #48]	; 13530 <close_stdout@@Base+0x4a4>
   134fc:	add	r0, pc, r0
   13500:	pop	{r4, r5, r6, pc}
   13504:	ldr	r0, [pc, #40]	; 13534 <close_stdout@@Base+0x4a8>
   13508:	add	r0, pc, r0
   1350c:	pop	{r4, r5, r6, pc}
   13510:	ldr	r0, [pc, #32]	; 13538 <close_stdout@@Base+0x4ac>
   13514:	add	r0, pc, r0
   13518:	pop	{r4, r5, r6, pc}
   1351c:	ldr	r0, [pc, #24]	; 1353c <close_stdout@@Base+0x4b0>
   13520:	add	r0, pc, r0
   13524:	pop	{r4, r5, r6, pc}
   13528:	andeq	r8, r0, ip, lsr #6
   1352c:	andeq	r8, r0, r0, lsr #6
   13530:	andeq	r8, r0, r4, lsr #5
   13534:	andeq	r8, r0, r8, lsr #5
   13538:	muleq	r0, r4, r2
   1353c:	andeq	r8, r0, ip, lsl #5
   13540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13544:	sub	sp, sp, #124	; 0x7c
   13548:	ldr	ip, [pc, #3304]	; 14238 <close_stdout@@Base+0x11ac>
   1354c:	mov	sl, r1
   13550:	str	r0, [sp, #40]	; 0x28
   13554:	mov	r8, r3
   13558:	ldr	r0, [pc, #3292]	; 1423c <close_stdout@@Base+0x11b0>
   1355c:	add	ip, pc, ip
   13560:	str	r2, [sp, #32]
   13564:	ldr	r1, [sp, #164]	; 0xa4
   13568:	mov	r3, ip
   1356c:	ldr	r0, [ip, r0]
   13570:	ldr	r2, [sp, #172]	; 0xac
   13574:	ubfx	r1, r1, #1, #1
   13578:	str	r1, [sp, #36]	; 0x24
   1357c:	str	r0, [sp, #56]	; 0x38
   13580:	ldr	r0, [sp, #168]	; 0xa8
   13584:	ldr	r1, [sp, #176]	; 0xb0
   13588:	str	r2, [sp, #72]	; 0x48
   1358c:	str	r0, [sp, #48]	; 0x30
   13590:	ldr	r0, [sp, #56]	; 0x38
   13594:	str	r1, [sp, #68]	; 0x44
   13598:	ldr	r3, [r0]
   1359c:	str	r3, [sp, #116]	; 0x74
   135a0:	bl	114d4 <__ctype_get_mb_cur_max@plt>
   135a4:	ldr	r2, [sp, #160]	; 0xa0
   135a8:	str	r0, [sp, #64]	; 0x40
   135ac:	cmp	r2, #8
   135b0:	addls	pc, pc, r2, lsl #2
   135b4:	b	14114 <close_stdout@@Base+0x1088>
   135b8:	b	135dc <close_stdout@@Base+0x550>
   135bc:	b	13e2c <close_stdout@@Base+0xda0>
   135c0:	b	13e5c <close_stdout@@Base+0xdd0>
   135c4:	b	13d0c <close_stdout@@Base+0xc80>
   135c8:	b	13d4c <close_stdout@@Base+0xcc0>
   135cc:	b	13d78 <close_stdout@@Base+0xcec>
   135d0:	b	13d98 <close_stdout@@Base+0xd0c>
   135d4:	b	13d98 <close_stdout@@Base+0xd0c>
   135d8:	b	13d98 <close_stdout@@Base+0xd0c>
   135dc:	mov	r2, #0
   135e0:	str	r2, [sp, #36]	; 0x24
   135e4:	mov	r9, r2
   135e8:	str	r2, [sp, #24]
   135ec:	str	r2, [sp, #28]
   135f0:	str	r2, [sp, #52]	; 0x34
   135f4:	ldr	r0, [sp, #36]	; 0x24
   135f8:	mov	fp, #0
   135fc:	ldr	r1, [sp, #24]
   13600:	eor	r2, r0, #1
   13604:	eor	r3, r1, #1
   13608:	and	r3, r2, r3
   1360c:	and	r2, r1, r0
   13610:	str	r3, [sp, #44]	; 0x2c
   13614:	str	r2, [sp, #76]	; 0x4c
   13618:	cmn	r8, #1
   1361c:	beq	1399c <close_stdout@@Base+0x910>
   13620:	subs	r3, fp, r8
   13624:	movne	r3, #1
   13628:	cmp	r3, #0
   1362c:	beq	139b4 <close_stdout@@Base+0x928>
   13630:	ldr	r3, [sp, #28]
   13634:	ldr	r0, [sp, #24]
   13638:	adds	r7, r3, #0
   1363c:	movne	r7, #1
   13640:	ands	r6, r7, r0
   13644:	bne	13ea0 <close_stdout@@Base+0xe14>
   13648:	ldr	r1, [sp, #32]
   1364c:	add	r5, r1, fp
   13650:	ldrb	r4, [r5]
   13654:	cmp	r4, #126	; 0x7e
   13658:	addls	pc, pc, r4, lsl #2
   1365c:	b	13c20 <close_stdout@@Base+0xb94>
   13660:	b	13b2c <close_stdout@@Base+0xaa0>
   13664:	b	13c20 <close_stdout@@Base+0xb94>
   13668:	b	13c20 <close_stdout@@Base+0xb94>
   1366c:	b	13c20 <close_stdout@@Base+0xb94>
   13670:	b	13c20 <close_stdout@@Base+0xb94>
   13674:	b	13c20 <close_stdout@@Base+0xb94>
   13678:	b	13c20 <close_stdout@@Base+0xb94>
   1367c:	b	13b14 <close_stdout@@Base+0xa88>
   13680:	b	13afc <close_stdout@@Base+0xa70>
   13684:	b	13b24 <close_stdout@@Base+0xa98>
   13688:	b	13b1c <close_stdout@@Base+0xa90>
   1368c:	b	13b0c <close_stdout@@Base+0xa80>
   13690:	b	13b04 <close_stdout@@Base+0xa78>
   13694:	b	13ac8 <close_stdout@@Base+0xa3c>
   13698:	b	13c20 <close_stdout@@Base+0xb94>
   1369c:	b	13c20 <close_stdout@@Base+0xb94>
   136a0:	b	13c20 <close_stdout@@Base+0xb94>
   136a4:	b	13c20 <close_stdout@@Base+0xb94>
   136a8:	b	13c20 <close_stdout@@Base+0xb94>
   136ac:	b	13c20 <close_stdout@@Base+0xb94>
   136b0:	b	13c20 <close_stdout@@Base+0xb94>
   136b4:	b	13c20 <close_stdout@@Base+0xb94>
   136b8:	b	13c20 <close_stdout@@Base+0xb94>
   136bc:	b	13c20 <close_stdout@@Base+0xb94>
   136c0:	b	13c20 <close_stdout@@Base+0xb94>
   136c4:	b	13c20 <close_stdout@@Base+0xb94>
   136c8:	b	13c20 <close_stdout@@Base+0xb94>
   136cc:	b	13c20 <close_stdout@@Base+0xb94>
   136d0:	b	13c20 <close_stdout@@Base+0xb94>
   136d4:	b	13c20 <close_stdout@@Base+0xb94>
   136d8:	b	13c20 <close_stdout@@Base+0xb94>
   136dc:	b	13c20 <close_stdout@@Base+0xb94>
   136e0:	b	13a54 <close_stdout@@Base+0x9c8>
   136e4:	b	13a54 <close_stdout@@Base+0x9c8>
   136e8:	b	13a54 <close_stdout@@Base+0x9c8>
   136ec:	b	13a4c <close_stdout@@Base+0x9c0>
   136f0:	b	13a54 <close_stdout@@Base+0x9c8>
   136f4:	b	13928 <close_stdout@@Base+0x89c>
   136f8:	b	13a54 <close_stdout@@Base+0x9c8>
   136fc:	b	13bc8 <close_stdout@@Base+0xb3c>
   13700:	b	13a54 <close_stdout@@Base+0x9c8>
   13704:	b	13a54 <close_stdout@@Base+0x9c8>
   13708:	b	13a54 <close_stdout@@Base+0x9c8>
   1370c:	b	13928 <close_stdout@@Base+0x89c>
   13710:	b	13928 <close_stdout@@Base+0x89c>
   13714:	b	13928 <close_stdout@@Base+0x89c>
   13718:	b	13928 <close_stdout@@Base+0x89c>
   1371c:	b	13928 <close_stdout@@Base+0x89c>
   13720:	b	13928 <close_stdout@@Base+0x89c>
   13724:	b	13928 <close_stdout@@Base+0x89c>
   13728:	b	13928 <close_stdout@@Base+0x89c>
   1372c:	b	13928 <close_stdout@@Base+0x89c>
   13730:	b	13928 <close_stdout@@Base+0x89c>
   13734:	b	13928 <close_stdout@@Base+0x89c>
   13738:	b	13928 <close_stdout@@Base+0x89c>
   1373c:	b	13928 <close_stdout@@Base+0x89c>
   13740:	b	13928 <close_stdout@@Base+0x89c>
   13744:	b	13928 <close_stdout@@Base+0x89c>
   13748:	b	13928 <close_stdout@@Base+0x89c>
   1374c:	b	13a54 <close_stdout@@Base+0x9c8>
   13750:	b	13a54 <close_stdout@@Base+0x9c8>
   13754:	b	13a54 <close_stdout@@Base+0x9c8>
   13758:	b	13a54 <close_stdout@@Base+0x9c8>
   1375c:	b	1385c <close_stdout@@Base+0x7d0>
   13760:	b	13c20 <close_stdout@@Base+0xb94>
   13764:	b	13928 <close_stdout@@Base+0x89c>
   13768:	b	13928 <close_stdout@@Base+0x89c>
   1376c:	b	13928 <close_stdout@@Base+0x89c>
   13770:	b	13928 <close_stdout@@Base+0x89c>
   13774:	b	13928 <close_stdout@@Base+0x89c>
   13778:	b	13928 <close_stdout@@Base+0x89c>
   1377c:	b	13928 <close_stdout@@Base+0x89c>
   13780:	b	13928 <close_stdout@@Base+0x89c>
   13784:	b	13928 <close_stdout@@Base+0x89c>
   13788:	b	13928 <close_stdout@@Base+0x89c>
   1378c:	b	13928 <close_stdout@@Base+0x89c>
   13790:	b	13928 <close_stdout@@Base+0x89c>
   13794:	b	13928 <close_stdout@@Base+0x89c>
   13798:	b	13928 <close_stdout@@Base+0x89c>
   1379c:	b	13928 <close_stdout@@Base+0x89c>
   137a0:	b	13928 <close_stdout@@Base+0x89c>
   137a4:	b	13928 <close_stdout@@Base+0x89c>
   137a8:	b	13928 <close_stdout@@Base+0x89c>
   137ac:	b	13928 <close_stdout@@Base+0x89c>
   137b0:	b	13928 <close_stdout@@Base+0x89c>
   137b4:	b	13928 <close_stdout@@Base+0x89c>
   137b8:	b	13928 <close_stdout@@Base+0x89c>
   137bc:	b	13928 <close_stdout@@Base+0x89c>
   137c0:	b	13928 <close_stdout@@Base+0x89c>
   137c4:	b	13928 <close_stdout@@Base+0x89c>
   137c8:	b	13928 <close_stdout@@Base+0x89c>
   137cc:	b	13a54 <close_stdout@@Base+0x9c8>
   137d0:	b	13bac <close_stdout@@Base+0xb20>
   137d4:	b	13928 <close_stdout@@Base+0x89c>
   137d8:	b	13a54 <close_stdout@@Base+0x9c8>
   137dc:	b	13928 <close_stdout@@Base+0x89c>
   137e0:	b	13a54 <close_stdout@@Base+0x9c8>
   137e4:	b	13928 <close_stdout@@Base+0x89c>
   137e8:	b	13928 <close_stdout@@Base+0x89c>
   137ec:	b	13928 <close_stdout@@Base+0x89c>
   137f0:	b	13928 <close_stdout@@Base+0x89c>
   137f4:	b	13928 <close_stdout@@Base+0x89c>
   137f8:	b	13928 <close_stdout@@Base+0x89c>
   137fc:	b	13928 <close_stdout@@Base+0x89c>
   13800:	b	13928 <close_stdout@@Base+0x89c>
   13804:	b	13928 <close_stdout@@Base+0x89c>
   13808:	b	13928 <close_stdout@@Base+0x89c>
   1380c:	b	13928 <close_stdout@@Base+0x89c>
   13810:	b	13928 <close_stdout@@Base+0x89c>
   13814:	b	13928 <close_stdout@@Base+0x89c>
   13818:	b	13928 <close_stdout@@Base+0x89c>
   1381c:	b	13928 <close_stdout@@Base+0x89c>
   13820:	b	13928 <close_stdout@@Base+0x89c>
   13824:	b	13928 <close_stdout@@Base+0x89c>
   13828:	b	13928 <close_stdout@@Base+0x89c>
   1382c:	b	13928 <close_stdout@@Base+0x89c>
   13830:	b	13928 <close_stdout@@Base+0x89c>
   13834:	b	13928 <close_stdout@@Base+0x89c>
   13838:	b	13928 <close_stdout@@Base+0x89c>
   1383c:	b	13928 <close_stdout@@Base+0x89c>
   13840:	b	13928 <close_stdout@@Base+0x89c>
   13844:	b	13928 <close_stdout@@Base+0x89c>
   13848:	b	13928 <close_stdout@@Base+0x89c>
   1384c:	b	13a34 <close_stdout@@Base+0x9a8>
   13850:	b	13a54 <close_stdout@@Base+0x9c8>
   13854:	b	13a34 <close_stdout@@Base+0x9a8>
   13858:	b	13a4c <close_stdout@@Base+0x9c0>
   1385c:	ldr	r3, [sp, #160]	; 0xa0
   13860:	cmp	r3, #2
   13864:	beq	140f0 <close_stdout@@Base+0x1064>
   13868:	cmp	r3, #3
   1386c:	bne	13928 <close_stdout@@Base+0x89c>
   13870:	ldr	r1, [sp, #164]	; 0xa4
   13874:	tst	r1, #4
   13878:	beq	13928 <close_stdout@@Base+0x89c>
   1387c:	add	r3, fp, #2
   13880:	cmp	r8, r3
   13884:	bls	13928 <close_stdout@@Base+0x89c>
   13888:	ldrb	r2, [r5, #1]
   1388c:	mov	r1, #1
   13890:	cmp	r2, #63	; 0x3f
   13894:	bne	13928 <close_stdout@@Base+0x89c>
   13898:	ldr	r0, [sp, #32]
   1389c:	ldrb	ip, [r0, r3]
   138a0:	sub	r0, ip, #33	; 0x21
   138a4:	uxtb	r0, r0
   138a8:	cmp	r0, #29
   138ac:	bhi	13928 <close_stdout@@Base+0x89c>
   138b0:	lsl	r1, r1, r0
   138b4:	movw	r0, #20929	; 0x51c1
   138b8:	movt	r0, #14336	; 0x3800
   138bc:	and	r0, r1, r0
   138c0:	cmp	r0, #0
   138c4:	beq	13928 <close_stdout@@Base+0x89c>
   138c8:	ldr	r1, [sp, #36]	; 0x24
   138cc:	cmp	r1, #0
   138d0:	bne	13a70 <close_stdout@@Base+0x9e4>
   138d4:	cmp	r9, sl
   138d8:	mov	r4, ip
   138dc:	mov	fp, r3
   138e0:	ldrcc	r0, [sp, #40]	; 0x28
   138e4:	strbcc	r2, [r0, r9]
   138e8:	add	r2, r9, #1
   138ec:	cmp	sl, r2
   138f0:	ldrhi	r0, [sp, #40]	; 0x28
   138f4:	movhi	r1, #34	; 0x22
   138f8:	strbhi	r1, [r0, r2]
   138fc:	add	r2, r9, #2
   13900:	cmp	sl, r2
   13904:	ldrhi	r0, [sp, #40]	; 0x28
   13908:	movhi	r1, #34	; 0x22
   1390c:	strbhi	r1, [r0, r2]
   13910:	add	r2, r9, #3
   13914:	cmp	sl, r2
   13918:	add	r9, r9, #4
   1391c:	ldrhi	r0, [sp, #40]	; 0x28
   13920:	movhi	r1, #63	; 0x3f
   13924:	strbhi	r1, [r0, r2]
   13928:	ldr	r0, [sp, #44]	; 0x2c
   1392c:	cmp	r0, #0
   13930:	bne	13958 <close_stdout@@Base+0x8cc>
   13934:	ldr	r1, [sp, #48]	; 0x30
   13938:	cmp	r1, #0
   1393c:	beq	13958 <close_stdout@@Base+0x8cc>
   13940:	ubfx	r2, r4, #5, #8
   13944:	and	r3, r4, #31
   13948:	ldr	r2, [r1, r2, lsl #2]
   1394c:	lsr	r3, r2, r3
   13950:	tst	r3, #1
   13954:	bne	13960 <close_stdout@@Base+0x8d4>
   13958:	cmp	r6, #0
   1395c:	beq	13980 <close_stdout@@Base+0x8f4>
   13960:	ldr	r2, [sp, #36]	; 0x24
   13964:	cmp	r2, #0
   13968:	bne	13a70 <close_stdout@@Base+0x9e4>
   1396c:	cmp	r9, sl
   13970:	ldrcc	r0, [sp, #40]	; 0x28
   13974:	movcc	r3, #92	; 0x5c
   13978:	strbcc	r3, [r0, r9]
   1397c:	add	r9, r9, #1
   13980:	add	fp, fp, #1
   13984:	cmp	r9, sl
   13988:	ldrcc	r1, [sp, #40]	; 0x28
   1398c:	strbcc	r4, [r1, r9]
   13990:	cmn	r8, #1
   13994:	add	r9, r9, #1
   13998:	bne	13620 <close_stdout@@Base+0x594>
   1399c:	ldr	r2, [sp, #32]
   139a0:	ldrb	r3, [r2, fp]
   139a4:	adds	r3, r3, #0
   139a8:	movne	r3, #1
   139ac:	cmp	r3, #0
   139b0:	bne	13630 <close_stdout@@Base+0x5a4>
   139b4:	ldr	r3, [sp, #160]	; 0xa0
   139b8:	cmp	r9, #0
   139bc:	cmpeq	r3, #2
   139c0:	bne	139d0 <close_stdout@@Base+0x944>
   139c4:	ldr	r0, [sp, #36]	; 0x24
   139c8:	cmp	r0, #0
   139cc:	bne	13a70 <close_stdout@@Base+0x9e4>
   139d0:	ldr	r1, [sp, #36]	; 0x24
   139d4:	ldr	r2, [sp, #52]	; 0x34
   139d8:	eor	r3, r1, #1
   139dc:	cmp	r2, #0
   139e0:	moveq	r3, #0
   139e4:	andne	r3, r3, #1
   139e8:	cmp	r3, #0
   139ec:	beq	13a18 <close_stdout@@Base+0x98c>
   139f0:	ldrb	r3, [r2]
   139f4:	cmp	r3, #0
   139f8:	beq	13a18 <close_stdout@@Base+0x98c>
   139fc:	ldr	r1, [sp, #40]	; 0x28
   13a00:	cmp	sl, r9
   13a04:	strbhi	r3, [r1, r9]
   13a08:	ldrb	r3, [r2, #1]!
   13a0c:	add	r9, r9, #1
   13a10:	cmp	r3, #0
   13a14:	bne	13a00 <close_stdout@@Base+0x974>
   13a18:	cmp	r9, sl
   13a1c:	movcs	r0, r9
   13a20:	ldrcc	r1, [sp, #40]	; 0x28
   13a24:	movcc	r3, #0
   13a28:	movcc	r0, r9
   13a2c:	strbcc	r3, [r1, r9]
   13a30:	b	13aac <close_stdout@@Base+0xa20>
   13a34:	cmn	r8, #1
   13a38:	beq	14100 <close_stdout@@Base+0x1074>
   13a3c:	subs	r3, r8, #1
   13a40:	movne	r3, #1
   13a44:	cmp	r3, #0
   13a48:	bne	13928 <close_stdout@@Base+0x89c>
   13a4c:	cmp	fp, #0
   13a50:	bne	13928 <close_stdout@@Base+0x89c>
   13a54:	ldr	r3, [sp, #36]	; 0x24
   13a58:	ldr	r0, [sp, #160]	; 0xa0
   13a5c:	cmp	r0, #2
   13a60:	movne	r3, #0
   13a64:	andeq	r3, r3, #1
   13a68:	cmp	r3, #0
   13a6c:	beq	13928 <close_stdout@@Base+0x89c>
   13a70:	ldr	r2, [sp, #164]	; 0xa4
   13a74:	mov	ip, #0
   13a78:	ldr	r0, [sp, #160]	; 0xa0
   13a7c:	bic	r3, r2, #2
   13a80:	ldr	r1, [sp, #72]	; 0x48
   13a84:	ldr	r2, [sp, #68]	; 0x44
   13a88:	stm	sp, {r0, r3}
   13a8c:	mov	r3, r8
   13a90:	str	r1, [sp, #12]
   13a94:	mov	r1, sl
   13a98:	str	r2, [sp, #16]
   13a9c:	ldr	r0, [sp, #40]	; 0x28
   13aa0:	ldr	r2, [sp, #32]
   13aa4:	str	ip, [sp, #8]
   13aa8:	bl	13540 <close_stdout@@Base+0x4b4>
   13aac:	ldr	r1, [sp, #56]	; 0x38
   13ab0:	ldr	r2, [sp, #116]	; 0x74
   13ab4:	ldr	r3, [r1]
   13ab8:	cmp	r2, r3
   13abc:	bne	141f0 <close_stdout@@Base+0x1164>
   13ac0:	add	sp, sp, #124	; 0x7c
   13ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ac8:	mov	r3, #114	; 0x72
   13acc:	ldr	r2, [sp, #36]	; 0x24
   13ad0:	ldr	r0, [sp, #160]	; 0xa0
   13ad4:	cmp	r0, #2
   13ad8:	movne	r2, #0
   13adc:	andeq	r2, r2, #1
   13ae0:	cmp	r2, #0
   13ae4:	bne	13a70 <close_stdout@@Base+0x9e4>
   13ae8:	ldr	r1, [sp, #24]
   13aec:	cmp	r1, #0
   13af0:	beq	13928 <close_stdout@@Base+0x89c>
   13af4:	mov	r4, r3
   13af8:	b	13960 <close_stdout@@Base+0x8d4>
   13afc:	mov	r3, #98	; 0x62
   13b00:	b	13ae8 <close_stdout@@Base+0xa5c>
   13b04:	mov	r3, #102	; 0x66
   13b08:	b	13ae8 <close_stdout@@Base+0xa5c>
   13b0c:	mov	r3, #118	; 0x76
   13b10:	b	13ae8 <close_stdout@@Base+0xa5c>
   13b14:	mov	r3, #97	; 0x61
   13b18:	b	13ae8 <close_stdout@@Base+0xa5c>
   13b1c:	mov	r3, #110	; 0x6e
   13b20:	b	13acc <close_stdout@@Base+0xa40>
   13b24:	mov	r3, #116	; 0x74
   13b28:	b	13acc <close_stdout@@Base+0xa40>
   13b2c:	ldr	r2, [sp, #24]
   13b30:	cmp	r2, #0
   13b34:	beq	140dc <close_stdout@@Base+0x1050>
   13b38:	ldr	r3, [sp, #36]	; 0x24
   13b3c:	cmp	r3, #0
   13b40:	bne	13a70 <close_stdout@@Base+0x9e4>
   13b44:	cmp	r9, sl
   13b48:	add	r2, r9, #1
   13b4c:	ldrcc	r0, [sp, #40]	; 0x28
   13b50:	movcc	r3, #92	; 0x5c
   13b54:	strbcc	r3, [r0, r9]
   13b58:	add	r3, fp, #1
   13b5c:	cmp	r8, r3
   13b60:	bls	13ba0 <close_stdout@@Base+0xb14>
   13b64:	ldr	r1, [sp, #32]
   13b68:	ldrb	r3, [r1, r3]
   13b6c:	sub	r3, r3, #48	; 0x30
   13b70:	cmp	r3, #9
   13b74:	bhi	13ba0 <close_stdout@@Base+0xb14>
   13b78:	cmp	sl, r2
   13b7c:	ldrhi	r0, [sp, #40]	; 0x28
   13b80:	movhi	r3, #48	; 0x30
   13b84:	strbhi	r3, [r0, r2]
   13b88:	add	r3, r9, #2
   13b8c:	cmp	sl, r3
   13b90:	ldrhi	r1, [sp, #40]	; 0x28
   13b94:	movhi	r2, #48	; 0x30
   13b98:	strbhi	r2, [r1, r3]
   13b9c:	add	r2, r9, #3
   13ba0:	mov	r9, r2
   13ba4:	mov	r4, #48	; 0x30
   13ba8:	b	13934 <close_stdout@@Base+0x8a8>
   13bac:	ldr	r1, [sp, #76]	; 0x4c
   13bb0:	cmp	r1, #0
   13bb4:	beq	13bc0 <close_stdout@@Base+0xb34>
   13bb8:	cmp	r7, #0
   13bbc:	bne	13980 <close_stdout@@Base+0x8f4>
   13bc0:	mov	r3, r4
   13bc4:	b	13acc <close_stdout@@Base+0xa40>
   13bc8:	ldr	r1, [sp, #160]	; 0xa0
   13bcc:	cmp	r1, #2
   13bd0:	bne	13928 <close_stdout@@Base+0x89c>
   13bd4:	ldr	r2, [sp, #36]	; 0x24
   13bd8:	cmp	r2, #0
   13bdc:	bne	13a70 <close_stdout@@Base+0x9e4>
   13be0:	cmp	r9, sl
   13be4:	ldrcc	r0, [sp, #40]	; 0x28
   13be8:	movcc	r3, #39	; 0x27
   13bec:	strbcc	r3, [r0, r9]
   13bf0:	add	r3, r9, #1
   13bf4:	cmp	sl, r3
   13bf8:	ldrhi	r1, [sp, #40]	; 0x28
   13bfc:	movhi	r2, #92	; 0x5c
   13c00:	strbhi	r2, [r1, r3]
   13c04:	add	r3, r9, #2
   13c08:	cmp	sl, r3
   13c0c:	add	r9, r9, #3
   13c10:	ldrhi	r0, [sp, #40]	; 0x28
   13c14:	movhi	r2, #39	; 0x27
   13c18:	strbhi	r2, [r0, r3]
   13c1c:	b	13928 <close_stdout@@Base+0x89c>
   13c20:	ldr	r1, [sp, #64]	; 0x40
   13c24:	cmp	r1, #1
   13c28:	bne	13f20 <close_stdout@@Base+0xe94>
   13c2c:	bl	11564 <__ctype_b_loc@plt>
   13c30:	ldr	r2, [sp, #64]	; 0x40
   13c34:	sxth	r3, r4
   13c38:	str	r2, [sp, #60]	; 0x3c
   13c3c:	lsl	r3, r3, #1
   13c40:	ldr	r2, [r0]
   13c44:	ldrh	r2, [r2, r3]
   13c48:	eor	r2, r2, #16384	; 0x4000
   13c4c:	ubfx	r2, r2, #14, #1
   13c50:	ldr	r1, [sp, #24]
   13c54:	ands	r2, r2, r1
   13c58:	beq	13928 <close_stdout@@Base+0x89c>
   13c5c:	ldr	r3, [sp, #60]	; 0x3c
   13c60:	mov	r0, #92	; 0x5c
   13c64:	ldr	r7, [sp, #36]	; 0x24
   13c68:	add	r1, r3, fp
   13c6c:	str	r8, [sp, #60]	; 0x3c
   13c70:	ldr	r3, [sp, #40]	; 0x28
   13c74:	b	13cd8 <close_stdout@@Base+0xc4c>
   13c78:	cmp	r7, #0
   13c7c:	bne	14118 <close_stdout@@Base+0x108c>
   13c80:	add	ip, r9, #1
   13c84:	cmp	r9, sl
   13c88:	strbcc	r0, [r3, r9]
   13c8c:	cmp	sl, ip
   13c90:	lsrhi	r8, r4, #6
   13c94:	addhi	r8, r8, #48	; 0x30
   13c98:	strbhi	r8, [r3, ip]
   13c9c:	add	ip, r9, #2
   13ca0:	add	r9, r9, #3
   13ca4:	cmp	sl, ip
   13ca8:	ubfxhi	r8, r4, #3, #3
   13cac:	and	r4, r4, #7
   13cb0:	add	r4, r4, #48	; 0x30
   13cb4:	addhi	r8, r8, #48	; 0x30
   13cb8:	strbhi	r8, [r3, ip]
   13cbc:	add	fp, fp, #1
   13cc0:	cmp	r1, fp
   13cc4:	bls	13d04 <close_stdout@@Base+0xc78>
   13cc8:	cmp	r9, sl
   13ccc:	strbcc	r4, [r3, r9]
   13cd0:	ldrb	r4, [r5, #1]!
   13cd4:	add	r9, r9, #1
   13cd8:	cmp	r2, #0
   13cdc:	bne	13c78 <close_stdout@@Base+0xbec>
   13ce0:	cmp	r6, #0
   13ce4:	beq	13cbc <close_stdout@@Base+0xc30>
   13ce8:	add	fp, fp, #1
   13cec:	cmp	r9, sl
   13cf0:	strbcc	r0, [r3, r9]
   13cf4:	cmp	r1, fp
   13cf8:	add	r9, r9, #1
   13cfc:	mov	r6, #0
   13d00:	bhi	13cc8 <close_stdout@@Base+0xc3c>
   13d04:	ldr	r8, [sp, #60]	; 0x3c
   13d08:	b	13984 <close_stdout@@Base+0x8f8>
   13d0c:	ldr	r3, [sp, #36]	; 0x24
   13d10:	cmp	r3, #0
   13d14:	bne	14218 <close_stdout@@Base+0x118c>
   13d18:	cmp	sl, #0
   13d1c:	beq	14130 <close_stdout@@Base+0x10a4>
   13d20:	ldr	r1, [sp, #40]	; 0x28
   13d24:	mov	r0, #1
   13d28:	ldr	r2, [pc, #1296]	; 14240 <close_stdout@@Base+0x11b4>
   13d2c:	mov	r3, #34	; 0x22
   13d30:	str	r0, [sp, #24]
   13d34:	mov	r9, r0
   13d38:	add	r2, pc, r2
   13d3c:	str	r0, [sp, #28]
   13d40:	strb	r3, [r1]
   13d44:	str	r2, [sp, #52]	; 0x34
   13d48:	b	135f4 <close_stdout@@Base+0x568>
   13d4c:	ldr	r3, [pc, #1264]	; 14244 <close_stdout@@Base+0x11b8>
   13d50:	mov	r2, #1
   13d54:	mov	r0, #3
   13d58:	str	r2, [sp, #36]	; 0x24
   13d5c:	add	r3, pc, r3
   13d60:	str	r2, [sp, #24]
   13d64:	str	r3, [sp, #52]	; 0x34
   13d68:	mov	r9, #0
   13d6c:	str	r2, [sp, #28]
   13d70:	str	r0, [sp, #160]	; 0xa0
   13d74:	b	135f4 <close_stdout@@Base+0x568>
   13d78:	mov	r0, #0
   13d7c:	mov	r1, #1
   13d80:	str	r0, [sp, #36]	; 0x24
   13d84:	mov	r9, r0
   13d88:	str	r1, [sp, #24]
   13d8c:	str	r0, [sp, #28]
   13d90:	str	r0, [sp, #52]	; 0x34
   13d94:	b	135f4 <close_stdout@@Base+0x568>
   13d98:	ldr	r3, [sp, #160]	; 0xa0
   13d9c:	cmp	r3, #8
   13da0:	beq	13dcc <close_stdout@@Base+0xd40>
   13da4:	ldr	r0, [pc, #1180]	; 14248 <close_stdout@@Base+0x11bc>
   13da8:	mov	r1, r3
   13dac:	add	r0, pc, r0
   13db0:	bl	133dc <close_stdout@@Base+0x350>
   13db4:	ldr	r1, [sp, #160]	; 0xa0
   13db8:	str	r0, [sp, #72]	; 0x48
   13dbc:	ldr	r0, [pc, #1160]	; 1424c <close_stdout@@Base+0x11c0>
   13dc0:	add	r0, pc, r0
   13dc4:	bl	133dc <close_stdout@@Base+0x350>
   13dc8:	str	r0, [sp, #68]	; 0x44
   13dcc:	ldr	r0, [sp, #36]	; 0x24
   13dd0:	cmp	r0, #0
   13dd4:	movne	r9, #0
   13dd8:	bne	13e10 <close_stdout@@Base+0xd84>
   13ddc:	ldr	r1, [sp, #72]	; 0x48
   13de0:	ldrb	r3, [r1]
   13de4:	cmp	r3, #0
   13de8:	beq	141e8 <close_stdout@@Base+0x115c>
   13dec:	mov	r2, r1
   13df0:	ldr	r1, [sp, #40]	; 0x28
   13df4:	mov	r9, r0
   13df8:	cmp	r9, sl
   13dfc:	strbcc	r3, [r1, r9]
   13e00:	ldrb	r3, [r2, #1]!
   13e04:	add	r9, r9, #1
   13e08:	cmp	r3, #0
   13e0c:	bne	13df8 <close_stdout@@Base+0xd6c>
   13e10:	ldr	r0, [sp, #68]	; 0x44
   13e14:	str	r0, [sp, #52]	; 0x34
   13e18:	bl	11588 <strlen@plt>
   13e1c:	mov	r2, #1
   13e20:	str	r2, [sp, #24]
   13e24:	str	r0, [sp, #28]
   13e28:	b	135f4 <close_stdout@@Base+0x568>
   13e2c:	ldr	r3, [pc, #1052]	; 14250 <close_stdout@@Base+0x11c4>
   13e30:	mov	r2, #0
   13e34:	mov	r1, #1
   13e38:	mov	r0, #2
   13e3c:	add	r3, pc, r3
   13e40:	str	r1, [sp, #36]	; 0x24
   13e44:	str	r2, [sp, #24]
   13e48:	mov	r9, r2
   13e4c:	str	r1, [sp, #28]
   13e50:	str	r3, [sp, #52]	; 0x34
   13e54:	str	r0, [sp, #160]	; 0xa0
   13e58:	b	135f4 <close_stdout@@Base+0x568>
   13e5c:	ldr	r3, [sp, #36]	; 0x24
   13e60:	cmp	r3, #0
   13e64:	bne	141f4 <close_stdout@@Base+0x1168>
   13e68:	cmp	sl, #0
   13e6c:	beq	14150 <close_stdout@@Base+0x10c4>
   13e70:	ldr	r1, [sp, #40]	; 0x28
   13e74:	mov	r3, #39	; 0x27
   13e78:	ldr	r2, [sp, #36]	; 0x24
   13e7c:	mov	r0, #1
   13e80:	mov	r9, r0
   13e84:	str	r0, [sp, #28]
   13e88:	strb	r3, [r1]
   13e8c:	ldr	r3, [pc, #960]	; 14254 <close_stdout@@Base+0x11c8>
   13e90:	str	r2, [sp, #24]
   13e94:	add	r3, pc, r3
   13e98:	str	r3, [sp, #52]	; 0x34
   13e9c:	b	135f4 <close_stdout@@Base+0x568>
   13ea0:	ldr	r2, [sp, #28]
   13ea4:	cmp	r2, #1
   13ea8:	add	r4, fp, r2
   13eac:	movls	r3, #0
   13eb0:	movhi	r3, #1
   13eb4:	cmn	r8, #1
   13eb8:	movne	r3, #0
   13ebc:	cmp	r3, #0
   13ec0:	beq	13ed0 <close_stdout@@Base+0xe44>
   13ec4:	ldr	r0, [sp, #32]
   13ec8:	bl	11588 <strlen@plt>
   13ecc:	mov	r8, r0
   13ed0:	cmp	r8, r4
   13ed4:	ldrcc	r3, [sp, #32]
   13ed8:	movcc	r6, #0
   13edc:	addcc	r5, r3, fp
   13ee0:	bcc	13650 <close_stdout@@Base+0x5c4>
   13ee4:	ldr	r0, [sp, #32]
   13ee8:	ldr	r1, [sp, #52]	; 0x34
   13eec:	add	r5, r0, fp
   13ef0:	ldr	r2, [sp, #28]
   13ef4:	mov	r0, r5
   13ef8:	bl	11450 <memcmp@plt>
   13efc:	cmp	r0, #0
   13f00:	bne	13f18 <close_stdout@@Base+0xe8c>
   13f04:	ldr	r1, [sp, #36]	; 0x24
   13f08:	cmp	r1, #0
   13f0c:	bne	13a70 <close_stdout@@Base+0x9e4>
   13f10:	mov	r6, #1
   13f14:	b	13650 <close_stdout@@Base+0x5c4>
   13f18:	mov	r6, #0
   13f1c:	b	13650 <close_stdout@@Base+0x5c4>
   13f20:	add	r7, sp, #108	; 0x6c
   13f24:	cmn	r8, #1
   13f28:	mov	r3, #0
   13f2c:	str	r3, [sp, #108]	; 0x6c
   13f30:	str	r3, [r7, #4]
   13f34:	beq	14120 <close_stdout@@Base+0x1094>
   13f38:	mov	r1, #0
   13f3c:	ldr	r0, [sp, #32]
   13f40:	mov	ip, #1
   13f44:	str	r9, [sp, #88]	; 0x58
   13f48:	str	r6, [sp, #96]	; 0x60
   13f4c:	mov	r9, r1
   13f50:	str	r5, [sp, #100]	; 0x64
   13f54:	mov	r6, ip
   13f58:	mov	r5, r7
   13f5c:	add	r3, sp, #104	; 0x68
   13f60:	sub	r0, r0, #1
   13f64:	str	r3, [sp, #80]	; 0x50
   13f68:	str	r0, [sp, #84]	; 0x54
   13f6c:	str	r1, [sp, #60]	; 0x3c
   13f70:	str	r4, [sp, #92]	; 0x5c
   13f74:	ldr	r2, [sp, #32]
   13f78:	add	r7, r9, fp
   13f7c:	add	r0, sp, #104	; 0x68
   13f80:	mov	r3, r5
   13f84:	add	r4, r2, r7
   13f88:	rsb	r2, r7, r8
   13f8c:	mov	r1, r4
   13f90:	bl	114f8 <mbrtowc@plt>
   13f94:	subs	r2, r0, #0
   13f98:	beq	140a4 <close_stdout@@Base+0x1018>
   13f9c:	cmn	r2, #1
   13fa0:	beq	141cc <close_stdout@@Base+0x1140>
   13fa4:	cmn	r2, #2
   13fa8:	beq	14170 <close_stdout@@Base+0x10e4>
   13fac:	ldr	r3, [sp, #36]	; 0x24
   13fb0:	ldr	r0, [sp, #160]	; 0xa0
   13fb4:	cmp	r0, #2
   13fb8:	movne	r3, #0
   13fbc:	andeq	r3, r3, #1
   13fc0:	cmp	r3, #0
   13fc4:	beq	14080 <close_stdout@@Base+0xff4>
   13fc8:	cmp	r2, #1
   13fcc:	beq	14080 <close_stdout@@Base+0xff4>
   13fd0:	ldr	r1, [sp, #84]	; 0x54
   13fd4:	add	r3, r1, r2
   13fd8:	add	r7, r3, r7
   13fdc:	ldrb	r3, [r4, #1]!
   13fe0:	sub	r3, r3, #91	; 0x5b
   13fe4:	cmp	r3, #33	; 0x21
   13fe8:	addls	pc, pc, r3, lsl #2
   13fec:	b	14078 <close_stdout@@Base+0xfec>
   13ff0:	b	13a70 <close_stdout@@Base+0x9e4>
   13ff4:	b	13a70 <close_stdout@@Base+0x9e4>
   13ff8:	b	14078 <close_stdout@@Base+0xfec>
   13ffc:	b	13a70 <close_stdout@@Base+0x9e4>
   14000:	b	14078 <close_stdout@@Base+0xfec>
   14004:	b	13a70 <close_stdout@@Base+0x9e4>
   14008:	b	14078 <close_stdout@@Base+0xfec>
   1400c:	b	14078 <close_stdout@@Base+0xfec>
   14010:	b	14078 <close_stdout@@Base+0xfec>
   14014:	b	14078 <close_stdout@@Base+0xfec>
   14018:	b	14078 <close_stdout@@Base+0xfec>
   1401c:	b	14078 <close_stdout@@Base+0xfec>
   14020:	b	14078 <close_stdout@@Base+0xfec>
   14024:	b	14078 <close_stdout@@Base+0xfec>
   14028:	b	14078 <close_stdout@@Base+0xfec>
   1402c:	b	14078 <close_stdout@@Base+0xfec>
   14030:	b	14078 <close_stdout@@Base+0xfec>
   14034:	b	14078 <close_stdout@@Base+0xfec>
   14038:	b	14078 <close_stdout@@Base+0xfec>
   1403c:	b	14078 <close_stdout@@Base+0xfec>
   14040:	b	14078 <close_stdout@@Base+0xfec>
   14044:	b	14078 <close_stdout@@Base+0xfec>
   14048:	b	14078 <close_stdout@@Base+0xfec>
   1404c:	b	14078 <close_stdout@@Base+0xfec>
   14050:	b	14078 <close_stdout@@Base+0xfec>
   14054:	b	14078 <close_stdout@@Base+0xfec>
   14058:	b	14078 <close_stdout@@Base+0xfec>
   1405c:	b	14078 <close_stdout@@Base+0xfec>
   14060:	b	14078 <close_stdout@@Base+0xfec>
   14064:	b	14078 <close_stdout@@Base+0xfec>
   14068:	b	14078 <close_stdout@@Base+0xfec>
   1406c:	b	14078 <close_stdout@@Base+0xfec>
   14070:	b	14078 <close_stdout@@Base+0xfec>
   14074:	b	13a70 <close_stdout@@Base+0x9e4>
   14078:	cmp	r4, r7
   1407c:	bne	13fdc <close_stdout@@Base+0xf50>
   14080:	ldr	r0, [sp, #104]	; 0x68
   14084:	add	r9, r9, r2
   14088:	bl	114a4 <iswprint@plt>
   1408c:	cmp	r0, #0
   14090:	mov	r0, r5
   14094:	moveq	r6, #0
   14098:	bl	11444 <mbsinit@plt>
   1409c:	cmp	r0, #0
   140a0:	beq	13f74 <close_stdout@@Base+0xee8>
   140a4:	mov	ip, r6
   140a8:	eor	r2, ip, #1
   140ac:	str	r9, [sp, #60]	; 0x3c
   140b0:	ldr	r4, [sp, #92]	; 0x5c
   140b4:	uxtb	r2, r2
   140b8:	ldr	r9, [sp, #88]	; 0x58
   140bc:	ldr	r6, [sp, #96]	; 0x60
   140c0:	ldr	r5, [sp, #100]	; 0x64
   140c4:	ldr	r3, [sp, #60]	; 0x3c
   140c8:	cmp	r3, #1
   140cc:	bls	13c50 <close_stdout@@Base+0xbc4>
   140d0:	ldr	r0, [sp, #24]
   140d4:	and	r2, r2, r0
   140d8:	b	13c5c <close_stdout@@Base+0xbd0>
   140dc:	ldr	r2, [sp, #164]	; 0xa4
   140e0:	tst	r2, #1
   140e4:	addne	fp, fp, #1
   140e8:	bne	13618 <close_stdout@@Base+0x58c>
   140ec:	b	13928 <close_stdout@@Base+0x89c>
   140f0:	ldr	r0, [sp, #36]	; 0x24
   140f4:	cmp	r0, #0
   140f8:	beq	13928 <close_stdout@@Base+0x89c>
   140fc:	b	13a70 <close_stdout@@Base+0x9e4>
   14100:	ldr	r2, [sp, #32]
   14104:	ldrb	r3, [r2, #1]
   14108:	adds	r3, r3, #0
   1410c:	movne	r3, #1
   14110:	b	13a44 <close_stdout@@Base+0x9b8>
   14114:	bl	116e4 <abort@plt>
   14118:	ldr	r8, [sp, #60]	; 0x3c
   1411c:	b	13a70 <close_stdout@@Base+0x9e4>
   14120:	ldr	r0, [sp, #32]
   14124:	bl	11588 <strlen@plt>
   14128:	mov	r8, r0
   1412c:	b	13f38 <close_stdout@@Base+0xeac>
   14130:	ldr	r2, [pc, #288]	; 14258 <close_stdout@@Base+0x11cc>
   14134:	mov	r1, #1
   14138:	mov	r9, r1
   1413c:	str	r1, [sp, #24]
   14140:	add	r2, pc, r2
   14144:	str	r1, [sp, #28]
   14148:	str	r2, [sp, #52]	; 0x34
   1414c:	b	135f4 <close_stdout@@Base+0x568>
   14150:	ldr	r2, [pc, #260]	; 1425c <close_stdout@@Base+0x11d0>
   14154:	mov	r3, #1
   14158:	mov	r9, r3
   1415c:	str	r3, [sp, #28]
   14160:	add	r2, pc, r2
   14164:	str	sl, [sp, #24]
   14168:	str	r2, [sp, #52]	; 0x34
   1416c:	b	135f4 <close_stdout@@Base+0x568>
   14170:	cmp	r8, r7
   14174:	str	r9, [sp, #60]	; 0x3c
   14178:	mov	ip, r4
   1417c:	ldr	r6, [sp, #96]	; 0x60
   14180:	ldr	r9, [sp, #88]	; 0x58
   14184:	ldr	r4, [sp, #92]	; 0x5c
   14188:	ldr	r5, [sp, #100]	; 0x64
   1418c:	bls	141c4 <close_stdout@@Base+0x1138>
   14190:	ldrb	r3, [ip]
   14194:	cmp	r3, #0
   14198:	beq	141c4 <close_stdout@@Base+0x1138>
   1419c:	ldr	r3, [sp, #60]	; 0x3c
   141a0:	b	141b0 <close_stdout@@Base+0x1124>
   141a4:	ldrb	r2, [r5, r3]
   141a8:	cmp	r2, #0
   141ac:	beq	141c0 <close_stdout@@Base+0x1134>
   141b0:	add	r3, r3, #1
   141b4:	add	r2, fp, r3
   141b8:	cmp	r8, r2
   141bc:	bhi	141a4 <close_stdout@@Base+0x1118>
   141c0:	str	r3, [sp, #60]	; 0x3c
   141c4:	mov	r2, #1
   141c8:	b	140c4 <close_stdout@@Base+0x1038>
   141cc:	str	r9, [sp, #60]	; 0x3c
   141d0:	mov	r2, #1
   141d4:	ldr	r4, [sp, #92]	; 0x5c
   141d8:	ldr	r6, [sp, #96]	; 0x60
   141dc:	ldr	r9, [sp, #88]	; 0x58
   141e0:	ldr	r5, [sp, #100]	; 0x64
   141e4:	b	140c4 <close_stdout@@Base+0x1038>
   141e8:	ldr	r9, [sp, #36]	; 0x24
   141ec:	b	13e10 <close_stdout@@Base+0xd84>
   141f0:	bl	11474 <__stack_chk_fail@plt>
   141f4:	ldr	r1, [pc, #100]	; 14260 <close_stdout@@Base+0x11d4>
   141f8:	mov	r3, #0
   141fc:	mov	r0, #1
   14200:	str	r3, [sp, #24]
   14204:	add	r1, pc, r1
   14208:	str	r0, [sp, #28]
   1420c:	mov	r9, r3
   14210:	str	r1, [sp, #52]	; 0x34
   14214:	b	135f4 <close_stdout@@Base+0x568>
   14218:	ldr	r0, [pc, #68]	; 14264 <close_stdout@@Base+0x11d8>
   1421c:	mov	r3, #1
   14220:	mov	r9, #0
   14224:	str	r3, [sp, #24]
   14228:	add	r0, pc, r0
   1422c:	str	r3, [sp, #28]
   14230:	str	r0, [sp, #52]	; 0x34
   14234:	b	135f4 <close_stdout@@Base+0x568>
   14238:	muleq	r1, ip, sl
   1423c:	andeq	r0, r0, ip, asr #2
   14240:	andeq	r7, r0, r0, ror sl
   14244:	andeq	r7, r0, ip, asr #20
   14248:	andeq	r7, r0, r8, lsl #20
   1424c:	andeq	r7, r0, r4, ror #19
   14250:	andeq	r7, r0, r8, ror #18
   14254:	andeq	r7, r0, r0, lsl r9
   14258:	andeq	r7, r0, r8, ror #12
   1425c:	andeq	r7, r0, r4, asr #12
   14260:	andeq	r7, r0, r0, lsr #11
   14264:	andeq	r7, r0, r0, lsl #11
   14268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1426c:	sub	sp, sp, #44	; 0x2c
   14270:	mov	r6, r0
   14274:	mov	r9, r1
   14278:	mov	sl, r2
   1427c:	mov	r4, r3
   14280:	bl	115d0 <__errno_location@plt>
   14284:	ldr	fp, [pc, #412]	; 14428 <close_stdout@@Base+0x139c>
   14288:	cmp	r6, #0
   1428c:	add	fp, pc, fp
   14290:	ldr	r5, [fp]
   14294:	ldr	r1, [r0]
   14298:	mov	r8, r0
   1429c:	str	r1, [sp, #36]	; 0x24
   142a0:	blt	14420 <close_stdout@@Base+0x1394>
   142a4:	ldr	r3, [pc, #384]	; 1442c <close_stdout@@Base+0x13a0>
   142a8:	add	r3, pc, r3
   142ac:	ldr	r3, [r3]
   142b0:	cmp	r6, r3
   142b4:	bcc	14308 <close_stdout@@Base+0x127c>
   142b8:	add	r7, r6, #1
   142bc:	cmn	r7, #-536870911	; 0xe0000001
   142c0:	bhi	14424 <close_stdout@@Base+0x1398>
   142c4:	add	r3, fp, #4
   142c8:	cmp	r5, r3
   142cc:	beq	143f8 <close_stdout@@Base+0x136c>
   142d0:	mov	r0, r5
   142d4:	lsl	r1, r7, #3
   142d8:	bl	15578 <close_stdout@@Base+0x24ec>
   142dc:	mov	r5, r0
   142e0:	str	r0, [fp]
   142e4:	ldr	fp, [pc, #324]	; 14430 <close_stdout@@Base+0x13a4>
   142e8:	mov	r1, #0
   142ec:	add	fp, pc, fp
   142f0:	ldr	r0, [fp]
   142f4:	rsb	r2, r0, r7
   142f8:	add	r0, r5, r0, lsl #3
   142fc:	lsl	r2, r2, #3
   14300:	bl	115e8 <memset@plt>
   14304:	str	r7, [fp]
   14308:	add	r2, r4, #8
   1430c:	str	r2, [sp, #32]
   14310:	ldr	r1, [r4]
   14314:	add	fp, r5, r6, lsl #3
   14318:	ldr	lr, [sp, #32]
   1431c:	mov	r2, r9
   14320:	ldr	r3, [r4, #4]
   14324:	ldr	ip, [r5, r6, lsl #3]
   14328:	ldr	r7, [fp, #4]
   1432c:	orr	r3, r3, #1
   14330:	str	r1, [sp]
   14334:	str	r3, [sp, #4]
   14338:	mov	r1, ip
   1433c:	str	lr, [sp, #8]
   14340:	mov	r0, r7
   14344:	ldr	lr, [r4, #40]	; 0x28
   14348:	str	r3, [sp, #28]
   1434c:	mov	r3, sl
   14350:	str	lr, [sp, #12]
   14354:	ldr	lr, [r4, #44]	; 0x2c
   14358:	str	ip, [sp, #24]
   1435c:	str	lr, [sp, #16]
   14360:	bl	13540 <close_stdout@@Base+0x4b4>
   14364:	ldr	ip, [sp, #24]
   14368:	cmp	ip, r0
   1436c:	bhi	143e4 <close_stdout@@Base+0x1358>
   14370:	ldr	r3, [pc, #188]	; 14434 <close_stdout@@Base+0x13a8>
   14374:	add	r1, r0, #1
   14378:	str	r1, [r5, r6, lsl #3]
   1437c:	add	r3, pc, r3
   14380:	cmp	r7, r3
   14384:	beq	14398 <close_stdout@@Base+0x130c>
   14388:	mov	r0, r7
   1438c:	str	r1, [sp, #24]
   14390:	bl	11414 <free@plt>
   14394:	ldr	r1, [sp, #24]
   14398:	mov	r0, r1
   1439c:	str	r1, [sp, #24]
   143a0:	bl	15520 <close_stdout@@Base+0x2494>
   143a4:	ldr	r3, [sp, #28]
   143a8:	ldr	lr, [sp, #32]
   143ac:	mov	r2, r9
   143b0:	str	r0, [fp, #4]
   143b4:	mov	r7, r0
   143b8:	ldr	ip, [r4]
   143bc:	str	r3, [sp, #4]
   143c0:	mov	r3, sl
   143c4:	str	lr, [sp, #8]
   143c8:	str	ip, [sp]
   143cc:	ldr	ip, [r4, #40]	; 0x28
   143d0:	ldr	r1, [sp, #24]
   143d4:	str	ip, [sp, #12]
   143d8:	ldr	ip, [r4, #44]	; 0x2c
   143dc:	str	ip, [sp, #16]
   143e0:	bl	13540 <close_stdout@@Base+0x4b4>
   143e4:	ldr	r1, [sp, #36]	; 0x24
   143e8:	mov	r0, r7
   143ec:	str	r1, [r8]
   143f0:	add	sp, sp, #44	; 0x2c
   143f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143f8:	lsl	r1, r7, #3
   143fc:	mov	r0, #0
   14400:	str	r3, [sp, #24]
   14404:	bl	15578 <close_stdout@@Base+0x24ec>
   14408:	ldr	r3, [sp, #24]
   1440c:	mov	r5, r0
   14410:	ldm	r3, {r0, r1}
   14414:	str	r5, [fp]
   14418:	stm	r5, {r0, r1}
   1441c:	b	142e4 <close_stdout@@Base+0x1258>
   14420:	bl	116e4 <abort@plt>
   14424:	bl	15734 <close_stdout@@Base+0x26a8>
   14428:	andeq	r8, r1, r0, lsr pc
   1442c:	andeq	r8, r1, r0, ror #29
   14430:	muleq	r1, ip, lr
   14434:	andeq	r8, r1, r8, ror lr
   14438:	push	{r4, r5, r6, lr}
   1443c:	mov	r5, r0
   14440:	bl	115d0 <__errno_location@plt>
   14444:	cmp	r5, #0
   14448:	mov	r1, #48	; 0x30
   1444c:	mov	r4, r0
   14450:	ldr	r0, [pc, #24]	; 14470 <close_stdout@@Base+0x13e4>
   14454:	ldr	r6, [r4]
   14458:	add	r0, pc, r0
   1445c:	add	r0, r0, #256	; 0x100
   14460:	movne	r0, r5
   14464:	bl	156f4 <close_stdout@@Base+0x2668>
   14468:	str	r6, [r4]
   1446c:	pop	{r4, r5, r6, pc}
   14470:	muleq	r1, ip, sp
   14474:	cmp	r0, #0
   14478:	beq	14484 <close_stdout@@Base+0x13f8>
   1447c:	ldr	r0, [r0]
   14480:	bx	lr
   14484:	ldr	r0, [pc, #12]	; 14498 <close_stdout@@Base+0x140c>
   14488:	add	r0, pc, r0
   1448c:	add	r0, r0, #256	; 0x100
   14490:	ldr	r0, [r0]
   14494:	bx	lr
   14498:	andeq	r8, r1, ip, ror #26
   1449c:	cmp	r0, #0
   144a0:	beq	144ac <close_stdout@@Base+0x1420>
   144a4:	str	r1, [r0]
   144a8:	bx	lr
   144ac:	ldr	r0, [pc, #12]	; 144c0 <close_stdout@@Base+0x1434>
   144b0:	add	r0, pc, r0
   144b4:	add	r0, r0, #256	; 0x100
   144b8:	str	r1, [r0]
   144bc:	bx	lr
   144c0:	andeq	r8, r1, r4, asr #26
   144c4:	cmp	r0, #0
   144c8:	movne	r3, r0
   144cc:	beq	144fc <close_stdout@@Base+0x1470>
   144d0:	lsr	ip, r1, #5
   144d4:	and	r1, r1, #31
   144d8:	add	r3, r3, ip, lsl #2
   144dc:	ldr	ip, [r3, #8]
   144e0:	lsr	r0, ip, r1
   144e4:	eor	r2, r0, r2
   144e8:	and	r0, r0, #1
   144ec:	and	r2, r2, #1
   144f0:	eor	ip, ip, r2, lsl r1
   144f4:	str	ip, [r3, #8]
   144f8:	bx	lr
   144fc:	ldr	r3, [pc, #8]	; 1450c <close_stdout@@Base+0x1480>
   14500:	add	r3, pc, r3
   14504:	add	r3, r3, #256	; 0x100
   14508:	b	144d0 <close_stdout@@Base+0x1444>
   1450c:	strdeq	r8, [r1], -r4
   14510:	subs	r3, r0, #0
   14514:	beq	14524 <close_stdout@@Base+0x1498>
   14518:	ldr	r0, [r3, #4]
   1451c:	str	r1, [r3, #4]
   14520:	bx	lr
   14524:	ldr	r3, [pc, #8]	; 14534 <close_stdout@@Base+0x14a8>
   14528:	add	r3, pc, r3
   1452c:	add	r3, r3, #256	; 0x100
   14530:	b	14518 <close_stdout@@Base+0x148c>
   14534:	andeq	r8, r1, ip, asr #25
   14538:	cmp	r0, #0
   1453c:	push	{r3, lr}
   14540:	beq	14564 <close_stdout@@Base+0x14d8>
   14544:	cmp	r2, #0
   14548:	cmpne	r1, #0
   1454c:	mov	r3, #8
   14550:	strne	r1, [r0, #40]	; 0x28
   14554:	str	r3, [r0]
   14558:	strne	r2, [r0, #44]	; 0x2c
   1455c:	popne	{r3, pc}
   14560:	bl	116e4 <abort@plt>
   14564:	ldr	r0, [pc, #8]	; 14574 <close_stdout@@Base+0x14e8>
   14568:	add	r0, pc, r0
   1456c:	add	r0, r0, #256	; 0x100
   14570:	b	14544 <close_stdout@@Base+0x14b8>
   14574:	andeq	r8, r1, ip, lsl #25
   14578:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1457c:	sub	sp, sp, #24
   14580:	mov	r7, r0
   14584:	mov	sl, r1
   14588:	ldr	r4, [sp, #56]	; 0x38
   1458c:	mov	r9, r2
   14590:	mov	r8, r3
   14594:	cmp	r4, #0
   14598:	beq	145ec <close_stdout@@Base+0x1560>
   1459c:	bl	115d0 <__errno_location@plt>
   145a0:	ldr	r3, [r4]
   145a4:	add	lr, r4, #8
   145a8:	mov	r1, sl
   145ac:	mov	r2, r9
   145b0:	ldr	r6, [r0]
   145b4:	mov	r5, r0
   145b8:	str	r3, [sp]
   145bc:	mov	r0, r7
   145c0:	ldr	ip, [r4, #4]
   145c4:	mov	r3, r8
   145c8:	stmib	sp, {ip, lr}
   145cc:	ldr	ip, [r4, #40]	; 0x28
   145d0:	str	ip, [sp, #12]
   145d4:	ldr	ip, [r4, #44]	; 0x2c
   145d8:	str	ip, [sp, #16]
   145dc:	bl	13540 <close_stdout@@Base+0x4b4>
   145e0:	str	r6, [r5]
   145e4:	add	sp, sp, #24
   145e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   145ec:	ldr	r4, [pc, #8]	; 145fc <close_stdout@@Base+0x1570>
   145f0:	add	r4, pc, r4
   145f4:	add	r4, r4, #256	; 0x100
   145f8:	b	1459c <close_stdout@@Base+0x1510>
   145fc:	andeq	r8, r1, r4, lsl #24
   14600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14604:	subs	r4, r3, #0
   14608:	sub	sp, sp, #36	; 0x24
   1460c:	mov	r7, r0
   14610:	mov	r6, r1
   14614:	mov	r5, r2
   14618:	beq	146d4 <close_stdout@@Base+0x1648>
   1461c:	bl	115d0 <__errno_location@plt>
   14620:	ldr	r3, [r4]
   14624:	ldr	sl, [r4, #4]
   14628:	add	r9, r4, #8
   1462c:	mov	r8, r0
   14630:	mov	r0, #0
   14634:	ldr	r2, [r8]
   14638:	cmp	r5, r0
   1463c:	orreq	sl, sl, #1
   14640:	str	r9, [sp, #8]
   14644:	mov	r1, r0
   14648:	stm	sp, {r3, sl}
   1464c:	mov	r3, r6
   14650:	ldr	ip, [r4, #40]	; 0x28
   14654:	str	r2, [sp, #28]
   14658:	mov	r2, r7
   1465c:	str	ip, [sp, #12]
   14660:	ldr	ip, [r4, #44]	; 0x2c
   14664:	str	ip, [sp, #16]
   14668:	bl	13540 <close_stdout@@Base+0x4b4>
   1466c:	add	r1, r0, #1
   14670:	mov	fp, r0
   14674:	str	r1, [sp, #24]
   14678:	mov	r0, r1
   1467c:	bl	15520 <close_stdout@@Base+0x2494>
   14680:	ldr	lr, [r4]
   14684:	str	sl, [sp, #4]
   14688:	mov	r3, r6
   1468c:	str	r9, [sp, #8]
   14690:	mov	r2, r7
   14694:	str	lr, [sp]
   14698:	ldr	lr, [r4, #40]	; 0x28
   1469c:	ldr	r1, [sp, #24]
   146a0:	str	lr, [sp, #12]
   146a4:	ldr	lr, [r4, #44]	; 0x2c
   146a8:	str	lr, [sp, #16]
   146ac:	str	r0, [sp, #24]
   146b0:	bl	13540 <close_stdout@@Base+0x4b4>
   146b4:	ldr	r3, [sp, #28]
   146b8:	cmp	r5, #0
   146bc:	str	r3, [r8]
   146c0:	ldr	ip, [sp, #24]
   146c4:	strne	fp, [r5]
   146c8:	mov	r0, ip
   146cc:	add	sp, sp, #36	; 0x24
   146d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146d4:	ldr	r4, [pc, #8]	; 146e4 <close_stdout@@Base+0x1658>
   146d8:	add	r4, pc, r4
   146dc:	add	r4, r4, #256	; 0x100
   146e0:	b	1461c <close_stdout@@Base+0x1590>
   146e4:	andeq	r8, r1, ip, lsl fp
   146e8:	mov	r3, r2
   146ec:	mov	r2, #0
   146f0:	b	14600 <close_stdout@@Base+0x1574>
   146f4:	ldr	r2, [pc, #152]	; 14794 <close_stdout@@Base+0x1708>
   146f8:	push	{r3, r4, r5, r6, r7, lr}
   146fc:	add	r2, pc, r2
   14700:	ldr	r3, [pc, #144]	; 14798 <close_stdout@@Base+0x170c>
   14704:	ldr	r6, [r2]
   14708:	add	r3, pc, r3
   1470c:	cmp	r6, #1
   14710:	ldr	r7, [r3]
   14714:	movhi	r4, #1
   14718:	movhi	r5, r7
   1471c:	bls	14738 <close_stdout@@Base+0x16ac>
   14720:	ldr	r0, [r5, #12]
   14724:	add	r4, r4, #1
   14728:	bl	11414 <free@plt>
   1472c:	cmp	r4, r6
   14730:	add	r5, r5, #8
   14734:	bne	14720 <close_stdout@@Base+0x1694>
   14738:	ldr	r4, [pc, #92]	; 1479c <close_stdout@@Base+0x1710>
   1473c:	ldr	r0, [r7, #4]
   14740:	add	r4, pc, r4
   14744:	cmp	r0, r4
   14748:	beq	14760 <close_stdout@@Base+0x16d4>
   1474c:	bl	11414 <free@plt>
   14750:	ldr	r3, [pc, #72]	; 147a0 <close_stdout@@Base+0x1714>
   14754:	mov	r2, #256	; 0x100
   14758:	add	r3, pc, r3
   1475c:	stmib	r3, {r2, r4}
   14760:	ldr	r4, [pc, #60]	; 147a4 <close_stdout@@Base+0x1718>
   14764:	add	r4, pc, r4
   14768:	add	r5, r4, #4
   1476c:	cmp	r7, r5
   14770:	beq	14780 <close_stdout@@Base+0x16f4>
   14774:	mov	r0, r7
   14778:	bl	11414 <free@plt>
   1477c:	str	r5, [r4]
   14780:	ldr	r3, [pc, #32]	; 147a8 <close_stdout@@Base+0x171c>
   14784:	mov	r2, #1
   14788:	add	r3, pc, r3
   1478c:	str	r2, [r3]
   14790:	pop	{r3, r4, r5, r6, r7, pc}
   14794:	andeq	r8, r1, ip, lsl #21
   14798:			; <UNDEFINED> instruction: 0x00018ab4
   1479c:			; <UNDEFINED> instruction: 0x00018ab4
   147a0:	andeq	r8, r1, r4, ror #20
   147a4:	andeq	r8, r1, r8, asr sl
   147a8:	andeq	r8, r1, r0, lsl #20
   147ac:	ldr	r3, [pc, #12]	; 147c0 <close_stdout@@Base+0x1734>
   147b0:	mvn	r2, #0
   147b4:	add	r3, pc, r3
   147b8:	add	r3, r3, #256	; 0x100
   147bc:	b	14268 <close_stdout@@Base+0x11dc>
   147c0:	andeq	r8, r1, r0, asr #20
   147c4:	ldr	r3, [pc, #8]	; 147d4 <close_stdout@@Base+0x1748>
   147c8:	add	r3, pc, r3
   147cc:	add	r3, r3, #256	; 0x100
   147d0:	b	14268 <close_stdout@@Base+0x11dc>
   147d4:	andeq	r8, r1, ip, lsr #20
   147d8:	mov	r1, r0
   147dc:	mov	r0, #0
   147e0:	b	147ac <close_stdout@@Base+0x1720>
   147e4:	mov	r2, r1
   147e8:	mov	r1, r0
   147ec:	mov	r0, #0
   147f0:	b	147c4 <close_stdout@@Base+0x1738>
   147f4:	ldr	r3, [pc, #92]	; 14858 <close_stdout@@Base+0x17cc>
   147f8:	ldr	ip, [pc, #92]	; 1485c <close_stdout@@Base+0x17d0>
   147fc:	add	r3, pc, r3
   14800:	push	{r4, r5, r6, r7, lr}
   14804:	sub	sp, sp, #60	; 0x3c
   14808:	ldr	r4, [r3, ip]
   1480c:	add	r5, sp, #4
   14810:	mov	r7, r2
   14814:	mov	r6, r0
   14818:	mov	r0, r5
   1481c:	ldr	r3, [r4]
   14820:	str	r3, [sp, #52]	; 0x34
   14824:	bl	13388 <close_stdout@@Base+0x2fc>
   14828:	mov	r3, r5
   1482c:	mvn	r2, #0
   14830:	mov	r0, r6
   14834:	mov	r1, r7
   14838:	bl	14268 <close_stdout@@Base+0x11dc>
   1483c:	ldr	r2, [sp, #52]	; 0x34
   14840:	ldr	r3, [r4]
   14844:	cmp	r2, r3
   14848:	bne	14854 <close_stdout@@Base+0x17c8>
   1484c:	add	sp, sp, #60	; 0x3c
   14850:	pop	{r4, r5, r6, r7, pc}
   14854:	bl	11474 <__stack_chk_fail@plt>
   14858:	strdeq	r8, [r1], -ip
   1485c:	andeq	r0, r0, ip, asr #2
   14860:	ldr	ip, [pc, #96]	; 148c8 <close_stdout@@Base+0x183c>
   14864:	push	{r4, r5, r6, r7, r8, lr}
   14868:	add	ip, pc, ip
   1486c:	ldr	lr, [pc, #88]	; 148cc <close_stdout@@Base+0x1840>
   14870:	sub	sp, sp, #56	; 0x38
   14874:	mov	r8, r3
   14878:	add	r5, sp, #4
   1487c:	mov	r7, r2
   14880:	mov	r6, r0
   14884:	ldr	r4, [ip, lr]
   14888:	mov	r0, r5
   1488c:	ldr	r3, [r4]
   14890:	str	r3, [sp, #52]	; 0x34
   14894:	bl	13388 <close_stdout@@Base+0x2fc>
   14898:	mov	r2, r8
   1489c:	mov	r3, r5
   148a0:	mov	r0, r6
   148a4:	mov	r1, r7
   148a8:	bl	14268 <close_stdout@@Base+0x11dc>
   148ac:	ldr	r2, [sp, #52]	; 0x34
   148b0:	ldr	r3, [r4]
   148b4:	cmp	r2, r3
   148b8:	bne	148c4 <close_stdout@@Base+0x1838>
   148bc:	add	sp, sp, #56	; 0x38
   148c0:	pop	{r4, r5, r6, r7, r8, pc}
   148c4:	bl	11474 <__stack_chk_fail@plt>
   148c8:	muleq	r1, r0, r7
   148cc:	andeq	r0, r0, ip, asr #2
   148d0:	mov	r2, r1
   148d4:	mov	r1, r0
   148d8:	mov	r0, #0
   148dc:	b	147f4 <close_stdout@@Base+0x1768>
   148e0:	mov	ip, r1
   148e4:	mov	r3, r2
   148e8:	mov	r1, r0
   148ec:	mov	r2, ip
   148f0:	mov	r0, #0
   148f4:	b	14860 <close_stdout@@Base+0x17d4>
   148f8:	push	{r4, r5, r6, r7, r8, lr}
   148fc:	mov	r5, r2
   14900:	ldr	lr, [pc, #136]	; 14990 <close_stdout@@Base+0x1904>
   14904:	mov	r7, r0
   14908:	mov	r6, r1
   1490c:	ldr	r4, [pc, #128]	; 14994 <close_stdout@@Base+0x1908>
   14910:	add	lr, pc, lr
   14914:	sub	sp, sp, #56	; 0x38
   14918:	add	lr, lr, #256	; 0x100
   1491c:	ldr	r8, [pc, #116]	; 14998 <close_stdout@@Base+0x190c>
   14920:	add	r4, pc, r4
   14924:	add	ip, sp, #4
   14928:	ldm	lr!, {r0, r1, r2, r3}
   1492c:	ldr	r4, [r4, r8]
   14930:	stmia	ip!, {r0, r1, r2, r3}
   14934:	ldm	lr!, {r0, r1, r2, r3}
   14938:	ldr	r8, [r4]
   1493c:	stmia	ip!, {r0, r1, r2, r3}
   14940:	ldm	lr, {r0, r1, r2, r3}
   14944:	str	r8, [sp, #52]	; 0x34
   14948:	stm	ip, {r0, r1, r2, r3}
   1494c:	mov	r1, r5
   14950:	add	r5, sp, #4
   14954:	mov	r2, #1
   14958:	mov	r0, r5
   1495c:	bl	144c4 <close_stdout@@Base+0x1438>
   14960:	mov	r2, r6
   14964:	mov	r3, r5
   14968:	mov	r1, r7
   1496c:	mov	r0, #0
   14970:	bl	14268 <close_stdout@@Base+0x11dc>
   14974:	ldr	r2, [sp, #52]	; 0x34
   14978:	ldr	r3, [r4]
   1497c:	cmp	r2, r3
   14980:	bne	1498c <close_stdout@@Base+0x1900>
   14984:	add	sp, sp, #56	; 0x38
   14988:	pop	{r4, r5, r6, r7, r8, pc}
   1498c:	bl	11474 <__stack_chk_fail@plt>
   14990:	andeq	r8, r1, r4, ror #17
   14994:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   14998:	andeq	r0, r0, ip, asr #2
   1499c:	mov	r2, r1
   149a0:	mvn	r1, #0
   149a4:	b	148f8 <close_stdout@@Base+0x186c>
   149a8:	mov	r1, #58	; 0x3a
   149ac:	b	1499c <close_stdout@@Base+0x1910>
   149b0:	mov	r2, #58	; 0x3a
   149b4:	b	148f8 <close_stdout@@Base+0x186c>
   149b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   149bc:	mov	r5, r2
   149c0:	ldr	lr, [pc, #144]	; 14a58 <close_stdout@@Base+0x19cc>
   149c4:	mov	r8, r0
   149c8:	mov	r9, r1
   149cc:	mov	r7, r3
   149d0:	add	lr, pc, lr
   149d4:	ldr	r4, [pc, #128]	; 14a5c <close_stdout@@Base+0x19d0>
   149d8:	add	lr, lr, #256	; 0x100
   149dc:	sub	sp, sp, #56	; 0x38
   149e0:	ldr	sl, [pc, #120]	; 14a60 <close_stdout@@Base+0x19d4>
   149e4:	add	r4, pc, r4
   149e8:	ldm	lr!, {r0, r1, r2, r3}
   149ec:	add	ip, sp, #4
   149f0:	ldr	r4, [r4, sl]
   149f4:	ldr	r6, [sp, #88]	; 0x58
   149f8:	stmia	ip!, {r0, r1, r2, r3}
   149fc:	ldm	lr!, {r0, r1, r2, r3}
   14a00:	ldr	sl, [r4]
   14a04:	stmia	ip!, {r0, r1, r2, r3}
   14a08:	ldm	lr, {r0, r1, r2, r3}
   14a0c:	str	sl, [sp, #52]	; 0x34
   14a10:	stm	ip, {r0, r1, r2, r3}
   14a14:	mov	r2, r5
   14a18:	add	r5, sp, #4
   14a1c:	mov	r1, r9
   14a20:	mov	r0, r5
   14a24:	bl	14538 <close_stdout@@Base+0x14ac>
   14a28:	mov	r2, r6
   14a2c:	mov	r3, r5
   14a30:	mov	r0, r8
   14a34:	mov	r1, r7
   14a38:	bl	14268 <close_stdout@@Base+0x11dc>
   14a3c:	ldr	r2, [sp, #52]	; 0x34
   14a40:	ldr	r3, [r4]
   14a44:	cmp	r2, r3
   14a48:	bne	14a54 <close_stdout@@Base+0x19c8>
   14a4c:	add	sp, sp, #56	; 0x38
   14a50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a54:	bl	11474 <__stack_chk_fail@plt>
   14a58:	andeq	r8, r1, r4, lsr #16
   14a5c:	andeq	r8, r1, r4, lsl r6
   14a60:	andeq	r0, r0, ip, asr #2
   14a64:	push	{lr}		; (str lr, [sp, #-4]!)
   14a68:	sub	sp, sp, #12
   14a6c:	mvn	ip, #0
   14a70:	str	ip, [sp]
   14a74:	bl	149b8 <close_stdout@@Base+0x192c>
   14a78:	add	sp, sp, #12
   14a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a80:	mov	ip, r1
   14a84:	mov	r3, r2
   14a88:	mov	r1, r0
   14a8c:	mov	r2, ip
   14a90:	mov	r0, #0
   14a94:	b	14a64 <close_stdout@@Base+0x19d8>
   14a98:	push	{lr}		; (str lr, [sp, #-4]!)
   14a9c:	sub	sp, sp, #12
   14aa0:	mov	lr, r1
   14aa4:	mov	ip, r2
   14aa8:	mov	r1, r0
   14aac:	str	r3, [sp]
   14ab0:	mov	r2, lr
   14ab4:	mov	r3, ip
   14ab8:	mov	r0, #0
   14abc:	bl	149b8 <close_stdout@@Base+0x192c>
   14ac0:	add	sp, sp, #12
   14ac4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ac8:	ldr	r3, [pc, #12]	; 14adc <close_stdout@@Base+0x1a50>
   14acc:	ldr	ip, [pc, #12]	; 14ae0 <close_stdout@@Base+0x1a54>
   14ad0:	add	r3, pc, r3
   14ad4:	ldr	r3, [r3, ip]
   14ad8:	b	14268 <close_stdout@@Base+0x11dc>
   14adc:	andeq	r8, r1, r8, lsr #10
   14ae0:	andeq	r0, r0, r4, asr #2
   14ae4:	mov	r2, r1
   14ae8:	mov	r1, r0
   14aec:	mov	r0, #0
   14af0:	b	14ac8 <close_stdout@@Base+0x1a3c>
   14af4:	mvn	r2, #0
   14af8:	b	14ac8 <close_stdout@@Base+0x1a3c>
   14afc:	mov	r1, r0
   14b00:	mov	r0, #0
   14b04:	b	14af4 <close_stdout@@Base+0x1a68>
   14b08:	ldr	r3, [pc, #104]	; 14b78 <close_stdout@@Base+0x1aec>
   14b0c:	ldr	ip, [pc, #104]	; 14b7c <close_stdout@@Base+0x1af0>
   14b10:	add	r3, pc, r3
   14b14:	ldr	r1, [pc, #100]	; 14b80 <close_stdout@@Base+0x1af4>
   14b18:	push	{r4, r5, r6, r7, lr}
   14b1c:	sub	sp, sp, #116	; 0x74
   14b20:	ldr	r7, [r3, ip]
   14b24:	mov	r6, r0
   14b28:	mov	r2, sp
   14b2c:	mov	r0, #3
   14b30:	add	r1, pc, r1
   14b34:	ldr	r3, [r7]
   14b38:	str	r3, [sp, #108]	; 0x6c
   14b3c:	bl	116fc <__lxstat64@plt>
   14b40:	cmp	r0, #0
   14b44:	ldrdeq	r2, [sp]
   14b48:	moveq	r0, r6
   14b4c:	ldrdeq	r4, [sp, #96]	; 0x60
   14b50:	movne	r0, #0
   14b54:	strdeq	r2, [r6, #8]
   14b58:	strdeq	r4, [r6]
   14b5c:	ldr	r2, [sp, #108]	; 0x6c
   14b60:	ldr	r3, [r7]
   14b64:	cmp	r2, r3
   14b68:	bne	14b74 <close_stdout@@Base+0x1ae8>
   14b6c:	add	sp, sp, #116	; 0x74
   14b70:	pop	{r4, r5, r6, r7, pc}
   14b74:	bl	11474 <__stack_chk_fail@plt>
   14b78:	andeq	r8, r1, r8, ror #9
   14b7c:	andeq	r0, r0, ip, asr #2
   14b80:	muleq	r0, ip, r7
   14b84:	ldr	ip, [pc, #780]	; 14e98 <close_stdout@@Base+0x1e0c>
   14b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b8c:	mov	r5, r1
   14b90:	ldr	lr, [pc, #772]	; 14e9c <close_stdout@@Base+0x1e10>
   14b94:	sub	sp, sp, #60	; 0x3c
   14b98:	ldr	r1, [r2]
   14b9c:	add	ip, pc, ip
   14ba0:	str	r2, [sp, #12]
   14ba4:	subs	fp, r3, #0
   14ba8:	mov	r3, ip
   14bac:	ldr	r9, [sp, #96]	; 0x60
   14bb0:	str	r1, [sp, #20]
   14bb4:	ldr	lr, [ip, lr]
   14bb8:	ldrne	r2, [fp]
   14bbc:	ldr	r8, [sp, #100]	; 0x64
   14bc0:	ldr	r3, [lr]
   14bc4:	strne	r2, [sp, #16]
   14bc8:	str	lr, [sp, #8]
   14bcc:	str	r3, [sp, #52]	; 0x34
   14bd0:	mvneq	r3, #0
   14bd4:	streq	r3, [sp, #16]
   14bd8:	cmp	r9, #0
   14bdc:	movne	r3, #0
   14be0:	strne	r3, [r9]
   14be4:	cmp	r8, #0
   14be8:	movne	r3, #0
   14bec:	strne	r3, [r8]
   14bf0:	cmp	r5, #0
   14bf4:	beq	14e04 <close_stdout@@Base+0x1d78>
   14bf8:	subs	r6, r5, r0
   14bfc:	moveq	r4, r6
   14c00:	bne	14db4 <close_stdout@@Base+0x1d28>
   14c04:	ldrb	sl, [r5, #1]
   14c08:	cmp	sl, #0
   14c0c:	bne	14cb8 <close_stdout@@Base+0x1c2c>
   14c10:	cmp	r4, #0
   14c14:	mov	r6, sl
   14c18:	beq	14ccc <close_stdout@@Base+0x1c40>
   14c1c:	ldrb	r3, [r4]
   14c20:	cmp	r3, #43	; 0x2b
   14c24:	beq	14d20 <close_stdout@@Base+0x1c94>
   14c28:	mov	r0, r4
   14c2c:	bl	113d8 <getpwnam@plt>
   14c30:	cmp	r0, #0
   14c34:	beq	14d20 <close_stdout@@Base+0x1c94>
   14c38:	rsbs	r7, r6, #1
   14c3c:	ldr	r1, [r0, #8]
   14c40:	movcc	r7, #0
   14c44:	cmp	r5, #0
   14c48:	str	r1, [sp, #20]
   14c4c:	moveq	r7, #0
   14c50:	cmp	r7, #0
   14c54:	moveq	r5, r7
   14c58:	bne	14dcc <close_stdout@@Base+0x1d40>
   14c5c:	bl	11654 <endpwent@plt>
   14c60:	cmp	sl, #0
   14c64:	beq	14cdc <close_stdout@@Base+0x1c50>
   14c68:	ldrb	r3, [r6]
   14c6c:	cmp	r3, #43	; 0x2b
   14c70:	bne	14d4c <close_stdout@@Base+0x1cc0>
   14c74:	ldr	ip, [pc, #548]	; 14ea0 <close_stdout@@Base+0x1e14>
   14c78:	mov	r0, r6
   14c7c:	mov	r1, #0
   14c80:	mov	r2, #10
   14c84:	add	ip, pc, ip
   14c88:	add	r3, sp, #24
   14c8c:	str	ip, [sp]
   14c90:	bl	15818 <close_stdout@@Base+0x278c>
   14c94:	cmp	r0, #0
   14c98:	bne	14df8 <close_stdout@@Base+0x1d6c>
   14c9c:	ldr	r3, [sp, #24]
   14ca0:	ldr	r5, [pc, #508]	; 14ea4 <close_stdout@@Base+0x1e18>
   14ca4:	cmn	r3, #1
   14ca8:	add	r5, pc, r5
   14cac:	strne	r3, [sp, #16]
   14cb0:	movne	r5, r0
   14cb4:	b	14d68 <close_stdout@@Base+0x1cdc>
   14cb8:	adds	sl, r5, #1
   14cbc:	add	r6, r5, #1
   14cc0:	movne	sl, #1
   14cc4:	cmp	r4, #0
   14cc8:	bne	14c1c <close_stdout@@Base+0x1b90>
   14ccc:	cmp	sl, #0
   14cd0:	mov	r7, r4
   14cd4:	mov	r5, r4
   14cd8:	bne	14c68 <close_stdout@@Base+0x1bdc>
   14cdc:	cmp	r5, #0
   14ce0:	beq	14d80 <close_stdout@@Base+0x1cf4>
   14ce4:	mov	r0, r4
   14ce8:	bl	11414 <free@plt>
   14cec:	mov	r0, r7
   14cf0:	bl	11414 <free@plt>
   14cf4:	mov	r1, r5
   14cf8:	mov	r2, #5
   14cfc:	mov	r0, #0
   14d00:	bl	11468 <dcgettext@plt>
   14d04:	ldr	r1, [sp, #8]
   14d08:	ldr	r2, [sp, #52]	; 0x34
   14d0c:	ldr	r3, [r1]
   14d10:	cmp	r2, r3
   14d14:	bne	14e94 <close_stdout@@Base+0x1e08>
   14d18:	add	sp, sp, #60	; 0x3c
   14d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d20:	rsbs	r7, r6, #1
   14d24:	movcc	r7, #0
   14d28:	cmp	r5, #0
   14d2c:	moveq	r7, #0
   14d30:	cmp	r7, #0
   14d34:	beq	14e38 <close_stdout@@Base+0x1dac>
   14d38:	ldr	r5, [pc, #360]	; 14ea8 <close_stdout@@Base+0x1e1c>
   14d3c:	mov	sl, #0
   14d40:	mov	r7, sl
   14d44:	add	r5, pc, r5
   14d48:	b	14c5c <close_stdout@@Base+0x1bd0>
   14d4c:	mov	r0, r6
   14d50:	bl	11720 <getgrnam@plt>
   14d54:	cmp	r0, #0
   14d58:	beq	14c74 <close_stdout@@Base+0x1be8>
   14d5c:	ldr	r0, [r0, #8]
   14d60:	mov	r5, #0
   14d64:	str	r0, [sp, #16]
   14d68:	bl	113b4 <endgrent@plt>
   14d6c:	mov	r0, r6
   14d70:	bl	15718 <close_stdout@@Base+0x268c>
   14d74:	cmp	r5, #0
   14d78:	mov	r7, r0
   14d7c:	bne	14ce4 <close_stdout@@Base+0x1c58>
   14d80:	cmp	fp, #0
   14d84:	ldr	r2, [sp, #20]
   14d88:	ldr	r3, [sp, #12]
   14d8c:	ldrne	r1, [sp, #16]
   14d90:	str	r2, [r3]
   14d94:	strne	r1, [fp]
   14d98:	cmp	r9, #0
   14d9c:	strne	r4, [r9]
   14da0:	movne	r4, #0
   14da4:	cmp	r8, #0
   14da8:	strne	r7, [r8]
   14dac:	movne	r7, #0
   14db0:	b	14ce4 <close_stdout@@Base+0x1c58>
   14db4:	add	r1, r6, #1
   14db8:	bl	156f4 <close_stdout@@Base+0x2668>
   14dbc:	mov	r3, #0
   14dc0:	mov	r4, r0
   14dc4:	strb	r3, [r0, r6]
   14dc8:	b	14c04 <close_stdout@@Base+0x1b78>
   14dcc:	ldr	r0, [r0, #12]
   14dd0:	str	r0, [sp, #16]
   14dd4:	bl	11714 <getgrgid@plt>
   14dd8:	subs	r1, r0, #0
   14ddc:	beq	14e1c <close_stdout@@Base+0x1d90>
   14de0:	ldr	r0, [r1]
   14de4:	bl	15718 <close_stdout@@Base+0x268c>
   14de8:	mov	r5, #0
   14dec:	mov	r7, r0
   14df0:	bl	113b4 <endgrent@plt>
   14df4:	b	14c5c <close_stdout@@Base+0x1bd0>
   14df8:	ldr	r5, [pc, #172]	; 14eac <close_stdout@@Base+0x1e20>
   14dfc:	add	r5, pc, r5
   14e00:	b	14d68 <close_stdout@@Base+0x1cdc>
   14e04:	ldrb	r3, [r0]
   14e08:	cmp	r3, #0
   14e0c:	moveq	r4, r5
   14e10:	bne	14e2c <close_stdout@@Base+0x1da0>
   14e14:	mov	sl, #0
   14e18:	b	14c10 <close_stdout@@Base+0x1b84>
   14e1c:	ldr	r0, [sp, #16]
   14e20:	add	r2, sp, #28
   14e24:	bl	13248 <close_stdout@@Base+0x1bc>
   14e28:	b	14de4 <close_stdout@@Base+0x1d58>
   14e2c:	bl	15718 <close_stdout@@Base+0x268c>
   14e30:	mov	r4, r0
   14e34:	b	14e14 <close_stdout@@Base+0x1d88>
   14e38:	ldr	ip, [pc, #112]	; 14eb0 <close_stdout@@Base+0x1e24>
   14e3c:	mov	r0, r4
   14e40:	mov	r1, r7
   14e44:	mov	r2, #10
   14e48:	add	ip, pc, ip
   14e4c:	add	r3, sp, #24
   14e50:	str	ip, [sp]
   14e54:	bl	15818 <close_stdout@@Base+0x278c>
   14e58:	cmp	r0, #0
   14e5c:	bne	14e88 <close_stdout@@Base+0x1dfc>
   14e60:	ldr	r3, [sp, #24]
   14e64:	ldr	r5, [pc, #72]	; 14eb4 <close_stdout@@Base+0x1e28>
   14e68:	cmn	r3, #1
   14e6c:	add	r5, pc, r5
   14e70:	movne	r7, sl
   14e74:	movne	r5, r0
   14e78:	strne	r3, [sp, #20]
   14e7c:	mov	sl, r7
   14e80:	mov	r7, #0
   14e84:	b	14c5c <close_stdout@@Base+0x1bd0>
   14e88:	ldr	r5, [pc, #40]	; 14eb8 <close_stdout@@Base+0x1e2c>
   14e8c:	add	r5, pc, r5
   14e90:	b	14e7c <close_stdout@@Base+0x1df0>
   14e94:	bl	11474 <__stack_chk_fail@plt>
   14e98:	andeq	r8, r1, ip, asr r4
   14e9c:	andeq	r0, r0, ip, asr #2
   14ea0:	andeq	r6, r0, r8, lsr #5
   14ea4:	andeq	r6, r0, r0, ror fp
   14ea8:	andeq	r6, r0, r4, asr #21
   14eac:	andeq	r6, r0, ip, lsl sl
   14eb0:	andeq	r6, r0, r4, ror #1
   14eb4:	andeq	r6, r0, ip, lsl #19
   14eb8:	andeq	r6, r0, ip, ror #18
   14ebc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14ec0:	subs	sl, r2, #0
   14ec4:	sub	sp, sp, #8
   14ec8:	mov	r7, r1
   14ecc:	mov	r9, r3
   14ed0:	mov	r5, r0
   14ed4:	ldr	r8, [sp, #40]	; 0x28
   14ed8:	beq	14f58 <close_stdout@@Base+0x1ecc>
   14edc:	mov	r1, #58	; 0x3a
   14ee0:	bl	11594 <strchr@plt>
   14ee4:	str	r9, [sp]
   14ee8:	str	r8, [sp, #4]
   14eec:	mov	r2, r7
   14ef0:	mov	r3, sl
   14ef4:	mov	r6, r0
   14ef8:	mov	r1, r0
   14efc:	mov	r0, r5
   14f00:	bl	14b84 <close_stdout@@Base+0x1af8>
   14f04:	cmp	r6, #0
   14f08:	mov	r4, r0
   14f0c:	bne	14f4c <close_stdout@@Base+0x1ec0>
   14f10:	cmp	r0, #0
   14f14:	beq	14f4c <close_stdout@@Base+0x1ec0>
   14f18:	mov	r1, #46	; 0x2e
   14f1c:	mov	r0, r5
   14f20:	bl	11594 <strchr@plt>
   14f24:	subs	r1, r0, #0
   14f28:	beq	14f4c <close_stdout@@Base+0x1ec0>
   14f2c:	str	r9, [sp]
   14f30:	mov	r0, r5
   14f34:	str	r8, [sp, #4]
   14f38:	mov	r2, r7
   14f3c:	mov	r3, sl
   14f40:	bl	14b84 <close_stdout@@Base+0x1af8>
   14f44:	cmp	r0, #0
   14f48:	moveq	r4, #0
   14f4c:	mov	r0, r4
   14f50:	add	sp, sp, #8
   14f54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f58:	str	r3, [sp]
   14f5c:	mov	r1, sl
   14f60:	str	r8, [sp, #4]
   14f64:	mov	r2, r7
   14f68:	mov	r3, sl
   14f6c:	bl	14b84 <close_stdout@@Base+0x1af8>
   14f70:	mov	r4, r0
   14f74:	mov	r0, r4
   14f78:	add	sp, sp, #8
   14f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f80:	push	{r4, r5, r6, r7, lr}
   14f84:	cmp	r1, #0
   14f88:	sub	sp, sp, #36	; 0x24
   14f8c:	ldr	r7, [pc, #896]	; 15314 <close_stdout@@Base+0x2288>
   14f90:	mov	ip, r3
   14f94:	mov	r5, r0
   14f98:	add	r7, pc, r7
   14f9c:	ldr	r4, [sp, #56]	; 0x38
   14fa0:	ldr	r6, [sp, #60]	; 0x3c
   14fa4:	beq	152e8 <close_stdout@@Base+0x225c>
   14fa8:	str	r2, [sp]
   14fac:	mov	r3, r1
   14fb0:	ldr	r2, [pc, #864]	; 15318 <close_stdout@@Base+0x228c>
   14fb4:	mov	r1, #1
   14fb8:	str	ip, [sp, #4]
   14fbc:	add	r2, pc, r2
   14fc0:	bl	11618 <__fprintf_chk@plt>
   14fc4:	ldr	r1, [pc, #848]	; 1531c <close_stdout@@Base+0x2290>
   14fc8:	mov	r2, #5
   14fcc:	mov	r0, #0
   14fd0:	add	r1, pc, r1
   14fd4:	bl	11468 <dcgettext@plt>
   14fd8:	ldr	r2, [pc, #832]	; 15320 <close_stdout@@Base+0x2294>
   14fdc:	movw	ip, #2013	; 0x7dd
   14fe0:	mov	r1, #1
   14fe4:	ldr	r2, [r7, r2]
   14fe8:	str	ip, [sp]
   14fec:	mov	r3, r0
   14ff0:	mov	r0, r5
   14ff4:	bl	11618 <__fprintf_chk@plt>
   14ff8:	ldr	r1, [pc, #804]	; 15324 <close_stdout@@Base+0x2298>
   14ffc:	mov	r0, #0
   15000:	mov	r2, #5
   15004:	add	r1, pc, r1
   15008:	bl	11468 <dcgettext@plt>
   1500c:	mov	r1, r5
   15010:	bl	113c0 <fputs_unlocked@plt>
   15014:	cmp	r6, #9
   15018:	addls	pc, pc, r6, lsl #2
   1501c:	b	15304 <close_stdout@@Base+0x2278>
   15020:	b	150b4 <close_stdout@@Base+0x2028>
   15024:	b	150b8 <close_stdout@@Base+0x202c>
   15028:	b	150e8 <close_stdout@@Base+0x205c>
   1502c:	b	1511c <close_stdout@@Base+0x2090>
   15030:	b	15158 <close_stdout@@Base+0x20cc>
   15034:	b	15198 <close_stdout@@Base+0x210c>
   15038:	b	151e0 <close_stdout@@Base+0x2154>
   1503c:	b	15230 <close_stdout@@Base+0x21a4>
   15040:	b	15288 <close_stdout@@Base+0x21fc>
   15044:	b	15048 <close_stdout@@Base+0x1fbc>
   15048:	ldr	r1, [pc, #728]	; 15328 <close_stdout@@Base+0x229c>
   1504c:	mov	r0, #0
   15050:	add	r1, pc, r1
   15054:	mov	r2, #5
   15058:	bl	11468 <dcgettext@plt>
   1505c:	ldm	r4, {r3, ip}
   15060:	mov	r1, #1
   15064:	str	ip, [sp]
   15068:	ldr	ip, [r4, #8]
   1506c:	str	ip, [sp, #4]
   15070:	ldr	ip, [r4, #12]
   15074:	str	ip, [sp, #8]
   15078:	ldr	ip, [r4, #16]
   1507c:	str	ip, [sp, #12]
   15080:	ldr	ip, [r4, #20]
   15084:	str	ip, [sp, #16]
   15088:	ldr	ip, [r4, #24]
   1508c:	str	ip, [sp, #20]
   15090:	ldr	ip, [r4, #28]
   15094:	str	ip, [sp, #24]
   15098:	ldr	ip, [r4, #32]
   1509c:	str	ip, [sp, #28]
   150a0:	mov	r2, r0
   150a4:	mov	r0, r5
   150a8:	bl	11618 <__fprintf_chk@plt>
   150ac:	add	sp, sp, #36	; 0x24
   150b0:	pop	{r4, r5, r6, r7, pc}
   150b4:	bl	116e4 <abort@plt>
   150b8:	ldr	r1, [pc, #620]	; 1532c <close_stdout@@Base+0x22a0>
   150bc:	mov	r2, #5
   150c0:	mov	r0, #0
   150c4:	add	r1, pc, r1
   150c8:	bl	11468 <dcgettext@plt>
   150cc:	ldr	r3, [r4]
   150d0:	mov	r1, #1
   150d4:	mov	r2, r0
   150d8:	mov	r0, r5
   150dc:	add	sp, sp, #36	; 0x24
   150e0:	pop	{r4, r5, r6, r7, lr}
   150e4:	b	11618 <__fprintf_chk@plt>
   150e8:	ldr	r1, [pc, #576]	; 15330 <close_stdout@@Base+0x22a4>
   150ec:	mov	r2, #5
   150f0:	mov	r0, #0
   150f4:	add	r1, pc, r1
   150f8:	bl	11468 <dcgettext@plt>
   150fc:	ldm	r4, {r3, ip}
   15100:	mov	r1, #1
   15104:	str	ip, [sp, #56]	; 0x38
   15108:	mov	r2, r0
   1510c:	mov	r0, r5
   15110:	add	sp, sp, #36	; 0x24
   15114:	pop	{r4, r5, r6, r7, lr}
   15118:	b	11618 <__fprintf_chk@plt>
   1511c:	ldr	r1, [pc, #528]	; 15334 <close_stdout@@Base+0x22a8>
   15120:	mov	r2, #5
   15124:	mov	r0, #0
   15128:	add	r1, pc, r1
   1512c:	bl	11468 <dcgettext@plt>
   15130:	ldm	r4, {r3, ip}
   15134:	mov	r1, #1
   15138:	str	ip, [sp, #56]	; 0x38
   1513c:	ldr	ip, [r4, #8]
   15140:	str	ip, [sp, #60]	; 0x3c
   15144:	mov	r2, r0
   15148:	mov	r0, r5
   1514c:	add	sp, sp, #36	; 0x24
   15150:	pop	{r4, r5, r6, r7, lr}
   15154:	b	11618 <__fprintf_chk@plt>
   15158:	ldr	r1, [pc, #472]	; 15338 <close_stdout@@Base+0x22ac>
   1515c:	mov	r2, #5
   15160:	mov	r0, #0
   15164:	add	r1, pc, r1
   15168:	bl	11468 <dcgettext@plt>
   1516c:	ldm	r4, {r3, ip}
   15170:	mov	r1, #1
   15174:	str	ip, [sp]
   15178:	ldr	ip, [r4, #8]
   1517c:	str	ip, [sp, #4]
   15180:	ldr	ip, [r4, #12]
   15184:	str	ip, [sp, #8]
   15188:	mov	r2, r0
   1518c:	mov	r0, r5
   15190:	bl	11618 <__fprintf_chk@plt>
   15194:	b	150ac <close_stdout@@Base+0x2020>
   15198:	ldr	r1, [pc, #412]	; 1533c <close_stdout@@Base+0x22b0>
   1519c:	mov	r2, #5
   151a0:	mov	r0, #0
   151a4:	add	r1, pc, r1
   151a8:	bl	11468 <dcgettext@plt>
   151ac:	ldm	r4, {r3, ip}
   151b0:	mov	r1, #1
   151b4:	str	ip, [sp]
   151b8:	ldr	ip, [r4, #8]
   151bc:	str	ip, [sp, #4]
   151c0:	ldr	ip, [r4, #12]
   151c4:	str	ip, [sp, #8]
   151c8:	ldr	ip, [r4, #16]
   151cc:	str	ip, [sp, #12]
   151d0:	mov	r2, r0
   151d4:	mov	r0, r5
   151d8:	bl	11618 <__fprintf_chk@plt>
   151dc:	b	150ac <close_stdout@@Base+0x2020>
   151e0:	ldr	r1, [pc, #344]	; 15340 <close_stdout@@Base+0x22b4>
   151e4:	mov	r2, #5
   151e8:	mov	r0, #0
   151ec:	add	r1, pc, r1
   151f0:	bl	11468 <dcgettext@plt>
   151f4:	ldm	r4, {r3, ip}
   151f8:	mov	r1, #1
   151fc:	str	ip, [sp]
   15200:	ldr	ip, [r4, #8]
   15204:	str	ip, [sp, #4]
   15208:	ldr	ip, [r4, #12]
   1520c:	str	ip, [sp, #8]
   15210:	ldr	ip, [r4, #16]
   15214:	str	ip, [sp, #12]
   15218:	ldr	ip, [r4, #20]
   1521c:	str	ip, [sp, #16]
   15220:	mov	r2, r0
   15224:	mov	r0, r5
   15228:	bl	11618 <__fprintf_chk@plt>
   1522c:	b	150ac <close_stdout@@Base+0x2020>
   15230:	ldr	r1, [pc, #268]	; 15344 <close_stdout@@Base+0x22b8>
   15234:	mov	r2, #5
   15238:	mov	r0, #0
   1523c:	add	r1, pc, r1
   15240:	bl	11468 <dcgettext@plt>
   15244:	ldm	r4, {r3, ip}
   15248:	mov	r1, #1
   1524c:	str	ip, [sp]
   15250:	ldr	ip, [r4, #8]
   15254:	str	ip, [sp, #4]
   15258:	ldr	ip, [r4, #12]
   1525c:	str	ip, [sp, #8]
   15260:	ldr	ip, [r4, #16]
   15264:	str	ip, [sp, #12]
   15268:	ldr	ip, [r4, #20]
   1526c:	str	ip, [sp, #16]
   15270:	ldr	ip, [r4, #24]
   15274:	str	ip, [sp, #20]
   15278:	mov	r2, r0
   1527c:	mov	r0, r5
   15280:	bl	11618 <__fprintf_chk@plt>
   15284:	b	150ac <close_stdout@@Base+0x2020>
   15288:	ldr	r1, [pc, #184]	; 15348 <close_stdout@@Base+0x22bc>
   1528c:	mov	r2, #5
   15290:	mov	r0, #0
   15294:	add	r1, pc, r1
   15298:	bl	11468 <dcgettext@plt>
   1529c:	ldm	r4, {r3, ip}
   152a0:	mov	r1, #1
   152a4:	str	ip, [sp]
   152a8:	ldr	ip, [r4, #8]
   152ac:	str	ip, [sp, #4]
   152b0:	ldr	ip, [r4, #12]
   152b4:	str	ip, [sp, #8]
   152b8:	ldr	ip, [r4, #16]
   152bc:	str	ip, [sp, #12]
   152c0:	ldr	ip, [r4, #20]
   152c4:	str	ip, [sp, #16]
   152c8:	ldr	ip, [r4, #24]
   152cc:	str	ip, [sp, #20]
   152d0:	ldr	ip, [r4, #28]
   152d4:	str	ip, [sp, #24]
   152d8:	mov	r2, r0
   152dc:	mov	r0, r5
   152e0:	bl	11618 <__fprintf_chk@plt>
   152e4:	b	150ac <close_stdout@@Base+0x2020>
   152e8:	str	r3, [sp]
   152ec:	mov	r3, r2
   152f0:	ldr	r2, [pc, #84]	; 1534c <close_stdout@@Base+0x22c0>
   152f4:	mov	r1, #1
   152f8:	add	r2, pc, r2
   152fc:	bl	11618 <__fprintf_chk@plt>
   15300:	b	14fc4 <close_stdout@@Base+0x1f38>
   15304:	ldr	r1, [pc, #68]	; 15350 <close_stdout@@Base+0x22c4>
   15308:	mov	r0, #0
   1530c:	add	r1, pc, r1
   15310:	b	15054 <close_stdout@@Base+0x1fc8>
   15314:	andeq	r8, r1, r0, rrx
   15318:	andeq	r6, r0, ip, ror #16
   1531c:	andeq	r6, r0, ip, ror #16
   15320:	andeq	r0, r0, r8, ror r1
   15324:	andeq	r6, r0, ip, lsr r8
   15328:	andeq	r6, r0, r8, asr #19
   1532c:	andeq	r6, r0, r8, asr #16
   15330:	andeq	r6, r0, r8, lsr #16
   15334:	andeq	r6, r0, ip, lsl #16
   15338:	andeq	r6, r0, ip, ror #15
   1533c:	andeq	r6, r0, ip, asr #15
   15340:	andeq	r6, r0, r8, lsr #15
   15344:	andeq	r6, r0, r0, lsl #15
   15348:	andeq	r6, r0, r4, asr r7
   1534c:	andeq	r6, r0, ip, lsr r5
   15350:	andeq	r6, r0, r0, asr #14
   15354:	push	{r4, r5, lr}
   15358:	sub	sp, sp, #12
   1535c:	ldr	r5, [sp, #24]
   15360:	ldr	ip, [r5]
   15364:	cmp	ip, #0
   15368:	beq	15384 <close_stdout@@Base+0x22f8>
   1536c:	mov	lr, r5
   15370:	mov	ip, #0
   15374:	ldr	r4, [lr, #4]!
   15378:	add	ip, ip, #1
   1537c:	cmp	r4, #0
   15380:	bne	15374 <close_stdout@@Base+0x22e8>
   15384:	stm	sp, {r5, ip}
   15388:	bl	14f80 <close_stdout@@Base+0x1ef4>
   1538c:	add	sp, sp, #12
   15390:	pop	{r4, r5, pc}
   15394:	push	{r4, r5, r6, r7, lr}
   15398:	sub	sp, sp, #60	; 0x3c
   1539c:	ldr	r4, [pc, #100]	; 15408 <close_stdout@@Base+0x237c>
   153a0:	mov	ip, #0
   153a4:	ldr	r5, [pc, #96]	; 1540c <close_stdout@@Base+0x2380>
   153a8:	mov	lr, ip
   153ac:	add	r4, pc, r4
   153b0:	ldr	r6, [sp, #80]	; 0x50
   153b4:	ldr	r7, [r4, r5]
   153b8:	add	r5, sp, #12
   153bc:	ldr	r4, [r7]
   153c0:	str	r4, [sp, #52]	; 0x34
   153c4:	ldr	r4, [r6, ip]
   153c8:	cmp	r4, #0
   153cc:	str	r4, [r5, ip]
   153d0:	beq	153e4 <close_stdout@@Base+0x2358>
   153d4:	add	lr, lr, #1
   153d8:	add	ip, ip, #4
   153dc:	cmp	lr, #10
   153e0:	bne	153c4 <close_stdout@@Base+0x2338>
   153e4:	stm	sp, {r5, lr}
   153e8:	bl	14f80 <close_stdout@@Base+0x1ef4>
   153ec:	ldr	r2, [sp, #52]	; 0x34
   153f0:	ldr	r3, [r7]
   153f4:	cmp	r2, r3
   153f8:	bne	15404 <close_stdout@@Base+0x2378>
   153fc:	add	sp, sp, #60	; 0x3c
   15400:	pop	{r4, r5, r6, r7, pc}
   15404:	bl	11474 <__stack_chk_fail@plt>
   15408:	andeq	r7, r1, ip, asr #24
   1540c:	andeq	r0, r0, ip, asr #2
   15410:	push	{r3}		; (str r3, [sp, #-4]!)
   15414:	push	{r4, lr}
   15418:	sub	sp, sp, #20
   1541c:	ldr	lr, [pc, #72]	; 1546c <close_stdout@@Base+0x23e0>
   15420:	add	ip, sp, #32
   15424:	ldr	r4, [pc, #68]	; 15470 <close_stdout@@Base+0x23e4>
   15428:	add	lr, pc, lr
   1542c:	ldr	r3, [sp, #28]
   15430:	ldr	r4, [lr, r4]
   15434:	str	ip, [sp]
   15438:	str	ip, [sp, #8]
   1543c:	ldr	ip, [r4]
   15440:	str	ip, [sp, #12]
   15444:	bl	15394 <close_stdout@@Base+0x2308>
   15448:	ldr	r2, [sp, #12]
   1544c:	ldr	r3, [r4]
   15450:	cmp	r2, r3
   15454:	bne	15468 <close_stdout@@Base+0x23dc>
   15458:	add	sp, sp, #20
   1545c:	pop	{r4, lr}
   15460:	add	sp, sp, #4
   15464:	bx	lr
   15468:	bl	11474 <__stack_chk_fail@plt>
   1546c:	ldrdeq	r7, [r1], -r0
   15470:	andeq	r0, r0, ip, asr #2
   15474:	ldr	r1, [pc, #132]	; 15500 <close_stdout@@Base+0x2474>
   15478:	mov	r2, #5
   1547c:	push	{r4, lr}
   15480:	add	r1, pc, r1
   15484:	mov	r0, #0
   15488:	ldr	r4, [pc, #116]	; 15504 <close_stdout@@Base+0x2478>
   1548c:	bl	11468 <dcgettext@plt>
   15490:	ldr	r2, [pc, #112]	; 15508 <close_stdout@@Base+0x247c>
   15494:	add	r4, pc, r4
   15498:	add	r2, pc, r2
   1549c:	mov	r1, r0
   154a0:	mov	r0, #1
   154a4:	bl	11600 <__printf_chk@plt>
   154a8:	ldr	r1, [pc, #92]	; 1550c <close_stdout@@Base+0x2480>
   154ac:	mov	r2, #5
   154b0:	mov	r0, #0
   154b4:	add	r1, pc, r1
   154b8:	bl	11468 <dcgettext@plt>
   154bc:	ldr	r2, [pc, #76]	; 15510 <close_stdout@@Base+0x2484>
   154c0:	ldr	r3, [pc, #76]	; 15514 <close_stdout@@Base+0x2488>
   154c4:	add	r2, pc, r2
   154c8:	add	r3, pc, r3
   154cc:	mov	r1, r0
   154d0:	mov	r0, #1
   154d4:	bl	11600 <__printf_chk@plt>
   154d8:	ldr	r1, [pc, #56]	; 15518 <close_stdout@@Base+0x248c>
   154dc:	mov	r0, #0
   154e0:	mov	r2, #5
   154e4:	add	r1, pc, r1
   154e8:	bl	11468 <dcgettext@plt>
   154ec:	ldr	r3, [pc, #40]	; 1551c <close_stdout@@Base+0x2490>
   154f0:	ldr	r3, [r4, r3]
   154f4:	pop	{r4, lr}
   154f8:	ldr	r1, [r3]
   154fc:	b	113c0 <fputs_unlocked@plt>
   15500:	andeq	r6, r0, r8, lsl #12
   15504:	andeq	r7, r1, r4, ror #22
   15508:	andeq	r6, r0, r8, lsl #12
   1550c:	andeq	r6, r0, r4, lsl #12
   15510:	andeq	r5, r0, r8, ror ip
   15514:	andeq	r5, r0, r4, lsl #25
   15518:	andeq	r6, r0, r8, ror #11
   1551c:	andeq	r0, r0, r8, ror #2
   15520:	push	{r4, lr}
   15524:	mov	r4, r0
   15528:	bl	11528 <malloc@plt>
   1552c:	rsbs	r3, r0, #1
   15530:	movcc	r3, #0
   15534:	cmp	r4, #0
   15538:	moveq	r3, #0
   1553c:	cmp	r3, #0
   15540:	popeq	{r4, pc}
   15544:	bl	15734 <close_stdout@@Base+0x26a8>
   15548:	push	{r3, r4, r5, lr}
   1554c:	mov	r4, r0
   15550:	mvn	r0, #0
   15554:	mov	r5, r1
   15558:	bl	19b50 <fts_children@@Base+0x1d34>
   1555c:	cmp	r0, r4
   15560:	bcc	15570 <close_stdout@@Base+0x24e4>
   15564:	mul	r0, r4, r5
   15568:	pop	{r3, r4, r5, lr}
   1556c:	b	15520 <close_stdout@@Base+0x2494>
   15570:	bl	15734 <close_stdout@@Base+0x26a8>
   15574:	b	15520 <close_stdout@@Base+0x2494>
   15578:	rsbs	r3, r1, #1
   1557c:	push	{r4, lr}
   15580:	movcc	r3, #0
   15584:	cmp	r0, #0
   15588:	mov	r4, r1
   1558c:	moveq	r3, #0
   15590:	cmp	r3, #0
   15594:	bne	155b8 <close_stdout@@Base+0x252c>
   15598:	bl	11480 <realloc@plt>
   1559c:	rsbs	r3, r0, #1
   155a0:	movcc	r3, #0
   155a4:	cmp	r4, #0
   155a8:	moveq	r3, #0
   155ac:	cmp	r3, #0
   155b0:	popeq	{r4, pc}
   155b4:	bl	15734 <close_stdout@@Base+0x26a8>
   155b8:	bl	11414 <free@plt>
   155bc:	mov	r0, #0
   155c0:	pop	{r4, pc}
   155c4:	push	{r4, r5, r6, lr}
   155c8:	mov	r5, r1
   155cc:	mov	r6, r0
   155d0:	mov	r1, r2
   155d4:	mvn	r0, #0
   155d8:	mov	r4, r2
   155dc:	bl	19b50 <fts_children@@Base+0x1d34>
   155e0:	cmp	r0, r5
   155e4:	bcc	155f8 <close_stdout@@Base+0x256c>
   155e8:	mov	r0, r6
   155ec:	mul	r1, r5, r4
   155f0:	pop	{r4, r5, r6, lr}
   155f4:	b	15578 <close_stdout@@Base+0x24ec>
   155f8:	bl	15734 <close_stdout@@Base+0x26a8>
   155fc:	push	{r3, r4, r5, r6, r7, lr}
   15600:	subs	r7, r0, #0
   15604:	mov	r5, r1
   15608:	mov	r6, r2
   1560c:	ldr	r4, [r1]
   15610:	beq	15648 <close_stdout@@Base+0x25bc>
   15614:	movw	r0, #43690	; 0xaaaa
   15618:	mov	r1, r2
   1561c:	bfi	r0, r0, #16, #16
   15620:	bl	19b50 <fts_children@@Base+0x1d34>
   15624:	cmp	r4, r0
   15628:	addcc	r3, r4, #1
   1562c:	addcc	r4, r4, r3, lsr #1
   15630:	bcs	1566c <close_stdout@@Base+0x25e0>
   15634:	str	r4, [r5]
   15638:	mov	r0, r7
   1563c:	mul	r1, r6, r4
   15640:	pop	{r3, r4, r5, r6, r7, lr}
   15644:	b	15578 <close_stdout@@Base+0x24ec>
   15648:	cmp	r4, #0
   1564c:	bne	15634 <close_stdout@@Base+0x25a8>
   15650:	mov	r0, #64	; 0x40
   15654:	mov	r1, r2
   15658:	bl	19b50 <fts_children@@Base+0x1d34>
   1565c:	cmp	r0, #0
   15660:	movne	r4, r0
   15664:	addeq	r4, r0, #1
   15668:	b	15634 <close_stdout@@Base+0x25a8>
   1566c:	bl	15734 <close_stdout@@Base+0x26a8>
   15670:	cmp	r0, #0
   15674:	push	{r3, lr}
   15678:	ldr	r3, [r1]
   1567c:	beq	156a8 <close_stdout@@Base+0x261c>
   15680:	movw	r2, #43689	; 0xaaa9
   15684:	movt	r2, #43690	; 0xaaaa
   15688:	cmp	r3, r2
   1568c:	addls	r2, r3, #1
   15690:	addls	r3, r3, r2, lsr #1
   15694:	bhi	156c0 <close_stdout@@Base+0x2634>
   15698:	str	r3, [r1]
   1569c:	mov	r1, r3
   156a0:	pop	{r3, lr}
   156a4:	b	15578 <close_stdout@@Base+0x24ec>
   156a8:	cmp	r3, #0
   156ac:	moveq	r3, #64	; 0x40
   156b0:	str	r3, [r1]
   156b4:	mov	r1, r3
   156b8:	pop	{r3, lr}
   156bc:	b	15578 <close_stdout@@Base+0x24ec>
   156c0:	bl	15734 <close_stdout@@Base+0x26a8>
   156c4:	push	{r4, lr}
   156c8:	mov	r4, r0
   156cc:	bl	15520 <close_stdout@@Base+0x2494>
   156d0:	mov	r2, r4
   156d4:	mov	r1, #0
   156d8:	pop	{r4, lr}
   156dc:	b	115e8 <memset@plt>
   156e0:	push	{r3, lr}
   156e4:	bl	113a8 <calloc@plt>
   156e8:	cmp	r0, #0
   156ec:	popne	{r3, pc}
   156f0:	bl	15734 <close_stdout@@Base+0x26a8>
   156f4:	push	{r3, r4, r5, lr}
   156f8:	mov	r4, r1
   156fc:	mov	r5, r0
   15700:	mov	r0, r1
   15704:	bl	15520 <close_stdout@@Base+0x2494>
   15708:	mov	r1, r5
   1570c:	mov	r2, r4
   15710:	pop	{r3, r4, r5, lr}
   15714:	b	11438 <memcpy@plt>
   15718:	push	{r4, lr}
   1571c:	mov	r4, r0
   15720:	bl	11588 <strlen@plt>
   15724:	add	r1, r0, #1
   15728:	mov	r0, r4
   1572c:	pop	{r4, lr}
   15730:	b	156f4 <close_stdout@@Base+0x2668>
   15734:	ldr	r3, [pc, #64]	; 1577c <close_stdout@@Base+0x26f0>
   15738:	mov	r2, #5
   1573c:	ldr	ip, [pc, #60]	; 15780 <close_stdout@@Base+0x26f4>
   15740:	mov	r0, #0
   15744:	add	r3, pc, r3
   15748:	ldr	r1, [pc, #52]	; 15784 <close_stdout@@Base+0x26f8>
   1574c:	push	{r4, lr}
   15750:	add	r1, pc, r1
   15754:	ldr	r3, [r3, ip]
   15758:	ldr	r4, [r3]
   1575c:	bl	11468 <dcgettext@plt>
   15760:	ldr	r2, [pc, #32]	; 15788 <close_stdout@@Base+0x26fc>
   15764:	mov	r1, #0
   15768:	add	r2, pc, r2
   1576c:	mov	r3, r0
   15770:	mov	r0, r4
   15774:	bl	11504 <error@plt>
   15778:	bl	116e4 <abort@plt>
   1577c:			; <UNDEFINED> instruction: 0x000178b4
   15780:	andeq	r0, r0, ip, ror #2
   15784:	andeq	r6, r0, ip, ror #7
   15788:			; <UNDEFINED> instruction: 0x00005ab4
   1578c:	push	{r3, lr}
   15790:	orr	r1, r1, #512	; 0x200
   15794:	bl	1707c <fts_open@@Base>
   15798:	cmp	r0, #0
   1579c:	popne	{r3, pc}
   157a0:	bl	115d0 <__errno_location@plt>
   157a4:	ldr	r3, [r0]
   157a8:	cmp	r3, #22
   157ac:	beq	157b4 <close_stdout@@Base+0x2728>
   157b0:	bl	15734 <close_stdout@@Base+0x26a8>
   157b4:	ldr	r0, [pc, #24]	; 157d4 <close_stdout@@Base+0x2748>
   157b8:	mov	r2, #41	; 0x29
   157bc:	ldr	r1, [pc, #20]	; 157d8 <close_stdout@@Base+0x274c>
   157c0:	ldr	r3, [pc, #20]	; 157dc <close_stdout@@Base+0x2750>
   157c4:	add	r0, pc, r0
   157c8:	add	r1, pc, r1
   157cc:	add	r3, pc, r3
   157d0:	bl	1172c <__assert_fail@plt>
   157d4:	muleq	r0, r8, r3
   157d8:			; <UNDEFINED> instruction: 0x000063b4
   157dc:	andeq	r6, r0, r4, lsl #7
   157e0:	ldr	r3, [r0, #48]	; 0x30
   157e4:	and	r3, r3, #17
   157e8:	cmp	r3, #16
   157ec:	beq	15810 <close_stdout@@Base+0x2784>
   157f0:	cmp	r3, #17
   157f4:	beq	15800 <close_stdout@@Base+0x2774>
   157f8:	mov	r0, #0
   157fc:	bx	lr
   15800:	ldr	r0, [r1, #48]	; 0x30
   15804:	adds	r0, r0, #0
   15808:	movne	r0, #1
   1580c:	bx	lr
   15810:	mov	r0, #1
   15814:	bx	lr
   15818:	ldr	ip, [pc, #1308]	; 15d3c <close_stdout@@Base+0x2cb0>
   1581c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15820:	mov	sl, r2
   15824:	ldr	r2, [pc, #1300]	; 15d40 <close_stdout@@Base+0x2cb4>
   15828:	add	ip, pc, ip
   1582c:	mov	r9, r3
   15830:	sub	sp, sp, #20
   15834:	mov	r3, ip
   15838:	cmp	sl, #36	; 0x24
   1583c:	ldr	r6, [ip, r2]
   15840:	mov	r5, r0
   15844:	mov	r7, r1
   15848:	ldr	r8, [sp, #56]	; 0x38
   1584c:	ldr	r3, [r6]
   15850:	str	r3, [sp, #12]
   15854:	bhi	15d1c <close_stdout@@Base+0x2c90>
   15858:	cmp	r1, #0
   1585c:	addeq	r7, sp, #8
   15860:	bl	11564 <__ctype_b_loc@plt>
   15864:	ldrb	ip, [r5]
   15868:	mov	r2, r5
   1586c:	ldr	r1, [r0]
   15870:	b	15878 <close_stdout@@Base+0x27ec>
   15874:	ldrb	ip, [r2, #1]!
   15878:	lsl	r3, ip, #1
   1587c:	ldrh	r4, [r1, r3]
   15880:	and	r4, r4, #8192	; 0x2000
   15884:	uxth	r4, r4
   15888:	cmp	r4, #0
   1588c:	bne	15874 <close_stdout@@Base+0x27e8>
   15890:	cmp	ip, #45	; 0x2d
   15894:	bne	158b4 <close_stdout@@Base+0x2828>
   15898:	mov	r0, #4
   1589c:	ldr	r2, [sp, #12]
   158a0:	ldr	r3, [r6]
   158a4:	cmp	r2, r3
   158a8:	bne	15d18 <close_stdout@@Base+0x2c8c>
   158ac:	add	sp, sp, #20
   158b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158b4:	bl	115d0 <__errno_location@plt>
   158b8:	mov	r2, sl
   158bc:	mov	r1, r7
   158c0:	str	r4, [r0]
   158c4:	mov	fp, r0
   158c8:	mov	r0, r5
   158cc:	bl	1157c <strtoul@plt>
   158d0:	ldr	r3, [r7]
   158d4:	cmp	r3, r5
   158d8:	mov	sl, r0
   158dc:	beq	15a6c <close_stdout@@Base+0x29e0>
   158e0:	ldr	r0, [fp]
   158e4:	cmp	r0, #0
   158e8:	bne	15918 <close_stdout@@Base+0x288c>
   158ec:	mov	r4, r0
   158f0:	cmp	r8, #0
   158f4:	streq	sl, [r9]
   158f8:	moveq	r0, r4
   158fc:	beq	1589c <close_stdout@@Base+0x2810>
   15900:	ldrb	r5, [r3]
   15904:	cmp	r5, #0
   15908:	bne	15928 <close_stdout@@Base+0x289c>
   1590c:	mov	r0, r4
   15910:	str	sl, [r9]
   15914:	b	1589c <close_stdout@@Base+0x2810>
   15918:	cmp	r0, #34	; 0x22
   1591c:	moveq	r4, #1
   15920:	bne	15898 <close_stdout@@Base+0x280c>
   15924:	b	158f0 <close_stdout@@Base+0x2864>
   15928:	mov	r0, r8
   1592c:	mov	r1, r5
   15930:	str	r3, [sp, #4]
   15934:	bl	11594 <strchr@plt>
   15938:	ldr	r3, [sp, #4]
   1593c:	cmp	r0, #0
   15940:	beq	15aa4 <close_stdout@@Base+0x2a18>
   15944:	mov	r0, r8
   15948:	mov	r1, #48	; 0x30
   1594c:	str	r3, [sp, #4]
   15950:	bl	11594 <strchr@plt>
   15954:	ldr	r3, [sp, #4]
   15958:	cmp	r0, #0
   1595c:	beq	1597c <close_stdout@@Base+0x28f0>
   15960:	ldrb	r2, [r3, #1]
   15964:	cmp	r2, #68	; 0x44
   15968:	beq	15d00 <close_stdout@@Base+0x2c74>
   1596c:	cmp	r2, #105	; 0x69
   15970:	beq	15ce8 <close_stdout@@Base+0x2c5c>
   15974:	cmp	r2, #66	; 0x42
   15978:	beq	15d00 <close_stdout@@Base+0x2c74>
   1597c:	mov	r8, #1
   15980:	mov	fp, #1024	; 0x400
   15984:	sub	r5, r5, #66	; 0x42
   15988:	cmp	r5, #53	; 0x35
   1598c:	addls	pc, pc, r5, lsl #2
   15990:	b	15aa4 <close_stdout@@Base+0x2a18>
   15994:	b	15c94 <close_stdout@@Base+0x2c08>
   15998:	b	15aa4 <close_stdout@@Base+0x2a18>
   1599c:	b	15aa4 <close_stdout@@Base+0x2a18>
   159a0:	b	15c54 <close_stdout@@Base+0x2bc8>
   159a4:	b	15aa4 <close_stdout@@Base+0x2a18>
   159a8:	b	15ca8 <close_stdout@@Base+0x2c1c>
   159ac:	b	15aa4 <close_stdout@@Base+0x2a18>
   159b0:	b	15aa4 <close_stdout@@Base+0x2a18>
   159b4:	b	15aa4 <close_stdout@@Base+0x2a18>
   159b8:	b	15c34 <close_stdout@@Base+0x2ba8>
   159bc:	b	15aa4 <close_stdout@@Base+0x2a18>
   159c0:	b	15c00 <close_stdout@@Base+0x2b74>
   159c4:	b	15aa4 <close_stdout@@Base+0x2a18>
   159c8:	b	15aa4 <close_stdout@@Base+0x2a18>
   159cc:	b	15bc0 <close_stdout@@Base+0x2b34>
   159d0:	b	15aa4 <close_stdout@@Base+0x2a18>
   159d4:	b	15aa4 <close_stdout@@Base+0x2a18>
   159d8:	b	15aa4 <close_stdout@@Base+0x2a18>
   159dc:	b	15b80 <close_stdout@@Base+0x2af4>
   159e0:	b	15aa4 <close_stdout@@Base+0x2a18>
   159e4:	b	15aa4 <close_stdout@@Base+0x2a18>
   159e8:	b	15aa4 <close_stdout@@Base+0x2a18>
   159ec:	b	15aa4 <close_stdout@@Base+0x2a18>
   159f0:	b	15b40 <close_stdout@@Base+0x2ab4>
   159f4:	b	15b00 <close_stdout@@Base+0x2a74>
   159f8:	b	15aa4 <close_stdout@@Base+0x2a18>
   159fc:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a00:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a04:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a08:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a0c:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a10:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a14:	b	15aec <close_stdout@@Base+0x2a60>
   15a18:	b	15ab0 <close_stdout@@Base+0x2a24>
   15a1c:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a20:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a24:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a28:	b	15ca8 <close_stdout@@Base+0x2c1c>
   15a2c:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a30:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a34:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a38:	b	15c34 <close_stdout@@Base+0x2ba8>
   15a3c:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a40:	b	15c00 <close_stdout@@Base+0x2b74>
   15a44:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a48:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a4c:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a50:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a54:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a58:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a5c:	b	15b80 <close_stdout@@Base+0x2af4>
   15a60:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a64:	b	15aa4 <close_stdout@@Base+0x2a18>
   15a68:	b	15ad0 <close_stdout@@Base+0x2a44>
   15a6c:	cmp	r8, #0
   15a70:	beq	15898 <close_stdout@@Base+0x280c>
   15a74:	ldrb	r5, [r5]
   15a78:	cmp	r5, #0
   15a7c:	beq	15898 <close_stdout@@Base+0x280c>
   15a80:	mov	r0, r8
   15a84:	mov	r1, r5
   15a88:	str	r3, [sp, #4]
   15a8c:	bl	11594 <strchr@plt>
   15a90:	ldr	r3, [sp, #4]
   15a94:	cmp	r0, #0
   15a98:	movne	sl, #1
   15a9c:	bne	15944 <close_stdout@@Base+0x28b8>
   15aa0:	b	15898 <close_stdout@@Base+0x280c>
   15aa4:	str	sl, [r9]
   15aa8:	orr	r0, r4, #2
   15aac:	b	1589c <close_stdout@@Base+0x2810>
   15ab0:	mov	r2, #0
   15ab4:	add	r1, r3, r8
   15ab8:	str	r1, [r7]
   15abc:	ldrb	r3, [r3, r8]
   15ac0:	orr	r4, r4, r2
   15ac4:	cmp	r3, #0
   15ac8:	orrne	r4, r4, #2
   15acc:	b	1590c <close_stdout@@Base+0x2880>
   15ad0:	cmn	sl, #-2147483647	; 0x80000001
   15ad4:	lslls	sl, sl, #1
   15ad8:	movls	r2, #0
   15adc:	bls	15ab4 <close_stdout@@Base+0x2a28>
   15ae0:	mvn	sl, #0
   15ae4:	mov	r2, #1
   15ae8:	b	15ab4 <close_stdout@@Base+0x2a28>
   15aec:	cmp	sl, #8388608	; 0x800000
   15af0:	lslcc	sl, sl, #9
   15af4:	movcc	r2, #0
   15af8:	bcc	15ab4 <close_stdout@@Base+0x2a28>
   15afc:	b	15ae0 <close_stdout@@Base+0x2a54>
   15b00:	mov	r1, fp
   15b04:	mvn	r0, #0
   15b08:	str	r3, [sp, #4]
   15b0c:	bl	19b50 <fts_children@@Base+0x1d34>
   15b10:	ldr	r3, [sp, #4]
   15b14:	mov	r1, #7
   15b18:	mov	r2, #0
   15b1c:	cmp	r0, sl
   15b20:	movcs	ip, #0
   15b24:	movcc	ip, #1
   15b28:	mulcs	sl, fp, sl
   15b2c:	mvncc	sl, #0
   15b30:	subs	r1, r1, #1
   15b34:	orr	r2, r2, ip
   15b38:	bne	15b1c <close_stdout@@Base+0x2a90>
   15b3c:	b	15ab4 <close_stdout@@Base+0x2a28>
   15b40:	mov	r1, fp
   15b44:	mvn	r0, #0
   15b48:	str	r3, [sp, #4]
   15b4c:	bl	19b50 <fts_children@@Base+0x1d34>
   15b50:	ldr	r3, [sp, #4]
   15b54:	mov	r1, #8
   15b58:	mov	r2, #0
   15b5c:	cmp	r0, sl
   15b60:	movcs	ip, #0
   15b64:	movcc	ip, #1
   15b68:	mulcs	sl, fp, sl
   15b6c:	mvncc	sl, #0
   15b70:	subs	r1, r1, #1
   15b74:	orr	r2, r2, ip
   15b78:	bne	15b5c <close_stdout@@Base+0x2ad0>
   15b7c:	b	15ab4 <close_stdout@@Base+0x2a28>
   15b80:	mov	r1, fp
   15b84:	mvn	r0, #0
   15b88:	str	r3, [sp, #4]
   15b8c:	bl	19b50 <fts_children@@Base+0x1d34>
   15b90:	ldr	r3, [sp, #4]
   15b94:	mov	r1, #4
   15b98:	mov	r2, #0
   15b9c:	cmp	r0, sl
   15ba0:	movcs	ip, #0
   15ba4:	movcc	ip, #1
   15ba8:	mulcs	sl, fp, sl
   15bac:	mvncc	sl, #0
   15bb0:	subs	r1, r1, #1
   15bb4:	orr	r2, r2, ip
   15bb8:	bne	15b9c <close_stdout@@Base+0x2b10>
   15bbc:	b	15ab4 <close_stdout@@Base+0x2a28>
   15bc0:	mov	r1, fp
   15bc4:	mvn	r0, #0
   15bc8:	str	r3, [sp, #4]
   15bcc:	bl	19b50 <fts_children@@Base+0x1d34>
   15bd0:	ldr	r3, [sp, #4]
   15bd4:	mov	r1, #5
   15bd8:	mov	r2, #0
   15bdc:	cmp	r0, sl
   15be0:	movcs	ip, #0
   15be4:	movcc	ip, #1
   15be8:	mulcs	sl, fp, sl
   15bec:	mvncc	sl, #0
   15bf0:	subs	r1, r1, #1
   15bf4:	orr	r2, r2, ip
   15bf8:	bne	15bdc <close_stdout@@Base+0x2b50>
   15bfc:	b	15ab4 <close_stdout@@Base+0x2a28>
   15c00:	mvn	r0, #0
   15c04:	mov	r1, fp
   15c08:	str	r3, [sp, #4]
   15c0c:	bl	19b50 <fts_children@@Base+0x1d34>
   15c10:	ldr	r3, [sp, #4]
   15c14:	cmp	sl, r0
   15c18:	bhi	15d0c <close_stdout@@Base+0x2c80>
   15c1c:	mul	sl, sl, fp
   15c20:	cmp	r0, sl
   15c24:	bcc	15d0c <close_stdout@@Base+0x2c80>
   15c28:	mul	sl, fp, sl
   15c2c:	mov	r2, #0
   15c30:	b	15ab4 <close_stdout@@Base+0x2a28>
   15c34:	mvn	r0, #0
   15c38:	mov	r1, fp
   15c3c:	str	r3, [sp, #4]
   15c40:	bl	19b50 <fts_children@@Base+0x1d34>
   15c44:	ldr	r3, [sp, #4]
   15c48:	cmp	sl, r0
   15c4c:	bhi	15ae0 <close_stdout@@Base+0x2a54>
   15c50:	b	15c28 <close_stdout@@Base+0x2b9c>
   15c54:	mov	r1, fp
   15c58:	mvn	r0, #0
   15c5c:	str	r3, [sp, #4]
   15c60:	bl	19b50 <fts_children@@Base+0x1d34>
   15c64:	ldr	r3, [sp, #4]
   15c68:	mov	r1, #6
   15c6c:	mov	r2, #0
   15c70:	cmp	r0, sl
   15c74:	movcs	ip, #0
   15c78:	movcc	ip, #1
   15c7c:	mulcs	sl, fp, sl
   15c80:	mvncc	sl, #0
   15c84:	subs	r1, r1, #1
   15c88:	orr	r2, r2, ip
   15c8c:	bne	15c70 <close_stdout@@Base+0x2be4>
   15c90:	b	15ab4 <close_stdout@@Base+0x2a28>
   15c94:	cmp	sl, #4194304	; 0x400000
   15c98:	lslcc	sl, sl, #10
   15c9c:	movcc	r2, #0
   15ca0:	bcc	15ab4 <close_stdout@@Base+0x2a28>
   15ca4:	b	15ae0 <close_stdout@@Base+0x2a54>
   15ca8:	mov	r1, fp
   15cac:	mvn	r0, #0
   15cb0:	str	r3, [sp, #4]
   15cb4:	bl	19b50 <fts_children@@Base+0x1d34>
   15cb8:	ldr	r3, [sp, #4]
   15cbc:	mov	r1, #3
   15cc0:	mov	r2, #0
   15cc4:	cmp	r0, sl
   15cc8:	movcs	ip, #0
   15ccc:	movcc	ip, #1
   15cd0:	mulcs	sl, fp, sl
   15cd4:	mvncc	sl, #0
   15cd8:	subs	r1, r1, #1
   15cdc:	orr	r2, r2, ip
   15ce0:	bne	15cc4 <close_stdout@@Base+0x2c38>
   15ce4:	b	15ab4 <close_stdout@@Base+0x2a28>
   15ce8:	ldrb	r8, [r3, #2]
   15cec:	mov	fp, #1024	; 0x400
   15cf0:	cmp	r8, #66	; 0x42
   15cf4:	moveq	r8, #3
   15cf8:	movne	r8, #1
   15cfc:	b	15984 <close_stdout@@Base+0x28f8>
   15d00:	mov	r8, #2
   15d04:	mov	fp, #1000	; 0x3e8
   15d08:	b	15984 <close_stdout@@Base+0x28f8>
   15d0c:	mov	r2, #1
   15d10:	mvn	sl, #0
   15d14:	b	15ab4 <close_stdout@@Base+0x2a28>
   15d18:	bl	11474 <__stack_chk_fail@plt>
   15d1c:	ldr	r0, [pc, #32]	; 15d44 <close_stdout@@Base+0x2cb8>
   15d20:	mov	r2, #96	; 0x60
   15d24:	ldr	r1, [pc, #28]	; 15d48 <close_stdout@@Base+0x2cbc>
   15d28:	ldr	r3, [pc, #28]	; 15d4c <close_stdout@@Base+0x2cc0>
   15d2c:	add	r0, pc, r0
   15d30:	add	r1, pc, r1
   15d34:	add	r3, pc, r3
   15d38:	bl	1172c <__assert_fail@plt>
   15d3c:	ldrdeq	r7, [r1], -r0
   15d40:	andeq	r0, r0, ip, asr #2
   15d44:	andeq	r5, r0, r8, ror #28
   15d48:	andeq	r5, r0, ip, lsl #29
   15d4c:	andeq	r5, r0, r4, asr lr
   15d50:	push	{r4, r5}
   15d54:	mov	ip, r1
   15d58:	ldrd	r4, [r0, #8]
   15d5c:	ldrd	r2, [r1, #8]
   15d60:	cmp	r5, r3
   15d64:	cmpeq	r4, r2
   15d68:	movne	r0, #0
   15d6c:	beq	15d78 <close_stdout@@Base+0x2cec>
   15d70:	pop	{r4, r5}
   15d74:	bx	lr
   15d78:	ldrd	r0, [r0]
   15d7c:	ldrd	r2, [ip]
   15d80:	pop	{r4, r5}
   15d84:	cmp	r1, r3
   15d88:	cmpeq	r0, r2
   15d8c:	movne	r0, #0
   15d90:	moveq	r0, #1
   15d94:	bx	lr
   15d98:	push	{r3, lr}
   15d9c:	mov	r2, r1
   15da0:	mov	r3, #0
   15da4:	ldrd	r0, [r0, #8]
   15da8:	bl	19d5c <fts_children@@Base+0x1f40>
   15dac:	mov	r0, r2
   15db0:	pop	{r3, pc}
   15db4:	push	{r3, lr}
   15db8:	mov	r2, r1
   15dbc:	mov	r3, #0
   15dc0:	ldrd	r0, [r0]
   15dc4:	bl	19d5c <fts_children@@Base+0x1f40>
   15dc8:	mov	r0, r2
   15dcc:	pop	{r3, pc}
   15dd0:	ldrd	r2, [r0]
   15dd4:	ldrd	r0, [r1]
   15dd8:	cmp	r3, r1
   15ddc:	cmpeq	r2, r0
   15de0:	movne	r0, #0
   15de4:	moveq	r0, #1
   15de8:	bx	lr
   15dec:	ldr	r3, [r0]
   15df0:	ldr	r2, [r1]
   15df4:	ldrd	r0, [r3, #168]	; 0xa8
   15df8:	ldrd	r2, [r2, #168]	; 0xa8
   15dfc:	cmp	r1, r3
   15e00:	cmpeq	r0, r2
   15e04:	bcc	15e14 <close_stdout@@Base+0x2d88>
   15e08:	movls	r0, #0
   15e0c:	movhi	r0, #1
   15e10:	bx	lr
   15e14:	mvn	r0, #0
   15e18:	bx	lr
   15e1c:	push	{r3, r4, r5, r6, r7, lr}
   15e20:	mov	r7, r2
   15e24:	ldr	r2, [r0, #40]	; 0x28
   15e28:	mov	r5, r0
   15e2c:	mov	r4, r1
   15e30:	ldr	r6, [r0, #44]	; 0x2c
   15e34:	cmp	r2, r7
   15e38:	bcc	15eb4 <close_stdout@@Base+0x2e28>
   15e3c:	ldr	ip, [r0, #8]
   15e40:	cmp	r4, #0
   15e44:	beq	15f04 <close_stdout@@Base+0x2e78>
   15e48:	str	r4, [ip], #4
   15e4c:	ldr	r4, [r4, #8]
   15e50:	cmp	r4, #0
   15e54:	bne	15e48 <close_stdout@@Base+0x2dbc>
   15e58:	ldr	r0, [r5, #8]
   15e5c:	mov	r3, r6
   15e60:	mov	r2, #4
   15e64:	mov	r1, r7
   15e68:	bl	116a8 <qsort@plt>
   15e6c:	ldr	r2, [r5, #8]
   15e70:	subs	r3, r7, #1
   15e74:	ldr	r4, [r2]
   15e78:	beq	15efc <close_stdout@@Base+0x2e70>
   15e7c:	add	ip, r2, #4
   15e80:	mov	r6, r4
   15e84:	b	15e8c <close_stdout@@Base+0x2e00>
   15e88:	ldr	r6, [ip, #-4]
   15e8c:	ldr	r5, [ip], #4
   15e90:	subs	r3, r3, #1
   15e94:	str	r5, [r6, #8]
   15e98:	bne	15e88 <close_stdout@@Base+0x2dfc>
   15e9c:	add	r7, r2, r7, lsl #2
   15ea0:	ldr	r2, [r7, #-4]
   15ea4:	mov	r3, #0
   15ea8:	mov	r0, r4
   15eac:	str	r3, [r2, #8]
   15eb0:	pop	{r3, r4, r5, r6, r7, pc}
   15eb4:	add	r1, r7, #40	; 0x28
   15eb8:	str	r1, [r0, #40]	; 0x28
   15ebc:	cmn	r1, #-1073741823	; 0xc0000001
   15ec0:	bhi	15ee0 <close_stdout@@Base+0x2e54>
   15ec4:	lsl	r1, r1, #2
   15ec8:	ldr	r0, [r0, #8]
   15ecc:	bl	11480 <realloc@plt>
   15ed0:	cmp	r0, #0
   15ed4:	movne	ip, r0
   15ed8:	strne	r0, [r5, #8]
   15edc:	bne	15e40 <close_stdout@@Base+0x2db4>
   15ee0:	ldr	r0, [r5, #8]
   15ee4:	bl	11414 <free@plt>
   15ee8:	mov	r3, #0
   15eec:	mov	r0, r4
   15ef0:	str	r3, [r5, #8]
   15ef4:	str	r3, [r5, #40]	; 0x28
   15ef8:	pop	{r3, r4, r5, r6, r7, pc}
   15efc:	mov	r2, r4
   15f00:	b	15ea4 <close_stdout@@Base+0x2e18>
   15f04:	mov	r0, ip
   15f08:	b	15e5c <close_stdout@@Base+0x2dd0>
   15f0c:	push	{r3, r4, r5, r6, r7, lr}
   15f10:	mov	r6, r0
   15f14:	add	r0, r2, #184	; 0xb8
   15f18:	mov	r5, r2
   15f1c:	mov	r7, r1
   15f20:	bl	11528 <malloc@plt>
   15f24:	subs	r4, r0, #0
   15f28:	beq	15f74 <close_stdout@@Base+0x2ee8>
   15f2c:	mov	r1, r7
   15f30:	mov	r2, r5
   15f34:	add	r0, r4, #176	; 0xb0
   15f38:	bl	11438 <memcpy@plt>
   15f3c:	add	r1, r4, r5
   15f40:	mov	r3, #0
   15f44:	mov	r2, #3
   15f48:	strb	r3, [r1, #176]	; 0xb0
   15f4c:	str	r5, [r4, #52]	; 0x34
   15f50:	str	r6, [r4, #44]	; 0x2c
   15f54:	ldr	r1, [r6, #24]
   15f58:	str	r3, [r4, #32]
   15f5c:	str	r3, [r4, #12]
   15f60:	str	r1, [r4, #28]
   15f64:	strh	r3, [r4, #62]	; 0x3e
   15f68:	str	r3, [r4, #16]
   15f6c:	str	r3, [r4, #20]
   15f70:	strh	r2, [r4, #64]	; 0x40
   15f74:	mov	r0, r4
   15f78:	pop	{r3, r4, r5, r6, r7, pc}
   15f7c:	push	{r3, r4, r5, lr}
   15f80:	subs	r4, r0, #0
   15f84:	popeq	{r3, r4, r5, pc}
   15f88:	ldr	r0, [r4, #12]
   15f8c:	ldr	r5, [r4, #8]
   15f90:	cmp	r0, #0
   15f94:	beq	15f9c <close_stdout@@Base+0x2f10>
   15f98:	bl	11708 <closedir@plt>
   15f9c:	mov	r0, r4
   15fa0:	mov	r4, r5
   15fa4:	bl	11414 <free@plt>
   15fa8:	cmp	r5, #0
   15fac:	bne	15f88 <close_stdout@@Base+0x2efc>
   15fb0:	pop	{r3, r4, r5, pc}
   15fb4:	push	{r4, lr}
   15fb8:	mov	r4, r0
   15fbc:	b	15fcc <close_stdout@@Base+0x2f40>
   15fc0:	bl	19318 <fts_children@@Base+0x14fc>
   15fc4:	cmp	r0, #0
   15fc8:	bge	15fe4 <close_stdout@@Base+0x2f58>
   15fcc:	mov	r0, r4
   15fd0:	bl	192cc <fts_children@@Base+0x14b0>
   15fd4:	cmp	r0, #0
   15fd8:	mov	r0, r4
   15fdc:	beq	15fc0 <close_stdout@@Base+0x2f34>
   15fe0:	pop	{r4, pc}
   15fe4:	bl	116f0 <close@plt>
   15fe8:	b	15fcc <close_stdout@@Base+0x2f40>
   15fec:	push	{r3, r4, r5, lr}
   15ff0:	mov	r5, r1
   15ff4:	ldr	r1, [r0, #32]
   15ff8:	mov	r4, r0
   15ffc:	subs	r0, r1, r5
   16000:	rsbs	r3, r0, #0
   16004:	adcs	r3, r3, r0
   16008:	cmn	r1, #100	; 0x64
   1600c:	moveq	r3, #0
   16010:	cmp	r3, #0
   16014:	bne	1605c <close_stdout@@Base+0x2fd0>
   16018:	cmp	r2, #0
   1601c:	bne	16044 <close_stdout@@Base+0x2fb8>
   16020:	ldr	r3, [r4, #48]	; 0x30
   16024:	tst	r3, #4
   16028:	bne	1603c <close_stdout@@Base+0x2fb0>
   1602c:	cmp	r1, #0
   16030:	blt	1603c <close_stdout@@Base+0x2fb0>
   16034:	mov	r0, r1
   16038:	bl	116f0 <close@plt>
   1603c:	str	r5, [r4, #32]
   16040:	pop	{r3, r4, r5, pc}
   16044:	add	r0, r4, #60	; 0x3c
   16048:	bl	192d4 <fts_children@@Base+0x14b8>
   1604c:	cmp	r0, #0
   16050:	bge	16038 <close_stdout@@Base+0x2fac>
   16054:	str	r5, [r4, #32]
   16058:	pop	{r3, r4, r5, pc}
   1605c:	bl	116e4 <abort@plt>
   16060:	push	{r3, r4, r5, lr}
   16064:	mov	r4, r0
   16068:	ldr	r3, [r0, #48]	; 0x30
   1606c:	ands	r5, r3, #4
   16070:	movne	r5, #0
   16074:	bne	1608c <close_stdout@@Base+0x3000>
   16078:	tst	r3, #512	; 0x200
   1607c:	beq	1609c <close_stdout@@Base+0x3010>
   16080:	mvn	r1, #99	; 0x63
   16084:	mov	r2, #1
   16088:	bl	15fec <close_stdout@@Base+0x2f60>
   1608c:	add	r0, r4, #60	; 0x3c
   16090:	bl	15fb4 <close_stdout@@Base+0x2f28>
   16094:	mov	r0, r5
   16098:	pop	{r3, r4, r5, pc}
   1609c:	ldr	r0, [r0, #28]
   160a0:	bl	1169c <fchdir@plt>
   160a4:	adds	r5, r0, #0
   160a8:	movne	r5, #1
   160ac:	b	1608c <close_stdout@@Base+0x3000>
   160b0:	push	{r4, r5, r6, r7, lr}
   160b4:	mov	r4, r2
   160b8:	ldr	r2, [r2, #48]	; 0x30
   160bc:	sub	sp, sp, #12
   160c0:	mov	r6, r1
   160c4:	add	r5, r4, #72	; 0x48
   160c8:	cmp	r2, #0
   160cc:	ldr	r2, [r1]
   160d0:	bne	160dc <close_stdout@@Base+0x3050>
   160d4:	tst	r2, #1
   160d8:	bne	160ec <close_stdout@@Base+0x3060>
   160dc:	tst	r2, #2
   160e0:	bne	160ec <close_stdout@@Base+0x3060>
   160e4:	cmp	r3, #0
   160e8:	beq	16138 <close_stdout@@Base+0x30ac>
   160ec:	mov	r0, #3
   160f0:	ldr	r1, [r4, #24]
   160f4:	mov	r2, r5
   160f8:	bl	116cc <__xstat64@plt>
   160fc:	cmp	r0, #0
   16100:	beq	1615c <close_stdout@@Base+0x30d0>
   16104:	bl	115d0 <__errno_location@plt>
   16108:	ldr	r6, [r0]
   1610c:	mov	r7, r0
   16110:	cmp	r6, #2
   16114:	beq	16200 <close_stdout@@Base+0x3174>
   16118:	str	r6, [r4, #32]
   1611c:	mov	r0, r5
   16120:	mov	r1, #0
   16124:	mov	r2, #104	; 0x68
   16128:	bl	115e8 <memset@plt>
   1612c:	mov	r0, #10
   16130:	add	sp, sp, #12
   16134:	pop	{r4, r5, r6, r7, pc}
   16138:	ldr	r2, [r4, #24]
   1613c:	mov	r1, r0
   16140:	mov	r3, #256	; 0x100
   16144:	mov	r0, #3
   16148:	str	r3, [sp]
   1614c:	mov	r3, r5
   16150:	bl	11498 <__fxstatat64@plt>
   16154:	cmp	r0, #0
   16158:	bne	1618c <close_stdout@@Base+0x3100>
   1615c:	ldr	r0, [r4, #88]	; 0x58
   16160:	and	r0, r0, #61440	; 0xf000
   16164:	cmp	r0, #16384	; 0x4000
   16168:	beq	1619c <close_stdout@@Base+0x3110>
   1616c:	cmp	r0, #40960	; 0xa000
   16170:	moveq	r0, #12
   16174:	beq	16130 <close_stdout@@Base+0x30a4>
   16178:	cmp	r0, #32768	; 0x8000
   1617c:	movne	r0, #3
   16180:	moveq	r0, #8
   16184:	add	sp, sp, #12
   16188:	pop	{r4, r5, r6, r7, pc}
   1618c:	bl	115d0 <__errno_location@plt>
   16190:	ldr	r3, [r0]
   16194:	str	r3, [r4, #32]
   16198:	b	1611c <close_stdout@@Base+0x3090>
   1619c:	ldr	r3, [r6]
   161a0:	ldrb	r1, [r4, #176]	; 0xb0
   161a4:	tst	r3, #32
   161a8:	ldr	r2, [r4, #92]	; 0x5c
   161ac:	moveq	r3, #2
   161b0:	movne	r3, #0
   161b4:	cmp	r1, #46	; 0x2e
   161b8:	rsb	r3, r3, r2
   161bc:	str	r3, [r4, #56]	; 0x38
   161c0:	beq	161cc <close_stdout@@Base+0x3140>
   161c4:	mov	r0, #1
   161c8:	b	16130 <close_stdout@@Base+0x30a4>
   161cc:	ldrb	r3, [r4, #177]	; 0xb1
   161d0:	cmp	r3, #0
   161d4:	beq	161ec <close_stdout@@Base+0x3160>
   161d8:	ldr	r3, [r4, #176]	; 0xb0
   161dc:	bic	r3, r3, #-16777216	; 0xff000000
   161e0:	bic	r3, r3, #255	; 0xff
   161e4:	cmp	r3, #11776	; 0x2e00
   161e8:	bne	161c4 <close_stdout@@Base+0x3138>
   161ec:	ldr	r0, [r4, #48]	; 0x30
   161f0:	cmp	r0, #0
   161f4:	movne	r0, #5
   161f8:	moveq	r0, #1
   161fc:	b	16130 <close_stdout@@Base+0x30a4>
   16200:	mov	r0, #3
   16204:	ldr	r1, [r4, #24]
   16208:	mov	r2, r5
   1620c:	bl	116fc <__lxstat64@plt>
   16210:	cmp	r0, #0
   16214:	streq	r0, [r7]
   16218:	moveq	r0, #13
   1621c:	beq	16130 <close_stdout@@Base+0x30a4>
   16220:	b	16118 <close_stdout@@Base+0x308c>
   16224:	push	{r3, r4, r5, lr}
   16228:	mov	r4, r0
   1622c:	ldr	r3, [r1]
   16230:	add	r0, r3, #256	; 0x100
   16234:	add	r2, r0, r2
   16238:	cmp	r3, r2
   1623c:	bhi	16268 <close_stdout@@Base+0x31dc>
   16240:	str	r2, [r1]
   16244:	mov	r1, r2
   16248:	ldr	r0, [r4]
   1624c:	bl	11480 <realloc@plt>
   16250:	subs	r5, r0, #0
   16254:	strne	r5, [r4]
   16258:	movne	r3, #1
   1625c:	beq	16290 <close_stdout@@Base+0x3204>
   16260:	mov	r0, r3
   16264:	pop	{r3, r4, r5, pc}
   16268:	ldr	r0, [r4]
   1626c:	mov	r5, #0
   16270:	bl	11414 <free@plt>
   16274:	str	r5, [r4]
   16278:	bl	115d0 <__errno_location@plt>
   1627c:	mov	r3, r5
   16280:	mov	r2, #36	; 0x24
   16284:	str	r2, [r0]
   16288:	mov	r0, r3
   1628c:	pop	{r3, r4, r5, pc}
   16290:	ldr	r0, [r4]
   16294:	bl	11414 <free@plt>
   16298:	str	r5, [r4]
   1629c:	mov	r3, r5
   162a0:	b	16260 <close_stdout@@Base+0x31d4>
   162a4:	movw	r3, #258	; 0x102
   162a8:	and	r3, r0, r3
   162ac:	cmp	r3, #0
   162b0:	ldr	ip, [pc, #116]	; 1632c <close_stdout@@Base+0x32a0>
   162b4:	push	{r4, lr}
   162b8:	add	ip, pc, ip
   162bc:	sub	sp, sp, #8
   162c0:	mov	r4, r1
   162c4:	beq	16304 <close_stdout@@Base+0x3278>
   162c8:	ldr	lr, [pc, #96]	; 16330 <close_stdout@@Base+0x32a4>
   162cc:	mov	r0, #31
   162d0:	ldr	r2, [pc, #92]	; 16334 <close_stdout@@Base+0x32a8>
   162d4:	mov	r1, #0
   162d8:	ldr	r3, [pc, #88]	; 16338 <close_stdout@@Base+0x32ac>
   162dc:	ldr	ip, [ip, lr]
   162e0:	add	r2, pc, r2
   162e4:	add	r3, pc, r3
   162e8:	str	ip, [sp]
   162ec:	bl	18ac4 <fts_children@@Base+0xca8>
   162f0:	str	r0, [r4]
   162f4:	adds	r0, r0, #0
   162f8:	movne	r0, #1
   162fc:	add	sp, sp, #8
   16300:	pop	{r4, pc}
   16304:	mov	r0, #32
   16308:	bl	11528 <malloc@plt>
   1630c:	cmp	r0, #0
   16310:	str	r0, [r4]
   16314:	moveq	r0, r0
   16318:	beq	162fc <close_stdout@@Base+0x3270>
   1631c:	bl	18070 <fts_children@@Base+0x254>
   16320:	mov	r0, #1
   16324:	add	sp, sp, #8
   16328:	pop	{r4, pc}
   1632c:	andeq	r6, r1, r0, asr #26
   16330:	andeq	r0, r0, r8, asr #2
   16334:			; <UNDEFINED> instruction: 0xfffffab0
   16338:			; <UNDEFINED> instruction: 0xfffffa64
   1633c:	tst	r1, #16
   16340:	push	{r4, lr}
   16344:	moveq	r3, #18688	; 0x4900
   16348:	movne	r3, #51456	; 0xc900
   1634c:	tst	r1, #2048	; 0x800
   16350:	moveq	ip, #0
   16354:	movne	ip, #262144	; 0x40000
   16358:	tst	r1, #512	; 0x200
   1635c:	orr	r3, ip, r3
   16360:	beq	16390 <close_stdout@@Base+0x3304>
   16364:	mov	r1, r2
   16368:	mov	r2, r3
   1636c:	bl	19780 <fts_children@@Base+0x1964>
   16370:	mov	r4, r0
   16374:	cmp	r4, #0
   16378:	blt	16388 <close_stdout@@Base+0x32fc>
   1637c:	mov	r0, r4
   16380:	mov	r1, #1
   16384:	bl	17f80 <fts_children@@Base+0x164>
   16388:	mov	r0, r4
   1638c:	pop	{r4, pc}
   16390:	mov	r0, r2
   16394:	mov	r1, r3
   16398:	bl	18164 <fts_children@@Base+0x348>
   1639c:	mov	r4, r0
   163a0:	b	16374 <close_stdout@@Base+0x32e8>
   163a4:	movw	r3, #258	; 0x102
   163a8:	and	r3, r0, r3
   163ac:	cmp	r3, #0
   163b0:	push	{r4, r5, r6, r7, r8, lr}
   163b4:	mov	r8, r1
   163b8:	mov	r6, r2
   163bc:	beq	16424 <close_stdout@@Base+0x3398>
   163c0:	mov	r0, #24
   163c4:	bl	11528 <malloc@plt>
   163c8:	subs	r7, r0, #0
   163cc:	beq	16450 <close_stdout@@Base+0x33c4>
   163d0:	ldrd	r4, [r6, #72]	; 0x48
   163d4:	mov	r1, r7
   163d8:	strd	r4, [r7]
   163dc:	ldrd	r4, [r6, #168]	; 0xa8
   163e0:	str	r6, [r7, #16]
   163e4:	strd	r4, [r7, #8]
   163e8:	ldr	r0, [r8]
   163ec:	bl	190ec <fts_children@@Base+0x12d0>
   163f0:	cmp	r7, r0
   163f4:	mov	r4, r0
   163f8:	beq	16448 <close_stdout@@Base+0x33bc>
   163fc:	mov	r0, r7
   16400:	bl	11414 <free@plt>
   16404:	cmp	r4, #0
   16408:	beq	16450 <close_stdout@@Base+0x33c4>
   1640c:	ldr	r3, [r4, #16]
   16410:	mov	r2, #2
   16414:	mov	r0, #1
   16418:	strh	r2, [r6, #60]	; 0x3c
   1641c:	str	r3, [r6]
   16420:	pop	{r4, r5, r6, r7, r8, pc}
   16424:	ldr	r0, [r1]
   16428:	add	r1, r2, #72	; 0x48
   1642c:	bl	1808c <fts_children@@Base+0x270>
   16430:	cmp	r0, #0
   16434:	beq	16448 <close_stdout@@Base+0x33bc>
   16438:	mov	r3, #2
   1643c:	str	r6, [r6]
   16440:	strh	r3, [r6, #60]	; 0x3c
   16444:	pop	{r4, r5, r6, r7, r8, pc}
   16448:	mov	r0, #1
   1644c:	pop	{r4, r5, r6, r7, r8, pc}
   16450:	mov	r0, #0
   16454:	pop	{r4, r5, r6, r7, r8, pc}
   16458:	ldr	ip, [pc, #568]	; 16698 <close_stdout@@Base+0x360c>
   1645c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16460:	mov	sl, r0
   16464:	ldr	r0, [pc, #560]	; 1669c <close_stdout@@Base+0x3610>
   16468:	add	ip, pc, ip
   1646c:	sub	sp, sp, #124	; 0x7c
   16470:	mov	r9, r3
   16474:	mov	r3, ip
   16478:	mov	r5, r1
   1647c:	ldr	r0, [ip, r0]
   16480:	mov	fp, r2
   16484:	ldr	r4, [sp, #160]	; 0xa0
   16488:	ldr	r3, [r0]
   1648c:	cmp	r4, #0
   16490:	str	r0, [sp]
   16494:	moveq	r7, r4
   16498:	str	r3, [sp, #116]	; 0x74
   1649c:	beq	164b0 <close_stdout@@Base+0x3424>
   164a0:	ldrb	r3, [r4]
   164a4:	cmp	r3, #46	; 0x2e
   164a8:	beq	16588 <close_stdout@@Base+0x34fc>
   164ac:	mov	r7, #0
   164b0:	ldr	r6, [sl, #48]	; 0x30
   164b4:	ands	r8, r6, #4
   164b8:	beq	164fc <close_stdout@@Base+0x3470>
   164bc:	ands	r8, r6, #512	; 0x200
   164c0:	beq	164dc <close_stdout@@Base+0x3450>
   164c4:	cmp	r9, #0
   164c8:	movlt	r8, #0
   164cc:	blt	164dc <close_stdout@@Base+0x3450>
   164d0:	mov	r0, r9
   164d4:	mov	r8, #0
   164d8:	bl	116f0 <close@plt>
   164dc:	ldr	r1, [sp]
   164e0:	mov	r0, r8
   164e4:	ldr	r2, [sp, #116]	; 0x74
   164e8:	ldr	r3, [r1]
   164ec:	cmp	r2, r3
   164f0:	bne	1668c <close_stdout@@Base+0x3600>
   164f4:	add	sp, sp, #124	; 0x7c
   164f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164fc:	lsr	r2, r9, #31
   16500:	tst	r7, r2
   16504:	bne	165a4 <close_stdout@@Base+0x3518>
   16508:	cmp	r2, #0
   1650c:	streq	r9, [sp, #4]
   16510:	bne	16690 <close_stdout@@Base+0x3604>
   16514:	tst	r6, #2
   16518:	bne	16548 <close_stdout@@Base+0x34bc>
   1651c:	cmp	r4, #0
   16520:	beq	165ec <close_stdout@@Base+0x3560>
   16524:	ldrb	r2, [r4]
   16528:	cmp	r2, #46	; 0x2e
   1652c:	bne	165ec <close_stdout@@Base+0x3560>
   16530:	ldrb	r2, [r4, #1]
   16534:	cmp	r2, #46	; 0x2e
   16538:	bne	165ec <close_stdout@@Base+0x3560>
   1653c:	ldrb	r2, [r4, #2]
   16540:	cmp	r2, #0
   16544:	bne	165ec <close_stdout@@Base+0x3560>
   16548:	mov	r0, #3
   1654c:	ldr	r1, [sp, #4]
   16550:	add	r2, sp, #8
   16554:	bl	114b0 <__fxstat64@plt>
   16558:	cmp	r0, #0
   1655c:	beq	16604 <close_stdout@@Base+0x3578>
   16560:	mvn	r8, #0
   16564:	cmp	r9, #0
   16568:	bge	164dc <close_stdout@@Base+0x3450>
   1656c:	bl	115d0 <__errno_location@plt>
   16570:	ldr	r5, [r0]
   16574:	mov	r4, r0
   16578:	ldr	r0, [sp, #4]
   1657c:	bl	116f0 <close@plt>
   16580:	str	r5, [r4]
   16584:	b	164dc <close_stdout@@Base+0x3450>
   16588:	ldrb	r3, [r4, #1]
   1658c:	cmp	r3, #46	; 0x2e
   16590:	bne	164ac <close_stdout@@Base+0x3420>
   16594:	ldrb	r3, [r4, #2]
   16598:	rsbs	r7, r3, #1
   1659c:	movcc	r7, #0
   165a0:	b	164b0 <close_stdout@@Base+0x3424>
   165a4:	tst	r6, #512	; 0x200
   165a8:	bne	16628 <close_stdout@@Base+0x359c>
   165ac:	mov	r1, r6
   165b0:	mov	r7, #1
   165b4:	ldr	r0, [sl, #32]
   165b8:	mov	r2, r4
   165bc:	bl	1633c <close_stdout@@Base+0x32b0>
   165c0:	cmp	r0, #0
   165c4:	str	r0, [sp, #4]
   165c8:	blt	16684 <close_stdout@@Base+0x35f8>
   165cc:	ldr	r6, [sl, #48]	; 0x30
   165d0:	b	16514 <close_stdout@@Base+0x3488>
   165d4:	ldrd	r4, [fp]
   165d8:	ldrd	r0, [sp, #104]	; 0x68
   165dc:	cmp	r5, r1
   165e0:	cmpeq	r4, r0
   165e4:	bne	16618 <close_stdout@@Base+0x358c>
   165e8:	ldr	r6, [sl, #48]	; 0x30
   165ec:	tst	r6, #512	; 0x200
   165f0:	bne	1666c <close_stdout@@Base+0x35e0>
   165f4:	ldr	r0, [sp, #4]
   165f8:	bl	1169c <fchdir@plt>
   165fc:	mov	r8, r0
   16600:	b	16564 <close_stdout@@Base+0x34d8>
   16604:	ldrd	r2, [r5]
   16608:	ldrd	r4, [sp, #8]
   1660c:	cmp	r3, r5
   16610:	cmpeq	r2, r4
   16614:	beq	165d4 <close_stdout@@Base+0x3548>
   16618:	bl	115d0 <__errno_location@plt>
   1661c:	mov	r3, #2
   16620:	str	r3, [r0]
   16624:	b	16560 <close_stdout@@Base+0x34d4>
   16628:	add	r7, sl, #60	; 0x3c
   1662c:	mov	r0, r7
   16630:	bl	192cc <fts_children@@Base+0x14b0>
   16634:	cmp	r0, #0
   16638:	bne	165ac <close_stdout@@Base+0x3520>
   1663c:	mov	r0, r7
   16640:	bl	19318 <fts_children@@Base+0x14fc>
   16644:	cmp	r0, #0
   16648:	str	r0, [sp, #4]
   1664c:	ldrlt	r1, [sl, #48]	; 0x30
   16650:	blt	165b0 <close_stdout@@Base+0x3524>
   16654:	ldr	r6, [sl, #48]	; 0x30
   16658:	mov	r7, #1
   1665c:	ldr	r9, [sp, #4]
   16660:	tst	r6, #2
   16664:	beq	165ec <close_stdout@@Base+0x3560>
   16668:	b	16548 <close_stdout@@Base+0x34bc>
   1666c:	eor	r2, r7, #1
   16670:	mov	r0, sl
   16674:	ldr	r1, [sp, #4]
   16678:	uxtb	r2, r2
   1667c:	bl	15fec <close_stdout@@Base+0x2f60>
   16680:	b	164dc <close_stdout@@Base+0x3450>
   16684:	mvn	r8, #0
   16688:	b	164dc <close_stdout@@Base+0x3450>
   1668c:	bl	11474 <__stack_chk_fail@plt>
   16690:	mov	r1, r6
   16694:	b	165b4 <close_stdout@@Base+0x3528>
   16698:	muleq	r1, r0, fp
   1669c:	andeq	r0, r0, ip, asr #2
   166a0:	push	{r4, r5, r6, r7, lr}
   166a4:	movw	r3, #258	; 0x102
   166a8:	ldr	r5, [pc, #216]	; 16788 <close_stdout@@Base+0x36fc>
   166ac:	and	r3, r0, r3
   166b0:	ldr	r4, [pc, #212]	; 1678c <close_stdout@@Base+0x3700>
   166b4:	cmp	r3, #0
   166b8:	add	r5, pc, r5
   166bc:	sub	sp, sp, #36	; 0x24
   166c0:	mov	ip, r1
   166c4:	ldr	r6, [r5, r4]
   166c8:	mov	r3, r5
   166cc:	ldr	r3, [r6]
   166d0:	str	r3, [sp, #28]
   166d4:	bne	1672c <close_stdout@@Base+0x36a0>
   166d8:	ldr	r3, [r2, #4]
   166dc:	cmp	r3, #0
   166e0:	beq	16714 <close_stdout@@Base+0x3688>
   166e4:	ldr	r1, [r3, #48]	; 0x30
   166e8:	cmp	r1, #0
   166ec:	blt	16714 <close_stdout@@Base+0x3688>
   166f0:	ldr	r7, [ip]
   166f4:	ldrd	r0, [r7, #16]
   166f8:	orrs	r4, r0, r1
   166fc:	beq	16784 <close_stdout@@Base+0x36f8>
   16700:	ldrd	r4, [r7]
   16704:	ldrd	r0, [r2, #168]	; 0xa8
   16708:	cmp	r5, r1
   1670c:	cmpeq	r4, r0
   16710:	beq	16758 <close_stdout@@Base+0x36cc>
   16714:	ldr	r2, [sp, #28]
   16718:	ldr	r3, [r6]
   1671c:	cmp	r2, r3
   16720:	bne	16780 <close_stdout@@Base+0x36f4>
   16724:	add	sp, sp, #36	; 0x24
   16728:	pop	{r4, r5, r6, r7, pc}
   1672c:	ldrd	r4, [r2, #72]	; 0x48
   16730:	mov	r1, sp
   16734:	ldrd	r2, [r2, #168]	; 0xa8
   16738:	ldr	r0, [ip]
   1673c:	strd	r4, [sp]
   16740:	strd	r2, [sp, #8]
   16744:	bl	19160 <fts_children@@Base+0x1344>
   16748:	cmp	r0, #0
   1674c:	beq	16784 <close_stdout@@Base+0x36f8>
   16750:	bl	11414 <free@plt>
   16754:	b	16714 <close_stdout@@Base+0x3688>
   16758:	ldrd	r0, [r7, #8]
   1675c:	ldrd	r4, [r2, #72]	; 0x48
   16760:	cmp	r1, r5
   16764:	cmpeq	r0, r4
   16768:	ldrdeq	r0, [r3, #72]	; 0x48
   1676c:	strdeq	r0, [r7, #8]
   16770:	ldreq	r1, [ip]
   16774:	ldrdeq	r2, [r3, #168]	; 0xa8
   16778:	strdeq	r2, [r1]
   1677c:	b	16714 <close_stdout@@Base+0x3688>
   16780:	bl	11474 <__stack_chk_fail@plt>
   16784:	bl	116e4 <abort@plt>
   16788:	andeq	r6, r1, r0, asr #18
   1678c:	andeq	r0, r0, ip, asr #2
   16790:	ldr	r3, [pc, #2256]	; 17068 <close_stdout@@Base+0x3fdc>
   16794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16798:	add	r3, pc, r3
   1679c:	ldr	r2, [pc, #2248]	; 1706c <close_stdout@@Base+0x3fe0>
   167a0:	sub	sp, sp, #164	; 0xa4
   167a4:	ldr	r9, [r0]
   167a8:	mov	r5, r0
   167ac:	str	r1, [sp, #52]	; 0x34
   167b0:	ldr	r2, [r3, r2]
   167b4:	ldr	r0, [r9, #12]
   167b8:	adds	r1, r0, #0
   167bc:	ldr	r3, [r2]
   167c0:	str	r2, [sp, #48]	; 0x30
   167c4:	movne	r1, #1
   167c8:	cmp	r1, #0
   167cc:	str	r1, [sp, #44]	; 0x2c
   167d0:	str	r3, [sp, #156]	; 0x9c
   167d4:	bne	16d08 <close_stdout@@Base+0x3c7c>
   167d8:	ldr	r3, [r5, #48]	; 0x30
   167dc:	ldr	r1, [r9, #24]
   167e0:	and	r3, r3, #516	; 0x204
   167e4:	cmp	r3, #512	; 0x200
   167e8:	ldr	r3, [r5, #48]	; 0x30
   167ec:	ldreq	r0, [r5, #32]
   167f0:	mvnne	r0, #99	; 0x63
   167f4:	tst	r3, #16
   167f8:	moveq	r2, #18688	; 0x4900
   167fc:	bne	16c94 <close_stdout@@Base+0x3c08>
   16800:	tst	r3, #2048	; 0x800
   16804:	moveq	r3, #0
   16808:	movne	r3, #262144	; 0x40000
   1680c:	orr	r2, r3, r2
   16810:	bl	19780 <fts_children@@Base+0x1964>
   16814:	subs	r4, r0, #0
   16818:	blt	16f34 <close_stdout@@Base+0x3ea8>
   1681c:	mov	r1, #1
   16820:	bl	17f80 <fts_children@@Base+0x164>
   16824:	mov	r0, r4
   16828:	bl	11684 <fdopendir@plt>
   1682c:	cmp	r0, #0
   16830:	beq	16f1c <close_stdout@@Base+0x3e90>
   16834:	ldrh	r3, [r9, #60]	; 0x3c
   16838:	str	r0, [r9, #12]
   1683c:	cmp	r3, #11
   16840:	beq	16f50 <close_stdout@@Base+0x3ec4>
   16844:	ldr	r0, [r5, #48]	; 0x30
   16848:	tst	r0, #256	; 0x100
   1684c:	bne	16d78 <close_stdout@@Base+0x3cec>
   16850:	ldr	r2, [r5, #44]	; 0x2c
   16854:	movw	r3, #34464	; 0x86a0
   16858:	movt	r3, #1
   1685c:	cmp	r2, #0
   16860:	mvnne	r3, #0
   16864:	str	r3, [sp, #20]
   16868:	ldr	r3, [sp, #52]	; 0x34
   1686c:	cmp	r3, #2
   16870:	moveq	r6, #0
   16874:	beq	1688c <close_stdout@@Base+0x3800>
   16878:	ldr	r3, [r5, #48]	; 0x30
   1687c:	and	r3, r3, #24
   16880:	cmp	r3, #24
   16884:	mvnne	r6, #0
   16888:	beq	16d60 <close_stdout@@Base+0x3cd4>
   1688c:	ldr	r1, [sp, #44]	; 0x2c
   16890:	cmp	r1, #0
   16894:	movne	r1, #1
   16898:	strne	r1, [sp, #60]	; 0x3c
   1689c:	beq	16c38 <close_stdout@@Base+0x3bac>
   168a0:	ldr	r3, [r9, #40]	; 0x28
   168a4:	ldr	r2, [r9, #28]
   168a8:	str	r3, [sp, #28]
   168ac:	sub	r3, r3, #1
   168b0:	ldr	r1, [sp, #28]
   168b4:	ldrb	r2, [r2, r3]
   168b8:	cmp	r2, #47	; 0x2f
   168bc:	moveq	r1, r3
   168c0:	ands	r0, r0, #4
   168c4:	str	r1, [sp, #28]
   168c8:	ldrne	r3, [r5, #24]
   168cc:	movne	r1, #47	; 0x2f
   168d0:	ldrne	r0, [sp, #28]
   168d4:	streq	r0, [sp, #36]	; 0x24
   168d8:	addne	r2, r3, r0
   168dc:	strbne	r1, [r3, r0]
   168e0:	addne	r2, r2, #1
   168e4:	ldr	r3, [r9, #48]	; 0x30
   168e8:	add	r0, r5, #48	; 0x30
   168ec:	ldr	r1, [sp, #28]
   168f0:	add	r3, r3, #1
   168f4:	ldr	fp, [r5, #36]	; 0x24
   168f8:	str	r3, [sp, #24]
   168fc:	add	r1, r1, #1
   16900:	ldr	r3, [pc, #1896]	; 17070 <close_stdout@@Base+0x3fe4>
   16904:	rsb	fp, r1, fp
   16908:	strne	r2, [sp, #36]	; 0x24
   1690c:	mov	r2, #0
   16910:	add	r3, pc, r3
   16914:	str	r1, [sp, #12]
   16918:	str	r2, [sp, #32]
   1691c:	mov	sl, r2
   16920:	mov	r7, r2
   16924:	str	r2, [sp, #16]
   16928:	str	r3, [sp, #40]	; 0x28
   1692c:	str	r0, [sp, #56]	; 0x38
   16930:	b	16a00 <close_stdout@@Base+0x3974>
   16934:	ldr	r2, [sp, #12]
   16938:	adds	r0, r0, r2
   1693c:	bcs	16adc <close_stdout@@Base+0x3a50>
   16940:	ldr	r3, [sp, #24]
   16944:	str	r3, [r4, #48]	; 0x30
   16948:	ldr	r3, [r5]
   1694c:	str	r0, [r4, #40]	; 0x28
   16950:	str	r3, [r4, #4]
   16954:	ldrd	r2, [r8]
   16958:	strd	r2, [r4, #168]	; 0xa8
   1695c:	ldr	r3, [r5, #48]	; 0x30
   16960:	tst	r3, #4
   16964:	addeq	r3, r4, #176	; 0xb0
   16968:	streq	r3, [r4, #24]
   1696c:	bne	16b24 <close_stdout@@Base+0x3a98>
   16970:	ldr	r3, [r5, #44]	; 0x2c
   16974:	cmp	r3, #0
   16978:	beq	16988 <close_stdout@@Base+0x38fc>
   1697c:	ldr	r3, [r5, #48]	; 0x30
   16980:	ands	r3, r3, #1024	; 0x400
   16984:	beq	16b44 <close_stdout@@Base+0x3ab8>
   16988:	ldr	r3, [r5, #48]	; 0x30
   1698c:	and	r3, r3, #24
   16990:	cmp	r3, #24
   16994:	movne	r2, #0
   16998:	beq	16b7c <close_stdout@@Base+0x3af0>
   1699c:	mov	r0, #11
   169a0:	strh	r0, [r4, #60]	; 0x3c
   169a4:	ldrb	r3, [r8, #18]
   169a8:	sub	r3, r3, #1
   169ac:	cmp	r3, #11
   169b0:	ldrls	r1, [sp, #40]	; 0x28
   169b4:	movhi	r3, #0
   169b8:	ldrls	r3, [r1, r3, lsl #2]
   169bc:	cmp	r2, #0
   169c0:	moveq	r2, #2
   169c4:	movne	r2, #1
   169c8:	str	r3, [r4, #88]	; 0x58
   169cc:	mov	r3, #0
   169d0:	strd	r2, [r4, #120]	; 0x78
   169d4:	ldr	r2, [sp, #16]
   169d8:	add	r7, r7, #1
   169dc:	ldr	r0, [sp, #20]
   169e0:	mov	r3, #0
   169e4:	cmp	r2, #0
   169e8:	str	r3, [r4, #8]
   169ec:	streq	r4, [sp, #16]
   169f0:	strne	r4, [sl, #8]
   169f4:	cmp	r0, r7
   169f8:	bls	16ba4 <close_stdout@@Base+0x3b18>
   169fc:	mov	sl, r4
   16a00:	ldr	r0, [r9, #12]
   16a04:	cmp	r0, #0
   16a08:	beq	16ba4 <close_stdout@@Base+0x3b18>
   16a0c:	bl	11678 <readdir64@plt>
   16a10:	subs	r8, r0, #0
   16a14:	beq	16b90 <close_stdout@@Base+0x3b04>
   16a18:	ldr	r3, [r5, #48]	; 0x30
   16a1c:	tst	r3, #32
   16a20:	bne	16a30 <close_stdout@@Base+0x39a4>
   16a24:	ldrb	r3, [r8, #19]
   16a28:	cmp	r3, #46	; 0x2e
   16a2c:	beq	16b5c <close_stdout@@Base+0x3ad0>
   16a30:	add	r6, r8, #19
   16a34:	mov	r0, r6
   16a38:	bl	11588 <strlen@plt>
   16a3c:	mov	r1, r6
   16a40:	mov	r2, r0
   16a44:	mov	r0, r5
   16a48:	bl	15f0c <close_stdout@@Base+0x2e80>
   16a4c:	subs	r4, r0, #0
   16a50:	beq	16ed4 <close_stdout@@Base+0x3e48>
   16a54:	mov	r0, r6
   16a58:	bl	11588 <strlen@plt>
   16a5c:	cmp	fp, r0
   16a60:	bhi	16934 <close_stdout@@Base+0x38a8>
   16a64:	mov	r3, r5
   16a68:	ldr	r1, [sp, #28]
   16a6c:	ldr	fp, [r3, #24]!
   16a70:	add	r2, r1, #2
   16a74:	add	r1, r5, #36	; 0x24
   16a78:	add	r2, r2, r0
   16a7c:	mov	r0, r3
   16a80:	bl	16224 <close_stdout@@Base+0x3198>
   16a84:	cmp	r0, #0
   16a88:	beq	16ed4 <close_stdout@@Base+0x3e48>
   16a8c:	ldr	r3, [r5, #24]
   16a90:	cmp	r3, fp
   16a94:	beq	16abc <close_stdout@@Base+0x3a30>
   16a98:	ldr	r2, [r5, #48]	; 0x30
   16a9c:	tst	r2, #4
   16aa0:	ldrne	r2, [sp, #12]
   16aa4:	moveq	r0, #1
   16aa8:	streq	r0, [sp, #32]
   16aac:	addne	r3, r3, r2
   16ab0:	strne	r3, [sp, #36]	; 0x24
   16ab4:	movne	r3, #1
   16ab8:	strne	r3, [sp, #32]
   16abc:	ldr	r1, [sp, #12]
   16ac0:	mov	r0, r6
   16ac4:	ldr	fp, [r5, #36]	; 0x24
   16ac8:	rsb	fp, r1, fp
   16acc:	bl	11588 <strlen@plt>
   16ad0:	ldr	r2, [sp, #12]
   16ad4:	adds	r0, r0, r2
   16ad8:	bcc	16940 <close_stdout@@Base+0x38b4>
   16adc:	mov	r0, r4
   16ae0:	mov	r4, #0
   16ae4:	bl	11414 <free@plt>
   16ae8:	ldr	r0, [sp, #16]
   16aec:	bl	15f7c <close_stdout@@Base+0x2ef0>
   16af0:	ldr	r0, [r9, #12]
   16af4:	bl	11708 <closedir@plt>
   16af8:	str	r4, [r9, #12]
   16afc:	mov	r3, #7
   16b00:	strh	r3, [r9, #60]	; 0x3c
   16b04:	ldr	r3, [r5, #48]	; 0x30
   16b08:	orr	r3, r3, #16384	; 0x4000
   16b0c:	str	r3, [r5, #48]	; 0x30
   16b10:	bl	115d0 <__errno_location@plt>
   16b14:	mov	r2, #36	; 0x24
   16b18:	mov	r3, r4
   16b1c:	str	r2, [r0]
   16b20:	b	16d34 <close_stdout@@Base+0x3ca8>
   16b24:	ldr	r3, [r4, #28]
   16b28:	add	r1, r4, #176	; 0xb0
   16b2c:	ldr	r2, [r4, #52]	; 0x34
   16b30:	ldr	r0, [sp, #36]	; 0x24
   16b34:	str	r3, [r4, #24]
   16b38:	add	r2, r2, #1
   16b3c:	bl	11408 <memmove@plt>
   16b40:	b	16970 <close_stdout@@Base+0x38e4>
   16b44:	ldr	r0, [r5, #32]
   16b48:	mov	r2, r4
   16b4c:	ldr	r1, [sp, #56]	; 0x38
   16b50:	bl	160b0 <close_stdout@@Base+0x3024>
   16b54:	strh	r0, [r4, #60]	; 0x3c
   16b58:	b	169d4 <close_stdout@@Base+0x3948>
   16b5c:	ldrb	r3, [r8, #20]
   16b60:	cmp	r3, #0
   16b64:	beq	16b74 <close_stdout@@Base+0x3ae8>
   16b68:	ldrh	r3, [r8, #20]
   16b6c:	cmp	r3, #46	; 0x2e
   16b70:	bne	16a30 <close_stdout@@Base+0x39a4>
   16b74:	mov	r4, sl
   16b78:	b	169fc <close_stdout@@Base+0x3970>
   16b7c:	ldrb	r3, [r8, #18]
   16b80:	tst	r3, #251	; 0xfb
   16b84:	moveq	r2, #0
   16b88:	movne	r2, #1
   16b8c:	b	1699c <close_stdout@@Base+0x3910>
   16b90:	ldr	r0, [r9, #12]
   16b94:	cmp	r0, #0
   16b98:	beq	16ba4 <close_stdout@@Base+0x3b18>
   16b9c:	bl	11708 <closedir@plt>
   16ba0:	str	r8, [r9, #12]
   16ba4:	ldr	r1, [sp, #32]
   16ba8:	cmp	r1, #0
   16bac:	bne	16dc8 <close_stdout@@Base+0x3d3c>
   16bb0:	ldr	r3, [r5, #48]	; 0x30
   16bb4:	tst	r3, #4
   16bb8:	beq	16bec <close_stdout@@Base+0x3b60>
   16bbc:	ldr	r3, [r5, #36]	; 0x24
   16bc0:	ldr	r2, [sp, #12]
   16bc4:	cmp	r3, r2
   16bc8:	beq	16bd4 <close_stdout@@Base+0x3b48>
   16bcc:	cmp	r7, #0
   16bd0:	bne	16be0 <close_stdout@@Base+0x3b54>
   16bd4:	ldr	r3, [sp, #36]	; 0x24
   16bd8:	sub	r3, r3, #1
   16bdc:	str	r3, [sp, #36]	; 0x24
   16be0:	ldr	r0, [sp, #36]	; 0x24
   16be4:	mov	r3, #0
   16be8:	strb	r3, [r0]
   16bec:	ldr	r1, [sp, #44]	; 0x2c
   16bf0:	ldr	r2, [sp, #60]	; 0x3c
   16bf4:	eor	r3, r1, #1
   16bf8:	tst	r2, r3
   16bfc:	bne	16cb4 <close_stdout@@Base+0x3c28>
   16c00:	cmp	r7, #0
   16c04:	beq	16fa0 <close_stdout@@Base+0x3f14>
   16c08:	movw	r3, #10000	; 0x2710
   16c0c:	cmp	r7, r3
   16c10:	bls	16d1c <close_stdout@@Base+0x3c90>
   16c14:	ldr	r3, [r5, #44]	; 0x2c
   16c18:	cmp	r3, #0
   16c1c:	beq	16fc0 <close_stdout@@Base+0x3f34>
   16c20:	mov	r0, r5
   16c24:	ldr	r1, [sp, #16]
   16c28:	mov	r2, r7
   16c2c:	bl	15e1c <close_stdout@@Base+0x2d90>
   16c30:	mov	r3, r0
   16c34:	b	16d34 <close_stdout@@Base+0x3ca8>
   16c38:	adds	r6, r6, #0
   16c3c:	ldr	r2, [sp, #52]	; 0x34
   16c40:	movne	r6, #1
   16c44:	subs	r3, r2, #3
   16c48:	rsbs	r7, r3, #0
   16c4c:	adcs	r7, r7, r3
   16c50:	orrs	r3, r6, r7
   16c54:	beq	16d54 <close_stdout@@Base+0x3cc8>
   16c58:	tst	r0, #512	; 0x200
   16c5c:	bne	16e58 <close_stdout@@Base+0x3dcc>
   16c60:	mov	r3, #0
   16c64:	mov	r0, r5
   16c68:	str	r3, [sp]
   16c6c:	add	r1, r9, #72	; 0x48
   16c70:	add	r2, r9, #168	; 0xa8
   16c74:	mov	r3, r4
   16c78:	bl	16458 <close_stdout@@Base+0x33cc>
   16c7c:	cmp	r0, #0
   16c80:	bne	16e74 <close_stdout@@Base+0x3de8>
   16c84:	mov	r3, #1
   16c88:	ldr	r0, [r5, #48]	; 0x30
   16c8c:	str	r3, [sp, #60]	; 0x3c
   16c90:	b	168a0 <close_stdout@@Base+0x3814>
   16c94:	tst	r3, #1
   16c98:	moveq	r2, #51456	; 0xc900
   16c9c:	beq	16800 <close_stdout@@Base+0x3774>
   16ca0:	ldr	r2, [r9, #48]	; 0x30
   16ca4:	cmp	r2, #0
   16ca8:	movne	r2, #51456	; 0xc900
   16cac:	moveq	r2, #18688	; 0x4900
   16cb0:	b	16800 <close_stdout@@Base+0x3774>
   16cb4:	ldr	r3, [sp, #52]	; 0x34
   16cb8:	cmp	r3, #1
   16cbc:	cmpne	r7, #0
   16cc0:	bne	16c08 <close_stdout@@Base+0x3b7c>
   16cc4:	ldr	r3, [r9, #48]	; 0x30
   16cc8:	cmp	r3, #0
   16ccc:	bne	16f70 <close_stdout@@Base+0x3ee4>
   16cd0:	mov	r0, r5
   16cd4:	bl	16060 <close_stdout@@Base+0x2fd4>
   16cd8:	adds	r0, r0, #0
   16cdc:	movne	r0, #1
   16ce0:	cmp	r0, #0
   16ce4:	beq	16c00 <close_stdout@@Base+0x3b74>
   16ce8:	mov	r3, #7
   16cec:	strh	r3, [r9, #60]	; 0x3c
   16cf0:	ldr	r3, [r5, #48]	; 0x30
   16cf4:	ldr	r0, [sp, #16]
   16cf8:	orr	r3, r3, #16384	; 0x4000
   16cfc:	str	r3, [r5, #48]	; 0x30
   16d00:	bl	15f7c <close_stdout@@Base+0x2ef0>
   16d04:	b	16f48 <close_stdout@@Base+0x3ebc>
   16d08:	bl	11690 <dirfd@plt>
   16d0c:	subs	r4, r0, #0
   16d10:	blt	1702c <close_stdout@@Base+0x3fa0>
   16d14:	ldr	r0, [r5, #48]	; 0x30
   16d18:	b	16850 <close_stdout@@Base+0x37c4>
   16d1c:	ldr	r3, [r5, #44]	; 0x2c
   16d20:	cmp	r3, #0
   16d24:	beq	16d30 <close_stdout@@Base+0x3ca4>
   16d28:	cmp	r7, #1
   16d2c:	bhi	16c20 <close_stdout@@Base+0x3b94>
   16d30:	ldr	r3, [sp, #16]
   16d34:	ldr	r1, [sp, #48]	; 0x30
   16d38:	mov	r0, r3
   16d3c:	ldr	r2, [sp, #156]	; 0x9c
   16d40:	ldr	r3, [r1]
   16d44:	cmp	r2, r3
   16d48:	bne	17064 <close_stdout@@Base+0x3fd8>
   16d4c:	add	sp, sp, #164	; 0xa4
   16d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d54:	ldr	r2, [sp, #44]	; 0x2c
   16d58:	str	r2, [sp, #60]	; 0x3c
   16d5c:	b	168a0 <close_stdout@@Base+0x3814>
   16d60:	tst	r0, #32
   16d64:	ldr	r6, [r9, #92]	; 0x5c
   16d68:	movne	r3, #0
   16d6c:	moveq	r3, #2
   16d70:	rsb	r6, r3, r6
   16d74:	b	1688c <close_stdout@@Base+0x3800>
   16d78:	add	r6, r5, #56	; 0x38
   16d7c:	mov	r2, r9
   16d80:	mov	r1, r6
   16d84:	bl	166a0 <close_stdout@@Base+0x3614>
   16d88:	add	r1, r5, #48	; 0x30
   16d8c:	mov	r2, r9
   16d90:	mov	r3, #0
   16d94:	ldr	r0, [r5, #32]
   16d98:	bl	160b0 <close_stdout@@Base+0x3024>
   16d9c:	mov	r1, r6
   16da0:	ldr	r0, [r5, #48]	; 0x30
   16da4:	mov	r2, r9
   16da8:	bl	163a4 <close_stdout@@Base+0x3318>
   16dac:	subs	r6, r0, #0
   16db0:	bne	16d14 <close_stdout@@Base+0x3c88>
   16db4:	bl	115d0 <__errno_location@plt>
   16db8:	mov	r2, #12
   16dbc:	mov	r3, r6
   16dc0:	str	r2, [r0]
   16dc4:	b	16d34 <close_stdout@@Base+0x3ca8>
   16dc8:	ldr	r3, [r5, #4]
   16dcc:	ldr	r2, [r5, #24]
   16dd0:	cmp	r3, #0
   16dd4:	beq	16e04 <close_stdout@@Base+0x3d78>
   16dd8:	ldr	r1, [r3, #24]
   16ddc:	add	r0, r3, #176	; 0xb0
   16de0:	cmp	r1, r0
   16de4:	ldrne	r0, [r3, #28]
   16de8:	str	r2, [r3, #28]
   16dec:	rsbne	r1, r0, r1
   16df0:	addne	r1, r2, r1
   16df4:	strne	r1, [r3, #24]
   16df8:	ldr	r3, [r3, #8]
   16dfc:	cmp	r3, #0
   16e00:	bne	16dd8 <close_stdout@@Base+0x3d4c>
   16e04:	ldr	r3, [sp, #16]
   16e08:	b	16e3c <close_stdout@@Base+0x3db0>
   16e0c:	ldr	r1, [r3, #24]
   16e10:	add	r0, r3, #176	; 0xb0
   16e14:	cmp	r1, r0
   16e18:	ldrne	r0, [r3, #28]
   16e1c:	str	r2, [r3, #28]
   16e20:	rsbne	r1, r0, r1
   16e24:	addne	r1, r2, r1
   16e28:	strne	r1, [r3, #24]
   16e2c:	ldr	r1, [r3, #8]
   16e30:	cmp	r1, #0
   16e34:	ldreq	r1, [r3, #4]
   16e38:	mov	r3, r1
   16e3c:	ldr	r1, [r3, #48]	; 0x30
   16e40:	cmp	r1, #0
   16e44:	bge	16e0c <close_stdout@@Base+0x3d80>
   16e48:	ldr	r3, [r5, #48]	; 0x30
   16e4c:	tst	r3, #4
   16e50:	bne	16bbc <close_stdout@@Base+0x3b30>
   16e54:	b	16bec <close_stdout@@Base+0x3b60>
   16e58:	mov	r0, r4
   16e5c:	bl	197ec <fts_children@@Base+0x19d0>
   16e60:	subs	r4, r0, #0
   16e64:	blt	16e74 <close_stdout@@Base+0x3de8>
   16e68:	mov	r1, #1
   16e6c:	bl	17f80 <fts_children@@Base+0x164>
   16e70:	b	16c60 <close_stdout@@Base+0x3bd4>
   16e74:	tst	r6, r7
   16e78:	beq	16e88 <close_stdout@@Base+0x3dfc>
   16e7c:	bl	115d0 <__errno_location@plt>
   16e80:	ldr	r3, [r0]
   16e84:	str	r3, [r9, #32]
   16e88:	ldrh	r3, [r9, #62]	; 0x3e
   16e8c:	ldr	r0, [r9, #12]
   16e90:	orr	r3, r3, #1
   16e94:	strh	r3, [r9, #62]	; 0x3e
   16e98:	bl	11708 <closedir@plt>
   16e9c:	mov	r3, #0
   16ea0:	str	r3, [r9, #12]
   16ea4:	ldr	r3, [r5, #48]	; 0x30
   16ea8:	tst	r3, #512	; 0x200
   16eac:	beq	16ec0 <close_stdout@@Base+0x3e34>
   16eb0:	cmp	r4, #0
   16eb4:	blt	16ec0 <close_stdout@@Base+0x3e34>
   16eb8:	mov	r0, r4
   16ebc:	bl	116f0 <close@plt>
   16ec0:	mov	r3, #0
   16ec4:	str	r3, [r9, #12]
   16ec8:	str	r3, [sp, #60]	; 0x3c
   16ecc:	ldr	r0, [r5, #48]	; 0x30
   16ed0:	b	168a0 <close_stdout@@Base+0x3814>
   16ed4:	bl	115d0 <__errno_location@plt>
   16ed8:	mov	r6, r0
   16edc:	mov	r0, r4
   16ee0:	ldr	r4, [r6]
   16ee4:	bl	11414 <free@plt>
   16ee8:	ldr	r0, [sp, #16]
   16eec:	bl	15f7c <close_stdout@@Base+0x2ef0>
   16ef0:	ldr	r0, [r9, #12]
   16ef4:	bl	11708 <closedir@plt>
   16ef8:	mov	r2, #7
   16efc:	mov	r3, #0
   16f00:	strh	r2, [r9, #60]	; 0x3c
   16f04:	str	r3, [r9, #12]
   16f08:	ldr	r2, [r5, #48]	; 0x30
   16f0c:	orr	r2, r2, #16384	; 0x4000
   16f10:	str	r2, [r5, #48]	; 0x30
   16f14:	str	r4, [r6]
   16f18:	b	16d34 <close_stdout@@Base+0x3ca8>
   16f1c:	bl	115d0 <__errno_location@plt>
   16f20:	ldr	r6, [r0]
   16f24:	mov	r5, r0
   16f28:	mov	r0, r4
   16f2c:	bl	116f0 <close@plt>
   16f30:	str	r6, [r5]
   16f34:	ldr	r2, [sp, #52]	; 0x34
   16f38:	mov	r4, #0
   16f3c:	str	r4, [r9, #12]
   16f40:	cmp	r2, #3
   16f44:	beq	17048 <close_stdout@@Base+0x3fbc>
   16f48:	mov	r3, #0
   16f4c:	b	16d34 <close_stdout@@Base+0x3ca8>
   16f50:	ldr	r0, [r5, #32]
   16f54:	add	r1, r5, #48	; 0x30
   16f58:	mov	r2, r9
   16f5c:	mov	r3, #0
   16f60:	bl	160b0 <close_stdout@@Base+0x3024>
   16f64:	strh	r0, [r9, #60]	; 0x3c
   16f68:	ldr	r0, [r5, #48]	; 0x30
   16f6c:	b	16850 <close_stdout@@Base+0x37c4>
   16f70:	ldr	r2, [r9, #4]
   16f74:	mov	r0, r5
   16f78:	ldr	r1, [pc, #244]	; 17074 <close_stdout@@Base+0x3fe8>
   16f7c:	mvn	r3, #0
   16f80:	add	r1, pc, r1
   16f84:	str	r1, [sp]
   16f88:	add	r1, r2, #72	; 0x48
   16f8c:	add	r2, r2, #168	; 0xa8
   16f90:	bl	16458 <close_stdout@@Base+0x33cc>
   16f94:	adds	r0, r0, #0
   16f98:	movne	r0, #1
   16f9c:	b	16ce0 <close_stdout@@Base+0x3c54>
   16fa0:	ldr	r0, [sp, #52]	; 0x34
   16fa4:	cmp	r0, #3
   16fa8:	ldr	r0, [sp, #16]
   16fac:	moveq	r3, #6
   16fb0:	strheq	r3, [r9, #60]	; 0x3c
   16fb4:	bl	15f7c <close_stdout@@Base+0x2ef0>
   16fb8:	mov	r3, #0
   16fbc:	b	16d34 <close_stdout@@Base+0x3ca8>
   16fc0:	ldr	r3, [r5, #48]	; 0x30
   16fc4:	tst	r3, #512	; 0x200
   16fc8:	beq	16d30 <close_stdout@@Base+0x3ca4>
   16fcc:	ldr	r0, [r5, #32]
   16fd0:	add	r1, sp, #64	; 0x40
   16fd4:	bl	1139c <fstatfs64@plt>
   16fd8:	cmp	r0, #0
   16fdc:	bne	17000 <close_stdout@@Base+0x3f74>
   16fe0:	ldr	r2, [sp, #64]	; 0x40
   16fe4:	movw	r3, #26985	; 0x6969
   16fe8:	cmp	r2, r3
   16fec:	beq	16d1c <close_stdout@@Base+0x3c90>
   16ff0:	movw	r3, #6548	; 0x1994
   16ff4:	movt	r3, #258	; 0x102
   16ff8:	cmp	r2, r3
   16ffc:	beq	16d1c <close_stdout@@Base+0x3c90>
   17000:	ldr	r3, [pc, #112]	; 17078 <close_stdout@@Base+0x3fec>
   17004:	mov	r2, r7
   17008:	ldr	r1, [sp, #16]
   1700c:	mov	r0, r5
   17010:	add	r3, pc, r3
   17014:	str	r3, [r5, #44]	; 0x2c
   17018:	bl	15e1c <close_stdout@@Base+0x2d90>
   1701c:	mov	r3, #0
   17020:	str	r3, [r5, #44]	; 0x2c
   17024:	str	r0, [sp, #16]
   17028:	b	16d30 <close_stdout@@Base+0x3ca4>
   1702c:	ldr	r0, [r9, #12]
   17030:	mov	r4, #0
   17034:	bl	11708 <closedir@plt>
   17038:	ldr	r2, [sp, #52]	; 0x34
   1703c:	str	r4, [r9, #12]
   17040:	cmp	r2, #3
   17044:	bne	16f48 <close_stdout@@Base+0x3ebc>
   17048:	mov	r3, #4
   1704c:	strh	r3, [r9, #60]	; 0x3c
   17050:	bl	115d0 <__errno_location@plt>
   17054:	mov	r3, r4
   17058:	ldr	r2, [r0]
   1705c:	str	r2, [r9, #32]
   17060:	b	16d34 <close_stdout@@Base+0x3ca8>
   17064:	bl	11474 <__stack_chk_fail@plt>
   17068:	andeq	r6, r1, r0, ror #16
   1706c:	andeq	r0, r0, ip, asr #2
   17070:			; <UNDEFINED> instruction: 0x000052bc
   17074:	andeq	r4, r0, ip, ror ip
   17078:			; <UNDEFINED> instruction: 0xffffedd4

0001707c <fts_open@@Base>:
   1707c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17080:	mov	fp, r1
   17084:	bic	r1, r1, #8128	; 0x1fc0
   17088:	sub	sp, sp, #20
   1708c:	bics	r4, r1, #63	; 0x3f
   17090:	mov	r7, r0
   17094:	mov	r8, r2
   17098:	bne	173c8 <fts_open@@Base+0x34c>
   1709c:	and	r3, fp, #516	; 0x204
   170a0:	cmp	r3, #516	; 0x204
   170a4:	beq	173ec <fts_open@@Base+0x370>
   170a8:	ands	r5, fp, #18
   170ac:	beq	173b0 <fts_open@@Base+0x334>
   170b0:	mov	r0, #96	; 0x60
   170b4:	bl	11528 <malloc@plt>
   170b8:	subs	r5, r0, #0
   170bc:	beq	17300 <fts_open@@Base+0x284>
   170c0:	mov	r1, r4
   170c4:	mov	r2, #96	; 0x60
   170c8:	bl	115e8 <memset@plt>
   170cc:	tst	fp, #2
   170d0:	bicne	r3, fp, #512	; 0x200
   170d4:	streq	fp, [r5, #48]	; 0x30
   170d8:	str	r8, [r5, #44]	; 0x2c
   170dc:	orrne	r3, r3, #4
   170e0:	strne	r3, [r5, #48]	; 0x30
   170e4:	mvn	r3, #99	; 0x63
   170e8:	str	r3, [r5, #32]
   170ec:	ldr	r3, [r7]
   170f0:	cmp	r3, #0
   170f4:	beq	173e4 <fts_open@@Base+0x368>
   170f8:	mov	r6, r7
   170fc:	mov	r4, #0
   17100:	mov	r0, r3
   17104:	bl	11588 <strlen@plt>
   17108:	ldr	r3, [r6, #4]!
   1710c:	cmp	r4, r0
   17110:	movcc	r4, r0
   17114:	cmp	r3, #0
   17118:	bne	17100 <fts_open@@Base+0x84>
   1711c:	add	r2, r4, #1
   17120:	cmp	r2, #4096	; 0x1000
   17124:	movcc	r2, #4096	; 0x1000
   17128:	add	r0, r5, #24
   1712c:	add	r1, r5, #36	; 0x24
   17130:	bl	16224 <close_stdout@@Base+0x3198>
   17134:	subs	sl, r0, #0
   17138:	beq	17344 <fts_open@@Base+0x2c8>
   1713c:	ldr	r1, [r7]
   17140:	cmp	r1, #0
   17144:	beq	1735c <fts_open@@Base+0x2e0>
   17148:	ldr	r1, [pc, #696]	; 17408 <fts_open@@Base+0x38c>
   1714c:	mov	r0, r5
   17150:	mov	r2, #0
   17154:	add	r1, pc, r1
   17158:	bl	15f0c <close_stdout@@Base+0x2e80>
   1715c:	subs	r9, r0, #0
   17160:	beq	1733c <fts_open@@Base+0x2c0>
   17164:	mvn	r3, #0
   17168:	str	r3, [r9, #48]	; 0x30
   1716c:	ldr	r1, [r7]
   17170:	cmp	r8, #0
   17174:	ldrne	sl, [r5, #48]	; 0x30
   17178:	ubfxne	sl, sl, #10, #1
   1717c:	cmp	r1, #0
   17180:	beq	17400 <fts_open@@Base+0x384>
   17184:	mov	r2, #0
   17188:	and	fp, fp, #4096	; 0x1000
   1718c:	add	r3, r5, #48	; 0x30
   17190:	str	fp, [sp, #4]
   17194:	str	r2, [sp, #8]
   17198:	mov	fp, sl
   1719c:	str	r3, [sp, #12]
   171a0:	mov	r6, r2
   171a4:	mov	r4, r2
   171a8:	mov	sl, r1
   171ac:	b	171e4 <fts_open@@Base+0x168>
   171b0:	cmp	r8, #0
   171b4:	mov	r3, #11
   171b8:	mov	r2, #2
   171bc:	strh	r3, [sl, #60]	; 0x3c
   171c0:	mov	r3, #0
   171c4:	strd	r2, [sl, #120]	; 0x78
   171c8:	beq	1726c <fts_open@@Base+0x1f0>
   171cc:	str	r4, [sl, #8]
   171d0:	mov	r4, sl
   171d4:	ldr	sl, [r7, #4]!
   171d8:	add	r6, r6, #1
   171dc:	cmp	sl, #0
   171e0:	beq	17298 <fts_open@@Base+0x21c>
   171e4:	mov	r0, sl
   171e8:	bl	11588 <strlen@plt>
   171ec:	ldr	r3, [sp, #4]
   171f0:	cmp	r3, #0
   171f4:	mov	r2, r0
   171f8:	bne	17214 <fts_open@@Base+0x198>
   171fc:	cmp	r0, #2
   17200:	bls	17214 <fts_open@@Base+0x198>
   17204:	add	r3, sl, r0
   17208:	ldrb	r0, [r3, #-1]
   1720c:	cmp	r0, #47	; 0x2f
   17210:	beq	1730c <fts_open@@Base+0x290>
   17214:	mov	r1, sl
   17218:	mov	r0, r5
   1721c:	bl	15f0c <close_stdout@@Base+0x2e80>
   17220:	subs	sl, r0, #0
   17224:	beq	1732c <fts_open@@Base+0x2b0>
   17228:	cmp	r4, #0
   1722c:	moveq	r3, #0
   17230:	andne	r3, fp, #1
   17234:	mov	r2, #0
   17238:	cmp	r3, r2
   1723c:	str	r2, [sl, #48]	; 0x30
   17240:	str	r9, [sl, #4]
   17244:	add	r2, sl, #176	; 0xb0
   17248:	str	r2, [sl, #24]
   1724c:	bne	171b0 <fts_open@@Base+0x134>
   17250:	ldr	r0, [r5, #32]
   17254:	mov	r2, sl
   17258:	ldr	r1, [sp, #12]
   1725c:	bl	160b0 <close_stdout@@Base+0x3024>
   17260:	cmp	r8, #0
   17264:	strh	r0, [sl, #60]	; 0x3c
   17268:	bne	171cc <fts_open@@Base+0x150>
   1726c:	cmp	r4, #0
   17270:	str	r8, [sl, #8]
   17274:	streq	sl, [sp, #8]
   17278:	add	r6, r6, #1
   1727c:	ldrne	r3, [sp, #8]
   17280:	moveq	r4, sl
   17284:	strne	sl, [sp, #8]
   17288:	strne	sl, [r3, #8]
   1728c:	ldr	sl, [r7, #4]!
   17290:	cmp	sl, #0
   17294:	bne	171e4 <fts_open@@Base+0x168>
   17298:	cmp	r8, #0
   1729c:	cmpne	r6, #1
   172a0:	bhi	17398 <fts_open@@Base+0x31c>
   172a4:	ldr	r1, [pc, #352]	; 1740c <fts_open@@Base+0x390>
   172a8:	mov	r0, r5
   172ac:	mov	r2, #0
   172b0:	add	r1, pc, r1
   172b4:	bl	15f0c <close_stdout@@Base+0x2e80>
   172b8:	cmp	r0, #0
   172bc:	str	r0, [r5]
   172c0:	beq	1732c <fts_open@@Base+0x2b0>
   172c4:	str	r4, [r0, #8]
   172c8:	mov	r2, #9
   172cc:	ldr	r3, [r5]
   172d0:	add	r1, r5, #56	; 0x38
   172d4:	strh	r2, [r3, #60]	; 0x3c
   172d8:	ldr	r0, [r5, #48]	; 0x30
   172dc:	bl	162a4 <close_stdout@@Base+0x3218>
   172e0:	cmp	r0, #0
   172e4:	beq	1732c <fts_open@@Base+0x2b0>
   172e8:	ldr	r1, [r5, #48]	; 0x30
   172ec:	tst	r1, #516	; 0x204
   172f0:	beq	17364 <fts_open@@Base+0x2e8>
   172f4:	add	r0, r5, #60	; 0x3c
   172f8:	mvn	r1, #0
   172fc:	bl	192a0 <fts_children@@Base+0x1484>
   17300:	mov	r0, r5
   17304:	add	sp, sp, #20
   17308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1730c:	ldrb	r1, [r3, #-2]
   17310:	sub	r3, r3, #1
   17314:	cmp	r1, #47	; 0x2f
   17318:	bne	17214 <fts_open@@Base+0x198>
   1731c:	sub	r2, r2, #1
   17320:	cmp	r2, #1
   17324:	bne	1730c <fts_open@@Base+0x290>
   17328:	b	17214 <fts_open@@Base+0x198>
   1732c:	mov	r0, r4
   17330:	bl	15f7c <close_stdout@@Base+0x2ef0>
   17334:	mov	r0, r9
   17338:	bl	11414 <free@plt>
   1733c:	ldr	r0, [r5, #24]
   17340:	bl	11414 <free@plt>
   17344:	mov	r0, r5
   17348:	mov	r5, #0
   1734c:	bl	11414 <free@plt>
   17350:	mov	r0, r5
   17354:	add	sp, sp, #20
   17358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1735c:	mov	r9, r1
   17360:	b	17170 <fts_open@@Base+0xf4>
   17364:	ldr	r2, [pc, #164]	; 17410 <fts_open@@Base+0x394>
   17368:	ldr	r0, [r5, #32]
   1736c:	add	r2, pc, r2
   17370:	bl	1633c <close_stdout@@Base+0x32b0>
   17374:	mvn	r1, #0
   17378:	cmp	r0, #0
   1737c:	str	r0, [r5, #28]
   17380:	add	r0, r5, #60	; 0x3c
   17384:	ldrlt	r3, [r5, #48]	; 0x30
   17388:	orrlt	r3, r3, #4
   1738c:	strlt	r3, [r5, #48]	; 0x30
   17390:	bl	192a0 <fts_children@@Base+0x1484>
   17394:	b	17300 <fts_open@@Base+0x284>
   17398:	mov	r1, r4
   1739c:	mov	r2, r6
   173a0:	mov	r0, r5
   173a4:	bl	15e1c <close_stdout@@Base+0x2d90>
   173a8:	mov	r4, r0
   173ac:	b	172a4 <fts_open@@Base+0x228>
   173b0:	bl	115d0 <__errno_location@plt>
   173b4:	mov	r3, #22
   173b8:	str	r3, [r0]
   173bc:	mov	r0, r5
   173c0:	add	sp, sp, #20
   173c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173c8:	bl	115d0 <__errno_location@plt>
   173cc:	mov	r5, #0
   173d0:	mov	r3, #22
   173d4:	str	r3, [r0]
   173d8:	mov	r0, r5
   173dc:	add	sp, sp, #20
   173e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173e4:	mov	r2, #4096	; 0x1000
   173e8:	b	17128 <fts_open@@Base+0xac>
   173ec:	bl	115d0 <__errno_location@plt>
   173f0:	mov	r5, r4
   173f4:	mov	r3, #22
   173f8:	str	r3, [r0]
   173fc:	b	17300 <fts_open@@Base+0x284>
   17400:	mov	r4, r1
   17404:	b	172a4 <fts_open@@Base+0x228>
   17408:	ldrdeq	r3, [r0], -r8
   1740c:	andeq	r3, r0, ip, ror ip
   17410:	muleq	r0, r4, r8

00017414 <fts_close@@Base>:
   17414:	push	{r4, r5, r6, lr}
   17418:	mov	r5, r0
   1741c:	ldr	r3, [r0]
   17420:	cmp	r3, #0
   17424:	beq	17460 <fts_close@@Base+0x4c>
   17428:	ldr	r2, [r3, #48]	; 0x30
   1742c:	cmp	r2, #0
   17430:	blt	1754c <fts_close@@Base+0x138>
   17434:	ldr	r4, [r3, #8]
   17438:	mov	r0, r3
   1743c:	cmp	r4, #0
   17440:	ldreq	r4, [r3, #4]
   17444:	bl	11414 <free@plt>
   17448:	ldr	r2, [r4, #48]	; 0x30
   1744c:	mov	r3, r4
   17450:	cmp	r2, #0
   17454:	bge	17434 <fts_close@@Base+0x20>
   17458:	mov	r0, r4
   1745c:	bl	11414 <free@plt>
   17460:	ldr	r0, [r5, #4]
   17464:	cmp	r0, #0
   17468:	beq	17470 <fts_close@@Base+0x5c>
   1746c:	bl	15f7c <close_stdout@@Base+0x2ef0>
   17470:	ldr	r0, [r5, #8]
   17474:	bl	11414 <free@plt>
   17478:	ldr	r0, [r5, #24]
   1747c:	bl	11414 <free@plt>
   17480:	ldr	r3, [r5, #48]	; 0x30
   17484:	tst	r3, #512	; 0x200
   17488:	beq	17500 <fts_close@@Base+0xec>
   1748c:	ldr	r0, [r5, #32]
   17490:	cmp	r0, #0
   17494:	blt	174a4 <fts_close@@Base+0x90>
   17498:	bl	116f0 <close@plt>
   1749c:	cmp	r0, #0
   174a0:	bne	17540 <fts_close@@Base+0x12c>
   174a4:	mov	r4, #0
   174a8:	add	r0, r5, #60	; 0x3c
   174ac:	bl	15fb4 <close_stdout@@Base+0x2f28>
   174b0:	ldr	r0, [r5, #52]	; 0x34
   174b4:	cmp	r0, #0
   174b8:	beq	174c0 <fts_close@@Base+0xac>
   174bc:	bl	18ca8 <fts_children@@Base+0xe8c>
   174c0:	ldr	r2, [r5, #48]	; 0x30
   174c4:	movw	r3, #258	; 0x102
   174c8:	ldr	r0, [r5, #56]	; 0x38
   174cc:	and	r3, r2, r3
   174d0:	cmp	r3, #0
   174d4:	beq	17538 <fts_close@@Base+0x124>
   174d8:	cmp	r0, #0
   174dc:	beq	174e4 <fts_close@@Base+0xd0>
   174e0:	bl	18ca8 <fts_children@@Base+0xe8c>
   174e4:	mov	r0, r5
   174e8:	bl	11414 <free@plt>
   174ec:	cmp	r4, #0
   174f0:	moveq	r3, r4
   174f4:	bne	1757c <fts_close@@Base+0x168>
   174f8:	mov	r0, r3
   174fc:	pop	{r4, r5, r6, pc}
   17500:	tst	r3, #4
   17504:	bne	174a4 <fts_close@@Base+0x90>
   17508:	ldr	r0, [r5, #28]
   1750c:	bl	1169c <fchdir@plt>
   17510:	cmp	r0, #0
   17514:	bne	17554 <fts_close@@Base+0x140>
   17518:	ldr	r0, [r5, #28]
   1751c:	bl	116f0 <close@plt>
   17520:	cmp	r0, #0
   17524:	beq	174a4 <fts_close@@Base+0x90>
   17528:	bl	115d0 <__errno_location@plt>
   1752c:	mov	r6, r0
   17530:	ldr	r4, [r6]
   17534:	b	174a8 <fts_close@@Base+0x94>
   17538:	bl	11414 <free@plt>
   1753c:	b	174e4 <fts_close@@Base+0xd0>
   17540:	bl	115d0 <__errno_location@plt>
   17544:	ldr	r4, [r0]
   17548:	b	174a8 <fts_close@@Base+0x94>
   1754c:	mov	r4, r3
   17550:	b	17458 <fts_close@@Base+0x44>
   17554:	bl	115d0 <__errno_location@plt>
   17558:	mov	r6, r0
   1755c:	ldr	r0, [r5, #28]
   17560:	ldr	r4, [r6]
   17564:	bl	116f0 <close@plt>
   17568:	cmp	r0, #0
   1756c:	beq	174a8 <fts_close@@Base+0x94>
   17570:	cmp	r4, #0
   17574:	bne	174a8 <fts_close@@Base+0x94>
   17578:	b	17530 <fts_close@@Base+0x11c>
   1757c:	bl	115d0 <__errno_location@plt>
   17580:	mvn	r3, #0
   17584:	str	r4, [r0]
   17588:	b	174f8 <fts_close@@Base+0xe4>

0001758c <fts_read@@Base>:
   1758c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17590:	sub	sp, sp, #124	; 0x7c
   17594:	ldr	r9, [pc, #2100]	; 17dd0 <fts_read@@Base+0x844>
   17598:	mov	r8, r0
   1759c:	ldr	r3, [pc, #2096]	; 17dd4 <fts_read@@Base+0x848>
   175a0:	add	r9, pc, r9
   175a4:	ldr	fp, [r0]
   175a8:	ldr	sl, [r9, r3]
   175ac:	cmp	fp, #0
   175b0:	ldr	r3, [sl]
   175b4:	str	r3, [sp, #116]	; 0x74
   175b8:	beq	1775c <fts_read@@Base+0x1d0>
   175bc:	ldr	r3, [r0, #48]	; 0x30
   175c0:	ands	r3, r3, #16384	; 0x4000
   175c4:	bne	1775c <fts_read@@Base+0x1d0>
   175c8:	ldrh	r2, [fp, #64]	; 0x40
   175cc:	mov	r1, #3
   175d0:	strh	r1, [fp, #64]	; 0x40
   175d4:	cmp	r2, #1
   175d8:	beq	17974 <fts_read@@Base+0x3e8>
   175dc:	cmp	r2, #2
   175e0:	ldrh	r3, [fp, #60]	; 0x3c
   175e4:	beq	176d8 <fts_read@@Base+0x14c>
   175e8:	cmp	r3, #1
   175ec:	bne	1761c <fts_read@@Base+0x90>
   175f0:	b	17750 <fts_read@@Base+0x1c4>
   175f4:	str	r6, [r8]
   175f8:	mov	r0, fp
   175fc:	bl	11414 <free@plt>
   17600:	ldr	r4, [r6, #48]	; 0x30
   17604:	cmp	r4, #0
   17608:	beq	1777c <fts_read@@Base+0x1f0>
   1760c:	ldrh	r3, [r6, #64]	; 0x40
   17610:	cmp	r3, #4
   17614:	bne	17878 <fts_read@@Base+0x2ec>
   17618:	mov	fp, r6
   1761c:	ldr	r6, [fp, #8]
   17620:	cmp	r6, #0
   17624:	bne	175f4 <fts_read@@Base+0x68>
   17628:	ldr	r4, [fp, #4]
   1762c:	ldr	r3, [r4, #12]
   17630:	cmp	r3, #0
   17634:	bne	17b7c <fts_read@@Base+0x5f0>
   17638:	str	r4, [r8]
   1763c:	mov	r0, fp
   17640:	bl	11414 <free@plt>
   17644:	ldr	r3, [r4, #48]	; 0x30
   17648:	cmn	r3, #1
   1764c:	beq	17a38 <fts_read@@Base+0x4ac>
   17650:	ldrh	r3, [r4, #60]	; 0x3c
   17654:	cmp	r3, #11
   17658:	beq	178ec <fts_read@@Base+0x360>
   1765c:	ldr	r3, [r4, #40]	; 0x28
   17660:	mov	r1, #0
   17664:	ldr	r2, [r8, #24]
   17668:	strb	r1, [r2, r3]
   1766c:	ldr	r3, [r4, #48]	; 0x30
   17670:	cmp	r3, r1
   17674:	beq	179e0 <fts_read@@Base+0x454>
   17678:	ldrh	r3, [r4, #62]	; 0x3e
   1767c:	tst	r3, #2
   17680:	beq	17990 <fts_read@@Base+0x404>
   17684:	ldr	r3, [r8, #48]	; 0x30
   17688:	tst	r3, #4
   1768c:	beq	179f4 <fts_read@@Base+0x468>
   17690:	ldr	r0, [r4, #36]	; 0x24
   17694:	bl	116f0 <close@plt>
   17698:	ldr	r3, [r4, #32]
   1769c:	cmp	r3, #0
   176a0:	movne	r3, #7
   176a4:	strhne	r3, [r4, #60]	; 0x3c
   176a8:	bne	176c4 <fts_read@@Base+0x138>
   176ac:	mov	r3, #6
   176b0:	add	r1, r8, #56	; 0x38
   176b4:	strh	r3, [r4, #60]	; 0x3c
   176b8:	mov	r2, r4
   176bc:	ldr	r0, [r8, #48]	; 0x30
   176c0:	bl	166a0 <close_stdout@@Base+0x3614>
   176c4:	ldr	r3, [r8, #48]	; 0x30
   176c8:	tst	r3, #16384	; 0x4000
   176cc:	bne	1775c <fts_read@@Base+0x1d0>
   176d0:	mov	r6, r4
   176d4:	b	17760 <fts_read@@Base+0x1d4>
   176d8:	sub	r2, r3, #12
   176dc:	cmp	r2, #1
   176e0:	bls	17a10 <fts_read@@Base+0x484>
   176e4:	cmp	r3, #1
   176e8:	bne	1761c <fts_read@@Base+0x90>
   176ec:	ldr	r3, [r8, #48]	; 0x30
   176f0:	tst	r3, #64	; 0x40
   176f4:	beq	178f0 <fts_read@@Base+0x364>
   176f8:	ldrd	r6, [fp, #72]	; 0x48
   176fc:	ldrd	r4, [r8, #16]
   17700:	cmp	r7, r5
   17704:	cmpeq	r6, r4
   17708:	beq	178f0 <fts_read@@Base+0x364>
   1770c:	ldrh	r3, [fp, #62]	; 0x3e
   17710:	tst	r3, #2
   17714:	bne	17b70 <fts_read@@Base+0x5e4>
   17718:	ldr	r0, [r8, #4]
   1771c:	cmp	r0, #0
   17720:	beq	17730 <fts_read@@Base+0x1a4>
   17724:	bl	15f7c <close_stdout@@Base+0x2ef0>
   17728:	mov	r3, #0
   1772c:	str	r3, [r8, #4]
   17730:	mov	r3, #6
   17734:	add	r1, r8, #56	; 0x38
   17738:	strh	r3, [fp, #60]	; 0x3c
   1773c:	mov	r2, fp
   17740:	ldr	r0, [r8, #48]	; 0x30
   17744:	mov	r6, fp
   17748:	bl	166a0 <close_stdout@@Base+0x3614>
   1774c:	b	17760 <fts_read@@Base+0x1d4>
   17750:	cmp	r2, #4
   17754:	bne	176ec <fts_read@@Base+0x160>
   17758:	b	1770c <fts_read@@Base+0x180>
   1775c:	mov	r6, #0
   17760:	ldr	r2, [sp, #116]	; 0x74
   17764:	mov	r0, r6
   17768:	ldr	r3, [sl]
   1776c:	cmp	r2, r3
   17770:	bne	17ce4 <fts_read@@Base+0x758>
   17774:	add	sp, sp, #124	; 0x7c
   17778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1777c:	mov	r0, r8
   17780:	bl	16060 <close_stdout@@Base+0x2fd4>
   17784:	cmp	r0, #0
   17788:	bne	17ae0 <fts_read@@Base+0x554>
   1778c:	ldr	r2, [r8, #48]	; 0x30
   17790:	movw	r3, #258	; 0x102
   17794:	ldr	r0, [r8, #56]	; 0x38
   17798:	and	r3, r2, r3
   1779c:	cmp	r3, #0
   177a0:	beq	17ac8 <fts_read@@Base+0x53c>
   177a4:	cmp	r0, #0
   177a8:	beq	177b0 <fts_read@@Base+0x224>
   177ac:	bl	18ca8 <fts_children@@Base+0xe8c>
   177b0:	ldr	r3, [r6, #52]	; 0x34
   177b4:	add	r4, r6, #176	; 0xb0
   177b8:	add	r2, r3, #1
   177bc:	mov	r1, r4
   177c0:	str	r3, [r6, #40]	; 0x28
   177c4:	ldr	r0, [r8, #24]
   177c8:	bl	11408 <memmove@plt>
   177cc:	mov	r0, r4
   177d0:	mov	r1, #47	; 0x2f
   177d4:	bl	11660 <strrchr@plt>
   177d8:	cmp	r0, #0
   177dc:	beq	1780c <fts_read@@Base+0x280>
   177e0:	cmp	r4, r0
   177e4:	beq	17ad0 <fts_read@@Base+0x544>
   177e8:	add	r7, r0, #1
   177ec:	mov	r0, r7
   177f0:	bl	11588 <strlen@plt>
   177f4:	mov	r1, r7
   177f8:	mov	r5, r0
   177fc:	mov	r0, r4
   17800:	add	r2, r5, #1
   17804:	bl	11408 <memmove@plt>
   17808:	str	r5, [r6, #52]	; 0x34
   1780c:	ldr	r3, [r8, #24]
   17810:	add	r1, r8, #56	; 0x38
   17814:	str	r3, [r6, #28]
   17818:	str	r3, [r6, #24]
   1781c:	ldr	r0, [r8, #48]	; 0x30
   17820:	bl	162a4 <close_stdout@@Base+0x3218>
   17824:	str	r6, [r8]
   17828:	ldrh	r0, [r6, #60]	; 0x3c
   1782c:	cmp	r0, #11
   17830:	beq	178d0 <fts_read@@Base+0x344>
   17834:	cmp	r0, #1
   17838:	bne	17760 <fts_read@@Base+0x1d4>
   1783c:	ldr	r3, [r6, #48]	; 0x30
   17840:	add	r1, r8, #56	; 0x38
   17844:	ldr	r0, [r8, #48]	; 0x30
   17848:	mov	r2, r6
   1784c:	cmp	r3, #0
   17850:	ldrdeq	r4, [r6, #72]	; 0x48
   17854:	strdeq	r4, [r8, #16]
   17858:	bl	163a4 <close_stdout@@Base+0x3318>
   1785c:	subs	r4, r0, #0
   17860:	bne	17760 <fts_read@@Base+0x1d4>
   17864:	bl	115d0 <__errno_location@plt>
   17868:	mov	r6, r4
   1786c:	mov	r3, #12
   17870:	str	r3, [r0]
   17874:	b	17760 <fts_read@@Base+0x1d4>
   17878:	cmp	r3, #2
   1787c:	beq	17bac <fts_read@@Base+0x620>
   17880:	ldr	r0, [r6, #4]
   17884:	mov	ip, #47	; 0x2f
   17888:	ldr	r2, [r8, #24]
   1788c:	add	r1, r6, #176	; 0xb0
   17890:	ldr	r3, [r0, #40]	; 0x28
   17894:	ldr	lr, [r0, #28]
   17898:	sub	r0, r3, #1
   1789c:	ldrb	lr, [lr, r0]
   178a0:	cmp	lr, ip
   178a4:	moveq	r3, r0
   178a8:	add	r0, r2, r3
   178ac:	strb	ip, [r2, r3]
   178b0:	add	r0, r0, #1
   178b4:	ldr	r2, [r6, #52]	; 0x34
   178b8:	add	r2, r2, #1
   178bc:	bl	11408 <memmove@plt>
   178c0:	str	r6, [r8]
   178c4:	ldrh	r0, [r6, #60]	; 0x3c
   178c8:	cmp	r0, #11
   178cc:	bne	17834 <fts_read@@Base+0x2a8>
   178d0:	ldrd	r4, [r6, #120]	; 0x78
   178d4:	cmp	r5, #0
   178d8:	cmpeq	r4, #2
   178dc:	beq	17af4 <fts_read@@Base+0x568>
   178e0:	cmp	r5, #0
   178e4:	cmpeq	r4, #1
   178e8:	beq	17760 <fts_read@@Base+0x1d4>
   178ec:	bl	116e4 <abort@plt>
   178f0:	ldr	r0, [r8, #4]
   178f4:	cmp	r0, #0
   178f8:	beq	17a6c <fts_read@@Base+0x4e0>
   178fc:	tst	r3, #8192	; 0x2000
   17900:	bne	17a58 <fts_read@@Base+0x4cc>
   17904:	ldr	ip, [fp, #24]
   17908:	mov	r0, r8
   1790c:	add	r1, fp, #72	; 0x48
   17910:	add	r2, fp, #168	; 0xa8
   17914:	mvn	r3, #0
   17918:	str	ip, [sp]
   1791c:	bl	16458 <close_stdout@@Base+0x33cc>
   17920:	cmp	r0, #0
   17924:	beq	17964 <fts_read@@Base+0x3d8>
   17928:	bl	115d0 <__errno_location@plt>
   1792c:	ldrh	r3, [fp, #62]	; 0x3e
   17930:	orr	r3, r3, #1
   17934:	ldr	r2, [r0]
   17938:	strh	r3, [fp, #62]	; 0x3e
   1793c:	str	r2, [fp, #32]
   17940:	ldr	r6, [r8, #4]
   17944:	cmp	r6, #0
   17948:	beq	17968 <fts_read@@Base+0x3dc>
   1794c:	ldr	r3, [r6, #4]
   17950:	ldr	r3, [r3, #24]
   17954:	str	r3, [r6, #24]
   17958:	ldr	r6, [r6, #8]
   1795c:	cmp	r6, #0
   17960:	bne	1794c <fts_read@@Base+0x3c0>
   17964:	ldr	r6, [r8, #4]
   17968:	mov	r3, #0
   1796c:	str	r3, [r8, #4]
   17970:	b	17880 <fts_read@@Base+0x2f4>
   17974:	ldr	r0, [r0, #32]
   17978:	add	r1, r8, #48	; 0x30
   1797c:	mov	r2, fp
   17980:	mov	r6, fp
   17984:	bl	160b0 <close_stdout@@Base+0x3024>
   17988:	strh	r0, [fp, #60]	; 0x3c
   1798c:	b	17760 <fts_read@@Base+0x1d4>
   17990:	tst	r3, #1
   17994:	bne	17698 <fts_read@@Base+0x10c>
   17998:	ldr	r2, [r4, #4]
   1799c:	mov	r0, r8
   179a0:	ldr	r1, [pc, #1072]	; 17dd8 <fts_read@@Base+0x84c>
   179a4:	mvn	r3, #0
   179a8:	add	r1, pc, r1
   179ac:	str	r1, [sp]
   179b0:	add	r1, r2, #72	; 0x48
   179b4:	add	r2, r2, #168	; 0xa8
   179b8:	bl	16458 <close_stdout@@Base+0x33cc>
   179bc:	cmp	r0, #0
   179c0:	beq	17698 <fts_read@@Base+0x10c>
   179c4:	bl	115d0 <__errno_location@plt>
   179c8:	ldr	r3, [r0]
   179cc:	str	r3, [r4, #32]
   179d0:	ldr	r3, [r8, #48]	; 0x30
   179d4:	orr	r3, r3, #16384	; 0x4000
   179d8:	str	r3, [r8, #48]	; 0x30
   179dc:	b	17698 <fts_read@@Base+0x10c>
   179e0:	mov	r0, r8
   179e4:	bl	16060 <close_stdout@@Base+0x2fd4>
   179e8:	cmp	r0, #0
   179ec:	beq	17698 <fts_read@@Base+0x10c>
   179f0:	b	179c4 <fts_read@@Base+0x438>
   179f4:	tst	r3, #512	; 0x200
   179f8:	beq	17bd8 <fts_read@@Base+0x64c>
   179fc:	mov	r0, r8
   17a00:	ldr	r1, [r4, #36]	; 0x24
   17a04:	mov	r2, #1
   17a08:	bl	15fec <close_stdout@@Base+0x2f60>
   17a0c:	b	17690 <fts_read@@Base+0x104>
   17a10:	ldr	r0, [r0, #32]
   17a14:	add	r1, r8, #48	; 0x30
   17a18:	mov	r2, fp
   17a1c:	mov	r3, #1
   17a20:	bl	160b0 <close_stdout@@Base+0x3024>
   17a24:	cmp	r0, #1
   17a28:	strh	r0, [fp, #60]	; 0x3c
   17a2c:	beq	17c14 <fts_read@@Base+0x688>
   17a30:	mov	r6, fp
   17a34:	b	17824 <fts_read@@Base+0x298>
   17a38:	mov	r0, r4
   17a3c:	bl	11414 <free@plt>
   17a40:	bl	115d0 <__errno_location@plt>
   17a44:	mov	r3, #0
   17a48:	mov	r6, r3
   17a4c:	str	r3, [r0]
   17a50:	str	r3, [r8]
   17a54:	b	17760 <fts_read@@Base+0x1d4>
   17a58:	bic	r3, r3, #8192	; 0x2000
   17a5c:	str	r3, [r8, #48]	; 0x30
   17a60:	bl	15f7c <close_stdout@@Base+0x2ef0>
   17a64:	mov	r3, #0
   17a68:	str	r3, [r8, #4]
   17a6c:	mov	r0, r8
   17a70:	mov	r1, #3
   17a74:	bl	16790 <close_stdout@@Base+0x3704>
   17a78:	cmp	r0, #0
   17a7c:	str	r0, [r8, #4]
   17a80:	movne	r6, r0
   17a84:	bne	17968 <fts_read@@Base+0x3dc>
   17a88:	ldr	r0, [r8, #48]	; 0x30
   17a8c:	tst	r0, #16384	; 0x4000
   17a90:	bne	1775c <fts_read@@Base+0x1d0>
   17a94:	ldr	r3, [fp, #32]
   17a98:	cmp	r3, #0
   17a9c:	beq	17ab4 <fts_read@@Base+0x528>
   17aa0:	ldrh	r3, [fp, #60]	; 0x3c
   17aa4:	cmp	r3, #4
   17aa8:	movne	r3, #7
   17aac:	strhne	r3, [fp, #60]	; 0x3c
   17ab0:	ldrne	r0, [r8, #48]	; 0x30
   17ab4:	add	r1, r8, #56	; 0x38
   17ab8:	mov	r2, fp
   17abc:	bl	166a0 <close_stdout@@Base+0x3614>
   17ac0:	mov	r6, fp
   17ac4:	b	17760 <fts_read@@Base+0x1d4>
   17ac8:	bl	11414 <free@plt>
   17acc:	b	177b0 <fts_read@@Base+0x224>
   17ad0:	ldrb	r3, [r6, #177]	; 0xb1
   17ad4:	cmp	r3, #0
   17ad8:	bne	177e8 <fts_read@@Base+0x25c>
   17adc:	b	1780c <fts_read@@Base+0x280>
   17ae0:	ldr	r3, [r8, #48]	; 0x30
   17ae4:	mov	r6, r4
   17ae8:	orr	r3, r3, #16384	; 0x4000
   17aec:	str	r3, [r8, #48]	; 0x30
   17af0:	b	17760 <fts_read@@Base+0x1d4>
   17af4:	ldr	r3, [r6, #48]	; 0x30
   17af8:	ldr	r4, [r6, #4]
   17afc:	cmp	r3, #0
   17b00:	ble	17b20 <fts_read@@Base+0x594>
   17b04:	ldr	r3, [r4, #56]	; 0x38
   17b08:	cmp	r3, #0
   17b0c:	bne	17b20 <fts_read@@Base+0x594>
   17b10:	ldr	r3, [r8, #48]	; 0x30
   17b14:	and	r3, r3, #24
   17b18:	cmp	r3, #24
   17b1c:	beq	17c9c <fts_read@@Base+0x710>
   17b20:	mov	r3, #0
   17b24:	ldr	r0, [r8, #32]
   17b28:	add	r1, r8, #48	; 0x30
   17b2c:	mov	r2, r6
   17b30:	bl	160b0 <close_stdout@@Base+0x3024>
   17b34:	ldr	r3, [r6, #88]	; 0x58
   17b38:	and	r3, r3, #61440	; 0xf000
   17b3c:	cmp	r3, #16384	; 0x4000
   17b40:	strh	r0, [r6, #60]	; 0x3c
   17b44:	bne	17834 <fts_read@@Base+0x2a8>
   17b48:	ldr	r3, [r6, #48]	; 0x30
   17b4c:	cmp	r3, #0
   17b50:	beq	17834 <fts_read@@Base+0x2a8>
   17b54:	ldr	r3, [r4, #56]	; 0x38
   17b58:	cmp	r3, #0
   17b5c:	beq	17834 <fts_read@@Base+0x2a8>
   17b60:	sub	r3, r3, #1
   17b64:	str	r3, [r4, #56]	; 0x38
   17b68:	ldrh	r0, [r6, #60]	; 0x3c
   17b6c:	b	17834 <fts_read@@Base+0x2a8>
   17b70:	ldr	r0, [fp, #36]	; 0x24
   17b74:	bl	116f0 <close@plt>
   17b78:	b	17718 <fts_read@@Base+0x18c>
   17b7c:	str	r4, [r8]
   17b80:	mov	r0, r8
   17b84:	ldr	r3, [r4, #40]	; 0x28
   17b88:	mov	r1, #3
   17b8c:	ldr	r2, [r8, #24]
   17b90:	strb	r6, [r2, r3]
   17b94:	bl	16790 <close_stdout@@Base+0x3704>
   17b98:	subs	r6, r0, #0
   17b9c:	beq	17c50 <fts_read@@Base+0x6c4>
   17ba0:	mov	r0, fp
   17ba4:	bl	11414 <free@plt>
   17ba8:	b	17880 <fts_read@@Base+0x2f4>
   17bac:	ldr	r0, [r8, #32]
   17bb0:	add	r1, r8, #48	; 0x30
   17bb4:	mov	r2, r6
   17bb8:	mov	r3, #1
   17bbc:	bl	160b0 <close_stdout@@Base+0x3024>
   17bc0:	cmp	r0, #1
   17bc4:	strh	r0, [r6, #60]	; 0x3c
   17bc8:	beq	17c64 <fts_read@@Base+0x6d8>
   17bcc:	mov	r3, #3
   17bd0:	strh	r3, [r6, #64]	; 0x40
   17bd4:	b	17880 <fts_read@@Base+0x2f4>
   17bd8:	ldr	r0, [r4, #36]	; 0x24
   17bdc:	bl	1169c <fchdir@plt>
   17be0:	cmp	r0, #0
   17be4:	beq	17690 <fts_read@@Base+0x104>
   17be8:	bl	115d0 <__errno_location@plt>
   17bec:	ldr	r5, [r0]
   17bf0:	mov	r6, r0
   17bf4:	ldr	r0, [r4, #36]	; 0x24
   17bf8:	bl	116f0 <close@plt>
   17bfc:	str	r5, [r6]
   17c00:	str	r5, [r4, #32]
   17c04:	ldr	r3, [r8, #48]	; 0x30
   17c08:	orr	r3, r3, #16384	; 0x4000
   17c0c:	str	r3, [r8, #48]	; 0x30
   17c10:	b	17690 <fts_read@@Base+0x104>
   17c14:	ldr	r1, [r8, #48]	; 0x30
   17c18:	tst	r1, #4
   17c1c:	bne	17a30 <fts_read@@Base+0x4a4>
   17c20:	ldr	r2, [pc, #436]	; 17ddc <fts_read@@Base+0x850>
   17c24:	ldr	r0, [r8, #32]
   17c28:	add	r2, pc, r2
   17c2c:	bl	1633c <close_stdout@@Base+0x32b0>
   17c30:	cmp	r0, #0
   17c34:	str	r0, [fp, #36]	; 0x24
   17c38:	blt	17ce8 <fts_read@@Base+0x75c>
   17c3c:	ldrh	r3, [fp, #62]	; 0x3e
   17c40:	mov	r6, fp
   17c44:	orr	r3, r3, #2
   17c48:	strh	r3, [fp, #62]	; 0x3e
   17c4c:	b	17824 <fts_read@@Base+0x298>
   17c50:	ldr	r3, [r8, #48]	; 0x30
   17c54:	tst	r3, #16384	; 0x4000
   17c58:	bne	1775c <fts_read@@Base+0x1d0>
   17c5c:	ldr	r4, [fp, #4]
   17c60:	b	17638 <fts_read@@Base+0xac>
   17c64:	ldr	r1, [r8, #48]	; 0x30
   17c68:	tst	r1, #4
   17c6c:	bne	17bcc <fts_read@@Base+0x640>
   17c70:	ldr	r2, [pc, #360]	; 17de0 <fts_read@@Base+0x854>
   17c74:	ldr	r0, [r8, #32]
   17c78:	add	r2, pc, r2
   17c7c:	bl	1633c <close_stdout@@Base+0x32b0>
   17c80:	cmp	r0, #0
   17c84:	str	r0, [r6, #36]	; 0x24
   17c88:	blt	17d04 <fts_read@@Base+0x778>
   17c8c:	ldrh	r3, [r6, #62]	; 0x3e
   17c90:	orr	r3, r3, #2
   17c94:	strh	r3, [r6, #62]	; 0x3e
   17c98:	b	17bcc <fts_read@@Base+0x640>
   17c9c:	ldr	r7, [r4, #44]	; 0x2c
   17ca0:	ldr	r3, [r7, #48]	; 0x30
   17ca4:	ldr	r5, [r7, #52]	; 0x34
   17ca8:	tst	r3, #512	; 0x200
   17cac:	beq	17b20 <fts_read@@Base+0x594>
   17cb0:	cmp	r5, #0
   17cb4:	beq	17d88 <fts_read@@Base+0x7fc>
   17cb8:	ldrd	r2, [r4, #72]	; 0x48
   17cbc:	add	r1, sp, #120	; 0x78
   17cc0:	mov	r0, r5
   17cc4:	strd	r2, [r1, #-112]!	; 0xffffff90
   17cc8:	bl	18810 <fts_children@@Base+0x9f4>
   17ccc:	subs	fp, r0, #0
   17cd0:	beq	17d1c <fts_read@@Base+0x790>
   17cd4:	ldrb	r7, [fp, #8]
   17cd8:	cmp	r7, #0
   17cdc:	bne	17b68 <fts_read@@Base+0x5dc>
   17ce0:	b	17b20 <fts_read@@Base+0x594>
   17ce4:	bl	11474 <__stack_chk_fail@plt>
   17ce8:	bl	115d0 <__errno_location@plt>
   17cec:	mov	r6, fp
   17cf0:	mov	r3, #7
   17cf4:	ldr	r2, [r0]
   17cf8:	strh	r3, [fp, #60]	; 0x3c
   17cfc:	str	r2, [fp, #32]
   17d00:	b	17824 <fts_read@@Base+0x298>
   17d04:	bl	115d0 <__errno_location@plt>
   17d08:	mov	r3, #7
   17d0c:	ldr	r2, [r0]
   17d10:	strh	r3, [r6, #60]	; 0x3c
   17d14:	str	r2, [r6, #32]
   17d18:	b	17bcc <fts_read@@Base+0x640>
   17d1c:	mov	r0, #16
   17d20:	bl	11528 <malloc@plt>
   17d24:	subs	r9, r0, #0
   17d28:	beq	17b20 <fts_read@@Base+0x594>
   17d2c:	ldr	r0, [r7, #32]
   17d30:	add	r1, sp, #24
   17d34:	bl	1139c <fstatfs64@plt>
   17d38:	cmp	r0, #0
   17d3c:	movne	r7, fp
   17d40:	bne	17d5c <fts_read@@Base+0x7d0>
   17d44:	ldr	r7, [sp, #24]
   17d48:	movw	r3, #18803	; 0x4973
   17d4c:	movt	r3, #21093	; 0x5265
   17d50:	subs	r3, r7, r3
   17d54:	rsbs	r7, r3, #0
   17d58:	adcs	r7, r7, r3
   17d5c:	strb	r7, [r9, #8]
   17d60:	mov	r0, r5
   17d64:	ldrd	r2, [r4, #72]	; 0x48
   17d68:	mov	r1, r9
   17d6c:	strd	r2, [r9]
   17d70:	bl	190ec <fts_children@@Base+0x12d0>
   17d74:	cmp	r0, #0
   17d78:	beq	17dc4 <fts_read@@Base+0x838>
   17d7c:	cmp	r9, r0
   17d80:	beq	17cd8 <fts_read@@Base+0x74c>
   17d84:	b	178ec <fts_read@@Base+0x360>
   17d88:	ldr	ip, [pc, #84]	; 17de4 <fts_read@@Base+0x858>
   17d8c:	mov	r1, r5
   17d90:	ldr	r2, [pc, #80]	; 17de8 <fts_read@@Base+0x85c>
   17d94:	mov	r0, #13
   17d98:	ldr	r3, [pc, #76]	; 17dec <fts_read@@Base+0x860>
   17d9c:	ldr	ip, [r9, ip]
   17da0:	add	r2, pc, r2
   17da4:	add	r3, pc, r3
   17da8:	str	ip, [sp]
   17dac:	bl	18ac4 <fts_children@@Base+0xca8>
   17db0:	cmp	r0, #0
   17db4:	mov	r5, r0
   17db8:	str	r0, [r7, #52]	; 0x34
   17dbc:	bne	17cb8 <fts_read@@Base+0x72c>
   17dc0:	b	17b20 <fts_read@@Base+0x594>
   17dc4:	mov	r0, r9
   17dc8:	bl	11414 <free@plt>
   17dcc:	b	17b20 <fts_read@@Base+0x594>
   17dd0:	andeq	r5, r1, r8, asr sl
   17dd4:	andeq	r0, r0, ip, asr #2
   17dd8:	andeq	r4, r0, r4, asr r2
   17ddc:	ldrdeq	r3, [r0], -r8
   17de0:	andeq	r3, r0, r8, lsl #31
   17de4:	andeq	r0, r0, r8, asr #2
   17de8:			; <UNDEFINED> instruction: 0xffffe00c
   17dec:			; <UNDEFINED> instruction: 0xffffe024

00017df0 <fts_set@@Base>:
   17df0:	cmp	r2, #4
   17df4:	push	{r3, lr}
   17df8:	movls	r3, #0
   17dfc:	strhls	r2, [r1, #64]	; 0x40
   17e00:	bls	17e14 <fts_set@@Base+0x24>
   17e04:	bl	115d0 <__errno_location@plt>
   17e08:	mov	r3, #1
   17e0c:	mov	r2, #22
   17e10:	str	r2, [r0]
   17e14:	mov	r0, r3
   17e18:	pop	{r3, pc}

00017e1c <fts_children@@Base>:
   17e1c:	push	{r4, r5, r6, r7, r8, lr}
   17e20:	bics	r7, r1, #8192	; 0x2000
   17e24:	mov	r5, r1
   17e28:	mov	r4, r0
   17e2c:	bne	17f28 <fts_children@@Base+0x10c>
   17e30:	bl	115d0 <__errno_location@plt>
   17e34:	ldr	r6, [r4]
   17e38:	str	r7, [r0]
   17e3c:	mov	r8, r0
   17e40:	ldr	r3, [r4, #48]	; 0x30
   17e44:	ands	r3, r3, #16384	; 0x4000
   17e48:	bne	17f40 <fts_children@@Base+0x124>
   17e4c:	ldrh	r2, [r6, #60]	; 0x3c
   17e50:	cmp	r2, #9
   17e54:	ldreq	r3, [r6, #8]
   17e58:	beq	17ec8 <fts_children@@Base+0xac>
   17e5c:	cmp	r2, #1
   17e60:	bne	17ec8 <fts_children@@Base+0xac>
   17e64:	ldr	r0, [r4, #4]
   17e68:	cmp	r0, #0
   17e6c:	beq	17e74 <fts_children@@Base+0x58>
   17e70:	bl	15f7c <close_stdout@@Base+0x2ef0>
   17e74:	cmp	r5, #8192	; 0x2000
   17e78:	ldreq	r3, [r4, #48]	; 0x30
   17e7c:	moveq	r5, #2
   17e80:	movne	r5, #1
   17e84:	orreq	r3, r3, #8192	; 0x2000
   17e88:	streq	r3, [r4, #48]	; 0x30
   17e8c:	ldr	r3, [r6, #48]	; 0x30
   17e90:	cmp	r3, #0
   17e94:	bne	17eb4 <fts_children@@Base+0x98>
   17e98:	ldr	r3, [r6, #24]
   17e9c:	ldrb	r3, [r3]
   17ea0:	cmp	r3, #47	; 0x2f
   17ea4:	beq	17eb4 <fts_children@@Base+0x98>
   17ea8:	ldr	r1, [r4, #48]	; 0x30
   17eac:	ands	r6, r1, #4
   17eb0:	beq	17ed0 <fts_children@@Base+0xb4>
   17eb4:	mov	r1, r5
   17eb8:	mov	r0, r4
   17ebc:	bl	16790 <close_stdout@@Base+0x3704>
   17ec0:	mov	r3, r0
   17ec4:	str	r0, [r4, #4]
   17ec8:	mov	r0, r3
   17ecc:	pop	{r4, r5, r6, r7, r8, pc}
   17ed0:	ldr	r2, [pc, #164]	; 17f7c <fts_children@@Base+0x160>
   17ed4:	ldr	r0, [r4, #32]
   17ed8:	add	r2, pc, r2
   17edc:	bl	1633c <close_stdout@@Base+0x32b0>
   17ee0:	subs	r7, r0, #0
   17ee4:	strlt	r6, [r4, #4]
   17ee8:	movlt	r3, r6
   17eec:	blt	17ec8 <fts_children@@Base+0xac>
   17ef0:	mov	r1, r5
   17ef4:	mov	r0, r4
   17ef8:	bl	16790 <close_stdout@@Base+0x3704>
   17efc:	ldr	r3, [r4, #48]	; 0x30
   17f00:	ands	r5, r3, #512	; 0x200
   17f04:	str	r0, [r4, #4]
   17f08:	beq	17f48 <fts_children@@Base+0x12c>
   17f0c:	mov	r1, r7
   17f10:	mov	r0, r4
   17f14:	mov	r2, #1
   17f18:	bl	15fec <close_stdout@@Base+0x2f60>
   17f1c:	ldr	r3, [r4, #4]
   17f20:	mov	r0, r3
   17f24:	pop	{r4, r5, r6, r7, r8, pc}
   17f28:	bl	115d0 <__errno_location@plt>
   17f2c:	mov	r3, #0
   17f30:	mov	r2, #22
   17f34:	str	r2, [r0]
   17f38:	mov	r0, r3
   17f3c:	pop	{r4, r5, r6, r7, r8, pc}
   17f40:	mov	r3, r7
   17f44:	b	17ec8 <fts_children@@Base+0xac>
   17f48:	mov	r0, r7
   17f4c:	bl	1169c <fchdir@plt>
   17f50:	cmp	r0, #0
   17f54:	bne	17f64 <fts_children@@Base+0x148>
   17f58:	mov	r0, r7
   17f5c:	bl	116f0 <close@plt>
   17f60:	b	17f1c <fts_children@@Base+0x100>
   17f64:	ldr	r4, [r8]
   17f68:	mov	r0, r7
   17f6c:	bl	116f0 <close@plt>
   17f70:	mov	r3, r5
   17f74:	str	r4, [r8]
   17f78:	b	17ec8 <fts_children@@Base+0xac>
   17f7c:	andeq	r3, r0, r8, lsr #26
   17f80:	push	{r3, r4, r5, lr}
   17f84:	mov	r2, #0
   17f88:	mov	r4, r1
   17f8c:	mov	r1, #1
   17f90:	mov	r5, r0
   17f94:	bl	198d4 <fts_children@@Base+0x1ab8>
   17f98:	cmp	r0, #0
   17f9c:	blt	17fdc <fts_children@@Base+0x1c0>
   17fa0:	cmp	r4, #0
   17fa4:	orrne	r2, r0, #1
   17fa8:	biceq	r2, r0, #1
   17fac:	cmp	r2, r0
   17fb0:	beq	17fd4 <fts_children@@Base+0x1b8>
   17fb4:	mov	r0, r5
   17fb8:	mov	r1, #2
   17fbc:	bl	198d4 <fts_children@@Base+0x1ab8>
   17fc0:	cmn	r0, #1
   17fc4:	movne	r0, #0
   17fc8:	moveq	r0, #1
   17fcc:	rsb	r0, r0, #0
   17fd0:	pop	{r3, r4, r5, pc}
   17fd4:	mov	r0, #0
   17fd8:	pop	{r3, r4, r5, pc}
   17fdc:	mvn	r0, #0
   17fe0:	pop	{r3, r4, r5, pc}
   17fe4:	movw	r1, #1030	; 0x406
   17fe8:	mov	r2, #0
   17fec:	b	198d4 <fts_children@@Base+0x1ab8>
   17ff0:	push	{r4, r5, r6, lr}
   17ff4:	mov	r4, r0
   17ff8:	bl	114ec <__fpending@plt>
   17ffc:	mov	r6, r0
   18000:	mov	r0, r4
   18004:	ldr	r4, [r4]
   18008:	bl	19834 <fts_children@@Base+0x1a18>
   1800c:	and	r4, r4, #32
   18010:	adds	r5, r0, #0
   18014:	movne	r5, #1
   18018:	cmp	r4, #0
   1801c:	bne	1803c <fts_children@@Base+0x220>
   18020:	cmp	r5, #0
   18024:	beq	18034 <fts_children@@Base+0x218>
   18028:	cmp	r6, #0
   1802c:	beq	18058 <fts_children@@Base+0x23c>
   18030:	mvn	r4, #0
   18034:	mov	r0, r4
   18038:	pop	{r4, r5, r6, pc}
   1803c:	cmp	r5, #0
   18040:	bne	18030 <fts_children@@Base+0x214>
   18044:	bl	115d0 <__errno_location@plt>
   18048:	mvn	r4, #0
   1804c:	str	r5, [r0]
   18050:	mov	r0, r4
   18054:	pop	{r4, r5, r6, pc}
   18058:	bl	115d0 <__errno_location@plt>
   1805c:	ldr	r4, [r0]
   18060:	subs	r4, r4, #9
   18064:	mvnne	r4, #0
   18068:	mov	r0, r4
   1806c:	pop	{r4, r5, r6, pc}
   18070:	mov	r2, #0
   18074:	mov	r3, #0
   18078:	movw	r1, #62998	; 0xf616
   1807c:	strd	r2, [r0, #16]
   18080:	movt	r1, #149	; 0x95
   18084:	str	r1, [r0, #24]
   18088:	bx	lr
   1808c:	push	{r3, r4, r5, r6, r7, lr}
   18090:	movw	r3, #62998	; 0xf616
   18094:	ldr	r2, [r0, #24]
   18098:	movt	r3, #149	; 0x95
   1809c:	mov	ip, r0
   180a0:	cmp	r2, r3
   180a4:	bne	18138 <fts_children@@Base+0x31c>
   180a8:	ldrd	r6, [r0, #16]
   180ac:	orrs	r0, r6, r7
   180b0:	beq	180f4 <fts_children@@Base+0x2d8>
   180b4:	ldrd	r4, [r1, #96]	; 0x60
   180b8:	ldrd	r2, [ip]
   180bc:	cmp	r5, r3
   180c0:	cmpeq	r4, r2
   180c4:	beq	18120 <fts_children@@Base+0x304>
   180c8:	adds	r2, r6, #1
   180cc:	adc	r3, r7, #0
   180d0:	and	r6, r6, r2
   180d4:	and	r7, r7, r3
   180d8:	strd	r2, [ip, #16]
   180dc:	orrs	r0, r6, r7
   180e0:	bne	18118 <fts_children@@Base+0x2fc>
   180e4:	orrs	r0, r2, r3
   180e8:	bne	18100 <fts_children@@Base+0x2e4>
   180ec:	mov	r0, #1
   180f0:	pop	{r3, r4, r5, r6, r7, pc}
   180f4:	mov	r2, #1
   180f8:	mov	r3, #0
   180fc:	strd	r2, [ip, #16]
   18100:	ldrd	r2, [r1]
   18104:	mov	r0, #0
   18108:	strd	r2, [ip, #8]
   1810c:	ldrd	r2, [r1, #96]	; 0x60
   18110:	strd	r2, [ip]
   18114:	pop	{r3, r4, r5, r6, r7, pc}
   18118:	mov	r0, #0
   1811c:	pop	{r3, r4, r5, r6, r7, pc}
   18120:	ldrd	r4, [r1]
   18124:	ldrd	r2, [ip, #8]
   18128:	cmp	r5, r3
   1812c:	cmpeq	r4, r2
   18130:	bne	180c8 <fts_children@@Base+0x2ac>
   18134:	b	180ec <fts_children@@Base+0x2d0>
   18138:	ldr	r0, [pc, #24]	; 18158 <fts_children@@Base+0x33c>
   1813c:	mov	r2, #60	; 0x3c
   18140:	ldr	r1, [pc, #20]	; 1815c <fts_children@@Base+0x340>
   18144:	ldr	r3, [pc, #20]	; 18160 <fts_children@@Base+0x344>
   18148:	add	r0, pc, r0
   1814c:	add	r1, pc, r1
   18150:	add	r3, pc, r3
   18154:	bl	1172c <__assert_fail@plt>
   18158:	andeq	r3, r0, r8, asr #21
   1815c:	ldrdeq	r3, [r0], -ip
   18160:			; <UNDEFINED> instruction: 0x00003ab4
   18164:	push	{r1, r2, r3}
   18168:	ldr	r3, [pc, #88]	; 181c8 <fts_children@@Base+0x3ac>
   1816c:	ldr	r2, [pc, #88]	; 181cc <fts_children@@Base+0x3b0>
   18170:	add	r3, pc, r3
   18174:	push	{r4, lr}
   18178:	sub	sp, sp, #12
   1817c:	ldr	r4, [r3, r2]
   18180:	ldr	r1, [sp, #20]
   18184:	ldr	r3, [r4]
   18188:	ands	r2, r1, #64	; 0x40
   1818c:	ldrne	r2, [sp, #24]
   18190:	str	r3, [sp, #4]
   18194:	addne	r3, sp, #24
   18198:	strne	r3, [sp]
   1819c:	bl	11510 <open64@plt>
   181a0:	bl	197f8 <fts_children@@Base+0x19dc>
   181a4:	ldr	r2, [sp, #4]
   181a8:	ldr	r3, [r4]
   181ac:	cmp	r2, r3
   181b0:	bne	181c4 <fts_children@@Base+0x3a8>
   181b4:	add	sp, sp, #12
   181b8:	pop	{r4, lr}
   181bc:	add	sp, sp, #12
   181c0:	bx	lr
   181c4:	bl	11474 <__stack_chk_fail@plt>
   181c8:	andeq	r4, r1, r8, lsl #29
   181cc:	andeq	r0, r0, ip, asr #2
   181d0:	cmp	r0, #9
   181d4:	push	{r4, r5, r6, r7, r8, lr}
   181d8:	bhi	1826c <fts_children@@Base+0x450>
   181dc:	mov	r7, #11
   181e0:	movw	r8, #43691	; 0xaaab
   181e4:	movt	r8, #43690	; 0xaaaa
   181e8:	cmp	r7, #9
   181ec:	bls	18264 <fts_children@@Base+0x448>
   181f0:	umull	r2, r3, r8, r7
   181f4:	lsr	r3, r3, #1
   181f8:	add	r3, r3, r3, lsl #1
   181fc:	cmp	r7, r3
   18200:	beq	18250 <fts_children@@Base+0x434>
   18204:	mov	r6, #16
   18208:	mov	r5, #9
   1820c:	mov	r4, #3
   18210:	b	18220 <fts_children@@Base+0x404>
   18214:	bl	19d3c <fts_children@@Base+0x1f20>
   18218:	cmp	r1, #0
   1821c:	beq	18250 <fts_children@@Base+0x434>
   18220:	add	r5, r5, r6
   18224:	add	r4, r4, #2
   18228:	cmp	r5, r7
   1822c:	mov	r0, r7
   18230:	add	r6, r6, #8
   18234:	mov	r1, r4
   18238:	bcc	18214 <fts_children@@Base+0x3f8>
   1823c:	mov	r1, r4
   18240:	mov	r0, r7
   18244:	bl	19d3c <fts_children@@Base+0x1f20>
   18248:	cmp	r1, #0
   1824c:	bne	1825c <fts_children@@Base+0x440>
   18250:	add	r7, r7, #2
   18254:	cmn	r7, #1
   18258:	bne	181e8 <fts_children@@Base+0x3cc>
   1825c:	mov	r0, r7
   18260:	pop	{r4, r5, r6, r7, r8, pc}
   18264:	mov	r4, #3
   18268:	b	1823c <fts_children@@Base+0x420>
   1826c:	orr	r7, r0, #1
   18270:	cmn	r7, #1
   18274:	bne	181e0 <fts_children@@Base+0x3c4>
   18278:	b	1825c <fts_children@@Base+0x440>
   1827c:	push	{r3, lr}
   18280:	ror	r0, r0, #3
   18284:	bl	19d3c <fts_children@@Base+0x1f20>
   18288:	mov	r0, r1
   1828c:	pop	{r3, pc}
   18290:	subs	r3, r1, r0
   18294:	rsbs	r0, r3, #0
   18298:	adcs	r0, r0, r3
   1829c:	bx	lr
   182a0:	push	{r4, lr}
   182a4:	mov	r4, r0
   182a8:	ldr	r3, [r4, #24]
   182ac:	mov	r0, r1
   182b0:	ldr	r1, [r4, #8]
   182b4:	blx	r3
   182b8:	ldr	r3, [r4, #8]
   182bc:	cmp	r0, r3
   182c0:	bcs	182d0 <fts_children@@Base+0x4b4>
   182c4:	ldr	r3, [r4]
   182c8:	add	r0, r3, r0, lsl #3
   182cc:	pop	{r4, pc}
   182d0:	bl	116e4 <abort@plt>
   182d4:	push	{r4, r5, r6, r7, r8, lr}
   182d8:	mov	r7, r2
   182dc:	mov	r8, r3
   182e0:	mov	r6, r0
   182e4:	mov	r5, r1
   182e8:	bl	182a0 <fts_children@@Base+0x484>
   182ec:	str	r0, [r7]
   182f0:	mov	r4, r0
   182f4:	ldr	r2, [r0]
   182f8:	cmp	r2, #0
   182fc:	beq	18390 <fts_children@@Base+0x574>
   18300:	cmp	r5, r2
   18304:	beq	18324 <fts_children@@Base+0x508>
   18308:	mov	r1, r2
   1830c:	ldr	r3, [r6, #28]
   18310:	mov	r0, r5
   18314:	blx	r3
   18318:	cmp	r0, #0
   1831c:	beq	18384 <fts_children@@Base+0x568>
   18320:	ldr	r2, [r4]
   18324:	cmp	r8, #0
   18328:	beq	18354 <fts_children@@Base+0x538>
   1832c:	ldr	r3, [r4, #4]
   18330:	cmp	r3, #0
   18334:	streq	r3, [r4]
   18338:	ldmne	r3, {r0, r1}
   1833c:	movne	ip, #0
   18340:	stmne	r4, {r0, r1}
   18344:	strne	ip, [r3]
   18348:	ldrne	r1, [r6, #36]	; 0x24
   1834c:	strne	r1, [r3, #4]
   18350:	strne	r3, [r6, #36]	; 0x24
   18354:	mov	r0, r2
   18358:	pop	{r4, r5, r6, r7, r8, pc}
   1835c:	ldr	r2, [ip]
   18360:	cmp	r2, r5
   18364:	beq	183a4 <fts_children@@Base+0x588>
   18368:	mov	r1, r2
   1836c:	mov	r0, r5
   18370:	ldr	r2, [r6, #28]
   18374:	blx	r2
   18378:	cmp	r0, #0
   1837c:	bne	1839c <fts_children@@Base+0x580>
   18380:	ldr	r4, [r4, #4]
   18384:	ldr	ip, [r4, #4]
   18388:	cmp	ip, #0
   1838c:	bne	1835c <fts_children@@Base+0x540>
   18390:	mov	r2, #0
   18394:	mov	r0, r2
   18398:	pop	{r4, r5, r6, r7, r8, pc}
   1839c:	ldr	ip, [r4, #4]
   183a0:	ldr	r2, [ip]
   183a4:	cmp	r8, #0
   183a8:	beq	18354 <fts_children@@Base+0x538>
   183ac:	ldr	r1, [ip, #4]
   183b0:	mov	r3, #0
   183b4:	mov	r0, r2
   183b8:	str	r1, [r4, #4]
   183bc:	str	r3, [ip]
   183c0:	ldr	r3, [r6, #36]	; 0x24
   183c4:	str	r3, [ip, #4]
   183c8:	str	ip, [r6, #36]	; 0x24
   183cc:	pop	{r4, r5, r6, r7, r8, pc}
   183d0:	ldr	r1, [pc, #176]	; 18488 <fts_children@@Base+0x66c>
   183d4:	mov	r2, r0
   183d8:	ldr	r3, [r0]
   183dc:	add	r1, pc, r1
   183e0:	cmp	r3, r1
   183e4:	beq	18474 <fts_children@@Base+0x658>
   183e8:	vldr	s15, [r3, #8]
   183ec:	vldr	s14, [pc, #136]	; 1847c <fts_children@@Base+0x660>
   183f0:	vcmpe.f32	s15, s14
   183f4:	vmrs	APSR_nzcv, fpscr
   183f8:	ble	18460 <fts_children@@Base+0x644>
   183fc:	vldr	s13, [pc, #124]	; 18480 <fts_children@@Base+0x664>
   18400:	vcmpe.f32	s15, s13
   18404:	vmrs	APSR_nzcv, fpscr
   18408:	bpl	18460 <fts_children@@Base+0x644>
   1840c:	vldr	s13, [pc, #112]	; 18484 <fts_children@@Base+0x668>
   18410:	vldr	s12, [r3, #12]
   18414:	vcmpe.f32	s12, s13
   18418:	vmrs	APSR_nzcv, fpscr
   1841c:	ble	18460 <fts_children@@Base+0x644>
   18420:	vldr	s13, [r3]
   18424:	vcmpe.f32	s13, #0.0
   18428:	vmrs	APSR_nzcv, fpscr
   1842c:	blt	18460 <fts_children@@Base+0x644>
   18430:	vadd.f32	s14, s13, s14
   18434:	vldr	s12, [r3, #4]
   18438:	vcmpe.f32	s14, s12
   1843c:	vmrs	APSR_nzcv, fpscr
   18440:	bpl	18460 <fts_children@@Base+0x644>
   18444:	vmov.f32	s13, #112	; 0x3f800000  1.0
   18448:	vcmpe.f32	s12, s13
   1844c:	vmrs	APSR_nzcv, fpscr
   18450:	bhi	18460 <fts_children@@Base+0x644>
   18454:	vcmpe.f32	s15, s14
   18458:	vmrs	APSR_nzcv, fpscr
   1845c:	bgt	18474 <fts_children@@Base+0x658>
   18460:	ldr	r3, [pc, #36]	; 1848c <fts_children@@Base+0x670>
   18464:	mov	r0, #0
   18468:	add	r3, pc, r3
   1846c:	str	r3, [r2]
   18470:	bx	lr
   18474:	mov	r0, #1
   18478:	bx	lr
   1847c:	stclcc	12, cr12, [ip, #820]	; 0x334
   18480:	svccc	0x00666666
   18484:	svccc	0x008ccccd
   18488:	andeq	r3, r0, r0, ror #16
   1848c:	ldrdeq	r3, [r0], -r4
   18490:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18494:	mov	r8, r1
   18498:	ldr	r6, [r1]
   1849c:	mov	r5, r0
   184a0:	ldr	r3, [r1, #4]
   184a4:	mov	sl, r2
   184a8:	cmp	r6, r3
   184ac:	addcc	r6, r6, #8
   184b0:	movcc	r9, #0
   184b4:	bcs	1855c <fts_children@@Base+0x740>
   184b8:	ldr	fp, [r6, #-8]
   184bc:	mov	r7, r6
   184c0:	cmp	fp, #0
   184c4:	beq	18550 <fts_children@@Base+0x734>
   184c8:	ldr	r4, [r6, #-4]
   184cc:	cmp	r4, #0
   184d0:	bne	184f0 <fts_children@@Base+0x6d4>
   184d4:	b	18540 <fts_children@@Base+0x724>
   184d8:	ldr	r2, [r0, #4]
   184dc:	cmp	r3, #0
   184e0:	str	r2, [r4, #4]
   184e4:	str	r4, [r0, #4]
   184e8:	mov	r4, r3
   184ec:	beq	1853c <fts_children@@Base+0x720>
   184f0:	ldr	fp, [r4]
   184f4:	mov	r0, r5
   184f8:	mov	r1, fp
   184fc:	bl	182a0 <fts_children@@Base+0x484>
   18500:	ldr	r3, [r4, #4]
   18504:	ldr	r2, [r0]
   18508:	cmp	r2, #0
   1850c:	bne	184d8 <fts_children@@Base+0x6bc>
   18510:	str	fp, [r0]
   18514:	cmp	r3, #0
   18518:	ldr	r1, [r5, #12]
   1851c:	add	r1, r1, #1
   18520:	str	r1, [r5, #12]
   18524:	str	r2, [r4]
   18528:	ldr	r2, [r5, #36]	; 0x24
   1852c:	str	r2, [r4, #4]
   18530:	str	r4, [r5, #36]	; 0x24
   18534:	mov	r4, r3
   18538:	bne	184f0 <fts_children@@Base+0x6d4>
   1853c:	ldr	fp, [r6, #-8]
   18540:	cmp	sl, #0
   18544:	str	r9, [r6, #-4]
   18548:	beq	18564 <fts_children@@Base+0x748>
   1854c:	ldr	r3, [r8, #4]
   18550:	cmp	r3, r7
   18554:	add	r6, r6, #8
   18558:	bhi	184b8 <fts_children@@Base+0x69c>
   1855c:	mov	r0, #1
   18560:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18564:	mov	r0, r5
   18568:	mov	r1, fp
   1856c:	bl	182a0 <fts_children@@Base+0x484>
   18570:	ldr	r3, [r0]
   18574:	mov	r4, r0
   18578:	cmp	r3, #0
   1857c:	beq	185c8 <fts_children@@Base+0x7ac>
   18580:	ldr	r0, [r5, #36]	; 0x24
   18584:	cmp	r0, #0
   18588:	beq	185dc <fts_children@@Base+0x7c0>
   1858c:	ldr	r2, [r0, #4]
   18590:	str	r2, [r5, #36]	; 0x24
   18594:	str	fp, [r0]
   18598:	ldr	r2, [r4, #4]
   1859c:	str	r2, [r0, #4]
   185a0:	str	r0, [r4, #4]
   185a4:	str	r9, [r6, #-8]
   185a8:	add	r6, r6, #8
   185ac:	ldr	r3, [r8, #4]
   185b0:	ldr	r2, [r8, #12]
   185b4:	cmp	r3, r7
   185b8:	sub	r2, r2, #1
   185bc:	str	r2, [r8, #12]
   185c0:	bhi	184b8 <fts_children@@Base+0x69c>
   185c4:	b	1855c <fts_children@@Base+0x740>
   185c8:	str	fp, [r0]
   185cc:	ldr	r3, [r5, #12]
   185d0:	add	r3, r3, #1
   185d4:	str	r3, [r5, #12]
   185d8:	b	185a4 <fts_children@@Base+0x788>
   185dc:	mov	r0, #8
   185e0:	bl	11528 <malloc@plt>
   185e4:	cmp	r0, #0
   185e8:	bne	18594 <fts_children@@Base+0x778>
   185ec:	mov	r0, sl
   185f0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185f4:	ldr	r0, [r0, #8]
   185f8:	bx	lr
   185fc:	ldr	r0, [r0, #12]
   18600:	bx	lr
   18604:	ldr	r0, [r0, #16]
   18608:	bx	lr
   1860c:	ldr	r3, [r0]
   18610:	ldr	r2, [r0, #4]
   18614:	cmp	r3, r2
   18618:	bcs	1867c <fts_children@@Base+0x860>
   1861c:	add	r1, r3, #8
   18620:	add	r2, r2, #7
   18624:	rsb	r2, r1, r2
   18628:	add	r3, r3, #16
   1862c:	bic	r2, r2, #7
   18630:	mov	r0, #0
   18634:	add	ip, r3, r2
   18638:	ldr	r3, [r1, #-8]
   1863c:	cmp	r3, #0
   18640:	beq	1866c <fts_children@@Base+0x850>
   18644:	ldr	r3, [r1, #-4]
   18648:	mov	r2, #1
   1864c:	cmp	r3, #0
   18650:	beq	18664 <fts_children@@Base+0x848>
   18654:	ldr	r3, [r3, #4]
   18658:	add	r2, r2, #1
   1865c:	cmp	r3, #0
   18660:	bne	18654 <fts_children@@Base+0x838>
   18664:	cmp	r0, r2
   18668:	movcc	r0, r2
   1866c:	add	r1, r1, #8
   18670:	cmp	r1, ip
   18674:	bne	18638 <fts_children@@Base+0x81c>
   18678:	bx	lr
   1867c:	mov	r0, #0
   18680:	bx	lr
   18684:	push	{r4}		; (str r4, [sp, #-4]!)
   18688:	ldr	r3, [r0]
   1868c:	ldr	r2, [r0, #4]
   18690:	cmp	r3, r2
   18694:	bcs	18724 <fts_children@@Base+0x908>
   18698:	add	r2, r2, #7
   1869c:	add	r1, r3, #8
   186a0:	rsb	ip, r1, r2
   186a4:	add	r3, r3, #16
   186a8:	bic	ip, ip, #7
   186ac:	mov	r2, #0
   186b0:	add	r4, r3, ip
   186b4:	mov	ip, r2
   186b8:	ldr	r3, [r1, #-8]
   186bc:	cmp	r3, #0
   186c0:	beq	186e8 <fts_children@@Base+0x8cc>
   186c4:	ldr	r3, [r1, #-4]
   186c8:	add	ip, ip, #1
   186cc:	add	r2, r2, #1
   186d0:	cmp	r3, #0
   186d4:	beq	186e8 <fts_children@@Base+0x8cc>
   186d8:	ldr	r3, [r3, #4]
   186dc:	add	r2, r2, #1
   186e0:	cmp	r3, #0
   186e4:	bne	186d8 <fts_children@@Base+0x8bc>
   186e8:	add	r1, r1, #8
   186ec:	cmp	r1, r4
   186f0:	bne	186b8 <fts_children@@Base+0x89c>
   186f4:	ldr	r3, [r0, #12]
   186f8:	cmp	r3, ip
   186fc:	movne	r0, #0
   18700:	beq	1870c <fts_children@@Base+0x8f0>
   18704:	pop	{r4}		; (ldr r4, [sp], #4)
   18708:	bx	lr
   1870c:	ldr	r0, [r0, #16]
   18710:	pop	{r4}		; (ldr r4, [sp], #4)
   18714:	subs	r3, r0, r2
   18718:	rsbs	r0, r3, #0
   1871c:	adcs	r0, r0, r3
   18720:	bx	lr
   18724:	mov	r2, #0
   18728:	mov	ip, r2
   1872c:	b	186f4 <fts_children@@Base+0x8d8>
   18730:	push	{r4, r5, r6, r7, r8, lr}
   18734:	sub	sp, sp, #8
   18738:	mov	r4, r1
   1873c:	mov	r5, r0
   18740:	bl	18604 <fts_children@@Base+0x7e8>
   18744:	mov	r8, r0
   18748:	mov	r0, r5
   1874c:	bl	185f4 <fts_children@@Base+0x7d8>
   18750:	mov	r6, r0
   18754:	mov	r0, r5
   18758:	bl	185fc <fts_children@@Base+0x7e0>
   1875c:	mov	r7, r0
   18760:	mov	r0, r5
   18764:	bl	1860c <fts_children@@Base+0x7f0>
   18768:	ldr	r2, [pc, #144]	; 18800 <fts_children@@Base+0x9e4>
   1876c:	mov	r3, r8
   18770:	mov	r1, #1
   18774:	add	r2, pc, r2
   18778:	mov	r5, r0
   1877c:	mov	r0, r4
   18780:	bl	11618 <__fprintf_chk@plt>
   18784:	ldr	r2, [pc, #120]	; 18804 <fts_children@@Base+0x9e8>
   18788:	mov	r3, r6
   1878c:	mov	r0, r4
   18790:	mov	r1, #1
   18794:	add	r2, pc, r2
   18798:	bl	11618 <__fprintf_chk@plt>
   1879c:	vmov	s15, r7
   187a0:	vldr	d5, [pc, #80]	; 187f8 <fts_children@@Base+0x9dc>
   187a4:	ldr	r2, [pc, #92]	; 18808 <fts_children@@Base+0x9ec>
   187a8:	vcvt.f64.u32	d4, s15
   187ac:	mov	r3, r7
   187b0:	vmov	s15, r6
   187b4:	mov	r0, r4
   187b8:	mov	r1, #1
   187bc:	add	r2, pc, r2
   187c0:	vmul.f64	d5, d4, d5
   187c4:	vcvt.f64.u32	d6, s15
   187c8:	vdiv.f64	d7, d5, d6
   187cc:	vstr	d7, [sp]
   187d0:	bl	11618 <__fprintf_chk@plt>
   187d4:	ldr	r2, [pc, #48]	; 1880c <fts_children@@Base+0x9f0>
   187d8:	mov	r0, r4
   187dc:	mov	r3, r5
   187e0:	mov	r1, #1
   187e4:	add	r2, pc, r2
   187e8:	add	sp, sp, #8
   187ec:	pop	{r4, r5, r6, r7, r8, lr}
   187f0:	b	11618 <__fprintf_chk@plt>
   187f4:	nop	{0}
   187f8:	andeq	r0, r0, r0
   187fc:	subsmi	r0, r9, r0
   18800:	ldrdeq	r3, [r0], -ip
   18804:	ldrdeq	r3, [r0], -r4
   18808:	andeq	r3, r0, r4, asr #9
   1880c:	andeq	r3, r0, r0, asr #9
   18810:	push	{r4, r5, r6, lr}
   18814:	mov	r6, r0
   18818:	mov	r5, r1
   1881c:	bl	182a0 <fts_children@@Base+0x484>
   18820:	ldr	r3, [r0]
   18824:	mov	r4, r0
   18828:	cmp	r3, #0
   1882c:	bne	18838 <fts_children@@Base+0xa1c>
   18830:	b	18864 <fts_children@@Base+0xa48>
   18834:	ldr	r3, [r4]
   18838:	cmp	r5, r3
   1883c:	mov	r1, r3
   18840:	mov	r0, r5
   18844:	beq	18870 <fts_children@@Base+0xa54>
   18848:	ldr	r3, [r6, #28]
   1884c:	blx	r3
   18850:	cmp	r0, #0
   18854:	bne	1886c <fts_children@@Base+0xa50>
   18858:	ldr	r4, [r4, #4]
   1885c:	cmp	r4, #0
   18860:	bne	18834 <fts_children@@Base+0xa18>
   18864:	mov	r0, #0
   18868:	pop	{r4, r5, r6, pc}
   1886c:	ldr	r3, [r4]
   18870:	mov	r0, r3
   18874:	pop	{r4, r5, r6, pc}
   18878:	push	{r3, lr}
   1887c:	ldr	r3, [r0, #16]
   18880:	cmp	r3, #0
   18884:	beq	188c4 <fts_children@@Base+0xaa8>
   18888:	ldr	r3, [r0]
   1888c:	ldr	r2, [r0, #4]
   18890:	cmp	r3, r2
   18894:	bcs	188c0 <fts_children@@Base+0xaa4>
   18898:	ldr	r0, [r3]
   1889c:	cmp	r0, #0
   188a0:	beq	188b4 <fts_children@@Base+0xa98>
   188a4:	b	188cc <fts_children@@Base+0xab0>
   188a8:	ldr	r0, [r3]
   188ac:	cmp	r0, #0
   188b0:	popne	{r3, pc}
   188b4:	add	r3, r3, #8
   188b8:	cmp	r3, r2
   188bc:	bcc	188a8 <fts_children@@Base+0xa8c>
   188c0:	bl	116e4 <abort@plt>
   188c4:	mov	r0, r3
   188c8:	pop	{r3, pc}
   188cc:	pop	{r3, pc}
   188d0:	push	{r3, r4, r5, lr}
   188d4:	mov	r5, r0
   188d8:	mov	r4, r1
   188dc:	bl	182a0 <fts_children@@Base+0x484>
   188e0:	mov	r2, r0
   188e4:	mov	r3, r0
   188e8:	b	188f4 <fts_children@@Base+0xad8>
   188ec:	cmp	r3, #0
   188f0:	beq	1890c <fts_children@@Base+0xaf0>
   188f4:	ldr	ip, [r3]
   188f8:	ldr	r3, [r3, #4]
   188fc:	cmp	ip, r4
   18900:	bne	188ec <fts_children@@Base+0xad0>
   18904:	cmp	r3, #0
   18908:	bne	18934 <fts_children@@Base+0xb18>
   1890c:	ldr	r3, [r5, #4]
   18910:	b	18920 <fts_children@@Base+0xb04>
   18914:	ldr	r0, [r2]
   18918:	cmp	r0, #0
   1891c:	popne	{r3, r4, r5, pc}
   18920:	add	r2, r2, #8
   18924:	cmp	r2, r3
   18928:	bcc	18914 <fts_children@@Base+0xaf8>
   1892c:	mov	r0, #0
   18930:	pop	{r3, r4, r5, pc}
   18934:	ldr	r0, [r3]
   18938:	pop	{r3, r4, r5, pc}
   1893c:	push	{r4, r5, r6, r7}
   18940:	mov	r6, r0
   18944:	ldm	r0, {r5, ip}
   18948:	cmp	ip, r5
   1894c:	bls	189d0 <fts_children@@Base+0xbb4>
   18950:	add	r5, r5, #8
   18954:	mov	r0, #0
   18958:	ldr	r3, [r5, #-8]
   1895c:	mov	r7, r5
   18960:	cmp	r3, #0
   18964:	beq	189b0 <fts_children@@Base+0xb94>
   18968:	cmp	r2, r0
   1896c:	bls	189bc <fts_children@@Base+0xba0>
   18970:	str	r3, [r1, r0, lsl #2]
   18974:	add	r4, r0, #1
   18978:	ldr	r3, [r5, #-4]
   1897c:	add	ip, r1, r0, lsl #2
   18980:	cmp	r3, #0
   18984:	beq	189c4 <fts_children@@Base+0xba8>
   18988:	mov	r0, r4
   1898c:	cmp	r0, r2
   18990:	beq	189bc <fts_children@@Base+0xba0>
   18994:	ldr	r4, [r3]
   18998:	add	r0, r0, #1
   1899c:	str	r4, [ip, #4]!
   189a0:	ldr	r3, [r3, #4]
   189a4:	cmp	r3, #0
   189a8:	bne	1898c <fts_children@@Base+0xb70>
   189ac:	ldr	ip, [r6, #4]
   189b0:	cmp	ip, r7
   189b4:	add	r5, r5, #8
   189b8:	bhi	18958 <fts_children@@Base+0xb3c>
   189bc:	pop	{r4, r5, r6, r7}
   189c0:	bx	lr
   189c4:	ldr	ip, [r6, #4]
   189c8:	mov	r0, r4
   189cc:	b	189b0 <fts_children@@Base+0xb94>
   189d0:	mov	r0, #0
   189d4:	b	189bc <fts_children@@Base+0xba0>
   189d8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   189dc:	mov	r7, r2
   189e0:	ldr	r8, [r0]
   189e4:	mov	r9, r0
   189e8:	ldr	r2, [r0, #4]
   189ec:	mov	r6, r1
   189f0:	mov	r5, #0
   189f4:	cmp	r2, r8
   189f8:	bls	18a48 <fts_children@@Base+0xc2c>
   189fc:	ldr	r3, [r8]
   18a00:	cmp	r3, #0
   18a04:	beq	18a3c <fts_children@@Base+0xc20>
   18a08:	mov	r0, r3
   18a0c:	mov	r4, r8
   18a10:	b	18a18 <fts_children@@Base+0xbfc>
   18a14:	ldr	r0, [r4]
   18a18:	mov	r1, r7
   18a1c:	blx	r6
   18a20:	cmp	r0, #0
   18a24:	beq	18a48 <fts_children@@Base+0xc2c>
   18a28:	ldr	r4, [r4, #4]
   18a2c:	add	r5, r5, #1
   18a30:	cmp	r4, #0
   18a34:	bne	18a14 <fts_children@@Base+0xbf8>
   18a38:	ldr	r2, [r9, #4]
   18a3c:	add	r8, r8, #8
   18a40:	cmp	r2, r8
   18a44:	bhi	189fc <fts_children@@Base+0xbe0>
   18a48:	mov	r0, r5
   18a4c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18a50:	push	{r3, r4, r5, lr}
   18a54:	mov	r5, r1
   18a58:	ldrb	r3, [r0]
   18a5c:	cmp	r3, #0
   18a60:	beq	18a90 <fts_children@@Base+0xc74>
   18a64:	mov	r4, r0
   18a68:	mov	r1, #0
   18a6c:	rsb	r0, r1, r1, lsl #5
   18a70:	mov	r1, r5
   18a74:	add	r0, r3, r0
   18a78:	bl	19d3c <fts_children@@Base+0x1f20>
   18a7c:	ldrb	r3, [r4, #1]!
   18a80:	cmp	r3, #0
   18a84:	bne	18a6c <fts_children@@Base+0xc50>
   18a88:	mov	r0, r1
   18a8c:	pop	{r3, r4, r5, pc}
   18a90:	mov	r1, r3
   18a94:	b	18a88 <fts_children@@Base+0xc6c>
   18a98:	push	{r4}		; (str r4, [sp, #-4]!)
   18a9c:	mov	ip, r0
   18aa0:	ldr	r4, [pc, #24]	; 18ac0 <fts_children@@Base+0xca4>
   18aa4:	add	r4, pc, r4
   18aa8:	ldm	r4!, {r0, r1, r2, r3}
   18aac:	ldr	r4, [r4]
   18ab0:	stmia	ip!, {r0, r1, r2, r3}
   18ab4:	str	r4, [ip]
   18ab8:	pop	{r4}		; (ldr r4, [sp], #4)
   18abc:	bx	lr
   18ac0:	muleq	r0, r8, r1
   18ac4:	push	{r4, r5, r6, r7, r8, lr}
   18ac8:	subs	r8, r2, #0
   18acc:	mov	r7, r0
   18ad0:	mov	r5, r1
   18ad4:	mov	r6, r3
   18ad8:	beq	18bcc <fts_children@@Base+0xdb0>
   18adc:	cmp	r6, #0
   18ae0:	beq	18bc0 <fts_children@@Base+0xda4>
   18ae4:	mov	r0, #40	; 0x28
   18ae8:	bl	11528 <malloc@plt>
   18aec:	subs	r4, r0, #0
   18af0:	beq	18be4 <fts_children@@Base+0xdc8>
   18af4:	cmp	r5, #0
   18af8:	beq	18bd8 <fts_children@@Base+0xdbc>
   18afc:	mov	r0, r4
   18b00:	str	r5, [r0, #20]!
   18b04:	bl	183d0 <fts_children@@Base+0x5b4>
   18b08:	cmp	r0, #0
   18b0c:	beq	18bb0 <fts_children@@Base+0xd94>
   18b10:	ldrb	r3, [r5, #16]
   18b14:	vldr	s15, [r5, #8]
   18b18:	cmp	r3, #0
   18b1c:	bne	18b44 <fts_children@@Base+0xd28>
   18b20:	vmov	s14, r7
   18b24:	vcvt.f32.u32	s13, s14
   18b28:	vldr	s14, [pc, #188]	; 18bec <fts_children@@Base+0xdd0>
   18b2c:	vdiv.f32	s15, s13, s15
   18b30:	vcmpe.f32	s15, s14
   18b34:	vmrs	APSR_nzcv, fpscr
   18b38:	bge	18ba8 <fts_children@@Base+0xd8c>
   18b3c:	vcvt.u32.f32	s15, s15
   18b40:	vmov	r7, s15
   18b44:	mov	r0, r7
   18b48:	bl	181d0 <fts_children@@Base+0x3b4>
   18b4c:	cmn	r0, #-1073741823	; 0xc0000001
   18b50:	mov	r5, r0
   18b54:	bhi	18ba8 <fts_children@@Base+0xd8c>
   18b58:	cmp	r0, #0
   18b5c:	str	r0, [r4, #8]
   18b60:	beq	18bb0 <fts_children@@Base+0xd94>
   18b64:	mov	r1, #8
   18b68:	bl	113a8 <calloc@plt>
   18b6c:	cmp	r0, #0
   18b70:	str	r0, [r4]
   18b74:	beq	18bb0 <fts_children@@Base+0xd94>
   18b78:	ldr	r3, [sp, #24]
   18b7c:	mov	r2, #0
   18b80:	add	r5, r0, r5, lsl #3
   18b84:	str	r8, [r4, #24]
   18b88:	str	r5, [r4, #4]
   18b8c:	mov	r0, r4
   18b90:	str	r6, [r4, #28]
   18b94:	str	r3, [r4, #32]
   18b98:	str	r2, [r4, #12]
   18b9c:	str	r2, [r4, #16]
   18ba0:	str	r2, [r4, #36]	; 0x24
   18ba4:	pop	{r4, r5, r6, r7, r8, pc}
   18ba8:	mov	r3, #0
   18bac:	str	r3, [r4, #8]
   18bb0:	mov	r0, r4
   18bb4:	bl	11414 <free@plt>
   18bb8:	mov	r0, #0
   18bbc:	pop	{r4, r5, r6, r7, r8, pc}
   18bc0:	ldr	r6, [pc, #40]	; 18bf0 <fts_children@@Base+0xdd4>
   18bc4:	add	r6, pc, r6
   18bc8:	b	18ae4 <fts_children@@Base+0xcc8>
   18bcc:	ldr	r8, [pc, #32]	; 18bf4 <fts_children@@Base+0xdd8>
   18bd0:	add	r8, pc, r8
   18bd4:	b	18adc <fts_children@@Base+0xcc0>
   18bd8:	ldr	r5, [pc, #24]	; 18bf8 <fts_children@@Base+0xddc>
   18bdc:	add	r5, pc, r5
   18be0:	b	18afc <fts_children@@Base+0xce0>
   18be4:	mov	r0, r4
   18be8:	pop	{r4, r5, r6, r7, r8, pc}
   18bec:	svcmi	0x00800000
   18bf0:			; <UNDEFINED> instruction: 0xfffff6c4
   18bf4:			; <UNDEFINED> instruction: 0xfffff6a4
   18bf8:	andeq	r3, r0, r0, rrx
   18bfc:	push	{r4, r5, r6, r7, r8, lr}
   18c00:	mov	r5, r0
   18c04:	ldr	r7, [r0]
   18c08:	ldr	r3, [r0, #4]
   18c0c:	cmp	r7, r3
   18c10:	addcc	r7, r7, #8
   18c14:	movcc	r6, #0
   18c18:	bcs	18c98 <fts_children@@Base+0xe7c>
   18c1c:	ldr	r2, [r7, #-8]
   18c20:	mov	r8, r7
   18c24:	cmp	r2, #0
   18c28:	beq	18c8c <fts_children@@Base+0xe70>
   18c2c:	ldr	r4, [r7, #-4]
   18c30:	cmp	r4, #0
   18c34:	beq	18c6c <fts_children@@Base+0xe50>
   18c38:	ldr	r3, [r5, #32]
   18c3c:	cmp	r3, #0
   18c40:	beq	18c4c <fts_children@@Base+0xe30>
   18c44:	ldr	r0, [r4]
   18c48:	blx	r3
   18c4c:	ldr	r3, [r4, #4]
   18c50:	str	r6, [r4]
   18c54:	ldr	r2, [r5, #36]	; 0x24
   18c58:	cmp	r3, #0
   18c5c:	str	r2, [r4, #4]
   18c60:	str	r4, [r5, #36]	; 0x24
   18c64:	mov	r4, r3
   18c68:	bne	18c38 <fts_children@@Base+0xe1c>
   18c6c:	ldr	r3, [r5, #32]
   18c70:	cmp	r3, #0
   18c74:	beq	18c80 <fts_children@@Base+0xe64>
   18c78:	ldr	r0, [r7, #-8]
   18c7c:	blx	r3
   18c80:	str	r6, [r7, #-8]
   18c84:	str	r6, [r7, #-4]
   18c88:	ldr	r3, [r5, #4]
   18c8c:	cmp	r3, r8
   18c90:	add	r7, r7, #8
   18c94:	bhi	18c1c <fts_children@@Base+0xe00>
   18c98:	mov	r3, #0
   18c9c:	str	r3, [r5, #12]
   18ca0:	str	r3, [r5, #16]
   18ca4:	pop	{r4, r5, r6, r7, r8, pc}
   18ca8:	push	{r3, r4, r5, r6, r7, lr}
   18cac:	mov	r5, r0
   18cb0:	ldr	r3, [r0, #32]
   18cb4:	cmp	r3, #0
   18cb8:	beq	18cc8 <fts_children@@Base+0xeac>
   18cbc:	ldr	r3, [r0, #16]
   18cc0:	cmp	r3, #0
   18cc4:	bne	18d44 <fts_children@@Base+0xf28>
   18cc8:	ldr	r3, [r5, #4]
   18ccc:	ldr	r6, [r5]
   18cd0:	cmp	r6, r3
   18cd4:	bcs	18d10 <fts_children@@Base+0xef4>
   18cd8:	add	r6, r6, #8
   18cdc:	ldr	r0, [r6, #-4]
   18ce0:	mov	r7, r6
   18ce4:	cmp	r0, #0
   18ce8:	beq	18d04 <fts_children@@Base+0xee8>
   18cec:	ldr	r4, [r0, #4]
   18cf0:	bl	11414 <free@plt>
   18cf4:	cmp	r4, #0
   18cf8:	mov	r0, r4
   18cfc:	bne	18cec <fts_children@@Base+0xed0>
   18d00:	ldr	r3, [r5, #4]
   18d04:	cmp	r7, r3
   18d08:	add	r6, r6, #8
   18d0c:	bcc	18cdc <fts_children@@Base+0xec0>
   18d10:	ldr	r0, [r5, #36]	; 0x24
   18d14:	cmp	r0, #0
   18d18:	beq	18d30 <fts_children@@Base+0xf14>
   18d1c:	ldr	r4, [r0, #4]
   18d20:	bl	11414 <free@plt>
   18d24:	cmp	r4, #0
   18d28:	mov	r0, r4
   18d2c:	bne	18d1c <fts_children@@Base+0xf00>
   18d30:	ldr	r0, [r5]
   18d34:	bl	11414 <free@plt>
   18d38:	mov	r0, r5
   18d3c:	pop	{r3, r4, r5, r6, r7, lr}
   18d40:	b	11414 <free@plt>
   18d44:	ldr	r6, [r0]
   18d48:	ldr	r3, [r0, #4]
   18d4c:	cmp	r6, r3
   18d50:	bcs	18d10 <fts_children@@Base+0xef4>
   18d54:	ldr	r0, [r6]
   18d58:	cmp	r0, #0
   18d5c:	movne	r4, r6
   18d60:	bne	18d6c <fts_children@@Base+0xf50>
   18d64:	b	18d84 <fts_children@@Base+0xf68>
   18d68:	ldr	r0, [r4]
   18d6c:	ldr	r3, [r5, #32]
   18d70:	blx	r3
   18d74:	ldr	r4, [r4, #4]
   18d78:	cmp	r4, #0
   18d7c:	bne	18d68 <fts_children@@Base+0xf4c>
   18d80:	ldr	r3, [r5, #4]
   18d84:	add	r6, r6, #8
   18d88:	cmp	r3, r6
   18d8c:	bhi	18d54 <fts_children@@Base+0xf38>
   18d90:	b	18ccc <fts_children@@Base+0xeb0>
   18d94:	ldr	r3, [pc, #392]	; 18f24 <fts_children@@Base+0x1108>
   18d98:	ldr	r2, [pc, #392]	; 18f28 <fts_children@@Base+0x110c>
   18d9c:	add	r3, pc, r3
   18da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18da4:	sub	sp, sp, #52	; 0x34
   18da8:	ldr	r5, [r0, #20]
   18dac:	mov	r4, r0
   18db0:	ldr	r6, [r3, r2]
   18db4:	vldr	s15, [r5, #8]
   18db8:	ldrb	r2, [r5, #16]
   18dbc:	ldr	r3, [r6]
   18dc0:	cmp	r2, #0
   18dc4:	str	r3, [sp, #44]	; 0x2c
   18dc8:	bne	18df0 <fts_children@@Base+0xfd4>
   18dcc:	vmov	s14, r1
   18dd0:	vcvt.f32.u32	s13, s14
   18dd4:	vldr	s14, [pc, #324]	; 18f20 <fts_children@@Base+0x1104>
   18dd8:	vdiv.f32	s15, s13, s15
   18ddc:	vcmpe.f32	s15, s14
   18de0:	vmrs	APSR_nzcv, fpscr
   18de4:	bge	18ee8 <fts_children@@Base+0x10cc>
   18de8:	vcvt.u32.f32	s15, s15
   18dec:	vmov	r1, s15
   18df0:	mov	r0, r1
   18df4:	bl	181d0 <fts_children@@Base+0x3b4>
   18df8:	sub	r3, r0, #1
   18dfc:	mov	r7, r0
   18e00:	cmn	r3, #-1073741822	; 0xc0000002
   18e04:	bhi	18ee8 <fts_children@@Base+0x10cc>
   18e08:	ldr	r3, [r4, #8]
   18e0c:	cmp	r3, r0
   18e10:	beq	18ec8 <fts_children@@Base+0x10ac>
   18e14:	mov	r1, #8
   18e18:	bl	113a8 <calloc@plt>
   18e1c:	cmp	r0, #0
   18e20:	mov	r3, r0
   18e24:	str	r0, [sp, #4]
   18e28:	beq	18ee8 <fts_children@@Base+0x10cc>
   18e2c:	ldr	fp, [r4, #24]
   18e30:	add	r8, sp, #4
   18e34:	ldr	sl, [r4, #28]
   18e38:	mov	ip, #0
   18e3c:	ldr	r9, [r4, #32]
   18e40:	mov	r0, r8
   18e44:	ldr	lr, [r4, #36]	; 0x24
   18e48:	mov	r2, ip
   18e4c:	mov	r1, r4
   18e50:	add	r3, r3, r7, lsl #3
   18e54:	str	r5, [sp, #24]
   18e58:	str	r7, [sp, #12]
   18e5c:	str	r3, [sp, #8]
   18e60:	str	fp, [sp, #28]
   18e64:	str	sl, [sp, #32]
   18e68:	str	r9, [sp, #36]	; 0x24
   18e6c:	str	lr, [sp, #40]	; 0x28
   18e70:	str	ip, [sp, #16]
   18e74:	str	ip, [sp, #20]
   18e78:	bl	18490 <fts_children@@Base+0x674>
   18e7c:	subs	r5, r0, #0
   18e80:	bne	18ef0 <fts_children@@Base+0x10d4>
   18e84:	ldr	r3, [sp, #40]	; 0x28
   18e88:	mov	r0, r4
   18e8c:	mov	r1, r8
   18e90:	mov	r2, #1
   18e94:	str	r3, [r4, #36]	; 0x24
   18e98:	bl	18490 <fts_children@@Base+0x674>
   18e9c:	cmp	r0, #0
   18ea0:	beq	18f1c <fts_children@@Base+0x1100>
   18ea4:	mov	r0, r4
   18ea8:	mov	r1, r8
   18eac:	mov	r2, r5
   18eb0:	bl	18490 <fts_children@@Base+0x674>
   18eb4:	cmp	r0, #0
   18eb8:	beq	18f1c <fts_children@@Base+0x1100>
   18ebc:	ldr	r0, [sp, #4]
   18ec0:	bl	11414 <free@plt>
   18ec4:	b	18ecc <fts_children@@Base+0x10b0>
   18ec8:	mov	r5, #1
   18ecc:	ldr	r1, [sp, #44]	; 0x2c
   18ed0:	mov	r0, r5
   18ed4:	ldr	r3, [r6]
   18ed8:	cmp	r1, r3
   18edc:	bne	18f18 <fts_children@@Base+0x10fc>
   18ee0:	add	sp, sp, #52	; 0x34
   18ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ee8:	mov	r5, #0
   18eec:	b	18ecc <fts_children@@Base+0x10b0>
   18ef0:	ldr	r0, [r4]
   18ef4:	bl	11414 <free@plt>
   18ef8:	add	r0, sp, #8
   18efc:	ldr	ip, [sp, #4]
   18f00:	ldm	r0, {r0, r1, r2}
   18f04:	ldr	r3, [sp, #40]	; 0x28
   18f08:	str	ip, [r4]
   18f0c:	stmib	r4, {r0, r1, r2}
   18f10:	str	r3, [r4, #36]	; 0x24
   18f14:	b	18ecc <fts_children@@Base+0x10b0>
   18f18:	bl	11474 <__stack_chk_fail@plt>
   18f1c:	bl	116e4 <abort@plt>
   18f20:	svcmi	0x00800000
   18f24:	andeq	r4, r1, ip, asr r2
   18f28:	andeq	r0, r0, ip, asr #2
   18f2c:	ldr	r3, [pc, #428]	; 190e0 <fts_children@@Base+0x12c4>
   18f30:	ldr	ip, [pc, #428]	; 190e4 <fts_children@@Base+0x12c8>
   18f34:	add	r3, pc, r3
   18f38:	push	{r4, r5, r6, r7, r8, lr}
   18f3c:	subs	r8, r1, #0
   18f40:	ldr	r4, [r3, ip]
   18f44:	sub	sp, sp, #8
   18f48:	mov	r5, r2
   18f4c:	mov	r6, r0
   18f50:	ldr	r3, [r4]
   18f54:	str	r3, [sp, #4]
   18f58:	beq	19098 <fts_children@@Base+0x127c>
   18f5c:	mov	r3, #0
   18f60:	mov	r2, sp
   18f64:	bl	182d4 <fts_children@@Base+0x4b8>
   18f68:	cmp	r0, #0
   18f6c:	beq	18f98 <fts_children@@Base+0x117c>
   18f70:	cmp	r5, #0
   18f74:	moveq	r0, r5
   18f78:	strne	r0, [r5]
   18f7c:	movne	r0, #0
   18f80:	ldr	r2, [sp, #4]
   18f84:	ldr	r3, [r4]
   18f88:	cmp	r2, r3
   18f8c:	bne	190d8 <fts_children@@Base+0x12bc>
   18f90:	add	sp, sp, #8
   18f94:	pop	{r4, r5, r6, r7, r8, pc}
   18f98:	vldr	s11, [r6, #8]
   18f9c:	vcvt.f32.u32	s14, s11
   18fa0:	ldr	r3, [r6, #20]
   18fa4:	vldr	s15, [r3, #8]
   18fa8:	vldr	s13, [r6, #12]
   18fac:	vmul.f32	s15, s14, s15
   18fb0:	vcvt.f32.u32	s14, s13
   18fb4:	vcmpe.f32	s14, s15
   18fb8:	vmrs	APSR_nzcv, fpscr
   18fbc:	bgt	1900c <fts_children@@Base+0x11f0>
   18fc0:	ldr	r3, [sp]
   18fc4:	ldr	r2, [r3]
   18fc8:	cmp	r2, #0
   18fcc:	beq	1909c <fts_children@@Base+0x1280>
   18fd0:	ldr	r3, [r6, #36]	; 0x24
   18fd4:	cmp	r3, #0
   18fd8:	beq	190c0 <fts_children@@Base+0x12a4>
   18fdc:	ldr	r2, [r3, #4]
   18fe0:	str	r2, [r6, #36]	; 0x24
   18fe4:	str	r8, [r3]
   18fe8:	mov	r0, #1
   18fec:	ldr	r2, [sp]
   18ff0:	ldr	r1, [r2, #4]
   18ff4:	str	r1, [r3, #4]
   18ff8:	str	r3, [r2, #4]
   18ffc:	ldr	r3, [r6, #16]
   19000:	add	r3, r3, r0
   19004:	str	r3, [r6, #16]
   19008:	b	18f80 <fts_children@@Base+0x1164>
   1900c:	add	r0, r6, #20
   19010:	bl	183d0 <fts_children@@Base+0x5b4>
   19014:	vldr	s11, [r6, #8]
   19018:	vcvt.f32.u32	s15, s11
   1901c:	ldr	r3, [r6, #20]
   19020:	vldr	s14, [r3, #8]
   19024:	vldr	s11, [r6, #12]
   19028:	vmul.f32	s13, s14, s15
   1902c:	vcvt.f32.u32	s12, s11
   19030:	vcmpe.f32	s12, s13
   19034:	vmrs	APSR_nzcv, fpscr
   19038:	ble	18fc0 <fts_children@@Base+0x11a4>
   1903c:	ldrb	r2, [r3, #16]
   19040:	cmp	r2, #0
   19044:	vldreq	s13, [r3, #12]
   19048:	vldrne	s14, [r3, #12]
   1904c:	vmuleq.f32	s15, s15, s13
   19050:	vmul.f32	s15, s14, s15
   19054:	vldr	s14, [pc, #128]	; 190dc <fts_children@@Base+0x12c0>
   19058:	vcmpe.f32	s15, s14
   1905c:	vmrs	APSR_nzcv, fpscr
   19060:	bge	190d0 <fts_children@@Base+0x12b4>
   19064:	vcvt.u32.f32	s15, s15
   19068:	mov	r0, r6
   1906c:	vmov	r1, s15
   19070:	bl	18d94 <fts_children@@Base+0xf78>
   19074:	cmp	r0, #0
   19078:	beq	190d0 <fts_children@@Base+0x12b4>
   1907c:	mov	r2, sp
   19080:	mov	r0, r6
   19084:	mov	r1, r8
   19088:	mov	r3, #0
   1908c:	bl	182d4 <fts_children@@Base+0x4b8>
   19090:	cmp	r0, #0
   19094:	beq	18fc0 <fts_children@@Base+0x11a4>
   19098:	bl	116e4 <abort@plt>
   1909c:	str	r8, [r3]
   190a0:	mov	r0, #1
   190a4:	ldr	r2, [r6, #16]
   190a8:	ldr	r3, [r6, #12]
   190ac:	add	r2, r2, r0
   190b0:	str	r2, [r6, #16]
   190b4:	add	r3, r3, r0
   190b8:	str	r3, [r6, #12]
   190bc:	b	18f80 <fts_children@@Base+0x1164>
   190c0:	mov	r0, #8
   190c4:	bl	11528 <malloc@plt>
   190c8:	subs	r3, r0, #0
   190cc:	bne	18fe4 <fts_children@@Base+0x11c8>
   190d0:	mvn	r0, #0
   190d4:	b	18f80 <fts_children@@Base+0x1164>
   190d8:	bl	11474 <__stack_chk_fail@plt>
   190dc:	svcmi	0x00800000
   190e0:	andeq	r4, r1, r4, asr #1
   190e4:	andeq	r0, r0, ip, asr #2
   190e8:	b	18f2c <fts_children@@Base+0x1110>
   190ec:	ldr	r3, [pc, #100]	; 19158 <fts_children@@Base+0x133c>
   190f0:	ldr	ip, [pc, #100]	; 1915c <fts_children@@Base+0x1340>
   190f4:	add	r3, pc, r3
   190f8:	push	{r4, r5, lr}
   190fc:	sub	sp, sp, #12
   19100:	ldr	r4, [r3, ip]
   19104:	mov	r5, r1
   19108:	mov	r2, sp
   1910c:	ldr	r3, [r4]
   19110:	str	r3, [sp, #4]
   19114:	bl	18f2c <fts_children@@Base+0x1110>
   19118:	cmn	r0, #1
   1911c:	beq	1914c <fts_children@@Base+0x1330>
   19120:	cmp	r0, #0
   19124:	movne	r0, r5
   19128:	beq	19144 <fts_children@@Base+0x1328>
   1912c:	ldr	r2, [sp, #4]
   19130:	ldr	r3, [r4]
   19134:	cmp	r2, r3
   19138:	bne	19154 <fts_children@@Base+0x1338>
   1913c:	add	sp, sp, #12
   19140:	pop	{r4, r5, pc}
   19144:	ldr	r0, [sp]
   19148:	b	1912c <fts_children@@Base+0x1310>
   1914c:	mov	r0, #0
   19150:	b	1912c <fts_children@@Base+0x1310>
   19154:	bl	11474 <__stack_chk_fail@plt>
   19158:	andeq	r3, r1, r4, lsl #30
   1915c:	andeq	r0, r0, ip, asr #2
   19160:	ldr	ip, [pc, #304]	; 19298 <fts_children@@Base+0x147c>
   19164:	mov	r3, #1
   19168:	push	{r4, r5, r6, r7, lr}
   1916c:	add	ip, pc, ip
   19170:	ldr	lr, [pc, #292]	; 1929c <fts_children@@Base+0x1480>
   19174:	sub	sp, sp, #12
   19178:	mov	r4, r0
   1917c:	mov	r2, sp
   19180:	ldr	r5, [ip, lr]
   19184:	ldr	ip, [r5]
   19188:	str	ip, [sp, #4]
   1918c:	bl	182d4 <fts_children@@Base+0x4b8>
   19190:	subs	r6, r0, #0
   19194:	beq	191b4 <fts_children@@Base+0x1398>
   19198:	ldr	r3, [sp]
   1919c:	ldr	r2, [r4, #16]
   191a0:	sub	r2, r2, #1
   191a4:	str	r2, [r4, #16]
   191a8:	ldr	r3, [r3]
   191ac:	cmp	r3, #0
   191b0:	beq	191d0 <fts_children@@Base+0x13b4>
   191b4:	ldr	r2, [sp, #4]
   191b8:	mov	r0, r6
   191bc:	ldr	r3, [r5]
   191c0:	cmp	r2, r3
   191c4:	bne	19294 <fts_children@@Base+0x1478>
   191c8:	add	sp, sp, #12
   191cc:	pop	{r4, r5, r6, r7, pc}
   191d0:	vldr	s12, [r4, #8]
   191d4:	vcvt.f32.u32	s14, s12
   191d8:	ldr	r3, [r4, #12]
   191dc:	ldr	r2, [r4, #20]
   191e0:	sub	r3, r3, #1
   191e4:	str	r3, [r4, #12]
   191e8:	vldr	s15, [r2]
   191ec:	vmov	s13, r3
   191f0:	vmul.f32	s15, s14, s15
   191f4:	vcvt.f32.u32	s14, s13
   191f8:	vcmpe.f32	s14, s15
   191fc:	vmrs	APSR_nzcv, fpscr
   19200:	bpl	191b4 <fts_children@@Base+0x1398>
   19204:	add	r0, r4, #20
   19208:	bl	183d0 <fts_children@@Base+0x5b4>
   1920c:	vldr	s12, [r4, #8]
   19210:	vcvt.f32.u32	s15, s12
   19214:	ldr	r3, [r4, #20]
   19218:	vldr	s14, [r3]
   1921c:	vldr	s12, [r4, #12]
   19220:	vmul.f32	s14, s15, s14
   19224:	vcvt.f32.u32	s13, s12
   19228:	vcmpe.f32	s13, s14
   1922c:	vmrs	APSR_nzcv, fpscr
   19230:	bpl	191b4 <fts_children@@Base+0x1398>
   19234:	vldr	s14, [r3, #4]
   19238:	vmul.f32	s15, s15, s14
   1923c:	ldrb	r2, [r3, #16]
   19240:	mov	r0, r4
   19244:	cmp	r2, #0
   19248:	vldreq	s14, [r3, #8]
   1924c:	vmuleq.f32	s15, s15, s14
   19250:	vcvt.u32.f32	s15, s15
   19254:	vmov	r1, s15
   19258:	bl	18d94 <fts_children@@Base+0xf78>
   1925c:	cmp	r0, #0
   19260:	bne	191b4 <fts_children@@Base+0x1398>
   19264:	ldr	r0, [r4, #36]	; 0x24
   19268:	cmp	r0, #0
   1926c:	bne	19278 <fts_children@@Base+0x145c>
   19270:	b	19288 <fts_children@@Base+0x146c>
   19274:	mov	r0, r7
   19278:	ldr	r7, [r0, #4]
   1927c:	bl	11414 <free@plt>
   19280:	cmp	r7, #0
   19284:	bne	19274 <fts_children@@Base+0x1458>
   19288:	mov	r3, #0
   1928c:	str	r3, [r4, #36]	; 0x24
   19290:	b	191b4 <fts_children@@Base+0x1398>
   19294:	bl	11474 <__stack_chk_fail@plt>
   19298:	andeq	r3, r1, ip, lsl #29
   1929c:	andeq	r0, r0, ip, asr #2
   192a0:	mov	r3, #0
   192a4:	mov	r2, #1
   192a8:	str	r1, [r0]
   192ac:	str	r1, [r0, #4]
   192b0:	str	r1, [r0, #8]
   192b4:	str	r1, [r0, #12]
   192b8:	str	r1, [r0, #16]
   192bc:	strb	r2, [r0, #28]
   192c0:	str	r3, [r0, #20]
   192c4:	str	r3, [r0, #24]
   192c8:	bx	lr
   192cc:	ldrb	r0, [r0, #28]
   192d0:	bx	lr
   192d4:	ldrb	ip, [r0, #28]
   192d8:	mov	r3, r0
   192dc:	ldr	r2, [r0, #20]
   192e0:	eor	ip, ip, #1
   192e4:	add	r2, ip, r2
   192e8:	and	r2, r2, #3
   192ec:	ldr	r0, [r0, r2, lsl #2]
   192f0:	str	r1, [r3, r2, lsl #2]
   192f4:	ldr	r1, [r3, #24]
   192f8:	str	r2, [r3, #20]
   192fc:	cmp	r1, r2
   19300:	mov	r2, #0
   19304:	addeq	r1, ip, r1
   19308:	strb	r2, [r3, #28]
   1930c:	andeq	r1, r1, #3
   19310:	streq	r1, [r3, #24]
   19314:	bx	lr
   19318:	push	{r4, lr}
   1931c:	mov	r4, r0
   19320:	bl	192cc <fts_children@@Base+0x14b0>
   19324:	cmp	r0, #0
   19328:	bne	1935c <fts_children@@Base+0x1540>
   1932c:	ldr	r3, [r4, #20]
   19330:	ldr	r2, [r4, #16]
   19334:	ldr	r0, [r4, r3, lsl #2]
   19338:	str	r2, [r4, r3, lsl #2]
   1933c:	ldr	r2, [r4, #24]
   19340:	cmp	r3, r2
   19344:	addne	r3, r3, #3
   19348:	moveq	r3, #1
   1934c:	andne	r3, r3, #3
   19350:	strbeq	r3, [r4, #28]
   19354:	strne	r3, [r4, #20]
   19358:	pop	{r4, pc}
   1935c:	bl	116e4 <abort@plt>
   19360:	ldr	r3, [pc, #984]	; 19740 <fts_children@@Base+0x1924>
   19364:	mov	r0, #14
   19368:	ldr	r2, [pc, #980]	; 19744 <fts_children@@Base+0x1928>
   1936c:	add	r3, pc, r3
   19370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19374:	sub	sp, sp, #132	; 0x84
   19378:	ldr	r6, [r3, r2]
   1937c:	ldr	r3, [r6]
   19380:	str	r3, [sp, #124]	; 0x7c
   19384:	bl	1166c <nl_langinfo@plt>
   19388:	subs	r5, r0, #0
   1938c:	beq	19440 <fts_children@@Base+0x1624>
   19390:	ldr	r3, [pc, #944]	; 19748 <fts_children@@Base+0x192c>
   19394:	ldr	r4, [pc, r3]
   19398:	cmp	r4, #0
   1939c:	beq	1944c <fts_children@@Base+0x1630>
   193a0:	ldrb	r7, [r4]
   193a4:	cmp	r7, #0
   193a8:	bne	193dc <fts_children@@Base+0x15c0>
   193ac:	b	19414 <fts_children@@Base+0x15f8>
   193b0:	mov	r0, r4
   193b4:	bl	11588 <strlen@plt>
   193b8:	add	r0, r0, #1
   193bc:	add	r7, r4, r0
   193c0:	mov	r0, r7
   193c4:	bl	11588 <strlen@plt>
   193c8:	add	r0, r0, #1
   193cc:	add	r4, r7, r0
   193d0:	ldrb	r7, [r7, r0]
   193d4:	cmp	r7, #0
   193d8:	beq	19414 <fts_children@@Base+0x15f8>
   193dc:	mov	r0, r5
   193e0:	mov	r1, r4
   193e4:	bl	113e4 <strcmp@plt>
   193e8:	cmp	r0, #0
   193ec:	beq	19404 <fts_children@@Base+0x15e8>
   193f0:	cmp	r7, #42	; 0x2a
   193f4:	bne	193b0 <fts_children@@Base+0x1594>
   193f8:	ldrb	r3, [r4, #1]
   193fc:	cmp	r3, #0
   19400:	bne	193b0 <fts_children@@Base+0x1594>
   19404:	mov	r0, r4
   19408:	bl	11588 <strlen@plt>
   1940c:	add	r0, r0, #1
   19410:	add	r5, r4, r0
   19414:	ldrb	r3, [r5]
   19418:	cmp	r3, #0
   1941c:	ldreq	r5, [pc, #808]	; 1974c <fts_children@@Base+0x1930>
   19420:	addeq	r5, pc, r5
   19424:	ldr	r2, [sp, #124]	; 0x7c
   19428:	mov	r0, r5
   1942c:	ldr	r3, [r6]
   19430:	cmp	r2, r3
   19434:	bne	19714 <fts_children@@Base+0x18f8>
   19438:	add	sp, sp, #132	; 0x84
   1943c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19440:	ldr	r5, [pc, #776]	; 19750 <fts_children@@Base+0x1934>
   19444:	add	r5, pc, r5
   19448:	b	19390 <fts_children@@Base+0x1574>
   1944c:	ldr	r0, [pc, #768]	; 19754 <fts_children@@Base+0x1938>
   19450:	add	r0, pc, r0
   19454:	bl	1151c <getenv@plt>
   19458:	subs	r8, r0, #0
   1945c:	beq	196ec <fts_children@@Base+0x18d0>
   19460:	ldrb	r3, [r8]
   19464:	cmp	r3, #0
   19468:	beq	19680 <fts_children@@Base+0x1864>
   1946c:	bl	11588 <strlen@plt>
   19470:	subs	sl, r0, #0
   19474:	subne	r3, sl, #1
   19478:	bne	19690 <fts_children@@Base+0x1874>
   1947c:	mov	r9, #0
   19480:	mov	fp, r9
   19484:	add	r9, sl, r9
   19488:	add	r0, r9, #14
   1948c:	bl	11528 <malloc@plt>
   19490:	subs	r7, r0, #0
   19494:	beq	196e0 <fts_children@@Base+0x18c4>
   19498:	mov	r1, r8
   1949c:	mov	r2, sl
   194a0:	bl	11438 <memcpy@plt>
   194a4:	cmp	fp, #0
   194a8:	add	ip, r7, r9
   194ac:	movne	r3, #47	; 0x2f
   194b0:	strbne	r3, [r7, sl]
   194b4:	ldr	r3, [pc, #668]	; 19758 <fts_children@@Base+0x193c>
   194b8:	add	r3, pc, r3
   194bc:	ldm	r3!, {r0, r1, r2}
   194c0:	ldrh	r3, [r3]
   194c4:	str	r0, [r7, r9]
   194c8:	mov	r0, r7
   194cc:	str	r1, [ip, #4]
   194d0:	mov	r1, #32768	; 0x8000
   194d4:	strh	r3, [ip, #12]
   194d8:	str	r2, [ip, #8]
   194dc:	bl	11510 <open64@plt>
   194e0:	subs	r8, r0, #0
   194e4:	blt	196a8 <fts_children@@Base+0x188c>
   194e8:	ldr	r1, [pc, #620]	; 1975c <fts_children@@Base+0x1940>
   194ec:	add	r1, pc, r1
   194f0:	bl	11390 <fdopen@plt>
   194f4:	subs	fp, r0, #0
   194f8:	beq	19700 <fts_children@@Base+0x18e4>
   194fc:	ldr	r0, [pc, #604]	; 19760 <fts_children@@Base+0x1944>
   19500:	add	sl, sp, #20
   19504:	add	r9, sp, #72	; 0x48
   19508:	mov	r8, #0
   1950c:	add	r0, pc, r0
   19510:	str	r0, [sp, #12]
   19514:	ldr	r3, [fp, #4]
   19518:	ldr	r2, [fp, #8]
   1951c:	cmp	r3, r2
   19520:	bcs	1960c <fts_children@@Base+0x17f0>
   19524:	add	r2, r3, #1
   19528:	str	r2, [fp, #4]
   1952c:	ldrb	r0, [r3]
   19530:	cmp	r0, #32
   19534:	beq	19514 <fts_children@@Base+0x16f8>
   19538:	sub	r3, r0, #9
   1953c:	cmp	r3, #1
   19540:	bls	19514 <fts_children@@Base+0x16f8>
   19544:	cmp	r0, #35	; 0x23
   19548:	beq	19620 <fts_children@@Base+0x1804>
   1954c:	mov	r1, fp
   19550:	bl	115b8 <ungetc@plt>
   19554:	mov	r0, fp
   19558:	ldr	r1, [sp, #12]
   1955c:	mov	r2, sl
   19560:	mov	r3, r9
   19564:	bl	115f4 <fscanf@plt>
   19568:	cmp	r0, #1
   1956c:	ble	19650 <fts_children@@Base+0x1834>
   19570:	mov	r0, sl
   19574:	bl	11588 <strlen@plt>
   19578:	str	r0, [sp, #8]
   1957c:	mov	r0, r9
   19580:	bl	11588 <strlen@plt>
   19584:	cmp	r8, #0
   19588:	mov	r2, r0
   1958c:	bne	196b4 <fts_children@@Base+0x1898>
   19590:	ldr	r3, [sp, #8]
   19594:	str	r2, [sp]
   19598:	add	r8, r0, r3
   1959c:	add	r0, r8, #3
   195a0:	add	r8, r8, #2
   195a4:	bl	11528 <malloc@plt>
   195a8:	ldr	r2, [sp]
   195ac:	mov	r3, r0
   195b0:	cmp	r3, #0
   195b4:	beq	19718 <fts_children@@Base+0x18fc>
   195b8:	ldr	r0, [sp, #8]
   195bc:	movw	r1, #65534	; 0xfffe
   195c0:	movt	r1, #65535	; 0xffff
   195c4:	rsb	r2, r2, r8
   195c8:	rsb	r1, r0, r1
   195cc:	stm	sp, {r2, r3}
   195d0:	add	r0, r1, r2
   195d4:	mov	r1, sl
   195d8:	add	r0, r3, r0
   195dc:	mov	r4, r3
   195e0:	bl	114e0 <strcpy@plt>
   195e4:	ldr	r2, [sp]
   195e8:	ldr	r3, [sp, #4]
   195ec:	mov	r1, r9
   195f0:	sub	r0, r2, #1
   195f4:	add	r0, r3, r0
   195f8:	bl	114e0 <strcpy@plt>
   195fc:	ldr	r3, [fp, #4]
   19600:	ldr	r2, [fp, #8]
   19604:	cmp	r3, r2
   19608:	bcc	19524 <fts_children@@Base+0x1708>
   1960c:	mov	r0, fp
   19610:	bl	1163c <__uflow@plt>
   19614:	cmn	r0, #1
   19618:	beq	19650 <fts_children@@Base+0x1834>
   1961c:	b	19530 <fts_children@@Base+0x1714>
   19620:	ldr	r3, [fp, #4]
   19624:	ldr	r2, [fp, #8]
   19628:	cmp	r3, r2
   1962c:	bcs	19734 <fts_children@@Base+0x1918>
   19630:	add	r2, r3, #1
   19634:	str	r2, [fp, #4]
   19638:	ldrb	r0, [r3]
   1963c:	cmp	r0, #10
   19640:	cmnne	r0, #1
   19644:	bne	19620 <fts_children@@Base+0x1804>
   19648:	cmn	r0, #1
   1964c:	bne	19514 <fts_children@@Base+0x16f8>
   19650:	mov	r0, fp
   19654:	bl	19834 <fts_children@@Base+0x1a18>
   19658:	cmp	r8, #0
   1965c:	beq	196a8 <fts_children@@Base+0x188c>
   19660:	mov	r3, #0
   19664:	strb	r3, [r4, r8]
   19668:	mov	r0, r7
   1966c:	bl	11414 <free@plt>
   19670:	ldr	r3, [pc, #236]	; 19764 <fts_children@@Base+0x1948>
   19674:	add	r3, pc, r3
   19678:	str	r4, [r3]
   1967c:	b	193a0 <fts_children@@Base+0x1584>
   19680:	ldr	r8, [pc, #224]	; 19768 <fts_children@@Base+0x194c>
   19684:	mov	r3, #7
   19688:	mov	sl, #8
   1968c:	add	r8, pc, r8
   19690:	ldrb	r3, [r8, r3]
   19694:	cmp	r3, #47	; 0x2f
   19698:	movne	r9, #1
   1969c:	movne	fp, r9
   196a0:	bne	19484 <fts_children@@Base+0x1668>
   196a4:	b	1947c <fts_children@@Base+0x1660>
   196a8:	ldr	r4, [pc, #188]	; 1976c <fts_children@@Base+0x1950>
   196ac:	add	r4, pc, r4
   196b0:	b	19668 <fts_children@@Base+0x184c>
   196b4:	ldr	r0, [sp, #8]
   196b8:	str	r2, [sp]
   196bc:	add	r3, r0, r2
   196c0:	mov	r0, r4
   196c4:	add	r8, r3, r8
   196c8:	add	r1, r8, #3
   196cc:	add	r8, r8, #2
   196d0:	bl	11480 <realloc@plt>
   196d4:	ldr	r2, [sp]
   196d8:	mov	r3, r0
   196dc:	b	195b0 <fts_children@@Base+0x1794>
   196e0:	ldr	r4, [pc, #136]	; 19770 <fts_children@@Base+0x1954>
   196e4:	add	r4, pc, r4
   196e8:	b	19670 <fts_children@@Base+0x1854>
   196ec:	ldr	r8, [pc, #128]	; 19774 <fts_children@@Base+0x1958>
   196f0:	mov	r3, #7
   196f4:	mov	sl, #8
   196f8:	add	r8, pc, r8
   196fc:	b	19690 <fts_children@@Base+0x1874>
   19700:	ldr	r4, [pc, #112]	; 19778 <fts_children@@Base+0x195c>
   19704:	mov	r0, r8
   19708:	add	r4, pc, r4
   1970c:	bl	116f0 <close@plt>
   19710:	b	19668 <fts_children@@Base+0x184c>
   19714:	bl	11474 <__stack_chk_fail@plt>
   19718:	mov	r0, r4
   1971c:	ldr	r4, [pc, #88]	; 1977c <fts_children@@Base+0x1960>
   19720:	bl	11414 <free@plt>
   19724:	mov	r0, fp
   19728:	add	r4, pc, r4
   1972c:	bl	19834 <fts_children@@Base+0x1a18>
   19730:	b	19668 <fts_children@@Base+0x184c>
   19734:	mov	r0, fp
   19738:	bl	1163c <__uflow@plt>
   1973c:	b	1963c <fts_children@@Base+0x1820>
   19740:	andeq	r3, r1, ip, lsl #25
   19744:	andeq	r0, r0, ip, asr #2
   19748:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1974c:	andeq	r2, r0, r8, lsr #17
   19750:	andeq	r1, r0, r8, ror #21
   19754:	andeq	r2, r0, r0, lsl #17
   19758:	andeq	r2, r0, r8, lsr #16
   1975c:	andeq	r2, r0, r4, lsl #16
   19760:	andeq	r2, r0, r8, ror #15
   19764:			; <UNDEFINED> instruction: 0x00013cb0
   19768:	andeq	r2, r0, r0, lsr r6
   1976c:	andeq	r1, r0, r0, lsl #17
   19770:	andeq	r1, r0, r8, asr #16
   19774:	andeq	r2, r0, r4, asr #11
   19778:	andeq	r1, r0, r4, lsr #16
   1977c:	andeq	r1, r0, r4, lsl #16
   19780:	push	{r2, r3}
   19784:	ldr	r3, [pc, #88]	; 197e4 <fts_children@@Base+0x19c8>
   19788:	ldr	ip, [pc, #88]	; 197e8 <fts_children@@Base+0x19cc>
   1978c:	add	r3, pc, r3
   19790:	push	{r4, lr}
   19794:	sub	sp, sp, #8
   19798:	ldr	r4, [r3, ip]
   1979c:	ldr	r2, [sp, #16]
   197a0:	ldr	ip, [r4]
   197a4:	ands	r3, r2, #64	; 0x40
   197a8:	ldrne	r3, [sp, #20]
   197ac:	str	ip, [sp, #4]
   197b0:	addne	ip, sp, #20
   197b4:	strne	ip, [sp]
   197b8:	bl	115a0 <openat64@plt>
   197bc:	bl	197f8 <fts_children@@Base+0x19dc>
   197c0:	ldr	r2, [sp, #4]
   197c4:	ldr	r3, [r4]
   197c8:	cmp	r2, r3
   197cc:	bne	197e0 <fts_children@@Base+0x19c4>
   197d0:	add	sp, sp, #8
   197d4:	pop	{r4, lr}
   197d8:	add	sp, sp, #8
   197dc:	bx	lr
   197e0:	bl	11474 <__stack_chk_fail@plt>
   197e4:	andeq	r3, r1, ip, ror #16
   197e8:	andeq	r0, r0, ip, asr #2
   197ec:	mov	r1, #0
   197f0:	mov	r2, #3
   197f4:	b	198d4 <fts_children@@Base+0x1ab8>
   197f8:	cmp	r0, #2
   197fc:	push	{r3, r4, r5, r6, r7, lr}
   19800:	mov	r4, r0
   19804:	bhi	1982c <fts_children@@Base+0x1a10>
   19808:	bl	197ec <fts_children@@Base+0x19d0>
   1980c:	mov	r7, r0
   19810:	bl	115d0 <__errno_location@plt>
   19814:	ldr	r6, [r0]
   19818:	mov	r5, r0
   1981c:	mov	r0, r4
   19820:	mov	r4, r7
   19824:	bl	116f0 <close@plt>
   19828:	str	r6, [r5]
   1982c:	mov	r0, r4
   19830:	pop	{r3, r4, r5, r6, r7, pc}
   19834:	push	{r4, r5, r6, lr}
   19838:	sub	sp, sp, #8
   1983c:	mov	r4, r0
   19840:	bl	1160c <fileno@plt>
   19844:	cmp	r0, #0
   19848:	mov	r0, r4
   1984c:	blt	198c8 <fts_children@@Base+0x1aac>
   19850:	bl	11540 <__freading@plt>
   19854:	cmp	r0, #0
   19858:	bne	19894 <fts_children@@Base+0x1a78>
   1985c:	mov	r0, r4
   19860:	bl	19a48 <fts_children@@Base+0x1c2c>
   19864:	cmp	r0, #0
   19868:	beq	198c4 <fts_children@@Base+0x1aa8>
   1986c:	bl	115d0 <__errno_location@plt>
   19870:	ldr	r6, [r0]
   19874:	mov	r5, r0
   19878:	mov	r0, r4
   1987c:	bl	11624 <fclose@plt>
   19880:	cmp	r6, #0
   19884:	mvnne	r0, #0
   19888:	strne	r6, [r5]
   1988c:	add	sp, sp, #8
   19890:	pop	{r4, r5, r6, pc}
   19894:	mov	r0, r4
   19898:	bl	1160c <fileno@plt>
   1989c:	mov	r1, #1
   198a0:	mov	r2, #0
   198a4:	mov	r3, #0
   198a8:	str	r1, [sp]
   198ac:	bl	114c8 <lseek64@plt>
   198b0:	mvn	r2, #0
   198b4:	mvn	r3, #0
   198b8:	cmp	r1, r3
   198bc:	cmpeq	r0, r2
   198c0:	bne	1985c <fts_children@@Base+0x1a40>
   198c4:	mov	r0, r4
   198c8:	add	sp, sp, #8
   198cc:	pop	{r4, r5, r6, lr}
   198d0:	b	11624 <fclose@plt>
   198d4:	push	{r1, r2, r3}
   198d8:	movw	ip, #1030	; 0x406
   198dc:	ldr	r3, [pc, #336]	; 19a34 <fts_children@@Base+0x1c18>
   198e0:	push	{r4, r5, r6, r7, r8, lr}
   198e4:	add	r3, pc, r3
   198e8:	ldr	lr, [pc, #328]	; 19a38 <fts_children@@Base+0x1c1c>
   198ec:	sub	sp, sp, #12
   198f0:	add	r2, sp, #40	; 0x28
   198f4:	mov	r6, r0
   198f8:	ldr	r1, [sp, #36]	; 0x24
   198fc:	ldr	r4, [r3, lr]
   19900:	cmp	r1, ip
   19904:	str	r2, [sp]
   19908:	ldr	r3, [r4]
   1990c:	str	r3, [sp, #4]
   19910:	bne	19994 <fts_children@@Base+0x1b78>
   19914:	ldr	r8, [pc, #288]	; 19a3c <fts_children@@Base+0x1c20>
   19918:	add	r3, sp, #44	; 0x2c
   1991c:	str	r3, [sp]
   19920:	add	r8, pc, r8
   19924:	ldr	r7, [sp, #40]	; 0x28
   19928:	ldr	r3, [r8]
   1992c:	mov	r2, r7
   19930:	cmp	r3, #0
   19934:	blt	19a20 <fts_children@@Base+0x1c04>
   19938:	bl	115c4 <fcntl@plt>
   1993c:	subs	r5, r0, #0
   19940:	blt	199a4 <fts_children@@Base+0x1b88>
   19944:	ldr	r3, [pc, #244]	; 19a40 <fts_children@@Base+0x1c24>
   19948:	mov	r2, #1
   1994c:	add	r3, pc, r3
   19950:	str	r2, [r3]
   19954:	cmp	r5, #0
   19958:	blt	19970 <fts_children@@Base+0x1b54>
   1995c:	ldr	r3, [pc, #224]	; 19a44 <fts_children@@Base+0x1c28>
   19960:	add	r3, pc, r3
   19964:	ldr	r3, [r3]
   19968:	cmn	r3, #1
   1996c:	beq	199d4 <fts_children@@Base+0x1bb8>
   19970:	ldr	r2, [sp, #4]
   19974:	mov	r0, r5
   19978:	ldr	r3, [r4]
   1997c:	cmp	r2, r3
   19980:	bne	19a30 <fts_children@@Base+0x1c14>
   19984:	add	sp, sp, #12
   19988:	pop	{r4, r5, r6, r7, r8, lr}
   1998c:	add	sp, sp, #12
   19990:	bx	lr
   19994:	ldr	r2, [sp, #40]	; 0x28
   19998:	bl	115c4 <fcntl@plt>
   1999c:	mov	r5, r0
   199a0:	b	19970 <fts_children@@Base+0x1b54>
   199a4:	bl	115d0 <__errno_location@plt>
   199a8:	ldr	r3, [r0]
   199ac:	cmp	r3, #22
   199b0:	bne	19944 <fts_children@@Base+0x1b28>
   199b4:	mov	r0, r6
   199b8:	mov	r2, r7
   199bc:	mov	r1, #0
   199c0:	bl	198d4 <fts_children@@Base+0x1ab8>
   199c4:	subs	r5, r0, #0
   199c8:	blt	19970 <fts_children@@Base+0x1b54>
   199cc:	mvn	r3, #0
   199d0:	str	r3, [r8]
   199d4:	mov	r0, r5
   199d8:	mov	r1, #1
   199dc:	bl	115c4 <fcntl@plt>
   199e0:	subs	r2, r0, #0
   199e4:	blt	19a00 <fts_children@@Base+0x1be4>
   199e8:	orr	r2, r2, #1
   199ec:	mov	r0, r5
   199f0:	mov	r1, #2
   199f4:	bl	115c4 <fcntl@plt>
   199f8:	cmn	r0, #1
   199fc:	bne	19970 <fts_children@@Base+0x1b54>
   19a00:	bl	115d0 <__errno_location@plt>
   19a04:	ldr	r7, [r0]
   19a08:	mov	r6, r0
   19a0c:	mov	r0, r5
   19a10:	mvn	r5, #0
   19a14:	bl	116f0 <close@plt>
   19a18:	str	r7, [r6]
   19a1c:	b	19970 <fts_children@@Base+0x1b54>
   19a20:	mov	r1, #0
   19a24:	bl	198d4 <fts_children@@Base+0x1ab8>
   19a28:	mov	r5, r0
   19a2c:	b	19954 <fts_children@@Base+0x1b38>
   19a30:	bl	11474 <__stack_chk_fail@plt>
   19a34:	andeq	r3, r1, r4, lsl r7
   19a38:	andeq	r0, r0, ip, asr #2
   19a3c:	andeq	r3, r1, r8, lsl #20
   19a40:	ldrdeq	r3, [r1], -ip
   19a44:	andeq	r3, r1, r8, asr #19
   19a48:	push	{r4, lr}
   19a4c:	subs	r4, r0, #0
   19a50:	sub	sp, sp, #8
   19a54:	beq	19a64 <fts_children@@Base+0x1c48>
   19a58:	bl	11540 <__freading@plt>
   19a5c:	cmp	r0, #0
   19a60:	bne	19a74 <fts_children@@Base+0x1c58>
   19a64:	mov	r0, r4
   19a68:	add	sp, sp, #8
   19a6c:	pop	{r4, lr}
   19a70:	b	113fc <fflush@plt>
   19a74:	ldr	r3, [r4]
   19a78:	tst	r3, #256	; 0x100
   19a7c:	beq	19a64 <fts_children@@Base+0x1c48>
   19a80:	mov	r3, #1
   19a84:	mov	r0, r4
   19a88:	str	r3, [sp]
   19a8c:	mov	r2, #0
   19a90:	mov	r3, #0
   19a94:	bl	19aa8 <fts_children@@Base+0x1c8c>
   19a98:	mov	r0, r4
   19a9c:	add	sp, sp, #8
   19aa0:	pop	{r4, lr}
   19aa4:	b	113fc <fflush@plt>
   19aa8:	push	{r4, r5, r6, r7, lr}
   19aac:	sub	sp, sp, #20
   19ab0:	ldmib	r0, {r1, ip}
   19ab4:	mov	r6, r0
   19ab8:	ldr	r4, [sp, #40]	; 0x28
   19abc:	cmp	ip, r1
   19ac0:	beq	19ad8 <fts_children@@Base+0x1cbc>
   19ac4:	str	r4, [sp, #40]	; 0x28
   19ac8:	mov	r0, r6
   19acc:	add	sp, sp, #20
   19ad0:	pop	{r4, r5, r6, r7, lr}
   19ad4:	b	11630 <fseeko64@plt>
   19ad8:	ldr	ip, [r0, #20]
   19adc:	ldr	r1, [r0, #16]
   19ae0:	cmp	ip, r1
   19ae4:	bne	19ac4 <fts_children@@Base+0x1ca8>
   19ae8:	ldr	r7, [r0, #36]	; 0x24
   19aec:	cmp	r7, #0
   19af0:	bne	19ac4 <fts_children@@Base+0x1ca8>
   19af4:	str	r2, [sp, #12]
   19af8:	mvn	r5, #0
   19afc:	str	r3, [sp, #8]
   19b00:	bl	1160c <fileno@plt>
   19b04:	str	r4, [sp]
   19b08:	mvn	r4, #0
   19b0c:	ldr	r2, [sp, #12]
   19b10:	ldr	r3, [sp, #8]
   19b14:	bl	114c8 <lseek64@plt>
   19b18:	mov	r2, r0
   19b1c:	mov	r3, r1
   19b20:	cmp	r3, r5
   19b24:	cmpeq	r2, r4
   19b28:	beq	19b48 <fts_children@@Base+0x1d2c>
   19b2c:	ldr	r1, [r6]
   19b30:	mov	r0, r7
   19b34:	strd	r2, [r6, #80]	; 0x50
   19b38:	bic	r3, r1, #16
   19b3c:	str	r3, [r6]
   19b40:	add	sp, sp, #20
   19b44:	pop	{r4, r5, r6, r7, pc}
   19b48:	mvn	r0, #0
   19b4c:	b	19b40 <fts_children@@Base+0x1d24>
   19b50:	subs	r2, r1, #1
   19b54:	bxeq	lr
   19b58:	bcc	19d30 <fts_children@@Base+0x1f14>
   19b5c:	cmp	r0, r1
   19b60:	bls	19d14 <fts_children@@Base+0x1ef8>
   19b64:	tst	r1, r2
   19b68:	beq	19d20 <fts_children@@Base+0x1f04>
   19b6c:	clz	r3, r0
   19b70:	clz	r2, r1
   19b74:	sub	r3, r2, r3
   19b78:	rsbs	r3, r3, #31
   19b7c:	addne	r3, r3, r3, lsl #1
   19b80:	mov	r2, #0
   19b84:	addne	pc, pc, r3, lsl #2
   19b88:	nop	{0}
   19b8c:	cmp	r0, r1, lsl #31
   19b90:	adc	r2, r2, r2
   19b94:	subcs	r0, r0, r1, lsl #31
   19b98:	cmp	r0, r1, lsl #30
   19b9c:	adc	r2, r2, r2
   19ba0:	subcs	r0, r0, r1, lsl #30
   19ba4:	cmp	r0, r1, lsl #29
   19ba8:	adc	r2, r2, r2
   19bac:	subcs	r0, r0, r1, lsl #29
   19bb0:	cmp	r0, r1, lsl #28
   19bb4:	adc	r2, r2, r2
   19bb8:	subcs	r0, r0, r1, lsl #28
   19bbc:	cmp	r0, r1, lsl #27
   19bc0:	adc	r2, r2, r2
   19bc4:	subcs	r0, r0, r1, lsl #27
   19bc8:	cmp	r0, r1, lsl #26
   19bcc:	adc	r2, r2, r2
   19bd0:	subcs	r0, r0, r1, lsl #26
   19bd4:	cmp	r0, r1, lsl #25
   19bd8:	adc	r2, r2, r2
   19bdc:	subcs	r0, r0, r1, lsl #25
   19be0:	cmp	r0, r1, lsl #24
   19be4:	adc	r2, r2, r2
   19be8:	subcs	r0, r0, r1, lsl #24
   19bec:	cmp	r0, r1, lsl #23
   19bf0:	adc	r2, r2, r2
   19bf4:	subcs	r0, r0, r1, lsl #23
   19bf8:	cmp	r0, r1, lsl #22
   19bfc:	adc	r2, r2, r2
   19c00:	subcs	r0, r0, r1, lsl #22
   19c04:	cmp	r0, r1, lsl #21
   19c08:	adc	r2, r2, r2
   19c0c:	subcs	r0, r0, r1, lsl #21
   19c10:	cmp	r0, r1, lsl #20
   19c14:	adc	r2, r2, r2
   19c18:	subcs	r0, r0, r1, lsl #20
   19c1c:	cmp	r0, r1, lsl #19
   19c20:	adc	r2, r2, r2
   19c24:	subcs	r0, r0, r1, lsl #19
   19c28:	cmp	r0, r1, lsl #18
   19c2c:	adc	r2, r2, r2
   19c30:	subcs	r0, r0, r1, lsl #18
   19c34:	cmp	r0, r1, lsl #17
   19c38:	adc	r2, r2, r2
   19c3c:	subcs	r0, r0, r1, lsl #17
   19c40:	cmp	r0, r1, lsl #16
   19c44:	adc	r2, r2, r2
   19c48:	subcs	r0, r0, r1, lsl #16
   19c4c:	cmp	r0, r1, lsl #15
   19c50:	adc	r2, r2, r2
   19c54:	subcs	r0, r0, r1, lsl #15
   19c58:	cmp	r0, r1, lsl #14
   19c5c:	adc	r2, r2, r2
   19c60:	subcs	r0, r0, r1, lsl #14
   19c64:	cmp	r0, r1, lsl #13
   19c68:	adc	r2, r2, r2
   19c6c:	subcs	r0, r0, r1, lsl #13
   19c70:	cmp	r0, r1, lsl #12
   19c74:	adc	r2, r2, r2
   19c78:	subcs	r0, r0, r1, lsl #12
   19c7c:	cmp	r0, r1, lsl #11
   19c80:	adc	r2, r2, r2
   19c84:	subcs	r0, r0, r1, lsl #11
   19c88:	cmp	r0, r1, lsl #10
   19c8c:	adc	r2, r2, r2
   19c90:	subcs	r0, r0, r1, lsl #10
   19c94:	cmp	r0, r1, lsl #9
   19c98:	adc	r2, r2, r2
   19c9c:	subcs	r0, r0, r1, lsl #9
   19ca0:	cmp	r0, r1, lsl #8
   19ca4:	adc	r2, r2, r2
   19ca8:	subcs	r0, r0, r1, lsl #8
   19cac:	cmp	r0, r1, lsl #7
   19cb0:	adc	r2, r2, r2
   19cb4:	subcs	r0, r0, r1, lsl #7
   19cb8:	cmp	r0, r1, lsl #6
   19cbc:	adc	r2, r2, r2
   19cc0:	subcs	r0, r0, r1, lsl #6
   19cc4:	cmp	r0, r1, lsl #5
   19cc8:	adc	r2, r2, r2
   19ccc:	subcs	r0, r0, r1, lsl #5
   19cd0:	cmp	r0, r1, lsl #4
   19cd4:	adc	r2, r2, r2
   19cd8:	subcs	r0, r0, r1, lsl #4
   19cdc:	cmp	r0, r1, lsl #3
   19ce0:	adc	r2, r2, r2
   19ce4:	subcs	r0, r0, r1, lsl #3
   19ce8:	cmp	r0, r1, lsl #2
   19cec:	adc	r2, r2, r2
   19cf0:	subcs	r0, r0, r1, lsl #2
   19cf4:	cmp	r0, r1, lsl #1
   19cf8:	adc	r2, r2, r2
   19cfc:	subcs	r0, r0, r1, lsl #1
   19d00:	cmp	r0, r1
   19d04:	adc	r2, r2, r2
   19d08:	subcs	r0, r0, r1
   19d0c:	mov	r0, r2
   19d10:	bx	lr
   19d14:	moveq	r0, #1
   19d18:	movne	r0, #0
   19d1c:	bx	lr
   19d20:	clz	r2, r1
   19d24:	rsb	r2, r2, #31
   19d28:	lsr	r0, r0, r2
   19d2c:	bx	lr
   19d30:	cmp	r0, #0
   19d34:	mvnne	r0, #0
   19d38:	b	19d98 <fts_children@@Base+0x1f7c>
   19d3c:	cmp	r1, #0
   19d40:	beq	19d30 <fts_children@@Base+0x1f14>
   19d44:	push	{r0, r1, lr}
   19d48:	bl	19b50 <fts_children@@Base+0x1d34>
   19d4c:	pop	{r1, r2, lr}
   19d50:	mul	r3, r2, r0
   19d54:	sub	r1, r1, r3
   19d58:	bx	lr
   19d5c:	cmp	r3, #0
   19d60:	cmpeq	r2, #0
   19d64:	bne	19d7c <fts_children@@Base+0x1f60>
   19d68:	cmp	r1, #0
   19d6c:	cmpeq	r0, #0
   19d70:	mvnne	r1, #0
   19d74:	mvnne	r0, #0
   19d78:	b	19d98 <fts_children@@Base+0x1f7c>
   19d7c:	sub	sp, sp, #8
   19d80:	push	{sp, lr}
   19d84:	bl	19de4 <fts_children@@Base+0x1fc8>
   19d88:	ldr	lr, [sp, #4]
   19d8c:	add	sp, sp, #8
   19d90:	pop	{r2, r3}
   19d94:	bx	lr
   19d98:	push	{r1, lr}
   19d9c:	mov	r0, #8
   19da0:	bl	113cc <raise@plt>
   19da4:	pop	{r1, pc}
   19da8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19dac:	mov	r8, r2
   19db0:	mov	r6, r0
   19db4:	mov	r7, r1
   19db8:	mov	sl, r3
   19dbc:	ldr	r9, [sp, #32]
   19dc0:	bl	19e20 <fts_children@@Base+0x2004>
   19dc4:	umull	r4, r5, r8, r0
   19dc8:	mul	r8, r8, r1
   19dcc:	mla	r2, r0, sl, r8
   19dd0:	add	r5, r2, r5
   19dd4:	subs	r4, r6, r4
   19dd8:	sbc	r5, r7, r5
   19ddc:	strd	r4, [r9]
   19de0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19de4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19de8:	mov	r8, r2
   19dec:	mov	r6, r0
   19df0:	mov	r7, r1
   19df4:	mov	r5, r3
   19df8:	ldr	r9, [sp, #32]
   19dfc:	bl	1a2ac <fts_children@@Base+0x2490>
   19e00:	mul	r3, r0, r5
   19e04:	umull	r4, r5, r0, r8
   19e08:	mla	r8, r8, r1, r3
   19e0c:	add	r5, r8, r5
   19e10:	subs	r4, r6, r4
   19e14:	sbc	r5, r7, r5
   19e18:	strd	r4, [r9]
   19e1c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e24:	rsbs	r4, r0, #0
   19e28:	rsc	r5, r1, #0
   19e2c:	cmp	r1, #0
   19e30:	mvn	r6, #0
   19e34:	sub	sp, sp, #12
   19e38:	movge	r4, r0
   19e3c:	movge	r5, r1
   19e40:	movge	r6, #0
   19e44:	cmp	r3, #0
   19e48:	blt	1a080 <fts_children@@Base+0x2264>
   19e4c:	cmp	r3, #0
   19e50:	mov	sl, r4
   19e54:	mov	ip, r5
   19e58:	mov	r0, r2
   19e5c:	mov	r1, r3
   19e60:	mov	r8, r2
   19e64:	mov	r7, r4
   19e68:	mov	r9, r5
   19e6c:	bne	19f64 <fts_children@@Base+0x2148>
   19e70:	cmp	r2, r5
   19e74:	bls	19fa0 <fts_children@@Base+0x2184>
   19e78:	clz	r3, r2
   19e7c:	cmp	r3, #0
   19e80:	rsbne	r2, r3, #32
   19e84:	lslne	r8, r0, r3
   19e88:	lsrne	r2, r4, r2
   19e8c:	lslne	r7, r4, r3
   19e90:	orrne	r9, r2, r5, lsl r3
   19e94:	lsr	r4, r8, #16
   19e98:	uxth	sl, r8
   19e9c:	mov	r1, r4
   19ea0:	mov	r0, r9
   19ea4:	bl	19b50 <fts_children@@Base+0x1d34>
   19ea8:	mov	r1, r4
   19eac:	mov	fp, r0
   19eb0:	mov	r0, r9
   19eb4:	bl	19d3c <fts_children@@Base+0x1f20>
   19eb8:	mul	r0, sl, fp
   19ebc:	lsr	r2, r7, #16
   19ec0:	orr	r1, r2, r1, lsl #16
   19ec4:	cmp	r0, r1
   19ec8:	bls	19eec <fts_children@@Base+0x20d0>
   19ecc:	adds	r1, r1, r8
   19ed0:	sub	r3, fp, #1
   19ed4:	bcs	19ee8 <fts_children@@Base+0x20cc>
   19ed8:	cmp	r0, r1
   19edc:	subhi	fp, fp, #2
   19ee0:	addhi	r1, r1, r8
   19ee4:	bhi	19eec <fts_children@@Base+0x20d0>
   19ee8:	mov	fp, r3
   19eec:	rsb	r9, r0, r1
   19ef0:	mov	r1, r4
   19ef4:	uxth	r7, r7
   19ef8:	mov	r0, r9
   19efc:	bl	19b50 <fts_children@@Base+0x1d34>
   19f00:	mov	r1, r4
   19f04:	mov	r5, r0
   19f08:	mov	r0, r9
   19f0c:	bl	19d3c <fts_children@@Base+0x1f20>
   19f10:	mul	sl, sl, r5
   19f14:	orr	r1, r7, r1, lsl #16
   19f18:	cmp	sl, r1
   19f1c:	bls	19f3c <fts_children@@Base+0x2120>
   19f20:	adds	r8, r1, r8
   19f24:	sub	r3, r5, #1
   19f28:	bcs	19f38 <fts_children@@Base+0x211c>
   19f2c:	cmp	sl, r8
   19f30:	subhi	r5, r5, #2
   19f34:	bhi	19f3c <fts_children@@Base+0x2120>
   19f38:	mov	r5, r3
   19f3c:	orr	r3, r5, fp, lsl #16
   19f40:	mov	r4, #0
   19f44:	cmp	r6, #0
   19f48:	mov	r0, r3
   19f4c:	mov	r1, r4
   19f50:	beq	19f5c <fts_children@@Base+0x2140>
   19f54:	rsbs	r0, r0, #0
   19f58:	rsc	r1, r1, #0
   19f5c:	add	sp, sp, #12
   19f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f64:	cmp	r3, r5
   19f68:	movhi	r4, #0
   19f6c:	movhi	r3, r4
   19f70:	bhi	19f44 <fts_children@@Base+0x2128>
   19f74:	clz	r5, r1
   19f78:	cmp	r5, #0
   19f7c:	bne	1a16c <fts_children@@Base+0x2350>
   19f80:	cmp	r1, ip
   19f84:	cmpcs	r2, sl
   19f88:	movhi	r4, #0
   19f8c:	movls	r4, #1
   19f90:	movls	r3, #1
   19f94:	movls	r4, r5
   19f98:	movhi	r3, r4
   19f9c:	b	19f44 <fts_children@@Base+0x2128>
   19fa0:	cmp	r2, #0
   19fa4:	bne	19fb8 <fts_children@@Base+0x219c>
   19fa8:	mov	r1, r2
   19fac:	mov	r0, #1
   19fb0:	bl	19b50 <fts_children@@Base+0x1d34>
   19fb4:	mov	r8, r0
   19fb8:	clz	r3, r8
   19fbc:	cmp	r3, #0
   19fc0:	bne	1a090 <fts_children@@Base+0x2274>
   19fc4:	rsb	r9, r8, r9
   19fc8:	lsr	r5, r8, #16
   19fcc:	uxth	sl, r8
   19fd0:	mov	r4, #1
   19fd4:	mov	r1, r5
   19fd8:	mov	r0, r9
   19fdc:	bl	19b50 <fts_children@@Base+0x1d34>
   19fe0:	mov	r1, r5
   19fe4:	mov	fp, r0
   19fe8:	mov	r0, r9
   19fec:	bl	19d3c <fts_children@@Base+0x1f20>
   19ff0:	mul	r0, sl, fp
   19ff4:	lsr	r2, r7, #16
   19ff8:	orr	r1, r2, r1, lsl #16
   19ffc:	cmp	r0, r1
   1a000:	bls	1a020 <fts_children@@Base+0x2204>
   1a004:	adds	r1, r1, r8
   1a008:	sub	r3, fp, #1
   1a00c:	bcs	1a28c <fts_children@@Base+0x2470>
   1a010:	cmp	r0, r1
   1a014:	subhi	fp, fp, #2
   1a018:	addhi	r1, r1, r8
   1a01c:	bls	1a28c <fts_children@@Base+0x2470>
   1a020:	rsb	r2, r0, r1
   1a024:	mov	r1, r5
   1a028:	str	r2, [sp]
   1a02c:	uxth	r7, r7
   1a030:	mov	r0, r2
   1a034:	bl	19b50 <fts_children@@Base+0x1d34>
   1a038:	ldr	r2, [sp]
   1a03c:	mov	r1, r5
   1a040:	mov	r9, r0
   1a044:	mov	r0, r2
   1a048:	bl	19d3c <fts_children@@Base+0x1f20>
   1a04c:	mul	sl, sl, r9
   1a050:	orr	r1, r7, r1, lsl #16
   1a054:	cmp	sl, r1
   1a058:	bls	1a078 <fts_children@@Base+0x225c>
   1a05c:	adds	r8, r1, r8
   1a060:	sub	r3, r9, #1
   1a064:	bcs	1a074 <fts_children@@Base+0x2258>
   1a068:	cmp	sl, r8
   1a06c:	subhi	r9, r9, #2
   1a070:	bhi	1a078 <fts_children@@Base+0x225c>
   1a074:	mov	r9, r3
   1a078:	orr	r3, r9, fp, lsl #16
   1a07c:	b	19f44 <fts_children@@Base+0x2128>
   1a080:	mvn	r6, r6
   1a084:	rsbs	r2, r2, #0
   1a088:	rsc	r3, r3, #0
   1a08c:	b	19e4c <fts_children@@Base+0x2030>
   1a090:	lsl	r8, r8, r3
   1a094:	rsb	fp, r3, #32
   1a098:	lsr	r4, r9, fp
   1a09c:	lsr	fp, r7, fp
   1a0a0:	lsr	r5, r8, #16
   1a0a4:	orr	fp, fp, r9, lsl r3
   1a0a8:	mov	r0, r4
   1a0ac:	lsl	r7, r7, r3
   1a0b0:	mov	r1, r5
   1a0b4:	uxth	sl, r8
   1a0b8:	bl	19b50 <fts_children@@Base+0x1d34>
   1a0bc:	mov	r1, r5
   1a0c0:	mov	r3, r0
   1a0c4:	mov	r0, r4
   1a0c8:	str	r3, [sp]
   1a0cc:	bl	19d3c <fts_children@@Base+0x1f20>
   1a0d0:	ldr	r3, [sp]
   1a0d4:	lsr	r2, fp, #16
   1a0d8:	mul	r0, sl, r3
   1a0dc:	orr	r1, r2, r1, lsl #16
   1a0e0:	cmp	r0, r1
   1a0e4:	bls	1a104 <fts_children@@Base+0x22e8>
   1a0e8:	adds	r1, r1, r8
   1a0ec:	sub	r2, r3, #1
   1a0f0:	bcs	1a2a4 <fts_children@@Base+0x2488>
   1a0f4:	cmp	r0, r1
   1a0f8:	subhi	r3, r3, #2
   1a0fc:	addhi	r1, r1, r8
   1a100:	bls	1a2a4 <fts_children@@Base+0x2488>
   1a104:	rsb	r9, r0, r1
   1a108:	mov	r1, r5
   1a10c:	str	r3, [sp]
   1a110:	uxth	fp, fp
   1a114:	mov	r0, r9
   1a118:	bl	19b50 <fts_children@@Base+0x1d34>
   1a11c:	mov	r1, r5
   1a120:	mov	r4, r0
   1a124:	mov	r0, r9
   1a128:	bl	19d3c <fts_children@@Base+0x1f20>
   1a12c:	mul	r9, sl, r4
   1a130:	ldr	r3, [sp]
   1a134:	orr	r1, fp, r1, lsl #16
   1a138:	cmp	r9, r1
   1a13c:	bls	1a160 <fts_children@@Base+0x2344>
   1a140:	adds	r1, r1, r8
   1a144:	sub	r2, r4, #1
   1a148:	bcs	1a15c <fts_children@@Base+0x2340>
   1a14c:	cmp	r9, r1
   1a150:	subhi	r4, r4, #2
   1a154:	addhi	r1, r1, r8
   1a158:	bhi	1a160 <fts_children@@Base+0x2344>
   1a15c:	mov	r4, r2
   1a160:	rsb	r9, r9, r1
   1a164:	orr	r4, r4, r3, lsl #16
   1a168:	b	19fd4 <fts_children@@Base+0x21b8>
   1a16c:	rsb	sl, r5, #32
   1a170:	lsl	r3, r2, r5
   1a174:	lsr	r0, r2, sl
   1a178:	lsr	r2, ip, sl
   1a17c:	orr	r4, r0, r1, lsl r5
   1a180:	lsr	sl, r7, sl
   1a184:	mov	r0, r2
   1a188:	orr	sl, sl, ip, lsl r5
   1a18c:	lsr	r9, r4, #16
   1a190:	str	r3, [sp, #4]
   1a194:	str	r2, [sp]
   1a198:	uxth	fp, r4
   1a19c:	mov	r1, r9
   1a1a0:	bl	19b50 <fts_children@@Base+0x1d34>
   1a1a4:	ldr	r2, [sp]
   1a1a8:	mov	r1, r9
   1a1ac:	mov	r8, r0
   1a1b0:	mov	r0, r2
   1a1b4:	bl	19d3c <fts_children@@Base+0x1f20>
   1a1b8:	mul	r0, fp, r8
   1a1bc:	lsr	r2, sl, #16
   1a1c0:	orr	r1, r2, r1, lsl #16
   1a1c4:	cmp	r0, r1
   1a1c8:	bls	1a1e8 <fts_children@@Base+0x23cc>
   1a1cc:	adds	r1, r1, r4
   1a1d0:	sub	r2, r8, #1
   1a1d4:	bcs	1a29c <fts_children@@Base+0x2480>
   1a1d8:	cmp	r0, r1
   1a1dc:	subhi	r8, r8, #2
   1a1e0:	addhi	r1, r1, r4
   1a1e4:	bls	1a29c <fts_children@@Base+0x2480>
   1a1e8:	rsb	ip, r0, r1
   1a1ec:	mov	r1, r9
   1a1f0:	str	ip, [sp]
   1a1f4:	mov	r0, ip
   1a1f8:	bl	19b50 <fts_children@@Base+0x1d34>
   1a1fc:	ldr	ip, [sp]
   1a200:	mov	r1, r9
   1a204:	mov	r2, r0
   1a208:	mov	r0, ip
   1a20c:	str	r2, [sp]
   1a210:	bl	19d3c <fts_children@@Base+0x1f20>
   1a214:	ldr	r2, [sp]
   1a218:	uxth	ip, sl
   1a21c:	mul	fp, fp, r2
   1a220:	orr	ip, ip, r1, lsl #16
   1a224:	cmp	fp, ip
   1a228:	bls	1a248 <fts_children@@Base+0x242c>
   1a22c:	adds	ip, ip, r4
   1a230:	sub	r1, r2, #1
   1a234:	bcs	1a294 <fts_children@@Base+0x2478>
   1a238:	cmp	fp, ip
   1a23c:	subhi	r2, r2, #2
   1a240:	addhi	ip, ip, r4
   1a244:	bls	1a294 <fts_children@@Base+0x2478>
   1a248:	ldr	r0, [sp, #4]
   1a24c:	orr	r1, r2, r8, lsl #16
   1a250:	rsb	fp, fp, ip
   1a254:	umull	r2, r3, r1, r0
   1a258:	cmp	fp, r3
   1a25c:	bcc	1a280 <fts_children@@Base+0x2464>
   1a260:	movne	r4, #0
   1a264:	moveq	r4, #1
   1a268:	cmp	r2, r7, lsl r5
   1a26c:	movls	r4, #0
   1a270:	andhi	r4, r4, #1
   1a274:	cmp	r4, #0
   1a278:	moveq	r3, r1
   1a27c:	beq	19f44 <fts_children@@Base+0x2128>
   1a280:	sub	r3, r1, #1
   1a284:	mov	r4, #0
   1a288:	b	19f44 <fts_children@@Base+0x2128>
   1a28c:	mov	fp, r3
   1a290:	b	1a020 <fts_children@@Base+0x2204>
   1a294:	mov	r2, r1
   1a298:	b	1a248 <fts_children@@Base+0x242c>
   1a29c:	mov	r8, r2
   1a2a0:	b	1a1e8 <fts_children@@Base+0x23cc>
   1a2a4:	mov	r3, r2
   1a2a8:	b	1a104 <fts_children@@Base+0x22e8>
   1a2ac:	cmp	r3, #0
   1a2b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2b4:	mov	r6, r0
   1a2b8:	sub	sp, sp, #12
   1a2bc:	mov	r5, r1
   1a2c0:	mov	r7, r0
   1a2c4:	mov	r4, r2
   1a2c8:	mov	r8, r1
   1a2cc:	bne	1a3ac <fts_children@@Base+0x2590>
   1a2d0:	cmp	r2, r1
   1a2d4:	bls	1a3e8 <fts_children@@Base+0x25cc>
   1a2d8:	clz	r3, r2
   1a2dc:	cmp	r3, #0
   1a2e0:	rsbne	r8, r3, #32
   1a2e4:	lslne	r4, r2, r3
   1a2e8:	lsrne	r8, r0, r8
   1a2ec:	lslne	r7, r0, r3
   1a2f0:	orrne	r8, r8, r1, lsl r3
   1a2f4:	lsr	r5, r4, #16
   1a2f8:	uxth	sl, r4
   1a2fc:	mov	r1, r5
   1a300:	mov	r0, r8
   1a304:	bl	19b50 <fts_children@@Base+0x1d34>
   1a308:	mov	r1, r5
   1a30c:	mov	r9, r0
   1a310:	mov	r0, r8
   1a314:	bl	19d3c <fts_children@@Base+0x1f20>
   1a318:	mul	r0, sl, r9
   1a31c:	lsr	r3, r7, #16
   1a320:	orr	r1, r3, r1, lsl #16
   1a324:	cmp	r0, r1
   1a328:	bls	1a34c <fts_children@@Base+0x2530>
   1a32c:	adds	r1, r1, r4
   1a330:	sub	r2, r9, #1
   1a334:	bcs	1a348 <fts_children@@Base+0x252c>
   1a338:	cmp	r0, r1
   1a33c:	subhi	r9, r9, #2
   1a340:	addhi	r1, r1, r4
   1a344:	bhi	1a34c <fts_children@@Base+0x2530>
   1a348:	mov	r9, r2
   1a34c:	rsb	r8, r0, r1
   1a350:	mov	r1, r5
   1a354:	uxth	r7, r7
   1a358:	mov	r0, r8
   1a35c:	bl	19b50 <fts_children@@Base+0x1d34>
   1a360:	mov	r1, r5
   1a364:	mov	r6, r0
   1a368:	mov	r0, r8
   1a36c:	bl	19d3c <fts_children@@Base+0x1f20>
   1a370:	mul	sl, sl, r6
   1a374:	orr	r1, r7, r1, lsl #16
   1a378:	cmp	sl, r1
   1a37c:	bls	1a398 <fts_children@@Base+0x257c>
   1a380:	adds	r4, r1, r4
   1a384:	sub	r3, r6, #1
   1a388:	bcs	1a694 <fts_children@@Base+0x2878>
   1a38c:	cmp	sl, r4
   1a390:	subhi	r6, r6, #2
   1a394:	bls	1a694 <fts_children@@Base+0x2878>
   1a398:	orr	r0, r6, r9, lsl #16
   1a39c:	mov	r6, #0
   1a3a0:	mov	r1, r6
   1a3a4:	add	sp, sp, #12
   1a3a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a3ac:	cmp	r3, r1
   1a3b0:	movhi	r6, #0
   1a3b4:	movhi	r0, r6
   1a3b8:	bhi	1a3a0 <fts_children@@Base+0x2584>
   1a3bc:	clz	r7, r3
   1a3c0:	cmp	r7, #0
   1a3c4:	bne	1a4c4 <fts_children@@Base+0x26a8>
   1a3c8:	cmp	r3, r1
   1a3cc:	cmpcs	r2, r6
   1a3d0:	movhi	r6, #0
   1a3d4:	movls	r6, #1
   1a3d8:	movls	r0, #1
   1a3dc:	movls	r6, r7
   1a3e0:	movhi	r0, r6
   1a3e4:	b	1a3a0 <fts_children@@Base+0x2584>
   1a3e8:	cmp	r2, #0
   1a3ec:	bne	1a400 <fts_children@@Base+0x25e4>
   1a3f0:	mov	r1, r2
   1a3f4:	mov	r0, #1
   1a3f8:	bl	19b50 <fts_children@@Base+0x1d34>
   1a3fc:	mov	r4, r0
   1a400:	clz	r3, r4
   1a404:	cmp	r3, #0
   1a408:	bne	1a5c0 <fts_children@@Base+0x27a4>
   1a40c:	rsb	r5, r4, r5
   1a410:	lsr	r8, r4, #16
   1a414:	uxth	sl, r4
   1a418:	mov	r6, #1
   1a41c:	mov	r1, r8
   1a420:	mov	r0, r5
   1a424:	bl	19b50 <fts_children@@Base+0x1d34>
   1a428:	mov	r1, r8
   1a42c:	mov	r9, r0
   1a430:	mov	r0, r5
   1a434:	bl	19d3c <fts_children@@Base+0x1f20>
   1a438:	mul	r0, sl, r9
   1a43c:	lsr	r3, r7, #16
   1a440:	orr	r1, r3, r1, lsl #16
   1a444:	cmp	r0, r1
   1a448:	bls	1a468 <fts_children@@Base+0x264c>
   1a44c:	adds	r1, r1, r4
   1a450:	sub	r2, r9, #1
   1a454:	bcs	1a69c <fts_children@@Base+0x2880>
   1a458:	cmp	r0, r1
   1a45c:	subhi	r9, r9, #2
   1a460:	addhi	r1, r1, r4
   1a464:	bls	1a69c <fts_children@@Base+0x2880>
   1a468:	rsb	fp, r0, r1
   1a46c:	mov	r1, r8
   1a470:	uxth	r7, r7
   1a474:	mov	r0, fp
   1a478:	bl	19b50 <fts_children@@Base+0x1d34>
   1a47c:	mov	r1, r8
   1a480:	mov	r5, r0
   1a484:	mov	r0, fp
   1a488:	bl	19d3c <fts_children@@Base+0x1f20>
   1a48c:	mul	sl, sl, r5
   1a490:	orr	r1, r7, r1, lsl #16
   1a494:	cmp	sl, r1
   1a498:	bls	1a4b4 <fts_children@@Base+0x2698>
   1a49c:	adds	r4, r1, r4
   1a4a0:	sub	r3, r5, #1
   1a4a4:	bcs	1a6a4 <fts_children@@Base+0x2888>
   1a4a8:	cmp	sl, r4
   1a4ac:	subhi	r5, r5, #2
   1a4b0:	bls	1a6a4 <fts_children@@Base+0x2888>
   1a4b4:	orr	r0, r5, r9, lsl #16
   1a4b8:	mov	r1, r6
   1a4bc:	add	sp, sp, #12
   1a4c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4c4:	rsb	r1, r7, #32
   1a4c8:	lsl	r0, r2, r7
   1a4cc:	lsr	r2, r2, r1
   1a4d0:	lsr	fp, r5, r1
   1a4d4:	orr	r8, r2, r3, lsl r7
   1a4d8:	lsr	r1, r6, r1
   1a4dc:	str	r0, [sp, #4]
   1a4e0:	orr	r5, r1, r5, lsl r7
   1a4e4:	lsr	r9, r8, #16
   1a4e8:	mov	r0, fp
   1a4ec:	uxth	sl, r8
   1a4f0:	mov	r1, r9
   1a4f4:	bl	19b50 <fts_children@@Base+0x1d34>
   1a4f8:	mov	r1, r9
   1a4fc:	mov	r4, r0
   1a500:	mov	r0, fp
   1a504:	bl	19d3c <fts_children@@Base+0x1f20>
   1a508:	mul	r0, sl, r4
   1a50c:	lsr	ip, r5, #16
   1a510:	orr	r1, ip, r1, lsl #16
   1a514:	cmp	r0, r1
   1a518:	bls	1a52c <fts_children@@Base+0x2710>
   1a51c:	adds	r1, r1, r8
   1a520:	sub	r2, r4, #1
   1a524:	bcc	1a6c0 <fts_children@@Base+0x28a4>
   1a528:	mov	r4, r2
   1a52c:	rsb	ip, r0, r1
   1a530:	mov	r1, r9
   1a534:	str	ip, [sp]
   1a538:	uxth	r5, r5
   1a53c:	mov	r0, ip
   1a540:	bl	19b50 <fts_children@@Base+0x1d34>
   1a544:	ldr	ip, [sp]
   1a548:	mov	r1, r9
   1a54c:	mov	fp, r0
   1a550:	mov	r0, ip
   1a554:	bl	19d3c <fts_children@@Base+0x1f20>
   1a558:	mul	sl, sl, fp
   1a55c:	orr	r1, r5, r1, lsl #16
   1a560:	cmp	sl, r1
   1a564:	bls	1a578 <fts_children@@Base+0x275c>
   1a568:	adds	r1, r1, r8
   1a56c:	sub	r2, fp, #1
   1a570:	bcc	1a6ac <fts_children@@Base+0x2890>
   1a574:	mov	fp, r2
   1a578:	ldr	r3, [sp, #4]
   1a57c:	orr	r0, fp, r4, lsl #16
   1a580:	rsb	sl, sl, r1
   1a584:	umull	r4, r5, r0, r3
   1a588:	cmp	sl, r5
   1a58c:	bcc	1a5ac <fts_children@@Base+0x2790>
   1a590:	movne	r3, #0
   1a594:	moveq	r3, #1
   1a598:	cmp	r4, r6, lsl r7
   1a59c:	movls	r6, #0
   1a5a0:	andhi	r6, r3, #1
   1a5a4:	cmp	r6, #0
   1a5a8:	beq	1a3a0 <fts_children@@Base+0x2584>
   1a5ac:	mov	r6, #0
   1a5b0:	sub	r0, r0, #1
   1a5b4:	mov	r1, r6
   1a5b8:	add	sp, sp, #12
   1a5bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5c0:	lsl	r4, r4, r3
   1a5c4:	rsb	r9, r3, #32
   1a5c8:	lsr	r2, r5, r9
   1a5cc:	lsr	r9, r6, r9
   1a5d0:	lsr	r8, r4, #16
   1a5d4:	orr	r9, r9, r5, lsl r3
   1a5d8:	mov	r0, r2
   1a5dc:	lsl	r7, r6, r3
   1a5e0:	mov	r1, r8
   1a5e4:	str	r2, [sp]
   1a5e8:	bl	19b50 <fts_children@@Base+0x1d34>
   1a5ec:	ldr	r2, [sp]
   1a5f0:	mov	r1, r8
   1a5f4:	uxth	sl, r4
   1a5f8:	mov	fp, r0
   1a5fc:	mov	r0, r2
   1a600:	bl	19d3c <fts_children@@Base+0x1f20>
   1a604:	mul	r0, sl, fp
   1a608:	lsr	r3, r9, #16
   1a60c:	orr	r1, r3, r1, lsl #16
   1a610:	cmp	r0, r1
   1a614:	bls	1a634 <fts_children@@Base+0x2818>
   1a618:	adds	r1, r1, r4
   1a61c:	sub	r3, fp, #1
   1a620:	bcs	1a6d4 <fts_children@@Base+0x28b8>
   1a624:	cmp	r0, r1
   1a628:	subhi	fp, fp, #2
   1a62c:	addhi	r1, r1, r4
   1a630:	bls	1a6d4 <fts_children@@Base+0x28b8>
   1a634:	rsb	r5, r0, r1
   1a638:	mov	r1, r8
   1a63c:	uxth	r9, r9
   1a640:	mov	r0, r5
   1a644:	bl	19b50 <fts_children@@Base+0x1d34>
   1a648:	mov	r1, r8
   1a64c:	mov	r6, r0
   1a650:	mov	r0, r5
   1a654:	bl	19d3c <fts_children@@Base+0x1f20>
   1a658:	mul	r5, sl, r6
   1a65c:	orr	r1, r9, r1, lsl #16
   1a660:	cmp	r5, r1
   1a664:	bls	1a688 <fts_children@@Base+0x286c>
   1a668:	adds	r1, r1, r4
   1a66c:	sub	r3, r6, #1
   1a670:	bcs	1a684 <fts_children@@Base+0x2868>
   1a674:	cmp	r5, r1
   1a678:	subhi	r6, r6, #2
   1a67c:	addhi	r1, r1, r4
   1a680:	bhi	1a688 <fts_children@@Base+0x286c>
   1a684:	mov	r6, r3
   1a688:	rsb	r5, r5, r1
   1a68c:	orr	r6, r6, fp, lsl #16
   1a690:	b	1a41c <fts_children@@Base+0x2600>
   1a694:	mov	r6, r3
   1a698:	b	1a398 <fts_children@@Base+0x257c>
   1a69c:	mov	r9, r2
   1a6a0:	b	1a468 <fts_children@@Base+0x264c>
   1a6a4:	mov	r5, r3
   1a6a8:	b	1a4b4 <fts_children@@Base+0x2698>
   1a6ac:	cmp	sl, r1
   1a6b0:	subhi	fp, fp, #2
   1a6b4:	addhi	r1, r1, r8
   1a6b8:	bhi	1a578 <fts_children@@Base+0x275c>
   1a6bc:	b	1a574 <fts_children@@Base+0x2758>
   1a6c0:	cmp	r0, r1
   1a6c4:	subhi	r4, r4, #2
   1a6c8:	addhi	r1, r1, r8
   1a6cc:	bhi	1a52c <fts_children@@Base+0x2710>
   1a6d0:	b	1a528 <fts_children@@Base+0x270c>
   1a6d4:	mov	fp, r3
   1a6d8:	b	1a634 <fts_children@@Base+0x2818>
   1a6dc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a6e0:	mov	r7, r0
   1a6e4:	ldr	r6, [pc, #76]	; 1a738 <fts_children@@Base+0x291c>
   1a6e8:	mov	r8, r1
   1a6ec:	ldr	r5, [pc, #72]	; 1a73c <fts_children@@Base+0x2920>
   1a6f0:	mov	r9, r2
   1a6f4:	add	r6, pc, r6
   1a6f8:	bl	11370 <fdopen@plt-0x20>
   1a6fc:	add	r5, pc, r5
   1a700:	rsb	r6, r5, r6
   1a704:	asrs	r6, r6, #2
   1a708:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a70c:	sub	r5, r5, #4
   1a710:	mov	r4, #0
   1a714:	add	r4, r4, #1
   1a718:	ldr	r3, [r5, #4]!
   1a71c:	mov	r0, r7
   1a720:	mov	r1, r8
   1a724:	mov	r2, r9
   1a728:	blx	r3
   1a72c:	cmp	r4, r6
   1a730:	bne	1a714 <fts_children@@Base+0x28f8>
   1a734:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a738:	andeq	r2, r1, r0, lsl #14
   1a73c:	strdeq	r2, [r1], -r4
   1a740:	bx	lr
   1a744:	ldr	r3, [pc, #28]	; 1a768 <fts_children@@Base+0x294c>
   1a748:	mov	r1, #0
   1a74c:	ldr	r2, [pc, #24]	; 1a76c <fts_children@@Base+0x2950>
   1a750:	add	r3, pc, r3
   1a754:	ldr	r3, [r3, r2]
   1a758:	cmp	r3, #0
   1a75c:	ldrne	r2, [r3]
   1a760:	moveq	r2, r3
   1a764:	b	115dc <__cxa_atexit@plt>
   1a768:	andeq	r2, r1, r8, lsr #17
   1a76c:	andeq	r0, r0, r4, ror #2

Disassembly of section .fini:

0001a770 <.fini>:
   1a770:	push	{r3, lr}
   1a774:	pop	{r3, pc}
