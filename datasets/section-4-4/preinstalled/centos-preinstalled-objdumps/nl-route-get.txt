
centos-preinstalled/nl-route-get:     file format elf32-littlearm


Disassembly of section .init:

00010908 <.init>:
   10908:	push	{r3, lr}
   1090c:	bl	10c6c <exit@plt+0x230>
   10910:	pop	{r3, pc}

Disassembly of section .plt:

00010914 <abort@plt-0x14>:
   10914:	push	{lr}		; (str lr, [sp, #-4]!)
   10918:	ldr	lr, [pc, #4]	; 10924 <abort@plt-0x4>
   1091c:	add	lr, pc, lr
   10920:	ldr	pc, [lr, #8]!
   10924:	ldrdeq	r1, [r1], -ip

00010928 <abort@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1756]!	; 0x6dc

00010934 <nl_cli_fatal@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1748]!	; 0x6d4

00010940 <__libc_start_main@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1740]!	; 0x6cc

0001094c <__gmon_start__@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1732]!	; 0x6c4

00010958 <nl_addr_get_family@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1724]!	; 0x6bc

00010964 <nla_put_addr@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #69632	; 0x11000
   1096c:	ldr	pc, [ip, #1716]!	; 0x6b4

00010970 <nlmsg_alloc_simple@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #69632	; 0x11000
   10978:	ldr	pc, [ip, #1708]!	; 0x6ac

0001097c <nl_send_auto_complete@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #69632	; 0x11000
   10984:	ldr	pc, [ip, #1700]!	; 0x6a4

00010988 <nl_cli_alloc_socket@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1692]!	; 0x69c

00010994 <nl_msg_parse@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1684]!	; 0x694

000109a0 <nl_addr_get_prefixlen@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1676]!	; 0x68c

000109ac <nl_socket_modify_cb@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1668]!	; 0x684

000109b8 <nlmsg_free@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1660]!	; 0x67c

000109c4 <nl_cli_link_alloc_cache@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1652]!	; 0x674

000109d0 <nlmsg_append@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1644]!	; 0x66c

000109dc <nl_recvmsgs_default@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1636]!	; 0x664

000109e8 <__stack_chk_fail@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1628]!	; 0x65c

000109f4 <nl_object_dump@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1620]!	; 0x654

00010a00 <puts@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1612]!	; 0x64c

00010a0c <nl_cli_addr_parse@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1604]!	; 0x644

00010a18 <nl_geterror@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #69632	; 0x11000
   10a20:	ldr	pc, [ip, #1596]!	; 0x63c

00010a24 <nl_cli_connect@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1588]!	; 0x634

00010a30 <nl_cli_route_alloc_cache@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1580]!	; 0x62c

00010a3c <exit@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1572]!	; 0x624

Disassembly of section .text:

00010a48 <.text>:
   10a48:	push	{r4, r5, r6, r7, lr}
   10a4c:	movw	r5, #8312	; 0x2078
   10a50:	movt	r5, #2
   10a54:	sub	sp, sp, #28
   10a58:	cmp	r0, #1
   10a5c:	mov	r7, r1
   10a60:	ldr	r3, [r5]
   10a64:	str	r3, [sp, #20]
   10a68:	ble	10b9c <exit@plt+0x160>
   10a6c:	ldr	r3, [r1, #4]
   10a70:	ldrb	r2, [r3]
   10a74:	cmp	r2, #45	; 0x2d
   10a78:	beq	10b84 <exit@plt+0x148>
   10a7c:	bl	10988 <nl_cli_alloc_socket@plt>
   10a80:	mov	r1, #0
   10a84:	mov	r6, r1
   10a88:	mov	r4, r0
   10a8c:	bl	10a24 <nl_cli_connect@plt>
   10a90:	mov	r0, r4
   10a94:	bl	109c4 <nl_cli_link_alloc_cache@plt>
   10a98:	mov	r1, r6
   10a9c:	mov	r0, r4
   10aa0:	bl	10a30 <nl_cli_route_alloc_cache@plt>
   10aa4:	mov	r1, #2
   10aa8:	ldr	r0, [r7, #4]
   10aac:	bl	10a0c <nl_cli_addr_parse@plt>
   10ab0:	str	r6, [sp, #8]
   10ab4:	str	r6, [sp, #12]
   10ab8:	str	r6, [sp, #16]
   10abc:	mov	r7, r0
   10ac0:	bl	10958 <nl_addr_get_family@plt>
   10ac4:	strb	r0, [sp, #8]
   10ac8:	mov	r0, r7
   10acc:	bl	109a0 <nl_addr_get_prefixlen@plt>
   10ad0:	mov	r1, r6
   10ad4:	strb	r0, [sp, #9]
   10ad8:	mov	r0, #26
   10adc:	bl	10970 <nlmsg_alloc_simple@plt>
   10ae0:	subs	r6, r0, #0
   10ae4:	beq	10c18 <exit@plt+0x1dc>
   10ae8:	mov	r0, r6
   10aec:	add	r1, sp, #8
   10af0:	mov	r2, #12
   10af4:	mov	r3, #4
   10af8:	bl	109d0 <nlmsg_append@plt>
   10afc:	cmp	r0, #0
   10b00:	blt	10bf0 <exit@plt+0x1b4>
   10b04:	mov	r2, r7
   10b08:	mov	r0, r6
   10b0c:	mov	r1, #1
   10b10:	bl	10964 <nla_put_addr@plt>
   10b14:	cmp	r0, #0
   10b18:	blt	10c04 <exit@plt+0x1c8>
   10b1c:	mov	r1, r6
   10b20:	mov	r0, r4
   10b24:	bl	1097c <nl_send_auto_complete@plt>
   10b28:	mov	r7, r0
   10b2c:	mov	r0, r6
   10b30:	bl	109b8 <nlmsg_free@plt>
   10b34:	cmp	r7, #0
   10b38:	blt	10bd0 <exit@plt+0x194>
   10b3c:	mov	r1, #0
   10b40:	mov	r2, #3
   10b44:	str	r1, [sp]
   10b48:	movw	r3, #3428	; 0xd64
   10b4c:	mov	r0, r4
   10b50:	movt	r3, #1
   10b54:	bl	109ac <nl_socket_modify_cb@plt>
   10b58:	mov	r0, r4
   10b5c:	bl	109dc <nl_recvmsgs_default@plt>
   10b60:	cmp	r0, #0
   10b64:	blt	10bb0 <exit@plt+0x174>
   10b68:	ldr	r2, [sp, #20]
   10b6c:	mov	r0, #0
   10b70:	ldr	r3, [r5]
   10b74:	cmp	r2, r3
   10b78:	bne	10c2c <exit@plt+0x1f0>
   10b7c:	add	sp, sp, #28
   10b80:	pop	{r4, r5, r6, r7, pc}
   10b84:	ldrb	r2, [r3, #1]
   10b88:	cmp	r2, #104	; 0x68
   10b8c:	bne	10a7c <exit@plt+0x40>
   10b90:	ldrb	r3, [r3, #2]
   10b94:	cmp	r3, #0
   10b98:	bne	10a7c <exit@plt+0x40>
   10b9c:	movw	r0, #3776	; 0xec0
   10ba0:	movt	r0, #1
   10ba4:	bl	10a00 <puts@plt>
   10ba8:	mov	r0, #1
   10bac:	bl	10a3c <exit@plt>
   10bb0:	mov	r0, r7
   10bb4:	bl	10a18 <nl_geterror@plt>
   10bb8:	movw	r1, #3772	; 0xebc
   10bbc:	movt	r1, #1
   10bc0:	mov	r2, r0
   10bc4:	mov	r0, r7
   10bc8:	bl	10934 <nl_cli_fatal@plt>
   10bcc:	b	10b68 <exit@plt+0x12c>
   10bd0:	mov	r0, r7
   10bd4:	bl	10a18 <nl_geterror@plt>
   10bd8:	movw	r1, #3772	; 0xebc
   10bdc:	movt	r1, #1
   10be0:	mov	r2, r0
   10be4:	mov	r0, r7
   10be8:	bl	10934 <nl_cli_fatal@plt>
   10bec:	b	10b3c <exit@plt+0x100>
   10bf0:	movw	r1, #3804	; 0xedc
   10bf4:	mov	r0, #12
   10bf8:	movt	r1, #1
   10bfc:	bl	10934 <nl_cli_fatal@plt>
   10c00:	b	10b04 <exit@plt+0xc8>
   10c04:	movw	r1, #3804	; 0xedc
   10c08:	mov	r0, #12
   10c0c:	movt	r1, #1
   10c10:	bl	10934 <nl_cli_fatal@plt>
   10c14:	b	10b1c <exit@plt+0xe0>
   10c18:	movw	r1, #3804	; 0xedc
   10c1c:	mov	r0, #12
   10c20:	movt	r1, #1
   10c24:	bl	10934 <nl_cli_fatal@plt>
   10c28:	b	10ae8 <exit@plt+0xac>
   10c2c:	bl	109e8 <__stack_chk_fail@plt>
   10c30:	mov	fp, #0
   10c34:	mov	lr, #0
   10c38:	pop	{r1}		; (ldr r1, [sp], #4)
   10c3c:	mov	r2, sp
   10c40:	push	{r2}		; (str r2, [sp, #-4]!)
   10c44:	push	{r0}		; (str r0, [sp, #-4]!)
   10c48:	ldr	ip, [pc, #16]	; 10c60 <exit@plt+0x224>
   10c4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10c50:	ldr	r0, [pc, #12]	; 10c64 <exit@plt+0x228>
   10c54:	ldr	r3, [pc, #12]	; 10c68 <exit@plt+0x22c>
   10c58:	bl	10940 <__libc_start_main@plt>
   10c5c:	bl	10928 <abort@plt>
   10c60:	muleq	r1, r0, lr
   10c64:	andeq	r0, r1, r8, asr #20
   10c68:	andeq	r0, r1, ip, lsr #28
   10c6c:	ldr	r3, [pc, #20]	; 10c88 <exit@plt+0x24c>
   10c70:	ldr	r2, [pc, #20]	; 10c8c <exit@plt+0x250>
   10c74:	add	r3, pc, r3
   10c78:	ldr	r2, [r3, r2]
   10c7c:	cmp	r2, #0
   10c80:	bxeq	lr
   10c84:	b	1094c <__gmon_start__@plt>
   10c88:	andeq	r1, r1, r4, lsl #7
   10c8c:	andeq	r0, r0, ip, rrx
   10c90:	push	{r3, lr}
   10c94:	movw	r0, #8308	; 0x2074
   10c98:	ldr	r3, [pc, #36]	; 10cc4 <exit@plt+0x288>
   10c9c:	movt	r0, #2
   10ca0:	rsb	r3, r0, r3
   10ca4:	cmp	r3, #6
   10ca8:	popls	{r3, pc}
   10cac:	movw	r3, #0
   10cb0:	movt	r3, #0
   10cb4:	cmp	r3, #0
   10cb8:	popeq	{r3, pc}
   10cbc:	blx	r3
   10cc0:	pop	{r3, pc}
   10cc4:	andeq	r2, r2, r7, ror r0
   10cc8:	push	{r3, lr}
   10ccc:	movw	r0, #8308	; 0x2074
   10cd0:	movw	r3, #8308	; 0x2074
   10cd4:	movt	r0, #2
   10cd8:	movt	r3, #2
   10cdc:	rsb	r3, r0, r3
   10ce0:	asr	r3, r3, #2
   10ce4:	add	r3, r3, r3, lsr #31
   10ce8:	asrs	r1, r3, #1
   10cec:	popeq	{r3, pc}
   10cf0:	movw	r2, #0
   10cf4:	movt	r2, #0
   10cf8:	cmp	r2, #0
   10cfc:	popeq	{r3, pc}
   10d00:	blx	r2
   10d04:	pop	{r3, pc}
   10d08:	push	{r4, lr}
   10d0c:	movw	r4, #8320	; 0x2080
   10d10:	movt	r4, #2
   10d14:	ldrb	r3, [r4]
   10d18:	cmp	r3, #0
   10d1c:	popne	{r4, pc}
   10d20:	bl	10c90 <exit@plt+0x254>
   10d24:	mov	r3, #1
   10d28:	strb	r3, [r4]
   10d2c:	pop	{r4, pc}
   10d30:	movw	r0, #7868	; 0x1ebc
   10d34:	movt	r0, #2
   10d38:	push	{r3, lr}
   10d3c:	ldr	r3, [r0]
   10d40:	cmp	r3, #0
   10d44:	beq	10d5c <exit@plt+0x320>
   10d48:	movw	r3, #0
   10d4c:	movt	r3, #0
   10d50:	cmp	r3, #0
   10d54:	beq	10d5c <exit@plt+0x320>
   10d58:	blx	r3
   10d5c:	pop	{r3, lr}
   10d60:	b	10cc8 <exit@plt+0x28c>
   10d64:	push	{r4, lr}
   10d68:	movw	r1, #3496	; 0xda8
   10d6c:	mov	r2, #0
   10d70:	movt	r1, #1
   10d74:	bl	10994 <nl_msg_parse@plt>
   10d78:	subs	r4, r0, #0
   10d7c:	blt	10d88 <exit@plt+0x34c>
   10d80:	mov	r0, #0
   10d84:	pop	{r4, pc}
   10d88:	bl	10a18 <nl_geterror@plt>
   10d8c:	movw	r1, #3748	; 0xea4
   10d90:	movt	r1, #1
   10d94:	mov	r2, r0
   10d98:	mov	r0, r4
   10d9c:	bl	10934 <nl_cli_fatal@plt>
   10da0:	mov	r0, #0
   10da4:	pop	{r4, pc}
   10da8:	push	{r4, lr}
   10dac:	movw	r2, #8316	; 0x207c
   10db0:	movw	r4, #8312	; 0x2078
   10db4:	movt	r2, #2
   10db8:	movt	r4, #2
   10dbc:	sub	sp, sp, #56	; 0x38
   10dc0:	ldr	r2, [r2]
   10dc4:	mov	r3, #0
   10dc8:	ldr	lr, [r4]
   10dcc:	mov	r1, sp
   10dd0:	mov	ip, #1
   10dd4:	str	r3, [sp, #4]
   10dd8:	str	r2, [sp, #28]
   10ddc:	str	r3, [sp, #8]
   10de0:	str	r3, [sp, #12]
   10de4:	str	r3, [sp, #16]
   10de8:	str	r3, [sp, #20]
   10dec:	str	r3, [sp, #24]
   10df0:	str	r3, [sp, #32]
   10df4:	str	r3, [sp, #36]	; 0x24
   10df8:	str	r3, [sp, #40]	; 0x28
   10dfc:	str	r3, [sp, #44]	; 0x2c
   10e00:	str	r3, [sp, #48]	; 0x30
   10e04:	str	lr, [sp, #52]	; 0x34
   10e08:	str	ip, [sp]
   10e0c:	bl	109f4 <nl_object_dump@plt>
   10e10:	ldr	r2, [sp, #52]	; 0x34
   10e14:	ldr	r3, [r4]
   10e18:	cmp	r2, r3
   10e1c:	bne	10e28 <exit@plt+0x3ec>
   10e20:	add	sp, sp, #56	; 0x38
   10e24:	pop	{r4, pc}
   10e28:	bl	109e8 <__stack_chk_fail@plt>
   10e2c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10e30:	mov	r7, r0
   10e34:	ldr	r6, [pc, #76]	; 10e88 <exit@plt+0x44c>
   10e38:	mov	r8, r1
   10e3c:	ldr	r5, [pc, #72]	; 10e8c <exit@plt+0x450>
   10e40:	mov	r9, r2
   10e44:	add	r6, pc, r6
   10e48:	bl	10908 <abort@plt-0x20>
   10e4c:	add	r5, pc, r5
   10e50:	rsb	r6, r5, r6
   10e54:	asrs	r6, r6, #2
   10e58:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10e5c:	sub	r5, r5, #4
   10e60:	mov	r4, #0
   10e64:	add	r4, r4, #1
   10e68:	ldr	r3, [r5, #4]!
   10e6c:	mov	r0, r7
   10e70:	mov	r1, r8
   10e74:	mov	r2, r9
   10e78:	blx	r3
   10e7c:	cmp	r4, r6
   10e80:	bne	10e64 <exit@plt+0x428>
   10e84:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10e88:	andeq	r1, r1, ip, rrx
   10e8c:	andeq	r1, r1, r0, rrx
   10e90:	bx	lr

Disassembly of section .fini:

00010e94 <.fini>:
   10e94:	push	{r3, lr}
   10e98:	pop	{r3, pc}
