
centos-preinstalled/nf-queue:     file format elf32-littlearm


Disassembly of section .init:

00010b8c <.init>:
   10b8c:	push	{r3, lr}
   10b90:	bl	1113c <nfnl_queue_socket_alloc@plt+0x404>
   10b94:	pop	{r3, pc}

Disassembly of section .plt:

00010b98 <nfnl_queue_pf_unbind@plt-0x14>:
   10b98:	push	{lr}		; (str lr, [sp, #-4]!)
   10b9c:	ldr	lr, [pc, #4]	; 10ba8 <nfnl_queue_pf_unbind@plt-0x4>
   10ba0:	add	lr, pc, lr
   10ba4:	ldr	pc, [lr, #8]!
   10ba8:	andeq	r1, r1, r8, asr r4

00010bac <nfnl_queue_pf_unbind@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1112]!	; 0x458

00010bb8 <abort@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1104]!	; 0x450

00010bc4 <nl_cli_fatal@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1096]!	; 0x448

00010bd0 <__libc_start_main@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1088]!	; 0x440

00010bdc <__gmon_start__@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1080]!	; 0x438

00010be8 <strcasecmp@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1072]!	; 0x430

00010bf4 <nl_cli_alloc_socket@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1064]!	; 0x428

00010c00 <nfnl_queue_str2copy_mode@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1056]!	; 0x420

00010c0c <nl_socket_get_fd@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #69632	; 0x11000
   10c14:	ldr	pc, [ip, #1048]!	; 0x418

00010c18 <nfnl_queue_msg_send_verdict@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #69632	; 0x11000
   10c20:	ldr	pc, [ip, #1040]!	; 0x410

00010c24 <nl_msg_parse@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #69632	; 0x11000
   10c2c:	ldr	pc, [ip, #1032]!	; 0x408

00010c30 <nfnl_queue_create@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #69632	; 0x11000
   10c38:	ldr	pc, [ip, #1024]!	; 0x400

00010c3c <nfnl_queue_msg_set_verdict@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #69632	; 0x11000
   10c44:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c48 <nl_socket_modify_cb@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #69632	; 0x11000
   10c50:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c54 <nfnl_queue_set_copy_mode@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #69632	; 0x11000
   10c5c:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c60 <strtol@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #69632	; 0x11000
   10c68:	ldr	pc, [ip, #992]!	; 0x3e0

00010c6c <select@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #69632	; 0x11000
   10c74:	ldr	pc, [ip, #984]!	; 0x3d8

00010c78 <nl_cli_link_alloc_cache@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #69632	; 0x11000
   10c80:	ldr	pc, [ip, #976]!	; 0x3d0

00010c84 <fwrite@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #69632	; 0x11000
   10c8c:	ldr	pc, [ip, #968]!	; 0x3c8

00010c90 <nfnl_queue_pf_bind@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #69632	; 0x11000
   10c98:	ldr	pc, [ip, #960]!	; 0x3c0

00010c9c <nfnl_queue_set_copy_range@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #69632	; 0x11000
   10ca4:	ldr	pc, [ip, #952]!	; 0x3b8

00010ca8 <nl_recvmsgs_default@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #944]!	; 0x3b0

00010cb4 <__stack_chk_fail@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #936]!	; 0x3a8

00010cc0 <nfnl_queue_alloc@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #928]!	; 0x3a0

00010ccc <nl_str2af@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #920]!	; 0x398

00010cd8 <nl_object_dump@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #912]!	; 0x390

00010ce4 <nl_socket_set_buffer_size@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #904]!	; 0x388

00010cf0 <puts@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #896]!	; 0x380

00010cfc <nl_geterror@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #888]!	; 0x378

00010d08 <nfnl_queue_set_group@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #880]!	; 0x370

00010d14 <nl_cli_connect@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #872]!	; 0x368

00010d20 <__fdelt_chk@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #864]!	; 0x360

00010d2c <nl_socket_disable_seq_check@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #69632	; 0x11000
   10d34:	ldr	pc, [ip, #856]!	; 0x358

00010d38 <nfnl_queue_socket_alloc@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #69632	; 0x11000
   10d40:	ldr	pc, [ip, #848]!	; 0x350

Disassembly of section .text:

00010d44 <.text>:
   10d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d48:	movw	r5, #8352	; 0x20a0
   10d4c:	movt	r5, #2
   10d50:	sub	sp, sp, #156	; 0x9c
   10d54:	mov	r6, r0
   10d58:	mov	r4, r1
   10d5c:	ldr	r3, [r5]
   10d60:	movw	fp, #8368	; 0x20b0
   10d64:	movt	fp, #2
   10d68:	str	r3, [sp, #148]	; 0x94
   10d6c:	bl	10d38 <nfnl_queue_socket_alloc@plt>
   10d70:	cmp	r0, #0
   10d74:	str	r0, [fp]
   10d78:	beq	1103c <nfnl_queue_socket_alloc@plt+0x304>
   10d7c:	bl	10d2c <nl_socket_disable_seq_check@plt>
   10d80:	ldr	r0, [fp]
   10d84:	mov	r1, #0
   10d88:	movw	r3, #4832	; 0x12e0
   10d8c:	str	r1, [sp]
   10d90:	movt	r3, #1
   10d94:	mov	r2, #3
   10d98:	movw	r7, #8368	; 0x20b0
   10d9c:	bl	10c48 <nl_socket_modify_cb@plt>
   10da0:	cmp	r6, #1
   10da4:	movt	r7, #2
   10da8:	ble	10dcc <nfnl_queue_socket_alloc@plt+0x94>
   10dac:	movw	r1, #5096	; 0x13e8
   10db0:	ldr	r0, [r4, #4]
   10db4:	movt	r1, #1
   10db8:	bl	10be8 <strcasecmp@plt>
   10dbc:	cmp	r0, #0
   10dc0:	beq	10dcc <nfnl_queue_socket_alloc@plt+0x94>
   10dc4:	cmp	r6, #2
   10dc8:	bne	10e18 <nfnl_queue_socket_alloc@plt+0xe0>
   10dcc:	movw	r0, #5100	; 0x13ec
   10dd0:	movt	r0, #1
   10dd4:	bl	10cf0 <puts@plt>
   10dd8:	movw	r0, #5160	; 0x1428
   10ddc:	movt	r0, #1
   10de0:	bl	10cf0 <puts@plt>
   10de4:	movw	r0, #5192	; 0x1448
   10de8:	movt	r0, #1
   10dec:	bl	10cf0 <puts@plt>
   10df0:	movw	r0, #5248	; 0x1480
   10df4:	movt	r0, #1
   10df8:	bl	10cf0 <puts@plt>
   10dfc:	ldr	r2, [sp, #148]	; 0x94
   10e00:	ldr	r3, [r5]
   10e04:	mov	r0, #2
   10e08:	cmp	r2, r3
   10e0c:	bne	11038 <nfnl_queue_socket_alloc@plt+0x300>
   10e10:	add	sp, sp, #156	; 0x9c
   10e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e18:	mov	r1, #12
   10e1c:	ldr	r0, [r7]
   10e20:	bl	10d14 <nl_cli_connect@plt>
   10e24:	ldr	r0, [r4, #4]
   10e28:	bl	10ccc <nl_str2af@plt>
   10e2c:	subs	r5, r0, #0
   10e30:	beq	11020 <nfnl_queue_socket_alloc@plt+0x2e8>
   10e34:	uxtb	r5, r5
   10e38:	ldr	r0, [fp]
   10e3c:	mov	r1, r5
   10e40:	bl	10bac <nfnl_queue_pf_unbind@plt>
   10e44:	mov	r1, r5
   10e48:	ldr	r0, [fp]
   10e4c:	bl	10c90 <nfnl_queue_pf_bind@plt>
   10e50:	subs	r5, r0, #0
   10e54:	blt	110e4 <nfnl_queue_socket_alloc@plt+0x3ac>
   10e58:	bl	10cc0 <nfnl_queue_alloc@plt>
   10e5c:	subs	r5, r0, #0
   10e60:	beq	110d0 <nfnl_queue_socket_alloc@plt+0x398>
   10e64:	mov	r1, #0
   10e68:	mov	r2, #10
   10e6c:	ldr	r0, [r4, #8]
   10e70:	bl	10c60 <strtol@plt>
   10e74:	uxth	r1, r0
   10e78:	mov	r0, r5
   10e7c:	bl	10d08 <nfnl_queue_set_group@plt>
   10e80:	cmp	r6, #3
   10e84:	bne	11070 <nfnl_queue_socket_alloc@plt+0x338>
   10e88:	mov	r1, #2
   10e8c:	mov	r0, r5
   10e90:	bl	10c54 <nfnl_queue_set_copy_mode@plt>
   10e94:	movw	r1, #65535	; 0xffff
   10e98:	mov	r0, r5
   10e9c:	bl	10c9c <nfnl_queue_set_copy_range@plt>
   10ea0:	mov	r1, r5
   10ea4:	ldr	r0, [fp]
   10ea8:	bl	10c30 <nfnl_queue_create@plt>
   10eac:	subs	r4, r0, #0
   10eb0:	blt	11054 <nfnl_queue_socket_alloc@plt+0x31c>
   10eb4:	bl	10bf4 <nl_cli_alloc_socket@plt>
   10eb8:	mov	r1, #0
   10ebc:	movw	r2, #8368	; 0x20b0
   10ec0:	str	r2, [sp, #12]
   10ec4:	mov	r9, #1
   10ec8:	mov	sl, r0
   10ecc:	bl	10d14 <nl_cli_connect@plt>
   10ed0:	mov	r0, sl
   10ed4:	bl	10c78 <nl_cli_link_alloc_cache@plt>
   10ed8:	mov	r1, #130048	; 0x1fc00
   10edc:	mov	r2, r1
   10ee0:	ldr	r0, [fp]
   10ee4:	bl	10ce4 <nl_socket_set_buffer_size@plt>
   10ee8:	mov	r3, #0
   10eec:	ldr	r1, [sp, #12]
   10ef0:	cmp	r3, #31
   10ef4:	mov	r6, r3
   10ef8:	str	fp, [sp, #8]
   10efc:	movt	r1, #2
   10f00:	str	r1, [sp, #12]
   10f04:	bhi	10f20 <nfnl_queue_socket_alloc@plt+0x1e8>
   10f08:	add	fp, sp, #152	; 0x98
   10f0c:	add	r2, fp, r3, lsl #2
   10f10:	add	r3, r3, #1
   10f14:	cmp	r3, #31
   10f18:	str	r6, [r2, #-132]	; 0xffffff7c
   10f1c:	bls	10f08 <nfnl_queue_socket_alloc@plt+0x1d0>
   10f20:	ldr	r1, [sp, #8]
   10f24:	add	fp, sp, #152	; 0x98
   10f28:	ldr	r0, [r1]
   10f2c:	bl	10c0c <nl_socket_get_fd@plt>
   10f30:	mov	r5, r0
   10f34:	bl	10d20 <__fdelt_chk@plt>
   10f38:	asr	r3, r5, #31
   10f3c:	add	r2, sp, #152	; 0x98
   10f40:	lsr	r3, r3, #27
   10f44:	add	r8, r5, r3
   10f48:	and	r8, r8, #31
   10f4c:	rsb	r8, r3, r8
   10f50:	add	r3, r2, r0, lsl #2
   10f54:	mov	r0, sl
   10f58:	ldr	r2, [r3, #-132]	; 0xffffff7c
   10f5c:	orr	r2, r2, r9, lsl r8
   10f60:	str	r2, [r3, #-132]	; 0xffffff7c
   10f64:	bl	10c0c <nl_socket_get_fd@plt>
   10f68:	mov	r4, r0
   10f6c:	bl	10d20 <__fdelt_chk@plt>
   10f70:	asr	r1, r4, #31
   10f74:	cmp	r4, r5
   10f78:	movge	lr, r4
   10f7c:	movlt	lr, r5
   10f80:	str	r6, [sp]
   10f84:	mov	r2, #0
   10f88:	lsr	r1, r1, #27
   10f8c:	mov	r3, r2
   10f90:	add	r7, r4, r1
   10f94:	and	r7, r7, #31
   10f98:	rsb	r7, r1, r7
   10f9c:	add	r1, sp, #20
   10fa0:	add	ip, fp, r0, lsl #2
   10fa4:	add	r0, lr, #1
   10fa8:	ldr	lr, [ip, #-132]	; 0xffffff7c
   10fac:	orr	lr, lr, r9, lsl r7
   10fb0:	str	lr, [ip, #-132]	; 0xffffff7c
   10fb4:	bl	10c6c <select@plt>
   10fb8:	cmp	r0, #0
   10fbc:	beq	1100c <nfnl_queue_socket_alloc@plt+0x2d4>
   10fc0:	mov	r0, r5
   10fc4:	bl	10d20 <__fdelt_chk@plt>
   10fc8:	add	r1, sp, #152	; 0x98
   10fcc:	add	r0, r1, r0, lsl #2
   10fd0:	ldr	r3, [r0, #-132]	; 0xffffff7c
   10fd4:	asr	r8, r3, r8
   10fd8:	tst	r8, #1
   10fdc:	beq	10fec <nfnl_queue_socket_alloc@plt+0x2b4>
   10fe0:	ldr	fp, [sp, #12]
   10fe4:	ldr	r0, [fp]
   10fe8:	bl	10ca8 <nl_recvmsgs_default@plt>
   10fec:	mov	r0, r4
   10ff0:	bl	10d20 <__fdelt_chk@plt>
   10ff4:	add	r1, sp, #152	; 0x98
   10ff8:	add	r0, r1, r0, lsl #2
   10ffc:	ldr	r3, [r0, #-132]	; 0xffffff7c
   11000:	asr	r7, r3, r7
   11004:	tst	r7, #1
   11008:	bne	11014 <nfnl_queue_socket_alloc@plt+0x2dc>
   1100c:	mov	r3, #0
   11010:	b	10f08 <nfnl_queue_socket_alloc@plt+0x1d0>
   11014:	mov	r0, sl
   11018:	bl	10ca8 <nl_recvmsgs_default@plt>
   1101c:	b	1100c <nfnl_queue_socket_alloc@plt+0x2d4>
   11020:	movw	r1, #5288	; 0x14a8
   11024:	mov	r0, #7
   11028:	movt	r1, #1
   1102c:	ldr	r2, [r4, #4]
   11030:	bl	10bc4 <nl_cli_fatal@plt>
   11034:	b	10e34 <nfnl_queue_socket_alloc@plt+0xfc>
   11038:	bl	10cb4 <__stack_chk_fail@plt>
   1103c:	mov	r0, #105	; 0x69
   11040:	movw	r1, #5060	; 0x13c4
   11044:	movt	r1, #1
   11048:	bl	10bc4 <nl_cli_fatal@plt>
   1104c:	ldr	r0, [fp]
   11050:	b	10d7c <nfnl_queue_socket_alloc@plt+0x44>
   11054:	bl	10cfc <nl_geterror@plt>
   11058:	movw	r1, #5404	; 0x151c
   1105c:	movt	r1, #1
   11060:	mov	r2, r0
   11064:	mov	r0, r4
   11068:	bl	10bc4 <nl_cli_fatal@plt>
   1106c:	b	10eb4 <nfnl_queue_socket_alloc@plt+0x17c>
   11070:	ldr	r0, [r4, #12]
   11074:	bl	10c00 <nfnl_queue_str2copy_mode@plt>
   11078:	subs	r7, r0, #0
   1107c:	bge	110a0 <nfnl_queue_socket_alloc@plt+0x368>
   11080:	ldr	r8, [r4, #12]
   11084:	bl	10cfc <nl_geterror@plt>
   11088:	movw	r1, #5368	; 0x14f8
   1108c:	movt	r1, #1
   11090:	mov	r2, r8
   11094:	mov	r3, r0
   11098:	mov	r0, r7
   1109c:	bl	10bc4 <nl_cli_fatal@plt>
   110a0:	mov	r1, r7
   110a4:	mov	r0, r5
   110a8:	bl	10c54 <nfnl_queue_set_copy_mode@plt>
   110ac:	cmp	r6, #4
   110b0:	movweq	r1, #65535	; 0xffff
   110b4:	beq	10e98 <nfnl_queue_socket_alloc@plt+0x160>
   110b8:	mov	r1, #0
   110bc:	ldr	r0, [r4, #16]
   110c0:	mov	r2, #10
   110c4:	bl	10c60 <strtol@plt>
   110c8:	mov	r1, r0
   110cc:	b	10e98 <nfnl_queue_socket_alloc@plt+0x160>
   110d0:	movw	r1, #5336	; 0x14d8
   110d4:	mov	r0, #12
   110d8:	movt	r1, #1
   110dc:	bl	10bc4 <nl_cli_fatal@plt>
   110e0:	b	10e64 <nfnl_queue_socket_alloc@plt+0x12c>
   110e4:	bl	10cfc <nl_geterror@plt>
   110e8:	movw	r1, #5308	; 0x14bc
   110ec:	movt	r1, #1
   110f0:	mov	r2, r0
   110f4:	mov	r0, r5
   110f8:	bl	10bc4 <nl_cli_fatal@plt>
   110fc:	b	10e58 <nfnl_queue_socket_alloc@plt+0x120>
   11100:	mov	fp, #0
   11104:	mov	lr, #0
   11108:	pop	{r1}		; (ldr r1, [sp], #4)
   1110c:	mov	r2, sp
   11110:	push	{r2}		; (str r2, [sp, #-4]!)
   11114:	push	{r0}		; (str r0, [sp, #-4]!)
   11118:	ldr	ip, [pc, #16]	; 11130 <nfnl_queue_socket_alloc@plt+0x3f8>
   1111c:	push	{ip}		; (str ip, [sp, #-4]!)
   11120:	ldr	r0, [pc, #12]	; 11134 <nfnl_queue_socket_alloc@plt+0x3fc>
   11124:	ldr	r3, [pc, #12]	; 11138 <nfnl_queue_socket_alloc@plt+0x400>
   11128:	bl	10bd0 <__libc_start_main@plt>
   1112c:	bl	10bb8 <abort@plt>
   11130:	muleq	r1, r0, r3
   11134:	andeq	r0, r1, r4, asr #26
   11138:	andeq	r1, r1, ip, lsr #6
   1113c:	ldr	r3, [pc, #20]	; 11158 <nfnl_queue_socket_alloc@plt+0x420>
   11140:	ldr	r2, [pc, #20]	; 1115c <nfnl_queue_socket_alloc@plt+0x424>
   11144:	add	r3, pc, r3
   11148:	ldr	r2, [r3, r2]
   1114c:	cmp	r2, #0
   11150:	bxeq	lr
   11154:	b	10bdc <__gmon_start__@plt>
   11158:			; <UNDEFINED> instruction: 0x00010eb4
   1115c:	muleq	r0, r4, r0
   11160:	push	{r3, lr}
   11164:	movw	r0, #8348	; 0x209c
   11168:	ldr	r3, [pc, #36]	; 11194 <nfnl_queue_socket_alloc@plt+0x45c>
   1116c:	movt	r0, #2
   11170:	rsb	r3, r0, r3
   11174:	cmp	r3, #6
   11178:	popls	{r3, pc}
   1117c:	movw	r3, #0
   11180:	movt	r3, #0
   11184:	cmp	r3, #0
   11188:	popeq	{r3, pc}
   1118c:	blx	r3
   11190:	pop	{r3, pc}
   11194:	muleq	r2, pc, r0	; <UNPREDICTABLE>
   11198:	push	{r3, lr}
   1119c:	movw	r0, #8348	; 0x209c
   111a0:	movw	r3, #8348	; 0x209c
   111a4:	movt	r0, #2
   111a8:	movt	r3, #2
   111ac:	rsb	r3, r0, r3
   111b0:	asr	r3, r3, #2
   111b4:	add	r3, r3, r3, lsr #31
   111b8:	asrs	r1, r3, #1
   111bc:	popeq	{r3, pc}
   111c0:	movw	r2, #0
   111c4:	movt	r2, #0
   111c8:	cmp	r2, #0
   111cc:	popeq	{r3, pc}
   111d0:	blx	r2
   111d4:	pop	{r3, pc}
   111d8:	push	{r4, lr}
   111dc:	movw	r4, #8364	; 0x20ac
   111e0:	movt	r4, #2
   111e4:	ldrb	r3, [r4]
   111e8:	cmp	r3, #0
   111ec:	popne	{r4, pc}
   111f0:	bl	11160 <nfnl_queue_socket_alloc@plt+0x428>
   111f4:	mov	r3, #1
   111f8:	strb	r3, [r4]
   111fc:	pop	{r4, pc}
   11200:	movw	r0, #7868	; 0x1ebc
   11204:	movt	r0, #2
   11208:	push	{r3, lr}
   1120c:	ldr	r3, [r0]
   11210:	cmp	r3, #0
   11214:	beq	1122c <nfnl_queue_socket_alloc@plt+0x4f4>
   11218:	movw	r3, #0
   1121c:	movt	r3, #0
   11220:	cmp	r3, #0
   11224:	beq	1122c <nfnl_queue_socket_alloc@plt+0x4f4>
   11228:	blx	r3
   1122c:	pop	{r3, lr}
   11230:	b	11198 <nfnl_queue_socket_alloc@plt+0x460>
   11234:	push	{r4, r5, lr}
   11238:	movw	r3, #8356	; 0x20a4
   1123c:	movw	r4, #8352	; 0x20a0
   11240:	movt	r3, #2
   11244:	movt	r4, #2
   11248:	sub	sp, sp, #60	; 0x3c
   1124c:	ldr	ip, [r3]
   11250:	mov	r2, #1
   11254:	ldr	lr, [r4]
   11258:	mov	r5, r0
   1125c:	mov	r1, r2
   11260:	mov	r3, #0
   11264:	str	ip, [sp, #28]
   11268:	str	lr, [sp, #52]	; 0x34
   1126c:	str	r3, [sp, #4]
   11270:	str	r3, [sp, #8]
   11274:	str	r3, [sp, #16]
   11278:	str	r3, [sp, #20]
   1127c:	str	r3, [sp, #24]
   11280:	str	r3, [sp, #32]
   11284:	str	r3, [sp, #36]	; 0x24
   11288:	str	r3, [sp, #40]	; 0x28
   1128c:	str	r3, [sp, #44]	; 0x2c
   11290:	str	r3, [sp, #48]	; 0x30
   11294:	str	r2, [sp, #12]
   11298:	mov	r2, #2
   1129c:	str	r2, [sp]
   112a0:	bl	10c3c <nfnl_queue_msg_set_verdict@plt>
   112a4:	mov	r0, r5
   112a8:	mov	r1, sp
   112ac:	bl	10cd8 <nl_object_dump@plt>
   112b0:	movw	r3, #8368	; 0x20b0
   112b4:	movt	r3, #2
   112b8:	mov	r1, r5
   112bc:	ldr	r0, [r3]
   112c0:	bl	10c18 <nfnl_queue_msg_send_verdict@plt>
   112c4:	ldr	r2, [sp, #52]	; 0x34
   112c8:	ldr	r3, [r4]
   112cc:	cmp	r2, r3
   112d0:	bne	112dc <nfnl_queue_socket_alloc@plt+0x5a4>
   112d4:	add	sp, sp, #60	; 0x3c
   112d8:	pop	{r4, r5, pc}
   112dc:	bl	10cb4 <__stack_chk_fail@plt>
   112e0:	push	{r3, lr}
   112e4:	movw	r1, #4660	; 0x1234
   112e8:	mov	r2, #0
   112ec:	movt	r1, #1
   112f0:	bl	10c24 <nl_msg_parse@plt>
   112f4:	cmp	r0, #0
   112f8:	blt	11304 <nfnl_queue_socket_alloc@plt+0x5cc>
   112fc:	mov	r0, #2
   11300:	pop	{r3, pc}
   11304:	movw	r3, #8360	; 0x20a8
   11308:	movt	r3, #2
   1130c:	mov	r1, #1
   11310:	mov	r2, #31
   11314:	ldr	r3, [r3]
   11318:	movw	r0, #5028	; 0x13a4
   1131c:	movt	r0, #1
   11320:	bl	10c84 <fwrite@plt>
   11324:	mov	r0, #2
   11328:	pop	{r3, pc}
   1132c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11330:	mov	r7, r0
   11334:	ldr	r6, [pc, #76]	; 11388 <nfnl_queue_socket_alloc@plt+0x650>
   11338:	mov	r8, r1
   1133c:	ldr	r5, [pc, #72]	; 1138c <nfnl_queue_socket_alloc@plt+0x654>
   11340:	mov	r9, r2
   11344:	add	r6, pc, r6
   11348:	bl	10b8c <nfnl_queue_pf_unbind@plt-0x20>
   1134c:	add	r5, pc, r5
   11350:	rsb	r6, r5, r6
   11354:	asrs	r6, r6, #2
   11358:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1135c:	sub	r5, r5, #4
   11360:	mov	r4, #0
   11364:	add	r4, r4, #1
   11368:	ldr	r3, [r5, #4]!
   1136c:	mov	r0, r7
   11370:	mov	r1, r8
   11374:	mov	r2, r9
   11378:	blx	r3
   1137c:	cmp	r4, r6
   11380:	bne	11364 <nfnl_queue_socket_alloc@plt+0x62c>
   11384:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11388:	andeq	r0, r1, ip, ror #22
   1138c:	andeq	r0, r1, r0, ror #22
   11390:	bx	lr

Disassembly of section .fini:

00011394 <.fini>:
   11394:	push	{r3, lr}
   11398:	pop	{r3, pc}
