
centos-preinstalled/scriptreplay:     file format elf32-littlearm


Disassembly of section .init:

00010a14 <.init>:
   10a14:	push	{r3, lr}
   10a18:	bl	1103c <abort@plt+0x494>
   10a1c:	pop	{r3, pc}

Disassembly of section .plt:

00010a20 <nanosleep@plt-0x14>:
   10a20:	push	{lr}		; (str lr, [sp, #-4]!)
   10a24:	ldr	lr, [pc, #4]	; 10a30 <nanosleep@plt-0x4>
   10a28:	add	lr, pc, lr
   10a2c:	ldr	pc, [lr, #8]!
   10a30:	ldrdeq	r1, [r1], -r0

00010a34 <nanosleep@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a40 <ferror@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a4c <_exit@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a58 <dcgettext@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a64 <__stack_chk_fail@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a70 <textdomain@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a7c <err@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a88 <__fpending@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1432]!	; 0x598

00010a94 <__libc_start_main@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1424]!	; 0x590

00010aa0 <__gmon_start__@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1416]!	; 0x588

00010aac <getopt_long@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1408]!	; 0x580

00010ab8 <exit@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1400]!	; 0x578

00010ac4 <feof@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1392]!	; 0x570

00010ad0 <warnx@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1384]!	; 0x568

00010adc <__errno_location@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1376]!	; 0x560

00010ae8 <__cxa_atexit@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1368]!	; 0x558

00010af4 <putchar@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1360]!	; 0x550

00010b00 <fscanf@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1352]!	; 0x548

00010b0c <fgetc@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1344]!	; 0x540

00010b18 <__printf_chk@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1336]!	; 0x538

00010b24 <strtod@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1328]!	; 0x530

00010b30 <write@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1320]!	; 0x528

00010b3c <__fprintf_chk@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1312]!	; 0x520

00010b48 <fclose@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1304]!	; 0x518

00010b54 <__fread_chk@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1296]!	; 0x510

00010b60 <setlocale@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1288]!	; 0x508

00010b6c <errx@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1280]!	; 0x500

00010b78 <warn@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b84 <fopen64@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b90 <bindtextdomain@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b9c <fputs@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1248]!	; 0x4e0

00010ba8 <abort@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1240]!	; 0x4d8

Disassembly of section .text:

00010bb8 <.text>:
   10bb8:	movw	r3, #8352	; 0x20a0
   10bbc:	movt	r3, #2
   10bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bc4:	vpush	{d8-d10}
   10bc8:	sub	sp, sp, #52	; 0x34
   10bcc:	ldr	r3, [r3]
   10bd0:	mov	r9, r1
   10bd4:	mov	r8, r0
   10bd8:	movw	r1, #5720	; 0x1658
   10bdc:	mov	r0, #6
   10be0:	movt	r1, #1
   10be4:	str	r3, [sp, #44]	; 0x2c
   10be8:	bl	10b60 <setlocale@plt>
   10bec:	movw	r1, #6248	; 0x1868
   10bf0:	mov	r0, #1
   10bf4:	movt	r1, #1
   10bf8:	vmov.f64	d8, #112	; 0x3f800000  1.0
   10bfc:	bl	10b60 <setlocale@plt>
   10c00:	movw	r0, #6252	; 0x186c
   10c04:	movw	r1, #6264	; 0x1878
   10c08:	movt	r0, #1
   10c0c:	movt	r1, #1
   10c10:	mov	r6, #0
   10c14:	bl	10b90 <bindtextdomain@plt>
   10c18:	movw	r0, #6252	; 0x186c
   10c1c:	movt	r0, #1
   10c20:	movw	r7, #8376	; 0x20b8
   10c24:	bl	10a70 <textdomain@plt>
   10c28:	movw	r0, #5136	; 0x1410
   10c2c:	movt	r0, #1
   10c30:	movt	r7, #2
   10c34:	bl	115b4 <abort@plt+0xa0c>
   10c38:	mov	r4, r6
   10c3c:	mov	r5, r6
   10c40:	mov	sl, r6
   10c44:	str	sl, [sp]
   10c48:	movw	r2, #6316	; 0x18ac
   10c4c:	movw	r3, #5616	; 0x15f0
   10c50:	movt	r2, #1
   10c54:	movt	r3, #1
   10c58:	mov	r0, r8
   10c5c:	mov	r1, r9
   10c60:	bl	10aac <getopt_long@plt>
   10c64:	sxtb	r0, r0
   10c68:	cmn	r0, #1
   10c6c:	beq	10d94 <abort@plt+0x1ec>
   10c70:	sub	r3, r0, #86	; 0x56
   10c74:	cmp	r3, #30
   10c78:	ldrls	pc, [pc, r3, lsl #2]
   10c7c:	b	10d84 <abort@plt+0x1dc>
   10c80:	andeq	r0, r1, r0, lsr sp
   10c84:	andeq	r0, r1, r4, lsl #27
   10c88:	andeq	r0, r1, r4, lsl #27
   10c8c:	andeq	r0, r1, r4, lsl #27
   10c90:	andeq	r0, r1, r4, lsl #27
   10c94:	andeq	r0, r1, r4, lsl #27
   10c98:	andeq	r0, r1, r4, lsl #27
   10c9c:	andeq	r0, r1, r4, lsl #27
   10ca0:	andeq	r0, r1, r4, lsl #27
   10ca4:	andeq	r0, r1, r4, lsl #27
   10ca8:	andeq	r0, r1, r4, lsl #27
   10cac:	andeq	r0, r1, r4, lsl #27
   10cb0:	andeq	r0, r1, r4, lsl #27
   10cb4:	andeq	r0, r1, r4, lsl #27
   10cb8:	andeq	r0, r1, ip, lsl sp
   10cbc:	andeq	r0, r1, r4, lsl #27
   10cc0:	andeq	r0, r1, r4, lsl #27
   10cc4:	andeq	r0, r1, r4, lsl #27
   10cc8:	andeq	r0, r1, ip, lsl #26
   10ccc:	andeq	r0, r1, r4, lsl #27
   10cd0:	andeq	r0, r1, r4, lsl #27
   10cd4:	andeq	r0, r1, r4, lsl #27
   10cd8:	andeq	r0, r1, r4, lsl #27
   10cdc:	andeq	r0, r1, r4, lsl #27
   10ce0:	andeq	r0, r1, r4, lsl #27
   10ce4:	andeq	r0, r1, r4, lsl #27
   10ce8:	andeq	r0, r1, r4, lsl #27
   10cec:	andeq	r0, r1, r4, lsl #27
   10cf0:	andeq	r0, r1, r4, lsl #27
   10cf4:	andeq	r0, r1, r4, lsl #26
   10cf8:	strdeq	r0, [r1], -ip
   10cfc:	ldr	r4, [r7]
   10d00:	b	10c44 <abort@plt+0x9c>
   10d04:	ldr	r5, [r7]
   10d08:	b	10c44 <abort@plt+0x9c>
   10d0c:	movw	r3, #8368	; 0x20b0
   10d10:	movt	r3, #2
   10d14:	ldr	r0, [r3]
   10d18:	bl	11138 <abort@plt+0x590>
   10d1c:	ldr	r0, [r7]
   10d20:	mov	r6, #1
   10d24:	bl	111e0 <abort@plt+0x638>
   10d28:	vmov.f64	d8, d0
   10d2c:	b	10c44 <abort@plt+0x9c>
   10d30:	mov	r2, #5
   10d34:	movw	r1, #6284	; 0x188c
   10d38:	mov	r0, #0
   10d3c:	movt	r1, #1
   10d40:	bl	10a58 <dcgettext@plt>
   10d44:	movw	r2, #8344	; 0x2098
   10d48:	movt	r2, #2
   10d4c:	movw	r3, #6296	; 0x1898
   10d50:	movt	r3, #1
   10d54:	ldr	r2, [r2]
   10d58:	mov	r1, r0
   10d5c:	mov	r0, #1
   10d60:	bl	10b18 <__printf_chk@plt>
   10d64:	mov	r0, #0
   10d68:	bl	10ab8 <exit@plt>
   10d6c:	movw	r1, #6328	; 0x18b8
   10d70:	mov	r2, #5
   10d74:	movt	r1, #1
   10d78:	mov	r0, #0
   10d7c:	bl	10a58 <dcgettext@plt>
   10d80:	bl	10ad0 <warnx@plt>
   10d84:	movw	r3, #8364	; 0x20ac
   10d88:	movt	r3, #2
   10d8c:	ldr	r0, [r3]
   10d90:	bl	11138 <abort@plt+0x590>
   10d94:	movw	r3, #8360	; 0x20a8
   10d98:	movt	r3, #2
   10d9c:	rsbs	r2, r4, #1
   10da0:	ldr	r3, [r3]
   10da4:	movcc	r2, #0
   10da8:	rsb	r8, r3, r8
   10dac:	cmp	r8, #0
   10db0:	cmple	r4, #0
   10db4:	beq	10d6c <abort@plt+0x1c4>
   10db8:	cmp	r8, #3
   10dbc:	bgt	10d6c <abort@plt+0x1c4>
   10dc0:	cmp	r2, #0
   10dc4:	add	r1, r9, r3, lsl #2
   10dc8:	ldrne	r4, [r9, r3, lsl #2]
   10dcc:	movne	r2, #1
   10dd0:	cmp	r5, #0
   10dd4:	beq	10fa8 <abort@plt+0x400>
   10dd8:	cmp	r6, #0
   10ddc:	bne	10dec <abort@plt+0x244>
   10de0:	cmp	r2, r8
   10de4:	blt	10fc0 <abort@plt+0x418>
   10de8:	vmov.f64	d8, #112	; 0x3f800000  1.0
   10dec:	movw	r1, #6356	; 0x18d4
   10df0:	mov	r0, r4
   10df4:	movt	r1, #1
   10df8:	bl	10b84 <fopen64@plt>
   10dfc:	subs	fp, r0, #0
   10e00:	movweq	r1, #6360	; 0x18d8
   10e04:	moveq	r2, #5
   10e08:	movteq	r1, #1
   10e0c:	beq	10f70 <abort@plt+0x3c8>
   10e10:	movw	r1, #6356	; 0x18d4
   10e14:	mov	r0, r5
   10e18:	movt	r1, #1
   10e1c:	bl	10b84 <fopen64@plt>
   10e20:	subs	sl, r0, #0
   10e24:	bne	10e34 <abort@plt+0x28c>
   10e28:	b	10fd0 <abort@plt+0x428>
   10e2c:	cmp	r0, #10
   10e30:	beq	10e44 <abort@plt+0x29c>
   10e34:	mov	r0, sl
   10e38:	bl	10b0c <fgetc@plt>
   10e3c:	cmn	r0, #1
   10e40:	bne	10e2c <abort@plt+0x284>
   10e44:	mov	r8, #0
   10e48:	add	r7, sp, #28
   10e4c:	add	r6, sp, #36	; 0x24
   10e50:	mov	r9, r8
   10e54:	vldr	d9, [pc, #404]	; 10ff0 <abort@plt+0x448>
   10e58:	vldr	d10, [pc, #408]	; 10ff8 <abort@plt+0x450>
   10e5c:	b	10e70 <abort@plt+0x2c8>
   10e60:	cmp	r8, #0
   10e64:	bne	10f0c <abort@plt+0x364>
   10e68:	ldr	r8, [sp, #12]
   10e6c:	add	r9, r9, #1
   10e70:	add	r3, sp, #11
   10e74:	movw	r1, #6376	; 0x18e8
   10e78:	str	r3, [sp]
   10e7c:	mov	r0, fp
   10e80:	movt	r1, #1
   10e84:	add	r2, sp, #16
   10e88:	add	r3, sp, #12
   10e8c:	bl	10b00 <fscanf@plt>
   10e90:	cmp	r0, #3
   10e94:	bne	10f20 <abort@plt+0x378>
   10e98:	ldrsb	r3, [sp, #11]
   10e9c:	cmp	r3, #10
   10ea0:	bne	10f20 <abort@plt+0x378>
   10ea4:	vldr	d7, [sp, #16]
   10ea8:	vdiv.f64	d7, d7, d8
   10eac:	vcmpe.f64	d7, d9
   10eb0:	vstr	d7, [sp, #16]
   10eb4:	vmrs	APSR_nzcv, fpscr
   10eb8:	ble	10e60 <abort@plt+0x2b8>
   10ebc:	vcvt.s32.f64	s11, d7
   10ec0:	vcvt.f64.s32	d6, s11
   10ec4:	vstr	s11, [sp, #28]
   10ec8:	vsub.f64	d7, d7, d6
   10ecc:	vmul.f64	d7, d7, d10
   10ed0:	vcvt.s32.f64	s14, d7
   10ed4:	vstr	s14, [sp, #32]
   10ed8:	b	10ef4 <abort@plt+0x34c>
   10edc:	bl	10adc <__errno_location@plt>
   10ee0:	ldr	r3, [r0]
   10ee4:	cmp	r3, #4
   10ee8:	bne	10e60 <abort@plt+0x2b8>
   10eec:	ldm	r6, {r0, r1}
   10ef0:	stm	r7, {r0, r1}
   10ef4:	mov	r0, r7
   10ef8:	mov	r1, r6
   10efc:	bl	10a34 <nanosleep@plt>
   10f00:	cmn	r0, #1
   10f04:	beq	10edc <abort@plt+0x334>
   10f08:	b	10e60 <abort@plt+0x2b8>
   10f0c:	mov	r2, r8
   10f10:	mov	r0, sl
   10f14:	mov	r1, r5
   10f18:	bl	112f8 <abort@plt+0x750>
   10f1c:	b	10e68 <abort@plt+0x2c0>
   10f20:	mov	r0, fp
   10f24:	bl	10ac4 <feof@plt>
   10f28:	subs	r5, r0, #0
   10f2c:	beq	10f50 <abort@plt+0x3a8>
   10f30:	mov	r0, sl
   10f34:	bl	10b48 <fclose@plt>
   10f38:	mov	r0, fp
   10f3c:	bl	10b48 <fclose@plt>
   10f40:	mov	r0, #10
   10f44:	bl	10af4 <putchar@plt>
   10f48:	mov	r0, #0
   10f4c:	bl	10ab8 <exit@plt>
   10f50:	mov	r0, fp
   10f54:	bl	10a40 <ferror@plt>
   10f58:	cmp	r0, #0
   10f5c:	beq	10f84 <abort@plt+0x3dc>
   10f60:	movw	r1, #6388	; 0x18f4
   10f64:	movt	r1, #1
   10f68:	mov	r0, r5
   10f6c:	mov	r2, #5
   10f70:	bl	10a58 <dcgettext@plt>
   10f74:	mov	r2, r4
   10f78:	mov	r1, r0
   10f7c:	mov	r0, #1
   10f80:	bl	10a7c <err@plt>
   10f84:	mov	r2, #5
   10f88:	movw	r1, #6420	; 0x1914
   10f8c:	movt	r1, #1
   10f90:	bl	10a58 <dcgettext@plt>
   10f94:	mov	r2, r4
   10f98:	mov	r3, r9
   10f9c:	mov	r1, r0
   10fa0:	mov	r0, #1
   10fa4:	bl	10b6c <errx@plt>
   10fa8:	cmp	r2, r8
   10fac:	ldrlt	r5, [r1, r2, lsl #2]
   10fb0:	movwge	r5, #6236	; 0x185c
   10fb4:	addlt	r2, r2, #1
   10fb8:	movtge	r5, #1
   10fbc:	b	10dd8 <abort@plt+0x230>
   10fc0:	ldr	r0, [r1, r2, lsl #2]
   10fc4:	bl	111e0 <abort@plt+0x638>
   10fc8:	vmov.f64	d8, d0
   10fcc:	b	10dec <abort@plt+0x244>
   10fd0:	mov	r2, #5
   10fd4:	movw	r1, #6360	; 0x18d8
   10fd8:	movt	r1, #1
   10fdc:	bl	10a58 <dcgettext@plt>
   10fe0:	mov	r2, r5
   10fe4:	mov	r1, r0
   10fe8:	mov	r0, #1
   10fec:	bl	10a7c <err@plt>
   10ff0:	bl	721cac <optarg@@GLIBC_2.4+0x6ffbf4>
   10ff4:	svccc	0x001a36e2
   10ff8:	andeq	r0, r0, r0
   10ffc:	bicmi	ip, sp, r5, ror #26
   11000:	mov	fp, #0
   11004:	mov	lr, #0
   11008:	pop	{r1}		; (ldr r1, [sp], #4)
   1100c:	mov	r2, sp
   11010:	push	{r2}		; (str r2, [sp, #-4]!)
   11014:	push	{r0}		; (str r0, [sp, #-4]!)
   11018:	ldr	ip, [pc, #16]	; 11030 <abort@plt+0x488>
   1101c:	push	{ip}		; (str ip, [sp, #-4]!)
   11020:	ldr	r0, [pc, #12]	; 11034 <abort@plt+0x48c>
   11024:	ldr	r3, [pc, #12]	; 11038 <abort@plt+0x490>
   11028:	bl	10a94 <__libc_start_main@plt>
   1102c:	bl	10ba8 <abort@plt>
   11030:			; <UNDEFINED> instruction: 0x000115b0
   11034:			; <UNDEFINED> instruction: 0x00010bb8
   11038:	andeq	r1, r1, ip, asr #10
   1103c:	ldr	r3, [pc, #20]	; 11058 <abort@plt+0x4b0>
   11040:	ldr	r2, [pc, #20]	; 1105c <abort@plt+0x4b4>
   11044:	add	r3, pc, r3
   11048:	ldr	r2, [r3, r2]
   1104c:	cmp	r2, #0
   11050:	bxeq	lr
   11054:	b	10aa0 <__gmon_start__@plt>
   11058:			; <UNDEFINED> instruction: 0x00010fb4
   1105c:	andeq	r0, r0, ip, lsl #1
   11060:	push	{r3, lr}
   11064:	movw	r0, #8344	; 0x2098
   11068:	ldr	r3, [pc, #36]	; 11094 <abort@plt+0x4ec>
   1106c:	movt	r0, #2
   11070:	rsb	r3, r0, r3
   11074:	cmp	r3, #6
   11078:	popls	{r3, pc}
   1107c:	movw	r3, #0
   11080:	movt	r3, #0
   11084:	cmp	r3, #0
   11088:	popeq	{r3, pc}
   1108c:	blx	r3
   11090:	pop	{r3, pc}
   11094:	muleq	r2, fp, r0
   11098:	push	{r3, lr}
   1109c:	movw	r0, #8344	; 0x2098
   110a0:	movw	r3, #8344	; 0x2098
   110a4:	movt	r0, #2
   110a8:	movt	r3, #2
   110ac:	rsb	r3, r0, r3
   110b0:	asr	r3, r3, #2
   110b4:	add	r3, r3, r3, lsr #31
   110b8:	asrs	r1, r3, #1
   110bc:	popeq	{r3, pc}
   110c0:	movw	r2, #0
   110c4:	movt	r2, #0
   110c8:	cmp	r2, #0
   110cc:	popeq	{r3, pc}
   110d0:	blx	r2
   110d4:	pop	{r3, pc}
   110d8:	push	{r4, lr}
   110dc:	movw	r4, #8380	; 0x20bc
   110e0:	movt	r4, #2
   110e4:	ldrb	r3, [r4]
   110e8:	cmp	r3, #0
   110ec:	popne	{r4, pc}
   110f0:	bl	11060 <abort@plt+0x4b8>
   110f4:	mov	r3, #1
   110f8:	strb	r3, [r4]
   110fc:	pop	{r4, pc}
   11100:	movw	r0, #7940	; 0x1f04
   11104:	movt	r0, #2
   11108:	push	{r3, lr}
   1110c:	ldr	r3, [r0]
   11110:	cmp	r3, #0
   11114:	beq	1112c <abort@plt+0x584>
   11118:	movw	r3, #0
   1111c:	movt	r3, #0
   11120:	cmp	r3, #0
   11124:	beq	1112c <abort@plt+0x584>
   11128:	blx	r3
   1112c:	pop	{r3, lr}
   11130:	b	11098 <abort@plt+0x4f0>
   11134:	andeq	r0, r0, r0
   11138:	push	{r4, lr}
   1113c:	mov	r2, #5
   11140:	mov	r4, r0
   11144:	movw	r1, #5712	; 0x1650
   11148:	mov	r0, #0
   1114c:	movt	r1, #1
   11150:	bl	10a58 <dcgettext@plt>
   11154:	mov	r1, r4
   11158:	bl	10b9c <fputs@plt>
   1115c:	mov	r2, #5
   11160:	movw	r1, #5724	; 0x165c
   11164:	mov	r0, #0
   11168:	movt	r1, #1
   1116c:	bl	10a58 <dcgettext@plt>
   11170:	movw	r3, #8344	; 0x2098
   11174:	movt	r3, #2
   11178:	mov	r1, #1
   1117c:	ldr	r3, [r3]
   11180:	mov	r2, r0
   11184:	mov	r0, r4
   11188:	bl	10b3c <__fprintf_chk@plt>
   1118c:	mov	r2, #5
   11190:	movw	r1, #5768	; 0x1688
   11194:	mov	r0, #0
   11198:	movt	r1, #1
   1119c:	bl	10a58 <dcgettext@plt>
   111a0:	mov	r1, r4
   111a4:	bl	10b9c <fputs@plt>
   111a8:	mov	r2, #5
   111ac:	movw	r1, #5780	; 0x1694
   111b0:	mov	r0, #0
   111b4:	movt	r1, #1
   111b8:	bl	10a58 <dcgettext@plt>
   111bc:	mov	r1, r4
   111c0:	bl	10b9c <fputs@plt>
   111c4:	movw	r3, #8364	; 0x20ac
   111c8:	movt	r3, #2
   111cc:	ldr	r0, [r3]
   111d0:	subs	r3, r4, r0
   111d4:	rsbs	r0, r3, #0
   111d8:	adcs	r0, r0, r3
   111dc:	bl	10ab8 <exit@plt>
   111e0:	push	{r4, r5, r6, r7, lr}
   111e4:	movw	r4, #8352	; 0x20a0
   111e8:	movt	r4, #2
   111ec:	sub	sp, sp, #12
   111f0:	mov	r6, r0
   111f4:	mov	r7, #0
   111f8:	ldr	r3, [r4]
   111fc:	str	r3, [sp, #4]
   11200:	bl	10adc <__errno_location@plt>
   11204:	mov	r1, sp
   11208:	mov	r5, r0
   1120c:	mov	r0, r6
   11210:	str	r7, [r5]
   11214:	bl	10b24 <strtod@plt>
   11218:	ldr	r3, [sp]
   1121c:	cmp	r3, r7
   11220:	beq	11230 <abort@plt+0x688>
   11224:	ldrsb	r3, [r3]
   11228:	cmp	r3, r7
   1122c:	bne	112c0 <abort@plt+0x718>
   11230:	vldr	d7, [pc, #176]	; 112e8 <abort@plt+0x740>
   11234:	vcmpe.f64	d0, d7
   11238:	vmrs	APSR_nzcv, fpscr
   1123c:	ble	1127c <abort@plt+0x6d4>
   11240:	ldr	r3, [r5]
   11244:	cmp	r3, #34	; 0x22
   11248:	movweq	r1, #6116	; 0x17e4
   1124c:	moveq	r0, #0
   11250:	movteq	r1, #1
   11254:	beq	112a8 <abort@plt+0x700>
   11258:	vcmp.f64	d0, d0
   1125c:	vmrs	APSR_nzcv, fpscr
   11260:	bne	11294 <abort@plt+0x6ec>
   11264:	ldr	r2, [sp, #4]
   11268:	ldr	r3, [r4]
   1126c:	cmp	r2, r3
   11270:	bne	11290 <abort@plt+0x6e8>
   11274:	add	sp, sp, #12
   11278:	pop	{r4, r5, r6, r7, pc}
   1127c:	vldr	d7, [pc, #108]	; 112f0 <abort@plt+0x748>
   11280:	vcmpe.f64	d0, d7
   11284:	vmrs	APSR_nzcv, fpscr
   11288:	bpl	11258 <abort@plt+0x6b0>
   1128c:	b	11240 <abort@plt+0x698>
   11290:	bl	10a64 <__stack_chk_fail@plt>
   11294:	movw	r1, #6116	; 0x17e4
   11298:	movt	r1, #1
   1129c:	mov	r0, #0
   112a0:	mov	r3, #22
   112a4:	str	r3, [r5]
   112a8:	mov	r2, #5
   112ac:	bl	10a58 <dcgettext@plt>
   112b0:	mov	r2, r6
   112b4:	mov	r1, r0
   112b8:	mov	r0, #1
   112bc:	bl	10a7c <err@plt>
   112c0:	mov	r2, #5
   112c4:	mov	r0, r7
   112c8:	movw	r1, #6084	; 0x17c4
   112cc:	movt	r1, #1
   112d0:	bl	10a58 <dcgettext@plt>
   112d4:	mov	r2, r6
   112d8:	mov	r1, r0
   112dc:	mov	r0, #1
   112e0:	bl	10b6c <errx@plt>
   112e4:	nop	{0}
   112e8:			; <UNDEFINED> instruction: 0xffffffff
   112ec:	svcvc	0x00efffff
   112f0:			; <UNDEFINED> instruction: 0xffffffff
   112f4:			; <UNDEFINED> instruction: 0xffefffff
   112f8:	push	{r4, r5, r6, r7, r8, lr}
   112fc:	movw	r7, #8352	; 0x20a0
   11300:	movt	r7, #2
   11304:	sub	sp, sp, #8192	; 0x2000
   11308:	sub	sp, sp, #16
   1130c:	subs	r4, r2, #0
   11310:	ldr	r3, [r7]
   11314:	add	r2, sp, #8192	; 0x2000
   11318:	mov	r6, r0
   1131c:	mov	r8, r1
   11320:	str	r3, [r2, #12]
   11324:	bne	11350 <abort@plt+0x7a8>
   11328:	b	113ac <abort@plt+0x804>
   1132c:	mov	r0, #1
   11330:	add	r1, sp, #12
   11334:	mov	r2, r5
   11338:	rsb	r4, r5, r4
   1133c:	bl	10b30 <write@plt>
   11340:	cmp	r0, r5
   11344:	bne	113ec <abort@plt+0x844>
   11348:	cmp	r4, #0
   1134c:	beq	113ac <abort@plt+0x804>
   11350:	mov	r1, #8192	; 0x2000
   11354:	str	r6, [sp]
   11358:	cmp	r4, r1
   1135c:	movcc	r3, r4
   11360:	movcs	r3, r1
   11364:	add	r0, sp, #12
   11368:	mov	r2, #1
   1136c:	bl	10b54 <__fread_chk@plt>
   11370:	subs	r5, r0, #0
   11374:	bne	1132c <abort@plt+0x784>
   11378:	mov	r0, r6
   1137c:	bl	10ac4 <feof@plt>
   11380:	cmp	r0, #0
   11384:	beq	113cc <abort@plt+0x824>
   11388:	mov	r2, #5
   1138c:	mov	r0, r5
   11390:	movw	r1, #6156	; 0x180c
   11394:	movt	r1, #1
   11398:	bl	10a58 <dcgettext@plt>
   1139c:	mov	r2, r8
   113a0:	mov	r1, r0
   113a4:	mov	r0, #1
   113a8:	bl	10b6c <errx@plt>
   113ac:	add	r3, sp, #8192	; 0x2000
   113b0:	ldr	r2, [r3, #12]
   113b4:	ldr	r3, [r7]
   113b8:	cmp	r2, r3
   113bc:	bne	1140c <abort@plt+0x864>
   113c0:	add	sp, sp, #8192	; 0x2000
   113c4:	add	sp, sp, #16
   113c8:	pop	{r4, r5, r6, r7, r8, pc}
   113cc:	mov	r2, #5
   113d0:	movw	r1, #6188	; 0x182c
   113d4:	movt	r1, #1
   113d8:	bl	10a58 <dcgettext@plt>
   113dc:	mov	r2, r8
   113e0:	mov	r1, r0
   113e4:	mov	r0, #1
   113e8:	bl	10a7c <err@plt>
   113ec:	movw	r1, #6132	; 0x17f4
   113f0:	mov	r0, #0
   113f4:	movt	r1, #1
   113f8:	mov	r2, #5
   113fc:	bl	10a58 <dcgettext@plt>
   11400:	mov	r1, r0
   11404:	mov	r0, #1
   11408:	bl	10a7c <err@plt>
   1140c:	bl	10a64 <__stack_chk_fail@plt>
   11410:	movw	r3, #8368	; 0x20b0
   11414:	movt	r3, #2
   11418:	push	{r4, r5, r6, lr}
   1141c:	ldr	r4, [r3]
   11420:	mov	r0, r4
   11424:	bl	10a88 <__fpending@plt>
   11428:	mov	r6, r0
   1142c:	mov	r0, r4
   11430:	bl	10a40 <ferror@plt>
   11434:	mov	r5, r0
   11438:	mov	r0, r4
   1143c:	bl	10b48 <fclose@plt>
   11440:	adds	r4, r0, #0
   11444:	movne	r4, #1
   11448:	cmp	r5, #0
   1144c:	bne	114c4 <abort@plt+0x91c>
   11450:	cmp	r4, #0
   11454:	beq	11470 <abort@plt+0x8c8>
   11458:	cmp	r6, #0
   1145c:	beq	11514 <abort@plt+0x96c>
   11460:	bl	10adc <__errno_location@plt>
   11464:	ldr	r3, [r0]
   11468:	cmp	r3, #32
   1146c:	bne	11528 <abort@plt+0x980>
   11470:	movw	r3, #8364	; 0x20ac
   11474:	movt	r3, #2
   11478:	ldr	r4, [r3]
   1147c:	mov	r0, r4
   11480:	bl	10a88 <__fpending@plt>
   11484:	mov	r6, r0
   11488:	mov	r0, r4
   1148c:	bl	10a40 <ferror@plt>
   11490:	mov	r5, r0
   11494:	mov	r0, r4
   11498:	bl	10b48 <fclose@plt>
   1149c:	adds	r4, r0, #0
   114a0:	movne	r4, #1
   114a4:	cmp	r5, #0
   114a8:	beq	114f0 <abort@plt+0x948>
   114ac:	cmp	r4, #0
   114b0:	bne	114bc <abort@plt+0x914>
   114b4:	bl	10adc <__errno_location@plt>
   114b8:	str	r4, [r0]
   114bc:	mov	r0, #1
   114c0:	bl	10a4c <_exit@plt>
   114c4:	cmp	r4, #0
   114c8:	bne	11460 <abort@plt+0x8b8>
   114cc:	bl	10adc <__errno_location@plt>
   114d0:	str	r4, [r0]
   114d4:	mov	r2, #5
   114d8:	movw	r1, #6224	; 0x1850
   114dc:	mov	r0, #0
   114e0:	movt	r1, #1
   114e4:	bl	10a58 <dcgettext@plt>
   114e8:	bl	10ad0 <warnx@plt>
   114ec:	b	114bc <abort@plt+0x914>
   114f0:	cmp	r4, #0
   114f4:	popeq	{r4, r5, r6, pc}
   114f8:	cmp	r6, #0
   114fc:	bne	114bc <abort@plt+0x914>
   11500:	bl	10adc <__errno_location@plt>
   11504:	ldr	r3, [r0]
   11508:	cmp	r3, #9
   1150c:	bne	114bc <abort@plt+0x914>
   11510:	pop	{r4, r5, r6, pc}
   11514:	bl	10adc <__errno_location@plt>
   11518:	ldr	r3, [r0]
   1151c:	cmp	r3, #9
   11520:	bne	11468 <abort@plt+0x8c0>
   11524:	b	11470 <abort@plt+0x8c8>
   11528:	cmp	r3, #0
   1152c:	beq	114d4 <abort@plt+0x92c>
   11530:	mov	r2, #5
   11534:	movw	r1, #6224	; 0x1850
   11538:	mov	r0, #0
   1153c:	movt	r1, #1
   11540:	bl	10a58 <dcgettext@plt>
   11544:	bl	10b78 <warn@plt>
   11548:	b	114bc <abort@plt+0x914>
   1154c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11550:	mov	r7, r0
   11554:	ldr	r6, [pc, #76]	; 115a8 <abort@plt+0xa00>
   11558:	mov	r8, r1
   1155c:	ldr	r5, [pc, #72]	; 115ac <abort@plt+0xa04>
   11560:	mov	r9, r2
   11564:	add	r6, pc, r6
   11568:	bl	10a14 <nanosleep@plt-0x20>
   1156c:	add	r5, pc, r5
   11570:	rsb	r6, r5, r6
   11574:	asrs	r6, r6, #2
   11578:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1157c:	sub	r5, r5, #4
   11580:	mov	r4, #0
   11584:	add	r4, r4, #1
   11588:	ldr	r3, [r5, #4]!
   1158c:	mov	r0, r7
   11590:	mov	r1, r8
   11594:	mov	r2, r9
   11598:	blx	r3
   1159c:	cmp	r4, r6
   115a0:	bne	11584 <abort@plt+0x9dc>
   115a4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   115a8:	muleq	r1, r4, r9
   115ac:	andeq	r0, r1, r8, lsl #19
   115b0:	bx	lr
   115b4:	ldr	r3, [pc, #28]	; 115d8 <abort@plt+0xa30>
   115b8:	mov	r1, #0
   115bc:	ldr	r2, [pc, #24]	; 115dc <abort@plt+0xa34>
   115c0:	add	r3, pc, r3
   115c4:	ldr	r3, [r3, r2]
   115c8:	cmp	r3, #0
   115cc:	ldrne	r2, [r3]
   115d0:	moveq	r2, r3
   115d4:	b	10ae8 <__cxa_atexit@plt>
   115d8:	andeq	r0, r1, r8, lsr sl
   115dc:	muleq	r0, r0, r0

Disassembly of section .fini:

000115e0 <.fini>:
   115e0:	push	{r3, lr}
   115e4:	pop	{r3, pc}
