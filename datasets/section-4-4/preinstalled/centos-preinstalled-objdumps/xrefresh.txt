
centos-preinstalled/xrefresh:     file format elf32-littlearm


Disassembly of section .init:

00010808 <_init@@Base>:
   10808:	push	{r3, lr}
   1080c:	bl	10f58 <abort@plt+0x658>
   10810:	pop	{r3, pc}

Disassembly of section .plt:

00010814 <XGetDefault@plt-0x14>:
   10814:	push	{lr}		; (str lr, [sp, #-4]!)
   10818:	ldr	lr, [pc, #4]	; 10824 <_init@@Base+0x1c>
   1081c:	add	lr, pc, lr
   10820:	ldr	pc, [lr, #8]!
   10824:	ldrdeq	r1, [r1], -ip

00010828 <XGetDefault@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2012]!	; 0x7dc

00010834 <strcmp@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2004]!	; 0x7d4

00010840 <XAllocColor@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #1996]!	; 0x7cc

0001084c <XParseGeometry@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #1988]!	; 0x7c4

00010858 <strcasecmp@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #1980]!	; 0x7bc

00010864 <__libc_start_main@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #1972]!	; 0x7b4

00010870 <XOpenDisplay@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #1964]!	; 0x7ac

0001087c <__gmon_start__@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #1956]!	; 0x7a4

00010888 <exit@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #69632	; 0x11000
   10890:	ldr	pc, [ip, #1948]!	; 0x79c

00010894 <strlen@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #69632	; 0x11000
   1089c:	ldr	pc, [ip, #1940]!	; 0x794

000108a0 <__strdup@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #69632	; 0x11000
   108a8:	ldr	pc, [ip, #1932]!	; 0x78c

000108ac <XDisplayName@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #69632	; 0x11000
   108b4:	ldr	pc, [ip, #1924]!	; 0x784

000108b8 <XCreateWindow@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #69632	; 0x11000
   108c0:	ldr	pc, [ip, #1916]!	; 0x77c

000108c4 <__fprintf_chk@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #69632	; 0x11000
   108cc:	ldr	pc, [ip, #1908]!	; 0x774

000108d0 <XMapWindow@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #69632	; 0x11000
   108d8:	ldr	pc, [ip, #1900]!	; 0x76c

000108dc <XParseColor@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #69632	; 0x11000
   108e4:	ldr	pc, [ip, #1892]!	; 0x764

000108e8 <XCloseDisplay@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #69632	; 0x11000
   108f0:	ldr	pc, [ip, #1884]!	; 0x75c

000108f4 <strncmp@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #69632	; 0x11000
   108fc:	ldr	pc, [ip, #1876]!	; 0x754

00010900 <abort@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #69632	; 0x11000
   10908:	ldr	pc, [ip, #1868]!	; 0x74c

Disassembly of section .text:

0001090c <.text>:
   1090c:	movw	r3, #8288	; 0x2060
   10910:	movt	r3, #2
   10914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10918:	cmp	r0, #1
   1091c:	ldr	r2, [r3]
   10920:	sub	sp, sp, #172	; 0xac
   10924:	ldr	r3, [r1]
   10928:	movw	r7, #8304	; 0x2070
   1092c:	movt	r7, #2
   10930:	mov	r6, r1
   10934:	mov	fp, r0
   10938:	str	r2, [sp, #164]	; 0xa4
   1093c:	str	r3, [r7]
   10940:	ble	10bdc <abort@plt+0x2dc>
   10944:	mov	r8, #0
   10948:	mov	r4, #1
   1094c:	mov	r9, r8
   10950:	str	r8, [sp, #32]
   10954:	str	r8, [sp, #36]	; 0x24
   10958:	b	10974 <abort@plt+0x74>
   1095c:	cmp	r3, #61	; 0x3d
   10960:	bne	10b10 <abort@plt+0x210>
   10964:	add	r4, r4, #1
   10968:	cmp	fp, r4
   1096c:	ble	109c8 <abort@plt+0xc8>
   10970:	mov	r9, r5
   10974:	ldr	r5, [r6, r4, lsl #2]
   10978:	lsl	sl, r4, #2
   1097c:	ldrb	r3, [r5]
   10980:	cmp	r3, #45	; 0x2d
   10984:	bne	1095c <abort@plt+0x5c>
   10988:	movw	r0, #5036	; 0x13ac
   1098c:	mov	r1, r5
   10990:	movt	r0, #1
   10994:	bl	110ac <abort@plt+0x7ac>
   10998:	cmp	r0, #0
   1099c:	beq	10ae4 <abort@plt+0x1e4>
   109a0:	add	r4, r4, #1
   109a4:	cmp	fp, r4
   109a8:	ble	10b10 <abort@plt+0x210>
   109ac:	add	ip, r6, sl
   109b0:	add	r4, r4, #1
   109b4:	cmp	fp, r4
   109b8:	mov	r5, r9
   109bc:	ldr	ip, [ip, #4]
   109c0:	str	ip, [sp, #36]	; 0x24
   109c4:	bgt	10970 <abort@plt+0x70>
   109c8:	ldr	r0, [sp, #36]	; 0x24
   109cc:	bl	10870 <XOpenDisplay@plt>
   109d0:	subs	r4, r0, #0
   109d4:	beq	10e0c <abort@plt+0x50c>
   109d8:	ldr	ip, [sp, #32]
   109dc:	cmp	ip, #0
   109e0:	beq	10bf4 <abort@plt+0x2f4>
   109e4:	cmp	r5, #0
   109e8:	beq	10eec <abort@plt+0x5ec>
   109ec:	ldr	r1, [r4, #132]	; 0x84
   109f0:	mov	r6, #80	; 0x50
   109f4:	ldr	r3, [r4, #140]	; 0x8c
   109f8:	mov	r2, #0
   109fc:	str	r2, [sp, #48]	; 0x30
   10a00:	mul	r6, r6, r1
   10a04:	str	r2, [sp, #44]	; 0x2c
   10a08:	add	r3, r3, r6
   10a0c:	ldr	r2, [r3, #40]	; 0x28
   10a10:	ldr	sl, [r3, #12]
   10a14:	ldr	fp, [r3, #16]
   10a18:	ldr	r3, [r2, #28]
   10a1c:	str	sl, [sp, #52]	; 0x34
   10a20:	cmp	r3, #2
   10a24:	str	fp, [sp, #56]	; 0x38
   10a28:	bgt	10a38 <abort@plt+0x138>
   10a2c:	ldr	ip, [sp, #32]
   10a30:	cmp	ip, #3
   10a34:	beq	10e48 <abort@plt+0x548>
   10a38:	cmp	r5, #0
   10a3c:	beq	10abc <abort@plt+0x1bc>
   10a40:	add	r3, sp, #56	; 0x38
   10a44:	mov	r0, r5
   10a48:	str	r3, [sp]
   10a4c:	add	r1, sp, #44	; 0x2c
   10a50:	add	r2, sp, #48	; 0x30
   10a54:	add	r3, sp, #52	; 0x34
   10a58:	bl	1084c <XParseGeometry@plt>
   10a5c:	tst	r0, #16
   10a60:	beq	10a8c <abort@plt+0x18c>
   10a64:	ands	r3, r0, #4
   10a68:	ldrne	r3, [sp, #44]	; 0x2c
   10a6c:	ldrne	r2, [sp, #52]	; 0x34
   10a70:	ldreq	r2, [sp, #44]	; 0x2c
   10a74:	rsbne	sl, r2, sl
   10a78:	streq	r3, [sp, #44]	; 0x2c
   10a7c:	addne	r3, r3, sl
   10a80:	addeq	sl, sl, r2
   10a84:	strne	r3, [sp, #44]	; 0x2c
   10a88:	streq	sl, [sp, #52]	; 0x34
   10a8c:	tst	r0, #32
   10a90:	beq	10abc <abort@plt+0x1bc>
   10a94:	ands	r0, r0, #8
   10a98:	ldrne	r3, [sp, #48]	; 0x30
   10a9c:	ldrne	r2, [sp, #56]	; 0x38
   10aa0:	ldreq	r3, [sp, #48]	; 0x30
   10aa4:	rsbne	fp, r2, fp
   10aa8:	streq	r0, [sp, #48]	; 0x30
   10aac:	addne	r3, r3, fp
   10ab0:	addeq	fp, fp, r3
   10ab4:	strne	r3, [sp, #48]	; 0x30
   10ab8:	streq	fp, [sp, #56]	; 0x38
   10abc:	ldr	ip, [sp, #32]
   10ac0:	cmp	ip, #5
   10ac4:	ldrls	pc, [pc, ip, lsl #2]
   10ac8:	b	10f08 <abort@plt+0x608>
   10acc:	ldrdeq	r0, [r1], -ip
   10ad0:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10ad4:	andeq	r0, r1, r4, asr #27
   10ad8:	andeq	r0, r1, r0, ror sp
   10adc:	ldrdeq	r0, [r1], -ip
   10ae0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10ae4:	movw	r0, #5048	; 0x13b8
   10ae8:	mov	r1, r5
   10aec:	movt	r0, #1
   10af0:	bl	110ac <abort@plt+0x7ac>
   10af4:	cmp	r0, #0
   10af8:	beq	10b14 <abort@plt+0x214>
   10afc:	add	r4, r4, #1
   10b00:	cmp	fp, r4
   10b04:	addgt	ip, r6, sl
   10b08:	ldrgt	r5, [ip, #4]
   10b0c:	bgt	10964 <abort@plt+0x64>
   10b10:	bl	11050 <abort@plt+0x750>
   10b14:	movw	r0, #5060	; 0x13c4
   10b18:	mov	r1, r5
   10b1c:	movt	r0, #1
   10b20:	bl	110ac <abort@plt+0x7ac>
   10b24:	cmp	r0, #0
   10b28:	movne	ip, #1
   10b2c:	movne	r5, r9
   10b30:	strne	ip, [sp, #32]
   10b34:	bne	10964 <abort@plt+0x64>
   10b38:	movw	r0, #5068	; 0x13cc
   10b3c:	mov	r1, r5
   10b40:	movt	r0, #1
   10b44:	bl	110ac <abort@plt+0x7ac>
   10b48:	cmp	r0, #0
   10b4c:	bne	10b8c <abort@plt+0x28c>
   10b50:	movw	r0, #5076	; 0x13d4
   10b54:	mov	r1, r5
   10b58:	movt	r0, #1
   10b5c:	bl	110ac <abort@plt+0x7ac>
   10b60:	cmp	r0, #0
   10b64:	beq	10b9c <abort@plt+0x29c>
   10b68:	add	r4, r4, #1
   10b6c:	cmp	fp, r4
   10b70:	ble	10b10 <abort@plt+0x210>
   10b74:	add	ip, r6, sl
   10b78:	mov	r3, #3
   10b7c:	mov	r5, r9
   10b80:	str	r3, [sp, #32]
   10b84:	ldr	r8, [ip, #4]
   10b88:	b	10964 <abort@plt+0x64>
   10b8c:	mov	ip, #2
   10b90:	mov	r5, r9
   10b94:	str	ip, [sp, #32]
   10b98:	b	10964 <abort@plt+0x64>
   10b9c:	movw	r0, #5084	; 0x13dc
   10ba0:	mov	r1, r5
   10ba4:	movt	r0, #1
   10ba8:	bl	110ac <abort@plt+0x7ac>
   10bac:	cmp	r0, #0
   10bb0:	bne	10cc0 <abort@plt+0x3c0>
   10bb4:	mov	r1, r5
   10bb8:	movw	r0, #5092	; 0x13e4
   10bbc:	movt	r0, #1
   10bc0:	bl	110ac <abort@plt+0x7ac>
   10bc4:	cmp	r0, #0
   10bc8:	beq	10b10 <abort@plt+0x210>
   10bcc:	mov	ip, #5
   10bd0:	mov	r5, r9
   10bd4:	str	ip, [sp, #32]
   10bd8:	b	10964 <abort@plt+0x64>
   10bdc:	mov	r0, #0
   10be0:	bl	10870 <XOpenDisplay@plt>
   10be4:	subs	r4, r0, #0
   10be8:	beq	10e08 <abort@plt+0x508>
   10bec:	mov	r8, #0
   10bf0:	mov	r5, r8
   10bf4:	movw	r2, #5136	; 0x1410
   10bf8:	mov	r0, r4
   10bfc:	movt	r2, #1
   10c00:	ldr	r1, [r7]
   10c04:	bl	10828 <XGetDefault@plt>
   10c08:	movw	r6, #8304	; 0x2070
   10c0c:	movt	r6, #2
   10c10:	subs	r9, r0, #0
   10c14:	streq	r9, [sp, #32]
   10c18:	ldreq	sl, [pc, #756]	; 10f14 <abort@plt+0x614>
   10c1c:	beq	10c70 <abort@plt+0x370>
   10c20:	bl	108a0 <__strdup@plt>
   10c24:	subs	r8, r0, #0
   10c28:	movne	ip, #3
   10c2c:	strne	ip, [sp, #32]
   10c30:	bne	109e4 <abort@plt+0xe4>
   10c34:	movw	r1, #8296	; 0x2068
   10c38:	movt	r1, #2
   10c3c:	ldr	r3, [r6]
   10c40:	movw	r2, #5144	; 0x1418
   10c44:	ldr	r0, [r1]
   10c48:	movt	r2, #1
   10c4c:	mov	r1, #1
   10c50:	bl	108c4 <__fprintf_chk@plt>
   10c54:	mov	r0, #1
   10c58:	bl	10888 <exit@plt>
   10c5c:	ldr	r3, [fp, #4]
   10c60:	cmp	r3, #1
   10c64:	ldreq	ip, [sl, #-4]
   10c68:	streq	ip, [sp, #32]
   10c6c:	add	sl, sl, #8
   10c70:	ldr	r2, [sl, #-8]
   10c74:	cmp	r2, #0
   10c78:	beq	109e4 <abort@plt+0xe4>
   10c7c:	mov	r0, r4
   10c80:	ldr	r1, [r7]
   10c84:	bl	10828 <XGetDefault@plt>
   10c88:	subs	r6, r0, #0
   10c8c:	beq	10c6c <abort@plt+0x36c>
   10c90:	movw	r1, #5032	; 0x13a8
   10c94:	ldr	fp, [pc, #636]	; 10f18 <abort@plt+0x618>
   10c98:	movt	r1, #1
   10c9c:	b	10cac <abort@plt+0x3ac>
   10ca0:	ldr	r1, [fp, #8]!
   10ca4:	cmp	r1, #0
   10ca8:	beq	10c6c <abort@plt+0x36c>
   10cac:	mov	r0, r6
   10cb0:	bl	10858 <strcasecmp@plt>
   10cb4:	cmp	r0, #0
   10cb8:	bne	10ca0 <abort@plt+0x3a0>
   10cbc:	b	10c5c <abort@plt+0x35c>
   10cc0:	mov	ip, #4
   10cc4:	mov	r5, r9
   10cc8:	str	ip, [sp, #32]
   10ccc:	b	10964 <abort@plt+0x64>
   10cd0:	ldr	r3, [r4, #140]	; 0x8c
   10cd4:	mov	r8, #1
   10cd8:	str	r8, [sp, #104]	; 0x68
   10cdc:	ldr	ip, [r4, #132]	; 0x84
   10ce0:	mov	lr, #80	; 0x50
   10ce4:	ldr	r0, [sp, #52]	; 0x34
   10ce8:	add	r6, r3, r6
   10cec:	ldr	r1, [sp, #56]	; 0x38
   10cf0:	mov	r5, #0
   10cf4:	mla	r3, lr, ip, r3
   10cf8:	mov	r2, #1
   10cfc:	stm	sp, {r0, r1}
   10d00:	add	ip, sp, #72	; 0x48
   10d04:	str	r2, [sp, #152]	; 0x98
   10d08:	add	r1, sp, #104	; 0x68
   10d0c:	str	r5, [sp, #140]	; 0x8c
   10d10:	orr	r8, r8, #1600	; 0x640
   10d14:	str	r5, [sp, #8]
   10d18:	mov	r0, r4
   10d1c:	ldr	lr, [r6, #36]	; 0x24
   10d20:	str	r5, [sp, #128]	; 0x80
   10d24:	str	ip, [sp, #20]
   10d28:	str	lr, [sp, #12]
   10d2c:	str	r2, [sp, #16]
   10d30:	str	r8, [sp, #24]
   10d34:	ldr	r2, [sp, #44]	; 0x2c
   10d38:	str	r1, [sp, #28]
   10d3c:	ldr	r1, [r3, #8]
   10d40:	ldr	r3, [sp, #48]	; 0x30
   10d44:	str	r5, [sp, #76]	; 0x4c
   10d48:	bl	108b8 <XCreateWindow@plt>
   10d4c:	mov	r3, r0
   10d50:	mov	r0, r4
   10d54:	mov	r1, r3
   10d58:	str	r3, [r7, #4]
   10d5c:	bl	108d0 <XMapWindow@plt>
   10d60:	mov	r0, r4
   10d64:	bl	108e8 <XCloseDisplay@plt>
   10d68:	mov	r0, r5
   10d6c:	bl	10888 <exit@plt>
   10d70:	ldr	r1, [r4, #140]	; 0x8c
   10d74:	mov	r0, r4
   10d78:	mov	r2, r8
   10d7c:	add	r3, sp, #60	; 0x3c
   10d80:	add	r1, r1, r6
   10d84:	ldr	r5, [r1, #48]	; 0x30
   10d88:	mov	r1, r5
   10d8c:	bl	108dc <XParseColor@plt>
   10d90:	cmp	r0, #0
   10d94:	beq	10eb4 <abort@plt+0x5b4>
   10d98:	mov	r1, r5
   10d9c:	add	r2, sp, #60	; 0x3c
   10da0:	mov	r0, r4
   10da4:	bl	10840 <XAllocColor@plt>
   10da8:	cmp	r0, #0
   10dac:	beq	10eb4 <abort@plt+0x5b4>
   10db0:	ldr	r2, [sp, #60]	; 0x3c
   10db4:	mov	r8, #2
   10db8:	ldr	r3, [r4, #140]	; 0x8c
   10dbc:	str	r2, [sp, #108]	; 0x6c
   10dc0:	b	10cdc <abort@plt+0x3dc>
   10dc4:	ldr	r3, [r4, #140]	; 0x8c
   10dc8:	mov	r8, #2
   10dcc:	add	r2, r3, r6
   10dd0:	ldr	r2, [r2, #52]	; 0x34
   10dd4:	str	r2, [sp, #108]	; 0x6c
   10dd8:	b	10cdc <abort@plt+0x3dc>
   10ddc:	mov	r3, #0
   10de0:	mov	r8, #1
   10de4:	str	r3, [sp, #104]	; 0x68
   10de8:	ldr	r3, [r4, #140]	; 0x8c
   10dec:	b	10cdc <abort@plt+0x3dc>
   10df0:	ldr	r3, [r4, #140]	; 0x8c
   10df4:	mov	r8, #2
   10df8:	add	r2, r3, r6
   10dfc:	ldr	r2, [r2, #56]	; 0x38
   10e00:	str	r2, [sp, #108]	; 0x6c
   10e04:	b	10cdc <abort@plt+0x3dc>
   10e08:	str	r4, [sp, #36]	; 0x24
   10e0c:	movw	r2, #8296	; 0x2068
   10e10:	movt	r2, #2
   10e14:	ldr	r0, [sp, #36]	; 0x24
   10e18:	ldr	r4, [r2]
   10e1c:	ldr	r5, [r7]
   10e20:	bl	108ac <XDisplayName@plt>
   10e24:	movw	r2, #5100	; 0x13ec
   10e28:	mov	r1, #1
   10e2c:	movt	r2, #1
   10e30:	mov	r3, r5
   10e34:	str	r0, [sp]
   10e38:	mov	r0, r4
   10e3c:	bl	108c4 <__fprintf_chk@plt>
   10e40:	mov	r0, #1
   10e44:	bl	10888 <exit@plt>
   10e48:	movw	r1, #5200	; 0x1450
   10e4c:	mov	r0, r8
   10e50:	movt	r1, #1
   10e54:	bl	10834 <strcmp@plt>
   10e58:	cmp	r0, #0
   10e5c:	moveq	ip, #1
   10e60:	streq	ip, [sp, #32]
   10e64:	beq	10a38 <abort@plt+0x138>
   10e68:	movw	r1, #5208	; 0x1458
   10e6c:	mov	r0, r8
   10e70:	movt	r1, #1
   10e74:	bl	10834 <strcmp@plt>
   10e78:	cmp	r0, #0
   10e7c:	moveq	ip, #2
   10e80:	streq	ip, [sp, #32]
   10e84:	beq	10a38 <abort@plt+0x138>
   10e88:	movw	r3, #8296	; 0x2068
   10e8c:	movt	r3, #2
   10e90:	movw	r2, #5216	; 0x1460
   10e94:	mov	r1, #1
   10e98:	ldr	r0, [r3]
   10e9c:	movt	r2, #1
   10ea0:	ldr	r3, [r7]
   10ea4:	mov	ip, #4
   10ea8:	str	ip, [sp, #32]
   10eac:	bl	108c4 <__fprintf_chk@plt>
   10eb0:	b	10a38 <abort@plt+0x138>
   10eb4:	movw	r3, #8296	; 0x2068
   10eb8:	movt	r3, #2
   10ebc:	str	r8, [sp]
   10ec0:	movw	r2, #5264	; 0x1490
   10ec4:	ldr	r0, [r3]
   10ec8:	movt	r2, #1
   10ecc:	ldr	r3, [r7]
   10ed0:	mov	r1, #1
   10ed4:	bl	108c4 <__fprintf_chk@plt>
   10ed8:	mov	r8, #1
   10edc:	mov	r3, #0
   10ee0:	str	r3, [sp, #104]	; 0x68
   10ee4:	ldr	r3, [r4, #140]	; 0x8c
   10ee8:	b	10cdc <abort@plt+0x3dc>
   10eec:	movw	r2, #5188	; 0x1444
   10ef0:	mov	r0, r4
   10ef4:	movt	r2, #1
   10ef8:	ldr	r1, [r7]
   10efc:	bl	10828 <XGetDefault@plt>
   10f00:	mov	r5, r0
   10f04:	b	109ec <abort@plt+0xec>
   10f08:	ldr	r3, [r4, #140]	; 0x8c
   10f0c:	mov	r8, #0
   10f10:	b	10cdc <abort@plt+0x3dc>
   10f14:	muleq	r1, r0, r1
   10f18:			; <UNDEFINED> instruction: 0x000111b0
   10f1c:	mov	fp, #0
   10f20:	mov	lr, #0
   10f24:	pop	{r1}		; (ldr r1, [sp], #4)
   10f28:	mov	r2, sp
   10f2c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f30:	push	{r0}		; (str r0, [sp, #-4]!)
   10f34:	ldr	ip, [pc, #16]	; 10f4c <abort@plt+0x64c>
   10f38:	push	{ip}		; (str ip, [sp, #-4]!)
   10f3c:	ldr	r0, [pc, #12]	; 10f50 <abort@plt+0x650>
   10f40:	ldr	r3, [pc, #12]	; 10f54 <abort@plt+0x654>
   10f44:	bl	10864 <__libc_start_main@plt>
   10f48:	bl	10900 <abort@plt>
   10f4c:	andeq	r1, r1, r4, ror r1
   10f50:	andeq	r0, r1, ip, lsl #18
   10f54:	andeq	r1, r1, r0, lsl r1
   10f58:	ldr	r3, [pc, #20]	; 10f74 <abort@plt+0x674>
   10f5c:	ldr	r2, [pc, #20]	; 10f78 <abort@plt+0x678>
   10f60:	add	r3, pc, r3
   10f64:	ldr	r2, [r3, r2]
   10f68:	cmp	r2, #0
   10f6c:	bxeq	lr
   10f70:	b	1087c <__gmon_start__@plt>
   10f74:	muleq	r1, r8, r0
   10f78:	andeq	r0, r0, r8, asr r0
   10f7c:	push	{r3, lr}
   10f80:	movw	r0, #8288	; 0x2060
   10f84:	ldr	r3, [pc, #36]	; 10fb0 <abort@plt+0x6b0>
   10f88:	movt	r0, #2
   10f8c:	rsb	r3, r0, r3
   10f90:	cmp	r3, #6
   10f94:	popls	{r3, pc}
   10f98:	movw	r3, #0
   10f9c:	movt	r3, #0
   10fa0:	cmp	r3, #0
   10fa4:	popeq	{r3, pc}
   10fa8:	blx	r3
   10fac:	pop	{r3, pc}
   10fb0:	andeq	r2, r2, r3, rrx
   10fb4:	push	{r3, lr}
   10fb8:	movw	r0, #8288	; 0x2060
   10fbc:	movw	r3, #8288	; 0x2060
   10fc0:	movt	r0, #2
   10fc4:	movt	r3, #2
   10fc8:	rsb	r3, r0, r3
   10fcc:	asr	r3, r3, #2
   10fd0:	add	r3, r3, r3, lsr #31
   10fd4:	asrs	r1, r3, #1
   10fd8:	popeq	{r3, pc}
   10fdc:	movw	r2, #0
   10fe0:	movt	r2, #0
   10fe4:	cmp	r2, #0
   10fe8:	popeq	{r3, pc}
   10fec:	blx	r2
   10ff0:	pop	{r3, pc}
   10ff4:	push	{r4, lr}
   10ff8:	movw	r4, #8300	; 0x206c
   10ffc:	movt	r4, #2
   11000:	ldrb	r3, [r4]
   11004:	cmp	r3, #0
   11008:	popne	{r4, pc}
   1100c:	bl	10f7c <abort@plt+0x67c>
   11010:	mov	r3, #1
   11014:	strb	r3, [r4]
   11018:	pop	{r4, pc}
   1101c:	movw	r0, #7932	; 0x1efc
   11020:	movt	r0, #2
   11024:	push	{r3, lr}
   11028:	ldr	r3, [r0]
   1102c:	cmp	r3, #0
   11030:	beq	11048 <abort@plt+0x748>
   11034:	movw	r3, #0
   11038:	movt	r3, #0
   1103c:	cmp	r3, #0
   11040:	beq	11048 <abort@plt+0x748>
   11044:	blx	r3
   11048:	pop	{r3, lr}
   1104c:	b	10fb4 <abort@plt+0x6b4>
   11050:	push	{r4, r5, lr}
   11054:	movw	r5, #8296	; 0x2068
   11058:	sub	sp, sp, #12
   1105c:	movt	r5, #2
   11060:	movw	r4, #8304	; 0x2070
   11064:	movt	r4, #2
   11068:	movw	r1, #4648	; 0x1228
   1106c:	movw	r2, #4600	; 0x11f8
   11070:	movt	r1, #1
   11074:	ldr	r3, [r4]
   11078:	movt	r2, #1
   1107c:	str	r1, [sp]
   11080:	ldr	r0, [r5]
   11084:	mov	r1, #1
   11088:	bl	108c4 <__fprintf_chk@plt>
   1108c:	ldr	r0, [r5]
   11090:	ldr	r3, [r4]
   11094:	movw	r2, #5000	; 0x1388
   11098:	mov	r1, #1
   1109c:	movt	r2, #1
   110a0:	bl	108c4 <__fprintf_chk@plt>
   110a4:	mov	r0, #1
   110a8:	bl	10888 <exit@plt>
   110ac:	push	{r4, r5, r6, lr}
   110b0:	mov	r5, r0
   110b4:	mov	r4, r1
   110b8:	bl	10834 <strcmp@plt>
   110bc:	cmp	r0, #0
   110c0:	beq	11108 <abort@plt+0x808>
   110c4:	mov	r0, r5
   110c8:	bl	10894 <strlen@plt>
   110cc:	mov	r6, r0
   110d0:	mov	r0, r4
   110d4:	bl	10894 <strlen@plt>
   110d8:	cmp	r6, r0
   110dc:	cmphi	r0, #1
   110e0:	mov	r2, r0
   110e4:	bls	11100 <abort@plt+0x800>
   110e8:	mov	r0, r5
   110ec:	mov	r1, r4
   110f0:	bl	108f4 <strncmp@plt>
   110f4:	rsbs	r0, r0, #1
   110f8:	movcc	r0, #0
   110fc:	pop	{r4, r5, r6, pc}
   11100:	mov	r0, #0
   11104:	pop	{r4, r5, r6, pc}
   11108:	mov	r0, #1
   1110c:	pop	{r4, r5, r6, pc}
   11110:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11114:	mov	r7, r0
   11118:	ldr	r6, [pc, #76]	; 1116c <abort@plt+0x86c>
   1111c:	mov	r8, r1
   11120:	ldr	r5, [pc, #72]	; 11170 <abort@plt+0x870>
   11124:	mov	r9, r2
   11128:	add	r6, pc, r6
   1112c:	bl	10808 <_init@@Base>
   11130:	add	r5, pc, r5
   11134:	rsb	r6, r5, r6
   11138:	asrs	r6, r6, #2
   1113c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11140:	sub	r5, r5, #4
   11144:	mov	r4, #0
   11148:	add	r4, r4, #1
   1114c:	ldr	r3, [r5, #4]!
   11150:	mov	r0, r7
   11154:	mov	r1, r8
   11158:	mov	r2, r9
   1115c:	blx	r3
   11160:	cmp	r4, r6
   11164:	bne	11148 <abort@plt+0x848>
   11168:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1116c:	andeq	r0, r1, r8, asr #27
   11170:			; <UNDEFINED> instruction: 0x00010dbc
   11174:	bx	lr

Disassembly of section .fini:

00011178 <_fini@@Base>:
   11178:	push	{r3, lr}
   1117c:	pop	{r3, pc}
