
centos-preinstalled/gconf-merge-tree:     file format elf32-littlearm


Disassembly of section .init:

0000a988 <_init@@Base>:
    a988:	push	{r3, lr}
    a98c:	bl	b2e8 <_start@@Base+0x3c>
    a990:	pop	{r3, pc}

Disassembly of section .plt:

0000a994 <gconf_value_get_car@plt-0x14>:
    a994:	push	{lr}		; (str lr, [sp, #-4]!)
    a998:	ldr	lr, [pc, #4]	; a9a4 <_init@@Base+0x1c>
    a99c:	add	lr, pc, lr
    a9a0:	ldr	pc, [lr, #8]!
    a9a4:	andeq	r0, r1, ip, asr r6

0000a9a8 <gconf_value_get_car@plt>:
    a9a8:	add	ip, pc, #0, 12
    a9ac:	add	ip, ip, #16, 20	; 0x10000
    a9b0:	ldr	pc, [ip, #1628]!	; 0x65c

0000a9b4 <g_free@plt>:
    a9b4:	add	ip, pc, #0, 12
    a9b8:	add	ip, ip, #16, 20	; 0x10000
    a9bc:	ldr	pc, [ip, #1620]!	; 0x654

0000a9c0 <open@plt>:
    a9c0:	add	ip, pc, #0, 12
    a9c4:	add	ip, ip, #16, 20	; 0x10000
    a9c8:	ldr	pc, [ip, #1612]!	; 0x64c

0000a9cc <g_slist_remove@plt>:
    a9cc:	add	ip, pc, #0, 12
    a9d0:	add	ip, ip, #16, 20	; 0x10000
    a9d4:	ldr	pc, [ip, #1604]!	; 0x644

0000a9d8 <fileno@plt>:
    a9d8:	add	ip, pc, #0, 12
    a9dc:	add	ip, ip, #16, 20	; 0x10000
    a9e0:	ldr	pc, [ip, #1596]!	; 0x63c

0000a9e4 <mkdir@plt>:
    a9e4:	add	ip, pc, #0, 12
    a9e8:	add	ip, ip, #16, 20	; 0x10000
    a9ec:	ldr	pc, [ip, #1588]!	; 0x634

0000a9f0 <gconf_schema_set_locale@plt>:
    a9f0:	add	ip, pc, #0, 12
    a9f4:	add	ip, ip, #16, 20	; 0x10000
    a9f8:	ldr	pc, [ip, #1580]!	; 0x62c

0000a9fc <abort@plt>:
    a9fc:	add	ip, pc, #0, 12
    aa00:	add	ip, ip, #16, 20	; 0x10000
    aa04:	ldr	pc, [ip, #1572]!	; 0x624

0000aa08 <gconf_schema_set_default_value@plt>:
    aa08:	add	ip, pc, #0, 12
    aa0c:	add	ip, ip, #16, 20	; 0x10000
    aa10:	ldr	pc, [ip, #1564]!	; 0x61c

0000aa14 <g_unlink@plt>:
    aa14:	add	ip, pc, #0, 12
    aa18:	add	ip, ip, #16, 20	; 0x10000
    aa1c:	ldr	pc, [ip, #1556]!	; 0x614

0000aa20 <g_dir_close@plt>:
    aa20:	add	ip, pc, #0, 12
    aa24:	add	ip, ip, #16, 20	; 0x10000
    aa28:	ldr	pc, [ip, #1548]!	; 0x60c

0000aa2c <g_slist_free@plt>:
    aa2c:	add	ip, pc, #0, 12
    aa30:	add	ip, ip, #16, 20	; 0x10000
    aa34:	ldr	pc, [ip, #1540]!	; 0x604

0000aa38 <__xstat@plt>:
    aa38:	add	ip, pc, #0, 12
    aa3c:	add	ip, ip, #16, 20	; 0x10000
    aa40:	ldr	pc, [ip, #1532]!	; 0x5fc

0000aa44 <g_hash_table_destroy@plt>:
    aa44:	add	ip, pc, #0, 12
    aa48:	add	ip, ip, #16, 20	; 0x10000
    aa4c:	ldr	pc, [ip, #1524]!	; 0x5f4

0000aa50 <__libc_start_main@plt>:
    aa50:	add	ip, pc, #0, 12
    aa54:	add	ip, ip, #16, 20	; 0x10000
    aa58:	ldr	pc, [ip, #1516]!	; 0x5ec

0000aa5c <g_str_hash@plt>:
    aa5c:	add	ip, pc, #0, 12
    aa60:	add	ip, ip, #16, 20	; 0x10000
    aa64:	ldr	pc, [ip, #1508]!	; 0x5e4

0000aa68 <g_dir_read_name@plt>:
    aa68:	add	ip, pc, #0, 12
    aa6c:	add	ip, ip, #16, 20	; 0x10000
    aa70:	ldr	pc, [ip, #1500]!	; 0x5dc

0000aa74 <gconf_value_new@plt>:
    aa74:	add	ip, pc, #0, 12
    aa78:	add	ip, ip, #16, 20	; 0x10000
    aa7c:	ldr	pc, [ip, #1492]!	; 0x5d4

0000aa80 <gconf_schema_get_type@plt>:
    aa80:	add	ip, pc, #0, 12
    aa84:	add	ip, ip, #16, 20	; 0x10000
    aa88:	ldr	pc, [ip, #1484]!	; 0x5cc

0000aa8c <g_markup_parse_context_new@plt>:
    aa8c:	add	ip, pc, #0, 12
    aa90:	add	ip, ip, #16, 20	; 0x10000
    aa94:	ldr	pc, [ip, #1476]!	; 0x5c4

0000aa98 <__gmon_start__@plt>:
    aa98:	add	ip, pc, #0, 12
    aa9c:	add	ip, ip, #16, 20	; 0x10000
    aaa0:	ldr	pc, [ip, #1468]!	; 0x5bc

0000aaa4 <gconf_schema_get_cdr_type@plt>:
    aaa4:	add	ip, pc, #0, 12
    aaa8:	add	ip, ip, #16, 20	; 0x10000
    aaac:	ldr	pc, [ip, #1460]!	; 0x5b4

0000aab0 <g_slist_reverse@plt>:
    aab0:	add	ip, pc, #0, 12
    aab4:	add	ip, ip, #16, 20	; 0x10000
    aab8:	ldr	pc, [ip, #1452]!	; 0x5ac

0000aabc <g_hash_table_lookup_extended@plt>:
    aabc:	add	ip, pc, #0, 12
    aac0:	add	ip, ip, #16, 20	; 0x10000
    aac4:	ldr	pc, [ip, #1444]!	; 0x5a4

0000aac8 <gconf_schema_new@plt>:
    aac8:	add	ip, pc, #0, 12
    aacc:	add	ip, ip, #16, 20	; 0x10000
    aad0:	ldr	pc, [ip, #1436]!	; 0x59c

0000aad4 <gconf_schema_set_type@plt>:
    aad4:	add	ip, pc, #0, 12
    aad8:	add	ip, ip, #16, 20	; 0x10000
    aadc:	ldr	pc, [ip, #1428]!	; 0x594

0000aae0 <g_strdup@plt>:
    aae0:	add	ip, pc, #0, 12
    aae4:	add	ip, ip, #16, 20	; 0x10000
    aae8:	ldr	pc, [ip, #1420]!	; 0x58c

0000aaec <gconf_value_set_int@plt>:
    aaec:	add	ip, pc, #0, 12
    aaf0:	add	ip, ip, #16, 20	; 0x10000
    aaf4:	ldr	pc, [ip, #1412]!	; 0x584

0000aaf8 <rename@plt>:
    aaf8:	add	ip, pc, #0, 12
    aafc:	add	ip, ip, #16, 20	; 0x10000
    ab00:	ldr	pc, [ip, #1404]!	; 0x57c

0000ab04 <strncpy@plt>:
    ab04:	add	ip, pc, #0, 12
    ab08:	add	ip, ip, #16, 20	; 0x10000
    ab0c:	ldr	pc, [ip, #1396]!	; 0x574

0000ab10 <fclose@plt>:
    ab10:	add	ip, pc, #0, 12
    ab14:	add	ip, ip, #16, 20	; 0x10000
    ab18:	ldr	pc, [ip, #1388]!	; 0x56c

0000ab1c <g_markup_escape_text@plt>:
    ab1c:	add	ip, pc, #0, 12
    ab20:	add	ip, ip, #16, 20	; 0x10000
    ab24:	ldr	pc, [ip, #1380]!	; 0x564

0000ab28 <gconf_schema_set_car_type@plt>:
    ab28:	add	ip, pc, #0, 12
    ab2c:	add	ip, ip, #16, 20	; 0x10000
    ab30:	ldr	pc, [ip, #1372]!	; 0x55c

0000ab34 <__printf_chk@plt>:
    ab34:	add	ip, pc, #0, 12
    ab38:	add	ip, ip, #16, 20	; 0x10000
    ab3c:	ldr	pc, [ip, #1364]!	; 0x554

0000ab40 <gconf_schema_set_short_desc@plt>:
    ab40:	add	ip, pc, #0, 12
    ab44:	add	ip, ip, #16, 20	; 0x10000
    ab48:	ldr	pc, [ip, #1356]!	; 0x54c

0000ab4c <g_hash_table_insert@plt>:
    ab4c:	add	ip, pc, #0, 12
    ab50:	add	ip, ip, #16, 20	; 0x10000
    ab54:	ldr	pc, [ip, #1348]!	; 0x544

0000ab58 <g_strconcat@plt>:
    ab58:	add	ip, pc, #0, 12
    ab5c:	add	ip, ip, #16, 20	; 0x10000
    ab60:	ldr	pc, [ip, #1340]!	; 0x53c

0000ab64 <gconf_schema_set_gettext_domain@plt>:
    ab64:	add	ip, pc, #0, 12
    ab68:	add	ip, ip, #16, 20	; 0x10000
    ab6c:	ldr	pc, [ip, #1332]!	; 0x534

0000ab70 <g_hash_table_find@plt>:
    ab70:	add	ip, pc, #0, 12
    ab74:	add	ip, ip, #16, 20	; 0x10000
    ab78:	ldr	pc, [ip, #1324]!	; 0x52c

0000ab7c <fopen@plt>:
    ab7c:	add	ip, pc, #0, 12
    ab80:	add	ip, ip, #16, 20	; 0x10000
    ab84:	ldr	pc, [ip, #1316]!	; 0x524

0000ab88 <gconf_log@plt>:
    ab88:	add	ip, pc, #0, 12
    ab8c:	add	ip, ip, #16, 20	; 0x10000
    ab90:	ldr	pc, [ip, #1308]!	; 0x51c

0000ab94 <g_markup_parse_context_free@plt>:
    ab94:	add	ip, pc, #0, 12
    ab98:	add	ip, ip, #16, 20	; 0x10000
    ab9c:	ldr	pc, [ip, #1300]!	; 0x514

0000aba0 <gconf_value_type_from_string@plt>:
    aba0:	add	ip, pc, #0, 12
    aba4:	add	ip, ip, #16, 20	; 0x10000
    aba8:	ldr	pc, [ip, #1292]!	; 0x50c

0000abac <fsync@plt>:
    abac:	add	ip, pc, #0, 12
    abb0:	add	ip, ip, #16, 20	; 0x10000
    abb4:	ldr	pc, [ip, #1284]!	; 0x504

0000abb8 <g_markup_parse_context_end_parse@plt>:
    abb8:	add	ip, pc, #0, 12
    abbc:	add	ip, ip, #16, 20	; 0x10000
    abc0:	ldr	pc, [ip, #1276]!	; 0x4fc

0000abc4 <g_string_new@plt>:
    abc4:	add	ip, pc, #0, 12
    abc8:	add	ip, ip, #16, 20	; 0x10000
    abcc:	ldr	pc, [ip, #1268]!	; 0x4f4

0000abd0 <g_hash_table_remove@plt>:
    abd0:	add	ip, pc, #0, 12
    abd4:	add	ip, ip, #16, 20	; 0x10000
    abd8:	ldr	pc, [ip, #1260]!	; 0x4ec

0000abdc <gconf_value_set_cdr_nocopy@plt>:
    abdc:	add	ip, pc, #0, 12
    abe0:	add	ip, ip, #16, 20	; 0x10000
    abe4:	ldr	pc, [ip, #1252]!	; 0x4e4

0000abe8 <chmod@plt>:
    abe8:	add	ip, pc, #0, 12
    abec:	add	ip, ip, #16, 20	; 0x10000
    abf0:	ldr	pc, [ip, #1244]!	; 0x4dc

0000abf4 <gconf_value_copy@plt>:
    abf4:	add	ip, pc, #0, 12
    abf8:	add	ip, ip, #16, 20	; 0x10000
    abfc:	ldr	pc, [ip, #1236]!	; 0x4d4

0000ac00 <g_strndup@plt>:
    ac00:	add	ip, pc, #0, 12
    ac04:	add	ip, ip, #16, 20	; 0x10000
    ac08:	ldr	pc, [ip, #1228]!	; 0x4cc

0000ac0c <g_assertion_message_expr@plt>:
    ac0c:	add	ip, pc, #0, 12
    ac10:	add	ip, ip, #16, 20	; 0x10000
    ac14:	ldr	pc, [ip, #1220]!	; 0x4c4

0000ac18 <g_markup_parse_context_parse@plt>:
    ac18:	add	ip, pc, #0, 12
    ac1c:	add	ip, ip, #16, 20	; 0x10000
    ac20:	ldr	pc, [ip, #1212]!	; 0x4bc

0000ac24 <gconf_value_get_int@plt>:
    ac24:	add	ip, pc, #0, 12
    ac28:	add	ip, ip, #16, 20	; 0x10000
    ac2c:	ldr	pc, [ip, #1204]!	; 0x4b4

0000ac30 <g_slist_append@plt>:
    ac30:	add	ip, pc, #0, 12
    ac34:	add	ip, ip, #16, 20	; 0x10000
    ac38:	ldr	pc, [ip, #1196]!	; 0x4ac

0000ac3c <gconf_value_get_cdr@plt>:
    ac3c:	add	ip, pc, #0, 12
    ac40:	add	ip, ip, #16, 20	; 0x10000
    ac44:	ldr	pc, [ip, #1188]!	; 0x4a4

0000ac48 <g_strdup_printf@plt>:
    ac48:	add	ip, pc, #0, 12
    ac4c:	add	ip, ip, #16, 20	; 0x10000
    ac50:	ldr	pc, [ip, #1180]!	; 0x49c

0000ac54 <gconf_value_set_string@plt>:
    ac54:	add	ip, pc, #0, 12
    ac58:	add	ip, ip, #16, 20	; 0x10000
    ac5c:	ldr	pc, [ip, #1172]!	; 0x494

0000ac60 <g_string_free@plt>:
    ac60:	add	ip, pc, #0, 12
    ac64:	add	ip, ip, #16, 20	; 0x10000
    ac68:	ldr	pc, [ip, #1164]!	; 0x48c

0000ac6c <gconf_double_to_string@plt>:
    ac6c:	add	ip, pc, #0, 12
    ac70:	add	ip, ip, #16, 20	; 0x10000
    ac74:	ldr	pc, [ip, #1156]!	; 0x484

0000ac78 <gconf_value_free@plt>:
    ac78:	add	ip, pc, #0, 12
    ac7c:	add	ip, ip, #16, 20	; 0x10000
    ac80:	ldr	pc, [ip, #1148]!	; 0x47c

0000ac84 <g_hash_table_size@plt>:
    ac84:	add	ip, pc, #0, 12
    ac88:	add	ip, ip, #16, 20	; 0x10000
    ac8c:	ldr	pc, [ip, #1140]!	; 0x474

0000ac90 <_gconf_init_i18n@plt>:
    ac90:	add	ip, pc, #0, 12
    ac94:	add	ip, ip, #16, 20	; 0x10000
    ac98:	ldr	pc, [ip, #1132]!	; 0x46c

0000ac9c <g_hash_table_new@plt>:
    ac9c:	add	ip, pc, #0, 12
    aca0:	add	ip, ip, #16, 20	; 0x10000
    aca4:	ldr	pc, [ip, #1124]!	; 0x464

0000aca8 <fflush@plt>:
    aca8:	add	ip, pc, #0, 12
    acac:	add	ip, ip, #16, 20	; 0x10000
    acb0:	ldr	pc, [ip, #1116]!	; 0x45c

0000acb4 <gconf_value_set_float@plt>:
    acb4:	add	ip, pc, #0, 12
    acb8:	add	ip, ip, #16, 20	; 0x10000
    acbc:	ldr	pc, [ip, #1108]!	; 0x454

0000acc0 <g_hash_table_new_full@plt>:
    acc0:	add	ip, pc, #0, 12
    acc4:	add	ip, ip, #16, 20	; 0x10000
    acc8:	ldr	pc, [ip, #1100]!	; 0x44c

0000accc <gconf_schema_get_gettext_domain@plt>:
    accc:	add	ip, pc, #0, 12
    acd0:	add	ip, ip, #16, 20	; 0x10000
    acd4:	ldr	pc, [ip, #1092]!	; 0x444

0000acd8 <g_hash_table_foreach@plt>:
    acd8:	add	ip, pc, #0, 12
    acdc:	add	ip, ip, #16, 20	; 0x10000
    ace0:	ldr	pc, [ip, #1084]!	; 0x43c

0000ace4 <strlen@plt>:
    ace4:	add	ip, pc, #0, 12
    ace8:	add	ip, ip, #16, 20	; 0x10000
    acec:	ldr	pc, [ip, #1076]!	; 0x434

0000acf0 <g_slist_prepend@plt>:
    acf0:	add	ip, pc, #0, 12
    acf4:	add	ip, ip, #16, 20	; 0x10000
    acf8:	ldr	pc, [ip, #1068]!	; 0x42c

0000acfc <g_error_new_literal@plt>:
    acfc:	add	ip, pc, #0, 12
    ad00:	add	ip, ip, #16, 20	; 0x10000
    ad04:	ldr	pc, [ip, #1060]!	; 0x424

0000ad08 <g_propagate_error@plt>:
    ad08:	add	ip, pc, #0, 12
    ad0c:	add	ip, ip, #16, 20	; 0x10000
    ad10:	ldr	pc, [ip, #1052]!	; 0x41c

0000ad14 <gconf_value_type_to_string@plt>:
    ad14:	add	ip, pc, #0, 12
    ad18:	add	ip, ip, #16, 20	; 0x10000
    ad1c:	ldr	pc, [ip, #1044]!	; 0x414

0000ad20 <gconf_schema_get_locale@plt>:
    ad20:	add	ip, pc, #0, 12
    ad24:	add	ip, ip, #16, 20	; 0x10000
    ad28:	ldr	pc, [ip, #1036]!	; 0x40c

0000ad2c <g_strdup_vprintf@plt>:
    ad2c:	add	ip, pc, #0, 12
    ad30:	add	ip, ip, #16, 20	; 0x10000
    ad34:	ldr	pc, [ip, #1028]!	; 0x404

0000ad38 <memcpy@plt>:
    ad38:	add	ip, pc, #0, 12
    ad3c:	add	ip, ip, #16, 20	; 0x10000
    ad40:	ldr	pc, [ip, #1020]!	; 0x3fc

0000ad44 <setlocale@plt>:
    ad44:	add	ip, pc, #0, 12
    ad48:	add	ip, ip, #16, 20	; 0x10000
    ad4c:	ldr	pc, [ip, #1012]!	; 0x3f4

0000ad50 <gconf_schema_get_owner@plt>:
    ad50:	add	ip, pc, #0, 12
    ad54:	add	ip, ip, #16, 20	; 0x10000
    ad58:	ldr	pc, [ip, #1004]!	; 0x3ec

0000ad5c <gconf_value_get_schema@plt>:
    ad5c:	add	ip, pc, #0, 12
    ad60:	add	ip, ip, #16, 20	; 0x10000
    ad64:	ldr	pc, [ip, #996]!	; 0x3e4

0000ad68 <gconf_schema_get_long_desc@plt>:
    ad68:	add	ip, pc, #0, 12
    ad6c:	add	ip, ip, #16, 20	; 0x10000
    ad70:	ldr	pc, [ip, #988]!	; 0x3dc

0000ad74 <feof@plt>:
    ad74:	add	ip, pc, #0, 12
    ad78:	add	ip, ip, #16, 20	; 0x10000
    ad7c:	ldr	pc, [ip, #980]!	; 0x3d4

0000ad80 <g_return_if_fail_warning@plt>:
    ad80:	add	ip, pc, #0, 12
    ad84:	add	ip, ip, #16, 20	; 0x10000
    ad88:	ldr	pc, [ip, #972]!	; 0x3cc

0000ad8c <gconf_schema_get_short_desc@plt>:
    ad8c:	add	ip, pc, #0, 12
    ad90:	add	ip, ip, #16, 20	; 0x10000
    ad94:	ldr	pc, [ip, #964]!	; 0x3c4

0000ad98 <gconf_value_set_list_type@plt>:
    ad98:	add	ip, pc, #0, 12
    ad9c:	add	ip, ip, #16, 20	; 0x10000
    ada0:	ldr	pc, [ip, #956]!	; 0x3bc

0000ada4 <strtol@plt>:
    ada4:	add	ip, pc, #0, 12
    ada8:	add	ip, ip, #16, 20	; 0x10000
    adac:	ldr	pc, [ip, #948]!	; 0x3b4

0000adb0 <g_set_error@plt>:
    adb0:	add	ip, pc, #0, 12
    adb4:	add	ip, ip, #16, 20	; 0x10000
    adb8:	ldr	pc, [ip, #940]!	; 0x3ac

0000adbc <gconf_value_set_bool@plt>:
    adbc:	add	ip, pc, #0, 12
    adc0:	add	ip, ip, #16, 20	; 0x10000
    adc4:	ldr	pc, [ip, #932]!	; 0x3a4

0000adc8 <g_rmdir@plt>:
    adc8:	add	ip, pc, #0, 12
    adcc:	add	ip, ip, #16, 20	; 0x10000
    add0:	ldr	pc, [ip, #924]!	; 0x39c

0000add4 <gconf_value_set_car_nocopy@plt>:
    add4:	add	ip, pc, #0, 12
    add8:	add	ip, ip, #16, 20	; 0x10000
    addc:	ldr	pc, [ip, #916]!	; 0x394

0000ade0 <fdopen@plt>:
    ade0:	add	ip, pc, #0, 12
    ade4:	add	ip, ip, #16, 20	; 0x10000
    ade8:	ldr	pc, [ip, #908]!	; 0x38c

0000adec <close@plt>:
    adec:	add	ip, pc, #0, 12
    adf0:	add	ip, ip, #16, 20	; 0x10000
    adf4:	ldr	pc, [ip, #900]!	; 0x384

0000adf8 <g_slist_foreach@plt>:
    adf8:	add	ip, pc, #0, 12
    adfc:	add	ip, ip, #16, 20	; 0x10000
    ae00:	ldr	pc, [ip, #892]!	; 0x37c

0000ae04 <gconf_value_get_float@plt>:
    ae04:	add	ip, pc, #0, 12
    ae08:	add	ip, ip, #16, 20	; 0x10000
    ae0c:	ldr	pc, [ip, #884]!	; 0x374

0000ae10 <gconf_schema_set_long_desc@plt>:
    ae10:	add	ip, pc, #0, 12
    ae14:	add	ip, ip, #16, 20	; 0x10000
    ae18:	ldr	pc, [ip, #876]!	; 0x36c

0000ae1c <time@plt>:
    ae1c:	add	ip, pc, #0, 12
    ae20:	add	ip, ip, #16, 20	; 0x10000
    ae24:	ldr	pc, [ip, #868]!	; 0x364

0000ae28 <gconf_string_to_double@plt>:
    ae28:	add	ip, pc, #0, 12
    ae2c:	add	ip, ip, #16, 20	; 0x10000
    ae30:	ldr	pc, [ip, #860]!	; 0x35c

0000ae34 <g_hash_table_replace@plt>:
    ae34:	add	ip, pc, #0, 12
    ae38:	add	ip, ip, #16, 20	; 0x10000
    ae3c:	ldr	pc, [ip, #852]!	; 0x354

0000ae40 <gconf_value_get_list_type@plt>:
    ae40:	add	ip, pc, #0, 12
    ae44:	add	ip, ip, #16, 20	; 0x10000
    ae48:	ldr	pc, [ip, #844]!	; 0x34c

0000ae4c <g_slist_length@plt>:
    ae4c:	add	ip, pc, #0, 12
    ae50:	add	ip, ip, #16, 20	; 0x10000
    ae54:	ldr	pc, [ip, #836]!	; 0x344

0000ae58 <__stack_chk_fail@plt>:
    ae58:	add	ip, pc, #0, 12
    ae5c:	add	ip, ip, #16, 20	; 0x10000
    ae60:	ldr	pc, [ip, #828]!	; 0x33c

0000ae64 <gconf_schema_set_cdr_type@plt>:
    ae64:	add	ip, pc, #0, 12
    ae68:	add	ip, ip, #16, 20	; 0x10000
    ae6c:	ldr	pc, [ip, #820]!	; 0x334

0000ae70 <__fprintf_chk@plt>:
    ae70:	add	ip, pc, #0, 12
    ae74:	add	ip, ip, #16, 20	; 0x10000
    ae78:	ldr	pc, [ip, #812]!	; 0x32c

0000ae7c <g_strsplit@plt>:
    ae7c:	add	ip, pc, #0, 12
    ae80:	add	ip, ip, #16, 20	; 0x10000
    ae84:	ldr	pc, [ip, #804]!	; 0x324

0000ae88 <g_hash_table_lookup@plt>:
    ae88:	add	ip, pc, #0, 12
    ae8c:	add	ip, ip, #16, 20	; 0x10000
    ae90:	ldr	pc, [ip, #796]!	; 0x31c

0000ae94 <gconf_value_get_string@plt>:
    ae94:	add	ip, pc, #0, 12
    ae98:	add	ip, ip, #16, 20	; 0x10000
    ae9c:	ldr	pc, [ip, #788]!	; 0x314

0000aea0 <gconf_error_quark@plt>:
    aea0:	add	ip, pc, #0, 12
    aea4:	add	ip, ip, #16, 20	; 0x10000
    aea8:	ldr	pc, [ip, #780]!	; 0x30c

0000aeac <g_malloc0@plt>:
    aeac:	add	ip, pc, #0, 12
    aeb0:	add	ip, ip, #16, 20	; 0x10000
    aeb4:	ldr	pc, [ip, #772]!	; 0x304

0000aeb8 <g_string_insert_c@plt>:
    aeb8:	add	ip, pc, #0, 12
    aebc:	add	ip, ip, #16, 20	; 0x10000
    aec0:	ldr	pc, [ip, #764]!	; 0x2fc

0000aec4 <gconf_value_get_list@plt>:
    aec4:	add	ip, pc, #0, 12
    aec8:	add	ip, ip, #16, 20	; 0x10000
    aecc:	ldr	pc, [ip, #756]!	; 0x2f4

0000aed0 <g_markup_parse_context_get_position@plt>:
    aed0:	add	ip, pc, #0, 12
    aed4:	add	ip, ip, #16, 20	; 0x10000
    aed8:	ldr	pc, [ip, #748]!	; 0x2ec

0000aedc <gconf_schema_set_list_type@plt>:
    aedc:	add	ip, pc, #0, 12
    aee0:	add	ip, ip, #16, 20	; 0x10000
    aee4:	ldr	pc, [ip, #740]!	; 0x2e4

0000aee8 <gconf_schema_get_list_type@plt>:
    aee8:	add	ip, pc, #0, 12
    aeec:	add	ip, ip, #16, 20	; 0x10000
    aef0:	ldr	pc, [ip, #732]!	; 0x2dc

0000aef4 <textdomain@plt>:
    aef4:	add	ip, pc, #0, 12
    aef8:	add	ip, ip, #16, 20	; 0x10000
    aefc:	ldr	pc, [ip, #724]!	; 0x2d4

0000af00 <g_strerror@plt>:
    af00:	add	ip, pc, #0, 12
    af04:	add	ip, ip, #16, 20	; 0x10000
    af08:	ldr	pc, [ip, #716]!	; 0x2cc

0000af0c <gconf_value_set_string_nocopy@plt>:
    af0c:	add	ip, pc, #0, 12
    af10:	add	ip, ip, #16, 20	; 0x10000
    af14:	ldr	pc, [ip, #708]!	; 0x2c4

0000af18 <gconf_value_get_bool@plt>:
    af18:	add	ip, pc, #0, 12
    af1c:	add	ip, ip, #16, 20	; 0x10000
    af20:	ldr	pc, [ip, #700]!	; 0x2bc

0000af24 <gconf_value_set_schema_nocopy@plt>:
    af24:	add	ip, pc, #0, 12
    af28:	add	ip, ip, #16, 20	; 0x10000
    af2c:	ldr	pc, [ip, #692]!	; 0x2b4

0000af30 <gconf_string_to_gulong@plt>:
    af30:	add	ip, pc, #0, 12
    af34:	add	ip, ip, #16, 20	; 0x10000
    af38:	ldr	pc, [ip, #684]!	; 0x2ac

0000af3c <g_error_free@plt>:
    af3c:	add	ip, pc, #0, 12
    af40:	add	ip, ip, #16, 20	; 0x10000
    af44:	ldr	pc, [ip, #676]!	; 0x2a4

0000af48 <gconf_value_set_list_nocopy@plt>:
    af48:	add	ip, pc, #0, 12
    af4c:	add	ip, ip, #16, 20	; 0x10000
    af50:	ldr	pc, [ip, #668]!	; 0x29c

0000af54 <gconf_value_steal_list@plt>:
    af54:	add	ip, pc, #0, 12
    af58:	add	ip, ip, #16, 20	; 0x10000
    af5c:	ldr	pc, [ip, #660]!	; 0x294

0000af60 <g_strfreev@plt>:
    af60:	add	ip, pc, #0, 12
    af64:	add	ip, ip, #16, 20	; 0x10000
    af68:	ldr	pc, [ip, #652]!	; 0x28c

0000af6c <gconf_schema_get_car_type@plt>:
    af6c:	add	ip, pc, #0, 12
    af70:	add	ip, ip, #16, 20	; 0x10000
    af74:	ldr	pc, [ip, #644]!	; 0x284

0000af78 <g_intern_string@plt>:
    af78:	add	ip, pc, #0, 12
    af7c:	add	ip, ip, #16, 20	; 0x10000
    af80:	ldr	pc, [ip, #636]!	; 0x27c

0000af84 <fread@plt>:
    af84:	add	ip, pc, #0, 12
    af88:	add	ip, ip, #16, 20	; 0x10000
    af8c:	ldr	pc, [ip, #628]!	; 0x274

0000af90 <strncmp@plt>:
    af90:	add	ip, pc, #0, 12
    af94:	add	ip, ip, #16, 20	; 0x10000
    af98:	ldr	pc, [ip, #620]!	; 0x26c

0000af9c <ferror@plt>:
    af9c:	add	ip, pc, #0, 12
    afa0:	add	ip, ip, #16, 20	; 0x10000
    afa4:	ldr	pc, [ip, #612]!	; 0x264

0000afa8 <__strcpy_chk@plt>:
    afa8:	add	ip, pc, #0, 12
    afac:	add	ip, ip, #16, 20	; 0x10000
    afb0:	ldr	pc, [ip, #604]!	; 0x25c

0000afb4 <chown@plt>:
    afb4:	add	ip, pc, #0, 12
    afb8:	add	ip, ip, #16, 20	; 0x10000
    afbc:	ldr	pc, [ip, #596]!	; 0x254

0000afc0 <g_dgettext@plt>:
    afc0:	add	ip, pc, #0, 12
    afc4:	add	ip, ip, #16, 20	; 0x10000
    afc8:	ldr	pc, [ip, #588]!	; 0x24c

0000afcc <g_string_append@plt>:
    afcc:	add	ip, pc, #0, 12
    afd0:	add	ip, ip, #16, 20	; 0x10000
    afd4:	ldr	pc, [ip, #580]!	; 0x244

0000afd8 <g_string_append_printf@plt>:
    afd8:	add	ip, pc, #0, 12
    afdc:	add	ip, ip, #16, 20	; 0x10000
    afe0:	ldr	pc, [ip, #572]!	; 0x23c

0000afe4 <strcmp@plt>:
    afe4:	add	ip, pc, #0, 12
    afe8:	add	ip, ip, #16, 20	; 0x10000
    afec:	ldr	pc, [ip, #564]!	; 0x234

0000aff0 <g_str_equal@plt>:
    aff0:	add	ip, pc, #0, 12
    aff4:	add	ip, ip, #16, 20	; 0x10000
    aff8:	ldr	pc, [ip, #556]!	; 0x22c

0000affc <g_dir_open@plt>:
    affc:	add	ip, pc, #0, 12
    b000:	add	ip, ip, #16, 20	; 0x10000
    b004:	ldr	pc, [ip, #548]!	; 0x224

0000b008 <gconf_schema_set_owner@plt>:
    b008:	add	ip, pc, #0, 12
    b00c:	add	ip, ip, #16, 20	; 0x10000
    b010:	ldr	pc, [ip, #540]!	; 0x21c

0000b014 <g_file_test@plt>:
    b014:	add	ip, pc, #0, 12
    b018:	add	ip, ip, #16, 20	; 0x10000
    b01c:	ldr	pc, [ip, #532]!	; 0x214

0000b020 <__errno_location@plt>:
    b020:	add	ip, pc, #0, 12
    b024:	add	ip, ip, #16, 20	; 0x10000
    b028:	ldr	pc, [ip, #524]!	; 0x20c

0000b02c <gconf_schema_get_default_value@plt>:
    b02c:	add	ip, pc, #0, 12
    b030:	add	ip, ip, #16, 20	; 0x10000
    b034:	ldr	pc, [ip, #516]!	; 0x204

0000b038 <fputs@plt>:
    b038:	add	ip, pc, #0, 12
    b03c:	add	ip, ip, #16, 20	; 0x10000
    b040:	ldr	pc, [ip, #508]!	; 0x1fc

Disassembly of section .text:

0000b048 <main@@Base-0x40>:
    b048:	push	{r4, lr}
    b04c:	mov	r4, r0
    b050:	ldr	r0, [r0]
    b054:	bl	acf0 <g_slist_prepend@plt>
    b058:	str	r0, [r4]
    b05c:	pop	{r4, pc}
    b060:	push	{r3, lr}
    b064:	movw	r0, #4852	; 0x12f4
    b068:	movw	r1, #4064	; 0xfe0
    b06c:	movt	r0, #1
    b070:	movt	r1, #1
    b074:	movw	r2, #4868	; 0x1304
    b078:	movt	r2, #1
    b07c:	bl	ad80 <g_return_if_fail_warning@plt>
    b080:	mov	r0, #0
    b084:	pop	{r3, pc}

0000b088 <main@@Base>:
    b088:	push	{r4, r5, r6, r7, r8, lr}
    b08c:	movw	r4, #45672	; 0xb268
    b090:	movt	r4, #1
    b094:	sub	sp, sp, #112	; 0x70
    b098:	mov	r6, r0
    b09c:	mov	r5, r1
    b0a0:	ldr	r3, [r4]
    b0a4:	movw	r1, #5268	; 0x1494
    b0a8:	mov	r0, #6
    b0ac:	movt	r1, #1
    b0b0:	str	r3, [sp, #108]	; 0x6c
    b0b4:	bl	ad44 <setlocale@plt>
    b0b8:	bl	ac90 <_gconf_init_i18n@plt>
    b0bc:	movw	r0, #5492	; 0x1574
    b0c0:	movt	r0, #1
    b0c4:	bl	aef4 <textdomain@plt>
    b0c8:	cmp	r6, #2
    b0cc:	bne	b20c <main@@Base+0x184>
    b0d0:	ldr	r6, [r5, #4]
    b0d4:	movw	r1, #8216	; 0x2018
    b0d8:	movt	r1, #1
    b0dc:	mov	r0, r6
    b0e0:	bl	afe4 <strcmp@plt>
    b0e4:	subs	r7, r0, #0
    b0e8:	beq	b1cc <main@@Base+0x144>
    b0ec:	mov	r0, #3
    b0f0:	mov	r1, r6
    b0f4:	add	r2, sp, #16
    b0f8:	bl	aa38 <__xstat@plt>
    b0fc:	subs	r7, r0, #0
    b100:	bne	b248 <main@@Base+0x1c0>
    b104:	ldr	r0, [sp, #32]
    b108:	bl	10f5c <_gconf_mode_t_to_mode@@Base>
    b10c:	mov	r3, #1
    b110:	bic	r8, r0, #73	; 0x49
    b114:	mov	r1, r0
    b118:	mov	r0, r6
    b11c:	mov	r2, r8
    b120:	bl	ff74 <markup_tree_get@@Base>
    b124:	mov	r5, r0
    b128:	ldr	r0, [r0, #12]
    b12c:	bl	e218 <_start@@Base+0x2f6c>
    b130:	add	r3, sp, #112	; 0x70
    b134:	mov	r2, r8
    b138:	ldr	r0, [r5, #12]
    b13c:	str	r7, [r3, #-100]!	; 0xffffff9c
    b140:	mov	r1, #1
    b144:	bl	e978 <_start@@Base+0x36cc>
    b148:	ldr	r3, [sp, #12]
    b14c:	cmp	r3, #0
    b150:	beq	b284 <main@@Base+0x1fc>
    b154:	mov	r1, #1
    b158:	mov	r3, r7
    b15c:	mov	r2, r1
    b160:	ldr	r0, [r5, #12]
    b164:	bl	d668 <_start@@Base+0x23bc>
    b168:	movw	r2, #45680	; 0xb270
    b16c:	movt	r2, #1
    b170:	movw	r1, #8432	; 0x20f0
    b174:	movt	r1, #1
    b178:	ldr	r8, [r2]
    b17c:	mov	r6, r0
    b180:	movw	r0, #5492	; 0x1574
    b184:	movt	r0, #1
    b188:	bl	afc0 <g_dgettext@plt>
    b18c:	ldr	ip, [sp, #12]
    b190:	mov	r3, r6
    b194:	mov	r1, #1
    b198:	ldr	ip, [ip, #8]
    b19c:	str	ip, [sp]
    b1a0:	mov	r2, r0
    b1a4:	mov	r0, r8
    b1a8:	bl	ae70 <__fprintf_chk@plt>
    b1ac:	ldr	r0, [sp, #12]
    b1b0:	bl	af3c <g_error_free@plt>
    b1b4:	mov	r0, r6
    b1b8:	bl	a9b4 <g_free@plt>
    b1bc:	mov	r0, r5
    b1c0:	bl	10068 <markup_tree_unref@@Base>
    b1c4:	eor	r0, r7, #1
    b1c8:	b	b1f4 <main@@Base+0x16c>
    b1cc:	movw	r0, #5492	; 0x1574
    b1d0:	movw	r1, #8224	; 0x2020
    b1d4:	movt	r0, #1
    b1d8:	movt	r1, #1
    b1dc:	bl	afc0 <g_dgettext@plt>
    b1e0:	ldr	r2, [r5]
    b1e4:	mov	r1, r0
    b1e8:	mov	r0, #1
    b1ec:	bl	ab34 <__printf_chk@plt>
    b1f0:	mov	r0, r7
    b1f4:	ldr	r2, [sp, #108]	; 0x6c
    b1f8:	ldr	r3, [r4]
    b1fc:	cmp	r2, r3
    b200:	bne	b2a8 <main@@Base+0x220>
    b204:	add	sp, sp, #112	; 0x70
    b208:	pop	{r4, r5, r6, r7, r8, pc}
    b20c:	movw	r3, #45680	; 0xb270
    b210:	movt	r3, #1
    b214:	movw	r0, #5492	; 0x1574
    b218:	movw	r1, #8196	; 0x2004
    b21c:	movt	r0, #1
    b220:	movt	r1, #1
    b224:	ldr	r6, [r3]
    b228:	bl	afc0 <g_dgettext@plt>
    b22c:	ldr	r3, [r5]
    b230:	mov	r1, #1
    b234:	mov	r2, r0
    b238:	mov	r0, r6
    b23c:	bl	ae70 <__fprintf_chk@plt>
    b240:	mov	r0, #1
    b244:	b	b1f4 <main@@Base+0x16c>
    b248:	movw	r3, #45680	; 0xb270
    b24c:	movt	r3, #1
    b250:	movw	r0, #5492	; 0x1574
    b254:	movw	r1, #8404	; 0x20d4
    b258:	movt	r0, #1
    b25c:	movt	r1, #1
    b260:	ldr	r5, [r3]
    b264:	bl	afc0 <g_dgettext@plt>
    b268:	mov	r3, r6
    b26c:	mov	r1, #1
    b270:	mov	r7, #0
    b274:	mov	r2, r0
    b278:	mov	r0, r5
    b27c:	bl	ae70 <__fprintf_chk@plt>
    b280:	b	b1c4 <main@@Base+0x13c>
    b284:	ldr	r2, [r5, #12]
    b288:	mov	r0, r5
    b28c:	mov	r7, #1
    b290:	ldrb	r1, [r2, #28]
    b294:	bfi	r1, r3, #1, #1
    b298:	bfi	r1, r3, #3, #1
    b29c:	strb	r1, [r2, #28]
    b2a0:	bl	10068 <markup_tree_unref@@Base>
    b2a4:	b	b1c4 <main@@Base+0x13c>
    b2a8:	bl	ae58 <__stack_chk_fail@plt>

0000b2ac <_start@@Base>:
    b2ac:	mov	fp, #0
    b2b0:	mov	lr, #0
    b2b4:	pop	{r1}		; (ldr r1, [sp], #4)
    b2b8:	mov	r2, sp
    b2bc:	push	{r2}		; (str r2, [sp, #-4]!)
    b2c0:	push	{r0}		; (str r0, [sp, #-4]!)
    b2c4:	ldr	ip, [pc, #16]	; b2dc <_start@@Base+0x30>
    b2c8:	push	{ip}		; (str ip, [sp, #-4]!)
    b2cc:	ldr	r0, [pc, #12]	; b2e0 <_start@@Base+0x34>
    b2d0:	ldr	r3, [pc, #12]	; b2e4 <_start@@Base+0x38>
    b2d4:	bl	aa50 <__libc_start_main@plt>
    b2d8:	bl	a9fc <abort@plt>
    b2dc:	andeq	r0, r1, ip, asr #31
    b2e0:	andeq	fp, r0, r8, lsl #1
    b2e4:	andeq	r0, r1, r8, ror #30
    b2e8:	ldr	r3, [pc, #20]	; b304 <_start@@Base+0x58>
    b2ec:	ldr	r2, [pc, #20]	; b308 <_start@@Base+0x5c>
    b2f0:	add	r3, pc, r3
    b2f4:	ldr	r2, [r3, r2]
    b2f8:	cmp	r2, #0
    b2fc:	bxeq	lr
    b300:	b	aa98 <__gmon_start__@plt>
    b304:	andeq	pc, r0, r8, lsl #26
    b308:	andeq	r0, r0, r0, asr #4
    b30c:	push	{r3, lr}
    b310:	movw	r0, #45668	; 0xb264
    b314:	ldr	r3, [pc, #36]	; b340 <_start@@Base+0x94>
    b318:	movt	r0, #1
    b31c:	rsb	r3, r0, r3
    b320:	cmp	r3, #6
    b324:	popls	{r3, pc}
    b328:	movw	r3, #0
    b32c:	movt	r3, #0
    b330:	cmp	r3, #0
    b334:	popeq	{r3, pc}
    b338:	blx	r3
    b33c:	pop	{r3, pc}
    b340:	andeq	fp, r1, r7, ror #4
    b344:	push	{r3, lr}
    b348:	movw	r0, #45668	; 0xb264
    b34c:	movw	r3, #45668	; 0xb264
    b350:	movt	r0, #1
    b354:	movt	r3, #1
    b358:	rsb	r3, r0, r3
    b35c:	asr	r3, r3, #2
    b360:	add	r3, r3, r3, lsr #31
    b364:	asrs	r1, r3, #1
    b368:	popeq	{r3, pc}
    b36c:	movw	r2, #0
    b370:	movt	r2, #0
    b374:	cmp	r2, #0
    b378:	popeq	{r3, pc}
    b37c:	blx	r2
    b380:	pop	{r3, pc}
    b384:	push	{r4, lr}
    b388:	movw	r4, #45684	; 0xb274
    b38c:	movt	r4, #1
    b390:	ldrb	r3, [r4]
    b394:	cmp	r3, #0
    b398:	popne	{r4, pc}
    b39c:	bl	b30c <_start@@Base+0x60>
    b3a0:	mov	r3, #1
    b3a4:	strb	r3, [r4]
    b3a8:	pop	{r4, pc}
    b3ac:	movw	r0, #44780	; 0xaeec
    b3b0:	movt	r0, #1
    b3b4:	push	{r3, lr}
    b3b8:	ldr	r3, [r0]
    b3bc:	cmp	r3, #0
    b3c0:	beq	b3d8 <_start@@Base+0x12c>
    b3c4:	movw	r3, #0
    b3c8:	movt	r3, #0
    b3cc:	cmp	r3, #0
    b3d0:	beq	b3d8 <_start@@Base+0x12c>
    b3d4:	blx	r3
    b3d8:	pop	{r3, lr}
    b3dc:	b	b344 <_start@@Base+0x98>
    b3e0:	cmp	r1, #0
    b3e4:	moveq	r0, #1
    b3e8:	streq	r0, [r2]
    b3ec:	movne	r0, #0
    b3f0:	bx	lr
    b3f4:	push	{r4, r5, r6, lr}
    b3f8:	mov	r5, r0
    b3fc:	mov	r0, #32
    b400:	mov	r6, r1
    b404:	bl	aeac <g_malloc0@plt>
    b408:	mov	r4, r0
    b40c:	mov	r0, r6
    b410:	bl	aae0 <g_strdup@plt>
    b414:	mov	r1, r4
    b418:	str	r5, [r4]
    b41c:	str	r0, [r4, #4]
    b420:	ldr	r0, [r5, #16]
    b424:	bl	acf0 <g_slist_prepend@plt>
    b428:	str	r0, [r5, #16]
    b42c:	mov	r0, r4
    b430:	pop	{r4, r5, r6, pc}
    b434:	ldr	r3, [r0, #8]
    b438:	push	{r4, lr}
    b43c:	cmp	r3, r0
    b440:	mov	r4, r0
    b444:	popeq	{r4, pc}
    b448:	str	r0, [r4, #8]
    b44c:	mov	r3, #0
    b450:	movw	r0, #43612	; 0xaa5c
    b454:	movw	r1, #45040	; 0xaff0
    b458:	movt	r0, #0
    b45c:	movt	r1, #0
    b460:	movw	r2, #43444	; 0xa9b4
    b464:	movt	r2, #0
    b468:	bl	acc0 <g_hash_table_new_full@plt>
    b46c:	ldrb	r3, [r4, #28]
    b470:	orr	r3, r3, #128	; 0x80
    b474:	strb	r3, [r4, #28]
    b478:	str	r0, [r4, #24]
    b47c:	pop	{r4, pc}
    b480:	push	{r3, r4, r5, r6, r7, lr}
    b484:	mov	r6, r0
    b488:	mov	r0, #32
    b48c:	mov	r5, r1
    b490:	mov	r7, r2
    b494:	bl	aeac <g_malloc0@plt>
    b498:	mov	r4, r0
    b49c:	mov	r0, r7
    b4a0:	bl	aae0 <g_strdup@plt>
    b4a4:	cmp	r5, #0
    b4a8:	str	r6, [r4]
    b4ac:	str	r5, [r4, #4]
    b4b0:	str	r0, [r4, #12]
    b4b4:	beq	b4d8 <_start@@Base+0x22c>
    b4b8:	ldr	r3, [r5, #8]
    b4bc:	mov	r1, r4
    b4c0:	ldr	r0, [r5, #20]
    b4c4:	str	r3, [r4, #8]
    b4c8:	bl	acf0 <g_slist_prepend@plt>
    b4cc:	str	r0, [r5, #20]
    b4d0:	mov	r0, r4
    b4d4:	pop	{r3, r4, r5, r6, r7, pc}
    b4d8:	mov	r0, r4
    b4dc:	bl	b434 <_start@@Base+0x188>
    b4e0:	mov	r0, r4
    b4e4:	pop	{r3, r4, r5, r6, r7, pc}
    b4e8:	push	{r4, lr}
    b4ec:	mov	r4, r0
    b4f0:	ldr	r0, [r0]
    b4f4:	bl	a9b4 <g_free@plt>
    b4f8:	ldr	r0, [r4, #4]
    b4fc:	bl	a9b4 <g_free@plt>
    b500:	ldr	r0, [r4, #8]
    b504:	bl	a9b4 <g_free@plt>
    b508:	ldr	r0, [r4, #12]
    b50c:	cmp	r0, #0
    b510:	beq	b518 <_start@@Base+0x26c>
    b514:	bl	ac78 <gconf_value_free@plt>
    b518:	mov	r0, r4
    b51c:	pop	{r4, lr}
    b520:	b	a9b4 <g_free@plt>
    b524:	push	{r4, lr}
    b528:	mov	r4, r0
    b52c:	ldr	r0, [r0, #4]
    b530:	bl	a9b4 <g_free@plt>
    b534:	ldr	r0, [r4, #8]
    b538:	cmp	r0, #0
    b53c:	beq	b544 <_start@@Base+0x298>
    b540:	bl	ac78 <gconf_value_free@plt>
    b544:	ldr	r0, [r4, #16]
    b548:	bl	a9b4 <g_free@plt>
    b54c:	ldr	r0, [r4, #20]
    b550:	bl	a9b4 <g_free@plt>
    b554:	ldr	r0, [r4, #12]
    b558:	mov	r2, #0
    b55c:	movw	r1, #46312	; 0xb4e8
    b560:	movt	r1, #0
    b564:	bl	adf8 <g_slist_foreach@plt>
    b568:	ldr	r0, [r4, #12]
    b56c:	bl	aa2c <g_slist_free@plt>
    b570:	mov	r0, r4
    b574:	pop	{r4, lr}
    b578:	b	a9b4 <g_free@plt>
    b57c:	push	{r3, r4, r5, lr}
    b580:	mov	r5, r0
    b584:	ldr	r0, [r0, #24]
    b588:	cmp	r0, #0
    b58c:	beq	b59c <_start@@Base+0x2f0>
    b590:	bl	aa44 <g_hash_table_destroy@plt>
    b594:	mov	r3, #0
    b598:	str	r3, [r5, #24]
    b59c:	ldr	r4, [r5, #16]
    b5a0:	cmp	r4, #0
    b5a4:	beq	b600 <_start@@Base+0x354>
    b5a8:	ldr	r0, [r4]
    b5ac:	bl	b524 <_start@@Base+0x278>
    b5b0:	ldr	r4, [r4, #4]
    b5b4:	cmp	r4, #0
    b5b8:	bne	b5a8 <_start@@Base+0x2fc>
    b5bc:	ldr	r0, [r5, #16]
    b5c0:	bl	aa2c <g_slist_free@plt>
    b5c4:	ldr	r4, [r5, #20]
    b5c8:	cmp	r4, #0
    b5cc:	beq	b608 <_start@@Base+0x35c>
    b5d0:	ldr	r0, [r4]
    b5d4:	bl	b57c <_start@@Base+0x2d0>
    b5d8:	ldr	r4, [r4, #4]
    b5dc:	cmp	r4, #0
    b5e0:	bne	b5d0 <_start@@Base+0x324>
    b5e4:	ldr	r0, [r5, #20]
    b5e8:	bl	aa2c <g_slist_free@plt>
    b5ec:	ldr	r0, [r5, #12]
    b5f0:	bl	a9b4 <g_free@plt>
    b5f4:	mov	r0, r5
    b5f8:	pop	{r3, r4, r5, lr}
    b5fc:	b	a9b4 <g_free@plt>
    b600:	mov	r0, r4
    b604:	b	b5c0 <_start@@Base+0x314>
    b608:	mov	r0, r4
    b60c:	b	b5e8 <_start@@Base+0x33c>
    b610:	push	{lr}		; (str lr, [sp, #-4]!)
    b614:	sub	sp, sp, #12
    b618:	ldrb	r3, [r0, #28]
    b61c:	orr	r3, r3, #2
    b620:	strb	r3, [r0, #28]
    b624:	tst	r3, #32
    b628:	beq	b660 <_start@@Base+0x3b4>
    b62c:	ldr	r0, [r0, #4]
    b630:	cmp	r0, #0
    b634:	bne	b618 <_start@@Base+0x36c>
    b638:	movw	r3, #4908	; 0x132c
    b63c:	movw	r0, #4852	; 0x12f4
    b640:	movt	r3, #1
    b644:	movw	r1, #4892	; 0x131c
    b648:	str	r3, [sp]
    b64c:	movt	r0, #1
    b650:	movw	r2, #869	; 0x365
    b654:	movt	r1, #1
    b658:	ldr	r3, [pc, #8]	; b668 <_start@@Base+0x3bc>
    b65c:	bl	ac0c <g_assertion_message_expr@plt>
    b660:	add	sp, sp, #12
    b664:	pop	{pc}		; (ldr pc, [sp], #4)
    b668:	andeq	r0, r1, ip, ror #31
    b66c:	cmp	r2, #0
    b670:	push	{r4, r5, r6, r7, r8, lr}
    b674:	mov	r5, r0
    b678:	beq	b6a8 <_start@@Base+0x3fc>
    b67c:	ldr	r4, [r1]
    b680:	cmp	r4, #0
    b684:	beq	b6a8 <_start@@Base+0x3fc>
    b688:	ldr	r1, [r4]
    b68c:	mov	r2, #1
    b690:	add	r0, r1, #16
    b694:	add	r1, r1, #20
    b698:	bl	b66c <_start@@Base+0x3c0>
    b69c:	ldr	r4, [r4, #4]
    b6a0:	cmp	r4, #0
    b6a4:	bne	b688 <_start@@Base+0x3dc>
    b6a8:	ldr	r8, [r5]
    b6ac:	cmp	r8, #0
    b6b0:	popeq	{r4, r5, r6, r7, r8, pc}
    b6b4:	ldr	r6, [r8]
    b6b8:	ldr	r4, [r6, #12]
    b6bc:	cmp	r4, #0
    b6c0:	beq	b770 <_start@@Base+0x4c4>
    b6c4:	mov	r7, #0
    b6c8:	b	b6e0 <_start@@Base+0x434>
    b6cc:	mov	r0, r5
    b6d0:	bl	b4e8 <_start@@Base+0x23c>
    b6d4:	ldr	r4, [r4, #4]
    b6d8:	cmp	r4, #0
    b6dc:	beq	b74c <_start@@Base+0x4a0>
    b6e0:	ldr	r0, [r6, #8]
    b6e4:	ldr	r5, [r4]
    b6e8:	cmp	r0, #0
    b6ec:	beq	b730 <_start@@Base+0x484>
    b6f0:	ldr	r2, [r0]
    b6f4:	cmp	r2, #5
    b6f8:	bne	b6cc <_start@@Base+0x420>
    b6fc:	ldr	r2, [r5, #12]
    b700:	cmp	r2, #0
    b704:	beq	b730 <_start@@Base+0x484>
    b708:	bl	ad5c <gconf_value_get_schema@plt>
    b70c:	cmp	r0, #0
    b710:	beq	b730 <_start@@Base+0x484>
    b714:	ldr	r0, [r6, #8]
    b718:	bl	ad5c <gconf_value_get_schema@plt>
    b71c:	bl	aa80 <gconf_schema_get_type@plt>
    b720:	ldr	r3, [r5, #12]
    b724:	ldr	r3, [r3]
    b728:	cmp	r0, r3
    b72c:	bne	b6cc <_start@@Base+0x420>
    b730:	mov	r0, r7
    b734:	mov	r1, r5
    b738:	bl	acf0 <g_slist_prepend@plt>
    b73c:	ldr	r4, [r4, #4]
    b740:	cmp	r4, #0
    b744:	mov	r7, r0
    b748:	bne	b6e0 <_start@@Base+0x434>
    b74c:	ldr	r0, [r6, #12]
    b750:	bl	aa2c <g_slist_free@plt>
    b754:	mov	r0, r7
    b758:	bl	aab0 <g_slist_reverse@plt>
    b75c:	str	r0, [r6, #12]
    b760:	ldr	r8, [r8, #4]
    b764:	cmp	r8, #0
    b768:	bne	b6b4 <_start@@Base+0x408>
    b76c:	pop	{r4, r5, r6, r7, r8, pc}
    b770:	mov	r0, r4
    b774:	mov	r7, r4
    b778:	b	b750 <_start@@Base+0x4a4>
    b77c:	push	{r3, r4, r5, r6, r7, lr}
    b780:	mov	r6, r0
    b784:	ldr	r4, [r0]
    b788:	cmp	r4, #0
    b78c:	beq	b80c <_start@@Base+0x560>
    b790:	mov	r7, #0
    b794:	mov	r5, r7
    b798:	b	b7b0 <_start@@Base+0x504>
    b79c:	bl	acf0 <g_slist_prepend@plt>
    b7a0:	mov	r5, r0
    b7a4:	ldr	r4, [r4, #4]
    b7a8:	cmp	r4, #0
    b7ac:	beq	b7f0 <_start@@Base+0x544>
    b7b0:	ldr	r3, [r4]
    b7b4:	mov	r0, r5
    b7b8:	ldr	r2, [r3, #8]
    b7bc:	mov	r1, r3
    b7c0:	cmp	r2, #0
    b7c4:	bne	b79c <_start@@Base+0x4f0>
    b7c8:	ldr	r2, [r3, #12]
    b7cc:	cmp	r2, #0
    b7d0:	bne	b79c <_start@@Base+0x4f0>
    b7d4:	ldr	r2, [r3, #16]
    b7d8:	cmp	r2, #0
    b7dc:	bne	b79c <_start@@Base+0x4f0>
    b7e0:	mov	r0, r3
    b7e4:	mov	r7, #1
    b7e8:	bl	b524 <_start@@Base+0x278>
    b7ec:	b	b7a4 <_start@@Base+0x4f8>
    b7f0:	ldr	r0, [r6]
    b7f4:	bl	aa2c <g_slist_free@plt>
    b7f8:	mov	r0, r5
    b7fc:	bl	aab0 <g_slist_reverse@plt>
    b800:	str	r0, [r6]
    b804:	mov	r0, r7
    b808:	pop	{r3, r4, r5, r6, r7, pc}
    b80c:	mov	r0, r4
    b810:	mov	r7, r4
    b814:	mov	r5, r4
    b818:	b	b7f4 <_start@@Base+0x548>
    b81c:	push	{r4, r5, r6, lr}
    b820:	mov	r6, r0
    b824:	ldr	r4, [r0, #20]
    b828:	cmp	r4, #0
    b82c:	beq	b868 <_start@@Base+0x5bc>
    b830:	mov	r5, #0
    b834:	ldr	r0, [r4]
    b838:	bl	b81c <_start@@Base+0x570>
    b83c:	ldr	r4, [r4, #4]
    b840:	cmp	r0, #0
    b844:	movne	r5, #1
    b848:	cmp	r4, #0
    b84c:	bne	b834 <_start@@Base+0x588>
    b850:	add	r0, r6, #16
    b854:	bl	b77c <_start@@Base+0x4d0>
    b858:	cmp	r0, #0
    b85c:	moveq	r0, r5
    b860:	movne	r0, #1
    b864:	pop	{r4, r5, r6, pc}
    b868:	mov	r5, r4
    b86c:	b	b850 <_start@@Base+0x5a4>
    b870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b874:	sub	sp, sp, #20
    b878:	mov	r5, r0
    b87c:	ldr	r0, [r0]
    b880:	mov	r4, r2
    b884:	mov	r9, r1
    b888:	mov	r6, r3
    b88c:	ldr	r7, [sp, #56]	; 0x38
    b890:	bl	ad14 <gconf_value_type_to_string@plt>
    b894:	movw	r2, #4936	; 0x1348
    b898:	mov	r1, #1
    b89c:	movt	r2, #1
    b8a0:	mov	r3, r0
    b8a4:	mov	r0, r4
    b8a8:	bl	ae70 <__fprintf_chk@plt>
    b8ac:	cmp	r0, #0
    b8b0:	blt	b99c <_start@@Base+0x6f0>
    b8b4:	ldr	r2, [r5]
    b8b8:	sub	r3, r2, #2
    b8bc:	cmp	r3, #4
    b8c0:	ldrls	pc, [pc, r3, lsl #2]
    b8c4:	b	bea4 <_start@@Base+0xbf8>
    b8c8:	andeq	fp, r0, r0, asr #20
    b8cc:	andeq	fp, r0, r4, lsl #20
    b8d0:	andeq	fp, r0, ip, ror #20
    b8d4:	ldrdeq	fp, [r0], -ip
    b8d8:	andeq	fp, r0, r8, lsr #19
    b8dc:	mov	r0, r5
    b8e0:	bl	ad5c <gconf_value_get_schema@plt>
    b8e4:	mov	r8, r0
    b8e8:	bl	aa80 <gconf_schema_get_type@plt>
    b8ec:	mov	sl, r0
    b8f0:	bl	ad14 <gconf_value_type_to_string@plt>
    b8f4:	movw	r2, #4960	; 0x1360
    b8f8:	mov	r1, #1
    b8fc:	movt	r2, #1
    b900:	mov	r3, r0
    b904:	mov	r0, r4
    b908:	bl	ae70 <__fprintf_chk@plt>
    b90c:	cmp	r0, #0
    b910:	blt	b99c <_start@@Base+0x6f0>
    b914:	mov	r0, r8
    b918:	bl	ad50 <gconf_schema_get_owner@plt>
    b91c:	cmp	r0, #0
    b920:	beq	b958 <_start@@Base+0x6ac>
    b924:	mvn	r1, #0
    b928:	bl	ab1c <g_markup_escape_text@plt>
    b92c:	movw	r2, #4972	; 0x136c
    b930:	mov	r1, #1
    b934:	movt	r2, #1
    b938:	mov	fp, r0
    b93c:	mov	r0, r4
    b940:	mov	r3, fp
    b944:	bl	ae70 <__fprintf_chk@plt>
    b948:	cmp	r0, #0
    b94c:	mov	r0, fp
    b950:	blt	b998 <_start@@Base+0x6ec>
    b954:	bl	a9b4 <g_free@plt>
    b958:	mov	r0, r8
    b95c:	bl	accc <gconf_schema_get_gettext_domain@plt>
    b960:	cmp	r0, #0
    b964:	beq	bdb8 <_start@@Base+0xb0c>
    b968:	mvn	r1, #0
    b96c:	bl	ab1c <g_markup_escape_text@plt>
    b970:	movw	r2, #4984	; 0x1378
    b974:	mov	r1, #1
    b978:	movt	r2, #1
    b97c:	mov	fp, r0
    b980:	mov	r0, r4
    b984:	mov	r3, fp
    b988:	bl	ae70 <__fprintf_chk@plt>
    b98c:	cmp	r0, #0
    b990:	mov	r0, fp
    b994:	bge	bdb4 <_start@@Base+0xb08>
    b998:	bl	a9b4 <g_free@plt>
    b99c:	mov	r0, #0
    b9a0:	add	sp, sp, #20
    b9a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b9a8:	mov	r0, r5
    b9ac:	bl	ae40 <gconf_value_get_list_type@plt>
    b9b0:	bl	ad14 <gconf_value_type_to_string@plt>
    b9b4:	movw	r2, #4948	; 0x1354
    b9b8:	mov	r1, #1
    b9bc:	movt	r2, #1
    b9c0:	mov	r3, r0
    b9c4:	mov	r0, r4
    b9c8:	bl	ae70 <__fprintf_chk@plt>
    b9cc:	cmp	r0, #0
    b9d0:	blt	b99c <_start@@Base+0x6f0>
    b9d4:	ldr	r3, [r5]
    b9d8:	cmp	r3, #7
    b9dc:	ldrls	pc, [pc, r3, lsl #2]
    b9e0:	b	be6c <_start@@Base+0xbc0>
    b9e4:	muleq	r0, r4, sp
    b9e8:	strdeq	fp, [r0], -ip
    b9ec:	muleq	r0, r4, sp
    b9f0:	muleq	r0, r4, sp
    b9f4:	muleq	r0, r4, sp
    b9f8:	andeq	fp, r0, ip, ror ip
    b9fc:	andeq	fp, r0, r0, asr #23
    ba00:	andeq	fp, r0, ip, lsr #21
    ba04:	mov	r0, r5
    ba08:	bl	ae04 <gconf_value_get_float@plt>
    ba0c:	bl	ac6c <gconf_double_to_string@plt>
    ba10:	movw	r2, #5068	; 0x13cc
    ba14:	mov	r1, #1
    ba18:	movt	r2, #1
    ba1c:	mov	r8, r0
    ba20:	mov	r0, r4
    ba24:	mov	r3, r8
    ba28:	bl	ae70 <__fprintf_chk@plt>
    ba2c:	cmp	r0, #0
    ba30:	mov	r0, r8
    ba34:	blt	b998 <_start@@Base+0x6ec>
    ba38:	bl	a9b4 <g_free@plt>
    ba3c:	b	b9d4 <_start@@Base+0x728>
    ba40:	mov	r0, r5
    ba44:	bl	ac24 <gconf_value_get_int@plt>
    ba48:	movw	r2, #5056	; 0x13c0
    ba4c:	mov	r1, #1
    ba50:	movt	r2, #1
    ba54:	mov	r3, r0
    ba58:	mov	r0, r4
    ba5c:	bl	ae70 <__fprintf_chk@plt>
    ba60:	cmp	r0, #0
    ba64:	bge	b9d4 <_start@@Base+0x728>
    ba68:	b	b99c <_start@@Base+0x6f0>
    ba6c:	mov	r0, r5
    ba70:	bl	af18 <gconf_value_get_bool@plt>
    ba74:	movw	ip, #4928	; 0x1340
    ba78:	movt	ip, #1
    ba7c:	movw	r3, #4920	; 0x1338
    ba80:	movw	r2, #5068	; 0x13cc
    ba84:	movt	r3, #1
    ba88:	mov	r1, #1
    ba8c:	movt	r2, #1
    ba90:	cmp	r0, #0
    ba94:	mov	r0, r4
    ba98:	moveq	r3, ip
    ba9c:	bl	ae70 <__fprintf_chk@plt>
    baa0:	cmp	r0, #0
    baa4:	bge	b9d4 <_start@@Base+0x728>
    baa8:	b	b99c <_start@@Base+0x6f0>
    baac:	movw	r0, #5456	; 0x1550
    bab0:	mov	r1, r4
    bab4:	movt	r0, #1
    bab8:	bl	b038 <fputs@plt>
    babc:	cmp	r0, #0
    bac0:	blt	b99c <_start@@Base+0x6f0>
    bac4:	mov	r0, r5
    bac8:	add	r7, r6, #1
    bacc:	bl	a9a8 <gconf_value_get_car@plt>
    bad0:	subs	r8, r0, #0
    bad4:	beq	be60 <_start@@Base+0xbb4>
    bad8:	cmp	r7, #32
    badc:	ldr	r2, [pc, #968]	; beac <_start@@Base+0xc00>
    bae0:	rsbne	r0, r7, #32
    bae4:	mov	r1, r4
    bae8:	moveq	r0, #0
    baec:	add	r0, r2, r0
    baf0:	str	r2, [sp, #12]
    baf4:	bl	b038 <fputs@plt>
    baf8:	cmp	r0, #0
    bafc:	blt	b99c <_start@@Base+0x6f0>
    bb00:	movw	r0, #5124	; 0x1404
    bb04:	mov	r1, r4
    bb08:	movt	r0, #1
    bb0c:	bl	b038 <fputs@plt>
    bb10:	cmp	r0, #0
    bb14:	blt	b99c <_start@@Base+0x6f0>
    bb18:	mov	r3, #0
    bb1c:	mov	r0, r8
    bb20:	str	r3, [sp]
    bb24:	movw	r1, #5132	; 0x140c
    bb28:	str	r3, [sp, #4]
    bb2c:	movt	r1, #1
    bb30:	mov	r2, r4
    bb34:	mov	r3, r7
    bb38:	bl	b870 <_start@@Base+0x5c4>
    bb3c:	cmp	r0, #0
    bb40:	beq	b99c <_start@@Base+0x6f0>
    bb44:	mov	r0, r5
    bb48:	bl	ac3c <gconf_value_get_cdr@plt>
    bb4c:	subs	r5, r0, #0
    bb50:	beq	bd58 <_start@@Base+0xaac>
    bb54:	cmp	r7, #32
    bb58:	ldr	r3, [sp, #12]
    bb5c:	rsbne	r0, r7, #32
    bb60:	mov	r1, r4
    bb64:	moveq	r0, #0
    bb68:	add	r0, r3, r0
    bb6c:	bl	b038 <fputs@plt>
    bb70:	cmp	r0, #0
    bb74:	blt	b99c <_start@@Base+0x6f0>
    bb78:	movw	r0, #5136	; 0x1410
    bb7c:	mov	r1, r4
    bb80:	movt	r0, #1
    bb84:	bl	b038 <fputs@plt>
    bb88:	cmp	r0, #0
    bb8c:	blt	b99c <_start@@Base+0x6f0>
    bb90:	mov	r2, #0
    bb94:	mov	r0, r5
    bb98:	str	r2, [sp]
    bb9c:	mov	r3, r7
    bba0:	str	r2, [sp, #4]
    bba4:	movw	r1, #5144	; 0x1418
    bba8:	mov	r2, r4
    bbac:	movt	r1, #1
    bbb0:	bl	b870 <_start@@Base+0x5c4>
    bbb4:	cmp	r0, #0
    bbb8:	bne	bd58 <_start@@Base+0xaac>
    bbbc:	b	b99c <_start@@Base+0x6f0>
    bbc0:	movw	r0, #5456	; 0x1550
    bbc4:	mov	r1, r4
    bbc8:	movt	r0, #1
    bbcc:	bl	b038 <fputs@plt>
    bbd0:	cmp	r0, #0
    bbd4:	blt	b99c <_start@@Base+0x6f0>
    bbd8:	mov	r0, r5
    bbdc:	add	sl, r6, #1
    bbe0:	bl	aec4 <gconf_value_get_list@plt>
    bbe4:	subs	r5, r0, #0
    bbe8:	ldreq	r2, [pc, #700]	; beac <_start@@Base+0xc00>
    bbec:	streq	r2, [sp, #12]
    bbf0:	beq	bd58 <_start@@Base+0xaac>
    bbf4:	ldr	r3, [pc, #688]	; beac <_start@@Base+0xc00>
    bbf8:	cmp	sl, #32
    bbfc:	rsb	fp, sl, #32
    bc00:	mov	r7, #0
    bc04:	moveq	fp, #0
    bc08:	add	fp, r3, fp
    bc0c:	str	r3, [sp, #12]
    bc10:	b	bc54 <_start@@Base+0x9a8>
    bc14:	bl	b038 <fputs@plt>
    bc18:	movw	r1, #5120	; 0x1400
    bc1c:	mov	r2, r4
    bc20:	movt	r1, #1
    bc24:	mov	r3, sl
    bc28:	cmp	r0, #0
    bc2c:	mov	r0, r8
    bc30:	blt	b99c <_start@@Base+0x6f0>
    bc34:	str	r7, [sp]
    bc38:	str	r7, [sp, #4]
    bc3c:	bl	b870 <_start@@Base+0x5c4>
    bc40:	cmp	r0, #0
    bc44:	beq	b99c <_start@@Base+0x6f0>
    bc48:	ldr	r5, [r5, #4]
    bc4c:	cmp	r5, #0
    bc50:	beq	bd58 <_start@@Base+0xaac>
    bc54:	mov	r1, r4
    bc58:	mov	r0, fp
    bc5c:	ldr	r8, [r5]
    bc60:	bl	b038 <fputs@plt>
    bc64:	mov	r1, r4
    bc68:	cmp	r0, #0
    bc6c:	movw	r0, #5116	; 0x13fc
    bc70:	movt	r0, #1
    bc74:	bge	bc14 <_start@@Base+0x968>
    bc78:	b	b99c <_start@@Base+0x6f0>
    bc7c:	movw	r0, #5456	; 0x1550
    bc80:	mov	r1, r4
    bc84:	movt	r0, #1
    bc88:	bl	b038 <fputs@plt>
    bc8c:	cmp	r0, #0
    bc90:	blt	b99c <_start@@Base+0x6f0>
    bc94:	cmp	r7, #0
    bc98:	add	r5, r6, #1
    bc9c:	bne	bcb0 <_start@@Base+0xa04>
    bca0:	b	be6c <_start@@Base+0xbc0>
    bca4:	ldr	r7, [r7, #4]
    bca8:	cmp	r7, #0
    bcac:	beq	be1c <_start@@Base+0xb70>
    bcb0:	ldr	r2, [sp, #60]	; 0x3c
    bcb4:	mov	r3, #1
    bcb8:	ldr	r0, [r7]
    bcbc:	cmp	r2, #0
    bcc0:	beq	bcdc <_start@@Base+0xa30>
    bcc4:	ldr	r2, [r0]
    bcc8:	ldrb	r3, [r2]
    bccc:	subs	r3, r3, #67	; 0x43
    bcd0:	ldrbeq	r3, [r2, #1]
    bcd4:	rsbs	r3, r3, #1
    bcd8:	movcc	r3, #0
    bcdc:	str	r3, [sp]
    bce0:	mov	r1, r4
    bce4:	mov	r3, #0
    bce8:	mov	r2, r5
    bcec:	bl	beb0 <_start@@Base+0xc04>
    bcf0:	cmp	r0, #0
    bcf4:	bne	bca4 <_start@@Base+0x9f8>
    bcf8:	b	b99c <_start@@Base+0x6f0>
    bcfc:	mov	r0, r5
    bd00:	bl	ae94 <gconf_value_get_string@plt>
    bd04:	mvn	r1, #0
    bd08:	bl	ab1c <g_markup_escape_text@plt>
    bd0c:	ldr	r2, [pc, #408]	; beac <_start@@Base+0xc00>
    bd10:	add	r3, r6, #1
    bd14:	cmp	r3, #32
    bd18:	str	r2, [sp, #12]
    bd1c:	rsbne	r3, r3, #32
    bd20:	ldr	r1, [sp, #12]
    bd24:	moveq	r3, #0
    bd28:	movw	r2, #5080	; 0x13d8
    bd2c:	movt	r2, #1
    bd30:	add	r3, r1, r3
    bd34:	mov	r1, #1
    bd38:	mov	r5, r0
    bd3c:	str	r0, [sp]
    bd40:	mov	r0, r4
    bd44:	bl	ae70 <__fprintf_chk@plt>
    bd48:	cmp	r0, #0
    bd4c:	mov	r0, r5
    bd50:	blt	b998 <_start@@Base+0x6ec>
    bd54:	bl	a9b4 <g_free@plt>
    bd58:	cmp	r6, #32
    bd5c:	moveq	r3, #0
    bd60:	rsbne	r3, r6, #32
    bd64:	ldr	r1, [sp, #12]
    bd68:	mov	r0, r4
    bd6c:	str	r9, [sp]
    bd70:	movw	r2, #5152	; 0x1420
    bd74:	add	r3, r1, r3
    bd78:	movt	r2, #1
    bd7c:	mov	r1, #1
    bd80:	bl	ae70 <__fprintf_chk@plt>
    bd84:	mvn	r0, r0
    bd88:	lsr	r0, r0, #31
    bd8c:	add	sp, sp, #20
    bd90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bd94:	mov	r1, r4
    bd98:	movw	r0, #5148	; 0x141c
    bd9c:	movt	r0, #1
    bda0:	bl	b038 <fputs@plt>
    bda4:	mvn	r0, r0
    bda8:	lsr	r0, r0, #31
    bdac:	add	sp, sp, #20
    bdb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bdb4:	bl	a9b4 <g_free@plt>
    bdb8:	cmp	sl, #6
    bdbc:	beq	be28 <_start@@Base+0xb7c>
    bdc0:	cmp	sl, #7
    bdc4:	bne	b9d4 <_start@@Base+0x728>
    bdc8:	mov	r0, r8
    bdcc:	bl	af6c <gconf_schema_get_car_type@plt>
    bdd0:	mov	sl, r0
    bdd4:	mov	r0, r8
    bdd8:	bl	aaa4 <gconf_schema_get_cdr_type@plt>
    bddc:	cmp	sl, #0
    bde0:	mov	r8, r0
    bde4:	bne	be78 <_start@@Base+0xbcc>
    bde8:	cmp	r8, #0
    bdec:	beq	b9d4 <_start@@Base+0x728>
    bdf0:	mov	r0, r8
    bdf4:	bl	ad14 <gconf_value_type_to_string@plt>
    bdf8:	movw	r2, #5040	; 0x13b0
    bdfc:	mov	r1, #1
    be00:	movt	r2, #1
    be04:	mov	r3, r0
    be08:	mov	r0, r4
    be0c:	bl	ae70 <__fprintf_chk@plt>
    be10:	cmp	r0, #0
    be14:	bge	b9d4 <_start@@Base+0x728>
    be18:	b	b99c <_start@@Base+0x6f0>
    be1c:	ldr	r3, [pc, #136]	; beac <_start@@Base+0xc00>
    be20:	str	r3, [sp, #12]
    be24:	b	bd58 <_start@@Base+0xaac>
    be28:	mov	r0, r8
    be2c:	bl	aee8 <gconf_schema_get_list_type@plt>
    be30:	cmp	r0, #0
    be34:	beq	b9d4 <_start@@Base+0x728>
    be38:	bl	ad14 <gconf_value_type_to_string@plt>
    be3c:	movw	r2, #5008	; 0x1390
    be40:	mov	r1, #1
    be44:	movt	r2, #1
    be48:	mov	r3, r0
    be4c:	mov	r0, r4
    be50:	bl	ae70 <__fprintf_chk@plt>
    be54:	cmp	r0, #0
    be58:	bge	b9d4 <_start@@Base+0x728>
    be5c:	b	b99c <_start@@Base+0x6f0>
    be60:	ldr	r1, [pc, #68]	; beac <_start@@Base+0xc00>
    be64:	str	r1, [sp, #12]
    be68:	b	bb44 <_start@@Base+0x898>
    be6c:	ldr	r1, [pc, #56]	; beac <_start@@Base+0xc00>
    be70:	str	r1, [sp, #12]
    be74:	b	bd58 <_start@@Base+0xaac>
    be78:	mov	r0, sl
    be7c:	bl	ad14 <gconf_value_type_to_string@plt>
    be80:	movw	r2, #5024	; 0x13a0
    be84:	mov	r1, #1
    be88:	movt	r2, #1
    be8c:	mov	r3, r0
    be90:	mov	r0, r4
    be94:	bl	ae70 <__fprintf_chk@plt>
    be98:	cmp	r0, #0
    be9c:	bge	bde8 <_start@@Base+0xb3c>
    bea0:	b	b99c <_start@@Base+0x6f0>
    bea4:	mov	r3, r2
    bea8:	b	b9d8 <_start@@Base+0x72c>
    beac:	andeq	r1, r1, r0, lsl r0
    beb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    beb4:	sub	sp, sp, #20
    beb8:	mov	r7, r0
    bebc:	mov	r4, r1
    bec0:	ldr	r5, [sp, #56]	; 0x38
    bec4:	mov	sl, r3
    bec8:	cmp	r5, #0
    becc:	bne	bedc <_start@@Base+0xc30>
    bed0:	ldr	r3, [r0, #12]
    bed4:	cmp	r3, #0
    bed8:	beq	c11c <_start@@Base+0xe70>
    bedc:	cmp	r2, #32
    bee0:	beq	c10c <_start@@Base+0xe60>
    bee4:	add	r6, r2, #1
    bee8:	ldr	r8, [pc, #620]	; c15c <_start@@Base+0xeb0>
    beec:	cmp	r6, #32
    bef0:	rsb	r2, r2, #32
    bef4:	add	r9, r8, r2
    bef8:	beq	c104 <_start@@Base+0xe58>
    befc:	rsb	fp, r6, #32
    bf00:	mov	r0, r9
    bf04:	mov	r1, r4
    bf08:	bl	b038 <fputs@plt>
    bf0c:	cmp	r0, #0
    bf10:	blt	c0f8 <_start@@Base+0xe4c>
    bf14:	movw	r0, #5164	; 0x142c
    bf18:	mov	r1, r4
    bf1c:	movt	r0, #1
    bf20:	bl	b038 <fputs@plt>
    bf24:	cmp	r0, #0
    bf28:	blt	c0f8 <_start@@Base+0xe4c>
    bf2c:	cmp	sl, #0
    bf30:	bne	bf7c <_start@@Base+0xcd0>
    bf34:	ldr	r0, [r7]
    bf38:	cmp	r0, #0
    bf3c:	beq	c134 <_start@@Base+0xe88>
    bf40:	mvn	r1, #0
    bf44:	bl	ab1c <g_markup_escape_text@plt>
    bf48:	movw	r2, #5296	; 0x14b0
    bf4c:	mov	r1, #1
    bf50:	movt	r2, #1
    bf54:	mov	ip, r0
    bf58:	mov	r0, r4
    bf5c:	mov	r3, ip
    bf60:	str	ip, [sp, #12]
    bf64:	bl	ae70 <__fprintf_chk@plt>
    bf68:	ldr	ip, [sp, #12]
    bf6c:	cmp	r0, #0
    bf70:	blt	c124 <_start@@Base+0xe78>
    bf74:	mov	r0, ip
    bf78:	bl	a9b4 <g_free@plt>
    bf7c:	cmp	r5, #0
    bf80:	beq	bfcc <_start@@Base+0xd20>
    bf84:	ldr	r0, [r7, #4]
    bf88:	cmp	r0, #0
    bf8c:	beq	bfcc <_start@@Base+0xd20>
    bf90:	mvn	r1, #0
    bf94:	bl	ab1c <g_markup_escape_text@plt>
    bf98:	movw	r2, #5180	; 0x143c
    bf9c:	mov	r1, #1
    bfa0:	movt	r2, #1
    bfa4:	mov	ip, r0
    bfa8:	mov	r0, r4
    bfac:	mov	r3, ip
    bfb0:	str	ip, [sp, #12]
    bfb4:	bl	ae70 <__fprintf_chk@plt>
    bfb8:	ldr	ip, [sp, #12]
    bfbc:	cmp	r0, #0
    bfc0:	mov	r0, ip
    bfc4:	blt	c0f4 <_start@@Base+0xe48>
    bfc8:	bl	a9b4 <g_free@plt>
    bfcc:	movw	r0, #5456	; 0x1550
    bfd0:	mov	r1, r4
    bfd4:	movt	r0, #1
    bfd8:	bl	b038 <fputs@plt>
    bfdc:	cmp	r0, #0
    bfe0:	blt	c0f8 <_start@@Base+0xe4c>
    bfe4:	cmp	sl, #0
    bfe8:	add	r8, r8, fp
    bfec:	bne	c050 <_start@@Base+0xda4>
    bff0:	ldr	r3, [r7, #12]
    bff4:	cmp	r3, #0
    bff8:	beq	c050 <_start@@Base+0xda4>
    bffc:	mov	r0, r8
    c000:	mov	r1, r4
    c004:	bl	b038 <fputs@plt>
    c008:	cmp	r0, #0
    c00c:	blt	c0f8 <_start@@Base+0xe4c>
    c010:	movw	r0, #5200	; 0x1450
    c014:	mov	r1, r4
    c018:	movt	r0, #1
    c01c:	bl	b038 <fputs@plt>
    c020:	cmp	r0, #0
    c024:	blt	c0f8 <_start@@Base+0xe4c>
    c028:	ldr	r0, [r7, #12]
    c02c:	mov	r3, r6
    c030:	str	sl, [sp]
    c034:	movw	r1, #5212	; 0x145c
    c038:	str	sl, [sp, #4]
    c03c:	movt	r1, #1
    c040:	mov	r2, r4
    c044:	bl	b870 <_start@@Base+0x5c4>
    c048:	cmp	r0, #0
    c04c:	beq	c0f8 <_start@@Base+0xe4c>
    c050:	cmp	r5, #0
    c054:	beq	c0c4 <_start@@Base+0xe18>
    c058:	ldr	r3, [r7, #8]
    c05c:	cmp	r3, #0
    c060:	beq	c0c4 <_start@@Base+0xe18>
    c064:	mov	r3, r8
    c068:	movw	r2, #5220	; 0x1464
    c06c:	mov	r0, r4
    c070:	movt	r2, #1
    c074:	mov	r1, #1
    c078:	bl	ae70 <__fprintf_chk@plt>
    c07c:	cmp	r0, #0
    c080:	blt	c0f8 <_start@@Base+0xe4c>
    c084:	mvn	r1, #0
    c088:	ldr	r0, [r7, #8]
    c08c:	bl	ab1c <g_markup_escape_text@plt>
    c090:	mov	r1, r4
    c094:	mov	r5, r0
    c098:	bl	b038 <fputs@plt>
    c09c:	cmp	r0, #0
    c0a0:	mov	r0, r5
    c0a4:	blt	c0f4 <_start@@Base+0xe48>
    c0a8:	bl	a9b4 <g_free@plt>
    c0ac:	movw	r0, #5236	; 0x1474
    c0b0:	mov	r1, r4
    c0b4:	movt	r0, #1
    c0b8:	bl	b038 <fputs@plt>
    c0bc:	cmp	r0, #0
    c0c0:	blt	c0f8 <_start@@Base+0xe4c>
    c0c4:	mov	r0, r9
    c0c8:	mov	r1, r4
    c0cc:	bl	b038 <fputs@plt>
    c0d0:	cmp	r0, #0
    c0d4:	blt	c0f8 <_start@@Base+0xe4c>
    c0d8:	mov	r1, r4
    c0dc:	movw	r0, #5252	; 0x1484
    c0e0:	movt	r0, #1
    c0e4:	bl	b038 <fputs@plt>
    c0e8:	mvn	r0, r0
    c0ec:	lsr	r0, r0, #31
    c0f0:	b	c0fc <_start@@Base+0xe50>
    c0f4:	bl	a9b4 <g_free@plt>
    c0f8:	mov	r0, #0
    c0fc:	add	sp, sp, #20
    c100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c104:	mov	fp, #0
    c108:	b	bf00 <_start@@Base+0xc54>
    c10c:	ldr	r8, [pc, #72]	; c15c <_start@@Base+0xeb0>
    c110:	mov	r6, #33	; 0x21
    c114:	mov	r9, r8
    c118:	b	befc <_start@@Base+0xc50>
    c11c:	mov	r0, #1
    c120:	b	c0fc <_start@@Base+0xe50>
    c124:	mov	r0, ip
    c128:	bl	a9b4 <g_free@plt>
    c12c:	mov	r0, sl
    c130:	b	c0fc <_start@@Base+0xe50>
    c134:	movw	r3, #5272	; 0x1498
    c138:	movw	r0, #4852	; 0x12f4
    c13c:	movt	r3, #1
    c140:	movw	r1, #4892	; 0x131c
    c144:	str	r3, [sp]
    c148:	movt	r0, #1
    c14c:	movw	r2, #4033	; 0xfc1
    c150:	movt	r1, #1
    c154:	ldr	r3, [pc, #4]	; c160 <_start@@Base+0xeb4>
    c158:	bl	ac0c <g_assertion_message_expr@plt>
    c15c:	andeq	r1, r1, r0, lsl r0
    c160:	andeq	r1, r1, r4, lsr r0
    c164:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c168:	subs	sl, r3, #0
    c16c:	sub	sp, sp, #8
    c170:	mov	r9, r0
    c174:	mov	r7, r1
    c178:	mov	r8, r2
    c17c:	ldr	r6, [sp, #40]	; 0x28
    c180:	beq	c1c8 <_start@@Base+0xf1c>
    c184:	cmp	r6, #0
    c188:	beq	c28c <_start@@Base+0xfe0>
    c18c:	ldr	r4, [r0, #12]
    c190:	cmp	r4, #0
    c194:	beq	c1bc <_start@@Base+0xf10>
    c198:	ldr	r5, [r4]
    c19c:	mov	r1, r6
    c1a0:	ldr	r0, [r5]
    c1a4:	bl	afe4 <strcmp@plt>
    c1a8:	cmp	r0, #0
    c1ac:	beq	c1cc <_start@@Base+0xf20>
    c1b0:	ldr	r4, [r4, #4]
    c1b4:	cmp	r4, #0
    c1b8:	bne	c198 <_start@@Base+0xeec>
    c1bc:	mov	r0, #1
    c1c0:	add	sp, sp, #8
    c1c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c1c8:	mov	r5, #0
    c1cc:	ldr	r1, [r9, #4]
    c1d0:	cmp	r1, #0
    c1d4:	beq	c2fc <_start@@Base+0x1050>
    c1d8:	cmp	r8, #32
    c1dc:	moveq	r3, #0
    c1e0:	rsbne	r3, r8, #32
    c1e4:	ldr	r4, [pc, #548]	; c410 <_start@@Base+0x1164>
    c1e8:	movw	r2, #5312	; 0x14c0
    c1ec:	str	r1, [sp]
    c1f0:	movt	r2, #1
    c1f4:	add	r3, r4, r3
    c1f8:	mov	r0, r7
    c1fc:	mov	r1, #1
    c200:	bl	ae70 <__fprintf_chk@plt>
    c204:	cmp	r0, #0
    c208:	blt	c24c <_start@@Base+0xfa0>
    c20c:	cmp	r5, #0
    c210:	beq	c324 <_start@@Base+0x1078>
    c214:	movw	r0, #5456	; 0x1550
    c218:	mov	r1, r7
    c21c:	movt	r0, #1
    c220:	bl	b038 <fputs@plt>
    c224:	cmp	r0, #0
    c228:	blt	c24c <_start@@Base+0xfa0>
    c22c:	mov	r3, #1
    c230:	mov	r0, r5
    c234:	str	r3, [sp]
    c238:	mov	r1, r7
    c23c:	add	r2, r8, r3
    c240:	bl	beb0 <_start@@Base+0xc04>
    c244:	cmp	r0, #0
    c248:	bne	c258 <_start@@Base+0xfac>
    c24c:	mov	r0, #0
    c250:	add	sp, sp, #8
    c254:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c258:	cmp	r8, #32
    c25c:	mov	r0, r7
    c260:	rsbne	r3, r8, #32
    c264:	mov	r1, #1
    c268:	moveq	r3, #0
    c26c:	movw	r2, #5384	; 0x1508
    c270:	add	r3, r4, r3
    c274:	movt	r2, #1
    c278:	bl	ae70 <__fprintf_chk@plt>
    c27c:	mvn	r0, r0
    c280:	lsr	r0, r0, #31
    c284:	add	sp, sp, #8
    c288:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c28c:	ldr	r3, [sp, #44]	; 0x2c
    c290:	cmp	r3, #0
    c294:	beq	c3e8 <_start@@Base+0x113c>
    c298:	ldr	r4, [r0, #12]
    c29c:	cmp	r4, #0
    c2a0:	bne	c2c0 <_start@@Base+0x1014>
    c2a4:	b	c1c8 <_start@@Base+0xf1c>
    c2a8:	ldrb	r2, [r1, #1]
    c2ac:	cmp	r2, #0
    c2b0:	bne	c2d4 <_start@@Base+0x1028>
    c2b4:	ldr	r4, [r4, #4]
    c2b8:	cmp	r4, #0
    c2bc:	beq	c1c8 <_start@@Base+0xf1c>
    c2c0:	ldr	r3, [r4]
    c2c4:	ldr	r1, [r3]
    c2c8:	ldrb	r2, [r1]
    c2cc:	cmp	r2, #67	; 0x43
    c2d0:	beq	c2a8 <_start@@Base+0xffc>
    c2d4:	ldr	r2, [r3, #4]
    c2d8:	cmp	r2, #0
    c2dc:	beq	c2b4 <_start@@Base+0x1008>
    c2e0:	ldr	r3, [r3, #8]
    c2e4:	cmp	r3, #0
    c2e8:	beq	c2b4 <_start@@Base+0x1008>
    c2ec:	ldr	r0, [sp, #44]	; 0x2c
    c2f0:	mov	r2, #1
    c2f4:	bl	ae34 <g_hash_table_replace@plt>
    c2f8:	b	c2b4 <_start@@Base+0x1008>
    c2fc:	movw	r3, #5420	; 0x152c
    c300:	movw	r0, #4852	; 0x12f4
    c304:	movt	r3, #1
    c308:	movw	r1, #4892	; 0x131c
    c30c:	str	r3, [sp]
    c310:	movt	r0, #1
    c314:	movw	r2, #4223	; 0x107f
    c318:	movt	r1, #1
    c31c:	ldr	r3, [pc, #240]	; c414 <_start@@Base+0x1168>
    c320:	bl	ac0c <g_assertion_message_expr@plt>
    c324:	movw	r2, #5332	; 0x14d4
    c328:	mov	r0, r7
    c32c:	movt	r2, #1
    c330:	mov	r1, #1
    c334:	ldr	r3, [r9, #24]
    c338:	bl	ae70 <__fprintf_chk@plt>
    c33c:	cmp	r0, #0
    c340:	blt	c24c <_start@@Base+0xfa0>
    c344:	ldr	r3, [r9, #16]
    c348:	cmp	r3, #0
    c34c:	beq	c36c <_start@@Base+0x10c0>
    c350:	movw	r2, #5348	; 0x14e4
    c354:	mov	r0, r7
    c358:	movt	r2, #1
    c35c:	mov	r1, #1
    c360:	bl	ae70 <__fprintf_chk@plt>
    c364:	cmp	r0, #0
    c368:	blt	c24c <_start@@Base+0xfa0>
    c36c:	ldr	r3, [r9, #20]
    c370:	cmp	r3, #0
    c374:	beq	c394 <_start@@Base+0x10e8>
    c378:	movw	r2, #5364	; 0x14f4
    c37c:	mov	r0, r7
    c380:	movt	r2, #1
    c384:	mov	r1, #1
    c388:	bl	ae70 <__fprintf_chk@plt>
    c38c:	cmp	r0, #0
    c390:	blt	c24c <_start@@Base+0xfa0>
    c394:	ldr	r0, [r9, #8]
    c398:	cmp	r0, #0
    c39c:	beq	c3cc <_start@@Base+0x1120>
    c3a0:	ldr	ip, [r9, #12]
    c3a4:	mov	r2, r7
    c3a8:	str	sl, [sp, #4]
    c3ac:	mov	r3, r8
    c3b0:	movw	r1, #5376	; 0x1500
    c3b4:	movt	r1, #1
    c3b8:	str	ip, [sp]
    c3bc:	bl	b870 <_start@@Base+0x5c4>
    c3c0:	adds	r0, r0, #0
    c3c4:	movne	r0, #1
    c3c8:	b	c250 <_start@@Base+0xfa4>
    c3cc:	mov	r1, r7
    c3d0:	movw	r0, #5148	; 0x141c
    c3d4:	movt	r0, #1
    c3d8:	bl	b038 <fputs@plt>
    c3dc:	mvn	r0, r0
    c3e0:	lsr	r0, r0, #31
    c3e4:	b	c250 <_start@@Base+0xfa4>
    c3e8:	movw	r3, #5396	; 0x1514
    c3ec:	movw	r0, #4852	; 0x12f4
    c3f0:	movt	r3, #1
    c3f4:	movw	r1, #4892	; 0x131c
    c3f8:	str	r3, [sp]
    c3fc:	movt	r0, #1
    c400:	movw	r2, #4213	; 0x1075
    c404:	movt	r1, #1
    c408:	ldr	r3, [pc, #4]	; c414 <_start@@Base+0x1168>
    c40c:	bl	ac0c <g_assertion_message_expr@plt>
    c410:	andeq	r1, r1, r0, lsl r0
    c414:	andeq	r1, r1, ip, asr #32
    c418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c41c:	sub	sp, sp, #12
    c420:	mov	r4, r3
    c424:	ldrb	r3, [r0, #28]
    c428:	ldr	r5, [sp, #48]	; 0x30
    c42c:	mov	r9, r0
    c430:	orr	r3, r3, #32
    c434:	mov	r6, r1
    c438:	cmp	r4, #0
    c43c:	cmpne	r5, #0
    c440:	mov	sl, r2
    c444:	ldr	r7, [sp, #52]	; 0x34
    c448:	strb	r3, [r0, #28]
    c44c:	beq	c45c <_start@@Base+0x11b0>
    c450:	ldrb	r3, [r0, #29]
    c454:	tst	r3, #2
    c458:	bne	c534 <_start@@Base+0x1288>
    c45c:	ldr	r1, [r9, #12]
    c460:	cmp	r1, #0
    c464:	beq	c578 <_start@@Base+0x12cc>
    c468:	cmp	sl, #32
    c46c:	moveq	r3, #0
    c470:	rsbne	r3, sl, #32
    c474:	str	r1, [sp]
    c478:	movw	r2, #5440	; 0x1540
    c47c:	ldr	r1, [pc, #284]	; c5a0 <_start@@Base+0x12f4>
    c480:	movt	r2, #1
    c484:	mov	r0, r6
    c488:	add	r3, r1, r3
    c48c:	mov	r1, #1
    c490:	bl	ae70 <__fprintf_chk@plt>
    c494:	cmp	r0, #0
    c498:	blt	c4e0 <_start@@Base+0x1234>
    c49c:	ldr	fp, [r9, #16]
    c4a0:	cmp	fp, #0
    c4a4:	addne	r8, sl, #1
    c4a8:	bne	c4bc <_start@@Base+0x1210>
    c4ac:	b	c4ec <_start@@Base+0x1240>
    c4b0:	ldr	fp, [fp, #4]
    c4b4:	cmp	fp, #0
    c4b8:	beq	c4ec <_start@@Base+0x1240>
    c4bc:	ldr	r0, [fp]
    c4c0:	mov	r1, r6
    c4c4:	str	r5, [sp]
    c4c8:	mov	r2, r8
    c4cc:	str	r7, [sp, #4]
    c4d0:	mov	r3, r4
    c4d4:	bl	c164 <_start@@Base+0xeb8>
    c4d8:	cmp	r0, #0
    c4dc:	bne	c4b0 <_start@@Base+0x1204>
    c4e0:	mov	r0, #0
    c4e4:	add	sp, sp, #12
    c4e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c4ec:	ldr	r8, [r9, #20]
    c4f0:	cmp	r8, #0
    c4f4:	addne	r9, sl, #1
    c4f8:	bne	c50c <_start@@Base+0x1260>
    c4fc:	b	c540 <_start@@Base+0x1294>
    c500:	ldr	r8, [r8, #4]
    c504:	cmp	r8, #0
    c508:	beq	c540 <_start@@Base+0x1294>
    c50c:	ldr	r0, [r8]
    c510:	mov	r1, r6
    c514:	str	r5, [sp]
    c518:	mov	r2, r9
    c51c:	str	r7, [sp, #4]
    c520:	mov	r3, r4
    c524:	bl	c418 <_start@@Base+0x116c>
    c528:	cmp	r0, #0
    c52c:	bne	c500 <_start@@Base+0x1254>
    c530:	b	c4e0 <_start@@Base+0x1234>
    c534:	mov	r0, #1
    c538:	add	sp, sp, #12
    c53c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c540:	cmp	sl, #32
    c544:	moveq	r3, #0
    c548:	rsbne	r3, sl, #32
    c54c:	ldr	r2, [pc, #76]	; c5a0 <_start@@Base+0x12f4>
    c550:	mov	r0, r6
    c554:	mov	r1, #1
    c558:	add	r3, r2, r3
    c55c:	movw	r2, #5460	; 0x1554
    c560:	movt	r2, #1
    c564:	bl	ae70 <__fprintf_chk@plt>
    c568:	mvn	r0, r0
    c56c:	lsr	r0, r0, #31
    c570:	add	sp, sp, #12
    c574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c578:	movw	r3, #5472	; 0x1560
    c57c:	movw	r0, #4852	; 0x12f4
    c580:	movt	r3, #1
    c584:	movw	r1, #4892	; 0x131c
    c588:	str	r3, [sp]
    c58c:	movt	r0, #1
    c590:	movw	r2, #4300	; 0x10cc
    c594:	movt	r1, #1
    c598:	ldr	r3, [pc, #4]	; c5a4 <_start@@Base+0x12f8>
    c59c:	bl	ac0c <g_assertion_message_expr@plt>
    c5a0:	andeq	r1, r1, r0, lsl r0
    c5a4:	andeq	r1, r1, r8, asr r0
    c5a8:	push	{r4, r5, r6, lr}
    c5ac:	mov	r4, r0
    c5b0:	bl	a9e4 <mkdir@plt>
    c5b4:	cmp	r0, #0
    c5b8:	blt	c5c4 <_start@@Base+0x1318>
    c5bc:	mov	r0, #1
    c5c0:	pop	{r4, r5, r6, pc}
    c5c4:	bl	b020 <__errno_location@plt>
    c5c8:	ldr	r3, [r0]
    c5cc:	mov	r5, r0
    c5d0:	cmp	r3, #17
    c5d4:	beq	c5bc <_start@@Base+0x1310>
    c5d8:	movw	r0, #5492	; 0x1574
    c5dc:	movw	r1, #5500	; 0x157c
    c5e0:	movt	r0, #1
    c5e4:	movt	r1, #1
    c5e8:	bl	afc0 <g_dgettext@plt>
    c5ec:	mov	r6, r0
    c5f0:	ldr	r0, [r5]
    c5f4:	bl	af00 <g_strerror@plt>
    c5f8:	mov	r1, r6
    c5fc:	mov	r2, r4
    c600:	mov	r3, r0
    c604:	mov	r0, #4
    c608:	bl	ab88 <gconf_log@plt>
    c60c:	mov	r0, #0
    c610:	pop	{r4, r5, r6, pc}
    c614:	push	{r4, r5, r6, lr}
    c618:	mov	r4, r0
    c61c:	ldr	r5, [r0]
    c620:	mov	r6, r1
    c624:	cmp	r5, #0
    c628:	beq	c650 <_start@@Base+0x13a4>
    c62c:	ldr	r5, [r5]
    c630:	ldr	r0, [r1]
    c634:	mov	r1, r5
    c638:	bl	a9cc <g_slist_remove@plt>
    c63c:	mov	r1, r5
    c640:	str	r0, [r6]
    c644:	ldr	r0, [r4]
    c648:	bl	a9cc <g_slist_remove@plt>
    c64c:	str	r0, [r4]
    c650:	mov	r0, r5
    c654:	pop	{r4, r5, r6, pc}
    c658:	push	{r4, lr}
    c65c:	mov	r4, r0
    c660:	ldr	r0, [r0]
    c664:	cmp	r0, #0
    c668:	beq	c67c <_start@@Base+0x13d0>
    c66c:	ldr	r1, [r0]
    c670:	bl	a9cc <g_slist_remove@plt>
    c674:	str	r0, [r4]
    c678:	pop	{r4, pc}
    c67c:	movw	r0, #4852	; 0x12f4
    c680:	movw	r2, #4868	; 0x1304
    c684:	movt	r0, #1
    c688:	movt	r2, #1
    c68c:	ldr	r1, [pc, #4]	; c698 <_start@@Base+0x13ec>
    c690:	pop	{r4, lr}
    c694:	b	ad80 <g_return_if_fail_warning@plt>
    c698:	andeq	r1, r1, r4, rrx
    c69c:	ldr	r3, [r2]
    c6a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c6a4:	cmp	r3, #0
    c6a8:	sub	sp, sp, #12
    c6ac:	mov	r4, r2
    c6b0:	ldrne	r0, [r3]
    c6b4:	beq	c800 <_start@@Base+0x1554>
    c6b8:	sub	r0, r0, #1
    c6bc:	cmp	r0, #9
    c6c0:	ldrls	pc, [pc, r0, lsl #2]
    c6c4:	b	c70c <_start@@Base+0x1460>
    c6c8:	andeq	ip, r0, r4, lsl r7
    c6cc:	andeq	ip, r0, r4, lsl r7
    c6d0:	andeq	ip, r0, ip, ror #14
    c6d4:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    c6d8:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    c6dc:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    c6e0:			; <UNDEFINED> instruction: 0x0000c7b8
    c6e4:	strdeq	ip, [r0], -r0
    c6e8:	strdeq	ip, [r0], -r0
    c6ec:	strdeq	ip, [r0], -r0
    c6f0:	add	r0, r4, #16
    c6f4:	add	r1, r4, #20
    c6f8:	bl	c614 <_start@@Base+0x1368>
    c6fc:	mov	r0, r4
    c700:	add	sp, sp, #12
    c704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c708:	b	c658 <_start@@Base+0x13ac>
    c70c:	add	sp, sp, #12
    c710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c714:	ldr	r3, [r4, #8]
    c718:	cmp	r3, #0
    c71c:	beq	c8c0 <_start@@Base+0x1614>
    c720:	ldr	r5, [r3]
    c724:	mov	r0, r3
    c728:	mov	r1, r5
    c72c:	bl	a9cc <g_slist_remove@plt>
    c730:	str	r0, [r4, #8]
    c734:	ldrb	r3, [r4, #32]
    c738:	tst	r3, #2
    c73c:	beq	c8a4 <_start@@Base+0x15f8>
    c740:	ldrb	r3, [r5, #29]
    c744:	tst	r3, #1
    c748:	beq	c6fc <_start@@Base+0x1450>
    c74c:	ldr	r6, [r5, #4]
    c750:	mov	r1, r5
    c754:	ldr	r0, [r6, #20]
    c758:	bl	a9cc <g_slist_remove@plt>
    c75c:	str	r0, [r6, #20]
    c760:	mov	r0, r5
    c764:	bl	b57c <_start@@Base+0x2d0>
    c768:	b	c6fc <_start@@Base+0x1450>
    c76c:	ldrb	r3, [r4, #32]
    c770:	tst	r3, #2
    c774:	bne	c808 <_start@@Base+0x155c>
    c778:	ldr	r5, [r4, #12]
    c77c:	cmp	r5, #0
    c780:	beq	c950 <_start@@Base+0x16a4>
    c784:	ldr	r6, [r5, #12]
    c788:	cmp	r6, #0
    c78c:	beq	c978 <_start@@Base+0x16cc>
    c790:	movw	r3, #5556	; 0x15b4
    c794:	movw	r0, #4852	; 0x12f4
    c798:	movt	r3, #1
    c79c:	movw	r1, #4892	; 0x131c
    c7a0:	str	r3, [sp]
    c7a4:	movt	r0, #1
    c7a8:	movw	r2, #3401	; 0xd49
    c7ac:	movt	r1, #1
    c7b0:	ldr	r3, [pc, #516]	; c9bc <_start@@Base+0x1710>
    c7b4:	bl	ac0c <g_assertion_message_expr@plt>
    c7b8:	ldr	r2, [r4, #24]
    c7bc:	ldr	r3, [r4, #16]
    c7c0:	ldr	r2, [r2]
    c7c4:	cmp	r3, #0
    c7c8:	ldrne	r3, [r3]
    c7cc:	ldr	r2, [r2, #12]
    c7d0:	cmp	r2, r3
    c7d4:	beq	c6f0 <_start@@Base+0x1444>
    c7d8:	movw	r3, #5644	; 0x160c
    c7dc:	movw	r0, #4852	; 0x12f4
    c7e0:	movt	r3, #1
    c7e4:	movw	r1, #4892	; 0x131c
    c7e8:	str	r3, [sp]
    c7ec:	movt	r0, #1
    c7f0:	movw	r2, #3477	; 0xd95
    c7f4:	movt	r1, #1
    c7f8:	ldr	r3, [pc, #444]	; c9bc <_start@@Base+0x1710>
    c7fc:	bl	ac0c <g_assertion_message_expr@plt>
    c800:	bl	b060 <fputs@plt+0x28>
    c804:	b	c6b8 <_start@@Base+0x140c>
    c808:	ldr	r0, [r4, #24]
    c80c:	cmp	r0, #0
    c810:	beq	c88c <_start@@Base+0x15e0>
    c814:	bl	ae4c <g_slist_length@plt>
    c818:	cmp	r0, #1
    c81c:	beq	c848 <_start@@Base+0x159c>
    c820:	movw	r3, #5600	; 0x15e0
    c824:	movw	r0, #4852	; 0x12f4
    c828:	movt	r3, #1
    c82c:	movw	r1, #4892	; 0x131c
    c830:	str	r3, [sp]
    c834:	movt	r0, #1
    c838:	movw	r2, #3413	; 0xd55
    c83c:	movt	r1, #1
    c840:	ldr	r3, [pc, #372]	; c9bc <_start@@Base+0x1710>
    c844:	bl	ac0c <g_assertion_message_expr@plt>
    c848:	ldr	r3, [r4, #24]
    c84c:	mov	r0, r3
    c850:	ldr	r9, [r3]
    c854:	bl	aa2c <g_slist_free@plt>
    c858:	ldr	sl, [r4, #12]
    c85c:	mov	r3, #0
    c860:	str	r3, [r4, #24]
    c864:	cmp	sl, r3
    c868:	beq	c884 <_start@@Base+0x15d8>
    c86c:	ldr	r3, [sl, #8]
    c870:	cmp	r3, #0
    c874:	beq	c884 <_start@@Base+0x15d8>
    c878:	ldr	r3, [r3]
    c87c:	cmp	r3, #5
    c880:	beq	c8e0 <_start@@Base+0x1634>
    c884:	mov	r0, r9
    c888:	bl	b4e8 <_start@@Base+0x23c>
    c88c:	mov	r3, #0
    c890:	mov	r0, r4
    c894:	str	r3, [r4, #12]
    c898:	add	sp, sp, #12
    c89c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c8a0:	b	c658 <_start@@Base+0x13ac>
    c8a4:	ldr	r0, [r5, #16]
    c8a8:	bl	aab0 <g_slist_reverse@plt>
    c8ac:	str	r0, [r5, #16]
    c8b0:	ldr	r0, [r5, #20]
    c8b4:	bl	aab0 <g_slist_reverse@plt>
    c8b8:	str	r0, [r5, #20]
    c8bc:	b	c6fc <_start@@Base+0x1450>
    c8c0:	movw	r0, #4852	; 0x12f4
    c8c4:	movw	r2, #5684	; 0x1634
    c8c8:	movt	r0, #1
    c8cc:	movt	r2, #1
    c8d0:	ldr	r1, [pc, #232]	; c9c0 <_start@@Base+0x1714>
    c8d4:	mov	r5, r3
    c8d8:	bl	ad80 <g_return_if_fail_warning@plt>
    c8dc:	b	c734 <_start@@Base+0x1488>
    c8e0:	ldr	fp, [sl, #12]
    c8e4:	cmp	fp, #0
    c8e8:	beq	c9a8 <_start@@Base+0x16fc>
    c8ec:	ldr	r8, [r9]
    c8f0:	mov	r5, fp
    c8f4:	b	c904 <_start@@Base+0x1658>
    c8f8:	ldr	r5, [r5, #4]
    c8fc:	cmp	r5, #0
    c900:	beq	c9a8 <_start@@Base+0x16fc>
    c904:	ldr	r6, [r5]
    c908:	mov	r0, r8
    c90c:	ldr	r1, [r6]
    c910:	bl	afe4 <strcmp@plt>
    c914:	subs	r7, r0, #0
    c918:	bne	c8f8 <_start@@Base+0x164c>
    c91c:	ldr	r0, [r6, #4]
    c920:	bl	a9b4 <g_free@plt>
    c924:	ldr	r3, [r9, #4]
    c928:	ldr	r0, [r6, #8]
    c92c:	str	r3, [r6, #4]
    c930:	str	r7, [r9, #4]
    c934:	bl	a9b4 <g_free@plt>
    c938:	ldr	r3, [r9, #4]
    c93c:	mov	r0, r9
    c940:	str	r3, [r6, #8]
    c944:	str	r7, [r9, #8]
    c948:	bl	b4e8 <_start@@Base+0x23c>
    c94c:	b	c88c <_start@@Base+0x15e0>
    c950:	movw	r3, #5536	; 0x15a0
    c954:	movw	r0, #4852	; 0x12f4
    c958:	movt	r3, #1
    c95c:	movw	r1, #4892	; 0x131c
    c960:	str	r3, [sp]
    c964:	movt	r0, #1
    c968:	movw	r2, #3400	; 0xd48
    c96c:	movt	r1, #1
    c970:	ldr	r3, [pc, #68]	; c9bc <_start@@Base+0x1710>
    c974:	bl	ac0c <g_assertion_message_expr@plt>
    c978:	ldr	r0, [r4, #24]
    c97c:	bl	aab0 <g_slist_reverse@plt>
    c980:	ldr	r3, [r4, #12]
    c984:	ldr	r3, [r3, #8]
    c988:	cmp	r3, #0
    c98c:	str	r0, [r5, #12]
    c990:	str	r6, [r4, #24]
    c994:	beq	c88c <_start@@Base+0x15e0>
    c998:	add	r0, r4, #16
    c99c:	add	r1, r4, #20
    c9a0:	bl	c614 <_start@@Base+0x1368>
    c9a4:	b	c88c <_start@@Base+0x15e0>
    c9a8:	mov	r0, fp
    c9ac:	mov	r1, r9
    c9b0:	bl	ac30 <g_slist_append@plt>
    c9b4:	str	r0, [sl, #12]
    c9b8:	b	c88c <_start@@Base+0x15e0>
    c9bc:	andeq	r1, r1, r0, ror r0
    c9c0:	andeq	r1, r1, r4, lsl #1
    c9c4:	push	{r3}		; (str r3, [sp, #-4]!)
    c9c8:	push	{r4, r5, r6, r7, lr}
    c9cc:	movw	r4, #45672	; 0xb268
    c9d0:	sub	sp, sp, #32
    c9d4:	movt	r4, #1
    c9d8:	add	r2, sp, #20
    c9dc:	mov	r6, r0
    c9e0:	ldr	r3, [r4]
    c9e4:	mov	r0, r1
    c9e8:	ldr	r5, [sp, #52]	; 0x34
    c9ec:	add	r1, sp, #16
    c9f0:	str	r3, [sp, #28]
    c9f4:	bl	aed0 <g_markup_parse_context_get_position@plt>
    c9f8:	add	r1, sp, #56	; 0x38
    c9fc:	mov	r0, r5
    ca00:	str	r1, [sp, #24]
    ca04:	bl	ad2c <g_strdup_vprintf@plt>
    ca08:	mov	r5, r0
    ca0c:	bl	aea0 <gconf_error_quark@plt>
    ca10:	movw	r1, #5708	; 0x164c
    ca14:	movt	r1, #1
    ca18:	mov	r7, r0
    ca1c:	movw	r0, #5492	; 0x1574
    ca20:	movt	r0, #1
    ca24:	bl	afc0 <g_dgettext@plt>
    ca28:	ldr	r2, [sp, #16]
    ca2c:	ldr	ip, [sp, #20]
    ca30:	mov	r1, r7
    ca34:	str	r5, [sp, #8]
    ca38:	str	r2, [sp]
    ca3c:	mov	r2, #6
    ca40:	str	ip, [sp, #4]
    ca44:	mov	r3, r0
    ca48:	mov	r0, r6
    ca4c:	bl	adb0 <g_set_error@plt>
    ca50:	mov	r0, r5
    ca54:	bl	a9b4 <g_free@plt>
    ca58:	ldr	r2, [sp, #28]
    ca5c:	ldr	r3, [r4]
    ca60:	cmp	r2, r3
    ca64:	bne	ca78 <_start@@Base+0x17cc>
    ca68:	add	sp, sp, #32
    ca6c:	pop	{r4, r5, r6, r7, lr}
    ca70:	add	sp, sp, #4
    ca74:	bx	lr
    ca78:	bl	ae58 <__stack_chk_fail@plt>
    ca7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ca80:	sub	sp, sp, #236	; 0xec
    ca84:	movw	ip, #45672	; 0xb268
    ca88:	movt	ip, #1
    ca8c:	ldr	r5, [sp, #276]	; 0x114
    ca90:	mov	sl, r2
    ca94:	str	r0, [sp, #12]
    ca98:	ldr	r2, [sp, #272]	; 0x110
    ca9c:	cmp	r5, #0
    caa0:	ldr	r0, [ip]
    caa4:	str	ip, [sp, #24]
    caa8:	str	r1, [sp, #16]
    caac:	str	r3, [sp, #28]
    cab0:	str	r2, [sp, #20]
    cab4:	str	r0, [sp, #228]	; 0xe4
    cab8:	ldr	r4, [sp, #280]	; 0x118
    cabc:	beq	ccb0 <_start@@Base+0x1a04>
    cac0:	cmp	r4, #0
    cac4:	beq	ccd0 <_start@@Base+0x1a24>
    cac8:	ldr	ip, [sp, #284]	; 0x11c
    cacc:	add	r1, sp, #292	; 0x124
    cad0:	str	r5, [sp, #36]	; 0x24
    cad4:	mov	r5, #0
    cad8:	cmp	ip, r5
    cadc:	str	r4, [sp, #40]	; 0x28
    cae0:	ldr	r2, [sp, #288]	; 0x120
    cae4:	str	r1, [sp, #32]
    cae8:	str	r5, [r4]
    caec:	moveq	r4, #1
    caf0:	beq	cba4 <_start@@Base+0x18f8>
    caf4:	cmp	r2, #0
    caf8:	addne	r0, sp, #300	; 0x12c
    cafc:	addne	r3, sp, #36	; 0x24
    cb00:	movne	r4, #1
    cb04:	beq	cb6c <_start@@Base+0x18c0>
    cb08:	str	r5, [r2]
    cb0c:	add	r4, r4, #1
    cb10:	str	ip, [r3, #8]
    cb14:	ldr	ip, [r0, #-8]
    cb18:	str	r2, [r3, #12]
    cb1c:	cmp	ip, #0
    cb20:	ldr	r2, [r1, #4]
    cb24:	beq	cba4 <_start@@Base+0x18f8>
    cb28:	cmp	r2, #0
    cb2c:	beq	cb6c <_start@@Base+0x18c0>
    cb30:	cmp	r4, #24
    cb34:	add	r1, r1, #8
    cb38:	add	r0, r0, #8
    cb3c:	add	r3, r3, #8
    cb40:	bne	cb08 <_start@@Base+0x185c>
    cb44:	movw	r3, #5860	; 0x16e4
    cb48:	movw	r0, #4852	; 0x12f4
    cb4c:	movt	r3, #1
    cb50:	movw	r1, #4892	; 0x131c
    cb54:	str	r3, [sp]
    cb58:	movt	r0, #1
    cb5c:	movw	r2, #2197	; 0x895
    cb60:	movt	r1, #1
    cb64:	ldr	r3, [pc, #392]	; ccf4 <_start@@Base+0x1a48>
    cb68:	bl	ac0c <g_assertion_message_expr@plt>
    cb6c:	movw	r0, #4852	; 0x12f4
    cb70:	movw	r2, #5844	; 0x16d4
    cb74:	movt	r0, #1
    cb78:	movt	r2, #1
    cb7c:	ldr	r1, [pc, #368]	; ccf4 <_start@@Base+0x1a48>
    cb80:	bl	ad80 <g_return_if_fail_warning@plt>
    cb84:	mov	r0, #0
    cb88:	ldr	ip, [sp, #24]
    cb8c:	ldr	r2, [sp, #228]	; 0xe4
    cb90:	ldr	r3, [ip]
    cb94:	cmp	r2, r3
    cb98:	bne	ccf0 <_start@@Base+0x1a44>
    cb9c:	add	sp, sp, #236	; 0xec
    cba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cba4:	ldr	r6, [sl]
    cba8:	cmp	r6, #0
    cbac:	beq	cca8 <_start@@Base+0x19fc>
    cbb0:	mov	r3, #0
    cbb4:	add	r8, sl, #4
    cbb8:	add	r7, sp, #36	; 0x24
    cbbc:	mov	r9, sl
    cbc0:	mov	fp, r3
    cbc4:	str	sl, [sp, #8]
    cbc8:	mov	sl, #0
    cbcc:	ldr	r0, [r7, sl, lsl #3]
    cbd0:	lsl	r5, sl, #3
    cbd4:	cmp	r0, #0
    cbd8:	beq	cbec <_start@@Base+0x1940>
    cbdc:	mov	r1, r6
    cbe0:	bl	afe4 <strcmp@plt>
    cbe4:	cmp	r0, #0
    cbe8:	beq	cc38 <_start@@Base+0x198c>
    cbec:	add	sl, sl, #1
    cbf0:	cmp	r4, sl
    cbf4:	bgt	cbcc <_start@@Base+0x1920>
    cbf8:	movw	r0, #5492	; 0x1574
    cbfc:	movw	r1, #5736	; 0x1668
    cc00:	movt	r0, #1
    cc04:	movt	r1, #1
    cc08:	bl	afc0 <g_dgettext@plt>
    cc0c:	ldr	ip, [r9]
    cc10:	ldr	r1, [sp, #16]
    cc14:	mov	r2, #6
    cc18:	str	ip, [sp]
    cc1c:	str	r1, [sp, #4]
    cc20:	ldr	r1, [sp, #12]
    cc24:	mov	r3, r0
    cc28:	ldr	r0, [sp, #20]
    cc2c:	bl	c9c4 <_start@@Base+0x1718>
    cc30:	mov	r0, #0
    cc34:	b	cb88 <_start@@Base+0x18dc>
    cc38:	add	r3, sp, #232	; 0xe8
    cc3c:	add	r5, r3, r5
    cc40:	ldr	r2, [r5, #-192]	; 0xffffff40
    cc44:	str	r0, [r5, #-196]	; 0xffffff3c
    cc48:	ldr	r1, [r2]
    cc4c:	cmp	r1, #0
    cc50:	beq	cc7c <_start@@Base+0x19d0>
    cc54:	movw	r3, #5880	; 0x16f8
    cc58:	movw	r0, #4852	; 0x12f4
    cc5c:	movt	r3, #1
    cc60:	movw	r1, #4892	; 0x131c
    cc64:	str	r3, [sp]
    cc68:	movt	r0, #1
    cc6c:	movw	r2, #2228	; 0x8b4
    cc70:	movt	r1, #1
    cc74:	ldr	r3, [pc, #120]	; ccf4 <_start@@Base+0x1a48>
    cc78:	bl	ac0c <g_assertion_message_expr@plt>
    cc7c:	ldr	ip, [sp, #28]
    cc80:	cmp	r4, sl
    cc84:	ldr	r1, [ip, fp]
    cc88:	str	r1, [r2]
    cc8c:	ble	cbf8 <_start@@Base+0x194c>
    cc90:	ldr	r2, [sp, #8]
    cc94:	mov	r9, r8
    cc98:	rsb	fp, r2, r8
    cc9c:	ldr	r6, [r8], #4
    cca0:	cmp	r6, #0
    cca4:	bne	cbc8 <_start@@Base+0x191c>
    cca8:	mov	r0, #1
    ccac:	b	cb88 <_start@@Base+0x18dc>
    ccb0:	movw	r0, #4852	; 0x12f4
    ccb4:	movw	r2, #5796	; 0x16a4
    ccb8:	movt	r0, #1
    ccbc:	movt	r2, #1
    ccc0:	ldr	r1, [pc, #44]	; ccf4 <_start@@Base+0x1a48>
    ccc4:	bl	ad80 <g_return_if_fail_warning@plt>
    ccc8:	mov	r0, r5
    cccc:	b	cb88 <_start@@Base+0x18dc>
    ccd0:	movw	r0, #4852	; 0x12f4
    ccd4:	movw	r2, #5828	; 0x16c4
    ccd8:	movt	r0, #1
    ccdc:	movt	r2, #1
    cce0:	ldr	r1, [pc, #12]	; ccf4 <_start@@Base+0x1a48>
    cce4:	bl	ad80 <g_return_if_fail_warning@plt>
    cce8:	mov	r0, r4
    ccec:	b	cb88 <_start@@Base+0x18dc>
    ccf0:	bl	ae58 <__stack_chk_fail@plt>
    ccf4:	muleq	r1, r4, r0
    ccf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ccfc:	vpush	{d8}
    cd00:	movw	r4, #45672	; 0xb268
    cd04:	sub	sp, sp, #196	; 0xc4
    cd08:	movt	r4, #1
    cd0c:	add	fp, sp, #140	; 0x8c
    cd10:	movw	r9, #5896	; 0x1708
    cd14:	ldr	lr, [r4]
    cd18:	movt	r9, #1
    cd1c:	ldr	ip, [sp, #244]	; 0xf4
    cd20:	movw	r5, #5936	; 0x1730
    cd24:	ldr	r8, [sp, #240]	; 0xf0
    cd28:	movt	r5, #1
    cd2c:	str	r9, [sp, #4]
    cd30:	movw	r6, #5904	; 0x1710
    cd34:	str	ip, [sp, #116]	; 0x74
    cd38:	movt	r6, #1
    cd3c:	str	lr, [sp, #188]	; 0xbc
    cd40:	movw	r7, #5912	; 0x1718
    cd44:	str	r5, [sp, #12]
    cd48:	movt	r7, #1
    cd4c:	str	r6, [sp, #20]
    cd50:	movw	lr, #5920	; 0x1720
    cd54:	str	r7, [sp, #28]
    cd58:	movt	lr, #1
    cd5c:	movw	sl, #5932	; 0x172c
    cd60:	str	lr, [sp, #36]	; 0x24
    cd64:	movt	sl, #1
    cd68:	movw	lr, #5944	; 0x1738
    cd6c:	str	sl, [sp, #44]	; 0x2c
    cd70:	movt	lr, #1
    cd74:	movw	sl, #5956	; 0x1744
    cd78:	str	lr, [sp, #52]	; 0x34
    cd7c:	movt	sl, #1
    cd80:	movw	lr, #5964	; 0x174c
    cd84:	str	sl, [sp, #60]	; 0x3c
    cd88:	movt	lr, #1
    cd8c:	movw	sl, #5972	; 0x1754
    cd90:	str	lr, [sp, #68]	; 0x44
    cd94:	movt	sl, #1
    cd98:	mov	lr, #0
    cd9c:	str	sl, [sp, #76]	; 0x4c
    cda0:	add	sl, sp, #124	; 0x7c
    cda4:	str	lr, [r8]
    cda8:	str	lr, [sp, #140]	; 0x8c
    cdac:	str	lr, [sp, #124]	; 0x7c
    cdb0:	str	lr, [sp, #128]	; 0x80
    cdb4:	str	lr, [sp, #144]	; 0x90
    cdb8:	str	lr, [sp, #148]	; 0x94
    cdbc:	str	lr, [sp, #132]	; 0x84
    cdc0:	str	lr, [sp, #136]	; 0x88
    cdc4:	str	lr, [sp, #152]	; 0x98
    cdc8:	str	ip, [sp]
    cdcc:	str	fp, [sp, #8]
    cdd0:	add	fp, sp, #128	; 0x80
    cdd4:	str	sl, [sp, #16]
    cdd8:	add	sl, sp, #144	; 0x90
    cddc:	str	fp, [sp, #24]
    cde0:	add	fp, sp, #148	; 0x94
    cde4:	str	sl, [sp, #32]
    cde8:	add	sl, sp, #132	; 0x84
    cdec:	str	fp, [sp, #40]	; 0x28
    cdf0:	add	fp, sp, #136	; 0x88
    cdf4:	str	sl, [sp, #48]	; 0x30
    cdf8:	add	sl, sp, #152	; 0x98
    cdfc:	str	fp, [sp, #56]	; 0x38
    ce00:	add	fp, sp, #156	; 0x9c
    ce04:	str	sl, [sp, #64]	; 0x40
    ce08:	add	sl, sp, #160	; 0xa0
    ce0c:	str	fp, [sp, #72]	; 0x48
    ce10:	movw	fp, #5980	; 0x175c
    ce14:	str	sl, [sp, #80]	; 0x50
    ce18:	movt	fp, #1
    ce1c:	str	lr, [sp, #108]	; 0x6c
    ce20:	movw	sl, #5988	; 0x1764
    ce24:	str	fp, [sp, #84]	; 0x54
    ce28:	movt	sl, #1
    ce2c:	add	fp, sp, #164	; 0xa4
    ce30:	str	sl, [sp, #92]	; 0x5c
    ce34:	str	fp, [sp, #88]	; 0x58
    ce38:	add	sl, sp, #168	; 0xa8
    ce3c:	movw	lr, #5996	; 0x176c
    ce40:	str	sl, [sp, #96]	; 0x60
    ce44:	movt	lr, #1
    ce48:	str	lr, [sp, #100]	; 0x64
    ce4c:	add	lr, sp, #172	; 0xac
    ce50:	str	lr, [sp, #104]	; 0x68
    ce54:	mov	sl, r0
    ce58:	mov	fp, r1
    ce5c:	bl	ca7c <_start@@Base+0x17d0>
    ce60:	cmp	r0, #0
    ce64:	beq	cf18 <_start@@Base+0x1c6c>
    ce68:	ldr	r0, [sp, #124]	; 0x7c
    ce6c:	cmp	r0, #0
    ce70:	beq	cf18 <_start@@Base+0x1c6c>
    ce74:	bl	aba0 <gconf_value_type_from_string@plt>
    ce78:	subs	r3, r0, #0
    ce7c:	beq	cf34 <_start@@Base+0x1c88>
    ce80:	sub	r2, r3, #1
    ce84:	cmp	r2, #6
    ce88:	ldrls	pc, [pc, r2, lsl #2]
    ce8c:	b	cf18 <_start@@Base+0x1c6c>
    ce90:	andeq	ip, r0, r4, asr #31
    ce94:	andeq	ip, r0, ip, lsr #29
    ce98:	andeq	ip, r0, ip, lsr #29
    ce9c:	andeq	ip, r0, ip, lsr #29
    cea0:	ldrdeq	ip, [r0], -r4
    cea4:	andeq	ip, r0, r0, ror pc
    cea8:			; <UNDEFINED> instruction: 0x0000cfb4
    ceac:	ldr	r5, [sp, #140]	; 0x8c
    ceb0:	cmp	r5, #0
    ceb4:	beq	d28c <_start@@Base+0x1fe0>
    ceb8:	cmp	r3, #3
    cebc:	beq	d138 <_start@@Base+0x1e8c>
    cec0:	cmp	r3, #4
    cec4:	bne	d038 <_start@@Base+0x1d8c>
    cec8:	movw	r1, #4920	; 0x1338
    cecc:	mov	r0, r5
    ced0:	movt	r1, #1
    ced4:	bl	afe4 <strcmp@plt>
    ced8:	cmp	r0, #0
    cedc:	beq	d284 <_start@@Base+0x1fd8>
    cee0:	movw	r1, #4928	; 0x1340
    cee4:	mov	r0, r5
    cee8:	movt	r1, #1
    ceec:	bl	afe4 <strcmp@plt>
    cef0:	cmp	r0, #0
    cef4:	moveq	r7, r0
    cef8:	bne	d2cc <_start@@Base+0x2020>
    cefc:	mov	r0, #4
    cf00:	bl	aa74 <gconf_value_new@plt>
    cf04:	mov	r2, r0
    cf08:	str	r0, [r8]
    cf0c:	mov	r0, r2
    cf10:	mov	r1, r7
    cf14:	bl	adbc <gconf_value_set_bool@plt>
    cf18:	ldr	r2, [sp, #188]	; 0xbc
    cf1c:	ldr	r3, [r4]
    cf20:	cmp	r2, r3
    cf24:	bne	d36c <_start@@Base+0x20c0>
    cf28:	add	sp, sp, #196	; 0xc4
    cf2c:	vpop	{d8}
    cf30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cf34:	movw	r0, #5492	; 0x1574
    cf38:	movw	r1, #6012	; 0x177c
    cf3c:	movt	r0, #1
    cf40:	movt	r1, #1
    cf44:	bl	afc0 <g_dgettext@plt>
    cf48:	ldr	r2, [sp, #124]	; 0x7c
    cf4c:	str	r5, [sp, #4]
    cf50:	mov	r1, sl
    cf54:	str	fp, [sp, #8]
    cf58:	str	r2, [sp]
    cf5c:	mov	r2, #6
    cf60:	mov	r3, r0
    cf64:	ldr	r0, [sp, #116]	; 0x74
    cf68:	bl	c9c4 <_start@@Base+0x1718>
    cf6c:	b	cf18 <_start@@Base+0x1c6c>
    cf70:	ldr	r0, [sp, #144]	; 0x90
    cf74:	cmp	r0, #0
    cf78:	beq	d234 <_start@@Base+0x1f88>
    cf7c:	bl	aba0 <gconf_value_type_from_string@plt>
    cf80:	cmp	r0, #7
    cf84:	mov	r5, r0
    cf88:	bhi	cf9c <_start@@Base+0x1cf0>
    cf8c:	mov	r3, #1
    cf90:	lsl	r3, r3, r0
    cf94:	tst	r3, #225	; 0xe1
    cf98:	bne	d178 <_start@@Base+0x1ecc>
    cf9c:	mov	r0, #6
    cfa0:	bl	aa74 <gconf_value_new@plt>
    cfa4:	mov	r1, r5
    cfa8:	str	r0, [r8]
    cfac:	bl	ad98 <gconf_value_set_list_type@plt>
    cfb0:	b	cf18 <_start@@Base+0x1c6c>
    cfb4:	mov	r0, #7
    cfb8:	bl	aa74 <gconf_value_new@plt>
    cfbc:	str	r0, [r8]
    cfc0:	b	cf18 <_start@@Base+0x1c6c>
    cfc4:	mov	r0, #1
    cfc8:	bl	aa74 <gconf_value_new@plt>
    cfcc:	str	r0, [r8]
    cfd0:	b	cf18 <_start@@Base+0x1c6c>
    cfd4:	ldr	r0, [sp, #128]	; 0x80
    cfd8:	cmp	r0, #0
    cfdc:	beq	d200 <_start@@Base+0x1f54>
    cfe0:	bl	aba0 <gconf_value_type_from_string@plt>
    cfe4:	cmp	r0, #7
    cfe8:	mov	r5, r0
    cfec:	beq	d0b8 <_start@@Base+0x1e0c>
    cff0:	cmp	r0, #6
    cff4:	beq	d1b0 <_start@@Base+0x1f04>
    cff8:	mov	r0, #5
    cffc:	bl	aa74 <gconf_value_new@plt>
    d000:	str	r0, [r8]
    d004:	bl	aac8 <gconf_schema_new@plt>
    d008:	mov	r1, r5
    d00c:	mov	r6, r0
    d010:	bl	aad4 <gconf_schema_set_type@plt>
    d014:	ldr	r1, [sp, #152]	; 0x98
    d018:	cmp	r1, #0
    d01c:	beq	d028 <_start@@Base+0x1d7c>
    d020:	mov	r0, r6
    d024:	bl	b008 <gconf_schema_set_owner@plt>
    d028:	ldr	r0, [r8]
    d02c:	mov	r1, r6
    d030:	bl	af24 <gconf_value_set_schema_nocopy@plt>
    d034:	b	cf18 <_start@@Base+0x1c6c>
    d038:	add	r6, sp, #192	; 0xc0
    d03c:	mov	r7, #0
    d040:	str	r7, [r6, #-16]!
    d044:	str	r3, [sp, #112]	; 0x70
    d048:	bl	b020 <__errno_location@plt>
    d04c:	mov	r1, r6
    d050:	mov	r2, #10
    d054:	mov	fp, r0
    d058:	mov	r0, r5
    d05c:	str	r7, [fp]
    d060:	bl	ada4 <strtol@plt>
    d064:	ldr	r2, [sp, #176]	; 0xb0
    d068:	ldr	r3, [sp, #112]	; 0x70
    d06c:	cmp	r5, r2
    d070:	mov	r6, r0
    d074:	beq	d358 <_start@@Base+0x20ac>
    d078:	ldr	r2, [fp]
    d07c:	cmp	r2, #34	; 0x22
    d080:	beq	d344 <_start@@Base+0x2098>
    d084:	mov	r0, r3
    d088:	str	r3, [sp, #112]	; 0x70
    d08c:	bl	aa74 <gconf_value_new@plt>
    d090:	ldr	r3, [sp, #112]	; 0x70
    d094:	cmp	r3, #3
    d098:	mov	r2, r0
    d09c:	str	r0, [r8]
    d0a0:	beq	d370 <_start@@Base+0x20c4>
    d0a4:	cmp	r3, #4
    d0a8:	beq	cf0c <_start@@Base+0x1c60>
    d0ac:	mov	r1, r6
    d0b0:	bl	aaec <gconf_value_set_int@plt>
    d0b4:	b	cf18 <_start@@Base+0x1c6c>
    d0b8:	ldr	r0, [sp, #132]	; 0x84
    d0bc:	cmp	r0, #0
    d0c0:	moveq	r5, r0
    d0c4:	beq	d0d0 <_start@@Base+0x1e24>
    d0c8:	bl	aba0 <gconf_value_type_from_string@plt>
    d0cc:	mov	r5, r0
    d0d0:	ldr	r0, [sp, #136]	; 0x88
    d0d4:	cmp	r0, #0
    d0d8:	moveq	r7, r0
    d0dc:	beq	d0e8 <_start@@Base+0x1e3c>
    d0e0:	bl	aba0 <gconf_value_type_from_string@plt>
    d0e4:	mov	r7, r0
    d0e8:	sub	r3, r5, #5
    d0ec:	cmp	r3, #2
    d0f0:	bls	d2ac <_start@@Base+0x2000>
    d0f4:	sub	r3, r7, #5
    d0f8:	cmp	r3, #2
    d0fc:	bls	d2ec <_start@@Base+0x2040>
    d100:	mov	r0, #5
    d104:	bl	aa74 <gconf_value_new@plt>
    d108:	str	r0, [r8]
    d10c:	bl	aac8 <gconf_schema_new@plt>
    d110:	mov	r1, #7
    d114:	mov	r6, r0
    d118:	bl	aad4 <gconf_schema_set_type@plt>
    d11c:	mov	r0, r6
    d120:	mov	r1, r5
    d124:	bl	ab28 <gconf_schema_set_car_type@plt>
    d128:	mov	r0, r6
    d12c:	mov	r1, r7
    d130:	bl	ae64 <gconf_schema_set_cdr_type@plt>
    d134:	b	d014 <_start@@Base+0x1d68>
    d138:	mov	r0, r5
    d13c:	add	r1, sp, #176	; 0xb0
    d140:	str	r3, [sp, #112]	; 0x70
    d144:	bl	ae28 <gconf_string_to_double@plt>
    d148:	ldr	r3, [sp, #112]	; 0x70
    d14c:	cmp	r0, #0
    d150:	beq	d254 <_start@@Base+0x1fa8>
    d154:	mov	r0, r3
    d158:	vldr	d8, [sp, #176]	; 0xb0
    d15c:	bl	aa74 <gconf_value_new@plt>
    d160:	mov	r2, r0
    d164:	str	r0, [r8]
    d168:	mov	r0, r2
    d16c:	vmov.f64	d0, d8
    d170:	bl	acb4 <gconf_value_set_float@plt>
    d174:	b	cf18 <_start@@Base+0x1c6c>
    d178:	movw	r0, #5492	; 0x1574
    d17c:	movw	r1, #6104	; 0x17d8
    d180:	movt	r0, #1
    d184:	movt	r1, #1
    d188:	bl	afc0 <g_dgettext@plt>
    d18c:	ldr	ip, [sp, #144]	; 0x90
    d190:	mov	r3, r0
    d194:	str	fp, [sp, #4]
    d198:	mov	r1, sl
    d19c:	ldr	r0, [sp, #116]	; 0x74
    d1a0:	mov	r2, #6
    d1a4:	str	ip, [sp]
    d1a8:	bl	c9c4 <_start@@Base+0x1718>
    d1ac:	b	cf18 <_start@@Base+0x1c6c>
    d1b0:	ldr	r3, [sp, #148]	; 0x94
    d1b4:	cmp	r3, #0
    d1b8:	beq	d2e0 <_start@@Base+0x2034>
    d1bc:	mov	r0, r3
    d1c0:	bl	aba0 <gconf_value_type_from_string@plt>
    d1c4:	sub	r3, r0, #5
    d1c8:	mov	r7, r0
    d1cc:	cmp	r3, #2
    d1d0:	movhi	r0, #5
    d1d4:	bls	d30c <_start@@Base+0x2060>
    d1d8:	bl	aa74 <gconf_value_new@plt>
    d1dc:	str	r0, [r8]
    d1e0:	bl	aac8 <gconf_schema_new@plt>
    d1e4:	mov	r1, r5
    d1e8:	mov	r6, r0
    d1ec:	bl	aad4 <gconf_schema_set_type@plt>
    d1f0:	mov	r1, r7
    d1f4:	mov	r0, r6
    d1f8:	bl	aedc <gconf_schema_set_list_type@plt>
    d1fc:	b	d014 <_start@@Base+0x1d68>
    d200:	movw	r0, #5492	; 0x1574
    d204:	movw	r1, #6068	; 0x17b4
    d208:	movt	r0, #1
    d20c:	movt	r1, #1
    d210:	bl	afc0 <g_dgettext@plt>
    d214:	str	r6, [sp]
    d218:	mov	r3, r0
    d21c:	str	fp, [sp, #4]
    d220:	mov	r1, sl
    d224:	ldr	r0, [sp, #116]	; 0x74
    d228:	mov	r2, #6
    d22c:	bl	c9c4 <_start@@Base+0x1718>
    d230:	b	cf18 <_start@@Base+0x1c6c>
    d234:	movw	r0, #5492	; 0x1574
    d238:	movw	r1, #6068	; 0x17b4
    d23c:	movt	r0, #1
    d240:	movt	r1, #1
    d244:	bl	afc0 <g_dgettext@plt>
    d248:	str	r7, [sp]
    d24c:	mov	r3, r0
    d250:	b	d21c <_start@@Base+0x1f70>
    d254:	movw	r0, #5492	; 0x1574
    d258:	movw	r1, #6364	; 0x18dc
    d25c:	movt	r0, #1
    d260:	movt	r1, #1
    d264:	bl	afc0 <g_dgettext@plt>
    d268:	str	r5, [sp]
    d26c:	mov	r1, sl
    d270:	mov	r2, #6
    d274:	mov	r3, r0
    d278:	ldr	r0, [sp, #116]	; 0x74
    d27c:	bl	c9c4 <_start@@Base+0x1718>
    d280:	b	cf18 <_start@@Base+0x1c6c>
    d284:	mov	r7, #1
    d288:	b	cefc <_start@@Base+0x1c50>
    d28c:	movw	r0, #5492	; 0x1574
    d290:	movw	r1, #6068	; 0x17b4
    d294:	movt	r0, #1
    d298:	movt	r1, #1
    d29c:	bl	afc0 <g_dgettext@plt>
    d2a0:	str	r9, [sp]
    d2a4:	mov	r3, r0
    d2a8:	b	d21c <_start@@Base+0x1f70>
    d2ac:	movw	r0, #5492	; 0x1574
    d2b0:	movw	r1, #6132	; 0x17f4
    d2b4:	movt	r0, #1
    d2b8:	movt	r1, #1
    d2bc:	bl	afc0 <g_dgettext@plt>
    d2c0:	ldr	ip, [sp, #132]	; 0x84
    d2c4:	mov	r3, r0
    d2c8:	b	d194 <_start@@Base+0x1ee8>
    d2cc:	movw	r0, #5492	; 0x1574
    d2d0:	movw	r1, #6316	; 0x18ac
    d2d4:	movt	r0, #1
    d2d8:	movt	r1, #1
    d2dc:	b	d264 <_start@@Base+0x1fb8>
    d2e0:	mov	r0, #5
    d2e4:	mov	r7, r3
    d2e8:	b	d1d8 <_start@@Base+0x1f2c>
    d2ec:	movw	r0, #5492	; 0x1574
    d2f0:	movw	r1, #6172	; 0x181c
    d2f4:	movt	r0, #1
    d2f8:	movt	r1, #1
    d2fc:	bl	afc0 <g_dgettext@plt>
    d300:	ldr	ip, [sp, #136]	; 0x88
    d304:	mov	r3, r0
    d308:	b	d194 <_start@@Base+0x1ee8>
    d30c:	movw	r0, #5492	; 0x1574
    d310:	movw	r1, #6204	; 0x183c
    d314:	movt	r0, #1
    d318:	movt	r1, #1
    d31c:	bl	afc0 <g_dgettext@plt>
    d320:	ldr	ip, [sp, #148]	; 0x94
    d324:	str	fp, [sp, #4]
    d328:	mov	r1, sl
    d32c:	mov	r2, r5
    d330:	str	ip, [sp]
    d334:	mov	r3, r0
    d338:	ldr	r0, [sp, #116]	; 0x74
    d33c:	bl	c9c4 <_start@@Base+0x1718>
    d340:	b	cf18 <_start@@Base+0x1c6c>
    d344:	movw	r0, #5492	; 0x1574
    d348:	movw	r1, #6280	; 0x1888
    d34c:	movt	r0, #1
    d350:	movt	r1, #1
    d354:	b	d264 <_start@@Base+0x1fb8>
    d358:	movw	r0, #5492	; 0x1574
    d35c:	movw	r1, #6236	; 0x185c
    d360:	movt	r0, #1
    d364:	movt	r1, #1
    d368:	b	d264 <_start@@Base+0x1fb8>
    d36c:	bl	ae58 <__stack_chk_fail@plt>
    d370:	vldr	d8, [pc]	; d378 <_start@@Base+0x20cc>
    d374:	b	d168 <_start@@Base+0x1ebc>
	...
    d380:	push	{r4, r5, r6, r7, r8, lr}
    d384:	add	r6, r1, r2
    d388:	sub	sp, sp, #24
    d38c:	cmp	r1, r6
    d390:	mov	r7, r0
    d394:	ldr	r8, [sp, #48]	; 0x30
    d398:	beq	d40c <_start@@Base+0x2160>
    d39c:	mov	r4, r1
    d3a0:	ldrb	ip, [r4], #1
    d3a4:	sub	r5, ip, #9
    d3a8:	cmp	ip, #32
    d3ac:	cmpne	r5, #1
    d3b0:	bls	d404 <_start@@Base+0x2158>
    d3b4:	cmp	ip, #13
    d3b8:	beq	d404 <_start@@Base+0x2158>
    d3bc:	ldr	ip, [r3]
    d3c0:	cmp	ip, #0
    d3c4:	ldrne	r0, [ip]
    d3c8:	beq	d624 <_start@@Base+0x2378>
    d3cc:	cmp	r0, #10
    d3d0:	ldrls	pc, [pc, r0, lsl #2]
    d3d4:	b	d40c <_start@@Base+0x2160>
    d3d8:	andeq	sp, r0, r0, asr r4
    d3dc:	andeq	sp, r0, r4, ror r4
    d3e0:	andeq	sp, r0, r4, lsr #9
    d3e4:	ldrdeq	sp, [r0], -r4
    d3e8:	andeq	sp, r0, r4, lsl #10
    d3ec:	andeq	sp, r0, r8, asr #10
    d3f0:	andeq	sp, r0, r4, ror #10
    d3f4:	muleq	r0, r4, r5
    d3f8:	andeq	sp, r0, r4, asr #11
    d3fc:	strdeq	sp, [r0], -r4
    d400:	andeq	sp, r0, r4, lsl r4
    d404:	cmp	r6, r4
    d408:	bne	d3a0 <_start@@Base+0x20f4>
    d40c:	add	sp, sp, #24
    d410:	pop	{r4, r5, r6, r7, r8, pc}
    d414:	movw	r0, #5492	; 0x1574
    d418:	movw	r1, #6412	; 0x190c
    d41c:	movt	r0, #1
    d420:	movt	r1, #1
    d424:	bl	afc0 <g_dgettext@plt>
    d428:	movw	ip, #5120	; 0x1400
    d42c:	movt	ip, #1
    d430:	mov	r1, r7
    d434:	mov	r2, #6
    d438:	mov	r3, r0
    d43c:	mov	r0, r8
    d440:	str	ip, [sp, #48]	; 0x30
    d444:	add	sp, sp, #24
    d448:	pop	{r4, r5, r6, r7, r8, lr}
    d44c:	b	c9c4 <_start@@Base+0x1718>
    d450:	mov	r3, #0
    d454:	movw	r0, #4852	; 0x12f4
    d458:	str	r3, [sp]
    d45c:	movw	r1, #4892	; 0x131c
    d460:	movt	r0, #1
    d464:	movw	r2, #3563	; 0xdeb
    d468:	movt	r1, #1
    d46c:	ldr	r3, [pc, #496]	; d664 <_start@@Base+0x23b8>
    d470:	bl	ac0c <g_assertion_message_expr@plt>
    d474:	movw	r0, #5492	; 0x1574
    d478:	movw	r1, #6412	; 0x190c
    d47c:	movt	r0, #1
    d480:	movt	r1, #1
    d484:	bl	afc0 <g_dgettext@plt>
    d488:	movw	ip, #6452	; 0x1934
    d48c:	mov	r1, r7
    d490:	mov	r2, #6
    d494:	movt	ip, #1
    d498:	mov	r3, r0
    d49c:	mov	r0, r8
    d4a0:	b	d440 <_start@@Base+0x2194>
    d4a4:	movw	r0, #5492	; 0x1574
    d4a8:	movw	r1, #6412	; 0x190c
    d4ac:	movt	r0, #1
    d4b0:	movt	r1, #1
    d4b4:	bl	afc0 <g_dgettext@plt>
    d4b8:	movw	ip, #6460	; 0x193c
    d4bc:	mov	r1, r7
    d4c0:	mov	r2, #6
    d4c4:	movt	ip, #1
    d4c8:	mov	r3, r0
    d4cc:	mov	r0, r8
    d4d0:	b	d440 <_start@@Base+0x2194>
    d4d4:	movw	r0, #5492	; 0x1574
    d4d8:	movw	r1, #6412	; 0x190c
    d4dc:	movt	r0, #1
    d4e0:	movt	r1, #1
    d4e4:	bl	afc0 <g_dgettext@plt>
    d4e8:	movw	ip, #5376	; 0x1500
    d4ec:	mov	r1, r7
    d4f0:	mov	r2, #6
    d4f4:	movt	ip, #1
    d4f8:	mov	r3, r0
    d4fc:	mov	r0, r8
    d500:	b	d440 <_start@@Base+0x2194>
    d504:	ldr	r3, [r3, #16]
    d508:	cmp	r3, #0
    d50c:	ldrne	r4, [r3]
    d510:	moveq	r4, r3
    d514:	ldr	r3, [r4]
    d518:	cmp	r3, #1
    d51c:	beq	d644 <_start@@Base+0x2398>
    d520:	movw	r3, #6480	; 0x1950
    d524:	movw	r0, #4852	; 0x12f4
    d528:	movt	r3, #1
    d52c:	movw	r1, #4892	; 0x131c
    d530:	str	r3, [sp]
    d534:	movt	r0, #1
    d538:	movw	r2, #3570	; 0xdf2
    d53c:	movt	r1, #1
    d540:	ldr	r3, [pc, #284]	; d664 <_start@@Base+0x23b8>
    d544:	bl	ac0c <g_assertion_message_expr@plt>
    d548:	ldr	r3, [r3, #24]
    d54c:	mov	r0, r1
    d550:	mov	r1, r2
    d554:	ldr	r4, [r3]
    d558:	bl	ac00 <g_strndup@plt>
    d55c:	str	r0, [r4, #8]
    d560:	b	d40c <_start@@Base+0x2160>
    d564:	movw	r0, #5492	; 0x1574
    d568:	movw	r1, #6412	; 0x190c
    d56c:	movt	r0, #1
    d570:	movt	r1, #1
    d574:	bl	afc0 <g_dgettext@plt>
    d578:	movw	ip, #6464	; 0x1940
    d57c:	mov	r1, r7
    d580:	mov	r2, #6
    d584:	movt	ip, #1
    d588:	mov	r3, r0
    d58c:	mov	r0, r8
    d590:	b	d440 <_start@@Base+0x2194>
    d594:	movw	r0, #5492	; 0x1574
    d598:	movw	r1, #6412	; 0x190c
    d59c:	movt	r0, #1
    d5a0:	movt	r1, #1
    d5a4:	bl	afc0 <g_dgettext@plt>
    d5a8:	movw	ip, #5212	; 0x145c
    d5ac:	mov	r1, r7
    d5b0:	mov	r2, #6
    d5b4:	movt	ip, #1
    d5b8:	mov	r3, r0
    d5bc:	mov	r0, r8
    d5c0:	b	d440 <_start@@Base+0x2194>
    d5c4:	movw	r0, #5492	; 0x1574
    d5c8:	movw	r1, #6412	; 0x190c
    d5cc:	movt	r0, #1
    d5d0:	movt	r1, #1
    d5d4:	bl	afc0 <g_dgettext@plt>
    d5d8:	movw	ip, #5132	; 0x140c
    d5dc:	mov	r1, r7
    d5e0:	mov	r2, #6
    d5e4:	movt	ip, #1
    d5e8:	mov	r3, r0
    d5ec:	mov	r0, r8
    d5f0:	b	d440 <_start@@Base+0x2194>
    d5f4:	movw	r0, #5492	; 0x1574
    d5f8:	movw	r1, #6412	; 0x190c
    d5fc:	movt	r0, #1
    d600:	movt	r1, #1
    d604:	bl	afc0 <g_dgettext@plt>
    d608:	movw	ip, #5144	; 0x1418
    d60c:	mov	r1, r7
    d610:	mov	r2, #6
    d614:	movt	ip, #1
    d618:	mov	r3, r0
    d61c:	mov	r0, r8
    d620:	b	d440 <_start@@Base+0x2194>
    d624:	str	r1, [sp, #20]
    d628:	str	r2, [sp, #16]
    d62c:	str	r3, [sp, #12]
    d630:	bl	b060 <fputs@plt+0x28>
    d634:	ldr	r1, [sp, #20]
    d638:	ldr	r2, [sp, #16]
    d63c:	ldr	r3, [sp, #12]
    d640:	b	d3cc <_start@@Base+0x2120>
    d644:	mov	r0, r1
    d648:	mov	r1, r2
    d64c:	bl	ac00 <g_strndup@plt>
    d650:	mov	r1, r0
    d654:	mov	r0, r4
    d658:	add	sp, sp, #24
    d65c:	pop	{r4, r5, r6, r7, r8, lr}
    d660:	b	af0c <gconf_value_set_string_nocopy@plt>
    d664:	andeq	r1, r1, r8, lsr #1
    d668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d66c:	sub	sp, sp, #20
    d670:	ldr	r6, [r0, #4]
    d674:	mov	r5, r0
    d678:	mov	r9, r1
    d67c:	str	r2, [sp, #12]
    d680:	cmp	r6, #0
    d684:	mov	r8, r3
    d688:	beq	d730 <_start@@Base+0x2484>
    d68c:	mov	r4, r0
    d690:	mov	r6, #0
    d694:	mov	r0, r6
    d698:	ldr	r1, [r4, #12]
    d69c:	bl	acf0 <g_slist_prepend@plt>
    d6a0:	ldr	r4, [r4, #4]
    d6a4:	ldr	fp, [r4, #4]
    d6a8:	cmp	fp, #0
    d6ac:	mov	r6, r0
    d6b0:	bne	d694 <_start@@Base+0x23e8>
    d6b4:	ldr	r3, [r5]
    d6b8:	ldr	r0, [r3]
    d6bc:	bl	abc4 <g_string_new@plt>
    d6c0:	cmp	r6, #0
    d6c4:	mov	r4, r0
    d6c8:	beq	d740 <_start@@Base+0x2494>
    d6cc:	mov	r5, r6
    d6d0:	mov	r7, #47	; 0x2f
    d6d4:	b	d704 <_start@@Base+0x2458>
    d6d8:	ldr	r1, [r4]
    d6dc:	str	r2, [r4, #4]
    d6e0:	strb	r7, [r1, r3]
    d6e4:	ldm	r4, {r2, r3}
    d6e8:	strb	fp, [r2, r3]
    d6ec:	mov	r1, sl
    d6f0:	mov	r0, r4
    d6f4:	bl	afcc <g_string_append@plt>
    d6f8:	ldr	r5, [r5, #4]
    d6fc:	cmp	r5, #0
    d700:	beq	d740 <_start@@Base+0x2494>
    d704:	ldr	r3, [r4, #4]
    d708:	ldr	r1, [r4, #8]
    d70c:	add	r2, r3, #1
    d710:	ldr	sl, [r5]
    d714:	cmp	r2, r1
    d718:	bcc	d6d8 <_start@@Base+0x242c>
    d71c:	mov	r0, r4
    d720:	mvn	r1, #0
    d724:	mov	r2, #47	; 0x2f
    d728:	bl	aeb8 <g_string_insert_c@plt>
    d72c:	b	d6ec <_start@@Base+0x2440>
    d730:	ldr	r3, [r0]
    d734:	ldr	r0, [r3]
    d738:	bl	abc4 <g_string_new@plt>
    d73c:	mov	r4, r0
    d740:	mov	r0, r6
    d744:	bl	aa2c <g_slist_free@plt>
    d748:	cmp	r9, #0
    d74c:	beq	d778 <_start@@Base+0x24cc>
    d750:	cmp	r8, #0
    d754:	beq	d7b4 <_start@@Base+0x2508>
    d758:	ldr	r3, [sp, #12]
    d75c:	cmp	r3, #0
    d760:	beq	d78c <_start@@Base+0x24e0>
    d764:	movw	r1, #6568	; 0x19a8
    d768:	mov	r2, r8
    d76c:	mov	r0, r4
    d770:	movt	r1, #1
    d774:	bl	afd8 <g_string_append_printf@plt>
    d778:	mov	r0, r4
    d77c:	mov	r1, #0
    d780:	add	sp, sp, #20
    d784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d788:	b	ac60 <g_string_free@plt>
    d78c:	movw	r3, #6548	; 0x1994
    d790:	movw	r0, #4852	; 0x12f4
    d794:	movt	r3, #1
    d798:	movw	r1, #4892	; 0x131c
    d79c:	str	r3, [sp]
    d7a0:	movt	r0, #1
    d7a4:	movw	r2, #1355	; 0x54b
    d7a8:	movt	r1, #1
    d7ac:	ldr	r3, [pc, #40]	; d7dc <_start@@Base+0x2530>
    d7b0:	bl	ac0c <g_assertion_message_expr@plt>
    d7b4:	ldr	r2, [sp, #12]
    d7b8:	movw	r3, #6516	; 0x1974
    d7bc:	movt	r3, #1
    d7c0:	movw	r1, #6536	; 0x1988
    d7c4:	cmp	r2, #0
    d7c8:	movt	r1, #1
    d7cc:	mov	r0, r4
    d7d0:	movne	r1, r3
    d7d4:	bl	afcc <g_string_append@plt>
    d7d8:	b	d778 <_start@@Base+0x24cc>
    d7dc:	strheq	r1, [r1], -r8
    d7e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d7e4:	movw	sl, #45672	; 0xb268
    d7e8:	movt	sl, #1
    d7ec:	sub	sp, sp, #4160	; 0x1040
    d7f0:	sub	sp, sp, #4
    d7f4:	subs	r7, r1, #0
    d7f8:	ldr	r1, [sl]
    d7fc:	mov	r6, r2
    d800:	add	r2, sp, #8192	; 0x2000
    d804:	mov	r4, r0
    d808:	str	r3, [sp, #12]
    d80c:	str	r1, [r2, #-4036]	; 0xfffff03c
    d810:	bne	d844 <_start@@Base+0x2598>
    d814:	cmp	r6, #0
    d818:	beq	d844 <_start@@Base+0x2598>
    d81c:	movw	r3, #6648	; 0x19f8
    d820:	movw	r0, #4852	; 0x12f4
    d824:	movt	r3, #1
    d828:	movw	r1, #4892	; 0x131c
    d82c:	str	r3, [sp]
    d830:	movt	r0, #1
    d834:	movw	r2, #3625	; 0xe29
    d838:	movt	r1, #1
    d83c:	ldr	r3, [pc, #748]	; db30 <_start@@Base+0x2884>
    d840:	bl	ac0c <g_assertion_message_expr@plt>
    d844:	mov	r2, r7
    d848:	mov	r3, r6
    d84c:	mov	r0, r4
    d850:	mov	r1, #1
    d854:	bl	d668 <_start@@Base+0x23bc>
    d858:	movw	r9, #61396	; 0xefd4
    d85c:	movt	r9, #65535	; 0xffff
    d860:	mov	fp, r0
    d864:	mov	r0, #0
    d868:	mov	r1, r0
    d86c:	mov	r5, r0
    d870:	bl	acf0 <g_slist_prepend@plt>
    d874:	add	ip, sp, #4160	; 0x1040
    d878:	movw	r3, #61400	; 0xefd8
    d87c:	movt	r3, #65535	; 0xffff
    d880:	str	r4, [sp, #28]
    d884:	str	r5, [sp, #32]
    d888:	str	r5, [sp, #36]	; 0x24
    d88c:	str	r5, [sp, #40]	; 0x28
    d890:	str	r5, [sp, #44]	; 0x2c
    d894:	str	r5, [sp, #48]	; 0x30
    d898:	str	r0, [ip, r3]
    d89c:	mov	r0, r6
    d8a0:	bl	aae0 <g_strdup@plt>
    d8a4:	subs	r7, r7, r5
    d8a8:	ldrb	r3, [sp, #56]	; 0x38
    d8ac:	mov	r1, r4
    d8b0:	movne	r7, #1
    d8b4:	bfi	r3, r7, #0, #1
    d8b8:	subs	ip, r0, r5
    d8bc:	mov	r2, r0
    d8c0:	ldr	r0, [sp, #32]
    d8c4:	movne	ip, #1
    d8c8:	str	r2, [sp, #52]	; 0x34
    d8cc:	bfi	r3, ip, #1, #1
    d8d0:	strb	r3, [sp, #56]	; 0x38
    d8d4:	bl	acf0 <g_slist_prepend@plt>
    d8d8:	add	r2, sp, #4160	; 0x1040
    d8dc:	movw	r1, #6592	; 0x19c0
    d8e0:	movt	r1, #1
    d8e4:	str	r5, [r2, r9]
    d8e8:	str	r0, [sp, #32]
    d8ec:	mov	r0, fp
    d8f0:	bl	ab7c <fopen@plt>
    d8f4:	subs	r4, r0, #0
    d8f8:	beq	dac8 <_start@@Base+0x281c>
    d8fc:	mov	r1, r5
    d900:	mov	r3, r5
    d904:	movw	r0, #45640	; 0xb248
    d908:	add	r2, sp, #24
    d90c:	movt	r0, #1
    d910:	add	r5, sp, #60	; 0x3c
    d914:	bl	aa8c <g_markup_parse_context_new@plt>
    d918:	add	r8, sp, #20
    d91c:	mov	r7, r0
    d920:	b	d970 <_start@@Base+0x26c4>
    d924:	mov	r2, #4096	; 0x1000
    d928:	mov	r0, r5
    d92c:	mov	r1, #1
    d930:	mov	r3, r4
    d934:	bl	af84 <fread@plt>
    d938:	subs	r2, r0, #0
    d93c:	beq	d960 <_start@@Base+0x26b4>
    d940:	add	ip, sp, #4160	; 0x1040
    d944:	mov	r0, r7
    d948:	mov	r1, r5
    d94c:	mov	r3, r8
    d950:	str	r6, [ip, r9]
    d954:	bl	ac18 <g_markup_parse_context_parse@plt>
    d958:	cmp	r0, #0
    d95c:	beq	d9a0 <_start@@Base+0x26f4>
    d960:	mov	r0, r4
    d964:	bl	af9c <ferror@plt>
    d968:	cmp	r0, #0
    d96c:	bne	da64 <_start@@Base+0x27b8>
    d970:	mov	r0, r4
    d974:	bl	ad74 <feof@plt>
    d978:	subs	r6, r0, #0
    d97c:	beq	d924 <_start@@Base+0x2678>
    d980:	movw	r3, #61396	; 0xefd4
    d984:	add	ip, sp, #4160	; 0x1040
    d988:	movt	r3, #65535	; 0xffff
    d98c:	add	r1, sp, #20
    d990:	mov	r0, r7
    d994:	mov	r2, #0
    d998:	str	r2, [ip, r3]
    d99c:	bl	abb8 <g_markup_parse_context_end_parse@plt>
    d9a0:	cmp	r7, #0
    d9a4:	beq	d9b0 <_start@@Base+0x2704>
    d9a8:	mov	r0, r7
    d9ac:	bl	ab94 <g_markup_parse_context_free@plt>
    d9b0:	mov	r0, fp
    d9b4:	bl	a9b4 <g_free@plt>
    d9b8:	mov	r0, r4
    d9bc:	bl	ab10 <fclose@plt>
    d9c0:	ldr	r0, [sp, #52]	; 0x34
    d9c4:	movw	r4, #61400	; 0xefd8
    d9c8:	bl	a9b4 <g_free@plt>
    d9cc:	ldr	r0, [sp, #32]
    d9d0:	bl	aa2c <g_slist_free@plt>
    d9d4:	mov	r2, #0
    d9d8:	ldr	r0, [sp, #48]	; 0x30
    d9dc:	movw	r1, #46312	; 0xb4e8
    d9e0:	movt	r1, #0
    d9e4:	movt	r4, #65535	; 0xffff
    d9e8:	bl	adf8 <g_slist_foreach@plt>
    d9ec:	ldr	r0, [sp, #48]	; 0x30
    d9f0:	bl	aa2c <g_slist_free@plt>
    d9f4:	mov	r2, #0
    d9f8:	ldr	r0, [sp, #44]	; 0x2c
    d9fc:	movw	r1, #44152	; 0xac78
    da00:	movt	r1, #0
    da04:	bl	adf8 <g_slist_foreach@plt>
    da08:	ldr	r0, [sp, #44]	; 0x2c
    da0c:	bl	aa2c <g_slist_free@plt>
    da10:	ldr	r0, [sp, #40]	; 0x28
    da14:	bl	aa2c <g_slist_free@plt>
    da18:	add	r2, sp, #4160	; 0x1040
    da1c:	ldr	r0, [r2, r4]
    da20:	bl	aa2c <g_slist_free@plt>
    da24:	movw	r3, #61396	; 0xefd4
    da28:	add	ip, sp, #4160	; 0x1040
    da2c:	movt	r3, #65535	; 0xffff
    da30:	ldr	r1, [ip, r3]
    da34:	cmp	r1, #0
    da38:	beq	da44 <_start@@Base+0x2798>
    da3c:	ldr	r0, [sp, #12]
    da40:	bl	ad08 <g_propagate_error@plt>
    da44:	add	r3, sp, #8192	; 0x2000
    da48:	ldr	r2, [r3, #-4036]	; 0xfffff03c
    da4c:	ldr	r3, [sl]
    da50:	cmp	r2, r3
    da54:	bne	db2c <_start@@Base+0x2880>
    da58:	add	sp, sp, #4160	; 0x1040
    da5c:	add	sp, sp, #4
    da60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    da64:	movw	r0, #5492	; 0x1574
    da68:	movw	r1, #6624	; 0x19e0
    da6c:	movt	r0, #1
    da70:	movt	r1, #1
    da74:	bl	afc0 <g_dgettext@plt>
    da78:	mov	r5, r0
    da7c:	bl	b020 <__errno_location@plt>
    da80:	ldr	r0, [r0]
    da84:	bl	af00 <g_strerror@plt>
    da88:	mov	r1, fp
    da8c:	mov	r2, r0
    da90:	mov	r0, r5
    da94:	bl	ac48 <g_strdup_printf@plt>
    da98:	mov	r5, r0
    da9c:	bl	aea0 <gconf_error_quark@plt>
    daa0:	mov	r2, r5
    daa4:	mov	r1, #1
    daa8:	bl	acfc <g_error_new_literal@plt>
    daac:	add	r2, sp, #4160	; 0x1040
    dab0:	movw	r3, #61396	; 0xefd4
    dab4:	movt	r3, #65535	; 0xffff
    dab8:	str	r0, [r2, r3]
    dabc:	mov	r0, r5
    dac0:	bl	a9b4 <g_free@plt>
    dac4:	b	d9a0 <_start@@Base+0x26f4>
    dac8:	movw	r0, #5492	; 0x1574
    dacc:	movw	r1, #6596	; 0x19c4
    dad0:	movt	r0, #1
    dad4:	movt	r1, #1
    dad8:	bl	afc0 <g_dgettext@plt>
    dadc:	mov	r4, r0
    dae0:	bl	b020 <__errno_location@plt>
    dae4:	ldr	r0, [r0]
    dae8:	bl	af00 <g_strerror@plt>
    daec:	mov	r1, fp
    daf0:	mov	r2, r0
    daf4:	mov	r0, r4
    daf8:	bl	ac48 <g_strdup_printf@plt>
    dafc:	mov	r4, r0
    db00:	bl	aea0 <gconf_error_quark@plt>
    db04:	mov	r2, r4
    db08:	mov	r1, #1
    db0c:	bl	acfc <g_error_new_literal@plt>
    db10:	add	r3, sp, #4160	; 0x1040
    db14:	str	r0, [r3, r9]
    db18:	mov	r0, r4
    db1c:	bl	a9b4 <g_free@plt>
    db20:	mov	r0, fp
    db24:	bl	a9b4 <g_free@plt>
    db28:	b	d9c0 <_start@@Base+0x2714>
    db2c:	bl	ae58 <__stack_chk_fail@plt>
    db30:	ldrdeq	r1, [r1], -r0
    db34:	push	{r4, r5, r6, r7, lr}
    db38:	movw	r4, #45672	; 0xb268
    db3c:	movt	r4, #1
    db40:	sub	sp, sp, #12
    db44:	add	r3, sp, #8
    db48:	mov	r5, r1
    db4c:	ldr	ip, [r4]
    db50:	mov	r1, #0
    db54:	mov	r2, r5
    db58:	str	r1, [r3, #-8]!
    db5c:	mov	r3, sp
    db60:	mov	r1, #1
    db64:	str	ip, [sp, #4]
    db68:	mov	r6, r0
    db6c:	bl	d7e0 <_start@@Base+0x2534>
    db70:	ldr	r3, [sp]
    db74:	cmp	r3, #0
    db78:	beq	dbd0 <_start@@Base+0x2924>
    db7c:	mov	r1, #1
    db80:	mov	r3, r5
    db84:	mov	r2, r1
    db88:	mov	r0, r6
    db8c:	bl	d668 <_start@@Base+0x23bc>
    db90:	movw	r1, #6664	; 0x1a08
    db94:	movt	r1, #1
    db98:	mov	r7, r0
    db9c:	movw	r0, #5492	; 0x1574
    dba0:	movt	r0, #1
    dba4:	bl	afc0 <g_dgettext@plt>
    dba8:	ldr	r3, [sp]
    dbac:	mov	r2, r7
    dbb0:	ldr	r3, [r3, #8]
    dbb4:	mov	r1, r0
    dbb8:	mov	r0, #3
    dbbc:	bl	ab88 <gconf_log@plt>
    dbc0:	mov	r0, r7
    dbc4:	bl	a9b4 <g_free@plt>
    dbc8:	ldr	r0, [sp]
    dbcc:	bl	af3c <g_error_free@plt>
    dbd0:	mov	r0, r5
    dbd4:	ldr	r6, [r6, #24]
    dbd8:	bl	aae0 <g_strdup@plt>
    dbdc:	mov	r2, #1
    dbe0:	mov	r1, r0
    dbe4:	mov	r0, r6
    dbe8:	bl	ae34 <g_hash_table_replace@plt>
    dbec:	ldr	r2, [sp, #4]
    dbf0:	ldr	r3, [r4]
    dbf4:	cmp	r2, r3
    dbf8:	bne	dc04 <_start@@Base+0x2958>
    dbfc:	add	sp, sp, #12
    dc00:	pop	{r4, r5, r6, r7, pc}
    dc04:	bl	ae58 <__stack_chk_fail@plt>
    dc08:	cmp	r1, #0
    dc0c:	mov	r1, r0
    dc10:	bxne	lr
    dc14:	mov	r0, r2
    dc18:	b	db34 <_start@@Base+0x2888>
    dc1c:	push	{r4, r5, r6, r7, lr}
    dc20:	movw	r4, #45672	; 0xb268
    dc24:	ldr	r5, [r0, #8]
    dc28:	movt	r4, #1
    dc2c:	sub	sp, sp, #20
    dc30:	mov	r6, r1
    dc34:	ldr	r2, [r4]
    dc38:	ldrb	r3, [r5, #28]
    dc3c:	str	r2, [sp, #12]
    dc40:	lsrs	r0, r3, #7
    dc44:	bne	dc6c <_start@@Base+0x29c0>
    dc48:	cmp	r1, #0
    dc4c:	beq	dccc <_start@@Base+0x2a20>
    dc50:	add	r3, sp, #16
    dc54:	mov	r2, r0
    dc58:	str	r0, [r3, #-12]!
    dc5c:	ldr	r0, [r5, #24]
    dc60:	bl	aabc <g_hash_table_lookup_extended@plt>
    dc64:	cmp	r0, #0
    dc68:	bne	dc84 <_start@@Base+0x29d8>
    dc6c:	ldr	r2, [sp, #12]
    dc70:	ldr	r3, [r4]
    dc74:	cmp	r2, r3
    dc78:	bne	dcf0 <_start@@Base+0x2a44>
    dc7c:	add	sp, sp, #20
    dc80:	pop	{r4, r5, r6, r7, pc}
    dc84:	ldr	r7, [sp, #4]
    dc88:	cmp	r7, #0
    dc8c:	bne	dc6c <_start@@Base+0x29c0>
    dc90:	mov	r1, r6
    dc94:	mov	r0, r5
    dc98:	bl	db34 <_start@@Base+0x2888>
    dc9c:	add	r2, sp, #16
    dca0:	movw	r1, #46048	; 0xb3e0
    dca4:	ldr	r0, [r5, #24]
    dca8:	str	r7, [r2, #-8]!
    dcac:	movt	r1, #0
    dcb0:	bl	ab70 <g_hash_table_find@plt>
    dcb4:	ldr	r3, [sp, #8]
    dcb8:	cmp	r3, #0
    dcbc:	ldrbeq	r3, [r5, #28]
    dcc0:	orreq	r3, r3, #128	; 0x80
    dcc4:	strbeq	r3, [r5, #28]
    dcc8:	b	dc6c <_start@@Base+0x29c0>
    dccc:	movw	r1, #56328	; 0xdc08
    dcd0:	ldr	r0, [r5, #24]
    dcd4:	movt	r1, #0
    dcd8:	mov	r2, r5
    dcdc:	bl	acd8 <g_hash_table_foreach@plt>
    dce0:	ldrb	r3, [r5, #28]
    dce4:	orr	r3, r3, #128	; 0x80
    dce8:	strb	r3, [r5, #28]
    dcec:	b	dc6c <_start@@Base+0x29c0>
    dcf0:	bl	ae58 <__stack_chk_fail@plt>
    dcf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dcf8:	movw	r8, #45672	; 0xb268
    dcfc:	movt	r8, #1
    dd00:	sub	sp, sp, #20
    dd04:	mov	r1, #1
    dd08:	mov	r4, #0
    dd0c:	ldr	ip, [r8]
    dd10:	mov	r2, r1
    dd14:	mov	r3, r4
    dd18:	str	r4, [sp, #8]
    dd1c:	mov	r7, r0
    dd20:	str	ip, [sp, #12]
    dd24:	bl	d668 <_start@@Base+0x23bc>
    dd28:	mov	r1, #16
    dd2c:	mov	r9, r0
    dd30:	bl	b014 <g_file_test@plt>
    dd34:	subs	r5, r0, #0
    dd38:	beq	decc <_start@@Base+0x2c20>
    dd3c:	ldrb	r3, [r7, #28]
    dd40:	mov	r0, r7
    dd44:	orr	r3, r3, #69	; 0x45
    dd48:	strb	r3, [r7, #28]
    dd4c:	bl	b434 <_start@@Base+0x188>
    dd50:	mov	r1, r4
    dd54:	mov	r2, r4
    dd58:	mov	r3, r4
    dd5c:	mov	r0, r7
    dd60:	bl	d668 <_start@@Base+0x23bc>
    dd64:	mov	r1, r4
    dd68:	mov	r2, r4
    dd6c:	mov	sl, r0
    dd70:	bl	affc <g_dir_open@plt>
    dd74:	subs	r6, r0, #0
    dd78:	beq	df04 <_start@@Base+0x2c58>
    dd7c:	ldr	r0, [r7, #24]
    dd80:	cmp	r0, #0
    dd84:	beq	dedc <_start@@Base+0x2c30>
    dd88:	bl	ac84 <g_hash_table_size@plt>
    dd8c:	cmp	r0, #0
    dd90:	beq	ddd8 <_start@@Base+0x2b2c>
    dd94:	movw	r3, #6784	; 0x1a80
    dd98:	movw	r0, #4852	; 0x12f4
    dd9c:	movt	r3, #1
    dda0:	movw	r1, #4892	; 0x131c
    dda4:	str	r3, [sp]
    dda8:	movt	r0, #1
    ddac:	mov	r2, #488	; 0x1e8
    ddb0:	movt	r1, #1
    ddb4:	ldr	r3, [pc, #380]	; df38 <_start@@Base+0x2c8c>
    ddb8:	bl	ac0c <g_assertion_message_expr@plt>
    ddbc:	sub	r1, r4, #16
    ddc0:	add	r0, r5, #12
    ddc4:	bl	ac00 <g_strndup@plt>
    ddc8:	mov	r2, fp
    ddcc:	mov	r1, r0
    ddd0:	ldr	r0, [r7, #24]
    ddd4:	bl	ae34 <g_hash_table_replace@plt>
    ddd8:	mov	r0, r6
    dddc:	bl	aa68 <g_dir_read_name@plt>
    dde0:	subs	r5, r0, #0
    dde4:	beq	de40 <_start@@Base+0x2b94>
    dde8:	bl	ace4 <strlen@plt>
    ddec:	cmp	r0, #16
    ddf0:	mov	r4, r0
    ddf4:	bls	ddd8 <_start@@Base+0x2b2c>
    ddf8:	movw	r1, #6732	; 0x1a4c
    ddfc:	mov	r0, r5
    de00:	movt	r1, #1
    de04:	mov	r2, #12
    de08:	bl	af90 <strncmp@plt>
    de0c:	cmp	r0, #0
    de10:	bne	ddd8 <_start@@Base+0x2b2c>
    de14:	sub	r0, r4, #4
    de18:	movw	r1, #6528	; 0x1980
    de1c:	add	r0, r5, r0
    de20:	movt	r1, #1
    de24:	bl	afe4 <strcmp@plt>
    de28:	subs	fp, r0, #0
    de2c:	beq	ddbc <_start@@Base+0x2b10>
    de30:	mov	r0, r6
    de34:	bl	aa68 <g_dir_read_name@plt>
    de38:	subs	r5, r0, #0
    de3c:	bne	dde8 <_start@@Base+0x2b3c>
    de40:	ldr	r0, [r7, #24]
    de44:	bl	ac84 <g_hash_table_size@plt>
    de48:	cmp	r0, #0
    de4c:	mov	r0, r6
    de50:	ldrbne	r3, [r7, #28]
    de54:	bfine	r3, r5, #7, #1
    de58:	strbne	r3, [r7, #28]
    de5c:	bl	aa20 <g_dir_close@plt>
    de60:	mov	r0, sl
    de64:	bl	a9b4 <g_free@plt>
    de68:	add	r3, sp, #8
    de6c:	mov	r0, r7
    de70:	mov	r1, #1
    de74:	mov	r2, #0
    de78:	bl	d7e0 <_start@@Base+0x2534>
    de7c:	ldr	r3, [sp, #8]
    de80:	cmp	r3, #0
    de84:	beq	dea8 <_start@@Base+0x2bfc>
    de88:	mov	r0, #7
    de8c:	ldr	r3, [r3, #8]
    de90:	movw	r1, #6664	; 0x1a08
    de94:	mov	r2, r9
    de98:	movt	r1, #1
    de9c:	bl	ab88 <gconf_log@plt>
    dea0:	ldr	r0, [sp, #8]
    dea4:	bl	af3c <g_error_free@plt>
    dea8:	mov	r0, r9
    deac:	bl	a9b4 <g_free@plt>
    deb0:	mov	r0, #1
    deb4:	ldr	r2, [sp, #12]
    deb8:	ldr	r3, [r8]
    debc:	cmp	r2, r3
    dec0:	bne	df34 <_start@@Base+0x2c88>
    dec4:	add	sp, sp, #20
    dec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    decc:	mov	r0, r9
    ded0:	bl	a9b4 <g_free@plt>
    ded4:	mov	r0, r5
    ded8:	b	deb4 <_start@@Base+0x2c08>
    dedc:	movw	r3, #6748	; 0x1a5c
    dee0:	movw	r0, #4852	; 0x12f4
    dee4:	movt	r3, #1
    dee8:	movw	r1, #4892	; 0x131c
    deec:	str	r3, [sp]
    def0:	movt	r0, #1
    def4:	movw	r2, #487	; 0x1e7
    def8:	movt	r1, #1
    defc:	ldr	r3, [pc, #52]	; df38 <_start@@Base+0x2c8c>
    df00:	bl	ac0c <g_assertion_message_expr@plt>
    df04:	bl	b020 <__errno_location@plt>
    df08:	ldr	r0, [r0]
    df0c:	bl	af00 <g_strerror@plt>
    df10:	mov	r2, sl
    df14:	movw	r1, #6696	; 0x1a28
    df18:	movt	r1, #1
    df1c:	mov	r3, r0
    df20:	mov	r0, #7
    df24:	bl	ab88 <gconf_log@plt>
    df28:	mov	r0, sl
    df2c:	bl	a9b4 <g_free@plt>
    df30:	b	de68 <_start@@Base+0x2bbc>
    df34:	bl	ae58 <__stack_chk_fail@plt>
    df38:	ldrdeq	r1, [r1], -ip
    df3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    df40:	movw	r4, #45672	; 0xb268
    df44:	movt	r4, #1
    df48:	ldrb	r3, [r0, #28]
    df4c:	sub	sp, sp, #116	; 0x74
    df50:	mov	r5, r0
    df54:	ldr	r2, [r4]
    df58:	tst	r3, #4
    df5c:	str	r2, [sp, #108]	; 0x6c
    df60:	bne	dfb8 <_start@@Base+0x2d0c>
    df64:	ldr	r2, [r0, #20]
    df68:	orr	r3, r3, #4
    df6c:	strb	r3, [r0, #28]
    df70:	cmp	r2, #0
    df74:	beq	dfd4 <_start@@Base+0x2d28>
    df78:	movw	r3, #6836	; 0x1ab4
    df7c:	movw	r0, #4852	; 0x12f4
    df80:	movt	r3, #1
    df84:	movw	r1, #4892	; 0x131c
    df88:	str	r3, [sp]
    df8c:	movt	r0, #1
    df90:	movw	r2, #642	; 0x282
    df94:	movt	r1, #1
    df98:	ldr	r3, [pc, #424]	; e148 <_start@@Base+0x2e9c>
    df9c:	bl	ac0c <g_assertion_message_expr@plt>
    dfa0:	mov	r0, r6
    dfa4:	bl	aa20 <g_dir_close@plt>
    dfa8:	mov	r0, r9
    dfac:	bl	a9b4 <g_free@plt>
    dfb0:	mov	r0, fp
    dfb4:	bl	a9b4 <g_free@plt>
    dfb8:	mov	r0, #1
    dfbc:	ldr	r2, [sp, #108]	; 0x6c
    dfc0:	ldr	r3, [r4]
    dfc4:	cmp	r2, r3
    dfc8:	bne	e144 <_start@@Base+0x2e98>
    dfcc:	add	sp, sp, #116	; 0x74
    dfd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dfd4:	bl	dcf4 <_start@@Base+0x2a48>
    dfd8:	subs	r6, r0, #0
    dfdc:	bne	dfb8 <_start@@Base+0x2d0c>
    dfe0:	mov	r1, r6
    dfe4:	mov	r2, r6
    dfe8:	mov	r3, r6
    dfec:	mov	r0, r5
    dff0:	bl	d668 <_start@@Base+0x23bc>
    dff4:	mov	r1, r6
    dff8:	mov	r2, r6
    dffc:	mov	fp, r0
    e000:	bl	affc <g_dir_open@plt>
    e004:	subs	r6, r0, #0
    e008:	beq	e110 <_start@@Base+0x2e64>
    e00c:	mov	r0, fp
    e010:	bl	ace4 <strlen@plt>
    e014:	mov	sl, r0
    e018:	movw	r0, #4098	; 0x1002
    e01c:	bl	aeac <g_malloc0@plt>
    e020:	mov	r1, fp
    e024:	movw	r2, #4098	; 0x1002
    e028:	rsb	r7, sl, #4096	; 0x1000
    e02c:	add	r8, r0, sl
    e030:	mov	r9, r0
    e034:	bl	afa8 <__strcpy_chk@plt>
    e038:	ldrb	r3, [r8, #-1]
    e03c:	cmp	r3, #47	; 0x2f
    e040:	addne	r8, r8, #1
    e044:	movne	r3, #47	; 0x2f
    e048:	strbne	r3, [r9, sl]
    e04c:	mov	r0, r6
    e050:	bl	aa68 <g_dir_read_name@plt>
    e054:	subs	sl, r0, #0
    e058:	beq	dfa0 <_start@@Base+0x2cf4>
    e05c:	ldrb	r3, [sl]
    e060:	cmp	r3, #46	; 0x2e
    e064:	beq	e04c <_start@@Base+0x2da0>
    e068:	cmp	r3, #37	; 0x25
    e06c:	beq	e04c <_start@@Base+0x2da0>
    e070:	bl	ace4 <strlen@plt>
    e074:	cmp	r7, r0
    e078:	mov	r2, r0
    e07c:	bls	e04c <_start@@Base+0x2da0>
    e080:	add	r3, r8, r0
    e084:	mov	r1, sl
    e088:	str	r3, [sp, #8]
    e08c:	add	r2, r2, #1
    e090:	rsb	r3, r0, r7
    e094:	mov	r0, r8
    e098:	str	r3, [sp, #12]
    e09c:	bl	ad38 <memcpy@plt>
    e0a0:	ldr	r2, [sp, #12]
    e0a4:	movw	r1, #6536	; 0x1988
    e0a8:	ldr	r0, [sp, #8]
    e0ac:	movt	r1, #1
    e0b0:	bl	ab04 <strncpy@plt>
    e0b4:	mov	r0, #3
    e0b8:	mov	r1, r9
    e0bc:	add	r2, sp, #16
    e0c0:	bl	aa38 <__xstat@plt>
    e0c4:	cmp	r0, #0
    e0c8:	blt	e0e0 <_start@@Base+0x2e34>
    e0cc:	mov	r2, sl
    e0d0:	ldr	r0, [r5]
    e0d4:	mov	r1, r5
    e0d8:	bl	b480 <_start@@Base+0x1d4>
    e0dc:	b	e04c <_start@@Base+0x2da0>
    e0e0:	ldr	r2, [sp, #12]
    e0e4:	movw	r1, #6516	; 0x1974
    e0e8:	ldr	r0, [sp, #8]
    e0ec:	movt	r1, #1
    e0f0:	bl	ab04 <strncpy@plt>
    e0f4:	mov	r0, #3
    e0f8:	mov	r1, r9
    e0fc:	add	r2, sp, #16
    e100:	bl	aa38 <__xstat@plt>
    e104:	cmp	r0, #0
    e108:	bge	e0cc <_start@@Base+0x2e20>
    e10c:	b	e04c <_start@@Base+0x2da0>
    e110:	bl	b020 <__errno_location@plt>
    e114:	ldr	r0, [r0]
    e118:	bl	af00 <g_strerror@plt>
    e11c:	mov	r2, fp
    e120:	movw	r1, #6696	; 0x1a28
    e124:	movt	r1, #1
    e128:	mov	r3, r0
    e12c:	mov	r0, #7
    e130:	bl	ab88 <gconf_log@plt>
    e134:	mov	r0, fp
    e138:	bl	a9b4 <g_free@plt>
    e13c:	mov	r0, r6
    e140:	b	dfbc <_start@@Base+0x2d10>
    e144:	bl	ae58 <__stack_chk_fail@plt>
    e148:	andeq	r1, r1, r4, lsl #2
    e14c:	push	{r4, r5, r6, lr}
    e150:	movw	r4, #45672	; 0xb268
    e154:	movt	r4, #1
    e158:	ldrb	r3, [r0, #28]
    e15c:	sub	sp, sp, #8
    e160:	mov	r5, r0
    e164:	ldr	r2, [r4]
    e168:	tst	r3, #1
    e16c:	str	r2, [sp, #4]
    e170:	beq	e190 <_start@@Base+0x2ee4>
    e174:	ldr	r2, [sp, #4]
    e178:	mov	r0, #1
    e17c:	ldr	r3, [r4]
    e180:	cmp	r2, r3
    e184:	bne	e214 <_start@@Base+0x2f68>
    e188:	add	sp, sp, #8
    e18c:	pop	{r4, r5, r6, pc}
    e190:	orr	r3, r3, #1
    e194:	strb	r3, [r0, #28]
    e198:	bl	dcf4 <_start@@Base+0x2a48>
    e19c:	subs	r6, r0, #0
    e1a0:	bne	e174 <_start@@Base+0x2ec8>
    e1a4:	add	r3, sp, #8
    e1a8:	mov	r0, r5
    e1ac:	mov	r1, r6
    e1b0:	mov	r2, r6
    e1b4:	str	r6, [r3, #-8]!
    e1b8:	mov	r3, sp
    e1bc:	bl	d7e0 <_start@@Base+0x2534>
    e1c0:	ldr	r3, [sp]
    e1c4:	cmp	r3, #0
    e1c8:	beq	e174 <_start@@Base+0x2ec8>
    e1cc:	mov	r2, r6
    e1d0:	mov	r3, r6
    e1d4:	mov	r0, r5
    e1d8:	mov	r1, #1
    e1dc:	bl	d668 <_start@@Base+0x23bc>
    e1e0:	ldr	r3, [sp]
    e1e4:	movw	r1, #6664	; 0x1a08
    e1e8:	movt	r1, #1
    e1ec:	ldr	r3, [r3, #8]
    e1f0:	mov	r2, r0
    e1f4:	mov	r5, r0
    e1f8:	mov	r0, #7
    e1fc:	bl	ab88 <gconf_log@plt>
    e200:	ldr	r0, [sp]
    e204:	bl	af3c <g_error_free@plt>
    e208:	mov	r0, r5
    e20c:	bl	a9b4 <g_free@plt>
    e210:	b	e174 <_start@@Base+0x2ec8>
    e214:	bl	ae58 <__stack_chk_fail@plt>
    e218:	push	{r3, r4, r5, lr}
    e21c:	mov	r4, r0
    e220:	bl	e14c <_start@@Base+0x2ea0>
    e224:	mov	r0, r4
    e228:	bl	df3c <_start@@Base+0x2c90>
    e22c:	ldr	r4, [r4, #20]
    e230:	cmp	r4, #0
    e234:	popeq	{r3, r4, r5, pc}
    e238:	ldr	r5, [r4]
    e23c:	mov	r0, r5
    e240:	bl	e218 <_start@@Base+0x2f6c>
    e244:	ldr	r4, [r4, #4]
    e248:	ldrb	r3, [r5, #28]
    e24c:	cmp	r4, #0
    e250:	orr	r3, r3, #32
    e254:	strb	r3, [r5, #28]
    e258:	bne	e238 <_start@@Base+0x2f8c>
    e25c:	pop	{r3, r4, r5, pc}
    e260:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    e264:	mov	r7, r0
    e268:	ldr	r4, [r0]
    e26c:	cmp	r4, #0
    e270:	beq	e304 <_start@@Base+0x3058>
    e274:	mov	r8, #0
    e278:	mov	r6, r8
    e27c:	b	e29c <_start@@Base+0x2ff0>
    e280:	mov	r0, r6
    e284:	mov	r1, r5
    e288:	bl	acf0 <g_slist_prepend@plt>
    e28c:	mov	r6, r0
    e290:	ldr	r4, [r4, #4]
    e294:	cmp	r4, #0
    e298:	beq	e2e8 <_start@@Base+0x303c>
    e29c:	ldr	r5, [r4]
    e2a0:	ldrb	r3, [r5, #28]
    e2a4:	tst	r3, #1
    e2a8:	beq	e280 <_start@@Base+0x2fd4>
    e2ac:	ldr	r2, [r5, #16]
    e2b0:	cmp	r2, #0
    e2b4:	bne	e280 <_start@@Base+0x2fd4>
    e2b8:	tst	r3, #4
    e2bc:	beq	e280 <_start@@Base+0x2fd4>
    e2c0:	ldr	r2, [r5, #20]
    e2c4:	cmp	r2, #0
    e2c8:	bne	e280 <_start@@Base+0x2fd4>
    e2cc:	ubfx	r8, r3, #5, #1
    e2d0:	cmp	r8, #0
    e2d4:	beq	e314 <_start@@Base+0x3068>
    e2d8:	mov	r0, r5
    e2dc:	mov	r8, #1
    e2e0:	bl	b57c <_start@@Base+0x2d0>
    e2e4:	b	e290 <_start@@Base+0x2fe4>
    e2e8:	ldr	r0, [r7]
    e2ec:	bl	aa2c <g_slist_free@plt>
    e2f0:	mov	r0, r6
    e2f4:	bl	aab0 <g_slist_reverse@plt>
    e2f8:	str	r0, [r7]
    e2fc:	mov	r0, r8
    e300:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    e304:	mov	r0, r4
    e308:	mov	r8, r4
    e30c:	mov	r6, r4
    e310:	b	e2ec <_start@@Base+0x3040>
    e314:	mov	r1, r8
    e318:	mov	r2, r8
    e31c:	mov	r3, r8
    e320:	mov	r0, r5
    e324:	bl	d668 <_start@@Base+0x23bc>
    e328:	ldrb	r2, [r5, #28]
    e32c:	mov	r3, r8
    e330:	mov	r1, #1
    e334:	ubfx	r2, r2, #6, #1
    e338:	mov	r9, r0
    e33c:	mov	r0, r5
    e340:	bl	d668 <_start@@Base+0x23bc>
    e344:	mov	r8, r0
    e348:	bl	aa14 <g_unlink@plt>
    e34c:	cmp	r0, #0
    e350:	blt	e378 <_start@@Base+0x30cc>
    e354:	mov	r0, r9
    e358:	bl	adc8 <g_rmdir@plt>
    e35c:	cmp	r0, #0
    e360:	blt	e3b4 <_start@@Base+0x3108>
    e364:	mov	r0, r9
    e368:	bl	a9b4 <g_free@plt>
    e36c:	mov	r0, r8
    e370:	bl	a9b4 <g_free@plt>
    e374:	b	e2d8 <_start@@Base+0x302c>
    e378:	movw	r0, #5492	; 0x1574
    e37c:	movw	r1, #6860	; 0x1acc
    e380:	movt	r0, #1
    e384:	movt	r1, #1
    e388:	bl	afc0 <g_dgettext@plt>
    e38c:	mov	sl, r0
    e390:	bl	b020 <__errno_location@plt>
    e394:	ldr	r0, [r0]
    e398:	bl	af00 <g_strerror@plt>
    e39c:	mov	r1, sl
    e3a0:	mov	r2, r8
    e3a4:	mov	r3, r0
    e3a8:	mov	r0, #4
    e3ac:	bl	ab88 <gconf_log@plt>
    e3b0:	b	e354 <_start@@Base+0x30a8>
    e3b4:	movw	r0, #5492	; 0x1574
    e3b8:	movw	r1, #6860	; 0x1acc
    e3bc:	movt	r0, #1
    e3c0:	movt	r1, #1
    e3c4:	bl	afc0 <g_dgettext@plt>
    e3c8:	mov	sl, r0
    e3cc:	bl	b020 <__errno_location@plt>
    e3d0:	ldr	r0, [r0]
    e3d4:	bl	af00 <g_strerror@plt>
    e3d8:	mov	r1, sl
    e3dc:	mov	r2, r9
    e3e0:	mov	r3, r0
    e3e4:	mov	r0, #4
    e3e8:	bl	ab88 <gconf_log@plt>
    e3ec:	b	e364 <_start@@Base+0x30b8>
    e3f0:	push	{r4, r5, r6, lr}
    e3f4:	mov	r6, r0
    e3f8:	ldr	r4, [r0, #20]
    e3fc:	cmp	r4, #0
    e400:	beq	e43c <_start@@Base+0x3190>
    e404:	mov	r5, #0
    e408:	ldr	r0, [r4]
    e40c:	bl	e3f0 <_start@@Base+0x3144>
    e410:	ldr	r4, [r4, #4]
    e414:	cmp	r0, #0
    e418:	movne	r5, #1
    e41c:	cmp	r4, #0
    e420:	bne	e408 <_start@@Base+0x315c>
    e424:	add	r0, r6, #20
    e428:	bl	e260 <_start@@Base+0x2fb4>
    e42c:	cmp	r0, #0
    e430:	moveq	r0, r5
    e434:	movne	r0, #1
    e438:	pop	{r4, r5, r6, pc}
    e43c:	mov	r5, r4
    e440:	b	e424 <_start@@Base+0x3178>
    e444:	push	{r3, r4, r5, r6, r7, lr}
    e448:	mov	r7, r0
    e44c:	ldr	r6, [r0, #16]
    e450:	mov	r5, r1
    e454:	ldrb	r3, [r0, #29]
    e458:	cmp	r6, #0
    e45c:	orr	r3, r3, #2
    e460:	strb	r3, [r0, #29]
    e464:	beq	e4ac <_start@@Base+0x3200>
    e468:	ldr	r3, [r6]
    e46c:	ldr	r4, [r3, #12]
    e470:	cmp	r4, #0
    e474:	bne	e488 <_start@@Base+0x31dc>
    e478:	b	e4ec <_start@@Base+0x3240>
    e47c:	ldr	r4, [r4, #4]
    e480:	cmp	r4, #0
    e484:	beq	e4ec <_start@@Base+0x3240>
    e488:	ldr	r3, [r4]
    e48c:	mov	r1, r5
    e490:	ldr	r0, [r3]
    e494:	bl	afe4 <strcmp@plt>
    e498:	cmp	r0, #0
    e49c:	bne	e47c <_start@@Base+0x31d0>
    e4a0:	ldrb	r3, [r7, #29]
    e4a4:	bfi	r3, r0, #1, #1
    e4a8:	strb	r3, [r7, #29]
    e4ac:	ldr	r4, [r7, #20]
    e4b0:	cmp	r4, #0
    e4b4:	beq	e4e0 <_start@@Base+0x3234>
    e4b8:	ldr	r0, [r4]
    e4bc:	mov	r1, r5
    e4c0:	bl	e444 <_start@@Base+0x3198>
    e4c4:	cmp	r0, #0
    e4c8:	ldrbeq	r3, [r7, #29]
    e4cc:	bfieq	r3, r0, #1, #1
    e4d0:	strbeq	r3, [r7, #29]
    e4d4:	ldr	r4, [r4, #4]
    e4d8:	cmp	r4, #0
    e4dc:	bne	e4b8 <_start@@Base+0x320c>
    e4e0:	ldrb	r0, [r7, #29]
    e4e4:	ubfx	r0, r0, #1, #1
    e4e8:	pop	{r3, r4, r5, r6, r7, pc}
    e4ec:	ldr	r6, [r6, #4]
    e4f0:	cmp	r6, #0
    e4f4:	bne	e468 <_start@@Base+0x31bc>
    e4f8:	b	e4ac <_start@@Base+0x3200>
    e4fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e500:	movw	r7, #45672	; 0xb268
    e504:	movt	r7, #1
    e508:	sub	sp, sp, #116	; 0x74
    e50c:	mov	r6, r2
    e510:	mov	r5, r1
    e514:	ldr	ip, [r7]
    e518:	mov	r2, r1
    e51c:	mov	r8, r3
    e520:	mov	r1, #1
    e524:	mov	r3, r6
    e528:	ldr	r4, [sp, #152]	; 0x98
    e52c:	str	ip, [sp, #108]	; 0x6c
    e530:	mov	fp, r0
    e534:	ldr	ip, [sp, #156]	; 0x9c
    e538:	str	ip, [sp, #12]
    e53c:	bl	d668 <_start@@Base+0x23bc>
    e540:	mov	r2, #0
    e544:	movw	r1, #6888	; 0x1ae8
    e548:	movt	r1, #1
    e54c:	str	r0, [sp, #8]
    e550:	bl	ab58 <g_strconcat@plt>
    e554:	mov	r2, r4
    e558:	mov	r1, #65	; 0x41
    e55c:	mov	sl, r0
    e560:	bl	a9c0 <open@plt>
    e564:	subs	r9, r0, #0
    e568:	blt	e71c <_start@@Base+0x3470>
    e56c:	ldr	r3, [fp, #16]
    e570:	cmp	r3, #0
    e574:	beq	e6b8 <_start@@Base+0x340c>
    e578:	movw	r1, #6896	; 0x1af0
    e57c:	mov	r0, r9
    e580:	movt	r1, #1
    e584:	bl	ade0 <fdopen@plt>
    e588:	subs	r4, r0, #0
    e58c:	beq	e7a0 <_start@@Base+0x34f4>
    e590:	movw	r0, #6900	; 0x1af4
    e594:	mov	r1, r4
    e598:	movt	r0, #1
    e59c:	bl	b038 <fputs@plt>
    e5a0:	cmp	r0, #0
    e5a4:	blt	e600 <_start@@Base+0x3354>
    e5a8:	movw	r0, #6924	; 0x1b0c
    e5ac:	mov	r1, r4
    e5b0:	movt	r0, #1
    e5b4:	bl	b038 <fputs@plt>
    e5b8:	cmp	r0, #0
    e5bc:	blt	e600 <_start@@Base+0x3354>
    e5c0:	ldr	r9, [fp, #16]
    e5c4:	cmp	r9, #0
    e5c8:	bne	e5dc <_start@@Base+0x3330>
    e5cc:	b	e740 <_start@@Base+0x3494>
    e5d0:	ldr	r9, [r9, #4]
    e5d4:	cmp	r9, #0
    e5d8:	beq	e740 <_start@@Base+0x3494>
    e5dc:	ldr	r0, [r9]
    e5e0:	mov	r1, r4
    e5e4:	str	r6, [sp]
    e5e8:	mov	r2, #1
    e5ec:	str	r8, [sp, #4]
    e5f0:	mov	r3, r5
    e5f4:	bl	c164 <_start@@Base+0xeb8>
    e5f8:	cmp	r0, #0
    e5fc:	bne	e5d0 <_start@@Base+0x3324>
    e600:	movw	r0, #5492	; 0x1574
    e604:	movw	r1, #7052	; 0x1b8c
    e608:	movt	r0, #1
    e60c:	movt	r1, #1
    e610:	bl	afc0 <g_dgettext@plt>
    e614:	mvn	r9, #0
    e618:	mov	r5, r0
    e61c:	bl	b020 <__errno_location@plt>
    e620:	ldr	r0, [r0]
    e624:	bl	af00 <g_strerror@plt>
    e628:	mov	r1, sl
    e62c:	mov	r2, r0
    e630:	mov	r0, r5
    e634:	bl	ac48 <g_strdup_printf@plt>
    e638:	mov	r5, r0
    e63c:	mov	r0, sl
    e640:	bl	a9b4 <g_free@plt>
    e644:	ldr	r0, [sp, #8]
    e648:	bl	a9b4 <g_free@plt>
    e64c:	cmp	r5, #0
    e650:	beq	e680 <_start@@Base+0x33d4>
    e654:	ldr	ip, [sp, #12]
    e658:	cmp	ip, #0
    e65c:	beq	e678 <_start@@Base+0x33cc>
    e660:	bl	aea0 <gconf_error_quark@plt>
    e664:	mov	r1, #1
    e668:	mov	r2, r5
    e66c:	bl	acfc <g_error_new_literal@plt>
    e670:	ldr	ip, [sp, #12]
    e674:	str	r0, [ip]
    e678:	mov	r0, r5
    e67c:	bl	a9b4 <g_free@plt>
    e680:	cmp	r9, #0
    e684:	blt	e690 <_start@@Base+0x33e4>
    e688:	mov	r0, r9
    e68c:	bl	adec <close@plt>
    e690:	cmp	r4, #0
    e694:	beq	e6a0 <_start@@Base+0x33f4>
    e698:	mov	r0, r4
    e69c:	bl	ab10 <fclose@plt>
    e6a0:	ldr	r2, [sp, #108]	; 0x6c
    e6a4:	ldr	r3, [r7]
    e6a8:	cmp	r2, r3
    e6ac:	bne	e8f0 <_start@@Base+0x3644>
    e6b0:	add	sp, sp, #116	; 0x74
    e6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e6b8:	cmp	r5, #0
    e6bc:	beq	e6cc <_start@@Base+0x3420>
    e6c0:	ldr	r3, [fp, #20]
    e6c4:	cmp	r3, #0
    e6c8:	bne	e578 <_start@@Base+0x32cc>
    e6cc:	mov	r0, r9
    e6d0:	bl	abac <fsync@plt>
    e6d4:	mov	r0, r9
    e6d8:	bl	adec <close@plt>
    e6dc:	mov	r0, #3
    e6e0:	ldr	r1, [sp, #8]
    e6e4:	add	r2, sp, #16
    e6e8:	bl	aa38 <__xstat@plt>
    e6ec:	cmp	r0, #0
    e6f0:	beq	e7c0 <_start@@Base+0x3514>
    e6f4:	mov	r0, sl
    e6f8:	ldr	r1, [sp, #8]
    e6fc:	bl	aaf8 <rename@plt>
    e700:	cmp	r0, #0
    e704:	blt	e848 <_start@@Base+0x359c>
    e708:	mov	r0, sl
    e70c:	bl	a9b4 <g_free@plt>
    e710:	ldr	r0, [sp, #8]
    e714:	bl	a9b4 <g_free@plt>
    e718:	b	e6a0 <_start@@Base+0x33f4>
    e71c:	movw	r0, #5492	; 0x1574
    e720:	movw	r1, #6596	; 0x19c4
    e724:	movt	r0, #1
    e728:	movt	r1, #1
    e72c:	bl	afc0 <g_dgettext@plt>
    e730:	mov	r4, #0
    e734:	mov	r5, r0
    e738:	bl	b020 <__errno_location@plt>
    e73c:	b	e620 <_start@@Base+0x3374>
    e740:	cmp	r5, #0
    e744:	beq	e7f4 <_start@@Base+0x3548>
    e748:	cmp	r6, #0
    e74c:	beq	e75c <_start@@Base+0x34b0>
    e750:	mov	r0, fp
    e754:	mov	r1, r6
    e758:	bl	e444 <_start@@Base+0x3198>
    e75c:	ldr	r9, [fp, #20]
    e760:	cmp	r9, #0
    e764:	bne	e778 <_start@@Base+0x34cc>
    e768:	b	e7f4 <_start@@Base+0x3548>
    e76c:	ldr	r9, [r9, #4]
    e770:	cmp	r9, #0
    e774:	beq	e7f4 <_start@@Base+0x3548>
    e778:	ldr	r0, [r9]
    e77c:	mov	r1, r4
    e780:	str	r6, [sp]
    e784:	mov	r2, #1
    e788:	str	r8, [sp, #4]
    e78c:	mov	r3, r5
    e790:	bl	c418 <_start@@Base+0x116c>
    e794:	cmp	r0, #0
    e798:	bne	e76c <_start@@Base+0x34c0>
    e79c:	b	e600 <_start@@Base+0x3354>
    e7a0:	movw	r0, #5492	; 0x1574
    e7a4:	movw	r1, #6596	; 0x19c4
    e7a8:	movt	r0, #1
    e7ac:	movt	r1, #1
    e7b0:	bl	afc0 <g_dgettext@plt>
    e7b4:	mov	r5, r0
    e7b8:	bl	b020 <__errno_location@plt>
    e7bc:	b	e620 <_start@@Base+0x3374>
    e7c0:	ldr	r1, [sp, #32]
    e7c4:	mov	r0, sl
    e7c8:	bl	abe8 <chmod@plt>
    e7cc:	mov	r0, sl
    e7d0:	ldr	r1, [sp, #40]	; 0x28
    e7d4:	ldr	r2, [sp, #44]	; 0x2c
    e7d8:	bl	afb4 <chown@plt>
    e7dc:	cmp	r0, #0
    e7e0:	blt	e8cc <_start@@Base+0x3620>
    e7e4:	mov	r0, sl
    e7e8:	ldr	r1, [sp, #32]
    e7ec:	bl	abe8 <chmod@plt>
    e7f0:	b	e6f4 <_start@@Base+0x3448>
    e7f4:	movw	r0, #6936	; 0x1b18
    e7f8:	mov	r1, r4
    e7fc:	movt	r0, #1
    e800:	bl	b038 <fputs@plt>
    e804:	cmp	r0, #0
    e808:	blt	e600 <_start@@Base+0x3354>
    e80c:	mov	r0, r4
    e810:	bl	aca8 <fflush@plt>
    e814:	cmp	r0, #0
    e818:	bne	e890 <_start@@Base+0x35e4>
    e81c:	mov	r0, r4
    e820:	bl	a9d8 <fileno@plt>
    e824:	bl	abac <fsync@plt>
    e828:	cmp	r0, #0
    e82c:	blt	e890 <_start@@Base+0x35e4>
    e830:	mov	r0, r4
    e834:	bl	ab10 <fclose@plt>
    e838:	cmp	r0, #0
    e83c:	bge	e6dc <_start@@Base+0x3430>
    e840:	mov	r4, #0
    e844:	b	e600 <_start@@Base+0x3354>
    e848:	movw	r0, #5492	; 0x1574
    e84c:	movw	r1, #6988	; 0x1b4c
    e850:	movt	r0, #1
    e854:	movt	r1, #1
    e858:	bl	afc0 <g_dgettext@plt>
    e85c:	mvn	r9, #0
    e860:	mov	r4, #0
    e864:	mov	r5, r0
    e868:	bl	b020 <__errno_location@plt>
    e86c:	ldr	r0, [r0]
    e870:	bl	af00 <g_strerror@plt>
    e874:	mov	r1, sl
    e878:	ldr	r2, [sp, #8]
    e87c:	mov	r3, r0
    e880:	mov	r0, r5
    e884:	bl	ac48 <g_strdup_printf@plt>
    e888:	mov	r5, r0
    e88c:	b	e63c <_start@@Base+0x3390>
    e890:	movw	r0, #5492	; 0x1574
    e894:	movw	r1, #6948	; 0x1b24
    e898:	movt	r0, #1
    e89c:	movt	r1, #1
    e8a0:	bl	afc0 <g_dgettext@plt>
    e8a4:	mov	r5, r0
    e8a8:	bl	b020 <__errno_location@plt>
    e8ac:	ldr	r0, [r0]
    e8b0:	bl	af00 <g_strerror@plt>
    e8b4:	mov	r1, r5
    e8b8:	mov	r2, sl
    e8bc:	mov	r3, r0
    e8c0:	mov	r0, #4
    e8c4:	bl	ab88 <gconf_log@plt>
    e8c8:	b	e830 <_start@@Base+0x3584>
    e8cc:	ldr	r2, [sp, #44]	; 0x2c
    e8d0:	mov	r0, sl
    e8d4:	mvn	r1, #0
    e8d8:	bl	afb4 <chown@plt>
    e8dc:	mov	r0, sl
    e8e0:	ldr	r1, [sp, #40]	; 0x28
    e8e4:	mvn	r2, #0
    e8e8:	bl	afb4 <chown@plt>
    e8ec:	b	e7e4 <_start@@Base+0x3538>
    e8f0:	bl	ae58 <__stack_chk_fail@plt>
    e8f4:	push	{r4, r5, r6, lr}
    e8f8:	movw	r4, #45672	; 0xb268
    e8fc:	movt	r4, #1
    e900:	sub	sp, sp, #16
    e904:	ldm	r2, {r6, lr}
    e908:	add	r1, sp, #16
    e90c:	ldr	ip, [r4]
    e910:	mov	r3, #0
    e914:	mov	r5, r2
    e918:	mov	r2, r0
    e91c:	str	lr, [sp]
    e920:	mov	r0, r6
    e924:	str	r3, [r1, #-8]!
    e928:	str	r1, [sp, #4]
    e92c:	mov	r1, #1
    e930:	str	ip, [sp, #12]
    e934:	bl	e4fc <_start@@Base+0x3250>
    e938:	ldr	r0, [sp, #8]
    e93c:	cmp	r0, #0
    e940:	beq	e954 <_start@@Base+0x36a8>
    e944:	ldr	r3, [r5, #8]
    e948:	cmp	r3, #0
    e94c:	beq	e96c <_start@@Base+0x36c0>
    e950:	str	r0, [r5, #8]
    e954:	ldr	r2, [sp, #12]
    e958:	ldr	r3, [r4]
    e95c:	cmp	r2, r3
    e960:	bne	e974 <_start@@Base+0x36c8>
    e964:	add	sp, sp, #16
    e968:	pop	{r4, r5, r6, pc}
    e96c:	bl	af3c <g_error_free@plt>
    e970:	b	e954 <_start@@Base+0x36a8>
    e974:	bl	ae58 <__stack_chk_fail@plt>
    e978:	push	{r4, r5, r6, r7, r8, lr}
    e97c:	movw	r4, #45672	; 0xb268
    e980:	movt	r4, #1
    e984:	sub	sp, sp, #24
    e988:	subs	lr, r1, #0
    e98c:	mov	r6, r2
    e990:	ldr	ip, [r4]
    e994:	mov	r5, r3
    e998:	mov	r8, r0
    e99c:	str	ip, [sp, #20]
    e9a0:	beq	ea44 <_start@@Base+0x3798>
    e9a4:	movw	r0, #43612	; 0xaa5c
    e9a8:	movw	r1, #45040	; 0xaff0
    e9ac:	movt	r0, #0
    e9b0:	movt	r1, #0
    e9b4:	bl	ac9c <g_hash_table_new@plt>
    e9b8:	mov	r1, #1
    e9bc:	mov	r2, #0
    e9c0:	str	r6, [sp]
    e9c4:	str	r5, [sp, #4]
    e9c8:	mov	r3, r0
    e9cc:	mov	r7, r0
    e9d0:	mov	r0, r8
    e9d4:	bl	e4fc <_start@@Base+0x3250>
    e9d8:	mov	r0, r7
    e9dc:	movw	r1, #59636	; 0xe8f4
    e9e0:	add	r2, sp, #8
    e9e4:	movt	r1, #0
    e9e8:	mov	r3, #0
    e9ec:	str	r8, [sp, #8]
    e9f0:	str	r6, [sp, #12]
    e9f4:	str	r3, [sp, #16]
    e9f8:	bl	acd8 <g_hash_table_foreach@plt>
    e9fc:	ldr	r0, [sp, #16]
    ea00:	cmp	r0, #0
    ea04:	beq	ea24 <_start@@Base+0x3778>
    ea08:	cmp	r5, #0
    ea0c:	beq	ea20 <_start@@Base+0x3774>
    ea10:	ldr	r3, [r5]
    ea14:	cmp	r3, #0
    ea18:	streq	r0, [r5]
    ea1c:	beq	ea24 <_start@@Base+0x3778>
    ea20:	bl	af3c <g_error_free@plt>
    ea24:	mov	r0, r7
    ea28:	bl	aa44 <g_hash_table_destroy@plt>
    ea2c:	ldr	r2, [sp, #20]
    ea30:	ldr	r3, [r4]
    ea34:	cmp	r2, r3
    ea38:	bne	ea5c <_start@@Base+0x37b0>
    ea3c:	add	sp, sp, #24
    ea40:	pop	{r4, r5, r6, r7, r8, pc}
    ea44:	str	r3, [sp, #4]
    ea48:	mov	r2, lr
    ea4c:	str	r6, [sp]
    ea50:	mov	r3, lr
    ea54:	bl	e4fc <_start@@Base+0x3250>
    ea58:	b	ea2c <_start@@Base+0x3780>
    ea5c:	bl	ae58 <__stack_chk_fail@plt>
    ea60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ea64:	movw	r5, #45672	; 0xb268
    ea68:	movt	r5, #1
    ea6c:	ldrb	r2, [r0, #28]
    ea70:	sub	sp, sp, #28
    ea74:	mov	r4, r0
    ea78:	ldr	r3, [r5]
    ea7c:	tst	r2, #32
    ea80:	movne	r0, #1
    ea84:	str	r3, [sp, #20]
    ea88:	beq	eaa4 <_start@@Base+0x37f8>
    ea8c:	ldr	r2, [sp, #20]
    ea90:	ldr	r3, [r5]
    ea94:	cmp	r2, r3
    ea98:	bne	ee4c <_start@@Base+0x3ba0>
    ea9c:	add	sp, sp, #28
    eaa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eaa4:	add	fp, r4, #16
    eaa8:	add	r7, r4, #20
    eaac:	ubfx	r2, r2, #6, #1
    eab0:	mov	r0, fp
    eab4:	mov	r1, r7
    eab8:	bl	b66c <_start@@Base+0x3c0>
    eabc:	ldrb	r3, [r4, #28]
    eac0:	tst	r3, #64	; 0x40
    eac4:	bne	eae8 <_start@@Base+0x383c>
    eac8:	ldr	r2, [r4]
    eacc:	ldrb	r2, [r2, #20]
    ead0:	tst	r2, #1
    ead4:	beq	eae8 <_start@@Base+0x383c>
    ead8:	orr	r3, r3, #64	; 0x40
    eadc:	mov	r0, r4
    eae0:	strb	r3, [r4, #28]
    eae4:	bl	e218 <_start@@Base+0x2f6c>
    eae8:	mov	r1, #0
    eaec:	mov	r0, r4
    eaf0:	mov	r2, r1
    eaf4:	mov	r3, r1
    eaf8:	bl	d668 <_start@@Base+0x23bc>
    eafc:	mov	r2, #0
    eb00:	mov	r3, r2
    eb04:	mov	r1, #1
    eb08:	mov	r6, r0
    eb0c:	mov	r0, r4
    eb10:	bl	d668 <_start@@Base+0x23bc>
    eb14:	mov	r1, #1
    eb18:	mov	r2, r1
    eb1c:	mov	r3, #0
    eb20:	mov	r8, r0
    eb24:	mov	r0, r4
    eb28:	bl	d668 <_start@@Base+0x23bc>
    eb2c:	ldrb	r1, [r4, #28]
    eb30:	ubfx	sl, r1, #1, #1
    eb34:	cmp	sl, #0
    eb38:	mov	r9, r0
    eb3c:	bne	ebe8 <_start@@Base+0x393c>
    eb40:	and	r3, r1, #72	; 0x48
    eb44:	cmp	r3, #72	; 0x48
    eb48:	strne	sl, [sp, #12]
    eb4c:	beq	ebe8 <_start@@Base+0x393c>
    eb50:	cmp	r3, #8
    eb54:	beq	ec94 <_start@@Base+0x39e8>
    eb58:	tst	r1, #64	; 0x40
    eb5c:	bne	ed38 <_start@@Base+0x3a8c>
    eb60:	mov	r0, r7
    eb64:	bl	e260 <_start@@Base+0x2fb4>
    eb68:	adds	r7, r0, #0
    eb6c:	movne	r7, #1
    eb70:	mov	r0, r6
    eb74:	bl	a9b4 <g_free@plt>
    eb78:	mov	r0, r8
    eb7c:	bl	a9b4 <g_free@plt>
    eb80:	mov	r0, r9
    eb84:	bl	a9b4 <g_free@plt>
    eb88:	ldr	r3, [sp, #12]
    eb8c:	ldrb	r1, [r4, #28]
    eb90:	cmp	r3, #0
    eb94:	beq	ebb4 <_start@@Base+0x3908>
    eb98:	tst	r1, #4
    eb9c:	bne	ebb4 <_start@@Base+0x3908>
    eba0:	tst	r1, #1
    eba4:	beq	ee14 <_start@@Base+0x3b68>
    eba8:	mov	r0, r4
    ebac:	bl	df3c <_start@@Base+0x2c90>
    ebb0:	ldrb	r1, [r4, #28]
    ebb4:	cmp	r7, #0
    ebb8:	beq	ebd8 <_start@@Base+0x392c>
    ebbc:	tst	r1, #1
    ebc0:	bne	ebd8 <_start@@Base+0x392c>
    ebc4:	tst	r1, #4
    ebc8:	beq	edec <_start@@Base+0x3b40>
    ebcc:	mov	r0, r4
    ebd0:	bl	e14c <_start@@Base+0x2ea0>
    ebd4:	ldrb	r1, [r4, #28]
    ebd8:	tst	r1, #10
    ebdc:	movne	r0, #0
    ebe0:	moveq	r0, #1
    ebe4:	b	ea8c <_start@@Base+0x37e0>
    ebe8:	ands	sl, r1, #1
    ebec:	beq	ed18 <_start@@Base+0x3a6c>
    ebf0:	tst	r1, #64	; 0x40
    ebf4:	bne	ed4c <_start@@Base+0x3aa0>
    ebf8:	mov	r0, fp
    ebfc:	bl	b77c <_start@@Base+0x4d0>
    ec00:	adds	r0, r0, #0
    ec04:	movne	r0, #1
    ec08:	str	r0, [sp, #12]
    ec0c:	ldrb	r1, [r4, #28]
    ec10:	tst	r1, #16
    ec14:	beq	eda0 <_start@@Base+0x3af4>
    ec18:	ldr	ip, [r4]
    ec1c:	add	r3, sp, #24
    ec20:	mov	r2, #0
    ec24:	ubfx	r1, r1, #6, #1
    ec28:	str	r2, [r3, #-8]!
    ec2c:	mov	r0, r4
    ec30:	ldr	r2, [ip, #8]
    ec34:	bl	e978 <_start@@Base+0x36cc>
    ec38:	ldr	r3, [sp, #16]
    ec3c:	cmp	r3, #0
    ec40:	beq	ed78 <_start@@Base+0x3acc>
    ec44:	movw	r0, #5492	; 0x1574
    ec48:	movw	r1, #7080	; 0x1ba8
    ec4c:	movt	r0, #1
    ec50:	movt	r1, #1
    ec54:	bl	afc0 <g_dgettext@plt>
    ec58:	ldrb	r2, [r4, #28]
    ec5c:	ldr	r3, [sp, #16]
    ec60:	tst	r2, #64	; 0x40
    ec64:	ldr	r3, [r3, #8]
    ec68:	movne	r2, r9
    ec6c:	moveq	r2, r8
    ec70:	mov	r1, r0
    ec74:	mov	r0, #4
    ec78:	bl	ab88 <gconf_log@plt>
    ec7c:	ldr	r0, [sp, #16]
    ec80:	bl	af3c <g_error_free@plt>
    ec84:	ldrb	r1, [r4, #28]
    ec88:	and	r3, r1, #72	; 0x48
    ec8c:	cmp	r3, #8
    ec90:	bne	eb58 <_start@@Base+0x38ac>
    ec94:	ubfx	fp, r1, #2, #1
    ec98:	cmp	fp, #0
    ec9c:	beq	edcc <_start@@Base+0x3b20>
    eca0:	ldr	sl, [r4, #20]
    eca4:	cmp	sl, #0
    eca8:	beq	ed64 <_start@@Base+0x3ab8>
    ecac:	mov	fp, #0
    ecb0:	b	ecd0 <_start@@Base+0x3a24>
    ecb4:	mov	r0, r2
    ecb8:	bl	ea60 <_start@@Base+0x37b4>
    ecbc:	cmp	r0, #0
    ecc0:	moveq	fp, #1
    ecc4:	ldr	sl, [sl, #4]
    ecc8:	cmp	sl, #0
    eccc:	beq	ee3c <_start@@Base+0x3b90>
    ecd0:	ldr	r2, [sl]
    ecd4:	ldrb	r1, [r2, #28]
    ecd8:	tst	r1, #10
    ecdc:	beq	ecc4 <_start@@Base+0x3a18>
    ece0:	ldrb	r1, [r4, #28]
    ece4:	tst	r1, #16
    ece8:	bne	ecb4 <_start@@Base+0x3a08>
    ecec:	ldr	r1, [r4]
    ecf0:	mov	r0, r6
    ecf4:	ldr	r1, [r1, #4]
    ecf8:	str	r2, [sp, #8]
    ecfc:	bl	c5a8 <_start@@Base+0x12fc>
    ed00:	ldr	r2, [sp, #8]
    ed04:	cmp	r0, #0
    ed08:	ldrbne	r1, [r4, #28]
    ed0c:	orrne	r1, r1, #16
    ed10:	strbne	r1, [r4, #28]
    ed14:	b	ecb4 <_start@@Base+0x3a08>
    ed18:	movw	r0, #4852	; 0x12f4
    ed1c:	movw	r2, #7108	; 0x1bc4
    ed20:	movt	r0, #1
    ed24:	movt	r2, #1
    ed28:	ldr	r1, [pc, #288]	; ee50 <_start@@Base+0x3ba4>
    ed2c:	bl	ad80 <g_return_if_fail_warning@plt>
    ed30:	mov	r0, sl
    ed34:	b	ea8c <_start@@Base+0x37e0>
    ed38:	mov	r0, r4
    ed3c:	bl	e3f0 <_start@@Base+0x3144>
    ed40:	adds	r7, r0, #0
    ed44:	movne	r7, #1
    ed48:	b	eb70 <_start@@Base+0x38c4>
    ed4c:	mov	r0, r4
    ed50:	bl	b81c <_start@@Base+0x570>
    ed54:	adds	r0, r0, #0
    ed58:	movne	r0, #1
    ed5c:	str	r0, [sp, #12]
    ed60:	b	ec0c <_start@@Base+0x3960>
    ed64:	ldrb	r2, [r4, #28]
    ed68:	bfc	r2, #3, #1
    ed6c:	strb	r2, [r4, #28]
    ed70:	uxtb	r1, r2
    ed74:	b	eb58 <_start@@Base+0x38ac>
    ed78:	ldrb	r2, [r4, #28]
    ed7c:	bfi	r2, r3, #1, #1
    ed80:	strb	r2, [r4, #28]
    ed84:	uxtb	r1, r2
    ed88:	tst	r1, #64	; 0x40
    ed8c:	movne	r2, r1
    ed90:	bfine	r2, r3, #3, #1
    ed94:	strbne	r2, [r4, #28]
    ed98:	uxtbne	r1, r2
    ed9c:	b	ec88 <_start@@Base+0x39dc>
    eda0:	ldr	r3, [r4]
    eda4:	mov	r0, r6
    eda8:	ldr	r1, [r3, #4]
    edac:	bl	c5a8 <_start@@Base+0x12fc>
    edb0:	cmp	r0, #0
    edb4:	ldrbne	r2, [r4, #28]
    edb8:	ldrbeq	r1, [r4, #28]
    edbc:	orrne	r2, r2, #16
    edc0:	strbne	r2, [r4, #28]
    edc4:	movne	r1, r2
    edc8:	b	ec18 <_start@@Base+0x396c>
    edcc:	movw	r0, #4852	; 0x12f4
    edd0:	movw	r2, #7128	; 0x1bd8
    edd4:	movt	r0, #1
    edd8:	movt	r2, #1
    eddc:	ldr	r1, [pc, #108]	; ee50 <_start@@Base+0x3ba4>
    ede0:	bl	ad80 <g_return_if_fail_warning@plt>
    ede4:	mov	r0, fp
    ede8:	b	ea8c <_start@@Base+0x37e0>
    edec:	movw	r3, #7128	; 0x1bd8
    edf0:	movw	r0, #4852	; 0x12f4
    edf4:	movt	r3, #1
    edf8:	movw	r1, #4892	; 0x131c
    edfc:	str	r3, [sp]
    ee00:	movt	r0, #1
    ee04:	movw	r2, #1299	; 0x513
    ee08:	movt	r1, #1
    ee0c:	ldr	r3, [pc, #60]	; ee50 <_start@@Base+0x3ba4>
    ee10:	bl	ac0c <g_assertion_message_expr@plt>
    ee14:	movw	r3, #7108	; 0x1bc4
    ee18:	movw	r0, #4852	; 0x12f4
    ee1c:	movt	r3, #1
    ee20:	movw	r1, #4892	; 0x131c
    ee24:	str	r3, [sp]
    ee28:	movt	r0, #1
    ee2c:	movw	r2, #1294	; 0x50e
    ee30:	movt	r1, #1
    ee34:	ldr	r3, [pc, #20]	; ee50 <_start@@Base+0x3ba4>
    ee38:	bl	ac0c <g_assertion_message_expr@plt>
    ee3c:	cmp	fp, #0
    ee40:	beq	ed64 <_start@@Base+0x3ab8>
    ee44:	ldrb	r1, [r4, #28]
    ee48:	b	eb58 <_start@@Base+0x38ac>
    ee4c:	bl	ae58 <__stack_chk_fail@plt>
    ee50:	andeq	r1, r1, r4, lsl r1
    ee54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ee58:	sub	sp, sp, #188	; 0xbc
    ee5c:	movw	r4, #45672	; 0xb268
    ee60:	movt	r4, #1
    ee64:	ldr	r5, [sp, #224]	; 0xe0
    ee68:	mov	r9, r2
    ee6c:	mov	sl, r3
    ee70:	ldr	r3, [r4]
    ee74:	mov	r7, r0
    ee78:	mov	r6, r1
    ee7c:	ldr	r2, [r5]
    ee80:	ldr	r8, [sp, #228]	; 0xe4
    ee84:	cmp	r2, #0
    ee88:	str	r3, [sp, #180]	; 0xb4
    ee8c:	ldrne	fp, [r2]
    ee90:	beq	f180 <_start@@Base+0x3ed4>
    ee94:	cmp	fp, #10
    ee98:	ldrls	pc, [pc, fp, lsl #2]
    ee9c:	b	ef68 <_start@@Base+0x3cbc>
    eea0:			; <UNDEFINED> instruction: 0x0000efb4
    eea4:	andeq	lr, r0, ip, asr #29
    eea8:	andeq	lr, r0, ip, asr #29
    eeac:	andeq	pc, r0, ip, asr #32
    eeb0:	andeq	pc, r0, r0, lsl r0	; <UNPREDICTABLE>
    eeb4:	strdeq	pc, [r0], -r4
    eeb8:	andeq	lr, r0, r0, lsl #31
    eebc:	andeq	pc, r0, ip, asr #32
    eec0:	andeq	pc, r0, ip, asr #32
    eec4:	andeq	pc, r0, ip, asr #32
    eec8:	andeq	pc, r0, ip, asr #32
    eecc:	movw	r1, #5376	; 0x1500
    eed0:	mov	r0, r6
    eed4:	movt	r1, #1
    eed8:	bl	afe4 <strcmp@plt>
    eedc:	cmp	r0, #0
    eee0:	beq	f5a8 <_start@@Base+0x42fc>
    eee4:	ldrb	r3, [r6]
    eee8:	cmp	r3, #100	; 0x64
    eeec:	bne	f130 <_start@@Base+0x3e84>
    eef0:	ldrb	r3, [r6, #1]
    eef4:	cmp	r3, #105	; 0x69
    eef8:	bne	f130 <_start@@Base+0x3e84>
    eefc:	ldrb	r3, [r6, #2]
    ef00:	cmp	r3, #114	; 0x72
    ef04:	bne	f130 <_start@@Base+0x3e84>
    ef08:	ldrb	r3, [r6, #3]
    ef0c:	cmp	r3, #0
    ef10:	bne	f130 <_start@@Base+0x3e84>
    ef14:	ldrb	r3, [r5, #32]
    ef18:	tst	r3, #1
    ef1c:	beq	f130 <_start@@Base+0x3e84>
    ef20:	ldr	r3, [r5]
    ef24:	cmp	r3, #0
    ef28:	ldrne	r0, [r3]
    ef2c:	beq	fc94 <_start@@Base+0x49e8>
    ef30:	cmp	r0, #1
    ef34:	beq	f79c <_start@@Base+0x44f0>
    ef38:	ldr	r3, [r5]
    ef3c:	cmp	r3, #0
    ef40:	ldrne	r0, [r3]
    ef44:	beq	fd88 <_start@@Base+0x4adc>
    ef48:	cmp	r0, #2
    ef4c:	beq	f79c <_start@@Base+0x44f0>
    ef50:	movw	r0, #4852	; 0x12f4
    ef54:	movw	r2, #7728	; 0x1e30
    ef58:	movt	r0, #1
    ef5c:	movt	r2, #1
    ef60:	ldr	r1, [pc, #4056]	; ff40 <_start@@Base+0x4c94>
    ef64:	bl	ad80 <g_return_if_fail_warning@plt>
    ef68:	ldr	r2, [sp, #180]	; 0xb4
    ef6c:	ldr	r3, [r4]
    ef70:	cmp	r2, r3
    ef74:	bne	fecc <_start@@Base+0x4c20>
    ef78:	add	sp, sp, #188	; 0xbc
    ef7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ef80:	ldr	r3, [r5]
    ef84:	cmp	r3, #0
    ef88:	ldrne	fp, [r3]
    ef8c:	beq	f5f4 <_start@@Base+0x4348>
    ef90:	cmp	fp, #6
    ef94:	beq	f4ec <_start@@Base+0x4240>
    ef98:	movw	r0, #4852	; 0x12f4
    ef9c:	movw	r2, #7924	; 0x1ef4
    efa0:	movt	r0, #1
    efa4:	movt	r2, #1
    efa8:	ldr	r1, [pc, #3988]	; ff44 <_start@@Base+0x4c98>
    efac:	bl	ad80 <g_return_if_fail_warning@plt>
    efb0:	b	ef68 <_start@@Base+0x3cbc>
    efb4:	movw	r1, #6452	; 0x1934
    efb8:	mov	r0, r6
    efbc:	movt	r1, #1
    efc0:	bl	afe4 <strcmp@plt>
    efc4:	cmp	r0, #0
    efc8:	bne	f1d8 <_start@@Base+0x3f2c>
    efcc:	ldr	r3, [r9]
    efd0:	cmp	r3, #0
    efd4:	beq	f6e4 <_start@@Base+0x4438>
    efd8:	movw	r0, #5492	; 0x1574
    efdc:	movw	r1, #5736	; 0x1668
    efe0:	movt	r0, #1
    efe4:	movt	r1, #1
    efe8:	bl	afc0 <g_dgettext@plt>
    efec:	ldr	ip, [r9]
    eff0:	mov	r1, r7
    eff4:	str	r6, [sp, #4]
    eff8:	mov	r2, #6
    effc:	str	ip, [sp]
    f000:	mov	r3, r0
    f004:	mov	r0, r8
    f008:	bl	c9c4 <_start@@Base+0x1718>
    f00c:	b	ef68 <_start@@Base+0x3cbc>
    f010:	movw	r0, #5492	; 0x1574
    f014:	movw	r1, #7204	; 0x1c24
    f018:	movt	r0, #1
    f01c:	movt	r1, #1
    f020:	bl	afc0 <g_dgettext@plt>
    f024:	str	r6, [sp]
    f028:	mov	r1, r7
    f02c:	movw	ip, #7368	; 0x1cc8
    f030:	mov	r2, #6
    f034:	movt	ip, #1
    f038:	str	ip, [sp, #4]
    f03c:	mov	r3, r0
    f040:	mov	r0, r8
    f044:	bl	c9c4 <_start@@Base+0x1718>
    f048:	b	ef68 <_start@@Base+0x3cbc>
    f04c:	ldr	r3, [r5]
    f050:	cmp	r3, #0
    f054:	ldrne	r3, [r3]
    f058:	beq	f600 <_start@@Base+0x4354>
    f05c:	ldrb	fp, [r5, #32]
    f060:	ubfx	fp, fp, #1, #1
    f064:	cmp	fp, #0
    f068:	bne	f18c <_start@@Base+0x3ee0>
    f06c:	cmp	r3, #3
    f070:	beq	f694 <_start@@Base+0x43e8>
    f074:	movw	r1, #7368	; 0x1cc8
    f078:	mov	r0, r6
    f07c:	movt	r1, #1
    f080:	str	r3, [sp, #112]	; 0x70
    f084:	bl	afe4 <strcmp@plt>
    f088:	ldr	r3, [sp, #112]	; 0x70
    f08c:	cmp	r0, #0
    f090:	bne	f18c <_start@@Base+0x3ee0>
    f094:	ldr	r3, [r5, #16]
    f098:	cmp	r3, #0
    f09c:	ldrne	r6, [r3]
    f0a0:	moveq	r6, r3
    f0a4:	ldr	r3, [r6]
    f0a8:	cmp	r3, #1
    f0ac:	beq	f778 <_start@@Base+0x44cc>
    f0b0:	movw	r0, #5492	; 0x1574
    f0b4:	movw	r1, #7312	; 0x1c90
    f0b8:	movt	r0, #1
    f0bc:	movt	r1, #1
    f0c0:	bl	afc0 <g_dgettext@plt>
    f0c4:	mov	r1, r7
    f0c8:	movw	ip, #7368	; 0x1cc8
    f0cc:	movw	r2, #7380	; 0x1cd4
    f0d0:	movt	ip, #1
    f0d4:	movt	r2, #1
    f0d8:	str	ip, [sp]
    f0dc:	str	r2, [sp, #4]
    f0e0:	mov	r2, #6
    f0e4:	mov	r3, r0
    f0e8:	mov	r0, r8
    f0ec:	bl	c9c4 <_start@@Base+0x1718>
    f0f0:	b	ef68 <_start@@Base+0x3cbc>
    f0f4:	movw	r0, #5492	; 0x1574
    f0f8:	movw	r1, #7204	; 0x1c24
    f0fc:	movt	r0, #1
    f100:	movt	r1, #1
    f104:	bl	afc0 <g_dgettext@plt>
    f108:	str	r6, [sp]
    f10c:	mov	r1, r7
    f110:	movw	ip, #7628	; 0x1dcc
    f114:	mov	r2, #6
    f118:	movt	ip, #1
    f11c:	str	ip, [sp, #4]
    f120:	mov	r3, r0
    f124:	mov	r0, r8
    f128:	bl	c9c4 <_start@@Base+0x1718>
    f12c:	b	ef68 <_start@@Base+0x3cbc>
    f130:	movw	r0, #5492	; 0x1574
    f134:	movw	r1, #7204	; 0x1c24
    f138:	movt	r0, #1
    f13c:	movt	r1, #1
    f140:	bl	afc0 <g_dgettext@plt>
    f144:	cmp	fp, #1
    f148:	movw	ip, #6460	; 0x193c
    f14c:	movw	r2, #6452	; 0x1934
    f150:	movt	ip, #1
    f154:	movt	r2, #1
    f158:	str	r6, [sp]
    f15c:	mov	r1, r7
    f160:	moveq	fp, r2
    f164:	movne	fp, ip
    f168:	mov	r2, #6
    f16c:	str	fp, [sp, #4]
    f170:	mov	r3, r0
    f174:	mov	r0, r8
    f178:	bl	c9c4 <_start@@Base+0x1718>
    f17c:	b	ef68 <_start@@Base+0x3cbc>
    f180:	bl	b060 <fputs@plt+0x28>
    f184:	mov	fp, r0
    f188:	b	ee94 <_start@@Base+0x3be8>
    f18c:	movw	r1, #6464	; 0x1940
    f190:	mov	r0, r6
    f194:	movt	r1, #1
    f198:	str	r3, [sp, #112]	; 0x70
    f19c:	bl	afe4 <strcmp@plt>
    f1a0:	ldr	r3, [sp, #112]	; 0x70
    f1a4:	cmp	r0, #0
    f1a8:	bne	f208 <_start@@Base+0x3f5c>
    f1ac:	cmp	r3, #3
    f1b0:	beq	f2d0 <_start@@Base+0x4024>
    f1b4:	bcc	f6f8 <_start@@Base+0x444c>
    f1b8:	sub	r3, r3, #7
    f1bc:	cmp	r3, #3
    f1c0:	bhi	f6f8 <_start@@Base+0x444c>
    f1c4:	movw	r0, #5492	; 0x1574
    f1c8:	movw	r1, #7388	; 0x1cdc
    f1cc:	movt	r0, #1
    f1d0:	movt	r1, #1
    f1d4:	b	f1e8 <_start@@Base+0x3f3c>
    f1d8:	movw	r0, #5492	; 0x1574
    f1dc:	movw	r1, #7148	; 0x1bec
    f1e0:	movt	r0, #1
    f1e4:	movt	r1, #1
    f1e8:	bl	afc0 <g_dgettext@plt>
    f1ec:	str	r6, [sp]
    f1f0:	mov	r1, r7
    f1f4:	mov	r2, #6
    f1f8:	mov	r3, r0
    f1fc:	mov	r0, r8
    f200:	bl	c9c4 <_start@@Base+0x1718>
    f204:	b	ef68 <_start@@Base+0x3cbc>
    f208:	ldrb	r2, [r6]
    f20c:	cmp	r2, #99	; 0x63
    f210:	bne	f278 <_start@@Base+0x3fcc>
    f214:	ldrb	r2, [r6, #1]
    f218:	cmp	r2, #97	; 0x61
    f21c:	beq	f228 <_start@@Base+0x3f7c>
    f220:	cmp	r2, #100	; 0x64
    f224:	bne	f1c4 <_start@@Base+0x3f18>
    f228:	ldrb	r1, [r6, #2]
    f22c:	cmp	r1, #114	; 0x72
    f230:	bne	f1c4 <_start@@Base+0x3f18>
    f234:	ldrb	r1, [r6, #3]
    f238:	cmp	r1, #0
    f23c:	bne	f1c4 <_start@@Base+0x3f18>
    f240:	cmp	fp, #0
    f244:	bne	f1c4 <_start@@Base+0x3f18>
    f248:	sub	r3, r3, #3
    f24c:	cmp	r3, #7
    f250:	ldrls	pc, [pc, r3, lsl #2]
    f254:	b	f4a4 <_start@@Base+0x41f8>
    f258:	andeq	pc, r0, r0, asr #6
    f25c:	andeq	pc, r0, r4, lsr #9
    f260:	andeq	pc, r0, r4, lsr #9
    f264:	andeq	pc, r0, r4, lsr #9
    f268:	andeq	pc, r0, r0, asr #6
    f26c:	andeq	pc, r0, r4, asr #3
    f270:	andeq	pc, r0, r4, asr #3
    f274:	andeq	pc, r0, r4, asr #3
    f278:	cmp	r2, #108	; 0x6c
    f27c:	bne	f1c4 <_start@@Base+0x3f18>
    f280:	ldrb	r2, [r6, #1]
    f284:	cmp	r2, #105	; 0x69
    f288:	bne	f1c4 <_start@@Base+0x3f18>
    f28c:	ldrb	r2, [r6, #2]
    f290:	cmp	r2, #0
    f294:	bne	f1c4 <_start@@Base+0x3f18>
    f298:	cmp	fp, #0
    f29c:	bne	f1c4 <_start@@Base+0x3f18>
    f2a0:	sub	r3, r3, #3
    f2a4:	cmp	r3, #7
    f2a8:	ldrls	pc, [pc, r3, lsl #2]
    f2ac:	b	f4c8 <_start@@Base+0x421c>
    f2b0:	strdeq	pc, [r0], -r4
    f2b4:	andeq	pc, r0, r8, asr #9
    f2b8:	andeq	pc, r0, r8, asr #9
    f2bc:	andeq	pc, r0, r8, asr #9
    f2c0:	strdeq	pc, [r0], -r4
    f2c4:	andeq	pc, r0, r4, asr #3
    f2c8:	andeq	pc, r0, r4, asr #3
    f2cc:	andeq	pc, r0, r4, asr #3
    f2d0:	cmp	fp, #0
    f2d4:	bne	f8a8 <_start@@Base+0x45fc>
    f2d8:	ldr	r3, [r5, #12]
    f2dc:	cmp	r3, #0
    f2e0:	beq	f2fc <_start@@Base+0x4050>
    f2e4:	ldr	r3, [r3, #8]
    f2e8:	cmp	r3, #0
    f2ec:	beq	f2fc <_start@@Base+0x4050>
    f2f0:	ldr	r3, [r3]
    f2f4:	cmp	r3, #5
    f2f8:	beq	f8a8 <_start@@Base+0x45fc>
    f2fc:	movw	r0, #5492	; 0x1574
    f300:	movw	r1, #7312	; 0x1c90
    f304:	movt	r0, #1
    f308:	movt	r1, #1
    f30c:	bl	afc0 <g_dgettext@plt>
    f310:	mov	r1, r7
    f314:	movw	ip, #6464	; 0x1940
    f318:	movw	r2, #5988	; 0x1764
    f31c:	movt	ip, #1
    f320:	movt	r2, #1
    f324:	str	ip, [sp]
    f328:	str	r2, [sp, #4]
    f32c:	mov	r2, #6
    f330:	mov	r3, r0
    f334:	mov	r0, r8
    f338:	bl	c9c4 <_start@@Base+0x1718>
    f33c:	b	ef68 <_start@@Base+0x3cbc>
    f340:	cmp	r2, #97	; 0x61
    f344:	ldr	r0, [r5]
    f348:	moveq	r1, #8
    f34c:	movne	r1, #9
    f350:	mov	fp, r1
    f354:	bl	acf0 <g_slist_prepend@plt>
    f358:	add	ip, sp, #184	; 0xb8
    f35c:	str	r8, [sp, #4]
    f360:	mov	lr, #0
    f364:	mov	r1, r6
    f368:	str	lr, [ip, #-8]!
    f36c:	mov	r2, r9
    f370:	str	ip, [sp]
    f374:	mov	r3, sl
    f378:	str	r0, [r5]
    f37c:	mov	r0, r7
    f380:	bl	ccf8 <_start@@Base+0x1a4c>
    f384:	ldr	r0, [sp, #176]	; 0xb0
    f388:	cmp	r0, #0
    f38c:	beq	ef68 <_start@@Base+0x3cbc>
    f390:	ldr	r6, [r5, #16]
    f394:	cmp	r6, #0
    f398:	ldrne	r6, [r6]
    f39c:	ldr	r3, [r6]
    f3a0:	cmp	r3, #7
    f3a4:	bne	fc14 <_start@@Base+0x4968>
    f3a8:	cmp	fp, #8
    f3ac:	mov	r0, r6
    f3b0:	beq	fe98 <_start@@Base+0x4bec>
    f3b4:	bl	ac3c <gconf_value_get_cdr@plt>
    f3b8:	cmp	r0, #0
    f3bc:	beq	fed0 <_start@@Base+0x4c24>
    f3c0:	ldr	r0, [sp, #176]	; 0xb0
    f3c4:	bl	ac78 <gconf_value_free@plt>
    f3c8:	movw	r0, #5492	; 0x1574
    f3cc:	movw	r1, #7500	; 0x1d4c
    f3d0:	movt	r0, #1
    f3d4:	movt	r1, #1
    f3d8:	bl	afc0 <g_dgettext@plt>
    f3dc:	mov	r1, r7
    f3e0:	mov	r2, #6
    f3e4:	mov	r3, r0
    f3e8:	mov	r0, r8
    f3ec:	bl	c9c4 <_start@@Base+0x1718>
    f3f0:	b	ef68 <_start@@Base+0x3cbc>
    f3f4:	ldr	r0, [r5]
    f3f8:	cmp	r0, #0
    f3fc:	beq	fec0 <_start@@Base+0x4c14>
    f400:	mov	r1, #10
    f404:	bl	acf0 <g_slist_prepend@plt>
    f408:	add	ip, sp, #184	; 0xb8
    f40c:	str	r8, [sp, #4]
    f410:	mov	r3, sl
    f414:	mov	lr, #0
    f418:	mov	r1, r6
    f41c:	str	lr, [ip, #-8]!
    f420:	mov	r2, r9
    f424:	str	ip, [sp]
    f428:	str	r0, [r5]
    f42c:	mov	r0, r7
    f430:	bl	ccf8 <_start@@Base+0x1a4c>
    f434:	ldr	r3, [sp, #176]	; 0xb0
    f438:	cmp	r3, #0
    f43c:	beq	ef68 <_start@@Base+0x3cbc>
    f440:	ldr	r6, [r5, #16]
    f444:	cmp	r6, #0
    f448:	ldrne	r6, [r6]
    f44c:	ldr	r9, [r6]
    f450:	cmp	r9, #6
    f454:	beq	fe28 <_start@@Base+0x4b7c>
    f458:	mov	r0, r3
    f45c:	bl	ac78 <gconf_value_free@plt>
    f460:	movw	r0, #5492	; 0x1574
    f464:	movw	r1, #7312	; 0x1c90
    f468:	movt	r0, #1
    f46c:	movt	r1, #1
    f470:	bl	afc0 <g_dgettext@plt>
    f474:	mov	r1, r7
    f478:	movw	ip, #5120	; 0x1400
    f47c:	movw	r2, #7572	; 0x1d94
    f480:	movt	ip, #1
    f484:	movt	r2, #1
    f488:	str	ip, [sp]
    f48c:	str	r2, [sp, #4]
    f490:	mov	r2, #6
    f494:	mov	r3, r0
    f498:	mov	r0, r8
    f49c:	bl	c9c4 <_start@@Base+0x1718>
    f4a0:	b	ef68 <_start@@Base+0x3cbc>
    f4a4:	mov	r3, #0
    f4a8:	movw	r0, #4852	; 0x12f4
    f4ac:	str	r3, [sp]
    f4b0:	movw	r1, #4892	; 0x131c
    f4b4:	movt	r0, #1
    f4b8:	movw	r2, #3270	; 0xcc6
    f4bc:	movt	r1, #1
    f4c0:	ldr	r3, [pc, #2688]	; ff48 <_start@@Base+0x4c9c>
    f4c4:	bl	ac0c <g_assertion_message_expr@plt>
    f4c8:	mov	r3, #0
    f4cc:	movw	r0, #4852	; 0x12f4
    f4d0:	str	r3, [sp]
    f4d4:	movw	r1, #4892	; 0x131c
    f4d8:	movt	r0, #1
    f4dc:	movw	r2, #3292	; 0xcdc
    f4e0:	movt	r1, #1
    f4e4:	ldr	r3, [pc, #2652]	; ff48 <_start@@Base+0x4c9c>
    f4e8:	bl	ac0c <g_assertion_message_expr@plt>
    f4ec:	ldr	r3, [r5, #24]
    f4f0:	movw	r1, #5212	; 0x145c
    f4f4:	mov	r0, r6
    f4f8:	movt	r1, #1
    f4fc:	ldr	r3, [r3]
    f500:	str	r3, [sp, #116]	; 0x74
    f504:	bl	afe4 <strcmp@plt>
    f508:	cmp	r0, #0
    f50c:	bne	f520 <_start@@Base+0x4274>
    f510:	ldrb	ip, [r5, #32]
    f514:	ubfx	ip, ip, #1, #1
    f518:	cmp	ip, #0
    f51c:	beq	f60c <_start@@Base+0x4360>
    f520:	movw	r1, #7628	; 0x1dcc
    f524:	mov	r0, r6
    f528:	movt	r1, #1
    f52c:	bl	afe4 <strcmp@plt>
    f530:	cmp	r0, #0
    f534:	bne	f56c <_start@@Base+0x42c0>
    f538:	ldr	r0, [r5]
    f53c:	mov	r1, #5
    f540:	bl	acf0 <g_slist_prepend@plt>
    f544:	ldr	r2, [sp, #116]	; 0x74
    f548:	str	r0, [r5]
    f54c:	ldr	r3, [r2, #8]
    f550:	cmp	r3, #0
    f554:	beq	ef68 <_start@@Base+0x3cbc>
    f558:	movw	r0, #5492	; 0x1574
    f55c:	movw	r1, #7640	; 0x1dd8
    f560:	movt	r0, #1
    f564:	movt	r1, #1
    f568:	b	f3d8 <_start@@Base+0x412c>
    f56c:	movw	r0, #5492	; 0x1574
    f570:	movw	r1, #7688	; 0x1e08
    f574:	movt	r0, #1
    f578:	movt	r1, #1
    f57c:	bl	afc0 <g_dgettext@plt>
    f580:	str	r6, [sp]
    f584:	mov	r1, r7
    f588:	movw	ip, #6464	; 0x1940
    f58c:	mov	r2, #6
    f590:	movt	ip, #1
    f594:	str	ip, [sp, #4]
    f598:	mov	r3, r0
    f59c:	mov	r0, r8
    f5a0:	bl	c9c4 <_start@@Base+0x1718>
    f5a4:	b	ef68 <_start@@Base+0x3cbc>
    f5a8:	ldr	r3, [r5]
    f5ac:	cmp	r3, #0
    f5b0:	ldrne	r0, [r3]
    f5b4:	beq	f964 <_start@@Base+0x46b8>
    f5b8:	cmp	r0, #1
    f5bc:	beq	f71c <_start@@Base+0x4470>
    f5c0:	ldr	r3, [r5]
    f5c4:	cmp	r3, #0
    f5c8:	ldrne	r0, [r3]
    f5cc:	beq	fc0c <_start@@Base+0x4960>
    f5d0:	cmp	r0, #2
    f5d4:	beq	f71c <_start@@Base+0x4470>
    f5d8:	movw	r0, #4852	; 0x12f4
    f5dc:	movw	r2, #7728	; 0x1e30
    f5e0:	movt	r0, #1
    f5e4:	movt	r2, #1
    f5e8:	ldr	r1, [pc, #2396]	; ff4c <_start@@Base+0x4ca0>
    f5ec:	bl	ad80 <g_return_if_fail_warning@plt>
    f5f0:	b	ef68 <_start@@Base+0x3cbc>
    f5f4:	bl	b060 <fputs@plt+0x28>
    f5f8:	mov	fp, r0
    f5fc:	b	ef90 <_start@@Base+0x3ce4>
    f600:	bl	b060 <fputs@plt+0x28>
    f604:	mov	r3, r0
    f608:	b	f05c <_start@@Base+0x3db0>
    f60c:	ldr	r0, [r5]
    f610:	mov	r1, #7
    f614:	str	ip, [sp, #112]	; 0x70
    f618:	bl	acf0 <g_slist_prepend@plt>
    f61c:	ldr	ip, [sp, #112]	; 0x70
    f620:	add	lr, sp, #184	; 0xb8
    f624:	str	r8, [sp, #4]
    f628:	mov	r1, r6
    f62c:	mov	r2, r9
    f630:	mov	r3, sl
    f634:	str	ip, [lr, #-8]!
    f638:	str	lr, [sp]
    f63c:	str	r0, [r5]
    f640:	mov	r0, r7
    f644:	bl	ccf8 <_start@@Base+0x1a4c>
    f648:	ldr	r0, [sp, #176]	; 0xb0
    f64c:	cmp	r0, #0
    f650:	beq	ef68 <_start@@Base+0x3cbc>
    f654:	ldr	r2, [sp, #116]	; 0x74
    f658:	ldr	r3, [r2, #12]
    f65c:	cmp	r3, #0
    f660:	beq	fd6c <_start@@Base+0x4ac0>
    f664:	bl	ac78 <gconf_value_free@plt>
    f668:	movw	r0, #5492	; 0x1574
    f66c:	movw	r1, #7580	; 0x1d9c
    f670:	movt	r0, #1
    f674:	movt	r1, #1
    f678:	bl	afc0 <g_dgettext@plt>
    f67c:	mov	r1, r7
    f680:	mov	r2, fp
    f684:	mov	r3, r0
    f688:	mov	r0, r8
    f68c:	bl	c9c4 <_start@@Base+0x1718>
    f690:	b	ef68 <_start@@Base+0x3cbc>
    f694:	ldr	r2, [r5, #12]
    f698:	ldr	r2, [r2, #8]
    f69c:	cmp	r2, #0
    f6a0:	beq	fe84 <_start@@Base+0x4bd8>
    f6a4:	ldr	r1, [r5, #16]
    f6a8:	cmp	r1, #0
    f6ac:	beq	f6bc <_start@@Base+0x4410>
    f6b0:	ldr	r1, [r1]
    f6b4:	cmp	r2, r1
    f6b8:	beq	f074 <_start@@Base+0x3dc8>
    f6bc:	movw	r3, #7868	; 0x1ebc
    f6c0:	movw	r0, #4852	; 0x12f4
    f6c4:	movt	r3, #1
    f6c8:	movw	r1, #4892	; 0x131c
    f6cc:	str	r3, [sp]
    f6d0:	movt	r0, #1
    f6d4:	movw	r2, #3202	; 0xc82
    f6d8:	movt	r1, #1
    f6dc:	ldr	r3, [pc, #2148]	; ff48 <_start@@Base+0x4c9c>
    f6e0:	bl	ac0c <g_assertion_message_expr@plt>
    f6e4:	ldr	r0, [r5]
    f6e8:	mov	r1, #1
    f6ec:	bl	acf0 <g_slist_prepend@plt>
    f6f0:	str	r0, [r5]
    f6f4:	b	ef68 <_start@@Base+0x3cbc>
    f6f8:	mov	r3, #0
    f6fc:	movw	r0, #4852	; 0x12f4
    f700:	str	r3, [sp]
    f704:	movw	r1, #4892	; 0x131c
    f708:	movt	r0, #1
    f70c:	movw	r2, #3246	; 0xcae
    f710:	movt	r1, #1
    f714:	ldr	r3, [pc, #2092]	; ff48 <_start@@Base+0x4c9c>
    f718:	bl	ac0c <g_assertion_message_expr@plt>
    f71c:	movw	r1, #5376	; 0x1500
    f720:	mov	r0, r6
    f724:	movt	r1, #1
    f728:	bl	afe4 <strcmp@plt>
    f72c:	cmp	r0, #0
    f730:	beq	f750 <_start@@Base+0x44a4>
    f734:	movw	r0, #4852	; 0x12f4
    f738:	movw	r2, #7796	; 0x1e74
    f73c:	movt	r0, #1
    f740:	movt	r2, #1
    f744:	ldr	r1, [pc, #2048]	; ff4c <_start@@Base+0x4ca0>
    f748:	bl	ad80 <g_return_if_fail_warning@plt>
    f74c:	b	ef68 <_start@@Base+0x3cbc>
    f750:	ldr	ip, [r5, #12]
    f754:	cmp	ip, #0
    f758:	beq	f96c <_start@@Base+0x46c0>
    f75c:	movw	r0, #4852	; 0x12f4
    f760:	movw	r2, #7820	; 0x1e8c
    f764:	movt	r0, #1
    f768:	movt	r2, #1
    f76c:	ldr	r1, [pc, #2008]	; ff4c <_start@@Base+0x4ca0>
    f770:	bl	ad80 <g_return_if_fail_warning@plt>
    f774:	b	ef68 <_start@@Base+0x3cbc>
    f778:	ldr	r0, [r5]
    f77c:	mov	r1, #4
    f780:	bl	acf0 <g_slist_prepend@plt>
    f784:	movw	r1, #5268	; 0x1494
    f788:	movt	r1, #1
    f78c:	str	r0, [r5]
    f790:	mov	r0, r6
    f794:	bl	ac54 <gconf_value_set_string@plt>
    f798:	b	ef68 <_start@@Base+0x3cbc>
    f79c:	ldrb	r3, [r6]
    f7a0:	cmp	r3, #100	; 0x64
    f7a4:	beq	f7c4 <_start@@Base+0x4518>
    f7a8:	movw	r0, #4852	; 0x12f4
    f7ac:	movw	r2, #7848	; 0x1ea8
    f7b0:	movt	r0, #1
    f7b4:	movt	r2, #1
    f7b8:	ldr	r1, [pc, #1920]	; ff40 <_start@@Base+0x4c94>
    f7bc:	bl	ad80 <g_return_if_fail_warning@plt>
    f7c0:	b	ef68 <_start@@Base+0x3cbc>
    f7c4:	ldrb	r3, [r6, #1]
    f7c8:	cmp	r3, #105	; 0x69
    f7cc:	bne	f7a8 <_start@@Base+0x44fc>
    f7d0:	ldrb	r3, [r6, #2]
    f7d4:	cmp	r3, #114	; 0x72
    f7d8:	bne	f7a8 <_start@@Base+0x44fc>
    f7dc:	ldrb	fp, [r6, #3]
    f7e0:	cmp	fp, #0
    f7e4:	bne	f7a8 <_start@@Base+0x44fc>
    f7e8:	mov	r1, #2
    f7ec:	ldr	r0, [r5]
    f7f0:	bl	acf0 <g_slist_prepend@plt>
    f7f4:	add	r1, sp, #184	; 0xb8
    f7f8:	str	r8, [sp]
    f7fc:	mov	r2, r9
    f800:	str	fp, [sp, #12]
    f804:	mov	r3, sl
    f808:	str	fp, [r1, #-8]!
    f80c:	movw	r9, #5964	; 0x174c
    f810:	str	r1, [sp, #8]
    f814:	movt	r9, #1
    f818:	mov	r1, r6
    f81c:	str	r9, [sp, #4]
    f820:	str	r0, [r5]
    f824:	mov	r0, r7
    f828:	bl	ca7c <_start@@Base+0x17d0>
    f82c:	cmp	r0, #0
    f830:	beq	ef68 <_start@@Base+0x3cbc>
    f834:	ldr	r3, [sp, #176]	; 0xb0
    f838:	cmp	r3, #0
    f83c:	beq	fdc8 <_start@@Base+0x4b1c>
    f840:	ldr	ip, [r5, #8]
    f844:	cmp	ip, #0
    f848:	beq	fe04 <_start@@Base+0x4b58>
    f84c:	ldr	r9, [ip]
    f850:	mov	r8, r3
    f854:	ldrb	r3, [r5, #32]
    f858:	tst	r3, #2
    f85c:	beq	fc9c <_start@@Base+0x49f0>
    f860:	ldr	r6, [r9, #20]
    f864:	cmp	r6, #0
    f868:	bne	f87c <_start@@Base+0x45d0>
    f86c:	b	fc6c <_start@@Base+0x49c0>
    f870:	ldr	r6, [r6, #4]
    f874:	cmp	r6, #0
    f878:	beq	fc6c <_start@@Base+0x49c0>
    f87c:	ldr	r7, [r6]
    f880:	mov	r1, r8
    f884:	ldr	r0, [r7, #12]
    f888:	bl	afe4 <strcmp@plt>
    f88c:	cmp	r0, #0
    f890:	bne	f870 <_start@@Base+0x45c4>
    f894:	mov	r1, r7
    f898:	ldr	r0, [r5, #8]
    f89c:	bl	acf0 <g_slist_prepend@plt>
    f8a0:	str	r0, [r5, #8]
    f8a4:	b	ef68 <_start@@Base+0x3cbc>
    f8a8:	mov	r1, #6
    f8ac:	ldr	r0, [r5]
    f8b0:	bl	acf0 <g_slist_prepend@plt>
    f8b4:	ldrb	r1, [r5, #32]
    f8b8:	mov	r3, #0
    f8bc:	str	r3, [sp, #172]	; 0xac
    f8c0:	ubfx	r1, r1, #1, #1
    f8c4:	str	r3, [sp, #176]	; 0xb0
    f8c8:	cmp	r1, r3
    f8cc:	str	r0, [r5]
    f8d0:	str	r8, [sp]
    f8d4:	bne	fbd0 <_start@@Base+0x4924>
    f8d8:	mov	r2, r9
    f8dc:	str	r1, [sp, #20]
    f8e0:	add	r0, sp, #172	; 0xac
    f8e4:	mov	r3, sl
    f8e8:	str	r0, [sp, #8]
    f8ec:	movw	r9, #7440	; 0x1d10
    f8f0:	movw	r1, #7448	; 0x1d18
    f8f4:	movt	r9, #1
    f8f8:	movt	r1, #1
    f8fc:	str	r9, [sp, #4]
    f900:	str	r1, [sp, #12]
    f904:	mov	r0, r7
    f908:	add	r1, sp, #176	; 0xb0
    f90c:	str	r1, [sp, #16]
    f910:	mov	r1, r6
    f914:	bl	ca7c <_start@@Base+0x17d0>
    f918:	cmp	r0, #0
    f91c:	beq	ef68 <_start@@Base+0x3cbc>
    f920:	ldr	r3, [sp, #172]	; 0xac
    f924:	cmp	r3, #0
    f928:	beq	fdc8 <_start@@Base+0x4b1c>
    f92c:	mov	r0, #16
    f930:	bl	aeac <g_malloc0@plt>
    f934:	mov	r6, r0
    f938:	ldr	r0, [sp, #172]	; 0xac
    f93c:	bl	aae0 <g_strdup@plt>
    f940:	str	r0, [r6]
    f944:	ldr	r0, [sp, #176]	; 0xb0
    f948:	bl	aae0 <g_strdup@plt>
    f94c:	mov	r1, r6
    f950:	str	r0, [r6, #4]
    f954:	ldr	r0, [r5, #24]
    f958:	bl	acf0 <g_slist_prepend@plt>
    f95c:	str	r0, [r5, #24]
    f960:	b	ef68 <_start@@Base+0x3cbc>
    f964:	bl	b060 <fputs@plt+0x28>
    f968:	b	f5b8 <_start@@Base+0x430c>
    f96c:	ldr	r0, [r5]
    f970:	mov	r1, #3
    f974:	str	ip, [sp, #112]	; 0x70
    f978:	bl	acf0 <g_slist_prepend@plt>
    f97c:	ldrb	fp, [r5, #32]
    f980:	ldr	ip, [sp, #112]	; 0x70
    f984:	ubfx	fp, fp, #1, #1
    f988:	cmp	fp, #0
    f98c:	str	r0, [r5]
    f990:	bne	fb30 <_start@@Base+0x4884>
    f994:	mov	r0, r7
    f998:	mov	r1, r6
    f99c:	mov	r2, r9
    f9a0:	mov	r3, sl
    f9a4:	str	fp, [sp, #120]	; 0x78
    f9a8:	movw	ip, #5964	; 0x174c
    f9ac:	str	fp, [sp, #124]	; 0x7c
    f9b0:	movt	ip, #1
    f9b4:	str	fp, [sp, #128]	; 0x80
    f9b8:	movw	lr, #5972	; 0x1754
    f9bc:	stm	sp, {r8, ip}
    f9c0:	movt	lr, #1
    f9c4:	str	fp, [sp, #132]	; 0x84
    f9c8:	str	lr, [sp, #12]
    f9cc:	movw	lr, #5980	; 0x175c
    f9d0:	str	fp, [sp, #136]	; 0x88
    f9d4:	movt	lr, #1
    f9d8:	str	fp, [sp, #140]	; 0x8c
    f9dc:	str	lr, [sp, #20]
    f9e0:	movw	lr, #5988	; 0x1764
    f9e4:	movt	lr, #1
    f9e8:	str	lr, [sp, #28]
    f9ec:	movw	lr, #5936	; 0x1730
    f9f0:	movt	lr, #1
    f9f4:	str	lr, [sp, #36]	; 0x24
    f9f8:	movw	lr, #5996	; 0x176c
    f9fc:	movt	lr, #1
    fa00:	str	lr, [sp, #44]	; 0x2c
    fa04:	movw	lr, #5896	; 0x1708
    fa08:	movt	lr, #1
    fa0c:	str	lr, [sp, #52]	; 0x34
    fa10:	movw	lr, #5904	; 0x1710
    fa14:	movt	lr, #1
    fa18:	str	lr, [sp, #60]	; 0x3c
    fa1c:	movw	lr, #5912	; 0x1718
    fa20:	movt	lr, #1
    fa24:	str	lr, [sp, #68]	; 0x44
    fa28:	movw	lr, #5920	; 0x1720
    fa2c:	movt	lr, #1
    fa30:	str	lr, [sp, #76]	; 0x4c
    fa34:	movw	lr, #5932	; 0x172c
    fa38:	movt	lr, #1
    fa3c:	str	lr, [sp, #84]	; 0x54
    fa40:	movw	lr, #5944	; 0x1738
    fa44:	movt	lr, #1
    fa48:	str	lr, [sp, #92]	; 0x5c
    fa4c:	movw	lr, #5956	; 0x1744
    fa50:	movt	lr, #1
    fa54:	str	lr, [sp, #100]	; 0x64
    fa58:	add	lr, sp, #120	; 0x78
    fa5c:	str	lr, [sp, #8]
    fa60:	add	lr, sp, #124	; 0x7c
    fa64:	str	lr, [sp, #16]
    fa68:	add	lr, sp, #128	; 0x80
    fa6c:	str	lr, [sp, #24]
    fa70:	add	lr, sp, #132	; 0x84
    fa74:	str	lr, [sp, #32]
    fa78:	add	lr, sp, #136	; 0x88
    fa7c:	str	lr, [sp, #40]	; 0x28
    fa80:	add	lr, sp, #140	; 0x8c
    fa84:	str	lr, [sp, #48]	; 0x30
    fa88:	add	lr, sp, #144	; 0x90
    fa8c:	str	lr, [sp, #56]	; 0x38
    fa90:	add	lr, sp, #148	; 0x94
    fa94:	str	lr, [sp, #64]	; 0x40
    fa98:	add	lr, sp, #152	; 0x98
    fa9c:	str	lr, [sp, #72]	; 0x48
    faa0:	add	lr, sp, #156	; 0x9c
    faa4:	str	lr, [sp, #80]	; 0x50
    faa8:	add	lr, sp, #160	; 0xa0
    faac:	str	lr, [sp, #88]	; 0x58
    fab0:	add	lr, sp, #164	; 0xa4
    fab4:	str	lr, [sp, #96]	; 0x60
    fab8:	add	lr, sp, #168	; 0xa8
    fabc:	str	lr, [sp, #104]	; 0x68
    fac0:	str	fp, [sp, #108]	; 0x6c
    fac4:	str	ip, [sp, #112]	; 0x70
    fac8:	bl	ca7c <_start@@Base+0x17d0>
    facc:	cmp	r0, #0
    fad0:	beq	ef68 <_start@@Base+0x3cbc>
    fad4:	ldr	r3, [sp, #120]	; 0x78
    fad8:	cmp	r3, #0
    fadc:	beq	fd90 <_start@@Base+0x4ae4>
    fae0:	mov	r1, r6
    fae4:	add	lr, sp, #172	; 0xac
    fae8:	add	ip, sp, #176	; 0xb0
    faec:	mov	r0, r7
    faf0:	mov	r2, r9
    faf4:	mov	r3, sl
    faf8:	str	lr, [sp]
    fafc:	str	ip, [sp, #4]
    fb00:	str	fp, [sp, #172]	; 0xac
    fb04:	str	fp, [sp, #176]	; 0xb0
    fb08:	bl	ccf8 <_start@@Base+0x1a4c>
    fb0c:	ldr	r1, [sp, #176]	; 0xb0
    fb10:	cmp	r1, #0
    fb14:	beq	fccc <_start@@Base+0x4a20>
    fb18:	ldr	r3, [sp, #136]	; 0x88
    fb1c:	cmp	r3, #0
    fb20:	beq	fcc4 <_start@@Base+0x4a18>
    fb24:	mov	r0, r8
    fb28:	bl	ad08 <g_propagate_error@plt>
    fb2c:	b	ef68 <_start@@Base+0x3cbc>
    fb30:	add	r1, sp, #184	; 0xb8
    fb34:	str	r8, [sp]
    fb38:	str	ip, [sp, #12]
    fb3c:	mov	r2, r9
    fb40:	str	ip, [r1, #-8]!
    fb44:	mov	r3, sl
    fb48:	str	r1, [sp, #8]
    fb4c:	movw	r9, #5964	; 0x174c
    fb50:	mov	r0, r7
    fb54:	movt	r9, #1
    fb58:	mov	r1, r6
    fb5c:	str	r9, [sp, #4]
    fb60:	bl	ca7c <_start@@Base+0x17d0>
    fb64:	cmp	r0, #0
    fb68:	beq	ef68 <_start@@Base+0x3cbc>
    fb6c:	ldr	r3, [sp, #176]	; 0xb0
    fb70:	cmp	r3, #0
    fb74:	beq	fdc8 <_start@@Base+0x4b1c>
    fb78:	ldr	r6, [r5, #8]
    fb7c:	cmp	r6, #0
    fb80:	ldrne	r6, [r6]
    fb84:	beq	fde8 <_start@@Base+0x4b3c>
    fb88:	ldr	r6, [r6, #16]
    fb8c:	cmp	r6, #0
    fb90:	beq	fbc8 <_start@@Base+0x491c>
    fb94:	ldr	r8, [sp, #176]	; 0xb0
    fb98:	b	fba8 <_start@@Base+0x48fc>
    fb9c:	ldr	r6, [r6, #4]
    fba0:	cmp	r6, #0
    fba4:	beq	fbc8 <_start@@Base+0x491c>
    fba8:	ldr	r7, [r6]
    fbac:	mov	r1, r8
    fbb0:	ldr	r0, [r7, #4]
    fbb4:	bl	afe4 <strcmp@plt>
    fbb8:	cmp	r0, #0
    fbbc:	bne	fb9c <_start@@Base+0x48f0>
    fbc0:	str	r7, [r5, #12]
    fbc4:	b	ef68 <_start@@Base+0x3cbc>
    fbc8:	mov	r7, r6
    fbcc:	b	fbc0 <_start@@Base+0x4914>
    fbd0:	str	r3, [sp, #12]
    fbd4:	add	lr, sp, #176	; 0xb0
    fbd8:	mov	r0, r7
    fbdc:	mov	r1, r6
    fbe0:	mov	r2, r9
    fbe4:	mov	r3, sl
    fbe8:	movw	ip, #7448	; 0x1d18
    fbec:	movt	ip, #1
    fbf0:	stmib	sp, {ip, lr}
    fbf4:	bl	ca7c <_start@@Base+0x17d0>
    fbf8:	cmp	r0, #0
    fbfc:	beq	ef68 <_start@@Base+0x3cbc>
    fc00:	ldr	r3, [r5, #28]
    fc04:	str	r3, [sp, #172]	; 0xac
    fc08:	b	f92c <_start@@Base+0x4680>
    fc0c:	bl	b060 <fputs@plt+0x28>
    fc10:	b	f5d0 <_start@@Base+0x4324>
    fc14:	bl	ac78 <gconf_value_free@plt>
    fc18:	movw	r0, #5492	; 0x1574
    fc1c:	movw	r1, #7312	; 0x1c90
    fc20:	movt	r0, #1
    fc24:	movt	r1, #1
    fc28:	bl	afc0 <g_dgettext@plt>
    fc2c:	cmp	fp, #8
    fc30:	movw	ip, #5144	; 0x1418
    fc34:	movt	ip, #1
    fc38:	movw	r2, #5132	; 0x140c
    fc3c:	mov	r1, r7
    fc40:	movt	r2, #1
    fc44:	movne	r2, ip
    fc48:	movw	ip, #7540	; 0x1d74
    fc4c:	str	r2, [sp]
    fc50:	movt	ip, #1
    fc54:	mov	r2, #6
    fc58:	str	ip, [sp, #4]
    fc5c:	mov	r3, r0
    fc60:	mov	r0, r8
    fc64:	bl	c9c4 <_start@@Base+0x1718>
    fc68:	b	ef68 <_start@@Base+0x3cbc>
    fc6c:	ldr	r3, [r5, #4]
    fc70:	mov	r1, r9
    fc74:	mov	r2, r8
    fc78:	ldr	r0, [r3]
    fc7c:	bl	b480 <_start@@Base+0x1d4>
    fc80:	ldrb	r3, [r0, #29]
    fc84:	mov	r7, r0
    fc88:	orr	r3, r3, #1
    fc8c:	strb	r3, [r0, #29]
    fc90:	b	f894 <_start@@Base+0x45e8>
    fc94:	bl	b060 <fputs@plt+0x28>
    fc98:	b	ef30 <_start@@Base+0x3c84>
    fc9c:	ldr	r3, [r5, #4]
    fca0:	mov	r1, r9
    fca4:	mov	r2, r8
    fca8:	ldr	r0, [r3]
    fcac:	bl	b480 <_start@@Base+0x1d4>
    fcb0:	ldrb	r3, [r0, #28]
    fcb4:	mov	r7, r0
    fcb8:	orr	r3, r3, #37	; 0x25
    fcbc:	strb	r3, [r0, #28]
    fcc0:	b	f894 <_start@@Base+0x45e8>
    fcc4:	mov	r0, r1
    fcc8:	bl	af3c <g_error_free@plt>
    fccc:	ldr	r6, [r5, #8]
    fcd0:	cmp	r6, #0
    fcd4:	ldrne	r0, [r6]
    fcd8:	beq	ff20 <_start@@Base+0x4c74>
    fcdc:	ldr	r1, [sp, #120]	; 0x78
    fce0:	bl	b3f4 <_start@@Base+0x148>
    fce4:	ldr	r1, [sp, #172]	; 0xac
    fce8:	cmp	r1, #0
    fcec:	mov	r7, r0
    fcf0:	beq	fd04 <_start@@Base+0x4a58>
    fcf4:	str	r1, [r0, #8]
    fcf8:	ldr	r0, [r5, #16]
    fcfc:	bl	acf0 <g_slist_prepend@plt>
    fd00:	str	r0, [r5, #16]
    fd04:	ldr	r6, [sp, #124]	; 0x7c
    fd08:	cmp	r6, #0
    fd0c:	beq	fd2c <_start@@Base+0x4a80>
    fd10:	ldr	r0, [r7, #20]
    fd14:	cmp	r6, r0
    fd18:	beq	fd2c <_start@@Base+0x4a80>
    fd1c:	bl	a9b4 <g_free@plt>
    fd20:	mov	r0, r6
    fd24:	bl	aae0 <g_strdup@plt>
    fd28:	str	r0, [r7, #20]
    fd2c:	ldr	r0, [sp, #128]	; 0x80
    fd30:	cmp	r0, #0
    fd34:	beq	fd40 <_start@@Base+0x4a94>
    fd38:	bl	af30 <gconf_string_to_gulong@plt>
    fd3c:	str	r0, [r7, #24]
    fd40:	ldr	r0, [sp, #132]	; 0x84
    fd44:	cmp	r0, #0
    fd48:	beq	fd54 <_start@@Base+0x4aa8>
    fd4c:	bl	aae0 <g_strdup@plt>
    fd50:	str	r0, [r7, #16]
    fd54:	ldr	r0, [sp, #140]	; 0x8c
    fd58:	cmp	r0, #0
    fd5c:	beq	fbc0 <_start@@Base+0x4914>
    fd60:	bl	af78 <g_intern_string@plt>
    fd64:	str	r0, [r7, #28]
    fd68:	b	fbc0 <_start@@Base+0x4914>
    fd6c:	ldr	r3, [sp, #116]	; 0x74
    fd70:	mov	r1, r0
    fd74:	str	r0, [r3, #12]
    fd78:	ldr	r0, [r5, #16]
    fd7c:	bl	acf0 <g_slist_prepend@plt>
    fd80:	str	r0, [r5, #16]
    fd84:	b	ef68 <_start@@Base+0x3cbc>
    fd88:	bl	b060 <fputs@plt+0x28>
    fd8c:	b	ef48 <_start@@Base+0x3c9c>
    fd90:	movw	r0, #5492	; 0x1574
    fd94:	movw	r1, #6068	; 0x17b4
    fd98:	movt	r0, #1
    fd9c:	movt	r1, #1
    fda0:	bl	afc0 <g_dgettext@plt>
    fda4:	ldr	ip, [sp, #112]	; 0x70
    fda8:	str	ip, [sp]
    fdac:	mov	r3, r0
    fdb0:	str	r6, [sp, #4]
    fdb4:	mov	r0, r8
    fdb8:	mov	r1, r7
    fdbc:	mov	r2, #6
    fdc0:	bl	c9c4 <_start@@Base+0x1718>
    fdc4:	b	ef68 <_start@@Base+0x3cbc>
    fdc8:	movw	r0, #5492	; 0x1574
    fdcc:	movw	r1, #6068	; 0x17b4
    fdd0:	movt	r0, #1
    fdd4:	movt	r1, #1
    fdd8:	bl	afc0 <g_dgettext@plt>
    fddc:	str	r9, [sp]
    fde0:	mov	r3, r0
    fde4:	b	fdb0 <_start@@Base+0x4b04>
    fde8:	movw	r0, #4852	; 0x12f4
    fdec:	movw	r2, #5684	; 0x1634
    fdf0:	movt	r0, #1
    fdf4:	movt	r2, #1
    fdf8:	ldr	r1, [pc, #336]	; ff50 <_start@@Base+0x4ca4>
    fdfc:	bl	ad80 <g_return_if_fail_warning@plt>
    fe00:	b	fb88 <_start@@Base+0x48dc>
    fe04:	movw	r0, #4852	; 0x12f4
    fe08:	movw	r2, #5684	; 0x1634
    fe0c:	movt	r0, #1
    fe10:	movt	r2, #1
    fe14:	ldr	r1, [pc, #308]	; ff50 <_start@@Base+0x4ca4>
    fe18:	mov	r9, ip
    fe1c:	bl	ad80 <g_return_if_fail_warning@plt>
    fe20:	ldr	r8, [sp, #176]	; 0xb0
    fe24:	b	f854 <_start@@Base+0x45a8>
    fe28:	mov	r0, r6
    fe2c:	ldr	sl, [r3]
    fe30:	bl	ae40 <gconf_value_get_list_type@plt>
    fe34:	cmp	sl, r0
    fe38:	beq	fef0 <_start@@Base+0x4c44>
    fe3c:	ldr	r0, [sp, #176]	; 0xb0
    fe40:	bl	ac78 <gconf_value_free@plt>
    fe44:	movw	r0, #5492	; 0x1574
    fe48:	movw	r1, #7548	; 0x1d7c
    fe4c:	movt	r0, #1
    fe50:	movt	r1, #1
    fe54:	bl	afc0 <g_dgettext@plt>
    fe58:	ldr	r3, [sp, #176]	; 0xb0
    fe5c:	mov	r5, r0
    fe60:	ldr	r0, [r3]
    fe64:	bl	ad14 <gconf_value_type_to_string@plt>
    fe68:	mov	r3, r5
    fe6c:	mov	r1, r7
    fe70:	mov	r2, r9
    fe74:	str	r0, [sp]
    fe78:	mov	r0, r8
    fe7c:	bl	c9c4 <_start@@Base+0x1718>
    fe80:	b	ef68 <_start@@Base+0x3cbc>
    fe84:	movw	r0, #5492	; 0x1574
    fe88:	movw	r1, #7256	; 0x1c58
    fe8c:	movt	r0, #1
    fe90:	movt	r1, #1
    fe94:	b	f1e8 <_start@@Base+0x3f3c>
    fe98:	bl	a9a8 <gconf_value_get_car@plt>
    fe9c:	cmp	r0, #0
    fea0:	beq	ff54 <_start@@Base+0x4ca8>
    fea4:	ldr	r0, [sp, #176]	; 0xb0
    fea8:	bl	ac78 <gconf_value_free@plt>
    feac:	movw	r0, #5492	; 0x1574
    feb0:	movw	r1, #7460	; 0x1d24
    feb4:	movt	r0, #1
    feb8:	movt	r1, #1
    febc:	b	f3d8 <_start@@Base+0x412c>
    fec0:	bl	b060 <fputs@plt+0x28>
    fec4:	ldr	r0, [r5]
    fec8:	b	f400 <_start@@Base+0x4154>
    fecc:	bl	ae58 <__stack_chk_fail@plt>
    fed0:	mov	r0, r6
    fed4:	ldr	r1, [sp, #176]	; 0xb0
    fed8:	bl	abdc <gconf_value_set_cdr_nocopy@plt>
    fedc:	ldr	r0, [r5, #16]
    fee0:	ldr	r1, [sp, #176]	; 0xb0
    fee4:	bl	acf0 <g_slist_prepend@plt>
    fee8:	str	r0, [r5, #16]
    feec:	b	ef68 <_start@@Base+0x3cbc>
    fef0:	mov	r0, r6
    fef4:	bl	af54 <gconf_value_steal_list@plt>
    fef8:	ldr	r1, [sp, #176]	; 0xb0
    fefc:	bl	ac30 <g_slist_append@plt>
    ff00:	mov	r1, r0
    ff04:	mov	r0, r6
    ff08:	bl	af48 <gconf_value_set_list_nocopy@plt>
    ff0c:	ldr	r0, [r5, #16]
    ff10:	ldr	r1, [sp, #176]	; 0xb0
    ff14:	bl	acf0 <g_slist_prepend@plt>
    ff18:	str	r0, [r5, #16]
    ff1c:	b	ef68 <_start@@Base+0x3cbc>
    ff20:	movw	r0, #4852	; 0x12f4
    ff24:	movw	r2, #5684	; 0x1634
    ff28:	movt	r0, #1
    ff2c:	movt	r2, #1
    ff30:	ldr	r1, [pc, #24]	; ff50 <_start@@Base+0x4ca4>
    ff34:	bl	ad80 <g_return_if_fail_warning@plt>
    ff38:	mov	r0, r6
    ff3c:	b	fcdc <_start@@Base+0x4a30>
    ff40:	andeq	r1, r1, r4, ror #2
    ff44:	andeq	r1, r1, r8, ror r1
    ff48:	andeq	r1, r1, r4, lsr #2
    ff4c:	andeq	r1, r1, r0, asr #2
    ff50:	andeq	r1, r1, r4, asr r1
    ff54:	mov	r0, r6
    ff58:	ldr	r1, [sp, #176]	; 0xb0
    ff5c:	bl	add4 <gconf_value_set_car_nocopy@plt>
    ff60:	ldr	r0, [r5, #16]
    ff64:	ldr	r1, [sp, #176]	; 0xb0
    ff68:	bl	acf0 <g_slist_prepend@plt>
    ff6c:	str	r0, [r5, #16]
    ff70:	b	ef68 <_start@@Base+0x3cbc>

0000ff74 <markup_tree_get@@Base>:
    ff74:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    ff78:	movw	r4, #45688	; 0xb278
    ff7c:	movt	r4, #1
    ff80:	mov	r6, r0
    ff84:	mov	r8, r1
    ff88:	mov	r7, r2
    ff8c:	ldr	r0, [r4]
    ff90:	mov	r5, r3
    ff94:	cmp	r0, #0
    ff98:	beq	ffe4 <markup_tree_get@@Base+0x70>
    ff9c:	mov	r1, r6
    ffa0:	bl	ae88 <g_hash_table_lookup@plt>
    ffa4:	subs	ip, r0, #0
    ffa8:	beq	fffc <markup_tree_get@@Base+0x88>
    ffac:	ldr	r3, [ip, #16]
    ffb0:	cmp	r5, #0
    ffb4:	add	r3, r3, #1
    ffb8:	str	r3, [ip, #16]
    ffbc:	beq	ffdc <markup_tree_get@@Base+0x68>
    ffc0:	ldrb	r3, [ip, #20]
    ffc4:	tst	r3, #1
    ffc8:	bne	ffdc <markup_tree_get@@Base+0x68>
    ffcc:	orr	r3, r3, #1
    ffd0:	mov	r0, ip
    ffd4:	strb	r3, [ip, #20]
    ffd8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    ffdc:	mov	r0, ip
    ffe0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    ffe4:	movw	r0, #43612	; 0xaa5c
    ffe8:	movw	r1, #45040	; 0xaff0
    ffec:	movt	r0, #0
    fff0:	movt	r1, #0
    fff4:	bl	ac9c <g_hash_table_new@plt>
    fff8:	str	r0, [r4]
    fffc:	mov	r0, #24
   10000:	bl	aeac <g_malloc0@plt>
   10004:	mov	r9, r0
   10008:	mov	r0, r6
   1000c:	bl	aae0 <g_strdup@plt>
   10010:	adds	r5, r5, #0
   10014:	ldrb	r3, [r9, #20]
   10018:	mov	r1, #0
   1001c:	movw	r2, #7964	; 0x1f1c
   10020:	movt	r2, #1
   10024:	movne	r5, #1
   10028:	str	r8, [r9, #4]
   1002c:	bfi	r3, r5, #0, #1
   10030:	str	r7, [r9, #8]
   10034:	strb	r3, [r9, #20]
   10038:	str	r0, [r9]
   1003c:	mov	r0, r9
   10040:	bl	b480 <_start@@Base+0x1d4>
   10044:	ldr	r1, [r9]
   10048:	mov	r2, r9
   1004c:	mov	r3, #1
   10050:	str	r3, [r9, #16]
   10054:	str	r0, [r9, #12]
   10058:	ldr	r0, [r4]
   1005c:	bl	ab4c <g_hash_table_insert@plt>
   10060:	mov	r0, r9
   10064:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

00010068 <markup_tree_unref@@Base>:
   10068:	push	{r4, r5, r6, lr}
   1006c:	subs	r4, r0, #0
   10070:	beq	100f4 <markup_tree_unref@@Base+0x8c>
   10074:	ldr	r3, [r4, #16]
   10078:	cmp	r3, #0
   1007c:	beq	100d8 <markup_tree_unref@@Base+0x70>
   10080:	cmp	r3, #1
   10084:	subhi	r3, r3, #1
   10088:	strhi	r3, [r4, #16]
   1008c:	pophi	{r4, r5, r6, pc}
   10090:	movw	r5, #45688	; 0xb278
   10094:	movt	r5, #1
   10098:	ldr	r1, [r4]
   1009c:	ldr	r0, [r5]
   100a0:	bl	abd0 <g_hash_table_remove@plt>
   100a4:	ldr	r0, [r5]
   100a8:	bl	ac84 <g_hash_table_size@plt>
   100ac:	subs	r6, r0, #0
   100b0:	beq	10110 <markup_tree_unref@@Base+0xa8>
   100b4:	ldr	r0, [r4, #12]
   100b8:	bl	b57c <_start@@Base+0x2d0>
   100bc:	ldr	r0, [r4]
   100c0:	mov	r3, #0
   100c4:	str	r3, [r4, #12]
   100c8:	bl	a9b4 <g_free@plt>
   100cc:	mov	r0, r4
   100d0:	pop	{r4, r5, r6, lr}
   100d4:	b	a9b4 <g_free@plt>
   100d8:	movw	r0, #4852	; 0x12f4
   100dc:	movw	r2, #7984	; 0x1f30
   100e0:	movt	r0, #1
   100e4:	movt	r2, #1
   100e8:	ldr	r1, [pc, #48]	; 10120 <markup_tree_unref@@Base+0xb8>
   100ec:	pop	{r4, r5, r6, lr}
   100f0:	b	ad80 <g_return_if_fail_warning@plt>
   100f4:	movw	r0, #4852	; 0x12f4
   100f8:	movw	r2, #7968	; 0x1f20
   100fc:	movt	r0, #1
   10100:	movt	r2, #1
   10104:	ldr	r1, [pc, #20]	; 10120 <markup_tree_unref@@Base+0xb8>
   10108:	pop	{r4, r5, r6, lr}
   1010c:	b	ad80 <g_return_if_fail_warning@plt>
   10110:	ldr	r0, [r5]
   10114:	bl	aa44 <g_hash_table_destroy@plt>
   10118:	str	r6, [r5]
   1011c:	b	100b4 <markup_tree_unref@@Base+0x4c>
   10120:	muleq	r1, ip, r1

00010124 <markup_tree_rebuild@@Base>:
   10124:	push	{r3, r4, r5, lr}
   10128:	mov	r4, r0
   1012c:	ldr	r0, [r0, #12]
   10130:	ldrb	r1, [r0, #28]
   10134:	ands	r5, r1, #10
   10138:	beq	10158 <markup_tree_rebuild@@Base+0x34>
   1013c:	movw	r0, #4852	; 0x12f4
   10140:	movw	r2, #8004	; 0x1f44
   10144:	movt	r0, #1
   10148:	movt	r2, #1
   1014c:	ldr	r1, [pc, #36]	; 10178 <markup_tree_rebuild@@Base+0x54>
   10150:	pop	{r3, r4, r5, lr}
   10154:	b	ad80 <g_return_if_fail_warning@plt>
   10158:	bl	b57c <_start@@Base+0x2d0>
   1015c:	mov	r0, r4
   10160:	mov	r1, r5
   10164:	movw	r2, #7964	; 0x1f1c
   10168:	movt	r2, #1
   1016c:	bl	b480 <_start@@Base+0x1d4>
   10170:	str	r0, [r4, #12]
   10174:	pop	{r3, r4, r5, pc}
   10178:			; <UNDEFINED> instruction: 0x000111b0

0001017c <markup_tree_sync@@Base>:
   1017c:	ldr	r0, [r0, #12]
   10180:	push	{r4, r5, r6, lr}
   10184:	mov	r4, r1
   10188:	ldrb	r3, [r0, #28]
   1018c:	tst	r3, #10
   10190:	bne	1019c <markup_tree_sync@@Base+0x20>
   10194:	mov	r0, #1
   10198:	pop	{r4, r5, r6, pc}
   1019c:	bl	ea60 <_start@@Base+0x37b4>
   101a0:	subs	r5, r0, #0
   101a4:	bne	10194 <markup_tree_sync@@Base+0x18>
   101a8:	bl	aea0 <gconf_error_quark@plt>
   101ac:	movw	r1, #8040	; 0x1f68
   101b0:	movt	r1, #1
   101b4:	mov	r6, r0
   101b8:	movw	r0, #5492	; 0x1574
   101bc:	movt	r0, #1
   101c0:	bl	afc0 <g_dgettext@plt>
   101c4:	mov	r1, r6
   101c8:	mov	r2, #1
   101cc:	mov	r3, r0
   101d0:	mov	r0, r4
   101d4:	bl	adb0 <g_set_error@plt>
   101d8:	mov	r0, r5
   101dc:	pop	{r4, r5, r6, pc}

000101e0 <markup_dir_lookup_entry@@Base>:
   101e0:	push	{r4, r5, r6, lr}
   101e4:	mov	r4, r0
   101e8:	mov	r6, r1
   101ec:	bl	e14c <_start@@Base+0x2ea0>
   101f0:	ldr	r4, [r4, #16]
   101f4:	cmp	r4, #0
   101f8:	bne	1020c <markup_dir_lookup_entry@@Base+0x2c>
   101fc:	b	1022c <markup_dir_lookup_entry@@Base+0x4c>
   10200:	ldr	r4, [r4, #4]
   10204:	cmp	r4, #0
   10208:	beq	1022c <markup_dir_lookup_entry@@Base+0x4c>
   1020c:	ldr	r5, [r4]
   10210:	mov	r0, r6
   10214:	ldr	r1, [r5, #4]
   10218:	bl	afe4 <strcmp@plt>
   1021c:	cmp	r0, #0
   10220:	bne	10200 <markup_dir_lookup_entry@@Base+0x20>
   10224:	mov	r0, r5
   10228:	pop	{r4, r5, r6, pc}
   1022c:	mov	r0, r4
   10230:	pop	{r4, r5, r6, pc}

00010234 <markup_dir_ensure_entry@@Base>:
   10234:	push	{r4, r5, r6, r7, r8, lr}
   10238:	movw	r4, #45672	; 0xb268
   1023c:	movt	r4, #1
   10240:	sub	sp, sp, #8
   10244:	add	r3, sp, #8
   10248:	mov	r7, r2
   1024c:	ldr	ip, [r4]
   10250:	mov	r2, sp
   10254:	mov	r5, #0
   10258:	mov	r8, r1
   1025c:	str	r5, [r3, #-8]!
   10260:	mov	r6, r0
   10264:	str	ip, [sp, #4]
   10268:	bl	101e0 <markup_dir_lookup_entry@@Base>
   1026c:	ldr	r1, [sp]
   10270:	cmp	r1, r5
   10274:	bne	10298 <markup_dir_ensure_entry@@Base+0x64>
   10278:	cmp	r0, #0
   1027c:	beq	102a8 <markup_dir_ensure_entry@@Base+0x74>
   10280:	ldr	r2, [sp, #4]
   10284:	ldr	r3, [r4]
   10288:	cmp	r2, r3
   1028c:	bne	10318 <markup_dir_ensure_entry@@Base+0xe4>
   10290:	add	sp, sp, #8
   10294:	pop	{r4, r5, r6, r7, r8, pc}
   10298:	mov	r0, r7
   1029c:	bl	ad08 <g_propagate_error@plt>
   102a0:	mov	r0, r5
   102a4:	b	10280 <markup_dir_ensure_entry@@Base+0x4c>
   102a8:	ldrb	r0, [r6, #28]
   102ac:	ands	r5, r0, #1
   102b0:	beq	102f8 <markup_dir_ensure_entry@@Base+0xc4>
   102b4:	mov	r1, r8
   102b8:	mov	r0, r6
   102bc:	bl	b3f4 <_start@@Base+0x148>
   102c0:	mov	r5, r0
   102c4:	mov	r0, r6
   102c8:	bl	b610 <_start@@Base+0x364>
   102cc:	ldr	r3, [r6, #4]
   102d0:	cmp	r3, #0
   102d4:	beq	102f0 <markup_dir_ensure_entry@@Base+0xbc>
   102d8:	ldrb	r2, [r3, #28]
   102dc:	orr	r2, r2, #8
   102e0:	strb	r2, [r3, #28]
   102e4:	ldr	r3, [r3, #4]
   102e8:	cmp	r3, #0
   102ec:	bne	102d8 <markup_dir_ensure_entry@@Base+0xa4>
   102f0:	mov	r0, r5
   102f4:	b	10280 <markup_dir_ensure_entry@@Base+0x4c>
   102f8:	movw	r0, #4852	; 0x12f4
   102fc:	movw	r2, #7108	; 0x1bc4
   10300:	movt	r0, #1
   10304:	movt	r2, #1
   10308:	ldr	r1, [pc, #12]	; 1031c <markup_dir_ensure_entry@@Base+0xe8>
   1030c:	bl	ad80 <g_return_if_fail_warning@plt>
   10310:	mov	r0, r5
   10314:	b	10280 <markup_dir_ensure_entry@@Base+0x4c>
   10318:	bl	ae58 <__stack_chk_fail@plt>
   1031c:	andeq	r1, r1, r4, asr #3

00010320 <markup_dir_lookup_subdir@@Base>:
   10320:	push	{r4, r5, r6, lr}
   10324:	mov	r4, r0
   10328:	mov	r6, r1
   1032c:	bl	df3c <_start@@Base+0x2c90>
   10330:	ldr	r4, [r4, #20]
   10334:	cmp	r4, #0
   10338:	bne	1034c <markup_dir_lookup_subdir@@Base+0x2c>
   1033c:	b	1036c <markup_dir_lookup_subdir@@Base+0x4c>
   10340:	ldr	r4, [r4, #4]
   10344:	cmp	r4, #0
   10348:	beq	1036c <markup_dir_lookup_subdir@@Base+0x4c>
   1034c:	ldr	r5, [r4]
   10350:	mov	r1, r6
   10354:	ldr	r0, [r5, #12]
   10358:	bl	afe4 <strcmp@plt>
   1035c:	cmp	r0, #0
   10360:	bne	10340 <markup_dir_lookup_subdir@@Base+0x20>
   10364:	mov	r0, r5
   10368:	pop	{r4, r5, r6, pc}
   1036c:	mov	r0, r4
   10370:	pop	{r4, r5, r6, pc}

00010374 <markup_dir_ensure_subdir@@Base>:
   10374:	push	{r4, r5, r6, r7, r8, lr}
   10378:	movw	r4, #45672	; 0xb268
   1037c:	movt	r4, #1
   10380:	sub	sp, sp, #8
   10384:	add	r3, sp, #8
   10388:	mov	r7, r2
   1038c:	ldr	ip, [r4]
   10390:	mov	r2, sp
   10394:	mov	r5, #0
   10398:	mov	r8, r1
   1039c:	str	r5, [r3, #-8]!
   103a0:	mov	r6, r0
   103a4:	str	ip, [sp, #4]
   103a8:	bl	10320 <markup_dir_lookup_subdir@@Base>
   103ac:	ldr	r1, [sp]
   103b0:	cmp	r1, r5
   103b4:	bne	103d8 <markup_dir_ensure_subdir@@Base+0x64>
   103b8:	cmp	r0, #0
   103bc:	beq	103e8 <markup_dir_ensure_subdir@@Base+0x74>
   103c0:	ldr	r2, [sp, #4]
   103c4:	ldr	r3, [r4]
   103c8:	cmp	r2, r3
   103cc:	bne	10444 <markup_dir_ensure_subdir@@Base+0xd0>
   103d0:	add	sp, sp, #8
   103d4:	pop	{r4, r5, r6, r7, r8, pc}
   103d8:	mov	r0, r7
   103dc:	bl	ad08 <g_propagate_error@plt>
   103e0:	mov	r0, r5
   103e4:	b	103c0 <markup_dir_ensure_subdir@@Base+0x4c>
   103e8:	ldrb	r5, [r6, #28]
   103ec:	ubfx	r5, r5, #2, #1
   103f0:	cmp	r5, #0
   103f4:	beq	10424 <markup_dir_ensure_subdir@@Base+0xb0>
   103f8:	mov	r2, r8
   103fc:	mov	r1, r6
   10400:	ldr	r0, [r6]
   10404:	bl	b480 <_start@@Base+0x1d4>
   10408:	mov	r5, r0
   1040c:	bl	b610 <_start@@Base+0x364>
   10410:	ldrb	r3, [r5, #28]
   10414:	mov	r0, r5
   10418:	orr	r3, r3, #5
   1041c:	strb	r3, [r5, #28]
   10420:	b	103c0 <markup_dir_ensure_subdir@@Base+0x4c>
   10424:	movw	r0, #4852	; 0x12f4
   10428:	movw	r2, #7128	; 0x1bd8
   1042c:	movt	r0, #1
   10430:	movt	r2, #1
   10434:	ldr	r1, [pc, #12]	; 10448 <markup_dir_ensure_subdir@@Base+0xd4>
   10438:	bl	ad80 <g_return_if_fail_warning@plt>
   1043c:	mov	r0, r5
   10440:	b	103c0 <markup_dir_ensure_subdir@@Base+0x4c>
   10444:	bl	ae58 <__stack_chk_fail@plt>
   10448:	ldrdeq	r1, [r1], -ip
   1044c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10450:	movw	r8, #45672	; 0xb268
   10454:	movt	r8, #1
   10458:	ldrb	ip, [r1]
   1045c:	mov	r6, r2
   10460:	sub	sp, sp, #8
   10464:	ldr	r2, [r8]
   10468:	cmp	ip, #47	; 0x2f
   1046c:	mov	r4, r0
   10470:	mov	sl, r3
   10474:	str	r2, [sp, #4]
   10478:	beq	104b0 <markup_dir_ensure_subdir@@Base+0x13c>
   1047c:	movw	r0, #4852	; 0x12f4
   10480:	movw	r2, #8092	; 0x1f9c
   10484:	movt	r0, #1
   10488:	movt	r2, #1
   1048c:	ldr	r1, [pc, #196]	; 10558 <markup_dir_ensure_subdir@@Base+0x1e4>
   10490:	bl	ad80 <g_return_if_fail_warning@plt>
   10494:	mov	r0, #0
   10498:	ldr	r2, [sp, #4]
   1049c:	ldr	r3, [r8]
   104a0:	cmp	r2, r3
   104a4:	bne	10554 <markup_dir_ensure_subdir@@Base+0x1e0>
   104a8:	add	sp, sp, #8
   104ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   104b0:	add	r0, r1, #1
   104b4:	mvn	r2, #0
   104b8:	movw	r1, #7964	; 0x1f1c
   104bc:	movt	r1, #1
   104c0:	bl	ae7c <g_strsplit@plt>
   104c4:	ldr	r4, [r4]
   104c8:	subs	r9, r0, #0
   104cc:	beq	10544 <markup_dir_ensure_subdir@@Base+0x1d0>
   104d0:	ldr	r1, [r9]
   104d4:	cmp	r1, #0
   104d8:	beq	10544 <markup_dir_ensure_subdir@@Base+0x1d0>
   104dc:	mov	r5, r9
   104e0:	mov	r7, #0
   104e4:	b	10510 <markup_dir_ensure_subdir@@Base+0x19c>
   104e8:	bl	10374 <markup_dir_ensure_subdir@@Base>
   104ec:	ldr	r1, [sp]
   104f0:	cmp	r1, #0
   104f4:	mov	r4, r0
   104f8:	bne	10538 <markup_dir_ensure_subdir@@Base+0x1c4>
   104fc:	cmp	r4, #0
   10500:	beq	10540 <markup_dir_ensure_subdir@@Base+0x1cc>
   10504:	ldr	r1, [r5, #4]!
   10508:	cmp	r1, #0
   1050c:	beq	10544 <markup_dir_ensure_subdir@@Base+0x1d0>
   10510:	cmp	r6, #0
   10514:	mov	r0, r4
   10518:	mov	r2, sp
   1051c:	str	r7, [sp]
   10520:	bne	104e8 <markup_dir_ensure_subdir@@Base+0x174>
   10524:	bl	10320 <markup_dir_lookup_subdir@@Base>
   10528:	ldr	r1, [sp]
   1052c:	cmp	r1, #0
   10530:	mov	r4, r0
   10534:	beq	104fc <markup_dir_ensure_subdir@@Base+0x188>
   10538:	mov	r0, sl
   1053c:	bl	ad08 <g_propagate_error@plt>
   10540:	mov	r4, #0
   10544:	mov	r0, r9
   10548:	bl	af60 <g_strfreev@plt>
   1054c:	mov	r0, r4
   10550:	b	10498 <markup_dir_ensure_subdir@@Base+0x124>
   10554:	bl	ae58 <__stack_chk_fail@plt>
   10558:	strdeq	r1, [r1], -r8

0001055c <markup_tree_lookup_dir@@Base>:
   1055c:	mov	r3, r2
   10560:	add	r0, r0, #12
   10564:	mov	r2, #0
   10568:	b	1044c <markup_dir_ensure_subdir@@Base+0xd8>

0001056c <markup_tree_ensure_dir@@Base>:
   1056c:	mov	r3, r2
   10570:	add	r0, r0, #12
   10574:	mov	r2, #1
   10578:	b	1044c <markup_dir_ensure_subdir@@Base+0xd8>

0001057c <markup_dir_list_entries@@Base>:
   1057c:	push	{r4, lr}
   10580:	mov	r4, r0
   10584:	bl	e14c <_start@@Base+0x2ea0>
   10588:	ldr	r0, [r4, #16]
   1058c:	pop	{r4, pc}

00010590 <markup_dir_list_subdirs@@Base>:
   10590:	push	{r4, lr}
   10594:	mov	r4, r0
   10598:	bl	df3c <_start@@Base+0x2c90>
   1059c:	ldr	r0, [r4, #20]
   105a0:	pop	{r4, pc}

000105a4 <markup_dir_get_name@@Base>:
   105a4:	ldr	r0, [r0, #12]
   105a8:	bx	lr

000105ac <markup_entry_set_value@@Base>:
   105ac:	ldr	r3, [r0]
   105b0:	push	{r4, r5, r6, r7, r8, lr}
   105b4:	cmp	r3, #0
   105b8:	sub	sp, sp, #8
   105bc:	mov	r4, r0
   105c0:	mov	r5, r1
   105c4:	beq	106c0 <markup_entry_set_value@@Base+0x114>
   105c8:	ldrb	r3, [r3, #28]
   105cc:	tst	r3, #1
   105d0:	bne	105f4 <markup_entry_set_value@@Base+0x48>
   105d4:	movw	r0, #4852	; 0x12f4
   105d8:	movw	r2, #8136	; 0x1fc8
   105dc:	movt	r0, #1
   105e0:	movt	r2, #1
   105e4:	ldr	r1, [pc, #760]	; 108e4 <markup_entry_set_value@@Base+0x338>
   105e8:	add	sp, sp, #8
   105ec:	pop	{r4, r5, r6, r7, r8, lr}
   105f0:	b	ad80 <g_return_if_fail_warning@plt>
   105f4:	cmp	r1, #0
   105f8:	beq	106a0 <markup_entry_set_value@@Base+0xf4>
   105fc:	ldr	r3, [r1]
   10600:	cmp	r3, #5
   10604:	beq	106e0 <markup_entry_set_value@@Base+0x134>
   10608:	ldr	r0, [r4, #8]
   1060c:	cmp	r0, r5
   10610:	beq	10698 <markup_entry_set_value@@Base+0xec>
   10614:	cmp	r0, #0
   10618:	beq	10620 <markup_entry_set_value@@Base+0x74>
   1061c:	bl	ac78 <gconf_value_free@plt>
   10620:	mov	r0, r5
   10624:	bl	abf4 <gconf_value_copy@plt>
   10628:	ldr	r3, [r4, #12]
   1062c:	cmp	r3, #0
   10630:	str	r0, [r4, #8]
   10634:	beq	1065c <markup_entry_set_value@@Base+0xb0>
   10638:	mov	r0, r3
   1063c:	mov	r2, #0
   10640:	movw	r1, #46312	; 0xb4e8
   10644:	movt	r1, #0
   10648:	bl	adf8 <g_slist_foreach@plt>
   1064c:	ldr	r0, [r4, #12]
   10650:	bl	aa2c <g_slist_free@plt>
   10654:	mov	r3, #0
   10658:	str	r3, [r4, #12]
   1065c:	mov	r0, #0
   10660:	bl	ae1c <time@plt>
   10664:	str	r0, [r4, #24]
   10668:	ldr	r0, [r4]
   1066c:	bl	b610 <_start@@Base+0x364>
   10670:	ldr	r3, [r4]
   10674:	ldr	r3, [r3, #4]
   10678:	cmp	r3, #0
   1067c:	beq	10698 <markup_entry_set_value@@Base+0xec>
   10680:	ldrb	r2, [r3, #28]
   10684:	orr	r2, r2, #8
   10688:	strb	r2, [r3, #28]
   1068c:	ldr	r3, [r3, #4]
   10690:	cmp	r3, #0
   10694:	bne	10680 <markup_entry_set_value@@Base+0xd4>
   10698:	add	sp, sp, #8
   1069c:	pop	{r4, r5, r6, r7, r8, pc}
   106a0:	movw	r0, #4852	; 0x12f4
   106a4:	movw	r2, #8164	; 0x1fe4
   106a8:	movt	r0, #1
   106ac:	movt	r2, #1
   106b0:	ldr	r1, [pc, #556]	; 108e4 <markup_entry_set_value@@Base+0x338>
   106b4:	add	sp, sp, #8
   106b8:	pop	{r4, r5, r6, r7, r8, lr}
   106bc:	b	ad80 <g_return_if_fail_warning@plt>
   106c0:	movw	r0, #4852	; 0x12f4
   106c4:	movw	r2, #8116	; 0x1fb4
   106c8:	movt	r0, #1
   106cc:	movt	r2, #1
   106d0:	ldr	r1, [pc, #524]	; 108e4 <markup_entry_set_value@@Base+0x338>
   106d4:	add	sp, sp, #8
   106d8:	pop	{r4, r5, r6, r7, r8, lr}
   106dc:	b	ad80 <g_return_if_fail_warning@plt>
   106e0:	mov	r0, r5
   106e4:	bl	ad5c <gconf_value_get_schema@plt>
   106e8:	subs	r8, r0, #0
   106ec:	beq	108bc <markup_entry_set_value@@Base+0x310>
   106f0:	bl	ad20 <gconf_schema_get_locale@plt>
   106f4:	movw	r7, #8112	; 0x1fb0
   106f8:	movt	r7, #1
   106fc:	cmp	r0, #0
   10700:	movne	r7, r0
   10704:	ldr	r0, [r4]
   10708:	mov	r1, r7
   1070c:	bl	dc1c <_start@@Base+0x2970>
   10710:	ldr	r5, [r4, #12]
   10714:	cmp	r5, #0
   10718:	bne	1072c <markup_entry_set_value@@Base+0x180>
   1071c:	b	10884 <markup_entry_set_value@@Base+0x2d8>
   10720:	ldr	r5, [r5, #4]
   10724:	cmp	r5, #0
   10728:	beq	10884 <markup_entry_set_value@@Base+0x2d8>
   1072c:	ldr	r6, [r5]
   10730:	mov	r1, r7
   10734:	ldr	r0, [r6]
   10738:	bl	afe4 <strcmp@plt>
   1073c:	cmp	r0, #0
   10740:	bne	10720 <markup_entry_set_value@@Base+0x174>
   10744:	ldr	r0, [r6, #4]
   10748:	bl	a9b4 <g_free@plt>
   1074c:	ldr	r0, [r6, #8]
   10750:	bl	a9b4 <g_free@plt>
   10754:	ldr	r0, [r6, #12]
   10758:	cmp	r0, #0
   1075c:	beq	10764 <markup_entry_set_value@@Base+0x1b8>
   10760:	bl	ac78 <gconf_value_free@plt>
   10764:	mov	r0, r8
   10768:	bl	ad8c <gconf_schema_get_short_desc@plt>
   1076c:	bl	aae0 <g_strdup@plt>
   10770:	str	r0, [r6, #4]
   10774:	mov	r0, r8
   10778:	bl	ad68 <gconf_schema_get_long_desc@plt>
   1077c:	bl	aae0 <g_strdup@plt>
   10780:	str	r0, [r6, #8]
   10784:	mov	r0, r8
   10788:	bl	b02c <gconf_schema_get_default_value@plt>
   1078c:	subs	r3, r0, #0
   10790:	streq	r3, [r6, #12]
   10794:	beq	107a0 <markup_entry_set_value@@Base+0x1f4>
   10798:	bl	abf4 <gconf_value_copy@plt>
   1079c:	str	r0, [r6, #12]
   107a0:	ldr	r0, [r4, #8]
   107a4:	cmp	r0, #0
   107a8:	beq	107c4 <markup_entry_set_value@@Base+0x218>
   107ac:	ldr	r3, [r0]
   107b0:	cmp	r3, #5
   107b4:	beq	108b0 <markup_entry_set_value@@Base+0x304>
   107b8:	bl	ac78 <gconf_value_free@plt>
   107bc:	mov	r3, #0
   107c0:	str	r3, [r4, #8]
   107c4:	mov	r0, #5
   107c8:	bl	aa74 <gconf_value_new@plt>
   107cc:	str	r0, [r4, #8]
   107d0:	bl	aac8 <gconf_schema_new@plt>
   107d4:	mov	r5, r0
   107d8:	mov	r1, r0
   107dc:	ldr	r0, [r4, #8]
   107e0:	bl	af24 <gconf_value_set_schema_nocopy@plt>
   107e4:	mov	r0, r5
   107e8:	mov	r1, #0
   107ec:	bl	a9f0 <gconf_schema_set_locale@plt>
   107f0:	mov	r0, r5
   107f4:	mov	r1, #0
   107f8:	bl	ab40 <gconf_schema_set_short_desc@plt>
   107fc:	mov	r0, r5
   10800:	mov	r1, #0
   10804:	bl	ae10 <gconf_schema_set_long_desc@plt>
   10808:	mov	r0, r8
   1080c:	bl	aee8 <gconf_schema_get_list_type@plt>
   10810:	mov	r1, r0
   10814:	mov	r0, r5
   10818:	bl	aedc <gconf_schema_set_list_type@plt>
   1081c:	mov	r0, r8
   10820:	bl	af6c <gconf_schema_get_car_type@plt>
   10824:	mov	r1, r0
   10828:	mov	r0, r5
   1082c:	bl	ab28 <gconf_schema_set_car_type@plt>
   10830:	mov	r0, r8
   10834:	bl	aaa4 <gconf_schema_get_cdr_type@plt>
   10838:	mov	r1, r0
   1083c:	mov	r0, r5
   10840:	bl	ae64 <gconf_schema_set_cdr_type@plt>
   10844:	mov	r0, r8
   10848:	bl	aa80 <gconf_schema_get_type@plt>
   1084c:	mov	r1, r0
   10850:	mov	r0, r5
   10854:	bl	aad4 <gconf_schema_set_type@plt>
   10858:	mov	r0, r8
   1085c:	bl	ad50 <gconf_schema_get_owner@plt>
   10860:	mov	r1, r0
   10864:	mov	r0, r5
   10868:	bl	b008 <gconf_schema_set_owner@plt>
   1086c:	mov	r0, r8
   10870:	bl	accc <gconf_schema_get_gettext_domain@plt>
   10874:	mov	r1, r0
   10878:	mov	r0, r5
   1087c:	bl	ab64 <gconf_schema_set_gettext_domain@plt>
   10880:	b	1065c <markup_entry_set_value@@Base+0xb0>
   10884:	mov	r0, #16
   10888:	bl	aeac <g_malloc0@plt>
   1088c:	mov	r6, r0
   10890:	mov	r0, r7
   10894:	bl	aae0 <g_strdup@plt>
   10898:	mov	r1, r6
   1089c:	str	r0, [r6]
   108a0:	ldr	r0, [r4, #12]
   108a4:	bl	acf0 <g_slist_prepend@plt>
   108a8:	str	r0, [r4, #12]
   108ac:	b	10744 <markup_entry_set_value@@Base+0x198>
   108b0:	bl	ad5c <gconf_value_get_schema@plt>
   108b4:	mov	r5, r0
   108b8:	b	107e4 <markup_entry_set_value@@Base+0x238>
   108bc:	movw	r3, #5988	; 0x1764
   108c0:	movw	r0, #4852	; 0x12f4
   108c4:	movt	r3, #1
   108c8:	movw	r1, #4892	; 0x131c
   108cc:	str	r3, [sp]
   108d0:	movt	r0, #1
   108d4:	movw	r2, #1548	; 0x60c
   108d8:	movt	r1, #1
   108dc:	ldr	r3, [pc]	; 108e4 <markup_entry_set_value@@Base+0x338>
   108e0:	bl	ac0c <g_assertion_message_expr@plt>
   108e4:	andeq	r1, r1, r8, lsl r2

000108e8 <markup_entry_unset_value@@Base>:
   108e8:	ldr	r3, [r0]
   108ec:	push	{r4, r5, r6, r7, r8, lr}
   108f0:	cmp	r3, #0
   108f4:	mov	r6, r0
   108f8:	mov	r7, r1
   108fc:	beq	109f0 <markup_entry_unset_value@@Base+0x108>
   10900:	ldrb	r2, [r3, #28]
   10904:	tst	r2, #1
   10908:	beq	10970 <markup_entry_unset_value@@Base+0x88>
   1090c:	ldr	r0, [r0, #8]
   10910:	cmp	r0, #0
   10914:	popeq	{r4, r5, r6, r7, r8, pc}
   10918:	ldr	r2, [r0]
   1091c:	cmp	r2, #5
   10920:	beq	1098c <markup_entry_unset_value@@Base+0xa4>
   10924:	bl	ac78 <gconf_value_free@plt>
   10928:	mov	r3, #0
   1092c:	str	r3, [r6, #8]
   10930:	mov	r0, #0
   10934:	bl	ae1c <time@plt>
   10938:	str	r0, [r6, #24]
   1093c:	ldr	r0, [r6]
   10940:	bl	b610 <_start@@Base+0x364>
   10944:	ldr	r3, [r6]
   10948:	ldr	r3, [r3, #4]
   1094c:	cmp	r3, #0
   10950:	popeq	{r4, r5, r6, r7, r8, pc}
   10954:	ldrb	r2, [r3, #28]
   10958:	orr	r2, r2, #8
   1095c:	strb	r2, [r3, #28]
   10960:	ldr	r3, [r3, #4]
   10964:	cmp	r3, #0
   10968:	bne	10954 <markup_entry_unset_value@@Base+0x6c>
   1096c:	pop	{r4, r5, r6, r7, r8, pc}
   10970:	movw	r0, #4852	; 0x12f4
   10974:	movw	r2, #8136	; 0x1fc8
   10978:	movt	r0, #1
   1097c:	movt	r2, #1
   10980:	ldr	r1, [pc, #188]	; 10a44 <markup_entry_unset_value@@Base+0x15c>
   10984:	pop	{r4, r5, r6, r7, r8, lr}
   10988:	b	ad80 <g_return_if_fail_warning@plt>
   1098c:	cmp	r7, #0
   10990:	beq	10a0c <markup_entry_unset_value@@Base+0x124>
   10994:	mov	r0, r3
   10998:	bl	dc1c <_start@@Base+0x2970>
   1099c:	ldr	r8, [r6, #12]
   109a0:	cmp	r8, #0
   109a4:	beq	10930 <markup_entry_unset_value@@Base+0x48>
   109a8:	mov	r4, r8
   109ac:	b	109bc <markup_entry_unset_value@@Base+0xd4>
   109b0:	ldr	r4, [r4, #4]
   109b4:	cmp	r4, #0
   109b8:	beq	10930 <markup_entry_unset_value@@Base+0x48>
   109bc:	ldr	r5, [r4]
   109c0:	mov	r1, r7
   109c4:	ldr	r0, [r5]
   109c8:	bl	afe4 <strcmp@plt>
   109cc:	cmp	r0, #0
   109d0:	bne	109b0 <markup_entry_unset_value@@Base+0xc8>
   109d4:	mov	r0, r8
   109d8:	mov	r1, r5
   109dc:	bl	a9cc <g_slist_remove@plt>
   109e0:	str	r0, [r6, #12]
   109e4:	mov	r0, r5
   109e8:	bl	b4e8 <_start@@Base+0x23c>
   109ec:	b	10930 <markup_entry_unset_value@@Base+0x48>
   109f0:	movw	r0, #4852	; 0x12f4
   109f4:	movw	r2, #8116	; 0x1fb4
   109f8:	movt	r0, #1
   109fc:	movt	r2, #1
   10a00:	ldr	r1, [pc, #60]	; 10a44 <markup_entry_unset_value@@Base+0x15c>
   10a04:	pop	{r4, r5, r6, r7, r8, lr}
   10a08:	b	ad80 <g_return_if_fail_warning@plt>
   10a0c:	bl	ac78 <gconf_value_free@plt>
   10a10:	ldr	r0, [r6]
   10a14:	mov	r1, r7
   10a18:	str	r7, [r6, #8]
   10a1c:	bl	dc1c <_start@@Base+0x2970>
   10a20:	ldr	r0, [r6, #12]
   10a24:	mov	r2, r7
   10a28:	movw	r1, #46312	; 0xb4e8
   10a2c:	movt	r1, #0
   10a30:	bl	adf8 <g_slist_foreach@plt>
   10a34:	ldr	r0, [r6, #12]
   10a38:	bl	aa2c <g_slist_free@plt>
   10a3c:	str	r7, [r6, #12]
   10a40:	b	10930 <markup_entry_unset_value@@Base+0x48>
   10a44:	andeq	r1, r1, r0, lsr r2

00010a48 <markup_entry_set_schema_name@@Base>:
   10a48:	push	{r3, r4, r5, lr}
   10a4c:	mov	r4, r0
   10a50:	ldr	r3, [r0]
   10a54:	mov	r5, r1
   10a58:	cmp	r3, #0
   10a5c:	beq	10adc <markup_entry_set_schema_name@@Base+0x94>
   10a60:	ldrb	r3, [r3, #28]
   10a64:	tst	r3, #1
   10a68:	beq	10ac0 <markup_entry_set_schema_name@@Base+0x78>
   10a6c:	ldr	r0, [r0, #16]
   10a70:	bl	a9b4 <g_free@plt>
   10a74:	mov	r0, r5
   10a78:	bl	aae0 <g_strdup@plt>
   10a7c:	str	r0, [r4, #16]
   10a80:	mov	r0, #0
   10a84:	bl	ae1c <time@plt>
   10a88:	str	r0, [r4, #24]
   10a8c:	ldr	r0, [r4]
   10a90:	bl	b610 <_start@@Base+0x364>
   10a94:	ldr	r3, [r4]
   10a98:	ldr	r3, [r3, #4]
   10a9c:	cmp	r3, #0
   10aa0:	popeq	{r3, r4, r5, pc}
   10aa4:	ldrb	r2, [r3, #28]
   10aa8:	orr	r2, r2, #8
   10aac:	strb	r2, [r3, #28]
   10ab0:	ldr	r3, [r3, #4]
   10ab4:	cmp	r3, #0
   10ab8:	bne	10aa4 <markup_entry_set_schema_name@@Base+0x5c>
   10abc:	pop	{r3, r4, r5, pc}
   10ac0:	movw	r0, #4852	; 0x12f4
   10ac4:	movw	r2, #8136	; 0x1fc8
   10ac8:	movt	r0, #1
   10acc:	movt	r2, #1
   10ad0:	ldr	r1, [pc, #32]	; 10af8 <markup_entry_set_schema_name@@Base+0xb0>
   10ad4:	pop	{r3, r4, r5, lr}
   10ad8:	b	ad80 <g_return_if_fail_warning@plt>
   10adc:	movw	r0, #4852	; 0x12f4
   10ae0:	movw	r2, #8116	; 0x1fb4
   10ae4:	movt	r0, #1
   10ae8:	movt	r2, #1
   10aec:	ldr	r1, [pc, #4]	; 10af8 <markup_entry_set_schema_name@@Base+0xb0>
   10af0:	pop	{r3, r4, r5, lr}
   10af4:	b	ad80 <g_return_if_fail_warning@plt>
   10af8:	andeq	r1, r1, ip, asr #4

00010afc <markup_entry_get_value@@Base>:
   10afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b00:	mov	r9, r0
   10b04:	ldr	r4, [r0]
   10b08:	sub	sp, sp, #12
   10b0c:	mov	r7, r1
   10b10:	cmp	r4, #0
   10b14:	beq	10ccc <markup_entry_get_value@@Base+0x1d0>
   10b18:	ldrb	r3, [r4, #28]
   10b1c:	ands	sl, r3, #1
   10b20:	beq	10b48 <markup_entry_get_value@@Base+0x4c>
   10b24:	ldr	r0, [r0, #8]
   10b28:	cmp	r0, #0
   10b2c:	beq	10b64 <markup_entry_get_value@@Base+0x68>
   10b30:	ldr	r3, [r0]
   10b34:	cmp	r3, #5
   10b38:	beq	10b6c <markup_entry_get_value@@Base+0x70>
   10b3c:	add	sp, sp, #12
   10b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b44:	b	abf4 <gconf_value_copy@plt>
   10b48:	movw	r0, #4852	; 0x12f4
   10b4c:	movw	r2, #8136	; 0x1fc8
   10b50:	movt	r0, #1
   10b54:	movt	r2, #1
   10b58:	ldr	r1, [pc, #600]	; 10db8 <markup_entry_get_value@@Base+0x2bc>
   10b5c:	bl	ad80 <g_return_if_fail_warning@plt>
   10b60:	mov	r0, sl
   10b64:	add	sp, sp, #12
   10b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b6c:	bl	abf4 <gconf_value_copy@plt>
   10b70:	str	r0, [sp, #4]
   10b74:	bl	ad5c <gconf_value_get_schema@plt>
   10b78:	subs	sl, r0, #0
   10b7c:	beq	10d98 <markup_entry_get_value@@Base+0x29c>
   10b80:	cmp	r7, #0
   10b84:	beq	10d78 <markup_entry_get_value@@Base+0x27c>
   10b88:	ldr	r1, [r7]
   10b8c:	cmp	r1, #0
   10b90:	beq	10d78 <markup_entry_get_value@@Base+0x27c>
   10b94:	mov	r6, #0
   10b98:	add	r8, r7, #4
   10b9c:	mov	fp, r6
   10ba0:	ldr	r0, [r9]
   10ba4:	bl	dc1c <_start@@Base+0x2970>
   10ba8:	ldr	r4, [r9, #12]
   10bac:	cmp	r4, #0
   10bb0:	bne	10bcc <markup_entry_get_value@@Base+0xd0>
   10bb4:	b	10c14 <markup_entry_get_value@@Base+0x118>
   10bb8:	cmp	fp, #0
   10bbc:	beq	10ca0 <markup_entry_get_value@@Base+0x1a4>
   10bc0:	ldr	r4, [r4, #4]
   10bc4:	cmp	r4, #0
   10bc8:	beq	10c14 <markup_entry_get_value@@Base+0x118>
   10bcc:	cmp	r6, #0
   10bd0:	ldr	r5, [r4]
   10bd4:	bne	10bb8 <markup_entry_get_value@@Base+0xbc>
   10bd8:	ldr	r1, [r5]
   10bdc:	ldrb	r2, [r1]
   10be0:	cmp	r2, #67	; 0x43
   10be4:	bne	10bb8 <markup_entry_get_value@@Base+0xbc>
   10be8:	ldrb	r2, [r1, #1]
   10bec:	cmp	r2, #0
   10bf0:	bne	10bb8 <markup_entry_get_value@@Base+0xbc>
   10bf4:	cmp	fp, #0
   10bf8:	bne	10cc4 <markup_entry_get_value@@Base+0x1c8>
   10bfc:	ldr	r0, [r7]
   10c00:	mov	r6, r5
   10c04:	bl	afe4 <strcmp@plt>
   10c08:	cmp	r0, #0
   10c0c:	bne	10bc0 <markup_entry_get_value@@Base+0xc4>
   10c10:	mov	fp, r5
   10c14:	cmp	r6, #0
   10c18:	cmpne	fp, #0
   10c1c:	bne	10c38 <markup_entry_get_value@@Base+0x13c>
   10c20:	mov	r7, r8
   10c24:	ldr	r1, [r8], #4
   10c28:	cmp	r1, #0
   10c2c:	bne	10ba0 <markup_entry_get_value@@Base+0xa4>
   10c30:	cmp	fp, #0
   10c34:	beq	10cf0 <markup_entry_get_value@@Base+0x1f4>
   10c38:	ldr	r1, [fp]
   10c3c:	cmp	r1, #0
   10c40:	beq	10d64 <markup_entry_get_value@@Base+0x268>
   10c44:	mov	r0, sl
   10c48:	bl	a9f0 <gconf_schema_set_locale@plt>
   10c4c:	ldr	r1, [fp, #12]
   10c50:	cmp	r1, #0
   10c54:	beq	10d04 <markup_entry_get_value@@Base+0x208>
   10c58:	mov	r0, sl
   10c5c:	bl	aa08 <gconf_schema_set_default_value@plt>
   10c60:	ldr	r1, [fp, #4]
   10c64:	cmp	r1, #0
   10c68:	beq	10d28 <markup_entry_get_value@@Base+0x22c>
   10c6c:	mov	r0, sl
   10c70:	bl	ab40 <gconf_schema_set_short_desc@plt>
   10c74:	ldr	r1, [fp, #8]
   10c78:	cmp	r1, #0
   10c7c:	beq	10d4c <markup_entry_get_value@@Base+0x250>
   10c80:	mov	r0, sl
   10c84:	bl	ae10 <gconf_schema_set_long_desc@plt>
   10c88:	mov	r0, sl
   10c8c:	ldr	r1, [r9, #28]
   10c90:	bl	ab64 <gconf_schema_set_gettext_domain@plt>
   10c94:	ldr	r0, [sp, #4]
   10c98:	add	sp, sp, #12
   10c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ca0:	ldr	r0, [r7]
   10ca4:	ldr	r1, [r5]
   10ca8:	bl	afe4 <strcmp@plt>
   10cac:	cmp	r0, #0
   10cb0:	bne	10bc0 <markup_entry_get_value@@Base+0xc4>
   10cb4:	cmp	r6, #0
   10cb8:	bne	10c10 <markup_entry_get_value@@Base+0x114>
   10cbc:	mov	fp, r5
   10cc0:	b	10bc0 <markup_entry_get_value@@Base+0xc4>
   10cc4:	mov	r6, r5
   10cc8:	b	10c14 <markup_entry_get_value@@Base+0x118>
   10ccc:	ldr	r1, [pc, #228]	; 10db8 <markup_entry_get_value@@Base+0x2bc>
   10cd0:	movw	r0, #4852	; 0x12f4
   10cd4:	movw	r2, #8116	; 0x1fb4
   10cd8:	movt	r0, #1
   10cdc:	movt	r2, #1
   10ce0:	bl	ad80 <g_return_if_fail_warning@plt>
   10ce4:	mov	r0, r4
   10ce8:	add	sp, sp, #12
   10cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cf0:	movw	r1, #8112	; 0x1fb0
   10cf4:	mov	r0, sl
   10cf8:	movt	r1, #1
   10cfc:	mov	fp, #0
   10d00:	bl	a9f0 <gconf_schema_set_locale@plt>
   10d04:	cmp	r6, #0
   10d08:	beq	10d20 <markup_entry_get_value@@Base+0x224>
   10d0c:	ldr	r1, [r6, #12]
   10d10:	cmp	r1, #0
   10d14:	beq	10d20 <markup_entry_get_value@@Base+0x224>
   10d18:	mov	r0, sl
   10d1c:	bl	aa08 <gconf_schema_set_default_value@plt>
   10d20:	cmp	fp, #0
   10d24:	bne	10c60 <markup_entry_get_value@@Base+0x164>
   10d28:	cmp	r6, #0
   10d2c:	beq	10d44 <markup_entry_get_value@@Base+0x248>
   10d30:	ldr	r1, [r6, #4]
   10d34:	cmp	r1, #0
   10d38:	beq	10d44 <markup_entry_get_value@@Base+0x248>
   10d3c:	mov	r0, sl
   10d40:	bl	ab40 <gconf_schema_set_short_desc@plt>
   10d44:	cmp	fp, #0
   10d48:	bne	10c74 <markup_entry_get_value@@Base+0x178>
   10d4c:	cmp	r6, #0
   10d50:	beq	10c88 <markup_entry_get_value@@Base+0x18c>
   10d54:	ldr	r1, [r6, #8]
   10d58:	cmp	r1, #0
   10d5c:	bne	10c80 <markup_entry_get_value@@Base+0x184>
   10d60:	b	10c88 <markup_entry_get_value@@Base+0x18c>
   10d64:	movw	r1, #8112	; 0x1fb0
   10d68:	mov	r0, sl
   10d6c:	movt	r1, #1
   10d70:	bl	a9f0 <gconf_schema_set_locale@plt>
   10d74:	b	10c4c <markup_entry_get_value@@Base+0x150>
   10d78:	movw	r7, #45640	; 0xb248
   10d7c:	movt	r7, #1
   10d80:	ldr	r1, [r7, #20]
   10d84:	cmp	r1, #0
   10d88:	moveq	r6, r1
   10d8c:	beq	10cf0 <markup_entry_get_value@@Base+0x1f4>
   10d90:	add	r7, r7, #20
   10d94:	b	10b94 <markup_entry_get_value@@Base+0x98>
   10d98:	movw	r0, #4852	; 0x12f4
   10d9c:	movw	r2, #8180	; 0x1ff4
   10da0:	movt	r0, #1
   10da4:	movt	r2, #1
   10da8:	ldr	r1, [pc, #8]	; 10db8 <markup_entry_get_value@@Base+0x2bc>
   10dac:	bl	ad80 <g_return_if_fail_warning@plt>
   10db0:	mov	r0, sl
   10db4:	b	10b64 <markup_entry_get_value@@Base+0x68>
   10db8:	andeq	r1, r1, ip, ror #4

00010dbc <markup_entry_get_name@@Base>:
   10dbc:	push	{r4, lr}
   10dc0:	ldr	r4, [r0]
   10dc4:	cmp	r4, #0
   10dc8:	beq	10e00 <markup_entry_get_name@@Base+0x44>
   10dcc:	ldrb	r3, [r4, #28]
   10dd0:	ands	r4, r3, #1
   10dd4:	beq	10de0 <markup_entry_get_name@@Base+0x24>
   10dd8:	ldr	r0, [r0, #4]
   10ddc:	pop	{r4, pc}
   10de0:	ldr	r1, [pc, #56]	; 10e20 <markup_entry_get_name@@Base+0x64>
   10de4:	movw	r0, #4852	; 0x12f4
   10de8:	movw	r2, #8136	; 0x1fc8
   10dec:	movt	r0, #1
   10df0:	movt	r2, #1
   10df4:	bl	ad80 <g_return_if_fail_warning@plt>
   10df8:	mov	r0, r4
   10dfc:	pop	{r4, pc}
   10e00:	ldr	r1, [pc, #24]	; 10e20 <markup_entry_get_name@@Base+0x64>
   10e04:	movw	r0, #4852	; 0x12f4
   10e08:	movw	r2, #8116	; 0x1fb4
   10e0c:	movt	r0, #1
   10e10:	movt	r2, #1
   10e14:	bl	ad80 <g_return_if_fail_warning@plt>
   10e18:	mov	r0, r4
   10e1c:	pop	{r4, pc}
   10e20:	andeq	r1, r1, r4, lsl #5

00010e24 <markup_entry_get_schema_name@@Base>:
   10e24:	push	{r4, lr}
   10e28:	ldr	r4, [r0]
   10e2c:	cmp	r4, #0
   10e30:	beq	10e68 <markup_entry_get_schema_name@@Base+0x44>
   10e34:	ldrb	r3, [r4, #28]
   10e38:	ands	r4, r3, #1
   10e3c:	beq	10e48 <markup_entry_get_schema_name@@Base+0x24>
   10e40:	ldr	r0, [r0, #16]
   10e44:	pop	{r4, pc}
   10e48:	ldr	r1, [pc, #56]	; 10e88 <markup_entry_get_schema_name@@Base+0x64>
   10e4c:	movw	r0, #4852	; 0x12f4
   10e50:	movw	r2, #8136	; 0x1fc8
   10e54:	movt	r0, #1
   10e58:	movt	r2, #1
   10e5c:	bl	ad80 <g_return_if_fail_warning@plt>
   10e60:	mov	r0, r4
   10e64:	pop	{r4, pc}
   10e68:	ldr	r1, [pc, #24]	; 10e88 <markup_entry_get_schema_name@@Base+0x64>
   10e6c:	movw	r0, #4852	; 0x12f4
   10e70:	movw	r2, #8116	; 0x1fb4
   10e74:	movt	r0, #1
   10e78:	movt	r2, #1
   10e7c:	bl	ad80 <g_return_if_fail_warning@plt>
   10e80:	mov	r0, r4
   10e84:	pop	{r4, pc}
   10e88:	muleq	r1, ip, r2

00010e8c <markup_entry_get_mod_user@@Base>:
   10e8c:	push	{r4, lr}
   10e90:	ldr	r4, [r0]
   10e94:	cmp	r4, #0
   10e98:	beq	10ed0 <markup_entry_get_mod_user@@Base+0x44>
   10e9c:	ldrb	r3, [r4, #28]
   10ea0:	ands	r4, r3, #1
   10ea4:	beq	10eb0 <markup_entry_get_mod_user@@Base+0x24>
   10ea8:	ldr	r0, [r0, #20]
   10eac:	pop	{r4, pc}
   10eb0:	ldr	r1, [pc, #56]	; 10ef0 <markup_entry_get_mod_user@@Base+0x64>
   10eb4:	movw	r0, #4852	; 0x12f4
   10eb8:	movw	r2, #8136	; 0x1fc8
   10ebc:	movt	r0, #1
   10ec0:	movt	r2, #1
   10ec4:	bl	ad80 <g_return_if_fail_warning@plt>
   10ec8:	mov	r0, r4
   10ecc:	pop	{r4, pc}
   10ed0:	ldr	r1, [pc, #24]	; 10ef0 <markup_entry_get_mod_user@@Base+0x64>
   10ed4:	movw	r0, #4852	; 0x12f4
   10ed8:	movw	r2, #8116	; 0x1fb4
   10edc:	movt	r0, #1
   10ee0:	movt	r2, #1
   10ee4:	bl	ad80 <g_return_if_fail_warning@plt>
   10ee8:	mov	r0, r4
   10eec:	pop	{r4, pc}
   10ef0:			; <UNDEFINED> instruction: 0x000112bc

00010ef4 <markup_entry_get_mod_time@@Base>:
   10ef4:	push	{r4, lr}
   10ef8:	ldr	r4, [r0]
   10efc:	cmp	r4, #0
   10f00:	beq	10f38 <markup_entry_get_mod_time@@Base+0x44>
   10f04:	ldrb	r3, [r4, #28]
   10f08:	ands	r4, r3, #1
   10f0c:	beq	10f18 <markup_entry_get_mod_time@@Base+0x24>
   10f10:	ldr	r0, [r0, #24]
   10f14:	pop	{r4, pc}
   10f18:	ldr	r1, [pc, #56]	; 10f58 <markup_entry_get_mod_time@@Base+0x64>
   10f1c:	movw	r0, #4852	; 0x12f4
   10f20:	movw	r2, #8136	; 0x1fc8
   10f24:	movt	r0, #1
   10f28:	movt	r2, #1
   10f2c:	bl	ad80 <g_return_if_fail_warning@plt>
   10f30:	mov	r0, r4
   10f34:	pop	{r4, pc}
   10f38:	ldr	r1, [pc, #24]	; 10f58 <markup_entry_get_mod_time@@Base+0x64>
   10f3c:	movw	r0, #4852	; 0x12f4
   10f40:	movw	r2, #8116	; 0x1fb4
   10f44:	movt	r0, #1
   10f48:	movt	r2, #1
   10f4c:	bl	ad80 <g_return_if_fail_warning@plt>
   10f50:	mov	r0, r4
   10f54:	pop	{r4, pc}
   10f58:	ldrdeq	r1, [r1], -r8

00010f5c <_gconf_mode_t_to_mode@@Base>:
   10f5c:	ubfx	r0, r0, #0, #9
   10f60:	bx	lr
   10f64:	nop	{0}

00010f68 <__libc_csu_init@@Base>:
   10f68:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10f6c:	mov	r7, r0
   10f70:	ldr	r6, [pc, #76]	; 10fc4 <__libc_csu_init@@Base+0x5c>
   10f74:	mov	r8, r1
   10f78:	ldr	r5, [pc, #72]	; 10fc8 <__libc_csu_init@@Base+0x60>
   10f7c:	mov	r9, r2
   10f80:	add	r6, pc, r6
   10f84:	bl	a988 <_init@@Base>
   10f88:	add	r5, pc, r5
   10f8c:	rsb	r6, r5, r6
   10f90:	asrs	r6, r6, #2
   10f94:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f98:	sub	r5, r5, #4
   10f9c:	mov	r4, #0
   10fa0:	add	r4, r4, #1
   10fa4:	ldr	r3, [r5, #4]!
   10fa8:	mov	r0, r7
   10fac:	mov	r1, r8
   10fb0:	mov	r2, r9
   10fb4:	blx	r3
   10fb8:	cmp	r4, r6
   10fbc:	bne	10fa0 <__libc_csu_init@@Base+0x38>
   10fc0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10fc4:	andeq	r9, r0, r0, ror #30
   10fc8:	andeq	r9, r0, r4, asr pc

00010fcc <__libc_csu_fini@@Base>:
   10fcc:	bx	lr

Disassembly of section .fini:

00010fd0 <_fini@@Base>:
   10fd0:	push	{r3, lr}
   10fd4:	pop	{r3, pc}
