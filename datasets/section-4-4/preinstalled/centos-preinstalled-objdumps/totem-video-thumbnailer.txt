
centos-preinstalled/totem-video-thumbnailer:     file format elf32-littlearm


Disassembly of section .init:

00011b9c <_init@@Base>:
   11b9c:	push	{r3, lr}
   11ba0:	bl	12cc8 <g_strcmp0@plt+0xc44>
   11ba4:	pop	{r3, pc}

Disassembly of section .plt:

00011ba8 <gst_element_state_get_name@plt-0x14>:
   11ba8:	push	{lr}		; (str lr, [sp, #-4]!)
   11bac:	ldr	lr, [pc, #4]	; 11bb8 <_init@@Base+0x1c>
   11bb0:	add	lr, pc, lr
   11bb4:	ldr	pc, [lr, #8]!
   11bb8:	andeq	r5, r1, r8, asr #8

00011bbc <gst_element_state_get_name@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #86016	; 0x15000
   11bc4:	ldr	pc, [ip, #1096]!	; 0x448

00011bc8 <g_object_ref@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #86016	; 0x15000
   11bd0:	ldr	pc, [ip, #1088]!	; 0x440

00011bd4 <gst_bus_set_sync_handler@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #86016	; 0x15000
   11bdc:	ldr	pc, [ip, #1080]!	; 0x438

00011be0 <g_option_context_parse@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #86016	; 0x15000
   11be8:	ldr	pc, [ip, #1072]!	; 0x430

00011bec <g_option_context_add_group@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #86016	; 0x15000
   11bf4:	ldr	pc, [ip, #1064]!	; 0x428

00011bf8 <g_get_application_name@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #86016	; 0x15000
   11c00:	ldr	pc, [ip, #1056]!	; 0x420

00011c04 <gst_buffer_map@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #86016	; 0x15000
   11c0c:	ldr	pc, [ip, #1048]!	; 0x418

00011c10 <g_return_if_fail_warning@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #86016	; 0x15000
   11c18:	ldr	pc, [ip, #1040]!	; 0x410

00011c1c <gst_tag_list_get_string_index@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #86016	; 0x15000
   11c24:	ldr	pc, [ip, #1032]!	; 0x408

00011c28 <gst_element_query_duration@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #86016	; 0x15000
   11c30:	ldr	pc, [ip, #1024]!	; 0x400

00011c34 <gst_element_get_type@plt>:
   11c34:	add	ip, pc, #0, 12
   11c38:	add	ip, ip, #86016	; 0x15000
   11c3c:	ldr	pc, [ip, #1016]!	; 0x3f8

00011c40 <g_file_new_for_commandline_arg@plt>:
   11c40:	add	ip, pc, #0, 12
   11c44:	add	ip, ip, #86016	; 0x15000
   11c48:	ldr	pc, [ip, #1008]!	; 0x3f0

00011c4c <gst_memory_map@plt>:
   11c4c:	add	ip, pc, #0, 12
   11c50:	add	ip, ip, #86016	; 0x15000
   11c54:	ldr	pc, [ip, #1000]!	; 0x3e8

00011c58 <gdk_pixbuf_new_from_data@plt>:
   11c58:	add	ip, pc, #0, 12
   11c5c:	add	ip, ip, #86016	; 0x15000
   11c60:	ldr	pc, [ip, #992]!	; 0x3e0

00011c64 <g_error_free@plt>:
   11c64:	add	ip, pc, #0, 12
   11c68:	add	ip, ip, #86016	; 0x15000
   11c6c:	ldr	pc, [ip, #984]!	; 0x3d8

00011c70 <bind_textdomain_codeset@plt>:
   11c70:	add	ip, pc, #0, 12
   11c74:	add	ip, ip, #86016	; 0x15000
   11c78:	ldr	pc, [ip, #976]!	; 0x3d0

00011c7c <gst_object_unref@plt>:
   11c7c:	add	ip, pc, #0, 12
   11c80:	add	ip, ip, #86016	; 0x15000
   11c84:	ldr	pc, [ip, #968]!	; 0x3c8

00011c88 <__xstat64@plt>:
   11c88:	add	ip, pc, #0, 12
   11c8c:	add	ip, ip, #86016	; 0x15000
   11c90:	ldr	pc, [ip, #960]!	; 0x3c0

00011c94 <gst_element_get_state@plt>:
   11c94:	add	ip, pc, #0, 12
   11c98:	add	ip, ip, #86016	; 0x15000
   11c9c:	ldr	pc, [ip, #952]!	; 0x3b8

00011ca0 <g_str_equal@plt>:
   11ca0:	add	ip, pc, #0, 12
   11ca4:	add	ip, ip, #86016	; 0x15000
   11ca8:	ldr	pc, [ip, #944]!	; 0x3b0

00011cac <gst_element_set_state@plt>:
   11cac:	add	ip, pc, #0, 12
   11cb0:	add	ip, ip, #86016	; 0x15000
   11cb4:	ldr	pc, [ip, #936]!	; 0x3a8

00011cb8 <gst_init_get_option_group@plt>:
   11cb8:	add	ip, pc, #0, 12
   11cbc:	add	ip, ip, #86016	; 0x15000
   11cc0:	ldr	pc, [ip, #928]!	; 0x3a0

00011cc4 <g_type_check_instance_cast@plt>:
   11cc4:	add	ip, pc, #0, 12
   11cc8:	add	ip, ip, #86016	; 0x15000
   11ccc:	ldr	pc, [ip, #920]!	; 0x398

00011cd0 <g_usleep@plt>:
   11cd0:	add	ip, pc, #0, 12
   11cd4:	add	ip, ip, #86016	; 0x15000
   11cd8:	ldr	pc, [ip, #912]!	; 0x390

00011cdc <g_option_context_new@plt>:
   11cdc:	add	ip, pc, #0, 12
   11ce0:	add	ip, ip, #86016	; 0x15000
   11ce4:	ldr	pc, [ip, #904]!	; 0x388

00011ce8 <gdk_pixbuf_scale_simple@plt>:
   11ce8:	add	ip, pc, #0, 12
   11cec:	add	ip, ip, #86016	; 0x15000
   11cf0:	ldr	pc, [ip, #896]!	; 0x380

00011cf4 <gst_buffer_unmap@plt>:
   11cf4:	add	ip, pc, #0, 12
   11cf8:	add	ip, ip, #86016	; 0x15000
   11cfc:	ldr	pc, [ip, #888]!	; 0x378

00011d00 <gst_element_seek@plt>:
   11d00:	add	ip, pc, #0, 12
   11d04:	add	ip, ip, #86016	; 0x15000
   11d08:	ldr	pc, [ip, #880]!	; 0x370

00011d0c <g_log@plt>:
   11d0c:	add	ip, pc, #0, 12
   11d10:	add	ip, ip, #86016	; 0x15000
   11d14:	ldr	pc, [ip, #872]!	; 0x368

00011d18 <exit@plt>:
   11d18:	add	ip, pc, #0, 12
   11d1c:	add	ip, ip, #86016	; 0x15000
   11d20:	ldr	pc, [ip, #864]!	; 0x360

00011d24 <g_thread_new@plt>:
   11d24:	add	ip, pc, #0, 12
   11d28:	add	ip, ip, #86016	; 0x15000
   11d2c:	ldr	pc, [ip, #856]!	; 0x358

00011d30 <g_filename_from_uri@plt>:
   11d30:	add	ip, pc, #0, 12
   11d34:	add	ip, ip, #86016	; 0x15000
   11d38:	ldr	pc, [ip, #848]!	; 0x350

00011d3c <gst_registry_remove_plugin@plt>:
   11d3c:	add	ip, pc, #0, 12
   11d40:	add	ip, ip, #86016	; 0x15000
   11d44:	ldr	pc, [ip, #840]!	; 0x348

00011d48 <gst_sample_get_caps@plt>:
   11d48:	add	ip, pc, #0, 12
   11d4c:	add	ip, ip, #86016	; 0x15000
   11d50:	ldr	pc, [ip, #832]!	; 0x340

00011d54 <g_thread_exit@plt>:
   11d54:	add	ip, pc, #0, 12
   11d58:	add	ip, ip, #86016	; 0x15000
   11d5c:	ldr	pc, [ip, #824]!	; 0x338

00011d60 <g_file_get_path@plt>:
   11d60:	add	ip, pc, #0, 12
   11d64:	add	ip, ip, #86016	; 0x15000
   11d68:	ldr	pc, [ip, #816]!	; 0x330

00011d6c <gst_registry_get@plt>:
   11d6c:	add	ip, pc, #0, 12
   11d70:	add	ip, ip, #86016	; 0x15000
   11d74:	ldr	pc, [ip, #808]!	; 0x328

00011d78 <gst_debug_log@plt>:
   11d78:	add	ip, pc, #0, 12
   11d7c:	add	ip, ip, #86016	; 0x15000
   11d80:	ldr	pc, [ip, #800]!	; 0x320

00011d84 <g_printf@plt>:
   11d84:	add	ip, pc, #0, 12
   11d88:	add	ip, ip, #86016	; 0x15000
   11d8c:	ldr	pc, [ip, #792]!	; 0x318

00011d90 <textdomain@plt>:
   11d90:	add	ip, pc, #0, 12
   11d94:	add	ip, ip, #86016	; 0x15000
   11d98:	ldr	pc, [ip, #784]!	; 0x310

00011d9c <gdk_pixbuf_get_rowstride@plt>:
   11d9c:	add	ip, pc, #0, 12
   11da0:	add	ip, ip, #86016	; 0x15000
   11da4:	ldr	pc, [ip, #776]!	; 0x308

00011da8 <setrlimit64@plt>:
   11da8:	add	ip, pc, #0, 12
   11dac:	add	ip, ip, #86016	; 0x15000
   11db0:	ldr	pc, [ip, #768]!	; 0x300

00011db4 <g_strdup@plt>:
   11db4:	add	ip, pc, #0, 12
   11db8:	add	ip, ip, #86016	; 0x15000
   11dbc:	ldr	pc, [ip, #760]!	; 0x2f8

00011dc0 <g_get_prgname@plt>:
   11dc0:	add	ip, pc, #0, 12
   11dc4:	add	ip, ip, #86016	; 0x15000
   11dc8:	ldr	pc, [ip, #752]!	; 0x2f0

00011dcc <fcntl@plt>:
   11dcc:	add	ip, pc, #0, 12
   11dd0:	add	ip, ip, #86016	; 0x15000
   11dd4:	ldr	pc, [ip, #744]!	; 0x2e8

00011dd8 <gst_sample_get_buffer@plt>:
   11dd8:	add	ip, pc, #0, 12
   11ddc:	add	ip, ip, #86016	; 0x15000
   11de0:	ldr	pc, [ip, #736]!	; 0x2e0

00011de4 <g_strdup_printf@plt>:
   11de4:	add	ip, pc, #0, 12
   11de8:	add	ip, ip, #86016	; 0x15000
   11dec:	ldr	pc, [ip, #728]!	; 0x2d8

00011df0 <g_content_type_guess@plt>:
   11df0:	add	ip, pc, #0, 12
   11df4:	add	ip, ip, #86016	; 0x15000
   11df8:	ldr	pc, [ip, #720]!	; 0x2d0

00011dfc <abort@plt>:
   11dfc:	add	ip, pc, #0, 12
   11e00:	add	ip, ip, #86016	; 0x15000
   11e04:	ldr	pc, [ip, #712]!	; 0x2c8

00011e08 <gdk_pixbuf_get_height@plt>:
   11e08:	add	ip, pc, #0, 12
   11e0c:	add	ip, ip, #86016	; 0x15000
   11e10:	ldr	pc, [ip, #704]!	; 0x2c0

00011e14 <gst_structure_get_int@plt>:
   11e14:	add	ip, pc, #0, 12
   11e18:	add	ip, ip, #86016	; 0x15000
   11e1c:	ldr	pc, [ip, #696]!	; 0x2b8

00011e20 <gst_structure_get_enum@plt>:
   11e20:	add	ip, pc, #0, 12
   11e24:	add	ip, ip, #86016	; 0x15000
   11e28:	ldr	pc, [ip, #688]!	; 0x2b0

00011e2c <setbuf@plt>:
   11e2c:	add	ip, pc, #0, 12
   11e30:	add	ip, ip, #86016	; 0x15000
   11e34:	ldr	pc, [ip, #680]!	; 0x2a8

00011e38 <gdk_pixbuf_get_width@plt>:
   11e38:	add	ip, pc, #0, 12
   11e3c:	add	ip, ip, #86016	; 0x15000
   11e40:	ldr	pc, [ip, #672]!	; 0x2a0

00011e44 <gdk_pixbuf_loader_close@plt>:
   11e44:	add	ip, pc, #0, 12
   11e48:	add	ip, ip, #86016	; 0x15000
   11e4c:	ldr	pc, [ip, #664]!	; 0x298

00011e50 <g_str_has_prefix@plt>:
   11e50:	add	ip, pc, #0, 12
   11e54:	add	ip, ip, #86016	; 0x15000
   11e58:	ldr	pc, [ip, #656]!	; 0x290

00011e5c <g_signal_connect_data@plt>:
   11e5c:	add	ip, pc, #0, 12
   11e60:	add	ip, ip, #86016	; 0x15000
   11e64:	ldr	pc, [ip, #648]!	; 0x288

00011e68 <gdk_pixbuf_loader_get_pixbuf@plt>:
   11e68:	add	ip, pc, #0, 12
   11e6c:	add	ip, ip, #86016	; 0x15000
   11e70:	ldr	pc, [ip, #640]!	; 0x280

00011e74 <gst_debug_bin_to_dot_file@plt>:
   11e74:	add	ip, pc, #0, 12
   11e78:	add	ip, ip, #86016	; 0x15000
   11e7c:	ldr	pc, [ip, #632]!	; 0x278

00011e80 <gst_element_get_bus@plt>:
   11e80:	add	ip, pc, #0, 12
   11e84:	add	ip, ip, #86016	; 0x15000
   11e88:	ldr	pc, [ip, #624]!	; 0x270

00011e8c <gst_caps_new_simple@plt>:
   11e8c:	add	ip, pc, #0, 12
   11e90:	add	ip, ip, #86016	; 0x15000
   11e94:	ldr	pc, [ip, #616]!	; 0x268

00011e98 <gst_memory_unmap@plt>:
   11e98:	add	ip, pc, #0, 12
   11e9c:	add	ip, ip, #86016	; 0x15000
   11ea0:	ldr	pc, [ip, #608]!	; 0x260

00011ea4 <g_strv_length@plt>:
   11ea4:	add	ip, pc, #0, 12
   11ea8:	add	ip, ip, #86016	; 0x15000
   11eac:	ldr	pc, [ip, #600]!	; 0x258

00011eb0 <fileno@plt>:
   11eb0:	add	ip, pc, #0, 12
   11eb4:	add	ip, ip, #86016	; 0x15000
   11eb8:	ldr	pc, [ip, #592]!	; 0x250

00011ebc <__stack_chk_fail@plt>:
   11ebc:	add	ip, pc, #0, 12
   11ec0:	add	ip, ip, #86016	; 0x15000
   11ec4:	ldr	pc, [ip, #584]!	; 0x248

00011ec8 <g_free@plt>:
   11ec8:	add	ip, pc, #0, 12
   11ecc:	add	ip, ip, #86016	; 0x15000
   11ed0:	ldr	pc, [ip, #576]!	; 0x240

00011ed4 <totem_pl_parser_new@plt>:
   11ed4:	add	ip, pc, #0, 12
   11ed8:	add	ip, ip, #86016	; 0x15000
   11edc:	ldr	pc, [ip, #568]!	; 0x238

00011ee0 <g_quark_to_string@plt>:
   11ee0:	add	ip, pc, #0, 12
   11ee4:	add	ip, ip, #86016	; 0x15000
   11ee8:	ldr	pc, [ip, #560]!	; 0x230

00011eec <g_object_set@plt>:
   11eec:	add	ip, pc, #0, 12
   11ef0:	add	ip, ip, #86016	; 0x15000
   11ef4:	ldr	pc, [ip, #552]!	; 0x228

00011ef8 <g_object_get@plt>:
   11ef8:	add	ip, pc, #0, 12
   11efc:	add	ip, ip, #86016	; 0x15000
   11f00:	ldr	pc, [ip, #544]!	; 0x220

00011f04 <gst_mini_object_unref@plt>:
   11f04:	add	ip, pc, #0, 12
   11f08:	add	ip, ip, #86016	; 0x15000
   11f0c:	ldr	pc, [ip, #536]!	; 0x218

00011f10 <gst_message_parse_error@plt>:
   11f10:	add	ip, pc, #0, 12
   11f14:	add	ip, ip, #86016	; 0x15000
   11f18:	ldr	pc, [ip, #528]!	; 0x210

00011f1c <raise@plt>:
   11f1c:	add	ip, pc, #0, 12
   11f20:	add	ip, ip, #86016	; 0x15000
   11f24:	ldr	pc, [ip, #520]!	; 0x208

00011f28 <g_type_check_instance_is_a@plt>:
   11f28:	add	ip, pc, #0, 12
   11f2c:	add	ip, ip, #86016	; 0x15000
   11f30:	ldr	pc, [ip, #512]!	; 0x200

00011f34 <g_print@plt>:
   11f34:	add	ip, pc, #0, 12
   11f38:	add	ip, ip, #86016	; 0x15000
   11f3c:	ldr	pc, [ip, #504]!	; 0x1f8

00011f40 <bindtextdomain@plt>:
   11f40:	add	ip, pc, #0, 12
   11f44:	add	ip, ip, #86016	; 0x15000
   11f48:	ldr	pc, [ip, #496]!	; 0x1f0

00011f4c <gdk_pixbuf_loader_write@plt>:
   11f4c:	add	ip, pc, #0, 12
   11f50:	add	ip, ip, #86016	; 0x15000
   11f54:	ldr	pc, [ip, #488]!	; 0x1e8

00011f58 <setlocale@plt>:
   11f58:	add	ip, pc, #0, 12
   11f5c:	add	ip, ip, #86016	; 0x15000
   11f60:	ldr	pc, [ip, #480]!	; 0x1e0

00011f64 <g_option_context_add_main_entries@plt>:
   11f64:	add	ip, pc, #0, 12
   11f68:	add	ip, ip, #86016	; 0x15000
   11f6c:	ldr	pc, [ip, #472]!	; 0x1d8

00011f70 <gdk_pixbuf_save@plt>:
   11f70:	add	ip, pc, #0, 12
   11f74:	add	ip, ip, #86016	; 0x15000
   11f78:	ldr	pc, [ip, #464]!	; 0x1d0

00011f7c <g_object_set_data@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #86016	; 0x15000
   11f84:	ldr	pc, [ip, #456]!	; 0x1c8

00011f88 <g_object_unref@plt>:
   11f88:	add	ip, pc, #0, 12
   11f8c:	add	ip, ip, #86016	; 0x15000
   11f90:	ldr	pc, [ip, #448]!	; 0x1c0

00011f94 <gst_caps_get_structure@plt>:
   11f94:	add	ip, pc, #0, 12
   11f98:	add	ip, ip, #86016	; 0x15000
   11f9c:	ldr	pc, [ip, #440]!	; 0x1b8

00011fa0 <nice@plt>:
   11fa0:	add	ip, pc, #0, 12
   11fa4:	add	ip, ip, #86016	; 0x15000
   11fa8:	ldr	pc, [ip, #432]!	; 0x1b0

00011fac <g_option_context_get_help@plt>:
   11fac:	add	ip, pc, #0, 12
   11fb0:	add	ip, ip, #86016	; 0x15000
   11fb4:	ldr	pc, [ip, #424]!	; 0x1a8

00011fb8 <gst_registry_find_plugin@plt>:
   11fb8:	add	ip, pc, #0, 12
   11fbc:	add	ip, ip, #86016	; 0x15000
   11fc0:	ldr	pc, [ip, #416]!	; 0x1a0

00011fc4 <gst_buffer_get_memory@plt>:
   11fc4:	add	ip, pc, #0, 12
   11fc8:	add	ip, ip, #86016	; 0x15000
   11fcc:	ldr	pc, [ip, #408]!	; 0x198

00011fd0 <gdk_pixbuf_loader_new@plt>:
   11fd0:	add	ip, pc, #0, 12
   11fd4:	add	ip, ip, #86016	; 0x15000
   11fd8:	ldr	pc, [ip, #400]!	; 0x190

00011fdc <totem_pl_parser_parse@plt>:
   11fdc:	add	ip, pc, #0, 12
   11fe0:	add	ip, ip, #86016	; 0x15000
   11fe4:	ldr	pc, [ip, #392]!	; 0x188

00011fe8 <gdk_pixbuf_rotate_simple@plt>:
   11fe8:	add	ip, pc, #0, 12
   11fec:	add	ip, ip, #86016	; 0x15000
   11ff0:	ldr	pc, [ip, #384]!	; 0x180

00011ff4 <gst_bus_timed_pop_filtered@plt>:
   11ff4:	add	ip, pc, #0, 12
   11ff8:	add	ip, ip, #86016	; 0x15000
   11ffc:	ldr	pc, [ip, #376]!	; 0x178

00012000 <gst_element_factory_make@plt>:
   12000:	add	ip, pc, #0, 12
   12004:	add	ip, ip, #86016	; 0x15000
   12008:	ldr	pc, [ip, #368]!	; 0x170

0001200c <__errno_location@plt>:
   1200c:	add	ip, pc, #0, 12
   12010:	add	ip, ip, #86016	; 0x15000
   12014:	ldr	pc, [ip, #360]!	; 0x168

00012018 <gdk_pixbuf_get_pixels@plt>:
   12018:	add	ip, pc, #0, 12
   1201c:	add	ip, ip, #86016	; 0x15000
   12020:	ldr	pc, [ip, #352]!	; 0x160

00012024 <g_file_get_uri@plt>:
   12024:	add	ip, pc, #0, 12
   12028:	add	ip, ip, #86016	; 0x15000
   1202c:	ldr	pc, [ip, #344]!	; 0x158

00012030 <gst_tag_image_type_get_type@plt>:
   12030:	add	ip, pc, #0, 12
   12034:	add	ip, ip, #86016	; 0x15000
   12038:	ldr	pc, [ip, #336]!	; 0x150

0001203c <__libc_start_main@plt>:
   1203c:	add	ip, pc, #0, 12
   12040:	add	ip, ip, #86016	; 0x15000
   12044:	ldr	pc, [ip, #328]!	; 0x148

00012048 <__gmon_start__@plt>:
   12048:	add	ip, pc, #0, 12
   1204c:	add	ip, ip, #86016	; 0x15000
   12050:	ldr	pc, [ip, #320]!	; 0x140

00012054 <gst_tag_list_get_sample_index@plt>:
   12054:	add	ip, pc, #0, 12
   12058:	add	ip, ip, #86016	; 0x15000
   1205c:	ldr	pc, [ip, #312]!	; 0x138

00012060 <g_object_get_data@plt>:
   12060:	add	ip, pc, #0, 12
   12064:	add	ip, ip, #86016	; 0x15000
   12068:	ldr	pc, [ip, #304]!	; 0x130

0001206c <g_signal_emit_by_name@plt>:
   1206c:	add	ip, pc, #0, 12
   12070:	add	ip, ip, #86016	; 0x15000
   12074:	ldr	pc, [ip, #296]!	; 0x128

00012078 <gst_mini_object_ref@plt>:
   12078:	add	ip, pc, #0, 12
   1207c:	add	ip, ip, #86016	; 0x15000
   12080:	ldr	pc, [ip, #288]!	; 0x120

00012084 <g_strcmp0@plt>:
   12084:	add	ip, pc, #0, 12
   12088:	add	ip, ip, #86016	; 0x15000
   1208c:	ldr	pc, [ip, #280]!	; 0x118

Disassembly of section .text:

00012090 <.text>:
   12090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12094:	vpush	{d8-d9}
   12098:	movw	r5, #29152	; 0x71e0
   1209c:	movt	r5, #2
   120a0:	sub	sp, sp, #148	; 0x94
   120a4:	mov	r4, #0
   120a8:	ldr	r3, [r5]
   120ac:	str	r1, [sp, #48]	; 0x30
   120b0:	movw	r1, #22256	; 0x56f0
   120b4:	str	r0, [sp, #52]	; 0x34
   120b8:	movt	r1, #1
   120bc:	mov	r0, #6
   120c0:	str	r3, [sp, #140]	; 0x8c
   120c4:	str	r4, [sp, #60]	; 0x3c
   120c8:	bl	11f58 <setlocale@plt>
   120cc:	movw	r0, #21796	; 0x5524
   120d0:	movw	r1, #21804	; 0x552c
   120d4:	movt	r0, #1
   120d8:	movt	r1, #1
   120dc:	bl	11f40 <bindtextdomain@plt>
   120e0:	movw	r0, #21796	; 0x5524
   120e4:	movw	r1, #21824	; 0x5540
   120e8:	movt	r0, #1
   120ec:	movt	r1, #1
   120f0:	bl	11c70 <bind_textdomain_codeset@plt>
   120f4:	movw	r0, #21796	; 0x5524
   120f8:	movt	r0, #1
   120fc:	bl	11d90 <textdomain@plt>
   12100:	movw	r0, #21832	; 0x5548
   12104:	movt	r0, #1
   12108:	bl	11cdc <g_option_context_new@plt>
   1210c:	mov	r7, r0
   12110:	bl	11cb8 <gst_init_get_option_group@plt>
   12114:	movw	r1, #21200	; 0x52d0
   12118:	movw	r2, #21796	; 0x5524
   1211c:	movt	r1, #1
   12120:	movt	r2, #1
   12124:	mov	r6, r0
   12128:	mov	r0, r7
   1212c:	bl	11f64 <g_option_context_add_main_entries@plt>
   12130:	mov	r0, r7
   12134:	mov	r1, r6
   12138:	bl	11bec <g_option_context_add_group@plt>
   1213c:	mov	r0, r7
   12140:	add	r1, sp, #52	; 0x34
   12144:	add	r2, sp, #48	; 0x30
   12148:	add	r3, sp, #60	; 0x3c
   1214c:	bl	11be0 <g_option_context_parse@plt>
   12150:	cmp	r0, r4
   12154:	beq	124c8 <g_strcmp0@plt+0x444>
   12158:	movw	r6, #29136	; 0x71d0
   1215c:	movt	r6, #2
   12160:	ldr	r3, [r6, #4]
   12164:	cmp	r3, #0
   12168:	bne	12484 <g_strcmp0@plt+0x400>
   1216c:	movw	r4, #29176	; 0x71f8
   12170:	movt	r4, #2
   12174:	ldr	r3, [r4, #8]
   12178:	cmp	r3, #0
   1217c:	bne	12458 <g_strcmp0@plt+0x3d4>
   12180:	ldr	r3, [r4]
   12184:	cmp	r3, #0
   12188:	beq	121f8 <g_strcmp0@plt+0x174>
   1218c:	ldr	r0, [r4, #12]
   12190:	movw	r8, #29176	; 0x71f8
   12194:	movt	r8, #2
   12198:	cmp	r0, #0
   1219c:	beq	121ac <g_strcmp0@plt+0x128>
   121a0:	bl	11ea4 <g_strv_length@plt>
   121a4:	cmp	r0, #2
   121a8:	beq	12214 <g_strcmp0@plt+0x190>
   121ac:	mov	r1, #0
   121b0:	mov	r0, r7
   121b4:	mov	r2, r1
   121b8:	bl	11fac <g_option_context_get_help@plt>
   121bc:	mov	r1, r0
   121c0:	mov	r4, r0
   121c4:	movw	r0, #22148	; 0x5684
   121c8:	movt	r0, #1
   121cc:	bl	11f34 <g_print@plt>
   121d0:	mov	r0, r4
   121d4:	bl	11ec8 <g_free@plt>
   121d8:	mov	r0, #1
   121dc:	ldr	r2, [sp, #140]	; 0x8c
   121e0:	ldr	r3, [r5]
   121e4:	cmp	r2, r3
   121e8:	bne	12c18 <g_strcmp0@plt+0xb94>
   121ec:	add	sp, sp, #148	; 0x94
   121f0:	vpop	{d8-d9}
   121f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121f8:	ldr	r2, [r6]
   121fc:	movw	r3, #29136	; 0x71d0
   12200:	movt	r3, #2
   12204:	cmn	r2, #1
   12208:	moveq	r2, #256	; 0x100
   1220c:	streq	r2, [r3]
   12210:	b	1218c <g_strcmp0@plt+0x108>
   12214:	ldr	r3, [r8, #8]
   12218:	cmp	r3, #1
   1221c:	beq	12604 <g_strcmp0@plt+0x580>
   12220:	ldr	r3, [r4, #12]
   12224:	ldr	r2, [r4, #4]
   12228:	ldr	r8, [r3]
   1222c:	cmp	r2, #0
   12230:	ldr	r3, [r3, #4]
   12234:	str	r8, [sp, #20]
   12238:	str	r3, [sp, #36]	; 0x24
   1223c:	bne	12648 <g_strcmp0@plt+0x5c4>
   12240:	ldr	r3, [r4, #8]
   12244:	cmp	r3, #0
   12248:	bne	12630 <g_strcmp0@plt+0x5ac>
   1224c:	ldr	r3, [pc, #2604]	; 12c80 <g_strcmp0@plt+0xbfc>
   12250:	add	r9, sp, #96	; 0x60
   12254:	str	r9, [sp, #40]	; 0x28
   12258:	add	r7, sp, #92	; 0x5c
   1225c:	ldr	ip, [sp, #40]	; 0x28
   12260:	add	r9, r9, #8
   12264:	ldm	r3, {r0, r1, r2}
   12268:	ldr	sl, [sp, #20]
   1226c:	ldr	fp, [sp, #36]	; 0x24
   12270:	stm	ip, {r0, r1, r2}
   12274:	movw	r0, #22004	; 0x55f4
   12278:	movw	r1, #22012	; 0x55fc
   1227c:	movt	r0, #1
   12280:	movt	r1, #1
   12284:	str	sl, [sp, #76]	; 0x4c
   12288:	str	fp, [sp, #72]	; 0x48
   1228c:	bl	12000 <gst_element_factory_make@plt>
   12290:	movw	r1, #22032	; 0x5610
   12294:	movt	r1, #1
   12298:	mov	sl, r0
   1229c:	movw	r0, #22020	; 0x5604
   122a0:	movt	r0, #1
   122a4:	bl	12000 <gst_element_factory_make@plt>
   122a8:	movw	r1, #22048	; 0x5620
   122ac:	movt	r1, #1
   122b0:	mov	fp, r0
   122b4:	movw	r0, #22020	; 0x5604
   122b8:	movt	r0, #1
   122bc:	bl	12000 <gst_element_factory_make@plt>
   122c0:	mov	r2, #1
   122c4:	mov	r3, #0
   122c8:	movw	r1, #22064	; 0x5630
   122cc:	movt	r1, #1
   122d0:	str	r0, [sp, #32]
   122d4:	bl	11eec <g_object_set@plt>
   122d8:	ldr	ip, [sp, #32]
   122dc:	mov	r0, sl
   122e0:	mov	r2, fp
   122e4:	mov	r1, #3
   122e8:	movw	r3, #22096	; 0x5650
   122ec:	str	r1, [sp, #8]
   122f0:	str	ip, [sp]
   122f4:	movt	r3, #1
   122f8:	movw	r1, #22072	; 0x5638
   122fc:	str	r3, [sp, #4]
   12300:	movt	r1, #1
   12304:	mov	r3, #0
   12308:	str	r3, [sp, #12]
   1230c:	movw	r3, #22084	; 0x5644
   12310:	movt	r3, #1
   12314:	bl	11eec <g_object_set@plt>
   12318:	str	sl, [sp, #80]	; 0x50
   1231c:	bl	11d6c <gst_registry_get@plt>
   12320:	ldr	r8, [sp, #20]
   12324:	mov	sl, r0
   12328:	ldr	r1, [r7, #4]!
   1232c:	mov	r0, sl
   12330:	bl	11fb8 <gst_registry_find_plugin@plt>
   12334:	subs	r1, r0, #0
   12338:	beq	12344 <g_strcmp0@plt+0x2c0>
   1233c:	mov	r0, sl
   12340:	bl	11d3c <gst_registry_remove_plugin@plt>
   12344:	cmp	r7, r9
   12348:	bne	12328 <g_strcmp0@plt+0x2a4>
   1234c:	ldr	r7, [sp, #76]	; 0x4c
   12350:	movw	r1, #22104	; 0x5658
   12354:	movt	r1, #1
   12358:	str	r8, [sp, #20]
   1235c:	mov	r0, r7
   12360:	bl	11e50 <g_str_has_prefix@plt>
   12364:	cmp	r0, #0
   12368:	beq	124ec <g_strcmp0@plt+0x468>
   1236c:	movw	r1, #22152	; 0x5688
   12370:	ldr	r0, [sp, #80]	; 0x50
   12374:	movt	r1, #1
   12378:	ldr	r2, [sp, #76]	; 0x4c
   1237c:	mov	r3, #0
   12380:	bl	11eec <g_object_set@plt>
   12384:	ldr	r3, [r4, #4]
   12388:	cmp	r3, #0
   1238c:	bne	12614 <g_strcmp0@plt+0x590>
   12390:	ldr	r3, [r4, #8]
   12394:	cmp	r3, #0
   12398:	bne	12690 <g_strcmp0@plt+0x60c>
   1239c:	ldr	r3, [r6, #4]
   123a0:	cmp	r3, #0
   123a4:	bne	12680 <g_strcmp0@plt+0x5fc>
   123a8:	ldr	r3, [r4, #4]
   123ac:	cmp	r3, #0
   123b0:	bne	12664 <g_strcmp0@plt+0x5e0>
   123b4:	mov	r1, #3
   123b8:	ldr	r0, [sp, #80]	; 0x50
   123bc:	bl	11cac <gst_element_set_state@plt>
   123c0:	ldr	r0, [sp, #80]	; 0x50
   123c4:	bl	11e80 <gst_element_get_bus@plt>
   123c8:	ldr	r8, [sp, #20]
   123cc:	mov	r9, #2
   123d0:	movt	r9, #32
   123d4:	mov	r7, r0
   123d8:	mvn	r2, #0
   123dc:	mvn	r3, #0
   123e0:	str	r9, [sp]
   123e4:	mov	r0, r7
   123e8:	bl	11ff4 <gst_bus_timed_pop_filtered@plt>
   123ec:	ldr	r3, [r0, #36]	; 0x24
   123f0:	mov	sl, r0
   123f4:	ldr	r2, [r0, #48]	; 0x30
   123f8:	cmp	r3, #2
   123fc:	beq	1241c <g_strcmp0@plt+0x398>
   12400:	cmp	r3, #2097152	; 0x200000
   12404:	bne	12414 <g_strcmp0@plt+0x390>
   12408:	ldr	r3, [sp, #80]	; 0x50
   1240c:	cmp	r2, r3
   12410:	beq	126ac <g_strcmp0@plt+0x628>
   12414:	bl	11f04 <gst_mini_object_unref@plt>
   12418:	b	123d8 <g_strcmp0@plt+0x354>
   1241c:	ldr	r1, [sp, #80]	; 0x50
   12420:	movw	r2, #21496	; 0x53f8
   12424:	movt	r2, #1
   12428:	str	r8, [sp, #20]
   1242c:	bl	13324 <g_strcmp0@plt+0x12a0>
   12430:	mov	r0, sl
   12434:	bl	11f04 <gst_mini_object_unref@plt>
   12438:	mov	r0, r7
   1243c:	bl	11c7c <gst_object_unref@plt>
   12440:	ldr	r1, [sp, #20]
   12444:	movw	r0, #22208	; 0x56c0
   12448:	movt	r0, #1
   1244c:	bl	11f34 <g_print@plt>
   12450:	mov	r0, #1
   12454:	bl	11d18 <exit@plt>
   12458:	movw	r8, #29168	; 0x71f0
   1245c:	movt	r8, #2
   12460:	ldr	r0, [r8]
   12464:	bl	11eb0 <fileno@plt>
   12468:	mov	r1, #4
   1246c:	mov	r2, #2048	; 0x800
   12470:	bl	11dcc <fcntl@plt>
   12474:	ldr	r0, [r8]
   12478:	mov	r1, #0
   1247c:	bl	11e2c <setbuf@plt>
   12480:	b	12180 <g_strcmp0@plt+0xfc>
   12484:	bl	1200c <__errno_location@plt>
   12488:	str	r4, [r0]
   1248c:	mov	r8, r0
   12490:	mov	r0, #20
   12494:	bl	11fa0 <nice@plt>
   12498:	cmp	r0, #20
   1249c:	beq	1216c <g_strcmp0@plt+0xe8>
   124a0:	ldr	r3, [r8]
   124a4:	cmp	r3, #0
   124a8:	beq	1216c <g_strcmp0@plt+0xe8>
   124ac:	movw	r0, #21744	; 0x54f0
   124b0:	movw	r2, #21896	; 0x5588
   124b4:	movt	r0, #1
   124b8:	movt	r2, #1
   124bc:	mov	r1, #16
   124c0:	bl	11d0c <g_log@plt>
   124c4:	b	1216c <g_strcmp0@plt+0xe8>
   124c8:	ldr	r3, [sp, #60]	; 0x3c
   124cc:	movw	r0, #21852	; 0x555c
   124d0:	movt	r0, #1
   124d4:	ldr	r1, [r3, #8]
   124d8:	bl	11f34 <g_print@plt>
   124dc:	ldr	r0, [sp, #60]	; 0x3c
   124e0:	bl	11c64 <g_error_free@plt>
   124e4:	mov	r0, #1
   124e8:	b	121dc <g_strcmp0@plt+0x158>
   124ec:	mov	r0, r7
   124f0:	movw	r1, #22112	; 0x5660
   124f4:	movt	r1, #1
   124f8:	bl	11e50 <g_str_has_prefix@plt>
   124fc:	subs	r9, r0, #0
   12500:	bne	1236c <g_strcmp0@plt+0x2e8>
   12504:	ldr	r0, [sp, #76]	; 0x4c
   12508:	bl	11c40 <g_file_new_for_commandline_arg@plt>
   1250c:	mov	fp, r0
   12510:	bl	11d60 <g_file_get_path@plt>
   12514:	mov	r1, r9
   12518:	mov	r2, r9
   1251c:	mov	r3, r9
   12520:	mov	r7, r0
   12524:	bl	11df0 <g_content_type_guess@plt>
   12528:	mov	r9, r0
   1252c:	mov	r0, r7
   12530:	bl	11ec8 <g_free@plt>
   12534:	mov	r0, r9
   12538:	movw	r1, #22752	; 0x58e0
   1253c:	movt	r1, #1
   12540:	bl	12084 <g_strcmp0@plt>
   12544:	subs	r7, r0, #0
   12548:	bne	12bb4 <g_strcmp0@plt+0xb30>
   1254c:	mov	r0, r9
   12550:	bl	11ec8 <g_free@plt>
   12554:	add	r3, sp, #144	; 0x90
   12558:	mov	r0, fp
   1255c:	str	r7, [r3, #-80]!	; 0xffffffb0
   12560:	str	r3, [sp, #32]
   12564:	bl	12024 <g_file_get_uri@plt>
   12568:	mov	sl, r0
   1256c:	bl	11ed4 <totem_pl_parser_new@plt>
   12570:	ldr	r3, [sp, #32]
   12574:	movw	r1, #22120	; 0x5668
   12578:	str	r7, [sp]
   1257c:	movt	r1, #1
   12580:	str	r7, [sp, #4]
   12584:	movw	r2, #12148	; 0x2f74
   12588:	movt	r2, #1
   1258c:	mov	r9, r0
   12590:	bl	11e5c <g_signal_connect_data@plt>
   12594:	mov	r2, r7
   12598:	mov	r1, sl
   1259c:	mov	r0, r9
   125a0:	bl	11fdc <totem_pl_parser_parse@plt>
   125a4:	mov	r7, r0
   125a8:	mov	r0, sl
   125ac:	bl	11ec8 <g_free@plt>
   125b0:	mov	r0, r9
   125b4:	bl	11f88 <g_object_unref@plt>
   125b8:	cmp	r7, #2
   125bc:	bne	12bcc <g_strcmp0@plt+0xb48>
   125c0:	ldr	r7, [sp, #64]	; 0x40
   125c4:	cmp	r7, #0
   125c8:	beq	12bbc <g_strcmp0@plt+0xb38>
   125cc:	mov	r0, fp
   125d0:	bl	11f88 <g_object_unref@plt>
   125d4:	ldr	r3, [r4, #4]
   125d8:	cmp	r3, #0
   125dc:	bne	12b6c <g_strcmp0@plt+0xae8>
   125e0:	ldr	r0, [sp, #80]	; 0x50
   125e4:	mov	r2, r7
   125e8:	mov	r3, #0
   125ec:	movw	r1, #22152	; 0x5688
   125f0:	movt	r1, #1
   125f4:	bl	11eec <g_object_set@plt>
   125f8:	mov	r0, r7
   125fc:	bl	11ec8 <g_free@plt>
   12600:	b	12384 <g_strcmp0@plt+0x300>
   12604:	ldr	r3, [r8, #4]
   12608:	cmp	r3, #1
   1260c:	bne	12220 <g_strcmp0@plt+0x19c>
   12610:	b	121ac <g_strcmp0@plt+0x128>
   12614:	movw	r0, #21744	; 0x54f0
   12618:	movw	r2, #22156	; 0x568c
   1261c:	movt	r0, #1
   12620:	movt	r2, #1
   12624:	mov	r1, #32
   12628:	bl	11d0c <g_log@plt>
   1262c:	b	12390 <g_strcmp0@plt+0x30c>
   12630:	movw	r0, #21988	; 0x55e4
   12634:	mov	r2, #0
   12638:	mov	r3, #1073741824	; 0x40000000
   1263c:	movt	r0, #1
   12640:	bl	11d84 <g_printf@plt>
   12644:	b	1224c <g_strcmp0@plt+0x1c8>
   12648:	movw	r0, #21744	; 0x54f0
   1264c:	movw	r2, #21936	; 0x55b0
   12650:	movt	r0, #1
   12654:	movt	r2, #1
   12658:	mov	r1, #32
   1265c:	bl	11d0c <g_log@plt>
   12660:	b	12240 <g_strcmp0@plt+0x1bc>
   12664:	movw	r0, #21744	; 0x54f0
   12668:	movw	r2, #22180	; 0x56a4
   1266c:	movt	r0, #1
   12670:	movt	r2, #1
   12674:	mov	r1, #32
   12678:	bl	11d0c <g_log@plt>
   1267c:	b	123b4 <g_strcmp0@plt+0x330>
   12680:	ldr	r0, [sp, #20]
   12684:	mov	r1, #0
   12688:	bl	12e20 <g_strcmp0@plt+0xd9c>
   1268c:	b	123a8 <g_strcmp0@plt+0x324>
   12690:	movw	r0, #21988	; 0x55e4
   12694:	mov	r2, #0
   12698:	mov	r3, #0
   1269c:	movt	r0, #1
   126a0:	movt	r3, #16408	; 0x4018
   126a4:	bl	11d84 <g_printf@plt>
   126a8:	b	1239c <g_strcmp0@plt+0x318>
   126ac:	str	r8, [sp, #20]
   126b0:	bl	11f04 <gst_mini_object_unref@plt>
   126b4:	mov	r0, r7
   126b8:	bl	11c7c <gst_object_unref@plt>
   126bc:	movw	r3, #29164	; 0x71ec
   126c0:	movt	r3, #2
   126c4:	ldr	r3, [r3]
   126c8:	cmp	r3, #4
   126cc:	bls	1271c <g_strcmp0@plt+0x698>
   126d0:	movw	r3, #29160	; 0x71e8
   126d4:	movt	r3, #2
   126d8:	mov	r0, #3
   126dc:	ldr	r7, [r3]
   126e0:	bl	11bbc <gst_element_state_get_name@plt>
   126e4:	movw	r2, #377	; 0x179
   126e8:	movw	r3, #22812	; 0x591c
   126ec:	str	r2, [sp]
   126f0:	movt	r3, #1
   126f4:	movw	r2, #22776	; 0x58f8
   126f8:	str	r3, [sp, #8]
   126fc:	movt	r2, #1
   12700:	mov	r3, #0
   12704:	mov	r1, #5
   12708:	str	r3, [sp, #4]
   1270c:	ldr	r3, [pc, #1392]	; 12c84 <g_strcmp0@plt+0xc00>
   12710:	str	r0, [sp, #12]
   12714:	mov	r0, r7
   12718:	bl	11d78 <gst_debug_log@plt>
   1271c:	ldr	r0, [sp, #80]	; 0x50
   12720:	bl	11e80 <gst_element_get_bus@plt>
   12724:	mov	r3, #0
   12728:	ldr	r2, [sp, #80]	; 0x50
   1272c:	movw	r1, #12220	; 0x2fbc
   12730:	movt	r1, #1
   12734:	mov	r7, r0
   12738:	bl	11bd4 <gst_bus_set_sync_handler@plt>
   1273c:	mov	r0, r7
   12740:	bl	11f88 <g_object_unref@plt>
   12744:	ldr	r3, [r4, #4]
   12748:	cmp	r3, #0
   1274c:	bne	128d0 <g_strcmp0@plt+0x84c>
   12750:	add	r0, sp, #72	; 0x48
   12754:	movw	r1, #22292	; 0x5714
   12758:	movt	r1, #1
   1275c:	bl	1323c <g_strcmp0@plt+0x11b8>
   12760:	add	r0, sp, #72	; 0x48
   12764:	movw	r1, #22308	; 0x5724
   12768:	movt	r1, #1
   1276c:	bl	1323c <g_strcmp0@plt+0x11b8>
   12770:	mov	r3, #0
   12774:	add	r2, sp, #64	; 0x40
   12778:	movw	r1, #22324	; 0x5734
   1277c:	ldr	r0, [sp, #80]	; 0x50
   12780:	movt	r1, #1
   12784:	bl	11ef8 <g_object_get@plt>
   12788:	ldr	r3, [sp, #64]	; 0x40
   1278c:	cmp	r3, #0
   12790:	beq	12c1c <g_strcmp0@plt+0xb98>
   12794:	ldr	r0, [sp, #80]	; 0x50
   12798:	add	r2, sp, #64	; 0x40
   1279c:	mov	r1, #3
   127a0:	mvn	sl, #0
   127a4:	mvn	fp, #0
   127a8:	strd	sl, [sp, #64]	; 0x40
   127ac:	bl	11c28 <gst_element_query_duration@plt>
   127b0:	cmp	r0, #0
   127b4:	beq	128ec <g_strcmp0@plt+0x868>
   127b8:	ldrd	r0, [sp, #64]	; 0x40
   127bc:	cmp	r1, fp
   127c0:	cmpeq	r0, sl
   127c4:	beq	128ec <g_strcmp0@plt+0x868>
   127c8:	movw	r2, #16960	; 0x4240
   127cc:	mov	r3, #0
   127d0:	movt	r2, #15
   127d4:	bl	145e0 <g_strcmp0@plt+0x255c>
   127d8:	strd	r0, [sp, #88]	; 0x58
   127dc:	ldr	r3, [r4, #4]
   127e0:	cmp	r3, #0
   127e4:	bne	128fc <g_strcmp0@plt+0x878>
   127e8:	ldr	r3, [r4, #8]
   127ec:	cmp	r3, #0
   127f0:	bne	1291c <g_strcmp0@plt+0x898>
   127f4:	ldrd	r8, [r6, #8]
   127f8:	mvn	r0, #0
   127fc:	mvn	r1, #0
   12800:	cmp	r9, r1
   12804:	cmpeq	r8, r0
   12808:	strd	r8, [sp, #24]
   1280c:	beq	12990 <g_strcmp0@plt+0x90c>
   12810:	ldrd	r2, [sp, #88]	; 0x58
   12814:	cmp	r3, r1
   12818:	cmpeq	r2, r0
   1281c:	beq	12c64 <g_strcmp0@plt+0xbe0>
   12820:	ldr	r9, [sp, #24]
   12824:	mov	r1, #1000	; 0x3e8
   12828:	ldr	sl, [sp, #28]
   1282c:	umull	r2, r3, r9, r1
   12830:	mla	r3, r1, sl, r3
   12834:	orrs	fp, r2, r3
   12838:	beq	12844 <g_strcmp0@plt+0x7c0>
   1283c:	add	r0, sp, #80	; 0x50
   12840:	bl	13000 <g_strcmp0@plt+0xf7c>
   12844:	ldr	r0, [sp, #80]	; 0x50
   12848:	bl	136d4 <g_strcmp0@plt+0x1650>
   1284c:	mov	r7, r0
   12850:	ldr	r3, [r4, #8]
   12854:	cmp	r3, #0
   12858:	bne	12974 <g_strcmp0@plt+0x8f0>
   1285c:	bl	12f60 <g_strcmp0@plt+0xedc>
   12860:	add	r0, sp, #72	; 0x48
   12864:	bl	12f8c <g_strcmp0@plt+0xf08>
   12868:	ldr	r3, [r4, #8]
   1286c:	cmp	r3, #0
   12870:	bne	12958 <g_strcmp0@plt+0x8d4>
   12874:	cmp	r7, #0
   12878:	beq	12c4c <g_strcmp0@plt+0xbc8>
   1287c:	ldr	r3, [r4, #4]
   12880:	cmp	r3, #0
   12884:	bne	12938 <g_strcmp0@plt+0x8b4>
   12888:	ldr	r1, [sp, #36]	; 0x24
   1288c:	mov	r0, r7
   12890:	ldr	r2, [sp, #20]
   12894:	ldr	r3, [r6]
   12898:	bl	130f4 <g_strcmp0@plt+0x1070>
   1289c:	mov	r0, r7
   128a0:	bl	11f88 <g_object_unref@plt>
   128a4:	ldr	r0, [r4, #8]
   128a8:	cmp	r0, #0
   128ac:	beq	121dc <g_strcmp0@plt+0x158>
   128b0:	movw	r0, #21988	; 0x55e4
   128b4:	mov	r2, #0
   128b8:	mov	r3, #0
   128bc:	movt	r0, #1
   128c0:	movt	r3, #16473	; 0x4059
   128c4:	bl	11d84 <g_printf@plt>
   128c8:	mov	r0, #0
   128cc:	b	121dc <g_strcmp0@plt+0x158>
   128d0:	movw	r0, #21744	; 0x54f0
   128d4:	movw	r2, #22260	; 0x56f4
   128d8:	movt	r0, #1
   128dc:	movt	r2, #1
   128e0:	mov	r1, #32
   128e4:	bl	11d0c <g_log@plt>
   128e8:	b	12750 <g_strcmp0@plt+0x6cc>
   128ec:	mvn	r2, #0
   128f0:	mvn	r3, #0
   128f4:	strd	r2, [sp, #88]	; 0x58
   128f8:	b	127dc <g_strcmp0@plt+0x758>
   128fc:	movw	r0, #21744	; 0x54f0
   12900:	movw	r2, #22396	; 0x577c
   12904:	movt	r0, #1
   12908:	movt	r2, #1
   1290c:	mov	r1, #32
   12910:	ldr	r3, [sp, #20]
   12914:	bl	11d0c <g_log@plt>
   12918:	b	127e8 <g_strcmp0@plt+0x764>
   1291c:	movw	r0, #21988	; 0x55e4
   12920:	mov	r2, #0
   12924:	mov	r3, #0
   12928:	movt	r0, #1
   1292c:	movt	r3, #16420	; 0x4024
   12930:	bl	11d84 <g_printf@plt>
   12934:	b	127f4 <g_strcmp0@plt+0x770>
   12938:	movw	r0, #21744	; 0x54f0
   1293c:	movw	r2, #22716	; 0x58bc
   12940:	movt	r0, #1
   12944:	movt	r2, #1
   12948:	mov	r1, #32
   1294c:	ldr	r3, [sp, #36]	; 0x24
   12950:	bl	11d0c <g_log@plt>
   12954:	b	12888 <g_strcmp0@plt+0x804>
   12958:	movw	r0, #21988	; 0x55e4
   1295c:	mov	r2, #0
   12960:	mov	r3, #0
   12964:	movt	r0, #1
   12968:	movt	r3, #16471	; 0x4057
   1296c:	bl	11d84 <g_printf@plt>
   12970:	b	12874 <g_strcmp0@plt+0x7f0>
   12974:	movw	r0, #21988	; 0x55e4
   12978:	mov	r2, #0
   1297c:	mov	r3, #32768	; 0x8000
   12980:	movt	r0, #1
   12984:	movt	r3, #16470	; 0x4056
   12988:	bl	11d84 <g_printf@plt>
   1298c:	b	1285c <g_strcmp0@plt+0x7d8>
   12990:	ldr	lr, [pc, #752]	; 12c88 <g_strcmp0@plt+0xc04>
   12994:	add	ip, sp, #96	; 0x60
   12998:	ldrd	r8, [sp, #88]	; 0x58
   1299c:	ldrd	sl, [sp, #24]
   129a0:	ldm	lr!, {r0, r1, r2, r3}
   129a4:	cmp	r9, fp
   129a8:	cmpeq	r8, sl
   129ac:	stmia	ip!, {r0, r1, r2, r3}
   129b0:	ldm	lr!, {r0, r1, r2, r3}
   129b4:	stmia	ip!, {r0, r1, r2, r3}
   129b8:	ldm	lr, {r0, r1}
   129bc:	stm	ip, {r0, r1}
   129c0:	beq	12b8c <g_strcmp0@plt+0xb08>
   129c4:	ldr	r8, [sp, #20]
   129c8:	add	sl, sp, #96	; 0x60
   129cc:	mov	r9, #1
   129d0:	vldr	s18, [pc, #672]	; 12c78 <g_strcmp0@plt+0xbf4>
   129d4:	str	r6, [sp, #40]	; 0x28
   129d8:	str	r5, [sp, #44]	; 0x2c
   129dc:	ldr	r3, [r4, #4]
   129e0:	sub	fp, r9, #1
   129e4:	cmp	r3, #0
   129e8:	bne	12b08 <g_strcmp0@plt+0xa84>
   129ec:	ldrd	r0, [sp, #88]	; 0x58
   129f0:	vldmia	sl!, {d8}
   129f4:	bl	14580 <g_strcmp0@plt+0x24fc>
   129f8:	add	r7, sp, #80	; 0x50
   129fc:	vmov	d6, r0, r1
   12a00:	vmul.f64	d6, d8, d6
   12a04:	vmov	r0, r1, d6
   12a08:	bl	14638 <g_strcmp0@plt+0x25b4>
   12a0c:	mov	r2, r0
   12a10:	mov	r3, r1
   12a14:	mov	r0, r7
   12a18:	bl	13000 <g_strcmp0@plt+0xf7c>
   12a1c:	ldr	r3, [r4, #4]
   12a20:	cmp	r3, #0
   12a24:	bne	12b2c <g_strcmp0@plt+0xaa8>
   12a28:	ldr	r0, [sp, #80]	; 0x50
   12a2c:	bl	136d4 <g_strcmp0@plt+0x1650>
   12a30:	subs	r7, r0, #0
   12a34:	beq	12ae0 <g_strcmp0@plt+0xa5c>
   12a38:	bl	11d9c <gdk_pixbuf_get_rowstride@plt>
   12a3c:	mov	r5, r0
   12a40:	mov	r0, r7
   12a44:	bl	11e08 <gdk_pixbuf_get_height@plt>
   12a48:	mov	r6, r0
   12a4c:	mov	r0, r7
   12a50:	bl	12018 <gdk_pixbuf_get_pixels@plt>
   12a54:	mul	r1, r6, r5
   12a58:	cmp	r1, #0
   12a5c:	ble	12bd8 <g_strcmp0@plt+0xb54>
   12a60:	add	r2, r0, r1
   12a64:	mov	r3, r0
   12a68:	vldr	s15, [pc, #524]	; 12c7c <g_strcmp0@plt+0xbf8>
   12a6c:	ldrb	ip, [r3], #1
   12a70:	cmp	r3, r2
   12a74:	vmov	s14, ip
   12a78:	vcvt.f32.u32	s14, s14
   12a7c:	vadd.f32	s15, s15, s14
   12a80:	bne	12a6c <g_strcmp0@plt+0x9e8>
   12a84:	vmov	s12, r1
   12a88:	vldr	s14, [pc, #492]	; 12c7c <g_strcmp0@plt+0xbf8>
   12a8c:	vcvt.f32.s32	s13, s12
   12a90:	vdiv.f32	s13, s15, s13
   12a94:	ldrb	r3, [r0], #1
   12a98:	cmp	r2, r0
   12a9c:	vmov	s15, r3
   12aa0:	vcvt.f32.u32	s15, s15
   12aa4:	vsub.f32	s15, s15, s13
   12aa8:	vmla.f32	s14, s15, s15
   12aac:	bne	12a94 <g_strcmp0@plt+0xa10>
   12ab0:	sub	r1, r1, #1
   12ab4:	vmov	s12, r1
   12ab8:	vcvt.f32.s32	s15, s12
   12abc:	vdiv.f32	s14, s14, s15
   12ac0:	vcmpe.f32	s14, s18
   12ac4:	vmrs	APSR_nzcv, fpscr
   12ac8:	bgt	12be0 <g_strcmp0@plt+0xb5c>
   12acc:	cmp	r9, #5
   12ad0:	beq	12ae0 <g_strcmp0@plt+0xa5c>
   12ad4:	mov	r0, r7
   12ad8:	mov	r7, #0
   12adc:	bl	11f88 <g_object_unref@plt>
   12ae0:	ldr	r3, [r4, #4]
   12ae4:	cmp	r3, #0
   12ae8:	bne	12b4c <g_strcmp0@plt+0xac8>
   12aec:	add	r9, r9, #1
   12af0:	cmp	r9, #6
   12af4:	bne	129dc <g_strcmp0@plt+0x958>
   12af8:	str	r8, [sp, #20]
   12afc:	ldr	r6, [sp, #40]	; 0x28
   12b00:	ldr	r5, [sp, #44]	; 0x2c
   12b04:	b	12850 <g_strcmp0@plt+0x7cc>
   12b08:	ldrd	r2, [sl]
   12b0c:	movw	r0, #21744	; 0x54f0
   12b10:	mov	r1, #32
   12b14:	movt	r0, #1
   12b18:	strd	r2, [sp]
   12b1c:	movw	r2, #22528	; 0x5800
   12b20:	movt	r2, #1
   12b24:	bl	11d0c <g_log@plt>
   12b28:	b	129ec <g_strcmp0@plt+0x968>
   12b2c:	movw	r0, #21744	; 0x54f0
   12b30:	movw	r2, #22548	; 0x5814
   12b34:	movt	r0, #1
   12b38:	movt	r2, #1
   12b3c:	mov	r1, #32
   12b40:	mov	r3, fp
   12b44:	bl	11d0c <g_log@plt>
   12b48:	b	12a28 <g_strcmp0@plt+0x9a4>
   12b4c:	mov	r3, fp
   12b50:	movw	r0, #21744	; 0x54f0
   12b54:	movw	r2, #22616	; 0x5858
   12b58:	movt	r0, #1
   12b5c:	movt	r2, #1
   12b60:	mov	r1, #32
   12b64:	bl	11d0c <g_log@plt>
   12b68:	b	12aec <g_strcmp0@plt+0xa68>
   12b6c:	movw	r0, #21744	; 0x54f0
   12b70:	movw	r2, #22136	; 0x5678
   12b74:	movt	r0, #1
   12b78:	movt	r2, #1
   12b7c:	mov	r1, #32
   12b80:	mov	r3, r7
   12b84:	bl	11d0c <g_log@plt>
   12b88:	b	125e0 <g_strcmp0@plt+0x55c>
   12b8c:	ldr	r3, [r4, #4]
   12b90:	cmp	r3, #0
   12b94:	beq	12844 <g_strcmp0@plt+0x7c0>
   12b98:	movw	r0, #21744	; 0x54f0
   12b9c:	movw	r2, #22484	; 0x57d4
   12ba0:	movt	r0, #1
   12ba4:	movt	r2, #1
   12ba8:	mov	r1, #32
   12bac:	bl	11d0c <g_log@plt>
   12bb0:	b	12844 <g_strcmp0@plt+0x7c0>
   12bb4:	mov	r0, r9
   12bb8:	bl	11ec8 <g_free@plt>
   12bbc:	mov	r0, fp
   12bc0:	bl	12024 <g_file_get_uri@plt>
   12bc4:	mov	r7, r0
   12bc8:	b	125cc <g_strcmp0@plt+0x548>
   12bcc:	ldr	r0, [sp, #64]	; 0x40
   12bd0:	bl	11ec8 <g_free@plt>
   12bd4:	b	12bbc <g_strcmp0@plt+0xb38>
   12bd8:	vldr	s14, [pc, #156]	; 12c7c <g_strcmp0@plt+0xbf8>
   12bdc:	b	12ab0 <g_strcmp0@plt+0xa2c>
   12be0:	ldr	r3, [r4, #4]
   12be4:	str	r8, [sp, #20]
   12be8:	cmp	r3, #0
   12bec:	ldr	r6, [sp, #40]	; 0x28
   12bf0:	ldr	r5, [sp, #44]	; 0x2c
   12bf4:	beq	12850 <g_strcmp0@plt+0x7cc>
   12bf8:	mov	r3, fp
   12bfc:	movw	r0, #21744	; 0x54f0
   12c00:	movw	r2, #22580	; 0x5834
   12c04:	movt	r0, #1
   12c08:	movt	r2, #1
   12c0c:	mov	r1, #32
   12c10:	bl	11d0c <g_log@plt>
   12c14:	b	12850 <g_strcmp0@plt+0x7cc>
   12c18:	bl	11ebc <__stack_chk_fail@plt>
   12c1c:	ldr	r3, [r4, #4]
   12c20:	cmp	r3, #0
   12c24:	beq	12c44 <g_strcmp0@plt+0xbc0>
   12c28:	movw	r0, #21744	; 0x54f0
   12c2c:	movw	r2, #22332	; 0x573c
   12c30:	ldr	r3, [sp, #20]
   12c34:	movt	r0, #1
   12c38:	movt	r2, #1
   12c3c:	mov	r1, #32
   12c40:	bl	11d0c <g_log@plt>
   12c44:	mov	r0, #1
   12c48:	bl	11d18 <exit@plt>
   12c4c:	ldr	r1, [sp, #20]
   12c50:	movw	r0, #22656	; 0x5880
   12c54:	movt	r0, #1
   12c58:	bl	11f34 <g_print@plt>
   12c5c:	mov	r0, #1
   12c60:	bl	11d18 <exit@plt>
   12c64:	movw	r0, #22420	; 0x5794
   12c68:	ldr	r1, [sp, #76]	; 0x4c
   12c6c:	movt	r0, #1
   12c70:	bl	11f34 <g_print@plt>
   12c74:	b	12c44 <g_strcmp0@plt+0xbc0>
   12c78:	orrmi	r0, r0, #0
   12c7c:	andeq	r0, r0, r0
   12c80:			; <UNDEFINED> instruction: 0x000153b0
   12c84:	andeq	r5, r1, r8, ror #7
   12c88:	andeq	r5, r1, r0, asr #7
   12c8c:	mov	fp, #0
   12c90:	mov	lr, #0
   12c94:	pop	{r1}		; (ldr r1, [sp], #4)
   12c98:	mov	r2, sp
   12c9c:	push	{r2}		; (str r2, [sp, #-4]!)
   12ca0:	push	{r0}		; (str r0, [sp, #-4]!)
   12ca4:	ldr	ip, [pc, #16]	; 12cbc <g_strcmp0@plt+0xc38>
   12ca8:	push	{ip}		; (str ip, [sp, #-4]!)
   12cac:	ldr	r0, [pc, #12]	; 12cc0 <g_strcmp0@plt+0xc3c>
   12cb0:	ldr	r3, [pc, #12]	; 12cc4 <g_strcmp0@plt+0xc40>
   12cb4:	bl	1203c <__libc_start_main@plt>
   12cb8:	bl	11dfc <abort@plt>
   12cbc:	andeq	r5, r1, ip, asr r2
   12cc0:	muleq	r1, r0, r0
   12cc4:	strdeq	r5, [r1], -r8
   12cc8:	ldr	r3, [pc, #20]	; 12ce4 <g_strcmp0@plt+0xc60>
   12ccc:	ldr	r2, [pc, #20]	; 12ce8 <g_strcmp0@plt+0xc64>
   12cd0:	add	r3, pc, r3
   12cd4:	ldr	r2, [r3, r2]
   12cd8:	cmp	r2, #0
   12cdc:	bxeq	lr
   12ce0:	b	12048 <__gmon_start__@plt>
   12ce4:	andeq	r4, r1, r8, lsr #6
   12ce8:			; <UNDEFINED> instruction: 0x000001b8
   12cec:	push	{r3, lr}
   12cf0:	movw	r0, #29152	; 0x71e0
   12cf4:	ldr	r3, [pc, #36]	; 12d20 <g_strcmp0@plt+0xc9c>
   12cf8:	movt	r0, #2
   12cfc:	rsb	r3, r0, r3
   12d00:	cmp	r3, #6
   12d04:	popls	{r3, pc}
   12d08:	movw	r3, #0
   12d0c:	movt	r3, #0
   12d10:	cmp	r3, #0
   12d14:	popeq	{r3, pc}
   12d18:	blx	r3
   12d1c:	pop	{r3, pc}
   12d20:	andeq	r7, r2, r3, ror #3
   12d24:	push	{r3, lr}
   12d28:	movw	r0, #29152	; 0x71e0
   12d2c:	movw	r3, #29152	; 0x71e0
   12d30:	movt	r0, #2
   12d34:	movt	r3, #2
   12d38:	rsb	r3, r0, r3
   12d3c:	asr	r3, r3, #2
   12d40:	add	r3, r3, r3, lsr #31
   12d44:	asrs	r1, r3, #1
   12d48:	popeq	{r3, pc}
   12d4c:	movw	r2, #0
   12d50:	movt	r2, #0
   12d54:	cmp	r2, #0
   12d58:	popeq	{r3, pc}
   12d5c:	blx	r2
   12d60:	pop	{r3, pc}
   12d64:	push	{r4, lr}
   12d68:	movw	r4, #29172	; 0x71f4
   12d6c:	movt	r4, #2
   12d70:	ldrb	r3, [r4]
   12d74:	cmp	r3, #0
   12d78:	popne	{r4, pc}
   12d7c:	bl	12cec <g_strcmp0@plt+0xc68>
   12d80:	mov	r3, #1
   12d84:	strb	r3, [r4]
   12d88:	pop	{r4, pc}
   12d8c:	movw	r0, #28364	; 0x6ecc
   12d90:	movt	r0, #2
   12d94:	push	{r3, lr}
   12d98:	ldr	r3, [r0]
   12d9c:	cmp	r3, #0
   12da0:	beq	12db8 <g_strcmp0@plt+0xd34>
   12da4:	movw	r3, #0
   12da8:	movt	r3, #0
   12dac:	cmp	r3, #0
   12db0:	beq	12db8 <g_strcmp0@plt+0xd34>
   12db4:	blx	r3
   12db8:	pop	{r3, lr}
   12dbc:	b	12d24 <g_strcmp0@plt+0xca0>
   12dc0:	push	{r3, r4, r5, lr}
   12dc4:	movw	r4, #29124	; 0x71c4
   12dc8:	movt	r4, #2
   12dcc:	mov	r5, r0
   12dd0:	ldr	r0, [r4]
   12dd4:	bl	11cd0 <g_usleep@plt>
   12dd8:	ldr	r3, [r4, #4]
   12ddc:	cmp	r3, #0
   12de0:	bne	12e08 <g_strcmp0@plt+0xd84>
   12de4:	bl	11bf8 <g_get_application_name@plt>
   12de8:	subs	r1, r0, #0
   12dec:	beq	12e14 <g_strcmp0@plt+0xd90>
   12df0:	mov	r2, r5
   12df4:	movw	r0, #21104	; 0x5270
   12df8:	movt	r0, #1
   12dfc:	bl	11f34 <g_print@plt>
   12e00:	mov	r0, #0
   12e04:	bl	11d18 <exit@plt>
   12e08:	mov	r0, #0
   12e0c:	bl	11d54 <g_thread_exit@plt>
   12e10:	b	12de4 <g_strcmp0@plt+0xd60>
   12e14:	bl	11dc0 <g_get_prgname@plt>
   12e18:	mov	r1, r0
   12e1c:	b	12df0 <g_strcmp0@plt+0xd6c>
   12e20:	push	{r4, r5, r6, r7, r8, r9, lr}
   12e24:	movw	r6, #29152	; 0x71e0
   12e28:	movt	r6, #2
   12e2c:	sub	sp, sp, #132	; 0x84
   12e30:	subs	r7, r0, #0
   12e34:	mov	r8, r1
   12e38:	ldr	r3, [r6]
   12e3c:	str	r3, [sp, #124]	; 0x7c
   12e40:	beq	12efc <g_strcmp0@plt+0xe78>
   12e44:	mov	r0, #3
   12e48:	mov	r1, r7
   12e4c:	add	r2, sp, #16
   12e50:	bl	11c88 <__xstat64@plt>
   12e54:	cmp	r0, #0
   12e58:	bne	12ee4 <g_strcmp0@plt+0xe60>
   12e5c:	ldrd	r4, [sp, #64]	; 0x40
   12e60:	adds	r4, r4, #536870912	; 0x20000000
   12e64:	adc	r5, r5, #0
   12e68:	mov	r1, sp
   12e6c:	mov	r0, #2
   12e70:	strd	r4, [sp]
   12e74:	strd	r4, [sp, #8]
   12e78:	bl	11da8 <setrlimit64@plt>
   12e7c:	mov	r1, sp
   12e80:	mov	r0, #0
   12e84:	mov	r4, #15
   12e88:	mov	r5, #0
   12e8c:	strd	r4, [sp]
   12e90:	strd	r4, [sp, #8]
   12e94:	bl	11da8 <setrlimit64@plt>
   12e98:	cmp	r8, #0
   12e9c:	blt	12ecc <g_strcmp0@plt+0xe48>
   12ea0:	movw	r3, #29124	; 0x71c4
   12ea4:	movt	r3, #2
   12ea8:	movw	r0, #21184	; 0x52c0
   12eac:	movw	r1, #11712	; 0x2dc0
   12eb0:	mov	r2, r7
   12eb4:	movt	r0, #1
   12eb8:	movt	r1, #1
   12ebc:	mov	ip, #0
   12ec0:	strne	r8, [r3]
   12ec4:	str	ip, [r3, #4]
   12ec8:	bl	11d24 <g_thread_new@plt>
   12ecc:	ldr	r2, [sp, #124]	; 0x7c
   12ed0:	ldr	r3, [r6]
   12ed4:	cmp	r2, r3
   12ed8:	bne	12f5c <g_strcmp0@plt+0xed8>
   12edc:	add	sp, sp, #132	; 0x84
   12ee0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12ee4:	movw	r1, #21176	; 0x52b8
   12ee8:	mov	r0, r7
   12eec:	movt	r1, #1
   12ef0:	bl	11e50 <g_str_has_prefix@plt>
   12ef4:	cmp	r0, #0
   12ef8:	bne	12f08 <g_strcmp0@plt+0xe84>
   12efc:	mov	r4, #536870912	; 0x20000000
   12f00:	mov	r5, #0
   12f04:	b	12e68 <g_strcmp0@plt+0xde4>
   12f08:	mov	r1, #0
   12f0c:	mov	r0, r7
   12f10:	mov	r2, r1
   12f14:	bl	11d30 <g_filename_from_uri@plt>
   12f18:	subs	r9, r0, #0
   12f1c:	beq	12f38 <g_strcmp0@plt+0xeb4>
   12f20:	add	r2, sp, #16
   12f24:	mov	r0, #3
   12f28:	mov	r1, r9
   12f2c:	bl	11c88 <__xstat64@plt>
   12f30:	cmp	r0, #0
   12f34:	beq	12f4c <g_strcmp0@plt+0xec8>
   12f38:	mov	r4, #536870912	; 0x20000000
   12f3c:	mov	r5, #0
   12f40:	mov	r0, r9
   12f44:	bl	11ec8 <g_free@plt>
   12f48:	b	12e68 <g_strcmp0@plt+0xde4>
   12f4c:	ldrd	r4, [sp, #64]	; 0x40
   12f50:	adds	r4, r4, #536870912	; 0x20000000
   12f54:	adc	r5, r5, #0
   12f58:	b	12f40 <g_strcmp0@plt+0xebc>
   12f5c:	bl	11ebc <__stack_chk_fail@plt>
   12f60:	movw	r3, #29124	; 0x71c4
   12f64:	movt	r3, #2
   12f68:	mov	r2, #1
   12f6c:	str	r2, [r3, #4]
   12f70:	bx	lr
   12f74:	push	{r4, lr}
   12f78:	mov	r0, r1
   12f7c:	mov	r4, r3
   12f80:	bl	11db4 <g_strdup@plt>
   12f84:	str	r0, [r4]
   12f88:	pop	{r4, pc}
   12f8c:	push	{r4, lr}
   12f90:	mov	r1, #1
   12f94:	mov	r4, r0
   12f98:	ldr	r0, [r0, #8]
   12f9c:	bl	11cac <gst_element_set_state@plt>
   12fa0:	ldr	r0, [r4, #8]
   12fa4:	cmp	r0, #0
   12fa8:	popeq	{r4, pc}
   12fac:	mov	r3, #0
   12fb0:	str	r3, [r4, #8]
   12fb4:	pop	{r4, lr}
   12fb8:	b	11f88 <g_object_unref@plt>
   12fbc:	push	{r3, lr}
   12fc0:	ldr	r3, [r1, #36]	; 0x24
   12fc4:	cmp	r3, #1
   12fc8:	beq	12ff8 <g_strcmp0@plt+0xf74>
   12fcc:	cmp	r3, #2
   12fd0:	bne	12ff0 <g_strcmp0@plt+0xf6c>
   12fd4:	mov	r0, r1
   12fd8:	mov	r1, r2
   12fdc:	movw	r2, #21496	; 0x53f8
   12fe0:	movt	r2, #1
   12fe4:	bl	13324 <g_strcmp0@plt+0x12a0>
   12fe8:	mov	r0, #1
   12fec:	bl	11d18 <exit@plt>
   12ff0:	mov	r0, #1
   12ff4:	pop	{r3, pc}
   12ff8:	mov	r0, #0
   12ffc:	bl	11d18 <exit@plt>
   13000:	movw	ip, #16960	; 0x4240
   13004:	movt	ip, #15
   13008:	push	{r4, r5, r6, r7, r8, r9, lr}
   1300c:	sub	sp, sp, #28
   13010:	umull	r4, r5, r2, ip
   13014:	mov	r8, #0
   13018:	mov	r9, r0
   1301c:	mvn	r6, #0
   13020:	ldr	r0, [r0]
   13024:	mvn	r7, #0
   13028:	vmov.f64	d0, #112	; 0x3f800000  1.0
   1302c:	str	r8, [sp, #8]
   13030:	strd	r6, [sp, #16]
   13034:	mov	r1, #3
   13038:	mla	r5, ip, r3, r5
   1303c:	mov	r2, #5
   13040:	mov	r3, #1
   13044:	strd	r4, [sp]
   13048:	bl	11d00 <gst_element_seek@plt>
   1304c:	ldr	r0, [r9]
   13050:	mov	r1, r8
   13054:	strd	r6, [sp]
   13058:	mov	r2, r8
   1305c:	bl	11c94 <gst_element_get_state@plt>
   13060:	add	sp, sp, #28
   13064:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13068:	cmn	r1, #1
   1306c:	push	{r4, r5, r6, lr}
   13070:	mov	r4, r1
   13074:	mov	r5, r0
   13078:	beq	130dc <g_strcmp0@plt+0x1058>
   1307c:	bl	11e08 <gdk_pixbuf_get_height@plt>
   13080:	mov	r6, r0
   13084:	mov	r0, r5
   13088:	bl	11e38 <gdk_pixbuf_get_width@plt>
   1308c:	cmp	r6, r0
   13090:	mov	r1, r0
   13094:	blt	130c8 <g_strcmp0@plt+0x1044>
   13098:	mov	r1, r6
   1309c:	mul	r0, r0, r4
   130a0:	bl	13fe8 <g_strcmp0@plt+0x1f64>
   130a4:	mov	r2, r4
   130a8:	mov	r1, r0
   130ac:	cmp	r4, #256	; 0x100
   130b0:	movle	r4, r1
   130b4:	ble	130e0 <g_strcmp0@plt+0x105c>
   130b8:	mov	r0, r5
   130bc:	mov	r3, #2
   130c0:	pop	{r4, r5, r6, lr}
   130c4:	b	11ce8 <gdk_pixbuf_scale_simple@plt>
   130c8:	mul	r0, r6, r4
   130cc:	bl	13fe8 <g_strcmp0@plt+0x1f64>
   130d0:	mov	r1, r4
   130d4:	mov	r2, r0
   130d8:	b	130ac <g_strcmp0@plt+0x1028>
   130dc:	mov	r2, r1
   130e0:	mov	r0, r5
   130e4:	mov	r1, r4
   130e8:	mov	r3, #2
   130ec:	pop	{r4, r5, r6, lr}
   130f0:	b	11ce8 <gdk_pixbuf_scale_simple@plt>
   130f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   130f8:	movw	r4, #29152	; 0x71e0
   130fc:	movt	r4, #2
   13100:	mov	r6, r1
   13104:	sub	sp, sp, #32
   13108:	mov	r5, r0
   1310c:	ldr	r1, [r4]
   13110:	mov	r7, r2
   13114:	mov	r8, r3
   13118:	mov	r3, #0
   1311c:	str	r3, [sp, #24]
   13120:	str	r1, [sp, #28]
   13124:	bl	11e08 <gdk_pixbuf_get_height@plt>
   13128:	mov	r9, r0
   1312c:	mov	r0, r5
   13130:	bl	11e38 <gdk_pixbuf_get_width@plt>
   13134:	movw	ip, #29176	; 0x71f8
   13138:	movt	ip, #2
   1313c:	ldr	r3, [ip]
   13140:	cmp	r3, #0
   13144:	mov	sl, r0
   13148:	mov	r0, r5
   1314c:	beq	13158 <g_strcmp0@plt+0x10d4>
   13150:	cmn	r8, #1
   13154:	beq	1321c <g_strcmp0@plt+0x1198>
   13158:	mov	r1, r8
   1315c:	bl	13068 <g_strcmp0@plt+0xfe4>
   13160:	mov	r5, r0
   13164:	mov	r1, sl
   13168:	movw	r0, #22576	; 0x5830
   1316c:	movt	r0, #1
   13170:	bl	11de4 <g_strdup_printf@plt>
   13174:	mov	r1, r9
   13178:	mov	r8, r0
   1317c:	movw	r0, #22576	; 0x5830
   13180:	movt	r0, #1
   13184:	bl	11de4 <g_strdup_printf@plt>
   13188:	mov	r1, #0
   1318c:	str	r8, [sp, #4]
   13190:	movw	ip, #21532	; 0x541c
   13194:	str	r1, [sp, #16]
   13198:	movt	ip, #1
   1319c:	movw	r3, #21560	; 0x5438
   131a0:	str	ip, [sp]
   131a4:	movt	r3, #1
   131a8:	movw	r2, #21528	; 0x5418
   131ac:	str	r3, [sp, #8]
   131b0:	movt	r2, #1
   131b4:	mov	r1, r6
   131b8:	add	r3, sp, #24
   131bc:	str	r0, [sp, #12]
   131c0:	mov	r0, r5
   131c4:	bl	11f70 <gdk_pixbuf_save@plt>
   131c8:	cmp	r0, #0
   131cc:	bne	131fc <g_strcmp0@plt+0x1178>
   131d0:	ldr	r3, [sp, #24]
   131d4:	mov	r1, r6
   131d8:	mov	r2, r7
   131dc:	cmp	r3, #0
   131e0:	beq	13228 <g_strcmp0@plt+0x11a4>
   131e4:	ldr	r3, [r3, #8]
   131e8:	movw	r0, #21588	; 0x5454
   131ec:	movt	r0, #1
   131f0:	bl	11f34 <g_print@plt>
   131f4:	ldr	r0, [sp, #24]
   131f8:	bl	11c64 <g_error_free@plt>
   131fc:	mov	r0, r5
   13200:	bl	11f88 <g_object_unref@plt>
   13204:	ldr	r2, [sp, #28]
   13208:	ldr	r3, [r4]
   1320c:	cmp	r2, r3
   13210:	bne	13238 <g_strcmp0@plt+0x11b4>
   13214:	add	sp, sp, #32
   13218:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1321c:	bl	11bc8 <g_object_ref@plt>
   13220:	mov	r5, r0
   13224:	b	13164 <g_strcmp0@plt+0x10e0>
   13228:	movw	r0, #21668	; 0x54a4
   1322c:	movt	r0, #1
   13230:	bl	11f34 <g_print@plt>
   13234:	b	131fc <g_strcmp0@plt+0x1178>
   13238:	bl	11ebc <__stack_chk_fail@plt>
   1323c:	push	{r4, r5, r6, r7, r8, lr}
   13240:	movw	r4, #29152	; 0x71e0
   13244:	movt	r4, #2
   13248:	sub	sp, sp, #8
   1324c:	add	r5, sp, #8
   13250:	mov	r6, #0
   13254:	ldr	r3, [r4]
   13258:	mov	r8, r1
   1325c:	mov	r7, r0
   13260:	mov	r1, #80	; 0x50
   13264:	ldr	r0, [r0, #8]
   13268:	str	r3, [sp, #4]
   1326c:	str	r6, [r5, #-8]!
   13270:	bl	11cc4 <g_type_check_instance_cast@plt>
   13274:	mov	r1, r8
   13278:	mov	r2, r6
   1327c:	mov	r3, sp
   13280:	bl	1206c <g_signal_emit_by_name@plt>
   13284:	ldr	r0, [sp]
   13288:	cmp	r0, r6
   1328c:	beq	132a4 <g_strcmp0@plt+0x1220>
   13290:	bl	13cd0 <g_strcmp0@plt+0x1c4c>
   13294:	subs	r5, r0, #0
   13298:	bne	132c0 <g_strcmp0@plt+0x123c>
   1329c:	ldr	r0, [sp]
   132a0:	bl	11f04 <gst_mini_object_unref@plt>
   132a4:	ldr	r2, [sp, #4]
   132a8:	ldr	r3, [r4]
   132ac:	cmp	r2, r3
   132b0:	bne	132bc <g_strcmp0@plt+0x1238>
   132b4:	add	sp, sp, #8
   132b8:	pop	{r4, r5, r6, r7, r8, pc}
   132bc:	bl	11ebc <__stack_chk_fail@plt>
   132c0:	movw	r3, #29176	; 0x71f8
   132c4:	movt	r3, #2
   132c8:	ldr	r3, [r3, #4]
   132cc:	cmp	r3, #0
   132d0:	beq	132f0 <g_strcmp0@plt+0x126c>
   132d4:	movw	r0, #21744	; 0x54f0
   132d8:	movw	r2, #21768	; 0x5508
   132dc:	movt	r0, #1
   132e0:	movt	r2, #1
   132e4:	mov	r1, #32
   132e8:	ldr	r3, [r7]
   132ec:	bl	11d0c <g_log@plt>
   132f0:	mov	r0, r7
   132f4:	bl	12f8c <g_strcmp0@plt+0xf08>
   132f8:	movw	r3, #29136	; 0x71d0
   132fc:	movt	r3, #2
   13300:	mov	r0, r5
   13304:	ldr	r1, [r7]
   13308:	ldr	r3, [r3]
   1330c:	ldr	r2, [r7, #4]
   13310:	bl	130f4 <g_strcmp0@plt+0x1070>
   13314:	mov	r0, r5
   13318:	bl	11f88 <g_object_unref@plt>
   1331c:	mov	r0, #0
   13320:	bl	11d18 <exit@plt>
   13324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13328:	mov	r7, r1
   1332c:	ldr	r4, [pc, #812]	; 13660 <g_strcmp0@plt+0x15dc>
   13330:	sub	sp, sp, #44	; 0x2c
   13334:	ldr	ip, [pc, #808]	; 13664 <g_strcmp0@plt+0x15e0>
   13338:	mov	r3, #0
   1333c:	add	r4, pc, r4
   13340:	ldr	r1, [r0, #36]	; 0x24
   13344:	mov	r5, r0
   13348:	mov	r0, r2
   1334c:	ldr	r6, [r4, ip]
   13350:	cmp	r1, #2
   13354:	str	r3, [sp, #24]
   13358:	str	r3, [sp, #28]
   1335c:	ldr	r1, [r6]
   13360:	str	r1, [sp, #36]	; 0x24
   13364:	beq	13398 <g_strcmp0@plt+0x1314>
   13368:	ldr	r1, [pc, #760]	; 13668 <g_strcmp0@plt+0x15e4>
   1336c:	mov	r0, r3
   13370:	ldr	r2, [pc, #756]	; 1366c <g_strcmp0@plt+0x15e8>
   13374:	add	r1, pc, r1
   13378:	add	r2, pc, r2
   1337c:	bl	11c10 <g_return_if_fail_warning@plt>
   13380:	ldr	r2, [sp, #36]	; 0x24
   13384:	ldr	r3, [r6]
   13388:	cmp	r2, r3
   1338c:	bne	1365c <g_strcmp0@plt+0x15d8>
   13390:	add	sp, sp, #44	; 0x2c
   13394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13398:	cmp	r7, #0
   1339c:	beq	133b4 <g_strcmp0@plt+0x1330>
   133a0:	cmp	r0, #0
   133a4:	beq	13614 <g_strcmp0@plt+0x1590>
   133a8:	mov	r0, r7
   133ac:	mov	r1, #11
   133b0:	bl	11e74 <gst_debug_bin_to_dot_file@plt>
   133b4:	mov	r0, r5
   133b8:	add	r1, sp, #24
   133bc:	add	r2, sp, #28
   133c0:	bl	11f10 <gst_message_parse_error@plt>
   133c4:	ldr	r3, [sp, #24]
   133c8:	cmp	r3, #0
   133cc:	beq	13608 <g_strcmp0@plt+0x1584>
   133d0:	ldr	r1, [pc, #664]	; 13670 <g_strcmp0@plt+0x15ec>
   133d4:	mov	r0, r7
   133d8:	mov	r3, #0
   133dc:	add	r2, sp, #32
   133e0:	add	r1, pc, r1
   133e4:	bl	11ef8 <g_object_get@plt>
   133e8:	ldr	r3, [pc, #644]	; 13674 <g_strcmp0@plt+0x15f0>
   133ec:	ldr	r7, [r4, r3]
   133f0:	ldr	r3, [r7]
   133f4:	cmp	r3, #0
   133f8:	beq	135f8 <g_strcmp0@plt+0x1574>
   133fc:	ldr	r3, [sp, #24]
   13400:	ldr	r2, [pc, #624]	; 13678 <g_strcmp0@plt+0x15f4>
   13404:	ldr	r3, [r3, #8]
   13408:	ldr	r4, [r4, r2]
   1340c:	cmp	r3, #0
   13410:	ldr	r0, [r4]
   13414:	beq	13650 <g_strcmp0@plt+0x15cc>
   13418:	ldr	r2, [pc, #604]	; 1367c <g_strcmp0@plt+0x15f8>
   1341c:	mov	r1, #61	; 0x3d
   13420:	str	r3, [sp, #12]
   13424:	mov	r3, #0
   13428:	add	r2, pc, r2
   1342c:	str	r3, [sp, #4]
   13430:	str	r2, [sp, #8]
   13434:	ldr	r3, [pc, #580]	; 13680 <g_strcmp0@plt+0x15fc>
   13438:	ldr	r2, [pc, #580]	; 13684 <g_strcmp0@plt+0x1600>
   1343c:	str	r1, [sp]
   13440:	add	r3, pc, r3
   13444:	mov	r1, #1
   13448:	add	r2, pc, r2
   1344c:	bl	11d78 <gst_debug_log@plt>
   13450:	ldr	r3, [r7]
   13454:	cmp	r3, #0
   13458:	beq	135f8 <g_strcmp0@plt+0x1574>
   1345c:	ldr	r3, [sp, #24]
   13460:	ldr	r9, [r4]
   13464:	ldr	r8, [r3]
   13468:	mov	r0, r8
   1346c:	bl	11ee0 <g_quark_to_string@plt>
   13470:	cmp	r0, #0
   13474:	movne	r3, r0
   13478:	beq	13644 <g_strcmp0@plt+0x15c0>
   1347c:	mov	r0, r9
   13480:	ldr	fp, [pc, #512]	; 13688 <g_strcmp0@plt+0x1604>
   13484:	ldr	r9, [pc, #512]	; 1368c <g_strcmp0@plt+0x1608>
   13488:	mov	ip, #63	; 0x3f
   1348c:	add	fp, pc, fp
   13490:	ldr	r1, [pc, #504]	; 13690 <g_strcmp0@plt+0x160c>
   13494:	add	r9, pc, r9
   13498:	mov	sl, #0
   1349c:	add	r1, pc, r1
   134a0:	str	r3, [sp, #16]
   134a4:	str	r1, [sp, #8]
   134a8:	mov	r3, r9
   134ac:	str	r8, [sp, #12]
   134b0:	mov	r2, fp
   134b4:	mov	r1, #1
   134b8:	str	ip, [sp]
   134bc:	str	sl, [sp, #4]
   134c0:	bl	11d78 <gst_debug_log@plt>
   134c4:	ldr	r3, [r7]
   134c8:	cmp	r3, sl
   134cc:	beq	135f8 <g_strcmp0@plt+0x1574>
   134d0:	ldr	ip, [sp, #24]
   134d4:	mov	r0, #64	; 0x40
   134d8:	ldr	r1, [pc, #436]	; 13694 <g_strcmp0@plt+0x1610>
   134dc:	mov	r3, r9
   134e0:	str	sl, [sp, #4]
   134e4:	mov	r2, fp
   134e8:	str	r0, [sp]
   134ec:	add	r1, pc, r1
   134f0:	str	r1, [sp, #8]
   134f4:	mov	r1, #1
   134f8:	ldr	ip, [ip, #4]
   134fc:	ldr	r0, [r4]
   13500:	str	ip, [sp, #12]
   13504:	bl	11d78 <gst_debug_log@plt>
   13508:	ldr	r3, [r7]
   1350c:	cmp	r3, #0
   13510:	beq	135f8 <g_strcmp0@plt+0x1574>
   13514:	ldr	r3, [sp, #28]
   13518:	ldr	r0, [r4]
   1351c:	cmp	r3, #0
   13520:	beq	13638 <g_strcmp0@plt+0x15b4>
   13524:	ldr	r9, [pc, #364]	; 13698 <g_strcmp0@plt+0x1614>
   13528:	mov	ip, #65	; 0x41
   1352c:	ldr	r8, [pc, #360]	; 1369c <g_strcmp0@plt+0x1618>
   13530:	mov	sl, #0
   13534:	add	r9, pc, r9
   13538:	ldr	r1, [pc, #352]	; 136a0 <g_strcmp0@plt+0x161c>
   1353c:	add	r8, pc, r8
   13540:	str	r3, [sp, #12]
   13544:	add	r1, pc, r1
   13548:	mov	r2, r9
   1354c:	mov	r3, r8
   13550:	str	r1, [sp, #8]
   13554:	str	ip, [sp]
   13558:	mov	r1, #1
   1355c:	str	sl, [sp, #4]
   13560:	bl	11d78 <gst_debug_log@plt>
   13564:	ldr	r3, [r7]
   13568:	cmp	r3, sl
   1356c:	beq	135f8 <g_strcmp0@plt+0x1574>
   13570:	ldr	r1, [pc, #300]	; 136a4 <g_strcmp0@plt+0x1620>
   13574:	mov	r0, #66	; 0x42
   13578:	str	sl, [sp, #4]
   1357c:	mov	r3, r8
   13580:	str	r0, [sp]
   13584:	add	r1, pc, r1
   13588:	str	r1, [sp, #8]
   1358c:	mov	r2, r9
   13590:	ldr	ip, [r5, #48]	; 0x30
   13594:	mov	r1, #1
   13598:	ldr	r0, [r4]
   1359c:	str	ip, [sp, #12]
   135a0:	bl	11d78 <gst_debug_log@plt>
   135a4:	ldr	r3, [r7]
   135a8:	cmp	r3, #0
   135ac:	beq	135f8 <g_strcmp0@plt+0x1574>
   135b0:	ldr	r3, [sp, #32]
   135b4:	ldr	r0, [r4]
   135b8:	cmp	r3, #0
   135bc:	beq	1362c <g_strcmp0@plt+0x15a8>
   135c0:	ldr	r2, [pc, #224]	; 136a8 <g_strcmp0@plt+0x1624>
   135c4:	mov	r1, #67	; 0x43
   135c8:	str	r3, [sp, #12]
   135cc:	mov	r3, #0
   135d0:	add	r2, pc, r2
   135d4:	str	r3, [sp, #4]
   135d8:	str	r2, [sp, #8]
   135dc:	ldr	r3, [pc, #200]	; 136ac <g_strcmp0@plt+0x1628>
   135e0:	ldr	r2, [pc, #200]	; 136b0 <g_strcmp0@plt+0x162c>
   135e4:	str	r1, [sp]
   135e8:	add	r3, pc, r3
   135ec:	mov	r1, #1
   135f0:	add	r2, pc, r2
   135f4:	bl	11d78 <gst_debug_log@plt>
   135f8:	ldr	r0, [sp, #32]
   135fc:	bl	11ec8 <g_free@plt>
   13600:	ldr	r0, [sp, #24]
   13604:	bl	11c64 <g_error_free@plt>
   13608:	ldr	r0, [sp, #28]
   1360c:	bl	11ec8 <g_free@plt>
   13610:	b	13380 <g_strcmp0@plt+0x12fc>
   13614:	ldr	r1, [pc, #152]	; 136b4 <g_strcmp0@plt+0x1630>
   13618:	ldr	r2, [pc, #152]	; 136b8 <g_strcmp0@plt+0x1634>
   1361c:	add	r1, pc, r1
   13620:	add	r2, pc, r2
   13624:	bl	11c10 <g_return_if_fail_warning@plt>
   13628:	b	13380 <g_strcmp0@plt+0x12fc>
   1362c:	ldr	r3, [pc, #136]	; 136bc <g_strcmp0@plt+0x1638>
   13630:	add	r3, pc, r3
   13634:	b	135c0 <g_strcmp0@plt+0x153c>
   13638:	ldr	r3, [pc, #128]	; 136c0 <g_strcmp0@plt+0x163c>
   1363c:	add	r3, pc, r3
   13640:	b	13524 <g_strcmp0@plt+0x14a0>
   13644:	ldr	r3, [pc, #120]	; 136c4 <g_strcmp0@plt+0x1640>
   13648:	add	r3, pc, r3
   1364c:	b	1347c <g_strcmp0@plt+0x13f8>
   13650:	ldr	r3, [pc, #112]	; 136c8 <g_strcmp0@plt+0x1644>
   13654:	add	r3, pc, r3
   13658:	b	13418 <g_strcmp0@plt+0x1394>
   1365c:	bl	11ebc <__stack_chk_fail@plt>
   13660:			; <UNDEFINED> instruction: 0x00013cbc
   13664:	andeq	r0, r0, r8, lsr #3
   13668:	andeq	r2, r0, r0, asr r7
   1366c:	ldrdeq	r2, [r0], -r0
   13670:	andeq	r2, r0, r0, lsr #5
   13674:			; <UNDEFINED> instruction: 0x000001b0
   13678:	andeq	r0, r0, ip, lsr #3
   1367c:	ldrdeq	r2, [r0], -ip
   13680:	andeq	r2, r0, r4, lsl #13
   13684:	muleq	r0, ip, r6
   13688:	andeq	r2, r0, r8, asr r6
   1368c:	andeq	r2, r0, r0, lsr r6
   13690:	andeq	r2, r0, r8, ror r6
   13694:	muleq	r0, ip, r6
   13698:			; <UNDEFINED> instruction: 0x000025b0
   1369c:	andeq	r2, r0, r8, lsl #11
   136a0:	andeq	r2, r0, r4, ror #11
   136a4:	andeq	r2, r0, r4, lsl r6
   136a8:	andeq	r2, r0, r8, ror #10
   136ac:	ldrdeq	r2, [r0], -ip
   136b0:	strdeq	r2, [r0], -r4
   136b4:	andeq	r2, r0, r8, lsr #9
   136b8:	andeq	r2, r0, r4, asr r5
   136bc:	andeq	r2, r0, ip, lsr #9
   136c0:	andeq	r2, r0, r0, lsr #9
   136c4:	muleq	r0, r4, r4
   136c8:	andeq	r2, r0, r8, lsl #9
   136cc:	mov	r0, r1
   136d0:	b	11f04 <gst_mini_object_unref@plt>
   136d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136d8:	subs	r4, r0, #0
   136dc:	ldr	r5, [pc, #1328]	; 13c14 <g_strcmp0@plt+0x1b90>
   136e0:	sub	sp, sp, #108	; 0x6c
   136e4:	ldr	r2, [pc, #1324]	; 13c18 <g_strcmp0@plt+0x1b94>
   136e8:	mov	r3, #0
   136ec:	add	r5, pc, r5
   136f0:	ldr	r6, [r5, r2]
   136f4:	str	r3, [sp, #28]
   136f8:	str	r3, [sp, #32]
   136fc:	ldr	r2, [r6]
   13700:	str	r3, [sp, #36]	; 0x24
   13704:	str	r2, [sp, #100]	; 0x64
   13708:	beq	13980 <g_strcmp0@plt+0x18fc>
   1370c:	bl	11c34 <gst_element_get_type@plt>
   13710:	ldr	r3, [r4]
   13714:	cmp	r3, #0
   13718:	beq	13728 <g_strcmp0@plt+0x16a4>
   1371c:	ldr	r3, [r3]
   13720:	cmp	r0, r3
   13724:	beq	1376c <g_strcmp0@plt+0x16e8>
   13728:	mov	r1, r0
   1372c:	mov	r0, r4
   13730:	bl	11f28 <g_type_check_instance_is_a@plt>
   13734:	subs	r7, r0, #0
   13738:	bne	1376c <g_strcmp0@plt+0x16e8>
   1373c:	ldr	r1, [pc, #1240]	; 13c1c <g_strcmp0@plt+0x1b98>
   13740:	ldr	r2, [pc, #1240]	; 13c20 <g_strcmp0@plt+0x1b9c>
   13744:	add	r1, pc, r1
   13748:	add	r2, pc, r2
   1374c:	bl	11c10 <g_return_if_fail_warning@plt>
   13750:	mov	r0, r7
   13754:	ldr	r2, [sp, #100]	; 0x64
   13758:	ldr	r3, [r6]
   1375c:	cmp	r2, r3
   13760:	bne	13c10 <g_strcmp0@plt+0x1b8c>
   13764:	add	sp, sp, #108	; 0x6c
   13768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1376c:	ldr	r1, [pc, #1200]	; 13c24 <g_strcmp0@plt+0x1ba0>
   13770:	mov	r3, #1
   13774:	ldr	ip, [pc, #1196]	; 13c28 <g_strcmp0@plt+0x1ba4>
   13778:	mov	r9, #0
   1377c:	ldr	r0, [pc, #1192]	; 13c2c <g_strcmp0@plt+0x1ba8>
   13780:	mov	r2, #64	; 0x40
   13784:	add	ip, pc, ip
   13788:	str	ip, [sp]
   1378c:	ldr	ip, [r5, r1]
   13790:	add	r0, pc, r0
   13794:	str	r3, [sp, #8]
   13798:	ldr	r1, [pc, #1168]	; 13c30 <g_strcmp0@plt+0x1bac>
   1379c:	ldr	ip, [ip]
   137a0:	str	r3, [sp, #12]
   137a4:	add	r1, pc, r1
   137a8:	ldr	r3, [pc, #1156]	; 13c34 <g_strcmp0@plt+0x1bb0>
   137ac:	str	ip, [sp, #4]
   137b0:	add	r3, pc, r3
   137b4:	str	r9, [sp, #16]
   137b8:	bl	11e8c <gst_caps_new_simple@plt>
   137bc:	ldr	r1, [pc, #1140]	; 13c38 <g_strcmp0@plt+0x1bb4>
   137c0:	add	r3, sp, #28
   137c4:	add	r1, pc, r1
   137c8:	mov	r7, r0
   137cc:	mov	r0, r4
   137d0:	mov	r2, r7
   137d4:	bl	1206c <g_signal_emit_by_name@plt>
   137d8:	mov	r0, r7
   137dc:	bl	11f04 <gst_mini_object_unref@plt>
   137e0:	ldr	r0, [sp, #28]
   137e4:	cmp	r0, r9
   137e8:	beq	13ad8 <g_strcmp0@plt+0x1a54>
   137ec:	bl	11d48 <gst_sample_get_caps@plt>
   137f0:	ldr	r3, [pc, #1092]	; 13c3c <g_strcmp0@plt+0x1bb8>
   137f4:	subs	r7, r0, #0
   137f8:	beq	13b58 <g_strcmp0@plt+0x1ad4>
   137fc:	ldr	r8, [r5, r3]
   13800:	ldr	r3, [r8]
   13804:	cmp	r3, #4
   13808:	bls	1384c <g_strcmp0@plt+0x17c8>
   1380c:	ldr	r3, [pc, #1068]	; 13c40 <g_strcmp0@plt+0x1bbc>
   13810:	mov	ip, #91	; 0x5b
   13814:	ldr	lr, [pc, #1064]	; 13c44 <g_strcmp0@plt+0x1bc0>
   13818:	mov	r1, #5
   1381c:	ldr	r2, [pc, #1060]	; 13c48 <g_strcmp0@plt+0x1bc4>
   13820:	ldr	r0, [r5, r3]
   13824:	add	lr, pc, lr
   13828:	ldr	r3, [pc, #1052]	; 13c4c <g_strcmp0@plt+0x1bc8>
   1382c:	add	r2, pc, r2
   13830:	str	r9, [sp, #4]
   13834:	add	r3, pc, r3
   13838:	ldr	r0, [r0]
   1383c:	str	r7, [sp, #12]
   13840:	str	lr, [sp, #8]
   13844:	str	ip, [sp]
   13848:	bl	11d78 <gst_debug_log@plt>
   1384c:	mov	r0, r7
   13850:	mov	r1, #0
   13854:	bl	11f94 <gst_caps_get_structure@plt>
   13858:	ldr	r1, [pc, #1008]	; 13c50 <g_strcmp0@plt+0x1bcc>
   1385c:	add	r2, sp, #32
   13860:	add	r1, pc, r1
   13864:	mov	r7, r0
   13868:	bl	11e14 <gst_structure_get_int@plt>
   1386c:	ldr	r1, [pc, #992]	; 13c54 <g_strcmp0@plt+0x1bd0>
   13870:	mov	r0, r7
   13874:	add	r2, sp, #36	; 0x24
   13878:	add	r1, pc, r1
   1387c:	bl	11e14 <gst_structure_get_int@plt>
   13880:	ldr	r3, [sp, #32]
   13884:	cmp	r3, #0
   13888:	ble	1399c <g_strcmp0@plt+0x1918>
   1388c:	ldr	r3, [sp, #36]	; 0x24
   13890:	cmp	r3, #0
   13894:	ble	1399c <g_strcmp0@plt+0x1918>
   13898:	ldr	r0, [sp, #28]
   1389c:	add	sl, sp, #48	; 0x30
   138a0:	bl	11dd8 <gst_sample_get_buffer@plt>
   138a4:	mov	r1, #0
   138a8:	bl	11fc4 <gst_buffer_get_memory@plt>
   138ac:	mov	r1, sl
   138b0:	mov	r2, #1
   138b4:	ldr	r7, [pc, #924]	; 13c58 <g_strcmp0@plt+0x1bd4>
   138b8:	add	r7, pc, r7
   138bc:	mov	r9, r0
   138c0:	bl	11c4c <gst_memory_map@plt>
   138c4:	ldr	r3, [sp, #32]
   138c8:	mov	r1, #0
   138cc:	ldr	lr, [sp, #28]
   138d0:	mov	r2, r1
   138d4:	add	ip, r3, #1
   138d8:	ldr	fp, [sp, #36]	; 0x24
   138dc:	str	r3, [sp]
   138e0:	mov	r3, #8
   138e4:	add	ip, ip, ip, lsl #1
   138e8:	str	lr, [sp, #16]
   138ec:	bic	ip, ip, #3
   138f0:	str	r7, [sp, #12]
   138f4:	stmib	sp, {fp, ip}
   138f8:	ldr	r0, [sp, #56]	; 0x38
   138fc:	bl	11c58 <gdk_pixbuf_new_from_data@plt>
   13900:	mov	r1, sl
   13904:	mov	r7, r0
   13908:	mov	r0, r9
   1390c:	bl	11e98 <gst_memory_unmap@plt>
   13910:	mov	r0, r9
   13914:	bl	11f04 <gst_mini_object_unref@plt>
   13918:	cmp	r7, #0
   1391c:	beq	1399c <g_strcmp0@plt+0x1918>
   13920:	mov	r1, #80	; 0x50
   13924:	mov	r0, r4
   13928:	bl	11cc4 <g_type_check_instance_cast@plt>
   1392c:	ldr	r1, [pc, #808]	; 13c5c <g_strcmp0@plt+0x1bd8>
   13930:	add	r1, pc, r1
   13934:	bl	12060 <g_object_get_data@plt>
   13938:	subs	r5, r0, #0
   1393c:	beq	13a20 <g_strcmp0@plt+0x199c>
   13940:	mov	r1, #80	; 0x50
   13944:	mov	r0, r4
   13948:	bl	11cc4 <g_type_check_instance_cast@plt>
   1394c:	ldr	r1, [pc, #780]	; 13c60 <g_strcmp0@plt+0x1bdc>
   13950:	add	r1, pc, r1
   13954:	bl	12060 <g_object_get_data@plt>
   13958:	subs	r1, r0, #0
   1395c:	mov	r0, r7
   13960:	beq	13754 <g_strcmp0@plt+0x16d0>
   13964:	bl	11fe8 <gdk_pixbuf_rotate_simple@plt>
   13968:	subs	r4, r0, #0
   1396c:	mov	r0, r7
   13970:	beq	13754 <g_strcmp0@plt+0x16d0>
   13974:	bl	11f88 <g_object_unref@plt>
   13978:	mov	r0, r4
   1397c:	b	13754 <g_strcmp0@plt+0x16d0>
   13980:	ldr	r1, [pc, #732]	; 13c64 <g_strcmp0@plt+0x1be0>
   13984:	ldr	r2, [pc, #732]	; 13c68 <g_strcmp0@plt+0x1be4>
   13988:	add	r1, pc, r1
   1398c:	add	r2, pc, r2
   13990:	bl	11c10 <g_return_if_fail_warning@plt>
   13994:	mov	r0, r4
   13998:	b	13754 <g_strcmp0@plt+0x16d0>
   1399c:	ldr	r3, [r8]
   139a0:	cmp	r3, #4
   139a4:	bls	139f4 <g_strcmp0@plt+0x1970>
   139a8:	ldr	r2, [pc, #656]	; 13c40 <g_strcmp0@plt+0x1bbc>
   139ac:	mov	r3, #0
   139b0:	ldr	r7, [pc, #692]	; 13c6c <g_strcmp0@plt+0x1be8>
   139b4:	mov	ip, #112	; 0x70
   139b8:	ldr	lr, [pc, #688]	; 13c70 <g_strcmp0@plt+0x1bec>
   139bc:	mov	r1, #5
   139c0:	ldr	r0, [r5, r2]
   139c4:	add	r7, pc, r7
   139c8:	ldr	r2, [pc, #676]	; 13c74 <g_strcmp0@plt+0x1bf0>
   139cc:	add	lr, pc, lr
   139d0:	str	r7, [sp, #8]
   139d4:	ldr	r0, [r0]
   139d8:	add	r2, pc, r2
   139dc:	str	r3, [sp, #4]
   139e0:	ldr	r3, [pc, #656]	; 13c78 <g_strcmp0@plt+0x1bf4>
   139e4:	str	lr, [sp, #12]
   139e8:	str	ip, [sp]
   139ec:	add	r3, pc, r3
   139f0:	bl	11d78 <gst_debug_log@plt>
   139f4:	ldr	r2, [pc, #640]	; 13c7c <g_strcmp0@plt+0x1bf8>
   139f8:	mov	r0, #0
   139fc:	ldr	r3, [pc, #636]	; 13c80 <g_strcmp0@plt+0x1bfc>
   13a00:	mov	r1, #16
   13a04:	add	r2, pc, r2
   13a08:	mov	r7, r0
   13a0c:	add	r3, pc, r3
   13a10:	bl	11d0c <g_log@plt>
   13a14:	ldr	r0, [sp, #28]
   13a18:	bl	11f04 <gst_mini_object_unref@plt>
   13a1c:	b	13920 <g_strcmp0@plt+0x189c>
   13a20:	add	r8, sp, #104	; 0x68
   13a24:	mov	r1, #80	; 0x50
   13a28:	mov	r0, r4
   13a2c:	str	r5, [r8, #-64]!	; 0xffffffc0
   13a30:	bl	11cc4 <g_type_check_instance_cast@plt>
   13a34:	ldr	r1, [pc, #584]	; 13c84 <g_strcmp0@plt+0x1c00>
   13a38:	mov	r3, r8
   13a3c:	mov	r2, r5
   13a40:	add	r1, pc, r1
   13a44:	bl	1206c <g_signal_emit_by_name@plt>
   13a48:	ldr	r0, [sp, #40]	; 0x28
   13a4c:	cmp	r0, #0
   13a50:	beq	13a9c <g_strcmp0@plt+0x1a18>
   13a54:	ldr	r1, [pc, #556]	; 13c88 <g_strcmp0@plt+0x1c04>
   13a58:	mov	r2, r5
   13a5c:	add	r3, sp, #44	; 0x2c
   13a60:	add	r1, pc, r1
   13a64:	bl	11c1c <gst_tag_list_get_string_index@plt>
   13a68:	cmp	r0, #0
   13a6c:	beq	13a94 <g_strcmp0@plt+0x1a10>
   13a70:	ldr	r0, [sp, #44]	; 0x2c
   13a74:	cmp	r0, #0
   13a78:	beq	13a94 <g_strcmp0@plt+0x1a10>
   13a7c:	ldr	r1, [pc, #520]	; 13c8c <g_strcmp0@plt+0x1c08>
   13a80:	add	r1, pc, r1
   13a84:	bl	11ca0 <g_str_equal@plt>
   13a88:	cmp	r0, #0
   13a8c:	movwne	r5, #270	; 0x10e
   13a90:	beq	13bd4 <g_strcmp0@plt+0x1b50>
   13a94:	ldr	r0, [sp, #40]	; 0x28
   13a98:	bl	11f04 <gst_mini_object_unref@plt>
   13a9c:	mov	r0, r4
   13aa0:	mov	r1, #80	; 0x50
   13aa4:	bl	11cc4 <g_type_check_instance_cast@plt>
   13aa8:	ldr	r1, [pc, #480]	; 13c90 <g_strcmp0@plt+0x1c0c>
   13aac:	mov	r2, #1
   13ab0:	add	r1, pc, r1
   13ab4:	bl	11f7c <g_object_set_data@plt>
   13ab8:	mov	r0, r4
   13abc:	mov	r1, #80	; 0x50
   13ac0:	bl	11cc4 <g_type_check_instance_cast@plt>
   13ac4:	ldr	r1, [pc, #456]	; 13c94 <g_strcmp0@plt+0x1c10>
   13ac8:	mov	r2, r5
   13acc:	add	r1, pc, r1
   13ad0:	bl	11f7c <g_object_set_data@plt>
   13ad4:	b	13940 <g_strcmp0@plt+0x18bc>
   13ad8:	ldr	r3, [pc, #348]	; 13c3c <g_strcmp0@plt+0x1bb8>
   13adc:	ldr	r3, [r5, r3]
   13ae0:	ldr	r3, [r3]
   13ae4:	cmp	r3, #4
   13ae8:	bls	13b34 <g_strcmp0@plt+0x1ab0>
   13aec:	ldr	r2, [pc, #332]	; 13c40 <g_strcmp0@plt+0x1bbc>
   13af0:	mov	r3, #78	; 0x4e
   13af4:	ldr	lr, [pc, #412]	; 13c98 <g_strcmp0@plt+0x1c14>
   13af8:	mov	r1, #5
   13afc:	ldr	ip, [pc, #408]	; 13c9c <g_strcmp0@plt+0x1c18>
   13b00:	ldr	r4, [r5, r2]
   13b04:	add	lr, pc, lr
   13b08:	ldr	r2, [pc, #400]	; 13ca0 <g_strcmp0@plt+0x1c1c>
   13b0c:	add	ip, pc, ip
   13b10:	str	r0, [sp, #4]
   13b14:	ldr	r0, [r4]
   13b18:	add	r2, pc, r2
   13b1c:	str	r3, [sp]
   13b20:	ldr	r3, [pc, #380]	; 13ca4 <g_strcmp0@plt+0x1c20>
   13b24:	str	lr, [sp, #8]
   13b28:	str	ip, [sp, #12]
   13b2c:	add	r3, pc, r3
   13b30:	bl	11d78 <gst_debug_log@plt>
   13b34:	ldr	r2, [pc, #364]	; 13ca8 <g_strcmp0@plt+0x1c24>
   13b38:	mov	r0, #0
   13b3c:	ldr	r3, [pc, #360]	; 13cac <g_strcmp0@plt+0x1c28>
   13b40:	mov	r1, #16
   13b44:	add	r2, pc, r2
   13b48:	add	r3, pc, r3
   13b4c:	bl	11d0c <g_log@plt>
   13b50:	mov	r0, #0
   13b54:	b	13754 <g_strcmp0@plt+0x16d0>
   13b58:	ldr	r3, [r5, r3]
   13b5c:	ldr	r3, [r3]
   13b60:	cmp	r3, #4
   13b64:	bls	13bb0 <g_strcmp0@plt+0x1b2c>
   13b68:	ldr	r2, [pc, #208]	; 13c40 <g_strcmp0@plt+0x1bbc>
   13b6c:	mov	r3, #86	; 0x56
   13b70:	ldr	lr, [pc, #312]	; 13cb0 <g_strcmp0@plt+0x1c2c>
   13b74:	mov	r1, #5
   13b78:	ldr	ip, [pc, #308]	; 13cb4 <g_strcmp0@plt+0x1c30>
   13b7c:	ldr	r0, [r5, r2]
   13b80:	add	lr, pc, lr
   13b84:	ldr	r2, [pc, #300]	; 13cb8 <g_strcmp0@plt+0x1c34>
   13b88:	add	ip, pc, ip
   13b8c:	str	r7, [sp, #4]
   13b90:	ldr	r0, [r0]
   13b94:	add	r2, pc, r2
   13b98:	str	r3, [sp]
   13b9c:	ldr	r3, [pc, #280]	; 13cbc <g_strcmp0@plt+0x1c38>
   13ba0:	str	lr, [sp, #8]
   13ba4:	str	ip, [sp, #12]
   13ba8:	add	r3, pc, r3
   13bac:	bl	11d78 <gst_debug_log@plt>
   13bb0:	ldr	r2, [pc, #264]	; 13cc0 <g_strcmp0@plt+0x1c3c>
   13bb4:	mov	r0, #0
   13bb8:	ldr	r3, [pc, #260]	; 13cc4 <g_strcmp0@plt+0x1c40>
   13bbc:	mov	r1, #16
   13bc0:	add	r2, pc, r2
   13bc4:	add	r3, pc, r3
   13bc8:	bl	11d0c <g_log@plt>
   13bcc:	mov	r0, #0
   13bd0:	b	13754 <g_strcmp0@plt+0x16d0>
   13bd4:	ldr	r1, [pc, #236]	; 13cc8 <g_strcmp0@plt+0x1c44>
   13bd8:	ldr	r0, [sp, #44]	; 0x2c
   13bdc:	add	r1, pc, r1
   13be0:	bl	11ca0 <g_str_equal@plt>
   13be4:	cmp	r0, #0
   13be8:	movne	r5, #180	; 0xb4
   13bec:	bne	13a94 <g_strcmp0@plt+0x1a10>
   13bf0:	ldr	r1, [pc, #212]	; 13ccc <g_strcmp0@plt+0x1c48>
   13bf4:	ldr	r0, [sp, #44]	; 0x2c
   13bf8:	add	r1, pc, r1
   13bfc:	bl	11ca0 <g_str_equal@plt>
   13c00:	cmp	r0, #0
   13c04:	movne	r5, #90	; 0x5a
   13c08:	moveq	r5, #0
   13c0c:	b	13a94 <g_strcmp0@plt+0x1a10>
   13c10:	bl	11ebc <__stack_chk_fail@plt>
   13c14:	andeq	r3, r1, ip, lsl #18
   13c18:	andeq	r0, r0, r8, lsr #3
   13c1c:	andeq	r2, r0, r4, ror #8
   13c20:	andeq	r2, r0, ip, ror #11
   13c24:			; <UNDEFINED> instruction: 0x000001b4
   13c28:	andeq	r2, r0, ip, lsl #11
   13c2c:	andeq	r2, r0, r8, ror #10
   13c30:	andeq	r2, r0, r0, ror #10
   13c34:	andeq	r2, r0, ip, asr r5
   13c38:	andeq	r2, r0, r0, ror #10
   13c3c:			; <UNDEFINED> instruction: 0x000001b0
   13c40:	andeq	r0, r0, ip, lsr #3
   13c44:	andeq	r2, r0, r0, asr r5
   13c48:	andeq	r2, r0, r0, lsr #10
   13c4c:	andeq	r2, r0, r4, ror r3
   13c50:	andeq	r2, r0, r8, lsl #8
   13c54:	strdeq	r2, [r0], -r8
   13c58:			; <UNDEFINED> instruction: 0xfffffe0c
   13c5c:	andeq	r2, r0, r0, ror #6
   13c60:	andeq	r2, r0, ip, lsl #7
   13c64:	andeq	r2, r0, r0, lsr #4
   13c68:	andeq	r2, r0, ip, asr r3
   13c6c:	andeq	r2, r0, ip, lsr r2
   13c70:	andeq	r2, r0, ip, lsr #5
   13c74:	andeq	r2, r0, r4, ror r3
   13c78:			; <UNDEFINED> instruction: 0x000021bc
   13c7c:	strdeq	r2, [r0], -ip
   13c80:	andeq	r2, r0, ip, ror #4
   13c84:	ldrdeq	r1, [r0], -ip
   13c88:	andeq	r2, r0, r4, asr #4
   13c8c:	andeq	r2, r0, r8, lsr r2
   13c90:	andeq	r2, r0, r0, ror #3
   13c94:	andeq	r2, r0, r0, lsl r2
   13c98:	strdeq	r2, [r0], -ip
   13c9c:	andeq	r2, r0, r4, lsl r1
   13ca0:	andeq	r2, r0, r4, lsr r2
   13ca4:	andeq	r2, r0, ip, ror r0
   13ca8:	strheq	r2, [r0], -ip
   13cac:	ldrdeq	r2, [r0], -r8
   13cb0:	andeq	r2, r0, r0, lsl #1
   13cb4:	andeq	r2, r0, r4, asr #1
   13cb8:			; <UNDEFINED> instruction: 0x000021b8
   13cbc:	andeq	r2, r0, r0
   13cc0:	andeq	r2, r0, r0, asr #32
   13cc4:	andeq	r2, r0, r8, lsl #1
   13cc8:	andeq	r2, r0, r8, ror #1
   13ccc:	ldrdeq	r2, [r0], -r8
   13cd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13cd4:	sub	sp, sp, #100	; 0x64
   13cd8:	ldr	r4, [pc, #716]	; 13fac <g_strcmp0@plt+0x1f28>
   13cdc:	subs	r5, r0, #0
   13ce0:	ldr	r3, [pc, #712]	; 13fb0 <g_strcmp0@plt+0x1f2c>
   13ce4:	add	r4, pc, r4
   13ce8:	str	r4, [sp, #24]
   13cec:	ldr	r3, [r4, r3]
   13cf0:	str	r3, [sp, #28]
   13cf4:	ldr	r3, [r3]
   13cf8:	str	r3, [sp, #92]	; 0x5c
   13cfc:	beq	13f60 <g_strcmp0@plt+0x1edc>
   13d00:	ldr	r8, [pc, #684]	; 13fb4 <g_strcmp0@plt+0x1f30>
   13d04:	mov	r4, #0
   13d08:	ldr	sl, [pc, #680]	; 13fb8 <g_strcmp0@plt+0x1f34>
   13d0c:	add	r6, sp, #32
   13d10:	add	r8, pc, r8
   13d14:	add	r9, sp, #36	; 0x24
   13d18:	add	sl, pc, sl
   13d1c:	str	r4, [sp, #20]
   13d20:	mov	r7, r4
   13d24:	b	13d40 <g_strcmp0@plt+0x1cbc>
   13d28:	ldr	r1, [sp, #20]
   13d2c:	cmp	r1, #0
   13d30:	beq	13e70 <g_strcmp0@plt+0x1dec>
   13d34:	ldr	r0, [sp, #32]
   13d38:	add	r4, r4, #1
   13d3c:	bl	11f04 <gst_mini_object_unref@plt>
   13d40:	mov	r0, r5
   13d44:	mov	r1, r8
   13d48:	mov	r2, r4
   13d4c:	mov	r3, r6
   13d50:	str	r7, [sp, #36]	; 0x24
   13d54:	bl	12054 <gst_tag_list_get_sample_index@plt>
   13d58:	cmp	r0, #0
   13d5c:	beq	13da8 <g_strcmp0@plt+0x1d24>
   13d60:	ldr	r0, [sp, #32]
   13d64:	bl	11d48 <gst_sample_get_caps@plt>
   13d68:	mov	r1, #0
   13d6c:	bl	11f94 <gst_caps_get_structure@plt>
   13d70:	mov	fp, r0
   13d74:	bl	12030 <gst_tag_image_type_get_type@plt>
   13d78:	mov	r3, r9
   13d7c:	mov	r1, sl
   13d80:	mov	r2, r0
   13d84:	mov	r0, fp
   13d88:	bl	11e20 <gst_structure_get_enum@plt>
   13d8c:	ldr	r3, [sp, #36]	; 0x24
   13d90:	cmp	r3, #0
   13d94:	beq	13d28 <g_strcmp0@plt+0x1ca4>
   13d98:	cmp	r3, #1
   13d9c:	bne	13d34 <g_strcmp0@plt+0x1cb0>
   13da0:	ldr	r4, [sp, #32]
   13da4:	str	r4, [sp, #20]
   13da8:	ldr	r4, [sp, #20]
   13dac:	cmp	r4, #0
   13db0:	str	r4, [sp, #32]
   13db4:	ldrne	r0, [sp, #20]
   13db8:	beq	13f7c <g_strcmp0@plt+0x1ef8>
   13dbc:	bl	11dd8 <gst_sample_get_buffer@plt>
   13dc0:	add	r4, sp, #40	; 0x28
   13dc4:	mov	r2, #1
   13dc8:	mov	r3, #0
   13dcc:	mov	r1, r4
   13dd0:	str	r3, [sp, #36]	; 0x24
   13dd4:	mov	r6, r0
   13dd8:	bl	11c04 <gst_buffer_map@plt>
   13ddc:	subs	r2, r0, #0
   13de0:	bne	13e80 <g_strcmp0@plt+0x1dfc>
   13de4:	ldr	r5, [sp, #24]
   13de8:	ldr	r3, [pc, #460]	; 13fbc <g_strcmp0@plt+0x1f38>
   13dec:	ldr	r3, [r5, r3]
   13df0:	ldr	r3, [r3]
   13df4:	cmp	r3, #1
   13df8:	movls	r5, r2
   13dfc:	bls	13e48 <g_strcmp0@plt+0x1dc4>
   13e00:	ldr	r0, [pc, #440]	; 13fc0 <g_strcmp0@plt+0x1f3c>
   13e04:	mov	r5, r2
   13e08:	ldr	r4, [sp, #24]
   13e0c:	mov	ip, #166	; 0xa6
   13e10:	ldr	r3, [pc, #428]	; 13fc4 <g_strcmp0@plt+0x1f40>
   13e14:	mov	r1, #2
   13e18:	ldr	lr, [pc, #424]	; 13fc8 <g_strcmp0@plt+0x1f44>
   13e1c:	ldr	r0, [r4, r0]
   13e20:	add	r3, pc, r3
   13e24:	str	r2, [sp, #4]
   13e28:	add	lr, pc, lr
   13e2c:	ldr	r2, [pc, #408]	; 13fcc <g_strcmp0@plt+0x1f48>
   13e30:	add	r3, r3, #60	; 0x3c
   13e34:	str	lr, [sp, #8]
   13e38:	add	r2, pc, r2
   13e3c:	ldr	r0, [r0]
   13e40:	str	ip, [sp]
   13e44:	bl	11d78 <gst_debug_log@plt>
   13e48:	ldr	r0, [sp, #32]
   13e4c:	bl	11f04 <gst_mini_object_unref@plt>
   13e50:	ldr	r4, [sp, #28]
   13e54:	mov	r0, r5
   13e58:	ldr	r2, [sp, #92]	; 0x5c
   13e5c:	ldr	r3, [r4]
   13e60:	cmp	r2, r3
   13e64:	bne	13fa8 <g_strcmp0@plt+0x1f24>
   13e68:	add	sp, sp, #100	; 0x64
   13e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e70:	ldr	r0, [sp, #32]
   13e74:	bl	12078 <gst_mini_object_ref@plt>
   13e78:	str	r0, [sp, #20]
   13e7c:	b	13d34 <g_strcmp0@plt+0x1cb0>
   13e80:	bl	11fd0 <gdk_pixbuf_loader_new@plt>
   13e84:	add	r5, sp, #36	; 0x24
   13e88:	ldr	r1, [sp, #48]	; 0x30
   13e8c:	mov	r3, r5
   13e90:	ldr	r2, [sp, #52]	; 0x34
   13e94:	mov	r7, r0
   13e98:	bl	11f4c <gdk_pixbuf_loader_write@plt>
   13e9c:	cmp	r0, #0
   13ea0:	bne	13f34 <g_strcmp0@plt+0x1eb0>
   13ea4:	ldr	r3, [pc, #272]	; 13fbc <g_strcmp0@plt+0x1f38>
   13ea8:	ldr	r5, [sp, #24]
   13eac:	ldr	r3, [r5, r3]
   13eb0:	ldr	r3, [r3]
   13eb4:	cmp	r3, #1
   13eb8:	bls	13f10 <g_strcmp0@plt+0x1e8c>
   13ebc:	ldr	r0, [pc, #252]	; 13fc0 <g_strcmp0@plt+0x1f3c>
   13ec0:	mov	ip, #178	; 0xb2
   13ec4:	ldr	r5, [sp, #24]
   13ec8:	mov	r2, #0
   13ecc:	ldr	r3, [sp, #36]	; 0x24
   13ed0:	mov	r1, #2
   13ed4:	ldr	lr, [pc, #244]	; 13fd0 <g_strcmp0@plt+0x1f4c>
   13ed8:	ldr	r0, [r5, r0]
   13edc:	add	lr, pc, lr
   13ee0:	str	ip, [sp]
   13ee4:	str	lr, [sp, #8]
   13ee8:	ldr	r0, [r0]
   13eec:	str	r2, [sp, #4]
   13ef0:	ldr	ip, [r3, #8]
   13ef4:	ldr	r3, [pc, #216]	; 13fd4 <g_strcmp0@plt+0x1f50>
   13ef8:	ldr	r2, [pc, #216]	; 13fd8 <g_strcmp0@plt+0x1f54>
   13efc:	add	r3, pc, r3
   13f00:	str	ip, [sp, #12]
   13f04:	add	r2, pc, r2
   13f08:	add	r3, r3, #60	; 0x3c
   13f0c:	bl	11d78 <gst_debug_log@plt>
   13f10:	ldr	r0, [sp, #36]	; 0x24
   13f14:	mov	r5, #0
   13f18:	bl	11c64 <g_error_free@plt>
   13f1c:	mov	r0, r7
   13f20:	bl	11f88 <g_object_unref@plt>
   13f24:	mov	r0, r6
   13f28:	mov	r1, r4
   13f2c:	bl	11cf4 <gst_buffer_unmap@plt>
   13f30:	b	13e48 <g_strcmp0@plt+0x1dc4>
   13f34:	mov	r1, r5
   13f38:	mov	r0, r7
   13f3c:	bl	11e44 <gdk_pixbuf_loader_close@plt>
   13f40:	cmp	r0, #0
   13f44:	beq	13ea4 <g_strcmp0@plt+0x1e20>
   13f48:	mov	r0, r7
   13f4c:	bl	11e68 <gdk_pixbuf_loader_get_pixbuf@plt>
   13f50:	subs	r5, r0, #0
   13f54:	beq	13f1c <g_strcmp0@plt+0x1e98>
   13f58:	bl	11bc8 <g_object_ref@plt>
   13f5c:	b	13f1c <g_strcmp0@plt+0x1e98>
   13f60:	ldr	r1, [pc, #116]	; 13fdc <g_strcmp0@plt+0x1f58>
   13f64:	ldr	r2, [pc, #116]	; 13fe0 <g_strcmp0@plt+0x1f5c>
   13f68:	add	r1, pc, r1
   13f6c:	add	r2, pc, r2
   13f70:	add	r1, r1, #28
   13f74:	bl	11c10 <g_return_if_fail_warning@plt>
   13f78:	b	13e50 <g_strcmp0@plt+0x1dcc>
   13f7c:	ldr	r1, [pc, #96]	; 13fe4 <g_strcmp0@plt+0x1f60>
   13f80:	mov	r0, r5
   13f84:	mov	r3, r6
   13f88:	mov	r2, r4
   13f8c:	add	r1, pc, r1
   13f90:	bl	12054 <gst_tag_list_get_sample_index@plt>
   13f94:	ldr	r0, [sp, #32]
   13f98:	cmp	r0, #0
   13f9c:	ldreq	r5, [sp, #20]
   13fa0:	beq	13e50 <g_strcmp0@plt+0x1dcc>
   13fa4:	b	13dbc <g_strcmp0@plt+0x1d38>
   13fa8:	bl	11ebc <__stack_chk_fail@plt>
   13fac:	andeq	r3, r1, r4, lsl r3
   13fb0:	andeq	r0, r0, r8, lsr #3
   13fb4:	andeq	r2, r0, ip, lsl #1
   13fb8:	andeq	r2, r0, r0, ror r0
   13fbc:			; <UNDEFINED> instruction: 0x000001b0
   13fc0:	andeq	r0, r0, ip, lsr #3
   13fc4:	andeq	r1, r0, r8, lsl #27
   13fc8:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   13fcc:	andeq	r1, r0, r4, lsl pc
   13fd0:	strdeq	r1, [r0], -r8
   13fd4:	andeq	r1, r0, ip, lsr #25
   13fd8:	andeq	r1, r0, r8, asr #28
   13fdc:	andeq	r1, r0, r0, asr #24
   13fe0:	andeq	r1, r0, r8, lsr lr
   13fe4:	andeq	r1, r0, r8, lsl #28
   13fe8:	cmp	r1, #0
   13fec:	beq	141f8 <g_strcmp0@plt+0x2174>
   13ff0:	eor	ip, r0, r1
   13ff4:	rsbmi	r1, r1, #0
   13ff8:	subs	r2, r1, #1
   13ffc:	beq	141c4 <g_strcmp0@plt+0x2140>
   14000:	movs	r3, r0
   14004:	rsbmi	r3, r0, #0
   14008:	cmp	r3, r1
   1400c:	bls	141d0 <g_strcmp0@plt+0x214c>
   14010:	tst	r1, r2
   14014:	beq	141e0 <g_strcmp0@plt+0x215c>
   14018:	clz	r2, r3
   1401c:	clz	r0, r1
   14020:	sub	r2, r0, r2
   14024:	rsbs	r2, r2, #31
   14028:	addne	r2, r2, r2, lsl #1
   1402c:	mov	r0, #0
   14030:	addne	pc, pc, r2, lsl #2
   14034:	nop	{0}
   14038:	cmp	r3, r1, lsl #31
   1403c:	adc	r0, r0, r0
   14040:	subcs	r3, r3, r1, lsl #31
   14044:	cmp	r3, r1, lsl #30
   14048:	adc	r0, r0, r0
   1404c:	subcs	r3, r3, r1, lsl #30
   14050:	cmp	r3, r1, lsl #29
   14054:	adc	r0, r0, r0
   14058:	subcs	r3, r3, r1, lsl #29
   1405c:	cmp	r3, r1, lsl #28
   14060:	adc	r0, r0, r0
   14064:	subcs	r3, r3, r1, lsl #28
   14068:	cmp	r3, r1, lsl #27
   1406c:	adc	r0, r0, r0
   14070:	subcs	r3, r3, r1, lsl #27
   14074:	cmp	r3, r1, lsl #26
   14078:	adc	r0, r0, r0
   1407c:	subcs	r3, r3, r1, lsl #26
   14080:	cmp	r3, r1, lsl #25
   14084:	adc	r0, r0, r0
   14088:	subcs	r3, r3, r1, lsl #25
   1408c:	cmp	r3, r1, lsl #24
   14090:	adc	r0, r0, r0
   14094:	subcs	r3, r3, r1, lsl #24
   14098:	cmp	r3, r1, lsl #23
   1409c:	adc	r0, r0, r0
   140a0:	subcs	r3, r3, r1, lsl #23
   140a4:	cmp	r3, r1, lsl #22
   140a8:	adc	r0, r0, r0
   140ac:	subcs	r3, r3, r1, lsl #22
   140b0:	cmp	r3, r1, lsl #21
   140b4:	adc	r0, r0, r0
   140b8:	subcs	r3, r3, r1, lsl #21
   140bc:	cmp	r3, r1, lsl #20
   140c0:	adc	r0, r0, r0
   140c4:	subcs	r3, r3, r1, lsl #20
   140c8:	cmp	r3, r1, lsl #19
   140cc:	adc	r0, r0, r0
   140d0:	subcs	r3, r3, r1, lsl #19
   140d4:	cmp	r3, r1, lsl #18
   140d8:	adc	r0, r0, r0
   140dc:	subcs	r3, r3, r1, lsl #18
   140e0:	cmp	r3, r1, lsl #17
   140e4:	adc	r0, r0, r0
   140e8:	subcs	r3, r3, r1, lsl #17
   140ec:	cmp	r3, r1, lsl #16
   140f0:	adc	r0, r0, r0
   140f4:	subcs	r3, r3, r1, lsl #16
   140f8:	cmp	r3, r1, lsl #15
   140fc:	adc	r0, r0, r0
   14100:	subcs	r3, r3, r1, lsl #15
   14104:	cmp	r3, r1, lsl #14
   14108:	adc	r0, r0, r0
   1410c:	subcs	r3, r3, r1, lsl #14
   14110:	cmp	r3, r1, lsl #13
   14114:	adc	r0, r0, r0
   14118:	subcs	r3, r3, r1, lsl #13
   1411c:	cmp	r3, r1, lsl #12
   14120:	adc	r0, r0, r0
   14124:	subcs	r3, r3, r1, lsl #12
   14128:	cmp	r3, r1, lsl #11
   1412c:	adc	r0, r0, r0
   14130:	subcs	r3, r3, r1, lsl #11
   14134:	cmp	r3, r1, lsl #10
   14138:	adc	r0, r0, r0
   1413c:	subcs	r3, r3, r1, lsl #10
   14140:	cmp	r3, r1, lsl #9
   14144:	adc	r0, r0, r0
   14148:	subcs	r3, r3, r1, lsl #9
   1414c:	cmp	r3, r1, lsl #8
   14150:	adc	r0, r0, r0
   14154:	subcs	r3, r3, r1, lsl #8
   14158:	cmp	r3, r1, lsl #7
   1415c:	adc	r0, r0, r0
   14160:	subcs	r3, r3, r1, lsl #7
   14164:	cmp	r3, r1, lsl #6
   14168:	adc	r0, r0, r0
   1416c:	subcs	r3, r3, r1, lsl #6
   14170:	cmp	r3, r1, lsl #5
   14174:	adc	r0, r0, r0
   14178:	subcs	r3, r3, r1, lsl #5
   1417c:	cmp	r3, r1, lsl #4
   14180:	adc	r0, r0, r0
   14184:	subcs	r3, r3, r1, lsl #4
   14188:	cmp	r3, r1, lsl #3
   1418c:	adc	r0, r0, r0
   14190:	subcs	r3, r3, r1, lsl #3
   14194:	cmp	r3, r1, lsl #2
   14198:	adc	r0, r0, r0
   1419c:	subcs	r3, r3, r1, lsl #2
   141a0:	cmp	r3, r1, lsl #1
   141a4:	adc	r0, r0, r0
   141a8:	subcs	r3, r3, r1, lsl #1
   141ac:	cmp	r3, r1
   141b0:	adc	r0, r0, r0
   141b4:	subcs	r3, r3, r1
   141b8:	cmp	ip, #0
   141bc:	rsbmi	r0, r0, #0
   141c0:	bx	lr
   141c4:	teq	ip, r0
   141c8:	rsbmi	r0, r0, #0
   141cc:	bx	lr
   141d0:	movcc	r0, #0
   141d4:	asreq	r0, ip, #31
   141d8:	orreq	r0, r0, #1
   141dc:	bx	lr
   141e0:	clz	r2, r1
   141e4:	rsb	r2, r2, #31
   141e8:	cmp	ip, #0
   141ec:	lsr	r0, r3, r2
   141f0:	rsbmi	r0, r0, #0
   141f4:	bx	lr
   141f8:	cmp	r0, #0
   141fc:	mvngt	r0, #-2147483648	; 0x80000000
   14200:	movlt	r0, #-2147483648	; 0x80000000
   14204:	b	14628 <g_strcmp0@plt+0x25a4>
   14208:	cmp	r1, #0
   1420c:	beq	141f8 <g_strcmp0@plt+0x2174>
   14210:	push	{r0, r1, lr}
   14214:	bl	13ff0 <g_strcmp0@plt+0x1f6c>
   14218:	pop	{r1, r2, lr}
   1421c:	mul	r3, r2, r0
   14220:	sub	r1, r1, r3
   14224:	bx	lr
   14228:	eor	r1, r1, #-2147483648	; 0x80000000
   1422c:	b	14234 <g_strcmp0@plt+0x21b0>
   14230:	eor	r3, r3, #-2147483648	; 0x80000000
   14234:	push	{r4, r5, lr}
   14238:	lsl	r4, r1, #1
   1423c:	lsl	r5, r3, #1
   14240:	teq	r4, r5
   14244:	teqeq	r0, r2
   14248:	orrsne	ip, r4, r0
   1424c:	orrsne	ip, r5, r2
   14250:	mvnsne	ip, r4, asr #21
   14254:	mvnsne	ip, r5, asr #21
   14258:	beq	14444 <g_strcmp0@plt+0x23c0>
   1425c:	lsr	r4, r4, #21
   14260:	rsbs	r5, r4, r5, lsr #21
   14264:	rsblt	r5, r5, #0
   14268:	ble	14288 <g_strcmp0@plt+0x2204>
   1426c:	add	r4, r4, r5
   14270:	eor	r2, r0, r2
   14274:	eor	r3, r1, r3
   14278:	eor	r0, r2, r0
   1427c:	eor	r1, r3, r1
   14280:	eor	r2, r0, r2
   14284:	eor	r3, r1, r3
   14288:	cmp	r5, #54	; 0x36
   1428c:	pophi	{r4, r5, pc}
   14290:	tst	r1, #-2147483648	; 0x80000000
   14294:	lsl	r1, r1, #12
   14298:	mov	ip, #1048576	; 0x100000
   1429c:	orr	r1, ip, r1, lsr #12
   142a0:	beq	142ac <g_strcmp0@plt+0x2228>
   142a4:	rsbs	r0, r0, #0
   142a8:	rsc	r1, r1, #0
   142ac:	tst	r3, #-2147483648	; 0x80000000
   142b0:	lsl	r3, r3, #12
   142b4:	orr	r3, ip, r3, lsr #12
   142b8:	beq	142c4 <g_strcmp0@plt+0x2240>
   142bc:	rsbs	r2, r2, #0
   142c0:	rsc	r3, r3, #0
   142c4:	teq	r4, r5
   142c8:	beq	1442c <g_strcmp0@plt+0x23a8>
   142cc:	sub	r4, r4, #1
   142d0:	rsbs	lr, r5, #32
   142d4:	blt	142f0 <g_strcmp0@plt+0x226c>
   142d8:	lsl	ip, r2, lr
   142dc:	adds	r0, r0, r2, lsr r5
   142e0:	adc	r1, r1, #0
   142e4:	adds	r0, r0, r3, lsl lr
   142e8:	adcs	r1, r1, r3, asr r5
   142ec:	b	1430c <g_strcmp0@plt+0x2288>
   142f0:	sub	r5, r5, #32
   142f4:	add	lr, lr, #32
   142f8:	cmp	r2, #1
   142fc:	lsl	ip, r3, lr
   14300:	orrcs	ip, ip, #2
   14304:	adds	r0, r0, r3, asr r5
   14308:	adcs	r1, r1, r3, asr #31
   1430c:	and	r5, r1, #-2147483648	; 0x80000000
   14310:	bpl	14320 <g_strcmp0@plt+0x229c>
   14314:	rsbs	ip, ip, #0
   14318:	rscs	r0, r0, #0
   1431c:	rsc	r1, r1, #0
   14320:	cmp	r1, #1048576	; 0x100000
   14324:	bcc	14364 <g_strcmp0@plt+0x22e0>
   14328:	cmp	r1, #2097152	; 0x200000
   1432c:	bcc	1434c <g_strcmp0@plt+0x22c8>
   14330:	lsrs	r1, r1, #1
   14334:	rrxs	r0, r0
   14338:	rrx	ip, ip
   1433c:	add	r4, r4, #1
   14340:	lsl	r2, r4, #21
   14344:	cmn	r2, #4194304	; 0x400000
   14348:	bcs	144a4 <g_strcmp0@plt+0x2420>
   1434c:	cmp	ip, #-2147483648	; 0x80000000
   14350:	lsrseq	ip, r0, #1
   14354:	adcs	r0, r0, #0
   14358:	adc	r1, r1, r4, lsl #20
   1435c:	orr	r1, r1, r5
   14360:	pop	{r4, r5, pc}
   14364:	lsls	ip, ip, #1
   14368:	adcs	r0, r0, r0
   1436c:	adc	r1, r1, r1
   14370:	tst	r1, #1048576	; 0x100000
   14374:	sub	r4, r4, #1
   14378:	bne	1434c <g_strcmp0@plt+0x22c8>
   1437c:	teq	r1, #0
   14380:	moveq	r1, r0
   14384:	moveq	r0, #0
   14388:	clz	r3, r1
   1438c:	addeq	r3, r3, #32
   14390:	sub	r3, r3, #11
   14394:	subs	r2, r3, #32
   14398:	bge	143bc <g_strcmp0@plt+0x2338>
   1439c:	adds	r2, r2, #12
   143a0:	ble	143b8 <g_strcmp0@plt+0x2334>
   143a4:	add	ip, r2, #20
   143a8:	rsb	r2, r2, #12
   143ac:	lsl	r0, r1, ip
   143b0:	lsr	r1, r1, r2
   143b4:	b	143cc <g_strcmp0@plt+0x2348>
   143b8:	add	r2, r2, #20
   143bc:	rsble	ip, r2, #32
   143c0:	lsl	r1, r1, r2
   143c4:	orrle	r1, r1, r0, lsr ip
   143c8:	lslle	r0, r0, r2
   143cc:	subs	r4, r4, r3
   143d0:	addge	r1, r1, r4, lsl #20
   143d4:	orrge	r1, r1, r5
   143d8:	popge	{r4, r5, pc}
   143dc:	mvn	r4, r4
   143e0:	subs	r4, r4, #31
   143e4:	bge	14420 <g_strcmp0@plt+0x239c>
   143e8:	adds	r4, r4, #12
   143ec:	bgt	14408 <g_strcmp0@plt+0x2384>
   143f0:	add	r4, r4, #20
   143f4:	rsb	r2, r4, #32
   143f8:	lsr	r0, r0, r4
   143fc:	orr	r0, r0, r1, lsl r2
   14400:	orr	r1, r5, r1, lsr r4
   14404:	pop	{r4, r5, pc}
   14408:	rsb	r4, r4, #12
   1440c:	rsb	r2, r4, #32
   14410:	lsr	r0, r0, r2
   14414:	orr	r0, r0, r1, lsl r4
   14418:	mov	r1, r5
   1441c:	pop	{r4, r5, pc}
   14420:	lsr	r0, r1, r4
   14424:	mov	r1, r5
   14428:	pop	{r4, r5, pc}
   1442c:	teq	r4, #0
   14430:	eor	r3, r3, #1048576	; 0x100000
   14434:	eoreq	r1, r1, #1048576	; 0x100000
   14438:	addeq	r4, r4, #1
   1443c:	subne	r5, r5, #1
   14440:	b	142cc <g_strcmp0@plt+0x2248>
   14444:	mvns	ip, r4, asr #21
   14448:	mvnsne	ip, r5, asr #21
   1444c:	beq	144b4 <g_strcmp0@plt+0x2430>
   14450:	teq	r4, r5
   14454:	teqeq	r0, r2
   14458:	beq	1446c <g_strcmp0@plt+0x23e8>
   1445c:	orrs	ip, r4, r0
   14460:	moveq	r1, r3
   14464:	moveq	r0, r2
   14468:	pop	{r4, r5, pc}
   1446c:	teq	r1, r3
   14470:	movne	r1, #0
   14474:	movne	r0, #0
   14478:	popne	{r4, r5, pc}
   1447c:	lsrs	ip, r4, #21
   14480:	bne	14494 <g_strcmp0@plt+0x2410>
   14484:	lsls	r0, r0, #1
   14488:	adcs	r1, r1, r1
   1448c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   14490:	pop	{r4, r5, pc}
   14494:	adds	r4, r4, #4194304	; 0x400000
   14498:	addcc	r1, r1, #1048576	; 0x100000
   1449c:	popcc	{r4, r5, pc}
   144a0:	and	r5, r1, #-2147483648	; 0x80000000
   144a4:	orr	r1, r5, #2130706432	; 0x7f000000
   144a8:	orr	r1, r1, #15728640	; 0xf00000
   144ac:	mov	r0, #0
   144b0:	pop	{r4, r5, pc}
   144b4:	mvns	ip, r4, asr #21
   144b8:	movne	r1, r3
   144bc:	movne	r0, r2
   144c0:	mvnseq	ip, r5, asr #21
   144c4:	movne	r3, r1
   144c8:	movne	r2, r0
   144cc:	orrs	r4, r0, r1, lsl #12
   144d0:	orrseq	r5, r2, r3, lsl #12
   144d4:	teqeq	r1, r3
   144d8:	orrne	r1, r1, #524288	; 0x80000
   144dc:	pop	{r4, r5, pc}
   144e0:	teq	r0, #0
   144e4:	moveq	r1, #0
   144e8:	bxeq	lr
   144ec:	push	{r4, r5, lr}
   144f0:	mov	r4, #1024	; 0x400
   144f4:	add	r4, r4, #50	; 0x32
   144f8:	mov	r5, #0
   144fc:	mov	r1, #0
   14500:	b	1437c <g_strcmp0@plt+0x22f8>
   14504:	teq	r0, #0
   14508:	moveq	r1, #0
   1450c:	bxeq	lr
   14510:	push	{r4, r5, lr}
   14514:	mov	r4, #1024	; 0x400
   14518:	add	r4, r4, #50	; 0x32
   1451c:	ands	r5, r0, #-2147483648	; 0x80000000
   14520:	rsbmi	r0, r0, #0
   14524:	mov	r1, #0
   14528:	b	1437c <g_strcmp0@plt+0x22f8>
   1452c:	lsls	r2, r0, #1
   14530:	asr	r1, r2, #3
   14534:	rrx	r1, r1
   14538:	lsl	r0, r2, #28
   1453c:	andsne	r3, r2, #-16777216	; 0xff000000
   14540:	teqne	r3, #-16777216	; 0xff000000
   14544:	eorne	r1, r1, #939524096	; 0x38000000
   14548:	bxne	lr
   1454c:	teq	r2, #0
   14550:	teqne	r3, #-16777216	; 0xff000000
   14554:	bxeq	lr
   14558:	push	{r4, r5, lr}
   1455c:	mov	r4, #896	; 0x380
   14560:	and	r5, r1, #-2147483648	; 0x80000000
   14564:	bic	r1, r1, #-2147483648	; 0x80000000
   14568:	b	1437c <g_strcmp0@plt+0x22f8>
   1456c:	orrs	r2, r0, r1
   14570:	bxeq	lr
   14574:	push	{r4, r5, lr}
   14578:	mov	r5, #0
   1457c:	b	1459c <g_strcmp0@plt+0x2518>
   14580:	orrs	r2, r0, r1
   14584:	bxeq	lr
   14588:	push	{r4, r5, lr}
   1458c:	ands	r5, r1, #-2147483648	; 0x80000000
   14590:	bpl	1459c <g_strcmp0@plt+0x2518>
   14594:	rsbs	r0, r0, #0
   14598:	rsc	r1, r1, #0
   1459c:	mov	r4, #1024	; 0x400
   145a0:	add	r4, r4, #50	; 0x32
   145a4:	lsrs	ip, r1, #22
   145a8:	beq	14320 <g_strcmp0@plt+0x229c>
   145ac:	mov	r2, #3
   145b0:	lsrs	ip, ip, #3
   145b4:	addne	r2, r2, #3
   145b8:	lsrs	ip, ip, #3
   145bc:	addne	r2, r2, #3
   145c0:	add	r2, r2, ip, lsr #3
   145c4:	rsb	r3, r2, #32
   145c8:	lsl	ip, r0, r3
   145cc:	lsr	r0, r0, r2
   145d0:	orr	r0, r0, r1, lsl r3
   145d4:	lsr	r1, r1, r2
   145d8:	add	r4, r4, r2
   145dc:	b	14320 <g_strcmp0@plt+0x229c>
   145e0:	cmp	r3, #0
   145e4:	cmpeq	r2, #0
   145e8:	bne	1460c <g_strcmp0@plt+0x2588>
   145ec:	cmp	r1, #0
   145f0:	movlt	r1, #-2147483648	; 0x80000000
   145f4:	movlt	r0, #0
   145f8:	blt	14608 <g_strcmp0@plt+0x2584>
   145fc:	cmpeq	r0, #0
   14600:	mvnne	r1, #-2147483648	; 0x80000000
   14604:	mvnne	r0, #0
   14608:	b	14628 <g_strcmp0@plt+0x25a4>
   1460c:	sub	sp, sp, #8
   14610:	push	{sp, lr}
   14614:	bl	146b8 <g_strcmp0@plt+0x2634>
   14618:	ldr	lr, [sp, #4]
   1461c:	add	sp, sp, #8
   14620:	pop	{r2, r3}
   14624:	bx	lr
   14628:	push	{r1, lr}
   1462c:	mov	r0, #8
   14630:	bl	11f1c <raise@plt>
   14634:	pop	{r1, pc}
   14638:	vmov	d7, r0, r1
   1463c:	push	{r3, lr}
   14640:	vcmpe.f64	d7, #0.0
   14644:	vmrs	APSR_nzcv, fpscr
   14648:	bmi	14654 <g_strcmp0@plt+0x25d0>
   1464c:	pop	{r3, lr}
   14650:	b	14670 <g_strcmp0@plt+0x25ec>
   14654:	vneg.f64	d6, d7
   14658:	vmov	r0, r1, d6
   1465c:	bl	14670 <g_strcmp0@plt+0x25ec>
   14660:	rsbs	r0, r0, #0
   14664:	rsc	r1, r1, #0
   14668:	pop	{r3, pc}
   1466c:	andeq	r0, r0, r0
   14670:	vmov	d7, r0, r1
   14674:	vldr	d5, [pc, #44]	; 146a8 <g_strcmp0@plt+0x2624>
   14678:	vldr	d6, [pc, #48]	; 146b0 <g_strcmp0@plt+0x262c>
   1467c:	mov	r0, #0
   14680:	vmul.f64	d5, d7, d5
   14684:	vcvt.u32.f64	s9, d5
   14688:	vcvt.f64.u32	d5, s9
   1468c:	vmov	r1, s9
   14690:	vmls.f64	d7, d5, d6
   14694:	vcvt.u32.f64	s14, d7
   14698:	vmov	r3, s14
   1469c:	orr	r0, r0, r3
   146a0:	bx	lr
   146a4:	nop	{0}
   146a8:	andeq	r0, r0, r0
   146ac:	ldclcc	0, cr0, [r0]
   146b0:	andeq	r0, r0, r0
   146b4:	mvnsmi	r0, r0
   146b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   146bc:	mov	r8, r2
   146c0:	mov	r6, r0
   146c4:	mov	r7, r1
   146c8:	mov	sl, r3
   146cc:	ldr	r9, [sp, #32]
   146d0:	bl	14730 <g_strcmp0@plt+0x26ac>
   146d4:	umull	r4, r5, r8, r0
   146d8:	mul	r8, r8, r1
   146dc:	mla	r2, r0, sl, r8
   146e0:	add	r5, r2, r5
   146e4:	subs	r4, r6, r4
   146e8:	sbc	r5, r7, r5
   146ec:	strd	r4, [r9]
   146f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   146f4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   146f8:	mov	r8, r2
   146fc:	mov	r6, r0
   14700:	mov	r7, r1
   14704:	mov	r5, r3
   14708:	ldr	r9, [sp, #32]
   1470c:	bl	14bbc <g_strcmp0@plt+0x2b38>
   14710:	mul	r3, r0, r5
   14714:	umull	r4, r5, r0, r8
   14718:	mla	r8, r8, r1, r3
   1471c:	add	r5, r8, r5
   14720:	subs	r4, r6, r4
   14724:	sbc	r5, r7, r5
   14728:	strd	r4, [r9]
   1472c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14734:	rsbs	r4, r0, #0
   14738:	rsc	r5, r1, #0
   1473c:	cmp	r1, #0
   14740:	mvn	r6, #0
   14744:	sub	sp, sp, #12
   14748:	movge	r4, r0
   1474c:	movge	r5, r1
   14750:	movge	r6, #0
   14754:	cmp	r3, #0
   14758:	blt	14990 <g_strcmp0@plt+0x290c>
   1475c:	cmp	r3, #0
   14760:	mov	sl, r4
   14764:	mov	ip, r5
   14768:	mov	r0, r2
   1476c:	mov	r1, r3
   14770:	mov	r8, r2
   14774:	mov	r7, r4
   14778:	mov	r9, r5
   1477c:	bne	14874 <g_strcmp0@plt+0x27f0>
   14780:	cmp	r2, r5
   14784:	bls	148b0 <g_strcmp0@plt+0x282c>
   14788:	clz	r3, r2
   1478c:	cmp	r3, #0
   14790:	rsbne	r2, r3, #32
   14794:	lslne	r8, r0, r3
   14798:	lsrne	r2, r4, r2
   1479c:	lslne	r7, r4, r3
   147a0:	orrne	r9, r2, r5, lsl r3
   147a4:	lsr	r4, r8, #16
   147a8:	uxth	sl, r8
   147ac:	mov	r1, r4
   147b0:	mov	r0, r9
   147b4:	bl	14fec <g_strcmp0@plt+0x2f68>
   147b8:	mov	r1, r4
   147bc:	mov	fp, r0
   147c0:	mov	r0, r9
   147c4:	bl	151d8 <g_strcmp0@plt+0x3154>
   147c8:	mul	r0, sl, fp
   147cc:	lsr	r2, r7, #16
   147d0:	orr	r1, r2, r1, lsl #16
   147d4:	cmp	r0, r1
   147d8:	bls	147fc <g_strcmp0@plt+0x2778>
   147dc:	adds	r1, r1, r8
   147e0:	sub	r3, fp, #1
   147e4:	bcs	147f8 <g_strcmp0@plt+0x2774>
   147e8:	cmp	r0, r1
   147ec:	subhi	fp, fp, #2
   147f0:	addhi	r1, r1, r8
   147f4:	bhi	147fc <g_strcmp0@plt+0x2778>
   147f8:	mov	fp, r3
   147fc:	rsb	r9, r0, r1
   14800:	mov	r1, r4
   14804:	uxth	r7, r7
   14808:	mov	r0, r9
   1480c:	bl	14fec <g_strcmp0@plt+0x2f68>
   14810:	mov	r1, r4
   14814:	mov	r5, r0
   14818:	mov	r0, r9
   1481c:	bl	151d8 <g_strcmp0@plt+0x3154>
   14820:	mul	sl, sl, r5
   14824:	orr	r1, r7, r1, lsl #16
   14828:	cmp	sl, r1
   1482c:	bls	1484c <g_strcmp0@plt+0x27c8>
   14830:	adds	r8, r1, r8
   14834:	sub	r3, r5, #1
   14838:	bcs	14848 <g_strcmp0@plt+0x27c4>
   1483c:	cmp	sl, r8
   14840:	subhi	r5, r5, #2
   14844:	bhi	1484c <g_strcmp0@plt+0x27c8>
   14848:	mov	r5, r3
   1484c:	orr	r3, r5, fp, lsl #16
   14850:	mov	r4, #0
   14854:	cmp	r6, #0
   14858:	mov	r0, r3
   1485c:	mov	r1, r4
   14860:	beq	1486c <g_strcmp0@plt+0x27e8>
   14864:	rsbs	r0, r0, #0
   14868:	rsc	r1, r1, #0
   1486c:	add	sp, sp, #12
   14870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14874:	cmp	r3, r5
   14878:	movhi	r4, #0
   1487c:	movhi	r3, r4
   14880:	bhi	14854 <g_strcmp0@plt+0x27d0>
   14884:	clz	r5, r1
   14888:	cmp	r5, #0
   1488c:	bne	14a7c <g_strcmp0@plt+0x29f8>
   14890:	cmp	r1, ip
   14894:	cmpcs	r2, sl
   14898:	movhi	r4, #0
   1489c:	movls	r4, #1
   148a0:	movls	r3, #1
   148a4:	movls	r4, r5
   148a8:	movhi	r3, r4
   148ac:	b	14854 <g_strcmp0@plt+0x27d0>
   148b0:	cmp	r2, #0
   148b4:	bne	148c8 <g_strcmp0@plt+0x2844>
   148b8:	mov	r1, r2
   148bc:	mov	r0, #1
   148c0:	bl	14fec <g_strcmp0@plt+0x2f68>
   148c4:	mov	r8, r0
   148c8:	clz	r3, r8
   148cc:	cmp	r3, #0
   148d0:	bne	149a0 <g_strcmp0@plt+0x291c>
   148d4:	rsb	r9, r8, r9
   148d8:	lsr	r5, r8, #16
   148dc:	uxth	sl, r8
   148e0:	mov	r4, #1
   148e4:	mov	r1, r5
   148e8:	mov	r0, r9
   148ec:	bl	14fec <g_strcmp0@plt+0x2f68>
   148f0:	mov	r1, r5
   148f4:	mov	fp, r0
   148f8:	mov	r0, r9
   148fc:	bl	151d8 <g_strcmp0@plt+0x3154>
   14900:	mul	r0, sl, fp
   14904:	lsr	r2, r7, #16
   14908:	orr	r1, r2, r1, lsl #16
   1490c:	cmp	r0, r1
   14910:	bls	14930 <g_strcmp0@plt+0x28ac>
   14914:	adds	r1, r1, r8
   14918:	sub	r3, fp, #1
   1491c:	bcs	14b9c <g_strcmp0@plt+0x2b18>
   14920:	cmp	r0, r1
   14924:	subhi	fp, fp, #2
   14928:	addhi	r1, r1, r8
   1492c:	bls	14b9c <g_strcmp0@plt+0x2b18>
   14930:	rsb	r2, r0, r1
   14934:	mov	r1, r5
   14938:	str	r2, [sp]
   1493c:	uxth	r7, r7
   14940:	mov	r0, r2
   14944:	bl	14fec <g_strcmp0@plt+0x2f68>
   14948:	ldr	r2, [sp]
   1494c:	mov	r1, r5
   14950:	mov	r9, r0
   14954:	mov	r0, r2
   14958:	bl	151d8 <g_strcmp0@plt+0x3154>
   1495c:	mul	sl, sl, r9
   14960:	orr	r1, r7, r1, lsl #16
   14964:	cmp	sl, r1
   14968:	bls	14988 <g_strcmp0@plt+0x2904>
   1496c:	adds	r8, r1, r8
   14970:	sub	r3, r9, #1
   14974:	bcs	14984 <g_strcmp0@plt+0x2900>
   14978:	cmp	sl, r8
   1497c:	subhi	r9, r9, #2
   14980:	bhi	14988 <g_strcmp0@plt+0x2904>
   14984:	mov	r9, r3
   14988:	orr	r3, r9, fp, lsl #16
   1498c:	b	14854 <g_strcmp0@plt+0x27d0>
   14990:	mvn	r6, r6
   14994:	rsbs	r2, r2, #0
   14998:	rsc	r3, r3, #0
   1499c:	b	1475c <g_strcmp0@plt+0x26d8>
   149a0:	lsl	r8, r8, r3
   149a4:	rsb	fp, r3, #32
   149a8:	lsr	r4, r9, fp
   149ac:	lsr	fp, r7, fp
   149b0:	lsr	r5, r8, #16
   149b4:	orr	fp, fp, r9, lsl r3
   149b8:	mov	r0, r4
   149bc:	lsl	r7, r7, r3
   149c0:	mov	r1, r5
   149c4:	uxth	sl, r8
   149c8:	bl	14fec <g_strcmp0@plt+0x2f68>
   149cc:	mov	r1, r5
   149d0:	mov	r3, r0
   149d4:	mov	r0, r4
   149d8:	str	r3, [sp]
   149dc:	bl	151d8 <g_strcmp0@plt+0x3154>
   149e0:	ldr	r3, [sp]
   149e4:	lsr	r2, fp, #16
   149e8:	mul	r0, sl, r3
   149ec:	orr	r1, r2, r1, lsl #16
   149f0:	cmp	r0, r1
   149f4:	bls	14a14 <g_strcmp0@plt+0x2990>
   149f8:	adds	r1, r1, r8
   149fc:	sub	r2, r3, #1
   14a00:	bcs	14bb4 <g_strcmp0@plt+0x2b30>
   14a04:	cmp	r0, r1
   14a08:	subhi	r3, r3, #2
   14a0c:	addhi	r1, r1, r8
   14a10:	bls	14bb4 <g_strcmp0@plt+0x2b30>
   14a14:	rsb	r9, r0, r1
   14a18:	mov	r1, r5
   14a1c:	str	r3, [sp]
   14a20:	uxth	fp, fp
   14a24:	mov	r0, r9
   14a28:	bl	14fec <g_strcmp0@plt+0x2f68>
   14a2c:	mov	r1, r5
   14a30:	mov	r4, r0
   14a34:	mov	r0, r9
   14a38:	bl	151d8 <g_strcmp0@plt+0x3154>
   14a3c:	mul	r9, sl, r4
   14a40:	ldr	r3, [sp]
   14a44:	orr	r1, fp, r1, lsl #16
   14a48:	cmp	r9, r1
   14a4c:	bls	14a70 <g_strcmp0@plt+0x29ec>
   14a50:	adds	r1, r1, r8
   14a54:	sub	r2, r4, #1
   14a58:	bcs	14a6c <g_strcmp0@plt+0x29e8>
   14a5c:	cmp	r9, r1
   14a60:	subhi	r4, r4, #2
   14a64:	addhi	r1, r1, r8
   14a68:	bhi	14a70 <g_strcmp0@plt+0x29ec>
   14a6c:	mov	r4, r2
   14a70:	rsb	r9, r9, r1
   14a74:	orr	r4, r4, r3, lsl #16
   14a78:	b	148e4 <g_strcmp0@plt+0x2860>
   14a7c:	rsb	sl, r5, #32
   14a80:	lsl	r3, r2, r5
   14a84:	lsr	r0, r2, sl
   14a88:	lsr	r2, ip, sl
   14a8c:	orr	r4, r0, r1, lsl r5
   14a90:	lsr	sl, r7, sl
   14a94:	mov	r0, r2
   14a98:	orr	sl, sl, ip, lsl r5
   14a9c:	lsr	r9, r4, #16
   14aa0:	str	r3, [sp, #4]
   14aa4:	str	r2, [sp]
   14aa8:	uxth	fp, r4
   14aac:	mov	r1, r9
   14ab0:	bl	14fec <g_strcmp0@plt+0x2f68>
   14ab4:	ldr	r2, [sp]
   14ab8:	mov	r1, r9
   14abc:	mov	r8, r0
   14ac0:	mov	r0, r2
   14ac4:	bl	151d8 <g_strcmp0@plt+0x3154>
   14ac8:	mul	r0, fp, r8
   14acc:	lsr	r2, sl, #16
   14ad0:	orr	r1, r2, r1, lsl #16
   14ad4:	cmp	r0, r1
   14ad8:	bls	14af8 <g_strcmp0@plt+0x2a74>
   14adc:	adds	r1, r1, r4
   14ae0:	sub	r2, r8, #1
   14ae4:	bcs	14bac <g_strcmp0@plt+0x2b28>
   14ae8:	cmp	r0, r1
   14aec:	subhi	r8, r8, #2
   14af0:	addhi	r1, r1, r4
   14af4:	bls	14bac <g_strcmp0@plt+0x2b28>
   14af8:	rsb	ip, r0, r1
   14afc:	mov	r1, r9
   14b00:	str	ip, [sp]
   14b04:	mov	r0, ip
   14b08:	bl	14fec <g_strcmp0@plt+0x2f68>
   14b0c:	ldr	ip, [sp]
   14b10:	mov	r1, r9
   14b14:	mov	r2, r0
   14b18:	mov	r0, ip
   14b1c:	str	r2, [sp]
   14b20:	bl	151d8 <g_strcmp0@plt+0x3154>
   14b24:	ldr	r2, [sp]
   14b28:	uxth	ip, sl
   14b2c:	mul	fp, fp, r2
   14b30:	orr	ip, ip, r1, lsl #16
   14b34:	cmp	fp, ip
   14b38:	bls	14b58 <g_strcmp0@plt+0x2ad4>
   14b3c:	adds	ip, ip, r4
   14b40:	sub	r1, r2, #1
   14b44:	bcs	14ba4 <g_strcmp0@plt+0x2b20>
   14b48:	cmp	fp, ip
   14b4c:	subhi	r2, r2, #2
   14b50:	addhi	ip, ip, r4
   14b54:	bls	14ba4 <g_strcmp0@plt+0x2b20>
   14b58:	ldr	r0, [sp, #4]
   14b5c:	orr	r1, r2, r8, lsl #16
   14b60:	rsb	fp, fp, ip
   14b64:	umull	r2, r3, r1, r0
   14b68:	cmp	fp, r3
   14b6c:	bcc	14b90 <g_strcmp0@plt+0x2b0c>
   14b70:	movne	r4, #0
   14b74:	moveq	r4, #1
   14b78:	cmp	r2, r7, lsl r5
   14b7c:	movls	r4, #0
   14b80:	andhi	r4, r4, #1
   14b84:	cmp	r4, #0
   14b88:	moveq	r3, r1
   14b8c:	beq	14854 <g_strcmp0@plt+0x27d0>
   14b90:	sub	r3, r1, #1
   14b94:	mov	r4, #0
   14b98:	b	14854 <g_strcmp0@plt+0x27d0>
   14b9c:	mov	fp, r3
   14ba0:	b	14930 <g_strcmp0@plt+0x28ac>
   14ba4:	mov	r2, r1
   14ba8:	b	14b58 <g_strcmp0@plt+0x2ad4>
   14bac:	mov	r8, r2
   14bb0:	b	14af8 <g_strcmp0@plt+0x2a74>
   14bb4:	mov	r3, r2
   14bb8:	b	14a14 <g_strcmp0@plt+0x2990>
   14bbc:	cmp	r3, #0
   14bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bc4:	mov	r6, r0
   14bc8:	sub	sp, sp, #12
   14bcc:	mov	r5, r1
   14bd0:	mov	r7, r0
   14bd4:	mov	r4, r2
   14bd8:	mov	r8, r1
   14bdc:	bne	14cbc <g_strcmp0@plt+0x2c38>
   14be0:	cmp	r2, r1
   14be4:	bls	14cf8 <g_strcmp0@plt+0x2c74>
   14be8:	clz	r3, r2
   14bec:	cmp	r3, #0
   14bf0:	rsbne	r8, r3, #32
   14bf4:	lslne	r4, r2, r3
   14bf8:	lsrne	r8, r0, r8
   14bfc:	lslne	r7, r0, r3
   14c00:	orrne	r8, r8, r1, lsl r3
   14c04:	lsr	r5, r4, #16
   14c08:	uxth	sl, r4
   14c0c:	mov	r1, r5
   14c10:	mov	r0, r8
   14c14:	bl	14fec <g_strcmp0@plt+0x2f68>
   14c18:	mov	r1, r5
   14c1c:	mov	r9, r0
   14c20:	mov	r0, r8
   14c24:	bl	151d8 <g_strcmp0@plt+0x3154>
   14c28:	mul	r0, sl, r9
   14c2c:	lsr	r3, r7, #16
   14c30:	orr	r1, r3, r1, lsl #16
   14c34:	cmp	r0, r1
   14c38:	bls	14c5c <g_strcmp0@plt+0x2bd8>
   14c3c:	adds	r1, r1, r4
   14c40:	sub	r2, r9, #1
   14c44:	bcs	14c58 <g_strcmp0@plt+0x2bd4>
   14c48:	cmp	r0, r1
   14c4c:	subhi	r9, r9, #2
   14c50:	addhi	r1, r1, r4
   14c54:	bhi	14c5c <g_strcmp0@plt+0x2bd8>
   14c58:	mov	r9, r2
   14c5c:	rsb	r8, r0, r1
   14c60:	mov	r1, r5
   14c64:	uxth	r7, r7
   14c68:	mov	r0, r8
   14c6c:	bl	14fec <g_strcmp0@plt+0x2f68>
   14c70:	mov	r1, r5
   14c74:	mov	r6, r0
   14c78:	mov	r0, r8
   14c7c:	bl	151d8 <g_strcmp0@plt+0x3154>
   14c80:	mul	sl, sl, r6
   14c84:	orr	r1, r7, r1, lsl #16
   14c88:	cmp	sl, r1
   14c8c:	bls	14ca8 <g_strcmp0@plt+0x2c24>
   14c90:	adds	r4, r1, r4
   14c94:	sub	r3, r6, #1
   14c98:	bcs	14fa4 <g_strcmp0@plt+0x2f20>
   14c9c:	cmp	sl, r4
   14ca0:	subhi	r6, r6, #2
   14ca4:	bls	14fa4 <g_strcmp0@plt+0x2f20>
   14ca8:	orr	r0, r6, r9, lsl #16
   14cac:	mov	r6, #0
   14cb0:	mov	r1, r6
   14cb4:	add	sp, sp, #12
   14cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cbc:	cmp	r3, r1
   14cc0:	movhi	r6, #0
   14cc4:	movhi	r0, r6
   14cc8:	bhi	14cb0 <g_strcmp0@plt+0x2c2c>
   14ccc:	clz	r7, r3
   14cd0:	cmp	r7, #0
   14cd4:	bne	14dd4 <g_strcmp0@plt+0x2d50>
   14cd8:	cmp	r3, r1
   14cdc:	cmpcs	r2, r6
   14ce0:	movhi	r6, #0
   14ce4:	movls	r6, #1
   14ce8:	movls	r0, #1
   14cec:	movls	r6, r7
   14cf0:	movhi	r0, r6
   14cf4:	b	14cb0 <g_strcmp0@plt+0x2c2c>
   14cf8:	cmp	r2, #0
   14cfc:	bne	14d10 <g_strcmp0@plt+0x2c8c>
   14d00:	mov	r1, r2
   14d04:	mov	r0, #1
   14d08:	bl	14fec <g_strcmp0@plt+0x2f68>
   14d0c:	mov	r4, r0
   14d10:	clz	r3, r4
   14d14:	cmp	r3, #0
   14d18:	bne	14ed0 <g_strcmp0@plt+0x2e4c>
   14d1c:	rsb	r5, r4, r5
   14d20:	lsr	r8, r4, #16
   14d24:	uxth	sl, r4
   14d28:	mov	r6, #1
   14d2c:	mov	r1, r8
   14d30:	mov	r0, r5
   14d34:	bl	14fec <g_strcmp0@plt+0x2f68>
   14d38:	mov	r1, r8
   14d3c:	mov	r9, r0
   14d40:	mov	r0, r5
   14d44:	bl	151d8 <g_strcmp0@plt+0x3154>
   14d48:	mul	r0, sl, r9
   14d4c:	lsr	r3, r7, #16
   14d50:	orr	r1, r3, r1, lsl #16
   14d54:	cmp	r0, r1
   14d58:	bls	14d78 <g_strcmp0@plt+0x2cf4>
   14d5c:	adds	r1, r1, r4
   14d60:	sub	r2, r9, #1
   14d64:	bcs	14fac <g_strcmp0@plt+0x2f28>
   14d68:	cmp	r0, r1
   14d6c:	subhi	r9, r9, #2
   14d70:	addhi	r1, r1, r4
   14d74:	bls	14fac <g_strcmp0@plt+0x2f28>
   14d78:	rsb	fp, r0, r1
   14d7c:	mov	r1, r8
   14d80:	uxth	r7, r7
   14d84:	mov	r0, fp
   14d88:	bl	14fec <g_strcmp0@plt+0x2f68>
   14d8c:	mov	r1, r8
   14d90:	mov	r5, r0
   14d94:	mov	r0, fp
   14d98:	bl	151d8 <g_strcmp0@plt+0x3154>
   14d9c:	mul	sl, sl, r5
   14da0:	orr	r1, r7, r1, lsl #16
   14da4:	cmp	sl, r1
   14da8:	bls	14dc4 <g_strcmp0@plt+0x2d40>
   14dac:	adds	r4, r1, r4
   14db0:	sub	r3, r5, #1
   14db4:	bcs	14fb4 <g_strcmp0@plt+0x2f30>
   14db8:	cmp	sl, r4
   14dbc:	subhi	r5, r5, #2
   14dc0:	bls	14fb4 <g_strcmp0@plt+0x2f30>
   14dc4:	orr	r0, r5, r9, lsl #16
   14dc8:	mov	r1, r6
   14dcc:	add	sp, sp, #12
   14dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dd4:	rsb	r1, r7, #32
   14dd8:	lsl	r0, r2, r7
   14ddc:	lsr	r2, r2, r1
   14de0:	lsr	fp, r5, r1
   14de4:	orr	r8, r2, r3, lsl r7
   14de8:	lsr	r1, r6, r1
   14dec:	str	r0, [sp, #4]
   14df0:	orr	r5, r1, r5, lsl r7
   14df4:	lsr	r9, r8, #16
   14df8:	mov	r0, fp
   14dfc:	uxth	sl, r8
   14e00:	mov	r1, r9
   14e04:	bl	14fec <g_strcmp0@plt+0x2f68>
   14e08:	mov	r1, r9
   14e0c:	mov	r4, r0
   14e10:	mov	r0, fp
   14e14:	bl	151d8 <g_strcmp0@plt+0x3154>
   14e18:	mul	r0, sl, r4
   14e1c:	lsr	ip, r5, #16
   14e20:	orr	r1, ip, r1, lsl #16
   14e24:	cmp	r0, r1
   14e28:	bls	14e3c <g_strcmp0@plt+0x2db8>
   14e2c:	adds	r1, r1, r8
   14e30:	sub	r2, r4, #1
   14e34:	bcc	14fd0 <g_strcmp0@plt+0x2f4c>
   14e38:	mov	r4, r2
   14e3c:	rsb	ip, r0, r1
   14e40:	mov	r1, r9
   14e44:	str	ip, [sp]
   14e48:	uxth	r5, r5
   14e4c:	mov	r0, ip
   14e50:	bl	14fec <g_strcmp0@plt+0x2f68>
   14e54:	ldr	ip, [sp]
   14e58:	mov	r1, r9
   14e5c:	mov	fp, r0
   14e60:	mov	r0, ip
   14e64:	bl	151d8 <g_strcmp0@plt+0x3154>
   14e68:	mul	sl, sl, fp
   14e6c:	orr	r1, r5, r1, lsl #16
   14e70:	cmp	sl, r1
   14e74:	bls	14e88 <g_strcmp0@plt+0x2e04>
   14e78:	adds	r1, r1, r8
   14e7c:	sub	r2, fp, #1
   14e80:	bcc	14fbc <g_strcmp0@plt+0x2f38>
   14e84:	mov	fp, r2
   14e88:	ldr	r3, [sp, #4]
   14e8c:	orr	r0, fp, r4, lsl #16
   14e90:	rsb	sl, sl, r1
   14e94:	umull	r4, r5, r0, r3
   14e98:	cmp	sl, r5
   14e9c:	bcc	14ebc <g_strcmp0@plt+0x2e38>
   14ea0:	movne	r3, #0
   14ea4:	moveq	r3, #1
   14ea8:	cmp	r4, r6, lsl r7
   14eac:	movls	r6, #0
   14eb0:	andhi	r6, r3, #1
   14eb4:	cmp	r6, #0
   14eb8:	beq	14cb0 <g_strcmp0@plt+0x2c2c>
   14ebc:	mov	r6, #0
   14ec0:	sub	r0, r0, #1
   14ec4:	mov	r1, r6
   14ec8:	add	sp, sp, #12
   14ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ed0:	lsl	r4, r4, r3
   14ed4:	rsb	r9, r3, #32
   14ed8:	lsr	r2, r5, r9
   14edc:	lsr	r9, r6, r9
   14ee0:	lsr	r8, r4, #16
   14ee4:	orr	r9, r9, r5, lsl r3
   14ee8:	mov	r0, r2
   14eec:	lsl	r7, r6, r3
   14ef0:	mov	r1, r8
   14ef4:	str	r2, [sp]
   14ef8:	bl	14fec <g_strcmp0@plt+0x2f68>
   14efc:	ldr	r2, [sp]
   14f00:	mov	r1, r8
   14f04:	uxth	sl, r4
   14f08:	mov	fp, r0
   14f0c:	mov	r0, r2
   14f10:	bl	151d8 <g_strcmp0@plt+0x3154>
   14f14:	mul	r0, sl, fp
   14f18:	lsr	r3, r9, #16
   14f1c:	orr	r1, r3, r1, lsl #16
   14f20:	cmp	r0, r1
   14f24:	bls	14f44 <g_strcmp0@plt+0x2ec0>
   14f28:	adds	r1, r1, r4
   14f2c:	sub	r3, fp, #1
   14f30:	bcs	14fe4 <g_strcmp0@plt+0x2f60>
   14f34:	cmp	r0, r1
   14f38:	subhi	fp, fp, #2
   14f3c:	addhi	r1, r1, r4
   14f40:	bls	14fe4 <g_strcmp0@plt+0x2f60>
   14f44:	rsb	r5, r0, r1
   14f48:	mov	r1, r8
   14f4c:	uxth	r9, r9
   14f50:	mov	r0, r5
   14f54:	bl	14fec <g_strcmp0@plt+0x2f68>
   14f58:	mov	r1, r8
   14f5c:	mov	r6, r0
   14f60:	mov	r0, r5
   14f64:	bl	151d8 <g_strcmp0@plt+0x3154>
   14f68:	mul	r5, sl, r6
   14f6c:	orr	r1, r9, r1, lsl #16
   14f70:	cmp	r5, r1
   14f74:	bls	14f98 <g_strcmp0@plt+0x2f14>
   14f78:	adds	r1, r1, r4
   14f7c:	sub	r3, r6, #1
   14f80:	bcs	14f94 <g_strcmp0@plt+0x2f10>
   14f84:	cmp	r5, r1
   14f88:	subhi	r6, r6, #2
   14f8c:	addhi	r1, r1, r4
   14f90:	bhi	14f98 <g_strcmp0@plt+0x2f14>
   14f94:	mov	r6, r3
   14f98:	rsb	r5, r5, r1
   14f9c:	orr	r6, r6, fp, lsl #16
   14fa0:	b	14d2c <g_strcmp0@plt+0x2ca8>
   14fa4:	mov	r6, r3
   14fa8:	b	14ca8 <g_strcmp0@plt+0x2c24>
   14fac:	mov	r9, r2
   14fb0:	b	14d78 <g_strcmp0@plt+0x2cf4>
   14fb4:	mov	r5, r3
   14fb8:	b	14dc4 <g_strcmp0@plt+0x2d40>
   14fbc:	cmp	sl, r1
   14fc0:	subhi	fp, fp, #2
   14fc4:	addhi	r1, r1, r8
   14fc8:	bhi	14e88 <g_strcmp0@plt+0x2e04>
   14fcc:	b	14e84 <g_strcmp0@plt+0x2e00>
   14fd0:	cmp	r0, r1
   14fd4:	subhi	r4, r4, #2
   14fd8:	addhi	r1, r1, r8
   14fdc:	bhi	14e3c <g_strcmp0@plt+0x2db8>
   14fe0:	b	14e38 <g_strcmp0@plt+0x2db4>
   14fe4:	mov	fp, r3
   14fe8:	b	14f44 <g_strcmp0@plt+0x2ec0>
   14fec:	subs	r2, r1, #1
   14ff0:	bxeq	lr
   14ff4:	bcc	151cc <g_strcmp0@plt+0x3148>
   14ff8:	cmp	r0, r1
   14ffc:	bls	151b0 <g_strcmp0@plt+0x312c>
   15000:	tst	r1, r2
   15004:	beq	151bc <g_strcmp0@plt+0x3138>
   15008:	clz	r3, r0
   1500c:	clz	r2, r1
   15010:	sub	r3, r2, r3
   15014:	rsbs	r3, r3, #31
   15018:	addne	r3, r3, r3, lsl #1
   1501c:	mov	r2, #0
   15020:	addne	pc, pc, r3, lsl #2
   15024:	nop	{0}
   15028:	cmp	r0, r1, lsl #31
   1502c:	adc	r2, r2, r2
   15030:	subcs	r0, r0, r1, lsl #31
   15034:	cmp	r0, r1, lsl #30
   15038:	adc	r2, r2, r2
   1503c:	subcs	r0, r0, r1, lsl #30
   15040:	cmp	r0, r1, lsl #29
   15044:	adc	r2, r2, r2
   15048:	subcs	r0, r0, r1, lsl #29
   1504c:	cmp	r0, r1, lsl #28
   15050:	adc	r2, r2, r2
   15054:	subcs	r0, r0, r1, lsl #28
   15058:	cmp	r0, r1, lsl #27
   1505c:	adc	r2, r2, r2
   15060:	subcs	r0, r0, r1, lsl #27
   15064:	cmp	r0, r1, lsl #26
   15068:	adc	r2, r2, r2
   1506c:	subcs	r0, r0, r1, lsl #26
   15070:	cmp	r0, r1, lsl #25
   15074:	adc	r2, r2, r2
   15078:	subcs	r0, r0, r1, lsl #25
   1507c:	cmp	r0, r1, lsl #24
   15080:	adc	r2, r2, r2
   15084:	subcs	r0, r0, r1, lsl #24
   15088:	cmp	r0, r1, lsl #23
   1508c:	adc	r2, r2, r2
   15090:	subcs	r0, r0, r1, lsl #23
   15094:	cmp	r0, r1, lsl #22
   15098:	adc	r2, r2, r2
   1509c:	subcs	r0, r0, r1, lsl #22
   150a0:	cmp	r0, r1, lsl #21
   150a4:	adc	r2, r2, r2
   150a8:	subcs	r0, r0, r1, lsl #21
   150ac:	cmp	r0, r1, lsl #20
   150b0:	adc	r2, r2, r2
   150b4:	subcs	r0, r0, r1, lsl #20
   150b8:	cmp	r0, r1, lsl #19
   150bc:	adc	r2, r2, r2
   150c0:	subcs	r0, r0, r1, lsl #19
   150c4:	cmp	r0, r1, lsl #18
   150c8:	adc	r2, r2, r2
   150cc:	subcs	r0, r0, r1, lsl #18
   150d0:	cmp	r0, r1, lsl #17
   150d4:	adc	r2, r2, r2
   150d8:	subcs	r0, r0, r1, lsl #17
   150dc:	cmp	r0, r1, lsl #16
   150e0:	adc	r2, r2, r2
   150e4:	subcs	r0, r0, r1, lsl #16
   150e8:	cmp	r0, r1, lsl #15
   150ec:	adc	r2, r2, r2
   150f0:	subcs	r0, r0, r1, lsl #15
   150f4:	cmp	r0, r1, lsl #14
   150f8:	adc	r2, r2, r2
   150fc:	subcs	r0, r0, r1, lsl #14
   15100:	cmp	r0, r1, lsl #13
   15104:	adc	r2, r2, r2
   15108:	subcs	r0, r0, r1, lsl #13
   1510c:	cmp	r0, r1, lsl #12
   15110:	adc	r2, r2, r2
   15114:	subcs	r0, r0, r1, lsl #12
   15118:	cmp	r0, r1, lsl #11
   1511c:	adc	r2, r2, r2
   15120:	subcs	r0, r0, r1, lsl #11
   15124:	cmp	r0, r1, lsl #10
   15128:	adc	r2, r2, r2
   1512c:	subcs	r0, r0, r1, lsl #10
   15130:	cmp	r0, r1, lsl #9
   15134:	adc	r2, r2, r2
   15138:	subcs	r0, r0, r1, lsl #9
   1513c:	cmp	r0, r1, lsl #8
   15140:	adc	r2, r2, r2
   15144:	subcs	r0, r0, r1, lsl #8
   15148:	cmp	r0, r1, lsl #7
   1514c:	adc	r2, r2, r2
   15150:	subcs	r0, r0, r1, lsl #7
   15154:	cmp	r0, r1, lsl #6
   15158:	adc	r2, r2, r2
   1515c:	subcs	r0, r0, r1, lsl #6
   15160:	cmp	r0, r1, lsl #5
   15164:	adc	r2, r2, r2
   15168:	subcs	r0, r0, r1, lsl #5
   1516c:	cmp	r0, r1, lsl #4
   15170:	adc	r2, r2, r2
   15174:	subcs	r0, r0, r1, lsl #4
   15178:	cmp	r0, r1, lsl #3
   1517c:	adc	r2, r2, r2
   15180:	subcs	r0, r0, r1, lsl #3
   15184:	cmp	r0, r1, lsl #2
   15188:	adc	r2, r2, r2
   1518c:	subcs	r0, r0, r1, lsl #2
   15190:	cmp	r0, r1, lsl #1
   15194:	adc	r2, r2, r2
   15198:	subcs	r0, r0, r1, lsl #1
   1519c:	cmp	r0, r1
   151a0:	adc	r2, r2, r2
   151a4:	subcs	r0, r0, r1
   151a8:	mov	r0, r2
   151ac:	bx	lr
   151b0:	moveq	r0, #1
   151b4:	movne	r0, #0
   151b8:	bx	lr
   151bc:	clz	r2, r1
   151c0:	rsb	r2, r2, #31
   151c4:	lsr	r0, r0, r2
   151c8:	bx	lr
   151cc:	cmp	r0, #0
   151d0:	mvnne	r0, #0
   151d4:	b	14628 <g_strcmp0@plt+0x25a4>
   151d8:	cmp	r1, #0
   151dc:	beq	151cc <g_strcmp0@plt+0x3148>
   151e0:	push	{r0, r1, lr}
   151e4:	bl	14fec <g_strcmp0@plt+0x2f68>
   151e8:	pop	{r1, r2, lr}
   151ec:	mul	r3, r2, r0
   151f0:	sub	r1, r1, r3
   151f4:	bx	lr
   151f8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   151fc:	mov	r7, r0
   15200:	ldr	r6, [pc, #76]	; 15254 <g_strcmp0@plt+0x31d0>
   15204:	mov	r8, r1
   15208:	ldr	r5, [pc, #72]	; 15258 <g_strcmp0@plt+0x31d4>
   1520c:	mov	r9, r2
   15210:	add	r6, pc, r6
   15214:	bl	11b9c <_init@@Base>
   15218:	add	r5, pc, r5
   1521c:	rsb	r6, r5, r6
   15220:	asrs	r6, r6, #2
   15224:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   15228:	sub	r5, r5, #4
   1522c:	mov	r4, #0
   15230:	add	r4, r4, #1
   15234:	ldr	r3, [r5, #4]!
   15238:	mov	r0, r7
   1523c:	mov	r1, r8
   15240:	mov	r2, r9
   15244:	blx	r3
   15248:	cmp	r4, r6
   1524c:	bne	15230 <g_strcmp0@plt+0x31ac>
   15250:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15254:			; <UNDEFINED> instruction: 0x00011cb0
   15258:	andeq	r1, r1, r4, lsr #25
   1525c:	bx	lr

Disassembly of section .fini:

00015260 <_fini@@Base>:
   15260:	push	{r3, lr}
   15264:	pop	{r3, pc}
