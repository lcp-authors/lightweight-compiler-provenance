
centos-preinstalled/containers_check_frame_int:     file format elf32-littlearm


Disassembly of section .init:

00010924 <_init@@Base>:
   10924:	push	{r3, lr}
   10928:	bl	114ac <_start@@Base+0x3c>
   1092c:	pop	{r3, pc}

Disassembly of section .plt:

00010930 <strtol@plt-0x14>:
   10930:	push	{lr}		; (str lr, [sp, #-4]!)
   10934:	ldr	lr, [pc, #4]	; 10940 <_init@@Base+0x1c>
   10938:	add	lr, pc, lr
   1093c:	ldr	pc, [lr, #8]!
   10940:	andeq	r1, r1, r0, asr #13

00010944 <strtol@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1728]!	; 0x6c0

00010950 <free@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1720]!	; 0x6b8

0001095c <vc_container_log_set_verbosity@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1712]!	; 0x6b0

00010968 <__stack_chk_fail@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1704]!	; 0x6a8

00010974 <vc_container_open_reader@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1696]!	; 0x6a0

00010980 <malloc@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1688]!	; 0x698

0001098c <__libc_start_main@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1680]!	; 0x690

00010998 <__gmon_start__@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1672]!	; 0x688

000109a4 <memset@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1664]!	; 0x680

000109b0 <vc_container_read@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1656]!	; 0x678

000109bc <vc_container_metadata_id_to_string@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1648]!	; 0x670

000109c8 <vc_container_close@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1640]!	; 0x668

000109d4 <strrchr@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1632]!	; 0x660

000109e0 <vc_container_log@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1624]!	; 0x658

000109ec <vc_container_log_set_default_verbosity@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1616]!	; 0x650

000109f8 <abort@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1608]!	; 0x648

Disassembly of section .text:

00010a08 <main@@Base>:
   10a08:	ldr	r3, [pc, #1884]	; 1116c <main@@Base+0x764>
   10a0c:	ldr	r2, [pc, #1884]	; 11170 <main@@Base+0x768>
   10a10:	add	r3, pc, r3
   10a14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a18:	vpush	{d8-d9}
   10a1c:	sub	sp, sp, #156	; 0x9c
   10a20:	ldr	r2, [r3, r2]
   10a24:	mov	r7, r0
   10a28:	mov	r0, #262144	; 0x40000
   10a2c:	mov	r5, r1
   10a30:	ldr	r3, [r2]
   10a34:	str	r2, [sp, #48]	; 0x30
   10a38:	str	r3, [sp, #148]	; 0x94
   10a3c:	bl	10980 <malloc@plt>
   10a40:	cmp	r7, #1
   10a44:	mov	r6, r0
   10a48:	ble	10c78 <main@@Base+0x270>
   10a4c:	ldr	r9, [pc, #1824]	; 11174 <main@@Base+0x76c>
   10a50:	mov	r4, #1
   10a54:	ldr	r3, [pc, #1820]	; 11178 <main@@Base+0x770>
   10a58:	mov	sl, #3
   10a5c:	ldr	r8, [pc, #1816]	; 1117c <main@@Base+0x774>
   10a60:	add	r9, pc, r9
   10a64:	add	r3, pc, r3
   10a68:	mov	fp, #7
   10a6c:	add	r8, pc, r8
   10a70:	mov	ip, #15
   10a74:	b	10a84 <main@@Base+0x7c>
   10a78:	add	r4, r4, #1
   10a7c:	cmp	r7, r4
   10a80:	ble	10c78 <main@@Base+0x270>
   10a84:	ldr	r2, [r5, r4, lsl #2]
   10a88:	lsl	r0, r4, #2
   10a8c:	cmp	r2, #0
   10a90:	beq	10a78 <main@@Base+0x70>
   10a94:	ldrb	r1, [r2]
   10a98:	cmp	r1, #45	; 0x2d
   10a9c:	strne	r2, [r8]
   10aa0:	bne	10a78 <main@@Base+0x70>
   10aa4:	ldrb	r1, [r2, #1]
   10aa8:	cmp	r1, #104	; 0x68
   10aac:	beq	10ad8 <main@@Base+0xd0>
   10ab0:	cmp	r1, #118	; 0x76
   10ab4:	beq	10bcc <main@@Base+0x1c4>
   10ab8:	cmp	r1, #102	; 0x66
   10abc:	beq	10bf0 <main@@Base+0x1e8>
   10ac0:	mov	r3, r2
   10ac4:	ldr	r2, [pc, #1716]	; 11180 <main@@Base+0x778>
   10ac8:	mov	r0, #0
   10acc:	mov	r1, #1
   10ad0:	add	r2, pc, r2
   10ad4:	bl	109e0 <vc_container_log@plt>
   10ad8:	ldr	r4, [r5]
   10adc:	mov	r1, #92	; 0x5c
   10ae0:	mov	r0, r4
   10ae4:	bl	109d4 <strrchr@plt>
   10ae8:	cmp	r0, #0
   10aec:	beq	10c30 <main@@Base+0x228>
   10af0:	ldr	r2, [pc, #1676]	; 11184 <main@@Base+0x77c>
   10af4:	add	r3, r0, #1
   10af8:	cmp	r3, #0
   10afc:	add	r2, pc, r2
   10b00:	str	r3, [r2]
   10b04:	beq	10c3c <main@@Base+0x234>
   10b08:	ldr	r2, [pc, #1656]	; 11188 <main@@Base+0x780>
   10b0c:	mov	r0, #0
   10b10:	mov	r1, #2
   10b14:	add	r2, pc, r2
   10b18:	bl	109e0 <vc_container_log@plt>
   10b1c:	ldr	r3, [pc, #1640]	; 1118c <main@@Base+0x784>
   10b20:	ldr	r2, [pc, #1640]	; 11190 <main@@Base+0x788>
   10b24:	mov	r0, #0
   10b28:	add	r3, pc, r3
   10b2c:	mov	r1, #2
   10b30:	add	r2, pc, r2
   10b34:	ldr	r3, [r3]
   10b38:	bl	109e0 <vc_container_log@plt>
   10b3c:	ldr	r2, [pc, #1616]	; 11194 <main@@Base+0x78c>
   10b40:	mov	r0, #0
   10b44:	mov	r1, #2
   10b48:	add	r2, pc, r2
   10b4c:	bl	109e0 <vc_container_log@plt>
   10b50:	ldr	r2, [pc, #1600]	; 11198 <main@@Base+0x790>
   10b54:	mov	r0, #0
   10b58:	mov	r1, #2
   10b5c:	add	r2, pc, r2
   10b60:	bl	109e0 <vc_container_log@plt>
   10b64:	ldr	r2, [pc, #1584]	; 1119c <main@@Base+0x794>
   10b68:	mov	r0, #0
   10b6c:	mov	r1, #2
   10b70:	add	r2, pc, r2
   10b74:	bl	109e0 <vc_container_log@plt>
   10b78:	ldr	r2, [pc, #1568]	; 111a0 <main@@Base+0x798>
   10b7c:	mov	r0, #0
   10b80:	mov	r1, #2
   10b84:	add	r2, pc, r2
   10b88:	bl	109e0 <vc_container_log@plt>
   10b8c:	mov	r0, r6
   10b90:	bl	10950 <free@plt>
   10b94:	ldr	r2, [pc, #1544]	; 111a4 <main@@Base+0x79c>
   10b98:	mov	r0, #0
   10b9c:	mov	r1, #2
   10ba0:	add	r2, pc, r2
   10ba4:	bl	109e0 <vc_container_log@plt>
   10ba8:	mov	r0, #0
   10bac:	ldr	r7, [sp, #48]	; 0x30
   10bb0:	ldr	r2, [sp, #148]	; 0x94
   10bb4:	ldr	r3, [r7]
   10bb8:	cmp	r2, r3
   10bbc:	bne	1144c <main@@Base+0xa44>
   10bc0:	add	sp, sp, #156	; 0x9c
   10bc4:	vpop	{d8-d9}
   10bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bcc:	ldrb	r1, [r2, #2]
   10bd0:	str	sl, [r9]
   10bd4:	cmp	r1, #118	; 0x76
   10bd8:	bne	10a78 <main@@Base+0x70>
   10bdc:	ldrb	r2, [r2, #3]
   10be0:	str	fp, [r9]
   10be4:	cmp	r2, #118	; 0x76
   10be8:	streq	ip, [r9]
   10bec:	b	10a78 <main@@Base+0x70>
   10bf0:	add	r4, r4, #1
   10bf4:	cmp	r7, r4
   10bf8:	beq	10ac0 <main@@Base+0xb8>
   10bfc:	add	r0, r5, r0
   10c00:	ldr	r0, [r0, #4]
   10c04:	cmp	r0, #0
   10c08:	beq	10ac0 <main@@Base+0xb8>
   10c0c:	mov	r1, #0
   10c10:	str	r3, [sp, #36]	; 0x24
   10c14:	mov	r2, r1
   10c18:	str	ip, [sp, #40]	; 0x28
   10c1c:	bl	10944 <strtol@plt>
   10c20:	ldr	r3, [sp, #36]	; 0x24
   10c24:	ldr	ip, [sp, #40]	; 0x28
   10c28:	str	r0, [r3, #4]
   10c2c:	b	10a78 <main@@Base+0x70>
   10c30:	ldr	r3, [pc, #1392]	; 111a8 <main@@Base+0x7a0>
   10c34:	add	r3, pc, r3
   10c38:	str	r0, [r3]
   10c3c:	mov	r0, r4
   10c40:	mov	r1, #47	; 0x2f
   10c44:	bl	109d4 <strrchr@plt>
   10c48:	cmp	r0, #0
   10c4c:	beq	10c68 <main@@Base+0x260>
   10c50:	ldr	r2, [pc, #1364]	; 111ac <main@@Base+0x7a4>
   10c54:	add	r3, r0, #1
   10c58:	cmp	r3, #0
   10c5c:	add	r2, pc, r2
   10c60:	str	r3, [r2]
   10c64:	bne	10b08 <main@@Base+0x100>
   10c68:	ldr	r3, [pc, #1344]	; 111b0 <main@@Base+0x7a8>
   10c6c:	add	r3, pc, r3
   10c70:	str	r4, [r3]
   10c74:	b	10b08 <main@@Base+0x100>
   10c78:	ldr	r7, [pc, #1332]	; 111b4 <main@@Base+0x7ac>
   10c7c:	add	r7, pc, r7
   10c80:	ldr	r0, [r7]
   10c84:	cmp	r0, #0
   10c88:	beq	11438 <main@@Base+0xa30>
   10c8c:	ldr	r5, [pc, #1316]	; 111b8 <main@@Base+0x7b0>
   10c90:	mov	r3, #5
   10c94:	ldr	r2, [pc, #1312]	; 111bc <main@@Base+0x7b4>
   10c98:	mov	r0, #0
   10c9c:	add	r5, pc, r5
   10ca0:	str	r3, [sp]
   10ca4:	add	r2, pc, r2
   10ca8:	mov	r1, #2
   10cac:	ldr	r3, [r5, #4]
   10cb0:	bl	109e0 <vc_container_log@plt>
   10cb4:	ldr	r1, [r5]
   10cb8:	mov	r0, #0
   10cbc:	bl	1095c <vc_container_log_set_verbosity@plt>
   10cc0:	ldr	r0, [r5]
   10cc4:	bl	109ec <vc_container_log_set_default_verbosity@plt>
   10cc8:	mov	r2, #0
   10ccc:	mov	r3, r2
   10cd0:	ldr	r0, [r7]
   10cd4:	add	r1, sp, #76	; 0x4c
   10cd8:	bl	10974 <vc_container_open_reader@plt>
   10cdc:	subs	r4, r0, #0
   10ce0:	beq	11404 <main@@Base+0x9fc>
   10ce4:	ldr	r3, [r5]
   10ce8:	tst	r3, #4
   10cec:	bne	10f48 <main@@Base+0x540>
   10cf0:	ldr	r2, [pc, #1224]	; 111c0 <main@@Base+0x7b8>
   10cf4:	mov	r0, #0
   10cf8:	mov	r1, #2
   10cfc:	add	r2, pc, r2
   10d00:	bl	109e0 <vc_container_log@plt>
   10d04:	ldr	r0, [r4, #48]	; 0x30
   10d08:	cmp	r0, #0
   10d0c:	ldrne	r3, [r4, #52]	; 0x34
   10d10:	addne	r0, r3, r0, lsl #2
   10d14:	beq	10d3c <main@@Base+0x334>
   10d18:	ldr	r2, [r3], #4
   10d1c:	ldr	r1, [r2, #12]
   10d20:	ldr	r1, [r1]
   10d24:	subs	ip, r1, #2
   10d28:	rsbs	r1, ip, #0
   10d2c:	adcs	r1, r1, ip
   10d30:	cmp	r3, r0
   10d34:	str	r1, [r2, #4]
   10d38:	bne	10d18 <main@@Base+0x310>
   10d3c:	mov	ip, #0
   10d40:	str	ip, [sp, #56]	; 0x38
   10d44:	mov	r8, ip
   10d48:	str	ip, [sp, #52]	; 0x34
   10d4c:	mov	r7, ip
   10d50:	ldr	ip, [pc, #1132]	; 111c4 <main@@Base+0x7bc>
   10d54:	ldr	r9, [pc, #1132]	; 111c8 <main@@Base+0x7c0>
   10d58:	add	r5, sp, #80	; 0x50
   10d5c:	add	ip, pc, ip
   10d60:	str	ip, [sp, #68]	; 0x44
   10d64:	ldr	ip, [pc, #1120]	; 111cc <main@@Base+0x7c4>
   10d68:	add	r9, pc, r9
   10d6c:	mvn	sl, #0
   10d70:	str	r9, [sp, #60]	; 0x3c
   10d74:	add	ip, pc, ip
   10d78:	str	ip, [sp, #44]	; 0x2c
   10d7c:	ldr	ip, [pc, #1100]	; 111d0 <main@@Base+0x7c8>
   10d80:	mvn	fp, #0
   10d84:	mov	r9, r8
   10d88:	vldr	d8, [pc, #968]	; 11158 <main@@Base+0x750>
   10d8c:	add	ip, pc, ip
   10d90:	vldr	s18, [pc, #976]	; 11168 <main@@Base+0x760>
   10d94:	str	ip, [sp, #64]	; 0x40
   10d98:	mov	r1, #0
   10d9c:	mov	r2, #64	; 0x40
   10da0:	mov	r0, r5
   10da4:	bl	109a4 <memset@plt>
   10da8:	mov	r0, r4
   10dac:	mov	r1, r5
   10db0:	mov	r2, #1
   10db4:	bl	109b0 <vc_container_read@plt>
   10db8:	cmp	r0, #0
   10dbc:	str	r0, [sp, #76]	; 0x4c
   10dc0:	bne	112c4 <main@@Base+0x8bc>
   10dc4:	ldr	r1, [sp, #128]	; 0x80
   10dc8:	cmp	r1, #15
   10dcc:	lslhi	r1, r1, #6
   10dd0:	bhi	10df8 <main@@Base+0x3f0>
   10dd4:	ldr	r3, [sp, #132]	; 0x84
   10dd8:	lsl	r1, r1, #6
   10ddc:	tst	r3, #2
   10de0:	ldrne	ip, [sp, #68]	; 0x44
   10de4:	addne	r3, ip, r1
   10de8:	ldrne	ip, [r3, #12]
   10dec:	strne	r0, [r3, #32]
   10df0:	addne	ip, ip, #1
   10df4:	strne	ip, [r3, #12]
   10df8:	ldr	ip, [pc, #980]	; 111d4 <main@@Base+0x7cc>
   10dfc:	mvn	r2, #0
   10e00:	mvn	r3, #0
   10e04:	cmp	fp, r3
   10e08:	cmpeq	sl, r2
   10e0c:	add	ip, pc, ip
   10e10:	ldr	r0, [sp, #92]	; 0x5c
   10e14:	add	r1, ip, r1
   10e18:	ldrne	r2, [sp, #104]	; 0x68
   10e1c:	ldrdeq	sl, [sp, #104]	; 0x68
   10e20:	ldr	r3, [r1, #32]
   10e24:	ldrne	fp, [sp, #108]	; 0x6c
   10e28:	add	r0, r0, r3
   10e2c:	rsbne	r3, sl, r2
   10e30:	moveq	r3, #0
   10e34:	movne	sl, r2
   10e38:	cmp	r8, r3
   10e3c:	movlt	r8, r3
   10e40:	cmp	r7, #1
   10e44:	str	r0, [r1, #32]
   10e48:	bls	10e54 <main@@Base+0x44c>
   10e4c:	cmp	r9, r3
   10e50:	movlt	r9, r3
   10e54:	ldr	r2, [pc, #892]	; 111d8 <main@@Base+0x7d0>
   10e58:	add	r2, pc, r2
   10e5c:	ldr	r2, [r2, #4]
   10e60:	mul	r2, r2, r3
   10e64:	vmov	s12, r2
   10e68:	vcvt.f64.s32	d7, s12
   10e6c:	vcmpe.f64	d7, d8
   10e70:	vmrs	APSR_nzcv, fpscr
   10e74:	bgt	10f14 <main@@Base+0x50c>
   10e78:	mov	r3, #0
   10e7c:	mov	r0, r4
   10e80:	mov	r2, r3
   10e84:	mov	r1, r5
   10e88:	str	r3, [sp, #92]	; 0x5c
   10e8c:	mov	r3, #262144	; 0x40000
   10e90:	str	r6, [sp, #84]	; 0x54
   10e94:	str	r3, [sp, #88]	; 0x58
   10e98:	bl	109b0 <vc_container_read@plt>
   10e9c:	cmp	r0, #0
   10ea0:	str	r0, [sp, #76]	; 0x4c
   10ea4:	bne	112c4 <main@@Base+0x8bc>
   10ea8:	ldr	r0, [sp, #128]	; 0x80
   10eac:	ldr	r2, [sp, #44]	; 0x2c
   10eb0:	lsl	ip, r0, #6
   10eb4:	add	r1, r2, ip
   10eb8:	ldr	r3, [r1, #16]
   10ebc:	cmp	r3, #0
   10ec0:	ldrd	r2, [sp, #112]	; 0x70
   10ec4:	strdne	r2, [r1, #56]	; 0x38
   10ec8:	strdeq	r2, [r1, #40]	; 0x28
   10ecc:	ldrdne	r2, [sp, #104]	; 0x68
   10ed0:	ldrdeq	r2, [sp, #104]	; 0x68
   10ed4:	strdne	r2, [r1, #64]	; 0x40
   10ed8:	strdeq	r2, [r1, #48]	; 0x30
   10edc:	cmp	r0, #15
   10ee0:	bhi	10f0c <main@@Base+0x504>
   10ee4:	ldr	r3, [sp, #64]	; 0x40
   10ee8:	ldr	r1, [sp, #92]	; 0x5c
   10eec:	add	ip, r3, ip
   10ef0:	ldrd	r2, [ip, #24]
   10ef4:	ldr	r0, [ip, #16]
   10ef8:	adds	r2, r2, r1
   10efc:	add	r0, r0, #1
   10f00:	adc	r3, r3, #0
   10f04:	str	r0, [ip, #16]
   10f08:	strd	r2, [ip, #24]
   10f0c:	add	r7, r7, #1
   10f10:	b	10d98 <main@@Base+0x390>
   10f14:	vmov	s13, r3
   10f18:	mov	r0, #0
   10f1c:	mov	r1, #2
   10f20:	ldr	r2, [sp, #60]	; 0x3c
   10f24:	vcvt.f32.s32	s14, s13
   10f28:	mov	r3, r7
   10f2c:	mov	ip, #1
   10f30:	str	ip, [sp, #56]	; 0x38
   10f34:	vdiv.f32	s14, s14, s18
   10f38:	vcvt.f64.f32	d7, s14
   10f3c:	vstr	d7, [sp]
   10f40:	bl	109e0 <vc_container_log@plt>
   10f44:	b	10e78 <main@@Base+0x470>
   10f48:	ldr	r5, [pc, #652]	; 111dc <main@@Base+0x7d4>
   10f4c:	mov	r0, #0
   10f50:	mov	r1, #2
   10f54:	ldr	r7, [pc, #644]	; 111e0 <main@@Base+0x7d8>
   10f58:	add	r5, pc, r5
   10f5c:	add	r7, pc, r7
   10f60:	mov	r2, r5
   10f64:	bl	109e0 <vc_container_log@plt>
   10f68:	ldr	r2, [pc, #628]	; 111e4 <main@@Base+0x7dc>
   10f6c:	mov	r0, #0
   10f70:	mov	r1, #2
   10f74:	add	r2, pc, r2
   10f78:	bl	109e0 <vc_container_log@plt>
   10f7c:	ldrd	r0, [r4, #24]
   10f80:	bl	118fc <_start@@Base+0x48c>
   10f84:	vldr	d7, [pc, #468]	; 11160 <main@@Base+0x758>
   10f88:	mov	r2, r7
   10f8c:	vmov	d6, r0, r1
   10f90:	mov	r0, #0
   10f94:	mov	r1, #2
   10f98:	vdiv.f64	d7, d6, d7
   10f9c:	vstr	d7, [sp]
   10fa0:	ldrd	r8, [r4, #40]	; 0x28
   10fa4:	strd	r8, [sp, #8]
   10fa8:	bl	109e0 <vc_container_log@plt>
   10fac:	ldr	r2, [pc, #564]	; 111e8 <main@@Base+0x7e0>
   10fb0:	mov	r0, #0
   10fb4:	mov	r1, #2
   10fb8:	add	r2, pc, r2
   10fbc:	ldr	r3, [r4, #8]
   10fc0:	bl	109e0 <vc_container_log@plt>
   10fc4:	mov	r2, r5
   10fc8:	mov	r0, #0
   10fcc:	mov	r1, #2
   10fd0:	bl	109e0 <vc_container_log@plt>
   10fd4:	ldr	r2, [r4, #48]	; 0x30
   10fd8:	cmp	r2, #0
   10fdc:	beq	110c4 <main@@Base+0x6bc>
   10fe0:	ldr	fp, [pc, #516]	; 111ec <main@@Base+0x7e4>
   10fe4:	mov	r5, #0
   10fe8:	ldr	sl, [pc, #512]	; 111f0 <main@@Base+0x7e8>
   10fec:	ldr	r9, [pc, #512]	; 111f4 <main@@Base+0x7ec>
   10ff0:	add	fp, pc, fp
   10ff4:	ldr	r7, [pc, #508]	; 111f8 <main@@Base+0x7f0>
   10ff8:	add	sl, pc, sl
   10ffc:	ldr	ip, [pc, #504]	; 111fc <main@@Base+0x7f4>
   11000:	add	r9, pc, r9
   11004:	add	r7, pc, r7
   11008:	str	r7, [sp, #44]	; 0x2c
   1100c:	ldr	r7, [pc, #492]	; 11200 <main@@Base+0x7f8>
   11010:	add	ip, pc, ip
   11014:	str	ip, [sp, #56]	; 0x38
   11018:	add	r7, pc, r7
   1101c:	str	r7, [sp, #52]	; 0x34
   11020:	ldr	r3, [r4, #52]	; 0x34
   11024:	ldr	r7, [r3, r5, lsl #2]
   11028:	ldr	r3, [r7, #12]
   1102c:	ldr	r8, [r3]
   11030:	cmp	r8, #2
   11034:	bne	110b8 <main@@Base+0x6b0>
   11038:	mov	r1, r8
   1103c:	add	r3, r3, #4
   11040:	mov	r0, #0
   11044:	str	r3, [sp, #4]
   11048:	mov	r2, fp
   1104c:	mov	r3, r5
   11050:	str	sl, [sp]
   11054:	bl	109e0 <vc_container_log@plt>
   11058:	ldr	r3, [r7, #12]
   1105c:	mov	r1, r8
   11060:	mov	r0, #0
   11064:	mov	r2, r9
   11068:	ldr	lr, [r3, #28]
   1106c:	and	lr, lr, #1
   11070:	str	lr, [sp]
   11074:	ldr	lr, [r7, #4]
   11078:	str	lr, [sp, #4]
   1107c:	ldr	r3, [r3, #16]
   11080:	bl	109e0 <vc_container_log@plt>
   11084:	ldr	r3, [r7, #12]
   11088:	mov	r1, r8
   1108c:	mov	r0, #0
   11090:	ldr	r2, [sp, #44]	; 0x2c
   11094:	ldr	lr, [r3, #36]	; 0x24
   11098:	str	lr, [sp]
   1109c:	ldr	r3, [r3, #32]
   110a0:	bl	109e0 <vc_container_log@plt>
   110a4:	ldr	r3, [r7, #12]
   110a8:	ldr	r8, [r3]
   110ac:	cmp	r8, #2
   110b0:	beq	1124c <main@@Base+0x844>
   110b4:	ldr	r2, [r4, #48]	; 0x30
   110b8:	add	r5, r5, #1
   110bc:	cmp	r5, r2
   110c0:	bcc	11020 <main@@Base+0x618>
   110c4:	ldr	r3, [r4, #56]	; 0x38
   110c8:	cmp	r3, #0
   110cc:	beq	11220 <main@@Base+0x818>
   110d0:	ldr	r8, [pc, #300]	; 11204 <main@@Base+0x7fc>
   110d4:	mov	r5, #0
   110d8:	ldr	r7, [pc, #296]	; 11208 <main@@Base+0x800>
   110dc:	add	r8, pc, r8
   110e0:	add	r7, pc, r7
   110e4:	b	11138 <main@@Base+0x730>
   110e8:	ldr	r3, [r4, #60]	; 0x3c
   110ec:	ldr	r3, [r3, r5, lsl #2]
   110f0:	ldr	r0, [r3]
   110f4:	bl	109bc <vc_container_metadata_id_to_string@plt>
   110f8:	ldr	r3, [r4, #60]	; 0x3c
   110fc:	ldr	r3, [r3, r5, lsl #2]
   11100:	ldr	r3, [r3, #12]
   11104:	cmp	r0, #0
   11108:	beq	11128 <main@@Base+0x720>
   1110c:	str	r0, [sp]
   11110:	mov	r1, #2
   11114:	str	r3, [sp, #4]
   11118:	mov	r0, #0
   1111c:	mov	r2, r7
   11120:	mov	r3, r5
   11124:	bl	109e0 <vc_container_log@plt>
   11128:	ldr	r3, [r4, #56]	; 0x38
   1112c:	add	r5, r5, #1
   11130:	cmp	r5, r3
   11134:	bcs	11220 <main@@Base+0x818>
   11138:	cmp	r5, #0
   1113c:	bne	110e8 <main@@Base+0x6e0>
   11140:	mov	r0, r5
   11144:	mov	r1, #2
   11148:	mov	r2, r8
   1114c:	bl	109e0 <vc_container_log@plt>
   11150:	b	110e8 <main@@Base+0x6e0>
   11154:	nop	{0}
   11158:	andeq	r0, r0, r0
   1115c:	teqmi	r0, r0	; <illegal shifter operand>
   11160:	andeq	r0, r0, r0
   11164:	smlawbmi	lr, r0, r4, r8
   11168:	ldrbtmi	r0, [sl], #-0
   1116c:	andeq	r1, r1, r8, ror #11
   11170:	andeq	r0, r0, ip, asr #32
   11174:	strdeq	r1, [r1], -r0
   11178:	andeq	r1, r1, ip, ror #11
   1117c:	strdeq	r1, [r1], -r4
   11180:	andeq	r0, r0, r4, lsl pc
   11184:	andeq	r1, r1, r4, ror #10
   11188:	andeq	r0, r0, r8, lsr #31
   1118c:	andeq	r1, r1, r8, lsr r5
   11190:	ldrdeq	r0, [r0], -r8
   11194:	ldrdeq	r0, [r0], -r8
   11198:	ldrdeq	r0, [r0], -r4
   1119c:	andeq	r0, r0, r4, lsl #30
   111a0:	andeq	r0, r0, ip, lsr pc
   111a4:	andeq	r1, r0, ip, ror r1
   111a8:	andeq	r1, r1, ip, lsr #8
   111ac:	andeq	r1, r1, r4, lsl #8
   111b0:	strdeq	r1, [r1], -r4
   111b4:	andeq	r1, r1, r4, ror #7
   111b8:			; <UNDEFINED> instruction: 0x000113b4
   111bc:	andeq	r1, r0, r4, lsl #1
   111c0:	andeq	r0, r0, r0, ror #29
   111c4:	andeq	r1, r1, r4, lsl #6
   111c8:	muleq	r0, r0, lr
   111cc:	andeq	r1, r1, ip, ror #5
   111d0:	ldrdeq	r1, [r1], -r4
   111d4:	andeq	r1, r1, r4, asr r2
   111d8:	strdeq	r1, [r1], -r8
   111dc:	andeq	r0, r0, r4, ror #22
   111e0:	andeq	r0, r0, r0, asr #23
   111e4:	andeq	r0, r0, ip, lsl #23
   111e8:	andeq	r0, r0, r4, lsl #23
   111ec:	andeq	r0, r0, r0, lsl #27
   111f0:	muleq	r0, ip, sp
   111f4:	muleq	r0, ip, sp
   111f8:	andeq	r0, r0, r0, asr #27
   111fc:	andeq	r0, r0, r0, asr #22
   11200:	andeq	r0, r0, r0, ror #22
   11204:	andeq	r0, r0, r0, ror #19
   11208:	andeq	r0, r0, r4, ror #21
   1120c:	andeq	r0, r0, ip, ror r9
   11210:	andeq	r0, r0, ip, ror r8
   11214:	andeq	r0, r1, ip, ror sp
   11218:			; <UNDEFINED> instruction: 0x000009b4
   1121c:	andeq	r0, r0, r8, ror #18
   11220:	ldr	r2, [pc, #-28]	; 1120c <main@@Base+0x804>
   11224:	mov	r0, #0
   11228:	mov	r1, #2
   1122c:	add	r2, pc, r2
   11230:	bl	109e0 <vc_container_log@plt>
   11234:	ldr	r2, [pc, #-44]	; 11210 <main@@Base+0x808>
   11238:	mov	r0, #0
   1123c:	mov	r1, #2
   11240:	add	r2, pc, r2
   11244:	bl	109e0 <vc_container_log@plt>
   11248:	b	10cf0 <main@@Base+0x2e8>
   1124c:	ldr	r3, [r3, #12]
   11250:	mov	r1, r8
   11254:	ldr	r2, [sp, #56]	; 0x38
   11258:	mov	r0, #0
   1125c:	ldr	lr, [r3, #4]
   11260:	str	lr, [sp]
   11264:	ldr	lr, [r3, #16]
   11268:	str	lr, [sp, #4]
   1126c:	ldr	lr, [r3, #20]
   11270:	str	lr, [sp, #8]
   11274:	ldr	lr, [r3, #8]
   11278:	str	lr, [sp, #12]
   1127c:	ldr	lr, [r3, #12]
   11280:	str	lr, [sp, #16]
   11284:	ldr	r3, [r3]
   11288:	bl	109e0 <vc_container_log@plt>
   1128c:	ldr	r3, [r7, #12]
   11290:	mov	r1, r8
   11294:	mov	r0, #0
   11298:	ldr	r2, [sp, #52]	; 0x34
   1129c:	ldr	r3, [r3, #12]
   112a0:	ldr	lr, [r3, #36]	; 0x24
   112a4:	str	lr, [sp]
   112a8:	ldr	lr, [r3, #24]
   112ac:	str	lr, [sp, #4]
   112b0:	ldr	lr, [r3, #28]
   112b4:	str	lr, [sp, #8]
   112b8:	ldr	r3, [r3, #32]
   112bc:	bl	109e0 <vc_container_log@plt>
   112c0:	b	110b4 <main@@Base+0x6ac>
   112c4:	ldr	r3, [r4, #48]	; 0x30
   112c8:	str	r9, [sp, #52]	; 0x34
   112cc:	cmp	r3, #0
   112d0:	beq	1137c <main@@Base+0x974>
   112d4:	ldr	r5, [pc, #-200]	; 11214 <main@@Base+0x80c>
   112d8:	mov	sl, r4
   112dc:	ldr	r7, [pc, #-204]	; 11218 <main@@Base+0x810>
   112e0:	mov	r9, #0
   112e4:	add	r5, pc, r5
   112e8:	ldr	fp, [pc, #-212]	; 1121c <main@@Base+0x814>
   112ec:	add	r7, pc, r7
   112f0:	add	r5, r5, #12
   112f4:	add	fp, pc, fp
   112f8:	str	r6, [sp, #44]	; 0x2c
   112fc:	mov	r4, r7
   11300:	str	fp, [sp, #60]	; 0x3c
   11304:	ldr	r3, [r5]
   11308:	mov	r0, #0
   1130c:	mov	r1, #2
   11310:	ldr	r2, [sp, #60]	; 0x3c
   11314:	add	r5, r5, #64	; 0x40
   11318:	str	r3, [sp]
   1131c:	mov	r3, r9
   11320:	ldr	lr, [r5, #-60]	; 0xffffffc4
   11324:	add	r9, r9, #1
   11328:	str	lr, [sp, #4]
   1132c:	ldrd	r6, [r5, #-52]	; 0xffffffcc
   11330:	strd	r6, [sp, #8]
   11334:	bl	109e0 <vc_container_log@plt>
   11338:	ldrd	r6, [r5, #-28]	; 0xffffffe4
   1133c:	mov	r0, #0
   11340:	mov	r1, #2
   11344:	mov	r2, r4
   11348:	strd	r6, [sp]
   1134c:	ldrd	r6, [r5, #-36]	; 0xffffffdc
   11350:	strd	r6, [sp, #8]
   11354:	ldrd	r6, [r5, #-12]
   11358:	strd	r6, [sp, #16]
   1135c:	ldrd	r6, [r5, #-20]	; 0xffffffec
   11360:	strd	r6, [sp, #24]
   11364:	bl	109e0 <vc_container_log@plt>
   11368:	ldr	r3, [sl, #48]	; 0x30
   1136c:	cmp	r3, r9
   11370:	bhi	11304 <main@@Base+0x8fc>
   11374:	ldr	r6, [sp, #44]	; 0x2c
   11378:	mov	r4, sl
   1137c:	vmov	s12, r8
   11380:	vldr	s13, [sp, #52]	; 0x34
   11384:	vcvt.f32.s32	s10, s13
   11388:	vldr	d7, [pc, #192]	; 11450 <main@@Base+0xa48>
   1138c:	ldr	r2, [pc, #200]	; 1145c <main@@Base+0xa54>
   11390:	mov	r1, #2
   11394:	mov	r0, #0
   11398:	add	r2, pc, r2
   1139c:	vcvt.f32.s32	s16, s12
   113a0:	vcvt.f64.f32	d5, s10
   113a4:	vcvt.f64.f32	d6, s16
   113a8:	vdiv.f64	d6, d6, d7
   113ac:	vdiv.f64	d7, d5, d7
   113b0:	vstr	d6, [sp]
   113b4:	vstr	d7, [sp, #8]
   113b8:	bl	109e0 <vc_container_log@plt>
   113bc:	mov	r0, r4
   113c0:	bl	109c8 <vc_container_close@plt>
   113c4:	mov	r0, r6
   113c8:	bl	10950 <free@plt>
   113cc:	ldr	r6, [sp, #56]	; 0x38
   113d0:	cmp	r6, #0
   113d4:	beq	10b94 <main@@Base+0x18c>
   113d8:	vldr	s14, [pc, #120]	; 11458 <main@@Base+0xa50>
   113dc:	vdiv.f32	s14, s16, s14
   113e0:	ldr	r2, [pc, #120]	; 11460 <main@@Base+0xa58>
   113e4:	mov	r0, #0
   113e8:	mov	r1, #2
   113ec:	add	r2, pc, r2
   113f0:	vcvt.f64.f32	d7, s14
   113f4:	vstr	d7, [sp]
   113f8:	bl	109e0 <vc_container_log@plt>
   113fc:	mov	r0, #1
   11400:	b	10bac <main@@Base+0x1a4>
   11404:	ldr	ip, [sp, #76]	; 0x4c
   11408:	mov	r1, #1
   1140c:	ldr	r2, [pc, #80]	; 11464 <main@@Base+0xa5c>
   11410:	ldr	r3, [r7]
   11414:	add	r2, pc, r2
   11418:	str	ip, [sp]
   1141c:	bl	109e0 <vc_container_log@plt>
   11420:	ldr	r2, [pc, #64]	; 11468 <main@@Base+0xa60>
   11424:	mov	r0, r4
   11428:	mov	r1, #1
   1142c:	add	r2, pc, r2
   11430:	bl	109e0 <vc_container_log@plt>
   11434:	b	10b8c <main@@Base+0x184>
   11438:	ldr	r2, [pc, #44]	; 1146c <main@@Base+0xa64>
   1143c:	mov	r1, #1
   11440:	add	r2, pc, r2
   11444:	bl	109e0 <vc_container_log@plt>
   11448:	b	10ad8 <main@@Base+0xd0>
   1144c:	bl	10968 <__stack_chk_fail@plt>
   11450:	andeq	r0, r0, r0
   11454:	addmi	r4, pc, r0
   11458:	ldrbtmi	r0, [sl], #-0
   1145c:	andeq	r0, r0, r0, lsl #17
   11460:	andeq	r0, r0, r0, lsl #18
   11464:			; <UNDEFINED> instruction: 0x000006bc
   11468:	andeq	r0, r0, r0, asr #13
   1146c:	andeq	r0, r0, ip, lsl #11

00011470 <_start@@Base>:
   11470:	mov	fp, #0
   11474:	mov	lr, #0
   11478:	pop	{r1}		; (ldr r1, [sp], #4)
   1147c:	mov	r2, sp
   11480:	push	{r2}		; (str r2, [sp, #-4]!)
   11484:	push	{r0}		; (str r0, [sp, #-4]!)
   11488:	ldr	ip, [pc, #16]	; 114a0 <_start@@Base+0x30>
   1148c:	push	{ip}		; (str ip, [sp, #-4]!)
   11490:	ldr	r0, [pc, #12]	; 114a4 <_start@@Base+0x34>
   11494:	ldr	r3, [pc, #12]	; 114a8 <_start@@Base+0x38>
   11498:	bl	1098c <__libc_start_main@plt>
   1149c:	bl	109f8 <abort@plt>
   114a0:	andeq	r1, r1, r0, asr #19
   114a4:	andeq	r0, r1, r8, lsl #20
   114a8:	andeq	r1, r1, ip, asr r9
   114ac:	ldr	r3, [pc, #20]	; 114c8 <_start@@Base+0x58>
   114b0:	ldr	r2, [pc, #20]	; 114cc <_start@@Base+0x5c>
   114b4:	add	r3, pc, r3
   114b8:	ldr	r2, [r3, r2]
   114bc:	cmp	r2, #0
   114c0:	bxeq	lr
   114c4:	b	10998 <__gmon_start__@plt>
   114c8:	andeq	r0, r1, r4, asr #22
   114cc:	andeq	r0, r0, r0, asr r0
   114d0:	push	{r3, lr}
   114d4:	movw	r0, #8288	; 0x2060
   114d8:	ldr	r3, [pc, #36]	; 11504 <_start@@Base+0x94>
   114dc:	movt	r0, #2
   114e0:	rsb	r3, r0, r3
   114e4:	cmp	r3, #6
   114e8:	popls	{r3, pc}
   114ec:	movw	r3, #0
   114f0:	movt	r3, #0
   114f4:	cmp	r3, #0
   114f8:	popeq	{r3, pc}
   114fc:	blx	r3
   11500:	pop	{r3, pc}
   11504:	andeq	r2, r2, r3, rrx
   11508:	push	{r3, lr}
   1150c:	movw	r0, #8288	; 0x2060
   11510:	movw	r3, #8288	; 0x2060
   11514:	movt	r0, #2
   11518:	movt	r3, #2
   1151c:	rsb	r3, r0, r3
   11520:	asr	r3, r3, #2
   11524:	add	r3, r3, r3, lsr #31
   11528:	asrs	r1, r3, #1
   1152c:	popeq	{r3, pc}
   11530:	movw	r2, #0
   11534:	movt	r2, #0
   11538:	cmp	r2, #0
   1153c:	popeq	{r3, pc}
   11540:	blx	r2
   11544:	pop	{r3, pc}
   11548:	push	{r4, lr}
   1154c:	movw	r4, #8288	; 0x2060
   11550:	movt	r4, #2
   11554:	ldrb	r3, [r4]
   11558:	cmp	r3, #0
   1155c:	popne	{r4, pc}
   11560:	bl	114d0 <_start@@Base+0x60>
   11564:	mov	r3, #1
   11568:	strb	r3, [r4]
   1156c:	pop	{r4, pc}
   11570:	movw	r0, #7892	; 0x1ed4
   11574:	movt	r0, #2
   11578:	push	{r3, lr}
   1157c:	ldr	r3, [r0]
   11580:	cmp	r3, #0
   11584:	beq	1159c <_start@@Base+0x12c>
   11588:	movw	r3, #0
   1158c:	movt	r3, #0
   11590:	cmp	r3, #0
   11594:	beq	1159c <_start@@Base+0x12c>
   11598:	blx	r3
   1159c:	pop	{r3, lr}
   115a0:	b	11508 <_start@@Base+0x98>
   115a4:	eor	r1, r1, #-2147483648	; 0x80000000
   115a8:	b	115b0 <_start@@Base+0x140>
   115ac:	eor	r3, r3, #-2147483648	; 0x80000000
   115b0:	push	{r4, r5, lr}
   115b4:	lsl	r4, r1, #1
   115b8:	lsl	r5, r3, #1
   115bc:	teq	r4, r5
   115c0:	teqeq	r0, r2
   115c4:	orrsne	ip, r4, r0
   115c8:	orrsne	ip, r5, r2
   115cc:	mvnsne	ip, r4, asr #21
   115d0:	mvnsne	ip, r5, asr #21
   115d4:	beq	117c0 <_start@@Base+0x350>
   115d8:	lsr	r4, r4, #21
   115dc:	rsbs	r5, r4, r5, lsr #21
   115e0:	rsblt	r5, r5, #0
   115e4:	ble	11604 <_start@@Base+0x194>
   115e8:	add	r4, r4, r5
   115ec:	eor	r2, r0, r2
   115f0:	eor	r3, r1, r3
   115f4:	eor	r0, r2, r0
   115f8:	eor	r1, r3, r1
   115fc:	eor	r2, r0, r2
   11600:	eor	r3, r1, r3
   11604:	cmp	r5, #54	; 0x36
   11608:	pophi	{r4, r5, pc}
   1160c:	tst	r1, #-2147483648	; 0x80000000
   11610:	lsl	r1, r1, #12
   11614:	mov	ip, #1048576	; 0x100000
   11618:	orr	r1, ip, r1, lsr #12
   1161c:	beq	11628 <_start@@Base+0x1b8>
   11620:	rsbs	r0, r0, #0
   11624:	rsc	r1, r1, #0
   11628:	tst	r3, #-2147483648	; 0x80000000
   1162c:	lsl	r3, r3, #12
   11630:	orr	r3, ip, r3, lsr #12
   11634:	beq	11640 <_start@@Base+0x1d0>
   11638:	rsbs	r2, r2, #0
   1163c:	rsc	r3, r3, #0
   11640:	teq	r4, r5
   11644:	beq	117a8 <_start@@Base+0x338>
   11648:	sub	r4, r4, #1
   1164c:	rsbs	lr, r5, #32
   11650:	blt	1166c <_start@@Base+0x1fc>
   11654:	lsl	ip, r2, lr
   11658:	adds	r0, r0, r2, lsr r5
   1165c:	adc	r1, r1, #0
   11660:	adds	r0, r0, r3, lsl lr
   11664:	adcs	r1, r1, r3, asr r5
   11668:	b	11688 <_start@@Base+0x218>
   1166c:	sub	r5, r5, #32
   11670:	add	lr, lr, #32
   11674:	cmp	r2, #1
   11678:	lsl	ip, r3, lr
   1167c:	orrcs	ip, ip, #2
   11680:	adds	r0, r0, r3, asr r5
   11684:	adcs	r1, r1, r3, asr #31
   11688:	and	r5, r1, #-2147483648	; 0x80000000
   1168c:	bpl	1169c <_start@@Base+0x22c>
   11690:	rsbs	ip, ip, #0
   11694:	rscs	r0, r0, #0
   11698:	rsc	r1, r1, #0
   1169c:	cmp	r1, #1048576	; 0x100000
   116a0:	bcc	116e0 <_start@@Base+0x270>
   116a4:	cmp	r1, #2097152	; 0x200000
   116a8:	bcc	116c8 <_start@@Base+0x258>
   116ac:	lsrs	r1, r1, #1
   116b0:	rrxs	r0, r0
   116b4:	rrx	ip, ip
   116b8:	add	r4, r4, #1
   116bc:	lsl	r2, r4, #21
   116c0:	cmn	r2, #4194304	; 0x400000
   116c4:	bcs	11820 <_start@@Base+0x3b0>
   116c8:	cmp	ip, #-2147483648	; 0x80000000
   116cc:	lsrseq	ip, r0, #1
   116d0:	adcs	r0, r0, #0
   116d4:	adc	r1, r1, r4, lsl #20
   116d8:	orr	r1, r1, r5
   116dc:	pop	{r4, r5, pc}
   116e0:	lsls	ip, ip, #1
   116e4:	adcs	r0, r0, r0
   116e8:	adc	r1, r1, r1
   116ec:	tst	r1, #1048576	; 0x100000
   116f0:	sub	r4, r4, #1
   116f4:	bne	116c8 <_start@@Base+0x258>
   116f8:	teq	r1, #0
   116fc:	moveq	r1, r0
   11700:	moveq	r0, #0
   11704:	clz	r3, r1
   11708:	addeq	r3, r3, #32
   1170c:	sub	r3, r3, #11
   11710:	subs	r2, r3, #32
   11714:	bge	11738 <_start@@Base+0x2c8>
   11718:	adds	r2, r2, #12
   1171c:	ble	11734 <_start@@Base+0x2c4>
   11720:	add	ip, r2, #20
   11724:	rsb	r2, r2, #12
   11728:	lsl	r0, r1, ip
   1172c:	lsr	r1, r1, r2
   11730:	b	11748 <_start@@Base+0x2d8>
   11734:	add	r2, r2, #20
   11738:	rsble	ip, r2, #32
   1173c:	lsl	r1, r1, r2
   11740:	orrle	r1, r1, r0, lsr ip
   11744:	lslle	r0, r0, r2
   11748:	subs	r4, r4, r3
   1174c:	addge	r1, r1, r4, lsl #20
   11750:	orrge	r1, r1, r5
   11754:	popge	{r4, r5, pc}
   11758:	mvn	r4, r4
   1175c:	subs	r4, r4, #31
   11760:	bge	1179c <_start@@Base+0x32c>
   11764:	adds	r4, r4, #12
   11768:	bgt	11784 <_start@@Base+0x314>
   1176c:	add	r4, r4, #20
   11770:	rsb	r2, r4, #32
   11774:	lsr	r0, r0, r4
   11778:	orr	r0, r0, r1, lsl r2
   1177c:	orr	r1, r5, r1, lsr r4
   11780:	pop	{r4, r5, pc}
   11784:	rsb	r4, r4, #12
   11788:	rsb	r2, r4, #32
   1178c:	lsr	r0, r0, r2
   11790:	orr	r0, r0, r1, lsl r4
   11794:	mov	r1, r5
   11798:	pop	{r4, r5, pc}
   1179c:	lsr	r0, r1, r4
   117a0:	mov	r1, r5
   117a4:	pop	{r4, r5, pc}
   117a8:	teq	r4, #0
   117ac:	eor	r3, r3, #1048576	; 0x100000
   117b0:	eoreq	r1, r1, #1048576	; 0x100000
   117b4:	addeq	r4, r4, #1
   117b8:	subne	r5, r5, #1
   117bc:	b	11648 <_start@@Base+0x1d8>
   117c0:	mvns	ip, r4, asr #21
   117c4:	mvnsne	ip, r5, asr #21
   117c8:	beq	11830 <_start@@Base+0x3c0>
   117cc:	teq	r4, r5
   117d0:	teqeq	r0, r2
   117d4:	beq	117e8 <_start@@Base+0x378>
   117d8:	orrs	ip, r4, r0
   117dc:	moveq	r1, r3
   117e0:	moveq	r0, r2
   117e4:	pop	{r4, r5, pc}
   117e8:	teq	r1, r3
   117ec:	movne	r1, #0
   117f0:	movne	r0, #0
   117f4:	popne	{r4, r5, pc}
   117f8:	lsrs	ip, r4, #21
   117fc:	bne	11810 <_start@@Base+0x3a0>
   11800:	lsls	r0, r0, #1
   11804:	adcs	r1, r1, r1
   11808:	orrcs	r1, r1, #-2147483648	; 0x80000000
   1180c:	pop	{r4, r5, pc}
   11810:	adds	r4, r4, #4194304	; 0x400000
   11814:	addcc	r1, r1, #1048576	; 0x100000
   11818:	popcc	{r4, r5, pc}
   1181c:	and	r5, r1, #-2147483648	; 0x80000000
   11820:	orr	r1, r5, #2130706432	; 0x7f000000
   11824:	orr	r1, r1, #15728640	; 0xf00000
   11828:	mov	r0, #0
   1182c:	pop	{r4, r5, pc}
   11830:	mvns	ip, r4, asr #21
   11834:	movne	r1, r3
   11838:	movne	r0, r2
   1183c:	mvnseq	ip, r5, asr #21
   11840:	movne	r3, r1
   11844:	movne	r2, r0
   11848:	orrs	r4, r0, r1, lsl #12
   1184c:	orrseq	r5, r2, r3, lsl #12
   11850:	teqeq	r1, r3
   11854:	orrne	r1, r1, #524288	; 0x80000
   11858:	pop	{r4, r5, pc}
   1185c:	teq	r0, #0
   11860:	moveq	r1, #0
   11864:	bxeq	lr
   11868:	push	{r4, r5, lr}
   1186c:	mov	r4, #1024	; 0x400
   11870:	add	r4, r4, #50	; 0x32
   11874:	mov	r5, #0
   11878:	mov	r1, #0
   1187c:	b	116f8 <_start@@Base+0x288>
   11880:	teq	r0, #0
   11884:	moveq	r1, #0
   11888:	bxeq	lr
   1188c:	push	{r4, r5, lr}
   11890:	mov	r4, #1024	; 0x400
   11894:	add	r4, r4, #50	; 0x32
   11898:	ands	r5, r0, #-2147483648	; 0x80000000
   1189c:	rsbmi	r0, r0, #0
   118a0:	mov	r1, #0
   118a4:	b	116f8 <_start@@Base+0x288>
   118a8:	lsls	r2, r0, #1
   118ac:	asr	r1, r2, #3
   118b0:	rrx	r1, r1
   118b4:	lsl	r0, r2, #28
   118b8:	andsne	r3, r2, #-16777216	; 0xff000000
   118bc:	teqne	r3, #-16777216	; 0xff000000
   118c0:	eorne	r1, r1, #939524096	; 0x38000000
   118c4:	bxne	lr
   118c8:	teq	r2, #0
   118cc:	teqne	r3, #-16777216	; 0xff000000
   118d0:	bxeq	lr
   118d4:	push	{r4, r5, lr}
   118d8:	mov	r4, #896	; 0x380
   118dc:	and	r5, r1, #-2147483648	; 0x80000000
   118e0:	bic	r1, r1, #-2147483648	; 0x80000000
   118e4:	b	116f8 <_start@@Base+0x288>
   118e8:	orrs	r2, r0, r1
   118ec:	bxeq	lr
   118f0:	push	{r4, r5, lr}
   118f4:	mov	r5, #0
   118f8:	b	11918 <_start@@Base+0x4a8>
   118fc:	orrs	r2, r0, r1
   11900:	bxeq	lr
   11904:	push	{r4, r5, lr}
   11908:	ands	r5, r1, #-2147483648	; 0x80000000
   1190c:	bpl	11918 <_start@@Base+0x4a8>
   11910:	rsbs	r0, r0, #0
   11914:	rsc	r1, r1, #0
   11918:	mov	r4, #1024	; 0x400
   1191c:	add	r4, r4, #50	; 0x32
   11920:	lsrs	ip, r1, #22
   11924:	beq	1169c <_start@@Base+0x22c>
   11928:	mov	r2, #3
   1192c:	lsrs	ip, ip, #3
   11930:	addne	r2, r2, #3
   11934:	lsrs	ip, ip, #3
   11938:	addne	r2, r2, #3
   1193c:	add	r2, r2, ip, lsr #3
   11940:	rsb	r3, r2, #32
   11944:	lsl	ip, r0, r3
   11948:	lsr	r0, r0, r2
   1194c:	orr	r0, r0, r1, lsl r3
   11950:	lsr	r1, r1, r2
   11954:	add	r4, r4, r2
   11958:	b	1169c <_start@@Base+0x22c>

0001195c <__libc_csu_init@@Base>:
   1195c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11960:	mov	r7, r0
   11964:	ldr	r6, [pc, #76]	; 119b8 <__libc_csu_init@@Base+0x5c>
   11968:	mov	r8, r1
   1196c:	ldr	r5, [pc, #72]	; 119bc <__libc_csu_init@@Base+0x60>
   11970:	mov	r9, r2
   11974:	add	r6, pc, r6
   11978:	bl	10924 <_init@@Base>
   1197c:	add	r5, pc, r5
   11980:	rsb	r6, r5, r6
   11984:	asrs	r6, r6, #2
   11988:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1198c:	sub	r5, r5, #4
   11990:	mov	r4, #0
   11994:	add	r4, r4, #1
   11998:	ldr	r3, [r5, #4]!
   1199c:	mov	r0, r7
   119a0:	mov	r1, r8
   119a4:	mov	r2, r9
   119a8:	blx	r3
   119ac:	cmp	r4, r6
   119b0:	bne	11994 <__libc_csu_init@@Base+0x38>
   119b4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   119b8:	andeq	r0, r1, r4, asr r5
   119bc:	andeq	r0, r1, r8, asr #10

000119c0 <__libc_csu_fini@@Base>:
   119c0:	bx	lr

Disassembly of section .fini:

000119c4 <_fini@@Base>:
   119c4:	push	{r3, lr}
   119c8:	pop	{r3, pc}
