
centos-preinstalled/containers_dump_pktfile:     file format elf32-littlearm


Disassembly of section .init:

000107cc <_init@@Base>:
   107cc:	push	{r3, lr}
   107d0:	bl	10bb8 <_start@@Base+0x3c>
   107d4:	pop	{r3, pc}

Disassembly of section .plt:

000107d8 <free@plt-0x14>:
   107d8:	push	{lr}		; (str lr, [sp, #-4]!)
   107dc:	ldr	lr, [pc, #4]	; 107e8 <_init@@Base+0x1c>
   107e0:	add	lr, pc, lr
   107e4:	ldr	pc, [lr, #8]!
   107e8:	andeq	r1, r1, r8, lsl r8

000107ec <free@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2072]!	; 0x818

000107f8 <_IO_getc@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2064]!	; 0x810

00010804 <__stack_chk_fail@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2056]!	; 0x808

00010810 <fwrite@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2048]!	; 0x800

0001081c <fread@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2040]!	; 0x7f8

00010828 <malloc@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2032]!	; 0x7f0

00010834 <__libc_start_main@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010840 <__gmon_start__@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2016]!	; 0x7e0

0001084c <__printf_chk@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2008]!	; 0x7d8

00010858 <fclose@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #2000]!	; 0x7d0

00010864 <__fread_chk@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #1992]!	; 0x7c8

00010870 <fopen64@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #1984]!	; 0x7c0

0001087c <abort@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #1976]!	; 0x7b8

Disassembly of section .text:

00010888 <main@@Base>:
   10888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1088c:	cmp	r0, #1
   10890:	ldr	r7, [pc, #684]	; 10b44 <main@@Base+0x2bc>
   10894:	sub	sp, sp, #36	; 0x24
   10898:	ldr	r3, [pc, #680]	; 10b48 <main@@Base+0x2c0>
   1089c:	mov	sl, r0
   108a0:	add	r7, pc, r7
   108a4:	mov	r9, r1
   108a8:	ldr	r8, [r7, r3]
   108ac:	ldr	r3, [r8]
   108b0:	str	r3, [sp, #28]
   108b4:	ble	10a1c <main@@Base+0x194>
   108b8:	ldr	r0, [r1, #4]
   108bc:	ldr	r1, [pc, #648]	; 10b4c <main@@Base+0x2c4>
   108c0:	add	r1, pc, r1
   108c4:	bl	10870 <fopen64@plt>
   108c8:	subs	r5, r0, #0
   108cc:	beq	10a84 <main@@Base+0x1fc>
   108d0:	add	r0, sp, #20
   108d4:	mov	r1, #1
   108d8:	mov	r2, #4
   108dc:	mov	r3, r5
   108e0:	bl	1081c <fread@plt>
   108e4:	cmp	r0, #4
   108e8:	beq	10938 <main@@Base+0xb0>
   108ec:	ldr	r1, [pc, #604]	; 10b50 <main@@Base+0x2c8>
   108f0:	mov	r0, #1
   108f4:	mov	r4, #0
   108f8:	mov	r7, #4
   108fc:	add	r1, pc, r1
   10900:	bl	1084c <__printf_chk@plt>
   10904:	mov	r0, r5
   10908:	bl	10858 <fclose@plt>
   1090c:	cmp	r4, #0
   10910:	beq	1091c <main@@Base+0x94>
   10914:	mov	r0, r4
   10918:	bl	107ec <free@plt>
   1091c:	ldr	r2, [sp, #28]
   10920:	rsb	r0, r7, #0
   10924:	ldr	r3, [r8]
   10928:	cmp	r2, r3
   1092c:	bne	10b40 <main@@Base+0x2b8>
   10930:	add	sp, sp, #36	; 0x24
   10934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10938:	ldr	r2, [sp, #20]
   1093c:	movw	r6, #16720	; 0x4150
   10940:	movw	r3, #22355	; 0x5753
   10944:	movt	r6, #21335	; 0x5357
   10948:	movt	r3, #20545	; 0x5041
   1094c:	cmp	r2, r6
   10950:	cmpne	r2, r3
   10954:	moveq	r6, #0
   10958:	movne	r6, #1
   1095c:	bne	10a38 <main@@Base+0x1b0>
   10960:	mov	r0, #32768	; 0x8000
   10964:	bl	10828 <malloc@plt>
   10968:	subs	r4, r0, #0
   1096c:	beq	10b28 <main@@Base+0x2a0>
   10970:	cmp	sl, #2
   10974:	bne	10af4 <main@@Base+0x26c>
   10978:	ldr	r3, [pc, #468]	; 10b54 <main@@Base+0x2cc>
   1097c:	movw	r9, #16720	; 0x4150
   10980:	add	sl, sp, #24
   10984:	movt	r9, #21335	; 0x5357
   10988:	add	r3, pc, r3
   1098c:	str	r3, [sp, #8]
   10990:	ldr	r3, [pc, #448]	; 10b58 <main@@Base+0x2d0>
   10994:	add	r3, pc, r3
   10998:	str	r3, [sp, #12]
   1099c:	b	109e8 <main@@Base+0x160>
   109a0:	cmp	r3, #32768	; 0x8000
   109a4:	bcs	10ac0 <main@@Base+0x238>
   109a8:	str	r5, [sp]
   109ac:	mov	r0, r4
   109b0:	mov	r1, #32768	; 0x8000
   109b4:	mov	r2, #1
   109b8:	bl	10864 <__fread_chk@plt>
   109bc:	cmp	r6, #0
   109c0:	mov	fp, r0
   109c4:	beq	10a58 <main@@Base+0x1d0>
   109c8:	mov	r0, r4
   109cc:	mov	r1, #1
   109d0:	ldr	r2, [sp, #24]
   109d4:	mov	r3, r6
   109d8:	bl	10810 <fwrite@plt>
   109dc:	ldr	r2, [sp, #24]
   109e0:	cmp	r2, fp
   109e4:	bne	10ae0 <main@@Base+0x258>
   109e8:	mov	r0, sl
   109ec:	mov	r1, #1
   109f0:	mov	r2, #4
   109f4:	mov	r3, r5
   109f8:	bl	1081c <fread@plt>
   109fc:	cmp	r0, #4
   10a00:	bne	10aa0 <main@@Base+0x218>
   10a04:	ldr	r3, [sp, #20]
   10a08:	cmp	r3, r9
   10a0c:	ldr	r3, [sp, #24]
   10a10:	reveq	r3, r3
   10a14:	streq	r3, [sp, #24]
   10a18:	b	109a0 <main@@Base+0x118>
   10a1c:	ldr	r2, [r1]
   10a20:	mov	r0, #1
   10a24:	ldr	r1, [pc, #304]	; 10b5c <main@@Base+0x2d4>
   10a28:	mov	r7, r0
   10a2c:	add	r1, pc, r1
   10a30:	bl	1084c <__printf_chk@plt>
   10a34:	b	1091c <main@@Base+0x94>
   10a38:	ldr	r1, [pc, #288]	; 10b60 <main@@Base+0x2d8>
   10a3c:	mov	r0, #1
   10a40:	mov	r3, r2
   10a44:	mov	r4, #0
   10a48:	add	r1, pc, r1
   10a4c:	mov	r7, #5
   10a50:	bl	1084c <__printf_chk@plt>
   10a54:	b	10904 <main@@Base+0x7c>
   10a58:	ldr	r3, [sp, #24]
   10a5c:	mov	r2, r4
   10a60:	ldr	r1, [sp, #8]
   10a64:	mov	r0, #1
   10a68:	strb	r6, [r4, r3]
   10a6c:	bl	1084c <__printf_chk@plt>
   10a70:	ldr	r3, [pc, #236]	; 10b64 <main@@Base+0x2dc>
   10a74:	ldr	r3, [r7, r3]
   10a78:	ldr	r0, [r3]
   10a7c:	bl	107f8 <_IO_getc@plt>
   10a80:	b	109dc <main@@Base+0x154>
   10a84:	ldr	r1, [pc, #220]	; 10b68 <main@@Base+0x2e0>
   10a88:	mov	r0, #1
   10a8c:	ldr	r2, [r9, #4]
   10a90:	mov	r7, #2
   10a94:	add	r1, pc, r1
   10a98:	bl	1084c <__printf_chk@plt>
   10a9c:	b	1091c <main@@Base+0x94>
   10aa0:	mov	r7, #0
   10aa4:	mov	r0, r5
   10aa8:	bl	10858 <fclose@plt>
   10aac:	cmp	r6, #0
   10ab0:	beq	10914 <main@@Base+0x8c>
   10ab4:	mov	r0, r6
   10ab8:	bl	10858 <fclose@plt>
   10abc:	b	10914 <main@@Base+0x8c>
   10ac0:	ldr	r1, [pc, #164]	; 10b6c <main@@Base+0x2e4>
   10ac4:	mov	r2, r3
   10ac8:	mov	r0, #1
   10acc:	movw	r3, #32767	; 0x7fff
   10ad0:	add	r1, pc, r1
   10ad4:	mov	r7, #7
   10ad8:	bl	1084c <__printf_chk@plt>
   10adc:	b	10aa4 <main@@Base+0x21c>
   10ae0:	mov	r3, fp
   10ae4:	ldr	r1, [sp, #12]
   10ae8:	mov	r0, #1
   10aec:	bl	1084c <__printf_chk@plt>
   10af0:	b	109e8 <main@@Base+0x160>
   10af4:	ldr	r1, [pc, #116]	; 10b70 <main@@Base+0x2e8>
   10af8:	ldr	r0, [r9, #8]
   10afc:	add	r1, pc, r1
   10b00:	bl	10870 <fopen64@plt>
   10b04:	subs	r6, r0, #0
   10b08:	bne	10978 <main@@Base+0xf0>
   10b0c:	ldr	r1, [pc, #96]	; 10b74 <main@@Base+0x2ec>
   10b10:	mov	r0, #1
   10b14:	ldr	r2, [r9, #8]
   10b18:	mov	r7, #3
   10b1c:	add	r1, pc, r1
   10b20:	bl	1084c <__printf_chk@plt>
   10b24:	b	10904 <main@@Base+0x7c>
   10b28:	ldr	r1, [pc, #72]	; 10b78 <main@@Base+0x2f0>
   10b2c:	mov	r0, #1
   10b30:	mov	r7, #6
   10b34:	add	r1, pc, r1
   10b38:	bl	1084c <__printf_chk@plt>
   10b3c:	b	10904 <main@@Base+0x7c>
   10b40:	bl	10804 <__stack_chk_fail@plt>
   10b44:	andeq	r1, r1, r8, asr r7
   10b48:	andeq	r0, r0, r0, asr #32
   10b4c:	andeq	r0, r0, r8, ror #9
   10b50:	ldrdeq	r0, [r0], -ip
   10b54:	andeq	r0, r0, r4, lsr #10
   10b58:	andeq	r0, r0, ip, lsl r5
   10b5c:	strdeq	r0, [r0], -r4
   10b60:	andeq	r0, r0, r4, asr #7
   10b64:	andeq	r0, r0, r8, asr #32
   10b68:	andeq	r0, r0, r8, lsl r3
   10b6c:	andeq	r0, r0, r8, lsr #7
   10b70:	andeq	r0, r0, r4, asr r3
   10b74:	andeq	r0, r0, r8, lsr r3
   10b78:	andeq	r0, r0, r0, lsl #6

00010b7c <_start@@Base>:
   10b7c:	mov	fp, #0
   10b80:	mov	lr, #0
   10b84:	pop	{r1}		; (ldr r1, [sp], #4)
   10b88:	mov	r2, sp
   10b8c:	push	{r2}		; (str r2, [sp, #-4]!)
   10b90:	push	{r0}		; (str r0, [sp, #-4]!)
   10b94:	ldr	ip, [pc, #16]	; 10bac <_start@@Base+0x30>
   10b98:	push	{ip}		; (str ip, [sp, #-4]!)
   10b9c:	ldr	r0, [pc, #12]	; 10bb0 <_start@@Base+0x34>
   10ba0:	ldr	r3, [pc, #12]	; 10bb4 <_start@@Base+0x38>
   10ba4:	bl	10834 <__libc_start_main@plt>
   10ba8:	bl	1087c <abort@plt>
   10bac:	andeq	r0, r1, r4, lsl sp
   10bb0:	andeq	r0, r1, r8, lsl #17
   10bb4:			; <UNDEFINED> instruction: 0x00010cb0
   10bb8:	ldr	r3, [pc, #20]	; 10bd4 <_start@@Base+0x58>
   10bbc:	ldr	r2, [pc, #20]	; 10bd8 <_start@@Base+0x5c>
   10bc0:	add	r3, pc, r3
   10bc4:	ldr	r2, [r3, r2]
   10bc8:	cmp	r2, #0
   10bcc:	bxeq	lr
   10bd0:	b	10840 <__gmon_start__@plt>
   10bd4:	andeq	r1, r1, r8, lsr r4
   10bd8:	andeq	r0, r0, r4, asr #32
   10bdc:	push	{r3, lr}
   10be0:	movw	r0, #8272	; 0x2050
   10be4:	ldr	r3, [pc, #36]	; 10c10 <_start@@Base+0x94>
   10be8:	movt	r0, #2
   10bec:	rsb	r3, r0, r3
   10bf0:	cmp	r3, #6
   10bf4:	popls	{r3, pc}
   10bf8:	movw	r3, #0
   10bfc:	movt	r3, #0
   10c00:	cmp	r3, #0
   10c04:	popeq	{r3, pc}
   10c08:	blx	r3
   10c0c:	pop	{r3, pc}
   10c10:	andeq	r2, r2, r3, asr r0
   10c14:	push	{r3, lr}
   10c18:	movw	r0, #8272	; 0x2050
   10c1c:	movw	r3, #8272	; 0x2050
   10c20:	movt	r0, #2
   10c24:	movt	r3, #2
   10c28:	rsb	r3, r0, r3
   10c2c:	asr	r3, r3, #2
   10c30:	add	r3, r3, r3, lsr #31
   10c34:	asrs	r1, r3, #1
   10c38:	popeq	{r3, pc}
   10c3c:	movw	r2, #0
   10c40:	movt	r2, #0
   10c44:	cmp	r2, #0
   10c48:	popeq	{r3, pc}
   10c4c:	blx	r2
   10c50:	pop	{r3, pc}
   10c54:	push	{r4, lr}
   10c58:	movw	r4, #8272	; 0x2050
   10c5c:	movt	r4, #2
   10c60:	ldrb	r3, [r4]
   10c64:	cmp	r3, #0
   10c68:	popne	{r4, pc}
   10c6c:	bl	10bdc <_start@@Base+0x60>
   10c70:	mov	r3, #1
   10c74:	strb	r3, [r4]
   10c78:	pop	{r4, pc}
   10c7c:	movw	r0, #7940	; 0x1f04
   10c80:	movt	r0, #2
   10c84:	push	{r3, lr}
   10c88:	ldr	r3, [r0]
   10c8c:	cmp	r3, #0
   10c90:	beq	10ca8 <_start@@Base+0x12c>
   10c94:	movw	r3, #0
   10c98:	movt	r3, #0
   10c9c:	cmp	r3, #0
   10ca0:	beq	10ca8 <_start@@Base+0x12c>
   10ca4:	blx	r3
   10ca8:	pop	{r3, lr}
   10cac:	b	10c14 <_start@@Base+0x98>

00010cb0 <__libc_csu_init@@Base>:
   10cb0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10cb4:	mov	r7, r0
   10cb8:	ldr	r6, [pc, #76]	; 10d0c <__libc_csu_init@@Base+0x5c>
   10cbc:	mov	r8, r1
   10cc0:	ldr	r5, [pc, #72]	; 10d10 <__libc_csu_init@@Base+0x60>
   10cc4:	mov	r9, r2
   10cc8:	add	r6, pc, r6
   10ccc:	bl	107cc <_init@@Base>
   10cd0:	add	r5, pc, r5
   10cd4:	rsb	r6, r5, r6
   10cd8:	asrs	r6, r6, #2
   10cdc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10ce0:	sub	r5, r5, #4
   10ce4:	mov	r4, #0
   10ce8:	add	r4, r4, #1
   10cec:	ldr	r3, [r5, #4]!
   10cf0:	mov	r0, r7
   10cf4:	mov	r1, r8
   10cf8:	mov	r2, r9
   10cfc:	blx	r3
   10d00:	cmp	r4, r6
   10d04:	bne	10ce8 <__libc_csu_init@@Base+0x38>
   10d08:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10d0c:	andeq	r1, r1, r0, lsr r2
   10d10:	andeq	r1, r1, r4, lsr #4

00010d14 <__libc_csu_fini@@Base>:
   10d14:	bx	lr

Disassembly of section .fini:

00010d18 <_fini@@Base>:
   10d18:	push	{r3, lr}
   10d1c:	pop	{r3, pc}
