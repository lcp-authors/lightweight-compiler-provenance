
centos-preinstalled/upower:     file format elf32-littlearm


Disassembly of section .init:

00000d64 <_init@@Base>:
 d64:	push	{r3, lr}
 d68:	bl	1778 <main@@Base+0x7d8>
 d6c:	pop	{r3, pc}

Disassembly of section .plt:

00000d70 <g_free@plt-0x14>:
 d70:	push	{lr}		; (str lr, [sp, #-4]!)
 d74:	ldr	lr, [pc, #4]	; d80 <_init@@Base+0x1c>
 d78:	add	lr, pc, lr
 d7c:	ldr	pc, [lr, #8]!
 d80:	muleq	r1, ip, r1

00000d84 <g_free@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #73728	; 0x12000
 d8c:	ldr	pc, [ip, #412]!	; 0x19c

00000d90 <abort@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #73728	; 0x12000
 d98:	ldr	pc, [ip, #404]!	; 0x194

00000d9c <localtime@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #73728	; 0x12000
 da4:	ldr	pc, [ip, #396]!	; 0x18c

00000da8 <up_wakeup_item_get_cmdline@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #73728	; 0x12000
 db0:	ldr	pc, [ip, #388]!	; 0x184

00000db4 <up_wakeup_item_get_value@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #73728	; 0x12000
 dbc:	ldr	pc, [ip, #380]!	; 0x17c

00000dc0 <__libc_start_main@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #73728	; 0x12000
 dc8:	ldr	pc, [ip, #372]!	; 0x174

00000dcc <g_print@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #73728	; 0x12000
 dd4:	ldr	pc, [ip, #364]!	; 0x16c

00000dd8 <g_option_context_free@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #73728	; 0x12000
 de0:	ldr	pc, [ip, #356]!	; 0x164

00000de4 <up_wakeups_get_has_capability@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #73728	; 0x12000
 dec:	ldr	pc, [ip, #348]!	; 0x15c

00000df0 <__gmon_start__@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #73728	; 0x12000
 df8:	ldr	pc, [ip, #340]!	; 0x154

00000dfc <up_device_get_object_path@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #73728	; 0x12000
 e04:	ldr	pc, [ip, #332]!	; 0x14c

00000e08 <g_object_unref@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #73728	; 0x12000
 e10:	ldr	pc, [ip, #324]!	; 0x144

00000e14 <up_wakeups_get_total_sync@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #73728	; 0x12000
 e1c:	ldr	pc, [ip, #316]!	; 0x13c

00000e20 <up_wakeup_item_get_id@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #73728	; 0x12000
 e28:	ldr	pc, [ip, #308]!	; 0x134

00000e2c <up_device_to_text@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #73728	; 0x12000
 e34:	ldr	pc, [ip, #300]!	; 0x12c

00000e38 <memset@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #73728	; 0x12000
 e40:	ldr	pc, [ip, #292]!	; 0x124

00000e44 <g_option_context_add_main_entries@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #73728	; 0x12000
 e4c:	ldr	pc, [ip, #284]!	; 0x11c

00000e50 <g_main_loop_new@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #73728	; 0x12000
 e58:	ldr	pc, [ip, #276]!	; 0x114

00000e5c <up_wakeup_item_get_details@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #73728	; 0x12000
 e64:	ldr	pc, [ip, #268]!	; 0x10c

00000e68 <up_client_get_display_device@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #73728	; 0x12000
 e70:	ldr	pc, [ip, #260]!	; 0x104

00000e74 <gettimeofday@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #73728	; 0x12000
 e7c:	ldr	pc, [ip, #252]!	; 0xfc

00000e80 <g_strdup_printf@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #73728	; 0x12000
 e88:	ldr	pc, [ip, #244]!	; 0xf4

00000e8c <up_device_new@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #73728	; 0x12000
 e94:	ldr	pc, [ip, #236]!	; 0xec

00000e98 <g_option_context_parse@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #73728	; 0x12000
 ea0:	ldr	pc, [ip, #228]!	; 0xe4

00000ea4 <g_object_get@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #73728	; 0x12000
 eac:	ldr	pc, [ip, #220]!	; 0xdc

00000eb0 <up_client_get_critical_action@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #73728	; 0x12000
 eb8:	ldr	pc, [ip, #212]!	; 0xd4

00000ebc <setlocale@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #73728	; 0x12000
 ec4:	ldr	pc, [ip, #204]!	; 0xcc

00000ec8 <up_wakeup_item_get_is_userspace@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #73728	; 0x12000
 ed0:	ldr	pc, [ip, #196]!	; 0xc4

00000ed4 <up_client_new_full@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #73728	; 0x12000
 edc:	ldr	pc, [ip, #188]!	; 0xbc

00000ee0 <time@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #73728	; 0x12000
 ee8:	ldr	pc, [ip, #180]!	; 0xb4

00000eec <g_signal_connect_data@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #73728	; 0x12000
 ef4:	ldr	pc, [ip, #172]!	; 0xac

00000ef8 <__stack_chk_fail@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #73728	; 0x12000
 f00:	ldr	pc, [ip, #164]!	; 0xa4

00000f04 <g_malloc0@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #73728	; 0x12000
 f0c:	ldr	pc, [ip, #156]!	; 0x9c

00000f10 <strftime@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #73728	; 0x12000
 f18:	ldr	pc, [ip, #148]!	; 0x94

00000f1c <up_client_get_devices@plt>:
 f1c:	add	ip, pc, #0, 12
 f20:	add	ip, ip, #73728	; 0x12000
 f24:	ldr	pc, [ip, #140]!	; 0x8c

00000f28 <g_option_context_new@plt>:
 f28:	add	ip, pc, #0, 12
 f2c:	add	ip, ip, #73728	; 0x12000
 f30:	ldr	pc, [ip, #132]!	; 0x84

00000f34 <up_wakeups_get_data_sync@plt>:
 f34:	add	ip, pc, #0, 12
 f38:	add	ip, ip, #73728	; 0x12000
 f3c:	ldr	pc, [ip, #124]!	; 0x7c

00000f40 <g_error_free@plt>:
 f40:	add	ip, pc, #0, 12
 f44:	add	ip, ip, #73728	; 0x12000
 f48:	ldr	pc, [ip, #116]!	; 0x74

00000f4c <g_ptr_array_unref@plt>:
 f4c:	add	ip, pc, #0, 12
 f50:	add	ip, ip, #73728	; 0x12000
 f54:	ldr	pc, [ip, #108]!	; 0x6c

00000f58 <up_wakeups_new@plt>:
 f58:	add	ip, pc, #0, 12
 f5c:	add	ip, ip, #73728	; 0x12000
 f60:	ldr	pc, [ip, #100]!	; 0x64

00000f64 <g_dgettext@plt>:
 f64:	add	ip, pc, #0, 12
 f68:	add	ip, ip, #73728	; 0x12000
 f6c:	ldr	pc, [ip, #92]!	; 0x5c

00000f70 <g_main_loop_run@plt>:
 f70:	add	ip, pc, #0, 12
 f74:	add	ip, ip, #73728	; 0x12000
 f78:	ldr	pc, [ip, #84]!	; 0x54

00000f7c <up_device_set_object_path_sync@plt>:
 f7c:	add	ip, pc, #0, 12
 f80:	add	ip, ip, #73728	; 0x12000
 f84:	ldr	pc, [ip, #76]!	; 0x4c

00000f88 <g_log@plt>:
 f88:	add	ip, pc, #0, 12
 f8c:	add	ip, ip, #73728	; 0x12000
 f90:	ldr	pc, [ip, #68]!	; 0x44

00000f94 <__cxa_finalize@plt>:
 f94:	add	ip, pc, #0, 12
 f98:	add	ip, ip, #73728	; 0x12000
 f9c:	ldr	pc, [ip, #60]!	; 0x3c

Disassembly of section .text:

00000fa0 <main@@Base>:
     fa0:	ldr	r3, [pc, #1724]	; 1664 <main@@Base+0x6c4>
     fa4:	mov	r2, #224	; 0xe0
     fa8:	ldr	ip, [pc, #1720]	; 1668 <main@@Base+0x6c8>
     fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     fb0:	vpush	{d8}
     fb4:	add	r3, pc, r3
     fb8:	sub	sp, sp, #300	; 0x12c
     fbc:	mov	r4, #0
     fc0:	add	r7, sp, #68	; 0x44
     fc4:	ldr	r5, [pc, #1696]	; 166c <main@@Base+0x6cc>
     fc8:	str	r0, [sp, #28]
     fcc:	mov	r9, #1
     fd0:	str	r1, [sp, #24]
     fd4:	mov	r0, r7
     fd8:	ldr	ip, [r3, ip]
     fdc:	mov	r1, r4
     fe0:	add	r5, pc, r5
     fe4:	str	r4, [sp, #36]	; 0x24
     fe8:	str	r4, [sp, #40]	; 0x28
     fec:	add	sl, sp, #60	; 0x3c
     ff0:	ldr	r3, [ip]
     ff4:	str	ip, [sp, #20]
     ff8:	str	r4, [sp, #44]	; 0x2c
     ffc:	str	r3, [sp, #292]	; 0x124
    1000:	str	r4, [sp, #48]	; 0x30
    1004:	str	r4, [sp, #52]	; 0x34
    1008:	str	r4, [sp, #56]	; 0x38
    100c:	str	r4, [sp, #60]	; 0x3c
    1010:	bl	e38 <memset@plt>
    1014:	ldr	r1, [pc, #1620]	; 1670 <main@@Base+0x6d0>
    1018:	mov	r0, r5
    101c:	ldr	r3, [pc, #1616]	; 1674 <main@@Base+0x6d4>
    1020:	mov	r2, #101	; 0x65
    1024:	add	r1, pc, r1
    1028:	strb	r2, [sp, #72]	; 0x48
    102c:	add	r3, pc, r3
    1030:	str	r3, [sp, #68]	; 0x44
    1034:	add	r3, sp, #44	; 0x2c
    1038:	str	r3, [sp, #84]	; 0x54
    103c:	bl	f64 <g_dgettext@plt>
    1040:	ldr	r1, [pc, #1584]	; 1678 <main@@Base+0x6d8>
    1044:	ldr	r3, [pc, #1584]	; 167c <main@@Base+0x6dc>
    1048:	mov	r2, #100	; 0x64
    104c:	add	r1, pc, r1
    1050:	strb	r2, [sp, #100]	; 0x64
    1054:	add	r3, pc, r3
    1058:	str	r3, [sp, #96]	; 0x60
    105c:	add	r3, sp, #36	; 0x24
    1060:	str	r3, [sp, #112]	; 0x70
    1064:	ldr	r6, [pc, #1556]	; 1680 <main@@Base+0x6e0>
    1068:	add	r6, pc, r6
    106c:	str	r0, [sp, #88]	; 0x58
    1070:	mov	r0, r5
    1074:	bl	f64 <g_dgettext@plt>
    1078:	ldr	r1, [pc, #1540]	; 1684 <main@@Base+0x6e4>
    107c:	ldr	r3, [pc, #1540]	; 1688 <main@@Base+0x6e8>
    1080:	mov	r2, #119	; 0x77
    1084:	add	r1, pc, r1
    1088:	strb	r2, [sp, #128]	; 0x80
    108c:	add	r3, pc, r3
    1090:	str	r3, [sp, #124]	; 0x7c
    1094:	add	r3, sp, #40	; 0x28
    1098:	str	r3, [sp, #140]	; 0x8c
    109c:	str	r0, [sp, #116]	; 0x74
    10a0:	mov	r0, r5
    10a4:	bl	f64 <g_dgettext@plt>
    10a8:	ldr	r1, [pc, #1500]	; 168c <main@@Base+0x6ec>
    10ac:	ldr	r3, [pc, #1500]	; 1690 <main@@Base+0x6f0>
    10b0:	mov	r2, #109	; 0x6d
    10b4:	add	r1, pc, r1
    10b8:	strb	r2, [sp, #156]	; 0x9c
    10bc:	add	r3, pc, r3
    10c0:	str	r3, [sp, #152]	; 0x98
    10c4:	add	r3, sp, #48	; 0x30
    10c8:	str	r3, [sp, #168]	; 0xa8
    10cc:	str	r0, [sp, #144]	; 0x90
    10d0:	mov	r0, r5
    10d4:	bl	f64 <g_dgettext@plt>
    10d8:	ldr	r1, [pc, #1460]	; 1694 <main@@Base+0x6f4>
    10dc:	ldr	r3, [pc, #1460]	; 1698 <main@@Base+0x6f8>
    10e0:	add	r1, pc, r1
    10e4:	str	r6, [sp, #196]	; 0xc4
    10e8:	add	r3, pc, r3
    10ec:	str	r3, [sp, #180]	; 0xb4
    10f0:	str	r0, [sp, #172]	; 0xac
    10f4:	mov	r0, r5
    10f8:	bl	f64 <g_dgettext@plt>
    10fc:	ldr	r1, [pc, #1432]	; 169c <main@@Base+0x6fc>
    1100:	ldr	r2, [pc, #1432]	; 16a0 <main@@Base+0x700>
    1104:	mov	r3, #105	; 0x69
    1108:	add	r1, pc, r1
    110c:	strb	r3, [sp, #212]	; 0xd4
    1110:	add	r2, pc, r2
    1114:	add	r3, sp, #52	; 0x34
    1118:	str	r2, [sp, #208]	; 0xd0
    111c:	str	r3, [sp, #224]	; 0xe0
    1120:	str	r9, [sp, #220]	; 0xdc
    1124:	str	r0, [sp, #200]	; 0xc8
    1128:	mov	r0, r5
    112c:	bl	f64 <g_dgettext@plt>
    1130:	ldr	r1, [pc, #1388]	; 16a4 <main@@Base+0x704>
    1134:	ldr	ip, [pc, #1388]	; 16a8 <main@@Base+0x708>
    1138:	mov	r3, #118	; 0x76
    113c:	ldr	r2, [pc, #1384]	; 16ac <main@@Base+0x70c>
    1140:	add	r1, pc, r1
    1144:	add	ip, pc, ip
    1148:	strb	r3, [sp, #240]	; 0xf0
    114c:	str	ip, [sp, #236]	; 0xec
    1150:	add	r3, sp, #56	; 0x38
    1154:	add	r2, pc, r2
    1158:	str	r3, [sp, #252]	; 0xfc
    115c:	str	r2, [sp, #256]	; 0x100
    1160:	str	r0, [sp, #228]	; 0xe4
    1164:	mov	r0, #6
    1168:	bl	ebc <setlocale@plt>
    116c:	ldr	r0, [pc, #1340]	; 16b0 <main@@Base+0x710>
    1170:	add	r0, pc, r0
    1174:	bl	f28 <g_option_context_new@plt>
    1178:	mov	r1, r7
    117c:	mov	r2, r4
    1180:	mov	r5, r0
    1184:	bl	e44 <g_option_context_add_main_entries@plt>
    1188:	mov	r3, r4
    118c:	add	r2, sp, #24
    1190:	add	r1, sp, #28
    1194:	mov	r0, r5
    1198:	bl	e98 <g_option_context_parse@plt>
    119c:	mov	r0, r5
    11a0:	bl	dd8 <g_option_context_free@plt>
    11a4:	mov	r1, r4
    11a8:	mov	r0, r4
    11ac:	bl	e50 <g_main_loop_new@plt>
    11b0:	mov	r1, sl
    11b4:	str	r0, [r6, #4]
    11b8:	mov	r0, r4
    11bc:	bl	ed4 <up_client_new_full@plt>
    11c0:	subs	r7, r0, #0
    11c4:	beq	1608 <main@@Base+0x668>
    11c8:	ldr	r5, [sp, #56]	; 0x38
    11cc:	cmp	r5, #0
    11d0:	bne	1330 <main@@Base+0x390>
    11d4:	ldr	r3, [sp, #40]	; 0x28
    11d8:	cmp	r3, #0
    11dc:	bne	1390 <main@@Base+0x3f0>
    11e0:	ldr	r3, [sp, #44]	; 0x2c
    11e4:	cmp	r3, #0
    11e8:	bne	11f8 <main@@Base+0x258>
    11ec:	ldr	r3, [sp, #36]	; 0x24
    11f0:	cmp	r3, #0
    11f4:	beq	1480 <main@@Base+0x4e0>
    11f8:	mov	r0, r7
    11fc:	bl	f1c <up_client_get_devices@plt>
    1200:	ldr	r3, [r0, #4]
    1204:	mov	r6, r0
    1208:	cmp	r3, #0
    120c:	beq	12a8 <main@@Base+0x308>
    1210:	ldr	fp, [pc, #1180]	; 16b4 <main@@Base+0x714>
    1214:	mov	r4, #0
    1218:	ldr	sl, [pc, #1176]	; 16b8 <main@@Base+0x718>
    121c:	ldr	r9, [pc, #1176]	; 16bc <main@@Base+0x71c>
    1220:	add	fp, pc, fp
    1224:	add	sl, pc, sl
    1228:	add	r9, pc, r9
    122c:	b	1250 <main@@Base+0x2b0>
    1230:	bl	dfc <up_device_get_object_path@plt>
    1234:	add	r4, r4, #1
    1238:	mov	r1, r0
    123c:	mov	r0, r9
    1240:	bl	dcc <g_print@plt>
    1244:	ldr	r3, [r6, #4]
    1248:	cmp	r3, r4
    124c:	bls	12a8 <main@@Base+0x308>
    1250:	ldr	r3, [r6]
    1254:	ldr	r2, [sp, #44]	; 0x2c
    1258:	ldr	r5, [r3, r4, lsl #2]
    125c:	cmp	r2, #0
    1260:	mov	r0, r5
    1264:	bne	1230 <main@@Base+0x290>
    1268:	bl	dfc <up_device_get_object_path@plt>
    126c:	add	r4, r4, #1
    1270:	mov	r1, r0
    1274:	mov	r0, fp
    1278:	bl	dcc <g_print@plt>
    127c:	mov	r0, r5
    1280:	bl	e2c <up_device_to_text@plt>
    1284:	mov	r5, r0
    1288:	mov	r0, sl
    128c:	mov	r1, r5
    1290:	bl	dcc <g_print@plt>
    1294:	mov	r0, r5
    1298:	bl	d84 <g_free@plt>
    129c:	ldr	r3, [r6, #4]
    12a0:	cmp	r3, r4
    12a4:	bhi	1250 <main@@Base+0x2b0>
    12a8:	mov	r0, r6
    12ac:	bl	f4c <g_ptr_array_unref@plt>
    12b0:	mov	r0, r7
    12b4:	bl	e68 <up_client_get_display_device@plt>
    12b8:	ldr	r3, [sp, #44]	; 0x2c
    12bc:	cmp	r3, #0
    12c0:	mov	r4, r0
    12c4:	bne	14f4 <main@@Base+0x554>
    12c8:	bl	dfc <up_device_get_object_path@plt>
    12cc:	mov	r1, r0
    12d0:	ldr	r0, [pc, #1000]	; 16c0 <main@@Base+0x720>
    12d4:	add	r0, pc, r0
    12d8:	bl	dcc <g_print@plt>
    12dc:	mov	r0, r4
    12e0:	bl	e2c <up_device_to_text@plt>
    12e4:	mov	r5, r0
    12e8:	mov	r1, r0
    12ec:	ldr	r0, [pc, #976]	; 16c4 <main@@Base+0x724>
    12f0:	add	r0, pc, r0
    12f4:	bl	dcc <g_print@plt>
    12f8:	mov	r0, r5
    12fc:	bl	d84 <g_free@plt>
    1300:	mov	r0, r4
    1304:	bl	e08 <g_object_unref@plt>
    1308:	ldr	r4, [sp, #36]	; 0x24
    130c:	cmp	r4, #0
    1310:	beq	1364 <main@@Base+0x3c4>
    1314:	ldr	r0, [pc, #940]	; 16c8 <main@@Base+0x728>
    1318:	mov	r4, #0
    131c:	add	r0, pc, r0
    1320:	bl	dcc <g_print@plt>
    1324:	mov	r0, r7
    1328:	bl	18fc <main@@Base+0x95c>
    132c:	b	1364 <main@@Base+0x3c4>
    1330:	ldr	r1, [pc, #916]	; 16cc <main@@Base+0x72c>
    1334:	add	r2, sp, #64	; 0x40
    1338:	mov	r3, r4
    133c:	add	r1, pc, r1
    1340:	bl	ea4 <g_object_get@plt>
    1344:	ldr	r0, [pc, #900]	; 16d0 <main@@Base+0x730>
    1348:	ldr	r1, [pc, #900]	; 16d4 <main@@Base+0x734>
    134c:	add	r0, pc, r0
    1350:	ldr	r2, [sp, #64]	; 0x40
    1354:	add	r1, pc, r1
    1358:	bl	dcc <g_print@plt>
    135c:	ldr	r0, [sp, #64]	; 0x40
    1360:	bl	d84 <g_free@plt>
    1364:	mov	r0, r7
    1368:	bl	e08 <g_object_unref@plt>
    136c:	mov	r0, r4
    1370:	ldr	ip, [sp, #20]
    1374:	ldr	r2, [sp, #292]	; 0x124
    1378:	ldr	r3, [ip]
    137c:	cmp	r2, r3
    1380:	bne	1660 <main@@Base+0x6c0>
    1384:	add	sp, sp, #300	; 0x12c
    1388:	vpop	{d8}
    138c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1390:	bl	f58 <up_wakeups_new@plt>
    1394:	str	r0, [sp, #16]
    1398:	bl	de4 <up_wakeups_get_has_capability@plt>
    139c:	cmp	r0, #0
    13a0:	beq	15f8 <main@@Base+0x658>
    13a4:	mov	r2, r5
    13a8:	mov	r1, r5
    13ac:	ldr	r0, [sp, #16]
    13b0:	bl	e14 <up_wakeups_get_total_sync@plt>
    13b4:	mov	r1, r0
    13b8:	ldr	r0, [pc, #792]	; 16d8 <main@@Base+0x738>
    13bc:	add	r0, pc, r0
    13c0:	bl	dcc <g_print@plt>
    13c4:	ldr	r0, [sp, #16]
    13c8:	mov	r1, r5
    13cc:	mov	r2, r5
    13d0:	bl	f34 <up_wakeups_get_data_sync@plt>
    13d4:	subs	r6, r0, #0
    13d8:	beq	1470 <main@@Base+0x4d0>
    13dc:	ldr	r0, [pc, #760]	; 16dc <main@@Base+0x73c>
    13e0:	ldr	r9, [pc, #760]	; 16e0 <main@@Base+0x740>
    13e4:	add	r0, pc, r0
    13e8:	bl	dcc <g_print@plt>
    13ec:	ldr	r3, [r6, #4]
    13f0:	add	r9, pc, r9
    13f4:	cmp	r3, #0
    13f8:	beq	1468 <main@@Base+0x4c8>
    13fc:	ldr	r3, [r6]
    1400:	ldr	r4, [r3, r5, lsl #2]
    1404:	add	r5, r5, #1
    1408:	mov	r0, r4
    140c:	bl	ec8 <up_wakeup_item_get_is_userspace@plt>
    1410:	mov	sl, r0
    1414:	mov	r0, r4
    1418:	bl	e20 <up_wakeup_item_get_id@plt>
    141c:	mov	fp, r0
    1420:	mov	r0, r4
    1424:	bl	db4 <up_wakeup_item_get_value@plt>
    1428:	mov	r0, r4
    142c:	vmov.f64	d8, d0
    1430:	bl	da8 <up_wakeup_item_get_cmdline@plt>
    1434:	mov	r8, r0
    1438:	mov	r0, r4
    143c:	bl	e5c <up_wakeup_item_get_details@plt>
    1440:	str	r8, [sp, #8]
    1444:	mov	r1, sl
    1448:	mov	r2, fp
    144c:	vstr	d8, [sp]
    1450:	str	r0, [sp, #12]
    1454:	mov	r0, r9
    1458:	bl	dcc <g_print@plt>
    145c:	ldr	r3, [r6, #4]
    1460:	cmp	r5, r3
    1464:	bcc	13fc <main@@Base+0x45c>
    1468:	mov	r0, r6
    146c:	bl	f4c <g_ptr_array_unref@plt>
    1470:	ldr	r0, [sp, #16]
    1474:	mov	r4, #0
    1478:	bl	e08 <g_object_unref@plt>
    147c:	b	1364 <main@@Base+0x3c4>
    1480:	ldr	r3, [sp, #48]	; 0x30
    1484:	cmp	r3, #0
    1488:	bne	150c <main@@Base+0x56c>
    148c:	ldr	r4, [r6]
    1490:	cmp	r4, #0
    1494:	bne	150c <main@@Base+0x56c>
    1498:	ldr	r3, [sp, #52]	; 0x34
    149c:	cmp	r3, #0
    14a0:	moveq	r4, r9
    14a4:	beq	1364 <main@@Base+0x3c4>
    14a8:	bl	e8c <up_device_new@plt>
    14ac:	mov	r2, r4
    14b0:	mov	r3, sl
    14b4:	ldr	r1, [sp, #52]	; 0x34
    14b8:	mov	r5, r0
    14bc:	bl	f7c <up_device_set_object_path_sync@plt>
    14c0:	cmp	r0, #0
    14c4:	bne	1638 <main@@Base+0x698>
    14c8:	ldr	r3, [sp, #60]	; 0x3c
    14cc:	ldr	r0, [pc, #528]	; 16e4 <main@@Base+0x744>
    14d0:	ldr	r1, [r3, #8]
    14d4:	add	r0, pc, r0
    14d8:	bl	dcc <g_print@plt>
    14dc:	ldr	r0, [sp, #60]	; 0x3c
    14e0:	bl	f40 <g_error_free@plt>
    14e4:	mov	r0, r5
    14e8:	mov	r4, #0
    14ec:	bl	e08 <g_object_unref@plt>
    14f0:	b	1364 <main@@Base+0x3c4>
    14f4:	bl	dfc <up_device_get_object_path@plt>
    14f8:	mov	r1, r0
    14fc:	ldr	r0, [pc, #484]	; 16e8 <main@@Base+0x748>
    1500:	add	r0, pc, r0
    1504:	bl	dcc <g_print@plt>
    1508:	b	1300 <main@@Base+0x360>
    150c:	ldr	r0, [pc, #472]	; 16ec <main@@Base+0x74c>
    1510:	mov	r4, #0
    1514:	ldr	r9, [pc, #468]	; 16f0 <main@@Base+0x750>
    1518:	add	r0, pc, r0
    151c:	bl	dcc <g_print@plt>
    1520:	ldr	r1, [pc, #460]	; 16f4 <main@@Base+0x754>
    1524:	ldr	r2, [pc, #460]	; 16f8 <main@@Base+0x758>
    1528:	mov	r3, r4
    152c:	add	r1, pc, r1
    1530:	str	r4, [sp]
    1534:	add	r2, pc, r2
    1538:	str	r4, [sp, #4]
    153c:	mov	r0, r7
    1540:	add	r9, pc, r9
    1544:	bl	eec <g_signal_connect_data@plt>
    1548:	ldr	r1, [pc, #428]	; 16fc <main@@Base+0x75c>
    154c:	ldr	r2, [pc, #428]	; 1700 <main@@Base+0x760>
    1550:	mov	r3, r4
    1554:	add	r1, pc, r1
    1558:	str	r4, [sp]
    155c:	add	r2, pc, r2
    1560:	str	r4, [sp, #4]
    1564:	mov	r0, r7
    1568:	bl	eec <g_signal_connect_data@plt>
    156c:	ldr	r2, [pc, #400]	; 1704 <main@@Base+0x764>
    1570:	mov	r3, r4
    1574:	mov	r1, r9
    1578:	add	r2, pc, r2
    157c:	str	r4, [sp]
    1580:	str	r4, [sp, #4]
    1584:	mov	r0, r7
    1588:	bl	eec <g_signal_connect_data@plt>
    158c:	mov	r0, r7
    1590:	bl	f1c <up_client_get_devices@plt>
    1594:	ldr	r3, [r0, #4]
    1598:	mov	r5, r0
    159c:	cmp	r3, r4
    15a0:	beq	15e0 <main@@Base+0x640>
    15a4:	ldr	sl, [pc, #348]	; 1708 <main@@Base+0x768>
    15a8:	mov	r6, r4
    15ac:	add	sl, pc, sl
    15b0:	ldr	r0, [r5]
    15b4:	mov	r3, #0
    15b8:	mov	r1, r9
    15bc:	mov	r2, sl
    15c0:	ldr	r0, [r0, r4, lsl #2]
    15c4:	add	r4, r4, #1
    15c8:	str	r6, [sp]
    15cc:	str	r6, [sp, #4]
    15d0:	bl	eec <g_signal_connect_data@plt>
    15d4:	ldr	r3, [r5, #4]
    15d8:	cmp	r4, r3
    15dc:	bcc	15b0 <main@@Base+0x610>
    15e0:	ldr	r3, [pc, #292]	; 170c <main@@Base+0x76c>
    15e4:	mov	r4, #1
    15e8:	add	r3, pc, r3
    15ec:	ldr	r0, [r3, #4]
    15f0:	bl	f70 <g_main_loop_run@plt>
    15f4:	b	1364 <main@@Base+0x3c4>
    15f8:	ldr	r0, [pc, #272]	; 1710 <main@@Base+0x770>
    15fc:	add	r0, pc, r0
    1600:	bl	dcc <g_print@plt>
    1604:	b	1470 <main@@Base+0x4d0>
    1608:	ldr	r3, [sp, #60]	; 0x3c
    160c:	mov	r1, #16
    1610:	ldr	r0, [pc, #252]	; 1714 <main@@Base+0x774>
    1614:	ldr	r2, [pc, #252]	; 1718 <main@@Base+0x778>
    1618:	add	r0, pc, r0
    161c:	ldr	r3, [r3, #8]
    1620:	add	r2, pc, r2
    1624:	bl	f88 <g_log@plt>
    1628:	ldr	r0, [sp, #60]	; 0x3c
    162c:	bl	f40 <g_error_free@plt>
    1630:	mov	r0, r9
    1634:	b	1370 <main@@Base+0x3d0>
    1638:	mov	r0, r5
    163c:	bl	e2c <up_device_to_text@plt>
    1640:	mov	r4, r0
    1644:	mov	r1, r0
    1648:	ldr	r0, [pc, #204]	; 171c <main@@Base+0x77c>
    164c:	add	r0, pc, r0
    1650:	bl	dcc <g_print@plt>
    1654:	mov	r0, r4
    1658:	bl	d84 <g_free@plt>
    165c:	b	14e4 <main@@Base+0x544>
    1660:	bl	ef8 <__stack_chk_fail@plt>
    1664:	andeq	r1, r1, r0, ror #30
    1668:	ldrdeq	r0, [r0], -r8
    166c:	andeq	r0, r0, ip, asr #29
    1670:	muleq	r0, r0, lr
    1674:	andeq	r0, r0, r4, ror lr
    1678:	muleq	r0, r4, lr
    167c:	andeq	r0, r0, r4, lsl #29
    1680:	muleq	r1, r8, pc	; <UNPREDICTABLE>
    1684:	andeq	r0, r0, r8, lsl #29
    1688:	andeq	r0, r0, r8, ror lr
    168c:	andeq	r0, r0, r4, ror lr
    1690:	andeq	r0, r0, r4, ror #28
    1694:	andeq	r0, r0, r0, lsl #29
    1698:	andeq	r0, r0, r8, ror #28
    169c:	andeq	r0, r0, r8, ror lr
    16a0:	andeq	r0, r0, r4, ror #28
    16a4:	andeq	r0, r0, r0, lsr #31
    16a8:	andeq	r0, r0, r0, ror #28
    16ac:	andeq	r0, r0, r8, asr lr
    16b0:	andeq	r0, r0, r0, ror #28
    16b4:	andeq	r0, r0, ip, lsr #29
    16b8:			; <UNDEFINED> instruction: 0x00000eb0
    16bc:	andeq	r0, r0, ip, lsr #29
    16c0:	strdeq	r0, [r0], -r8
    16c4:	andeq	r0, r0, r4, ror #27
    16c8:			; <UNDEFINED> instruction: 0x00000dbc
    16cc:	andeq	r0, r0, ip, lsr #20
    16d0:			; <UNDEFINED> instruction: 0x00000cb8
    16d4:	andeq	r0, r0, r4, ror #25
    16d8:	muleq	r0, ip, ip
    16dc:	muleq	r0, r4, ip
    16e0:	muleq	r0, ip, ip
    16e4:	andeq	r0, r0, ip, ror ip
    16e8:	ldrdeq	r0, [r0], -r4
    16ec:	andeq	r0, r0, ip, asr #23
    16f0:	andeq	r0, r0, r8, lsl #24
    16f4:	strdeq	r0, [r0], -ip
    16f8:	andeq	r0, r0, r8, lsr r7
    16fc:	andeq	r0, r0, r4, ror #23
    1700:			; <UNDEFINED> instruction: 0x000006b4
    1704:	andeq	r0, r0, r8, lsr r6
    1708:	andeq	r0, r0, r8, lsl #11
    170c:	andeq	r1, r1, r8, lsl sl
    1710:	andeq	r0, r0, r4, asr #20
    1714:	andeq	r0, r0, r4, asr #19
    1718:	andeq	r0, r0, r4, asr #19
    171c:	andeq	r0, r0, r8, lsl #21
    1720:	mov	fp, #0
    1724:	mov	lr, #0
    1728:	pop	{r1}		; (ldr r1, [sp], #4)
    172c:	mov	r2, sp
    1730:	push	{r2}		; (str r2, [sp, #-4]!)
    1734:	push	{r0}		; (str r0, [sp, #-4]!)
    1738:	ldr	sl, [pc, #40]	; 1768 <main@@Base+0x7c8>
    173c:	add	r3, pc, #36	; 0x24
    1740:	add	sl, sl, r3
    1744:	ldr	ip, [pc, #32]	; 176c <main@@Base+0x7cc>
    1748:	ldr	ip, [sl, ip]
    174c:	push	{ip}		; (str ip, [sp, #-4]!)
    1750:	ldr	r3, [pc, #24]	; 1770 <main@@Base+0x7d0>
    1754:	ldr	r3, [sl, r3]
    1758:	ldr	r0, [pc, #20]	; 1774 <main@@Base+0x7d4>
    175c:	ldr	r0, [sl, r0]
    1760:	bl	dc0 <__libc_start_main@plt>
    1764:	bl	d90 <abort@plt>
    1768:			; <UNDEFINED> instruction: 0x000117b4
    176c:	andeq	r0, r0, r0, asr #1
    1770:	ldrdeq	r0, [r0], -r4
    1774:	andeq	r0, r0, r0, ror #1
    1778:	ldr	r3, [pc, #20]	; 1794 <main@@Base+0x7f4>
    177c:	ldr	r2, [pc, #20]	; 1798 <main@@Base+0x7f8>
    1780:	add	r3, pc, r3
    1784:	ldr	r2, [r3, r2]
    1788:	cmp	r2, #0
    178c:	bxeq	lr
    1790:	b	df0 <__gmon_start__@plt>
    1794:	muleq	r1, r4, r7
    1798:	andeq	r0, r0, r4, asr #1
    179c:	ldr	r2, [pc, #60]	; 17e0 <main@@Base+0x840>
    17a0:	ldr	r0, [pc, #60]	; 17e4 <main@@Base+0x844>
    17a4:	add	r2, pc, r2
    17a8:	add	r0, pc, r0
    17ac:	add	r2, r2, #3
    17b0:	rsb	r2, r0, r2
    17b4:	push	{r3, lr}
    17b8:	cmp	r2, #6
    17bc:	ldr	r3, [pc, #36]	; 17e8 <main@@Base+0x848>
    17c0:	add	r3, pc, r3
    17c4:	popls	{r3, pc}
    17c8:	ldr	r2, [pc, #28]	; 17ec <main@@Base+0x84c>
    17cc:	ldr	r3, [r3, r2]
    17d0:	cmp	r3, #0
    17d4:	popeq	{r3, pc}
    17d8:	blx	r3
    17dc:	pop	{r3, pc}
    17e0:	andeq	r1, r1, r8, asr r8
    17e4:	andeq	r1, r1, r4, asr r8
    17e8:	andeq	r1, r1, r4, asr r7
    17ec:	andeq	r0, r0, ip, asr #1
    17f0:	push	{r3, lr}
    17f4:	ldr	r0, [pc, #64]	; 183c <main@@Base+0x89c>
    17f8:	ldr	r3, [pc, #64]	; 1840 <main@@Base+0x8a0>
    17fc:	add	r0, pc, r0
    1800:	ldr	r2, [pc, #60]	; 1844 <main@@Base+0x8a4>
    1804:	add	r3, pc, r3
    1808:	rsb	r3, r0, r3
    180c:	add	r2, pc, r2
    1810:	asr	r3, r3, #2
    1814:	add	r3, r3, r3, lsr #31
    1818:	asrs	r3, r3, #1
    181c:	popeq	{r3, pc}
    1820:	ldr	r1, [pc, #32]	; 1848 <main@@Base+0x8a8>
    1824:	ldr	r2, [r2, r1]
    1828:	cmp	r2, #0
    182c:	popeq	{r3, pc}
    1830:	mov	r1, r3
    1834:	blx	r2
    1838:	pop	{r3, pc}
    183c:	andeq	r1, r1, r0, lsl #16
    1840:	strdeq	r1, [r1], -r8
    1844:	andeq	r1, r1, r8, lsl #14
    1848:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    184c:	ldr	r2, [pc, #76]	; 18a0 <main@@Base+0x900>
    1850:	push	{r3, lr}
    1854:	add	r2, pc, r2
    1858:	ldr	r3, [pc, #68]	; 18a4 <main@@Base+0x904>
    185c:	ldrb	r2, [r2]
    1860:	add	r3, pc, r3
    1864:	cmp	r2, #0
    1868:	popne	{r3, pc}
    186c:	ldr	r2, [pc, #52]	; 18a8 <main@@Base+0x908>
    1870:	ldr	r3, [r3, r2]
    1874:	cmp	r3, #0
    1878:	beq	1888 <main@@Base+0x8e8>
    187c:	ldr	r0, [pc, #40]	; 18ac <main@@Base+0x90c>
    1880:	add	r0, pc, r0
    1884:	bl	f94 <__cxa_finalize@plt>
    1888:	bl	179c <main@@Base+0x7fc>
    188c:	ldr	r3, [pc, #28]	; 18b0 <main@@Base+0x910>
    1890:	mov	r2, #1
    1894:	add	r3, pc, r3
    1898:	strb	r2, [r3]
    189c:	pop	{r3, pc}
    18a0:	andeq	r1, r1, r8, lsr #15
    18a4:			; <UNDEFINED> instruction: 0x000116b4
    18a8:	ldrdeq	r0, [r0], -ip
    18ac:	andeq	r1, r1, r0, ror r5
    18b0:	andeq	r1, r1, r8, ror #14
    18b4:	ldr	r0, [pc, #52]	; 18f0 <main@@Base+0x950>
    18b8:	push	{r3, lr}
    18bc:	add	r0, pc, r0
    18c0:	ldr	r3, [pc, #44]	; 18f4 <main@@Base+0x954>
    18c4:	ldr	r2, [r0]
    18c8:	add	r3, pc, r3
    18cc:	cmp	r2, #0
    18d0:	beq	18e8 <main@@Base+0x948>
    18d4:	ldr	r2, [pc, #28]	; 18f8 <main@@Base+0x958>
    18d8:	ldr	r3, [r3, r2]
    18dc:	cmp	r3, #0
    18e0:	beq	18e8 <main@@Base+0x948>
    18e4:	blx	r3
    18e8:	pop	{r3, lr}
    18ec:	b	17f0 <main@@Base+0x850>
    18f0:	andeq	r1, r1, r0, lsr r5
    18f4:	andeq	r1, r1, ip, asr #12
    18f8:	andeq	r0, r0, r8, asr #1
    18fc:	ldr	r3, [pc, #304]	; 1a34 <main@@Base+0xa94>
    1900:	mov	r1, #0
    1904:	ldr	r2, [pc, #300]	; 1a38 <main@@Base+0xa98>
    1908:	add	r3, pc, r3
    190c:	ldr	ip, [pc, #296]	; 1a3c <main@@Base+0xa9c>
    1910:	push	{r4, r5, lr}
    1914:	sub	sp, sp, #52	; 0x34
    1918:	ldr	r4, [r3, r2]
    191c:	add	ip, pc, ip
    1920:	ldr	lr, [pc, #280]	; 1a40 <main@@Base+0xaa0>
    1924:	add	r3, sp, #32
    1928:	str	ip, [sp, #12]
    192c:	add	r2, sp, #28
    1930:	add	lr, pc, lr
    1934:	str	lr, [sp, #4]
    1938:	ldr	ip, [r4]
    193c:	mov	r5, r0
    1940:	str	r3, [sp]
    1944:	add	r3, sp, #36	; 0x24
    1948:	str	r1, [sp, #20]
    194c:	str	r3, [sp, #8]
    1950:	add	r3, sp, #40	; 0x28
    1954:	ldr	r1, [pc, #232]	; 1a44 <main@@Base+0xaa4>
    1958:	str	r3, [sp, #16]
    195c:	ldr	r3, [pc, #228]	; 1a48 <main@@Base+0xaa8>
    1960:	add	r1, pc, r1
    1964:	str	ip, [sp, #44]	; 0x2c
    1968:	add	r3, pc, r3
    196c:	bl	ea4 <g_object_get@plt>
    1970:	ldr	r0, [pc, #212]	; 1a4c <main@@Base+0xaac>
    1974:	ldr	r1, [sp, #28]
    1978:	add	r0, pc, r0
    197c:	bl	dcc <g_print@plt>
    1980:	ldr	r3, [sp, #32]
    1984:	ldr	r1, [pc, #196]	; 1a50 <main@@Base+0xab0>
    1988:	cmp	r3, #0
    198c:	add	r1, pc, r1
    1990:	ldreq	r1, [pc, #188]	; 1a54 <main@@Base+0xab4>
    1994:	addeq	r1, pc, r1
    1998:	ldr	r0, [pc, #184]	; 1a58 <main@@Base+0xab8>
    199c:	add	r0, pc, r0
    19a0:	bl	dcc <g_print@plt>
    19a4:	ldr	r3, [sp, #36]	; 0x24
    19a8:	ldr	r1, [pc, #172]	; 1a5c <main@@Base+0xabc>
    19ac:	cmp	r3, #0
    19b0:	add	r1, pc, r1
    19b4:	ldreq	r1, [pc, #164]	; 1a60 <main@@Base+0xac0>
    19b8:	addeq	r1, pc, r1
    19bc:	ldr	r0, [pc, #160]	; 1a64 <main@@Base+0xac4>
    19c0:	add	r0, pc, r0
    19c4:	bl	dcc <g_print@plt>
    19c8:	ldr	r3, [sp, #40]	; 0x28
    19cc:	ldr	r1, [pc, #148]	; 1a68 <main@@Base+0xac8>
    19d0:	cmp	r3, #0
    19d4:	add	r1, pc, r1
    19d8:	ldreq	r1, [pc, #140]	; 1a6c <main@@Base+0xacc>
    19dc:	addeq	r1, pc, r1
    19e0:	ldr	r0, [pc, #136]	; 1a70 <main@@Base+0xad0>
    19e4:	add	r0, pc, r0
    19e8:	bl	dcc <g_print@plt>
    19ec:	mov	r0, r5
    19f0:	bl	eb0 <up_client_get_critical_action@plt>
    19f4:	mov	r1, r0
    19f8:	mov	r5, r0
    19fc:	ldr	r0, [pc, #112]	; 1a74 <main@@Base+0xad4>
    1a00:	add	r0, pc, r0
    1a04:	bl	dcc <g_print@plt>
    1a08:	mov	r0, r5
    1a0c:	bl	d84 <g_free@plt>
    1a10:	ldr	r0, [sp, #28]
    1a14:	bl	d84 <g_free@plt>
    1a18:	ldr	r2, [sp, #44]	; 0x2c
    1a1c:	ldr	r3, [r4]
    1a20:	cmp	r2, r3
    1a24:	bne	1a30 <main@@Base+0xa90>
    1a28:	add	sp, sp, #52	; 0x34
    1a2c:	pop	{r4, r5, pc}
    1a30:	bl	ef8 <__stack_chk_fail@plt>
    1a34:	andeq	r1, r1, ip, lsl #12
    1a38:	ldrdeq	r0, [r0], -r8
    1a3c:	andeq	r0, r0, r8, ror r4
    1a40:	andeq	r0, r0, r4, asr r4
    1a44:	andeq	r0, r0, r8, lsl #8
    1a48:	andeq	r0, r0, r0, lsl r4
    1a4c:	andeq	r0, r0, ip, lsr #8
    1a50:	ldrdeq	r0, [r0], -r4
    1a54:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a58:	andeq	r0, r0, r0, lsr #8
    1a5c:			; <UNDEFINED> instruction: 0x000003b0
    1a60:	andeq	r0, r0, ip, lsr #7
    1a64:	andeq	r0, r0, r4, lsl r4
    1a68:	andeq	r0, r0, ip, lsl #7
    1a6c:	andeq	r0, r0, r8, lsl #7
    1a70:	andeq	r0, r0, r8, lsl #8
    1a74:	andeq	r0, r0, r4, lsl #8
    1a78:	ldr	r3, [pc, #172]	; 1b2c <main@@Base+0xb8c>
    1a7c:	ldr	r2, [pc, #172]	; 1b30 <main@@Base+0xb90>
    1a80:	add	r3, pc, r3
    1a84:	push	{r4, r5, r6, lr}
    1a88:	sub	sp, sp, #16
    1a8c:	ldr	r5, [r3, r2]
    1a90:	mov	r0, sp
    1a94:	ldr	r3, [r5]
    1a98:	str	r3, [sp, #12]
    1a9c:	bl	ee0 <time@plt>
    1aa0:	mov	r1, #0
    1aa4:	add	r0, sp, #4
    1aa8:	bl	e74 <gettimeofday@plt>
    1aac:	mov	r0, #255	; 0xff
    1ab0:	bl	f04 <g_malloc0@plt>
    1ab4:	mov	r4, r0
    1ab8:	mov	r0, sp
    1abc:	bl	d9c <localtime@plt>
    1ac0:	ldr	r2, [pc, #108]	; 1b34 <main@@Base+0xb94>
    1ac4:	mov	r1, #254	; 0xfe
    1ac8:	add	r2, pc, r2
    1acc:	mov	r3, r0
    1ad0:	mov	r0, r4
    1ad4:	bl	f10 <strftime@plt>
    1ad8:	ldr	r3, [sp, #8]
    1adc:	movw	r2, #19923	; 0x4dd3
    1ae0:	movt	r2, #4194	; 0x1062
    1ae4:	ldr	r0, [pc, #76]	; 1b38 <main@@Base+0xb98>
    1ae8:	mov	r1, r4
    1aec:	smull	ip, r2, r2, r3
    1af0:	asr	r3, r3, #31
    1af4:	add	r0, pc, r0
    1af8:	rsb	r2, r3, r2, asr #6
    1afc:	bl	e80 <g_strdup_printf@plt>
    1b00:	mov	r6, r0
    1b04:	mov	r0, r4
    1b08:	bl	d84 <g_free@plt>
    1b0c:	ldr	r2, [sp, #12]
    1b10:	ldr	r3, [r5]
    1b14:	mov	r0, r6
    1b18:	cmp	r2, r3
    1b1c:	bne	1b28 <main@@Base+0xb88>
    1b20:	add	sp, sp, #16
    1b24:	pop	{r4, r5, r6, pc}
    1b28:	bl	ef8 <__stack_chk_fail@plt>
    1b2c:	muleq	r1, r4, r4
    1b30:	ldrdeq	r0, [r0], -r8
    1b34:	andeq	r0, r0, r4, asr r3
    1b38:	andeq	r0, r0, r4, lsr r3
    1b3c:	push	{r3, r4, r5, lr}
    1b40:	mov	r5, r0
    1b44:	bl	1a78 <main@@Base+0xad8>
    1b48:	mov	r4, r0
    1b4c:	mov	r0, r5
    1b50:	bl	dfc <up_device_get_object_path@plt>
    1b54:	mov	r1, r4
    1b58:	mov	r2, r0
    1b5c:	ldr	r0, [pc, #72]	; 1bac <main@@Base+0xc0c>
    1b60:	add	r0, pc, r0
    1b64:	bl	dcc <g_print@plt>
    1b68:	ldr	r3, [pc, #64]	; 1bb0 <main@@Base+0xc10>
    1b6c:	ldr	r1, [pc, r3]
    1b70:	cmp	r1, #0
    1b74:	moveq	r5, r1
    1b78:	beq	1b98 <main@@Base+0xbf8>
    1b7c:	mov	r0, r5
    1b80:	bl	e2c <up_device_to_text@plt>
    1b84:	mov	r5, r0
    1b88:	mov	r1, r0
    1b8c:	ldr	r0, [pc, #32]	; 1bb4 <main@@Base+0xc14>
    1b90:	add	r0, pc, r0
    1b94:	bl	dcc <g_print@plt>
    1b98:	mov	r0, r4
    1b9c:	bl	d84 <g_free@plt>
    1ba0:	mov	r0, r5
    1ba4:	pop	{r3, r4, r5, lr}
    1ba8:	b	d84 <g_free@plt>
    1bac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1bb0:	muleq	r1, r4, r4
    1bb4:	andeq	r0, r0, r4, asr #10
    1bb8:	push	{r3, r4, r5, lr}
    1bbc:	mov	r5, r0
    1bc0:	bl	1a78 <main@@Base+0xad8>
    1bc4:	mov	r4, r0
    1bc8:	ldr	r0, [pc, #60]	; 1c0c <main@@Base+0xc6c>
    1bcc:	mov	r1, r4
    1bd0:	add	r0, pc, r0
    1bd4:	bl	dcc <g_print@plt>
    1bd8:	ldr	r3, [pc, #48]	; 1c10 <main@@Base+0xc70>
    1bdc:	add	r3, pc, r3
    1be0:	ldr	r3, [r3]
    1be4:	cmp	r3, #0
    1be8:	beq	1c00 <main@@Base+0xc60>
    1bec:	mov	r0, r5
    1bf0:	bl	18fc <main@@Base+0x95c>
    1bf4:	ldr	r0, [pc, #24]	; 1c14 <main@@Base+0xc74>
    1bf8:	add	r0, pc, r0
    1bfc:	bl	dcc <g_print@plt>
    1c00:	mov	r0, r4
    1c04:	pop	{r3, r4, r5, lr}
    1c08:	b	d84 <g_free@plt>
    1c0c:	andeq	r0, r0, r0, lsl #5
    1c10:	andeq	r1, r1, r4, lsr #8
    1c14:	andeq	r0, r0, ip, ror #4
    1c18:	push	{r3, r4, r5, lr}
    1c1c:	mov	r5, r1
    1c20:	bl	1a78 <main@@Base+0xad8>
    1c24:	mov	r2, r5
    1c28:	mov	r4, r0
    1c2c:	ldr	r0, [pc, #52]	; 1c68 <main@@Base+0xcc8>
    1c30:	mov	r1, r4
    1c34:	add	r0, pc, r0
    1c38:	bl	dcc <g_print@plt>
    1c3c:	ldr	r3, [pc, #40]	; 1c6c <main@@Base+0xccc>
    1c40:	add	r3, pc, r3
    1c44:	ldr	r3, [r3]
    1c48:	cmp	r3, #0
    1c4c:	beq	1c5c <main@@Base+0xcbc>
    1c50:	ldr	r0, [pc, #24]	; 1c70 <main@@Base+0xcd0>
    1c54:	add	r0, pc, r0
    1c58:	bl	dcc <g_print@plt>
    1c5c:	mov	r0, r4
    1c60:	pop	{r3, r4, r5, lr}
    1c64:	b	d84 <g_free@plt>
    1c68:	andeq	r0, r0, r4, lsr r2
    1c6c:	andeq	r1, r1, r0, asr #7
    1c70:	andeq	r0, r0, r0, lsl r2
    1c74:	push	{r3, r4, r5, lr}
    1c78:	mov	r5, r1
    1c7c:	bl	1a78 <main@@Base+0xad8>
    1c80:	mov	r4, r0
    1c84:	mov	r0, r5
    1c88:	bl	dfc <up_device_get_object_path@plt>
    1c8c:	mov	r1, r4
    1c90:	mov	r2, r0
    1c94:	ldr	r0, [pc, #76]	; 1ce8 <main@@Base+0xd48>
    1c98:	add	r0, pc, r0
    1c9c:	bl	dcc <g_print@plt>
    1ca0:	ldr	r3, [pc, #68]	; 1cec <main@@Base+0xd4c>
    1ca4:	add	r3, pc, r3
    1ca8:	ldr	r3, [r3]
    1cac:	cmp	r3, #0
    1cb0:	moveq	r5, r3
    1cb4:	beq	1cd4 <main@@Base+0xd34>
    1cb8:	mov	r0, r5
    1cbc:	bl	e2c <up_device_to_text@plt>
    1cc0:	mov	r5, r0
    1cc4:	mov	r1, r0
    1cc8:	ldr	r0, [pc, #32]	; 1cf0 <main@@Base+0xd50>
    1ccc:	add	r0, pc, r0
    1cd0:	bl	dcc <g_print@plt>
    1cd4:	mov	r0, r4
    1cd8:	bl	d84 <g_free@plt>
    1cdc:	mov	r0, r5
    1ce0:	pop	{r3, r4, r5, lr}
    1ce4:	b	d84 <g_free@plt>
    1ce8:	andeq	r0, r0, ip, ror #3
    1cec:	andeq	r1, r1, ip, asr r3
    1cf0:	andeq	r0, r0, r8, lsl #8

00001cf4 <__libc_csu_init@@Base>:
    1cf4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    1cf8:	mov	r7, r0
    1cfc:	ldr	r6, [pc, #76]	; 1d50 <__libc_csu_init@@Base+0x5c>
    1d00:	mov	r8, r1
    1d04:	ldr	r5, [pc, #72]	; 1d54 <__libc_csu_init@@Base+0x60>
    1d08:	mov	r9, r2
    1d0c:	add	r6, pc, r6
    1d10:	bl	d64 <_init@@Base>
    1d14:	add	r5, pc, r5
    1d18:	rsb	r6, r5, r6
    1d1c:	asrs	r6, r6, #2
    1d20:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    1d24:	sub	r5, r5, #4
    1d28:	mov	r4, #0
    1d2c:	add	r4, r4, #1
    1d30:	ldr	r3, [r5, #4]!
    1d34:	mov	r0, r7
    1d38:	mov	r1, r8
    1d3c:	mov	r2, r9
    1d40:	blx	r3
    1d44:	cmp	r4, r6
    1d48:	bne	1d2c <__libc_csu_init@@Base+0x38>
    1d4c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    1d50:	ldrdeq	r1, [r1], -ip
    1d54:	ldrdeq	r1, [r1], -r0

00001d58 <__libc_csu_fini@@Base>:
    1d58:	bx	lr

Disassembly of section .fini:

00001d5c <_fini@@Base>:
    1d5c:	push	{r3, lr}
    1d60:	pop	{r3, pc}
