
centos-preinstalled/containers_rtp_decoder:     file format elf32-littlearm


Disassembly of section .init:

00010aa0 <_init@@Base>:
   10aa0:	push	{r3, lr}
   10aa4:	bl	11680 <_start@@Base+0x3c>
   10aa8:	pop	{r3, pc}

Disassembly of section .plt:

00010aac <free@plt-0x14>:
   10aac:	push	{lr}		; (str lr, [sp, #-4]!)
   10ab0:	ldr	lr, [pc, #4]	; 10abc <_init@@Base+0x1c>
   10ab4:	add	lr, pc, lr
   10ab8:	ldr	pc, [lr, #8]!
   10abc:	andeq	r1, r1, r4, asr #10

00010ac0 <free@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #69632	; 0x11000
   10ac8:	ldr	pc, [ip, #1348]!	; 0x544

00010acc <_IO_getc@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1340]!	; 0x53c

00010ad8 <select@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1332]!	; 0x534

00010ae4 <__stack_chk_fail@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1324]!	; 0x52c

00010af0 <vc_container_io_control@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1316]!	; 0x524

00010afc <_IO_putc@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1308]!	; 0x51c

00010b08 <tcsetattr@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1300]!	; 0x514

00010b14 <vc_container_io_open@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1292]!	; 0x50c

00010b20 <malloc@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1284]!	; 0x504

00010b2c <__libc_start_main@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b38 <__gmon_start__@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b44 <vc_container_io_close@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b50 <vc_container_io_write@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b5c <__sprintf_chk@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b68 <vc_container_log@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b74 <vc_container_io_read@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b80 <strncmp@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b8c <abort@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b98 <tcgetattr@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1204]!	; 0x4b4

Disassembly of section .text:

00010ba4 <main@@Base>:
   10ba4:	ldr	r3, [pc, #2512]	; 1157c <main@@Base+0x9d8>
   10ba8:	cmp	r0, #1
   10bac:	ldr	r2, [pc, #2508]	; 11580 <main@@Base+0x9dc>
   10bb0:	add	r3, pc, r3
   10bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bb8:	sub	sp, sp, #116	; 0x74
   10bbc:	ldr	r2, [r3, r2]
   10bc0:	mov	r6, r0
   10bc4:	mov	r5, r1
   10bc8:	ldr	r3, [r2]
   10bcc:	str	r2, [sp, #84]	; 0x54
   10bd0:	str	r3, [sp, #108]	; 0x6c
   10bd4:	ble	10c48 <main@@Base+0xa4>
   10bd8:	ldr	r3, [r1, #4]
   10bdc:	mov	r4, #1
   10be0:	ldrb	r2, [r3]
   10be4:	cmp	r2, #45	; 0x2d
   10be8:	bne	11150 <main@@Base+0x5ac>
   10bec:	ldr	sl, [pc, #2448]	; 11584 <main@@Base+0x9e0>
   10bf0:	mov	r7, r4
   10bf4:	ldr	ip, [pc, #2444]	; 11588 <main@@Base+0x9e4>
   10bf8:	ldr	r9, [pc, #2444]	; 1158c <main@@Base+0x9e8>
   10bfc:	add	sl, pc, sl
   10c00:	ldr	fp, [pc, #2440]	; 11590 <main@@Base+0x9ec>
   10c04:	add	ip, pc, ip
   10c08:	ldr	r8, [pc, #2436]	; 11594 <main@@Base+0x9f0>
   10c0c:	add	r9, pc, r9
   10c10:	add	fp, pc, fp
   10c14:	add	r8, pc, r8
   10c18:	ldrb	r2, [r3, #1]
   10c1c:	cmp	r2, #115	; 0x73
   10c20:	beq	11194 <main@@Base+0x5f0>
   10c24:	cmp	r2, #118	; 0x76
   10c28:	beq	11164 <main@@Base+0x5c0>
   10c2c:	cmp	r2, #104	; 0x68
   10c30:	beq	11130 <main@@Base+0x58c>
   10c34:	ldr	r2, [pc, #2396]	; 11598 <main@@Base+0x9f4>
   10c38:	mov	r0, #0
   10c3c:	mov	r1, #1
   10c40:	add	r2, pc, r2
   10c44:	bl	10b68 <vc_container_log@plt>
   10c48:	ldr	r4, [pc, #2380]	; 1159c <main@@Base+0x9f8>
   10c4c:	add	r4, pc, r4
   10c50:	ldr	r6, [r4]
   10c54:	cmp	r6, #0
   10c58:	bne	111d0 <main@@Base+0x62c>
   10c5c:	ldr	r8, [r4, #16]
   10c60:	cmp	r8, #0
   10c64:	beq	111d0 <main@@Base+0x62c>
   10c68:	movw	r0, #65000	; 0xfde8
   10c6c:	bl	10b20 <malloc@plt>
   10c70:	subs	r1, r0, #0
   10c74:	str	r1, [sp, #64]	; 0x40
   10c78:	beq	1148c <main@@Base+0x8e8>
   10c7c:	add	r7, sp, #104	; 0x68
   10c80:	mov	r0, r8
   10c84:	mov	r1, r6
   10c88:	mov	r2, r7
   10c8c:	bl	10b14 <vc_container_io_open@plt>
   10c90:	subs	r2, r0, #0
   10c94:	str	r2, [sp, #68]	; 0x44
   10c98:	beq	114f8 <main@@Base+0x954>
   10c9c:	mov	r5, #4
   10ca0:	mov	r4, #8000	; 0x1f40
   10ca4:	mov	r6, r2
   10ca8:	mov	r0, r6
   10cac:	mov	r1, #14
   10cb0:	mov	r2, r4
   10cb4:	bl	10af0 <vc_container_io_control@plt>
   10cb8:	cmp	r0, #0
   10cbc:	bne	10ccc <main@@Base+0x128>
   10cc0:	subs	r5, r5, #1
   10cc4:	lsl	r4, r4, #1
   10cc8:	bne	10ca8 <main@@Base+0x104>
   10ccc:	ldr	r4, [pc, #2252]	; 115a0 <main@@Base+0x9fc>
   10cd0:	add	r4, pc, r4
   10cd4:	ldr	r0, [r4, #4]
   10cd8:	cmp	r0, #0
   10cdc:	beq	1152c <main@@Base+0x988>
   10ce0:	mov	r2, r7
   10ce4:	mov	r1, #1
   10ce8:	bl	10b14 <vc_container_io_open@plt>
   10cec:	subs	r3, r0, #0
   10cf0:	str	r3, [sp, #44]	; 0x2c
   10cf4:	beq	11534 <main@@Base+0x990>
   10cf8:	ldr	r3, [r4, #8]
   10cfc:	cmp	r3, #0
   10d00:	beq	114a8 <main@@Base+0x904>
   10d04:	mov	r1, #15
   10d08:	mov	r2, #20
   10d0c:	ldr	r0, [sp, #68]	; 0x44
   10d10:	movw	r4, #64996	; 0xfde4
   10d14:	bl	10af0 <vc_container_io_control@plt>
   10d18:	mov	r0, #1
   10d1c:	bl	11840 <nb_set_nonblocking_input@@Base>
   10d20:	ldr	r2, [pc, #2172]	; 115a4 <main@@Base+0xa00>
   10d24:	ldr	r3, [pc, #2172]	; 115a8 <main@@Base+0xa04>
   10d28:	ldr	r1, [sp, #64]	; 0x40
   10d2c:	add	r2, pc, r2
   10d30:	add	r3, pc, r3
   10d34:	ldr	r7, [pc, #2160]	; 115ac <main@@Base+0xa08>
   10d38:	str	r2, [sp, #92]	; 0x5c
   10d3c:	str	r3, [sp, #60]	; 0x3c
   10d40:	add	r7, pc, r7
   10d44:	ldr	r2, [pc, #2148]	; 115b0 <main@@Base+0xa0c>
   10d48:	ldr	r3, [pc, #2148]	; 115b4 <main@@Base+0xa10>
   10d4c:	add	r2, pc, r2
   10d50:	str	r1, [sp, #40]	; 0x28
   10d54:	add	r3, pc, r3
   10d58:	str	r2, [sp, #96]	; 0x60
   10d5c:	str	r3, [sp, #100]	; 0x64
   10d60:	str	r7, [sp, #56]	; 0x38
   10d64:	ldr	r1, [sp, #40]	; 0x28
   10d68:	mov	r2, r4
   10d6c:	ldr	r0, [sp, #68]	; 0x44
   10d70:	add	r5, r1, #4
   10d74:	mov	r1, r5
   10d78:	bl	10b74 <vc_container_io_read@plt>
   10d7c:	cmp	r0, #0
   10d80:	beq	110d4 <main@@Base+0x530>
   10d84:	ldr	r2, [sp, #40]	; 0x28
   10d88:	cmp	r0, #1
   10d8c:	lsr	r3, r0, #8
   10d90:	sub	r4, r4, #4
   10d94:	rsb	r4, r0, r4
   10d98:	add	r5, r5, r0
   10d9c:	strb	r3, [r2, #1]
   10da0:	lsr	r3, r0, #16
   10da4:	strb	r3, [r2, #2]
   10da8:	lsr	r3, r0, #24
   10dac:	strb	r3, [r2, #3]
   10db0:	movls	r3, #0
   10db4:	ldrbhi	r3, [r2, #5]
   10db8:	strb	r0, [r2]
   10dbc:	movw	r2, #1499	; 0x5db
   10dc0:	str	r5, [sp, #40]	; 0x28
   10dc4:	lsrhi	r3, r3, #7
   10dc8:	cmp	r4, r2
   10dcc:	orrls	r3, r3, #1
   10dd0:	cmp	r3, #0
   10dd4:	beq	110d4 <main@@Base+0x530>
   10dd8:	ldr	r3, [sp, #44]	; 0x2c
   10ddc:	cmp	r3, #0
   10de0:	beq	10df8 <main@@Base+0x254>
   10de4:	ldr	r4, [pc, #1996]	; 115b8 <main@@Base+0xa14>
   10de8:	add	r4, pc, r4
   10dec:	ldr	r5, [r4, #8]
   10df0:	cmp	r5, #0
   10df4:	beq	11444 <main@@Base+0x8a0>
   10df8:	ldr	r3, [sp, #64]	; 0x40
   10dfc:	ldr	r1, [sp, #40]	; 0x28
   10e00:	cmp	r3, r1
   10e04:	bcs	1151c <main@@Base+0x978>
   10e08:	ldr	r2, [pc, #1964]	; 115bc <main@@Base+0xa18>
   10e0c:	mov	r6, r3
   10e10:	ldr	r1, [pc, #1960]	; 115c0 <main@@Base+0xa1c>
   10e14:	ldr	r3, [pc, #1960]	; 115c4 <main@@Base+0xa20>
   10e18:	add	r2, pc, r2
   10e1c:	add	r1, pc, r1
   10e20:	str	r2, [sp, #76]	; 0x4c
   10e24:	add	r3, pc, r3
   10e28:	str	r1, [sp, #80]	; 0x50
   10e2c:	str	r3, [sp, #88]	; 0x58
   10e30:	ldrb	r3, [r6, #2]
   10e34:	ldr	r2, [sp, #44]	; 0x2c
   10e38:	ldrb	r0, [r6, #3]
   10e3c:	cmp	r2, #0
   10e40:	ldrb	r1, [r6]
   10e44:	lsl	r3, r3, #16
   10e48:	ldrb	r2, [r6, #1]
   10e4c:	orr	r3, r3, r0, lsl #24
   10e50:	orr	r3, r3, r1
   10e54:	orr	r2, r3, r2, lsl #8
   10e58:	str	r2, [sp, #32]
   10e5c:	beq	10e70 <main@@Base+0x2cc>
   10e60:	ldr	r1, [sp, #56]	; 0x38
   10e64:	ldr	r3, [r1, #8]
   10e68:	cmp	r3, #0
   10e6c:	bne	112c4 <main@@Base+0x720>
   10e70:	ldr	r2, [sp, #32]
   10e74:	cmp	r2, #11
   10e78:	bls	1130c <main@@Base+0x768>
   10e7c:	ldr	r1, [sp, #60]	; 0x3c
   10e80:	ldrb	r4, [r6, #6]
   10e84:	ldrb	r2, [r6, #4]
   10e88:	ldr	r3, [r1, #20]
   10e8c:	ldrb	r1, [r6, #10]
   10e90:	cmp	r3, #0
   10e94:	ldrb	r3, [r6, #7]
   10e98:	str	r2, [sp, #36]	; 0x24
   10e9c:	orr	r4, r3, r4, lsl #8
   10ea0:	ldrb	r3, [r6, #8]
   10ea4:	ldrb	r5, [r6, #5]
   10ea8:	ldrb	fp, [r6, #9]
   10eac:	str	r3, [sp, #48]	; 0x30
   10eb0:	str	r1, [sp, #52]	; 0x34
   10eb4:	ldrb	r8, [r6, #11]
   10eb8:	ldrb	r9, [r6, #12]
   10ebc:	ldrb	sl, [r6, #13]
   10ec0:	ldrb	ip, [r6, #14]
   10ec4:	ldrb	r7, [r6, #15]
   10ec8:	beq	10f38 <main@@Base+0x394>
   10ecc:	ldr	r2, [sp, #60]	; 0x3c
   10ed0:	ldrh	r3, [r2, #24]
   10ed4:	cmp	r4, r3
   10ed8:	beq	10f38 <main@@Base+0x394>
   10edc:	rsb	r2, r3, r4
   10ee0:	mov	r0, #0
   10ee4:	mov	r1, #2
   10ee8:	str	r4, [sp]
   10eec:	uxth	r2, r2
   10ef0:	str	r2, [sp, #72]	; 0x48
   10ef4:	ldr	r2, [sp, #76]	; 0x4c
   10ef8:	str	ip, [sp, #28]
   10efc:	bl	10b68 <vc_container_log@plt>
   10f00:	ldr	r1, [sp, #72]	; 0x48
   10f04:	ldr	ip, [sp, #28]
   10f08:	sxth	r3, r1
   10f0c:	cmp	r3, #0
   10f10:	strle	ip, [sp, #28]
   10f14:	rsble	r3, r3, #0
   10f18:	movgt	r0, #0
   10f1c:	movgt	r1, #2
   10f20:	ldrgt	r2, [sp, #80]	; 0x50
   10f24:	movle	r0, #0
   10f28:	movle	r1, #2
   10f2c:	ldrle	r2, [sp, #88]	; 0x58
   10f30:	bl	10b68 <vc_container_log@plt>
   10f34:	ldr	ip, [sp, #28]
   10f38:	ldr	r3, [pc, #1672]	; 115c8 <main@@Base+0xa24>
   10f3c:	mov	r0, #1
   10f40:	add	r2, r4, r0
   10f44:	add	r3, pc, r3
   10f48:	ldr	r1, [r3, #12]
   10f4c:	str	r0, [r3, #20]
   10f50:	cmp	r1, r0
   10f54:	strh	r2, [r3, #24]
   10f58:	bls	110b0 <main@@Base+0x50c>
   10f5c:	ldr	r2, [sp, #36]	; 0x24
   10f60:	tst	r5, #128	; 0x80
   10f64:	and	r5, r5, #127	; 0x7f
   10f68:	lsr	r3, r2, #6
   10f6c:	bne	113f4 <main@@Base+0x850>
   10f70:	ldr	r2, [pc, #1620]	; 115cc <main@@Base+0xa28>
   10f74:	add	r2, pc, r2
   10f78:	ldr	r1, [sp, #48]	; 0x30
   10f7c:	lsl	fp, fp, #16
   10f80:	str	r2, [sp, #4]
   10f84:	lsl	sl, sl, #16
   10f88:	ldr	r2, [sp, #32]
   10f8c:	orr	r9, sl, r9, lsl #24
   10f90:	orr	fp, fp, r1, lsl #24
   10f94:	ldr	r1, [sp, #52]	; 0x34
   10f98:	orr	r8, fp, r8
   10f9c:	orr	r7, r9, r7
   10fa0:	orr	r7, r7, ip, lsl #8
   10fa4:	mov	r0, #0
   10fa8:	orr	r8, r8, r1, lsl #8
   10fac:	str	r8, [sp, #12]
   10fb0:	sub	r8, r2, #12
   10fb4:	ldr	r2, [pc, #1556]	; 115d0 <main@@Base+0xa2c>
   10fb8:	str	r7, [sp, #16]
   10fbc:	mov	r1, #2
   10fc0:	str	r5, [sp]
   10fc4:	add	r2, pc, r2
   10fc8:	str	r4, [sp, #8]
   10fcc:	add	r9, r6, #16
   10fd0:	bl	10b68 <vc_container_log@plt>
   10fd4:	ldr	r3, [pc, #1528]	; 115d4 <main@@Base+0xa30>
   10fd8:	add	r3, pc, r3
   10fdc:	ldr	r3, [r3, #12]
   10fe0:	cmp	r3, #2
   10fe4:	bls	110b0 <main@@Base+0x50c>
   10fe8:	ldr	r3, [sp, #36]	; 0x24
   10fec:	ands	r7, r3, #15
   10ff0:	beq	1106c <main@@Base+0x4c8>
   10ff4:	lsl	fp, r7, #2
   10ff8:	mov	r0, #0
   10ffc:	cmp	r8, fp
   11000:	bcc	11400 <main@@Base+0x85c>
   11004:	ldr	r2, [pc, #1484]	; 115d8 <main@@Base+0xa34>
   11008:	mov	r1, #2
   1100c:	ldr	sl, [pc, #1480]	; 115dc <main@@Base+0xa38>
   11010:	mov	r4, r9
   11014:	add	r2, pc, r2
   11018:	mov	r5, #0
   1101c:	bl	10b68 <vc_container_log@plt>
   11020:	add	sl, pc, sl
   11024:	ldrb	r3, [r4, #1]
   11028:	add	r5, r5, #1
   1102c:	ldrb	lr, [r4]
   11030:	mov	r0, #0
   11034:	ldrb	r2, [r4, #3]
   11038:	mov	r1, #2
   1103c:	ldrb	ip, [r4, #2]
   11040:	lsl	r3, r3, #16
   11044:	orr	r3, r3, lr, lsl #24
   11048:	add	r4, r4, #4
   1104c:	orr	r3, r3, r2
   11050:	mov	r2, sl
   11054:	orr	r3, r3, ip, lsl #8
   11058:	bl	10b68 <vc_container_log@plt>
   1105c:	cmp	r7, r5
   11060:	bhi	11024 <main@@Base+0x480>
   11064:	add	r9, r9, fp
   11068:	sub	r8, r8, r7, lsl #2
   1106c:	ldr	r1, [sp, #36]	; 0x24
   11070:	tst	r1, #16
   11074:	bne	11378 <main@@Base+0x7d4>
   11078:	ldr	r3, [pc, #1376]	; 115e0 <main@@Base+0xa3c>
   1107c:	add	r3, pc, r3
   11080:	ldr	r3, [r3, #12]
   11084:	cmp	r3, #3
   11088:	bls	110b0 <main@@Base+0x50c>
   1108c:	ldr	r2, [pc, #1360]	; 115e4 <main@@Base+0xa40>
   11090:	mov	r0, #0
   11094:	mov	r1, #2
   11098:	mov	r3, r8
   1109c:	add	r2, pc, r2
   110a0:	bl	10b68 <vc_container_log@plt>
   110a4:	mov	r0, r9
   110a8:	mov	r1, r8
   110ac:	bl	11778 <_start@@Base+0x134>
   110b0:	ldr	r2, [sp, #32]
   110b4:	add	r6, r6, #4
   110b8:	ldr	r3, [sp, #40]	; 0x28
   110bc:	add	r6, r6, r2
   110c0:	cmp	r3, r6
   110c4:	bhi	10e30 <main@@Base+0x28c>
   110c8:	ldr	r3, [sp, #64]	; 0x40
   110cc:	movw	r4, #64996	; 0xfde4
   110d0:	str	r3, [sp, #40]	; 0x28
   110d4:	bl	118c0 <nb_char_available@@Base>
   110d8:	cmp	r0, #0
   110dc:	moveq	r0, #1
   110e0:	bne	11350 <main@@Base+0x7ac>
   110e4:	ldr	r1, [sp, #68]	; 0x44
   110e8:	ldr	r3, [r1, #36]	; 0x24
   110ec:	cmp	r3, #0
   110f0:	beq	1136c <main@@Base+0x7c8>
   110f4:	cmp	r3, #18
   110f8:	beq	1136c <main@@Base+0x7c8>
   110fc:	mov	r0, #0
   11100:	bl	11840 <nb_set_nonblocking_input@@Base>
   11104:	ldr	r2, [sp, #44]	; 0x2c
   11108:	cmp	r2, #0
   1110c:	beq	11118 <main@@Base+0x574>
   11110:	ldr	r0, [sp, #44]	; 0x2c
   11114:	bl	10b44 <vc_container_io_close@plt>
   11118:	mov	r4, #0
   1111c:	ldr	r0, [sp, #68]	; 0x44
   11120:	bl	10b44 <vc_container_io_close@plt>
   11124:	ldr	r0, [sp, #64]	; 0x40
   11128:	bl	10ac0 <free@plt>
   1112c:	b	112a4 <main@@Base+0x700>
   11130:	str	r7, [r8]
   11134:	add	r4, r4, #1
   11138:	cmp	r6, r4
   1113c:	ble	10c48 <main@@Base+0xa4>
   11140:	ldr	r3, [r5, r4, lsl #2]
   11144:	ldrb	r2, [r3]
   11148:	cmp	r2, #45	; 0x2d
   1114c:	beq	10c18 <main@@Base+0x74>
   11150:	ldr	r3, [pc, #1168]	; 115e8 <main@@Base+0xa44>
   11154:	ldr	r2, [r5, r4, lsl #2]
   11158:	add	r3, pc, r3
   1115c:	str	r2, [r3, #16]
   11160:	b	10c48 <main@@Base+0xa4>
   11164:	ldrb	r2, [r3, #2]
   11168:	add	r3, r3, #3
   1116c:	str	r7, [r9, #12]
   11170:	cmp	r2, #118	; 0x76
   11174:	bne	11134 <main@@Base+0x590>
   11178:	rsb	r0, r3, #2
   1117c:	add	r1, r3, r0
   11180:	ldrb	r2, [r3], #1
   11184:	cmp	r2, #118	; 0x76
   11188:	beq	1117c <main@@Base+0x5d8>
   1118c:	str	r1, [fp, #12]
   11190:	b	11134 <main@@Base+0x590>
   11194:	add	r4, r4, #1
   11198:	cmp	r6, r4
   1119c:	ble	11134 <main@@Base+0x590>
   111a0:	ldr	r3, [r5, r4, lsl #2]
   111a4:	mov	r1, ip
   111a8:	mov	r2, #8
   111ac:	mov	r0, r3
   111b0:	str	r3, [sl, #4]
   111b4:	str	ip, [sp, #28]
   111b8:	bl	10b80 <strncmp@plt>
   111bc:	ldr	ip, [sp, #28]
   111c0:	rsbs	r0, r0, #1
   111c4:	movcc	r0, #0
   111c8:	str	r0, [sl, #8]
   111cc:	b	11134 <main@@Base+0x590>
   111d0:	ldr	r2, [pc, #1044]	; 115ec <main@@Base+0xa48>
   111d4:	mov	r0, #0
   111d8:	ldr	r4, [r5]
   111dc:	mov	r1, #2
   111e0:	add	r2, pc, r2
   111e4:	bl	10b68 <vc_container_log@plt>
   111e8:	ldr	r2, [pc, #1024]	; 115f0 <main@@Base+0xa4c>
   111ec:	mov	r3, r4
   111f0:	mov	r0, #0
   111f4:	mov	r1, #2
   111f8:	add	r2, pc, r2
   111fc:	bl	10b68 <vc_container_log@plt>
   11200:	ldr	r2, [pc, #1004]	; 115f4 <main@@Base+0xa50>
   11204:	mov	r0, #0
   11208:	mov	r1, #2
   1120c:	add	r2, pc, r2
   11210:	mov	r4, #1
   11214:	bl	10b68 <vc_container_log@plt>
   11218:	ldr	r2, [pc, #984]	; 115f8 <main@@Base+0xa54>
   1121c:	mov	r0, #0
   11220:	mov	r1, #2
   11224:	add	r2, pc, r2
   11228:	bl	10b68 <vc_container_log@plt>
   1122c:	ldr	r2, [pc, #968]	; 115fc <main@@Base+0xa58>
   11230:	mov	r0, #0
   11234:	mov	r1, #2
   11238:	add	r2, pc, r2
   1123c:	bl	10b68 <vc_container_log@plt>
   11240:	ldr	r2, [pc, #952]	; 11600 <main@@Base+0xa5c>
   11244:	mov	r0, #0
   11248:	mov	r1, #2
   1124c:	add	r2, pc, r2
   11250:	bl	10b68 <vc_container_log@plt>
   11254:	ldr	r2, [pc, #936]	; 11604 <main@@Base+0xa60>
   11258:	mov	r0, #0
   1125c:	mov	r1, #2
   11260:	add	r2, pc, r2
   11264:	bl	10b68 <vc_container_log@plt>
   11268:	ldr	r2, [pc, #920]	; 11608 <main@@Base+0xa64>
   1126c:	mov	r0, #0
   11270:	mov	r1, #2
   11274:	add	r2, pc, r2
   11278:	bl	10b68 <vc_container_log@plt>
   1127c:	ldr	r2, [pc, #904]	; 1160c <main@@Base+0xa68>
   11280:	mov	r0, #0
   11284:	mov	r1, #2
   11288:	add	r2, pc, r2
   1128c:	bl	10b68 <vc_container_log@plt>
   11290:	ldr	r2, [pc, #888]	; 11610 <main@@Base+0xa6c>
   11294:	mov	r0, #0
   11298:	mov	r1, #2
   1129c:	add	r2, pc, r2
   112a0:	bl	10b68 <vc_container_log@plt>
   112a4:	ldr	r1, [sp, #84]	; 0x54
   112a8:	mov	r0, r4
   112ac:	ldr	r2, [sp, #108]	; 0x6c
   112b0:	ldr	r3, [r1]
   112b4:	cmp	r2, r3
   112b8:	bne	11578 <main@@Base+0x9d4>
   112bc:	add	sp, sp, #116	; 0x74
   112c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112c4:	ldr	r0, [sp, #44]	; 0x2c
   112c8:	ldr	r1, [sp, #64]	; 0x40
   112cc:	bl	10b50 <vc_container_io_write@plt>
   112d0:	ldr	r2, [sp, #32]
   112d4:	cmp	r0, r2
   112d8:	bne	114d8 <main@@Base+0x934>
   112dc:	ldr	r1, [sp, #56]	; 0x38
   112e0:	ldr	r3, [r1, #12]
   112e4:	cmp	r3, #0
   112e8:	beq	10e70 <main@@Base+0x2cc>
   112ec:	ldr	r2, [sp, #92]	; 0x5c
   112f0:	mov	r0, #0
   112f4:	mov	r1, #2
   112f8:	ldr	r3, [sp, #32]
   112fc:	bl	10b68 <vc_container_log@plt>
   11300:	ldr	r2, [sp, #32]
   11304:	cmp	r2, #11
   11308:	bhi	10e7c <main@@Base+0x2d8>
   1130c:	ldr	r2, [pc, #768]	; 11614 <main@@Base+0xa70>
   11310:	mov	r0, #0
   11314:	mov	r1, #1
   11318:	add	r2, pc, r2
   1131c:	bl	10b68 <vc_container_log@plt>
   11320:	ldr	r3, [sp, #64]	; 0x40
   11324:	mov	r0, #0
   11328:	ldr	r2, [pc, #744]	; 11618 <main@@Base+0xa74>
   1132c:	mov	r1, #1
   11330:	movw	r4, #64996	; 0xfde4
   11334:	add	r2, pc, r2
   11338:	str	r3, [sp, #40]	; 0x28
   1133c:	bl	10b68 <vc_container_log@plt>
   11340:	bl	118c0 <nb_char_available@@Base>
   11344:	cmp	r0, #0
   11348:	moveq	r0, #1
   1134c:	beq	110e4 <main@@Base+0x540>
   11350:	bl	11958 <nb_get_char@@Base>
   11354:	ldr	r1, [sp, #68]	; 0x44
   11358:	ldr	r3, [r1, #36]	; 0x24
   1135c:	subs	r0, r0, #27
   11360:	movne	r0, #1
   11364:	cmp	r3, #0
   11368:	bne	110f4 <main@@Base+0x550>
   1136c:	cmp	r0, #0
   11370:	bne	10d64 <main@@Base+0x1c0>
   11374:	b	110fc <main@@Base+0x558>
   11378:	cmp	r8, #3
   1137c:	bls	1142c <main@@Base+0x888>
   11380:	ldrb	r3, [r9, #1]
   11384:	sub	r8, r8, #4
   11388:	ldrb	r0, [r9]
   1138c:	ldrb	r1, [r9, #3]
   11390:	lsl	r3, r3, #16
   11394:	ldrb	r2, [r9, #2]
   11398:	orr	r3, r3, r0, lsl #24
   1139c:	orr	r3, r3, r1
   113a0:	orr	r3, r3, r2, lsl #8
   113a4:	uxth	r4, r3
   113a8:	cmp	r8, r4
   113ac:	bcc	11414 <main@@Base+0x870>
   113b0:	ldr	r2, [pc, #612]	; 1161c <main@@Base+0xa78>
   113b4:	add	r9, r9, #4
   113b8:	lsr	r3, r3, #16
   113bc:	mov	r0, #0
   113c0:	mov	r1, #2
   113c4:	add	r2, pc, r2
   113c8:	str	r4, [sp]
   113cc:	rsb	r8, r4, r8
   113d0:	bl	10b68 <vc_container_log@plt>
   113d4:	mov	r0, r9
   113d8:	mov	r1, r4
   113dc:	add	r9, r9, r4
   113e0:	bl	11778 <_start@@Base+0x134>
   113e4:	ldr	r3, [pc, #564]	; 11620 <main@@Base+0xa7c>
   113e8:	add	r3, pc, r3
   113ec:	ldr	r3, [r3, #12]
   113f0:	b	11084 <main@@Base+0x4e0>
   113f4:	ldr	r2, [pc, #552]	; 11624 <main@@Base+0xa80>
   113f8:	add	r2, pc, r2
   113fc:	b	10f78 <main@@Base+0x3d4>
   11400:	ldr	r2, [pc, #544]	; 11628 <main@@Base+0xa84>
   11404:	mov	r1, #1
   11408:	add	r2, pc, r2
   1140c:	bl	10b68 <vc_container_log@plt>
   11410:	b	11320 <main@@Base+0x77c>
   11414:	ldr	r2, [pc, #528]	; 1162c <main@@Base+0xa88>
   11418:	mov	r0, #0
   1141c:	mov	r1, #1
   11420:	add	r2, pc, r2
   11424:	bl	10b68 <vc_container_log@plt>
   11428:	b	11320 <main@@Base+0x77c>
   1142c:	ldr	r2, [pc, #508]	; 11630 <main@@Base+0xa8c>
   11430:	mov	r0, #0
   11434:	mov	r1, #1
   11438:	add	r2, pc, r2
   1143c:	bl	10b68 <vc_container_log@plt>
   11440:	b	11320 <main@@Base+0x77c>
   11444:	ldr	r2, [sp, #64]	; 0x40
   11448:	mov	r0, r3
   1144c:	ldr	r1, [sp, #40]	; 0x28
   11450:	rsb	r6, r2, r1
   11454:	mov	r1, r2
   11458:	mov	r2, r6
   1145c:	bl	10b50 <vc_container_io_write@plt>
   11460:	cmp	r6, r0
   11464:	bne	11558 <main@@Base+0x9b4>
   11468:	ldr	r3, [r4, #12]
   1146c:	cmp	r3, #0
   11470:	beq	10df8 <main@@Base+0x254>
   11474:	mov	r0, r5
   11478:	mov	r3, r6
   1147c:	mov	r1, #2
   11480:	ldr	r2, [sp, #100]	; 0x64
   11484:	bl	10b68 <vc_container_log@plt>
   11488:	b	10df8 <main@@Base+0x254>
   1148c:	ldr	r2, [pc, #416]	; 11634 <main@@Base+0xa90>
   11490:	mov	r1, #1
   11494:	movw	r3, #65000	; 0xfde8
   11498:	mov	r4, #2
   1149c:	add	r2, pc, r2
   114a0:	bl	10b68 <vc_container_log@plt>
   114a4:	b	112a4 <main@@Base+0x700>
   114a8:	ldr	r1, [sp, #64]	; 0x40
   114ac:	mov	r2, #83	; 0x53
   114b0:	mov	r3, #87	; 0x57
   114b4:	strb	r2, [r1]
   114b8:	mov	r2, #65	; 0x41
   114bc:	strb	r3, [r1, #1]
   114c0:	mov	r3, #80	; 0x50
   114c4:	strb	r2, [r1, #2]
   114c8:	mov	r2, #4
   114cc:	strb	r3, [r1, #3]
   114d0:	bl	10b50 <vc_container_io_write@plt>
   114d4:	b	10d04 <main@@Base+0x160>
   114d8:	ldr	r3, [sp, #64]	; 0x40
   114dc:	mov	r0, #0
   114e0:	mov	r1, #1
   114e4:	ldr	r2, [sp, #96]	; 0x60
   114e8:	movw	r4, #64996	; 0xfde4
   114ec:	str	r3, [sp, #40]	; 0x28
   114f0:	bl	10b68 <vc_container_log@plt>
   114f4:	b	110d4 <main@@Base+0x530>
   114f8:	ldr	ip, [sp, #104]	; 0x68
   114fc:	mov	r1, #1
   11500:	ldr	r2, [pc, #304]	; 11638 <main@@Base+0xa94>
   11504:	ldr	r3, [r4, #16]
   11508:	mov	r4, #3
   1150c:	add	r2, pc, r2
   11510:	str	ip, [sp]
   11514:	bl	10b68 <vc_container_log@plt>
   11518:	b	11124 <main@@Base+0x580>
   1151c:	ldr	r2, [sp, #64]	; 0x40
   11520:	movw	r4, #64996	; 0xfde4
   11524:	str	r2, [sp, #40]	; 0x28
   11528:	b	110d4 <main@@Base+0x530>
   1152c:	str	r0, [sp, #44]	; 0x2c
   11530:	b	10d04 <main@@Base+0x160>
   11534:	ldr	ip, [sp, #104]	; 0x68
   11538:	mov	r1, #1
   1153c:	ldr	r2, [pc, #248]	; 1163c <main@@Base+0xa98>
   11540:	ldr	r3, [r4, #4]
   11544:	mov	r4, #4
   11548:	add	r2, pc, r2
   1154c:	str	ip, [sp]
   11550:	bl	10b68 <vc_container_log@plt>
   11554:	b	1111c <main@@Base+0x578>
   11558:	ldr	r2, [pc, #224]	; 11640 <main@@Base+0xa9c>
   1155c:	mov	r0, r5
   11560:	mov	r1, #1
   11564:	add	r2, pc, r2
   11568:	bl	10b68 <vc_container_log@plt>
   1156c:	mov	r0, r5
   11570:	bl	11840 <nb_set_nonblocking_input@@Base>
   11574:	b	11110 <main@@Base+0x56c>
   11578:	bl	10ae4 <__stack_chk_fail@plt>
   1157c:	andeq	r1, r1, r8, asr #8
   11580:	andeq	r0, r0, r8, asr r0
   11584:	andeq	r1, r1, ip, ror #8
   11588:	andeq	r0, r0, r0, lsr #28
   1158c:	andeq	r1, r1, ip, asr r4
   11590:	andeq	r1, r1, r8, asr r4
   11594:	andeq	r1, r1, r4, asr r4
   11598:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1159c:	andeq	r1, r1, ip, lsl r4
   115a0:	muleq	r1, r8, r3
   115a4:	andeq	r0, r0, r8, ror #29
   115a8:	andeq	r1, r1, r8, lsr r3
   115ac:	andeq	r1, r1, r8, lsr #6
   115b0:	andeq	r0, r0, r8, lsr #29
   115b4:	andeq	r0, r0, r0, asr #29
   115b8:	andeq	r1, r1, r0, lsl #5
   115bc:	andeq	r0, r0, r0, asr #28
   115c0:	andeq	r0, r0, ip, ror #28
   115c4:	andeq	r0, r0, r8, lsl #29
   115c8:	andeq	r1, r1, r4, lsr #2
   115cc:	andeq	r0, r0, ip, lsr #21
   115d0:	andeq	r0, r0, ip, lsl #26
   115d4:	muleq	r1, r0, r0
   115d8:	andeq	r0, r0, r4, lsr #26
   115dc:	andeq	r0, r0, r0, lsr #26
   115e0:	andeq	r0, r1, ip, ror #31
   115e4:	andeq	r0, r0, r8, lsr #26
   115e8:	andeq	r0, r1, r0, lsl pc
   115ec:	andeq	r0, r0, r8, ror #16
   115f0:	andeq	r0, r0, r8, asr r8
   115f4:	andeq	r0, r0, r8, asr r8
   115f8:	andeq	r0, r0, ip, ror r8
   115fc:	muleq	r0, r8, r8
   11600:	muleq	r0, r0, r8
   11604:	muleq	r0, ip, r8
   11608:	andeq	r0, r0, r8, lsr #17
   1160c:			; <UNDEFINED> instruction: 0x000008b8
   11610:	andeq	r0, r0, r0, asr #17
   11614:	andeq	r0, r0, r8, lsl r9
   11618:	andeq	r0, r0, r4, lsr #21
   1161c:	andeq	r0, r0, r0, ror #19
   11620:	andeq	r0, r1, r0, lsl #25
   11624:	andeq	r0, r0, r4, lsr #12
   11628:	andeq	r0, r0, r0, lsl r9
   1162c:	andeq	r0, r0, r8, asr r9
   11630:	andeq	r0, r0, r4, lsl r9
   11634:	andeq	r0, r0, r4, ror #13
   11638:	andeq	r0, r0, r0, lsr #13
   1163c:	andeq	r0, r0, r8, lsl #13
   11640:	muleq	r0, r0, r6

00011644 <_start@@Base>:
   11644:	mov	fp, #0
   11648:	mov	lr, #0
   1164c:	pop	{r1}		; (ldr r1, [sp], #4)
   11650:	mov	r2, sp
   11654:	push	{r2}		; (str r2, [sp, #-4]!)
   11658:	push	{r0}		; (str r0, [sp, #-4]!)
   1165c:	ldr	ip, [pc, #16]	; 11674 <_start@@Base+0x30>
   11660:	push	{ip}		; (str ip, [sp, #-4]!)
   11664:	ldr	r0, [pc, #12]	; 11678 <_start@@Base+0x34>
   11668:	ldr	r3, [pc, #12]	; 1167c <_start@@Base+0x38>
   1166c:	bl	10b2c <__libc_start_main@plt>
   11670:	bl	10b8c <abort@plt>
   11674:	andeq	r1, r1, r8, lsl #20
   11678:	andeq	r0, r1, r4, lsr #23
   1167c:	andeq	r1, r1, r4, lsr #19
   11680:	ldr	r3, [pc, #20]	; 1169c <_start@@Base+0x58>
   11684:	ldr	r2, [pc, #20]	; 116a0 <_start@@Base+0x5c>
   11688:	add	r3, pc, r3
   1168c:	ldr	r2, [r3, r2]
   11690:	cmp	r2, #0
   11694:	bxeq	lr
   11698:	b	10b38 <__gmon_start__@plt>
   1169c:	andeq	r0, r1, r0, ror r9
   116a0:	andeq	r0, r0, ip, asr r0
   116a4:	push	{r3, lr}
   116a8:	movw	r0, #8300	; 0x206c
   116ac:	ldr	r3, [pc, #36]	; 116d8 <_start@@Base+0x94>
   116b0:	movt	r0, #2
   116b4:	rsb	r3, r0, r3
   116b8:	cmp	r3, #6
   116bc:	popls	{r3, pc}
   116c0:	movw	r3, #0
   116c4:	movt	r3, #0
   116c8:	cmp	r3, #0
   116cc:	popeq	{r3, pc}
   116d0:	blx	r3
   116d4:	pop	{r3, pc}
   116d8:	andeq	r2, r2, pc, rrx
   116dc:	push	{r3, lr}
   116e0:	movw	r0, #8300	; 0x206c
   116e4:	movw	r3, #8300	; 0x206c
   116e8:	movt	r0, #2
   116ec:	movt	r3, #2
   116f0:	rsb	r3, r0, r3
   116f4:	asr	r3, r3, #2
   116f8:	add	r3, r3, r3, lsr #31
   116fc:	asrs	r1, r3, #1
   11700:	popeq	{r3, pc}
   11704:	movw	r2, #0
   11708:	movt	r2, #0
   1170c:	cmp	r2, #0
   11710:	popeq	{r3, pc}
   11714:	blx	r2
   11718:	pop	{r3, pc}
   1171c:	push	{r4, lr}
   11720:	movw	r4, #8300	; 0x206c
   11724:	movt	r4, #2
   11728:	ldrb	r3, [r4]
   1172c:	cmp	r3, #0
   11730:	popne	{r4, pc}
   11734:	bl	116a4 <_start@@Base+0x60>
   11738:	mov	r3, #1
   1173c:	strb	r3, [r4]
   11740:	pop	{r4, pc}
   11744:	movw	r0, #7892	; 0x1ed4
   11748:	movt	r0, #2
   1174c:	push	{r3, lr}
   11750:	ldr	r3, [r0]
   11754:	cmp	r3, #0
   11758:	beq	11770 <_start@@Base+0x12c>
   1175c:	movw	r3, #0
   11760:	movt	r3, #0
   11764:	cmp	r3, #0
   11768:	beq	11770 <_start@@Base+0x12c>
   1176c:	blx	r3
   11770:	pop	{r3, lr}
   11774:	b	116dc <_start@@Base+0x98>
   11778:	ldr	r3, [pc, #180]	; 11834 <_start@@Base+0x1f0>
   1177c:	ldr	r2, [pc, #180]	; 11838 <_start@@Base+0x1f4>
   11780:	add	r3, pc, r3
   11784:	push	{r4, r5, r6, r7, r8, r9, lr}
   11788:	sub	sp, sp, #116	; 0x74
   1178c:	ldr	r9, [r3, r2]
   11790:	add	r7, r0, r1
   11794:	ldr	r8, [pc, #160]	; 1183c <_start@@Base+0x1f8>
   11798:	add	r6, sp, #8
   1179c:	mov	r5, r0
   117a0:	mov	r4, #0
   117a4:	ldr	r3, [r9]
   117a8:	add	r8, pc, r8
   117ac:	str	r3, [sp, #108]	; 0x6c
   117b0:	cmp	r5, r7
   117b4:	beq	11800 <_start@@Base+0x1bc>
   117b8:	ldrb	ip, [r5], #1
   117bc:	add	r0, r4, r4, lsl #1
   117c0:	add	r0, r6, r0
   117c4:	add	r4, r4, #1
   117c8:	mov	r1, #1
   117cc:	mvn	r2, #0
   117d0:	str	ip, [sp]
   117d4:	mov	r3, r8
   117d8:	bl	10b5c <__sprintf_chk@plt>
   117dc:	cmp	r4, #32
   117e0:	bne	117b0 <_start@@Base+0x16c>
   117e4:	mov	r0, #0
   117e8:	mov	r1, #2
   117ec:	mov	r2, r6
   117f0:	mov	r4, r0
   117f4:	bl	10b68 <vc_container_log@plt>
   117f8:	cmp	r5, r7
   117fc:	bne	117b8 <_start@@Base+0x174>
   11800:	cmp	r4, #0
   11804:	beq	11818 <_start@@Base+0x1d4>
   11808:	mov	r0, #0
   1180c:	mov	r1, #2
   11810:	add	r2, sp, #8
   11814:	bl	10b68 <vc_container_log@plt>
   11818:	ldr	r2, [sp, #108]	; 0x6c
   1181c:	ldr	r3, [r9]
   11820:	cmp	r2, r3
   11824:	bne	11830 <_start@@Base+0x1ec>
   11828:	add	sp, sp, #116	; 0x74
   1182c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11830:	bl	10ae4 <__stack_chk_fail@plt>
   11834:	andeq	r0, r1, r8, ror r8
   11838:	andeq	r0, r0, r8, asr r0
   1183c:	andeq	r0, r0, ip, ror #4

00011840 <nb_set_nonblocking_input@@Base>:
   11840:	ldr	r3, [pc, #112]	; 118b8 <nb_set_nonblocking_input@@Base+0x78>
   11844:	ldr	r2, [pc, #112]	; 118bc <nb_set_nonblocking_input@@Base+0x7c>
   11848:	add	r3, pc, r3
   1184c:	push	{r4, r5, r6, lr}
   11850:	sub	sp, sp, #64	; 0x40
   11854:	ldr	r4, [r3, r2]
   11858:	mov	r6, r0
   1185c:	mov	r1, sp
   11860:	mov	r0, #0
   11864:	ldr	r3, [r4]
   11868:	str	r3, [sp, #60]	; 0x3c
   1186c:	bl	10b98 <tcgetattr@plt>
   11870:	cmp	r6, #0
   11874:	ldr	r3, [sp, #12]
   11878:	mov	r0, #0
   1187c:	movne	r2, #1
   11880:	mov	r1, r0
   11884:	bicne	r3, r3, #2
   11888:	orreq	r3, r3, #2
   1188c:	str	r3, [sp, #12]
   11890:	strbne	r2, [sp, #23]
   11894:	mov	r2, sp
   11898:	bl	10b08 <tcsetattr@plt>
   1189c:	ldr	r2, [sp, #60]	; 0x3c
   118a0:	ldr	r3, [r4]
   118a4:	cmp	r2, r3
   118a8:	bne	118b4 <nb_set_nonblocking_input@@Base+0x74>
   118ac:	add	sp, sp, #64	; 0x40
   118b0:	pop	{r4, r5, r6, pc}
   118b4:	bl	10ae4 <__stack_chk_fail@plt>
   118b8:			; <UNDEFINED> instruction: 0x000107b0
   118bc:	andeq	r0, r0, r8, asr r0

000118c0 <nb_char_available@@Base>:
   118c0:	ldr	ip, [pc, #136]	; 11950 <nb_char_available@@Base+0x90>
   118c4:	mov	r0, #0
   118c8:	push	{r4, lr}
   118cc:	add	ip, pc, ip
   118d0:	ldr	lr, [pc, #124]	; 11954 <nb_char_available@@Base+0x94>
   118d4:	sub	sp, sp, #152	; 0x98
   118d8:	add	r3, sp, #152	; 0x98
   118dc:	mov	r2, r0
   118e0:	add	r1, sp, #144	; 0x90
   118e4:	ldr	r4, [ip, lr]
   118e8:	str	r0, [sp, #12]
   118ec:	str	r0, [r3, #-136]!	; 0xffffff78
   118f0:	ldr	r0, [r4]
   118f4:	str	r0, [sp, #148]	; 0x94
   118f8:	str	r2, [r3, #4]!
   118fc:	cmp	r3, r1
   11900:	bne	118f8 <nb_char_available@@Base+0x38>
   11904:	ldr	r0, [sp, #20]
   11908:	add	r1, sp, #152	; 0x98
   1190c:	mov	r2, #0
   11910:	add	ip, sp, #12
   11914:	mov	r3, r2
   11918:	orr	r0, r0, #1
   1191c:	str	r0, [r1, #-132]!	; 0xffffff7c
   11920:	mov	r0, #1
   11924:	str	ip, [sp]
   11928:	bl	10ad8 <select@plt>
   1192c:	ldr	r2, [sp, #148]	; 0x94
   11930:	ldr	r3, [r4]
   11934:	ldr	r0, [sp, #20]
   11938:	cmp	r2, r3
   1193c:	and	r0, r0, #1
   11940:	bne	1194c <nb_char_available@@Base+0x8c>
   11944:	add	sp, sp, #152	; 0x98
   11948:	pop	{r4, pc}
   1194c:	bl	10ae4 <__stack_chk_fail@plt>
   11950:	andeq	r0, r1, ip, lsr #14
   11954:	andeq	r0, r0, r8, asr r0

00011958 <nb_get_char@@Base>:
   11958:	push	{r3, lr}
   1195c:	ldr	r3, [pc, #24]	; 1197c <nb_get_char@@Base+0x24>
   11960:	ldr	r2, [pc, #24]	; 11980 <nb_get_char@@Base+0x28>
   11964:	add	r3, pc, r3
   11968:	ldr	r3, [r3, r2]
   1196c:	ldr	r0, [r3]
   11970:	bl	10acc <_IO_getc@plt>
   11974:	uxtb	r0, r0
   11978:	pop	{r3, pc}
   1197c:	muleq	r1, r4, r6
   11980:	andeq	r0, r0, r0, rrx

00011984 <nb_put_char@@Base>:
   11984:	ldr	r3, [pc, #16]	; 1199c <nb_put_char@@Base+0x18>
   11988:	ldr	r2, [pc, #16]	; 119a0 <nb_put_char@@Base+0x1c>
   1198c:	add	r3, pc, r3
   11990:	ldr	r3, [r3, r2]
   11994:	ldr	r1, [r3]
   11998:	b	10afc <_IO_putc@plt>
   1199c:	andeq	r0, r1, ip, ror #12
   119a0:	andeq	r0, r0, r4, rrx

000119a4 <__libc_csu_init@@Base>:
   119a4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   119a8:	mov	r7, r0
   119ac:	ldr	r6, [pc, #76]	; 11a00 <__libc_csu_init@@Base+0x5c>
   119b0:	mov	r8, r1
   119b4:	ldr	r5, [pc, #72]	; 11a04 <__libc_csu_init@@Base+0x60>
   119b8:	mov	r9, r2
   119bc:	add	r6, pc, r6
   119c0:	bl	10aa0 <_init@@Base>
   119c4:	add	r5, pc, r5
   119c8:	rsb	r6, r5, r6
   119cc:	asrs	r6, r6, #2
   119d0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   119d4:	sub	r5, r5, #4
   119d8:	mov	r4, #0
   119dc:	add	r4, r4, #1
   119e0:	ldr	r3, [r5, #4]!
   119e4:	mov	r0, r7
   119e8:	mov	r1, r8
   119ec:	mov	r2, r9
   119f0:	blx	r3
   119f4:	cmp	r4, r6
   119f8:	bne	119dc <__libc_csu_init@@Base+0x38>
   119fc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11a00:	andeq	r0, r1, ip, lsl #10
   11a04:	andeq	r0, r1, r0, lsl #10

00011a08 <__libc_csu_fini@@Base>:
   11a08:	bx	lr

Disassembly of section .fini:

00011a0c <_fini@@Base>:
   11a0c:	push	{r3, lr}
   11a10:	pop	{r3, pc}
