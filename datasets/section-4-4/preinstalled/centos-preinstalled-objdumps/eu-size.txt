
centos-preinstalled/eu-size:     file format elf32-littlearm


Disassembly of section .init:

00010b68 <.init>:
   10b68:	push	{r3, lr}
   10b6c:	bl	10f80 <elf_kind@plt+0x23c>
   10b70:	pop	{r3, pc}

Disassembly of section .plt:

00010b74 <fputs_unlocked@plt-0x14>:
   10b74:	push	{lr}		; (str lr, [sp, #-4]!)
   10b78:	ldr	lr, [pc, #4]	; 10b84 <fputs_unlocked@plt-0x4>
   10b7c:	add	lr, pc, lr
   10b80:	ldr	pc, [lr, #8]!
   10b84:	andeq	r2, r1, ip, ror r4

00010b88 <fputs_unlocked@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #73728	; 0x12000
   10b90:	ldr	pc, [ip, #1148]!	; 0x47c

00010b94 <gelf_getshdr@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #73728	; 0x12000
   10b9c:	ldr	pc, [ip, #1140]!	; 0x474

00010ba0 <strcmp@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #73728	; 0x12000
   10ba8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bac <elf_version@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #73728	; 0x12000
   10bb4:	ldr	pc, [ip, #1124]!	; 0x464

00010bb8 <memcpy@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #73728	; 0x12000
   10bc0:	ldr	pc, [ip, #1116]!	; 0x45c

00010bc4 <fwrite_unlocked@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #73728	; 0x12000
   10bcc:	ldr	pc, [ip, #1108]!	; 0x454

00010bd0 <fputc_unlocked@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #73728	; 0x12000
   10bd8:	ldr	pc, [ip, #1100]!	; 0x44c

00010bdc <dcgettext@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #73728	; 0x12000
   10be4:	ldr	pc, [ip, #1092]!	; 0x444

00010be8 <__stack_chk_fail@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #73728	; 0x12000
   10bf0:	ldr	pc, [ip, #1084]!	; 0x43c

00010bf4 <gelf_getphdr@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #73728	; 0x12000
   10bfc:	ldr	pc, [ip, #1076]!	; 0x434

00010c00 <gelf_getclass@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #73728	; 0x12000
   10c08:	ldr	pc, [ip, #1068]!	; 0x42c

00010c0c <elf_strptr@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #73728	; 0x12000
   10c14:	ldr	pc, [ip, #1060]!	; 0x424

00010c18 <textdomain@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #73728	; 0x12000
   10c20:	ldr	pc, [ip, #1052]!	; 0x41c

00010c24 <error@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #73728	; 0x12000
   10c2c:	ldr	pc, [ip, #1044]!	; 0x414

00010c30 <open64@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #73728	; 0x12000
   10c38:	ldr	pc, [ip, #1036]!	; 0x40c

00010c3c <__libc_start_main@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #73728	; 0x12000
   10c44:	ldr	pc, [ip, #1028]!	; 0x404

00010c48 <__gmon_start__@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c54 <mempcpy@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c60 <elf_end@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c6c <strlen@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #996]!	; 0x3e4

00010c78 <elf_errmsg@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #988]!	; 0x3dc

00010c84 <__errno_location@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #980]!	; 0x3d4

00010c90 <elf_getphdrnum@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #972]!	; 0x3cc

00010c9c <__fsetlocking@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #964]!	; 0x3c4

00010ca8 <argp_parse@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #956]!	; 0x3bc

00010cb4 <__printf_chk@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #948]!	; 0x3b4

00010cc0 <__fprintf_chk@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #940]!	; 0x3ac

00010ccc <elf_begin@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #932]!	; 0x3a4

00010cd8 <setlocale@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #924]!	; 0x39c

00010ce4 <elf_nextscn@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #916]!	; 0x394

00010cf0 <strrchr@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #908]!	; 0x38c

00010cfc <elf_next@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #900]!	; 0x384

00010d08 <bindtextdomain@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #892]!	; 0x37c

00010d14 <elf_getarhdr@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #884]!	; 0x374

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #876]!	; 0x36c

00010d2c <close@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #868]!	; 0x364

00010d38 <elf_getshdrstrndx@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #860]!	; 0x35c

00010d44 <elf_kind@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #852]!	; 0x354

Disassembly of section .text:

00010d50 <.text>:
   10d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d54:	movw	r9, #12488	; 0x30c8
   10d58:	movt	r9, #2
   10d5c:	movw	r3, #12496	; 0x30d0
   10d60:	movt	r3, #2
   10d64:	sub	sp, sp, #124	; 0x7c
   10d68:	ldr	r2, [r9]
   10d6c:	mov	r4, r0
   10d70:	mov	r5, r1
   10d74:	ldr	r0, [r3]
   10d78:	mov	r1, #2
   10d7c:	mov	r8, #0
   10d80:	str	r2, [sp, #116]	; 0x74
   10d84:	bl	10c9c <__fsetlocking@plt>
   10d88:	movw	r2, #12504	; 0x30d8
   10d8c:	movt	r2, #2
   10d90:	mov	r1, #2
   10d94:	ldr	r0, [r2]
   10d98:	bl	10c9c <__fsetlocking@plt>
   10d9c:	movw	r2, #12492	; 0x30cc
   10da0:	movt	r2, #2
   10da4:	mov	r1, #2
   10da8:	ldr	r0, [r2]
   10dac:	bl	10c9c <__fsetlocking@plt>
   10db0:	movw	r1, #10272	; 0x2820
   10db4:	mov	r0, #6
   10db8:	movt	r1, #1
   10dbc:	bl	10cd8 <setlocale@plt>
   10dc0:	movw	r0, #10420	; 0x28b4
   10dc4:	movw	r1, #10432	; 0x28c0
   10dc8:	movt	r0, #1
   10dcc:	movt	r1, #1
   10dd0:	bl	10d08 <bindtextdomain@plt>
   10dd4:	movw	r0, #10420	; 0x28b4
   10dd8:	movt	r0, #1
   10ddc:	bl	10c18 <textdomain@plt>
   10de0:	mov	r3, r8
   10de4:	add	ip, sp, #112	; 0x70
   10de8:	mov	r1, r4
   10dec:	mov	r2, r5
   10df0:	str	ip, [sp]
   10df4:	str	r8, [sp, #4]
   10df8:	movw	r0, #12460	; 0x30ac
   10dfc:	movt	r0, #2
   10e00:	bl	10ca8 <argp_parse@plt>
   10e04:	mov	r0, #1
   10e08:	bl	10bac <elf_version@plt>
   10e0c:	ldr	r3, [sp, #112]	; 0x70
   10e10:	cmp	r3, r4
   10e14:	beq	10f2c <elf_kind@plt+0x1e8>
   10e18:	ldr	r0, [r5, r3, lsl #2]
   10e1c:	bl	12158 <elf_kind@plt+0x1414>
   10e20:	ldr	r3, [sp, #112]	; 0x70
   10e24:	add	r3, r3, #1
   10e28:	str	r3, [sp, #112]	; 0x70
   10e2c:	cmp	r4, r3
   10e30:	orr	r8, r8, r0
   10e34:	bgt	10e18 <elf_kind@plt+0xd4>
   10e38:	movw	r2, #12512	; 0x30e0
   10e3c:	movt	r2, #2
   10e40:	ldrb	r3, [r2, #8]
   10e44:	cmp	r3, #0
   10e48:	beq	10e64 <elf_kind@plt+0x120>
   10e4c:	ldr	r0, [r2, #4]
   10e50:	cmp	r0, #0
   10e54:	bne	10e64 <elf_kind@plt+0x120>
   10e58:	ldr	r3, [r2, #40]	; 0x28
   10e5c:	cmp	r3, #0
   10e60:	bne	10e80 <elf_kind@plt+0x13c>
   10e64:	ldr	r2, [sp, #116]	; 0x74
   10e68:	mov	r0, r8
   10e6c:	ldr	r3, [r9]
   10e70:	cmp	r2, r3
   10e74:	bne	10f40 <elf_kind@plt+0x1fc>
   10e78:	add	sp, sp, #124	; 0x7c
   10e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e80:	sub	r1, r3, #1
   10e84:	mov	ip, #12
   10e88:	ldrd	r4, [r2, #16]
   10e8c:	movw	r3, #9360	; 0x2490
   10e90:	mul	ip, ip, r1
   10e94:	movt	r3, #1
   10e98:	ldrd	sl, [r2, #24]
   10e9c:	movw	r1, #10460	; 0x28dc
   10ea0:	ldrd	r6, [r2, #32]
   10ea4:	movt	r1, #1
   10ea8:	add	r2, r3, ip
   10eac:	strd	r4, [sp, #80]	; 0x50
   10eb0:	adds	r4, r4, sl
   10eb4:	ldr	lr, [r2, #4]
   10eb8:	adc	r5, r5, fp
   10ebc:	ldr	r3, [r3, ip]
   10ec0:	adds	r4, r4, r6
   10ec4:	mov	r2, #5
   10ec8:	adc	r5, r5, r7
   10ecc:	sub	ip, lr, #2
   10ed0:	sub	r3, r3, #2
   10ed4:	str	ip, [sp, #96]	; 0x60
   10ed8:	str	r3, [sp, #100]	; 0x64
   10edc:	bl	10bdc <dcgettext@plt>
   10ee0:	ldr	r3, [sp, #100]	; 0x64
   10ee4:	movw	r1, #10472	; 0x28e8
   10ee8:	ldr	ip, [sp, #96]	; 0x60
   10eec:	movt	r1, #1
   10ef0:	strd	r4, [sp, #48]	; 0x30
   10ef4:	strd	r4, [sp, #64]	; 0x40
   10ef8:	mov	r2, r3
   10efc:	ldrd	r4, [sp, #80]	; 0x50
   10f00:	str	ip, [sp, #56]	; 0x38
   10f04:	str	r3, [sp, #8]
   10f08:	str	r3, [sp, #24]
   10f0c:	str	r3, [sp, #40]	; 0x28
   10f10:	strd	r4, [sp]
   10f14:	strd	sl, [sp, #16]
   10f18:	strd	r6, [sp, #32]
   10f1c:	str	r0, [sp, #72]	; 0x48
   10f20:	mov	r0, #1
   10f24:	bl	10cb4 <__printf_chk@plt>
   10f28:	b	10e64 <elf_kind@plt+0x120>
   10f2c:	movw	r0, #10452	; 0x28d4
   10f30:	movt	r0, #1
   10f34:	bl	12158 <elf_kind@plt+0x1414>
   10f38:	mov	r8, r0
   10f3c:	b	10e38 <elf_kind@plt+0xf4>
   10f40:	bl	10be8 <__stack_chk_fail@plt>
   10f44:	mov	fp, #0
   10f48:	mov	lr, #0
   10f4c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f50:	mov	r2, sp
   10f54:	push	{r2}		; (str r2, [sp, #-4]!)
   10f58:	push	{r0}		; (str r0, [sp, #-4]!)
   10f5c:	ldr	ip, [pc, #16]	; 10f74 <elf_kind@plt+0x230>
   10f60:	push	{ip}		; (str ip, [sp, #-4]!)
   10f64:	ldr	r0, [pc, #12]	; 10f78 <elf_kind@plt+0x234>
   10f68:	ldr	r3, [pc, #12]	; 10f7c <elf_kind@plt+0x238>
   10f6c:	bl	10c3c <__libc_start_main@plt>
   10f70:	bl	10d20 <abort@plt>
   10f74:	andeq	r2, r1, ip, ror r4
   10f78:	andeq	r0, r1, r0, asr sp
   10f7c:	andeq	r2, r1, r8, lsl r4
   10f80:	ldr	r3, [pc, #20]	; 10f9c <elf_kind@plt+0x258>
   10f84:	ldr	r2, [pc, #20]	; 10fa0 <elf_kind@plt+0x25c>
   10f88:	add	r3, pc, r3
   10f8c:	ldr	r2, [r3, r2]
   10f90:	cmp	r2, #0
   10f94:	bxeq	lr
   10f98:	b	10c48 <__gmon_start__@plt>
   10f9c:	andeq	r2, r1, r0, ror r0
   10fa0:	andeq	r0, r0, r4, lsr #1
   10fa4:	push	{r3, lr}
   10fa8:	movw	r0, #12488	; 0x30c8
   10fac:	ldr	r3, [pc, #36]	; 10fd8 <elf_kind@plt+0x294>
   10fb0:	movt	r0, #2
   10fb4:	rsb	r3, r0, r3
   10fb8:	cmp	r3, #6
   10fbc:	popls	{r3, pc}
   10fc0:	movw	r3, #0
   10fc4:	movt	r3, #0
   10fc8:	cmp	r3, #0
   10fcc:	popeq	{r3, pc}
   10fd0:	blx	r3
   10fd4:	pop	{r3, pc}
   10fd8:	andeq	r3, r2, fp, asr #1
   10fdc:	push	{r3, lr}
   10fe0:	movw	r0, #12488	; 0x30c8
   10fe4:	movw	r3, #12488	; 0x30c8
   10fe8:	movt	r0, #2
   10fec:	movt	r3, #2
   10ff0:	rsb	r3, r0, r3
   10ff4:	asr	r3, r3, #2
   10ff8:	add	r3, r3, r3, lsr #31
   10ffc:	asrs	r1, r3, #1
   11000:	popeq	{r3, pc}
   11004:	movw	r2, #0
   11008:	movt	r2, #0
   1100c:	cmp	r2, #0
   11010:	popeq	{r3, pc}
   11014:	blx	r2
   11018:	pop	{r3, pc}
   1101c:	push	{r4, lr}
   11020:	movw	r4, #12508	; 0x30dc
   11024:	movt	r4, #2
   11028:	ldrb	r3, [r4]
   1102c:	cmp	r3, #0
   11030:	popne	{r4, pc}
   11034:	bl	10fa4 <elf_kind@plt+0x260>
   11038:	mov	r3, #1
   1103c:	strb	r3, [r4]
   11040:	pop	{r4, pc}
   11044:	movw	r0, #12028	; 0x2efc
   11048:	movt	r0, #2
   1104c:	push	{r3, lr}
   11050:	ldr	r3, [r0]
   11054:	cmp	r3, #0
   11058:	beq	11070 <elf_kind@plt+0x32c>
   1105c:	movw	r3, #0
   11060:	movt	r3, #0
   11064:	cmp	r3, #0
   11068:	beq	11070 <elf_kind@plt+0x32c>
   1106c:	blx	r3
   11070:	pop	{r3, lr}
   11074:	b	10fdc <elf_kind@plt+0x298>
   11078:	cmp	r0, #102	; 0x66
   1107c:	push	{r4, lr}
   11080:	mov	r4, r1
   11084:	beq	112ac <elf_kind@plt+0x568>
   11088:	ble	110c0 <elf_kind@plt+0x37c>
   1108c:	cmp	r0, #120	; 0x78
   11090:	beq	11274 <elf_kind@plt+0x530>
   11094:	bgt	110f4 <elf_kind@plt+0x3b0>
   11098:	cmp	r0, #111	; 0x6f
   1109c:	beq	111ac <elf_kind@plt+0x468>
   110a0:	cmp	r0, #116	; 0x74
   110a4:	bne	112c4 <elf_kind@plt+0x580>
   110a8:	movw	r3, #12512	; 0x30e0
   110ac:	movt	r3, #2
   110b0:	mov	r2, #1
   110b4:	mov	r0, #0
   110b8:	strb	r2, [r3, #8]
   110bc:	pop	{r4, pc}
   110c0:	cmp	r0, #66	; 0x42
   110c4:	beq	1120c <elf_kind@plt+0x4c8>
   110c8:	ble	1128c <elf_kind@plt+0x548>
   110cc:	cmp	r0, #70	; 0x46
   110d0:	beq	111c4 <elf_kind@plt+0x480>
   110d4:	cmp	r0, #100	; 0x64
   110d8:	bne	112c4 <elf_kind@plt+0x580>
   110dc:	movw	r3, #12512	; 0x30e0
   110e0:	movt	r3, #2
   110e4:	mov	r2, #0
   110e8:	mov	r0, r2
   110ec:	str	r2, [r3]
   110f0:	pop	{r4, pc}
   110f4:	cmp	r0, #256	; 0x100
   110f8:	beq	111dc <elf_kind@plt+0x498>
   110fc:	movw	r3, #257	; 0x101
   11100:	cmp	r0, r3
   11104:	bne	112c4 <elf_kind@plt+0x580>
   11108:	ldrb	r3, [r1]
   1110c:	cmp	r3, #120	; 0x78
   11110:	beq	11268 <elf_kind@plt+0x524>
   11114:	subs	r2, r3, #49	; 0x31
   11118:	bne	11134 <elf_kind@plt+0x3f0>
   1111c:	ldrb	r1, [r1, #1]
   11120:	cmp	r1, #54	; 0x36
   11124:	bne	11134 <elf_kind@plt+0x3f0>
   11128:	ldrb	r1, [r4, #2]
   1112c:	cmp	r1, #0
   11130:	beq	11274 <elf_kind@plt+0x530>
   11134:	cmp	r3, #100	; 0x64
   11138:	bne	11148 <elf_kind@plt+0x404>
   1113c:	ldrb	r1, [r4, #1]
   11140:	cmp	r1, #0
   11144:	beq	110dc <elf_kind@plt+0x398>
   11148:	cmp	r2, #0
   1114c:	bne	11168 <elf_kind@plt+0x424>
   11150:	ldrb	r2, [r4, #1]
   11154:	cmp	r2, #48	; 0x30
   11158:	bne	11168 <elf_kind@plt+0x424>
   1115c:	ldrb	r2, [r4, #2]
   11160:	cmp	r2, #0
   11164:	beq	110dc <elf_kind@plt+0x398>
   11168:	cmp	r3, #111	; 0x6f
   1116c:	beq	11178 <elf_kind@plt+0x434>
   11170:	cmp	r3, #56	; 0x38
   11174:	bne	11184 <elf_kind@plt+0x440>
   11178:	ldrb	r3, [r4, #1]
   1117c:	cmp	r3, #0
   11180:	beq	111ac <elf_kind@plt+0x468>
   11184:	movw	r1, #9804	; 0x264c
   11188:	movt	r1, #1
   1118c:	mov	r0, #0
   11190:	mov	r2, #5
   11194:	bl	10bdc <dcgettext@plt>
   11198:	mov	r3, r4
   1119c:	mov	r1, #0
   111a0:	mov	r2, r0
   111a4:	mov	r0, #1
   111a8:	bl	10c24 <error@plt>
   111ac:	movw	r3, #12512	; 0x30e0
   111b0:	movt	r3, #2
   111b4:	mov	r2, #2
   111b8:	mov	r0, #0
   111bc:	str	r2, [r3]
   111c0:	pop	{r4, pc}
   111c4:	movw	r3, #12512	; 0x30e0
   111c8:	movt	r3, #2
   111cc:	mov	r2, #3
   111d0:	mov	r0, #0
   111d4:	str	r2, [r3, #4]
   111d8:	pop	{r4, pc}
   111dc:	ldrb	r3, [r1]
   111e0:	cmp	r3, #98	; 0x62
   111e4:	bne	11224 <elf_kind@plt+0x4e0>
   111e8:	ldrb	r3, [r1, #1]
   111ec:	cmp	r3, #115	; 0x73
   111f0:	bne	11224 <elf_kind@plt+0x4e0>
   111f4:	ldrb	r3, [r1, #2]
   111f8:	cmp	r3, #100	; 0x64
   111fc:	bne	11224 <elf_kind@plt+0x4e0>
   11200:	ldrb	r3, [r1, #3]
   11204:	cmp	r3, #0
   11208:	bne	11224 <elf_kind@plt+0x4e0>
   1120c:	movw	r3, #12512	; 0x30e0
   11210:	movt	r3, #2
   11214:	mov	r2, #0
   11218:	mov	r0, r2
   1121c:	str	r2, [r3, #4]
   11220:	pop	{r4, pc}
   11224:	movw	r1, #9764	; 0x2624
   11228:	mov	r0, r4
   1122c:	movt	r1, #1
   11230:	bl	10ba0 <strcmp@plt>
   11234:	cmp	r0, #0
   11238:	beq	1120c <elf_kind@plt+0x4c8>
   1123c:	movw	r1, #9776	; 0x2630
   11240:	mov	r0, r4
   11244:	movt	r1, #1
   11248:	bl	10ba0 <strcmp@plt>
   1124c:	cmp	r0, #0
   11250:	bne	112cc <elf_kind@plt+0x588>
   11254:	movw	r3, #12512	; 0x30e0
   11258:	movt	r3, #2
   1125c:	mov	r2, #1
   11260:	str	r2, [r3, #4]
   11264:	pop	{r4, pc}
   11268:	ldrb	r3, [r1, #1]
   1126c:	cmp	r3, #0
   11270:	bne	11184 <elf_kind@plt+0x440>
   11274:	movw	r3, #12512	; 0x30e0
   11278:	movt	r3, #2
   1127c:	mov	r2, #1
   11280:	mov	r0, #0
   11284:	str	r2, [r3]
   11288:	pop	{r4, pc}
   1128c:	cmp	r0, #65	; 0x41
   11290:	bne	112c4 <elf_kind@plt+0x580>
   11294:	movw	r3, #12512	; 0x30e0
   11298:	movt	r3, #2
   1129c:	mov	r2, #1
   112a0:	mov	r0, #0
   112a4:	str	r2, [r3, #4]
   112a8:	pop	{r4, pc}
   112ac:	movw	r3, #12512	; 0x30e0
   112b0:	movt	r3, #2
   112b4:	mov	r2, #2
   112b8:	mov	r0, #0
   112bc:	str	r2, [r3, #4]
   112c0:	pop	{r4, pc}
   112c4:	mov	r0, #7
   112c8:	pop	{r4, pc}
   112cc:	movw	r1, #9784	; 0x2638
   112d0:	mov	r0, #0
   112d4:	movt	r1, #1
   112d8:	b	11190 <elf_kind@plt+0x44c>
   112dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112e0:	add	fp, sp, #32
   112e4:	sub	sp, sp, #220	; 0xdc
   112e8:	movw	r4, #12488	; 0x30c8
   112ec:	movt	r4, #2
   112f0:	subs	sl, r1, #0
   112f4:	str	r4, [fp, #-148]	; 0xffffff6c
   112f8:	ldr	r3, [r4]
   112fc:	mov	r7, r0
   11300:	str	r2, [fp, #-144]	; 0xffffff70
   11304:	str	r3, [fp, #-40]	; 0xffffffd8
   11308:	beq	11900 <elf_kind@plt+0xbbc>
   1130c:	mov	r0, sl
   11310:	bl	10c6c <strlen@plt>
   11314:	mov	r5, r0
   11318:	ldr	r0, [fp, #-144]	; 0xffffff70
   1131c:	bl	10c6c <strlen@plt>
   11320:	mov	r2, r5
   11324:	mov	r1, sl
   11328:	add	r4, r0, #1
   1132c:	add	r3, r4, r5
   11330:	add	r3, r3, #8
   11334:	bic	r3, r3, #7
   11338:	sub	sp, sp, r3
   1133c:	add	r5, sp, #80	; 0x50
   11340:	str	r5, [fp, #-152]	; 0xffffff68
   11344:	mov	r0, r5
   11348:	bl	10c54 <mempcpy@plt>
   1134c:	mov	r2, #58	; 0x3a
   11350:	mov	r3, r0
   11354:	add	r0, r0, #1
   11358:	strb	r2, [r3]
   1135c:	movw	r8, #12512	; 0x30e0
   11360:	movt	r8, #2
   11364:	mov	r2, r4
   11368:	ldr	r1, [fp, #-144]	; 0xffffff70
   1136c:	bl	10bb8 <memcpy@plt>
   11370:	ldr	r4, [r8, #4]
   11374:	cmp	r4, #1
   11378:	beq	11924 <elf_kind@plt+0xbe0>
   1137c:	cmp	r4, #2
   11380:	beq	11c24 <elf_kind@plt+0xee0>
   11384:	cmp	r4, #3
   11388:	beq	11780 <elf_kind@plt+0xa3c>
   1138c:	ldr	r5, [r8, #12]
   11390:	cmp	r5, #0
   11394:	movwne	r4, #9360	; 0x2490
   11398:	movtne	r4, #1
   1139c:	beq	115bc <elf_kind@plt+0x878>
   113a0:	mov	r0, r7
   113a4:	mov	r2, #0
   113a8:	mov	r3, #0
   113ac:	strd	r2, [fp, #-140]	; 0xffffff74
   113b0:	bl	10c00 <gelf_getclass@plt>
   113b4:	ldrd	r2, [fp, #-140]	; 0xffffff74
   113b8:	mov	r6, #0
   113bc:	strd	r2, [fp, #-132]	; 0xffffff7c
   113c0:	strd	r2, [fp, #-124]	; 0xffffff84
   113c4:	sub	r3, r0, #1
   113c8:	mov	r0, r7
   113cc:	add	r3, r3, r3, lsl #1
   113d0:	ldr	r3, [r4, r3, lsl #2]
   113d4:	str	r3, [fp, #-156]	; 0xffffff64
   113d8:	bl	10c00 <gelf_getclass@plt>
   113dc:	sub	r0, r0, #1
   113e0:	add	r0, r0, r0, lsl #1
   113e4:	add	r4, r4, r0, lsl #2
   113e8:	ldr	r4, [r4, #4]
   113ec:	str	r4, [fp, #-160]	; 0xffffff60
   113f0:	mov	r1, r6
   113f4:	mov	r0, r7
   113f8:	bl	10ce4 <elf_nextscn@plt>
   113fc:	subs	r6, r0, #0
   11400:	beq	11498 <elf_kind@plt+0x754>
   11404:	sub	r1, fp, #108	; 0x6c
   11408:	bl	10b94 <gelf_getshdr@plt>
   1140c:	subs	r9, r0, #0
   11410:	beq	11e00 <elf_kind@plt+0x10bc>
   11414:	ldrd	r2, [r9, #8]
   11418:	mov	r4, #2
   1141c:	mov	r5, #0
   11420:	and	r4, r4, r2
   11424:	and	r5, r5, r3
   11428:	orrs	ip, r4, r5
   1142c:	beq	113f0 <elf_kind@plt+0x6ac>
   11430:	mov	r1, #0
   11434:	mov	r0, #1
   11438:	and	r3, r3, r1
   1143c:	and	r2, r2, r0
   11440:	orrs	r1, r2, r3
   11444:	bne	11460 <elf_kind@plt+0x71c>
   11448:	ldrd	r4, [fp, #-124]	; 0xffffff84
   1144c:	ldrd	r2, [r9, #32]
   11450:	adds	r4, r4, r2
   11454:	adc	r5, r5, r3
   11458:	strd	r4, [fp, #-124]	; 0xffffff84
   1145c:	b	113f0 <elf_kind@plt+0x6ac>
   11460:	ldr	r3, [r9, #4]
   11464:	cmp	r3, #8
   11468:	ldrd	r2, [r9, #32]
   1146c:	beq	11484 <elf_kind@plt+0x740>
   11470:	ldrd	r4, [fp, #-132]	; 0xffffff7c
   11474:	adds	r4, r4, r2
   11478:	adc	r5, r5, r3
   1147c:	strd	r4, [fp, #-132]	; 0xffffff7c
   11480:	b	113f0 <elf_kind@plt+0x6ac>
   11484:	ldrd	r4, [fp, #-140]	; 0xffffff74
   11488:	adds	r4, r4, r2
   1148c:	adc	r5, r5, r3
   11490:	strd	r4, [fp, #-140]	; 0xffffff74
   11494:	b	113f0 <elf_kind@plt+0x6ac>
   11498:	ldr	r5, [fp, #-156]	; 0xffffff64
   1149c:	ldrd	r0, [fp, #-140]	; 0xffffff74
   114a0:	sub	r2, r5, #2
   114a4:	ldrd	r4, [fp, #-132]	; 0xffffff7c
   114a8:	ldr	r9, [fp, #-160]	; 0xffffff60
   114ac:	adds	r4, r4, r0
   114b0:	str	r2, [sp, #8]
   114b4:	adc	r5, r5, r1
   114b8:	ldrd	r0, [fp, #-124]	; 0xffffff84
   114bc:	sub	r3, r9, #2
   114c0:	ldr	r9, [fp, #-144]	; 0xffffff70
   114c4:	adds	r4, r4, r0
   114c8:	str	r2, [sp, #24]
   114cc:	adc	r5, r5, r1
   114d0:	strd	r0, [sp]
   114d4:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   114d8:	str	r2, [sp, #40]	; 0x28
   114dc:	str	r3, [sp, #56]	; 0x38
   114e0:	strd	r0, [sp, #16]
   114e4:	ldrd	r0, [fp, #-140]	; 0xffffff74
   114e8:	str	r9, [sp, #72]	; 0x48
   114ec:	strd	r4, [sp, #48]	; 0x30
   114f0:	strd	r0, [sp, #32]
   114f4:	movw	r1, #10312	; 0x2848
   114f8:	strd	r4, [sp, #64]	; 0x40
   114fc:	movt	r1, #1
   11500:	mov	r0, #1
   11504:	bl	10cb4 <__printf_chk@plt>
   11508:	cmp	sl, #0
   1150c:	beq	11534 <elf_kind@plt+0x7f0>
   11510:	mov	r2, #5
   11514:	mov	r0, r6
   11518:	movw	r1, #10172	; 0x27bc
   1151c:	movt	r1, #1
   11520:	bl	10bdc <dcgettext@plt>
   11524:	mov	r2, sl
   11528:	mov	r1, r0
   1152c:	mov	r0, #1
   11530:	bl	10cb4 <__printf_chk@plt>
   11534:	movw	r3, #12504	; 0x30d8
   11538:	movt	r3, #2
   1153c:	mov	r0, #10
   11540:	ldr	r1, [r3]
   11544:	bl	10bd0 <fputc_unlocked@plt>
   11548:	ldrd	r2, [r8, #16]
   1154c:	ldrd	r4, [fp, #-124]	; 0xffffff84
   11550:	mov	r0, r7
   11554:	adds	r2, r2, r4
   11558:	adc	r3, r3, r5
   1155c:	ldrd	r4, [r8, #24]
   11560:	strd	r2, [r8, #16]
   11564:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   11568:	adds	r4, r4, r2
   1156c:	adc	r5, r5, r3
   11570:	ldrd	r2, [fp, #-140]	; 0xffffff74
   11574:	strd	r4, [r8, #24]
   11578:	ldrd	r4, [r8, #32]
   1157c:	adds	r2, r2, r4
   11580:	adc	r3, r3, r5
   11584:	strd	r2, [r8, #32]
   11588:	bl	10c00 <gelf_getclass@plt>
   1158c:	ldr	r3, [r8, #40]	; 0x28
   11590:	cmp	r0, r3
   11594:	movlt	r0, r3
   11598:	bge	11774 <elf_kind@plt+0xa30>
   1159c:	str	r0, [r8, #40]	; 0x28
   115a0:	ldr	r5, [fp, #-148]	; 0xffffff6c
   115a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   115a8:	ldr	r3, [r5]
   115ac:	cmp	r2, r3
   115b0:	bne	11f44 <elf_kind@plt+0x1200>
   115b4:	sub	sp, fp, #32
   115b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115bc:	mov	r0, r7
   115c0:	movw	r4, #9360	; 0x2490
   115c4:	bl	10c00 <gelf_getclass@plt>
   115c8:	movt	r4, #1
   115cc:	sub	r3, r0, #1
   115d0:	mov	r0, r7
   115d4:	add	r3, r3, r3, lsl #1
   115d8:	ldr	r6, [r4, r3, lsl #2]
   115dc:	bl	10c00 <gelf_getclass@plt>
   115e0:	mov	r2, #5
   115e4:	movw	r1, #10020	; 0x2724
   115e8:	movt	r1, #1
   115ec:	sub	r6, r6, #2
   115f0:	sub	r3, r0, #1
   115f4:	mov	r0, r5
   115f8:	add	r3, r3, r3, lsl #1
   115fc:	add	r3, r4, r3, lsl #2
   11600:	ldr	r5, [r3, #4]
   11604:	bl	10bdc <dcgettext@plt>
   11608:	mov	r1, #124	; 0x7c
   1160c:	bl	10cf0 <strrchr@plt>
   11610:	mov	r2, #5
   11614:	movw	r1, #10032	; 0x2730
   11618:	movt	r1, #1
   1161c:	cmp	r0, #0
   11620:	addne	r9, r0, #1
   11624:	mov	r0, #0
   11628:	movweq	r9, #10020	; 0x2724
   1162c:	movteq	r9, #1
   11630:	bl	10bdc <dcgettext@plt>
   11634:	mov	r1, #124	; 0x7c
   11638:	bl	10cf0 <strrchr@plt>
   1163c:	mov	r2, #5
   11640:	movw	r1, #10044	; 0x273c
   11644:	movt	r1, #1
   11648:	cmp	r0, #0
   1164c:	addne	r0, r0, #1
   11650:	strne	r0, [fp, #-124]	; 0xffffff84
   11654:	mov	r0, #0
   11658:	movweq	ip, #10032	; 0x2730
   1165c:	movteq	ip, #1
   11660:	streq	ip, [fp, #-124]	; 0xffffff84
   11664:	bl	10bdc <dcgettext@plt>
   11668:	mov	r1, #124	; 0x7c
   1166c:	bl	10cf0 <strrchr@plt>
   11670:	mov	r2, #5
   11674:	movw	r1, #10052	; 0x2744
   11678:	movt	r1, #1
   1167c:	cmp	r0, #0
   11680:	addne	r0, r0, #1
   11684:	strne	r0, [fp, #-132]	; 0xffffff7c
   11688:	mov	r0, #0
   1168c:	movweq	ip, #10044	; 0x273c
   11690:	movteq	ip, #1
   11694:	streq	ip, [fp, #-132]	; 0xffffff7c
   11698:	bl	10bdc <dcgettext@plt>
   1169c:	mov	r1, #124	; 0x7c
   116a0:	bl	10cf0 <strrchr@plt>
   116a4:	mov	r2, #5
   116a8:	movw	r1, #10060	; 0x274c
   116ac:	movt	r1, #1
   116b0:	cmp	r0, #0
   116b4:	addne	r0, r0, #1
   116b8:	strne	r0, [fp, #-140]	; 0xffffff74
   116bc:	mov	r0, #0
   116c0:	movweq	ip, #10052	; 0x2744
   116c4:	movteq	ip, #1
   116c8:	streq	ip, [fp, #-140]	; 0xffffff74
   116cc:	bl	10bdc <dcgettext@plt>
   116d0:	mov	r1, #124	; 0x7c
   116d4:	bl	10cf0 <strrchr@plt>
   116d8:	sub	ip, r5, #2
   116dc:	mov	r2, #5
   116e0:	movw	r1, #10068	; 0x2754
   116e4:	movt	r1, #1
   116e8:	str	ip, [fp, #-164]	; 0xffffff5c
   116ec:	cmp	r0, #0
   116f0:	addne	r5, r0, #1
   116f4:	mov	r0, #0
   116f8:	movweq	r5, #10060	; 0x274c
   116fc:	movteq	r5, #1
   11700:	bl	10bdc <dcgettext@plt>
   11704:	mov	r1, #124	; 0x7c
   11708:	bl	10cf0 <strrchr@plt>
   1170c:	mov	r3, r9
   11710:	ldr	r9, [fp, #-124]	; 0xffffff84
   11714:	mov	r2, r6
   11718:	ldr	ip, [fp, #-164]	; 0xffffff5c
   1171c:	movw	r1, #10288	; 0x2830
   11720:	str	r6, [sp]
   11724:	movt	r1, #1
   11728:	str	r9, [sp, #4]
   1172c:	str	r6, [sp, #8]
   11730:	ldr	r9, [fp, #-132]	; 0xffffff7c
   11734:	str	r6, [sp, #16]
   11738:	ldr	r6, [fp, #-140]	; 0xffffff74
   1173c:	str	r9, [sp, #12]
   11740:	str	ip, [sp, #24]
   11744:	str	r6, [sp, #20]
   11748:	str	r5, [sp, #28]
   1174c:	cmp	r0, #0
   11750:	addne	lr, r0, #1
   11754:	mov	r0, #1
   11758:	movweq	lr, #10068	; 0x2754
   1175c:	movteq	lr, #1
   11760:	str	lr, [sp, #32]
   11764:	bl	10cb4 <__printf_chk@plt>
   11768:	mov	r3, #1
   1176c:	str	r3, [r8, #12]
   11770:	b	113a0 <elf_kind@plt+0x65c>
   11774:	mov	r0, r7
   11778:	bl	10c00 <gelf_getclass@plt>
   1177c:	b	1159c <elf_kind@plt+0x858>
   11780:	mov	r0, r7
   11784:	sub	r1, fp, #112	; 0x70
   11788:	bl	10c90 <elf_getphdrnum@plt>
   1178c:	cmp	r0, #0
   11790:	bne	11ef8 <elf_kind@plt+0x11b4>
   11794:	ldr	r3, [fp, #-112]	; 0xffffff90
   11798:	cmp	r3, #0
   1179c:	moveq	r4, #0
   117a0:	moveq	r5, #0
   117a4:	strdeq	r4, [fp, #-124]	; 0xffffff84
   117a8:	beq	1189c <elf_kind@plt+0xb58>
   117ac:	movw	r6, #9988	; 0x2704
   117b0:	movw	r5, #10004	; 0x2714
   117b4:	movw	r9, #12504	; 0x30d8
   117b8:	mov	r2, #0
   117bc:	mov	r3, #0
   117c0:	movt	r9, #2
   117c4:	movt	r6, #1
   117c8:	movt	r5, #1
   117cc:	strd	r2, [fp, #-124]	; 0xffffff84
   117d0:	mov	r4, r0
   117d4:	str	r9, [fp, #-132]	; 0xffffff7c
   117d8:	mov	sl, #1
   117dc:	b	117f0 <elf_kind@plt+0xaac>
   117e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   117e4:	add	r4, r4, #1
   117e8:	cmp	r4, r3
   117ec:	bcs	1189c <elf_kind@plt+0xb58>
   117f0:	mov	r0, r7
   117f4:	mov	r1, r4
   117f8:	sub	r2, fp, #108	; 0x6c
   117fc:	bl	10bf4 <gelf_getphdr@plt>
   11800:	subs	r9, r0, #0
   11804:	beq	11e7c <elf_kind@plt+0x1138>
   11808:	ldr	r1, [r9]
   1180c:	cmp	r1, #1
   11810:	bne	117e0 <elf_kind@plt+0xa9c>
   11814:	cmp	sl, #0
   11818:	beq	118d0 <elf_kind@plt+0xb8c>
   1181c:	ldr	r1, [r8]
   11820:	cmp	r1, #1
   11824:	beq	118f4 <elf_kind@plt+0xbb0>
   11828:	cmp	r1, #0
   1182c:	movne	r1, r6
   11830:	moveq	r1, r5
   11834:	ldr	ip, [r9, #4]
   11838:	mov	r0, #1
   1183c:	ldrd	r2, [r9, #40]	; 0x28
   11840:	add	r4, r4, #1
   11844:	tst	ip, #4
   11848:	mov	sl, #0
   1184c:	movne	lr, #114	; 0x72
   11850:	moveq	lr, #45	; 0x2d
   11854:	tst	ip, #2
   11858:	str	lr, [sp]
   1185c:	movne	lr, #119	; 0x77
   11860:	moveq	lr, #45	; 0x2d
   11864:	tst	ip, #1
   11868:	str	lr, [sp, #4]
   1186c:	moveq	ip, #45	; 0x2d
   11870:	movne	ip, #120	; 0x78
   11874:	str	ip, [sp, #8]
   11878:	bl	10cb4 <__printf_chk@plt>
   1187c:	ldrd	r2, [r9, #40]	; 0x28
   11880:	ldrd	r0, [fp, #-124]	; 0xffffff84
   11884:	adds	r0, r0, r2
   11888:	adc	r1, r1, r3
   1188c:	ldr	r3, [fp, #-112]	; 0xffffff90
   11890:	strd	r0, [fp, #-124]	; 0xffffff84
   11894:	cmp	r4, r3
   11898:	bcc	117f0 <elf_kind@plt+0xaac>
   1189c:	ldr	r0, [r8]
   118a0:	ldrd	r2, [fp, #-124]	; 0xffffff84
   118a4:	cmp	r0, #1
   118a8:	beq	11d70 <elf_kind@plt+0x102c>
   118ac:	cmp	r0, #0
   118b0:	movweq	r1, #10264	; 0x2818
   118b4:	movwne	r1, #10276	; 0x2824
   118b8:	moveq	r0, #1
   118bc:	movteq	r1, #1
   118c0:	movne	r0, #1
   118c4:	movtne	r1, #1
   118c8:	bl	10cb4 <__printf_chk@plt>
   118cc:	b	115a0 <elf_kind@plt+0x85c>
   118d0:	ldr	ip, [fp, #-132]	; 0xffffff7c
   118d4:	movw	r0, #10248	; 0x2808
   118d8:	mov	r2, #3
   118dc:	movt	r0, #1
   118e0:	ldr	r3, [ip]
   118e4:	bl	10bc4 <fwrite_unlocked@plt>
   118e8:	ldr	r1, [r8]
   118ec:	cmp	r1, #1
   118f0:	bne	11828 <elf_kind@plt+0xae4>
   118f4:	movw	r1, #9972	; 0x26f4
   118f8:	movt	r1, #1
   118fc:	b	11834 <elf_kind@plt+0xaf0>
   11900:	ldr	r0, [fp, #-144]	; 0xffffff70
   11904:	bl	10c6c <strlen@plt>
   11908:	add	r3, r0, #9
   1190c:	add	r4, r0, #1
   11910:	bic	r3, r3, #7
   11914:	sub	sp, sp, r3
   11918:	add	r0, sp, #80	; 0x50
   1191c:	str	r0, [fp, #-152]	; 0xffffff68
   11920:	b	1135c <elf_kind@plt+0x618>
   11924:	mov	r0, r7
   11928:	bl	10c00 <gelf_getclass@plt>
   1192c:	ldr	ip, [r8]
   11930:	movw	r3, #9360	; 0x2490
   11934:	movt	r3, #1
   11938:	sub	r1, fp, #112	; 0x70
   1193c:	sub	r2, r0, #1
   11940:	mov	r0, r7
   11944:	add	r2, r2, r2, lsl #1
   11948:	add	r2, r2, ip
   1194c:	ldr	r2, [r3, r2, lsl #2]
   11950:	str	r2, [fp, #-140]	; 0xffffff74
   11954:	bl	10d38 <elf_getshdrstrndx@plt>
   11958:	cmp	r0, #0
   1195c:	blt	11eb0 <elf_kind@plt+0x116c>
   11960:	mov	r6, #0
   11964:	mov	r9, #10
   11968:	mov	r1, r6
   1196c:	mov	r0, r7
   11970:	bl	10ce4 <elf_nextscn@plt>
   11974:	subs	r6, r0, #0
   11978:	beq	119d0 <elf_kind@plt+0xc8c>
   1197c:	sub	r1, fp, #108	; 0x6c
   11980:	bl	10b94 <gelf_getshdr@plt>
   11984:	subs	r5, r0, #0
   11988:	beq	11e48 <elf_kind@plt+0x1104>
   1198c:	mov	r0, r7
   11990:	ldr	r1, [fp, #-112]	; 0xffffff90
   11994:	ldr	r2, [r5]
   11998:	bl	10c0c <elf_strptr@plt>
   1199c:	cmp	r0, #0
   119a0:	beq	11968 <elf_kind@plt+0xc24>
   119a4:	ldrd	r2, [r5, #8]
   119a8:	mov	r4, #2
   119ac:	mov	r5, #0
   119b0:	and	r2, r2, r4
   119b4:	and	r3, r3, r5
   119b8:	orrs	r5, r2, r3
   119bc:	beq	11968 <elf_kind@plt+0xc24>
   119c0:	bl	10c6c <strlen@plt>
   119c4:	cmp	r9, r0
   119c8:	movlt	r9, r0
   119cc:	b	11968 <elf_kind@plt+0xc24>
   119d0:	movw	r3, #12504	; 0x30d8
   119d4:	movt	r3, #2
   119d8:	ldr	r0, [fp, #-144]	; 0xffffff70
   119dc:	ldr	r1, [r3]
   119e0:	bl	10b88 <fputs_unlocked@plt>
   119e4:	cmp	sl, #0
   119e8:	beq	11a10 <elf_kind@plt+0xccc>
   119ec:	mov	r2, #5
   119f0:	movw	r1, #10172	; 0x27bc
   119f4:	mov	r0, r6
   119f8:	movt	r1, #1
   119fc:	bl	10bdc <dcgettext@plt>
   11a00:	mov	r2, sl
   11a04:	mov	r1, r0
   11a08:	mov	r0, #1
   11a0c:	bl	10cb4 <__printf_chk@plt>
   11a10:	mov	r2, #5
   11a14:	movw	r1, #9824	; 0x2660
   11a18:	mov	r0, #0
   11a1c:	movt	r1, #1
   11a20:	bl	10bdc <dcgettext@plt>
   11a24:	mov	r1, #124	; 0x7c
   11a28:	bl	10cf0 <strrchr@plt>
   11a2c:	mov	r2, #5
   11a30:	movw	r1, #9840	; 0x2670
   11a34:	movt	r1, #1
   11a38:	cmp	r0, #0
   11a3c:	addne	r4, r0, #1
   11a40:	mov	r0, #0
   11a44:	movweq	r4, #9824	; 0x2660
   11a48:	movteq	r4, #1
   11a4c:	bl	10bdc <dcgettext@plt>
   11a50:	mov	r1, #124	; 0x7c
   11a54:	bl	10cf0 <strrchr@plt>
   11a58:	ldr	ip, [fp, #-140]	; 0xffffff74
   11a5c:	mov	r2, #5
   11a60:	movw	r1, #9852	; 0x267c
   11a64:	movt	r1, #1
   11a68:	sub	sl, ip, #2
   11a6c:	cmp	r0, #0
   11a70:	addne	r5, r0, #1
   11a74:	mov	r0, #0
   11a78:	movweq	r5, #9840	; 0x2670
   11a7c:	movteq	r5, #1
   11a80:	bl	10bdc <dcgettext@plt>
   11a84:	mov	r1, #124	; 0x7c
   11a88:	bl	10cf0 <strrchr@plt>
   11a8c:	mov	r3, r4
   11a90:	ldr	r4, [fp, #-140]	; 0xffffff74
   11a94:	movw	r1, #10184	; 0x27c8
   11a98:	str	r5, [sp, #4]
   11a9c:	movt	r1, #1
   11aa0:	str	sl, [sp]
   11aa4:	movw	r5, #9884	; 0x269c
   11aa8:	str	r4, [sp, #8]
   11aac:	movt	r5, #1
   11ab0:	mov	r4, #0
   11ab4:	cmp	r0, #0
   11ab8:	addne	r2, r0, #1
   11abc:	mov	r0, #1
   11ac0:	movweq	r2, #9852	; 0x267c
   11ac4:	movteq	r2, #1
   11ac8:	str	r2, [sp, #12]
   11acc:	mov	r2, r9
   11ad0:	bl	10cb4 <__printf_chk@plt>
   11ad4:	str	r5, [fp, #-144]	; 0xffffff70
   11ad8:	mov	r5, #0
   11adc:	strd	r4, [fp, #-124]	; 0xffffff84
   11ae0:	mov	r5, r6
   11ae4:	movw	ip, #9904	; 0x26b0
   11ae8:	str	r9, [fp, #-132]	; 0xffffff7c
   11aec:	movt	ip, #1
   11af0:	str	r8, [fp, #-156]	; 0xffffff64
   11af4:	str	ip, [fp, #-152]	; 0xffffff68
   11af8:	mov	r1, r5
   11afc:	mov	r0, r7
   11b00:	bl	10ce4 <elf_nextscn@plt>
   11b04:	subs	r5, r0, #0
   11b08:	beq	11bbc <elf_kind@plt+0xe78>
   11b0c:	sub	r1, fp, #108	; 0x6c
   11b10:	mov	r9, #0
   11b14:	bl	10b94 <gelf_getshdr@plt>
   11b18:	mov	r8, #2
   11b1c:	ldrd	r2, [r0, #8]
   11b20:	mov	r6, r0
   11b24:	and	r2, r2, r8
   11b28:	and	r3, r3, r9
   11b2c:	orrs	r9, r2, r3
   11b30:	beq	11af8 <elf_kind@plt+0xdb4>
   11b34:	ldr	ip, [fp, #-156]	; 0xffffff64
   11b38:	ldr	r4, [ip]
   11b3c:	cmp	r4, #1
   11b40:	beq	11bb0 <elf_kind@plt+0xe6c>
   11b44:	ldr	r9, [fp, #-152]	; 0xffffff68
   11b48:	cmp	r4, #0
   11b4c:	ldr	r8, [fp, #-144]	; 0xffffff70
   11b50:	moveq	r8, r9
   11b54:	mov	r4, r8
   11b58:	ldr	r1, [fp, #-112]	; 0xffffff90
   11b5c:	mov	r0, r7
   11b60:	ldr	r2, [r6]
   11b64:	bl	10c0c <elf_strptr@plt>
   11b68:	str	sl, [sp]
   11b6c:	ldrd	r8, [r6, #32]
   11b70:	mov	r1, r4
   11b74:	ldr	r2, [fp, #-132]	; 0xffffff7c
   11b78:	strd	r8, [sp, #8]
   11b7c:	ldr	r9, [fp, #-140]	; 0xffffff74
   11b80:	str	r9, [sp, #16]
   11b84:	ldrd	r8, [r6, #16]
   11b88:	strd	r8, [sp, #24]
   11b8c:	mov	r3, r0
   11b90:	mov	r0, #1
   11b94:	bl	10cb4 <__printf_chk@plt>
   11b98:	ldrd	r8, [fp, #-124]	; 0xffffff84
   11b9c:	ldrd	r2, [r6, #32]
   11ba0:	adds	r8, r8, r2
   11ba4:	adc	r9, r9, r3
   11ba8:	strd	r8, [fp, #-124]	; 0xffffff84
   11bac:	b	11af8 <elf_kind@plt+0xdb4>
   11bb0:	movw	r4, #9864	; 0x2688
   11bb4:	movt	r4, #1
   11bb8:	b	11b58 <elf_kind@plt+0xe14>
   11bbc:	ldr	r8, [fp, #-156]	; 0xffffff64
   11bc0:	movw	r1, #9924	; 0x26c4
   11bc4:	ldr	r9, [fp, #-132]	; 0xffffff7c
   11bc8:	mov	r2, #5
   11bcc:	movt	r1, #1
   11bd0:	ldr	r3, [r8]
   11bd4:	cmp	r3, #1
   11bd8:	beq	11dc0 <elf_kind@plt+0x107c>
   11bdc:	cmp	r3, #0
   11be0:	bne	11d80 <elf_kind@plt+0x103c>
   11be4:	bl	10bdc <dcgettext@plt>
   11be8:	mov	r1, #124	; 0x7c
   11bec:	bl	10cf0 <strrchr@plt>
   11bf0:	mov	r2, r9
   11bf4:	ldrd	r8, [fp, #-124]	; 0xffffff84
   11bf8:	movw	r1, #10216	; 0x27e8
   11bfc:	str	sl, [sp]
   11c00:	movt	r1, #1
   11c04:	strd	r8, [sp, #8]
   11c08:	cmp	r0, #0
   11c0c:	addne	r3, r0, #1
   11c10:	mov	r0, #1
   11c14:	movweq	r3, #9924	; 0x26c4
   11c18:	movteq	r3, #1
   11c1c:	bl	10cb4 <__printf_chk@plt>
   11c20:	b	115a0 <elf_kind@plt+0x85c>
   11c24:	mov	r0, r7
   11c28:	sub	r1, fp, #112	; 0x70
   11c2c:	bl	10d38 <elf_getshdrstrndx@plt>
   11c30:	cmp	r0, #0
   11c34:	blt	11ed4 <elf_kind@plt+0x1190>
   11c38:	movw	r6, #9960	; 0x26e8
   11c3c:	movw	r9, #12504	; 0x30d8
   11c40:	movt	r6, #1
   11c44:	movt	r9, #2
   11c48:	str	r6, [fp, #-140]	; 0xffffff74
   11c4c:	mov	r6, #0
   11c50:	str	r9, [fp, #-144]	; 0xffffff70
   11c54:	mov	r9, #1
   11c58:	movw	r5, #9948	; 0x26dc
   11c5c:	mov	r4, #0
   11c60:	movt	r5, #1
   11c64:	str	r5, [fp, #-132]	; 0xffffff7c
   11c68:	mov	r5, #0
   11c6c:	strd	r4, [fp, #-172]	; 0xffffff54
   11c70:	mov	r1, r6
   11c74:	mov	r0, r7
   11c78:	bl	10ce4 <elf_nextscn@plt>
   11c7c:	subs	r6, r0, #0
   11c80:	beq	11d58 <elf_kind@plt+0x1014>
   11c84:	sub	r1, fp, #108	; 0x6c
   11c88:	bl	10b94 <gelf_getshdr@plt>
   11c8c:	mov	r1, #0
   11c90:	ldrd	r2, [r0, #8]
   11c94:	mov	sl, r0
   11c98:	mov	r0, #2
   11c9c:	and	r3, r3, r1
   11ca0:	and	r2, r2, r0
   11ca4:	orrs	ip, r2, r3
   11ca8:	beq	11c70 <elf_kind@plt+0xf2c>
   11cac:	cmp	r9, #0
   11cb0:	beq	11d24 <elf_kind@plt+0xfe0>
   11cb4:	ldr	r3, [r8]
   11cb8:	cmp	r3, #1
   11cbc:	beq	11d4c <elf_kind@plt+0x1008>
   11cc0:	ldr	r9, [fp, #-140]	; 0xffffff74
   11cc4:	cmp	r3, #0
   11cc8:	ldr	r5, [fp, #-132]	; 0xffffff7c
   11ccc:	moveq	r5, r9
   11cd0:	mov	r3, r5
   11cd4:	ldrd	r4, [sl, #32]
   11cd8:	mov	r0, r7
   11cdc:	ldr	r2, [sl]
   11ce0:	mov	r9, #0
   11ce4:	ldr	r1, [fp, #-112]	; 0xffffff90
   11ce8:	strd	r4, [fp, #-124]	; 0xffffff84
   11cec:	str	r3, [fp, #-164]	; 0xffffff5c
   11cf0:	bl	10c0c <elf_strptr@plt>
   11cf4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   11cf8:	mov	r1, r3
   11cfc:	ldrd	r2, [fp, #-124]	; 0xffffff84
   11d00:	str	r0, [sp]
   11d04:	mov	r0, #1
   11d08:	bl	10cb4 <__printf_chk@plt>
   11d0c:	ldrd	r4, [fp, #-172]	; 0xffffff54
   11d10:	ldrd	r2, [sl, #32]
   11d14:	adds	r4, r4, r2
   11d18:	adc	r5, r5, r3
   11d1c:	strd	r4, [fp, #-172]	; 0xffffff54
   11d20:	b	11c70 <elf_kind@plt+0xf2c>
   11d24:	ldr	r4, [fp, #-144]	; 0xffffff70
   11d28:	movw	r0, #10248	; 0x2808
   11d2c:	mov	r1, #1
   11d30:	movt	r0, #1
   11d34:	mov	r2, #3
   11d38:	ldr	r3, [r4]
   11d3c:	bl	10bc4 <fwrite_unlocked@plt>
   11d40:	ldr	r3, [r8]
   11d44:	cmp	r3, #1
   11d48:	bne	11cc0 <elf_kind@plt+0xf7c>
   11d4c:	movw	r3, #9936	; 0x26d0
   11d50:	movt	r3, #1
   11d54:	b	11cd4 <elf_kind@plt+0xf90>
   11d58:	ldr	r0, [r8]
   11d5c:	ldrd	r4, [fp, #-172]	; 0xffffff54
   11d60:	cmp	r0, #1
   11d64:	mov	r2, r4
   11d68:	mov	r3, r5
   11d6c:	bne	118ac <elf_kind@plt+0xb68>
   11d70:	movw	r1, #10252	; 0x280c
   11d74:	movt	r1, #1
   11d78:	bl	10cb4 <__printf_chk@plt>
   11d7c:	b	115a0 <elf_kind@plt+0x85c>
   11d80:	bl	10bdc <dcgettext@plt>
   11d84:	mov	r1, #124	; 0x7c
   11d88:	bl	10cf0 <strrchr@plt>
   11d8c:	ldrd	r4, [fp, #-124]	; 0xffffff84
   11d90:	str	sl, [sp]
   11d94:	mov	r2, r9
   11d98:	movw	r1, #10232	; 0x27f8
   11d9c:	movt	r1, #1
   11da0:	strd	r4, [sp, #8]
   11da4:	cmp	r0, #0
   11da8:	addne	r3, r0, #1
   11dac:	mov	r0, #1
   11db0:	movweq	r3, #9924	; 0x26c4
   11db4:	movteq	r3, #1
   11db8:	bl	10cb4 <__printf_chk@plt>
   11dbc:	b	115a0 <elf_kind@plt+0x85c>
   11dc0:	bl	10bdc <dcgettext@plt>
   11dc4:	mov	r1, #124	; 0x7c
   11dc8:	bl	10cf0 <strrchr@plt>
   11dcc:	ldrd	r4, [fp, #-124]	; 0xffffff84
   11dd0:	str	sl, [sp]
   11dd4:	mov	r2, r9
   11dd8:	movw	r1, #10200	; 0x27d8
   11ddc:	movt	r1, #1
   11de0:	strd	r4, [sp, #8]
   11de4:	cmp	r0, #0
   11de8:	addne	r3, r0, #1
   11dec:	mov	r0, #1
   11df0:	movweq	r3, #9924	; 0x26c4
   11df4:	movteq	r3, #1
   11df8:	bl	10cb4 <__printf_chk@plt>
   11dfc:	b	115a0 <elf_kind@plt+0x85c>
   11e00:	mov	r2, #5
   11e04:	movw	r1, #10132	; 0x2794
   11e08:	movt	r1, #1
   11e0c:	bl	10bdc <dcgettext@plt>
   11e10:	mov	r4, r0
   11e14:	mvn	r0, #0
   11e18:	bl	10c78 <elf_errmsg@plt>
   11e1c:	ldr	r3, [fp, #-152]	; 0xffffff68
   11e20:	mov	r2, r4
   11e24:	mov	r1, r9
   11e28:	movw	ip, #10164	; 0x27b4
   11e2c:	mov	lr, #528	; 0x210
   11e30:	movt	ip, #1
   11e34:	str	r0, [sp, #8]
   11e38:	str	lr, [sp]
   11e3c:	mov	r0, #1
   11e40:	str	ip, [sp, #4]
   11e44:	bl	10c24 <error@plt>
   11e48:	mov	r2, #5
   11e4c:	movw	r1, #10132	; 0x2794
   11e50:	movt	r1, #1
   11e54:	bl	10bdc <dcgettext@plt>
   11e58:	mov	r4, r0
   11e5c:	mvn	r0, #0
   11e60:	bl	10c78 <elf_errmsg@plt>
   11e64:	mov	r2, r4
   11e68:	mov	r1, r5
   11e6c:	ldr	r3, [fp, #-152]	; 0xffffff68
   11e70:	movw	ip, #10164	; 0x27b4
   11e74:	mov	lr, #408	; 0x198
   11e78:	b	11e30 <elf_kind@plt+0x10ec>
   11e7c:	mov	r2, #5
   11e80:	movw	r1, #10132	; 0x2794
   11e84:	movt	r1, #1
   11e88:	bl	10bdc <dcgettext@plt>
   11e8c:	mov	r4, r0
   11e90:	mvn	r0, #0
   11e94:	bl	10c78 <elf_errmsg@plt>
   11e98:	mov	r2, r4
   11e9c:	mov	r1, r9
   11ea0:	ldr	r3, [fp, #-152]	; 0xffffff68
   11ea4:	movw	ip, #10164	; 0x27b4
   11ea8:	movw	lr, #597	; 0x255
   11eac:	b	11e30 <elf_kind@plt+0x10ec>
   11eb0:	mov	r2, #5
   11eb4:	movw	r1, #10084	; 0x2764
   11eb8:	mov	r0, #0
   11ebc:	movt	r1, #1
   11ec0:	bl	10bdc <dcgettext@plt>
   11ec4:	mov	r1, #0
   11ec8:	mov	r2, r0
   11ecc:	mov	r0, r4
   11ed0:	bl	10c24 <error@plt>
   11ed4:	mov	r2, #5
   11ed8:	movw	r1, #10084	; 0x2764
   11edc:	mov	r0, #0
   11ee0:	movt	r1, #1
   11ee4:	bl	10bdc <dcgettext@plt>
   11ee8:	mov	r1, #0
   11eec:	mov	r2, r0
   11ef0:	mov	r0, #1
   11ef4:	bl	10c24 <error@plt>
   11ef8:	mov	r2, #5
   11efc:	movw	r1, #10132	; 0x2794
   11f00:	mov	r0, #0
   11f04:	movt	r1, #1
   11f08:	bl	10bdc <dcgettext@plt>
   11f0c:	mov	r4, r0
   11f10:	mvn	r0, #0
   11f14:	bl	10c78 <elf_errmsg@plt>
   11f18:	movw	r1, #586	; 0x24a
   11f1c:	movw	ip, #10164	; 0x27b4
   11f20:	str	r1, [sp]
   11f24:	movt	ip, #1
   11f28:	mov	r2, r4
   11f2c:	ldr	r3, [fp, #-152]	; 0xffffff68
   11f30:	mov	r1, #0
   11f34:	str	ip, [sp, #4]
   11f38:	str	r0, [sp, #8]
   11f3c:	mov	r0, #1
   11f40:	bl	10c24 <error@plt>
   11f44:	bl	10be8 <__stack_chk_fail@plt>
   11f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f4c:	add	fp, sp, #32
   11f50:	sub	sp, sp, #36	; 0x24
   11f54:	movw	sl, #12488	; 0x30c8
   11f58:	movt	sl, #2
   11f5c:	cmp	r2, #0
   11f60:	str	r2, [fp, #-48]	; 0xffffffd0
   11f64:	ldr	r2, [sl]
   11f68:	mov	r6, r0
   11f6c:	mov	r8, r1
   11f70:	str	r3, [fp, #-52]	; 0xffffffcc
   11f74:	str	r2, [fp, #-40]	; 0xffffffd8
   11f78:	beq	120e4 <elf_kind@plt+0x13a0>
   11f7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11f80:	bl	10c6c <strlen@plt>
   11f84:	mov	r5, r0
   11f88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11f8c:	bl	10c6c <strlen@plt>
   11f90:	mov	r2, r5
   11f94:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11f98:	add	r4, r0, #1
   11f9c:	add	r3, r4, r5
   11fa0:	add	r3, r3, #8
   11fa4:	bic	r3, r3, #7
   11fa8:	sub	sp, sp, r3
   11fac:	add	r9, sp, #16
   11fb0:	mov	r0, r9
   11fb4:	bl	10c54 <mempcpy@plt>
   11fb8:	mov	r2, #58	; 0x3a
   11fbc:	mov	r3, r0
   11fc0:	add	r0, r0, #1
   11fc4:	strb	r2, [r3]
   11fc8:	mov	r2, r4
   11fcc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11fd0:	mov	r5, #8
   11fd4:	bl	10bb8 <memcpy@plt>
   11fd8:	mov	r7, #0
   11fdc:	b	1201c <elf_kind@plt+0x12d8>
   11fe0:	cmp	r0, #1
   11fe4:	bne	12000 <elf_kind@plt+0x12bc>
   11fe8:	ldr	r3, [r5]
   11fec:	mov	r0, r6
   11ff0:	mov	r1, r4
   11ff4:	mov	r2, r9
   11ff8:	bl	11f48 <elf_kind@plt+0x1204>
   11ffc:	orr	r7, r7, r0
   12000:	mov	r0, r4
   12004:	bl	10cfc <elf_next@plt>
   12008:	mov	r5, r0
   1200c:	mov	r0, r4
   12010:	bl	10c60 <elf_end@plt>
   12014:	cmp	r0, #0
   12018:	bne	12108 <elf_kind@plt+0x13c4>
   1201c:	mov	r1, r5
   12020:	mov	r0, r6
   12024:	mov	r2, r8
   12028:	bl	10ccc <elf_begin@plt>
   1202c:	subs	r4, r0, #0
   12030:	beq	12060 <elf_kind@plt+0x131c>
   12034:	bl	10d14 <elf_getarhdr@plt>
   12038:	mov	r5, r0
   1203c:	mov	r0, r4
   12040:	bl	10d44 <elf_kind@plt>
   12044:	cmp	r0, #3
   12048:	bne	11fe0 <elf_kind@plt+0x129c>
   1204c:	ldr	r2, [r5]
   12050:	mov	r0, r4
   12054:	mov	r1, r9
   12058:	bl	112dc <elf_kind@plt+0x598>
   1205c:	b	12000 <elf_kind@plt+0x12bc>
   12060:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12064:	cmp	r3, #0
   12068:	beq	12088 <elf_kind@plt+0x1344>
   1206c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12070:	mov	r0, r7
   12074:	ldr	r3, [sl]
   12078:	cmp	r2, r3
   1207c:	bne	12154 <elf_kind@plt+0x1410>
   12080:	sub	sp, fp, #32
   12084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12088:	mov	r0, r8
   1208c:	bl	10c60 <elf_end@plt>
   12090:	cmp	r0, #0
   12094:	beq	1206c <elf_kind@plt+0x1328>
   12098:	mov	r2, #5
   1209c:	movw	r1, #10132	; 0x2794
   120a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   120a4:	movt	r1, #1
   120a8:	bl	10bdc <dcgettext@plt>
   120ac:	mov	r4, r0
   120b0:	mvn	r0, #0
   120b4:	bl	10c78 <elf_errmsg@plt>
   120b8:	movw	ip, #10164	; 0x27b4
   120bc:	mov	lr, #380	; 0x17c
   120c0:	movt	ip, #1
   120c4:	mov	r2, r4
   120c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   120cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   120d0:	str	lr, [sp]
   120d4:	str	ip, [sp, #4]
   120d8:	str	r0, [sp, #8]
   120dc:	mov	r0, #1
   120e0:	bl	10c24 <error@plt>
   120e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   120e8:	bl	10c6c <strlen@plt>
   120ec:	add	r3, r0, #9
   120f0:	add	r4, r0, #1
   120f4:	bic	r3, r3, #7
   120f8:	sub	sp, sp, r3
   120fc:	add	r0, sp, #16
   12100:	mov	r9, r0
   12104:	b	11fc8 <elf_kind@plt+0x1284>
   12108:	mov	r2, #5
   1210c:	movw	r1, #10132	; 0x2794
   12110:	mov	r0, #0
   12114:	movt	r1, #1
   12118:	bl	10bdc <dcgettext@plt>
   1211c:	mov	r4, r0
   12120:	mvn	r0, #0
   12124:	bl	10c78 <elf_errmsg@plt>
   12128:	movw	r1, #374	; 0x176
   1212c:	movw	ip, #10164	; 0x27b4
   12130:	str	r1, [sp]
   12134:	movt	ip, #1
   12138:	mov	r2, r4
   1213c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12140:	mov	r1, #0
   12144:	str	ip, [sp, #4]
   12148:	str	r0, [sp, #8]
   1214c:	mov	r0, #1
   12150:	bl	10c24 <error@plt>
   12154:	bl	10be8 <__stack_chk_fail@plt>
   12158:	push	{r4, r5, r6, r7, lr}
   1215c:	mov	r1, #0
   12160:	sub	sp, sp, #20
   12164:	mov	r7, r0
   12168:	bl	10c30 <open64@plt>
   1216c:	cmn	r0, #1
   12170:	mov	r4, r0
   12174:	beq	12274 <elf_kind@plt+0x1530>
   12178:	mov	r1, #8
   1217c:	mov	r2, #0
   12180:	bl	10ccc <elf_begin@plt>
   12184:	subs	r6, r0, #0
   12188:	beq	12238 <elf_kind@plt+0x14f4>
   1218c:	bl	10d44 <elf_kind@plt>
   12190:	cmp	r0, #3
   12194:	mov	r5, r0
   12198:	beq	121d8 <elf_kind@plt+0x1494>
   1219c:	cmp	r0, #1
   121a0:	bne	122dc <elf_kind@plt+0x1598>
   121a4:	mov	r1, r6
   121a8:	mov	r2, #0
   121ac:	mov	r3, r7
   121b0:	mov	r0, r4
   121b4:	bl	11f48 <elf_kind@plt+0x1204>
   121b8:	mov	r6, r0
   121bc:	mov	r0, r4
   121c0:	bl	10d2c <close@plt>
   121c4:	cmp	r0, #0
   121c8:	moveq	r0, r6
   121cc:	bne	122ac <elf_kind@plt+0x1568>
   121d0:	add	sp, sp, #20
   121d4:	pop	{r4, r5, r6, r7, pc}
   121d8:	mov	r0, r6
   121dc:	mov	r1, #0
   121e0:	mov	r2, r7
   121e4:	bl	112dc <elf_kind@plt+0x598>
   121e8:	mov	r0, r6
   121ec:	bl	10c60 <elf_end@plt>
   121f0:	subs	r5, r0, #0
   121f4:	bne	12338 <elf_kind@plt+0x15f4>
   121f8:	mov	r0, r4
   121fc:	bl	10d2c <close@plt>
   12200:	cmp	r0, #0
   12204:	beq	121d0 <elf_kind@plt+0x148c>
   12208:	bl	10c84 <__errno_location@plt>
   1220c:	movw	r1, #10368	; 0x2880
   12210:	movt	r1, #1
   12214:	mov	r2, #5
   12218:	ldr	r4, [r0]
   1221c:	mov	r0, r5
   12220:	bl	10bdc <dcgettext@plt>
   12224:	mov	r3, r7
   12228:	mov	r1, r4
   1222c:	mov	r2, r0
   12230:	mov	r0, #1
   12234:	bl	10c24 <error@plt>
   12238:	mov	r0, r4
   1223c:	bl	10d2c <close@plt>
   12240:	subs	r4, r0, #0
   12244:	bne	1236c <elf_kind@plt+0x1628>
   12248:	mov	r2, #5
   1224c:	movw	r1, #10388	; 0x2894
   12250:	movt	r1, #1
   12254:	bl	10bdc <dcgettext@plt>
   12258:	mov	r1, r4
   1225c:	mov	r3, r7
   12260:	mov	r2, r0
   12264:	mov	r0, r4
   12268:	bl	10c24 <error@plt>
   1226c:	mov	r0, #1
   12270:	b	121d0 <elf_kind@plt+0x148c>
   12274:	bl	10c84 <__errno_location@plt>
   12278:	mov	r2, #5
   1227c:	movw	r1, #10348	; 0x286c
   12280:	movt	r1, #1
   12284:	ldr	r4, [r0]
   12288:	mov	r0, #0
   1228c:	bl	10bdc <dcgettext@plt>
   12290:	mov	r3, r7
   12294:	mov	r1, r4
   12298:	mov	r2, r0
   1229c:	mov	r0, #0
   122a0:	bl	10c24 <error@plt>
   122a4:	mov	r0, #1
   122a8:	b	121d0 <elf_kind@plt+0x148c>
   122ac:	bl	10c84 <__errno_location@plt>
   122b0:	mov	r2, #5
   122b4:	movw	r1, #10368	; 0x2880
   122b8:	movt	r1, #1
   122bc:	ldr	r4, [r0]
   122c0:	mov	r0, #0
   122c4:	bl	10bdc <dcgettext@plt>
   122c8:	mov	r3, r7
   122cc:	mov	r1, r4
   122d0:	mov	r2, r0
   122d4:	mov	r0, r5
   122d8:	bl	10c24 <error@plt>
   122dc:	mov	r0, r6
   122e0:	bl	10c60 <elf_end@plt>
   122e4:	cmp	r0, #0
   122e8:	beq	12238 <elf_kind@plt+0x14f4>
   122ec:	mov	r2, #5
   122f0:	movw	r1, #10132	; 0x2794
   122f4:	mov	r0, #0
   122f8:	movt	r1, #1
   122fc:	bl	10bdc <dcgettext@plt>
   12300:	mov	r4, r0
   12304:	mvn	r0, #0
   12308:	bl	10c78 <elf_errmsg@plt>
   1230c:	mov	r2, r4
   12310:	mov	r3, r7
   12314:	movw	ip, #10164	; 0x27b4
   12318:	mov	r1, #304	; 0x130
   1231c:	movt	ip, #1
   12320:	str	r1, [sp]
   12324:	str	r0, [sp, #8]
   12328:	mov	r1, #0
   1232c:	str	ip, [sp, #4]
   12330:	mov	r0, #1
   12334:	bl	10c24 <error@plt>
   12338:	mov	r2, #5
   1233c:	movw	r1, #10132	; 0x2794
   12340:	mov	r0, #0
   12344:	movt	r1, #1
   12348:	bl	10bdc <dcgettext@plt>
   1234c:	mov	r4, r0
   12350:	mvn	r0, #0
   12354:	bl	10c78 <elf_errmsg@plt>
   12358:	mov	r2, r4
   1235c:	mov	r3, r7
   12360:	movw	ip, #10164	; 0x27b4
   12364:	movw	r1, #285	; 0x11d
   12368:	b	1231c <elf_kind@plt+0x15d8>
   1236c:	bl	10c84 <__errno_location@plt>
   12370:	movw	r1, #10368	; 0x2880
   12374:	mov	r2, #5
   12378:	movt	r1, #1
   1237c:	ldr	r4, [r0]
   12380:	mov	r0, #0
   12384:	b	12220 <elf_kind@plt+0x14dc>
   12388:	push	{r4, lr}
   1238c:	sub	sp, sp, #8
   12390:	ldr	lr, [pc, #104]	; 12400 <elf_kind@plt+0x16bc>
   12394:	mov	r4, r0
   12398:	ldr	ip, [pc, #100]	; 12404 <elf_kind@plt+0x16c0>
   1239c:	ldr	r2, [pc, #100]	; 12408 <elf_kind@plt+0x16c4>
   123a0:	add	lr, pc, lr
   123a4:	ldr	r3, [r1, #40]	; 0x28
   123a8:	add	ip, pc, ip
   123ac:	str	lr, [sp]
   123b0:	mov	r1, #1
   123b4:	str	ip, [sp, #4]
   123b8:	add	r2, pc, r2
   123bc:	bl	10cc0 <__fprintf_chk@plt>
   123c0:	ldr	r1, [pc, #68]	; 1240c <elf_kind@plt+0x16c8>
   123c4:	mov	r2, #5
   123c8:	mov	r0, #0
   123cc:	add	r1, pc, r1
   123d0:	bl	10bdc <dcgettext@plt>
   123d4:	ldr	ip, [pc, #52]	; 12410 <elf_kind@plt+0x16cc>
   123d8:	ldr	r3, [pc, #52]	; 12414 <elf_kind@plt+0x16d0>
   123dc:	mov	r1, #1
   123e0:	add	ip, pc, ip
   123e4:	str	ip, [sp]
   123e8:	add	r3, pc, r3
   123ec:	mov	r2, r0
   123f0:	mov	r0, r4
   123f4:	bl	10cc0 <__fprintf_chk@plt>
   123f8:	add	sp, sp, #8
   123fc:	pop	{r4, pc}
   12400:	andeq	r0, r0, ip, lsl #10
   12404:	andeq	r0, r0, r4, lsl #8
   12408:	andeq	r0, r0, r4, lsr r7
   1240c:	andeq	r0, r0, ip, lsr #14
   12410:	andeq	r0, r0, r8, ror #15
   12414:	ldrdeq	r0, [r0], -r8
   12418:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1241c:	mov	r7, r0
   12420:	ldr	r6, [pc, #76]	; 12474 <elf_kind@plt+0x1730>
   12424:	mov	r8, r1
   12428:	ldr	r5, [pc, #72]	; 12478 <elf_kind@plt+0x1734>
   1242c:	mov	r9, r2
   12430:	add	r6, pc, r6
   12434:	bl	10b68 <fputs_unlocked@plt-0x20>
   12438:	add	r5, pc, r5
   1243c:	rsb	r6, r5, r6
   12440:	asrs	r6, r6, #2
   12444:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   12448:	sub	r5, r5, #4
   1244c:	mov	r4, #0
   12450:	add	r4, r4, #1
   12454:	ldr	r3, [r5, #4]!
   12458:	mov	r0, r7
   1245c:	mov	r1, r8
   12460:	mov	r2, r9
   12464:	blx	r3
   12468:	cmp	r4, r6
   1246c:	bne	12450 <elf_kind@plt+0x170c>
   12470:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12474:	andeq	r0, r1, r0, asr #21
   12478:			; <UNDEFINED> instruction: 0x00010ab4
   1247c:	bx	lr

Disassembly of section .fini:

00012480 <.fini>:
   12480:	push	{r3, lr}
   12484:	pop	{r3, pc}
