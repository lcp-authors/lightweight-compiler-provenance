
centos-preinstalled/nl-class-delete:     file format elf32-littlearm


Disassembly of section .init:

00010990 <.init>:
   10990:	push	{r3, lr}
   10994:	bl	10d30 <exit@plt+0x260>
   10998:	pop	{r3, pc}

Disassembly of section .plt:

0001099c <abort@plt-0x14>:
   1099c:	push	{lr}		; (str lr, [sp, #-4]!)
   109a0:	ldr	lr, [pc, #4]	; 109ac <abort@plt-0x4>
   109a4:	add	lr, pc, lr
   109a8:	ldr	pc, [lr, #8]!
   109ac:	andeq	r1, r1, r4, asr r6

000109b0 <abort@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1620]!	; 0x654

000109bc <nl_cli_fatal@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1612]!	; 0x64c

000109c8 <nl_cache_foreach_filter@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1604]!	; 0x644

000109d4 <__libc_start_main@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1596]!	; 0x63c

000109e0 <__gmon_start__@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1588]!	; 0x634

000109ec <__printf_chk@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1580]!	; 0x62c

000109f8 <nl_cli_tc_parse_parent@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1572]!	; 0x624

00010a04 <nl_cli_print_version@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1564]!	; 0x61c

00010a10 <nl_cli_alloc_socket@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1556]!	; 0x614

00010a1c <nl_cli_class_alloc_cache@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1548]!	; 0x60c

00010a28 <getopt_long@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1540]!	; 0x604

00010a34 <rtnl_tc_get_ifindex@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a40 <nl_cli_link_alloc_cache@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a4c <__stack_chk_fail@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a58 <nl_cli_class_alloc@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a64 <nl_cli_confirm@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a70 <nl_cli_tc_parse_kind@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a7c <nl_object_dump@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a88 <puts@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a94 <nl_geterror@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1468]!	; 0x5bc

00010aa0 <nl_cli_connect@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1460]!	; 0x5b4

00010aac <nl_cli_tc_parse_dev@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1452]!	; 0x5ac

00010ab8 <nl_cli_tc_parse_handle@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1444]!	; 0x5a4

00010ac4 <rtnl_class_delete@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1436]!	; 0x59c

00010ad0 <exit@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1428]!	; 0x594

Disassembly of section .text:

00010adc <.text>:
   10adc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ae0:	movw	fp, #8472	; 0x2118
   10ae4:	movt	fp, #2
   10ae8:	sub	sp, sp, #28
   10aec:	mov	r6, r1
   10af0:	mov	r7, r0
   10af4:	ldr	r3, [fp]
   10af8:	movw	r8, #8488	; 0x2128
   10afc:	movt	r8, #2
   10b00:	movw	r9, #8480	; 0x2120
   10b04:	add	r5, sp, #16
   10b08:	movt	r9, #2
   10b0c:	str	r3, [sp, #20]
   10b10:	bl	10a10 <nl_cli_alloc_socket@plt>
   10b14:	mov	r1, #0
   10b18:	mov	r4, r1
   10b1c:	str	r0, [r8, #4]
   10b20:	bl	10aa0 <nl_cli_connect@plt>
   10b24:	ldr	r0, [r8, #4]
   10b28:	bl	10a40 <nl_cli_link_alloc_cache@plt>
   10b2c:	str	r0, [sp, #12]
   10b30:	bl	10a58 <nl_cli_class_alloc@plt>
   10b34:	mov	sl, r0
   10b38:	str	r5, [sp]
   10b3c:	movw	r2, #4064	; 0xfe0
   10b40:	movw	r3, #8312	; 0x2078
   10b44:	movt	r2, #1
   10b48:	movt	r3, #2
   10b4c:	mov	r0, r7
   10b50:	mov	r1, r6
   10b54:	str	r4, [sp, #16]
   10b58:	bl	10a28 <getopt_long@plt>
   10b5c:	cmn	r0, #1
   10b60:	beq	10c5c <exit@plt+0x18c>
   10b64:	cmp	r0, #107	; 0x6b
   10b68:	beq	10c20 <exit@plt+0x150>
   10b6c:	ble	10b94 <exit@plt+0xc4>
   10b70:	cmp	r0, #118	; 0x76
   10b74:	beq	10c40 <exit@plt+0x170>
   10b78:	bgt	10bc4 <exit@plt+0xf4>
   10b7c:	cmp	r0, #112	; 0x70
   10b80:	beq	10c30 <exit@plt+0x160>
   10b84:	cmp	r0, #113	; 0x71
   10b88:	moveq	r3, #1
   10b8c:	streq	r3, [r8, #12]
   10b90:	b	10b38 <exit@plt+0x68>
   10b94:	cmp	r0, #100	; 0x64
   10b98:	beq	10c0c <exit@plt+0x13c>
   10b9c:	ble	10bf0 <exit@plt+0x120>
   10ba0:	cmp	r0, #104	; 0x68
   10ba4:	beq	10c48 <exit@plt+0x178>
   10ba8:	cmp	r0, #105	; 0x69
   10bac:	bne	10b38 <exit@plt+0x68>
   10bb0:	mov	r0, sl
   10bb4:	ldr	r1, [r9]
   10bb8:	mov	r2, #0
   10bbc:	bl	10ab8 <nl_cli_tc_parse_handle@plt>
   10bc0:	b	10b38 <exit@plt+0x68>
   10bc4:	movw	r3, #257	; 0x101
   10bc8:	cmp	r0, r3
   10bcc:	moveq	r3, #1
   10bd0:	streq	r3, [r8, #8]
   10bd4:	beq	10b38 <exit@plt+0x68>
   10bd8:	add	r3, r3, #1
   10bdc:	cmp	r0, r3
   10be0:	bne	10b38 <exit@plt+0x68>
   10be4:	mov	r3, #1
   10be8:	str	r3, [r8]
   10bec:	b	10b38 <exit@plt+0x68>
   10bf0:	cmp	r0, #63	; 0x3f
   10bf4:	bne	10b38 <exit@plt+0x68>
   10bf8:	movw	r1, #4076	; 0xfec
   10bfc:	mov	r0, #22
   10c00:	movt	r1, #1
   10c04:	bl	109bc <nl_cli_fatal@plt>
   10c08:	b	10be4 <exit@plt+0x114>
   10c0c:	mov	r0, sl
   10c10:	ldr	r1, [sp, #12]
   10c14:	ldr	r2, [r9]
   10c18:	bl	10aac <nl_cli_tc_parse_dev@plt>
   10c1c:	b	10b38 <exit@plt+0x68>
   10c20:	mov	r0, sl
   10c24:	ldr	r1, [r9]
   10c28:	bl	10a70 <nl_cli_tc_parse_kind@plt>
   10c2c:	b	10b38 <exit@plt+0x68>
   10c30:	mov	r0, sl
   10c34:	ldr	r1, [r9]
   10c38:	bl	109f8 <nl_cli_tc_parse_parent@plt>
   10c3c:	b	10b38 <exit@plt+0x68>
   10c40:	bl	10a04 <nl_cli_print_version@plt>
   10c44:	b	10b38 <exit@plt+0x68>
   10c48:	movw	r0, #4092	; 0xffc
   10c4c:	movt	r0, #1
   10c50:	bl	10a88 <puts@plt>
   10c54:	mov	r0, #0
   10c58:	bl	10ad0 <exit@plt>
   10c5c:	mov	r0, sl
   10c60:	bl	10a34 <rtnl_tc_get_ifindex@plt>
   10c64:	cmp	r0, #0
   10c68:	beq	10cdc <exit@plt+0x20c>
   10c6c:	mov	r0, sl
   10c70:	ldr	r4, [r8, #4]
   10c74:	bl	10a34 <rtnl_tc_get_ifindex@plt>
   10c78:	mov	r1, r0
   10c7c:	mov	r0, r4
   10c80:	bl	10a1c <nl_cli_class_alloc_cache@plt>
   10c84:	mov	r3, #0
   10c88:	mov	r1, sl
   10c8c:	movw	r2, #3624	; 0xe28
   10c90:	movt	r2, #1
   10c94:	movw	r4, #8488	; 0x2128
   10c98:	bl	109c8 <nl_cache_foreach_filter@plt>
   10c9c:	ldr	r3, [r8, #12]
   10ca0:	movt	r4, #2
   10ca4:	cmp	r3, #0
   10ca8:	bne	10cc0 <exit@plt+0x1f0>
   10cac:	movw	r1, #4772	; 0x12a4
   10cb0:	ldr	r2, [r4, #16]
   10cb4:	mov	r0, #1
   10cb8:	movt	r1, #1
   10cbc:	bl	109ec <__printf_chk@plt>
   10cc0:	ldr	r2, [sp, #20]
   10cc4:	mov	r0, #0
   10cc8:	ldr	r3, [fp]
   10ccc:	cmp	r2, r3
   10cd0:	bne	10cf0 <exit@plt+0x220>
   10cd4:	add	sp, sp, #28
   10cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cdc:	movw	r1, #4724	; 0x1274
   10ce0:	mov	r0, #22
   10ce4:	movt	r1, #1
   10ce8:	bl	109bc <nl_cli_fatal@plt>
   10cec:	b	10c6c <exit@plt+0x19c>
   10cf0:	bl	10a4c <__stack_chk_fail@plt>
   10cf4:	mov	fp, #0
   10cf8:	mov	lr, #0
   10cfc:	pop	{r1}		; (ldr r1, [sp], #4)
   10d00:	mov	r2, sp
   10d04:	push	{r2}		; (str r2, [sp, #-4]!)
   10d08:	push	{r0}		; (str r0, [sp, #-4]!)
   10d0c:	ldr	ip, [pc, #16]	; 10d24 <exit@plt+0x254>
   10d10:	push	{ip}		; (str ip, [sp, #-4]!)
   10d14:	ldr	r0, [pc, #12]	; 10d28 <exit@plt+0x258>
   10d18:	ldr	r3, [pc, #12]	; 10d2c <exit@plt+0x25c>
   10d1c:	bl	109d4 <__libc_start_main@plt>
   10d20:	bl	109b0 <abort@plt>
   10d24:	andeq	r0, r1, r4, lsr #31
   10d28:	ldrdeq	r0, [r1], -ip
   10d2c:	andeq	r0, r1, r0, asr #30
   10d30:	ldr	r3, [pc, #20]	; 10d4c <exit@plt+0x27c>
   10d34:	ldr	r2, [pc, #20]	; 10d50 <exit@plt+0x280>
   10d38:	add	r3, pc, r3
   10d3c:	ldr	r2, [r3, r2]
   10d40:	cmp	r2, #0
   10d44:	bxeq	lr
   10d48:	b	109e0 <__gmon_start__@plt>
   10d4c:	andeq	r1, r1, r0, asr #5
   10d50:	andeq	r0, r0, r0, ror r0
   10d54:	push	{r3, lr}
   10d58:	movw	r0, #8472	; 0x2118
   10d5c:	ldr	r3, [pc, #36]	; 10d88 <exit@plt+0x2b8>
   10d60:	movt	r0, #2
   10d64:	rsb	r3, r0, r3
   10d68:	cmp	r3, #6
   10d6c:	popls	{r3, pc}
   10d70:	movw	r3, #0
   10d74:	movt	r3, #0
   10d78:	cmp	r3, #0
   10d7c:	popeq	{r3, pc}
   10d80:	blx	r3
   10d84:	pop	{r3, pc}
   10d88:	andeq	r2, r2, fp, lsl r1
   10d8c:	push	{r3, lr}
   10d90:	movw	r0, #8472	; 0x2118
   10d94:	movw	r3, #8472	; 0x2118
   10d98:	movt	r0, #2
   10d9c:	movt	r3, #2
   10da0:	rsb	r3, r0, r3
   10da4:	asr	r3, r3, #2
   10da8:	add	r3, r3, r3, lsr #31
   10dac:	asrs	r1, r3, #1
   10db0:	popeq	{r3, pc}
   10db4:	movw	r2, #0
   10db8:	movt	r2, #0
   10dbc:	cmp	r2, #0
   10dc0:	popeq	{r3, pc}
   10dc4:	blx	r2
   10dc8:	pop	{r3, pc}
   10dcc:	push	{r4, lr}
   10dd0:	movw	r4, #8484	; 0x2124
   10dd4:	movt	r4, #2
   10dd8:	ldrb	r3, [r4]
   10ddc:	cmp	r3, #0
   10de0:	popne	{r4, pc}
   10de4:	bl	10d54 <exit@plt+0x284>
   10de8:	mov	r3, #1
   10dec:	strb	r3, [r4]
   10df0:	pop	{r4, pc}
   10df4:	movw	r0, #7868	; 0x1ebc
   10df8:	movt	r0, #2
   10dfc:	push	{r3, lr}
   10e00:	ldr	r3, [r0]
   10e04:	cmp	r3, #0
   10e08:	beq	10e20 <exit@plt+0x350>
   10e0c:	movw	r3, #0
   10e10:	movt	r3, #0
   10e14:	cmp	r3, #0
   10e18:	beq	10e20 <exit@plt+0x350>
   10e1c:	blx	r3
   10e20:	pop	{r3, lr}
   10e24:	b	10d8c <exit@plt+0x2bc>
   10e28:	push	{r4, r5, r6, r7, lr}
   10e2c:	movw	r4, #8488	; 0x2128
   10e30:	movt	r4, #2
   10e34:	movw	r5, #8472	; 0x2118
   10e38:	movw	r2, #8476	; 0x211c
   10e3c:	movt	r5, #2
   10e40:	movt	r2, #2
   10e44:	ldr	ip, [r4]
   10e48:	ldr	r1, [r5]
   10e4c:	sub	sp, sp, #60	; 0x3c
   10e50:	ldr	r2, [r2]
   10e54:	mov	r3, #0
   10e58:	cmp	ip, r3
   10e5c:	mov	r6, r0
   10e60:	str	r3, [sp]
   10e64:	str	r1, [sp, #52]	; 0x34
   10e68:	str	r2, [sp, #28]
   10e6c:	str	r3, [sp, #4]
   10e70:	str	r3, [sp, #8]
   10e74:	str	r3, [sp, #12]
   10e78:	str	r3, [sp, #16]
   10e7c:	str	r3, [sp, #20]
   10e80:	str	r3, [sp, #24]
   10e84:	str	r3, [sp, #32]
   10e88:	str	r3, [sp, #36]	; 0x24
   10e8c:	str	r3, [sp, #40]	; 0x28
   10e90:	str	r3, [sp, #44]	; 0x2c
   10e94:	str	r3, [sp, #48]	; 0x30
   10e98:	beq	10ec8 <exit@plt+0x3f8>
   10e9c:	mov	r1, sp
   10ea0:	ldr	r2, [r4, #8]
   10ea4:	bl	10a64 <nl_cli_confirm@plt>
   10ea8:	cmp	r0, #0
   10eac:	bne	10ec8 <exit@plt+0x3f8>
   10eb0:	ldr	r2, [sp, #52]	; 0x34
   10eb4:	ldr	r3, [r5]
   10eb8:	cmp	r2, r3
   10ebc:	bne	10f3c <exit@plt+0x46c>
   10ec0:	add	sp, sp, #60	; 0x3c
   10ec4:	pop	{r4, r5, r6, r7, pc}
   10ec8:	ldr	r0, [r4, #4]
   10ecc:	mov	r1, r6
   10ed0:	bl	10ac4 <rtnl_class_delete@plt>
   10ed4:	subs	r7, r0, #0
   10ed8:	blt	10f20 <exit@plt+0x450>
   10edc:	ldr	r3, [r4, #12]
   10ee0:	cmp	r3, #0
   10ee4:	ldrne	r3, [r4, #16]
   10ee8:	addne	r3, r3, #1
   10eec:	strne	r3, [r4, #16]
   10ef0:	bne	10eb0 <exit@plt+0x3e0>
   10ef4:	movw	r1, #4052	; 0xfd4
   10ef8:	mov	r0, #1
   10efc:	movt	r1, #1
   10f00:	bl	109ec <__printf_chk@plt>
   10f04:	mov	r0, r6
   10f08:	mov	r1, sp
   10f0c:	bl	10a7c <nl_object_dump@plt>
   10f10:	ldr	r3, [r4, #16]
   10f14:	add	r3, r3, #1
   10f18:	str	r3, [r4, #16]
   10f1c:	b	10eb0 <exit@plt+0x3e0>
   10f20:	bl	10a94 <nl_geterror@plt>
   10f24:	movw	r1, #4024	; 0xfb8
   10f28:	movt	r1, #1
   10f2c:	mov	r2, r0
   10f30:	mov	r0, r7
   10f34:	bl	109bc <nl_cli_fatal@plt>
   10f38:	b	10edc <exit@plt+0x40c>
   10f3c:	bl	10a4c <__stack_chk_fail@plt>
   10f40:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10f44:	mov	r7, r0
   10f48:	ldr	r6, [pc, #76]	; 10f9c <exit@plt+0x4cc>
   10f4c:	mov	r8, r1
   10f50:	ldr	r5, [pc, #72]	; 10fa0 <exit@plt+0x4d0>
   10f54:	mov	r9, r2
   10f58:	add	r6, pc, r6
   10f5c:	bl	10990 <abort@plt-0x20>
   10f60:	add	r5, pc, r5
   10f64:	rsb	r6, r5, r6
   10f68:	asrs	r6, r6, #2
   10f6c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f70:	sub	r5, r5, #4
   10f74:	mov	r4, #0
   10f78:	add	r4, r4, #1
   10f7c:	ldr	r3, [r5, #4]!
   10f80:	mov	r0, r7
   10f84:	mov	r1, r8
   10f88:	mov	r2, r9
   10f8c:	blx	r3
   10f90:	cmp	r4, r6
   10f94:	bne	10f78 <exit@plt+0x4a8>
   10f98:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f9c:	andeq	r0, r1, r8, asr pc
   10fa0:	andeq	r0, r1, ip, asr #30
   10fa4:	bx	lr

Disassembly of section .fini:

00010fa8 <.fini>:
   10fa8:	push	{r3, lr}
   10fac:	pop	{r3, pc}
