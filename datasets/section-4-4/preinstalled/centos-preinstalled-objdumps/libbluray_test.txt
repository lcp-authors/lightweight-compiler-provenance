
centos-preinstalled/libbluray_test:     file format elf32-littlearm


Disassembly of section .init:

000109ec <_init@@Base>:
   109ec:	push	{r3, lr}
   109f0:	bl	10d90 <__sprintf_chk@plt+0x270>
   109f4:	pop	{r3, pc}

Disassembly of section .plt:

000109f8 <abort@plt-0x14>:
   109f8:	push	{lr}		; (str lr, [sp, #-4]!)
   109fc:	ldr	lr, [pc, #4]	; 10a08 <_init@@Base+0x1c>
   10a00:	add	lr, pc, lr
   10a04:	ldr	pc, [lr, #8]!
   10a08:	strdeq	r2, [r1], -r8

00010a0c <abort@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #73728	; 0x12000
   10a14:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a18 <__libc_start_main@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #73728	; 0x12000
   10a20:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a24 <__gmon_start__@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #73728	; 0x12000
   10a2c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a30 <fclose@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #73728	; 0x12000
   10a38:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a3c <getenv@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #73728	; 0x12000
   10a44:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a48 <__printf_chk@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #73728	; 0x12000
   10a50:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a54 <fopen@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #73728	; 0x12000
   10a5c:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a60 <memset@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #73728	; 0x12000
   10a68:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a6c <bd_select_title@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #73728	; 0x12000
   10a74:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a78 <fopen64@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #73728	; 0x12000
   10a80:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a84 <bd_get_titles@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #73728	; 0x12000
   10a8c:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a90 <strtol@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #73728	; 0x12000
   10a98:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a9c <__vsnprintf_chk@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #73728	; 0x12000
   10aa4:	ldr	pc, [ip, #1432]!	; 0x598

00010aa8 <raise@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #73728	; 0x12000
   10ab0:	ldr	pc, [ip, #1424]!	; 0x590

00010ab4 <fwrite@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #73728	; 0x12000
   10abc:	ldr	pc, [ip, #1416]!	; 0x588

00010ac0 <setvbuf@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #73728	; 0x12000
   10ac8:	ldr	pc, [ip, #1408]!	; 0x580

00010acc <malloc@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #73728	; 0x12000
   10ad4:	ldr	pc, [ip, #1400]!	; 0x578

00010ad8 <__stack_chk_fail@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #73728	; 0x12000
   10ae0:	ldr	pc, [ip, #1392]!	; 0x570

00010ae4 <__fprintf_chk@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #73728	; 0x12000
   10aec:	ldr	pc, [ip, #1384]!	; 0x568

00010af0 <bd_close@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #73728	; 0x12000
   10af8:	ldr	pc, [ip, #1376]!	; 0x560

00010afc <bd_read@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #73728	; 0x12000
   10b04:	ldr	pc, [ip, #1368]!	; 0x558

00010b08 <bd_open@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #73728	; 0x12000
   10b10:	ldr	pc, [ip, #1360]!	; 0x550

00010b14 <bd_get_title_info@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #73728	; 0x12000
   10b1c:	ldr	pc, [ip, #1352]!	; 0x548

00010b20 <__sprintf_chk@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #73728	; 0x12000
   10b28:	ldr	pc, [ip, #1344]!	; 0x540

Disassembly of section .text:

00010b2c <bd_set_debug_handler@@Base-0x35c>:
   10b2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b30:	cmp	r0, #4
   10b34:	sub	sp, sp, #52	; 0x34
   10b38:	str	r1, [sp, #44]	; 0x2c
   10b3c:	beq	10b64 <__sprintf_chk@plt+0x44>
   10b40:	ldr	r3, [sp, #44]	; 0x2c
   10b44:	movw	r1, #8100	; 0x1fa4
   10b48:	mov	r0, #1
   10b4c:	movt	r1, #1
   10b50:	ldr	r2, [r3]
   10b54:	bl	10a48 <__printf_chk@plt>
   10b58:	mov	r0, #0
   10b5c:	add	sp, sp, #52	; 0x34
   10b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b64:	ldmib	r1, {r0, r1}
   10b68:	bl	10b08 <bd_open@plt>
   10b6c:	mov	r1, #42	; 0x2a
   10b70:	mov	r2, #64	; 0x40
   10b74:	movw	r3, #8000	; 0x1f40
   10b78:	movt	r3, #1
   10b7c:	mov	r9, r0
   10b80:	movw	r0, #7980	; 0x1f2c
   10b84:	movt	r0, #1
   10b88:	bl	10f10 <bd_get_debug_mask@@Base+0x68>
   10b8c:	mov	r0, r9
   10b90:	mov	r1, #3
   10b94:	mov	r2, #0
   10b98:	bl	10a84 <bd_get_titles@plt>
   10b9c:	subs	sl, r0, #0
   10ba0:	ble	10d4c <__sprintf_chk@plt+0x22c>
   10ba4:	mov	r8, #0
   10ba8:	mov	r1, r8
   10bac:	mov	r2, #0
   10bb0:	mov	r0, r9
   10bb4:	bl	10b14 <bd_get_title_info@plt>
   10bb8:	mov	r3, #0
   10bbc:	movw	r2, #24464	; 0x5f90
   10bc0:	movt	r2, #1
   10bc4:	ldrd	r6, [r0, #8]
   10bc8:	mov	fp, r0
   10bcc:	mov	r1, r7
   10bd0:	mov	r0, r6
   10bd4:	bl	11328 <bd_get_debug_mask@@Base+0x480>
   10bd8:	mov	r3, #0
   10bdc:	mov	r2, #55552	; 0xd900
   10be0:	movt	r2, #4943	; 0x134f
   10be4:	str	r8, [sp]
   10be8:	add	r8, r8, #1
   10bec:	mov	r4, r0
   10bf0:	mov	r5, r1
   10bf4:	mov	r0, r6
   10bf8:	mov	r1, r7
   10bfc:	bl	11328 <bd_get_debug_mask@@Base+0x480>
   10c00:	mov	r2, #3600	; 0xe10
   10c04:	mov	r3, #0
   10c08:	strd	r0, [sp, #8]
   10c0c:	mov	r0, r4
   10c10:	mov	r1, r5
   10c14:	bl	11328 <bd_get_debug_mask@@Base+0x480>
   10c18:	mov	r0, r2
   10c1c:	mov	r1, r3
   10c20:	mov	r2, #60	; 0x3c
   10c24:	mov	r3, #0
   10c28:	bl	11328 <bd_get_debug_mask@@Base+0x480>
   10c2c:	mov	r2, #60	; 0x3c
   10c30:	mov	r3, #0
   10c34:	strd	r0, [sp, #16]
   10c38:	mov	r0, r4
   10c3c:	mov	r1, r5
   10c40:	bl	11328 <bd_get_debug_mask@@Base+0x480>
   10c44:	movw	r0, #7980	; 0x1f2c
   10c48:	mov	r1, #55	; 0x37
   10c4c:	movt	r0, #1
   10c50:	strd	r2, [sp, #24]
   10c54:	movw	r3, #8020	; 0x1f54
   10c58:	ldr	ip, [fp, #24]
   10c5c:	movt	r3, #1
   10c60:	mov	r2, #64	; 0x40
   10c64:	str	ip, [sp, #32]
   10c68:	bl	10f10 <bd_get_debug_mask@@Base+0x68>
   10c6c:	cmp	sl, r8
   10c70:	bne	10ba8 <__sprintf_chk@plt+0x88>
   10c74:	ldr	r3, [sp, #44]	; 0x2c
   10c78:	mov	r2, #10
   10c7c:	mov	r1, #0
   10c80:	ldr	r0, [r3, #12]
   10c84:	bl	10a90 <strtol@plt>
   10c88:	mov	r1, r0
   10c8c:	mov	r0, r9
   10c90:	bl	10a6c <bd_select_title@plt>
   10c94:	mov	r0, #6144	; 0x1800
   10c98:	bl	10acc <malloc@plt>
   10c9c:	mov	r1, #0
   10ca0:	mov	r2, #6144	; 0x1800
   10ca4:	mov	r4, r0
   10ca8:	bl	10a60 <memset@plt>
   10cac:	movw	r0, #8076	; 0x1f8c
   10cb0:	movw	r1, #8092	; 0x1f9c
   10cb4:	movt	r0, #1
   10cb8:	movt	r1, #1
   10cbc:	bl	10a78 <fopen64@plt>
   10cc0:	subs	r5, r0, #0
   10cc4:	beq	10d1c <__sprintf_chk@plt+0x1fc>
   10cc8:	mov	r0, sl
   10ccc:	mov	r1, #1000	; 0x3e8
   10cd0:	bl	11308 <bd_get_debug_mask@@Base+0x460>
   10cd4:	mov	r6, r1
   10cd8:	b	10cf0 <__sprintf_chk@plt+0x1d0>
   10cdc:	bl	10ab4 <fwrite@plt>
   10ce0:	cmp	r0, #0
   10ce4:	beq	10d14 <__sprintf_chk@plt+0x1f4>
   10ce8:	cmp	r6, #0
   10cec:	beq	10d28 <__sprintf_chk@plt+0x208>
   10cf0:	mov	r1, r4
   10cf4:	mov	r2, #6144	; 0x1800
   10cf8:	mov	r0, r9
   10cfc:	bl	10afc <bd_read@plt>
   10d00:	mov	r3, r5
   10d04:	mov	r2, #1
   10d08:	subs	r1, r0, #0
   10d0c:	mov	r0, r4
   10d10:	bgt	10cdc <__sprintf_chk@plt+0x1bc>
   10d14:	mov	r0, r5
   10d18:	bl	10a30 <fclose@plt>
   10d1c:	mov	r0, r9
   10d20:	bl	10af0 <bd_close@plt>
   10d24:	b	10b58 <__sprintf_chk@plt+0x38>
   10d28:	str	sl, [sp]
   10d2c:	movw	r0, #7980	; 0x1f2c
   10d30:	movw	r3, #8096	; 0x1fa0
   10d34:	movt	r0, #1
   10d38:	movt	r3, #1
   10d3c:	mov	r1, #79	; 0x4f
   10d40:	mov	r2, #64	; 0x40
   10d44:	bl	10f10 <bd_get_debug_mask@@Base+0x68>
   10d48:	b	10cf0 <__sprintf_chk@plt+0x1d0>
   10d4c:	mov	sl, #0
   10d50:	b	10c74 <__sprintf_chk@plt+0x154>
   10d54:	mov	fp, #0
   10d58:	mov	lr, #0
   10d5c:	pop	{r1}		; (ldr r1, [sp], #4)
   10d60:	mov	r2, sp
   10d64:	push	{r2}		; (str r2, [sp, #-4]!)
   10d68:	push	{r0}		; (str r0, [sp, #-4]!)
   10d6c:	ldr	ip, [pc, #16]	; 10d84 <__sprintf_chk@plt+0x264>
   10d70:	push	{ip}		; (str ip, [sp, #-4]!)
   10d74:	ldr	r0, [pc, #12]	; 10d88 <__sprintf_chk@plt+0x268>
   10d78:	ldr	r3, [pc, #12]	; 10d8c <__sprintf_chk@plt+0x26c>
   10d7c:	bl	10a18 <__libc_start_main@plt>
   10d80:	bl	10a0c <abort@plt>
   10d84:	andeq	r1, r1, r8, lsl pc
   10d88:	andeq	r0, r1, ip, lsr #22
   10d8c:			; <UNDEFINED> instruction: 0x00011eb4
   10d90:	ldr	r3, [pc, #20]	; 10dac <__sprintf_chk@plt+0x28c>
   10d94:	ldr	r2, [pc, #20]	; 10db0 <__sprintf_chk@plt+0x290>
   10d98:	add	r3, pc, r3
   10d9c:	ldr	r2, [r3, r2]
   10da0:	cmp	r2, #0
   10da4:	bxeq	lr
   10da8:	b	10a24 <__gmon_start__@plt>
   10dac:	andeq	r2, r1, r0, ror #4
   10db0:	andeq	r0, r0, ip, rrx
   10db4:	push	{r3, lr}
   10db8:	movw	r0, #12408	; 0x3078
   10dbc:	ldr	r3, [pc, #36]	; 10de8 <__sprintf_chk@plt+0x2c8>
   10dc0:	movt	r0, #2
   10dc4:	rsb	r3, r0, r3
   10dc8:	cmp	r3, #6
   10dcc:	popls	{r3, pc}
   10dd0:	movw	r3, #0
   10dd4:	movt	r3, #0
   10dd8:	cmp	r3, #0
   10ddc:	popeq	{r3, pc}
   10de0:	blx	r3
   10de4:	pop	{r3, pc}
   10de8:	andeq	r3, r2, fp, ror r0
   10dec:	push	{r3, lr}
   10df0:	movw	r0, #12408	; 0x3078
   10df4:	movw	r3, #12408	; 0x3078
   10df8:	movt	r0, #2
   10dfc:	movt	r3, #2
   10e00:	rsb	r3, r0, r3
   10e04:	asr	r3, r3, #2
   10e08:	add	r3, r3, r3, lsr #31
   10e0c:	asrs	r1, r3, #1
   10e10:	popeq	{r3, pc}
   10e14:	movw	r2, #0
   10e18:	movt	r2, #0
   10e1c:	cmp	r2, #0
   10e20:	popeq	{r3, pc}
   10e24:	blx	r2
   10e28:	pop	{r3, pc}
   10e2c:	push	{r4, lr}
   10e30:	movw	r4, #12416	; 0x3080
   10e34:	movt	r4, #2
   10e38:	ldrb	r3, [r4]
   10e3c:	cmp	r3, #0
   10e40:	popne	{r4, pc}
   10e44:	bl	10db4 <__sprintf_chk@plt+0x294>
   10e48:	mov	r3, #1
   10e4c:	strb	r3, [r4]
   10e50:	pop	{r4, pc}
   10e54:	movw	r0, #12020	; 0x2ef4
   10e58:	movt	r0, #2
   10e5c:	push	{r3, lr}
   10e60:	ldr	r3, [r0]
   10e64:	cmp	r3, #0
   10e68:	beq	10e80 <__sprintf_chk@plt+0x360>
   10e6c:	movw	r3, #0
   10e70:	movt	r3, #0
   10e74:	cmp	r3, #0
   10e78:	beq	10e80 <__sprintf_chk@plt+0x360>
   10e7c:	blx	r3
   10e80:	pop	{r3, lr}
   10e84:	b	10dec <__sprintf_chk@plt+0x2cc>

00010e88 <bd_set_debug_handler@@Base>:
   10e88:	movw	r3, #12420	; 0x3084
   10e8c:	movt	r3, #2
   10e90:	str	r0, [r3]
   10e94:	bx	lr

00010e98 <bd_set_debug_mask@@Base>:
   10e98:	movw	r3, #12404	; 0x3074
   10e9c:	movt	r3, #2
   10ea0:	str	r0, [r3]
   10ea4:	bx	lr

00010ea8 <bd_get_debug_mask@@Base>:
   10ea8:	movw	r3, #12404	; 0x3074
   10eac:	movt	r3, #2
   10eb0:	ldr	r0, [r3]
   10eb4:	bx	lr
   10eb8:	cmp	r2, #0
   10ebc:	push	{r4, r5, r6, r7, lr}
   10ec0:	mov	r7, r0
   10ec4:	sub	sp, sp, #12
   10ec8:	ble	10f04 <bd_get_debug_mask@@Base+0x5c>
   10ecc:	sub	r5, r1, #1
   10ed0:	add	r6, r0, r2, lsl #1
   10ed4:	mov	r4, r0
   10ed8:	ldrb	r2, [r5, #1]!
   10edc:	mov	r0, r4
   10ee0:	movw	r3, #8160	; 0x1fe0
   10ee4:	add	r4, r4, #2
   10ee8:	movt	r3, #1
   10eec:	mov	r1, #1
   10ef0:	str	r2, [sp]
   10ef4:	mvn	r2, #0
   10ef8:	bl	10b20 <__sprintf_chk@plt>
   10efc:	cmp	r4, r6
   10f00:	bne	10ed8 <bd_get_debug_mask@@Base+0x30>
   10f04:	mov	r0, r7
   10f08:	add	sp, sp, #12
   10f0c:	pop	{r4, r5, r6, r7, pc}
   10f10:	push	{r3}		; (str r3, [sp, #-4]!)
   10f14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f18:	movw	r4, #12420	; 0x3084
   10f1c:	movt	r4, #2
   10f20:	movw	r5, #12408	; 0x3078
   10f24:	movt	r5, #2
   10f28:	sub	sp, sp, #4096	; 0x1000
   10f2c:	ldr	r6, [r4, #4]
   10f30:	sub	sp, sp, #16
   10f34:	ldr	r3, [r5]
   10f38:	mov	r7, r2
   10f3c:	cmp	r6, #0
   10f40:	add	r2, sp, #8192	; 0x2000
   10f44:	mov	sl, r0
   10f48:	mov	r9, r1
   10f4c:	ldr	r8, [r2, #-4044]	; 0xfffff034
   10f50:	str	r3, [r2, #-4084]	; 0xfffff00c
   10f54:	beq	11014 <bd_get_debug_mask@@Base+0x16c>
   10f58:	movw	r6, #12404	; 0x3074
   10f5c:	movt	r6, #2
   10f60:	ldr	r3, [r6]
   10f64:	tst	r7, r3
   10f68:	bne	10f94 <bd_get_debug_mask@@Base+0xec>
   10f6c:	add	r3, sp, #8192	; 0x2000
   10f70:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   10f74:	ldr	r3, [r5]
   10f78:	cmp	r2, r3
   10f7c:	bne	110e4 <bd_get_debug_mask@@Base+0x23c>
   10f80:	add	sp, sp, #4096	; 0x1000
   10f84:	add	sp, sp, #16
   10f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f8c:	add	sp, sp, #4
   10f90:	bx	lr
   10f94:	mov	r1, #1
   10f98:	mov	r2, #4096	; 0x1000
   10f9c:	str	sl, [sp]
   10fa0:	movw	r3, #8256	; 0x2040
   10fa4:	str	r9, [sp, #4]
   10fa8:	movt	r3, #1
   10fac:	add	r0, sp, #12
   10fb0:	bl	10b20 <__sprintf_chk@plt>
   10fb4:	add	lr, sp, #4096	; 0x1000
   10fb8:	add	lr, lr, #16
   10fbc:	movw	r1, #61432	; 0xeff8
   10fc0:	movt	r1, #65535	; 0xffff
   10fc4:	add	ip, sp, #4096	; 0x1000
   10fc8:	add	ip, ip, #56	; 0x38
   10fcc:	str	r8, [sp]
   10fd0:	str	ip, [sp, #4]
   10fd4:	mov	r2, #1
   10fd8:	str	ip, [lr, r1]
   10fdc:	add	ip, sp, #12
   10fe0:	mvn	r3, #0
   10fe4:	rsb	r1, r0, #4080	; 0xff0
   10fe8:	add	r0, ip, r0
   10fec:	add	r1, r1, #15
   10ff0:	bl	10a9c <__vsnprintf_chk@plt>
   10ff4:	ldr	r2, [r4]
   10ff8:	movw	r3, #12420	; 0x3084
   10ffc:	movt	r3, #2
   11000:	cmp	r2, #0
   11004:	beq	1109c <bd_get_debug_mask@@Base+0x1f4>
   11008:	add	r0, sp, #12
   1100c:	blx	r2
   11010:	b	10f6c <bd_get_debug_mask@@Base+0xc4>
   11014:	movw	r3, #12412	; 0x307c
   11018:	movt	r3, #2
   1101c:	movw	r0, #8168	; 0x1fe8
   11020:	movt	r0, #1
   11024:	ldr	r3, [r3]
   11028:	mov	r2, #1
   1102c:	stmib	r4, {r2, r3}
   11030:	bl	10a3c <getenv@plt>
   11034:	cmp	r0, #0
   11038:	movweq	r6, #12404	; 0x3074
   1103c:	movteq	r6, #2
   11040:	beq	1105c <bd_get_debug_mask@@Base+0x1b4>
   11044:	mov	r1, r6
   11048:	movw	r6, #12404	; 0x3074
   1104c:	mov	r2, r1
   11050:	movt	r6, #2
   11054:	bl	10a90 <strtol@plt>
   11058:	str	r0, [r6]
   1105c:	movw	r0, #8184	; 0x1ff8
   11060:	movt	r0, #1
   11064:	bl	10a3c <getenv@plt>
   11068:	subs	fp, r0, #0
   1106c:	beq	10f60 <bd_get_debug_mask@@Base+0xb8>
   11070:	movw	r1, #8092	; 0x1f9c
   11074:	movt	r1, #1
   11078:	bl	10a54 <fopen@plt>
   1107c:	subs	ip, r0, #0
   11080:	beq	110b8 <bd_get_debug_mask@@Base+0x210>
   11084:	mov	r1, #0
   11088:	mov	r2, #1
   1108c:	mov	r3, r1
   11090:	str	ip, [r4, #8]
   11094:	bl	10ac0 <setvbuf@plt>
   11098:	b	10f60 <bd_get_debug_mask@@Base+0xb8>
   1109c:	ldr	r0, [r3, #8]
   110a0:	movw	r2, #8264	; 0x2048
   110a4:	add	r3, sp, #12
   110a8:	mov	r1, #1
   110ac:	movt	r2, #1
   110b0:	bl	10ae4 <__fprintf_chk@plt>
   110b4:	b	10f6c <bd_get_debug_mask@@Base+0xc4>
   110b8:	mov	r3, #77	; 0x4d
   110bc:	ldr	r0, [r4, #8]
   110c0:	str	r3, [sp]
   110c4:	movw	r2, #8200	; 0x2008
   110c8:	str	fp, [sp, #4]
   110cc:	movt	r2, #1
   110d0:	movw	r3, #8236	; 0x202c
   110d4:	mov	r1, #1
   110d8:	movt	r3, #1
   110dc:	bl	10ae4 <__fprintf_chk@plt>
   110e0:	b	10f60 <bd_get_debug_mask@@Base+0xb8>
   110e4:	bl	10ad8 <__stack_chk_fail@plt>
   110e8:	cmp	r1, #0
   110ec:	beq	112f8 <bd_get_debug_mask@@Base+0x450>
   110f0:	eor	ip, r0, r1
   110f4:	rsbmi	r1, r1, #0
   110f8:	subs	r2, r1, #1
   110fc:	beq	112c4 <bd_get_debug_mask@@Base+0x41c>
   11100:	movs	r3, r0
   11104:	rsbmi	r3, r0, #0
   11108:	cmp	r3, r1
   1110c:	bls	112d0 <bd_get_debug_mask@@Base+0x428>
   11110:	tst	r1, r2
   11114:	beq	112e0 <bd_get_debug_mask@@Base+0x438>
   11118:	clz	r2, r3
   1111c:	clz	r0, r1
   11120:	sub	r2, r0, r2
   11124:	rsbs	r2, r2, #31
   11128:	addne	r2, r2, r2, lsl #1
   1112c:	mov	r0, #0
   11130:	addne	pc, pc, r2, lsl #2
   11134:	nop	{0}
   11138:	cmp	r3, r1, lsl #31
   1113c:	adc	r0, r0, r0
   11140:	subcs	r3, r3, r1, lsl #31
   11144:	cmp	r3, r1, lsl #30
   11148:	adc	r0, r0, r0
   1114c:	subcs	r3, r3, r1, lsl #30
   11150:	cmp	r3, r1, lsl #29
   11154:	adc	r0, r0, r0
   11158:	subcs	r3, r3, r1, lsl #29
   1115c:	cmp	r3, r1, lsl #28
   11160:	adc	r0, r0, r0
   11164:	subcs	r3, r3, r1, lsl #28
   11168:	cmp	r3, r1, lsl #27
   1116c:	adc	r0, r0, r0
   11170:	subcs	r3, r3, r1, lsl #27
   11174:	cmp	r3, r1, lsl #26
   11178:	adc	r0, r0, r0
   1117c:	subcs	r3, r3, r1, lsl #26
   11180:	cmp	r3, r1, lsl #25
   11184:	adc	r0, r0, r0
   11188:	subcs	r3, r3, r1, lsl #25
   1118c:	cmp	r3, r1, lsl #24
   11190:	adc	r0, r0, r0
   11194:	subcs	r3, r3, r1, lsl #24
   11198:	cmp	r3, r1, lsl #23
   1119c:	adc	r0, r0, r0
   111a0:	subcs	r3, r3, r1, lsl #23
   111a4:	cmp	r3, r1, lsl #22
   111a8:	adc	r0, r0, r0
   111ac:	subcs	r3, r3, r1, lsl #22
   111b0:	cmp	r3, r1, lsl #21
   111b4:	adc	r0, r0, r0
   111b8:	subcs	r3, r3, r1, lsl #21
   111bc:	cmp	r3, r1, lsl #20
   111c0:	adc	r0, r0, r0
   111c4:	subcs	r3, r3, r1, lsl #20
   111c8:	cmp	r3, r1, lsl #19
   111cc:	adc	r0, r0, r0
   111d0:	subcs	r3, r3, r1, lsl #19
   111d4:	cmp	r3, r1, lsl #18
   111d8:	adc	r0, r0, r0
   111dc:	subcs	r3, r3, r1, lsl #18
   111e0:	cmp	r3, r1, lsl #17
   111e4:	adc	r0, r0, r0
   111e8:	subcs	r3, r3, r1, lsl #17
   111ec:	cmp	r3, r1, lsl #16
   111f0:	adc	r0, r0, r0
   111f4:	subcs	r3, r3, r1, lsl #16
   111f8:	cmp	r3, r1, lsl #15
   111fc:	adc	r0, r0, r0
   11200:	subcs	r3, r3, r1, lsl #15
   11204:	cmp	r3, r1, lsl #14
   11208:	adc	r0, r0, r0
   1120c:	subcs	r3, r3, r1, lsl #14
   11210:	cmp	r3, r1, lsl #13
   11214:	adc	r0, r0, r0
   11218:	subcs	r3, r3, r1, lsl #13
   1121c:	cmp	r3, r1, lsl #12
   11220:	adc	r0, r0, r0
   11224:	subcs	r3, r3, r1, lsl #12
   11228:	cmp	r3, r1, lsl #11
   1122c:	adc	r0, r0, r0
   11230:	subcs	r3, r3, r1, lsl #11
   11234:	cmp	r3, r1, lsl #10
   11238:	adc	r0, r0, r0
   1123c:	subcs	r3, r3, r1, lsl #10
   11240:	cmp	r3, r1, lsl #9
   11244:	adc	r0, r0, r0
   11248:	subcs	r3, r3, r1, lsl #9
   1124c:	cmp	r3, r1, lsl #8
   11250:	adc	r0, r0, r0
   11254:	subcs	r3, r3, r1, lsl #8
   11258:	cmp	r3, r1, lsl #7
   1125c:	adc	r0, r0, r0
   11260:	subcs	r3, r3, r1, lsl #7
   11264:	cmp	r3, r1, lsl #6
   11268:	adc	r0, r0, r0
   1126c:	subcs	r3, r3, r1, lsl #6
   11270:	cmp	r3, r1, lsl #5
   11274:	adc	r0, r0, r0
   11278:	subcs	r3, r3, r1, lsl #5
   1127c:	cmp	r3, r1, lsl #4
   11280:	adc	r0, r0, r0
   11284:	subcs	r3, r3, r1, lsl #4
   11288:	cmp	r3, r1, lsl #3
   1128c:	adc	r0, r0, r0
   11290:	subcs	r3, r3, r1, lsl #3
   11294:	cmp	r3, r1, lsl #2
   11298:	adc	r0, r0, r0
   1129c:	subcs	r3, r3, r1, lsl #2
   112a0:	cmp	r3, r1, lsl #1
   112a4:	adc	r0, r0, r0
   112a8:	subcs	r3, r3, r1, lsl #1
   112ac:	cmp	r3, r1
   112b0:	adc	r0, r0, r0
   112b4:	subcs	r3, r3, r1
   112b8:	cmp	ip, #0
   112bc:	rsbmi	r0, r0, #0
   112c0:	bx	lr
   112c4:	teq	ip, r0
   112c8:	rsbmi	r0, r0, #0
   112cc:	bx	lr
   112d0:	movcc	r0, #0
   112d4:	asreq	r0, ip, #31
   112d8:	orreq	r0, r0, #1
   112dc:	bx	lr
   112e0:	clz	r2, r1
   112e4:	rsb	r2, r2, #31
   112e8:	cmp	ip, #0
   112ec:	lsr	r0, r3, r2
   112f0:	rsbmi	r0, r0, #0
   112f4:	bx	lr
   112f8:	cmp	r0, #0
   112fc:	mvngt	r0, #-2147483648	; 0x80000000
   11300:	movlt	r0, #-2147483648	; 0x80000000
   11304:	b	11364 <bd_get_debug_mask@@Base+0x4bc>
   11308:	cmp	r1, #0
   1130c:	beq	112f8 <bd_get_debug_mask@@Base+0x450>
   11310:	push	{r0, r1, lr}
   11314:	bl	110f0 <bd_get_debug_mask@@Base+0x248>
   11318:	pop	{r1, r2, lr}
   1131c:	mul	r3, r2, r0
   11320:	sub	r1, r1, r3
   11324:	bx	lr
   11328:	cmp	r3, #0
   1132c:	cmpeq	r2, #0
   11330:	bne	11348 <bd_get_debug_mask@@Base+0x4a0>
   11334:	cmp	r1, #0
   11338:	cmpeq	r0, #0
   1133c:	mvnne	r1, #0
   11340:	mvnne	r0, #0
   11344:	b	11364 <bd_get_debug_mask@@Base+0x4bc>
   11348:	sub	sp, sp, #8
   1134c:	push	{sp, lr}
   11350:	bl	113b0 <bd_get_debug_mask@@Base+0x508>
   11354:	ldr	lr, [sp, #4]
   11358:	add	sp, sp, #8
   1135c:	pop	{r2, r3}
   11360:	bx	lr
   11364:	push	{r1, lr}
   11368:	mov	r0, #8
   1136c:	bl	10aa8 <raise@plt>
   11370:	pop	{r1, pc}
   11374:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11378:	mov	r8, r2
   1137c:	mov	r6, r0
   11380:	mov	r7, r1
   11384:	mov	sl, r3
   11388:	ldr	r9, [sp, #32]
   1138c:	bl	113ec <bd_get_debug_mask@@Base+0x544>
   11390:	umull	r4, r5, r8, r0
   11394:	mul	r8, r8, r1
   11398:	mla	r2, r0, sl, r8
   1139c:	add	r5, r2, r5
   113a0:	subs	r4, r6, r4
   113a4:	sbc	r5, r7, r5
   113a8:	strd	r4, [r9]
   113ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   113b0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   113b4:	mov	r8, r2
   113b8:	mov	r6, r0
   113bc:	mov	r7, r1
   113c0:	mov	r5, r3
   113c4:	ldr	r9, [sp, #32]
   113c8:	bl	11878 <bd_get_debug_mask@@Base+0x9d0>
   113cc:	mul	r3, r0, r5
   113d0:	umull	r4, r5, r0, r8
   113d4:	mla	r8, r8, r1, r3
   113d8:	add	r5, r8, r5
   113dc:	subs	r4, r6, r4
   113e0:	sbc	r5, r7, r5
   113e4:	strd	r4, [r9]
   113e8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   113ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113f0:	rsbs	r4, r0, #0
   113f4:	rsc	r5, r1, #0
   113f8:	cmp	r1, #0
   113fc:	mvn	r6, #0
   11400:	sub	sp, sp, #12
   11404:	movge	r4, r0
   11408:	movge	r5, r1
   1140c:	movge	r6, #0
   11410:	cmp	r3, #0
   11414:	blt	1164c <bd_get_debug_mask@@Base+0x7a4>
   11418:	cmp	r3, #0
   1141c:	mov	sl, r4
   11420:	mov	ip, r5
   11424:	mov	r0, r2
   11428:	mov	r1, r3
   1142c:	mov	r8, r2
   11430:	mov	r7, r4
   11434:	mov	r9, r5
   11438:	bne	11530 <bd_get_debug_mask@@Base+0x688>
   1143c:	cmp	r2, r5
   11440:	bls	1156c <bd_get_debug_mask@@Base+0x6c4>
   11444:	clz	r3, r2
   11448:	cmp	r3, #0
   1144c:	rsbne	r2, r3, #32
   11450:	lslne	r8, r0, r3
   11454:	lsrne	r2, r4, r2
   11458:	lslne	r7, r4, r3
   1145c:	orrne	r9, r2, r5, lsl r3
   11460:	lsr	r4, r8, #16
   11464:	uxth	sl, r8
   11468:	mov	r1, r4
   1146c:	mov	r0, r9
   11470:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11474:	mov	r1, r4
   11478:	mov	fp, r0
   1147c:	mov	r0, r9
   11480:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   11484:	mul	r0, sl, fp
   11488:	lsr	r2, r7, #16
   1148c:	orr	r1, r2, r1, lsl #16
   11490:	cmp	r0, r1
   11494:	bls	114b8 <bd_get_debug_mask@@Base+0x610>
   11498:	adds	r1, r1, r8
   1149c:	sub	r3, fp, #1
   114a0:	bcs	114b4 <bd_get_debug_mask@@Base+0x60c>
   114a4:	cmp	r0, r1
   114a8:	subhi	fp, fp, #2
   114ac:	addhi	r1, r1, r8
   114b0:	bhi	114b8 <bd_get_debug_mask@@Base+0x610>
   114b4:	mov	fp, r3
   114b8:	rsb	r9, r0, r1
   114bc:	mov	r1, r4
   114c0:	uxth	r7, r7
   114c4:	mov	r0, r9
   114c8:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   114cc:	mov	r1, r4
   114d0:	mov	r5, r0
   114d4:	mov	r0, r9
   114d8:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   114dc:	mul	sl, sl, r5
   114e0:	orr	r1, r7, r1, lsl #16
   114e4:	cmp	sl, r1
   114e8:	bls	11508 <bd_get_debug_mask@@Base+0x660>
   114ec:	adds	r8, r1, r8
   114f0:	sub	r3, r5, #1
   114f4:	bcs	11504 <bd_get_debug_mask@@Base+0x65c>
   114f8:	cmp	sl, r8
   114fc:	subhi	r5, r5, #2
   11500:	bhi	11508 <bd_get_debug_mask@@Base+0x660>
   11504:	mov	r5, r3
   11508:	orr	r3, r5, fp, lsl #16
   1150c:	mov	r4, #0
   11510:	cmp	r6, #0
   11514:	mov	r0, r3
   11518:	mov	r1, r4
   1151c:	beq	11528 <bd_get_debug_mask@@Base+0x680>
   11520:	rsbs	r0, r0, #0
   11524:	rsc	r1, r1, #0
   11528:	add	sp, sp, #12
   1152c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11530:	cmp	r3, r5
   11534:	movhi	r4, #0
   11538:	movhi	r3, r4
   1153c:	bhi	11510 <bd_get_debug_mask@@Base+0x668>
   11540:	clz	r5, r1
   11544:	cmp	r5, #0
   11548:	bne	11738 <bd_get_debug_mask@@Base+0x890>
   1154c:	cmp	r1, ip
   11550:	cmpcs	r2, sl
   11554:	movhi	r4, #0
   11558:	movls	r4, #1
   1155c:	movls	r3, #1
   11560:	movls	r4, r5
   11564:	movhi	r3, r4
   11568:	b	11510 <bd_get_debug_mask@@Base+0x668>
   1156c:	cmp	r2, #0
   11570:	bne	11584 <bd_get_debug_mask@@Base+0x6dc>
   11574:	mov	r1, r2
   11578:	mov	r0, #1
   1157c:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11580:	mov	r8, r0
   11584:	clz	r3, r8
   11588:	cmp	r3, #0
   1158c:	bne	1165c <bd_get_debug_mask@@Base+0x7b4>
   11590:	rsb	r9, r8, r9
   11594:	lsr	r5, r8, #16
   11598:	uxth	sl, r8
   1159c:	mov	r4, #1
   115a0:	mov	r1, r5
   115a4:	mov	r0, r9
   115a8:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   115ac:	mov	r1, r5
   115b0:	mov	fp, r0
   115b4:	mov	r0, r9
   115b8:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   115bc:	mul	r0, sl, fp
   115c0:	lsr	r2, r7, #16
   115c4:	orr	r1, r2, r1, lsl #16
   115c8:	cmp	r0, r1
   115cc:	bls	115ec <bd_get_debug_mask@@Base+0x744>
   115d0:	adds	r1, r1, r8
   115d4:	sub	r3, fp, #1
   115d8:	bcs	11858 <bd_get_debug_mask@@Base+0x9b0>
   115dc:	cmp	r0, r1
   115e0:	subhi	fp, fp, #2
   115e4:	addhi	r1, r1, r8
   115e8:	bls	11858 <bd_get_debug_mask@@Base+0x9b0>
   115ec:	rsb	r2, r0, r1
   115f0:	mov	r1, r5
   115f4:	str	r2, [sp]
   115f8:	uxth	r7, r7
   115fc:	mov	r0, r2
   11600:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11604:	ldr	r2, [sp]
   11608:	mov	r1, r5
   1160c:	mov	r9, r0
   11610:	mov	r0, r2
   11614:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   11618:	mul	sl, sl, r9
   1161c:	orr	r1, r7, r1, lsl #16
   11620:	cmp	sl, r1
   11624:	bls	11644 <bd_get_debug_mask@@Base+0x79c>
   11628:	adds	r8, r1, r8
   1162c:	sub	r3, r9, #1
   11630:	bcs	11640 <bd_get_debug_mask@@Base+0x798>
   11634:	cmp	sl, r8
   11638:	subhi	r9, r9, #2
   1163c:	bhi	11644 <bd_get_debug_mask@@Base+0x79c>
   11640:	mov	r9, r3
   11644:	orr	r3, r9, fp, lsl #16
   11648:	b	11510 <bd_get_debug_mask@@Base+0x668>
   1164c:	mvn	r6, r6
   11650:	rsbs	r2, r2, #0
   11654:	rsc	r3, r3, #0
   11658:	b	11418 <bd_get_debug_mask@@Base+0x570>
   1165c:	lsl	r8, r8, r3
   11660:	rsb	fp, r3, #32
   11664:	lsr	r4, r9, fp
   11668:	lsr	fp, r7, fp
   1166c:	lsr	r5, r8, #16
   11670:	orr	fp, fp, r9, lsl r3
   11674:	mov	r0, r4
   11678:	lsl	r7, r7, r3
   1167c:	mov	r1, r5
   11680:	uxth	sl, r8
   11684:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11688:	mov	r1, r5
   1168c:	mov	r3, r0
   11690:	mov	r0, r4
   11694:	str	r3, [sp]
   11698:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   1169c:	ldr	r3, [sp]
   116a0:	lsr	r2, fp, #16
   116a4:	mul	r0, sl, r3
   116a8:	orr	r1, r2, r1, lsl #16
   116ac:	cmp	r0, r1
   116b0:	bls	116d0 <bd_get_debug_mask@@Base+0x828>
   116b4:	adds	r1, r1, r8
   116b8:	sub	r2, r3, #1
   116bc:	bcs	11870 <bd_get_debug_mask@@Base+0x9c8>
   116c0:	cmp	r0, r1
   116c4:	subhi	r3, r3, #2
   116c8:	addhi	r1, r1, r8
   116cc:	bls	11870 <bd_get_debug_mask@@Base+0x9c8>
   116d0:	rsb	r9, r0, r1
   116d4:	mov	r1, r5
   116d8:	str	r3, [sp]
   116dc:	uxth	fp, fp
   116e0:	mov	r0, r9
   116e4:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   116e8:	mov	r1, r5
   116ec:	mov	r4, r0
   116f0:	mov	r0, r9
   116f4:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   116f8:	mul	r9, sl, r4
   116fc:	ldr	r3, [sp]
   11700:	orr	r1, fp, r1, lsl #16
   11704:	cmp	r9, r1
   11708:	bls	1172c <bd_get_debug_mask@@Base+0x884>
   1170c:	adds	r1, r1, r8
   11710:	sub	r2, r4, #1
   11714:	bcs	11728 <bd_get_debug_mask@@Base+0x880>
   11718:	cmp	r9, r1
   1171c:	subhi	r4, r4, #2
   11720:	addhi	r1, r1, r8
   11724:	bhi	1172c <bd_get_debug_mask@@Base+0x884>
   11728:	mov	r4, r2
   1172c:	rsb	r9, r9, r1
   11730:	orr	r4, r4, r3, lsl #16
   11734:	b	115a0 <bd_get_debug_mask@@Base+0x6f8>
   11738:	rsb	sl, r5, #32
   1173c:	lsl	r3, r2, r5
   11740:	lsr	r0, r2, sl
   11744:	lsr	r2, ip, sl
   11748:	orr	r4, r0, r1, lsl r5
   1174c:	lsr	sl, r7, sl
   11750:	mov	r0, r2
   11754:	orr	sl, sl, ip, lsl r5
   11758:	lsr	r9, r4, #16
   1175c:	str	r3, [sp, #4]
   11760:	str	r2, [sp]
   11764:	uxth	fp, r4
   11768:	mov	r1, r9
   1176c:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11770:	ldr	r2, [sp]
   11774:	mov	r1, r9
   11778:	mov	r8, r0
   1177c:	mov	r0, r2
   11780:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   11784:	mul	r0, fp, r8
   11788:	lsr	r2, sl, #16
   1178c:	orr	r1, r2, r1, lsl #16
   11790:	cmp	r0, r1
   11794:	bls	117b4 <bd_get_debug_mask@@Base+0x90c>
   11798:	adds	r1, r1, r4
   1179c:	sub	r2, r8, #1
   117a0:	bcs	11868 <bd_get_debug_mask@@Base+0x9c0>
   117a4:	cmp	r0, r1
   117a8:	subhi	r8, r8, #2
   117ac:	addhi	r1, r1, r4
   117b0:	bls	11868 <bd_get_debug_mask@@Base+0x9c0>
   117b4:	rsb	ip, r0, r1
   117b8:	mov	r1, r9
   117bc:	str	ip, [sp]
   117c0:	mov	r0, ip
   117c4:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   117c8:	ldr	ip, [sp]
   117cc:	mov	r1, r9
   117d0:	mov	r2, r0
   117d4:	mov	r0, ip
   117d8:	str	r2, [sp]
   117dc:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   117e0:	ldr	r2, [sp]
   117e4:	uxth	ip, sl
   117e8:	mul	fp, fp, r2
   117ec:	orr	ip, ip, r1, lsl #16
   117f0:	cmp	fp, ip
   117f4:	bls	11814 <bd_get_debug_mask@@Base+0x96c>
   117f8:	adds	ip, ip, r4
   117fc:	sub	r1, r2, #1
   11800:	bcs	11860 <bd_get_debug_mask@@Base+0x9b8>
   11804:	cmp	fp, ip
   11808:	subhi	r2, r2, #2
   1180c:	addhi	ip, ip, r4
   11810:	bls	11860 <bd_get_debug_mask@@Base+0x9b8>
   11814:	ldr	r0, [sp, #4]
   11818:	orr	r1, r2, r8, lsl #16
   1181c:	rsb	fp, fp, ip
   11820:	umull	r2, r3, r1, r0
   11824:	cmp	fp, r3
   11828:	bcc	1184c <bd_get_debug_mask@@Base+0x9a4>
   1182c:	movne	r4, #0
   11830:	moveq	r4, #1
   11834:	cmp	r2, r7, lsl r5
   11838:	movls	r4, #0
   1183c:	andhi	r4, r4, #1
   11840:	cmp	r4, #0
   11844:	moveq	r3, r1
   11848:	beq	11510 <bd_get_debug_mask@@Base+0x668>
   1184c:	sub	r3, r1, #1
   11850:	mov	r4, #0
   11854:	b	11510 <bd_get_debug_mask@@Base+0x668>
   11858:	mov	fp, r3
   1185c:	b	115ec <bd_get_debug_mask@@Base+0x744>
   11860:	mov	r2, r1
   11864:	b	11814 <bd_get_debug_mask@@Base+0x96c>
   11868:	mov	r8, r2
   1186c:	b	117b4 <bd_get_debug_mask@@Base+0x90c>
   11870:	mov	r3, r2
   11874:	b	116d0 <bd_get_debug_mask@@Base+0x828>
   11878:	cmp	r3, #0
   1187c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11880:	mov	r6, r0
   11884:	sub	sp, sp, #12
   11888:	mov	r5, r1
   1188c:	mov	r7, r0
   11890:	mov	r4, r2
   11894:	mov	r8, r1
   11898:	bne	11978 <bd_get_debug_mask@@Base+0xad0>
   1189c:	cmp	r2, r1
   118a0:	bls	119b4 <bd_get_debug_mask@@Base+0xb0c>
   118a4:	clz	r3, r2
   118a8:	cmp	r3, #0
   118ac:	rsbne	r8, r3, #32
   118b0:	lslne	r4, r2, r3
   118b4:	lsrne	r8, r0, r8
   118b8:	lslne	r7, r0, r3
   118bc:	orrne	r8, r8, r1, lsl r3
   118c0:	lsr	r5, r4, #16
   118c4:	uxth	sl, r4
   118c8:	mov	r1, r5
   118cc:	mov	r0, r8
   118d0:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   118d4:	mov	r1, r5
   118d8:	mov	r9, r0
   118dc:	mov	r0, r8
   118e0:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   118e4:	mul	r0, sl, r9
   118e8:	lsr	r3, r7, #16
   118ec:	orr	r1, r3, r1, lsl #16
   118f0:	cmp	r0, r1
   118f4:	bls	11918 <bd_get_debug_mask@@Base+0xa70>
   118f8:	adds	r1, r1, r4
   118fc:	sub	r2, r9, #1
   11900:	bcs	11914 <bd_get_debug_mask@@Base+0xa6c>
   11904:	cmp	r0, r1
   11908:	subhi	r9, r9, #2
   1190c:	addhi	r1, r1, r4
   11910:	bhi	11918 <bd_get_debug_mask@@Base+0xa70>
   11914:	mov	r9, r2
   11918:	rsb	r8, r0, r1
   1191c:	mov	r1, r5
   11920:	uxth	r7, r7
   11924:	mov	r0, r8
   11928:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   1192c:	mov	r1, r5
   11930:	mov	r6, r0
   11934:	mov	r0, r8
   11938:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   1193c:	mul	sl, sl, r6
   11940:	orr	r1, r7, r1, lsl #16
   11944:	cmp	sl, r1
   11948:	bls	11964 <bd_get_debug_mask@@Base+0xabc>
   1194c:	adds	r4, r1, r4
   11950:	sub	r3, r6, #1
   11954:	bcs	11c60 <bd_get_debug_mask@@Base+0xdb8>
   11958:	cmp	sl, r4
   1195c:	subhi	r6, r6, #2
   11960:	bls	11c60 <bd_get_debug_mask@@Base+0xdb8>
   11964:	orr	r0, r6, r9, lsl #16
   11968:	mov	r6, #0
   1196c:	mov	r1, r6
   11970:	add	sp, sp, #12
   11974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11978:	cmp	r3, r1
   1197c:	movhi	r6, #0
   11980:	movhi	r0, r6
   11984:	bhi	1196c <bd_get_debug_mask@@Base+0xac4>
   11988:	clz	r7, r3
   1198c:	cmp	r7, #0
   11990:	bne	11a90 <bd_get_debug_mask@@Base+0xbe8>
   11994:	cmp	r3, r1
   11998:	cmpcs	r2, r6
   1199c:	movhi	r6, #0
   119a0:	movls	r6, #1
   119a4:	movls	r0, #1
   119a8:	movls	r6, r7
   119ac:	movhi	r0, r6
   119b0:	b	1196c <bd_get_debug_mask@@Base+0xac4>
   119b4:	cmp	r2, #0
   119b8:	bne	119cc <bd_get_debug_mask@@Base+0xb24>
   119bc:	mov	r1, r2
   119c0:	mov	r0, #1
   119c4:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   119c8:	mov	r4, r0
   119cc:	clz	r3, r4
   119d0:	cmp	r3, #0
   119d4:	bne	11b8c <bd_get_debug_mask@@Base+0xce4>
   119d8:	rsb	r5, r4, r5
   119dc:	lsr	r8, r4, #16
   119e0:	uxth	sl, r4
   119e4:	mov	r6, #1
   119e8:	mov	r1, r8
   119ec:	mov	r0, r5
   119f0:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   119f4:	mov	r1, r8
   119f8:	mov	r9, r0
   119fc:	mov	r0, r5
   11a00:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   11a04:	mul	r0, sl, r9
   11a08:	lsr	r3, r7, #16
   11a0c:	orr	r1, r3, r1, lsl #16
   11a10:	cmp	r0, r1
   11a14:	bls	11a34 <bd_get_debug_mask@@Base+0xb8c>
   11a18:	adds	r1, r1, r4
   11a1c:	sub	r2, r9, #1
   11a20:	bcs	11c68 <bd_get_debug_mask@@Base+0xdc0>
   11a24:	cmp	r0, r1
   11a28:	subhi	r9, r9, #2
   11a2c:	addhi	r1, r1, r4
   11a30:	bls	11c68 <bd_get_debug_mask@@Base+0xdc0>
   11a34:	rsb	fp, r0, r1
   11a38:	mov	r1, r8
   11a3c:	uxth	r7, r7
   11a40:	mov	r0, fp
   11a44:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11a48:	mov	r1, r8
   11a4c:	mov	r5, r0
   11a50:	mov	r0, fp
   11a54:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   11a58:	mul	sl, sl, r5
   11a5c:	orr	r1, r7, r1, lsl #16
   11a60:	cmp	sl, r1
   11a64:	bls	11a80 <bd_get_debug_mask@@Base+0xbd8>
   11a68:	adds	r4, r1, r4
   11a6c:	sub	r3, r5, #1
   11a70:	bcs	11c70 <bd_get_debug_mask@@Base+0xdc8>
   11a74:	cmp	sl, r4
   11a78:	subhi	r5, r5, #2
   11a7c:	bls	11c70 <bd_get_debug_mask@@Base+0xdc8>
   11a80:	orr	r0, r5, r9, lsl #16
   11a84:	mov	r1, r6
   11a88:	add	sp, sp, #12
   11a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a90:	rsb	r1, r7, #32
   11a94:	lsl	r0, r2, r7
   11a98:	lsr	r2, r2, r1
   11a9c:	lsr	fp, r5, r1
   11aa0:	orr	r8, r2, r3, lsl r7
   11aa4:	lsr	r1, r6, r1
   11aa8:	str	r0, [sp, #4]
   11aac:	orr	r5, r1, r5, lsl r7
   11ab0:	lsr	r9, r8, #16
   11ab4:	mov	r0, fp
   11ab8:	uxth	sl, r8
   11abc:	mov	r1, r9
   11ac0:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11ac4:	mov	r1, r9
   11ac8:	mov	r4, r0
   11acc:	mov	r0, fp
   11ad0:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   11ad4:	mul	r0, sl, r4
   11ad8:	lsr	ip, r5, #16
   11adc:	orr	r1, ip, r1, lsl #16
   11ae0:	cmp	r0, r1
   11ae4:	bls	11af8 <bd_get_debug_mask@@Base+0xc50>
   11ae8:	adds	r1, r1, r8
   11aec:	sub	r2, r4, #1
   11af0:	bcc	11c8c <bd_get_debug_mask@@Base+0xde4>
   11af4:	mov	r4, r2
   11af8:	rsb	ip, r0, r1
   11afc:	mov	r1, r9
   11b00:	str	ip, [sp]
   11b04:	uxth	r5, r5
   11b08:	mov	r0, ip
   11b0c:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11b10:	ldr	ip, [sp]
   11b14:	mov	r1, r9
   11b18:	mov	fp, r0
   11b1c:	mov	r0, ip
   11b20:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   11b24:	mul	sl, sl, fp
   11b28:	orr	r1, r5, r1, lsl #16
   11b2c:	cmp	sl, r1
   11b30:	bls	11b44 <bd_get_debug_mask@@Base+0xc9c>
   11b34:	adds	r1, r1, r8
   11b38:	sub	r2, fp, #1
   11b3c:	bcc	11c78 <bd_get_debug_mask@@Base+0xdd0>
   11b40:	mov	fp, r2
   11b44:	ldr	r3, [sp, #4]
   11b48:	orr	r0, fp, r4, lsl #16
   11b4c:	rsb	sl, sl, r1
   11b50:	umull	r4, r5, r0, r3
   11b54:	cmp	sl, r5
   11b58:	bcc	11b78 <bd_get_debug_mask@@Base+0xcd0>
   11b5c:	movne	r3, #0
   11b60:	moveq	r3, #1
   11b64:	cmp	r4, r6, lsl r7
   11b68:	movls	r6, #0
   11b6c:	andhi	r6, r3, #1
   11b70:	cmp	r6, #0
   11b74:	beq	1196c <bd_get_debug_mask@@Base+0xac4>
   11b78:	mov	r6, #0
   11b7c:	sub	r0, r0, #1
   11b80:	mov	r1, r6
   11b84:	add	sp, sp, #12
   11b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b8c:	lsl	r4, r4, r3
   11b90:	rsb	r9, r3, #32
   11b94:	lsr	r2, r5, r9
   11b98:	lsr	r9, r6, r9
   11b9c:	lsr	r8, r4, #16
   11ba0:	orr	r9, r9, r5, lsl r3
   11ba4:	mov	r0, r2
   11ba8:	lsl	r7, r6, r3
   11bac:	mov	r1, r8
   11bb0:	str	r2, [sp]
   11bb4:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11bb8:	ldr	r2, [sp]
   11bbc:	mov	r1, r8
   11bc0:	uxth	sl, r4
   11bc4:	mov	fp, r0
   11bc8:	mov	r0, r2
   11bcc:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   11bd0:	mul	r0, sl, fp
   11bd4:	lsr	r3, r9, #16
   11bd8:	orr	r1, r3, r1, lsl #16
   11bdc:	cmp	r0, r1
   11be0:	bls	11c00 <bd_get_debug_mask@@Base+0xd58>
   11be4:	adds	r1, r1, r4
   11be8:	sub	r3, fp, #1
   11bec:	bcs	11ca0 <bd_get_debug_mask@@Base+0xdf8>
   11bf0:	cmp	r0, r1
   11bf4:	subhi	fp, fp, #2
   11bf8:	addhi	r1, r1, r4
   11bfc:	bls	11ca0 <bd_get_debug_mask@@Base+0xdf8>
   11c00:	rsb	r5, r0, r1
   11c04:	mov	r1, r8
   11c08:	uxth	r9, r9
   11c0c:	mov	r0, r5
   11c10:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11c14:	mov	r1, r8
   11c18:	mov	r6, r0
   11c1c:	mov	r0, r5
   11c20:	bl	11e94 <bd_get_debug_mask@@Base+0xfec>
   11c24:	mul	r5, sl, r6
   11c28:	orr	r1, r9, r1, lsl #16
   11c2c:	cmp	r5, r1
   11c30:	bls	11c54 <bd_get_debug_mask@@Base+0xdac>
   11c34:	adds	r1, r1, r4
   11c38:	sub	r3, r6, #1
   11c3c:	bcs	11c50 <bd_get_debug_mask@@Base+0xda8>
   11c40:	cmp	r5, r1
   11c44:	subhi	r6, r6, #2
   11c48:	addhi	r1, r1, r4
   11c4c:	bhi	11c54 <bd_get_debug_mask@@Base+0xdac>
   11c50:	mov	r6, r3
   11c54:	rsb	r5, r5, r1
   11c58:	orr	r6, r6, fp, lsl #16
   11c5c:	b	119e8 <bd_get_debug_mask@@Base+0xb40>
   11c60:	mov	r6, r3
   11c64:	b	11964 <bd_get_debug_mask@@Base+0xabc>
   11c68:	mov	r9, r2
   11c6c:	b	11a34 <bd_get_debug_mask@@Base+0xb8c>
   11c70:	mov	r5, r3
   11c74:	b	11a80 <bd_get_debug_mask@@Base+0xbd8>
   11c78:	cmp	sl, r1
   11c7c:	subhi	fp, fp, #2
   11c80:	addhi	r1, r1, r8
   11c84:	bhi	11b44 <bd_get_debug_mask@@Base+0xc9c>
   11c88:	b	11b40 <bd_get_debug_mask@@Base+0xc98>
   11c8c:	cmp	r0, r1
   11c90:	subhi	r4, r4, #2
   11c94:	addhi	r1, r1, r8
   11c98:	bhi	11af8 <bd_get_debug_mask@@Base+0xc50>
   11c9c:	b	11af4 <bd_get_debug_mask@@Base+0xc4c>
   11ca0:	mov	fp, r3
   11ca4:	b	11c00 <bd_get_debug_mask@@Base+0xd58>
   11ca8:	subs	r2, r1, #1
   11cac:	bxeq	lr
   11cb0:	bcc	11e88 <bd_get_debug_mask@@Base+0xfe0>
   11cb4:	cmp	r0, r1
   11cb8:	bls	11e6c <bd_get_debug_mask@@Base+0xfc4>
   11cbc:	tst	r1, r2
   11cc0:	beq	11e78 <bd_get_debug_mask@@Base+0xfd0>
   11cc4:	clz	r3, r0
   11cc8:	clz	r2, r1
   11ccc:	sub	r3, r2, r3
   11cd0:	rsbs	r3, r3, #31
   11cd4:	addne	r3, r3, r3, lsl #1
   11cd8:	mov	r2, #0
   11cdc:	addne	pc, pc, r3, lsl #2
   11ce0:	nop	{0}
   11ce4:	cmp	r0, r1, lsl #31
   11ce8:	adc	r2, r2, r2
   11cec:	subcs	r0, r0, r1, lsl #31
   11cf0:	cmp	r0, r1, lsl #30
   11cf4:	adc	r2, r2, r2
   11cf8:	subcs	r0, r0, r1, lsl #30
   11cfc:	cmp	r0, r1, lsl #29
   11d00:	adc	r2, r2, r2
   11d04:	subcs	r0, r0, r1, lsl #29
   11d08:	cmp	r0, r1, lsl #28
   11d0c:	adc	r2, r2, r2
   11d10:	subcs	r0, r0, r1, lsl #28
   11d14:	cmp	r0, r1, lsl #27
   11d18:	adc	r2, r2, r2
   11d1c:	subcs	r0, r0, r1, lsl #27
   11d20:	cmp	r0, r1, lsl #26
   11d24:	adc	r2, r2, r2
   11d28:	subcs	r0, r0, r1, lsl #26
   11d2c:	cmp	r0, r1, lsl #25
   11d30:	adc	r2, r2, r2
   11d34:	subcs	r0, r0, r1, lsl #25
   11d38:	cmp	r0, r1, lsl #24
   11d3c:	adc	r2, r2, r2
   11d40:	subcs	r0, r0, r1, lsl #24
   11d44:	cmp	r0, r1, lsl #23
   11d48:	adc	r2, r2, r2
   11d4c:	subcs	r0, r0, r1, lsl #23
   11d50:	cmp	r0, r1, lsl #22
   11d54:	adc	r2, r2, r2
   11d58:	subcs	r0, r0, r1, lsl #22
   11d5c:	cmp	r0, r1, lsl #21
   11d60:	adc	r2, r2, r2
   11d64:	subcs	r0, r0, r1, lsl #21
   11d68:	cmp	r0, r1, lsl #20
   11d6c:	adc	r2, r2, r2
   11d70:	subcs	r0, r0, r1, lsl #20
   11d74:	cmp	r0, r1, lsl #19
   11d78:	adc	r2, r2, r2
   11d7c:	subcs	r0, r0, r1, lsl #19
   11d80:	cmp	r0, r1, lsl #18
   11d84:	adc	r2, r2, r2
   11d88:	subcs	r0, r0, r1, lsl #18
   11d8c:	cmp	r0, r1, lsl #17
   11d90:	adc	r2, r2, r2
   11d94:	subcs	r0, r0, r1, lsl #17
   11d98:	cmp	r0, r1, lsl #16
   11d9c:	adc	r2, r2, r2
   11da0:	subcs	r0, r0, r1, lsl #16
   11da4:	cmp	r0, r1, lsl #15
   11da8:	adc	r2, r2, r2
   11dac:	subcs	r0, r0, r1, lsl #15
   11db0:	cmp	r0, r1, lsl #14
   11db4:	adc	r2, r2, r2
   11db8:	subcs	r0, r0, r1, lsl #14
   11dbc:	cmp	r0, r1, lsl #13
   11dc0:	adc	r2, r2, r2
   11dc4:	subcs	r0, r0, r1, lsl #13
   11dc8:	cmp	r0, r1, lsl #12
   11dcc:	adc	r2, r2, r2
   11dd0:	subcs	r0, r0, r1, lsl #12
   11dd4:	cmp	r0, r1, lsl #11
   11dd8:	adc	r2, r2, r2
   11ddc:	subcs	r0, r0, r1, lsl #11
   11de0:	cmp	r0, r1, lsl #10
   11de4:	adc	r2, r2, r2
   11de8:	subcs	r0, r0, r1, lsl #10
   11dec:	cmp	r0, r1, lsl #9
   11df0:	adc	r2, r2, r2
   11df4:	subcs	r0, r0, r1, lsl #9
   11df8:	cmp	r0, r1, lsl #8
   11dfc:	adc	r2, r2, r2
   11e00:	subcs	r0, r0, r1, lsl #8
   11e04:	cmp	r0, r1, lsl #7
   11e08:	adc	r2, r2, r2
   11e0c:	subcs	r0, r0, r1, lsl #7
   11e10:	cmp	r0, r1, lsl #6
   11e14:	adc	r2, r2, r2
   11e18:	subcs	r0, r0, r1, lsl #6
   11e1c:	cmp	r0, r1, lsl #5
   11e20:	adc	r2, r2, r2
   11e24:	subcs	r0, r0, r1, lsl #5
   11e28:	cmp	r0, r1, lsl #4
   11e2c:	adc	r2, r2, r2
   11e30:	subcs	r0, r0, r1, lsl #4
   11e34:	cmp	r0, r1, lsl #3
   11e38:	adc	r2, r2, r2
   11e3c:	subcs	r0, r0, r1, lsl #3
   11e40:	cmp	r0, r1, lsl #2
   11e44:	adc	r2, r2, r2
   11e48:	subcs	r0, r0, r1, lsl #2
   11e4c:	cmp	r0, r1, lsl #1
   11e50:	adc	r2, r2, r2
   11e54:	subcs	r0, r0, r1, lsl #1
   11e58:	cmp	r0, r1
   11e5c:	adc	r2, r2, r2
   11e60:	subcs	r0, r0, r1
   11e64:	mov	r0, r2
   11e68:	bx	lr
   11e6c:	moveq	r0, #1
   11e70:	movne	r0, #0
   11e74:	bx	lr
   11e78:	clz	r2, r1
   11e7c:	rsb	r2, r2, #31
   11e80:	lsr	r0, r0, r2
   11e84:	bx	lr
   11e88:	cmp	r0, #0
   11e8c:	mvnne	r0, #0
   11e90:	b	11364 <bd_get_debug_mask@@Base+0x4bc>
   11e94:	cmp	r1, #0
   11e98:	beq	11e88 <bd_get_debug_mask@@Base+0xfe0>
   11e9c:	push	{r0, r1, lr}
   11ea0:	bl	11ca8 <bd_get_debug_mask@@Base+0xe00>
   11ea4:	pop	{r1, r2, lr}
   11ea8:	mul	r3, r2, r0
   11eac:	sub	r1, r1, r3
   11eb0:	bx	lr
   11eb4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11eb8:	mov	r7, r0
   11ebc:	ldr	r6, [pc, #76]	; 11f10 <bd_get_debug_mask@@Base+0x1068>
   11ec0:	mov	r8, r1
   11ec4:	ldr	r5, [pc, #72]	; 11f14 <bd_get_debug_mask@@Base+0x106c>
   11ec8:	mov	r9, r2
   11ecc:	add	r6, pc, r6
   11ed0:	bl	109ec <_init@@Base>
   11ed4:	add	r5, pc, r5
   11ed8:	rsb	r6, r5, r6
   11edc:	asrs	r6, r6, #2
   11ee0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11ee4:	sub	r5, r5, #4
   11ee8:	mov	r4, #0
   11eec:	add	r4, r4, #1
   11ef0:	ldr	r3, [r5, #4]!
   11ef4:	mov	r0, r7
   11ef8:	mov	r1, r8
   11efc:	mov	r2, r9
   11f00:	blx	r3
   11f04:	cmp	r4, r6
   11f08:	bne	11eec <bd_get_debug_mask@@Base+0x1044>
   11f0c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11f10:	andeq	r1, r1, ip, lsl r0
   11f14:	andeq	r1, r1, r0, lsl r0
   11f18:	bx	lr

Disassembly of section .fini:

00011f1c <_fini@@Base>:
   11f1c:	push	{r3, lr}
   11f20:	pop	{r3, pc}
