
centos-preinstalled/gen_ethaddr_crc:     file format elf32-littlearm


Disassembly of section .init:

000104e8 <.init>:
   104e8:	push	{r3, lr}
   104ec:	bl	10624 <abort@plt+0xb0>
   104f0:	pop	{r3, pc}

Disassembly of section .plt:

000104f4 <strtol@plt-0x14>:
   104f4:	push	{lr}		; (str lr, [sp, #-4]!)
   104f8:	ldr	lr, [pc, #4]	; 10504 <strtol@plt-0x4>
   104fc:	add	lr, pc, lr
   10500:	ldr	pc, [lr, #8]!
   10504:	strdeq	r0, [r1], -ip

00010508 <strtol@plt>:
   10508:	add	ip, pc, #0, 12
   1050c:	add	ip, ip, #16, 20	; 0x10000
   10510:	ldr	pc, [ip, #2812]!	; 0xafc

00010514 <__stack_chk_fail@plt>:
   10514:	add	ip, pc, #0, 12
   10518:	add	ip, ip, #16, 20	; 0x10000
   1051c:	ldr	pc, [ip, #2804]!	; 0xaf4

00010520 <puts@plt>:
   10520:	add	ip, pc, #0, 12
   10524:	add	ip, ip, #16, 20	; 0x10000
   10528:	ldr	pc, [ip, #2796]!	; 0xaec

0001052c <__libc_start_main@plt>:
   1052c:	add	ip, pc, #0, 12
   10530:	add	ip, ip, #16, 20	; 0x10000
   10534:	ldr	pc, [ip, #2788]!	; 0xae4

00010538 <__ctype_tolower_loc@plt>:
   10538:	add	ip, pc, #0, 12
   1053c:	add	ip, ip, #16, 20	; 0x10000
   10540:	ldr	pc, [ip, #2780]!	; 0xadc

00010544 <__gmon_start__@plt>:
   10544:	add	ip, pc, #0, 12
   10548:	add	ip, ip, #16, 20	; 0x10000
   1054c:	ldr	pc, [ip, #2772]!	; 0xad4

00010550 <__ctype_b_loc@plt>:
   10550:	add	ip, pc, #0, 12
   10554:	add	ip, ip, #16, 20	; 0x10000
   10558:	ldr	pc, [ip, #2764]!	; 0xacc

0001055c <strlen@plt>:
   1055c:	add	ip, pc, #0, 12
   10560:	add	ip, ip, #16, 20	; 0x10000
   10564:	ldr	pc, [ip, #2756]!	; 0xac4

00010568 <__printf_chk@plt>:
   10568:	add	ip, pc, #0, 12
   1056c:	add	ip, ip, #16, 20	; 0x10000
   10570:	ldr	pc, [ip, #2748]!	; 0xabc

00010574 <abort@plt>:
   10574:	add	ip, pc, #0, 12
   10578:	add	ip, ip, #16, 20	; 0x10000
   1057c:	ldr	pc, [ip, #2740]!	; 0xab4

Disassembly of section .text:

00010580 <.text>:
   10580:	cmp	r0, #1
   10584:	push	{r4, r5, r6, lr}
   10588:	mov	r4, r1
   1058c:	ble	105d8 <abort@plt+0x64>
   10590:	ldr	r5, [r1, #4]
   10594:	mov	r0, r5
   10598:	bl	1055c <strlen@plt>
   1059c:	cmp	r0, #17
   105a0:	cmpne	r0, #12
   105a4:	bne	105cc <abort@plt+0x58>
   105a8:	mov	r0, r5
   105ac:	bl	10710 <abort@plt+0x19c>
   105b0:	cmp	r0, #0
   105b4:	popeq	{r4, r5, r6, pc}
   105b8:	movw	r0, #2600	; 0xa28
   105bc:	movt	r0, #1
   105c0:	bl	10520 <puts@plt>
   105c4:	mov	r0, #1
   105c8:	pop	{r4, r5, r6, pc}
   105cc:	movw	r0, #2568	; 0xa08
   105d0:	movt	r0, #1
   105d4:	bl	10520 <puts@plt>
   105d8:	ldr	r0, [r4]
   105dc:	bl	10854 <abort@plt+0x2e0>
   105e0:	mov	r0, #1
   105e4:	pop	{r4, r5, r6, pc}
   105e8:	mov	fp, #0
   105ec:	mov	lr, #0
   105f0:	pop	{r1}		; (ldr r1, [sp], #4)
   105f4:	mov	r2, sp
   105f8:	push	{r2}		; (str r2, [sp, #-4]!)
   105fc:	push	{r0}		; (str r0, [sp, #-4]!)
   10600:	ldr	ip, [pc, #16]	; 10618 <abort@plt+0xa4>
   10604:	push	{ip}		; (str ip, [sp, #-4]!)
   10608:	ldr	r0, [pc, #12]	; 1061c <abort@plt+0xa8>
   1060c:	ldr	r3, [pc, #12]	; 10620 <abort@plt+0xac>
   10610:	bl	1052c <__libc_start_main@plt>
   10614:	bl	10574 <abort@plt>
   10618:	andeq	r0, r1, r8, asr #18
   1061c:	andeq	r0, r1, r0, lsl #11
   10620:	andeq	r0, r1, r4, ror #17
   10624:	ldr	r3, [pc, #20]	; 10640 <abort@plt+0xcc>
   10628:	ldr	r2, [pc, #20]	; 10644 <abort@plt+0xd0>
   1062c:	add	r3, pc, r3
   10630:	ldr	r2, [r3, r2]
   10634:	cmp	r2, #0
   10638:	bxeq	lr
   1063c:	b	10544 <__gmon_start__@plt>
   10640:	andeq	r0, r1, ip, asr #19
   10644:	andeq	r0, r0, r4, lsr r0
   10648:	movw	r0, #4156	; 0x103c
   1064c:	movt	r0, #2
   10650:	movw	r3, #4156	; 0x103c
   10654:	movt	r3, #2
   10658:	cmp	r3, r0
   1065c:	bxeq	lr
   10660:	movw	r3, #0
   10664:	movt	r3, #0
   10668:	cmp	r3, #0
   1066c:	bxeq	lr
   10670:	bx	r3
   10674:	movw	r0, #4156	; 0x103c
   10678:	movt	r0, #2
   1067c:	movw	r1, #4156	; 0x103c
   10680:	movt	r1, #2
   10684:	sub	r1, r1, r0
   10688:	asr	r1, r1, #2
   1068c:	add	r1, r1, r1, lsr #31
   10690:	asrs	r1, r1, #1
   10694:	bxeq	lr
   10698:	movw	r3, #0
   1069c:	movt	r3, #0
   106a0:	cmp	r3, #0
   106a4:	bxeq	lr
   106a8:	bx	r3
   106ac:	push	{r4, lr}
   106b0:	movw	r4, #4156	; 0x103c
   106b4:	movt	r4, #2
   106b8:	ldrb	r3, [r4]
   106bc:	cmp	r3, #0
   106c0:	popne	{r4, pc}
   106c4:	bl	10648 <abort@plt+0xd4>
   106c8:	mov	r3, #1
   106cc:	strb	r3, [r4]
   106d0:	pop	{r4, pc}
   106d4:	b	10674 <abort@plt+0x100>
   106d8:	push	{r4, lr}
   106dc:	mov	r2, #16
   106e0:	mov	r4, r1
   106e4:	mov	r1, #0
   106e8:	bl	10508 <strtol@plt>
   106ec:	cmp	r4, #0
   106f0:	mvneq	r3, #15
   106f4:	movne	r3, #15
   106f8:	lsleq	r0, r0, #4
   106fc:	sxtbne	r0, r0
   10700:	sxtbeq	r0, r0
   10704:	and	r0, r0, r3
   10708:	uxtb	r0, r0
   1070c:	pop	{r4, pc}
   10710:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10714:	movw	r7, #3840	; 0xf00
   10718:	movt	r7, #2
   1071c:	ldrb	r4, [r0]
   10720:	sub	sp, sp, #16
   10724:	mov	r5, #0
   10728:	ldr	r3, [r7]
   1072c:	cmp	r4, r5
   10730:	str	r5, [sp, #4]
   10734:	moveq	r2, r4
   10738:	str	r5, [sp, #7]
   1073c:	str	r3, [sp, #12]
   10740:	beq	107e4 <abort@plt+0x270>
   10744:	mov	r6, r0
   10748:	bl	10550 <__ctype_b_loc@plt>
   1074c:	mov	r8, #10
   10750:	mov	r9, r0
   10754:	sxth	sl, r4
   10758:	ldr	r2, [r9]
   1075c:	strb	r8, [sp, #1]
   10760:	lsl	r3, sl, #1
   10764:	strb	r4, [sp]
   10768:	ldrh	r3, [r2, r3]
   1076c:	tst	r3, #4096	; 0x1000
   10770:	beq	107d4 <abort@plt+0x260>
   10774:	tst	r3, #256	; 0x100
   10778:	beq	1078c <abort@plt+0x218>
   1077c:	bl	10538 <__ctype_tolower_loc@plt>
   10780:	ldr	r3, [r0]
   10784:	ldr	r3, [r3, sl, lsl #2]
   10788:	strb	r3, [sp]
   1078c:	mov	r2, #16
   10790:	mov	r1, #0
   10794:	mov	r0, sp
   10798:	bl	10508 <strtol@plt>
   1079c:	tst	r5, #1
   107a0:	movne	r3, #15
   107a4:	sxtbne	r0, r0
   107a8:	lsleq	r0, r0, #4
   107ac:	mvneq	r3, #15
   107b0:	sxtbeq	r0, r0
   107b4:	add	r2, sp, #16
   107b8:	and	r0, r0, r3
   107bc:	add	r2, r2, r5, lsr #1
   107c0:	add	r5, r5, #1
   107c4:	ldrb	r3, [r2, #-12]
   107c8:	uxtb	r5, r5
   107cc:	orr	r0, r3, r0
   107d0:	strb	r0, [r2, #-12]
   107d4:	ldrb	r4, [r6, #1]!
   107d8:	cmp	r4, #0
   107dc:	bne	10754 <abort@plt+0x1e0>
   107e0:	ldrb	r2, [sp, #4]
   107e4:	movw	r5, #2396	; 0x95c
   107e8:	add	r6, sp, #9
   107ec:	movt	r5, #1
   107f0:	add	r4, sp, #4
   107f4:	b	107fc <abort@plt+0x288>
   107f8:	ldrb	r2, [r4, #1]!
   107fc:	mov	r1, r5
   10800:	mov	r0, #1
   10804:	bl	10568 <__printf_chk@plt>
   10808:	cmp	r6, r4
   1080c:	bne	107f8 <abort@plt+0x284>
   10810:	add	r1, sp, #4
   10814:	mov	r2, #6
   10818:	mov	r0, #0
   1081c:	bl	10894 <abort@plt+0x320>
   10820:	movw	r1, #2404	; 0x964
   10824:	movt	r1, #1
   10828:	mov	r2, r0
   1082c:	mov	r0, #1
   10830:	bl	10568 <__printf_chk@plt>
   10834:	ldr	r2, [sp, #12]
   10838:	ldr	r3, [r7]
   1083c:	mov	r0, #0
   10840:	cmp	r2, r3
   10844:	bne	10850 <abort@plt+0x2dc>
   10848:	add	sp, sp, #16
   1084c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10850:	bl	10514 <__stack_chk_fail@plt>
   10854:	push	{r4, lr}
   10858:	mov	r2, r0
   1085c:	movw	r1, #2412	; 0x96c
   10860:	mov	r0, #1
   10864:	movt	r1, #1
   10868:	bl	10568 <__printf_chk@plt>
   1086c:	movw	r0, #2440	; 0x988
   10870:	movt	r0, #1
   10874:	bl	10520 <puts@plt>
   10878:	movw	r0, #2492	; 0x9bc
   1087c:	movt	r0, #1
   10880:	bl	10520 <puts@plt>
   10884:	movw	r0, #2528	; 0x9e0
   10888:	pop	{r4, lr}
   1088c:	movt	r0, #1
   10890:	b	10520 <puts@plt>
   10894:	cmp	r2, #0
   10898:	bxle	lr
   1089c:	sub	r1, r1, #1
   108a0:	add	ip, r1, r2
   108a4:	ldrb	r2, [r1, #1]!
   108a8:	mov	r3, #8
   108ac:	eor	r0, r0, r2
   108b0:	lsl	r0, r0, r3
   108b4:	uxth	r0, r0
   108b8:	tst	r0, #32768	; 0x8000
   108bc:	eorne	r0, r0, #33536	; 0x8300
   108c0:	eorne	r0, r0, #128	; 0x80
   108c4:	subs	r3, r3, #1
   108c8:	lsl	r0, r0, #1
   108cc:	uxth	r0, r0
   108d0:	bne	108b8 <abort@plt+0x344>
   108d4:	cmp	ip, r1
   108d8:	lsr	r0, r0, #8
   108dc:	bne	108a4 <abort@plt+0x330>
   108e0:	bx	lr
   108e4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   108e8:	mov	r7, r0
   108ec:	ldr	r6, [pc, #76]	; 10940 <abort@plt+0x3cc>
   108f0:	mov	r8, r1
   108f4:	ldr	r5, [pc, #72]	; 10944 <abort@plt+0x3d0>
   108f8:	mov	r9, r2
   108fc:	add	r6, pc, r6
   10900:	bl	104e8 <strtol@plt-0x20>
   10904:	add	r5, pc, r5
   10908:	rsb	r6, r5, r6
   1090c:	asrs	r6, r6, #2
   10910:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10914:	sub	r5, r5, #4
   10918:	mov	r4, #0
   1091c:	add	r4, r4, #1
   10920:	ldr	r3, [r5, #4]!
   10924:	mov	r0, r7
   10928:	mov	r1, r8
   1092c:	mov	r2, r9
   10930:	blx	r3
   10934:	cmp	r4, r6
   10938:	bne	1091c <abort@plt+0x3a8>
   1093c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10940:	strdeq	r0, [r1], -r8
   10944:	andeq	r0, r1, ip, ror #11
   10948:	bx	lr

Disassembly of section .fini:

0001094c <.fini>:
   1094c:	push	{r3, lr}
   10950:	pop	{r3, pc}
