
centos-preinstalled/lsblk:     file format elf32-littlearm


Disassembly of section .init:

00011fb8 <_init@@Base>:
   11fb8:	push	{r3, lr}
   11fbc:	bl	130d8 <fputs@plt+0xa94>
   11fc0:	pop	{r3, pc}

Disassembly of section .plt:

00011fc4 <blkid_free_probe@plt-0x14>:
   11fc4:	push	{lr}		; (str lr, [sp, #-4]!)
   11fc8:	ldr	lr, [pc, #4]	; 11fd4 <_init@@Base+0x1c>
   11fcc:	add	lr, pc, lr
   11fd0:	ldr	pc, [lr, #8]!
   11fd4:	andeq	sp, r1, ip, lsr #32

00011fd8 <blkid_free_probe@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #118784	; 0x1d000
   11fe0:	ldr	pc, [ip, #44]!	; 0x2c

00011fe4 <mnt_new_table@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #118784	; 0x1d000
   11fec:	ldr	pc, [ip, #36]!	; 0x24

00011ff0 <blkid_probe_set_partitions_flags@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #118784	; 0x1d000
   11ff8:	ldr	pc, [ip, #28]!

00011ffc <geteuid@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #118784	; 0x1d000
   12004:	ldr	pc, [ip, #20]!

00012008 <abort@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #118784	; 0x1d000
   12010:	ldr	pc, [ip, #12]!

00012014 <opendir@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #118784	; 0x1d000
   1201c:	ldr	pc, [ip, #4]!

00012020 <err@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #28, 20	; 0x1c000
   12028:	ldr	pc, [ip, #4092]!	; 0xffc

0001202c <__libc_start_main@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #28, 20	; 0x1c000
   12034:	ldr	pc, [ip, #4084]!	; 0xff4

00012038 <__openat64_2@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #28, 20	; 0x1c000
   12040:	ldr	pc, [ip, #4076]!	; 0xfec

00012044 <udev_device_get_property_value@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #28, 20	; 0x1c000
   1204c:	ldr	pc, [ip, #4068]!	; 0xfe4

00012050 <__gmon_start__@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #28, 20	; 0x1c000
   12058:	ldr	pc, [ip, #4060]!	; 0xfdc

0001205c <blkid_probe_set_superblocks_flags@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #28, 20	; 0x1c000
   12064:	ldr	pc, [ip, #4052]!	; 0xfd4

00012068 <__ctype_get_mb_cur_max@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #28, 20	; 0x1c000
   12070:	ldr	pc, [ip, #4044]!	; 0xfcc

00012074 <strncpy@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #28, 20	; 0x1c000
   1207c:	ldr	pc, [ip, #4036]!	; 0xfc4

00012080 <fclose@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #28, 20	; 0x1c000
   12088:	ldr	pc, [ip, #4028]!	; 0xfbc

0001208c <fgets@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #28, 20	; 0x1c000
   12094:	ldr	pc, [ip, #4020]!	; 0xfb4

00012098 <getenv@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #28, 20	; 0x1c000
   120a0:	ldr	pc, [ip, #4012]!	; 0xfac

000120a4 <ttyname@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #28, 20	; 0x1c000
   120ac:	ldr	pc, [ip, #4004]!	; 0xfa4

000120b0 <__printf_chk@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #28, 20	; 0x1c000
   120b8:	ldr	pc, [ip, #3996]!	; 0xf9c

000120bc <strtod@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #28, 20	; 0x1c000
   120c4:	ldr	pc, [ip, #3988]!	; 0xf94

000120c8 <strchr@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #28, 20	; 0x1c000
   120d0:	ldr	pc, [ip, #3980]!	; 0xf8c

000120d4 <__cxa_atexit@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #28, 20	; 0x1c000
   120dc:	ldr	pc, [ip, #3972]!	; 0xf84

000120e0 <__fpending@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #28, 20	; 0x1c000
   120e8:	ldr	pc, [ip, #3964]!	; 0xf7c

000120ec <calloc@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #28, 20	; 0x1c000
   120f4:	ldr	pc, [ip, #3956]!	; 0xf74

000120f8 <setegid@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #28, 20	; 0x1c000
   12100:	ldr	pc, [ip, #3948]!	; 0xf6c

00012104 <memset@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #28, 20	; 0x1c000
   1210c:	ldr	pc, [ip, #3940]!	; 0xf64

00012110 <uname@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #28, 20	; 0x1c000
   12118:	ldr	pc, [ip, #3932]!	; 0xf5c

0001211c <strrchr@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #28, 20	; 0x1c000
   12124:	ldr	pc, [ip, #3924]!	; 0xf54

00012128 <bindtextdomain@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #28, 20	; 0x1c000
   12130:	ldr	pc, [ip, #3916]!	; 0xf4c

00012134 <mnt_table_set_cache@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #28, 20	; 0x1c000
   1213c:	ldr	pc, [ip, #3908]!	; 0xf44

00012140 <mnt_table_find_devno@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #28, 20	; 0x1c000
   12148:	ldr	pc, [ip, #3900]!	; 0xf3c

0001214c <__strndup@plt>:
   1214c:	add	ip, pc, #0, 12
   12150:	add	ip, ip, #28, 20	; 0x1c000
   12154:	ldr	pc, [ip, #3892]!	; 0xf34

00012158 <mbrtowc@plt>:
   12158:	add	ip, pc, #0, 12
   1215c:	add	ip, ip, #28, 20	; 0x1c000
   12160:	ldr	pc, [ip, #3884]!	; 0xf2c

00012164 <__assert_fail@plt>:
   12164:	add	ip, pc, #0, 12
   12168:	add	ip, ip, #28, 20	; 0x1c000
   1216c:	ldr	pc, [ip, #3876]!	; 0xf24

00012170 <__strtoll_internal@plt>:
   12170:	add	ip, pc, #0, 12
   12174:	add	ip, ip, #28, 20	; 0x1c000
   12178:	ldr	pc, [ip, #3868]!	; 0xf1c

0001217c <__fxstat64@plt>:
   1217c:	add	ip, pc, #0, 12
   12180:	add	ip, ip, #28, 20	; 0x1c000
   12184:	ldr	pc, [ip, #3860]!	; 0xf14

00012188 <usleep@plt>:
   12188:	add	ip, pc, #0, 12
   1218c:	add	ip, ip, #28, 20	; 0x1c000
   12190:	ldr	pc, [ip, #3852]!	; 0xf0c

00012194 <_exit@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #28, 20	; 0x1c000
   1219c:	ldr	pc, [ip, #3844]!	; 0xf04

000121a0 <udev_new@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #28, 20	; 0x1c000
   121a8:	ldr	pc, [ip, #3836]!	; 0xefc

000121ac <getuid@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #28, 20	; 0x1c000
   121b4:	ldr	pc, [ip, #3828]!	; 0xef4

000121b8 <free@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #28, 20	; 0x1c000
   121c0:	ldr	pc, [ip, #3820]!	; 0xeec

000121c4 <read@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #28, 20	; 0x1c000
   121cc:	ldr	pc, [ip, #3812]!	; 0xee4

000121d0 <write@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #28, 20	; 0x1c000
   121d8:	ldr	pc, [ip, #3804]!	; 0xedc

000121dc <getopt_long@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #28, 20	; 0x1c000
   121e4:	ldr	pc, [ip, #3796]!	; 0xed4

000121e8 <dcgettext@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #28, 20	; 0x1c000
   121f0:	ldr	pc, [ip, #3788]!	; 0xecc

000121f4 <mnt_fs_get_target@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #28, 20	; 0x1c000
   121fc:	ldr	pc, [ip, #3780]!	; 0xec4

00012200 <mnt_free_iter@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #28, 20	; 0x1c000
   12208:	ldr	pc, [ip, #3772]!	; 0xebc

0001220c <access@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #28, 20	; 0x1c000
   12214:	ldr	pc, [ip, #3764]!	; 0xeb4

00012218 <mnt_new_iter@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #28, 20	; 0x1c000
   12220:	ldr	pc, [ip, #3756]!	; 0xeac

00012224 <blkid_do_safeprobe@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #28, 20	; 0x1c000
   1222c:	ldr	pc, [ip, #3748]!	; 0xea4

00012230 <ioctl@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #28, 20	; 0x1c000
   12238:	ldr	pc, [ip, #3740]!	; 0xe9c

0001223c <isatty@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #28, 20	; 0x1c000
   12244:	ldr	pc, [ip, #3732]!	; 0xe94

00012248 <readlinkat@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #28, 20	; 0x1c000
   12250:	ldr	pc, [ip, #3724]!	; 0xe8c

00012254 <mempcpy@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #28, 20	; 0x1c000
   1225c:	ldr	pc, [ip, #3716]!	; 0xe84

00012260 <mbstowcs@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #28, 20	; 0x1c000
   12268:	ldr	pc, [ip, #3708]!	; 0xe7c

0001226c <strlen@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #28, 20	; 0x1c000
   12274:	ldr	pc, [ip, #3700]!	; 0xe74

00012278 <sscanf@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #28, 20	; 0x1c000
   12280:	ldr	pc, [ip, #3692]!	; 0xe6c

00012284 <strtoul@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #28, 20	; 0x1c000
   1228c:	ldr	pc, [ip, #3684]!	; 0xe64

00012290 <memcpy@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #28, 20	; 0x1c000
   12298:	ldr	pc, [ip, #3676]!	; 0xe5c

0001229c <setlocale@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #28, 20	; 0x1c000
   122a4:	ldr	pc, [ip, #3668]!	; 0xe54

000122a8 <fopen64@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #28, 20	; 0x1c000
   122b0:	ldr	pc, [ip, #3660]!	; 0xe4c

000122b4 <getpwuid@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #28, 20	; 0x1c000
   122bc:	ldr	pc, [ip, #3652]!	; 0xe44

000122c0 <__ctype_tolower_loc@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #28, 20	; 0x1c000
   122c8:	ldr	pc, [ip, #3644]!	; 0xe3c

000122cc <localeconv@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #28, 20	; 0x1c000
   122d4:	ldr	pc, [ip, #3636]!	; 0xe34

000122d8 <mnt_free_table@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #28, 20	; 0x1c000
   122e0:	ldr	pc, [ip, #3628]!	; 0xe2c

000122e4 <blkid_probe_lookup_value@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #28, 20	; 0x1c000
   122ec:	ldr	pc, [ip, #3620]!	; 0xe24

000122f0 <fgetc@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #28, 20	; 0x1c000
   122f8:	ldr	pc, [ip, #3612]!	; 0xe1c

000122fc <udev_device_unref@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #28, 20	; 0x1c000
   12304:	ldr	pc, [ip, #3604]!	; 0xe14

00012308 <strtol@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #28, 20	; 0x1c000
   12310:	ldr	pc, [ip, #3596]!	; 0xe0c

00012314 <mnt_fs_get_root@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #28, 20	; 0x1c000
   1231c:	ldr	pc, [ip, #3588]!	; 0xe04

00012320 <open64@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #28, 20	; 0x1c000
   12328:	ldr	pc, [ip, #3580]!	; 0xdfc

0001232c <raise@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #28, 20	; 0x1c000
   12334:	ldr	pc, [ip, #3572]!	; 0xdf4

00012338 <getegid@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #28, 20	; 0x1c000
   12340:	ldr	pc, [ip, #3564]!	; 0xdec

00012344 <errx@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #28, 20	; 0x1c000
   1234c:	ldr	pc, [ip, #3556]!	; 0xde4

00012350 <mnt_table_set_parser_errcb@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #28, 20	; 0x1c000
   12358:	ldr	pc, [ip, #3548]!	; 0xddc

0001235c <mnt_table_parse_swaps@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #28, 20	; 0x1c000
   12364:	ldr	pc, [ip, #3540]!	; 0xdd4

00012368 <__snprintf_chk@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #28, 20	; 0x1c000
   12370:	ldr	pc, [ip, #3532]!	; 0xdcc

00012374 <dirfd@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #28, 20	; 0x1c000
   1237c:	ldr	pc, [ip, #3524]!	; 0xdc4

00012380 <fdopen@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #28, 20	; 0x1c000
   12388:	ldr	pc, [ip, #3516]!	; 0xdbc

0001238c <strstr@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #28, 20	; 0x1c000
   12394:	ldr	pc, [ip, #3508]!	; 0xdb4

00012398 <udev_unref@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #28, 20	; 0x1c000
   123a0:	ldr	pc, [ip, #3500]!	; 0xdac

000123a4 <blkid_devno_to_wholedisk@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #28, 20	; 0x1c000
   123ac:	ldr	pc, [ip, #3492]!	; 0xda4

000123b0 <close@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #28, 20	; 0x1c000
   123b8:	ldr	pc, [ip, #3484]!	; 0xd9c

000123bc <udev_device_new_from_subsystem_sysname@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #28, 20	; 0x1c000
   123c4:	ldr	pc, [ip, #3476]!	; 0xd94

000123c8 <closedir@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #28, 20	; 0x1c000
   123d0:	ldr	pc, [ip, #3468]!	; 0xd8c

000123d4 <warn@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #28, 20	; 0x1c000
   123dc:	ldr	pc, [ip, #3460]!	; 0xd84

000123e0 <strncasecmp@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #28, 20	; 0x1c000
   123e8:	ldr	pc, [ip, #3452]!	; 0xd7c

000123ec <__ctype_b_loc@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #28, 20	; 0x1c000
   123f4:	ldr	pc, [ip, #3444]!	; 0xd74

000123f8 <__xstat64@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #28, 20	; 0x1c000
   12400:	ldr	pc, [ip, #3436]!	; 0xd6c

00012404 <mnt_init_debug@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #28, 20	; 0x1c000
   1240c:	ldr	pc, [ip, #3428]!	; 0xd64

00012410 <lseek64@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #28, 20	; 0x1c000
   12418:	ldr	pc, [ip, #3420]!	; 0xd5c

0001241c <malloc@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #28, 20	; 0x1c000
   12424:	ldr	pc, [ip, #3412]!	; 0xd54

00012428 <nl_langinfo@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #28, 20	; 0x1c000
   12430:	ldr	pc, [ip, #3404]!	; 0xd4c

00012434 <__stack_chk_fail@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #28, 20	; 0x1c000
   1243c:	ldr	pc, [ip, #3396]!	; 0xd44

00012440 <__fprintf_chk@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #28, 20	; 0x1c000
   12448:	ldr	pc, [ip, #3388]!	; 0xd3c

0001244c <vfscanf@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #28, 20	; 0x1c000
   12454:	ldr	pc, [ip, #3380]!	; 0xd34

00012458 <fputc@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #28, 20	; 0x1c000
   12460:	ldr	pc, [ip, #3372]!	; 0xd2c

00012464 <getcwd@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #28, 20	; 0x1c000
   1246c:	ldr	pc, [ip, #3364]!	; 0xd24

00012470 <getgrgid@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #28, 20	; 0x1c000
   12478:	ldr	pc, [ip, #3356]!	; 0xd1c

0001247c <rewinddir@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #28, 20	; 0x1c000
   12484:	ldr	pc, [ip, #3348]!	; 0xd14

00012488 <memmove@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #28, 20	; 0x1c000
   12490:	ldr	pc, [ip, #3340]!	; 0xd0c

00012494 <faccessat@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #28, 20	; 0x1c000
   1249c:	ldr	pc, [ip, #3332]!	; 0xd04

000124a0 <textdomain@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #28, 20	; 0x1c000
   124a8:	ldr	pc, [ip, #3324]!	; 0xcfc

000124ac <mnt_table_next_fs@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #28, 20	; 0x1c000
   124b4:	ldr	pc, [ip, #3316]!	; 0xcf4

000124b8 <dup@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #28, 20	; 0x1c000
   124c0:	ldr	pc, [ip, #3308]!	; 0xcec

000124c4 <readlink@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #28, 20	; 0x1c000
   124cc:	ldr	pc, [ip, #3300]!	; 0xce4

000124d0 <wcstombs@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #28, 20	; 0x1c000
   124d8:	ldr	pc, [ip, #3292]!	; 0xcdc

000124dc <strspn@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #28, 20	; 0x1c000
   124e4:	ldr	pc, [ip, #3284]!	; 0xcd4

000124e8 <mnt_table_set_iter@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #28, 20	; 0x1c000
   124f0:	ldr	pc, [ip, #3276]!	; 0xccc

000124f4 <readdir64@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #28, 20	; 0x1c000
   124fc:	ldr	pc, [ip, #3268]!	; 0xcc4

00012500 <seteuid@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #28, 20	; 0x1c000
   12508:	ldr	pc, [ip, #3260]!	; 0xcbc

0001250c <warnx@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #28, 20	; 0x1c000
   12514:	ldr	pc, [ip, #3252]!	; 0xcb4

00012518 <mnt_table_parse_mtab@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #28, 20	; 0x1c000
   12520:	ldr	pc, [ip, #3244]!	; 0xcac

00012524 <blkid_probe_enable_superblocks@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #28, 20	; 0x1c000
   1252c:	ldr	pc, [ip, #3236]!	; 0xca4

00012530 <snprintf@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #28, 20	; 0x1c000
   12538:	ldr	pc, [ip, #3228]!	; 0xc9c

0001253c <mnt_free_cache@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #28, 20	; 0x1c000
   12544:	ldr	pc, [ip, #3220]!	; 0xc94

00012548 <strcspn@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #28, 20	; 0x1c000
   12550:	ldr	pc, [ip, #3212]!	; 0xc8c

00012554 <__sprintf_chk@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #28, 20	; 0x1c000
   1255c:	ldr	pc, [ip, #3204]!	; 0xc84

00012560 <wcwidth@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #28, 20	; 0x1c000
   12568:	ldr	pc, [ip, #3196]!	; 0xc7c

0001256c <strncmp@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #28, 20	; 0x1c000
   12574:	ldr	pc, [ip, #3188]!	; 0xc74

00012578 <ferror@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #28, 20	; 0x1c000
   12580:	ldr	pc, [ip, #3180]!	; 0xc6c

00012584 <iswprint@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #28, 20	; 0x1c000
   1258c:	ldr	pc, [ip, #3172]!	; 0xc64

00012590 <mnt_table_find_srcpath@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #28, 20	; 0x1c000
   12598:	ldr	pc, [ip, #3164]!	; 0xc5c

0001259c <__strdup@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #28, 20	; 0x1c000
   125a4:	ldr	pc, [ip, #3156]!	; 0xc54

000125a8 <mnt_new_cache@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #28, 20	; 0x1c000
   125b0:	ldr	pc, [ip, #3148]!	; 0xc4c

000125b4 <__fxstatat64@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #28, 20	; 0x1c000
   125bc:	ldr	pc, [ip, #3140]!	; 0xc44

000125c0 <mnt_fs_match_source@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #28, 20	; 0x1c000
   125c8:	ldr	pc, [ip, #3132]!	; 0xc3c

000125cc <strcmp@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #28, 20	; 0x1c000
   125d4:	ldr	pc, [ip, #3124]!	; 0xc34

000125d8 <exit@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #28, 20	; 0x1c000
   125e0:	ldr	pc, [ip, #3116]!	; 0xc2c

000125e4 <blkid_probe_enable_partitions@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #28, 20	; 0x1c000
   125ec:	ldr	pc, [ip, #3108]!	; 0xc24

000125f0 <__vasprintf_chk@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #28, 20	; 0x1c000
   125f8:	ldr	pc, [ip, #3100]!	; 0xc1c

000125fc <__errno_location@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #28, 20	; 0x1c000
   12604:	ldr	pc, [ip, #3092]!	; 0xc14

00012608 <blkid_new_probe_from_filename@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #28, 20	; 0x1c000
   12610:	ldr	pc, [ip, #3084]!	; 0xc0c

00012614 <__strtoull_internal@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #28, 20	; 0x1c000
   1261c:	ldr	pc, [ip, #3076]!	; 0xc04

00012620 <fscanf@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #28, 20	; 0x1c000
   12628:	ldr	pc, [ip, #3068]!	; 0xbfc

0001262c <getgid@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #28, 20	; 0x1c000
   12634:	ldr	pc, [ip, #3060]!	; 0xbf4

00012638 <fdopendir@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #28, 20	; 0x1c000
   12640:	ldr	pc, [ip, #3052]!	; 0xbec

00012644 <fputs@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #28, 20	; 0x1c000
   1264c:	ldr	pc, [ip, #3044]!	; 0xbe4

Disassembly of section .text:

00012650 <.text>:
   12650:	movw	r1, #55456	; 0xd8a0
   12654:	mov	r0, #1
   12658:	push	{r3, lr}
   1265c:	movt	r1, #1
   12660:	bl	12020 <err@plt>
   12664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12668:	movw	r8, #63016	; 0xf628
   1266c:	movt	r8, #2
   12670:	sub	sp, sp, #60	; 0x3c
   12674:	mov	r6, r1
   12678:	mov	r5, r0
   1267c:	ldr	r3, [r8]
   12680:	movw	r1, #53944	; 0xd2b8
   12684:	mov	r0, #6
   12688:	movt	r1, #1
   1268c:	mov	r4, #0
   12690:	str	r4, [sp, #40]	; 0x28
   12694:	str	r3, [sp, #52]	; 0x34
   12698:	movw	sl, #63040	; 0xf640
   1269c:	str	r4, [sp, #44]	; 0x2c
   126a0:	movt	sl, #2
   126a4:	str	r4, [sp, #48]	; 0x30
   126a8:	bl	1229c <setlocale@plt>
   126ac:	movw	r0, #57124	; 0xdf24
   126b0:	movw	r1, #57136	; 0xdf30
   126b4:	movt	r0, #1
   126b8:	movt	r1, #1
   126bc:	bl	12128 <bindtextdomain@plt>
   126c0:	movw	r0, #57124	; 0xdf24
   126c4:	movt	r0, #1
   126c8:	str	r4, [sp, #20]
   126cc:	bl	124a0 <textdomain@plt>
   126d0:	movw	r0, #14308	; 0x37e4
   126d4:	movt	r0, #1
   126d8:	movw	r2, #63032	; 0xf638
   126dc:	str	r2, [sp, #12]
   126e0:	bl	1cfc8 <fputs@plt+0xa984>
   126e4:	ldr	r2, [sp, #12]
   126e8:	mov	r7, #64	; 0x40
   126ec:	add	r3, sp, #32
   126f0:	str	r4, [sp, #32]
   126f4:	movt	r2, #2
   126f8:	str	r3, [sl, #164]	; 0xa4
   126fc:	str	r2, [sp, #12]
   12700:	str	r4, [sp, #36]	; 0x24
   12704:	mov	r4, #0
   12708:	movw	r2, #57384	; 0xe028
   1270c:	str	r4, [sp]
   12710:	movt	r2, #1
   12714:	mov	r0, r5
   12718:	mov	r1, r6
   1271c:	ldr	r3, [pc, #2416]	; 13094 <fputs@plt+0xa50>
   12720:	bl	121dc <getopt_long@plt>
   12724:	cmn	r0, #1
   12728:	beq	12ce4 <fputs@plt+0x6a0>
   1272c:	cmp	r0, #72	; 0x48
   12730:	ble	127ac <fputs@plt+0x168>
   12734:	ldr	r1, [pc, #2396]	; 13098 <fputs@plt+0xa54>
   12738:	add	r9, sp, #40	; 0x28
   1273c:	mov	ip, r4
   12740:	mov	r3, #73	; 0x49
   12744:	sub	lr, r1, #64	; 0x40
   12748:	cmp	r0, r3
   1274c:	blt	12788 <fputs@plt+0x144>
   12750:	movne	r2, lr
   12754:	beq	12770 <fputs@plt+0x12c>
   12758:	ldr	r3, [r2, #4]!
   1275c:	cmp	r3, #0
   12760:	beq	12788 <fputs@plt+0x144>
   12764:	cmp	r0, r3
   12768:	blt	12788 <fputs@plt+0x144>
   1276c:	bne	12758 <fputs@plt+0x114>
   12770:	ldr	r3, [r9, ip, lsl #2]
   12774:	cmp	r3, #0
   12778:	streq	r0, [r9, ip, lsl #2]
   1277c:	beq	12788 <fputs@plt+0x144>
   12780:	cmp	r0, r3
   12784:	bne	12eec <fputs@plt+0x8a8>
   12788:	ldr	r3, [r1]
   1278c:	add	r4, r4, #1
   12790:	mov	lr, r1
   12794:	cmp	r3, #0
   12798:	mov	ip, r4
   1279c:	beq	127ac <fputs@plt+0x168>
   127a0:	cmp	r0, r3
   127a4:	add	r1, r1, #64	; 0x40
   127a8:	bge	12748 <fputs@plt+0x104>
   127ac:	sub	r0, r0, #68	; 0x44
   127b0:	cmp	r0, #48	; 0x30
   127b4:	ldrls	pc, [pc, r0, lsl #2]
   127b8:	b	12cd4 <fputs@plt+0x690>
   127bc:	muleq	r1, r4, ip
   127c0:	ldrdeq	r2, [r1], -r4
   127c4:	ldrdeq	r2, [r1], -r4
   127c8:	ldrdeq	r2, [r1], -r4
   127cc:	ldrdeq	r2, [r1], -r4
   127d0:	andeq	r2, r1, r0, asr #23
   127d4:	ldrdeq	r2, [r1], -r4
   127d8:	ldrdeq	r2, [r1], -r4
   127dc:	ldrdeq	r2, [r1], -r4
   127e0:	ldrdeq	r2, [r1], -r4
   127e4:	ldrdeq	r2, [r1], -r4
   127e8:	ldrdeq	r2, [r1], -r4
   127ec:			; <UNDEFINED> instruction: 0x00012bb4
   127f0:	ldrdeq	r2, [r1], -r4
   127f4:	ldrdeq	r2, [r1], -r4
   127f8:	andeq	r2, r1, r8, asr fp
   127fc:	ldrdeq	r2, [r1], -r4
   12800:	ldrdeq	r2, [r1], -r4
   12804:	andeq	r2, r1, r8, lsl #22
   12808:	ldrdeq	r2, [r1], -r4
   1280c:	ldrdeq	r2, [r1], -r4
   12810:	ldrdeq	r2, [r1], -r4
   12814:	ldrdeq	r2, [r1], -r4
   12818:	ldrdeq	r2, [r1], -r4
   1281c:	ldrdeq	r2, [r1], -r4
   12820:	ldrdeq	r2, [r1], -r4
   12824:	ldrdeq	r2, [r1], -r4
   12828:	ldrdeq	r2, [r1], -r4
   1282c:	ldrdeq	r2, [r1], -r4
   12830:	strdeq	r2, [r1], -r4
   12834:	andeq	r2, r1, r0, ror #21
   12838:	ldrdeq	r2, [r1], -r4
   1283c:	andeq	r2, r1, ip, asr #21
   12840:	ldrdeq	r2, [r1], -r8
   12844:	muleq	r1, r8, r9
   12848:	ldrdeq	r2, [r1], -r4
   1284c:	andeq	r2, r1, r8, lsl #19
   12850:	andeq	r2, r1, r0, lsl #19
   12854:	ldrdeq	r2, [r1], -r4
   12858:	ldrdeq	r2, [r1], -r4
   1285c:	andeq	r2, r1, r8, ror r9
   12860:	andeq	r2, r1, r8, lsr r9
   12864:	andeq	r2, r1, r0, lsr r9
   12868:	andeq	r2, r1, r0, lsr #18
   1286c:	andeq	r2, r1, ip, lsl #18
   12870:	ldrdeq	r2, [r1], -r4
   12874:	andeq	r2, r1, r0, lsl #18
   12878:	andeq	r2, r1, ip, ror #17
   1287c:	andeq	r2, r1, r0, lsl #17
   12880:	ldr	r3, [sl]
   12884:	mov	lr, #0
   12888:	mov	ip, #19
   1288c:	mov	r1, #20
   12890:	mov	r0, #9
   12894:	add	r2, sl, r3, lsl #2
   12898:	add	r3, r3, #11
   1289c:	str	r3, [sl]
   128a0:	mov	r3, #32
   128a4:	str	lr, [r2, #4]
   128a8:	mov	lr, #21
   128ac:	str	ip, [r2, #8]
   128b0:	str	lr, [r2, #16]
   128b4:	mov	lr, #22
   128b8:	str	r1, [r2, #12]
   128bc:	str	lr, [r2, #20]
   128c0:	mov	lr, #23
   128c4:	str	r0, [r2, #40]	; 0x28
   128c8:	str	lr, [r2, #24]
   128cc:	mov	lr, #24
   128d0:	str	r3, [r2, #44]	; 0x2c
   128d4:	str	lr, [r2, #28]
   128d8:	mov	lr, #25
   128dc:	str	lr, [r2, #32]
   128e0:	mov	lr, #26
   128e4:	str	lr, [r2, #36]	; 0x24
   128e8:	b	12704 <fputs@plt+0xc0>
   128ec:	ldr	r3, [sl, #164]	; 0xa4
   128f0:	ldrb	r2, [r3, #4]
   128f4:	orr	r2, r2, #4
   128f8:	strb	r2, [r3, #4]
   128fc:	b	12704 <fputs@plt+0xc0>
   12900:	bic	r7, r7, #64	; 0x40
   12904:	orr	r7, r7, #2
   12908:	b	12704 <fputs@plt+0xc0>
   1290c:	ldr	r3, [sl, #164]	; 0xa4
   12910:	ldrb	r2, [r3, #4]
   12914:	orr	r2, r2, #32
   12918:	strb	r2, [r3, #4]
   1291c:	b	12704 <fputs@plt+0xc0>
   12920:	ldr	r2, [sp, #12]
   12924:	ldr	r2, [r2]
   12928:	str	r2, [sp, #20]
   1292c:	b	12704 <fputs@plt+0xc0>
   12930:	orr	r7, r7, #8
   12934:	b	12704 <fputs@plt+0xc0>
   12938:	ldr	r3, [sl]
   1293c:	mov	r1, #14
   12940:	mov	lr, #0
   12944:	mov	ip, #16
   12948:	add	r0, sl, r3, lsl #2
   1294c:	add	r3, r3, #5
   12950:	str	r3, [sl]
   12954:	mov	r2, r0
   12958:	str	r1, [r0, #8]
   1295c:	str	lr, [r0, #4]
   12960:	mov	r1, #18
   12964:	str	ip, [r0, #12]
   12968:	mov	r0, #17
   1296c:	str	r1, [r2, #20]
   12970:	str	r0, [r2, #16]
   12974:	b	12704 <fputs@plt+0xc0>
   12978:	bic	r7, r7, #64	; 0x40
   1297c:	b	12704 <fputs@plt+0xc0>
   12980:	orr	r7, r7, #4
   12984:	b	12704 <fputs@plt+0xc0>
   12988:	movw	r3, #63024	; 0xf630
   1298c:	movt	r3, #2
   12990:	ldr	r0, [r3]
   12994:	bl	13208 <fputs@plt+0xbc4>
   12998:	ldr	r3, [sl]
   1299c:	mov	r1, #3
   129a0:	mov	ip, #5
   129a4:	mov	lr, #0
   129a8:	add	r0, sl, r3, lsl #2
   129ac:	add	r3, r3, ip
   129b0:	str	r3, [sl]
   129b4:	mov	r2, r0
   129b8:	str	r1, [r0, #8]
   129bc:	str	lr, [r0, #4]
   129c0:	mov	r1, #4
   129c4:	str	ip, [r0, #12]
   129c8:	mov	r0, #6
   129cc:	str	r1, [r2, #20]
   129d0:	str	r0, [r2, #16]
   129d4:	b	12704 <fputs@plt+0xc0>
   129d8:	ldr	r3, [sp, #12]
   129dc:	ldr	r3, [r3]
   129e0:	cmp	r3, #0
   129e4:	str	r3, [sp, #16]
   129e8:	beq	12704 <fputs@plt+0xc0>
   129ec:	ldrsb	r3, [r3]
   129f0:	cmp	r3, #0
   129f4:	beq	12704 <fputs@plt+0xc0>
   129f8:	bl	125fc <__errno_location@plt>
   129fc:	mov	fp, #0
   12a00:	ldr	r4, [sp, #16]
   12a04:	mov	r9, r0
   12a08:	b	12a84 <fputs@plt+0x440>
   12a0c:	cmp	r3, #0
   12a10:	beq	12a28 <fputs@plt+0x3e4>
   12a14:	ldrb	r2, [r3]
   12a18:	cmp	r2, #0
   12a1c:	beq	12a28 <fputs@plt+0x3e4>
   12a20:	cmp	r2, #44	; 0x2c
   12a24:	bne	12aa8 <fputs@plt+0x464>
   12a28:	ldr	r2, [r9]
   12a2c:	cmp	r2, #0
   12a30:	beq	12a40 <fputs@plt+0x3fc>
   12a34:	sub	r2, r0, #1
   12a38:	cmn	r2, #3
   12a3c:	bhi	13010 <fputs@plt+0x9cc>
   12a40:	ldr	r2, [sl, #184]	; 0xb8
   12a44:	add	r4, r2, #1
   12a48:	str	r4, [sl, #184]	; 0xb8
   12a4c:	add	r2, sl, r2, lsl #2
   12a50:	cmp	r4, #256	; 0x100
   12a54:	str	r0, [r2, #188]	; 0xbc
   12a58:	beq	13034 <fputs@plt+0x9f0>
   12a5c:	cmp	r3, #0
   12a60:	beq	12704 <fputs@plt+0xc0>
   12a64:	ldrsb	r2, [r3]
   12a68:	cmp	r2, #0
   12a6c:	beq	12704 <fputs@plt+0xc0>
   12a70:	adds	r4, r3, #1
   12a74:	beq	12704 <fputs@plt+0xc0>
   12a78:	ldrsb	r3, [r3, #1]
   12a7c:	cmp	r3, #0
   12a80:	beq	12704 <fputs@plt+0xc0>
   12a84:	str	fp, [r9]
   12a88:	mov	r0, r4
   12a8c:	add	r1, sp, #28
   12a90:	mov	r2, #10
   12a94:	str	fp, [sp, #28]
   12a98:	bl	12284 <strtoul@plt>
   12a9c:	ldr	r3, [sp, #28]
   12aa0:	cmp	r4, r3
   12aa4:	bne	12a0c <fputs@plt+0x3c8>
   12aa8:	mov	r2, #5
   12aac:	movw	r1, #57196	; 0xdf6c
   12ab0:	mov	r0, #0
   12ab4:	movt	r1, #1
   12ab8:	bl	121e8 <dcgettext@plt>
   12abc:	ldr	r2, [sp, #16]
   12ac0:	mov	r1, r0
   12ac4:	mov	r0, #1
   12ac8:	bl	12344 <errx@plt>
   12acc:	ldr	r3, [sl, #164]	; 0xa4
   12ad0:	ldrb	r2, [r3, #4]
   12ad4:	orr	r2, r2, #8
   12ad8:	strb	r2, [r3, #4]
   12adc:	b	12704 <fputs@plt+0xc0>
   12ae0:	ldr	r3, [sl, #164]	; 0xa4
   12ae4:	ldrb	r2, [r3, #4]
   12ae8:	orr	r2, r2, #2
   12aec:	strb	r2, [r3, #4]
   12af0:	b	12704 <fputs@plt+0xc0>
   12af4:	ldr	r3, [sl, #164]	; 0xa4
   12af8:	ldrb	r2, [r3, #4]
   12afc:	orr	r2, r2, #1
   12b00:	strb	r2, [r3, #4]
   12b04:	b	12704 <fputs@plt+0xc0>
   12b08:	mov	r2, #5
   12b0c:	movw	r1, #57352	; 0xe008
   12b10:	mov	r0, #0
   12b14:	movt	r1, #1
   12b18:	bl	121e8 <dcgettext@plt>
   12b1c:	movw	r2, #63000	; 0xf618
   12b20:	movt	r2, #2
   12b24:	movw	r3, #57364	; 0xe014
   12b28:	movt	r3, #1
   12b2c:	ldr	r2, [r2]
   12b30:	mov	r1, r0
   12b34:	mov	r0, #1
   12b38:	bl	120b0 <__printf_chk@plt>
   12b3c:	mov	r0, #0
   12b40:	ldr	r2, [sp, #52]	; 0x34
   12b44:	ldr	r3, [r8]
   12b48:	cmp	r2, r3
   12b4c:	bne	13058 <fputs@plt+0xa14>
   12b50:	add	sp, sp, #60	; 0x3c
   12b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b58:	ldr	r2, [sl, #164]	; 0xa4
   12b5c:	mov	r0, #27
   12b60:	ldr	r3, [sl]
   12b64:	mov	ip, #39	; 0x27
   12b68:	mov	r4, #0
   12b6c:	ldrb	r9, [r2, #4]
   12b70:	add	r1, sl, r3, lsl #2
   12b74:	add	r3, r3, #7
   12b78:	orr	r9, r9, #24
   12b7c:	str	r3, [sl]
   12b80:	strb	r9, [r2, #4]
   12b84:	mov	r3, #37	; 0x25
   12b88:	mov	r2, #36	; 0x24
   12b8c:	str	r0, [r1, #12]
   12b90:	str	ip, [r1, #16]
   12b94:	mov	r0, #38	; 0x26
   12b98:	mov	ip, #12
   12b9c:	str	r4, [r1, #4]
   12ba0:	str	r2, [r1, #8]
   12ba4:	str	ip, [r1, #20]
   12ba8:	str	r0, [r1, #24]
   12bac:	str	r3, [r1, #28]
   12bb0:	b	12704 <fputs@plt+0xc0>
   12bb4:	bic	r7, r7, #64	; 0x40
   12bb8:	orr	r7, r7, #16
   12bbc:	b	12704 <fputs@plt+0xc0>
   12bc0:	ldr	r3, [sp, #12]
   12bc4:	ldr	r3, [r3]
   12bc8:	cmp	r3, #0
   12bcc:	str	r3, [sp, #16]
   12bd0:	beq	12704 <fputs@plt+0xc0>
   12bd4:	ldrsb	r3, [r3]
   12bd8:	cmp	r3, #0
   12bdc:	beq	12704 <fputs@plt+0xc0>
   12be0:	bl	125fc <__errno_location@plt>
   12be4:	mov	fp, #0
   12be8:	ldr	r4, [sp, #16]
   12bec:	mov	r9, r0
   12bf0:	b	12c6c <fputs@plt+0x628>
   12bf4:	cmp	r3, #0
   12bf8:	beq	12c10 <fputs@plt+0x5cc>
   12bfc:	ldrb	r2, [r3]
   12c00:	cmp	r2, #0
   12c04:	beq	12c10 <fputs@plt+0x5cc>
   12c08:	cmp	r2, #44	; 0x2c
   12c0c:	bne	12aa8 <fputs@plt+0x464>
   12c10:	ldr	r2, [r9]
   12c14:	cmp	r2, #0
   12c18:	beq	12c28 <fputs@plt+0x5e4>
   12c1c:	sub	r2, r0, #1
   12c20:	cmn	r2, #3
   12c24:	bhi	13010 <fputs@plt+0x9cc>
   12c28:	ldr	r2, [sl, #2236]	; 0x8bc
   12c2c:	add	r4, r2, #1
   12c30:	str	r4, [sl, #2236]	; 0x8bc
   12c34:	add	r2, sl, r2, lsl #2
   12c38:	cmp	r4, #256	; 0x100
   12c3c:	str	r0, [r2, #1212]	; 0x4bc
   12c40:	beq	1305c <fputs@plt+0xa18>
   12c44:	cmp	r3, #0
   12c48:	beq	12704 <fputs@plt+0xc0>
   12c4c:	ldrsb	r2, [r3]
   12c50:	cmp	r2, #0
   12c54:	beq	12704 <fputs@plt+0xc0>
   12c58:	adds	r4, r3, #1
   12c5c:	beq	12704 <fputs@plt+0xc0>
   12c60:	ldrsb	r3, [r3, #1]
   12c64:	cmp	r3, #0
   12c68:	beq	12704 <fputs@plt+0xc0>
   12c6c:	str	fp, [r9]
   12c70:	mov	r0, r4
   12c74:	add	r1, sp, #28
   12c78:	mov	r2, #10
   12c7c:	str	fp, [sp, #28]
   12c80:	bl	12284 <strtoul@plt>
   12c84:	ldr	r3, [sp, #28]
   12c88:	cmp	r4, r3
   12c8c:	bne	12bf4 <fputs@plt+0x5b0>
   12c90:	b	12aa8 <fputs@plt+0x464>
   12c94:	ldr	r3, [sl]
   12c98:	mov	r1, #28
   12c9c:	mov	lr, #0
   12ca0:	mov	ip, #29
   12ca4:	add	r0, sl, r3, lsl #2
   12ca8:	add	r3, r3, #5
   12cac:	str	r3, [sl]
   12cb0:	mov	r2, r0
   12cb4:	str	r1, [r0, #8]
   12cb8:	str	lr, [r0, #4]
   12cbc:	mov	r1, #31
   12cc0:	str	ip, [r0, #12]
   12cc4:	mov	r0, #30
   12cc8:	str	r1, [r2, #20]
   12ccc:	str	r0, [r2, #16]
   12cd0:	b	12704 <fputs@plt+0xc0>
   12cd4:	movw	r3, #63028	; 0xf634
   12cd8:	movt	r3, #2
   12cdc:	ldr	r0, [r3]
   12ce0:	bl	13208 <fputs@plt+0xbc4>
   12ce4:	movw	r0, #57408	; 0xe040
   12ce8:	mov	r1, #4
   12cec:	movt	r0, #1
   12cf0:	bl	1220c <access@plt>
   12cf4:	cmp	r0, #0
   12cf8:	bne	12fe8 <fputs@plt+0x9a4>
   12cfc:	ldr	r2, [sl]
   12d00:	movw	r3, #63040	; 0xf640
   12d04:	movt	r3, #2
   12d08:	cmp	r2, #0
   12d0c:	bne	12d4c <fputs@plt+0x708>
   12d10:	mov	r1, #2
   12d14:	str	r2, [r3, #4]
   12d18:	str	r1, [r3, #8]
   12d1c:	mov	r2, #11
   12d20:	mov	r1, #14
   12d24:	str	r2, [r3, #12]
   12d28:	str	r1, [r3, #16]
   12d2c:	mov	r2, #10
   12d30:	mov	r1, #27
   12d34:	str	r2, [r3, #20]
   12d38:	str	r1, [r3, #24]
   12d3c:	mov	r2, #7
   12d40:	str	r2, [r3]
   12d44:	mov	r2, #4
   12d48:	str	r2, [r3, #28]
   12d4c:	ldr	r3, [sp, #20]
   12d50:	cmp	r3, #0
   12d54:	beq	12d84 <fputs@plt+0x740>
   12d58:	movw	r3, #63040	; 0xf640
   12d5c:	movt	r3, #2
   12d60:	ldr	r0, [sp, #20]
   12d64:	movw	r2, #13952	; 0x3680
   12d68:	add	r1, r3, #4
   12d6c:	movt	r2, #1
   12d70:	str	r2, [sp]
   12d74:	mov	r2, #40	; 0x28
   12d78:	bl	17ca4 <fputs@plt+0x5660>
   12d7c:	cmp	r0, #0
   12d80:	blt	12ee4 <fputs@plt+0x8a0>
   12d84:	ldr	r2, [sl, #184]	; 0xb8
   12d88:	movw	r3, #63040	; 0xf640
   12d8c:	movt	r3, #2
   12d90:	cmp	r2, #0
   12d94:	bne	12dac <fputs@plt+0x768>
   12d98:	ldr	r2, [r3, #2236]	; 0x8bc
   12d9c:	cmp	r2, #0
   12da0:	moveq	r2, #1
   12da4:	streq	r2, [r3, #184]	; 0xb8
   12da8:	streq	r2, [r3, #188]	; 0xbc
   12dac:	mov	r0, #0
   12db0:	movw	fp, #63040	; 0xf640
   12db4:	bl	12404 <mnt_init_debug@plt>
   12db8:	mov	r0, r7
   12dbc:	ldr	r4, [sl, #164]	; 0xa4
   12dc0:	bl	1a5c4 <fputs@plt+0x7f80>
   12dc4:	movt	fp, #2
   12dc8:	cmp	r0, #0
   12dcc:	str	r0, [r4]
   12dd0:	beq	13078 <fputs@plt+0xa34>
   12dd4:	ldr	r3, [fp]
   12dd8:	cmp	r3, #0
   12ddc:	ble	12e90 <fputs@plt+0x84c>
   12de0:	movw	r9, #62032	; 0xf250
   12de4:	and	r7, r7, #64	; 0x40
   12de8:	movt	r9, #2
   12dec:	mov	r4, #0
   12df0:	b	12e04 <fputs@plt+0x7c0>
   12df4:	ldr	r3, [fp]
   12df8:	add	r4, r4, #1
   12dfc:	cmp	r3, r4
   12e00:	ble	12e90 <fputs@plt+0x84c>
   12e04:	mov	r0, r4
   12e08:	bl	13700 <fputs@plt+0x10bc>
   12e0c:	cmp	r7, #0
   12e10:	add	r1, r0, r0, lsl #1
   12e14:	add	r3, r9, r1, lsl #3
   12e18:	ldr	r2, [r3, #16]
   12e1c:	bne	12e28 <fputs@plt+0x7e4>
   12e20:	cmp	r0, #0
   12e24:	biceq	r2, r2, #64	; 0x40
   12e28:	ldr	r0, [sl, #164]	; 0xa4
   12e2c:	vldr	d0, [r3, #8]
   12e30:	ldr	r1, [r9, r1, lsl #3]
   12e34:	ldr	r0, [r0]
   12e38:	bl	1a6f4 <fputs@plt+0x80b0>
   12e3c:	cmp	r0, #0
   12e40:	bne	12df4 <fputs@plt+0x7b0>
   12e44:	movw	r1, #57500	; 0xe09c
   12e48:	mov	r2, #5
   12e4c:	movt	r1, #1
   12e50:	mov	r7, #1
   12e54:	bl	121e8 <dcgettext@plt>
   12e58:	bl	123d4 <warn@plt>
   12e5c:	ldr	r3, [sl, #164]	; 0xa4
   12e60:	ldr	r0, [r3]
   12e64:	bl	1a6a4 <fputs@plt+0x8060>
   12e68:	ldr	r0, [sl, #172]	; 0xac
   12e6c:	bl	122d8 <mnt_free_table@plt>
   12e70:	ldr	r0, [sl, #180]	; 0xb4
   12e74:	bl	122d8 <mnt_free_table@plt>
   12e78:	ldr	r0, [sl, #176]	; 0xb0
   12e7c:	bl	1253c <mnt_free_cache@plt>
   12e80:	ldr	r0, [sl, #168]	; 0xa8
   12e84:	bl	12398 <udev_unref@plt>
   12e88:	mov	r0, r7
   12e8c:	b	12b40 <fputs@plt+0x4fc>
   12e90:	movw	r4, #63008	; 0xf620
   12e94:	movt	r4, #2
   12e98:	ldr	r3, [r4]
   12e9c:	cmp	r3, r5
   12ea0:	movne	r7, #1
   12ea4:	movne	r9, r4
   12ea8:	movne	r0, r7
   12eac:	bne	12ec4 <fputs@plt+0x880>
   12eb0:	b	1306c <fputs@plt+0xa28>
   12eb4:	ldr	r0, [r6, r3, lsl #2]
   12eb8:	add	r3, r3, #1
   12ebc:	str	r3, [r9]
   12ec0:	bl	15640 <fputs@plt+0x2ffc>
   12ec4:	ldr	r3, [r4]
   12ec8:	cmp	r5, r3
   12ecc:	bgt	12eb4 <fputs@plt+0x870>
   12ed0:	mov	r7, r0
   12ed4:	ldr	r3, [sl, #164]	; 0xa4
   12ed8:	ldr	r0, [r3]
   12edc:	bl	1af2c <fputs@plt+0x88e8>
   12ee0:	b	12e5c <fputs@plt+0x818>
   12ee4:	mov	r0, #1
   12ee8:	b	12b40 <fputs@plt+0x4fc>
   12eec:	movw	r5, #63028	; 0xf634
   12ef0:	movt	r5, #2
   12ef4:	mov	r0, #0
   12ef8:	mov	r2, #5
   12efc:	movw	r1, #57156	; 0xdf44
   12f00:	movt	r1, #1
   12f04:	ldr	r7, [r5]
   12f08:	mov	r4, lr
   12f0c:	mov	r6, r0
   12f10:	bl	121e8 <dcgettext@plt>
   12f14:	movw	r3, #63000	; 0xf618
   12f18:	movt	r3, #2
   12f1c:	mov	r1, #1
   12f20:	ldr	r3, [r3]
   12f24:	mov	r2, r0
   12f28:	mov	r0, r7
   12f2c:	bl	12440 <__fprintf_chk@plt>
   12f30:	ldr	r1, [r4, r6]
   12f34:	cmp	r1, #0
   12f38:	beq	12f8c <fputs@plt+0x948>
   12f3c:	cmp	r1, #97	; 0x61
   12f40:	beq	12fc8 <fputs@plt+0x984>
   12f44:	ldr	r2, [pc, #328]	; 13094 <fputs@plt+0xa50>
   12f48:	b	12f5c <fputs@plt+0x918>
   12f4c:	add	r2, r2, #16
   12f50:	ldr	r0, [r2, #12]
   12f54:	cmp	r0, r1
   12f58:	beq	12fd0 <fputs@plt+0x98c>
   12f5c:	ldr	r3, [r2, #16]
   12f60:	cmp	r3, #0
   12f64:	bne	12f4c <fputs@plt+0x908>
   12f68:	mov	r3, r1
   12f6c:	movw	r2, #57536	; 0xe0c0
   12f70:	ldr	r0, [r5]
   12f74:	movt	r2, #1
   12f78:	mov	r1, #1
   12f7c:	bl	12440 <__fprintf_chk@plt>
   12f80:	add	r6, r6, #4
   12f84:	cmp	r6, #60	; 0x3c
   12f88:	bne	12f30 <fputs@plt+0x8ec>
   12f8c:	mov	r2, #5
   12f90:	movw	r1, #57172	; 0xdf54
   12f94:	mov	r0, #0
   12f98:	movt	r1, #1
   12f9c:	ldr	r4, [r5]
   12fa0:	bl	121e8 <dcgettext@plt>
   12fa4:	mov	r1, #1
   12fa8:	mov	r2, r0
   12fac:	mov	r0, r4
   12fb0:	bl	12440 <__fprintf_chk@plt>
   12fb4:	ldr	r1, [r5]
   12fb8:	mov	r0, #10
   12fbc:	bl	12458 <fputc@plt>
   12fc0:	mov	r0, #1
   12fc4:	bl	125d8 <exit@plt>
   12fc8:	movw	r3, #57120	; 0xdf20
   12fcc:	movt	r3, #1
   12fd0:	movw	r2, #57544	; 0xe0c8
   12fd4:	ldr	r0, [r5]
   12fd8:	movt	r2, #1
   12fdc:	mov	r1, #1
   12fe0:	bl	12440 <__fprintf_chk@plt>
   12fe4:	b	12f80 <fputs@plt+0x93c>
   12fe8:	mov	r2, #5
   12fec:	mov	r0, r4
   12ff0:	movw	r1, #57424	; 0xe050
   12ff4:	movt	r1, #1
   12ff8:	bl	121e8 <dcgettext@plt>
   12ffc:	movw	r2, #57408	; 0xe040
   13000:	movt	r2, #1
   13004:	mov	r1, r0
   13008:	mov	r0, #1
   1300c:	bl	12020 <err@plt>
   13010:	mov	r2, #5
   13014:	movw	r1, #57196	; 0xdf6c
   13018:	mov	r0, #0
   1301c:	movt	r1, #1
   13020:	bl	121e8 <dcgettext@plt>
   13024:	ldr	r2, [sp, #16]
   13028:	mov	r1, r0
   1302c:	mov	r0, #1
   13030:	bl	12020 <err@plt>
   13034:	movw	r1, #57224	; 0xdf88
   13038:	movt	r1, #1
   1303c:	mov	r0, #0
   13040:	mov	r2, #5
   13044:	bl	121e8 <dcgettext@plt>
   13048:	mov	r2, r4
   1304c:	mov	r1, r0
   13050:	mov	r0, #1
   13054:	bl	12344 <errx@plt>
   13058:	bl	12434 <__stack_chk_fail@plt>
   1305c:	movw	r1, #57288	; 0xdfc8
   13060:	mov	r0, #0
   13064:	movt	r1, #1
   13068:	b	13040 <fputs@plt+0x9fc>
   1306c:	bl	15488 <fputs@plt+0x2e44>
   13070:	mov	r7, r0
   13074:	b	12ed4 <fputs@plt+0x890>
   13078:	movw	r1, #57464	; 0xe078
   1307c:	mov	r2, #5
   13080:	movt	r1, #1
   13084:	bl	121e8 <dcgettext@plt>
   13088:	mov	r1, r0
   1308c:	mov	r0, #1
   13090:	bl	12344 <errx@plt>
   13094:	andeq	sp, r1, r4, lsr r1
   13098:	strheq	sp, [r1], -r4
   1309c:	mov	fp, #0
   130a0:	mov	lr, #0
   130a4:	pop	{r1}		; (ldr r1, [sp], #4)
   130a8:	mov	r2, sp
   130ac:	push	{r2}		; (str r2, [sp, #-4]!)
   130b0:	push	{r0}		; (str r0, [sp, #-4]!)
   130b4:	ldr	ip, [pc, #16]	; 130cc <fputs@plt+0xa88>
   130b8:	push	{ip}		; (str ip, [sp, #-4]!)
   130bc:	ldr	r0, [pc, #12]	; 130d0 <fputs@plt+0xa8c>
   130c0:	ldr	r3, [pc, #12]	; 130d4 <fputs@plt+0xa90>
   130c4:	bl	1202c <__libc_start_main@plt>
   130c8:	bl	12008 <abort@plt>
   130cc:	andeq	ip, r1, r4, asr #31
   130d0:	andeq	r2, r1, r4, ror #12
   130d4:	andeq	ip, r1, r0, ror #30
   130d8:	ldr	r3, [pc, #20]	; 130f4 <fputs@plt+0xab0>
   130dc:	ldr	r2, [pc, #20]	; 130f8 <fputs@plt+0xab4>
   130e0:	add	r3, pc, r3
   130e4:	ldr	r2, [r3, r2]
   130e8:	cmp	r2, #0
   130ec:	bxeq	lr
   130f0:	b	12050 <__gmon_start__@plt>
   130f4:	andeq	fp, r1, r8, lsl pc
   130f8:	andeq	r0, r0, r4, lsr r2
   130fc:	push	{r3, lr}
   13100:	movw	r0, #62996	; 0xf614
   13104:	ldr	r3, [pc, #36]	; 13130 <fputs@plt+0xaec>
   13108:	movt	r0, #2
   1310c:	rsb	r3, r0, r3
   13110:	cmp	r3, #6
   13114:	popls	{r3, pc}
   13118:	movw	r3, #0
   1311c:	movt	r3, #0
   13120:	cmp	r3, #0
   13124:	popeq	{r3, pc}
   13128:	blx	r3
   1312c:	pop	{r3, pc}
   13130:	andeq	pc, r2, r7, lsl r6	; <UNPREDICTABLE>
   13134:	push	{r3, lr}
   13138:	movw	r0, #62996	; 0xf614
   1313c:	movw	r3, #62996	; 0xf614
   13140:	movt	r0, #2
   13144:	movt	r3, #2
   13148:	rsb	r3, r0, r3
   1314c:	asr	r3, r3, #2
   13150:	add	r3, r3, r3, lsr #31
   13154:	asrs	r1, r3, #1
   13158:	popeq	{r3, pc}
   1315c:	movw	r2, #0
   13160:	movt	r2, #0
   13164:	cmp	r2, #0
   13168:	popeq	{r3, pc}
   1316c:	blx	r2
   13170:	pop	{r3, pc}
   13174:	push	{r4, lr}
   13178:	movw	r4, #63036	; 0xf63c
   1317c:	movt	r4, #2
   13180:	ldrb	r3, [r4]
   13184:	cmp	r3, #0
   13188:	popne	{r4, pc}
   1318c:	bl	130fc <fputs@plt+0xab8>
   13190:	mov	r3, #1
   13194:	strb	r3, [r4]
   13198:	pop	{r4, pc}
   1319c:	movw	r0, #61124	; 0xeec4
   131a0:	movt	r0, #2
   131a4:	push	{r3, lr}
   131a8:	ldr	r3, [r0]
   131ac:	cmp	r3, #0
   131b0:	beq	131c8 <fputs@plt+0xb84>
   131b4:	movw	r3, #0
   131b8:	movt	r3, #0
   131bc:	cmp	r3, #0
   131c0:	beq	131c8 <fputs@plt+0xb84>
   131c4:	blx	r3
   131c8:	pop	{r3, lr}
   131cc:	b	13134 <fputs@plt+0xaf0>
   131d0:	push	{r3, r4, r5, lr}
   131d4:	subs	r5, r1, #0
   131d8:	mov	r4, r2
   131dc:	beq	13200 <fputs@plt+0xbbc>
   131e0:	mov	r2, #5
   131e4:	movw	r1, #53892	; 0xd284
   131e8:	mov	r0, #0
   131ec:	movt	r1, #1
   131f0:	bl	121e8 <dcgettext@plt>
   131f4:	mov	r1, r5
   131f8:	mov	r2, r4
   131fc:	bl	1250c <warnx@plt>
   13200:	mov	r0, #1
   13204:	pop	{r3, r4, r5, pc}
   13208:	push	{r4, r5, r6, r7, lr}
   1320c:	mov	r2, #5
   13210:	sub	sp, sp, #12
   13214:	mov	r6, r0
   13218:	movw	r1, #53936	; 0xd2b0
   1321c:	mov	r0, #0
   13220:	movt	r1, #1
   13224:	movw	r4, #62032	; 0xf250
   13228:	bl	121e8 <dcgettext@plt>
   1322c:	mov	r1, r6
   13230:	bl	12644 <fputs@plt>
   13234:	mov	r2, #5
   13238:	movw	r1, #53948	; 0xd2bc
   1323c:	mov	r0, #0
   13240:	movt	r1, #1
   13244:	movt	r4, #2
   13248:	bl	121e8 <dcgettext@plt>
   1324c:	movw	r3, #63000	; 0xf618
   13250:	movt	r3, #2
   13254:	mov	r1, #1
   13258:	add	r7, r4, #960	; 0x3c0
   1325c:	ldr	r3, [r3]
   13260:	mov	r2, r0
   13264:	mov	r0, r6
   13268:	bl	12440 <__fprintf_chk@plt>
   1326c:	mov	r2, #5
   13270:	movw	r1, #53980	; 0xd2dc
   13274:	mov	r0, #0
   13278:	movt	r1, #1
   1327c:	bl	121e8 <dcgettext@plt>
   13280:	mov	r1, r6
   13284:	bl	12644 <fputs@plt>
   13288:	mov	r2, #5
   1328c:	movw	r1, #53992	; 0xd2e8
   13290:	mov	r0, #0
   13294:	movt	r1, #1
   13298:	bl	121e8 <dcgettext@plt>
   1329c:	mov	r1, r6
   132a0:	bl	12644 <fputs@plt>
   132a4:	mov	r2, #5
   132a8:	movw	r1, #54036	; 0xd314
   132ac:	mov	r0, #0
   132b0:	movt	r1, #1
   132b4:	bl	121e8 <dcgettext@plt>
   132b8:	mov	r1, r6
   132bc:	bl	12644 <fputs@plt>
   132c0:	mov	r2, #5
   132c4:	movw	r1, #54116	; 0xd364
   132c8:	mov	r0, #0
   132cc:	movt	r1, #1
   132d0:	bl	121e8 <dcgettext@plt>
   132d4:	mov	r1, r6
   132d8:	bl	12644 <fputs@plt>
   132dc:	mov	r2, #5
   132e0:	movw	r1, #54172	; 0xd39c
   132e4:	mov	r0, #0
   132e8:	movt	r1, #1
   132ec:	bl	121e8 <dcgettext@plt>
   132f0:	mov	r1, r6
   132f4:	bl	12644 <fputs@plt>
   132f8:	mov	r2, #5
   132fc:	movw	r1, #54224	; 0xd3d0
   13300:	mov	r0, #0
   13304:	movt	r1, #1
   13308:	bl	121e8 <dcgettext@plt>
   1330c:	mov	r1, r6
   13310:	bl	12644 <fputs@plt>
   13314:	mov	r2, #5
   13318:	movw	r1, #54300	; 0xd41c
   1331c:	mov	r0, #0
   13320:	movt	r1, #1
   13324:	bl	121e8 <dcgettext@plt>
   13328:	mov	r1, r6
   1332c:	bl	12644 <fputs@plt>
   13330:	mov	r2, #5
   13334:	movw	r1, #54372	; 0xd464
   13338:	mov	r0, #0
   1333c:	movt	r1, #1
   13340:	bl	121e8 <dcgettext@plt>
   13344:	mov	r1, r6
   13348:	bl	12644 <fputs@plt>
   1334c:	mov	r2, #5
   13350:	movw	r1, #54428	; 0xd49c
   13354:	mov	r0, #0
   13358:	movt	r1, #1
   1335c:	bl	121e8 <dcgettext@plt>
   13360:	mov	r1, r6
   13364:	bl	12644 <fputs@plt>
   13368:	mov	r2, #5
   1336c:	movw	r1, #54476	; 0xd4cc
   13370:	mov	r0, #0
   13374:	movt	r1, #1
   13378:	bl	121e8 <dcgettext@plt>
   1337c:	mov	r1, r6
   13380:	bl	12644 <fputs@plt>
   13384:	mov	r2, #5
   13388:	movw	r1, #54528	; 0xd500
   1338c:	mov	r0, #0
   13390:	movt	r1, #1
   13394:	bl	121e8 <dcgettext@plt>
   13398:	mov	r1, r6
   1339c:	bl	12644 <fputs@plt>
   133a0:	mov	r2, #5
   133a4:	movw	r1, #54584	; 0xd538
   133a8:	mov	r0, #0
   133ac:	movt	r1, #1
   133b0:	bl	121e8 <dcgettext@plt>
   133b4:	mov	r1, r6
   133b8:	bl	12644 <fputs@plt>
   133bc:	mov	r2, #5
   133c0:	movw	r1, #54632	; 0xd568
   133c4:	mov	r0, #0
   133c8:	movt	r1, #1
   133cc:	bl	121e8 <dcgettext@plt>
   133d0:	mov	r1, r6
   133d4:	bl	12644 <fputs@plt>
   133d8:	mov	r2, #5
   133dc:	movw	r1, #54676	; 0xd594
   133e0:	mov	r0, #0
   133e4:	movt	r1, #1
   133e8:	bl	121e8 <dcgettext@plt>
   133ec:	mov	r1, r6
   133f0:	bl	12644 <fputs@plt>
   133f4:	mov	r2, #5
   133f8:	movw	r1, #54716	; 0xd5bc
   133fc:	mov	r0, #0
   13400:	movt	r1, #1
   13404:	bl	121e8 <dcgettext@plt>
   13408:	mov	r1, r6
   1340c:	bl	12644 <fputs@plt>
   13410:	mov	r2, #5
   13414:	movw	r1, #54768	; 0xd5f0
   13418:	mov	r0, #0
   1341c:	movt	r1, #1
   13420:	bl	121e8 <dcgettext@plt>
   13424:	mov	r1, r6
   13428:	bl	12644 <fputs@plt>
   1342c:	mov	r2, #5
   13430:	movw	r1, #54824	; 0xd628
   13434:	mov	r0, #0
   13438:	movt	r1, #1
   1343c:	bl	121e8 <dcgettext@plt>
   13440:	mov	r1, r6
   13444:	bl	12644 <fputs@plt>
   13448:	mov	r2, #5
   1344c:	movw	r1, #54872	; 0xd658
   13450:	mov	r0, #0
   13454:	movt	r1, #1
   13458:	bl	121e8 <dcgettext@plt>
   1345c:	mov	r1, r6
   13460:	bl	12644 <fputs@plt>
   13464:	mov	r2, #5
   13468:	movw	r1, #54916	; 0xd684
   1346c:	mov	r0, #0
   13470:	movt	r1, #1
   13474:	bl	121e8 <dcgettext@plt>
   13478:	mov	r1, r6
   1347c:	bl	12644 <fputs@plt>
   13480:	mov	r2, #5
   13484:	movw	r1, #54968	; 0xd6b8
   13488:	mov	r0, #0
   1348c:	movt	r1, #1
   13490:	bl	121e8 <dcgettext@plt>
   13494:	mov	r1, r6
   13498:	bl	12644 <fputs@plt>
   1349c:	mov	r2, #5
   134a0:	movw	r1, #53976	; 0xd2d8
   134a4:	mov	r0, #0
   134a8:	movt	r1, #1
   134ac:	bl	121e8 <dcgettext@plt>
   134b0:	mov	r1, r6
   134b4:	bl	12644 <fputs@plt>
   134b8:	mov	r2, #5
   134bc:	movw	r1, #55024	; 0xd6f0
   134c0:	mov	r0, #0
   134c4:	movt	r1, #1
   134c8:	bl	121e8 <dcgettext@plt>
   134cc:	mov	r1, r6
   134d0:	bl	12644 <fputs@plt>
   134d4:	mov	r2, #5
   134d8:	movw	r1, #55068	; 0xd71c
   134dc:	mov	r0, #0
   134e0:	movt	r1, #1
   134e4:	bl	121e8 <dcgettext@plt>
   134e8:	mov	r1, r6
   134ec:	bl	12644 <fputs@plt>
   134f0:	mov	r2, #5
   134f4:	movw	r1, #55124	; 0xd754
   134f8:	mov	r0, #0
   134fc:	movt	r1, #1
   13500:	bl	121e8 <dcgettext@plt>
   13504:	mov	r1, #1
   13508:	mov	r2, r0
   1350c:	mov	r0, r6
   13510:	bl	12440 <__fprintf_chk@plt>
   13514:	ldr	r1, [r4, #20]
   13518:	mov	r2, #5
   1351c:	mov	r0, #0
   13520:	ldr	r5, [r4]
   13524:	bl	121e8 <dcgettext@plt>
   13528:	add	r4, r4, #24
   1352c:	movw	r2, #55160	; 0xd778
   13530:	mov	r1, #1
   13534:	mov	r3, r5
   13538:	movt	r2, #1
   1353c:	str	r0, [sp]
   13540:	mov	r0, r6
   13544:	bl	12440 <__fprintf_chk@plt>
   13548:	cmp	r4, r7
   1354c:	bne	13514 <fputs@plt+0xed0>
   13550:	mov	r2, #5
   13554:	movw	r1, #55172	; 0xd784
   13558:	mov	r0, #0
   1355c:	movt	r1, #1
   13560:	bl	121e8 <dcgettext@plt>
   13564:	movw	r3, #55200	; 0xd7a0
   13568:	mov	r1, #1
   1356c:	movt	r3, #1
   13570:	mov	r2, r0
   13574:	mov	r0, r6
   13578:	bl	12440 <__fprintf_chk@plt>
   1357c:	movw	r3, #63028	; 0xf634
   13580:	movt	r3, #2
   13584:	ldr	r0, [r3]
   13588:	subs	r3, r6, r0
   1358c:	rsbs	r0, r3, #0
   13590:	adcs	r0, r0, r3
   13594:	bl	125d8 <exit@plt>
   13598:	push	{r1, r2, r3}
   1359c:	mov	r1, #1
   135a0:	push	{r4, lr}
   135a4:	movw	r4, #63016	; 0xf628
   135a8:	movt	r4, #2
   135ac:	sub	sp, sp, #12
   135b0:	add	ip, sp, #24
   135b4:	ldr	lr, [r4]
   135b8:	ldr	r2, [sp, #20]
   135bc:	mov	r3, ip
   135c0:	str	ip, [sp]
   135c4:	str	lr, [sp, #4]
   135c8:	bl	125f0 <__vasprintf_chk@plt>
   135cc:	cmp	r0, #0
   135d0:	blt	135f8 <fputs@plt+0xfb4>
   135d4:	ldr	r2, [sp, #4]
   135d8:	ldr	r3, [r4]
   135dc:	cmp	r2, r3
   135e0:	bne	135f4 <fputs@plt+0xfb0>
   135e4:	add	sp, sp, #12
   135e8:	pop	{r4, lr}
   135ec:	add	sp, sp, #12
   135f0:	bx	lr
   135f4:	bl	12434 <__stack_chk_fail@plt>
   135f8:	movw	r1, #55212	; 0xd7ac
   135fc:	mov	r0, #1
   13600:	movt	r1, #1
   13604:	bl	12020 <err@plt>
   13608:	push	{r4, lr}
   1360c:	subs	r4, r0, #0
   13610:	popeq	{r4, pc}
   13614:	ldr	r0, [r4, #112]	; 0x70
   13618:	bl	121b8 <free@plt>
   1361c:	ldr	r0, [r4, #116]	; 0x74
   13620:	bl	121b8 <free@plt>
   13624:	ldr	r0, [r4, #120]	; 0x78
   13628:	bl	121b8 <free@plt>
   1362c:	ldr	r0, [r4, #176]	; 0xb0
   13630:	bl	121b8 <free@plt>
   13634:	ldr	r0, [r4, #180]	; 0xb4
   13638:	bl	121b8 <free@plt>
   1363c:	ldr	r0, [r4, #184]	; 0xb8
   13640:	bl	121b8 <free@plt>
   13644:	ldr	r0, [r4, #188]	; 0xbc
   13648:	bl	121b8 <free@plt>
   1364c:	ldr	r0, [r4, #192]	; 0xc0
   13650:	bl	121b8 <free@plt>
   13654:	ldr	r0, [r4, #196]	; 0xc4
   13658:	bl	121b8 <free@plt>
   1365c:	ldr	r0, [r4, #200]	; 0xc8
   13660:	bl	121b8 <free@plt>
   13664:	add	r0, r4, #128	; 0x80
   13668:	bl	18a08 <fputs@plt+0x63c4>
   1366c:	mov	r0, r4
   13670:	mov	r1, #0
   13674:	mov	r2, #240	; 0xf0
   13678:	pop	{r4, lr}
   1367c:	b	12104 <memset@plt>
   13680:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   13684:	mov	r4, #0
   13688:	movw	r8, #62032	; 0xf250
   1368c:	movt	r8, #2
   13690:	mov	r9, r0
   13694:	mov	r7, r1
   13698:	mov	r6, r4
   1369c:	ldr	r5, [r8, r4]
   136a0:	mov	r0, r9
   136a4:	mov	r2, r7
   136a8:	add	r4, r4, #24
   136ac:	mov	r1, r5
   136b0:	bl	123e0 <strncasecmp@plt>
   136b4:	cmp	r0, #0
   136b8:	bne	136c8 <fputs@plt+0x1084>
   136bc:	ldrsb	r3, [r5, r7]
   136c0:	cmp	r3, #0
   136c4:	beq	136f8 <fputs@plt+0x10b4>
   136c8:	cmp	r4, #960	; 0x3c0
   136cc:	add	r6, r6, #1
   136d0:	bne	1369c <fputs@plt+0x1058>
   136d4:	mov	r2, #5
   136d8:	movw	r1, #55236	; 0xd7c4
   136dc:	mov	r0, #0
   136e0:	movt	r1, #1
   136e4:	bl	121e8 <dcgettext@plt>
   136e8:	mov	r1, r9
   136ec:	bl	1250c <warnx@plt>
   136f0:	mvn	r0, #0
   136f4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   136f8:	mov	r0, r6
   136fc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13700:	push	{r3, lr}
   13704:	movw	r3, #63040	; 0xf640
   13708:	movt	r3, #2
   1370c:	ldr	r2, [r3]
   13710:	cmp	r2, r0
   13714:	ble	13748 <fputs@plt+0x1104>
   13718:	add	r3, r3, r0, lsl #2
   1371c:	ldr	r0, [r3, #4]
   13720:	cmp	r0, #39	; 0x27
   13724:	pople	{r3, pc}
   13728:	movw	r0, #55292	; 0xd7fc
   1372c:	movw	r1, #55272	; 0xd7e8
   13730:	movw	r3, #53252	; 0xd004
   13734:	movt	r0, #1
   13738:	movt	r1, #1
   1373c:	movw	r2, #261	; 0x105
   13740:	movt	r3, #1
   13744:	bl	12164 <__assert_fail@plt>
   13748:	movw	r0, #55256	; 0xd7d8
   1374c:	movw	r1, #55272	; 0xd7e8
   13750:	movw	r3, #53252	; 0xd004
   13754:	movt	r0, #1
   13758:	movt	r1, #1
   1375c:	mov	r2, #260	; 0x104
   13760:	movt	r3, #1
   13764:	bl	12164 <__assert_fail@plt>
   13768:	push	{r4, lr}
   1376c:	subs	r4, r0, #0
   13770:	beq	137c4 <fputs@plt+0x1180>
   13774:	mov	r0, r4
   13778:	bl	124f4 <readdir64@plt>
   1377c:	cmp	r0, #0
   13780:	beq	137c0 <fputs@plt+0x117c>
   13784:	ldrb	r2, [r0, #19]
   13788:	cmp	r2, #46	; 0x2e
   1378c:	popne	{r4, pc}
   13790:	ldrb	r2, [r0, #20]
   13794:	cmp	r2, #0
   13798:	beq	13774 <fputs@plt+0x1130>
   1379c:	cmp	r2, #46	; 0x2e
   137a0:	popne	{r4, pc}
   137a4:	ldrb	r2, [r0, #21]
   137a8:	cmp	r2, #0
   137ac:	popne	{r4, pc}
   137b0:	mov	r0, r4
   137b4:	bl	124f4 <readdir64@plt>
   137b8:	cmp	r0, #0
   137bc:	bne	13784 <fputs@plt+0x1140>
   137c0:	pop	{r4, pc}
   137c4:	movw	r0, #55480	; 0xd8b8
   137c8:	movw	r1, #55272	; 0xd7e8
   137cc:	movt	r0, #1
   137d0:	movt	r1, #1
   137d4:	movw	r2, #313	; 0x139
   137d8:	ldr	r3, [pc]	; 137e0 <fputs@plt+0x119c>
   137dc:	bl	12164 <__assert_fail@plt>
   137e0:	andeq	sp, r1, r4, lsl r0
   137e4:	movw	r3, #63024	; 0xf630
   137e8:	movt	r3, #2
   137ec:	push	{r4, r5, r6, lr}
   137f0:	ldr	r4, [r3]
   137f4:	mov	r0, r4
   137f8:	bl	120e0 <__fpending@plt>
   137fc:	mov	r6, r0
   13800:	mov	r0, r4
   13804:	bl	12578 <ferror@plt>
   13808:	mov	r5, r0
   1380c:	mov	r0, r4
   13810:	bl	12080 <fclose@plt>
   13814:	adds	r4, r0, #0
   13818:	movne	r4, #1
   1381c:	cmp	r5, #0
   13820:	bne	13898 <fputs@plt+0x1254>
   13824:	cmp	r4, #0
   13828:	beq	13844 <fputs@plt+0x1200>
   1382c:	cmp	r6, #0
   13830:	beq	138e8 <fputs@plt+0x12a4>
   13834:	bl	125fc <__errno_location@plt>
   13838:	ldr	r3, [r0]
   1383c:	cmp	r3, #32
   13840:	bne	138fc <fputs@plt+0x12b8>
   13844:	movw	r3, #63028	; 0xf634
   13848:	movt	r3, #2
   1384c:	ldr	r4, [r3]
   13850:	mov	r0, r4
   13854:	bl	120e0 <__fpending@plt>
   13858:	mov	r6, r0
   1385c:	mov	r0, r4
   13860:	bl	12578 <ferror@plt>
   13864:	mov	r5, r0
   13868:	mov	r0, r4
   1386c:	bl	12080 <fclose@plt>
   13870:	adds	r4, r0, #0
   13874:	movne	r4, #1
   13878:	cmp	r5, #0
   1387c:	beq	138c4 <fputs@plt+0x1280>
   13880:	cmp	r4, #0
   13884:	bne	13890 <fputs@plt+0x124c>
   13888:	bl	125fc <__errno_location@plt>
   1388c:	str	r4, [r0]
   13890:	mov	r0, #1
   13894:	bl	12194 <_exit@plt>
   13898:	cmp	r4, #0
   1389c:	bne	13834 <fputs@plt+0x11f0>
   138a0:	bl	125fc <__errno_location@plt>
   138a4:	str	r4, [r0]
   138a8:	mov	r2, #5
   138ac:	movw	r1, #55484	; 0xd8bc
   138b0:	mov	r0, #0
   138b4:	movt	r1, #1
   138b8:	bl	121e8 <dcgettext@plt>
   138bc:	bl	1250c <warnx@plt>
   138c0:	b	13890 <fputs@plt+0x124c>
   138c4:	cmp	r4, #0
   138c8:	popeq	{r4, r5, r6, pc}
   138cc:	cmp	r6, #0
   138d0:	bne	13890 <fputs@plt+0x124c>
   138d4:	bl	125fc <__errno_location@plt>
   138d8:	ldr	r3, [r0]
   138dc:	cmp	r3, #9
   138e0:	bne	13890 <fputs@plt+0x124c>
   138e4:	pop	{r4, r5, r6, pc}
   138e8:	bl	125fc <__errno_location@plt>
   138ec:	ldr	r3, [r0]
   138f0:	cmp	r3, #9
   138f4:	bne	1383c <fputs@plt+0x11f8>
   138f8:	b	13844 <fputs@plt+0x1200>
   138fc:	cmp	r3, #0
   13900:	beq	138a8 <fputs@plt+0x1264>
   13904:	mov	r2, #5
   13908:	movw	r1, #55484	; 0xd8bc
   1390c:	mov	r0, #0
   13910:	movt	r1, #1
   13914:	bl	121e8 <dcgettext@plt>
   13918:	bl	123d4 <warn@plt>
   1391c:	b	13890 <fputs@plt+0x124c>
   13920:	push	{r4, r5, lr}
   13924:	movw	r4, #63016	; 0xf628
   13928:	movt	r4, #2
   1392c:	sub	sp, sp, #4096	; 0x1000
   13930:	sub	sp, sp, #20
   13934:	cmp	r0, #0
   13938:	ldr	r3, [r4]
   1393c:	add	r2, sp, #8192	; 0x2000
   13940:	str	r3, [r2, #-4084]	; 0xfffff00c
   13944:	beq	139f0 <fputs@plt+0x13ac>
   13948:	ldr	r5, [r0, #112]	; 0x70
   1394c:	cmp	r5, #0
   13950:	beq	139d4 <fputs@plt+0x1390>
   13954:	movw	r1, #55512	; 0xd8d8
   13958:	mov	r0, r5
   1395c:	movt	r1, #1
   13960:	mov	r2, #3
   13964:	bl	1256c <strncmp@plt>
   13968:	cmp	r0, #0
   1396c:	beq	139c4 <fputs@plt+0x1380>
   13970:	mov	r1, #4096	; 0x1000
   13974:	mov	r2, #1
   13978:	mov	r3, r1
   1397c:	str	r5, [sp, #4]
   13980:	movw	ip, #55516	; 0xd8dc
   13984:	add	r0, sp, #12
   13988:	movt	ip, #1
   1398c:	str	ip, [sp]
   13990:	bl	12368 <__snprintf_chk@plt>
   13994:	add	r0, sp, #12
   13998:	bl	1259c <__strdup@plt>
   1399c:	cmp	r0, #0
   139a0:	beq	13a0c <fputs@plt+0x13c8>
   139a4:	add	r3, sp, #8192	; 0x2000
   139a8:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   139ac:	ldr	r3, [r4]
   139b0:	cmp	r2, r3
   139b4:	bne	139d0 <fputs@plt+0x138c>
   139b8:	add	sp, sp, #4096	; 0x1000
   139bc:	add	sp, sp, #20
   139c0:	pop	{r4, r5, pc}
   139c4:	mov	r0, r5
   139c8:	bl	1657c <fputs@plt+0x3f38>
   139cc:	b	139a4 <fputs@plt+0x1360>
   139d0:	bl	12434 <__stack_chk_fail@plt>
   139d4:	movw	r0, #55500	; 0xd8cc
   139d8:	movw	r1, #55272	; 0xd7e8
   139dc:	movt	r0, #1
   139e0:	movt	r1, #1
   139e4:	movw	r2, #331	; 0x14b
   139e8:	ldr	r3, [pc, #32]	; 13a10 <fputs@plt+0x13cc>
   139ec:	bl	12164 <__assert_fail@plt>
   139f0:	movw	r0, #55496	; 0xd8c8
   139f4:	movw	r1, #55272	; 0xd7e8
   139f8:	movt	r0, #1
   139fc:	movt	r1, #1
   13a00:	movw	r2, #330	; 0x14a
   13a04:	ldr	r3, [pc, #4]	; 13a10 <fputs@plt+0x13cc>
   13a08:	bl	12164 <__assert_fail@plt>
   13a0c:	bl	12650 <fputs@plt+0xc>
   13a10:	andeq	sp, r1, r0, lsr #32
   13a14:	push	{r4, lr}
   13a18:	movw	r4, #63016	; 0xf628
   13a1c:	movt	r4, #2
   13a20:	sub	sp, sp, #8
   13a24:	subs	r2, r0, #0
   13a28:	ldr	r3, [r4]
   13a2c:	str	r3, [sp, #4]
   13a30:	beq	13a88 <fputs@plt+0x1444>
   13a34:	movw	r3, #63040	; 0xf640
   13a38:	movt	r3, #2
   13a3c:	ldr	r3, [r3, #164]	; 0xa4
   13a40:	ldrb	r3, [r3, #4]
   13a44:	tst	r3, #32
   13a48:	beq	13a78 <fputs@plt+0x1434>
   13a4c:	movw	r1, #55516	; 0xd8dc
   13a50:	mov	r0, sp
   13a54:	movt	r1, #1
   13a58:	bl	13598 <fputs@plt+0xf54>
   13a5c:	ldr	r0, [sp]
   13a60:	ldr	r1, [sp, #4]
   13a64:	ldr	r3, [r4]
   13a68:	cmp	r1, r3
   13a6c:	bne	13a90 <fputs@plt+0x144c>
   13a70:	add	sp, sp, #8
   13a74:	pop	{r4, pc}
   13a78:	bl	1259c <__strdup@plt>
   13a7c:	cmp	r0, #0
   13a80:	bne	13a60 <fputs@plt+0x141c>
   13a84:	bl	12650 <fputs@plt+0xc>
   13a88:	mov	r0, r2
   13a8c:	b	13a60 <fputs@plt+0x141c>
   13a90:	bl	12434 <__stack_chk_fail@plt>
   13a94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a98:	subs	r7, r3, #0
   13a9c:	sub	sp, sp, #20
   13aa0:	mov	r4, r0
   13aa4:	mov	r8, r1
   13aa8:	str	r1, [r4]
   13aac:	str	r2, [sp, #12]
   13ab0:	mov	r0, r7
   13ab4:	beq	13ac4 <fputs@plt+0x1480>
   13ab8:	bl	1259c <__strdup@plt>
   13abc:	cmp	r0, #0
   13ac0:	beq	13d5c <fputs@plt+0x1718>
   13ac4:	ldr	r3, [sp, #12]
   13ac8:	str	r0, [r4, #112]	; 0x70
   13acc:	mov	r0, r4
   13ad0:	adds	r9, r3, #0
   13ad4:	movne	r9, #1
   13ad8:	str	r9, [r4, #168]	; 0xa8
   13adc:	bl	13920 <fputs@plt+0x12dc>
   13ae0:	cmp	r0, #0
   13ae4:	mov	r3, r0
   13ae8:	str	r0, [r4, #120]	; 0x78
   13aec:	beq	13d1c <fputs@plt+0x16d8>
   13af0:	cmp	r9, #0
   13af4:	mov	r0, r7
   13af8:	ldrne	r3, [sp, #12]
   13afc:	moveq	r1, r9
   13b00:	ldrne	r1, [r3, #112]	; 0x70
   13b04:	bl	187c0 <fputs@plt+0x617c>
   13b08:	mov	fp, r1
   13b0c:	mov	sl, r0
   13b10:	orrs	r1, sl, fp
   13b14:	movweq	r1, #55556	; 0xd904
   13b18:	moveq	r0, #0
   13b1c:	movteq	r1, #1
   13b20:	beq	13d04 <fputs@plt+0x16c0>
   13b24:	movw	r6, #63040	; 0xf640
   13b28:	movt	r6, #2
   13b2c:	ldr	r3, [r6, #164]	; 0xa4
   13b30:	ldrb	r3, [r3, #4]
   13b34:	tst	r3, #4
   13b38:	bne	13cc0 <fputs@plt+0x167c>
   13b3c:	add	r5, r4, #128	; 0x80
   13b40:	cmp	r8, #0
   13b44:	addne	r8, r8, #128	; 0x80
   13b48:	mov	r2, sl
   13b4c:	str	r8, [sp]
   13b50:	mov	r0, r5
   13b54:	mov	r3, fp
   13b58:	bl	18a48 <fputs@plt+0x6404>
   13b5c:	cmp	r0, #0
   13b60:	bne	13cf8 <fputs@plt+0x16b4>
   13b64:	lsr	r3, sl, #12
   13b68:	bic	r1, fp, #4080	; 0xff0
   13b6c:	orr	r3, r3, fp, lsl #20
   13b70:	uxtb	ip, sl
   13b74:	ubfx	r0, sl, #8, #12
   13b78:	mov	r2, r4
   13b7c:	bic	r3, r3, #255	; 0xff
   13b80:	bic	r1, r1, #15
   13b84:	orr	r1, r1, r0
   13b88:	orr	r3, r3, ip
   13b8c:	str	r1, [r4, #216]	; 0xd8
   13b90:	mov	r8, #0
   13b94:	str	r3, [r4, #220]	; 0xdc
   13b98:	mov	r9, #0
   13b9c:	movw	r1, #58248	; 0xe388
   13ba0:	strd	r8, [r2, #232]!	; 0xe8
   13ba4:	movt	r1, #1
   13ba8:	mov	r0, r5
   13bac:	bl	18fbc <fputs@plt+0x6978>
   13bb0:	cmp	r0, #0
   13bb4:	bne	13bd4 <fputs@plt+0x1590>
   13bb8:	ldr	r3, [r4, #236]	; 0xec
   13bbc:	ldr	r2, [r4, #232]	; 0xe8
   13bc0:	lsl	r3, r3, #9
   13bc4:	orr	r3, r3, r2, lsr #23
   13bc8:	lsl	r2, r2, #9
   13bcc:	str	r3, [r4, #236]	; 0xec
   13bd0:	str	r2, [r4, #232]	; 0xe8
   13bd4:	movw	r1, #55620	; 0xd944
   13bd8:	mov	r0, r5
   13bdc:	movt	r1, #1
   13be0:	add	r2, r4, #224	; 0xe0
   13be4:	bl	19054 <fputs@plt+0x6a10>
   13be8:	cmp	r0, #0
   13bec:	movne	r3, #0
   13bf0:	strne	r3, [r4, #224]	; 0xe0
   13bf4:	ldr	r3, [r6, #164]	; 0xa4
   13bf8:	ldrb	r3, [r3, #4]
   13bfc:	tst	r3, #1
   13c00:	bne	13c10 <fputs@plt+0x15cc>
   13c04:	ldrd	r2, [r4, #232]	; 0xe8
   13c08:	orrs	r1, r2, r3
   13c0c:	beq	13d14 <fputs@plt+0x16d0>
   13c10:	movw	r1, #55512	; 0xd8d8
   13c14:	mov	r0, r7
   13c18:	movt	r1, #1
   13c1c:	mov	r2, #3
   13c20:	bl	1256c <strncmp@plt>
   13c24:	cmp	r0, #0
   13c28:	bne	13c48 <fputs@plt+0x1604>
   13c2c:	movw	r1, #55648	; 0xd960
   13c30:	mov	r0, r5
   13c34:	movt	r1, #1
   13c38:	bl	194d0 <fputs@plt+0x6e8c>
   13c3c:	cmp	r0, #0
   13c40:	str	r0, [r4, #116]	; 0x74
   13c44:	beq	13d3c <fputs@plt+0x16f8>
   13c48:	mov	r1, r7
   13c4c:	mov	r0, r5
   13c50:	bl	1958c <fputs@plt+0x6f48>
   13c54:	movw	r1, #55684	; 0xd984
   13c58:	movt	r1, #1
   13c5c:	str	r0, [r4, #204]	; 0xcc
   13c60:	mov	r0, r5
   13c64:	bl	19548 <fputs@plt+0x6f04>
   13c68:	movw	r1, #55692	; 0xd98c
   13c6c:	movt	r1, #1
   13c70:	str	r0, [r4, #208]	; 0xd0
   13c74:	mov	r0, r5
   13c78:	bl	19548 <fputs@plt+0x6f04>
   13c7c:	ldr	r3, [r6, #164]	; 0xa4
   13c80:	ldrb	r3, [r3, #4]
   13c84:	ubfx	r3, r3, #4, #1
   13c88:	cmp	r3, #0
   13c8c:	str	r0, [r4, #212]	; 0xd4
   13c90:	moveq	r0, r3
   13c94:	beq	13cb8 <fputs@plt+0x1674>
   13c98:	mov	r3, #0
   13c9c:	mov	r0, r5
   13ca0:	mov	r1, r3
   13ca4:	str	r3, [sp]
   13ca8:	mov	r2, r3
   13cac:	bl	19c2c <fputs@plt+0x75e8>
   13cb0:	subs	r0, r0, #0
   13cb4:	mvnne	r0, #0
   13cb8:	add	sp, sp, #20
   13cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cc0:	cmp	r9, #0
   13cc4:	add	r5, r4, #128	; 0x80
   13cc8:	mov	r2, sl
   13ccc:	ldrne	r3, [sp, #12]
   13cd0:	mov	r0, r5
   13cd4:	addne	r9, r3, #128	; 0x80
   13cd8:	mov	r3, fp
   13cdc:	str	r9, [sp]
   13ce0:	bl	18a48 <fputs@plt+0x6404>
   13ce4:	cmp	r0, #0
   13ce8:	bne	13cf8 <fputs@plt+0x16b4>
   13cec:	cmp	r8, #0
   13cf0:	strne	r5, [r8, #144]	; 0x90
   13cf4:	b	13b64 <fputs@plt+0x1520>
   13cf8:	movw	r1, #55580	; 0xd91c
   13cfc:	movt	r1, #1
   13d00:	mov	r0, #0
   13d04:	mov	r2, #5
   13d08:	bl	121e8 <dcgettext@plt>
   13d0c:	mov	r1, r7
   13d10:	bl	1250c <warnx@plt>
   13d14:	mvn	r0, #0
   13d18:	b	13cb8 <fputs@plt+0x1674>
   13d1c:	mov	r2, #5
   13d20:	movw	r1, #55524	; 0xd8e4
   13d24:	movt	r1, #1
   13d28:	bl	121e8 <dcgettext@plt>
   13d2c:	mov	r1, r7
   13d30:	bl	1250c <warnx@plt>
   13d34:	mvn	r0, #0
   13d38:	b	13cb8 <fputs@plt+0x1674>
   13d3c:	mov	r2, #5
   13d40:	movw	r1, #55656	; 0xd968
   13d44:	movt	r1, #1
   13d48:	bl	121e8 <dcgettext@plt>
   13d4c:	mov	r1, r7
   13d50:	bl	1250c <warnx@plt>
   13d54:	mvn	r0, #0
   13d58:	b	13cb8 <fputs@plt+0x1674>
   13d5c:	bl	12650 <fputs@plt+0xc>
   13d60:	push	{r4, r5, r6, lr}
   13d64:	movw	r5, #63040	; 0xf640
   13d68:	movt	r5, #2
   13d6c:	mov	r4, r0
   13d70:	ldr	r0, [r5, #168]	; 0xa8
   13d74:	cmp	r0, #0
   13d78:	beq	13f0c <fputs@plt+0x18c8>
   13d7c:	movw	r1, #55700	; 0xd994
   13d80:	ldr	r2, [r4, #112]	; 0x70
   13d84:	movt	r1, #1
   13d88:	bl	123bc <udev_device_new_from_subsystem_sysname@plt>
   13d8c:	subs	r5, r0, #0
   13d90:	beq	13efc <fputs@plt+0x18b8>
   13d94:	movw	r1, #55708	; 0xd99c
   13d98:	movt	r1, #1
   13d9c:	bl	12044 <udev_device_get_property_value@plt>
   13da0:	cmp	r0, #0
   13da4:	beq	13dcc <fputs@plt+0x1788>
   13da8:	bl	1259c <__strdup@plt>
   13dac:	subs	r6, r0, #0
   13db0:	beq	13f24 <fputs@plt+0x18e0>
   13db4:	str	r6, [r4, #184]	; 0xb8
   13db8:	bl	1226c <strlen@plt>
   13dbc:	mov	r1, r6
   13dc0:	add	r2, r0, #1
   13dc4:	mov	r0, r6
   13dc8:	bl	16a7c <fputs@plt+0x4438>
   13dcc:	movw	r1, #55724	; 0xd9ac
   13dd0:	mov	r0, r5
   13dd4:	movt	r1, #1
   13dd8:	bl	12044 <udev_device_get_property_value@plt>
   13ddc:	cmp	r0, #0
   13de0:	beq	13e08 <fputs@plt+0x17c4>
   13de4:	bl	1259c <__strdup@plt>
   13de8:	subs	r6, r0, #0
   13dec:	beq	13f24 <fputs@plt+0x18e0>
   13df0:	str	r6, [r4, #180]	; 0xb4
   13df4:	bl	1226c <strlen@plt>
   13df8:	mov	r1, r6
   13dfc:	add	r2, r0, #1
   13e00:	mov	r0, r6
   13e04:	bl	16a7c <fputs@plt+0x4438>
   13e08:	movw	r1, #55740	; 0xd9bc
   13e0c:	mov	r0, r5
   13e10:	movt	r1, #1
   13e14:	bl	12044 <udev_device_get_property_value@plt>
   13e18:	cmp	r0, #0
   13e1c:	beq	13e44 <fputs@plt+0x1800>
   13e20:	bl	1259c <__strdup@plt>
   13e24:	subs	r6, r0, #0
   13e28:	beq	13f24 <fputs@plt+0x18e0>
   13e2c:	str	r6, [r4, #192]	; 0xc0
   13e30:	bl	1226c <strlen@plt>
   13e34:	mov	r1, r6
   13e38:	add	r2, r0, #1
   13e3c:	mov	r0, r6
   13e40:	bl	16a7c <fputs@plt+0x4438>
   13e44:	movw	r1, #55760	; 0xd9d0
   13e48:	mov	r0, r5
   13e4c:	movt	r1, #1
   13e50:	bl	12044 <udev_device_get_property_value@plt>
   13e54:	cmp	r0, #0
   13e58:	beq	13e6c <fputs@plt+0x1828>
   13e5c:	bl	1259c <__strdup@plt>
   13e60:	cmp	r0, #0
   13e64:	beq	13f24 <fputs@plt+0x18e0>
   13e68:	str	r0, [r4, #176]	; 0xb0
   13e6c:	movw	r1, #55772	; 0xd9dc
   13e70:	mov	r0, r5
   13e74:	movt	r1, #1
   13e78:	bl	12044 <udev_device_get_property_value@plt>
   13e7c:	cmp	r0, #0
   13e80:	beq	13e94 <fputs@plt+0x1850>
   13e84:	bl	1259c <__strdup@plt>
   13e88:	cmp	r0, #0
   13e8c:	beq	13f24 <fputs@plt+0x18e0>
   13e90:	str	r0, [r4, #188]	; 0xbc
   13e94:	movw	r1, #55792	; 0xd9f0
   13e98:	mov	r0, r5
   13e9c:	movt	r1, #1
   13ea0:	bl	12044 <udev_device_get_property_value@plt>
   13ea4:	cmp	r0, #0
   13ea8:	beq	13ebc <fputs@plt+0x1878>
   13eac:	bl	1259c <__strdup@plt>
   13eb0:	cmp	r0, #0
   13eb4:	beq	13f24 <fputs@plt+0x18e0>
   13eb8:	str	r0, [r4, #196]	; 0xc4
   13ebc:	movw	r1, #55800	; 0xd9f8
   13ec0:	mov	r0, r5
   13ec4:	movt	r1, #1
   13ec8:	bl	12044 <udev_device_get_property_value@plt>
   13ecc:	cmp	r0, #0
   13ed0:	beq	13ee4 <fputs@plt+0x18a0>
   13ed4:	bl	1259c <__strdup@plt>
   13ed8:	cmp	r0, #0
   13edc:	beq	13f24 <fputs@plt+0x18e0>
   13ee0:	str	r0, [r4, #200]	; 0xc8
   13ee4:	mov	r0, r5
   13ee8:	bl	122fc <udev_device_unref@plt>
   13eec:	mov	r3, #1
   13ef0:	mov	r0, #0
   13ef4:	str	r3, [r4, #172]	; 0xac
   13ef8:	pop	{r4, r5, r6, pc}
   13efc:	ldr	r0, [r4, #172]	; 0xac
   13f00:	subs	r0, r0, #1
   13f04:	mvnne	r0, #0
   13f08:	pop	{r4, r5, r6, pc}
   13f0c:	bl	121a0 <udev_new@plt>
   13f10:	cmp	r0, #0
   13f14:	str	r0, [r5, #168]	; 0xa8
   13f18:	bne	13d7c <fputs@plt+0x1738>
   13f1c:	mvn	r0, #0
   13f20:	pop	{r4, r5, r6, pc}
   13f24:	bl	12650 <fputs@plt+0xc>
   13f28:	push	{r4, r5, r6, r7, lr}
   13f2c:	movw	r4, #63016	; 0xf628
   13f30:	movt	r4, #2
   13f34:	ldr	r2, [r0, #172]	; 0xac
   13f38:	sub	sp, sp, #12
   13f3c:	mov	r5, r0
   13f40:	ldr	r3, [r4]
   13f44:	cmp	r2, #0
   13f48:	str	r3, [sp, #4]
   13f4c:	bne	13fd0 <fputs@plt+0x198c>
   13f50:	ldrd	r2, [r0, #232]	; 0xe8
   13f54:	orrs	r1, r2, r3
   13f58:	beq	13fd0 <fputs@plt+0x198c>
   13f5c:	bl	13d60 <fputs@plt+0x171c>
   13f60:	cmp	r0, #0
   13f64:	beq	13fd0 <fputs@plt+0x198c>
   13f68:	mov	r6, #1
   13f6c:	str	r6, [r5, #172]	; 0xac
   13f70:	bl	121ac <getuid@plt>
   13f74:	cmp	r0, #0
   13f78:	bne	13fd0 <fputs@plt+0x198c>
   13f7c:	ldr	r0, [r5, #120]	; 0x78
   13f80:	bl	12608 <blkid_new_probe_from_filename@plt>
   13f84:	subs	r7, r0, #0
   13f88:	beq	13fd0 <fputs@plt+0x198c>
   13f8c:	mov	r1, r6
   13f90:	bl	12524 <blkid_probe_enable_superblocks@plt>
   13f94:	mov	r1, #42	; 0x2a
   13f98:	mov	r0, r7
   13f9c:	bl	1205c <blkid_probe_set_superblocks_flags@plt>
   13fa0:	mov	r1, r6
   13fa4:	mov	r0, r7
   13fa8:	bl	125e4 <blkid_probe_enable_partitions@plt>
   13fac:	mov	r1, #4
   13fb0:	mov	r0, r7
   13fb4:	bl	11ff0 <blkid_probe_set_partitions_flags@plt>
   13fb8:	mov	r0, r7
   13fbc:	bl	12224 <blkid_do_safeprobe@plt>
   13fc0:	cmp	r0, #0
   13fc4:	beq	13fe8 <fputs@plt+0x19a4>
   13fc8:	mov	r0, r7
   13fcc:	bl	11fd8 <blkid_free_probe@plt>
   13fd0:	ldr	r2, [sp, #4]
   13fd4:	ldr	r3, [r4]
   13fd8:	cmp	r2, r3
   13fdc:	bne	14130 <fputs@plt+0x1aec>
   13fe0:	add	sp, sp, #12
   13fe4:	pop	{r4, r5, r6, r7, pc}
   13fe8:	add	r6, sp, #8
   13fec:	mov	r3, r0
   13ff0:	movw	r1, #55816	; 0xda08
   13ff4:	mov	r2, sp
   13ff8:	str	r0, [r6, #-8]!
   13ffc:	movt	r1, #1
   14000:	mov	r0, r7
   14004:	bl	122e4 <blkid_probe_lookup_value@plt>
   14008:	cmp	r0, #0
   1400c:	beq	14110 <fputs@plt+0x1acc>
   14010:	movw	r1, #57900	; 0xe22c
   14014:	mov	r0, r7
   14018:	movt	r1, #1
   1401c:	mov	r2, sp
   14020:	mov	r3, #0
   14024:	bl	122e4 <blkid_probe_lookup_value@plt>
   14028:	cmp	r0, #0
   1402c:	beq	140f0 <fputs@plt+0x1aac>
   14030:	movw	r1, #57872	; 0xe210
   14034:	mov	r0, r7
   14038:	movt	r1, #1
   1403c:	mov	r2, sp
   14040:	mov	r3, #0
   14044:	bl	122e4 <blkid_probe_lookup_value@plt>
   14048:	cmp	r0, #0
   1404c:	beq	140d0 <fputs@plt+0x1a8c>
   14050:	movw	r1, #55824	; 0xda10
   14054:	mov	r0, r7
   14058:	movt	r1, #1
   1405c:	mov	r2, sp
   14060:	mov	r3, #0
   14064:	bl	122e4 <blkid_probe_lookup_value@plt>
   14068:	cmp	r0, #0
   1406c:	beq	140b0 <fputs@plt+0x1a6c>
   14070:	mov	r2, sp
   14074:	movw	r1, #55840	; 0xda20
   14078:	mov	r0, r7
   1407c:	movt	r1, #1
   14080:	mov	r3, #0
   14084:	bl	122e4 <blkid_probe_lookup_value@plt>
   14088:	cmp	r0, #0
   1408c:	bne	13fc8 <fputs@plt+0x1984>
   14090:	ldr	r0, [sp]
   14094:	cmp	r0, #0
   14098:	beq	140a8 <fputs@plt+0x1a64>
   1409c:	bl	1259c <__strdup@plt>
   140a0:	cmp	r0, #0
   140a4:	beq	14134 <fputs@plt+0x1af0>
   140a8:	str	r0, [r5, #192]	; 0xc0
   140ac:	b	13fc8 <fputs@plt+0x1984>
   140b0:	ldr	r0, [sp]
   140b4:	cmp	r0, #0
   140b8:	beq	140c8 <fputs@plt+0x1a84>
   140bc:	bl	1259c <__strdup@plt>
   140c0:	cmp	r0, #0
   140c4:	beq	14134 <fputs@plt+0x1af0>
   140c8:	str	r0, [r5, #188]	; 0xbc
   140cc:	b	14070 <fputs@plt+0x1a2c>
   140d0:	ldr	r0, [sp]
   140d4:	cmp	r0, #0
   140d8:	beq	140e8 <fputs@plt+0x1aa4>
   140dc:	bl	1259c <__strdup@plt>
   140e0:	cmp	r0, #0
   140e4:	beq	14134 <fputs@plt+0x1af0>
   140e8:	str	r0, [r5, #184]	; 0xb8
   140ec:	b	14050 <fputs@plt+0x1a0c>
   140f0:	ldr	r0, [sp]
   140f4:	cmp	r0, #0
   140f8:	beq	14108 <fputs@plt+0x1ac4>
   140fc:	bl	1259c <__strdup@plt>
   14100:	cmp	r0, #0
   14104:	beq	14134 <fputs@plt+0x1af0>
   14108:	str	r0, [r5, #180]	; 0xb4
   1410c:	b	14030 <fputs@plt+0x19ec>
   14110:	ldr	r0, [sp]
   14114:	cmp	r0, #0
   14118:	beq	14128 <fputs@plt+0x1ae4>
   1411c:	bl	1259c <__strdup@plt>
   14120:	cmp	r0, #0
   14124:	beq	14134 <fputs@plt+0x1af0>
   14128:	str	r0, [r5, #176]	; 0xb0
   1412c:	b	14010 <fputs@plt+0x19cc>
   14130:	bl	12434 <__stack_chk_fail@plt>
   14134:	bl	12650 <fputs@plt+0xc>
   14138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1413c:	movw	r7, #63040	; 0xf640
   14140:	movt	r7, #2
   14144:	movw	r8, #63016	; 0xf628
   14148:	movt	r8, #2
   1414c:	sub	sp, sp, #84	; 0x54
   14150:	ldr	r2, [r7, #164]	; 0xa4
   14154:	mov	r5, r0
   14158:	ldr	r3, [r8]
   1415c:	ldr	r0, [r2]
   14160:	str	r3, [sp, #76]	; 0x4c
   14164:	bl	1a784 <fputs@plt+0x8140>
   14168:	cmp	r0, #0
   1416c:	mov	r6, r0
   14170:	str	r0, [r5, #4]
   14174:	beq	14314 <fputs@plt+0x1cd0>
   14178:	ldr	r3, [r7]
   1417c:	cmp	r3, #0
   14180:	ble	14314 <fputs@plt+0x1cd0>
   14184:	mov	r4, #0
   14188:	movw	sl, #55884	; 0xda4c
   1418c:	movt	sl, #1
   14190:	str	sl, [sp, #20]
   14194:	mov	r0, r4
   14198:	bl	13700 <fputs@plt+0x10bc>
   1419c:	ldrd	r2, [r5, #40]	; 0x28
   141a0:	orrs	fp, r2, r3
   141a4:	mov	r9, r0
   141a8:	mov	r0, #0
   141ac:	str	r0, [sp, #40]	; 0x28
   141b0:	bne	141c0 <fputs@plt+0x1b7c>
   141b4:	sub	r3, r9, #16
   141b8:	cmp	r3, #2
   141bc:	bls	14300 <fputs@plt+0x1cbc>
   141c0:	cmp	r9, #39	; 0x27
   141c4:	ldrls	pc, [pc, r9, lsl #2]
   141c8:	b	142e8 <fputs@plt+0x1ca4>
   141cc:	andeq	r4, r1, ip, lsr #6
   141d0:	andeq	r4, r1, r8, lsr r3
   141d4:	andeq	r4, r1, ip, asr #17
   141d8:	andeq	r4, r1, r8, lsr #17
   141dc:	andeq	r4, r1, r4, lsr r7
   141e0:	andeq	r4, r1, r0, lsl r7
   141e4:	andeq	r4, r1, r8, lsr r9
   141e8:	andeq	r4, r1, r4, lsl r9
   141ec:	andeq	r4, r1, ip, asr r9
   141f0:	andeq	r4, r1, r0, lsl #14
   141f4:	andeq	r4, r1, r8, ror r6
   141f8:	andeq	r4, r1, r4, lsr r6
   141fc:	andeq	r4, r1, ip, lsl #12
   14200:	ldrdeq	r4, [r1], -r8
   14204:	andeq	r4, r1, r0, lsr #11
   14208:	andeq	r4, r1, r8, lsr r5
   1420c:	andeq	r4, r1, r0, lsl #10
   14210:	andeq	r4, r1, r4, ror #9
   14214:	andeq	r4, r1, r0, ror #19
   14218:	ldrdeq	r4, [r1], -r0
   1421c:	andeq	r4, r1, r0, asr #19
   14220:			; <UNDEFINED> instruction: 0x000149b0
   14224:	andeq	r4, r1, r0, lsr #19
   14228:	muleq	r1, r0, r9
   1422c:	andeq	r4, r1, r0, lsl #19
   14230:	andeq	r4, r1, ip, ror #4
   14234:	andeq	r4, r1, r0, lsr #22
   14238:	andeq	r4, r1, r0, ror sl
   1423c:	andeq	r4, r1, r4, lsr sl
   14240:	andeq	r4, r1, r8, lsl #20
   14244:	andeq	r4, r1, r0, asr #22
   14248:	andeq	r4, r1, r0, lsr fp
   1424c:	andeq	r4, r1, r0, lsr #9
   14250:	andeq	r4, r1, r8, ror r4
   14254:	andeq	r4, r1, r4, asr r4
   14258:	andeq	r4, r1, r0, asr #8
   1425c:	strdeq	r4, [r1], -r0
   14260:	andeq	r4, r1, r4, lsr #7
   14264:	andeq	r4, r1, ip, ror r3
   14268:	andeq	r4, r1, r4, asr r3
   1426c:	movw	r1, #56288	; 0xdbe0
   14270:	add	r0, r5, #128	; 0x80
   14274:	movt	r1, #1
   14278:	bl	194d0 <fputs@plt+0x6e8c>
   1427c:	subs	sl, r0, #0
   14280:	beq	142e8 <fputs@plt+0x1ca4>
   14284:	mov	r1, #91	; 0x5b
   14288:	bl	120c8 <strchr@plt>
   1428c:	cmp	r0, #0
   14290:	beq	14cc0 <fputs@plt+0x267c>
   14294:	add	r9, r0, #1
   14298:	mov	r1, #93	; 0x5d
   1429c:	mov	r0, r9
   142a0:	bl	120c8 <strchr@plt>
   142a4:	cmp	r0, #0
   142a8:	beq	14cc0 <fputs@plt+0x267c>
   142ac:	cmp	r9, #0
   142b0:	mov	r3, #0
   142b4:	strb	r3, [r0]
   142b8:	beq	14cc0 <fputs@plt+0x267c>
   142bc:	mov	r0, r9
   142c0:	bl	1259c <__strdup@plt>
   142c4:	subs	r9, r0, #0
   142c8:	beq	14d34 <fputs@plt+0x26f0>
   142cc:	mov	r0, sl
   142d0:	bl	121b8 <free@plt>
   142d4:	mov	r0, r6
   142d8:	mov	r2, r9
   142dc:	mov	r1, r4
   142e0:	str	r9, [sp, #40]	; 0x28
   142e4:	bl	1a890 <fputs@plt+0x824c>
   142e8:	ldr	r3, [r7]
   142ec:	add	r4, r4, #1
   142f0:	cmp	r3, r4
   142f4:	ble	14314 <fputs@plt+0x1cd0>
   142f8:	ldr	r6, [r5, #4]
   142fc:	b	14194 <fputs@plt+0x1b50>
   14300:	ldr	r1, [r5, #120]	; 0x78
   14304:	add	r2, r5, #8
   14308:	mov	r0, #3
   1430c:	bl	123f8 <__xstat64@plt>
   14310:	b	141c0 <fputs@plt+0x1b7c>
   14314:	ldr	r2, [sp, #76]	; 0x4c
   14318:	ldr	r3, [r8]
   1431c:	cmp	r2, r3
   14320:	bne	15044 <fputs@plt+0x2a00>
   14324:	add	sp, sp, #84	; 0x54
   14328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1432c:	ldr	r2, [r5, #116]	; 0x74
   14330:	cmp	r2, #0
   14334:	bne	14b7c <fputs@plt+0x2538>
   14338:	ldr	r0, [r5, #112]	; 0x70
   1433c:	bl	13a14 <fputs@plt+0x13d0>
   14340:	mov	r2, r0
   14344:	mov	r0, r6
   14348:	mov	r1, r4
   1434c:	bl	1a890 <fputs@plt+0x824c>
   14350:	b	142e8 <fputs@plt+0x1ca4>
   14354:	ldr	r3, [r5, #168]	; 0xa8
   14358:	cmp	r3, #0
   1435c:	bne	142e8 <fputs@plt+0x1ca4>
   14360:	ldr	r3, [r5, #212]	; 0xd4
   14364:	cmp	r3, #0
   14368:	bne	142e8 <fputs@plt+0x1ca4>
   1436c:	movw	r1, #56092	; 0xdb1c
   14370:	add	r0, r5, #128	; 0x80
   14374:	movt	r1, #1
   14378:	b	14460 <fputs@plt+0x1e1c>
   1437c:	ldr	r3, [r5, #168]	; 0xa8
   14380:	cmp	r3, #0
   14384:	bne	142e8 <fputs@plt+0x1ca4>
   14388:	ldr	r3, [r5, #212]	; 0xd4
   1438c:	cmp	r3, #0
   14390:	bne	142e8 <fputs@plt+0x1ca4>
   14394:	movw	r1, #56080	; 0xdb10
   14398:	add	r0, r5, #128	; 0x80
   1439c:	movt	r1, #1
   143a0:	b	14460 <fputs@plt+0x1e1c>
   143a4:	add	r9, r5, #128	; 0x80
   143a8:	movw	r1, #55904	; 0xda60
   143ac:	movt	r1, #1
   143b0:	mov	r0, r9
   143b4:	bl	1a068 <fputs@plt+0x7a24>
   143b8:	cmp	r0, #0
   143bc:	movwne	r9, #55904	; 0xda60
   143c0:	movtne	r9, #1
   143c4:	beq	14c58 <fputs@plt+0x2614>
   143c8:	mov	r0, r9
   143cc:	bl	1259c <__strdup@plt>
   143d0:	subs	r3, r0, #0
   143d4:	beq	14d34 <fputs@plt+0x26f0>
   143d8:	mov	r0, r6
   143dc:	mov	r2, r3
   143e0:	mov	r1, r4
   143e4:	str	r3, [sp, #40]	; 0x28
   143e8:	bl	1a890 <fputs@plt+0x824c>
   143ec:	b	142e8 <fputs@plt+0x1ca4>
   143f0:	add	r9, sp, #56	; 0x38
   143f4:	add	r0, r5, #128	; 0x80
   143f8:	str	r9, [sp]
   143fc:	add	r1, sp, #44	; 0x2c
   14400:	add	r2, sp, #48	; 0x30
   14404:	add	r3, sp, #52	; 0x34
   14408:	bl	19c2c <fputs@plt+0x75e8>
   1440c:	cmp	r0, #0
   14410:	bne	142e8 <fputs@plt+0x1ca4>
   14414:	ldr	lr, [sp, #52]	; 0x34
   14418:	movw	r1, #56368	; 0xdc30
   1441c:	ldr	ip, [sp, #56]	; 0x38
   14420:	movt	r1, #1
   14424:	ldr	r2, [sp, #44]	; 0x2c
   14428:	add	r0, sp, #40	; 0x28
   1442c:	ldr	r3, [sp, #48]	; 0x30
   14430:	str	lr, [sp]
   14434:	str	ip, [sp, #4]
   14438:	bl	13598 <fputs@plt+0xf54>
   1443c:	b	14900 <fputs@plt+0x22bc>
   14440:	ldr	r3, [r5]
   14444:	cmp	r3, #0
   14448:	beq	142e8 <fputs@plt+0x1ca4>
   1444c:	ldr	r0, [r3, #112]	; 0x70
   14450:	b	1433c <fputs@plt+0x1cf8>
   14454:	movw	r1, #56044	; 0xdaec
   14458:	add	r0, r5, #128	; 0x80
   1445c:	movt	r1, #1
   14460:	bl	194d0 <fputs@plt+0x6e8c>
   14464:	cmp	r0, #0
   14468:	mov	r2, r0
   1446c:	str	r0, [sp, #40]	; 0x28
   14470:	bne	14344 <fputs@plt+0x1d00>
   14474:	b	142e8 <fputs@plt+0x1ca4>
   14478:	ldr	r3, [r5, #172]	; 0xac
   1447c:	cmp	r3, #0
   14480:	beq	14bd8 <fputs@plt+0x2594>
   14484:	ldr	r0, [r5, #196]	; 0xc4
   14488:	cmp	r0, #0
   1448c:	beq	142e8 <fputs@plt+0x1ca4>
   14490:	bl	1259c <__strdup@plt>
   14494:	subs	r2, r0, #0
   14498:	bne	14344 <fputs@plt+0x1d00>
   1449c:	b	14d34 <fputs@plt+0x26f0>
   144a0:	ldr	r3, [r7, #164]	; 0xa4
   144a4:	movw	r1, #56528	; 0xdcd0
   144a8:	add	r0, r5, #128	; 0x80
   144ac:	movt	r1, #1
   144b0:	ldrb	r3, [r3, #4]
   144b4:	tst	r3, #2
   144b8:	bne	14bc8 <fputs@plt+0x2584>
   144bc:	add	r2, sp, #56	; 0x38
   144c0:	bl	18fbc <fputs@plt+0x6978>
   144c4:	cmp	r0, #0
   144c8:	beq	14da0 <fputs@plt+0x275c>
   144cc:	ldr	r2, [sp, #40]	; 0x28
   144d0:	ldr	fp, [sp, #20]
   144d4:	cmp	r2, #0
   144d8:	mov	r0, r6
   144dc:	moveq	r2, fp
   144e0:	b	14a64 <fputs@plt+0x2420>
   144e4:	cmp	r0, #0
   144e8:	bne	142e8 <fputs@plt+0x1ca4>
   144ec:	ldr	r0, [r5, #36]	; 0x24
   144f0:	bl	12470 <getgrgid@plt>
   144f4:	cmp	r0, #0
   144f8:	bne	14518 <fputs@plt+0x1ed4>
   144fc:	b	142e8 <fputs@plt+0x1ca4>
   14500:	cmp	r0, #0
   14504:	bne	142e8 <fputs@plt+0x1ca4>
   14508:	ldr	r0, [r5, #32]
   1450c:	bl	122b4 <getpwuid@plt>
   14510:	cmp	r0, #0
   14514:	beq	142e8 <fputs@plt+0x1ca4>
   14518:	ldr	r2, [r0]
   1451c:	cmp	r2, #0
   14520:	beq	14344 <fputs@plt+0x1d00>
   14524:	mov	r0, r2
   14528:	bl	1259c <__strdup@plt>
   1452c:	cmp	r0, #0
   14530:	bne	14340 <fputs@plt+0x1cfc>
   14534:	b	14d34 <fputs@plt+0x26f0>
   14538:	ldr	r3, [r5, #168]	; 0xa8
   1453c:	cmp	r3, #0
   14540:	ldr	r3, [r5, #116]	; 0x74
   14544:	bne	14ba4 <fputs@plt+0x2560>
   14548:	cmp	r3, #0
   1454c:	beq	14f2c <fputs@plt+0x28e8>
   14550:	add	r2, sp, #80	; 0x50
   14554:	mov	r3, #0
   14558:	movw	r1, #56128	; 0xdb40
   1455c:	add	r0, r5, #128	; 0x80
   14560:	str	r3, [r2, #-28]!	; 0xffffffe4
   14564:	movt	r1, #1
   14568:	bl	19054 <fputs@plt+0x6a10>
   1456c:	cmp	r0, #0
   14570:	bne	14b6c <fputs@plt+0x2528>
   14574:	ldr	r3, [sp, #52]	; 0x34
   14578:	cmp	r3, #0
   1457c:	bne	14d38 <fputs@plt+0x26f4>
   14580:	movw	r0, #56156	; 0xdb5c
   14584:	movt	r0, #1
   14588:	bl	1259c <__strdup@plt>
   1458c:	cmp	r0, #0
   14590:	beq	14d34 <fputs@plt+0x26f0>
   14594:	mov	r2, r0
   14598:	str	r0, [sp, #40]	; 0x28
   1459c:	b	14b70 <fputs@plt+0x252c>
   145a0:	ldrd	r2, [r5, #232]	; 0xe8
   145a4:	orrs	sl, r2, r3
   145a8:	beq	142e8 <fputs@plt+0x1ca4>
   145ac:	ldr	r1, [r7, #164]	; 0xa4
   145b0:	ldrb	r0, [r1, #4]
   145b4:	ubfx	r0, r0, #1, #1
   145b8:	cmp	r0, #0
   145bc:	beq	14c48 <fputs@plt+0x2604>
   145c0:	movw	r1, #56108	; 0xdb2c
   145c4:	add	r0, sp, #40	; 0x28
   145c8:	movt	r1, #1
   145cc:	bl	13598 <fputs@plt+0xf54>
   145d0:	ldr	r2, [sp, #40]	; 0x28
   145d4:	b	14b70 <fputs@plt+0x252c>
   145d8:	ldr	r3, [r5, #168]	; 0xa8
   145dc:	cmp	r3, #0
   145e0:	bne	142e8 <fputs@plt+0x1ca4>
   145e4:	ldr	r3, [r5, #212]	; 0xd4
   145e8:	cmp	r3, #0
   145ec:	bne	142e8 <fputs@plt+0x1ca4>
   145f0:	ldr	r3, [r5, #172]	; 0xac
   145f4:	cmp	r3, #0
   145f8:	beq	14db4 <fputs@plt+0x2770>
   145fc:	ldr	r0, [r5, #200]	; 0xc8
   14600:	cmp	r0, #0
   14604:	bne	14490 <fputs@plt+0x1e4c>
   14608:	b	142e8 <fputs@plt+0x1ca4>
   1460c:	ldr	r3, [r5, #168]	; 0xa8
   14610:	cmp	r3, #0
   14614:	bne	142e8 <fputs@plt+0x1ca4>
   14618:	ldr	r3, [r5, #212]	; 0xd4
   1461c:	cmp	r3, #0
   14620:	bne	142e8 <fputs@plt+0x1ca4>
   14624:	movw	r1, #56064	; 0xdb00
   14628:	add	r0, r5, #128	; 0x80
   1462c:	movt	r1, #1
   14630:	b	14460 <fputs@plt+0x1e1c>
   14634:	movw	r1, #56012	; 0xdacc
   14638:	add	r0, r5, #128	; 0x80
   1463c:	movt	r1, #1
   14640:	bl	194d0 <fputs@plt+0x6e8c>
   14644:	cmp	r0, #0
   14648:	str	r0, [sp, #40]	; 0x28
   1464c:	bne	14340 <fputs@plt+0x1cfc>
   14650:	ldr	r0, [r5, #144]	; 0x90
   14654:	cmp	r0, #0
   14658:	beq	142e8 <fputs@plt+0x1ca4>
   1465c:	movw	r1, #56012	; 0xdacc
   14660:	movt	r1, #1
   14664:	bl	194d0 <fputs@plt+0x6e8c>
   14668:	cmp	r0, #0
   1466c:	str	r0, [sp, #40]	; 0x28
   14670:	beq	142e8 <fputs@plt+0x1ca4>
   14674:	b	14340 <fputs@plt+0x1cfc>
   14678:	add	r9, sp, #80	; 0x50
   1467c:	mov	sl, #0
   14680:	movw	r1, #56000	; 0xdac0
   14684:	movw	r2, #56004	; 0xdac4
   14688:	str	sl, [r9, #-24]!	; 0xffffffe8
   1468c:	movt	r1, #1
   14690:	mov	r3, r9
   14694:	add	r0, r5, #128	; 0x80
   14698:	movt	r2, #1
   1469c:	bl	18e80 <fputs@plt+0x683c>
   146a0:	cmp	r0, #1
   146a4:	beq	146dc <fputs@plt+0x2098>
   146a8:	ldr	r0, [r5, #120]	; 0x78
   146ac:	mov	r1, sl
   146b0:	bl	12320 <open64@plt>
   146b4:	cmn	r0, #1
   146b8:	mov	fp, r0
   146bc:	beq	146dc <fputs@plt+0x2098>
   146c0:	mov	r2, r9
   146c4:	movw	r1, #4702	; 0x125e
   146c8:	bl	12230 <ioctl@plt>
   146cc:	cmp	r0, #0
   146d0:	mov	r0, fp
   146d4:	strne	sl, [sp, #56]	; 0x38
   146d8:	bl	123b0 <close@plt>
   146dc:	ldr	r3, [sp, #56]	; 0x38
   146e0:	cmp	r3, #0
   146e4:	beq	14bb0 <fputs@plt+0x256c>
   146e8:	movw	r0, #56008	; 0xdac8
   146ec:	movt	r0, #1
   146f0:	bl	1259c <__strdup@plt>
   146f4:	cmp	r0, #0
   146f8:	bne	14340 <fputs@plt+0x1cfc>
   146fc:	b	14d34 <fputs@plt+0x26f0>
   14700:	movw	r1, #55980	; 0xdaac
   14704:	add	r0, r5, #128	; 0x80
   14708:	movt	r1, #1
   1470c:	b	14460 <fputs@plt+0x1e1c>
   14710:	mov	r0, r5
   14714:	bl	13f28 <fputs@plt+0x18e4>
   14718:	ldr	r0, [r5, #184]	; 0xb8
   1471c:	cmp	r0, #0
   14720:	beq	142e8 <fputs@plt+0x1ca4>
   14724:	bl	1259c <__strdup@plt>
   14728:	subs	r2, r0, #0
   1472c:	bne	14344 <fputs@plt+0x1d00>
   14730:	b	14d34 <fputs@plt+0x26f0>
   14734:	ldr	r2, [r5, #208]	; 0xd0
   14738:	ldr	r3, [r5, #204]	; 0xcc
   1473c:	add	r3, r2, r3
   14740:	cmp	r3, #0
   14744:	bne	142e8 <fputs@plt+0x1ca4>
   14748:	ldr	r3, [r5, #120]	; 0x78
   1474c:	cmp	r3, #0
   14750:	beq	1501c <fputs@plt+0x29d8>
   14754:	ldr	r0, [r7, #172]	; 0xac
   14758:	movw	r9, #63040	; 0xf640
   1475c:	movt	r9, #2
   14760:	cmp	r0, #0
   14764:	beq	14dcc <fputs@plt+0x2788>
   14768:	ldr	r3, [r5, #216]	; 0xd8
   1476c:	mov	sl, #0
   14770:	ldr	r2, [r5, #220]	; 0xdc
   14774:	mov	r9, #1
   14778:	bic	ip, r3, #4080	; 0xff0
   1477c:	ubfx	r1, r3, #0, #12
   14780:	bic	r3, ip, #15
   14784:	str	r3, [sp, #28]
   14788:	bic	r3, r2, #255	; 0xff
   1478c:	str	sl, [sp, #24]
   14790:	uxtb	r2, r2
   14794:	str	r9, [sp]
   14798:	lsr	fp, r3, #20
   1479c:	lsl	r3, r3, #12
   147a0:	str	fp, [sp, #36]	; 0x24
   147a4:	orr	ip, r2, r1, lsl #8
   147a8:	str	r3, [sp, #32]
   147ac:	ldrd	r2, [sp, #32]
   147b0:	ldrd	sl, [sp, #24]
   147b4:	orr	fp, fp, r3
   147b8:	orr	sl, sl, r2
   147bc:	mov	r3, fp
   147c0:	mov	r2, sl
   147c4:	orr	r2, r2, ip
   147c8:	bl	12140 <mnt_table_find_devno@plt>
   147cc:	subs	fp, r0, #0
   147d0:	beq	14f48 <fputs@plt+0x2904>
   147d4:	mov	r0, fp
   147d8:	bl	12314 <mnt_fs_get_root@plt>
   147dc:	cmp	r0, #0
   147e0:	beq	14880 <fputs@plt+0x223c>
   147e4:	ldrb	r3, [r0]
   147e8:	cmp	r3, #47	; 0x2f
   147ec:	bne	147fc <fputs@plt+0x21b8>
   147f0:	ldrb	r3, [r0, #1]
   147f4:	cmp	r3, #0
   147f8:	beq	14880 <fputs@plt+0x223c>
   147fc:	mov	r0, #1
   14800:	add	r9, sp, #56	; 0x38
   14804:	bl	12218 <mnt_new_iter@plt>
   14808:	mov	r2, fp
   1480c:	mov	sl, r0
   14810:	mov	r1, r0
   14814:	ldr	r0, [r7, #172]	; 0xac
   14818:	bl	124e8 <mnt_table_set_iter@plt>
   1481c:	ldr	r0, [r7, #172]	; 0xac
   14820:	mov	r1, sl
   14824:	mov	r2, r9
   14828:	bl	124ac <mnt_table_next_fs@plt>
   1482c:	cmp	r0, #0
   14830:	bne	14878 <fputs@plt+0x2234>
   14834:	ldr	r0, [sp, #56]	; 0x38
   14838:	bl	12314 <mnt_fs_get_root@plt>
   1483c:	cmp	r0, #0
   14840:	beq	1485c <fputs@plt+0x2218>
   14844:	ldrb	r3, [r0]
   14848:	cmp	r3, #47	; 0x2f
   1484c:	bne	1481c <fputs@plt+0x21d8>
   14850:	ldrb	r3, [r0, #1]
   14854:	cmp	r3, #0
   14858:	bne	1481c <fputs@plt+0x21d8>
   1485c:	ldr	r0, [sp, #56]	; 0x38
   14860:	ldr	r1, [r5, #120]	; 0x78
   14864:	ldr	r2, [r7, #176]	; 0xb0
   14868:	bl	125c0 <mnt_fs_match_source@plt>
   1486c:	cmp	r0, #0
   14870:	beq	1481c <fputs@plt+0x21d8>
   14874:	ldr	fp, [sp, #56]	; 0x38
   14878:	mov	r0, sl
   1487c:	bl	12200 <mnt_free_iter@plt>
   14880:	mov	r0, fp
   14884:	bl	121f4 <mnt_fs_get_target@plt>
   14888:	cmp	r0, #0
   1488c:	beq	142e8 <fputs@plt+0x1ca4>
   14890:	bl	1259c <__strdup@plt>
   14894:	cmp	r0, #0
   14898:	beq	14d34 <fputs@plt+0x26f0>
   1489c:	str	r0, [sp, #40]	; 0x28
   148a0:	mov	r2, r0
   148a4:	b	14344 <fputs@plt+0x1d00>
   148a8:	mov	r0, r5
   148ac:	bl	13f28 <fputs@plt+0x18e4>
   148b0:	ldr	r0, [r5, #176]	; 0xb0
   148b4:	cmp	r0, #0
   148b8:	beq	142e8 <fputs@plt+0x1ca4>
   148bc:	bl	1259c <__strdup@plt>
   148c0:	subs	r2, r0, #0
   148c4:	bne	14344 <fputs@plt+0x1d00>
   148c8:	b	14d34 <fputs@plt+0x26f0>
   148cc:	ldr	r3, [r7, #164]	; 0xa4
   148d0:	ldr	r2, [r5, #216]	; 0xd8
   148d4:	ldr	r3, [r3]
   148d8:	ldr	r3, [r3, #12]
   148dc:	tst	r3, #18
   148e0:	ldr	r3, [r5, #220]	; 0xdc
   148e4:	addne	r0, sp, #40	; 0x28
   148e8:	addeq	r0, sp, #40	; 0x28
   148ec:	movwne	r1, #55936	; 0xda80
   148f0:	movweq	r1, #55944	; 0xda88
   148f4:	movtne	r1, #1
   148f8:	movteq	r1, #1
   148fc:	bl	13598 <fputs@plt+0xf54>
   14900:	mov	r0, r6
   14904:	mov	r1, r4
   14908:	ldr	r2, [sp, #40]	; 0x28
   1490c:	bl	1a890 <fputs@plt+0x824c>
   14910:	b	142e8 <fputs@plt+0x1ca4>
   14914:	mov	r0, r5
   14918:	bl	13f28 <fputs@plt+0x18e4>
   1491c:	ldr	r0, [r5, #192]	; 0xc0
   14920:	cmp	r0, #0
   14924:	beq	142e8 <fputs@plt+0x1ca4>
   14928:	bl	1259c <__strdup@plt>
   1492c:	subs	r2, r0, #0
   14930:	bne	14344 <fputs@plt+0x1d00>
   14934:	b	14d34 <fputs@plt+0x26f0>
   14938:	mov	r0, r5
   1493c:	bl	13f28 <fputs@plt+0x18e4>
   14940:	ldr	r0, [r5, #180]	; 0xb4
   14944:	cmp	r0, #0
   14948:	beq	142e8 <fputs@plt+0x1ca4>
   1494c:	bl	1259c <__strdup@plt>
   14950:	subs	r2, r0, #0
   14954:	bne	14344 <fputs@plt+0x1d00>
   14958:	b	14d34 <fputs@plt+0x26f0>
   1495c:	mov	r0, r5
   14960:	bl	13f28 <fputs@plt+0x18e4>
   14964:	ldr	r0, [r5, #188]	; 0xbc
   14968:	cmp	r0, #0
   1496c:	beq	142e8 <fputs@plt+0x1ca4>
   14970:	bl	1259c <__strdup@plt>
   14974:	subs	r2, r0, #0
   14978:	bne	14344 <fputs@plt+0x1d00>
   1497c:	b	14d34 <fputs@plt+0x26f0>
   14980:	movw	r1, #56024	; 0xdad8
   14984:	add	r0, r5, #128	; 0x80
   14988:	movt	r1, #1
   1498c:	b	14460 <fputs@plt+0x1e1c>
   14990:	movw	r1, #56260	; 0xdbc4
   14994:	add	r0, r5, #128	; 0x80
   14998:	movt	r1, #1
   1499c:	b	14460 <fputs@plt+0x1e1c>
   149a0:	movw	r1, #56232	; 0xdba8
   149a4:	add	r0, r5, #128	; 0x80
   149a8:	movt	r1, #1
   149ac:	b	14460 <fputs@plt+0x1e1c>
   149b0:	movw	r1, #56208	; 0xdb90
   149b4:	add	r0, r5, #128	; 0x80
   149b8:	movt	r1, #1
   149bc:	b	14460 <fputs@plt+0x1e1c>
   149c0:	movw	r1, #56184	; 0xdb78
   149c4:	add	r0, r5, #128	; 0x80
   149c8:	movt	r1, #1
   149cc:	b	14460 <fputs@plt+0x1e1c>
   149d0:	movw	r1, #56164	; 0xdb64
   149d4:	add	r0, r5, #128	; 0x80
   149d8:	movt	r1, #1
   149dc:	b	14460 <fputs@plt+0x1e1c>
   149e0:	cmp	r0, #0
   149e4:	bne	142e8 <fputs@plt+0x1ca4>
   149e8:	ldr	r0, [r5, #24]
   149ec:	add	r1, sp, #64	; 0x40
   149f0:	bl	177a8 <fputs@plt+0x5164>
   149f4:	add	r0, sp, #64	; 0x40
   149f8:	bl	1259c <__strdup@plt>
   149fc:	subs	r2, r0, #0
   14a00:	bne	14344 <fputs@plt+0x1d00>
   14a04:	b	14d34 <fputs@plt+0x26f0>
   14a08:	ldr	r3, [r7, #164]	; 0xa4
   14a0c:	movw	r1, #55620	; 0xd944
   14a10:	add	r0, r5, #128	; 0x80
   14a14:	movt	r1, #1
   14a18:	ldrb	r3, [r3, #4]
   14a1c:	tst	r3, #2
   14a20:	beq	14b5c <fputs@plt+0x2518>
   14a24:	bl	194d0 <fputs@plt+0x6e8c>
   14a28:	mov	r2, r0
   14a2c:	str	r0, [sp, #40]	; 0x28
   14a30:	b	14b70 <fputs@plt+0x252c>
   14a34:	movw	r1, #56456	; 0xdc88
   14a38:	add	r0, r5, #128	; 0x80
   14a3c:	movt	r1, #1
   14a40:	bl	194d0 <fputs@plt+0x6e8c>
   14a44:	ldr	r3, [r5, #224]	; 0xe0
   14a48:	cmp	r3, #0
   14a4c:	mov	r2, r0
   14a50:	str	r0, [sp, #40]	; 0x28
   14a54:	mov	r0, r6
   14a58:	beq	14ccc <fputs@plt+0x2688>
   14a5c:	cmp	r2, #0
   14a60:	beq	14ccc <fputs@plt+0x2688>
   14a64:	mov	r1, r4
   14a68:	bl	1a890 <fputs@plt+0x824c>
   14a6c:	b	142e8 <fputs@plt+0x1ca4>
   14a70:	ldr	r9, [r5, #112]	; 0x70
   14a74:	movw	r1, #55512	; 0xd8d8
   14a78:	mov	r2, #3
   14a7c:	movt	r1, #1
   14a80:	mov	r0, r9
   14a84:	bl	1256c <strncmp@plt>
   14a88:	subs	sl, r0, #0
   14a8c:	beq	14be4 <fputs@plt+0x25a0>
   14a90:	movw	r1, #56332	; 0xdc0c
   14a94:	mov	r0, r9
   14a98:	movt	r1, #1
   14a9c:	mov	r2, #4
   14aa0:	bl	1256c <strncmp@plt>
   14aa4:	cmp	r0, #0
   14aa8:	beq	14d88 <fputs@plt+0x2744>
   14aac:	mov	r0, r9
   14ab0:	movw	r1, #56340	; 0xdc14
   14ab4:	mov	r2, #2
   14ab8:	movt	r1, #1
   14abc:	bl	1256c <strncmp@plt>
   14ac0:	cmp	r0, #0
   14ac4:	bne	14ce0 <fputs@plt+0x269c>
   14ac8:	movw	r1, #56344	; 0xdc18
   14acc:	add	r0, r5, #128	; 0x80
   14ad0:	movt	r1, #1
   14ad4:	bl	194d0 <fputs@plt+0x6e8c>
   14ad8:	subs	fp, r0, #0
   14adc:	beq	14fa4 <fputs@plt+0x2960>
   14ae0:	mov	r9, fp
   14ae4:	ldrb	sl, [r9], #1
   14ae8:	cmp	sl, #0
   14aec:	beq	14b08 <fputs@plt+0x24c4>
   14af0:	bl	122c0 <__ctype_tolower_loc@plt>
   14af4:	cmp	r9, #0
   14af8:	ldr	r3, [r0]
   14afc:	ldr	r3, [r3, sl, lsl #2]
   14b00:	strb	r3, [r9, #-1]
   14b04:	bne	14ae4 <fputs@plt+0x24a0>
   14b08:	mov	r0, r6
   14b0c:	mov	r2, fp
   14b10:	mov	r1, r4
   14b14:	str	fp, [sp, #40]	; 0x28
   14b18:	bl	1a890 <fputs@plt+0x824c>
   14b1c:	b	142e8 <fputs@plt+0x1ca4>
   14b20:	movw	r1, #56304	; 0xdbf0
   14b24:	add	r0, r5, #128	; 0x80
   14b28:	movt	r1, #1
   14b2c:	b	14460 <fputs@plt+0x1e1c>
   14b30:	movw	r1, #56500	; 0xdcb4
   14b34:	add	r0, r5, #128	; 0x80
   14b38:	movt	r1, #1
   14b3c:	b	14a40 <fputs@plt+0x23fc>
   14b40:	ldr	r3, [r7, #164]	; 0xa4
   14b44:	movw	r1, #56476	; 0xdc9c
   14b48:	add	r0, r5, #128	; 0x80
   14b4c:	movt	r1, #1
   14b50:	ldrb	r3, [r3, #4]
   14b54:	tst	r3, #2
   14b58:	bne	14a24 <fputs@plt+0x23e0>
   14b5c:	add	r2, sp, #56	; 0x38
   14b60:	bl	18fbc <fputs@plt+0x6978>
   14b64:	cmp	r0, #0
   14b68:	beq	14c44 <fputs@plt+0x2600>
   14b6c:	ldr	r2, [sp, #40]	; 0x28
   14b70:	cmp	r2, #0
   14b74:	bne	14344 <fputs@plt+0x1d00>
   14b78:	b	142e8 <fputs@plt+0x1ca4>
   14b7c:	ldr	r3, [r7, #164]	; 0xa4
   14b80:	ldrb	r3, [r3, #4]
   14b84:	tst	r3, #32
   14b88:	beq	14524 <fputs@plt+0x1ee0>
   14b8c:	movw	r1, #55920	; 0xda70
   14b90:	add	r0, sp, #56	; 0x38
   14b94:	movt	r1, #1
   14b98:	bl	13598 <fputs@plt+0xf54>
   14b9c:	ldr	r2, [sp, #56]	; 0x38
   14ba0:	b	14344 <fputs@plt+0x1d00>
   14ba4:	cmp	r3, #0
   14ba8:	beq	14b6c <fputs@plt+0x2528>
   14bac:	b	14550 <fputs@plt+0x1f0c>
   14bb0:	movw	r0, #55884	; 0xda4c
   14bb4:	movt	r0, #1
   14bb8:	bl	1259c <__strdup@plt>
   14bbc:	cmp	r0, #0
   14bc0:	bne	14340 <fputs@plt+0x1cfc>
   14bc4:	b	14d34 <fputs@plt+0x26f0>
   14bc8:	bl	194d0 <fputs@plt+0x6e8c>
   14bcc:	mov	r2, r0
   14bd0:	str	r0, [sp, #40]	; 0x28
   14bd4:	b	144d0 <fputs@plt+0x1e8c>
   14bd8:	mov	r0, r5
   14bdc:	bl	13d60 <fputs@plt+0x171c>
   14be0:	b	14484 <fputs@plt+0x1e40>
   14be4:	movw	r1, #56324	; 0xdc04
   14be8:	add	r0, r5, #128	; 0x80
   14bec:	movt	r1, #1
   14bf0:	bl	194d0 <fputs@plt+0x6e8c>
   14bf4:	subs	r9, r0, #0
   14bf8:	beq	14dc0 <fputs@plt+0x277c>
   14bfc:	mov	r1, #45	; 0x2d
   14c00:	bl	120c8 <strchr@plt>
   14c04:	mov	r2, #4
   14c08:	movw	r1, #55864	; 0xda38
   14c0c:	movt	r1, #1
   14c10:	cmp	r0, #0
   14c14:	strbne	sl, [r0]
   14c18:	mov	r0, r9
   14c1c:	bl	123e0 <strncasecmp@plt>
   14c20:	cmp	r0, #0
   14c24:	strbeq	r0, [r9, #4]
   14c28:	mov	r0, r9
   14c2c:	bl	1259c <__strdup@plt>
   14c30:	subs	fp, r0, #0
   14c34:	beq	14d34 <fputs@plt+0x26f0>
   14c38:	mov	r0, r9
   14c3c:	bl	121b8 <free@plt>
   14c40:	b	14ae0 <fputs@plt+0x249c>
   14c44:	ldrd	r2, [sp, #56]	; 0x38
   14c48:	bl	17950 <fputs@plt+0x530c>
   14c4c:	mov	r2, r0
   14c50:	str	r0, [sp, #40]	; 0x28
   14c54:	b	14b70 <fputs@plt+0x252c>
   14c58:	movw	r1, #55880	; 0xda48
   14c5c:	mov	r0, r9
   14c60:	movt	r1, #1
   14c64:	bl	1a068 <fputs@plt+0x7a24>
   14c68:	cmp	r0, #0
   14c6c:	beq	14d50 <fputs@plt+0x270c>
   14c70:	mov	r0, r9
   14c74:	movw	r1, #55880	; 0xda48
   14c78:	movw	r2, #56380	; 0xdc3c
   14c7c:	movt	r1, #1
   14c80:	movt	r2, #1
   14c84:	bl	19fa0 <fputs@plt+0x795c>
   14c88:	subs	sl, r0, #0
   14c8c:	beq	142e8 <fputs@plt+0x1ca4>
   14c90:	movw	r1, #56396	; 0xdc4c
   14c94:	movt	r1, #1
   14c98:	bl	1238c <strstr@plt>
   14c9c:	movw	r3, #55872	; 0xda40
   14ca0:	movt	r3, #1
   14ca4:	movw	r9, #55880	; 0xda48
   14ca8:	movt	r9, #1
   14cac:	cmp	r0, #0
   14cb0:	mov	r0, sl
   14cb4:	movne	r9, r3
   14cb8:	bl	121b8 <free@plt>
   14cbc:	b	143c8 <fputs@plt+0x1d84>
   14cc0:	mov	r0, sl
   14cc4:	bl	121b8 <free@plt>
   14cc8:	b	142e8 <fputs@plt+0x1ca4>
   14ccc:	movw	r2, #55884	; 0xda4c
   14cd0:	mov	r1, r4
   14cd4:	movt	r2, #1
   14cd8:	bl	1a890 <fputs@plt+0x824c>
   14cdc:	b	142e8 <fputs@plt+0x1ca4>
   14ce0:	add	r9, sp, #80	; 0x50
   14ce4:	mov	r3, #0
   14ce8:	movw	r1, #56356	; 0xdc24
   14cec:	add	r0, r5, #128	; 0x80
   14cf0:	str	r3, [r9, #-24]!	; 0xffffffe8
   14cf4:	movt	r1, #1
   14cf8:	mov	r2, r9
   14cfc:	bl	19054 <fputs@plt+0x6a10>
   14d00:	cmp	r0, #0
   14d04:	beq	14d74 <fputs@plt+0x2730>
   14d08:	ldr	r0, [r5, #168]	; 0xa8
   14d0c:	movw	r2, #55864	; 0xda38
   14d10:	movw	r3, #55856	; 0xda30
   14d14:	movt	r2, #1
   14d18:	cmp	r0, #0
   14d1c:	movt	r3, #1
   14d20:	movne	r0, r2
   14d24:	moveq	r0, r3
   14d28:	bl	1259c <__strdup@plt>
   14d2c:	subs	fp, r0, #0
   14d30:	bne	14ae0 <fputs@plt+0x249c>
   14d34:	bl	12650 <fputs@plt+0xc>
   14d38:	movw	r0, #56144	; 0xdb50
   14d3c:	movt	r0, #1
   14d40:	bl	1259c <__strdup@plt>
   14d44:	cmp	r0, #0
   14d48:	bne	14594 <fputs@plt+0x1f50>
   14d4c:	b	14d34 <fputs@plt+0x26f0>
   14d50:	movw	r1, #55908	; 0xda64
   14d54:	mov	r0, r9
   14d58:	movt	r1, #1
   14d5c:	bl	1a068 <fputs@plt+0x7a24>
   14d60:	cmp	r0, #0
   14d64:	beq	14e1c <fputs@plt+0x27d8>
   14d68:	movw	r9, #55908	; 0xda64
   14d6c:	movt	r9, #1
   14d70:	b	143c8 <fputs@plt+0x1d84>
   14d74:	ldr	r0, [sp, #56]	; 0x38
   14d78:	bl	15ea4 <fputs@plt+0x3860>
   14d7c:	cmp	r0, #0
   14d80:	bne	14d28 <fputs@plt+0x26e4>
   14d84:	b	14d08 <fputs@plt+0x26c4>
   14d88:	movw	r0, #56332	; 0xdc0c
   14d8c:	movt	r0, #1
   14d90:	bl	1259c <__strdup@plt>
   14d94:	subs	fp, r0, #0
   14d98:	bne	14ae0 <fputs@plt+0x249c>
   14d9c:	b	14d34 <fputs@plt+0x26f0>
   14da0:	ldrd	r2, [sp, #56]	; 0x38
   14da4:	bl	17950 <fputs@plt+0x530c>
   14da8:	mov	r2, r0
   14dac:	str	r0, [sp, #40]	; 0x28
   14db0:	b	144d0 <fputs@plt+0x1e8c>
   14db4:	mov	r0, r5
   14db8:	bl	13d60 <fputs@plt+0x171c>
   14dbc:	b	145fc <fputs@plt+0x1fb8>
   14dc0:	movw	r0, #56556	; 0xdcec
   14dc4:	movt	r0, #1
   14dc8:	b	14d28 <fputs@plt+0x26e4>
   14dcc:	bl	11fe4 <mnt_new_table@plt>
   14dd0:	cmp	r0, #0
   14dd4:	mov	r3, r0
   14dd8:	str	r0, [r9, #172]	; 0xac
   14ddc:	beq	142e8 <fputs@plt+0x1ca4>
   14de0:	ldr	r2, [r9, #176]	; 0xb0
   14de4:	cmp	r2, #0
   14de8:	beq	1500c <fputs@plt+0x29c8>
   14dec:	mov	r0, r3
   14df0:	movw	r1, #12752	; 0x31d0
   14df4:	movt	r1, #1
   14df8:	bl	12350 <mnt_table_set_parser_errcb@plt>
   14dfc:	ldr	r1, [r7, #176]	; 0xb0
   14e00:	ldr	r0, [r7, #172]	; 0xac
   14e04:	bl	12134 <mnt_table_set_cache@plt>
   14e08:	ldr	r0, [r7, #172]	; 0xac
   14e0c:	mov	r1, #0
   14e10:	bl	12518 <mnt_table_parse_mtab@plt>
   14e14:	ldr	r0, [r7, #172]	; 0xac
   14e18:	b	14768 <fputs@plt+0x2124>
   14e1c:	movw	r1, #56404	; 0xdc54
   14e20:	mov	r0, r9
   14e24:	movt	r1, #1
   14e28:	bl	1a124 <fputs@plt+0x7ae0>
   14e2c:	cmp	r0, #0
   14e30:	bne	14d68 <fputs@plt+0x2724>
   14e34:	mov	r0, r9
   14e38:	movw	r1, #56416	; 0xdc60
   14e3c:	movt	r1, #1
   14e40:	bl	1a124 <fputs@plt+0x7ae0>
   14e44:	cmp	r0, #0
   14e48:	movwne	r9, #55900	; 0xda5c
   14e4c:	movtne	r9, #1
   14e50:	bne	143c8 <fputs@plt+0x1d84>
   14e54:	mov	r0, r9
   14e58:	movw	r1, #55892	; 0xda54
   14e5c:	movt	r1, #1
   14e60:	bl	1a068 <fputs@plt+0x7a24>
   14e64:	cmp	r0, #0
   14e68:	movwne	r9, #55892	; 0xda54
   14e6c:	movtne	r9, #1
   14e70:	bne	143c8 <fputs@plt+0x1d84>
   14e74:	mov	r0, r9
   14e78:	movw	r1, #55888	; 0xda50
   14e7c:	movt	r1, #1
   14e80:	bl	1a1a8 <fputs@plt+0x7b64>
   14e84:	cmp	r0, #0
   14e88:	movwne	r9, #55888	; 0xda50
   14e8c:	movtne	r9, #1
   14e90:	bne	143c8 <fputs@plt+0x1d84>
   14e94:	movw	r1, #56428	; 0xdc6c
   14e98:	mov	r0, r9
   14e9c:	movt	r1, #1
   14ea0:	bl	1a068 <fputs@plt+0x7a24>
   14ea4:	cmp	r0, #0
   14ea8:	beq	142e8 <fputs@plt+0x1ca4>
   14eac:	mov	r0, r9
   14eb0:	movw	r1, #56428	; 0xdc6c
   14eb4:	movw	r2, #56436	; 0xdc74
   14eb8:	movt	r1, #1
   14ebc:	movt	r2, #1
   14ec0:	bl	19fa0 <fputs@plt+0x795c>
   14ec4:	subs	sl, r0, #0
   14ec8:	beq	142e8 <fputs@plt+0x1ca4>
   14ecc:	movw	r1, #56448	; 0xdc80
   14ed0:	mov	r2, #4
   14ed4:	movt	r1, #1
   14ed8:	bl	1256c <strncmp@plt>
   14edc:	cmp	r0, #0
   14ee0:	beq	15038 <fputs@plt+0x29f4>
   14ee4:	movw	r1, #55912	; 0xda68
   14ee8:	mov	r0, sl
   14eec:	movt	r1, #1
   14ef0:	mov	r2, #4
   14ef4:	bl	1256c <strncmp@plt>
   14ef8:	cmp	r0, #0
   14efc:	beq	15038 <fputs@plt+0x29f4>
   14f00:	movw	r1, #58544	; 0xe4b0
   14f04:	mov	r0, sl
   14f08:	movt	r1, #1
   14f0c:	bl	1238c <strstr@plt>
   14f10:	cmp	r0, #0
   14f14:	movwne	r9, #58544	; 0xe4b0
   14f18:	movtne	r9, #1
   14f1c:	beq	14cc0 <fputs@plt+0x267c>
   14f20:	mov	r0, sl
   14f24:	bl	121b8 <free@plt>
   14f28:	b	143c8 <fputs@plt+0x1d84>
   14f2c:	movw	r1, #56112	; 0xdb30
   14f30:	add	r0, r5, #128	; 0x80
   14f34:	movt	r1, #1
   14f38:	bl	194d0 <fputs@plt+0x6e8c>
   14f3c:	mov	r2, r0
   14f40:	str	r0, [sp, #40]	; 0x28
   14f44:	b	14b70 <fputs@plt+0x252c>
   14f48:	mov	r2, r9
   14f4c:	ldr	r0, [r7, #172]	; 0xac
   14f50:	ldr	r1, [r5, #120]	; 0x78
   14f54:	movw	r9, #63040	; 0xf640
   14f58:	bl	12590 <mnt_table_find_srcpath@plt>
   14f5c:	movt	r9, #2
   14f60:	subs	fp, r0, #0
   14f64:	bne	147d4 <fputs@plt+0x2190>
   14f68:	ldr	r0, [r9, #180]	; 0xb4
   14f6c:	ldr	sl, [r5, #120]	; 0x78
   14f70:	cmp	r0, #0
   14f74:	beq	14fbc <fputs@plt+0x2978>
   14f78:	mov	r1, sl
   14f7c:	mov	r2, #1
   14f80:	bl	12590 <mnt_table_find_srcpath@plt>
   14f84:	cmp	r0, #0
   14f88:	beq	142e8 <fputs@plt+0x1ca4>
   14f8c:	movw	r0, #55972	; 0xdaa4
   14f90:	movt	r0, #1
   14f94:	bl	1259c <__strdup@plt>
   14f98:	cmp	r0, #0
   14f9c:	bne	1489c <fputs@plt+0x2258>
   14fa0:	b	14d34 <fputs@plt+0x26f0>
   14fa4:	movw	r0, #56340	; 0xdc14
   14fa8:	movt	r0, #1
   14fac:	bl	1259c <__strdup@plt>
   14fb0:	subs	fp, r0, #0
   14fb4:	bne	14ae0 <fputs@plt+0x249c>
   14fb8:	b	14d34 <fputs@plt+0x26f0>
   14fbc:	bl	11fe4 <mnt_new_table@plt>
   14fc0:	cmp	r0, #0
   14fc4:	mov	r3, r0
   14fc8:	str	r0, [r9, #180]	; 0xb4
   14fcc:	beq	142e8 <fputs@plt+0x1ca4>
   14fd0:	ldr	r2, [r9, #176]	; 0xb0
   14fd4:	cmp	r2, #0
   14fd8:	beq	15048 <fputs@plt+0x2a04>
   14fdc:	mov	r0, r3
   14fe0:	movw	r1, #12752	; 0x31d0
   14fe4:	movt	r1, #1
   14fe8:	bl	12350 <mnt_table_set_parser_errcb@plt>
   14fec:	ldr	r1, [r7, #176]	; 0xb0
   14ff0:	ldr	r0, [r7, #180]	; 0xb4
   14ff4:	bl	12134 <mnt_table_set_cache@plt>
   14ff8:	ldr	r0, [r7, #180]	; 0xb4
   14ffc:	mov	r1, #0
   15000:	bl	1235c <mnt_table_parse_swaps@plt>
   15004:	ldr	r0, [r7, #180]	; 0xb4
   15008:	b	14f78 <fputs@plt+0x2934>
   1500c:	bl	125a8 <mnt_new_cache@plt>
   15010:	ldr	r3, [r9, #172]	; 0xac
   15014:	str	r0, [r9, #176]	; 0xb0
   15018:	b	14dec <fputs@plt+0x27a8>
   1501c:	movw	r0, #55956	; 0xda94
   15020:	movw	r1, #55272	; 0xd7e8
   15024:	movt	r0, #1
   15028:	movt	r1, #1
   1502c:	mov	r2, #372	; 0x174
   15030:	ldr	r3, [pc, #32]	; 15058 <fputs@plt+0x2a14>
   15034:	bl	12164 <__assert_fail@plt>
   15038:	movw	r9, #55912	; 0xda68
   1503c:	movt	r9, #1
   15040:	b	14f20 <fputs@plt+0x28dc>
   15044:	bl	12434 <__stack_chk_fail@plt>
   15048:	bl	125a8 <mnt_new_cache@plt>
   1504c:	ldr	r3, [r9, #180]	; 0xb4
   15050:	str	r0, [r9, #176]	; 0xb0
   15054:	b	14fdc <fputs@plt+0x2998>
   15058:	andeq	sp, r1, r0, lsr r0
   1505c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15060:	movw	r4, #63016	; 0xf628
   15064:	movt	r4, #2
   15068:	cmp	r2, #0
   1506c:	sub	sp, sp, #252	; 0xfc
   15070:	mov	r5, r0
   15074:	ldr	r2, [r4]
   15078:	mov	r6, r1
   1507c:	mov	r7, r3
   15080:	str	r2, [sp, #244]	; 0xf4
   15084:	beq	15094 <fputs@plt+0x2a50>
   15088:	ldr	r3, [r0, #204]	; 0xcc
   1508c:	cmp	r3, #0
   15090:	bne	150c8 <fputs@plt+0x2a84>
   15094:	cmp	r6, #0
   15098:	mov	r0, r5
   1509c:	ldrne	r1, [r6, #4]
   150a0:	moveq	r1, r6
   150a4:	bl	14138 <fputs@plt+0x1af4>
   150a8:	mov	r0, r5
   150ac:	bl	15268 <fputs@plt+0x2c24>
   150b0:	ldr	r2, [sp, #244]	; 0xf4
   150b4:	ldr	r3, [r4]
   150b8:	cmp	r2, r3
   150bc:	bne	15248 <fputs@plt+0x2c04>
   150c0:	add	sp, sp, #252	; 0xfc
   150c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150c8:	mov	r1, #0
   150cc:	mov	r2, #240	; 0xf0
   150d0:	mov	r0, sp
   150d4:	bl	12104 <memset@plt>
   150d8:	ldr	r1, [r5, #168]	; 0xa8
   150dc:	cmp	r1, #0
   150e0:	bne	150a8 <fputs@plt+0x2a64>
   150e4:	add	r0, r5, #128	; 0x80
   150e8:	bl	18c94 <fputs@plt+0x6650>
   150ec:	subs	r9, r0, #0
   150f0:	beq	1524c <fputs@plt+0x2c08>
   150f4:	movw	sl, #63040	; 0xf640
   150f8:	movt	sl, #2
   150fc:	mvn	fp, #0
   15100:	mov	r0, r9
   15104:	bl	13768 <fputs@plt+0x1124>
   15108:	subs	r8, r0, #0
   1510c:	beq	1520c <fputs@plt+0x2bc8>
   15110:	cmp	r7, #0
   15114:	beq	1512c <fputs@plt+0x2ae8>
   15118:	mov	r0, r7
   1511c:	add	r1, r8, #19
   15120:	bl	125cc <strcmp@plt>
   15124:	cmp	r0, #0
   15128:	bne	15100 <fputs@plt+0x2abc>
   1512c:	mov	r0, r9
   15130:	mov	r1, r8
   15134:	ldr	r2, [r5, #112]	; 0x70
   15138:	bl	18d10 <fputs@plt+0x66cc>
   1513c:	cmp	r0, #0
   15140:	beq	15100 <fputs@plt+0x2abc>
   15144:	ldr	r3, [sl, #164]	; 0xa4
   15148:	mov	r0, sp
   1514c:	ldrb	r3, [r3, #4]
   15150:	tst	r3, #4
   15154:	add	r3, r8, #19
   15158:	beq	151b0 <fputs@plt+0x2b6c>
   1515c:	mov	r1, r6
   15160:	mov	r2, r5
   15164:	bl	13a94 <fputs@plt+0x1450>
   15168:	cmp	r0, #0
   1516c:	bne	151a0 <fputs@plt+0x2b5c>
   15170:	cmp	r6, #0
   15174:	beq	1522c <fputs@plt+0x2be8>
   15178:	ldr	r1, [r6, #4]
   1517c:	add	r3, sp, #0
   15180:	str	r3, [r5]
   15184:	mov	r0, sp
   15188:	bl	14138 <fputs@plt+0x1af4>
   1518c:	ldr	r3, [sl, #164]	; 0xa4
   15190:	ldrb	r2, [r3, #4]
   15194:	ubfx	r2, r2, #3, #1
   15198:	cmp	r2, #0
   1519c:	beq	15218 <fputs@plt+0x2bd4>
   151a0:	mov	r0, sp
   151a4:	mov	fp, #0
   151a8:	bl	13608 <fputs@plt+0xfc4>
   151ac:	b	15100 <fputs@plt+0x2abc>
   151b0:	mov	r1, r5
   151b4:	mov	r2, r5
   151b8:	bl	13a94 <fputs@plt+0x1450>
   151bc:	cmp	fp, #0
   151c0:	mov	r8, r0
   151c4:	beq	151dc <fputs@plt+0x2b98>
   151c8:	cmp	r6, #0
   151cc:	mov	r0, r5
   151d0:	ldrne	r1, [r6, #4]
   151d4:	moveq	r1, r6
   151d8:	bl	14138 <fputs@plt+0x1af4>
   151dc:	cmp	r8, #0
   151e0:	bne	151a0 <fputs@plt+0x2b5c>
   151e4:	ldr	r3, [sl, #164]	; 0xa4
   151e8:	ldrb	r3, [r3, #4]
   151ec:	tst	r3, #8
   151f0:	bne	151a0 <fputs@plt+0x2b5c>
   151f4:	mov	r2, r8
   151f8:	mov	r0, sp
   151fc:	mov	r3, r8
   15200:	mov	r1, r5
   15204:	bl	1505c <fputs@plt+0x2a18>
   15208:	b	151a0 <fputs@plt+0x2b5c>
   1520c:	mov	r0, r9
   15210:	bl	123c8 <closedir@plt>
   15214:	b	150a8 <fputs@plt+0x2a64>
   15218:	mov	r0, r5
   1521c:	mov	r3, r2
   15220:	mov	r1, sp
   15224:	bl	1505c <fputs@plt+0x2a18>
   15228:	b	151a0 <fputs@plt+0x2b5c>
   1522c:	ldr	r3, [sp, #208]	; 0xd0
   15230:	cmp	r3, #0
   15234:	bne	151a0 <fputs@plt+0x2b5c>
   15238:	add	r3, sp, #0
   1523c:	mov	r1, r6
   15240:	str	r3, [r5]
   15244:	b	15184 <fputs@plt+0x2b40>
   15248:	bl	12434 <__stack_chk_fail@plt>
   1524c:	movw	r1, #56560	; 0xdcf0
   15250:	mov	r2, #5
   15254:	movt	r1, #1
   15258:	bl	121e8 <dcgettext@plt>
   1525c:	mov	r1, r0
   15260:	mov	r0, #1
   15264:	bl	12020 <err@plt>
   15268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1526c:	movw	r8, #63016	; 0xf628
   15270:	movt	r8, #2
   15274:	sub	sp, sp, #8448	; 0x2100
   15278:	sub	sp, sp, #12
   1527c:	mov	r6, r0
   15280:	ldr	r3, [r8]
   15284:	add	ip, sp, #8192	; 0x2000
   15288:	mov	r1, #0
   1528c:	add	r0, sp, #16
   15290:	mov	r2, #240	; 0xf0
   15294:	str	r3, [ip, #260]	; 0x104
   15298:	bl	12104 <memset@plt>
   1529c:	cmp	r6, #0
   152a0:	beq	15468 <fputs@plt+0x2e24>
   152a4:	movw	r9, #63040	; 0xf640
   152a8:	movt	r9, #2
   152ac:	ldr	r3, [r9, #164]	; 0xa4
   152b0:	ldrb	r3, [r3, #4]
   152b4:	tst	r3, #8
   152b8:	bne	15410 <fputs@plt+0x2dcc>
   152bc:	tst	r3, #4
   152c0:	beq	15434 <fputs@plt+0x2df0>
   152c4:	ldr	r3, [r6, #212]	; 0xd4
   152c8:	cmp	r3, #0
   152cc:	movwne	r4, #55692	; 0xd98c
   152d0:	movtne	r4, #1
   152d4:	beq	15410 <fputs@plt+0x2dcc>
   152d8:	add	r0, r6, #128	; 0x80
   152dc:	mov	r1, r4
   152e0:	bl	18c94 <fputs@plt+0x6650>
   152e4:	subs	r5, r0, #0
   152e8:	beq	15410 <fputs@plt+0x2dcc>
   152ec:	movw	r3, #56604	; 0xdd1c
   152f0:	movt	r3, #1
   152f4:	str	r3, [sp]
   152f8:	mov	r1, #4096	; 0x1000
   152fc:	ldr	r2, [r6, #140]	; 0x8c
   15300:	mov	r3, r1
   15304:	str	r4, [sp, #8]
   15308:	add	r0, sp, #260	; 0x104
   1530c:	mov	sl, #0
   15310:	movw	fp, #4095	; 0xfff
   15314:	str	r2, [sp, #4]
   15318:	mov	r2, #1
   1531c:	bl	12368 <__snprintf_chk@plt>
   15320:	add	r3, sp, #4352	; 0x1100
   15324:	add	r3, r3, #8
   15328:	sub	r7, r3, #4
   1532c:	b	153ac <fputs@plt+0x2d68>
   15330:	add	r4, r4, #19
   15334:	mov	r0, r5
   15338:	bl	12374 <dirfd@plt>
   1533c:	mov	r3, r7
   15340:	str	fp, [sp]
   15344:	mov	r2, r4
   15348:	add	r1, sp, #260	; 0x104
   1534c:	bl	159b0 <fputs@plt+0x336c>
   15350:	subs	r3, r0, #0
   15354:	blt	1544c <fputs@plt+0x2e08>
   15358:	mov	r0, r7
   1535c:	mov	r1, #47	; 0x2f
   15360:	strb	sl, [r7, r3]
   15364:	bl	1211c <strrchr@plt>
   15368:	cmp	r0, #0
   1536c:	beq	1544c <fputs@plt+0x2e08>
   15370:	strb	sl, [r0]
   15374:	mov	r1, #47	; 0x2f
   15378:	mov	r0, r7
   1537c:	bl	1211c <strrchr@plt>
   15380:	cmp	r0, #0
   15384:	beq	1544c <fputs@plt+0x2e08>
   15388:	mov	r1, #0
   1538c:	add	r3, r0, #1
   15390:	mov	r2, r1
   15394:	add	r0, sp, #16
   15398:	bl	13a94 <fputs@plt+0x1450>
   1539c:	cmp	r0, #0
   153a0:	beq	1544c <fputs@plt+0x2e08>
   153a4:	add	r0, sp, #16
   153a8:	bl	13608 <fputs@plt+0xfc4>
   153ac:	mov	r0, r5
   153b0:	bl	13768 <fputs@plt+0x1124>
   153b4:	subs	r4, r0, #0
   153b8:	mov	r0, r5
   153bc:	beq	1540c <fputs@plt+0x2dc8>
   153c0:	mov	r2, #0
   153c4:	mov	r1, r4
   153c8:	bl	18d10 <fputs@plt+0x66cc>
   153cc:	subs	r2, r0, #0
   153d0:	bne	15330 <fputs@plt+0x2cec>
   153d4:	add	r3, r4, #19
   153d8:	add	r0, sp, #16
   153dc:	mov	r1, r6
   153e0:	bl	13a94 <fputs@plt+0x1450>
   153e4:	subs	r3, r0, #0
   153e8:	bne	153a4 <fputs@plt+0x2d60>
   153ec:	ldr	r2, [r9, #164]	; 0xa4
   153f0:	add	r0, sp, #16
   153f4:	mov	r1, r6
   153f8:	ldrb	r2, [r2, #4]
   153fc:	eor	r2, r2, #4
   15400:	ubfx	r2, r2, #2, #1
   15404:	bl	1505c <fputs@plt+0x2a18>
   15408:	b	153a4 <fputs@plt+0x2d60>
   1540c:	bl	123c8 <closedir@plt>
   15410:	add	ip, sp, #8192	; 0x2000
   15414:	mov	r0, #0
   15418:	ldr	r2, [ip, #260]	; 0x104
   1541c:	ldr	r3, [r8]
   15420:	cmp	r2, r3
   15424:	bne	15464 <fputs@plt+0x2e20>
   15428:	add	sp, sp, #8448	; 0x2100
   1542c:	add	sp, sp, #12
   15430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15434:	ldr	r3, [r6, #208]	; 0xd0
   15438:	cmp	r3, #0
   1543c:	beq	15410 <fputs@plt+0x2dcc>
   15440:	movw	r4, #55684	; 0xd984
   15444:	movt	r4, #1
   15448:	b	152d8 <fputs@plt+0x2c94>
   1544c:	mov	r3, r4
   15450:	add	r0, sp, #16
   15454:	mov	r1, r6
   15458:	mov	r2, #1
   1545c:	bl	1505c <fputs@plt+0x2a18>
   15460:	b	153a4 <fputs@plt+0x2d60>
   15464:	bl	12434 <__stack_chk_fail@plt>
   15468:	movw	r0, #55496	; 0xd8c8
   1546c:	movw	r1, #55272	; 0xd7e8
   15470:	movt	r0, #1
   15474:	movt	r1, #1
   15478:	movw	r2, #1165	; 0x48d
   1547c:	ldr	r3, [pc]	; 15484 <fputs@plt+0x2e40>
   15480:	bl	12164 <__assert_fail@plt>
   15484:	andeq	sp, r1, r8, asr #32
   15488:	push	{r4, r5, r6, r7, r8, r9, lr}
   1548c:	movw	r6, #63016	; 0xf628
   15490:	movt	r6, #2
   15494:	sub	sp, sp, #252	; 0xfc
   15498:	mov	r1, #0
   1549c:	mov	r2, #240	; 0xf0
   154a0:	ldr	r3, [r6]
   154a4:	mov	r0, sp
   154a8:	str	r3, [sp, #244]	; 0xf4
   154ac:	bl	12104 <memset@plt>
   154b0:	movw	r0, #56612	; 0xdd24
   154b4:	movt	r0, #1
   154b8:	bl	12014 <opendir@plt>
   154bc:	subs	r4, r0, #0
   154c0:	beq	155ec <fputs@plt+0x2fa8>
   154c4:	movw	r5, #63040	; 0xf640
   154c8:	movt	r5, #2
   154cc:	add	r7, r5, #1200	; 0x4b0
   154d0:	add	r8, r5, #184	; 0xb8
   154d4:	add	r7, r7, #8
   154d8:	b	154e4 <fputs@plt+0x2ea0>
   154dc:	mov	r0, sp
   154e0:	bl	13608 <fputs@plt+0xfc4>
   154e4:	mov	r0, r4
   154e8:	bl	13768 <fputs@plt+0x1124>
   154ec:	subs	r9, r0, #0
   154f0:	beq	155b4 <fputs@plt+0x2f70>
   154f4:	mov	r1, #0
   154f8:	add	r3, r9, #19
   154fc:	mov	r2, r1
   15500:	mov	r0, sp
   15504:	bl	13a94 <fputs@plt+0x1450>
   15508:	cmp	r0, #0
   1550c:	bne	154dc <fputs@plt+0x2e98>
   15510:	ldr	r0, [r5, #184]	; 0xb8
   15514:	ldr	r1, [sp, #216]	; 0xd8
   15518:	cmp	r0, #255	; 0xff
   1551c:	bhi	155f4 <fputs@plt+0x2fb0>
   15520:	cmp	r0, #0
   15524:	beq	15544 <fputs@plt+0x2f00>
   15528:	ldr	r3, [pc, #256]	; 15630 <fputs@plt+0x2fec>
   1552c:	add	r0, r8, r0, lsl #2
   15530:	ldr	r2, [r3, #4]!
   15534:	cmp	r1, r2
   15538:	beq	154dc <fputs@plt+0x2e98>
   1553c:	cmp	r3, r0
   15540:	bne	15530 <fputs@plt+0x2eec>
   15544:	ldr	r0, [r5, #2236]	; 0x8bc
   15548:	cmp	r0, #255	; 0xff
   1554c:	bhi	15614 <fputs@plt+0x2fd0>
   15550:	cmp	r0, #0
   15554:	beq	15578 <fputs@plt+0x2f34>
   15558:	ldr	r3, [pc, #212]	; 15634 <fputs@plt+0x2ff0>
   1555c:	add	r0, r7, r0, lsl #2
   15560:	b	1556c <fputs@plt+0x2f28>
   15564:	cmp	r3, r0
   15568:	beq	154dc <fputs@plt+0x2e98>
   1556c:	ldr	r2, [r3, #4]!
   15570:	cmp	r1, r2
   15574:	bne	15564 <fputs@plt+0x2f20>
   15578:	ldr	r3, [r5, #164]	; 0xa4
   1557c:	ldrb	r3, [r3, #4]
   15580:	tst	r3, #4
   15584:	bne	155d8 <fputs@plt+0x2f94>
   15588:	ldr	r1, [sp, #212]	; 0xd4
   1558c:	cmp	r1, #0
   15590:	movle	r1, #0
   15594:	movgt	r1, #1
   15598:	cmp	r1, #0
   1559c:	bne	154dc <fputs@plt+0x2e98>
   155a0:	mov	r0, sp
   155a4:	mov	r3, r1
   155a8:	mov	r2, #1
   155ac:	bl	1505c <fputs@plt+0x2a18>
   155b0:	b	154dc <fputs@plt+0x2e98>
   155b4:	mov	r0, r4
   155b8:	bl	123c8 <closedir@plt>
   155bc:	mov	r0, r9
   155c0:	ldr	r2, [sp, #244]	; 0xf4
   155c4:	ldr	r3, [r6]
   155c8:	cmp	r2, r3
   155cc:	bne	15610 <fputs@plt+0x2fcc>
   155d0:	add	sp, sp, #252	; 0xfc
   155d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   155d8:	ldr	r1, [sp, #208]	; 0xd0
   155dc:	cmp	r1, #0
   155e0:	movle	r1, #0
   155e4:	movgt	r1, #1
   155e8:	b	15598 <fputs@plt+0x2f54>
   155ec:	mov	r0, #1
   155f0:	b	155c0 <fputs@plt+0x2f7c>
   155f4:	movw	r0, #56624	; 0xdd30
   155f8:	movw	r1, #55272	; 0xd7e8
   155fc:	movt	r0, #1
   15600:	movt	r1, #1
   15604:	mov	r2, #230	; 0xe6
   15608:	ldr	r3, [pc, #40]	; 15638 <fputs@plt+0x2ff4>
   1560c:	bl	12164 <__assert_fail@plt>
   15610:	bl	12434 <__stack_chk_fail@plt>
   15614:	movw	r0, #56792	; 0xddd8
   15618:	movw	r1, #55272	; 0xd7e8
   1561c:	movt	r0, #1
   15620:	movt	r1, #1
   15624:	mov	r2, #245	; 0xf5
   15628:	ldr	r3, [pc, #12]	; 1563c <fputs@plt+0x2ff8>
   1562c:	bl	12164 <__assert_fail@plt>
   15630:	strdeq	pc, [r2], -r8
   15634:	strdeq	pc, [r2], -r8
   15638:	andeq	sp, r1, r4, asr r0
   1563c:	andeq	sp, r1, r4, rrx
   15640:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15644:	movw	r6, #63016	; 0xf628
   15648:	movt	r6, #2
   1564c:	sub	sp, sp, #8768	; 0x2240
   15650:	sub	sp, sp, #32
   15654:	mov	r9, r0
   15658:	ldr	r3, [r6]
   1565c:	add	ip, sp, #8192	; 0x2000
   15660:	mov	r1, #0
   15664:	mov	r2, #240	; 0xf0
   15668:	add	r0, sp, #120	; 0x78
   1566c:	movw	r7, #56744	; 0xdda8
   15670:	str	r3, [ip, #604]	; 0x25c
   15674:	bl	12104 <memset@plt>
   15678:	mov	r1, #0
   1567c:	mov	r2, #240	; 0xf0
   15680:	add	r0, sp, #360	; 0x168
   15684:	movt	r7, #65535	; 0xffff
   15688:	bl	12104 <memset@plt>
   1568c:	add	r3, sp, #8768	; 0x2240
   15690:	add	r3, r3, #32
   15694:	add	r2, sp, #16
   15698:	mov	r1, r9
   1569c:	mov	r0, #3
   156a0:	mov	r4, #0
   156a4:	mov	r5, #0
   156a8:	strd	r4, [r3, r7]
   156ac:	bl	123f8 <__xstat64@plt>
   156b0:	subs	sl, r0, #0
   156b4:	bne	156c8 <fputs@plt+0x3084>
   156b8:	ldr	r3, [sp, #32]
   156bc:	and	r3, r3, #61440	; 0xf000
   156c0:	cmp	r3, #24576	; 0x6000
   156c4:	beq	15708 <fputs@plt+0x30c4>
   156c8:	mov	r2, #5
   156cc:	movw	r1, #56960	; 0xde80
   156d0:	mov	r0, #0
   156d4:	movt	r1, #1
   156d8:	bl	121e8 <dcgettext@plt>
   156dc:	mov	r1, r9
   156e0:	bl	1250c <warnx@plt>
   156e4:	mov	r0, #1
   156e8:	add	r3, sp, #8192	; 0x2000
   156ec:	ldr	r2, [r3, #604]	; 0x25c
   156f0:	ldr	r3, [r6]
   156f4:	cmp	r2, r3
   156f8:	bne	15954 <fputs@plt+0x3310>
   156fc:	add	sp, sp, #8768	; 0x2240
   15700:	add	sp, sp, #32
   15704:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15708:	ldrd	r0, [sp, #48]	; 0x30
   1570c:	mov	r3, #4096	; 0x1000
   15710:	add	r2, sp, #600	; 0x258
   15714:	bl	187a4 <fputs@plt+0x6160>
   15718:	cmp	r0, #0
   1571c:	beq	158f8 <fputs@plt+0x32b4>
   15720:	add	r1, sp, #4672	; 0x1240
   15724:	add	r0, sp, #600	; 0x258
   15728:	movw	r2, #4095	; 0xfff
   1572c:	add	r1, r1, #24
   15730:	bl	124c4 <readlink@plt>
   15734:	cmp	r0, #0
   15738:	blt	15934 <fputs@plt+0x32f0>
   1573c:	add	ip, sp, #8768	; 0x2240
   15740:	movw	r3, #61432	; 0xeff8
   15744:	add	ip, ip, #32
   15748:	movt	r3, #65535	; 0xffff
   1574c:	add	r2, ip, r0
   15750:	add	r0, sp, #4672	; 0x1240
   15754:	add	r0, r0, #24
   15758:	mov	r1, #47	; 0x2f
   1575c:	strb	sl, [r2, r3]
   15760:	bl	1211c <strrchr@plt>
   15764:	adds	r0, r0, #1
   15768:	beq	15910 <fputs@plt+0x32cc>
   1576c:	bl	1259c <__strdup@plt>
   15770:	subs	r8, r0, #0
   15774:	beq	15958 <fputs@plt+0x3314>
   15778:	movw	r1, #55512	; 0xd8d8
   1577c:	mov	r2, #3
   15780:	movt	r1, #1
   15784:	bl	1256c <strncmp@plt>
   15788:	cmp	r0, #0
   1578c:	bne	157c8 <fputs@plt+0x3184>
   15790:	mov	r1, #0
   15794:	add	r0, sp, #360	; 0x168
   15798:	mov	r2, r1
   1579c:	mov	r3, r8
   157a0:	bl	13a94 <fputs@plt+0x1450>
   157a4:	subs	r4, r0, #0
   157a8:	movne	r4, #1
   157ac:	beq	15848 <fputs@plt+0x3204>
   157b0:	mov	r0, r8
   157b4:	bl	121b8 <free@plt>
   157b8:	add	r0, sp, #360	; 0x168
   157bc:	bl	13608 <fputs@plt+0xfc4>
   157c0:	mov	r0, r4
   157c4:	b	156e8 <fputs@plt+0x30a4>
   157c8:	add	r2, sp, #4672	; 0x1240
   157cc:	ldrd	r0, [sp, #48]	; 0x30
   157d0:	add	r3, sp, #8
   157d4:	add	r2, r2, #24
   157d8:	str	r3, [sp]
   157dc:	movw	r3, #4097	; 0x1001
   157e0:	bl	123a4 <blkid_devno_to_wholedisk@plt>
   157e4:	subs	r1, r0, #0
   157e8:	bne	158d4 <fputs@plt+0x3290>
   157ec:	add	ip, sp, #8768	; 0x2240
   157f0:	ldrd	r4, [sp, #48]	; 0x30
   157f4:	add	ip, ip, #32
   157f8:	ldrd	r2, [ip, r7]
   157fc:	cmp	r5, r3
   15800:	cmpeq	r4, r2
   15804:	beq	15790 <fputs@plt+0x314c>
   15808:	add	r3, sp, #4672	; 0x1240
   1580c:	mov	r2, r1
   15810:	add	r3, r3, #24
   15814:	add	r0, sp, #120	; 0x78
   15818:	bl	13a94 <fputs@plt+0x1450>
   1581c:	cmp	r0, #0
   15820:	beq	15874 <fputs@plt+0x3230>
   15824:	mov	r4, #1
   15828:	mov	r0, r8
   1582c:	bl	121b8 <free@plt>
   15830:	add	r0, sp, #360	; 0x168
   15834:	bl	13608 <fputs@plt+0xfc4>
   15838:	add	r0, sp, #120	; 0x78
   1583c:	bl	13608 <fputs@plt+0xfc4>
   15840:	mov	r0, r4
   15844:	b	156e8 <fputs@plt+0x30a4>
   15848:	movw	r3, #63040	; 0xf640
   1584c:	movt	r3, #2
   15850:	add	r0, sp, #360	; 0x168
   15854:	mov	r1, r4
   15858:	ldr	r2, [r3, #164]	; 0xa4
   1585c:	mov	r3, r4
   15860:	ldrb	r2, [r2, #4]
   15864:	eor	r2, r2, #4
   15868:	ubfx	r2, r2, #2, #1
   1586c:	bl	1505c <fputs@plt+0x2a18>
   15870:	b	157b0 <fputs@plt+0x316c>
   15874:	add	r1, sp, #120	; 0x78
   15878:	add	r0, sp, #360	; 0x168
   1587c:	mov	r3, r8
   15880:	mov	r2, r1
   15884:	bl	13a94 <fputs@plt+0x1450>
   15888:	subs	ip, r0, #0
   1588c:	bne	15824 <fputs@plt+0x31e0>
   15890:	movw	r3, #63040	; 0xf640
   15894:	movt	r3, #2
   15898:	ldr	r3, [r3, #164]	; 0xa4
   1589c:	ldrb	r4, [r3, #4]
   158a0:	ubfx	r4, r4, #2, #1
   158a4:	cmp	r4, #0
   158a8:	addne	r0, sp, #120	; 0x78
   158ac:	addne	r1, sp, #360	; 0x168
   158b0:	movne	r2, #1
   158b4:	ldrne	r3, [sp, #472]	; 0x1d8
   158b8:	addeq	r0, sp, #360	; 0x168
   158bc:	addeq	r1, sp, #120	; 0x78
   158c0:	moveq	r2, #1
   158c4:	moveq	r3, r4
   158c8:	movne	r4, ip
   158cc:	bl	1505c <fputs@plt+0x2a18>
   158d0:	b	15828 <fputs@plt+0x31e4>
   158d4:	mov	r2, #5
   158d8:	mov	r0, sl
   158dc:	movw	r1, #57076	; 0xdef4
   158e0:	movt	r1, #1
   158e4:	bl	121e8 <dcgettext@plt>
   158e8:	mov	r1, r9
   158ec:	bl	123d4 <warn@plt>
   158f0:	mov	r0, #1
   158f4:	b	156e8 <fputs@plt+0x30a4>
   158f8:	movw	r1, #56984	; 0xde98
   158fc:	mov	r2, #5
   15900:	movt	r1, #1
   15904:	bl	121e8 <dcgettext@plt>
   15908:	mov	r1, r9
   1590c:	bl	123d4 <warn@plt>
   15910:	mov	r2, #5
   15914:	movw	r1, #57044	; 0xded4
   15918:	mov	r0, #0
   1591c:	movt	r1, #1
   15920:	bl	121e8 <dcgettext@plt>
   15924:	mov	r1, r9
   15928:	bl	123d4 <warn@plt>
   1592c:	mov	r0, #1
   15930:	b	156e8 <fputs@plt+0x30a4>
   15934:	mov	r0, sl
   15938:	mov	r2, #5
   1593c:	movw	r1, #57020	; 0xdebc
   15940:	movt	r1, #1
   15944:	bl	121e8 <dcgettext@plt>
   15948:	add	r1, sp, #600	; 0x258
   1594c:	bl	123d4 <warn@plt>
   15950:	b	15910 <fputs@plt+0x32cc>
   15954:	bl	12434 <__stack_chk_fail@plt>
   15958:	bl	12650 <fputs@plt+0xc>
   1595c:	ldr	ip, [sp]
   15960:	mov	r1, r0
   15964:	mov	r0, #3
   15968:	cmp	ip, #0
   1596c:	movne	ip, #256	; 0x100
   15970:	moveq	ip, #0
   15974:	str	ip, [sp]
   15978:	b	125b4 <__fxstatat64@plt>
   1597c:	mov	r1, r2
   15980:	mov	r2, r3
   15984:	b	12038 <__openat64_2@plt>
   15988:	push	{r4, lr}
   1598c:	ldr	r4, [sp, #8]
   15990:	bl	1597c <fputs@plt+0x3338>
   15994:	cmp	r0, #0
   15998:	blt	159a8 <fputs@plt+0x3364>
   1599c:	mov	r1, r4
   159a0:	pop	{r4, lr}
   159a4:	b	12380 <fdopen@plt>
   159a8:	mov	r0, #0
   159ac:	pop	{r4, pc}
   159b0:	mov	r1, r2
   159b4:	mov	r2, r3
   159b8:	ldr	r3, [sp]
   159bc:	b	12248 <readlinkat@plt>
   159c0:	ldr	r1, [pc, #112]	; 15a38 <fputs@plt+0x33f4>
   159c4:	ldr	ip, [pc, #112]	; 15a3c <fputs@plt+0x33f8>
   159c8:	add	r1, pc, r1
   159cc:	push	{r4, r5, r6, lr}
   159d0:	sub	sp, sp, #16
   159d4:	ldr	r4, [r1, ip]
   159d8:	mov	r5, #0
   159dc:	str	r5, [sp]
   159e0:	mov	r6, r0
   159e4:	ldr	r1, [r4]
   159e8:	str	r1, [sp, #12]
   159ec:	bl	12410 <lseek64@plt>
   159f0:	cmp	r0, #0
   159f4:	sbcs	r3, r1, #0
   159f8:	movlt	r0, r5
   159fc:	blt	15a1c <fputs@plt+0x33d8>
   15a00:	mov	r0, r6
   15a04:	add	r1, sp, #11
   15a08:	mov	r2, #1
   15a0c:	bl	121c4 <read@plt>
   15a10:	cmp	r0, r5
   15a14:	movle	r0, #0
   15a18:	movgt	r0, #1
   15a1c:	ldr	r2, [sp, #12]
   15a20:	ldr	r3, [r4]
   15a24:	cmp	r2, r3
   15a28:	bne	15a34 <fputs@plt+0x33f0>
   15a2c:	add	sp, sp, #16
   15a30:	pop	{r4, r5, r6, pc}
   15a34:	bl	12434 <__stack_chk_fail@plt>
   15a38:	andeq	r9, r1, r0, lsr r6
   15a3c:	andeq	r0, r0, ip, lsr r2
   15a40:	ldr	r3, [pc, #100]	; 15aac <fputs@plt+0x3468>
   15a44:	mov	r1, r0
   15a48:	ldr	ip, [pc, #96]	; 15ab0 <fputs@plt+0x346c>
   15a4c:	mov	r0, #3
   15a50:	add	r3, pc, r3
   15a54:	push	{r4, lr}
   15a58:	sub	sp, sp, #112	; 0x70
   15a5c:	ldr	r4, [r3, ip]
   15a60:	mov	r2, sp
   15a64:	ldr	r3, [r4]
   15a68:	str	r3, [sp, #108]	; 0x6c
   15a6c:	bl	1217c <__fxstat64@plt>
   15a70:	cmp	r0, #0
   15a74:	movne	r0, #0
   15a78:	bne	15a90 <fputs@plt+0x344c>
   15a7c:	ldr	r0, [sp, #16]
   15a80:	and	r0, r0, #61440	; 0xf000
   15a84:	subs	r3, r0, #24576	; 0x6000
   15a88:	rsbs	r0, r3, #0
   15a8c:	adcs	r0, r0, r3
   15a90:	ldr	r2, [sp, #108]	; 0x6c
   15a94:	ldr	r3, [r4]
   15a98:	cmp	r2, r3
   15a9c:	bne	15aa8 <fputs@plt+0x3464>
   15aa0:	add	sp, sp, #112	; 0x70
   15aa4:	pop	{r4, pc}
   15aa8:	bl	12434 <__stack_chk_fail@plt>
   15aac:	andeq	r9, r1, r8, lsr #11
   15ab0:	andeq	r0, r0, ip, lsr r2
   15ab4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ab8:	mov	sl, r0
   15abc:	mov	r6, #0
   15ac0:	mov	r7, #0
   15ac4:	mov	r4, #1024	; 0x400
   15ac8:	mov	r5, #0
   15acc:	mvn	r8, #0
   15ad0:	mvn	r9, #0
   15ad4:	b	15b10 <fputs@plt+0x34cc>
   15ad8:	cmp	r5, r9
   15adc:	cmpeq	r4, r8
   15ae0:	beq	15b94 <fputs@plt+0x3550>
   15ae4:	mvn	r0, #1
   15ae8:	mvn	r1, #-2147483648	; 0x80000000
   15aec:	cmp	r5, r1
   15af0:	cmpeq	r4, r0
   15af4:	bhi	15b00 <fputs@plt+0x34bc>
   15af8:	adds	r2, r4, r4
   15afc:	adc	r3, r5, r5
   15b00:	mov	r6, r4
   15b04:	mov	r7, r5
   15b08:	mov	r4, r2
   15b0c:	mov	r5, r3
   15b10:	mov	r2, r4
   15b14:	mov	r3, r5
   15b18:	mov	r0, sl
   15b1c:	bl	159c0 <fputs@plt+0x337c>
   15b20:	mvn	r2, #0
   15b24:	mvn	r3, #0
   15b28:	cmp	r0, #0
   15b2c:	bne	15ad8 <fputs@plt+0x3494>
   15b30:	b	15b64 <fputs@plt+0x3520>
   15b34:	adds	r8, r6, r4
   15b38:	adc	r9, r7, r5
   15b3c:	lsrs	r9, r9, #1
   15b40:	rrx	r8, r8
   15b44:	mov	r2, r8
   15b48:	mov	r3, r9
   15b4c:	bl	159c0 <fputs@plt+0x337c>
   15b50:	cmp	r0, #0
   15b54:	movne	r6, r8
   15b58:	movne	r7, r9
   15b5c:	moveq	r4, r8
   15b60:	moveq	r5, r9
   15b64:	subs	r2, r4, #1
   15b68:	mov	r0, sl
   15b6c:	sbc	r3, r5, #0
   15b70:	cmp	r7, r3
   15b74:	cmpeq	r6, r2
   15b78:	bcc	15b34 <fputs@plt+0x34f0>
   15b7c:	mov	r2, #0
   15b80:	mov	r3, #0
   15b84:	bl	159c0 <fputs@plt+0x337c>
   15b88:	adds	r0, r6, #1
   15b8c:	adc	r1, r7, #0
   15b90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b94:	mov	r0, r4
   15b98:	mov	r1, r5
   15b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ba0:	ldr	r3, [pc, #340]	; 15cfc <fputs@plt+0x36b8>
   15ba4:	ldr	r2, [pc, #340]	; 15d00 <fputs@plt+0x36bc>
   15ba8:	add	r3, pc, r3
   15bac:	push	{r4, r5, r6, r7, lr}
   15bb0:	sub	sp, sp, #116	; 0x74
   15bb4:	ldr	r6, [r3, r2]
   15bb8:	mov	r4, r0
   15bbc:	mov	r7, r1
   15bc0:	ldr	r3, [r6]
   15bc4:	str	r3, [sp, #108]	; 0x6c
   15bc8:	bl	1b6a8 <fputs@plt+0x9064>
   15bcc:	movw	r3, #1535	; 0x5ff
   15bd0:	movt	r3, #2
   15bd4:	cmp	r0, r3
   15bd8:	sub	r2, r0, #132096	; 0x20400
   15bdc:	sub	r2, r2, #18
   15be0:	movle	ip, #0
   15be4:	movgt	ip, #1
   15be8:	cmp	r2, #237	; 0xed
   15bec:	movhi	r3, ip
   15bf0:	orrls	r3, ip, #1
   15bf4:	cmp	r3, #0
   15bf8:	beq	15c38 <fputs@plt+0x35f4>
   15bfc:	movw	r1, #4722	; 0x1272
   15c00:	mov	r0, r4
   15c04:	movt	r1, #32772	; 0x8004
   15c08:	mov	r2, r7
   15c0c:	bl	12230 <ioctl@plt>
   15c10:	cmp	r0, #0
   15c14:	movge	r3, #0
   15c18:	blt	15c38 <fputs@plt+0x35f4>
   15c1c:	ldr	r2, [sp, #108]	; 0x6c
   15c20:	mov	r0, r3
   15c24:	ldr	r3, [r6]
   15c28:	cmp	r2, r3
   15c2c:	bne	15cf8 <fputs@plt+0x36b4>
   15c30:	add	sp, sp, #116	; 0x74
   15c34:	pop	{r4, r5, r6, r7, pc}
   15c38:	mov	r0, r4
   15c3c:	movw	r1, #4704	; 0x1260
   15c40:	mov	r2, sp
   15c44:	bl	12230 <ioctl@plt>
   15c48:	cmp	r0, #0
   15c4c:	blt	15c6c <fputs@plt+0x3628>
   15c50:	ldr	r2, [sp]
   15c54:	mov	r3, #0
   15c58:	lsr	r1, r2, #23
   15c5c:	lsl	r2, r2, #9
   15c60:	str	r1, [r7, #4]
   15c64:	str	r2, [r7]
   15c68:	b	15c1c <fputs@plt+0x35d8>
   15c6c:	mov	r1, #516	; 0x204
   15c70:	mov	r0, r4
   15c74:	movt	r1, #32796	; 0x801c
   15c78:	mov	r2, sp
   15c7c:	bl	12230 <ioctl@plt>
   15c80:	cmp	r0, #0
   15c84:	blt	15ca4 <fputs@plt+0x3660>
   15c88:	ldr	r1, [sp]
   15c8c:	mov	r2, #0
   15c90:	mov	r3, r2
   15c94:	str	r2, [r7, #4]
   15c98:	lsl	r2, r1, #9
   15c9c:	str	r2, [r7]
   15ca0:	b	15c1c <fputs@plt+0x35d8>
   15ca4:	mov	r2, sp
   15ca8:	mov	r0, #3
   15cac:	mov	r1, r4
   15cb0:	bl	1217c <__fxstat64@plt>
   15cb4:	ldr	r2, [sp, #16]
   15cb8:	and	r2, r2, #61440	; 0xf000
   15cbc:	subs	r3, r0, #0
   15cc0:	bne	15ccc <fputs@plt+0x3688>
   15cc4:	cmp	r2, #32768	; 0x8000
   15cc8:	beq	15cec <fputs@plt+0x36a8>
   15ccc:	cmp	r2, #24576	; 0x6000
   15cd0:	mvnne	r3, #0
   15cd4:	bne	15c1c <fputs@plt+0x35d8>
   15cd8:	mov	r0, r4
   15cdc:	bl	15ab4 <fputs@plt+0x3470>
   15ce0:	mov	r3, #0
   15ce4:	strd	r0, [r7]
   15ce8:	b	15c1c <fputs@plt+0x35d8>
   15cec:	ldrd	r4, [sp, #48]	; 0x30
   15cf0:	strd	r4, [r7]
   15cf4:	b	15c1c <fputs@plt+0x35d8>
   15cf8:	bl	12434 <__stack_chk_fail@plt>
   15cfc:	andeq	r9, r1, r0, asr r4
   15d00:	andeq	r0, r0, ip, lsr r2
   15d04:	ldr	r3, [pc, #100]	; 15d70 <fputs@plt+0x372c>
   15d08:	ldr	r2, [pc, #100]	; 15d74 <fputs@plt+0x3730>
   15d0c:	add	r3, pc, r3
   15d10:	push	{r4, r5, lr}
   15d14:	sub	sp, sp, #20
   15d18:	ldr	r4, [r3, r2]
   15d1c:	mov	r5, r1
   15d20:	mov	r1, sp
   15d24:	ldr	r3, [r4]
   15d28:	str	r3, [sp, #12]
   15d2c:	bl	15ba0 <fputs@plt+0x355c>
   15d30:	cmp	r0, #0
   15d34:	ldreq	r3, [sp]
   15d38:	mvnne	r0, #0
   15d3c:	ldreq	r2, [sp, #4]
   15d40:	lsreq	r3, r3, #9
   15d44:	orreq	r3, r3, r2, lsl #23
   15d48:	lsreq	r2, r2, #9
   15d4c:	streq	r3, [r5]
   15d50:	streq	r2, [r5, #4]
   15d54:	ldr	r2, [sp, #12]
   15d58:	ldr	r3, [r4]
   15d5c:	cmp	r2, r3
   15d60:	bne	15d6c <fputs@plt+0x3728>
   15d64:	add	sp, sp, #20
   15d68:	pop	{r4, r5, pc}
   15d6c:	bl	12434 <__stack_chk_fail@plt>
   15d70:	andeq	r9, r1, ip, ror #5
   15d74:	andeq	r0, r0, ip, lsr r2
   15d78:	mov	r2, r1
   15d7c:	movw	r1, #4712	; 0x1268
   15d80:	push	{r3, lr}
   15d84:	bl	12230 <ioctl@plt>
   15d88:	asr	r0, r0, #31
   15d8c:	pop	{r3, pc}
   15d90:	push	{lr}		; (str lr, [sp, #-4]!)
   15d94:	sub	sp, sp, #12
   15d98:	add	r2, sp, #8
   15d9c:	str	r1, [r2, #-4]!
   15da0:	movw	r1, #4731	; 0x127b
   15da4:	bl	12230 <ioctl@plt>
   15da8:	asr	r0, r0, #31
   15dac:	add	sp, sp, #12
   15db0:	pop	{pc}		; (ldr pc, [sp], #4)
   15db4:	ldr	r3, [pc, #88]	; 15e14 <fputs@plt+0x37d0>
   15db8:	movw	r1, #4730	; 0x127a
   15dbc:	ldr	ip, [pc, #84]	; 15e18 <fputs@plt+0x37d4>
   15dc0:	add	r3, pc, r3
   15dc4:	push	{r4, lr}
   15dc8:	sub	sp, sp, #8
   15dcc:	ldr	r4, [r3, ip]
   15dd0:	mov	r2, sp
   15dd4:	ldr	r3, [r4]
   15dd8:	str	r3, [sp, #4]
   15ddc:	bl	12230 <ioctl@plt>
   15de0:	cmp	r0, #0
   15de4:	movlt	r0, #0
   15de8:	blt	15df8 <fputs@plt+0x37b4>
   15dec:	ldr	r0, [sp]
   15df0:	adds	r0, r0, #0
   15df4:	movne	r0, #1
   15df8:	ldr	r2, [sp, #4]
   15dfc:	ldr	r3, [r4]
   15e00:	cmp	r2, r3
   15e04:	bne	15e10 <fputs@plt+0x37cc>
   15e08:	add	sp, sp, #8
   15e0c:	pop	{r4, pc}
   15e10:	bl	12434 <__stack_chk_fail@plt>
   15e14:	andeq	r9, r1, r8, lsr r2
   15e18:	andeq	r0, r0, ip, lsr r2
   15e1c:	push	{r3, lr}
   15e20:	movw	r1, #21297	; 0x5331
   15e24:	mov	r2, #0
   15e28:	bl	12230 <ioctl@plt>
   15e2c:	bic	r0, r0, r0, asr #31
   15e30:	pop	{r3, pc}
   15e34:	ldr	r3, [pc, #96]	; 15e9c <fputs@plt+0x3858>
   15e38:	ldr	ip, [pc, #96]	; 15ea0 <fputs@plt+0x385c>
   15e3c:	add	r3, pc, r3
   15e40:	push	{r4, r5, r6, lr}
   15e44:	sub	sp, sp, #16
   15e48:	ldr	r4, [r3, ip]
   15e4c:	mov	r6, r1
   15e50:	mov	r5, r2
   15e54:	movw	r1, #769	; 0x301
   15e58:	add	r2, sp, #4
   15e5c:	ldr	r3, [r4]
   15e60:	str	r3, [sp, #12]
   15e64:	bl	12230 <ioctl@plt>
   15e68:	cmp	r0, #0
   15e6c:	ldrbeq	r2, [sp, #4]
   15e70:	mvnne	r0, #0
   15e74:	ldrbeq	r3, [sp, #5]
   15e78:	streq	r2, [r6]
   15e7c:	streq	r3, [r5]
   15e80:	ldr	r2, [sp, #12]
   15e84:	ldr	r3, [r4]
   15e88:	cmp	r2, r3
   15e8c:	bne	15e98 <fputs@plt+0x3854>
   15e90:	add	sp, sp, #16
   15e94:	pop	{r4, r5, r6, pc}
   15e98:	bl	12434 <__stack_chk_fail@plt>
   15e9c:			; <UNDEFINED> instruction: 0x000191bc
   15ea0:	andeq	r0, r0, ip, lsr r2
   15ea4:	cmp	r0, #127	; 0x7f
   15ea8:	addls	pc, pc, r0, lsl #2
   15eac:	b	16164 <fputs@plt+0x3b20>
   15eb0:	b	16158 <fputs@plt+0x3b14>
   15eb4:	b	160b0 <fputs@plt+0x3a6c>
   15eb8:	b	160bc <fputs@plt+0x3a78>
   15ebc:	b	160c8 <fputs@plt+0x3a84>
   15ec0:	b	160d4 <fputs@plt+0x3a90>
   15ec4:	b	160e0 <fputs@plt+0x3a9c>
   15ec8:	b	160ec <fputs@plt+0x3aa8>
   15ecc:	b	160f8 <fputs@plt+0x3ab4>
   15ed0:	b	16104 <fputs@plt+0x3ac0>
   15ed4:	b	16110 <fputs@plt+0x3acc>
   15ed8:	b	16164 <fputs@plt+0x3b20>
   15edc:	b	16164 <fputs@plt+0x3b20>
   15ee0:	b	1611c <fputs@plt+0x3ad8>
   15ee4:	b	16128 <fputs@plt+0x3ae4>
   15ee8:	b	16134 <fputs@plt+0x3af0>
   15eec:	b	16164 <fputs@plt+0x3b20>
   15ef0:	b	16164 <fputs@plt+0x3b20>
   15ef4:	b	16140 <fputs@plt+0x3afc>
   15ef8:	b	16164 <fputs@plt+0x3b20>
   15efc:	b	16164 <fputs@plt+0x3b20>
   15f00:	b	16164 <fputs@plt+0x3b20>
   15f04:	b	16164 <fputs@plt+0x3b20>
   15f08:	b	16164 <fputs@plt+0x3b20>
   15f0c:	b	16164 <fputs@plt+0x3b20>
   15f10:	b	16164 <fputs@plt+0x3b20>
   15f14:	b	16164 <fputs@plt+0x3b20>
   15f18:	b	16164 <fputs@plt+0x3b20>
   15f1c:	b	16164 <fputs@plt+0x3b20>
   15f20:	b	16164 <fputs@plt+0x3b20>
   15f24:	b	16164 <fputs@plt+0x3b20>
   15f28:	b	16164 <fputs@plt+0x3b20>
   15f2c:	b	16164 <fputs@plt+0x3b20>
   15f30:	b	16164 <fputs@plt+0x3b20>
   15f34:	b	16164 <fputs@plt+0x3b20>
   15f38:	b	16164 <fputs@plt+0x3b20>
   15f3c:	b	16164 <fputs@plt+0x3b20>
   15f40:	b	16164 <fputs@plt+0x3b20>
   15f44:	b	16164 <fputs@plt+0x3b20>
   15f48:	b	16164 <fputs@plt+0x3b20>
   15f4c:	b	16164 <fputs@plt+0x3b20>
   15f50:	b	16164 <fputs@plt+0x3b20>
   15f54:	b	16164 <fputs@plt+0x3b20>
   15f58:	b	16164 <fputs@plt+0x3b20>
   15f5c:	b	16164 <fputs@plt+0x3b20>
   15f60:	b	16164 <fputs@plt+0x3b20>
   15f64:	b	16164 <fputs@plt+0x3b20>
   15f68:	b	16164 <fputs@plt+0x3b20>
   15f6c:	b	16164 <fputs@plt+0x3b20>
   15f70:	b	16164 <fputs@plt+0x3b20>
   15f74:	b	16164 <fputs@plt+0x3b20>
   15f78:	b	16164 <fputs@plt+0x3b20>
   15f7c:	b	16164 <fputs@plt+0x3b20>
   15f80:	b	16164 <fputs@plt+0x3b20>
   15f84:	b	16164 <fputs@plt+0x3b20>
   15f88:	b	16164 <fputs@plt+0x3b20>
   15f8c:	b	16164 <fputs@plt+0x3b20>
   15f90:	b	16164 <fputs@plt+0x3b20>
   15f94:	b	16164 <fputs@plt+0x3b20>
   15f98:	b	16164 <fputs@plt+0x3b20>
   15f9c:	b	16164 <fputs@plt+0x3b20>
   15fa0:	b	16164 <fputs@plt+0x3b20>
   15fa4:	b	16164 <fputs@plt+0x3b20>
   15fa8:	b	16164 <fputs@plt+0x3b20>
   15fac:	b	16164 <fputs@plt+0x3b20>
   15fb0:	b	16164 <fputs@plt+0x3b20>
   15fb4:	b	16164 <fputs@plt+0x3b20>
   15fb8:	b	16164 <fputs@plt+0x3b20>
   15fbc:	b	16164 <fputs@plt+0x3b20>
   15fc0:	b	16164 <fputs@plt+0x3b20>
   15fc4:	b	16164 <fputs@plt+0x3b20>
   15fc8:	b	16164 <fputs@plt+0x3b20>
   15fcc:	b	16164 <fputs@plt+0x3b20>
   15fd0:	b	16164 <fputs@plt+0x3b20>
   15fd4:	b	16164 <fputs@plt+0x3b20>
   15fd8:	b	16164 <fputs@plt+0x3b20>
   15fdc:	b	16164 <fputs@plt+0x3b20>
   15fe0:	b	16164 <fputs@plt+0x3b20>
   15fe4:	b	16164 <fputs@plt+0x3b20>
   15fe8:	b	16164 <fputs@plt+0x3b20>
   15fec:	b	16164 <fputs@plt+0x3b20>
   15ff0:	b	16164 <fputs@plt+0x3b20>
   15ff4:	b	16164 <fputs@plt+0x3b20>
   15ff8:	b	16164 <fputs@plt+0x3b20>
   15ffc:	b	16164 <fputs@plt+0x3b20>
   16000:	b	16164 <fputs@plt+0x3b20>
   16004:	b	16164 <fputs@plt+0x3b20>
   16008:	b	16164 <fputs@plt+0x3b20>
   1600c:	b	16164 <fputs@plt+0x3b20>
   16010:	b	16164 <fputs@plt+0x3b20>
   16014:	b	16164 <fputs@plt+0x3b20>
   16018:	b	16164 <fputs@plt+0x3b20>
   1601c:	b	16164 <fputs@plt+0x3b20>
   16020:	b	16164 <fputs@plt+0x3b20>
   16024:	b	16164 <fputs@plt+0x3b20>
   16028:	b	16164 <fputs@plt+0x3b20>
   1602c:	b	16164 <fputs@plt+0x3b20>
   16030:	b	16164 <fputs@plt+0x3b20>
   16034:	b	16164 <fputs@plt+0x3b20>
   16038:	b	16164 <fputs@plt+0x3b20>
   1603c:	b	16164 <fputs@plt+0x3b20>
   16040:	b	16164 <fputs@plt+0x3b20>
   16044:	b	16164 <fputs@plt+0x3b20>
   16048:	b	16164 <fputs@plt+0x3b20>
   1604c:	b	16164 <fputs@plt+0x3b20>
   16050:	b	16164 <fputs@plt+0x3b20>
   16054:	b	16164 <fputs@plt+0x3b20>
   16058:	b	16164 <fputs@plt+0x3b20>
   1605c:	b	16164 <fputs@plt+0x3b20>
   16060:	b	16164 <fputs@plt+0x3b20>
   16064:	b	16164 <fputs@plt+0x3b20>
   16068:	b	16164 <fputs@plt+0x3b20>
   1606c:	b	16164 <fputs@plt+0x3b20>
   16070:	b	16164 <fputs@plt+0x3b20>
   16074:	b	16164 <fputs@plt+0x3b20>
   16078:	b	16164 <fputs@plt+0x3b20>
   1607c:	b	16164 <fputs@plt+0x3b20>
   16080:	b	16164 <fputs@plt+0x3b20>
   16084:	b	16164 <fputs@plt+0x3b20>
   16088:	b	16164 <fputs@plt+0x3b20>
   1608c:	b	16164 <fputs@plt+0x3b20>
   16090:	b	16164 <fputs@plt+0x3b20>
   16094:	b	16164 <fputs@plt+0x3b20>
   16098:	b	16164 <fputs@plt+0x3b20>
   1609c:	b	16164 <fputs@plt+0x3b20>
   160a0:	b	16164 <fputs@plt+0x3b20>
   160a4:	b	16164 <fputs@plt+0x3b20>
   160a8:	b	16164 <fputs@plt+0x3b20>
   160ac:	b	1614c <fputs@plt+0x3b08>
   160b0:	ldr	r0, [pc, #180]	; 1616c <fputs@plt+0x3b28>
   160b4:	add	r0, pc, r0
   160b8:	bx	lr
   160bc:	ldr	r0, [pc, #172]	; 16170 <fputs@plt+0x3b2c>
   160c0:	add	r0, pc, r0
   160c4:	bx	lr
   160c8:	ldr	r0, [pc, #164]	; 16174 <fputs@plt+0x3b30>
   160cc:	add	r0, pc, r0
   160d0:	bx	lr
   160d4:	ldr	r0, [pc, #156]	; 16178 <fputs@plt+0x3b34>
   160d8:	add	r0, pc, r0
   160dc:	bx	lr
   160e0:	ldr	r0, [pc, #148]	; 1617c <fputs@plt+0x3b38>
   160e4:	add	r0, pc, r0
   160e8:	bx	lr
   160ec:	ldr	r0, [pc, #140]	; 16180 <fputs@plt+0x3b3c>
   160f0:	add	r0, pc, r0
   160f4:	bx	lr
   160f8:	ldr	r0, [pc, #132]	; 16184 <fputs@plt+0x3b40>
   160fc:	add	r0, pc, r0
   16100:	bx	lr
   16104:	ldr	r0, [pc, #124]	; 16188 <fputs@plt+0x3b44>
   16108:	add	r0, pc, r0
   1610c:	bx	lr
   16110:	ldr	r0, [pc, #116]	; 1618c <fputs@plt+0x3b48>
   16114:	add	r0, pc, r0
   16118:	bx	lr
   1611c:	ldr	r0, [pc, #108]	; 16190 <fputs@plt+0x3b4c>
   16120:	add	r0, pc, r0
   16124:	bx	lr
   16128:	ldr	r0, [pc, #100]	; 16194 <fputs@plt+0x3b50>
   1612c:	add	r0, pc, r0
   16130:	bx	lr
   16134:	ldr	r0, [pc, #92]	; 16198 <fputs@plt+0x3b54>
   16138:	add	r0, pc, r0
   1613c:	bx	lr
   16140:	ldr	r0, [pc, #84]	; 1619c <fputs@plt+0x3b58>
   16144:	add	r0, pc, r0
   16148:	bx	lr
   1614c:	ldr	r0, [pc, #76]	; 161a0 <fputs@plt+0x3b5c>
   16150:	add	r0, pc, r0
   16154:	bx	lr
   16158:	ldr	r0, [pc, #68]	; 161a4 <fputs@plt+0x3b60>
   1615c:	add	r0, pc, r0
   16160:	bx	lr
   16164:	mov	r0, #0
   16168:	bx	lr
   1616c:	strdeq	r8, [r0], -r4
   16170:	strdeq	r8, [r0], -r0
   16174:	andeq	r8, r0, ip, ror #9
   16178:	andeq	r8, r0, ip, ror #9
   1617c:	andeq	r8, r0, r8, ror #9
   16180:	andeq	r8, r0, r0, ror #9
   16184:	ldrdeq	r8, [r0], -ip
   16188:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1618c:	ldrdeq	r8, [r0], -r4
   16190:	ldrdeq	r8, [r0], -r0
   16194:	andeq	r8, r0, ip, asr #9
   16198:	andeq	r8, r0, ip, asr #9
   1619c:	andeq	r8, r0, r4, asr #9
   161a0:			; <UNDEFINED> instruction: 0x000084bc
   161a4:	andeq	r7, r0, ip, asr #17
   161a8:	ldr	r3, [pc, #196]	; 16274 <fputs@plt+0x3c30>
   161ac:	ldr	r2, [pc, #196]	; 16278 <fputs@plt+0x3c34>
   161b0:	add	r3, pc, r3
   161b4:	push	{r4, r5, r6, r7, lr}
   161b8:	sub	sp, sp, #116	; 0x74
   161bc:	ldr	r4, [r3, r2]
   161c0:	mov	r5, r1
   161c4:	mov	r1, #47	; 0x2f
   161c8:	mov	r6, r0
   161cc:	ldr	r3, [r4]
   161d0:	str	r3, [sp, #108]	; 0x6c
   161d4:	bl	1211c <strrchr@plt>
   161d8:	mov	r3, #0
   161dc:	str	r3, [r5]
   161e0:	subs	r7, r0, #0
   161e4:	beq	1621c <fputs@plt+0x3bd8>
   161e8:	ldr	r1, [pc, #140]	; 1627c <fputs@plt+0x3c38>
   161ec:	mov	r2, #4
   161f0:	add	r1, pc, r1
   161f4:	bl	1256c <strncmp@plt>
   161f8:	cmp	r0, #0
   161fc:	bne	1621c <fputs@plt+0x3bd8>
   16200:	bl	123ec <__ctype_b_loc@plt>
   16204:	ldrsb	r3, [r7, #4]
   16208:	lsl	r3, r3, #1
   1620c:	ldr	r2, [r0]
   16210:	ldrh	r3, [r2, r3]
   16214:	tst	r3, #2048	; 0x800
   16218:	bne	16238 <fputs@plt+0x3bf4>
   1621c:	mov	r0, #0
   16220:	ldr	r2, [sp, #108]	; 0x6c
   16224:	ldr	r3, [r4]
   16228:	cmp	r2, r3
   1622c:	bne	16270 <fputs@plt+0x3c2c>
   16230:	add	sp, sp, #116	; 0x74
   16234:	pop	{r4, r5, r6, r7, pc}
   16238:	mov	r1, r6
   1623c:	mov	r0, #3
   16240:	mov	r2, sp
   16244:	bl	123f8 <__xstat64@plt>
   16248:	cmp	r0, #0
   1624c:	bne	1621c <fputs@plt+0x3bd8>
   16250:	ldr	r3, [sp, #16]
   16254:	and	r3, r3, #61440	; 0xf000
   16258:	cmp	r3, #24576	; 0x6000
   1625c:	bne	1621c <fputs@plt+0x3bd8>
   16260:	mov	r0, #1
   16264:	add	r7, r7, r0
   16268:	str	r7, [r5]
   1626c:	b	16220 <fputs@plt+0x3bdc>
   16270:	bl	12434 <__stack_chk_fail@plt>
   16274:	andeq	r8, r1, r8, asr #28
   16278:	andeq	r0, r0, ip, lsr r2
   1627c:	andeq	r8, r0, r4, lsr #8
   16280:	ldr	r3, [pc, #748]	; 16574 <fputs@plt+0x3f30>
   16284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16288:	mov	r5, r0
   1628c:	ldr	r0, [pc, #740]	; 16578 <fputs@plt+0x3f34>
   16290:	add	r3, pc, r3
   16294:	sub	sp, sp, #4096	; 0x1000
   16298:	ldrsb	r2, [r5]
   1629c:	sub	sp, sp, #36	; 0x24
   162a0:	mov	r6, r1
   162a4:	ldr	r0, [r3, r0]
   162a8:	add	r1, sp, #8192	; 0x2000
   162ac:	cmp	r2, #47	; 0x2f
   162b0:	ldr	r3, [r0]
   162b4:	str	r0, [sp, #12]
   162b8:	str	r3, [r1, #-4068]	; 0xfffff01c
   162bc:	beq	1652c <fputs@plt+0x3ee8>
   162c0:	mov	r0, r6
   162c4:	movw	r1, #4095	; 0xfff
   162c8:	bl	12464 <getcwd@plt>
   162cc:	cmp	r0, #0
   162d0:	beq	1647c <fputs@plt+0x3e38>
   162d4:	mov	r0, r6
   162d8:	bl	1226c <strlen@plt>
   162dc:	add	r4, r6, r0
   162e0:	ldrsb	r3, [r4, #-1]
   162e4:	cmp	r3, #47	; 0x2f
   162e8:	addne	r4, r4, #1
   162ec:	movne	r3, #47	; 0x2f
   162f0:	strbne	r3, [r6, r0]
   162f4:	movw	fp, #61432	; 0xeff8
   162f8:	movt	fp, #65535	; 0xffff
   162fc:	ldrb	r2, [r5]
   16300:	mov	r7, #0
   16304:	add	r3, r6, #1
   16308:	add	r9, sp, #24
   1630c:	str	r3, [sp, #20]
   16310:	mov	r3, fp
   16314:	mov	sl, r7
   16318:	mov	fp, r7
   1631c:	mov	r7, r3
   16320:	cmp	r2, #0
   16324:	beq	1644c <fputs@plt+0x3e08>
   16328:	sxtb	r1, r2
   1632c:	cmp	r1, #47	; 0x2f
   16330:	beq	164c0 <fputs@plt+0x3e7c>
   16334:	cmp	r1, #46	; 0x2e
   16338:	beq	164cc <fputs@plt+0x3e88>
   1633c:	rsb	r1, r6, r4
   16340:	cmp	r1, #4096	; 0x1000
   16344:	bge	164a0 <fputs@plt+0x3e5c>
   16348:	add	r1, r5, #1
   1634c:	b	1635c <fputs@plt+0x3d18>
   16350:	rsb	r3, r6, r4
   16354:	cmp	r3, #4096	; 0x1000
   16358:	bge	164a0 <fputs@plt+0x3e5c>
   1635c:	strb	r2, [r4], #1
   16360:	mov	r5, r1
   16364:	ldrb	r2, [r1], #1
   16368:	cmp	r2, #47	; 0x2f
   1636c:	cmpne	r2, #0
   16370:	moveq	ip, #0
   16374:	movne	ip, #1
   16378:	bne	16350 <fputs@plt+0x3d0c>
   1637c:	cmp	sl, #256	; 0x100
   16380:	str	r5, [sp, #16]
   16384:	add	sl, sl, #1
   16388:	str	sl, [sp, #8]
   1638c:	bgt	16554 <fputs@plt+0x3f10>
   16390:	strb	ip, [r4]
   16394:	mov	r0, r6
   16398:	mov	r1, r9
   1639c:	mov	r2, #4096	; 0x1000
   163a0:	str	ip, [sp, #4]
   163a4:	bl	124c4 <readlink@plt>
   163a8:	ldr	ip, [sp, #4]
   163ac:	subs	r8, r0, #0
   163b0:	blt	1653c <fputs@plt+0x3ef8>
   163b4:	add	r1, sp, #4096	; 0x1000
   163b8:	strb	ip, [r9, r8]
   163bc:	add	r1, r1, #32
   163c0:	ldrb	r1, [r1, r7]
   163c4:	sxtb	r2, r1
   163c8:	cmp	r2, #47	; 0x2f
   163cc:	moveq	sl, r6
   163d0:	beq	163ec <fputs@plt+0x3da8>
   163d4:	sub	r4, r4, #1
   163d8:	mov	sl, r4
   163dc:	sub	r4, r4, #1
   163e0:	ldrsb	r3, [sl]
   163e4:	cmp	r3, #47	; 0x2f
   163e8:	bne	163d8 <fputs@plt+0x3d94>
   163ec:	mov	r0, r5
   163f0:	bl	1226c <strlen@plt>
   163f4:	mov	r4, r0
   163f8:	add	r0, r8, r0
   163fc:	add	r0, r0, #1
   16400:	bl	1241c <malloc@plt>
   16404:	subs	r5, r0, #0
   16408:	beq	16568 <fputs@plt+0x3f24>
   1640c:	mov	r1, r9
   16410:	mov	r2, r8
   16414:	bl	12290 <memcpy@plt>
   16418:	ldr	r1, [sp, #16]
   1641c:	add	r2, r4, #1
   16420:	add	r0, r5, r8
   16424:	bl	12290 <memcpy@plt>
   16428:	mov	r0, fp
   1642c:	bl	121b8 <free@plt>
   16430:	mov	fp, r5
   16434:	mov	r3, #47	; 0x2f
   16438:	add	r4, sl, #1
   1643c:	strb	r3, [sl]
   16440:	ldr	sl, [sp, #8]
   16444:	ldrb	r2, [r5]
   16448:	b	16320 <fputs@plt+0x3cdc>
   1644c:	add	r3, r6, #1
   16450:	mov	r7, fp
   16454:	cmp	r4, r3
   16458:	beq	16468 <fputs@plt+0x3e24>
   1645c:	ldrsb	r3, [r4, #-1]
   16460:	cmp	r3, #47	; 0x2f
   16464:	subeq	r4, r4, #1
   16468:	mov	r0, r7
   1646c:	mov	r3, #0
   16470:	strb	r3, [r4]
   16474:	bl	121b8 <free@plt>
   16478:	mov	r0, r6
   1647c:	add	r1, sp, #8192	; 0x2000
   16480:	ldr	r2, [r1, #-4068]	; 0xfffff01c
   16484:	ldr	r1, [sp, #12]
   16488:	ldr	r3, [r1]
   1648c:	cmp	r2, r3
   16490:	bne	16570 <fputs@plt+0x3f2c>
   16494:	add	sp, sp, #4096	; 0x1000
   16498:	add	sp, sp, #36	; 0x24
   1649c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164a0:	bl	125fc <__errno_location@plt>
   164a4:	mov	r7, fp
   164a8:	mov	r3, #36	; 0x24
   164ac:	str	r3, [r0]
   164b0:	mov	r0, r7
   164b4:	bl	121b8 <free@plt>
   164b8:	mov	r0, #0
   164bc:	b	1647c <fputs@plt+0x3e38>
   164c0:	ldrb	r2, [r5, #1]
   164c4:	add	r5, r5, #1
   164c8:	b	16320 <fputs@plt+0x3cdc>
   164cc:	ldrb	r0, [r5, #1]
   164d0:	sxtb	r1, r0
   164d4:	cmp	r1, #0
   164d8:	cmpne	r1, #47	; 0x2f
   164dc:	addeq	r5, r5, #1
   164e0:	moveq	r2, r0
   164e4:	beq	16320 <fputs@plt+0x3cdc>
   164e8:	cmp	r1, #46	; 0x2e
   164ec:	bne	1633c <fputs@plt+0x3cf8>
   164f0:	ldrb	r1, [r5, #2]
   164f4:	cmp	r1, #0
   164f8:	cmpne	r1, #47	; 0x2f
   164fc:	bne	1633c <fputs@plt+0x3cf8>
   16500:	add	r5, r5, #2
   16504:	ldr	r2, [sp, #20]
   16508:	b	1651c <fputs@plt+0x3ed8>
   1650c:	sub	r4, r4, #1
   16510:	ldrsb	r3, [r4, #-1]
   16514:	cmp	r3, #47	; 0x2f
   16518:	beq	16524 <fputs@plt+0x3ee0>
   1651c:	cmp	r4, r2
   16520:	bhi	1650c <fputs@plt+0x3ec8>
   16524:	mov	r2, r1
   16528:	b	16320 <fputs@plt+0x3cdc>
   1652c:	strb	r2, [r6]
   16530:	add	r5, r5, #1
   16534:	add	r4, r6, #1
   16538:	b	162f4 <fputs@plt+0x3cb0>
   1653c:	bl	125fc <__errno_location@plt>
   16540:	ldr	r2, [r0]
   16544:	cmp	r2, #22
   16548:	bne	16568 <fputs@plt+0x3f24>
   1654c:	mov	sl, r4
   16550:	b	16434 <fputs@plt+0x3df0>
   16554:	bl	125fc <__errno_location@plt>
   16558:	mov	r7, fp
   1655c:	mov	r3, #40	; 0x28
   16560:	str	r3, [r0]
   16564:	b	164b0 <fputs@plt+0x3e6c>
   16568:	mov	r7, fp
   1656c:	b	164b0 <fputs@plt+0x3e6c>
   16570:	bl	12434 <__stack_chk_fail@plt>
   16574:	andeq	r8, r1, r8, ror #26
   16578:	andeq	r0, r0, ip, lsr r2
   1657c:	ldr	r3, [pc, #292]	; 166a8 <fputs@plt+0x4064>
   16580:	cmp	r0, #0
   16584:	ldr	r2, [pc, #288]	; 166ac <fputs@plt+0x4068>
   16588:	add	r3, pc, r3
   1658c:	push	{r4, r5, r6, r7, lr}
   16590:	sub	sp, sp, #532	; 0x214
   16594:	ldr	r5, [r3, r2]
   16598:	ldr	r3, [r5]
   1659c:	str	r3, [sp, #524]	; 0x20c
   165a0:	beq	1668c <fputs@plt+0x4048>
   165a4:	ldrsb	r3, [r0]
   165a8:	cmp	r3, #0
   165ac:	beq	1668c <fputs@plt+0x4048>
   165b0:	add	r4, sp, #12
   165b4:	ldr	r2, [pc, #244]	; 166b0 <fputs@plt+0x406c>
   165b8:	mov	r1, #256	; 0x100
   165bc:	str	r0, [sp, #4]
   165c0:	mov	r3, r1
   165c4:	add	r2, pc, r2
   165c8:	mov	r0, r4
   165cc:	str	r2, [sp]
   165d0:	mov	r2, #1
   165d4:	bl	12368 <__snprintf_chk@plt>
   165d8:	ldr	r1, [pc, #212]	; 166b4 <fputs@plt+0x4070>
   165dc:	mov	r0, r4
   165e0:	add	r1, pc, r1
   165e4:	bl	122a8 <fopen64@plt>
   165e8:	subs	r7, r0, #0
   165ec:	beq	1668c <fputs@plt+0x4048>
   165f0:	add	r6, sp, #268	; 0x10c
   165f4:	mov	r1, #256	; 0x100
   165f8:	mov	r2, r7
   165fc:	mov	r0, r6
   16600:	bl	1208c <fgets@plt>
   16604:	cmp	r0, #0
   16608:	beq	16664 <fputs@plt+0x4020>
   1660c:	mov	r0, r6
   16610:	bl	1226c <strlen@plt>
   16614:	cmp	r0, #1
   16618:	bls	16664 <fputs@plt+0x4020>
   1661c:	add	r3, sp, #528	; 0x210
   16620:	ldr	r2, [pc, #144]	; 166b8 <fputs@plt+0x4074>
   16624:	add	ip, r3, r0
   16628:	mov	r1, #256	; 0x100
   1662c:	str	r6, [sp, #4]
   16630:	mov	r3, r1
   16634:	mov	r6, #0
   16638:	add	r2, pc, r2
   1663c:	mov	r0, r4
   16640:	str	r2, [sp]
   16644:	mov	r2, #1
   16648:	strb	r6, [ip, #-261]	; 0xfffffefb
   1664c:	bl	12368 <__snprintf_chk@plt>
   16650:	mov	r0, r4
   16654:	mov	r1, r6
   16658:	bl	1220c <access@plt>
   1665c:	cmp	r0, r6
   16660:	beq	16694 <fputs@plt+0x4050>
   16664:	mov	r4, #0
   16668:	mov	r0, r7
   1666c:	bl	12080 <fclose@plt>
   16670:	mov	r0, r4
   16674:	ldr	r2, [sp, #524]	; 0x20c
   16678:	ldr	r3, [r5]
   1667c:	cmp	r2, r3
   16680:	bne	166a4 <fputs@plt+0x4060>
   16684:	add	sp, sp, #532	; 0x214
   16688:	pop	{r4, r5, r6, r7, pc}
   1668c:	mov	r0, #0
   16690:	b	16674 <fputs@plt+0x4030>
   16694:	mov	r0, r4
   16698:	bl	1259c <__strdup@plt>
   1669c:	mov	r4, r0
   166a0:	b	16668 <fputs@plt+0x4024>
   166a4:	bl	12434 <__stack_chk_fail@plt>
   166a8:	andeq	r8, r1, r0, ror sl
   166ac:	andeq	r0, r0, ip, lsr r2
   166b0:	andeq	r8, r0, r8, asr r0
   166b4:	andeq	r8, r0, r4, asr r0
   166b8:	andeq	r7, r0, r0, lsr r4
   166bc:	ldr	r3, [pc, #200]	; 1678c <fputs@plt+0x4148>
   166c0:	ldr	r2, [pc, #200]	; 16790 <fputs@plt+0x414c>
   166c4:	add	r3, pc, r3
   166c8:	push	{r4, r5, r6, r7, lr}
   166cc:	sub	sp, sp, #4096	; 0x1000
   166d0:	ldr	r4, [r3, r2]
   166d4:	sub	sp, sp, #20
   166d8:	add	r2, sp, #8192	; 0x2000
   166dc:	subs	r7, r0, #0
   166e0:	ldr	r3, [r4]
   166e4:	str	r3, [r2, #-4084]	; 0xfffff00c
   166e8:	beq	16780 <fputs@plt+0x413c>
   166ec:	ldrsb	r3, [r7]
   166f0:	cmp	r3, #0
   166f4:	moveq	r0, r3
   166f8:	beq	16748 <fputs@plt+0x4104>
   166fc:	add	r6, sp, #16
   16700:	sub	r5, r6, #8
   16704:	mov	r1, r5
   16708:	bl	16280 <fputs@plt+0x3c3c>
   1670c:	cmp	r0, #0
   16710:	beq	16774 <fputs@plt+0x4130>
   16714:	sub	r1, r6, #12
   16718:	mov	r0, r5
   1671c:	bl	161a8 <fputs@plt+0x3b64>
   16720:	cmp	r0, #0
   16724:	beq	16768 <fputs@plt+0x4124>
   16728:	add	r2, sp, #4096	; 0x1000
   1672c:	movw	r3, #61428	; 0xeff4
   16730:	add	r2, r2, #16
   16734:	movt	r3, #65535	; 0xffff
   16738:	ldr	r0, [r2, r3]
   1673c:	bl	1657c <fputs@plt+0x3f38>
   16740:	cmp	r0, #0
   16744:	beq	16768 <fputs@plt+0x4124>
   16748:	add	r3, sp, #8192	; 0x2000
   1674c:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   16750:	ldr	r3, [r4]
   16754:	cmp	r2, r3
   16758:	bne	16788 <fputs@plt+0x4144>
   1675c:	add	sp, sp, #4096	; 0x1000
   16760:	add	sp, sp, #20
   16764:	pop	{r4, r5, r6, r7, pc}
   16768:	mov	r0, r5
   1676c:	bl	1259c <__strdup@plt>
   16770:	b	16748 <fputs@plt+0x4104>
   16774:	mov	r0, r7
   16778:	bl	1259c <__strdup@plt>
   1677c:	b	16748 <fputs@plt+0x4104>
   16780:	mov	r0, r7
   16784:	b	16748 <fputs@plt+0x4104>
   16788:	bl	12434 <__stack_chk_fail@plt>
   1678c:	andeq	r8, r1, r4, lsr r9
   16790:	andeq	r0, r0, ip, lsr r2
   16794:	ldr	r3, [pc, #320]	; 168dc <fputs@plt+0x4298>
   16798:	ldr	r2, [pc, #320]	; 168e0 <fputs@plt+0x429c>
   1679c:	add	r3, pc, r3
   167a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   167a4:	sub	sp, sp, #4096	; 0x1000
   167a8:	ldr	r4, [r3, r2]
   167ac:	sub	sp, sp, #16
   167b0:	add	r2, sp, #8192	; 0x2000
   167b4:	subs	r5, r0, #0
   167b8:	ldr	r3, [r4]
   167bc:	str	r3, [r2, #-4084]	; 0xfffff00c
   167c0:	beq	168a0 <fputs@plt+0x425c>
   167c4:	ldrsb	r3, [r5]
   167c8:	cmp	r3, #0
   167cc:	beq	168a0 <fputs@plt+0x425c>
   167d0:	bl	11ffc <geteuid@plt>
   167d4:	mov	sl, r0
   167d8:	bl	12338 <getegid@plt>
   167dc:	mov	r8, r0
   167e0:	bl	1262c <getgid@plt>
   167e4:	bl	120f8 <setegid@plt>
   167e8:	cmp	r0, #0
   167ec:	blt	168a0 <fputs@plt+0x425c>
   167f0:	bl	121ac <getuid@plt>
   167f4:	bl	12500 <seteuid@plt>
   167f8:	cmp	r0, #0
   167fc:	blt	168a0 <fputs@plt+0x425c>
   16800:	bl	125fc <__errno_location@plt>
   16804:	add	r7, sp, #16
   16808:	mov	r9, #0
   1680c:	mov	r6, r0
   16810:	mov	r0, r5
   16814:	sub	r5, r7, #8
   16818:	str	r9, [r6]
   1681c:	mov	r1, r5
   16820:	bl	16280 <fputs@plt+0x3c3c>
   16824:	cmp	r0, #0
   16828:	beq	168a8 <fputs@plt+0x4264>
   1682c:	sub	r1, r7, #12
   16830:	mov	r0, r5
   16834:	bl	161a8 <fputs@plt+0x3b64>
   16838:	cmp	r0, r9
   1683c:	bne	168b4 <fputs@plt+0x4270>
   16840:	mov	r0, r5
   16844:	mov	r9, #0
   16848:	bl	1259c <__strdup@plt>
   1684c:	mov	r7, r0
   16850:	mov	r0, r8
   16854:	bl	120f8 <setegid@plt>
   16858:	cmp	r0, #0
   1685c:	blt	16898 <fputs@plt+0x4254>
   16860:	mov	r0, sl
   16864:	bl	12500 <seteuid@plt>
   16868:	cmp	r0, #0
   1686c:	blt	16898 <fputs@plt+0x4254>
   16870:	mov	r0, r7
   16874:	str	r9, [r6]
   16878:	add	r3, sp, #8192	; 0x2000
   1687c:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   16880:	ldr	r3, [r4]
   16884:	cmp	r2, r3
   16888:	bne	168d8 <fputs@plt+0x4294>
   1688c:	add	sp, sp, #4096	; 0x1000
   16890:	add	sp, sp, #16
   16894:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16898:	mov	r0, r7
   1689c:	bl	121b8 <free@plt>
   168a0:	mov	r0, #0
   168a4:	b	16878 <fputs@plt+0x4234>
   168a8:	ldr	r9, [r6]
   168ac:	mov	r7, r0
   168b0:	b	16850 <fputs@plt+0x420c>
   168b4:	add	r2, sp, #4096	; 0x1000
   168b8:	movw	r3, #61428	; 0xeff4
   168bc:	add	r2, r2, #16
   168c0:	movt	r3, #65535	; 0xffff
   168c4:	ldr	r0, [r2, r3]
   168c8:	bl	1657c <fputs@plt+0x3f38>
   168cc:	subs	r7, r0, #0
   168d0:	bne	16850 <fputs@plt+0x420c>
   168d4:	b	16840 <fputs@plt+0x41fc>
   168d8:	bl	12434 <__stack_chk_fail@plt>
   168dc:	andeq	r8, r1, ip, asr r8
   168e0:	andeq	r0, r0, ip, lsr r2
   168e4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   168e8:	subs	r5, r0, #0
   168ec:	beq	169b0 <fputs@plt+0x436c>
   168f0:	bl	1226c <strlen@plt>
   168f4:	lsl	r0, r0, #2
   168f8:	add	r0, r0, #1
   168fc:	bl	1241c <malloc@plt>
   16900:	subs	r9, r0, #0
   16904:	beq	169b0 <fputs@plt+0x436c>
   16908:	ldrb	r6, [r5]
   1690c:	cmp	r6, #0
   16910:	beq	169a8 <fputs@plt+0x4364>
   16914:	ldr	r7, [pc, #156]	; 169b8 <fputs@plt+0x4374>
   16918:	add	r5, r5, #1
   1691c:	mov	r4, r9
   16920:	mov	r8, #92	; 0x5c
   16924:	add	r7, pc, r7
   16928:	b	16970 <fputs@plt+0x432c>
   1692c:	strb	r8, [r4]
   16930:	add	r4, r4, #4
   16934:	ldrsb	r3, [r5, #-1]
   16938:	ubfx	r3, r3, #6, #2
   1693c:	add	r3, r3, #48	; 0x30
   16940:	strb	r3, [r4, #-3]
   16944:	ldrb	r3, [r5, #-1]
   16948:	ubfx	r3, r3, #3, #3
   1694c:	add	r3, r3, #48	; 0x30
   16950:	strb	r3, [r4, #-2]
   16954:	ldrb	r3, [r5, #-1]
   16958:	and	r3, r3, #7
   1695c:	add	r3, r3, #48	; 0x30
   16960:	strb	r3, [r4, #-1]
   16964:	ldrb	r6, [r5], #1
   16968:	cmp	r6, #0
   1696c:	beq	16998 <fputs@plt+0x4354>
   16970:	mov	r0, r7
   16974:	sxtb	r1, r6
   16978:	bl	120c8 <strchr@plt>
   1697c:	cmp	r0, #0
   16980:	bne	1692c <fputs@plt+0x42e8>
   16984:	strb	r6, [r4]
   16988:	add	r4, r4, #1
   1698c:	ldrb	r6, [r5], #1
   16990:	cmp	r6, #0
   16994:	bne	16970 <fputs@plt+0x432c>
   16998:	mov	r3, #0
   1699c:	mov	r0, r9
   169a0:	strb	r3, [r4]
   169a4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   169a8:	mov	r4, r9
   169ac:	b	16998 <fputs@plt+0x4354>
   169b0:	mov	r0, #0
   169b4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   169b8:	andeq	r7, r0, r4, lsl sp
   169bc:	cmp	r0, #0
   169c0:	push	{r4, r5, r6, r7, r8}
   169c4:	beq	16a74 <fputs@plt+0x4430>
   169c8:	add	r1, r1, #1
   169cc:	sub	r2, r2, #1
   169d0:	mov	ip, #0
   169d4:	mov	r6, #8
   169d8:	b	169ec <fputs@plt+0x43a8>
   169dc:	add	r0, r0, #1
   169e0:	add	ip, ip, #1
   169e4:	strb	r3, [r1, #-1]
   169e8:	add	r1, r1, #1
   169ec:	ldrb	r3, [r0]
   169f0:	sub	r4, r1, #1
   169f4:	cmp	r3, #0
   169f8:	beq	16a6c <fputs@plt+0x4428>
   169fc:	cmp	ip, r2
   16a00:	bcs	16a6c <fputs@plt+0x4428>
   16a04:	cmp	r3, #92	; 0x5c
   16a08:	bne	169dc <fputs@plt+0x4398>
   16a0c:	add	r4, ip, #3
   16a10:	cmp	r2, r4
   16a14:	bls	169dc <fputs@plt+0x4398>
   16a18:	ldrb	r4, [r0, #1]
   16a1c:	bic	r5, r4, #7
   16a20:	cmp	r5, #48	; 0x30
   16a24:	bne	169dc <fputs@plt+0x4398>
   16a28:	ldrb	r5, [r0, #2]
   16a2c:	bic	r7, r5, #7
   16a30:	cmp	r7, #48	; 0x30
   16a34:	bne	169dc <fputs@plt+0x4398>
   16a38:	ldrb	r7, [r0, #3]
   16a3c:	bic	r8, r7, #7
   16a40:	cmp	r8, #48	; 0x30
   16a44:	bne	169dc <fputs@plt+0x4398>
   16a48:	and	r3, r4, #7
   16a4c:	and	r5, r5, #7
   16a50:	and	r7, r7, #7
   16a54:	add	r0, r0, #4
   16a58:	smlabb	r3, r6, r3, r5
   16a5c:	add	ip, ip, #4
   16a60:	add	r3, r7, r3, lsl #3
   16a64:	strb	r3, [r1, #-1]
   16a68:	b	169e8 <fputs@plt+0x43a4>
   16a6c:	mov	r3, #0
   16a70:	strb	r3, [r4]
   16a74:	pop	{r4, r5, r6, r7, r8}
   16a78:	bx	lr
   16a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a80:	subs	r7, r0, #0
   16a84:	sub	sp, sp, #12
   16a88:	beq	16b8c <fputs@plt+0x4548>
   16a8c:	add	r4, r1, #1
   16a90:	sub	r8, r2, #1
   16a94:	mov	r6, #0
   16a98:	b	16aac <fputs@plt+0x4468>
   16a9c:	add	r7, r7, #1
   16aa0:	add	r6, r6, #1
   16aa4:	strb	r5, [r4, #-1]
   16aa8:	add	r4, r4, #1
   16aac:	ldrb	r5, [r7]
   16ab0:	sub	r3, r4, #1
   16ab4:	cmp	r5, #0
   16ab8:	beq	16b84 <fputs@plt+0x4540>
   16abc:	cmp	r6, r8
   16ac0:	bcs	16b84 <fputs@plt+0x4540>
   16ac4:	cmp	r5, #92	; 0x5c
   16ac8:	bne	16a9c <fputs@plt+0x4458>
   16acc:	add	r3, r6, #3
   16ad0:	cmp	r8, r3
   16ad4:	bls	16a9c <fputs@plt+0x4458>
   16ad8:	ldrsb	r3, [r7, #1]
   16adc:	cmp	r3, #120	; 0x78
   16ae0:	bne	16a9c <fputs@plt+0x4458>
   16ae4:	bl	123ec <__ctype_b_loc@plt>
   16ae8:	ldrb	r1, [r7, #2]
   16aec:	lsl	r9, r1, #24
   16af0:	asr	r2, r9, #23
   16af4:	ldr	r3, [r0]
   16af8:	ldrh	r2, [r3, r2]
   16afc:	tst	r2, #4096	; 0x1000
   16b00:	beq	16a9c <fputs@plt+0x4458>
   16b04:	ldrb	ip, [r7, #3]
   16b08:	lsl	fp, ip, #24
   16b0c:	asr	r0, fp, #23
   16b10:	ldrh	sl, [r3, r0]
   16b14:	tst	sl, #4096	; 0x1000
   16b18:	beq	16a9c <fputs@plt+0x4458>
   16b1c:	tst	r2, #2048	; 0x800
   16b20:	lslne	r1, r1, #4
   16b24:	andne	r5, r1, #240	; 0xf0
   16b28:	bne	16b4c <fputs@plt+0x4508>
   16b2c:	str	ip, [sp, #4]
   16b30:	bl	122c0 <__ctype_tolower_loc@plt>
   16b34:	ldr	ip, [sp, #4]
   16b38:	ldr	r3, [r0]
   16b3c:	ldr	r5, [r3, r9, asr #22]
   16b40:	sub	r5, r5, #87	; 0x57
   16b44:	lsl	r5, r5, #4
   16b48:	uxtb	r5, r5
   16b4c:	tst	sl, #2048	; 0x800
   16b50:	subne	r3, ip, #48	; 0x30
   16b54:	uxtbne	r3, r3
   16b58:	bne	16b70 <fputs@plt+0x452c>
   16b5c:	bl	122c0 <__ctype_tolower_loc@plt>
   16b60:	ldr	r3, [r0]
   16b64:	ldr	r3, [r3, fp, asr #22]
   16b68:	sub	r3, r3, #87	; 0x57
   16b6c:	uxtb	r3, r3
   16b70:	orr	r5, r3, r5
   16b74:	add	r7, r7, #4
   16b78:	strb	r5, [r4, #-1]
   16b7c:	add	r6, r6, #4
   16b80:	b	16aa8 <fputs@plt+0x4464>
   16b84:	mov	r2, #0
   16b88:	strb	r2, [r3]
   16b8c:	add	sp, sp, #12
   16b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b94:	push	{r4, r5, r6, lr}
   16b98:	subs	r4, r0, #0
   16b9c:	beq	16c18 <fputs@plt+0x45d4>
   16ba0:	ldrb	r3, [r4]
   16ba4:	tst	r3, #223	; 0xdf
   16ba8:	beq	16c20 <fputs@plt+0x45dc>
   16bac:	cmp	r3, #9
   16bb0:	beq	16c20 <fputs@plt+0x45dc>
   16bb4:	add	ip, r4, #1
   16bb8:	b	16bc4 <fputs@plt+0x4580>
   16bbc:	cmp	r2, #9
   16bc0:	beq	16bd8 <fputs@plt+0x4594>
   16bc4:	mov	r3, ip
   16bc8:	add	ip, ip, #1
   16bcc:	ldrb	r2, [r3]
   16bd0:	tst	r2, #223	; 0xdf
   16bd4:	bne	16bbc <fputs@plt+0x4578>
   16bd8:	rsb	r5, r4, r3
   16bdc:	add	r5, r5, #1
   16be0:	cmp	r1, #0
   16be4:	strne	r3, [r1]
   16be8:	cmp	r4, r3
   16bec:	beq	16c18 <fputs@plt+0x45d4>
   16bf0:	mov	r0, r5
   16bf4:	bl	1241c <malloc@plt>
   16bf8:	subs	r6, r0, #0
   16bfc:	beq	16c18 <fputs@plt+0x45d4>
   16c00:	mov	r0, r4
   16c04:	mov	r2, r5
   16c08:	mov	r1, r6
   16c0c:	bl	169bc <fputs@plt+0x4378>
   16c10:	mov	r0, r6
   16c14:	pop	{r4, r5, r6, pc}
   16c18:	mov	r0, #0
   16c1c:	pop	{r4, r5, r6, pc}
   16c20:	mov	r3, r4
   16c24:	mov	r5, #1
   16c28:	b	16be0 <fputs@plt+0x459c>
   16c2c:	andeq	r0, r0, r0
   16c30:	cmp	r0, #0
   16c34:	mov	r3, #0
   16c38:	str	r3, [r1]
   16c3c:	bxeq	lr
   16c40:	ldrb	r2, [r0]
   16c44:	cmp	r2, #47	; 0x2f
   16c48:	bne	16c90 <fputs@plt+0x464c>
   16c4c:	ldrsb	r3, [r0, #1]
   16c50:	cmp	r3, #47	; 0x2f
   16c54:	bne	16c98 <fputs@plt+0x4654>
   16c58:	mov	r3, r0
   16c5c:	b	16c7c <fputs@plt+0x4638>
   16c60:	ldrb	r2, [r3, #1]
   16c64:	mov	r3, r0
   16c68:	cmp	r2, #47	; 0x2f
   16c6c:	bne	16c90 <fputs@plt+0x464c>
   16c70:	ldrsb	r2, [r0, #1]
   16c74:	cmp	r2, #47	; 0x2f
   16c78:	bne	16c98 <fputs@plt+0x4654>
   16c7c:	cmn	r3, #1
   16c80:	add	r0, r0, #1
   16c84:	bne	16c60 <fputs@plt+0x461c>
   16c88:	mov	r0, #0
   16c8c:	bx	lr
   16c90:	cmp	r2, #0
   16c94:	beq	16c88 <fputs@plt+0x4644>
   16c98:	mov	r3, #1
   16c9c:	str	r3, [r1]
   16ca0:	ldrsb	r3, [r0, #1]
   16ca4:	cmp	r3, #47	; 0x2f
   16ca8:	cmpne	r3, #0
   16cac:	bxeq	lr
   16cb0:	mov	r3, #2
   16cb4:	str	r3, [r1]
   16cb8:	ldrb	r2, [r0, r3]
   16cbc:	add	r3, r3, #1
   16cc0:	cmp	r2, #47	; 0x2f
   16cc4:	cmpne	r2, #0
   16cc8:	bne	16cb4 <fputs@plt+0x4670>
   16ccc:	bx	lr
   16cd0:	push	{r3, r4, r5, r6, r7, lr}
   16cd4:	mov	r7, r1
   16cd8:	ldrb	r3, [r0]
   16cdc:	cmp	r3, #0
   16ce0:	beq	16d58 <fputs@plt+0x4714>
   16ce4:	mov	r4, #0
   16ce8:	mov	r5, r0
   16cec:	mov	r6, r4
   16cf0:	b	16d20 <fputs@plt+0x46dc>
   16cf4:	cmp	r3, #92	; 0x5c
   16cf8:	mov	r0, r7
   16cfc:	mov	r1, r3
   16d00:	beq	16d48 <fputs@plt+0x4704>
   16d04:	bl	120c8 <strchr@plt>
   16d08:	cmp	r0, #0
   16d0c:	bne	16d50 <fputs@plt+0x470c>
   16d10:	ldrb	r3, [r5, #1]!
   16d14:	add	r4, r4, #1
   16d18:	cmp	r3, #0
   16d1c:	beq	16d40 <fputs@plt+0x46fc>
   16d20:	cmp	r6, #0
   16d24:	sxtb	r3, r3
   16d28:	beq	16cf4 <fputs@plt+0x46b0>
   16d2c:	ldrb	r3, [r5, #1]!
   16d30:	mov	r6, #0
   16d34:	add	r4, r4, #1
   16d38:	cmp	r3, #0
   16d3c:	bne	16d20 <fputs@plt+0x46dc>
   16d40:	rsb	r0, r6, r4
   16d44:	pop	{r3, r4, r5, r6, r7, pc}
   16d48:	mov	r6, #1
   16d4c:	b	16d10 <fputs@plt+0x46cc>
   16d50:	mov	r0, r4
   16d54:	pop	{r3, r4, r5, r6, r7, pc}
   16d58:	mov	r0, r3
   16d5c:	pop	{r3, r4, r5, r6, r7, pc}
   16d60:	ldr	r3, [pc, #224]	; 16e48 <fputs@plt+0x4804>
   16d64:	push	{r4, r5, r6, r7, r8, r9, lr}
   16d68:	mov	r6, r0
   16d6c:	ldr	r0, [pc, #216]	; 16e4c <fputs@plt+0x4808>
   16d70:	add	r3, pc, r3
   16d74:	sub	sp, sp, #12
   16d78:	mov	r4, #0
   16d7c:	mov	r9, r1
   16d80:	mov	r5, r2
   16d84:	ldr	r8, [r3, r0]
   16d88:	str	r4, [sp]
   16d8c:	ldr	r3, [r8]
   16d90:	str	r3, [sp, #4]
   16d94:	bl	125fc <__errno_location@plt>
   16d98:	cmp	r6, r4
   16d9c:	mov	r7, r0
   16da0:	str	r4, [r0]
   16da4:	beq	16db4 <fputs@plt+0x4770>
   16da8:	ldrsb	r3, [r6]
   16dac:	cmp	r3, r4
   16db0:	bne	16dcc <fputs@plt+0x4788>
   16db4:	ldr	r1, [pc, #148]	; 16e50 <fputs@plt+0x480c>
   16db8:	mov	r2, r9
   16dbc:	mov	r3, r6
   16dc0:	mov	r0, #1
   16dc4:	add	r1, pc, r1
   16dc8:	bl	12344 <errx@plt>
   16dcc:	mov	r3, r4
   16dd0:	mov	r2, r5
   16dd4:	mov	r0, r6
   16dd8:	mov	r1, sp
   16ddc:	bl	12614 <__strtoull_internal@plt>
   16de0:	ldr	r3, [r7]
   16de4:	cmp	r3, r4
   16de8:	bne	16e24 <fputs@plt+0x47e0>
   16dec:	ldr	r3, [sp]
   16df0:	cmp	r6, r3
   16df4:	beq	16db4 <fputs@plt+0x4770>
   16df8:	cmp	r3, r4
   16dfc:	beq	16e0c <fputs@plt+0x47c8>
   16e00:	ldrsb	r3, [r3]
   16e04:	cmp	r3, r4
   16e08:	bne	16db4 <fputs@plt+0x4770>
   16e0c:	ldr	r2, [sp, #4]
   16e10:	ldr	r3, [r8]
   16e14:	cmp	r2, r3
   16e18:	bne	16e44 <fputs@plt+0x4800>
   16e1c:	add	sp, sp, #12
   16e20:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16e24:	cmp	r3, #34	; 0x22
   16e28:	bne	16db4 <fputs@plt+0x4770>
   16e2c:	ldr	r1, [pc, #32]	; 16e54 <fputs@plt+0x4810>
   16e30:	mov	r2, r9
   16e34:	mov	r3, r6
   16e38:	mov	r0, #1
   16e3c:	add	r1, pc, r1
   16e40:	bl	12020 <err@plt>
   16e44:	bl	12434 <__stack_chk_fail@plt>
   16e48:	andeq	r8, r1, r8, lsl #5
   16e4c:	andeq	r0, r0, ip, lsr r2
   16e50:	andeq	r7, r0, ip, ror r8
   16e54:	andeq	r7, r0, r4, lsl #16
   16e58:	ldr	r3, [pc, #596]	; 170b4 <fputs@plt+0x4a70>
   16e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e60:	add	r3, pc, r3
   16e64:	subs	r6, r0, #0
   16e68:	ldr	r0, [pc, #584]	; 170b8 <fputs@plt+0x4a74>
   16e6c:	mov	r8, r1
   16e70:	mov	r1, r3
   16e74:	sub	sp, sp, #20
   16e78:	mov	r9, r2
   16e7c:	ldr	sl, [r1, r0]
   16e80:	mov	r2, #0
   16e84:	mov	r3, #0
   16e88:	ldr	r1, [sl]
   16e8c:	strd	r2, [r8]
   16e90:	str	r1, [sp, #12]
   16e94:	beq	16f7c <fputs@plt+0x4938>
   16e98:	ldrb	r5, [r6]
   16e9c:	cmp	r5, #0
   16ea0:	beq	16f7c <fputs@plt+0x4938>
   16ea4:	str	r6, [sp, #8]
   16ea8:	bl	123ec <__ctype_b_loc@plt>
   16eac:	mov	r3, r6
   16eb0:	ldr	r1, [r0]
   16eb4:	b	16ec8 <fputs@plt+0x4884>
   16eb8:	add	r2, r3, #1
   16ebc:	str	r2, [sp, #8]
   16ec0:	ldrb	r5, [r3, #1]
   16ec4:	mov	r3, r2
   16ec8:	lsl	r2, r5, #1
   16ecc:	ldrh	r4, [r1, r2]
   16ed0:	and	r4, r4, #8192	; 0x2000
   16ed4:	uxth	r4, r4
   16ed8:	cmp	r4, #0
   16edc:	bne	16eb8 <fputs@plt+0x4874>
   16ee0:	cmp	r5, #45	; 0x2d
   16ee4:	beq	16f7c <fputs@plt+0x4938>
   16ee8:	add	r5, sp, #16
   16eec:	str	r4, [r5, #-8]!
   16ef0:	bl	125fc <__errno_location@plt>
   16ef4:	mov	r2, r4
   16ef8:	mov	r1, r5
   16efc:	mov	r3, r4
   16f00:	mov	r7, r0
   16f04:	mov	r0, r6
   16f08:	str	r4, [r7]
   16f0c:	bl	12614 <__strtoull_internal@plt>
   16f10:	mov	r5, r1
   16f14:	ldr	r1, [sp, #8]
   16f18:	mov	r4, r0
   16f1c:	cmp	r1, r6
   16f20:	beq	16f7c <fputs@plt+0x4938>
   16f24:	ldr	r3, [r7]
   16f28:	cmp	r3, #0
   16f2c:	bne	16f60 <fputs@plt+0x491c>
   16f30:	cmp	r1, #0
   16f34:	beq	17064 <fputs@plt+0x4a20>
   16f38:	ldrb	r0, [r1]
   16f3c:	cmp	r0, #0
   16f40:	bne	16f84 <fputs@plt+0x4940>
   16f44:	strd	r4, [r8]
   16f48:	ldr	r2, [sp, #12]
   16f4c:	ldr	r3, [sl]
   16f50:	cmp	r2, r3
   16f54:	bne	170b0 <fputs@plt+0x4a6c>
   16f58:	add	sp, sp, #20
   16f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f60:	subs	r2, r4, #1
   16f64:	mvn	r6, #2
   16f68:	sbc	r3, r5, #0
   16f6c:	mvn	r7, #0
   16f70:	cmp	r3, r7
   16f74:	cmpeq	r2, r6
   16f78:	bls	16f30 <fputs@plt+0x48ec>
   16f7c:	mvn	r0, #0
   16f80:	b	16f48 <fputs@plt+0x4904>
   16f84:	ldrb	r2, [r1, #1]
   16f88:	sxtb	r3, r2
   16f8c:	cmp	r3, #105	; 0x69
   16f90:	beq	1706c <fputs@plt+0x4a28>
   16f94:	cmp	r3, #66	; 0x42
   16f98:	beq	17048 <fputs@plt+0x4a04>
   16f9c:	cmp	r2, #0
   16fa0:	bne	16f7c <fputs@plt+0x4938>
   16fa4:	mov	r6, #1024	; 0x400
   16fa8:	ldr	r7, [pc, #268]	; 170bc <fputs@plt+0x4a78>
   16fac:	sxtb	r3, r0
   16fb0:	str	r3, [sp, #4]
   16fb4:	add	r7, pc, r7
   16fb8:	mov	r1, r3
   16fbc:	mov	r0, r7
   16fc0:	bl	120c8 <strchr@plt>
   16fc4:	ldr	r3, [sp, #4]
   16fc8:	cmp	r0, #0
   16fcc:	rsbne	fp, r7, r0
   16fd0:	addne	fp, fp, #1
   16fd4:	beq	17088 <fputs@plt+0x4a44>
   16fd8:	cmp	fp, #0
   16fdc:	beq	17038 <fputs@plt+0x49f4>
   16fe0:	asr	r7, r6, #31
   16fe4:	mvn	r0, #0
   16fe8:	mvn	r1, #0
   16fec:	mov	r2, r6
   16ff0:	mov	r3, r7
   16ff4:	bl	1c5e0 <fputs@plt+0x9f9c>
   16ff8:	cmp	r1, r5
   16ffc:	cmpeq	r0, r4
   17000:	bcc	1705c <fputs@plt+0x4a18>
   17004:	sub	ip, fp, #1
   17008:	mov	r3, #0
   1700c:	b	17020 <fputs@plt+0x49dc>
   17010:	cmp	r1, r5
   17014:	cmpeq	r0, r4
   17018:	add	r3, r3, #1
   1701c:	bcc	1705c <fputs@plt+0x4a18>
   17020:	mul	r2, r4, r7
   17024:	cmp	r3, ip
   17028:	mla	r2, r6, r5, r2
   1702c:	umull	r4, r5, r4, r6
   17030:	add	r5, r2, r5
   17034:	bne	17010 <fputs@plt+0x49cc>
   17038:	mov	r0, #0
   1703c:	cmp	r9, #0
   17040:	strne	fp, [r9]
   17044:	b	16f44 <fputs@plt+0x4900>
   17048:	ldrsb	r3, [r1, #2]
   1704c:	cmp	r3, #0
   17050:	bne	16f7c <fputs@plt+0x4938>
   17054:	mov	r6, #1000	; 0x3e8
   17058:	b	16fa8 <fputs@plt+0x4964>
   1705c:	mvn	r0, #1
   17060:	b	1703c <fputs@plt+0x49f8>
   17064:	mov	r0, r1
   17068:	b	16f44 <fputs@plt+0x4900>
   1706c:	ldrsb	r3, [r1, #2]
   17070:	cmp	r3, #66	; 0x42
   17074:	bne	16f7c <fputs@plt+0x4938>
   17078:	ldrsb	r3, [r1, #3]
   1707c:	cmp	r3, #0
   17080:	beq	16fa4 <fputs@plt+0x4960>
   17084:	b	16f7c <fputs@plt+0x4938>
   17088:	ldr	r7, [pc, #48]	; 170c0 <fputs@plt+0x4a7c>
   1708c:	mov	r1, r3
   17090:	add	r7, pc, r7
   17094:	mov	r0, r7
   17098:	bl	120c8 <strchr@plt>
   1709c:	cmp	r0, #0
   170a0:	beq	16f7c <fputs@plt+0x4938>
   170a4:	rsb	r7, r7, r0
   170a8:	add	fp, r7, #1
   170ac:	b	16fd8 <fputs@plt+0x4994>
   170b0:	bl	12434 <__stack_chk_fail@plt>
   170b4:	muleq	r1, r8, r1
   170b8:	andeq	r0, r0, ip, lsr r2
   170bc:	muleq	r0, r8, r6
   170c0:	andeq	r7, r0, r8, asr #11
   170c4:	mov	r2, #0
   170c8:	b	16e58 <fputs@plt+0x4814>
   170cc:	push	{r4, r5, r6, lr}
   170d0:	subs	r6, r0, #0
   170d4:	beq	17158 <fputs@plt+0x4b14>
   170d8:	ldrb	r4, [r6]
   170dc:	cmp	r4, #0
   170e0:	beq	17160 <fputs@plt+0x4b1c>
   170e4:	bl	123ec <__ctype_b_loc@plt>
   170e8:	mov	r3, r6
   170ec:	ldr	r5, [r0]
   170f0:	b	1710c <fputs@plt+0x4ac8>
   170f4:	cmn	r3, #1
   170f8:	beq	17148 <fputs@plt+0x4b04>
   170fc:	ldrb	r4, [r3, #1]
   17100:	mov	r3, r1
   17104:	cmp	r4, #0
   17108:	beq	17150 <fputs@plt+0x4b0c>
   1710c:	lsl	r4, r4, #1
   17110:	mov	ip, r3
   17114:	add	r1, r3, #1
   17118:	ldrh	r2, [r5, r4]
   1711c:	tst	r2, #2048	; 0x800
   17120:	bne	170f4 <fputs@plt+0x4ab0>
   17124:	cmp	ip, #0
   17128:	cmpne	ip, r6
   1712c:	movls	r0, #0
   17130:	movhi	r0, #1
   17134:	popls	{r4, r5, r6, pc}
   17138:	ldrsb	r0, [ip]
   1713c:	rsbs	r0, r0, #1
   17140:	movcc	r0, #0
   17144:	pop	{r4, r5, r6, pc}
   17148:	mov	r0, #0
   1714c:	pop	{r4, r5, r6, pc}
   17150:	mov	ip, r1
   17154:	b	17124 <fputs@plt+0x4ae0>
   17158:	mov	r0, r6
   1715c:	pop	{r4, r5, r6, pc}
   17160:	mov	r0, r4
   17164:	pop	{r4, r5, r6, pc}
   17168:	cmp	r1, #0
   1716c:	push	{r4, r5}
   17170:	sub	r4, r1, #1
   17174:	beq	171e0 <fputs@plt+0x4b9c>
   17178:	ldrb	r1, [r0]
   1717c:	cmp	r1, #0
   17180:	beq	171e0 <fputs@plt+0x4b9c>
   17184:	sxtb	r1, r1
   17188:	sxtb	r2, r2
   1718c:	cmp	r1, r2
   17190:	beq	171cc <fputs@plt+0x4b88>
   17194:	add	r1, r0, #1
   17198:	mov	r3, #0
   1719c:	b	171b8 <fputs@plt+0x4b74>
   171a0:	ldrb	r0, [r1], #1
   171a4:	cmp	r0, #0
   171a8:	sxtb	ip, r0
   171ac:	beq	171cc <fputs@plt+0x4b88>
   171b0:	cmp	ip, r2
   171b4:	beq	171d4 <fputs@plt+0x4b90>
   171b8:	cmp	r3, r4
   171bc:	mov	r5, r1
   171c0:	add	r3, r3, #1
   171c4:	bne	171a0 <fputs@plt+0x4b5c>
   171c8:	mov	r0, #0
   171cc:	pop	{r4, r5}
   171d0:	bx	lr
   171d4:	mov	r0, r5
   171d8:	pop	{r4, r5}
   171dc:	bx	lr
   171e0:	mov	r0, r1
   171e4:	b	171cc <fputs@plt+0x4b88>
   171e8:	ldr	r3, [pc, #228]	; 172d4 <fputs@plt+0x4c90>
   171ec:	ldr	r2, [pc, #228]	; 172d8 <fputs@plt+0x4c94>
   171f0:	add	r3, pc, r3
   171f4:	push	{r4, r6, r7, r8, r9, lr}
   171f8:	subs	r6, r0, #0
   171fc:	ldr	r7, [r3, r2]
   17200:	mov	r0, r3
   17204:	sub	sp, sp, #8
   17208:	mov	r4, #0
   1720c:	mov	r8, r1
   17210:	ldr	r3, [r7]
   17214:	str	r4, [sp]
   17218:	str	r3, [sp, #4]
   1721c:	beq	1722c <fputs@plt+0x4be8>
   17220:	ldrsb	r3, [r6]
   17224:	cmp	r3, r4
   17228:	bne	17254 <fputs@plt+0x4c10>
   1722c:	bl	125fc <__errno_location@plt>
   17230:	ldr	r3, [r0]
   17234:	cmp	r3, #0
   17238:	bne	17280 <fputs@plt+0x4c3c>
   1723c:	ldr	r1, [pc, #152]	; 172dc <fputs@plt+0x4c98>
   17240:	mov	r2, r8
   17244:	mov	r3, r6
   17248:	mov	r0, #1
   1724c:	add	r1, pc, r1
   17250:	bl	12344 <errx@plt>
   17254:	bl	125fc <__errno_location@plt>
   17258:	mov	r3, r4
   1725c:	mov	r1, sp
   17260:	mov	r2, #10
   17264:	mov	r9, r0
   17268:	str	r4, [r0]
   1726c:	mov	r0, r6
   17270:	bl	12170 <__strtoll_internal@plt>
   17274:	ldr	r3, [r9]
   17278:	cmp	r3, r4
   1727c:	beq	17298 <fputs@plt+0x4c54>
   17280:	ldr	r1, [pc, #88]	; 172e0 <fputs@plt+0x4c9c>
   17284:	mov	r2, r8
   17288:	mov	r3, r6
   1728c:	mov	r0, #1
   17290:	add	r1, pc, r1
   17294:	bl	12020 <err@plt>
   17298:	ldr	r3, [sp]
   1729c:	cmp	r6, r3
   172a0:	beq	1723c <fputs@plt+0x4bf8>
   172a4:	cmp	r3, #0
   172a8:	beq	172b8 <fputs@plt+0x4c74>
   172ac:	ldrsb	r3, [r3]
   172b0:	cmp	r3, #0
   172b4:	bne	1723c <fputs@plt+0x4bf8>
   172b8:	ldr	r2, [sp, #4]
   172bc:	ldr	r3, [r7]
   172c0:	cmp	r2, r3
   172c4:	bne	172d0 <fputs@plt+0x4c8c>
   172c8:	add	sp, sp, #8
   172cc:	pop	{r4, r6, r7, r8, r9, pc}
   172d0:	bl	12434 <__stack_chk_fail@plt>
   172d4:	andeq	r7, r1, r8, lsl #28
   172d8:	andeq	r0, r0, ip, lsr r2
   172dc:	strdeq	r7, [r0], -r4
   172e0:			; <UNDEFINED> instruction: 0x000073b0
   172e4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   172e8:	mov	r8, r0
   172ec:	mov	r9, r1
   172f0:	bl	171e8 <fputs@plt+0x4ba4>
   172f4:	mvn	r4, #0
   172f8:	mov	r5, #0
   172fc:	adds	r6, r0, #-2147483648	; 0x80000000
   17300:	adc	r7, r1, #0
   17304:	cmp	r7, r5
   17308:	cmpeq	r6, r4
   1730c:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   17310:	ldr	r1, [pc, #16]	; 17328 <fputs@plt+0x4ce4>
   17314:	mov	r2, r9
   17318:	mov	r3, r8
   1731c:	mov	r0, #1
   17320:	add	r1, pc, r1
   17324:	bl	12344 <errx@plt>
   17328:	andeq	r7, r0, r0, lsr #6
   1732c:	push	{r3, r4, r5, lr}
   17330:	mov	r4, r0
   17334:	mov	r5, r1
   17338:	bl	172e4 <fputs@plt+0x4ca0>
   1733c:	add	ip, r0, #32768	; 0x8000
   17340:	cmp	ip, #65536	; 0x10000
   17344:	bcs	17350 <fputs@plt+0x4d0c>
   17348:	sxth	r0, r0
   1734c:	pop	{r3, r4, r5, pc}
   17350:	ldr	r1, [pc, #16]	; 17368 <fputs@plt+0x4d24>
   17354:	mov	r2, r5
   17358:	mov	r3, r4
   1735c:	mov	r0, #1
   17360:	add	r1, pc, r1
   17364:	bl	12344 <errx@plt>
   17368:	andeq	r7, r0, r0, ror #5
   1736c:	mov	r2, #10
   17370:	b	16d60 <fputs@plt+0x471c>
   17374:	push	{r3, r4, r5, r6, r7, lr}
   17378:	mov	r6, r0
   1737c:	mov	r7, r1
   17380:	bl	1736c <fputs@plt+0x4d28>
   17384:	mvn	r4, #0
   17388:	mov	r5, #0
   1738c:	cmp	r1, r5
   17390:	cmpeq	r0, r4
   17394:	popls	{r3, r4, r5, r6, r7, pc}
   17398:	ldr	r1, [pc, #16]	; 173b0 <fputs@plt+0x4d6c>
   1739c:	mov	r2, r7
   173a0:	mov	r3, r6
   173a4:	mov	r0, #1
   173a8:	add	r1, pc, r1
   173ac:	bl	12344 <errx@plt>
   173b0:	muleq	r0, r8, r2
   173b4:	push	{r3, r4, r5, lr}
   173b8:	mov	r4, r0
   173bc:	mov	r5, r1
   173c0:	bl	17374 <fputs@plt+0x4d30>
   173c4:	cmp	r0, #65536	; 0x10000
   173c8:	bcs	173d4 <fputs@plt+0x4d90>
   173cc:	uxth	r0, r0
   173d0:	pop	{r3, r4, r5, pc}
   173d4:	ldr	r1, [pc, #16]	; 173ec <fputs@plt+0x4da8>
   173d8:	mov	r2, r5
   173dc:	mov	r3, r4
   173e0:	mov	r0, #1
   173e4:	add	r1, pc, r1
   173e8:	bl	12344 <errx@plt>
   173ec:	andeq	r7, r0, ip, asr r2
   173f0:	mov	r2, #16
   173f4:	b	16d60 <fputs@plt+0x471c>
   173f8:	ldr	r3, [pc, #216]	; 174d8 <fputs@plt+0x4e94>
   173fc:	push	{r4, r5, r6, r7, r8, lr}
   17400:	subs	r4, r0, #0
   17404:	ldr	r0, [pc, #208]	; 174dc <fputs@plt+0x4e98>
   17408:	add	r3, pc, r3
   1740c:	sub	sp, sp, #8
   17410:	mov	r5, #0
   17414:	mov	r7, r1
   17418:	ldr	r6, [r3, r0]
   1741c:	str	r5, [sp]
   17420:	ldr	r3, [r6]
   17424:	str	r3, [sp, #4]
   17428:	beq	17438 <fputs@plt+0x4df4>
   1742c:	ldrsb	r3, [r4]
   17430:	cmp	r3, r5
   17434:	bne	17460 <fputs@plt+0x4e1c>
   17438:	bl	125fc <__errno_location@plt>
   1743c:	ldr	r3, [r0]
   17440:	cmp	r3, #0
   17444:	bne	17484 <fputs@plt+0x4e40>
   17448:	ldr	r1, [pc, #144]	; 174e0 <fputs@plt+0x4e9c>
   1744c:	mov	r2, r7
   17450:	mov	r3, r4
   17454:	mov	r0, #1
   17458:	add	r1, pc, r1
   1745c:	bl	12344 <errx@plt>
   17460:	bl	125fc <__errno_location@plt>
   17464:	mov	r1, sp
   17468:	mov	r8, r0
   1746c:	str	r5, [r0]
   17470:	mov	r0, r4
   17474:	bl	120bc <strtod@plt>
   17478:	ldr	r3, [r8]
   1747c:	cmp	r3, r5
   17480:	beq	1749c <fputs@plt+0x4e58>
   17484:	ldr	r1, [pc, #88]	; 174e4 <fputs@plt+0x4ea0>
   17488:	mov	r2, r7
   1748c:	mov	r3, r4
   17490:	mov	r0, #1
   17494:	add	r1, pc, r1
   17498:	bl	12020 <err@plt>
   1749c:	ldr	r3, [sp]
   174a0:	cmp	r4, r3
   174a4:	beq	17448 <fputs@plt+0x4e04>
   174a8:	cmp	r3, #0
   174ac:	beq	174bc <fputs@plt+0x4e78>
   174b0:	ldrsb	r3, [r3]
   174b4:	cmp	r3, #0
   174b8:	bne	17448 <fputs@plt+0x4e04>
   174bc:	ldr	r2, [sp, #4]
   174c0:	ldr	r3, [r6]
   174c4:	cmp	r2, r3
   174c8:	bne	174d4 <fputs@plt+0x4e90>
   174cc:	add	sp, sp, #8
   174d0:	pop	{r4, r5, r6, r7, r8, pc}
   174d4:	bl	12434 <__stack_chk_fail@plt>
   174d8:	strdeq	r7, [r1], -r0
   174dc:	andeq	r0, r0, ip, lsr r2
   174e0:	andeq	r7, r0, r8, ror #3
   174e4:	andeq	r7, r0, ip, lsr #3
   174e8:	ldr	r3, [pc, #220]	; 175cc <fputs@plt+0x4f88>
   174ec:	push	{r4, r5, r6, r7, r8, lr}
   174f0:	subs	r4, r0, #0
   174f4:	ldr	r0, [pc, #212]	; 175d0 <fputs@plt+0x4f8c>
   174f8:	add	r3, pc, r3
   174fc:	sub	sp, sp, #8
   17500:	mov	r5, #0
   17504:	mov	r7, r1
   17508:	ldr	r6, [r3, r0]
   1750c:	str	r5, [sp]
   17510:	ldr	r3, [r6]
   17514:	str	r3, [sp, #4]
   17518:	beq	17528 <fputs@plt+0x4ee4>
   1751c:	ldrsb	r3, [r4]
   17520:	cmp	r3, r5
   17524:	bne	17550 <fputs@plt+0x4f0c>
   17528:	bl	125fc <__errno_location@plt>
   1752c:	ldr	r3, [r0]
   17530:	cmp	r3, #0
   17534:	bne	17578 <fputs@plt+0x4f34>
   17538:	ldr	r1, [pc, #148]	; 175d4 <fputs@plt+0x4f90>
   1753c:	mov	r2, r7
   17540:	mov	r3, r4
   17544:	mov	r0, #1
   17548:	add	r1, pc, r1
   1754c:	bl	12344 <errx@plt>
   17550:	bl	125fc <__errno_location@plt>
   17554:	mov	r1, sp
   17558:	mov	r2, #10
   1755c:	mov	r8, r0
   17560:	str	r5, [r0]
   17564:	mov	r0, r4
   17568:	bl	12308 <strtol@plt>
   1756c:	ldr	r3, [r8]
   17570:	cmp	r3, r5
   17574:	beq	17590 <fputs@plt+0x4f4c>
   17578:	ldr	r1, [pc, #88]	; 175d8 <fputs@plt+0x4f94>
   1757c:	mov	r2, r7
   17580:	mov	r3, r4
   17584:	mov	r0, #1
   17588:	add	r1, pc, r1
   1758c:	bl	12020 <err@plt>
   17590:	ldr	r3, [sp]
   17594:	cmp	r4, r3
   17598:	beq	17538 <fputs@plt+0x4ef4>
   1759c:	cmp	r3, #0
   175a0:	beq	175b0 <fputs@plt+0x4f6c>
   175a4:	ldrsb	r3, [r3]
   175a8:	cmp	r3, #0
   175ac:	bne	17538 <fputs@plt+0x4ef4>
   175b0:	ldr	r2, [sp, #4]
   175b4:	ldr	r3, [r6]
   175b8:	cmp	r2, r3
   175bc:	bne	175c8 <fputs@plt+0x4f84>
   175c0:	add	sp, sp, #8
   175c4:	pop	{r4, r5, r6, r7, r8, pc}
   175c8:	bl	12434 <__stack_chk_fail@plt>
   175cc:	andeq	r7, r1, r0, lsl #22
   175d0:	andeq	r0, r0, ip, lsr r2
   175d4:	strdeq	r7, [r0], -r8
   175d8:	strheq	r7, [r0], -r8
   175dc:	ldr	r3, [pc, #220]	; 176c0 <fputs@plt+0x507c>
   175e0:	push	{r4, r5, r6, r7, r8, lr}
   175e4:	subs	r4, r0, #0
   175e8:	ldr	r0, [pc, #212]	; 176c4 <fputs@plt+0x5080>
   175ec:	add	r3, pc, r3
   175f0:	sub	sp, sp, #8
   175f4:	mov	r5, #0
   175f8:	mov	r7, r1
   175fc:	ldr	r6, [r3, r0]
   17600:	str	r5, [sp]
   17604:	ldr	r3, [r6]
   17608:	str	r3, [sp, #4]
   1760c:	beq	1761c <fputs@plt+0x4fd8>
   17610:	ldrsb	r3, [r4]
   17614:	cmp	r3, r5
   17618:	bne	17644 <fputs@plt+0x5000>
   1761c:	bl	125fc <__errno_location@plt>
   17620:	ldr	r3, [r0]
   17624:	cmp	r3, #0
   17628:	bne	1766c <fputs@plt+0x5028>
   1762c:	ldr	r1, [pc, #148]	; 176c8 <fputs@plt+0x5084>
   17630:	mov	r2, r7
   17634:	mov	r3, r4
   17638:	mov	r0, #1
   1763c:	add	r1, pc, r1
   17640:	bl	12344 <errx@plt>
   17644:	bl	125fc <__errno_location@plt>
   17648:	mov	r1, sp
   1764c:	mov	r2, #10
   17650:	mov	r8, r0
   17654:	str	r5, [r0]
   17658:	mov	r0, r4
   1765c:	bl	12284 <strtoul@plt>
   17660:	ldr	r3, [r8]
   17664:	cmp	r3, r5
   17668:	beq	17684 <fputs@plt+0x5040>
   1766c:	ldr	r1, [pc, #88]	; 176cc <fputs@plt+0x5088>
   17670:	mov	r2, r7
   17674:	mov	r3, r4
   17678:	mov	r0, #1
   1767c:	add	r1, pc, r1
   17680:	bl	12020 <err@plt>
   17684:	ldr	r3, [sp]
   17688:	cmp	r4, r3
   1768c:	beq	1762c <fputs@plt+0x4fe8>
   17690:	cmp	r3, #0
   17694:	beq	176a4 <fputs@plt+0x5060>
   17698:	ldrsb	r3, [r3]
   1769c:	cmp	r3, #0
   176a0:	bne	1762c <fputs@plt+0x4fe8>
   176a4:	ldr	r2, [sp, #4]
   176a8:	ldr	r3, [r6]
   176ac:	cmp	r2, r3
   176b0:	bne	176bc <fputs@plt+0x5078>
   176b4:	add	sp, sp, #8
   176b8:	pop	{r4, r5, r6, r7, r8, pc}
   176bc:	bl	12434 <__stack_chk_fail@plt>
   176c0:	andeq	r7, r1, ip, lsl #20
   176c4:	andeq	r0, r0, ip, lsr r2
   176c8:	andeq	r7, r0, r4
   176cc:	andeq	r6, r0, r4, asr #31
   176d0:	ldr	ip, [pc, #132]	; 1775c <fputs@plt+0x5118>
   176d4:	push	{r4, r5, r6, lr}
   176d8:	add	ip, pc, ip
   176dc:	ldr	lr, [pc, #124]	; 17760 <fputs@plt+0x511c>
   176e0:	sub	sp, sp, #16
   176e4:	mov	r6, r1
   176e8:	mov	r5, r0
   176ec:	mov	r1, sp
   176f0:	ldr	r4, [ip, lr]
   176f4:	ldr	ip, [r4]
   176f8:	str	ip, [sp, #12]
   176fc:	bl	170c4 <fputs@plt+0x4a80>
   17700:	cmp	r0, #0
   17704:	bne	17724 <fputs@plt+0x50e0>
   17708:	ldr	r2, [sp, #12]
   1770c:	ldr	r3, [r4]
   17710:	ldrd	r0, [sp]
   17714:	cmp	r2, r3
   17718:	bne	17758 <fputs@plt+0x5114>
   1771c:	add	sp, sp, #16
   17720:	pop	{r4, r5, r6, pc}
   17724:	bl	125fc <__errno_location@plt>
   17728:	mov	r2, r6
   1772c:	ldr	r3, [r0]
   17730:	mov	r0, #1
   17734:	cmp	r3, #0
   17738:	mov	r3, r5
   1773c:	beq	1774c <fputs@plt+0x5108>
   17740:	ldr	r1, [pc, #28]	; 17764 <fputs@plt+0x5120>
   17744:	add	r1, pc, r1
   17748:	bl	12020 <err@plt>
   1774c:	ldr	r1, [pc, #20]	; 17768 <fputs@plt+0x5124>
   17750:	add	r1, pc, r1
   17754:	bl	12344 <errx@plt>
   17758:	bl	12434 <__stack_chk_fail@plt>
   1775c:	andeq	r7, r1, r0, lsr #18
   17760:	andeq	r0, r0, ip, lsr r2
   17764:	strdeq	r6, [r0], -ip
   17768:	strdeq	r6, [r0], -r0
   1776c:	push	{r4, lr}
   17770:	mov	r4, r1
   17774:	mov	r1, r2
   17778:	bl	173f8 <fputs@plt+0x4db4>
   1777c:	vldr	d7, [pc, #28]	; 177a0 <fputs@plt+0x515c>
   17780:	vcvt.s32.f64	s11, d0
   17784:	vcvt.f64.s32	d6, s11
   17788:	vstr	s11, [r4]
   1778c:	vsub.f64	d0, d0, d6
   17790:	vmul.f64	d0, d0, d7
   17794:	vcvt.s32.f64	s0, d0
   17798:	vstr	s0, [r4, #4]
   1779c:	pop	{r4, pc}
   177a0:	andeq	r0, r0, r0
   177a4:	smlawbmi	lr, r0, r4, r8
   177a8:	and	r3, r0, #61440	; 0xf000
   177ac:	cmp	r3, #16384	; 0x4000
   177b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   177b4:	moveq	r3, #100	; 0x64
   177b8:	beq	17830 <fputs@plt+0x51ec>
   177bc:	cmp	r3, #40960	; 0xa000
   177c0:	moveq	r3, #108	; 0x6c
   177c4:	beq	17830 <fputs@plt+0x51ec>
   177c8:	cmp	r3, #8192	; 0x2000
   177cc:	moveq	r3, #99	; 0x63
   177d0:	beq	17830 <fputs@plt+0x51ec>
   177d4:	cmp	r3, #24576	; 0x6000
   177d8:	moveq	r3, #98	; 0x62
   177dc:	beq	17830 <fputs@plt+0x51ec>
   177e0:	cmp	r3, #49152	; 0xc000
   177e4:	moveq	r3, #115	; 0x73
   177e8:	beq	17830 <fputs@plt+0x51ec>
   177ec:	cmp	r3, #4096	; 0x1000
   177f0:	moveq	r3, #112	; 0x70
   177f4:	beq	17830 <fputs@plt+0x51ec>
   177f8:	cmp	r3, #32768	; 0x8000
   177fc:	beq	1782c <fputs@plt+0x51e8>
   17800:	mov	r4, #9
   17804:	mov	r3, #8
   17808:	mov	r6, #7
   1780c:	mov	r7, #6
   17810:	mov	r2, #5
   17814:	mov	r8, #4
   17818:	mov	r9, #3
   1781c:	mov	ip, #2
   17820:	mov	sl, #1
   17824:	mov	fp, #0
   17828:	b	1785c <fputs@plt+0x5218>
   1782c:	mov	r3, #45	; 0x2d
   17830:	strb	r3, [r1]
   17834:	mov	r4, #10
   17838:	mov	r3, #9
   1783c:	mov	r6, #8
   17840:	mov	r7, #7
   17844:	mov	r2, #6
   17848:	mov	r8, #5
   1784c:	mov	r9, #4
   17850:	mov	ip, #3
   17854:	mov	sl, #2
   17858:	mov	fp, #1
   1785c:	tst	r0, #256	; 0x100
   17860:	add	ip, r1, ip
   17864:	moveq	r5, #45	; 0x2d
   17868:	movne	r5, #114	; 0x72
   1786c:	tst	r0, #128	; 0x80
   17870:	strb	r5, [r1, fp]
   17874:	moveq	r5, #45	; 0x2d
   17878:	movne	r5, #119	; 0x77
   1787c:	tst	r0, #2048	; 0x800
   17880:	strb	r5, [r1, sl]
   17884:	beq	17920 <fputs@plt+0x52dc>
   17888:	tst	r0, #64	; 0x40
   1788c:	moveq	r5, #83	; 0x53
   17890:	movne	r5, #115	; 0x73
   17894:	tst	r0, #32
   17898:	strb	r5, [ip]
   1789c:	add	r2, r1, r2
   178a0:	moveq	ip, #45	; 0x2d
   178a4:	movne	ip, #114	; 0x72
   178a8:	tst	r0, #16
   178ac:	strb	ip, [r1, r9]
   178b0:	moveq	ip, #45	; 0x2d
   178b4:	movne	ip, #119	; 0x77
   178b8:	tst	r0, #1024	; 0x400
   178bc:	strb	ip, [r1, r8]
   178c0:	beq	17940 <fputs@plt+0x52fc>
   178c4:	tst	r0, #8
   178c8:	moveq	ip, #83	; 0x53
   178cc:	movne	ip, #115	; 0x73
   178d0:	tst	r0, #4
   178d4:	strb	ip, [r2]
   178d8:	add	r3, r1, r3
   178dc:	moveq	r2, #45	; 0x2d
   178e0:	movne	r2, #114	; 0x72
   178e4:	tst	r0, #2
   178e8:	strb	r2, [r1, r7]
   178ec:	moveq	r2, #45	; 0x2d
   178f0:	movne	r2, #119	; 0x77
   178f4:	tst	r0, #512	; 0x200
   178f8:	strb	r2, [r1, r6]
   178fc:	beq	17930 <fputs@plt+0x52ec>
   17900:	tst	r0, #1
   17904:	moveq	r2, #84	; 0x54
   17908:	movne	r2, #116	; 0x74
   1790c:	strb	r2, [r3]
   17910:	mov	r3, #0
   17914:	strb	r3, [r1, r4]
   17918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   1791c:	bx	lr
   17920:	tst	r0, #64	; 0x40
   17924:	moveq	r5, #45	; 0x2d
   17928:	movne	r5, #120	; 0x78
   1792c:	b	17894 <fputs@plt+0x5250>
   17930:	tst	r0, #1
   17934:	moveq	r2, #45	; 0x2d
   17938:	movne	r2, #120	; 0x78
   1793c:	b	1790c <fputs@plt+0x52c8>
   17940:	tst	r0, #8
   17944:	moveq	ip, #45	; 0x2d
   17948:	movne	ip, #120	; 0x78
   1794c:	b	178d0 <fputs@plt+0x528c>
   17950:	ldr	r1, [pc, #580]	; 17b9c <fputs@plt+0x5558>
   17954:	tst	r0, #2
   17958:	ldr	ip, [pc, #576]	; 17ba0 <fputs@plt+0x555c>
   1795c:	add	r1, pc, r1
   17960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17964:	sub	sp, sp, #100	; 0x64
   17968:	ldr	r6, [r1, ip]
   1796c:	addeq	r7, sp, #52	; 0x34
   17970:	addne	lr, sp, #53	; 0x35
   17974:	addne	r7, sp, #52	; 0x34
   17978:	moveq	lr, r7
   1797c:	mov	ip, #10
   17980:	ldr	r1, [r6]
   17984:	str	r1, [sp, #92]	; 0x5c
   17988:	movne	r1, #32
   1798c:	strbne	r1, [sp, #52]	; 0x34
   17990:	mov	r1, #1
   17994:	sub	r9, ip, #32
   17998:	rsb	r8, ip, #32
   1799c:	lsl	r5, r1, r9
   179a0:	lsl	r4, r1, ip
   179a4:	orr	r5, r5, r1, lsr r8
   179a8:	cmp	r3, r5
   179ac:	cmpeq	r2, r4
   179b0:	bcc	17b1c <fputs@plt+0x54d8>
   179b4:	add	ip, ip, #10
   179b8:	cmp	ip, #70	; 0x46
   179bc:	bne	17994 <fputs@plt+0x5350>
   179c0:	mov	r1, #60	; 0x3c
   179c4:	movw	r5, #26215	; 0x6667
   179c8:	movt	r5, #26214	; 0x6666
   179cc:	ldr	r8, [pc, #464]	; 17ba4 <fputs@plt+0x5560>
   179d0:	mov	fp, #1
   179d4:	smull	sl, r9, r5, r1
   179d8:	add	r8, pc, r8
   179dc:	str	r8, [sp, #36]	; 0x24
   179e0:	sub	r8, r1, #32
   179e4:	asr	r4, r1, #31
   179e8:	lsl	r5, fp, r8
   179ec:	str	r4, [sp, #44]	; 0x2c
   179f0:	lsl	r4, fp, r1
   179f4:	subs	r4, r4, #1
   179f8:	str	r9, [sp, #40]	; 0x28
   179fc:	rsb	r9, r1, #32
   17a00:	ldr	sl, [sp, #40]	; 0x28
   17a04:	orr	r5, r5, fp, lsr r9
   17a08:	ldr	fp, [sp, #44]	; 0x2c
   17a0c:	sbc	r5, r5, #0
   17a10:	tst	r0, #1
   17a14:	lsr	r1, r2, r1
   17a18:	rsb	fp, fp, sl, asr #2
   17a1c:	ldr	sl, [sp, #36]	; 0x24
   17a20:	orr	r1, r1, r3, lsl r9
   17a24:	and	r5, r5, r3
   17a28:	orr	r8, r1, r3, lsr r8
   17a2c:	and	r4, r4, r2
   17a30:	ldrb	r0, [sl, fp]
   17a34:	add	r3, lr, #1
   17a38:	strb	r0, [lr]
   17a3c:	bne	17b00 <fputs@plt+0x54bc>
   17a40:	orrs	fp, r4, r5
   17a44:	mov	r2, #0
   17a48:	strb	r2, [r3]
   17a4c:	beq	17b34 <fputs@plt+0x54f0>
   17a50:	sub	lr, ip, #20
   17a54:	sub	ip, ip, #52	; 0x34
   17a58:	rsb	r3, lr, #32
   17a5c:	lsr	r0, r4, lr
   17a60:	orr	r0, r0, r5, lsl r3
   17a64:	lsr	r1, r5, lr
   17a68:	orr	r0, r0, r5, lsr ip
   17a6c:	mov	r2, #100	; 0x64
   17a70:	adds	r0, r0, #50	; 0x32
   17a74:	mov	r3, #0
   17a78:	adc	r1, r1, #0
   17a7c:	bl	1c5e0 <fputs@plt+0x9f9c>
   17a80:	mov	r4, r0
   17a84:	mov	r5, r1
   17a88:	cmp	r5, #0
   17a8c:	cmpeq	r4, #10
   17a90:	addeq	r8, r8, #1
   17a94:	beq	17b34 <fputs@plt+0x54f0>
   17a98:	orrs	r2, r4, r5
   17a9c:	beq	17b34 <fputs@plt+0x54f0>
   17aa0:	bl	122cc <localeconv@plt>
   17aa4:	cmp	r0, #0
   17aa8:	beq	17b80 <fputs@plt+0x553c>
   17aac:	ldr	r3, [r0]
   17ab0:	cmp	r3, #0
   17ab4:	beq	17b90 <fputs@plt+0x554c>
   17ab8:	ldrsb	r2, [r3]
   17abc:	cmp	r2, #0
   17ac0:	ldreq	r3, [pc, #224]	; 17ba8 <fputs@plt+0x5564>
   17ac4:	addeq	r3, pc, r3
   17ac8:	add	r9, sp, #60	; 0x3c
   17acc:	ldr	ip, [pc, #216]	; 17bac <fputs@plt+0x5568>
   17ad0:	mov	r1, #32
   17ad4:	str	r3, [sp, #8]
   17ad8:	add	ip, pc, ip
   17adc:	str	r8, [sp, #4]
   17ae0:	mov	r0, r9
   17ae4:	strd	r4, [sp, #16]
   17ae8:	mov	r3, r1
   17aec:	str	r7, [sp, #24]
   17af0:	mov	r2, #1
   17af4:	str	ip, [sp]
   17af8:	bl	12368 <__snprintf_chk@plt>
   17afc:	b	17b60 <fputs@plt+0x551c>
   17b00:	cmp	r0, #66	; 0x42
   17b04:	addne	r3, lr, #3
   17b08:	movne	r1, #105	; 0x69
   17b0c:	movne	r2, #66	; 0x42
   17b10:	strbne	r1, [lr, #1]
   17b14:	strbne	r2, [lr, #2]
   17b18:	b	17a40 <fputs@plt+0x53fc>
   17b1c:	subs	r1, ip, #10
   17b20:	strbeq	r1, [lr, #1]
   17b24:	moveq	r3, #66	; 0x42
   17b28:	moveq	r8, r2
   17b2c:	strbeq	r3, [lr]
   17b30:	bne	179c4 <fputs@plt+0x5380>
   17b34:	ldr	r3, [pc, #116]	; 17bb0 <fputs@plt+0x556c>
   17b38:	add	r9, sp, #60	; 0x3c
   17b3c:	mov	r1, #32
   17b40:	str	r8, [sp, #4]
   17b44:	add	r3, pc, r3
   17b48:	str	r7, [sp, #8]
   17b4c:	str	r3, [sp]
   17b50:	mov	r0, r9
   17b54:	mov	r3, r1
   17b58:	mov	r2, #1
   17b5c:	bl	12368 <__snprintf_chk@plt>
   17b60:	mov	r0, r9
   17b64:	bl	1259c <__strdup@plt>
   17b68:	ldr	r2, [sp, #92]	; 0x5c
   17b6c:	ldr	r3, [r6]
   17b70:	cmp	r2, r3
   17b74:	bne	17b8c <fputs@plt+0x5548>
   17b78:	add	sp, sp, #100	; 0x64
   17b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b80:	ldr	r3, [pc, #44]	; 17bb4 <fputs@plt+0x5570>
   17b84:	add	r3, pc, r3
   17b88:	b	17ac8 <fputs@plt+0x5484>
   17b8c:	bl	12434 <__stack_chk_fail@plt>
   17b90:	ldr	r3, [pc, #32]	; 17bb8 <fputs@plt+0x5574>
   17b94:	add	r3, pc, r3
   17b98:	b	17ac8 <fputs@plt+0x5484>
   17b9c:	muleq	r1, ip, r6
   17ba0:	andeq	r0, r0, ip, lsr r2
   17ba4:	andeq	r6, r0, ip, lsl #25
   17ba8:	andeq	r5, r0, r0, ror #15
   17bac:	muleq	r0, r4, fp
   17bb0:	andeq	r6, r0, r4, lsr fp
   17bb4:	andeq	r5, r0, r0, lsr #14
   17bb8:	andeq	r5, r0, r0, lsl r7
   17bbc:	cmp	r0, #0
   17bc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17bc4:	mov	r8, r1
   17bc8:	mov	sl, r2
   17bcc:	mov	r9, r3
   17bd0:	beq	17c8c <fputs@plt+0x5648>
   17bd4:	ldrb	r5, [r0]
   17bd8:	cmp	r5, #0
   17bdc:	beq	17c8c <fputs@plt+0x5648>
   17be0:	cmp	r2, #0
   17be4:	cmpne	r1, #0
   17be8:	movne	ip, #0
   17bec:	moveq	ip, #1
   17bf0:	beq	17c8c <fputs@plt+0x5648>
   17bf4:	cmp	r3, #0
   17bf8:	movne	r4, r0
   17bfc:	movne	r6, ip
   17c00:	bne	17c14 <fputs@plt+0x55d0>
   17c04:	b	17c8c <fputs@plt+0x5648>
   17c08:	ldrb	r5, [r4, #1]!
   17c0c:	cmp	r5, #0
   17c10:	beq	17c84 <fputs@plt+0x5640>
   17c14:	cmp	sl, r6
   17c18:	bls	17c94 <fputs@plt+0x5650>
   17c1c:	cmp	ip, #0
   17c20:	ldrsb	r7, [r4, #1]
   17c24:	moveq	ip, r4
   17c28:	cmp	r5, #44	; 0x2c
   17c2c:	mov	r0, ip
   17c30:	moveq	r5, r4
   17c34:	movne	r5, #0
   17c38:	cmp	r7, #0
   17c3c:	addeq	r5, r4, #1
   17c40:	cmp	r5, #0
   17c44:	rsb	r1, ip, r5
   17c48:	beq	17c7c <fputs@plt+0x5638>
   17c4c:	cmp	ip, r5
   17c50:	bcs	17c8c <fputs@plt+0x5648>
   17c54:	blx	r9
   17c58:	mov	ip, #0
   17c5c:	add	r3, r6, #1
   17c60:	cmn	r0, #1
   17c64:	beq	17c8c <fputs@plt+0x5648>
   17c68:	str	r0, [r8, r6, lsl #2]
   17c6c:	mov	r6, r3
   17c70:	ldrsb	r2, [r5]
   17c74:	cmp	r2, ip
   17c78:	beq	17c9c <fputs@plt+0x5658>
   17c7c:	cmn	r4, #1
   17c80:	bne	17c08 <fputs@plt+0x55c4>
   17c84:	mov	r0, r6
   17c88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c8c:	mvn	r0, #0
   17c90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c94:	mvn	r0, #1
   17c98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c9c:	mov	r6, r3
   17ca0:	b	17c84 <fputs@plt+0x5640>
   17ca4:	cmp	r0, #0
   17ca8:	push	{r4, lr}
   17cac:	mov	r4, r3
   17cb0:	beq	17d28 <fputs@plt+0x56e4>
   17cb4:	ldrb	ip, [r0]
   17cb8:	cmp	ip, #0
   17cbc:	beq	17d28 <fputs@plt+0x56e4>
   17cc0:	cmp	r3, #0
   17cc4:	beq	17d28 <fputs@plt+0x56e4>
   17cc8:	ldr	r3, [r3]
   17ccc:	cmp	r3, #0
   17cd0:	blt	17d28 <fputs@plt+0x56e4>
   17cd4:	cmp	r3, r2
   17cd8:	bhi	17d28 <fputs@plt+0x56e4>
   17cdc:	cmp	ip, #43	; 0x2b
   17ce0:	lsleq	ip, r3, #2
   17ce4:	addeq	r0, r0, #1
   17ce8:	movne	ip, #0
   17cec:	strne	ip, [r4]
   17cf0:	movne	r3, ip
   17cf4:	add	r1, r1, ip
   17cf8:	rsb	r2, r3, r2
   17cfc:	ldr	r3, [sp, #8]
   17d00:	bl	17bbc <fputs@plt+0x5578>
   17d04:	subs	r3, r0, #0
   17d08:	ble	17d20 <fputs@plt+0x56dc>
   17d0c:	ldr	r2, [r4]
   17d10:	mov	r0, r3
   17d14:	add	r3, r2, r3
   17d18:	str	r3, [r4]
   17d1c:	pop	{r4, pc}
   17d20:	mov	r0, r3
   17d24:	pop	{r4, pc}
   17d28:	mvn	r0, #0
   17d2c:	pop	{r4, pc}
   17d30:	cmp	r2, #0
   17d34:	cmpne	r0, #0
   17d38:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   17d3c:	mov	r4, r0
   17d40:	mov	r7, r2
   17d44:	movne	r3, #0
   17d48:	moveq	r3, #1
   17d4c:	mov	r9, r1
   17d50:	beq	17dec <fputs@plt+0x57a8>
   17d54:	cmp	r1, #0
   17d58:	beq	17dec <fputs@plt+0x57a8>
   17d5c:	mov	r6, r0
   17d60:	mov	r8, #1
   17d64:	ldrb	r5, [r6], #1
   17d68:	cmp	r5, #0
   17d6c:	beq	17ddc <fputs@plt+0x5798>
   17d70:	cmp	r5, #44	; 0x2c
   17d74:	ldrsb	r0, [r4, #1]
   17d78:	moveq	r5, r4
   17d7c:	movne	r5, #0
   17d80:	cmp	r3, #0
   17d84:	moveq	r3, r4
   17d88:	cmp	r0, #0
   17d8c:	mov	r0, r3
   17d90:	moveq	r5, r6
   17d94:	cmp	r5, #0
   17d98:	rsb	r1, r3, r5
   17d9c:	beq	17dd4 <fputs@plt+0x5790>
   17da0:	cmp	r3, r5
   17da4:	bcs	17de4 <fputs@plt+0x57a0>
   17da8:	blx	r7
   17dac:	mov	r3, #0
   17db0:	cmp	r0, #0
   17db4:	and	r2, r0, #7
   17db8:	poplt	{r3, r4, r5, r6, r7, r8, r9, pc}
   17dbc:	ldrb	r1, [r9, r0, asr #3]
   17dc0:	orr	r2, r1, r8, lsl r2
   17dc4:	strb	r2, [r9, r0, asr #3]
   17dc8:	ldrsb	r2, [r5]
   17dcc:	cmp	r2, r3
   17dd0:	beq	17ddc <fputs@plt+0x5798>
   17dd4:	adds	r4, r4, #1
   17dd8:	bne	17d64 <fputs@plt+0x5720>
   17ddc:	mov	r0, #0
   17de0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17de4:	mvn	r0, #0
   17de8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17dec:	mvn	r0, #21
   17df0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17df4:	cmp	r2, #0
   17df8:	cmpne	r0, #0
   17dfc:	push	{r4, r5, r6, r7, r8, lr}
   17e00:	movne	r3, #0
   17e04:	moveq	r3, #1
   17e08:	mov	r4, r0
   17e0c:	mov	r8, r2
   17e10:	mov	r7, r1
   17e14:	beq	17ea8 <fputs@plt+0x5864>
   17e18:	cmp	r1, #0
   17e1c:	beq	17ea8 <fputs@plt+0x5864>
   17e20:	mov	r6, r0
   17e24:	ldrb	r5, [r6], #1
   17e28:	cmp	r5, #0
   17e2c:	beq	17e98 <fputs@plt+0x5854>
   17e30:	cmp	r5, #44	; 0x2c
   17e34:	ldrsb	r0, [r4, #1]
   17e38:	moveq	r5, r4
   17e3c:	movne	r5, #0
   17e40:	cmp	r3, #0
   17e44:	moveq	r3, r4
   17e48:	cmp	r0, #0
   17e4c:	mov	r0, r3
   17e50:	moveq	r5, r6
   17e54:	cmp	r5, #0
   17e58:	rsb	r1, r3, r5
   17e5c:	beq	17e90 <fputs@plt+0x584c>
   17e60:	cmp	r3, r5
   17e64:	bcs	17ea0 <fputs@plt+0x585c>
   17e68:	blx	r8
   17e6c:	mov	r3, #0
   17e70:	cmp	r0, #0
   17e74:	poplt	{r4, r5, r6, r7, r8, pc}
   17e78:	ldr	r2, [r7]
   17e7c:	orr	r0, r2, r0
   17e80:	str	r0, [r7]
   17e84:	ldrsb	r2, [r5]
   17e88:	cmp	r2, r3
   17e8c:	beq	17e98 <fputs@plt+0x5854>
   17e90:	adds	r4, r4, #1
   17e94:	bne	17e24 <fputs@plt+0x57e0>
   17e98:	mov	r0, #0
   17e9c:	pop	{r4, r5, r6, r7, r8, pc}
   17ea0:	mvn	r0, #0
   17ea4:	pop	{r4, r5, r6, r7, r8, pc}
   17ea8:	mvn	r0, #21
   17eac:	pop	{r4, r5, r6, r7, r8, pc}
   17eb0:	ldr	ip, [pc, #380]	; 18034 <fputs@plt+0x59f0>
   17eb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   17eb8:	subs	r4, r0, #0
   17ebc:	ldr	r0, [pc, #372]	; 18038 <fputs@plt+0x59f4>
   17ec0:	add	ip, pc, ip
   17ec4:	mov	r6, r2
   17ec8:	sub	sp, sp, #12
   17ecc:	mov	r2, ip
   17ed0:	mov	r8, #0
   17ed4:	ldr	r7, [ip, r0]
   17ed8:	mov	r9, r1
   17edc:	str	r8, [sp]
   17ee0:	ldr	r2, [r7]
   17ee4:	str	r2, [sp, #4]
   17ee8:	beq	17f58 <fputs@plt+0x5914>
   17eec:	str	r3, [r1]
   17ef0:	str	r3, [r6]
   17ef4:	bl	125fc <__errno_location@plt>
   17ef8:	str	r8, [r0]
   17efc:	mov	r5, r0
   17f00:	ldrsb	r3, [r4]
   17f04:	cmp	r3, #58	; 0x3a
   17f08:	beq	17f74 <fputs@plt+0x5930>
   17f0c:	mov	r0, r4
   17f10:	mov	r2, #10
   17f14:	mov	r1, sp
   17f18:	bl	12308 <strtol@plt>
   17f1c:	str	r0, [r9]
   17f20:	str	r0, [r6]
   17f24:	ldr	r0, [r5]
   17f28:	cmp	r0, #0
   17f2c:	bne	18028 <fputs@plt+0x59e4>
   17f30:	ldr	r3, [sp]
   17f34:	cmp	r3, #0
   17f38:	beq	18028 <fputs@plt+0x59e4>
   17f3c:	cmp	r4, r3
   17f40:	beq	18028 <fputs@plt+0x59e4>
   17f44:	ldrsb	r2, [r3]
   17f48:	cmp	r2, #58	; 0x3a
   17f4c:	beq	17fc0 <fputs@plt+0x597c>
   17f50:	cmp	r2, #45	; 0x2d
   17f54:	beq	17fd0 <fputs@plt+0x598c>
   17f58:	mov	r0, #0
   17f5c:	ldr	r2, [sp, #4]
   17f60:	ldr	r3, [r7]
   17f64:	cmp	r2, r3
   17f68:	bne	18030 <fputs@plt+0x59ec>
   17f6c:	add	sp, sp, #12
   17f70:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17f74:	add	r4, r4, #1
   17f78:	mov	r1, sp
   17f7c:	mov	r2, #10
   17f80:	mov	r0, r4
   17f84:	bl	12308 <strtol@plt>
   17f88:	str	r0, [r6]
   17f8c:	ldr	r3, [r5]
   17f90:	cmp	r3, #0
   17f94:	bne	18028 <fputs@plt+0x59e4>
   17f98:	ldr	r3, [sp]
   17f9c:	cmp	r3, #0
   17fa0:	beq	18028 <fputs@plt+0x59e4>
   17fa4:	ldrsb	r2, [r3]
   17fa8:	cmp	r2, #0
   17fac:	bne	18028 <fputs@plt+0x59e4>
   17fb0:	cmp	r4, r3
   17fb4:	movne	r0, #0
   17fb8:	mvneq	r0, #0
   17fbc:	b	17f5c <fputs@plt+0x5918>
   17fc0:	ldrsb	r2, [r3, #1]
   17fc4:	cmp	r2, #0
   17fc8:	streq	r0, [r6]
   17fcc:	beq	17f5c <fputs@plt+0x5918>
   17fd0:	add	r4, r3, #1
   17fd4:	mov	ip, #0
   17fd8:	mov	r1, sp
   17fdc:	mov	r2, #10
   17fe0:	mov	r0, r4
   17fe4:	str	ip, [r5]
   17fe8:	str	ip, [sp]
   17fec:	bl	12308 <strtol@plt>
   17ff0:	str	r0, [r6]
   17ff4:	ldr	r3, [r5]
   17ff8:	cmp	r3, #0
   17ffc:	bne	18028 <fputs@plt+0x59e4>
   18000:	ldr	r2, [sp]
   18004:	cmp	r2, #0
   18008:	beq	18028 <fputs@plt+0x59e4>
   1800c:	ldrsb	r3, [r2]
   18010:	cmp	r3, #0
   18014:	bne	18028 <fputs@plt+0x59e4>
   18018:	cmp	r4, r2
   1801c:	movne	r0, #0
   18020:	mvneq	r0, #0
   18024:	b	17f5c <fputs@plt+0x5918>
   18028:	mvn	r0, #0
   1802c:	b	17f5c <fputs@plt+0x5918>
   18030:	bl	12434 <__stack_chk_fail@plt>
   18034:	andeq	r7, r1, r8, lsr r1
   18038:	andeq	r0, r0, ip, lsr r2
   1803c:	rsbs	r2, r0, #1
   18040:	push	{r4, r5, r6, lr}
   18044:	movcc	r2, #0
   18048:	rsbs	r3, r1, #1
   1804c:	mov	r5, r0
   18050:	mov	r4, r1
   18054:	movcc	r3, #0
   18058:	ands	ip, r2, r3
   1805c:	bne	180c8 <fputs@plt+0x5a84>
   18060:	orrs	r3, r2, r3
   18064:	bne	180d0 <fputs@plt+0x5a8c>
   18068:	bl	125cc <strcmp@plt>
   1806c:	cmp	r0, #0
   18070:	beq	180c8 <fputs@plt+0x5a84>
   18074:	mov	r0, r5
   18078:	bl	1226c <strlen@plt>
   1807c:	mov	r6, r0
   18080:	mov	r0, r4
   18084:	bl	1226c <strlen@plt>
   18088:	cmp	r6, #0
   1808c:	beq	180a0 <fputs@plt+0x5a5c>
   18090:	sub	r3, r6, #1
   18094:	ldrsb	r2, [r5, r3]
   18098:	cmp	r2, #47	; 0x2f
   1809c:	moveq	r6, r3
   180a0:	cmp	r0, #0
   180a4:	beq	180b8 <fputs@plt+0x5a74>
   180a8:	sub	r3, r0, #1
   180ac:	ldrsb	r2, [r4, r3]
   180b0:	cmp	r2, #47	; 0x2f
   180b4:	moveq	r0, r3
   180b8:	cmp	r6, r0
   180bc:	beq	180d8 <fputs@plt+0x5a94>
   180c0:	mov	r0, #0
   180c4:	pop	{r4, r5, r6, pc}
   180c8:	mov	r0, #1
   180cc:	pop	{r4, r5, r6, pc}
   180d0:	mov	r0, ip
   180d4:	pop	{r4, r5, r6, pc}
   180d8:	mov	r0, r5
   180dc:	mov	r1, r4
   180e0:	mov	r2, r6
   180e4:	bl	1256c <strncmp@plt>
   180e8:	rsbs	r0, r0, #1
   180ec:	movcc	r0, #0
   180f0:	pop	{r4, r5, r6, pc}
   180f4:	ldr	r3, [pc, #248]	; 181f4 <fputs@plt+0x5bb0>
   180f8:	cmp	r0, #0
   180fc:	cmpne	r1, #0
   18100:	ldr	r2, [pc, #240]	; 181f8 <fputs@plt+0x5bb4>
   18104:	add	r3, pc, r3
   18108:	push	{r4, r5, r6, r7, r8, r9, lr}
   1810c:	sub	sp, sp, #20
   18110:	ldr	r9, [r3, r2]
   18114:	mov	r6, r1
   18118:	addne	r8, sp, #4
   1811c:	addne	r7, sp, #8
   18120:	ldr	r3, [r9]
   18124:	str	r3, [sp, #12]
   18128:	bne	18170 <fputs@plt+0x5b2c>
   1812c:	b	181e8 <fputs@plt+0x5ba4>
   18130:	cmp	r4, r3
   18134:	bne	181e8 <fputs@plt+0x5ba4>
   18138:	mov	r0, r5
   1813c:	mov	r1, r6
   18140:	mov	r2, r4
   18144:	bl	1256c <strncmp@plt>
   18148:	cmp	r0, #0
   1814c:	bne	181e8 <fputs@plt+0x5ba4>
   18150:	adds	r6, r6, r4
   18154:	moveq	r3, #0
   18158:	movne	r3, #1
   1815c:	adds	r0, r5, r4
   18160:	moveq	r3, #0
   18164:	andne	r3, r3, #1
   18168:	cmp	r3, #0
   1816c:	beq	181e8 <fputs@plt+0x5ba4>
   18170:	mov	r1, r8
   18174:	bl	16c30 <fputs@plt+0x45ec>
   18178:	mov	r1, r7
   1817c:	mov	r5, r0
   18180:	mov	r0, r6
   18184:	bl	16c30 <fputs@plt+0x45ec>
   18188:	ldr	r4, [sp, #4]
   1818c:	ldr	r3, [sp, #8]
   18190:	mov	r6, r0
   18194:	adds	r0, r3, r4
   18198:	beq	181cc <fputs@plt+0x5b88>
   1819c:	cmp	r0, #1
   181a0:	bne	18130 <fputs@plt+0x5aec>
   181a4:	cmp	r5, #0
   181a8:	beq	181b8 <fputs@plt+0x5b74>
   181ac:	ldrsb	r2, [r5]
   181b0:	cmp	r2, #47	; 0x2f
   181b4:	beq	181d0 <fputs@plt+0x5b8c>
   181b8:	cmp	r6, #0
   181bc:	beq	18130 <fputs@plt+0x5aec>
   181c0:	ldrsb	r2, [r6]
   181c4:	cmp	r2, #47	; 0x2f
   181c8:	bne	18130 <fputs@plt+0x5aec>
   181cc:	mov	r0, #1
   181d0:	ldr	r2, [sp, #12]
   181d4:	ldr	r3, [r9]
   181d8:	cmp	r2, r3
   181dc:	bne	181f0 <fputs@plt+0x5bac>
   181e0:	add	sp, sp, #20
   181e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   181e8:	mov	r0, #0
   181ec:	b	181d0 <fputs@plt+0x5b8c>
   181f0:	bl	12434 <__stack_chk_fail@plt>
   181f4:	strdeq	r6, [r1], -r4
   181f8:	andeq	r0, r0, ip, lsr r2
   181fc:	rsbs	r3, r0, #1
   18200:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18204:	movcc	r3, #0
   18208:	rsbs	r4, r1, #1
   1820c:	mov	r7, r1
   18210:	mov	r6, r2
   18214:	mov	sl, r0
   18218:	movcc	r4, #0
   1821c:	tst	r3, r4
   18220:	bne	18284 <fputs@plt+0x5c40>
   18224:	cmp	r3, #0
   18228:	bne	1829c <fputs@plt+0x5c58>
   1822c:	cmp	r4, #0
   18230:	bne	182ac <fputs@plt+0x5c68>
   18234:	bl	1226c <strlen@plt>
   18238:	mvn	r3, r0
   1823c:	cmp	r6, r3
   18240:	mov	r5, r0
   18244:	bhi	18294 <fputs@plt+0x5c50>
   18248:	add	r9, r0, r6
   1824c:	add	r0, r9, #1
   18250:	bl	1241c <malloc@plt>
   18254:	subs	r8, r0, #0
   18258:	beq	182b4 <fputs@plt+0x5c70>
   1825c:	mov	r1, sl
   18260:	mov	r2, r5
   18264:	bl	12290 <memcpy@plt>
   18268:	add	r0, r8, r5
   1826c:	mov	r1, r7
   18270:	mov	r2, r6
   18274:	bl	12290 <memcpy@plt>
   18278:	strb	r4, [r8, r9]
   1827c:	mov	r0, r8
   18280:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18284:	mov	r0, #1
   18288:	mov	r1, r0
   1828c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   18290:	b	120ec <calloc@plt>
   18294:	mov	r0, r4
   18298:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1829c:	mov	r0, r1
   182a0:	mov	r1, r2
   182a4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   182a8:	b	1214c <__strndup@plt>
   182ac:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   182b0:	b	1259c <__strdup@plt>
   182b4:	mov	r0, r8
   182b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   182bc:	push	{r3, r4, r5, lr}
   182c0:	subs	r4, r1, #0
   182c4:	mov	r5, r0
   182c8:	beq	182e8 <fputs@plt+0x5ca4>
   182cc:	mov	r0, r4
   182d0:	bl	1226c <strlen@plt>
   182d4:	mov	r1, r4
   182d8:	mov	r2, r0
   182dc:	mov	r0, r5
   182e0:	pop	{r3, r4, r5, lr}
   182e4:	b	181fc <fputs@plt+0x5bb8>
   182e8:	mov	r2, r4
   182ec:	mov	r0, r5
   182f0:	mov	r1, r4
   182f4:	pop	{r3, r4, r5, lr}
   182f8:	b	181fc <fputs@plt+0x5bb8>
   182fc:	push	{r1, r2, r3}
   18300:	mov	r1, #1
   18304:	push	{r4, r5, lr}
   18308:	sub	sp, sp, #16
   1830c:	ldr	lr, [pc, #124]	; 18390 <fputs@plt+0x5d4c>
   18310:	add	ip, sp, #32
   18314:	ldr	r4, [pc, #120]	; 18394 <fputs@plt+0x5d50>
   18318:	mov	r5, r0
   1831c:	add	lr, pc, lr
   18320:	mov	r3, ip
   18324:	ldr	r2, [sp, #28]
   18328:	add	r0, sp, #8
   1832c:	ldr	r4, [lr, r4]
   18330:	str	ip, [sp, #4]
   18334:	ldr	ip, [r4]
   18338:	str	ip, [sp, #12]
   1833c:	bl	125f0 <__vasprintf_chk@plt>
   18340:	subs	r2, r0, #0
   18344:	blt	18384 <fputs@plt+0x5d40>
   18348:	mov	r0, r5
   1834c:	ldr	r1, [sp, #8]
   18350:	bl	181fc <fputs@plt+0x5bb8>
   18354:	mov	r5, r0
   18358:	ldr	r0, [sp, #8]
   1835c:	bl	121b8 <free@plt>
   18360:	mov	r0, r5
   18364:	ldr	r2, [sp, #12]
   18368:	ldr	r3, [r4]
   1836c:	cmp	r2, r3
   18370:	bne	1838c <fputs@plt+0x5d48>
   18374:	add	sp, sp, #16
   18378:	pop	{r4, r5, lr}
   1837c:	add	sp, sp, #12
   18380:	bx	lr
   18384:	mov	r0, #0
   18388:	b	18364 <fputs@plt+0x5d20>
   1838c:	bl	12434 <__stack_chk_fail@plt>
   18390:	ldrdeq	r6, [r1], -ip
   18394:	andeq	r0, r0, ip, lsr r2
   18398:	ldr	ip, [pc, #372]	; 18514 <fputs@plt+0x5ed0>
   1839c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   183a0:	mov	r6, r0
   183a4:	ldr	r0, [pc, #364]	; 18518 <fputs@plt+0x5ed4>
   183a8:	add	ip, pc, ip
   183ac:	ldr	r4, [r6]
   183b0:	mov	r9, r3
   183b4:	sub	sp, sp, #12
   183b8:	mov	r7, r1
   183bc:	ldr	r5, [ip, r0]
   183c0:	mov	r8, r2
   183c4:	ldrsb	ip, [r4]
   183c8:	ldr	r3, [r5]
   183cc:	cmp	ip, #0
   183d0:	moveq	r0, ip
   183d4:	str	r3, [sp, #4]
   183d8:	beq	18488 <fputs@plt+0x5e44>
   183dc:	mov	r0, r4
   183e0:	mov	r1, r2
   183e4:	bl	124dc <strspn@plt>
   183e8:	ldrb	sl, [r4, r0]
   183ec:	add	r4, r4, r0
   183f0:	cmp	sl, #0
   183f4:	beq	18504 <fputs@plt+0x5ec0>
   183f8:	cmp	r9, #0
   183fc:	beq	184a0 <fputs@plt+0x5e5c>
   18400:	sxtb	r9, sl
   18404:	ldr	r0, [pc, #272]	; 1851c <fputs@plt+0x5ed8>
   18408:	mov	r1, r9
   1840c:	add	r0, pc, r0
   18410:	bl	120c8 <strchr@plt>
   18414:	cmp	r0, #0
   18418:	beq	184c4 <fputs@plt+0x5e80>
   1841c:	add	fp, r4, #1
   18420:	mov	r1, sp
   18424:	mov	r3, #0
   18428:	strb	sl, [sp]
   1842c:	mov	r0, fp
   18430:	strb	r3, [sp, #1]
   18434:	bl	16cd0 <fputs@plt+0x468c>
   18438:	add	r3, r4, r0
   1843c:	str	r0, [r7]
   18440:	ldrb	r3, [r3, #1]
   18444:	cmp	r3, #0
   18448:	beq	18504 <fputs@plt+0x5ec0>
   1844c:	sxtb	r3, r3
   18450:	cmp	r9, r3
   18454:	bne	18504 <fputs@plt+0x5ec0>
   18458:	add	r0, r0, #2
   1845c:	add	r7, r4, r0
   18460:	ldrb	r1, [r4, r0]
   18464:	cmp	r1, #0
   18468:	beq	18480 <fputs@plt+0x5e3c>
   1846c:	mov	r0, r8
   18470:	sxtb	r1, r1
   18474:	bl	120c8 <strchr@plt>
   18478:	cmp	r0, #0
   1847c:	beq	18504 <fputs@plt+0x5ec0>
   18480:	mov	r0, fp
   18484:	str	r7, [r6]
   18488:	ldr	r2, [sp, #4]
   1848c:	ldr	r3, [r5]
   18490:	cmp	r2, r3
   18494:	bne	18510 <fputs@plt+0x5ecc>
   18498:	add	sp, sp, #12
   1849c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184a0:	mov	r0, r4
   184a4:	mov	r1, r8
   184a8:	bl	12548 <strcspn@plt>
   184ac:	mov	r3, r0
   184b0:	mov	r0, r4
   184b4:	add	r4, r4, r3
   184b8:	str	r3, [r7]
   184bc:	str	r4, [r6]
   184c0:	b	18488 <fputs@plt+0x5e44>
   184c4:	mov	r1, r8
   184c8:	mov	r0, r4
   184cc:	bl	16cd0 <fputs@plt+0x468c>
   184d0:	str	r0, [r7]
   184d4:	add	r7, r4, r0
   184d8:	ldrb	r1, [r4, r0]
   184dc:	cmp	r1, #0
   184e0:	beq	184f8 <fputs@plt+0x5eb4>
   184e4:	mov	r0, r8
   184e8:	sxtb	r1, r1
   184ec:	bl	120c8 <strchr@plt>
   184f0:	cmp	r0, #0
   184f4:	beq	184bc <fputs@plt+0x5e78>
   184f8:	str	r7, [r6]
   184fc:	mov	r0, r4
   18500:	b	18488 <fputs@plt+0x5e44>
   18504:	str	r4, [r6]
   18508:	mov	r0, #0
   1850c:	b	18488 <fputs@plt+0x5e44>
   18510:	bl	12434 <__stack_chk_fail@plt>
   18514:	andeq	r6, r1, r0, asr ip
   18518:	andeq	r0, r0, ip, lsr r2
   1851c:	andeq	r6, r0, r4, ror r2
   18520:	push	{r4, lr}
   18524:	mov	r4, r0
   18528:	b	18534 <fputs@plt+0x5ef0>
   1852c:	cmp	r0, #10
   18530:	beq	1854c <fputs@plt+0x5f08>
   18534:	mov	r0, r4
   18538:	bl	122f0 <fgetc@plt>
   1853c:	cmn	r0, #1
   18540:	bne	1852c <fputs@plt+0x5ee8>
   18544:	mov	r0, #1
   18548:	pop	{r4, pc}
   1854c:	mov	r0, #0
   18550:	pop	{r4, pc}
   18554:	push	{r4, r5, r6, lr}
   18558:	mov	r4, r0
   1855c:	mov	r6, r1
   18560:	mov	r3, r2
   18564:	ldr	r0, [r0, #8]
   18568:	mov	r2, r6
   1856c:	ldr	r1, [r4, #12]
   18570:	bl	1597c <fputs@plt+0x3338>
   18574:	cmn	r0, #1
   18578:	mov	r5, r0
   1857c:	beq	18588 <fputs@plt+0x5f44>
   18580:	mov	r0, r5
   18584:	pop	{r4, r5, r6, pc}
   18588:	bl	125fc <__errno_location@plt>
   1858c:	ldr	r3, [r0]
   18590:	cmp	r3, #2
   18594:	bne	18580 <fputs@plt+0x5f3c>
   18598:	ldr	r1, [pc, #56]	; 185d8 <fputs@plt+0x5f94>
   1859c:	mov	r0, r6
   185a0:	mov	r2, #6
   185a4:	add	r1, pc, r1
   185a8:	bl	1256c <strncmp@plt>
   185ac:	cmp	r0, #0
   185b0:	bne	18580 <fputs@plt+0x5f3c>
   185b4:	ldr	r3, [r4, #16]
   185b8:	cmp	r3, #0
   185bc:	beq	18580 <fputs@plt+0x5f3c>
   185c0:	ldr	r0, [r3, #8]
   185c4:	mov	r2, r6
   185c8:	ldr	r1, [r4, #12]
   185cc:	mov	r3, #524288	; 0x80000
   185d0:	pop	{r4, r5, r6, lr}
   185d4:	b	1597c <fputs@plt+0x3338>
   185d8:	andeq	r6, r0, r0, ror #1
   185dc:	push	{r4, lr}
   185e0:	mov	r4, r0
   185e4:	mov	r0, r4
   185e8:	bl	124f4 <readdir64@plt>
   185ec:	cmp	r0, #0
   185f0:	beq	18630 <fputs@plt+0x5fec>
   185f4:	ldrb	r2, [r0, #19]
   185f8:	cmp	r2, #46	; 0x2e
   185fc:	popne	{r4, pc}
   18600:	ldrb	r2, [r0, #20]
   18604:	cmp	r2, #0
   18608:	beq	185e4 <fputs@plt+0x5fa0>
   1860c:	cmp	r2, #46	; 0x2e
   18610:	popne	{r4, pc}
   18614:	ldrb	r2, [r0, #21]
   18618:	cmp	r2, #0
   1861c:	popne	{r4, pc}
   18620:	mov	r0, r4
   18624:	bl	124f4 <readdir64@plt>
   18628:	cmp	r0, #0
   1862c:	bne	185f4 <fputs@plt+0x5fb0>
   18630:	pop	{r4, pc}
   18634:	push	{r4, r5, lr}
   18638:	sub	sp, sp, #20
   1863c:	mov	r4, r2
   18640:	mov	r5, r3
   18644:	ldr	lr, [sp, #32]
   18648:	cmp	lr, #0
   1864c:	beq	186bc <fputs@plt+0x6078>
   18650:	lsr	ip, r0, #12
   18654:	ldr	r3, [pc, #184]	; 18714 <fputs@plt+0x60d0>
   18658:	orr	ip, ip, r1, lsl #20
   1865c:	bic	r1, r1, #4080	; 0xff0
   18660:	uxtb	r2, r0
   18664:	bic	r1, r1, #15
   18668:	bic	ip, ip, #255	; 0xff
   1866c:	ubfx	r0, r0, #8, #12
   18670:	orr	r0, r1, r0
   18674:	add	r3, pc, r3
   18678:	orr	ip, ip, r2
   1867c:	str	r3, [sp]
   18680:	stmib	sp, {r0, ip}
   18684:	mov	r1, r5
   18688:	str	lr, [sp, #12]
   1868c:	mov	r0, r4
   18690:	mov	r2, #1
   18694:	mvn	r3, #0
   18698:	bl	12368 <__snprintf_chk@plt>
   1869c:	cmp	r0, #0
   186a0:	blt	1870c <fputs@plt+0x60c8>
   186a4:	add	r0, r0, #1
   186a8:	cmp	r5, r0
   186ac:	movcs	r0, r4
   186b0:	movcc	r0, #0
   186b4:	add	sp, sp, #20
   186b8:	pop	{r4, r5, pc}
   186bc:	lsr	r3, r0, #12
   186c0:	ldr	r2, [pc, #80]	; 18718 <fputs@plt+0x60d4>
   186c4:	orr	r3, r3, r1, lsl #20
   186c8:	bic	r1, r1, #4080	; 0xff0
   186cc:	uxtb	ip, r0
   186d0:	bic	r3, r3, #255	; 0xff
   186d4:	ubfx	r0, r0, #8, #12
   186d8:	bic	r1, r1, #15
   186dc:	orr	r3, r3, ip
   186e0:	orr	r1, r1, r0
   186e4:	add	r2, pc, r2
   186e8:	str	r3, [sp, #8]
   186ec:	str	r1, [sp, #4]
   186f0:	mov	r0, r4
   186f4:	str	r2, [sp]
   186f8:	mov	r1, r5
   186fc:	mov	r2, #1
   18700:	mvn	r3, #0
   18704:	bl	12368 <__snprintf_chk@plt>
   18708:	b	1869c <fputs@plt+0x6058>
   1870c:	mov	r0, #0
   18710:	b	186b4 <fputs@plt+0x6070>
   18714:	andeq	r6, r0, r8, lsl r0
   18718:	andeq	r5, r0, r0, asr #31
   1871c:	ldr	ip, [pc, #120]	; 1879c <fputs@plt+0x6158>
   18720:	mov	r3, #4096	; 0x1000
   18724:	push	{r4, r5, lr}
   18728:	add	ip, pc, ip
   1872c:	ldr	lr, [pc, #108]	; 187a0 <fputs@plt+0x615c>
   18730:	sub	sp, sp, #4160	; 0x1040
   18734:	sub	sp, sp, #60	; 0x3c
   18738:	add	r5, sp, #116	; 0x74
   1873c:	ldr	r4, [ip, lr]
   18740:	add	lr, sp, #8192	; 0x2000
   18744:	str	r2, [sp]
   18748:	mov	r2, r5
   1874c:	ldr	ip, [r4]
   18750:	str	ip, [lr, #-3980]	; 0xfffff074
   18754:	bl	18634 <fputs@plt+0x5ff0>
   18758:	cmp	r0, #0
   1875c:	beq	18778 <fputs@plt+0x6134>
   18760:	mov	r1, r5
   18764:	add	r2, sp, #8
   18768:	mov	r0, #3
   1876c:	bl	123f8 <__xstat64@plt>
   18770:	rsbs	r0, r0, #1
   18774:	movcc	r0, #0
   18778:	add	r3, sp, #8192	; 0x2000
   1877c:	ldr	r2, [r3, #-3980]	; 0xfffff074
   18780:	ldr	r3, [r4]
   18784:	cmp	r2, r3
   18788:	bne	18798 <fputs@plt+0x6154>
   1878c:	add	sp, sp, #4160	; 0x1040
   18790:	add	sp, sp, #60	; 0x3c
   18794:	pop	{r4, r5, pc}
   18798:	bl	12434 <__stack_chk_fail@plt>
   1879c:	ldrdeq	r6, [r1], -r0
   187a0:	andeq	r0, r0, ip, lsr r2
   187a4:	push	{lr}		; (str lr, [sp, #-4]!)
   187a8:	sub	sp, sp, #12
   187ac:	mov	ip, #0
   187b0:	str	ip, [sp]
   187b4:	bl	18634 <fputs@plt+0x5ff0>
   187b8:	add	sp, sp, #12
   187bc:	pop	{pc}		; (ldr pc, [sp], #4)
   187c0:	ldr	r3, [pc, #544]	; 189e8 <fputs@plt+0x63a4>
   187c4:	mov	r2, #5
   187c8:	ldr	ip, [pc, #540]	; 189ec <fputs@plt+0x63a8>
   187cc:	add	r3, pc, r3
   187d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187d4:	sub	sp, sp, #4224	; 0x1080
   187d8:	ldr	r6, [r3, ip]
   187dc:	sub	sp, sp, #12
   187e0:	mov	r7, r0
   187e4:	ldr	r0, [pc, #516]	; 189f0 <fputs@plt+0x63ac>
   187e8:	add	ip, sp, #8192	; 0x2000
   187ec:	mov	r8, r1
   187f0:	ldr	r3, [r6]
   187f4:	add	r0, pc, r0
   187f8:	mov	r1, r7
   187fc:	str	r3, [ip, #-3964]	; 0xfffff084
   18800:	bl	1256c <strncmp@plt>
   18804:	cmp	r0, #0
   18808:	beq	188c4 <fputs@plt+0x6280>
   1880c:	cmp	r8, #0
   18810:	mov	r4, #0
   18814:	mov	r5, #0
   18818:	bne	188f4 <fputs@plt+0x62b0>
   1881c:	ldr	r2, [pc, #464]	; 189f4 <fputs@plt+0x63b0>
   18820:	add	sl, sp, #132	; 0x84
   18824:	mov	r1, #4096	; 0x1000
   18828:	str	r7, [sp, #4]
   1882c:	add	r2, pc, r2
   18830:	mov	r3, r1
   18834:	str	r2, [sp]
   18838:	mov	r0, sl
   1883c:	mov	r2, #1
   18840:	bl	12368 <__snprintf_chk@plt>
   18844:	cmp	r0, #0
   18848:	blt	18944 <fputs@plt+0x6300>
   1884c:	add	r0, r0, #1
   18850:	cmp	r0, #4096	; 0x1000
   18854:	bhi	18944 <fputs@plt+0x6300>
   18858:	ldr	r1, [pc, #408]	; 189f8 <fputs@plt+0x63b4>
   1885c:	add	ip, sp, #4224	; 0x1080
   18860:	add	ip, ip, #8
   18864:	movw	r9, #61324	; 0xef8c
   18868:	movw	fp, #61328	; 0xef90
   1886c:	movt	r9, #65535	; 0xffff
   18870:	movt	fp, #65535	; 0xffff
   18874:	mov	r0, sl
   18878:	add	r1, pc, r1
   1887c:	mov	r7, #0
   18880:	str	r7, [ip, r9]
   18884:	str	r7, [ip, fp]
   18888:	bl	122a8 <fopen64@plt>
   1888c:	subs	r8, r0, #0
   18890:	beq	18944 <fputs@plt+0x6300>
   18894:	ldr	r1, [pc, #352]	; 189fc <fputs@plt+0x63b8>
   18898:	add	r2, sp, #20
   1889c:	add	r3, sp, #24
   188a0:	add	r1, pc, r1
   188a4:	bl	12620 <fscanf@plt>
   188a8:	cmp	r0, #2
   188ac:	beq	189a4 <fputs@plt+0x6360>
   188b0:	mov	r0, r8
   188b4:	bl	12080 <fclose@plt>
   188b8:	mov	r0, r4
   188bc:	mov	r1, r5
   188c0:	b	1894c <fputs@plt+0x6308>
   188c4:	add	r4, sp, #24
   188c8:	mov	r0, #3
   188cc:	mov	r1, r7
   188d0:	mov	r2, r4
   188d4:	bl	123f8 <__xstat64@plt>
   188d8:	cmp	r0, #0
   188dc:	beq	1896c <fputs@plt+0x6328>
   188e0:	cmp	r8, #0
   188e4:	mov	r4, #0
   188e8:	mov	r5, #0
   188ec:	add	r7, r7, #5
   188f0:	beq	1881c <fputs@plt+0x61d8>
   188f4:	ldr	r0, [pc, #260]	; 18a00 <fputs@plt+0x63bc>
   188f8:	mov	r1, r7
   188fc:	mov	r2, #3
   18900:	add	r0, pc, r0
   18904:	bl	1256c <strncmp@plt>
   18908:	cmp	r0, #0
   1890c:	beq	1881c <fputs@plt+0x61d8>
   18910:	ldr	r2, [pc, #236]	; 18a04 <fputs@plt+0x63c0>
   18914:	add	sl, sp, #132	; 0x84
   18918:	mov	r1, #4096	; 0x1000
   1891c:	str	r8, [sp, #4]
   18920:	add	r2, pc, r2
   18924:	mov	r3, r1
   18928:	str	r2, [sp]
   1892c:	mov	r0, sl
   18930:	str	r7, [sp, #8]
   18934:	mov	r2, #1
   18938:	bl	12368 <__snprintf_chk@plt>
   1893c:	cmp	r0, #0
   18940:	bge	1884c <fputs@plt+0x6208>
   18944:	mov	r0, #0
   18948:	mov	r1, r0
   1894c:	add	r3, sp, #8192	; 0x2000
   18950:	ldr	r2, [r3, #-3964]	; 0xfffff084
   18954:	ldr	r3, [r6]
   18958:	cmp	r2, r3
   1895c:	bne	189e4 <fputs@plt+0x63a0>
   18960:	add	sp, sp, #4224	; 0x1080
   18964:	add	sp, sp, #12
   18968:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1896c:	ldrd	r4, [r4, #32]
   18970:	orrs	r3, r4, r5
   18974:	movne	r3, #0
   18978:	moveq	r3, #1
   1897c:	cmp	r8, #0
   18980:	moveq	r2, #0
   18984:	andne	r2, r3, #1
   18988:	cmp	r2, #0
   1898c:	bne	188f4 <fputs@plt+0x62b0>
   18990:	cmp	r3, #0
   18994:	moveq	r0, r4
   18998:	moveq	r1, r5
   1899c:	beq	1894c <fputs@plt+0x6308>
   189a0:	b	1881c <fputs@plt+0x61d8>
   189a4:	add	ip, sp, #4224	; 0x1080
   189a8:	add	ip, ip, #8
   189ac:	ldr	r0, [ip, fp]
   189b0:	ldr	ip, [ip, r9]
   189b4:	bic	r1, r0, #255	; 0xff
   189b8:	bic	r3, ip, #4080	; 0xff0
   189bc:	ubfx	ip, ip, #0, #12
   189c0:	uxtb	r0, r0
   189c4:	lsl	r4, r1, #12
   189c8:	bic	r3, r3, #15
   189cc:	lsr	r5, r1, #20
   189d0:	orr	r0, r0, ip, lsl #8
   189d4:	orr	r4, r4, r7
   189d8:	orr	r5, r5, r3
   189dc:	orr	r4, r4, r0
   189e0:	b	188b0 <fputs@plt+0x626c>
   189e4:	bl	12434 <__stack_chk_fail@plt>
   189e8:	andeq	r6, r1, ip, lsr #16
   189ec:	andeq	r0, r0, ip, lsr r2
   189f0:	andeq	r5, r0, r8, asr #29
   189f4:			; <UNDEFINED> instruction: 0x00005eb0
   189f8:			; <UNDEFINED> instruction: 0x00005dbc
   189fc:	andeq	r5, r0, r4, lsr #30
   18a00:	ldrdeq	r4, [r0], -r0
   18a04:	andeq	r5, r0, r4, lsr #27
   18a08:	push	{r4, lr}
   18a0c:	subs	r4, r0, #0
   18a10:	popeq	{r4, pc}
   18a14:	ldr	r0, [r4, #8]
   18a18:	cmp	r0, #0
   18a1c:	blt	18a24 <fputs@plt+0x63e0>
   18a20:	bl	123b0 <close@plt>
   18a24:	ldr	r0, [r4, #12]
   18a28:	bl	121b8 <free@plt>
   18a2c:	mov	r0, r4
   18a30:	mov	r1, #0
   18a34:	mov	r2, #40	; 0x28
   18a38:	bl	12104 <memset@plt>
   18a3c:	mvn	r3, #0
   18a40:	str	r3, [r4, #8]
   18a44:	pop	{r4, pc}
   18a48:	ldr	ip, [pc, #232]	; 18b38 <fputs@plt+0x64f4>
   18a4c:	mov	r1, #0
   18a50:	push	{r4, r5, r6, r7, r8, r9, lr}
   18a54:	add	ip, pc, ip
   18a58:	ldr	lr, [pc, #220]	; 18b3c <fputs@plt+0x64f8>
   18a5c:	mov	r5, r3
   18a60:	mov	r3, ip
   18a64:	sub	sp, sp, #4096	; 0x1000
   18a68:	sub	sp, sp, #12
   18a6c:	mov	r4, r2
   18a70:	ldr	r8, [r3, lr]
   18a74:	add	ip, sp, #8192	; 0x2000
   18a78:	add	r7, sp, #4
   18a7c:	mov	r2, #40	; 0x28
   18a80:	ldr	r9, [ip, #-4056]	; 0xfffff028
   18a84:	add	ip, sp, #8192	; 0x2000
   18a88:	ldr	r3, [r8]
   18a8c:	mov	r6, r0
   18a90:	str	r3, [ip, #-4092]	; 0xfffff004
   18a94:	bl	12104 <memset@plt>
   18a98:	mvn	r3, #0
   18a9c:	mov	r0, r4
   18aa0:	str	r3, [r6, #8]
   18aa4:	mov	r1, r5
   18aa8:	mov	r3, #4096	; 0x1000
   18aac:	mov	r2, r7
   18ab0:	bl	187a4 <fputs@plt+0x6160>
   18ab4:	cmp	r0, #0
   18ab8:	beq	18af4 <fputs@plt+0x64b0>
   18abc:	mov	r0, r7
   18ac0:	mov	r1, #524288	; 0x80000
   18ac4:	bl	12320 <open64@plt>
   18ac8:	cmp	r0, #0
   18acc:	blt	18af4 <fputs@plt+0x64b0>
   18ad0:	str	r0, [r6, #8]
   18ad4:	mov	r0, r7
   18ad8:	bl	1259c <__strdup@plt>
   18adc:	cmp	r0, #0
   18ae0:	str	r0, [r6, #12]
   18ae4:	strdne	r4, [r6]
   18ae8:	movne	r0, #0
   18aec:	strne	r9, [r6, #16]
   18af0:	bne	18b14 <fputs@plt+0x64d0>
   18af4:	bl	125fc <__errno_location@plt>
   18af8:	ldr	r0, [r0]
   18afc:	cmp	r0, #0
   18b00:	rsbgt	r4, r0, #0
   18b04:	mov	r0, r6
   18b08:	mvnle	r4, #0
   18b0c:	bl	18a08 <fputs@plt+0x63c4>
   18b10:	mov	r0, r4
   18b14:	add	r3, sp, #8192	; 0x2000
   18b18:	ldr	r2, [r3, #-4092]	; 0xfffff004
   18b1c:	ldr	r3, [r8]
   18b20:	cmp	r2, r3
   18b24:	bne	18b34 <fputs@plt+0x64f0>
   18b28:	add	sp, sp, #4096	; 0x1000
   18b2c:	add	sp, sp, #12
   18b30:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18b34:	bl	12434 <__stack_chk_fail@plt>
   18b38:	andeq	r6, r1, r4, lsr #11
   18b3c:	andeq	r0, r0, ip, lsr r2
   18b40:	push	{r4, r5, r6, r7, lr}
   18b44:	sub	sp, sp, #12
   18b48:	mov	r4, r0
   18b4c:	mov	r5, r1
   18b50:	mov	r6, r2
   18b54:	ldr	r0, [r0, #8]
   18b58:	ldr	r1, [r4, #12]
   18b5c:	mov	ip, #0
   18b60:	mov	r2, r5
   18b64:	mov	r3, r6
   18b68:	str	ip, [sp]
   18b6c:	bl	1595c <fputs@plt+0x3318>
   18b70:	subs	r7, r0, #0
   18b74:	beq	18b88 <fputs@plt+0x6544>
   18b78:	bl	125fc <__errno_location@plt>
   18b7c:	ldr	r3, [r0]
   18b80:	cmp	r3, #2
   18b84:	beq	18b94 <fputs@plt+0x6550>
   18b88:	mov	r0, r7
   18b8c:	add	sp, sp, #12
   18b90:	pop	{r4, r5, r6, r7, pc}
   18b94:	ldr	r1, [pc, #64]	; 18bdc <fputs@plt+0x6598>
   18b98:	mov	r0, r5
   18b9c:	mov	r2, #6
   18ba0:	add	r1, pc, r1
   18ba4:	bl	1256c <strncmp@plt>
   18ba8:	subs	ip, r0, #0
   18bac:	bne	18b88 <fputs@plt+0x6544>
   18bb0:	ldr	r3, [r4, #16]
   18bb4:	cmp	r3, #0
   18bb8:	beq	18b88 <fputs@plt+0x6544>
   18bbc:	ldr	r1, [r3, #12]
   18bc0:	mov	r2, r5
   18bc4:	ldr	r0, [r3, #8]
   18bc8:	mov	r3, r6
   18bcc:	str	ip, [sp]
   18bd0:	bl	1595c <fputs@plt+0x3318>
   18bd4:	add	sp, sp, #12
   18bd8:	pop	{r4, r5, r6, r7, pc}
   18bdc:	andeq	r5, r0, r4, ror #21
   18be0:	ldr	r3, [pc, #68]	; 18c2c <fputs@plt+0x65e8>
   18be4:	ldr	ip, [pc, #68]	; 18c30 <fputs@plt+0x65ec>
   18be8:	add	r3, pc, r3
   18bec:	push	{r4, lr}
   18bf0:	sub	sp, sp, #112	; 0x70
   18bf4:	ldr	r4, [r3, ip]
   18bf8:	mov	r2, sp
   18bfc:	ldr	r3, [r4]
   18c00:	str	r3, [sp, #108]	; 0x6c
   18c04:	bl	18b40 <fputs@plt+0x64fc>
   18c08:	ldr	r2, [sp, #108]	; 0x6c
   18c0c:	ldr	r3, [r4]
   18c10:	rsbs	r0, r0, #1
   18c14:	movcc	r0, #0
   18c18:	cmp	r2, r3
   18c1c:	bne	18c28 <fputs@plt+0x65e4>
   18c20:	add	sp, sp, #112	; 0x70
   18c24:	pop	{r4, pc}
   18c28:	bl	12434 <__stack_chk_fail@plt>
   18c2c:	andeq	r6, r1, r0, lsl r4
   18c30:	andeq	r0, r0, ip, lsr r2
   18c34:	push	{r4, r5, lr}
   18c38:	mov	r4, r1
   18c3c:	ldr	r1, [r0, #12]
   18c40:	sub	sp, sp, #12
   18c44:	mov	r5, r2
   18c48:	cmp	r1, #0
   18c4c:	beq	18c8c <fputs@plt+0x6648>
   18c50:	cmp	r4, #0
   18c54:	beq	18c74 <fputs@plt+0x6630>
   18c58:	ldr	r0, [r0, #8]
   18c5c:	mov	r2, r4
   18c60:	str	r3, [sp]
   18c64:	mov	r3, r5
   18c68:	bl	159b0 <fputs@plt+0x336c>
   18c6c:	add	sp, sp, #12
   18c70:	pop	{r4, r5, pc}
   18c74:	mov	r0, r1
   18c78:	mov	r1, r2
   18c7c:	mov	r2, r3
   18c80:	add	sp, sp, #12
   18c84:	pop	{r4, r5, lr}
   18c88:	b	124c4 <readlink@plt>
   18c8c:	mvn	r0, #0
   18c90:	b	18c6c <fputs@plt+0x6628>
   18c94:	push	{r4, r5, r6, lr}
   18c98:	subs	r5, r1, #0
   18c9c:	beq	18cd4 <fputs@plt+0x6690>
   18ca0:	mov	r2, #524288	; 0x80000
   18ca4:	bl	18554 <fputs@plt+0x5f10>
   18ca8:	mov	r4, r0
   18cac:	cmp	r4, #0
   18cb0:	blt	18cec <fputs@plt+0x66a8>
   18cb4:	mov	r0, r4
   18cb8:	bl	12638 <fdopendir@plt>
   18cbc:	subs	r6, r0, #0
   18cc0:	beq	18d00 <fputs@plt+0x66bc>
   18cc4:	cmp	r5, #0
   18cc8:	beq	18cf4 <fputs@plt+0x66b0>
   18ccc:	mov	r0, r6
   18cd0:	pop	{r4, r5, r6, pc}
   18cd4:	ldr	r0, [r0, #8]
   18cd8:	cmp	r0, #0
   18cdc:	blt	18cec <fputs@plt+0x66a8>
   18ce0:	bl	124b8 <dup@plt>
   18ce4:	mov	r4, r0
   18ce8:	b	18cac <fputs@plt+0x6668>
   18cec:	mov	r0, #0
   18cf0:	pop	{r4, r5, r6, pc}
   18cf4:	bl	1247c <rewinddir@plt>
   18cf8:	mov	r0, r6
   18cfc:	pop	{r4, r5, r6, pc}
   18d00:	mov	r0, r4
   18d04:	bl	123b0 <close@plt>
   18d08:	mov	r0, r6
   18d0c:	pop	{r4, r5, r6, pc}
   18d10:	ldr	ip, [pc, #348]	; 18e74 <fputs@plt+0x6830>
   18d14:	push	{r4, r5, r6, r7, r8, lr}
   18d18:	mov	r6, r1
   18d1c:	ldr	r1, [pc, #340]	; 18e78 <fputs@plt+0x6834>
   18d20:	add	ip, pc, ip
   18d24:	ldrb	r3, [r6, #18]
   18d28:	sub	sp, sp, #272	; 0x110
   18d2c:	mov	r4, r2
   18d30:	mov	r7, r0
   18d34:	ldr	r5, [ip, r1]
   18d38:	cmp	r3, #10
   18d3c:	cmpne	r3, #4
   18d40:	mov	r2, ip
   18d44:	ldr	r3, [r5]
   18d48:	str	r3, [sp, #268]	; 0x10c
   18d4c:	bne	18dcc <fputs@plt+0x6788>
   18d50:	cmp	r4, #0
   18d54:	beq	18e24 <fputs@plt+0x67e0>
   18d58:	ldrsb	r1, [r4]
   18d5c:	cmp	r1, #47	; 0x2f
   18d60:	beq	18de8 <fputs@plt+0x67a4>
   18d64:	mov	r0, r4
   18d68:	add	r8, r6, #19
   18d6c:	bl	1226c <strlen@plt>
   18d70:	mov	r7, r0
   18d74:	mov	r0, r8
   18d78:	bl	1226c <strlen@plt>
   18d7c:	cmp	r7, r0
   18d80:	bcs	18dcc <fputs@plt+0x6788>
   18d84:	mov	r0, r4
   18d88:	mov	r1, r8
   18d8c:	mov	r2, r7
   18d90:	bl	1256c <strncmp@plt>
   18d94:	cmp	r0, #0
   18d98:	bne	18dcc <fputs@plt+0x6788>
   18d9c:	add	r6, r6, r7
   18da0:	ldrb	r4, [r6, #19]
   18da4:	cmp	r4, #112	; 0x70
   18da8:	beq	18e00 <fputs@plt+0x67bc>
   18dac:	bl	123ec <__ctype_b_loc@plt>
   18db0:	ldr	r3, [r0]
   18db4:	sxtb	r4, r4
   18db8:	sxth	r4, r4
   18dbc:	lsl	r4, r4, #1
   18dc0:	ldrh	r0, [r3, r4]
   18dc4:	ubfx	r0, r0, #11, #1
   18dc8:	b	18dd0 <fputs@plt+0x678c>
   18dcc:	mov	r0, #0
   18dd0:	ldr	r2, [sp, #268]	; 0x10c
   18dd4:	ldr	r3, [r5]
   18dd8:	cmp	r2, r3
   18ddc:	bne	18e70 <fputs@plt+0x682c>
   18de0:	add	sp, sp, #272	; 0x110
   18de4:	pop	{r4, r5, r6, r7, r8, pc}
   18de8:	mov	r0, r4
   18dec:	bl	1211c <strrchr@plt>
   18df0:	cmp	r0, #0
   18df4:	beq	18dd0 <fputs@plt+0x678c>
   18df8:	add	r4, r0, #1
   18dfc:	b	18d64 <fputs@plt+0x6720>
   18e00:	bl	123ec <__ctype_b_loc@plt>
   18e04:	ldrsb	r2, [r6, #20]
   18e08:	lsl	r2, r2, #1
   18e0c:	ldr	r3, [r0]
   18e10:	ldrh	r2, [r3, r2]
   18e14:	tst	r2, #2048	; 0x800
   18e18:	movne	r0, #1
   18e1c:	beq	18db4 <fputs@plt+0x6770>
   18e20:	b	18dd0 <fputs@plt+0x678c>
   18e24:	add	r8, sp, #12
   18e28:	ldr	r3, [pc, #76]	; 18e7c <fputs@plt+0x6838>
   18e2c:	mov	r1, #256	; 0x100
   18e30:	mov	r2, #1
   18e34:	add	r3, pc, r3
   18e38:	add	r6, r6, #19
   18e3c:	mov	r0, r8
   18e40:	stm	sp, {r3, r6}
   18e44:	mov	r3, r1
   18e48:	bl	12368 <__snprintf_chk@plt>
   18e4c:	mov	r0, r7
   18e50:	bl	12374 <dirfd@plt>
   18e54:	mov	r1, r8
   18e58:	mov	r3, r4
   18e5c:	mov	r2, #4
   18e60:	bl	12494 <faccessat@plt>
   18e64:	rsbs	r0, r0, #1
   18e68:	movcc	r0, #0
   18e6c:	b	18dd0 <fputs@plt+0x678c>
   18e70:	bl	12434 <__stack_chk_fail@plt>
   18e74:	ldrdeq	r6, [r1], -r8
   18e78:	andeq	r0, r0, ip, lsr r2
   18e7c:			; <UNDEFINED> instruction: 0x000058bc
   18e80:	push	{r2, r3}
   18e84:	mov	r2, #524288	; 0x80000
   18e88:	ldr	r3, [pc, #136]	; 18f18 <fputs@plt+0x68d4>
   18e8c:	ldr	ip, [pc, #136]	; 18f1c <fputs@plt+0x68d8>
   18e90:	add	r3, pc, r3
   18e94:	push	{r4, r5, r6, lr}
   18e98:	sub	sp, sp, #8
   18e9c:	ldr	r4, [r3, ip]
   18ea0:	ldr	r5, [sp, #24]
   18ea4:	ldr	r3, [r4]
   18ea8:	str	r3, [sp, #4]
   18eac:	bl	18554 <fputs@plt+0x5f10>
   18eb0:	cmp	r0, #0
   18eb4:	blt	18f0c <fputs@plt+0x68c8>
   18eb8:	ldr	r1, [pc, #96]	; 18f20 <fputs@plt+0x68dc>
   18ebc:	add	r1, pc, r1
   18ec0:	bl	12380 <fdopen@plt>
   18ec4:	subs	r6, r0, #0
   18ec8:	beq	18f0c <fputs@plt+0x68c8>
   18ecc:	add	r2, sp, #28
   18ed0:	mov	r1, r5
   18ed4:	str	r2, [sp]
   18ed8:	bl	1244c <vfscanf@plt>
   18edc:	mov	r5, r0
   18ee0:	mov	r0, r6
   18ee4:	bl	12080 <fclose@plt>
   18ee8:	mov	r0, r5
   18eec:	ldr	r2, [sp, #4]
   18ef0:	ldr	r3, [r4]
   18ef4:	cmp	r2, r3
   18ef8:	bne	18f14 <fputs@plt+0x68d0>
   18efc:	add	sp, sp, #8
   18f00:	pop	{r4, r5, r6, lr}
   18f04:	add	sp, sp, #8
   18f08:	bx	lr
   18f0c:	mvn	r0, #21
   18f10:	b	18eec <fputs@plt+0x68a8>
   18f14:	bl	12434 <__stack_chk_fail@plt>
   18f18:	andeq	r6, r1, r8, ror #2
   18f1c:	andeq	r0, r0, ip, lsr r2
   18f20:	andeq	r5, r0, r8, ror r7
   18f24:	ldr	ip, [pc, #132]	; 18fb0 <fputs@plt+0x696c>
   18f28:	push	{r4, r5, r6, r7, lr}
   18f2c:	add	ip, pc, ip
   18f30:	ldr	lr, [pc, #124]	; 18fb4 <fputs@plt+0x6970>
   18f34:	sub	sp, sp, #20
   18f38:	add	r3, sp, #16
   18f3c:	mov	r7, r2
   18f40:	ldr	r2, [pc, #112]	; 18fb8 <fputs@plt+0x6974>
   18f44:	mov	r4, #0
   18f48:	ldr	r6, [ip, lr]
   18f4c:	mov	r5, #0
   18f50:	add	r2, pc, r2
   18f54:	strd	r4, [r3, #-16]!
   18f58:	mov	r3, sp
   18f5c:	ldr	ip, [r6]
   18f60:	str	ip, [sp, #12]
   18f64:	bl	18e80 <fputs@plt+0x683c>
   18f68:	cmp	r0, #1
   18f6c:	bne	18f9c <fputs@plt+0x6958>
   18f70:	cmp	r7, #0
   18f74:	beq	18fa4 <fputs@plt+0x6960>
   18f78:	ldrd	r4, [sp]
   18f7c:	mov	r0, #0
   18f80:	strd	r4, [r7]
   18f84:	ldr	r2, [sp, #12]
   18f88:	ldr	r3, [r6]
   18f8c:	cmp	r2, r3
   18f90:	bne	18fac <fputs@plt+0x6968>
   18f94:	add	sp, sp, #20
   18f98:	pop	{r4, r5, r6, r7, pc}
   18f9c:	mvn	r0, #0
   18fa0:	b	18f84 <fputs@plt+0x6940>
   18fa4:	mov	r0, r7
   18fa8:	b	18f84 <fputs@plt+0x6940>
   18fac:	bl	12434 <__stack_chk_fail@plt>
   18fb0:	andeq	r6, r1, ip, asr #1
   18fb4:	andeq	r0, r0, ip, lsr r2
   18fb8:	andeq	r5, r0, ip, lsr #15
   18fbc:	ldr	ip, [pc, #132]	; 19048 <fputs@plt+0x6a04>
   18fc0:	push	{r4, r5, r6, r7, lr}
   18fc4:	add	ip, pc, ip
   18fc8:	ldr	lr, [pc, #124]	; 1904c <fputs@plt+0x6a08>
   18fcc:	sub	sp, sp, #20
   18fd0:	add	r3, sp, #16
   18fd4:	mov	r7, r2
   18fd8:	ldr	r2, [pc, #112]	; 19050 <fputs@plt+0x6a0c>
   18fdc:	mov	r4, #0
   18fe0:	ldr	r6, [ip, lr]
   18fe4:	mov	r5, #0
   18fe8:	add	r2, pc, r2
   18fec:	strd	r4, [r3, #-16]!
   18ff0:	mov	r3, sp
   18ff4:	ldr	ip, [r6]
   18ff8:	str	ip, [sp, #12]
   18ffc:	bl	18e80 <fputs@plt+0x683c>
   19000:	cmp	r0, #1
   19004:	bne	19034 <fputs@plt+0x69f0>
   19008:	cmp	r7, #0
   1900c:	beq	1903c <fputs@plt+0x69f8>
   19010:	ldrd	r4, [sp]
   19014:	mov	r0, #0
   19018:	strd	r4, [r7]
   1901c:	ldr	r2, [sp, #12]
   19020:	ldr	r3, [r6]
   19024:	cmp	r2, r3
   19028:	bne	19044 <fputs@plt+0x6a00>
   1902c:	add	sp, sp, #20
   19030:	pop	{r4, r5, r6, r7, pc}
   19034:	mvn	r0, #0
   19038:	b	1901c <fputs@plt+0x69d8>
   1903c:	mov	r0, r7
   19040:	b	1901c <fputs@plt+0x69d8>
   19044:	bl	12434 <__stack_chk_fail@plt>
   19048:	andeq	r6, r1, r4, lsr r0
   1904c:	andeq	r0, r0, ip, lsr r2
   19050:	andeq	r5, r0, ip, lsl r7
   19054:	ldr	ip, [pc, #128]	; 190dc <fputs@plt+0x6a98>
   19058:	push	{r4, r5, r6, lr}
   1905c:	add	ip, pc, ip
   19060:	ldr	lr, [pc, #120]	; 190e0 <fputs@plt+0x6a9c>
   19064:	sub	sp, sp, #8
   19068:	add	r3, sp, #8
   1906c:	mov	r6, r2
   19070:	ldr	r2, [pc, #108]	; 190e4 <fputs@plt+0x6aa0>
   19074:	mov	r5, #0
   19078:	ldr	r4, [ip, lr]
   1907c:	add	r2, pc, r2
   19080:	str	r5, [r3, #-8]!
   19084:	mov	r3, sp
   19088:	ldr	ip, [r4]
   1908c:	str	ip, [sp, #4]
   19090:	bl	18e80 <fputs@plt+0x683c>
   19094:	cmp	r0, #1
   19098:	bne	190c8 <fputs@plt+0x6a84>
   1909c:	cmp	r6, r5
   190a0:	beq	190d0 <fputs@plt+0x6a8c>
   190a4:	ldr	r3, [sp]
   190a8:	mov	r0, r5
   190ac:	str	r3, [r6]
   190b0:	ldr	r2, [sp, #4]
   190b4:	ldr	r3, [r4]
   190b8:	cmp	r2, r3
   190bc:	bne	190d8 <fputs@plt+0x6a94>
   190c0:	add	sp, sp, #8
   190c4:	pop	{r4, r5, r6, pc}
   190c8:	mvn	r0, #0
   190cc:	b	190b0 <fputs@plt+0x6a6c>
   190d0:	mov	r0, r6
   190d4:	b	190b0 <fputs@plt+0x6a6c>
   190d8:	bl	12434 <__stack_chk_fail@plt>
   190dc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   190e0:	andeq	r0, r0, ip, lsr r2
   190e4:	andeq	r4, r0, r0, asr #20
   190e8:	ldr	r3, [pc, #376]	; 19268 <fputs@plt+0x6c24>
   190ec:	ldr	r2, [pc, #376]	; 1926c <fputs@plt+0x6c28>
   190f0:	add	r3, pc, r3
   190f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190f8:	sub	sp, sp, #292	; 0x124
   190fc:	ldr	r2, [r3, r2]
   19100:	mov	fp, r1
   19104:	mov	r1, #0
   19108:	mov	r5, r0
   1910c:	ldr	r3, [r2]
   19110:	str	r2, [sp, #12]
   19114:	str	r3, [sp, #284]	; 0x11c
   19118:	bl	18c94 <fputs@plt+0x6650>
   1911c:	subs	r6, r0, #0
   19120:	beq	19220 <fputs@plt+0x6bdc>
   19124:	ldr	sl, [pc, #324]	; 19270 <fputs@plt+0x6c2c>
   19128:	add	r4, sp, #28
   1912c:	add	r9, sp, #16
   19130:	add	sl, pc, sl
   19134:	mov	r0, r6
   19138:	bl	185dc <fputs@plt+0x5f98>
   1913c:	subs	r8, r0, #0
   19140:	beq	191ec <fputs@plt+0x6ba8>
   19144:	mov	r0, r6
   19148:	mov	r1, r8
   1914c:	mov	r2, #0
   19150:	bl	18d10 <fputs@plt+0x66cc>
   19154:	cmp	r0, #0
   19158:	beq	19134 <fputs@plt+0x6af0>
   1915c:	mov	r1, #256	; 0x100
   19160:	add	r7, r8, #19
   19164:	mov	r3, r1
   19168:	mov	r2, #1
   1916c:	str	sl, [sp]
   19170:	mov	r0, r4
   19174:	str	r7, [sp, #4]
   19178:	bl	12368 <__snprintf_chk@plt>
   1917c:	mov	r0, r5
   19180:	mov	r1, r4
   19184:	mov	r2, r9
   19188:	bl	19054 <fputs@plt+0x6a10>
   1918c:	subs	r8, r0, #0
   19190:	bne	19134 <fputs@plt+0x6af0>
   19194:	ldr	r3, [sp, #16]
   19198:	cmp	r3, fp
   1919c:	bne	19134 <fputs@plt+0x6af0>
   191a0:	ldr	lr, [pc, #204]	; 19274 <fputs@plt+0x6c30>
   191a4:	mov	r1, #256	; 0x100
   191a8:	mov	r3, r1
   191ac:	mov	r2, #1
   191b0:	add	lr, pc, lr
   191b4:	str	r7, [sp, #4]
   191b8:	str	lr, [sp]
   191bc:	mov	r0, r4
   191c0:	bl	12368 <__snprintf_chk@plt>
   191c4:	ldr	r2, [pc, #172]	; 19278 <fputs@plt+0x6c34>
   191c8:	add	ip, sp, #24
   191cc:	mov	r0, r5
   191d0:	mov	r1, r4
   191d4:	add	r2, pc, r2
   191d8:	add	r3, sp, #20
   191dc:	str	ip, [sp]
   191e0:	bl	18e80 <fputs@plt+0x683c>
   191e4:	cmp	r0, #2
   191e8:	beq	1922c <fputs@plt+0x6be8>
   191ec:	mov	r4, #0
   191f0:	mov	r5, #0
   191f4:	mov	r0, r6
   191f8:	bl	123c8 <closedir@plt>
   191fc:	mov	r0, r4
   19200:	mov	r1, r5
   19204:	ldr	ip, [sp, #12]
   19208:	ldr	r2, [sp, #284]	; 0x11c
   1920c:	ldr	r3, [ip]
   19210:	cmp	r2, r3
   19214:	bne	19264 <fputs@plt+0x6c20>
   19218:	add	sp, sp, #292	; 0x124
   1921c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19220:	mov	r0, #0
   19224:	mov	r1, r0
   19228:	b	19204 <fputs@plt+0x6bc0>
   1922c:	ldr	r0, [sp, #24]
   19230:	ldr	ip, [sp, #20]
   19234:	bic	r1, r0, #255	; 0xff
   19238:	bic	r3, ip, #4080	; 0xff0
   1923c:	ubfx	ip, ip, #0, #12
   19240:	lsl	r4, r1, #12
   19244:	uxtb	r0, r0
   19248:	lsr	r5, r1, #20
   1924c:	bic	r3, r3, #15
   19250:	orr	r1, r0, ip, lsl #8
   19254:	orr	r4, r4, r8
   19258:	orr	r5, r5, r3
   1925c:	orr	r4, r4, r1
   19260:	b	191f4 <fputs@plt+0x6bb0>
   19264:	bl	12434 <__stack_chk_fail@plt>
   19268:	andeq	r5, r1, r8, lsl #30
   1926c:	andeq	r0, r0, ip, lsr r2
   19270:	ldrdeq	r5, [r0], -ip
   19274:	andeq	r5, r0, ip, ror #10
   19278:	strdeq	r5, [r0], -r0
   1927c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19280:	mov	r7, r2
   19284:	mov	r2, #1
   19288:	movt	r2, #8
   1928c:	bl	18554 <fputs@plt+0x5f10>
   19290:	subs	r8, r0, #0
   19294:	blt	19330 <fputs@plt+0x6cec>
   19298:	mov	r0, r7
   1929c:	bl	1226c <strlen@plt>
   192a0:	subs	r4, r0, #0
   192a4:	beq	19344 <fputs@plt+0x6d00>
   192a8:	bl	125fc <__errno_location@plt>
   192ac:	mov	r9, #0
   192b0:	mov	r6, r0
   192b4:	b	192d4 <fputs@plt+0x6c90>
   192b8:	subs	r4, r4, r0
   192bc:	ldr	r5, [r6]
   192c0:	addne	r7, r7, r0
   192c4:	cmp	r5, #11
   192c8:	beq	19308 <fputs@plt+0x6cc4>
   192cc:	cmp	r4, #0
   192d0:	beq	19318 <fputs@plt+0x6cd4>
   192d4:	str	r9, [r6]
   192d8:	mov	r0, r8
   192dc:	mov	r1, r7
   192e0:	mov	r2, r4
   192e4:	bl	121d0 <write@plt>
   192e8:	cmp	r0, #0
   192ec:	bgt	192b8 <fputs@plt+0x6c74>
   192f0:	ldr	r5, [r6]
   192f4:	cmp	r5, #11
   192f8:	cmpne	r5, #4
   192fc:	beq	192c4 <fputs@plt+0x6c80>
   19300:	mvn	r4, #0
   19304:	b	1931c <fputs@plt+0x6cd8>
   19308:	movw	r0, #10000	; 0x2710
   1930c:	bl	12188 <usleep@plt>
   19310:	cmp	r4, #0
   19314:	bne	192d4 <fputs@plt+0x6c90>
   19318:	ldr	r5, [r6]
   1931c:	mov	r0, r8
   19320:	bl	123b0 <close@plt>
   19324:	str	r5, [r6]
   19328:	mov	r0, r4
   1932c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19330:	bl	125fc <__errno_location@plt>
   19334:	ldr	r4, [r0]
   19338:	rsb	r4, r4, #0
   1933c:	mov	r0, r4
   19340:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19344:	bl	125fc <__errno_location@plt>
   19348:	mov	r6, r0
   1934c:	ldr	r5, [r0]
   19350:	b	1931c <fputs@plt+0x6cd8>
   19354:	ldr	ip, [pc, #360]	; 194c4 <fputs@plt+0x6e80>
   19358:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1935c:	add	ip, pc, ip
   19360:	ldr	lr, [pc, #352]	; 194c8 <fputs@plt+0x6e84>
   19364:	mov	r5, r3
   19368:	mov	r3, ip
   1936c:	sub	sp, sp, #64	; 0x40
   19370:	mov	r4, r2
   19374:	mov	r2, #1
   19378:	ldr	r8, [r3, lr]
   1937c:	movt	r2, #8
   19380:	ldr	r3, [r8]
   19384:	str	r3, [sp, #60]	; 0x3c
   19388:	bl	18554 <fputs@plt+0x5f10>
   1938c:	subs	r7, r0, #0
   19390:	blt	19408 <fputs@plt+0x6dc4>
   19394:	ldr	r2, [pc, #304]	; 194cc <fputs@plt+0x6e88>
   19398:	add	r9, sp, #20
   1939c:	mov	r1, #38	; 0x26
   193a0:	strd	r4, [sp, #8]
   193a4:	add	r2, pc, r2
   193a8:	mov	r0, r9
   193ac:	str	r2, [sp]
   193b0:	mov	r3, r1
   193b4:	mov	r2, #1
   193b8:	bl	12368 <__snprintf_chk@plt>
   193bc:	cmp	r0, #37	; 0x25
   193c0:	mov	r4, r0
   193c4:	bls	19418 <fputs@plt+0x6dd4>
   193c8:	cmp	r0, #0
   193cc:	blt	194a0 <fputs@plt+0x6e5c>
   193d0:	bl	125fc <__errno_location@plt>
   193d4:	mvn	r4, #6
   193d8:	ldr	r5, [r0]
   193dc:	mov	r6, r0
   193e0:	mov	r0, r7
   193e4:	bl	123b0 <close@plt>
   193e8:	mov	r0, r4
   193ec:	str	r5, [r6]
   193f0:	ldr	r2, [sp, #60]	; 0x3c
   193f4:	ldr	r3, [r8]
   193f8:	cmp	r2, r3
   193fc:	bne	194c0 <fputs@plt+0x6e7c>
   19400:	add	sp, sp, #64	; 0x40
   19404:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19408:	bl	125fc <__errno_location@plt>
   1940c:	ldr	r0, [r0]
   19410:	rsb	r0, r0, #0
   19414:	b	193f0 <fputs@plt+0x6dac>
   19418:	cmp	r0, #0
   1941c:	beq	194b4 <fputs@plt+0x6e70>
   19420:	bl	125fc <__errno_location@plt>
   19424:	mov	sl, #0
   19428:	mov	r6, r0
   1942c:	b	1944c <fputs@plt+0x6e08>
   19430:	subs	r4, r4, r0
   19434:	ldr	r5, [r6]
   19438:	addne	r9, r9, r0
   1943c:	cmp	r5, #11
   19440:	beq	19480 <fputs@plt+0x6e3c>
   19444:	cmp	r4, #0
   19448:	beq	19490 <fputs@plt+0x6e4c>
   1944c:	str	sl, [r6]
   19450:	mov	r0, r7
   19454:	mov	r1, r9
   19458:	mov	r2, r4
   1945c:	bl	121d0 <write@plt>
   19460:	cmp	r0, #0
   19464:	bgt	19430 <fputs@plt+0x6dec>
   19468:	ldr	r5, [r6]
   1946c:	cmp	r5, #11
   19470:	cmpne	r5, #4
   19474:	beq	1943c <fputs@plt+0x6df8>
   19478:	mvn	r4, #0
   1947c:	b	19494 <fputs@plt+0x6e50>
   19480:	movw	r0, #10000	; 0x2710
   19484:	bl	12188 <usleep@plt>
   19488:	cmp	r4, #0
   1948c:	bne	1944c <fputs@plt+0x6e08>
   19490:	ldr	r5, [r6]
   19494:	bl	125fc <__errno_location@plt>
   19498:	mov	r6, r0
   1949c:	b	193e0 <fputs@plt+0x6d9c>
   194a0:	bl	125fc <__errno_location@plt>
   194a4:	ldr	r5, [r0]
   194a8:	mov	r6, r0
   194ac:	rsb	r4, r5, #0
   194b0:	b	193e0 <fputs@plt+0x6d9c>
   194b4:	bl	125fc <__errno_location@plt>
   194b8:	ldr	r5, [r0]
   194bc:	b	19494 <fputs@plt+0x6e50>
   194c0:	bl	12434 <__stack_chk_fail@plt>
   194c4:	muleq	r1, ip, ip
   194c8:	andeq	r0, r0, ip, lsr r2
   194cc:	andeq	r5, r0, r0, ror #6
   194d0:	ldr	ip, [pc, #100]	; 1953c <fputs@plt+0x6ef8>
   194d4:	push	{r4, r5, lr}
   194d8:	add	ip, pc, ip
   194dc:	ldr	lr, [pc, #92]	; 19540 <fputs@plt+0x6efc>
   194e0:	sub	sp, sp, #1024	; 0x400
   194e4:	sub	sp, sp, #12
   194e8:	ldr	r2, [pc, #84]	; 19544 <fputs@plt+0x6f00>
   194ec:	add	r5, sp, #4
   194f0:	ldr	r4, [ip, lr]
   194f4:	add	r2, pc, r2
   194f8:	mov	r3, r5
   194fc:	ldr	ip, [r4]
   19500:	str	ip, [sp, #1028]	; 0x404
   19504:	bl	18e80 <fputs@plt+0x683c>
   19508:	cmp	r0, #1
   1950c:	movne	r0, #0
   19510:	bne	1951c <fputs@plt+0x6ed8>
   19514:	mov	r0, r5
   19518:	bl	1259c <__strdup@plt>
   1951c:	ldr	r2, [sp, #1028]	; 0x404
   19520:	ldr	r3, [r4]
   19524:	cmp	r2, r3
   19528:	bne	19538 <fputs@plt+0x6ef4>
   1952c:	add	sp, sp, #1024	; 0x400
   19530:	add	sp, sp, #12
   19534:	pop	{r4, r5, pc}
   19538:	bl	12434 <__stack_chk_fail@plt>
   1953c:	andeq	r5, r1, r0, lsr #22
   19540:	andeq	r0, r0, ip, lsr r2
   19544:	andeq	r5, r0, r0, lsr r2
   19548:	push	{r3, r4, r5, lr}
   1954c:	bl	18c94 <fputs@plt+0x6650>
   19550:	subs	r5, r0, #0
   19554:	beq	19584 <fputs@plt+0x6f40>
   19558:	mov	r4, #0
   1955c:	b	19564 <fputs@plt+0x6f20>
   19560:	add	r4, r4, #1
   19564:	mov	r0, r5
   19568:	bl	185dc <fputs@plt+0x5f98>
   1956c:	cmp	r0, #0
   19570:	bne	19560 <fputs@plt+0x6f1c>
   19574:	mov	r0, r5
   19578:	bl	123c8 <closedir@plt>
   1957c:	mov	r0, r4
   19580:	pop	{r3, r4, r5, pc}
   19584:	mov	r0, r5
   19588:	pop	{r3, r4, r5, pc}
   1958c:	push	{r4, r5, r6, lr}
   19590:	mov	r5, r1
   19594:	mov	r1, #0
   19598:	bl	18c94 <fputs@plt+0x6650>
   1959c:	subs	r4, r0, #0
   195a0:	beq	195dc <fputs@plt+0x6f98>
   195a4:	mov	r6, #0
   195a8:	b	195b8 <fputs@plt+0x6f74>
   195ac:	bl	18d10 <fputs@plt+0x66cc>
   195b0:	cmp	r0, #0
   195b4:	addne	r6, r6, #1
   195b8:	mov	r0, r4
   195bc:	bl	185dc <fputs@plt+0x5f98>
   195c0:	mov	r2, r5
   195c4:	subs	r1, r0, #0
   195c8:	mov	r0, r4
   195cc:	bne	195ac <fputs@plt+0x6f68>
   195d0:	bl	123c8 <closedir@plt>
   195d4:	mov	r0, r6
   195d8:	pop	{r4, r5, r6, pc}
   195dc:	mov	r0, r4
   195e0:	pop	{r4, r5, r6, pc}
   195e4:	ldr	r1, [pc, #108]	; 19658 <fputs@plt+0x7014>
   195e8:	push	{r3, r4, r5, lr}
   195ec:	add	r1, pc, r1
   195f0:	bl	18c94 <fputs@plt+0x6650>
   195f4:	subs	r5, r0, #0
   195f8:	beq	19650 <fputs@plt+0x700c>
   195fc:	mov	r4, #0
   19600:	b	19614 <fputs@plt+0x6fd0>
   19604:	cmp	r4, #0
   19608:	bne	19638 <fputs@plt+0x6ff4>
   1960c:	bl	1259c <__strdup@plt>
   19610:	mov	r4, r0
   19614:	mov	r0, r5
   19618:	bl	185dc <fputs@plt+0x5f98>
   1961c:	cmp	r0, #0
   19620:	add	r0, r0, #19
   19624:	bne	19604 <fputs@plt+0x6fc0>
   19628:	mov	r0, r5
   1962c:	bl	123c8 <closedir@plt>
   19630:	mov	r0, r4
   19634:	pop	{r3, r4, r5, pc}
   19638:	mov	r0, r4
   1963c:	bl	121b8 <free@plt>
   19640:	mov	r0, r5
   19644:	bl	123c8 <closedir@plt>
   19648:	mov	r0, #0
   1964c:	pop	{r3, r4, r5, pc}
   19650:	mov	r0, r5
   19654:	pop	{r3, r4, r5, pc}
   19658:	muleq	r0, r8, r3
   1965c:	push	{r3, r4, r5, lr}
   19660:	sub	r3, r2, #1
   19664:	mov	r4, r1
   19668:	mov	r2, r1
   1966c:	mov	r1, #0
   19670:	bl	18c34 <fputs@plt+0x65f0>
   19674:	subs	r3, r0, #0
   19678:	blt	196bc <fputs@plt+0x7078>
   1967c:	mov	r2, #0
   19680:	mov	r0, r4
   19684:	strb	r2, [r4, r3]
   19688:	mov	r1, #47	; 0x2f
   1968c:	bl	1211c <strrchr@plt>
   19690:	cmp	r0, #0
   19694:	beq	196bc <fputs@plt+0x7078>
   19698:	add	r5, r0, #1
   1969c:	mov	r0, r5
   196a0:	bl	1226c <strlen@plt>
   196a4:	mov	r1, r5
   196a8:	add	r2, r0, #1
   196ac:	mov	r0, r4
   196b0:	bl	12488 <memmove@plt>
   196b4:	mov	r0, r4
   196b8:	pop	{r3, r4, r5, pc}
   196bc:	mov	r0, #0
   196c0:	pop	{r3, r4, r5, pc}
   196c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   196c8:	sub	sp, sp, #160	; 0xa0
   196cc:	ldr	lr, [pc, #260]	; 197d8 <fputs@plt+0x7194>
   196d0:	add	r6, sp, #8
   196d4:	ldr	ip, [pc, #256]	; 197dc <fputs@plt+0x7198>
   196d8:	mov	r5, r1
   196dc:	add	lr, pc, lr
   196e0:	mov	sl, r3
   196e4:	mov	r3, r1
   196e8:	mov	r4, r0
   196ec:	ldr	r9, [lr, ip]
   196f0:	mov	r1, lr
   196f4:	mov	ip, #0
   196f8:	str	ip, [sp]
   196fc:	mov	r8, r2
   19700:	mov	r0, r6
   19704:	ldr	r1, [r9]
   19708:	mov	r2, r4
   1970c:	str	r1, [sp, #156]	; 0x9c
   19710:	bl	18a48 <fputs@plt+0x6404>
   19714:	cmp	r0, #0
   19718:	bne	197b8 <fputs@plt+0x7174>
   1971c:	mov	r1, r8
   19720:	mov	r2, sl
   19724:	mov	r0, r6
   19728:	bl	1965c <fputs@plt+0x7018>
   1972c:	mov	r7, r0
   19730:	mov	r0, r6
   19734:	bl	18a08 <fputs@plt+0x63c4>
   19738:	cmp	r7, #0
   1973c:	beq	197b8 <fputs@plt+0x7174>
   19740:	mov	r0, r7
   19744:	bl	1226c <strlen@plt>
   19748:	add	r3, r0, #6
   1974c:	cmp	sl, r3
   19750:	bcc	197b8 <fputs@plt+0x7174>
   19754:	add	r2, r0, #1
   19758:	mov	r1, r7
   1975c:	add	r0, r8, #5
   19760:	bl	12488 <memmove@plt>
   19764:	ldr	r3, [pc, #116]	; 197e0 <fputs@plt+0x719c>
   19768:	mov	r1, r8
   1976c:	add	r2, sp, #48	; 0x30
   19770:	add	r3, pc, r3
   19774:	ldr	r0, [r3]
   19778:	ldrb	r3, [r3, #4]
   1977c:	str	r0, [r8]
   19780:	mov	r0, #3
   19784:	strb	r3, [r8, #4]
   19788:	bl	123f8 <__xstat64@plt>
   1978c:	cmp	r0, #0
   19790:	bne	197b8 <fputs@plt+0x7174>
   19794:	ldr	r3, [sp, #64]	; 0x40
   19798:	and	r3, r3, #61440	; 0xf000
   1979c:	cmp	r3, #24576	; 0x6000
   197a0:	bne	197b8 <fputs@plt+0x7174>
   197a4:	ldrd	r6, [sp, #80]	; 0x50
   197a8:	cmp	r7, r5
   197ac:	cmpeq	r6, r4
   197b0:	moveq	r0, r8
   197b4:	beq	197bc <fputs@plt+0x7178>
   197b8:	mov	r0, #0
   197bc:	ldr	r2, [sp, #156]	; 0x9c
   197c0:	ldr	r3, [r9]
   197c4:	cmp	r2, r3
   197c8:	bne	197d4 <fputs@plt+0x7190>
   197cc:	add	sp, sp, #160	; 0xa0
   197d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   197d4:	bl	12434 <__stack_chk_fail@plt>
   197d8:	andeq	r5, r1, ip, lsl r9
   197dc:	andeq	r0, r0, ip, lsr r2
   197e0:	andeq	r4, r0, ip, asr #30
   197e4:	ldr	ip, [pc, #652]	; 19a78 <fputs@plt+0x7434>
   197e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197ec:	mov	r5, r1
   197f0:	ldr	r1, [pc, #644]	; 19a7c <fputs@plt+0x7438>
   197f4:	add	ip, pc, ip
   197f8:	sub	sp, sp, #4160	; 0x1040
   197fc:	mov	fp, r3
   19800:	sub	sp, sp, #12
   19804:	mov	r3, ip
   19808:	ldr	r1, [ip, r1]
   1980c:	mov	r4, r0
   19810:	mov	sl, r2
   19814:	orrs	r0, r4, r5
   19818:	add	r2, sp, #8192	; 0x2000
   1981c:	ldr	r3, [r1]
   19820:	ldr	r9, [r2, #-3984]	; 0xfffff070
   19824:	str	r1, [sp, #16]
   19828:	str	r3, [r2, #-4028]	; 0xfffff044
   1982c:	beq	19a00 <fputs@plt+0x73bc>
   19830:	add	r8, sp, #72	; 0x48
   19834:	mov	r3, #0
   19838:	sub	r6, r8, #48	; 0x30
   1983c:	str	r3, [sp]
   19840:	mov	r2, r4
   19844:	mov	r3, r5
   19848:	mov	r0, r6
   1984c:	bl	18a48 <fputs@plt+0x6404>
   19850:	subs	r7, r0, #0
   19854:	bne	19a00 <fputs@plt+0x73bc>
   19858:	ldr	r1, [pc, #544]	; 19a80 <fputs@plt+0x743c>
   1985c:	mov	r0, r6
   19860:	add	r1, pc, r1
   19864:	bl	18be0 <fputs@plt+0x659c>
   19868:	cmp	r0, #0
   1986c:	beq	19924 <fputs@plt+0x72e0>
   19870:	sub	r8, r8, #4
   19874:	movw	r3, #4095	; 0xfff
   19878:	mov	r0, r6
   1987c:	mov	r1, r7
   19880:	mov	r2, r8
   19884:	bl	18c34 <fputs@plt+0x65f0>
   19888:	subs	r3, r0, #0
   1988c:	blt	19a20 <fputs@plt+0x73dc>
   19890:	mov	r0, r8
   19894:	mov	r1, #47	; 0x2f
   19898:	strb	r7, [r8, r3]
   1989c:	bl	1211c <strrchr@plt>
   198a0:	cmp	r0, #0
   198a4:	beq	19a20 <fputs@plt+0x73dc>
   198a8:	strb	r7, [r0]
   198ac:	mov	r1, #47	; 0x2f
   198b0:	mov	r0, r8
   198b4:	bl	1211c <strrchr@plt>
   198b8:	cmp	r0, #0
   198bc:	beq	19a20 <fputs@plt+0x73dc>
   198c0:	cmp	sl, #0
   198c4:	cmpne	fp, #0
   198c8:	mov	r4, r0
   198cc:	strb	r7, [r4], #1
   198d0:	bne	19a30 <fputs@plt+0x73ec>
   198d4:	cmp	r9, #0
   198d8:	beq	198f4 <fputs@plt+0x72b0>
   198dc:	mov	r0, r4
   198e0:	mov	r1, #0
   198e4:	bl	187c0 <fputs@plt+0x617c>
   198e8:	orrs	r2, r0, r1
   198ec:	strd	r0, [r9]
   198f0:	beq	19a20 <fputs@plt+0x73dc>
   198f4:	mov	r0, r6
   198f8:	bl	18a08 <fputs@plt+0x63c4>
   198fc:	ldr	r1, [sp, #16]
   19900:	add	r3, sp, #8192	; 0x2000
   19904:	mov	r0, r7
   19908:	ldr	r2, [r3, #-4028]	; 0xfffff044
   1990c:	ldr	r3, [r1]
   19910:	cmp	r2, r3
   19914:	bne	19a74 <fputs@plt+0x7430>
   19918:	add	sp, sp, #4160	; 0x1040
   1991c:	add	sp, sp, #12
   19920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19924:	ldr	r1, [pc, #344]	; 19a84 <fputs@plt+0x7440>
   19928:	mov	r0, r6
   1992c:	add	r1, pc, r1
   19930:	bl	194d0 <fputs@plt+0x6e8c>
   19934:	subs	r8, r0, #0
   19938:	beq	1996c <fputs@plt+0x7328>
   1993c:	mov	r1, #45	; 0x2d
   19940:	bl	120c8 <strchr@plt>
   19944:	ldr	r1, [pc, #316]	; 19a88 <fputs@plt+0x7444>
   19948:	mov	r2, #4
   1994c:	add	r1, pc, r1
   19950:	cmp	r0, #0
   19954:	strbne	r7, [r0]
   19958:	mov	r0, r8
   1995c:	bl	123e0 <strncasecmp@plt>
   19960:	cmp	r0, #0
   19964:	str	r0, [sp, #20]
   19968:	beq	19998 <fputs@plt+0x7354>
   1996c:	mov	r0, r8
   19970:	bl	121b8 <free@plt>
   19974:	cmp	sl, #0
   19978:	cmpne	fp, #0
   1997c:	moveq	r3, #0
   19980:	movne	r3, #1
   19984:	cmp	r3, #0
   19988:	bne	19a08 <fputs@plt+0x73c4>
   1998c:	cmp	r9, #0
   19990:	strdne	r4, [r9]
   19994:	b	198f4 <fputs@plt+0x72b0>
   19998:	mov	r0, r8
   1999c:	bl	121b8 <free@plt>
   199a0:	mov	r0, r6
   199a4:	bl	195e4 <fputs@plt+0x6fa0>
   199a8:	subs	r8, r0, #0
   199ac:	beq	19974 <fputs@plt+0x7330>
   199b0:	cmp	sl, #0
   199b4:	cmpne	fp, #0
   199b8:	bne	19a54 <fputs@plt+0x7410>
   199bc:	cmp	r9, #0
   199c0:	mov	r0, r8
   199c4:	beq	19a4c <fputs@plt+0x7408>
   199c8:	mov	r1, #0
   199cc:	bl	187c0 <fputs@plt+0x617c>
   199d0:	mov	r2, r0
   199d4:	mov	r3, r1
   199d8:	mov	r0, r8
   199dc:	strd	r2, [r9]
   199e0:	str	r2, [sp, #12]
   199e4:	str	r1, [sp, #8]
   199e8:	bl	121b8 <free@plt>
   199ec:	ldr	r2, [sp, #12]
   199f0:	ldr	r3, [sp, #8]
   199f4:	orrs	r1, r2, r3
   199f8:	beq	19974 <fputs@plt+0x7330>
   199fc:	b	198f4 <fputs@plt+0x72b0>
   19a00:	mvn	r7, #0
   19a04:	b	198fc <fputs@plt+0x72b8>
   19a08:	mov	r1, sl
   19a0c:	mov	r2, fp
   19a10:	mov	r0, r6
   19a14:	bl	1965c <fputs@plt+0x7018>
   19a18:	cmp	r0, #0
   19a1c:	bne	1998c <fputs@plt+0x7348>
   19a20:	mov	r0, r6
   19a24:	mvn	r7, #0
   19a28:	bl	18a08 <fputs@plt+0x63c4>
   19a2c:	b	198fc <fputs@plt+0x72b8>
   19a30:	mov	r0, sl
   19a34:	add	sl, sl, fp
   19a38:	mov	r1, r4
   19a3c:	mov	r2, fp
   19a40:	bl	12074 <strncpy@plt>
   19a44:	strb	r7, [sl, #-1]
   19a48:	b	198d4 <fputs@plt+0x7290>
   19a4c:	bl	121b8 <free@plt>
   19a50:	b	198f4 <fputs@plt+0x72b0>
   19a54:	mov	r0, sl
   19a58:	mov	r1, r8
   19a5c:	mov	r2, fp
   19a60:	bl	12074 <strncpy@plt>
   19a64:	ldr	r0, [sp, #20]
   19a68:	add	r3, sl, fp
   19a6c:	strb	r0, [r3, #-1]
   19a70:	b	199bc <fputs@plt+0x7378>
   19a74:	bl	12434 <__stack_chk_fail@plt>
   19a78:	andeq	r5, r1, r4, lsl #16
   19a7c:	andeq	r0, r0, ip, lsr r2
   19a80:	ldrdeq	r4, [r0], -r0
   19a84:	ldrdeq	r4, [r0], -r0
   19a88:	andeq	r4, r0, r4, ror #1
   19a8c:	ldr	ip, [pc, #260]	; 19b98 <fputs@plt+0x7554>
   19a90:	mov	r3, r1
   19a94:	push	{r4, r5, r6, r7, r8, lr}
   19a98:	add	ip, pc, ip
   19a9c:	ldr	lr, [pc, #248]	; 19b9c <fputs@plt+0x7558>
   19aa0:	sub	sp, sp, #56	; 0x38
   19aa4:	mov	r6, #0
   19aa8:	add	r8, sp, #8
   19aac:	ldrb	r1, [sp, #44]	; 0x2c
   19ab0:	mov	r2, r0
   19ab4:	ldr	r7, [ip, lr]
   19ab8:	mov	r0, r8
   19abc:	str	r6, [sp]
   19ac0:	bfi	r1, r6, #0, #1
   19ac4:	mov	r4, #0
   19ac8:	strb	r1, [sp, #44]	; 0x2c
   19acc:	ldr	ip, [r7]
   19ad0:	mvn	r1, #0
   19ad4:	mov	r5, #0
   19ad8:	str	r6, [sp, #20]
   19adc:	strd	r4, [sp, #8]
   19ae0:	str	r6, [sp, #24]
   19ae4:	str	ip, [sp, #52]	; 0x34
   19ae8:	str	r6, [sp, #28]
   19aec:	str	r6, [sp, #32]
   19af0:	str	r6, [sp, #36]	; 0x24
   19af4:	str	r6, [sp, #40]	; 0x28
   19af8:	str	r1, [sp, #16]
   19afc:	bl	18a48 <fputs@plt+0x6404>
   19b00:	subs	r4, r0, #0
   19b04:	movne	r0, r6
   19b08:	beq	19b24 <fputs@plt+0x74e0>
   19b0c:	ldr	r2, [sp, #52]	; 0x34
   19b10:	ldr	r3, [r7]
   19b14:	cmp	r2, r3
   19b18:	bne	19b94 <fputs@plt+0x7550>
   19b1c:	add	sp, sp, #56	; 0x38
   19b20:	pop	{r4, r5, r6, r7, r8, pc}
   19b24:	ldr	r1, [pc, #116]	; 19ba0 <fputs@plt+0x755c>
   19b28:	mov	r0, r8
   19b2c:	add	r1, pc, r1
   19b30:	bl	194d0 <fputs@plt+0x6e8c>
   19b34:	subs	r5, r0, #0
   19b38:	moveq	r4, r5
   19b3c:	beq	19b7c <fputs@plt+0x7538>
   19b40:	ldr	r1, [pc, #92]	; 19ba4 <fputs@plt+0x7560>
   19b44:	mov	r2, #4
   19b48:	add	r1, pc, r1
   19b4c:	bl	1256c <strncmp@plt>
   19b50:	cmp	r0, r6
   19b54:	bne	19b7c <fputs@plt+0x7538>
   19b58:	add	r0, r5, #4
   19b5c:	mov	r1, #45	; 0x2d
   19b60:	bl	1211c <strrchr@plt>
   19b64:	cmp	r0, #0
   19b68:	moveq	r4, r0
   19b6c:	beq	19b7c <fputs@plt+0x7538>
   19b70:	ldrsb	r4, [r0, #1]
   19b74:	subs	r4, r4, r6
   19b78:	movne	r4, #1
   19b7c:	mov	r0, r8
   19b80:	bl	18a08 <fputs@plt+0x63c4>
   19b84:	mov	r0, r5
   19b88:	bl	121b8 <free@plt>
   19b8c:	mov	r0, r4
   19b90:	b	19b0c <fputs@plt+0x74c8>
   19b94:	bl	12434 <__stack_chk_fail@plt>
   19b98:	andeq	r5, r1, r0, ror #10
   19b9c:	andeq	r0, r0, ip, lsr r2
   19ba0:	ldrdeq	r4, [r0], -r0
   19ba4:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   19ba8:	ldr	ip, [pc, #116]	; 19c24 <fputs@plt+0x75e0>
   19bac:	mov	r2, #0
   19bb0:	push	{r4, r5, r6, lr}
   19bb4:	add	ip, pc, ip
   19bb8:	ldr	lr, [pc, #104]	; 19c28 <fputs@plt+0x75e4>
   19bbc:	sub	sp, sp, #24
   19bc0:	mov	r3, r2
   19bc4:	mov	r4, r0
   19bc8:	mov	r5, r1
   19bcc:	ldr	r6, [ip, lr]
   19bd0:	add	ip, sp, #8
   19bd4:	str	ip, [sp]
   19bd8:	ldr	ip, [r6]
   19bdc:	str	ip, [sp, #20]
   19be0:	bl	197e4 <fputs@plt+0x71a0>
   19be4:	cmp	r0, #0
   19be8:	bne	19c18 <fputs@plt+0x75d4>
   19bec:	ldrd	r2, [sp, #8]
   19bf0:	cmp	r5, r3
   19bf4:	cmpeq	r4, r2
   19bf8:	movne	r0, #0
   19bfc:	moveq	r0, #1
   19c00:	ldr	r2, [sp, #20]
   19c04:	ldr	r3, [r6]
   19c08:	cmp	r2, r3
   19c0c:	bne	19c20 <fputs@plt+0x75dc>
   19c10:	add	sp, sp, #24
   19c14:	pop	{r4, r5, r6, pc}
   19c18:	mvn	r0, #0
   19c1c:	b	19c00 <fputs@plt+0x75bc>
   19c20:	bl	12434 <__stack_chk_fail@plt>
   19c24:	andeq	r5, r1, r4, asr #8
   19c28:	andeq	r0, r0, ip, lsr r2
   19c2c:	ldr	ip, [pc, #308]	; 19d68 <fputs@plt+0x7724>
   19c30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c34:	add	ip, pc, ip
   19c38:	ldr	r5, [pc, #300]	; 19d6c <fputs@plt+0x7728>
   19c3c:	sub	sp, sp, #4096	; 0x1000
   19c40:	sub	sp, sp, #20
   19c44:	mov	r7, r3
   19c48:	mov	r8, r2
   19c4c:	subs	r4, r0, #0
   19c50:	ldr	r5, [ip, r5]
   19c54:	add	r2, sp, #8192	; 0x2000
   19c58:	mov	r9, r1
   19c5c:	ldr	r6, [r2, #-4040]	; 0xfffff038
   19c60:	ldr	r3, [r5]
   19c64:	str	r3, [r2, #-4084]	; 0xfffff00c
   19c68:	beq	19d5c <fputs@plt+0x7718>
   19c6c:	ldrb	ip, [r4, #36]	; 0x24
   19c70:	tst	ip, #1
   19c74:	ubfx	sl, ip, #0, #1
   19c78:	beq	19cd4 <fputs@plt+0x7690>
   19c7c:	cmp	r9, #0
   19c80:	ldrne	r3, [r4, #20]
   19c84:	strne	r3, [r9]
   19c88:	cmp	r8, #0
   19c8c:	ldrne	r3, [r4, #24]
   19c90:	strne	r3, [r8]
   19c94:	cmp	r7, #0
   19c98:	ldrne	r3, [r4, #28]
   19c9c:	strne	r3, [r7]
   19ca0:	cmp	r6, #0
   19ca4:	beq	19d4c <fputs@plt+0x7708>
   19ca8:	ldr	r3, [r4, #32]
   19cac:	mov	r0, #0
   19cb0:	str	r3, [r6]
   19cb4:	add	r3, sp, #8192	; 0x2000
   19cb8:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   19cbc:	ldr	r3, [r5]
   19cc0:	cmp	r2, r3
   19cc4:	bne	19d64 <fputs@plt+0x7720>
   19cc8:	add	sp, sp, #4096	; 0x1000
   19ccc:	add	sp, sp, #20
   19cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cd4:	ldr	r1, [pc, #148]	; 19d70 <fputs@plt+0x772c>
   19cd8:	add	fp, sp, #12
   19cdc:	movw	r3, #4095	; 0xfff
   19ce0:	add	r1, pc, r1
   19ce4:	mov	r2, fp
   19ce8:	bl	18c34 <fputs@plt+0x65f0>
   19cec:	subs	r3, r0, #0
   19cf0:	movlt	r0, r3
   19cf4:	blt	19cb4 <fputs@plt+0x7670>
   19cf8:	mov	r0, fp
   19cfc:	mov	r1, #47	; 0x2f
   19d00:	strb	sl, [fp, r3]
   19d04:	bl	1211c <strrchr@plt>
   19d08:	cmp	r0, #0
   19d0c:	beq	19d54 <fputs@plt+0x7710>
   19d10:	ldr	r1, [pc, #92]	; 19d74 <fputs@plt+0x7730>
   19d14:	add	r2, r4, #28
   19d18:	add	r3, r4, #32
   19d1c:	add	r0, r0, #1
   19d20:	stm	sp, {r2, r3}
   19d24:	add	r1, pc, r1
   19d28:	add	r2, r4, #20
   19d2c:	add	r3, r4, #24
   19d30:	bl	12278 <sscanf@plt>
   19d34:	cmp	r0, #4
   19d38:	bne	19d54 <fputs@plt+0x7710>
   19d3c:	ldrb	r3, [r4, #36]	; 0x24
   19d40:	orr	r3, r3, #1
   19d44:	strb	r3, [r4, #36]	; 0x24
   19d48:	b	19c7c <fputs@plt+0x7638>
   19d4c:	mov	r0, r6
   19d50:	b	19cb4 <fputs@plt+0x7670>
   19d54:	mvn	r0, #0
   19d58:	b	19cb4 <fputs@plt+0x7670>
   19d5c:	mvn	r0, #21
   19d60:	b	19cb4 <fputs@plt+0x7670>
   19d64:	bl	12434 <__stack_chk_fail@plt>
   19d68:	andeq	r5, r1, r4, asr #7
   19d6c:	andeq	r0, r0, ip, lsr r2
   19d70:	strdeq	r4, [r0], -r8
   19d74:	andeq	r3, r0, r4, lsl #30
   19d78:	ldr	ip, [pc, #236]	; 19e6c <fputs@plt+0x7828>
   19d7c:	push	{r4, r5, r6, r7, r8, lr}
   19d80:	add	ip, pc, ip
   19d84:	ldr	r4, [pc, #228]	; 19e70 <fputs@plt+0x782c>
   19d88:	sub	sp, sp, #24
   19d8c:	mov	lr, #0
   19d90:	mov	r7, r2
   19d94:	mov	r8, r1
   19d98:	mov	r2, lr
   19d9c:	ldr	r4, [ip, r4]
   19da0:	mov	r6, r3
   19da4:	str	lr, [sp]
   19da8:	add	r1, sp, #16
   19dac:	mov	r3, lr
   19db0:	ldr	r5, [sp, #48]	; 0x30
   19db4:	ldr	ip, [r4]
   19db8:	str	ip, [sp, #20]
   19dbc:	bl	19c2c <fputs@plt+0x75e8>
   19dc0:	cmp	r0, #0
   19dc4:	bne	19e14 <fputs@plt+0x77d0>
   19dc8:	cmp	r5, #0
   19dcc:	beq	19e38 <fputs@plt+0x77f4>
   19dd0:	ldr	ip, [sp, #16]
   19dd4:	mov	r0, r7
   19dd8:	ldr	lr, [pc, #148]	; 19e74 <fputs@plt+0x7830>
   19ddc:	mov	r1, r6
   19de0:	str	r8, [sp, #4]
   19de4:	mov	r2, #1
   19de8:	add	lr, pc, lr
   19dec:	str	r5, [sp, #12]
   19df0:	mvn	r3, #0
   19df4:	str	lr, [sp]
   19df8:	str	ip, [sp, #8]
   19dfc:	bl	12368 <__snprintf_chk@plt>
   19e00:	cmp	r0, #0
   19e04:	blt	19e14 <fputs@plt+0x77d0>
   19e08:	add	r0, r0, #1
   19e0c:	cmp	r6, r0
   19e10:	bcs	19e30 <fputs@plt+0x77ec>
   19e14:	mov	r0, #0
   19e18:	ldr	r2, [sp, #20]
   19e1c:	ldr	r3, [r4]
   19e20:	cmp	r2, r3
   19e24:	bne	19e68 <fputs@plt+0x7824>
   19e28:	add	sp, sp, #24
   19e2c:	pop	{r4, r5, r6, r7, r8, pc}
   19e30:	mov	r0, r7
   19e34:	b	19e18 <fputs@plt+0x77d4>
   19e38:	ldr	ip, [sp, #16]
   19e3c:	mov	r0, r7
   19e40:	ldr	r3, [pc, #48]	; 19e78 <fputs@plt+0x7834>
   19e44:	mov	r1, r6
   19e48:	str	r8, [sp, #4]
   19e4c:	mov	r2, #1
   19e50:	add	r3, pc, r3
   19e54:	str	ip, [sp, #8]
   19e58:	str	r3, [sp]
   19e5c:	mvn	r3, #0
   19e60:	bl	12368 <__snprintf_chk@plt>
   19e64:	b	19e00 <fputs@plt+0x77bc>
   19e68:	bl	12434 <__stack_chk_fail@plt>
   19e6c:	andeq	r5, r1, r8, ror r2
   19e70:	andeq	r0, r0, ip, lsr r2
   19e74:	andeq	r4, r0, ip, asr r9
   19e78:	andeq	r4, r0, r4, lsl r9
   19e7c:	ldr	ip, [pc, #268]	; 19f90 <fputs@plt+0x794c>
   19e80:	push	{r4, r5, r6, r7, r8, r9, lr}
   19e84:	add	ip, pc, ip
   19e88:	ldr	lr, [pc, #260]	; 19f94 <fputs@plt+0x7950>
   19e8c:	sub	sp, sp, #52	; 0x34
   19e90:	mov	r6, r1
   19e94:	mov	r5, r2
   19e98:	add	r1, sp, #28
   19e9c:	add	r2, sp, #32
   19ea0:	ldr	r4, [ip, lr]
   19ea4:	add	ip, sp, #40	; 0x28
   19ea8:	str	ip, [sp]
   19eac:	add	r3, sp, #36	; 0x24
   19eb0:	ldr	ip, [r4]
   19eb4:	str	ip, [sp, #44]	; 0x2c
   19eb8:	bl	19c2c <fputs@plt+0x75e8>
   19ebc:	cmp	r0, #0
   19ec0:	bne	19f24 <fputs@plt+0x78e0>
   19ec4:	cmp	r5, #0
   19ec8:	beq	19f48 <fputs@plt+0x7904>
   19ecc:	ldr	r9, [pc, #196]	; 19f98 <fputs@plt+0x7954>
   19ed0:	mov	r0, r6
   19ed4:	ldr	r8, [sp, #28]
   19ed8:	mov	r1, #4096	; 0x1000
   19edc:	ldr	r7, [sp, #32]
   19ee0:	add	r9, pc, r9
   19ee4:	ldr	lr, [sp, #36]	; 0x24
   19ee8:	mov	r2, #1
   19eec:	ldr	ip, [sp, #40]	; 0x28
   19ef0:	mvn	r3, #0
   19ef4:	str	r5, [sp, #20]
   19ef8:	mov	r5, r9
   19efc:	str	r7, [sp, #8]
   19f00:	stm	sp, {r5, r8}
   19f04:	str	lr, [sp, #12]
   19f08:	str	ip, [sp, #16]
   19f0c:	bl	12368 <__snprintf_chk@plt>
   19f10:	cmp	r0, #0
   19f14:	blt	19f24 <fputs@plt+0x78e0>
   19f18:	add	r0, r0, #1
   19f1c:	cmp	r0, #4096	; 0x1000
   19f20:	bls	19f40 <fputs@plt+0x78fc>
   19f24:	mov	r0, #0
   19f28:	ldr	r2, [sp, #44]	; 0x2c
   19f2c:	ldr	r3, [r4]
   19f30:	cmp	r2, r3
   19f34:	bne	19f8c <fputs@plt+0x7948>
   19f38:	add	sp, sp, #52	; 0x34
   19f3c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19f40:	mov	r0, r6
   19f44:	b	19f28 <fputs@plt+0x78e4>
   19f48:	ldr	r7, [sp, #28]
   19f4c:	mov	r0, r6
   19f50:	ldr	r5, [sp, #32]
   19f54:	mov	r1, #4096	; 0x1000
   19f58:	ldr	lr, [sp, #36]	; 0x24
   19f5c:	mov	r2, #1
   19f60:	ldr	ip, [sp, #40]	; 0x28
   19f64:	mvn	r3, #0
   19f68:	ldr	r8, [pc, #44]	; 19f9c <fputs@plt+0x7958>
   19f6c:	str	r7, [sp, #4]
   19f70:	add	r8, pc, r8
   19f74:	str	r5, [sp, #8]
   19f78:	str	r8, [sp]
   19f7c:	str	lr, [sp, #12]
   19f80:	str	ip, [sp, #16]
   19f84:	bl	12368 <__snprintf_chk@plt>
   19f88:	b	19f10 <fputs@plt+0x78cc>
   19f8c:	bl	12434 <__stack_chk_fail@plt>
   19f90:	andeq	r5, r1, r4, ror r1
   19f94:	andeq	r0, r0, ip, lsr r2
   19f98:	andeq	r4, r0, r0, lsr #17
   19f9c:	andeq	r4, r0, r8, lsr r8
   19fa0:	ldr	r3, [pc, #176]	; 1a058 <fputs@plt+0x7a14>
   19fa4:	cmp	r1, #0
   19fa8:	cmpne	r2, #0
   19fac:	ldr	ip, [pc, #168]	; 1a05c <fputs@plt+0x7a18>
   19fb0:	add	r3, pc, r3
   19fb4:	push	{r4, r5, r6, r7, lr}
   19fb8:	sub	sp, sp, #1040	; 0x410
   19fbc:	ldr	r5, [r3, ip]
   19fc0:	sub	sp, sp, #4
   19fc4:	ldr	r3, [r5]
   19fc8:	str	r3, [sp, #1036]	; 0x40c
   19fcc:	beq	1a028 <fputs@plt+0x79e4>
   19fd0:	add	r4, sp, #12
   19fd4:	str	r2, [sp]
   19fd8:	mov	r3, #1024	; 0x400
   19fdc:	mov	r2, r4
   19fe0:	bl	19d78 <fputs@plt+0x7734>
   19fe4:	cmp	r0, #0
   19fe8:	beq	1a028 <fputs@plt+0x79e4>
   19fec:	ldr	r1, [pc, #108]	; 1a060 <fputs@plt+0x7a1c>
   19ff0:	mov	r0, r4
   19ff4:	add	r1, pc, r1
   19ff8:	bl	122a8 <fopen64@plt>
   19ffc:	subs	r6, r0, #0
   1a000:	beq	1a028 <fputs@plt+0x79e4>
   1a004:	ldr	r1, [pc, #88]	; 1a064 <fputs@plt+0x7a20>
   1a008:	mov	r2, r4
   1a00c:	add	r1, pc, r1
   1a010:	bl	12620 <fscanf@plt>
   1a014:	mov	r7, r0
   1a018:	mov	r0, r6
   1a01c:	bl	12080 <fclose@plt>
   1a020:	cmp	r7, #1
   1a024:	beq	1a048 <fputs@plt+0x7a04>
   1a028:	mov	r0, #0
   1a02c:	ldr	r2, [sp, #1036]	; 0x40c
   1a030:	ldr	r3, [r5]
   1a034:	cmp	r2, r3
   1a038:	bne	1a054 <fputs@plt+0x7a10>
   1a03c:	add	sp, sp, #1040	; 0x410
   1a040:	add	sp, sp, #4
   1a044:	pop	{r4, r5, r6, r7, pc}
   1a048:	mov	r0, r4
   1a04c:	bl	1259c <__strdup@plt>
   1a050:	b	1a02c <fputs@plt+0x79e8>
   1a054:	bl	12434 <__stack_chk_fail@plt>
   1a058:	andeq	r5, r1, r8, asr #32
   1a05c:	andeq	r0, r0, ip, lsr r2
   1a060:	andeq	r4, r0, r0, asr #12
   1a064:	andeq	r4, r0, r8, lsl r7
   1a068:	ldr	r3, [pc, #172]	; 1a11c <fputs@plt+0x7ad8>
   1a06c:	cmp	r1, #0
   1a070:	ldr	r2, [pc, #168]	; 1a120 <fputs@plt+0x7adc>
   1a074:	add	r3, pc, r3
   1a078:	push	{r4, r5, r6, lr}
   1a07c:	sub	sp, sp, #4160	; 0x1040
   1a080:	ldr	r4, [r3, r2]
   1a084:	sub	sp, sp, #56	; 0x38
   1a088:	add	r2, sp, #8192	; 0x2000
   1a08c:	ldr	r3, [r4]
   1a090:	str	r3, [r2, #-3980]	; 0xfffff074
   1a094:	beq	1a110 <fputs@plt+0x7acc>
   1a098:	add	r5, sp, #116	; 0x74
   1a09c:	mov	r6, #0
   1a0a0:	mov	r3, #4096	; 0x1000
   1a0a4:	str	r6, [sp]
   1a0a8:	mov	r2, r5
   1a0ac:	bl	19d78 <fputs@plt+0x7734>
   1a0b0:	cmp	r0, r6
   1a0b4:	beq	1a110 <fputs@plt+0x7acc>
   1a0b8:	mov	r1, r5
   1a0bc:	add	r5, sp, #8
   1a0c0:	mov	r0, #3
   1a0c4:	mov	r2, r5
   1a0c8:	bl	123f8 <__xstat64@plt>
   1a0cc:	cmp	r0, r6
   1a0d0:	movne	r0, r6
   1a0d4:	beq	1a0f8 <fputs@plt+0x7ab4>
   1a0d8:	add	r3, sp, #8192	; 0x2000
   1a0dc:	ldr	r2, [r3, #-3980]	; 0xfffff074
   1a0e0:	ldr	r3, [r4]
   1a0e4:	cmp	r2, r3
   1a0e8:	bne	1a118 <fputs@plt+0x7ad4>
   1a0ec:	add	sp, sp, #4160	; 0x1040
   1a0f0:	add	sp, sp, #56	; 0x38
   1a0f4:	pop	{r4, r5, r6, pc}
   1a0f8:	ldr	r0, [r5, #16]
   1a0fc:	and	r0, r0, #61440	; 0xf000
   1a100:	subs	r3, r0, #16384	; 0x4000
   1a104:	rsbs	r0, r3, #0
   1a108:	adcs	r0, r0, r3
   1a10c:	b	1a0d8 <fputs@plt+0x7a94>
   1a110:	mov	r0, #0
   1a114:	b	1a0d8 <fputs@plt+0x7a94>
   1a118:	bl	12434 <__stack_chk_fail@plt>
   1a11c:	andeq	r4, r1, r4, lsl #31
   1a120:	andeq	r0, r0, ip, lsr r2
   1a124:	ldr	r3, [pc, #116]	; 1a1a0 <fputs@plt+0x7b5c>
   1a128:	mov	r2, r1
   1a12c:	ldr	ip, [pc, #112]	; 1a1a4 <fputs@plt+0x7b60>
   1a130:	add	r3, pc, r3
   1a134:	push	{r4, r5, lr}
   1a138:	sub	sp, sp, #4160	; 0x1040
   1a13c:	ldr	r4, [r3, ip]
   1a140:	sub	sp, sp, #52	; 0x34
   1a144:	add	r5, sp, #108	; 0x6c
   1a148:	add	ip, sp, #8192	; 0x2000
   1a14c:	ldr	r3, [r4]
   1a150:	mov	r1, r5
   1a154:	str	r3, [ip, #-3988]	; 0xfffff06c
   1a158:	bl	19e7c <fputs@plt+0x7838>
   1a15c:	cmp	r0, #0
   1a160:	beq	1a17c <fputs@plt+0x7b38>
   1a164:	mov	r1, r5
   1a168:	mov	r2, sp
   1a16c:	mov	r0, #3
   1a170:	bl	123f8 <__xstat64@plt>
   1a174:	rsbs	r0, r0, #1
   1a178:	movcc	r0, #0
   1a17c:	add	r3, sp, #8192	; 0x2000
   1a180:	ldr	r2, [r3, #-3988]	; 0xfffff06c
   1a184:	ldr	r3, [r4]
   1a188:	cmp	r2, r3
   1a18c:	bne	1a19c <fputs@plt+0x7b58>
   1a190:	add	sp, sp, #4160	; 0x1040
   1a194:	add	sp, sp, #52	; 0x34
   1a198:	pop	{r4, r5, pc}
   1a19c:	bl	12434 <__stack_chk_fail@plt>
   1a1a0:	andeq	r4, r1, r8, asr #29
   1a1a4:	andeq	r0, r0, ip, lsr r2
   1a1a8:	ldr	r3, [pc, #188]	; 1a26c <fputs@plt+0x7c28>
   1a1ac:	mov	r2, #0
   1a1b0:	ldr	ip, [pc, #184]	; 1a270 <fputs@plt+0x7c2c>
   1a1b4:	add	r3, pc, r3
   1a1b8:	push	{r4, r5, r6, r7, lr}
   1a1bc:	sub	sp, sp, #8256	; 0x2040
   1a1c0:	ldr	r5, [r3, ip]
   1a1c4:	sub	sp, sp, #52	; 0x34
   1a1c8:	add	r4, sp, #108	; 0x6c
   1a1cc:	add	ip, sp, #8192	; 0x2000
   1a1d0:	mov	r6, r1
   1a1d4:	ldr	r3, [r5]
   1a1d8:	mov	r1, r4
   1a1dc:	str	r3, [ip, #108]	; 0x6c
   1a1e0:	bl	19e7c <fputs@plt+0x7838>
   1a1e4:	cmp	r0, #0
   1a1e8:	beq	1a204 <fputs@plt+0x7bc0>
   1a1ec:	mov	r0, #3
   1a1f0:	mov	r2, sp
   1a1f4:	mov	r1, r4
   1a1f8:	bl	123f8 <__xstat64@plt>
   1a1fc:	subs	r7, r0, #0
   1a200:	beq	1a228 <fputs@plt+0x7be4>
   1a204:	mov	r0, #0
   1a208:	add	r3, sp, #8192	; 0x2000
   1a20c:	ldr	r2, [r3, #108]	; 0x6c
   1a210:	ldr	r3, [r5]
   1a214:	cmp	r2, r3
   1a218:	bne	1a268 <fputs@plt+0x7c24>
   1a21c:	add	sp, sp, #8256	; 0x2040
   1a220:	add	sp, sp, #52	; 0x34
   1a224:	pop	{r4, r5, r6, r7, pc}
   1a228:	mov	r0, r4
   1a22c:	add	r4, sp, #4160	; 0x1040
   1a230:	add	r4, r4, #48	; 0x30
   1a234:	movw	r2, #4095	; 0xfff
   1a238:	sub	r4, r4, #4
   1a23c:	mov	r1, r4
   1a240:	bl	124c4 <readlink@plt>
   1a244:	subs	r3, r0, #0
   1a248:	blt	1a204 <fputs@plt+0x7bc0>
   1a24c:	mov	r1, r6
   1a250:	mov	r0, r4
   1a254:	strb	r7, [r4, r3]
   1a258:	bl	1238c <strstr@plt>
   1a25c:	adds	r0, r0, #0
   1a260:	movne	r0, #1
   1a264:	b	1a208 <fputs@plt+0x7bc4>
   1a268:	bl	12434 <__stack_chk_fail@plt>
   1a26c:	andeq	r4, r1, r4, asr #28
   1a270:	andeq	r0, r0, ip, lsr r2
   1a274:	push	{r3, r4, r5, r6, r7, lr}
   1a278:	mov	r4, r0
   1a27c:	ldr	r0, [r0, #40]	; 0x28
   1a280:	mov	r7, r1
   1a284:	mov	r5, r2
   1a288:	cmp	r0, #0
   1a28c:	beq	1a2f8 <fputs@plt+0x7cb4>
   1a290:	bl	1a274 <fputs@plt+0x7c30>
   1a294:	subs	r7, r0, #0
   1a298:	beq	1a2f8 <fputs@plt+0x7cb4>
   1a29c:	ldr	r2, [r4, #40]	; 0x28
   1a2a0:	add	r3, r4, #32
   1a2a4:	ldr	r2, [r2, #28]
   1a2a8:	cmp	r2, r3
   1a2ac:	beq	1a308 <fputs@plt+0x7cc4>
   1a2b0:	ldr	r3, [r4]
   1a2b4:	ldr	r3, [r3, #36]	; 0x24
   1a2b8:	ldr	r6, [r3, #4]
   1a2bc:	mov	r0, r6
   1a2c0:	bl	1226c <strlen@plt>
   1a2c4:	mov	r4, r0
   1a2c8:	ldr	r3, [r5]
   1a2cc:	cmp	r3, r4
   1a2d0:	bcc	1a300 <fputs@plt+0x7cbc>
   1a2d4:	mov	r2, r4
   1a2d8:	mov	r1, r6
   1a2dc:	mov	r0, r7
   1a2e0:	bl	12290 <memcpy@plt>
   1a2e4:	ldr	r3, [r5]
   1a2e8:	add	r0, r7, r4
   1a2ec:	rsb	r4, r4, r3
   1a2f0:	str	r4, [r5]
   1a2f4:	pop	{r3, r4, r5, r6, r7, pc}
   1a2f8:	mov	r0, r7
   1a2fc:	pop	{r3, r4, r5, r6, r7, pc}
   1a300:	mov	r0, #0
   1a304:	pop	{r3, r4, r5, r6, r7, pc}
   1a308:	ldr	r6, [pc, #8]	; 1a318 <fputs@plt+0x7cd4>
   1a30c:	mov	r4, #2
   1a310:	add	r6, pc, r6
   1a314:	b	1a2c8 <fputs@plt+0x7c84>
   1a318:			; <UNDEFINED> instruction: 0x000044bc
   1a31c:	push	{r4, r5, r6, r7, r8, lr}
   1a320:	sub	sp, sp, #16
   1a324:	ldr	ip, [r0, #4]
   1a328:	mov	r4, r0
   1a32c:	ldr	r7, [sp, #40]	; 0x28
   1a330:	mov	r8, r2
   1a334:	mov	r0, r3
   1a338:	mov	r5, r3
   1a33c:	ldr	r6, [ip, r1, lsl #2]
   1a340:	mov	r1, #0
   1a344:	mov	r2, r7
   1a348:	bl	12104 <memset@plt>
   1a34c:	cmp	r6, #0
   1a350:	beq	1a458 <fputs@plt+0x7e14>
   1a354:	ldr	r3, [r8]
   1a358:	ands	r8, r3, #64	; 0x40
   1a35c:	beq	1a400 <fputs@plt+0x7dbc>
   1a360:	ldr	r0, [r4, #40]	; 0x28
   1a364:	cmp	r0, #0
   1a368:	beq	1a3dc <fputs@plt+0x7d98>
   1a36c:	mov	r1, r5
   1a370:	add	r2, sp, #40	; 0x28
   1a374:	bl	1a274 <fputs@plt+0x7c30>
   1a378:	subs	r8, r0, #0
   1a37c:	beq	1a458 <fputs@plt+0x7e14>
   1a380:	ldr	r3, [r4, #40]	; 0x28
   1a384:	ldr	r2, [r4]
   1a388:	cmp	r3, #0
   1a38c:	ldr	ip, [r2, #36]	; 0x24
   1a390:	ldreq	r1, [sp, #40]	; 0x28
   1a394:	beq	1a3e4 <fputs@plt+0x7da0>
   1a398:	ldr	r3, [r3, #28]
   1a39c:	add	r4, r4, #32
   1a3a0:	cmp	r3, r4
   1a3a4:	beq	1a424 <fputs@plt+0x7de0>
   1a3a8:	ldr	lr, [pc, #176]	; 1a460 <fputs@plt+0x7e1c>
   1a3ac:	mov	r2, #1
   1a3b0:	ldr	r1, [sp, #40]	; 0x28
   1a3b4:	mvn	r3, #0
   1a3b8:	add	lr, pc, lr
   1a3bc:	str	lr, [sp]
   1a3c0:	ldr	ip, [ip]
   1a3c4:	str	r6, [sp, #8]
   1a3c8:	str	ip, [sp, #4]
   1a3cc:	bl	12368 <__snprintf_chk@plt>
   1a3d0:	mov	r0, r5
   1a3d4:	add	sp, sp, #16
   1a3d8:	pop	{r4, r5, r6, r7, r8, pc}
   1a3dc:	mov	r1, r7
   1a3e0:	mov	r8, r5
   1a3e4:	ldr	r2, [pc, #120]	; 1a464 <fputs@plt+0x7e20>
   1a3e8:	mov	r0, r8
   1a3ec:	mov	r3, r6
   1a3f0:	add	r2, pc, r2
   1a3f4:	bl	12530 <snprintf@plt>
   1a3f8:	mov	r0, r5
   1a3fc:	b	1a3d4 <fputs@plt+0x7d90>
   1a400:	mov	r2, r7
   1a404:	mov	r1, r6
   1a408:	mov	r0, r5
   1a40c:	add	r7, r5, r7
   1a410:	bl	12074 <strncpy@plt>
   1a414:	mov	r0, r5
   1a418:	strb	r8, [r7, #-1]
   1a41c:	add	sp, sp, #16
   1a420:	pop	{r4, r5, r6, r7, r8, pc}
   1a424:	ldr	lr, [pc, #60]	; 1a468 <fputs@plt+0x7e24>
   1a428:	mov	r2, #1
   1a42c:	ldr	r1, [sp, #40]	; 0x28
   1a430:	mvn	r3, #0
   1a434:	add	lr, pc, lr
   1a438:	str	lr, [sp]
   1a43c:	ldr	ip, [ip, #8]
   1a440:	str	r6, [sp, #8]
   1a444:	str	ip, [sp, #4]
   1a448:	bl	12368 <__snprintf_chk@plt>
   1a44c:	mov	r0, r5
   1a450:	add	sp, sp, #16
   1a454:	pop	{r4, r5, r6, r7, r8, pc}
   1a458:	mov	r0, #0
   1a45c:	b	1a3d4 <fputs@plt+0x7d90>
   1a460:	andeq	r4, r0, r8, lsl r4
   1a464:	ldrdeq	r3, [r0], -ip
   1a468:	muleq	r0, ip, r3
   1a46c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a470:	mov	r5, r0
   1a474:	ldr	fp, [r5, #28]!
   1a478:	mov	sl, #0
   1a47c:	sub	sp, sp, #12
   1a480:	mov	r4, r1
   1a484:	cmp	fp, r5
   1a488:	mov	r6, r2
   1a48c:	mov	r7, r3
   1a490:	str	sl, [r1, #8]
   1a494:	beq	1a558 <fputs@plt+0x7f14>
   1a498:	add	r8, r1, #32
   1a49c:	mov	r9, sl
   1a4a0:	b	1a4fc <fputs@plt+0x7eb8>
   1a4a4:	bl	1b9e0 <fputs@plt+0x939c>
   1a4a8:	cmn	r0, #1
   1a4ac:	beq	1a51c <fputs@plt+0x7ed8>
   1a4b0:	ldr	r3, [r4, #16]
   1a4b4:	cmp	r0, r3
   1a4b8:	strhi	r0, [r4, #16]
   1a4bc:	ldr	r3, [r4, #36]	; 0x24
   1a4c0:	cmp	r3, #0
   1a4c4:	beq	1a4d4 <fputs@plt+0x7e90>
   1a4c8:	ldr	r3, [r4, #20]
   1a4cc:	cmp	r0, r3, lsl #1
   1a4d0:	bhi	1a4f0 <fputs@plt+0x7eac>
   1a4d4:	ldr	r3, [r4, #32]
   1a4d8:	tst	r3, #512	; 0x200
   1a4dc:	ldr	r3, [r4, #8]
   1a4e0:	addne	sl, sl, r0
   1a4e4:	addne	r9, r9, #1
   1a4e8:	cmp	r3, r0
   1a4ec:	strcc	r0, [r4, #8]
   1a4f0:	ldr	fp, [fp]
   1a4f4:	cmp	fp, r5
   1a4f8:	beq	1a524 <fputs@plt+0x7ee0>
   1a4fc:	ldr	r1, [r4, #4]
   1a500:	sub	r0, fp, #16
   1a504:	str	r7, [sp]
   1a508:	mov	r2, r8
   1a50c:	mov	r3, r6
   1a510:	bl	1a31c <fputs@plt+0x7cd8>
   1a514:	cmp	r0, #0
   1a518:	bne	1a4a4 <fputs@plt+0x7e60>
   1a51c:	mov	r0, #0
   1a520:	b	1a4bc <fputs@plt+0x7e78>
   1a524:	cmp	r9, #0
   1a528:	beq	1a558 <fputs@plt+0x7f14>
   1a52c:	ldr	r3, [r4, #20]
   1a530:	cmp	r3, #0
   1a534:	bne	1a558 <fputs@plt+0x7f14>
   1a538:	mov	r0, sl
   1a53c:	mov	r1, r9
   1a540:	bl	1c3d4 <fputs@plt+0x9d90>
   1a544:	ldr	r3, [r4, #16]
   1a548:	cmp	r3, r0, lsl #1
   1a54c:	str	r0, [r4, #20]
   1a550:	movhi	r3, #1
   1a554:	strhi	r3, [r4, #36]	; 0x24
   1a558:	ldr	r0, [r4]
   1a55c:	cmp	r0, #0
   1a560:	ldreq	r2, [r4, #12]
   1a564:	beq	1a574 <fputs@plt+0x7f30>
   1a568:	bl	1b9e0 <fputs@plt+0x939c>
   1a56c:	mov	r2, r0
   1a570:	str	r0, [r4, #12]
   1a574:	ldr	r3, [r4, #8]
   1a578:	cmp	r2, r3
   1a57c:	bls	1a590 <fputs@plt+0x7f4c>
   1a580:	ldr	r1, [r4, #32]
   1a584:	tst	r1, #256	; 0x100
   1a588:	streq	r2, [r4, #8]
   1a58c:	beq	1a5bc <fputs@plt+0x7f78>
   1a590:	vmov.f64	d6, #112	; 0x3f800000  1.0
   1a594:	vldr	d7, [r4, #24]
   1a598:	vcmpe.f64	d7, d6
   1a59c:	vmrs	APSR_nzcv, fpscr
   1a5a0:	blt	1a5bc <fputs@plt+0x7f78>
   1a5a4:	vcvt.u32.f64	s13, d7
   1a5a8:	vmov	r1, s13
   1a5ac:	cmp	r3, r1
   1a5b0:	bcs	1a5bc <fputs@plt+0x7f78>
   1a5b4:	cmp	r2, r1
   1a5b8:	strcc	r1, [r4, #8]
   1a5bc:	add	sp, sp, #12
   1a5c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5c4:	push	{r3, r4, r5, lr}
   1a5c8:	mov	r1, #40	; 0x28
   1a5cc:	mov	r5, r0
   1a5d0:	mov	r0, #1
   1a5d4:	bl	120ec <calloc@plt>
   1a5d8:	subs	r4, r0, #0
   1a5dc:	beq	1a61c <fputs@plt+0x7fd8>
   1a5e0:	tst	r5, #4
   1a5e4:	add	r2, r4, #28
   1a5e8:	add	r3, r4, #20
   1a5ec:	str	r5, [r4, #12]
   1a5f0:	str	r2, [r4, #28]
   1a5f4:	str	r2, [r4, #32]
   1a5f8:	str	r3, [r4, #20]
   1a5fc:	str	r3, [r4, #24]
   1a600:	beq	1a624 <fputs@plt+0x7fe0>
   1a604:	ldr	r3, [pc, #68]	; 1a650 <fputs@plt+0x800c>
   1a608:	add	r3, pc, r3
   1a60c:	add	r3, r3, #12
   1a610:	str	r3, [r4, #36]	; 0x24
   1a614:	mov	r3, #1
   1a618:	str	r3, [r4, #16]
   1a61c:	mov	r0, r4
   1a620:	pop	{r3, r4, r5, pc}
   1a624:	mov	r0, #14
   1a628:	bl	12428 <nl_langinfo@plt>
   1a62c:	ldr	r1, [pc, #32]	; 1a654 <fputs@plt+0x8010>
   1a630:	add	r1, pc, r1
   1a634:	bl	125cc <strcmp@plt>
   1a638:	cmp	r0, #0
   1a63c:	bne	1a604 <fputs@plt+0x7fc0>
   1a640:	ldr	r3, [pc, #16]	; 1a658 <fputs@plt+0x8014>
   1a644:	add	r3, pc, r3
   1a648:	str	r3, [r4, #36]	; 0x24
   1a64c:	b	1a614 <fputs@plt+0x7fd0>
   1a650:			; <UNDEFINED> instruction: 0x000148b8
   1a654:	andeq	r4, r0, r8, lsr #3
   1a658:	andeq	r4, r1, ip, ror r8
   1a65c:	push	{r4, r5, r6, lr}
   1a660:	subs	r5, r0, #0
   1a664:	popeq	{r4, r5, r6, pc}
   1a668:	ldr	r4, [r5, #28]
   1a66c:	add	r6, r5, #28
   1a670:	cmp	r6, r4
   1a674:	popeq	{r4, r5, r6, pc}
   1a678:	ldm	r4, {r2, r3}
   1a67c:	ldr	r0, [r4, #-12]
   1a680:	str	r3, [r2, #4]
   1a684:	str	r2, [r3]
   1a688:	bl	121b8 <free@plt>
   1a68c:	sub	r0, r4, #16
   1a690:	bl	121b8 <free@plt>
   1a694:	ldr	r4, [r5, #28]
   1a698:	cmp	r4, r6
   1a69c:	bne	1a678 <fputs@plt+0x8034>
   1a6a0:	pop	{r4, r5, r6, pc}
   1a6a4:	push	{r3, r4, r5, lr}
   1a6a8:	subs	r4, r0, #0
   1a6ac:	popeq	{r3, r4, r5, pc}
   1a6b0:	bl	1a65c <fputs@plt+0x8018>
   1a6b4:	ldr	r3, [r4, #20]
   1a6b8:	add	r5, r4, #20
   1a6bc:	cmp	r5, r3
   1a6c0:	beq	1a6e8 <fputs@plt+0x80a4>
   1a6c4:	mov	r0, r3
   1a6c8:	ldr	r3, [r3, #4]
   1a6cc:	ldr	r2, [r0], #-40	; 0xffffffd8
   1a6d0:	str	r3, [r2, #4]
   1a6d4:	str	r2, [r3]
   1a6d8:	bl	121b8 <free@plt>
   1a6dc:	ldr	r3, [r4, #20]
   1a6e0:	cmp	r3, r5
   1a6e4:	bne	1a6c4 <fputs@plt+0x8080>
   1a6e8:	mov	r0, r4
   1a6ec:	pop	{r3, r4, r5, lr}
   1a6f0:	b	121b8 <free@plt>
   1a6f4:	push	{r4, r5, r6, lr}
   1a6f8:	vpush	{d8}
   1a6fc:	subs	r4, r0, #0
   1a700:	mov	r6, r1
   1a704:	vmov.f64	d8, d0
   1a708:	mov	r5, r2
   1a70c:	beq	1a77c <fputs@plt+0x8138>
   1a710:	mov	r0, #1
   1a714:	mov	r1, #48	; 0x30
   1a718:	bl	120ec <calloc@plt>
   1a71c:	subs	r3, r0, #0
   1a720:	beq	1a77c <fputs@plt+0x8138>
   1a724:	ldr	r2, [r4]
   1a728:	tst	r5, #64	; 0x40
   1a72c:	str	r6, [r3]
   1a730:	vstr	d8, [r3, #24]
   1a734:	add	r1, r2, #1
   1a738:	str	r5, [r3, #32]
   1a73c:	str	r1, [r4]
   1a740:	mov	r0, r3
   1a744:	str	r2, [r3, #4]
   1a748:	add	r4, r4, #20
   1a74c:	ldrne	r2, [r4, #-8]
   1a750:	orrne	r2, r2, #64	; 0x40
   1a754:	strne	r2, [r4, #-8]
   1a758:	add	r2, r3, #40	; 0x28
   1a75c:	str	r2, [r3, #44]	; 0x2c
   1a760:	ldr	r1, [r4, #4]
   1a764:	str	r2, [r4, #4]
   1a768:	str	r4, [r3, #40]	; 0x28
   1a76c:	str	r1, [r3, #44]	; 0x2c
   1a770:	str	r2, [r1]
   1a774:	vpop	{d8}
   1a778:	pop	{r4, r5, r6, pc}
   1a77c:	mov	r0, #0
   1a780:	b	1a774 <fputs@plt+0x8130>
   1a784:	push	{r4, r5, r6, r7, r8, lr}
   1a788:	subs	r5, r0, #0
   1a78c:	mov	r6, r1
   1a790:	beq	1a83c <fputs@plt+0x81f8>
   1a794:	ldr	r7, [r5]
   1a798:	cmp	r7, #0
   1a79c:	beq	1a83c <fputs@plt+0x81f8>
   1a7a0:	mov	r0, #1
   1a7a4:	mov	r1, #44	; 0x2c
   1a7a8:	bl	120ec <calloc@plt>
   1a7ac:	cmp	r0, #0
   1a7b0:	mov	r4, r0
   1a7b4:	mov	r8, r0
   1a7b8:	beq	1a83c <fputs@plt+0x81f8>
   1a7bc:	mov	r0, r7
   1a7c0:	mov	r1, #4
   1a7c4:	bl	120ec <calloc@plt>
   1a7c8:	cmp	r0, #0
   1a7cc:	str	r0, [r4, #4]
   1a7d0:	beq	1a840 <fputs@plt+0x81fc>
   1a7d4:	add	r2, r4, #16
   1a7d8:	add	r3, r4, #32
   1a7dc:	str	r2, [r4, #20]
   1a7e0:	add	r0, r4, #24
   1a7e4:	str	r3, [r4, #36]	; 0x24
   1a7e8:	cmp	r6, #0
   1a7ec:	str	r0, [r4, #28]
   1a7f0:	add	ip, r5, #28
   1a7f4:	ldr	r1, [r5, #32]
   1a7f8:	str	r5, [r4]
   1a7fc:	str	r6, [r4, #40]	; 0x28
   1a800:	str	r3, [r4, #32]
   1a804:	str	r0, [r4, #24]
   1a808:	str	r2, [r5, #32]
   1a80c:	str	r1, [r4, #20]
   1a810:	str	ip, [r4, #16]
   1a814:	str	r2, [r1]
   1a818:	beq	1a850 <fputs@plt+0x820c>
   1a81c:	ldr	r2, [r6, #28]
   1a820:	add	r1, r6, #24
   1a824:	str	r3, [r6, #28]
   1a828:	mov	r0, r4
   1a82c:	str	r1, [r4, #32]
   1a830:	str	r2, [r4, #36]	; 0x24
   1a834:	str	r3, [r2]
   1a838:	pop	{r4, r5, r6, r7, r8, pc}
   1a83c:	mov	r8, #0
   1a840:	mov	r0, r8
   1a844:	bl	121b8 <free@plt>
   1a848:	mov	r0, #0
   1a84c:	pop	{r4, r5, r6, r7, r8, pc}
   1a850:	mov	r0, r4
   1a854:	pop	{r4, r5, r6, r7, r8, pc}
   1a858:	ldr	r3, [r0, #20]!
   1a85c:	cmp	r3, r0
   1a860:	bne	1a874 <fputs@plt+0x8230>
   1a864:	b	1a888 <fputs@plt+0x8244>
   1a868:	ldr	r3, [r3]
   1a86c:	cmp	r3, r0
   1a870:	beq	1a888 <fputs@plt+0x8244>
   1a874:	ldr	r2, [r3, #-36]	; 0xffffffdc
   1a878:	cmp	r2, r1
   1a87c:	bne	1a868 <fputs@plt+0x8224>
   1a880:	sub	r0, r3, #40	; 0x28
   1a884:	bx	lr
   1a888:	mov	r0, #0
   1a88c:	bx	lr
   1a890:	push	{r3, r4, r5, r6, r7, lr}
   1a894:	subs	r4, r0, #0
   1a898:	mov	r5, r2
   1a89c:	beq	1a908 <fputs@plt+0x82c4>
   1a8a0:	ldr	r0, [r4]
   1a8a4:	bl	1a858 <fputs@plt+0x8214>
   1a8a8:	cmp	r0, #0
   1a8ac:	beq	1a908 <fputs@plt+0x82c4>
   1a8b0:	ldr	r7, [r0, #4]
   1a8b4:	ldr	r6, [r4, #4]
   1a8b8:	ldr	r0, [r6, r7, lsl #2]
   1a8bc:	cmp	r0, #0
   1a8c0:	beq	1a8dc <fputs@plt+0x8298>
   1a8c4:	bl	1226c <strlen@plt>
   1a8c8:	ldr	r3, [r4, #12]
   1a8cc:	cmp	r0, r3
   1a8d0:	rsbcc	r0, r0, r3
   1a8d4:	movcs	r0, #0
   1a8d8:	str	r0, [r4, #12]
   1a8dc:	cmp	r5, #0
   1a8e0:	str	r5, [r6, r7, lsl #2]
   1a8e4:	beq	1a900 <fputs@plt+0x82bc>
   1a8e8:	mov	r0, r5
   1a8ec:	mov	r5, #0
   1a8f0:	bl	1226c <strlen@plt>
   1a8f4:	ldr	r3, [r4, #12]
   1a8f8:	add	r0, r3, r0
   1a8fc:	str	r0, [r4, #12]
   1a900:	mov	r0, r5
   1a904:	pop	{r3, r4, r5, r6, r7, pc}
   1a908:	mvn	r5, #0
   1a90c:	b	1a900 <fputs@plt+0x82bc>
   1a910:	cmp	r0, #0
   1a914:	strne	r1, [r0, #8]
   1a918:	movne	r0, #0
   1a91c:	mvneq	r0, #0
   1a920:	bx	lr
   1a924:	push	{r4, r5, r6, r7, r8, lr}
   1a928:	mov	r6, r0
   1a92c:	mov	r0, #34	; 0x22
   1a930:	mov	r7, r1
   1a934:	bl	12458 <fputc@plt>
   1a938:	cmp	r6, #0
   1a93c:	beq	1a9c8 <fputs@plt+0x8384>
   1a940:	ldrb	r4, [r6]
   1a944:	cmp	r4, #0
   1a948:	beq	1a9c8 <fputs@plt+0x8384>
   1a94c:	ldr	r8, [pc, #132]	; 1a9d8 <fputs@plt+0x8394>
   1a950:	add	r8, pc, r8
   1a954:	b	1a97c <fputs@plt+0x8338>
   1a958:	mov	r1, #1
   1a95c:	mov	r0, r7
   1a960:	mov	r2, r8
   1a964:	bl	12440 <__fprintf_chk@plt>
   1a968:	cmn	r6, #1
   1a96c:	beq	1a9c8 <fputs@plt+0x8384>
   1a970:	ldrb	r4, [r6, #1]!
   1a974:	cmp	r4, #0
   1a978:	beq	1a9c8 <fputs@plt+0x8384>
   1a97c:	sxtb	r5, r4
   1a980:	cmp	r5, #34	; 0x22
   1a984:	cmpne	r5, #92	; 0x5c
   1a988:	uxtbeq	r3, r4
   1a98c:	beq	1a958 <fputs@plt+0x8314>
   1a990:	bl	123ec <__ctype_b_loc@plt>
   1a994:	uxtb	r3, r4
   1a998:	movw	ip, #16386	; 0x4002
   1a99c:	lsl	lr, r3, #1
   1a9a0:	ldr	r2, [r0]
   1a9a4:	ldrh	r2, [r2, lr]
   1a9a8:	and	ip, r2, ip
   1a9ac:	cmp	ip, #16384	; 0x4000
   1a9b0:	bne	1a958 <fputs@plt+0x8314>
   1a9b4:	mov	r0, r5
   1a9b8:	mov	r1, r7
   1a9bc:	bl	12458 <fputc@plt>
   1a9c0:	cmn	r6, #1
   1a9c4:	bne	1a970 <fputs@plt+0x832c>
   1a9c8:	mov	r1, r7
   1a9cc:	mov	r0, #34	; 0x22
   1a9d0:	pop	{r4, r5, r6, r7, r8, lr}
   1a9d4:	b	12458 <fputc@plt>
   1a9d8:	muleq	r0, r0, lr
   1a9dc:	cmp	r0, #0
   1a9e0:	push	{r4, r5, r6, r7, r8, lr}
   1a9e4:	mov	r6, r1
   1a9e8:	popeq	{r4, r5, r6, r7, r8, pc}
   1a9ec:	ldrb	r4, [r0]
   1a9f0:	cmp	r4, #0
   1a9f4:	popeq	{r4, r5, r6, r7, r8, pc}
   1a9f8:	mov	r5, r0
   1a9fc:	bl	123ec <__ctype_b_loc@plt>
   1aa00:	ldr	r7, [pc, #124]	; 1aa84 <fputs@plt+0x8440>
   1aa04:	add	r7, pc, r7
   1aa08:	mov	r8, r0
   1aa0c:	b	1aa28 <fputs@plt+0x83e4>
   1aa10:	bl	12440 <__fprintf_chk@plt>
   1aa14:	cmn	r5, #1
   1aa18:	popeq	{r4, r5, r6, r7, r8, pc}
   1aa1c:	ldrb	r4, [r5, #1]!
   1aa20:	cmp	r4, #0
   1aa24:	beq	1aa80 <fputs@plt+0x843c>
   1aa28:	uxtb	r3, r4
   1aa2c:	ldr	lr, [r8]
   1aa30:	mov	r1, #1
   1aa34:	mov	r0, r6
   1aa38:	lsl	ip, r3, r1
   1aa3c:	mov	r2, r7
   1aa40:	sxtb	r4, r4
   1aa44:	ldrh	lr, [lr, ip]
   1aa48:	movw	ip, #16386	; 0x4002
   1aa4c:	tst	lr, #1
   1aa50:	and	ip, lr, ip
   1aa54:	bne	1aa10 <fputs@plt+0x83cc>
   1aa58:	cmp	r4, #92	; 0x5c
   1aa5c:	beq	1aa10 <fputs@plt+0x83cc>
   1aa60:	cmp	ip, #16384	; 0x4000
   1aa64:	bne	1aa10 <fputs@plt+0x83cc>
   1aa68:	mov	r0, r4
   1aa6c:	mov	r1, r6
   1aa70:	bl	12458 <fputc@plt>
   1aa74:	cmn	r5, #1
   1aa78:	bne	1aa1c <fputs@plt+0x83d8>
   1aa7c:	pop	{r4, r5, r6, r7, r8, pc}
   1aa80:	pop	{r4, r5, r6, r7, r8, pc}
   1aa84:	ldrdeq	r3, [r0], -ip
   1aa88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa8c:	subs	r4, r2, #0
   1aa90:	ldr	r5, [pc, #728]	; 1ad70 <fputs@plt+0x872c>
   1aa94:	sub	sp, sp, #36	; 0x24
   1aa98:	ldr	r3, [pc, #724]	; 1ad74 <fputs@plt+0x8730>
   1aa9c:	mov	r2, #0
   1aaa0:	add	r5, pc, r5
   1aaa4:	mov	r7, r0
   1aaa8:	mov	r8, r1
   1aaac:	ldr	r9, [r5, r3]
   1aab0:	str	r2, [sp, #20]
   1aab4:	ldr	r3, [r9]
   1aab8:	str	r3, [sp, #28]
   1aabc:	beq	1ad54 <fputs@plt+0x8710>
   1aac0:	ldr	r3, [r7, #12]
   1aac4:	tst	r3, #2
   1aac8:	bne	1ac80 <fputs@plt+0x863c>
   1aacc:	tst	r3, #16
   1aad0:	beq	1ab30 <fputs@plt+0x84ec>
   1aad4:	ldr	r0, [pc, #668]	; 1ad78 <fputs@plt+0x8734>
   1aad8:	mov	r1, #1
   1aadc:	ldr	r2, [pc, #664]	; 1ad7c <fputs@plt+0x8738>
   1aae0:	ldr	r3, [r8], #40	; 0x28
   1aae4:	ldr	r5, [r5, r0]
   1aae8:	add	r2, pc, r2
   1aaec:	ldr	r0, [r5]
   1aaf0:	bl	12440 <__fprintf_chk@plt>
   1aaf4:	mov	r0, r4
   1aaf8:	ldr	r1, [r5]
   1aafc:	bl	1a924 <fputs@plt+0x82e0>
   1ab00:	ldr	r3, [r7, #24]
   1ab04:	cmp	r3, r8
   1ab08:	beq	1ab18 <fputs@plt+0x84d4>
   1ab0c:	ldr	r1, [r5]
   1ab10:	mov	r0, #32
   1ab14:	bl	12458 <fputc@plt>
   1ab18:	ldr	r2, [sp, #28]
   1ab1c:	ldr	r3, [r9]
   1ab20:	cmp	r2, r3
   1ab24:	bne	1ad6c <fputs@plt+0x8728>
   1ab28:	add	sp, sp, #36	; 0x24
   1ab2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab30:	mov	r0, r4
   1ab34:	add	r1, sp, #20
   1ab38:	bl	1bee4 <fputs@plt+0x98a0>
   1ab3c:	subs	fp, r0, #0
   1ab40:	movne	r4, fp
   1ab44:	beq	1ad60 <fputs@plt+0x871c>
   1ab48:	ldr	r3, [sp, #20]
   1ab4c:	add	sl, r8, #40	; 0x28
   1ab50:	ldr	r1, [r7, #24]
   1ab54:	sub	r2, r3, #1
   1ab58:	cmn	r2, #3
   1ab5c:	movhi	r4, #0
   1ab60:	movls	r2, r3
   1ab64:	ldr	r3, [r8, #8]
   1ab68:	movhi	r2, r4
   1ab6c:	strhi	r4, [sp, #20]
   1ab70:	cmp	sl, r1
   1ab74:	str	r3, [sp, #24]
   1ab78:	beq	1abc0 <fputs@plt+0x857c>
   1ab7c:	cmp	r3, r2
   1ab80:	bcs	1abd0 <fputs@plt+0x858c>
   1ab84:	ldr	r1, [r8, #32]
   1ab88:	tst	r1, #32
   1ab8c:	beq	1abd0 <fputs@plt+0x858c>
   1ab90:	cmp	r4, #0
   1ab94:	beq	1abb4 <fputs@plt+0x8570>
   1ab98:	mov	r0, r4
   1ab9c:	add	r1, sp, #24
   1aba0:	bl	1bf98 <fputs@plt+0x9954>
   1aba4:	cmn	r0, #1
   1aba8:	str	r0, [sp, #20]
   1abac:	bne	1abdc <fputs@plt+0x8598>
   1abb0:	ldr	r3, [sp, #24]
   1abb4:	mov	r4, #0
   1abb8:	str	r4, [sp, #20]
   1abbc:	b	1ac10 <fputs@plt+0x85cc>
   1abc0:	cmp	r3, r2
   1abc4:	strhi	r2, [sp, #24]
   1abc8:	movhi	r3, r2
   1abcc:	bls	1ab7c <fputs@plt+0x8538>
   1abd0:	cmp	r4, #0
   1abd4:	moveq	r4, r2
   1abd8:	beq	1ac10 <fputs@plt+0x85cc>
   1abdc:	ldr	r3, [r7, #12]
   1abe0:	tst	r3, #2
   1abe4:	bne	1abf4 <fputs@plt+0x85b0>
   1abe8:	ldr	r3, [r8, #32]
   1abec:	tst	r3, #128	; 0x80
   1abf0:	bne	1ad0c <fputs@plt+0x86c8>
   1abf4:	ldr	r3, [pc, #380]	; 1ad78 <fputs@plt+0x8734>
   1abf8:	mov	r0, r4
   1abfc:	ldr	r6, [r5, r3]
   1ac00:	ldr	r1, [r6]
   1ac04:	bl	12644 <fputs@plt>
   1ac08:	ldr	r3, [sp, #24]
   1ac0c:	ldr	r4, [sp, #20]
   1ac10:	cmp	r4, r3
   1ac14:	bcs	1ac3c <fputs@plt+0x85f8>
   1ac18:	ldr	r3, [pc, #344]	; 1ad78 <fputs@plt+0x8734>
   1ac1c:	ldr	r6, [r5, r3]
   1ac20:	mov	r0, #32
   1ac24:	ldr	r1, [r6]
   1ac28:	bl	12458 <fputc@plt>
   1ac2c:	ldr	r3, [sp, #24]
   1ac30:	add	r4, r4, #1
   1ac34:	cmp	r3, r4
   1ac38:	bhi	1ac20 <fputs@plt+0x85dc>
   1ac3c:	ldr	r2, [r7, #24]
   1ac40:	cmp	sl, r2
   1ac44:	beq	1ac74 <fputs@plt+0x8630>
   1ac48:	ldr	r2, [sp, #20]
   1ac4c:	cmp	r2, r3
   1ac50:	ldr	r3, [pc, #288]	; 1ad78 <fputs@plt+0x8734>
   1ac54:	bls	1ac64 <fputs@plt+0x8620>
   1ac58:	ldr	r4, [r8, #32]
   1ac5c:	ands	r4, r4, #32
   1ac60:	beq	1acb4 <fputs@plt+0x8670>
   1ac64:	ldr	r3, [r5, r3]
   1ac68:	mov	r0, #32
   1ac6c:	ldr	r1, [r3]
   1ac70:	bl	12458 <fputc@plt>
   1ac74:	mov	r0, fp
   1ac78:	bl	121b8 <free@plt>
   1ac7c:	b	1ab18 <fputs@plt+0x84d4>
   1ac80:	ldr	r3, [pc, #240]	; 1ad78 <fputs@plt+0x8734>
   1ac84:	mov	r0, r4
   1ac88:	add	r8, r8, #40	; 0x28
   1ac8c:	ldr	r4, [r5, r3]
   1ac90:	ldr	r1, [r4]
   1ac94:	bl	1a9dc <fputs@plt+0x8398>
   1ac98:	ldr	r3, [r7, #24]
   1ac9c:	cmp	r3, r8
   1aca0:	beq	1ab18 <fputs@plt+0x84d4>
   1aca4:	ldr	r1, [r4]
   1aca8:	mov	r0, #32
   1acac:	bl	12458 <fputc@plt>
   1acb0:	b	1ab18 <fputs@plt+0x84d4>
   1acb4:	ldr	r3, [r5, r3]
   1acb8:	mov	r0, #10
   1acbc:	ldr	sl, [pc, #188]	; 1ad80 <fputs@plt+0x873c>
   1acc0:	ldr	r6, [pc, #188]	; 1ad84 <fputs@plt+0x8740>
   1acc4:	ldr	r1, [r3]
   1acc8:	add	sl, pc, sl
   1accc:	add	r6, pc, r6
   1acd0:	bl	12458 <fputc@plt>
   1acd4:	mov	r1, r4
   1acd8:	mov	r0, r7
   1acdc:	bl	1a858 <fputs@plt+0x8214>
   1ace0:	mov	r3, r6
   1ace4:	mov	r1, sl
   1ace8:	add	r4, r4, #1
   1acec:	ldr	r2, [r0, #8]
   1acf0:	mov	r0, #1
   1acf4:	rsb	r2, r2, #0
   1acf8:	bl	120b0 <__printf_chk@plt>
   1acfc:	ldr	r3, [r8, #4]
   1ad00:	cmp	r3, r4
   1ad04:	bcs	1acd4 <fputs@plt+0x8690>
   1ad08:	b	1ac74 <fputs@plt+0x8630>
   1ad0c:	ldr	r3, [pc, #100]	; 1ad78 <fputs@plt+0x8734>
   1ad10:	mov	r1, #1
   1ad14:	ldr	ip, [r8, #8]
   1ad18:	ldr	r2, [pc, #104]	; 1ad88 <fputs@plt+0x8744>
   1ad1c:	ldr	r6, [r5, r3]
   1ad20:	add	r2, pc, r2
   1ad24:	mov	r3, ip
   1ad28:	ldr	r0, [r6]
   1ad2c:	str	r4, [sp]
   1ad30:	str	ip, [sp, #12]
   1ad34:	bl	12440 <__fprintf_chk@plt>
   1ad38:	ldr	r4, [sp, #20]
   1ad3c:	ldr	ip, [sp, #12]
   1ad40:	ldr	r3, [sp, #24]
   1ad44:	cmp	ip, r4
   1ad48:	strhi	ip, [sp, #20]
   1ad4c:	movhi	r4, ip
   1ad50:	b	1ac10 <fputs@plt+0x85cc>
   1ad54:	ldr	r4, [pc, #48]	; 1ad8c <fputs@plt+0x8748>
   1ad58:	add	r4, pc, r4
   1ad5c:	b	1aac0 <fputs@plt+0x847c>
   1ad60:	ldr	r4, [pc, #40]	; 1ad90 <fputs@plt+0x874c>
   1ad64:	add	r4, pc, r4
   1ad68:	b	1ab48 <fputs@plt+0x8504>
   1ad6c:	bl	12434 <__stack_chk_fail@plt>
   1ad70:	andeq	r4, r1, r8, asr r5
   1ad74:	andeq	r0, r0, ip, lsr r2
   1ad78:	andeq	r0, r0, r0, asr #4
   1ad7c:	andeq	r3, r0, r0, lsl #26
   1ad80:	andeq	r3, r0, r8, lsr #22
   1ad84:	strdeq	r3, [r0], -r8
   1ad88:	andeq	r3, r0, ip, asr #21
   1ad8c:	andeq	r2, r0, r8, asr r5
   1ad90:	andeq	r2, r0, ip, asr #10
   1ad94:	ldr	r3, [r0, #16]
   1ad98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad9c:	cmp	r3, #0
   1ada0:	sub	sp, sp, #12
   1ada4:	mov	r8, r2
   1ada8:	ldr	r2, [pc, #160]	; 1ae50 <fputs@plt+0x880c>
   1adac:	mov	r6, r0
   1adb0:	mov	r5, r1
   1adb4:	add	r2, pc, r2
   1adb8:	str	r2, [sp, #4]
   1adbc:	beq	1ae48 <fputs@plt+0x8804>
   1adc0:	ldr	sl, [r0, #12]
   1adc4:	ands	sl, sl, #24
   1adc8:	bne	1ae48 <fputs@plt+0x8804>
   1adcc:	ldr	r2, [r0, #28]
   1add0:	add	r3, r0, #28
   1add4:	cmp	r2, r3
   1add8:	beq	1ae48 <fputs@plt+0x8804>
   1addc:	mov	r7, r0
   1ade0:	ldr	r4, [r7, #20]!
   1ade4:	cmp	r4, r7
   1ade8:	subne	r9, r8, #1
   1adec:	addne	r9, r1, r9
   1adf0:	beq	1ae28 <fputs@plt+0x87e4>
   1adf4:	mov	fp, r4
   1adf8:	mov	r2, r8
   1adfc:	ldr	r1, [fp, #-40]!	; 0xffffffd8
   1ae00:	mov	r0, r5
   1ae04:	bl	12074 <strncpy@plt>
   1ae08:	strb	sl, [r9]
   1ae0c:	mov	r0, r6
   1ae10:	mov	r2, r5
   1ae14:	mov	r1, fp
   1ae18:	bl	1aa88 <fputs@plt+0x8444>
   1ae1c:	ldr	r4, [r4]
   1ae20:	cmp	r7, r4
   1ae24:	bne	1adf4 <fputs@plt+0x87b0>
   1ae28:	ldr	r2, [sp, #4]
   1ae2c:	mov	r0, #10
   1ae30:	ldr	r3, [pc, #28]	; 1ae54 <fputs@plt+0x8810>
   1ae34:	ldr	r3, [r2, r3]
   1ae38:	ldr	r1, [r3]
   1ae3c:	add	sp, sp, #12
   1ae40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae44:	b	12458 <fputc@plt>
   1ae48:	add	sp, sp, #12
   1ae4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae50:	andeq	r4, r1, r4, asr #4
   1ae54:	andeq	r0, r0, r0, asr #4
   1ae58:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ae5c:	mov	r6, r0
   1ae60:	ldr	r5, [r0]
   1ae64:	sub	sp, sp, #12
   1ae68:	ldr	r9, [pc, #112]	; 1aee0 <fputs@plt+0x889c>
   1ae6c:	mov	r8, r1
   1ae70:	mov	r7, r2
   1ae74:	mov	r3, r5
   1ae78:	add	r9, pc, r9
   1ae7c:	ldr	r4, [r3, #20]!
   1ae80:	cmp	r4, r3
   1ae84:	beq	1aec4 <fputs@plt+0x8880>
   1ae88:	ldr	r1, [r4, #-36]	; 0xffffffdc
   1ae8c:	sub	r2, r4, #8
   1ae90:	mov	r3, r8
   1ae94:	mov	r0, r6
   1ae98:	str	r7, [sp]
   1ae9c:	bl	1a31c <fputs@plt+0x7cd8>
   1aea0:	sub	r1, r4, #40	; 0x28
   1aea4:	mov	r2, r0
   1aea8:	mov	r0, r5
   1aeac:	bl	1aa88 <fputs@plt+0x8444>
   1aeb0:	ldr	r5, [r6]
   1aeb4:	ldr	r4, [r4]
   1aeb8:	add	r0, r5, #20
   1aebc:	cmp	r4, r0
   1aec0:	bne	1ae88 <fputs@plt+0x8844>
   1aec4:	ldr	r3, [pc, #24]	; 1aee4 <fputs@plt+0x88a0>
   1aec8:	mov	r0, #10
   1aecc:	ldr	r3, [r9, r3]
   1aed0:	ldr	r1, [r3]
   1aed4:	add	sp, sp, #12
   1aed8:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1aedc:	b	12458 <fputc@plt>
   1aee0:	andeq	r4, r1, r0, lsl #3
   1aee4:	andeq	r0, r0, r0, asr #4
   1aee8:	push	{r3, r4, r5, r6, r7, lr}
   1aeec:	mov	r5, r0
   1aef0:	mov	r7, r1
   1aef4:	mov	r6, r2
   1aef8:	bl	1ae58 <fputs@plt+0x8814>
   1aefc:	ldr	r4, [r5, #24]
   1af00:	add	r5, r5, #24
   1af04:	cmp	r5, r4
   1af08:	popeq	{r3, r4, r5, r6, r7, pc}
   1af0c:	sub	r0, r4, #32
   1af10:	mov	r1, r7
   1af14:	mov	r2, r6
   1af18:	bl	1aee8 <fputs@plt+0x88a4>
   1af1c:	ldr	r4, [r4]
   1af20:	cmp	r5, r4
   1af24:	bne	1af0c <fputs@plt+0x88c8>
   1af28:	pop	{r3, r4, r5, r6, r7, pc}
   1af2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af30:	subs	r6, r0, #0
   1af34:	sub	sp, sp, #12
   1af38:	beq	1b320 <fputs@plt+0x8cdc>
   1af3c:	ldr	r3, [r6, #16]
   1af40:	cmp	r3, #0
   1af44:	bne	1b03c <fputs@plt+0x89f8>
   1af48:	ldr	r2, [r6, #4]
   1af4c:	mov	r4, r6
   1af50:	ldr	r3, [r4, #28]!
   1af54:	cmp	r3, r4
   1af58:	beq	1af70 <fputs@plt+0x892c>
   1af5c:	ldmda	r3, {r1, r3}
   1af60:	cmp	r2, r1
   1af64:	movcc	r2, r1
   1af68:	cmp	r3, r4
   1af6c:	bne	1af5c <fputs@plt+0x8918>
   1af70:	add	r8, r2, #1
   1af74:	mov	r0, r8
   1af78:	bl	1241c <malloc@plt>
   1af7c:	subs	r7, r0, #0
   1af80:	beq	1b320 <fputs@plt+0x8cdc>
   1af84:	ldr	r3, [r6, #16]
   1af88:	cmp	r3, #0
   1af8c:	beq	1af9c <fputs@plt+0x8958>
   1af90:	ldr	fp, [r6, #12]
   1af94:	ands	fp, fp, #18
   1af98:	beq	1b078 <fputs@plt+0x8a34>
   1af9c:	ldr	r3, [r6, #12]
   1afa0:	mov	r0, r6
   1afa4:	mov	r1, r7
   1afa8:	mov	r2, r8
   1afac:	tst	r3, #64	; 0x40
   1afb0:	beq	1aff8 <fputs@plt+0x89b4>
   1afb4:	bl	1ad94 <fputs@plt+0x8750>
   1afb8:	ldr	r5, [r6, #28]
   1afbc:	cmp	r5, r4
   1afc0:	beq	1afdc <fputs@plt+0x8998>
   1afc4:	ldr	r3, [r5, #24]
   1afc8:	cmp	r3, #0
   1afcc:	beq	1b028 <fputs@plt+0x89e4>
   1afd0:	ldr	r5, [r5]
   1afd4:	cmp	r5, r4
   1afd8:	bne	1afc4 <fputs@plt+0x8980>
   1afdc:	mov	r0, r7
   1afe0:	bl	121b8 <free@plt>
   1afe4:	mov	r3, #0
   1afe8:	mov	r0, r3
   1afec:	str	r3, [r6, #16]
   1aff0:	add	sp, sp, #12
   1aff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aff8:	bl	1ad94 <fputs@plt+0x8750>
   1affc:	ldr	r5, [r6, #28]
   1b000:	cmp	r5, r4
   1b004:	beq	1afdc <fputs@plt+0x8998>
   1b008:	sub	r0, r5, #16
   1b00c:	mov	r1, r7
   1b010:	mov	r2, r8
   1b014:	bl	1ae58 <fputs@plt+0x8814>
   1b018:	ldr	r5, [r5]
   1b01c:	cmp	r5, r4
   1b020:	bne	1b008 <fputs@plt+0x89c4>
   1b024:	b	1afdc <fputs@plt+0x8998>
   1b028:	sub	r0, r5, #16
   1b02c:	mov	r1, r7
   1b030:	mov	r2, r8
   1b034:	bl	1aee8 <fputs@plt+0x88a4>
   1b038:	b	1afd0 <fputs@plt+0x898c>
   1b03c:	mov	r0, #1
   1b040:	bl	1223c <isatty@plt>
   1b044:	ldr	r2, [r6, #4]
   1b048:	cmp	r0, #0
   1b04c:	str	r0, [r6, #8]
   1b050:	beq	1b068 <fputs@plt+0x8a24>
   1b054:	cmp	r2, #0
   1b058:	bne	1af4c <fputs@plt+0x8908>
   1b05c:	bl	1b4e8 <fputs@plt+0x8ea4>
   1b060:	mov	r2, r0
   1b064:	str	r0, [r6, #4]
   1b068:	cmp	r2, #0
   1b06c:	moveq	r2, #80	; 0x50
   1b070:	streq	r2, [r6, #4]
   1b074:	b	1af4c <fputs@plt+0x8908>
   1b078:	mov	r9, r6
   1b07c:	mov	sl, fp
   1b080:	ldr	r5, [r9, #20]!
   1b084:	cmp	r5, r9
   1b088:	beq	1b0c8 <fputs@plt+0x8a84>
   1b08c:	sub	r1, r5, #40	; 0x28
   1b090:	mov	r2, r7
   1b094:	mov	r3, r8
   1b098:	mov	r0, r6
   1b09c:	bl	1a46c <fputs@plt+0x7e28>
   1b0a0:	ldr	r2, [r5, #-32]	; 0xffffffe0
   1b0a4:	ldr	r1, [r6, #24]
   1b0a8:	ldr	r3, [r5, #-4]
   1b0ac:	cmp	r1, r5
   1b0b0:	addne	r2, r2, #1
   1b0b4:	ldr	r5, [r5]
   1b0b8:	add	sl, sl, r2
   1b0bc:	add	fp, fp, r3
   1b0c0:	cmp	r5, r9
   1b0c4:	bne	1b08c <fputs@plt+0x8a48>
   1b0c8:	ldr	r3, [r6, #8]
   1b0cc:	cmp	r3, #0
   1b0d0:	beq	1af9c <fputs@plt+0x8958>
   1b0d4:	ldr	r3, [r6, #4]
   1b0d8:	cmp	r3, sl
   1b0dc:	bcs	1b150 <fputs@plt+0x8b0c>
   1b0e0:	cmp	fp, #0
   1b0e4:	ldr	r1, [r6, #20]
   1b0e8:	beq	1b164 <fputs@plt+0x8b20>
   1b0ec:	cmp	r1, r9
   1b0f0:	mov	r5, r1
   1b0f4:	bne	1b108 <fputs@plt+0x8ac4>
   1b0f8:	b	1b164 <fputs@plt+0x8b20>
   1b0fc:	ldr	r5, [r5]
   1b100:	cmp	r5, r9
   1b104:	beq	1b14c <fputs@plt+0x8b08>
   1b108:	ldr	r3, [r5, #-4]
   1b10c:	cmp	r3, #0
   1b110:	beq	1b0fc <fputs@plt+0x8ab8>
   1b114:	ldr	ip, [r5, #-32]	; 0xffffffe0
   1b118:	mov	r2, r7
   1b11c:	mov	r3, r8
   1b120:	mov	r0, r6
   1b124:	sub	r1, r5, #40	; 0x28
   1b128:	str	ip, [sp, #4]
   1b12c:	bl	1a46c <fputs@plt+0x7e28>
   1b130:	ldr	r3, [r5, #-32]	; 0xffffffe0
   1b134:	ldr	ip, [sp, #4]
   1b138:	cmp	ip, r3
   1b13c:	rsb	r2, ip, r3
   1b140:	addhi	sl, sl, r2
   1b144:	subls	fp, fp, #1
   1b148:	b	1b0fc <fputs@plt+0x8ab8>
   1b14c:	ldr	r3, [r6, #4]
   1b150:	cmp	sl, r3
   1b154:	bcc	1b28c <fputs@plt+0x8c48>
   1b158:	cmp	sl, r3
   1b15c:	bls	1af9c <fputs@plt+0x8958>
   1b160:	ldr	r1, [r6, #20]
   1b164:	vmov.f64	d6, #112	; 0x3f800000  1.0
   1b168:	mov	r0, #1
   1b16c:	cmp	r1, r9
   1b170:	beq	1b278 <fputs@plt+0x8c34>
   1b174:	cmp	r3, sl
   1b178:	bcs	1b278 <fputs@plt+0x8c34>
   1b17c:	mov	ip, r1
   1b180:	mov	r5, sl
   1b184:	eor	fp, r0, #1
   1b188:	b	1b1d4 <fputs@plt+0x8b90>
   1b18c:	vcmpe.f64	d7, d6
   1b190:	vmrs	APSR_nzcv, fpscr
   1b194:	ble	1b1c0 <fputs@plt+0x8b7c>
   1b198:	ldr	r2, [ip, #-32]	; 0xffffffe0
   1b19c:	cmp	r2, #0
   1b1a0:	beq	1b1c0 <fputs@plt+0x8b7c>
   1b1a4:	cmp	r5, #0
   1b1a8:	moveq	lr, #0
   1b1ac:	andne	lr, fp, #1
   1b1b0:	cmp	lr, #0
   1b1b4:	subne	r5, r5, #1
   1b1b8:	subne	r2, r2, #1
   1b1bc:	strne	r2, [ip, #-32]	; 0xffffffe0
   1b1c0:	ldr	ip, [ip]
   1b1c4:	cmp	ip, r9
   1b1c8:	beq	1b260 <fputs@plt+0x8c1c>
   1b1cc:	cmp	r5, r3
   1b1d0:	bls	1b260 <fputs@plt+0x8c1c>
   1b1d4:	vldr	d7, [ip, #-16]
   1b1d8:	vcmpe.f64	d7, d6
   1b1dc:	ldr	lr, [ip, #-8]
   1b1e0:	vmrs	APSR_nzcv, fpscr
   1b1e4:	ble	1b1f0 <fputs@plt+0x8bac>
   1b1e8:	tst	lr, #32
   1b1ec:	beq	1b1c0 <fputs@plt+0x8b7c>
   1b1f0:	tst	lr, #64	; 0x40
   1b1f4:	bne	1b1c0 <fputs@plt+0x8b7c>
   1b1f8:	cmp	r0, #0
   1b1fc:	beq	1b208 <fputs@plt+0x8bc4>
   1b200:	tst	lr, #32
   1b204:	beq	1b1c0 <fputs@plt+0x8b7c>
   1b208:	ldr	r2, [ip, #-32]	; 0xffffffe0
   1b20c:	ldr	lr, [ip, #-28]	; 0xffffffe4
   1b210:	cmp	r2, lr
   1b214:	beq	1b1c0 <fputs@plt+0x8b7c>
   1b218:	vcmpe.f64	d7, d6
   1b21c:	vmrs	APSR_nzcv, fpscr
   1b220:	bpl	1b18c <fputs@plt+0x8b48>
   1b224:	cmp	r2, #0
   1b228:	beq	1b18c <fputs@plt+0x8b48>
   1b22c:	cmp	r5, #0
   1b230:	beq	1b18c <fputs@plt+0x8b48>
   1b234:	vmov	s7, r3
   1b238:	vcvt.f64.u32	d5, s7
   1b23c:	vmov	s7, r2
   1b240:	vmul.f64	d5, d7, d5
   1b244:	vcvt.f64.u32	d4, s7
   1b248:	vcmpe.f64	d4, d5
   1b24c:	vmrs	APSR_nzcv, fpscr
   1b250:	subgt	r2, r2, #1
   1b254:	subgt	r5, r5, #1
   1b258:	strgt	r2, [ip, #-32]	; 0xffffffe0
   1b25c:	b	1b18c <fputs@plt+0x8b48>
   1b260:	cmp	r5, sl
   1b264:	beq	1b27c <fputs@plt+0x8c38>
   1b268:	cmp	r5, r3
   1b26c:	bls	1af9c <fputs@plt+0x8958>
   1b270:	mov	sl, r5
   1b274:	b	1b16c <fputs@plt+0x8b28>
   1b278:	mov	r5, sl
   1b27c:	cmp	r0, #0
   1b280:	beq	1af9c <fputs@plt+0x8958>
   1b284:	mov	r0, #0
   1b288:	b	1b268 <fputs@plt+0x8c24>
   1b28c:	cmp	fp, #0
   1b290:	beq	1b2fc <fputs@plt+0x8cb8>
   1b294:	ldr	r2, [r6, #20]
   1b298:	cmp	r2, r9
   1b29c:	bne	1b2c4 <fputs@plt+0x8c80>
   1b2a0:	b	1b2fc <fputs@plt+0x8cb8>
   1b2a4:	ldr	r0, [r2, #-32]	; 0xffffffe0
   1b2a8:	add	sl, sl, r1
   1b2ac:	str	r0, [r2, #-32]	; 0xffffffe0
   1b2b0:	cmp	sl, r3
   1b2b4:	beq	1af9c <fputs@plt+0x8958>
   1b2b8:	ldr	r2, [r2]
   1b2bc:	cmp	r2, r9
   1b2c0:	beq	1b2f4 <fputs@plt+0x8cb0>
   1b2c4:	ldr	r1, [r2, #-4]
   1b2c8:	cmp	r1, #0
   1b2cc:	beq	1b2b8 <fputs@plt+0x8c74>
   1b2d0:	subs	r1, r3, sl
   1b2d4:	beq	1b2a4 <fputs@plt+0x8c60>
   1b2d8:	ldr	lr, [r2, #-32]	; 0xffffffe0
   1b2dc:	ldr	ip, [r2, #-24]	; 0xffffffe8
   1b2e0:	add	r0, r1, lr
   1b2e4:	cmp	r0, ip
   1b2e8:	rsbhi	r1, lr, ip
   1b2ec:	movhi	r0, ip
   1b2f0:	b	1b2a8 <fputs@plt+0x8c64>
   1b2f4:	cmp	sl, r3
   1b2f8:	bcs	1b158 <fputs@plt+0x8b14>
   1b2fc:	ldr	r2, [r6, #24]
   1b300:	ldr	r1, [r2, #-8]
   1b304:	tst	r1, #128	; 0x80
   1b308:	bne	1b158 <fputs@plt+0x8b14>
   1b30c:	ldr	r1, [r2, #-32]	; 0xffffffe0
   1b310:	add	r3, r3, r1
   1b314:	rsb	sl, sl, r3
   1b318:	str	sl, [r2, #-32]	; 0xffffffe0
   1b31c:	b	1af9c <fputs@plt+0x8958>
   1b320:	mvn	r0, #0
   1b324:	b	1aff0 <fputs@plt+0x89ac>
   1b328:	ldr	r3, [pc, #164]	; 1b3d4 <fputs@plt+0x8d90>
   1b32c:	ldr	r2, [pc, #164]	; 1b3d8 <fputs@plt+0x8d94>
   1b330:	add	r3, pc, r3
   1b334:	push	{r4, r5, r6, r7, r8, lr}
   1b338:	sub	sp, sp, #8
   1b33c:	ldr	r5, [r3, r2]
   1b340:	ldr	r3, [r5]
   1b344:	str	r3, [sp, #4]
   1b348:	bl	12098 <getenv@plt>
   1b34c:	subs	r8, r0, #0
   1b350:	beq	1b3c8 <fputs@plt+0x8d84>
   1b354:	add	r4, sp, #8
   1b358:	mov	r7, #0
   1b35c:	str	r7, [r4, #-8]!
   1b360:	bl	125fc <__errno_location@plt>
   1b364:	mov	r1, sp
   1b368:	mov	r2, #10
   1b36c:	mov	r6, r0
   1b370:	mov	r0, r8
   1b374:	str	r7, [r6]
   1b378:	bl	12308 <strtol@plt>
   1b37c:	ldr	r3, [r6]
   1b380:	cmp	r3, r7
   1b384:	bne	1b3c8 <fputs@plt+0x8d84>
   1b388:	ldr	r3, [sp]
   1b38c:	cmp	r3, r7
   1b390:	beq	1b3c8 <fputs@plt+0x8d84>
   1b394:	ldrsb	r2, [r3]
   1b398:	cmp	r2, r7
   1b39c:	bne	1b3c8 <fputs@plt+0x8d84>
   1b3a0:	cmp	r8, r3
   1b3a4:	bcs	1b3c8 <fputs@plt+0x8d84>
   1b3a8:	cmp	r0, r7
   1b3ac:	ble	1b3c8 <fputs@plt+0x8d84>
   1b3b0:	ldr	r2, [sp, #4]
   1b3b4:	ldr	r3, [r5]
   1b3b8:	cmp	r2, r3
   1b3bc:	bne	1b3d0 <fputs@plt+0x8d8c>
   1b3c0:	add	sp, sp, #8
   1b3c4:	pop	{r4, r5, r6, r7, r8, pc}
   1b3c8:	mvn	r0, #0
   1b3cc:	b	1b3b0 <fputs@plt+0x8d6c>
   1b3d0:	bl	12434 <__stack_chk_fail@plt>
   1b3d4:	andeq	r3, r1, r8, asr #25
   1b3d8:	andeq	r0, r0, ip, lsr r2
   1b3dc:	ldr	r3, [pc, #244]	; 1b4d8 <fputs@plt+0x8e94>
   1b3e0:	ldr	ip, [pc, #244]	; 1b4dc <fputs@plt+0x8e98>
   1b3e4:	add	r3, pc, r3
   1b3e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b3ec:	sub	sp, sp, #20
   1b3f0:	ldr	r5, [r3, ip]
   1b3f4:	mov	r9, r0
   1b3f8:	mov	r8, r1
   1b3fc:	mov	r0, #1
   1b400:	movw	r1, #21523	; 0x5413
   1b404:	add	r2, sp, #4
   1b408:	ldr	r3, [r5]
   1b40c:	str	r3, [sp, #12]
   1b410:	bl	12230 <ioctl@plt>
   1b414:	cmp	r0, #0
   1b418:	bne	1b480 <fputs@plt+0x8e3c>
   1b41c:	ldrh	sl, [sp, #6]
   1b420:	ldrh	r4, [sp, #4]
   1b424:	rsbs	r3, sl, #1
   1b428:	movcc	r3, #0
   1b42c:	rsbs	fp, r4, #1
   1b430:	movcc	fp, #0
   1b434:	adds	r7, r9, #0
   1b438:	movne	r7, #1
   1b43c:	tst	r3, r7
   1b440:	bne	1b4a0 <fputs@plt+0x8e5c>
   1b444:	adds	r6, r8, #0
   1b448:	movne	r6, #1
   1b44c:	tst	fp, r6
   1b450:	bne	1b4c0 <fputs@plt+0x8e7c>
   1b454:	ldr	r2, [sp, #12]
   1b458:	cmp	r7, #0
   1b45c:	ldr	r3, [r5]
   1b460:	mov	r0, #0
   1b464:	strne	sl, [r9]
   1b468:	cmp	r6, #0
   1b46c:	strne	r4, [r8]
   1b470:	cmp	r2, r3
   1b474:	bne	1b4d4 <fputs@plt+0x8e90>
   1b478:	add	sp, sp, #20
   1b47c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b480:	adds	r7, r9, #0
   1b484:	mov	fp, #1
   1b488:	mov	r3, fp
   1b48c:	mov	r4, #0
   1b490:	movne	r7, #1
   1b494:	tst	r3, r7
   1b498:	mov	sl, r4
   1b49c:	beq	1b444 <fputs@plt+0x8e00>
   1b4a0:	ldr	r0, [pc, #56]	; 1b4e0 <fputs@plt+0x8e9c>
   1b4a4:	add	r0, pc, r0
   1b4a8:	bl	1b328 <fputs@plt+0x8ce4>
   1b4ac:	adds	r6, r8, #0
   1b4b0:	movne	r6, #1
   1b4b4:	tst	fp, r6
   1b4b8:	mov	sl, r0
   1b4bc:	beq	1b454 <fputs@plt+0x8e10>
   1b4c0:	ldr	r0, [pc, #28]	; 1b4e4 <fputs@plt+0x8ea0>
   1b4c4:	add	r0, pc, r0
   1b4c8:	bl	1b328 <fputs@plt+0x8ce4>
   1b4cc:	mov	r4, r0
   1b4d0:	b	1b454 <fputs@plt+0x8e10>
   1b4d4:	bl	12434 <__stack_chk_fail@plt>
   1b4d8:	andeq	r3, r1, r4, lsl ip
   1b4dc:	andeq	r0, r0, ip, lsr r2
   1b4e0:	andeq	r3, r0, r8, ror r3
   1b4e4:	andeq	r3, r0, r0, ror #6
   1b4e8:	ldr	r3, [pc, #204]	; 1b5bc <fputs@plt+0x8f78>
   1b4ec:	mov	r0, #0
   1b4f0:	ldr	ip, [pc, #200]	; 1b5c0 <fputs@plt+0x8f7c>
   1b4f4:	movw	r1, #21523	; 0x5413
   1b4f8:	add	r3, pc, r3
   1b4fc:	push	{r4, r5, r6, r7, r8, lr}
   1b500:	sub	sp, sp, #16
   1b504:	ldr	r4, [r3, ip]
   1b508:	add	r2, sp, #4
   1b50c:	ldr	r3, [r4]
   1b510:	str	r3, [sp, #12]
   1b514:	bl	12230 <ioctl@plt>
   1b518:	cmp	r0, #0
   1b51c:	bne	1b53c <fputs@plt+0x8ef8>
   1b520:	ldrh	r0, [sp, #6]
   1b524:	ldr	r2, [sp, #12]
   1b528:	ldr	r3, [r4]
   1b52c:	cmp	r2, r3
   1b530:	bne	1b5b8 <fputs@plt+0x8f74>
   1b534:	add	sp, sp, #16
   1b538:	pop	{r4, r5, r6, r7, r8, pc}
   1b53c:	ldr	r0, [pc, #128]	; 1b5c4 <fputs@plt+0x8f80>
   1b540:	add	r0, pc, r0
   1b544:	bl	12098 <getenv@plt>
   1b548:	subs	r8, r0, #0
   1b54c:	moveq	r0, r8
   1b550:	beq	1b524 <fputs@plt+0x8ee0>
   1b554:	add	r5, sp, #16
   1b558:	mov	r7, #0
   1b55c:	str	r7, [r5, #-16]!
   1b560:	bl	125fc <__errno_location@plt>
   1b564:	mov	r1, sp
   1b568:	mov	r2, #10
   1b56c:	mov	r6, r0
   1b570:	mov	r0, r8
   1b574:	str	r7, [r6]
   1b578:	bl	12308 <strtol@plt>
   1b57c:	ldr	r3, [r6]
   1b580:	cmp	r3, r7
   1b584:	bne	1b5b0 <fputs@plt+0x8f6c>
   1b588:	ldr	r3, [sp]
   1b58c:	cmp	r3, r7
   1b590:	beq	1b5b0 <fputs@plt+0x8f6c>
   1b594:	ldrsb	r2, [r3]
   1b598:	cmp	r2, r7
   1b59c:	bne	1b5b0 <fputs@plt+0x8f6c>
   1b5a0:	cmp	r8, r3
   1b5a4:	bcs	1b5b0 <fputs@plt+0x8f6c>
   1b5a8:	cmp	r0, r7
   1b5ac:	bgt	1b524 <fputs@plt+0x8ee0>
   1b5b0:	mov	r0, #0
   1b5b4:	b	1b524 <fputs@plt+0x8ee0>
   1b5b8:	bl	12434 <__stack_chk_fail@plt>
   1b5bc:	andeq	r3, r1, r0, lsl #22
   1b5c0:	andeq	r0, r0, ip, lsr r2
   1b5c4:	ldrdeq	r3, [r0], -ip
   1b5c8:	push	{r3, r4, r5, r6, r7, lr}
   1b5cc:	subs	r7, r2, #0
   1b5d0:	mov	r5, r3
   1b5d4:	mov	r4, r1
   1b5d8:	movne	r3, #0
   1b5dc:	strne	r3, [r7]
   1b5e0:	cmp	r1, #0
   1b5e4:	movne	r3, #0
   1b5e8:	strne	r3, [r1]
   1b5ec:	cmp	r5, #0
   1b5f0:	movne	r3, #0
   1b5f4:	strne	r3, [r5]
   1b5f8:	bl	120a4 <ttyname@plt>
   1b5fc:	subs	r6, r0, #0
   1b600:	beq	1b69c <fputs@plt+0x9058>
   1b604:	ldr	r1, [pc, #152]	; 1b6a4 <fputs@plt+0x9060>
   1b608:	cmp	r4, #0
   1b60c:	mov	r0, r6
   1b610:	strne	r6, [r4]
   1b614:	add	r1, pc, r1
   1b618:	mov	r2, #5
   1b61c:	bl	1256c <strncmp@plt>
   1b620:	cmp	r0, #0
   1b624:	addeq	r6, r6, #5
   1b628:	cmp	r7, #0
   1b62c:	strne	r6, [r7]
   1b630:	cmp	r5, #0
   1b634:	beq	1b694 <fputs@plt+0x9050>
   1b638:	cmp	r6, #0
   1b63c:	beq	1b694 <fputs@plt+0x9050>
   1b640:	ldrb	r4, [r6]
   1b644:	cmp	r4, #0
   1b648:	beq	1b694 <fputs@plt+0x9050>
   1b64c:	bl	123ec <__ctype_b_loc@plt>
   1b650:	mov	r2, r6
   1b654:	ldr	r3, [r0]
   1b658:	b	1b670 <fputs@plt+0x902c>
   1b65c:	cmn	r2, #1
   1b660:	beq	1b694 <fputs@plt+0x9050>
   1b664:	ldrb	r4, [r2, #1]!
   1b668:	cmp	r4, #0
   1b66c:	beq	1b694 <fputs@plt+0x9050>
   1b670:	sxtb	r4, r4
   1b674:	sxth	r4, r4
   1b678:	lsl	r4, r4, #1
   1b67c:	ldrh	r4, [r3, r4]
   1b680:	and	r4, r4, #2048	; 0x800
   1b684:	uxth	r4, r4
   1b688:	cmp	r4, #0
   1b68c:	beq	1b65c <fputs@plt+0x9018>
   1b690:	str	r2, [r5]
   1b694:	mov	r0, #0
   1b698:	pop	{r3, r4, r5, r6, r7, pc}
   1b69c:	mvn	r0, #0
   1b6a0:	pop	{r3, r4, r5, r6, r7, pc}
   1b6a4:	andeq	r3, r0, r8, lsr #1
   1b6a8:	ldr	r2, [pc, #204]	; 1b77c <fputs@plt+0x9138>
   1b6ac:	mov	r3, #0
   1b6b0:	ldr	r1, [pc, #200]	; 1b780 <fputs@plt+0x913c>
   1b6b4:	push	{r4, r5, r6, lr}
   1b6b8:	add	r2, pc, r2
   1b6bc:	ldr	r5, [pc, #192]	; 1b784 <fputs@plt+0x9140>
   1b6c0:	sub	sp, sp, #416	; 0x1a0
   1b6c4:	ldr	r4, [r2, r1]
   1b6c8:	add	r5, pc, r5
   1b6cc:	str	r3, [sp, #8]
   1b6d0:	str	r3, [sp, #12]
   1b6d4:	ldr	r0, [r5]
   1b6d8:	ldr	r2, [r4]
   1b6dc:	cmn	r0, #1
   1b6e0:	str	r3, [sp, #16]
   1b6e4:	str	r2, [sp, #412]	; 0x19c
   1b6e8:	beq	1b704 <fputs@plt+0x90c0>
   1b6ec:	ldr	r2, [sp, #412]	; 0x19c
   1b6f0:	ldr	r3, [r4]
   1b6f4:	cmp	r2, r3
   1b6f8:	bne	1b778 <fputs@plt+0x9134>
   1b6fc:	add	sp, sp, #416	; 0x1a0
   1b700:	pop	{r4, r5, r6, pc}
   1b704:	add	r6, sp, #20
   1b708:	mov	r0, r6
   1b70c:	bl	12110 <uname@plt>
   1b710:	cmp	r0, #0
   1b714:	beq	1b730 <fputs@plt+0x90ec>
   1b718:	ldr	r2, [pc, #104]	; 1b788 <fputs@plt+0x9144>
   1b71c:	mov	r3, #0
   1b720:	mov	r0, r3
   1b724:	add	r2, pc, r2
   1b728:	str	r3, [r2]
   1b72c:	b	1b6ec <fputs@plt+0x90a8>
   1b730:	ldr	r1, [pc, #84]	; 1b78c <fputs@plt+0x9148>
   1b734:	add	r3, sp, #16
   1b738:	add	r0, r6, #130	; 0x82
   1b73c:	str	r3, [sp]
   1b740:	add	r1, pc, r1
   1b744:	add	r2, sp, #8
   1b748:	add	r3, sp, #12
   1b74c:	bl	12278 <sscanf@plt>
   1b750:	sub	r0, r0, #1
   1b754:	cmp	r0, #2
   1b758:	bhi	1b718 <fputs@plt+0x90d4>
   1b75c:	add	r0, sp, #8
   1b760:	ldm	r0, {r0, r2, r3}
   1b764:	lsl	r2, r2, #8
   1b768:	add	r0, r2, r0, lsl #16
   1b76c:	add	r0, r0, r3
   1b770:	str	r0, [r5]
   1b774:	b	1b6ec <fputs@plt+0x90a8>
   1b778:	bl	12434 <__stack_chk_fail@plt>
   1b77c:	andeq	r3, r1, r0, asr #18
   1b780:	andeq	r0, r0, ip, lsr r2
   1b784:	andeq	r3, r1, r0, asr #30
   1b788:	andeq	r3, r1, r4, ror #29
   1b78c:	andeq	r3, r0, ip, ror #1
   1b790:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1b794:	mov	r6, r0
   1b798:	ldr	r0, [r0]
   1b79c:	mov	r7, r1
   1b7a0:	cmp	r0, #0
   1b7a4:	beq	1b810 <fputs@plt+0x91cc>
   1b7a8:	add	r4, r6, #4
   1b7ac:	mov	r5, r6
   1b7b0:	mov	r9, #0
   1b7b4:	movw	r8, #65533	; 0xfffd
   1b7b8:	b	1b7cc <fputs@plt+0x9188>
   1b7bc:	ldr	r0, [r5, #4]!
   1b7c0:	mov	r9, r3
   1b7c4:	cmp	r0, #0
   1b7c8:	beq	1b804 <fputs@plt+0x91c0>
   1b7cc:	bl	12560 <wcwidth@plt>
   1b7d0:	mov	r6, r5
   1b7d4:	mov	r2, r4
   1b7d8:	add	r4, r4, #4
   1b7dc:	cmn	r0, #1
   1b7e0:	streq	r8, [r4, #-8]
   1b7e4:	moveq	r0, #1
   1b7e8:	add	r3, r0, r9
   1b7ec:	cmp	r3, r7
   1b7f0:	bls	1b7bc <fputs@plt+0x9178>
   1b7f4:	mov	r3, #0
   1b7f8:	mov	r0, r9
   1b7fc:	str	r3, [r6]
   1b800:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1b804:	mov	r9, r3
   1b808:	mov	r6, r2
   1b80c:	b	1b7f4 <fputs@plt+0x91b0>
   1b810:	mov	r9, r0
   1b814:	b	1b7f4 <fputs@plt+0x91b0>
   1b818:	ldr	r3, [pc, #440]	; 1b9d8 <fputs@plt+0x9394>
   1b81c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b820:	subs	r4, r0, #0
   1b824:	ldr	r0, [pc, #432]	; 1b9dc <fputs@plt+0x9398>
   1b828:	sub	sp, sp, #28
   1b82c:	add	r3, pc, r3
   1b830:	add	r8, sp, #12
   1b834:	str	r2, [sp, #4]
   1b838:	mov	r5, #0
   1b83c:	ldr	r0, [r3, r0]
   1b840:	str	r5, [r8, #4]
   1b844:	str	r5, [sp, #12]
   1b848:	ldr	r3, [r0]
   1b84c:	str	r0, [sp]
   1b850:	str	r3, [sp, #20]
   1b854:	beq	1b9c0 <fputs@plt+0x937c>
   1b858:	ldrb	sl, [r4]
   1b85c:	cmp	sl, r5
   1b860:	moveq	r5, sl
   1b864:	moveq	r6, r5
   1b868:	beq	1b93c <fputs@plt+0x92f8>
   1b86c:	cmp	r1, r5
   1b870:	beq	1b9b8 <fputs@plt+0x9374>
   1b874:	sub	r1, r1, #1
   1b878:	adds	r7, r4, r1
   1b87c:	bcs	1b9cc <fputs@plt+0x9388>
   1b880:	mov	r5, #0
   1b884:	add	r9, sp, #8
   1b888:	mov	r6, r5
   1b88c:	b	1b8b8 <fputs@plt+0x9274>
   1b890:	add	r4, r4, #1
   1b894:	add	r6, r6, #4
   1b898:	cmp	r4, #0
   1b89c:	add	r5, r5, #4
   1b8a0:	beq	1b93c <fputs@plt+0x92f8>
   1b8a4:	ldrb	sl, [r4]
   1b8a8:	cmp	sl, #0
   1b8ac:	beq	1b93c <fputs@plt+0x92f8>
   1b8b0:	cmp	r4, r7
   1b8b4:	bhi	1b93c <fputs@plt+0x92f8>
   1b8b8:	cmp	r4, r7
   1b8bc:	bcs	1b8c8 <fputs@plt+0x9284>
   1b8c0:	cmp	sl, #92	; 0x5c
   1b8c4:	beq	1b968 <fputs@plt+0x9324>
   1b8c8:	bl	123ec <__ctype_b_loc@plt>
   1b8cc:	lsl	r3, sl, #1
   1b8d0:	ldr	r2, [r0]
   1b8d4:	mov	fp, r0
   1b8d8:	ldrh	r3, [r2, r3]
   1b8dc:	tst	r3, #2
   1b8e0:	bne	1b890 <fputs@plt+0x924c>
   1b8e4:	bl	12068 <__ctype_get_mb_cur_max@plt>
   1b8e8:	mov	r1, r4
   1b8ec:	mov	r3, r8
   1b8f0:	mov	r2, r0
   1b8f4:	mov	r0, r9
   1b8f8:	bl	12158 <mbrtowc@plt>
   1b8fc:	subs	sl, r0, #0
   1b900:	beq	1b93c <fputs@plt+0x92f8>
   1b904:	add	r2, sl, #2
   1b908:	cmp	r2, #1
   1b90c:	bls	1b978 <fputs@plt+0x9334>
   1b910:	ldr	fp, [sp, #8]
   1b914:	mov	r0, fp
   1b918:	bl	12584 <iswprint@plt>
   1b91c:	cmp	r0, #0
   1b920:	bne	1b9a4 <fputs@plt+0x9360>
   1b924:	lsl	r2, sl, #2
   1b928:	add	r6, r6, r2
   1b92c:	add	r5, r5, r2
   1b930:	add	r4, r4, sl
   1b934:	cmp	r4, #0
   1b938:	bne	1b8a4 <fputs@plt+0x9260>
   1b93c:	ldr	r3, [sp, #4]
   1b940:	mov	r0, r6
   1b944:	ldr	r1, [sp]
   1b948:	cmp	r3, #0
   1b94c:	ldr	r2, [sp, #20]
   1b950:	strne	r5, [r3]
   1b954:	ldr	r3, [r1]
   1b958:	cmp	r2, r3
   1b95c:	bne	1b9d4 <fputs@plt+0x9390>
   1b960:	add	sp, sp, #28
   1b964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b968:	ldrsb	r2, [r4, #1]
   1b96c:	cmp	r2, #120	; 0x78
   1b970:	bne	1b8c8 <fputs@plt+0x9284>
   1b974:	b	1b890 <fputs@plt+0x924c>
   1b978:	ldrb	r3, [r4]
   1b97c:	mov	sl, #1
   1b980:	ldr	r2, [fp]
   1b984:	lsl	r3, r3, #1
   1b988:	ldrh	r3, [r2, r3]
   1b98c:	tst	r3, #16384	; 0x4000
   1b990:	addne	r6, r6, #1
   1b994:	addne	r5, r5, #1
   1b998:	addeq	r6, r6, #4
   1b99c:	addeq	r5, r5, #4
   1b9a0:	b	1b930 <fputs@plt+0x92ec>
   1b9a4:	mov	r0, fp
   1b9a8:	add	r5, r5, sl
   1b9ac:	bl	12560 <wcwidth@plt>
   1b9b0:	add	r6, r6, r0
   1b9b4:	b	1b930 <fputs@plt+0x92ec>
   1b9b8:	mov	r7, r4
   1b9bc:	b	1b880 <fputs@plt+0x923c>
   1b9c0:	mov	r5, r4
   1b9c4:	mov	r6, r4
   1b9c8:	b	1b93c <fputs@plt+0x92f8>
   1b9cc:	mov	r6, r5
   1b9d0:	b	1b93c <fputs@plt+0x92f8>
   1b9d4:	bl	12434 <__stack_chk_fail@plt>
   1b9d8:	andeq	r3, r1, ip, asr #15
   1b9dc:	andeq	r0, r0, ip, lsr r2
   1b9e0:	push	{r4, lr}
   1b9e4:	subs	r4, r0, #0
   1b9e8:	beq	1b9f8 <fputs@plt+0x93b4>
   1b9ec:	ldrsb	r3, [r4]
   1b9f0:	cmp	r3, #0
   1b9f4:	bne	1ba00 <fputs@plt+0x93bc>
   1b9f8:	mov	r0, #0
   1b9fc:	pop	{r4, pc}
   1ba00:	bl	1226c <strlen@plt>
   1ba04:	mov	r2, #0
   1ba08:	mov	r1, r0
   1ba0c:	mov	r0, r4
   1ba10:	pop	{r4, lr}
   1ba14:	b	1b818 <fputs@plt+0x91d4>
   1ba18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba1c:	sub	sp, sp, #52	; 0x34
   1ba20:	ldr	r5, [pc, #664]	; 1bcc0 <fputs@plt+0x967c>
   1ba24:	mov	r8, r3
   1ba28:	ldr	ip, [pc, #660]	; 1bcc4 <fputs@plt+0x9680>
   1ba2c:	subs	r4, r0, #0
   1ba30:	add	r5, pc, r5
   1ba34:	str	r2, [sp, #12]
   1ba38:	mov	r6, r1
   1ba3c:	ldr	ip, [r5, ip]
   1ba40:	mov	r3, r5
   1ba44:	ldr	r3, [ip]
   1ba48:	str	ip, [sp, #20]
   1ba4c:	str	r3, [sp, #44]	; 0x2c
   1ba50:	beq	1bca4 <fputs@plt+0x9660>
   1ba54:	bl	1226c <strlen@plt>
   1ba58:	ldr	r2, [sp, #12]
   1ba5c:	mov	r3, #0
   1ba60:	add	r1, sp, #36	; 0x24
   1ba64:	str	r3, [sp, #36]	; 0x24
   1ba68:	str	r1, [sp, #16]
   1ba6c:	str	r3, [sp, #40]	; 0x28
   1ba70:	cmp	r2, r3
   1ba74:	cmpne	r0, r3
   1ba78:	movne	r0, #0
   1ba7c:	moveq	r0, #1
   1ba80:	moveq	r0, r3
   1ba84:	beq	1bb70 <fputs@plt+0x952c>
   1ba88:	str	r0, [r6]
   1ba8c:	ldrb	sl, [r4]
   1ba90:	cmp	sl, r3
   1ba94:	beq	1bcb4 <fputs@plt+0x9670>
   1ba98:	ldr	r3, [pc, #552]	; 1bcc8 <fputs@plt+0x9684>
   1ba9c:	mov	r5, r2
   1baa0:	ldr	r9, [pc, #548]	; 1bccc <fputs@plt+0x9688>
   1baa4:	add	r1, sp, #32
   1baa8:	ldr	r2, [pc, #544]	; 1bcd0 <fputs@plt+0x968c>
   1baac:	add	r3, pc, r3
   1bab0:	str	r1, [sp, #24]
   1bab4:	add	r9, pc, r9
   1bab8:	add	r2, pc, r2
   1babc:	str	r3, [sp, #8]
   1bac0:	str	r2, [sp, #28]
   1bac4:	b	1bae8 <fputs@plt+0x94a4>
   1bac8:	strb	sl, [r5]
   1bacc:	add	r4, r4, #1
   1bad0:	add	r5, r5, #1
   1bad4:	cmp	r4, #0
   1bad8:	beq	1bb64 <fputs@plt+0x9520>
   1badc:	ldrb	sl, [r4]
   1bae0:	cmp	sl, #0
   1bae4:	beq	1bb64 <fputs@plt+0x9520>
   1bae8:	cmp	r8, #0
   1baec:	sxtb	r7, sl
   1baf0:	beq	1bb08 <fputs@plt+0x94c4>
   1baf4:	mov	r0, r8
   1baf8:	mov	r1, r7
   1bafc:	bl	120c8 <strchr@plt>
   1bb00:	cmp	r0, #0
   1bb04:	bne	1bac8 <fputs@plt+0x9484>
   1bb08:	cmp	r7, #92	; 0x5c
   1bb0c:	beq	1bb8c <fputs@plt+0x9548>
   1bb10:	bl	123ec <__ctype_b_loc@plt>
   1bb14:	uxtb	sl, sl
   1bb18:	lsl	r3, sl, #1
   1bb1c:	ldr	r2, [r0]
   1bb20:	mov	r7, r0
   1bb24:	ldrh	r3, [r2, r3]
   1bb28:	tst	r3, #2
   1bb2c:	beq	1bba0 <fputs@plt+0x955c>
   1bb30:	ldr	r3, [sp, #8]
   1bb34:	mov	r0, r5
   1bb38:	mov	r1, #1
   1bb3c:	mvn	r2, #0
   1bb40:	str	sl, [sp]
   1bb44:	add	r4, r4, r1
   1bb48:	bl	12554 <__sprintf_chk@plt>
   1bb4c:	ldr	r3, [r6]
   1bb50:	cmp	r4, #0
   1bb54:	add	r5, r5, #4
   1bb58:	add	r3, r3, #4
   1bb5c:	str	r3, [r6]
   1bb60:	bne	1badc <fputs@plt+0x9498>
   1bb64:	ldr	r0, [sp, #12]
   1bb68:	mov	r3, #0
   1bb6c:	strb	r3, [r5]
   1bb70:	ldr	r1, [sp, #20]
   1bb74:	ldr	r2, [sp, #44]	; 0x2c
   1bb78:	ldr	r3, [r1]
   1bb7c:	cmp	r2, r3
   1bb80:	bne	1bcbc <fputs@plt+0x9678>
   1bb84:	add	sp, sp, #52	; 0x34
   1bb88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb8c:	ldrsb	r3, [r4, #1]
   1bb90:	cmp	r3, #120	; 0x78
   1bb94:	bne	1bb10 <fputs@plt+0x94cc>
   1bb98:	mov	sl, r7
   1bb9c:	b	1bb30 <fputs@plt+0x94ec>
   1bba0:	bl	12068 <__ctype_get_mb_cur_max@plt>
   1bba4:	mov	r1, r4
   1bba8:	add	r3, sp, #36	; 0x24
   1bbac:	mov	r2, r0
   1bbb0:	add	r0, sp, #32
   1bbb4:	bl	12158 <mbrtowc@plt>
   1bbb8:	subs	sl, r0, #0
   1bbbc:	beq	1bb64 <fputs@plt+0x9520>
   1bbc0:	add	r3, sl, #2
   1bbc4:	cmp	r3, #1
   1bbc8:	bls	1bc28 <fputs@plt+0x95e4>
   1bbcc:	ldr	r7, [sp, #32]
   1bbd0:	mov	r0, r7
   1bbd4:	bl	12584 <iswprint@plt>
   1bbd8:	cmp	r0, #0
   1bbdc:	bne	1bc5c <fputs@plt+0x9618>
   1bbe0:	mov	r7, r4
   1bbe4:	add	r4, r4, sl
   1bbe8:	mov	fp, r5
   1bbec:	ldrb	ip, [r7], #1
   1bbf0:	mov	r0, fp
   1bbf4:	mov	r3, r9
   1bbf8:	mov	r1, #1
   1bbfc:	mvn	r2, #0
   1bc00:	add	fp, fp, #4
   1bc04:	str	ip, [sp]
   1bc08:	bl	12554 <__sprintf_chk@plt>
   1bc0c:	ldr	r3, [r6]
   1bc10:	cmp	r7, r4
   1bc14:	add	r3, r3, #4
   1bc18:	str	r3, [r6]
   1bc1c:	bne	1bbec <fputs@plt+0x95a8>
   1bc20:	add	r5, r5, sl, lsl #2
   1bc24:	b	1bad4 <fputs@plt+0x9490>
   1bc28:	ldrb	r3, [r4]
   1bc2c:	ldr	r1, [r7]
   1bc30:	lsl	r2, r3, #1
   1bc34:	ldrh	r2, [r1, r2]
   1bc38:	tst	r2, #16384	; 0x4000
   1bc3c:	beq	1bc8c <fputs@plt+0x9648>
   1bc40:	ldr	r3, [r6]
   1bc44:	add	r5, r5, #1
   1bc48:	add	r3, r3, #1
   1bc4c:	str	r3, [r6]
   1bc50:	ldrb	r3, [r4], #1
   1bc54:	strb	r3, [r5, #-1]
   1bc58:	b	1bad4 <fputs@plt+0x9490>
   1bc5c:	mov	r1, r4
   1bc60:	mov	r0, r5
   1bc64:	mov	r2, sl
   1bc68:	add	r5, r5, sl
   1bc6c:	bl	12290 <memcpy@plt>
   1bc70:	mov	r0, r7
   1bc74:	ldr	r7, [r6]
   1bc78:	bl	12560 <wcwidth@plt>
   1bc7c:	add	r4, sl, r4
   1bc80:	add	r0, r0, r7
   1bc84:	str	r0, [r6]
   1bc88:	b	1bad4 <fputs@plt+0x9490>
   1bc8c:	str	r3, [sp]
   1bc90:	mov	r0, r5
   1bc94:	mov	r1, #1
   1bc98:	mvn	r2, #0
   1bc9c:	ldr	r3, [sp, #28]
   1bca0:	b	1bb44 <fputs@plt+0x9500>
   1bca4:	str	r4, [sp, #36]	; 0x24
   1bca8:	mov	r0, r4
   1bcac:	str	r4, [sp, #40]	; 0x28
   1bcb0:	b	1bb70 <fputs@plt+0x952c>
   1bcb4:	ldr	r5, [sp, #12]
   1bcb8:	b	1bb64 <fputs@plt+0x9520>
   1bcbc:	bl	12434 <__stack_chk_fail@plt>
   1bcc0:	andeq	r3, r1, r8, asr #11
   1bcc4:	andeq	r0, r0, ip, lsr r2
   1bcc8:	andeq	r2, r0, r4, lsr sp
   1bccc:	andeq	r2, r0, ip, lsr #26
   1bcd0:	andeq	r2, r0, r8, lsr #26
   1bcd4:	ldr	r3, [pc, #492]	; 1bec8 <fputs@plt+0x9884>
   1bcd8:	ldr	ip, [pc, #492]	; 1becc <fputs@plt+0x9888>
   1bcdc:	add	r3, pc, r3
   1bce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bce4:	subs	r4, r0, #0
   1bce8:	ldr	ip, [r3, ip]
   1bcec:	sub	sp, sp, #44	; 0x2c
   1bcf0:	mov	r6, r1
   1bcf4:	mov	r9, r2
   1bcf8:	ldr	r3, [ip]
   1bcfc:	str	ip, [sp, #12]
   1bd00:	str	r3, [sp, #36]	; 0x24
   1bd04:	beq	1beac <fputs@plt+0x9868>
   1bd08:	bl	1226c <strlen@plt>
   1bd0c:	add	r7, sp, #28
   1bd10:	mov	r3, #0
   1bd14:	str	r3, [sp, #28]
   1bd18:	str	r3, [r7, #4]
   1bd1c:	cmp	r9, r3
   1bd20:	cmpne	r0, r3
   1bd24:	movne	r0, #0
   1bd28:	moveq	r0, #1
   1bd2c:	moveq	r0, r3
   1bd30:	beq	1be34 <fputs@plt+0x97f0>
   1bd34:	str	r0, [r6]
   1bd38:	ldrsb	r3, [r4]
   1bd3c:	cmp	r3, #0
   1bd40:	beq	1bebc <fputs@plt+0x9878>
   1bd44:	ldr	r1, [pc, #388]	; 1bed0 <fputs@plt+0x988c>
   1bd48:	add	r8, sp, #24
   1bd4c:	ldr	r2, [pc, #384]	; 1bed4 <fputs@plt+0x9890>
   1bd50:	mov	r5, r9
   1bd54:	add	r1, pc, r1
   1bd58:	str	r1, [sp, #20]
   1bd5c:	add	r2, pc, r2
   1bd60:	str	r2, [sp, #16]
   1bd64:	b	1bdbc <fputs@plt+0x9778>
   1bd68:	ldrsb	r3, [r4]
   1bd6c:	cmp	r3, #92	; 0x5c
   1bd70:	bne	1bd80 <fputs@plt+0x973c>
   1bd74:	ldrsb	r2, [r4, #1]
   1bd78:	cmp	r2, #120	; 0x78
   1bd7c:	beq	1be80 <fputs@plt+0x983c>
   1bd80:	mov	r0, r5
   1bd84:	mov	r1, r4
   1bd88:	mov	r2, sl
   1bd8c:	add	r5, r5, sl
   1bd90:	bl	12290 <memcpy@plt>
   1bd94:	ldr	r0, [sp, #24]
   1bd98:	ldr	fp, [r6]
   1bd9c:	bl	12560 <wcwidth@plt>
   1bda0:	add	r0, r0, fp
   1bda4:	str	r0, [r6]
   1bda8:	adds	r4, r4, sl
   1bdac:	beq	1be28 <fputs@plt+0x97e4>
   1bdb0:	ldrsb	r3, [r4]
   1bdb4:	cmp	r3, #0
   1bdb8:	beq	1be28 <fputs@plt+0x97e4>
   1bdbc:	bl	12068 <__ctype_get_mb_cur_max@plt>
   1bdc0:	mov	r1, r4
   1bdc4:	mov	r3, r7
   1bdc8:	mov	r2, r0
   1bdcc:	mov	r0, r8
   1bdd0:	bl	12158 <mbrtowc@plt>
   1bdd4:	subs	sl, r0, #0
   1bdd8:	beq	1be28 <fputs@plt+0x97e4>
   1bddc:	add	r3, sl, #2
   1bde0:	cmp	r3, #1
   1bde4:	bhi	1bd68 <fputs@plt+0x9724>
   1bde8:	bl	123ec <__ctype_b_loc@plt>
   1bdec:	ldrb	r3, [r4]
   1bdf0:	lsl	r2, r3, #1
   1bdf4:	ldr	r1, [r0]
   1bdf8:	ldrh	r2, [r1, r2]
   1bdfc:	tst	r2, #16384	; 0x4000
   1be00:	beq	1be50 <fputs@plt+0x980c>
   1be04:	ldr	r3, [r6]
   1be08:	mov	sl, #1
   1be0c:	add	r3, r3, sl
   1be10:	str	r3, [r6]
   1be14:	ldrb	r3, [r4]
   1be18:	adds	r4, r4, sl
   1be1c:	strb	r3, [r5]
   1be20:	add	r5, r5, sl
   1be24:	bne	1bdb0 <fputs@plt+0x976c>
   1be28:	mov	r0, r9
   1be2c:	mov	r3, #0
   1be30:	strb	r3, [r5]
   1be34:	ldr	r1, [sp, #12]
   1be38:	ldr	r2, [sp, #36]	; 0x24
   1be3c:	ldr	r3, [r1]
   1be40:	cmp	r2, r3
   1be44:	bne	1bec4 <fputs@plt+0x9880>
   1be48:	add	sp, sp, #44	; 0x2c
   1be4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be50:	str	r3, [sp]
   1be54:	mov	r0, r5
   1be58:	ldr	r3, [sp, #16]
   1be5c:	mov	r1, #1
   1be60:	mvn	r2, #0
   1be64:	add	r5, r5, #4
   1be68:	bl	12554 <__sprintf_chk@plt>
   1be6c:	ldr	r3, [r6]
   1be70:	mov	sl, #1
   1be74:	add	r3, r3, #4
   1be78:	str	r3, [r6]
   1be7c:	b	1bda8 <fputs@plt+0x9764>
   1be80:	str	r3, [sp]
   1be84:	mov	r0, r5
   1be88:	ldr	r3, [sp, #20]
   1be8c:	mov	r1, #1
   1be90:	mvn	r2, #0
   1be94:	add	r5, r5, #4
   1be98:	bl	12554 <__sprintf_chk@plt>
   1be9c:	ldr	r3, [r6]
   1bea0:	add	r3, r3, #4
   1bea4:	str	r3, [r6]
   1bea8:	b	1bda8 <fputs@plt+0x9764>
   1beac:	str	r4, [sp, #28]
   1beb0:	mov	r0, r4
   1beb4:	str	r4, [sp, #32]
   1beb8:	b	1be34 <fputs@plt+0x97f0>
   1bebc:	mov	r5, r9
   1bec0:	b	1be28 <fputs@plt+0x97e4>
   1bec4:	bl	12434 <__stack_chk_fail@plt>
   1bec8:	andeq	r3, r1, ip, lsl r3
   1becc:	andeq	r0, r0, ip, lsr r2
   1bed0:	andeq	r2, r0, ip, lsl #21
   1bed4:	andeq	r2, r0, r4, lsl #21
   1bed8:	lsl	r0, r0, #2
   1bedc:	add	r0, r0, #1
   1bee0:	bx	lr
   1bee4:	push	{r4, r5, r6, lr}
   1bee8:	subs	r4, r0, #0
   1beec:	mov	r6, r1
   1bef0:	beq	1bf38 <fputs@plt+0x98f4>
   1bef4:	bl	1226c <strlen@plt>
   1bef8:	subs	r3, r0, #0
   1befc:	beq	1bf38 <fputs@plt+0x98f4>
   1bf00:	bl	1bed8 <fputs@plt+0x9894>
   1bf04:	bl	1241c <malloc@plt>
   1bf08:	subs	r5, r0, #0
   1bf0c:	beq	1bf30 <fputs@plt+0x98ec>
   1bf10:	mov	r0, r4
   1bf14:	mov	r1, r6
   1bf18:	mov	r2, r5
   1bf1c:	mov	r3, #0
   1bf20:	bl	1ba18 <fputs@plt+0x93d4>
   1bf24:	cmp	r0, #0
   1bf28:	beq	1bf30 <fputs@plt+0x98ec>
   1bf2c:	pop	{r4, r5, r6, pc}
   1bf30:	mov	r0, r5
   1bf34:	bl	121b8 <free@plt>
   1bf38:	mov	r0, #0
   1bf3c:	pop	{r4, r5, r6, pc}
   1bf40:	push	{r4, r5, r6, lr}
   1bf44:	subs	r4, r0, #0
   1bf48:	mov	r6, r1
   1bf4c:	beq	1bf90 <fputs@plt+0x994c>
   1bf50:	bl	1226c <strlen@plt>
   1bf54:	subs	r3, r0, #0
   1bf58:	beq	1bf90 <fputs@plt+0x994c>
   1bf5c:	bl	1bed8 <fputs@plt+0x9894>
   1bf60:	bl	1241c <malloc@plt>
   1bf64:	subs	r5, r0, #0
   1bf68:	beq	1bf88 <fputs@plt+0x9944>
   1bf6c:	mov	r0, r4
   1bf70:	mov	r1, r6
   1bf74:	mov	r2, r5
   1bf78:	bl	1bcd4 <fputs@plt+0x9690>
   1bf7c:	cmp	r0, #0
   1bf80:	beq	1bf88 <fputs@plt+0x9944>
   1bf84:	pop	{r4, r5, r6, pc}
   1bf88:	mov	r0, r5
   1bf8c:	bl	121b8 <free@plt>
   1bf90:	mov	r0, #0
   1bf94:	pop	{r4, r5, r6, pc}
   1bf98:	push	{r4, r5, r6, r7, r8, lr}
   1bf9c:	mov	r8, r1
   1bfa0:	mov	r5, r0
   1bfa4:	bl	1226c <strlen@plt>
   1bfa8:	mov	r1, r5
   1bfac:	mov	r4, r0
   1bfb0:	mov	r0, #0
   1bfb4:	mov	r2, r0
   1bfb8:	bl	12260 <mbstowcs@plt>
   1bfbc:	cmn	r0, #1
   1bfc0:	mov	r6, r0
   1bfc4:	moveq	r7, #0
   1bfc8:	beq	1bff8 <fputs@plt+0x99b4>
   1bfcc:	add	r1, r0, #1
   1bfd0:	mov	r0, #1
   1bfd4:	lsl	r1, r1, #2
   1bfd8:	bl	120ec <calloc@plt>
   1bfdc:	subs	r7, r0, #0
   1bfe0:	beq	1bff8 <fputs@plt+0x99b4>
   1bfe4:	mov	r2, r6
   1bfe8:	mov	r1, r5
   1bfec:	bl	12260 <mbstowcs@plt>
   1bff0:	cmp	r0, #0
   1bff4:	bne	1c014 <fputs@plt+0x99d0>
   1bff8:	mov	r0, r7
   1bffc:	bl	121b8 <free@plt>
   1c000:	cmp	r4, #0
   1c004:	mov	r0, r4
   1c008:	movge	r3, #0
   1c00c:	strbge	r3, [r5, r4]
   1c010:	pop	{r4, r5, r6, r7, r8, pc}
   1c014:	ldr	r1, [r8]
   1c018:	mov	r0, r7
   1c01c:	bl	1b790 <fputs@plt+0x914c>
   1c020:	mov	r2, r4
   1c024:	mov	r1, r7
   1c028:	str	r0, [r8]
   1c02c:	mov	r0, r5
   1c030:	bl	124d0 <wcstombs@plt>
   1c034:	mov	r4, r0
   1c038:	b	1bff8 <fputs@plt+0x99b4>
   1c03c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c040:	sub	sp, sp, #12
   1c044:	mov	r8, r1
   1c048:	mov	r9, r2
   1c04c:	mov	r6, r3
   1c050:	str	r0, [sp]
   1c054:	bl	1226c <strlen@plt>
   1c058:	mov	r7, r0
   1c05c:	bl	12068 <__ctype_get_mb_cur_max@plt>
   1c060:	cmp	r0, #1
   1c064:	bls	1c1f8 <fputs@plt+0x9bb4>
   1c068:	mov	r0, #0
   1c06c:	ldr	r1, [sp]
   1c070:	mov	r2, r0
   1c074:	bl	12260 <mbstowcs@plt>
   1c078:	cmn	r0, #1
   1c07c:	mov	r4, r0
   1c080:	beq	1c1dc <fputs@plt+0x9b98>
   1c084:	add	fp, r0, #1
   1c088:	lsl	sl, fp, #2
   1c08c:	mov	r0, sl
   1c090:	bl	1241c <malloc@plt>
   1c094:	subs	r5, r0, #0
   1c098:	beq	1c378 <fputs@plt+0x9d34>
   1c09c:	mov	r2, fp
   1c0a0:	ldr	r1, [sp]
   1c0a4:	bl	12260 <mbstowcs@plt>
   1c0a8:	cmp	r0, #0
   1c0ac:	bne	1c240 <fputs@plt+0x9bfc>
   1c0b0:	mov	sl, r7
   1c0b4:	mov	fp, #0
   1c0b8:	ldr	r2, [r6]
   1c0bc:	cmp	sl, r2
   1c0c0:	movhi	sl, r2
   1c0c4:	movhi	r3, #0
   1c0c8:	bls	1c214 <fputs@plt+0x9bd0>
   1c0cc:	cmp	r9, #0
   1c0d0:	str	sl, [r6]
   1c0d4:	add	r6, r2, r3
   1c0d8:	beq	1c1c0 <fputs@plt+0x9b7c>
   1c0dc:	ldr	r1, [sp, #48]	; 0x30
   1c0e0:	sub	r9, r9, #1
   1c0e4:	add	r9, r8, r9
   1c0e8:	cmp	r1, #1
   1c0ec:	beq	1c348 <fputs@plt+0x9d04>
   1c0f0:	bcc	1c338 <fputs@plt+0x9cf4>
   1c0f4:	cmp	r1, #2
   1c0f8:	bne	1c22c <fputs@plt+0x9be8>
   1c0fc:	lsr	r4, r3, #1
   1c100:	and	r3, r3, #1
   1c104:	adds	r3, r3, r4
   1c108:	moveq	r1, #0
   1c10c:	movne	r1, #1
   1c110:	adds	r7, r4, #0
   1c114:	movne	r7, #1
   1c118:	cmp	r8, r9
   1c11c:	movcs	r1, #0
   1c120:	andcc	r1, r1, #1
   1c124:	cmp	r1, #0
   1c128:	beq	1c158 <fputs@plt+0x9b14>
   1c12c:	ldr	r1, [sp, #56]	; 0x38
   1c130:	uxtb	r0, r1
   1c134:	subs	r3, r3, #1
   1c138:	strb	r0, [r8], #1
   1c13c:	moveq	r1, #0
   1c140:	movne	r1, #1
   1c144:	cmp	r9, r8
   1c148:	movls	r1, #0
   1c14c:	andhi	r1, r1, #1
   1c150:	cmp	r1, #0
   1c154:	bne	1c134 <fputs@plt+0x9af0>
   1c158:	rsb	r3, r8, r9
   1c15c:	ldr	r1, [sp]
   1c160:	cmp	r3, r2
   1c164:	movcc	r2, r3
   1c168:	mov	r0, r8
   1c16c:	mov	r3, #0
   1c170:	strb	r3, [r8]
   1c174:	bl	12254 <mempcpy@plt>
   1c178:	cmp	r9, r0
   1c17c:	movls	r7, #0
   1c180:	andhi	r7, r7, #1
   1c184:	cmp	r7, #0
   1c188:	beq	1c1b8 <fputs@plt+0x9b74>
   1c18c:	ldr	r3, [sp, #56]	; 0x38
   1c190:	uxtb	r1, r3
   1c194:	subs	r4, r4, #1
   1c198:	strb	r1, [r0], #1
   1c19c:	moveq	r2, #0
   1c1a0:	movne	r2, #1
   1c1a4:	cmp	r9, r0
   1c1a8:	movls	r2, #0
   1c1ac:	andhi	r2, r2, #1
   1c1b0:	cmp	r2, #0
   1c1b4:	bne	1c194 <fputs@plt+0x9b50>
   1c1b8:	mov	r2, #0
   1c1bc:	strb	r2, [r0]
   1c1c0:	mov	r0, r5
   1c1c4:	bl	121b8 <free@plt>
   1c1c8:	mov	r0, fp
   1c1cc:	bl	121b8 <free@plt>
   1c1d0:	mov	r0, r6
   1c1d4:	add	sp, sp, #12
   1c1d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1dc:	ldr	r1, [sp, #52]	; 0x34
   1c1e0:	tst	r1, #1
   1c1e4:	bne	1c230 <fputs@plt+0x9bec>
   1c1e8:	mov	r5, #0
   1c1ec:	mvn	r6, #0
   1c1f0:	mov	fp, r5
   1c1f4:	b	1c1c0 <fputs@plt+0x9b7c>
   1c1f8:	mov	r5, #0
   1c1fc:	b	1c0b0 <fputs@plt+0x9a6c>
   1c200:	ldr	r2, [r6]
   1c204:	cmp	r2, sl
   1c208:	addcc	r4, r7, #1
   1c20c:	bcc	1c2fc <fputs@plt+0x9cb8>
   1c210:	ldr	fp, [sp, #4]
   1c214:	cmp	r2, sl
   1c218:	rsbhi	r3, sl, r2
   1c21c:	movls	r2, r7
   1c220:	movls	r3, #0
   1c224:	movhi	r2, r7
   1c228:	b	1c0cc <fputs@plt+0x9a88>
   1c22c:	bl	12008 <abort@plt>
   1c230:	mov	r5, #0
   1c234:	mov	sl, r7
   1c238:	mov	fp, r5
   1c23c:	b	1c0b8 <fputs@plt+0x9a74>
   1c240:	add	sl, r5, sl
   1c244:	mov	r3, #0
   1c248:	str	r3, [sl, #-4]
   1c24c:	ldr	r0, [r5]
   1c250:	cmp	r0, r3
   1c254:	beq	1c3a0 <fputs@plt+0x9d5c>
   1c258:	add	fp, r5, #4
   1c25c:	movw	sl, #65533	; 0xfffd
   1c260:	str	r3, [sp, #4]
   1c264:	bl	12584 <iswprint@plt>
   1c268:	cmp	r0, #0
   1c26c:	streq	sl, [fp, #-4]
   1c270:	ldr	r0, [fp], #4
   1c274:	moveq	r1, #1
   1c278:	streq	r1, [sp, #4]
   1c27c:	cmp	r0, #0
   1c280:	bne	1c264 <fputs@plt+0x9c20>
   1c284:	ldr	r0, [r5]
   1c288:	cmp	r0, #0
   1c28c:	beq	1c2d8 <fputs@plt+0x9c94>
   1c290:	mov	sl, r5
   1c294:	mov	fp, #0
   1c298:	b	1c2cc <fputs@plt+0x9c88>
   1c29c:	movw	r3, #65535	; 0xffff
   1c2a0:	movt	r3, #32767	; 0x7fff
   1c2a4:	rsb	r3, r0, r3
   1c2a8:	cmp	r3, fp
   1c2ac:	blt	1c398 <fputs@plt+0x9d54>
   1c2b0:	sub	r4, r4, #1
   1c2b4:	add	fp, fp, r0
   1c2b8:	cmn	r4, #1
   1c2bc:	beq	1c390 <fputs@plt+0x9d4c>
   1c2c0:	ldr	r0, [sl, #4]!
   1c2c4:	cmp	r0, #0
   1c2c8:	beq	1c390 <fputs@plt+0x9d4c>
   1c2cc:	bl	12560 <wcwidth@plt>
   1c2d0:	cmn	r0, #1
   1c2d4:	bne	1c29c <fputs@plt+0x9c58>
   1c2d8:	mov	sl, r0
   1c2dc:	ldr	r3, [sp, #4]
   1c2e0:	cmp	r3, #0
   1c2e4:	beq	1c200 <fputs@plt+0x9bbc>
   1c2e8:	mov	r0, #0
   1c2ec:	mov	r1, r5
   1c2f0:	mov	r2, r0
   1c2f4:	bl	124d0 <wcstombs@plt>
   1c2f8:	add	r4, r0, #1
   1c2fc:	mov	r0, r4
   1c300:	bl	1241c <malloc@plt>
   1c304:	subs	fp, r0, #0
   1c308:	beq	1c364 <fputs@plt+0x9d20>
   1c30c:	ldr	r1, [r6]
   1c310:	mov	r0, r5
   1c314:	bl	1b790 <fputs@plt+0x914c>
   1c318:	mov	r1, r5
   1c31c:	mov	r2, r4
   1c320:	mov	sl, r0
   1c324:	mov	r0, fp
   1c328:	bl	124d0 <wcstombs@plt>
   1c32c:	str	fp, [sp]
   1c330:	mov	r7, r0
   1c334:	b	1c0b8 <fputs@plt+0x9a74>
   1c338:	adds	r7, r3, #0
   1c33c:	mov	r4, r3
   1c340:	movne	r7, #1
   1c344:	b	1c158 <fputs@plt+0x9b14>
   1c348:	mov	r7, #0
   1c34c:	cmp	r3, r7
   1c350:	cmpne	r8, r9
   1c354:	mov	r4, r7
   1c358:	movcs	r1, #0
   1c35c:	movcc	r1, #1
   1c360:	b	1c124 <fputs@plt+0x9ae0>
   1c364:	ldr	r1, [sp, #52]	; 0x34
   1c368:	tst	r1, #1
   1c36c:	mvneq	r6, #0
   1c370:	beq	1c1c0 <fputs@plt+0x9b7c>
   1c374:	b	1c0b8 <fputs@plt+0x9a74>
   1c378:	ldr	r3, [sp, #52]	; 0x34
   1c37c:	tst	r3, #1
   1c380:	beq	1c1e8 <fputs@plt+0x9ba4>
   1c384:	mov	sl, r7
   1c388:	mov	fp, r5
   1c38c:	b	1c0b8 <fputs@plt+0x9a74>
   1c390:	mov	sl, fp
   1c394:	b	1c2dc <fputs@plt+0x9c98>
   1c398:	mvn	sl, #0
   1c39c:	b	1c2dc <fputs@plt+0x9c98>
   1c3a0:	str	r0, [sp, #4]
   1c3a4:	b	1c284 <fputs@plt+0x9c40>
   1c3a8:	push	{r4, lr}
   1c3ac:	sub	sp, sp, #16
   1c3b0:	mov	r4, #32
   1c3b4:	ldr	lr, [sp, #24]
   1c3b8:	ldr	ip, [sp, #28]
   1c3bc:	str	r4, [sp, #8]
   1c3c0:	str	lr, [sp]
   1c3c4:	str	ip, [sp, #4]
   1c3c8:	bl	1c03c <fputs@plt+0x99f8>
   1c3cc:	add	sp, sp, #16
   1c3d0:	pop	{r4, pc}
   1c3d4:	subs	r2, r1, #1
   1c3d8:	bxeq	lr
   1c3dc:	bcc	1c5b4 <fputs@plt+0x9f70>
   1c3e0:	cmp	r0, r1
   1c3e4:	bls	1c598 <fputs@plt+0x9f54>
   1c3e8:	tst	r1, r2
   1c3ec:	beq	1c5a4 <fputs@plt+0x9f60>
   1c3f0:	clz	r3, r0
   1c3f4:	clz	r2, r1
   1c3f8:	sub	r3, r2, r3
   1c3fc:	rsbs	r3, r3, #31
   1c400:	addne	r3, r3, r3, lsl #1
   1c404:	mov	r2, #0
   1c408:	addne	pc, pc, r3, lsl #2
   1c40c:	nop	{0}
   1c410:	cmp	r0, r1, lsl #31
   1c414:	adc	r2, r2, r2
   1c418:	subcs	r0, r0, r1, lsl #31
   1c41c:	cmp	r0, r1, lsl #30
   1c420:	adc	r2, r2, r2
   1c424:	subcs	r0, r0, r1, lsl #30
   1c428:	cmp	r0, r1, lsl #29
   1c42c:	adc	r2, r2, r2
   1c430:	subcs	r0, r0, r1, lsl #29
   1c434:	cmp	r0, r1, lsl #28
   1c438:	adc	r2, r2, r2
   1c43c:	subcs	r0, r0, r1, lsl #28
   1c440:	cmp	r0, r1, lsl #27
   1c444:	adc	r2, r2, r2
   1c448:	subcs	r0, r0, r1, lsl #27
   1c44c:	cmp	r0, r1, lsl #26
   1c450:	adc	r2, r2, r2
   1c454:	subcs	r0, r0, r1, lsl #26
   1c458:	cmp	r0, r1, lsl #25
   1c45c:	adc	r2, r2, r2
   1c460:	subcs	r0, r0, r1, lsl #25
   1c464:	cmp	r0, r1, lsl #24
   1c468:	adc	r2, r2, r2
   1c46c:	subcs	r0, r0, r1, lsl #24
   1c470:	cmp	r0, r1, lsl #23
   1c474:	adc	r2, r2, r2
   1c478:	subcs	r0, r0, r1, lsl #23
   1c47c:	cmp	r0, r1, lsl #22
   1c480:	adc	r2, r2, r2
   1c484:	subcs	r0, r0, r1, lsl #22
   1c488:	cmp	r0, r1, lsl #21
   1c48c:	adc	r2, r2, r2
   1c490:	subcs	r0, r0, r1, lsl #21
   1c494:	cmp	r0, r1, lsl #20
   1c498:	adc	r2, r2, r2
   1c49c:	subcs	r0, r0, r1, lsl #20
   1c4a0:	cmp	r0, r1, lsl #19
   1c4a4:	adc	r2, r2, r2
   1c4a8:	subcs	r0, r0, r1, lsl #19
   1c4ac:	cmp	r0, r1, lsl #18
   1c4b0:	adc	r2, r2, r2
   1c4b4:	subcs	r0, r0, r1, lsl #18
   1c4b8:	cmp	r0, r1, lsl #17
   1c4bc:	adc	r2, r2, r2
   1c4c0:	subcs	r0, r0, r1, lsl #17
   1c4c4:	cmp	r0, r1, lsl #16
   1c4c8:	adc	r2, r2, r2
   1c4cc:	subcs	r0, r0, r1, lsl #16
   1c4d0:	cmp	r0, r1, lsl #15
   1c4d4:	adc	r2, r2, r2
   1c4d8:	subcs	r0, r0, r1, lsl #15
   1c4dc:	cmp	r0, r1, lsl #14
   1c4e0:	adc	r2, r2, r2
   1c4e4:	subcs	r0, r0, r1, lsl #14
   1c4e8:	cmp	r0, r1, lsl #13
   1c4ec:	adc	r2, r2, r2
   1c4f0:	subcs	r0, r0, r1, lsl #13
   1c4f4:	cmp	r0, r1, lsl #12
   1c4f8:	adc	r2, r2, r2
   1c4fc:	subcs	r0, r0, r1, lsl #12
   1c500:	cmp	r0, r1, lsl #11
   1c504:	adc	r2, r2, r2
   1c508:	subcs	r0, r0, r1, lsl #11
   1c50c:	cmp	r0, r1, lsl #10
   1c510:	adc	r2, r2, r2
   1c514:	subcs	r0, r0, r1, lsl #10
   1c518:	cmp	r0, r1, lsl #9
   1c51c:	adc	r2, r2, r2
   1c520:	subcs	r0, r0, r1, lsl #9
   1c524:	cmp	r0, r1, lsl #8
   1c528:	adc	r2, r2, r2
   1c52c:	subcs	r0, r0, r1, lsl #8
   1c530:	cmp	r0, r1, lsl #7
   1c534:	adc	r2, r2, r2
   1c538:	subcs	r0, r0, r1, lsl #7
   1c53c:	cmp	r0, r1, lsl #6
   1c540:	adc	r2, r2, r2
   1c544:	subcs	r0, r0, r1, lsl #6
   1c548:	cmp	r0, r1, lsl #5
   1c54c:	adc	r2, r2, r2
   1c550:	subcs	r0, r0, r1, lsl #5
   1c554:	cmp	r0, r1, lsl #4
   1c558:	adc	r2, r2, r2
   1c55c:	subcs	r0, r0, r1, lsl #4
   1c560:	cmp	r0, r1, lsl #3
   1c564:	adc	r2, r2, r2
   1c568:	subcs	r0, r0, r1, lsl #3
   1c56c:	cmp	r0, r1, lsl #2
   1c570:	adc	r2, r2, r2
   1c574:	subcs	r0, r0, r1, lsl #2
   1c578:	cmp	r0, r1, lsl #1
   1c57c:	adc	r2, r2, r2
   1c580:	subcs	r0, r0, r1, lsl #1
   1c584:	cmp	r0, r1
   1c588:	adc	r2, r2, r2
   1c58c:	subcs	r0, r0, r1
   1c590:	mov	r0, r2
   1c594:	bx	lr
   1c598:	moveq	r0, #1
   1c59c:	movne	r0, #0
   1c5a0:	bx	lr
   1c5a4:	clz	r2, r1
   1c5a8:	rsb	r2, r2, #31
   1c5ac:	lsr	r0, r0, r2
   1c5b0:	bx	lr
   1c5b4:	cmp	r0, #0
   1c5b8:	mvnne	r0, #0
   1c5bc:	b	1c61c <fputs@plt+0x9fd8>
   1c5c0:	cmp	r1, #0
   1c5c4:	beq	1c5b4 <fputs@plt+0x9f70>
   1c5c8:	push	{r0, r1, lr}
   1c5cc:	bl	1c3d4 <fputs@plt+0x9d90>
   1c5d0:	pop	{r1, r2, lr}
   1c5d4:	mul	r3, r2, r0
   1c5d8:	sub	r1, r1, r3
   1c5dc:	bx	lr
   1c5e0:	cmp	r3, #0
   1c5e4:	cmpeq	r2, #0
   1c5e8:	bne	1c600 <fputs@plt+0x9fbc>
   1c5ec:	cmp	r1, #0
   1c5f0:	cmpeq	r0, #0
   1c5f4:	mvnne	r1, #0
   1c5f8:	mvnne	r0, #0
   1c5fc:	b	1c61c <fputs@plt+0x9fd8>
   1c600:	sub	sp, sp, #8
   1c604:	push	{sp, lr}
   1c608:	bl	1c668 <fputs@plt+0xa024>
   1c60c:	ldr	lr, [sp, #4]
   1c610:	add	sp, sp, #8
   1c614:	pop	{r2, r3}
   1c618:	bx	lr
   1c61c:	push	{r1, lr}
   1c620:	mov	r0, #8
   1c624:	bl	1232c <raise@plt>
   1c628:	pop	{r1, pc}
   1c62c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c630:	mov	r8, r2
   1c634:	mov	r6, r0
   1c638:	mov	r7, r1
   1c63c:	mov	sl, r3
   1c640:	ldr	r9, [sp, #32]
   1c644:	bl	1c6a4 <fputs@plt+0xa060>
   1c648:	umull	r4, r5, r8, r0
   1c64c:	mul	r8, r8, r1
   1c650:	mla	r2, r0, sl, r8
   1c654:	add	r5, r2, r5
   1c658:	subs	r4, r6, r4
   1c65c:	sbc	r5, r7, r5
   1c660:	strd	r4, [r9]
   1c664:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c668:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1c66c:	mov	r8, r2
   1c670:	mov	r6, r0
   1c674:	mov	r7, r1
   1c678:	mov	r5, r3
   1c67c:	ldr	r9, [sp, #32]
   1c680:	bl	1cb30 <fputs@plt+0xa4ec>
   1c684:	mul	r3, r0, r5
   1c688:	umull	r4, r5, r0, r8
   1c68c:	mla	r8, r8, r1, r3
   1c690:	add	r5, r8, r5
   1c694:	subs	r4, r6, r4
   1c698:	sbc	r5, r7, r5
   1c69c:	strd	r4, [r9]
   1c6a0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1c6a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c6a8:	rsbs	r4, r0, #0
   1c6ac:	rsc	r5, r1, #0
   1c6b0:	cmp	r1, #0
   1c6b4:	mvn	r6, #0
   1c6b8:	sub	sp, sp, #12
   1c6bc:	movge	r4, r0
   1c6c0:	movge	r5, r1
   1c6c4:	movge	r6, #0
   1c6c8:	cmp	r3, #0
   1c6cc:	blt	1c904 <fputs@plt+0xa2c0>
   1c6d0:	cmp	r3, #0
   1c6d4:	mov	sl, r4
   1c6d8:	mov	ip, r5
   1c6dc:	mov	r0, r2
   1c6e0:	mov	r1, r3
   1c6e4:	mov	r8, r2
   1c6e8:	mov	r7, r4
   1c6ec:	mov	r9, r5
   1c6f0:	bne	1c7e8 <fputs@plt+0xa1a4>
   1c6f4:	cmp	r2, r5
   1c6f8:	bls	1c824 <fputs@plt+0xa1e0>
   1c6fc:	clz	r3, r2
   1c700:	cmp	r3, #0
   1c704:	rsbne	r2, r3, #32
   1c708:	lslne	r8, r0, r3
   1c70c:	lsrne	r2, r4, r2
   1c710:	lslne	r7, r4, r3
   1c714:	orrne	r9, r2, r5, lsl r3
   1c718:	lsr	r4, r8, #16
   1c71c:	uxth	sl, r8
   1c720:	mov	r1, r4
   1c724:	mov	r0, r9
   1c728:	bl	1c3d4 <fputs@plt+0x9d90>
   1c72c:	mov	r1, r4
   1c730:	mov	fp, r0
   1c734:	mov	r0, r9
   1c738:	bl	1c5c0 <fputs@plt+0x9f7c>
   1c73c:	mul	r0, sl, fp
   1c740:	lsr	r2, r7, #16
   1c744:	orr	r1, r2, r1, lsl #16
   1c748:	cmp	r0, r1
   1c74c:	bls	1c770 <fputs@plt+0xa12c>
   1c750:	adds	r1, r1, r8
   1c754:	sub	r3, fp, #1
   1c758:	bcs	1c76c <fputs@plt+0xa128>
   1c75c:	cmp	r0, r1
   1c760:	subhi	fp, fp, #2
   1c764:	addhi	r1, r1, r8
   1c768:	bhi	1c770 <fputs@plt+0xa12c>
   1c76c:	mov	fp, r3
   1c770:	rsb	r9, r0, r1
   1c774:	mov	r1, r4
   1c778:	uxth	r7, r7
   1c77c:	mov	r0, r9
   1c780:	bl	1c3d4 <fputs@plt+0x9d90>
   1c784:	mov	r1, r4
   1c788:	mov	r5, r0
   1c78c:	mov	r0, r9
   1c790:	bl	1c5c0 <fputs@plt+0x9f7c>
   1c794:	mul	sl, sl, r5
   1c798:	orr	r1, r7, r1, lsl #16
   1c79c:	cmp	sl, r1
   1c7a0:	bls	1c7c0 <fputs@plt+0xa17c>
   1c7a4:	adds	r8, r1, r8
   1c7a8:	sub	r3, r5, #1
   1c7ac:	bcs	1c7bc <fputs@plt+0xa178>
   1c7b0:	cmp	sl, r8
   1c7b4:	subhi	r5, r5, #2
   1c7b8:	bhi	1c7c0 <fputs@plt+0xa17c>
   1c7bc:	mov	r5, r3
   1c7c0:	orr	r3, r5, fp, lsl #16
   1c7c4:	mov	r4, #0
   1c7c8:	cmp	r6, #0
   1c7cc:	mov	r0, r3
   1c7d0:	mov	r1, r4
   1c7d4:	beq	1c7e0 <fputs@plt+0xa19c>
   1c7d8:	rsbs	r0, r0, #0
   1c7dc:	rsc	r1, r1, #0
   1c7e0:	add	sp, sp, #12
   1c7e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c7e8:	cmp	r3, r5
   1c7ec:	movhi	r4, #0
   1c7f0:	movhi	r3, r4
   1c7f4:	bhi	1c7c8 <fputs@plt+0xa184>
   1c7f8:	clz	r5, r1
   1c7fc:	cmp	r5, #0
   1c800:	bne	1c9f0 <fputs@plt+0xa3ac>
   1c804:	cmp	r1, ip
   1c808:	cmpcs	r2, sl
   1c80c:	movhi	r4, #0
   1c810:	movls	r4, #1
   1c814:	movls	r3, #1
   1c818:	movls	r4, r5
   1c81c:	movhi	r3, r4
   1c820:	b	1c7c8 <fputs@plt+0xa184>
   1c824:	cmp	r2, #0
   1c828:	bne	1c83c <fputs@plt+0xa1f8>
   1c82c:	mov	r1, r2
   1c830:	mov	r0, #1
   1c834:	bl	1c3d4 <fputs@plt+0x9d90>
   1c838:	mov	r8, r0
   1c83c:	clz	r3, r8
   1c840:	cmp	r3, #0
   1c844:	bne	1c914 <fputs@plt+0xa2d0>
   1c848:	rsb	r9, r8, r9
   1c84c:	lsr	r5, r8, #16
   1c850:	uxth	sl, r8
   1c854:	mov	r4, #1
   1c858:	mov	r1, r5
   1c85c:	mov	r0, r9
   1c860:	bl	1c3d4 <fputs@plt+0x9d90>
   1c864:	mov	r1, r5
   1c868:	mov	fp, r0
   1c86c:	mov	r0, r9
   1c870:	bl	1c5c0 <fputs@plt+0x9f7c>
   1c874:	mul	r0, sl, fp
   1c878:	lsr	r2, r7, #16
   1c87c:	orr	r1, r2, r1, lsl #16
   1c880:	cmp	r0, r1
   1c884:	bls	1c8a4 <fputs@plt+0xa260>
   1c888:	adds	r1, r1, r8
   1c88c:	sub	r3, fp, #1
   1c890:	bcs	1cb10 <fputs@plt+0xa4cc>
   1c894:	cmp	r0, r1
   1c898:	subhi	fp, fp, #2
   1c89c:	addhi	r1, r1, r8
   1c8a0:	bls	1cb10 <fputs@plt+0xa4cc>
   1c8a4:	rsb	r2, r0, r1
   1c8a8:	mov	r1, r5
   1c8ac:	str	r2, [sp]
   1c8b0:	uxth	r7, r7
   1c8b4:	mov	r0, r2
   1c8b8:	bl	1c3d4 <fputs@plt+0x9d90>
   1c8bc:	ldr	r2, [sp]
   1c8c0:	mov	r1, r5
   1c8c4:	mov	r9, r0
   1c8c8:	mov	r0, r2
   1c8cc:	bl	1c5c0 <fputs@plt+0x9f7c>
   1c8d0:	mul	sl, sl, r9
   1c8d4:	orr	r1, r7, r1, lsl #16
   1c8d8:	cmp	sl, r1
   1c8dc:	bls	1c8fc <fputs@plt+0xa2b8>
   1c8e0:	adds	r8, r1, r8
   1c8e4:	sub	r3, r9, #1
   1c8e8:	bcs	1c8f8 <fputs@plt+0xa2b4>
   1c8ec:	cmp	sl, r8
   1c8f0:	subhi	r9, r9, #2
   1c8f4:	bhi	1c8fc <fputs@plt+0xa2b8>
   1c8f8:	mov	r9, r3
   1c8fc:	orr	r3, r9, fp, lsl #16
   1c900:	b	1c7c8 <fputs@plt+0xa184>
   1c904:	mvn	r6, r6
   1c908:	rsbs	r2, r2, #0
   1c90c:	rsc	r3, r3, #0
   1c910:	b	1c6d0 <fputs@plt+0xa08c>
   1c914:	lsl	r8, r8, r3
   1c918:	rsb	fp, r3, #32
   1c91c:	lsr	r4, r9, fp
   1c920:	lsr	fp, r7, fp
   1c924:	lsr	r5, r8, #16
   1c928:	orr	fp, fp, r9, lsl r3
   1c92c:	mov	r0, r4
   1c930:	lsl	r7, r7, r3
   1c934:	mov	r1, r5
   1c938:	uxth	sl, r8
   1c93c:	bl	1c3d4 <fputs@plt+0x9d90>
   1c940:	mov	r1, r5
   1c944:	mov	r3, r0
   1c948:	mov	r0, r4
   1c94c:	str	r3, [sp]
   1c950:	bl	1c5c0 <fputs@plt+0x9f7c>
   1c954:	ldr	r3, [sp]
   1c958:	lsr	r2, fp, #16
   1c95c:	mul	r0, sl, r3
   1c960:	orr	r1, r2, r1, lsl #16
   1c964:	cmp	r0, r1
   1c968:	bls	1c988 <fputs@plt+0xa344>
   1c96c:	adds	r1, r1, r8
   1c970:	sub	r2, r3, #1
   1c974:	bcs	1cb28 <fputs@plt+0xa4e4>
   1c978:	cmp	r0, r1
   1c97c:	subhi	r3, r3, #2
   1c980:	addhi	r1, r1, r8
   1c984:	bls	1cb28 <fputs@plt+0xa4e4>
   1c988:	rsb	r9, r0, r1
   1c98c:	mov	r1, r5
   1c990:	str	r3, [sp]
   1c994:	uxth	fp, fp
   1c998:	mov	r0, r9
   1c99c:	bl	1c3d4 <fputs@plt+0x9d90>
   1c9a0:	mov	r1, r5
   1c9a4:	mov	r4, r0
   1c9a8:	mov	r0, r9
   1c9ac:	bl	1c5c0 <fputs@plt+0x9f7c>
   1c9b0:	mul	r9, sl, r4
   1c9b4:	ldr	r3, [sp]
   1c9b8:	orr	r1, fp, r1, lsl #16
   1c9bc:	cmp	r9, r1
   1c9c0:	bls	1c9e4 <fputs@plt+0xa3a0>
   1c9c4:	adds	r1, r1, r8
   1c9c8:	sub	r2, r4, #1
   1c9cc:	bcs	1c9e0 <fputs@plt+0xa39c>
   1c9d0:	cmp	r9, r1
   1c9d4:	subhi	r4, r4, #2
   1c9d8:	addhi	r1, r1, r8
   1c9dc:	bhi	1c9e4 <fputs@plt+0xa3a0>
   1c9e0:	mov	r4, r2
   1c9e4:	rsb	r9, r9, r1
   1c9e8:	orr	r4, r4, r3, lsl #16
   1c9ec:	b	1c858 <fputs@plt+0xa214>
   1c9f0:	rsb	sl, r5, #32
   1c9f4:	lsl	r3, r2, r5
   1c9f8:	lsr	r0, r2, sl
   1c9fc:	lsr	r2, ip, sl
   1ca00:	orr	r4, r0, r1, lsl r5
   1ca04:	lsr	sl, r7, sl
   1ca08:	mov	r0, r2
   1ca0c:	orr	sl, sl, ip, lsl r5
   1ca10:	lsr	r9, r4, #16
   1ca14:	str	r3, [sp, #4]
   1ca18:	str	r2, [sp]
   1ca1c:	uxth	fp, r4
   1ca20:	mov	r1, r9
   1ca24:	bl	1c3d4 <fputs@plt+0x9d90>
   1ca28:	ldr	r2, [sp]
   1ca2c:	mov	r1, r9
   1ca30:	mov	r8, r0
   1ca34:	mov	r0, r2
   1ca38:	bl	1c5c0 <fputs@plt+0x9f7c>
   1ca3c:	mul	r0, fp, r8
   1ca40:	lsr	r2, sl, #16
   1ca44:	orr	r1, r2, r1, lsl #16
   1ca48:	cmp	r0, r1
   1ca4c:	bls	1ca6c <fputs@plt+0xa428>
   1ca50:	adds	r1, r1, r4
   1ca54:	sub	r2, r8, #1
   1ca58:	bcs	1cb20 <fputs@plt+0xa4dc>
   1ca5c:	cmp	r0, r1
   1ca60:	subhi	r8, r8, #2
   1ca64:	addhi	r1, r1, r4
   1ca68:	bls	1cb20 <fputs@plt+0xa4dc>
   1ca6c:	rsb	ip, r0, r1
   1ca70:	mov	r1, r9
   1ca74:	str	ip, [sp]
   1ca78:	mov	r0, ip
   1ca7c:	bl	1c3d4 <fputs@plt+0x9d90>
   1ca80:	ldr	ip, [sp]
   1ca84:	mov	r1, r9
   1ca88:	mov	r2, r0
   1ca8c:	mov	r0, ip
   1ca90:	str	r2, [sp]
   1ca94:	bl	1c5c0 <fputs@plt+0x9f7c>
   1ca98:	ldr	r2, [sp]
   1ca9c:	uxth	ip, sl
   1caa0:	mul	fp, fp, r2
   1caa4:	orr	ip, ip, r1, lsl #16
   1caa8:	cmp	fp, ip
   1caac:	bls	1cacc <fputs@plt+0xa488>
   1cab0:	adds	ip, ip, r4
   1cab4:	sub	r1, r2, #1
   1cab8:	bcs	1cb18 <fputs@plt+0xa4d4>
   1cabc:	cmp	fp, ip
   1cac0:	subhi	r2, r2, #2
   1cac4:	addhi	ip, ip, r4
   1cac8:	bls	1cb18 <fputs@plt+0xa4d4>
   1cacc:	ldr	r0, [sp, #4]
   1cad0:	orr	r1, r2, r8, lsl #16
   1cad4:	rsb	fp, fp, ip
   1cad8:	umull	r2, r3, r1, r0
   1cadc:	cmp	fp, r3
   1cae0:	bcc	1cb04 <fputs@plt+0xa4c0>
   1cae4:	movne	r4, #0
   1cae8:	moveq	r4, #1
   1caec:	cmp	r2, r7, lsl r5
   1caf0:	movls	r4, #0
   1caf4:	andhi	r4, r4, #1
   1caf8:	cmp	r4, #0
   1cafc:	moveq	r3, r1
   1cb00:	beq	1c7c8 <fputs@plt+0xa184>
   1cb04:	sub	r3, r1, #1
   1cb08:	mov	r4, #0
   1cb0c:	b	1c7c8 <fputs@plt+0xa184>
   1cb10:	mov	fp, r3
   1cb14:	b	1c8a4 <fputs@plt+0xa260>
   1cb18:	mov	r2, r1
   1cb1c:	b	1cacc <fputs@plt+0xa488>
   1cb20:	mov	r8, r2
   1cb24:	b	1ca6c <fputs@plt+0xa428>
   1cb28:	mov	r3, r2
   1cb2c:	b	1c988 <fputs@plt+0xa344>
   1cb30:	cmp	r3, #0
   1cb34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb38:	mov	r6, r0
   1cb3c:	sub	sp, sp, #12
   1cb40:	mov	r5, r1
   1cb44:	mov	r7, r0
   1cb48:	mov	r4, r2
   1cb4c:	mov	r8, r1
   1cb50:	bne	1cc30 <fputs@plt+0xa5ec>
   1cb54:	cmp	r2, r1
   1cb58:	bls	1cc6c <fputs@plt+0xa628>
   1cb5c:	clz	r3, r2
   1cb60:	cmp	r3, #0
   1cb64:	rsbne	r8, r3, #32
   1cb68:	lslne	r4, r2, r3
   1cb6c:	lsrne	r8, r0, r8
   1cb70:	lslne	r7, r0, r3
   1cb74:	orrne	r8, r8, r1, lsl r3
   1cb78:	lsr	r5, r4, #16
   1cb7c:	uxth	sl, r4
   1cb80:	mov	r1, r5
   1cb84:	mov	r0, r8
   1cb88:	bl	1c3d4 <fputs@plt+0x9d90>
   1cb8c:	mov	r1, r5
   1cb90:	mov	r9, r0
   1cb94:	mov	r0, r8
   1cb98:	bl	1c5c0 <fputs@plt+0x9f7c>
   1cb9c:	mul	r0, sl, r9
   1cba0:	lsr	r3, r7, #16
   1cba4:	orr	r1, r3, r1, lsl #16
   1cba8:	cmp	r0, r1
   1cbac:	bls	1cbd0 <fputs@plt+0xa58c>
   1cbb0:	adds	r1, r1, r4
   1cbb4:	sub	r2, r9, #1
   1cbb8:	bcs	1cbcc <fputs@plt+0xa588>
   1cbbc:	cmp	r0, r1
   1cbc0:	subhi	r9, r9, #2
   1cbc4:	addhi	r1, r1, r4
   1cbc8:	bhi	1cbd0 <fputs@plt+0xa58c>
   1cbcc:	mov	r9, r2
   1cbd0:	rsb	r8, r0, r1
   1cbd4:	mov	r1, r5
   1cbd8:	uxth	r7, r7
   1cbdc:	mov	r0, r8
   1cbe0:	bl	1c3d4 <fputs@plt+0x9d90>
   1cbe4:	mov	r1, r5
   1cbe8:	mov	r6, r0
   1cbec:	mov	r0, r8
   1cbf0:	bl	1c5c0 <fputs@plt+0x9f7c>
   1cbf4:	mul	sl, sl, r6
   1cbf8:	orr	r1, r7, r1, lsl #16
   1cbfc:	cmp	sl, r1
   1cc00:	bls	1cc1c <fputs@plt+0xa5d8>
   1cc04:	adds	r4, r1, r4
   1cc08:	sub	r3, r6, #1
   1cc0c:	bcs	1cf18 <fputs@plt+0xa8d4>
   1cc10:	cmp	sl, r4
   1cc14:	subhi	r6, r6, #2
   1cc18:	bls	1cf18 <fputs@plt+0xa8d4>
   1cc1c:	orr	r0, r6, r9, lsl #16
   1cc20:	mov	r6, #0
   1cc24:	mov	r1, r6
   1cc28:	add	sp, sp, #12
   1cc2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc30:	cmp	r3, r1
   1cc34:	movhi	r6, #0
   1cc38:	movhi	r0, r6
   1cc3c:	bhi	1cc24 <fputs@plt+0xa5e0>
   1cc40:	clz	r7, r3
   1cc44:	cmp	r7, #0
   1cc48:	bne	1cd48 <fputs@plt+0xa704>
   1cc4c:	cmp	r3, r1
   1cc50:	cmpcs	r2, r6
   1cc54:	movhi	r6, #0
   1cc58:	movls	r6, #1
   1cc5c:	movls	r0, #1
   1cc60:	movls	r6, r7
   1cc64:	movhi	r0, r6
   1cc68:	b	1cc24 <fputs@plt+0xa5e0>
   1cc6c:	cmp	r2, #0
   1cc70:	bne	1cc84 <fputs@plt+0xa640>
   1cc74:	mov	r1, r2
   1cc78:	mov	r0, #1
   1cc7c:	bl	1c3d4 <fputs@plt+0x9d90>
   1cc80:	mov	r4, r0
   1cc84:	clz	r3, r4
   1cc88:	cmp	r3, #0
   1cc8c:	bne	1ce44 <fputs@plt+0xa800>
   1cc90:	rsb	r5, r4, r5
   1cc94:	lsr	r8, r4, #16
   1cc98:	uxth	sl, r4
   1cc9c:	mov	r6, #1
   1cca0:	mov	r1, r8
   1cca4:	mov	r0, r5
   1cca8:	bl	1c3d4 <fputs@plt+0x9d90>
   1ccac:	mov	r1, r8
   1ccb0:	mov	r9, r0
   1ccb4:	mov	r0, r5
   1ccb8:	bl	1c5c0 <fputs@plt+0x9f7c>
   1ccbc:	mul	r0, sl, r9
   1ccc0:	lsr	r3, r7, #16
   1ccc4:	orr	r1, r3, r1, lsl #16
   1ccc8:	cmp	r0, r1
   1cccc:	bls	1ccec <fputs@plt+0xa6a8>
   1ccd0:	adds	r1, r1, r4
   1ccd4:	sub	r2, r9, #1
   1ccd8:	bcs	1cf20 <fputs@plt+0xa8dc>
   1ccdc:	cmp	r0, r1
   1cce0:	subhi	r9, r9, #2
   1cce4:	addhi	r1, r1, r4
   1cce8:	bls	1cf20 <fputs@plt+0xa8dc>
   1ccec:	rsb	fp, r0, r1
   1ccf0:	mov	r1, r8
   1ccf4:	uxth	r7, r7
   1ccf8:	mov	r0, fp
   1ccfc:	bl	1c3d4 <fputs@plt+0x9d90>
   1cd00:	mov	r1, r8
   1cd04:	mov	r5, r0
   1cd08:	mov	r0, fp
   1cd0c:	bl	1c5c0 <fputs@plt+0x9f7c>
   1cd10:	mul	sl, sl, r5
   1cd14:	orr	r1, r7, r1, lsl #16
   1cd18:	cmp	sl, r1
   1cd1c:	bls	1cd38 <fputs@plt+0xa6f4>
   1cd20:	adds	r4, r1, r4
   1cd24:	sub	r3, r5, #1
   1cd28:	bcs	1cf28 <fputs@plt+0xa8e4>
   1cd2c:	cmp	sl, r4
   1cd30:	subhi	r5, r5, #2
   1cd34:	bls	1cf28 <fputs@plt+0xa8e4>
   1cd38:	orr	r0, r5, r9, lsl #16
   1cd3c:	mov	r1, r6
   1cd40:	add	sp, sp, #12
   1cd44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd48:	rsb	r1, r7, #32
   1cd4c:	lsl	r0, r2, r7
   1cd50:	lsr	r2, r2, r1
   1cd54:	lsr	fp, r5, r1
   1cd58:	orr	r8, r2, r3, lsl r7
   1cd5c:	lsr	r1, r6, r1
   1cd60:	str	r0, [sp, #4]
   1cd64:	orr	r5, r1, r5, lsl r7
   1cd68:	lsr	r9, r8, #16
   1cd6c:	mov	r0, fp
   1cd70:	uxth	sl, r8
   1cd74:	mov	r1, r9
   1cd78:	bl	1c3d4 <fputs@plt+0x9d90>
   1cd7c:	mov	r1, r9
   1cd80:	mov	r4, r0
   1cd84:	mov	r0, fp
   1cd88:	bl	1c5c0 <fputs@plt+0x9f7c>
   1cd8c:	mul	r0, sl, r4
   1cd90:	lsr	ip, r5, #16
   1cd94:	orr	r1, ip, r1, lsl #16
   1cd98:	cmp	r0, r1
   1cd9c:	bls	1cdb0 <fputs@plt+0xa76c>
   1cda0:	adds	r1, r1, r8
   1cda4:	sub	r2, r4, #1
   1cda8:	bcc	1cf44 <fputs@plt+0xa900>
   1cdac:	mov	r4, r2
   1cdb0:	rsb	ip, r0, r1
   1cdb4:	mov	r1, r9
   1cdb8:	str	ip, [sp]
   1cdbc:	uxth	r5, r5
   1cdc0:	mov	r0, ip
   1cdc4:	bl	1c3d4 <fputs@plt+0x9d90>
   1cdc8:	ldr	ip, [sp]
   1cdcc:	mov	r1, r9
   1cdd0:	mov	fp, r0
   1cdd4:	mov	r0, ip
   1cdd8:	bl	1c5c0 <fputs@plt+0x9f7c>
   1cddc:	mul	sl, sl, fp
   1cde0:	orr	r1, r5, r1, lsl #16
   1cde4:	cmp	sl, r1
   1cde8:	bls	1cdfc <fputs@plt+0xa7b8>
   1cdec:	adds	r1, r1, r8
   1cdf0:	sub	r2, fp, #1
   1cdf4:	bcc	1cf30 <fputs@plt+0xa8ec>
   1cdf8:	mov	fp, r2
   1cdfc:	ldr	r3, [sp, #4]
   1ce00:	orr	r0, fp, r4, lsl #16
   1ce04:	rsb	sl, sl, r1
   1ce08:	umull	r4, r5, r0, r3
   1ce0c:	cmp	sl, r5
   1ce10:	bcc	1ce30 <fputs@plt+0xa7ec>
   1ce14:	movne	r3, #0
   1ce18:	moveq	r3, #1
   1ce1c:	cmp	r4, r6, lsl r7
   1ce20:	movls	r6, #0
   1ce24:	andhi	r6, r3, #1
   1ce28:	cmp	r6, #0
   1ce2c:	beq	1cc24 <fputs@plt+0xa5e0>
   1ce30:	mov	r6, #0
   1ce34:	sub	r0, r0, #1
   1ce38:	mov	r1, r6
   1ce3c:	add	sp, sp, #12
   1ce40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce44:	lsl	r4, r4, r3
   1ce48:	rsb	r9, r3, #32
   1ce4c:	lsr	r2, r5, r9
   1ce50:	lsr	r9, r6, r9
   1ce54:	lsr	r8, r4, #16
   1ce58:	orr	r9, r9, r5, lsl r3
   1ce5c:	mov	r0, r2
   1ce60:	lsl	r7, r6, r3
   1ce64:	mov	r1, r8
   1ce68:	str	r2, [sp]
   1ce6c:	bl	1c3d4 <fputs@plt+0x9d90>
   1ce70:	ldr	r2, [sp]
   1ce74:	mov	r1, r8
   1ce78:	uxth	sl, r4
   1ce7c:	mov	fp, r0
   1ce80:	mov	r0, r2
   1ce84:	bl	1c5c0 <fputs@plt+0x9f7c>
   1ce88:	mul	r0, sl, fp
   1ce8c:	lsr	r3, r9, #16
   1ce90:	orr	r1, r3, r1, lsl #16
   1ce94:	cmp	r0, r1
   1ce98:	bls	1ceb8 <fputs@plt+0xa874>
   1ce9c:	adds	r1, r1, r4
   1cea0:	sub	r3, fp, #1
   1cea4:	bcs	1cf58 <fputs@plt+0xa914>
   1cea8:	cmp	r0, r1
   1ceac:	subhi	fp, fp, #2
   1ceb0:	addhi	r1, r1, r4
   1ceb4:	bls	1cf58 <fputs@plt+0xa914>
   1ceb8:	rsb	r5, r0, r1
   1cebc:	mov	r1, r8
   1cec0:	uxth	r9, r9
   1cec4:	mov	r0, r5
   1cec8:	bl	1c3d4 <fputs@plt+0x9d90>
   1cecc:	mov	r1, r8
   1ced0:	mov	r6, r0
   1ced4:	mov	r0, r5
   1ced8:	bl	1c5c0 <fputs@plt+0x9f7c>
   1cedc:	mul	r5, sl, r6
   1cee0:	orr	r1, r9, r1, lsl #16
   1cee4:	cmp	r5, r1
   1cee8:	bls	1cf0c <fputs@plt+0xa8c8>
   1ceec:	adds	r1, r1, r4
   1cef0:	sub	r3, r6, #1
   1cef4:	bcs	1cf08 <fputs@plt+0xa8c4>
   1cef8:	cmp	r5, r1
   1cefc:	subhi	r6, r6, #2
   1cf00:	addhi	r1, r1, r4
   1cf04:	bhi	1cf0c <fputs@plt+0xa8c8>
   1cf08:	mov	r6, r3
   1cf0c:	rsb	r5, r5, r1
   1cf10:	orr	r6, r6, fp, lsl #16
   1cf14:	b	1cca0 <fputs@plt+0xa65c>
   1cf18:	mov	r6, r3
   1cf1c:	b	1cc1c <fputs@plt+0xa5d8>
   1cf20:	mov	r9, r2
   1cf24:	b	1ccec <fputs@plt+0xa6a8>
   1cf28:	mov	r5, r3
   1cf2c:	b	1cd38 <fputs@plt+0xa6f4>
   1cf30:	cmp	sl, r1
   1cf34:	subhi	fp, fp, #2
   1cf38:	addhi	r1, r1, r8
   1cf3c:	bhi	1cdfc <fputs@plt+0xa7b8>
   1cf40:	b	1cdf8 <fputs@plt+0xa7b4>
   1cf44:	cmp	r0, r1
   1cf48:	subhi	r4, r4, #2
   1cf4c:	addhi	r1, r1, r8
   1cf50:	bhi	1cdb0 <fputs@plt+0xa76c>
   1cf54:	b	1cdac <fputs@plt+0xa768>
   1cf58:	mov	fp, r3
   1cf5c:	b	1ceb8 <fputs@plt+0xa874>
   1cf60:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1cf64:	mov	r7, r0
   1cf68:	ldr	r6, [pc, #76]	; 1cfbc <fputs@plt+0xa978>
   1cf6c:	mov	r8, r1
   1cf70:	ldr	r5, [pc, #72]	; 1cfc0 <fputs@plt+0xa97c>
   1cf74:	mov	r9, r2
   1cf78:	add	r6, pc, r6
   1cf7c:	bl	11fb8 <_init@@Base>
   1cf80:	add	r5, pc, r5
   1cf84:	rsb	r6, r5, r6
   1cf88:	asrs	r6, r6, #2
   1cf8c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1cf90:	sub	r5, r5, #4
   1cf94:	mov	r4, #0
   1cf98:	add	r4, r4, #1
   1cf9c:	ldr	r3, [r5, #4]!
   1cfa0:	mov	r0, r7
   1cfa4:	mov	r1, r8
   1cfa8:	mov	r2, r9
   1cfac:	blx	r3
   1cfb0:	cmp	r4, r6
   1cfb4:	bne	1cf98 <fputs@plt+0xa954>
   1cfb8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1cfbc:	andeq	r1, r1, r0, asr #30
   1cfc0:	andeq	r1, r1, r4, lsr pc
   1cfc4:	bx	lr
   1cfc8:	ldr	r3, [pc, #28]	; 1cfec <fputs@plt+0xa9a8>
   1cfcc:	mov	r1, #0
   1cfd0:	ldr	r2, [pc, #24]	; 1cff0 <fputs@plt+0xa9ac>
   1cfd4:	add	r3, pc, r3
   1cfd8:	ldr	r3, [r3, r2]
   1cfdc:	cmp	r3, #0
   1cfe0:	ldrne	r2, [r3]
   1cfe4:	moveq	r2, r3
   1cfe8:	b	120d4 <__cxa_atexit@plt>
   1cfec:	andeq	r2, r1, r4, lsr #32
   1cff0:	andeq	r0, r0, r8, lsr r2

Disassembly of section .fini:

0001cff4 <_fini@@Base>:
   1cff4:	push	{r3, lr}
   1cff8:	pop	{r3, pc}
