
centos-preinstalled/fprintd-enroll:     file format elf32-littlearm


Disassembly of section .init:

00010aac <_init@@Base>:
   10aac:	push	{r3, lr}
   10ab0:	bl	110b4 <exit@plt+0x4a4>
   10ab4:	pop	{r3, pc}

Disassembly of section .plt:

00010ab8 <g_free@plt-0x14>:
   10ab8:	push	{lr}		; (str lr, [sp, #-4]!)
   10abc:	ldr	lr, [pc, #4]	; 10ac8 <_init@@Base+0x1c>
   10ac0:	add	lr, pc, lr
   10ac4:	ldr	pc, [lr, #8]!
   10ac8:	andeq	r1, r1, r8, lsr r5

00010acc <g_free@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1336]!	; 0x538

00010ad8 <dbus_g_proxy_call@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1328]!	; 0x530

00010ae4 <abort@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1320]!	; 0x528

00010af0 <__libc_start_main@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1312]!	; 0x520

00010afc <g_print@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1304]!	; 0x518

00010b08 <__gmon_start__@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1296]!	; 0x510

00010b14 <g_strcmp0@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1288]!	; 0x508

00010b20 <dbus_g_proxy_new_for_name@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1280]!	; 0x500

00010b2c <dbus_g_object_register_marshaller@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b38 <g_option_context_add_main_entries@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b44 <g_string_new@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b50 <dbus_g_bus_get@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b5c <g_value_peek_pointer@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b68 <dbus_g_proxy_connect_signal@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b74 <g_string_free@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b80 <g_main_context_iteration@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b8c <dbus_g_proxy_add_signal@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b98 <dbus_g_proxy_disconnect_signal@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1200]!	; 0x4b0

00010ba4 <g_option_context_parse@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bb0 <g_return_if_fail_warning@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bbc <dbus_g_object_path_get_g_type@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1176]!	; 0x498

00010bc8 <__stack_chk_fail@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1168]!	; 0x490

00010bd4 <g_option_context_new@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #69632	; 0x11000
   10bdc:	ldr	pc, [ip, #1160]!	; 0x488

00010be0 <g_error_free@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #69632	; 0x11000
   10be8:	ldr	pc, [ip, #1152]!	; 0x480

00010bec <g_string_append@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #1144]!	; 0x478

00010bf8 <g_string_append_printf@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #1136]!	; 0x470

00010c04 <g_log@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #69632	; 0x11000
   10c0c:	ldr	pc, [ip, #1128]!	; 0x468

00010c10 <exit@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #69632	; 0x11000
   10c18:	ldr	pc, [ip, #1120]!	; 0x460

Disassembly of section .text:

00010c1c <.text>:
   10c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c20:	movw	r7, #8568	; 0x2178
   10c24:	movt	r7, #2
   10c28:	sub	sp, sp, #44	; 0x2c
   10c2c:	mov	r4, #0
   10c30:	mov	r3, #20
   10c34:	ldr	ip, [r7]
   10c38:	mov	r2, #64	; 0x40
   10c3c:	str	r0, [sp, #20]
   10c40:	movw	r0, #4564	; 0x11d4
   10c44:	str	r1, [sp, #16]
   10c48:	movt	r0, #1
   10c4c:	mov	r1, #4
   10c50:	str	r4, [sp]
   10c54:	str	ip, [sp, #36]	; 0x24
   10c58:	str	r4, [sp, #24]
   10c5c:	bl	10b2c <dbus_g_object_register_marshaller@plt>
   10c60:	movw	r0, #4916	; 0x1334
   10c64:	movt	r0, #1
   10c68:	bl	10bd4 <g_option_context_new@plt>
   10c6c:	mov	r2, r4
   10c70:	movw	r1, #4812	; 0x12cc
   10c74:	movt	r1, #1
   10c78:	mov	r5, r0
   10c7c:	bl	10b38 <g_option_context_add_main_entries@plt>
   10c80:	mov	r0, r5
   10c84:	add	r1, sp, #20
   10c88:	add	r2, sp, #16
   10c8c:	add	r3, sp, #24
   10c90:	bl	10ba4 <g_option_context_parse@plt>
   10c94:	cmp	r0, r4
   10c98:	beq	10f04 <exit@plt+0x2f4>
   10c9c:	add	r8, sp, #40	; 0x28
   10ca0:	mov	r0, #1
   10ca4:	movw	r5, #8576	; 0x2180
   10ca8:	movt	r5, #2
   10cac:	str	r4, [r8, #-8]!
   10cb0:	mov	r1, r8
   10cb4:	bl	10b50 <dbus_g_bus_get@plt>
   10cb8:	cmp	r0, #0
   10cbc:	str	r0, [r5]
   10cc0:	beq	11010 <exit@plt+0x400>
   10cc4:	movw	r1, #5024	; 0x13a0
   10cc8:	movw	r2, #5048	; 0x13b8
   10ccc:	movt	r1, #1
   10cd0:	movt	r2, #1
   10cd4:	movw	r3, #5080	; 0x13d8
   10cd8:	movt	r3, #1
   10cdc:	bl	10b20 <dbus_g_proxy_new_for_name@plt>
   10ce0:	ldr	fp, [r5, #8]
   10ce4:	add	sl, sp, #40	; 0x28
   10ce8:	mov	r4, #0
   10cec:	cmp	fp, #0
   10cf0:	ldrne	fp, [fp]
   10cf4:	str	r4, [sl, #-12]!
   10cf8:	mov	r6, r0
   10cfc:	str	r0, [r5, #4]
   10d00:	bl	10bbc <dbus_g_object_path_get_g_type@plt>
   10d04:	str	r4, [sp, #8]
   10d08:	mov	r2, sl
   10d0c:	str	r8, [sp, #4]
   10d10:	mov	r3, r4
   10d14:	movw	r1, #5112	; 0x13f8
   10d18:	movt	r1, #1
   10d1c:	str	r0, [sp]
   10d20:	mov	r0, r6
   10d24:	bl	10ad8 <dbus_g_proxy_call@plt>
   10d28:	cmp	r0, r4
   10d2c:	beq	1105c <exit@plt+0x44c>
   10d30:	ldr	r1, [sp, #32]
   10d34:	cmp	r1, #0
   10d38:	beq	11048 <exit@plt+0x438>
   10d3c:	movw	r0, #5180	; 0x143c
   10d40:	movt	r0, #1
   10d44:	bl	10afc <g_print@plt>
   10d48:	ldr	r2, [sp, #32]
   10d4c:	ldr	r0, [r5]
   10d50:	movw	r1, #5024	; 0x13a0
   10d54:	movw	r3, #5200	; 0x1450
   10d58:	movt	r1, #1
   10d5c:	movt	r3, #1
   10d60:	bl	10b20 <dbus_g_proxy_new_for_name@plt>
   10d64:	mov	r9, r0
   10d68:	ldr	r0, [sp, #32]
   10d6c:	bl	10acc <g_free@plt>
   10d70:	str	fp, [sp]
   10d74:	str	r4, [sp, #4]
   10d78:	mov	r0, r9
   10d7c:	str	r4, [sp, #8]
   10d80:	movw	r1, #5232	; 0x1470
   10d84:	mov	r2, sl
   10d88:	movt	r1, #1
   10d8c:	mov	r3, #64	; 0x40
   10d90:	bl	10ad8 <dbus_g_proxy_call@plt>
   10d94:	cmp	r0, #0
   10d98:	beq	1102c <exit@plt+0x41c>
   10d9c:	mov	r0, r9
   10da0:	mov	r2, #64	; 0x40
   10da4:	mov	r3, #20
   10da8:	str	r4, [sp]
   10dac:	movw	r1, #5268	; 0x1494
   10db0:	movw	r6, #8324	; 0x2084
   10db4:	movt	r1, #1
   10db8:	movt	r6, #2
   10dbc:	str	r4, [sp, #28]
   10dc0:	str	r4, [sp, #32]
   10dc4:	bl	10b8c <dbus_g_proxy_add_signal@plt>
   10dc8:	mov	r0, r9
   10dcc:	str	r4, [sp]
   10dd0:	movw	r1, #5268	; 0x1494
   10dd4:	movw	r2, #4524	; 0x11ac
   10dd8:	movt	r1, #1
   10ddc:	movt	r2, #1
   10de0:	mov	r3, r8
   10de4:	bl	10b68 <dbus_g_proxy_connect_signal@plt>
   10de8:	ldr	r0, [r6]
   10dec:	cmp	r0, #0
   10df0:	beq	10f28 <exit@plt+0x318>
   10df4:	mov	r5, r6
   10df8:	b	10e08 <exit@plt+0x1f8>
   10dfc:	ldr	r0, [r5, #20]!
   10e00:	cmp	r0, #0
   10e04:	beq	10f28 <exit@plt+0x318>
   10e08:	ldr	r1, [r6, #240]	; 0xf0
   10e0c:	movw	r4, #8324	; 0x2084
   10e10:	bl	10b14 <g_strcmp0@plt>
   10e14:	movt	r4, #2
   10e18:	subs	fp, r0, #0
   10e1c:	bne	10dfc <exit@plt+0x1ec>
   10e20:	ldr	r1, [r4, #240]	; 0xf0
   10e24:	movw	r0, #5384	; 0x1508
   10e28:	movt	r0, #1
   10e2c:	bl	10afc <g_print@plt>
   10e30:	ldr	r3, [r4, #240]	; 0xf0
   10e34:	movw	r1, #5408	; 0x1520
   10e38:	str	fp, [sp, #4]
   10e3c:	str	fp, [sp, #8]
   10e40:	movt	r1, #1
   10e44:	str	r3, [sp]
   10e48:	mov	r0, r9
   10e4c:	mov	r2, sl
   10e50:	mov	r3, #64	; 0x40
   10e54:	bl	10ad8 <dbus_g_proxy_call@plt>
   10e58:	cmp	r0, #0
   10e5c:	bne	10e70 <exit@plt+0x260>
   10e60:	b	10fd8 <exit@plt+0x3c8>
   10e64:	mov	r0, #0
   10e68:	mov	r1, #1
   10e6c:	bl	10b80 <g_main_context_iteration@plt>
   10e70:	ldr	r3, [sp, #32]
   10e74:	cmp	r3, #0
   10e78:	beq	10e64 <exit@plt+0x254>
   10e7c:	mov	r4, #0
   10e80:	mov	r0, r9
   10e84:	mov	r3, r8
   10e88:	movw	r1, #5268	; 0x1494
   10e8c:	movw	r2, #4524	; 0x11ac
   10e90:	movt	r1, #1
   10e94:	movt	r2, #1
   10e98:	bl	10b98 <dbus_g_proxy_disconnect_signal@plt>
   10e9c:	mov	r2, sl
   10ea0:	str	r4, [sp]
   10ea4:	mov	r3, r4
   10ea8:	movw	r1, #5312	; 0x14c0
   10eac:	mov	r0, r9
   10eb0:	movt	r1, #1
   10eb4:	bl	10ad8 <dbus_g_proxy_call@plt>
   10eb8:	cmp	r0, r4
   10ebc:	beq	10ff4 <exit@plt+0x3e4>
   10ec0:	str	r4, [sp]
   10ec4:	mov	r0, r9
   10ec8:	mov	r2, r8
   10ecc:	mov	r3, r4
   10ed0:	movw	r1, #5348	; 0x14e4
   10ed4:	movt	r1, #1
   10ed8:	str	r4, [sp, #32]
   10edc:	bl	10ad8 <dbus_g_proxy_call@plt>
   10ee0:	cmp	r0, #0
   10ee4:	beq	10fbc <exit@plt+0x3ac>
   10ee8:	ldr	r2, [sp, #36]	; 0x24
   10eec:	mov	r0, fp
   10ef0:	ldr	r3, [r7]
   10ef4:	cmp	r2, r3
   10ef8:	bne	10f8c <exit@plt+0x37c>
   10efc:	add	sp, sp, #44	; 0x2c
   10f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f04:	ldr	r3, [sp, #24]
   10f08:	movw	r0, #4940	; 0x134c
   10f0c:	movt	r0, #1
   10f10:	mov	fp, #1
   10f14:	ldr	r1, [r3, #8]
   10f18:	bl	10afc <g_print@plt>
   10f1c:	ldr	r0, [sp, #24]
   10f20:	bl	10be0 <g_error_free@plt>
   10f24:	b	10ee8 <exit@plt+0x2d8>
   10f28:	mov	r0, #0
   10f2c:	movw	r4, #8324	; 0x2084
   10f30:	bl	10b44 <g_string_new@plt>
   10f34:	movw	r1, #5420	; 0x152c
   10f38:	ldr	r2, [r6, #240]	; 0xf0
   10f3c:	movt	r1, #1
   10f40:	movt	r4, #2
   10f44:	mov	r5, r0
   10f48:	bl	10bf8 <g_string_append_printf@plt>
   10f4c:	ldr	r2, [r4]
   10f50:	cmp	r2, #0
   10f54:	beq	10f90 <exit@plt+0x380>
   10f58:	movw	r1, #7436	; 0x1d0c
   10f5c:	mov	r0, r5
   10f60:	movt	r1, #1
   10f64:	bl	10bf8 <g_string_append_printf@plt>
   10f68:	ldr	r3, [r4, #20]
   10f6c:	cmp	r3, #0
   10f70:	beq	10f84 <exit@plt+0x374>
   10f74:	movw	r1, #5284	; 0x14a4
   10f78:	mov	r0, r5
   10f7c:	movt	r1, #1
   10f80:	bl	10bec <g_string_append@plt>
   10f84:	add	r4, r4, #20
   10f88:	b	10f4c <exit@plt+0x33c>
   10f8c:	bl	10bc8 <__stack_chk_fail@plt>
   10f90:	mov	r0, r2
   10f94:	mov	r1, #16
   10f98:	ldr	r3, [r5]
   10f9c:	movw	r2, #7436	; 0x1d0c
   10fa0:	movt	r2, #1
   10fa4:	bl	10c04 <g_log@plt>
   10fa8:	mov	r0, r5
   10fac:	mov	r1, #1
   10fb0:	bl	10b74 <g_string_free@plt>
   10fb4:	mov	r0, #1
   10fb8:	bl	10c10 <exit@plt>
   10fbc:	ldr	r3, [sp, #32]
   10fc0:	movw	r0, #5356	; 0x14ec
   10fc4:	movt	r0, #1
   10fc8:	ldr	r1, [r3, #8]
   10fcc:	bl	10afc <g_print@plt>
   10fd0:	mov	r0, #1
   10fd4:	bl	10c10 <exit@plt>
   10fd8:	ldr	r3, [sp, #28]
   10fdc:	movw	r0, #5288	; 0x14a8
   10fe0:	movt	r0, #1
   10fe4:	ldr	r1, [r3, #8]
   10fe8:	bl	10afc <g_print@plt>
   10fec:	mov	r0, #1
   10ff0:	bl	10c10 <exit@plt>
   10ff4:	ldr	r3, [sp, #28]
   10ff8:	movw	r0, #5324	; 0x14cc
   10ffc:	movt	r0, #1
   11000:	ldr	r1, [r3, #8]
   11004:	bl	10afc <g_print@plt>
   11008:	mov	r0, #1
   1100c:	bl	10c10 <exit@plt>
   11010:	ldr	r3, [sp, #32]
   11014:	movw	r0, #4984	; 0x1378
   11018:	movt	r0, #1
   1101c:	ldr	r1, [r3, #8]
   11020:	bl	10afc <g_print@plt>
   11024:	mov	r0, #1
   11028:	bl	10c10 <exit@plt>
   1102c:	ldr	r3, [sp, #28]
   11030:	movw	r0, #5240	; 0x1478
   11034:	movt	r0, #1
   11038:	ldr	r1, [r3, #8]
   1103c:	bl	10afc <g_print@plt>
   11040:	mov	r0, #1
   11044:	bl	10c10 <exit@plt>
   11048:	movw	r0, #5160	; 0x1428
   1104c:	movt	r0, #1
   11050:	bl	10afc <g_print@plt>
   11054:	mov	r0, #1
   11058:	bl	10c10 <exit@plt>
   1105c:	ldr	r3, [sp, #28]
   11060:	movw	r0, #5132	; 0x140c
   11064:	movt	r0, #1
   11068:	ldr	r1, [r3, #8]
   1106c:	bl	10afc <g_print@plt>
   11070:	mov	r0, #1
   11074:	bl	10c10 <exit@plt>
   11078:	mov	fp, #0
   1107c:	mov	lr, #0
   11080:	pop	{r1}		; (ldr r1, [sp], #4)
   11084:	mov	r2, sp
   11088:	push	{r2}		; (str r2, [sp, #-4]!)
   1108c:	push	{r0}		; (str r0, [sp, #-4]!)
   11090:	ldr	ip, [pc, #16]	; 110a8 <exit@plt+0x498>
   11094:	push	{ip}		; (str ip, [sp, #-4]!)
   11098:	ldr	r0, [pc, #12]	; 110ac <exit@plt+0x49c>
   1109c:	ldr	r3, [pc, #12]	; 110b0 <exit@plt+0x4a0>
   110a0:	bl	10af0 <__libc_start_main@plt>
   110a4:	bl	10ae4 <abort@plt>
   110a8:			; <UNDEFINED> instruction: 0x000112b8
   110ac:	andeq	r0, r1, ip, lsl ip
   110b0:	andeq	r1, r1, r4, asr r2
   110b4:	ldr	r3, [pc, #20]	; 110d0 <exit@plt+0x4c0>
   110b8:	ldr	r2, [pc, #20]	; 110d4 <exit@plt+0x4c4>
   110bc:	add	r3, pc, r3
   110c0:	ldr	r2, [r3, r2]
   110c4:	cmp	r2, #0
   110c8:	bxeq	lr
   110cc:	b	10b08 <__gmon_start__@plt>
   110d0:	andeq	r0, r1, ip, lsr pc
   110d4:	andeq	r0, r0, ip, ror r0
   110d8:	push	{r3, lr}
   110dc:	movw	r0, #8568	; 0x2178
   110e0:	ldr	r3, [pc, #36]	; 1110c <exit@plt+0x4fc>
   110e4:	movt	r0, #2
   110e8:	rsb	r3, r0, r3
   110ec:	cmp	r3, #6
   110f0:	popls	{r3, pc}
   110f4:	movw	r3, #0
   110f8:	movt	r3, #0
   110fc:	cmp	r3, #0
   11100:	popeq	{r3, pc}
   11104:	blx	r3
   11108:	pop	{r3, pc}
   1110c:	andeq	r2, r2, fp, ror r1
   11110:	push	{r3, lr}
   11114:	movw	r0, #8568	; 0x2178
   11118:	movw	r3, #8568	; 0x2178
   1111c:	movt	r0, #2
   11120:	movt	r3, #2
   11124:	rsb	r3, r0, r3
   11128:	asr	r3, r3, #2
   1112c:	add	r3, r3, r3, lsr #31
   11130:	asrs	r1, r3, #1
   11134:	popeq	{r3, pc}
   11138:	movw	r2, #0
   1113c:	movt	r2, #0
   11140:	cmp	r2, #0
   11144:	popeq	{r3, pc}
   11148:	blx	r2
   1114c:	pop	{r3, pc}
   11150:	push	{r4, lr}
   11154:	movw	r4, #8572	; 0x217c
   11158:	movt	r4, #2
   1115c:	ldrb	r3, [r4]
   11160:	cmp	r3, #0
   11164:	popne	{r4, pc}
   11168:	bl	110d8 <exit@plt+0x4c8>
   1116c:	mov	r3, #1
   11170:	strb	r3, [r4]
   11174:	pop	{r4, pc}
   11178:	movw	r0, #7908	; 0x1ee4
   1117c:	movt	r0, #2
   11180:	push	{r3, lr}
   11184:	ldr	r3, [r0]
   11188:	cmp	r3, #0
   1118c:	beq	111a4 <exit@plt+0x594>
   11190:	movw	r3, #0
   11194:	movt	r3, #0
   11198:	cmp	r3, #0
   1119c:	beq	111a4 <exit@plt+0x594>
   111a0:	blx	r3
   111a4:	pop	{r3, lr}
   111a8:	b	11110 <exit@plt+0x500>
   111ac:	push	{r3, r4, r5, lr}
   111b0:	movw	r0, #4896	; 0x1320
   111b4:	movt	r0, #1
   111b8:	mov	r5, r3
   111bc:	mov	r4, r2
   111c0:	bl	10afc <g_print@plt>
   111c4:	cmp	r4, #0
   111c8:	movne	r3, #1
   111cc:	strne	r3, [r5]
   111d0:	pop	{r3, r4, r5, pc}
   111d4:	cmp	r2, #3
   111d8:	push	{r3, r4, r5, r6, r7, lr}
   111dc:	mov	r6, r0
   111e0:	mov	r4, r3
   111e4:	ldr	r5, [sp, #28]
   111e8:	beq	11208 <exit@plt+0x5f8>
   111ec:	movw	r1, #7768	; 0x1e58
   111f0:	movw	r2, #7808	; 0x1e80
   111f4:	movt	r1, #1
   111f8:	movt	r2, #1
   111fc:	mov	r0, #0
   11200:	pop	{r3, r4, r5, r6, r7, lr}
   11204:	b	10bb0 <g_return_if_fail_warning@plt>
   11208:	ldr	r3, [r0]
   1120c:	tst	r3, #536870912	; 0x20000000
   11210:	bne	11240 <exit@plt+0x630>
   11214:	mov	r0, r4
   11218:	bl	10b5c <g_value_peek_pointer@plt>
   1121c:	ldr	r3, [r6, #8]
   11220:	mov	r7, r0
   11224:	cmp	r5, #0
   11228:	mov	r0, r7
   1122c:	ldr	r1, [r4, #32]
   11230:	ldreq	r5, [r6, #16]
   11234:	ldr	r2, [r4, #56]	; 0x38
   11238:	blx	r5
   1123c:	pop	{r3, r4, r5, r6, r7, pc}
   11240:	mov	r0, r4
   11244:	ldr	r7, [r6, #8]
   11248:	bl	10b5c <g_value_peek_pointer@plt>
   1124c:	mov	r3, r0
   11250:	b	11224 <exit@plt+0x614>
   11254:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11258:	mov	r7, r0
   1125c:	ldr	r6, [pc, #76]	; 112b0 <exit@plt+0x6a0>
   11260:	mov	r8, r1
   11264:	ldr	r5, [pc, #72]	; 112b4 <exit@plt+0x6a4>
   11268:	mov	r9, r2
   1126c:	add	r6, pc, r6
   11270:	bl	10aac <_init@@Base>
   11274:	add	r5, pc, r5
   11278:	rsb	r6, r5, r6
   1127c:	asrs	r6, r6, #2
   11280:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11284:	sub	r5, r5, #4
   11288:	mov	r4, #0
   1128c:	add	r4, r4, #1
   11290:	ldr	r3, [r5, #4]!
   11294:	mov	r0, r7
   11298:	mov	r1, r8
   1129c:	mov	r2, r9
   112a0:	blx	r3
   112a4:	cmp	r4, r6
   112a8:	bne	1128c <exit@plt+0x67c>
   112ac:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   112b0:	andeq	r0, r1, ip, ror #24
   112b4:	andeq	r0, r1, r0, ror #24
   112b8:	bx	lr

Disassembly of section .fini:

000112bc <_fini@@Base>:
   112bc:	push	{r3, lr}
   112c0:	pop	{r3, pc}
