
centos-preinstalled/soelim:     file format elf32-littlearm


Disassembly of section .init:

00008a64 <.init>:
    8a64:	push	{r3, lr}
    8a68:	bl	8edc <fputs@plt+0x2c0>
    8a6c:	pop	{r3, pc}

Disassembly of section .plt:

00008a70 <strerror@plt-0x14>:
    8a70:	push	{lr}		; (str lr, [sp, #-4]!)
    8a74:	ldr	lr, [pc, #4]	; 8a80 <strerror@plt-0x4>
    8a78:	add	lr, pc, lr
    8a7c:	ldr	pc, [lr, #8]!
    8a80:	andeq	ip, r0, r0, lsl #11

00008a84 <strerror@plt>:
    8a84:	add	ip, pc, #0, 12
    8a88:	add	ip, ip, #12, 20	; 0xc000
    8a8c:	ldr	pc, [ip, #1408]!	; 0x580

00008a90 <abort@plt>:
    8a90:	add	ip, pc, #0, 12
    8a94:	add	ip, ip, #12, 20	; 0xc000
    8a98:	ldr	pc, [ip, #1400]!	; 0x578

00008a9c <memcmp@plt>:
    8a9c:	add	ip, pc, #0, 12
    8aa0:	add	ip, ip, #12, 20	; 0xc000
    8aa4:	ldr	pc, [ip, #1392]!	; 0x570

00008aa8 <__libc_start_main@plt>:
    8aa8:	add	ip, pc, #0, 12
    8aac:	add	ip, ip, #12, 20	; 0xc000
    8ab0:	ldr	pc, [ip, #1384]!	; 0x568

00008ab4 <__gmon_start__@plt>:
    8ab4:	add	ip, pc, #0, 12
    8ab8:	add	ip, ip, #12, 20	; 0xc000
    8abc:	ldr	pc, [ip, #1376]!	; 0x560

00008ac0 <fclose@plt>:
    8ac0:	add	ip, pc, #0, 12
    8ac4:	add	ip, ip, #12, 20	; 0xc000
    8ac8:	ldr	pc, [ip, #1368]!	; 0x558

00008acc <getenv@plt>:
    8acc:	add	ip, pc, #0, 12
    8ad0:	add	ip, ip, #12, 20	; 0xc000
    8ad4:	ldr	pc, [ip, #1360]!	; 0x550

00008ad8 <__printf_chk@plt>:
    8ad8:	add	ip, pc, #0, 12
    8adc:	add	ip, ip, #12, 20	; 0xc000
    8ae0:	ldr	pc, [ip, #1352]!	; 0x548

00008ae4 <_IO_getc@plt>:
    8ae4:	add	ip, pc, #0, 12
    8ae8:	add	ip, ip, #12, 20	; 0xc000
    8aec:	ldr	pc, [ip, #1344]!	; 0x540

00008af0 <strchr@plt>:
    8af0:	add	ip, pc, #0, 12
    8af4:	add	ip, ip, #12, 20	; 0xc000
    8af8:	ldr	pc, [ip, #1336]!	; 0x538

00008afc <fopen@plt>:
    8afc:	add	ip, pc, #0, 12
    8b00:	add	ip, ip, #12, 20	; 0xc000
    8b04:	ldr	pc, [ip, #1328]!	; 0x530

00008b08 <__cxa_end_cleanup@plt>:
    8b08:	add	ip, pc, #0, 12
    8b0c:	add	ip, ip, #12, 20	; 0xc000
    8b10:	ldr	pc, [ip, #1320]!	; 0x528

00008b14 <fflush@plt>:
    8b14:	add	ip, pc, #0, 12
    8b18:	add	ip, ip, #12, 20	; 0xc000
    8b1c:	ldr	pc, [ip, #1312]!	; 0x520

00008b20 <strlen@plt>:
    8b20:	add	ip, pc, #0, 12
    8b24:	add	ip, ip, #12, 20	; 0xc000
    8b28:	ldr	pc, [ip, #1304]!	; 0x518

00008b2c <memcpy@plt>:
    8b2c:	add	ip, pc, #0, 12
    8b30:	add	ip, ip, #12, 20	; 0xc000
    8b34:	ldr	pc, [ip, #1296]!	; 0x510

00008b38 <strcpy@plt>:
    8b38:	add	ip, pc, #0, 12
    8b3c:	add	ip, ip, #12, 20	; 0xc000
    8b40:	ldr	pc, [ip, #1288]!	; 0x508

00008b44 <fwrite@plt>:
    8b44:	add	ip, pc, #0, 12
    8b48:	add	ip, ip, #12, 20	; 0xc000
    8b4c:	ldr	pc, [ip, #1280]!	; 0x500

00008b50 <_Znaj@plt>:
    8b50:	add	ip, pc, #0, 12
    8b54:	add	ip, ip, #12, 20	; 0xc000
    8b58:	ldr	pc, [ip, #1272]!	; 0x4f8

00008b5c <__ctype_b_loc@plt>:
    8b5c:	add	ip, pc, #0, 12
    8b60:	add	ip, ip, #12, 20	; 0xc000
    8b64:	ldr	pc, [ip, #1264]!	; 0x4f0

00008b68 <__stack_chk_fail@plt>:
    8b68:	add	ip, pc, #0, 12
    8b6c:	add	ip, ip, #12, 20	; 0xc000
    8b70:	ldr	pc, [ip, #1256]!	; 0x4e8

00008b74 <__fprintf_chk@plt>:
    8b74:	add	ip, pc, #0, 12
    8b78:	add	ip, ip, #12, 20	; 0xc000
    8b7c:	ldr	pc, [ip, #1248]!	; 0x4e0

00008b80 <fputc@plt>:
    8b80:	add	ip, pc, #0, 12
    8b84:	add	ip, ip, #12, 20	; 0xc000
    8b88:	ldr	pc, [ip, #1240]!	; 0x4d8

00008b8c <strcat@plt>:
    8b8c:	add	ip, pc, #0, 12
    8b90:	add	ip, ip, #12, 20	; 0xc000
    8b94:	ldr	pc, [ip, #1232]!	; 0x4d0

00008b98 <_ZdaPv@plt>:
    8b98:	add	ip, pc, #0, 12
    8b9c:	add	ip, ip, #12, 20	; 0xc000
    8ba0:	ldr	pc, [ip, #1224]!	; 0x4c8

00008ba4 <__aeabi_atexit@plt>:
    8ba4:	add	ip, pc, #0, 12
    8ba8:	add	ip, ip, #12, 20	; 0xc000
    8bac:	ldr	pc, [ip, #1216]!	; 0x4c0

00008bb0 <__sprintf_chk@plt>:
    8bb0:	add	ip, pc, #0, 12
    8bb4:	add	ip, ip, #12, 20	; 0xc000
    8bb8:	ldr	pc, [ip, #1208]!	; 0x4b8

00008bbc <strncmp@plt>:
    8bbc:	add	ip, pc, #0, 12
    8bc0:	add	ip, ip, #12, 20	; 0xc000
    8bc4:	ldr	pc, [ip, #1200]!	; 0x4b0

00008bc8 <__gxx_personality_v0@plt>:
    8bc8:	add	ip, pc, #0, 12
    8bcc:	add	ip, ip, #12, 20	; 0xc000
    8bd0:	ldr	pc, [ip, #1192]!	; 0x4a8

00008bd4 <ferror@plt>:
    8bd4:	add	ip, pc, #0, 12
    8bd8:	add	ip, ip, #12, 20	; 0xc000
    8bdc:	ldr	pc, [ip, #1184]!	; 0x4a0

00008be0 <_IO_putc@plt>:
    8be0:	add	ip, pc, #0, 12
    8be4:	add	ip, ip, #12, 20	; 0xc000
    8be8:	ldr	pc, [ip, #1176]!	; 0x498

00008bec <memchr@plt>:
    8bec:	add	ip, pc, #0, 12
    8bf0:	add	ip, ip, #12, 20	; 0xc000
    8bf4:	ldr	pc, [ip, #1168]!	; 0x490

00008bf8 <strcmp@plt>:
    8bf8:	add	ip, pc, #0, 12
    8bfc:	add	ip, ip, #12, 20	; 0xc000
    8c00:	ldr	pc, [ip, #1160]!	; 0x488

00008c04 <exit@plt>:
    8c04:	add	ip, pc, #0, 12
    8c08:	add	ip, ip, #12, 20	; 0xc000
    8c0c:	ldr	pc, [ip, #1152]!	; 0x480

00008c10 <__errno_location@plt>:
    8c10:	add	ip, pc, #0, 12
    8c14:	add	ip, ip, #12, 20	; 0xc000
    8c18:	ldr	pc, [ip, #1144]!	; 0x478

00008c1c <fputs@plt>:
    8c1c:	add	ip, pc, #0, 12
    8c20:	add	ip, ip, #12, 20	; 0xc000
    8c24:	ldr	pc, [ip, #1136]!	; 0x470

Disassembly of section .text:

00008c28 <.text>:
    8c28:	ldr	r3, [r1]
    8c2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8c30:	movw	r5, #20832	; 0x5160
    8c34:	movw	r7, #20688	; 0x50d0
    8c38:	movt	r5, #1
    8c3c:	movw	r9, #23672	; 0x5c78
    8c40:	sub	sp, sp, #8
    8c44:	movt	r7, #1
    8c48:	movt	r9, #1
    8c4c:	mov	r6, r1
    8c50:	mov	r8, r0
    8c54:	mov	sl, #1
    8c58:	str	r3, [r5]
    8c5c:	mov	r4, #0
    8c60:	movw	r2, #50736	; 0xc630
    8c64:	str	r4, [sp]
    8c68:	movt	r2, #0
    8c6c:	movw	r3, #50500	; 0xc544
    8c70:	mov	r0, r8
    8c74:	movt	r3, #0
    8c78:	mov	r1, r6
    8c7c:	bl	acb8 <fputs@plt+0x209c>
    8c80:	cmn	r0, #1
    8c84:	beq	8d74 <fputs@plt+0x158>
    8c88:	cmp	r0, #114	; 0x72
    8c8c:	beq	8d6c <fputs@plt+0x150>
    8c90:	bgt	8cd4 <fputs@plt+0xb8>
    8c94:	cmp	r0, #67	; 0x43
    8c98:	beq	8d38 <fputs@plt+0x11c>
    8c9c:	cmp	r0, #73	; 0x49
    8ca0:	beq	8d28 <fputs@plt+0x10c>
    8ca4:	cmp	r0, #63	; 0x3f
    8ca8:	bne	8cec <fputs@plt+0xd0>
    8cac:	movw	r1, #20680	; 0x50c8
    8cb0:	movt	r1, #1
    8cb4:	ldr	r3, [r5]
    8cb8:	movw	r2, #50548	; 0xc574
    8cbc:	ldr	r0, [r1]
    8cc0:	movt	r2, #0
    8cc4:	mov	r1, #1
    8cc8:	bl	8b74 <__fprintf_chk@plt>
    8ccc:	mov	r0, #1
    8cd0:	bl	8c04 <exit@plt>
    8cd4:	cmp	r0, #118	; 0x76
    8cd8:	beq	8d40 <fputs@plt+0x124>
    8cdc:	cmp	r0, #256	; 0x100
    8ce0:	beq	8d00 <fputs@plt+0xe4>
    8ce4:	cmp	r0, #116	; 0x74
    8ce8:	beq	8d64 <fputs@plt+0x148>
    8cec:	movw	r1, #50664	; 0xc5e8
    8cf0:	mov	r0, #86	; 0x56
    8cf4:	movt	r1, #0
    8cf8:	bl	9878 <fputs@plt+0xc5c>
    8cfc:	b	8c5c <fputs@plt+0x40>
    8d00:	movw	r1, #20676	; 0x50c4
    8d04:	movt	r1, #1
    8d08:	ldr	r3, [r5]
    8d0c:	movw	r2, #50548	; 0xc574
    8d10:	ldr	r0, [r1]
    8d14:	movt	r2, #0
    8d18:	mov	r1, #1
    8d1c:	bl	8b74 <__fprintf_chk@plt>
    8d20:	mov	r0, r4
    8d24:	bl	8c04 <exit@plt>
    8d28:	ldr	r0, [pc, #244]	; 8e24 <fputs@plt+0x208>
    8d2c:	ldr	r1, [r9]
    8d30:	bl	b214 <fputs@plt+0x25f8>
    8d34:	b	8c5c <fputs@plt+0x40>
    8d38:	str	sl, [r7, #16]
    8d3c:	b	8c5c <fputs@plt+0x40>
    8d40:	movw	r3, #20652	; 0x50ac
    8d44:	movt	r3, #1
    8d48:	movw	r1, #50704	; 0xc610
    8d4c:	mov	r0, #1
    8d50:	ldr	r2, [r3]
    8d54:	movt	r1, #0
    8d58:	bl	8ad8 <__printf_chk@plt>
    8d5c:	mov	r0, r4
    8d60:	bl	8c04 <exit@plt>
    8d64:	str	sl, [r7, #4]
    8d68:	b	8c5c <fputs@plt+0x40>
    8d6c:	str	sl, [r7]
    8d70:	b	8c5c <fputs@plt+0x40>
    8d74:	movw	r3, #20640	; 0x50a0
    8d78:	movt	r3, #1
    8d7c:	ldr	r3, [r3]
    8d80:	cmp	r8, r3
    8d84:	rsbgt	r8, r3, r8
    8d88:	addgt	r6, r6, r3, lsl #2
    8d8c:	movgt	r5, r4
    8d90:	ble	8df4 <fputs@plt+0x1d8>
    8d94:	ldr	r0, [r6, r4, lsl #2]
    8d98:	add	r4, r4, #1
    8d9c:	bl	9060 <fputs@plt+0x444>
    8da0:	cmp	r0, #0
    8da4:	addeq	r5, r5, #1
    8da8:	cmp	r4, r8
    8dac:	bne	8d94 <fputs@plt+0x178>
    8db0:	movw	r4, #20676	; 0x50c4
    8db4:	movt	r4, #1
    8db8:	ldr	r0, [r4]
    8dbc:	bl	8bd4 <ferror@plt>
    8dc0:	cmp	r0, #0
    8dc4:	beq	8e10 <fputs@plt+0x1f4>
    8dc8:	movw	r1, #20712	; 0x50e8
    8dcc:	movt	r1, #1
    8dd0:	movw	r0, #50748	; 0xc63c
    8dd4:	movt	r0, #0
    8dd8:	mov	r2, r1
    8ddc:	mov	r3, r1
    8de0:	bl	9de4 <fputs@plt+0x11c8>
    8de4:	adds	r0, r5, #0
    8de8:	movne	r0, #1
    8dec:	add	sp, sp, #8
    8df0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8df4:	movw	r0, #50744	; 0xc638
    8df8:	movt	r0, #0
    8dfc:	bl	9060 <fputs@plt+0x444>
    8e00:	subs	r3, r0, r4
    8e04:	rsbs	r5, r3, #0
    8e08:	adcs	r5, r5, r3
    8e0c:	b	8db0 <fputs@plt+0x194>
    8e10:	ldr	r0, [r4]
    8e14:	bl	8b14 <fflush@plt>
    8e18:	cmp	r0, #0
    8e1c:	bge	8de4 <fputs@plt+0x1c8>
    8e20:	b	8dc8 <fputs@plt+0x1ac>
    8e24:	ldrdeq	r5, [r1], -r8
    8e28:	push	{r4, lr}
    8e2c:	sub	sp, sp, #8
    8e30:	ldr	r4, [pc, #56]	; 8e70 <fputs@plt+0x254>
    8e34:	mov	r1, #0
    8e38:	mov	r2, r1
    8e3c:	mov	r3, r1
    8e40:	mov	r0, #1
    8e44:	str	r0, [sp]
    8e48:	mov	r0, r4
    8e4c:	bl	b018 <fputs@plt+0x23fc>
    8e50:	mov	r0, r4
    8e54:	movw	r1, #45556	; 0xb1f4
    8e58:	movw	r2, #50496	; 0xc540
    8e5c:	movt	r1, #0
    8e60:	movt	r2, #0
    8e64:	add	sp, sp, #8
    8e68:	pop	{r4, lr}
    8e6c:	b	8ba4 <__aeabi_atexit@plt>
    8e70:	ldrdeq	r5, [r1], -r8
    8e74:	movw	r3, #20712	; 0x50e8
    8e78:	movt	r3, #1
    8e7c:	mov	r2, #0
    8e80:	str	r2, [r3]
    8e84:	bx	lr
    8e88:	movw	r0, #20824	; 0x5158
    8e8c:	movt	r0, #1
    8e90:	b	c270 <fputs@plt+0x3654>
    8e94:	ldr	r0, [pc]	; 8e9c <fputs@plt+0x280>
    8e98:	b	c270 <fputs@plt+0x3654>
    8e9c:	andeq	r5, r1, r4, ror ip
    8ea0:	mov	fp, #0
    8ea4:	mov	lr, #0
    8ea8:	pop	{r1}		; (ldr r1, [sp], #4)
    8eac:	mov	r2, sp
    8eb0:	push	{r2}		; (str r2, [sp, #-4]!)
    8eb4:	push	{r0}		; (str r0, [sp, #-4]!)
    8eb8:	ldr	ip, [pc, #16]	; 8ed0 <fputs@plt+0x2b4>
    8ebc:	push	{ip}		; (str ip, [sp, #-4]!)
    8ec0:	ldr	r0, [pc, #12]	; 8ed4 <fputs@plt+0x2b8>
    8ec4:	ldr	r3, [pc, #12]	; 8ed8 <fputs@plt+0x2bc>
    8ec8:	bl	8aa8 <__libc_start_main@plt>
    8ecc:	bl	8a90 <abort@plt>
    8ed0:	andeq	ip, r0, r0, lsr r5
    8ed4:	andeq	r8, r0, r8, lsr #24
    8ed8:	andeq	ip, r0, ip, asr #9
    8edc:	ldr	r3, [pc, #20]	; 8ef8 <fputs@plt+0x2dc>
    8ee0:	ldr	r2, [pc, #20]	; 8efc <fputs@plt+0x2e0>
    8ee4:	add	r3, pc, r3
    8ee8:	ldr	r2, [r3, r2]
    8eec:	cmp	r2, #0
    8ef0:	bxeq	lr
    8ef4:	b	8ab4 <__gmon_start__@plt>
    8ef8:	andeq	ip, r0, r4, lsl r1
    8efc:	muleq	r0, r8, r0
    8f00:	push	{r3, lr}
    8f04:	movw	r0, #20664	; 0x50b8
    8f08:	ldr	r3, [pc, #36]	; 8f34 <fputs@plt+0x318>
    8f0c:	movt	r0, #1
    8f10:	rsb	r3, r0, r3
    8f14:	cmp	r3, #6
    8f18:	popls	{r3, pc}
    8f1c:	movw	r3, #0
    8f20:	movt	r3, #0
    8f24:	cmp	r3, #0
    8f28:	popeq	{r3, pc}
    8f2c:	blx	r3
    8f30:	pop	{r3, pc}
    8f34:	strheq	r5, [r1], -fp
    8f38:	push	{r3, lr}
    8f3c:	movw	r0, #20664	; 0x50b8
    8f40:	movw	r3, #20664	; 0x50b8
    8f44:	movt	r0, #1
    8f48:	movt	r3, #1
    8f4c:	rsb	r3, r0, r3
    8f50:	asr	r3, r3, #2
    8f54:	add	r3, r3, r3, lsr #31
    8f58:	asrs	r1, r3, #1
    8f5c:	popeq	{r3, pc}
    8f60:	movw	r2, #0
    8f64:	movt	r2, #0
    8f68:	cmp	r2, #0
    8f6c:	popeq	{r3, pc}
    8f70:	blx	r2
    8f74:	pop	{r3, pc}
    8f78:	push	{r4, lr}
    8f7c:	movw	r4, #20684	; 0x50cc
    8f80:	movt	r4, #1
    8f84:	ldrb	r3, [r4]
    8f88:	cmp	r3, #0
    8f8c:	popne	{r4, pc}
    8f90:	bl	8f00 <fputs@plt+0x2e4>
    8f94:	mov	r3, #1
    8f98:	strb	r3, [r4]
    8f9c:	pop	{r4, pc}
    8fa0:	movw	r0, #20212	; 0x4ef4
    8fa4:	movt	r0, #1
    8fa8:	push	{r3, lr}
    8fac:	ldr	r3, [r0]
    8fb0:	cmp	r3, #0
    8fb4:	beq	8fcc <fputs@plt+0x3b0>
    8fb8:	movw	r3, #0
    8fbc:	movt	r3, #0
    8fc0:	cmp	r3, #0
    8fc4:	beq	8fcc <fputs@plt+0x3b0>
    8fc8:	blx	r3
    8fcc:	pop	{r3, lr}
    8fd0:	b	8f38 <fputs@plt+0x31c>
    8fd4:	movw	r3, #20832	; 0x5160
    8fd8:	movt	r3, #1
    8fdc:	movw	r2, #50548	; 0xc574
    8fe0:	mov	r1, #1
    8fe4:	ldr	r3, [r3]
    8fe8:	movt	r2, #0
    8fec:	b	8b74 <__fprintf_chk@plt>
    8ff0:	movw	r3, #20688	; 0x50d0
    8ff4:	movt	r3, #1
    8ff8:	ldr	r2, [r3]
    8ffc:	cmp	r2, #0
    9000:	bxne	lr
    9004:	ldr	r3, [r3, #4]
    9008:	cmp	r3, #0
    900c:	beq	9038 <fputs@plt+0x41c>
    9010:	movw	r2, #20732	; 0x50fc
    9014:	movw	r3, #20828	; 0x515c
    9018:	movt	r2, #1
    901c:	movt	r3, #1
    9020:	movw	r1, #50604	; 0xc5ac
    9024:	mov	r0, #1
    9028:	ldr	r2, [r2]
    902c:	movt	r1, #0
    9030:	ldr	r3, [r3]
    9034:	b	8ad8 <__printf_chk@plt>
    9038:	movw	r2, #20828	; 0x515c
    903c:	movw	r3, #20732	; 0x50fc
    9040:	movt	r2, #1
    9044:	movt	r3, #1
    9048:	movw	r1, #50592	; 0xc5a0
    904c:	mov	r0, #1
    9050:	ldr	r2, [r2]
    9054:	movt	r1, #0
    9058:	ldr	r3, [r3]
    905c:	b	8ad8 <__printf_chk@plt>
    9060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9064:	movw	sl, #20664	; 0x50b8
    9068:	movt	sl, #1
    906c:	sub	sp, sp, #60	; 0x3c
    9070:	add	r2, sp, #56	; 0x38
    9074:	mov	r3, #0
    9078:	ldr	ip, [sl]
    907c:	mov	r1, r0
    9080:	str	r3, [r2, #-56]!	; 0xffffffc8
    9084:	mov	r4, r0
    9088:	mov	r2, sp
    908c:	ldr	r0, [pc, #1468]	; 9650 <fputs@plt+0xa34>
    9090:	str	ip, [sp, #52]	; 0x34
    9094:	bl	b4b4 <fputs@plt+0x2898>
    9098:	mov	r5, r0
    909c:	bl	8c10 <__errno_location@plt>
    90a0:	ldr	r1, [sp]
    90a4:	cmp	r1, #0
    90a8:	moveq	r1, r4
    90ac:	ldr	r4, [r0]
    90b0:	add	r0, sp, #4
    90b4:	bl	b870 <fputs@plt+0x2c54>
    90b8:	ldr	r3, [sp, #8]
    90bc:	ldr	r2, [sp, #12]
    90c0:	cmp	r3, r2
    90c4:	bge	951c <fputs@plt+0x900>
    90c8:	ldr	r2, [sp, #4]
    90cc:	mov	r1, #0
    90d0:	add	ip, r3, #1
    90d4:	str	ip, [sp, #8]
    90d8:	strb	r1, [r2, r3]
    90dc:	ldr	r0, [sp]
    90e0:	cmp	r0, r1
    90e4:	beq	90ec <fputs@plt+0x4d0>
    90e8:	bl	8b98 <_ZdaPv@plt>
    90ec:	cmp	r5, #0
    90f0:	beq	95e0 <fputs@plt+0x9c4>
    90f4:	ldr	r2, [sp, #4]
    90f8:	movw	fp, #20732	; 0x50fc
    90fc:	movw	r8, #20828	; 0x515c
    9100:	movt	fp, #1
    9104:	movt	r8, #1
    9108:	mov	r3, #1
    910c:	str	r2, [fp]
    9110:	str	r3, [r8]
    9114:	bl	8ff0 <fputs@plt+0x3d4>
    9118:	movw	r9, #20688	; 0x50d0
    911c:	movw	r7, #20676	; 0x50c4
    9120:	movt	r9, #1
    9124:	movt	r7, #1
    9128:	mov	r6, #0
    912c:	mov	r0, r5
    9130:	bl	8ae4 <_IO_getc@plt>
    9134:	cmn	r0, #1
    9138:	mov	r4, r0
    913c:	beq	9494 <fputs@plt+0x878>
    9140:	cmp	r6, #6
    9144:	ldrls	pc, [pc, r6, lsl #2]
    9148:	b	9304 <fputs@plt+0x6e8>
    914c:	strdeq	r9, [r0], -r4
    9150:	ldrdeq	r9, [r0], -r0
    9154:			; <UNDEFINED> instruction: 0x000092b0
    9158:	andeq	r9, r0, ip, lsl #5
    915c:	andeq	r9, r0, r8, lsl r2
    9160:	ldrdeq	r9, [r0], -ip
    9164:	andeq	r9, r0, r8, ror #2
    9168:	cmp	r0, #10
    916c:	cmpne	r0, #32
    9170:	beq	9180 <fputs@plt+0x564>
    9174:	ldr	r3, [r9, #16]
    9178:	cmp	r3, #0
    917c:	beq	9478 <fputs@plt+0x85c>
    9180:	add	r6, sp, #32
    9184:	mov	r0, r6
    9188:	bl	b7f8 <fputs@plt+0x2bdc>
    918c:	b	91ac <fputs@plt+0x590>
    9190:	ldr	r2, [sp, #32]
    9194:	add	r1, r3, #1
    9198:	mov	r0, r5
    919c:	str	r1, [sp, #36]	; 0x24
    91a0:	strb	r4, [r2, r3]
    91a4:	bl	8ae4 <_IO_getc@plt>
    91a8:	mov	r4, r0
    91ac:	cmp	r4, #10
    91b0:	cmnne	r4, #1
    91b4:	ldr	r3, [sp, #36]	; 0x24
    91b8:	beq	9318 <fputs@plt+0x6fc>
    91bc:	ldr	r2, [sp, #40]	; 0x28
    91c0:	uxtb	r4, r4
    91c4:	cmp	r3, r2
    91c8:	blt	9190 <fputs@plt+0x574>
    91cc:	mov	r0, r6
    91d0:	bl	baa8 <fputs@plt+0x2e8c>
    91d4:	ldr	r3, [sp, #36]	; 0x24
    91d8:	b	9190 <fputs@plt+0x574>
    91dc:	cmp	r0, #102	; 0x66
    91e0:	beq	93f8 <fputs@plt+0x7dc>
    91e4:	mov	r0, #46	; 0x2e
    91e8:	ldr	r1, [r7]
    91ec:	bl	8be0 <_IO_putc@plt>
    91f0:	mov	r0, #108	; 0x6c
    91f4:	ldr	r1, [r7]
    91f8:	bl	8be0 <_IO_putc@plt>
    91fc:	mov	r0, r4
    9200:	ldr	r1, [r7]
    9204:	bl	8be0 <_IO_putc@plt>
    9208:	cmp	r4, #10
    920c:	beq	92e0 <fputs@plt+0x6c4>
    9210:	mov	r6, #1
    9214:	b	912c <fputs@plt+0x510>
    9218:	cmp	r0, #10
    921c:	cmpne	r0, #32
    9220:	beq	9230 <fputs@plt+0x614>
    9224:	ldr	r3, [r9, #16]
    9228:	cmp	r3, #0
    922c:	beq	9450 <fputs@plt+0x834>
    9230:	add	r6, sp, #32
    9234:	mov	r0, r6
    9238:	bl	b7f8 <fputs@plt+0x2bdc>
    923c:	b	925c <fputs@plt+0x640>
    9240:	ldr	r2, [sp, #32]
    9244:	add	r1, r3, #1
    9248:	mov	r0, r5
    924c:	str	r1, [sp, #36]	; 0x24
    9250:	strb	r4, [r2, r3]
    9254:	bl	8ae4 <_IO_getc@plt>
    9258:	mov	r4, r0
    925c:	cmp	r4, #10
    9260:	cmnne	r4, #1
    9264:	ldr	r3, [sp, #36]	; 0x24
    9268:	beq	9394 <fputs@plt+0x778>
    926c:	ldr	r2, [sp, #40]	; 0x28
    9270:	uxtb	r4, r4
    9274:	cmp	r3, r2
    9278:	blt	9240 <fputs@plt+0x624>
    927c:	mov	r0, r6
    9280:	bl	baa8 <fputs@plt+0x2e8c>
    9284:	ldr	r3, [sp, #36]	; 0x24
    9288:	b	9240 <fputs@plt+0x624>
    928c:	cmp	r0, #111	; 0x6f
    9290:	beq	93f0 <fputs@plt+0x7d4>
    9294:	mov	r0, #46	; 0x2e
    9298:	ldr	r1, [r7]
    929c:	bl	8be0 <_IO_putc@plt>
    92a0:	mov	r0, #115	; 0x73
    92a4:	ldr	r1, [r7]
    92a8:	bl	8be0 <_IO_putc@plt>
    92ac:	b	91fc <fputs@plt+0x5e0>
    92b0:	cmp	r0, #115	; 0x73
    92b4:	beq	9448 <fputs@plt+0x82c>
    92b8:	cmp	r0, #108	; 0x6c
    92bc:	beq	9400 <fputs@plt+0x7e4>
    92c0:	mov	r0, #46	; 0x2e
    92c4:	ldr	r1, [r7]
    92c8:	bl	8be0 <_IO_putc@plt>
    92cc:	b	91fc <fputs@plt+0x5e0>
    92d0:	ldr	r1, [r7]
    92d4:	bl	8be0 <_IO_putc@plt>
    92d8:	cmp	r4, #10
    92dc:	bne	912c <fputs@plt+0x510>
    92e0:	ldr	r3, [r8]
    92e4:	mov	r6, #0
    92e8:	add	r3, r3, #1
    92ec:	str	r3, [r8]
    92f0:	b	912c <fputs@plt+0x510>
    92f4:	cmp	r0, #46	; 0x2e
    92f8:	bne	91fc <fputs@plt+0x5e0>
    92fc:	mov	r6, #2
    9300:	b	912c <fputs@plt+0x510>
    9304:	movw	r1, #50664	; 0xc5e8
    9308:	mov	r0, #276	; 0x114
    930c:	movt	r1, #0
    9310:	bl	9878 <fputs@plt+0xc5c>
    9314:	b	912c <fputs@plt+0x510>
    9318:	ldr	r1, [sp, #40]	; 0x28
    931c:	ldr	r2, [r8]
    9320:	cmp	r3, r1
    9324:	add	r2, r2, #1
    9328:	str	r2, [r8]
    932c:	bge	9418 <fputs@plt+0x7fc>
    9330:	ldr	r2, [sp, #32]
    9334:	add	r0, r3, #1
    9338:	mov	r1, #10
    933c:	str	r0, [sp, #36]	; 0x24
    9340:	strb	r1, [r2, r3]
    9344:	ldr	r3, [sp, #36]	; 0x24
    9348:	ldr	r2, [sp, #40]	; 0x28
    934c:	cmp	r3, r2
    9350:	bge	9408 <fputs@plt+0x7ec>
    9354:	ldr	r2, [sp, #32]
    9358:	add	r0, r3, #1
    935c:	mov	r1, #0
    9360:	str	r0, [sp, #36]	; 0x24
    9364:	strb	r1, [r2, r3]
    9368:	ldr	r0, [sp, #32]
    936c:	bl	ae28 <fputs@plt+0x220c>
    9370:	movw	r1, #50652	; 0xc5dc
    9374:	mov	r0, #1
    9378:	movt	r1, #0
    937c:	ldr	r2, [sp, #32]
    9380:	bl	8ad8 <__printf_chk@plt>
    9384:	mov	r0, r6
    9388:	bl	b95c <fputs@plt+0x2d40>
    938c:	mov	r6, #0
    9390:	b	912c <fputs@plt+0x510>
    9394:	ldr	r1, [sp, #40]	; 0x28
    9398:	ldr	r2, [r8]
    939c:	cmp	r3, r1
    93a0:	add	r2, r2, #1
    93a4:	str	r2, [r8]
    93a8:	bge	9438 <fputs@plt+0x81c>
    93ac:	ldr	r2, [sp, #32]
    93b0:	add	r0, r3, #1
    93b4:	mov	r1, #10
    93b8:	str	r0, [sp, #36]	; 0x24
    93bc:	strb	r1, [r2, r3]
    93c0:	ldr	r3, [sp, #36]	; 0x24
    93c4:	ldr	r2, [sp, #40]	; 0x28
    93c8:	cmp	r3, r2
    93cc:	bge	9428 <fputs@plt+0x80c>
    93d0:	ldr	r2, [sp, #32]
    93d4:	add	r0, r3, #1
    93d8:	mov	r1, #0
    93dc:	str	r0, [sp, #36]	; 0x24
    93e0:	strb	r1, [r2, r3]
    93e4:	ldr	r0, [sp, #32]
    93e8:	bl	9654 <fputs@plt+0xa38>
    93ec:	b	9384 <fputs@plt+0x768>
    93f0:	mov	r6, #4
    93f4:	b	912c <fputs@plt+0x510>
    93f8:	mov	r6, #6
    93fc:	b	912c <fputs@plt+0x510>
    9400:	mov	r6, #5
    9404:	b	912c <fputs@plt+0x510>
    9408:	mov	r0, r6
    940c:	bl	baa8 <fputs@plt+0x2e8c>
    9410:	ldr	r3, [sp, #36]	; 0x24
    9414:	b	9354 <fputs@plt+0x738>
    9418:	mov	r0, r6
    941c:	bl	baa8 <fputs@plt+0x2e8c>
    9420:	ldr	r3, [sp, #36]	; 0x24
    9424:	b	9330 <fputs@plt+0x714>
    9428:	mov	r0, r6
    942c:	bl	baa8 <fputs@plt+0x2e8c>
    9430:	ldr	r3, [sp, #36]	; 0x24
    9434:	b	93d0 <fputs@plt+0x7b4>
    9438:	mov	r0, r6
    943c:	bl	baa8 <fputs@plt+0x2e8c>
    9440:	ldr	r3, [sp, #36]	; 0x24
    9444:	b	93ac <fputs@plt+0x790>
    9448:	mov	r6, #3
    944c:	b	912c <fputs@plt+0x510>
    9450:	movw	r0, #50648	; 0xc5d8
    9454:	mov	r1, #1
    9458:	movt	r0, #0
    945c:	mov	r2, #3
    9460:	ldr	r3, [r7]
    9464:	bl	8b44 <fwrite@plt>
    9468:	mov	r0, r4
    946c:	ldr	r1, [r7]
    9470:	bl	8be0 <_IO_putc@plt>
    9474:	b	9210 <fputs@plt+0x5f4>
    9478:	movw	r0, #50660	; 0xc5e4
    947c:	mov	r1, #1
    9480:	movt	r0, #0
    9484:	mov	r2, #3
    9488:	ldr	r3, [r7]
    948c:	bl	8b44 <fwrite@plt>
    9490:	b	9468 <fputs@plt+0x84c>
    9494:	sub	r6, r6, #1
    9498:	cmp	r6, #5
    949c:	ldrls	pc, [pc, r6, lsl #2]
    94a0:	b	94d0 <fputs@plt+0x8b4>
    94a4:			; <UNDEFINED> instruction: 0x000094bc
    94a8:	andeq	r9, r0, r4, ror r5
    94ac:	muleq	r0, r8, r5
    94b0:			; <UNDEFINED> instruction: 0x000095bc
    94b4:	andeq	r9, r0, ip, lsr #10
    94b8:	andeq	r9, r0, r0, asr r5
    94bc:	movw	r3, #20676	; 0x50c4
    94c0:	movt	r3, #1
    94c4:	mov	r0, #10
    94c8:	ldr	r1, [r3]
    94cc:	bl	8be0 <_IO_putc@plt>
    94d0:	movw	r3, #20672	; 0x50c0
    94d4:	movt	r3, #1
    94d8:	ldr	r3, [r3]
    94dc:	cmp	r5, r3
    94e0:	beq	94ec <fputs@plt+0x8d0>
    94e4:	mov	r0, r5
    94e8:	bl	8ac0 <fclose@plt>
    94ec:	mov	r4, #1
    94f0:	mov	r3, #0
    94f4:	str	r3, [fp]
    94f8:	add	r0, sp, #4
    94fc:	bl	b95c <fputs@plt+0x2d40>
    9500:	ldr	r2, [sp, #52]	; 0x34
    9504:	ldr	r3, [sl]
    9508:	mov	r0, r4
    950c:	cmp	r2, r3
    9510:	bne	963c <fputs@plt+0xa20>
    9514:	add	sp, sp, #60	; 0x3c
    9518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    951c:	add	r0, sp, #4
    9520:	bl	baa8 <fputs@plt+0x2e8c>
    9524:	ldr	r3, [sp, #8]
    9528:	b	90c8 <fputs@plt+0x4ac>
    952c:	movw	r3, #20676	; 0x50c4
    9530:	movt	r3, #1
    9534:	movw	r0, #50680	; 0xc5f8
    9538:	mov	r1, #1
    953c:	ldr	r3, [r3]
    9540:	movt	r0, #0
    9544:	mov	r2, #3
    9548:	bl	8b44 <fwrite@plt>
    954c:	b	94d0 <fputs@plt+0x8b4>
    9550:	movw	r3, #20676	; 0x50c4
    9554:	movt	r3, #1
    9558:	movw	r0, #50688	; 0xc600
    955c:	mov	r1, #1
    9560:	ldr	r3, [r3]
    9564:	movt	r0, #0
    9568:	mov	r2, #4
    956c:	bl	8b44 <fwrite@plt>
    9570:	b	94d0 <fputs@plt+0x8b4>
    9574:	movw	r3, #20676	; 0x50c4
    9578:	movt	r3, #1
    957c:	movw	r0, #50676	; 0xc5f4
    9580:	mov	r1, #1
    9584:	ldr	r3, [r3]
    9588:	movt	r0, #0
    958c:	mov	r2, #2
    9590:	bl	8b44 <fwrite@plt>
    9594:	b	94d0 <fputs@plt+0x8b4>
    9598:	movw	r3, #20676	; 0x50c4
    959c:	movt	r3, #1
    95a0:	movw	r0, #50684	; 0xc5fc
    95a4:	mov	r1, #1
    95a8:	ldr	r3, [r3]
    95ac:	movt	r0, #0
    95b0:	mov	r2, #3
    95b4:	bl	8b44 <fwrite@plt>
    95b8:	b	94d0 <fputs@plt+0x8b4>
    95bc:	movw	r3, #20676	; 0x50c4
    95c0:	movt	r3, #1
    95c4:	movw	r0, #50696	; 0xc608
    95c8:	mov	r1, #1
    95cc:	ldr	r3, [r3]
    95d0:	movt	r0, #0
    95d4:	mov	r2, #4
    95d8:	bl	8b44 <fwrite@plt>
    95dc:	b	94d0 <fputs@plt+0x8b4>
    95e0:	ldr	r1, [sp, #4]
    95e4:	add	r0, sp, #16
    95e8:	bl	98e0 <fputs@plt+0xcc4>
    95ec:	mov	r0, r4
    95f0:	add	r6, sp, #32
    95f4:	bl	8a84 <strerror@plt>
    95f8:	mov	r1, r0
    95fc:	mov	r0, r6
    9600:	bl	98e0 <fputs@plt+0xcc4>
    9604:	movw	r0, #50628	; 0xc5c4
    9608:	movw	r3, #20712	; 0x50e8
    960c:	add	r1, sp, #16
    9610:	mov	r2, r6
    9614:	movt	r0, #0
    9618:	movt	r3, #1
    961c:	bl	9d84 <fputs@plt+0x1168>
    9620:	mov	r4, #0
    9624:	b	94f8 <fputs@plt+0x8dc>
    9628:	mov	r0, r6
    962c:	bl	b95c <fputs@plt+0x2d40>
    9630:	add	r0, sp, #4
    9634:	bl	b95c <fputs@plt+0x2d40>
    9638:	bl	8b08 <__cxa_end_cleanup@plt>
    963c:	bl	8b68 <__stack_chk_fail@plt>
    9640:	b	9630 <fputs@plt+0xa14>
    9644:	mov	r0, r6
    9648:	bl	b95c <fputs@plt+0x2d40>
    964c:	b	9630 <fputs@plt+0xa14>
    9650:	ldrdeq	r5, [r1], -r8
    9654:	push	{r4, r5, r6, r7, r8, r9, lr}
    9658:	movw	r6, #20664	; 0x50b8
    965c:	movt	r6, #1
    9660:	ldrb	r2, [r0]
    9664:	sub	sp, sp, #20
    9668:	mov	r7, r0
    966c:	ldr	r3, [r6]
    9670:	cmp	r2, #32
    9674:	str	r3, [sp, #12]
    9678:	bne	9860 <fputs@plt+0xc44>
    967c:	add	r3, r0, #1
    9680:	mov	r4, r3
    9684:	add	r3, r3, #1
    9688:	ldrb	r2, [r4]
    968c:	cmp	r2, #32
    9690:	beq	9680 <fputs@plt+0xa64>
    9694:	mov	r0, sp
    9698:	mov	r8, #92	; 0x5c
    969c:	bl	b7f8 <fputs@plt+0x2bdc>
    96a0:	ldrb	r5, [r4]
    96a4:	mov	r9, #32
    96a8:	tst	r5, #223	; 0xdf
    96ac:	beq	975c <fputs@plt+0xb40>
    96b0:	cmp	r5, #10
    96b4:	beq	975c <fputs@plt+0xb40>
    96b8:	cmp	r5, #92	; 0x5c
    96bc:	bne	972c <fputs@plt+0xb10>
    96c0:	ldrb	r3, [r4, #1]
    96c4:	add	r4, r4, #1
    96c8:	cmp	r3, #92	; 0x5c
    96cc:	beq	97fc <fputs@plt+0xbe0>
    96d0:	cmp	r3, #101	; 0x65
    96d4:	beq	97fc <fputs@plt+0xbe0>
    96d8:	cmp	r3, #32
    96dc:	beq	97d8 <fputs@plt+0xbbc>
    96e0:	movw	r4, #20676	; 0x50c4
    96e4:	movt	r4, #1
    96e8:	movw	r0, #50648	; 0xc5d8
    96ec:	mov	r1, #1
    96f0:	ldr	r3, [r4]
    96f4:	movt	r0, #0
    96f8:	mov	r2, #3
    96fc:	bl	8b44 <fwrite@plt>
    9700:	mov	r0, r7
    9704:	ldr	r1, [r4]
    9708:	bl	8c1c <fputs@plt>
    970c:	mov	r0, sp
    9710:	bl	b95c <fputs@plt+0x2d40>
    9714:	ldr	r2, [sp, #12]
    9718:	ldr	r3, [r6]
    971c:	cmp	r2, r3
    9720:	bne	9874 <fputs@plt+0xc58>
    9724:	add	sp, sp, #20
    9728:	pop	{r4, r5, r6, r7, r8, r9, pc}
    972c:	ldr	r3, [sp, #4]
    9730:	ldr	r2, [sp, #8]
    9734:	cmp	r3, r2
    9738:	bge	97c8 <fputs@plt+0xbac>
    973c:	ldr	r2, [sp]
    9740:	add	r1, r3, #1
    9744:	str	r1, [sp, #4]
    9748:	strb	r5, [r2, r3]
    974c:	add	r4, r4, #1
    9750:	ldrb	r5, [r4]
    9754:	tst	r5, #223	; 0xdf
    9758:	bne	96b0 <fputs@plt+0xa94>
    975c:	ldr	r3, [sp, #4]
    9760:	cmp	r3, #0
    9764:	ble	96e0 <fputs@plt+0xac4>
    9768:	ldr	r2, [sp, #8]
    976c:	cmp	r3, r2
    9770:	bge	9850 <fputs@plt+0xc34>
    9774:	ldr	r2, [sp]
    9778:	movw	r4, #20828	; 0x515c
    977c:	movt	r4, #1
    9780:	add	r0, r3, #1
    9784:	mov	r1, #0
    9788:	str	r0, [sp, #4]
    978c:	movw	r5, #20732	; 0x50fc
    9790:	strb	r1, [r2, r3]
    9794:	movt	r5, #1
    9798:	ldr	r8, [r4]
    979c:	ldr	r0, [sp]
    97a0:	sub	r3, r8, #1
    97a4:	ldr	r9, [r5]
    97a8:	str	r3, [r4]
    97ac:	bl	9060 <fputs@plt+0x444>
    97b0:	cmp	r0, #0
    97b4:	bne	9840 <fputs@plt+0xc24>
    97b8:	ldr	r3, [r4]
    97bc:	add	r3, r3, #1
    97c0:	str	r3, [r4]
    97c4:	b	96e0 <fputs@plt+0xac4>
    97c8:	mov	r0, sp
    97cc:	bl	baa8 <fputs@plt+0x2e8c>
    97d0:	ldr	r3, [sp, #4]
    97d4:	b	973c <fputs@plt+0xb20>
    97d8:	ldr	r3, [sp, #4]
    97dc:	ldr	r2, [sp, #8]
    97e0:	cmp	r3, r2
    97e4:	bge	9820 <fputs@plt+0xc04>
    97e8:	ldr	r2, [sp]
    97ec:	add	r1, r3, #1
    97f0:	str	r1, [sp, #4]
    97f4:	strb	r9, [r2, r3]
    97f8:	b	974c <fputs@plt+0xb30>
    97fc:	ldr	r3, [sp, #4]
    9800:	ldr	r2, [sp, #8]
    9804:	cmp	r3, r2
    9808:	bge	9830 <fputs@plt+0xc14>
    980c:	ldr	r2, [sp]
    9810:	add	r1, r3, #1
    9814:	str	r1, [sp, #4]
    9818:	strb	r8, [r2, r3]
    981c:	b	974c <fputs@plt+0xb30>
    9820:	mov	r0, sp
    9824:	bl	baa8 <fputs@plt+0x2e8c>
    9828:	ldr	r3, [sp, #4]
    982c:	b	97e8 <fputs@plt+0xbcc>
    9830:	mov	r0, sp
    9834:	bl	baa8 <fputs@plt+0x2e8c>
    9838:	ldr	r3, [sp, #4]
    983c:	b	980c <fputs@plt+0xbf0>
    9840:	str	r9, [r5]
    9844:	str	r8, [r4]
    9848:	bl	8ff0 <fputs@plt+0x3d4>
    984c:	b	970c <fputs@plt+0xaf0>
    9850:	mov	r0, sp
    9854:	bl	baa8 <fputs@plt+0x2e8c>
    9858:	ldr	r3, [sp, #4]
    985c:	b	9774 <fputs@plt+0xb58>
    9860:	mov	r4, r0
    9864:	b	9694 <fputs@plt+0xa78>
    9868:	mov	r0, sp
    986c:	bl	b95c <fputs@plt+0x2d40>
    9870:	bl	8b08 <__cxa_end_cleanup@plt>
    9874:	bl	8b68 <__stack_chk_fail@plt>
    9878:	movw	r2, #20832	; 0x5160
    987c:	movt	r2, #1
    9880:	push	{r4, r5, r6, lr}
    9884:	movw	r4, #20680	; 0x50c8
    9888:	ldr	r3, [r2]
    988c:	sub	sp, sp, #8
    9890:	mov	r6, r0
    9894:	mov	r5, r1
    9898:	cmp	r3, #0
    989c:	movt	r4, #1
    98a0:	beq	98b8 <fputs@plt+0xc9c>
    98a4:	movw	r2, #50780	; 0xc65c
    98a8:	ldr	r0, [r4]
    98ac:	movt	r2, #0
    98b0:	mov	r1, #1
    98b4:	bl	8b74 <__fprintf_chk@plt>
    98b8:	mov	r3, r6
    98bc:	mov	r1, #1
    98c0:	ldr	r0, [r4]
    98c4:	movw	r2, #50788	; 0xc664
    98c8:	str	r5, [sp]
    98cc:	movt	r2, #0
    98d0:	bl	8b74 <__fprintf_chk@plt>
    98d4:	ldr	r0, [r4]
    98d8:	bl	8b14 <fflush@plt>
    98dc:	bl	8a90 <abort@plt>
    98e0:	cmp	r1, #0
    98e4:	movw	r3, #50832	; 0xc690
    98e8:	movt	r3, #0
    98ec:	mov	ip, #1
    98f0:	str	ip, [r0]
    98f4:	moveq	r1, r3
    98f8:	str	r1, [r0, #8]
    98fc:	bx	lr
    9900:	mov	r2, #0
    9904:	str	r2, [r0]
    9908:	bx	lr
    990c:	mov	r2, #3
    9910:	str	r1, [r0, #8]
    9914:	str	r2, [r0]
    9918:	bx	lr
    991c:	mov	r2, #4
    9920:	str	r1, [r0, #8]
    9924:	str	r2, [r0]
    9928:	bx	lr
    992c:	mov	r2, #2
    9930:	strb	r1, [r0, #8]
    9934:	str	r2, [r0]
    9938:	bx	lr
    993c:	mov	r2, #2
    9940:	strb	r1, [r0, #8]
    9944:	str	r2, [r0]
    9948:	bx	lr
    994c:	mov	r2, #5
    9950:	vstr	d0, [r0, #8]
    9954:	str	r2, [r0]
    9958:	bx	lr
    995c:	ldr	r0, [r0]
    9960:	rsbs	r0, r0, #1
    9964:	movcc	r0, #0
    9968:	bx	lr
    996c:	ldr	r3, [r0]
    9970:	push	{r4, r5, lr}
    9974:	sub	r3, r3, #1
    9978:	sub	sp, sp, #12
    997c:	cmp	r3, #4
    9980:	ldrls	pc, [pc, r3, lsl #2]
    9984:	b	99c0 <fputs@plt+0xda4>
    9988:	andeq	r9, r0, r8, ror #19
    998c:	andeq	r9, r0, r4, lsl #20
    9990:	andeq	r9, r0, r0, lsr #20
    9994:	andeq	r9, r0, r8, asr #19
    9998:	muleq	r0, ip, r9
    999c:	ldrd	r4, [r0, #8]
    99a0:	movw	r3, #20680	; 0x50c8
    99a4:	movt	r3, #1
    99a8:	movw	r2, #50840	; 0xc698
    99ac:	mov	r1, #1
    99b0:	movt	r2, #0
    99b4:	ldr	r0, [r3]
    99b8:	strd	r4, [sp]
    99bc:	bl	8b74 <__fprintf_chk@plt>
    99c0:	add	sp, sp, #12
    99c4:	pop	{r4, r5, pc}
    99c8:	ldr	r0, [r0, #8]
    99cc:	bl	ade4 <fputs@plt+0x21c8>
    99d0:	movw	r3, #20680	; 0x50c8
    99d4:	movt	r3, #1
    99d8:	ldr	r1, [r3]
    99dc:	add	sp, sp, #12
    99e0:	pop	{r4, r5, lr}
    99e4:	b	8c1c <fputs@plt>
    99e8:	movw	r3, #20680	; 0x50c8
    99ec:	movt	r3, #1
    99f0:	ldr	r0, [r0, #8]
    99f4:	ldr	r1, [r3]
    99f8:	add	sp, sp, #12
    99fc:	pop	{r4, r5, lr}
    9a00:	b	8c1c <fputs@plt>
    9a04:	movw	r3, #20680	; 0x50c8
    9a08:	movt	r3, #1
    9a0c:	ldrb	r0, [r0, #8]
    9a10:	ldr	r1, [r3]
    9a14:	add	sp, sp, #12
    9a18:	pop	{r4, r5, lr}
    9a1c:	b	8be0 <_IO_putc@plt>
    9a20:	ldr	r0, [r0, #8]
    9a24:	bl	ad5c <fputs@plt+0x2140>
    9a28:	movw	r3, #20680	; 0x50c8
    9a2c:	movt	r3, #1
    9a30:	ldr	r1, [r3]
    9a34:	add	sp, sp, #12
    9a38:	pop	{r4, r5, lr}
    9a3c:	b	8c1c <fputs@plt>
    9a40:	push	{r4, r5, r6, r7, r8, lr}
    9a44:	subs	r4, r0, #0
    9a48:	mov	r6, r1
    9a4c:	mov	r7, r2
    9a50:	mov	r8, r3
    9a54:	beq	9b8c <fputs@plt+0xf70>
    9a58:	movw	r5, #20680	; 0x50c8
    9a5c:	movt	r5, #1
    9a60:	ldrb	r0, [r4]
    9a64:	cmp	r0, #0
    9a68:	beq	9ae8 <fputs@plt+0xecc>
    9a6c:	cmp	r0, #37	; 0x25
    9a70:	bne	9b40 <fputs@plt+0xf24>
    9a74:	ldrb	ip, [r4, #1]
    9a78:	add	r4, r4, #2
    9a7c:	sub	ip, ip, #37	; 0x25
    9a80:	cmp	ip, #14
    9a84:	ldrls	pc, [pc, ip, lsl #2]
    9a88:	b	9b2c <fputs@plt+0xf10>
    9a8c:	andeq	r9, r0, ip, lsl fp
    9a90:	andeq	r9, r0, ip, lsr #22
    9a94:	andeq	r9, r0, ip, lsr #22
    9a98:	andeq	r9, r0, ip, lsr #22
    9a9c:	andeq	r9, r0, ip, lsr #22
    9aa0:	andeq	r9, r0, ip, lsr #22
    9aa4:	andeq	r9, r0, ip, lsr #22
    9aa8:	andeq	r9, r0, ip, lsr #22
    9aac:	andeq	r9, r0, ip, lsr #22
    9ab0:	andeq	r9, r0, ip, lsr #22
    9ab4:	andeq	r9, r0, ip, lsr #22
    9ab8:	andeq	r9, r0, ip, lsr #22
    9abc:	andeq	r9, r0, r4, lsl #22
    9ac0:	andeq	r9, r0, ip, ror #21
    9ac4:	andeq	r9, r0, r8, asr #21
    9ac8:	ldr	r3, [r8]
    9acc:	cmp	r3, #0
    9ad0:	beq	9b50 <fputs@plt+0xf34>
    9ad4:	mov	r0, r8
    9ad8:	bl	996c <fputs@plt+0xd50>
    9adc:	ldrb	r0, [r4]
    9ae0:	cmp	r0, #0
    9ae4:	bne	9a6c <fputs@plt+0xe50>
    9ae8:	pop	{r4, r5, r6, r7, r8, pc}
    9aec:	ldr	r3, [r7]
    9af0:	cmp	r3, #0
    9af4:	beq	9b78 <fputs@plt+0xf5c>
    9af8:	mov	r0, r7
    9afc:	bl	996c <fputs@plt+0xd50>
    9b00:	b	9a60 <fputs@plt+0xe44>
    9b04:	ldr	r3, [r6]
    9b08:	cmp	r3, #0
    9b0c:	beq	9b64 <fputs@plt+0xf48>
    9b10:	mov	r0, r6
    9b14:	bl	996c <fputs@plt+0xd50>
    9b18:	b	9a60 <fputs@plt+0xe44>
    9b1c:	ldr	r1, [r5]
    9b20:	mov	r0, #37	; 0x25
    9b24:	bl	8b80 <fputc@plt>
    9b28:	b	9a60 <fputs@plt+0xe44>
    9b2c:	movw	r1, #50844	; 0xc69c
    9b30:	mov	r0, #121	; 0x79
    9b34:	movt	r1, #0
    9b38:	bl	9878 <fputs@plt+0xc5c>
    9b3c:	b	9a60 <fputs@plt+0xe44>
    9b40:	ldr	r1, [r5]
    9b44:	add	r4, r4, #1
    9b48:	bl	8be0 <_IO_putc@plt>
    9b4c:	b	9a60 <fputs@plt+0xe44>
    9b50:	movw	r1, #50844	; 0xc69c
    9b54:	mov	r0, #117	; 0x75
    9b58:	movt	r1, #0
    9b5c:	bl	9878 <fputs@plt+0xc5c>
    9b60:	b	9ad4 <fputs@plt+0xeb8>
    9b64:	movw	r1, #50844	; 0xc69c
    9b68:	mov	r0, #109	; 0x6d
    9b6c:	movt	r1, #0
    9b70:	bl	9878 <fputs@plt+0xc5c>
    9b74:	b	9b10 <fputs@plt+0xef4>
    9b78:	movw	r1, #50844	; 0xc69c
    9b7c:	mov	r0, #113	; 0x71
    9b80:	movt	r1, #0
    9b84:	bl	9878 <fputs@plt+0xc5c>
    9b88:	b	9af8 <fputs@plt+0xedc>
    9b8c:	movw	r1, #50844	; 0xc69c
    9b90:	mov	r0, #99	; 0x63
    9b94:	movt	r1, #0
    9b98:	bl	9878 <fputs@plt+0xc5c>
    9b9c:	b	9a58 <fputs@plt+0xe3c>
    9ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9ba4:	movw	ip, #20832	; 0x5160
    9ba8:	sub	sp, sp, #20
    9bac:	movt	ip, #1
    9bb0:	movw	r4, #20680	; 0x50c8
    9bb4:	mov	r5, r0
    9bb8:	str	r1, [sp, #12]
    9bbc:	mov	sl, r2
    9bc0:	ldr	r1, [ip]
    9bc4:	mov	r6, r3
    9bc8:	ldr	fp, [sp, #56]	; 0x38
    9bcc:	movt	r4, #1
    9bd0:	cmp	r1, #0
    9bd4:	ldr	r9, [sp, #60]	; 0x3c
    9bd8:	ldr	r8, [sp, #64]	; 0x40
    9bdc:	ldr	r7, [sp, #68]	; 0x44
    9be0:	beq	9c00 <fputs@plt+0xfe4>
    9be4:	mov	r3, r1
    9be8:	movw	r2, #50876	; 0xc6bc
    9bec:	mov	r1, #1
    9bf0:	ldr	r0, [r4]
    9bf4:	movt	r2, #0
    9bf8:	bl	8b74 <__fprintf_chk@plt>
    9bfc:	mov	r1, #1
    9c00:	mvn	r3, sl
    9c04:	cmp	r5, #0
    9c08:	lsr	r3, r3, #31
    9c0c:	moveq	r3, #0
    9c10:	cmp	r3, #0
    9c14:	beq	9c68 <fputs@plt+0x104c>
    9c18:	mov	r0, r5
    9c1c:	movw	r1, #50744	; 0xc638
    9c20:	movt	r1, #0
    9c24:	bl	8bf8 <strcmp@plt>
    9c28:	movw	r3, #50856	; 0xc6a8
    9c2c:	ldr	r2, [sp, #12]
    9c30:	movt	r3, #0
    9c34:	cmp	r0, #0
    9c38:	ldr	r0, [r4]
    9c3c:	moveq	r5, r3
    9c40:	cmp	r2, #0
    9c44:	mov	r3, r5
    9c48:	beq	9cfc <fputs@plt+0x10e0>
    9c4c:	str	r2, [sp]
    9c50:	mov	r1, #1
    9c54:	movw	r2, #50880	; 0xc6c0
    9c58:	str	sl, [sp, #4]
    9c5c:	movt	r2, #0
    9c60:	bl	8b74 <__fprintf_chk@plt>
    9c64:	mov	r1, #1
    9c68:	cmp	r6, #0
    9c6c:	beq	9ce0 <fputs@plt+0x10c4>
    9c70:	cmp	r6, #2
    9c74:	beq	9cb8 <fputs@plt+0x109c>
    9c78:	cmp	r1, #0
    9c7c:	bne	9cd0 <fputs@plt+0x10b4>
    9c80:	mov	r2, r8
    9c84:	mov	r3, r7
    9c88:	mov	r0, fp
    9c8c:	mov	r1, r9
    9c90:	bl	9a40 <fputs@plt+0xe24>
    9c94:	ldr	r1, [r4]
    9c98:	mov	r0, #10
    9c9c:	bl	8b80 <fputc@plt>
    9ca0:	ldr	r0, [r4]
    9ca4:	bl	8b14 <fflush@plt>
    9ca8:	cmp	r6, #2
    9cac:	beq	9d18 <fputs@plt+0x10fc>
    9cb0:	add	sp, sp, #20
    9cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9cb8:	movw	r0, #50900	; 0xc6d4
    9cbc:	mov	r1, #1
    9cc0:	movt	r0, #0
    9cc4:	mov	r2, #12
    9cc8:	ldr	r3, [r4]
    9ccc:	bl	8b44 <fwrite@plt>
    9cd0:	ldr	r1, [r4]
    9cd4:	mov	r0, #32
    9cd8:	bl	8b80 <fputc@plt>
    9cdc:	b	9c80 <fputs@plt+0x1064>
    9ce0:	movw	r0, #50916	; 0xc6e4
    9ce4:	mov	r1, #1
    9ce8:	mov	r2, #8
    9cec:	ldr	r3, [r4]
    9cf0:	movt	r0, #0
    9cf4:	bl	8b44 <fwrite@plt>
    9cf8:	b	9cd0 <fputs@plt+0x10b4>
    9cfc:	mov	r1, #1
    9d00:	str	sl, [sp]
    9d04:	movw	r2, #50892	; 0xc6cc
    9d08:	movt	r2, #0
    9d0c:	bl	8b74 <__fprintf_chk@plt>
    9d10:	mov	r1, #1
    9d14:	b	9c68 <fputs@plt+0x104c>
    9d18:	add	sp, sp, #20
    9d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9d20:	b	9ec8 <fputs@plt+0x12ac>
    9d24:	push	{r4, r5, r6, lr}
    9d28:	movw	ip, #20828	; 0x515c
    9d2c:	sub	sp, sp, #16
    9d30:	movt	ip, #1
    9d34:	movw	r4, #20732	; 0x50fc
    9d38:	movw	lr, #20728	; 0x50f8
    9d3c:	movt	r4, #1
    9d40:	movt	lr, #1
    9d44:	ldr	r6, [r4]
    9d48:	mov	r4, r0
    9d4c:	ldr	r5, [lr]
    9d50:	ldr	lr, [ip]
    9d54:	ldr	ip, [sp, #32]
    9d58:	mov	r0, r6
    9d5c:	str	r1, [sp]
    9d60:	mov	r1, r5
    9d64:	str	r2, [sp, #4]
    9d68:	mov	r2, lr
    9d6c:	str	r3, [sp, #8]
    9d70:	mov	r3, r4
    9d74:	str	ip, [sp, #12]
    9d78:	bl	9ba0 <fputs@plt+0xf84>
    9d7c:	add	sp, sp, #16
    9d80:	pop	{r4, r5, r6, pc}
    9d84:	push	{lr}		; (str lr, [sp, #-4]!)
    9d88:	sub	sp, sp, #12
    9d8c:	mov	lr, r1
    9d90:	mov	ip, r2
    9d94:	mov	r1, r0
    9d98:	str	r3, [sp]
    9d9c:	mov	r2, lr
    9da0:	mov	r0, #1
    9da4:	mov	r3, ip
    9da8:	bl	9d24 <fputs@plt+0x1108>
    9dac:	add	sp, sp, #12
    9db0:	pop	{pc}		; (ldr pc, [sp], #4)
    9db4:	push	{lr}		; (str lr, [sp, #-4]!)
    9db8:	sub	sp, sp, #12
    9dbc:	mov	lr, r1
    9dc0:	mov	ip, r2
    9dc4:	mov	r1, r0
    9dc8:	str	r3, [sp]
    9dcc:	mov	r2, lr
    9dd0:	mov	r0, #0
    9dd4:	mov	r3, ip
    9dd8:	bl	9d24 <fputs@plt+0x1108>
    9ddc:	add	sp, sp, #12
    9de0:	pop	{pc}		; (ldr pc, [sp], #4)
    9de4:	push	{lr}		; (str lr, [sp, #-4]!)
    9de8:	sub	sp, sp, #12
    9dec:	mov	lr, r1
    9df0:	mov	ip, r2
    9df4:	mov	r1, r0
    9df8:	str	r3, [sp]
    9dfc:	mov	r2, lr
    9e00:	mov	r0, #2
    9e04:	mov	r3, ip
    9e08:	bl	9d24 <fputs@plt+0x1108>
    9e0c:	add	sp, sp, #12
    9e10:	pop	{pc}		; (ldr pc, [sp], #4)
    9e14:	push	{r4, lr}
    9e18:	sub	sp, sp, #16
    9e1c:	mov	r4, r1
    9e20:	mov	r1, #0
    9e24:	ldr	lr, [sp, #24]
    9e28:	ldr	ip, [sp, #28]
    9e2c:	str	r2, [sp]
    9e30:	mov	r2, r4
    9e34:	str	r3, [sp, #4]
    9e38:	mov	r3, #1
    9e3c:	str	lr, [sp, #8]
    9e40:	str	ip, [sp, #12]
    9e44:	bl	9ba0 <fputs@plt+0xf84>
    9e48:	add	sp, sp, #16
    9e4c:	pop	{r4, pc}
    9e50:	push	{r4, lr}
    9e54:	sub	sp, sp, #16
    9e58:	mov	r4, r1
    9e5c:	mov	r1, #0
    9e60:	ldr	lr, [sp, #24]
    9e64:	ldr	ip, [sp, #28]
    9e68:	str	r2, [sp]
    9e6c:	mov	r2, r4
    9e70:	str	r3, [sp, #4]
    9e74:	mov	r3, r1
    9e78:	str	lr, [sp, #8]
    9e7c:	str	ip, [sp, #12]
    9e80:	bl	9ba0 <fputs@plt+0xf84>
    9e84:	add	sp, sp, #16
    9e88:	pop	{r4, pc}
    9e8c:	push	{r4, lr}
    9e90:	sub	sp, sp, #16
    9e94:	mov	r4, r1
    9e98:	mov	r1, #0
    9e9c:	ldr	lr, [sp, #24]
    9ea0:	ldr	ip, [sp, #28]
    9ea4:	str	r2, [sp]
    9ea8:	mov	r2, r4
    9eac:	str	r3, [sp, #4]
    9eb0:	mov	r3, #2
    9eb4:	str	lr, [sp, #8]
    9eb8:	str	ip, [sp, #12]
    9ebc:	bl	9ba0 <fputs@plt+0xf84>
    9ec0:	add	sp, sp, #16
    9ec4:	pop	{r4, pc}
    9ec8:	push	{r3, lr}
    9ecc:	mov	r0, #3
    9ed0:	bl	8c04 <exit@plt>
    9ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
    9ed8:	sub	sp, sp, #8
    9edc:	ldr	r6, [r1, #36]	; 0x24
    9ee0:	ldr	fp, [r1, #32]
    9ee4:	ldr	sl, [r1]
    9ee8:	add	r9, r0, r6, lsl #2
    9eec:	mov	r5, fp
    9ef0:	mov	r7, sl
    9ef4:	cmp	r6, r5
    9ef8:	cmpgt	r7, r6
    9efc:	ble	9f50 <fputs@plt+0x1334>
    9f00:	rsb	r4, r6, r7
    9f04:	rsb	r8, r5, r6
    9f08:	cmp	r4, r8
    9f0c:	bgt	9f6c <fputs@plt+0x1350>
    9f10:	cmp	r4, #0
    9f14:	add	r4, r5, r4
    9f18:	addgt	r5, r0, r5, lsl #2
    9f1c:	movgt	r3, r9
    9f20:	addgt	r8, r0, r4, lsl #2
    9f24:	ble	9f40 <fputs@plt+0x1324>
    9f28:	ldr	ip, [r3]
    9f2c:	ldr	r2, [r5]
    9f30:	str	ip, [r5], #4
    9f34:	cmp	r5, r8
    9f38:	str	r2, [r3], #4
    9f3c:	bne	9f28 <fputs@plt+0x130c>
    9f40:	mov	r5, r4
    9f44:	cmp	r6, r5
    9f48:	cmpgt	r7, r6
    9f4c:	bgt	9f00 <fputs@plt+0x12e4>
    9f50:	rsb	r6, r6, sl
    9f54:	str	sl, [r1, #36]	; 0x24
    9f58:	add	fp, fp, r6
    9f5c:	str	fp, [r1, #32]
    9f60:	add	sp, sp, #8
    9f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
    9f68:	bx	lr
    9f6c:	cmp	r8, #0
    9f70:	ble	9fac <fputs@plt+0x1390>
    9f74:	rsb	r2, r6, r5
    9f78:	add	r4, r8, r5
    9f7c:	add	r2, r7, r2
    9f80:	add	r3, r0, r5, lsl #2
    9f84:	add	r4, r0, r4, lsl #2
    9f88:	str	r1, [sp, #4]
    9f8c:	add	r2, r0, r2, lsl #2
    9f90:	ldr	r1, [r2]
    9f94:	ldr	ip, [r3]
    9f98:	str	r1, [r3], #4
    9f9c:	cmp	r3, r4
    9fa0:	str	ip, [r2], #4
    9fa4:	bne	9f90 <fputs@plt+0x1374>
    9fa8:	ldr	r1, [sp, #4]
    9fac:	rsb	r7, r8, r7
    9fb0:	b	9ef4 <fputs@plt+0x12d8>
    9fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9fb8:	sub	sp, sp, #68	; 0x44
    9fbc:	mov	r9, r2
    9fc0:	ldrb	r2, [r2]
    9fc4:	ldr	r4, [sp, #116]	; 0x74
    9fc8:	cmp	r2, #58	; 0x3a
    9fcc:	str	r3, [sp, #24]
    9fd0:	str	r1, [sp, #20]
    9fd4:	ldr	r3, [r4, #4]
    9fd8:	moveq	r3, #0
    9fdc:	subs	r6, r0, #0
    9fe0:	str	r3, [sp, #8]
    9fe4:	ble	a240 <fputs@plt+0x1624>
    9fe8:	ldr	r3, [r4]
    9fec:	mov	r2, #0
    9ff0:	str	r2, [r4, #12]
    9ff4:	cmp	r3, r2
    9ff8:	beq	a198 <fputs@plt+0x157c>
    9ffc:	ldr	r2, [r4, #16]
    a000:	cmp	r2, #0
    a004:	bne	a070 <fputs@plt+0x1454>
    a008:	ldr	r0, [sp, #112]	; 0x70
    a00c:	str	r3, [r4, #36]	; 0x24
    a010:	cmp	r0, #0
    a014:	str	r3, [r4, #32]
    a018:	mov	r3, #0
    a01c:	str	r3, [r4, #20]
    a020:	movne	r0, #1
    a024:	beq	a278 <fputs@plt+0x165c>
    a028:	str	r0, [r4, #28]
    a02c:	ldrb	r3, [r9]
    a030:	cmp	r3, #45	; 0x2d
    a034:	addeq	r9, r9, #1
    a038:	moveq	r3, #2
    a03c:	streq	r3, [r4, #24]
    a040:	beq	a068 <fputs@plt+0x144c>
    a044:	cmp	r3, #43	; 0x2b
    a048:	addeq	r9, r9, #1
    a04c:	moveq	r3, #0
    a050:	streq	r3, [r4, #24]
    a054:	beq	a068 <fputs@plt+0x144c>
    a058:	cmp	r0, #0
    a05c:	movne	r3, #0
    a060:	moveq	r3, #1
    a064:	str	r3, [r4, #24]
    a068:	mov	r3, #1
    a06c:	str	r3, [r4, #16]
    a070:	ldr	r7, [r4, #20]
    a074:	cmp	r7, #0
    a078:	beq	a1a4 <fputs@plt+0x1588>
    a07c:	ldrb	r3, [r7]
    a080:	cmp	r3, #0
    a084:	beq	a1a4 <fputs@plt+0x1588>
    a088:	ldr	r3, [sp, #24]
    a08c:	cmp	r3, #0
    a090:	beq	a0f8 <fputs@plt+0x14dc>
    a094:	ldr	r3, [r4]
    a098:	ldr	r0, [sp, #20]
    a09c:	str	r3, [sp, #12]
    a0a0:	ldr	r3, [r0, r3, lsl #2]
    a0a4:	str	r3, [sp, #28]
    a0a8:	ldr	r3, [sp, #12]
    a0ac:	lsl	r3, r3, #2
    a0b0:	str	r3, [sp, #60]	; 0x3c
    a0b4:	ldr	r3, [sp, #28]
    a0b8:	ldrb	r3, [r3, #1]
    a0bc:	cmp	r3, #45	; 0x2d
    a0c0:	str	r3, [sp, #32]
    a0c4:	beq	a310 <fputs@plt+0x16f4>
    a0c8:	ldr	r3, [sp, #108]	; 0x6c
    a0cc:	cmp	r3, #0
    a0d0:	beq	a0f8 <fputs@plt+0x14dc>
    a0d4:	ldr	r0, [sp, #28]
    a0d8:	ldrb	r3, [r0, #2]
    a0dc:	cmp	r3, #0
    a0e0:	bne	a310 <fputs@plt+0x16f4>
    a0e4:	mov	r0, r9
    a0e8:	ldr	r1, [sp, #32]
    a0ec:	bl	8af0 <strchr@plt>
    a0f0:	cmp	r0, #0
    a0f4:	beq	a310 <fputs@plt+0x16f4>
    a0f8:	add	r8, r7, #1
    a0fc:	str	r8, [r4, #20]
    a100:	ldrb	r7, [r7]
    a104:	mov	r0, r9
    a108:	mov	r1, r7
    a10c:	mov	r5, r7
    a110:	bl	8af0 <strchr@plt>
    a114:	ldrb	r3, [r8]
    a118:	cmp	r3, #0
    a11c:	ldreq	r3, [r4]
    a120:	addeq	r3, r3, #1
    a124:	streq	r3, [r4]
    a128:	cmp	r0, #0
    a12c:	cmpne	r7, #58	; 0x3a
    a130:	bne	a2c4 <fputs@plt+0x16a8>
    a134:	ldr	r3, [sp, #8]
    a138:	cmp	r3, #0
    a13c:	beq	a184 <fputs@plt+0x1568>
    a140:	ldr	r3, [r4, #28]
    a144:	movw	r1, #20680	; 0x50c8
    a148:	movt	r1, #1
    a14c:	cmp	r3, #0
    a150:	ldreq	r0, [sp, #20]
    a154:	movwne	r2, #51176	; 0xc7e8
    a158:	ldrne	lr, [sp, #20]
    a15c:	movweq	r2, #51204	; 0xc804
    a160:	ldrne	r0, [r1]
    a164:	movtne	r2, #0
    a168:	ldreq	r3, [r0]
    a16c:	movteq	r2, #0
    a170:	ldreq	r0, [r1]
    a174:	mov	r1, #1
    a178:	ldrne	r3, [lr]
    a17c:	str	r7, [sp]
    a180:	bl	8b74 <__fprintf_chk@plt>
    a184:	str	r7, [r4, #8]
    a188:	mov	r5, #63	; 0x3f
    a18c:	mov	r0, r5
    a190:	add	sp, sp, #68	; 0x44
    a194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a198:	mov	r3, #1
    a19c:	str	r3, [r4]
    a1a0:	b	a008 <fputs@plt+0x13ec>
    a1a4:	ldr	r2, [r4]
    a1a8:	ldr	r3, [r4, #36]	; 0x24
    a1ac:	cmp	r3, r2
    a1b0:	ldr	r3, [r4, #32]
    a1b4:	strgt	r2, [r4, #36]	; 0x24
    a1b8:	cmp	r2, r3
    a1bc:	ldr	r3, [r4, #24]
    a1c0:	strlt	r2, [r4, #32]
    a1c4:	cmp	r3, #1
    a1c8:	beq	a4c4 <fputs@plt+0x18a8>
    a1cc:	cmp	r6, r2
    a1d0:	beq	a4b8 <fputs@plt+0x189c>
    a1d4:	ldr	r0, [sp, #20]
    a1d8:	ldr	r3, [r0, r2, lsl #2]
    a1dc:	ldrb	r1, [r3]
    a1e0:	cmp	r1, #45	; 0x2d
    a1e4:	bne	a250 <fputs@plt+0x1634>
    a1e8:	ldrb	r1, [r3, #1]
    a1ec:	cmp	r1, #45	; 0x2d
    a1f0:	bne	a290 <fputs@plt+0x1674>
    a1f4:	ldrb	r1, [r3, #2]
    a1f8:	cmp	r1, #0
    a1fc:	bne	a290 <fputs@plt+0x1674>
    a200:	ldr	r3, [r4, #32]
    a204:	add	r2, r2, #1
    a208:	ldr	r1, [r4, #36]	; 0x24
    a20c:	str	r2, [r4]
    a210:	cmp	r3, r1
    a214:	beq	a668 <fputs@plt+0x1a4c>
    a218:	cmp	r2, r1
    a21c:	beq	a22c <fputs@plt+0x1610>
    a220:	mov	r1, r4
    a224:	bl	9ed4 <fputs@plt+0x12b8>
    a228:	ldr	r3, [r4, #32]
    a22c:	mov	r2, r6
    a230:	str	r6, [r4, #36]	; 0x24
    a234:	str	r6, [r4]
    a238:	cmp	r2, r3
    a23c:	strne	r3, [r4]
    a240:	mvn	r5, #0
    a244:	mov	r0, r5
    a248:	add	sp, sp, #68	; 0x44
    a24c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a250:	ldr	r1, [r4, #24]
    a254:	cmp	r1, #0
    a258:	beq	a240 <fputs@plt+0x1624>
    a25c:	mov	r5, #1
    a260:	add	r2, r2, #1
    a264:	str	r3, [r4, #12]
    a268:	str	r2, [r4]
    a26c:	mov	r0, r5
    a270:	add	sp, sp, #68	; 0x44
    a274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a278:	movw	r0, #50928	; 0xc6f0
    a27c:	movt	r0, #0
    a280:	bl	8acc <getenv@plt>
    a284:	adds	r0, r0, #0
    a288:	movne	r0, #1
    a28c:	b	a028 <fputs@plt+0x140c>
    a290:	ldrb	r1, [r3, #1]
    a294:	cmp	r1, #0
    a298:	beq	a250 <fputs@plt+0x1634>
    a29c:	ldr	r2, [sp, #24]
    a2a0:	cmp	r2, #0
    a2a4:	moveq	r7, #1
    a2a8:	beq	a2b8 <fputs@plt+0x169c>
    a2ac:	cmp	r1, #45	; 0x2d
    a2b0:	moveq	r7, #2
    a2b4:	movne	r7, #1
    a2b8:	add	r7, r3, r7
    a2bc:	str	r7, [r4, #20]
    a2c0:	b	a088 <fputs@plt+0x146c>
    a2c4:	ldrb	r3, [r0]
    a2c8:	cmp	r3, #87	; 0x57
    a2cc:	ldrb	r3, [r0, #1]
    a2d0:	beq	a674 <fputs@plt+0x1a58>
    a2d4:	cmp	r3, #58	; 0x3a
    a2d8:	bne	a26c <fputs@plt+0x1650>
    a2dc:	ldrb	r3, [r0, #2]
    a2e0:	cmp	r3, #58	; 0x3a
    a2e4:	ldrb	r3, [r8]
    a2e8:	beq	a89c <fputs@plt+0x1c80>
    a2ec:	cmp	r3, #0
    a2f0:	ldr	r3, [r4]
    a2f4:	beq	a848 <fputs@plt+0x1c2c>
    a2f8:	add	r3, r3, #1
    a2fc:	str	r8, [r4, #12]
    a300:	str	r3, [r4]
    a304:	mov	r3, #0
    a308:	str	r3, [r4, #20]
    a30c:	b	a26c <fputs@plt+0x1650>
    a310:	ldrb	r3, [r7]
    a314:	cmp	r3, #61	; 0x3d
    a318:	cmpne	r3, #0
    a31c:	str	r3, [sp, #36]	; 0x24
    a320:	beq	a7b8 <fputs@plt+0x1b9c>
    a324:	add	r3, r7, #1
    a328:	mov	r1, r3
    a32c:	ldrb	r2, [r3], #1
    a330:	cmp	r2, #61	; 0x3d
    a334:	cmpne	r2, #0
    a338:	bne	a328 <fputs@plt+0x170c>
    a33c:	str	r1, [sp, #40]	; 0x28
    a340:	ldr	r3, [sp, #24]
    a344:	ldr	fp, [r3]
    a348:	cmp	fp, #0
    a34c:	beq	a7c0 <fputs@plt+0x1ba4>
    a350:	ldr	sl, [sp, #24]
    a354:	mov	r5, #0
    a358:	ldr	r3, [sp, #40]	; 0x28
    a35c:	mvn	lr, #0
    a360:	str	r6, [sp, #44]	; 0x2c
    a364:	mov	r6, fp
    a368:	str	r9, [sp, #48]	; 0x30
    a36c:	rsb	r8, r7, r3
    a370:	str	r4, [sp, #52]	; 0x34
    a374:	mov	fp, r5
    a378:	str	lr, [sp, #56]	; 0x38
    a37c:	mov	r9, sl
    a380:	mov	r4, r5
    a384:	b	a3b8 <fputs@plt+0x179c>
    a388:	ldr	r3, [sp, #108]	; 0x6c
    a38c:	cmp	r3, #0
    a390:	bne	a3a4 <fputs@plt+0x1788>
    a394:	ldr	r2, [fp, #4]
    a398:	ldr	r3, [r9, #4]
    a39c:	cmp	r2, r3
    a3a0:	beq	a494 <fputs@plt+0x1878>
    a3a4:	mov	r4, #1
    a3a8:	ldr	r6, [r9, #16]!
    a3ac:	add	r5, r5, #1
    a3b0:	cmp	r6, #0
    a3b4:	beq	a404 <fputs@plt+0x17e8>
    a3b8:	mov	r0, r6
    a3bc:	mov	r1, r7
    a3c0:	mov	r2, r8
    a3c4:	mov	sl, r9
    a3c8:	bl	8bbc <strncmp@plt>
    a3cc:	cmp	r0, #0
    a3d0:	bne	a3a8 <fputs@plt+0x178c>
    a3d4:	mov	r0, r6
    a3d8:	bl	8b20 <strlen@plt>
    a3dc:	cmp	r0, r8
    a3e0:	beq	a604 <fputs@plt+0x19e8>
    a3e4:	cmp	fp, #0
    a3e8:	bne	a388 <fputs@plt+0x176c>
    a3ec:	mov	fp, r9
    a3f0:	ldr	r6, [r9, #16]!
    a3f4:	str	r5, [sp, #56]	; 0x38
    a3f8:	add	r5, r5, #1
    a3fc:	cmp	r6, #0
    a400:	bne	a3b8 <fputs@plt+0x179c>
    a404:	mov	r3, r4
    a408:	cmp	r3, #0
    a40c:	ldr	r6, [sp, #44]	; 0x2c
    a410:	ldr	r9, [sp, #48]	; 0x30
    a414:	ldr	r4, [sp, #52]	; 0x34
    a418:	beq	a548 <fputs@plt+0x192c>
    a41c:	ldr	r3, [sp, #8]
    a420:	cmp	r3, #0
    a424:	beq	a460 <fputs@plt+0x1844>
    a428:	movw	r1, #20680	; 0x50c8
    a42c:	movt	r1, #1
    a430:	ldr	lr, [sp, #20]
    a434:	movw	r2, #50944	; 0xc700
    a438:	ldr	r0, [r1]
    a43c:	movt	r2, #0
    a440:	ldr	r1, [sp, #28]
    a444:	ldr	r3, [lr]
    a448:	str	r1, [sp]
    a44c:	mov	r1, #1
    a450:	bl	8b74 <__fprintf_chk@plt>
    a454:	ldr	r3, [r4]
    a458:	ldr	r7, [r4, #20]
    a45c:	str	r3, [sp, #12]
    a460:	mov	r0, r7
    a464:	mov	r5, #63	; 0x3f
    a468:	bl	8b20 <strlen@plt>
    a46c:	ldr	r3, [sp, #12]
    a470:	add	r2, r3, #1
    a474:	mov	r3, #0
    a478:	str	r2, [r4]
    a47c:	str	r3, [r4, #8]
    a480:	add	r0, r7, r0
    a484:	str	r0, [r4, #20]
    a488:	mov	r0, r5
    a48c:	add	sp, sp, #68	; 0x44
    a490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a494:	ldr	r2, [fp, #8]
    a498:	ldr	r3, [r9, #8]
    a49c:	cmp	r2, r3
    a4a0:	bne	a3a4 <fputs@plt+0x1788>
    a4a4:	ldr	r2, [fp, #12]
    a4a8:	ldr	r3, [r9, #12]
    a4ac:	cmp	r2, r3
    a4b0:	movne	r4, #1
    a4b4:	b	a3a8 <fputs@plt+0x178c>
    a4b8:	ldr	r2, [r4, #36]	; 0x24
    a4bc:	ldr	r3, [r4, #32]
    a4c0:	b	a238 <fputs@plt+0x161c>
    a4c4:	ldr	r1, [r4, #32]
    a4c8:	ldr	r3, [r4, #36]	; 0x24
    a4cc:	cmp	r1, r3
    a4d0:	beq	a65c <fputs@plt+0x1a40>
    a4d4:	cmp	r2, r3
    a4d8:	beq	a4ec <fputs@plt+0x18d0>
    a4dc:	ldr	r0, [sp, #20]
    a4e0:	mov	r1, r4
    a4e4:	bl	9ed4 <fputs@plt+0x12b8>
    a4e8:	ldr	r2, [r4]
    a4ec:	cmp	r6, r2
    a4f0:	ble	a894 <fputs@plt+0x1c78>
    a4f4:	sub	r1, r2, #-1073741823	; 0xc0000001
    a4f8:	mov	r3, r2
    a4fc:	ldr	r2, [sp, #20]
    a500:	add	r1, r2, r1, lsl #2
    a504:	b	a518 <fputs@plt+0x18fc>
    a508:	add	r3, r3, #1
    a50c:	str	r3, [r4]
    a510:	cmp	r3, r6
    a514:	beq	a53c <fputs@plt+0x1920>
    a518:	ldr	r2, [r1, #4]!
    a51c:	ldrb	r0, [r2]
    a520:	cmp	r0, #45	; 0x2d
    a524:	bne	a508 <fputs@plt+0x18ec>
    a528:	ldrb	r2, [r2, #1]
    a52c:	cmp	r2, #0
    a530:	beq	a508 <fputs@plt+0x18ec>
    a534:	ldr	r2, [r4]
    a538:	b	a540 <fputs@plt+0x1924>
    a53c:	mov	r2, r3
    a540:	str	r3, [r4, #36]	; 0x24
    a544:	b	a1cc <fputs@plt+0x15b0>
    a548:	cmp	fp, #0
    a54c:	beq	a7c0 <fputs@plt+0x1ba4>
    a550:	ldr	r5, [sp, #56]	; 0x38
    a554:	mov	sl, fp
    a558:	ldr	r0, [sp, #40]	; 0x28
    a55c:	ldr	lr, [sp, #12]
    a560:	add	r3, lr, #1
    a564:	str	r3, [r4]
    a568:	ldrb	r2, [r0]
    a56c:	cmp	r2, #0
    a570:	beq	a614 <fputs@plt+0x19f8>
    a574:	ldr	r3, [sl, #4]
    a578:	cmp	r3, #0
    a57c:	addne	r3, r0, #1
    a580:	strne	r3, [r4, #12]
    a584:	bne	a620 <fputs@plt+0x1a04>
    a588:	ldr	r3, [sp, #8]
    a58c:	cmp	r3, #0
    a590:	beq	a5e4 <fputs@plt+0x19c8>
    a594:	ldr	r0, [sp, #20]
    a598:	ldr	lr, [sp, #60]	; 0x3c
    a59c:	ldr	r3, [r0, lr]
    a5a0:	ldrb	r2, [r3, #1]
    a5a4:	cmp	r2, #45	; 0x2d
    a5a8:	beq	a914 <fputs@plt+0x1cf8>
    a5ac:	ldrb	ip, [r3]
    a5b0:	movw	r0, #20680	; 0x50c8
    a5b4:	ldr	r1, [sp, #20]
    a5b8:	movt	r0, #1
    a5bc:	movw	r2, #51024	; 0xc750
    a5c0:	movt	r2, #0
    a5c4:	ldr	r3, [r1]
    a5c8:	mov	r1, #1
    a5cc:	str	ip, [sp]
    a5d0:	ldr	ip, [sl]
    a5d4:	ldr	r0, [r0]
    a5d8:	str	ip, [sp, #4]
    a5dc:	bl	8b74 <__fprintf_chk@plt>
    a5e0:	ldr	r7, [r4, #20]
    a5e4:	mov	r0, r7
    a5e8:	mov	r5, #63	; 0x3f
    a5ec:	bl	8b20 <strlen@plt>
    a5f0:	ldr	r3, [sl, #12]
    a5f4:	str	r3, [r4, #8]
    a5f8:	add	r0, r7, r0
    a5fc:	str	r0, [r4, #20]
    a600:	b	a26c <fputs@plt+0x1650>
    a604:	ldr	r6, [sp, #44]	; 0x2c
    a608:	ldr	r9, [sp, #48]	; 0x30
    a60c:	ldr	r4, [sp, #52]	; 0x34
    a610:	b	a558 <fputs@plt+0x193c>
    a614:	ldr	r1, [sl, #4]
    a618:	cmp	r1, #1
    a61c:	beq	a868 <fputs@plt+0x1c4c>
    a620:	mov	r0, r7
    a624:	bl	8b20 <strlen@plt>
    a628:	ldr	r1, [sp, #104]	; 0x68
    a62c:	cmp	r1, #0
    a630:	add	r0, r7, r0
    a634:	str	r0, [r4, #20]
    a638:	beq	a640 <fputs@plt+0x1a24>
    a63c:	str	r5, [r1]
    a640:	ldr	r3, [sl, #8]
    a644:	cmp	r3, #0
    a648:	ldrne	r2, [sl, #12]
    a64c:	movne	r5, #0
    a650:	ldreq	r5, [sl, #12]
    a654:	strne	r2, [r3]
    a658:	b	a26c <fputs@plt+0x1650>
    a65c:	cmp	r2, r1
    a660:	strne	r2, [r4, #32]
    a664:	b	a4ec <fputs@plt+0x18d0>
    a668:	mov	r3, r2
    a66c:	str	r2, [r4, #32]
    a670:	b	a22c <fputs@plt+0x1610>
    a674:	cmp	r3, #59	; 0x3b
    a678:	bne	a2d4 <fputs@plt+0x16b8>
    a67c:	ldrb	r3, [r8]
    a680:	cmp	r3, #0
    a684:	ldr	r3, [r4]
    a688:	beq	a8f0 <fputs@plt+0x1cd4>
    a68c:	add	r3, r3, #1
    a690:	str	r8, [sp, #16]
    a694:	str	r8, [r4, #12]
    a698:	str	r3, [r4]
    a69c:	ldr	r3, [sp, #16]
    a6a0:	str	r3, [r4, #20]
    a6a4:	ldrb	r7, [r3]
    a6a8:	cmp	r7, #61	; 0x3d
    a6ac:	cmpne	r7, #0
    a6b0:	beq	ab58 <fputs@plt+0x1f3c>
    a6b4:	add	r3, r3, #1
    a6b8:	mov	r2, r3
    a6bc:	ldrb	r7, [r3], #1
    a6c0:	cmp	r7, #61	; 0x3d
    a6c4:	cmpne	r7, #0
    a6c8:	bne	a6b8 <fputs@plt+0x1a9c>
    a6cc:	str	r2, [sp, #12]
    a6d0:	ldr	r3, [sp, #24]
    a6d4:	ldr	sl, [r3]
    a6d8:	cmp	sl, #0
    a6dc:	beq	ab90 <fputs@plt+0x1f74>
    a6e0:	ldr	fp, [sp, #24]
    a6e4:	mov	r5, #0
    a6e8:	ldr	lr, [sp, #16]
    a6ec:	ldr	r3, [sp, #12]
    a6f0:	str	r7, [sp, #28]
    a6f4:	rsb	r8, lr, r3
    a6f8:	str	r6, [sp, #32]
    a6fc:	str	r9, [sp, #36]	; 0x24
    a700:	mov	r7, lr
    a704:	str	r4, [sp, #40]	; 0x28
    a708:	mov	r6, r5
    a70c:	mov	r4, fp
    a710:	mov	r9, sl
    a714:	mov	fp, r5
    a718:	str	r5, [sp, #24]
    a71c:	mov	r0, r9
    a720:	mov	r1, r7
    a724:	mov	r2, r8
    a728:	mov	sl, r4
    a72c:	bl	8bbc <strncmp@plt>
    a730:	cmp	r0, #0
    a734:	mov	r0, r9
    a738:	bne	a758 <fputs@plt+0x1b3c>
    a73c:	bl	8b20 <strlen@plt>
    a740:	cmp	r8, r0
    a744:	beq	a998 <fputs@plt+0x1d7c>
    a748:	cmp	fp, #0
    a74c:	streq	r5, [sp, #24]
    a750:	movne	r6, #1
    a754:	moveq	fp, r4
    a758:	ldr	r9, [r4, #16]!
    a75c:	add	r5, r5, #1
    a760:	cmp	r9, #0
    a764:	bne	a71c <fputs@plt+0x1b00>
    a768:	mov	ip, r6
    a76c:	cmp	ip, #0
    a770:	ldr	r7, [sp, #28]
    a774:	ldr	r6, [sp, #32]
    a778:	ldr	r9, [sp, #36]	; 0x24
    a77c:	ldr	r4, [sp, #40]	; 0x28
    a780:	beq	aa1c <fputs@plt+0x1e00>
    a784:	ldr	r3, [sp, #8]
    a788:	cmp	r3, #0
    a78c:	bne	aa30 <fputs@plt+0x1e14>
    a790:	ldr	r6, [sp, #16]
    a794:	mov	r0, r6
    a798:	mov	r5, #63	; 0x3f
    a79c:	bl	8b20 <strlen@plt>
    a7a0:	ldr	r3, [r4]
    a7a4:	add	r3, r3, #1
    a7a8:	str	r3, [r4]
    a7ac:	add	r0, r6, r0
    a7b0:	str	r0, [r4, #20]
    a7b4:	b	a26c <fputs@plt+0x1650>
    a7b8:	str	r7, [sp, #40]	; 0x28
    a7bc:	b	a340 <fputs@plt+0x1724>
    a7c0:	ldr	r3, [sp, #108]	; 0x6c
    a7c4:	cmp	r3, #0
    a7c8:	bne	a944 <fputs@plt+0x1d28>
    a7cc:	ldr	r3, [sp, #8]
    a7d0:	cmp	r3, #0
    a7d4:	beq	a820 <fputs@plt+0x1c04>
    a7d8:	ldr	r3, [sp, #32]
    a7dc:	cmp	r3, #45	; 0x2d
    a7e0:	beq	aa74 <fputs@plt+0x1e58>
    a7e4:	ldr	r0, [sp, #28]
    a7e8:	movw	r1, #20680	; 0x50c8
    a7ec:	ldr	lr, [sp, #20]
    a7f0:	movt	r1, #1
    a7f4:	movw	r2, #51144	; 0xc7c8
    a7f8:	movt	r2, #0
    a7fc:	ldrb	ip, [r0]
    a800:	ldr	r3, [lr]
    a804:	ldr	r0, [r1]
    a808:	mov	r1, #1
    a80c:	str	r7, [sp, #4]
    a810:	str	ip, [sp]
    a814:	bl	8b74 <__fprintf_chk@plt>
    a818:	ldr	r3, [r4]
    a81c:	str	r3, [sp, #12]
    a820:	ldr	r3, [sp, #12]
    a824:	mov	r5, #63	; 0x3f
    a828:	add	r2, r3, #1
    a82c:	movw	r3, #50828	; 0xc68c
    a830:	str	r2, [r4]
    a834:	movt	r3, #0
    a838:	mov	r2, #0
    a83c:	str	r3, [r4, #20]
    a840:	str	r2, [r4, #8]
    a844:	b	a26c <fputs@plt+0x1650>
    a848:	cmp	r3, r6
    a84c:	beq	a974 <fputs@plt+0x1d58>
    a850:	ldr	r0, [sp, #20]
    a854:	ldr	r2, [r0, r3, lsl #2]
    a858:	add	r3, r3, #1
    a85c:	str	r3, [r4]
    a860:	str	r2, [r4, #12]
    a864:	b	a304 <fputs@plt+0x16e8>
    a868:	cmp	r6, r3
    a86c:	ble	a8b8 <fputs@plt+0x1c9c>
    a870:	ldr	r2, [sp, #20]
    a874:	ldr	lr, [sp, #60]	; 0x3c
    a878:	ldr	r0, [sp, #12]
    a87c:	add	r3, r2, lr
    a880:	add	r2, r0, #2
    a884:	str	r2, [r4]
    a888:	ldr	r3, [r3, #4]
    a88c:	str	r3, [r4, #12]
    a890:	b	a620 <fputs@plt+0x1a04>
    a894:	mov	r3, r2
    a898:	b	a540 <fputs@plt+0x1924>
    a89c:	cmp	r3, #0
    a8a0:	strne	r8, [r4, #12]
    a8a4:	streq	r3, [r4, #12]
    a8a8:	ldrne	r3, [r4]
    a8ac:	addne	r3, r3, #1
    a8b0:	strne	r3, [r4]
    a8b4:	b	a304 <fputs@plt+0x16e8>
    a8b8:	ldr	r3, [sp, #8]
    a8bc:	cmp	r3, #0
    a8c0:	bne	aaa8 <fputs@plt+0x1e8c>
    a8c4:	mov	r0, r7
    a8c8:	bl	8b20 <strlen@plt>
    a8cc:	ldr	r3, [sl, #12]
    a8d0:	str	r3, [r4, #8]
    a8d4:	add	r0, r7, r0
    a8d8:	str	r0, [r4, #20]
    a8dc:	ldrb	r3, [r9]
    a8e0:	cmp	r3, #58	; 0x3a
    a8e4:	bne	a188 <fputs@plt+0x156c>
    a8e8:	mov	r5, #58	; 0x3a
    a8ec:	b	a26c <fputs@plt+0x1650>
    a8f0:	cmp	r3, r6
    a8f4:	beq	ab0c <fputs@plt+0x1ef0>
    a8f8:	ldr	r0, [sp, #20]
    a8fc:	ldr	r2, [r0, r3, lsl #2]
    a900:	add	r3, r3, #1
    a904:	str	r3, [r4]
    a908:	str	r2, [sp, #16]
    a90c:	str	r2, [r4, #12]
    a910:	b	a69c <fputs@plt+0x1a80>
    a914:	ldr	ip, [sl]
    a918:	movw	r1, #20680	; 0x50c8
    a91c:	movt	r1, #1
    a920:	ldr	r3, [r0]
    a924:	movw	r2, #50976	; 0xc720
    a928:	movt	r2, #0
    a92c:	ldr	r0, [r1]
    a930:	mov	r1, #1
    a934:	str	ip, [sp]
    a938:	bl	8b74 <__fprintf_chk@plt>
    a93c:	ldr	r7, [r4, #20]
    a940:	b	a5e4 <fputs@plt+0x19c8>
    a944:	ldr	r3, [sp, #32]
    a948:	cmp	r3, #45	; 0x2d
    a94c:	beq	aa68 <fputs@plt+0x1e4c>
    a950:	ldr	r1, [sp, #36]	; 0x24
    a954:	mov	r0, r9
    a958:	bl	8af0 <strchr@plt>
    a95c:	cmp	r0, #0
    a960:	bne	a0f8 <fputs@plt+0x14dc>
    a964:	ldr	r3, [sp, #8]
    a968:	cmp	r3, #0
    a96c:	bne	a7e4 <fputs@plt+0x1bc8>
    a970:	b	a820 <fputs@plt+0x1c04>
    a974:	ldr	r3, [sp, #8]
    a978:	cmp	r3, #0
    a97c:	bne	ab64 <fputs@plt+0x1f48>
    a980:	str	r7, [r4, #8]
    a984:	ldrb	r5, [r9]
    a988:	cmp	r5, #58	; 0x3a
    a98c:	movne	r5, #63	; 0x3f
    a990:	moveq	r5, #58	; 0x3a
    a994:	b	a304 <fputs@plt+0x16e8>
    a998:	ldr	r7, [sp, #28]
    a99c:	ldr	r6, [sp, #32]
    a9a0:	ldr	r9, [sp, #36]	; 0x24
    a9a4:	ldr	r4, [sp, #40]	; 0x28
    a9a8:	cmp	r7, #0
    a9ac:	beq	aadc <fputs@plt+0x1ec0>
    a9b0:	ldr	r3, [sl, #4]
    a9b4:	cmp	r3, #0
    a9b8:	ldrne	r0, [sp, #12]
    a9bc:	addne	r3, r0, #1
    a9c0:	strne	r3, [r4, #12]
    a9c4:	bne	aae8 <fputs@plt+0x1ecc>
    a9c8:	ldr	r3, [sp, #8]
    a9cc:	cmp	r3, #0
    a9d0:	beq	aa00 <fputs@plt+0x1de4>
    a9d4:	ldr	ip, [sl]
    a9d8:	movw	r0, #20680	; 0x50c8
    a9dc:	ldr	lr, [sp, #20]
    a9e0:	movt	r0, #1
    a9e4:	movw	r2, #51308	; 0xc86c
    a9e8:	mov	r1, #1
    a9ec:	movt	r2, #0
    a9f0:	ldr	r3, [lr]
    a9f4:	str	ip, [sp]
    a9f8:	ldr	r0, [r0]
    a9fc:	bl	8b74 <__fprintf_chk@plt>
    aa00:	ldr	r6, [r4, #20]
    aa04:	mov	r5, #63	; 0x3f
    aa08:	mov	r0, r6
    aa0c:	bl	8b20 <strlen@plt>
    aa10:	add	r0, r6, r0
    aa14:	str	r0, [r4, #20]
    aa18:	b	a26c <fputs@plt+0x1650>
    aa1c:	cmp	fp, #0
    aa20:	beq	ab90 <fputs@plt+0x1f74>
    aa24:	ldr	r5, [sp, #24]
    aa28:	mov	sl, fp
    aa2c:	b	a9a8 <fputs@plt+0x1d8c>
    aa30:	ldr	ip, [r4]
    aa34:	movw	r0, #20680	; 0x50c8
    aa38:	ldr	lr, [sp, #20]
    aa3c:	movt	r0, #1
    aa40:	movw	r2, #51272	; 0xc848
    aa44:	mov	r1, #1
    aa48:	ldr	r0, [r0]
    aa4c:	movt	r2, #0
    aa50:	ldr	ip, [lr, ip, lsl #2]
    aa54:	ldr	r3, [lr]
    aa58:	str	ip, [sp]
    aa5c:	bl	8b74 <__fprintf_chk@plt>
    aa60:	ldr	r6, [r4, #20]
    aa64:	b	a794 <fputs@plt+0x1b78>
    aa68:	ldr	r3, [sp, #8]
    aa6c:	cmp	r3, #0
    aa70:	beq	a820 <fputs@plt+0x1c04>
    aa74:	ldr	lr, [sp, #20]
    aa78:	movw	r1, #20680	; 0x50c8
    aa7c:	movt	r1, #1
    aa80:	movw	r2, #51112	; 0xc7a8
    aa84:	movt	r2, #0
    aa88:	ldr	r3, [lr]
    aa8c:	ldr	r0, [r1]
    aa90:	mov	r1, #1
    aa94:	str	r7, [sp]
    aa98:	bl	8b74 <__fprintf_chk@plt>
    aa9c:	ldr	r3, [r4]
    aaa0:	str	r3, [sp, #12]
    aaa4:	b	a820 <fputs@plt+0x1c04>
    aaa8:	ldr	lr, [sp, #20]
    aaac:	movw	r0, #20680	; 0x50c8
    aab0:	ldr	r3, [sp, #60]	; 0x3c
    aab4:	movt	r0, #1
    aab8:	movw	r2, #51072	; 0xc780
    aabc:	movt	r2, #0
    aac0:	ldr	r0, [r0]
    aac4:	ldr	ip, [lr, r3]
    aac8:	ldr	r3, [lr]
    aacc:	str	ip, [sp]
    aad0:	bl	8b74 <__fprintf_chk@plt>
    aad4:	ldr	r7, [r4, #20]
    aad8:	b	a8c4 <fputs@plt+0x1ca8>
    aadc:	ldr	r1, [sl, #4]
    aae0:	cmp	r1, #1
    aae4:	beq	aba0 <fputs@plt+0x1f84>
    aae8:	ldr	r0, [sp, #16]
    aaec:	bl	8b20 <strlen@plt>
    aaf0:	ldr	r1, [sp, #104]	; 0x68
    aaf4:	ldr	r3, [sp, #16]
    aaf8:	cmp	r1, #0
    aafc:	add	r0, r3, r0
    ab00:	str	r0, [r4, #20]
    ab04:	bne	a63c <fputs@plt+0x1a20>
    ab08:	b	a640 <fputs@plt+0x1a24>
    ab0c:	ldr	r3, [sp, #8]
    ab10:	cmp	r3, #0
    ab14:	beq	ab40 <fputs@plt+0x1f24>
    ab18:	ldr	lr, [sp, #20]
    ab1c:	movw	r1, #20680	; 0x50c8
    ab20:	movt	r1, #1
    ab24:	str	r7, [sp]
    ab28:	movw	r2, #51232	; 0xc820
    ab2c:	movt	r2, #0
    ab30:	ldr	r0, [r1]
    ab34:	mov	r1, #1
    ab38:	ldr	r3, [lr]
    ab3c:	bl	8b74 <__fprintf_chk@plt>
    ab40:	str	r7, [r4, #8]
    ab44:	ldrb	r5, [r9]
    ab48:	cmp	r5, #58	; 0x3a
    ab4c:	movne	r5, #63	; 0x3f
    ab50:	moveq	r5, #58	; 0x3a
    ab54:	b	a26c <fputs@plt+0x1650>
    ab58:	ldr	r3, [sp, #16]
    ab5c:	str	r3, [sp, #12]
    ab60:	b	a6d0 <fputs@plt+0x1ab4>
    ab64:	ldr	lr, [sp, #20]
    ab68:	movw	r1, #20680	; 0x50c8
    ab6c:	movt	r1, #1
    ab70:	str	r7, [sp]
    ab74:	movw	r2, #51232	; 0xc820
    ab78:	movt	r2, #0
    ab7c:	ldr	r3, [lr]
    ab80:	ldr	r0, [r1]
    ab84:	mov	r1, #1
    ab88:	bl	8b74 <__fprintf_chk@plt>
    ab8c:	b	a980 <fputs@plt+0x1d64>
    ab90:	mov	r3, #0
    ab94:	mov	r5, #87	; 0x57
    ab98:	str	r3, [r4, #20]
    ab9c:	b	a26c <fputs@plt+0x1650>
    aba0:	ldr	r3, [r4]
    aba4:	cmp	r6, r3
    aba8:	ble	abc4 <fputs@plt+0x1fa8>
    abac:	ldr	r0, [sp, #20]
    abb0:	ldr	r2, [r0, r3, lsl #2]
    abb4:	add	r3, r3, #1
    abb8:	str	r3, [r4]
    abbc:	str	r2, [r4, #12]
    abc0:	b	aae8 <fputs@plt+0x1ecc>
    abc4:	ldr	r2, [sp, #8]
    abc8:	cmp	r2, #0
    abcc:	beq	abfc <fputs@plt+0x1fe0>
    abd0:	ldr	lr, [sp, #20]
    abd4:	sub	r3, r3, #-1073741823	; 0xc0000001
    abd8:	movw	r0, #20680	; 0x50c8
    abdc:	movt	r0, #1
    abe0:	movw	r2, #51072	; 0xc780
    abe4:	movt	r2, #0
    abe8:	ldr	ip, [lr, r3, lsl #2]
    abec:	ldr	r0, [r0]
    abf0:	ldr	r3, [lr]
    abf4:	str	ip, [sp]
    abf8:	bl	8b74 <__fprintf_chk@plt>
    abfc:	ldr	r5, [r4, #20]
    ac00:	mov	r0, r5
    ac04:	bl	8b20 <strlen@plt>
    ac08:	add	r0, r5, r0
    ac0c:	str	r0, [r4, #20]
    ac10:	ldrb	r3, [r9]
    ac14:	cmp	r3, #58	; 0x3a
    ac18:	bne	a188 <fputs@plt+0x156c>
    ac1c:	b	a8e8 <fputs@plt+0x1ccc>
    ac20:	push	{r4, r5, r6, r7, r8, lr}
    ac24:	sub	sp, sp, #16
    ac28:	movw	r5, #20640	; 0x50a0
    ac2c:	movt	r5, #1
    ac30:	ldr	r8, [sp, #40]	; 0x28
    ac34:	movw	r4, #20736	; 0x5100
    ac38:	ldr	r7, [sp, #44]	; 0x2c
    ac3c:	movt	r4, #1
    ac40:	ldr	r6, [sp, #48]	; 0x30
    ac44:	ldr	ip, [r5, #4]
    ac48:	ldr	lr, [r5]
    ac4c:	str	r4, [sp, #12]
    ac50:	str	r8, [sp]
    ac54:	str	r7, [sp, #4]
    ac58:	str	r6, [sp, #8]
    ac5c:	str	ip, [r4, #4]
    ac60:	str	lr, [r4]
    ac64:	bl	9fb4 <fputs@plt+0x1398>
    ac68:	ldr	ip, [r4]
    ac6c:	movw	r3, #23672	; 0x5c78
    ac70:	ldr	r1, [r4, #8]
    ac74:	movt	r3, #1
    ac78:	ldr	r2, [r4, #12]
    ac7c:	str	ip, [r5]
    ac80:	str	r1, [r5, #8]
    ac84:	str	r2, [r3]
    ac88:	add	sp, sp, #16
    ac8c:	pop	{r4, r5, r6, r7, r8, pc}
    ac90:	push	{lr}		; (str lr, [sp, #-4]!)
    ac94:	sub	sp, sp, #20
    ac98:	mov	ip, #0
    ac9c:	mov	lr, #1
    aca0:	str	ip, [sp]
    aca4:	mov	r3, ip
    aca8:	stmib	sp, {ip, lr}
    acac:	bl	ac20 <fputs@plt+0x2004>
    acb0:	add	sp, sp, #20
    acb4:	pop	{pc}		; (ldr pc, [sp], #4)
    acb8:	push	{lr}		; (str lr, [sp, #-4]!)
    acbc:	sub	sp, sp, #20
    acc0:	mov	ip, #0
    acc4:	ldr	lr, [sp, #24]
    acc8:	str	ip, [sp, #4]
    accc:	str	ip, [sp, #8]
    acd0:	str	lr, [sp]
    acd4:	bl	ac20 <fputs@plt+0x2004>
    acd8:	add	sp, sp, #20
    acdc:	pop	{pc}		; (ldr pc, [sp], #4)
    ace0:	push	{r4, lr}
    ace4:	sub	sp, sp, #16
    ace8:	mov	ip, #0
    acec:	ldr	r4, [sp, #24]
    acf0:	ldr	lr, [sp, #28]
    acf4:	str	ip, [sp, #8]
    acf8:	stm	sp, {r4, ip}
    acfc:	str	lr, [sp, #12]
    ad00:	bl	9fb4 <fputs@plt+0x1398>
    ad04:	add	sp, sp, #16
    ad08:	pop	{r4, pc}
    ad0c:	push	{r4, lr}
    ad10:	sub	sp, sp, #16
    ad14:	mov	lr, #0
    ad18:	mov	r4, #1
    ad1c:	ldr	ip, [sp, #24]
    ad20:	stmib	sp, {r4, lr}
    ad24:	str	ip, [sp]
    ad28:	bl	ac20 <fputs@plt+0x2004>
    ad2c:	add	sp, sp, #16
    ad30:	pop	{r4, pc}
    ad34:	push	{r4, r5, lr}
    ad38:	sub	sp, sp, #20
    ad3c:	mov	ip, #0
    ad40:	mov	r5, #1
    ad44:	ldr	r4, [sp, #32]
    ad48:	ldr	lr, [sp, #36]	; 0x24
    ad4c:	stm	sp, {r4, r5, ip, lr}
    ad50:	bl	9fb4 <fputs@plt+0x1398>
    ad54:	add	sp, sp, #20
    ad58:	pop	{r4, r5, pc}
    ad5c:	subs	r3, r0, #0
    ad60:	ldr	r1, [pc, #120]	; ade0 <fputs@plt+0x21c4>
    ad64:	push	{r4}		; (str r4, [sp, #-4]!)
    ad68:	movw	r4, #26215	; 0x6667
    ad6c:	movt	r4, #26214	; 0x6666
    ad70:	blt	ada4 <fputs@plt+0x2188>
    ad74:	smull	r2, ip, r4, r3
    ad78:	asr	r2, r3, #31
    ad7c:	mov	r0, r1
    ad80:	rsb	r2, r2, ip, asr #2
    ad84:	add	ip, r2, r2, lsl #2
    ad88:	sub	ip, r3, ip, lsl #1
    ad8c:	subs	r3, r2, #0
    ad90:	add	r2, ip, #48	; 0x30
    ad94:	strb	r2, [r1], #-1
    ad98:	bne	ad74 <fputs@plt+0x2158>
    ad9c:	pop	{r4}		; (ldr r4, [sp], #4)
    ada0:	bx	lr
    ada4:	smull	r2, r0, r4, r3
    ada8:	asr	r2, r3, #31
    adac:	mov	ip, r1
    adb0:	rsb	r2, r2, r0, asr #2
    adb4:	add	r0, r2, r2, lsl #2
    adb8:	sub	r0, r3, r0, lsl #1
    adbc:	subs	r3, r2, #0
    adc0:	rsb	r2, r0, #48	; 0x30
    adc4:	strb	r2, [r1], #-1
    adc8:	bne	ada4 <fputs@plt+0x2188>
    adcc:	mov	r3, #45	; 0x2d
    add0:	strb	r3, [ip, #-1]
    add4:	mov	r0, r1
    add8:	pop	{r4}		; (ldr r4, [sp], #4)
    addc:	bx	lr
    ade0:	andeq	r5, r1, fp, lsr r1
    ade4:	ldr	r2, [pc, #56]	; ae24 <fputs@plt+0x2208>
    ade8:	mov	r1, r0
    adec:	push	{r4}		; (str r4, [sp, #-4]!)
    adf0:	movw	r4, #52429	; 0xcccd
    adf4:	movt	r4, #52428	; 0xcccc
    adf8:	umull	r0, r3, r4, r1
    adfc:	mov	r0, r2
    ae00:	lsr	r3, r3, #3
    ae04:	add	ip, r3, r3, lsl #2
    ae08:	sub	ip, r1, ip, lsl #1
    ae0c:	subs	r1, r3, #0
    ae10:	add	r3, ip, #48	; 0x30
    ae14:	strb	r3, [r2], #-1
    ae18:	bne	adf8 <fputs@plt+0x21dc>
    ae1c:	pop	{r4}		; (ldr r4, [sp], #4)
    ae20:	bx	lr
    ae24:	andeq	r5, r1, r3, asr r1
    ae28:	push	{r4, r5, r6, lr}
    ae2c:	movw	r5, #20664	; 0x50b8
    ae30:	movt	r5, #1
    ae34:	ldrb	r2, [r0]
    ae38:	sub	sp, sp, #16
    ae3c:	ldr	r3, [r5]
    ae40:	cmp	r2, #32
    ae44:	str	r3, [sp, #12]
    ae48:	bne	ae60 <fputs@plt+0x2244>
    ae4c:	add	r3, r0, #1
    ae50:	mov	r0, r3
    ae54:	ldrb	r2, [r3], #1
    ae58:	cmp	r2, #32
    ae5c:	beq	ae50 <fputs@plt+0x2234>
    ae60:	movw	ip, #21364	; 0x5374
    ae64:	movt	ip, #1
    ae68:	ldrb	r2, [ip, r2]
    ae6c:	cmp	r2, #0
    ae70:	beq	af88 <fputs@plt+0x236c>
    ae74:	ldrb	r2, [r0]
    ae78:	mov	r4, #0
    ae7c:	b	ae84 <fputs@plt+0x2268>
    ae80:	mov	r2, r3
    ae84:	ldrb	r3, [r0, #1]
    ae88:	add	r4, r4, r4, lsl #2
    ae8c:	sub	r2, r2, #48	; 0x30
    ae90:	add	r0, r0, #1
    ae94:	add	r4, r2, r4, lsl #1
    ae98:	ldrb	r2, [ip, r3]
    ae9c:	mov	r1, r0
    aea0:	cmp	r2, #0
    aea4:	bne	ae80 <fputs@plt+0x2264>
    aea8:	cmp	r3, #10
    aeac:	bne	af80 <fputs@plt+0x2364>
    aeb0:	cmp	r3, #0
    aeb4:	cmpne	r3, #10
    aeb8:	movne	r3, #0
    aebc:	moveq	r3, #1
    aec0:	beq	afd0 <fputs@plt+0x23b4>
    aec4:	ldrb	r2, [r1]
    aec8:	ands	r0, r2, #223	; 0xdf
    aecc:	beq	affc <fputs@plt+0x23e0>
    aed0:	cmp	r2, #10
    aed4:	beq	aff0 <fputs@plt+0x23d4>
    aed8:	cmp	r2, #92	; 0x5c
    aedc:	addne	r2, r1, #1
    aee0:	bne	aef8 <fputs@plt+0x22dc>
    aee4:	b	aff0 <fputs@plt+0x23d4>
    aee8:	cmp	r3, #10
    aeec:	beq	af0c <fputs@plt+0x22f0>
    aef0:	cmp	r3, #92	; 0x5c
    aef4:	beq	af0c <fputs@plt+0x22f0>
    aef8:	mov	r6, r2
    aefc:	add	r2, r2, #1
    af00:	ldrb	r3, [r6]
    af04:	tst	r3, #223	; 0xdf
    af08:	bne	aee8 <fputs@plt+0x22cc>
    af0c:	rsb	r2, r1, r6
    af10:	mov	r0, sp
    af14:	bl	b80c <fputs@plt+0x2bf0>
    af18:	ldrb	r3, [r6]
    af1c:	cmp	r3, #32
    af20:	bne	af30 <fputs@plt+0x2314>
    af24:	ldrb	r3, [r6, #1]!
    af28:	cmp	r3, #32
    af2c:	beq	af24 <fputs@plt+0x2308>
    af30:	cmp	r3, #0
    af34:	cmpne	r3, #10
    af38:	bne	afa8 <fputs@plt+0x238c>
    af3c:	ldr	r3, [sp, #4]
    af40:	ldr	r2, [sp, #8]
    af44:	cmp	r3, r2
    af48:	bge	afe0 <fputs@plt+0x23c4>
    af4c:	ldr	r2, [sp]
    af50:	add	r0, r3, #1
    af54:	mov	r1, #0
    af58:	str	r0, [sp, #4]
    af5c:	strb	r1, [r2, r3]
    af60:	ldr	r0, [sp]
    af64:	bl	c14c <fputs@plt+0x3530>
    af68:	mov	r0, r4
    af6c:	bl	c188 <fputs@plt+0x356c>
    af70:	mov	r4, #1
    af74:	mov	r0, sp
    af78:	bl	b95c <fputs@plt+0x2d40>
    af7c:	b	af8c <fputs@plt+0x2370>
    af80:	tst	r3, #223	; 0xdf
    af84:	beq	afb0 <fputs@plt+0x2394>
    af88:	mov	r4, r2
    af8c:	ldr	r1, [sp, #12]
    af90:	mov	r0, r4
    af94:	ldr	r3, [r5]
    af98:	cmp	r1, r3
    af9c:	bne	b008 <fputs@plt+0x23ec>
    afa0:	add	sp, sp, #16
    afa4:	pop	{r4, r5, r6, pc}
    afa8:	mov	r4, #0
    afac:	b	af74 <fputs@plt+0x2358>
    afb0:	cmp	r3, #32
    afb4:	addeq	r0, r0, #1
    afb8:	bne	aeb0 <fputs@plt+0x2294>
    afbc:	mov	r1, r0
    afc0:	ldrb	r3, [r0], #1
    afc4:	cmp	r3, #32
    afc8:	beq	afbc <fputs@plt+0x23a0>
    afcc:	b	aeb0 <fputs@plt+0x2294>
    afd0:	mov	r0, r4
    afd4:	mov	r4, #1
    afd8:	bl	c188 <fputs@plt+0x356c>
    afdc:	b	af8c <fputs@plt+0x2370>
    afe0:	mov	r0, sp
    afe4:	bl	baa8 <fputs@plt+0x2e8c>
    afe8:	ldr	r3, [sp, #4]
    afec:	b	af4c <fputs@plt+0x2330>
    aff0:	mov	r2, r3
    aff4:	mov	r6, r1
    aff8:	b	af10 <fputs@plt+0x22f4>
    affc:	mov	r2, r0
    b000:	mov	r6, r1
    b004:	b	af10 <fputs@plt+0x22f4>
    b008:	bl	8b68 <__stack_chk_fail@plt>
    b00c:	mov	r0, sp
    b010:	bl	b95c <fputs@plt+0x2d40>
    b014:	bl	8b08 <__cxa_end_cleanup@plt>
    b018:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b01c:	cmp	r3, #0
    b020:	mov	r4, r0
    b024:	mov	r7, r1
    b028:	mov	r5, r2
    b02c:	ldr	r8, [sp, #40]	; 0x28
    b030:	moveq	r6, r3
    b034:	bne	b14c <fputs@plt+0x2530>
    b038:	cmp	r7, #0
    b03c:	beq	b05c <fputs@plt+0x2440>
    b040:	mov	r0, r7
    b044:	bl	8acc <getenv@plt>
    b048:	subs	r7, r0, #0
    b04c:	beq	b05c <fputs@plt+0x2440>
    b050:	ldrb	r3, [r7]
    b054:	cmp	r3, #0
    b058:	bne	b140 <fputs@plt+0x2524>
    b05c:	mov	r9, #1
    b060:	cmp	r8, #0
    b064:	movne	fp, #2
    b068:	moveq	fp, #0
    b06c:	cmp	r6, #0
    b070:	moveq	sl, r6
    b074:	beq	b088 <fputs@plt+0x246c>
    b078:	ldrb	r0, [r6]
    b07c:	cmp	r0, #0
    b080:	moveq	sl, r0
    b084:	bne	b130 <fputs@plt+0x2514>
    b088:	cmp	r5, #0
    b08c:	moveq	r0, r5
    b090:	beq	b0a4 <fputs@plt+0x2488>
    b094:	ldrb	r3, [r5]
    b098:	cmp	r3, #0
    b09c:	moveq	r0, r3
    b0a0:	bne	b124 <fputs@plt+0x2508>
    b0a4:	add	r9, fp, r9
    b0a8:	add	sl, r9, sl
    b0ac:	add	r0, sl, r0
    b0b0:	bl	8b50 <_Znaj@plt>
    b0b4:	cmp	r7, #0
    b0b8:	mov	r3, #0
    b0bc:	str	r0, [r4]
    b0c0:	strb	r3, [r0]
    b0c4:	beq	b0d4 <fputs@plt+0x24b8>
    b0c8:	ldrb	r3, [r7]
    b0cc:	cmp	r3, #0
    b0d0:	bne	b1c8 <fputs@plt+0x25ac>
    b0d4:	cmp	r8, #0
    b0d8:	bne	b160 <fputs@plt+0x2544>
    b0dc:	cmp	r6, #0
    b0e0:	beq	b0f0 <fputs@plt+0x24d4>
    b0e4:	ldrb	r3, [r6]
    b0e8:	cmp	r3, #0
    b0ec:	bne	b19c <fputs@plt+0x2580>
    b0f0:	cmp	r5, #0
    b0f4:	beq	b110 <fputs@plt+0x24f4>
    b0f8:	ldrb	r3, [r5]
    b0fc:	cmp	r3, #0
    b100:	beq	b110 <fputs@plt+0x24f4>
    b104:	mov	r1, r5
    b108:	ldr	r0, [r4]
    b10c:	bl	8b8c <strcat@plt>
    b110:	ldr	r0, [r4]
    b114:	bl	8b20 <strlen@plt>
    b118:	str	r0, [r4, #4]
    b11c:	mov	r0, r4
    b120:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b124:	mov	r0, r5
    b128:	bl	8b20 <strlen@plt>
    b12c:	b	b0a4 <fputs@plt+0x2488>
    b130:	mov	r0, r6
    b134:	bl	8b20 <strlen@plt>
    b138:	add	sl, r0, #1
    b13c:	b	b088 <fputs@plt+0x246c>
    b140:	bl	8b20 <strlen@plt>
    b144:	add	r9, r0, #2
    b148:	b	b060 <fputs@plt+0x2444>
    b14c:	movw	r0, #51356	; 0xc89c
    b150:	movt	r0, #0
    b154:	bl	8acc <getenv@plt>
    b158:	mov	r6, r0
    b15c:	b	b038 <fputs@plt+0x241c>
    b160:	ldr	r7, [r4]
    b164:	mov	r0, r7
    b168:	bl	8b20 <strlen@plt>
    b16c:	movw	r3, #51368	; 0xc8a8
    b170:	movt	r3, #0
    b174:	ldrh	r3, [r3]
    b178:	strh	r3, [r7, r0]
    b17c:	ldr	r7, [r4]
    b180:	mov	r0, r7
    b184:	bl	8b20 <strlen@plt>
    b188:	movw	r3, #51364	; 0xc8a4
    b18c:	movt	r3, #0
    b190:	ldrh	r3, [r3]
    b194:	strh	r3, [r7, r0]
    b198:	b	b0dc <fputs@plt+0x24c0>
    b19c:	mov	r1, r6
    b1a0:	ldr	r0, [r4]
    b1a4:	bl	8b8c <strcat@plt>
    b1a8:	ldr	r6, [r4]
    b1ac:	mov	r0, r6
    b1b0:	bl	8b20 <strlen@plt>
    b1b4:	movw	r3, #51364	; 0xc8a4
    b1b8:	movt	r3, #0
    b1bc:	ldrh	r3, [r3]
    b1c0:	strh	r3, [r6, r0]
    b1c4:	b	b0f0 <fputs@plt+0x24d4>
    b1c8:	mov	r1, r7
    b1cc:	ldr	r0, [r4]
    b1d0:	bl	8b8c <strcat@plt>
    b1d4:	ldr	r7, [r4]
    b1d8:	mov	r0, r7
    b1dc:	bl	8b20 <strlen@plt>
    b1e0:	movw	r3, #51364	; 0xc8a4
    b1e4:	movt	r3, #0
    b1e8:	ldrh	r3, [r3]
    b1ec:	strh	r3, [r7, r0]
    b1f0:	b	b0d4 <fputs@plt+0x24b8>
    b1f4:	push	{r4, lr}
    b1f8:	mov	r4, r0
    b1fc:	ldr	r0, [r0]
    b200:	cmp	r0, #0
    b204:	beq	b20c <fputs@plt+0x25f0>
    b208:	bl	8b98 <_ZdaPv@plt>
    b20c:	mov	r0, r4
    b210:	pop	{r4, pc}
    b214:	push	{r4, r5, r6, r7, r8, lr}
    b218:	mov	r4, r0
    b21c:	ldr	r5, [r0]
    b220:	sub	sp, sp, #8
    b224:	mov	r8, r1
    b228:	mov	r0, r5
    b22c:	bl	8b20 <strlen@plt>
    b230:	mov	r6, r0
    b234:	mov	r0, r8
    b238:	bl	8b20 <strlen@plt>
    b23c:	mov	r7, r0
    b240:	add	r0, r6, r0
    b244:	add	r0, r0, #2
    b248:	bl	8b50 <_Znaj@plt>
    b24c:	ldr	r2, [r4, #4]
    b250:	mov	r1, r5
    b254:	rsb	r2, r2, r6
    b258:	str	r0, [r4]
    b25c:	bl	8b2c <memcpy@plt>
    b260:	ldm	r4, {r1, r3}
    b264:	rsb	r2, r3, r6
    b268:	cmp	r3, #0
    b26c:	add	r3, r1, r2
    b270:	addeq	r3, r3, #1
    b274:	moveq	r0, #58	; 0x3a
    b278:	strbeq	r0, [r1, r2]
    b27c:	mov	r0, r3
    b280:	mov	r2, r7
    b284:	mov	r1, r8
    b288:	bl	8b2c <memcpy@plt>
    b28c:	ldr	r2, [r4, #4]
    b290:	cmp	r2, #0
    b294:	mov	r3, r0
    b298:	add	r0, r0, r7
    b29c:	bne	b2c0 <fputs@plt+0x26a4>
    b2a0:	cmp	r5, #0
    b2a4:	mov	r3, #0
    b2a8:	strb	r3, [r0]
    b2ac:	beq	b2fc <fputs@plt+0x26e0>
    b2b0:	mov	r0, r5
    b2b4:	add	sp, sp, #8
    b2b8:	pop	{r4, r5, r6, r7, r8, lr}
    b2bc:	b	8b98 <_ZdaPv@plt>
    b2c0:	mov	r2, #58	; 0x3a
    b2c4:	strb	r2, [r3, r7]
    b2c8:	ldr	r2, [r4, #4]
    b2cc:	add	r3, r0, #1
    b2d0:	rsb	r1, r2, r6
    b2d4:	mov	r0, r3
    b2d8:	add	r1, r5, r1
    b2dc:	bl	8b2c <memcpy@plt>
    b2e0:	cmp	r5, #0
    b2e4:	mov	r3, r0
    b2e8:	ldr	r0, [r4, #4]
    b2ec:	add	r0, r3, r0
    b2f0:	mov	r3, #0
    b2f4:	strb	r3, [r0]
    b2f8:	bne	b2b0 <fputs@plt+0x2694>
    b2fc:	add	sp, sp, #8
    b300:	pop	{r4, r5, r6, r7, r8, pc}
    b304:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b308:	subs	r8, r1, #0
    b30c:	mov	r4, r0
    b310:	mov	sl, r2
    b314:	beq	b4a0 <fputs@plt+0x2884>
    b318:	ldrb	r3, [r8]
    b31c:	cmp	r3, #47	; 0x2f
    b320:	beq	b414 <fputs@plt+0x27f8>
    b324:	ldr	r5, [r4]
    b328:	ldrb	r3, [r5]
    b32c:	cmp	r3, #0
    b330:	beq	b414 <fputs@plt+0x27f8>
    b334:	mov	r0, r8
    b338:	mov	fp, #47	; 0x2f
    b33c:	bl	8b20 <strlen@plt>
    b340:	add	r9, r0, #1
    b344:	b	b3ec <fputs@plt+0x27d0>
    b348:	cmp	r5, r4
    b34c:	bcs	b368 <fputs@plt+0x274c>
    b350:	movw	r0, #51392	; 0xc8c0
    b354:	ldrb	r1, [r4, #-1]
    b358:	movt	r0, #0
    b35c:	bl	8af0 <strchr@plt>
    b360:	cmp	r0, #0
    b364:	beq	b448 <fputs@plt+0x282c>
    b368:	rsb	r7, r5, r4
    b36c:	add	r0, r9, r7
    b370:	bl	8b50 <_Znaj@plt>
    b374:	mov	r1, r5
    b378:	mov	r2, r7
    b37c:	mov	r6, r0
    b380:	bl	8b2c <memcpy@plt>
    b384:	mov	r3, #0
    b388:	add	r0, r7, r3
    b38c:	mov	r1, r8
    b390:	add	r0, r6, r0
    b394:	bl	8b38 <strcpy@plt>
    b398:	mov	r0, r6
    b39c:	bl	c120 <fputs@plt+0x3504>
    b3a0:	cmp	r6, #0
    b3a4:	mov	r5, r0
    b3a8:	beq	b3b4 <fputs@plt+0x2798>
    b3ac:	mov	r0, r6
    b3b0:	bl	8b98 <_ZdaPv@plt>
    b3b4:	movw	r1, #51388	; 0xc8bc
    b3b8:	mov	r0, r5
    b3bc:	movt	r1, #0
    b3c0:	bl	8afc <fopen@plt>
    b3c4:	subs	r6, r0, #0
    b3c8:	bne	b480 <fputs@plt+0x2864>
    b3cc:	cmp	r5, #0
    b3d0:	beq	b3dc <fputs@plt+0x27c0>
    b3d4:	mov	r0, r5
    b3d8:	bl	8b98 <_ZdaPv@plt>
    b3dc:	ldrb	r3, [r4]
    b3e0:	cmp	r3, #0
    b3e4:	beq	b474 <fputs@plt+0x2858>
    b3e8:	add	r5, r4, #1
    b3ec:	mov	r0, r5
    b3f0:	mov	r1, #58	; 0x3a
    b3f4:	bl	8af0 <strchr@plt>
    b3f8:	subs	r4, r0, #0
    b3fc:	bne	b348 <fputs@plt+0x272c>
    b400:	mov	r1, r4
    b404:	mov	r0, r5
    b408:	bl	8af0 <strchr@plt>
    b40c:	mov	r4, r0
    b410:	b	b348 <fputs@plt+0x272c>
    b414:	movw	r1, #51388	; 0xc8bc
    b418:	mov	r0, r8
    b41c:	movt	r1, #0
    b420:	bl	8afc <fopen@plt>
    b424:	subs	r6, r0, #0
    b428:	beq	b474 <fputs@plt+0x2858>
    b42c:	cmp	sl, #0
    b430:	beq	b440 <fputs@plt+0x2824>
    b434:	mov	r0, r8
    b438:	bl	c120 <fputs@plt+0x3504>
    b43c:	str	r0, [sl]
    b440:	mov	r0, r6
    b444:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b448:	rsb	r7, r5, r4
    b44c:	add	r0, r7, #1
    b450:	add	r0, r9, r0
    b454:	bl	8b50 <_Znaj@plt>
    b458:	mov	r1, r5
    b45c:	mov	r2, r7
    b460:	mov	r6, r0
    b464:	bl	8b2c <memcpy@plt>
    b468:	strb	fp, [r6, r7]
    b46c:	mov	r3, #1
    b470:	b	b388 <fputs@plt+0x276c>
    b474:	mov	r6, #0
    b478:	mov	r0, r6
    b47c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b480:	cmp	sl, #0
    b484:	strne	r5, [sl]
    b488:	bne	b440 <fputs@plt+0x2824>
    b48c:	cmp	r5, #0
    b490:	beq	b440 <fputs@plt+0x2824>
    b494:	mov	r0, r5
    b498:	bl	8b98 <_ZdaPv@plt>
    b49c:	b	b440 <fputs@plt+0x2824>
    b4a0:	movw	r1, #51372	; 0xc8ac
    b4a4:	mov	r0, #98	; 0x62
    b4a8:	movt	r1, #0
    b4ac:	bl	9878 <fputs@plt+0xc5c>
    b4b0:	b	b318 <fputs@plt+0x26fc>
    b4b4:	cmp	r3, #0
    b4b8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4bc:	movw	r8, #51388	; 0xc8bc
    b4c0:	movt	r8, #0
    b4c4:	movne	r8, r3
    b4c8:	mov	r7, r1
    b4cc:	mov	r5, r0
    b4d0:	mov	r1, #114	; 0x72
    b4d4:	mov	r0, r8
    b4d8:	mov	r9, r2
    b4dc:	bl	8af0 <strchr@plt>
    b4e0:	adds	r4, r0, #0
    b4e4:	movne	r4, #1
    b4e8:	cmp	r7, #0
    b4ec:	beq	b618 <fputs@plt+0x29fc>
    b4f0:	movw	r1, #50744	; 0xc638
    b4f4:	mov	r0, r7
    b4f8:	movt	r1, #0
    b4fc:	bl	8bf8 <strcmp@plt>
    b500:	cmp	r0, #0
    b504:	beq	b618 <fputs@plt+0x29fc>
    b508:	cmp	r4, #0
    b50c:	beq	b660 <fputs@plt+0x2a44>
    b510:	ldrb	r3, [r7]
    b514:	cmp	r3, #47	; 0x2f
    b518:	beq	b660 <fputs@plt+0x2a44>
    b51c:	ldr	r5, [r5]
    b520:	ldrb	r3, [r5]
    b524:	cmp	r3, #0
    b528:	beq	b660 <fputs@plt+0x2a44>
    b52c:	mov	r0, r7
    b530:	bl	8b20 <strlen@plt>
    b534:	add	sl, r0, #1
    b538:	b	b5f0 <fputs@plt+0x29d4>
    b53c:	cmp	r5, r4
    b540:	bcs	b55c <fputs@plt+0x2940>
    b544:	movw	r0, #51392	; 0xc8c0
    b548:	ldrb	r1, [r4, #-1]
    b54c:	movt	r0, #0
    b550:	bl	8af0 <strchr@plt>
    b554:	cmp	r0, #0
    b558:	beq	b694 <fputs@plt+0x2a78>
    b55c:	rsb	fp, r5, r4
    b560:	add	r0, sl, fp
    b564:	bl	8b50 <_Znaj@plt>
    b568:	mov	r2, fp
    b56c:	mov	r1, r5
    b570:	mov	r6, r0
    b574:	bl	8b2c <memcpy@plt>
    b578:	mov	r2, #0
    b57c:	add	r0, fp, r2
    b580:	mov	r1, r7
    b584:	add	r0, r6, r0
    b588:	bl	8b38 <strcpy@plt>
    b58c:	mov	r0, r6
    b590:	bl	c120 <fputs@plt+0x3504>
    b594:	cmp	r6, #0
    b598:	mov	r5, r0
    b59c:	beq	b5a8 <fputs@plt+0x298c>
    b5a0:	mov	r0, r6
    b5a4:	bl	8b98 <_ZdaPv@plt>
    b5a8:	mov	r0, r5
    b5ac:	mov	r1, r8
    b5b0:	bl	8afc <fopen@plt>
    b5b4:	subs	r6, r0, #0
    b5b8:	bne	b6d0 <fputs@plt+0x2ab4>
    b5bc:	bl	8c10 <__errno_location@plt>
    b5c0:	cmp	r5, #0
    b5c4:	mov	r6, r0
    b5c8:	ldr	fp, [r0]
    b5cc:	beq	b5d8 <fputs@plt+0x29bc>
    b5d0:	mov	r0, r5
    b5d4:	bl	8b98 <_ZdaPv@plt>
    b5d8:	cmp	fp, #2
    b5dc:	bne	b6e4 <fputs@plt+0x2ac8>
    b5e0:	ldrb	r3, [r4]
    b5e4:	cmp	r3, #0
    b5e8:	beq	b6f0 <fputs@plt+0x2ad4>
    b5ec:	add	r5, r4, #1
    b5f0:	mov	r0, r5
    b5f4:	mov	r1, #58	; 0x3a
    b5f8:	bl	8af0 <strchr@plt>
    b5fc:	subs	r4, r0, #0
    b600:	bne	b53c <fputs@plt+0x2920>
    b604:	mov	r1, r4
    b608:	mov	r0, r5
    b60c:	bl	8af0 <strchr@plt>
    b610:	mov	r4, r0
    b614:	b	b53c <fputs@plt+0x2920>
    b618:	cmp	r9, #0
    b61c:	beq	b640 <fputs@plt+0x2a24>
    b620:	cmp	r4, #0
    b624:	movw	r3, #51396	; 0xc8c4
    b628:	movt	r3, #0
    b62c:	movw	r0, #51404	; 0xc8cc
    b630:	movt	r0, #0
    b634:	movne	r0, r3
    b638:	bl	c120 <fputs@plt+0x3504>
    b63c:	str	r0, [r9]
    b640:	cmp	r4, #0
    b644:	movwne	r3, #20672	; 0x50c0
    b648:	movweq	r3, #20676	; 0x50c4
    b64c:	movtne	r3, #1
    b650:	movteq	r3, #1
    b654:	ldr	r3, [r3]
    b658:	mov	r0, r3
    b65c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b660:	mov	r1, r8
    b664:	mov	r0, r7
    b668:	bl	8afc <fopen@plt>
    b66c:	subs	r4, r0, #0
    b670:	beq	b6c8 <fputs@plt+0x2aac>
    b674:	cmp	r9, #0
    b678:	beq	b6c8 <fputs@plt+0x2aac>
    b67c:	mov	r0, r7
    b680:	bl	c120 <fputs@plt+0x3504>
    b684:	mov	r3, r4
    b688:	str	r0, [r9]
    b68c:	mov	r0, r3
    b690:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b694:	rsb	r3, r5, r4
    b698:	add	r0, r3, #1
    b69c:	add	r0, sl, r0
    b6a0:	mov	fp, r3
    b6a4:	bl	8b50 <_Znaj@plt>
    b6a8:	mov	r2, fp
    b6ac:	mov	r1, r5
    b6b0:	mov	r6, r0
    b6b4:	bl	8b2c <memcpy@plt>
    b6b8:	mov	r3, #47	; 0x2f
    b6bc:	mov	r2, #1
    b6c0:	strb	r3, [r6, fp]
    b6c4:	b	b57c <fputs@plt+0x2960>
    b6c8:	mov	r3, r4
    b6cc:	b	b658 <fputs@plt+0x2a3c>
    b6d0:	cmp	r9, #0
    b6d4:	beq	b6f8 <fputs@plt+0x2adc>
    b6d8:	str	r5, [r9]
    b6dc:	mov	r3, r6
    b6e0:	b	b658 <fputs@plt+0x2a3c>
    b6e4:	str	fp, [r6]
    b6e8:	mov	r3, #0
    b6ec:	b	b658 <fputs@plt+0x2a3c>
    b6f0:	str	fp, [r6]
    b6f4:	b	b658 <fputs@plt+0x2a3c>
    b6f8:	cmp	r5, #0
    b6fc:	moveq	r3, r6
    b700:	beq	b658 <fputs@plt+0x2a3c>
    b704:	mov	r0, r5
    b708:	bl	8b98 <_ZdaPv@plt>
    b70c:	mov	r3, r6
    b710:	b	b658 <fputs@plt+0x2a3c>
    b714:	cmp	r1, r2
    b718:	push	{r3, r4, r5, lr}
    b71c:	mov	r4, r2
    b720:	mov	r5, r3
    b724:	bge	b74c <fputs@plt+0x2b30>
    b728:	cmp	r0, #0
    b72c:	beq	b734 <fputs@plt+0x2b18>
    b730:	bl	8b98 <_ZdaPv@plt>
    b734:	cmp	r4, #0
    b738:	beq	b754 <fputs@plt+0x2b38>
    b73c:	lsl	r0, r4, #1
    b740:	str	r0, [r5]
    b744:	pop	{r3, r4, r5, lr}
    b748:	b	8b50 <_Znaj@plt>
    b74c:	str	r1, [r3]
    b750:	pop	{r3, r4, r5, pc}
    b754:	str	r4, [r5]
    b758:	mov	r0, r4
    b75c:	pop	{r3, r4, r5, pc}
    b760:	cmp	r1, r3
    b764:	push	{r3, r4, r5, r6, r7, lr}
    b768:	mov	r4, r3
    b76c:	mov	r6, r2
    b770:	mov	r5, r0
    b774:	bge	b7b8 <fputs@plt+0x2b9c>
    b778:	cmp	r3, #0
    b77c:	beq	b7c4 <fputs@plt+0x2ba8>
    b780:	lsl	r0, r3, #1
    b784:	ldr	r3, [sp, #24]
    b788:	str	r0, [r3]
    b78c:	bl	8b50 <_Znaj@plt>
    b790:	cmp	r6, #0
    b794:	cmpne	r6, r4
    b798:	mov	r7, r0
    b79c:	blt	b7e8 <fputs@plt+0x2bcc>
    b7a0:	cmp	r5, #0
    b7a4:	beq	b7e0 <fputs@plt+0x2bc4>
    b7a8:	mov	r0, r5
    b7ac:	bl	8b98 <_ZdaPv@plt>
    b7b0:	mov	r0, r7
    b7b4:	pop	{r3, r4, r5, r6, r7, pc}
    b7b8:	ldr	r3, [sp, #24]
    b7bc:	str	r1, [r3]
    b7c0:	pop	{r3, r4, r5, r6, r7, pc}
    b7c4:	cmp	r0, #0
    b7c8:	beq	b7d0 <fputs@plt+0x2bb4>
    b7cc:	bl	8b98 <_ZdaPv@plt>
    b7d0:	ldr	r3, [sp, #24]
    b7d4:	mov	r0, #0
    b7d8:	str	r0, [r3]
    b7dc:	pop	{r3, r4, r5, r6, r7, pc}
    b7e0:	mov	r0, r7
    b7e4:	pop	{r3, r4, r5, r6, r7, pc}
    b7e8:	mov	r2, r6
    b7ec:	mov	r1, r5
    b7f0:	bl	8b2c <memcpy@plt>
    b7f4:	b	b7a0 <fputs@plt+0x2b84>
    b7f8:	mov	r2, #0
    b7fc:	str	r2, [r0]
    b800:	str	r2, [r0, #4]
    b804:	str	r2, [r0, #8]
    b808:	bx	lr
    b80c:	cmp	r2, #0
    b810:	push	{r4, r5, r6, lr}
    b814:	mov	r4, r0
    b818:	mov	r5, r2
    b81c:	mov	r6, r1
    b820:	str	r2, [r4, #4]
    b824:	blt	b83c <fputs@plt+0x2c20>
    b828:	bne	b84c <fputs@plt+0x2c30>
    b82c:	str	r2, [r4, #8]
    b830:	mov	r0, r4
    b834:	str	r2, [r4]
    b838:	pop	{r4, r5, r6, pc}
    b83c:	movw	r1, #51412	; 0xc8d4
    b840:	mov	r0, #86	; 0x56
    b844:	movt	r1, #0
    b848:	bl	9878 <fputs@plt+0xc5c>
    b84c:	lsl	r0, r5, #1
    b850:	str	r0, [r4, #8]
    b854:	bl	8b50 <_Znaj@plt>
    b858:	mov	r1, r6
    b85c:	mov	r2, r5
    b860:	str	r0, [r4]
    b864:	bl	8b2c <memcpy@plt>
    b868:	mov	r0, r4
    b86c:	pop	{r4, r5, r6, pc}
    b870:	push	{r3, r4, r5, lr}
    b874:	subs	r5, r1, #0
    b878:	mov	r4, r0
    b87c:	streq	r5, [r0, #4]
    b880:	streq	r5, [r0]
    b884:	streq	r5, [r0, #8]
    b888:	beq	b8b4 <fputs@plt+0x2c98>
    b88c:	mov	r0, r5
    b890:	bl	8b20 <strlen@plt>
    b894:	cmp	r0, #0
    b898:	mov	r2, r0
    b89c:	str	r0, [r4, #4]
    b8a0:	bne	b8bc <fputs@plt+0x2ca0>
    b8a4:	str	r0, [r4, #8]
    b8a8:	str	r0, [r4]
    b8ac:	mov	r1, r5
    b8b0:	bl	8b2c <memcpy@plt>
    b8b4:	mov	r0, r4
    b8b8:	pop	{r3, r4, r5, pc}
    b8bc:	lsl	r0, r0, #1
    b8c0:	str	r0, [r4, #8]
    b8c4:	bl	8b50 <_Znaj@plt>
    b8c8:	ldr	r2, [r4, #4]
    b8cc:	b	b8a8 <fputs@plt+0x2c8c>
    b8d0:	push	{r3, r4, r5, lr}
    b8d4:	mov	r4, r0
    b8d8:	mov	r3, #1
    b8dc:	mov	r0, #2
    b8e0:	str	r3, [r4, #4]
    b8e4:	mov	r5, r1
    b8e8:	str	r0, [r4, #8]
    b8ec:	bl	8b50 <_Znaj@plt>
    b8f0:	mov	r3, r0
    b8f4:	mov	r0, r4
    b8f8:	str	r3, [r4]
    b8fc:	strb	r5, [r3]
    b900:	pop	{r3, r4, r5, pc}
    b904:	push	{r3, r4, r5, lr}
    b908:	mov	r4, r0
    b90c:	ldr	r0, [r1, #4]
    b910:	mov	r5, r1
    b914:	cmp	r0, #0
    b918:	str	r0, [r4, #4]
    b91c:	bne	b930 <fputs@plt+0x2d14>
    b920:	str	r0, [r4, #8]
    b924:	str	r0, [r4]
    b928:	mov	r0, r4
    b92c:	pop	{r3, r4, r5, pc}
    b930:	lsl	r0, r0, #1
    b934:	str	r0, [r4, #8]
    b938:	bl	8b50 <_Znaj@plt>
    b93c:	ldr	r2, [r4, #4]
    b940:	cmp	r2, #0
    b944:	str	r0, [r4]
    b948:	beq	b928 <fputs@plt+0x2d0c>
    b94c:	ldr	r1, [r5]
    b950:	bl	8b2c <memcpy@plt>
    b954:	mov	r0, r4
    b958:	pop	{r3, r4, r5, pc}
    b95c:	push	{r4, lr}
    b960:	mov	r4, r0
    b964:	ldr	r0, [r0]
    b968:	cmp	r0, #0
    b96c:	beq	b974 <fputs@plt+0x2d58>
    b970:	bl	8b98 <_ZdaPv@plt>
    b974:	mov	r0, r4
    b978:	pop	{r4, pc}
    b97c:	push	{r3, r4, r5, lr}
    b980:	mov	r5, r1
    b984:	mov	r3, r0
    b988:	mov	r4, r0
    b98c:	ldr	r2, [r5, #4]
    b990:	ldr	r0, [r0]
    b994:	ldr	r1, [r3, #8]!
    b998:	bl	b714 <fputs@plt+0x2af8>
    b99c:	ldr	r2, [r5, #4]
    b9a0:	cmp	r2, #0
    b9a4:	stm	r4, {r0, r2}
    b9a8:	beq	b9b4 <fputs@plt+0x2d98>
    b9ac:	ldr	r1, [r5]
    b9b0:	bl	8b2c <memcpy@plt>
    b9b4:	mov	r0, r4
    b9b8:	pop	{r3, r4, r5, pc}
    b9bc:	push	{r4, r5, r6, lr}
    b9c0:	subs	r6, r1, #0
    b9c4:	mov	r4, r0
    b9c8:	beq	ba08 <fputs@plt+0x2dec>
    b9cc:	mov	r0, r6
    b9d0:	bl	8b20 <strlen@plt>
    b9d4:	mov	r3, r4
    b9d8:	ldr	r1, [r3, #8]!
    b9dc:	mov	r5, r0
    b9e0:	mov	r2, r0
    b9e4:	ldr	r0, [r4]
    b9e8:	bl	b714 <fputs@plt+0x2af8>
    b9ec:	str	r5, [r4, #4]
    b9f0:	mov	r2, r5
    b9f4:	mov	r1, r6
    b9f8:	str	r0, [r4]
    b9fc:	bl	8b2c <memcpy@plt>
    ba00:	mov	r0, r4
    ba04:	pop	{r4, r5, r6, pc}
    ba08:	ldr	r0, [r0]
    ba0c:	cmp	r0, #0
    ba10:	beq	ba18 <fputs@plt+0x2dfc>
    ba14:	bl	8b98 <_ZdaPv@plt>
    ba18:	mov	r3, #0
    ba1c:	mov	r0, r4
    ba20:	str	r3, [r4, #4]
    ba24:	str	r3, [r4]
    ba28:	str	r3, [r4, #8]
    ba2c:	pop	{r4, r5, r6, pc}
    ba30:	push	{r3, r4, r5, lr}
    ba34:	mov	r3, r0
    ba38:	mov	r4, r0
    ba3c:	mov	r5, r1
    ba40:	mov	r2, #1
    ba44:	ldr	r1, [r3, #8]!
    ba48:	ldr	r0, [r0]
    ba4c:	bl	b714 <fputs@plt+0x2af8>
    ba50:	mov	r2, #1
    ba54:	str	r2, [r4, #4]
    ba58:	mov	r3, r0
    ba5c:	str	r0, [r4]
    ba60:	mov	r0, r4
    ba64:	strb	r5, [r3]
    ba68:	pop	{r3, r4, r5, pc}
    ba6c:	push	{r3, r4, r5, lr}
    ba70:	mov	r5, r0
    ba74:	ldr	r0, [r0]
    ba78:	mov	r4, r1
    ba7c:	cmp	r0, #0
    ba80:	beq	ba88 <fputs@plt+0x2e6c>
    ba84:	bl	8b98 <_ZdaPv@plt>
    ba88:	ldmib	r4, {r1, r2}
    ba8c:	mov	r3, #0
    ba90:	ldr	r0, [r4]
    ba94:	stm	r5, {r0, r1, r2}
    ba98:	str	r3, [r4]
    ba9c:	str	r3, [r4, #4]
    baa0:	str	r3, [r4, #8]
    baa4:	pop	{r3, r4, r5, pc}
    baa8:	mov	ip, r0
    baac:	ldr	r2, [r0, #4]
    bab0:	ldr	r1, [ip, #8]!
    bab4:	push	{r4, lr}
    bab8:	sub	sp, sp, #8
    babc:	mov	r4, r0
    bac0:	add	r3, r2, #1
    bac4:	ldr	r0, [r0]
    bac8:	str	ip, [sp]
    bacc:	bl	b760 <fputs@plt+0x2b44>
    bad0:	str	r0, [r4]
    bad4:	add	sp, sp, #8
    bad8:	pop	{r4, pc}
    badc:	push	{r4, r5, r6, r7, lr}
    bae0:	subs	r6, r1, #0
    bae4:	sub	sp, sp, #12
    bae8:	mov	r4, r0
    baec:	beq	bb28 <fputs@plt+0x2f0c>
    baf0:	mov	r0, r6
    baf4:	bl	8b20 <strlen@plt>
    baf8:	ldr	r2, [r4, #4]
    bafc:	ldr	r1, [r4, #8]
    bb00:	add	r5, r2, r0
    bb04:	mov	r7, r0
    bb08:	cmp	r5, r1
    bb0c:	bgt	bb34 <fputs@plt+0x2f18>
    bb10:	ldr	r0, [r4]
    bb14:	add	r0, r0, r2
    bb18:	mov	r1, r6
    bb1c:	mov	r2, r7
    bb20:	bl	8b2c <memcpy@plt>
    bb24:	str	r5, [r4, #4]
    bb28:	mov	r0, r4
    bb2c:	add	sp, sp, #12
    bb30:	pop	{r4, r5, r6, r7, pc}
    bb34:	mov	lr, r4
    bb38:	mov	r3, r5
    bb3c:	ldr	r0, [lr], #8
    bb40:	str	lr, [sp]
    bb44:	bl	b760 <fputs@plt+0x2b44>
    bb48:	ldr	r2, [r4, #4]
    bb4c:	str	r0, [r4]
    bb50:	b	bb14 <fputs@plt+0x2ef8>
    bb54:	ldr	ip, [r1, #4]
    bb58:	push	{r4, r5, r6, lr}
    bb5c:	cmp	ip, #0
    bb60:	sub	sp, sp, #8
    bb64:	mov	r5, r1
    bb68:	mov	r4, r0
    bb6c:	beq	bb9c <fputs@plt+0x2f80>
    bb70:	ldr	lr, [r0, #4]
    bb74:	ldr	r1, [r0, #8]
    bb78:	add	r6, ip, lr
    bb7c:	cmp	r6, r1
    bb80:	bgt	bba8 <fputs@plt+0x2f8c>
    bb84:	ldr	r0, [r0]
    bb88:	mov	r2, ip
    bb8c:	add	r0, r0, lr
    bb90:	ldr	r1, [r5]
    bb94:	bl	8b2c <memcpy@plt>
    bb98:	str	r6, [r4, #4]
    bb9c:	mov	r0, r4
    bba0:	add	sp, sp, #8
    bba4:	pop	{r4, r5, r6, pc}
    bba8:	mov	ip, r0
    bbac:	mov	r2, lr
    bbb0:	ldr	r0, [ip], #8
    bbb4:	mov	r3, r6
    bbb8:	str	ip, [sp]
    bbbc:	bl	b760 <fputs@plt+0x2b44>
    bbc0:	ldr	r2, [r5, #4]
    bbc4:	ldr	lr, [r4, #4]
    bbc8:	str	r0, [r4]
    bbcc:	b	bb8c <fputs@plt+0x2f70>
    bbd0:	push	{r4, r5, r6, r7, lr}
    bbd4:	subs	r6, r2, #0
    bbd8:	sub	sp, sp, #12
    bbdc:	mov	r4, r0
    bbe0:	mov	r7, r1
    bbe4:	ble	bc14 <fputs@plt+0x2ff8>
    bbe8:	ldr	r2, [r0, #4]
    bbec:	ldr	r1, [r0, #8]
    bbf0:	add	r5, r2, r6
    bbf4:	cmp	r5, r1
    bbf8:	bgt	bc1c <fputs@plt+0x3000>
    bbfc:	ldr	r0, [r0]
    bc00:	add	r0, r0, r2
    bc04:	mov	r1, r7
    bc08:	mov	r2, r6
    bc0c:	bl	8b2c <memcpy@plt>
    bc10:	str	r5, [r4, #4]
    bc14:	add	sp, sp, #12
    bc18:	pop	{r4, r5, r6, r7, pc}
    bc1c:	mov	lr, r0
    bc20:	mov	r3, r5
    bc24:	ldr	r0, [lr], #8
    bc28:	str	lr, [sp]
    bc2c:	bl	b760 <fputs@plt+0x2b44>
    bc30:	ldr	r2, [r4, #4]
    bc34:	str	r0, [r4]
    bc38:	b	bc00 <fputs@plt+0x2fe4>
    bc3c:	push	{r4, r5, r6, r7, r8, lr}
    bc40:	mov	r6, r2
    bc44:	ldr	r5, [sp, #24]
    bc48:	mov	r4, r0
    bc4c:	mov	r8, r1
    bc50:	mov	r7, r3
    bc54:	cmp	r2, #0
    bc58:	cmpge	r5, #0
    bc5c:	blt	bcc0 <fputs@plt+0x30a4>
    bc60:	add	ip, r6, r5
    bc64:	str	ip, [r4, #4]
    bc68:	cmp	ip, #0
    bc6c:	streq	ip, [r4, #8]
    bc70:	streq	ip, [r4]
    bc74:	beq	bca4 <fputs@plt+0x3088>
    bc78:	lsl	r0, ip, #1
    bc7c:	str	r0, [r4, #8]
    bc80:	bl	8b50 <_Znaj@plt>
    bc84:	cmp	r6, #0
    bc88:	str	r0, [r4]
    bc8c:	beq	bcac <fputs@plt+0x3090>
    bc90:	mov	r1, r8
    bc94:	mov	r2, r6
    bc98:	bl	8b2c <memcpy@plt>
    bc9c:	cmp	r5, #0
    bca0:	bne	bcd4 <fputs@plt+0x30b8>
    bca4:	mov	r0, r4
    bca8:	pop	{r4, r5, r6, r7, r8, pc}
    bcac:	mov	r1, r7
    bcb0:	mov	r2, r5
    bcb4:	bl	8b2c <memcpy@plt>
    bcb8:	mov	r0, r4
    bcbc:	pop	{r4, r5, r6, r7, r8, pc}
    bcc0:	movw	r1, #51412	; 0xc8d4
    bcc4:	mov	r0, #212	; 0xd4
    bcc8:	movt	r1, #0
    bccc:	bl	9878 <fputs@plt+0xc5c>
    bcd0:	b	bc60 <fputs@plt+0x3044>
    bcd4:	ldr	r0, [r4]
    bcd8:	mov	r1, r7
    bcdc:	mov	r2, r5
    bce0:	add	r0, r0, r6
    bce4:	bl	8b2c <memcpy@plt>
    bce8:	mov	r0, r4
    bcec:	pop	{r4, r5, r6, r7, r8, pc}
    bcf0:	push	{r3, lr}
    bcf4:	ldr	r2, [r0, #4]
    bcf8:	ldr	r3, [r1, #4]
    bcfc:	cmp	r2, r3
    bd00:	bgt	bd28 <fputs@plt+0x310c>
    bd04:	cmp	r2, #0
    bd08:	beq	bd4c <fputs@plt+0x3130>
    bd0c:	ldr	r0, [r0]
    bd10:	ldr	r1, [r1]
    bd14:	bl	8a9c <memcmp@plt>
    bd18:	cmp	r0, #0
    bd1c:	movgt	r0, #0
    bd20:	movle	r0, #1
    bd24:	pop	{r3, pc}
    bd28:	cmp	r3, #0
    bd2c:	beq	bd44 <fputs@plt+0x3128>
    bd30:	mov	r2, r3
    bd34:	ldr	r0, [r0]
    bd38:	ldr	r1, [r1]
    bd3c:	bl	8a9c <memcmp@plt>
    bd40:	lsr	r3, r0, #31
    bd44:	mov	r0, r3
    bd48:	pop	{r3, pc}
    bd4c:	mov	r0, #1
    bd50:	pop	{r3, pc}
    bd54:	push	{r3, lr}
    bd58:	ldr	r2, [r0, #4]
    bd5c:	ldr	r3, [r1, #4]
    bd60:	cmp	r2, r3
    bd64:	bge	bd8c <fputs@plt+0x3170>
    bd68:	cmp	r2, #0
    bd6c:	beq	bdb0 <fputs@plt+0x3194>
    bd70:	ldr	r0, [r0]
    bd74:	ldr	r1, [r1]
    bd78:	bl	8a9c <memcmp@plt>
    bd7c:	cmp	r0, #0
    bd80:	movgt	r0, #0
    bd84:	movle	r0, #1
    bd88:	pop	{r3, pc}
    bd8c:	cmp	r3, #0
    bd90:	beq	bda8 <fputs@plt+0x318c>
    bd94:	mov	r2, r3
    bd98:	ldr	r0, [r0]
    bd9c:	ldr	r1, [r1]
    bda0:	bl	8a9c <memcmp@plt>
    bda4:	lsr	r3, r0, #31
    bda8:	mov	r0, r3
    bdac:	pop	{r3, pc}
    bdb0:	mov	r0, #1
    bdb4:	pop	{r3, pc}
    bdb8:	push	{r3, lr}
    bdbc:	ldr	r2, [r1, #4]
    bdc0:	ldr	r3, [r0, #4]
    bdc4:	cmp	r3, r2
    bdc8:	blt	bdec <fputs@plt+0x31d0>
    bdcc:	cmp	r2, #0
    bdd0:	beq	be18 <fputs@plt+0x31fc>
    bdd4:	ldr	r0, [r0]
    bdd8:	ldr	r1, [r1]
    bddc:	bl	8a9c <memcmp@plt>
    bde0:	mvn	r0, r0
    bde4:	lsr	r0, r0, #31
    bde8:	pop	{r3, pc}
    bdec:	cmp	r3, #0
    bdf0:	beq	be10 <fputs@plt+0x31f4>
    bdf4:	mov	r2, r3
    bdf8:	ldr	r0, [r0]
    bdfc:	ldr	r1, [r1]
    be00:	bl	8a9c <memcmp@plt>
    be04:	cmp	r0, #0
    be08:	movle	r3, #0
    be0c:	movgt	r3, #1
    be10:	mov	r0, r3
    be14:	pop	{r3, pc}
    be18:	mov	r0, #1
    be1c:	pop	{r3, pc}
    be20:	push	{r3, lr}
    be24:	ldr	r2, [r1, #4]
    be28:	ldr	r3, [r0, #4]
    be2c:	cmp	r3, r2
    be30:	ble	be54 <fputs@plt+0x3238>
    be34:	cmp	r2, #0
    be38:	beq	be80 <fputs@plt+0x3264>
    be3c:	ldr	r0, [r0]
    be40:	ldr	r1, [r1]
    be44:	bl	8a9c <memcmp@plt>
    be48:	mvn	r0, r0
    be4c:	lsr	r0, r0, #31
    be50:	pop	{r3, pc}
    be54:	cmp	r3, #0
    be58:	beq	be78 <fputs@plt+0x325c>
    be5c:	mov	r2, r3
    be60:	ldr	r0, [r0]
    be64:	ldr	r1, [r1]
    be68:	bl	8a9c <memcmp@plt>
    be6c:	cmp	r0, #0
    be70:	movle	r3, #0
    be74:	movgt	r3, #1
    be78:	mov	r0, r3
    be7c:	pop	{r3, pc}
    be80:	mov	r0, #1
    be84:	pop	{r3, pc}
    be88:	push	{r4, r5, lr}
    be8c:	subs	r5, r1, #0
    be90:	sub	sp, sp, #12
    be94:	mov	r4, r0
    be98:	blt	becc <fputs@plt+0x32b0>
    be9c:	ldr	r1, [r4, #8]
    bea0:	cmp	r5, r1
    bea4:	ble	bec0 <fputs@plt+0x32a4>
    bea8:	ldm	r4, {r0, r2}
    beac:	add	ip, r4, #8
    beb0:	mov	r3, r5
    beb4:	str	ip, [sp]
    beb8:	bl	b760 <fputs@plt+0x2b44>
    bebc:	str	r0, [r4]
    bec0:	str	r5, [r4, #4]
    bec4:	add	sp, sp, #12
    bec8:	pop	{r4, r5, pc}
    becc:	movw	r1, #51412	; 0xc8d4
    bed0:	mov	r0, #260	; 0x104
    bed4:	movt	r1, #0
    bed8:	bl	9878 <fputs@plt+0xc5c>
    bedc:	b	be9c <fputs@plt+0x3280>
    bee0:	mov	r3, #0
    bee4:	str	r3, [r0, #4]
    bee8:	bx	lr
    beec:	push	{r4, lr}
    bef0:	ldr	r4, [r0]
    bef4:	cmp	r4, #0
    bef8:	beq	bf18 <fputs@plt+0x32fc>
    befc:	ldr	r2, [r0, #4]
    bf00:	mov	r0, r4
    bf04:	bl	8bec <memchr@plt>
    bf08:	cmp	r0, #0
    bf0c:	beq	bf18 <fputs@plt+0x32fc>
    bf10:	rsb	r0, r4, r0
    bf14:	pop	{r4, pc}
    bf18:	mvn	r0, #0
    bf1c:	pop	{r4, pc}
    bf20:	push	{r3, r4, r5, lr}
    bf24:	ldm	r0, {r5, lr}
    bf28:	cmp	lr, #0
    bf2c:	ble	bf88 <fputs@plt+0x336c>
    bf30:	add	r4, r5, lr
    bf34:	mov	r2, r5
    bf38:	mov	ip, #0
    bf3c:	ldrb	r1, [r2], #1
    bf40:	cmp	r1, #0
    bf44:	addeq	ip, ip, #1
    bf48:	cmp	r2, r4
    bf4c:	bne	bf3c <fputs@plt+0x3320>
    bf50:	add	r0, lr, #1
    bf54:	rsb	r0, ip, r0
    bf58:	bl	8b50 <_Znaj@plt>
    bf5c:	mov	r3, r5
    bf60:	mov	r1, r0
    bf64:	ldrb	r2, [r3], #1
    bf68:	cmp	r2, #0
    bf6c:	strbne	r2, [r1]
    bf70:	addne	r1, r1, #1
    bf74:	cmp	r3, r4
    bf78:	bne	bf64 <fputs@plt+0x3348>
    bf7c:	mov	r3, #0
    bf80:	strb	r3, [r1]
    bf84:	pop	{r3, r4, r5, pc}
    bf88:	add	r0, lr, #1
    bf8c:	bl	8b50 <_Znaj@plt>
    bf90:	mov	r1, r0
    bf94:	b	bf7c <fputs@plt+0x3360>
    bf98:	push	{r4, r5, r6, lr}
    bf9c:	mov	r5, r0
    bfa0:	ldr	r0, [r0, #4]
    bfa4:	ldr	ip, [r5]
    bfa8:	subs	r0, r0, #1
    bfac:	bmi	c084 <fputs@plt+0x3468>
    bfb0:	ldrb	r3, [ip, r0]
    bfb4:	cmp	r3, #32
    bfb8:	mov	r3, r0
    bfbc:	beq	bfd0 <fputs@plt+0x33b4>
    bfc0:	b	c048 <fputs@plt+0x342c>
    bfc4:	ldrb	r2, [ip, r3]
    bfc8:	cmp	r2, #32
    bfcc:	bne	c048 <fputs@plt+0x342c>
    bfd0:	subs	r3, r3, #1
    bfd4:	bcs	bfc4 <fputs@plt+0x33a8>
    bfd8:	cmp	r3, r0
    bfdc:	mov	r4, ip
    bfe0:	popeq	{r4, r5, r6, pc}
    bfe4:	cmp	r3, #0
    bfe8:	blt	c024 <fputs@plt+0x3408>
    bfec:	add	r3, r3, #1
    bff0:	ldr	r0, [r5, #8]
    bff4:	str	r3, [r5, #4]
    bff8:	bl	8b50 <_Znaj@plt>
    bffc:	mov	r1, r4
    c000:	ldr	r2, [r5, #4]
    c004:	mov	r6, r0
    c008:	bl	8b2c <memcpy@plt>
    c00c:	ldr	r0, [r5]
    c010:	cmp	r0, #0
    c014:	beq	c01c <fputs@plt+0x3400>
    c018:	bl	8b98 <_ZdaPv@plt>
    c01c:	str	r6, [r5]
    c020:	pop	{r4, r5, r6, pc}
    c024:	cmp	ip, #0
    c028:	mov	r4, #0
    c02c:	str	r4, [r5, #4]
    c030:	popeq	{r4, r5, r6, pc}
    c034:	mov	r0, ip
    c038:	bl	8b98 <_ZdaPv@plt>
    c03c:	str	r4, [r5]
    c040:	str	r4, [r5, #8]
    c044:	pop	{r4, r5, r6, pc}
    c048:	cmp	r3, #0
    c04c:	beq	c08c <fputs@plt+0x3470>
    c050:	ldrb	r2, [ip]
    c054:	cmp	r2, #32
    c058:	bne	c09c <fputs@plt+0x3480>
    c05c:	add	r2, ip, #1
    c060:	ldrb	r1, [r2]
    c064:	mov	r4, r2
    c068:	sub	r3, r3, #1
    c06c:	add	r2, r2, #1
    c070:	cmp	r1, #32
    c074:	beq	c060 <fputs@plt+0x3444>
    c078:	cmp	r3, r0
    c07c:	bne	bfe4 <fputs@plt+0x33c8>
    c080:	pop	{r4, r5, r6, pc}
    c084:	mov	r3, r0
    c088:	b	bfd8 <fputs@plt+0x33bc>
    c08c:	cmp	r0, #0
    c090:	popeq	{r4, r5, r6, pc}
    c094:	mov	r4, ip
    c098:	b	bfec <fputs@plt+0x33d0>
    c09c:	cmp	r0, r3
    c0a0:	bne	c094 <fputs@plt+0x3478>
    c0a4:	pop	{r4, r5, r6, pc}
    c0a8:	push	{r4, r5, r6, lr}
    c0ac:	mov	r5, r1
    c0b0:	ldm	r0, {r4, r6}
    c0b4:	cmp	r6, #0
    c0b8:	pople	{r4, r5, r6, pc}
    c0bc:	add	r6, r4, r6
    c0c0:	ldrb	r0, [r4], #1
    c0c4:	mov	r1, r5
    c0c8:	bl	8be0 <_IO_putc@plt>
    c0cc:	cmp	r4, r6
    c0d0:	bne	c0c0 <fputs@plt+0x34a4>
    c0d4:	pop	{r4, r5, r6, pc}
    c0d8:	push	{r4, r5, lr}
    c0dc:	movw	r4, #20836	; 0x5164
    c0e0:	sub	sp, sp, #12
    c0e4:	movt	r4, #1
    c0e8:	mov	r5, r0
    c0ec:	mov	r2, #12
    c0f0:	str	r1, [sp]
    c0f4:	mov	r0, r4
    c0f8:	mov	r1, #1
    c0fc:	movw	r3, #51424	; 0xc8e0
    c100:	movt	r3, #0
    c104:	bl	8bb0 <__sprintf_chk@plt>
    c108:	mov	r0, r5
    c10c:	mov	r1, r4
    c110:	bl	b870 <fputs@plt+0x2c54>
    c114:	mov	r0, r5
    c118:	add	sp, sp, #12
    c11c:	pop	{r4, r5, pc}
    c120:	push	{r4, lr}
    c124:	subs	r4, r0, #0
    c128:	beq	c144 <fputs@plt+0x3528>
    c12c:	bl	8b20 <strlen@plt>
    c130:	add	r0, r0, #1
    c134:	bl	8b50 <_Znaj@plt>
    c138:	mov	r1, r4
    c13c:	bl	8b38 <strcpy@plt>
    c140:	pop	{r4, pc}
    c144:	mov	r0, r4
    c148:	pop	{r4, pc}
    c14c:	push	{r3, r4, r5, lr}
    c150:	movw	r4, #20732	; 0x50fc
    c154:	movt	r4, #1
    c158:	mov	r5, r0
    c15c:	ldr	r0, [r4]
    c160:	cmp	r0, #0
    c164:	beq	c178 <fputs@plt+0x355c>
    c168:	mov	r1, r5
    c16c:	bl	8bf8 <strcmp@plt>
    c170:	cmp	r0, #0
    c174:	popeq	{r3, r4, r5, pc}
    c178:	mov	r0, r5
    c17c:	bl	c120 <fputs@plt+0x3504>
    c180:	str	r0, [r4]
    c184:	pop	{r3, r4, r5, pc}
    c188:	movw	r3, #20828	; 0x515c
    c18c:	movt	r3, #1
    c190:	str	r0, [r3]
    c194:	bx	lr
    c198:	mov	r3, #0
    c19c:	mov	r2, r3
    c1a0:	strb	r2, [r0, r3]
    c1a4:	add	r3, r3, #1
    c1a8:	cmp	r3, #256	; 0x100
    c1ac:	bne	c1a0 <fputs@plt+0x3584>
    c1b0:	bx	lr
    c1b4:	mov	r3, #0
    c1b8:	mov	r2, r3
    c1bc:	strb	r2, [r0, r3]
    c1c0:	add	r3, r3, #1
    c1c4:	cmp	r3, #256	; 0x100
    c1c8:	bne	c1bc <fputs@plt+0x35a0>
    c1cc:	bx	lr
    c1d0:	mov	r3, #0
    c1d4:	mov	r2, r3
    c1d8:	strb	r2, [r0, r3]
    c1dc:	add	r3, r3, #1
    c1e0:	cmp	r3, #256	; 0x100
    c1e4:	bne	c1d8 <fputs@plt+0x35bc>
    c1e8:	ldrb	r3, [r1]
    c1ec:	cmp	r3, #0
    c1f0:	bxeq	lr
    c1f4:	mov	r2, #1
    c1f8:	strb	r2, [r0, r3]
    c1fc:	ldrb	r3, [r1, #1]!
    c200:	cmp	r3, #0
    c204:	bne	c1f8 <fputs@plt+0x35dc>
    c208:	bx	lr
    c20c:	mov	r3, #0
    c210:	mov	r2, r3
    c214:	strb	r2, [r0, r3]
    c218:	add	r3, r3, #1
    c21c:	cmp	r3, #256	; 0x100
    c220:	bne	c214 <fputs@plt+0x35f8>
    c224:	ldrb	r3, [r1]
    c228:	cmp	r3, #0
    c22c:	bxeq	lr
    c230:	mov	r2, #1
    c234:	strb	r2, [r0, r3]
    c238:	ldrb	r3, [r1, #1]!
    c23c:	cmp	r3, #0
    c240:	bne	c234 <fputs@plt+0x3618>
    c244:	bx	lr
    c248:	bx	lr
    c24c:	mov	r3, #0
    c250:	mov	ip, #1
    c254:	ldrb	r2, [r1, r3]
    c258:	cmp	r2, #0
    c25c:	strbne	ip, [r0, r3]
    c260:	add	r3, r3, #1
    c264:	cmp	r3, #256	; 0x100
    c268:	bne	c254 <fputs@plt+0x3638>
    c26c:	bx	lr
    c270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c274:	movw	fp, #20848	; 0x5170
    c278:	movt	fp, #1
    c27c:	sub	sp, sp, #28
    c280:	ldr	r4, [fp]
    c284:	str	r0, [sp, #20]
    c288:	cmp	r4, #0
    c28c:	bne	c4bc <fputs@plt+0x38a0>
    c290:	add	r3, fp, #1792	; 0x700
    c294:	str	r3, [sp, #12]
    c298:	add	ip, fp, #2048	; 0x800
    c29c:	add	r3, fp, #2304	; 0x900
    c2a0:	str	ip, [sp, #4]
    c2a4:	add	ip, fp, #2560	; 0xa00
    c2a8:	str	r3, [sp, #16]
    c2ac:	add	sl, fp, #1024	; 0x400
    c2b0:	ldr	r3, [sp, #12]
    c2b4:	add	r9, fp, #1280	; 0x500
    c2b8:	str	ip, [sp, #8]
    c2bc:	add	r8, fp, #1536	; 0x600
    c2c0:	ldr	ip, [sp, #4]
    c2c4:	add	r3, r3, #4
    c2c8:	str	r3, [sp, #12]
    c2cc:	mov	r7, fp
    c2d0:	ldr	r3, [sp, #16]
    c2d4:	add	ip, ip, #4
    c2d8:	str	ip, [sp, #4]
    c2dc:	add	sl, sl, #4
    c2e0:	ldr	ip, [sp, #8]
    c2e4:	add	r3, r3, #4
    c2e8:	str	r3, [sp, #16]
    c2ec:	mov	r3, #1
    c2f0:	add	ip, ip, #4
    c2f4:	add	r9, r9, #4
    c2f8:	add	r8, r8, #4
    c2fc:	str	ip, [sp, #8]
    c300:	mov	r5, r4
    c304:	mov	r6, r3
    c308:	add	fp, fp, #772	; 0x304
    c30c:	str	r3, [r7], #4
    c310:	b	c474 <fputs@plt+0x3858>
    c314:	bl	8b5c <__ctype_b_loc@plt>
    c318:	lsl	r3, r4, #1
    c31c:	sub	ip, r4, #48	; 0x30
    c320:	str	ip, [sp]
    c324:	ldr	ip, [sp, #8]
    c328:	mov	r2, #1
    c32c:	ldr	r1, [r0]
    c330:	ldrh	r1, [r1, r3]
    c334:	and	r1, r1, #1024	; 0x400
    c338:	uxth	r1, r1
    c33c:	cmp	r1, #0
    c340:	movne	r1, r6
    c344:	strb	r1, [ip, r4]
    c348:	ldr	r1, [r0]
    c34c:	ldr	ip, [sp]
    c350:	ldrh	r1, [r1, r3]
    c354:	and	r1, r1, #256	; 0x100
    c358:	uxth	r1, r1
    c35c:	cmp	r1, #0
    c360:	movne	r1, r6
    c364:	strb	r1, [r7, r4]
    c368:	ldr	r1, [r0]
    c36c:	ldrh	r1, [r1, r3]
    c370:	and	r1, r1, #512	; 0x200
    c374:	uxth	r1, r1
    c378:	cmp	r1, #0
    c37c:	movne	r1, r6
    c380:	cmp	ip, #10
    c384:	ldr	ip, [pc, #316]	; c4c8 <fputs@plt+0x38ac>
    c388:	strb	r1, [ip, r4]
    c38c:	add	ip, ip, #256	; 0x100
    c390:	movcc	r1, r6
    c394:	movcs	r1, r5
    c398:	strb	r1, [ip, r4]
    c39c:	ldr	r1, [r0]
    c3a0:	ldr	ip, [sp, #12]
    c3a4:	ldrh	r1, [r1, r3]
    c3a8:	and	r1, r1, #4096	; 0x1000
    c3ac:	uxth	r1, r1
    c3b0:	cmp	r1, #0
    c3b4:	movne	r1, r6
    c3b8:	strb	r1, [fp, r4]
    c3bc:	ldr	r1, [r0]
    c3c0:	ldrh	r1, [r1, r3]
    c3c4:	and	r1, r1, #8192	; 0x2000
    c3c8:	uxth	r1, r1
    c3cc:	cmp	r1, #0
    c3d0:	movne	r1, r6
    c3d4:	strb	r1, [sl, r4]
    c3d8:	ldr	r1, [r0]
    c3dc:	ldrh	r1, [r1, r3]
    c3e0:	and	r1, r1, #4
    c3e4:	uxth	r1, r1
    c3e8:	cmp	r1, #0
    c3ec:	movne	r1, r6
    c3f0:	strb	r1, [r9, r4]
    c3f4:	ldr	r1, [r0]
    c3f8:	ldrh	r1, [r1, r3]
    c3fc:	and	r1, r1, #8
    c400:	uxth	r1, r1
    c404:	cmp	r1, #0
    c408:	movne	r1, r6
    c40c:	strb	r1, [r8, r4]
    c410:	ldr	r1, [r0]
    c414:	ldrh	r1, [r1, r3]
    c418:	and	r1, r1, #16384	; 0x4000
    c41c:	uxth	r1, r1
    c420:	cmp	r1, #0
    c424:	movne	r1, r6
    c428:	strb	r1, [ip, r4]
    c42c:	ldr	r1, [r0]
    c430:	ldr	ip, [sp, #4]
    c434:	ldrh	r1, [r1, r3]
    c438:	and	r1, r1, #32768	; 0x8000
    c43c:	uxth	r1, r1
    c440:	cmp	r1, #0
    c444:	movne	r1, r6
    c448:	strb	r1, [ip, r4]
    c44c:	ldr	r1, [r0]
    c450:	ldrh	r3, [r1, r3]
    c454:	tst	r3, #2
    c458:	bne	c460 <fputs@plt+0x3844>
    c45c:	mov	r2, #0
    c460:	ldr	r3, [sp, #16]
    c464:	strb	r2, [r3, r4]
    c468:	add	r4, r4, #1
    c46c:	cmp	r4, #256	; 0x100
    c470:	beq	c4bc <fputs@plt+0x38a0>
    c474:	bics	r3, r4, #127	; 0x7f
    c478:	beq	c314 <fputs@plt+0x36f8>
    c47c:	ldr	ip, [sp, #8]
    c480:	ldr	r3, [pc, #64]	; c4c8 <fputs@plt+0x38ac>
    c484:	strb	r5, [r7, r4]
    c488:	strb	r5, [ip, r4]
    c48c:	add	ip, r3, #256	; 0x100
    c490:	strb	r5, [r3, r4]
    c494:	strb	r5, [ip, r4]
    c498:	ldr	r3, [sp, #12]
    c49c:	ldr	ip, [sp, #4]
    c4a0:	strb	r5, [fp, r4]
    c4a4:	strb	r5, [sl, r4]
    c4a8:	strb	r5, [r9, r4]
    c4ac:	strb	r5, [r8, r4]
    c4b0:	strb	r5, [r3, r4]
    c4b4:	strb	r5, [ip, r4]
    c4b8:	b	c45c <fputs@plt+0x3840>
    c4bc:	ldr	r0, [sp, #20]
    c4c0:	add	sp, sp, #28
    c4c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c4c8:	andeq	r5, r1, r4, ror r2
    c4cc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    c4d0:	mov	r7, r0
    c4d4:	ldr	r6, [pc, #76]	; c528 <fputs@plt+0x390c>
    c4d8:	mov	r8, r1
    c4dc:	ldr	r5, [pc, #72]	; c52c <fputs@plt+0x3910>
    c4e0:	mov	r9, r2
    c4e4:	add	r6, pc, r6
    c4e8:	bl	8a64 <strerror@plt-0x20>
    c4ec:	add	r5, pc, r5
    c4f0:	rsb	r6, r5, r6
    c4f4:	asrs	r6, r6, #2
    c4f8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    c4fc:	sub	r5, r5, #4
    c500:	mov	r4, #0
    c504:	add	r4, r4, #1
    c508:	ldr	r3, [r5, #4]!
    c50c:	mov	r0, r7
    c510:	mov	r1, r8
    c514:	mov	r2, r9
    c518:	blx	r3
    c51c:	cmp	r4, r6
    c520:	bne	c504 <fputs@plt+0x38e8>
    c524:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    c528:	andeq	r8, r0, r4, lsl #20
    c52c:	andeq	r8, r0, r8, ror #19
    c530:	bx	lr

Disassembly of section .fini:

0000c534 <.fini>:
    c534:	push	{r3, lr}
    c538:	pop	{r3, pc}
