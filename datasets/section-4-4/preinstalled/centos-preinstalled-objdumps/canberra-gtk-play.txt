
centos-preinstalled/canberra-gtk-play:     file format elf32-littlearm


Disassembly of section .init:

00010aec <_init@@Base>:
   10aec:	push	{r3, lr}
   10af0:	bl	10f74 <strchr@plt+0x300>
   10af4:	pop	{r3, pc}

Disassembly of section .plt:

00010af8 <g_option_context_parse@plt-0x14>:
   10af8:	push	{lr}		; (str lr, [sp, #-4]!)
   10afc:	ldr	lr, [pc, #4]	; 10b08 <_init@@Base+0x1c>
   10b00:	add	lr, pc, lr
   10b04:	ldr	pc, [lr, #8]!
   10b08:	strdeq	r1, [r1], -r8

00010b0c <g_option_context_parse@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b18 <g_option_context_add_group@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b24 <g_strndup@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b30 <gtk_get_option_group@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b3c <g_option_context_new@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b48 <g_printerr@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b54 <ca_proplist_sets@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b60 <abort@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b6c <g_idle_add@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b78 <g_option_context_free@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b84 <__stack_chk_fail@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b90 <g_free@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b9c <gtk_main@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1176]!	; 0x498

00010ba8 <ca_proplist_create@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1168]!	; 0x490

00010bb4 <g_print@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1160]!	; 0x488

00010bc0 <ca_proplist_destroy@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1152]!	; 0x480

00010bcc <g_quark_from_static_string@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1144]!	; 0x478

00010bd8 <ca_context_change_props@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1136]!	; 0x470

00010be4 <setlocale@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1128]!	; 0x468

00010bf0 <g_option_context_add_main_entries@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1120]!	; 0x460

00010bfc <g_type_init@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #69632	; 0x11000
   10c04:	ldr	pc, [ip, #1112]!	; 0x458

00010c08 <ca_gtk_context_get@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #69632	; 0x11000
   10c10:	ldr	pc, [ip, #1104]!	; 0x450

00010c14 <ca_strerror@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #69632	; 0x11000
   10c1c:	ldr	pc, [ip, #1096]!	; 0x448

00010c20 <ca_context_play_full@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #69632	; 0x11000
   10c28:	ldr	pc, [ip, #1088]!	; 0x440

00010c2c <gtk_main_quit@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #69632	; 0x11000
   10c34:	ldr	pc, [ip, #1080]!	; 0x438

00010c38 <g_option_context_set_help_enabled@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #69632	; 0x11000
   10c40:	ldr	pc, [ip, #1072]!	; 0x430

00010c44 <g_assertion_message_expr@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #69632	; 0x11000
   10c4c:	ldr	pc, [ip, #1064]!	; 0x428

00010c50 <g_set_error@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #69632	; 0x11000
   10c58:	ldr	pc, [ip, #1056]!	; 0x420

00010c5c <__libc_start_main@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #69632	; 0x11000
   10c64:	ldr	pc, [ip, #1048]!	; 0x418

00010c68 <__gmon_start__@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #69632	; 0x11000
   10c70:	ldr	pc, [ip, #1040]!	; 0x410

00010c74 <strchr@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #69632	; 0x11000
   10c7c:	ldr	pc, [ip, #1032]!	; 0x408

Disassembly of section .text:

00010c80 <.text>:
   10c80:	push	{r4, r5, r6, r7, lr}
   10c84:	movw	r5, #8336	; 0x2090
   10c88:	movt	r5, #2
   10c8c:	sub	sp, sp, #36	; 0x24
   10c90:	movw	r4, #8344	; 0x2098
   10c94:	movt	r4, #2
   10c98:	ldr	r3, [r5]
   10c9c:	mov	r7, #0
   10ca0:	str	r1, [sp, #16]
   10ca4:	movw	r1, #5176	; 0x1438
   10ca8:	str	r0, [sp, #20]
   10cac:	movt	r1, #1
   10cb0:	mov	r0, #6
   10cb4:	str	r3, [sp, #28]
   10cb8:	str	r7, [sp, #24]
   10cbc:	bl	10be4 <setlocale@plt>
   10cc0:	bl	10bfc <g_type_init@plt>
   10cc4:	add	r0, r4, #8
   10cc8:	bl	10ba8 <ca_proplist_create@plt>
   10ccc:	movw	r0, #5304	; 0x14b8
   10cd0:	movt	r0, #1
   10cd4:	bl	10b3c <g_option_context_new@plt>
   10cd8:	mov	r2, r7
   10cdc:	ldr	r1, [pc, #592]	; 10f34 <strchr@plt+0x2c0>
   10ce0:	mov	r6, r0
   10ce4:	bl	10bf0 <g_option_context_add_main_entries@plt>
   10ce8:	mov	r0, #1
   10cec:	bl	10b30 <gtk_get_option_group@plt>
   10cf0:	mov	r1, r0
   10cf4:	mov	r0, r6
   10cf8:	bl	10b18 <g_option_context_add_group@plt>
   10cfc:	mov	r0, r6
   10d00:	mov	r1, #1
   10d04:	bl	10c38 <g_option_context_set_help_enabled@plt>
   10d08:	mov	r0, r6
   10d0c:	add	r1, sp, #20
   10d10:	add	r2, sp, #16
   10d14:	add	r3, sp, #24
   10d18:	bl	10b0c <g_option_context_parse@plt>
   10d1c:	cmp	r0, r7
   10d20:	beq	10e98 <strchr@plt+0x224>
   10d24:	mov	r0, r6
   10d28:	bl	10b78 <g_option_context_free@plt>
   10d2c:	ldr	r3, [r4, #12]
   10d30:	cmp	r3, #0
   10d34:	bne	10ecc <strchr@plt+0x258>
   10d38:	ldr	r3, [r4, #16]
   10d3c:	cmp	r3, #0
   10d40:	beq	10f00 <strchr@plt+0x28c>
   10d44:	bl	10c08 <ca_gtk_context_get@plt>
   10d48:	movw	r2, #5392	; 0x1510
   10d4c:	movw	r3, #5492	; 0x1574
   10d50:	movt	r2, #1
   10d54:	movt	r3, #1
   10d58:	movw	r1, #5432	; 0x1538
   10d5c:	stm	sp, {r2, r3}
   10d60:	movt	r1, #1
   10d64:	mov	r2, #0
   10d68:	movw	r3, #5508	; 0x1584
   10d6c:	str	r2, [sp, #12]
   10d70:	movt	r3, #1
   10d74:	movw	r2, #5452	; 0x154c
   10d78:	str	r3, [sp, #8]
   10d7c:	movt	r2, #1
   10d80:	movw	r3, #5472	; 0x1560
   10d84:	movt	r3, #1
   10d88:	bl	10bd8 <ca_context_change_props@plt>
   10d8c:	ldr	r2, [r4, #16]
   10d90:	movw	r3, #8344	; 0x2098
   10d94:	movt	r3, #2
   10d98:	cmp	r2, #0
   10d9c:	beq	10db0 <strchr@plt+0x13c>
   10da0:	movw	r1, #5548	; 0x15ac
   10da4:	ldr	r0, [r3, #8]
   10da8:	movt	r1, #1
   10dac:	bl	10b54 <ca_proplist_sets@plt>
   10db0:	ldr	r2, [r4, #20]
   10db4:	movw	r3, #8344	; 0x2098
   10db8:	movt	r3, #2
   10dbc:	cmp	r2, #0
   10dc0:	beq	10dd4 <strchr@plt+0x160>
   10dc4:	movw	r1, #5560	; 0x15b8
   10dc8:	ldr	r0, [r3, #8]
   10dcc:	movt	r1, #1
   10dd0:	bl	10b54 <ca_proplist_sets@plt>
   10dd4:	ldr	r2, [r4, #24]
   10dd8:	movw	r3, #8344	; 0x2098
   10ddc:	movt	r3, #2
   10de0:	cmp	r2, #0
   10de4:	beq	10df8 <strchr@plt+0x184>
   10de8:	movw	r1, #5576	; 0x15c8
   10dec:	ldr	r0, [r3, #8]
   10df0:	movt	r1, #1
   10df4:	bl	10b54 <ca_proplist_sets@plt>
   10df8:	ldr	r2, [r4, #28]
   10dfc:	movw	r3, #8344	; 0x2098
   10e00:	movt	r3, #2
   10e04:	cmp	r2, #0
   10e08:	beq	10e1c <strchr@plt+0x1a8>
   10e0c:	movw	r1, #5600	; 0x15e0
   10e10:	ldr	r0, [r3, #8]
   10e14:	movt	r1, #1
   10e18:	bl	10b54 <ca_proplist_sets@plt>
   10e1c:	ldr	r2, [r4, #32]
   10e20:	movw	r3, #8344	; 0x2098
   10e24:	movt	r3, #2
   10e28:	cmp	r2, #0
   10e2c:	beq	10e40 <strchr@plt+0x1cc>
   10e30:	movw	r1, #5620	; 0x15f4
   10e34:	ldr	r0, [r3, #8]
   10e38:	movt	r1, #1
   10e3c:	bl	10b54 <ca_proplist_sets@plt>
   10e40:	bl	10c08 <ca_gtk_context_get@plt>
   10e44:	mov	r2, #0
   10e48:	movw	r3, #4220	; 0x107c
   10e4c:	str	r2, [sp]
   10e50:	movt	r3, #1
   10e54:	mov	r1, #1
   10e58:	ldr	r2, [r4, #8]
   10e5c:	movw	r6, #8344	; 0x2098
   10e60:	bl	10c20 <ca_context_play_full@plt>
   10e64:	movt	r6, #2
   10e68:	cmp	r0, #0
   10e6c:	blt	10eb4 <strchr@plt+0x240>
   10e70:	bl	10b9c <gtk_main@plt>
   10e74:	ldr	r0, [r4, #8]
   10e78:	bl	10bc0 <ca_proplist_destroy@plt>
   10e7c:	ldr	r0, [r4, #4]
   10e80:	ldr	r2, [sp, #28]
   10e84:	ldr	r3, [r5]
   10e88:	cmp	r2, r3
   10e8c:	bne	10f30 <strchr@plt+0x2bc>
   10e90:	add	sp, sp, #36	; 0x24
   10e94:	pop	{r4, r5, r6, r7, pc}
   10e98:	ldr	r3, [sp, #24]
   10e9c:	movw	r0, #5324	; 0x14cc
   10ea0:	movt	r0, #1
   10ea4:	ldr	r1, [r3, #8]
   10ea8:	bl	10bb4 <g_print@plt>
   10eac:	mov	r0, #1
   10eb0:	b	10e80 <strchr@plt+0x20c>
   10eb4:	ldr	r3, [r6]
   10eb8:	cmp	r3, #0
   10ebc:	beq	10ee8 <strchr@plt+0x274>
   10ec0:	mov	r3, #1
   10ec4:	str	r3, [r4, #4]
   10ec8:	b	10e74 <strchr@plt+0x200>
   10ecc:	movw	r0, #5352	; 0x14e8
   10ed0:	movw	r1, #5380	; 0x1504
   10ed4:	movt	r0, #1
   10ed8:	movt	r1, #1
   10edc:	bl	10bb4 <g_print@plt>
   10ee0:	mov	r0, r7
   10ee4:	b	10e80 <strchr@plt+0x20c>
   10ee8:	bl	10c14 <ca_strerror@plt>
   10eec:	mov	r1, r0
   10ef0:	movw	r0, #5180	; 0x143c
   10ef4:	movt	r0, #1
   10ef8:	bl	10b48 <g_printerr@plt>
   10efc:	b	10ec0 <strchr@plt+0x24c>
   10f00:	ldr	r3, [r4, #20]
   10f04:	cmp	r3, #0
   10f08:	bne	10d44 <strchr@plt+0xd0>
   10f0c:	ldr	r3, [r4]
   10f10:	cmp	r3, #0
   10f14:	movne	r0, #1
   10f18:	bne	10e80 <strchr@plt+0x20c>
   10f1c:	movw	r0, #5400	; 0x1518
   10f20:	movt	r0, #1
   10f24:	bl	10b48 <g_printerr@plt>
   10f28:	mov	r0, #1
   10f2c:	b	10e80 <strchr@plt+0x20c>
   10f30:	bl	10b84 <__stack_chk_fail@plt>
   10f34:	strdeq	r1, [r1], -ip
   10f38:	mov	fp, #0
   10f3c:	mov	lr, #0
   10f40:	pop	{r1}		; (ldr r1, [sp], #4)
   10f44:	mov	r2, sp
   10f48:	push	{r2}		; (str r2, [sp, #-4]!)
   10f4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f50:	ldr	ip, [pc, #16]	; 10f68 <strchr@plt+0x2f4>
   10f54:	push	{ip}		; (str ip, [sp, #-4]!)
   10f58:	ldr	r0, [pc, #12]	; 10f6c <strchr@plt+0x2f8>
   10f5c:	ldr	r3, [pc, #12]	; 10f70 <strchr@plt+0x2fc>
   10f60:	bl	10c5c <__libc_start_main@plt>
   10f64:	bl	10b60 <abort@plt>
   10f68:	andeq	r1, r1, r4, ror #5
   10f6c:	andeq	r0, r1, r0, lsl #25
   10f70:	andeq	r1, r1, r0, lsl #5
   10f74:	ldr	r3, [pc, #20]	; 10f90 <strchr@plt+0x31c>
   10f78:	ldr	r2, [pc, #20]	; 10f94 <strchr@plt+0x320>
   10f7c:	add	r3, pc, r3
   10f80:	ldr	r2, [r3, r2]
   10f84:	cmp	r2, #0
   10f88:	bxeq	lr
   10f8c:	b	10c68 <__gmon_start__@plt>
   10f90:	andeq	r1, r1, ip, ror r0
   10f94:	andeq	r0, r0, r8, lsl #1
   10f98:	push	{r3, lr}
   10f9c:	movw	r0, #8336	; 0x2090
   10fa0:	ldr	r3, [pc, #36]	; 10fcc <strchr@plt+0x358>
   10fa4:	movt	r0, #2
   10fa8:	rsb	r3, r0, r3
   10fac:	cmp	r3, #6
   10fb0:	popls	{r3, pc}
   10fb4:	movw	r3, #0
   10fb8:	movt	r3, #0
   10fbc:	cmp	r3, #0
   10fc0:	popeq	{r3, pc}
   10fc4:	blx	r3
   10fc8:	pop	{r3, pc}
   10fcc:	muleq	r2, r3, r0
   10fd0:	push	{r3, lr}
   10fd4:	movw	r0, #8336	; 0x2090
   10fd8:	movw	r3, #8336	; 0x2090
   10fdc:	movt	r0, #2
   10fe0:	movt	r3, #2
   10fe4:	rsb	r3, r0, r3
   10fe8:	asr	r3, r3, #2
   10fec:	add	r3, r3, r3, lsr #31
   10ff0:	asrs	r1, r3, #1
   10ff4:	popeq	{r3, pc}
   10ff8:	movw	r2, #0
   10ffc:	movt	r2, #0
   11000:	cmp	r2, #0
   11004:	popeq	{r3, pc}
   11008:	blx	r2
   1100c:	pop	{r3, pc}
   11010:	push	{r4, lr}
   11014:	movw	r4, #8340	; 0x2094
   11018:	movt	r4, #2
   1101c:	ldrb	r3, [r4]
   11020:	cmp	r3, #0
   11024:	popne	{r4, pc}
   11028:	bl	10f98 <strchr@plt+0x324>
   1102c:	mov	r3, #1
   11030:	strb	r3, [r4]
   11034:	pop	{r4, pc}
   11038:	movw	r0, #7892	; 0x1ed4
   1103c:	movt	r0, #2
   11040:	push	{r3, lr}
   11044:	ldr	r3, [r0]
   11048:	cmp	r3, #0
   1104c:	beq	11064 <strchr@plt+0x3f0>
   11050:	movw	r3, #0
   11054:	movt	r3, #0
   11058:	cmp	r3, #0
   1105c:	beq	11064 <strchr@plt+0x3f0>
   11060:	blx	r3
   11064:	pop	{r3, lr}
   11068:	b	10fd0 <strchr@plt+0x35c>
   1106c:	push	{r3, lr}
   11070:	bl	10c2c <gtk_main_quit@plt>
   11074:	mov	r0, #0
   11078:	pop	{r3, pc}
   1107c:	subs	r0, r2, #0
   11080:	push	{r4, lr}
   11084:	blt	110c4 <strchr@plt+0x450>
   11088:	movw	r3, #8332	; 0x208c
   1108c:	movt	r3, #2
   11090:	ldr	r3, [r3]
   11094:	cmp	r3, #1
   11098:	bgt	110b0 <strchr@plt+0x43c>
   1109c:	movw	r0, #4204	; 0x106c
   110a0:	mov	r1, #0
   110a4:	movt	r0, #1
   110a8:	pop	{r4, lr}
   110ac:	b	10b6c <g_idle_add@plt>
   110b0:	movw	r0, #4348	; 0x10fc
   110b4:	mov	r1, #0
   110b8:	movt	r0, #1
   110bc:	pop	{r4, lr}
   110c0:	b	10b6c <g_idle_add@plt>
   110c4:	movw	r4, #8344	; 0x2098
   110c8:	movt	r4, #2
   110cc:	ldr	r3, [r4]
   110d0:	cmp	r3, #0
   110d4:	beq	110e4 <strchr@plt+0x470>
   110d8:	mov	r3, #1
   110dc:	str	r3, [r4, #4]
   110e0:	b	1109c <strchr@plt+0x428>
   110e4:	bl	10c14 <ca_strerror@plt>
   110e8:	mov	r1, r0
   110ec:	movw	r0, #5140	; 0x1414
   110f0:	movt	r0, #1
   110f4:	bl	10b48 <g_printerr@plt>
   110f8:	b	110d8 <strchr@plt+0x464>
   110fc:	movw	r3, #8332	; 0x208c
   11100:	movt	r3, #2
   11104:	push	{r4, lr}
   11108:	sub	sp, sp, #8
   1110c:	ldr	r2, [r3]
   11110:	cmp	r2, #1
   11114:	ble	11180 <strchr@plt+0x50c>
   11118:	movw	r4, #8344	; 0x2098
   1111c:	movt	r4, #2
   11120:	sub	r2, r2, #1
   11124:	str	r2, [r3]
   11128:	bl	10c08 <ca_gtk_context_get@plt>
   1112c:	mov	r1, #0
   11130:	ldr	r2, [r4, #8]
   11134:	movw	r3, #4220	; 0x107c
   11138:	str	r1, [sp]
   1113c:	movt	r3, #1
   11140:	mov	r1, #1
   11144:	bl	10c20 <ca_context_play_full@plt>
   11148:	cmp	r0, #0
   1114c:	blt	1115c <strchr@plt+0x4e8>
   11150:	mov	r0, #0
   11154:	add	sp, sp, #8
   11158:	pop	{r4, pc}
   1115c:	ldr	r3, [r4]
   11160:	cmp	r3, #0
   11164:	beq	111a8 <strchr@plt+0x534>
   11168:	mov	r3, #1
   1116c:	str	r3, [r4, #4]
   11170:	bl	10c2c <gtk_main_quit@plt>
   11174:	mov	r0, #0
   11178:	add	sp, sp, #8
   1117c:	pop	{r4, pc}
   11180:	movw	r3, #5228	; 0x146c
   11184:	movw	r1, #5208	; 0x1458
   11188:	movt	r3, #1
   1118c:	movt	r1, #1
   11190:	str	r3, [sp]
   11194:	mov	r0, #0
   11198:	movw	r3, #4848	; 0x12f0
   1119c:	mov	r2, #48	; 0x30
   111a0:	movt	r3, #1
   111a4:	bl	10c44 <g_assertion_message_expr@plt>
   111a8:	bl	10c14 <ca_strerror@plt>
   111ac:	mov	r1, r0
   111b0:	movw	r0, #5180	; 0x143c
   111b4:	movt	r0, #1
   111b8:	bl	10b48 <g_printerr@plt>
   111bc:	b	11168 <strchr@plt+0x4f4>
   111c0:	push	{r4, r5, r6, lr}
   111c4:	mov	r5, r1
   111c8:	mov	r0, r5
   111cc:	mov	r1, #61	; 0x3d
   111d0:	mov	r6, r3
   111d4:	bl	10c74 <strchr@plt>
   111d8:	subs	r4, r0, #0
   111dc:	beq	11254 <strchr@plt+0x5e0>
   111e0:	rsb	r1, r5, r4
   111e4:	mov	r0, r5
   111e8:	bl	10b24 <g_strndup@plt>
   111ec:	movw	ip, #8344	; 0x2098
   111f0:	movt	ip, #2
   111f4:	add	r2, r4, #1
   111f8:	mov	r1, r0
   111fc:	mov	r5, r0
   11200:	ldr	r0, [ip, #8]
   11204:	bl	10b54 <ca_proplist_sets@plt>
   11208:	cmp	r0, #0
   1120c:	blt	11220 <strchr@plt+0x5ac>
   11210:	mov	r0, r5
   11214:	bl	10b90 <g_free@plt>
   11218:	mov	r0, #1
   1121c:	pop	{r4, r5, r6, pc}
   11220:	movw	r0, #5240	; 0x1478
   11224:	movt	r0, #1
   11228:	bl	10bcc <g_quark_from_static_string@plt>
   1122c:	mov	r2, #0
   11230:	movw	r3, #5284	; 0x14a4
   11234:	movt	r3, #1
   11238:	mov	r1, r0
   1123c:	mov	r0, r6
   11240:	bl	10c50 <g_set_error@plt>
   11244:	mov	r0, r5
   11248:	bl	10b90 <g_free@plt>
   1124c:	mov	r0, #0
   11250:	pop	{r4, r5, r6, pc}
   11254:	movw	r0, #5240	; 0x1478
   11258:	movt	r0, #1
   1125c:	bl	10bcc <g_quark_from_static_string@plt>
   11260:	mov	r2, r4
   11264:	movw	r3, #5264	; 0x1490
   11268:	movt	r3, #1
   1126c:	mov	r1, r0
   11270:	mov	r0, r6
   11274:	bl	10c50 <g_set_error@plt>
   11278:	mov	r0, r4
   1127c:	pop	{r4, r5, r6, pc}
   11280:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11284:	mov	r7, r0
   11288:	ldr	r6, [pc, #76]	; 112dc <strchr@plt+0x668>
   1128c:	mov	r8, r1
   11290:	ldr	r5, [pc, #72]	; 112e0 <strchr@plt+0x66c>
   11294:	mov	r9, r2
   11298:	add	r6, pc, r6
   1129c:	bl	10aec <_init@@Base>
   112a0:	add	r5, pc, r5
   112a4:	rsb	r6, r5, r6
   112a8:	asrs	r6, r6, #2
   112ac:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   112b0:	sub	r5, r5, #4
   112b4:	mov	r4, #0
   112b8:	add	r4, r4, #1
   112bc:	ldr	r3, [r5, #4]!
   112c0:	mov	r0, r7
   112c4:	mov	r1, r8
   112c8:	mov	r2, r9
   112cc:	blx	r3
   112d0:	cmp	r4, r6
   112d4:	bne	112b8 <strchr@plt+0x644>
   112d8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   112dc:	andeq	r0, r1, r0, lsr ip
   112e0:	andeq	r0, r1, r4, lsr #24
   112e4:	bx	lr

Disassembly of section .fini:

000112e8 <_fini@@Base>:
   112e8:	push	{r3, lr}
   112ec:	pop	{r3, pc}
