
centos-preinstalled/gcalccmd:     file format elf32-littlearm


Disassembly of section .init:

000133c4 <_init@@Base>:
   133c4:	push	{r3, lr}
   133c8:	bl	13ebc <g_unichar_xdigit_value@plt+0x58>
   133cc:	pop	{r3, pc}

Disassembly of section .plt:

000133d0 <g_object_new@plt-0x14>:
   133d0:	push	{lr}		; (str lr, [sp, #-4]!)
   133d4:	ldr	lr, [pc, #4]	; 133e0 <_init@@Base+0x1c>
   133d8:	add	lr, pc, lr
   133dc:	ldr	pc, [lr, #8]!
   133e0:	andeq	sp, r3, r0, lsr #24

000133e4 <g_object_new@plt>:
   133e4:	add	ip, pc, #0, 12
   133e8:	add	ip, ip, #249856	; 0x3d000
   133ec:	ldr	pc, [ip, #3104]!	; 0xc20

000133f0 <g_object_ref@plt>:
   133f0:	add	ip, pc, #0, 12
   133f4:	add	ip, ip, #249856	; 0x3d000
   133f8:	ldr	pc, [ip, #3096]!	; 0xc18

000133fc <mpc_cos@plt>:
   133fc:	add	ip, pc, #0, 12
   13400:	add	ip, ip, #249856	; 0x3d000
   13404:	ldr	pc, [ip, #3088]!	; 0xc10

00013408 <g_file_replace_finish@plt>:
   13408:	add	ip, pc, #0, 12
   1340c:	add	ip, ip, #249856	; 0x3d000
   13410:	ldr	pc, [ip, #3080]!	; 0xc08

00013414 <g_string_assign@plt>:
   13414:	add	ip, pc, #0, 12
   13418:	add	ip, ip, #249856	; 0x3d000
   1341c:	ldr	pc, [ip, #3072]!	; 0xc00

00013420 <g_type_is_a@plt>:
   13420:	add	ip, pc, #0, 12
   13424:	add	ip, ip, #249856	; 0x3d000
   13428:	ldr	pc, [ip, #3064]!	; 0xbf8

0001342c <mpc_atan@plt>:
   1342c:	add	ip, pc, #0, 12
   13430:	add	ip, ip, #249856	; 0x3d000
   13434:	ldr	pc, [ip, #3056]!	; 0xbf0

00013438 <g_type_register_static@plt>:
   13438:	add	ip, pc, #0, 12
   1343c:	add	ip, ip, #249856	; 0x3d000
   13440:	ldr	pc, [ip, #3048]!	; 0xbe8

00013444 <g_value_take_string@plt>:
   13444:	add	ip, pc, #0, 12
   13448:	add	ip, ip, #249856	; 0x3d000
   1344c:	ldr	pc, [ip, #3040]!	; 0xbe0

00013450 <g_return_if_fail_warning@plt>:
   13450:	add	ip, pc, #0, 12
   13454:	add	ip, ip, #249856	; 0x3d000
   13458:	ldr	pc, [ip, #3032]!	; 0xbd8

0001345c <g_mkdir_with_parents@plt>:
   1345c:	add	ip, pc, #0, 12
   13460:	add	ip, ip, #249856	; 0x3d000
   13464:	ldr	pc, [ip, #3024]!	; 0xbd0

00013468 <g_value_get_string@plt>:
   13468:	add	ip, pc, #0, 12
   1346c:	add	ip, ip, #249856	; 0x3d000
   13470:	ldr	pc, [ip, #3016]!	; 0xbc8

00013474 <g_unichar_isxdigit@plt>:
   13474:	add	ip, pc, #0, 12
   13478:	add	ip, ip, #249856	; 0x3d000
   1347c:	ldr	pc, [ip, #3008]!	; 0xbc0

00013480 <mpc_clear@plt>:
   13480:	add	ip, pc, #0, 12
   13484:	add	ip, ip, #249856	; 0x3d000
   13488:	ldr	pc, [ip, #3000]!	; 0xbb8

0001348c <g_strsplit_set@plt>:
   1348c:	add	ip, pc, #0, 12
   13490:	add	ip, ip, #249856	; 0x3d000
   13494:	ldr	pc, [ip, #2992]!	; 0xbb0

00013498 <g_error_free@plt>:
   13498:	add	ip, pc, #0, 12
   1349c:	add	ip, ip, #249856	; 0x3d000
   134a0:	ldr	pc, [ip, #2984]!	; 0xba8

000134a4 <g_strndup@plt>:
   134a4:	add	ip, pc, #0, 12
   134a8:	add	ip, ip, #249856	; 0x3d000
   134ac:	ldr	pc, [ip, #2976]!	; 0xba0

000134b0 <mpc_set_si_si@plt>:
   134b0:	add	ip, pc, #0, 12
   134b4:	add	ip, ip, #249856	; 0x3d000
   134b8:	ldr	pc, [ip, #2968]!	; 0xb98

000134bc <mpfr_cmp3@plt>:
   134bc:	add	ip, pc, #0, 12
   134c0:	add	ip, ip, #249856	; 0x3d000
   134c4:	ldr	pc, [ip, #2960]!	; 0xb90

000134c8 <g_utf8_strdown@plt>:
   134c8:	add	ip, pc, #0, 12
   134cc:	add	ip, ip, #249856	; 0x3d000
   134d0:	ldr	pc, [ip, #2952]!	; 0xb88

000134d4 <g_param_spec_string@plt>:
   134d4:	add	ip, pc, #0, 12
   134d8:	add	ip, ip, #249856	; 0x3d000
   134dc:	ldr	pc, [ip, #2944]!	; 0xb80

000134e0 <g_string_truncate@plt>:
   134e0:	add	ip, pc, #0, 12
   134e4:	add	ip, ip, #249856	; 0x3d000
   134e8:	ldr	pc, [ip, #2936]!	; 0xb78

000134ec <mpfr_si_div@plt>:
   134ec:	add	ip, pc, #0, 12
   134f0:	add	ip, ip, #249856	; 0x3d000
   134f4:	ldr	pc, [ip, #2928]!	; 0xb70

000134f8 <__xstat64@plt>:
   134f8:	add	ip, pc, #0, 12
   134fc:	add	ip, ip, #249856	; 0x3d000
   13500:	ldr	pc, [ip, #2920]!	; 0xb68

00013504 <mpc_log@plt>:
   13504:	add	ip, pc, #0, 12
   13508:	add	ip, ip, #249856	; 0x3d000
   1350c:	ldr	pc, [ip, #2912]!	; 0xb60

00013510 <g_type_check_instance_cast@plt>:
   13510:	add	ip, pc, #0, 12
   13514:	add	ip, ip, #249856	; 0x3d000
   13518:	ldr	pc, [ip, #2904]!	; 0xb58

0001351c <mpc_set_fr_fr@plt>:
   1351c:	add	ip, pc, #0, 12
   13520:	add	ip, ip, #249856	; 0x3d000
   13524:	ldr	pc, [ip, #2896]!	; 0xb50

00013528 <g_date_time_get_microsecond@plt>:
   13528:	add	ip, pc, #0, 12
   1352c:	add	ip, ip, #249856	; 0x3d000
   13530:	ldr	pc, [ip, #2888]!	; 0xb48

00013534 <mpc_init2@plt>:
   13534:	add	ip, pc, #0, 12
   13538:	add	ip, ip, #249856	; 0x3d000
   1353c:	ldr	pc, [ip, #2880]!	; 0xb40

00013540 <g_list_length@plt>:
   13540:	add	ip, pc, #0, 12
   13544:	add	ip, ip, #249856	; 0x3d000
   13548:	ldr	pc, [ip, #2872]!	; 0xb38

0001354c <mpc_arg@plt>:
   1354c:	add	ip, pc, #0, 12
   13550:	add	ip, ip, #249856	; 0x3d000
   13554:	ldr	pc, [ip, #2864]!	; 0xb30

00013558 <g_log@plt>:
   13558:	add	ip, pc, #0, 12
   1355c:	add	ip, ip, #249856	; 0x3d000
   13560:	ldr	pc, [ip, #2856]!	; 0xb28

00013564 <g_type_name@plt>:
   13564:	add	ip, pc, #0, 12
   13568:	add	ip, ip, #249856	; 0x3d000
   1356c:	ldr	pc, [ip, #2848]!	; 0xb20

00013570 <g_task_return_pointer@plt>:
   13570:	add	ip, pc, #0, 12
   13574:	add	ip, ip, #249856	; 0x3d000
   13578:	ldr	pc, [ip, #2840]!	; 0xb18

0001357c <soup_session_send_async@plt>:
   1357c:	add	ip, pc, #0, 12
   13580:	add	ip, ip, #249856	; 0x3d000
   13584:	ldr	pc, [ip, #2832]!	; 0xb10

00013588 <mpc_conj@plt>:
   13588:	add	ip, pc, #0, 12
   1358c:	add	ip, ip, #249856	; 0x3d000
   13590:	ldr	pc, [ip, #2824]!	; 0xb08

00013594 <g_list_append@plt>:
   13594:	add	ip, pc, #0, 12
   13598:	add	ip, ip, #249856	; 0x3d000
   1359c:	ldr	pc, [ip, #2816]!	; 0xb00

000135a0 <mpc_acosh@plt>:
   135a0:	add	ip, pc, #0, 12
   135a4:	add	ip, ip, #249856	; 0x3d000
   135a8:	ldr	pc, [ip, #2808]!	; 0xaf8

000135ac <g_build_filename@plt>:
   135ac:	add	ip, pc, #0, 12
   135b0:	add	ip, ip, #249856	; 0x3d000
   135b4:	ldr	pc, [ip, #2800]!	; 0xaf0

000135b8 <mpc_abs@plt>:
   135b8:	add	ip, pc, #0, 12
   135bc:	add	ip, ip, #249856	; 0x3d000
   135c0:	ldr	pc, [ip, #2792]!	; 0xae8

000135c4 <mpc_pow_fr@plt>:
   135c4:	add	ip, pc, #0, 12
   135c8:	add	ip, ip, #249856	; 0x3d000
   135cc:	ldr	pc, [ip, #2784]!	; 0xae0

000135d0 <mpc_acos@plt>:
   135d0:	add	ip, pc, #0, 12
   135d4:	add	ip, ip, #249856	; 0x3d000
   135d8:	ldr	pc, [ip, #2776]!	; 0xad8

000135dc <mpfr_rint@plt>:
   135dc:	add	ip, pc, #0, 12
   135e0:	add	ip, ip, #249856	; 0x3d000
   135e4:	ldr	pc, [ip, #2768]!	; 0xad0

000135e8 <g_utf8_get_char@plt>:
   135e8:	add	ip, pc, #0, 12
   135ec:	add	ip, ip, #249856	; 0x3d000
   135f0:	ldr	pc, [ip, #2760]!	; 0xac8

000135f4 <g_hash_table_remove_all@plt>:
   135f4:	add	ip, pc, #0, 12
   135f8:	add	ip, ip, #249856	; 0x3d000
   135fc:	ldr	pc, [ip, #2752]!	; 0xac0

00013600 <mpfr_underflow_p@plt>:
   13600:	add	ip, pc, #0, 12
   13604:	add	ip, ip, #249856	; 0x3d000
   13608:	ldr	pc, [ip, #2744]!	; 0xab8

0001360c <mpc_set_d_d@plt>:
   1360c:	add	ip, pc, #0, 12
   13610:	add	ip, ip, #249856	; 0x3d000
   13614:	ldr	pc, [ip, #2736]!	; 0xab0

00013618 <mpc_div_ui@plt>:
   13618:	add	ip, pc, #0, 12
   1361c:	add	ip, ip, #249856	; 0x3d000
   13620:	ldr	pc, [ip, #2728]!	; 0xaa8

00013624 <g_string_append_unichar@plt>:
   13624:	add	ip, pc, #0, 12
   13628:	add	ip, ip, #249856	; 0x3d000
   1362c:	ldr	pc, [ip, #2720]!	; 0xaa0

00013630 <mpfr_get_si@plt>:
   13630:	add	ip, pc, #0, 12
   13634:	add	ip, ip, #249856	; 0x3d000
   13638:	ldr	pc, [ip, #2712]!	; 0xa98

0001363c <g_unichar_isalpha@plt>:
   1363c:	add	ip, pc, #0, 12
   13640:	add	ip, ip, #249856	; 0x3d000
   13644:	ldr	pc, [ip, #2704]!	; 0xa90

00013648 <g_unichar_to_utf8@plt>:
   13648:	add	ip, pc, #0, 12
   1364c:	add	ip, ip, #249856	; 0x3d000
   13650:	ldr	pc, [ip, #2696]!	; 0xa88

00013654 <nl_langinfo@plt>:
   13654:	add	ip, pc, #0, 12
   13658:	add	ip, ip, #249856	; 0x3d000
   1365c:	ldr	pc, [ip, #2688]!	; 0xa80

00013660 <mpfr_gamma@plt>:
   13660:	add	ip, pc, #0, 12
   13664:	add	ip, ip, #249856	; 0x3d000
   13668:	ldr	pc, [ip, #2680]!	; 0xa78

0001366c <g_get_user_cache_dir@plt>:
   1366c:	add	ip, pc, #0, 12
   13670:	add	ip, ip, #249856	; 0x3d000
   13674:	ldr	pc, [ip, #2672]!	; 0xa70

00013678 <mpfr_exp@plt>:
   13678:	add	ip, pc, #0, 12
   1367c:	add	ip, ip, #249856	; 0x3d000
   13680:	ldr	pc, [ip, #2664]!	; 0xa68

00013684 <g_value_type_compatible@plt>:
   13684:	add	ip, pc, #0, 12
   13688:	add	ip, ip, #249856	; 0x3d000
   1368c:	ldr	pc, [ip, #2656]!	; 0xa60

00013690 <g_param_spec_internal@plt>:
   13690:	add	ip, pc, #0, 12
   13694:	add	ip, ip, #249856	; 0x3d000
   13698:	ldr	pc, [ip, #2648]!	; 0xa58

0001369c <g_list_first@plt>:
   1369c:	add	ip, pc, #0, 12
   136a0:	add	ip, ip, #249856	; 0x3d000
   136a4:	ldr	pc, [ip, #2640]!	; 0xa50

000136a8 <g_type_free_instance@plt>:
   136a8:	add	ip, pc, #0, 12
   136ac:	add	ip, ip, #249856	; 0x3d000
   136b0:	ldr	pc, [ip, #2632]!	; 0xa48

000136b4 <mpc_cmp_si_si@plt>:
   136b4:	add	ip, pc, #0, 12
   136b8:	add	ip, ip, #249856	; 0x3d000
   136bc:	ldr	pc, [ip, #2624]!	; 0xa40

000136c0 <g_list_insert@plt>:
   136c0:	add	ip, pc, #0, 12
   136c4:	add	ip, ip, #249856	; 0x3d000
   136c8:	ldr	pc, [ip, #2616]!	; 0xa38

000136cc <g_hash_table_new_full@plt>:
   136cc:	add	ip, pc, #0, 12
   136d0:	add	ip, ip, #249856	; 0x3d000
   136d4:	ldr	pc, [ip, #2608]!	; 0xa30

000136d8 <__fprintf_chk@plt>:
   136d8:	add	ip, pc, #0, 12
   136dc:	add	ip, ip, #249856	; 0x3d000
   136e0:	ldr	pc, [ip, #2600]!	; 0xa28

000136e4 <g_signal_emit@plt>:
   136e4:	add	ip, pc, #0, 12
   136e8:	add	ip, ip, #249856	; 0x3d000
   136ec:	ldr	pc, [ip, #2592]!	; 0xa20

000136f0 <g_strdup@plt>:
   136f0:	add	ip, pc, #0, 12
   136f4:	add	ip, ip, #249856	; 0x3d000
   136f8:	ldr	pc, [ip, #2584]!	; 0xa18

000136fc <mpfr_div_si@plt>:
   136fc:	add	ip, pc, #0, 12
   13700:	add	ip, ip, #249856	; 0x3d000
   13704:	ldr	pc, [ip, #2576]!	; 0xa10

00013708 <xmlXPathEvalExpression@plt>:
   13708:	add	ip, pc, #0, 12
   1370c:	add	ip, ip, #249856	; 0x3d000
   13710:	ldr	pc, [ip, #2568]!	; 0xa08

00013714 <mpfr_ui_div@plt>:
   13714:	add	ip, pc, #0, 12
   13718:	add	ip, ip, #249856	; 0x3d000
   1371c:	ldr	pc, [ip, #2560]!	; 0xa00

00013720 <mpc_sub@plt>:
   13720:	add	ip, pc, #0, 12
   13724:	add	ip, ip, #249856	; 0x3d000
   13728:	ldr	pc, [ip, #2552]!	; 0x9f8

0001372c <mpc_set_ui_ui@plt>:
   1372c:	add	ip, pc, #0, 12
   13730:	add	ip, ip, #249856	; 0x3d000
   13734:	ldr	pc, [ip, #2544]!	; 0x9f0

00013738 <g_hash_table_insert@plt>:
   13738:	add	ip, pc, #0, 12
   1373c:	add	ip, ip, #249856	; 0x3d000
   13740:	ldr	pc, [ip, #2536]!	; 0x9e8

00013744 <g_strchomp@plt>:
   13744:	add	ip, pc, #0, 12
   13748:	add	ip, ip, #249856	; 0x3d000
   1374c:	ldr	pc, [ip, #2528]!	; 0x9e0

00013750 <memset@plt>:
   13750:	add	ip, pc, #0, 12
   13754:	add	ip, ip, #249856	; 0x3d000
   13758:	ldr	pc, [ip, #2520]!	; 0x9d8

0001375c <mpfr_init2@plt>:
   1375c:	add	ip, pc, #0, 12
   13760:	add	ip, ip, #249856	; 0x3d000
   13764:	ldr	pc, [ip, #2512]!	; 0x9d0

00013768 <g_value_set_boxed@plt>:
   13768:	add	ip, pc, #0, 12
   1376c:	add	ip, ip, #249856	; 0x3d000
   13770:	ldr	pc, [ip, #2504]!	; 0x9c8

00013774 <g_strdup_printf@plt>:
   13774:	add	ip, pc, #0, 12
   13778:	add	ip, ip, #249856	; 0x3d000
   1377c:	ldr	pc, [ip, #2496]!	; 0x9c0

00013780 <g_regex_unref@plt>:
   13780:	add	ip, pc, #0, 12
   13784:	add	ip, ip, #249856	; 0x3d000
   13788:	ldr	pc, [ip, #2488]!	; 0x9b8

0001378c <g_output_stream_splice_async@plt>:
   1378c:	add	ip, pc, #0, 12
   13790:	add	ip, ip, #249856	; 0x3d000
   13794:	ldr	pc, [ip, #2480]!	; 0x9b0

00013798 <g_malloc@plt>:
   13798:	add	ip, pc, #0, 12
   1379c:	add	ip, ip, #249856	; 0x3d000
   137a0:	ldr	pc, [ip, #2472]!	; 0x9a8

000137a4 <mpc_ui_div@plt>:
   137a4:	add	ip, pc, #0, 12
   137a8:	add	ip, ip, #249856	; 0x3d000
   137ac:	ldr	pc, [ip, #2464]!	; 0x9a0

000137b0 <g_signal_new@plt>:
   137b0:	add	ip, pc, #0, 12
   137b4:	add	ip, ip, #249856	; 0x3d000
   137b8:	ldr	pc, [ip, #2456]!	; 0x998

000137bc <mpc_atanh@plt>:
   137bc:	add	ip, pc, #0, 12
   137c0:	add	ip, ip, #249856	; 0x3d000
   137c4:	ldr	pc, [ip, #2448]!	; 0x990

000137c8 <xmlXPathNewContext@plt>:
   137c8:	add	ip, pc, #0, 12
   137cc:	add	ip, ip, #249856	; 0x3d000
   137d0:	ldr	pc, [ip, #2440]!	; 0x988

000137d4 <g_hash_table_iter_init@plt>:
   137d4:	add	ip, pc, #0, 12
   137d8:	add	ip, ip, #249856	; 0x3d000
   137dc:	ldr	pc, [ip, #2432]!	; 0x980

000137e0 <mpc_add@plt>:
   137e0:	add	ip, pc, #0, 12
   137e4:	add	ip, ip, #249856	; 0x3d000
   137e8:	ldr	pc, [ip, #2424]!	; 0x978

000137ec <abort@plt>:
   137ec:	add	ip, pc, #0, 12
   137f0:	add	ip, ip, #249856	; 0x3d000
   137f4:	ldr	pc, [ip, #2416]!	; 0x970

000137f8 <g_file_set_contents@plt>:
   137f8:	add	ip, pc, #0, 12
   137fc:	add	ip, ip, #249856	; 0x3d000
   13800:	ldr	pc, [ip, #2408]!	; 0x968

00013804 <g_signal_handlers_destroy@plt>:
   13804:	add	ip, pc, #0, 12
   13808:	add	ip, ip, #249856	; 0x3d000
   1380c:	ldr	pc, [ip, #2400]!	; 0x960

00013810 <g_strsplit@plt>:
   13810:	add	ip, pc, #0, 12
   13814:	add	ip, ip, #249856	; 0x3d000
   13818:	ldr	pc, [ip, #2392]!	; 0x958

0001381c <g_type_check_value_holds@plt>:
   1381c:	add	ip, pc, #0, 12
   13820:	add	ip, ip, #249856	; 0x3d000
   13824:	ldr	pc, [ip, #2384]!	; 0x950

00013828 <g_random_set_seed@plt>:
   13828:	add	ip, pc, #0, 12
   1382c:	add	ip, ip, #249856	; 0x3d000
   13830:	ldr	pc, [ip, #2376]!	; 0x948

00013834 <g_value_set_string@plt>:
   13834:	add	ip, pc, #0, 12
   13838:	add	ip, ip, #249856	; 0x3d000
   1383c:	ldr	pc, [ip, #2368]!	; 0x940

00013840 <mpfr_get_ui@plt>:
   13840:	add	ip, pc, #0, 12
   13844:	add	ip, ip, #249856	; 0x3d000
   13848:	ldr	pc, [ip, #2360]!	; 0x938

0001384c <mpfr_frac@plt>:
   1384c:	add	ip, pc, #0, 12
   13850:	add	ip, ip, #249856	; 0x3d000
   13854:	ldr	pc, [ip, #2352]!	; 0x930

00013858 <g_string_insert_c@plt>:
   13858:	add	ip, pc, #0, 12
   1385c:	add	ip, ip, #249856	; 0x3d000
   13860:	ldr	pc, [ip, #2344]!	; 0x928

00013864 <mpfr_get_flt@plt>:
   13864:	add	ip, pc, #0, 12
   13868:	add	ip, ip, #249856	; 0x3d000
   1386c:	ldr	pc, [ip, #2336]!	; 0x920

00013870 <g_type_instance_get_private@plt>:
   13870:	add	ip, pc, #0, 12
   13874:	add	ip, ip, #249856	; 0x3d000
   13878:	ldr	pc, [ip, #2328]!	; 0x918

0001387c <mpc_mul@plt>:
   1387c:	add	ip, pc, #0, 12
   13880:	add	ip, ip, #249856	; 0x3d000
   13884:	ldr	pc, [ip, #2320]!	; 0x910

00013888 <mpc_sin@plt>:
   13888:	add	ip, pc, #0, 12
   1388c:	add	ip, ip, #249856	; 0x3d000
   13890:	ldr	pc, [ip, #2312]!	; 0x908

00013894 <g_list_last@plt>:
   13894:	add	ip, pc, #0, 12
   13898:	add	ip, ip, #249856	; 0x3d000
   1389c:	ldr	pc, [ip, #2304]!	; 0x900

000138a0 <g_str_has_prefix@plt>:
   138a0:	add	ip, pc, #0, 12
   138a4:	add	ip, ip, #249856	; 0x3d000
   138a8:	ldr	pc, [ip, #2296]!	; 0x8f8

000138ac <g_once_init_enter@plt>:
   138ac:	add	ip, pc, #0, 12
   138b0:	add	ip, ip, #249856	; 0x3d000
   138b4:	ldr	pc, [ip, #2288]!	; 0x8f0

000138b8 <g_slice_alloc0@plt>:
   138b8:	add	ip, pc, #0, 12
   138bc:	add	ip, ip, #249856	; 0x3d000
   138c0:	ldr	pc, [ip, #2280]!	; 0x8e8

000138c4 <g_regex_new@plt>:
   138c4:	add	ip, pc, #0, 12
   138c8:	add	ip, ip, #249856	; 0x3d000
   138cc:	ldr	pc, [ip, #2272]!	; 0x8e0

000138d0 <mpc_tanh@plt>:
   138d0:	add	ip, pc, #0, 12
   138d4:	add	ip, ip, #249856	; 0x3d000
   138d8:	ldr	pc, [ip, #2264]!	; 0x8d8

000138dc <g_main_context_iteration@plt>:
   138dc:	add	ip, pc, #0, 12
   138e0:	add	ip, ip, #249856	; 0x3d000
   138e4:	ldr	pc, [ip, #2256]!	; 0x8d0

000138e8 <g_hash_table_lookup@plt>:
   138e8:	add	ip, pc, #0, 12
   138ec:	add	ip, ip, #249856	; 0x3d000
   138f0:	ldr	pc, [ip, #2248]!	; 0x8c8

000138f4 <g_utf8_prev_char@plt>:
   138f4:	add	ip, pc, #0, 12
   138f8:	add	ip, ip, #249856	; 0x3d000
   138fc:	ldr	pc, [ip, #2240]!	; 0x8c0

00013900 <mpc_exp@plt>:
   13900:	add	ip, pc, #0, 12
   13904:	add	ip, ip, #249856	; 0x3d000
   13908:	ldr	pc, [ip, #2232]!	; 0x8b8

0001390c <g_regex_replace_literal@plt>:
   1390c:	add	ip, pc, #0, 12
   13910:	add	ip, ip, #249856	; 0x3d000
   13914:	ldr	pc, [ip, #2224]!	; 0x8b0

00013918 <g_utf8_collate@plt>:
   13918:	add	ip, pc, #0, 12
   1391c:	add	ip, ip, #249856	; 0x3d000
   13920:	ldr	pc, [ip, #2216]!	; 0x8a8

00013924 <g_hash_table_iter_next@plt>:
   13924:	add	ip, pc, #0, 12
   13928:	add	ip, ip, #249856	; 0x3d000
   1392c:	ldr	pc, [ip, #2208]!	; 0x8a0

00013930 <soup_message_new@plt>:
   13930:	add	ip, pc, #0, 12
   13934:	add	ip, ip, #249856	; 0x3d000
   13938:	ldr	pc, [ip, #2200]!	; 0x898

0001393c <g_file_replace_async@plt>:
   1393c:	add	ip, pc, #0, 12
   13940:	add	ip, ip, #249856	; 0x3d000
   13944:	ldr	pc, [ip, #2192]!	; 0x890

00013948 <g_file_get_contents@plt>:
   13948:	add	ip, pc, #0, 12
   1394c:	add	ip, ip, #249856	; 0x3d000
   13950:	ldr	pc, [ip, #2184]!	; 0x888

00013954 <xmlNodeGetContent@plt>:
   13954:	add	ip, pc, #0, 12
   13958:	add	ip, ip, #249856	; 0x3d000
   1395c:	ldr	pc, [ip, #2176]!	; 0x880

00013960 <g_string_sized_new@plt>:
   13960:	add	ip, pc, #0, 12
   13964:	add	ip, ip, #249856	; 0x3d000
   13968:	ldr	pc, [ip, #2168]!	; 0x878

0001396c <g_list_free_full@plt>:
   1396c:	add	ip, pc, #0, 12
   13970:	add	ip, ip, #249856	; 0x3d000
   13974:	ldr	pc, [ip, #2160]!	; 0x870

00013978 <__stack_chk_fail@plt>:
   13978:	add	ip, pc, #0, 12
   1397c:	add	ip, ip, #249856	; 0x3d000
   13980:	ldr	pc, [ip, #2152]!	; 0x868

00013984 <g_object_notify_by_pspec@plt>:
   13984:	add	ip, pc, #0, 12
   13988:	add	ip, ip, #249856	; 0x3d000
   1398c:	ldr	pc, [ip, #2144]!	; 0x860

00013990 <mpc_set@plt>:
   13990:	add	ip, pc, #0, 12
   13994:	add	ip, ip, #249856	; 0x3d000
   13998:	ldr	pc, [ip, #2136]!	; 0x858

0001399c <g_free@plt>:
   1399c:	add	ip, pc, #0, 12
   139a0:	add	ip, ip, #249856	; 0x3d000
   139a4:	ldr	pc, [ip, #2128]!	; 0x850

000139a8 <mpc_asin@plt>:
   139a8:	add	ip, pc, #0, 12
   139ac:	add	ip, ip, #249856	; 0x3d000
   139b0:	ldr	pc, [ip, #2120]!	; 0x848

000139b4 <g_task_get_context@plt>:
   139b4:	add	ip, pc, #0, 12
   139b8:	add	ip, ip, #249856	; 0x3d000
   139bc:	ldr	pc, [ip, #2112]!	; 0x840

000139c0 <mpc_neg@plt>:
   139c0:	add	ip, pc, #0, 12
   139c4:	add	ip, ip, #249856	; 0x3d000
   139c8:	ldr	pc, [ip, #2104]!	; 0x838

000139cc <g_hash_table_unref@plt>:
   139cc:	add	ip, pc, #0, 12
   139d0:	add	ip, ip, #249856	; 0x3d000
   139d4:	ldr	pc, [ip, #2096]!	; 0x830

000139d8 <xmlReadFile@plt>:
   139d8:	add	ip, pc, #0, 12
   139dc:	add	ip, ip, #249856	; 0x3d000
   139e0:	ldr	pc, [ip, #2088]!	; 0x828

000139e4 <g_file_test@plt>:
   139e4:	add	ip, pc, #0, 12
   139e8:	add	ip, ip, #249856	; 0x3d000
   139ec:	ldr	pc, [ip, #2080]!	; 0x820

000139f0 <g_quark_to_string@plt>:
   139f0:	add	ip, pc, #0, 12
   139f4:	add	ip, ip, #249856	; 0x3d000
   139f8:	ldr	pc, [ip, #2072]!	; 0x818

000139fc <mpfr_integer_p@plt>:
   139fc:	add	ip, pc, #0, 12
   13a00:	add	ip, ip, #249856	; 0x3d000
   13a04:	ldr	pc, [ip, #2064]!	; 0x810

00013a08 <g_param_spec_boxed@plt>:
   13a08:	add	ip, pc, #0, 12
   13a0c:	add	ip, ip, #249856	; 0x3d000
   13a10:	ldr	pc, [ip, #2056]!	; 0x808

00013a14 <g_task_set_task_data@plt>:
   13a14:	add	ip, pc, #0, 12
   13a18:	add	ip, ip, #249856	; 0x3d000
   13a1c:	ldr	pc, [ip, #2048]!	; 0x800

00013a20 <xmlXPathFreeContext@plt>:
   13a20:	add	ip, pc, #0, 12
   13a24:	add	ip, ip, #249856	; 0x3d000
   13a28:	ldr	pc, [ip, #2040]!	; 0x7f8

00013a2c <g_object_class_install_property@plt>:
   13a2c:	add	ip, pc, #0, 12
   13a30:	add	ip, ip, #249856	; 0x3d000
   13a34:	ldr	pc, [ip, #2032]!	; 0x7f0

00013a38 <mpc_pow_si@plt>:
   13a38:	add	ip, pc, #0, 12
   13a3c:	add	ip, ip, #249856	; 0x3d000
   13a40:	ldr	pc, [ip, #2024]!	; 0x7e8

00013a44 <g_task_get_task_data@plt>:
   13a44:	add	ip, pc, #0, 12
   13a48:	add	ip, ip, #249856	; 0x3d000
   13a4c:	ldr	pc, [ip, #2016]!	; 0x7e0

00013a50 <g_random_double@plt>:
   13a50:	add	ip, pc, #0, 12
   13a54:	add	ip, ip, #249856	; 0x3d000
   13a58:	ldr	pc, [ip, #2008]!	; 0x7d8

00013a5c <g_type_class_add_private@plt>:
   13a5c:	add	ip, pc, #0, 12
   13a60:	add	ip, ip, #249856	; 0x3d000
   13a64:	ldr	pc, [ip, #2000]!	; 0x7d0

00013a68 <soup_session_new@plt>:
   13a68:	add	ip, pc, #0, 12
   13a6c:	add	ip, ip, #249856	; 0x3d000
   13a70:	ldr	pc, [ip, #1992]!	; 0x7c8

00013a74 <mpc_fr_div@plt>:
   13a74:	add	ip, pc, #0, 12
   13a78:	add	ip, ip, #249856	; 0x3d000
   13a7c:	ldr	pc, [ip, #1984]!	; 0x7c0

00013a80 <g_regex_error_quark@plt>:
   13a80:	add	ip, pc, #0, 12
   13a84:	add	ip, ip, #249856	; 0x3d000
   13a88:	ldr	pc, [ip, #1976]!	; 0x7b8

00013a8c <raise@plt>:
   13a8c:	add	ip, pc, #0, 12
   13a90:	add	ip, ip, #249856	; 0x3d000
   13a94:	ldr	pc, [ip, #1968]!	; 0x7b0

00013a98 <g_type_check_instance_is_a@plt>:
   13a98:	add	ip, pc, #0, 12
   13a9c:	add	ip, ip, #249856	; 0x3d000
   13aa0:	ldr	pc, [ip, #1960]!	; 0x7a8

00013aa4 <mpfr_const_pi@plt>:
   13aa4:	add	ip, pc, #0, 12
   13aa8:	add	ip, ip, #249856	; 0x3d000
   13aac:	ldr	pc, [ip, #1952]!	; 0x7a0

00013ab0 <soup_session_send_finish@plt>:
   13ab0:	add	ip, pc, #0, 12
   13ab4:	add	ip, ip, #249856	; 0x3d000
   13ab8:	ldr	pc, [ip, #1944]!	; 0x798

00013abc <g_stpcpy@plt>:
   13abc:	add	ip, pc, #0, 12
   13ac0:	add	ip, ip, #249856	; 0x3d000
   13ac4:	ldr	pc, [ip, #1936]!	; 0x790

00013ac8 <mpc_cosh@plt>:
   13ac8:	add	ip, pc, #0, 12
   13acc:	add	ip, ip, #249856	; 0x3d000
   13ad0:	ldr	pc, [ip, #1928]!	; 0x788

00013ad4 <mpfr_clear@plt>:
   13ad4:	add	ip, pc, #0, 12
   13ad8:	add	ip, ip, #249856	; 0x3d000
   13adc:	ldr	pc, [ip, #1920]!	; 0x780

00013ae0 <setlocale@plt>:
   13ae0:	add	ip, pc, #0, 12
   13ae4:	add	ip, ip, #249856	; 0x3d000
   13ae8:	ldr	pc, [ip, #1912]!	; 0x778

00013aec <g_clear_error@plt>:
   13aec:	add	ip, pc, #0, 12
   13af0:	add	ip, ip, #249856	; 0x3d000
   13af4:	ldr	pc, [ip, #1904]!	; 0x770

00013af8 <g_strconcat@plt>:
   13af8:	add	ip, pc, #0, 12
   13afc:	add	ip, ip, #249856	; 0x3d000
   13b00:	ldr	pc, [ip, #1896]!	; 0x768

00013b04 <g_dpgettext2@plt>:
   13b04:	add	ip, pc, #0, 12
   13b08:	add	ip, ip, #249856	; 0x3d000
   13b0c:	ldr	pc, [ip, #1888]!	; 0x760

00013b10 <mpc_cmp@plt>:
   13b10:	add	ip, pc, #0, 12
   13b14:	add	ip, ip, #249856	; 0x3d000
   13b18:	ldr	pc, [ip, #1880]!	; 0x758

00013b1c <fgets@plt>:
   13b1c:	add	ip, pc, #0, 12
   13b20:	add	ip, ip, #249856	; 0x3d000
   13b24:	ldr	pc, [ip, #1872]!	; 0x750

00013b28 <g_hash_table_remove@plt>:
   13b28:	add	ip, pc, #0, 12
   13b2c:	add	ip, ip, #249856	; 0x3d000
   13b30:	ldr	pc, [ip, #1864]!	; 0x748

00013b34 <mpfr_set_zero@plt>:
   13b34:	add	ip, pc, #0, 12
   13b38:	add	ip, ip, #249856	; 0x3d000
   13b3c:	ldr	pc, [ip, #1856]!	; 0x740

00013b40 <fputc@plt>:
   13b40:	add	ip, pc, #0, 12
   13b44:	add	ip, ip, #249856	; 0x3d000
   13b48:	ldr	pc, [ip, #1848]!	; 0x738

00013b4c <g_string_free@plt>:
   13b4c:	add	ip, pc, #0, 12
   13b50:	add	ip, ip, #249856	; 0x3d000
   13b54:	ldr	pc, [ip, #1840]!	; 0x730

00013b58 <g_strv_get_type@plt>:
   13b58:	add	ip, pc, #0, 12
   13b5c:	add	ip, ip, #249856	; 0x3d000
   13b60:	ldr	pc, [ip, #1832]!	; 0x728

00013b64 <fwrite@plt>:
   13b64:	add	ip, pc, #0, 12
   13b68:	add	ip, ip, #249856	; 0x3d000
   13b6c:	ldr	pc, [ip, #1824]!	; 0x720

00013b70 <g_path_get_dirname@plt>:
   13b70:	add	ip, pc, #0, 12
   13b74:	add	ip, ip, #249856	; 0x3d000
   13b78:	ldr	pc, [ip, #1816]!	; 0x718

00013b7c <memcpy@plt>:
   13b7c:	add	ip, pc, #0, 12
   13b80:	add	ip, ip, #249856	; 0x3d000
   13b84:	ldr	pc, [ip, #1808]!	; 0x710

00013b88 <g_realloc_n@plt>:
   13b88:	add	ip, pc, #0, 12
   13b8c:	add	ip, ip, #249856	; 0x3d000
   13b90:	ldr	pc, [ip, #1800]!	; 0x708

00013b94 <g_object_unref@plt>:
   13b94:	add	ip, pc, #0, 12
   13b98:	add	ip, ip, #249856	; 0x3d000
   13b9c:	ldr	pc, [ip, #1792]!	; 0x700

00013ba0 <strlen@plt>:
   13ba0:	add	ip, pc, #0, 12
   13ba4:	add	ip, ip, #249856	; 0x3d000
   13ba8:	ldr	pc, [ip, #1784]!	; 0x6f8

00013bac <g_once_init_leave@plt>:
   13bac:	add	ip, pc, #0, 12
   13bb0:	add	ip, ip, #249856	; 0x3d000
   13bb4:	ldr	pc, [ip, #1776]!	; 0x6f0

00013bb8 <g_date_time_unref@plt>:
   13bb8:	add	ip, pc, #0, 12
   13bbc:	add	ip, ip, #249856	; 0x3d000
   13bc0:	ldr	pc, [ip, #1768]!	; 0x6e8

00013bc4 <g_date_time_new_now_utc@plt>:
   13bc4:	add	ip, pc, #0, 12
   13bc8:	add	ip, ip, #249856	; 0x3d000
   13bcc:	ldr	pc, [ip, #1760]!	; 0x6e0

00013bd0 <mpfr_set_erangeflag@plt>:
   13bd0:	add	ip, pc, #0, 12
   13bd4:	add	ip, ip, #249856	; 0x3d000
   13bd8:	ldr	pc, [ip, #1752]!	; 0x6d8

00013bdc <g_task_get_type@plt>:
   13bdc:	add	ip, pc, #0, 12
   13be0:	add	ip, ip, #249856	; 0x3d000
   13be4:	ldr	pc, [ip, #1744]!	; 0x6d0

00013be8 <g_utf8_strlen@plt>:
   13be8:	add	ip, pc, #0, 12
   13bec:	add	ip, ip, #249856	; 0x3d000
   13bf0:	ldr	pc, [ip, #1736]!	; 0x6c8

00013bf4 <mpfr_set_ui_2exp@plt>:
   13bf4:	add	ip, pc, #0, 12
   13bf8:	add	ip, ip, #249856	; 0x3d000
   13bfc:	ldr	pc, [ip, #1728]!	; 0x6c0

00013c00 <g_malloc0_n@plt>:
   13c00:	add	ip, pc, #0, 12
   13c04:	add	ip, ip, #249856	; 0x3d000
   13c08:	ldr	pc, [ip, #1720]!	; 0x6b8

00013c0c <g_hash_table_size@plt>:
   13c0c:	add	ip, pc, #0, 12
   13c10:	add	ip, ip, #249856	; 0x3d000
   13c14:	ldr	pc, [ip, #1712]!	; 0x6b0

00013c18 <g_list_copy@plt>:
   13c18:	add	ip, pc, #0, 12
   13c1c:	add	ip, ip, #249856	; 0x3d000
   13c20:	ldr	pc, [ip, #1704]!	; 0x6a8

00013c24 <g_type_register_fundamental@plt>:
   13c24:	add	ip, pc, #0, 12
   13c28:	add	ip, ip, #249856	; 0x3d000
   13c2c:	ldr	pc, [ip, #1696]!	; 0x6a0

00013c30 <g_string_prepend_c@plt>:
   13c30:	add	ip, pc, #0, 12
   13c34:	add	ip, ip, #249856	; 0x3d000
   13c38:	ldr	pc, [ip, #1688]!	; 0x698

00013c3c <g_strchug@plt>:
   13c3c:	add	ip, pc, #0, 12
   13c40:	add	ip, ip, #249856	; 0x3d000
   13c44:	ldr	pc, [ip, #1680]!	; 0x690

00013c48 <g_realloc@plt>:
   13c48:	add	ip, pc, #0, 12
   13c4c:	add	ip, ip, #249856	; 0x3d000
   13c50:	ldr	pc, [ip, #1672]!	; 0x688

00013c54 <g_hash_table_contains@plt>:
   13c54:	add	ip, pc, #0, 12
   13c58:	add	ip, ip, #249856	; 0x3d000
   13c5c:	ldr	pc, [ip, #1664]!	; 0x680

00013c60 <g_type_class_peek_parent@plt>:
   13c60:	add	ip, pc, #0, 12
   13c64:	add	ip, ip, #249856	; 0x3d000
   13c68:	ldr	pc, [ip, #1656]!	; 0x678

00013c6c <g_file_new_for_path@plt>:
   13c6c:	add	ip, pc, #0, 12
   13c70:	add	ip, ip, #249856	; 0x3d000
   13c74:	ldr	pc, [ip, #1648]!	; 0x670

00013c78 <g_enum_register_static@plt>:
   13c78:	add	ip, pc, #0, 12
   13c7c:	add	ip, ip, #249856	; 0x3d000
   13c80:	ldr	pc, [ip, #1640]!	; 0x668

00013c84 <g_string_prepend_unichar@plt>:
   13c84:	add	ip, pc, #0, 12
   13c88:	add	ip, ip, #249856	; 0x3d000
   13c8c:	ldr	pc, [ip, #1632]!	; 0x660

00013c90 <g_malloc0@plt>:
   13c90:	add	ip, pc, #0, 12
   13c94:	add	ip, ip, #249856	; 0x3d000
   13c98:	ldr	pc, [ip, #1624]!	; 0x658

00013c9c <g_dgettext@plt>:
   13c9c:	add	ip, pc, #0, 12
   13ca0:	add	ip, ip, #249856	; 0x3d000
   13ca4:	ldr	pc, [ip, #1616]!	; 0x650

00013ca8 <mpc_mul_si@plt>:
   13ca8:	add	ip, pc, #0, 12
   13cac:	add	ip, ip, #249856	; 0x3d000
   13cb0:	ldr	pc, [ip, #1608]!	; 0x648

00013cb4 <time@plt>:
   13cb4:	add	ip, pc, #0, 12
   13cb8:	add	ip, ip, #249856	; 0x3d000
   13cbc:	ldr	pc, [ip, #1600]!	; 0x640

00013cc0 <g_list_nth_data@plt>:
   13cc0:	add	ip, pc, #0, 12
   13cc4:	add	ip, ip, #249856	; 0x3d000
   13cc8:	ldr	pc, [ip, #1592]!	; 0x638

00013ccc <xmlInitParser@plt>:
   13ccc:	add	ip, pc, #0, 12
   13cd0:	add	ip, ip, #249856	; 0x3d000
   13cd4:	ldr	pc, [ip, #1584]!	; 0x630

00013cd8 <mpfr_overflow_p@plt>:
   13cd8:	add	ip, pc, #0, 12
   13cdc:	add	ip, ip, #249856	; 0x3d000
   13ce0:	ldr	pc, [ip, #1576]!	; 0x628

00013ce4 <mpc_tan@plt>:
   13ce4:	add	ip, pc, #0, 12
   13ce8:	add	ip, ip, #249856	; 0x3d000
   13cec:	ldr	pc, [ip, #1568]!	; 0x620

00013cf0 <mpfr_root@plt>:
   13cf0:	add	ip, pc, #0, 12
   13cf4:	add	ip, ip, #249856	; 0x3d000
   13cf8:	ldr	pc, [ip, #1560]!	; 0x618

00013cfc <g_regex_escape_string@plt>:
   13cfc:	add	ip, pc, #0, 12
   13d00:	add	ip, ip, #249856	; 0x3d000
   13d04:	ldr	pc, [ip, #1552]!	; 0x610

00013d08 <memchr@plt>:
   13d08:	add	ip, pc, #0, 12
   13d0c:	add	ip, ip, #249856	; 0x3d000
   13d10:	ldr	pc, [ip, #1544]!	; 0x608

00013d14 <g_file_error_quark@plt>:
   13d14:	add	ip, pc, #0, 12
   13d18:	add	ip, ip, #249856	; 0x3d000
   13d1c:	ldr	pc, [ip, #1536]!	; 0x600

00013d20 <mpc_set_fr@plt>:
   13d20:	add	ip, pc, #0, 12
   13d24:	add	ip, ip, #249856	; 0x3d000
   13d28:	ldr	pc, [ip, #1528]!	; 0x5f8

00013d2c <g_assertion_message_expr@plt>:
   13d2c:	add	ip, pc, #0, 12
   13d30:	add	ip, ip, #249856	; 0x3d000
   13d34:	ldr	pc, [ip, #1520]!	; 0x5f0

00013d38 <xmlCleanupParser@plt>:
   13d38:	add	ip, pc, #0, 12
   13d3c:	add	ip, ip, #249856	; 0x3d000
   13d40:	ldr	pc, [ip, #1512]!	; 0x5e8

00013d44 <g_task_new@plt>:
   13d44:	add	ip, pc, #0, 12
   13d48:	add	ip, ip, #249856	; 0x3d000
   13d4c:	ldr	pc, [ip, #1504]!	; 0x5e0

00013d50 <g_string_append@plt>:
   13d50:	add	ip, pc, #0, 12
   13d54:	add	ip, ip, #249856	; 0x3d000
   13d58:	ldr	pc, [ip, #1496]!	; 0x5d8

00013d5c <mpfr_get_d@plt>:
   13d5c:	add	ip, pc, #0, 12
   13d60:	add	ip, ip, #249856	; 0x3d000
   13d64:	ldr	pc, [ip, #1488]!	; 0x5d0

00013d68 <g_locale_to_utf8@plt>:
   13d68:	add	ip, pc, #0, 12
   13d6c:	add	ip, ip, #249856	; 0x3d000
   13d70:	ldr	pc, [ip, #1480]!	; 0x5c8

00013d74 <g_output_stream_splice_finish@plt>:
   13d74:	add	ip, pc, #0, 12
   13d78:	add	ip, ip, #249856	; 0x3d000
   13d7c:	ldr	pc, [ip, #1472]!	; 0x5c0

00013d80 <g_slice_free1@plt>:
   13d80:	add	ip, pc, #0, 12
   13d84:	add	ip, ip, #249856	; 0x3d000
   13d88:	ldr	pc, [ip, #1464]!	; 0x5b8

00013d8c <xmlXPathRegisterNs@plt>:
   13d8c:	add	ip, pc, #0, 12
   13d90:	add	ip, ip, #249856	; 0x3d000
   13d94:	ldr	pc, [ip, #1456]!	; 0x5b0

00013d98 <g_list_sort@plt>:
   13d98:	add	ip, pc, #0, 12
   13d9c:	add	ip, ip, #249856	; 0x3d000
   13da0:	ldr	pc, [ip, #1448]!	; 0x5a8

00013da4 <g_get_user_data_dir@plt>:
   13da4:	add	ip, pc, #0, 12
   13da8:	add	ip, ip, #249856	; 0x3d000
   13dac:	ldr	pc, [ip, #1440]!	; 0x5a0

00013db0 <g_type_check_class_cast@plt>:
   13db0:	add	ip, pc, #0, 12
   13db4:	add	ip, ip, #249856	; 0x3d000
   13db8:	ldr	pc, [ip, #1432]!	; 0x598

00013dbc <g_utf8_strchr@plt>:
   13dbc:	add	ip, pc, #0, 12
   13dc0:	add	ip, ip, #249856	; 0x3d000
   13dc4:	ldr	pc, [ip, #1424]!	; 0x590

00013dc8 <__libc_start_main@plt>:
   13dc8:	add	ip, pc, #0, 12
   13dcc:	add	ip, ip, #249856	; 0x3d000
   13dd0:	ldr	pc, [ip, #1416]!	; 0x588

00013dd4 <__gmon_start__@plt>:
   13dd4:	add	ip, pc, #0, 12
   13dd8:	add	ip, ip, #249856	; 0x3d000
   13ddc:	ldr	pc, [ip, #1408]!	; 0x580

00013de0 <g_string_prepend@plt>:
   13de0:	add	ip, pc, #0, 12
   13de4:	add	ip, ip, #249856	; 0x3d000
   13de8:	ldr	pc, [ip, #1400]!	; 0x578

00013dec <g_type_fundamental_next@plt>:
   13dec:	add	ip, pc, #0, 12
   13df0:	add	ip, ip, #249856	; 0x3d000
   13df4:	ldr	pc, [ip, #1392]!	; 0x570

00013df8 <mpc_sinh@plt>:
   13df8:	add	ip, pc, #0, 12
   13dfc:	add	ip, ip, #249856	; 0x3d000
   13e00:	ldr	pc, [ip, #1384]!	; 0x568

00013e04 <mpc_asinh@plt>:
   13e04:	add	ip, pc, #0, 12
   13e08:	add	ip, ip, #249856	; 0x3d000
   13e0c:	ldr	pc, [ip, #1376]!	; 0x560

00013e10 <g_unichar_isdigit@plt>:
   13e10:	add	ip, pc, #0, 12
   13e14:	add	ip, ip, #249856	; 0x3d000
   13e18:	ldr	pc, [ip, #1368]!	; 0x558

00013e1c <mpc_div@plt>:
   13e1c:	add	ip, pc, #0, 12
   13e20:	add	ip, ip, #249856	; 0x3d000
   13e24:	ldr	pc, [ip, #1360]!	; 0x550

00013e28 <g_type_create_instance@plt>:
   13e28:	add	ip, pc, #0, 12
   13e2c:	add	ip, ip, #249856	; 0x3d000
   13e30:	ldr	pc, [ip, #1352]!	; 0x548

00013e34 <mpc_pow@plt>:
   13e34:	add	ip, pc, #0, 12
   13e38:	add	ip, ip, #249856	; 0x3d000
   13e3c:	ldr	pc, [ip, #1344]!	; 0x540

00013e40 <mpfr_set4@plt>:
   13e40:	add	ip, pc, #0, 12
   13e44:	add	ip, ip, #249856	; 0x3d000
   13e48:	ldr	pc, [ip, #1336]!	; 0x538

00013e4c <mpc_mul_fr@plt>:
   13e4c:	add	ip, pc, #0, 12
   13e50:	add	ip, ip, #249856	; 0x3d000
   13e54:	ldr	pc, [ip, #1328]!	; 0x530

00013e58 <g_strcmp0@plt>:
   13e58:	add	ip, pc, #0, 12
   13e5c:	add	ip, ip, #249856	; 0x3d000
   13e60:	ldr	pc, [ip, #1320]!	; 0x528

00013e64 <g_unichar_xdigit_value@plt>:
   13e64:	add	ip, pc, #0, 12
   13e68:	add	ip, ip, #249856	; 0x3d000
   13e6c:	ldr	pc, [ip, #1312]!	; 0x520

Disassembly of section .text:

00013e70 <.text>:
   13e70:	mov	r3, r0
   13e74:	mov	r0, r1
   13e78:	mov	r1, r3
   13e7c:	b	144f0 <g_unichar_xdigit_value@plt+0x68c>
   13e80:	mov	fp, #0
   13e84:	mov	lr, #0
   13e88:	pop	{r1}		; (ldr r1, [sp], #4)
   13e8c:	mov	r2, sp
   13e90:	push	{r2}		; (str r2, [sp, #-4]!)
   13e94:	push	{r0}		; (str r0, [sp, #-4]!)
   13e98:	ldr	ip, [pc, #16]	; 13eb0 <g_unichar_xdigit_value@plt+0x4c>
   13e9c:	push	{ip}		; (str ip, [sp, #-4]!)
   13ea0:	ldr	r0, [pc, #12]	; 13eb4 <g_unichar_xdigit_value@plt+0x50>
   13ea4:	ldr	r3, [pc, #12]	; 13eb8 <g_unichar_xdigit_value@plt+0x54>
   13ea8:	bl	13dc8 <__libc_start_main@plt>
   13eac:	bl	137ec <abort@plt>
   13eb0:	andeq	r8, r3, r4, ror r0
   13eb4:	andeq	r3, r1, r0, ror lr
   13eb8:	andeq	r8, r3, r0, lsl r0
   13ebc:	ldr	r3, [pc, #20]	; 13ed8 <g_unichar_xdigit_value@plt+0x74>
   13ec0:	ldr	r2, [pc, #20]	; 13edc <g_unichar_xdigit_value@plt+0x78>
   13ec4:	add	r3, pc, r3
   13ec8:	ldr	r2, [r3, r2]
   13ecc:	cmp	r2, #0
   13ed0:	bxeq	lr
   13ed4:	b	13dd4 <__gmon_start__@plt>
   13ed8:	andeq	sp, r3, r4, lsr r1
   13edc:	andeq	r0, r0, ip, asr #7
   13ee0:	push	{r3, lr}
   13ee4:	movw	r0, #5080	; 0x13d8
   13ee8:	ldr	r3, [pc, #36]	; 13f14 <g_unichar_xdigit_value@plt+0xb0>
   13eec:	movt	r0, #5
   13ef0:	rsb	r3, r0, r3
   13ef4:	cmp	r3, #6
   13ef8:	popls	{r3, pc}
   13efc:	movw	r3, #0
   13f00:	movt	r3, #0
   13f04:	cmp	r3, #0
   13f08:	popeq	{r3, pc}
   13f0c:	blx	r3
   13f10:	pop	{r3, pc}
   13f14:	ldrdeq	r1, [r5], -fp
   13f18:	push	{r3, lr}
   13f1c:	movw	r0, #5080	; 0x13d8
   13f20:	movw	r3, #5080	; 0x13d8
   13f24:	movt	r0, #5
   13f28:	movt	r3, #5
   13f2c:	rsb	r3, r0, r3
   13f30:	asr	r3, r3, #2
   13f34:	add	r3, r3, r3, lsr #31
   13f38:	asrs	r1, r3, #1
   13f3c:	popeq	{r3, pc}
   13f40:	movw	r2, #0
   13f44:	movt	r2, #0
   13f48:	cmp	r2, #0
   13f4c:	popeq	{r3, pc}
   13f50:	blx	r2
   13f54:	pop	{r3, pc}
   13f58:	push	{r4, lr}
   13f5c:	movw	r4, #5100	; 0x13ec
   13f60:	movt	r4, #5
   13f64:	ldrb	r3, [r4]
   13f68:	cmp	r3, #0
   13f6c:	popne	{r4, pc}
   13f70:	bl	13ee0 <g_unichar_xdigit_value@plt+0x7c>
   13f74:	mov	r3, #1
   13f78:	strb	r3, [r4]
   13f7c:	pop	{r4, pc}
   13f80:	movw	r0, #656	; 0x290
   13f84:	movt	r0, #5
   13f88:	push	{r3, lr}
   13f8c:	ldr	r3, [r0]
   13f90:	cmp	r3, #0
   13f94:	beq	13fac <g_unichar_xdigit_value@plt+0x148>
   13f98:	movw	r3, #0
   13f9c:	movt	r3, #0
   13fa0:	cmp	r3, #0
   13fa4:	beq	13fac <g_unichar_xdigit_value@plt+0x148>
   13fa8:	blx	r3
   13fac:	pop	{r3, lr}
   13fb0:	b	13f18 <g_unichar_xdigit_value@plt+0xb4>
   13fb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   13fb8:	movw	r4, #5088	; 0x13e0
   13fbc:	movt	r4, #5
   13fc0:	sub	sp, sp, #28
   13fc4:	subs	r7, r0, #0
   13fc8:	mov	r6, #0
   13fcc:	ldr	r3, [r4]
   13fd0:	mov	r5, r1
   13fd4:	mov	r8, r2
   13fd8:	str	r6, [sp, #16]
   13fdc:	str	r3, [sp, #20]
   13fe0:	beq	140dc <g_unichar_xdigit_value@plt+0x278>
   13fe4:	cmp	r1, #0
   13fe8:	beq	140f8 <g_unichar_xdigit_value@plt+0x294>
   13fec:	cmp	r2, #0
   13ff0:	beq	14118 <g_unichar_xdigit_value@plt+0x2b4>
   13ff4:	ldrb	r3, [r7]
   13ff8:	cmp	r3, #0
   13ffc:	beq	140bc <g_unichar_xdigit_value@plt+0x258>
   14000:	ldrb	r3, [r5]
   14004:	cmp	r3, #0
   14008:	beq	140bc <g_unichar_xdigit_value@plt+0x258>
   1400c:	mov	r0, r5
   14010:	mov	r1, r8
   14014:	bl	13e58 <g_strcmp0@plt>
   14018:	cmp	r0, #0
   1401c:	beq	140bc <g_unichar_xdigit_value@plt+0x258>
   14020:	mov	r0, r5
   14024:	mvn	r1, #0
   14028:	bl	13cfc <g_regex_escape_string@plt>
   1402c:	add	r3, sp, #16
   14030:	mov	r1, r6
   14034:	mov	r2, r6
   14038:	mov	r5, r0
   1403c:	bl	138c4 <g_regex_new@plt>
   14040:	mov	r9, r0
   14044:	mov	r0, r5
   14048:	bl	1399c <g_free@plt>
   1404c:	ldr	r3, [sp, #16]
   14050:	cmp	r3, #0
   14054:	beq	14138 <g_unichar_xdigit_value@plt+0x2d4>
   14058:	ldr	r5, [r3]
   1405c:	bl	13a80 <g_regex_error_quark@plt>
   14060:	cmp	r5, r0
   14064:	beq	14204 <g_unichar_xdigit_value@plt+0x3a0>
   14068:	ldr	r5, [sp, #16]
   1406c:	ldr	r0, [r5]
   14070:	bl	139f0 <g_quark_to_string@plt>
   14074:	mov	r3, #89	; 0x59
   14078:	str	r3, [sp]
   1407c:	mov	r1, #8
   14080:	ldr	ip, [r5, #8]
   14084:	movw	r2, #32928	; 0x80a0
   14088:	movw	r3, #32976	; 0x80d0
   1408c:	movt	r2, #3
   14090:	movt	r3, #3
   14094:	str	ip, [sp, #4]
   14098:	str	r0, [sp, #8]
   1409c:	mov	r0, r6
   140a0:	ldr	ip, [r5, #4]
   140a4:	str	ip, [sp, #12]
   140a8:	bl	13558 <g_log@plt>
   140ac:	add	r0, sp, #16
   140b0:	bl	13aec <g_clear_error@plt>
   140b4:	mov	r0, r6
   140b8:	b	140c4 <g_unichar_xdigit_value@plt+0x260>
   140bc:	mov	r0, r7
   140c0:	bl	136f0 <g_strdup@plt>
   140c4:	ldr	r2, [sp, #20]
   140c8:	ldr	r3, [r4]
   140cc:	cmp	r2, r3
   140d0:	bne	14200 <g_unichar_xdigit_value@plt+0x39c>
   140d4:	add	sp, sp, #28
   140d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   140dc:	movw	r1, #32904	; 0x8088
   140e0:	movw	r2, #33004	; 0x80ec
   140e4:	movt	r1, #3
   140e8:	movt	r2, #3
   140ec:	bl	13450 <g_return_if_fail_warning@plt>
   140f0:	mov	r0, r7
   140f4:	b	140c4 <g_unichar_xdigit_value@plt+0x260>
   140f8:	mov	r0, r5
   140fc:	movw	r1, #32904	; 0x8088
   14100:	movw	r2, #33020	; 0x80fc
   14104:	movt	r1, #3
   14108:	movt	r2, #3
   1410c:	bl	13450 <g_return_if_fail_warning@plt>
   14110:	mov	r0, r5
   14114:	b	140c4 <g_unichar_xdigit_value@plt+0x260>
   14118:	mov	r0, r8
   1411c:	movw	r1, #32904	; 0x8088
   14120:	movw	r2, #33032	; 0x8108
   14124:	movt	r1, #3
   14128:	movt	r2, #3
   1412c:	bl	13450 <g_return_if_fail_warning@plt>
   14130:	mov	r0, r8
   14134:	b	140c4 <g_unichar_xdigit_value@plt+0x260>
   14138:	add	r2, sp, #16
   1413c:	str	r8, [sp]
   14140:	str	r2, [sp, #8]
   14144:	mov	r1, r7
   14148:	str	r3, [sp, #4]
   1414c:	mov	r0, r9
   14150:	mvn	r2, #0
   14154:	bl	1390c <g_regex_replace_literal@plt>
   14158:	mov	r5, r0
   1415c:	ldr	r0, [sp, #16]
   14160:	cmp	r0, #0
   14164:	beq	141e0 <g_unichar_xdigit_value@plt+0x37c>
   14168:	cmp	r9, #0
   1416c:	beq	1417c <g_unichar_xdigit_value@plt+0x318>
   14170:	mov	r0, r9
   14174:	bl	13780 <g_regex_unref@plt>
   14178:	ldr	r0, [sp, #16]
   1417c:	ldr	r5, [r0]
   14180:	bl	13a80 <g_regex_error_quark@plt>
   14184:	cmp	r5, r0
   14188:	beq	14204 <g_unichar_xdigit_value@plt+0x3a0>
   1418c:	ldr	r5, [sp, #16]
   14190:	ldr	r0, [r5]
   14194:	bl	139f0 <g_quark_to_string@plt>
   14198:	mov	r3, #102	; 0x66
   1419c:	str	r3, [sp]
   141a0:	mov	r1, #8
   141a4:	ldr	ip, [r5, #8]
   141a8:	movw	r2, #32928	; 0x80a0
   141ac:	movw	r3, #32976	; 0x80d0
   141b0:	movt	r2, #3
   141b4:	movt	r3, #3
   141b8:	str	ip, [sp, #4]
   141bc:	str	r0, [sp, #8]
   141c0:	mov	r0, #0
   141c4:	ldr	ip, [r5, #4]
   141c8:	str	ip, [sp, #12]
   141cc:	bl	13558 <g_log@plt>
   141d0:	add	r0, sp, #16
   141d4:	bl	13aec <g_clear_error@plt>
   141d8:	mov	r0, #0
   141dc:	b	140c4 <g_unichar_xdigit_value@plt+0x260>
   141e0:	bl	1399c <g_free@plt>
   141e4:	cmp	r9, #0
   141e8:	moveq	r0, r5
   141ec:	beq	140c4 <g_unichar_xdigit_value@plt+0x260>
   141f0:	mov	r0, r9
   141f4:	bl	13780 <g_regex_unref@plt>
   141f8:	mov	r0, r5
   141fc:	b	140c4 <g_unichar_xdigit_value@plt+0x260>
   14200:	bl	13978 <__stack_chk_fail@plt>
   14204:	mov	ip, #0
   14208:	movw	r1, #32976	; 0x80d0
   1420c:	movw	r3, #32904	; 0x8088
   14210:	str	ip, [sp]
   14214:	mov	r0, ip
   14218:	movt	r1, #3
   1421c:	mov	r2, #119	; 0x77
   14220:	movt	r3, #3
   14224:	str	ip, [sp, #16]
   14228:	bl	13d2c <g_assertion_message_expr@plt>
   1422c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14230:	movw	r7, #5088	; 0x13e0
   14234:	movt	r7, #5
   14238:	sub	sp, sp, #44	; 0x2c
   1423c:	subs	r4, r0, #0
   14240:	mov	r3, #0
   14244:	ldr	r2, [r7]
   14248:	str	r3, [sp, #24]
   1424c:	str	r3, [sp, #28]
   14250:	str	r2, [sp, #36]	; 0x24
   14254:	str	r3, [sp, #32]
   14258:	beq	14458 <g_unichar_xdigit_value@plt+0x5f4>
   1425c:	mov	r0, #1
   14260:	movt	r0, #1
   14264:	bl	13654 <nl_langinfo@plt>
   14268:	bl	136f0 <g_strdup@plt>
   1426c:	subs	sl, r0, #0
   14270:	beq	14438 <g_unichar_xdigit_value@plt+0x5d4>
   14274:	movw	r1, #37196	; 0x914c
   14278:	movt	r1, #3
   1427c:	bl	13e58 <g_strcmp0@plt>
   14280:	cmp	r0, #0
   14284:	beq	14438 <g_unichar_xdigit_value@plt+0x5d4>
   14288:	mov	r0, #65536	; 0x10000
   1428c:	bl	13654 <nl_langinfo@plt>
   14290:	bl	136f0 <g_strdup@plt>
   14294:	cmp	r0, #0
   14298:	mov	r6, r0
   1429c:	mov	r5, r0
   142a0:	beq	144c4 <g_unichar_xdigit_value@plt+0x660>
   142a4:	mov	r0, r4
   142a8:	mov	r1, sl
   142ac:	movw	r2, #37196	; 0x914c
   142b0:	movt	r2, #3
   142b4:	bl	13fb4 <g_unichar_xdigit_value@plt+0x150>
   142b8:	mov	r1, r6
   142bc:	movw	r2, #33056	; 0x8120
   142c0:	movt	r2, #3
   142c4:	mov	fp, #1
   142c8:	mov	r4, r0
   142cc:	bl	13fb4 <g_unichar_xdigit_value@plt+0x150>
   142d0:	mov	r8, r0
   142d4:	bl	15530 <g_unichar_xdigit_value@plt+0x16cc>
   142d8:	mov	r5, r0
   142dc:	mov	r0, r8
   142e0:	bl	1399c <g_free@plt>
   142e4:	mov	r0, r4
   142e8:	bl	1399c <g_free@plt>
   142ec:	mov	r8, #0
   142f0:	str	fp, [r5, #24]
   142f4:	mov	r2, #10
   142f8:	mov	r3, #32
   142fc:	str	r2, [r5, #16]
   14300:	str	r3, [r5, #20]
   14304:	add	r2, sp, #28
   14308:	add	r1, sp, #24
   1430c:	add	r3, sp, r3
   14310:	mov	r0, r5
   14314:	str	r8, [sp]
   14318:	str	r8, [sp, #4]
   1431c:	movw	r4, #5104	; 0x13f0
   14320:	bl	1573c <g_unichar_xdigit_value@plt+0x18d8>
   14324:	ldr	r1, [sp, #24]
   14328:	ldr	r3, [sp, #28]
   1432c:	movt	r4, #5
   14330:	str	r1, [sp, #12]
   14334:	str	r3, [sp, #16]
   14338:	mov	r9, r0
   1433c:	mov	r0, r8
   14340:	bl	1399c <g_free@plt>
   14344:	ldr	r3, [sp, #32]
   14348:	ldr	r1, [sp, #12]
   1434c:	ldr	r0, [r4]
   14350:	str	r3, [sp, #20]
   14354:	bl	2987c <g_unichar_xdigit_value@plt+0x15a18>
   14358:	cmp	r9, r8
   1435c:	beq	14408 <g_unichar_xdigit_value@plt+0x5a4>
   14360:	mov	r1, r9
   14364:	ldr	r0, [r4]
   14368:	bl	2adfc <g_unichar_xdigit_value@plt+0x16f98>
   1436c:	str	r0, [sp, #16]
   14370:	ldr	r0, [r4]
   14374:	bl	29c90 <g_unichar_xdigit_value@plt+0x15e2c>
   14378:	cmp	r0, r8
   1437c:	beq	1446c <g_unichar_xdigit_value@plt+0x608>
   14380:	movw	r3, #5092	; 0x13e4
   14384:	movt	r3, #5
   14388:	ldr	r0, [r4]
   1438c:	ldr	r2, [r3]
   14390:	str	r2, [sp, #12]
   14394:	bl	29c90 <g_unichar_xdigit_value@plt+0x15e2c>
   14398:	ldr	r2, [sp, #12]
   1439c:	mov	r1, fp
   143a0:	mov	r3, r0
   143a4:	mov	r0, r2
   143a8:	movw	r2, #33060	; 0x8124
   143ac:	movt	r2, #3
   143b0:	bl	136d8 <__fprintf_chk@plt>
   143b4:	ldr	r0, [r4]
   143b8:	mov	r1, r8
   143bc:	bl	29cd0 <g_unichar_xdigit_value@plt+0x15e6c>
   143c0:	ldr	r0, [sp, #16]
   143c4:	bl	1399c <g_free@plt>
   143c8:	mov	r0, r9
   143cc:	bl	13b94 <g_object_unref@plt>
   143d0:	mov	r0, r5
   143d4:	bl	13b94 <g_object_unref@plt>
   143d8:	ldr	r0, [sp, #20]
   143dc:	bl	1399c <g_free@plt>
   143e0:	mov	r0, r6
   143e4:	bl	1399c <g_free@plt>
   143e8:	mov	r0, sl
   143ec:	bl	1399c <g_free@plt>
   143f0:	ldr	r2, [sp, #36]	; 0x24
   143f4:	ldr	r3, [r7]
   143f8:	cmp	r2, r3
   143fc:	bne	144e8 <g_unichar_xdigit_value@plt+0x684>
   14400:	add	sp, sp, #44	; 0x2c
   14404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14408:	ldr	r3, [sp, #16]
   1440c:	cmp	r3, #6
   14410:	beq	14490 <g_unichar_xdigit_value@plt+0x62c>
   14414:	movw	r2, #5092	; 0x13e4
   14418:	movt	r2, #5
   1441c:	mov	r1, fp
   14420:	ldr	r3, [sp, #16]
   14424:	ldr	r0, [r2]
   14428:	movw	r2, #33076	; 0x8134
   1442c:	movt	r2, #3
   14430:	bl	136d8 <__fprintf_chk@plt>
   14434:	b	143d0 <g_unichar_xdigit_value@plt+0x56c>
   14438:	movw	r0, #33052	; 0x811c
   1443c:	movt	r0, #3
   14440:	bl	136f0 <g_strdup@plt>
   14444:	mov	r3, r0
   14448:	mov	r0, sl
   1444c:	mov	sl, r3
   14450:	bl	1399c <g_free@plt>
   14454:	b	14288 <g_unichar_xdigit_value@plt+0x424>
   14458:	movw	r2, #33088	; 0x8140
   1445c:	ldr	r1, [pc, #136]	; 144ec <g_unichar_xdigit_value@plt+0x688>
   14460:	movt	r2, #3
   14464:	bl	13450 <g_return_if_fail_warning@plt>
   14468:	b	143f0 <g_unichar_xdigit_value@plt+0x58c>
   1446c:	movw	r3, #5096	; 0x13e8
   14470:	movt	r3, #5
   14474:	mov	r1, fp
   14478:	movw	r2, #33060	; 0x8124
   1447c:	ldr	r0, [r3]
   14480:	movt	r2, #3
   14484:	ldr	r3, [sp, #16]
   14488:	bl	136d8 <__fprintf_chk@plt>
   1448c:	b	143c0 <g_unichar_xdigit_value@plt+0x55c>
   14490:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   14494:	cmp	r0, #0
   14498:	beq	144e0 <g_unichar_xdigit_value@plt+0x67c>
   1449c:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   144a0:	mov	r3, r0
   144a4:	movw	r1, #5092	; 0x13e4
   144a8:	movt	r1, #5
   144ac:	movw	r2, #33064	; 0x8128
   144b0:	movt	r2, #3
   144b4:	ldr	r0, [r1]
   144b8:	mov	r1, #1
   144bc:	bl	136d8 <__fprintf_chk@plt>
   144c0:	b	143d0 <g_unichar_xdigit_value@plt+0x56c>
   144c4:	movw	r0, #37196	; 0x914c
   144c8:	movt	r0, #3
   144cc:	bl	136f0 <g_strdup@plt>
   144d0:	mov	r6, r0
   144d4:	mov	r0, r5
   144d8:	bl	1399c <g_free@plt>
   144dc:	b	142a4 <g_unichar_xdigit_value@plt+0x440>
   144e0:	ldr	r3, [sp, #20]
   144e4:	b	144a4 <g_unichar_xdigit_value@plt+0x640>
   144e8:	bl	13978 <__stack_chk_fail@plt>
   144ec:	muleq	r3, r8, r0
   144f0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   144f4:	mov	r5, r1
   144f8:	mov	r7, r0
   144fc:	bl	13bc4 <g_date_time_new_now_utc@plt>
   14500:	movw	r4, #5104	; 0x13f0
   14504:	movt	r4, #5
   14508:	mov	r9, r0
   1450c:	bl	13528 <g_date_time_get_microsecond@plt>
   14510:	bl	13828 <g_random_set_seed@plt>
   14514:	movw	r1, #37196	; 0x914c
   14518:	mov	r0, #6
   1451c:	movt	r1, #3
   14520:	bl	13ae0 <setlocale@plt>
   14524:	mov	r0, #0
   14528:	mov	r1, #10
   1452c:	mov	r2, #9
   14530:	bl	2b080 <g_unichar_xdigit_value@plt+0x1721c>
   14534:	mov	r6, r0
   14538:	ldr	r0, [r4]
   1453c:	cmp	r0, #0
   14540:	beq	14548 <g_unichar_xdigit_value@plt+0x6e4>
   14544:	bl	13b94 <g_object_unref@plt>
   14548:	cmp	r5, #2
   1454c:	str	r6, [r4]
   14550:	beq	14678 <g_unichar_xdigit_value@plt+0x814>
   14554:	mov	r0, #1024	; 0x400
   14558:	movw	r6, #5096	; 0x13e8
   1455c:	bl	13c90 <g_malloc0@plt>
   14560:	movw	r7, #5080	; 0x13d8
   14564:	movt	r6, #5
   14568:	movt	r7, #5
   1456c:	mov	r8, r0
   14570:	ldr	r3, [r6]
   14574:	mov	r1, #1
   14578:	mov	r2, #2
   1457c:	movw	r0, #33108	; 0x8154
   14580:	movt	r0, #3
   14584:	bl	13b64 <fwrite@plt>
   14588:	mov	r1, #1024	; 0x400
   1458c:	ldr	r2, [r7]
   14590:	mov	r0, r8
   14594:	bl	13b1c <fgets@plt>
   14598:	bl	136f0 <g_strdup@plt>
   1459c:	subs	r5, r0, #0
   145a0:	beq	14618 <g_unichar_xdigit_value@plt+0x7b4>
   145a4:	bl	136f0 <g_strdup@plt>
   145a8:	mov	r4, r0
   145ac:	bl	13c3c <g_strchug@plt>
   145b0:	bl	13744 <g_strchomp@plt>
   145b4:	mov	r0, r5
   145b8:	bl	1399c <g_free@plt>
   145bc:	cmp	r4, #0
   145c0:	movw	r1, #33112	; 0x8158
   145c4:	mov	r0, r4
   145c8:	movt	r1, #3
   145cc:	beq	1468c <g_unichar_xdigit_value@plt+0x828>
   145d0:	bl	13e58 <g_strcmp0@plt>
   145d4:	movw	r1, #33120	; 0x8160
   145d8:	movt	r1, #3
   145dc:	subs	r5, r0, #0
   145e0:	mov	r0, r4
   145e4:	bne	14640 <g_unichar_xdigit_value@plt+0x7dc>
   145e8:	mov	r0, r4
   145ec:	bl	1399c <g_free@plt>
   145f0:	cmp	r5, #0
   145f4:	bne	14630 <g_unichar_xdigit_value@plt+0x7cc>
   145f8:	mov	r0, r8
   145fc:	bl	1399c <g_free@plt>
   14600:	cmp	r9, #0
   14604:	beq	14610 <g_unichar_xdigit_value@plt+0x7ac>
   14608:	mov	r0, r9
   1460c:	bl	13bb8 <g_date_time_unref@plt>
   14610:	mov	r0, #0
   14614:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14618:	mov	r5, #1
   1461c:	mov	r4, #0
   14620:	mov	r0, r4
   14624:	bl	1399c <g_free@plt>
   14628:	cmp	r5, #0
   1462c:	beq	145f8 <g_unichar_xdigit_value@plt+0x794>
   14630:	ldr	r1, [r6]
   14634:	mov	r0, #10
   14638:	bl	13b40 <fputc@plt>
   1463c:	b	145f8 <g_unichar_xdigit_value@plt+0x794>
   14640:	bl	13e58 <g_strcmp0@plt>
   14644:	movw	r1, #37196	; 0x914c
   14648:	movt	r1, #3
   1464c:	cmp	r0, #0
   14650:	mov	r0, r4
   14654:	beq	14698 <g_unichar_xdigit_value@plt+0x834>
   14658:	bl	13e58 <g_strcmp0@plt>
   1465c:	cmp	r0, #0
   14660:	mov	r0, r4
   14664:	beq	14694 <g_unichar_xdigit_value@plt+0x830>
   14668:	bl	1422c <g_unichar_xdigit_value@plt+0x3c8>
   1466c:	mov	r0, r4
   14670:	bl	1399c <g_free@plt>
   14674:	b	14570 <g_unichar_xdigit_value@plt+0x70c>
   14678:	ldr	r0, [r7, #4]
   1467c:	bl	1422c <g_unichar_xdigit_value@plt+0x3c8>
   14680:	cmp	r9, #0
   14684:	bne	14608 <g_unichar_xdigit_value@plt+0x7a4>
   14688:	b	14610 <g_unichar_xdigit_value@plt+0x7ac>
   1468c:	mov	r5, r4
   14690:	b	1461c <g_unichar_xdigit_value@plt+0x7b8>
   14694:	mov	r0, r4
   14698:	bl	1399c <g_free@plt>
   1469c:	b	145f8 <g_unichar_xdigit_value@plt+0x794>
   146a0:	push	{r3, r4, r5, lr}
   146a4:	mov	r4, r0
   146a8:	bl	13c60 <g_type_class_peek_parent@plt>
   146ac:	ldr	r3, [pc, #104]	; 1471c <g_unichar_xdigit_value@plt+0x8b8>
   146b0:	mov	r1, #4
   146b4:	ldr	r2, [pc, #100]	; 14720 <g_unichar_xdigit_value@plt+0x8bc>
   146b8:	add	r3, pc, r3
   146bc:	ldr	r5, [pc, #96]	; 14724 <g_unichar_xdigit_value@plt+0x8c0>
   146c0:	add	r2, pc, r2
   146c4:	str	r2, [r4, #4]
   146c8:	add	r5, pc, r5
   146cc:	str	r0, [r3]
   146d0:	mov	r0, r4
   146d4:	bl	13a5c <g_type_class_add_private@plt>
   146d8:	ldr	ip, [pc, #72]	; 14728 <g_unichar_xdigit_value@plt+0x8c4>
   146dc:	ldr	r0, [pc, #72]	; 1472c <g_unichar_xdigit_value@plt+0x8c8>
   146e0:	ldr	r1, [pc, #72]	; 14730 <g_unichar_xdigit_value@plt+0x8cc>
   146e4:	add	ip, pc, ip
   146e8:	ldr	r2, [pc, #68]	; 14734 <g_unichar_xdigit_value@plt+0x8d0>
   146ec:	add	r0, pc, r0
   146f0:	ldr	r3, [pc, #64]	; 14738 <g_unichar_xdigit_value@plt+0x8d4>
   146f4:	add	r1, pc, r1
   146f8:	add	r2, pc, r2
   146fc:	str	r5, [r4, #8]
   14700:	add	r3, pc, r3
   14704:	str	ip, [r4, #12]
   14708:	str	r0, [r4, #16]
   1470c:	str	r1, [r4, #20]
   14710:	str	r2, [r4, #24]
   14714:	str	r3, [r4, #28]
   14718:	pop	{r3, r4, r5, pc}
   1471c:	andeq	ip, r3, r4, lsr sp
   14720:	andeq	r1, r0, r8, asr #7
   14724:	andeq	r0, r0, r8, ror r7
   14728:	andeq	r0, r0, ip, asr #16
   1472c:	andeq	r0, r0, r4, lsl #22
   14730:	andeq	r0, r0, r8, lsl ip
   14734:	andeq	r0, r0, r8, lsr r9
   14738:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1473c:	push	{r4, r5, r6, lr}
   14740:	mov	r4, r0
   14744:	bl	13c60 <g_type_class_peek_parent@plt>
   14748:	ldr	r3, [pc, #116]	; 147c4 <g_unichar_xdigit_value@plt+0x960>
   1474c:	mov	r1, #4
   14750:	ldr	r6, [pc, #112]	; 147c8 <g_unichar_xdigit_value@plt+0x964>
   14754:	add	r3, pc, r3
   14758:	ldr	r5, [pc, #108]	; 147cc <g_unichar_xdigit_value@plt+0x968>
   1475c:	add	r6, pc, r6
   14760:	add	r5, pc, r5
   14764:	str	r0, [r3, #4]
   14768:	mov	r0, r4
   1476c:	bl	13a5c <g_type_class_add_private@plt>
   14770:	ldr	lr, [pc, #88]	; 147d0 <g_unichar_xdigit_value@plt+0x96c>
   14774:	ldr	ip, [pc, #88]	; 147d4 <g_unichar_xdigit_value@plt+0x970>
   14778:	mov	r0, r4
   1477c:	ldr	r2, [pc, #84]	; 147d8 <g_unichar_xdigit_value@plt+0x974>
   14780:	add	lr, pc, lr
   14784:	ldr	r3, [pc, #80]	; 147dc <g_unichar_xdigit_value@plt+0x978>
   14788:	add	ip, pc, ip
   1478c:	add	r2, pc, r2
   14790:	mov	r1, #80	; 0x50
   14794:	add	r3, pc, r3
   14798:	str	r6, [r4, #68]	; 0x44
   1479c:	str	r3, [r4, #88]	; 0x58
   147a0:	str	r5, [r4, #72]	; 0x48
   147a4:	str	lr, [r4, #76]	; 0x4c
   147a8:	str	ip, [r4, #80]	; 0x50
   147ac:	str	r2, [r4, #84]	; 0x54
   147b0:	bl	13db0 <g_type_check_class_cast@plt>
   147b4:	ldr	r3, [pc, #36]	; 147e0 <g_unichar_xdigit_value@plt+0x97c>
   147b8:	add	r3, pc, r3
   147bc:	str	r3, [r0, #24]
   147c0:	pop	{r4, r5, r6, pc}
   147c4:	muleq	r3, r8, ip
   147c8:	andeq	r0, r0, r0, lsr #4
   147cc:	andeq	r0, r0, r0, ror #3
   147d0:	andeq	r0, r0, r4, lsl #3
   147d4:	andeq	r0, r0, r8, lsr #2
   147d8:	andeq	r0, r0, r8, ror #1
   147dc:	andeq	r0, r0, r8, asr #32
   147e0:	andeq	r0, r0, r8, lsr #27
   147e4:	subs	r0, r1, #0
   147e8:	push	{r3, lr}
   147ec:	beq	14808 <g_unichar_xdigit_value@plt+0x9a4>
   147f0:	cmp	r2, #0
   147f4:	beq	14824 <g_unichar_xdigit_value@plt+0x9c0>
   147f8:	cmp	r3, #0
   147fc:	beq	14844 <g_unichar_xdigit_value@plt+0x9e0>
   14800:	mov	r0, #0
   14804:	pop	{r3, pc}
   14808:	ldr	r1, [pc, #84]	; 14864 <g_unichar_xdigit_value@plt+0xa00>
   1480c:	ldr	r2, [pc, #84]	; 14868 <g_unichar_xdigit_value@plt+0xa04>
   14810:	add	r1, pc, r1
   14814:	add	r2, pc, r2
   14818:	bl	13450 <g_return_if_fail_warning@plt>
   1481c:	mov	r0, #0
   14820:	pop	{r3, pc}
   14824:	mov	r0, r2
   14828:	ldr	r1, [pc, #60]	; 1486c <g_unichar_xdigit_value@plt+0xa08>
   1482c:	ldr	r2, [pc, #60]	; 14870 <g_unichar_xdigit_value@plt+0xa0c>
   14830:	add	r1, pc, r1
   14834:	add	r2, pc, r2
   14838:	bl	13450 <g_return_if_fail_warning@plt>
   1483c:	mov	r0, #0
   14840:	pop	{r3, pc}
   14844:	ldr	r1, [pc, #40]	; 14874 <g_unichar_xdigit_value@plt+0xa10>
   14848:	mov	r0, r3
   1484c:	ldr	r2, [pc, #36]	; 14878 <g_unichar_xdigit_value@plt+0xa14>
   14850:	add	r1, pc, r1
   14854:	add	r2, pc, r2
   14858:	bl	13450 <g_return_if_fail_warning@plt>
   1485c:	mov	r0, #0
   14860:	pop	{r3, pc}
   14864:	andeq	r3, r2, r0, asr r9
   14868:	andeq	r3, r2, ip, asr #24
   1486c:	andeq	r3, r2, r0, lsr r9
   14870:	andeq	r3, r2, r8, lsr ip
   14874:	andeq	r3, r2, r0, lsl r9
   14878:	andeq	r3, r2, r8, lsr #24
   1487c:	subs	r0, r1, #0
   14880:	push	{r3, lr}
   14884:	beq	14890 <g_unichar_xdigit_value@plt+0xa2c>
   14888:	mov	r0, #0
   1488c:	pop	{r3, pc}
   14890:	ldr	r1, [pc, #24]	; 148b0 <g_unichar_xdigit_value@plt+0xa4c>
   14894:	ldr	r2, [pc, #24]	; 148b4 <g_unichar_xdigit_value@plt+0xa50>
   14898:	add	r1, pc, r1
   1489c:	add	r2, pc, r2
   148a0:	add	r1, r1, #24
   148a4:	bl	13450 <g_return_if_fail_warning@plt>
   148a8:	mov	r0, #0
   148ac:	pop	{r3, pc}
   148b0:	andeq	r3, r2, r8, asr #17
   148b4:	andeq	r6, r2, r4, lsr sp
   148b8:	subs	r0, r1, #0
   148bc:	beq	148e4 <g_unichar_xdigit_value@plt+0xa80>
   148c0:	cmp	r2, #0
   148c4:	bxne	lr
   148c8:	ldr	r1, [pc, #44]	; 148fc <g_unichar_xdigit_value@plt+0xa98>
   148cc:	mov	r0, r2
   148d0:	ldr	r2, [pc, #40]	; 14900 <g_unichar_xdigit_value@plt+0xa9c>
   148d4:	add	r1, pc, r1
   148d8:	add	r2, pc, r2
   148dc:	add	r1, r1, #60	; 0x3c
   148e0:	b	13450 <g_return_if_fail_warning@plt>
   148e4:	ldr	r1, [pc, #24]	; 14904 <g_unichar_xdigit_value@plt+0xaa0>
   148e8:	ldr	r2, [pc, #24]	; 14908 <g_unichar_xdigit_value@plt+0xaa4>
   148ec:	add	r1, pc, r1
   148f0:	add	r2, pc, r2
   148f4:	add	r1, r1, #60	; 0x3c
   148f8:	b	13450 <g_return_if_fail_warning@plt>
   148fc:	andeq	r3, r2, ip, lsl #17
   14900:	andeq	r3, r2, r8, lsl #23
   14904:	andeq	r3, r2, r4, ror r8
   14908:	andeq	r6, r2, r0, ror #25
   1490c:	subs	r0, r1, #0
   14910:	push	{r3, lr}
   14914:	beq	14920 <g_unichar_xdigit_value@plt+0xabc>
   14918:	mov	r0, #0
   1491c:	pop	{r3, pc}
   14920:	ldr	r1, [pc, #24]	; 14940 <g_unichar_xdigit_value@plt+0xadc>
   14924:	ldr	r2, [pc, #24]	; 14944 <g_unichar_xdigit_value@plt+0xae0>
   14928:	add	r1, pc, r1
   1492c:	add	r2, pc, r2
   14930:	add	r1, r1, #88	; 0x58
   14934:	bl	13450 <g_return_if_fail_warning@plt>
   14938:	mov	r0, #0
   1493c:	pop	{r3, pc}
   14940:	andeq	r3, r2, r8, lsr r8
   14944:	andeq	r6, r2, r4, lsr #25
   14948:	subs	r0, r1, #0
   1494c:	push	{r3, lr}
   14950:	beq	1495c <g_unichar_xdigit_value@plt+0xaf8>
   14954:	mov	r0, #0
   14958:	pop	{r3, pc}
   1495c:	ldr	r1, [pc, #24]	; 1497c <g_unichar_xdigit_value@plt+0xb18>
   14960:	ldr	r2, [pc, #24]	; 14980 <g_unichar_xdigit_value@plt+0xb1c>
   14964:	add	r1, pc, r1
   14968:	add	r2, pc, r2
   1496c:	add	r1, r1, #120	; 0x78
   14970:	bl	13450 <g_return_if_fail_warning@plt>
   14974:	mov	r0, #0
   14978:	pop	{r3, pc}
   1497c:	strdeq	r3, [r2], -ip
   14980:	andeq	r6, r2, r8, ror #24
   14984:	subs	r0, r1, #0
   14988:	push	{r3, lr}
   1498c:	beq	14998 <g_unichar_xdigit_value@plt+0xb34>
   14990:	mov	r0, #0
   14994:	pop	{r3, pc}
   14998:	ldr	r1, [pc, #24]	; 149b8 <g_unichar_xdigit_value@plt+0xb54>
   1499c:	ldr	r2, [pc, #24]	; 149bc <g_unichar_xdigit_value@plt+0xb58>
   149a0:	add	r1, pc, r1
   149a4:	add	r2, pc, r2
   149a8:	add	r1, r1, #148	; 0x94
   149ac:	bl	13450 <g_return_if_fail_warning@plt>
   149b0:	mov	r0, #0
   149b4:	pop	{r3, pc}
   149b8:	andeq	r3, r2, r0, asr #15
   149bc:	andeq	r6, r2, ip, lsr #24
   149c0:	push	{r4, r5, r6, r7, r8, lr}
   149c4:	subs	r6, r0, #0
   149c8:	ldr	r7, [pc, #144]	; 14a60 <g_unichar_xdigit_value@plt+0xbfc>
   149cc:	mov	r8, r1
   149d0:	mov	r4, r2
   149d4:	add	r7, pc, r7
   149d8:	beq	14a30 <g_unichar_xdigit_value@plt+0xbcc>
   149dc:	ldr	r5, [r1]
   149e0:	add	r0, r6, r5
   149e4:	bl	135e8 <g_utf8_get_char@plt>
   149e8:	cmp	r0, #0
   149ec:	beq	14a20 <g_unichar_xdigit_value@plt+0xbbc>
   149f0:	ldr	r2, [pc, #108]	; 14a64 <g_unichar_xdigit_value@plt+0xc00>
   149f4:	cmp	r4, #0
   149f8:	ldrb	r3, [r6, r5]
   149fc:	ldr	r2, [r7, r2]
   14a00:	ldr	r2, [r2]
   14a04:	ldrb	r3, [r2, r3]
   14a08:	add	r5, r3, r5
   14a0c:	str	r5, [r8]
   14a10:	beq	14a50 <g_unichar_xdigit_value@plt+0xbec>
   14a14:	str	r0, [r4]
   14a18:	mov	r0, #1
   14a1c:	pop	{r4, r5, r6, r7, r8, pc}
   14a20:	cmp	r4, #0
   14a24:	beq	14a58 <g_unichar_xdigit_value@plt+0xbf4>
   14a28:	str	r0, [r4]
   14a2c:	pop	{r4, r5, r6, r7, r8, pc}
   14a30:	ldr	r1, [pc, #48]	; 14a68 <g_unichar_xdigit_value@plt+0xc04>
   14a34:	ldr	r2, [pc, #48]	; 14a6c <g_unichar_xdigit_value@plt+0xc08>
   14a38:	add	r1, pc, r1
   14a3c:	add	r2, pc, r2
   14a40:	add	r1, r1, #184	; 0xb8
   14a44:	bl	13450 <g_return_if_fail_warning@plt>
   14a48:	mov	r0, r6
   14a4c:	pop	{r4, r5, r6, r7, r8, pc}
   14a50:	mov	r0, #1
   14a54:	pop	{r4, r5, r6, r7, r8, pc}
   14a58:	mov	r0, r4
   14a5c:	pop	{r4, r5, r6, r7, r8, pc}
   14a60:	andeq	ip, r3, r4, lsr #12
   14a64:	muleq	r0, ip, r3
   14a68:	andeq	r3, r2, r8, lsr #14
   14a6c:	andeq	r3, r2, r8, lsr #13
   14a70:	ldr	r3, [pc, #208]	; 14b48 <g_unichar_xdigit_value@plt+0xce4>
   14a74:	ldr	r2, [pc, #208]	; 14b4c <g_unichar_xdigit_value@plt+0xce8>
   14a78:	add	r3, pc, r3
   14a7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a80:	subs	r5, r0, #0
   14a84:	ldr	sl, [r3, r2]
   14a88:	sub	sp, sp, #16
   14a8c:	mov	r4, #0
   14a90:	str	r4, [sp, #4]
   14a94:	ldr	r3, [sl]
   14a98:	str	r3, [sp, #12]
   14a9c:	beq	14b24 <g_unichar_xdigit_value@plt+0xcc0>
   14aa0:	ldr	r9, [pc, #168]	; 14b50 <g_unichar_xdigit_value@plt+0xcec>
   14aa4:	add	r8, sp, #4
   14aa8:	add	r7, sp, #8
   14aac:	mov	r6, r4
   14ab0:	add	r9, pc, r9
   14ab4:	mov	r0, r5
   14ab8:	mov	r1, r8
   14abc:	mov	r2, r7
   14ac0:	str	r6, [sp, #8]
   14ac4:	bl	149c0 <g_unichar_xdigit_value@plt+0xb5c>
   14ac8:	ldr	ip, [sp, #8]
   14acc:	cmp	r0, #0
   14ad0:	beq	14b1c <g_unichar_xdigit_value@plt+0xcb8>
   14ad4:	add	r2, r9, #204	; 0xcc
   14ad8:	mov	r3, #0
   14adc:	ldr	r1, [r2, #4]!
   14ae0:	cmp	ip, r1
   14ae4:	beq	14b10 <g_unichar_xdigit_value@plt+0xcac>
   14ae8:	add	r3, r3, #1
   14aec:	cmp	r3, #10
   14af0:	bne	14adc <g_unichar_xdigit_value@plt+0xc78>
   14af4:	mvn	r0, #0
   14af8:	ldr	r2, [sp, #12]
   14afc:	ldr	r3, [sl]
   14b00:	cmp	r2, r3
   14b04:	bne	14b44 <g_unichar_xdigit_value@plt+0xce0>
   14b08:	add	sp, sp, #16
   14b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b10:	add	r4, r4, r4, lsl #2
   14b14:	add	r4, r3, r4, lsl #1
   14b18:	b	14ab4 <g_unichar_xdigit_value@plt+0xc50>
   14b1c:	mov	r0, r4
   14b20:	b	14af8 <g_unichar_xdigit_value@plt+0xc94>
   14b24:	ldr	r1, [pc, #40]	; 14b54 <g_unichar_xdigit_value@plt+0xcf0>
   14b28:	ldr	r2, [pc, #40]	; 14b58 <g_unichar_xdigit_value@plt+0xcf4>
   14b2c:	add	r1, pc, r1
   14b30:	add	r2, pc, r2
   14b34:	add	r1, r1, #248	; 0xf8
   14b38:	bl	13450 <g_return_if_fail_warning@plt>
   14b3c:	mov	r0, r5
   14b40:	b	14af8 <g_unichar_xdigit_value@plt+0xc94>
   14b44:	bl	13978 <__stack_chk_fail@plt>
   14b48:	andeq	ip, r3, r0, lsl #11
   14b4c:	muleq	r0, r0, r3
   14b50:			; <UNDEFINED> instruction: 0x000236b0
   14b54:	andeq	r3, r2, r4, lsr r6
   14b58:	andeq	r3, r2, ip, asr r9
   14b5c:	ldr	r3, [pc, #256]	; 14c64 <g_unichar_xdigit_value@plt+0xe00>
   14b60:	ldr	r2, [pc, #256]	; 14c68 <g_unichar_xdigit_value@plt+0xe04>
   14b64:	add	r3, pc, r3
   14b68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b6c:	subs	r6, r0, #0
   14b70:	ldr	sl, [r3, r2]
   14b74:	sub	sp, sp, #20
   14b78:	mov	r4, #0
   14b7c:	str	r4, [sp]
   14b80:	ldr	r3, [sl]
   14b84:	str	r4, [sp, #4]
   14b88:	str	r3, [sp, #12]
   14b8c:	beq	14c40 <g_unichar_xdigit_value@plt+0xddc>
   14b90:	add	r2, sp, #4
   14b94:	mov	r1, sp
   14b98:	bl	149c0 <g_unichar_xdigit_value@plt+0xb5c>
   14b9c:	ldr	r2, [sp, #4]
   14ba0:	movw	r3, #8315	; 0x207b
   14ba4:	cmp	r2, r3
   14ba8:	strne	r4, [sp]
   14bac:	movne	fp, #1
   14bb0:	beq	14c38 <g_unichar_xdigit_value@plt+0xdd4>
   14bb4:	ldr	r9, [pc, #176]	; 14c6c <g_unichar_xdigit_value@plt+0xe08>
   14bb8:	mov	r4, #0
   14bbc:	add	r8, sp, #8
   14bc0:	mov	r7, r4
   14bc4:	add	r9, pc, r9
   14bc8:	mov	r0, r6
   14bcc:	mov	r1, sp
   14bd0:	mov	r2, r8
   14bd4:	str	r7, [sp, #8]
   14bd8:	bl	149c0 <g_unichar_xdigit_value@plt+0xb5c>
   14bdc:	ldr	ip, [sp, #8]
   14be0:	cmp	r0, #0
   14be4:	beq	14c30 <g_unichar_xdigit_value@plt+0xdcc>
   14be8:	add	r2, r9, #256	; 0x100
   14bec:	mov	r3, #0
   14bf0:	ldr	r1, [r2, #4]!
   14bf4:	cmp	ip, r1
   14bf8:	beq	14c24 <g_unichar_xdigit_value@plt+0xdc0>
   14bfc:	add	r3, r3, #1
   14c00:	cmp	r3, #10
   14c04:	bne	14bf0 <g_unichar_xdigit_value@plt+0xd8c>
   14c08:	mov	r0, #0
   14c0c:	ldr	r2, [sp, #12]
   14c10:	ldr	r3, [sl]
   14c14:	cmp	r2, r3
   14c18:	bne	14c60 <g_unichar_xdigit_value@plt+0xdfc>
   14c1c:	add	sp, sp, #20
   14c20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c24:	add	r4, r4, r4, lsl #2
   14c28:	add	r4, r3, r4, lsl #1
   14c2c:	b	14bc8 <g_unichar_xdigit_value@plt+0xd64>
   14c30:	mul	r0, r4, fp
   14c34:	b	14c0c <g_unichar_xdigit_value@plt+0xda8>
   14c38:	mvn	fp, #0
   14c3c:	b	14bb4 <g_unichar_xdigit_value@plt+0xd50>
   14c40:	ldr	r1, [pc, #40]	; 14c70 <g_unichar_xdigit_value@plt+0xe0c>
   14c44:	ldr	r2, [pc, #40]	; 14c74 <g_unichar_xdigit_value@plt+0xe10>
   14c48:	add	r1, pc, r1
   14c4c:	add	r2, pc, r2
   14c50:	add	r1, r1, #300	; 0x12c
   14c54:	bl	13450 <g_return_if_fail_warning@plt>
   14c58:	mov	r0, r6
   14c5c:	b	14c0c <g_unichar_xdigit_value@plt+0xda8>
   14c60:	bl	13978 <__stack_chk_fail@plt>
   14c64:	muleq	r3, r4, r4
   14c68:	muleq	r0, r0, r3
   14c6c:	muleq	r2, ip, r5
   14c70:	andeq	r3, r2, r8, lsl r5
   14c74:	andeq	r3, r2, r0, asr #16
   14c78:	cmp	r0, #6
   14c7c:	addls	pc, pc, r0, lsl #2
   14c80:	b	14cf4 <g_unichar_xdigit_value@plt+0xe90>
   14c84:	b	14cac <g_unichar_xdigit_value@plt+0xe48>
   14c88:	b	14cb8 <g_unichar_xdigit_value@plt+0xe54>
   14c8c:	b	14cc4 <g_unichar_xdigit_value@plt+0xe60>
   14c90:	b	14cd0 <g_unichar_xdigit_value@plt+0xe6c>
   14c94:	b	14cdc <g_unichar_xdigit_value@plt+0xe78>
   14c98:	b	14ce8 <g_unichar_xdigit_value@plt+0xe84>
   14c9c:	b	14ca0 <g_unichar_xdigit_value@plt+0xe3c>
   14ca0:	ldr	r0, [pc, #88]	; 14d00 <g_unichar_xdigit_value@plt+0xe9c>
   14ca4:	add	r0, pc, r0
   14ca8:	b	136f0 <g_strdup@plt>
   14cac:	ldr	r0, [pc, #80]	; 14d04 <g_unichar_xdigit_value@plt+0xea0>
   14cb0:	add	r0, pc, r0
   14cb4:	b	136f0 <g_strdup@plt>
   14cb8:	ldr	r0, [pc, #72]	; 14d08 <g_unichar_xdigit_value@plt+0xea4>
   14cbc:	add	r0, pc, r0
   14cc0:	b	136f0 <g_strdup@plt>
   14cc4:	ldr	r0, [pc, #64]	; 14d0c <g_unichar_xdigit_value@plt+0xea8>
   14cc8:	add	r0, pc, r0
   14ccc:	b	136f0 <g_strdup@plt>
   14cd0:	ldr	r0, [pc, #56]	; 14d10 <g_unichar_xdigit_value@plt+0xeac>
   14cd4:	add	r0, pc, r0
   14cd8:	b	136f0 <g_strdup@plt>
   14cdc:	ldr	r0, [pc, #48]	; 14d14 <g_unichar_xdigit_value@plt+0xeb0>
   14ce0:	add	r0, pc, r0
   14ce4:	b	136f0 <g_strdup@plt>
   14ce8:	ldr	r0, [pc, #40]	; 14d18 <g_unichar_xdigit_value@plt+0xeb4>
   14cec:	add	r0, pc, r0
   14cf0:	b	136f0 <g_strdup@plt>
   14cf4:	ldr	r0, [pc, #32]	; 14d1c <g_unichar_xdigit_value@plt+0xeb8>
   14cf8:	add	r0, pc, r0
   14cfc:	b	136f0 <g_strdup@plt>
   14d00:	andeq	r3, r2, r8, lsl #17
   14d04:	andeq	r3, r2, ip, ror #15
   14d08:	strdeq	r3, [r2], -r0
   14d0c:	strdeq	r3, [r2], -r8
   14d10:	andeq	r3, r2, r0, lsl #16
   14d14:	andeq	r3, r2, r0, lsl r8
   14d18:	andeq	r3, r2, r0, lsr #16
   14d1c:	andeq	r3, r2, r4, asr #16
   14d20:	ldr	r0, [pc, #96]	; 14d88 <g_unichar_xdigit_value@plt+0xf24>
   14d24:	push	{r4, lr}
   14d28:	add	r0, pc, r0
   14d2c:	dmb	sy
   14d30:	ldr	r3, [r0, #8]
   14d34:	dmb	sy
   14d38:	cmp	r3, #0
   14d3c:	beq	14d50 <g_unichar_xdigit_value@plt+0xeec>
   14d40:	ldr	r3, [pc, #68]	; 14d8c <g_unichar_xdigit_value@plt+0xf28>
   14d44:	add	r3, pc, r3
   14d48:	ldr	r0, [r3, #8]
   14d4c:	pop	{r4, pc}
   14d50:	add	r4, r0, #8
   14d54:	mov	r0, r4
   14d58:	bl	138ac <g_once_init_enter@plt>
   14d5c:	cmp	r0, #0
   14d60:	beq	14d40 <g_unichar_xdigit_value@plt+0xedc>
   14d64:	ldr	r0, [pc, #36]	; 14d90 <g_unichar_xdigit_value@plt+0xf2c>
   14d68:	ldr	r1, [pc, #36]	; 14d94 <g_unichar_xdigit_value@plt+0xf30>
   14d6c:	add	r0, pc, r0
   14d70:	add	r1, pc, r1
   14d74:	bl	13c78 <g_enum_register_static@plt>
   14d78:	mov	r1, r0
   14d7c:	mov	r0, r4
   14d80:	bl	13bac <g_once_init_leave@plt>
   14d84:	b	14d40 <g_unichar_xdigit_value@plt+0xedc>
   14d88:	andeq	ip, r3, r4, asr #13
   14d8c:	andeq	ip, r3, r8, lsr #13
   14d90:	andeq	r3, r2, r8, ror #15
   14d94:	andeq	fp, r3, ip, lsl r5
   14d98:	push	{r3, r4, r5, lr}
   14d9c:	subs	r5, r1, #0
   14da0:	beq	14dd8 <g_unichar_xdigit_value@plt+0xf74>
   14da4:	mov	r1, #0
   14da8:	bl	133e4 <g_object_new@plt>
   14dac:	mov	r4, r0
   14db0:	mov	r0, r5
   14db4:	bl	136f0 <g_strdup@plt>
   14db8:	ldr	r3, [r4, #12]
   14dbc:	mov	r5, r0
   14dc0:	ldr	r0, [r3]
   14dc4:	bl	1399c <g_free@plt>
   14dc8:	ldr	r3, [r4, #12]
   14dcc:	mov	r0, r4
   14dd0:	str	r5, [r3]
   14dd4:	pop	{r3, r4, r5, pc}
   14dd8:	ldr	r1, [pc, #28]	; 14dfc <g_unichar_xdigit_value@plt+0xf98>
   14ddc:	mov	r0, r5
   14de0:	ldr	r2, [pc, #24]	; 14e00 <g_unichar_xdigit_value@plt+0xf9c>
   14de4:	add	r1, pc, r1
   14de8:	add	r2, pc, r2
   14dec:	add	r1, r1, #312	; 0x138
   14df0:	bl	13450 <g_return_if_fail_warning@plt>
   14df4:	mov	r0, r5
   14df8:	pop	{r3, r4, r5, pc}
   14dfc:	andeq	r3, r2, ip, ror r3
   14e00:	andeq	r3, r2, r8, ror r7
   14e04:	push	{r4, lr}
   14e08:	subs	r4, r0, #0
   14e0c:	beq	14e20 <g_unichar_xdigit_value@plt+0xfbc>
   14e10:	ldr	r3, [r4]
   14e14:	ldr	r3, [r3, #68]	; 0x44
   14e18:	blx	r3
   14e1c:	pop	{r4, pc}
   14e20:	ldr	r1, [pc, #24]	; 14e40 <g_unichar_xdigit_value@plt+0xfdc>
   14e24:	ldr	r2, [pc, #24]	; 14e44 <g_unichar_xdigit_value@plt+0xfe0>
   14e28:	add	r1, pc, r1
   14e2c:	add	r2, pc, r2
   14e30:	add	r1, r1, #332	; 0x14c
   14e34:	bl	13450 <g_return_if_fail_warning@plt>
   14e38:	mov	r0, r4
   14e3c:	pop	{r4, pc}
   14e40:	andeq	r3, r2, r8, lsr r3
   14e44:			; <UNDEFINED> instruction: 0x000232b8
   14e48:	push	{r3, r4, r5, lr}
   14e4c:	subs	r4, r1, #0
   14e50:	mov	r5, r0
   14e54:	beq	14ebc <g_unichar_xdigit_value@plt+0x1058>
   14e58:	ldr	r1, [pc, #128]	; 14ee0 <g_unichar_xdigit_value@plt+0x107c>
   14e5c:	mov	r0, r4
   14e60:	add	r1, pc, r1
   14e64:	bl	13e58 <g_strcmp0@plt>
   14e68:	cmp	r0, #0
   14e6c:	bne	14e78 <g_unichar_xdigit_value@plt+0x1014>
   14e70:	mov	r0, #1
   14e74:	pop	{r3, r4, r5, pc}
   14e78:	ldr	r1, [pc, #100]	; 14ee4 <g_unichar_xdigit_value@plt+0x1080>
   14e7c:	mov	r0, r4
   14e80:	add	r1, pc, r1
   14e84:	bl	13e58 <g_strcmp0@plt>
   14e88:	cmp	r0, #0
   14e8c:	beq	14e70 <g_unichar_xdigit_value@plt+0x100c>
   14e90:	ldr	r1, [pc, #80]	; 14ee8 <g_unichar_xdigit_value@plt+0x1084>
   14e94:	mov	r0, r4
   14e98:	add	r1, pc, r1
   14e9c:	bl	13e58 <g_strcmp0@plt>
   14ea0:	cmp	r0, #0
   14ea4:	beq	14e70 <g_unichar_xdigit_value@plt+0x100c>
   14ea8:	ldr	r3, [r5, #24]
   14eac:	mov	r1, r4
   14eb0:	ldr	r0, [r3]
   14eb4:	pop	{r3, r4, r5, lr}
   14eb8:	b	14e04 <g_unichar_xdigit_value@plt+0xfa0>
   14ebc:	ldr	r1, [pc, #40]	; 14eec <g_unichar_xdigit_value@plt+0x1088>
   14ec0:	mov	r0, r4
   14ec4:	ldr	r2, [pc, #36]	; 14ef0 <g_unichar_xdigit_value@plt+0x108c>
   14ec8:	add	r1, pc, r1
   14ecc:	add	r2, pc, r2
   14ed0:	add	r1, r1, #364	; 0x16c
   14ed4:	bl	13450 <g_return_if_fail_warning@plt>
   14ed8:	mov	r0, r4
   14edc:	pop	{r3, r4, r5, pc}
   14ee0:	strdeq	r7, [r2], -r8
   14ee4:			; <UNDEFINED> instruction: 0x00026ab0
   14ee8:	ldrdeq	r3, [r2], -ip
   14eec:	muleq	r2, r8, r2
   14ef0:	andeq	r6, r2, r4, lsl #14
   14ef4:	push	{r4, lr}
   14ef8:	subs	r4, r0, #0
   14efc:	beq	14f10 <g_unichar_xdigit_value@plt+0x10ac>
   14f00:	ldr	r3, [r4]
   14f04:	ldr	r3, [r3, #72]	; 0x48
   14f08:	blx	r3
   14f0c:	pop	{r4, pc}
   14f10:	ldr	r1, [pc, #24]	; 14f30 <g_unichar_xdigit_value@plt+0x10cc>
   14f14:	ldr	r2, [pc, #24]	; 14f34 <g_unichar_xdigit_value@plt+0x10d0>
   14f18:	add	r1, pc, r1
   14f1c:	add	r2, pc, r2
   14f20:	add	r1, r1, #408	; 0x198
   14f24:	bl	13450 <g_return_if_fail_warning@plt>
   14f28:	mov	r0, r4
   14f2c:	pop	{r4, pc}
   14f30:	andeq	r3, r2, r8, asr #4
   14f34:	andeq	r3, r2, r8, asr #3
   14f38:	push	{r3, r4, r5, lr}
   14f3c:	subs	r4, r1, #0
   14f40:	mov	r5, r0
   14f44:	beq	14fb4 <g_unichar_xdigit_value@plt+0x1150>
   14f48:	ldr	r1, [pc, #144]	; 14fe0 <g_unichar_xdigit_value@plt+0x117c>
   14f4c:	mov	r0, r4
   14f50:	add	r1, pc, r1
   14f54:	bl	13e58 <g_strcmp0@plt>
   14f58:	cmp	r0, #0
   14f5c:	beq	14fac <g_unichar_xdigit_value@plt+0x1148>
   14f60:	ldr	r1, [pc, #124]	; 14fe4 <g_unichar_xdigit_value@plt+0x1180>
   14f64:	mov	r0, r4
   14f68:	add	r1, pc, r1
   14f6c:	bl	13e58 <g_strcmp0@plt>
   14f70:	cmp	r0, #0
   14f74:	beq	14fa4 <g_unichar_xdigit_value@plt+0x1140>
   14f78:	ldr	r1, [pc, #104]	; 14fe8 <g_unichar_xdigit_value@plt+0x1184>
   14f7c:	mov	r0, r4
   14f80:	add	r1, pc, r1
   14f84:	bl	13e58 <g_strcmp0@plt>
   14f88:	cmp	r0, #0
   14f8c:	beq	14fd8 <g_unichar_xdigit_value@plt+0x1174>
   14f90:	ldr	r3, [r5, #24]
   14f94:	mov	r1, r4
   14f98:	ldr	r0, [r3]
   14f9c:	pop	{r3, r4, r5, lr}
   14fa0:	b	14ef4 <g_unichar_xdigit_value@plt+0x1090>
   14fa4:	pop	{r3, r4, r5, lr}
   14fa8:	b	25910 <g_unichar_xdigit_value@plt+0x11aac>
   14fac:	pop	{r3, r4, r5, lr}
   14fb0:	b	25900 <g_unichar_xdigit_value@plt+0x11a9c>
   14fb4:	ldr	r1, [pc, #48]	; 14fec <g_unichar_xdigit_value@plt+0x1188>
   14fb8:	mov	r0, r4
   14fbc:	ldr	r2, [pc, #44]	; 14ff0 <g_unichar_xdigit_value@plt+0x118c>
   14fc0:	add	r1, pc, r1
   14fc4:	add	r2, pc, r2
   14fc8:	add	r1, r1, #432	; 0x1b0
   14fcc:	bl	13450 <g_return_if_fail_warning@plt>
   14fd0:	mov	r0, r4
   14fd4:	pop	{r3, r4, r5, pc}
   14fd8:	pop	{r3, r4, r5, lr}
   14fdc:	b	25920 <g_unichar_xdigit_value@plt+0x11abc>
   14fe0:	andeq	r7, r2, r8, lsl #2
   14fe4:	andeq	r6, r2, r8, asr #19
   14fe8:	strdeq	r3, [r2], -r4
   14fec:	andeq	r3, r2, r0, lsr #3
   14ff0:	andeq	r6, r2, ip, lsl #12
   14ff4:	push	{r4, lr}
   14ff8:	subs	r4, r0, #0
   14ffc:	beq	15010 <g_unichar_xdigit_value@plt+0x11ac>
   15000:	ldr	r3, [r4]
   15004:	ldr	r3, [r3, #76]	; 0x4c
   15008:	blx	r3
   1500c:	pop	{r4, pc}
   15010:	ldr	r1, [pc, #24]	; 15030 <g_unichar_xdigit_value@plt+0x11cc>
   15014:	ldr	r2, [pc, #24]	; 15034 <g_unichar_xdigit_value@plt+0x11d0>
   15018:	add	r1, pc, r1
   1501c:	add	r2, pc, r2
   15020:	add	r1, r1, #468	; 0x1d4
   15024:	bl	13450 <g_return_if_fail_warning@plt>
   15028:	mov	r0, r4
   1502c:	pop	{r4, pc}
   15030:	andeq	r3, r2, r8, asr #2
   15034:	andeq	r3, r2, r8, asr #1
   15038:	push	{r4, r5, r6, lr}
   1503c:	subs	r4, r1, #0
   15040:	mov	r5, r0
   15044:	beq	15140 <g_unichar_xdigit_value@plt+0x12dc>
   15048:	ldr	r1, [pc, #320]	; 15190 <g_unichar_xdigit_value@plt+0x132c>
   1504c:	mov	r0, r4
   15050:	add	r1, pc, r1
   15054:	bl	13e58 <g_strcmp0@plt>
   15058:	cmp	r0, #0
   1505c:	bne	15068 <g_unichar_xdigit_value@plt+0x1204>
   15060:	mov	r0, #1
   15064:	pop	{r4, r5, r6, pc}
   15068:	ldr	r1, [pc, #292]	; 15194 <g_unichar_xdigit_value@plt+0x1330>
   1506c:	mov	r0, r4
   15070:	add	r1, pc, r1
   15074:	bl	13e58 <g_strcmp0@plt>
   15078:	cmp	r0, #0
   1507c:	beq	15060 <g_unichar_xdigit_value@plt+0x11fc>
   15080:	ldr	r1, [pc, #272]	; 15198 <g_unichar_xdigit_value@plt+0x1334>
   15084:	mov	r0, r4
   15088:	add	r1, pc, r1
   1508c:	bl	13e58 <g_strcmp0@plt>
   15090:	cmp	r0, #0
   15094:	beq	15060 <g_unichar_xdigit_value@plt+0x11fc>
   15098:	ldr	r1, [pc, #252]	; 1519c <g_unichar_xdigit_value@plt+0x1338>
   1509c:	mov	r0, r4
   150a0:	add	r1, pc, r1
   150a4:	bl	13e58 <g_strcmp0@plt>
   150a8:	cmp	r0, #0
   150ac:	beq	15060 <g_unichar_xdigit_value@plt+0x11fc>
   150b0:	ldr	r1, [pc, #232]	; 151a0 <g_unichar_xdigit_value@plt+0x133c>
   150b4:	mov	r0, r4
   150b8:	add	r1, pc, r1
   150bc:	bl	13e58 <g_strcmp0@plt>
   150c0:	cmp	r0, #0
   150c4:	beq	15060 <g_unichar_xdigit_value@plt+0x11fc>
   150c8:	ldr	r1, [pc, #212]	; 151a4 <g_unichar_xdigit_value@plt+0x1340>
   150cc:	mov	r0, r4
   150d0:	add	r1, pc, r1
   150d4:	bl	13e58 <g_strcmp0@plt>
   150d8:	cmp	r0, #0
   150dc:	beq	15060 <g_unichar_xdigit_value@plt+0x11fc>
   150e0:	ldr	r1, [pc, #192]	; 151a8 <g_unichar_xdigit_value@plt+0x1344>
   150e4:	mov	r0, r4
   150e8:	add	r1, pc, r1
   150ec:	bl	13e58 <g_strcmp0@plt>
   150f0:	cmp	r0, #0
   150f4:	beq	15060 <g_unichar_xdigit_value@plt+0x11fc>
   150f8:	ldr	r1, [pc, #172]	; 151ac <g_unichar_xdigit_value@plt+0x1348>
   150fc:	mov	r0, r4
   15100:	add	r1, pc, r1
   15104:	bl	13e58 <g_strcmp0@plt>
   15108:	cmp	r0, #0
   1510c:	beq	15060 <g_unichar_xdigit_value@plt+0x11fc>
   15110:	bl	2cc8c <g_unichar_xdigit_value@plt+0x18e28>
   15114:	mov	r1, r4
   15118:	mov	r6, r0
   1511c:	bl	2c65c <g_unichar_xdigit_value@plt+0x187f8>
   15120:	cmp	r0, #0
   15124:	beq	15164 <g_unichar_xdigit_value@plt+0x1300>
   15128:	cmp	r6, #0
   1512c:	beq	15060 <g_unichar_xdigit_value@plt+0x11fc>
   15130:	mov	r0, r6
   15134:	bl	13b94 <g_object_unref@plt>
   15138:	mov	r0, #1
   1513c:	pop	{r4, r5, r6, pc}
   15140:	ldr	r1, [pc, #104]	; 151b0 <g_unichar_xdigit_value@plt+0x134c>
   15144:	mov	r0, r4
   15148:	ldr	r2, [pc, #100]	; 151b4 <g_unichar_xdigit_value@plt+0x1350>
   1514c:	add	r1, pc, r1
   15150:	add	r2, pc, r2
   15154:	add	r1, r1, #496	; 0x1f0
   15158:	bl	13450 <g_return_if_fail_warning@plt>
   1515c:	mov	r0, r4
   15160:	pop	{r4, r5, r6, pc}
   15164:	ldr	r3, [r5, #24]
   15168:	mov	r1, r4
   1516c:	ldr	r0, [r3]
   15170:	bl	14ff4 <g_unichar_xdigit_value@plt+0x1190>
   15174:	cmp	r6, #0
   15178:	mov	r4, r0
   1517c:	beq	1515c <g_unichar_xdigit_value@plt+0x12f8>
   15180:	mov	r0, r6
   15184:	bl	13b94 <g_object_unref@plt>
   15188:	mov	r0, r4
   1518c:	pop	{r4, r5, r6, pc}
   15190:	andeq	r3, r2, r0, asr r5
   15194:	andeq	r3, r2, r8, lsl #10
   15198:	strdeq	r3, [r2], -ip
   1519c:	ldrdeq	r3, [r2], -ip
   151a0:	ldrdeq	r3, [r2], -r0
   151a4:			; <UNDEFINED> instruction: 0x000234bc
   151a8:	andeq	r3, r2, ip, lsr #9
   151ac:	muleq	r2, r8, r4
   151b0:	andeq	r3, r2, r4, lsl r0
   151b4:	andeq	r6, r2, r0, lsl #9
   151b8:	push	{r3, lr}
   151bc:	subs	r3, r0, #0
   151c0:	beq	151d4 <g_unichar_xdigit_value@plt+0x1370>
   151c4:	ldr	r3, [r3]
   151c8:	ldr	r3, [r3, #80]	; 0x50
   151cc:	blx	r3
   151d0:	pop	{r3, pc}
   151d4:	ldr	r1, [pc, #20]	; 151f0 <g_unichar_xdigit_value@plt+0x138c>
   151d8:	ldr	r2, [pc, #20]	; 151f4 <g_unichar_xdigit_value@plt+0x1390>
   151dc:	add	r1, pc, r1
   151e0:	add	r2, pc, r2
   151e4:	add	r1, r1, #536	; 0x218
   151e8:	pop	{r3, lr}
   151ec:	b	13450 <g_return_if_fail_warning@plt>
   151f0:	andeq	r2, r2, r4, lsl #31
   151f4:	andeq	r2, r2, r4, lsl #30
   151f8:	push	{r4, r5, r6, lr}
   151fc:	subs	r4, r1, #0
   15200:	mov	r6, r0
   15204:	mov	r5, r2
   15208:	beq	15274 <g_unichar_xdigit_value@plt+0x1410>
   1520c:	cmp	r2, #0
   15210:	beq	15294 <g_unichar_xdigit_value@plt+0x1430>
   15214:	ldr	r1, [pc, #152]	; 152b4 <g_unichar_xdigit_value@plt+0x1450>
   15218:	mov	r0, r4
   1521c:	add	r1, pc, r1
   15220:	bl	13e58 <g_strcmp0@plt>
   15224:	cmp	r0, #0
   15228:	popeq	{r4, r5, r6, pc}
   1522c:	ldr	r1, [pc, #132]	; 152b8 <g_unichar_xdigit_value@plt+0x1454>
   15230:	mov	r0, r4
   15234:	add	r1, pc, r1
   15238:	bl	13e58 <g_strcmp0@plt>
   1523c:	cmp	r0, #0
   15240:	popeq	{r4, r5, r6, pc}
   15244:	ldr	r1, [pc, #112]	; 152bc <g_unichar_xdigit_value@plt+0x1458>
   15248:	mov	r0, r4
   1524c:	add	r1, pc, r1
   15250:	bl	13e58 <g_strcmp0@plt>
   15254:	cmp	r0, #0
   15258:	popeq	{r4, r5, r6, pc}
   1525c:	ldr	r3, [r6, #24]
   15260:	mov	r1, r4
   15264:	mov	r2, r5
   15268:	pop	{r4, r5, r6, lr}
   1526c:	ldr	r0, [r3]
   15270:	b	151b8 <g_unichar_xdigit_value@plt+0x1354>
   15274:	ldr	r1, [pc, #68]	; 152c0 <g_unichar_xdigit_value@plt+0x145c>
   15278:	mov	r0, r4
   1527c:	ldr	r2, [pc, #64]	; 152c4 <g_unichar_xdigit_value@plt+0x1460>
   15280:	add	r1, pc, r1
   15284:	add	r2, pc, r2
   15288:	add	r1, r1, #560	; 0x230
   1528c:	pop	{r4, r5, r6, lr}
   15290:	b	13450 <g_return_if_fail_warning@plt>
   15294:	ldr	r1, [pc, #44]	; 152c8 <g_unichar_xdigit_value@plt+0x1464>
   15298:	mov	r0, r2
   1529c:	ldr	r2, [pc, #40]	; 152cc <g_unichar_xdigit_value@plt+0x1468>
   152a0:	add	r1, pc, r1
   152a4:	add	r2, pc, r2
   152a8:	add	r1, r1, #560	; 0x230
   152ac:	pop	{r4, r5, r6, lr}
   152b0:	b	13450 <g_return_if_fail_warning@plt>
   152b4:	andeq	r6, r2, ip, lsr lr
   152b8:	strdeq	r6, [r2], -ip
   152bc:	andeq	r3, r2, r8, lsr #6
   152c0:	andeq	r2, r2, r0, ror #29
   152c4:	andeq	r6, r2, ip, asr #6
   152c8:	andeq	r2, r2, r0, asr #29
   152cc:			; <UNDEFINED> instruction: 0x000231bc
   152d0:	push	{r4, lr}
   152d4:	subs	r4, r0, #0
   152d8:	beq	152ec <g_unichar_xdigit_value@plt+0x1488>
   152dc:	ldr	r3, [r4]
   152e0:	ldr	r3, [r3, #84]	; 0x54
   152e4:	blx	r3
   152e8:	pop	{r4, pc}
   152ec:	ldr	r1, [pc, #24]	; 1530c <g_unichar_xdigit_value@plt+0x14a8>
   152f0:	ldr	r2, [pc, #24]	; 15310 <g_unichar_xdigit_value@plt+0x14ac>
   152f4:	add	r1, pc, r1
   152f8:	add	r2, pc, r2
   152fc:	add	r1, r1, #596	; 0x254
   15300:	bl	13450 <g_return_if_fail_warning@plt>
   15304:	mov	r0, r4
   15308:	pop	{r4, pc}
   1530c:	andeq	r2, r2, ip, ror #28
   15310:	andeq	r2, r2, ip, ror #27
   15314:	push	{r4, r5, r6, lr}
   15318:	subs	r5, r1, #0
   1531c:	mov	r6, r0
   15320:	beq	15388 <g_unichar_xdigit_value@plt+0x1524>
   15324:	bl	221c4 <g_unichar_xdigit_value@plt+0xe360>
   15328:	mov	r1, r5
   1532c:	mov	r4, r0
   15330:	bl	21804 <g_unichar_xdigit_value@plt+0xd9a0>
   15334:	cmp	r0, #0
   15338:	beq	1535c <g_unichar_xdigit_value@plt+0x14f8>
   1533c:	cmp	r4, #0
   15340:	beq	15354 <g_unichar_xdigit_value@plt+0x14f0>
   15344:	mov	r0, r4
   15348:	bl	13b94 <g_object_unref@plt>
   1534c:	mov	r0, #1
   15350:	pop	{r4, r5, r6, pc}
   15354:	mov	r0, #1
   15358:	pop	{r4, r5, r6, pc}
   1535c:	ldr	r3, [r6, #24]
   15360:	mov	r1, r5
   15364:	ldr	r0, [r3]
   15368:	bl	152d0 <g_unichar_xdigit_value@plt+0x146c>
   1536c:	cmp	r4, #0
   15370:	mov	r5, r0
   15374:	beq	153a4 <g_unichar_xdigit_value@plt+0x1540>
   15378:	mov	r0, r4
   1537c:	bl	13b94 <g_object_unref@plt>
   15380:	mov	r0, r5
   15384:	pop	{r4, r5, r6, pc}
   15388:	ldr	r1, [pc, #28]	; 153ac <g_unichar_xdigit_value@plt+0x1548>
   1538c:	mov	r0, r5
   15390:	ldr	r2, [pc, #24]	; 153b0 <g_unichar_xdigit_value@plt+0x154c>
   15394:	add	r1, pc, r1
   15398:	add	r2, pc, r2
   1539c:	add	r1, r1, #628	; 0x274
   153a0:	bl	13450 <g_return_if_fail_warning@plt>
   153a4:	mov	r0, r5
   153a8:	pop	{r4, r5, r6, pc}
   153ac:	andeq	r2, r2, ip, asr #27
   153b0:	andeq	r6, r2, r8, lsr r2
   153b4:	push	{r4, lr}
   153b8:	subs	r4, r0, #0
   153bc:	beq	153d0 <g_unichar_xdigit_value@plt+0x156c>
   153c0:	ldr	ip, [r4]
   153c4:	ldr	ip, [ip, #88]	; 0x58
   153c8:	blx	ip
   153cc:	pop	{r4, pc}
   153d0:	ldr	r1, [pc, #24]	; 153f0 <g_unichar_xdigit_value@plt+0x158c>
   153d4:	ldr	r2, [pc, #24]	; 153f4 <g_unichar_xdigit_value@plt+0x1590>
   153d8:	add	r1, pc, r1
   153dc:	add	r2, pc, r2
   153e0:	add	r1, r1, #672	; 0x2a0
   153e4:	bl	13450 <g_return_if_fail_warning@plt>
   153e8:	mov	r0, r4
   153ec:	pop	{r4, pc}
   153f0:	andeq	r2, r2, r8, lsl #27
   153f4:	andeq	r2, r2, r8, lsl #26
   153f8:	push	{r4, r5, r6, lr}
   153fc:	subs	r5, r1, #0
   15400:	mov	r4, r3
   15404:	beq	15428 <g_unichar_xdigit_value@plt+0x15c4>
   15408:	cmp	r2, #0
   1540c:	beq	1544c <g_unichar_xdigit_value@plt+0x15e8>
   15410:	cmp	r3, #0
   15414:	beq	15470 <g_unichar_xdigit_value@plt+0x160c>
   15418:	ldr	r0, [r0, #24]
   1541c:	pop	{r4, r5, r6, lr}
   15420:	ldr	r0, [r0]
   15424:	b	153b4 <g_unichar_xdigit_value@plt+0x1550>
   15428:	ldr	r1, [pc, #100]	; 15494 <g_unichar_xdigit_value@plt+0x1630>
   1542c:	mov	r0, r5
   15430:	ldr	r2, [pc, #96]	; 15498 <g_unichar_xdigit_value@plt+0x1634>
   15434:	add	r1, pc, r1
   15438:	add	r2, pc, r2
   1543c:	add	r1, r1, #692	; 0x2b4
   15440:	bl	13450 <g_return_if_fail_warning@plt>
   15444:	mov	r0, #0
   15448:	pop	{r4, r5, r6, pc}
   1544c:	ldr	r1, [pc, #72]	; 1549c <g_unichar_xdigit_value@plt+0x1638>
   15450:	mov	r0, r2
   15454:	ldr	r2, [pc, #68]	; 154a0 <g_unichar_xdigit_value@plt+0x163c>
   15458:	add	r1, pc, r1
   1545c:	add	r2, pc, r2
   15460:	add	r1, r1, #692	; 0x2b4
   15464:	bl	13450 <g_return_if_fail_warning@plt>
   15468:	mov	r0, #0
   1546c:	pop	{r4, r5, r6, pc}
   15470:	ldr	r1, [pc, #44]	; 154a4 <g_unichar_xdigit_value@plt+0x1640>
   15474:	mov	r0, r3
   15478:	ldr	r2, [pc, #40]	; 154a8 <g_unichar_xdigit_value@plt+0x1644>
   1547c:	add	r1, pc, r1
   15480:	add	r2, pc, r2
   15484:	add	r1, r1, #692	; 0x2b4
   15488:	bl	13450 <g_return_if_fail_warning@plt>
   1548c:	mov	r0, #0
   15490:	pop	{r4, r5, r6, pc}
   15494:	andeq	r2, r2, ip, lsr #26
   15498:	andeq	r3, r2, r8, lsr #32
   1549c:	andeq	r2, r2, r8, lsl #26
   154a0:	andeq	r3, r2, r0, lsl r0
   154a4:	andeq	r2, r2, r4, ror #25
   154a8:	strdeq	r2, [r2], -ip
   154ac:	ldr	r0, [pc, #108]	; 15520 <g_unichar_xdigit_value@plt+0x16bc>
   154b0:	push	{r3, r4, r5, lr}
   154b4:	add	r0, pc, r0
   154b8:	dmb	sy
   154bc:	ldr	r4, [r0, #12]
   154c0:	dmb	sy
   154c4:	cmp	r4, #0
   154c8:	beq	154dc <g_unichar_xdigit_value@plt+0x1678>
   154cc:	ldr	r3, [pc, #80]	; 15524 <g_unichar_xdigit_value@plt+0x16c0>
   154d0:	add	r3, pc, r3
   154d4:	ldr	r0, [r3, #12]
   154d8:	pop	{r3, r4, r5, pc}
   154dc:	add	r5, r0, #12
   154e0:	mov	r0, r5
   154e4:	bl	138ac <g_once_init_enter@plt>
   154e8:	cmp	r0, #0
   154ec:	beq	154cc <g_unichar_xdigit_value@plt+0x1668>
   154f0:	ldr	r2, [pc, #48]	; 15528 <g_unichar_xdigit_value@plt+0x16c4>
   154f4:	mov	r3, r4
   154f8:	ldr	r1, [pc, #44]	; 1552c <g_unichar_xdigit_value@plt+0x16c8>
   154fc:	mov	r0, #80	; 0x50
   15500:	add	r2, pc, r2
   15504:	add	r1, pc, r1
   15508:	add	r2, r2, #96	; 0x60
   1550c:	bl	13438 <g_type_register_static@plt>
   15510:	mov	r1, r0
   15514:	mov	r0, r5
   15518:	bl	13bac <g_once_init_leave@plt>
   1551c:	b	154cc <g_unichar_xdigit_value@plt+0x1668>
   15520:	andeq	fp, r3, r8, lsr pc
   15524:	andeq	fp, r3, ip, lsl pc
   15528:	andeq	sl, r3, ip, lsl #27
   1552c:	andeq	r3, r2, r0, lsr #1
   15530:	push	{r4, lr}
   15534:	mov	r4, r0
   15538:	bl	154ac <g_unichar_xdigit_value@plt+0x1648>
   1553c:	mov	r1, r4
   15540:	pop	{r4, lr}
   15544:	b	14d98 <g_unichar_xdigit_value@plt+0xf34>
   15548:	push	{r4, lr}
   1554c:	mov	r4, r0
   15550:	bl	154ac <g_unichar_xdigit_value@plt+0x1648>
   15554:	mov	r1, r0
   15558:	mov	r0, r4
   1555c:	bl	13870 <g_type_instance_get_private@plt>
   15560:	str	r0, [r4, #12]
   15564:	pop	{r4, pc}
   15568:	push	{r3, r4, r5, lr}
   1556c:	mov	r4, r0
   15570:	bl	154ac <g_unichar_xdigit_value@plt+0x1648>
   15574:	mov	r1, r0
   15578:	mov	r0, r4
   1557c:	bl	13510 <g_type_check_instance_cast@plt>
   15580:	ldr	r3, [r0, #12]
   15584:	mov	r5, r0
   15588:	ldr	r0, [r3]
   1558c:	bl	1399c <g_free@plt>
   15590:	ldr	r3, [pc, #40]	; 155c0 <g_unichar_xdigit_value@plt+0x175c>
   15594:	ldr	r2, [r5, #12]
   15598:	mov	r0, #0
   1559c:	add	r3, pc, r3
   155a0:	mov	r1, #80	; 0x50
   155a4:	str	r0, [r2]
   155a8:	ldr	r0, [r3, #4]
   155ac:	bl	13db0 <g_type_check_class_cast@plt>
   155b0:	ldr	r3, [r0, #24]
   155b4:	mov	r0, r4
   155b8:	blx	r3
   155bc:	pop	{r3, r4, r5, pc}
   155c0:	andeq	fp, r3, r0, asr lr
   155c4:	push	{r4, r5, lr}
   155c8:	subs	r4, r1, #0
   155cc:	sub	sp, sp, #12
   155d0:	mov	r5, r2
   155d4:	beq	15638 <g_unichar_xdigit_value@plt+0x17d4>
   155d8:	cmp	r2, #0
   155dc:	beq	15660 <g_unichar_xdigit_value@plt+0x17fc>
   155e0:	ldr	ip, [r4, #24]
   155e4:	mov	r1, r5
   155e8:	ldr	r3, [r4, #20]
   155ec:	ldr	r2, [r4, #16]
   155f0:	str	ip, [sp]
   155f4:	bl	18d88 <g_unichar_xdigit_value@plt+0x4f24>
   155f8:	mov	r5, r0
   155fc:	mov	r0, r4
   15600:	bl	133f0 <g_object_ref@plt>
   15604:	ldr	r3, [r5, #24]
   15608:	mov	r4, r0
   1560c:	ldr	r0, [r3]
   15610:	cmp	r0, #0
   15614:	beq	15628 <g_unichar_xdigit_value@plt+0x17c4>
   15618:	bl	13b94 <g_object_unref@plt>
   1561c:	ldr	r3, [r5, #24]
   15620:	mov	r2, #0
   15624:	str	r2, [r3]
   15628:	mov	r0, r5
   1562c:	str	r4, [r3]
   15630:	add	sp, sp, #12
   15634:	pop	{r4, r5, pc}
   15638:	ldr	r1, [pc, #72]	; 15688 <g_unichar_xdigit_value@plt+0x1824>
   1563c:	mov	r0, r4
   15640:	ldr	r2, [pc, #68]	; 1568c <g_unichar_xdigit_value@plt+0x1828>
   15644:	add	r1, pc, r1
   15648:	add	r2, pc, r2
   1564c:	add	r1, r1, #724	; 0x2d4
   15650:	bl	13450 <g_return_if_fail_warning@plt>
   15654:	mov	r0, r4
   15658:	add	sp, sp, #12
   1565c:	pop	{r4, r5, pc}
   15660:	ldr	r1, [pc, #40]	; 15690 <g_unichar_xdigit_value@plt+0x182c>
   15664:	mov	r0, r2
   15668:	ldr	r2, [pc, #36]	; 15694 <g_unichar_xdigit_value@plt+0x1830>
   1566c:	add	r1, pc, r1
   15670:	add	r2, pc, r2
   15674:	add	r1, r1, #724	; 0x2d4
   15678:	bl	13450 <g_return_if_fail_warning@plt>
   1567c:	mov	r0, r5
   15680:	add	sp, sp, #12
   15684:	pop	{r4, r5, pc}
   15688:	andeq	r2, r2, ip, lsl fp
   1568c:	strdeq	r2, [r2], -r0
   15690:	strdeq	r2, [r2], -r4
   15694:	strdeq	r2, [r2], -r0
   15698:	ldr	r0, [pc, #108]	; 1570c <g_unichar_xdigit_value@plt+0x18a8>
   1569c:	push	{r3, r4, r5, lr}
   156a0:	add	r0, pc, r0
   156a4:	dmb	sy
   156a8:	ldr	r4, [r0, #16]
   156ac:	dmb	sy
   156b0:	cmp	r4, #0
   156b4:	beq	156c8 <g_unichar_xdigit_value@plt+0x1864>
   156b8:	ldr	r3, [pc, #80]	; 15710 <g_unichar_xdigit_value@plt+0x18ac>
   156bc:	add	r3, pc, r3
   156c0:	ldr	r0, [r3, #16]
   156c4:	pop	{r3, r4, r5, pc}
   156c8:	add	r5, r0, #16
   156cc:	mov	r0, r5
   156d0:	bl	138ac <g_once_init_enter@plt>
   156d4:	cmp	r0, #0
   156d8:	beq	156b8 <g_unichar_xdigit_value@plt+0x1854>
   156dc:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   156e0:	ldr	r2, [pc, #44]	; 15714 <g_unichar_xdigit_value@plt+0x18b0>
   156e4:	ldr	r1, [pc, #44]	; 15718 <g_unichar_xdigit_value@plt+0x18b4>
   156e8:	mov	r3, r4
   156ec:	add	r2, pc, r2
   156f0:	add	r1, pc, r1
   156f4:	add	r2, r2, #132	; 0x84
   156f8:	bl	13438 <g_type_register_static@plt>
   156fc:	mov	r1, r0
   15700:	mov	r0, r5
   15704:	bl	13bac <g_once_init_leave@plt>
   15708:	b	156b8 <g_unichar_xdigit_value@plt+0x1854>
   1570c:	andeq	fp, r3, ip, asr #26
   15710:	andeq	fp, r3, r0, lsr sp
   15714:	andeq	sl, r3, r0, lsr #23
   15718:	andeq	r2, r2, r0, asr #29
   1571c:	push	{r3, r4, r5, lr}
   15720:	mov	r4, r1
   15724:	mov	r5, r0
   15728:	bl	15698 <g_unichar_xdigit_value@plt+0x1834>
   1572c:	mov	r1, r5
   15730:	mov	r2, r4
   15734:	pop	{r3, r4, r5, lr}
   15738:	b	155c4 <g_unichar_xdigit_value@plt+0x1760>
   1573c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15740:	sub	sp, sp, #76	; 0x4c
   15744:	ldr	lr, [pc, #788]	; 15a60 <g_unichar_xdigit_value@plt+0x1bfc>
   15748:	mov	r8, r3
   1574c:	ldr	ip, [pc, #784]	; 15a64 <g_unichar_xdigit_value@plt+0x1c00>
   15750:	subs	r5, r0, #0
   15754:	add	lr, pc, lr
   15758:	str	r1, [sp, #28]
   1575c:	mov	r4, #0
   15760:	mov	sl, r2
   15764:	ldr	ip, [lr, ip]
   15768:	mov	r3, lr
   1576c:	ldr	fp, [sp, #112]	; 0x70
   15770:	ldr	r7, [sp, #116]	; 0x74
   15774:	ldr	r3, [ip]
   15778:	str	ip, [sp, #24]
   1577c:	str	r4, [sp, #40]	; 0x28
   15780:	str	r4, [sp, #44]	; 0x2c
   15784:	str	r4, [sp, #48]	; 0x30
   15788:	str	r3, [sp, #68]	; 0x44
   1578c:	str	r4, [sp, #52]	; 0x34
   15790:	str	r4, [sp, #56]	; 0x38
   15794:	beq	15960 <g_unichar_xdigit_value@plt+0x1afc>
   15798:	ldr	r3, [r5, #12]
   1579c:	add	r9, sp, #72	; 0x48
   157a0:	mov	r5, r9
   157a4:	ldr	r1, [r3]
   157a8:	bl	1571c <g_unichar_xdigit_value@plt+0x18b8>
   157ac:	mov	r6, r0
   157b0:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   157b4:	mov	r0, r4
   157b8:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   157bc:	add	r3, sp, #52	; 0x34
   157c0:	add	r1, sp, #40	; 0x28
   157c4:	str	r3, [sp]
   157c8:	add	r2, sp, #44	; 0x2c
   157cc:	add	r3, sp, #56	; 0x38
   157d0:	mov	r0, r6
   157d4:	str	r3, [sp, #4]
   157d8:	add	r3, sp, #48	; 0x30
   157dc:	bl	1d450 <g_unichar_xdigit_value@plt+0x95ec>
   157e0:	ldr	r1, [sp, #44]	; 0x2c
   157e4:	ldr	r2, [sp, #40]	; 0x28
   157e8:	str	r1, [sp, #20]
   157ec:	str	r2, [sp, #36]	; 0x24
   157f0:	mov	r3, r0
   157f4:	mov	r0, r4
   157f8:	str	r3, [sp, #12]
   157fc:	bl	1399c <g_free@plt>
   15800:	ldr	r2, [sp, #48]	; 0x30
   15804:	mov	r0, r4
   15808:	str	r2, [sp, #32]
   1580c:	bl	1399c <g_free@plt>
   15810:	ldr	r2, [sp, #52]	; 0x34
   15814:	mov	r0, #4
   15818:	str	r2, [r9, #-12]!
   1581c:	bl	13c90 <g_malloc0@plt>
   15820:	str	r0, [sp, #16]
   15824:	ldr	r1, [sp, #16]
   15828:	ldr	r0, [r9]
   1582c:	str	r0, [r1]
   15830:	mov	r0, r4
   15834:	bl	1399c <g_free@plt>
   15838:	ldr	r2, [sp, #56]	; 0x38
   1583c:	mov	r0, #4
   15840:	str	r2, [r5, #-8]!
   15844:	bl	13c90 <g_malloc0@plt>
   15848:	ldr	r2, [sp, #20]
   1584c:	cmp	r2, #0
   15850:	mov	r4, r0
   15854:	ldr	r0, [r5]
   15858:	str	r0, [r4]
   1585c:	ldr	r3, [sp, #12]
   15860:	beq	158ec <g_unichar_xdigit_value@plt+0x1a88>
   15864:	cmp	r3, #0
   15868:	beq	15874 <g_unichar_xdigit_value@plt+0x1a10>
   1586c:	mov	r0, r3
   15870:	bl	13b94 <g_object_unref@plt>
   15874:	cmp	r6, #0
   15878:	beq	15884 <g_unichar_xdigit_value@plt+0x1a20>
   1587c:	mov	r0, r6
   15880:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   15884:	ldr	r2, [sp, #28]
   15888:	cmp	r2, #0
   1588c:	ldrne	r3, [sp, #36]	; 0x24
   15890:	strne	r3, [r2]
   15894:	cmp	sl, #0
   15898:	ldrne	r1, [sp, #20]
   1589c:	strne	r1, [sl]
   158a0:	cmp	r8, #0
   158a4:	beq	1599c <g_unichar_xdigit_value@plt+0x1b38>
   158a8:	ldr	r2, [sp, #32]
   158ac:	str	r2, [r8]
   158b0:	cmp	fp, #0
   158b4:	beq	15980 <g_unichar_xdigit_value@plt+0x1b1c>
   158b8:	ldr	r3, [sp, #16]
   158bc:	str	r3, [fp]
   158c0:	cmp	r7, #0
   158c4:	beq	1598c <g_unichar_xdigit_value@plt+0x1b28>
   158c8:	mov	r0, #0
   158cc:	str	r4, [r7]
   158d0:	ldr	r1, [sp, #24]
   158d4:	ldr	r2, [sp, #68]	; 0x44
   158d8:	ldr	r3, [r1]
   158dc:	cmp	r2, r3
   158e0:	bne	15a5c <g_unichar_xdigit_value@plt+0x1bf8>
   158e4:	add	sp, sp, #76	; 0x4c
   158e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158ec:	str	r3, [sp, #12]
   158f0:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   158f4:	ldr	r3, [sp, #12]
   158f8:	cmp	r0, #0
   158fc:	beq	159a8 <g_unichar_xdigit_value@plt+0x1b44>
   15900:	cmp	r3, #0
   15904:	beq	15910 <g_unichar_xdigit_value@plt+0x1aac>
   15908:	mov	r0, r3
   1590c:	bl	13b94 <g_object_unref@plt>
   15910:	cmp	r6, #0
   15914:	beq	15920 <g_unichar_xdigit_value@plt+0x1abc>
   15918:	mov	r0, r6
   1591c:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   15920:	ldr	r1, [sp, #28]
   15924:	cmp	r1, #0
   15928:	ldrne	r2, [sp, #36]	; 0x24
   1592c:	strne	r2, [r1]
   15930:	cmp	sl, #0
   15934:	movne	r3, #6
   15938:	strne	r3, [sl]
   1593c:	cmp	r8, #0
   15940:	beq	15a10 <g_unichar_xdigit_value@plt+0x1bac>
   15944:	ldr	r3, [sp, #32]
   15948:	str	r3, [r8]
   1594c:	cmp	fp, #0
   15950:	beq	15980 <g_unichar_xdigit_value@plt+0x1b1c>
   15954:	ldr	r1, [sp, #16]
   15958:	str	r1, [fp]
   1595c:	b	158c0 <g_unichar_xdigit_value@plt+0x1a5c>
   15960:	ldr	r1, [pc, #256]	; 15a68 <g_unichar_xdigit_value@plt+0x1c04>
   15964:	ldr	r2, [pc, #256]	; 15a6c <g_unichar_xdigit_value@plt+0x1c08>
   15968:	add	r1, pc, r1
   1596c:	add	r2, pc, r2
   15970:	add	r1, r1, #752	; 0x2f0
   15974:	bl	13450 <g_return_if_fail_warning@plt>
   15978:	mov	r0, r5
   1597c:	b	158d0 <g_unichar_xdigit_value@plt+0x1a6c>
   15980:	ldr	r0, [sp, #16]
   15984:	bl	1399c <g_free@plt>
   15988:	b	158c0 <g_unichar_xdigit_value@plt+0x1a5c>
   1598c:	mov	r0, r4
   15990:	bl	1399c <g_free@plt>
   15994:	mov	r0, r7
   15998:	b	158d0 <g_unichar_xdigit_value@plt+0x1a6c>
   1599c:	ldr	r0, [sp, #32]
   159a0:	bl	1399c <g_free@plt>
   159a4:	b	158b0 <g_unichar_xdigit_value@plt+0x1a4c>
   159a8:	cmp	r6, #0
   159ac:	beq	159c0 <g_unichar_xdigit_value@plt+0x1b5c>
   159b0:	mov	r0, r6
   159b4:	str	r3, [sp, #12]
   159b8:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   159bc:	ldr	r3, [sp, #12]
   159c0:	ldr	r2, [sp, #28]
   159c4:	cmp	r2, #0
   159c8:	ldrne	r1, [sp, #36]	; 0x24
   159cc:	strne	r1, [r2]
   159d0:	cmp	sl, #0
   159d4:	movne	r2, #0
   159d8:	strne	r2, [sl]
   159dc:	cmp	r8, #0
   159e0:	beq	15a48 <g_unichar_xdigit_value@plt+0x1be4>
   159e4:	ldr	r2, [sp, #32]
   159e8:	str	r2, [r8]
   159ec:	cmp	fp, #0
   159f0:	beq	15a34 <g_unichar_xdigit_value@plt+0x1bd0>
   159f4:	ldr	r1, [sp, #16]
   159f8:	str	r1, [fp]
   159fc:	cmp	r7, #0
   15a00:	beq	15a1c <g_unichar_xdigit_value@plt+0x1bb8>
   15a04:	str	r4, [r7]
   15a08:	mov	r0, r3
   15a0c:	b	158d0 <g_unichar_xdigit_value@plt+0x1a6c>
   15a10:	ldr	r0, [sp, #32]
   15a14:	bl	1399c <g_free@plt>
   15a18:	b	1594c <g_unichar_xdigit_value@plt+0x1ae8>
   15a1c:	mov	r0, r4
   15a20:	str	r3, [sp, #12]
   15a24:	bl	1399c <g_free@plt>
   15a28:	ldr	r3, [sp, #12]
   15a2c:	mov	r0, r3
   15a30:	b	158d0 <g_unichar_xdigit_value@plt+0x1a6c>
   15a34:	ldr	r0, [sp, #16]
   15a38:	str	r3, [sp, #12]
   15a3c:	bl	1399c <g_free@plt>
   15a40:	ldr	r3, [sp, #12]
   15a44:	b	159fc <g_unichar_xdigit_value@plt+0x1b98>
   15a48:	ldr	r0, [sp, #32]
   15a4c:	str	r3, [sp, #12]
   15a50:	bl	1399c <g_free@plt>
   15a54:	ldr	r3, [sp, #12]
   15a58:	b	159ec <g_unichar_xdigit_value@plt+0x1b88>
   15a5c:	bl	13978 <__stack_chk_fail@plt>
   15a60:	andeq	fp, r3, r4, lsr #17
   15a64:	muleq	r0, r0, r3
   15a68:	strdeq	r2, [r2], -r8
   15a6c:	andeq	r2, r2, r8, ror r7
   15a70:	push	{r4, lr}
   15a74:	mov	r4, r0
   15a78:	bl	15698 <g_unichar_xdigit_value@plt+0x1834>
   15a7c:	mov	r1, r0
   15a80:	mov	r0, r4
   15a84:	bl	13870 <g_type_instance_get_private@plt>
   15a88:	str	r0, [r4, #24]
   15a8c:	pop	{r4, pc}
   15a90:	push	{r3, r4, r5, lr}
   15a94:	mov	r4, r0
   15a98:	bl	15698 <g_unichar_xdigit_value@plt+0x1834>
   15a9c:	mov	r1, r0
   15aa0:	mov	r0, r4
   15aa4:	bl	13510 <g_type_check_instance_cast@plt>
   15aa8:	ldr	r3, [r0, #24]
   15aac:	mov	r5, r0
   15ab0:	ldr	r0, [r3]
   15ab4:	cmp	r0, #0
   15ab8:	beq	15acc <g_unichar_xdigit_value@plt+0x1c68>
   15abc:	bl	13b94 <g_object_unref@plt>
   15ac0:	ldr	r3, [r5, #24]
   15ac4:	mov	r2, #0
   15ac8:	str	r2, [r3]
   15acc:	ldr	r3, [pc, #32]	; 15af4 <g_unichar_xdigit_value@plt+0x1c90>
   15ad0:	ldr	r5, [pc, r3]
   15ad4:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   15ad8:	mov	r1, r0
   15adc:	mov	r0, r5
   15ae0:	bl	13db0 <g_type_check_class_cast@plt>
   15ae4:	ldr	r3, [r0, #4]
   15ae8:	mov	r0, r4
   15aec:	blx	r3
   15af0:	pop	{r3, r4, r5, pc}
   15af4:	andeq	fp, r3, ip, lsl r9
   15af8:	mov	r0, #0
   15afc:	bx	lr
   15b00:	mov	r3, #0
   15b04:	str	r3, [r0, #20]
   15b08:	str	r3, [r0, #24]
   15b0c:	str	r3, [r0, #28]
   15b10:	bx	lr
   15b14:	bx	lr
   15b18:	bx	lr
   15b1c:	bx	lr
   15b20:	bx	lr
   15b24:	bx	lr
   15b28:	bx	lr
   15b2c:	bx	lr
   15b30:	bx	lr
   15b34:	bx	lr
   15b38:	bx	lr
   15b3c:	bx	lr
   15b40:	bx	lr
   15b44:	bx	lr
   15b48:	bx	lr
   15b4c:	bx	lr
   15b50:	bx	lr
   15b54:	bx	lr
   15b58:	bx	lr
   15b5c:	bx	lr
   15b60:	bx	lr
   15b64:	mov	r3, #0
   15b68:	str	r3, [r0, #56]	; 0x38
   15b6c:	bx	lr
   15b70:	mov	r3, #0
   15b74:	str	r3, [r0, #56]	; 0x38
   15b78:	bx	lr
   15b7c:	bx	lr
   15b80:	bx	lr
   15b84:	bx	lr
   15b88:	bx	lr
   15b8c:	bx	lr
   15b90:	bx	lr
   15b94:	bx	lr
   15b98:	bx	lr
   15b9c:	bx	lr
   15ba0:	bx	lr
   15ba4:	bx	lr
   15ba8:	bx	lr
   15bac:	mov	r3, #0
   15bb0:	str	r3, [r0, #8]
   15bb4:	bx	lr
   15bb8:	ldr	r0, [r0, #8]
   15bbc:	bx	lr
   15bc0:	cmp	r0, #0
   15bc4:	cmpne	r2, #0
   15bc8:	push	{r3, r4, r5, r6, r7, lr}
   15bcc:	mov	r7, r2
   15bd0:	mov	r6, r1
   15bd4:	popeq	{r3, r4, r5, r6, r7, pc}
   15bd8:	cmp	r1, #0
   15bdc:	pople	{r3, r4, r5, r6, r7, pc}
   15be0:	sub	r5, r0, #4
   15be4:	mov	r4, #0
   15be8:	ldr	r0, [r5, #4]!
   15bec:	add	r4, r4, #1
   15bf0:	cmp	r0, #0
   15bf4:	beq	15bfc <g_unichar_xdigit_value@plt+0x1d98>
   15bf8:	blx	r7
   15bfc:	cmp	r4, r6
   15c00:	bne	15be8 <g_unichar_xdigit_value@plt+0x1d84>
   15c04:	pop	{r3, r4, r5, r6, r7, pc}
   15c08:	cmp	r0, #0
   15c0c:	bxeq	lr
   15c10:	b	13b94 <g_object_unref@plt>
   15c14:	push	{r4, r5, r6, r7, r8, lr}
   15c18:	subs	r7, r0, #0
   15c1c:	mov	r6, r1
   15c20:	mov	r8, r2
   15c24:	beq	15cdc <g_unichar_xdigit_value@plt+0x1e78>
   15c28:	cmp	r1, #0
   15c2c:	beq	15cc0 <g_unichar_xdigit_value@plt+0x1e5c>
   15c30:	ldr	r3, [r7, #8]
   15c34:	ldr	r4, [r3, #4]
   15c38:	cmp	r4, #0
   15c3c:	beq	15cf4 <g_unichar_xdigit_value@plt+0x1e90>
   15c40:	ldr	r0, [r3, #8]
   15c44:	cmp	r0, #0
   15c48:	beq	15ca4 <g_unichar_xdigit_value@plt+0x1e40>
   15c4c:	bl	133f0 <g_object_ref@plt>
   15c50:	subs	r4, r0, #0
   15c54:	beq	15ca0 <g_unichar_xdigit_value@plt+0x1e3c>
   15c58:	ldr	r1, [r4, #36]	; 0x24
   15c5c:	ldr	r3, [r6, #36]	; 0x24
   15c60:	cmp	r1, r3
   15c64:	bhi	15c78 <g_unichar_xdigit_value@plt+0x1e14>
   15c68:	bcc	15e1c <g_unichar_xdigit_value@plt+0x1fb8>
   15c6c:	ldr	r3, [r6, #40]	; 0x28
   15c70:	cmp	r3, #1
   15c74:	beq	15e1c <g_unichar_xdigit_value@plt+0x1fb8>
   15c78:	ldr	r0, [r4, #20]
   15c7c:	cmp	r0, #0
   15c80:	beq	15cb4 <g_unichar_xdigit_value@plt+0x1e50>
   15c84:	bl	133f0 <g_object_ref@plt>
   15c88:	mov	r5, r0
   15c8c:	mov	r0, r4
   15c90:	bl	13b94 <g_object_unref@plt>
   15c94:	cmp	r5, #0
   15c98:	mov	r4, r5
   15c9c:	bne	15c58 <g_unichar_xdigit_value@plt+0x1df4>
   15ca0:	ldr	r3, [r7, #8]
   15ca4:	cmp	r8, #0
   15ca8:	beq	15d5c <g_unichar_xdigit_value@plt+0x1ef8>
   15cac:	mov	r4, #0
   15cb0:	b	15e30 <g_unichar_xdigit_value@plt+0x1fcc>
   15cb4:	mov	r0, r4
   15cb8:	bl	13b94 <g_object_unref@plt>
   15cbc:	b	15ca0 <g_unichar_xdigit_value@plt+0x1e3c>
   15cc0:	mov	r0, r1
   15cc4:	ldr	r2, [pc, #924]	; 16068 <g_unichar_xdigit_value@plt+0x2204>
   15cc8:	ldr	r1, [pc, #924]	; 1606c <g_unichar_xdigit_value@plt+0x2208>
   15ccc:	add	r2, pc, r2
   15cd0:	add	r1, pc, r1
   15cd4:	pop	{r4, r5, r6, r7, r8, lr}
   15cd8:	b	13450 <g_return_if_fail_warning@plt>
   15cdc:	ldr	r1, [pc, #908]	; 16070 <g_unichar_xdigit_value@plt+0x220c>
   15ce0:	ldr	r2, [pc, #908]	; 16074 <g_unichar_xdigit_value@plt+0x2210>
   15ce4:	add	r1, pc, r1
   15ce8:	add	r2, pc, r2
   15cec:	pop	{r4, r5, r6, r7, r8, lr}
   15cf0:	b	13450 <g_return_if_fail_warning@plt>
   15cf4:	mov	r0, r6
   15cf8:	bl	133f0 <g_object_ref@plt>
   15cfc:	ldr	r3, [r7, #8]
   15d00:	mov	r5, r0
   15d04:	ldr	r0, [r3, #4]
   15d08:	cmp	r0, #0
   15d0c:	beq	15d1c <g_unichar_xdigit_value@plt+0x1eb8>
   15d10:	bl	13b94 <g_object_unref@plt>
   15d14:	ldr	r3, [r7, #8]
   15d18:	str	r4, [r3, #4]
   15d1c:	cmp	r5, #0
   15d20:	str	r5, [r3, #4]
   15d24:	beq	15d38 <g_unichar_xdigit_value@plt+0x1ed4>
   15d28:	mov	r0, r5
   15d2c:	bl	133f0 <g_object_ref@plt>
   15d30:	ldr	r3, [r7, #8]
   15d34:	mov	r5, r0
   15d38:	ldr	r0, [r3, #8]
   15d3c:	cmp	r0, #0
   15d40:	beq	15d54 <g_unichar_xdigit_value@plt+0x1ef0>
   15d44:	bl	13b94 <g_object_unref@plt>
   15d48:	ldr	r3, [r7, #8]
   15d4c:	mov	r2, #0
   15d50:	str	r2, [r3, #8]
   15d54:	str	r5, [r3, #8]
   15d58:	pop	{r4, r5, r6, r7, r8, pc}
   15d5c:	ldr	r0, [r3, #4]
   15d60:	cmp	r0, #0
   15d64:	beq	15d70 <g_unichar_xdigit_value@plt+0x1f0c>
   15d68:	bl	133f0 <g_object_ref@plt>
   15d6c:	mov	r8, r0
   15d70:	ldr	r0, [r6, #24]
   15d74:	cmp	r0, #0
   15d78:	beq	15d80 <g_unichar_xdigit_value@plt+0x1f1c>
   15d7c:	bl	13b94 <g_object_unref@plt>
   15d80:	str	r8, [r6, #24]
   15d84:	mov	r0, r6
   15d88:	bl	133f0 <g_object_ref@plt>
   15d8c:	mov	r4, r0
   15d90:	ldr	r0, [r8, #20]
   15d94:	cmp	r0, #0
   15d98:	beq	15da0 <g_unichar_xdigit_value@plt+0x1f3c>
   15d9c:	bl	13b94 <g_object_unref@plt>
   15da0:	str	r4, [r8, #20]
   15da4:	mov	r0, r6
   15da8:	bl	133f0 <g_object_ref@plt>
   15dac:	ldr	r3, [r7, #8]
   15db0:	mov	r4, r0
   15db4:	ldr	r0, [r3, #4]
   15db8:	cmp	r0, #0
   15dbc:	beq	15dd0 <g_unichar_xdigit_value@plt+0x1f6c>
   15dc0:	bl	13b94 <g_object_unref@plt>
   15dc4:	ldr	r3, [r7, #8]
   15dc8:	mov	r2, #0
   15dcc:	str	r2, [r3, #4]
   15dd0:	str	r4, [r3, #4]
   15dd4:	mov	r4, #0
   15dd8:	mov	r0, r6
   15ddc:	bl	133f0 <g_object_ref@plt>
   15de0:	ldr	r3, [r7, #8]
   15de4:	mov	r5, r0
   15de8:	ldr	r0, [r3, #8]
   15dec:	cmp	r0, #0
   15df0:	beq	15e04 <g_unichar_xdigit_value@plt+0x1fa0>
   15df4:	bl	13b94 <g_object_unref@plt>
   15df8:	ldr	r3, [r7, #8]
   15dfc:	mov	r2, #0
   15e00:	str	r2, [r3, #8]
   15e04:	str	r5, [r3, #8]
   15e08:	cmp	r4, #0
   15e0c:	popeq	{r4, r5, r6, r7, r8, pc}
   15e10:	mov	r0, r4
   15e14:	pop	{r4, r5, r6, r7, r8, lr}
   15e18:	b	13b94 <g_object_unref@plt>
   15e1c:	cmp	r8, #0
   15e20:	beq	15fcc <g_unichar_xdigit_value@plt+0x2168>
   15e24:	cmp	r4, #0
   15e28:	bne	15f2c <g_unichar_xdigit_value@plt+0x20c8>
   15e2c:	ldr	r3, [r7, #8]
   15e30:	ldr	r0, [r3, #4]
   15e34:	cmp	r0, #0
   15e38:	moveq	r5, r0
   15e3c:	beq	15e48 <g_unichar_xdigit_value@plt+0x1fe4>
   15e40:	bl	133f0 <g_object_ref@plt>
   15e44:	mov	r5, r0
   15e48:	ldr	r0, [r6, #28]
   15e4c:	cmp	r0, #0
   15e50:	beq	15e58 <g_unichar_xdigit_value@plt+0x1ff4>
   15e54:	bl	13b94 <g_object_unref@plt>
   15e58:	str	r5, [r6, #28]
   15e5c:	mov	r0, r6
   15e60:	bl	133f0 <g_object_ref@plt>
   15e64:	mov	r8, r0
   15e68:	ldr	r0, [r5, #20]
   15e6c:	cmp	r0, #0
   15e70:	beq	15e78 <g_unichar_xdigit_value@plt+0x2014>
   15e74:	bl	13b94 <g_object_unref@plt>
   15e78:	str	r8, [r5, #20]
   15e7c:	mov	r0, r6
   15e80:	bl	133f0 <g_object_ref@plt>
   15e84:	ldr	r3, [r7, #8]
   15e88:	mov	r5, r0
   15e8c:	ldr	r0, [r3, #4]
   15e90:	cmp	r0, #0
   15e94:	beq	15ea8 <g_unichar_xdigit_value@plt+0x2044>
   15e98:	bl	13b94 <g_object_unref@plt>
   15e9c:	ldr	r3, [r7, #8]
   15ea0:	mov	r2, #0
   15ea4:	str	r2, [r3, #4]
   15ea8:	str	r5, [r3, #4]
   15eac:	mov	r0, r6
   15eb0:	bl	133f0 <g_object_ref@plt>
   15eb4:	ldr	r3, [r7, #8]
   15eb8:	mov	r5, r0
   15ebc:	ldr	r0, [r3, #8]
   15ec0:	cmp	r0, #0
   15ec4:	beq	15ed8 <g_unichar_xdigit_value@plt+0x2074>
   15ec8:	bl	13b94 <g_object_unref@plt>
   15ecc:	ldr	r3, [r7, #8]
   15ed0:	mov	r2, #0
   15ed4:	str	r2, [r3, #8]
   15ed8:	ldr	r0, [r5, #28]
   15edc:	str	r5, [r3, #8]
   15ee0:	cmp	r0, #0
   15ee4:	beq	15e08 <g_unichar_xdigit_value@plt+0x1fa4>
   15ee8:	mov	r6, #0
   15eec:	bl	133f0 <g_object_ref@plt>
   15ef0:	ldr	r3, [r7, #8]
   15ef4:	mov	r5, r0
   15ef8:	ldr	r0, [r3, #8]
   15efc:	cmp	r0, #0
   15f00:	beq	15f10 <g_unichar_xdigit_value@plt+0x20ac>
   15f04:	bl	13b94 <g_object_unref@plt>
   15f08:	ldr	r3, [r7, #8]
   15f0c:	str	r6, [r3, #8]
   15f10:	ldr	r0, [r5, #28]
   15f14:	str	r5, [r3, #8]
   15f18:	cmp	r0, #0
   15f1c:	bne	15eec <g_unichar_xdigit_value@plt+0x2088>
   15f20:	cmp	r4, #0
   15f24:	bne	15e10 <g_unichar_xdigit_value@plt+0x1fac>
   15f28:	pop	{r4, r5, r6, r7, r8, pc}
   15f2c:	ldr	r0, [r4, #28]
   15f30:	cmp	r0, #0
   15f34:	moveq	r5, r0
   15f38:	beq	15f44 <g_unichar_xdigit_value@plt+0x20e0>
   15f3c:	bl	133f0 <g_object_ref@plt>
   15f40:	mov	r5, r0
   15f44:	ldr	r0, [r6, #28]
   15f48:	cmp	r0, #0
   15f4c:	beq	15f54 <g_unichar_xdigit_value@plt+0x20f0>
   15f50:	bl	13b94 <g_object_unref@plt>
   15f54:	cmp	r5, #0
   15f58:	str	r5, [r6, #28]
   15f5c:	beq	15f80 <g_unichar_xdigit_value@plt+0x211c>
   15f60:	mov	r0, r6
   15f64:	bl	133f0 <g_object_ref@plt>
   15f68:	mov	r8, r0
   15f6c:	ldr	r0, [r5, #20]
   15f70:	cmp	r0, #0
   15f74:	beq	15f7c <g_unichar_xdigit_value@plt+0x2118>
   15f78:	bl	13b94 <g_object_unref@plt>
   15f7c:	str	r8, [r5, #20]
   15f80:	mov	r0, r6
   15f84:	bl	133f0 <g_object_ref@plt>
   15f88:	mov	r5, r0
   15f8c:	ldr	r0, [r4, #28]
   15f90:	cmp	r0, #0
   15f94:	beq	15f9c <g_unichar_xdigit_value@plt+0x2138>
   15f98:	bl	13b94 <g_object_unref@plt>
   15f9c:	cmp	r5, #0
   15fa0:	str	r5, [r4, #28]
   15fa4:	beq	15eac <g_unichar_xdigit_value@plt+0x2048>
   15fa8:	mov	r0, r4
   15fac:	bl	133f0 <g_object_ref@plt>
   15fb0:	mov	r8, r0
   15fb4:	ldr	r0, [r5, #20]
   15fb8:	cmp	r0, #0
   15fbc:	beq	15fc4 <g_unichar_xdigit_value@plt+0x2160>
   15fc0:	bl	13b94 <g_object_unref@plt>
   15fc4:	str	r8, [r5, #20]
   15fc8:	b	15eac <g_unichar_xdigit_value@plt+0x2048>
   15fcc:	ldr	r0, [r4, #28]
   15fd0:	cmp	r0, #0
   15fd4:	beq	15fe0 <g_unichar_xdigit_value@plt+0x217c>
   15fd8:	bl	133f0 <g_object_ref@plt>
   15fdc:	mov	r8, r0
   15fe0:	ldr	r0, [r6, #24]
   15fe4:	cmp	r0, #0
   15fe8:	beq	15ff0 <g_unichar_xdigit_value@plt+0x218c>
   15fec:	bl	13b94 <g_object_unref@plt>
   15ff0:	cmp	r8, #0
   15ff4:	str	r8, [r6, #24]
   15ff8:	beq	1601c <g_unichar_xdigit_value@plt+0x21b8>
   15ffc:	mov	r0, r6
   16000:	bl	133f0 <g_object_ref@plt>
   16004:	mov	r5, r0
   16008:	ldr	r0, [r8, #20]
   1600c:	cmp	r0, #0
   16010:	beq	16018 <g_unichar_xdigit_value@plt+0x21b4>
   16014:	bl	13b94 <g_object_unref@plt>
   16018:	str	r5, [r8, #20]
   1601c:	mov	r0, r6
   16020:	bl	133f0 <g_object_ref@plt>
   16024:	mov	r5, r0
   16028:	ldr	r0, [r4, #28]
   1602c:	cmp	r0, #0
   16030:	beq	16038 <g_unichar_xdigit_value@plt+0x21d4>
   16034:	bl	13b94 <g_object_unref@plt>
   16038:	cmp	r5, #0
   1603c:	str	r5, [r4, #28]
   16040:	beq	15dd8 <g_unichar_xdigit_value@plt+0x1f74>
   16044:	mov	r0, r4
   16048:	bl	133f0 <g_object_ref@plt>
   1604c:	mov	r8, r0
   16050:	ldr	r0, [r5, #20]
   16054:	cmp	r0, #0
   16058:	beq	16060 <g_unichar_xdigit_value@plt+0x21fc>
   1605c:	bl	13b94 <g_object_unref@plt>
   16060:	str	r8, [r5, #20]
   16064:	b	15dd8 <g_unichar_xdigit_value@plt+0x1f74>
   16068:	andeq	r3, r2, ip, lsr #8
   1606c:	andeq	r2, r2, ip, ror #19
   16070:	ldrdeq	r2, [r2], -r8
   16074:	strdeq	r2, [r2], -ip
   16078:	push	{r4, lr}
   1607c:	mov	r4, r0
   16080:	bl	13c60 <g_type_class_peek_parent@plt>
   16084:	ldr	r3, [pc, #32]	; 160ac <g_unichar_xdigit_value@plt+0x2248>
   16088:	ldr	r1, [pc, #32]	; 160b0 <g_unichar_xdigit_value@plt+0x224c>
   1608c:	add	r3, pc, r3
   16090:	ldr	r2, [pc, #28]	; 160b4 <g_unichar_xdigit_value@plt+0x2250>
   16094:	add	r1, pc, r1
   16098:	str	r1, [r4, #68]	; 0x44
   1609c:	add	r2, pc, r2
   160a0:	str	r2, [r4, #72]	; 0x48
   160a4:	str	r0, [r3]
   160a8:	pop	{r4, pc}
   160ac:	andeq	fp, r3, r4, ror r3
   160b0:	muleq	r0, r4, lr
   160b4:	muleq	r0, r8, r6
   160b8:	push	{r4, lr}
   160bc:	mov	r4, r0
   160c0:	bl	13c60 <g_type_class_peek_parent@plt>
   160c4:	ldr	r3, [pc, #32]	; 160ec <g_unichar_xdigit_value@plt+0x2288>
   160c8:	ldr	r1, [pc, #32]	; 160f0 <g_unichar_xdigit_value@plt+0x228c>
   160cc:	add	r3, pc, r3
   160d0:	ldr	r2, [pc, #28]	; 160f4 <g_unichar_xdigit_value@plt+0x2290>
   160d4:	add	r1, pc, r1
   160d8:	str	r1, [r4, #68]	; 0x44
   160dc:	add	r2, pc, r2
   160e0:	str	r2, [r4, #72]	; 0x48
   160e4:	str	r0, [r3, #4]
   160e8:	pop	{r4, pc}
   160ec:	andeq	fp, r3, r4, lsr r3
   160f0:	andeq	r2, r0, r0, asr #31
   160f4:	andeq	r0, r0, ip, lsl #13
   160f8:	push	{r4, lr}
   160fc:	mov	r4, r0
   16100:	bl	13c60 <g_type_class_peek_parent@plt>
   16104:	ldr	r3, [pc, #20]	; 16120 <g_unichar_xdigit_value@plt+0x22bc>
   16108:	ldr	r2, [pc, #20]	; 16124 <g_unichar_xdigit_value@plt+0x22c0>
   1610c:	add	r3, pc, r3
   16110:	add	r2, pc, r2
   16114:	str	r2, [r4, #68]	; 0x44
   16118:	str	r0, [r3, #8]
   1611c:	pop	{r4, pc}
   16120:	strdeq	fp, [r3], -r4
   16124:	andeq	r1, r0, r4, lsl r7
   16128:	push	{r4, lr}
   1612c:	mov	r4, r0
   16130:	bl	13c60 <g_type_class_peek_parent@plt>
   16134:	ldr	r3, [pc, #20]	; 16150 <g_unichar_xdigit_value@plt+0x22ec>
   16138:	ldr	r2, [pc, #20]	; 16154 <g_unichar_xdigit_value@plt+0x22f0>
   1613c:	add	r3, pc, r3
   16140:	add	r2, pc, r2
   16144:	str	r2, [r4, #72]	; 0x48
   16148:	str	r0, [r3, #12]
   1614c:	pop	{r4, pc}
   16150:	andeq	fp, r3, r4, asr #5
   16154:	andeq	r4, r0, r8, ror #5
   16158:	push	{r4, lr}
   1615c:	mov	r4, r0
   16160:	bl	13c60 <g_type_class_peek_parent@plt>
   16164:	ldr	r3, [pc, #20]	; 16180 <g_unichar_xdigit_value@plt+0x231c>
   16168:	ldr	r2, [pc, #20]	; 16184 <g_unichar_xdigit_value@plt+0x2320>
   1616c:	add	r3, pc, r3
   16170:	add	r2, pc, r2
   16174:	str	r2, [r4, #68]	; 0x44
   16178:	str	r0, [r3, #16]
   1617c:	pop	{r4, pc}
   16180:	muleq	r3, r4, r2
   16184:	andeq	r0, r0, ip, lsr #12
   16188:	push	{r3, lr}
   1618c:	bl	13c60 <g_type_class_peek_parent@plt>
   16190:	ldr	r3, [pc, #8]	; 161a0 <g_unichar_xdigit_value@plt+0x233c>
   16194:	add	r3, pc, r3
   16198:	str	r0, [r3, #20]
   1619c:	pop	{r3, pc}
   161a0:	andeq	fp, r3, ip, ror #4
   161a4:	push	{r4, lr}
   161a8:	mov	r4, r0
   161ac:	bl	13c60 <g_type_class_peek_parent@plt>
   161b0:	ldr	r3, [pc, #20]	; 161cc <g_unichar_xdigit_value@plt+0x2368>
   161b4:	ldr	r2, [pc, #20]	; 161d0 <g_unichar_xdigit_value@plt+0x236c>
   161b8:	add	r3, pc, r3
   161bc:	add	r2, pc, r2
   161c0:	str	r2, [r4, #68]	; 0x44
   161c4:	str	r0, [r3, #24]
   161c8:	pop	{r4, pc}
   161cc:	andeq	fp, r3, r8, asr #4
   161d0:	muleq	r0, ip, ip
   161d4:	push	{r4, lr}
   161d8:	mov	r4, r0
   161dc:	bl	13c60 <g_type_class_peek_parent@plt>
   161e0:	ldr	r3, [pc, #20]	; 161fc <g_unichar_xdigit_value@plt+0x2398>
   161e4:	ldr	r2, [pc, #20]	; 16200 <g_unichar_xdigit_value@plt+0x239c>
   161e8:	add	r3, pc, r3
   161ec:	add	r2, pc, r2
   161f0:	str	r2, [r4, #68]	; 0x44
   161f4:	str	r0, [r3, #28]
   161f8:	pop	{r4, pc}
   161fc:	andeq	fp, r3, r8, lsl r2
   16200:	andeq	r3, r0, r4, asr #28
   16204:	push	{r3, lr}
   16208:	bl	13c60 <g_type_class_peek_parent@plt>
   1620c:	ldr	r3, [pc, #8]	; 1621c <g_unichar_xdigit_value@plt+0x23b8>
   16210:	add	r3, pc, r3
   16214:	str	r0, [r3, #32]
   16218:	pop	{r3, pc}
   1621c:	strdeq	fp, [r3], -r0
   16220:	push	{r3, lr}
   16224:	bl	13c60 <g_type_class_peek_parent@plt>
   16228:	ldr	r3, [pc, #8]	; 16238 <g_unichar_xdigit_value@plt+0x23d4>
   1622c:	add	r3, pc, r3
   16230:	str	r0, [r3, #36]	; 0x24
   16234:	pop	{r3, pc}
   16238:	ldrdeq	fp, [r3], -r4
   1623c:	push	{r3, lr}
   16240:	bl	13c60 <g_type_class_peek_parent@plt>
   16244:	ldr	r3, [pc, #8]	; 16254 <g_unichar_xdigit_value@plt+0x23f0>
   16248:	add	r3, pc, r3
   1624c:	str	r0, [r3, #40]	; 0x28
   16250:	pop	{r3, pc}
   16254:			; <UNDEFINED> instruction: 0x0003b1b8
   16258:	push	{r4, lr}
   1625c:	mov	r4, r0
   16260:	bl	13c60 <g_type_class_peek_parent@plt>
   16264:	ldr	r3, [pc, #20]	; 16280 <g_unichar_xdigit_value@plt+0x241c>
   16268:	ldr	r2, [pc, #20]	; 16284 <g_unichar_xdigit_value@plt+0x2420>
   1626c:	add	r3, pc, r3
   16270:	add	r2, pc, r2
   16274:	str	r2, [r4, #68]	; 0x44
   16278:	str	r0, [r3, #44]	; 0x2c
   1627c:	pop	{r4, pc}
   16280:	muleq	r3, r4, r1
   16284:	andeq	r8, r0, r4, lsr #18
   16288:	push	{r4, lr}
   1628c:	mov	r4, r0
   16290:	bl	13c60 <g_type_class_peek_parent@plt>
   16294:	ldr	r3, [pc, #20]	; 162b0 <g_unichar_xdigit_value@plt+0x244c>
   16298:	ldr	r2, [pc, #20]	; 162b4 <g_unichar_xdigit_value@plt+0x2450>
   1629c:	add	r3, pc, r3
   162a0:	add	r2, pc, r2
   162a4:	str	r2, [r4, #72]	; 0x48
   162a8:	str	r0, [r3, #48]	; 0x30
   162ac:	pop	{r4, pc}
   162b0:	andeq	fp, r3, r4, ror #2
   162b4:	andeq	r0, r0, r0, ror #26
   162b8:	push	{r4, lr}
   162bc:	mov	r4, r0
   162c0:	bl	13c60 <g_type_class_peek_parent@plt>
   162c4:	ldr	r3, [pc, #20]	; 162e0 <g_unichar_xdigit_value@plt+0x247c>
   162c8:	ldr	r2, [pc, #20]	; 162e4 <g_unichar_xdigit_value@plt+0x2480>
   162cc:	add	r3, pc, r3
   162d0:	add	r2, pc, r2
   162d4:	str	r2, [r4, #72]	; 0x48
   162d8:	str	r0, [r3, #52]	; 0x34
   162dc:	pop	{r4, pc}
   162e0:	andeq	fp, r3, r4, lsr r1
   162e4:	andeq	r0, r0, r4, ror sp
   162e8:	push	{r4, lr}
   162ec:	mov	r4, r0
   162f0:	bl	13c60 <g_type_class_peek_parent@plt>
   162f4:	ldr	r3, [pc, #20]	; 16310 <g_unichar_xdigit_value@plt+0x24ac>
   162f8:	ldr	r2, [pc, #20]	; 16314 <g_unichar_xdigit_value@plt+0x24b0>
   162fc:	add	r3, pc, r3
   16300:	add	r2, pc, r2
   16304:	str	r2, [r4, #72]	; 0x48
   16308:	str	r0, [r3, #56]	; 0x38
   1630c:	pop	{r4, pc}
   16310:	andeq	fp, r3, r4, lsl #2
   16314:	andeq	r0, r0, r8, lsl #27
   16318:	push	{r4, lr}
   1631c:	mov	r4, r0
   16320:	bl	13c60 <g_type_class_peek_parent@plt>
   16324:	ldr	r3, [pc, #20]	; 16340 <g_unichar_xdigit_value@plt+0x24dc>
   16328:	ldr	r2, [pc, #20]	; 16344 <g_unichar_xdigit_value@plt+0x24e0>
   1632c:	add	r3, pc, r3
   16330:	add	r2, pc, r2
   16334:	str	r2, [r4, #72]	; 0x48
   16338:	str	r0, [r3, #60]	; 0x3c
   1633c:	pop	{r4, pc}
   16340:	ldrdeq	fp, [r3], -r4
   16344:	muleq	r0, ip, sp
   16348:	push	{r4, lr}
   1634c:	mov	r4, r0
   16350:	bl	13c60 <g_type_class_peek_parent@plt>
   16354:	ldr	r3, [pc, #20]	; 16370 <g_unichar_xdigit_value@plt+0x250c>
   16358:	ldr	r2, [pc, #20]	; 16374 <g_unichar_xdigit_value@plt+0x2510>
   1635c:	add	r3, pc, r3
   16360:	add	r2, pc, r2
   16364:	str	r2, [r4, #72]	; 0x48
   16368:	str	r0, [r3, #64]	; 0x40
   1636c:	pop	{r4, pc}
   16370:	andeq	fp, r3, r4, lsr #1
   16374:			; <UNDEFINED> instruction: 0x00000db0
   16378:	push	{r4, lr}
   1637c:	mov	r4, r0
   16380:	bl	13c60 <g_type_class_peek_parent@plt>
   16384:	ldr	r3, [pc, #20]	; 163a0 <g_unichar_xdigit_value@plt+0x253c>
   16388:	ldr	r2, [pc, #20]	; 163a4 <g_unichar_xdigit_value@plt+0x2540>
   1638c:	add	r3, pc, r3
   16390:	add	r2, pc, r2
   16394:	str	r2, [r4, #72]	; 0x48
   16398:	str	r0, [r3, #68]	; 0x44
   1639c:	pop	{r4, pc}
   163a0:	andeq	fp, r3, r4, ror r0
   163a4:	andeq	r0, r0, r4, asr #27
   163a8:	push	{r4, lr}
   163ac:	mov	r4, r0
   163b0:	bl	13c60 <g_type_class_peek_parent@plt>
   163b4:	ldr	r3, [pc, #20]	; 163d0 <g_unichar_xdigit_value@plt+0x256c>
   163b8:	ldr	r2, [pc, #20]	; 163d4 <g_unichar_xdigit_value@plt+0x2570>
   163bc:	add	r3, pc, r3
   163c0:	add	r2, pc, r2
   163c4:	str	r2, [r4, #72]	; 0x48
   163c8:	str	r0, [r3, #72]	; 0x48
   163cc:	pop	{r4, pc}
   163d0:	andeq	fp, r3, r4, asr #32
   163d4:	ldrdeq	r0, [r0], -r8
   163d8:	push	{r4, lr}
   163dc:	mov	r4, r0
   163e0:	bl	13c60 <g_type_class_peek_parent@plt>
   163e4:	ldr	r3, [pc, #20]	; 16400 <g_unichar_xdigit_value@plt+0x259c>
   163e8:	ldr	r2, [pc, #20]	; 16404 <g_unichar_xdigit_value@plt+0x25a0>
   163ec:	add	r3, pc, r3
   163f0:	add	r2, pc, r2
   163f4:	str	r2, [r4, #72]	; 0x48
   163f8:	str	r0, [r3, #76]	; 0x4c
   163fc:	pop	{r4, pc}
   16400:	andeq	fp, r3, r4, lsl r0
   16404:	strdeq	r0, [r0], -r4
   16408:	push	{r4, lr}
   1640c:	mov	r4, r0
   16410:	bl	13c60 <g_type_class_peek_parent@plt>
   16414:	ldr	r3, [pc, #20]	; 16430 <g_unichar_xdigit_value@plt+0x25cc>
   16418:	ldr	r2, [pc, #20]	; 16434 <g_unichar_xdigit_value@plt+0x25d0>
   1641c:	add	r3, pc, r3
   16420:	add	r2, pc, r2
   16424:	str	r2, [r4, #72]	; 0x48
   16428:	str	r0, [r3, #80]	; 0x50
   1642c:	pop	{r4, pc}
   16430:	andeq	sl, r3, r4, ror #31
   16434:			; <UNDEFINED> instruction: 0x00000abc
   16438:	push	{r4, lr}
   1643c:	mov	r4, r0
   16440:	bl	13c60 <g_type_class_peek_parent@plt>
   16444:	ldr	r3, [pc, #20]	; 16460 <g_unichar_xdigit_value@plt+0x25fc>
   16448:	ldr	r2, [pc, #20]	; 16464 <g_unichar_xdigit_value@plt+0x2600>
   1644c:	add	r3, pc, r3
   16450:	add	r2, pc, r2
   16454:	str	r2, [r4, #72]	; 0x48
   16458:	str	r0, [r3, #84]	; 0x54
   1645c:	pop	{r4, pc}
   16460:			; <UNDEFINED> instruction: 0x0003afb4
   16464:	strdeq	r2, [r0], -r8
   16468:	push	{r4, lr}
   1646c:	mov	r4, r0
   16470:	bl	13c60 <g_type_class_peek_parent@plt>
   16474:	ldr	r3, [pc, #32]	; 1649c <g_unichar_xdigit_value@plt+0x2638>
   16478:	ldr	r1, [pc, #32]	; 164a0 <g_unichar_xdigit_value@plt+0x263c>
   1647c:	add	r3, pc, r3
   16480:	ldr	r2, [pc, #28]	; 164a4 <g_unichar_xdigit_value@plt+0x2640>
   16484:	add	r1, pc, r1
   16488:	str	r1, [r4, #68]	; 0x44
   1648c:	add	r2, pc, r2
   16490:	str	r2, [r4, #72]	; 0x48
   16494:	str	r0, [r3, #88]	; 0x58
   16498:	pop	{r4, pc}
   1649c:	andeq	sl, r3, r4, lsl #31
   164a0:	andeq	r2, r0, r4, lsr #31
   164a4:			; <UNDEFINED> instruction: 0x00000fbc
   164a8:	push	{r4, lr}
   164ac:	mov	r4, r0
   164b0:	bl	13c60 <g_type_class_peek_parent@plt>
   164b4:	ldr	r3, [pc, #20]	; 164d0 <g_unichar_xdigit_value@plt+0x266c>
   164b8:	ldr	r2, [pc, #20]	; 164d4 <g_unichar_xdigit_value@plt+0x2670>
   164bc:	add	r3, pc, r3
   164c0:	add	r2, pc, r2
   164c4:	str	r2, [r4, #72]	; 0x48
   164c8:	str	r0, [r3, #92]	; 0x5c
   164cc:	pop	{r4, pc}
   164d0:	andeq	sl, r3, r4, asr #30
   164d4:	strdeq	r0, [r0], -ip
   164d8:	push	{r4, lr}
   164dc:	mov	r4, r0
   164e0:	bl	13c60 <g_type_class_peek_parent@plt>
   164e4:	ldr	r3, [pc, #20]	; 16500 <g_unichar_xdigit_value@plt+0x269c>
   164e8:	ldr	r2, [pc, #20]	; 16504 <g_unichar_xdigit_value@plt+0x26a0>
   164ec:	add	r3, pc, r3
   164f0:	add	r2, pc, r2
   164f4:	str	r2, [r4, #68]	; 0x44
   164f8:	str	r0, [r3, #96]	; 0x60
   164fc:	pop	{r4, pc}
   16500:	andeq	sl, r3, r4, lsl pc
   16504:	strdeq	r3, [r0], -r4
   16508:	push	{r4, lr}
   1650c:	mov	r4, r0
   16510:	bl	13c60 <g_type_class_peek_parent@plt>
   16514:	ldr	r3, [pc, #20]	; 16530 <g_unichar_xdigit_value@plt+0x26cc>
   16518:	ldr	r2, [pc, #20]	; 16534 <g_unichar_xdigit_value@plt+0x26d0>
   1651c:	add	r3, pc, r3
   16520:	add	r2, pc, r2
   16524:	str	r2, [r4, #72]	; 0x48
   16528:	str	r0, [r3, #100]	; 0x64
   1652c:	pop	{r4, pc}
   16530:	andeq	sl, r3, r4, ror #29
   16534:	andeq	r3, r0, ip, asr #11
   16538:	push	{r4, lr}
   1653c:	mov	r4, r0
   16540:	bl	13c60 <g_type_class_peek_parent@plt>
   16544:	ldr	r3, [pc, #20]	; 16560 <g_unichar_xdigit_value@plt+0x26fc>
   16548:	ldr	r2, [pc, #20]	; 16564 <g_unichar_xdigit_value@plt+0x2700>
   1654c:	add	r3, pc, r3
   16550:	add	r2, pc, r2
   16554:	str	r2, [r4, #72]	; 0x48
   16558:	str	r0, [r3, #104]	; 0x68
   1655c:	pop	{r4, pc}
   16560:			; <UNDEFINED> instruction: 0x0003aeb4
   16564:	andeq	r0, r0, r0, ror #31
   16568:	push	{r4, lr}
   1656c:	mov	r4, r0
   16570:	bl	13c60 <g_type_class_peek_parent@plt>
   16574:	ldr	r3, [pc, #20]	; 16590 <g_unichar_xdigit_value@plt+0x272c>
   16578:	ldr	r2, [pc, #20]	; 16594 <g_unichar_xdigit_value@plt+0x2730>
   1657c:	add	r3, pc, r3
   16580:	add	r2, pc, r2
   16584:	str	r2, [r4, #72]	; 0x48
   16588:	str	r0, [r3, #108]	; 0x6c
   1658c:	pop	{r4, pc}
   16590:	andeq	sl, r3, r4, lsl #29
   16594:	andeq	r1, r0, r4, lsr #32
   16598:	push	{r4, lr}
   1659c:	mov	r4, r0
   165a0:	bl	13c60 <g_type_class_peek_parent@plt>
   165a4:	ldr	r3, [pc, #20]	; 165c0 <g_unichar_xdigit_value@plt+0x275c>
   165a8:	ldr	r2, [pc, #20]	; 165c4 <g_unichar_xdigit_value@plt+0x2760>
   165ac:	add	r3, pc, r3
   165b0:	add	r2, pc, r2
   165b4:	str	r2, [r4, #72]	; 0x48
   165b8:	str	r0, [r3, #112]	; 0x70
   165bc:	pop	{r4, pc}
   165c0:	andeq	sl, r3, r4, asr lr
   165c4:	andeq	r1, r0, r8, rrx
   165c8:	push	{r4, lr}
   165cc:	mov	r4, r0
   165d0:	bl	13c60 <g_type_class_peek_parent@plt>
   165d4:	ldr	r3, [pc, #20]	; 165f0 <g_unichar_xdigit_value@plt+0x278c>
   165d8:	ldr	r2, [pc, #20]	; 165f4 <g_unichar_xdigit_value@plt+0x2790>
   165dc:	add	r3, pc, r3
   165e0:	add	r2, pc, r2
   165e4:	str	r2, [r4, #72]	; 0x48
   165e8:	str	r0, [r3, #116]	; 0x74
   165ec:	pop	{r4, pc}
   165f0:	andeq	sl, r3, r4, lsr #28
   165f4:	andeq	r3, r0, ip, lsl #31
   165f8:	push	{r4, lr}
   165fc:	mov	r4, r0
   16600:	bl	13c60 <g_type_class_peek_parent@plt>
   16604:	ldr	r3, [pc, #20]	; 16620 <g_unichar_xdigit_value@plt+0x27bc>
   16608:	ldr	r2, [pc, #20]	; 16624 <g_unichar_xdigit_value@plt+0x27c0>
   1660c:	add	r3, pc, r3
   16610:	add	r2, pc, r2
   16614:	str	r2, [r4, #68]	; 0x44
   16618:	str	r0, [r3, #120]	; 0x78
   1661c:	pop	{r4, pc}
   16620:	strdeq	sl, [r3], -r4
   16624:			; <UNDEFINED> instruction: 0x000035bc
   16628:	push	{r4, lr}
   1662c:	mov	r4, r0
   16630:	bl	13c60 <g_type_class_peek_parent@plt>
   16634:	ldr	r3, [pc, #20]	; 16650 <g_unichar_xdigit_value@plt+0x27ec>
   16638:	ldr	r2, [pc, #20]	; 16654 <g_unichar_xdigit_value@plt+0x27f0>
   1663c:	add	r3, pc, r3
   16640:	add	r2, pc, r2
   16644:	str	r2, [r4, #68]	; 0x44
   16648:	str	r0, [r3, #124]	; 0x7c
   1664c:	pop	{r4, pc}
   16650:	andeq	sl, r3, r4, asr #27
   16654:	strdeq	r4, [r0], -ip
   16658:	push	{r4, lr}
   1665c:	mov	r4, r0
   16660:	bl	13c60 <g_type_class_peek_parent@plt>
   16664:	ldr	r3, [pc, #44]	; 16698 <g_unichar_xdigit_value@plt+0x2834>
   16668:	mov	r1, #80	; 0x50
   1666c:	ldr	r2, [pc, #40]	; 1669c <g_unichar_xdigit_value@plt+0x2838>
   16670:	add	r3, pc, r3
   16674:	add	r2, pc, r2
   16678:	str	r2, [r4, #68]	; 0x44
   1667c:	str	r0, [r3, #128]	; 0x80
   16680:	mov	r0, r4
   16684:	bl	13db0 <g_type_check_class_cast@plt>
   16688:	ldr	r3, [pc, #16]	; 166a0 <g_unichar_xdigit_value@plt+0x283c>
   1668c:	add	r3, pc, r3
   16690:	str	r3, [r0, #24]
   16694:	pop	{r4, pc}
   16698:	muleq	r3, r0, sp
   1669c:			; <UNDEFINED> instruction: 0xfffff47c
   166a0:	andeq	r8, r0, r0, lsr r4
   166a4:	push	{r4, lr}
   166a8:	mov	r4, r0
   166ac:	bl	13c60 <g_type_class_peek_parent@plt>
   166b0:	ldr	r3, [pc, #44]	; 166e4 <g_unichar_xdigit_value@plt+0x2880>
   166b4:	mov	r1, #80	; 0x50
   166b8:	ldr	r2, [pc, #40]	; 166e8 <g_unichar_xdigit_value@plt+0x2884>
   166bc:	add	r3, pc, r3
   166c0:	add	r2, pc, r2
   166c4:	str	r2, [r4, #72]	; 0x48
   166c8:	str	r0, [r3, #132]	; 0x84
   166cc:	mov	r0, r4
   166d0:	bl	13db0 <g_type_check_class_cast@plt>
   166d4:	ldr	r3, [pc, #16]	; 166ec <g_unichar_xdigit_value@plt+0x2888>
   166d8:	add	r3, pc, r3
   166dc:	str	r3, [r0, #24]
   166e0:	pop	{r4, pc}
   166e4:	andeq	sl, r3, r4, asr #26
   166e8:	andeq	r0, r0, r8, ror #22
   166ec:	andeq	r1, r0, r4, asr #28
   166f0:	push	{r4, lr}
   166f4:	mov	r4, r0
   166f8:	bl	13c60 <g_type_class_peek_parent@plt>
   166fc:	ldr	r3, [pc, #44]	; 16730 <g_unichar_xdigit_value@plt+0x28cc>
   16700:	mov	r1, #80	; 0x50
   16704:	ldr	r2, [pc, #40]	; 16734 <g_unichar_xdigit_value@plt+0x28d0>
   16708:	add	r3, pc, r3
   1670c:	add	r2, pc, r2
   16710:	str	r2, [r4, #72]	; 0x48
   16714:	str	r0, [r3, #136]	; 0x88
   16718:	mov	r0, r4
   1671c:	bl	13db0 <g_type_check_class_cast@plt>
   16720:	ldr	r3, [pc, #16]	; 16738 <g_unichar_xdigit_value@plt+0x28d4>
   16724:	add	r3, pc, r3
   16728:	str	r3, [r0, #24]
   1672c:	pop	{r4, pc}
   16730:	strdeq	sl, [r3], -r8
   16734:	andeq	r0, r0, ip, lsr #24
   16738:			; <UNDEFINED> instruction: 0x00001ebc
   1673c:	push	{r3, lr}
   16740:	ldr	r3, [r0]
   16744:	ldr	r0, [r3]
   16748:	bl	13564 <g_type_name@plt>
   1674c:	ldr	r2, [pc, #24]	; 1676c <g_unichar_xdigit_value@plt+0x2908>
   16750:	mov	r1, #8
   16754:	add	r2, pc, r2
   16758:	mov	r3, r0
   1675c:	mov	r0, #0
   16760:	bl	13558 <g_log@plt>
   16764:	mov	r0, #0
   16768:	pop	{r3, pc}
   1676c:			; <UNDEFINED> instruction: 0x000229b4
   16770:	push	{r3, lr}
   16774:	ldr	r3, [r0]
   16778:	ldr	r0, [r3]
   1677c:	bl	13564 <g_type_name@plt>
   16780:	ldr	r2, [pc, #24]	; 167a0 <g_unichar_xdigit_value@plt+0x293c>
   16784:	mov	r1, #8
   16788:	add	r2, pc, r2
   1678c:	mov	r3, r0
   16790:	mov	r0, #0
   16794:	bl	13558 <g_log@plt>
   16798:	mov	r0, #0
   1679c:	pop	{r3, pc}
   167a0:	andeq	r2, r2, r0, asr #19
   167a4:	ldr	r3, [r0, #24]
   167a8:	push	{r4, r5, r6, r7, r8, lr}
   167ac:	cmp	r3, #0
   167b0:	mov	r4, r0
   167b4:	sub	sp, sp, #8
   167b8:	moveq	r0, r3
   167bc:	beq	16880 <g_unichar_xdigit_value@plt+0x2a1c>
   167c0:	ldr	r0, [r4, #28]
   167c4:	cmp	r0, #0
   167c8:	beq	16880 <g_unichar_xdigit_value@plt+0x2a1c>
   167cc:	ldr	r2, [r3, #24]
   167d0:	cmp	r2, #0
   167d4:	beq	168bc <g_unichar_xdigit_value@plt+0x2a58>
   167d8:	ldr	r0, [r3, #28]
   167dc:	cmp	r0, #0
   167e0:	beq	16880 <g_unichar_xdigit_value@plt+0x2a1c>
   167e4:	ldr	r0, [r2, #44]	; 0x2c
   167e8:	bl	136f0 <g_strdup@plt>
   167ec:	ldr	r3, [r4, #24]
   167f0:	ldr	r3, [r3, #28]
   167f4:	mov	r5, r0
   167f8:	ldr	r0, [r3, #44]	; 0x2c
   167fc:	bl	136f0 <g_strdup@plt>
   16800:	ldr	r3, [r4, #28]
   16804:	mov	r6, r0
   16808:	ldr	r0, [r3, #44]	; 0x2c
   1680c:	bl	136f0 <g_strdup@plt>
   16810:	mov	r7, r0
   16814:	bl	221c4 <g_unichar_xdigit_value@plt+0xe360>
   16818:	ldr	ip, [r4, #16]
   1681c:	mov	r1, r5
   16820:	mov	r2, r6
   16824:	mov	r3, r7
   16828:	str	ip, [sp]
   1682c:	mov	r8, r0
   16830:	bl	21528 <g_unichar_xdigit_value@plt+0xd6c4>
   16834:	cmp	r0, #0
   16838:	beq	16888 <g_unichar_xdigit_value@plt+0x2a24>
   1683c:	mov	r0, #0
   16840:	mov	r1, #0
   16844:	mov	r2, r0
   16848:	mov	r3, r1
   1684c:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   16850:	cmp	r8, #0
   16854:	mov	r4, r0
   16858:	beq	16864 <g_unichar_xdigit_value@plt+0x2a00>
   1685c:	mov	r0, r8
   16860:	bl	13b94 <g_object_unref@plt>
   16864:	mov	r0, r7
   16868:	bl	1399c <g_free@plt>
   1686c:	mov	r0, r6
   16870:	bl	1399c <g_free@plt>
   16874:	mov	r0, r5
   16878:	bl	1399c <g_free@plt>
   1687c:	mov	r0, r4
   16880:	add	sp, sp, #8
   16884:	pop	{r4, r5, r6, r7, r8, pc}
   16888:	cmp	r8, #0
   1688c:	beq	16898 <g_unichar_xdigit_value@plt+0x2a34>
   16890:	mov	r0, r8
   16894:	bl	13b94 <g_object_unref@plt>
   16898:	mov	r0, r7
   1689c:	bl	1399c <g_free@plt>
   168a0:	mov	r0, r6
   168a4:	bl	1399c <g_free@plt>
   168a8:	mov	r0, r5
   168ac:	bl	1399c <g_free@plt>
   168b0:	mov	r0, #0
   168b4:	add	sp, sp, #8
   168b8:	pop	{r4, r5, r6, r7, r8, pc}
   168bc:	mov	r0, r2
   168c0:	b	16880 <g_unichar_xdigit_value@plt+0x2a1c>
   168c4:	push	{r4, lr}
   168c8:	mov	r4, r0
   168cc:	bl	13c60 <g_type_class_peek_parent@plt>
   168d0:	ldr	r3, [pc, #56]	; 16910 <g_unichar_xdigit_value@plt+0x2aac>
   168d4:	mov	r1, #8
   168d8:	add	r3, pc, r3
   168dc:	str	r0, [r3, #140]	; 0x8c
   168e0:	mov	r0, r4
   168e4:	bl	13a5c <g_type_class_add_private@plt>
   168e8:	ldr	r3, [pc, #36]	; 16914 <g_unichar_xdigit_value@plt+0x2ab0>
   168ec:	mov	r0, r4
   168f0:	mov	r1, #80	; 0x50
   168f4:	add	r3, pc, r3
   168f8:	str	r3, [r4, #72]	; 0x48
   168fc:	bl	13db0 <g_type_check_class_cast@plt>
   16900:	ldr	r3, [pc, #16]	; 16918 <g_unichar_xdigit_value@plt+0x2ab4>
   16904:	add	r3, pc, r3
   16908:	str	r3, [r0, #24]
   1690c:	pop	{r4, pc}
   16910:	andeq	sl, r3, r8, lsr #22
   16914:	andeq	r2, r0, r0, lsl #30
   16918:	andeq	r1, r0, r8, asr pc
   1691c:	push	{r3, r4, r5, lr}
   16920:	mov	r4, r0
   16924:	bl	13c60 <g_type_class_peek_parent@plt>
   16928:	ldr	r3, [pc, #104]	; 16998 <g_unichar_xdigit_value@plt+0x2b34>
   1692c:	mov	r1, #40	; 0x28
   16930:	ldr	r2, [pc, #100]	; 1699c <g_unichar_xdigit_value@plt+0x2b38>
   16934:	add	r3, pc, r3
   16938:	ldr	r5, [pc, #96]	; 169a0 <g_unichar_xdigit_value@plt+0x2b3c>
   1693c:	add	r2, pc, r2
   16940:	str	r2, [r4, #4]
   16944:	add	r5, pc, r5
   16948:	str	r0, [r3, #144]	; 0x90
   1694c:	mov	r0, r4
   16950:	bl	13a5c <g_type_class_add_private@plt>
   16954:	ldr	ip, [pc, #72]	; 169a4 <g_unichar_xdigit_value@plt+0x2b40>
   16958:	ldr	r0, [pc, #72]	; 169a8 <g_unichar_xdigit_value@plt+0x2b44>
   1695c:	ldr	r1, [pc, #72]	; 169ac <g_unichar_xdigit_value@plt+0x2b48>
   16960:	add	ip, pc, ip
   16964:	ldr	r2, [pc, #68]	; 169b0 <g_unichar_xdigit_value@plt+0x2b4c>
   16968:	add	r0, pc, r0
   1696c:	ldr	r3, [pc, #64]	; 169b4 <g_unichar_xdigit_value@plt+0x2b50>
   16970:	add	r1, pc, r1
   16974:	add	r2, pc, r2
   16978:	str	r5, [r4, #8]
   1697c:	add	r3, pc, r3
   16980:	str	ip, [r4, #12]
   16984:	str	r0, [r4, #16]
   16988:	str	r1, [r4, #20]
   1698c:	str	r2, [r4, #24]
   16990:	str	r3, [r4, #28]
   16994:	pop	{r3, r4, r5, pc}
   16998:	andeq	sl, r3, ip, asr #21
   1699c:	andeq	r4, r0, ip, lsl #3
   169a0:	muleq	r0, ip, r4
   169a4:	andeq	r0, r0, r4, asr #8
   169a8:	andeq	r0, r0, r8, ror #7
   169ac:	andeq	r0, r0, r4, lsr #7
   169b0:	andeq	r0, r0, r4, ror #6
   169b4:			; <UNDEFINED> instruction: 0x000002b8
   169b8:	push	{r4, lr}
   169bc:	subs	r4, r0, #0
   169c0:	beq	169dc <g_unichar_xdigit_value@plt+0x2b78>
   169c4:	ldr	r3, [r4, #8]
   169c8:	ldr	r3, [r3, #16]
   169cc:	add	r0, r3, r3, lsl #1
   169d0:	add	r3, r3, r0, lsl #2
   169d4:	add	r0, r1, r3
   169d8:	pop	{r4, pc}
   169dc:	ldr	r1, [pc, #24]	; 169fc <g_unichar_xdigit_value@plt+0x2b98>
   169e0:	ldr	r2, [pc, #24]	; 16a00 <g_unichar_xdigit_value@plt+0x2b9c>
   169e4:	add	r1, pc, r1
   169e8:	add	r2, pc, r2
   169ec:	add	r1, r1, #28
   169f0:	bl	13450 <g_return_if_fail_warning@plt>
   169f4:	mov	r0, r4
   169f8:	pop	{r4, pc}
   169fc:	ldrdeq	r1, [r2], -r8
   16a00:	strdeq	r1, [r2], -ip
   16a04:	push	{r4, lr}
   16a08:	subs	r4, r0, #0
   16a0c:	beq	16aa8 <g_unichar_xdigit_value@plt+0x2c44>
   16a10:	sub	r3, r1, #14
   16a14:	cmp	r3, #1
   16a18:	bls	16a98 <g_unichar_xdigit_value@plt+0x2c34>
   16a1c:	cmp	r1, #16
   16a20:	beq	16aa0 <g_unichar_xdigit_value@plt+0x2c3c>
   16a24:	sub	r3, r1, #17
   16a28:	cmp	r3, #1
   16a2c:	bls	16ad0 <g_unichar_xdigit_value@plt+0x2c6c>
   16a30:	cmp	r1, #26
   16a34:	beq	16ac8 <g_unichar_xdigit_value@plt+0x2c64>
   16a38:	sub	r3, r1, #23
   16a3c:	cmp	r3, #2
   16a40:	bls	16ad8 <g_unichar_xdigit_value@plt+0x2c74>
   16a44:	cmp	r1, #35	; 0x23
   16a48:	beq	16ae0 <g_unichar_xdigit_value@plt+0x2c7c>
   16a4c:	sub	r3, r1, #27
   16a50:	cmp	r3, #2
   16a54:	bls	16ae8 <g_unichar_xdigit_value@plt+0x2c84>
   16a58:	cmp	r1, #48	; 0x30
   16a5c:	beq	16af0 <g_unichar_xdigit_value@plt+0x2c8c>
   16a60:	cmp	r1, #46	; 0x2e
   16a64:	beq	16ad8 <g_unichar_xdigit_value@plt+0x2c74>
   16a68:	cmp	r1, #47	; 0x2f
   16a6c:	beq	16af8 <g_unichar_xdigit_value@plt+0x2c94>
   16a70:	cmp	r1, #31
   16a74:	beq	16b00 <g_unichar_xdigit_value@plt+0x2c9c>
   16a78:	cmp	r1, #37	; 0x25
   16a7c:	beq	16b00 <g_unichar_xdigit_value@plt+0x2c9c>
   16a80:	cmp	r1, #36	; 0x24
   16a84:	beq	16b08 <g_unichar_xdigit_value@plt+0x2ca4>
   16a88:	cmp	r1, #30
   16a8c:	movne	r0, #2
   16a90:	moveq	r0, #0
   16a94:	pop	{r4, pc}
   16a98:	mov	r0, #3
   16a9c:	pop	{r4, pc}
   16aa0:	mov	r0, #4
   16aa4:	pop	{r4, pc}
   16aa8:	ldr	r1, [pc, #96]	; 16b10 <g_unichar_xdigit_value@plt+0x2cac>
   16aac:	ldr	r2, [pc, #96]	; 16b14 <g_unichar_xdigit_value@plt+0x2cb0>
   16ab0:	add	r1, pc, r1
   16ab4:	add	r2, pc, r2
   16ab8:	add	r1, r1, #56	; 0x38
   16abc:	bl	13450 <g_return_if_fail_warning@plt>
   16ac0:	mov	r0, r4
   16ac4:	pop	{r4, pc}
   16ac8:	mov	r0, #6
   16acc:	pop	{r4, pc}
   16ad0:	mov	r0, #5
   16ad4:	pop	{r4, pc}
   16ad8:	mov	r0, #10
   16adc:	pop	{r4, pc}
   16ae0:	mov	r0, #7
   16ae4:	pop	{r4, pc}
   16ae8:	mov	r0, #8
   16aec:	pop	{r4, pc}
   16af0:	mov	r0, #9
   16af4:	pop	{r4, pc}
   16af8:	mov	r0, #11
   16afc:	pop	{r4, pc}
   16b00:	mov	r0, #12
   16b04:	pop	{r4, pc}
   16b08:	mov	r0, #1
   16b0c:	pop	{r4, pc}
   16b10:	andeq	r1, r2, ip, lsl #24
   16b14:	andeq	r1, r2, r0, lsr r6
   16b18:	push	{r4, lr}
   16b1c:	subs	r4, r0, #0
   16b20:	beq	16b44 <g_unichar_xdigit_value@plt+0x2ce0>
   16b24:	cmp	r1, #8
   16b28:	beq	16b3c <g_unichar_xdigit_value@plt+0x2cd8>
   16b2c:	subs	r3, r1, #10
   16b30:	rsbs	r0, r3, #0
   16b34:	adcs	r0, r0, r3
   16b38:	pop	{r4, pc}
   16b3c:	mov	r0, #0
   16b40:	pop	{r4, pc}
   16b44:	ldr	r1, [pc, #24]	; 16b64 <g_unichar_xdigit_value@plt+0x2d00>
   16b48:	ldr	r2, [pc, #24]	; 16b68 <g_unichar_xdigit_value@plt+0x2d04>
   16b4c:	add	r1, pc, r1
   16b50:	add	r2, pc, r2
   16b54:	add	r1, r1, #80	; 0x50
   16b58:	bl	13450 <g_return_if_fail_warning@plt>
   16b5c:	mov	r0, r4
   16b60:	pop	{r4, pc}
   16b64:	andeq	r1, r2, r0, ror fp
   16b68:	muleq	r2, r4, r5
   16b6c:	push	{r4, lr}
   16b70:	subs	r4, r0, #0
   16b74:	beq	16b98 <g_unichar_xdigit_value@plt+0x2d34>
   16b78:	cmp	r1, #0
   16b7c:	beq	16bb8 <g_unichar_xdigit_value@plt+0x2d54>
   16b80:	ldr	r1, [r1, #28]
   16b84:	bl	16a04 <g_unichar_xdigit_value@plt+0x2ba0>
   16b88:	mov	r1, r0
   16b8c:	mov	r0, r4
   16b90:	pop	{r4, lr}
   16b94:	b	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   16b98:	ldr	r1, [pc, #60]	; 16bdc <g_unichar_xdigit_value@plt+0x2d78>
   16b9c:	ldr	r2, [pc, #60]	; 16be0 <g_unichar_xdigit_value@plt+0x2d7c>
   16ba0:	add	r1, pc, r1
   16ba4:	add	r2, pc, r2
   16ba8:	add	r1, r1, #108	; 0x6c
   16bac:	bl	13450 <g_return_if_fail_warning@plt>
   16bb0:	mov	r0, #0
   16bb4:	pop	{r4, pc}
   16bb8:	ldr	r3, [pc, #36]	; 16be4 <g_unichar_xdigit_value@plt+0x2d80>
   16bbc:	mov	r0, r1
   16bc0:	ldr	r2, [pc, #32]	; 16be8 <g_unichar_xdigit_value@plt+0x2d84>
   16bc4:	add	r3, pc, r3
   16bc8:	add	r2, pc, r2
   16bcc:	add	r1, r3, #108	; 0x6c
   16bd0:	bl	13450 <g_return_if_fail_warning@plt>
   16bd4:	mov	r0, #0
   16bd8:	pop	{r4, pc}
   16bdc:	andeq	r1, r2, ip, lsl fp
   16be0:	andeq	r1, r2, r0, asr #10
   16be4:	strdeq	r1, [r2], -r8
   16be8:	andeq	r2, r2, r0, asr #11
   16bec:	push	{r4, lr}
   16bf0:	subs	r4, r0, #0
   16bf4:	beq	16c14 <g_unichar_xdigit_value@plt+0x2db0>
   16bf8:	ldr	r3, [r4, #8]
   16bfc:	ldr	r4, [r3, #16]
   16c00:	bl	16a04 <g_unichar_xdigit_value@plt+0x2ba0>
   16c04:	add	r3, r4, r4, lsl #1
   16c08:	add	r4, r4, r3, lsl #2
   16c0c:	add	r0, r0, r4
   16c10:	pop	{r4, pc}
   16c14:	ldr	r1, [pc, #24]	; 16c34 <g_unichar_xdigit_value@plt+0x2dd0>
   16c18:	ldr	r2, [pc, #24]	; 16c38 <g_unichar_xdigit_value@plt+0x2dd4>
   16c1c:	add	r1, pc, r1
   16c20:	add	r2, pc, r2
   16c24:	add	r1, r1, #136	; 0x88
   16c28:	bl	13450 <g_return_if_fail_warning@plt>
   16c2c:	mov	r0, r4
   16c30:	pop	{r4, pc}
   16c34:	andeq	r1, r2, r0, lsr #21
   16c38:	andeq	r1, r2, r4, asr #9
   16c3c:	subs	r0, r1, #0
   16c40:	push	{r3, lr}
   16c44:	beq	16c60 <g_unichar_xdigit_value@plt+0x2dfc>
   16c48:	cmp	r2, #0
   16c4c:	beq	16c80 <g_unichar_xdigit_value@plt+0x2e1c>
   16c50:	cmp	r3, #0
   16c54:	beq	16ca4 <g_unichar_xdigit_value@plt+0x2e40>
   16c58:	mov	r0, #0
   16c5c:	pop	{r3, pc}
   16c60:	ldr	r1, [pc, #96]	; 16cc8 <g_unichar_xdigit_value@plt+0x2e64>
   16c64:	ldr	r2, [pc, #96]	; 16ccc <g_unichar_xdigit_value@plt+0x2e68>
   16c68:	add	r1, pc, r1
   16c6c:	add	r2, pc, r2
   16c70:	add	r1, r1, #164	; 0xa4
   16c74:	bl	13450 <g_return_if_fail_warning@plt>
   16c78:	mov	r0, #0
   16c7c:	pop	{r3, pc}
   16c80:	ldr	r1, [pc, #72]	; 16cd0 <g_unichar_xdigit_value@plt+0x2e6c>
   16c84:	mov	r0, r2
   16c88:	ldr	r2, [pc, #68]	; 16cd4 <g_unichar_xdigit_value@plt+0x2e70>
   16c8c:	add	r1, pc, r1
   16c90:	add	r2, pc, r2
   16c94:	add	r1, r1, #164	; 0xa4
   16c98:	bl	13450 <g_return_if_fail_warning@plt>
   16c9c:	mov	r0, #0
   16ca0:	pop	{r3, pc}
   16ca4:	ldr	r1, [pc, #44]	; 16cd8 <g_unichar_xdigit_value@plt+0x2e74>
   16ca8:	mov	r0, r3
   16cac:	ldr	r2, [pc, #40]	; 16cdc <g_unichar_xdigit_value@plt+0x2e78>
   16cb0:	add	r1, pc, r1
   16cb4:	add	r2, pc, r2
   16cb8:	add	r1, r1, #164	; 0xa4
   16cbc:	bl	13450 <g_return_if_fail_warning@plt>
   16cc0:	mov	r0, #0
   16cc4:	pop	{r3, pc}
   16cc8:	andeq	r1, r2, r4, asr sl
   16ccc:	strdeq	r1, [r2], -r4
   16cd0:	andeq	r1, r2, r0, lsr sl
   16cd4:	ldrdeq	r1, [r2], -ip
   16cd8:	andeq	r1, r2, ip, lsl #20
   16cdc:	andeq	r1, r2, r8, asr #15
   16ce0:	subs	r0, r1, #0
   16ce4:	push	{r3, lr}
   16ce8:	beq	16cf4 <g_unichar_xdigit_value@plt+0x2e90>
   16cec:	mov	r0, #0
   16cf0:	pop	{r3, pc}
   16cf4:	ldr	r1, [pc, #24]	; 16d14 <g_unichar_xdigit_value@plt+0x2eb0>
   16cf8:	ldr	r2, [pc, #24]	; 16d18 <g_unichar_xdigit_value@plt+0x2eb4>
   16cfc:	add	r1, pc, r1
   16d00:	add	r2, pc, r2
   16d04:	add	r1, r1, #184	; 0xb8
   16d08:	bl	13450 <g_return_if_fail_warning@plt>
   16d0c:	mov	r0, #0
   16d10:	pop	{r3, pc}
   16d14:	andeq	r1, r2, r0, asr #19
   16d18:	ldrdeq	r4, [r2], -r0
   16d1c:	subs	r0, r1, #0
   16d20:	push	{r3, lr}
   16d24:	beq	16d30 <g_unichar_xdigit_value@plt+0x2ecc>
   16d28:	mov	r0, #0
   16d2c:	pop	{r3, pc}
   16d30:	ldr	r1, [pc, #24]	; 16d50 <g_unichar_xdigit_value@plt+0x2eec>
   16d34:	ldr	r2, [pc, #24]	; 16d54 <g_unichar_xdigit_value@plt+0x2ef0>
   16d38:	add	r1, pc, r1
   16d3c:	add	r2, pc, r2
   16d40:	add	r1, r1, #212	; 0xd4
   16d44:	bl	13450 <g_return_if_fail_warning@plt>
   16d48:	mov	r0, #0
   16d4c:	pop	{r3, pc}
   16d50:	andeq	r1, r2, r4, lsl #19
   16d54:	muleq	r2, r4, r8
   16d58:	subs	r0, r1, #0
   16d5c:	beq	16d84 <g_unichar_xdigit_value@plt+0x2f20>
   16d60:	cmp	r2, #0
   16d64:	bxne	lr
   16d68:	ldr	r1, [pc, #44]	; 16d9c <g_unichar_xdigit_value@plt+0x2f38>
   16d6c:	mov	r0, r2
   16d70:	ldr	r2, [pc, #40]	; 16da0 <g_unichar_xdigit_value@plt+0x2f3c>
   16d74:	add	r1, pc, r1
   16d78:	add	r2, pc, r2
   16d7c:	add	r1, r1, #244	; 0xf4
   16d80:	b	13450 <g_return_if_fail_warning@plt>
   16d84:	ldr	r1, [pc, #24]	; 16da4 <g_unichar_xdigit_value@plt+0x2f40>
   16d88:	ldr	r2, [pc, #24]	; 16da8 <g_unichar_xdigit_value@plt+0x2f44>
   16d8c:	add	r1, pc, r1
   16d90:	add	r2, pc, r2
   16d94:	add	r1, r1, #244	; 0xf4
   16d98:	b	13450 <g_return_if_fail_warning@plt>
   16d9c:	andeq	r1, r2, r8, asr #18
   16da0:	andeq	r1, r2, r8, ror #13
   16da4:	andeq	r1, r2, r0, lsr r9
   16da8:	andeq	r4, r2, r0, asr #16
   16dac:	subs	r0, r1, #0
   16db0:	push	{r3, lr}
   16db4:	beq	16dc0 <g_unichar_xdigit_value@plt+0x2f5c>
   16db8:	mov	r0, #0
   16dbc:	pop	{r3, pc}
   16dc0:	ldr	r1, [pc, #24]	; 16de0 <g_unichar_xdigit_value@plt+0x2f7c>
   16dc4:	ldr	r2, [pc, #24]	; 16de4 <g_unichar_xdigit_value@plt+0x2f80>
   16dc8:	add	r1, pc, r1
   16dcc:	add	r2, pc, r2
   16dd0:	add	r1, r1, #272	; 0x110
   16dd4:	bl	13450 <g_return_if_fail_warning@plt>
   16dd8:	mov	r0, #0
   16ddc:	pop	{r3, pc}
   16de0:	strdeq	r1, [r2], -r4
   16de4:	andeq	r4, r2, r4, lsl #16
   16de8:	subs	r0, r1, #0
   16dec:	push	{r3, lr}
   16df0:	beq	16dfc <g_unichar_xdigit_value@plt+0x2f98>
   16df4:	mov	r0, #0
   16df8:	pop	{r3, pc}
   16dfc:	ldr	r1, [pc, #24]	; 16e1c <g_unichar_xdigit_value@plt+0x2fb8>
   16e00:	ldr	r2, [pc, #24]	; 16e20 <g_unichar_xdigit_value@plt+0x2fbc>
   16e04:	add	r1, pc, r1
   16e08:	add	r2, pc, r2
   16e0c:	add	r1, r1, #300	; 0x12c
   16e10:	bl	13450 <g_return_if_fail_warning@plt>
   16e14:	mov	r0, #0
   16e18:	pop	{r3, pc}
   16e1c:			; <UNDEFINED> instruction: 0x000218b8
   16e20:	andeq	r4, r2, r8, asr #15
   16e24:	cmp	r0, #0
   16e28:	mov	r3, r1
   16e2c:	beq	16e40 <g_unichar_xdigit_value@plt+0x2fdc>
   16e30:	cmp	r1, #0
   16e34:	beq	16e58 <g_unichar_xdigit_value@plt+0x2ff4>
   16e38:	mov	r2, #0
   16e3c:	b	15c14 <g_unichar_xdigit_value@plt+0x1db0>
   16e40:	ldr	r1, [pc, #44]	; 16e74 <g_unichar_xdigit_value@plt+0x3010>
   16e44:	ldr	r2, [pc, #44]	; 16e78 <g_unichar_xdigit_value@plt+0x3014>
   16e48:	add	r1, pc, r1
   16e4c:	add	r2, pc, r2
   16e50:	add	r1, r1, #332	; 0x14c
   16e54:	b	13450 <g_return_if_fail_warning@plt>
   16e58:	ldr	r1, [pc, #28]	; 16e7c <g_unichar_xdigit_value@plt+0x3018>
   16e5c:	mov	r0, r3
   16e60:	ldr	r2, [pc, #24]	; 16e80 <g_unichar_xdigit_value@plt+0x301c>
   16e64:	add	r1, pc, r1
   16e68:	add	r2, pc, r2
   16e6c:	add	r1, r1, #332	; 0x14c
   16e70:	b	13450 <g_return_if_fail_warning@plt>
   16e74:	andeq	r1, r2, r4, ror r8
   16e78:	muleq	r2, r8, r2
   16e7c:	andeq	r1, r2, r8, asr r8
   16e80:	muleq	r2, r0, r2
   16e84:	cmp	r0, #0
   16e88:	mov	r3, r1
   16e8c:	beq	16ea0 <g_unichar_xdigit_value@plt+0x303c>
   16e90:	cmp	r1, #0
   16e94:	beq	16eb8 <g_unichar_xdigit_value@plt+0x3054>
   16e98:	mov	r2, #1
   16e9c:	b	15c14 <g_unichar_xdigit_value@plt+0x1db0>
   16ea0:	ldr	r1, [pc, #44]	; 16ed4 <g_unichar_xdigit_value@plt+0x3070>
   16ea4:	ldr	r2, [pc, #44]	; 16ed8 <g_unichar_xdigit_value@plt+0x3074>
   16ea8:	add	r1, pc, r1
   16eac:	add	r2, pc, r2
   16eb0:	add	r1, r1, #356	; 0x164
   16eb4:	b	13450 <g_return_if_fail_warning@plt>
   16eb8:	ldr	r1, [pc, #28]	; 16edc <g_unichar_xdigit_value@plt+0x3078>
   16ebc:	mov	r0, r3
   16ec0:	ldr	r2, [pc, #24]	; 16ee0 <g_unichar_xdigit_value@plt+0x307c>
   16ec4:	add	r1, pc, r1
   16ec8:	add	r2, pc, r2
   16ecc:	add	r1, r1, #356	; 0x164
   16ed0:	b	13450 <g_return_if_fail_warning@plt>
   16ed4:	andeq	r1, r2, r4, lsl r8
   16ed8:	andeq	r1, r2, r8, lsr r2
   16edc:	strdeq	r1, [r2], -r8
   16ee0:	andeq	r2, r2, r0, lsr r2
   16ee4:	subs	r0, r1, #0
   16ee8:	push	{r3, lr}
   16eec:	beq	16f04 <g_unichar_xdigit_value@plt+0x30a0>
   16ef0:	cmp	r2, #0
   16ef4:	beq	16f24 <g_unichar_xdigit_value@plt+0x30c0>
   16ef8:	mov	r1, r2
   16efc:	pop	{r3, lr}
   16f00:	b	26650 <g_unichar_xdigit_value@plt+0x127ec>
   16f04:	ldr	r1, [pc, #60]	; 16f48 <g_unichar_xdigit_value@plt+0x30e4>
   16f08:	ldr	r2, [pc, #60]	; 16f4c <g_unichar_xdigit_value@plt+0x30e8>
   16f0c:	add	r1, pc, r1
   16f10:	add	r2, pc, r2
   16f14:	add	r1, r1, #388	; 0x184
   16f18:	bl	13450 <g_return_if_fail_warning@plt>
   16f1c:	mov	r0, #0
   16f20:	pop	{r3, pc}
   16f24:	ldr	r1, [pc, #36]	; 16f50 <g_unichar_xdigit_value@plt+0x30ec>
   16f28:	mov	r0, r2
   16f2c:	ldr	r2, [pc, #32]	; 16f54 <g_unichar_xdigit_value@plt+0x30f0>
   16f30:	add	r1, pc, r1
   16f34:	add	r2, pc, r2
   16f38:	add	r1, r1, #388	; 0x184
   16f3c:	bl	13450 <g_return_if_fail_warning@plt>
   16f40:	mov	r0, #0
   16f44:	pop	{r3, pc}
   16f48:			; <UNDEFINED> instruction: 0x000217b0
   16f4c:	andeq	r2, r2, r8, lsl #5
   16f50:	andeq	r1, r2, ip, lsl #15
   16f54:	andeq	r2, r2, r0, ror r2
   16f58:	push	{r4, r5, r6, r7, r8, lr}
   16f5c:	subs	r6, r0, #0
   16f60:	ldr	r7, [pc, #144]	; 16ff8 <g_unichar_xdigit_value@plt+0x3194>
   16f64:	mov	r8, r1
   16f68:	mov	r4, r2
   16f6c:	add	r7, pc, r7
   16f70:	beq	16fc8 <g_unichar_xdigit_value@plt+0x3164>
   16f74:	ldr	r5, [r1]
   16f78:	add	r0, r6, r5
   16f7c:	bl	135e8 <g_utf8_get_char@plt>
   16f80:	cmp	r0, #0
   16f84:	beq	16fb8 <g_unichar_xdigit_value@plt+0x3154>
   16f88:	ldr	r2, [pc, #108]	; 16ffc <g_unichar_xdigit_value@plt+0x3198>
   16f8c:	cmp	r4, #0
   16f90:	ldrb	r3, [r6, r5]
   16f94:	ldr	r2, [r7, r2]
   16f98:	ldr	r2, [r2]
   16f9c:	ldrb	r3, [r2, r3]
   16fa0:	add	r5, r3, r5
   16fa4:	str	r5, [r8]
   16fa8:	beq	16fe8 <g_unichar_xdigit_value@plt+0x3184>
   16fac:	str	r0, [r4]
   16fb0:	mov	r0, #1
   16fb4:	pop	{r4, r5, r6, r7, r8, pc}
   16fb8:	cmp	r4, #0
   16fbc:	beq	16ff0 <g_unichar_xdigit_value@plt+0x318c>
   16fc0:	str	r0, [r4]
   16fc4:	pop	{r4, r5, r6, r7, r8, pc}
   16fc8:	ldr	r1, [pc, #48]	; 17000 <g_unichar_xdigit_value@plt+0x319c>
   16fcc:	ldr	r2, [pc, #48]	; 17004 <g_unichar_xdigit_value@plt+0x31a0>
   16fd0:	add	r1, pc, r1
   16fd4:	add	r2, pc, r2
   16fd8:	add	r1, r1, #416	; 0x1a0
   16fdc:	bl	13450 <g_return_if_fail_warning@plt>
   16fe0:	mov	r0, r6
   16fe4:	pop	{r4, r5, r6, r7, r8, pc}
   16fe8:	mov	r0, #1
   16fec:	pop	{r4, r5, r6, r7, r8, pc}
   16ff0:	mov	r0, r4
   16ff4:	pop	{r4, r5, r6, r7, r8, pc}
   16ff8:	andeq	sl, r3, ip, lsl #1
   16ffc:	muleq	r0, ip, r3
   17000:	andeq	r1, r2, ip, ror #13
   17004:	andeq	r1, r2, r0, lsl r1
   17008:	push	{r4, lr}
   1700c:	subs	r4, r1, #0
   17010:	beq	17020 <g_unichar_xdigit_value@plt+0x31bc>
   17014:	mov	r0, r4
   17018:	pop	{r4, lr}
   1701c:	b	25950 <g_unichar_xdigit_value@plt+0x11aec>
   17020:	ldr	r1, [pc, #28]	; 17044 <g_unichar_xdigit_value@plt+0x31e0>
   17024:	mov	r0, r4
   17028:	ldr	r2, [pc, #24]	; 17048 <g_unichar_xdigit_value@plt+0x31e4>
   1702c:	add	r1, pc, r1
   17030:	add	r2, pc, r2
   17034:	add	r1, r1, #440	; 0x1b8
   17038:	bl	13450 <g_return_if_fail_warning@plt>
   1703c:	mov	r0, r4
   17040:	pop	{r4, pc}
   17044:	muleq	r2, r0, r6
   17048:	andeq	r2, r2, r4, ror r1
   1704c:	push	{r4, lr}
   17050:	subs	r4, r1, #0
   17054:	beq	17064 <g_unichar_xdigit_value@plt+0x3200>
   17058:	mov	r0, r4
   1705c:	pop	{r4, lr}
   17060:	b	259a4 <g_unichar_xdigit_value@plt+0x11b40>
   17064:	ldr	r1, [pc, #28]	; 17088 <g_unichar_xdigit_value@plt+0x3224>
   17068:	mov	r0, r4
   1706c:	ldr	r2, [pc, #24]	; 1708c <g_unichar_xdigit_value@plt+0x3228>
   17070:	add	r1, pc, r1
   17074:	add	r2, pc, r2
   17078:	add	r1, r1, #472	; 0x1d8
   1707c:	bl	13450 <g_return_if_fail_warning@plt>
   17080:	mov	r0, r4
   17084:	pop	{r4, pc}
   17088:	andeq	r1, r2, ip, asr #12
   1708c:	andeq	r2, r2, r0, lsr r1
   17090:	push	{r4, lr}
   17094:	subs	r4, r1, #0
   17098:	beq	170a8 <g_unichar_xdigit_value@plt+0x3244>
   1709c:	mov	r0, r4
   170a0:	pop	{r4, lr}
   170a4:	b	25ccc <g_unichar_xdigit_value@plt+0x11e68>
   170a8:	ldr	r1, [pc, #28]	; 170cc <g_unichar_xdigit_value@plt+0x3268>
   170ac:	mov	r0, r4
   170b0:	ldr	r2, [pc, #24]	; 170d0 <g_unichar_xdigit_value@plt+0x326c>
   170b4:	add	r1, pc, r1
   170b8:	add	r2, pc, r2
   170bc:	add	r1, r1, #508	; 0x1fc
   170c0:	bl	13450 <g_return_if_fail_warning@plt>
   170c4:	mov	r0, r4
   170c8:	pop	{r4, pc}
   170cc:	andeq	r1, r2, r8, lsl #12
   170d0:	andeq	r2, r2, ip, ror #1
   170d4:	push	{r4, lr}
   170d8:	subs	r4, r1, #0
   170dc:	beq	170ec <g_unichar_xdigit_value@plt+0x3288>
   170e0:	mov	r0, r4
   170e4:	pop	{r4, lr}
   170e8:	b	25d30 <g_unichar_xdigit_value@plt+0x11ecc>
   170ec:	ldr	r1, [pc, #28]	; 17110 <g_unichar_xdigit_value@plt+0x32ac>
   170f0:	mov	r0, r4
   170f4:	ldr	r2, [pc, #24]	; 17114 <g_unichar_xdigit_value@plt+0x32b0>
   170f8:	add	r1, pc, r1
   170fc:	add	r2, pc, r2
   17100:	add	r1, r1, #532	; 0x214
   17104:	bl	13450 <g_return_if_fail_warning@plt>
   17108:	mov	r0, r4
   1710c:	pop	{r4, pc}
   17110:	andeq	r1, r2, r4, asr #11
   17114:	andeq	r2, r2, r8, lsr #1
   17118:	push	{r4, lr}
   1711c:	subs	r4, r1, #0
   17120:	beq	17130 <g_unichar_xdigit_value@plt+0x32cc>
   17124:	mov	r0, r4
   17128:	pop	{r4, lr}
   1712c:	b	265e8 <g_unichar_xdigit_value@plt+0x12784>
   17130:	ldr	r1, [pc, #28]	; 17154 <g_unichar_xdigit_value@plt+0x32f0>
   17134:	mov	r0, r4
   17138:	ldr	r2, [pc, #24]	; 17158 <g_unichar_xdigit_value@plt+0x32f4>
   1713c:	add	r1, pc, r1
   17140:	add	r2, pc, r2
   17144:	add	r1, r1, #560	; 0x230
   17148:	bl	13450 <g_return_if_fail_warning@plt>
   1714c:	mov	r0, r4
   17150:	pop	{r4, pc}
   17154:	andeq	r1, r2, r0, lsl #11
   17158:	andeq	r2, r2, r4, rrx
   1715c:	push	{r4, lr}
   17160:	subs	r4, r1, #0
   17164:	beq	17174 <g_unichar_xdigit_value@plt+0x3310>
   17168:	mov	r0, r4
   1716c:	pop	{r4, lr}
   17170:	b	25d94 <g_unichar_xdigit_value@plt+0x11f30>
   17174:	ldr	r1, [pc, #28]	; 17198 <g_unichar_xdigit_value@plt+0x3334>
   17178:	mov	r0, r4
   1717c:	ldr	r2, [pc, #24]	; 1719c <g_unichar_xdigit_value@plt+0x3338>
   17180:	add	r1, pc, r1
   17184:	add	r2, pc, r2
   17188:	add	r1, r1, #600	; 0x258
   1718c:	bl	13450 <g_return_if_fail_warning@plt>
   17190:	mov	r0, r4
   17194:	pop	{r4, pc}
   17198:	andeq	r1, r2, ip, lsr r5
   1719c:	andeq	r2, r2, r0, lsr #32
   171a0:	push	{r4, lr}
   171a4:	subs	r4, r1, #0
   171a8:	beq	171c0 <g_unichar_xdigit_value@plt+0x335c>
   171ac:	mov	r0, r4
   171b0:	mov	r2, #100	; 0x64
   171b4:	mov	r3, #0
   171b8:	pop	{r4, lr}
   171bc:	b	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   171c0:	ldr	r1, [pc, #28]	; 171e4 <g_unichar_xdigit_value@plt+0x3380>
   171c4:	mov	r0, r4
   171c8:	ldr	r2, [pc, #24]	; 171e8 <g_unichar_xdigit_value@plt+0x3384>
   171cc:	add	r1, pc, r1
   171d0:	add	r2, pc, r2
   171d4:	add	r1, r1, #624	; 0x270
   171d8:	bl	13450 <g_return_if_fail_warning@plt>
   171dc:	mov	r0, r4
   171e0:	pop	{r4, pc}
   171e4:	strdeq	r1, [r2], -r0
   171e8:	ldrdeq	r1, [r2], -r4
   171ec:	push	{r4, lr}
   171f0:	subs	r4, r1, #0
   171f4:	beq	17204 <g_unichar_xdigit_value@plt+0x33a0>
   171f8:	mov	r0, r4
   171fc:	pop	{r4, lr}
   17200:	b	2673c <g_unichar_xdigit_value@plt+0x128d8>
   17204:	ldr	r1, [pc, #28]	; 17228 <g_unichar_xdigit_value@plt+0x33c4>
   17208:	mov	r0, r4
   1720c:	ldr	r2, [pc, #24]	; 1722c <g_unichar_xdigit_value@plt+0x33c8>
   17210:	add	r1, pc, r1
   17214:	add	r2, pc, r2
   17218:	add	r1, r1, #652	; 0x28c
   1721c:	bl	13450 <g_return_if_fail_warning@plt>
   17220:	mov	r0, r4
   17224:	pop	{r4, pc}
   17228:	andeq	r1, r2, ip, lsr #9
   1722c:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   17230:	push	{r4, r5, r6, lr}
   17234:	subs	r5, r1, #0
   17238:	mov	r4, r2
   1723c:	beq	172e8 <g_unichar_xdigit_value@plt+0x3484>
   17240:	cmp	r2, #0
   17244:	beq	1730c <g_unichar_xdigit_value@plt+0x34a8>
   17248:	ldr	r3, [r0, #56]	; 0x38
   1724c:	cmp	r3, #0
   17250:	beq	172d8 <g_unichar_xdigit_value@plt+0x3474>
   17254:	mov	r1, #0
   17258:	mov	r2, #0
   1725c:	mov	r3, #0
   17260:	mov	r0, #100	; 0x64
   17264:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   17268:	mov	r6, r0
   1726c:	mov	r0, r4
   17270:	mov	r1, r6
   17274:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   17278:	cmp	r6, #0
   1727c:	mov	r4, r0
   17280:	beq	1728c <g_unichar_xdigit_value@plt+0x3428>
   17284:	mov	r0, r6
   17288:	bl	13b94 <g_object_unref@plt>
   1728c:	mov	r0, r4
   17290:	mov	r2, #100	; 0x64
   17294:	mov	r3, #0
   17298:	bl	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   1729c:	cmp	r4, #0
   172a0:	mov	r6, r0
   172a4:	beq	172b0 <g_unichar_xdigit_value@plt+0x344c>
   172a8:	mov	r0, r4
   172ac:	bl	13b94 <g_object_unref@plt>
   172b0:	mov	r0, r5
   172b4:	mov	r1, r6
   172b8:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   172bc:	cmp	r6, #0
   172c0:	mov	r4, r0
   172c4:	beq	172d0 <g_unichar_xdigit_value@plt+0x346c>
   172c8:	mov	r0, r6
   172cc:	bl	13b94 <g_object_unref@plt>
   172d0:	mov	r0, r4
   172d4:	pop	{r4, r5, r6, pc}
   172d8:	mov	r0, r5
   172dc:	mov	r1, r4
   172e0:	pop	{r4, r5, r6, lr}
   172e4:	b	264c8 <g_unichar_xdigit_value@plt+0x12664>
   172e8:	ldr	r1, [pc, #64]	; 17330 <g_unichar_xdigit_value@plt+0x34cc>
   172ec:	mov	r0, r5
   172f0:	ldr	r2, [pc, #60]	; 17334 <g_unichar_xdigit_value@plt+0x34d0>
   172f4:	add	r1, pc, r1
   172f8:	add	r2, pc, r2
   172fc:	add	r1, r1, #680	; 0x2a8
   17300:	bl	13450 <g_return_if_fail_warning@plt>
   17304:	mov	r0, r5
   17308:	pop	{r4, r5, r6, pc}
   1730c:	ldr	r1, [pc, #36]	; 17338 <g_unichar_xdigit_value@plt+0x34d4>
   17310:	mov	r0, r2
   17314:	ldr	r2, [pc, #32]	; 1733c <g_unichar_xdigit_value@plt+0x34d8>
   17318:	add	r1, pc, r1
   1731c:	add	r2, pc, r2
   17320:	add	r1, r1, #680	; 0x2a8
   17324:	bl	13450 <g_return_if_fail_warning@plt>
   17328:	mov	r0, r4
   1732c:	pop	{r4, r5, r6, pc}
   17330:	andeq	r1, r2, r8, asr #7
   17334:	andeq	r1, r2, r0, lsr #29
   17338:	andeq	r1, r2, r4, lsr #7
   1733c:	andeq	r1, r2, r8, lsl #29
   17340:	push	{r4, r5, r6, lr}
   17344:	subs	r5, r1, #0
   17348:	mov	r4, r2
   1734c:	beq	173f8 <g_unichar_xdigit_value@plt+0x3594>
   17350:	cmp	r2, #0
   17354:	beq	1741c <g_unichar_xdigit_value@plt+0x35b8>
   17358:	ldr	r3, [r0, #56]	; 0x38
   1735c:	cmp	r3, #0
   17360:	beq	173e8 <g_unichar_xdigit_value@plt+0x3584>
   17364:	mvn	r1, #0
   17368:	mov	r2, #0
   1736c:	mov	r3, #0
   17370:	mvn	r0, #99	; 0x63
   17374:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   17378:	mov	r6, r0
   1737c:	mov	r0, r4
   17380:	mov	r1, r6
   17384:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   17388:	cmp	r6, #0
   1738c:	mov	r4, r0
   17390:	beq	1739c <g_unichar_xdigit_value@plt+0x3538>
   17394:	mov	r0, r6
   17398:	bl	13b94 <g_object_unref@plt>
   1739c:	mov	r0, r4
   173a0:	mvn	r2, #99	; 0x63
   173a4:	mvn	r3, #0
   173a8:	bl	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   173ac:	cmp	r4, #0
   173b0:	mov	r6, r0
   173b4:	beq	173c0 <g_unichar_xdigit_value@plt+0x355c>
   173b8:	mov	r0, r4
   173bc:	bl	13b94 <g_object_unref@plt>
   173c0:	mov	r0, r5
   173c4:	mov	r1, r6
   173c8:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   173cc:	cmp	r6, #0
   173d0:	mov	r4, r0
   173d4:	beq	173e0 <g_unichar_xdigit_value@plt+0x357c>
   173d8:	mov	r0, r6
   173dc:	bl	13b94 <g_object_unref@plt>
   173e0:	mov	r0, r4
   173e4:	pop	{r4, r5, r6, pc}
   173e8:	mov	r0, r5
   173ec:	mov	r1, r4
   173f0:	pop	{r4, r5, r6, lr}
   173f4:	b	26558 <g_unichar_xdigit_value@plt+0x126f4>
   173f8:	ldr	r1, [pc, #64]	; 17440 <g_unichar_xdigit_value@plt+0x35dc>
   173fc:	mov	r0, r5
   17400:	ldr	r2, [pc, #60]	; 17444 <g_unichar_xdigit_value@plt+0x35e0>
   17404:	add	r1, pc, r1
   17408:	add	r2, pc, r2
   1740c:	add	r1, r1, #704	; 0x2c0
   17410:	bl	13450 <g_return_if_fail_warning@plt>
   17414:	mov	r0, r5
   17418:	pop	{r4, r5, r6, pc}
   1741c:	ldr	r1, [pc, #36]	; 17448 <g_unichar_xdigit_value@plt+0x35e4>
   17420:	mov	r0, r2
   17424:	ldr	r2, [pc, #32]	; 1744c <g_unichar_xdigit_value@plt+0x35e8>
   17428:	add	r1, pc, r1
   1742c:	add	r2, pc, r2
   17430:	add	r1, r1, #704	; 0x2c0
   17434:	bl	13450 <g_return_if_fail_warning@plt>
   17438:	mov	r0, r4
   1743c:	pop	{r4, r5, r6, pc}
   17440:			; <UNDEFINED> instruction: 0x000212b8
   17444:	muleq	r2, r0, sp
   17448:	muleq	r2, r4, r2
   1744c:	andeq	r1, r2, r8, ror sp
   17450:	subs	r0, r1, #0
   17454:	push	{r3, lr}
   17458:	beq	17470 <g_unichar_xdigit_value@plt+0x360c>
   1745c:	cmp	r2, #0
   17460:	beq	17490 <g_unichar_xdigit_value@plt+0x362c>
   17464:	mov	r1, r2
   17468:	pop	{r3, lr}
   1746c:	b	26cb4 <g_unichar_xdigit_value@plt+0x12e50>
   17470:	ldr	r1, [pc, #60]	; 174b4 <g_unichar_xdigit_value@plt+0x3650>
   17474:	ldr	r2, [pc, #60]	; 174b8 <g_unichar_xdigit_value@plt+0x3654>
   17478:	add	r1, pc, r1
   1747c:	add	r2, pc, r2
   17480:	add	r1, r1, #732	; 0x2dc
   17484:	bl	13450 <g_return_if_fail_warning@plt>
   17488:	mov	r0, #0
   1748c:	pop	{r3, pc}
   17490:	ldr	r1, [pc, #36]	; 174bc <g_unichar_xdigit_value@plt+0x3658>
   17494:	mov	r0, r2
   17498:	ldr	r2, [pc, #32]	; 174c0 <g_unichar_xdigit_value@plt+0x365c>
   1749c:	add	r1, pc, r1
   174a0:	add	r2, pc, r2
   174a4:	add	r1, r1, #732	; 0x2dc
   174a8:	bl	13450 <g_return_if_fail_warning@plt>
   174ac:	mov	r0, #0
   174b0:	pop	{r3, pc}
   174b4:	andeq	r1, r2, r4, asr #4
   174b8:	andeq	r1, r2, ip, lsl sp
   174bc:	andeq	r1, r2, r0, lsr #4
   174c0:	andeq	r1, r2, r4, lsl #26
   174c4:	subs	r0, r1, #0
   174c8:	push	{r3, lr}
   174cc:	beq	174e4 <g_unichar_xdigit_value@plt+0x3680>
   174d0:	cmp	r2, #0
   174d4:	beq	17504 <g_unichar_xdigit_value@plt+0x36a0>
   174d8:	mov	r1, r2
   174dc:	pop	{r3, lr}
   174e0:	b	26234 <g_unichar_xdigit_value@plt+0x123d0>
   174e4:	ldr	r1, [pc, #60]	; 17528 <g_unichar_xdigit_value@plt+0x36c4>
   174e8:	ldr	r2, [pc, #60]	; 1752c <g_unichar_xdigit_value@plt+0x36c8>
   174ec:	add	r1, pc, r1
   174f0:	add	r2, pc, r2
   174f4:	add	r1, r1, #768	; 0x300
   174f8:	bl	13450 <g_return_if_fail_warning@plt>
   174fc:	mov	r0, #0
   17500:	pop	{r3, pc}
   17504:	ldr	r1, [pc, #36]	; 17530 <g_unichar_xdigit_value@plt+0x36cc>
   17508:	mov	r0, r2
   1750c:	ldr	r2, [pc, #32]	; 17534 <g_unichar_xdigit_value@plt+0x36d0>
   17510:	add	r1, pc, r1
   17514:	add	r2, pc, r2
   17518:	add	r1, r1, #768	; 0x300
   1751c:	bl	13450 <g_return_if_fail_warning@plt>
   17520:	mov	r0, #0
   17524:	pop	{r3, pc}
   17528:	ldrdeq	r1, [r2], -r0
   1752c:	andeq	r1, r2, r8, lsr #25
   17530:	andeq	r1, r2, ip, lsr #3
   17534:	muleq	r2, r0, ip
   17538:	subs	r0, r1, #0
   1753c:	push	{r3, lr}
   17540:	beq	17558 <g_unichar_xdigit_value@plt+0x36f4>
   17544:	cmp	r2, #0
   17548:	beq	17578 <g_unichar_xdigit_value@plt+0x3714>
   1754c:	mov	r1, r2
   17550:	pop	{r3, lr}
   17554:	b	28d18 <g_unichar_xdigit_value@plt+0x14eb4>
   17558:	ldr	r1, [pc, #60]	; 1759c <g_unichar_xdigit_value@plt+0x3738>
   1755c:	ldr	r2, [pc, #60]	; 175a0 <g_unichar_xdigit_value@plt+0x373c>
   17560:	add	r1, pc, r1
   17564:	add	r2, pc, r2
   17568:	add	r1, r1, #796	; 0x31c
   1756c:	bl	13450 <g_return_if_fail_warning@plt>
   17570:	mov	r0, #0
   17574:	pop	{r3, pc}
   17578:	ldr	r1, [pc, #36]	; 175a4 <g_unichar_xdigit_value@plt+0x3740>
   1757c:	mov	r0, r2
   17580:	ldr	r2, [pc, #32]	; 175a8 <g_unichar_xdigit_value@plt+0x3744>
   17584:	add	r1, pc, r1
   17588:	add	r2, pc, r2
   1758c:	add	r1, r1, #796	; 0x31c
   17590:	bl	13450 <g_return_if_fail_warning@plt>
   17594:	mov	r0, #0
   17598:	pop	{r3, pc}
   1759c:	andeq	r1, r2, ip, asr r1
   175a0:	andeq	r1, r2, r4, lsr ip
   175a4:	andeq	r1, r2, r8, lsr r1
   175a8:	andeq	r1, r2, ip, lsl ip
   175ac:	subs	r0, r1, #0
   175b0:	push	{r3, lr}
   175b4:	beq	175cc <g_unichar_xdigit_value@plt+0x3768>
   175b8:	cmp	r2, #0
   175bc:	beq	175ec <g_unichar_xdigit_value@plt+0x3788>
   175c0:	mov	r1, r2
   175c4:	pop	{r3, lr}
   175c8:	b	28e08 <g_unichar_xdigit_value@plt+0x14fa4>
   175cc:	ldr	r1, [pc, #60]	; 17610 <g_unichar_xdigit_value@plt+0x37ac>
   175d0:	ldr	r2, [pc, #60]	; 17614 <g_unichar_xdigit_value@plt+0x37b0>
   175d4:	add	r1, pc, r1
   175d8:	add	r2, pc, r2
   175dc:	add	r1, r1, #820	; 0x334
   175e0:	bl	13450 <g_return_if_fail_warning@plt>
   175e4:	mov	r0, #0
   175e8:	pop	{r3, pc}
   175ec:	ldr	r1, [pc, #36]	; 17618 <g_unichar_xdigit_value@plt+0x37b4>
   175f0:	mov	r0, r2
   175f4:	ldr	r2, [pc, #32]	; 1761c <g_unichar_xdigit_value@plt+0x37b8>
   175f8:	add	r1, pc, r1
   175fc:	add	r2, pc, r2
   17600:	add	r1, r1, #820	; 0x334
   17604:	bl	13450 <g_return_if_fail_warning@plt>
   17608:	mov	r0, #0
   1760c:	pop	{r3, pc}
   17610:	andeq	r1, r2, r8, ror #1
   17614:	andeq	r1, r2, r0, asr #23
   17618:	andeq	r1, r2, r4, asr #1
   1761c:	andeq	r1, r2, r8, lsr #23
   17620:	subs	r0, r1, #0
   17624:	push	{r3, lr}
   17628:	beq	17640 <g_unichar_xdigit_value@plt+0x37dc>
   1762c:	cmp	r2, #0
   17630:	beq	17660 <g_unichar_xdigit_value@plt+0x37fc>
   17634:	mov	r1, r2
   17638:	pop	{r3, lr}
   1763c:	b	28ef8 <g_unichar_xdigit_value@plt+0x15094>
   17640:	ldr	r1, [pc, #60]	; 17684 <g_unichar_xdigit_value@plt+0x3820>
   17644:	ldr	r2, [pc, #60]	; 17688 <g_unichar_xdigit_value@plt+0x3824>
   17648:	add	r1, pc, r1
   1764c:	add	r2, pc, r2
   17650:	add	r1, r1, #844	; 0x34c
   17654:	bl	13450 <g_return_if_fail_warning@plt>
   17658:	mov	r0, #0
   1765c:	pop	{r3, pc}
   17660:	ldr	r1, [pc, #36]	; 1768c <g_unichar_xdigit_value@plt+0x3828>
   17664:	mov	r0, r2
   17668:	ldr	r2, [pc, #32]	; 17690 <g_unichar_xdigit_value@plt+0x382c>
   1766c:	add	r1, pc, r1
   17670:	add	r2, pc, r2
   17674:	add	r1, r1, #844	; 0x34c
   17678:	bl	13450 <g_return_if_fail_warning@plt>
   1767c:	mov	r0, #0
   17680:	pop	{r3, pc}
   17684:	andeq	r1, r2, r4, ror r0
   17688:	andeq	r1, r2, ip, asr #22
   1768c:	andeq	r1, r2, r0, asr r0
   17690:	andeq	r1, r2, r4, lsr fp
   17694:	ldr	r0, [pc, #96]	; 176fc <g_unichar_xdigit_value@plt+0x3898>
   17698:	push	{r4, lr}
   1769c:	add	r0, pc, r0
   176a0:	dmb	sy
   176a4:	ldr	r3, [r0, #148]	; 0x94
   176a8:	dmb	sy
   176ac:	cmp	r3, #0
   176b0:	beq	176c4 <g_unichar_xdigit_value@plt+0x3860>
   176b4:	ldr	r3, [pc, #68]	; 17700 <g_unichar_xdigit_value@plt+0x389c>
   176b8:	add	r3, pc, r3
   176bc:	ldr	r0, [r3, #148]	; 0x94
   176c0:	pop	{r4, pc}
   176c4:	add	r4, r0, #148	; 0x94
   176c8:	mov	r0, r4
   176cc:	bl	138ac <g_once_init_enter@plt>
   176d0:	cmp	r0, #0
   176d4:	beq	176b4 <g_unichar_xdigit_value@plt+0x3850>
   176d8:	ldr	r0, [pc, #36]	; 17704 <g_unichar_xdigit_value@plt+0x38a0>
   176dc:	ldr	r1, [pc, #36]	; 17708 <g_unichar_xdigit_value@plt+0x38a4>
   176e0:	add	r0, pc, r0
   176e4:	add	r1, pc, r1
   176e8:	bl	13c78 <g_enum_register_static@plt>
   176ec:	mov	r1, r0
   176f0:	mov	r0, r4
   176f4:	bl	13bac <g_once_init_leave@plt>
   176f8:	b	176b4 <g_unichar_xdigit_value@plt+0x3850>
   176fc:	andeq	r9, r3, r4, ror #26
   17700:	andeq	r9, r3, r8, asr #26
   17704:	ldrdeq	r1, [r2], -r0
   17708:	andeq	r8, r3, r0, asr ip
   1770c:	ldr	r0, [pc, #100]	; 17778 <g_unichar_xdigit_value@plt+0x3914>
   17710:	push	{r4, lr}
   17714:	add	r0, pc, r0
   17718:	dmb	sy
   1771c:	ldr	r3, [r0, #152]	; 0x98
   17720:	dmb	sy
   17724:	cmp	r3, #0
   17728:	beq	1773c <g_unichar_xdigit_value@plt+0x38d8>
   1772c:	ldr	r3, [pc, #72]	; 1777c <g_unichar_xdigit_value@plt+0x3918>
   17730:	add	r3, pc, r3
   17734:	ldr	r0, [r3, #152]	; 0x98
   17738:	pop	{r4, pc}
   1773c:	add	r4, r0, #152	; 0x98
   17740:	mov	r0, r4
   17744:	bl	138ac <g_once_init_enter@plt>
   17748:	cmp	r0, #0
   1774c:	beq	1772c <g_unichar_xdigit_value@plt+0x38c8>
   17750:	ldr	r1, [pc, #40]	; 17780 <g_unichar_xdigit_value@plt+0x391c>
   17754:	ldr	r0, [pc, #40]	; 17784 <g_unichar_xdigit_value@plt+0x3920>
   17758:	add	r1, pc, r1
   1775c:	add	r1, r1, #36	; 0x24
   17760:	add	r0, pc, r0
   17764:	bl	13c78 <g_enum_register_static@plt>
   17768:	mov	r1, r0
   1776c:	mov	r0, r4
   17770:	bl	13bac <g_once_init_leave@plt>
   17774:	b	1772c <g_unichar_xdigit_value@plt+0x38c8>
   17778:	andeq	r9, r3, ip, ror #25
   1777c:	ldrdeq	r9, [r3], -r0
   17780:	ldrdeq	r8, [r3], -ip
   17784:	andeq	r1, r2, r0, ror #20
   17788:	push	{r4, lr}
   1778c:	subs	r4, r0, #0
   17790:	sub	sp, sp, #8
   17794:	beq	177f4 <g_unichar_xdigit_value@plt+0x3990>
   17798:	ldr	r0, [r4, #32]
   1779c:	bl	13540 <g_list_length@plt>
   177a0:	cmp	r0, #1
   177a4:	beq	177d4 <g_unichar_xdigit_value@plt+0x3970>
   177a8:	ldr	r3, [pc, #104]	; 17818 <g_unichar_xdigit_value@plt+0x39b4>
   177ac:	mov	r0, #0
   177b0:	ldr	ip, [pc, #100]	; 1781c <g_unichar_xdigit_value@plt+0x39b8>
   177b4:	movw	r2, #1957	; 0x7a5
   177b8:	ldr	r1, [pc, #96]	; 17820 <g_unichar_xdigit_value@plt+0x39bc>
   177bc:	add	r3, pc, r3
   177c0:	add	ip, pc, ip
   177c4:	add	r3, r3, #868	; 0x364
   177c8:	add	r1, pc, r1
   177cc:	str	ip, [sp]
   177d0:	bl	13d2c <g_assertion_message_expr@plt>
   177d4:	ldr	r0, [r4, #32]
   177d8:	bl	1369c <g_list_first@plt>
   177dc:	ldr	r0, [r0]
   177e0:	cmp	r0, #0
   177e4:	beq	1780c <g_unichar_xdigit_value@plt+0x39a8>
   177e8:	add	sp, sp, #8
   177ec:	pop	{r4, lr}
   177f0:	b	133f0 <g_object_ref@plt>
   177f4:	ldr	r1, [pc, #40]	; 17824 <g_unichar_xdigit_value@plt+0x39c0>
   177f8:	ldr	r2, [pc, #40]	; 17828 <g_unichar_xdigit_value@plt+0x39c4>
   177fc:	add	r1, pc, r1
   17800:	add	r2, pc, r2
   17804:	add	r1, r1, #868	; 0x364
   17808:	bl	13450 <g_return_if_fail_warning@plt>
   1780c:	mov	r0, #0
   17810:	add	sp, sp, #8
   17814:	pop	{r4, pc}
   17818:	andeq	r0, r2, r0, lsl #30
   1781c:	andeq	r1, r2, r4, lsr sl
   17820:	andeq	r1, r2, r4, lsl #20
   17824:	andeq	r0, r2, r0, asr #29
   17828:	andeq	r0, r2, r4, ror #17
   1782c:	push	{r3, r4, r5, lr}
   17830:	mov	r5, r0
   17834:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   17838:	ldr	r3, [r5, #16]
   1783c:	ldr	r1, [r3, #12]
   17840:	mov	r4, r0
   17844:	ldr	r0, [r0, #16]
   17848:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   1784c:	mov	r5, r0
   17850:	mov	r0, r4
   17854:	bl	13b94 <g_object_unref@plt>
   17858:	mov	r0, r5
   1785c:	pop	{r3, r4, r5, pc}
   17860:	push	{r3, lr}
   17864:	subs	r3, r0, #0
   17868:	beq	17888 <g_unichar_xdigit_value@plt+0x3a24>
   1786c:	ldr	r0, [r3, #32]
   17870:	bl	1369c <g_list_first@plt>
   17874:	ldr	r0, [r0]
   17878:	cmp	r0, #0
   1787c:	beq	178a0 <g_unichar_xdigit_value@plt+0x3a3c>
   17880:	pop	{r3, lr}
   17884:	b	133f0 <g_object_ref@plt>
   17888:	ldr	r1, [pc, #24]	; 178a8 <g_unichar_xdigit_value@plt+0x3a44>
   1788c:	ldr	r2, [pc, #24]	; 178ac <g_unichar_xdigit_value@plt+0x3a48>
   17890:	add	r1, pc, r1
   17894:	add	r2, pc, r2
   17898:	add	r1, r1, #888	; 0x378
   1789c:	bl	13450 <g_return_if_fail_warning@plt>
   178a0:	mov	r0, #0
   178a4:	pop	{r3, pc}
   178a8:	andeq	r0, r2, ip, lsr #28
   178ac:	andeq	r0, r2, r0, asr r8
   178b0:	push	{r3, lr}
   178b4:	subs	r3, r0, #0
   178b8:	beq	178d8 <g_unichar_xdigit_value@plt+0x3a74>
   178bc:	ldr	r0, [r3, #32]
   178c0:	bl	13894 <g_list_last@plt>
   178c4:	ldr	r0, [r0]
   178c8:	cmp	r0, #0
   178cc:	beq	178f0 <g_unichar_xdigit_value@plt+0x3a8c>
   178d0:	pop	{r3, lr}
   178d4:	b	133f0 <g_object_ref@plt>
   178d8:	ldr	r1, [pc, #24]	; 178f8 <g_unichar_xdigit_value@plt+0x3a94>
   178dc:	ldr	r2, [pc, #24]	; 178fc <g_unichar_xdigit_value@plt+0x3a98>
   178e0:	add	r1, pc, r1
   178e4:	add	r2, pc, r2
   178e8:	add	r1, r1, #912	; 0x390
   178ec:	bl	13450 <g_return_if_fail_warning@plt>
   178f0:	mov	r0, #0
   178f4:	pop	{r3, pc}
   178f8:	ldrdeq	r0, [r2], -ip
   178fc:	andeq	r0, r2, r0, lsl #16
   17900:	push	{r4, lr}
   17904:	subs	r4, r0, #0
   17908:	beq	1791c <g_unichar_xdigit_value@plt+0x3ab8>
   1790c:	ldr	r3, [r4]
   17910:	ldr	r3, [r3, #68]	; 0x44
   17914:	blx	r3
   17918:	pop	{r4, pc}
   1791c:	ldr	r1, [pc, #24]	; 1793c <g_unichar_xdigit_value@plt+0x3ad8>
   17920:	ldr	r2, [pc, #24]	; 17940 <g_unichar_xdigit_value@plt+0x3adc>
   17924:	add	r1, pc, r1
   17928:	add	r2, pc, r2
   1792c:	add	r1, r1, #936	; 0x3a8
   17930:	bl	13450 <g_return_if_fail_warning@plt>
   17934:	mov	r0, r4
   17938:	pop	{r4, pc}
   1793c:	muleq	r2, r8, sp
   17940:			; <UNDEFINED> instruction: 0x000207bc
   17944:	ldr	r0, [pc, #108]	; 179b8 <g_unichar_xdigit_value@plt+0x3b54>
   17948:	push	{r3, r4, r5, lr}
   1794c:	add	r0, pc, r0
   17950:	dmb	sy
   17954:	ldr	r4, [r0, #156]	; 0x9c
   17958:	dmb	sy
   1795c:	cmp	r4, #0
   17960:	beq	17974 <g_unichar_xdigit_value@plt+0x3b10>
   17964:	ldr	r3, [pc, #80]	; 179bc <g_unichar_xdigit_value@plt+0x3b58>
   17968:	add	r3, pc, r3
   1796c:	ldr	r0, [r3, #156]	; 0x9c
   17970:	pop	{r3, r4, r5, pc}
   17974:	add	r5, r0, #156	; 0x9c
   17978:	mov	r0, r5
   1797c:	bl	138ac <g_once_init_enter@plt>
   17980:	cmp	r0, #0
   17984:	beq	17964 <g_unichar_xdigit_value@plt+0x3b00>
   17988:	ldr	r2, [pc, #48]	; 179c0 <g_unichar_xdigit_value@plt+0x3b5c>
   1798c:	mov	r3, r4
   17990:	ldr	r1, [pc, #44]	; 179c4 <g_unichar_xdigit_value@plt+0x3b60>
   17994:	mov	r0, #80	; 0x50
   17998:	add	r2, pc, r2
   1799c:	add	r1, pc, r1
   179a0:	add	r2, r2, #264	; 0x108
   179a4:	bl	13438 <g_type_register_static@plt>
   179a8:	mov	r1, r0
   179ac:	mov	r0, r5
   179b0:	bl	13bac <g_once_init_leave@plt>
   179b4:	b	17964 <g_unichar_xdigit_value@plt+0x3b00>
   179b8:			; <UNDEFINED> instruction: 0x00039ab4
   179bc:	muleq	r3, r8, sl
   179c0:	muleq	r3, ip, r9
   179c4:	andeq	r1, r2, r4, ror r8
   179c8:	push	{r4, lr}
   179cc:	subs	r4, r0, #0
   179d0:	beq	179e4 <g_unichar_xdigit_value@plt+0x3b80>
   179d4:	ldr	r3, [r4]
   179d8:	ldr	r3, [r3, #72]	; 0x48
   179dc:	blx	r3
   179e0:	pop	{r4, pc}
   179e4:	ldr	r1, [pc, #24]	; 17a04 <g_unichar_xdigit_value@plt+0x3ba0>
   179e8:	ldr	r2, [pc, #24]	; 17a08 <g_unichar_xdigit_value@plt+0x3ba4>
   179ec:	add	r1, pc, r1
   179f0:	add	r2, pc, r2
   179f4:	add	r1, r1, #956	; 0x3bc
   179f8:	bl	13450 <g_return_if_fail_warning@plt>
   179fc:	mov	r0, r4
   17a00:	pop	{r4, pc}
   17a04:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   17a08:	strdeq	r0, [r2], -r4
   17a0c:	ldr	r0, [pc, #108]	; 17a80 <g_unichar_xdigit_value@plt+0x3c1c>
   17a10:	push	{r4, lr}
   17a14:	add	r0, pc, r0
   17a18:	dmb	sy
   17a1c:	ldr	r3, [r0, #160]	; 0xa0
   17a20:	dmb	sy
   17a24:	cmp	r3, #0
   17a28:	beq	17a3c <g_unichar_xdigit_value@plt+0x3bd8>
   17a2c:	ldr	r3, [pc, #80]	; 17a84 <g_unichar_xdigit_value@plt+0x3c20>
   17a30:	add	r3, pc, r3
   17a34:	ldr	r0, [r3, #160]	; 0xa0
   17a38:	pop	{r4, pc}
   17a3c:	add	r4, r0, #160	; 0xa0
   17a40:	mov	r0, r4
   17a44:	bl	138ac <g_once_init_enter@plt>
   17a48:	cmp	r0, #0
   17a4c:	beq	17a2c <g_unichar_xdigit_value@plt+0x3bc8>
   17a50:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   17a54:	ldr	r2, [pc, #44]	; 17a88 <g_unichar_xdigit_value@plt+0x3c24>
   17a58:	ldr	r1, [pc, #44]	; 17a8c <g_unichar_xdigit_value@plt+0x3c28>
   17a5c:	mov	r3, #16
   17a60:	add	r2, pc, r2
   17a64:	add	r1, pc, r1
   17a68:	add	r2, r2, #300	; 0x12c
   17a6c:	bl	13438 <g_type_register_static@plt>
   17a70:	mov	r1, r0
   17a74:	mov	r0, r4
   17a78:	bl	13bac <g_once_init_leave@plt>
   17a7c:	b	17a2c <g_unichar_xdigit_value@plt+0x3bc8>
   17a80:	andeq	r9, r3, ip, ror #19
   17a84:	ldrdeq	r9, [r3], -r0
   17a88:	ldrdeq	r8, [r3], -r4
   17a8c:			; <UNDEFINED> instruction: 0x000217b8
   17a90:	push	{r4, lr}
   17a94:	subs	r4, r0, #0
   17a98:	beq	17aac <g_unichar_xdigit_value@plt+0x3c48>
   17a9c:	ldr	r3, [r4]
   17aa0:	ldr	r3, [r3, #72]	; 0x48
   17aa4:	blx	r3
   17aa8:	pop	{r4, pc}
   17aac:	ldr	r1, [pc, #24]	; 17acc <g_unichar_xdigit_value@plt+0x3c68>
   17ab0:	ldr	r2, [pc, #24]	; 17ad0 <g_unichar_xdigit_value@plt+0x3c6c>
   17ab4:	add	r1, pc, r1
   17ab8:	add	r2, pc, r2
   17abc:	add	r1, r1, #972	; 0x3cc
   17ac0:	bl	13450 <g_return_if_fail_warning@plt>
   17ac4:	mov	r0, r4
   17ac8:	pop	{r4, pc}
   17acc:	andeq	r0, r2, r8, lsl #24
   17ad0:	andeq	r0, r2, ip, lsr #12
   17ad4:	ldr	r0, [pc, #108]	; 17b48 <g_unichar_xdigit_value@plt+0x3ce4>
   17ad8:	push	{r4, lr}
   17adc:	add	r0, pc, r0
   17ae0:	dmb	sy
   17ae4:	ldr	r3, [r0, #164]	; 0xa4
   17ae8:	dmb	sy
   17aec:	cmp	r3, #0
   17af0:	beq	17b04 <g_unichar_xdigit_value@plt+0x3ca0>
   17af4:	ldr	r3, [pc, #80]	; 17b4c <g_unichar_xdigit_value@plt+0x3ce8>
   17af8:	add	r3, pc, r3
   17afc:	ldr	r0, [r3, #164]	; 0xa4
   17b00:	pop	{r4, pc}
   17b04:	add	r4, r0, #164	; 0xa4
   17b08:	mov	r0, r4
   17b0c:	bl	138ac <g_once_init_enter@plt>
   17b10:	cmp	r0, #0
   17b14:	beq	17af4 <g_unichar_xdigit_value@plt+0x3c90>
   17b18:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   17b1c:	ldr	r2, [pc, #44]	; 17b50 <g_unichar_xdigit_value@plt+0x3cec>
   17b20:	ldr	r1, [pc, #44]	; 17b54 <g_unichar_xdigit_value@plt+0x3cf0>
   17b24:	mov	r3, #16
   17b28:	add	r2, pc, r2
   17b2c:	add	r1, pc, r1
   17b30:	add	r2, r2, #336	; 0x150
   17b34:	bl	13438 <g_type_register_static@plt>
   17b38:	mov	r1, r0
   17b3c:	mov	r0, r4
   17b40:	bl	13bac <g_once_init_leave@plt>
   17b44:	b	17af4 <g_unichar_xdigit_value@plt+0x3c90>
   17b48:	andeq	r9, r3, r4, lsr #18
   17b4c:	andeq	r9, r3, r8, lsl #18
   17b50:	andeq	r8, r3, ip, lsl #16
   17b54:	strdeq	r1, [r2], -r8
   17b58:	ldr	r0, [pc, #108]	; 17bcc <g_unichar_xdigit_value@plt+0x3d68>
   17b5c:	push	{r3, r4, r5, lr}
   17b60:	add	r0, pc, r0
   17b64:	dmb	sy
   17b68:	ldr	r4, [r0, #168]	; 0xa8
   17b6c:	dmb	sy
   17b70:	cmp	r4, #0
   17b74:	beq	17b88 <g_unichar_xdigit_value@plt+0x3d24>
   17b78:	ldr	r3, [pc, #80]	; 17bd0 <g_unichar_xdigit_value@plt+0x3d6c>
   17b7c:	add	r3, pc, r3
   17b80:	ldr	r0, [r3, #168]	; 0xa8
   17b84:	pop	{r3, r4, r5, pc}
   17b88:	add	r5, r0, #168	; 0xa8
   17b8c:	mov	r0, r5
   17b90:	bl	138ac <g_once_init_enter@plt>
   17b94:	cmp	r0, #0
   17b98:	beq	17b78 <g_unichar_xdigit_value@plt+0x3d14>
   17b9c:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   17ba0:	ldr	r2, [pc, #44]	; 17bd4 <g_unichar_xdigit_value@plt+0x3d70>
   17ba4:	ldr	r1, [pc, #44]	; 17bd8 <g_unichar_xdigit_value@plt+0x3d74>
   17ba8:	mov	r3, r4
   17bac:	add	r2, pc, r2
   17bb0:	add	r1, pc, r1
   17bb4:	add	r2, r2, #372	; 0x174
   17bb8:	bl	13438 <g_type_register_static@plt>
   17bbc:	mov	r1, r0
   17bc0:	mov	r0, r5
   17bc4:	bl	13bac <g_once_init_leave@plt>
   17bc8:	b	17b78 <g_unichar_xdigit_value@plt+0x3d14>
   17bcc:	andeq	r9, r3, r0, lsr #17
   17bd0:	andeq	r9, r3, r4, lsl #17
   17bd4:	andeq	r8, r3, r8, lsl #15
   17bd8:	andeq	r1, r2, ip, ror r6
   17bdc:	ldr	r0, [pc, #108]	; 17c50 <g_unichar_xdigit_value@plt+0x3dec>
   17be0:	push	{r3, r4, r5, lr}
   17be4:	add	r0, pc, r0
   17be8:	dmb	sy
   17bec:	ldr	r4, [r0, #172]	; 0xac
   17bf0:	dmb	sy
   17bf4:	cmp	r4, #0
   17bf8:	beq	17c0c <g_unichar_xdigit_value@plt+0x3da8>
   17bfc:	ldr	r3, [pc, #80]	; 17c54 <g_unichar_xdigit_value@plt+0x3df0>
   17c00:	add	r3, pc, r3
   17c04:	ldr	r0, [r3, #172]	; 0xac
   17c08:	pop	{r3, r4, r5, pc}
   17c0c:	add	r5, r0, #172	; 0xac
   17c10:	mov	r0, r5
   17c14:	bl	138ac <g_once_init_enter@plt>
   17c18:	cmp	r0, #0
   17c1c:	beq	17bfc <g_unichar_xdigit_value@plt+0x3d98>
   17c20:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   17c24:	ldr	r2, [pc, #44]	; 17c58 <g_unichar_xdigit_value@plt+0x3df4>
   17c28:	ldr	r1, [pc, #44]	; 17c5c <g_unichar_xdigit_value@plt+0x3df8>
   17c2c:	mov	r3, r4
   17c30:	add	r2, pc, r2
   17c34:	add	r1, pc, r1
   17c38:	add	r2, r2, #408	; 0x198
   17c3c:	bl	13438 <g_type_register_static@plt>
   17c40:	mov	r1, r0
   17c44:	mov	r0, r5
   17c48:	bl	13bac <g_once_init_leave@plt>
   17c4c:	b	17bfc <g_unichar_xdigit_value@plt+0x3d98>
   17c50:	andeq	r9, r3, ip, lsl r8
   17c54:	andeq	r9, r3, r0, lsl #16
   17c58:	andeq	r8, r3, r4, lsl #14
   17c5c:	andeq	r1, r2, r8, lsl #12
   17c60:	ldr	r0, [pc, #108]	; 17cd4 <g_unichar_xdigit_value@plt+0x3e70>
   17c64:	push	{r3, r4, r5, lr}
   17c68:	add	r0, pc, r0
   17c6c:	dmb	sy
   17c70:	ldr	r4, [r0, #176]	; 0xb0
   17c74:	dmb	sy
   17c78:	cmp	r4, #0
   17c7c:	beq	17c90 <g_unichar_xdigit_value@plt+0x3e2c>
   17c80:	ldr	r3, [pc, #80]	; 17cd8 <g_unichar_xdigit_value@plt+0x3e74>
   17c84:	add	r3, pc, r3
   17c88:	ldr	r0, [r3, #176]	; 0xb0
   17c8c:	pop	{r3, r4, r5, pc}
   17c90:	add	r5, r0, #176	; 0xb0
   17c94:	mov	r0, r5
   17c98:	bl	138ac <g_once_init_enter@plt>
   17c9c:	cmp	r0, #0
   17ca0:	beq	17c80 <g_unichar_xdigit_value@plt+0x3e1c>
   17ca4:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   17ca8:	ldr	r2, [pc, #44]	; 17cdc <g_unichar_xdigit_value@plt+0x3e78>
   17cac:	ldr	r1, [pc, #44]	; 17ce0 <g_unichar_xdigit_value@plt+0x3e7c>
   17cb0:	mov	r3, r4
   17cb4:	add	r2, pc, r2
   17cb8:	add	r1, pc, r1
   17cbc:	add	r2, r2, #444	; 0x1bc
   17cc0:	bl	13438 <g_type_register_static@plt>
   17cc4:	mov	r1, r0
   17cc8:	mov	r0, r5
   17ccc:	bl	13bac <g_once_init_leave@plt>
   17cd0:	b	17c80 <g_unichar_xdigit_value@plt+0x3e1c>
   17cd4:	muleq	r3, r8, r7
   17cd8:	andeq	r9, r3, ip, ror r7
   17cdc:	andeq	r8, r3, r0, lsl #13
   17ce0:	muleq	r2, r0, r5
   17ce4:	ldr	r0, [pc, #108]	; 17d58 <g_unichar_xdigit_value@plt+0x3ef4>
   17ce8:	push	{r3, r4, r5, lr}
   17cec:	add	r0, pc, r0
   17cf0:	dmb	sy
   17cf4:	ldr	r4, [r0, #180]	; 0xb4
   17cf8:	dmb	sy
   17cfc:	cmp	r4, #0
   17d00:	beq	17d14 <g_unichar_xdigit_value@plt+0x3eb0>
   17d04:	ldr	r3, [pc, #80]	; 17d5c <g_unichar_xdigit_value@plt+0x3ef8>
   17d08:	add	r3, pc, r3
   17d0c:	ldr	r0, [r3, #180]	; 0xb4
   17d10:	pop	{r3, r4, r5, pc}
   17d14:	add	r5, r0, #180	; 0xb4
   17d18:	mov	r0, r5
   17d1c:	bl	138ac <g_once_init_enter@plt>
   17d20:	cmp	r0, #0
   17d24:	beq	17d04 <g_unichar_xdigit_value@plt+0x3ea0>
   17d28:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   17d2c:	ldr	r2, [pc, #44]	; 17d60 <g_unichar_xdigit_value@plt+0x3efc>
   17d30:	ldr	r1, [pc, #44]	; 17d64 <g_unichar_xdigit_value@plt+0x3f00>
   17d34:	mov	r3, r4
   17d38:	add	r2, pc, r2
   17d3c:	add	r1, pc, r1
   17d40:	add	r2, r2, #480	; 0x1e0
   17d44:	bl	13438 <g_type_register_static@plt>
   17d48:	mov	r1, r0
   17d4c:	mov	r0, r5
   17d50:	bl	13bac <g_once_init_leave@plt>
   17d54:	b	17d04 <g_unichar_xdigit_value@plt+0x3ea0>
   17d58:	andeq	r9, r3, r4, lsl r7
   17d5c:	strdeq	r9, [r3], -r8
   17d60:	strdeq	r8, [r3], -ip
   17d64:	andeq	r1, r2, r0, asr r5
   17d68:	ldr	r0, [pc, #108]	; 17ddc <g_unichar_xdigit_value@plt+0x3f78>
   17d6c:	push	{r3, r4, r5, lr}
   17d70:	add	r0, pc, r0
   17d74:	dmb	sy
   17d78:	ldr	r4, [r0, #184]	; 0xb8
   17d7c:	dmb	sy
   17d80:	cmp	r4, #0
   17d84:	beq	17d98 <g_unichar_xdigit_value@plt+0x3f34>
   17d88:	ldr	r3, [pc, #80]	; 17de0 <g_unichar_xdigit_value@plt+0x3f7c>
   17d8c:	add	r3, pc, r3
   17d90:	ldr	r0, [r3, #184]	; 0xb8
   17d94:	pop	{r3, r4, r5, pc}
   17d98:	add	r5, r0, #184	; 0xb8
   17d9c:	mov	r0, r5
   17da0:	bl	138ac <g_once_init_enter@plt>
   17da4:	cmp	r0, #0
   17da8:	beq	17d88 <g_unichar_xdigit_value@plt+0x3f24>
   17dac:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   17db0:	ldr	r2, [pc, #44]	; 17de4 <g_unichar_xdigit_value@plt+0x3f80>
   17db4:	ldr	r1, [pc, #44]	; 17de8 <g_unichar_xdigit_value@plt+0x3f84>
   17db8:	mov	r3, r4
   17dbc:	add	r2, pc, r2
   17dc0:	add	r1, pc, r1
   17dc4:	add	r2, r2, #516	; 0x204
   17dc8:	bl	13438 <g_type_register_static@plt>
   17dcc:	mov	r1, r0
   17dd0:	mov	r0, r5
   17dd4:	bl	13bac <g_once_init_leave@plt>
   17dd8:	b	17d88 <g_unichar_xdigit_value@plt+0x3f24>
   17ddc:	muleq	r3, r0, r6
   17de0:	andeq	r9, r3, r4, ror r6
   17de4:	andeq	r8, r3, r8, ror r5
   17de8:	muleq	r2, ip, r4
   17dec:	ldr	r0, [pc, #108]	; 17e60 <g_unichar_xdigit_value@plt+0x3ffc>
   17df0:	push	{r3, r4, r5, lr}
   17df4:	add	r0, pc, r0
   17df8:	dmb	sy
   17dfc:	ldr	r4, [r0, #188]	; 0xbc
   17e00:	dmb	sy
   17e04:	cmp	r4, #0
   17e08:	beq	17e1c <g_unichar_xdigit_value@plt+0x3fb8>
   17e0c:	ldr	r3, [pc, #80]	; 17e64 <g_unichar_xdigit_value@plt+0x4000>
   17e10:	add	r3, pc, r3
   17e14:	ldr	r0, [r3, #188]	; 0xbc
   17e18:	pop	{r3, r4, r5, pc}
   17e1c:	add	r5, r0, #188	; 0xbc
   17e20:	mov	r0, r5
   17e24:	bl	138ac <g_once_init_enter@plt>
   17e28:	cmp	r0, #0
   17e2c:	beq	17e0c <g_unichar_xdigit_value@plt+0x3fa8>
   17e30:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   17e34:	ldr	r2, [pc, #44]	; 17e68 <g_unichar_xdigit_value@plt+0x4004>
   17e38:	ldr	r1, [pc, #44]	; 17e6c <g_unichar_xdigit_value@plt+0x4008>
   17e3c:	mov	r3, r4
   17e40:	add	r2, pc, r2
   17e44:	add	r1, pc, r1
   17e48:	add	r2, r2, #552	; 0x228
   17e4c:	bl	13438 <g_type_register_static@plt>
   17e50:	mov	r1, r0
   17e54:	mov	r0, r5
   17e58:	bl	13bac <g_once_init_leave@plt>
   17e5c:	b	17e0c <g_unichar_xdigit_value@plt+0x3fa8>
   17e60:	andeq	r9, r3, ip, lsl #12
   17e64:	strdeq	r9, [r3], -r0
   17e68:	strdeq	r8, [r3], -r4
   17e6c:	andeq	r1, r2, r8, lsr #8
   17e70:	ldr	r0, [pc, #108]	; 17ee4 <g_unichar_xdigit_value@plt+0x4080>
   17e74:	push	{r3, r4, r5, lr}
   17e78:	add	r0, pc, r0
   17e7c:	dmb	sy
   17e80:	ldr	r4, [r0, #192]	; 0xc0
   17e84:	dmb	sy
   17e88:	cmp	r4, #0
   17e8c:	beq	17ea0 <g_unichar_xdigit_value@plt+0x403c>
   17e90:	ldr	r3, [pc, #80]	; 17ee8 <g_unichar_xdigit_value@plt+0x4084>
   17e94:	add	r3, pc, r3
   17e98:	ldr	r0, [r3, #192]	; 0xc0
   17e9c:	pop	{r3, r4, r5, pc}
   17ea0:	add	r5, r0, #192	; 0xc0
   17ea4:	mov	r0, r5
   17ea8:	bl	138ac <g_once_init_enter@plt>
   17eac:	cmp	r0, #0
   17eb0:	beq	17e90 <g_unichar_xdigit_value@plt+0x402c>
   17eb4:	bl	17ce4 <g_unichar_xdigit_value@plt+0x3e80>
   17eb8:	ldr	r2, [pc, #44]	; 17eec <g_unichar_xdigit_value@plt+0x4088>
   17ebc:	ldr	r1, [pc, #44]	; 17ef0 <g_unichar_xdigit_value@plt+0x408c>
   17ec0:	mov	r3, r4
   17ec4:	add	r2, pc, r2
   17ec8:	add	r1, pc, r1
   17ecc:	add	r2, r2, #588	; 0x24c
   17ed0:	bl	13438 <g_type_register_static@plt>
   17ed4:	mov	r1, r0
   17ed8:	mov	r0, r5
   17edc:	bl	13bac <g_once_init_leave@plt>
   17ee0:	b	17e90 <g_unichar_xdigit_value@plt+0x402c>
   17ee4:	andeq	r9, r3, r8, lsl #11
   17ee8:	andeq	r9, r3, ip, ror #10
   17eec:	andeq	r8, r3, r0, ror r4
   17ef0:			; <UNDEFINED> instruction: 0x000213bc
   17ef4:	ldr	r0, [pc, #108]	; 17f68 <g_unichar_xdigit_value@plt+0x4104>
   17ef8:	push	{r3, r4, r5, lr}
   17efc:	add	r0, pc, r0
   17f00:	dmb	sy
   17f04:	ldr	r4, [r0, #196]	; 0xc4
   17f08:	dmb	sy
   17f0c:	cmp	r4, #0
   17f10:	beq	17f24 <g_unichar_xdigit_value@plt+0x40c0>
   17f14:	ldr	r3, [pc, #80]	; 17f6c <g_unichar_xdigit_value@plt+0x4108>
   17f18:	add	r3, pc, r3
   17f1c:	ldr	r0, [r3, #196]	; 0xc4
   17f20:	pop	{r3, r4, r5, pc}
   17f24:	add	r5, r0, #196	; 0xc4
   17f28:	mov	r0, r5
   17f2c:	bl	138ac <g_once_init_enter@plt>
   17f30:	cmp	r0, #0
   17f34:	beq	17f14 <g_unichar_xdigit_value@plt+0x40b0>
   17f38:	bl	17ce4 <g_unichar_xdigit_value@plt+0x3e80>
   17f3c:	ldr	r2, [pc, #44]	; 17f70 <g_unichar_xdigit_value@plt+0x410c>
   17f40:	ldr	r1, [pc, #44]	; 17f74 <g_unichar_xdigit_value@plt+0x4110>
   17f44:	mov	r3, r4
   17f48:	add	r2, pc, r2
   17f4c:	add	r1, pc, r1
   17f50:	add	r2, r2, #624	; 0x270
   17f54:	bl	13438 <g_type_register_static@plt>
   17f58:	mov	r1, r0
   17f5c:	mov	r0, r5
   17f60:	bl	13bac <g_once_init_leave@plt>
   17f64:	b	17f14 <g_unichar_xdigit_value@plt+0x40b0>
   17f68:	andeq	r9, r3, r4, lsl #10
   17f6c:	andeq	r9, r3, r8, ror #9
   17f70:	andeq	r8, r3, ip, ror #7
   17f74:	andeq	r1, r2, ip, asr #6
   17f78:	ldr	r0, [pc, #108]	; 17fec <g_unichar_xdigit_value@plt+0x4188>
   17f7c:	push	{r3, r4, r5, lr}
   17f80:	add	r0, pc, r0
   17f84:	dmb	sy
   17f88:	ldr	r4, [r0, #200]	; 0xc8
   17f8c:	dmb	sy
   17f90:	cmp	r4, #0
   17f94:	beq	17fa8 <g_unichar_xdigit_value@plt+0x4144>
   17f98:	ldr	r3, [pc, #80]	; 17ff0 <g_unichar_xdigit_value@plt+0x418c>
   17f9c:	add	r3, pc, r3
   17fa0:	ldr	r0, [r3, #200]	; 0xc8
   17fa4:	pop	{r3, r4, r5, pc}
   17fa8:	add	r5, r0, #200	; 0xc8
   17fac:	mov	r0, r5
   17fb0:	bl	138ac <g_once_init_enter@plt>
   17fb4:	cmp	r0, #0
   17fb8:	beq	17f98 <g_unichar_xdigit_value@plt+0x4134>
   17fbc:	bl	17ce4 <g_unichar_xdigit_value@plt+0x3e80>
   17fc0:	ldr	r2, [pc, #44]	; 17ff4 <g_unichar_xdigit_value@plt+0x4190>
   17fc4:	ldr	r1, [pc, #44]	; 17ff8 <g_unichar_xdigit_value@plt+0x4194>
   17fc8:	mov	r3, r4
   17fcc:	add	r2, pc, r2
   17fd0:	add	r1, pc, r1
   17fd4:	add	r2, r2, #660	; 0x294
   17fd8:	bl	13438 <g_type_register_static@plt>
   17fdc:	mov	r1, r0
   17fe0:	mov	r0, r5
   17fe4:	bl	13bac <g_once_init_leave@plt>
   17fe8:	b	17f98 <g_unichar_xdigit_value@plt+0x4134>
   17fec:	andeq	r9, r3, r0, lsl #9
   17ff0:	andeq	r9, r3, r4, ror #8
   17ff4:	andeq	r8, r3, r8, ror #6
   17ff8:	andeq	r1, r2, r0, ror #5
   17ffc:	ldr	r0, [pc, #108]	; 18070 <g_unichar_xdigit_value@plt+0x420c>
   18000:	push	{r3, r4, r5, lr}
   18004:	add	r0, pc, r0
   18008:	dmb	sy
   1800c:	ldr	r4, [r0, #204]	; 0xcc
   18010:	dmb	sy
   18014:	cmp	r4, #0
   18018:	beq	1802c <g_unichar_xdigit_value@plt+0x41c8>
   1801c:	ldr	r3, [pc, #80]	; 18074 <g_unichar_xdigit_value@plt+0x4210>
   18020:	add	r3, pc, r3
   18024:	ldr	r0, [r3, #204]	; 0xcc
   18028:	pop	{r3, r4, r5, pc}
   1802c:	add	r5, r0, #204	; 0xcc
   18030:	mov	r0, r5
   18034:	bl	138ac <g_once_init_enter@plt>
   18038:	cmp	r0, #0
   1803c:	beq	1801c <g_unichar_xdigit_value@plt+0x41b8>
   18040:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   18044:	ldr	r2, [pc, #44]	; 18078 <g_unichar_xdigit_value@plt+0x4214>
   18048:	ldr	r1, [pc, #44]	; 1807c <g_unichar_xdigit_value@plt+0x4218>
   1804c:	mov	r3, r4
   18050:	add	r2, pc, r2
   18054:	add	r1, pc, r1
   18058:	add	r2, r2, #696	; 0x2b8
   1805c:	bl	13438 <g_type_register_static@plt>
   18060:	mov	r1, r0
   18064:	mov	r0, r5
   18068:	bl	13bac <g_once_init_leave@plt>
   1806c:	b	1801c <g_unichar_xdigit_value@plt+0x41b8>
   18070:	strdeq	r9, [r3], -ip
   18074:	andeq	r9, r3, r0, ror #7
   18078:	andeq	r8, r3, r4, ror #5
   1807c:	andeq	r1, r2, r4, ror r2
   18080:	ldr	r0, [pc, #108]	; 180f4 <g_unichar_xdigit_value@plt+0x4290>
   18084:	push	{r3, r4, r5, lr}
   18088:	add	r0, pc, r0
   1808c:	dmb	sy
   18090:	ldr	r4, [r0, #208]	; 0xd0
   18094:	dmb	sy
   18098:	cmp	r4, #0
   1809c:	beq	180b0 <g_unichar_xdigit_value@plt+0x424c>
   180a0:	ldr	r3, [pc, #80]	; 180f8 <g_unichar_xdigit_value@plt+0x4294>
   180a4:	add	r3, pc, r3
   180a8:	ldr	r0, [r3, #208]	; 0xd0
   180ac:	pop	{r3, r4, r5, pc}
   180b0:	add	r5, r0, #208	; 0xd0
   180b4:	mov	r0, r5
   180b8:	bl	138ac <g_once_init_enter@plt>
   180bc:	cmp	r0, #0
   180c0:	beq	180a0 <g_unichar_xdigit_value@plt+0x423c>
   180c4:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   180c8:	ldr	r2, [pc, #44]	; 180fc <g_unichar_xdigit_value@plt+0x4298>
   180cc:	ldr	r1, [pc, #44]	; 18100 <g_unichar_xdigit_value@plt+0x429c>
   180d0:	mov	r3, r4
   180d4:	add	r2, pc, r2
   180d8:	add	r1, pc, r1
   180dc:	add	r2, r2, #732	; 0x2dc
   180e0:	bl	13438 <g_type_register_static@plt>
   180e4:	mov	r1, r0
   180e8:	mov	r0, r5
   180ec:	bl	13bac <g_once_init_leave@plt>
   180f0:	b	180a0 <g_unichar_xdigit_value@plt+0x423c>
   180f4:	andeq	r9, r3, r8, ror r3
   180f8:	andeq	r9, r3, ip, asr r3
   180fc:	andeq	r8, r3, r0, ror #4
   18100:	andeq	r1, r2, r0, lsl #4
   18104:	ldr	r0, [pc, #108]	; 18178 <g_unichar_xdigit_value@plt+0x4314>
   18108:	push	{r3, r4, r5, lr}
   1810c:	add	r0, pc, r0
   18110:	dmb	sy
   18114:	ldr	r4, [r0, #212]	; 0xd4
   18118:	dmb	sy
   1811c:	cmp	r4, #0
   18120:	beq	18134 <g_unichar_xdigit_value@plt+0x42d0>
   18124:	ldr	r3, [pc, #80]	; 1817c <g_unichar_xdigit_value@plt+0x4318>
   18128:	add	r3, pc, r3
   1812c:	ldr	r0, [r3, #212]	; 0xd4
   18130:	pop	{r3, r4, r5, pc}
   18134:	add	r5, r0, #212	; 0xd4
   18138:	mov	r0, r5
   1813c:	bl	138ac <g_once_init_enter@plt>
   18140:	cmp	r0, #0
   18144:	beq	18124 <g_unichar_xdigit_value@plt+0x42c0>
   18148:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   1814c:	ldr	r2, [pc, #44]	; 18180 <g_unichar_xdigit_value@plt+0x431c>
   18150:	ldr	r1, [pc, #44]	; 18184 <g_unichar_xdigit_value@plt+0x4320>
   18154:	mov	r3, r4
   18158:	add	r2, pc, r2
   1815c:	add	r1, pc, r1
   18160:	add	r2, r2, #768	; 0x300
   18164:	bl	13438 <g_type_register_static@plt>
   18168:	mov	r1, r0
   1816c:	mov	r0, r5
   18170:	bl	13bac <g_once_init_leave@plt>
   18174:	b	18124 <g_unichar_xdigit_value@plt+0x42c0>
   18178:	strdeq	r9, [r3], -r4
   1817c:	ldrdeq	r9, [r3], -r8
   18180:	ldrdeq	r8, [r3], -ip
   18184:	andeq	r1, r2, ip, lsl #3
   18188:	ldr	r0, [pc, #108]	; 181fc <g_unichar_xdigit_value@plt+0x4398>
   1818c:	push	{r3, r4, r5, lr}
   18190:	add	r0, pc, r0
   18194:	dmb	sy
   18198:	ldr	r4, [r0, #216]	; 0xd8
   1819c:	dmb	sy
   181a0:	cmp	r4, #0
   181a4:	beq	181b8 <g_unichar_xdigit_value@plt+0x4354>
   181a8:	ldr	r3, [pc, #80]	; 18200 <g_unichar_xdigit_value@plt+0x439c>
   181ac:	add	r3, pc, r3
   181b0:	ldr	r0, [r3, #216]	; 0xd8
   181b4:	pop	{r3, r4, r5, pc}
   181b8:	add	r5, r0, #216	; 0xd8
   181bc:	mov	r0, r5
   181c0:	bl	138ac <g_once_init_enter@plt>
   181c4:	cmp	r0, #0
   181c8:	beq	181a8 <g_unichar_xdigit_value@plt+0x4344>
   181cc:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   181d0:	ldr	r2, [pc, #44]	; 18204 <g_unichar_xdigit_value@plt+0x43a0>
   181d4:	ldr	r1, [pc, #44]	; 18208 <g_unichar_xdigit_value@plt+0x43a4>
   181d8:	mov	r3, r4
   181dc:	add	r2, pc, r2
   181e0:	add	r1, pc, r1
   181e4:	add	r2, r2, #804	; 0x324
   181e8:	bl	13438 <g_type_register_static@plt>
   181ec:	mov	r1, r0
   181f0:	mov	r0, r5
   181f4:	bl	13bac <g_once_init_leave@plt>
   181f8:	b	181a8 <g_unichar_xdigit_value@plt+0x4344>
   181fc:	andeq	r9, r3, r0, ror r2
   18200:	andeq	r9, r3, r4, asr r2
   18204:	andeq	r8, r3, r8, asr r1
   18208:	andeq	r1, r2, ip, lsl r1
   1820c:	ldr	r0, [pc, #108]	; 18280 <g_unichar_xdigit_value@plt+0x441c>
   18210:	push	{r3, r4, r5, lr}
   18214:	add	r0, pc, r0
   18218:	dmb	sy
   1821c:	ldr	r4, [r0, #220]	; 0xdc
   18220:	dmb	sy
   18224:	cmp	r4, #0
   18228:	beq	1823c <g_unichar_xdigit_value@plt+0x43d8>
   1822c:	ldr	r3, [pc, #80]	; 18284 <g_unichar_xdigit_value@plt+0x4420>
   18230:	add	r3, pc, r3
   18234:	ldr	r0, [r3, #220]	; 0xdc
   18238:	pop	{r3, r4, r5, pc}
   1823c:	add	r5, r0, #220	; 0xdc
   18240:	mov	r0, r5
   18244:	bl	138ac <g_once_init_enter@plt>
   18248:	cmp	r0, #0
   1824c:	beq	1822c <g_unichar_xdigit_value@plt+0x43c8>
   18250:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   18254:	ldr	r2, [pc, #44]	; 18288 <g_unichar_xdigit_value@plt+0x4424>
   18258:	ldr	r1, [pc, #44]	; 1828c <g_unichar_xdigit_value@plt+0x4428>
   1825c:	mov	r3, r4
   18260:	add	r2, pc, r2
   18264:	add	r1, pc, r1
   18268:	add	r2, r2, #840	; 0x348
   1826c:	bl	13438 <g_type_register_static@plt>
   18270:	mov	r1, r0
   18274:	mov	r0, r5
   18278:	bl	13bac <g_once_init_leave@plt>
   1827c:	b	1822c <g_unichar_xdigit_value@plt+0x43c8>
   18280:	andeq	r9, r3, ip, ror #3
   18284:	ldrdeq	r9, [r3], -r0
   18288:	ldrdeq	r8, [r3], -r4
   1828c:	andeq	r1, r2, r4, lsr #1
   18290:	ldr	r0, [pc, #108]	; 18304 <g_unichar_xdigit_value@plt+0x44a0>
   18294:	push	{r3, r4, r5, lr}
   18298:	add	r0, pc, r0
   1829c:	dmb	sy
   182a0:	ldr	r4, [r0, #224]	; 0xe0
   182a4:	dmb	sy
   182a8:	cmp	r4, #0
   182ac:	beq	182c0 <g_unichar_xdigit_value@plt+0x445c>
   182b0:	ldr	r3, [pc, #80]	; 18308 <g_unichar_xdigit_value@plt+0x44a4>
   182b4:	add	r3, pc, r3
   182b8:	ldr	r0, [r3, #224]	; 0xe0
   182bc:	pop	{r3, r4, r5, pc}
   182c0:	add	r5, r0, #224	; 0xe0
   182c4:	mov	r0, r5
   182c8:	bl	138ac <g_once_init_enter@plt>
   182cc:	cmp	r0, #0
   182d0:	beq	182b0 <g_unichar_xdigit_value@plt+0x444c>
   182d4:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   182d8:	ldr	r2, [pc, #44]	; 1830c <g_unichar_xdigit_value@plt+0x44a8>
   182dc:	ldr	r1, [pc, #44]	; 18310 <g_unichar_xdigit_value@plt+0x44ac>
   182e0:	mov	r3, r4
   182e4:	add	r2, pc, r2
   182e8:	add	r1, pc, r1
   182ec:	add	r2, r2, #876	; 0x36c
   182f0:	bl	13438 <g_type_register_static@plt>
   182f4:	mov	r1, r0
   182f8:	mov	r0, r5
   182fc:	bl	13bac <g_once_init_leave@plt>
   18300:	b	182b0 <g_unichar_xdigit_value@plt+0x444c>
   18304:	andeq	r9, r3, r8, ror #2
   18308:	andeq	r9, r3, ip, asr #2
   1830c:	andeq	r8, r3, r0, asr r0
   18310:	andeq	r1, r2, ip, lsr #32
   18314:	ldr	r0, [pc, #108]	; 18388 <g_unichar_xdigit_value@plt+0x4524>
   18318:	push	{r3, r4, r5, lr}
   1831c:	add	r0, pc, r0
   18320:	dmb	sy
   18324:	ldr	r4, [r0, #228]	; 0xe4
   18328:	dmb	sy
   1832c:	cmp	r4, #0
   18330:	beq	18344 <g_unichar_xdigit_value@plt+0x44e0>
   18334:	ldr	r3, [pc, #80]	; 1838c <g_unichar_xdigit_value@plt+0x4528>
   18338:	add	r3, pc, r3
   1833c:	ldr	r0, [r3, #228]	; 0xe4
   18340:	pop	{r3, r4, r5, pc}
   18344:	add	r5, r0, #228	; 0xe4
   18348:	mov	r0, r5
   1834c:	bl	138ac <g_once_init_enter@plt>
   18350:	cmp	r0, #0
   18354:	beq	18334 <g_unichar_xdigit_value@plt+0x44d0>
   18358:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   1835c:	ldr	r2, [pc, #44]	; 18390 <g_unichar_xdigit_value@plt+0x452c>
   18360:	ldr	r1, [pc, #44]	; 18394 <g_unichar_xdigit_value@plt+0x4530>
   18364:	mov	r3, r4
   18368:	add	r2, pc, r2
   1836c:	add	r1, pc, r1
   18370:	add	r2, r2, #912	; 0x390
   18374:	bl	13438 <g_type_register_static@plt>
   18378:	mov	r1, r0
   1837c:	mov	r0, r5
   18380:	bl	13bac <g_once_init_leave@plt>
   18384:	b	18334 <g_unichar_xdigit_value@plt+0x44d0>
   18388:	andeq	r9, r3, r4, ror #1
   1838c:	andeq	r9, r3, r8, asr #1
   18390:	andeq	r7, r3, ip, asr #31
   18394:	andeq	r0, r2, r0, asr #31
   18398:	ldr	r0, [pc, #108]	; 1840c <g_unichar_xdigit_value@plt+0x45a8>
   1839c:	push	{r3, r4, r5, lr}
   183a0:	add	r0, pc, r0
   183a4:	dmb	sy
   183a8:	ldr	r4, [r0, #232]	; 0xe8
   183ac:	dmb	sy
   183b0:	cmp	r4, #0
   183b4:	beq	183c8 <g_unichar_xdigit_value@plt+0x4564>
   183b8:	ldr	r3, [pc, #80]	; 18410 <g_unichar_xdigit_value@plt+0x45ac>
   183bc:	add	r3, pc, r3
   183c0:	ldr	r0, [r3, #232]	; 0xe8
   183c4:	pop	{r3, r4, r5, pc}
   183c8:	add	r5, r0, #232	; 0xe8
   183cc:	mov	r0, r5
   183d0:	bl	138ac <g_once_init_enter@plt>
   183d4:	cmp	r0, #0
   183d8:	beq	183b8 <g_unichar_xdigit_value@plt+0x4554>
   183dc:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   183e0:	ldr	r2, [pc, #44]	; 18414 <g_unichar_xdigit_value@plt+0x45b0>
   183e4:	ldr	r1, [pc, #44]	; 18418 <g_unichar_xdigit_value@plt+0x45b4>
   183e8:	mov	r3, r4
   183ec:	add	r2, pc, r2
   183f0:	add	r1, pc, r1
   183f4:	add	r2, r2, #948	; 0x3b4
   183f8:	bl	13438 <g_type_register_static@plt>
   183fc:	mov	r1, r0
   18400:	mov	r0, r5
   18404:	bl	13bac <g_once_init_leave@plt>
   18408:	b	183b8 <g_unichar_xdigit_value@plt+0x4554>
   1840c:	andeq	r9, r3, r0, rrx
   18410:	andeq	r9, r3, r4, asr #32
   18414:	andeq	r7, r3, r8, asr #30
   18418:	andeq	r0, r2, r8, asr #30
   1841c:	ldr	r0, [pc, #108]	; 18490 <g_unichar_xdigit_value@plt+0x462c>
   18420:	push	{r3, r4, r5, lr}
   18424:	add	r0, pc, r0
   18428:	dmb	sy
   1842c:	ldr	r4, [r0, #236]	; 0xec
   18430:	dmb	sy
   18434:	cmp	r4, #0
   18438:	beq	1844c <g_unichar_xdigit_value@plt+0x45e8>
   1843c:	ldr	r3, [pc, #80]	; 18494 <g_unichar_xdigit_value@plt+0x4630>
   18440:	add	r3, pc, r3
   18444:	ldr	r0, [r3, #236]	; 0xec
   18448:	pop	{r3, r4, r5, pc}
   1844c:	add	r5, r0, #236	; 0xec
   18450:	mov	r0, r5
   18454:	bl	138ac <g_once_init_enter@plt>
   18458:	cmp	r0, #0
   1845c:	beq	1843c <g_unichar_xdigit_value@plt+0x45d8>
   18460:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   18464:	ldr	r2, [pc, #44]	; 18498 <g_unichar_xdigit_value@plt+0x4634>
   18468:	ldr	r1, [pc, #44]	; 1849c <g_unichar_xdigit_value@plt+0x4638>
   1846c:	mov	r3, r4
   18470:	add	r2, pc, r2
   18474:	add	r1, pc, r1
   18478:	add	r2, r2, #984	; 0x3d8
   1847c:	bl	13438 <g_type_register_static@plt>
   18480:	mov	r1, r0
   18484:	mov	r0, r5
   18488:	bl	13bac <g_once_init_leave@plt>
   1848c:	b	1843c <g_unichar_xdigit_value@plt+0x45d8>
   18490:	ldrdeq	r8, [r3], -ip
   18494:	andeq	r8, r3, r0, asr #31
   18498:	andeq	r7, r3, r4, asr #29
   1849c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   184a0:	ldr	r0, [pc, #108]	; 18514 <g_unichar_xdigit_value@plt+0x46b0>
   184a4:	push	{r3, r4, r5, lr}
   184a8:	add	r0, pc, r0
   184ac:	dmb	sy
   184b0:	ldr	r4, [r0, #240]	; 0xf0
   184b4:	dmb	sy
   184b8:	cmp	r4, #0
   184bc:	beq	184d0 <g_unichar_xdigit_value@plt+0x466c>
   184c0:	ldr	r3, [pc, #80]	; 18518 <g_unichar_xdigit_value@plt+0x46b4>
   184c4:	add	r3, pc, r3
   184c8:	ldr	r0, [r3, #240]	; 0xf0
   184cc:	pop	{r3, r4, r5, pc}
   184d0:	add	r5, r0, #240	; 0xf0
   184d4:	mov	r0, r5
   184d8:	bl	138ac <g_once_init_enter@plt>
   184dc:	cmp	r0, #0
   184e0:	beq	184c0 <g_unichar_xdigit_value@plt+0x465c>
   184e4:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   184e8:	ldr	r2, [pc, #44]	; 1851c <g_unichar_xdigit_value@plt+0x46b8>
   184ec:	ldr	r1, [pc, #44]	; 18520 <g_unichar_xdigit_value@plt+0x46bc>
   184f0:	mov	r3, r4
   184f4:	add	r2, pc, r2
   184f8:	add	r1, pc, r1
   184fc:	add	r2, r2, #1020	; 0x3fc
   18500:	bl	13438 <g_type_register_static@plt>
   18504:	mov	r1, r0
   18508:	mov	r0, r5
   1850c:	bl	13bac <g_once_init_leave@plt>
   18510:	b	184c0 <g_unichar_xdigit_value@plt+0x465c>
   18514:	andeq	r8, r3, r8, asr pc
   18518:	andeq	r8, r3, ip, lsr pc
   1851c:	andeq	r7, r3, r0, asr #28
   18520:	andeq	r0, r2, ip, asr lr
   18524:	push	{r4, lr}
   18528:	mov	r4, r0
   1852c:	bl	184a0 <g_unichar_xdigit_value@plt+0x463c>
   18530:	mov	r1, r0
   18534:	mov	r0, r4
   18538:	bl	13510 <g_type_check_instance_cast@plt>
   1853c:	ldr	r3, [pc, #28]	; 18560 <g_unichar_xdigit_value@plt+0x46fc>
   18540:	mov	r1, #80	; 0x50
   18544:	add	r3, pc, r3
   18548:	ldr	r0, [r3, #132]	; 0x84
   1854c:	bl	13db0 <g_type_check_class_cast@plt>
   18550:	ldr	r3, [r0, #24]
   18554:	mov	r0, r4
   18558:	blx	r3
   1855c:	pop	{r4, pc}
   18560:			; <UNDEFINED> instruction: 0x00038ebc
   18564:	ldr	r0, [pc, #108]	; 185d8 <g_unichar_xdigit_value@plt+0x4774>
   18568:	push	{r3, r4, r5, lr}
   1856c:	add	r0, pc, r0
   18570:	dmb	sy
   18574:	ldr	r4, [r0, #244]	; 0xf4
   18578:	dmb	sy
   1857c:	cmp	r4, #0
   18580:	beq	18594 <g_unichar_xdigit_value@plt+0x4730>
   18584:	ldr	r3, [pc, #80]	; 185dc <g_unichar_xdigit_value@plt+0x4778>
   18588:	add	r3, pc, r3
   1858c:	ldr	r0, [r3, #244]	; 0xf4
   18590:	pop	{r3, r4, r5, pc}
   18594:	add	r5, r0, #244	; 0xf4
   18598:	mov	r0, r5
   1859c:	bl	138ac <g_once_init_enter@plt>
   185a0:	cmp	r0, #0
   185a4:	beq	18584 <g_unichar_xdigit_value@plt+0x4720>
   185a8:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   185ac:	ldr	r2, [pc, #44]	; 185e0 <g_unichar_xdigit_value@plt+0x477c>
   185b0:	ldr	r1, [pc, #44]	; 185e4 <g_unichar_xdigit_value@plt+0x4780>
   185b4:	mov	r3, r4
   185b8:	add	r2, pc, r2
   185bc:	add	r1, pc, r1
   185c0:	add	r2, r2, #1056	; 0x420
   185c4:	bl	13438 <g_type_register_static@plt>
   185c8:	mov	r1, r0
   185cc:	mov	r0, r5
   185d0:	bl	13bac <g_once_init_leave@plt>
   185d4:	b	18584 <g_unichar_xdigit_value@plt+0x4720>
   185d8:	muleq	r3, r4, lr
   185dc:	andeq	r8, r3, r8, ror lr
   185e0:	andeq	r7, r3, ip, ror sp
   185e4:	andeq	r0, r2, r0, lsr #27
   185e8:	push	{r4, lr}
   185ec:	mov	r4, r0
   185f0:	bl	18564 <g_unichar_xdigit_value@plt+0x4700>
   185f4:	mov	r1, r0
   185f8:	mov	r0, r4
   185fc:	bl	13510 <g_type_check_instance_cast@plt>
   18600:	ldr	r3, [pc, #28]	; 18624 <g_unichar_xdigit_value@plt+0x47c0>
   18604:	mov	r1, #80	; 0x50
   18608:	add	r3, pc, r3
   1860c:	ldr	r0, [r3, #136]	; 0x88
   18610:	bl	13db0 <g_type_check_class_cast@plt>
   18614:	ldr	r3, [r0, #24]
   18618:	mov	r0, r4
   1861c:	blx	r3
   18620:	pop	{r4, pc}
   18624:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   18628:	ldr	r0, [pc, #112]	; 186a0 <g_unichar_xdigit_value@plt+0x483c>
   1862c:	push	{r3, r4, r5, lr}
   18630:	add	r0, pc, r0
   18634:	dmb	sy
   18638:	ldr	r4, [r0, #248]	; 0xf8
   1863c:	dmb	sy
   18640:	cmp	r4, #0
   18644:	beq	18658 <g_unichar_xdigit_value@plt+0x47f4>
   18648:	ldr	r3, [pc, #84]	; 186a4 <g_unichar_xdigit_value@plt+0x4840>
   1864c:	add	r3, pc, r3
   18650:	ldr	r0, [r3, #248]	; 0xf8
   18654:	pop	{r3, r4, r5, pc}
   18658:	add	r5, r0, #248	; 0xf8
   1865c:	mov	r0, r5
   18660:	bl	138ac <g_once_init_enter@plt>
   18664:	cmp	r0, #0
   18668:	beq	18648 <g_unichar_xdigit_value@plt+0x47e4>
   1866c:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   18670:	ldr	r2, [pc, #48]	; 186a8 <g_unichar_xdigit_value@plt+0x4844>
   18674:	ldr	r1, [pc, #48]	; 186ac <g_unichar_xdigit_value@plt+0x4848>
   18678:	mov	r3, r4
   1867c:	add	r2, pc, r2
   18680:	add	r2, r2, #1088	; 0x440
   18684:	add	r1, pc, r1
   18688:	add	r2, r2, #4
   1868c:	bl	13438 <g_type_register_static@plt>
   18690:	mov	r1, r0
   18694:	mov	r0, r5
   18698:	bl	13bac <g_once_init_leave@plt>
   1869c:	b	18648 <g_unichar_xdigit_value@plt+0x47e4>
   186a0:	ldrdeq	r8, [r3], -r0
   186a4:			; <UNDEFINED> instruction: 0x00038db4
   186a8:			; <UNDEFINED> instruction: 0x00037cb8
   186ac:	andeq	r0, r2, r8, ror #25
   186b0:	ldr	r0, [pc, #112]	; 18728 <g_unichar_xdigit_value@plt+0x48c4>
   186b4:	push	{r3, r4, r5, lr}
   186b8:	add	r0, pc, r0
   186bc:	dmb	sy
   186c0:	ldr	r4, [r0, #252]	; 0xfc
   186c4:	dmb	sy
   186c8:	cmp	r4, #0
   186cc:	beq	186e0 <g_unichar_xdigit_value@plt+0x487c>
   186d0:	ldr	r3, [pc, #84]	; 1872c <g_unichar_xdigit_value@plt+0x48c8>
   186d4:	add	r3, pc, r3
   186d8:	ldr	r0, [r3, #252]	; 0xfc
   186dc:	pop	{r3, r4, r5, pc}
   186e0:	add	r5, r0, #252	; 0xfc
   186e4:	mov	r0, r5
   186e8:	bl	138ac <g_once_init_enter@plt>
   186ec:	cmp	r0, #0
   186f0:	beq	186d0 <g_unichar_xdigit_value@plt+0x486c>
   186f4:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   186f8:	ldr	r2, [pc, #48]	; 18730 <g_unichar_xdigit_value@plt+0x48cc>
   186fc:	ldr	r1, [pc, #48]	; 18734 <g_unichar_xdigit_value@plt+0x48d0>
   18700:	mov	r3, r4
   18704:	add	r2, pc, r2
   18708:	add	r2, r2, #1120	; 0x460
   1870c:	add	r1, pc, r1
   18710:	add	r2, r2, #8
   18714:	bl	13438 <g_type_register_static@plt>
   18718:	mov	r1, r0
   1871c:	mov	r0, r5
   18720:	bl	13bac <g_once_init_leave@plt>
   18724:	b	186d0 <g_unichar_xdigit_value@plt+0x486c>
   18728:	andeq	r8, r3, r8, asr #26
   1872c:	andeq	r8, r3, ip, lsr #26
   18730:	andeq	r7, r3, r0, lsr ip
   18734:	andeq	r0, r2, r0, ror ip
   18738:	ldr	r0, [pc, #112]	; 187b0 <g_unichar_xdigit_value@plt+0x494c>
   1873c:	push	{r3, r4, r5, lr}
   18740:	add	r0, pc, r0
   18744:	dmb	sy
   18748:	ldr	r4, [r0, #256]	; 0x100
   1874c:	dmb	sy
   18750:	cmp	r4, #0
   18754:	beq	18768 <g_unichar_xdigit_value@plt+0x4904>
   18758:	ldr	r3, [pc, #84]	; 187b4 <g_unichar_xdigit_value@plt+0x4950>
   1875c:	add	r3, pc, r3
   18760:	ldr	r0, [r3, #256]	; 0x100
   18764:	pop	{r3, r4, r5, pc}
   18768:	add	r5, r0, #256	; 0x100
   1876c:	mov	r0, r5
   18770:	bl	138ac <g_once_init_enter@plt>
   18774:	cmp	r0, #0
   18778:	beq	18758 <g_unichar_xdigit_value@plt+0x48f4>
   1877c:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   18780:	ldr	r2, [pc, #48]	; 187b8 <g_unichar_xdigit_value@plt+0x4954>
   18784:	ldr	r1, [pc, #48]	; 187bc <g_unichar_xdigit_value@plt+0x4958>
   18788:	mov	r3, r4
   1878c:	add	r2, pc, r2
   18790:	add	r2, r2, #1152	; 0x480
   18794:	add	r1, pc, r1
   18798:	add	r2, r2, #12
   1879c:	bl	13438 <g_type_register_static@plt>
   187a0:	mov	r1, r0
   187a4:	mov	r0, r5
   187a8:	bl	13bac <g_once_init_leave@plt>
   187ac:	b	18758 <g_unichar_xdigit_value@plt+0x48f4>
   187b0:	andeq	r8, r3, r0, asr #25
   187b4:	andeq	r8, r3, r4, lsr #25
   187b8:	andeq	r7, r3, r8, lsr #23
   187bc:	strdeq	r0, [r2], -r4
   187c0:	ldr	r0, [pc, #108]	; 18834 <g_unichar_xdigit_value@plt+0x49d0>
   187c4:	push	{r3, r4, r5, lr}
   187c8:	add	r0, pc, r0
   187cc:	dmb	sy
   187d0:	ldr	r4, [r0, #260]	; 0x104
   187d4:	dmb	sy
   187d8:	cmp	r4, #0
   187dc:	beq	187f0 <g_unichar_xdigit_value@plt+0x498c>
   187e0:	ldr	r3, [pc, #80]	; 18838 <g_unichar_xdigit_value@plt+0x49d4>
   187e4:	add	r3, pc, r3
   187e8:	ldr	r0, [r3, #260]	; 0x104
   187ec:	pop	{r3, r4, r5, pc}
   187f0:	add	r5, r0, #260	; 0x104
   187f4:	mov	r0, r5
   187f8:	bl	138ac <g_once_init_enter@plt>
   187fc:	cmp	r0, #0
   18800:	beq	187e0 <g_unichar_xdigit_value@plt+0x497c>
   18804:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   18808:	ldr	r2, [pc, #44]	; 1883c <g_unichar_xdigit_value@plt+0x49d8>
   1880c:	ldr	r1, [pc, #44]	; 18840 <g_unichar_xdigit_value@plt+0x49dc>
   18810:	mov	r3, r4
   18814:	add	r2, pc, r2
   18818:	add	r1, pc, r1
   1881c:	add	r2, r2, #1200	; 0x4b0
   18820:	bl	13438 <g_type_register_static@plt>
   18824:	mov	r1, r0
   18828:	mov	r0, r5
   1882c:	bl	13bac <g_once_init_leave@plt>
   18830:	b	187e0 <g_unichar_xdigit_value@plt+0x497c>
   18834:	andeq	r8, r3, r8, lsr ip
   18838:	andeq	r8, r3, ip, lsl ip
   1883c:	andeq	r7, r3, r0, lsr #22
   18840:	andeq	r0, r2, r4, lsl #23
   18844:	push	{r4, lr}
   18848:	mov	r4, r0
   1884c:	bl	187c0 <g_unichar_xdigit_value@plt+0x495c>
   18850:	mov	r1, r0
   18854:	mov	r0, r4
   18858:	bl	13870 <g_type_instance_get_private@plt>
   1885c:	str	r0, [r4, #52]	; 0x34
   18860:	pop	{r4, pc}
   18864:	push	{r3, r4, r5, lr}
   18868:	mov	r4, r0
   1886c:	bl	187c0 <g_unichar_xdigit_value@plt+0x495c>
   18870:	mov	r1, r0
   18874:	mov	r0, r4
   18878:	bl	13510 <g_type_check_instance_cast@plt>
   1887c:	ldr	r3, [r0, #52]	; 0x34
   18880:	mov	r5, r0
   18884:	ldr	r0, [r3, #4]
   18888:	cmp	r0, #0
   1888c:	beq	188a0 <g_unichar_xdigit_value@plt+0x4a3c>
   18890:	bl	13b94 <g_object_unref@plt>
   18894:	ldr	r3, [r5, #52]	; 0x34
   18898:	mov	r2, #0
   1889c:	str	r2, [r3, #4]
   188a0:	ldr	r3, [pc, #28]	; 188c4 <g_unichar_xdigit_value@plt+0x4a60>
   188a4:	mov	r1, #80	; 0x50
   188a8:	add	r3, pc, r3
   188ac:	ldr	r0, [r3, #140]	; 0x8c
   188b0:	bl	13db0 <g_type_check_class_cast@plt>
   188b4:	ldr	r3, [r0, #24]
   188b8:	mov	r0, r4
   188bc:	blx	r3
   188c0:	pop	{r3, r4, r5, pc}
   188c4:	andeq	r8, r3, r8, asr fp
   188c8:	ldr	r0, [pc, #112]	; 18940 <g_unichar_xdigit_value@plt+0x4adc>
   188cc:	push	{r3, r4, r5, lr}
   188d0:	add	r0, pc, r0
   188d4:	dmb	sy
   188d8:	ldr	r4, [r0, #264]	; 0x108
   188dc:	dmb	sy
   188e0:	cmp	r4, #0
   188e4:	beq	188f8 <g_unichar_xdigit_value@plt+0x4a94>
   188e8:	ldr	r3, [pc, #84]	; 18944 <g_unichar_xdigit_value@plt+0x4ae0>
   188ec:	add	r3, pc, r3
   188f0:	ldr	r0, [r3, #264]	; 0x108
   188f4:	pop	{r3, r4, r5, pc}
   188f8:	add	r5, r0, #264	; 0x108
   188fc:	mov	r0, r5
   18900:	bl	138ac <g_once_init_enter@plt>
   18904:	cmp	r0, #0
   18908:	beq	188e8 <g_unichar_xdigit_value@plt+0x4a84>
   1890c:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   18910:	ldr	r2, [pc, #48]	; 18948 <g_unichar_xdigit_value@plt+0x4ae4>
   18914:	ldr	r1, [pc, #48]	; 1894c <g_unichar_xdigit_value@plt+0x4ae8>
   18918:	mov	r3, r4
   1891c:	add	r2, pc, r2
   18920:	add	r2, r2, #1232	; 0x4d0
   18924:	add	r1, pc, r1
   18928:	add	r2, r2, #4
   1892c:	bl	13438 <g_type_register_static@plt>
   18930:	mov	r1, r0
   18934:	mov	r0, r5
   18938:	bl	13bac <g_once_init_leave@plt>
   1893c:	b	188e8 <g_unichar_xdigit_value@plt+0x4a84>
   18940:	andeq	r8, r3, r0, lsr fp
   18944:	andeq	r8, r3, r4, lsl fp
   18948:	andeq	r7, r3, r8, lsl sl
   1894c:	andeq	r0, r2, r4, lsl #21
   18950:	ldr	r0, [pc, #112]	; 189c8 <g_unichar_xdigit_value@plt+0x4b64>
   18954:	push	{r3, r4, r5, lr}
   18958:	add	r0, pc, r0
   1895c:	dmb	sy
   18960:	ldr	r4, [r0, #268]	; 0x10c
   18964:	dmb	sy
   18968:	cmp	r4, #0
   1896c:	beq	18980 <g_unichar_xdigit_value@plt+0x4b1c>
   18970:	ldr	r3, [pc, #84]	; 189cc <g_unichar_xdigit_value@plt+0x4b68>
   18974:	add	r3, pc, r3
   18978:	ldr	r0, [r3, #268]	; 0x10c
   1897c:	pop	{r3, r4, r5, pc}
   18980:	add	r5, r0, #268	; 0x10c
   18984:	mov	r0, r5
   18988:	bl	138ac <g_once_init_enter@plt>
   1898c:	cmp	r0, #0
   18990:	beq	18970 <g_unichar_xdigit_value@plt+0x4b0c>
   18994:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   18998:	ldr	r2, [pc, #48]	; 189d0 <g_unichar_xdigit_value@plt+0x4b6c>
   1899c:	ldr	r1, [pc, #48]	; 189d4 <g_unichar_xdigit_value@plt+0x4b70>
   189a0:	mov	r3, r4
   189a4:	add	r2, pc, r2
   189a8:	add	r2, r2, #1264	; 0x4f0
   189ac:	add	r1, pc, r1
   189b0:	add	r2, r2, #8
   189b4:	bl	13438 <g_type_register_static@plt>
   189b8:	mov	r1, r0
   189bc:	mov	r0, r5
   189c0:	bl	13bac <g_once_init_leave@plt>
   189c4:	b	18970 <g_unichar_xdigit_value@plt+0x4b0c>
   189c8:	andeq	r8, r3, r8, lsr #21
   189cc:	andeq	r8, r3, ip, lsl #21
   189d0:	muleq	r3, r0, r9
   189d4:	andeq	r0, r2, r8, lsl #20
   189d8:	ldr	r0, [pc, #112]	; 18a50 <g_unichar_xdigit_value@plt+0x4bec>
   189dc:	push	{r3, r4, r5, lr}
   189e0:	add	r0, pc, r0
   189e4:	dmb	sy
   189e8:	ldr	r4, [r0, #272]	; 0x110
   189ec:	dmb	sy
   189f0:	cmp	r4, #0
   189f4:	beq	18a08 <g_unichar_xdigit_value@plt+0x4ba4>
   189f8:	ldr	r3, [pc, #84]	; 18a54 <g_unichar_xdigit_value@plt+0x4bf0>
   189fc:	add	r3, pc, r3
   18a00:	ldr	r0, [r3, #272]	; 0x110
   18a04:	pop	{r3, r4, r5, pc}
   18a08:	add	r5, r0, #272	; 0x110
   18a0c:	mov	r0, r5
   18a10:	bl	138ac <g_once_init_enter@plt>
   18a14:	cmp	r0, #0
   18a18:	beq	189f8 <g_unichar_xdigit_value@plt+0x4b94>
   18a1c:	bl	17a0c <g_unichar_xdigit_value@plt+0x3ba8>
   18a20:	ldr	r2, [pc, #48]	; 18a58 <g_unichar_xdigit_value@plt+0x4bf4>
   18a24:	ldr	r1, [pc, #48]	; 18a5c <g_unichar_xdigit_value@plt+0x4bf8>
   18a28:	mov	r3, r4
   18a2c:	add	r2, pc, r2
   18a30:	add	r2, r2, #1296	; 0x510
   18a34:	add	r1, pc, r1
   18a38:	add	r2, r2, #12
   18a3c:	bl	13438 <g_type_register_static@plt>
   18a40:	mov	r1, r0
   18a44:	mov	r0, r5
   18a48:	bl	13bac <g_once_init_leave@plt>
   18a4c:	b	189f8 <g_unichar_xdigit_value@plt+0x4b94>
   18a50:	andeq	r8, r3, r0, lsr #20
   18a54:	andeq	r8, r3, r4, lsl #20
   18a58:	andeq	r7, r3, r8, lsl #18
   18a5c:	muleq	r2, r4, r9
   18a60:	ldr	r0, [pc, #108]	; 18ad4 <g_unichar_xdigit_value@plt+0x4c70>
   18a64:	push	{r3, r4, r5, lr}
   18a68:	add	r0, pc, r0
   18a6c:	dmb	sy
   18a70:	ldr	r4, [r0, #276]	; 0x114
   18a74:	dmb	sy
   18a78:	cmp	r4, #0
   18a7c:	beq	18a90 <g_unichar_xdigit_value@plt+0x4c2c>
   18a80:	ldr	r3, [pc, #80]	; 18ad8 <g_unichar_xdigit_value@plt+0x4c74>
   18a84:	add	r3, pc, r3
   18a88:	ldr	r0, [r3, #276]	; 0x114
   18a8c:	pop	{r3, r4, r5, pc}
   18a90:	add	r5, r0, #276	; 0x114
   18a94:	mov	r0, r5
   18a98:	bl	138ac <g_once_init_enter@plt>
   18a9c:	cmp	r0, #0
   18aa0:	beq	18a80 <g_unichar_xdigit_value@plt+0x4c1c>
   18aa4:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   18aa8:	ldr	r2, [pc, #44]	; 18adc <g_unichar_xdigit_value@plt+0x4c78>
   18aac:	ldr	r1, [pc, #44]	; 18ae0 <g_unichar_xdigit_value@plt+0x4c7c>
   18ab0:	mov	r3, r4
   18ab4:	add	r2, pc, r2
   18ab8:	add	r1, pc, r1
   18abc:	add	r2, r2, #1344	; 0x540
   18ac0:	bl	13438 <g_type_register_static@plt>
   18ac4:	mov	r1, r0
   18ac8:	mov	r0, r5
   18acc:	bl	13bac <g_once_init_leave@plt>
   18ad0:	b	18a80 <g_unichar_xdigit_value@plt+0x4c1c>
   18ad4:	muleq	r3, r8, r9
   18ad8:	andeq	r8, r3, ip, ror r9
   18adc:	andeq	r7, r3, r0, lsl #17
   18ae0:	andeq	r0, r2, r8, lsl r9
   18ae4:	ldr	r0, [pc, #112]	; 18b5c <g_unichar_xdigit_value@plt+0x4cf8>
   18ae8:	push	{r3, r4, r5, lr}
   18aec:	add	r0, pc, r0
   18af0:	dmb	sy
   18af4:	ldr	r4, [r0, #280]	; 0x118
   18af8:	dmb	sy
   18afc:	cmp	r4, #0
   18b00:	beq	18b14 <g_unichar_xdigit_value@plt+0x4cb0>
   18b04:	ldr	r3, [pc, #84]	; 18b60 <g_unichar_xdigit_value@plt+0x4cfc>
   18b08:	add	r3, pc, r3
   18b0c:	ldr	r0, [r3, #280]	; 0x118
   18b10:	pop	{r3, r4, r5, pc}
   18b14:	add	r5, r0, #280	; 0x118
   18b18:	mov	r0, r5
   18b1c:	bl	138ac <g_once_init_enter@plt>
   18b20:	cmp	r0, #0
   18b24:	beq	18b04 <g_unichar_xdigit_value@plt+0x4ca0>
   18b28:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   18b2c:	ldr	r2, [pc, #48]	; 18b64 <g_unichar_xdigit_value@plt+0x4d00>
   18b30:	ldr	r1, [pc, #48]	; 18b68 <g_unichar_xdigit_value@plt+0x4d04>
   18b34:	mov	r3, r4
   18b38:	add	r2, pc, r2
   18b3c:	add	r2, r2, #1376	; 0x560
   18b40:	add	r1, pc, r1
   18b44:	add	r2, r2, #4
   18b48:	bl	13438 <g_type_register_static@plt>
   18b4c:	mov	r1, r0
   18b50:	mov	r0, r5
   18b54:	bl	13bac <g_once_init_leave@plt>
   18b58:	b	18b04 <g_unichar_xdigit_value@plt+0x4ca0>
   18b5c:	andeq	r8, r3, r4, lsl r9
   18b60:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   18b64:	strdeq	r7, [r3], -ip
   18b68:	muleq	r2, r8, r8
   18b6c:	ldr	r0, [pc, #112]	; 18be4 <g_unichar_xdigit_value@plt+0x4d80>
   18b70:	push	{r3, r4, r5, lr}
   18b74:	add	r0, pc, r0
   18b78:	dmb	sy
   18b7c:	ldr	r4, [r0, #284]	; 0x11c
   18b80:	dmb	sy
   18b84:	cmp	r4, #0
   18b88:	beq	18b9c <g_unichar_xdigit_value@plt+0x4d38>
   18b8c:	ldr	r3, [pc, #84]	; 18be8 <g_unichar_xdigit_value@plt+0x4d84>
   18b90:	add	r3, pc, r3
   18b94:	ldr	r0, [r3, #284]	; 0x11c
   18b98:	pop	{r3, r4, r5, pc}
   18b9c:	add	r5, r0, #284	; 0x11c
   18ba0:	mov	r0, r5
   18ba4:	bl	138ac <g_once_init_enter@plt>
   18ba8:	cmp	r0, #0
   18bac:	beq	18b8c <g_unichar_xdigit_value@plt+0x4d28>
   18bb0:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   18bb4:	ldr	r2, [pc, #48]	; 18bec <g_unichar_xdigit_value@plt+0x4d88>
   18bb8:	ldr	r1, [pc, #48]	; 18bf0 <g_unichar_xdigit_value@plt+0x4d8c>
   18bbc:	mov	r3, r4
   18bc0:	add	r2, pc, r2
   18bc4:	add	r2, r2, #1408	; 0x580
   18bc8:	add	r1, pc, r1
   18bcc:	add	r2, r2, #8
   18bd0:	bl	13438 <g_type_register_static@plt>
   18bd4:	mov	r1, r0
   18bd8:	mov	r0, r5
   18bdc:	bl	13bac <g_once_init_leave@plt>
   18be0:	b	18b8c <g_unichar_xdigit_value@plt+0x4d28>
   18be4:	andeq	r8, r3, ip, lsl #17
   18be8:	andeq	r8, r3, r0, ror r8
   18bec:	andeq	r7, r3, r4, ror r7
   18bf0:	andeq	r0, r2, r8, lsl r8
   18bf4:	ldr	r0, [pc, #112]	; 18c6c <g_unichar_xdigit_value@plt+0x4e08>
   18bf8:	push	{r3, r4, r5, lr}
   18bfc:	add	r0, pc, r0
   18c00:	dmb	sy
   18c04:	ldr	r4, [r0, #288]	; 0x120
   18c08:	dmb	sy
   18c0c:	cmp	r4, #0
   18c10:	beq	18c24 <g_unichar_xdigit_value@plt+0x4dc0>
   18c14:	ldr	r3, [pc, #84]	; 18c70 <g_unichar_xdigit_value@plt+0x4e0c>
   18c18:	add	r3, pc, r3
   18c1c:	ldr	r0, [r3, #288]	; 0x120
   18c20:	pop	{r3, r4, r5, pc}
   18c24:	add	r5, r0, #288	; 0x120
   18c28:	mov	r0, r5
   18c2c:	bl	138ac <g_once_init_enter@plt>
   18c30:	cmp	r0, #0
   18c34:	beq	18c14 <g_unichar_xdigit_value@plt+0x4db0>
   18c38:	bl	17ad4 <g_unichar_xdigit_value@plt+0x3c70>
   18c3c:	ldr	r2, [pc, #48]	; 18c74 <g_unichar_xdigit_value@plt+0x4e10>
   18c40:	ldr	r1, [pc, #48]	; 18c78 <g_unichar_xdigit_value@plt+0x4e14>
   18c44:	mov	r3, r4
   18c48:	add	r2, pc, r2
   18c4c:	add	r2, r2, #1440	; 0x5a0
   18c50:	add	r1, pc, r1
   18c54:	add	r2, r2, #12
   18c58:	bl	13438 <g_type_register_static@plt>
   18c5c:	mov	r1, r0
   18c60:	mov	r0, r5
   18c64:	bl	13bac <g_once_init_leave@plt>
   18c68:	b	18c14 <g_unichar_xdigit_value@plt+0x4db0>
   18c6c:	andeq	r8, r3, r4, lsl #16
   18c70:	andeq	r8, r3, r8, ror #15
   18c74:	andeq	r7, r3, ip, ror #13
   18c78:	muleq	r2, r8, r7
   18c7c:	ldr	r0, [pc, #108]	; 18cf0 <g_unichar_xdigit_value@plt+0x4e8c>
   18c80:	push	{r3, r4, r5, lr}
   18c84:	add	r0, pc, r0
   18c88:	dmb	sy
   18c8c:	ldr	r4, [r0, #292]	; 0x124
   18c90:	dmb	sy
   18c94:	cmp	r4, #0
   18c98:	beq	18cac <g_unichar_xdigit_value@plt+0x4e48>
   18c9c:	ldr	r3, [pc, #80]	; 18cf4 <g_unichar_xdigit_value@plt+0x4e90>
   18ca0:	add	r3, pc, r3
   18ca4:	ldr	r0, [r3, #292]	; 0x124
   18ca8:	pop	{r3, r4, r5, pc}
   18cac:	add	r5, r0, #292	; 0x124
   18cb0:	mov	r0, r5
   18cb4:	bl	138ac <g_once_init_enter@plt>
   18cb8:	cmp	r0, #0
   18cbc:	beq	18c9c <g_unichar_xdigit_value@plt+0x4e38>
   18cc0:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   18cc4:	ldr	r2, [pc, #44]	; 18cf8 <g_unichar_xdigit_value@plt+0x4e94>
   18cc8:	ldr	r1, [pc, #44]	; 18cfc <g_unichar_xdigit_value@plt+0x4e98>
   18ccc:	mov	r3, r4
   18cd0:	add	r2, pc, r2
   18cd4:	add	r1, pc, r1
   18cd8:	add	r2, r2, #1488	; 0x5d0
   18cdc:	bl	13438 <g_type_register_static@plt>
   18ce0:	mov	r1, r0
   18ce4:	mov	r0, r5
   18ce8:	bl	13bac <g_once_init_leave@plt>
   18cec:	b	18c9c <g_unichar_xdigit_value@plt+0x4e38>
   18cf0:	andeq	r8, r3, ip, ror r7
   18cf4:	andeq	r8, r3, r0, ror #14
   18cf8:	andeq	r7, r3, r4, ror #12
   18cfc:	andeq	r0, r2, r0, lsr #14
   18d00:	ldr	r0, [pc, #112]	; 18d78 <g_unichar_xdigit_value@plt+0x4f14>
   18d04:	push	{r3, r4, r5, lr}
   18d08:	add	r0, pc, r0
   18d0c:	dmb	sy
   18d10:	ldr	r4, [r0, #296]	; 0x128
   18d14:	dmb	sy
   18d18:	cmp	r4, #0
   18d1c:	beq	18d30 <g_unichar_xdigit_value@plt+0x4ecc>
   18d20:	ldr	r3, [pc, #84]	; 18d7c <g_unichar_xdigit_value@plt+0x4f18>
   18d24:	add	r3, pc, r3
   18d28:	ldr	r0, [r3, #296]	; 0x128
   18d2c:	pop	{r3, r4, r5, pc}
   18d30:	add	r5, r0, #296	; 0x128
   18d34:	mov	r0, r5
   18d38:	bl	138ac <g_once_init_enter@plt>
   18d3c:	cmp	r0, #0
   18d40:	beq	18d20 <g_unichar_xdigit_value@plt+0x4ebc>
   18d44:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   18d48:	ldr	r2, [pc, #48]	; 18d80 <g_unichar_xdigit_value@plt+0x4f1c>
   18d4c:	ldr	r1, [pc, #48]	; 18d84 <g_unichar_xdigit_value@plt+0x4f20>
   18d50:	mov	r3, r4
   18d54:	add	r2, pc, r2
   18d58:	add	r2, r2, #1520	; 0x5f0
   18d5c:	add	r1, pc, r1
   18d60:	add	r2, r2, #4
   18d64:	bl	13438 <g_type_register_static@plt>
   18d68:	mov	r1, r0
   18d6c:	mov	r0, r5
   18d70:	bl	13bac <g_once_init_leave@plt>
   18d74:	b	18d20 <g_unichar_xdigit_value@plt+0x4ebc>
   18d78:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   18d7c:	ldrdeq	r8, [r3], -ip
   18d80:	andeq	r7, r3, r0, ror #11
   18d84:	andeq	r0, r2, r8, lsr #13
   18d88:	push	{r4, r5, r6, r7, r8, lr}
   18d8c:	subs	r5, r1, #0
   18d90:	mov	r6, r2
   18d94:	mov	r7, r3
   18d98:	beq	18e7c <g_unichar_xdigit_value@plt+0x5018>
   18d9c:	bl	13e28 <g_type_create_instance@plt>
   18da0:	mov	r4, r0
   18da4:	mov	r0, r5
   18da8:	bl	136f0 <g_strdup@plt>
   18dac:	ldr	r3, [r4, #8]
   18db0:	mov	r8, r0
   18db4:	ldr	r0, [r3]
   18db8:	bl	1399c <g_free@plt>
   18dbc:	ldr	r3, [r4, #8]
   18dc0:	mov	r0, r5
   18dc4:	mov	r1, r4
   18dc8:	mov	r2, r6
   18dcc:	str	r8, [r3]
   18dd0:	bl	37158 <g_unichar_xdigit_value@plt+0x232f4>
   18dd4:	ldr	ip, [r4, #8]
   18dd8:	mov	r5, r0
   18ddc:	ldr	r0, [ip, #12]
   18de0:	cmp	r0, #0
   18de4:	beq	18df8 <g_unichar_xdigit_value@plt+0x4f94>
   18de8:	bl	13b94 <g_object_unref@plt>
   18dec:	ldr	ip, [r4, #8]
   18df0:	mov	r3, #0
   18df4:	str	r3, [ip, #12]
   18df8:	ldr	r0, [ip, #4]
   18dfc:	str	r5, [ip, #12]
   18e00:	cmp	r0, #0
   18e04:	beq	18e18 <g_unichar_xdigit_value@plt+0x4fb4>
   18e08:	bl	13b94 <g_object_unref@plt>
   18e0c:	ldr	ip, [r4, #8]
   18e10:	mov	r3, #0
   18e14:	str	r3, [ip, #4]
   18e18:	ldr	r0, [ip, #8]
   18e1c:	mov	r5, #0
   18e20:	str	r5, [ip, #4]
   18e24:	cmp	r0, r5
   18e28:	str	r5, [ip, #16]
   18e2c:	beq	18e3c <g_unichar_xdigit_value@plt+0x4fd8>
   18e30:	bl	13b94 <g_object_unref@plt>
   18e34:	ldr	ip, [r4, #8]
   18e38:	str	r5, [ip, #8]
   18e3c:	ldr	r3, [sp, #24]
   18e40:	mov	r5, #0
   18e44:	ldr	r0, [ip, #24]
   18e48:	str	r5, [ip, #8]
   18e4c:	str	r6, [r4, #12]
   18e50:	str	r6, [ip, #36]	; 0x24
   18e54:	str	r3, [r4, #20]
   18e58:	str	r7, [r4, #16]
   18e5c:	str	r5, [ip, #20]
   18e60:	bl	1399c <g_free@plt>
   18e64:	ldr	r3, [r4, #8]
   18e68:	mov	r0, r4
   18e6c:	str	r5, [r3, #24]
   18e70:	str	r5, [r3, #28]
   18e74:	str	r5, [r3, #32]
   18e78:	pop	{r4, r5, r6, r7, r8, pc}
   18e7c:	ldr	r1, [pc, #28]	; 18ea0 <g_unichar_xdigit_value@plt+0x503c>
   18e80:	mov	r0, r5
   18e84:	ldr	r2, [pc, #24]	; 18ea4 <g_unichar_xdigit_value@plt+0x5040>
   18e88:	add	r1, pc, r1
   18e8c:	add	r2, pc, r2
   18e90:	add	r1, r1, #992	; 0x3e0
   18e94:	bl	13450 <g_return_if_fail_warning@plt>
   18e98:	mov	r0, r5
   18e9c:	pop	{r4, r5, r6, r7, r8, pc}
   18ea0:	andeq	pc, r1, r4, lsr r8	; <UNPREDICTABLE>
   18ea4:	andeq	r0, r2, ip, lsl #11
   18ea8:	push	{r3, r4, r5, r6, r7, lr}
   18eac:	subs	r4, r0, #0
   18eb0:	mov	r5, r3
   18eb4:	ldr	r6, [sp, #24]
   18eb8:	beq	18f0c <g_unichar_xdigit_value@plt+0x50a8>
   18ebc:	ldr	r3, [r4, #8]
   18ec0:	mov	r0, r2
   18ec4:	str	r1, [r3, #20]
   18ec8:	bl	136f0 <g_strdup@plt>
   18ecc:	ldr	r3, [r4, #8]
   18ed0:	mov	r7, r0
   18ed4:	ldr	r0, [r3, #24]
   18ed8:	bl	1399c <g_free@plt>
   18edc:	ldr	r4, [r4, #8]
   18ee0:	mov	r1, r5
   18ee4:	ldr	r5, [r4]
   18ee8:	str	r7, [r4, #24]
   18eec:	mov	r0, r5
   18ef0:	bl	13be8 <g_utf8_strlen@plt>
   18ef4:	mov	r1, r6
   18ef8:	str	r0, [r4, #28]
   18efc:	mov	r0, r5
   18f00:	bl	13be8 <g_utf8_strlen@plt>
   18f04:	str	r0, [r4, #32]
   18f08:	pop	{r3, r4, r5, r6, r7, pc}
   18f0c:	ldr	r1, [pc, #20]	; 18f28 <g_unichar_xdigit_value@plt+0x50c4>
   18f10:	ldr	r2, [pc, #20]	; 18f2c <g_unichar_xdigit_value@plt+0x50c8>
   18f14:	add	r1, pc, r1
   18f18:	add	r2, pc, r2
   18f1c:	add	r1, r1, #1012	; 0x3f4
   18f20:	pop	{r3, r4, r5, r6, r7, lr}
   18f24:	b	13450 <g_return_if_fail_warning@plt>
   18f28:	andeq	pc, r1, r8, lsr #15
   18f2c:	andeq	pc, r1, ip, asr #3
   18f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f34:	mov	r7, r0
   18f38:	sub	sp, sp, #20
   18f3c:	ldr	r0, [r0, #28]
   18f40:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   18f44:	subs	r8, r0, #0
   18f48:	moveq	r0, r8
   18f4c:	beq	19078 <g_unichar_xdigit_value@plt+0x5214>
   18f50:	mov	r1, r8
   18f54:	mov	r0, r7
   18f58:	bl	179c8 <g_unichar_xdigit_value@plt+0x3b64>
   18f5c:	mov	r9, r0
   18f60:	bl	25528 <g_unichar_xdigit_value@plt+0x116c4>
   18f64:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   18f68:	cmp	r0, #0
   18f6c:	beq	1906c <g_unichar_xdigit_value@plt+0x5208>
   18f70:	ldr	r0, [r7, #28]
   18f74:	cmp	r0, #0
   18f78:	beq	19080 <g_unichar_xdigit_value@plt+0x521c>
   18f7c:	bl	133f0 <g_object_ref@plt>
   18f80:	mov	r5, r0
   18f84:	ldr	r0, [r7, #28]
   18f88:	cmp	r0, #0
   18f8c:	moveq	r6, r0
   18f90:	beq	18f9c <g_unichar_xdigit_value@plt+0x5138>
   18f94:	bl	133f0 <g_object_ref@plt>
   18f98:	mov	r6, r0
   18f9c:	ldr	r0, [r5, #24]
   18fa0:	cmp	r0, #0
   18fa4:	beq	19094 <g_unichar_xdigit_value@plt+0x5230>
   18fa8:	bl	133f0 <g_object_ref@plt>
   18fac:	mov	r4, r0
   18fb0:	mov	r0, r5
   18fb4:	bl	13b94 <g_object_unref@plt>
   18fb8:	ldr	r0, [r4, #24]
   18fbc:	mov	r5, r4
   18fc0:	cmp	r0, #0
   18fc4:	bne	18fa8 <g_unichar_xdigit_value@plt+0x5144>
   18fc8:	ldr	r0, [r6, #28]
   18fcc:	cmp	r0, #0
   18fd0:	beq	1908c <g_unichar_xdigit_value@plt+0x5228>
   18fd4:	bl	133f0 <g_object_ref@plt>
   18fd8:	mov	r5, r0
   18fdc:	mov	r0, r6
   18fe0:	bl	13b94 <g_object_unref@plt>
   18fe4:	ldr	r0, [r5, #28]
   18fe8:	mov	r6, r5
   18fec:	cmp	r0, #0
   18ff0:	bne	18fd4 <g_unichar_xdigit_value@plt+0x5170>
   18ff4:	ldr	r3, [r7, #16]
   18ff8:	str	r3, [sp, #12]
   18ffc:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19000:	mov	sl, r0
   19004:	mov	r0, r4
   19008:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   1900c:	mov	r6, r0
   19010:	mov	r0, r5
   19014:	ldr	fp, [r6, #20]
   19018:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   1901c:	ldr	r3, [sp, #12]
   19020:	mov	r2, sl
   19024:	mov	r1, #6
   19028:	ldr	ip, [r0, #24]
   1902c:	mov	r7, r0
   19030:	mov	r0, r3
   19034:	mov	r3, fp
   19038:	str	ip, [sp]
   1903c:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   19040:	mov	r0, r7
   19044:	bl	13b94 <g_object_unref@plt>
   19048:	mov	r0, r6
   1904c:	bl	13b94 <g_object_unref@plt>
   19050:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19054:	mov	r0, #0
   19058:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   1905c:	mov	r0, r5
   19060:	bl	13b94 <g_object_unref@plt>
   19064:	mov	r0, r4
   19068:	bl	13b94 <g_object_unref@plt>
   1906c:	mov	r0, r8
   19070:	bl	13b94 <g_object_unref@plt>
   19074:	mov	r0, r9
   19078:	add	sp, sp, #20
   1907c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19080:	mov	r5, r0
   19084:	mov	r6, r0
   19088:	b	18f9c <g_unichar_xdigit_value@plt+0x5138>
   1908c:	mov	r5, r6
   19090:	b	18ff4 <g_unichar_xdigit_value@plt+0x5190>
   19094:	mov	r4, r5
   19098:	b	18fc8 <g_unichar_xdigit_value@plt+0x5164>
   1909c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190a0:	mov	r6, r0
   190a4:	sub	sp, sp, #20
   190a8:	ldr	r0, [r0, #24]
   190ac:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   190b0:	mov	r8, r0
   190b4:	ldr	r0, [r6, #28]
   190b8:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   190bc:	cmp	r8, #0
   190c0:	mov	r9, r0
   190c4:	beq	19228 <g_unichar_xdigit_value@plt+0x53c4>
   190c8:	cmp	r0, #0
   190cc:	bne	190e4 <g_unichar_xdigit_value@plt+0x5280>
   190d0:	mov	r0, r8
   190d4:	bl	13b94 <g_object_unref@plt>
   190d8:	mov	r0, r9
   190dc:	add	sp, sp, #20
   190e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190e4:	mov	r1, r8
   190e8:	mov	r2, r9
   190ec:	mov	r0, r6
   190f0:	bl	17a90 <g_unichar_xdigit_value@plt+0x3c2c>
   190f4:	mov	sl, r0
   190f8:	bl	25528 <g_unichar_xdigit_value@plt+0x116c4>
   190fc:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19100:	cmp	r0, #0
   19104:	beq	1920c <g_unichar_xdigit_value@plt+0x53a8>
   19108:	ldr	r0, [r6, #24]
   1910c:	cmp	r0, #0
   19110:	moveq	r5, r0
   19114:	beq	19120 <g_unichar_xdigit_value@plt+0x52bc>
   19118:	bl	133f0 <g_object_ref@plt>
   1911c:	mov	r5, r0
   19120:	ldr	r0, [r6, #28]
   19124:	cmp	r0, #0
   19128:	moveq	r7, r0
   1912c:	beq	19138 <g_unichar_xdigit_value@plt+0x52d4>
   19130:	bl	133f0 <g_object_ref@plt>
   19134:	mov	r7, r0
   19138:	ldr	r0, [r5, #24]
   1913c:	cmp	r0, #0
   19140:	beq	19248 <g_unichar_xdigit_value@plt+0x53e4>
   19144:	bl	133f0 <g_object_ref@plt>
   19148:	mov	r4, r0
   1914c:	mov	r0, r5
   19150:	bl	13b94 <g_object_unref@plt>
   19154:	ldr	r0, [r4, #24]
   19158:	mov	r5, r4
   1915c:	cmp	r0, #0
   19160:	bne	19144 <g_unichar_xdigit_value@plt+0x52e0>
   19164:	ldr	r0, [r7, #28]
   19168:	cmp	r0, #0
   1916c:	beq	19240 <g_unichar_xdigit_value@plt+0x53dc>
   19170:	bl	133f0 <g_object_ref@plt>
   19174:	mov	r5, r0
   19178:	mov	r0, r7
   1917c:	bl	13b94 <g_object_unref@plt>
   19180:	ldr	r0, [r5, #28]
   19184:	mov	r7, r5
   19188:	cmp	r0, #0
   1918c:	bne	19170 <g_unichar_xdigit_value@plt+0x530c>
   19190:	ldr	r2, [r6, #16]
   19194:	str	r2, [sp, #8]
   19198:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   1919c:	mov	fp, r0
   191a0:	mov	r0, r4
   191a4:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   191a8:	mov	r6, r0
   191ac:	mov	r0, r5
   191b0:	ldr	r3, [r6, #20]
   191b4:	str	r3, [sp, #12]
   191b8:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   191bc:	ldr	r2, [sp, #8]
   191c0:	mov	r1, #6
   191c4:	ldr	r3, [sp, #12]
   191c8:	ldr	ip, [r0, #24]
   191cc:	mov	r7, r0
   191d0:	mov	r0, r2
   191d4:	mov	r2, fp
   191d8:	str	ip, [sp]
   191dc:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   191e0:	mov	r0, r7
   191e4:	bl	13b94 <g_object_unref@plt>
   191e8:	mov	r0, r6
   191ec:	bl	13b94 <g_object_unref@plt>
   191f0:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   191f4:	mov	r0, #0
   191f8:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   191fc:	mov	r0, r5
   19200:	bl	13b94 <g_object_unref@plt>
   19204:	mov	r0, r4
   19208:	bl	13b94 <g_object_unref@plt>
   1920c:	mov	r0, r9
   19210:	bl	13b94 <g_object_unref@plt>
   19214:	mov	r0, r8
   19218:	bl	13b94 <g_object_unref@plt>
   1921c:	mov	r0, sl
   19220:	add	sp, sp, #20
   19224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19228:	cmp	r0, #0
   1922c:	beq	19234 <g_unichar_xdigit_value@plt+0x53d0>
   19230:	bl	13b94 <g_object_unref@plt>
   19234:	mov	r0, #0
   19238:	add	sp, sp, #20
   1923c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19240:	mov	r5, r7
   19244:	b	19190 <g_unichar_xdigit_value@plt+0x532c>
   19248:	mov	r4, r5
   1924c:	b	19164 <g_unichar_xdigit_value@plt+0x5300>
   19250:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19254:	subs	r5, r1, #0
   19258:	sub	sp, sp, #8
   1925c:	mov	r7, r0
   19260:	mov	r4, r2
   19264:	beq	193d8 <g_unichar_xdigit_value@plt+0x5574>
   19268:	cmp	r2, #0
   1926c:	beq	193ac <g_unichar_xdigit_value@plt+0x5548>
   19270:	mov	r1, r2
   19274:	mov	r0, r5
   19278:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   1927c:	mov	r8, r0
   19280:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19284:	cmp	r0, #0
   19288:	beq	19404 <g_unichar_xdigit_value@plt+0x55a0>
   1928c:	ldr	r0, [r7, #28]
   19290:	cmp	r0, #0
   19294:	beq	193a0 <g_unichar_xdigit_value@plt+0x553c>
   19298:	bl	133f0 <g_object_ref@plt>
   1929c:	mov	r5, r0
   192a0:	ldr	r0, [r7, #28]
   192a4:	cmp	r0, #0
   192a8:	moveq	r6, r0
   192ac:	beq	192b8 <g_unichar_xdigit_value@plt+0x5454>
   192b0:	bl	133f0 <g_object_ref@plt>
   192b4:	mov	r6, r0
   192b8:	ldr	r0, [r5, #24]
   192bc:	cmp	r0, #0
   192c0:	beq	19410 <g_unichar_xdigit_value@plt+0x55ac>
   192c4:	bl	133f0 <g_object_ref@plt>
   192c8:	mov	r4, r0
   192cc:	mov	r0, r5
   192d0:	bl	13b94 <g_object_unref@plt>
   192d4:	ldr	r0, [r4, #24]
   192d8:	mov	r5, r4
   192dc:	cmp	r0, #0
   192e0:	bne	192c4 <g_unichar_xdigit_value@plt+0x5460>
   192e4:	ldr	r0, [r6, #28]
   192e8:	cmp	r0, #0
   192ec:	beq	19418 <g_unichar_xdigit_value@plt+0x55b4>
   192f0:	bl	133f0 <g_object_ref@plt>
   192f4:	mov	r5, r0
   192f8:	mov	r0, r6
   192fc:	bl	13b94 <g_object_unref@plt>
   19300:	ldr	r0, [r5, #28]
   19304:	mov	r6, r5
   19308:	cmp	r0, #0
   1930c:	bne	192f0 <g_unichar_xdigit_value@plt+0x548c>
   19310:	mov	r0, r4
   19314:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   19318:	subs	r9, r0, #0
   1931c:	beq	19334 <g_unichar_xdigit_value@plt+0x54d0>
   19320:	bl	13b94 <g_object_unref@plt>
   19324:	mov	r0, r4
   19328:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   1932c:	ldr	r9, [r0, #20]
   19330:	bl	13b94 <g_object_unref@plt>
   19334:	mov	r0, r5
   19338:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   1933c:	subs	sl, r0, #0
   19340:	beq	19358 <g_unichar_xdigit_value@plt+0x54f4>
   19344:	bl	13b94 <g_object_unref@plt>
   19348:	mov	r0, r5
   1934c:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   19350:	ldr	sl, [r0, #24]
   19354:	bl	13b94 <g_object_unref@plt>
   19358:	ldr	r6, [r7, #16]
   1935c:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19360:	mov	r3, r9
   19364:	mov	r1, #6
   19368:	str	sl, [sp]
   1936c:	mov	r2, r0
   19370:	mov	r0, r6
   19374:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   19378:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   1937c:	mov	r0, #0
   19380:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   19384:	mov	r0, r5
   19388:	bl	13b94 <g_object_unref@plt>
   1938c:	mov	r0, r4
   19390:	bl	13b94 <g_object_unref@plt>
   19394:	mov	r0, r8
   19398:	add	sp, sp, #8
   1939c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193a0:	mov	r5, r0
   193a4:	mov	r6, r0
   193a8:	b	192b8 <g_unichar_xdigit_value@plt+0x5454>
   193ac:	ldr	r1, [pc, #108]	; 19420 <g_unichar_xdigit_value@plt+0x55bc>
   193b0:	mov	r0, r2
   193b4:	ldr	r2, [pc, #104]	; 19424 <g_unichar_xdigit_value@plt+0x55c0>
   193b8:	add	r1, pc, r1
   193bc:	add	r1, r1, #1024	; 0x400
   193c0:	add	r2, pc, r2
   193c4:	add	r1, r1, #8
   193c8:	bl	13450 <g_return_if_fail_warning@plt>
   193cc:	mov	r0, r4
   193d0:	add	sp, sp, #8
   193d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193d8:	ldr	r1, [pc, #72]	; 19428 <g_unichar_xdigit_value@plt+0x55c4>
   193dc:	mov	r0, r5
   193e0:	ldr	r2, [pc, #68]	; 1942c <g_unichar_xdigit_value@plt+0x55c8>
   193e4:	add	r1, pc, r1
   193e8:	add	r1, r1, #1024	; 0x400
   193ec:	add	r2, pc, r2
   193f0:	add	r1, r1, #8
   193f4:	bl	13450 <g_return_if_fail_warning@plt>
   193f8:	mov	r0, r5
   193fc:	add	sp, sp, #8
   19400:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19404:	mov	r0, r8
   19408:	add	sp, sp, #8
   1940c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19410:	mov	r4, r5
   19414:	b	192e4 <g_unichar_xdigit_value@plt+0x5480>
   19418:	mov	r5, r6
   1941c:	b	19310 <g_unichar_xdigit_value@plt+0x54ac>
   19420:	andeq	pc, r1, r4, lsl #6
   19424:	andeq	pc, r1, r4, ror #27
   19428:	ldrdeq	pc, [r1], -r8
   1942c:	andeq	pc, r1, ip, lsr #27
   19430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19434:	mov	r5, r0
   19438:	sub	sp, sp, #28
   1943c:	bl	188c8 <g_unichar_xdigit_value@plt+0x4a64>
   19440:	ldr	r4, [r5, #24]
   19444:	cmp	r4, #0
   19448:	beq	19478 <g_unichar_xdigit_value@plt+0x5614>
   1944c:	ldr	r3, [r4]
   19450:	cmp	r3, #0
   19454:	beq	19464 <g_unichar_xdigit_value@plt+0x5600>
   19458:	ldr	r3, [r3]
   1945c:	cmp	r0, r3
   19460:	beq	194b4 <g_unichar_xdigit_value@plt+0x5650>
   19464:	mov	r1, r0
   19468:	mov	r0, r4
   1946c:	bl	13a98 <g_type_check_instance_is_a@plt>
   19470:	cmp	r0, #0
   19474:	bne	194b4 <g_unichar_xdigit_value@plt+0x5650>
   19478:	mov	r0, r4
   1947c:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   19480:	mov	r8, r0
   19484:	ldr	r0, [r5, #28]
   19488:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   1948c:	cmp	r8, #0
   19490:	mov	r9, r0
   19494:	beq	19680 <g_unichar_xdigit_value@plt+0x581c>
   19498:	cmp	r0, #0
   1949c:	bne	19698 <g_unichar_xdigit_value@plt+0x5834>
   194a0:	mov	r0, r8
   194a4:	bl	13b94 <g_object_unref@plt>
   194a8:	mov	r0, r9
   194ac:	add	sp, sp, #28
   194b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   194b4:	ldr	r0, [r4, #24]
   194b8:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   194bc:	ldr	r3, [r5, #24]
   194c0:	mov	r8, r0
   194c4:	ldr	r0, [r3, #28]
   194c8:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   194cc:	mov	r9, r0
   194d0:	ldr	r0, [r5, #28]
   194d4:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   194d8:	cmp	r8, #0
   194dc:	mov	sl, r0
   194e0:	beq	19644 <g_unichar_xdigit_value@plt+0x57e0>
   194e4:	cmp	r9, #0
   194e8:	beq	19644 <g_unichar_xdigit_value@plt+0x57e0>
   194ec:	cmp	r0, #0
   194f0:	beq	1965c <g_unichar_xdigit_value@plt+0x57f8>
   194f4:	mov	r1, r9
   194f8:	mov	r2, sl
   194fc:	mov	r0, r8
   19500:	bl	2734c <g_unichar_xdigit_value@plt+0x134e8>
   19504:	mov	fp, r0
   19508:	bl	25528 <g_unichar_xdigit_value@plt+0x116c4>
   1950c:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19510:	cmp	r0, #0
   19514:	beq	19620 <g_unichar_xdigit_value@plt+0x57bc>
   19518:	ldr	r0, [r5, #24]
   1951c:	cmp	r0, #0
   19520:	moveq	r6, r0
   19524:	beq	19530 <g_unichar_xdigit_value@plt+0x56cc>
   19528:	bl	133f0 <g_object_ref@plt>
   1952c:	mov	r6, r0
   19530:	ldr	r0, [r5, #28]
   19534:	cmp	r0, #0
   19538:	moveq	r7, r0
   1953c:	beq	19548 <g_unichar_xdigit_value@plt+0x56e4>
   19540:	bl	133f0 <g_object_ref@plt>
   19544:	mov	r7, r0
   19548:	ldr	r0, [r6, #24]
   1954c:	cmp	r0, #0
   19550:	beq	197dc <g_unichar_xdigit_value@plt+0x5978>
   19554:	bl	133f0 <g_object_ref@plt>
   19558:	mov	r4, r0
   1955c:	mov	r0, r6
   19560:	bl	13b94 <g_object_unref@plt>
   19564:	ldr	r0, [r4, #24]
   19568:	mov	r6, r4
   1956c:	cmp	r0, #0
   19570:	bne	19554 <g_unichar_xdigit_value@plt+0x56f0>
   19574:	ldr	r0, [r7, #28]
   19578:	cmp	r0, #0
   1957c:	beq	197f4 <g_unichar_xdigit_value@plt+0x5990>
   19580:	bl	133f0 <g_object_ref@plt>
   19584:	mov	r6, r0
   19588:	mov	r0, r7
   1958c:	bl	13b94 <g_object_unref@plt>
   19590:	ldr	r0, [r6, #28]
   19594:	mov	r7, r6
   19598:	cmp	r0, #0
   1959c:	bne	19580 <g_unichar_xdigit_value@plt+0x571c>
   195a0:	ldr	r1, [r5, #16]
   195a4:	str	r1, [sp, #16]
   195a8:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   195ac:	mov	r2, r0
   195b0:	mov	r0, r4
   195b4:	str	r2, [sp, #12]
   195b8:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   195bc:	mov	r5, r0
   195c0:	mov	r0, r6
   195c4:	ldr	r3, [r5, #20]
   195c8:	str	r3, [sp, #20]
   195cc:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   195d0:	ldr	r1, [sp, #16]
   195d4:	ldr	r3, [sp, #20]
   195d8:	ldr	r2, [sp, #12]
   195dc:	ldr	ip, [r0, #24]
   195e0:	mov	r7, r0
   195e4:	mov	r0, r1
   195e8:	mov	r1, #6
   195ec:	str	ip, [sp]
   195f0:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   195f4:	mov	r0, r7
   195f8:	bl	13b94 <g_object_unref@plt>
   195fc:	mov	r0, r5
   19600:	bl	13b94 <g_object_unref@plt>
   19604:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19608:	mov	r0, #0
   1960c:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   19610:	mov	r0, r6
   19614:	bl	13b94 <g_object_unref@plt>
   19618:	mov	r0, r4
   1961c:	bl	13b94 <g_object_unref@plt>
   19620:	mov	r0, sl
   19624:	bl	13b94 <g_object_unref@plt>
   19628:	mov	r0, r9
   1962c:	bl	13b94 <g_object_unref@plt>
   19630:	mov	r0, r8
   19634:	bl	13b94 <g_object_unref@plt>
   19638:	mov	r0, fp
   1963c:	add	sp, sp, #28
   19640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19644:	cmp	sl, #0
   19648:	beq	19654 <g_unichar_xdigit_value@plt+0x57f0>
   1964c:	mov	r0, sl
   19650:	bl	13b94 <g_object_unref@plt>
   19654:	cmp	r9, #0
   19658:	beq	19664 <g_unichar_xdigit_value@plt+0x5800>
   1965c:	mov	r0, r9
   19660:	bl	13b94 <g_object_unref@plt>
   19664:	cmp	r8, #0
   19668:	beq	1968c <g_unichar_xdigit_value@plt+0x5828>
   1966c:	mov	r0, r8
   19670:	bl	13b94 <g_object_unref@plt>
   19674:	mov	r0, #0
   19678:	add	sp, sp, #28
   1967c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19680:	cmp	r0, #0
   19684:	beq	1968c <g_unichar_xdigit_value@plt+0x5828>
   19688:	bl	13b94 <g_object_unref@plt>
   1968c:	mov	r0, #0
   19690:	add	sp, sp, #28
   19694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19698:	mov	r1, r8
   1969c:	mov	r2, r9
   196a0:	mov	r0, r5
   196a4:	bl	17a90 <g_unichar_xdigit_value@plt+0x3c2c>
   196a8:	mov	sl, r0
   196ac:	bl	25528 <g_unichar_xdigit_value@plt+0x116c4>
   196b0:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   196b4:	cmp	r0, #0
   196b8:	beq	197c0 <g_unichar_xdigit_value@plt+0x595c>
   196bc:	ldr	r0, [r5, #24]
   196c0:	cmp	r0, #0
   196c4:	moveq	r6, r0
   196c8:	beq	196d4 <g_unichar_xdigit_value@plt+0x5870>
   196cc:	bl	133f0 <g_object_ref@plt>
   196d0:	mov	r6, r0
   196d4:	ldr	r0, [r5, #28]
   196d8:	cmp	r0, #0
   196dc:	moveq	r7, r0
   196e0:	beq	196ec <g_unichar_xdigit_value@plt+0x5888>
   196e4:	bl	133f0 <g_object_ref@plt>
   196e8:	mov	r7, r0
   196ec:	ldr	r0, [r6, #24]
   196f0:	cmp	r0, #0
   196f4:	beq	197ec <g_unichar_xdigit_value@plt+0x5988>
   196f8:	bl	133f0 <g_object_ref@plt>
   196fc:	mov	r4, r0
   19700:	mov	r0, r6
   19704:	bl	13b94 <g_object_unref@plt>
   19708:	ldr	r0, [r4, #24]
   1970c:	mov	r6, r4
   19710:	cmp	r0, #0
   19714:	bne	196f8 <g_unichar_xdigit_value@plt+0x5894>
   19718:	ldr	r0, [r7, #28]
   1971c:	cmp	r0, #0
   19720:	beq	197e4 <g_unichar_xdigit_value@plt+0x5980>
   19724:	bl	133f0 <g_object_ref@plt>
   19728:	mov	r6, r0
   1972c:	mov	r0, r7
   19730:	bl	13b94 <g_object_unref@plt>
   19734:	ldr	r0, [r6, #28]
   19738:	mov	r7, r6
   1973c:	cmp	r0, #0
   19740:	bne	19724 <g_unichar_xdigit_value@plt+0x58c0>
   19744:	ldr	r2, [r5, #16]
   19748:	str	r2, [sp, #12]
   1974c:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19750:	mov	fp, r0
   19754:	mov	r0, r4
   19758:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   1975c:	mov	r5, r0
   19760:	mov	r0, r6
   19764:	ldr	r3, [r5, #20]
   19768:	str	r3, [sp, #20]
   1976c:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   19770:	ldr	r2, [sp, #12]
   19774:	mov	r1, #6
   19778:	ldr	r3, [sp, #20]
   1977c:	ldr	ip, [r0, #24]
   19780:	mov	r7, r0
   19784:	mov	r0, r2
   19788:	mov	r2, fp
   1978c:	str	ip, [sp]
   19790:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   19794:	mov	r0, r7
   19798:	bl	13b94 <g_object_unref@plt>
   1979c:	mov	r0, r5
   197a0:	bl	13b94 <g_object_unref@plt>
   197a4:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   197a8:	mov	r0, #0
   197ac:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   197b0:	mov	r0, r6
   197b4:	bl	13b94 <g_object_unref@plt>
   197b8:	mov	r0, r4
   197bc:	bl	13b94 <g_object_unref@plt>
   197c0:	mov	r0, r9
   197c4:	bl	13b94 <g_object_unref@plt>
   197c8:	mov	r0, r8
   197cc:	bl	13b94 <g_object_unref@plt>
   197d0:	mov	r0, sl
   197d4:	add	sp, sp, #28
   197d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197dc:	mov	r4, r6
   197e0:	b	19574 <g_unichar_xdigit_value@plt+0x5710>
   197e4:	mov	r6, r7
   197e8:	b	19744 <g_unichar_xdigit_value@plt+0x58e0>
   197ec:	mov	r4, r6
   197f0:	b	19718 <g_unichar_xdigit_value@plt+0x58b4>
   197f4:	mov	r6, r7
   197f8:	b	195a0 <g_unichar_xdigit_value@plt+0x573c>
   197fc:	push	{r4, r5, r6, lr}
   19800:	subs	r6, r1, #0
   19804:	sub	sp, sp, #8
   19808:	mov	r4, r0
   1980c:	beq	198b0 <g_unichar_xdigit_value@plt+0x5a4c>
   19810:	ldr	r5, [r0, #52]	; 0x34
   19814:	ldr	r2, [r5]
   19818:	cmp	r2, #0
   1981c:	bne	19848 <g_unichar_xdigit_value@plt+0x59e4>
   19820:	ldr	r3, [r5, #4]
   19824:	cmp	r3, #0
   19828:	beq	1985c <g_unichar_xdigit_value@plt+0x59f8>
   1982c:	ldr	r0, [r3, #16]
   19830:	bl	14a70 <g_unichar_xdigit_value@plt+0xc0c>
   19834:	ldr	r3, [r4, #52]	; 0x34
   19838:	str	r0, [r5]
   1983c:	ldr	r2, [r3]
   19840:	cmp	r2, #0
   19844:	beq	1985c <g_unichar_xdigit_value@plt+0x59f8>
   19848:	mov	r0, r6
   1984c:	asr	r3, r2, #31
   19850:	add	sp, sp, #8
   19854:	pop	{r4, r5, r6, lr}
   19858:	b	25fc0 <g_unichar_xdigit_value@plt+0x1215c>
   1985c:	ldr	r0, [pc, #120]	; 198dc <g_unichar_xdigit_value@plt+0x5a78>
   19860:	ldr	r1, [pc, #120]	; 198e0 <g_unichar_xdigit_value@plt+0x5a7c>
   19864:	add	r0, pc, r0
   19868:	add	r1, pc, r1
   1986c:	bl	13c9c <g_dgettext@plt>
   19870:	bl	136f0 <g_strdup@plt>
   19874:	ldr	r3, [r4, #52]	; 0x34
   19878:	mov	r1, #6
   1987c:	ldr	ip, [r3, #4]
   19880:	ldr	r3, [ip, #20]
   19884:	ldr	ip, [ip, #24]
   19888:	mov	r2, r0
   1988c:	mov	r5, r0
   19890:	ldr	r0, [r4, #16]
   19894:	str	ip, [sp]
   19898:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1989c:	mov	r0, r5
   198a0:	bl	1399c <g_free@plt>
   198a4:	mov	r0, #0
   198a8:	add	sp, sp, #8
   198ac:	pop	{r4, r5, r6, pc}
   198b0:	ldr	r1, [pc, #44]	; 198e4 <g_unichar_xdigit_value@plt+0x5a80>
   198b4:	mov	r0, r6
   198b8:	ldr	r2, [pc, #40]	; 198e8 <g_unichar_xdigit_value@plt+0x5a84>
   198bc:	add	r1, pc, r1
   198c0:	add	r1, r1, #1056	; 0x420
   198c4:	add	r2, pc, r2
   198c8:	add	r1, r1, #4
   198cc:	bl	13450 <g_return_if_fail_warning@plt>
   198d0:	mov	r0, #0
   198d4:	add	sp, sp, #8
   198d8:	pop	{r4, r5, r6, pc}
   198dc:	andeq	pc, r1, r4, asr #23
   198e0:	ldrdeq	pc, [r1], -r4
   198e4:	andeq	lr, r1, r0, lsl #28
   198e8:	andeq	pc, r1, r0, ror #17
   198ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198f0:	mov	r6, r0
   198f4:	sub	sp, sp, #20
   198f8:	ldr	r0, [r0, #24]
   198fc:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   19900:	subs	r7, r0, #0
   19904:	beq	19ab0 <g_unichar_xdigit_value@plt+0x5c4c>
   19908:	ldr	r0, [r6, #28]
   1990c:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   19910:	cmp	r0, #0
   19914:	beq	19a84 <g_unichar_xdigit_value@plt+0x5c20>
   19918:	bl	13b94 <g_object_unref@plt>
   1991c:	ldr	r0, [r6, #28]
   19920:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   19924:	mov	r8, r0
   19928:	ldr	r0, [r0, #16]
   1992c:	bl	14b5c <g_unichar_xdigit_value@plt+0xcf8>
   19930:	mov	r4, r0
   19934:	asr	r5, r0, #31
   19938:	mov	r0, r8
   1993c:	bl	13b94 <g_object_unref@plt>
   19940:	cmp	r7, #0
   19944:	moveq	r0, r7
   19948:	beq	19a7c <g_unichar_xdigit_value@plt+0x5c18>
   1994c:	mov	r2, r4
   19950:	mov	r3, r5
   19954:	mov	r0, r7
   19958:	bl	25eb8 <g_unichar_xdigit_value@plt+0x12054>
   1995c:	mov	r9, r0
   19960:	bl	25528 <g_unichar_xdigit_value@plt+0x116c4>
   19964:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19968:	cmp	r0, #0
   1996c:	beq	19a70 <g_unichar_xdigit_value@plt+0x5c0c>
   19970:	ldr	r0, [r6, #24]
   19974:	cmp	r0, #0
   19978:	moveq	r5, r0
   1997c:	beq	19988 <g_unichar_xdigit_value@plt+0x5b24>
   19980:	bl	133f0 <g_object_ref@plt>
   19984:	mov	r5, r0
   19988:	ldr	r0, [r6, #28]
   1998c:	cmp	r0, #0
   19990:	moveq	r8, r0
   19994:	beq	199a0 <g_unichar_xdigit_value@plt+0x5b3c>
   19998:	bl	133f0 <g_object_ref@plt>
   1999c:	mov	r8, r0
   199a0:	ldr	r0, [r5, #24]
   199a4:	cmp	r0, #0
   199a8:	beq	19ae4 <g_unichar_xdigit_value@plt+0x5c80>
   199ac:	bl	133f0 <g_object_ref@plt>
   199b0:	mov	r4, r0
   199b4:	mov	r0, r5
   199b8:	bl	13b94 <g_object_unref@plt>
   199bc:	ldr	r0, [r4, #24]
   199c0:	mov	r5, r4
   199c4:	cmp	r0, #0
   199c8:	bne	199ac <g_unichar_xdigit_value@plt+0x5b48>
   199cc:	ldr	r0, [r8, #28]
   199d0:	cmp	r0, #0
   199d4:	beq	19aec <g_unichar_xdigit_value@plt+0x5c88>
   199d8:	bl	133f0 <g_object_ref@plt>
   199dc:	mov	r5, r0
   199e0:	mov	r0, r8
   199e4:	bl	13b94 <g_object_unref@plt>
   199e8:	ldr	r0, [r5, #28]
   199ec:	mov	r8, r5
   199f0:	cmp	r0, #0
   199f4:	bne	199d8 <g_unichar_xdigit_value@plt+0x5b74>
   199f8:	ldr	r3, [r6, #16]
   199fc:	str	r3, [sp, #12]
   19a00:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19a04:	mov	sl, r0
   19a08:	mov	r0, r4
   19a0c:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   19a10:	mov	r6, r0
   19a14:	mov	r0, r5
   19a18:	ldr	fp, [r6, #20]
   19a1c:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   19a20:	ldr	r3, [sp, #12]
   19a24:	mov	r2, sl
   19a28:	mov	r1, #6
   19a2c:	ldr	ip, [r0, #24]
   19a30:	mov	r8, r0
   19a34:	mov	r0, r3
   19a38:	mov	r3, fp
   19a3c:	str	ip, [sp]
   19a40:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   19a44:	mov	r0, r8
   19a48:	bl	13b94 <g_object_unref@plt>
   19a4c:	mov	r0, r6
   19a50:	bl	13b94 <g_object_unref@plt>
   19a54:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   19a58:	mov	r0, #0
   19a5c:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   19a60:	mov	r0, r5
   19a64:	bl	13b94 <g_object_unref@plt>
   19a68:	mov	r0, r4
   19a6c:	bl	13b94 <g_object_unref@plt>
   19a70:	mov	r0, r7
   19a74:	bl	13b94 <g_object_unref@plt>
   19a78:	mov	r0, r9
   19a7c:	add	sp, sp, #20
   19a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a84:	ldr	r0, [r6, #28]
   19a88:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   19a8c:	mov	r8, r0
   19a90:	bl	24ca0 <g_unichar_xdigit_value@plt+0x10e3c>
   19a94:	cmp	r8, #0
   19a98:	mov	r4, r0
   19a9c:	mov	r5, r1
   19aa0:	beq	19940 <g_unichar_xdigit_value@plt+0x5adc>
   19aa4:	mov	r0, r8
   19aa8:	bl	13b94 <g_object_unref@plt>
   19aac:	b	19940 <g_unichar_xdigit_value@plt+0x5adc>
   19ab0:	ldr	r0, [r6, #24]
   19ab4:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   19ab8:	mov	r4, r0
   19abc:	ldr	r0, [r0, #16]
   19ac0:	bl	14b5c <g_unichar_xdigit_value@plt+0xcf8>
   19ac4:	mov	r2, #0
   19ac8:	mov	r3, #0
   19acc:	asr	r1, r0, #31
   19ad0:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   19ad4:	mov	r7, r0
   19ad8:	mov	r0, r4
   19adc:	bl	13b94 <g_object_unref@plt>
   19ae0:	b	19908 <g_unichar_xdigit_value@plt+0x5aa4>
   19ae4:	mov	r4, r5
   19ae8:	b	199cc <g_unichar_xdigit_value@plt+0x5b68>
   19aec:	mov	r5, r8
   19af0:	b	199f8 <g_unichar_xdigit_value@plt+0x5b94>
   19af4:	push	{r4, r5, lr}
   19af8:	subs	r5, r1, #0
   19afc:	sub	sp, sp, #12
   19b00:	mov	r4, r0
   19b04:	beq	19b68 <g_unichar_xdigit_value@plt+0x5d04>
   19b08:	ldr	r3, [r0, #16]
   19b0c:	mov	r0, r5
   19b10:	ldr	r1, [r3, #16]
   19b14:	bl	292e8 <g_unichar_xdigit_value@plt+0x15484>
   19b18:	subs	r3, r0, #0
   19b1c:	beq	19b38 <g_unichar_xdigit_value@plt+0x5cd4>
   19b20:	ldr	r3, [r4, #16]
   19b24:	mov	r0, r5
   19b28:	ldr	r1, [r3, #16]
   19b2c:	add	sp, sp, #12
   19b30:	pop	{r4, r5, lr}
   19b34:	b	28fe8 <g_unichar_xdigit_value@plt+0x15184>
   19b38:	ldr	r0, [r4, #16]
   19b3c:	mov	r2, r3
   19b40:	str	r3, [sp]
   19b44:	mov	r1, #2
   19b48:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   19b4c:	mov	r0, #0
   19b50:	mov	r1, #0
   19b54:	mov	r2, r0
   19b58:	mov	r3, r1
   19b5c:	add	sp, sp, #12
   19b60:	pop	{r4, r5, lr}
   19b64:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   19b68:	ldr	r1, [pc, #36]	; 19b94 <g_unichar_xdigit_value@plt+0x5d30>
   19b6c:	mov	r0, r5
   19b70:	ldr	r2, [pc, #32]	; 19b98 <g_unichar_xdigit_value@plt+0x5d34>
   19b74:	add	r1, pc, r1
   19b78:	add	r1, r1, #1072	; 0x430
   19b7c:	add	r2, pc, r2
   19b80:	add	r1, r1, #12
   19b84:	bl	13450 <g_return_if_fail_warning@plt>
   19b88:	mov	r0, r5
   19b8c:	add	sp, sp, #12
   19b90:	pop	{r4, r5, pc}
   19b94:	andeq	lr, r1, r8, asr #22
   19b98:	andeq	pc, r1, r8, lsr #12
   19b9c:	subs	r3, r0, #0
   19ba0:	beq	19bb0 <g_unichar_xdigit_value@plt+0x5d4c>
   19ba4:	ldr	r3, [r3, #8]
   19ba8:	str	r1, [r3, #36]	; 0x24
   19bac:	bx	lr
   19bb0:	ldr	r1, [pc, #20]	; 19bcc <g_unichar_xdigit_value@plt+0x5d68>
   19bb4:	ldr	r2, [pc, #20]	; 19bd0 <g_unichar_xdigit_value@plt+0x5d6c>
   19bb8:	add	r1, pc, r1
   19bbc:	add	r1, r1, #1104	; 0x450
   19bc0:	add	r2, pc, r2
   19bc4:	add	r1, r1, #4
   19bc8:	b	13450 <g_return_if_fail_warning@plt>
   19bcc:	andeq	lr, r1, r4, lsl #22
   19bd0:	andeq	lr, r1, r4, lsr #10
   19bd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19bd8:	mov	r5, r0
   19bdc:	sub	sp, sp, #8
   19be0:	ldr	r0, [r0, #44]	; 0x2c
   19be4:	bl	136f0 <g_strdup@plt>
   19be8:	subs	r4, r0, #0
   19bec:	beq	19c74 <g_unichar_xdigit_value@plt+0x5e10>
   19bf0:	ldr	r1, [pc, #444]	; 19db4 <g_unichar_xdigit_value@plt+0x5f50>
   19bf4:	mov	r0, r4
   19bf8:	add	r1, pc, r1
   19bfc:	bl	13e58 <g_strcmp0@plt>
   19c00:	cmp	r0, #0
   19c04:	bne	19c34 <g_unichar_xdigit_value@plt+0x5dd0>
   19c08:	ldr	r0, [r5, #16]
   19c0c:	mov	r1, #16
   19c10:	bl	19b9c <g_unichar_xdigit_value@plt+0x5d38>
   19c14:	ldr	r0, [r5, #24]
   19c18:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   19c1c:	mov	r5, r0
   19c20:	mov	r0, r4
   19c24:	bl	1399c <g_free@plt>
   19c28:	mov	r0, r5
   19c2c:	add	sp, sp, #8
   19c30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19c34:	ldr	r1, [pc, #380]	; 19db8 <g_unichar_xdigit_value@plt+0x5f54>
   19c38:	mov	r0, r4
   19c3c:	add	r1, pc, r1
   19c40:	bl	13e58 <g_strcmp0@plt>
   19c44:	cmp	r0, #0
   19c48:	beq	19c08 <g_unichar_xdigit_value@plt+0x5da4>
   19c4c:	ldr	r1, [pc, #360]	; 19dbc <g_unichar_xdigit_value@plt+0x5f58>
   19c50:	mov	r0, r4
   19c54:	add	r1, pc, r1
   19c58:	bl	13e58 <g_strcmp0@plt>
   19c5c:	cmp	r0, #0
   19c60:	bne	19ca8 <g_unichar_xdigit_value@plt+0x5e44>
   19c64:	ldr	r0, [r5, #16]
   19c68:	mov	r1, #10
   19c6c:	bl	19b9c <g_unichar_xdigit_value@plt+0x5d38>
   19c70:	b	19c14 <g_unichar_xdigit_value@plt+0x5db0>
   19c74:	ldr	r0, [r5, #28]
   19c78:	cmp	r0, #0
   19c7c:	beq	19bf0 <g_unichar_xdigit_value@plt+0x5d8c>
   19c80:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   19c84:	mov	r6, r0
   19c88:	ldr	r0, [r0, #16]
   19c8c:	bl	136f0 <g_strdup@plt>
   19c90:	mov	r4, r0
   19c94:	mov	r0, #0
   19c98:	bl	1399c <g_free@plt>
   19c9c:	mov	r0, r6
   19ca0:	bl	13b94 <g_object_unref@plt>
   19ca4:	b	19bf0 <g_unichar_xdigit_value@plt+0x5d8c>
   19ca8:	ldr	r1, [pc, #272]	; 19dc0 <g_unichar_xdigit_value@plt+0x5f5c>
   19cac:	mov	r0, r4
   19cb0:	add	r1, pc, r1
   19cb4:	bl	13e58 <g_strcmp0@plt>
   19cb8:	cmp	r0, #0
   19cbc:	beq	19c64 <g_unichar_xdigit_value@plt+0x5e00>
   19cc0:	ldr	r1, [pc, #252]	; 19dc4 <g_unichar_xdigit_value@plt+0x5f60>
   19cc4:	mov	r0, r4
   19cc8:	add	r1, pc, r1
   19ccc:	bl	13e58 <g_strcmp0@plt>
   19cd0:	cmp	r0, #0
   19cd4:	bne	19ce8 <g_unichar_xdigit_value@plt+0x5e84>
   19cd8:	ldr	r0, [r5, #16]
   19cdc:	mov	r1, #8
   19ce0:	bl	19b9c <g_unichar_xdigit_value@plt+0x5d38>
   19ce4:	b	19c14 <g_unichar_xdigit_value@plt+0x5db0>
   19ce8:	ldr	r1, [pc, #216]	; 19dc8 <g_unichar_xdigit_value@plt+0x5f64>
   19cec:	mov	r0, r4
   19cf0:	add	r1, pc, r1
   19cf4:	bl	13e58 <g_strcmp0@plt>
   19cf8:	cmp	r0, #0
   19cfc:	beq	19cd8 <g_unichar_xdigit_value@plt+0x5e74>
   19d00:	ldr	r1, [pc, #196]	; 19dcc <g_unichar_xdigit_value@plt+0x5f68>
   19d04:	mov	r0, r4
   19d08:	add	r1, pc, r1
   19d0c:	bl	13e58 <g_strcmp0@plt>
   19d10:	cmp	r0, #0
   19d14:	bne	19d28 <g_unichar_xdigit_value@plt+0x5ec4>
   19d18:	ldr	r0, [r5, #16]
   19d1c:	mov	r1, #2
   19d20:	bl	19b9c <g_unichar_xdigit_value@plt+0x5d38>
   19d24:	b	19c14 <g_unichar_xdigit_value@plt+0x5db0>
   19d28:	ldr	r1, [pc, #160]	; 19dd0 <g_unichar_xdigit_value@plt+0x5f6c>
   19d2c:	mov	r0, r4
   19d30:	add	r1, pc, r1
   19d34:	bl	13e58 <g_strcmp0@plt>
   19d38:	cmp	r0, #0
   19d3c:	beq	19d18 <g_unichar_xdigit_value@plt+0x5eb4>
   19d40:	mov	r0, r5
   19d44:	ldr	r8, [r5, #16]
   19d48:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   19d4c:	mov	r6, r0
   19d50:	mov	r0, r5
   19d54:	ldr	sl, [r6, #16]
   19d58:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   19d5c:	mov	r7, r0
   19d60:	mov	r0, r5
   19d64:	ldr	r9, [r7, #20]
   19d68:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   19d6c:	mov	r2, sl
   19d70:	mov	r1, #5
   19d74:	mov	r3, r9
   19d78:	ldr	ip, [r0, #24]
   19d7c:	mov	r5, r0
   19d80:	mov	r0, r8
   19d84:	str	ip, [sp]
   19d88:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   19d8c:	mov	r0, r5
   19d90:	bl	13b94 <g_object_unref@plt>
   19d94:	mov	r0, r7
   19d98:	bl	13b94 <g_object_unref@plt>
   19d9c:	mov	r0, r6
   19da0:	bl	13b94 <g_object_unref@plt>
   19da4:	mov	r0, r4
   19da8:	bl	1399c <g_free@plt>
   19dac:	mov	r0, #0
   19db0:	b	19c2c <g_unichar_xdigit_value@plt+0x5dc8>
   19db4:	andeq	lr, r1, r8, lsr #19
   19db8:	andeq	lr, r1, ip, lsr r9
   19dbc:	andeq	lr, r1, r0, lsr r9
   19dc0:	andeq	lr, r1, ip, asr #17
   19dc4:	andeq	lr, r1, r0, asr #17
   19dc8:	muleq	r1, ip, r8
   19dcc:	andeq	lr, r1, ip, lsl #17
   19dd0:	andeq	lr, r1, r8, ror #16
   19dd4:	push	{r4, lr}
   19dd8:	subs	r4, r0, #0
   19ddc:	beq	19df0 <g_unichar_xdigit_value@plt+0x5f8c>
   19de0:	ldr	r3, [r4]
   19de4:	ldr	r3, [r3, #8]
   19de8:	blx	r3
   19dec:	pop	{r4, pc}
   19df0:	ldr	r1, [pc, #28]	; 19e14 <g_unichar_xdigit_value@plt+0x5fb0>
   19df4:	ldr	r2, [pc, #28]	; 19e18 <g_unichar_xdigit_value@plt+0x5fb4>
   19df8:	add	r1, pc, r1
   19dfc:	add	r1, r1, #1136	; 0x470
   19e00:	add	r2, pc, r2
   19e04:	add	r1, r1, #4
   19e08:	bl	13450 <g_return_if_fail_warning@plt>
   19e0c:	mov	r0, r4
   19e10:	pop	{r4, pc}
   19e14:	andeq	lr, r1, r4, asr #17
   19e18:	andeq	lr, r1, r4, ror #5
   19e1c:	push	{r4, lr}
   19e20:	subs	r4, r0, #0
   19e24:	beq	19e38 <g_unichar_xdigit_value@plt+0x5fd4>
   19e28:	ldr	r3, [r4]
   19e2c:	ldr	r3, [r3, #12]
   19e30:	blx	r3
   19e34:	pop	{r4, pc}
   19e38:	ldr	r1, [pc, #24]	; 19e58 <g_unichar_xdigit_value@plt+0x5ff4>
   19e3c:	ldr	r2, [pc, #24]	; 19e5c <g_unichar_xdigit_value@plt+0x5ff8>
   19e40:	add	r1, pc, r1
   19e44:	add	r2, pc, r2
   19e48:	add	r1, r1, #1168	; 0x490
   19e4c:	bl	13450 <g_return_if_fail_warning@plt>
   19e50:	mov	r0, r4
   19e54:	pop	{r4, pc}
   19e58:	andeq	lr, r1, ip, ror r8
   19e5c:	andeq	lr, r1, r0, lsr #5
   19e60:	ldr	r3, [pc, #456]	; 1a030 <g_unichar_xdigit_value@plt+0x61cc>
   19e64:	mov	r2, #0
   19e68:	ldr	r1, [pc, #452]	; 1a034 <g_unichar_xdigit_value@plt+0x61d0>
   19e6c:	add	r3, pc, r3
   19e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e74:	sub	sp, sp, #36	; 0x24
   19e78:	ldr	r1, [r3, r1]
   19e7c:	mov	r4, r0
   19e80:	ldr	r5, [r0, #16]
   19e84:	str	r2, [sp, #20]
   19e88:	ldr	r3, [r1]
   19e8c:	str	r1, [sp, #12]
   19e90:	str	r3, [sp, #28]
   19e94:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   19e98:	mov	r6, r0
   19e9c:	mov	r0, r5
   19ea0:	ldr	r1, [r6, #16]
   19ea4:	bl	19e1c <g_unichar_xdigit_value@plt+0x5fb8>
   19ea8:	mov	r5, r0
   19eac:	mov	r0, r6
   19eb0:	bl	13b94 <g_object_unref@plt>
   19eb4:	cmp	r5, #0
   19eb8:	movne	r0, r5
   19ebc:	beq	19edc <g_unichar_xdigit_value@plt+0x6078>
   19ec0:	ldr	r1, [sp, #12]
   19ec4:	ldr	r2, [sp, #28]
   19ec8:	ldr	r3, [r1]
   19ecc:	cmp	r2, r3
   19ed0:	bne	1a02c <g_unichar_xdigit_value@plt+0x61c8>
   19ed4:	add	sp, sp, #36	; 0x24
   19ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19edc:	mov	r0, #1
   19ee0:	mov	r1, #0
   19ee4:	mov	r2, #0
   19ee8:	mov	r3, #0
   19eec:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   19ef0:	add	r9, sp, #32
   19ef4:	add	fp, sp, #24
   19ef8:	mov	sl, r5
   19efc:	str	r5, [r9, #-12]!
   19f00:	mov	r7, r0
   19f04:	b	19f70 <g_unichar_xdigit_value@plt+0x610c>
   19f08:	mov	r0, #7
   19f0c:	ldr	r8, [r4, #16]
   19f10:	bl	13c90 <g_malloc0@plt>
   19f14:	mov	r5, r0
   19f18:	mov	r0, r6
   19f1c:	mov	r1, r5
   19f20:	bl	13648 <g_unichar_to_utf8@plt>
   19f24:	mov	r1, r5
   19f28:	mov	r0, r8
   19f2c:	bl	19e1c <g_unichar_xdigit_value@plt+0x5fb8>
   19f30:	mov	r6, r0
   19f34:	mov	r0, r5
   19f38:	bl	1399c <g_free@plt>
   19f3c:	cmp	r6, #0
   19f40:	beq	19fb0 <g_unichar_xdigit_value@plt+0x614c>
   19f44:	mov	r0, r7
   19f48:	mov	r1, r6
   19f4c:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   19f50:	cmp	r7, #0
   19f54:	mov	r5, r0
   19f58:	beq	19f64 <g_unichar_xdigit_value@plt+0x6100>
   19f5c:	mov	r0, r7
   19f60:	bl	13b94 <g_object_unref@plt>
   19f64:	mov	r0, r6
   19f68:	mov	r7, r5
   19f6c:	bl	13b94 <g_object_unref@plt>
   19f70:	mov	r0, r4
   19f74:	str	sl, [sp, #24]
   19f78:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   19f7c:	mov	r1, r9
   19f80:	mov	r2, fp
   19f84:	mov	r5, r0
   19f88:	ldr	r0, [r0, #16]
   19f8c:	bl	16f58 <g_unichar_xdigit_value@plt+0x30f4>
   19f90:	ldr	r6, [sp, #24]
   19f94:	mov	r8, r0
   19f98:	mov	r0, r5
   19f9c:	bl	13b94 <g_object_unref@plt>
   19fa0:	cmp	r8, #0
   19fa4:	bne	19f08 <g_unichar_xdigit_value@plt+0x60a4>
   19fa8:	mov	r0, r7
   19fac:	b	19ec0 <g_unichar_xdigit_value@plt+0x605c>
   19fb0:	mov	r0, r4
   19fb4:	ldr	r9, [r4, #16]
   19fb8:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   19fbc:	mov	r5, r0
   19fc0:	mov	r0, r4
   19fc4:	ldr	fp, [r5, #16]
   19fc8:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   19fcc:	mov	r6, r0
   19fd0:	mov	r0, r4
   19fd4:	ldr	sl, [r6, #20]
   19fd8:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   19fdc:	mov	r2, fp
   19fe0:	mov	r1, #3
   19fe4:	mov	r3, sl
   19fe8:	ldr	ip, [r0, #24]
   19fec:	mov	r4, r0
   19ff0:	mov	r0, r9
   19ff4:	str	ip, [sp]
   19ff8:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   19ffc:	mov	r0, r4
   1a000:	bl	13b94 <g_object_unref@plt>
   1a004:	mov	r0, r6
   1a008:	bl	13b94 <g_object_unref@plt>
   1a00c:	mov	r0, r5
   1a010:	bl	13b94 <g_object_unref@plt>
   1a014:	cmp	r7, #0
   1a018:	beq	1a024 <g_unichar_xdigit_value@plt+0x61c0>
   1a01c:	mov	r0, r7
   1a020:	bl	13b94 <g_object_unref@plt>
   1a024:	mov	r0, #0
   1a028:	b	19ec0 <g_unichar_xdigit_value@plt+0x605c>
   1a02c:	bl	13978 <__stack_chk_fail@plt>
   1a030:	andeq	r7, r3, ip, lsl #3
   1a034:	muleq	r0, r0, r3
   1a038:	ldr	r3, [pc, #932]	; 1a3e4 <g_unichar_xdigit_value@plt+0x6580>
   1a03c:	ldr	r2, [pc, #932]	; 1a3e8 <g_unichar_xdigit_value@plt+0x6584>
   1a040:	add	r3, pc, r3
   1a044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a048:	sub	sp, sp, #60	; 0x3c
   1a04c:	ldr	r2, [r3, r2]
   1a050:	mov	r4, r0
   1a054:	ldr	r0, [r0, #44]	; 0x2c
   1a058:	mov	r5, #0
   1a05c:	str	r5, [sp, #36]	; 0x24
   1a060:	ldr	r3, [r2]
   1a064:	str	r2, [sp, #12]
   1a068:	str	r3, [sp, #52]	; 0x34
   1a06c:	bl	14b5c <g_unichar_xdigit_value@plt+0xcf8>
   1a070:	mov	r7, r0
   1a074:	ldr	r0, [r4, #44]	; 0x2c
   1a078:	bl	1399c <g_free@plt>
   1a07c:	str	r5, [r4, #44]	; 0x2c
   1a080:	mov	r0, r4
   1a084:	ldr	r5, [r4, #16]
   1a088:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   1a08c:	mov	r6, r0
   1a090:	mov	r0, r5
   1a094:	ldr	r1, [r6, #16]
   1a098:	bl	19e1c <g_unichar_xdigit_value@plt+0x5fb8>
   1a09c:	mov	r5, r0
   1a0a0:	mov	r0, r6
   1a0a4:	bl	13b94 <g_object_unref@plt>
   1a0a8:	cmp	r5, #0
   1a0ac:	beq	1a0ec <g_unichar_xdigit_value@plt+0x6288>
   1a0b0:	mov	r2, r7
   1a0b4:	asr	r3, r7, #31
   1a0b8:	mov	r0, r5
   1a0bc:	bl	25eb8 <g_unichar_xdigit_value@plt+0x12054>
   1a0c0:	mov	r6, r0
   1a0c4:	mov	r0, r5
   1a0c8:	bl	13b94 <g_object_unref@plt>
   1a0cc:	mov	r0, r6
   1a0d0:	ldr	r9, [sp, #12]
   1a0d4:	ldr	r2, [sp, #52]	; 0x34
   1a0d8:	ldr	r3, [r9]
   1a0dc:	cmp	r2, r3
   1a0e0:	bne	1a3e0 <g_unichar_xdigit_value@plt+0x657c>
   1a0e4:	add	sp, sp, #60	; 0x3c
   1a0e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0ec:	mov	r0, #1
   1a0f0:	mov	r1, #0
   1a0f4:	mov	r2, #0
   1a0f8:	mov	r3, #0
   1a0fc:	add	r8, sp, #44	; 0x2c
   1a100:	add	r9, sp, #48	; 0x30
   1a104:	str	r8, [sp, #16]
   1a108:	mov	r8, r7
   1a10c:	str	r9, [sp, #20]
   1a110:	asr	r9, r7, #31
   1a114:	strd	r8, [sp, #24]
   1a118:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   1a11c:	add	r9, sp, #56	; 0x38
   1a120:	add	sl, sp, #40	; 0x28
   1a124:	mov	r7, r5
   1a128:	str	r5, [r9, #-20]!	; 0xffffffec
   1a12c:	mov	r6, r0
   1a130:	b	1a168 <g_unichar_xdigit_value@plt+0x6304>
   1a134:	mov	r0, r6
   1a138:	mov	r1, r5
   1a13c:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   1a140:	cmp	r6, #0
   1a144:	mov	r8, r0
   1a148:	beq	1a154 <g_unichar_xdigit_value@plt+0x62f0>
   1a14c:	mov	r0, r6
   1a150:	bl	13b94 <g_object_unref@plt>
   1a154:	cmp	r5, #0
   1a158:	beq	1a164 <g_unichar_xdigit_value@plt+0x6300>
   1a15c:	mov	r0, r5
   1a160:	bl	13b94 <g_object_unref@plt>
   1a164:	mov	r6, r8
   1a168:	mov	r0, r4
   1a16c:	str	r7, [sp, #40]	; 0x28
   1a170:	str	r7, [sp, #44]	; 0x2c
   1a174:	str	r7, [sp, #48]	; 0x30
   1a178:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   1a17c:	mov	r1, r9
   1a180:	mov	r2, sl
   1a184:	mov	r5, r0
   1a188:	ldr	r0, [r0, #16]
   1a18c:	bl	16f58 <g_unichar_xdigit_value@plt+0x30f4>
   1a190:	mov	r8, r0
   1a194:	mov	r0, r5
   1a198:	ldr	r5, [sp, #40]	; 0x28
   1a19c:	bl	13b94 <g_object_unref@plt>
   1a1a0:	cmp	r8, #0
   1a1a4:	beq	1a23c <g_unichar_xdigit_value@plt+0x63d8>
   1a1a8:	mov	r0, #7
   1a1ac:	ldr	fp, [r4, #16]
   1a1b0:	bl	13c90 <g_malloc0@plt>
   1a1b4:	mov	r8, r0
   1a1b8:	mov	r0, r5
   1a1bc:	mov	r1, r8
   1a1c0:	bl	13648 <g_unichar_to_utf8@plt>
   1a1c4:	mov	r1, r8
   1a1c8:	mov	r0, fp
   1a1cc:	bl	19e1c <g_unichar_xdigit_value@plt+0x5fb8>
   1a1d0:	mov	r5, r0
   1a1d4:	mov	r0, r8
   1a1d8:	bl	1399c <g_free@plt>
   1a1dc:	cmp	r5, #0
   1a1e0:	beq	1a354 <g_unichar_xdigit_value@plt+0x64f0>
   1a1e4:	ldr	r3, [sp, #36]	; 0x24
   1a1e8:	mov	r0, r4
   1a1ec:	str	r3, [sp, #44]	; 0x2c
   1a1f0:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   1a1f4:	add	r1, sp, #44	; 0x2c
   1a1f8:	add	r2, sp, #48	; 0x30
   1a1fc:	mov	r8, r0
   1a200:	ldr	r0, [r0, #16]
   1a204:	bl	16f58 <g_unichar_xdigit_value@plt+0x30f4>
   1a208:	mov	fp, r0
   1a20c:	mov	r0, r8
   1a210:	bl	13b94 <g_object_unref@plt>
   1a214:	cmp	fp, #0
   1a218:	bne	1a134 <g_unichar_xdigit_value@plt+0x62d0>
   1a21c:	ldrd	r2, [sp, #24]
   1a220:	mov	r0, r5
   1a224:	bl	25eb8 <g_unichar_xdigit_value@plt+0x12054>
   1a228:	mov	r3, r0
   1a22c:	mov	r0, r5
   1a230:	mov	r5, r3
   1a234:	bl	13b94 <g_object_unref@plt>
   1a238:	b	1a134 <g_unichar_xdigit_value@plt+0x62d0>
   1a23c:	bl	25528 <g_unichar_xdigit_value@plt+0x116c4>
   1a240:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   1a244:	cmp	r0, #0
   1a248:	beq	1a34c <g_unichar_xdigit_value@plt+0x64e8>
   1a24c:	ldr	r0, [r4, #24]
   1a250:	cmp	r0, #0
   1a254:	moveq	r7, r0
   1a258:	beq	1a264 <g_unichar_xdigit_value@plt+0x6400>
   1a25c:	bl	133f0 <g_object_ref@plt>
   1a260:	mov	r7, r0
   1a264:	ldr	r0, [r4, #28]
   1a268:	cmp	r0, #0
   1a26c:	moveq	r8, r0
   1a270:	beq	1a27c <g_unichar_xdigit_value@plt+0x6418>
   1a274:	bl	133f0 <g_object_ref@plt>
   1a278:	mov	r8, r0
   1a27c:	ldr	r0, [r7, #24]
   1a280:	cmp	r0, #0
   1a284:	bne	1a290 <g_unichar_xdigit_value@plt+0x642c>
   1a288:	b	1a3d8 <g_unichar_xdigit_value@plt+0x6574>
   1a28c:	mov	r7, r5
   1a290:	bl	133f0 <g_object_ref@plt>
   1a294:	mov	r5, r0
   1a298:	mov	r0, r7
   1a29c:	bl	13b94 <g_object_unref@plt>
   1a2a0:	ldr	r0, [r5, #24]
   1a2a4:	cmp	r0, #0
   1a2a8:	bne	1a28c <g_unichar_xdigit_value@plt+0x6428>
   1a2ac:	ldr	r0, [r8, #28]
   1a2b0:	cmp	r0, #0
   1a2b4:	bne	1a2c0 <g_unichar_xdigit_value@plt+0x645c>
   1a2b8:	b	1a3d0 <g_unichar_xdigit_value@plt+0x656c>
   1a2bc:	mov	r8, r7
   1a2c0:	bl	133f0 <g_object_ref@plt>
   1a2c4:	mov	r7, r0
   1a2c8:	mov	r0, r8
   1a2cc:	bl	13b94 <g_object_unref@plt>
   1a2d0:	ldr	r0, [r7, #28]
   1a2d4:	cmp	r0, #0
   1a2d8:	bne	1a2bc <g_unichar_xdigit_value@plt+0x6458>
   1a2dc:	ldr	fp, [r4, #16]
   1a2e0:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   1a2e4:	mov	r9, r0
   1a2e8:	mov	r0, r5
   1a2ec:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   1a2f0:	mov	r4, r0
   1a2f4:	mov	r0, r7
   1a2f8:	ldr	sl, [r4, #20]
   1a2fc:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   1a300:	mov	r2, r9
   1a304:	mov	r1, #6
   1a308:	mov	r3, sl
   1a30c:	ldr	ip, [r0, #24]
   1a310:	mov	r8, r0
   1a314:	mov	r0, fp
   1a318:	str	ip, [sp]
   1a31c:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1a320:	mov	r0, r8
   1a324:	bl	13b94 <g_object_unref@plt>
   1a328:	mov	r0, r4
   1a32c:	bl	13b94 <g_object_unref@plt>
   1a330:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   1a334:	mov	r0, #0
   1a338:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   1a33c:	mov	r0, r7
   1a340:	bl	13b94 <g_object_unref@plt>
   1a344:	mov	r0, r5
   1a348:	bl	13b94 <g_object_unref@plt>
   1a34c:	mov	r0, r6
   1a350:	b	1a0d0 <g_unichar_xdigit_value@plt+0x626c>
   1a354:	mov	r0, r4
   1a358:	ldr	r8, [r4, #16]
   1a35c:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   1a360:	mov	r5, r0
   1a364:	mov	r0, r4
   1a368:	ldr	sl, [r5, #16]
   1a36c:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   1a370:	mov	r7, r0
   1a374:	mov	r0, r4
   1a378:	ldr	r9, [r7, #20]
   1a37c:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   1a380:	mov	r2, sl
   1a384:	mov	r1, #3
   1a388:	mov	r3, r9
   1a38c:	ldr	ip, [r0, #24]
   1a390:	mov	r4, r0
   1a394:	mov	r0, r8
   1a398:	str	ip, [sp]
   1a39c:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1a3a0:	mov	r0, r4
   1a3a4:	bl	13b94 <g_object_unref@plt>
   1a3a8:	mov	r0, r7
   1a3ac:	bl	13b94 <g_object_unref@plt>
   1a3b0:	mov	r0, r5
   1a3b4:	bl	13b94 <g_object_unref@plt>
   1a3b8:	cmp	r6, #0
   1a3bc:	beq	1a3c8 <g_unichar_xdigit_value@plt+0x6564>
   1a3c0:	mov	r0, r6
   1a3c4:	bl	13b94 <g_object_unref@plt>
   1a3c8:	mov	r0, #0
   1a3cc:	b	1a0d0 <g_unichar_xdigit_value@plt+0x626c>
   1a3d0:	mov	r7, r8
   1a3d4:	b	1a2dc <g_unichar_xdigit_value@plt+0x6478>
   1a3d8:	mov	r5, r7
   1a3dc:	b	1a2ac <g_unichar_xdigit_value@plt+0x6448>
   1a3e0:	bl	13978 <__stack_chk_fail@plt>
   1a3e4:			; <UNDEFINED> instruction: 0x00036fb8
   1a3e8:	muleq	r0, r0, r3
   1a3ec:	push	{r3, lr}
   1a3f0:	subs	r3, r0, #0
   1a3f4:	beq	1a408 <g_unichar_xdigit_value@plt+0x65a4>
   1a3f8:	ldr	r3, [r3]
   1a3fc:	ldr	r3, [r3, #16]
   1a400:	blx	r3
   1a404:	pop	{r3, pc}
   1a408:	ldr	r1, [pc, #24]	; 1a428 <g_unichar_xdigit_value@plt+0x65c4>
   1a40c:	ldr	r2, [pc, #24]	; 1a42c <g_unichar_xdigit_value@plt+0x65c8>
   1a410:	add	r1, pc, r1
   1a414:	add	r1, r1, #1184	; 0x4a0
   1a418:	add	r2, pc, r2
   1a41c:	add	r1, r1, #4
   1a420:	pop	{r3, lr}
   1a424:	b	13450 <g_return_if_fail_warning@plt>
   1a428:	andeq	lr, r1, ip, lsr #5
   1a42c:	andeq	sp, r1, ip, asr #25
   1a430:	push	{r4, r5, r6, lr}
   1a434:	subs	r4, r1, #0
   1a438:	beq	1a470 <g_unichar_xdigit_value@plt+0x660c>
   1a43c:	ldr	r6, [r0, #16]
   1a440:	ldr	r0, [r0, #24]
   1a444:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   1a448:	mov	r2, r4
   1a44c:	mov	r5, r0
   1a450:	mov	r0, r6
   1a454:	ldr	r1, [r5, #16]
   1a458:	bl	1a3ec <g_unichar_xdigit_value@plt+0x6588>
   1a45c:	mov	r0, r5
   1a460:	bl	13b94 <g_object_unref@plt>
   1a464:	mov	r0, r4
   1a468:	pop	{r4, r5, r6, lr}
   1a46c:	b	133f0 <g_object_ref@plt>
   1a470:	ldr	r1, [pc, #32]	; 1a498 <g_unichar_xdigit_value@plt+0x6634>
   1a474:	mov	r0, r4
   1a478:	ldr	r2, [pc, #28]	; 1a49c <g_unichar_xdigit_value@plt+0x6638>
   1a47c:	add	r1, pc, r1
   1a480:	add	r1, r1, #1200	; 0x4b0
   1a484:	add	r2, pc, r2
   1a488:	add	r1, r1, #8
   1a48c:	bl	13450 <g_return_if_fail_warning@plt>
   1a490:	mov	r0, r4
   1a494:	pop	{r4, r5, r6, pc}
   1a498:	andeq	lr, r1, r0, asr #4
   1a49c:	andeq	lr, r1, r0, lsr #26
   1a4a0:	push	{r4, lr}
   1a4a4:	subs	r4, r0, #0
   1a4a8:	beq	1a4bc <g_unichar_xdigit_value@plt+0x6658>
   1a4ac:	ldr	r3, [r4]
   1a4b0:	ldr	r3, [r3, #20]
   1a4b4:	blx	r3
   1a4b8:	pop	{r4, pc}
   1a4bc:	ldr	r1, [pc, #28]	; 1a4e0 <g_unichar_xdigit_value@plt+0x667c>
   1a4c0:	ldr	r2, [pc, #28]	; 1a4e4 <g_unichar_xdigit_value@plt+0x6680>
   1a4c4:	add	r1, pc, r1
   1a4c8:	add	r1, r1, #1232	; 0x4d0
   1a4cc:	add	r2, pc, r2
   1a4d0:	add	r1, r1, #4
   1a4d4:	bl	13450 <g_return_if_fail_warning@plt>
   1a4d8:	mov	r0, r4
   1a4dc:	pop	{r4, pc}
   1a4e0:	strdeq	lr, [r1], -r8
   1a4e4:	andeq	sp, r1, r8, lsl ip
   1a4e8:	push	{r4, lr}
   1a4ec:	subs	r4, r0, #0
   1a4f0:	beq	1a504 <g_unichar_xdigit_value@plt+0x66a0>
   1a4f4:	ldr	r3, [r4]
   1a4f8:	ldr	r3, [r3, #24]
   1a4fc:	blx	r3
   1a500:	pop	{r4, pc}
   1a504:	ldr	r1, [pc, #24]	; 1a524 <g_unichar_xdigit_value@plt+0x66c0>
   1a508:	ldr	r2, [pc, #24]	; 1a528 <g_unichar_xdigit_value@plt+0x66c4>
   1a50c:	add	r1, pc, r1
   1a510:	add	r2, pc, r2
   1a514:	add	r1, r1, #1264	; 0x4f0
   1a518:	bl	13450 <g_return_if_fail_warning@plt>
   1a51c:	mov	r0, r4
   1a520:	pop	{r4, pc}
   1a524:			; <UNDEFINED> instruction: 0x0001e1b0
   1a528:	ldrdeq	sp, [r1], -r4
   1a52c:	push	{r4, lr}
   1a530:	subs	r4, r0, #0
   1a534:	beq	1a548 <g_unichar_xdigit_value@plt+0x66e4>
   1a538:	ldr	ip, [r4]
   1a53c:	ldr	ip, [ip, #28]
   1a540:	blx	ip
   1a544:	pop	{r4, pc}
   1a548:	ldr	r1, [pc, #28]	; 1a56c <g_unichar_xdigit_value@plt+0x6708>
   1a54c:	ldr	r2, [pc, #28]	; 1a570 <g_unichar_xdigit_value@plt+0x670c>
   1a550:	add	r1, pc, r1
   1a554:	add	r1, r1, #1280	; 0x500
   1a558:	add	r2, pc, r2
   1a55c:	add	r1, r1, #8
   1a560:	bl	13450 <g_return_if_fail_warning@plt>
   1a564:	mov	r0, r4
   1a568:	pop	{r4, pc}
   1a56c:	andeq	lr, r1, ip, ror #2
   1a570:	andeq	sp, r1, ip, lsl #23
   1a574:	push	{r4, r5, r6, r7, r8, lr}
   1a578:	subs	r6, r1, #0
   1a57c:	sub	sp, sp, #8
   1a580:	mov	r4, r0
   1a584:	mov	r5, r2
   1a588:	beq	1a664 <g_unichar_xdigit_value@plt+0x6800>
   1a58c:	cmp	r2, #0
   1a590:	beq	1a690 <g_unichar_xdigit_value@plt+0x682c>
   1a594:	ldr	r0, [r0, #24]
   1a598:	ldr	r5, [r0, #44]	; 0x2c
   1a59c:	cmp	r5, #0
   1a5a0:	beq	1a6bc <g_unichar_xdigit_value@plt+0x6858>
   1a5a4:	mov	r0, r5
   1a5a8:	bl	136f0 <g_strdup@plt>
   1a5ac:	mov	r6, r0
   1a5b0:	mov	r0, #0
   1a5b4:	bl	1399c <g_free@plt>
   1a5b8:	ldr	r5, [r4, #24]
   1a5bc:	ldr	r0, [r5, #44]	; 0x2c
   1a5c0:	bl	1399c <g_free@plt>
   1a5c4:	ldr	r0, [r4, #28]
   1a5c8:	mov	r3, #0
   1a5cc:	str	r3, [r5, #44]	; 0x2c
   1a5d0:	ldr	r5, [r0, #44]	; 0x2c
   1a5d4:	cmp	r5, #0
   1a5d8:	beq	1a6f0 <g_unichar_xdigit_value@plt+0x688c>
   1a5dc:	mov	r0, r5
   1a5e0:	bl	136f0 <g_strdup@plt>
   1a5e4:	mov	r7, r0
   1a5e8:	mov	r0, #0
   1a5ec:	bl	1399c <g_free@plt>
   1a5f0:	ldr	r5, [r4, #28]
   1a5f4:	ldr	r0, [r5, #44]	; 0x2c
   1a5f8:	bl	1399c <g_free@plt>
   1a5fc:	mov	r3, #0
   1a600:	str	r3, [r5, #44]	; 0x2c
   1a604:	mov	r1, #0
   1a608:	mov	r2, #0
   1a60c:	mov	r3, #0
   1a610:	mov	r0, #1
   1a614:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   1a618:	mov	r2, r6
   1a61c:	mov	r3, r7
   1a620:	mov	r1, r0
   1a624:	mov	r5, r0
   1a628:	ldr	r0, [r4, #16]
   1a62c:	bl	1a52c <g_unichar_xdigit_value@plt+0x66c8>
   1a630:	subs	r8, r0, #0
   1a634:	beq	1a718 <g_unichar_xdigit_value@plt+0x68b4>
   1a638:	cmp	r5, #0
   1a63c:	beq	1a648 <g_unichar_xdigit_value@plt+0x67e4>
   1a640:	mov	r0, r5
   1a644:	bl	13b94 <g_object_unref@plt>
   1a648:	mov	r0, r7
   1a64c:	bl	1399c <g_free@plt>
   1a650:	mov	r0, r6
   1a654:	bl	1399c <g_free@plt>
   1a658:	mov	r0, r8
   1a65c:	add	sp, sp, #8
   1a660:	pop	{r4, r5, r6, r7, r8, pc}
   1a664:	ldr	r1, [pc, #200]	; 1a734 <g_unichar_xdigit_value@plt+0x68d0>
   1a668:	mov	r0, r6
   1a66c:	ldr	r2, [pc, #196]	; 1a738 <g_unichar_xdigit_value@plt+0x68d4>
   1a670:	add	r1, pc, r1
   1a674:	add	r1, r1, #1296	; 0x510
   1a678:	add	r2, pc, r2
   1a67c:	add	r1, r1, #8
   1a680:	bl	13450 <g_return_if_fail_warning@plt>
   1a684:	mov	r0, r6
   1a688:	add	sp, sp, #8
   1a68c:	pop	{r4, r5, r6, r7, r8, pc}
   1a690:	ldr	r1, [pc, #164]	; 1a73c <g_unichar_xdigit_value@plt+0x68d8>
   1a694:	mov	r0, r2
   1a698:	ldr	r2, [pc, #160]	; 1a740 <g_unichar_xdigit_value@plt+0x68dc>
   1a69c:	add	r1, pc, r1
   1a6a0:	add	r1, r1, #1296	; 0x510
   1a6a4:	add	r2, pc, r2
   1a6a8:	add	r1, r1, #8
   1a6ac:	bl	13450 <g_return_if_fail_warning@plt>
   1a6b0:	mov	r0, r5
   1a6b4:	add	sp, sp, #8
   1a6b8:	pop	{r4, r5, r6, r7, r8, pc}
   1a6bc:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   1a6c0:	mov	r7, r0
   1a6c4:	ldr	r0, [r0, #16]
   1a6c8:	bl	136f0 <g_strdup@plt>
   1a6cc:	mov	r6, r0
   1a6d0:	mov	r0, r5
   1a6d4:	bl	1399c <g_free@plt>
   1a6d8:	mov	r0, r7
   1a6dc:	bl	13b94 <g_object_unref@plt>
   1a6e0:	ldr	r0, [r4, #28]
   1a6e4:	ldr	r5, [r0, #44]	; 0x2c
   1a6e8:	cmp	r5, #0
   1a6ec:	bne	1a5dc <g_unichar_xdigit_value@plt+0x6778>
   1a6f0:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   1a6f4:	mov	r8, r0
   1a6f8:	ldr	r0, [r0, #16]
   1a6fc:	bl	136f0 <g_strdup@plt>
   1a700:	mov	r7, r0
   1a704:	mov	r0, r5
   1a708:	bl	1399c <g_free@plt>
   1a70c:	mov	r0, r8
   1a710:	bl	13b94 <g_object_unref@plt>
   1a714:	b	1a604 <g_unichar_xdigit_value@plt+0x67a0>
   1a718:	ldr	r0, [r4, #16]
   1a71c:	mov	r1, #5
   1a720:	str	r8, [sp]
   1a724:	mov	r2, r8
   1a728:	mov	r3, r8
   1a72c:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1a730:	b	1a638 <g_unichar_xdigit_value@plt+0x67d4>
   1a734:	andeq	lr, r1, ip, asr #32
   1a738:	andeq	lr, r1, r0, lsr #22
   1a73c:	andeq	lr, r1, r0, lsr #32
   1a740:	andeq	lr, r1, r0, lsl #22
   1a744:	push	{r4, r5, r6, r7, r8, lr}
   1a748:	mov	r4, r0
   1a74c:	ldr	r0, [r0, #24]
   1a750:	sub	sp, sp, #8
   1a754:	ldr	r5, [r0, #44]	; 0x2c
   1a758:	cmp	r5, #0
   1a75c:	beq	1a814 <g_unichar_xdigit_value@plt+0x69b0>
   1a760:	mov	r0, r5
   1a764:	bl	136f0 <g_strdup@plt>
   1a768:	mov	r6, r0
   1a76c:	mov	r0, #0
   1a770:	bl	1399c <g_free@plt>
   1a774:	ldr	r5, [r4, #24]
   1a778:	ldr	r0, [r5, #44]	; 0x2c
   1a77c:	bl	1399c <g_free@plt>
   1a780:	ldr	r0, [r4, #28]
   1a784:	mov	r3, #0
   1a788:	str	r3, [r5, #44]	; 0x2c
   1a78c:	ldr	r5, [r0, #44]	; 0x2c
   1a790:	cmp	r5, #0
   1a794:	beq	1a848 <g_unichar_xdigit_value@plt+0x69e4>
   1a798:	mov	r0, r5
   1a79c:	bl	136f0 <g_strdup@plt>
   1a7a0:	mov	r7, r0
   1a7a4:	mov	r0, #0
   1a7a8:	bl	1399c <g_free@plt>
   1a7ac:	ldr	r5, [r4, #28]
   1a7b0:	ldr	r0, [r5, #44]	; 0x2c
   1a7b4:	bl	1399c <g_free@plt>
   1a7b8:	mov	r3, #0
   1a7bc:	str	r3, [r5, #44]	; 0x2c
   1a7c0:	ldr	r3, [r4, #24]
   1a7c4:	ldr	r0, [r3, #24]
   1a7c8:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   1a7cc:	subs	r5, r0, #0
   1a7d0:	beq	1a88c <g_unichar_xdigit_value@plt+0x6a28>
   1a7d4:	ldr	r0, [r4, #16]
   1a7d8:	mov	r1, r5
   1a7dc:	mov	r2, r6
   1a7e0:	mov	r3, r7
   1a7e4:	bl	1a52c <g_unichar_xdigit_value@plt+0x66c8>
   1a7e8:	subs	r8, r0, #0
   1a7ec:	beq	1a870 <g_unichar_xdigit_value@plt+0x6a0c>
   1a7f0:	mov	r0, r5
   1a7f4:	bl	13b94 <g_object_unref@plt>
   1a7f8:	mov	r0, r7
   1a7fc:	bl	1399c <g_free@plt>
   1a800:	mov	r0, r6
   1a804:	bl	1399c <g_free@plt>
   1a808:	mov	r0, r8
   1a80c:	add	sp, sp, #8
   1a810:	pop	{r4, r5, r6, r7, r8, pc}
   1a814:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   1a818:	mov	r7, r0
   1a81c:	ldr	r0, [r0, #16]
   1a820:	bl	136f0 <g_strdup@plt>
   1a824:	mov	r6, r0
   1a828:	mov	r0, r5
   1a82c:	bl	1399c <g_free@plt>
   1a830:	mov	r0, r7
   1a834:	bl	13b94 <g_object_unref@plt>
   1a838:	ldr	r0, [r4, #28]
   1a83c:	ldr	r5, [r0, #44]	; 0x2c
   1a840:	cmp	r5, #0
   1a844:	bne	1a798 <g_unichar_xdigit_value@plt+0x6934>
   1a848:	bl	17788 <g_unichar_xdigit_value@plt+0x3924>
   1a84c:	mov	r8, r0
   1a850:	ldr	r0, [r0, #16]
   1a854:	bl	136f0 <g_strdup@plt>
   1a858:	mov	r7, r0
   1a85c:	mov	r0, r5
   1a860:	bl	1399c <g_free@plt>
   1a864:	mov	r0, r8
   1a868:	bl	13b94 <g_object_unref@plt>
   1a86c:	b	1a7c0 <g_unichar_xdigit_value@plt+0x695c>
   1a870:	ldr	r0, [r4, #16]
   1a874:	mov	r1, #5
   1a878:	str	r8, [sp]
   1a87c:	mov	r2, r8
   1a880:	mov	r3, r8
   1a884:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1a888:	b	1a7f0 <g_unichar_xdigit_value@plt+0x698c>
   1a88c:	mov	r0, r7
   1a890:	bl	1399c <g_free@plt>
   1a894:	mov	r0, r6
   1a898:	bl	1399c <g_free@plt>
   1a89c:	mov	r0, r5
   1a8a0:	b	1a80c <g_unichar_xdigit_value@plt+0x69a8>
   1a8a4:	ldr	r0, [pc, #136]	; 1a934 <g_unichar_xdigit_value@plt+0x6ad0>
   1a8a8:	push	{r4, r5, lr}
   1a8ac:	add	r0, pc, r0
   1a8b0:	dmb	sy
   1a8b4:	sub	sp, sp, #12
   1a8b8:	ldr	r4, [r0, #300]	; 0x12c
   1a8bc:	dmb	sy
   1a8c0:	cmp	r4, #0
   1a8c4:	beq	1a8dc <g_unichar_xdigit_value@plt+0x6a78>
   1a8c8:	ldr	r3, [pc, #104]	; 1a938 <g_unichar_xdigit_value@plt+0x6ad4>
   1a8cc:	add	r3, pc, r3
   1a8d0:	ldr	r0, [r3, #300]	; 0x12c
   1a8d4:	add	sp, sp, #12
   1a8d8:	pop	{r4, r5, pc}
   1a8dc:	add	r5, r0, #300	; 0x12c
   1a8e0:	mov	r0, r5
   1a8e4:	bl	138ac <g_once_init_enter@plt>
   1a8e8:	cmp	r0, #0
   1a8ec:	beq	1a8c8 <g_unichar_xdigit_value@plt+0x6a64>
   1a8f0:	bl	13dec <g_type_fundamental_next@plt>
   1a8f4:	ldr	r2, [pc, #64]	; 1a93c <g_unichar_xdigit_value@plt+0x6ad8>
   1a8f8:	ldr	r3, [pc, #64]	; 1a940 <g_unichar_xdigit_value@plt+0x6adc>
   1a8fc:	add	r2, pc, r2
   1a900:	ldr	r1, [pc, #60]	; 1a944 <g_unichar_xdigit_value@plt+0x6ae0>
   1a904:	add	r3, pc, r3
   1a908:	add	r2, r2, #1552	; 0x610
   1a90c:	add	r3, r3, #1328	; 0x530
   1a910:	str	r4, [sp]
   1a914:	add	r2, r2, #8
   1a918:	add	r3, r3, #4
   1a91c:	add	r1, pc, r1
   1a920:	bl	13c24 <g_type_register_fundamental@plt>
   1a924:	mov	r1, r0
   1a928:	mov	r0, r5
   1a92c:	bl	13bac <g_once_init_leave@plt>
   1a930:	b	1a8c8 <g_unichar_xdigit_value@plt+0x6a64>
   1a934:	andeq	r6, r3, r4, asr fp
   1a938:	andeq	r6, r3, r4, lsr fp
   1a93c:	andeq	r5, r3, r8, lsr sl
   1a940:			; <UNDEFINED> instruction: 0x0001ddb8
   1a944:	muleq	r1, ip, ip
   1a948:	push	{r4, r5, r6, r7, lr}
   1a94c:	sub	sp, sp, #12
   1a950:	mov	r5, r1
   1a954:	mov	r4, r2
   1a958:	mov	r6, r0
   1a95c:	mov	r7, r3
   1a960:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   1a964:	str	r7, [sp]
   1a968:	mov	r1, r6
   1a96c:	mov	r2, r5
   1a970:	mov	r3, r4
   1a974:	bl	18d88 <g_unichar_xdigit_value@plt+0x4f24>
   1a978:	add	sp, sp, #12
   1a97c:	pop	{r4, r5, r6, r7, pc}
   1a980:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a984:	sub	sp, sp, #12
   1a988:	mov	r4, r3
   1a98c:	mov	r8, r1
   1a990:	mov	r7, r2
   1a994:	mov	r9, r0
   1a998:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   1a99c:	ldr	r6, [sp, #40]	; 0x28
   1a9a0:	mov	r1, r0
   1a9a4:	mov	r0, r4
   1a9a8:	bl	13420 <g_type_is_a@plt>
   1a9ac:	ldr	ip, [pc, #120]	; 1aa2c <g_unichar_xdigit_value@plt+0x6bc8>
   1a9b0:	add	ip, pc, ip
   1a9b4:	subs	r5, r0, #0
   1a9b8:	beq	1aa04 <g_unichar_xdigit_value@plt+0x6ba0>
   1a9bc:	ldr	r0, [pc, #108]	; 1aa30 <g_unichar_xdigit_value@plt+0x6bcc>
   1a9c0:	mov	r1, r9
   1a9c4:	mov	r2, r8
   1a9c8:	mov	r3, r7
   1a9cc:	ldr	r0, [ip, r0]
   1a9d0:	ldr	r0, [r0]
   1a9d4:	ldr	r0, [r0, #76]	; 0x4c
   1a9d8:	str	r6, [sp]
   1a9dc:	bl	13690 <g_param_spec_internal@plt>
   1a9e0:	mov	r1, #76	; 0x4c
   1a9e4:	mov	r5, r0
   1a9e8:	bl	13510 <g_type_check_instance_cast@plt>
   1a9ec:	mov	r1, #76	; 0x4c
   1a9f0:	str	r4, [r0, #12]
   1a9f4:	mov	r0, r5
   1a9f8:	add	sp, sp, #12
   1a9fc:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1aa00:	b	13510 <g_type_check_instance_cast@plt>
   1aa04:	ldr	r1, [pc, #40]	; 1aa34 <g_unichar_xdigit_value@plt+0x6bd0>
   1aa08:	ldr	r2, [pc, #40]	; 1aa38 <g_unichar_xdigit_value@plt+0x6bd4>
   1aa0c:	add	r1, pc, r1
   1aa10:	add	r1, r1, #1328	; 0x530
   1aa14:	add	r2, pc, r2
   1aa18:	add	r1, r1, #8
   1aa1c:	bl	13450 <g_return_if_fail_warning@plt>
   1aa20:	mov	r0, r5
   1aa24:	add	sp, sp, #12
   1aa28:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1aa2c:	andeq	r6, r3, r8, asr #12
   1aa30:			; <UNDEFINED> instruction: 0x000003b4
   1aa34:			; <UNDEFINED> instruction: 0x0001dcb0
   1aa38:	andeq	lr, r1, r4, asr sl
   1aa3c:	push	{r4, lr}
   1aa40:	mov	r4, r0
   1aa44:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   1aa48:	cmp	r4, #0
   1aa4c:	beq	1aa70 <g_unichar_xdigit_value@plt+0x6c0c>
   1aa50:	ldr	r3, [r4]
   1aa54:	cmp	r0, r3
   1aa58:	beq	1aa98 <g_unichar_xdigit_value@plt+0x6c34>
   1aa5c:	mov	r1, r0
   1aa60:	mov	r0, r4
   1aa64:	bl	1381c <g_type_check_value_holds@plt>
   1aa68:	cmp	r0, #0
   1aa6c:	bne	1aa98 <g_unichar_xdigit_value@plt+0x6c34>
   1aa70:	ldr	r1, [pc, #40]	; 1aaa0 <g_unichar_xdigit_value@plt+0x6c3c>
   1aa74:	mov	r0, #0
   1aa78:	ldr	r2, [pc, #36]	; 1aaa4 <g_unichar_xdigit_value@plt+0x6c40>
   1aa7c:	add	r1, pc, r1
   1aa80:	add	r1, r1, #1344	; 0x540
   1aa84:	add	r2, pc, r2
   1aa88:	add	r1, r1, #12
   1aa8c:	bl	13450 <g_return_if_fail_warning@plt>
   1aa90:	mov	r0, #0
   1aa94:	pop	{r4, pc}
   1aa98:	ldr	r0, [r4, #8]
   1aa9c:	pop	{r4, pc}
   1aaa0:	andeq	sp, r1, r0, asr #24
   1aaa4:	andeq	lr, r1, ip, lsl #20
   1aaa8:	push	{r4, lr}
   1aaac:	mov	r4, r0
   1aab0:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   1aab4:	mov	r1, r0
   1aab8:	mov	r0, r4
   1aabc:	bl	13870 <g_type_instance_get_private@plt>
   1aac0:	mov	r3, #1
   1aac4:	str	r3, [r4, #4]
   1aac8:	str	r0, [r4, #8]
   1aacc:	pop	{r4, pc}
   1aad0:	push	{r3, r4, r5, lr}
   1aad4:	mov	r4, r0
   1aad8:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   1aadc:	mov	r5, #0
   1aae0:	mov	r1, r0
   1aae4:	mov	r0, r4
   1aae8:	bl	13510 <g_type_check_instance_cast@plt>
   1aaec:	mov	r4, r0
   1aaf0:	bl	13804 <g_signal_handlers_destroy@plt>
   1aaf4:	ldr	r3, [r4, #8]
   1aaf8:	ldr	r0, [r3]
   1aafc:	bl	1399c <g_free@plt>
   1ab00:	ldr	r3, [r4, #8]
   1ab04:	ldr	r0, [r3, #4]
   1ab08:	str	r5, [r3]
   1ab0c:	cmp	r0, r5
   1ab10:	beq	1ab20 <g_unichar_xdigit_value@plt+0x6cbc>
   1ab14:	bl	13b94 <g_object_unref@plt>
   1ab18:	ldr	r3, [r4, #8]
   1ab1c:	str	r5, [r3, #4]
   1ab20:	ldr	r0, [r3, #8]
   1ab24:	cmp	r0, #0
   1ab28:	beq	1ab3c <g_unichar_xdigit_value@plt+0x6cd8>
   1ab2c:	bl	13b94 <g_object_unref@plt>
   1ab30:	ldr	r3, [r4, #8]
   1ab34:	mov	r2, #0
   1ab38:	str	r2, [r3, #8]
   1ab3c:	ldr	r0, [r3, #12]
   1ab40:	cmp	r0, #0
   1ab44:	beq	1ab58 <g_unichar_xdigit_value@plt+0x6cf4>
   1ab48:	bl	13b94 <g_object_unref@plt>
   1ab4c:	ldr	r3, [r4, #8]
   1ab50:	mov	r2, #0
   1ab54:	str	r2, [r3, #12]
   1ab58:	ldr	r0, [r3, #24]
   1ab5c:	bl	1399c <g_free@plt>
   1ab60:	ldr	r3, [r4, #8]
   1ab64:	mov	r2, #0
   1ab68:	str	r2, [r3, #24]
   1ab6c:	pop	{r3, r4, r5, pc}
   1ab70:	add	r3, r0, #4
   1ab74:	dmb	sy
   1ab78:	ldrex	r1, [r3]
   1ab7c:	add	r1, r1, #1
   1ab80:	strex	r2, r1, [r3]
   1ab84:	cmp	r2, #0
   1ab88:	bne	1ab78 <g_unichar_xdigit_value@plt+0x6d14>
   1ab8c:	dmb	sy
   1ab90:	bx	lr
   1ab94:	push	{r4, lr}
   1ab98:	ldr	r4, [r2]
   1ab9c:	cmp	r4, #0
   1aba0:	beq	1abcc <g_unichar_xdigit_value@plt+0x6d68>
   1aba4:	ldr	r0, [r0, #8]
   1aba8:	cmp	r0, #0
   1abac:	beq	1abb8 <g_unichar_xdigit_value@plt+0x6d54>
   1abb0:	tst	r3, #134217728	; 0x8000000
   1abb4:	beq	1abc4 <g_unichar_xdigit_value@plt+0x6d60>
   1abb8:	str	r0, [r4]
   1abbc:	mov	r0, #0
   1abc0:	pop	{r4, pc}
   1abc4:	bl	1ab70 <g_unichar_xdigit_value@plt+0x6d0c>
   1abc8:	b	1abb8 <g_unichar_xdigit_value@plt+0x6d54>
   1abcc:	ldr	r0, [r0]
   1abd0:	bl	13564 <g_type_name@plt>
   1abd4:	pop	{r4, lr}
   1abd8:	mov	r1, r0
   1abdc:	ldr	r0, [pc, #4]	; 1abe8 <g_unichar_xdigit_value@plt+0x6d84>
   1abe0:	add	r0, pc, r0
   1abe4:	b	13774 <g_strdup_printf@plt>
   1abe8:	andeq	lr, r1, r0, ror #17
   1abec:	push	{r4, r5, r6, lr}
   1abf0:	mov	r6, r0
   1abf4:	ldr	r4, [r2]
   1abf8:	sub	sp, sp, #8
   1abfc:	cmp	r4, #0
   1ac00:	beq	1acb8 <g_unichar_xdigit_value@plt+0x6e54>
   1ac04:	ldr	r5, [r4]
   1ac08:	cmp	r5, #0
   1ac0c:	beq	1ac78 <g_unichar_xdigit_value@plt+0x6e14>
   1ac10:	ldr	r0, [r5]
   1ac14:	ldr	r1, [r6]
   1ac18:	bl	13684 <g_value_type_compatible@plt>
   1ac1c:	subs	r5, r0, #0
   1ac20:	bne	1aca4 <g_unichar_xdigit_value@plt+0x6e40>
   1ac24:	ldr	r3, [r4]
   1ac28:	ldr	r0, [r3]
   1ac2c:	bl	13564 <g_type_name@plt>
   1ac30:	mov	r4, r0
   1ac34:	ldr	r0, [r6]
   1ac38:	bl	13564 <g_type_name@plt>
   1ac3c:	ldr	r2, [pc, #128]	; 1acc4 <g_unichar_xdigit_value@plt+0x6e60>
   1ac40:	mov	r1, r4
   1ac44:	str	r5, [sp, #4]
   1ac48:	add	r2, pc, r2
   1ac4c:	str	r2, [sp]
   1ac50:	ldr	r2, [pc, #112]	; 1acc8 <g_unichar_xdigit_value@plt+0x6e64>
   1ac54:	add	r2, pc, r2
   1ac58:	mov	r3, r0
   1ac5c:	ldr	r0, [pc, #104]	; 1accc <g_unichar_xdigit_value@plt+0x6e68>
   1ac60:	add	r0, pc, r0
   1ac64:	bl	13af8 <g_strconcat@plt>
   1ac68:	mov	r3, r0
   1ac6c:	mov	r0, r3
   1ac70:	add	sp, sp, #8
   1ac74:	pop	{r4, r5, r6, pc}
   1ac78:	ldr	r0, [r0]
   1ac7c:	bl	13564 <g_type_name@plt>
   1ac80:	ldr	r2, [pc, #72]	; 1acd0 <g_unichar_xdigit_value@plt+0x6e6c>
   1ac84:	mov	r3, r5
   1ac88:	add	r2, pc, r2
   1ac8c:	mov	r1, r0
   1ac90:	ldr	r0, [pc, #60]	; 1acd4 <g_unichar_xdigit_value@plt+0x6e70>
   1ac94:	add	r0, pc, r0
   1ac98:	add	sp, sp, #8
   1ac9c:	pop	{r4, r5, r6, lr}
   1aca0:	b	13af8 <g_strconcat@plt>
   1aca4:	mov	r0, r4
   1aca8:	bl	1ab70 <g_unichar_xdigit_value@plt+0x6d0c>
   1acac:	mov	r3, #0
   1acb0:	str	r0, [r6, #8]
   1acb4:	b	1ac6c <g_unichar_xdigit_value@plt+0x6e08>
   1acb8:	mov	r3, r4
   1acbc:	str	r4, [r0, #8]
   1acc0:	b	1ac6c <g_unichar_xdigit_value@plt+0x6e08>
   1acc4:	andeq	pc, r1, ip, lsl r5	; <UNPREDICTABLE>
   1acc8:	andeq	lr, r1, r0, ror #17
   1accc:			; <UNDEFINED> instruction: 0x0001e8bc
   1acd0:	ldrdeq	pc, [r1], -ip
   1acd4:	andeq	lr, r1, r4, asr r8
   1acd8:	push	{r4, lr}
   1acdc:	mov	r4, r1
   1ace0:	ldr	r0, [r0, #8]
   1ace4:	cmp	r0, #0
   1ace8:	streq	r0, [r1, #8]
   1acec:	popeq	{r4, pc}
   1acf0:	bl	1ab70 <g_unichar_xdigit_value@plt+0x6d0c>
   1acf4:	str	r0, [r4, #8]
   1acf8:	pop	{r4, pc}
   1acfc:	push	{r4, lr}
   1ad00:	add	r3, r0, #4
   1ad04:	dmb	sy
   1ad08:	mov	r4, r0
   1ad0c:	ldrex	r2, [r3]
   1ad10:	sub	r1, r2, #1
   1ad14:	strex	ip, r1, [r3]
   1ad18:	cmp	ip, #0
   1ad1c:	bne	1ad0c <g_unichar_xdigit_value@plt+0x6ea8>
   1ad20:	cmp	r2, #1
   1ad24:	dmb	sy
   1ad28:	popne	{r4, pc}
   1ad2c:	ldr	r3, [r4]
   1ad30:	ldr	r3, [r3, #4]
   1ad34:	blx	r3
   1ad38:	mov	r0, r4
   1ad3c:	pop	{r4, lr}
   1ad40:	b	136a8 <g_type_free_instance@plt>
   1ad44:	push	{r3, r4, r5, r6, r7, lr}
   1ad48:	subs	r5, r1, #0
   1ad4c:	mov	r6, r2
   1ad50:	mov	r7, r3
   1ad54:	beq	1add8 <g_unichar_xdigit_value@plt+0x6f74>
   1ad58:	mov	r1, #0
   1ad5c:	bl	133e4 <g_object_new@plt>
   1ad60:	mov	r4, r0
   1ad64:	mov	r0, r5
   1ad68:	bl	1ab70 <g_unichar_xdigit_value@plt+0x6d0c>
   1ad6c:	mov	r5, r0
   1ad70:	ldr	r0, [r4, #16]
   1ad74:	cmp	r0, #0
   1ad78:	beq	1ad80 <g_unichar_xdigit_value@plt+0x6f1c>
   1ad7c:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   1ad80:	str	r5, [r4, #16]
   1ad84:	mov	r0, r6
   1ad88:	bl	13c18 <g_list_copy@plt>
   1ad8c:	mov	r5, r0
   1ad90:	ldr	r0, [r4, #32]
   1ad94:	cmp	r0, #0
   1ad98:	beq	1ada8 <g_unichar_xdigit_value@plt+0x6f44>
   1ad9c:	ldr	r1, [pc, #88]	; 1adfc <g_unichar_xdigit_value@plt+0x6f98>
   1ada0:	add	r1, pc, r1
   1ada4:	bl	1396c <g_list_free_full@plt>
   1ada8:	ldr	r3, [sp, #24]
   1adac:	str	r5, [r4, #32]
   1adb0:	ldr	r0, [sp, #28]
   1adb4:	str	r3, [r4, #40]	; 0x28
   1adb8:	str	r7, [r4, #36]	; 0x24
   1adbc:	bl	136f0 <g_strdup@plt>
   1adc0:	mov	r5, r0
   1adc4:	ldr	r0, [r4, #44]	; 0x2c
   1adc8:	bl	1399c <g_free@plt>
   1adcc:	str	r5, [r4, #44]	; 0x2c
   1add0:	mov	r0, r4
   1add4:	pop	{r3, r4, r5, r6, r7, pc}
   1add8:	ldr	r1, [pc, #32]	; 1ae00 <g_unichar_xdigit_value@plt+0x6f9c>
   1addc:	mov	r0, r5
   1ade0:	ldr	r2, [pc, #28]	; 1ae04 <g_unichar_xdigit_value@plt+0x6fa0>
   1ade4:	add	r1, pc, r1
   1ade8:	add	r2, pc, r2
   1adec:	add	r1, r1, #1376	; 0x560
   1adf0:	bl	13450 <g_return_if_fail_warning@plt>
   1adf4:	mov	r0, r5
   1adf8:	pop	{r3, r4, r5, r6, r7, pc}
   1adfc:			; <UNDEFINED> instruction: 0xffffae60
   1ae00:	ldrdeq	sp, [r1], -r8
   1ae04:	andeq	lr, r1, r0, ror #14
   1ae08:	push	{r4, r5, r6, r7, r8, lr}
   1ae0c:	sub	sp, sp, #8
   1ae10:	mov	r6, r1
   1ae14:	mov	r5, r2
   1ae18:	ldr	r4, [sp, #32]
   1ae1c:	mov	r7, r0
   1ae20:	mov	r8, r3
   1ae24:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   1ae28:	str	r8, [sp]
   1ae2c:	mov	r1, r7
   1ae30:	mov	r2, r6
   1ae34:	mov	r3, r5
   1ae38:	str	r4, [sp, #4]
   1ae3c:	bl	1ad44 <g_unichar_xdigit_value@plt+0x6ee0>
   1ae40:	add	sp, sp, #8
   1ae44:	pop	{r4, r5, r6, r7, r8, pc}
   1ae48:	push	{r4, r5, r6, lr}
   1ae4c:	subs	r5, r1, #0
   1ae50:	ldr	r4, [sp, #16]
   1ae54:	ldr	ip, [sp, #20]
   1ae58:	beq	1ae74 <g_unichar_xdigit_value@plt+0x7010>
   1ae5c:	cmp	ip, #0
   1ae60:	beq	1ae98 <g_unichar_xdigit_value@plt+0x7034>
   1ae64:	str	r4, [sp, #16]
   1ae68:	str	ip, [sp, #20]
   1ae6c:	pop	{r4, r5, r6, lr}
   1ae70:	b	1ad44 <g_unichar_xdigit_value@plt+0x6ee0>
   1ae74:	ldr	r1, [pc, #64]	; 1aebc <g_unichar_xdigit_value@plt+0x7058>
   1ae78:	mov	r0, r5
   1ae7c:	ldr	r2, [pc, #60]	; 1aec0 <g_unichar_xdigit_value@plt+0x705c>
   1ae80:	add	r1, pc, r1
   1ae84:	add	r2, pc, r2
   1ae88:	add	r1, r1, #1408	; 0x580
   1ae8c:	bl	13450 <g_return_if_fail_warning@plt>
   1ae90:	mov	r0, #0
   1ae94:	pop	{r4, r5, r6, pc}
   1ae98:	ldr	r1, [pc, #36]	; 1aec4 <g_unichar_xdigit_value@plt+0x7060>
   1ae9c:	mov	r0, ip
   1aea0:	ldr	r2, [pc, #32]	; 1aec8 <g_unichar_xdigit_value@plt+0x7064>
   1aea4:	add	r1, pc, r1
   1aea8:	add	r2, pc, r2
   1aeac:	add	r1, r1, #1408	; 0x580
   1aeb0:	bl	13450 <g_return_if_fail_warning@plt>
   1aeb4:	mov	r0, #0
   1aeb8:	pop	{r4, r5, r6, pc}
   1aebc:	andeq	sp, r1, ip, lsr r8
   1aec0:	andeq	lr, r1, r4, asr #13
   1aec4:	andeq	sp, r1, r8, lsl r8
   1aec8:			; <UNDEFINED> instruction: 0x0001e6b0
   1aecc:	push	{r4, r5, r6, r7, r8, lr}
   1aed0:	sub	sp, sp, #8
   1aed4:	mov	r6, r1
   1aed8:	mov	r5, r2
   1aedc:	ldr	r4, [sp, #32]
   1aee0:	mov	r7, r0
   1aee4:	mov	r8, r3
   1aee8:	bl	17ef4 <g_unichar_xdigit_value@plt+0x4090>
   1aeec:	str	r8, [sp]
   1aef0:	mov	r1, r7
   1aef4:	mov	r2, r6
   1aef8:	mov	r3, r5
   1aefc:	str	r4, [sp, #4]
   1af00:	bl	1ae48 <g_unichar_xdigit_value@plt+0x6fe4>
   1af04:	add	sp, sp, #8
   1af08:	pop	{r4, r5, r6, r7, r8, pc}
   1af0c:	push	{r3, r4, r5, r6, r7, lr}
   1af10:	subs	r6, r1, #0
   1af14:	mov	r5, r2
   1af18:	mov	r7, r3
   1af1c:	beq	1afc4 <g_unichar_xdigit_value@plt+0x7160>
   1af20:	mov	r1, #0
   1af24:	bl	133e4 <g_object_new@plt>
   1af28:	mov	r4, r0
   1af2c:	mov	r0, r6
   1af30:	bl	1ab70 <g_unichar_xdigit_value@plt+0x6d0c>
   1af34:	mov	r6, r0
   1af38:	ldr	r0, [r4, #16]
   1af3c:	cmp	r0, #0
   1af40:	beq	1af48 <g_unichar_xdigit_value@plt+0x70e4>
   1af44:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   1af48:	ldr	r0, [r4, #32]
   1af4c:	str	r6, [r4, #16]
   1af50:	cmp	r0, #0
   1af54:	beq	1af64 <g_unichar_xdigit_value@plt+0x7100>
   1af58:	ldr	r1, [pc, #140]	; 1afec <g_unichar_xdigit_value@plt+0x7188>
   1af5c:	add	r1, pc, r1
   1af60:	bl	1396c <g_list_free_full@plt>
   1af64:	cmp	r5, #0
   1af68:	mov	r3, #0
   1af6c:	str	r3, [r4, #32]
   1af70:	moveq	r1, r5
   1af74:	beq	1af88 <g_unichar_xdigit_value@plt+0x7124>
   1af78:	mov	r0, r5
   1af7c:	bl	133f0 <g_object_ref@plt>
   1af80:	ldr	r5, [r4, #32]
   1af84:	mov	r1, r0
   1af88:	mov	r2, #0
   1af8c:	mov	r0, r5
   1af90:	bl	136c0 <g_list_insert@plt>
   1af94:	ldr	r3, [sp, #24]
   1af98:	str	r7, [r4, #36]	; 0x24
   1af9c:	str	r3, [r4, #40]	; 0x28
   1afa0:	str	r0, [r4, #32]
   1afa4:	ldr	r0, [sp, #28]
   1afa8:	bl	136f0 <g_strdup@plt>
   1afac:	mov	r5, r0
   1afb0:	ldr	r0, [r4, #44]	; 0x2c
   1afb4:	bl	1399c <g_free@plt>
   1afb8:	str	r5, [r4, #44]	; 0x2c
   1afbc:	mov	r0, r4
   1afc0:	pop	{r3, r4, r5, r6, r7, pc}
   1afc4:	ldr	r1, [pc, #36]	; 1aff0 <g_unichar_xdigit_value@plt+0x718c>
   1afc8:	mov	r0, r6
   1afcc:	ldr	r2, [pc, #32]	; 1aff4 <g_unichar_xdigit_value@plt+0x7190>
   1afd0:	add	r1, pc, r1
   1afd4:	add	r1, r1, #1440	; 0x5a0
   1afd8:	add	r2, pc, r2
   1afdc:	add	r1, r1, #4
   1afe0:	bl	13450 <g_return_if_fail_warning@plt>
   1afe4:	mov	r0, r6
   1afe8:	pop	{r3, r4, r5, r6, r7, pc}
   1afec:			; <UNDEFINED> instruction: 0xffffaca4
   1aff0:	andeq	sp, r1, ip, ror #13
   1aff4:	andeq	lr, r1, r0, ror r5
   1aff8:	push	{r4, r5, r6, r7, r8, lr}
   1affc:	sub	sp, sp, #8
   1b000:	mov	r6, r1
   1b004:	mov	r5, r2
   1b008:	ldr	r4, [sp, #32]
   1b00c:	mov	r7, r0
   1b010:	mov	r8, r3
   1b014:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   1b018:	str	r8, [sp]
   1b01c:	mov	r1, r7
   1b020:	mov	r2, r6
   1b024:	mov	r3, r5
   1b028:	str	r4, [sp, #4]
   1b02c:	bl	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1b030:	add	sp, sp, #8
   1b034:	pop	{r4, r5, r6, r7, r8, pc}
   1b038:	push	{r4, lr}
   1b03c:	subs	r4, r1, #0
   1b040:	sub	sp, sp, #8
   1b044:	beq	1b064 <g_unichar_xdigit_value@plt+0x7200>
   1b048:	ldr	ip, [sp, #16]
   1b04c:	str	ip, [sp]
   1b050:	mov	ip, #0
   1b054:	str	ip, [sp, #4]
   1b058:	bl	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1b05c:	add	sp, sp, #8
   1b060:	pop	{r4, pc}
   1b064:	ldr	r1, [pc, #36]	; 1b090 <g_unichar_xdigit_value@plt+0x722c>
   1b068:	mov	r0, r4
   1b06c:	ldr	r2, [pc, #32]	; 1b094 <g_unichar_xdigit_value@plt+0x7230>
   1b070:	add	r1, pc, r1
   1b074:	add	r1, r1, #1456	; 0x5b0
   1b078:	add	r2, pc, r2
   1b07c:	add	r1, r1, #12
   1b080:	bl	13450 <g_return_if_fail_warning@plt>
   1b084:	mov	r0, r4
   1b088:	add	sp, sp, #8
   1b08c:	pop	{r4, pc}
   1b090:	andeq	sp, r1, ip, asr #12
   1b094:	ldrdeq	lr, [r1], -r0
   1b098:	push	{r4, lr}
   1b09c:	subs	r4, r1, #0
   1b0a0:	beq	1b0ac <g_unichar_xdigit_value@plt+0x7248>
   1b0a4:	pop	{r4, lr}
   1b0a8:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b0ac:	ldr	r1, [pc, #32]	; 1b0d4 <g_unichar_xdigit_value@plt+0x7270>
   1b0b0:	mov	r0, r4
   1b0b4:	ldr	r2, [pc, #28]	; 1b0d8 <g_unichar_xdigit_value@plt+0x7274>
   1b0b8:	add	r1, pc, r1
   1b0bc:	add	r1, r1, #1472	; 0x5c0
   1b0c0:	add	r2, pc, r2
   1b0c4:	add	r1, r1, #12
   1b0c8:	bl	13450 <g_return_if_fail_warning@plt>
   1b0cc:	mov	r0, r4
   1b0d0:	pop	{r4, pc}
   1b0d4:	andeq	sp, r1, r4, lsl #12
   1b0d8:	andeq	lr, r1, r8, lsl #9
   1b0dc:	push	{r4, r5, r6, r7, lr}
   1b0e0:	sub	sp, sp, #12
   1b0e4:	mov	r5, r1
   1b0e8:	mov	r4, r2
   1b0ec:	mov	r6, r0
   1b0f0:	mov	r7, r3
   1b0f4:	bl	17bdc <g_unichar_xdigit_value@plt+0x3d78>
   1b0f8:	str	r7, [sp]
   1b0fc:	mov	r1, r6
   1b100:	mov	r2, r5
   1b104:	mov	r3, r4
   1b108:	bl	1b098 <g_unichar_xdigit_value@plt+0x7234>
   1b10c:	add	sp, sp, #12
   1b110:	pop	{r4, r5, r6, r7, pc}
   1b114:	push	{r4, lr}
   1b118:	subs	r4, r1, #0
   1b11c:	beq	1b128 <g_unichar_xdigit_value@plt+0x72c4>
   1b120:	pop	{r4, lr}
   1b124:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b128:	ldr	r1, [pc, #32]	; 1b150 <g_unichar_xdigit_value@plt+0x72ec>
   1b12c:	mov	r0, r4
   1b130:	ldr	r2, [pc, #28]	; 1b154 <g_unichar_xdigit_value@plt+0x72f0>
   1b134:	add	r1, pc, r1
   1b138:	add	r1, r1, #1504	; 0x5e0
   1b13c:	add	r2, pc, r2
   1b140:	add	r1, r1, #4
   1b144:	bl	13450 <g_return_if_fail_warning@plt>
   1b148:	mov	r0, r4
   1b14c:	pop	{r4, pc}
   1b150:	andeq	sp, r1, r8, lsl #11
   1b154:	andeq	lr, r1, ip, lsl #8
   1b158:	push	{r4, r5, r6, r7, lr}
   1b15c:	sub	sp, sp, #12
   1b160:	mov	r5, r1
   1b164:	mov	r4, r2
   1b168:	mov	r6, r0
   1b16c:	mov	r7, r3
   1b170:	bl	18080 <g_unichar_xdigit_value@plt+0x421c>
   1b174:	str	r7, [sp]
   1b178:	mov	r1, r6
   1b17c:	mov	r2, r5
   1b180:	mov	r3, r4
   1b184:	bl	1b114 <g_unichar_xdigit_value@plt+0x72b0>
   1b188:	add	sp, sp, #12
   1b18c:	pop	{r4, r5, r6, r7, pc}
   1b190:	push	{r4, lr}
   1b194:	subs	r4, r1, #0
   1b198:	beq	1b1a4 <g_unichar_xdigit_value@plt+0x7340>
   1b19c:	pop	{r4, lr}
   1b1a0:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b1a4:	ldr	r1, [pc, #28]	; 1b1c8 <g_unichar_xdigit_value@plt+0x7364>
   1b1a8:	mov	r0, r4
   1b1ac:	ldr	r2, [pc, #24]	; 1b1cc <g_unichar_xdigit_value@plt+0x7368>
   1b1b0:	add	r1, pc, r1
   1b1b4:	add	r2, pc, r2
   1b1b8:	add	r1, r1, #1536	; 0x600
   1b1bc:	bl	13450 <g_return_if_fail_warning@plt>
   1b1c0:	mov	r0, r4
   1b1c4:	pop	{r4, pc}
   1b1c8:	andeq	sp, r1, ip, lsl #10
   1b1cc:	muleq	r1, r4, r3
   1b1d0:	push	{r4, r5, r6, r7, lr}
   1b1d4:	sub	sp, sp, #12
   1b1d8:	mov	r5, r1
   1b1dc:	mov	r4, r2
   1b1e0:	mov	r6, r0
   1b1e4:	mov	r7, r3
   1b1e8:	bl	18104 <g_unichar_xdigit_value@plt+0x42a0>
   1b1ec:	str	r7, [sp]
   1b1f0:	mov	r1, r6
   1b1f4:	mov	r2, r5
   1b1f8:	mov	r3, r4
   1b1fc:	bl	1b190 <g_unichar_xdigit_value@plt+0x732c>
   1b200:	add	sp, sp, #12
   1b204:	pop	{r4, r5, r6, r7, pc}
   1b208:	push	{r4, lr}
   1b20c:	subs	r4, r1, #0
   1b210:	beq	1b21c <g_unichar_xdigit_value@plt+0x73b8>
   1b214:	pop	{r4, lr}
   1b218:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b21c:	ldr	r1, [pc, #28]	; 1b240 <g_unichar_xdigit_value@plt+0x73dc>
   1b220:	mov	r0, r4
   1b224:	ldr	r2, [pc, #24]	; 1b244 <g_unichar_xdigit_value@plt+0x73e0>
   1b228:	add	r1, pc, r1
   1b22c:	add	r2, pc, r2
   1b230:	add	r1, r1, #1568	; 0x620
   1b234:	bl	13450 <g_return_if_fail_warning@plt>
   1b238:	mov	r0, r4
   1b23c:	pop	{r4, pc}
   1b240:	muleq	r1, r4, r4
   1b244:	andeq	lr, r1, ip, lsl r3
   1b248:	push	{r4, r5, r6, r7, lr}
   1b24c:	sub	sp, sp, #12
   1b250:	mov	r5, r1
   1b254:	mov	r4, r2
   1b258:	mov	r6, r0
   1b25c:	mov	r7, r3
   1b260:	bl	18188 <g_unichar_xdigit_value@plt+0x4324>
   1b264:	str	r7, [sp]
   1b268:	mov	r1, r6
   1b26c:	mov	r2, r5
   1b270:	mov	r3, r4
   1b274:	bl	1b208 <g_unichar_xdigit_value@plt+0x73a4>
   1b278:	add	sp, sp, #12
   1b27c:	pop	{r4, r5, r6, r7, pc}
   1b280:	push	{r4, lr}
   1b284:	subs	r4, r1, #0
   1b288:	beq	1b294 <g_unichar_xdigit_value@plt+0x7430>
   1b28c:	pop	{r4, lr}
   1b290:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b294:	ldr	r1, [pc, #32]	; 1b2bc <g_unichar_xdigit_value@plt+0x7458>
   1b298:	mov	r0, r4
   1b29c:	ldr	r2, [pc, #28]	; 1b2c0 <g_unichar_xdigit_value@plt+0x745c>
   1b2a0:	add	r1, pc, r1
   1b2a4:	add	r1, r1, #1584	; 0x630
   1b2a8:	add	r2, pc, r2
   1b2ac:	add	r1, r1, #8
   1b2b0:	bl	13450 <g_return_if_fail_warning@plt>
   1b2b4:	mov	r0, r4
   1b2b8:	pop	{r4, pc}
   1b2bc:	andeq	sp, r1, ip, lsl r4
   1b2c0:	andeq	lr, r1, r0, lsr #5
   1b2c4:	push	{r4, r5, r6, r7, lr}
   1b2c8:	sub	sp, sp, #12
   1b2cc:	mov	r5, r1
   1b2d0:	mov	r4, r2
   1b2d4:	mov	r6, r0
   1b2d8:	mov	r7, r3
   1b2dc:	bl	1820c <g_unichar_xdigit_value@plt+0x43a8>
   1b2e0:	str	r7, [sp]
   1b2e4:	mov	r1, r6
   1b2e8:	mov	r2, r5
   1b2ec:	mov	r3, r4
   1b2f0:	bl	1b280 <g_unichar_xdigit_value@plt+0x741c>
   1b2f4:	add	sp, sp, #12
   1b2f8:	pop	{r4, r5, r6, r7, pc}
   1b2fc:	push	{r4, lr}
   1b300:	subs	r4, r1, #0
   1b304:	beq	1b310 <g_unichar_xdigit_value@plt+0x74ac>
   1b308:	pop	{r4, lr}
   1b30c:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b310:	ldr	r1, [pc, #28]	; 1b334 <g_unichar_xdigit_value@plt+0x74d0>
   1b314:	mov	r0, r4
   1b318:	ldr	r2, [pc, #24]	; 1b338 <g_unichar_xdigit_value@plt+0x74d4>
   1b31c:	add	r1, pc, r1
   1b320:	add	r2, pc, r2
   1b324:	add	r1, r1, #1616	; 0x650
   1b328:	bl	13450 <g_return_if_fail_warning@plt>
   1b32c:	mov	r0, r4
   1b330:	pop	{r4, pc}
   1b334:	andeq	sp, r1, r0, lsr #7
   1b338:	andeq	lr, r1, r8, lsr #4
   1b33c:	push	{r4, r5, r6, r7, lr}
   1b340:	sub	sp, sp, #12
   1b344:	mov	r5, r1
   1b348:	mov	r4, r2
   1b34c:	mov	r6, r0
   1b350:	mov	r7, r3
   1b354:	bl	18290 <g_unichar_xdigit_value@plt+0x442c>
   1b358:	str	r7, [sp]
   1b35c:	mov	r1, r6
   1b360:	mov	r2, r5
   1b364:	mov	r3, r4
   1b368:	bl	1b2fc <g_unichar_xdigit_value@plt+0x7498>
   1b36c:	add	sp, sp, #12
   1b370:	pop	{r4, r5, r6, r7, pc}
   1b374:	push	{r4, lr}
   1b378:	subs	r4, r1, #0
   1b37c:	beq	1b388 <g_unichar_xdigit_value@plt+0x7524>
   1b380:	pop	{r4, lr}
   1b384:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b388:	ldr	r1, [pc, #32]	; 1b3b0 <g_unichar_xdigit_value@plt+0x754c>
   1b38c:	mov	r0, r4
   1b390:	ldr	r2, [pc, #28]	; 1b3b4 <g_unichar_xdigit_value@plt+0x7550>
   1b394:	add	r1, pc, r1
   1b398:	add	r1, r1, #1648	; 0x670
   1b39c:	add	r2, pc, r2
   1b3a0:	add	r1, r1, #4
   1b3a4:	bl	13450 <g_return_if_fail_warning@plt>
   1b3a8:	mov	r0, r4
   1b3ac:	pop	{r4, pc}
   1b3b0:	andeq	sp, r1, r8, lsr #6
   1b3b4:	andeq	lr, r1, ip, lsr #3
   1b3b8:	push	{r4, r5, r6, r7, lr}
   1b3bc:	sub	sp, sp, #12
   1b3c0:	mov	r5, r1
   1b3c4:	mov	r4, r2
   1b3c8:	mov	r6, r0
   1b3cc:	mov	r7, r3
   1b3d0:	bl	18314 <g_unichar_xdigit_value@plt+0x44b0>
   1b3d4:	str	r7, [sp]
   1b3d8:	mov	r1, r6
   1b3dc:	mov	r2, r5
   1b3e0:	mov	r3, r4
   1b3e4:	bl	1b374 <g_unichar_xdigit_value@plt+0x7510>
   1b3e8:	add	sp, sp, #12
   1b3ec:	pop	{r4, r5, r6, r7, pc}
   1b3f0:	push	{r4, lr}
   1b3f4:	subs	r4, r1, #0
   1b3f8:	beq	1b404 <g_unichar_xdigit_value@plt+0x75a0>
   1b3fc:	pop	{r4, lr}
   1b400:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b404:	ldr	r1, [pc, #32]	; 1b42c <g_unichar_xdigit_value@plt+0x75c8>
   1b408:	mov	r0, r4
   1b40c:	ldr	r2, [pc, #28]	; 1b430 <g_unichar_xdigit_value@plt+0x75cc>
   1b410:	add	r1, pc, r1
   1b414:	add	r1, r1, #1664	; 0x680
   1b418:	add	r2, pc, r2
   1b41c:	add	r1, r1, #12
   1b420:	bl	13450 <g_return_if_fail_warning@plt>
   1b424:	mov	r0, r4
   1b428:	pop	{r4, pc}
   1b42c:	andeq	sp, r1, ip, lsr #5
   1b430:	andeq	lr, r1, r0, lsr r1
   1b434:	push	{r4, r5, r6, r7, lr}
   1b438:	sub	sp, sp, #12
   1b43c:	mov	r5, r1
   1b440:	mov	r4, r2
   1b444:	mov	r6, r0
   1b448:	mov	r7, r3
   1b44c:	bl	18398 <g_unichar_xdigit_value@plt+0x4534>
   1b450:	str	r7, [sp]
   1b454:	mov	r1, r6
   1b458:	mov	r2, r5
   1b45c:	mov	r3, r4
   1b460:	bl	1b3f0 <g_unichar_xdigit_value@plt+0x758c>
   1b464:	add	sp, sp, #12
   1b468:	pop	{r4, r5, r6, r7, pc}
   1b46c:	push	{r4, lr}
   1b470:	subs	r4, r1, #0
   1b474:	beq	1b480 <g_unichar_xdigit_value@plt+0x761c>
   1b478:	pop	{r4, lr}
   1b47c:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b480:	ldr	r1, [pc, #32]	; 1b4a8 <g_unichar_xdigit_value@plt+0x7644>
   1b484:	mov	r0, r4
   1b488:	ldr	r2, [pc, #28]	; 1b4ac <g_unichar_xdigit_value@plt+0x7648>
   1b48c:	add	r1, pc, r1
   1b490:	add	r1, r1, #1696	; 0x6a0
   1b494:	add	r2, pc, r2
   1b498:	add	r1, r1, #4
   1b49c:	bl	13450 <g_return_if_fail_warning@plt>
   1b4a0:	mov	r0, r4
   1b4a4:	pop	{r4, pc}
   1b4a8:	andeq	sp, r1, r0, lsr r2
   1b4ac:	strheq	lr, [r1], -r4
   1b4b0:	push	{r4, r5, r6, r7, lr}
   1b4b4:	sub	sp, sp, #12
   1b4b8:	mov	r5, r1
   1b4bc:	mov	r4, r2
   1b4c0:	mov	r6, r0
   1b4c4:	mov	r7, r3
   1b4c8:	bl	1841c <g_unichar_xdigit_value@plt+0x45b8>
   1b4cc:	str	r7, [sp]
   1b4d0:	mov	r1, r6
   1b4d4:	mov	r2, r5
   1b4d8:	mov	r3, r4
   1b4dc:	bl	1b46c <g_unichar_xdigit_value@plt+0x7608>
   1b4e0:	add	sp, sp, #12
   1b4e4:	pop	{r4, r5, r6, r7, pc}
   1b4e8:	push	{r4, lr}
   1b4ec:	subs	r4, r1, #0
   1b4f0:	sub	sp, sp, #8
   1b4f4:	beq	1b544 <g_unichar_xdigit_value@plt+0x76e0>
   1b4f8:	ldr	ip, [sp, #16]
   1b4fc:	str	ip, [sp]
   1b500:	bl	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b504:	ldr	r2, [sp, #20]
   1b508:	ldr	r3, [r0, #52]	; 0x34
   1b50c:	mov	r4, r0
   1b510:	ldr	r0, [r3, #4]
   1b514:	str	r2, [r3]
   1b518:	cmp	r0, #0
   1b51c:	beq	1b530 <g_unichar_xdigit_value@plt+0x76cc>
   1b520:	bl	13b94 <g_object_unref@plt>
   1b524:	ldr	r3, [r4, #52]	; 0x34
   1b528:	mov	r2, #0
   1b52c:	str	r2, [r3, #4]
   1b530:	mov	r0, r4
   1b534:	mov	r2, #0
   1b538:	str	r2, [r3, #4]
   1b53c:	add	sp, sp, #8
   1b540:	pop	{r4, pc}
   1b544:	ldr	r1, [pc, #32]	; 1b56c <g_unichar_xdigit_value@plt+0x7708>
   1b548:	mov	r0, r4
   1b54c:	ldr	r2, [pc, #28]	; 1b570 <g_unichar_xdigit_value@plt+0x770c>
   1b550:	add	r1, pc, r1
   1b554:	add	r2, pc, r2
   1b558:	add	r1, r1, #1728	; 0x6c0
   1b55c:	bl	13450 <g_return_if_fail_warning@plt>
   1b560:	mov	r0, r4
   1b564:	add	sp, sp, #8
   1b568:	pop	{r4, pc}
   1b56c:	andeq	sp, r1, ip, ror #2
   1b570:	strdeq	sp, [r1], -r4
   1b574:	push	{r4, r5, r6, r7, r8, lr}
   1b578:	sub	sp, sp, #8
   1b57c:	mov	r6, r1
   1b580:	mov	r5, r2
   1b584:	ldr	r4, [sp, #32]
   1b588:	mov	r7, r0
   1b58c:	mov	r8, r3
   1b590:	bl	187c0 <g_unichar_xdigit_value@plt+0x495c>
   1b594:	str	r8, [sp]
   1b598:	mov	r1, r7
   1b59c:	mov	r2, r6
   1b5a0:	mov	r3, r5
   1b5a4:	str	r4, [sp, #4]
   1b5a8:	bl	1b4e8 <g_unichar_xdigit_value@plt+0x7684>
   1b5ac:	add	sp, sp, #8
   1b5b0:	pop	{r4, r5, r6, r7, r8, pc}
   1b5b4:	push	{r4, r5, r6, lr}
   1b5b8:	subs	r4, r1, #0
   1b5bc:	sub	sp, sp, #8
   1b5c0:	ldr	r5, [sp, #28]
   1b5c4:	beq	1b624 <g_unichar_xdigit_value@plt+0x77c0>
   1b5c8:	cmp	r5, #0
   1b5cc:	beq	1b650 <g_unichar_xdigit_value@plt+0x77ec>
   1b5d0:	ldr	ip, [sp, #24]
   1b5d4:	mov	r6, #0
   1b5d8:	str	ip, [sp]
   1b5dc:	bl	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b5e0:	ldr	r3, [r0, #52]	; 0x34
   1b5e4:	mov	r4, r0
   1b5e8:	mov	r0, r5
   1b5ec:	str	r6, [r3]
   1b5f0:	bl	133f0 <g_object_ref@plt>
   1b5f4:	ldr	r3, [r4, #52]	; 0x34
   1b5f8:	mov	r5, r0
   1b5fc:	ldr	r0, [r3, #4]
   1b600:	cmp	r0, r6
   1b604:	beq	1b614 <g_unichar_xdigit_value@plt+0x77b0>
   1b608:	bl	13b94 <g_object_unref@plt>
   1b60c:	ldr	r3, [r4, #52]	; 0x34
   1b610:	str	r6, [r3, #4]
   1b614:	mov	r0, r4
   1b618:	str	r5, [r3, #4]
   1b61c:	add	sp, sp, #8
   1b620:	pop	{r4, r5, r6, pc}
   1b624:	ldr	r1, [pc, #80]	; 1b67c <g_unichar_xdigit_value@plt+0x7818>
   1b628:	mov	r0, r4
   1b62c:	ldr	r2, [pc, #76]	; 1b680 <g_unichar_xdigit_value@plt+0x781c>
   1b630:	add	r1, pc, r1
   1b634:	add	r1, r1, #1744	; 0x6d0
   1b638:	add	r2, pc, r2
   1b63c:	add	r1, r1, #4
   1b640:	bl	13450 <g_return_if_fail_warning@plt>
   1b644:	mov	r0, r4
   1b648:	add	sp, sp, #8
   1b64c:	pop	{r4, r5, r6, pc}
   1b650:	ldr	r1, [pc, #44]	; 1b684 <g_unichar_xdigit_value@plt+0x7820>
   1b654:	mov	r0, r5
   1b658:	ldr	r2, [pc, #40]	; 1b688 <g_unichar_xdigit_value@plt+0x7824>
   1b65c:	add	r1, pc, r1
   1b660:	add	r1, r1, #1744	; 0x6d0
   1b664:	add	r2, pc, r2
   1b668:	add	r1, r1, #4
   1b66c:	bl	13450 <g_return_if_fail_warning@plt>
   1b670:	mov	r0, r5
   1b674:	add	sp, sp, #8
   1b678:	pop	{r4, r5, r6, pc}
   1b67c:	andeq	sp, r1, ip, lsl #1
   1b680:	andeq	sp, r1, r0, lsl pc
   1b684:	andeq	sp, r1, r0, rrx
   1b688:	andeq	sp, r1, r8, lsl #30
   1b68c:	push	{r4, r5, r6, r7, r8, lr}
   1b690:	sub	sp, sp, #8
   1b694:	mov	r6, r1
   1b698:	mov	r5, r2
   1b69c:	ldr	r4, [sp, #32]
   1b6a0:	mov	r7, r0
   1b6a4:	mov	r8, r3
   1b6a8:	bl	187c0 <g_unichar_xdigit_value@plt+0x495c>
   1b6ac:	str	r8, [sp]
   1b6b0:	mov	r1, r7
   1b6b4:	mov	r2, r6
   1b6b8:	mov	r3, r5
   1b6bc:	str	r4, [sp, #4]
   1b6c0:	bl	1b5b4 <g_unichar_xdigit_value@plt+0x7750>
   1b6c4:	add	sp, sp, #8
   1b6c8:	pop	{r4, r5, r6, r7, r8, pc}
   1b6cc:	push	{r4, lr}
   1b6d0:	subs	r4, r1, #0
   1b6d4:	beq	1b6e0 <g_unichar_xdigit_value@plt+0x787c>
   1b6d8:	pop	{r4, lr}
   1b6dc:	b	1b038 <g_unichar_xdigit_value@plt+0x71d4>
   1b6e0:	ldr	r1, [pc, #32]	; 1b708 <g_unichar_xdigit_value@plt+0x78a4>
   1b6e4:	mov	r0, r4
   1b6e8:	ldr	r2, [pc, #28]	; 1b70c <g_unichar_xdigit_value@plt+0x78a8>
   1b6ec:	add	r1, pc, r1
   1b6f0:	add	r1, r1, #1776	; 0x6f0
   1b6f4:	add	r2, pc, r2
   1b6f8:	add	r1, r1, #4
   1b6fc:	bl	13450 <g_return_if_fail_warning@plt>
   1b700:	mov	r0, r4
   1b704:	pop	{r4, pc}
   1b708:	ldrdeq	ip, [r1], -r0
   1b70c:	andeq	sp, r1, r4, asr lr
   1b710:	push	{r4, r5, r6, r7, lr}
   1b714:	sub	sp, sp, #12
   1b718:	mov	r5, r1
   1b71c:	mov	r4, r2
   1b720:	mov	r6, r0
   1b724:	mov	r7, r3
   1b728:	bl	189d8 <g_unichar_xdigit_value@plt+0x4b74>
   1b72c:	str	r7, [sp]
   1b730:	mov	r1, r6
   1b734:	mov	r2, r5
   1b738:	mov	r3, r4
   1b73c:	bl	1b6cc <g_unichar_xdigit_value@plt+0x7868>
   1b740:	add	sp, sp, #12
   1b744:	pop	{r4, r5, r6, r7, pc}
   1b748:	push	{r4, lr}
   1b74c:	subs	r4, r1, #0
   1b750:	sub	sp, sp, #8
   1b754:	beq	1b774 <g_unichar_xdigit_value@plt+0x7910>
   1b758:	ldr	ip, [sp, #16]
   1b75c:	str	ip, [sp]
   1b760:	mov	ip, #0
   1b764:	str	ip, [sp, #4]
   1b768:	bl	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1b76c:	add	sp, sp, #8
   1b770:	pop	{r4, pc}
   1b774:	ldr	r1, [pc, #36]	; 1b7a0 <g_unichar_xdigit_value@plt+0x793c>
   1b778:	mov	r0, r4
   1b77c:	ldr	r2, [pc, #32]	; 1b7a4 <g_unichar_xdigit_value@plt+0x7940>
   1b780:	add	r1, pc, r1
   1b784:	add	r1, r1, #1792	; 0x700
   1b788:	add	r2, pc, r2
   1b78c:	add	r1, r1, #8
   1b790:	bl	13450 <g_return_if_fail_warning@plt>
   1b794:	mov	r0, r4
   1b798:	add	sp, sp, #8
   1b79c:	pop	{r4, pc}
   1b7a0:	andeq	ip, r1, ip, lsr pc
   1b7a4:	andeq	sp, r1, r0, asr #27
   1b7a8:	push	{r4, lr}
   1b7ac:	subs	r4, r1, #0
   1b7b0:	beq	1b7bc <g_unichar_xdigit_value@plt+0x7958>
   1b7b4:	pop	{r4, lr}
   1b7b8:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1b7bc:	ldr	r1, [pc, #32]	; 1b7e4 <g_unichar_xdigit_value@plt+0x7980>
   1b7c0:	mov	r0, r4
   1b7c4:	ldr	r2, [pc, #28]	; 1b7e8 <g_unichar_xdigit_value@plt+0x7984>
   1b7c8:	add	r1, pc, r1
   1b7cc:	add	r1, r1, #1808	; 0x710
   1b7d0:	add	r2, pc, r2
   1b7d4:	add	r1, r1, #12
   1b7d8:	bl	13450 <g_return_if_fail_warning@plt>
   1b7dc:	mov	r0, r4
   1b7e0:	pop	{r4, pc}
   1b7e4:	strdeq	ip, [r1], -r4
   1b7e8:	andeq	sp, r1, r8, ror sp
   1b7ec:	push	{r4, r5, r6, r7, lr}
   1b7f0:	sub	sp, sp, #12
   1b7f4:	mov	r5, r1
   1b7f8:	mov	r4, r2
   1b7fc:	mov	r6, r0
   1b800:	mov	r7, r3
   1b804:	bl	184a0 <g_unichar_xdigit_value@plt+0x463c>
   1b808:	str	r7, [sp]
   1b80c:	mov	r1, r6
   1b810:	mov	r2, r5
   1b814:	mov	r3, r4
   1b818:	bl	1b7a8 <g_unichar_xdigit_value@plt+0x7944>
   1b81c:	add	sp, sp, #12
   1b820:	pop	{r4, r5, r6, r7, pc}
   1b824:	push	{r4, lr}
   1b828:	subs	r4, r1, #0
   1b82c:	beq	1b838 <g_unichar_xdigit_value@plt+0x79d4>
   1b830:	pop	{r4, lr}
   1b834:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1b838:	ldr	r1, [pc, #28]	; 1b85c <g_unichar_xdigit_value@plt+0x79f8>
   1b83c:	mov	r0, r4
   1b840:	ldr	r2, [pc, #24]	; 1b860 <g_unichar_xdigit_value@plt+0x79fc>
   1b844:	add	r1, pc, r1
   1b848:	add	r2, pc, r2
   1b84c:	add	r1, r1, #1840	; 0x730
   1b850:	bl	13450 <g_return_if_fail_warning@plt>
   1b854:	mov	r0, r4
   1b858:	pop	{r4, pc}
   1b85c:	andeq	ip, r1, r8, ror lr
   1b860:	andeq	sp, r1, r0, lsl #26
   1b864:	push	{r4, r5, r6, r7, lr}
   1b868:	sub	sp, sp, #12
   1b86c:	mov	r5, r1
   1b870:	mov	r4, r2
   1b874:	mov	r6, r0
   1b878:	mov	r7, r3
   1b87c:	bl	18564 <g_unichar_xdigit_value@plt+0x4700>
   1b880:	str	r7, [sp]
   1b884:	mov	r1, r6
   1b888:	mov	r2, r5
   1b88c:	mov	r3, r4
   1b890:	bl	1b824 <g_unichar_xdigit_value@plt+0x79c0>
   1b894:	add	sp, sp, #12
   1b898:	pop	{r4, r5, r6, r7, pc}
   1b89c:	push	{r4, lr}
   1b8a0:	subs	r4, r1, #0
   1b8a4:	beq	1b8b0 <g_unichar_xdigit_value@plt+0x7a4c>
   1b8a8:	pop	{r4, lr}
   1b8ac:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1b8b0:	ldr	r1, [pc, #32]	; 1b8d8 <g_unichar_xdigit_value@plt+0x7a74>
   1b8b4:	mov	r0, r4
   1b8b8:	ldr	r2, [pc, #28]	; 1b8dc <g_unichar_xdigit_value@plt+0x7a78>
   1b8bc:	add	r1, pc, r1
   1b8c0:	add	r1, r1, #1856	; 0x740
   1b8c4:	add	r2, pc, r2
   1b8c8:	add	r1, r1, #8
   1b8cc:	bl	13450 <g_return_if_fail_warning@plt>
   1b8d0:	mov	r0, r4
   1b8d4:	pop	{r4, pc}
   1b8d8:	andeq	ip, r1, r0, lsl #28
   1b8dc:	andeq	sp, r1, r4, lsl #25
   1b8e0:	push	{r4, r5, r6, r7, lr}
   1b8e4:	sub	sp, sp, #12
   1b8e8:	mov	r5, r1
   1b8ec:	mov	r4, r2
   1b8f0:	mov	r6, r0
   1b8f4:	mov	r7, r3
   1b8f8:	bl	18628 <g_unichar_xdigit_value@plt+0x47c4>
   1b8fc:	str	r7, [sp]
   1b900:	mov	r1, r6
   1b904:	mov	r2, r5
   1b908:	mov	r3, r4
   1b90c:	bl	1b89c <g_unichar_xdigit_value@plt+0x7a38>
   1b910:	add	sp, sp, #12
   1b914:	pop	{r4, r5, r6, r7, pc}
   1b918:	push	{r4, lr}
   1b91c:	subs	r4, r1, #0
   1b920:	beq	1b92c <g_unichar_xdigit_value@plt+0x7ac8>
   1b924:	pop	{r4, lr}
   1b928:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1b92c:	ldr	r1, [pc, #28]	; 1b950 <g_unichar_xdigit_value@plt+0x7aec>
   1b930:	mov	r0, r4
   1b934:	ldr	r2, [pc, #24]	; 1b954 <g_unichar_xdigit_value@plt+0x7af0>
   1b938:	add	r1, pc, r1
   1b93c:	add	r2, pc, r2
   1b940:	add	r1, r1, #1888	; 0x760
   1b944:	bl	13450 <g_return_if_fail_warning@plt>
   1b948:	mov	r0, r4
   1b94c:	pop	{r4, pc}
   1b950:	andeq	ip, r1, r4, lsl #27
   1b954:	andeq	sp, r1, ip, lsl #24
   1b958:	push	{r4, r5, r6, r7, lr}
   1b95c:	sub	sp, sp, #12
   1b960:	mov	r5, r1
   1b964:	mov	r4, r2
   1b968:	mov	r6, r0
   1b96c:	mov	r7, r3
   1b970:	bl	186b0 <g_unichar_xdigit_value@plt+0x484c>
   1b974:	str	r7, [sp]
   1b978:	mov	r1, r6
   1b97c:	mov	r2, r5
   1b980:	mov	r3, r4
   1b984:	bl	1b918 <g_unichar_xdigit_value@plt+0x7ab4>
   1b988:	add	sp, sp, #12
   1b98c:	pop	{r4, r5, r6, r7, pc}
   1b990:	push	{r4, lr}
   1b994:	subs	r4, r1, #0
   1b998:	beq	1b9a4 <g_unichar_xdigit_value@plt+0x7b40>
   1b99c:	pop	{r4, lr}
   1b9a0:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1b9a4:	ldr	r1, [pc, #32]	; 1b9cc <g_unichar_xdigit_value@plt+0x7b68>
   1b9a8:	mov	r0, r4
   1b9ac:	ldr	r2, [pc, #28]	; 1b9d0 <g_unichar_xdigit_value@plt+0x7b6c>
   1b9b0:	add	r1, pc, r1
   1b9b4:	add	r1, r1, #1904	; 0x770
   1b9b8:	add	r2, pc, r2
   1b9bc:	add	r1, r1, #8
   1b9c0:	bl	13450 <g_return_if_fail_warning@plt>
   1b9c4:	mov	r0, r4
   1b9c8:	pop	{r4, pc}
   1b9cc:	andeq	ip, r1, ip, lsl #26
   1b9d0:	muleq	r1, r0, fp
   1b9d4:	push	{r4, r5, r6, r7, lr}
   1b9d8:	sub	sp, sp, #12
   1b9dc:	mov	r5, r1
   1b9e0:	mov	r4, r2
   1b9e4:	mov	r6, r0
   1b9e8:	mov	r7, r3
   1b9ec:	bl	18738 <g_unichar_xdigit_value@plt+0x48d4>
   1b9f0:	str	r7, [sp]
   1b9f4:	mov	r1, r6
   1b9f8:	mov	r2, r5
   1b9fc:	mov	r3, r4
   1ba00:	bl	1b990 <g_unichar_xdigit_value@plt+0x7b2c>
   1ba04:	add	sp, sp, #12
   1ba08:	pop	{r4, r5, r6, r7, pc}
   1ba0c:	push	{r4, lr}
   1ba10:	subs	r4, r1, #0
   1ba14:	beq	1ba20 <g_unichar_xdigit_value@plt+0x7bbc>
   1ba18:	pop	{r4, lr}
   1ba1c:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1ba20:	ldr	r1, [pc, #32]	; 1ba48 <g_unichar_xdigit_value@plt+0x7be4>
   1ba24:	mov	r0, r4
   1ba28:	ldr	r2, [pc, #28]	; 1ba4c <g_unichar_xdigit_value@plt+0x7be8>
   1ba2c:	add	r1, pc, r1
   1ba30:	add	r1, r1, #1936	; 0x790
   1ba34:	add	r2, pc, r2
   1ba38:	add	r1, r1, #8
   1ba3c:	bl	13450 <g_return_if_fail_warning@plt>
   1ba40:	mov	r0, r4
   1ba44:	pop	{r4, pc}
   1ba48:	muleq	r1, r0, ip
   1ba4c:	andeq	sp, r1, r4, lsl fp
   1ba50:	push	{r4, r5, r6, r7, lr}
   1ba54:	sub	sp, sp, #12
   1ba58:	mov	r5, r1
   1ba5c:	mov	r4, r2
   1ba60:	mov	r6, r0
   1ba64:	mov	r7, r3
   1ba68:	bl	188c8 <g_unichar_xdigit_value@plt+0x4a64>
   1ba6c:	str	r7, [sp]
   1ba70:	mov	r1, r6
   1ba74:	mov	r2, r5
   1ba78:	mov	r3, r4
   1ba7c:	bl	1ba0c <g_unichar_xdigit_value@plt+0x7ba8>
   1ba80:	add	sp, sp, #12
   1ba84:	pop	{r4, r5, r6, r7, pc}
   1ba88:	push	{r4, lr}
   1ba8c:	subs	r4, r1, #0
   1ba90:	beq	1ba9c <g_unichar_xdigit_value@plt+0x7c38>
   1ba94:	pop	{r4, lr}
   1ba98:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1ba9c:	ldr	r1, [pc, #28]	; 1bac0 <g_unichar_xdigit_value@plt+0x7c5c>
   1baa0:	mov	r0, r4
   1baa4:	ldr	r2, [pc, #24]	; 1bac4 <g_unichar_xdigit_value@plt+0x7c60>
   1baa8:	add	r1, pc, r1
   1baac:	add	r2, pc, r2
   1bab0:	add	r1, r1, #1968	; 0x7b0
   1bab4:	bl	13450 <g_return_if_fail_warning@plt>
   1bab8:	mov	r0, r4
   1babc:	pop	{r4, pc}
   1bac0:	andeq	ip, r1, r4, lsl ip
   1bac4:	muleq	r1, ip, sl
   1bac8:	push	{r4, r5, r6, r7, lr}
   1bacc:	sub	sp, sp, #12
   1bad0:	mov	r5, r1
   1bad4:	mov	r4, r2
   1bad8:	mov	r6, r0
   1badc:	mov	r7, r3
   1bae0:	bl	18a60 <g_unichar_xdigit_value@plt+0x4bfc>
   1bae4:	str	r7, [sp]
   1bae8:	mov	r1, r6
   1baec:	mov	r2, r5
   1baf0:	mov	r3, r4
   1baf4:	bl	1ba88 <g_unichar_xdigit_value@plt+0x7c24>
   1baf8:	add	sp, sp, #12
   1bafc:	pop	{r4, r5, r6, r7, pc}
   1bb00:	push	{r4, lr}
   1bb04:	subs	r4, r1, #0
   1bb08:	beq	1bb14 <g_unichar_xdigit_value@plt+0x7cb0>
   1bb0c:	pop	{r4, lr}
   1bb10:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1bb14:	ldr	r1, [pc, #32]	; 1bb3c <g_unichar_xdigit_value@plt+0x7cd8>
   1bb18:	mov	r0, r4
   1bb1c:	ldr	r2, [pc, #28]	; 1bb40 <g_unichar_xdigit_value@plt+0x7cdc>
   1bb20:	add	r1, pc, r1
   1bb24:	add	r1, r1, #1984	; 0x7c0
   1bb28:	add	r2, pc, r2
   1bb2c:	add	r1, r1, #4
   1bb30:	bl	13450 <g_return_if_fail_warning@plt>
   1bb34:	mov	r0, r4
   1bb38:	pop	{r4, pc}
   1bb3c:	muleq	r1, ip, fp
   1bb40:	andeq	sp, r1, r0, lsr #20
   1bb44:	push	{r4, r5, r6, r7, lr}
   1bb48:	sub	sp, sp, #12
   1bb4c:	mov	r5, r1
   1bb50:	mov	r4, r2
   1bb54:	mov	r6, r0
   1bb58:	mov	r7, r3
   1bb5c:	bl	18ae4 <g_unichar_xdigit_value@plt+0x4c80>
   1bb60:	str	r7, [sp]
   1bb64:	mov	r1, r6
   1bb68:	mov	r2, r5
   1bb6c:	mov	r3, r4
   1bb70:	bl	1bb00 <g_unichar_xdigit_value@plt+0x7c9c>
   1bb74:	add	sp, sp, #12
   1bb78:	pop	{r4, r5, r6, r7, pc}
   1bb7c:	push	{r4, lr}
   1bb80:	subs	r4, r1, #0
   1bb84:	beq	1bb90 <g_unichar_xdigit_value@plt+0x7d2c>
   1bb88:	pop	{r4, lr}
   1bb8c:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1bb90:	ldr	r1, [pc, #32]	; 1bbb8 <g_unichar_xdigit_value@plt+0x7d54>
   1bb94:	mov	r0, r4
   1bb98:	ldr	r2, [pc, #28]	; 1bbbc <g_unichar_xdigit_value@plt+0x7d58>
   1bb9c:	add	r1, pc, r1
   1bba0:	add	r1, r1, #2000	; 0x7d0
   1bba4:	add	r2, pc, r2
   1bba8:	add	r1, r1, #8
   1bbac:	bl	13450 <g_return_if_fail_warning@plt>
   1bbb0:	mov	r0, r4
   1bbb4:	pop	{r4, pc}
   1bbb8:	andeq	ip, r1, r0, lsr #22
   1bbbc:	andeq	sp, r1, r4, lsr #19
   1bbc0:	push	{r4, r5, r6, r7, lr}
   1bbc4:	sub	sp, sp, #12
   1bbc8:	mov	r5, r1
   1bbcc:	mov	r4, r2
   1bbd0:	mov	r6, r0
   1bbd4:	mov	r7, r3
   1bbd8:	bl	18b6c <g_unichar_xdigit_value@plt+0x4d08>
   1bbdc:	str	r7, [sp]
   1bbe0:	mov	r1, r6
   1bbe4:	mov	r2, r5
   1bbe8:	mov	r3, r4
   1bbec:	bl	1bb7c <g_unichar_xdigit_value@plt+0x7d18>
   1bbf0:	add	sp, sp, #12
   1bbf4:	pop	{r4, r5, r6, r7, pc}
   1bbf8:	push	{r4, lr}
   1bbfc:	subs	r4, r1, #0
   1bc00:	beq	1bc0c <g_unichar_xdigit_value@plt+0x7da8>
   1bc04:	pop	{r4, lr}
   1bc08:	b	1b748 <g_unichar_xdigit_value@plt+0x78e4>
   1bc0c:	ldr	r1, [pc, #32]	; 1bc34 <g_unichar_xdigit_value@plt+0x7dd0>
   1bc10:	mov	r0, r4
   1bc14:	ldr	r2, [pc, #28]	; 1bc38 <g_unichar_xdigit_value@plt+0x7dd4>
   1bc18:	add	r1, pc, r1
   1bc1c:	add	r1, r1, #2016	; 0x7e0
   1bc20:	add	r2, pc, r2
   1bc24:	add	r1, r1, #12
   1bc28:	bl	13450 <g_return_if_fail_warning@plt>
   1bc2c:	mov	r0, r4
   1bc30:	pop	{r4, pc}
   1bc34:	andeq	ip, r1, r4, lsr #21
   1bc38:	andeq	sp, r1, r8, lsr #18
   1bc3c:	push	{r4, r5, r6, r7, lr}
   1bc40:	sub	sp, sp, #12
   1bc44:	mov	r5, r1
   1bc48:	mov	r4, r2
   1bc4c:	mov	r6, r0
   1bc50:	mov	r7, r3
   1bc54:	bl	18bf4 <g_unichar_xdigit_value@plt+0x4d90>
   1bc58:	str	r7, [sp]
   1bc5c:	mov	r1, r6
   1bc60:	mov	r2, r5
   1bc64:	mov	r3, r4
   1bc68:	bl	1bbf8 <g_unichar_xdigit_value@plt+0x7d94>
   1bc6c:	add	sp, sp, #12
   1bc70:	pop	{r4, r5, r6, r7, pc}
   1bc74:	push	{r4, lr}
   1bc78:	subs	r4, r1, #0
   1bc7c:	sub	sp, sp, #8
   1bc80:	beq	1bca0 <g_unichar_xdigit_value@plt+0x7e3c>
   1bc84:	ldr	ip, [sp, #16]
   1bc88:	str	ip, [sp]
   1bc8c:	mov	ip, #0
   1bc90:	str	ip, [sp, #4]
   1bc94:	bl	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1bc98:	add	sp, sp, #8
   1bc9c:	pop	{r4, pc}
   1bca0:	ldr	r1, [pc, #36]	; 1bccc <g_unichar_xdigit_value@plt+0x7e68>
   1bca4:	mov	r0, r4
   1bca8:	ldr	r2, [pc, #32]	; 1bcd0 <g_unichar_xdigit_value@plt+0x7e6c>
   1bcac:	add	r1, pc, r1
   1bcb0:	add	r1, r1, #2048	; 0x800
   1bcb4:	add	r2, pc, r2
   1bcb8:	add	r1, r1, #4
   1bcbc:	bl	13450 <g_return_if_fail_warning@plt>
   1bcc0:	mov	r0, r4
   1bcc4:	add	sp, sp, #8
   1bcc8:	pop	{r4, pc}
   1bccc:	andeq	ip, r1, r0, lsl sl
   1bcd0:	muleq	r1, r4, r8
   1bcd4:	push	{r4, r5, r6, r7, lr}
   1bcd8:	sub	sp, sp, #12
   1bcdc:	mov	r5, r1
   1bce0:	mov	r4, r2
   1bce4:	mov	r6, r0
   1bce8:	mov	r7, r3
   1bcec:	bl	17b58 <g_unichar_xdigit_value@plt+0x3cf4>
   1bcf0:	str	r7, [sp]
   1bcf4:	mov	r1, r6
   1bcf8:	mov	r2, r5
   1bcfc:	mov	r3, r4
   1bd00:	bl	1bc74 <g_unichar_xdigit_value@plt+0x7e10>
   1bd04:	add	sp, sp, #12
   1bd08:	pop	{r4, r5, r6, r7, pc}
   1bd0c:	push	{r4, lr}
   1bd10:	subs	r4, r1, #0
   1bd14:	sub	sp, sp, #8
   1bd18:	beq	1bd38 <g_unichar_xdigit_value@plt+0x7ed4>
   1bd1c:	ldr	ip, [sp, #16]
   1bd20:	str	ip, [sp]
   1bd24:	mov	ip, #0
   1bd28:	str	ip, [sp, #4]
   1bd2c:	bl	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1bd30:	add	sp, sp, #8
   1bd34:	pop	{r4, pc}
   1bd38:	ldr	r1, [pc, #36]	; 1bd64 <g_unichar_xdigit_value@plt+0x7f00>
   1bd3c:	mov	r0, r4
   1bd40:	ldr	r2, [pc, #32]	; 1bd68 <g_unichar_xdigit_value@plt+0x7f04>
   1bd44:	add	r1, pc, r1
   1bd48:	add	r1, r1, #2064	; 0x810
   1bd4c:	add	r2, pc, r2
   1bd50:	add	r1, r1, #12
   1bd54:	bl	13450 <g_return_if_fail_warning@plt>
   1bd58:	mov	r0, r4
   1bd5c:	add	sp, sp, #8
   1bd60:	pop	{r4, pc}
   1bd64:	andeq	ip, r1, r8, ror r9
   1bd68:	strdeq	sp, [r1], -ip
   1bd6c:	push	{r4, r5, r6, r7, lr}
   1bd70:	sub	sp, sp, #12
   1bd74:	mov	r5, r1
   1bd78:	mov	r4, r2
   1bd7c:	mov	r6, r0
   1bd80:	mov	r7, r3
   1bd84:	bl	17c60 <g_unichar_xdigit_value@plt+0x3dfc>
   1bd88:	str	r7, [sp]
   1bd8c:	mov	r1, r6
   1bd90:	mov	r2, r5
   1bd94:	mov	r3, r4
   1bd98:	bl	1bd0c <g_unichar_xdigit_value@plt+0x7ea8>
   1bd9c:	add	sp, sp, #12
   1bda0:	pop	{r4, r5, r6, r7, pc}
   1bda4:	push	{r4, r5, r6, lr}
   1bda8:	subs	r5, r1, #0
   1bdac:	ldr	r4, [sp, #16]
   1bdb0:	beq	1bdbc <g_unichar_xdigit_value@plt+0x7f58>
   1bdb4:	pop	{r4, r5, r6, lr}
   1bdb8:	b	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1bdbc:	ldr	r1, [pc, #32]	; 1bde4 <g_unichar_xdigit_value@plt+0x7f80>
   1bdc0:	mov	r0, r5
   1bdc4:	ldr	r2, [pc, #28]	; 1bde8 <g_unichar_xdigit_value@plt+0x7f84>
   1bdc8:	add	r1, pc, r1
   1bdcc:	add	r1, r1, #2096	; 0x830
   1bdd0:	add	r2, pc, r2
   1bdd4:	add	r1, r1, #12
   1bdd8:	bl	13450 <g_return_if_fail_warning@plt>
   1bddc:	mov	r0, r5
   1bde0:	pop	{r4, r5, r6, pc}
   1bde4:	strdeq	ip, [r1], -r4
   1bde8:	andeq	sp, r1, r8, ror r7
   1bdec:	push	{r4, r5, r6, r7, r8, lr}
   1bdf0:	sub	sp, sp, #8
   1bdf4:	mov	r6, r1
   1bdf8:	mov	r5, r2
   1bdfc:	ldr	r4, [sp, #32]
   1be00:	mov	r7, r0
   1be04:	mov	r8, r3
   1be08:	bl	17ce4 <g_unichar_xdigit_value@plt+0x3e80>
   1be0c:	str	r8, [sp]
   1be10:	mov	r1, r7
   1be14:	mov	r2, r6
   1be18:	mov	r3, r5
   1be1c:	str	r4, [sp, #4]
   1be20:	bl	1bda4 <g_unichar_xdigit_value@plt+0x7f40>
   1be24:	add	sp, sp, #8
   1be28:	pop	{r4, r5, r6, r7, r8, pc}
   1be2c:	push	{r4, r5, r6, lr}
   1be30:	subs	r5, r1, #0
   1be34:	ldr	r4, [sp, #16]
   1be38:	ldr	ip, [sp, #20]
   1be3c:	beq	1be58 <g_unichar_xdigit_value@plt+0x7ff4>
   1be40:	cmp	ip, #0
   1be44:	beq	1be7c <g_unichar_xdigit_value@plt+0x8018>
   1be48:	str	r4, [sp, #16]
   1be4c:	str	ip, [sp, #20]
   1be50:	pop	{r4, r5, r6, lr}
   1be54:	b	1bda4 <g_unichar_xdigit_value@plt+0x7f40>
   1be58:	ldr	r1, [pc, #64]	; 1bea0 <g_unichar_xdigit_value@plt+0x803c>
   1be5c:	mov	r0, r5
   1be60:	ldr	r2, [pc, #60]	; 1bea4 <g_unichar_xdigit_value@plt+0x8040>
   1be64:	add	r1, pc, r1
   1be68:	add	r2, pc, r2
   1be6c:	add	r1, r1, #2128	; 0x850
   1be70:	bl	13450 <g_return_if_fail_warning@plt>
   1be74:	mov	r0, #0
   1be78:	pop	{r4, r5, r6, pc}
   1be7c:	ldr	r1, [pc, #36]	; 1bea8 <g_unichar_xdigit_value@plt+0x8044>
   1be80:	mov	r0, ip
   1be84:	ldr	r2, [pc, #32]	; 1beac <g_unichar_xdigit_value@plt+0x8048>
   1be88:	add	r1, pc, r1
   1be8c:	add	r2, pc, r2
   1be90:	add	r1, r1, #2128	; 0x850
   1be94:	bl	13450 <g_return_if_fail_warning@plt>
   1be98:	mov	r0, #0
   1be9c:	pop	{r4, r5, r6, pc}
   1bea0:	andeq	ip, r1, r8, asr r8
   1bea4:	andeq	sp, r1, r0, ror #13
   1bea8:	andeq	ip, r1, r4, lsr r8
   1beac:	andeq	pc, r1, r4, asr #14
   1beb0:	push	{r4, r5, r6, r7, r8, lr}
   1beb4:	sub	sp, sp, #8
   1beb8:	mov	r6, r1
   1bebc:	mov	r5, r2
   1bec0:	ldr	r4, [sp, #32]
   1bec4:	mov	r7, r0
   1bec8:	mov	r8, r3
   1becc:	bl	17e70 <g_unichar_xdigit_value@plt+0x400c>
   1bed0:	str	r8, [sp]
   1bed4:	mov	r1, r7
   1bed8:	mov	r2, r6
   1bedc:	mov	r3, r5
   1bee0:	str	r4, [sp, #4]
   1bee4:	bl	1be2c <g_unichar_xdigit_value@plt+0x7fc8>
   1bee8:	add	sp, sp, #8
   1beec:	pop	{r4, r5, r6, r7, r8, pc}
   1bef0:	push	{r4, r5, r6, lr}
   1bef4:	subs	r5, r1, #0
   1bef8:	ldr	r4, [sp, #16]
   1befc:	ldr	ip, [sp, #20]
   1bf00:	beq	1bf1c <g_unichar_xdigit_value@plt+0x80b8>
   1bf04:	cmp	ip, #0
   1bf08:	beq	1bf40 <g_unichar_xdigit_value@plt+0x80dc>
   1bf0c:	str	r4, [sp, #16]
   1bf10:	str	ip, [sp, #20]
   1bf14:	pop	{r4, r5, r6, lr}
   1bf18:	b	1bda4 <g_unichar_xdigit_value@plt+0x7f40>
   1bf1c:	ldr	r1, [pc, #64]	; 1bf64 <g_unichar_xdigit_value@plt+0x8100>
   1bf20:	mov	r0, r5
   1bf24:	ldr	r2, [pc, #60]	; 1bf68 <g_unichar_xdigit_value@plt+0x8104>
   1bf28:	add	r1, pc, r1
   1bf2c:	add	r2, pc, r2
   1bf30:	add	r1, r1, #2160	; 0x870
   1bf34:	bl	13450 <g_return_if_fail_warning@plt>
   1bf38:	mov	r0, #0
   1bf3c:	pop	{r4, r5, r6, pc}
   1bf40:	ldr	r1, [pc, #36]	; 1bf6c <g_unichar_xdigit_value@plt+0x8108>
   1bf44:	mov	r0, ip
   1bf48:	ldr	r2, [pc, #32]	; 1bf70 <g_unichar_xdigit_value@plt+0x810c>
   1bf4c:	add	r1, pc, r1
   1bf50:	add	r2, pc, r2
   1bf54:	add	r1, r1, #2160	; 0x870
   1bf58:	bl	13450 <g_return_if_fail_warning@plt>
   1bf5c:	mov	r0, #0
   1bf60:	pop	{r4, r5, r6, pc}
   1bf64:	muleq	r1, r4, r7
   1bf68:	andeq	sp, r1, ip, lsl r6
   1bf6c:	andeq	ip, r1, r0, ror r7
   1bf70:	andeq	sp, r1, ip, lsr #12
   1bf74:	push	{r4, r5, r6, r7, r8, lr}
   1bf78:	sub	sp, sp, #8
   1bf7c:	mov	r6, r1
   1bf80:	mov	r5, r2
   1bf84:	ldr	r4, [sp, #32]
   1bf88:	mov	r7, r0
   1bf8c:	mov	r8, r3
   1bf90:	bl	17f78 <g_unichar_xdigit_value@plt+0x4114>
   1bf94:	str	r8, [sp]
   1bf98:	mov	r1, r7
   1bf9c:	mov	r2, r6
   1bfa0:	mov	r3, r5
   1bfa4:	str	r4, [sp, #4]
   1bfa8:	bl	1bef0 <g_unichar_xdigit_value@plt+0x808c>
   1bfac:	add	sp, sp, #8
   1bfb0:	pop	{r4, r5, r6, r7, r8, pc}
   1bfb4:	push	{r4, lr}
   1bfb8:	subs	r4, r1, #0
   1bfbc:	sub	sp, sp, #8
   1bfc0:	beq	1bfe0 <g_unichar_xdigit_value@plt+0x817c>
   1bfc4:	ldr	ip, [sp, #16]
   1bfc8:	str	ip, [sp]
   1bfcc:	mov	ip, #0
   1bfd0:	str	ip, [sp, #4]
   1bfd4:	bl	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1bfd8:	add	sp, sp, #8
   1bfdc:	pop	{r4, pc}
   1bfe0:	ldr	r1, [pc, #36]	; 1c00c <g_unichar_xdigit_value@plt+0x81a8>
   1bfe4:	mov	r0, r4
   1bfe8:	ldr	r2, [pc, #32]	; 1c010 <g_unichar_xdigit_value@plt+0x81ac>
   1bfec:	add	r1, pc, r1
   1bff0:	add	r1, r1, #2192	; 0x890
   1bff4:	add	r2, pc, r2
   1bff8:	add	r1, r1, #4
   1bffc:	bl	13450 <g_return_if_fail_warning@plt>
   1c000:	mov	r0, r4
   1c004:	add	sp, sp, #8
   1c008:	pop	{r4, pc}
   1c00c:	ldrdeq	ip, [r1], -r0
   1c010:	andeq	sp, r1, r4, asr r5
   1c014:	push	{r4, r5, r6, r7, lr}
   1c018:	sub	sp, sp, #12
   1c01c:	mov	r5, r1
   1c020:	mov	r4, r2
   1c024:	mov	r6, r0
   1c028:	mov	r7, r3
   1c02c:	bl	17d68 <g_unichar_xdigit_value@plt+0x3f04>
   1c030:	str	r7, [sp]
   1c034:	mov	r1, r6
   1c038:	mov	r2, r5
   1c03c:	mov	r3, r4
   1c040:	bl	1bfb4 <g_unichar_xdigit_value@plt+0x8150>
   1c044:	add	sp, sp, #12
   1c048:	pop	{r4, r5, r6, r7, pc}
   1c04c:	push	{r4, r5, r6, lr}
   1c050:	subs	r5, r1, #0
   1c054:	ldr	r4, [sp, #16]
   1c058:	ldr	ip, [sp, #20]
   1c05c:	beq	1c078 <g_unichar_xdigit_value@plt+0x8214>
   1c060:	cmp	ip, #0
   1c064:	beq	1c0a0 <g_unichar_xdigit_value@plt+0x823c>
   1c068:	str	r4, [sp, #16]
   1c06c:	str	ip, [sp, #20]
   1c070:	pop	{r4, r5, r6, lr}
   1c074:	b	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1c078:	ldr	r1, [pc, #72]	; 1c0c8 <g_unichar_xdigit_value@plt+0x8264>
   1c07c:	mov	r0, r5
   1c080:	ldr	r2, [pc, #68]	; 1c0cc <g_unichar_xdigit_value@plt+0x8268>
   1c084:	add	r1, pc, r1
   1c088:	add	r1, r1, #2208	; 0x8a0
   1c08c:	add	r2, pc, r2
   1c090:	add	r1, r1, #12
   1c094:	bl	13450 <g_return_if_fail_warning@plt>
   1c098:	mov	r0, #0
   1c09c:	pop	{r4, r5, r6, pc}
   1c0a0:	ldr	r1, [pc, #40]	; 1c0d0 <g_unichar_xdigit_value@plt+0x826c>
   1c0a4:	mov	r0, ip
   1c0a8:	ldr	r2, [pc, #36]	; 1c0d4 <g_unichar_xdigit_value@plt+0x8270>
   1c0ac:	add	r1, pc, r1
   1c0b0:	add	r1, r1, #2208	; 0x8a0
   1c0b4:	add	r2, pc, r2
   1c0b8:	add	r1, r1, #12
   1c0bc:	bl	13450 <g_return_if_fail_warning@plt>
   1c0c0:	mov	r0, #0
   1c0c4:	pop	{r4, r5, r6, pc}
   1c0c8:	andeq	ip, r1, r8, lsr r6
   1c0cc:			; <UNDEFINED> instruction: 0x0001d4bc
   1c0d0:	andeq	ip, r1, r0, lsl r6
   1c0d4:	andeq	sp, r1, r8, ror #26
   1c0d8:	push	{r4, r5, r6, r7, r8, lr}
   1c0dc:	sub	sp, sp, #8
   1c0e0:	mov	r6, r1
   1c0e4:	mov	r5, r2
   1c0e8:	ldr	r4, [sp, #32]
   1c0ec:	mov	r7, r0
   1c0f0:	mov	r8, r3
   1c0f4:	bl	17dec <g_unichar_xdigit_value@plt+0x3f88>
   1c0f8:	str	r8, [sp]
   1c0fc:	mov	r1, r7
   1c100:	mov	r2, r6
   1c104:	mov	r3, r5
   1c108:	str	r4, [sp, #4]
   1c10c:	bl	1c04c <g_unichar_xdigit_value@plt+0x81e8>
   1c110:	add	sp, sp, #8
   1c114:	pop	{r4, r5, r6, r7, r8, pc}
   1c118:	ldr	r3, [pc, #828]	; 1c45c <g_unichar_xdigit_value@plt+0x85f8>
   1c11c:	ldr	r2, [pc, #828]	; 1c460 <g_unichar_xdigit_value@plt+0x85fc>
   1c120:	add	r3, pc, r3
   1c124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c128:	subs	r4, r0, #0
   1c12c:	ldr	r2, [r3, r2]
   1c130:	sub	sp, sp, #36	; 0x24
   1c134:	ldr	r3, [r2]
   1c138:	str	r2, [sp, #8]
   1c13c:	str	r3, [sp, #28]
   1c140:	beq	1c2fc <g_unichar_xdigit_value@plt+0x8498>
   1c144:	ldr	r3, [r4, #8]
   1c148:	ldr	r0, [r3, #12]
   1c14c:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1c150:	ldr	r3, [r0, #28]
   1c154:	mov	r6, r0
   1c158:	cmp	r3, #37	; 0x25
   1c15c:	beq	1c184 <g_unichar_xdigit_value@plt+0x8320>
   1c160:	bl	13b94 <g_object_unref@plt>
   1c164:	mov	r0, #0
   1c168:	ldr	r1, [sp, #8]
   1c16c:	ldr	r2, [sp, #28]
   1c170:	ldr	r3, [r1]
   1c174:	cmp	r2, r3
   1c178:	bne	1c458 <g_unichar_xdigit_value@plt+0x85f4>
   1c17c:	add	sp, sp, #36	; 0x24
   1c180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c184:	bl	133f0 <g_object_ref@plt>
   1c188:	ldr	r3, [r4, #8]
   1c18c:	mov	sl, r0
   1c190:	ldr	r0, [r3, #12]
   1c194:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1c198:	str	r0, [sp, #12]
   1c19c:	mov	r0, r6
   1c1a0:	bl	13b94 <g_object_unref@plt>
   1c1a4:	ldr	r6, [sl, #16]
   1c1a8:	mov	r3, #0
   1c1ac:	str	r3, [sp, #20]
   1c1b0:	cmp	r6, r3
   1c1b4:	beq	1c31c <g_unichar_xdigit_value@plt+0x84b8>
   1c1b8:	mov	r0, r4
   1c1bc:	mov	r1, r6
   1c1c0:	bl	19dd4 <g_unichar_xdigit_value@plt+0x5f70>
   1c1c4:	cmp	r0, #0
   1c1c8:	bne	1c238 <g_unichar_xdigit_value@plt+0x83d4>
   1c1cc:	add	r7, sp, #32
   1c1d0:	add	r9, sp, #24
   1c1d4:	mov	r8, r0
   1c1d8:	str	r0, [r7, #-12]!
   1c1dc:	b	1c218 <g_unichar_xdigit_value@plt+0x83b4>
   1c1e0:	mov	r0, #7
   1c1e4:	bl	13c90 <g_malloc0@plt>
   1c1e8:	mov	fp, r0
   1c1ec:	mov	r0, r5
   1c1f0:	mov	r1, fp
   1c1f4:	bl	13648 <g_unichar_to_utf8@plt>
   1c1f8:	mov	r1, fp
   1c1fc:	mov	r0, r4
   1c200:	bl	19dd4 <g_unichar_xdigit_value@plt+0x5f70>
   1c204:	mov	r5, r0
   1c208:	mov	r0, fp
   1c20c:	bl	1399c <g_free@plt>
   1c210:	cmp	r5, #0
   1c214:	beq	1c33c <g_unichar_xdigit_value@plt+0x84d8>
   1c218:	mov	r0, r6
   1c21c:	mov	r1, r7
   1c220:	mov	r2, r9
   1c224:	str	r8, [sp, #24]
   1c228:	bl	16f58 <g_unichar_xdigit_value@plt+0x30f4>
   1c22c:	ldr	r5, [sp, #24]
   1c230:	cmp	r0, #0
   1c234:	bne	1c1e0 <g_unichar_xdigit_value@plt+0x837c>
   1c238:	ldr	r2, [sp, #12]
   1c23c:	ldr	r3, [r2, #28]
   1c240:	cmp	r3, #32
   1c244:	beq	1c38c <g_unichar_xdigit_value@plt+0x8528>
   1c248:	ldr	r3, [r4, #8]
   1c24c:	ldr	r0, [r3, #12]
   1c250:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c254:	ldr	r1, [sl, #28]
   1c258:	mov	r0, r4
   1c25c:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1c260:	mov	r1, sl
   1c264:	mov	r6, r0
   1c268:	mov	r0, r4
   1c26c:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1c270:	mov	r1, sl
   1c274:	mov	r2, r6
   1c278:	mov	r3, r0
   1c27c:	mov	r0, r4
   1c280:	bl	1c014 <g_unichar_xdigit_value@plt+0x81b0>
   1c284:	mov	r6, r0
   1c288:	mov	r0, r4
   1c28c:	mov	r1, r6
   1c290:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1c294:	cmp	r6, #0
   1c298:	beq	1c2a4 <g_unichar_xdigit_value@plt+0x8440>
   1c29c:	mov	r0, r6
   1c2a0:	bl	13b94 <g_object_unref@plt>
   1c2a4:	ldr	r3, [r4, #8]
   1c2a8:	ldr	r0, [r3, #12]
   1c2ac:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1c2b0:	ldr	r3, [r4, #8]
   1c2b4:	mov	r6, r0
   1c2b8:	ldr	r0, [r3, #12]
   1c2bc:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c2c0:	ldr	r3, [r6, #28]
   1c2c4:	cmp	r3, #12
   1c2c8:	beq	1c2dc <g_unichar_xdigit_value@plt+0x8478>
   1c2cc:	cmp	r3, #38	; 0x26
   1c2d0:	beq	1c2dc <g_unichar_xdigit_value@plt+0x8478>
   1c2d4:	cmp	r3, #37	; 0x25
   1c2d8:	beq	1c3ec <g_unichar_xdigit_value@plt+0x8588>
   1c2dc:	mov	r0, r6
   1c2e0:	bl	13b94 <g_object_unref@plt>
   1c2e4:	mov	r0, sl
   1c2e8:	bl	13b94 <g_object_unref@plt>
   1c2ec:	ldr	r0, [sp, #12]
   1c2f0:	bl	13b94 <g_object_unref@plt>
   1c2f4:	mov	r0, #1
   1c2f8:	b	1c168 <g_unichar_xdigit_value@plt+0x8304>
   1c2fc:	ldr	r1, [pc, #352]	; 1c464 <g_unichar_xdigit_value@plt+0x8600>
   1c300:	ldr	r2, [pc, #352]	; 1c468 <g_unichar_xdigit_value@plt+0x8604>
   1c304:	add	r1, pc, r1
   1c308:	add	r2, pc, r2
   1c30c:	add	r1, r1, #2256	; 0x8d0
   1c310:	bl	13450 <g_return_if_fail_warning@plt>
   1c314:	mov	r0, r4
   1c318:	b	1c168 <g_unichar_xdigit_value@plt+0x8304>
   1c31c:	ldr	r1, [pc, #328]	; 1c46c <g_unichar_xdigit_value@plt+0x8608>
   1c320:	mov	r0, r6
   1c324:	ldr	r2, [pc, #324]	; 1c470 <g_unichar_xdigit_value@plt+0x860c>
   1c328:	add	r1, pc, r1
   1c32c:	add	r1, r1, #2256	; 0x8d0
   1c330:	add	r2, pc, r2
   1c334:	add	r1, r1, #12
   1c338:	bl	13450 <g_return_if_fail_warning@plt>
   1c33c:	ldr	r3, [sp, #12]
   1c340:	ldr	r1, [pc, #300]	; 1c474 <g_unichar_xdigit_value@plt+0x8610>
   1c344:	ldr	r0, [r3, #16]
   1c348:	add	r1, pc, r1
   1c34c:	bl	13e58 <g_strcmp0@plt>
   1c350:	cmp	r0, #0
   1c354:	beq	1c3cc <g_unichar_xdigit_value@plt+0x8568>
   1c358:	ldr	ip, [sl, #24]
   1c35c:	mov	r0, r4
   1c360:	ldr	r2, [sl, #16]
   1c364:	mov	r1, #3
   1c368:	ldr	r3, [sl, #20]
   1c36c:	str	ip, [sp]
   1c370:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1c374:	mov	r0, sl
   1c378:	bl	13b94 <g_object_unref@plt>
   1c37c:	ldr	r0, [sp, #12]
   1c380:	bl	13b94 <g_object_unref@plt>
   1c384:	mov	r0, #0
   1c388:	b	1c168 <g_unichar_xdigit_value@plt+0x8304>
   1c38c:	ldr	r1, [sp, #12]
   1c390:	mov	r0, r4
   1c394:	ldr	r7, [r1, #16]
   1c398:	ldr	r1, [sl, #28]
   1c39c:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1c3a0:	mov	r1, sl
   1c3a4:	mov	r6, r0
   1c3a8:	mov	r0, r4
   1c3ac:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1c3b0:	str	r7, [sp]
   1c3b4:	mov	r2, r6
   1c3b8:	mov	r1, sl
   1c3bc:	mov	r3, r0
   1c3c0:	mov	r0, r4
   1c3c4:	bl	1c0d8 <g_unichar_xdigit_value@plt+0x8274>
   1c3c8:	b	1c284 <g_unichar_xdigit_value@plt+0x8420>
   1c3cc:	ldr	ip, [sl, #24]
   1c3d0:	mov	r0, r4
   1c3d4:	ldr	r2, [sl, #16]
   1c3d8:	mov	r1, #4
   1c3dc:	ldr	r3, [sl, #20]
   1c3e0:	str	ip, [sp]
   1c3e4:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1c3e8:	b	1c374 <g_unichar_xdigit_value@plt+0x8510>
   1c3ec:	mov	r1, #4
   1c3f0:	mov	r0, r4
   1c3f4:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1c3f8:	mov	r1, #4
   1c3fc:	mov	r7, r0
   1c400:	mov	r0, r4
   1c404:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1c408:	mov	r2, r7
   1c40c:	mov	r1, #0
   1c410:	mov	r3, r0
   1c414:	mov	r0, r4
   1c418:	bl	1b8e0 <g_unichar_xdigit_value@plt+0x7a7c>
   1c41c:	mov	r7, r0
   1c420:	mov	r0, r4
   1c424:	mov	r1, r7
   1c428:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1c42c:	cmp	r7, #0
   1c430:	beq	1c43c <g_unichar_xdigit_value@plt+0x85d8>
   1c434:	mov	r0, r7
   1c438:	bl	13b94 <g_object_unref@plt>
   1c43c:	mov	r0, r4
   1c440:	bl	1c118 <g_unichar_xdigit_value@plt+0x82b4>
   1c444:	subs	r4, r0, #0
   1c448:	bne	1c2dc <g_unichar_xdigit_value@plt+0x8478>
   1c44c:	mov	r0, r6
   1c450:	bl	13b94 <g_object_unref@plt>
   1c454:	b	1c374 <g_unichar_xdigit_value@plt+0x8510>
   1c458:	bl	13978 <__stack_chk_fail@plt>
   1c45c:	ldrdeq	r4, [r3], -r8
   1c460:	muleq	r0, r0, r3
   1c464:			; <UNDEFINED> instruction: 0x0001c3b8
   1c468:	ldrdeq	fp, [r1], -ip
   1c46c:	muleq	r1, r4, r3
   1c470:	andeq	pc, r1, r0, lsr #5
   1c474:	andeq	sp, r1, r8, asr #4
   1c478:	push	{r4, r5, r6, lr}
   1c47c:	subs	r5, r1, #0
   1c480:	ldr	r4, [sp, #16]
   1c484:	beq	1c490 <g_unichar_xdigit_value@plt+0x862c>
   1c488:	pop	{r4, r5, r6, lr}
   1c48c:	b	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1c490:	ldr	r1, [pc, #32]	; 1c4b8 <g_unichar_xdigit_value@plt+0x8654>
   1c494:	mov	r0, r5
   1c498:	ldr	r2, [pc, #28]	; 1c4bc <g_unichar_xdigit_value@plt+0x8658>
   1c49c:	add	r1, pc, r1
   1c4a0:	add	r1, r1, #2288	; 0x8f0
   1c4a4:	add	r2, pc, r2
   1c4a8:	add	r1, r1, #4
   1c4ac:	bl	13450 <g_return_if_fail_warning@plt>
   1c4b0:	mov	r0, r5
   1c4b4:	pop	{r4, r5, r6, pc}
   1c4b8:	andeq	ip, r1, r0, lsr #4
   1c4bc:	andeq	sp, r1, r4, lsr #1
   1c4c0:	push	{r4, r5, r6, r7, r8, lr}
   1c4c4:	sub	sp, sp, #8
   1c4c8:	mov	r6, r1
   1c4cc:	mov	r5, r2
   1c4d0:	ldr	r4, [sp, #32]
   1c4d4:	mov	r7, r0
   1c4d8:	mov	r8, r3
   1c4dc:	bl	17ffc <g_unichar_xdigit_value@plt+0x4198>
   1c4e0:	str	r8, [sp]
   1c4e4:	mov	r1, r7
   1c4e8:	mov	r2, r6
   1c4ec:	mov	r3, r5
   1c4f0:	str	r4, [sp, #4]
   1c4f4:	bl	1c478 <g_unichar_xdigit_value@plt+0x8614>
   1c4f8:	add	sp, sp, #8
   1c4fc:	pop	{r4, r5, r6, r7, r8, pc}
   1c500:	push	{r4, lr}
   1c504:	subs	r4, r1, #0
   1c508:	sub	sp, sp, #8
   1c50c:	beq	1c52c <g_unichar_xdigit_value@plt+0x86c8>
   1c510:	ldr	ip, [sp, #16]
   1c514:	str	ip, [sp]
   1c518:	mov	ip, #0
   1c51c:	str	ip, [sp, #4]
   1c520:	bl	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1c524:	add	sp, sp, #8
   1c528:	pop	{r4, pc}
   1c52c:	ldr	r1, [pc, #36]	; 1c558 <g_unichar_xdigit_value@plt+0x86f4>
   1c530:	mov	r0, r4
   1c534:	ldr	r2, [pc, #32]	; 1c55c <g_unichar_xdigit_value@plt+0x86f8>
   1c538:	add	r1, pc, r1
   1c53c:	add	r1, r1, #2304	; 0x900
   1c540:	add	r2, pc, r2
   1c544:	add	r1, r1, #12
   1c548:	bl	13450 <g_return_if_fail_warning@plt>
   1c54c:	mov	r0, r4
   1c550:	add	sp, sp, #8
   1c554:	pop	{r4, pc}
   1c558:	andeq	ip, r1, r4, lsl #3
   1c55c:	andeq	sp, r1, r8
   1c560:	push	{r4, r5, r6, r7, lr}
   1c564:	sub	sp, sp, #12
   1c568:	mov	r5, r1
   1c56c:	mov	r4, r2
   1c570:	mov	r6, r0
   1c574:	mov	r7, r3
   1c578:	bl	18950 <g_unichar_xdigit_value@plt+0x4aec>
   1c57c:	str	r7, [sp]
   1c580:	mov	r1, r6
   1c584:	mov	r2, r5
   1c588:	mov	r3, r4
   1c58c:	bl	1c500 <g_unichar_xdigit_value@plt+0x869c>
   1c590:	add	sp, sp, #12
   1c594:	pop	{r4, r5, r6, r7, pc}
   1c598:	push	{r4, r5, r6, lr}
   1c59c:	subs	r5, r1, #0
   1c5a0:	ldr	r4, [sp, #16]
   1c5a4:	beq	1c5b0 <g_unichar_xdigit_value@plt+0x874c>
   1c5a8:	pop	{r4, r5, r6, lr}
   1c5ac:	b	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1c5b0:	ldr	r1, [pc, #32]	; 1c5d8 <g_unichar_xdigit_value@plt+0x8774>
   1c5b4:	mov	r0, r5
   1c5b8:	ldr	r2, [pc, #28]	; 1c5dc <g_unichar_xdigit_value@plt+0x8778>
   1c5bc:	add	r1, pc, r1
   1c5c0:	add	r1, r1, #2336	; 0x920
   1c5c4:	add	r2, pc, r2
   1c5c8:	add	r1, r1, #12
   1c5cc:	bl	13450 <g_return_if_fail_warning@plt>
   1c5d0:	mov	r0, r5
   1c5d4:	pop	{r4, r5, r6, pc}
   1c5d8:	andeq	ip, r1, r0, lsl #2
   1c5dc:	andeq	ip, r1, r4, lsl #31
   1c5e0:	push	{r4, r5, r6, r7, r8, lr}
   1c5e4:	sub	sp, sp, #8
   1c5e8:	mov	r6, r1
   1c5ec:	mov	r5, r2
   1c5f0:	ldr	r4, [sp, #32]
   1c5f4:	mov	r7, r0
   1c5f8:	mov	r8, r3
   1c5fc:	bl	18c7c <g_unichar_xdigit_value@plt+0x4e18>
   1c600:	str	r8, [sp]
   1c604:	mov	r1, r7
   1c608:	mov	r2, r6
   1c60c:	mov	r3, r5
   1c610:	str	r4, [sp, #4]
   1c614:	bl	1c598 <g_unichar_xdigit_value@plt+0x8734>
   1c618:	add	sp, sp, #8
   1c61c:	pop	{r4, r5, r6, r7, r8, pc}
   1c620:	push	{r4, lr}
   1c624:	subs	r4, r1, #0
   1c628:	sub	sp, sp, #8
   1c62c:	beq	1c64c <g_unichar_xdigit_value@plt+0x87e8>
   1c630:	ldr	ip, [sp, #16]
   1c634:	str	ip, [sp]
   1c638:	mov	ip, #0
   1c63c:	str	ip, [sp, #4]
   1c640:	bl	1af0c <g_unichar_xdigit_value@plt+0x70a8>
   1c644:	add	sp, sp, #8
   1c648:	pop	{r4, pc}
   1c64c:	ldr	r1, [pc, #36]	; 1c678 <g_unichar_xdigit_value@plt+0x8814>
   1c650:	mov	r0, r4
   1c654:	ldr	r2, [pc, #32]	; 1c67c <g_unichar_xdigit_value@plt+0x8818>
   1c658:	add	r1, pc, r1
   1c65c:	add	r1, r1, #2368	; 0x940
   1c660:	add	r2, pc, r2
   1c664:	add	r1, r1, #8
   1c668:	bl	13450 <g_return_if_fail_warning@plt>
   1c66c:	mov	r0, r4
   1c670:	add	sp, sp, #8
   1c674:	pop	{r4, pc}
   1c678:	andeq	ip, r1, r4, rrx
   1c67c:	andeq	ip, r1, r8, ror #29
   1c680:	push	{r4, r5, r6, r7, lr}
   1c684:	sub	sp, sp, #12
   1c688:	mov	r5, r1
   1c68c:	mov	r4, r2
   1c690:	mov	r6, r0
   1c694:	mov	r7, r3
   1c698:	bl	18d00 <g_unichar_xdigit_value@plt+0x4e9c>
   1c69c:	str	r7, [sp]
   1c6a0:	mov	r1, r6
   1c6a4:	mov	r2, r5
   1c6a8:	mov	r3, r4
   1c6ac:	bl	1c620 <g_unichar_xdigit_value@plt+0x87bc>
   1c6b0:	add	sp, sp, #12
   1c6b4:	pop	{r4, r5, r6, r7, pc}
   1c6b8:	push	{r4, r5, r6, r7, r8, lr}
   1c6bc:	subs	r4, r0, #0
   1c6c0:	sub	sp, sp, #8
   1c6c4:	beq	1c778 <g_unichar_xdigit_value@plt+0x8914>
   1c6c8:	bl	1d6b0 <g_unichar_xdigit_value@plt+0x984c>
   1c6cc:	cmp	r0, #0
   1c6d0:	bne	1c6e0 <g_unichar_xdigit_value@plt+0x887c>
   1c6d4:	mov	r0, #0
   1c6d8:	add	sp, sp, #8
   1c6dc:	pop	{r4, r5, r6, r7, r8, pc}
   1c6e0:	mov	r0, r4
   1c6e4:	bl	1ddd4 <g_unichar_xdigit_value@plt+0x9f70>
   1c6e8:	cmp	r0, #0
   1c6ec:	beq	1c6d4 <g_unichar_xdigit_value@plt+0x8870>
   1c6f0:	ldr	r3, [r4, #8]
   1c6f4:	ldr	r0, [r3, #12]
   1c6f8:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1c6fc:	ldr	r3, [r0, #28]
   1c700:	mov	r5, r0
   1c704:	cmp	r3, #30
   1c708:	beq	1c834 <g_unichar_xdigit_value@plt+0x89d0>
   1c70c:	cmp	r3, #36	; 0x24
   1c710:	bne	1c7a0 <g_unichar_xdigit_value@plt+0x893c>
   1c714:	bl	133f0 <g_object_ref@plt>
   1c718:	ldr	r3, [r4, #8]
   1c71c:	mov	r6, r0
   1c720:	ldr	r0, [r3, #12]
   1c724:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1c728:	mov	r7, r0
   1c72c:	mov	r0, r5
   1c730:	bl	13b94 <g_object_unref@plt>
   1c734:	ldr	r3, [r7, #28]
   1c738:	cmp	r3, #30
   1c73c:	beq	1c7bc <g_unichar_xdigit_value@plt+0x8958>
   1c740:	ldr	r3, [r4, #8]
   1c744:	ldr	r0, [r3, #12]
   1c748:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c74c:	ldr	r3, [r4, #8]
   1c750:	ldr	r0, [r3, #12]
   1c754:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c758:	cmp	r6, #0
   1c75c:	beq	1c768 <g_unichar_xdigit_value@plt+0x8904>
   1c760:	mov	r0, r6
   1c764:	bl	13b94 <g_object_unref@plt>
   1c768:	mov	r0, r7
   1c76c:	bl	13b94 <g_object_unref@plt>
   1c770:	mov	r0, #1
   1c774:	b	1c6d8 <g_unichar_xdigit_value@plt+0x8874>
   1c778:	ldr	r1, [pc, #796]	; 1ca9c <g_unichar_xdigit_value@plt+0x8c38>
   1c77c:	ldr	r2, [pc, #796]	; 1caa0 <g_unichar_xdigit_value@plt+0x8c3c>
   1c780:	add	r1, pc, r1
   1c784:	add	r1, r1, #2400	; 0x960
   1c788:	add	r2, pc, r2
   1c78c:	add	r1, r1, #8
   1c790:	bl	13450 <g_return_if_fail_warning@plt>
   1c794:	mov	r0, r4
   1c798:	add	sp, sp, #8
   1c79c:	pop	{r4, r5, r6, r7, r8, pc}
   1c7a0:	ldr	r3, [r4, #8]
   1c7a4:	ldr	r0, [r3, #12]
   1c7a8:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c7ac:	mov	r0, r5
   1c7b0:	bl	13b94 <g_object_unref@plt>
   1c7b4:	mov	r0, #1
   1c7b8:	b	1c6d8 <g_unichar_xdigit_value@plt+0x8874>
   1c7bc:	mov	r0, r7
   1c7c0:	bl	133f0 <g_object_ref@plt>
   1c7c4:	ldr	r3, [r4, #8]
   1c7c8:	mov	r8, r0
   1c7cc:	ldr	r0, [r3, #12]
   1c7d0:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1c7d4:	mov	r5, r0
   1c7d8:	mov	r0, r7
   1c7dc:	bl	13b94 <g_object_unref@plt>
   1c7e0:	ldr	r3, [r5, #28]
   1c7e4:	cmp	r3, #36	; 0x24
   1c7e8:	beq	1c8e4 <g_unichar_xdigit_value@plt+0x8a80>
   1c7ec:	ldr	r3, [r4, #8]
   1c7f0:	ldr	r0, [r3, #12]
   1c7f4:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c7f8:	ldr	r3, [r4, #8]
   1c7fc:	ldr	r0, [r3, #12]
   1c800:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c804:	ldr	r3, [r4, #8]
   1c808:	ldr	r0, [r3, #12]
   1c80c:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c810:	cmp	r8, #0
   1c814:	beq	1c820 <g_unichar_xdigit_value@plt+0x89bc>
   1c818:	mov	r0, r8
   1c81c:	bl	13b94 <g_object_unref@plt>
   1c820:	cmp	r6, #0
   1c824:	beq	1c7ac <g_unichar_xdigit_value@plt+0x8948>
   1c828:	mov	r0, r6
   1c82c:	bl	13b94 <g_object_unref@plt>
   1c830:	b	1c7ac <g_unichar_xdigit_value@plt+0x8948>
   1c834:	bl	133f0 <g_object_ref@plt>
   1c838:	ldr	r3, [r4, #8]
   1c83c:	mov	r6, r0
   1c840:	ldr	r0, [r3, #12]
   1c844:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1c848:	mov	r7, r0
   1c84c:	mov	r0, r5
   1c850:	bl	13b94 <g_object_unref@plt>
   1c854:	ldr	r3, [r7, #28]
   1c858:	cmp	r3, #36	; 0x24
   1c85c:	bne	1c740 <g_unichar_xdigit_value@plt+0x88dc>
   1c860:	mov	r0, r7
   1c864:	bl	133f0 <g_object_ref@plt>
   1c868:	ldr	r3, [r4, #8]
   1c86c:	mov	r5, r0
   1c870:	ldr	r0, [r3, #12]
   1c874:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1c878:	mov	r8, r0
   1c87c:	mov	r0, r7
   1c880:	bl	13b94 <g_object_unref@plt>
   1c884:	ldr	r3, [r8, #28]
   1c888:	cmp	r3, #12
   1c88c:	beq	1c9e8 <g_unichar_xdigit_value@plt+0x8b84>
   1c890:	ldr	r3, [r4, #8]
   1c894:	ldr	r0, [r3, #12]
   1c898:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c89c:	ldr	r3, [r4, #8]
   1c8a0:	ldr	r0, [r3, #12]
   1c8a4:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c8a8:	ldr	r3, [r4, #8]
   1c8ac:	ldr	r0, [r3, #12]
   1c8b0:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1c8b4:	cmp	r5, #0
   1c8b8:	beq	1c8c4 <g_unichar_xdigit_value@plt+0x8a60>
   1c8bc:	mov	r0, r5
   1c8c0:	bl	13b94 <g_object_unref@plt>
   1c8c4:	cmp	r6, #0
   1c8c8:	beq	1c8d4 <g_unichar_xdigit_value@plt+0x8a70>
   1c8cc:	mov	r0, r6
   1c8d0:	bl	13b94 <g_object_unref@plt>
   1c8d4:	mov	r0, r8
   1c8d8:	bl	13b94 <g_object_unref@plt>
   1c8dc:	mov	r0, #1
   1c8e0:	b	1c6d8 <g_unichar_xdigit_value@plt+0x8874>
   1c8e4:	mov	r1, #1
   1c8e8:	mov	r0, r4
   1c8ec:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1c8f0:	mov	r1, r6
   1c8f4:	mov	r7, r0
   1c8f8:	mov	r0, r4
   1c8fc:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1c900:	mov	r2, r7
   1c904:	mov	r1, #0
   1c908:	str	r1, [sp]
   1c90c:	mov	r1, r6
   1c910:	mov	r3, r0
   1c914:	mov	r0, r4
   1c918:	bl	1bdec <g_unichar_xdigit_value@plt+0x7f88>
   1c91c:	mov	r7, r0
   1c920:	mov	r0, r4
   1c924:	mov	r1, r7
   1c928:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1c92c:	cmp	r7, #0
   1c930:	beq	1c93c <g_unichar_xdigit_value@plt+0x8ad8>
   1c934:	mov	r0, r7
   1c938:	bl	13b94 <g_object_unref@plt>
   1c93c:	mov	r1, #0
   1c940:	mov	r0, r4
   1c944:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1c948:	mov	r1, r8
   1c94c:	mov	r7, r0
   1c950:	mov	r0, r4
   1c954:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1c958:	mov	r2, r7
   1c95c:	mov	r1, r8
   1c960:	mov	r3, r0
   1c964:	mov	r0, r4
   1c968:	bl	1c680 <g_unichar_xdigit_value@plt+0x881c>
   1c96c:	mov	r7, r0
   1c970:	mov	r0, r4
   1c974:	mov	r1, r7
   1c978:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1c97c:	cmp	r7, #0
   1c980:	beq	1c98c <g_unichar_xdigit_value@plt+0x8b28>
   1c984:	mov	r0, r7
   1c988:	bl	13b94 <g_object_unref@plt>
   1c98c:	mov	r1, #1
   1c990:	mov	r0, r4
   1c994:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1c998:	mov	r1, r5
   1c99c:	mov	r7, r0
   1c9a0:	mov	r0, r4
   1c9a4:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1c9a8:	mov	r2, r7
   1c9ac:	mov	r1, #0
   1c9b0:	str	r1, [sp]
   1c9b4:	mov	r1, r5
   1c9b8:	mov	r3, r0
   1c9bc:	mov	r0, r4
   1c9c0:	bl	1bdec <g_unichar_xdigit_value@plt+0x7f88>
   1c9c4:	mov	r7, r0
   1c9c8:	mov	r0, r4
   1c9cc:	mov	r1, r7
   1c9d0:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1c9d4:	cmp	r7, #0
   1c9d8:	beq	1c810 <g_unichar_xdigit_value@plt+0x89ac>
   1c9dc:	mov	r0, r7
   1c9e0:	bl	13b94 <g_object_unref@plt>
   1c9e4:	b	1c810 <g_unichar_xdigit_value@plt+0x89ac>
   1c9e8:	mov	r1, #0
   1c9ec:	mov	r0, r4
   1c9f0:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1c9f4:	mov	r1, r6
   1c9f8:	mov	r7, r0
   1c9fc:	mov	r0, r4
   1ca00:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1ca04:	mov	r2, r7
   1ca08:	mov	r1, #0
   1ca0c:	str	r1, [sp]
   1ca10:	mov	r1, r6
   1ca14:	mov	r3, r0
   1ca18:	mov	r0, r4
   1ca1c:	bl	1c5e0 <g_unichar_xdigit_value@plt+0x877c>
   1ca20:	mov	r7, r0
   1ca24:	mov	r0, r4
   1ca28:	mov	r1, r7
   1ca2c:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1ca30:	cmp	r7, #0
   1ca34:	beq	1ca40 <g_unichar_xdigit_value@plt+0x8bdc>
   1ca38:	mov	r0, r7
   1ca3c:	bl	13b94 <g_object_unref@plt>
   1ca40:	mov	r1, #1
   1ca44:	mov	r0, r4
   1ca48:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1ca4c:	mov	r1, r5
   1ca50:	mov	r7, r0
   1ca54:	mov	r0, r4
   1ca58:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1ca5c:	mov	r2, r7
   1ca60:	mov	r1, #0
   1ca64:	str	r1, [sp]
   1ca68:	mov	r1, r5
   1ca6c:	mov	r3, r0
   1ca70:	mov	r0, r4
   1ca74:	bl	1bdec <g_unichar_xdigit_value@plt+0x7f88>
   1ca78:	mov	r7, r0
   1ca7c:	mov	r0, r4
   1ca80:	mov	r1, r7
   1ca84:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1ca88:	cmp	r7, #0
   1ca8c:	beq	1c8b4 <g_unichar_xdigit_value@plt+0x8a50>
   1ca90:	mov	r0, r7
   1ca94:	bl	13b94 <g_object_unref@plt>
   1ca98:	b	1c8b4 <g_unichar_xdigit_value@plt+0x8a50>
   1ca9c:	andeq	fp, r1, ip, lsr pc
   1caa0:	andeq	fp, r1, ip, asr r9
   1caa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1caa8:	subs	r4, r0, #0
   1caac:	sub	sp, sp, #52	; 0x34
   1cab0:	mov	r9, r3
   1cab4:	str	r1, [sp, #12]
   1cab8:	str	r2, [sp, #16]
   1cabc:	beq	1cfe0 <g_unichar_xdigit_value@plt+0x917c>
   1cac0:	ldr	r3, [r4, #8]
   1cac4:	ldr	r2, [r4, #12]
   1cac8:	ldr	r0, [r3, #12]
   1cacc:	str	r2, [sp, #24]
   1cad0:	bl	36ba4 <g_unichar_xdigit_value@plt+0x22d40>
   1cad4:	ldr	r3, [r4, #8]
   1cad8:	ldr	r0, [r3, #12]
   1cadc:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1cae0:	ldr	r3, [r0, #28]
   1cae4:	mov	r6, r0
   1cae8:	cmp	r3, #37	; 0x25
   1caec:	beq	1caf8 <g_unichar_xdigit_value@plt+0x8c94>
   1caf0:	cmp	r3, #35	; 0x23
   1caf4:	bne	1cc50 <g_unichar_xdigit_value@plt+0x8dec>
   1caf8:	mov	r0, r6
   1cafc:	bl	133f0 <g_object_ref@plt>
   1cb00:	ldr	r3, [r4, #8]
   1cb04:	str	r0, [sp, #20]
   1cb08:	ldr	r0, [r3, #12]
   1cb0c:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1cb10:	mov	sl, r0
   1cb14:	mov	r0, r6
   1cb18:	bl	13b94 <g_object_unref@plt>
   1cb1c:	ldr	r3, [sl, #28]
   1cb20:	cmp	r3, #38	; 0x26
   1cb24:	beq	1ce98 <g_unichar_xdigit_value@plt+0x9034>
   1cb28:	ldr	r3, [r4, #8]
   1cb2c:	ldr	r0, [r3, #12]
   1cb30:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1cb34:	ldr	r3, [r4, #8]
   1cb38:	ldr	r0, [r3, #12]
   1cb3c:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1cb40:	ldr	r3, [sl, #28]
   1cb44:	cmp	r3, #39	; 0x27
   1cb48:	beq	1cd10 <g_unichar_xdigit_value@plt+0x8eac>
   1cb4c:	mov	r0, r4
   1cb50:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1cb54:	cmp	r0, #0
   1cb58:	beq	1cc2c <g_unichar_xdigit_value@plt+0x8dc8>
   1cb5c:	ldr	r2, [sp, #20]
   1cb60:	cmp	r2, #0
   1cb64:	beq	1cb70 <g_unichar_xdigit_value@plt+0x8d0c>
   1cb68:	mov	r0, r2
   1cb6c:	bl	13b94 <g_object_unref@plt>
   1cb70:	mov	r0, sl
   1cb74:	mov	r5, #1
   1cb78:	bl	13b94 <g_object_unref@plt>
   1cb7c:	ldr	r3, [r4, #8]
   1cb80:	ldr	r0, [r3, #12]
   1cb84:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1cb88:	ldr	r3, [r0, #28]
   1cb8c:	mov	r6, r0
   1cb90:	cmp	r3, #38	; 0x26
   1cb94:	beq	1d00c <g_unichar_xdigit_value@plt+0x91a8>
   1cb98:	cmp	r3, #12
   1cb9c:	beq	1cc7c <g_unichar_xdigit_value@plt+0x8e18>
   1cba0:	ldr	r3, [r4, #8]
   1cba4:	ldr	r7, [r3, #20]
   1cba8:	cmp	r7, #0
   1cbac:	beq	1cfb8 <g_unichar_xdigit_value@plt+0x9154>
   1cbb0:	ldr	r0, [r3, #24]
   1cbb4:	bl	136f0 <g_strdup@plt>
   1cbb8:	mov	r5, r0
   1cbbc:	mov	r0, #0
   1cbc0:	bl	1399c <g_free@plt>
   1cbc4:	ldr	r3, [r4, #8]
   1cbc8:	mov	r0, r6
   1cbcc:	ldr	r4, [r3, #32]
   1cbd0:	ldr	r6, [r3, #28]
   1cbd4:	bl	13b94 <g_object_unref@plt>
   1cbd8:	ldr	r3, [sp, #12]
   1cbdc:	ldr	r2, [sp, #16]
   1cbe0:	cmp	r3, #0
   1cbe4:	ldrne	r1, [sp, #24]
   1cbe8:	strne	r1, [r3]
   1cbec:	cmp	r2, #0
   1cbf0:	strne	r7, [r2]
   1cbf4:	cmp	r9, #0
   1cbf8:	beq	1d0d4 <g_unichar_xdigit_value@plt+0x9270>
   1cbfc:	str	r5, [r9]
   1cc00:	ldr	r3, [sp, #88]	; 0x58
   1cc04:	ldr	r1, [sp, #92]	; 0x5c
   1cc08:	cmp	r3, #0
   1cc0c:	strne	r6, [r3]
   1cc10:	cmp	r1, #0
   1cc14:	beq	1cd00 <g_unichar_xdigit_value@plt+0x8e9c>
   1cc18:	mov	r5, #0
   1cc1c:	str	r4, [r1]
   1cc20:	mov	r0, r5
   1cc24:	add	sp, sp, #52	; 0x34
   1cc28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc2c:	ldr	r1, [sp, #20]
   1cc30:	cmp	r1, #0
   1cc34:	beq	1cc40 <g_unichar_xdigit_value@plt+0x8ddc>
   1cc38:	mov	r0, r1
   1cc3c:	bl	13b94 <g_object_unref@plt>
   1cc40:	mov	r0, sl
   1cc44:	mov	r5, #0
   1cc48:	bl	13b94 <g_object_unref@plt>
   1cc4c:	b	1cb7c <g_unichar_xdigit_value@plt+0x8d18>
   1cc50:	ldr	r3, [r4, #8]
   1cc54:	ldr	r0, [r3, #12]
   1cc58:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1cc5c:	mov	r0, r4
   1cc60:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1cc64:	subs	r5, r0, #0
   1cc68:	mov	r0, r6
   1cc6c:	movne	r5, #1
   1cc70:	bl	13b94 <g_object_unref@plt>
   1cc74:	b	1cb7c <g_unichar_xdigit_value@plt+0x8d18>
   1cc78:	mov	r6, r7
   1cc7c:	cmp	r5, #0
   1cc80:	bne	1cf44 <g_unichar_xdigit_value@plt+0x90e0>
   1cc84:	ldr	r3, [r4, #8]
   1cc88:	ldr	r7, [r3, #20]
   1cc8c:	cmp	r7, #0
   1cc90:	beq	1d0b0 <g_unichar_xdigit_value@plt+0x924c>
   1cc94:	ldr	r0, [r3, #24]
   1cc98:	bl	136f0 <g_strdup@plt>
   1cc9c:	mov	r8, r0
   1cca0:	mov	r0, #0
   1cca4:	bl	1399c <g_free@plt>
   1cca8:	ldr	r3, [r4, #8]
   1ccac:	mov	r0, r6
   1ccb0:	ldr	r4, [r3, #32]
   1ccb4:	ldr	r6, [r3, #28]
   1ccb8:	bl	13b94 <g_object_unref@plt>
   1ccbc:	ldr	r2, [sp, #12]
   1ccc0:	ldr	r1, [sp, #16]
   1ccc4:	cmp	r2, #0
   1ccc8:	ldrne	r3, [sp, #24]
   1cccc:	strne	r3, [r2]
   1ccd0:	cmp	r1, #0
   1ccd4:	strne	r7, [r1]
   1ccd8:	cmp	r9, #0
   1ccdc:	beq	1d120 <g_unichar_xdigit_value@plt+0x92bc>
   1cce0:	str	r8, [r9]
   1cce4:	ldr	r2, [sp, #88]	; 0x58
   1cce8:	ldr	r3, [sp, #92]	; 0x5c
   1ccec:	cmp	r2, #0
   1ccf0:	strne	r6, [r2]
   1ccf4:	cmp	r3, #0
   1ccf8:	strne	r4, [r3]
   1ccfc:	bne	1cc20 <g_unichar_xdigit_value@plt+0x8dbc>
   1cd00:	mov	r5, #0
   1cd04:	mov	r0, r5
   1cd08:	add	sp, sp, #52	; 0x34
   1cd0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd10:	ldr	r3, [r4, #8]
   1cd14:	ldr	r0, [r3, #12]
   1cd18:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1cd1c:	mov	r6, r0
   1cd20:	ldr	r0, [r0, #16]
   1cd24:	bl	136f0 <g_strdup@plt>
   1cd28:	ldr	r3, [r4, #8]
   1cd2c:	str	r0, [sp, #32]
   1cd30:	ldr	r0, [r3, #12]
   1cd34:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1cd38:	cmp	r0, #0
   1cd3c:	beq	1cd44 <g_unichar_xdigit_value@plt+0x8ee0>
   1cd40:	bl	13b94 <g_object_unref@plt>
   1cd44:	ldr	r3, [r4, #8]
   1cd48:	ldr	r0, [r3, #12]
   1cd4c:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1cd50:	mov	r5, r0
   1cd54:	mov	r0, r6
   1cd58:	bl	13b94 <g_object_unref@plt>
   1cd5c:	ldr	r0, [pc, #1744]	; 1d434 <g_unichar_xdigit_value@plt+0x95d0>
   1cd60:	add	r0, pc, r0
   1cd64:	bl	136f0 <g_strdup@plt>
   1cd68:	ldr	r3, [r5, #28]
   1cd6c:	cmp	r3, #40	; 0x28
   1cd70:	mov	r6, r0
   1cd74:	beq	1d108 <g_unichar_xdigit_value@plt+0x92a4>
   1cd78:	cmp	r3, #12
   1cd7c:	mov	fp, #3
   1cd80:	beq	1d428 <g_unichar_xdigit_value@plt+0x95c4>
   1cd84:	mov	r3, #0
   1cd88:	str	sl, [sp, #36]	; 0x24
   1cd8c:	str	r3, [sp, #28]
   1cd90:	mov	r7, r3
   1cd94:	mov	sl, fp
   1cd98:	str	r9, [sp, #40]	; 0x28
   1cd9c:	b	1cda8 <g_unichar_xdigit_value@plt+0x8f44>
   1cda0:	cmp	r3, #12
   1cda4:	beq	1d3c0 <g_unichar_xdigit_value@plt+0x955c>
   1cda8:	mov	r0, r5
   1cdac:	add	sl, sl, #1
   1cdb0:	bl	133f0 <g_object_ref@plt>
   1cdb4:	mov	r1, r0
   1cdb8:	mov	r0, r7
   1cdbc:	bl	13594 <g_list_append@plt>
   1cdc0:	ldr	r1, [r5, #16]
   1cdc4:	mov	r2, #0
   1cdc8:	mov	r7, r0
   1cdcc:	mov	r0, r6
   1cdd0:	bl	13af8 <g_strconcat@plt>
   1cdd4:	mov	r8, r0
   1cdd8:	mov	r0, r6
   1cddc:	bl	1399c <g_free@plt>
   1cde0:	ldr	r3, [r4, #8]
   1cde4:	mov	r6, r8
   1cde8:	ldr	r0, [r3, #12]
   1cdec:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1cdf0:	mov	fp, r0
   1cdf4:	mov	r0, r5
   1cdf8:	bl	13b94 <g_object_unref@plt>
   1cdfc:	ldr	r3, [fp, #28]
   1ce00:	mov	r5, fp
   1ce04:	cmp	r3, #40	; 0x28
   1ce08:	bne	1cda0 <g_unichar_xdigit_value@plt+0x8f3c>
   1ce0c:	str	r7, [sp, #28]
   1ce10:	mov	r7, fp
   1ce14:	ldr	r9, [sp, #40]	; 0x28
   1ce18:	mov	fp, sl
   1ce1c:	ldr	sl, [sp, #36]	; 0x24
   1ce20:	str	r8, [sp, #44]	; 0x2c
   1ce24:	ldr	r2, [r4, #8]
   1ce28:	ldr	r0, [r2, #12]
   1ce2c:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1ce30:	ldr	r2, [r0, #28]
   1ce34:	mov	r8, r0
   1ce38:	cmp	r2, #38	; 0x26
   1ce3c:	beq	1d12c <g_unichar_xdigit_value@plt+0x92c8>
   1ce40:	ldr	r3, [r4, #8]
   1ce44:	sub	fp, fp, #1
   1ce48:	ldr	r0, [r3, #12]
   1ce4c:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1ce50:	cmn	fp, #1
   1ce54:	bne	1ce40 <g_unichar_xdigit_value@plt+0x8fdc>
   1ce58:	mov	r0, r8
   1ce5c:	bl	13b94 <g_object_unref@plt>
   1ce60:	ldr	r3, [sp, #28]
   1ce64:	cmp	r3, #0
   1ce68:	beq	1ce7c <g_unichar_xdigit_value@plt+0x9018>
   1ce6c:	ldr	r1, [pc, #1476]	; 1d438 <g_unichar_xdigit_value@plt+0x95d4>
   1ce70:	mov	r0, r3
   1ce74:	add	r1, pc, r1
   1ce78:	bl	1396c <g_list_free_full@plt>
   1ce7c:	ldr	r0, [sp, #44]	; 0x2c
   1ce80:	bl	1399c <g_free@plt>
   1ce84:	ldr	r0, [sp, #32]
   1ce88:	bl	1399c <g_free@plt>
   1ce8c:	mov	r0, r7
   1ce90:	bl	13b94 <g_object_unref@plt>
   1ce94:	b	1cb4c <g_unichar_xdigit_value@plt+0x8ce8>
   1ce98:	mov	r1, #12
   1ce9c:	mov	r0, r4
   1cea0:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1cea4:	ldr	r1, [sp, #20]
   1cea8:	mov	r5, r0
   1ceac:	mov	r0, r4
   1ceb0:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1ceb4:	mov	r2, r5
   1ceb8:	mov	r1, #0
   1cebc:	str	r1, [sp]
   1cec0:	ldr	r1, [sp, #20]
   1cec4:	mov	r3, r0
   1cec8:	mov	r0, r4
   1cecc:	bl	1bdec <g_unichar_xdigit_value@plt+0x7f88>
   1ced0:	mov	r5, r0
   1ced4:	mov	r0, r4
   1ced8:	mov	r1, r5
   1cedc:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1cee0:	cmp	r5, #0
   1cee4:	beq	1cef0 <g_unichar_xdigit_value@plt+0x908c>
   1cee8:	mov	r0, r5
   1ceec:	bl	13b94 <g_object_unref@plt>
   1cef0:	mov	r1, sl
   1cef4:	mov	r0, r4
   1cef8:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1cefc:	mov	r1, sl
   1cf00:	mov	r2, #0
   1cf04:	mov	r3, r0
   1cf08:	mov	r0, r4
   1cf0c:	bl	1b0dc <g_unichar_xdigit_value@plt+0x7278>
   1cf10:	mov	r5, r0
   1cf14:	mov	r0, r4
   1cf18:	mov	r1, r5
   1cf1c:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1cf20:	cmp	r5, #0
   1cf24:	beq	1cb4c <g_unichar_xdigit_value@plt+0x8ce8>
   1cf28:	mov	r0, r5
   1cf2c:	bl	13b94 <g_object_unref@plt>
   1cf30:	mov	r0, r4
   1cf34:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1cf38:	cmp	r0, #0
   1cf3c:	bne	1cb5c <g_unichar_xdigit_value@plt+0x8cf8>
   1cf40:	b	1cc2c <g_unichar_xdigit_value@plt+0x8dc8>
   1cf44:	mov	r0, #0
   1cf48:	bl	1399c <g_free@plt>
   1cf4c:	mov	r0, r6
   1cf50:	bl	13b94 <g_object_unref@plt>
   1cf54:	ldr	r1, [sp, #12]
   1cf58:	ldr	r3, [sp, #16]
   1cf5c:	cmp	r1, #0
   1cf60:	ldrne	r2, [sp, #24]
   1cf64:	strne	r2, [r1]
   1cf68:	cmp	r3, #0
   1cf6c:	ldrne	r1, [sp, #16]
   1cf70:	movne	r3, #0
   1cf74:	strne	r3, [r1]
   1cf78:	cmp	r9, #0
   1cf7c:	beq	1d3a8 <g_unichar_xdigit_value@plt+0x9544>
   1cf80:	mov	r3, #0
   1cf84:	str	r3, [r9]
   1cf88:	ldr	r2, [sp, #88]	; 0x58
   1cf8c:	cmp	r2, #0
   1cf90:	movne	r3, #0
   1cf94:	strne	r3, [r2]
   1cf98:	ldr	r3, [sp, #92]	; 0x5c
   1cf9c:	cmp	r3, #0
   1cfa0:	ldrne	r1, [sp, #92]	; 0x5c
   1cfa4:	movne	r3, #0
   1cfa8:	movne	r5, #1
   1cfac:	moveq	r5, #1
   1cfb0:	strne	r3, [r1]
   1cfb4:	b	1cc20 <g_unichar_xdigit_value@plt+0x8dbc>
   1cfb8:	ldr	ip, [r6, #24]
   1cfbc:	mov	r1, #1
   1cfc0:	ldr	r2, [r0, #16]
   1cfc4:	mov	r0, r4
   1cfc8:	ldr	r3, [r6, #20]
   1cfcc:	str	ip, [sp]
   1cfd0:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1cfd4:	ldr	r3, [r4, #8]
   1cfd8:	ldr	r7, [r3, #20]
   1cfdc:	b	1cbb0 <g_unichar_xdigit_value@plt+0x8d4c>
   1cfe0:	ldr	r1, [pc, #1108]	; 1d43c <g_unichar_xdigit_value@plt+0x95d8>
   1cfe4:	mov	r5, r4
   1cfe8:	ldr	r2, [pc, #1104]	; 1d440 <g_unichar_xdigit_value@plt+0x95dc>
   1cfec:	add	r1, pc, r1
   1cff0:	add	r1, r1, #2416	; 0x970
   1cff4:	add	r2, pc, r2
   1cff8:	add	r1, r1, #12
   1cffc:	bl	13450 <g_return_if_fail_warning@plt>
   1d000:	mov	r0, r5
   1d004:	add	sp, sp, #52	; 0x34
   1d008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d00c:	ldr	r3, [r4, #8]
   1d010:	ldr	r0, [r3, #12]
   1d014:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1d018:	mov	r7, r0
   1d01c:	mov	r0, r6
   1d020:	bl	13b94 <g_object_unref@plt>
   1d024:	ldr	r3, [r7, #28]
   1d028:	cmp	r3, #12
   1d02c:	beq	1cc78 <g_unichar_xdigit_value@plt+0x8e14>
   1d030:	ldr	r3, [r4, #8]
   1d034:	ldr	r6, [r3, #20]
   1d038:	cmp	r6, #0
   1d03c:	beq	1d0e0 <g_unichar_xdigit_value@plt+0x927c>
   1d040:	ldr	r0, [r3, #24]
   1d044:	bl	136f0 <g_strdup@plt>
   1d048:	mov	r5, r0
   1d04c:	mov	r0, #0
   1d050:	bl	1399c <g_free@plt>
   1d054:	ldr	r3, [r4, #8]
   1d058:	mov	r0, r7
   1d05c:	ldr	r4, [r3, #32]
   1d060:	ldr	r7, [r3, #28]
   1d064:	bl	13b94 <g_object_unref@plt>
   1d068:	ldr	r3, [sp, #12]
   1d06c:	ldr	r2, [sp, #16]
   1d070:	cmp	r3, #0
   1d074:	ldrne	r1, [sp, #24]
   1d078:	strne	r1, [r3]
   1d07c:	cmp	r2, #0
   1d080:	strne	r6, [r2]
   1d084:	cmp	r9, #0
   1d088:	beq	1d39c <g_unichar_xdigit_value@plt+0x9538>
   1d08c:	str	r5, [r9]
   1d090:	ldr	r3, [sp, #88]	; 0x58
   1d094:	ldr	r1, [sp, #92]	; 0x5c
   1d098:	cmp	r3, #0
   1d09c:	strne	r7, [r3]
   1d0a0:	cmp	r1, #0
   1d0a4:	ldrne	r2, [sp, #92]	; 0x5c
   1d0a8:	strne	r4, [r2]
   1d0ac:	b	1cd00 <g_unichar_xdigit_value@plt+0x8e9c>
   1d0b0:	mov	r3, r5
   1d0b4:	str	r5, [sp]
   1d0b8:	mov	r0, r4
   1d0bc:	mov	r1, #1
   1d0c0:	mov	r2, r5
   1d0c4:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1d0c8:	ldr	r3, [r4, #8]
   1d0cc:	ldr	r7, [r3, #20]
   1d0d0:	b	1cc94 <g_unichar_xdigit_value@plt+0x8e30>
   1d0d4:	mov	r0, r5
   1d0d8:	bl	1399c <g_free@plt>
   1d0dc:	b	1cc00 <g_unichar_xdigit_value@plt+0x8d9c>
   1d0e0:	ldr	ip, [r7, #24]
   1d0e4:	mov	r0, r4
   1d0e8:	ldr	r3, [r7, #20]
   1d0ec:	mov	r1, #1
   1d0f0:	ldr	r2, [r7, #16]
   1d0f4:	str	ip, [sp]
   1d0f8:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1d0fc:	ldr	r3, [r4, #8]
   1d100:	ldr	r6, [r3, #20]
   1d104:	b	1d040 <g_unichar_xdigit_value@plt+0x91dc>
   1d108:	mov	r3, #0
   1d10c:	str	r0, [sp, #44]	; 0x2c
   1d110:	mov	r7, r5
   1d114:	mov	fp, #3
   1d118:	str	r3, [sp, #28]
   1d11c:	b	1ce24 <g_unichar_xdigit_value@plt+0x8fc0>
   1d120:	mov	r0, r8
   1d124:	bl	1399c <g_free@plt>
   1d128:	b	1cce4 <g_unichar_xdigit_value@plt+0x8e80>
   1d12c:	ldr	r0, [pc, #784]	; 1d444 <g_unichar_xdigit_value@plt+0x95e0>
   1d130:	add	r0, pc, r0
   1d134:	bl	136f0 <g_strdup@plt>
   1d138:	ldr	r3, [r4, #8]
   1d13c:	mov	r6, r0
   1d140:	ldr	r0, [r3, #12]
   1d144:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1d148:	mov	r5, r0
   1d14c:	mov	r0, r7
   1d150:	bl	13b94 <g_object_unref@plt>
   1d154:	ldr	r3, [r5, #28]
   1d158:	cmp	r3, #12
   1d15c:	beq	1d3b4 <g_unichar_xdigit_value@plt+0x9550>
   1d160:	ldr	r1, [r5, #16]
   1d164:	mov	r2, #0
   1d168:	mov	r0, r6
   1d16c:	bl	13af8 <g_strconcat@plt>
   1d170:	mov	r7, r0
   1d174:	mov	r0, r6
   1d178:	bl	1399c <g_free@plt>
   1d17c:	ldr	r3, [r4, #8]
   1d180:	mov	r6, r7
   1d184:	ldr	r0, [r3, #12]
   1d188:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1d18c:	mov	fp, r0
   1d190:	mov	r0, r5
   1d194:	bl	13b94 <g_object_unref@plt>
   1d198:	ldr	r3, [fp, #28]
   1d19c:	mov	r5, fp
   1d1a0:	cmp	r3, #12
   1d1a4:	bne	1d160 <g_unichar_xdigit_value@plt+0x92fc>
   1d1a8:	mov	r1, #12
   1d1ac:	mov	r0, r4
   1d1b0:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1d1b4:	mov	r1, #12
   1d1b8:	mov	r5, r0
   1d1bc:	mov	r0, r4
   1d1c0:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1d1c4:	ldr	r1, [sp, #32]
   1d1c8:	mov	r2, r5
   1d1cc:	str	r1, [sp]
   1d1d0:	mov	r1, #0
   1d1d4:	mov	r3, r0
   1d1d8:	mov	r0, r4
   1d1dc:	bl	1beb0 <g_unichar_xdigit_value@plt+0x804c>
   1d1e0:	mov	r5, r0
   1d1e4:	mov	r0, r4
   1d1e8:	mov	r1, r5
   1d1ec:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1d1f0:	cmp	r5, #0
   1d1f4:	beq	1d200 <g_unichar_xdigit_value@plt+0x939c>
   1d1f8:	mov	r0, r5
   1d1fc:	bl	13b94 <g_object_unref@plt>
   1d200:	mov	r1, #7
   1d204:	mov	r0, r4
   1d208:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1d20c:	mov	r1, #7
   1d210:	mov	r5, r0
   1d214:	mov	r0, r4
   1d218:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1d21c:	mov	r1, #0
   1d220:	mov	r2, r5
   1d224:	str	r1, [sp]
   1d228:	mov	r3, r0
   1d22c:	mov	r0, r4
   1d230:	bl	1c4c0 <g_unichar_xdigit_value@plt+0x865c>
   1d234:	mov	r5, r0
   1d238:	mov	r0, r4
   1d23c:	mov	r1, r5
   1d240:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1d244:	cmp	r5, #0
   1d248:	beq	1d254 <g_unichar_xdigit_value@plt+0x93f0>
   1d24c:	mov	r0, r5
   1d250:	bl	13b94 <g_object_unref@plt>
   1d254:	mov	r1, #12
   1d258:	mov	r0, r4
   1d25c:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1d260:	mov	r1, #12
   1d264:	mov	r5, r0
   1d268:	mov	r0, r4
   1d26c:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1d270:	ldr	r1, [sp, #44]	; 0x2c
   1d274:	mov	r2, r5
   1d278:	str	r1, [sp]
   1d27c:	ldr	r1, [sp, #28]
   1d280:	mov	r3, r0
   1d284:	mov	r0, r4
   1d288:	bl	1aecc <g_unichar_xdigit_value@plt+0x7068>
   1d28c:	mov	r5, r0
   1d290:	mov	r0, r4
   1d294:	mov	r1, r5
   1d298:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1d29c:	cmp	r5, #0
   1d2a0:	beq	1d2ac <g_unichar_xdigit_value@plt+0x9448>
   1d2a4:	mov	r0, r5
   1d2a8:	bl	13b94 <g_object_unref@plt>
   1d2ac:	mov	r1, r8
   1d2b0:	mov	r0, r4
   1d2b4:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1d2b8:	mov	r1, r8
   1d2bc:	mov	r2, #0
   1d2c0:	mov	r3, r0
   1d2c4:	mov	r0, r4
   1d2c8:	bl	1bd6c <g_unichar_xdigit_value@plt+0x7f08>
   1d2cc:	mov	r5, r0
   1d2d0:	mov	r0, r4
   1d2d4:	mov	r1, r5
   1d2d8:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1d2dc:	cmp	r5, #0
   1d2e0:	beq	1d2ec <g_unichar_xdigit_value@plt+0x9488>
   1d2e4:	mov	r0, r5
   1d2e8:	bl	13b94 <g_object_unref@plt>
   1d2ec:	mov	r1, #12
   1d2f0:	mov	r0, r4
   1d2f4:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1d2f8:	mov	r1, #12
   1d2fc:	mov	r5, r0
   1d300:	mov	r0, r4
   1d304:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1d308:	mov	r2, r5
   1d30c:	mov	r1, #0
   1d310:	str	r7, [sp]
   1d314:	mov	r3, r0
   1d318:	mov	r0, r4
   1d31c:	bl	1bf74 <g_unichar_xdigit_value@plt+0x8110>
   1d320:	mov	r5, r0
   1d324:	mov	r0, r4
   1d328:	mov	r1, r5
   1d32c:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1d330:	cmp	r5, #0
   1d334:	beq	1d340 <g_unichar_xdigit_value@plt+0x94dc>
   1d338:	mov	r0, r5
   1d33c:	bl	13b94 <g_object_unref@plt>
   1d340:	mov	r0, r7
   1d344:	bl	1399c <g_free@plt>
   1d348:	mov	r0, r8
   1d34c:	bl	13b94 <g_object_unref@plt>
   1d350:	ldr	r2, [sp, #28]
   1d354:	cmp	r2, #0
   1d358:	beq	1d36c <g_unichar_xdigit_value@plt+0x9508>
   1d35c:	ldr	r1, [pc, #228]	; 1d448 <g_unichar_xdigit_value@plt+0x95e4>
   1d360:	mov	r0, r2
   1d364:	add	r1, pc, r1
   1d368:	bl	1396c <g_list_free_full@plt>
   1d36c:	ldr	r0, [sp, #44]	; 0x2c
   1d370:	bl	1399c <g_free@plt>
   1d374:	ldr	r0, [sp, #32]
   1d378:	bl	1399c <g_free@plt>
   1d37c:	mov	r0, fp
   1d380:	bl	13b94 <g_object_unref@plt>
   1d384:	ldr	r3, [sp, #20]
   1d388:	cmp	r3, #0
   1d38c:	beq	1cb70 <g_unichar_xdigit_value@plt+0x8d0c>
   1d390:	mov	r0, r3
   1d394:	bl	13b94 <g_object_unref@plt>
   1d398:	b	1cb70 <g_unichar_xdigit_value@plt+0x8d0c>
   1d39c:	mov	r0, r5
   1d3a0:	bl	1399c <g_free@plt>
   1d3a4:	b	1d090 <g_unichar_xdigit_value@plt+0x922c>
   1d3a8:	mov	r0, r9
   1d3ac:	bl	1399c <g_free@plt>
   1d3b0:	b	1cf88 <g_unichar_xdigit_value@plt+0x9124>
   1d3b4:	mov	r7, r6
   1d3b8:	mov	fp, r5
   1d3bc:	b	1d1a8 <g_unichar_xdigit_value@plt+0x9344>
   1d3c0:	str	r7, [sp, #28]
   1d3c4:	mov	r7, fp
   1d3c8:	ldr	r9, [sp, #40]	; 0x28
   1d3cc:	mov	fp, sl
   1d3d0:	ldr	sl, [sp, #36]	; 0x24
   1d3d4:	mov	r6, r8
   1d3d8:	mov	r5, r7
   1d3dc:	sub	r7, fp, #1
   1d3e0:	ldr	r3, [r4, #8]
   1d3e4:	sub	r7, r7, #1
   1d3e8:	ldr	r0, [r3, #12]
   1d3ec:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1d3f0:	cmn	r7, #1
   1d3f4:	bne	1d3e0 <g_unichar_xdigit_value@plt+0x957c>
   1d3f8:	ldr	r2, [sp, #28]
   1d3fc:	cmp	r2, #0
   1d400:	beq	1d414 <g_unichar_xdigit_value@plt+0x95b0>
   1d404:	ldr	r1, [pc, #64]	; 1d44c <g_unichar_xdigit_value@plt+0x95e8>
   1d408:	mov	r0, r2
   1d40c:	add	r1, pc, r1
   1d410:	bl	1396c <g_list_free_full@plt>
   1d414:	mov	r0, r6
   1d418:	bl	1399c <g_free@plt>
   1d41c:	ldr	r0, [sp, #32]
   1d420:	bl	1399c <g_free@plt>
   1d424:	b	1cf28 <g_unichar_xdigit_value@plt+0x90c4>
   1d428:	mov	r1, #0
   1d42c:	str	r1, [sp, #28]
   1d430:	b	1d3dc <g_unichar_xdigit_value@plt+0x9578>
   1d434:	andeq	ip, r1, r4, ror #7
   1d438:			; <UNDEFINED> instruction: 0xffff8d8c
   1d43c:	ldrdeq	fp, [r1], -r0
   1d440:	strdeq	fp, [r1], -r0
   1d444:	andeq	ip, r1, r4, lsl r0
   1d448:			; <UNDEFINED> instruction: 0xffff889c
   1d44c:			; <UNDEFINED> instruction: 0xffff87f4
   1d450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d454:	mov	fp, r3
   1d458:	ldr	r4, [pc, #576]	; 1d6a0 <g_unichar_xdigit_value@plt+0x983c>
   1d45c:	sub	sp, sp, #60	; 0x3c
   1d460:	ldr	lr, [pc, #572]	; 1d6a4 <g_unichar_xdigit_value@plt+0x9840>
   1d464:	subs	r9, r0, #0
   1d468:	add	r4, pc, r4
   1d46c:	mov	sl, #0
   1d470:	mov	r5, r1
   1d474:	mov	r6, r2
   1d478:	ldr	lr, [r4, lr]
   1d47c:	mov	r3, r4
   1d480:	ldr	r7, [sp, #96]	; 0x60
   1d484:	ldr	r8, [sp, #100]	; 0x64
   1d488:	ldr	r3, [lr]
   1d48c:	str	lr, [sp, #24]
   1d490:	str	sl, [sp, #32]
   1d494:	str	sl, [sp, #36]	; 0x24
   1d498:	str	sl, [sp, #40]	; 0x28
   1d49c:	str	r3, [sp, #52]	; 0x34
   1d4a0:	str	sl, [sp, #44]	; 0x2c
   1d4a4:	str	sl, [sp, #48]	; 0x30
   1d4a8:	beq	1d5dc <g_unichar_xdigit_value@plt+0x9778>
   1d4ac:	add	r1, sp, #32
   1d4b0:	add	r3, sp, #44	; 0x2c
   1d4b4:	add	r2, sp, #36	; 0x24
   1d4b8:	str	r3, [sp]
   1d4bc:	add	r3, sp, #48	; 0x30
   1d4c0:	str	r3, [sp, #4]
   1d4c4:	add	r3, sp, #40	; 0x28
   1d4c8:	bl	1caa4 <g_unichar_xdigit_value@plt+0x8c40>
   1d4cc:	ldr	r2, [sp, #36]	; 0x24
   1d4d0:	str	r2, [sp, #20]
   1d4d4:	mov	r4, r0
   1d4d8:	mov	r0, sl
   1d4dc:	ldr	sl, [sp, #32]
   1d4e0:	bl	1399c <g_free@plt>
   1d4e4:	cmp	r4, #0
   1d4e8:	ldr	r3, [sp, #40]	; 0x28
   1d4ec:	ldr	r1, [sp, #44]	; 0x2c
   1d4f0:	ldr	r2, [sp, #48]	; 0x30
   1d4f4:	bne	1d548 <g_unichar_xdigit_value@plt+0x96e4>
   1d4f8:	cmp	r5, #0
   1d4fc:	strne	sl, [r5]
   1d500:	cmp	r6, #0
   1d504:	ldrne	r0, [sp, #20]
   1d508:	strne	r0, [r6]
   1d50c:	cmp	fp, #0
   1d510:	beq	1d614 <g_unichar_xdigit_value@plt+0x97b0>
   1d514:	str	r3, [fp]
   1d518:	cmp	r7, #0
   1d51c:	strne	r1, [r7]
   1d520:	cmp	r8, #0
   1d524:	strne	r2, [r8]
   1d528:	mov	r0, #0
   1d52c:	ldr	r1, [sp, #24]
   1d530:	ldr	r2, [sp, #52]	; 0x34
   1d534:	ldr	r3, [r1]
   1d538:	cmp	r2, r3
   1d53c:	bne	1d69c <g_unichar_xdigit_value@plt+0x9838>
   1d540:	add	sp, sp, #60	; 0x3c
   1d544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d548:	ldr	r2, [r9, #8]
   1d54c:	ldr	r0, [r2, #4]
   1d550:	str	r3, [sp, #16]
   1d554:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   1d558:	ldr	r2, [r9, #8]
   1d55c:	ldr	r3, [sp, #16]
   1d560:	subs	r4, r0, #0
   1d564:	beq	1d630 <g_unichar_xdigit_value@plt+0x97cc>
   1d568:	ldr	r1, [r2, #36]	; 0x24
   1d56c:	ldr	r0, [r2, #24]
   1d570:	ldr	r2, [r2, #20]
   1d574:	str	r1, [sp, #20]
   1d578:	str	r3, [sp, #16]
   1d57c:	str	r2, [sp, #28]
   1d580:	bl	136f0 <g_strdup@plt>
   1d584:	ldr	r3, [sp, #16]
   1d588:	mov	sl, r0
   1d58c:	mov	r0, r3
   1d590:	bl	1399c <g_free@plt>
   1d594:	cmp	r5, #0
   1d598:	ldr	r3, [r9, #8]
   1d59c:	ldrne	r2, [sp, #20]
   1d5a0:	ldr	r9, [r3, #28]
   1d5a4:	ldr	r3, [r3, #32]
   1d5a8:	strne	r2, [r5]
   1d5ac:	cmp	r6, #0
   1d5b0:	ldrne	r1, [sp, #28]
   1d5b4:	strne	r1, [r6]
   1d5b8:	cmp	fp, #0
   1d5bc:	beq	1d600 <g_unichar_xdigit_value@plt+0x979c>
   1d5c0:	str	sl, [fp]
   1d5c4:	cmp	r7, #0
   1d5c8:	mov	r0, r4
   1d5cc:	strne	r9, [r7]
   1d5d0:	cmp	r8, #0
   1d5d4:	strne	r3, [r8]
   1d5d8:	b	1d52c <g_unichar_xdigit_value@plt+0x96c8>
   1d5dc:	ldr	r1, [pc, #196]	; 1d6a8 <g_unichar_xdigit_value@plt+0x9844>
   1d5e0:	ldr	r2, [pc, #196]	; 1d6ac <g_unichar_xdigit_value@plt+0x9848>
   1d5e4:	add	r1, pc, r1
   1d5e8:	add	r1, r1, #2448	; 0x990
   1d5ec:	add	r2, pc, r2
   1d5f0:	add	r1, r1, #8
   1d5f4:	bl	13450 <g_return_if_fail_warning@plt>
   1d5f8:	mov	r0, r9
   1d5fc:	b	1d52c <g_unichar_xdigit_value@plt+0x96c8>
   1d600:	mov	r0, sl
   1d604:	str	r3, [sp, #16]
   1d608:	bl	1399c <g_free@plt>
   1d60c:	ldr	r3, [sp, #16]
   1d610:	b	1d5c4 <g_unichar_xdigit_value@plt+0x9760>
   1d614:	mov	r0, r3
   1d618:	str	r1, [sp, #16]
   1d61c:	str	r2, [sp, #12]
   1d620:	bl	1399c <g_free@plt>
   1d624:	ldr	r2, [sp, #12]
   1d628:	ldr	r1, [sp, #16]
   1d62c:	b	1d518 <g_unichar_xdigit_value@plt+0x96b4>
   1d630:	ldr	r0, [r2, #20]
   1d634:	cmp	r0, #0
   1d638:	bne	1d568 <g_unichar_xdigit_value@plt+0x9704>
   1d63c:	mov	r0, r3
   1d640:	bl	1399c <g_free@plt>
   1d644:	ldr	r3, [r9, #8]
   1d648:	cmp	r5, #0
   1d64c:	ldr	r4, [r3, #28]
   1d650:	ldr	r9, [r3, #32]
   1d654:	strne	sl, [r5]
   1d658:	cmp	r6, #0
   1d65c:	movne	r3, #1
   1d660:	strne	r3, [r6]
   1d664:	cmp	fp, #0
   1d668:	beq	1d690 <g_unichar_xdigit_value@plt+0x982c>
   1d66c:	mov	r3, #0
   1d670:	str	r3, [fp]
   1d674:	cmp	r7, #0
   1d678:	strne	r4, [r7]
   1d67c:	cmp	r8, #0
   1d680:	beq	1d528 <g_unichar_xdigit_value@plt+0x96c4>
   1d684:	str	r9, [r8]
   1d688:	mov	r0, #0
   1d68c:	b	1d52c <g_unichar_xdigit_value@plt+0x96c8>
   1d690:	mov	r0, fp
   1d694:	bl	1399c <g_free@plt>
   1d698:	b	1d674 <g_unichar_xdigit_value@plt+0x9810>
   1d69c:	bl	13978 <__stack_chk_fail@plt>
   1d6a0:	muleq	r3, r0, fp
   1d6a4:	muleq	r0, r0, r3
   1d6a8:	ldrdeq	fp, [r1], -r8
   1d6ac:	strdeq	sl, [r1], -r8
   1d6b0:	push	{r4, r5, r6, lr}
   1d6b4:	subs	r4, r0, #0
   1d6b8:	beq	1d81c <g_unichar_xdigit_value@plt+0x99b8>
   1d6bc:	ldr	r3, [r4, #8]
   1d6c0:	ldr	r0, [r3, #12]
   1d6c4:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1d6c8:	ldr	r1, [r0, #28]
   1d6cc:	mov	r5, r0
   1d6d0:	cmp	r1, #12
   1d6d4:	beq	1d75c <g_unichar_xdigit_value@plt+0x98f8>
   1d6d8:	cmp	r1, #38	; 0x26
   1d6dc:	beq	1d75c <g_unichar_xdigit_value@plt+0x98f8>
   1d6e0:	cmp	r1, #39	; 0x27
   1d6e4:	beq	1d840 <g_unichar_xdigit_value@plt+0x99dc>
   1d6e8:	cmp	r1, #41	; 0x29
   1d6ec:	beq	1d930 <g_unichar_xdigit_value@plt+0x9acc>
   1d6f0:	cmp	r1, #43	; 0x2b
   1d6f4:	beq	1d778 <g_unichar_xdigit_value@plt+0x9914>
   1d6f8:	cmp	r1, #45	; 0x2d
   1d6fc:	beq	1d9c8 <g_unichar_xdigit_value@plt+0x9b64>
   1d700:	cmp	r1, #26
   1d704:	beq	1da7c <g_unichar_xdigit_value@plt+0x9c18>
   1d708:	cmp	r1, #31
   1d70c:	beq	1dba4 <g_unichar_xdigit_value@plt+0x9d40>
   1d710:	cmp	r1, #19
   1d714:	beq	1dc9c <g_unichar_xdigit_value@plt+0x9e38>
   1d718:	cmp	r1, #21
   1d71c:	beq	1dd34 <g_unichar_xdigit_value@plt+0x9ed0>
   1d720:	cmp	r1, #15
   1d724:	beq	1db40 <g_unichar_xdigit_value@plt+0x9cdc>
   1d728:	ldr	r3, [r4, #8]
   1d72c:	cmp	r1, #14
   1d730:	ldr	r0, [r3, #12]
   1d734:	beq	1dac8 <g_unichar_xdigit_value@plt+0x9c64>
   1d738:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1d73c:	mov	r0, r4
   1d740:	bl	1e3d8 <g_unichar_xdigit_value@plt+0xa574>
   1d744:	subs	r4, r0, #0
   1d748:	mov	r0, r5
   1d74c:	beq	1d76c <g_unichar_xdigit_value@plt+0x9908>
   1d750:	bl	13b94 <g_object_unref@plt>
   1d754:	mov	r0, #1
   1d758:	pop	{r4, r5, r6, pc}
   1d75c:	ldr	r3, [r4, #8]
   1d760:	ldr	r0, [r3, #12]
   1d764:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1d768:	mov	r0, r5
   1d76c:	bl	13b94 <g_object_unref@plt>
   1d770:	mov	r0, #0
   1d774:	pop	{r4, r5, r6, pc}
   1d778:	ldr	r3, [r4, #8]
   1d77c:	mov	r1, #2
   1d780:	mov	r0, r4
   1d784:	ldr	r2, [r3, #16]
   1d788:	add	r2, r2, #1
   1d78c:	str	r2, [r3, #16]
   1d790:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1d794:	mov	r1, r5
   1d798:	mov	r6, r0
   1d79c:	mov	r0, r4
   1d7a0:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1d7a4:	mov	r2, r6
   1d7a8:	mov	r1, r5
   1d7ac:	mov	r3, r0
   1d7b0:	mov	r0, r4
   1d7b4:	bl	1b33c <g_unichar_xdigit_value@plt+0x74d8>
   1d7b8:	mov	r6, r0
   1d7bc:	mov	r0, r4
   1d7c0:	mov	r1, r6
   1d7c4:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1d7c8:	cmp	r6, #0
   1d7cc:	beq	1d7d8 <g_unichar_xdigit_value@plt+0x9974>
   1d7d0:	mov	r0, r6
   1d7d4:	bl	13b94 <g_object_unref@plt>
   1d7d8:	mov	r0, r4
   1d7dc:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1d7e0:	subs	r6, r0, #0
   1d7e4:	beq	1d768 <g_unichar_xdigit_value@plt+0x9904>
   1d7e8:	ldr	r3, [r4, #8]
   1d7ec:	ldr	r0, [r3, #12]
   1d7f0:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1d7f4:	mov	r6, r0
   1d7f8:	mov	r0, r5
   1d7fc:	bl	13b94 <g_object_unref@plt>
   1d800:	ldr	r3, [r6, #28]
   1d804:	cmp	r3, #44	; 0x2c
   1d808:	beq	1da5c <g_unichar_xdigit_value@plt+0x9bf8>
   1d80c:	mov	r0, r6
   1d810:	bl	13b94 <g_object_unref@plt>
   1d814:	mov	r0, #0
   1d818:	pop	{r4, r5, r6, pc}
   1d81c:	ldr	r1, [pc, #1448]	; 1ddcc <g_unichar_xdigit_value@plt+0x9f68>
   1d820:	ldr	r2, [pc, #1448]	; 1ddd0 <g_unichar_xdigit_value@plt+0x9f6c>
   1d824:	add	r1, pc, r1
   1d828:	add	r1, r1, #2464	; 0x9a0
   1d82c:	add	r2, pc, r2
   1d830:	add	r1, r1, #8
   1d834:	bl	13450 <g_return_if_fail_warning@plt>
   1d838:	mov	r0, r4
   1d83c:	pop	{r4, r5, r6, pc}
   1d840:	ldr	r3, [r4, #8]
   1d844:	mov	r0, r4
   1d848:	ldr	r2, [r3, #16]
   1d84c:	add	r2, r2, #1
   1d850:	str	r2, [r3, #16]
   1d854:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1d858:	subs	r6, r0, #0
   1d85c:	beq	1d768 <g_unichar_xdigit_value@plt+0x9904>
   1d860:	ldr	r3, [r4, #8]
   1d864:	ldr	r0, [r3, #12]
   1d868:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1d86c:	mov	r6, r0
   1d870:	mov	r0, r5
   1d874:	bl	13b94 <g_object_unref@plt>
   1d878:	ldr	r3, [r6, #28]
   1d87c:	cmp	r3, #40	; 0x28
   1d880:	bne	1d80c <g_unichar_xdigit_value@plt+0x99a8>
   1d884:	ldr	r3, [r4, #8]
   1d888:	ldr	r2, [r3, #16]
   1d88c:	ldr	r0, [r3, #12]
   1d890:	sub	r2, r2, #1
   1d894:	str	r2, [r3, #16]
   1d898:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1d89c:	mov	r5, r0
   1d8a0:	mov	r0, r6
   1d8a4:	bl	13b94 <g_object_unref@plt>
   1d8a8:	ldr	r3, [r4, #8]
   1d8ac:	ldr	r0, [r3, #12]
   1d8b0:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1d8b4:	ldr	r3, [r5, #28]
   1d8b8:	cmp	r3, #31
   1d8bc:	bne	1d920 <g_unichar_xdigit_value@plt+0x9abc>
   1d8c0:	mov	r1, #4
   1d8c4:	mov	r0, r4
   1d8c8:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1d8cc:	mov	r1, #4
   1d8d0:	mov	r6, r0
   1d8d4:	mov	r0, r4
   1d8d8:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1d8dc:	mov	r2, r6
   1d8e0:	mov	r1, #0
   1d8e4:	mov	r3, r0
   1d8e8:	mov	r0, r4
   1d8ec:	bl	1b8e0 <g_unichar_xdigit_value@plt+0x7a7c>
   1d8f0:	mov	r6, r0
   1d8f4:	mov	r0, r4
   1d8f8:	mov	r1, r6
   1d8fc:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1d900:	cmp	r6, #0
   1d904:	beq	1d910 <g_unichar_xdigit_value@plt+0x9aac>
   1d908:	mov	r0, r6
   1d90c:	bl	13b94 <g_object_unref@plt>
   1d910:	mov	r0, r4
   1d914:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1d918:	subs	r4, r0, #0
   1d91c:	beq	1d768 <g_unichar_xdigit_value@plt+0x9904>
   1d920:	mov	r0, r5
   1d924:	bl	13b94 <g_object_unref@plt>
   1d928:	mov	r0, #1
   1d92c:	pop	{r4, r5, r6, pc}
   1d930:	ldr	r3, [r4, #8]
   1d934:	mov	r1, #2
   1d938:	mov	r0, r4
   1d93c:	ldr	r2, [r3, #16]
   1d940:	add	r2, r2, #1
   1d944:	str	r2, [r3, #16]
   1d948:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1d94c:	mov	r1, r5
   1d950:	mov	r6, r0
   1d954:	mov	r0, r4
   1d958:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1d95c:	mov	r2, r6
   1d960:	mov	r1, r5
   1d964:	mov	r3, r0
   1d968:	mov	r0, r4
   1d96c:	bl	1b3b8 <g_unichar_xdigit_value@plt+0x7554>
   1d970:	mov	r6, r0
   1d974:	mov	r0, r4
   1d978:	mov	r1, r6
   1d97c:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1d980:	cmp	r6, #0
   1d984:	beq	1d990 <g_unichar_xdigit_value@plt+0x9b2c>
   1d988:	mov	r0, r6
   1d98c:	bl	13b94 <g_object_unref@plt>
   1d990:	mov	r0, r4
   1d994:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1d998:	subs	r6, r0, #0
   1d99c:	beq	1d768 <g_unichar_xdigit_value@plt+0x9904>
   1d9a0:	ldr	r3, [r4, #8]
   1d9a4:	ldr	r0, [r3, #12]
   1d9a8:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1d9ac:	mov	r6, r0
   1d9b0:	mov	r0, r5
   1d9b4:	bl	13b94 <g_object_unref@plt>
   1d9b8:	ldr	r3, [r6, #28]
   1d9bc:	cmp	r3, #42	; 0x2a
   1d9c0:	bne	1d80c <g_unichar_xdigit_value@plt+0x99a8>
   1d9c4:	b	1da5c <g_unichar_xdigit_value@plt+0x9bf8>
   1d9c8:	ldr	r3, [r4, #8]
   1d9cc:	mov	r1, #2
   1d9d0:	mov	r0, r4
   1d9d4:	ldr	r2, [r3, #16]
   1d9d8:	add	r2, r2, #1
   1d9dc:	str	r2, [r3, #16]
   1d9e0:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1d9e4:	mov	r1, r5
   1d9e8:	mov	r6, r0
   1d9ec:	mov	r0, r4
   1d9f0:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1d9f4:	mov	r2, r6
   1d9f8:	mov	r1, r5
   1d9fc:	mov	r3, r0
   1da00:	mov	r0, r4
   1da04:	bl	1b1d0 <g_unichar_xdigit_value@plt+0x736c>
   1da08:	mov	r6, r0
   1da0c:	mov	r0, r4
   1da10:	mov	r1, r6
   1da14:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1da18:	cmp	r6, #0
   1da1c:	beq	1da28 <g_unichar_xdigit_value@plt+0x9bc4>
   1da20:	mov	r0, r6
   1da24:	bl	13b94 <g_object_unref@plt>
   1da28:	mov	r0, r4
   1da2c:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1da30:	subs	r6, r0, #0
   1da34:	beq	1d768 <g_unichar_xdigit_value@plt+0x9904>
   1da38:	ldr	r3, [r4, #8]
   1da3c:	ldr	r0, [r3, #12]
   1da40:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1da44:	mov	r6, r0
   1da48:	mov	r0, r5
   1da4c:	bl	13b94 <g_object_unref@plt>
   1da50:	ldr	r3, [r6, #28]
   1da54:	cmp	r3, #45	; 0x2d
   1da58:	bne	1d80c <g_unichar_xdigit_value@plt+0x99a8>
   1da5c:	ldr	r3, [r4, #8]
   1da60:	mov	r0, r6
   1da64:	ldr	r2, [r3, #16]
   1da68:	sub	r2, r2, #1
   1da6c:	str	r2, [r3, #16]
   1da70:	bl	13b94 <g_object_unref@plt>
   1da74:	mov	r0, #1
   1da78:	pop	{r4, r5, r6, pc}
   1da7c:	mov	r1, #6
   1da80:	mov	r0, r4
   1da84:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1da88:	mov	r1, r5
   1da8c:	mov	r6, r0
   1da90:	mov	r0, r4
   1da94:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1da98:	mov	r2, r6
   1da9c:	mov	r1, r5
   1daa0:	mov	r3, r0
   1daa4:	mov	r0, r4
   1daa8:	bl	1b710 <g_unichar_xdigit_value@plt+0x78ac>
   1daac:	mov	r6, r0
   1dab0:	mov	r0, r4
   1dab4:	mov	r1, r6
   1dab8:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1dabc:	cmp	r6, #0
   1dac0:	bne	1d908 <g_unichar_xdigit_value@plt+0x9aa4>
   1dac4:	b	1d910 <g_unichar_xdigit_value@plt+0x9aac>
   1dac8:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1dacc:	mov	r6, r0
   1dad0:	mov	r0, r5
   1dad4:	bl	13b94 <g_object_unref@plt>
   1dad8:	ldr	r1, [r6, #28]
   1dadc:	cmp	r1, #31
   1dae0:	bne	1d80c <g_unichar_xdigit_value@plt+0x99a8>
   1dae4:	mov	r0, r4
   1dae8:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1daec:	mov	r1, r6
   1daf0:	mov	r5, r0
   1daf4:	mov	r0, r4
   1daf8:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1dafc:	mov	r2, r5
   1db00:	mov	r1, r6
   1db04:	mov	r3, r0
   1db08:	mov	r0, r4
   1db0c:	bl	1bcd4 <g_unichar_xdigit_value@plt+0x7e70>
   1db10:	mov	r5, r0
   1db14:	mov	r0, r4
   1db18:	mov	r1, r5
   1db1c:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1db20:	cmp	r5, #0
   1db24:	beq	1db30 <g_unichar_xdigit_value@plt+0x9ccc>
   1db28:	mov	r0, r5
   1db2c:	bl	13b94 <g_object_unref@plt>
   1db30:	mov	r0, r6
   1db34:	bl	13b94 <g_object_unref@plt>
   1db38:	mov	r0, #1
   1db3c:	pop	{r4, r5, r6, pc}
   1db40:	mov	r1, #10
   1db44:	mov	r0, r4
   1db48:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1db4c:	mov	r1, #10
   1db50:	mov	r6, r0
   1db54:	mov	r0, r4
   1db58:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1db5c:	mov	r2, r6
   1db60:	mov	r1, r5
   1db64:	mov	r3, r0
   1db68:	mov	r0, r4
   1db6c:	bl	1b158 <g_unichar_xdigit_value@plt+0x72f4>
   1db70:	mov	r6, r0
   1db74:	mov	r0, r4
   1db78:	mov	r1, r6
   1db7c:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1db80:	cmp	r6, #0
   1db84:	beq	1db90 <g_unichar_xdigit_value@plt+0x9d2c>
   1db88:	mov	r0, r6
   1db8c:	bl	13b94 <g_object_unref@plt>
   1db90:	mov	r0, r4
   1db94:	bl	1d6b0 <g_unichar_xdigit_value@plt+0x984c>
   1db98:	subs	r4, r0, #0
   1db9c:	beq	1d768 <g_unichar_xdigit_value@plt+0x9904>
   1dba0:	b	1d920 <g_unichar_xdigit_value@plt+0x9abc>
   1dba4:	mov	r0, r4
   1dba8:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1dbac:	mov	r1, r5
   1dbb0:	mov	r6, r0
   1dbb4:	mov	r0, r4
   1dbb8:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1dbbc:	mov	r2, r6
   1dbc0:	mov	r1, r5
   1dbc4:	mov	r3, r0
   1dbc8:	mov	r0, r4
   1dbcc:	bl	1bcd4 <g_unichar_xdigit_value@plt+0x7e70>
   1dbd0:	mov	r6, r0
   1dbd4:	mov	r0, r4
   1dbd8:	mov	r1, r6
   1dbdc:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1dbe0:	cmp	r6, #0
   1dbe4:	beq	1dbf0 <g_unichar_xdigit_value@plt+0x9d8c>
   1dbe8:	mov	r0, r6
   1dbec:	bl	13b94 <g_object_unref@plt>
   1dbf0:	ldr	r3, [r4, #8]
   1dbf4:	ldr	r0, [r3, #12]
   1dbf8:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1dbfc:	mov	r6, r0
   1dc00:	mov	r0, r5
   1dc04:	bl	13b94 <g_object_unref@plt>
   1dc08:	ldr	r3, [r4, #8]
   1dc0c:	ldr	r0, [r3, #12]
   1dc10:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1dc14:	ldr	r3, [r6, #28]
   1dc18:	cmp	r3, #37	; 0x25
   1dc1c:	beq	1dc38 <g_unichar_xdigit_value@plt+0x9dd4>
   1dc20:	sub	r2, r3, #34	; 0x22
   1dc24:	cmp	r2, #1
   1dc28:	bls	1dc38 <g_unichar_xdigit_value@plt+0x9dd4>
   1dc2c:	sub	r3, r3, #23
   1dc30:	cmp	r3, #2
   1dc34:	bhi	1db30 <g_unichar_xdigit_value@plt+0x9ccc>
   1dc38:	mov	r1, #4
   1dc3c:	mov	r0, r4
   1dc40:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1dc44:	mov	r1, #4
   1dc48:	mov	r5, r0
   1dc4c:	mov	r0, r4
   1dc50:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1dc54:	mov	r2, r5
   1dc58:	mov	r1, #0
   1dc5c:	mov	r3, r0
   1dc60:	mov	r0, r4
   1dc64:	bl	1b8e0 <g_unichar_xdigit_value@plt+0x7a7c>
   1dc68:	mov	r5, r0
   1dc6c:	mov	r0, r4
   1dc70:	mov	r1, r5
   1dc74:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1dc78:	cmp	r5, #0
   1dc7c:	beq	1dc88 <g_unichar_xdigit_value@plt+0x9e24>
   1dc80:	mov	r0, r5
   1dc84:	bl	13b94 <g_object_unref@plt>
   1dc88:	mov	r0, r4
   1dc8c:	bl	1e3d8 <g_unichar_xdigit_value@plt+0xa574>
   1dc90:	subs	r4, r0, #0
   1dc94:	beq	1d80c <g_unichar_xdigit_value@plt+0x99a8>
   1dc98:	b	1db30 <g_unichar_xdigit_value@plt+0x9ccc>
   1dc9c:	ldr	r3, [r4, #8]
   1dca0:	mov	r1, #2
   1dca4:	mov	r0, r4
   1dca8:	ldr	r2, [r3, #16]
   1dcac:	add	r2, r2, #1
   1dcb0:	str	r2, [r3, #16]
   1dcb4:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1dcb8:	mov	r1, #2
   1dcbc:	mov	r6, r0
   1dcc0:	mov	r0, r4
   1dcc4:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1dcc8:	mov	r2, r6
   1dccc:	mov	r1, #0
   1dcd0:	mov	r3, r0
   1dcd4:	mov	r0, r4
   1dcd8:	bl	1b248 <g_unichar_xdigit_value@plt+0x73e4>
   1dcdc:	mov	r6, r0
   1dce0:	mov	r0, r4
   1dce4:	mov	r1, r6
   1dce8:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1dcec:	cmp	r6, #0
   1dcf0:	beq	1dcfc <g_unichar_xdigit_value@plt+0x9e98>
   1dcf4:	mov	r0, r6
   1dcf8:	bl	13b94 <g_object_unref@plt>
   1dcfc:	mov	r0, r4
   1dd00:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1dd04:	subs	r6, r0, #0
   1dd08:	beq	1d768 <g_unichar_xdigit_value@plt+0x9904>
   1dd0c:	ldr	r3, [r4, #8]
   1dd10:	ldr	r0, [r3, #12]
   1dd14:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1dd18:	mov	r6, r0
   1dd1c:	mov	r0, r5
   1dd20:	bl	13b94 <g_object_unref@plt>
   1dd24:	ldr	r3, [r6, #28]
   1dd28:	cmp	r3, #20
   1dd2c:	bne	1d80c <g_unichar_xdigit_value@plt+0x99a8>
   1dd30:	b	1da5c <g_unichar_xdigit_value@plt+0x9bf8>
   1dd34:	ldr	r3, [r4, #8]
   1dd38:	mov	r1, #2
   1dd3c:	mov	r0, r4
   1dd40:	ldr	r2, [r3, #16]
   1dd44:	add	r2, r2, #1
   1dd48:	str	r2, [r3, #16]
   1dd4c:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1dd50:	mov	r1, #2
   1dd54:	mov	r6, r0
   1dd58:	mov	r0, r4
   1dd5c:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1dd60:	mov	r2, r6
   1dd64:	mov	r1, #0
   1dd68:	mov	r3, r0
   1dd6c:	mov	r0, r4
   1dd70:	bl	1b2c4 <g_unichar_xdigit_value@plt+0x7460>
   1dd74:	mov	r6, r0
   1dd78:	mov	r0, r4
   1dd7c:	mov	r1, r6
   1dd80:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1dd84:	cmp	r6, #0
   1dd88:	beq	1dd94 <g_unichar_xdigit_value@plt+0x9f30>
   1dd8c:	mov	r0, r6
   1dd90:	bl	13b94 <g_object_unref@plt>
   1dd94:	mov	r0, r4
   1dd98:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1dd9c:	subs	r6, r0, #0
   1dda0:	beq	1d768 <g_unichar_xdigit_value@plt+0x9904>
   1dda4:	ldr	r3, [r4, #8]
   1dda8:	ldr	r0, [r3, #12]
   1ddac:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1ddb0:	mov	r6, r0
   1ddb4:	mov	r0, r5
   1ddb8:	bl	13b94 <g_object_unref@plt>
   1ddbc:	ldr	r3, [r6, #28]
   1ddc0:	cmp	r3, #22
   1ddc4:	bne	1d80c <g_unichar_xdigit_value@plt+0x99a8>
   1ddc8:	b	1da5c <g_unichar_xdigit_value@plt+0x9bf8>
   1ddcc:	muleq	r1, r8, lr
   1ddd0:			; <UNDEFINED> instruction: 0x0001a8b8
   1ddd4:	push	{r4, r5, r6, r7, lr}
   1ddd8:	subs	r4, r0, #0
   1dddc:	sub	sp, sp, #12
   1dde0:	beq	1df9c <g_unichar_xdigit_value@plt+0xa138>
   1dde4:	ldr	r3, [r4, #8]
   1dde8:	ldr	r0, [r3, #12]
   1ddec:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1ddf0:	ldr	r1, [r0, #28]
   1ddf4:	mov	r5, r0
   1ddf8:	cmp	r1, #39	; 0x27
   1ddfc:	beq	1dfc4 <g_unichar_xdigit_value@plt+0xa160>
   1de00:	cmp	r1, #46	; 0x2e
   1de04:	beq	1e048 <g_unichar_xdigit_value@plt+0xa1e4>
   1de08:	cmp	r1, #32
   1de0c:	beq	1def8 <g_unichar_xdigit_value@plt+0xa094>
   1de10:	cmp	r1, #33	; 0x21
   1de14:	beq	1def8 <g_unichar_xdigit_value@plt+0xa094>
   1de18:	cmp	r1, #47	; 0x2f
   1de1c:	beq	1de88 <g_unichar_xdigit_value@plt+0xa024>
   1de20:	cmp	r1, #16
   1de24:	beq	1e0c4 <g_unichar_xdigit_value@plt+0xa260>
   1de28:	cmp	r1, #48	; 0x30
   1de2c:	beq	1e0f4 <g_unichar_xdigit_value@plt+0xa290>
   1de30:	cmp	r1, #27
   1de34:	beq	1e154 <g_unichar_xdigit_value@plt+0xa2f0>
   1de38:	cmp	r1, #28
   1de3c:	beq	1e184 <g_unichar_xdigit_value@plt+0xa320>
   1de40:	cmp	r1, #29
   1de44:	beq	1e248 <g_unichar_xdigit_value@plt+0xa3e4>
   1de48:	cmp	r1, #17
   1de4c:	beq	1e124 <g_unichar_xdigit_value@plt+0xa2c0>
   1de50:	cmp	r1, #18
   1de54:	beq	1e278 <g_unichar_xdigit_value@plt+0xa414>
   1de58:	cmp	r1, #14
   1de5c:	beq	1e2a8 <g_unichar_xdigit_value@plt+0xa444>
   1de60:	cmp	r1, #15
   1de64:	beq	1e1b4 <g_unichar_xdigit_value@plt+0xa350>
   1de68:	ldr	r3, [r4, #8]
   1de6c:	ldr	r0, [r3, #12]
   1de70:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1de74:	mov	r0, r5
   1de78:	bl	13b94 <g_object_unref@plt>
   1de7c:	mov	r0, #1
   1de80:	add	sp, sp, #12
   1de84:	pop	{r4, r5, r6, r7, pc}
   1de88:	mov	r0, r4
   1de8c:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1de90:	mov	r1, r5
   1de94:	mov	r6, r0
   1de98:	mov	r0, r4
   1de9c:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1dea0:	mov	r1, r5
   1dea4:	mov	r2, r6
   1dea8:	mov	r3, r0
   1deac:	mov	r0, r4
   1deb0:	bl	1b4b0 <g_unichar_xdigit_value@plt+0x764c>
   1deb4:	mov	r6, r0
   1deb8:	mov	r0, r4
   1debc:	mov	r1, r6
   1dec0:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1dec4:	cmp	r6, #0
   1dec8:	beq	1ded4 <g_unichar_xdigit_value@plt+0xa070>
   1decc:	mov	r0, r6
   1ded0:	bl	13b94 <g_object_unref@plt>
   1ded4:	mov	r0, r4
   1ded8:	bl	1ddd4 <g_unichar_xdigit_value@plt+0x9f70>
   1dedc:	subs	r4, r0, #0
   1dee0:	bne	1de74 <g_unichar_xdigit_value@plt+0xa010>
   1dee4:	mov	r0, r5
   1dee8:	bl	13b94 <g_object_unref@plt>
   1deec:	mov	r0, r4
   1def0:	add	sp, sp, #12
   1def4:	pop	{r4, r5, r6, r7, pc}
   1def8:	mov	r1, #10
   1defc:	mov	r0, r4
   1df00:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1df04:	mov	r1, #10
   1df08:	mov	r6, r0
   1df0c:	mov	r0, r4
   1df10:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1df14:	mov	r2, r6
   1df18:	mov	r1, #0
   1df1c:	mov	r3, r0
   1df20:	mov	r0, r4
   1df24:	bl	1c560 <g_unichar_xdigit_value@plt+0x86fc>
   1df28:	mov	r6, r0
   1df2c:	mov	r0, r4
   1df30:	mov	r1, r6
   1df34:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1df38:	cmp	r6, #0
   1df3c:	beq	1df48 <g_unichar_xdigit_value@plt+0xa0e4>
   1df40:	mov	r0, r6
   1df44:	bl	13b94 <g_object_unref@plt>
   1df48:	mov	r1, #12
   1df4c:	mov	r0, r4
   1df50:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1df54:	mov	r1, #12
   1df58:	mov	r6, r0
   1df5c:	mov	r0, r4
   1df60:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1df64:	mov	r2, r6
   1df68:	mov	r1, #0
   1df6c:	str	r1, [sp]
   1df70:	mov	r1, r5
   1df74:	mov	r3, r0
   1df78:	mov	r0, r4
   1df7c:	bl	1bdec <g_unichar_xdigit_value@plt+0x7f88>
   1df80:	mov	r6, r0
   1df84:	mov	r0, r4
   1df88:	mov	r1, r6
   1df8c:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1df90:	cmp	r6, #0
   1df94:	bne	1decc <g_unichar_xdigit_value@plt+0xa068>
   1df98:	b	1ded4 <g_unichar_xdigit_value@plt+0xa070>
   1df9c:	ldr	r1, [pc, #1068]	; 1e3d0 <g_unichar_xdigit_value@plt+0xa56c>
   1dfa0:	ldr	r2, [pc, #1068]	; 1e3d4 <g_unichar_xdigit_value@plt+0xa570>
   1dfa4:	add	r1, pc, r1
   1dfa8:	add	r1, r1, #2480	; 0x9b0
   1dfac:	add	r2, pc, r2
   1dfb0:	add	r1, r1, #12
   1dfb4:	bl	13450 <g_return_if_fail_warning@plt>
   1dfb8:	mov	r0, r4
   1dfbc:	add	sp, sp, #12
   1dfc0:	pop	{r4, r5, r6, r7, pc}
   1dfc4:	mov	r1, #4
   1dfc8:	mov	r0, r4
   1dfcc:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1dfd0:	mov	r1, #4
   1dfd4:	mov	r6, r0
   1dfd8:	mov	r0, r4
   1dfdc:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1dfe0:	mov	r2, r6
   1dfe4:	mov	r1, #0
   1dfe8:	mov	r3, r0
   1dfec:	mov	r0, r4
   1dff0:	bl	1b8e0 <g_unichar_xdigit_value@plt+0x7a7c>
   1dff4:	mov	r6, r0
   1dff8:	mov	r0, r4
   1dffc:	mov	r1, r6
   1e000:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1e004:	cmp	r6, #0
   1e008:	beq	1e014 <g_unichar_xdigit_value@plt+0xa1b0>
   1e00c:	mov	r0, r6
   1e010:	bl	13b94 <g_object_unref@plt>
   1e014:	ldr	r3, [r4, #8]
   1e018:	mov	r0, r4
   1e01c:	ldr	r2, [r3, #16]
   1e020:	add	r2, r2, #1
   1e024:	str	r2, [r3, #16]
   1e028:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1e02c:	subs	r6, r0, #0
   1e030:	bne	1e214 <g_unichar_xdigit_value@plt+0xa3b0>
   1e034:	mov	r0, r5
   1e038:	bl	13b94 <g_object_unref@plt>
   1e03c:	mov	r0, #0
   1e040:	add	sp, sp, #12
   1e044:	pop	{r4, r5, r6, r7, pc}
   1e048:	mov	r0, r4
   1e04c:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e050:	mov	r1, r5
   1e054:	mov	r6, r0
   1e058:	mov	r0, r4
   1e05c:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e060:	mov	r1, r5
   1e064:	mov	r2, r6
   1e068:	mov	r3, r0
   1e06c:	mov	r0, r4
   1e070:	bl	1ba50 <g_unichar_xdigit_value@plt+0x7bec>
   1e074:	mov	r6, r0
   1e078:	mov	r0, r4
   1e07c:	mov	r1, r6
   1e080:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1e084:	cmp	r6, #0
   1e088:	beq	1e094 <g_unichar_xdigit_value@plt+0xa230>
   1e08c:	mov	r0, r6
   1e090:	bl	13b94 <g_object_unref@plt>
   1e094:	mov	r0, r4
   1e098:	bl	1d6b0 <g_unichar_xdigit_value@plt+0x984c>
   1e09c:	subs	r6, r0, #0
   1e0a0:	beq	1e034 <g_unichar_xdigit_value@plt+0xa1d0>
   1e0a4:	mov	r0, r4
   1e0a8:	bl	1ddd4 <g_unichar_xdigit_value@plt+0x9f70>
   1e0ac:	subs	r4, r0, #0
   1e0b0:	mov	r0, r5
   1e0b4:	bne	1de78 <g_unichar_xdigit_value@plt+0xa014>
   1e0b8:	bl	13b94 <g_object_unref@plt>
   1e0bc:	mov	r0, r4
   1e0c0:	b	1de80 <g_unichar_xdigit_value@plt+0xa01c>
   1e0c4:	mov	r0, r4
   1e0c8:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e0cc:	mov	r1, r5
   1e0d0:	mov	r6, r0
   1e0d4:	mov	r0, r4
   1e0d8:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e0dc:	mov	r1, r5
   1e0e0:	mov	r2, r6
   1e0e4:	mov	r3, r0
   1e0e8:	mov	r0, r4
   1e0ec:	bl	1b8e0 <g_unichar_xdigit_value@plt+0x7a7c>
   1e0f0:	b	1e074 <g_unichar_xdigit_value@plt+0xa210>
   1e0f4:	mov	r0, r4
   1e0f8:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e0fc:	mov	r1, r5
   1e100:	mov	r6, r0
   1e104:	mov	r0, r4
   1e108:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e10c:	mov	r1, r5
   1e110:	mov	r2, r6
   1e114:	mov	r3, r0
   1e118:	mov	r0, r4
   1e11c:	bl	1b434 <g_unichar_xdigit_value@plt+0x75d0>
   1e120:	b	1deb4 <g_unichar_xdigit_value@plt+0xa050>
   1e124:	mov	r0, r4
   1e128:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e12c:	mov	r1, r5
   1e130:	mov	r6, r0
   1e134:	mov	r0, r4
   1e138:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e13c:	mov	r1, r5
   1e140:	mov	r2, r6
   1e144:	mov	r3, r0
   1e148:	mov	r0, r4
   1e14c:	bl	1b958 <g_unichar_xdigit_value@plt+0x7af4>
   1e150:	b	1e074 <g_unichar_xdigit_value@plt+0xa210>
   1e154:	mov	r0, r4
   1e158:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e15c:	mov	r1, r5
   1e160:	mov	r6, r0
   1e164:	mov	r0, r4
   1e168:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e16c:	mov	r1, r5
   1e170:	mov	r2, r6
   1e174:	mov	r3, r0
   1e178:	mov	r0, r4
   1e17c:	bl	1bac8 <g_unichar_xdigit_value@plt+0x7c64>
   1e180:	b	1e074 <g_unichar_xdigit_value@plt+0xa210>
   1e184:	mov	r0, r4
   1e188:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e18c:	mov	r1, r5
   1e190:	mov	r6, r0
   1e194:	mov	r0, r4
   1e198:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e19c:	mov	r1, r5
   1e1a0:	mov	r2, r6
   1e1a4:	mov	r3, r0
   1e1a8:	mov	r0, r4
   1e1ac:	bl	1bb44 <g_unichar_xdigit_value@plt+0x7ce0>
   1e1b0:	b	1e074 <g_unichar_xdigit_value@plt+0xa210>
   1e1b4:	mov	r0, r4
   1e1b8:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e1bc:	mov	r1, r5
   1e1c0:	mov	r6, r0
   1e1c4:	mov	r0, r4
   1e1c8:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e1cc:	mov	r1, r5
   1e1d0:	mov	r2, r6
   1e1d4:	mov	r3, r0
   1e1d8:	mov	r0, r4
   1e1dc:	bl	1b864 <g_unichar_xdigit_value@plt+0x7a00>
   1e1e0:	mov	r6, r0
   1e1e4:	mov	r0, r4
   1e1e8:	mov	r1, r6
   1e1ec:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1e1f0:	mov	r0, r4
   1e1f4:	bl	1d6b0 <g_unichar_xdigit_value@plt+0x984c>
   1e1f8:	cmp	r0, #0
   1e1fc:	bne	1e2d8 <g_unichar_xdigit_value@plt+0xa474>
   1e200:	cmp	r6, #0
   1e204:	beq	1e034 <g_unichar_xdigit_value@plt+0xa1d0>
   1e208:	mov	r0, r6
   1e20c:	bl	13b94 <g_object_unref@plt>
   1e210:	b	1e034 <g_unichar_xdigit_value@plt+0xa1d0>
   1e214:	ldr	r3, [r4, #8]
   1e218:	ldr	r0, [r3, #12]
   1e21c:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e220:	mov	r6, r0
   1e224:	mov	r0, r5
   1e228:	bl	13b94 <g_object_unref@plt>
   1e22c:	ldr	r3, [r6, #28]
   1e230:	cmp	r3, #40	; 0x28
   1e234:	movne	r0, r6
   1e238:	beq	1e388 <g_unichar_xdigit_value@plt+0xa524>
   1e23c:	bl	13b94 <g_object_unref@plt>
   1e240:	mov	r0, #0
   1e244:	b	1de80 <g_unichar_xdigit_value@plt+0xa01c>
   1e248:	mov	r0, r4
   1e24c:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e250:	mov	r1, r5
   1e254:	mov	r6, r0
   1e258:	mov	r0, r4
   1e25c:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e260:	mov	r1, r5
   1e264:	mov	r2, r6
   1e268:	mov	r3, r0
   1e26c:	mov	r0, r4
   1e270:	bl	1bbc0 <g_unichar_xdigit_value@plt+0x7d5c>
   1e274:	b	1e074 <g_unichar_xdigit_value@plt+0xa210>
   1e278:	mov	r0, r4
   1e27c:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e280:	mov	r1, r5
   1e284:	mov	r6, r0
   1e288:	mov	r0, r4
   1e28c:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e290:	mov	r1, r5
   1e294:	mov	r2, r6
   1e298:	mov	r3, r0
   1e29c:	mov	r0, r4
   1e2a0:	bl	1b9d4 <g_unichar_xdigit_value@plt+0x7b70>
   1e2a4:	b	1e074 <g_unichar_xdigit_value@plt+0xa210>
   1e2a8:	mov	r0, r4
   1e2ac:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e2b0:	mov	r1, r5
   1e2b4:	mov	r6, r0
   1e2b8:	mov	r0, r4
   1e2bc:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e2c0:	mov	r1, r5
   1e2c4:	mov	r2, r6
   1e2c8:	mov	r3, r0
   1e2cc:	mov	r0, r4
   1e2d0:	bl	1b7ec <g_unichar_xdigit_value@plt+0x7988>
   1e2d4:	b	1e1e0 <g_unichar_xdigit_value@plt+0xa37c>
   1e2d8:	ldr	r3, [r4, #8]
   1e2dc:	ldr	r0, [r3, #12]
   1e2e0:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e2e4:	mov	r7, r0
   1e2e8:	mov	r0, r5
   1e2ec:	bl	13b94 <g_object_unref@plt>
   1e2f0:	ldr	r3, [r7, #28]
   1e2f4:	cmp	r3, #48	; 0x30
   1e2f8:	bne	1e32c <g_unichar_xdigit_value@plt+0xa4c8>
   1e2fc:	ldr	r3, [r6, #28]
   1e300:	ldr	r3, [r3, #36]	; 0x24
   1e304:	cmp	r3, #9
   1e308:	bls	1e3b0 <g_unichar_xdigit_value@plt+0xa54c>
   1e30c:	mov	r3, #9
   1e310:	mov	r0, r6
   1e314:	mov	r4, #1
   1e318:	str	r3, [r6, #36]	; 0x24
   1e31c:	str	r4, [r6, #56]	; 0x38
   1e320:	bl	13b94 <g_object_unref@plt>
   1e324:	mov	r0, r7
   1e328:	b	1e0b8 <g_unichar_xdigit_value@plt+0xa254>
   1e32c:	ldr	r3, [r4, #8]
   1e330:	ldr	r0, [r3, #12]
   1e334:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1e338:	mov	r0, r4
   1e33c:	bl	1ddd4 <g_unichar_xdigit_value@plt+0x9f70>
   1e340:	cmp	r0, #0
   1e344:	bne	1e368 <g_unichar_xdigit_value@plt+0xa504>
   1e348:	cmp	r6, #0
   1e34c:	beq	1e358 <g_unichar_xdigit_value@plt+0xa4f4>
   1e350:	mov	r0, r6
   1e354:	bl	13b94 <g_object_unref@plt>
   1e358:	mov	r0, r7
   1e35c:	bl	13b94 <g_object_unref@plt>
   1e360:	mov	r0, #0
   1e364:	b	1de80 <g_unichar_xdigit_value@plt+0xa01c>
   1e368:	cmp	r6, #0
   1e36c:	beq	1e378 <g_unichar_xdigit_value@plt+0xa514>
   1e370:	mov	r0, r6
   1e374:	bl	13b94 <g_object_unref@plt>
   1e378:	mov	r0, r7
   1e37c:	bl	13b94 <g_object_unref@plt>
   1e380:	mov	r0, #1
   1e384:	b	1de80 <g_unichar_xdigit_value@plt+0xa01c>
   1e388:	ldr	r3, [r4, #8]
   1e38c:	mov	r0, r4
   1e390:	ldr	r2, [r3, #16]
   1e394:	sub	r2, r2, #1
   1e398:	str	r2, [r3, #16]
   1e39c:	bl	1ddd4 <g_unichar_xdigit_value@plt+0x9f70>
   1e3a0:	subs	r4, r0, #0
   1e3a4:	mov	r0, r6
   1e3a8:	bne	1de78 <g_unichar_xdigit_value@plt+0xa014>
   1e3ac:	b	1e23c <g_unichar_xdigit_value@plt+0xa3d8>
   1e3b0:	ldr	r3, [r4, #8]
   1e3b4:	ldr	r0, [r3, #12]
   1e3b8:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1e3bc:	mov	r0, r4
   1e3c0:	bl	1ddd4 <g_unichar_xdigit_value@plt+0x9f70>
   1e3c4:	cmp	r0, #0
   1e3c8:	bne	1e338 <g_unichar_xdigit_value@plt+0xa4d4>
   1e3cc:	b	1e370 <g_unichar_xdigit_value@plt+0xa50c>
   1e3d0:	andeq	sl, r1, r8, lsl r7
   1e3d4:	andeq	sl, r1, r8, lsr r1
   1e3d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3dc:	subs	r4, r0, #0
   1e3e0:	sub	sp, sp, #36	; 0x24
   1e3e4:	beq	1e6b4 <g_unichar_xdigit_value@plt+0xa850>
   1e3e8:	ldr	r3, [r4, #8]
   1e3ec:	ldr	r0, [r3, #12]
   1e3f0:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e3f4:	ldr	r1, [r0, #28]
   1e3f8:	mov	r6, r0
   1e3fc:	cmp	r1, #35	; 0x23
   1e400:	beq	1e4b4 <g_unichar_xdigit_value@plt+0xa650>
   1e404:	cmp	r1, #34	; 0x22
   1e408:	beq	1e670 <g_unichar_xdigit_value@plt+0xa80c>
   1e40c:	cmp	r1, #23
   1e410:	beq	1e6d8 <g_unichar_xdigit_value@plt+0xa874>
   1e414:	cmp	r1, #24
   1e418:	beq	1e43c <g_unichar_xdigit_value@plt+0xa5d8>
   1e41c:	cmp	r1, #25
   1e420:	beq	1e700 <g_unichar_xdigit_value@plt+0xa89c>
   1e424:	cmp	r1, #37	; 0x25
   1e428:	beq	1e728 <g_unichar_xdigit_value@plt+0xa8c4>
   1e42c:	bl	13b94 <g_object_unref@plt>
   1e430:	mov	r0, #0
   1e434:	add	sp, sp, #36	; 0x24
   1e438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e43c:	mov	r0, r4
   1e440:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e444:	mov	r1, r6
   1e448:	mov	r5, r0
   1e44c:	mov	r0, r4
   1e450:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e454:	mov	r2, r5
   1e458:	mov	r1, #3
   1e45c:	mov	r3, r0
   1e460:	str	r1, [sp]
   1e464:	mov	r0, r4
   1e468:	mov	r1, r6
   1e46c:	bl	1b574 <g_unichar_xdigit_value@plt+0x7710>
   1e470:	mov	r5, r0
   1e474:	mov	r0, r4
   1e478:	mov	r1, r5
   1e47c:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1e480:	cmp	r5, #0
   1e484:	beq	1e490 <g_unichar_xdigit_value@plt+0xa62c>
   1e488:	mov	r0, r5
   1e48c:	bl	13b94 <g_object_unref@plt>
   1e490:	mov	r0, r4
   1e494:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1e498:	subs	r4, r0, #0
   1e49c:	beq	1e668 <g_unichar_xdigit_value@plt+0xa804>
   1e4a0:	mov	r0, r6
   1e4a4:	bl	13b94 <g_object_unref@plt>
   1e4a8:	mov	r0, #1
   1e4ac:	add	sp, sp, #36	; 0x24
   1e4b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e4b4:	ldr	r3, [r4, #8]
   1e4b8:	ldr	r0, [r3, #12]
   1e4bc:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1e4c0:	ldr	r3, [r4, #8]
   1e4c4:	ldr	r2, [r3, #16]
   1e4c8:	ldr	r0, [r3, #12]
   1e4cc:	add	r2, r2, #1
   1e4d0:	str	r2, [r3, #16]
   1e4d4:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e4d8:	mov	fp, r0
   1e4dc:	ldr	r0, [r0, #16]
   1e4e0:	bl	136f0 <g_strdup@plt>
   1e4e4:	mov	r1, #12
   1e4e8:	str	r0, [sp, #16]
   1e4ec:	mov	r0, r4
   1e4f0:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1e4f4:	mov	r1, #12
   1e4f8:	mov	r5, r0
   1e4fc:	mov	r0, r4
   1e500:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1e504:	ldr	r1, [sp, #16]
   1e508:	mov	r2, r5
   1e50c:	str	r1, [sp]
   1e510:	mov	r1, fp
   1e514:	mov	r3, r0
   1e518:	mov	r0, r4
   1e51c:	bl	1beb0 <g_unichar_xdigit_value@plt+0x804c>
   1e520:	mov	r5, r0
   1e524:	mov	r0, r4
   1e528:	mov	r1, r5
   1e52c:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1e530:	cmp	r5, #0
   1e534:	beq	1e540 <g_unichar_xdigit_value@plt+0xa6dc>
   1e538:	mov	r0, r5
   1e53c:	bl	13b94 <g_object_unref@plt>
   1e540:	ldr	r3, [r4, #8]
   1e544:	ldr	r0, [r3, #12]
   1e548:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e54c:	ldr	r3, [r0, #28]
   1e550:	mov	r7, r0
   1e554:	sub	r3, r3, #32
   1e558:	cmp	r3, #1
   1e55c:	movhi	r2, #0
   1e560:	movhi	sl, #2
   1e564:	strhi	r2, [sp, #20]
   1e568:	bls	1e770 <g_unichar_xdigit_value@plt+0xa90c>
   1e56c:	ldr	r1, [fp, #28]
   1e570:	mov	r0, r4
   1e574:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e578:	mov	r1, fp
   1e57c:	mov	r5, r0
   1e580:	mov	r0, r4
   1e584:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e588:	ldr	r1, [sp, #20]
   1e58c:	mov	r2, r5
   1e590:	str	r1, [sp]
   1e594:	mov	r1, fp
   1e598:	mov	r3, r0
   1e59c:	mov	r0, r4
   1e5a0:	bl	1c4c0 <g_unichar_xdigit_value@plt+0x865c>
   1e5a4:	mov	r5, r0
   1e5a8:	mov	r0, r4
   1e5ac:	mov	r1, r5
   1e5b0:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1e5b4:	cmp	r5, #0
   1e5b8:	beq	1e5c4 <g_unichar_xdigit_value@plt+0xa760>
   1e5bc:	mov	r0, r5
   1e5c0:	bl	13b94 <g_object_unref@plt>
   1e5c4:	ldr	r3, [r7, #28]
   1e5c8:	cmp	r3, #39	; 0x27
   1e5cc:	ldr	r3, [r4, #8]
   1e5d0:	beq	1e7a8 <g_unichar_xdigit_value@plt+0xa944>
   1e5d4:	ldr	r0, [r3, #12]
   1e5d8:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1e5dc:	mov	r0, r4
   1e5e0:	bl	1d6b0 <g_unichar_xdigit_value@plt+0x984c>
   1e5e4:	ldr	r3, [r4, #8]
   1e5e8:	cmp	r0, #0
   1e5ec:	ldr	r0, [r3, #12]
   1e5f0:	beq	1e74c <g_unichar_xdigit_value@plt+0xa8e8>
   1e5f4:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e5f8:	mov	r5, r0
   1e5fc:	mov	r0, r7
   1e600:	bl	13b94 <g_object_unref@plt>
   1e604:	ldr	r1, [r5, #28]
   1e608:	cmp	r1, #47	; 0x2f
   1e60c:	beq	1ea2c <g_unichar_xdigit_value@plt+0xabc8>
   1e610:	ldr	r3, [r4, #8]
   1e614:	ldr	r0, [r3, #12]
   1e618:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1e61c:	ldr	r3, [r4, #8]
   1e620:	mov	r0, r4
   1e624:	ldr	r2, [r3, #16]
   1e628:	sub	r2, r2, #1
   1e62c:	str	r2, [r3, #16]
   1e630:	bl	1ddd4 <g_unichar_xdigit_value@plt+0x9f70>
   1e634:	cmp	r0, #0
   1e638:	bne	1ea24 <g_unichar_xdigit_value@plt+0xabc0>
   1e63c:	ldr	r3, [r4, #8]
   1e640:	ldr	r0, [r3, #12]
   1e644:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1e648:	ldr	r0, [sp, #20]
   1e64c:	bl	1399c <g_free@plt>
   1e650:	mov	r0, r5
   1e654:	bl	13b94 <g_object_unref@plt>
   1e658:	ldr	r0, [sp, #16]
   1e65c:	bl	1399c <g_free@plt>
   1e660:	mov	r0, fp
   1e664:	bl	13b94 <g_object_unref@plt>
   1e668:	mov	r0, r6
   1e66c:	b	1e42c <g_unichar_xdigit_value@plt+0xa5c8>
   1e670:	bl	133f0 <g_object_ref@plt>
   1e674:	ldr	r3, [r4, #8]
   1e678:	mov	r7, r0
   1e67c:	ldr	r0, [r3, #12]
   1e680:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e684:	mov	r5, r0
   1e688:	mov	r0, r6
   1e68c:	bl	13b94 <g_object_unref@plt>
   1e690:	ldr	r1, [r5, #28]
   1e694:	cmp	r1, #23
   1e698:	beq	1e9a4 <g_unichar_xdigit_value@plt+0xab40>
   1e69c:	cmp	r7, #0
   1e6a0:	beq	1e6ac <g_unichar_xdigit_value@plt+0xa848>
   1e6a4:	mov	r0, r7
   1e6a8:	bl	13b94 <g_object_unref@plt>
   1e6ac:	mov	r0, r5
   1e6b0:	b	1e42c <g_unichar_xdigit_value@plt+0xa5c8>
   1e6b4:	ldr	r1, [pc, #1012]	; 1eab0 <g_unichar_xdigit_value@plt+0xac4c>
   1e6b8:	ldr	r2, [pc, #1012]	; 1eab4 <g_unichar_xdigit_value@plt+0xac50>
   1e6bc:	add	r1, pc, r1
   1e6c0:	add	r2, pc, r2
   1e6c4:	add	r1, r1, #2512	; 0x9d0
   1e6c8:	bl	13450 <g_return_if_fail_warning@plt>
   1e6cc:	mov	r0, r4
   1e6d0:	add	sp, sp, #36	; 0x24
   1e6d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6d8:	mov	r0, r4
   1e6dc:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e6e0:	mov	r1, r6
   1e6e4:	mov	r5, r0
   1e6e8:	mov	r0, r4
   1e6ec:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e6f0:	mov	r2, r5
   1e6f4:	mov	r1, #2
   1e6f8:	mov	r3, r0
   1e6fc:	b	1e460 <g_unichar_xdigit_value@plt+0xa5fc>
   1e700:	mov	r0, r4
   1e704:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e708:	mov	r1, r6
   1e70c:	mov	r5, r0
   1e710:	mov	r0, r4
   1e714:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e718:	mov	r2, r5
   1e71c:	mov	r1, #4
   1e720:	mov	r3, r0
   1e724:	b	1e460 <g_unichar_xdigit_value@plt+0xa5fc>
   1e728:	ldr	r3, [r4, #8]
   1e72c:	ldr	r0, [r3, #12]
   1e730:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1e734:	mov	r0, r4
   1e738:	bl	1c118 <g_unichar_xdigit_value@plt+0x82b4>
   1e73c:	subs	r4, r0, #0
   1e740:	mov	r0, r6
   1e744:	bne	1e4a4 <g_unichar_xdigit_value@plt+0xa640>
   1e748:	b	1e42c <g_unichar_xdigit_value@plt+0xa5c8>
   1e74c:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1e750:	ldr	r3, [r4, #8]
   1e754:	ldr	r0, [sp, #20]
   1e758:	ldr	r2, [r3, #16]
   1e75c:	sub	r2, r2, #1
   1e760:	str	r2, [r3, #16]
   1e764:	bl	1399c <g_free@plt>
   1e768:	mov	r0, r7
   1e76c:	b	1e654 <g_unichar_xdigit_value@plt+0xa7f0>
   1e770:	ldr	r0, [r0, #16]
   1e774:	mov	sl, #3
   1e778:	bl	136f0 <g_strdup@plt>
   1e77c:	str	r0, [sp, #20]
   1e780:	mov	r0, #0
   1e784:	bl	1399c <g_free@plt>
   1e788:	ldr	r3, [r4, #8]
   1e78c:	ldr	r0, [r3, #12]
   1e790:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e794:	mov	r3, r0
   1e798:	mov	r0, r7
   1e79c:	mov	r7, r3
   1e7a0:	bl	13b94 <g_object_unref@plt>
   1e7a4:	b	1e56c <g_unichar_xdigit_value@plt+0xa708>
   1e7a8:	ldr	r0, [r3, #12]
   1e7ac:	add	sl, sl, #1
   1e7b0:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e7b4:	mov	r5, r0
   1e7b8:	mov	r0, r7
   1e7bc:	bl	13b94 <g_object_unref@plt>
   1e7c0:	ldr	r0, [pc, #752]	; 1eab8 <g_unichar_xdigit_value@plt+0xac54>
   1e7c4:	add	r0, pc, r0
   1e7c8:	bl	136f0 <g_strdup@plt>
   1e7cc:	ldr	r3, [r5, #28]
   1e7d0:	cmp	r3, #12
   1e7d4:	mov	r7, r0
   1e7d8:	beq	1ea7c <g_unichar_xdigit_value@plt+0xac18>
   1e7dc:	cmp	r3, #38	; 0x26
   1e7e0:	beq	1eaa4 <g_unichar_xdigit_value@plt+0xac40>
   1e7e4:	mov	ip, #1
   1e7e8:	mov	r2, #0
   1e7ec:	str	r6, [sp, #24]
   1e7f0:	mov	r6, ip
   1e7f4:	str	r2, [sp, #12]
   1e7f8:	str	fp, [sp, #28]
   1e7fc:	b	1e868 <g_unichar_xdigit_value@plt+0xaa04>
   1e800:	bl	133f0 <g_object_ref@plt>
   1e804:	mov	r1, r0
   1e808:	ldr	r0, [sp, #12]
   1e80c:	bl	13594 <g_list_append@plt>
   1e810:	str	r0, [sp, #12]
   1e814:	ldr	r1, [r5, #16]
   1e818:	mov	r2, #0
   1e81c:	mov	r0, r7
   1e820:	add	sl, sl, #1
   1e824:	bl	13af8 <g_strconcat@plt>
   1e828:	mov	r9, r0
   1e82c:	mov	r0, r7
   1e830:	bl	1399c <g_free@plt>
   1e834:	ldr	r3, [r4, #8]
   1e838:	mov	r7, r9
   1e83c:	ldr	r0, [r3, #12]
   1e840:	bl	36ff8 <g_unichar_xdigit_value@plt+0x23194>
   1e844:	mov	r8, r0
   1e848:	mov	r0, r5
   1e84c:	bl	13b94 <g_object_unref@plt>
   1e850:	ldr	r3, [r8, #28]
   1e854:	mov	r5, r8
   1e858:	cmp	r3, #12
   1e85c:	beq	1e93c <g_unichar_xdigit_value@plt+0xaad8>
   1e860:	cmp	r3, #38	; 0x26
   1e864:	beq	1ea8c <g_unichar_xdigit_value@plt+0xac28>
   1e868:	cmp	r3, #39	; 0x27
   1e86c:	mov	r0, r5
   1e870:	addeq	r6, r6, #1
   1e874:	beq	1e814 <g_unichar_xdigit_value@plt+0xa9b0>
   1e878:	cmp	r3, #40	; 0x28
   1e87c:	bne	1e800 <g_unichar_xdigit_value@plt+0xa99c>
   1e880:	subs	r6, r6, #1
   1e884:	bne	1e814 <g_unichar_xdigit_value@plt+0xa9b0>
   1e888:	mov	r1, #12
   1e88c:	mov	r0, r4
   1e890:	ldr	r6, [sp, #24]
   1e894:	ldr	fp, [sp, #28]
   1e898:	bl	169b8 <g_unichar_xdigit_value@plt+0x2b54>
   1e89c:	mov	r1, #12
   1e8a0:	mov	r8, r0
   1e8a4:	mov	r0, r4
   1e8a8:	bl	16b18 <g_unichar_xdigit_value@plt+0x2cb4>
   1e8ac:	mov	r2, r8
   1e8b0:	ldr	r1, [sp, #12]
   1e8b4:	str	r7, [sp]
   1e8b8:	mov	r3, r0
   1e8bc:	mov	r0, r4
   1e8c0:	bl	1aecc <g_unichar_xdigit_value@plt+0x7068>
   1e8c4:	mov	r8, r0
   1e8c8:	mov	r0, r4
   1e8cc:	mov	r1, r8
   1e8d0:	bl	16e24 <g_unichar_xdigit_value@plt+0x2fc0>
   1e8d4:	cmp	r8, #0
   1e8d8:	beq	1e8e4 <g_unichar_xdigit_value@plt+0xaa80>
   1e8dc:	mov	r0, r8
   1e8e0:	bl	13b94 <g_object_unref@plt>
   1e8e4:	ldr	r2, [sp, #12]
   1e8e8:	cmp	r2, #0
   1e8ec:	beq	1e900 <g_unichar_xdigit_value@plt+0xaa9c>
   1e8f0:	ldr	r1, [pc, #452]	; 1eabc <g_unichar_xdigit_value@plt+0xac58>
   1e8f4:	mov	r0, r2
   1e8f8:	add	r1, pc, r1
   1e8fc:	bl	1396c <g_list_free_full@plt>
   1e900:	mov	r0, r7
   1e904:	bl	1399c <g_free@plt>
   1e908:	ldr	r3, [r4, #8]
   1e90c:	ldr	r0, [sp, #20]
   1e910:	ldr	r2, [r3, #16]
   1e914:	sub	r2, r2, #1
   1e918:	str	r2, [r3, #16]
   1e91c:	bl	1399c <g_free@plt>
   1e920:	mov	r0, r5
   1e924:	bl	13b94 <g_object_unref@plt>
   1e928:	ldr	r0, [sp, #16]
   1e92c:	bl	1399c <g_free@plt>
   1e930:	mov	r0, fp
   1e934:	bl	13b94 <g_object_unref@plt>
   1e938:	b	1e4a0 <g_unichar_xdigit_value@plt+0xa63c>
   1e93c:	ldr	r6, [sp, #24]
   1e940:	ldr	fp, [sp, #28]
   1e944:	sub	sl, sl, #1
   1e948:	ldr	r3, [r4, #8]
   1e94c:	sub	sl, sl, #1
   1e950:	ldr	r0, [r3, #12]
   1e954:	bl	37094 <g_unichar_xdigit_value@plt+0x23230>
   1e958:	cmn	sl, #1
   1e95c:	bne	1e948 <g_unichar_xdigit_value@plt+0xaae4>
   1e960:	ldr	r3, [r4, #8]
   1e964:	ldr	r1, [sp, #12]
   1e968:	ldr	r2, [r3, #16]
   1e96c:	cmp	r1, #0
   1e970:	sub	r2, r2, #1
   1e974:	str	r2, [r3, #16]
   1e978:	beq	1e98c <g_unichar_xdigit_value@plt+0xab28>
   1e97c:	mov	r0, r1
   1e980:	ldr	r1, [pc, #312]	; 1eac0 <g_unichar_xdigit_value@plt+0xac5c>
   1e984:	add	r1, pc, r1
   1e988:	bl	1396c <g_list_free_full@plt>
   1e98c:	mov	r0, r7
   1e990:	bl	1399c <g_free@plt>
   1e994:	ldr	r0, [sp, #20]
   1e998:	bl	1399c <g_free@plt>
   1e99c:	mov	r0, r8
   1e9a0:	b	1e654 <g_unichar_xdigit_value@plt+0xa7f0>
   1e9a4:	mov	r0, r4
   1e9a8:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1e9ac:	mov	r1, r5
   1e9b0:	mov	r6, r0
   1e9b4:	mov	r0, r4
   1e9b8:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1e9bc:	mov	r2, r6
   1e9c0:	mov	r1, r5
   1e9c4:	str	r7, [sp]
   1e9c8:	mov	r3, r0
   1e9cc:	mov	r0, r4
   1e9d0:	bl	1b68c <g_unichar_xdigit_value@plt+0x7828>
   1e9d4:	mov	r6, r0
   1e9d8:	mov	r0, r4
   1e9dc:	mov	r1, r6
   1e9e0:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1e9e4:	cmp	r6, #0
   1e9e8:	beq	1e9f4 <g_unichar_xdigit_value@plt+0xab90>
   1e9ec:	mov	r0, r6
   1e9f0:	bl	13b94 <g_object_unref@plt>
   1e9f4:	mov	r0, r4
   1e9f8:	bl	1c6b8 <g_unichar_xdigit_value@plt+0x8854>
   1e9fc:	cmp	r0, #0
   1ea00:	beq	1e69c <g_unichar_xdigit_value@plt+0xa838>
   1ea04:	cmp	r7, #0
   1ea08:	beq	1ea14 <g_unichar_xdigit_value@plt+0xabb0>
   1ea0c:	mov	r0, r7
   1ea10:	bl	13b94 <g_object_unref@plt>
   1ea14:	mov	r0, r5
   1ea18:	bl	13b94 <g_object_unref@plt>
   1ea1c:	mov	r0, #1
   1ea20:	b	1e434 <g_unichar_xdigit_value@plt+0xa5d0>
   1ea24:	ldr	r0, [sp, #20]
   1ea28:	b	1e91c <g_unichar_xdigit_value@plt+0xaab8>
   1ea2c:	mov	r0, r4
   1ea30:	bl	16bec <g_unichar_xdigit_value@plt+0x2d88>
   1ea34:	mov	r1, r5
   1ea38:	mov	r7, r0
   1ea3c:	mov	r0, r4
   1ea40:	bl	16b6c <g_unichar_xdigit_value@plt+0x2d08>
   1ea44:	mov	r2, r7
   1ea48:	mov	r1, r5
   1ea4c:	mov	r3, r0
   1ea50:	mov	r0, r4
   1ea54:	bl	1b4b0 <g_unichar_xdigit_value@plt+0x764c>
   1ea58:	mov	r7, r0
   1ea5c:	mov	r0, r4
   1ea60:	mov	r1, r7
   1ea64:	bl	16e84 <g_unichar_xdigit_value@plt+0x3020>
   1ea68:	cmp	r7, #0
   1ea6c:	beq	1e61c <g_unichar_xdigit_value@plt+0xa7b8>
   1ea70:	mov	r0, r7
   1ea74:	bl	13b94 <g_object_unref@plt>
   1ea78:	b	1e61c <g_unichar_xdigit_value@plt+0xa7b8>
   1ea7c:	mov	r3, #0
   1ea80:	mov	r8, r5
   1ea84:	str	r3, [sp, #12]
   1ea88:	b	1e944 <g_unichar_xdigit_value@plt+0xaae0>
   1ea8c:	ldr	r6, [sp, #24]
   1ea90:	mov	r7, r9
   1ea94:	ldr	fp, [sp, #28]
   1ea98:	mov	r5, r8
   1ea9c:	mov	r8, r5
   1eaa0:	b	1e944 <g_unichar_xdigit_value@plt+0xaae0>
   1eaa4:	mov	r3, #0
   1eaa8:	str	r3, [sp, #12]
   1eaac:	b	1ea9c <g_unichar_xdigit_value@plt+0xac38>
   1eab0:	andeq	sl, r1, r0
   1eab4:	andeq	r9, r1, r4, lsr #20
   1eab8:	andeq	sl, r1, r0, lsl #19
   1eabc:			; <UNDEFINED> instruction: 0xffff7308
   1eac0:			; <UNDEFINED> instruction: 0xffff727c
   1eac4:	push	{r3, r4, r5, lr}
   1eac8:	mov	r5, r0
   1eacc:	bl	17944 <g_unichar_xdigit_value@plt+0x3ae0>
   1ead0:	mov	r1, r0
   1ead4:	mov	r0, r5
   1ead8:	bl	13510 <g_type_check_instance_cast@plt>
   1eadc:	mov	r4, r0
   1eae0:	ldr	r0, [r0, #16]
   1eae4:	cmp	r0, #0
   1eae8:	beq	1eaf8 <g_unichar_xdigit_value@plt+0xac94>
   1eaec:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   1eaf0:	mov	r3, #0
   1eaf4:	str	r3, [r4, #16]
   1eaf8:	ldr	r0, [r4, #20]
   1eafc:	cmp	r0, #0
   1eb00:	beq	1eb10 <g_unichar_xdigit_value@plt+0xacac>
   1eb04:	bl	13b94 <g_object_unref@plt>
   1eb08:	mov	r3, #0
   1eb0c:	str	r3, [r4, #20]
   1eb10:	ldr	r0, [r4, #24]
   1eb14:	cmp	r0, #0
   1eb18:	beq	1eb28 <g_unichar_xdigit_value@plt+0xacc4>
   1eb1c:	bl	13b94 <g_object_unref@plt>
   1eb20:	mov	r3, #0
   1eb24:	str	r3, [r4, #24]
   1eb28:	ldr	r0, [r4, #28]
   1eb2c:	cmp	r0, #0
   1eb30:	beq	1eb40 <g_unichar_xdigit_value@plt+0xacdc>
   1eb34:	bl	13b94 <g_object_unref@plt>
   1eb38:	mov	r3, #0
   1eb3c:	str	r3, [r4, #28]
   1eb40:	ldr	r0, [r4, #32]
   1eb44:	cmp	r0, #0
   1eb48:	beq	1eb60 <g_unichar_xdigit_value@plt+0xacfc>
   1eb4c:	ldr	r1, [pc, #64]	; 1eb94 <g_unichar_xdigit_value@plt+0xad30>
   1eb50:	add	r1, pc, r1
   1eb54:	bl	1396c <g_list_free_full@plt>
   1eb58:	mov	r3, #0
   1eb5c:	str	r3, [r4, #32]
   1eb60:	ldr	r0, [r4, #44]	; 0x2c
   1eb64:	bl	1399c <g_free@plt>
   1eb68:	ldr	r3, [pc, #40]	; 1eb98 <g_unichar_xdigit_value@plt+0xad34>
   1eb6c:	mov	r2, #0
   1eb70:	mov	r1, #80	; 0x50
   1eb74:	add	r3, pc, r3
   1eb78:	str	r2, [r4, #44]	; 0x2c
   1eb7c:	ldr	r0, [r3, #128]	; 0x80
   1eb80:	bl	13db0 <g_type_check_class_cast@plt>
   1eb84:	ldr	r3, [r0, #24]
   1eb88:	mov	r0, r5
   1eb8c:	blx	r3
   1eb90:	pop	{r3, r4, r5, pc}
   1eb94:			; <UNDEFINED> instruction: 0xffff70b0
   1eb98:	andeq	r2, r3, ip, lsl #17
   1eb9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eba0:	sub	sp, sp, #116	; 0x74
   1eba4:	ldr	r8, [pc, #2524]	; 1f588 <g_unichar_xdigit_value@plt+0xb724>
   1eba8:	ldr	r2, [pc, #2524]	; 1f58c <g_unichar_xdigit_value@plt+0xb728>
   1ebac:	add	r8, pc, r8
   1ebb0:	str	r0, [sp, #24]
   1ebb4:	str	r8, [sp, #44]	; 0x2c
   1ebb8:	ldr	r2, [r8, r2]
   1ebbc:	ldr	r3, [r0, #28]
   1ebc0:	cmp	r3, #0
   1ebc4:	ldr	r3, [r2]
   1ebc8:	str	r2, [sp, #48]	; 0x30
   1ebcc:	str	r3, [sp, #108]	; 0x6c
   1ebd0:	beq	1f490 <g_unichar_xdigit_value@plt+0xb62c>
   1ebd4:	ldr	r3, [r0, #24]
   1ebd8:	cmp	r3, #0
   1ebdc:	beq	1f490 <g_unichar_xdigit_value@plt+0xb62c>
   1ebe0:	ldr	r0, [r3, #44]	; 0x2c
   1ebe4:	bl	136f0 <g_strdup@plt>
   1ebe8:	cmp	r0, #0
   1ebec:	str	r0, [sp, #52]	; 0x34
   1ebf0:	beq	1f4d4 <g_unichar_xdigit_value@plt+0xb670>
   1ebf4:	ldr	ip, [sp, #24]
   1ebf8:	ldr	r0, [ip, #44]	; 0x2c
   1ebfc:	cmp	r0, #0
   1ec00:	beq	1f414 <g_unichar_xdigit_value@plt+0xb5b0>
   1ec04:	bl	14b5c <g_unichar_xdigit_value@plt+0xcf8>
   1ec08:	cmp	r0, #0
   1ec0c:	str	r0, [sp, #64]	; 0x40
   1ec10:	blt	1f45c <g_unichar_xdigit_value@plt+0xb5f8>
   1ec14:	mov	r0, #4
   1ec18:	bl	13c90 <g_malloc0@plt>
   1ec1c:	ldr	ip, [sp, #24]
   1ec20:	ldr	r4, [ip, #28]
   1ec24:	str	r0, [sp, #20]
   1ec28:	bl	17ef4 <g_unichar_xdigit_value@plt+0x4090>
   1ec2c:	cmp	r4, #0
   1ec30:	beq	1ec60 <g_unichar_xdigit_value@plt+0xadfc>
   1ec34:	ldr	r3, [r4]
   1ec38:	cmp	r3, #0
   1ec3c:	beq	1ec4c <g_unichar_xdigit_value@plt+0xade8>
   1ec40:	ldr	r3, [r3]
   1ec44:	cmp	r0, r3
   1ec48:	beq	1edc0 <g_unichar_xdigit_value@plt+0xaf5c>
   1ec4c:	mov	r1, r0
   1ec50:	mov	r0, r4
   1ec54:	bl	13a98 <g_type_check_instance_is_a@plt>
   1ec58:	cmp	r0, #0
   1ec5c:	bne	1edc0 <g_unichar_xdigit_value@plt+0xaf5c>
   1ec60:	mov	r0, r4
   1ec64:	bl	17900 <g_unichar_xdigit_value@plt+0x3a9c>
   1ec68:	subs	r4, r0, #0
   1ec6c:	beq	1f504 <g_unichar_xdigit_value@plt+0xb6a0>
   1ec70:	bl	133f0 <g_object_ref@plt>
   1ec74:	mov	r1, #20
   1ec78:	mov	r5, #1
   1ec7c:	mov	r6, r0
   1ec80:	ldr	r0, [sp, #20]
   1ec84:	bl	13c48 <g_realloc@plt>
   1ec88:	mov	r3, #0
   1ec8c:	str	r0, [sp, #20]
   1ec90:	ldr	r9, [sp, #20]
   1ec94:	str	r6, [r0]
   1ec98:	mov	r0, r4
   1ec9c:	str	r3, [r9, #4]
   1eca0:	bl	13b94 <g_object_unref@plt>
   1eca4:	bl	221c4 <g_unichar_xdigit_value@plt+0xe360>
   1eca8:	ldr	r9, [sp, #24]
   1ecac:	ldr	r1, [sp, #52]	; 0x34
   1ecb0:	mov	r3, r5
   1ecb4:	ldr	r2, [sp, #20]
   1ecb8:	ldr	ip, [r9, #16]
   1ecbc:	str	ip, [sp]
   1ecc0:	mov	r4, r0
   1ecc4:	bl	21918 <g_unichar_xdigit_value@plt+0xdab4>
   1ecc8:	subs	r7, r0, #0
   1eccc:	moveq	r6, r7
   1ecd0:	beq	1ecf4 <g_unichar_xdigit_value@plt+0xae90>
   1ecd4:	ldr	r8, [sp, #64]	; 0x40
   1ecd8:	asr	r9, r8, #31
   1ecdc:	mov	r2, r8
   1ece0:	mov	r3, r9
   1ece4:	bl	25eb8 <g_unichar_xdigit_value@plt+0x12054>
   1ece8:	mov	r6, r0
   1ecec:	mov	r0, r7
   1ecf0:	bl	13b94 <g_object_unref@plt>
   1ecf4:	bl	25528 <g_unichar_xdigit_value@plt+0x116c4>
   1ecf8:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   1ecfc:	cmp	r0, #0
   1ed00:	beq	1ed68 <g_unichar_xdigit_value@plt+0xaf04>
   1ed04:	ldr	r9, [sp, #24]
   1ed08:	ldr	fp, [r9, #16]
   1ed0c:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   1ed10:	mov	sl, r0
   1ed14:	ldr	r0, [r9, #28]
   1ed18:	bl	17860 <g_unichar_xdigit_value@plt+0x39fc>
   1ed1c:	mov	r7, r0
   1ed20:	ldr	r0, [r9, #28]
   1ed24:	ldr	r9, [r7, #20]
   1ed28:	bl	178b0 <g_unichar_xdigit_value@plt+0x3a4c>
   1ed2c:	mov	r2, sl
   1ed30:	mov	r1, #6
   1ed34:	mov	r3, r9
   1ed38:	mov	r8, r0
   1ed3c:	mov	r0, fp
   1ed40:	ldr	ip, [r8, #24]
   1ed44:	str	ip, [sp]
   1ed48:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1ed4c:	mov	r0, r8
   1ed50:	bl	13b94 <g_object_unref@plt>
   1ed54:	mov	r0, r7
   1ed58:	bl	13b94 <g_object_unref@plt>
   1ed5c:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   1ed60:	mov	r0, #0
   1ed64:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   1ed68:	cmp	r4, #0
   1ed6c:	beq	1ed78 <g_unichar_xdigit_value@plt+0xaf14>
   1ed70:	mov	r0, r4
   1ed74:	bl	13b94 <g_object_unref@plt>
   1ed78:	ldr	r3, [pc, #2064]	; 1f590 <g_unichar_xdigit_value@plt+0xb72c>
   1ed7c:	mov	r1, r5
   1ed80:	ldr	ip, [sp, #44]	; 0x2c
   1ed84:	ldr	r0, [sp, #20]
   1ed88:	ldr	r2, [ip, r3]
   1ed8c:	bl	15bc0 <g_unichar_xdigit_value@plt+0x1d5c>
   1ed90:	ldr	r0, [sp, #20]
   1ed94:	bl	1399c <g_free@plt>
   1ed98:	ldr	r0, [sp, #52]	; 0x34
   1ed9c:	bl	1399c <g_free@plt>
   1eda0:	mov	r0, r6
   1eda4:	ldr	r8, [sp, #48]	; 0x30
   1eda8:	ldr	r1, [sp, #108]	; 0x6c
   1edac:	ldr	r3, [r8]
   1edb0:	cmp	r1, r3
   1edb4:	bne	1f534 <g_unichar_xdigit_value@plt+0xb6d0>
   1edb8:	add	sp, sp, #116	; 0x74
   1edbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edc0:	ldr	r0, [r4, #44]	; 0x2c
   1edc4:	mov	r4, #0
   1edc8:	bl	136f0 <g_strdup@plt>
   1edcc:	ldr	fp, [pc, #1984]	; 1f594 <g_unichar_xdigit_value@plt+0xb730>
   1edd0:	ldr	sl, [pc, #1984]	; 1f598 <g_unichar_xdigit_value@plt+0xb734>
   1edd4:	mov	r8, r4
   1edd8:	ldr	r9, [pc, #1980]	; 1f59c <g_unichar_xdigit_value@plt+0xb738>
   1eddc:	add	fp, pc, fp
   1ede0:	add	sl, pc, sl
   1ede4:	add	fp, fp, #2544	; 0x9f0
   1ede8:	add	r9, pc, r9
   1edec:	add	sl, sl, #2544	; 0x9f0
   1edf0:	mov	r6, #1
   1edf4:	add	r9, r9, #2544	; 0x9f0
   1edf8:	mov	r7, r0
   1edfc:	ldr	r0, [pc, #1948]	; 1f5a0 <g_unichar_xdigit_value@plt+0xb73c>
   1ee00:	add	r0, pc, r0
   1ee04:	bl	136f0 <g_strdup@plt>
   1ee08:	str	fp, [sp, #32]
   1ee0c:	str	sl, [sp, #28]
   1ee10:	str	r0, [sp, #56]	; 0x38
   1ee14:	mov	r5, r0
   1ee18:	b	1ee80 <g_unichar_xdigit_value@plt+0xb01c>
   1ee1c:	ldr	r2, [pc, #1920]	; 1f5a4 <g_unichar_xdigit_value@plt+0xb740>
   1ee20:	mov	r0, #0
   1ee24:	ldr	r1, [sp, #28]
   1ee28:	mov	fp, r0
   1ee2c:	add	r2, pc, r2
   1ee30:	bl	13450 <g_return_if_fail_warning@plt>
   1ee34:	ldr	r1, [pc, #1900]	; 1f5a8 <g_unichar_xdigit_value@plt+0xb744>
   1ee38:	mov	r0, fp
   1ee3c:	add	r1, pc, r1
   1ee40:	bl	13e58 <g_strcmp0@plt>
   1ee44:	cmp	r0, #0
   1ee48:	addeq	r8, r8, #1
   1ee4c:	bne	1ef04 <g_unichar_xdigit_value@plt+0xb0a0>
   1ee50:	mov	r0, r5
   1ee54:	mov	r1, fp
   1ee58:	mov	r2, #0
   1ee5c:	add	r4, r4, #1
   1ee60:	bl	13af8 <g_strconcat@plt>
   1ee64:	add	r6, r6, #1
   1ee68:	mov	r3, r0
   1ee6c:	mov	r0, r5
   1ee70:	mov	r5, r3
   1ee74:	bl	1399c <g_free@plt>
   1ee78:	mov	r0, fp
   1ee7c:	bl	1399c <g_free@plt>
   1ee80:	mov	r0, r7
   1ee84:	mov	fp, r4
   1ee88:	bl	13ba0 <strlen@plt>
   1ee8c:	cmp	r4, r0
   1ee90:	mov	sl, r0
   1ee94:	bge	1efa8 <g_unichar_xdigit_value@plt+0xb144>
   1ee98:	cmp	r7, #0
   1ee9c:	beq	1ef84 <g_unichar_xdigit_value@plt+0xb120>
   1eea0:	cmp	r4, #0
   1eea4:	blt	1ef60 <g_unichar_xdigit_value@plt+0xb0fc>
   1eea8:	mov	r0, r7
   1eeac:	mov	r1, #0
   1eeb0:	mov	r2, r6
   1eeb4:	mov	sl, r6
   1eeb8:	bl	13d08 <memchr@plt>
   1eebc:	cmp	r0, #0
   1eec0:	rsbne	sl, r7, r0
   1eec4:	cmp	r4, sl
   1eec8:	bgt	1ee1c <g_unichar_xdigit_value@plt+0xafb8>
   1eecc:	cmp	fp, sl
   1eed0:	bge	1eee8 <g_unichar_xdigit_value@plt+0xb084>
   1eed4:	add	r0, r7, fp
   1eed8:	mov	r1, #1
   1eedc:	bl	134a4 <g_strndup@plt>
   1eee0:	mov	fp, r0
   1eee4:	b	1ee34 <g_unichar_xdigit_value@plt+0xafd0>
   1eee8:	ldr	r2, [pc, #1724]	; 1f5ac <g_unichar_xdigit_value@plt+0xb748>
   1eeec:	mov	r0, #0
   1eef0:	mov	r1, r9
   1eef4:	mov	fp, r0
   1eef8:	add	r2, pc, r2
   1eefc:	bl	13450 <g_return_if_fail_warning@plt>
   1ef00:	b	1ee34 <g_unichar_xdigit_value@plt+0xafd0>
   1ef04:	ldr	r1, [pc, #1700]	; 1f5b0 <g_unichar_xdigit_value@plt+0xb74c>
   1ef08:	mov	r0, fp
   1ef0c:	add	r1, pc, r1
   1ef10:	bl	13e58 <g_strcmp0@plt>
   1ef14:	cmp	r0, #0
   1ef18:	subeq	r8, r8, #1
   1ef1c:	beq	1ee50 <g_unichar_xdigit_value@plt+0xafec>
   1ef20:	ldr	r1, [pc, #1676]	; 1f5b4 <g_unichar_xdigit_value@plt+0xb750>
   1ef24:	mov	r0, fp
   1ef28:	add	r1, pc, r1
   1ef2c:	bl	13e58 <g_strcmp0@plt>
   1ef30:	cmp	r0, #0
   1ef34:	bne	1ee50 <g_unichar_xdigit_value@plt+0xafec>
   1ef38:	cmp	r8, #0
   1ef3c:	beq	1ee50 <g_unichar_xdigit_value@plt+0xafec>
   1ef40:	ldr	r0, [pc, #1648]	; 1f5b8 <g_unichar_xdigit_value@plt+0xb754>
   1ef44:	add	r0, pc, r0
   1ef48:	bl	136f0 <g_strdup@plt>
   1ef4c:	mov	r3, r0
   1ef50:	mov	r0, fp
   1ef54:	mov	fp, r3
   1ef58:	bl	1399c <g_free@plt>
   1ef5c:	b	1ee50 <g_unichar_xdigit_value@plt+0xafec>
   1ef60:	adds	fp, r4, r0
   1ef64:	bpl	1eecc <g_unichar_xdigit_value@plt+0xb068>
   1ef68:	ldr	r2, [pc, #1612]	; 1f5bc <g_unichar_xdigit_value@plt+0xb758>
   1ef6c:	mov	r0, #0
   1ef70:	ldr	r1, [sp, #32]
   1ef74:	mov	fp, r0
   1ef78:	add	r2, pc, r2
   1ef7c:	bl	13450 <g_return_if_fail_warning@plt>
   1ef80:	b	1ee34 <g_unichar_xdigit_value@plt+0xafd0>
   1ef84:	ldr	r1, [pc, #1588]	; 1f5c0 <g_unichar_xdigit_value@plt+0xb75c>
   1ef88:	mov	r0, r7
   1ef8c:	ldr	r2, [pc, #1584]	; 1f5c4 <g_unichar_xdigit_value@plt+0xb760>
   1ef90:	mov	fp, r7
   1ef94:	add	r1, pc, r1
   1ef98:	add	r2, pc, r2
   1ef9c:	add	r1, r1, #2544	; 0x9f0
   1efa0:	bl	13450 <g_return_if_fail_warning@plt>
   1efa4:	b	1ee34 <g_unichar_xdigit_value@plt+0xafd0>
   1efa8:	ldr	r1, [pc, #1560]	; 1f5c8 <g_unichar_xdigit_value@plt+0xb764>
   1efac:	mov	r0, r5
   1efb0:	mov	r2, #0
   1efb4:	str	r5, [sp, #56]	; 0x38
   1efb8:	add	r1, pc, r1
   1efbc:	bl	1348c <g_strsplit_set@plt>
   1efc0:	cmp	r0, #0
   1efc4:	str	r0, [sp, #32]
   1efc8:	beq	1f4b8 <g_unichar_xdigit_value@plt+0xb654>
   1efcc:	ldr	r3, [r0]
   1efd0:	cmp	r3, #0
   1efd4:	beq	1f4c8 <g_unichar_xdigit_value@plt+0xb664>
   1efd8:	mov	r8, #0
   1efdc:	mov	r3, r0
   1efe0:	mov	r2, r8
   1efe4:	str	r8, [sp, #36]	; 0x24
   1efe8:	ldr	r6, [r3, #4]!
   1efec:	add	r2, r2, #1
   1eff0:	cmp	r6, #0
   1eff4:	bne	1efe8 <g_unichar_xdigit_value@plt+0xb184>
   1eff8:	str	r2, [sp, #36]	; 0x24
   1effc:	mov	r5, r6
   1f000:	ldr	r2, [pc, #1476]	; 1f5cc <g_unichar_xdigit_value@plt+0xb768>
   1f004:	ldr	r3, [pc, #1476]	; 1f5d0 <g_unichar_xdigit_value@plt+0xb76c>
   1f008:	add	r2, pc, r2
   1f00c:	ldr	r9, [pc, #1472]	; 1f5d4 <g_unichar_xdigit_value@plt+0xb770>
   1f010:	add	r3, pc, r3
   1f014:	add	r2, r2, #2560	; 0xa00
   1f018:	add	r9, pc, r9
   1f01c:	add	r2, r2, #4
   1f020:	add	r3, r3, #2528	; 0x9e0
   1f024:	str	r6, [sp, #40]	; 0x28
   1f028:	str	r9, [sp, #68]	; 0x44
   1f02c:	str	r2, [sp, #60]	; 0x3c
   1f030:	str	r3, [sp, #72]	; 0x48
   1f034:	str	r7, [sp, #76]	; 0x4c
   1f038:	ldr	fp, [sp, #20]
   1f03c:	b	1f138 <g_unichar_xdigit_value@plt+0xb2d4>
   1f040:	mov	r0, r7
   1f044:	bl	136f0 <g_strdup@plt>
   1f048:	mov	r4, r0
   1f04c:	cmp	r4, #0
   1f050:	beq	1f234 <g_unichar_xdigit_value@plt+0xb3d0>
   1f054:	mov	r0, r4
   1f058:	bl	136f0 <g_strdup@plt>
   1f05c:	mov	r9, r0
   1f060:	bl	13c3c <g_strchug@plt>
   1f064:	bl	13744 <g_strchomp@plt>
   1f068:	mov	r0, r7
   1f06c:	bl	1399c <g_free@plt>
   1f070:	mov	r0, r4
   1f074:	bl	1399c <g_free@plt>
   1f078:	ldr	r8, [sp, #24]
   1f07c:	mov	r0, r9
   1f080:	ldr	r1, [r8, #16]
   1f084:	bl	23078 <g_unichar_xdigit_value@plt+0xf214>
   1f088:	add	r2, sp, #88	; 0x58
   1f08c:	add	r3, sp, #96	; 0x60
   1f090:	add	r1, sp, #84	; 0x54
   1f094:	str	r3, [sp]
   1f098:	add	r3, sp, #100	; 0x64
   1f09c:	str	r3, [sp, #4]
   1f0a0:	add	r3, sp, #92	; 0x5c
   1f0a4:	mov	r8, r0
   1f0a8:	bl	1d450 <g_unichar_xdigit_value@plt+0x95ec>
   1f0ac:	ldr	r7, [sp, #88]	; 0x58
   1f0b0:	mov	r4, r0
   1f0b4:	mov	r0, #0
   1f0b8:	bl	1399c <g_free@plt>
   1f0bc:	cmp	r7, #0
   1f0c0:	ldr	sl, [sp, #92]	; 0x5c
   1f0c4:	ldr	r3, [sp, #96]	; 0x60
   1f0c8:	ldr	r2, [sp, #100]	; 0x64
   1f0cc:	bne	1f368 <g_unichar_xdigit_value@plt+0xb504>
   1f0d0:	cmp	r4, #0
   1f0d4:	beq	1f564 <g_unichar_xdigit_value@plt+0xb700>
   1f0d8:	mov	r0, r4
   1f0dc:	bl	133f0 <g_object_ref@plt>
   1f0e0:	ldr	ip, [sp, #40]	; 0x28
   1f0e4:	cmp	r5, ip
   1f0e8:	mov	r7, r0
   1f0ec:	beq	1f250 <g_unichar_xdigit_value@plt+0xb3ec>
   1f0f0:	add	r5, r5, #1
   1f0f4:	mov	r3, #0
   1f0f8:	str	r7, [fp, r6]
   1f0fc:	mov	r0, r4
   1f100:	str	r3, [fp, r5, lsl #2]
   1f104:	bl	13b94 <g_object_unref@plt>
   1f108:	mov	r0, sl
   1f10c:	bl	1399c <g_free@plt>
   1f110:	cmp	r8, #0
   1f114:	beq	1f120 <g_unichar_xdigit_value@plt+0xb2bc>
   1f118:	mov	r0, r8
   1f11c:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   1f120:	mov	r0, r9
   1f124:	add	r6, r6, #4
   1f128:	bl	1399c <g_free@plt>
   1f12c:	ldr	r9, [sp, #36]	; 0x24
   1f130:	cmp	r5, r9
   1f134:	beq	1f420 <g_unichar_xdigit_value@plt+0xb5bc>
   1f138:	ldr	ip, [sp, #32]
   1f13c:	mov	r4, #0
   1f140:	ldr	r0, [ip, r6]
   1f144:	bl	136f0 <g_strdup@plt>
   1f148:	str	r4, [sp, #84]	; 0x54
   1f14c:	str	r4, [sp, #88]	; 0x58
   1f150:	str	r4, [sp, #92]	; 0x5c
   1f154:	str	r4, [sp, #96]	; 0x60
   1f158:	str	r4, [sp, #100]	; 0x64
   1f15c:	str	r4, [sp, #104]	; 0x68
   1f160:	subs	r7, r0, #0
   1f164:	beq	1f294 <g_unichar_xdigit_value@plt+0xb430>
   1f168:	ldrb	r3, [r7]
   1f16c:	cmp	r3, #0
   1f170:	beq	1f040 <g_unichar_xdigit_value@plt+0xb1dc>
   1f174:	ldr	r8, [pc, #1116]	; 1f5d8 <g_unichar_xdigit_value@plt+0xb774>
   1f178:	ldr	r9, [pc, #1116]	; 1f5dc <g_unichar_xdigit_value@plt+0xb778>
   1f17c:	add	r8, pc, r8
   1f180:	add	r9, pc, r9
   1f184:	str	r9, [sp, #20]
   1f188:	mov	r0, r8
   1f18c:	mov	r1, r9
   1f190:	bl	13e58 <g_strcmp0@plt>
   1f194:	cmp	r0, #0
   1f198:	beq	1f040 <g_unichar_xdigit_value@plt+0xb1dc>
   1f19c:	mov	r0, r8
   1f1a0:	mvn	r1, #0
   1f1a4:	bl	13cfc <g_regex_escape_string@plt>
   1f1a8:	add	r9, sp, #104	; 0x68
   1f1ac:	mov	r2, r4
   1f1b0:	mov	r1, r4
   1f1b4:	mov	r3, r9
   1f1b8:	mov	sl, r0
   1f1bc:	bl	138c4 <g_regex_new@plt>
   1f1c0:	mov	r8, r0
   1f1c4:	mov	r0, sl
   1f1c8:	bl	1399c <g_free@plt>
   1f1cc:	ldr	r2, [sp, #104]	; 0x68
   1f1d0:	cmp	r2, #0
   1f1d4:	beq	1f2a8 <g_unichar_xdigit_value@plt+0xb444>
   1f1d8:	ldr	r8, [r2]
   1f1dc:	bl	13a80 <g_regex_error_quark@plt>
   1f1e0:	cmp	r8, r0
   1f1e4:	beq	1f538 <g_unichar_xdigit_value@plt+0xb6d4>
   1f1e8:	ldr	r8, [sp, #104]	; 0x68
   1f1ec:	ldr	r0, [r8]
   1f1f0:	bl	139f0 <g_quark_to_string@plt>
   1f1f4:	movw	r3, #3711	; 0xe7f
   1f1f8:	str	r3, [sp]
   1f1fc:	mov	r1, #8
   1f200:	ldr	r3, [r8, #8]
   1f204:	ldr	r2, [pc, #980]	; 1f5e0 <g_unichar_xdigit_value@plt+0xb77c>
   1f208:	str	r3, [sp, #4]
   1f20c:	add	r2, pc, r2
   1f210:	ldr	r3, [pc, #972]	; 1f5e4 <g_unichar_xdigit_value@plt+0xb780>
   1f214:	add	r3, pc, r3
   1f218:	str	r0, [sp, #8]
   1f21c:	mov	r0, r4
   1f220:	ldr	ip, [r8, #4]
   1f224:	str	ip, [sp, #12]
   1f228:	bl	13558 <g_log@plt>
   1f22c:	mov	r0, r9
   1f230:	bl	13aec <g_clear_error@plt>
   1f234:	mov	r0, #0
   1f238:	ldr	r1, [sp, #60]	; 0x3c
   1f23c:	mov	r4, r0
   1f240:	ldr	r2, [sp, #68]	; 0x44
   1f244:	bl	13450 <g_return_if_fail_warning@plt>
   1f248:	mov	r9, r4
   1f24c:	b	1f068 <g_unichar_xdigit_value@plt+0xb204>
   1f250:	cmp	r5, #0
   1f254:	bne	1f274 <g_unichar_xdigit_value@plt+0xb410>
   1f258:	mov	r0, fp
   1f25c:	mov	r1, #20
   1f260:	bl	13c48 <g_realloc@plt>
   1f264:	mov	ip, #4
   1f268:	str	ip, [sp, #40]	; 0x28
   1f26c:	mov	fp, r0
   1f270:	b	1f0f0 <g_unichar_xdigit_value@plt+0xb28c>
   1f274:	lsl	ip, r5, #1
   1f278:	mov	r0, fp
   1f27c:	add	r1, ip, #1
   1f280:	mov	r2, #4
   1f284:	str	ip, [sp, #40]	; 0x28
   1f288:	bl	13b88 <g_realloc_n@plt>
   1f28c:	mov	fp, r0
   1f290:	b	1f0f0 <g_unichar_xdigit_value@plt+0xb28c>
   1f294:	ldr	r2, [pc, #844]	; 1f5e8 <g_unichar_xdigit_value@plt+0xb784>
   1f298:	ldr	r1, [sp, #72]	; 0x48
   1f29c:	add	r2, pc, r2
   1f2a0:	bl	13450 <g_return_if_fail_warning@plt>
   1f2a4:	b	1f234 <g_unichar_xdigit_value@plt+0xb3d0>
   1f2a8:	ldr	ip, [sp, #20]
   1f2ac:	mov	r3, r2
   1f2b0:	str	r2, [sp, #4]
   1f2b4:	mov	r0, r8
   1f2b8:	str	r9, [sp, #8]
   1f2bc:	mov	r1, r7
   1f2c0:	str	ip, [sp]
   1f2c4:	mvn	r2, #0
   1f2c8:	bl	1390c <g_regex_replace_literal@plt>
   1f2cc:	mov	r4, r0
   1f2d0:	ldr	r0, [sp, #104]	; 0x68
   1f2d4:	cmp	r0, #0
   1f2d8:	beq	1f350 <g_unichar_xdigit_value@plt+0xb4ec>
   1f2dc:	cmp	r8, #0
   1f2e0:	beq	1f2f0 <g_unichar_xdigit_value@plt+0xb48c>
   1f2e4:	mov	r0, r8
   1f2e8:	bl	13780 <g_regex_unref@plt>
   1f2ec:	ldr	r0, [sp, #104]	; 0x68
   1f2f0:	ldr	r4, [r0]
   1f2f4:	bl	13a80 <g_regex_error_quark@plt>
   1f2f8:	cmp	r4, r0
   1f2fc:	beq	1f538 <g_unichar_xdigit_value@plt+0xb6d4>
   1f300:	ldr	r4, [sp, #104]	; 0x68
   1f304:	ldr	r0, [r4]
   1f308:	bl	139f0 <g_quark_to_string@plt>
   1f30c:	movw	r3, #3724	; 0xe8c
   1f310:	str	r3, [sp]
   1f314:	mov	r1, #8
   1f318:	ldr	r3, [r4, #8]
   1f31c:	ldr	r2, [pc, #712]	; 1f5ec <g_unichar_xdigit_value@plt+0xb788>
   1f320:	str	r3, [sp, #4]
   1f324:	add	r2, pc, r2
   1f328:	ldr	r3, [pc, #704]	; 1f5f0 <g_unichar_xdigit_value@plt+0xb78c>
   1f32c:	add	r3, pc, r3
   1f330:	str	r0, [sp, #8]
   1f334:	mov	r0, #0
   1f338:	ldr	ip, [r4, #4]
   1f33c:	str	ip, [sp, #12]
   1f340:	bl	13558 <g_log@plt>
   1f344:	mov	r0, r9
   1f348:	bl	13aec <g_clear_error@plt>
   1f34c:	b	1f234 <g_unichar_xdigit_value@plt+0xb3d0>
   1f350:	bl	1399c <g_free@plt>
   1f354:	cmp	r8, #0
   1f358:	beq	1f04c <g_unichar_xdigit_value@plt+0xb1e8>
   1f35c:	mov	r0, r8
   1f360:	bl	13780 <g_regex_unref@plt>
   1f364:	b	1f04c <g_unichar_xdigit_value@plt+0xb1e8>
   1f368:	ldr	ip, [sp, #24]
   1f36c:	mov	r1, #3
   1f370:	ldr	r7, [sp, #76]	; 0x4c
   1f374:	str	fp, [sp, #20]
   1f378:	ldr	r0, [ip, #16]
   1f37c:	str	r2, [sp]
   1f380:	mov	r2, sl
   1f384:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1f388:	cmp	r4, #0
   1f38c:	beq	1f398 <g_unichar_xdigit_value@plt+0xb534>
   1f390:	mov	r0, r4
   1f394:	bl	13b94 <g_object_unref@plt>
   1f398:	mov	r0, sl
   1f39c:	bl	1399c <g_free@plt>
   1f3a0:	cmp	r8, #0
   1f3a4:	beq	1f3b0 <g_unichar_xdigit_value@plt+0xb54c>
   1f3a8:	mov	r0, r8
   1f3ac:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   1f3b0:	mov	r0, r9
   1f3b4:	bl	1399c <g_free@plt>
   1f3b8:	ldr	r3, [pc, #564]	; 1f5f4 <g_unichar_xdigit_value@plt+0xb790>
   1f3bc:	ldr	r8, [sp, #44]	; 0x2c
   1f3c0:	ldr	r1, [sp, #36]	; 0x24
   1f3c4:	ldr	r0, [sp, #32]
   1f3c8:	ldr	r2, [r8, r3]
   1f3cc:	bl	15bc0 <g_unichar_xdigit_value@plt+0x1d5c>
   1f3d0:	ldr	r0, [sp, #32]
   1f3d4:	bl	1399c <g_free@plt>
   1f3d8:	ldr	r0, [sp, #56]	; 0x38
   1f3dc:	bl	1399c <g_free@plt>
   1f3e0:	mov	r0, r7
   1f3e4:	bl	1399c <g_free@plt>
   1f3e8:	ldr	r3, [pc, #416]	; 1f590 <g_unichar_xdigit_value@plt+0xb72c>
   1f3ec:	ldr	r0, [sp, #20]
   1f3f0:	mov	r1, r5
   1f3f4:	ldr	r2, [r8, r3]
   1f3f8:	bl	15bc0 <g_unichar_xdigit_value@plt+0x1d5c>
   1f3fc:	ldr	r0, [sp, #20]
   1f400:	bl	1399c <g_free@plt>
   1f404:	ldr	r0, [sp, #52]	; 0x34
   1f408:	bl	1399c <g_free@plt>
   1f40c:	mov	r0, #0
   1f410:	b	1eda4 <g_unichar_xdigit_value@plt+0xaf40>
   1f414:	mov	r9, #1
   1f418:	str	r9, [sp, #64]	; 0x40
   1f41c:	b	1ec14 <g_unichar_xdigit_value@plt+0xadb0>
   1f420:	ldr	r7, [sp, #76]	; 0x4c
   1f424:	str	fp, [sp, #20]
   1f428:	ldr	r3, [pc, #452]	; 1f5f4 <g_unichar_xdigit_value@plt+0xb790>
   1f42c:	ldr	r8, [sp, #44]	; 0x2c
   1f430:	ldr	r1, [sp, #36]	; 0x24
   1f434:	ldr	r0, [sp, #32]
   1f438:	ldr	r2, [r8, r3]
   1f43c:	bl	15bc0 <g_unichar_xdigit_value@plt+0x1d5c>
   1f440:	ldr	r0, [sp, #32]
   1f444:	bl	1399c <g_free@plt>
   1f448:	ldr	r0, [sp, #56]	; 0x38
   1f44c:	bl	1399c <g_free@plt>
   1f450:	mov	r0, r7
   1f454:	bl	1399c <g_free@plt>
   1f458:	b	1eca4 <g_unichar_xdigit_value@plt+0xae40>
   1f45c:	ldr	r1, [pc, #404]	; 1f5f8 <g_unichar_xdigit_value@plt+0xb794>
   1f460:	mov	r2, #0
   1f464:	ldr	r8, [sp, #64]	; 0x40
   1f468:	ldr	r0, [sp, #52]	; 0x34
   1f46c:	add	r1, pc, r1
   1f470:	rsb	r8, r8, #0
   1f474:	str	r8, [sp, #64]	; 0x40
   1f478:	bl	13af8 <g_strconcat@plt>
   1f47c:	mov	r3, r0
   1f480:	ldr	r0, [sp, #52]	; 0x34
   1f484:	str	r3, [sp, #52]	; 0x34
   1f488:	bl	1399c <g_free@plt>
   1f48c:	b	1ec14 <g_unichar_xdigit_value@plt+0xadb0>
   1f490:	ldr	ip, [sp, #24]
   1f494:	mov	r4, #0
   1f498:	mov	r2, r4
   1f49c:	mov	r3, r4
   1f4a0:	mov	r1, #4
   1f4a4:	ldr	r0, [ip, #16]
   1f4a8:	str	r4, [sp]
   1f4ac:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1f4b0:	mov	r0, r4
   1f4b4:	b	1eda4 <g_unichar_xdigit_value@plt+0xaf40>
   1f4b8:	ldr	ip, [sp, #32]
   1f4bc:	str	ip, [sp, #36]	; 0x24
   1f4c0:	mov	r5, ip
   1f4c4:	b	1f428 <g_unichar_xdigit_value@plt+0xb5c4>
   1f4c8:	str	r3, [sp, #36]	; 0x24
   1f4cc:	mov	r5, r3
   1f4d0:	b	1f428 <g_unichar_xdigit_value@plt+0xb5c4>
   1f4d4:	ldr	r9, [sp, #52]	; 0x34
   1f4d8:	mov	r1, #4
   1f4dc:	ldr	r8, [sp, #24]
   1f4e0:	mov	r2, r9
   1f4e4:	mov	r3, r9
   1f4e8:	ldr	r0, [r8, #16]
   1f4ec:	str	r9, [sp]
   1f4f0:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1f4f4:	ldr	r0, [sp, #52]	; 0x34
   1f4f8:	bl	1399c <g_free@plt>
   1f4fc:	ldr	r0, [sp, #52]	; 0x34
   1f500:	b	1eda4 <g_unichar_xdigit_value@plt+0xaf40>
   1f504:	ldr	ip, [sp, #24]
   1f508:	mov	r1, #4
   1f50c:	mov	r3, r4
   1f510:	mov	r2, r4
   1f514:	ldr	r0, [ip, #16]
   1f518:	str	r4, [sp]
   1f51c:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1f520:	ldr	r3, [pc, #104]	; 1f590 <g_unichar_xdigit_value@plt+0xb72c>
   1f524:	ldr	r0, [sp, #20]
   1f528:	mov	r1, r4
   1f52c:	ldr	r8, [sp, #44]	; 0x2c
   1f530:	b	1f3f4 <g_unichar_xdigit_value@plt+0xb590>
   1f534:	bl	13978 <__stack_chk_fail@plt>
   1f538:	ldr	r3, [pc, #188]	; 1f5fc <g_unichar_xdigit_value@plt+0xb798>
   1f53c:	mov	ip, #0
   1f540:	ldr	r1, [pc, #184]	; 1f600 <g_unichar_xdigit_value@plt+0xb79c>
   1f544:	mov	r0, ip
   1f548:	add	r3, pc, r3
   1f54c:	str	ip, [sp]
   1f550:	add	r3, r3, #2528	; 0x9e0
   1f554:	add	r1, pc, r1
   1f558:	movw	r2, #3741	; 0xe9d
   1f55c:	str	ip, [sp, #104]	; 0x68
   1f560:	bl	13d2c <g_assertion_message_expr@plt>
   1f564:	ldr	ip, [sp, #24]
   1f568:	mov	r1, #3
   1f56c:	str	r2, [sp]
   1f570:	mov	r2, sl
   1f574:	ldr	r7, [sp, #76]	; 0x4c
   1f578:	ldr	r0, [ip, #16]
   1f57c:	str	fp, [sp, #20]
   1f580:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   1f584:	b	1f398 <g_unichar_xdigit_value@plt+0xb534>
   1f588:	andeq	r2, r3, ip, asr #8
   1f58c:	muleq	r0, r0, r3
   1f590:			; <UNDEFINED> instruction: 0x000003b8
   1f594:	andeq	r9, r1, r0, ror #17
   1f598:	ldrdeq	r9, [r1], -ip
   1f59c:	ldrdeq	r9, [r1], -r4
   1f5a0:	andeq	sl, r1, r4, asr #6
   1f5a4:	andeq	sl, r1, r8, lsl #15
   1f5a8:	andeq	sl, r1, r4, asr r7
   1f5ac:	ldrdeq	sl, [r1], -r0
   1f5b0:	andeq	sl, r1, r4, lsr #13
   1f5b4:	andeq	sl, r1, ip, ror #12
   1f5b8:	andeq	sl, r1, r4, asr r6
   1f5bc:	andeq	sl, r1, r4, lsr #12
   1f5c0:	andeq	r9, r1, r8, lsr #14
   1f5c4:	andeq	r9, r1, ip, asr #2
   1f5c8:	ldrdeq	sl, [r1], -ip
   1f5cc:			; <UNDEFINED> instruction: 0x000196b4
   1f5d0:	andeq	r9, r1, ip, lsr #13
   1f5d4:	andeq	r9, r1, ip, asr #1
   1f5d8:	andeq	sl, r1, ip, lsl r4
   1f5dc:	andeq	sl, r1, r4, lsl r4
   1f5e0:	andeq	r8, r1, ip, lsl #29
   1f5e4:			; <UNDEFINED> instruction: 0x00019fb8
   1f5e8:	andeq	r8, r1, r8, asr #28
   1f5ec:	andeq	r8, r1, r4, ror sp
   1f5f0:	andeq	r9, r1, r0, lsr #29
   1f5f4:	andeq	r0, r0, r4, lsr #7
   1f5f8:	andeq	sl, r1, r4, ror #17
   1f5fc:	andeq	r9, r1, r4, ror r1
   1f600:	andeq	r9, r1, r8, ror ip
   1f604:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f608:	mov	r4, r0
   1f60c:	mov	r6, r1
   1f610:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   1f614:	cmp	r4, #0
   1f618:	mov	r5, r0
   1f61c:	beq	1f640 <g_unichar_xdigit_value@plt+0xb7dc>
   1f620:	ldr	r9, [r4]
   1f624:	cmp	r0, r9
   1f628:	beq	1f664 <g_unichar_xdigit_value@plt+0xb800>
   1f62c:	mov	r0, r4
   1f630:	mov	r1, r5
   1f634:	bl	1381c <g_type_check_value_holds@plt>
   1f638:	cmp	r0, #0
   1f63c:	bne	1f664 <g_unichar_xdigit_value@plt+0xb800>
   1f640:	ldr	r1, [pc, #224]	; 1f728 <g_unichar_xdigit_value@plt+0xb8c4>
   1f644:	mov	r0, #0
   1f648:	ldr	r2, [pc, #220]	; 1f72c <g_unichar_xdigit_value@plt+0xb8c8>
   1f64c:	add	r1, pc, r1
   1f650:	add	r1, r1, #2576	; 0xa10
   1f654:	add	r2, pc, r2
   1f658:	add	r1, r1, #4
   1f65c:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f660:	b	13450 <g_return_if_fail_warning@plt>
   1f664:	cmp	r6, #0
   1f668:	ldr	r8, [r4, #8]
   1f66c:	beq	1f718 <g_unichar_xdigit_value@plt+0xb8b4>
   1f670:	ldr	r7, [r6]
   1f674:	cmp	r7, #0
   1f678:	beq	1f688 <g_unichar_xdigit_value@plt+0xb824>
   1f67c:	ldr	r3, [r7]
   1f680:	cmp	r5, r3
   1f684:	beq	1f710 <g_unichar_xdigit_value@plt+0xb8ac>
   1f688:	mov	r1, r5
   1f68c:	mov	r0, r6
   1f690:	bl	13a98 <g_type_check_instance_is_a@plt>
   1f694:	cmp	r0, #0
   1f698:	bne	1f6bc <g_unichar_xdigit_value@plt+0xb858>
   1f69c:	ldr	r1, [pc, #140]	; 1f730 <g_unichar_xdigit_value@plt+0xb8cc>
   1f6a0:	ldr	r2, [pc, #140]	; 1f734 <g_unichar_xdigit_value@plt+0xb8d0>
   1f6a4:	add	r1, pc, r1
   1f6a8:	add	r1, r1, #2576	; 0xa10
   1f6ac:	add	r2, pc, r2
   1f6b0:	add	r1, r1, #4
   1f6b4:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f6b8:	b	13450 <g_return_if_fail_warning@plt>
   1f6bc:	ldr	r0, [r7]
   1f6c0:	mov	r1, r9
   1f6c4:	bl	13684 <g_value_type_compatible@plt>
   1f6c8:	cmp	r0, #0
   1f6cc:	bne	1f6f0 <g_unichar_xdigit_value@plt+0xb88c>
   1f6d0:	ldr	r1, [pc, #96]	; 1f738 <g_unichar_xdigit_value@plt+0xb8d4>
   1f6d4:	ldr	r2, [pc, #96]	; 1f73c <g_unichar_xdigit_value@plt+0xb8d8>
   1f6d8:	add	r1, pc, r1
   1f6dc:	add	r1, r1, #2576	; 0xa10
   1f6e0:	add	r2, pc, r2
   1f6e4:	add	r1, r1, #4
   1f6e8:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f6ec:	b	13450 <g_return_if_fail_warning@plt>
   1f6f0:	str	r6, [r4, #8]
   1f6f4:	mov	r0, r6
   1f6f8:	bl	1ab70 <g_unichar_xdigit_value@plt+0x6d0c>
   1f6fc:	cmp	r8, #0
   1f700:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f704:	mov	r0, r8
   1f708:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f70c:	b	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   1f710:	mov	r0, r5
   1f714:	b	1f6c0 <g_unichar_xdigit_value@plt+0xb85c>
   1f718:	cmp	r8, #0
   1f71c:	str	r6, [r4, #8]
   1f720:	bne	1f704 <g_unichar_xdigit_value@plt+0xb8a0>
   1f724:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f728:	andeq	r9, r1, r0, ror r0
   1f72c:	andeq	r9, r1, ip, lsr lr
   1f730:	andeq	r9, r1, r8, lsl r0
   1f734:	andeq	r9, r1, r8, lsr pc
   1f738:	andeq	r8, r1, r4, ror #31
   1f73c:	andeq	r9, r1, r8, lsr pc
   1f740:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f744:	mov	r4, r0
   1f748:	mov	r6, r1
   1f74c:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   1f750:	cmp	r4, #0
   1f754:	mov	r5, r0
   1f758:	beq	1f77c <g_unichar_xdigit_value@plt+0xb918>
   1f75c:	ldr	r9, [r4]
   1f760:	cmp	r0, r9
   1f764:	beq	1f7a0 <g_unichar_xdigit_value@plt+0xb93c>
   1f768:	mov	r0, r4
   1f76c:	mov	r1, r5
   1f770:	bl	1381c <g_type_check_value_holds@plt>
   1f774:	cmp	r0, #0
   1f778:	bne	1f7a0 <g_unichar_xdigit_value@plt+0xb93c>
   1f77c:	ldr	r1, [pc, #200]	; 1f84c <g_unichar_xdigit_value@plt+0xb9e8>
   1f780:	mov	r0, #0
   1f784:	ldr	r2, [pc, #196]	; 1f850 <g_unichar_xdigit_value@plt+0xb9ec>
   1f788:	add	r1, pc, r1
   1f78c:	add	r1, r1, #2592	; 0xa20
   1f790:	add	r2, pc, r2
   1f794:	add	r1, r1, #8
   1f798:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f79c:	b	13450 <g_return_if_fail_warning@plt>
   1f7a0:	cmp	r6, #0
   1f7a4:	ldr	r8, [r4, #8]
   1f7a8:	beq	1f7f8 <g_unichar_xdigit_value@plt+0xb994>
   1f7ac:	ldr	r7, [r6]
   1f7b0:	cmp	r7, #0
   1f7b4:	beq	1f7c4 <g_unichar_xdigit_value@plt+0xb960>
   1f7b8:	ldr	r3, [r7]
   1f7bc:	cmp	r5, r3
   1f7c0:	beq	1f844 <g_unichar_xdigit_value@plt+0xb9e0>
   1f7c4:	mov	r1, r5
   1f7c8:	mov	r0, r6
   1f7cc:	bl	13a98 <g_type_check_instance_is_a@plt>
   1f7d0:	cmp	r0, #0
   1f7d4:	bne	1f810 <g_unichar_xdigit_value@plt+0xb9ac>
   1f7d8:	ldr	r1, [pc, #116]	; 1f854 <g_unichar_xdigit_value@plt+0xb9f0>
   1f7dc:	ldr	r2, [pc, #116]	; 1f858 <g_unichar_xdigit_value@plt+0xb9f4>
   1f7e0:	add	r1, pc, r1
   1f7e4:	add	r1, r1, #2592	; 0xa20
   1f7e8:	add	r2, pc, r2
   1f7ec:	add	r1, r1, #8
   1f7f0:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f7f4:	b	13450 <g_return_if_fail_warning@plt>
   1f7f8:	cmp	r8, #0
   1f7fc:	str	r6, [r4, #8]
   1f800:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f804:	mov	r0, r8
   1f808:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f80c:	b	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   1f810:	ldr	r0, [r7]
   1f814:	mov	r1, r9
   1f818:	bl	13684 <g_value_type_compatible@plt>
   1f81c:	cmp	r0, #0
   1f820:	bne	1f7f8 <g_unichar_xdigit_value@plt+0xb994>
   1f824:	ldr	r1, [pc, #48]	; 1f85c <g_unichar_xdigit_value@plt+0xb9f8>
   1f828:	ldr	r2, [pc, #48]	; 1f860 <g_unichar_xdigit_value@plt+0xb9fc>
   1f82c:	add	r1, pc, r1
   1f830:	add	r1, r1, #2592	; 0xa20
   1f834:	add	r2, pc, r2
   1f838:	add	r1, r1, #8
   1f83c:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f840:	b	13450 <g_return_if_fail_warning@plt>
   1f844:	mov	r0, r5
   1f848:	b	1f814 <g_unichar_xdigit_value@plt+0xb9b0>
   1f84c:	andeq	r8, r1, r4, lsr pc
   1f850:	andeq	r9, r1, r0, lsl #26
   1f854:	ldrdeq	r8, [r1], -ip
   1f858:	strdeq	r9, [r1], -ip
   1f85c:	muleq	r1, r0, lr
   1f860:	andeq	r9, r1, r4, ror #27
   1f864:	ldr	r0, [r0, #8]
   1f868:	cmp	r0, #0
   1f86c:	bxeq	lr
   1f870:	b	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   1f874:	cmp	r0, #0
   1f878:	cmpne	r2, #0
   1f87c:	push	{r3, r4, r5, r6, r7, lr}
   1f880:	mov	r7, r2
   1f884:	mov	r6, r1
   1f888:	popeq	{r3, r4, r5, r6, r7, pc}
   1f88c:	cmp	r1, #0
   1f890:	pople	{r3, r4, r5, r6, r7, pc}
   1f894:	sub	r5, r0, #4
   1f898:	mov	r4, #0
   1f89c:	ldr	r0, [r5, #4]!
   1f8a0:	add	r4, r4, #1
   1f8a4:	cmp	r0, #0
   1f8a8:	beq	1f8b0 <g_unichar_xdigit_value@plt+0xba4c>
   1f8ac:	blx	r7
   1f8b0:	cmp	r4, r6
   1f8b4:	bne	1f89c <g_unichar_xdigit_value@plt+0xba38>
   1f8b8:	pop	{r3, r4, r5, r6, r7, pc}
   1f8bc:	b	1399c <g_free@plt>
   1f8c0:	cmp	r0, #0
   1f8c4:	bxeq	lr
   1f8c8:	b	13b94 <g_object_unref@plt>
   1f8cc:	push	{r3, r4, r5, r6, r7, lr}
   1f8d0:	subs	r7, r0, #0
   1f8d4:	mov	r4, r1
   1f8d8:	mov	r5, r2
   1f8dc:	beq	1f9b0 <g_unichar_xdigit_value@plt+0xbb4c>
   1f8e0:	cmp	r1, #0
   1f8e4:	blt	1f984 <g_unichar_xdigit_value@plt+0xbb20>
   1f8e8:	cmp	r5, #0
   1f8ec:	blt	1f930 <g_unichar_xdigit_value@plt+0xbacc>
   1f8f0:	add	r6, r4, r5
   1f8f4:	mov	r1, #0
   1f8f8:	mov	r2, r6
   1f8fc:	bl	13d08 <memchr@plt>
   1f900:	cmp	r0, #0
   1f904:	rsbne	r6, r7, r0
   1f908:	cmp	r4, r6
   1f90c:	ble	1f940 <g_unichar_xdigit_value@plt+0xbadc>
   1f910:	ldr	r1, [pc, #180]	; 1f9cc <g_unichar_xdigit_value@plt+0xbb68>
   1f914:	mov	r0, #0
   1f918:	ldr	r2, [pc, #176]	; 1f9d0 <g_unichar_xdigit_value@plt+0xbb6c>
   1f91c:	add	r1, pc, r1
   1f920:	add	r2, pc, r2
   1f924:	bl	13450 <g_return_if_fail_warning@plt>
   1f928:	mov	r0, #0
   1f92c:	pop	{r3, r4, r5, r6, r7, pc}
   1f930:	bl	13ba0 <strlen@plt>
   1f934:	mov	r6, r0
   1f938:	cmp	r4, r6
   1f93c:	bgt	1f910 <g_unichar_xdigit_value@plt+0xbaac>
   1f940:	cmp	r5, #0
   1f944:	rsblt	r5, r4, r6
   1f948:	add	r3, r4, r5
   1f94c:	cmp	r3, r6
   1f950:	bgt	1f964 <g_unichar_xdigit_value@plt+0xbb00>
   1f954:	add	r0, r7, r4
   1f958:	mov	r1, r5
   1f95c:	pop	{r3, r4, r5, r6, r7, lr}
   1f960:	b	134a4 <g_strndup@plt>
   1f964:	ldr	r1, [pc, #104]	; 1f9d4 <g_unichar_xdigit_value@plt+0xbb70>
   1f968:	mov	r0, #0
   1f96c:	ldr	r2, [pc, #100]	; 1f9d8 <g_unichar_xdigit_value@plt+0xbb74>
   1f970:	add	r1, pc, r1
   1f974:	add	r2, pc, r2
   1f978:	bl	13450 <g_return_if_fail_warning@plt>
   1f97c:	mov	r0, #0
   1f980:	pop	{r3, r4, r5, r6, r7, pc}
   1f984:	bl	13ba0 <strlen@plt>
   1f988:	adds	r4, r4, r0
   1f98c:	mov	r6, r0
   1f990:	bpl	1f940 <g_unichar_xdigit_value@plt+0xbadc>
   1f994:	ldr	r1, [pc, #64]	; 1f9dc <g_unichar_xdigit_value@plt+0xbb78>
   1f998:	mov	r0, #0
   1f99c:	ldr	r2, [pc, #60]	; 1f9e0 <g_unichar_xdigit_value@plt+0xbb7c>
   1f9a0:	add	r1, pc, r1
   1f9a4:	add	r2, pc, r2
   1f9a8:	bl	13450 <g_return_if_fail_warning@plt>
   1f9ac:	b	1f928 <g_unichar_xdigit_value@plt+0xbac4>
   1f9b0:	ldr	r1, [pc, #44]	; 1f9e4 <g_unichar_xdigit_value@plt+0xbb80>
   1f9b4:	ldr	r2, [pc, #44]	; 1f9e8 <g_unichar_xdigit_value@plt+0xbb84>
   1f9b8:	add	r1, pc, r1
   1f9bc:	add	r2, pc, r2
   1f9c0:	bl	13450 <g_return_if_fail_warning@plt>
   1f9c4:	mov	r0, #0
   1f9c8:	pop	{r3, r4, r5, r6, r7, pc}
   1f9cc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1f9d0:	muleq	r1, r4, ip
   1f9d4:	andeq	r9, r1, ip, lsr pc
   1f9d8:	andeq	r9, r1, r4, asr ip
   1f9dc:	andeq	r9, r1, ip, lsl #30
   1f9e0:	strdeq	r9, [r1], -r8
   1f9e4:	strdeq	r9, [r1], -r4
   1f9e8:	andeq	r8, r1, r8, lsr #14
   1f9ec:	push	{r4, lr}
   1f9f0:	subs	r4, r0, #0
   1f9f4:	beq	1fa10 <g_unichar_xdigit_value@plt+0xbbac>
   1f9f8:	bl	136f0 <g_strdup@plt>
   1f9fc:	mov	r4, r0
   1fa00:	bl	13c3c <g_strchug@plt>
   1fa04:	bl	13744 <g_strchomp@plt>
   1fa08:	mov	r0, r4
   1fa0c:	pop	{r4, pc}
   1fa10:	ldr	r1, [pc, #24]	; 1fa30 <g_unichar_xdigit_value@plt+0xbbcc>
   1fa14:	ldr	r2, [pc, #24]	; 1fa34 <g_unichar_xdigit_value@plt+0xbbd0>
   1fa18:	add	r1, pc, r1
   1fa1c:	add	r2, pc, r2
   1fa20:	add	r1, r1, #20
   1fa24:	bl	13450 <g_return_if_fail_warning@plt>
   1fa28:	mov	r0, r4
   1fa2c:	pop	{r4, pc}
   1fa30:	muleq	r1, r4, lr
   1fa34:	andeq	r8, r1, r8, asr #13
   1fa38:	ldr	r3, [pc, #1176]	; 1fed8 <g_unichar_xdigit_value@plt+0xc074>
   1fa3c:	subs	r1, r0, #0
   1fa40:	ldr	r2, [pc, #1172]	; 1fedc <g_unichar_xdigit_value@plt+0xc078>
   1fa44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fa48:	add	r3, pc, r3
   1fa4c:	sub	sp, sp, #124	; 0x7c
   1fa50:	mov	r4, #0
   1fa54:	str	r1, [sp, #40]	; 0x28
   1fa58:	ldr	r2, [r3, r2]
   1fa5c:	str	r4, [sp, #92]	; 0x5c
   1fa60:	str	r4, [sp, #96]	; 0x60
   1fa64:	ldr	r3, [r2]
   1fa68:	str	r2, [sp, #48]	; 0x30
   1fa6c:	str	r4, [sp, #100]	; 0x64
   1fa70:	str	r4, [sp, #104]	; 0x68
   1fa74:	str	r3, [sp, #116]	; 0x74
   1fa78:	str	r4, [sp, #108]	; 0x6c
   1fa7c:	str	r4, [sp, #112]	; 0x70
   1fa80:	str	r4, [sp, #76]	; 0x4c
   1fa84:	beq	1fdfc <g_unichar_xdigit_value@plt+0xbf98>
   1fa88:	ldr	r0, [pc, #1104]	; 1fee0 <g_unichar_xdigit_value@plt+0xc07c>
   1fa8c:	add	r1, sp, #92	; 0x5c
   1fa90:	str	r1, [sp, #20]
   1fa94:	mov	r8, r4
   1fa98:	add	r0, pc, r0
   1fa9c:	bl	136f0 <g_strdup@plt>
   1faa0:	ldr	r2, [sp, #40]	; 0x28
   1faa4:	add	r1, sp, #80	; 0x50
   1faa8:	str	r1, [sp, #24]
   1faac:	ldr	r1, [pc, #1072]	; 1fee4 <g_unichar_xdigit_value@plt+0xc080>
   1fab0:	ldr	r3, [r2, #12]
   1fab4:	add	r2, sp, #84	; 0x54
   1fab8:	add	r1, pc, r1
   1fabc:	str	r1, [sp, #44]	; 0x2c
   1fac0:	str	r2, [sp, #28]
   1fac4:	ldr	r1, [r3, #4]
   1fac8:	str	r0, [sp, #32]
   1facc:	add	r0, sp, #92	; 0x5c
   1fad0:	bl	137d4 <g_hash_table_iter_init@plt>
   1fad4:	add	r1, sp, #80	; 0x50
   1fad8:	add	r2, sp, #84	; 0x54
   1fadc:	add	r0, sp, #92	; 0x5c
   1fae0:	str	r4, [sp, #80]	; 0x50
   1fae4:	str	r4, [sp, #84]	; 0x54
   1fae8:	bl	13924 <g_hash_table_iter_next@plt>
   1faec:	mov	r5, r0
   1faf0:	mov	r0, r4
   1faf4:	bl	1399c <g_free@plt>
   1faf8:	ldr	r0, [sp, #80]	; 0x50
   1fafc:	bl	136f0 <g_strdup@plt>
   1fb00:	ldr	r2, [pc, #992]	; 1fee8 <g_unichar_xdigit_value@plt+0xc084>
   1fb04:	ldr	r3, [pc, #992]	; 1feec <g_unichar_xdigit_value@plt+0xc088>
   1fb08:	add	r2, pc, r2
   1fb0c:	ldr	r1, [pc, #988]	; 1fef0 <g_unichar_xdigit_value@plt+0xc08c>
   1fb10:	str	r2, [sp, #64]	; 0x40
   1fb14:	add	r3, pc, r3
   1fb18:	ldr	r2, [pc, #980]	; 1fef4 <g_unichar_xdigit_value@plt+0xc090>
   1fb1c:	add	r1, pc, r1
   1fb20:	str	r3, [sp, #56]	; 0x38
   1fb24:	add	r2, pc, r2
   1fb28:	str	r1, [sp, #60]	; 0x3c
   1fb2c:	str	r2, [sp, #68]	; 0x44
   1fb30:	mov	r7, r0
   1fb34:	ldr	r0, [sp, #84]	; 0x54
   1fb38:	cmp	r0, #0
   1fb3c:	moveq	r4, r0
   1fb40:	beq	1fb4c <g_unichar_xdigit_value@plt+0xbce8>
   1fb44:	bl	133f0 <g_object_ref@plt>
   1fb48:	mov	r4, r0
   1fb4c:	cmp	r5, #0
   1fb50:	beq	1fbbc <g_unichar_xdigit_value@plt+0xbd58>
   1fb54:	mov	r0, r4
   1fb58:	bl	22b3c <g_unichar_xdigit_value@plt+0xecd8>
   1fb5c:	cmp	r0, #0
   1fb60:	bne	1fc8c <g_unichar_xdigit_value@plt+0xbe28>
   1fb64:	add	r1, sp, #80	; 0x50
   1fb68:	add	r2, sp, #84	; 0x54
   1fb6c:	add	r0, sp, #92	; 0x5c
   1fb70:	str	r8, [sp, #80]	; 0x50
   1fb74:	str	r8, [sp, #84]	; 0x54
   1fb78:	bl	13924 <g_hash_table_iter_next@plt>
   1fb7c:	mov	r5, r0
   1fb80:	mov	r0, r7
   1fb84:	bl	1399c <g_free@plt>
   1fb88:	ldr	r0, [sp, #80]	; 0x50
   1fb8c:	bl	136f0 <g_strdup@plt>
   1fb90:	cmp	r4, #0
   1fb94:	mov	r7, r0
   1fb98:	beq	1fb34 <g_unichar_xdigit_value@plt+0xbcd0>
   1fb9c:	mov	r0, r4
   1fba0:	bl	13b94 <g_object_unref@plt>
   1fba4:	ldr	r0, [sp, #84]	; 0x54
   1fba8:	cmp	r0, #0
   1fbac:	moveq	r4, r0
   1fbb0:	bne	1fb44 <g_unichar_xdigit_value@plt+0xbce0>
   1fbb4:	cmp	r5, #0
   1fbb8:	bne	1fb54 <g_unichar_xdigit_value@plt+0xbcf0>
   1fbbc:	ldr	r2, [sp, #40]	; 0x28
   1fbc0:	add	r6, sp, #76	; 0x4c
   1fbc4:	ldr	r3, [r2, #12]
   1fbc8:	ldr	r0, [r3]
   1fbcc:	bl	13b70 <g_path_get_dirname@plt>
   1fbd0:	mov	r1, #448	; 0x1c0
   1fbd4:	mov	r8, r0
   1fbd8:	bl	1345c <g_mkdir_with_parents@plt>
   1fbdc:	ldr	r3, [sp, #40]	; 0x28
   1fbe0:	mvn	r2, #0
   1fbe4:	ldr	r1, [sp, #32]
   1fbe8:	ldr	r0, [r3, #12]
   1fbec:	mov	r3, r6
   1fbf0:	ldr	r0, [r0]
   1fbf4:	bl	137f8 <g_file_set_contents@plt>
   1fbf8:	ldr	r3, [sp, #76]	; 0x4c
   1fbfc:	cmp	r3, #0
   1fc00:	beq	1fe30 <g_unichar_xdigit_value@plt+0xbfcc>
   1fc04:	ldr	sl, [r3]
   1fc08:	bl	13d14 <g_file_error_quark@plt>
   1fc0c:	cmp	sl, r0
   1fc10:	beq	1fe5c <g_unichar_xdigit_value@plt+0xbff8>
   1fc14:	mov	r0, r8
   1fc18:	bl	1399c <g_free@plt>
   1fc1c:	cmp	r4, #0
   1fc20:	beq	1fc2c <g_unichar_xdigit_value@plt+0xbdc8>
   1fc24:	mov	r0, r4
   1fc28:	bl	13b94 <g_object_unref@plt>
   1fc2c:	mov	r0, r7
   1fc30:	bl	1399c <g_free@plt>
   1fc34:	ldr	r0, [sp, #32]
   1fc38:	bl	1399c <g_free@plt>
   1fc3c:	ldr	r4, [sp, #76]	; 0x4c
   1fc40:	ldr	r0, [r4]
   1fc44:	bl	139f0 <g_quark_to_string@plt>
   1fc48:	movw	r3, #1400	; 0x578
   1fc4c:	ldr	r2, [pc, #676]	; 1fef8 <g_unichar_xdigit_value@plt+0xc094>
   1fc50:	mov	r1, #8
   1fc54:	str	r3, [sp]
   1fc58:	ldr	r3, [pc, #668]	; 1fefc <g_unichar_xdigit_value@plt+0xc098>
   1fc5c:	add	r2, pc, r2
   1fc60:	ldr	ip, [r4, #8]
   1fc64:	add	r3, pc, r3
   1fc68:	str	r0, [sp, #8]
   1fc6c:	mov	r0, #0
   1fc70:	str	ip, [sp, #4]
   1fc74:	ldr	ip, [r4, #4]
   1fc78:	str	ip, [sp, #12]
   1fc7c:	bl	13558 <g_log@plt>
   1fc80:	mov	r0, r6
   1fc84:	bl	13aec <g_clear_error@plt>
   1fc88:	b	1fe14 <g_unichar_xdigit_value@plt+0xbfb0>
   1fc8c:	mov	r0, r4
   1fc90:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   1fc94:	add	r1, sp, #88	; 0x58
   1fc98:	str	r0, [sp, #36]	; 0x24
   1fc9c:	mov	r0, r4
   1fca0:	bl	22bc0 <g_unichar_xdigit_value@plt+0xed5c>
   1fca4:	ldr	fp, [sp, #88]	; 0x58
   1fca8:	subs	r6, r0, #0
   1fcac:	beq	1fdcc <g_unichar_xdigit_value@plt+0xbf68>
   1fcb0:	cmp	fp, #0
   1fcb4:	ble	1fdc4 <g_unichar_xdigit_value@plt+0xbf60>
   1fcb8:	mov	r5, #0
   1fcbc:	mov	sl, #1
   1fcc0:	mov	r9, r5
   1fcc4:	b	1fcec <g_unichar_xdigit_value@plt+0xbe88>
   1fcc8:	cmp	fp, r9
   1fccc:	ble	1fd00 <g_unichar_xdigit_value@plt+0xbe9c>
   1fcd0:	ldr	r0, [r6, r5]
   1fcd4:	cmp	r0, #0
   1fcd8:	beq	1fce0 <g_unichar_xdigit_value@plt+0xbe7c>
   1fcdc:	bl	13ba0 <strlen@plt>
   1fce0:	add	sl, sl, r0
   1fce4:	add	r9, r9, #1
   1fce8:	add	r5, r5, #4
   1fcec:	cmn	fp, #1
   1fcf0:	bne	1fcc8 <g_unichar_xdigit_value@plt+0xbe64>
   1fcf4:	ldr	r0, [r6, r5]
   1fcf8:	cmp	r0, #0
   1fcfc:	bne	1fcdc <g_unichar_xdigit_value@plt+0xbe78>
   1fd00:	cmp	r9, #0
   1fd04:	beq	1fddc <g_unichar_xdigit_value@plt+0xbf78>
   1fd08:	sub	r0, r9, #1
   1fd0c:	add	r0, r0, sl
   1fd10:	bl	13798 <g_malloc@plt>
   1fd14:	ldr	r1, [r6]
   1fd18:	mov	fp, r0
   1fd1c:	bl	13abc <g_stpcpy@plt>
   1fd20:	cmp	r9, #1
   1fd24:	ble	1fd60 <g_unichar_xdigit_value@plt+0xbefc>
   1fd28:	str	r7, [sp, #52]	; 0x34
   1fd2c:	mov	r5, #1
   1fd30:	ldr	r7, [sp, #56]	; 0x38
   1fd34:	ldr	sl, [sp, #60]	; 0x3c
   1fd38:	mov	r1, r7
   1fd3c:	add	r5, r5, #1
   1fd40:	bl	13abc <g_stpcpy@plt>
   1fd44:	ldr	r1, [r6, #4]!
   1fd48:	cmp	r1, #0
   1fd4c:	moveq	r1, sl
   1fd50:	bl	13abc <g_stpcpy@plt>
   1fd54:	cmp	r5, r9
   1fd58:	bne	1fd38 <g_unichar_xdigit_value@plt+0xbed4>
   1fd5c:	ldr	r7, [sp, #52]	; 0x34
   1fd60:	mov	r0, r4
   1fd64:	bl	22c10 <g_unichar_xdigit_value@plt+0xedac>
   1fd68:	mov	r5, r0
   1fd6c:	mov	r0, r4
   1fd70:	bl	22c50 <g_unichar_xdigit_value@plt+0xedec>
   1fd74:	mov	r3, r5
   1fd78:	ldr	r1, [sp, #36]	; 0x24
   1fd7c:	mov	r2, fp
   1fd80:	str	r0, [sp]
   1fd84:	ldr	r0, [sp, #44]	; 0x2c
   1fd88:	bl	13774 <g_strdup_printf@plt>
   1fd8c:	mov	r2, #0
   1fd90:	mov	r5, r0
   1fd94:	ldr	r0, [sp, #32]
   1fd98:	mov	r1, r5
   1fd9c:	bl	13af8 <g_strconcat@plt>
   1fda0:	mov	r3, r0
   1fda4:	ldr	r0, [sp, #32]
   1fda8:	str	r3, [sp, #32]
   1fdac:	bl	1399c <g_free@plt>
   1fdb0:	mov	r0, r5
   1fdb4:	bl	1399c <g_free@plt>
   1fdb8:	mov	r0, fp
   1fdbc:	bl	1399c <g_free@plt>
   1fdc0:	b	1fb64 <g_unichar_xdigit_value@plt+0xbd00>
   1fdc4:	cmn	fp, #1
   1fdc8:	beq	1fdec <g_unichar_xdigit_value@plt+0xbf88>
   1fdcc:	ldr	r0, [sp, #64]	; 0x40
   1fdd0:	bl	136f0 <g_strdup@plt>
   1fdd4:	mov	fp, r0
   1fdd8:	b	1fd60 <g_unichar_xdigit_value@plt+0xbefc>
   1fddc:	ldr	r0, [sp, #68]	; 0x44
   1fde0:	bl	136f0 <g_strdup@plt>
   1fde4:	mov	fp, r0
   1fde8:	b	1fd60 <g_unichar_xdigit_value@plt+0xbefc>
   1fdec:	ldr	r3, [r6]
   1fdf0:	cmp	r3, #0
   1fdf4:	bne	1fcb8 <g_unichar_xdigit_value@plt+0xbe54>
   1fdf8:	b	1fdcc <g_unichar_xdigit_value@plt+0xbf68>
   1fdfc:	ldr	r1, [pc, #252]	; 1ff00 <g_unichar_xdigit_value@plt+0xc09c>
   1fe00:	ldr	r2, [pc, #252]	; 1ff04 <g_unichar_xdigit_value@plt+0xc0a0>
   1fe04:	add	r1, pc, r1
   1fe08:	add	r2, pc, r2
   1fe0c:	add	r1, r1, #36	; 0x24
   1fe10:	bl	13450 <g_return_if_fail_warning@plt>
   1fe14:	ldr	r1, [sp, #48]	; 0x30
   1fe18:	ldr	r2, [sp, #116]	; 0x74
   1fe1c:	ldr	r3, [r1]
   1fe20:	cmp	r2, r3
   1fe24:	bne	1fed4 <g_unichar_xdigit_value@plt+0xc070>
   1fe28:	add	sp, sp, #124	; 0x7c
   1fe2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe30:	mov	r0, r8
   1fe34:	bl	1399c <g_free@plt>
   1fe38:	cmp	r4, #0
   1fe3c:	beq	1fe48 <g_unichar_xdigit_value@plt+0xbfe4>
   1fe40:	mov	r0, r4
   1fe44:	bl	13b94 <g_object_unref@plt>
   1fe48:	mov	r0, r7
   1fe4c:	bl	1399c <g_free@plt>
   1fe50:	ldr	r0, [sp, #32]
   1fe54:	bl	1399c <g_free@plt>
   1fe58:	b	1fe14 <g_unichar_xdigit_value@plt+0xbfb0>
   1fe5c:	ldr	r0, [sp, #76]	; 0x4c
   1fe60:	str	r5, [sp, #76]	; 0x4c
   1fe64:	cmp	r0, #0
   1fe68:	beq	1fe30 <g_unichar_xdigit_value@plt+0xbfcc>
   1fe6c:	bl	13498 <g_error_free@plt>
   1fe70:	ldr	r3, [sp, #76]	; 0x4c
   1fe74:	cmp	r3, #0
   1fe78:	beq	1fe30 <g_unichar_xdigit_value@plt+0xbfcc>
   1fe7c:	mov	r0, r8
   1fe80:	bl	1399c <g_free@plt>
   1fe84:	cmp	r4, #0
   1fe88:	beq	1fe94 <g_unichar_xdigit_value@plt+0xc030>
   1fe8c:	mov	r0, r4
   1fe90:	bl	13b94 <g_object_unref@plt>
   1fe94:	mov	r0, r7
   1fe98:	bl	1399c <g_free@plt>
   1fe9c:	ldr	r0, [sp, #32]
   1fea0:	bl	1399c <g_free@plt>
   1fea4:	ldr	r4, [sp, #76]	; 0x4c
   1fea8:	ldr	r0, [r4]
   1feac:	bl	139f0 <g_quark_to_string@plt>
   1feb0:	movw	r3, #1419	; 0x58b
   1feb4:	ldr	r2, [pc, #76]	; 1ff08 <g_unichar_xdigit_value@plt+0xc0a4>
   1feb8:	mov	r1, #8
   1febc:	str	r3, [sp]
   1fec0:	ldr	r3, [pc, #68]	; 1ff0c <g_unichar_xdigit_value@plt+0xc0a8>
   1fec4:	add	r2, pc, r2
   1fec8:	ldr	ip, [r4, #8]
   1fecc:	add	r3, pc, r3
   1fed0:	b	1fc68 <g_unichar_xdigit_value@plt+0xbe04>
   1fed4:	bl	13978 <__stack_chk_fail@plt>
   1fed8:			; <UNDEFINED> instruction: 0x000315b0
   1fedc:	muleq	r0, r0, r3
   1fee0:	andeq	r9, r1, ip, lsr #13
   1fee4:	ldrdeq	r9, [r1], -r0
   1fee8:	andeq	r9, r1, ip, lsr r6
   1feec:	andeq	r9, r1, r0, lsl #21
   1fef0:	andeq	r9, r1, r8, lsr #12
   1fef4:	andeq	r9, r1, r0, lsr #12
   1fef8:	andeq	r8, r1, ip, lsr r4
   1fefc:	andeq	r9, r1, r4, lsr lr
   1ff00:	andeq	r9, r1, r8, lsr #21
   1ff04:	ldrdeq	r8, [r1], -ip
   1ff08:	strdeq	r9, [r1], -ip
   1ff0c:	andeq	r9, r1, ip, asr #23
   1ff10:	push	{r4, lr}
   1ff14:	subs	r4, r0, #0
   1ff18:	beq	1ff38 <g_unichar_xdigit_value@plt+0xc0d4>
   1ff1c:	mov	r2, r1
   1ff20:	mvn	r1, #0
   1ff24:	bl	13dbc <g_utf8_strchr@plt>
   1ff28:	cmp	r0, #0
   1ff2c:	beq	1ff58 <g_unichar_xdigit_value@plt+0xc0f4>
   1ff30:	rsb	r0, r4, r0
   1ff34:	pop	{r4, pc}
   1ff38:	ldr	r1, [pc, #32]	; 1ff60 <g_unichar_xdigit_value@plt+0xc0fc>
   1ff3c:	ldr	r2, [pc, #32]	; 1ff64 <g_unichar_xdigit_value@plt+0xc100>
   1ff40:	add	r1, pc, r1
   1ff44:	add	r2, pc, r2
   1ff48:	add	r1, r1, #60	; 0x3c
   1ff4c:	bl	13450 <g_return_if_fail_warning@plt>
   1ff50:	mov	r0, r4
   1ff54:	pop	{r4, pc}
   1ff58:	mvn	r0, #0
   1ff5c:	pop	{r4, pc}
   1ff60:	andeq	r9, r1, ip, ror #18
   1ff64:	andeq	r8, r1, r0, lsr #3
   1ff68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff6c:	sub	sp, sp, #52	; 0x34
   1ff70:	ldr	r6, [pc, #1244]	; 20454 <g_unichar_xdigit_value@plt+0xc5f0>
   1ff74:	subs	r8, r0, #0
   1ff78:	ldr	r3, [pc, #1240]	; 20458 <g_unichar_xdigit_value@plt+0xc5f4>
   1ff7c:	mov	r5, r1
   1ff80:	add	r6, pc, r6
   1ff84:	ldr	r3, [r6, r3]
   1ff88:	str	r3, [sp, #24]
   1ff8c:	ldr	r3, [r3]
   1ff90:	str	r3, [sp, #44]	; 0x2c
   1ff94:	beq	20334 <g_unichar_xdigit_value@plt+0xc4d0>
   1ff98:	cmp	r1, #0
   1ff9c:	beq	20314 <g_unichar_xdigit_value@plt+0xc4b0>
   1ffa0:	mov	r0, r5
   1ffa4:	mov	r1, #61	; 0x3d
   1ffa8:	bl	1ff10 <g_unichar_xdigit_value@plt+0xc0ac>
   1ffac:	subs	r7, r0, #0
   1ffb0:	blt	20314 <g_unichar_xdigit_value@plt+0xc4b0>
   1ffb4:	mov	r2, r7
   1ffb8:	mov	r1, #0
   1ffbc:	mov	r0, r5
   1ffc0:	bl	1f8cc <g_unichar_xdigit_value@plt+0xba68>
   1ffc4:	mov	r8, r0
   1ffc8:	bl	1f9ec <g_unichar_xdigit_value@plt+0xbb88>
   1ffcc:	mov	r4, r0
   1ffd0:	mov	r0, r8
   1ffd4:	bl	1399c <g_free@plt>
   1ffd8:	add	r1, r7, #1
   1ffdc:	mvn	r2, #0
   1ffe0:	mov	r0, r5
   1ffe4:	bl	1f8cc <g_unichar_xdigit_value@plt+0xba68>
   1ffe8:	mov	r7, r0
   1ffec:	bl	1f9ec <g_unichar_xdigit_value@plt+0xbb88>
   1fff0:	mov	r5, r0
   1fff4:	mov	r0, r7
   1fff8:	bl	1399c <g_free@plt>
   1fffc:	cmp	r4, #0
   20000:	beq	20304 <g_unichar_xdigit_value@plt+0xc4a0>
   20004:	cmp	r5, #0
   20008:	beq	20304 <g_unichar_xdigit_value@plt+0xc4a0>
   2000c:	ldr	r7, [pc, #1096]	; 2045c <g_unichar_xdigit_value@plt+0xc5f8>
   20010:	add	r7, pc, r7
   20014:	mov	r0, r7
   20018:	bl	136f0 <g_strdup@plt>
   2001c:	mov	r9, r0
   20020:	mov	r0, r7
   20024:	bl	136f0 <g_strdup@plt>
   20028:	mov	r1, #64	; 0x40
   2002c:	mov	r7, r0
   20030:	mov	r0, r5
   20034:	bl	1ff10 <g_unichar_xdigit_value@plt+0xc0ac>
   20038:	subs	sl, r0, #0
   2003c:	mov	r0, r5
   20040:	blt	2031c <g_unichar_xdigit_value@plt+0xc4b8>
   20044:	mov	r1, #0
   20048:	mov	r2, sl
   2004c:	bl	1f8cc <g_unichar_xdigit_value@plt+0xba68>
   20050:	mov	fp, r0
   20054:	bl	1f9ec <g_unichar_xdigit_value@plt+0xbb88>
   20058:	mov	r8, r0
   2005c:	mov	r0, r9
   20060:	bl	1399c <g_free@plt>
   20064:	mov	r0, fp
   20068:	bl	1399c <g_free@plt>
   2006c:	add	r1, sl, #1
   20070:	mvn	r2, #0
   20074:	mov	r0, r5
   20078:	bl	1f8cc <g_unichar_xdigit_value@plt+0xba68>
   2007c:	mov	r9, r0
   20080:	bl	1f9ec <g_unichar_xdigit_value@plt+0xbb88>
   20084:	str	r0, [sp, #28]
   20088:	mov	r0, r7
   2008c:	bl	1399c <g_free@plt>
   20090:	mov	r0, r9
   20094:	bl	1399c <g_free@plt>
   20098:	cmp	r8, #0
   2009c:	beq	202f4 <g_unichar_xdigit_value@plt+0xc490>
   200a0:	mov	r0, r4
   200a4:	mov	r1, #40	; 0x28
   200a8:	bl	1ff10 <g_unichar_xdigit_value@plt+0xc0ac>
   200ac:	subs	r7, r0, #0
   200b0:	blt	202f4 <g_unichar_xdigit_value@plt+0xc490>
   200b4:	mov	r2, r7
   200b8:	mov	r1, #0
   200bc:	mov	r0, r4
   200c0:	bl	1f8cc <g_unichar_xdigit_value@plt+0xba68>
   200c4:	mov	r9, r0
   200c8:	bl	1f9ec <g_unichar_xdigit_value@plt+0xbb88>
   200cc:	mov	fp, r0
   200d0:	mov	r0, r9
   200d4:	bl	1399c <g_free@plt>
   200d8:	add	r1, r7, #1
   200dc:	mvn	r2, #0
   200e0:	mov	r0, r4
   200e4:	bl	1f8cc <g_unichar_xdigit_value@plt+0xba68>
   200e8:	mov	r9, r0
   200ec:	bl	1f9ec <g_unichar_xdigit_value@plt+0xbb88>
   200f0:	mov	r7, r0
   200f4:	mov	r0, r9
   200f8:	bl	1399c <g_free@plt>
   200fc:	cmp	fp, #0
   20100:	beq	202e4 <g_unichar_xdigit_value@plt+0xc480>
   20104:	cmp	r7, #0
   20108:	beq	202e4 <g_unichar_xdigit_value@plt+0xc480>
   2010c:	mov	r9, #0
   20110:	str	r9, [sp, #40]	; 0x28
   20114:	ldrb	r3, [r7]
   20118:	cmp	r3, r9
   2011c:	beq	202d4 <g_unichar_xdigit_value@plt+0xc470>
   20120:	ldr	sl, [pc, #824]	; 20460 <g_unichar_xdigit_value@plt+0xc5fc>
   20124:	ldr	r2, [pc, #824]	; 20464 <g_unichar_xdigit_value@plt+0xc600>
   20128:	add	sl, pc, sl
   2012c:	add	r2, pc, r2
   20130:	str	r2, [sp, #36]	; 0x24
   20134:	mov	r0, sl
   20138:	mov	r1, r2
   2013c:	bl	13e58 <g_strcmp0@plt>
   20140:	cmp	r0, #0
   20144:	beq	202d4 <g_unichar_xdigit_value@plt+0xc470>
   20148:	add	r1, sp, #40	; 0x28
   2014c:	mov	r0, sl
   20150:	str	r1, [sp, #32]
   20154:	mvn	r1, #0
   20158:	bl	13cfc <g_regex_escape_string@plt>
   2015c:	mov	r2, r9
   20160:	add	r3, sp, #40	; 0x28
   20164:	mov	r1, r9
   20168:	str	r0, [sp, #20]
   2016c:	bl	138c4 <g_regex_new@plt>
   20170:	ldr	ip, [sp, #20]
   20174:	mov	sl, r0
   20178:	mov	r0, ip
   2017c:	bl	1399c <g_free@plt>
   20180:	ldr	r2, [sp, #40]	; 0x28
   20184:	cmp	r2, #0
   20188:	beq	20354 <g_unichar_xdigit_value@plt+0xc4f0>
   2018c:	ldr	sl, [r2]
   20190:	bl	13a80 <g_regex_error_quark@plt>
   20194:	cmp	sl, r0
   20198:	beq	20428 <g_unichar_xdigit_value@plt+0xc5c4>
   2019c:	ldr	ip, [sp, #40]	; 0x28
   201a0:	mov	sl, r9
   201a4:	ldr	r0, [ip]
   201a8:	str	ip, [sp, #20]
   201ac:	bl	139f0 <g_quark_to_string@plt>
   201b0:	ldr	ip, [sp, #20]
   201b4:	movw	r3, #849	; 0x351
   201b8:	str	r3, [sp]
   201bc:	mov	r1, #8
   201c0:	ldr	r2, [pc, #672]	; 20468 <g_unichar_xdigit_value@plt+0xc604>
   201c4:	ldr	r3, [ip, #8]
   201c8:	add	r2, pc, r2
   201cc:	str	r3, [sp, #4]
   201d0:	ldr	r3, [pc, #660]	; 2046c <g_unichar_xdigit_value@plt+0xc608>
   201d4:	add	r3, pc, r3
   201d8:	str	r0, [sp, #8]
   201dc:	mov	r0, r9
   201e0:	ldr	ip, [ip, #4]
   201e4:	str	ip, [sp, #12]
   201e8:	bl	13558 <g_log@plt>
   201ec:	add	r0, sp, #40	; 0x28
   201f0:	bl	13aec <g_clear_error@plt>
   201f4:	mov	r0, r7
   201f8:	bl	1399c <g_free@plt>
   201fc:	ldr	r1, [pc, #620]	; 20470 <g_unichar_xdigit_value@plt+0xc60c>
   20200:	mov	r0, sl
   20204:	mov	r2, #0
   20208:	add	r1, pc, r1
   2020c:	bl	1348c <g_strsplit_set@plt>
   20210:	subs	r9, r0, #0
   20214:	moveq	r7, r9
   20218:	beq	20240 <g_unichar_xdigit_value@plt+0xc3dc>
   2021c:	ldr	r7, [r9]
   20220:	cmp	r7, #0
   20224:	beq	20240 <g_unichar_xdigit_value@plt+0xc3dc>
   20228:	mov	r3, r9
   2022c:	mov	r7, #0
   20230:	ldr	r2, [r3, #4]!
   20234:	add	r7, r7, #1
   20238:	cmp	r2, #0
   2023c:	bne	20230 <g_unichar_xdigit_value@plt+0xc3cc>
   20240:	ldr	r2, [sp, #28]
   20244:	mov	r1, r9
   20248:	mov	r3, r8
   2024c:	mov	r0, fp
   20250:	str	r2, [sp]
   20254:	mov	r2, r7
   20258:	bl	22d10 <g_unichar_xdigit_value@plt+0xeeac>
   2025c:	ldr	r3, [pc, #528]	; 20474 <g_unichar_xdigit_value@plt+0xc610>
   20260:	mov	r1, r7
   20264:	ldr	r2, [r6, r3]
   20268:	mov	ip, r0
   2026c:	mov	r0, r9
   20270:	str	ip, [sp, #20]
   20274:	bl	1f874 <g_unichar_xdigit_value@plt+0xba10>
   20278:	mov	r0, r9
   2027c:	bl	1399c <g_free@plt>
   20280:	mov	r0, sl
   20284:	bl	1399c <g_free@plt>
   20288:	mov	r0, fp
   2028c:	bl	1399c <g_free@plt>
   20290:	ldr	r0, [sp, #28]
   20294:	bl	1399c <g_free@plt>
   20298:	mov	r0, r8
   2029c:	bl	1399c <g_free@plt>
   202a0:	mov	r0, r5
   202a4:	bl	1399c <g_free@plt>
   202a8:	mov	r0, r4
   202ac:	bl	1399c <g_free@plt>
   202b0:	ldr	ip, [sp, #20]
   202b4:	mov	r0, ip
   202b8:	ldr	r1, [sp, #24]
   202bc:	ldr	r2, [sp, #44]	; 0x2c
   202c0:	ldr	r3, [r1]
   202c4:	cmp	r2, r3
   202c8:	bne	20424 <g_unichar_xdigit_value@plt+0xc5c0>
   202cc:	add	sp, sp, #52	; 0x34
   202d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202d4:	mov	r0, r7
   202d8:	bl	136f0 <g_strdup@plt>
   202dc:	mov	sl, r0
   202e0:	b	201f4 <g_unichar_xdigit_value@plt+0xc390>
   202e4:	mov	r0, r7
   202e8:	bl	1399c <g_free@plt>
   202ec:	mov	r0, fp
   202f0:	bl	1399c <g_free@plt>
   202f4:	ldr	r0, [sp, #28]
   202f8:	bl	1399c <g_free@plt>
   202fc:	mov	r0, r8
   20300:	bl	1399c <g_free@plt>
   20304:	mov	r0, r5
   20308:	bl	1399c <g_free@plt>
   2030c:	mov	r0, r4
   20310:	bl	1399c <g_free@plt>
   20314:	mov	r0, #0
   20318:	b	202b8 <g_unichar_xdigit_value@plt+0xc454>
   2031c:	str	r7, [sp, #28]
   20320:	bl	136f0 <g_strdup@plt>
   20324:	mov	r8, r0
   20328:	mov	r0, r9
   2032c:	bl	1399c <g_free@plt>
   20330:	b	20098 <g_unichar_xdigit_value@plt+0xc234>
   20334:	ldr	r1, [pc, #316]	; 20478 <g_unichar_xdigit_value@plt+0xc614>
   20338:	ldr	r2, [pc, #316]	; 2047c <g_unichar_xdigit_value@plt+0xc618>
   2033c:	add	r1, pc, r1
   20340:	add	r2, pc, r2
   20344:	add	r1, r1, #100	; 0x64
   20348:	bl	13450 <g_return_if_fail_warning@plt>
   2034c:	mov	r0, r8
   20350:	b	202b8 <g_unichar_xdigit_value@plt+0xc454>
   20354:	ldr	r3, [sp, #36]	; 0x24
   20358:	add	r1, sp, #40	; 0x28
   2035c:	str	r2, [sp, #4]
   20360:	mov	r0, sl
   20364:	str	r1, [sp, #8]
   20368:	mov	r1, r7
   2036c:	str	r3, [sp]
   20370:	mov	r3, r2
   20374:	mvn	r2, #0
   20378:	bl	1390c <g_regex_replace_literal@plt>
   2037c:	mov	r9, r0
   20380:	ldr	r0, [sp, #40]	; 0x28
   20384:	cmp	r0, #0
   20388:	beq	20404 <g_unichar_xdigit_value@plt+0xc5a0>
   2038c:	cmp	sl, #0
   20390:	beq	203a0 <g_unichar_xdigit_value@plt+0xc53c>
   20394:	mov	r0, sl
   20398:	bl	13780 <g_regex_unref@plt>
   2039c:	ldr	r0, [sp, #40]	; 0x28
   203a0:	ldr	r9, [r0]
   203a4:	bl	13a80 <g_regex_error_quark@plt>
   203a8:	cmp	r9, r0
   203ac:	beq	20428 <g_unichar_xdigit_value@plt+0xc5c4>
   203b0:	ldr	r9, [sp, #40]	; 0x28
   203b4:	mov	sl, #0
   203b8:	ldr	r0, [r9]
   203bc:	bl	139f0 <g_quark_to_string@plt>
   203c0:	movw	r3, #862	; 0x35e
   203c4:	str	r3, [sp]
   203c8:	mov	r1, #8
   203cc:	ldr	r3, [r9, #8]
   203d0:	ldr	r2, [pc, #168]	; 20480 <g_unichar_xdigit_value@plt+0xc61c>
   203d4:	str	r3, [sp, #4]
   203d8:	add	r2, pc, r2
   203dc:	ldr	r3, [pc, #160]	; 20484 <g_unichar_xdigit_value@plt+0xc620>
   203e0:	add	r3, pc, r3
   203e4:	str	r0, [sp, #8]
   203e8:	mov	r0, sl
   203ec:	ldr	ip, [r9, #4]
   203f0:	str	ip, [sp, #12]
   203f4:	bl	13558 <g_log@plt>
   203f8:	add	r0, sp, #40	; 0x28
   203fc:	bl	13aec <g_clear_error@plt>
   20400:	b	201f4 <g_unichar_xdigit_value@plt+0xc390>
   20404:	bl	1399c <g_free@plt>
   20408:	cmp	sl, #0
   2040c:	moveq	sl, r9
   20410:	beq	201f4 <g_unichar_xdigit_value@plt+0xc390>
   20414:	mov	r0, sl
   20418:	mov	sl, r9
   2041c:	bl	13780 <g_regex_unref@plt>
   20420:	b	201f4 <g_unichar_xdigit_value@plt+0xc390>
   20424:	bl	13978 <__stack_chk_fail@plt>
   20428:	ldr	r3, [pc, #88]	; 20488 <g_unichar_xdigit_value@plt+0xc624>
   2042c:	mov	ip, #0
   20430:	ldr	r1, [pc, #84]	; 2048c <g_unichar_xdigit_value@plt+0xc628>
   20434:	mov	r0, ip
   20438:	add	r3, pc, r3
   2043c:	str	ip, [sp]
   20440:	add	r3, r3, #84	; 0x54
   20444:	add	r1, pc, r1
   20448:	movw	r2, #879	; 0x36f
   2044c:	str	ip, [sp, #40]	; 0x28
   20450:	bl	13d2c <g_assertion_message_expr@plt>
   20454:	andeq	r1, r3, r8, ror r0
   20458:	muleq	r0, r0, r3
   2045c:	andeq	r9, r1, r4, lsr r1
   20460:	andeq	r9, r1, r8, lsl #9
   20464:	andeq	r9, r1, r8, lsl r0
   20468:	ldrdeq	r7, [r1], -r0
   2046c:	andeq	r9, r1, r4, asr #17
   20470:	andeq	r9, r1, ip, lsl #7
   20474:	andeq	r0, r0, r4, lsr #7
   20478:	andeq	r9, r1, r0, ror r5
   2047c:	andeq	r7, r1, r4, lsr #27
   20480:	andeq	r7, r1, r0, asr #25
   20484:			; <UNDEFINED> instruction: 0x000196b8
   20488:	andeq	r9, r1, r4, ror r4
   2048c:	andeq	r9, r1, r4, asr r6
   20490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20494:	sub	sp, sp, #76	; 0x4c
   20498:	ldr	r3, [pc, #836]	; 207e4 <g_unichar_xdigit_value@plt+0xc980>
   2049c:	subs	r5, r0, #0
   204a0:	str	r1, [sp, #28]
   204a4:	mov	r4, #0
   204a8:	add	r3, pc, r3
   204ac:	str	r3, [sp, #20]
   204b0:	ldr	ip, [sp, #20]
   204b4:	ldr	r3, [pc, #812]	; 207e8 <g_unichar_xdigit_value@plt+0xc984>
   204b8:	ldr	r3, [ip, r3]
   204bc:	str	r4, [sp, #44]	; 0x2c
   204c0:	str	r4, [sp, #48]	; 0x30
   204c4:	str	r3, [sp, #24]
   204c8:	ldr	r3, [r3]
   204cc:	str	r4, [sp, #52]	; 0x34
   204d0:	str	r4, [sp, #56]	; 0x38
   204d4:	str	r3, [sp, #68]	; 0x44
   204d8:	str	r4, [sp, #60]	; 0x3c
   204dc:	str	r4, [sp, #64]	; 0x40
   204e0:	beq	207c0 <g_unichar_xdigit_value@plt+0xc95c>
   204e4:	ldr	r3, [r5, #12]
   204e8:	add	ip, sp, #40	; 0x28
   204ec:	str	ip, [sp, #4]
   204f0:	add	fp, sp, #44	; 0x2c
   204f4:	add	r9, sp, #36	; 0x24
   204f8:	mov	r8, r4
   204fc:	ldr	r6, [r3, #4]
   20500:	mov	sl, r4
   20504:	mov	r0, r6
   20508:	bl	13c0c <g_hash_table_size@plt>
   2050c:	mov	r1, #4
   20510:	add	r0, r0, #2
   20514:	bl	13c00 <g_malloc0_n@plt>
   20518:	str	r0, [sp, #8]
   2051c:	mov	r0, r6
   20520:	bl	13c0c <g_hash_table_size@plt>
   20524:	ldr	r3, [r5, #12]
   20528:	ldr	r5, [sp, #8]
   2052c:	ldr	r1, [r3, #4]
   20530:	str	r0, [sp, #12]
   20534:	mov	r0, fp
   20538:	ldr	ip, [sp, #12]
   2053c:	add	ip, ip, #1
   20540:	str	ip, [sp, #16]
   20544:	bl	137d4 <g_hash_table_iter_init@plt>
   20548:	add	r2, sp, #40	; 0x28
   2054c:	mov	r1, r9
   20550:	mov	r0, fp
   20554:	str	r4, [sp, #36]	; 0x24
   20558:	str	r4, [sp, #40]	; 0x28
   2055c:	bl	13924 <g_hash_table_iter_next@plt>
   20560:	mov	r7, r0
   20564:	mov	r0, r4
   20568:	bl	1399c <g_free@plt>
   2056c:	ldr	r0, [sp, #36]	; 0x24
   20570:	bl	136f0 <g_strdup@plt>
   20574:	mov	r4, r0
   20578:	ldr	r0, [sp, #40]	; 0x28
   2057c:	cmp	r0, #0
   20580:	moveq	r6, r0
   20584:	beq	20590 <g_unichar_xdigit_value@plt+0xc72c>
   20588:	bl	133f0 <g_object_ref@plt>
   2058c:	mov	r6, r0
   20590:	cmp	r7, #0
   20594:	beq	2060c <g_unichar_xdigit_value@plt+0xc7a8>
   20598:	mov	r0, r4
   2059c:	add	r8, r8, #1
   205a0:	bl	136f0 <g_strdup@plt>
   205a4:	mov	r7, r0
   205a8:	ldr	r0, [r5]
   205ac:	bl	1399c <g_free@plt>
   205b0:	mov	r1, r9
   205b4:	add	r2, sp, #40	; 0x28
   205b8:	str	r7, [r5], #4
   205bc:	mov	r0, fp
   205c0:	str	sl, [sp, #36]	; 0x24
   205c4:	str	sl, [sp, #40]	; 0x28
   205c8:	bl	13924 <g_hash_table_iter_next@plt>
   205cc:	mov	r7, r0
   205d0:	mov	r0, r4
   205d4:	bl	1399c <g_free@plt>
   205d8:	ldr	r0, [sp, #36]	; 0x24
   205dc:	bl	136f0 <g_strdup@plt>
   205e0:	cmp	r6, #0
   205e4:	mov	r4, r0
   205e8:	beq	20578 <g_unichar_xdigit_value@plt+0xc714>
   205ec:	mov	r0, r6
   205f0:	bl	13b94 <g_object_unref@plt>
   205f4:	ldr	r0, [sp, #40]	; 0x28
   205f8:	cmp	r0, #0
   205fc:	moveq	r6, r0
   20600:	bne	20588 <g_unichar_xdigit_value@plt+0xc724>
   20604:	cmp	r7, #0
   20608:	bne	20598 <g_unichar_xdigit_value@plt+0xc734>
   2060c:	ldr	r3, [sp, #8]
   20610:	mov	r5, r7
   20614:	ldr	r0, [r3, r8, lsl #2]
   20618:	bl	1399c <g_free@plt>
   2061c:	ldr	ip, [sp, #8]
   20620:	ldr	r3, [sp, #12]
   20624:	str	r4, [sp, #4]
   20628:	str	r7, [ip, r8, lsl #2]
   2062c:	mov	fp, ip
   20630:	ldr	r7, [ip, r3, lsl #2]
   20634:	str	r6, [sp, #12]
   20638:	cmp	r7, #0
   2063c:	subeq	r3, r3, #1
   20640:	mov	r7, r3
   20644:	cmp	r7, #0
   20648:	ble	206e8 <g_unichar_xdigit_value@plt+0xc884>
   2064c:	mov	r9, #0
   20650:	add	r8, fp, #4
   20654:	mov	r4, r9
   20658:	b	20668 <g_unichar_xdigit_value@plt+0xc804>
   2065c:	add	r4, r4, #1
   20660:	cmp	r4, r7
   20664:	beq	206dc <g_unichar_xdigit_value@plt+0xc878>
   20668:	mov	r3, r8
   2066c:	ldr	r0, [r8, #-4]
   20670:	ldr	r1, [r3]
   20674:	add	r8, r8, #4
   20678:	bl	13e58 <g_strcmp0@plt>
   2067c:	cmp	r0, #0
   20680:	bge	2065c <g_unichar_xdigit_value@plt+0xc7f8>
   20684:	ldr	r0, [r8, #-8]
   20688:	add	r4, r4, #1
   2068c:	bl	136f0 <g_strdup@plt>
   20690:	mov	r9, #1
   20694:	mov	r6, r0
   20698:	mov	r0, r5
   2069c:	bl	1399c <g_free@plt>
   206a0:	ldr	r0, [r8, #-4]
   206a4:	bl	136f0 <g_strdup@plt>
   206a8:	mov	r5, r0
   206ac:	ldr	r0, [r8, #-8]
   206b0:	bl	1399c <g_free@plt>
   206b4:	str	r5, [r8, #-8]
   206b8:	mov	r0, r6
   206bc:	mov	r5, r6
   206c0:	bl	136f0 <g_strdup@plt>
   206c4:	mov	sl, r0
   206c8:	ldr	r0, [r8, #-4]
   206cc:	bl	1399c <g_free@plt>
   206d0:	cmp	r4, r7
   206d4:	str	sl, [r8, #-4]
   206d8:	bne	20668 <g_unichar_xdigit_value@plt+0xc804>
   206dc:	cmp	r9, #0
   206e0:	sub	r7, r7, #1
   206e4:	bne	20644 <g_unichar_xdigit_value@plt+0xc7e0>
   206e8:	ldr	ip, [sp, #8]
   206ec:	ldr	r4, [sp, #4]
   206f0:	cmp	ip, #0
   206f4:	ldr	r6, [sp, #12]
   206f8:	beq	207b8 <g_unichar_xdigit_value@plt+0xc954>
   206fc:	ldr	r3, [sp, #16]
   20700:	mov	r1, #4
   20704:	add	r0, r3, #1
   20708:	bl	13c00 <g_malloc0_n@plt>
   2070c:	ldr	ip, [sp, #16]
   20710:	cmp	ip, #0
   20714:	mov	r7, r0
   20718:	ble	20748 <g_unichar_xdigit_value@plt+0xc8e4>
   2071c:	ldr	r9, [sp, #8]
   20720:	mov	r8, #0
   20724:	mov	sl, r8
   20728:	mov	fp, ip
   2072c:	ldr	r0, [r9, r8]
   20730:	add	sl, sl, #1
   20734:	bl	136f0 <g_strdup@plt>
   20738:	cmp	fp, sl
   2073c:	str	r0, [r7, r8]
   20740:	add	r8, r8, #4
   20744:	bne	2072c <g_unichar_xdigit_value@plt+0xc8c8>
   20748:	mov	r0, r5
   2074c:	bl	1399c <g_free@plt>
   20750:	ldr	r3, [sp, #28]
   20754:	cmp	r3, #0
   20758:	ldrne	ip, [sp, #16]
   2075c:	strne	ip, [r3]
   20760:	cmp	r6, #0
   20764:	beq	20770 <g_unichar_xdigit_value@plt+0xc90c>
   20768:	mov	r0, r6
   2076c:	bl	13b94 <g_object_unref@plt>
   20770:	mov	r0, r4
   20774:	bl	1399c <g_free@plt>
   20778:	ldr	r3, [pc, #108]	; 207ec <g_unichar_xdigit_value@plt+0xc988>
   2077c:	ldr	ip, [sp, #20]
   20780:	ldr	r1, [sp, #16]
   20784:	ldr	r0, [sp, #8]
   20788:	ldr	r2, [ip, r3]
   2078c:	bl	1f874 <g_unichar_xdigit_value@plt+0xba10>
   20790:	ldr	r0, [sp, #8]
   20794:	bl	1399c <g_free@plt>
   20798:	mov	r0, r7
   2079c:	ldr	ip, [sp, #24]
   207a0:	ldr	r2, [sp, #68]	; 0x44
   207a4:	ldr	r3, [ip]
   207a8:	cmp	r2, r3
   207ac:	bne	207e0 <g_unichar_xdigit_value@plt+0xc97c>
   207b0:	add	sp, sp, #76	; 0x4c
   207b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   207b8:	ldr	r7, [sp, #8]
   207bc:	b	20748 <g_unichar_xdigit_value@plt+0xc8e4>
   207c0:	ldr	r1, [pc, #40]	; 207f0 <g_unichar_xdigit_value@plt+0xc98c>
   207c4:	ldr	r2, [pc, #40]	; 207f4 <g_unichar_xdigit_value@plt+0xc990>
   207c8:	add	r1, pc, r1
   207cc:	add	r2, pc, r2
   207d0:	add	r1, r1, #144	; 0x90
   207d4:	bl	13450 <g_return_if_fail_warning@plt>
   207d8:	mov	r0, r5
   207dc:	b	2079c <g_unichar_xdigit_value@plt+0xc938>
   207e0:	bl	13978 <__stack_chk_fail@plt>
   207e4:	andeq	r0, r3, r0, asr fp
   207e8:	muleq	r0, r0, r3
   207ec:	andeq	r0, r0, r4, lsr #7
   207f0:	andeq	r9, r1, r4, ror #1
   207f4:	andeq	r7, r1, r8, lsl r9
   207f8:	push	{r3, r4, r5, lr}
   207fc:	subs	r5, r0, #0
   20800:	mov	r4, r1
   20804:	beq	20878 <g_unichar_xdigit_value@plt+0xca14>
   20808:	cmp	r1, #0
   2080c:	beq	20898 <g_unichar_xdigit_value@plt+0xca34>
   20810:	ldr	r3, [r5, #12]
   20814:	ldr	r0, [r3, #4]
   20818:	bl	138e8 <g_hash_table_lookup@plt>
   2081c:	cmp	r0, #0
   20820:	beq	20830 <g_unichar_xdigit_value@plt+0xc9cc>
   20824:	bl	133f0 <g_object_ref@plt>
   20828:	cmp	r0, #0
   2082c:	popne	{r3, r4, r5, pc}
   20830:	ldr	r3, [r5, #12]
   20834:	mov	r0, r4
   20838:	mvn	r1, #0
   2083c:	ldr	r5, [r3, #4]
   20840:	bl	134c8 <g_utf8_strdown@plt>
   20844:	mov	r4, r0
   20848:	mov	r0, r5
   2084c:	mov	r1, r4
   20850:	bl	138e8 <g_hash_table_lookup@plt>
   20854:	subs	r3, r0, #0
   20858:	moveq	r5, r3
   2085c:	beq	20868 <g_unichar_xdigit_value@plt+0xca04>
   20860:	bl	133f0 <g_object_ref@plt>
   20864:	mov	r5, r0
   20868:	mov	r0, r4
   2086c:	bl	1399c <g_free@plt>
   20870:	mov	r0, r5
   20874:	pop	{r3, r4, r5, pc}
   20878:	ldr	r1, [pc, #60]	; 208bc <g_unichar_xdigit_value@plt+0xca58>
   2087c:	ldr	r2, [pc, #60]	; 208c0 <g_unichar_xdigit_value@plt+0xca5c>
   20880:	add	r1, pc, r1
   20884:	add	r2, pc, r2
   20888:	add	r1, r1, #172	; 0xac
   2088c:	bl	13450 <g_return_if_fail_warning@plt>
   20890:	mov	r0, r5
   20894:	pop	{r3, r4, r5, pc}
   20898:	ldr	r1, [pc, #36]	; 208c4 <g_unichar_xdigit_value@plt+0xca60>
   2089c:	mov	r0, r4
   208a0:	ldr	r2, [pc, #32]	; 208c8 <g_unichar_xdigit_value@plt+0xca64>
   208a4:	add	r1, pc, r1
   208a8:	add	r2, pc, r2
   208ac:	add	r1, r1, #172	; 0xac
   208b0:	bl	13450 <g_return_if_fail_warning@plt>
   208b4:	mov	r0, r4
   208b8:	pop	{r3, r4, r5, pc}
   208bc:	andeq	r9, r1, ip, lsr #32
   208c0:	andeq	r7, r1, r0, ror #16
   208c4:	andeq	r9, r1, r8
   208c8:	andeq	sl, r1, r8, lsr #26
   208cc:	push	{r4, r5, r6, r7, r8, lr}
   208d0:	subs	r5, r0, #0
   208d4:	mov	r4, r1
   208d8:	beq	20970 <g_unichar_xdigit_value@plt+0xcb0c>
   208dc:	cmp	r1, #0
   208e0:	beq	20990 <g_unichar_xdigit_value@plt+0xcb2c>
   208e4:	mov	r0, r1
   208e8:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   208ec:	mov	r1, r0
   208f0:	mov	r0, r5
   208f4:	bl	207f8 <g_unichar_xdigit_value@plt+0xc994>
   208f8:	subs	r6, r0, #0
   208fc:	beq	2091c <g_unichar_xdigit_value@plt+0xcab8>
   20900:	bl	22b3c <g_unichar_xdigit_value@plt+0xecd8>
   20904:	subs	r7, r0, #0
   20908:	bne	209b4 <g_unichar_xdigit_value@plt+0xcb50>
   2090c:	mov	r0, r6
   20910:	bl	13b94 <g_object_unref@plt>
   20914:	mov	r0, r7
   20918:	pop	{r4, r5, r6, r7, r8, pc}
   2091c:	ldr	r3, [r5, #12]
   20920:	mov	r0, r4
   20924:	ldr	r8, [r3, #4]
   20928:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   2092c:	bl	136f0 <g_strdup@plt>
   20930:	mov	r7, r0
   20934:	mov	r0, r4
   20938:	bl	133f0 <g_object_ref@plt>
   2093c:	mov	r1, r7
   20940:	mov	r2, r0
   20944:	mov	r0, r8
   20948:	bl	13738 <g_hash_table_insert@plt>
   2094c:	ldr	r1, [pc, #188]	; 20a10 <g_unichar_xdigit_value@plt+0xcbac>
   20950:	mov	r0, r5
   20954:	mov	r2, r6
   20958:	add	r1, pc, r1
   2095c:	mov	r3, r4
   20960:	ldr	r1, [r1]
   20964:	bl	136e4 <g_signal_emit@plt>
   20968:	mov	r0, #1
   2096c:	pop	{r4, r5, r6, r7, r8, pc}
   20970:	ldr	r1, [pc, #156]	; 20a14 <g_unichar_xdigit_value@plt+0xcbb0>
   20974:	ldr	r2, [pc, #156]	; 20a18 <g_unichar_xdigit_value@plt+0xcbb4>
   20978:	add	r1, pc, r1
   2097c:	add	r2, pc, r2
   20980:	add	r1, r1, #196	; 0xc4
   20984:	bl	13450 <g_return_if_fail_warning@plt>
   20988:	mov	r0, r5
   2098c:	pop	{r4, r5, r6, r7, r8, pc}
   20990:	ldr	r1, [pc, #132]	; 20a1c <g_unichar_xdigit_value@plt+0xcbb8>
   20994:	mov	r0, r4
   20998:	ldr	r2, [pc, #128]	; 20a20 <g_unichar_xdigit_value@plt+0xcbbc>
   2099c:	add	r1, pc, r1
   209a0:	add	r2, pc, r2
   209a4:	add	r1, r1, #196	; 0xc4
   209a8:	bl	13450 <g_return_if_fail_warning@plt>
   209ac:	mov	r0, r4
   209b0:	pop	{r4, r5, r6, r7, r8, pc}
   209b4:	ldr	r3, [r5, #12]
   209b8:	mov	r0, r4
   209bc:	ldr	r8, [r3, #4]
   209c0:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   209c4:	bl	136f0 <g_strdup@plt>
   209c8:	mov	r7, r0
   209cc:	mov	r0, r4
   209d0:	bl	133f0 <g_object_ref@plt>
   209d4:	mov	r1, r7
   209d8:	mov	r2, r0
   209dc:	mov	r0, r8
   209e0:	bl	13738 <g_hash_table_insert@plt>
   209e4:	ldr	r1, [pc, #56]	; 20a24 <g_unichar_xdigit_value@plt+0xcbc0>
   209e8:	mov	r0, r5
   209ec:	mov	r3, r4
   209f0:	add	r1, pc, r1
   209f4:	mov	r2, #0
   209f8:	ldr	r1, [r1, #4]
   209fc:	bl	136e4 <g_signal_emit@plt>
   20a00:	mov	r0, r6
   20a04:	bl	13b94 <g_object_unref@plt>
   20a08:	mov	r0, #1
   20a0c:	pop	{r4, r5, r6, r7, r8, pc}
   20a10:	ldrdeq	r0, [r3], -r8
   20a14:	andeq	r8, r1, r4, lsr pc
   20a18:	andeq	r7, r1, r8, ror #14
   20a1c:	andeq	r8, r1, r0, lsl pc
   20a20:	andeq	r9, r1, r0, asr r1
   20a24:	andeq	r0, r3, r0, asr #22
   20a28:	ldr	ip, [pc, #2488]	; 213e8 <g_unichar_xdigit_value@plt+0xd584>
   20a2c:	mov	r1, #0
   20a30:	ldr	r3, [pc, #2484]	; 213ec <g_unichar_xdigit_value@plt+0xd588>
   20a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a38:	add	ip, pc, ip
   20a3c:	sub	sp, sp, #52	; 0x34
   20a40:	str	ip, [sp, #16]
   20a44:	ldr	r3, [ip, r3]
   20a48:	str	r3, [sp, #24]
   20a4c:	ldr	r3, [r3]
   20a50:	str	r3, [sp, #44]	; 0x2c
   20a54:	bl	133e4 <g_object_new@plt>
   20a58:	ldr	ip, [sp, #16]
   20a5c:	ldr	r1, [pc, #2444]	; 213f0 <g_unichar_xdigit_value@plt+0xd58c>
   20a60:	ldr	r3, [pc, #2444]	; 213f4 <g_unichar_xdigit_value@plt+0xd590>
   20a64:	ldr	r2, [pc, #2444]	; 213f8 <g_unichar_xdigit_value@plt+0xd594>
   20a68:	add	r2, pc, r2
   20a6c:	mov	r4, r0
   20a70:	ldr	r0, [ip, r1]
   20a74:	ldr	r1, [ip, r3]
   20a78:	ldr	r3, [pc, #2428]	; 213fc <g_unichar_xdigit_value@plt+0xd598>
   20a7c:	add	r3, pc, r3
   20a80:	bl	136cc <g_hash_table_new_full@plt>
   20a84:	ldr	r3, [r4, #12]
   20a88:	mov	r5, r0
   20a8c:	ldr	r0, [r3, #4]
   20a90:	cmp	r0, #0
   20a94:	beq	20aa8 <g_unichar_xdigit_value@plt+0xcc44>
   20a98:	bl	139cc <g_hash_table_unref@plt>
   20a9c:	ldr	r3, [r4, #12]
   20aa0:	mov	r2, #0
   20aa4:	str	r2, [r3, #4]
   20aa8:	str	r5, [r3, #4]
   20aac:	bl	13da4 <g_get_user_data_dir@plt>
   20ab0:	ldr	r1, [pc, #2376]	; 21400 <g_unichar_xdigit_value@plt+0xd59c>
   20ab4:	ldr	r2, [pc, #2376]	; 21404 <g_unichar_xdigit_value@plt+0xd5a0>
   20ab8:	mov	r3, #0
   20abc:	add	r1, pc, r1
   20ac0:	add	r2, pc, r2
   20ac4:	bl	135ac <g_build_filename@plt>
   20ac8:	ldr	r3, [r4, #12]
   20acc:	mov	r5, r0
   20ad0:	ldr	r0, [r3]
   20ad4:	bl	1399c <g_free@plt>
   20ad8:	ldr	r3, [r4, #12]
   20adc:	mov	r0, #2
   20ae0:	mov	r1, #10
   20ae4:	mov	r2, #50	; 0x32
   20ae8:	str	r5, [r3]
   20aec:	bl	2b080 <g_unichar_xdigit_value@plt+0x1721c>
   20af0:	ldr	r3, [r4, #12]
   20af4:	mov	r5, r0
   20af8:	ldr	r0, [r3, #8]
   20afc:	cmp	r0, #0
   20b00:	beq	20b14 <g_unichar_xdigit_value@plt+0xccb0>
   20b04:	bl	13b94 <g_object_unref@plt>
   20b08:	ldr	r3, [r4, #12]
   20b0c:	mov	r2, #0
   20b10:	str	r2, [r3, #8]
   20b14:	str	r5, [r3, #8]
   20b18:	mov	r0, r5
   20b1c:	mov	r1, #46	; 0x2e
   20b20:	add	r6, sp, #36	; 0x24
   20b24:	bl	298f0 <g_unichar_xdigit_value@plt+0x15a8c>
   20b28:	ldr	r3, [r4, #12]
   20b2c:	mov	r5, #0
   20b30:	ldr	r0, [r3, #4]
   20b34:	bl	135f4 <g_hash_table_remove_all@plt>
   20b38:	ldr	r0, [r4, #12]
   20b3c:	add	r1, sp, #48	; 0x30
   20b40:	mov	r3, r6
   20b44:	mov	r2, r5
   20b48:	str	r5, [r1, #-8]!
   20b4c:	ldr	r0, [r0]
   20b50:	str	r5, [sp, #36]	; 0x24
   20b54:	bl	13948 <g_file_get_contents@plt>
   20b58:	mov	r0, r5
   20b5c:	bl	1399c <g_free@plt>
   20b60:	ldr	r7, [sp, #36]	; 0x24
   20b64:	ldr	r3, [sp, #40]	; 0x28
   20b68:	cmp	r7, r5
   20b6c:	str	r3, [sp, #28]
   20b70:	beq	20bdc <g_unichar_xdigit_value@plt+0xcd78>
   20b74:	ldr	r7, [r7]
   20b78:	bl	13d14 <g_file_error_quark@plt>
   20b7c:	cmp	r7, r0
   20b80:	beq	213c4 <g_unichar_xdigit_value@plt+0xd560>
   20b84:	ldr	r0, [sp, #28]
   20b88:	bl	1399c <g_free@plt>
   20b8c:	ldr	r7, [sp, #36]	; 0x24
   20b90:	ldr	r0, [r7]
   20b94:	bl	139f0 <g_quark_to_string@plt>
   20b98:	movw	r3, #611	; 0x263
   20b9c:	str	r3, [sp]
   20ba0:	mov	r1, #8
   20ba4:	ldr	ip, [r7, #8]
   20ba8:	ldr	r2, [pc, #2136]	; 21408 <g_unichar_xdigit_value@plt+0xd5a4>
   20bac:	ldr	r3, [pc, #2136]	; 2140c <g_unichar_xdigit_value@plt+0xd5a8>
   20bb0:	str	ip, [sp, #4]
   20bb4:	add	r2, pc, r2
   20bb8:	add	r3, pc, r3
   20bbc:	str	r0, [sp, #8]
   20bc0:	mov	r0, r5
   20bc4:	ldr	ip, [r7, #4]
   20bc8:	str	ip, [sp, #12]
   20bcc:	bl	13558 <g_log@plt>
   20bd0:	mov	r0, r6
   20bd4:	bl	13aec <g_clear_error@plt>
   20bd8:	b	20cb4 <g_unichar_xdigit_value@plt+0xce50>
   20bdc:	ldr	r1, [pc, #2092]	; 21410 <g_unichar_xdigit_value@plt+0xd5ac>
   20be0:	mov	r2, r7
   20be4:	ldr	r0, [sp, #28]
   20be8:	add	r1, pc, r1
   20bec:	bl	13810 <g_strsplit@plt>
   20bf0:	cmp	r0, #0
   20bf4:	str	r0, [sp, #20]
   20bf8:	beq	213dc <g_unichar_xdigit_value@plt+0xd578>
   20bfc:	ldr	r3, [r0]
   20c00:	cmp	r3, #0
   20c04:	beq	213bc <g_unichar_xdigit_value@plt+0xd558>
   20c08:	mov	r3, r0
   20c0c:	ldr	r5, [r3, #4]!
   20c10:	add	r7, r7, #1
   20c14:	cmp	r5, #0
   20c18:	bne	20c0c <g_unichar_xdigit_value@plt+0xcda8>
   20c1c:	ldr	ip, [sp, #20]
   20c20:	sub	r9, ip, #4
   20c24:	ldr	r0, [r9, #4]!
   20c28:	bl	136f0 <g_strdup@plt>
   20c2c:	mov	r6, r0
   20c30:	mov	r0, r4
   20c34:	mov	r1, r6
   20c38:	bl	1ff68 <g_unichar_xdigit_value@plt+0xc104>
   20c3c:	subs	r8, r0, #0
   20c40:	beq	20c78 <g_unichar_xdigit_value@plt+0xce14>
   20c44:	ldr	r3, [r4, #12]
   20c48:	ldr	sl, [r3, #4]
   20c4c:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   20c50:	bl	136f0 <g_strdup@plt>
   20c54:	mov	fp, r0
   20c58:	mov	r0, r8
   20c5c:	bl	133f0 <g_object_ref@plt>
   20c60:	mov	r1, fp
   20c64:	mov	r2, r0
   20c68:	mov	r0, sl
   20c6c:	bl	13738 <g_hash_table_insert@plt>
   20c70:	mov	r0, r8
   20c74:	bl	13b94 <g_object_unref@plt>
   20c78:	mov	r0, r6
   20c7c:	add	r5, r5, #1
   20c80:	bl	1399c <g_free@plt>
   20c84:	cmp	r5, r7
   20c88:	bne	20c24 <g_unichar_xdigit_value@plt+0xcdc0>
   20c8c:	ldr	r3, [pc, #1920]	; 21414 <g_unichar_xdigit_value@plt+0xd5b0>
   20c90:	mov	r1, r7
   20c94:	ldr	ip, [sp, #16]
   20c98:	ldr	r0, [sp, #20]
   20c9c:	ldr	r2, [ip, r3]
   20ca0:	bl	1f874 <g_unichar_xdigit_value@plt+0xba10>
   20ca4:	ldr	r0, [sp, #20]
   20ca8:	bl	1399c <g_free@plt>
   20cac:	ldr	r0, [sp, #28]
   20cb0:	bl	1399c <g_free@plt>
   20cb4:	ldr	r0, [pc, #1884]	; 21418 <g_unichar_xdigit_value@plt+0xd5b4>
   20cb8:	ldr	r1, [pc, #1884]	; 2141c <g_unichar_xdigit_value@plt+0xd5b8>
   20cbc:	add	r0, pc, r0
   20cc0:	add	r1, pc, r1
   20cc4:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20cc8:	mov	r5, r0
   20ccc:	mov	r0, r4
   20cd0:	mov	r1, r5
   20cd4:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20cd8:	cmp	r5, #0
   20cdc:	beq	20ce8 <g_unichar_xdigit_value@plt+0xce84>
   20ce0:	mov	r0, r5
   20ce4:	bl	13b94 <g_object_unref@plt>
   20ce8:	ldr	r0, [pc, #1840]	; 21420 <g_unichar_xdigit_value@plt+0xd5bc>
   20cec:	ldr	r1, [pc, #1840]	; 21424 <g_unichar_xdigit_value@plt+0xd5c0>
   20cf0:	add	r0, pc, r0
   20cf4:	add	r1, pc, r1
   20cf8:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20cfc:	mov	r5, r0
   20d00:	mov	r0, r4
   20d04:	mov	r1, r5
   20d08:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20d0c:	cmp	r5, #0
   20d10:	beq	20d1c <g_unichar_xdigit_value@plt+0xceb8>
   20d14:	mov	r0, r5
   20d18:	bl	13b94 <g_object_unref@plt>
   20d1c:	ldr	r0, [pc, #1796]	; 21428 <g_unichar_xdigit_value@plt+0xd5c4>
   20d20:	ldr	r1, [pc, #1796]	; 2142c <g_unichar_xdigit_value@plt+0xd5c8>
   20d24:	add	r0, pc, r0
   20d28:	add	r1, pc, r1
   20d2c:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20d30:	mov	r5, r0
   20d34:	mov	r0, r4
   20d38:	mov	r1, r5
   20d3c:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20d40:	cmp	r5, #0
   20d44:	beq	20d50 <g_unichar_xdigit_value@plt+0xceec>
   20d48:	mov	r0, r5
   20d4c:	bl	13b94 <g_object_unref@plt>
   20d50:	ldr	r0, [pc, #1752]	; 21430 <g_unichar_xdigit_value@plt+0xd5cc>
   20d54:	ldr	r1, [pc, #1752]	; 21434 <g_unichar_xdigit_value@plt+0xd5d0>
   20d58:	add	r0, pc, r0
   20d5c:	add	r1, pc, r1
   20d60:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20d64:	mov	r5, r0
   20d68:	mov	r0, r4
   20d6c:	mov	r1, r5
   20d70:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20d74:	cmp	r5, #0
   20d78:	beq	20d84 <g_unichar_xdigit_value@plt+0xcf20>
   20d7c:	mov	r0, r5
   20d80:	bl	13b94 <g_object_unref@plt>
   20d84:	ldr	r0, [pc, #1708]	; 21438 <g_unichar_xdigit_value@plt+0xd5d4>
   20d88:	ldr	r1, [pc, #1708]	; 2143c <g_unichar_xdigit_value@plt+0xd5d8>
   20d8c:	add	r0, pc, r0
   20d90:	add	r1, pc, r1
   20d94:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20d98:	mov	r5, r0
   20d9c:	mov	r0, r4
   20da0:	mov	r1, r5
   20da4:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20da8:	cmp	r5, #0
   20dac:	beq	20db8 <g_unichar_xdigit_value@plt+0xcf54>
   20db0:	mov	r0, r5
   20db4:	bl	13b94 <g_object_unref@plt>
   20db8:	ldr	r0, [pc, #1664]	; 21440 <g_unichar_xdigit_value@plt+0xd5dc>
   20dbc:	ldr	r1, [pc, #1664]	; 21444 <g_unichar_xdigit_value@plt+0xd5e0>
   20dc0:	add	r0, pc, r0
   20dc4:	add	r1, pc, r1
   20dc8:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20dcc:	mov	r5, r0
   20dd0:	mov	r0, r4
   20dd4:	mov	r1, r5
   20dd8:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20ddc:	cmp	r5, #0
   20de0:	beq	20dec <g_unichar_xdigit_value@plt+0xcf88>
   20de4:	mov	r0, r5
   20de8:	bl	13b94 <g_object_unref@plt>
   20dec:	ldr	r0, [pc, #1620]	; 21448 <g_unichar_xdigit_value@plt+0xd5e4>
   20df0:	ldr	r1, [pc, #1620]	; 2144c <g_unichar_xdigit_value@plt+0xd5e8>
   20df4:	add	r0, pc, r0
   20df8:	add	r1, pc, r1
   20dfc:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20e00:	mov	r5, r0
   20e04:	mov	r0, r4
   20e08:	mov	r1, r5
   20e0c:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20e10:	cmp	r5, #0
   20e14:	beq	20e20 <g_unichar_xdigit_value@plt+0xcfbc>
   20e18:	mov	r0, r5
   20e1c:	bl	13b94 <g_object_unref@plt>
   20e20:	ldr	r0, [pc, #1576]	; 21450 <g_unichar_xdigit_value@plt+0xd5ec>
   20e24:	ldr	r1, [pc, #1576]	; 21454 <g_unichar_xdigit_value@plt+0xd5f0>
   20e28:	add	r0, pc, r0
   20e2c:	add	r1, pc, r1
   20e30:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20e34:	mov	r5, r0
   20e38:	mov	r0, r4
   20e3c:	mov	r1, r5
   20e40:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20e44:	cmp	r5, #0
   20e48:	beq	20e54 <g_unichar_xdigit_value@plt+0xcff0>
   20e4c:	mov	r0, r5
   20e50:	bl	13b94 <g_object_unref@plt>
   20e54:	ldr	r0, [pc, #1532]	; 21458 <g_unichar_xdigit_value@plt+0xd5f4>
   20e58:	ldr	r1, [pc, #1532]	; 2145c <g_unichar_xdigit_value@plt+0xd5f8>
   20e5c:	add	r0, pc, r0
   20e60:	add	r1, pc, r1
   20e64:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20e68:	mov	r5, r0
   20e6c:	mov	r0, r4
   20e70:	mov	r1, r5
   20e74:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20e78:	cmp	r5, #0
   20e7c:	beq	20e88 <g_unichar_xdigit_value@plt+0xd024>
   20e80:	mov	r0, r5
   20e84:	bl	13b94 <g_object_unref@plt>
   20e88:	ldr	r0, [pc, #1488]	; 21460 <g_unichar_xdigit_value@plt+0xd5fc>
   20e8c:	ldr	r1, [pc, #1488]	; 21464 <g_unichar_xdigit_value@plt+0xd600>
   20e90:	add	r0, pc, r0
   20e94:	add	r1, pc, r1
   20e98:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20e9c:	mov	r5, r0
   20ea0:	mov	r0, r4
   20ea4:	mov	r1, r5
   20ea8:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20eac:	cmp	r5, #0
   20eb0:	beq	20ebc <g_unichar_xdigit_value@plt+0xd058>
   20eb4:	mov	r0, r5
   20eb8:	bl	13b94 <g_object_unref@plt>
   20ebc:	ldr	r0, [pc, #1444]	; 21468 <g_unichar_xdigit_value@plt+0xd604>
   20ec0:	ldr	r1, [pc, #1444]	; 2146c <g_unichar_xdigit_value@plt+0xd608>
   20ec4:	add	r0, pc, r0
   20ec8:	add	r1, pc, r1
   20ecc:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20ed0:	mov	r5, r0
   20ed4:	mov	r0, r4
   20ed8:	mov	r1, r5
   20edc:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20ee0:	cmp	r5, #0
   20ee4:	beq	20ef0 <g_unichar_xdigit_value@plt+0xd08c>
   20ee8:	mov	r0, r5
   20eec:	bl	13b94 <g_object_unref@plt>
   20ef0:	ldr	r0, [pc, #1400]	; 21470 <g_unichar_xdigit_value@plt+0xd60c>
   20ef4:	ldr	r1, [pc, #1400]	; 21474 <g_unichar_xdigit_value@plt+0xd610>
   20ef8:	add	r0, pc, r0
   20efc:	add	r1, pc, r1
   20f00:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20f04:	mov	r5, r0
   20f08:	mov	r0, r4
   20f0c:	mov	r1, r5
   20f10:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20f14:	cmp	r5, #0
   20f18:	beq	20f24 <g_unichar_xdigit_value@plt+0xd0c0>
   20f1c:	mov	r0, r5
   20f20:	bl	13b94 <g_object_unref@plt>
   20f24:	ldr	r0, [pc, #1356]	; 21478 <g_unichar_xdigit_value@plt+0xd614>
   20f28:	ldr	r1, [pc, #1356]	; 2147c <g_unichar_xdigit_value@plt+0xd618>
   20f2c:	add	r0, pc, r0
   20f30:	add	r1, pc, r1
   20f34:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20f38:	mov	r5, r0
   20f3c:	mov	r0, r4
   20f40:	mov	r1, r5
   20f44:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20f48:	cmp	r5, #0
   20f4c:	beq	20f58 <g_unichar_xdigit_value@plt+0xd0f4>
   20f50:	mov	r0, r5
   20f54:	bl	13b94 <g_object_unref@plt>
   20f58:	ldr	r0, [pc, #1312]	; 21480 <g_unichar_xdigit_value@plt+0xd61c>
   20f5c:	ldr	r1, [pc, #1312]	; 21484 <g_unichar_xdigit_value@plt+0xd620>
   20f60:	add	r0, pc, r0
   20f64:	add	r1, pc, r1
   20f68:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20f6c:	mov	r5, r0
   20f70:	mov	r0, r4
   20f74:	mov	r1, r5
   20f78:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20f7c:	cmp	r5, #0
   20f80:	beq	20f8c <g_unichar_xdigit_value@plt+0xd128>
   20f84:	mov	r0, r5
   20f88:	bl	13b94 <g_object_unref@plt>
   20f8c:	ldr	r0, [pc, #1268]	; 21488 <g_unichar_xdigit_value@plt+0xd624>
   20f90:	ldr	r1, [pc, #1268]	; 2148c <g_unichar_xdigit_value@plt+0xd628>
   20f94:	add	r0, pc, r0
   20f98:	add	r1, pc, r1
   20f9c:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20fa0:	mov	r5, r0
   20fa4:	mov	r0, r4
   20fa8:	mov	r1, r5
   20fac:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20fb0:	cmp	r5, #0
   20fb4:	beq	20fc0 <g_unichar_xdigit_value@plt+0xd15c>
   20fb8:	mov	r0, r5
   20fbc:	bl	13b94 <g_object_unref@plt>
   20fc0:	ldr	r0, [pc, #1224]	; 21490 <g_unichar_xdigit_value@plt+0xd62c>
   20fc4:	ldr	r1, [pc, #1224]	; 21494 <g_unichar_xdigit_value@plt+0xd630>
   20fc8:	add	r0, pc, r0
   20fcc:	add	r1, pc, r1
   20fd0:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   20fd4:	mov	r5, r0
   20fd8:	mov	r0, r4
   20fdc:	mov	r1, r5
   20fe0:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   20fe4:	cmp	r5, #0
   20fe8:	beq	20ff4 <g_unichar_xdigit_value@plt+0xd190>
   20fec:	mov	r0, r5
   20ff0:	bl	13b94 <g_object_unref@plt>
   20ff4:	ldr	r0, [pc, #1180]	; 21498 <g_unichar_xdigit_value@plt+0xd634>
   20ff8:	ldr	r1, [pc, #1180]	; 2149c <g_unichar_xdigit_value@plt+0xd638>
   20ffc:	add	r0, pc, r0
   21000:	add	r1, pc, r1
   21004:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   21008:	mov	r5, r0
   2100c:	mov	r0, r4
   21010:	mov	r1, r5
   21014:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   21018:	cmp	r5, #0
   2101c:	beq	21028 <g_unichar_xdigit_value@plt+0xd1c4>
   21020:	mov	r0, r5
   21024:	bl	13b94 <g_object_unref@plt>
   21028:	ldr	r0, [pc, #1136]	; 214a0 <g_unichar_xdigit_value@plt+0xd63c>
   2102c:	ldr	r1, [pc, #1136]	; 214a4 <g_unichar_xdigit_value@plt+0xd640>
   21030:	add	r0, pc, r0
   21034:	add	r1, pc, r1
   21038:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   2103c:	mov	r5, r0
   21040:	mov	r0, r4
   21044:	mov	r1, r5
   21048:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   2104c:	cmp	r5, #0
   21050:	beq	2105c <g_unichar_xdigit_value@plt+0xd1f8>
   21054:	mov	r0, r5
   21058:	bl	13b94 <g_object_unref@plt>
   2105c:	ldr	r0, [pc, #1092]	; 214a8 <g_unichar_xdigit_value@plt+0xd644>
   21060:	ldr	r1, [pc, #1092]	; 214ac <g_unichar_xdigit_value@plt+0xd648>
   21064:	add	r0, pc, r0
   21068:	add	r1, pc, r1
   2106c:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   21070:	mov	r5, r0
   21074:	mov	r0, r4
   21078:	mov	r1, r5
   2107c:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   21080:	cmp	r5, #0
   21084:	beq	21090 <g_unichar_xdigit_value@plt+0xd22c>
   21088:	mov	r0, r5
   2108c:	bl	13b94 <g_object_unref@plt>
   21090:	ldr	r0, [pc, #1048]	; 214b0 <g_unichar_xdigit_value@plt+0xd64c>
   21094:	ldr	r1, [pc, #1048]	; 214b4 <g_unichar_xdigit_value@plt+0xd650>
   21098:	add	r0, pc, r0
   2109c:	add	r1, pc, r1
   210a0:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   210a4:	mov	r5, r0
   210a8:	mov	r0, r4
   210ac:	mov	r1, r5
   210b0:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   210b4:	cmp	r5, #0
   210b8:	beq	210c4 <g_unichar_xdigit_value@plt+0xd260>
   210bc:	mov	r0, r5
   210c0:	bl	13b94 <g_object_unref@plt>
   210c4:	ldr	r0, [pc, #1004]	; 214b8 <g_unichar_xdigit_value@plt+0xd654>
   210c8:	ldr	r1, [pc, #1004]	; 214bc <g_unichar_xdigit_value@plt+0xd658>
   210cc:	add	r0, pc, r0
   210d0:	add	r1, pc, r1
   210d4:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   210d8:	mov	r5, r0
   210dc:	mov	r0, r4
   210e0:	mov	r1, r5
   210e4:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   210e8:	cmp	r5, #0
   210ec:	beq	210f8 <g_unichar_xdigit_value@plt+0xd294>
   210f0:	mov	r0, r5
   210f4:	bl	13b94 <g_object_unref@plt>
   210f8:	ldr	r0, [pc, #960]	; 214c0 <g_unichar_xdigit_value@plt+0xd65c>
   210fc:	ldr	r1, [pc, #960]	; 214c4 <g_unichar_xdigit_value@plt+0xd660>
   21100:	add	r0, pc, r0
   21104:	add	r1, pc, r1
   21108:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   2110c:	mov	r5, r0
   21110:	mov	r0, r4
   21114:	mov	r1, r5
   21118:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   2111c:	cmp	r5, #0
   21120:	beq	2112c <g_unichar_xdigit_value@plt+0xd2c8>
   21124:	mov	r0, r5
   21128:	bl	13b94 <g_object_unref@plt>
   2112c:	ldr	r0, [pc, #916]	; 214c8 <g_unichar_xdigit_value@plt+0xd664>
   21130:	ldr	r1, [pc, #916]	; 214cc <g_unichar_xdigit_value@plt+0xd668>
   21134:	add	r0, pc, r0
   21138:	add	r1, pc, r1
   2113c:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   21140:	mov	r5, r0
   21144:	mov	r0, r4
   21148:	mov	r1, r5
   2114c:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   21150:	cmp	r5, #0
   21154:	beq	21160 <g_unichar_xdigit_value@plt+0xd2fc>
   21158:	mov	r0, r5
   2115c:	bl	13b94 <g_object_unref@plt>
   21160:	ldr	r0, [pc, #872]	; 214d0 <g_unichar_xdigit_value@plt+0xd66c>
   21164:	ldr	r1, [pc, #872]	; 214d4 <g_unichar_xdigit_value@plt+0xd670>
   21168:	add	r0, pc, r0
   2116c:	add	r1, pc, r1
   21170:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   21174:	mov	r5, r0
   21178:	mov	r0, r4
   2117c:	mov	r1, r5
   21180:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   21184:	cmp	r5, #0
   21188:	beq	21194 <g_unichar_xdigit_value@plt+0xd330>
   2118c:	mov	r0, r5
   21190:	bl	13b94 <g_object_unref@plt>
   21194:	ldr	r0, [pc, #828]	; 214d8 <g_unichar_xdigit_value@plt+0xd674>
   21198:	ldr	r1, [pc, #828]	; 214dc <g_unichar_xdigit_value@plt+0xd678>
   2119c:	add	r0, pc, r0
   211a0:	add	r1, pc, r1
   211a4:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   211a8:	mov	r5, r0
   211ac:	mov	r0, r4
   211b0:	mov	r1, r5
   211b4:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   211b8:	cmp	r5, #0
   211bc:	beq	211c8 <g_unichar_xdigit_value@plt+0xd364>
   211c0:	mov	r0, r5
   211c4:	bl	13b94 <g_object_unref@plt>
   211c8:	ldr	r0, [pc, #784]	; 214e0 <g_unichar_xdigit_value@plt+0xd67c>
   211cc:	ldr	r1, [pc, #784]	; 214e4 <g_unichar_xdigit_value@plt+0xd680>
   211d0:	add	r0, pc, r0
   211d4:	add	r1, pc, r1
   211d8:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   211dc:	mov	r5, r0
   211e0:	mov	r0, r4
   211e4:	mov	r1, r5
   211e8:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   211ec:	cmp	r5, #0
   211f0:	beq	211fc <g_unichar_xdigit_value@plt+0xd398>
   211f4:	mov	r0, r5
   211f8:	bl	13b94 <g_object_unref@plt>
   211fc:	ldr	r0, [pc, #740]	; 214e8 <g_unichar_xdigit_value@plt+0xd684>
   21200:	ldr	r1, [pc, #740]	; 214ec <g_unichar_xdigit_value@plt+0xd688>
   21204:	add	r0, pc, r0
   21208:	add	r1, pc, r1
   2120c:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   21210:	mov	r5, r0
   21214:	mov	r0, r4
   21218:	mov	r1, r5
   2121c:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   21220:	cmp	r5, #0
   21224:	beq	21230 <g_unichar_xdigit_value@plt+0xd3cc>
   21228:	mov	r0, r5
   2122c:	bl	13b94 <g_object_unref@plt>
   21230:	ldr	r0, [pc, #696]	; 214f0 <g_unichar_xdigit_value@plt+0xd68c>
   21234:	ldr	r1, [pc, #696]	; 214f4 <g_unichar_xdigit_value@plt+0xd690>
   21238:	add	r0, pc, r0
   2123c:	add	r1, pc, r1
   21240:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   21244:	mov	r5, r0
   21248:	mov	r0, r4
   2124c:	mov	r1, r5
   21250:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   21254:	cmp	r5, #0
   21258:	beq	21264 <g_unichar_xdigit_value@plt+0xd400>
   2125c:	mov	r0, r5
   21260:	bl	13b94 <g_object_unref@plt>
   21264:	ldr	r0, [pc, #652]	; 214f8 <g_unichar_xdigit_value@plt+0xd694>
   21268:	ldr	r1, [pc, #652]	; 214fc <g_unichar_xdigit_value@plt+0xd698>
   2126c:	add	r0, pc, r0
   21270:	add	r1, pc, r1
   21274:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   21278:	mov	r5, r0
   2127c:	mov	r0, r4
   21280:	mov	r1, r5
   21284:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   21288:	cmp	r5, #0
   2128c:	beq	21298 <g_unichar_xdigit_value@plt+0xd434>
   21290:	mov	r0, r5
   21294:	bl	13b94 <g_object_unref@plt>
   21298:	ldr	r0, [pc, #608]	; 21500 <g_unichar_xdigit_value@plt+0xd69c>
   2129c:	ldr	r1, [pc, #608]	; 21504 <g_unichar_xdigit_value@plt+0xd6a0>
   212a0:	add	r0, pc, r0
   212a4:	add	r1, pc, r1
   212a8:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   212ac:	mov	r5, r0
   212b0:	mov	r0, r4
   212b4:	mov	r1, r5
   212b8:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   212bc:	cmp	r5, #0
   212c0:	beq	212cc <g_unichar_xdigit_value@plt+0xd468>
   212c4:	mov	r0, r5
   212c8:	bl	13b94 <g_object_unref@plt>
   212cc:	ldr	r0, [pc, #564]	; 21508 <g_unichar_xdigit_value@plt+0xd6a4>
   212d0:	ldr	r1, [pc, #564]	; 2150c <g_unichar_xdigit_value@plt+0xd6a8>
   212d4:	add	r0, pc, r0
   212d8:	add	r1, pc, r1
   212dc:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   212e0:	mov	r5, r0
   212e4:	mov	r0, r4
   212e8:	mov	r1, r5
   212ec:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   212f0:	cmp	r5, #0
   212f4:	beq	21300 <g_unichar_xdigit_value@plt+0xd49c>
   212f8:	mov	r0, r5
   212fc:	bl	13b94 <g_object_unref@plt>
   21300:	ldr	r0, [pc, #520]	; 21510 <g_unichar_xdigit_value@plt+0xd6ac>
   21304:	ldr	r1, [pc, #520]	; 21514 <g_unichar_xdigit_value@plt+0xd6b0>
   21308:	add	r0, pc, r0
   2130c:	add	r1, pc, r1
   21310:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   21314:	mov	r5, r0
   21318:	mov	r0, r4
   2131c:	mov	r1, r5
   21320:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   21324:	cmp	r5, #0
   21328:	beq	21334 <g_unichar_xdigit_value@plt+0xd4d0>
   2132c:	mov	r0, r5
   21330:	bl	13b94 <g_object_unref@plt>
   21334:	ldr	r0, [pc, #476]	; 21518 <g_unichar_xdigit_value@plt+0xd6b4>
   21338:	ldr	r1, [pc, #476]	; 2151c <g_unichar_xdigit_value@plt+0xd6b8>
   2133c:	add	r0, pc, r0
   21340:	add	r1, pc, r1
   21344:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   21348:	mov	r5, r0
   2134c:	mov	r0, r4
   21350:	mov	r1, r5
   21354:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   21358:	cmp	r5, #0
   2135c:	beq	21368 <g_unichar_xdigit_value@plt+0xd504>
   21360:	mov	r0, r5
   21364:	bl	13b94 <g_object_unref@plt>
   21368:	ldr	r0, [pc, #432]	; 21520 <g_unichar_xdigit_value@plt+0xd6bc>
   2136c:	ldr	r1, [pc, #432]	; 21524 <g_unichar_xdigit_value@plt+0xd6c0>
   21370:	add	r0, pc, r0
   21374:	add	r1, pc, r1
   21378:	bl	23c18 <g_unichar_xdigit_value@plt+0xfdb4>
   2137c:	mov	r5, r0
   21380:	mov	r0, r4
   21384:	mov	r1, r5
   21388:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   2138c:	cmp	r5, #0
   21390:	beq	2139c <g_unichar_xdigit_value@plt+0xd538>
   21394:	mov	r0, r5
   21398:	bl	13b94 <g_object_unref@plt>
   2139c:	ldr	ip, [sp, #24]
   213a0:	mov	r0, r4
   213a4:	ldr	r2, [sp, #44]	; 0x2c
   213a8:	ldr	r3, [ip]
   213ac:	cmp	r2, r3
   213b0:	bne	213e4 <g_unichar_xdigit_value@plt+0xd580>
   213b4:	add	sp, sp, #52	; 0x34
   213b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   213bc:	mov	r7, r3
   213c0:	b	20c8c <g_unichar_xdigit_value@plt+0xce28>
   213c4:	ldr	r0, [sp, #36]	; 0x24
   213c8:	str	r5, [sp, #36]	; 0x24
   213cc:	cmp	r0, #0
   213d0:	beq	20cac <g_unichar_xdigit_value@plt+0xce48>
   213d4:	bl	13498 <g_error_free@plt>
   213d8:	b	20cac <g_unichar_xdigit_value@plt+0xce48>
   213dc:	ldr	r7, [sp, #20]
   213e0:	b	20c8c <g_unichar_xdigit_value@plt+0xce28>
   213e4:	bl	13978 <__stack_chk_fail@plt>
   213e8:	andeq	r0, r3, r0, asr #11
   213ec:	muleq	r0, r0, r3
   213f0:	andeq	r0, r0, r0, lsr #7
   213f4:	muleq	r0, r4, r3
   213f8:			; <UNDEFINED> instruction: 0xffffee4c
   213fc:			; <UNDEFINED> instruction: 0xffffee3c
   21400:	andeq	r8, r1, ip, ror #18
   21404:	andeq	r9, r1, r8, asr #32
   21408:	andeq	r7, r1, r4, ror #9
   2140c:	andeq	r8, r1, r0, ror #29
   21410:	andeq	r7, r1, ip, asr #10
   21414:	andeq	r0, r0, r4, lsr #7
   21418:	andeq	r8, r1, r0, ror #28
   2141c:	andeq	r8, r1, r0, ror #28
   21420:	andeq	r8, r1, ip, lsr lr
   21424:	andeq	r8, r1, ip, lsr lr
   21428:	andeq	r8, r1, r0, lsr #28
   2142c:	andeq	r8, r1, r4, lsr #28
   21430:	andeq	r8, r1, r0, lsl #28
   21434:	andeq	r8, r1, r0, lsl #28
   21438:	andeq	r8, r1, r0, ror #27
   2143c:	andeq	r8, r1, r0, ror #27
   21440:			; <UNDEFINED> instruction: 0x00018db8
   21444:			; <UNDEFINED> instruction: 0x00018db8
   21448:	muleq	r1, r4, sp
   2144c:	muleq	r1, r8, sp
   21450:	andeq	r8, r1, r4, ror sp
   21454:	andeq	r8, r1, r4, ror sp
   21458:	andeq	r8, r1, ip, asr #26
   2145c:	andeq	r8, r1, r0, asr sp
   21460:	andeq	r8, r1, ip, lsr #26
   21464:	andeq	r8, r1, r0, lsr sp
   21468:	andeq	r8, r1, r8, lsl #26
   2146c:	andeq	r8, r1, ip, lsl #26
   21470:	andeq	r8, r1, r4, ror #25
   21474:	andeq	r8, r1, r8, ror #25
   21478:	andeq	fp, r1, r0, lsl r0
   2147c:			; <UNDEFINED> instruction: 0x00018cbc
   21480:	muleq	r1, r4, ip
   21484:	muleq	r1, r4, ip
   21488:	andeq	r8, r1, r0, ror ip
   2148c:	andeq	r8, r1, r0, ror ip
   21490:	andeq	r8, r1, r8, asr #24
   21494:	andeq	r8, r1, r8, asr #24
   21498:	andeq	r8, r1, r0, lsr #24
   2149c:	andeq	r8, r1, r0, lsr #24
   214a0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   214a4:	strdeq	r8, [r1], -ip
   214a8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   214ac:	ldrdeq	r8, [r1], -ip
   214b0:			; <UNDEFINED> instruction: 0x00018bb8
   214b4:			; <UNDEFINED> instruction: 0x00018bbc
   214b8:	muleq	r1, r8, fp
   214bc:	andeq	r8, r1, r0, lsr #23
   214c0:	andeq	r8, r1, r0, lsl #23
   214c4:	andeq	r8, r1, r8, lsl #23
   214c8:	andeq	r8, r1, r8, ror #22
   214cc:	andeq	r8, r1, r0, ror fp
   214d0:	andeq	r8, r1, r0, asr fp
   214d4:	andeq	r8, r1, r4, asr fp
   214d8:	andeq	r8, r1, r4, lsr fp
   214dc:	andeq	r8, r1, r8, lsr fp
   214e0:	andeq	r8, r1, ip, lsl fp
   214e4:	andeq	r8, r1, r0, lsr #22
   214e8:	andeq	r8, r1, r4, lsl #22
   214ec:	andeq	r8, r1, ip, lsl #22
   214f0:	strdeq	r8, [r1], -r0
   214f4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   214f8:	andeq	r8, r1, r0, ror #21
   214fc:	andeq	r8, r1, r8, ror #21
   21500:	ldrdeq	r8, [r1], -r0
   21504:	ldrdeq	r8, [r1], -r4
   21508:			; <UNDEFINED> instruction: 0x00018abc
   2150c:	andeq	r8, r1, r0, asr #21
   21510:	andeq	r8, r1, ip, lsr #21
   21514:			; <UNDEFINED> instruction: 0x00018ab0
   21518:	muleq	r1, ip, sl
   2151c:	andeq	r8, r1, r0, lsr #21
   21520:	andeq	r8, r1, r4, lsl #21
   21524:	andeq	r8, r1, r8, lsl #21
   21528:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2152c:	subs	r7, r0, #0
   21530:	sub	sp, sp, #8
   21534:	mov	r4, r1
   21538:	mov	r5, r2
   2153c:	mov	r6, r3
   21540:	ldr	r8, [sp, #40]	; 0x28
   21544:	beq	21668 <g_unichar_xdigit_value@plt+0xd804>
   21548:	cmp	r1, #0
   2154c:	beq	2168c <g_unichar_xdigit_value@plt+0xd828>
   21550:	cmp	r2, #0
   21554:	beq	216b4 <g_unichar_xdigit_value@plt+0xd850>
   21558:	cmp	r3, #0
   2155c:	beq	216dc <g_unichar_xdigit_value@plt+0xd878>
   21560:	mov	r0, r1
   21564:	ldr	r1, [pc, #420]	; 21710 <g_unichar_xdigit_value@plt+0xd8ac>
   21568:	mov	r2, #0
   2156c:	add	r1, pc, r1
   21570:	bl	13af8 <g_strconcat@plt>
   21574:	mov	r1, r5
   21578:	mov	r2, #0
   2157c:	mov	r9, r0
   21580:	bl	13af8 <g_strconcat@plt>
   21584:	ldr	r1, [pc, #392]	; 21714 <g_unichar_xdigit_value@plt+0xd8b0>
   21588:	mov	r2, #0
   2158c:	add	r1, pc, r1
   21590:	mov	r5, r0
   21594:	bl	13af8 <g_strconcat@plt>
   21598:	mov	r1, r6
   2159c:	mov	r2, #0
   215a0:	mov	sl, r0
   215a4:	bl	13af8 <g_strconcat@plt>
   215a8:	mov	r4, r0
   215ac:	mov	r0, sl
   215b0:	bl	1399c <g_free@plt>
   215b4:	mov	r0, r5
   215b8:	bl	1399c <g_free@plt>
   215bc:	mov	r0, r9
   215c0:	bl	1399c <g_free@plt>
   215c4:	mov	r0, r7
   215c8:	mov	r1, r4
   215cc:	bl	1ff68 <g_unichar_xdigit_value@plt+0xc104>
   215d0:	subs	r5, r0, #0
   215d4:	beq	21618 <g_unichar_xdigit_value@plt+0xd7b4>
   215d8:	mov	r1, r8
   215dc:	bl	236ac <g_unichar_xdigit_value@plt+0xf848>
   215e0:	cmp	r0, #0
   215e4:	beq	21644 <g_unichar_xdigit_value@plt+0xd7e0>
   215e8:	mov	r0, r7
   215ec:	mov	r1, r5
   215f0:	bl	208cc <g_unichar_xdigit_value@plt+0xca68>
   215f4:	subs	r6, r0, #0
   215f8:	bne	21704 <g_unichar_xdigit_value@plt+0xd8a0>
   215fc:	mov	r0, r5
   21600:	bl	13b94 <g_object_unref@plt>
   21604:	mov	r0, r4
   21608:	bl	1399c <g_free@plt>
   2160c:	mov	r0, r6
   21610:	add	sp, sp, #8
   21614:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21618:	mov	r2, r5
   2161c:	str	r5, [sp]
   21620:	mov	r0, r8
   21624:	mov	r3, r5
   21628:	mov	r1, #1
   2162c:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   21630:	mov	r0, r4
   21634:	bl	1399c <g_free@plt>
   21638:	mov	r0, #0
   2163c:	add	sp, sp, #8
   21640:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21644:	mov	r2, r0
   21648:	str	r0, [sp]
   2164c:	mov	r3, r2
   21650:	mov	r0, r8
   21654:	mov	r1, #1
   21658:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   2165c:	mov	r0, r5
   21660:	bl	13b94 <g_object_unref@plt>
   21664:	b	21630 <g_unichar_xdigit_value@plt+0xd7cc>
   21668:	ldr	r1, [pc, #168]	; 21718 <g_unichar_xdigit_value@plt+0xd8b4>
   2166c:	ldr	r2, [pc, #168]	; 2171c <g_unichar_xdigit_value@plt+0xd8b8>
   21670:	add	r1, pc, r1
   21674:	add	r2, pc, r2
   21678:	add	r1, r1, #220	; 0xdc
   2167c:	bl	13450 <g_return_if_fail_warning@plt>
   21680:	mov	r0, r7
   21684:	add	sp, sp, #8
   21688:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2168c:	ldr	r1, [pc, #140]	; 21720 <g_unichar_xdigit_value@plt+0xd8bc>
   21690:	mov	r0, r4
   21694:	ldr	r2, [pc, #136]	; 21724 <g_unichar_xdigit_value@plt+0xd8c0>
   21698:	add	r1, pc, r1
   2169c:	add	r2, pc, r2
   216a0:	add	r1, r1, #220	; 0xdc
   216a4:	bl	13450 <g_return_if_fail_warning@plt>
   216a8:	mov	r0, r4
   216ac:	add	sp, sp, #8
   216b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   216b4:	ldr	r1, [pc, #108]	; 21728 <g_unichar_xdigit_value@plt+0xd8c4>
   216b8:	mov	r0, r2
   216bc:	ldr	r2, [pc, #104]	; 2172c <g_unichar_xdigit_value@plt+0xd8c8>
   216c0:	add	r1, pc, r1
   216c4:	add	r2, pc, r2
   216c8:	add	r1, r1, #220	; 0xdc
   216cc:	bl	13450 <g_return_if_fail_warning@plt>
   216d0:	mov	r0, r5
   216d4:	add	sp, sp, #8
   216d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   216dc:	ldr	r1, [pc, #76]	; 21730 <g_unichar_xdigit_value@plt+0xd8cc>
   216e0:	mov	r0, r3
   216e4:	ldr	r2, [pc, #72]	; 21734 <g_unichar_xdigit_value@plt+0xd8d0>
   216e8:	add	r1, pc, r1
   216ec:	add	r2, pc, r2
   216f0:	add	r1, r1, #220	; 0xdc
   216f4:	bl	13450 <g_return_if_fail_warning@plt>
   216f8:	mov	r0, r6
   216fc:	add	sp, sp, #8
   21700:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21704:	mov	r0, r7
   21708:	bl	1fa38 <g_unichar_xdigit_value@plt+0xbbd4>
   2170c:	b	215fc <g_unichar_xdigit_value@plt+0xd798>
   21710:	andeq	r8, r1, r4, lsr #32
   21714:	andeq	r8, r1, r4, lsl #17
   21718:	andeq	r8, r1, ip, lsr r2
   2171c:	andeq	r6, r1, r0, ror sl
   21720:	andeq	r8, r1, r4, lsl r2
   21724:	andeq	r9, r1, r4, lsr pc
   21728:	andeq	r8, r1, ip, ror #3
   2172c:	muleq	r1, r4, lr
   21730:	andeq	r8, r1, r4, asr #3
   21734:	muleq	r1, r0, lr
   21738:	push	{r4, r5, r6, lr}
   2173c:	subs	r5, r0, #0
   21740:	mov	r4, r1
   21744:	beq	217b4 <g_unichar_xdigit_value@plt+0xd950>
   21748:	cmp	r1, #0
   2174c:	beq	217d0 <g_unichar_xdigit_value@plt+0xd96c>
   21750:	bl	207f8 <g_unichar_xdigit_value@plt+0xc994>
   21754:	subs	r6, r0, #0
   21758:	popeq	{r4, r5, r6, pc}
   2175c:	bl	22b3c <g_unichar_xdigit_value@plt+0xecd8>
   21760:	cmp	r0, #0
   21764:	bne	21774 <g_unichar_xdigit_value@plt+0xd910>
   21768:	mov	r0, r6
   2176c:	pop	{r4, r5, r6, lr}
   21770:	b	13b94 <g_object_unref@plt>
   21774:	ldr	r3, [r5, #12]
   21778:	mov	r1, r4
   2177c:	ldr	r0, [r3, #4]
   21780:	bl	13b28 <g_hash_table_remove@plt>
   21784:	mov	r0, r5
   21788:	bl	1fa38 <g_unichar_xdigit_value@plt+0xbbd4>
   2178c:	ldr	r1, [pc, #92]	; 217f0 <g_unichar_xdigit_value@plt+0xd98c>
   21790:	mov	r0, r5
   21794:	mov	r3, r6
   21798:	add	r1, pc, r1
   2179c:	mov	r2, #0
   217a0:	ldr	r1, [r1, #8]
   217a4:	bl	136e4 <g_signal_emit@plt>
   217a8:	mov	r0, r6
   217ac:	pop	{r4, r5, r6, lr}
   217b0:	b	13b94 <g_object_unref@plt>
   217b4:	ldr	r1, [pc, #56]	; 217f4 <g_unichar_xdigit_value@plt+0xd990>
   217b8:	ldr	r2, [pc, #56]	; 217f8 <g_unichar_xdigit_value@plt+0xd994>
   217bc:	add	r1, pc, r1
   217c0:	add	r2, pc, r2
   217c4:	add	r1, r1, #268	; 0x10c
   217c8:	pop	{r4, r5, r6, lr}
   217cc:	b	13450 <g_return_if_fail_warning@plt>
   217d0:	ldr	r1, [pc, #36]	; 217fc <g_unichar_xdigit_value@plt+0xd998>
   217d4:	mov	r0, r4
   217d8:	ldr	r2, [pc, #32]	; 21800 <g_unichar_xdigit_value@plt+0xd99c>
   217dc:	add	r1, pc, r1
   217e0:	add	r2, pc, r2
   217e4:	add	r1, r1, #268	; 0x10c
   217e8:	pop	{r4, r5, r6, lr}
   217ec:	b	13450 <g_return_if_fail_warning@plt>
   217f0:	muleq	r2, r8, sp
   217f4:	strdeq	r8, [r1], -r0
   217f8:	andeq	r6, r1, r4, lsr #18
   217fc:	ldrdeq	r8, [r1], -r0
   21800:	strdeq	r9, [r1], -r0
   21804:	push	{r4, r5, r6, r7, r8, lr}
   21808:	subs	r6, r0, #0
   2180c:	mov	r4, r1
   21810:	beq	218c0 <g_unichar_xdigit_value@plt+0xda5c>
   21814:	cmp	r1, #0
   21818:	beq	218e0 <g_unichar_xdigit_value@plt+0xda7c>
   2181c:	mov	r0, r1
   21820:	mvn	r1, #0
   21824:	bl	134c8 <g_utf8_strdown@plt>
   21828:	ldr	r1, [pc, #212]	; 21904 <g_unichar_xdigit_value@plt+0xdaa0>
   2182c:	add	r1, pc, r1
   21830:	mov	r5, r0
   21834:	bl	138a0 <g_str_has_prefix@plt>
   21838:	cmp	r0, #0
   2183c:	bne	2186c <g_unichar_xdigit_value@plt+0xda08>
   21840:	ldr	r3, [r6, #12]
   21844:	mov	r1, r4
   21848:	ldr	r0, [r3, #4]
   2184c:	bl	13c54 <g_hash_table_contains@plt>
   21850:	cmp	r0, #0
   21854:	movne	r4, #1
   21858:	beq	218a8 <g_unichar_xdigit_value@plt+0xda44>
   2185c:	mov	r0, r5
   21860:	bl	1399c <g_free@plt>
   21864:	mov	r0, r4
   21868:	pop	{r4, r5, r6, r7, r8, pc}
   2186c:	mov	r1, #3
   21870:	mvn	r2, #0
   21874:	mov	r0, r5
   21878:	bl	1f8cc <g_unichar_xdigit_value@plt+0xba68>
   2187c:	mov	r8, r0
   21880:	bl	14a70 <g_unichar_xdigit_value@plt+0xc0c>
   21884:	mov	r7, r0
   21888:	mov	r0, r8
   2188c:	bl	1399c <g_free@plt>
   21890:	cmp	r7, #0
   21894:	blt	21840 <g_unichar_xdigit_value@plt+0xd9dc>
   21898:	mov	r0, r5
   2189c:	bl	1399c <g_free@plt>
   218a0:	mov	r0, #1
   218a4:	pop	{r4, r5, r6, r7, r8, pc}
   218a8:	ldr	r3, [r6, #12]
   218ac:	mov	r1, r5
   218b0:	ldr	r0, [r3, #4]
   218b4:	bl	13c54 <g_hash_table_contains@plt>
   218b8:	mov	r4, r0
   218bc:	b	2185c <g_unichar_xdigit_value@plt+0xd9f8>
   218c0:	ldr	r1, [pc, #64]	; 21908 <g_unichar_xdigit_value@plt+0xdaa4>
   218c4:	ldr	r2, [pc, #64]	; 2190c <g_unichar_xdigit_value@plt+0xdaa8>
   218c8:	add	r1, pc, r1
   218cc:	add	r2, pc, r2
   218d0:	add	r1, r1, #292	; 0x124
   218d4:	bl	13450 <g_return_if_fail_warning@plt>
   218d8:	mov	r0, r6
   218dc:	pop	{r4, r5, r6, r7, r8, pc}
   218e0:	ldr	r1, [pc, #40]	; 21910 <g_unichar_xdigit_value@plt+0xdaac>
   218e4:	mov	r0, r4
   218e8:	ldr	r2, [pc, #36]	; 21914 <g_unichar_xdigit_value@plt+0xdab0>
   218ec:	add	r1, pc, r1
   218f0:	add	r2, pc, r2
   218f4:	add	r1, r1, #292	; 0x124
   218f8:	bl	13450 <g_return_if_fail_warning@plt>
   218fc:	mov	r0, r4
   21900:	pop	{r4, r5, r6, r7, r8, pc}
   21904:	strdeq	r8, [r1], -r0
   21908:	andeq	r7, r1, r4, ror #31
   2190c:	andeq	r6, r1, r8, lsl r8
   21910:	andeq	r7, r1, r0, asr #31
   21914:	andeq	r9, r1, r0, ror #25
   21918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2191c:	subs	ip, r0, #0
   21920:	sub	sp, sp, #20
   21924:	ldr	sl, [pc, #684]	; 21bd8 <g_unichar_xdigit_value@plt+0xdd74>
   21928:	mov	r7, r1
   2192c:	mov	r6, r2
   21930:	str	ip, [sp, #12]
   21934:	mov	r4, r3
   21938:	add	sl, pc, sl
   2193c:	beq	21b00 <g_unichar_xdigit_value@plt+0xdc9c>
   21940:	cmp	r1, #0
   21944:	beq	21b24 <g_unichar_xdigit_value@plt+0xdcc0>
   21948:	ldr	ip, [sp, #56]	; 0x38
   2194c:	cmp	ip, #0
   21950:	beq	21b4c <g_unichar_xdigit_value@plt+0xdce8>
   21954:	mov	r0, r1
   21958:	mvn	r1, #0
   2195c:	bl	134c8 <g_utf8_strdown@plt>
   21960:	cmp	r6, #0
   21964:	moveq	r5, r6
   21968:	mov	r8, r0
   2196c:	beq	219bc <g_unichar_xdigit_value@plt+0xdb58>
   21970:	add	r0, r4, #1
   21974:	mov	r1, #4
   21978:	bl	13c00 <g_malloc0_n@plt>
   2197c:	cmp	r4, #0
   21980:	mov	r5, r0
   21984:	ble	219bc <g_unichar_xdigit_value@plt+0xdb58>
   21988:	mov	fp, #0
   2198c:	mov	r9, fp
   21990:	ldr	r2, [r6, fp]
   21994:	cmp	r2, #0
   21998:	mov	r0, r2
   2199c:	moveq	r0, r2
   219a0:	beq	219a8 <g_unichar_xdigit_value@plt+0xdb44>
   219a4:	bl	133f0 <g_object_ref@plt>
   219a8:	add	r9, r9, #1
   219ac:	str	r0, [r5, fp]
   219b0:	cmp	r9, r4
   219b4:	add	fp, fp, #4
   219b8:	bne	21990 <g_unichar_xdigit_value@plt+0xdb2c>
   219bc:	ldr	r1, [pc, #536]	; 21bdc <g_unichar_xdigit_value@plt+0xdd78>
   219c0:	mov	r0, r8
   219c4:	add	r1, pc, r1
   219c8:	bl	138a0 <g_str_has_prefix@plt>
   219cc:	cmp	r0, #0
   219d0:	bne	21a34 <g_unichar_xdigit_value@plt+0xdbd0>
   219d4:	ldr	r0, [sp, #12]
   219d8:	mov	r1, r7
   219dc:	bl	207f8 <g_unichar_xdigit_value@plt+0xc994>
   219e0:	subs	r6, r0, #0
   219e4:	beq	21b94 <g_unichar_xdigit_value@plt+0xdd30>
   219e8:	ldr	r3, [sp, #56]	; 0x38
   219ec:	mov	r1, r5
   219f0:	mov	r2, r4
   219f4:	bl	22af8 <g_unichar_xdigit_value@plt+0xec94>
   219f8:	mov	r7, r0
   219fc:	mov	r0, r6
   21a00:	bl	13b94 <g_object_unref@plt>
   21a04:	ldr	r3, [pc, #468]	; 21be0 <g_unichar_xdigit_value@plt+0xdd7c>
   21a08:	mov	r1, r4
   21a0c:	mov	r0, r5
   21a10:	ldr	r2, [sl, r3]
   21a14:	bl	1f874 <g_unichar_xdigit_value@plt+0xba10>
   21a18:	mov	r0, r5
   21a1c:	bl	1399c <g_free@plt>
   21a20:	mov	r0, r8
   21a24:	bl	1399c <g_free@plt>
   21a28:	mov	r0, r7
   21a2c:	add	sp, sp, #20
   21a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a34:	mov	r1, #3
   21a38:	mvn	r2, #0
   21a3c:	mov	r0, r8
   21a40:	bl	1f8cc <g_unichar_xdigit_value@plt+0xba68>
   21a44:	str	r0, [sp, #8]
   21a48:	bl	14a70 <g_unichar_xdigit_value@plt+0xc0c>
   21a4c:	ldr	r3, [sp, #8]
   21a50:	mov	r6, r0
   21a54:	mov	r0, r3
   21a58:	bl	1399c <g_free@plt>
   21a5c:	cmp	r6, #0
   21a60:	ble	219d4 <g_unichar_xdigit_value@plt+0xdb70>
   21a64:	mov	r1, #3
   21a68:	mvn	r2, #0
   21a6c:	mov	r0, r8
   21a70:	bl	1f8cc <g_unichar_xdigit_value@plt+0xba68>
   21a74:	mov	r7, r0
   21a78:	bl	14a70 <g_unichar_xdigit_value@plt+0xc0c>
   21a7c:	mov	r2, #0
   21a80:	mov	r3, #0
   21a84:	asr	r1, r0, #31
   21a88:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   21a8c:	mov	r6, r0
   21a90:	mov	r0, r7
   21a94:	bl	1399c <g_free@plt>
   21a98:	cmp	r6, #0
   21a9c:	moveq	r7, r6
   21aa0:	beq	21ab0 <g_unichar_xdigit_value@plt+0xdc4c>
   21aa4:	mov	r0, r6
   21aa8:	bl	133f0 <g_object_ref@plt>
   21aac:	mov	r7, r0
   21ab0:	cmp	r4, #0
   21ab4:	beq	21b74 <g_unichar_xdigit_value@plt+0xdd10>
   21ab8:	lsl	r1, r4, #1
   21abc:	mov	r0, r5
   21ac0:	add	r1, r1, #1
   21ac4:	mov	r2, #4
   21ac8:	bl	13b88 <g_realloc_n@plt>
   21acc:	mov	r5, r0
   21ad0:	add	r3, r5, r4, lsl #2
   21ad4:	cmp	r6, #0
   21ad8:	str	r7, [r5, r4, lsl #2]
   21adc:	mov	r2, #0
   21ae0:	add	r4, r4, #1
   21ae4:	str	r2, [r3, #4]
   21ae8:	beq	21b88 <g_unichar_xdigit_value@plt+0xdd24>
   21aec:	ldr	r7, [pc, #240]	; 21be4 <g_unichar_xdigit_value@plt+0xdd80>
   21af0:	mov	r0, r6
   21af4:	bl	13b94 <g_object_unref@plt>
   21af8:	add	r7, pc, r7
   21afc:	b	219d4 <g_unichar_xdigit_value@plt+0xdb70>
   21b00:	ldr	r1, [pc, #224]	; 21be8 <g_unichar_xdigit_value@plt+0xdd84>
   21b04:	ldr	r2, [pc, #224]	; 21bec <g_unichar_xdigit_value@plt+0xdd88>
   21b08:	add	r1, pc, r1
   21b0c:	add	r2, pc, r2
   21b10:	add	r1, r1, #332	; 0x14c
   21b14:	bl	13450 <g_return_if_fail_warning@plt>
   21b18:	ldr	r0, [sp, #12]
   21b1c:	add	sp, sp, #20
   21b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b24:	ldr	r1, [pc, #196]	; 21bf0 <g_unichar_xdigit_value@plt+0xdd8c>
   21b28:	mov	r0, r7
   21b2c:	ldr	r2, [pc, #192]	; 21bf4 <g_unichar_xdigit_value@plt+0xdd90>
   21b30:	add	r1, pc, r1
   21b34:	add	r2, pc, r2
   21b38:	add	r1, r1, #332	; 0x14c
   21b3c:	bl	13450 <g_return_if_fail_warning@plt>
   21b40:	mov	r0, r7
   21b44:	add	sp, sp, #20
   21b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b4c:	ldr	r1, [pc, #164]	; 21bf8 <g_unichar_xdigit_value@plt+0xdd94>
   21b50:	ldr	r2, [pc, #164]	; 21bfc <g_unichar_xdigit_value@plt+0xdd98>
   21b54:	add	r1, pc, r1
   21b58:	ldr	r0, [sp, #56]	; 0x38
   21b5c:	add	r2, pc, r2
   21b60:	add	r1, r1, #332	; 0x14c
   21b64:	bl	13450 <g_return_if_fail_warning@plt>
   21b68:	ldr	r0, [sp, #56]	; 0x38
   21b6c:	add	sp, sp, #20
   21b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b74:	mov	r0, r5
   21b78:	mov	r1, #20
   21b7c:	bl	13c48 <g_realloc@plt>
   21b80:	mov	r5, r0
   21b84:	b	21ad0 <g_unichar_xdigit_value@plt+0xdc6c>
   21b88:	ldr	r7, [pc, #112]	; 21c00 <g_unichar_xdigit_value@plt+0xdd9c>
   21b8c:	add	r7, pc, r7
   21b90:	b	219d4 <g_unichar_xdigit_value@plt+0xdb70>
   21b94:	ldr	r0, [sp, #56]	; 0x38
   21b98:	mov	r1, #4
   21b9c:	mov	r2, r6
   21ba0:	mov	r3, r6
   21ba4:	str	r6, [sp]
   21ba8:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   21bac:	ldr	r3, [pc, #44]	; 21be0 <g_unichar_xdigit_value@plt+0xdd7c>
   21bb0:	mov	r1, r4
   21bb4:	mov	r0, r5
   21bb8:	ldr	r2, [sl, r3]
   21bbc:	bl	1f874 <g_unichar_xdigit_value@plt+0xba10>
   21bc0:	mov	r0, r5
   21bc4:	bl	1399c <g_free@plt>
   21bc8:	mov	r0, r8
   21bcc:	bl	1399c <g_free@plt>
   21bd0:	mov	r0, r6
   21bd4:	b	21a2c <g_unichar_xdigit_value@plt+0xdbc8>
   21bd8:	andeq	pc, r2, r0, asr #13
   21bdc:	andeq	r8, r1, r8, asr r1
   21be0:			; <UNDEFINED> instruction: 0x000003b8
   21be4:	andeq	r8, r1, r4, lsr #32
   21be8:	andeq	r7, r1, r4, lsr #27
   21bec:	ldrdeq	r6, [r1], -r8
   21bf0:	andeq	r7, r1, ip, ror sp
   21bf4:	muleq	r1, ip, sl
   21bf8:	andeq	r7, r1, r8, asr sp
   21bfc:	andeq	r7, r1, ip, ror #19
   21c00:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   21c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c08:	sub	sp, sp, #100	; 0x64
   21c0c:	ldr	r3, [pc, #1260]	; 22100 <g_unichar_xdigit_value@plt+0xe29c>
   21c10:	subs	r5, r0, #0
   21c14:	str	r2, [sp, #44]	; 0x2c
   21c18:	mov	fp, #0
   21c1c:	add	r3, pc, r3
   21c20:	str	r3, [sp, #36]	; 0x24
   21c24:	ldr	ip, [sp, #36]	; 0x24
   21c28:	mov	r4, r1
   21c2c:	ldr	r3, [pc, #1232]	; 22104 <g_unichar_xdigit_value@plt+0xe2a0>
   21c30:	ldr	r3, [ip, r3]
   21c34:	str	fp, [sp, #68]	; 0x44
   21c38:	str	fp, [sp, #72]	; 0x48
   21c3c:	str	r3, [sp, #40]	; 0x28
   21c40:	ldr	r3, [r3]
   21c44:	str	fp, [sp, #76]	; 0x4c
   21c48:	str	fp, [sp, #80]	; 0x50
   21c4c:	str	r3, [sp, #92]	; 0x5c
   21c50:	str	fp, [sp, #84]	; 0x54
   21c54:	str	fp, [sp, #88]	; 0x58
   21c58:	beq	220cc <g_unichar_xdigit_value@plt+0xe268>
   21c5c:	cmp	r1, #0
   21c60:	beq	220ac <g_unichar_xdigit_value@plt+0xe248>
   21c64:	mov	r0, #4
   21c68:	bl	13c90 <g_malloc0@plt>
   21c6c:	str	r0, [sp, #28]
   21c70:	mov	r0, r4
   21c74:	bl	13ba0 <strlen@plt>
   21c78:	cmp	r0, #1
   21c7c:	ble	21e88 <g_unichar_xdigit_value@plt+0xe024>
   21c80:	mov	r0, r4
   21c84:	mvn	r1, #0
   21c88:	bl	134c8 <g_utf8_strdown@plt>
   21c8c:	ldr	r3, [r5, #12]
   21c90:	add	r5, sp, #68	; 0x44
   21c94:	add	r9, sp, #60	; 0x3c
   21c98:	add	r6, sp, #64	; 0x40
   21c9c:	mov	sl, fp
   21ca0:	ldr	r1, [r3, #4]
   21ca4:	mov	r8, fp
   21ca8:	mov	r4, fp
   21cac:	str	r0, [sp, #32]
   21cb0:	mov	r0, r5
   21cb4:	bl	137d4 <g_hash_table_iter_init@plt>
   21cb8:	mov	r1, r9
   21cbc:	mov	r2, r6
   21cc0:	mov	r0, r5
   21cc4:	str	fp, [sp, #60]	; 0x3c
   21cc8:	str	fp, [sp, #64]	; 0x40
   21ccc:	bl	13924 <g_hash_table_iter_next@plt>
   21cd0:	mov	r7, r0
   21cd4:	mov	r0, fp
   21cd8:	bl	1399c <g_free@plt>
   21cdc:	ldr	r0, [sp, #60]	; 0x3c
   21ce0:	bl	136f0 <g_strdup@plt>
   21ce4:	str	r0, [sp, #24]
   21ce8:	ldr	r0, [sp, #64]	; 0x40
   21cec:	cmp	r0, #0
   21cf0:	moveq	fp, r0
   21cf4:	beq	21d00 <g_unichar_xdigit_value@plt+0xde9c>
   21cf8:	bl	133f0 <g_object_ref@plt>
   21cfc:	mov	fp, r0
   21d00:	cmp	r7, #0
   21d04:	beq	21dbc <g_unichar_xdigit_value@plt+0xdf58>
   21d08:	mvn	r1, #0
   21d0c:	ldr	r0, [sp, #24]
   21d10:	bl	134c8 <g_utf8_strdown@plt>
   21d14:	ldr	r1, [sp, #32]
   21d18:	mov	r7, r0
   21d1c:	bl	138a0 <g_str_has_prefix@plt>
   21d20:	cmp	r0, #0
   21d24:	beq	21d5c <g_unichar_xdigit_value@plt+0xdef8>
   21d28:	cmp	fp, #0
   21d2c:	moveq	r3, fp
   21d30:	beq	21d40 <g_unichar_xdigit_value@plt+0xdedc>
   21d34:	mov	r0, fp
   21d38:	bl	133f0 <g_object_ref@plt>
   21d3c:	mov	r3, r0
   21d40:	cmp	r8, sl
   21d44:	beq	21e3c <g_unichar_xdigit_value@plt+0xdfd8>
   21d48:	ldr	ip, [sp, #28]
   21d4c:	str	r3, [ip, r8, lsl #2]
   21d50:	add	r3, ip, r8, lsl #2
   21d54:	add	r8, r8, #1
   21d58:	str	r4, [r3, #4]
   21d5c:	mov	r0, r7
   21d60:	bl	1399c <g_free@plt>
   21d64:	mov	r1, r9
   21d68:	mov	r2, r6
   21d6c:	mov	r0, r5
   21d70:	str	r4, [sp, #60]	; 0x3c
   21d74:	str	r4, [sp, #64]	; 0x40
   21d78:	bl	13924 <g_hash_table_iter_next@plt>
   21d7c:	mov	r7, r0
   21d80:	ldr	r0, [sp, #24]
   21d84:	bl	1399c <g_free@plt>
   21d88:	ldr	r0, [sp, #60]	; 0x3c
   21d8c:	bl	136f0 <g_strdup@plt>
   21d90:	cmp	fp, #0
   21d94:	str	r0, [sp, #24]
   21d98:	beq	21ce8 <g_unichar_xdigit_value@plt+0xde84>
   21d9c:	mov	r0, fp
   21da0:	bl	13b94 <g_object_unref@plt>
   21da4:	ldr	r0, [sp, #64]	; 0x40
   21da8:	cmp	r0, #0
   21dac:	moveq	fp, r0
   21db0:	bne	21cf8 <g_unichar_xdigit_value@plt+0xde94>
   21db4:	cmp	r7, #0
   21db8:	bne	21d08 <g_unichar_xdigit_value@plt+0xdea4>
   21dbc:	subs	r2, r8, #0
   21dc0:	str	fp, [sp, #48]	; 0x30
   21dc4:	str	r2, [sp, #52]	; 0x34
   21dc8:	bne	21ebc <g_unichar_xdigit_value@plt+0xe058>
   21dcc:	ldr	r3, [sp, #28]
   21dd0:	cmp	r3, #0
   21dd4:	beq	220ec <g_unichar_xdigit_value@plt+0xe288>
   21dd8:	mov	r0, #4
   21ddc:	bl	13c90 <g_malloc0@plt>
   21de0:	mov	r4, r0
   21de4:	mov	r8, #0
   21de8:	ldr	ip, [sp, #44]	; 0x2c
   21dec:	ldr	r2, [sp, #48]	; 0x30
   21df0:	cmp	ip, #0
   21df4:	strne	r8, [ip]
   21df8:	cmp	r2, #0
   21dfc:	beq	21e08 <g_unichar_xdigit_value@plt+0xdfa4>
   21e00:	mov	r0, r2
   21e04:	bl	13b94 <g_object_unref@plt>
   21e08:	ldr	r0, [sp, #24]
   21e0c:	bl	1399c <g_free@plt>
   21e10:	ldr	r0, [sp, #32]
   21e14:	bl	1399c <g_free@plt>
   21e18:	ldr	r3, [pc, #744]	; 22108 <g_unichar_xdigit_value@plt+0xe2a4>
   21e1c:	ldr	ip, [sp, #36]	; 0x24
   21e20:	ldr	r0, [sp, #28]
   21e24:	ldr	r1, [sp, #52]	; 0x34
   21e28:	ldr	r2, [ip, r3]
   21e2c:	bl	1f874 <g_unichar_xdigit_value@plt+0xba10>
   21e30:	ldr	r0, [sp, #28]
   21e34:	bl	1399c <g_free@plt>
   21e38:	b	21e9c <g_unichar_xdigit_value@plt+0xe038>
   21e3c:	cmp	r8, #0
   21e40:	bne	21e64 <g_unichar_xdigit_value@plt+0xe000>
   21e44:	ldr	r0, [sp, #28]
   21e48:	mov	r1, #20
   21e4c:	str	r3, [sp, #12]
   21e50:	bl	13c48 <g_realloc@plt>
   21e54:	mov	sl, #4
   21e58:	ldr	r3, [sp, #12]
   21e5c:	str	r0, [sp, #28]
   21e60:	b	21d48 <g_unichar_xdigit_value@plt+0xdee4>
   21e64:	lsl	sl, r8, #1
   21e68:	ldr	r0, [sp, #28]
   21e6c:	add	r1, sl, #1
   21e70:	mov	r2, #4
   21e74:	str	r3, [sp, #12]
   21e78:	bl	13b88 <g_realloc_n@plt>
   21e7c:	ldr	r3, [sp, #12]
   21e80:	str	r0, [sp, #28]
   21e84:	b	21d48 <g_unichar_xdigit_value@plt+0xdee4>
   21e88:	ldr	r3, [sp, #44]	; 0x2c
   21e8c:	cmp	r3, #0
   21e90:	beq	220f4 <g_unichar_xdigit_value@plt+0xe290>
   21e94:	ldr	r4, [sp, #28]
   21e98:	str	fp, [r3]
   21e9c:	ldr	ip, [sp, #40]	; 0x28
   21ea0:	mov	r0, r4
   21ea4:	ldr	r2, [sp, #92]	; 0x5c
   21ea8:	ldr	r3, [ip]
   21eac:	cmp	r2, r3
   21eb0:	bne	220fc <g_unichar_xdigit_value@plt+0xe298>
   21eb4:	add	sp, sp, #100	; 0x64
   21eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21ebc:	ldr	ip, [sp, #28]
   21ec0:	sub	r3, r8, #-1073741823	; 0xc0000001
   21ec4:	ldr	sl, [ip, r3, lsl #2]
   21ec8:	rsbs	sl, sl, #1
   21ecc:	movcc	sl, #0
   21ed0:	rsb	r9, sl, r8
   21ed4:	str	sl, [sp, #16]
   21ed8:	ldr	r2, [sp, #16]
   21edc:	add	r2, r2, #1
   21ee0:	str	r2, [sp, #16]
   21ee4:	cmp	r2, r8
   21ee8:	ble	21f18 <g_unichar_xdigit_value@plt+0xe0b4>
   21eec:	ldr	r3, [pc, #536]	; 2210c <g_unichar_xdigit_value@plt+0xe2a8>
   21ef0:	mov	r0, #0
   21ef4:	ldr	ip, [pc, #532]	; 22110 <g_unichar_xdigit_value@plt+0xe2ac>
   21ef8:	movw	r2, #2115	; 0x843
   21efc:	ldr	r1, [pc, #528]	; 22114 <g_unichar_xdigit_value@plt+0xe2b0>
   21f00:	add	r3, pc, r3
   21f04:	add	ip, pc, ip
   21f08:	add	r3, r3, #432	; 0x1b0
   21f0c:	add	r1, pc, r1
   21f10:	str	ip, [sp]
   21f14:	bl	13d2c <g_assertion_message_expr@plt>
   21f18:	sub	r2, r9, #1
   21f1c:	str	r2, [sp, #20]
   21f20:	cmp	r2, #0
   21f24:	ble	22044 <g_unichar_xdigit_value@plt+0xe1e0>
   21f28:	cmp	r8, #1
   21f2c:	beq	2200c <g_unichar_xdigit_value@plt+0xe1a8>
   21f30:	ldr	r3, [sp, #28]
   21f34:	mov	r5, #2
   21f38:	mov	r6, #0
   21f3c:	add	r4, r3, #4
   21f40:	ldr	r0, [r4, #-4]
   21f44:	add	r4, r4, #4
   21f48:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   21f4c:	mov	sl, r0
   21f50:	ldr	r0, [r4, #-4]
   21f54:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   21f58:	mov	r1, r0
   21f5c:	mov	r0, sl
   21f60:	bl	13e58 <g_strcmp0@plt>
   21f64:	cmp	r0, #0
   21f68:	ble	21ff4 <g_unichar_xdigit_value@plt+0xe190>
   21f6c:	ldr	r0, [r4, #-8]
   21f70:	cmp	r0, #0
   21f74:	moveq	r6, r0
   21f78:	beq	21f84 <g_unichar_xdigit_value@plt+0xe120>
   21f7c:	bl	133f0 <g_object_ref@plt>
   21f80:	mov	r6, r0
   21f84:	cmp	r7, #0
   21f88:	beq	21f94 <g_unichar_xdigit_value@plt+0xe130>
   21f8c:	mov	r0, r7
   21f90:	bl	13b94 <g_object_unref@plt>
   21f94:	ldr	r0, [r4, #-4]
   21f98:	cmp	r0, #0
   21f9c:	moveq	r7, r0
   21fa0:	beq	21fac <g_unichar_xdigit_value@plt+0xe148>
   21fa4:	bl	133f0 <g_object_ref@plt>
   21fa8:	mov	r7, r0
   21fac:	ldr	r0, [r4, #-8]
   21fb0:	cmp	r0, #0
   21fb4:	beq	21fbc <g_unichar_xdigit_value@plt+0xe158>
   21fb8:	bl	13b94 <g_object_unref@plt>
   21fbc:	cmp	r6, #0
   21fc0:	str	r7, [r4, #-8]
   21fc4:	moveq	r7, r6
   21fc8:	beq	21fd8 <g_unichar_xdigit_value@plt+0xe174>
   21fcc:	mov	r0, r6
   21fd0:	bl	133f0 <g_object_ref@plt>
   21fd4:	mov	r7, r0
   21fd8:	ldr	r0, [r4, #-4]
   21fdc:	cmp	r0, #0
   21fe0:	beq	21fe8 <g_unichar_xdigit_value@plt+0xe184>
   21fe4:	bl	13b94 <g_object_unref@plt>
   21fe8:	str	r7, [r4, #-4]
   21fec:	mov	r7, r6
   21ff0:	mov	r6, #1
   21ff4:	cmp	r5, r9
   21ff8:	beq	22038 <g_unichar_xdigit_value@plt+0xe1d4>
   21ffc:	cmp	r5, #0
   22000:	cmpge	r8, r5
   22004:	add	r5, r5, #1
   22008:	bgt	21f40 <g_unichar_xdigit_value@plt+0xe0dc>
   2200c:	ldr	r3, [pc, #260]	; 22118 <g_unichar_xdigit_value@plt+0xe2b4>
   22010:	mov	r0, #0
   22014:	ldr	ip, [pc, #256]	; 2211c <g_unichar_xdigit_value@plt+0xe2b8>
   22018:	movw	r2, #2148	; 0x864
   2201c:	ldr	r1, [pc, #252]	; 22120 <g_unichar_xdigit_value@plt+0xe2bc>
   22020:	add	r3, pc, r3
   22024:	add	ip, pc, ip
   22028:	add	r3, r3, #432	; 0x1b0
   2202c:	add	r1, pc, r1
   22030:	str	ip, [sp]
   22034:	bl	13d2c <g_assertion_message_expr@plt>
   22038:	cmp	r6, #0
   2203c:	ldr	r9, [sp, #20]
   22040:	bne	21ed8 <g_unichar_xdigit_value@plt+0xe074>
   22044:	ldr	r3, [sp, #28]
   22048:	cmp	r3, #0
   2204c:	beq	220a4 <g_unichar_xdigit_value@plt+0xe240>
   22050:	add	r0, r8, #1
   22054:	mov	r1, #4
   22058:	bl	13c00 <g_malloc0_n@plt>
   2205c:	ldr	r9, [sp, #28]
   22060:	mov	r5, #0
   22064:	mov	r6, r5
   22068:	mov	r4, r0
   2206c:	ldr	r0, [r9, r5]
   22070:	cmp	r0, #0
   22074:	beq	2207c <g_unichar_xdigit_value@plt+0xe218>
   22078:	bl	133f0 <g_object_ref@plt>
   2207c:	add	r6, r6, #1
   22080:	str	r0, [r4, r5]
   22084:	cmp	r8, r6
   22088:	add	r5, r5, #4
   2208c:	bgt	2206c <g_unichar_xdigit_value@plt+0xe208>
   22090:	cmp	r7, #0
   22094:	beq	21de8 <g_unichar_xdigit_value@plt+0xdf84>
   22098:	mov	r0, r7
   2209c:	bl	13b94 <g_object_unref@plt>
   220a0:	b	21de8 <g_unichar_xdigit_value@plt+0xdf84>
   220a4:	ldr	r4, [sp, #28]
   220a8:	b	22090 <g_unichar_xdigit_value@plt+0xe22c>
   220ac:	ldr	r1, [pc, #112]	; 22124 <g_unichar_xdigit_value@plt+0xe2c0>
   220b0:	mov	r0, r4
   220b4:	ldr	r2, [pc, #108]	; 22128 <g_unichar_xdigit_value@plt+0xe2c4>
   220b8:	add	r1, pc, r1
   220bc:	add	r2, pc, r2
   220c0:	add	r1, r1, #368	; 0x170
   220c4:	bl	13450 <g_return_if_fail_warning@plt>
   220c8:	b	21e9c <g_unichar_xdigit_value@plt+0xe038>
   220cc:	ldr	r1, [pc, #88]	; 2212c <g_unichar_xdigit_value@plt+0xe2c8>
   220d0:	mov	r4, r5
   220d4:	ldr	r2, [pc, #84]	; 22130 <g_unichar_xdigit_value@plt+0xe2cc>
   220d8:	add	r1, pc, r1
   220dc:	add	r2, pc, r2
   220e0:	add	r1, r1, #368	; 0x170
   220e4:	bl	13450 <g_return_if_fail_warning@plt>
   220e8:	b	21e9c <g_unichar_xdigit_value@plt+0xe038>
   220ec:	ldr	r0, [sp, #28]
   220f0:	b	21de0 <g_unichar_xdigit_value@plt+0xdf7c>
   220f4:	ldr	r4, [sp, #28]
   220f8:	b	21e9c <g_unichar_xdigit_value@plt+0xe038>
   220fc:	bl	13978 <__stack_chk_fail@plt>
   22100:	ldrdeq	pc, [r2], -ip
   22104:	muleq	r0, r0, r3
   22108:			; <UNDEFINED> instruction: 0x000003b8
   2210c:	andeq	r7, r1, ip, lsr #19
   22110:	andeq	r7, r1, r8, lsr #30
   22114:	andeq	r7, r1, ip, lsl #23
   22118:	andeq	r7, r1, ip, lsl #17
   2211c:	andeq	r7, r1, r0, lsr #28
   22120:	andeq	r7, r1, ip, ror #20
   22124:	strdeq	r7, [r1], -r4
   22128:	andeq	r7, r1, r8, asr sp
   2212c:	ldrdeq	r7, [r1], -r4
   22130:	andeq	r6, r1, r8
   22134:	ldr	r0, [pc, #104]	; 221a4 <g_unichar_xdigit_value@plt+0xe340>
   22138:	push	{r3, r4, r5, lr}
   2213c:	add	r0, pc, r0
   22140:	dmb	sy
   22144:	ldr	r4, [r0, #12]
   22148:	dmb	sy
   2214c:	cmp	r4, #0
   22150:	beq	22164 <g_unichar_xdigit_value@plt+0xe300>
   22154:	ldr	r3, [pc, #76]	; 221a8 <g_unichar_xdigit_value@plt+0xe344>
   22158:	add	r3, pc, r3
   2215c:	ldr	r0, [r3, #12]
   22160:	pop	{r3, r4, r5, pc}
   22164:	add	r5, r0, #12
   22168:	mov	r0, r5
   2216c:	bl	138ac <g_once_init_enter@plt>
   22170:	cmp	r0, #0
   22174:	beq	22154 <g_unichar_xdigit_value@plt+0xe2f0>
   22178:	ldr	r1, [pc, #44]	; 221ac <g_unichar_xdigit_value@plt+0xe348>
   2217c:	mov	r3, r4
   22180:	ldr	r2, [pc, #40]	; 221b0 <g_unichar_xdigit_value@plt+0xe34c>
   22184:	mov	r0, #80	; 0x50
   22188:	add	r1, pc, r1
   2218c:	add	r2, pc, r2
   22190:	bl	13438 <g_type_register_static@plt>
   22194:	mov	r1, r0
   22198:	mov	r0, r5
   2219c:	bl	13bac <g_once_init_leave@plt>
   221a0:	b	22154 <g_unichar_xdigit_value@plt+0xe2f0>
   221a4:	strdeq	pc, [r2], -r4
   221a8:	ldrdeq	pc, [r2], -r8
   221ac:	ldrdeq	r7, [r1], -r8
   221b0:	andeq	lr, r2, r4, lsl #16
   221b4:	push	{r3, lr}
   221b8:	bl	22134 <g_unichar_xdigit_value@plt+0xe2d0>
   221bc:	pop	{r3, lr}
   221c0:	b	20a28 <g_unichar_xdigit_value@plt+0xcbc4>
   221c4:	push	{r3, r4, r5, lr}
   221c8:	ldr	r3, [pc, #76]	; 2221c <g_unichar_xdigit_value@plt+0xe3b8>
   221cc:	ldr	r2, [pc, #76]	; 22220 <g_unichar_xdigit_value@plt+0xe3bc>
   221d0:	add	r3, pc, r3
   221d4:	ldr	r5, [r3, r2]
   221d8:	ldr	r4, [r5]
   221dc:	cmp	r4, #0
   221e0:	beq	221f0 <g_unichar_xdigit_value@plt+0xe38c>
   221e4:	mov	r0, r4
   221e8:	pop	{r3, r4, r5, lr}
   221ec:	b	133f0 <g_object_ref@plt>
   221f0:	bl	221b4 <g_unichar_xdigit_value@plt+0xe350>
   221f4:	mov	r4, r0
   221f8:	ldr	r0, [r5]
   221fc:	cmp	r0, #0
   22200:	beq	22208 <g_unichar_xdigit_value@plt+0xe3a4>
   22204:	bl	13b94 <g_object_unref@plt>
   22208:	cmp	r4, #0
   2220c:	str	r4, [r5]
   22210:	bne	221e4 <g_unichar_xdigit_value@plt+0xe380>
   22214:	mov	r0, r4
   22218:	pop	{r3, r4, r5, pc}
   2221c:	andeq	lr, r2, r8, lsr #28
   22220:			; <UNDEFINED> instruction: 0x000003b0
   22224:	push	{r4, lr}
   22228:	mov	r4, r0
   2222c:	bl	22134 <g_unichar_xdigit_value@plt+0xe2d0>
   22230:	mov	r1, r0
   22234:	mov	r0, r4
   22238:	bl	13870 <g_type_instance_get_private@plt>
   2223c:	str	r0, [r4, #12]
   22240:	pop	{r4, pc}
   22244:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22248:	sub	sp, sp, #24
   2224c:	mov	r8, r0
   22250:	bl	13c60 <g_type_class_peek_parent@plt>
   22254:	ldr	r5, [pc, #248]	; 22354 <g_unichar_xdigit_value@plt+0xe4f0>
   22258:	mov	r1, #12
   2225c:	ldr	r9, [pc, #244]	; 22358 <g_unichar_xdigit_value@plt+0xe4f4>
   22260:	mov	r4, #0
   22264:	add	r5, pc, r5
   22268:	mov	r7, #4
   2226c:	add	r9, pc, r9
   22270:	mov	r6, #1
   22274:	str	r0, [r5, #16]
   22278:	mov	r0, r8
   2227c:	bl	13a5c <g_type_class_add_private@plt>
   22280:	mov	r1, #80	; 0x50
   22284:	mov	r0, r8
   22288:	bl	13db0 <g_type_check_class_cast@plt>
   2228c:	ldr	r3, [pc, #200]	; 2235c <g_unichar_xdigit_value@plt+0xe4f8>
   22290:	add	r3, pc, r3
   22294:	str	r3, [r0, #24]
   22298:	bl	22134 <g_unichar_xdigit_value@plt+0xe2d0>
   2229c:	mov	r8, r0
   222a0:	bl	22c90 <g_unichar_xdigit_value@plt+0xee2c>
   222a4:	str	r4, [sp]
   222a8:	mov	r1, r8
   222ac:	str	r4, [sp, #4]
   222b0:	mov	r3, r4
   222b4:	mov	r2, #2
   222b8:	mov	sl, r0
   222bc:	ldr	r0, [pc, #156]	; 22360 <g_unichar_xdigit_value@plt+0xe4fc>
   222c0:	ldr	r9, [r9, r0]
   222c4:	ldr	r0, [pc, #152]	; 22364 <g_unichar_xdigit_value@plt+0xe500>
   222c8:	str	sl, [sp, #20]
   222cc:	str	r9, [sp, #8]
   222d0:	add	r0, pc, r0
   222d4:	str	r7, [sp, #12]
   222d8:	str	r6, [sp, #16]
   222dc:	bl	137b0 <g_signal_new@plt>
   222e0:	str	r9, [sp, #8]
   222e4:	str	r4, [sp]
   222e8:	mov	r1, r8
   222ec:	str	r4, [sp, #4]
   222f0:	mov	r3, r4
   222f4:	str	r7, [sp, #12]
   222f8:	mov	r2, #2
   222fc:	str	r6, [sp, #16]
   22300:	str	sl, [sp, #20]
   22304:	str	r0, [r5]
   22308:	ldr	r0, [pc, #88]	; 22368 <g_unichar_xdigit_value@plt+0xe504>
   2230c:	add	r0, pc, r0
   22310:	bl	137b0 <g_signal_new@plt>
   22314:	str	r9, [sp, #8]
   22318:	str	r4, [sp]
   2231c:	mov	r1, r8
   22320:	str	r4, [sp, #4]
   22324:	mov	r3, r4
   22328:	str	r7, [sp, #12]
   2232c:	mov	r2, #2
   22330:	str	r6, [sp, #16]
   22334:	str	sl, [sp, #20]
   22338:	str	r0, [r5, #4]
   2233c:	ldr	r0, [pc, #40]	; 2236c <g_unichar_xdigit_value@plt+0xe508>
   22340:	add	r0, pc, r0
   22344:	bl	137b0 <g_signal_new@plt>
   22348:	str	r0, [r5, #8]
   2234c:	add	sp, sp, #24
   22350:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22354:	andeq	pc, r2, ip, asr #5
   22358:	andeq	lr, r2, ip, lsl #27
   2235c:	ldrdeq	r0, [r0], -r8
   22360:	andeq	r0, r0, r8, asr #7
   22364:	andeq	r7, r1, r0, lsr #23
   22368:	andeq	r7, r1, r4, ror fp
   2236c:	andeq	r7, r1, r0, asr fp
   22370:	push	{r4, r5, r6, lr}
   22374:	mov	r5, r0
   22378:	bl	22134 <g_unichar_xdigit_value@plt+0xe2d0>
   2237c:	mov	r6, #0
   22380:	mov	r1, r0
   22384:	mov	r0, r5
   22388:	bl	13510 <g_type_check_instance_cast@plt>
   2238c:	ldr	r3, [r0, #12]
   22390:	mov	r4, r0
   22394:	ldr	r0, [r3]
   22398:	bl	1399c <g_free@plt>
   2239c:	ldr	r3, [r4, #12]
   223a0:	ldr	r0, [r3, #4]
   223a4:	str	r6, [r3]
   223a8:	cmp	r0, r6
   223ac:	beq	223bc <g_unichar_xdigit_value@plt+0xe558>
   223b0:	bl	139cc <g_hash_table_unref@plt>
   223b4:	ldr	r3, [r4, #12]
   223b8:	str	r6, [r3, #4]
   223bc:	ldr	r0, [r3, #8]
   223c0:	cmp	r0, #0
   223c4:	beq	223d8 <g_unichar_xdigit_value@plt+0xe574>
   223c8:	bl	13b94 <g_object_unref@plt>
   223cc:	ldr	r3, [r4, #12]
   223d0:	mov	r2, #0
   223d4:	str	r2, [r3, #8]
   223d8:	ldr	r3, [pc, #28]	; 223fc <g_unichar_xdigit_value@plt+0xe598>
   223dc:	mov	r1, #80	; 0x50
   223e0:	add	r3, pc, r3
   223e4:	ldr	r0, [r3, #16]
   223e8:	bl	13db0 <g_type_check_class_cast@plt>
   223ec:	ldr	r3, [r0, #24]
   223f0:	mov	r0, r5
   223f4:	blx	r3
   223f8:	pop	{r4, r5, r6, pc}
   223fc:	andeq	pc, r2, r0, asr r1	; <UNPREDICTABLE>
   22400:	mov	r0, #1
   22404:	bx	lr
   22408:	mov	r0, #0
   2240c:	bx	lr
   22410:	bx	lr
   22414:	cmp	r0, #0
   22418:	cmpne	r2, #0
   2241c:	push	{r3, r4, r5, r6, r7, lr}
   22420:	mov	r7, r2
   22424:	mov	r6, r1
   22428:	popeq	{r3, r4, r5, r6, r7, pc}
   2242c:	cmp	r1, #0
   22430:	pople	{r3, r4, r5, r6, r7, pc}
   22434:	sub	r5, r0, #4
   22438:	mov	r4, #0
   2243c:	ldr	r0, [r5, #4]!
   22440:	add	r4, r4, #1
   22444:	cmp	r0, #0
   22448:	beq	22450 <g_unichar_xdigit_value@plt+0xe5ec>
   2244c:	blx	r7
   22450:	cmp	r4, r6
   22454:	bne	2243c <g_unichar_xdigit_value@plt+0xe5d8>
   22458:	pop	{r3, r4, r5, r6, r7, pc}
   2245c:	push	{r4, lr}
   22460:	mov	r4, r0
   22464:	bl	13c60 <g_type_class_peek_parent@plt>
   22468:	ldr	r3, [pc, #32]	; 22490 <g_unichar_xdigit_value@plt+0xe62c>
   2246c:	ldr	r1, [pc, #32]	; 22494 <g_unichar_xdigit_value@plt+0xe630>
   22470:	add	r3, pc, r3
   22474:	ldr	r2, [pc, #28]	; 22498 <g_unichar_xdigit_value@plt+0xe634>
   22478:	add	r1, pc, r1
   2247c:	str	r1, [r4, #68]	; 0x44
   22480:	add	r2, pc, r2
   22484:	str	r2, [r4, #72]	; 0x48
   22488:	str	r0, [r3]
   2248c:	pop	{r4, pc}
   22490:	ldrdeq	pc, [r2], -r8
   22494:	andeq	r1, r0, ip, lsl #30
   22498:			; <UNDEFINED> instruction: 0xffffff80
   2249c:	push	{r4, lr}
   224a0:	mov	r4, r0
   224a4:	bl	13c60 <g_type_class_peek_parent@plt>
   224a8:	ldr	r3, [pc, #68]	; 224f4 <g_unichar_xdigit_value@plt+0xe690>
   224ac:	mov	r1, #4
   224b0:	ldr	r2, [pc, #64]	; 224f8 <g_unichar_xdigit_value@plt+0xe694>
   224b4:	add	r3, pc, r3
   224b8:	add	r2, pc, r2
   224bc:	str	r2, [r4, #4]
   224c0:	str	r0, [r3, #4]
   224c4:	mov	r0, r4
   224c8:	bl	13a5c <g_type_class_add_private@plt>
   224cc:	ldr	r1, [pc, #40]	; 224fc <g_unichar_xdigit_value@plt+0xe698>
   224d0:	ldr	r2, [pc, #40]	; 22500 <g_unichar_xdigit_value@plt+0xe69c>
   224d4:	ldr	r3, [pc, #40]	; 22504 <g_unichar_xdigit_value@plt+0xe6a0>
   224d8:	add	r1, pc, r1
   224dc:	add	r2, pc, r2
   224e0:	str	r1, [r4, #8]
   224e4:	add	r3, pc, r3
   224e8:	str	r2, [r4, #12]
   224ec:	str	r3, [r4, #20]
   224f0:	pop	{r4, pc}
   224f4:	muleq	r2, r4, r0
   224f8:	strdeq	r0, [r0], -r8
   224fc:	andeq	r0, r0, r4, lsl #8
   22500:	andeq	r0, r0, r8, ror #6
   22504:	andeq	r0, r0, r4, asr #5
   22508:	push	{r4, lr}
   2250c:	mov	r4, r0
   22510:	bl	13c60 <g_type_class_peek_parent@plt>
   22514:	ldr	r3, [pc, #56]	; 22554 <g_unichar_xdigit_value@plt+0xe6f0>
   22518:	mov	r1, #16
   2251c:	ldr	r2, [pc, #52]	; 22558 <g_unichar_xdigit_value@plt+0xe6f4>
   22520:	add	r3, pc, r3
   22524:	add	r2, pc, r2
   22528:	str	r2, [r4, #4]
   2252c:	str	r0, [r3, #8]
   22530:	mov	r0, r4
   22534:	bl	13a5c <g_type_class_add_private@plt>
   22538:	ldr	r2, [pc, #28]	; 2255c <g_unichar_xdigit_value@plt+0xe6f8>
   2253c:	ldr	r3, [pc, #28]	; 22560 <g_unichar_xdigit_value@plt+0xe6fc>
   22540:	add	r2, pc, r2
   22544:	str	r2, [r4, #8]
   22548:	add	r3, pc, r3
   2254c:	str	r3, [r4, #12]
   22550:	pop	{r4, pc}
   22554:	andeq	pc, r2, r8, lsr #32
   22558:	strdeq	r1, [r0], -r8
   2255c:	ldrdeq	r0, [r0], -r4
   22560:	ldrdeq	r0, [r0], -r4
   22564:	push	{r4, r5, r6, r7, lr}
   22568:	sub	sp, sp, #12
   2256c:	mov	r4, r0
   22570:	bl	13c60 <g_type_class_peek_parent@plt>
   22574:	ldr	r5, [pc, #376]	; 226f4 <g_unichar_xdigit_value@plt+0xe890>
   22578:	mov	r1, #24
   2257c:	mov	r6, #225	; 0xe1
   22580:	add	r5, pc, r5
   22584:	str	r0, [r5, #12]
   22588:	mov	r0, r4
   2258c:	bl	13a5c <g_type_class_add_private@plt>
   22590:	ldr	r2, [pc, #352]	; 226f8 <g_unichar_xdigit_value@plt+0xe894>
   22594:	ldr	r3, [pc, #352]	; 226fc <g_unichar_xdigit_value@plt+0xe898>
   22598:	mov	r0, r4
   2259c:	add	r2, pc, r2
   225a0:	mov	r1, #80	; 0x50
   225a4:	str	r2, [r4, #68]	; 0x44
   225a8:	add	r3, pc, r3
   225ac:	str	r3, [r4, #72]	; 0x48
   225b0:	bl	13db0 <g_type_check_class_cast@plt>
   225b4:	ldr	r3, [pc, #324]	; 22700 <g_unichar_xdigit_value@plt+0xe89c>
   225b8:	mov	r1, #80	; 0x50
   225bc:	add	r3, pc, r3
   225c0:	str	r3, [r0, #16]
   225c4:	mov	r0, r4
   225c8:	bl	13db0 <g_type_check_class_cast@plt>
   225cc:	ldr	r3, [pc, #304]	; 22704 <g_unichar_xdigit_value@plt+0xe8a0>
   225d0:	mov	r1, #80	; 0x50
   225d4:	add	r3, pc, r3
   225d8:	str	r3, [r0, #24]
   225dc:	mov	r0, r4
   225e0:	bl	13db0 <g_type_check_class_cast@plt>
   225e4:	mov	r3, #0
   225e8:	str	r6, [sp]
   225ec:	mov	r7, r0
   225f0:	ldr	r0, [pc, #272]	; 22708 <g_unichar_xdigit_value@plt+0xe8a4>
   225f4:	add	r0, pc, r0
   225f8:	mov	r1, r0
   225fc:	mov	r2, r0
   22600:	bl	134d4 <g_param_spec_string@plt>
   22604:	mov	r1, #1
   22608:	mov	r3, r0
   2260c:	mov	r2, r0
   22610:	mov	r0, r7
   22614:	str	r3, [r5, #20]
   22618:	bl	13a2c <g_object_class_install_property@plt>
   2261c:	mov	r1, #80	; 0x50
   22620:	mov	r0, r4
   22624:	bl	13db0 <g_type_check_class_cast@plt>
   22628:	mov	r7, r0
   2262c:	bl	13b58 <g_strv_get_type@plt>
   22630:	ldr	r2, [pc, #212]	; 2270c <g_unichar_xdigit_value@plt+0xe8a8>
   22634:	str	r6, [sp]
   22638:	add	r2, pc, r2
   2263c:	mov	r1, r2
   22640:	mov	r3, r0
   22644:	mov	r0, r2
   22648:	bl	13a08 <g_param_spec_boxed@plt>
   2264c:	mov	r1, #2
   22650:	mov	r3, r0
   22654:	mov	r2, r0
   22658:	mov	r0, r7
   2265c:	str	r3, [r5, #24]
   22660:	bl	13a2c <g_object_class_install_property@plt>
   22664:	mov	r0, r4
   22668:	mov	r1, #80	; 0x50
   2266c:	bl	13db0 <g_type_check_class_cast@plt>
   22670:	mov	r3, #0
   22674:	str	r6, [sp]
   22678:	mov	r7, r0
   2267c:	ldr	r0, [pc, #140]	; 22710 <g_unichar_xdigit_value@plt+0xe8ac>
   22680:	add	r0, pc, r0
   22684:	mov	r1, r0
   22688:	mov	r2, r0
   2268c:	bl	134d4 <g_param_spec_string@plt>
   22690:	mov	r1, #3
   22694:	mov	r3, r0
   22698:	mov	r2, r0
   2269c:	mov	r0, r7
   226a0:	str	r3, [r5, #28]
   226a4:	bl	13a2c <g_object_class_install_property@plt>
   226a8:	mov	r0, r4
   226ac:	mov	r1, #80	; 0x50
   226b0:	bl	13db0 <g_type_check_class_cast@plt>
   226b4:	mov	r3, #0
   226b8:	str	r6, [sp]
   226bc:	mov	r4, r0
   226c0:	ldr	r0, [pc, #76]	; 22714 <g_unichar_xdigit_value@plt+0xe8b0>
   226c4:	add	r0, pc, r0
   226c8:	mov	r1, r0
   226cc:	mov	r2, r0
   226d0:	bl	134d4 <g_param_spec_string@plt>
   226d4:	mov	r1, #4
   226d8:	mov	r3, r0
   226dc:	mov	r2, r0
   226e0:	str	r3, [r5, #32]
   226e4:	mov	r0, r4
   226e8:	add	sp, sp, #12
   226ec:	pop	{r4, r5, r6, r7, lr}
   226f0:	b	13a2c <g_object_class_install_property@plt>
   226f4:	andeq	lr, r2, r8, asr #31
   226f8:	andeq	r1, r0, r4, asr #6
   226fc:			; <UNDEFINED> instruction: 0xfffffe50
   22700:	andeq	r0, r0, r0, ror #16
   22704:	muleq	r0, r4, r7
   22708:	andeq	r8, r1, r0, asr #31
   2270c:	andeq	r7, r1, ip, lsr #21
   22710:	andeq	r7, r1, r0, ror sl
   22714:	andeq	r7, r1, r8, lsr sl
   22718:	push	{r4, r5, r6, lr}
   2271c:	subs	r4, r0, #0
   22720:	mov	r5, r1
   22724:	beq	22768 <g_unichar_xdigit_value@plt+0xe904>
   22728:	subs	r0, r1, #0
   2272c:	beq	22784 <g_unichar_xdigit_value@plt+0xe920>
   22730:	bl	13ba0 <strlen@plt>
   22734:	mov	r4, #0
   22738:	mov	r6, r0
   2273c:	cmp	r4, r6
   22740:	add	r0, r5, r4
   22744:	add	r4, r4, #1
   22748:	bge	22760 <g_unichar_xdigit_value@plt+0xe8fc>
   2274c:	bl	135e8 <g_utf8_get_char@plt>
   22750:	bl	1363c <g_unichar_isalpha@plt>
   22754:	cmp	r0, #0
   22758:	bne	2273c <g_unichar_xdigit_value@plt+0xe8d8>
   2275c:	pop	{r4, r5, r6, pc}
   22760:	mov	r0, #1
   22764:	pop	{r4, r5, r6, pc}
   22768:	ldr	r1, [pc, #48]	; 227a0 <g_unichar_xdigit_value@plt+0xe93c>
   2276c:	ldr	r2, [pc, #48]	; 227a4 <g_unichar_xdigit_value@plt+0xe940>
   22770:	add	r1, pc, r1
   22774:	add	r2, pc, r2
   22778:	bl	13450 <g_return_if_fail_warning@plt>
   2277c:	mov	r0, r4
   22780:	pop	{r4, r5, r6, pc}
   22784:	ldr	r1, [pc, #28]	; 227a8 <g_unichar_xdigit_value@plt+0xe944>
   22788:	ldr	r2, [pc, #28]	; 227ac <g_unichar_xdigit_value@plt+0xe948>
   2278c:	add	r1, pc, r1
   22790:	add	r2, pc, r2
   22794:	bl	13450 <g_return_if_fail_warning@plt>
   22798:	mov	r0, r5
   2279c:	pop	{r4, r5, r6, pc}
   227a0:	andeq	r7, r1, r4, lsr r7
   227a4:	andeq	r5, r1, r0, ror r9
   227a8:	andeq	r7, r1, r8, lsl r7
   227ac:	ldrdeq	r5, [r1], -r0
   227b0:	push	{r3, r4, r5, r6, r7, lr}
   227b4:	subs	r5, r1, #0
   227b8:	mov	r6, r0
   227bc:	beq	2281c <g_unichar_xdigit_value@plt+0xe9b8>
   227c0:	ldr	r3, [pc, #120]	; 22840 <g_unichar_xdigit_value@plt+0xe9dc>
   227c4:	add	r3, pc, r3
   227c8:	ldr	r7, [r3, #4]
   227cc:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   227d0:	mov	r4, r0
   227d4:	mov	r0, r7
   227d8:	mov	r1, r4
   227dc:	bl	13db0 <g_type_check_class_cast@plt>
   227e0:	mov	r1, r4
   227e4:	ldr	r4, [r0, #20]
   227e8:	mov	r0, r6
   227ec:	bl	13510 <g_type_check_instance_cast@plt>
   227f0:	mov	r1, r5
   227f4:	blx	r4
   227f8:	cmp	r0, #0
   227fc:	beq	22808 <g_unichar_xdigit_value@plt+0xe9a4>
   22800:	mov	r0, #1
   22804:	pop	{r3, r4, r5, r6, r7, pc}
   22808:	ldr	r3, [r6, #24]
   2280c:	mov	r1, r5
   22810:	ldr	r0, [r3]
   22814:	pop	{r3, r4, r5, r6, r7, lr}
   22818:	b	1a4a0 <g_unichar_xdigit_value@plt+0x663c>
   2281c:	ldr	r1, [pc, #32]	; 22844 <g_unichar_xdigit_value@plt+0xe9e0>
   22820:	mov	r0, r5
   22824:	ldr	r2, [pc, #28]	; 22848 <g_unichar_xdigit_value@plt+0xe9e4>
   22828:	add	r1, pc, r1
   2282c:	add	r2, pc, r2
   22830:	add	r1, r1, #28
   22834:	bl	13450 <g_return_if_fail_warning@plt>
   22838:	mov	r0, r5
   2283c:	pop	{r3, r4, r5, r6, r7, pc}
   22840:	andeq	lr, r2, r4, lsl #27
   22844:	andeq	r7, r1, ip, ror r6
   22848:	andeq	r8, r1, r4, lsr #27
   2284c:	push	{r3, r4, r5, r6, r7, lr}
   22850:	subs	r5, r1, #0
   22854:	mov	r6, r0
   22858:	beq	228a0 <g_unichar_xdigit_value@plt+0xea3c>
   2285c:	ldr	r3, [pc, #116]	; 228d8 <g_unichar_xdigit_value@plt+0xea74>
   22860:	add	r3, pc, r3
   22864:	ldr	r7, [r3, #4]
   22868:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   2286c:	mov	r4, r0
   22870:	mov	r0, r7
   22874:	mov	r1, r4
   22878:	bl	13db0 <g_type_check_class_cast@plt>
   2287c:	mov	r1, r4
   22880:	ldr	r4, [r0, #12]
   22884:	mov	r0, r6
   22888:	bl	13510 <g_type_check_instance_cast@plt>
   2288c:	mov	r1, r5
   22890:	blx	r4
   22894:	cmp	r0, #0
   22898:	beq	228c4 <g_unichar_xdigit_value@plt+0xea60>
   2289c:	pop	{r3, r4, r5, r6, r7, pc}
   228a0:	ldr	r1, [pc, #52]	; 228dc <g_unichar_xdigit_value@plt+0xea78>
   228a4:	mov	r0, r5
   228a8:	ldr	r2, [pc, #48]	; 228e0 <g_unichar_xdigit_value@plt+0xea7c>
   228ac:	add	r1, pc, r1
   228b0:	add	r2, pc, r2
   228b4:	add	r1, r1, #72	; 0x48
   228b8:	bl	13450 <g_return_if_fail_warning@plt>
   228bc:	mov	r0, r5
   228c0:	pop	{r3, r4, r5, r6, r7, pc}
   228c4:	ldr	r3, [r6, #24]
   228c8:	mov	r1, r5
   228cc:	ldr	r0, [r3]
   228d0:	pop	{r3, r4, r5, r6, r7, lr}
   228d4:	b	19e1c <g_unichar_xdigit_value@plt+0x5fb8>
   228d8:	andeq	lr, r2, r8, ror #25
   228dc:	strdeq	r7, [r1], -r8
   228e0:	andeq	r8, r1, r0, lsr #26
   228e4:	push	{r3, r4, r5, r6, r7, lr}
   228e8:	subs	r5, r1, #0
   228ec:	mov	r6, r0
   228f0:	beq	22950 <g_unichar_xdigit_value@plt+0xeaec>
   228f4:	ldr	r3, [pc, #120]	; 22974 <g_unichar_xdigit_value@plt+0xeb10>
   228f8:	add	r3, pc, r3
   228fc:	ldr	r7, [r3, #4]
   22900:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   22904:	mov	r4, r0
   22908:	mov	r0, r7
   2290c:	mov	r1, r4
   22910:	bl	13db0 <g_type_check_class_cast@plt>
   22914:	mov	r1, r4
   22918:	ldr	r4, [r0, #8]
   2291c:	mov	r0, r6
   22920:	bl	13510 <g_type_check_instance_cast@plt>
   22924:	mov	r1, r5
   22928:	blx	r4
   2292c:	cmp	r0, #0
   22930:	beq	2293c <g_unichar_xdigit_value@plt+0xead8>
   22934:	mov	r0, #1
   22938:	pop	{r3, r4, r5, r6, r7, pc}
   2293c:	ldr	r3, [r6, #24]
   22940:	mov	r1, r5
   22944:	ldr	r0, [r3]
   22948:	pop	{r3, r4, r5, r6, r7, lr}
   2294c:	b	19dd4 <g_unichar_xdigit_value@plt+0x5f70>
   22950:	ldr	r1, [pc, #32]	; 22978 <g_unichar_xdigit_value@plt+0xeb14>
   22954:	mov	r0, r5
   22958:	ldr	r2, [pc, #28]	; 2297c <g_unichar_xdigit_value@plt+0xeb18>
   2295c:	add	r1, pc, r1
   22960:	add	r2, pc, r2
   22964:	add	r1, r1, #108	; 0x6c
   22968:	bl	13450 <g_return_if_fail_warning@plt>
   2296c:	mov	r0, r5
   22970:	pop	{r3, r4, r5, r6, r7, pc}
   22974:	andeq	lr, r2, r0, asr ip
   22978:	andeq	r7, r1, r8, asr #10
   2297c:	andeq	r8, r1, r0, ror ip
   22980:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22984:	subs	r4, r1, #0
   22988:	ldr	r9, [pc, #336]	; 22ae0 <g_unichar_xdigit_value@plt+0xec7c>
   2298c:	mov	r7, r2
   22990:	mov	r5, r3
   22994:	ldr	fp, [sp, #44]	; 0x2c
   22998:	add	r9, pc, r9
   2299c:	beq	22aa4 <g_unichar_xdigit_value@plt+0xec40>
   229a0:	mov	r1, #0
   229a4:	bl	133e4 <g_object_new@plt>
   229a8:	mov	r6, r0
   229ac:	mov	r0, r4
   229b0:	bl	136f0 <g_strdup@plt>
   229b4:	ldr	r3, [r6, #12]
   229b8:	mov	r4, r0
   229bc:	ldr	r0, [r3]
   229c0:	bl	1399c <g_free@plt>
   229c4:	ldr	r3, [r6, #12]
   229c8:	cmp	r7, #0
   229cc:	str	r4, [r3]
   229d0:	moveq	r8, r7
   229d4:	beq	22a18 <g_unichar_xdigit_value@plt+0xebb4>
   229d8:	add	r0, r5, #1
   229dc:	mov	r1, #4
   229e0:	bl	13c00 <g_malloc0_n@plt>
   229e4:	cmp	r5, #0
   229e8:	movgt	r4, #0
   229ec:	movgt	sl, r4
   229f0:	mov	r8, r0
   229f4:	ble	22a14 <g_unichar_xdigit_value@plt+0xebb0>
   229f8:	ldr	r0, [r7, r4]
   229fc:	add	sl, sl, #1
   22a00:	bl	136f0 <g_strdup@plt>
   22a04:	cmp	sl, r5
   22a08:	str	r0, [r8, r4]
   22a0c:	add	r4, r4, #4
   22a10:	bne	229f8 <g_unichar_xdigit_value@plt+0xeb94>
   22a14:	ldr	r3, [r6, #12]
   22a18:	ldr	r4, [r3, #4]
   22a1c:	ldr	r2, [pc, #192]	; 22ae4 <g_unichar_xdigit_value@plt+0xec80>
   22a20:	ldr	r1, [r3, #8]
   22a24:	mov	r0, r4
   22a28:	ldr	r2, [r9, r2]
   22a2c:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   22a30:	mov	r0, r4
   22a34:	bl	1399c <g_free@plt>
   22a38:	ldr	r2, [sp, #40]	; 0x28
   22a3c:	ldr	r3, [r6, #12]
   22a40:	cmp	r2, #0
   22a44:	str	r8, [r3, #4]
   22a48:	movne	r0, r2
   22a4c:	str	r5, [r3, #8]
   22a50:	str	r5, [r3, #12]
   22a54:	beq	22ac8 <g_unichar_xdigit_value@plt+0xec64>
   22a58:	bl	136f0 <g_strdup@plt>
   22a5c:	ldr	r3, [r6, #12]
   22a60:	mov	r4, r0
   22a64:	ldr	r0, [r3, #16]
   22a68:	bl	1399c <g_free@plt>
   22a6c:	ldr	r3, [r6, #12]
   22a70:	cmp	fp, #0
   22a74:	str	r4, [r3, #16]
   22a78:	movne	r0, fp
   22a7c:	beq	22ad4 <g_unichar_xdigit_value@plt+0xec70>
   22a80:	bl	136f0 <g_strdup@plt>
   22a84:	ldr	r3, [r6, #12]
   22a88:	mov	r4, r0
   22a8c:	ldr	r0, [r3, #20]
   22a90:	bl	1399c <g_free@plt>
   22a94:	ldr	r3, [r6, #12]
   22a98:	mov	r0, r6
   22a9c:	str	r4, [r3, #20]
   22aa0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22aa4:	ldr	r1, [pc, #60]	; 22ae8 <g_unichar_xdigit_value@plt+0xec84>
   22aa8:	mov	r0, r4
   22aac:	ldr	r2, [pc, #56]	; 22aec <g_unichar_xdigit_value@plt+0xec88>
   22ab0:	add	r1, pc, r1
   22ab4:	add	r2, pc, r2
   22ab8:	add	r1, r1, #152	; 0x98
   22abc:	bl	13450 <g_return_if_fail_warning@plt>
   22ac0:	mov	r0, r4
   22ac4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ac8:	ldr	r0, [pc, #32]	; 22af0 <g_unichar_xdigit_value@plt+0xec8c>
   22acc:	add	r0, pc, r0
   22ad0:	b	22a58 <g_unichar_xdigit_value@plt+0xebf4>
   22ad4:	ldr	r0, [pc, #24]	; 22af4 <g_unichar_xdigit_value@plt+0xec90>
   22ad8:	add	r0, pc, r0
   22adc:	b	22a80 <g_unichar_xdigit_value@plt+0xec1c>
   22ae0:	andeq	lr, r2, r0, ror #12
   22ae4:	andeq	r0, r0, r4, lsr #7
   22ae8:	strdeq	r7, [r1], -r4
   22aec:	andeq	r7, r1, r4, asr r6
   22af0:	andeq	r6, r1, r8, ror r6
   22af4:	andeq	r6, r1, ip, ror #12
   22af8:	push	{r4, lr}
   22afc:	subs	r4, r0, #0
   22b00:	beq	22b14 <g_unichar_xdigit_value@plt+0xecb0>
   22b04:	ldr	ip, [r4]
   22b08:	ldr	ip, [ip, #68]	; 0x44
   22b0c:	blx	ip
   22b10:	pop	{r4, pc}
   22b14:	ldr	r1, [pc, #24]	; 22b34 <g_unichar_xdigit_value@plt+0xecd0>
   22b18:	ldr	r2, [pc, #24]	; 22b38 <g_unichar_xdigit_value@plt+0xecd4>
   22b1c:	add	r1, pc, r1
   22b20:	add	r2, pc, r2
   22b24:	add	r1, r1, #176	; 0xb0
   22b28:	bl	13450 <g_return_if_fail_warning@plt>
   22b2c:	mov	r0, r4
   22b30:	pop	{r4, pc}
   22b34:	andeq	r7, r1, r8, lsl #7
   22b38:	andeq	r5, r1, r4, asr #11
   22b3c:	push	{r4, lr}
   22b40:	subs	r4, r0, #0
   22b44:	beq	22b58 <g_unichar_xdigit_value@plt+0xecf4>
   22b48:	ldr	r3, [r4]
   22b4c:	ldr	r3, [r3, #72]	; 0x48
   22b50:	blx	r3
   22b54:	pop	{r4, pc}
   22b58:	ldr	r1, [pc, #24]	; 22b78 <g_unichar_xdigit_value@plt+0xed14>
   22b5c:	ldr	r2, [pc, #24]	; 22b7c <g_unichar_xdigit_value@plt+0xed18>
   22b60:	add	r1, pc, r1
   22b64:	add	r2, pc, r2
   22b68:	add	r1, r1, #200	; 0xc8
   22b6c:	bl	13450 <g_return_if_fail_warning@plt>
   22b70:	mov	r0, r4
   22b74:	pop	{r4, pc}
   22b78:	andeq	r7, r1, r4, asr #6
   22b7c:	andeq	r5, r1, r0, lsl #11
   22b80:	push	{r4, lr}
   22b84:	subs	r4, r0, #0
   22b88:	beq	22b98 <g_unichar_xdigit_value@plt+0xed34>
   22b8c:	ldr	r3, [r4, #12]
   22b90:	ldr	r0, [r3]
   22b94:	pop	{r4, pc}
   22b98:	ldr	r1, [pc, #24]	; 22bb8 <g_unichar_xdigit_value@plt+0xed54>
   22b9c:	ldr	r2, [pc, #24]	; 22bbc <g_unichar_xdigit_value@plt+0xed58>
   22ba0:	add	r1, pc, r1
   22ba4:	add	r2, pc, r2
   22ba8:	add	r1, r1, #236	; 0xec
   22bac:	bl	13450 <g_return_if_fail_warning@plt>
   22bb0:	mov	r0, r4
   22bb4:	pop	{r4, pc}
   22bb8:	andeq	r7, r1, r4, lsl #6
   22bbc:	andeq	r5, r1, r0, asr #10
   22bc0:	push	{r4, lr}
   22bc4:	subs	r4, r0, #0
   22bc8:	beq	22be8 <g_unichar_xdigit_value@plt+0xed84>
   22bcc:	ldr	r3, [r4, #12]
   22bd0:	cmp	r1, #0
   22bd4:	ldmib	r3, {r0, r3}
   22bd8:	beq	22be4 <g_unichar_xdigit_value@plt+0xed80>
   22bdc:	str	r3, [r1]
   22be0:	pop	{r4, pc}
   22be4:	pop	{r4, pc}
   22be8:	ldr	r1, [pc, #24]	; 22c08 <g_unichar_xdigit_value@plt+0xeda4>
   22bec:	ldr	r2, [pc, #24]	; 22c0c <g_unichar_xdigit_value@plt+0xeda8>
   22bf0:	add	r1, pc, r1
   22bf4:	add	r2, pc, r2
   22bf8:	add	r1, r1, #260	; 0x104
   22bfc:	bl	13450 <g_return_if_fail_warning@plt>
   22c00:	mov	r0, r4
   22c04:	pop	{r4, pc}
   22c08:			; <UNDEFINED> instruction: 0x000172b4
   22c0c:	strdeq	r5, [r1], -r0
   22c10:	push	{r4, lr}
   22c14:	subs	r4, r0, #0
   22c18:	beq	22c28 <g_unichar_xdigit_value@plt+0xedc4>
   22c1c:	ldr	r3, [r4, #12]
   22c20:	ldr	r0, [r3, #16]
   22c24:	pop	{r4, pc}
   22c28:	ldr	r1, [pc, #24]	; 22c48 <g_unichar_xdigit_value@plt+0xede4>
   22c2c:	ldr	r2, [pc, #24]	; 22c4c <g_unichar_xdigit_value@plt+0xede8>
   22c30:	add	r1, pc, r1
   22c34:	add	r2, pc, r2
   22c38:	add	r1, r1, #288	; 0x120
   22c3c:	bl	13450 <g_return_if_fail_warning@plt>
   22c40:	mov	r0, r4
   22c44:	pop	{r4, pc}
   22c48:	andeq	r7, r1, r4, ror r2
   22c4c:			; <UNDEFINED> instruction: 0x000154b0
   22c50:	push	{r4, lr}
   22c54:	subs	r4, r0, #0
   22c58:	beq	22c68 <g_unichar_xdigit_value@plt+0xee04>
   22c5c:	ldr	r3, [r4, #12]
   22c60:	ldr	r0, [r3, #20]
   22c64:	pop	{r4, pc}
   22c68:	ldr	r1, [pc, #24]	; 22c88 <g_unichar_xdigit_value@plt+0xee24>
   22c6c:	ldr	r2, [pc, #24]	; 22c8c <g_unichar_xdigit_value@plt+0xee28>
   22c70:	add	r1, pc, r1
   22c74:	add	r2, pc, r2
   22c78:	add	r1, r1, #320	; 0x140
   22c7c:	bl	13450 <g_return_if_fail_warning@plt>
   22c80:	mov	r0, r4
   22c84:	pop	{r4, pc}
   22c88:	andeq	r7, r1, r4, lsr r2
   22c8c:	andeq	r5, r1, r0, ror r4
   22c90:	ldr	r0, [pc, #104]	; 22d00 <g_unichar_xdigit_value@plt+0xee9c>
   22c94:	push	{r3, r4, r5, lr}
   22c98:	add	r0, pc, r0
   22c9c:	dmb	sy
   22ca0:	ldr	r4, [r0, #36]	; 0x24
   22ca4:	dmb	sy
   22ca8:	cmp	r4, #0
   22cac:	beq	22cc0 <g_unichar_xdigit_value@plt+0xee5c>
   22cb0:	ldr	r3, [pc, #76]	; 22d04 <g_unichar_xdigit_value@plt+0xeea0>
   22cb4:	add	r3, pc, r3
   22cb8:	ldr	r0, [r3, #36]	; 0x24
   22cbc:	pop	{r3, r4, r5, pc}
   22cc0:	add	r5, r0, #36	; 0x24
   22cc4:	mov	r0, r5
   22cc8:	bl	138ac <g_once_init_enter@plt>
   22ccc:	cmp	r0, #0
   22cd0:	beq	22cb0 <g_unichar_xdigit_value@plt+0xee4c>
   22cd4:	ldr	r1, [pc, #44]	; 22d08 <g_unichar_xdigit_value@plt+0xeea4>
   22cd8:	mov	r3, r4
   22cdc:	ldr	r2, [pc, #40]	; 22d0c <g_unichar_xdigit_value@plt+0xeea8>
   22ce0:	mov	r0, #80	; 0x50
   22ce4:	add	r1, pc, r1
   22ce8:	add	r2, pc, r2
   22cec:	bl	13438 <g_type_register_static@plt>
   22cf0:	mov	r1, r0
   22cf4:	mov	r0, r5
   22cf8:	bl	13bac <g_once_init_leave@plt>
   22cfc:	b	22cb0 <g_unichar_xdigit_value@plt+0xee4c>
   22d00:			; <UNDEFINED> instruction: 0x0002e8b0
   22d04:	muleq	r2, r4, r8
   22d08:	andeq	r7, r1, ip, lsr r4
   22d0c:	andeq	sp, r2, ip, asr #25
   22d10:	push	{r4, r5, r6, r7, r8, lr}
   22d14:	sub	sp, sp, #8
   22d18:	mov	r6, r1
   22d1c:	mov	r5, r2
   22d20:	ldr	r4, [sp, #32]
   22d24:	mov	r7, r0
   22d28:	mov	r8, r3
   22d2c:	bl	22c90 <g_unichar_xdigit_value@plt+0xee2c>
   22d30:	str	r8, [sp]
   22d34:	mov	r1, r7
   22d38:	mov	r2, r6
   22d3c:	mov	r3, r5
   22d40:	str	r4, [sp, #4]
   22d44:	bl	22980 <g_unichar_xdigit_value@plt+0xeb1c>
   22d48:	add	sp, sp, #8
   22d4c:	pop	{r4, r5, r6, r7, r8, pc}
   22d50:	push	{r4, lr}
   22d54:	mov	r4, r0
   22d58:	bl	22c90 <g_unichar_xdigit_value@plt+0xee2c>
   22d5c:	mov	r1, r0
   22d60:	mov	r0, r4
   22d64:	bl	13870 <g_type_instance_get_private@plt>
   22d68:	str	r0, [r4, #12]
   22d6c:	pop	{r4, pc}
   22d70:	push	{r4, r5, r6, r7, r8, lr}
   22d74:	mov	r6, r0
   22d78:	bl	22c90 <g_unichar_xdigit_value@plt+0xee2c>
   22d7c:	ldr	r8, [pc, #148]	; 22e18 <g_unichar_xdigit_value@plt+0xefb4>
   22d80:	mov	r5, #0
   22d84:	add	r8, pc, r8
   22d88:	mov	r1, r0
   22d8c:	mov	r0, r6
   22d90:	bl	13510 <g_type_check_instance_cast@plt>
   22d94:	ldr	r3, [r0, #12]
   22d98:	mov	r4, r0
   22d9c:	ldr	r0, [r3]
   22da0:	bl	1399c <g_free@plt>
   22da4:	ldr	r3, [r4, #12]
   22da8:	ldr	r2, [pc, #108]	; 22e1c <g_unichar_xdigit_value@plt+0xefb8>
   22dac:	ldr	r7, [r3, #4]
   22db0:	ldr	r1, [r3, #8]
   22db4:	str	r5, [r3]
   22db8:	mov	r0, r7
   22dbc:	ldr	r2, [r8, r2]
   22dc0:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   22dc4:	mov	r0, r7
   22dc8:	bl	1399c <g_free@plt>
   22dcc:	ldr	r3, [r4, #12]
   22dd0:	str	r5, [r3, #4]
   22dd4:	ldr	r0, [r3, #16]
   22dd8:	bl	1399c <g_free@plt>
   22ddc:	ldr	r3, [r4, #12]
   22de0:	str	r5, [r3, #16]
   22de4:	ldr	r0, [r3, #20]
   22de8:	bl	1399c <g_free@plt>
   22dec:	ldr	r3, [pc, #44]	; 22e20 <g_unichar_xdigit_value@plt+0xefbc>
   22df0:	ldr	r2, [r4, #12]
   22df4:	mov	r1, #80	; 0x50
   22df8:	add	r3, pc, r3
   22dfc:	str	r5, [r2, #20]
   22e00:	ldr	r0, [r3, #12]
   22e04:	bl	13db0 <g_type_check_class_cast@plt>
   22e08:	ldr	r3, [r0, #24]
   22e0c:	mov	r0, r6
   22e10:	blx	r3
   22e14:	pop	{r4, r5, r6, r7, r8, pc}
   22e18:	andeq	lr, r2, r4, ror r2
   22e1c:	andeq	r0, r0, r4, lsr #7
   22e20:	andeq	lr, r2, r0, asr r7
   22e24:	ldr	ip, [pc, #288]	; 22f4c <g_unichar_xdigit_value@plt+0xf0e8>
   22e28:	push	{r4, r5, r6, r7, r8, lr}
   22e2c:	mov	r6, r0
   22e30:	ldr	r0, [pc, #280]	; 22f50 <g_unichar_xdigit_value@plt+0xf0ec>
   22e34:	add	ip, pc, ip
   22e38:	mov	r8, r3
   22e3c:	sub	sp, sp, #32
   22e40:	mov	r5, r1
   22e44:	mov	r7, r2
   22e48:	ldr	r4, [ip, r0]
   22e4c:	ldr	r3, [r4]
   22e50:	str	r3, [sp, #28]
   22e54:	bl	22c90 <g_unichar_xdigit_value@plt+0xee2c>
   22e58:	mov	r1, r0
   22e5c:	mov	r0, r6
   22e60:	bl	13510 <g_type_check_instance_cast@plt>
   22e64:	sub	ip, r5, #1
   22e68:	cmp	ip, #3
   22e6c:	addls	pc, pc, ip, lsl #2
   22e70:	b	22eec <g_unichar_xdigit_value@plt+0xf088>
   22e74:	b	22ed8 <g_unichar_xdigit_value@plt+0xf074>
   22e78:	b	22ec0 <g_unichar_xdigit_value@plt+0xf05c>
   22e7c:	b	22eac <g_unichar_xdigit_value@plt+0xf048>
   22e80:	b	22e84 <g_unichar_xdigit_value@plt+0xf020>
   22e84:	bl	22c50 <g_unichar_xdigit_value@plt+0xedec>
   22e88:	mov	r1, r0
   22e8c:	mov	r0, r7
   22e90:	bl	13834 <g_value_set_string@plt>
   22e94:	ldr	r2, [sp, #28]
   22e98:	ldr	r3, [r4]
   22e9c:	cmp	r2, r3
   22ea0:	bne	22f48 <g_unichar_xdigit_value@plt+0xf0e4>
   22ea4:	add	sp, sp, #32
   22ea8:	pop	{r4, r5, r6, r7, r8, pc}
   22eac:	bl	22c10 <g_unichar_xdigit_value@plt+0xedac>
   22eb0:	mov	r1, r0
   22eb4:	mov	r0, r7
   22eb8:	bl	13834 <g_value_set_string@plt>
   22ebc:	b	22e94 <g_unichar_xdigit_value@plt+0xf030>
   22ec0:	add	r1, sp, #24
   22ec4:	bl	22bc0 <g_unichar_xdigit_value@plt+0xed5c>
   22ec8:	mov	r1, r0
   22ecc:	mov	r0, r7
   22ed0:	bl	13768 <g_value_set_boxed@plt>
   22ed4:	b	22e94 <g_unichar_xdigit_value@plt+0xf030>
   22ed8:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   22edc:	mov	r1, r0
   22ee0:	mov	r0, r7
   22ee4:	bl	13834 <g_value_set_string@plt>
   22ee8:	b	22e94 <g_unichar_xdigit_value@plt+0xf030>
   22eec:	ldm	r8, {r3, r8}
   22ef0:	ldr	r0, [r3]
   22ef4:	bl	13564 <g_type_name@plt>
   22ef8:	ldr	r3, [r6]
   22efc:	mov	r7, r0
   22f00:	ldr	r0, [r3]
   22f04:	bl	13564 <g_type_name@plt>
   22f08:	ldr	r2, [pc, #68]	; 22f54 <g_unichar_xdigit_value@plt+0xf0f0>
   22f0c:	movw	r3, #853	; 0x355
   22f10:	str	r3, [sp]
   22f14:	add	r2, pc, r2
   22f18:	ldr	r3, [pc, #56]	; 22f58 <g_unichar_xdigit_value@plt+0xf0f4>
   22f1c:	stmib	sp, {r2, r5}
   22f20:	mov	r1, #16
   22f24:	ldr	r2, [pc, #48]	; 22f5c <g_unichar_xdigit_value@plt+0xf0f8>
   22f28:	add	r3, pc, r3
   22f2c:	str	r8, [sp, #12]
   22f30:	str	r7, [sp, #16]
   22f34:	add	r2, pc, r2
   22f38:	str	r0, [sp, #20]
   22f3c:	mov	r0, #0
   22f40:	bl	13558 <g_log@plt>
   22f44:	b	22e94 <g_unichar_xdigit_value@plt+0xf030>
   22f48:	bl	13978 <__stack_chk_fail@plt>
   22f4c:	andeq	lr, r2, r4, asr #3
   22f50:	muleq	r0, r0, r3
   22f54:	andeq	r7, r1, r8, ror r2
   22f58:	andeq	r7, r1, r0, asr #4
   22f5c:	strdeq	r7, [r1], -ip
   22f60:	push	{r4, r5, lr}
   22f64:	subs	r5, r1, #0
   22f68:	sub	sp, sp, #12
   22f6c:	mov	r4, r2
   22f70:	beq	22fc4 <g_unichar_xdigit_value@plt+0xf160>
   22f74:	add	r2, r2, #12
   22f78:	ldm	r2, {r2, r3, ip}
   22f7c:	str	ip, [sp]
   22f80:	bl	18d88 <g_unichar_xdigit_value@plt+0x4f24>
   22f84:	mov	r5, r0
   22f88:	mov	r0, r4
   22f8c:	bl	1ab70 <g_unichar_xdigit_value@plt+0x6d0c>
   22f90:	ldr	r3, [r5, #24]
   22f94:	mov	r4, r0
   22f98:	ldr	r0, [r3]
   22f9c:	cmp	r0, #0
   22fa0:	beq	22fb4 <g_unichar_xdigit_value@plt+0xf150>
   22fa4:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   22fa8:	ldr	r3, [r5, #24]
   22fac:	mov	r2, #0
   22fb0:	str	r2, [r3]
   22fb4:	mov	r0, r5
   22fb8:	str	r4, [r3]
   22fbc:	add	sp, sp, #12
   22fc0:	pop	{r4, r5, pc}
   22fc4:	ldr	r1, [pc, #32]	; 22fec <g_unichar_xdigit_value@plt+0xf188>
   22fc8:	mov	r0, r5
   22fcc:	ldr	r2, [pc, #28]	; 22ff0 <g_unichar_xdigit_value@plt+0xf18c>
   22fd0:	add	r1, pc, r1
   22fd4:	add	r2, pc, r2
   22fd8:	add	r1, r1, #352	; 0x160
   22fdc:	bl	13450 <g_return_if_fail_warning@plt>
   22fe0:	mov	r0, r5
   22fe4:	add	sp, sp, #12
   22fe8:	pop	{r4, r5, pc}
   22fec:	ldrdeq	r6, [r1], -r4
   22ff0:	andeq	r5, r1, ip, lsl #11
   22ff4:	ldr	r0, [pc, #108]	; 23068 <g_unichar_xdigit_value@plt+0xf204>
   22ff8:	push	{r3, r4, r5, lr}
   22ffc:	add	r0, pc, r0
   23000:	dmb	sy
   23004:	ldr	r4, [r0, #40]	; 0x28
   23008:	dmb	sy
   2300c:	cmp	r4, #0
   23010:	beq	23024 <g_unichar_xdigit_value@plt+0xf1c0>
   23014:	ldr	r3, [pc, #80]	; 2306c <g_unichar_xdigit_value@plt+0xf208>
   23018:	add	r3, pc, r3
   2301c:	ldr	r0, [r3, #40]	; 0x28
   23020:	pop	{r3, r4, r5, pc}
   23024:	add	r5, r0, #40	; 0x28
   23028:	mov	r0, r5
   2302c:	bl	138ac <g_once_init_enter@plt>
   23030:	cmp	r0, #0
   23034:	beq	23014 <g_unichar_xdigit_value@plt+0xf1b0>
   23038:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   2303c:	ldr	r2, [pc, #44]	; 23070 <g_unichar_xdigit_value@plt+0xf20c>
   23040:	ldr	r1, [pc, #44]	; 23074 <g_unichar_xdigit_value@plt+0xf210>
   23044:	mov	r3, r4
   23048:	add	r2, pc, r2
   2304c:	add	r1, pc, r1
   23050:	add	r2, r2, #36	; 0x24
   23054:	bl	13438 <g_type_register_static@plt>
   23058:	mov	r1, r0
   2305c:	mov	r0, r5
   23060:	bl	13bac <g_once_init_leave@plt>
   23064:	b	23014 <g_unichar_xdigit_value@plt+0xf1b0>
   23068:	andeq	lr, r2, ip, asr #10
   2306c:	andeq	lr, r2, r0, lsr r5
   23070:	andeq	sp, r2, ip, ror #18
   23074:	andeq	r7, r1, ip, asr #2
   23078:	push	{r3, r4, r5, lr}
   2307c:	mov	r4, r1
   23080:	mov	r5, r0
   23084:	bl	22ff4 <g_unichar_xdigit_value@plt+0xf190>
   23088:	mov	r1, r5
   2308c:	mov	r2, r4
   23090:	pop	{r3, r4, r5, lr}
   23094:	b	22f60 <g_unichar_xdigit_value@plt+0xf0fc>
   23098:	push	{r4, lr}
   2309c:	mov	r4, r0
   230a0:	bl	22ff4 <g_unichar_xdigit_value@plt+0xf190>
   230a4:	mov	r1, r0
   230a8:	mov	r0, r4
   230ac:	bl	13870 <g_type_instance_get_private@plt>
   230b0:	str	r0, [r4, #24]
   230b4:	pop	{r4, pc}
   230b8:	push	{r3, r4, r5, lr}
   230bc:	mov	r4, r0
   230c0:	bl	22ff4 <g_unichar_xdigit_value@plt+0xf190>
   230c4:	mov	r1, r0
   230c8:	mov	r0, r4
   230cc:	bl	13510 <g_type_check_instance_cast@plt>
   230d0:	ldr	r3, [r0, #24]
   230d4:	mov	r5, r0
   230d8:	ldr	r0, [r3]
   230dc:	cmp	r0, #0
   230e0:	beq	230f4 <g_unichar_xdigit_value@plt+0xf290>
   230e4:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   230e8:	ldr	r3, [r5, #24]
   230ec:	mov	r2, #0
   230f0:	str	r2, [r3]
   230f4:	ldr	r3, [pc, #36]	; 23120 <g_unichar_xdigit_value@plt+0xf2bc>
   230f8:	add	r3, pc, r3
   230fc:	ldr	r5, [r3, #4]
   23100:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   23104:	mov	r1, r0
   23108:	mov	r0, r5
   2310c:	bl	13db0 <g_type_check_class_cast@plt>
   23110:	ldr	r3, [r0, #4]
   23114:	mov	r0, r4
   23118:	blx	r3
   2311c:	pop	{r3, r4, r5, pc}
   23120:	andeq	lr, r2, r0, asr r4
   23124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23128:	sub	sp, sp, #20
   2312c:	ldr	r9, [pc, #464]	; 23304 <g_unichar_xdigit_value@plt+0xf4a0>
   23130:	subs	r8, r1, #0
   23134:	ldr	r3, [pc, #460]	; 23308 <g_unichar_xdigit_value@plt+0xf4a4>
   23138:	mov	fp, r0
   2313c:	add	r9, pc, r9
   23140:	ldr	r3, [r9, r3]
   23144:	str	r3, [sp, #4]
   23148:	ldr	r3, [r3]
   2314c:	str	r3, [sp, #12]
   23150:	beq	232b0 <g_unichar_xdigit_value@plt+0xf44c>
   23154:	ldr	r3, [r0, #28]
   23158:	add	r1, sp, #8
   2315c:	ldr	r0, [r3, #12]
   23160:	bl	22bc0 <g_unichar_xdigit_value@plt+0xed5c>
   23164:	ldr	r6, [sp, #8]
   23168:	subs	r5, r0, #0
   2316c:	beq	2322c <g_unichar_xdigit_value@plt+0xf3c8>
   23170:	add	r0, r6, #1
   23174:	mov	r1, #4
   23178:	bl	13c00 <g_malloc0_n@plt>
   2317c:	cmp	r6, #0
   23180:	mov	r7, r0
   23184:	ble	23238 <g_unichar_xdigit_value@plt+0xf3d4>
   23188:	mov	r4, #0
   2318c:	mov	sl, r4
   23190:	ldr	r0, [r5, r4]
   23194:	add	sl, sl, #1
   23198:	bl	136f0 <g_strdup@plt>
   2319c:	cmp	sl, r6
   231a0:	str	r0, [r7, r4]
   231a4:	add	r4, r4, #4
   231a8:	bne	23190 <g_unichar_xdigit_value@plt+0xf32c>
   231ac:	mov	r4, #0
   231b0:	mov	r5, r4
   231b4:	b	231c8 <g_unichar_xdigit_value@plt+0xf364>
   231b8:	add	r5, r5, #1
   231bc:	add	r4, r4, #4
   231c0:	cmp	r6, r5
   231c4:	ble	23238 <g_unichar_xdigit_value@plt+0xf3d4>
   231c8:	ldr	r0, [r7, r4]
   231cc:	mov	r1, r8
   231d0:	bl	13e58 <g_strcmp0@plt>
   231d4:	subs	r3, r0, #0
   231d8:	bne	231b8 <g_unichar_xdigit_value@plt+0xf354>
   231dc:	ldr	r2, [fp, #28]
   231e0:	ldr	r1, [r2, #4]
   231e4:	cmp	r1, r5
   231e8:	ble	232d4 <g_unichar_xdigit_value@plt+0xf470>
   231ec:	ldr	r3, [r2]
   231f0:	ldr	r0, [r3, r4]
   231f4:	cmp	r0, #0
   231f8:	moveq	r8, r0
   231fc:	beq	23208 <g_unichar_xdigit_value@plt+0xf3a4>
   23200:	bl	133f0 <g_object_ref@plt>
   23204:	mov	r8, r0
   23208:	ldr	r2, [pc, #252]	; 2330c <g_unichar_xdigit_value@plt+0xf4a8>
   2320c:	mov	r1, r6
   23210:	mov	r0, r7
   23214:	ldr	r2, [r9, r2]
   23218:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   2321c:	mov	r0, r7
   23220:	bl	1399c <g_free@plt>
   23224:	mov	r0, r8
   23228:	b	23294 <g_unichar_xdigit_value@plt+0xf430>
   2322c:	cmp	r6, #0
   23230:	mov	r7, r5
   23234:	bgt	231ac <g_unichar_xdigit_value@plt+0xf348>
   23238:	ldr	r3, [pc, #208]	; 23310 <g_unichar_xdigit_value@plt+0xf4ac>
   2323c:	add	r3, pc, r3
   23240:	ldr	r4, [r3, #8]
   23244:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   23248:	mov	r1, r0
   2324c:	mov	r0, r4
   23250:	bl	13db0 <g_type_check_class_cast@plt>
   23254:	ldr	r4, [r0, #12]
   23258:	bl	22ff4 <g_unichar_xdigit_value@plt+0xf190>
   2325c:	mov	r1, r0
   23260:	mov	r0, fp
   23264:	bl	13510 <g_type_check_instance_cast@plt>
   23268:	mov	r1, r8
   2326c:	blx	r4
   23270:	ldr	r3, [pc, #148]	; 2330c <g_unichar_xdigit_value@plt+0xf4a8>
   23274:	mov	r1, r6
   23278:	ldr	r2, [r9, r3]
   2327c:	mov	r8, r0
   23280:	mov	r0, r7
   23284:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   23288:	mov	r0, r7
   2328c:	bl	1399c <g_free@plt>
   23290:	mov	r0, r8
   23294:	ldr	r1, [sp, #4]
   23298:	ldr	r2, [sp, #12]
   2329c:	ldr	r3, [r1]
   232a0:	cmp	r2, r3
   232a4:	bne	23300 <g_unichar_xdigit_value@plt+0xf49c>
   232a8:	add	sp, sp, #20
   232ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   232b0:	ldr	r1, [pc, #92]	; 23314 <g_unichar_xdigit_value@plt+0xf4b0>
   232b4:	mov	r0, r8
   232b8:	ldr	r2, [pc, #88]	; 23318 <g_unichar_xdigit_value@plt+0xf4b4>
   232bc:	add	r1, pc, r1
   232c0:	add	r2, pc, r2
   232c4:	add	r1, r1, #380	; 0x17c
   232c8:	bl	13450 <g_return_if_fail_warning@plt>
   232cc:	mov	r0, r8
   232d0:	b	23294 <g_unichar_xdigit_value@plt+0xf430>
   232d4:	ldr	r2, [pc, #48]	; 2330c <g_unichar_xdigit_value@plt+0xf4a8>
   232d8:	mov	r1, r6
   232dc:	mov	r0, r7
   232e0:	ldr	r2, [r9, r2]
   232e4:	str	r3, [sp]
   232e8:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   232ec:	mov	r0, r7
   232f0:	bl	1399c <g_free@plt>
   232f4:	ldr	r3, [sp]
   232f8:	mov	r0, r3
   232fc:	b	23294 <g_unichar_xdigit_value@plt+0xf430>
   23300:	bl	13978 <__stack_chk_fail@plt>
   23304:			; <UNDEFINED> instruction: 0x0002debc
   23308:	muleq	r0, r0, r3
   2330c:	andeq	r0, r0, r4, lsr #7
   23310:	andeq	lr, r2, ip, lsl #6
   23314:	andeq	r6, r1, r8, ror #23
   23318:	andeq	r8, r1, r0, lsl r3
   2331c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23320:	sub	sp, sp, #20
   23324:	ldr	r8, [pc, #372]	; 234a0 <g_unichar_xdigit_value@plt+0xf63c>
   23328:	subs	r6, r1, #0
   2332c:	ldr	r3, [pc, #368]	; 234a4 <g_unichar_xdigit_value@plt+0xf640>
   23330:	mov	sl, r0
   23334:	add	r8, pc, r8
   23338:	ldr	r3, [r8, r3]
   2333c:	str	r3, [sp, #4]
   23340:	ldr	r3, [r3]
   23344:	str	r3, [sp, #12]
   23348:	beq	23478 <g_unichar_xdigit_value@plt+0xf614>
   2334c:	ldr	r3, [r0, #28]
   23350:	add	r1, sp, #8
   23354:	ldr	r0, [r3, #12]
   23358:	bl	22bc0 <g_unichar_xdigit_value@plt+0xed5c>
   2335c:	ldr	r5, [sp, #8]
   23360:	subs	fp, r0, #0
   23364:	beq	233f4 <g_unichar_xdigit_value@plt+0xf590>
   23368:	add	r0, r5, #1
   2336c:	mov	r1, #4
   23370:	bl	13c00 <g_malloc0_n@plt>
   23374:	cmp	r5, #0
   23378:	mov	r7, r0
   2337c:	ble	23400 <g_unichar_xdigit_value@plt+0xf59c>
   23380:	mov	r4, #0
   23384:	mov	r9, r4
   23388:	ldr	r0, [fp, r4]
   2338c:	add	r9, r9, #1
   23390:	bl	136f0 <g_strdup@plt>
   23394:	cmp	r9, r5
   23398:	str	r0, [r7, r4]
   2339c:	add	r4, r4, #4
   233a0:	bne	23388 <g_unichar_xdigit_value@plt+0xf524>
   233a4:	sub	fp, r7, #4
   233a8:	mov	r4, #0
   233ac:	b	233bc <g_unichar_xdigit_value@plt+0xf558>
   233b0:	add	r4, r4, #1
   233b4:	cmp	r5, r4
   233b8:	ble	23400 <g_unichar_xdigit_value@plt+0xf59c>
   233bc:	ldr	r0, [fp, #4]!
   233c0:	mov	r1, r6
   233c4:	bl	13e58 <g_strcmp0@plt>
   233c8:	cmp	r0, #0
   233cc:	bne	233b0 <g_unichar_xdigit_value@plt+0xf54c>
   233d0:	ldr	r3, [pc, #208]	; 234a8 <g_unichar_xdigit_value@plt+0xf644>
   233d4:	mov	r1, r5
   233d8:	mov	r0, r7
   233dc:	ldr	r2, [r8, r3]
   233e0:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   233e4:	mov	r0, r7
   233e8:	bl	1399c <g_free@plt>
   233ec:	mov	r0, #1
   233f0:	b	2345c <g_unichar_xdigit_value@plt+0xf5f8>
   233f4:	cmp	r5, #0
   233f8:	mov	r7, fp
   233fc:	bgt	233a4 <g_unichar_xdigit_value@plt+0xf540>
   23400:	ldr	r3, [pc, #164]	; 234ac <g_unichar_xdigit_value@plt+0xf648>
   23404:	add	r3, pc, r3
   23408:	ldr	r4, [r3, #8]
   2340c:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   23410:	mov	r1, r0
   23414:	mov	r0, r4
   23418:	bl	13db0 <g_type_check_class_cast@plt>
   2341c:	ldr	r4, [r0, #8]
   23420:	bl	22ff4 <g_unichar_xdigit_value@plt+0xf190>
   23424:	mov	r1, r0
   23428:	mov	r0, sl
   2342c:	bl	13510 <g_type_check_instance_cast@plt>
   23430:	mov	r1, r6
   23434:	blx	r4
   23438:	ldr	r3, [pc, #104]	; 234a8 <g_unichar_xdigit_value@plt+0xf644>
   2343c:	mov	r1, r5
   23440:	ldr	r2, [r8, r3]
   23444:	mov	r6, r0
   23448:	mov	r0, r7
   2344c:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   23450:	mov	r0, r7
   23454:	bl	1399c <g_free@plt>
   23458:	mov	r0, r6
   2345c:	ldr	r1, [sp, #4]
   23460:	ldr	r2, [sp, #12]
   23464:	ldr	r3, [r1]
   23468:	cmp	r2, r3
   2346c:	bne	2349c <g_unichar_xdigit_value@plt+0xf638>
   23470:	add	sp, sp, #20
   23474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23478:	ldr	r1, [pc, #48]	; 234b0 <g_unichar_xdigit_value@plt+0xf64c>
   2347c:	mov	r0, r6
   23480:	ldr	r2, [pc, #44]	; 234b4 <g_unichar_xdigit_value@plt+0xf650>
   23484:	add	r1, pc, r1
   23488:	add	r2, pc, r2
   2348c:	add	r1, r1, #416	; 0x1a0
   23490:	bl	13450 <g_return_if_fail_warning@plt>
   23494:	mov	r0, r6
   23498:	b	2345c <g_unichar_xdigit_value@plt+0xf5f8>
   2349c:	bl	13978 <__stack_chk_fail@plt>
   234a0:	andeq	sp, r2, r4, asr #25
   234a4:	muleq	r0, r0, r3
   234a8:	andeq	r0, r0, r4, lsr #7
   234ac:	andeq	lr, r2, r4, asr #2
   234b0:	andeq	r6, r1, r0, lsr #20
   234b4:	andeq	r8, r1, r8, asr #2
   234b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   234bc:	subs	r4, r1, #0
   234c0:	ldr	sl, [pc, #280]	; 235e0 <g_unichar_xdigit_value@plt+0xf77c>
   234c4:	mov	r8, r0
   234c8:	mov	r5, r2
   234cc:	mov	r7, r3
   234d0:	add	sl, pc, sl
   234d4:	ldr	r6, [sp, #32]
   234d8:	beq	235bc <g_unichar_xdigit_value@plt+0xf758>
   234dc:	mov	r0, r4
   234e0:	bl	22c10 <g_unichar_xdigit_value@plt+0xedac>
   234e4:	mov	r2, r5
   234e8:	mov	r1, r0
   234ec:	mov	r0, r8
   234f0:	bl	22f60 <g_unichar_xdigit_value@plt+0xf0fc>
   234f4:	mov	r9, r0
   234f8:	mov	r0, r4
   234fc:	bl	133f0 <g_object_ref@plt>
   23500:	ldr	r3, [r9, #28]
   23504:	mov	r4, r0
   23508:	ldr	r0, [r3, #12]
   2350c:	cmp	r0, #0
   23510:	beq	23524 <g_unichar_xdigit_value@plt+0xf6c0>
   23514:	bl	13b94 <g_object_unref@plt>
   23518:	ldr	r3, [r9, #28]
   2351c:	mov	r2, #0
   23520:	str	r2, [r3, #12]
   23524:	cmp	r7, #0
   23528:	str	r4, [r3, #12]
   2352c:	moveq	r8, r7
   23530:	beq	23584 <g_unichar_xdigit_value@plt+0xf720>
   23534:	add	r0, r6, #1
   23538:	mov	r1, #4
   2353c:	bl	13c00 <g_malloc0_n@plt>
   23540:	cmp	r6, #0
   23544:	movgt	r4, #0
   23548:	movgt	r5, r4
   2354c:	mov	r8, r0
   23550:	ble	23580 <g_unichar_xdigit_value@plt+0xf71c>
   23554:	ldr	r2, [r7, r4]
   23558:	cmp	r2, #0
   2355c:	mov	r0, r2
   23560:	moveq	r0, r2
   23564:	beq	2356c <g_unichar_xdigit_value@plt+0xf708>
   23568:	bl	133f0 <g_object_ref@plt>
   2356c:	add	r5, r5, #1
   23570:	str	r0, [r8, r4]
   23574:	cmp	r5, r6
   23578:	add	r4, r4, #4
   2357c:	bne	23554 <g_unichar_xdigit_value@plt+0xf6f0>
   23580:	ldr	r3, [r9, #28]
   23584:	ldr	r4, [r3]
   23588:	ldr	r2, [pc, #84]	; 235e4 <g_unichar_xdigit_value@plt+0xf780>
   2358c:	ldr	r1, [r3, #4]
   23590:	mov	r0, r4
   23594:	ldr	r2, [sl, r2]
   23598:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   2359c:	mov	r0, r4
   235a0:	bl	1399c <g_free@plt>
   235a4:	ldr	r3, [r9, #28]
   235a8:	mov	r0, r9
   235ac:	str	r8, [r3]
   235b0:	str	r6, [r3, #4]
   235b4:	str	r6, [r3, #8]
   235b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   235bc:	ldr	r1, [pc, #36]	; 235e8 <g_unichar_xdigit_value@plt+0xf784>
   235c0:	mov	r0, r4
   235c4:	ldr	r2, [pc, #32]	; 235ec <g_unichar_xdigit_value@plt+0xf788>
   235c8:	add	r1, pc, r1
   235cc:	add	r2, pc, r2
   235d0:	add	r1, r1, #460	; 0x1cc
   235d4:	bl	13450 <g_return_if_fail_warning@plt>
   235d8:	mov	r0, r4
   235dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   235e0:	andeq	sp, r2, r8, lsr #22
   235e4:			; <UNDEFINED> instruction: 0x000003b8
   235e8:	ldrdeq	r6, [r1], -ip
   235ec:	andeq	r6, r1, r8, lsr #10
   235f0:	ldr	r0, [pc, #108]	; 23664 <g_unichar_xdigit_value@plt+0xf800>
   235f4:	push	{r3, r4, r5, lr}
   235f8:	add	r0, pc, r0
   235fc:	dmb	sy
   23600:	ldr	r4, [r0, #44]	; 0x2c
   23604:	dmb	sy
   23608:	cmp	r4, #0
   2360c:	beq	23620 <g_unichar_xdigit_value@plt+0xf7bc>
   23610:	ldr	r3, [pc, #80]	; 23668 <g_unichar_xdigit_value@plt+0xf804>
   23614:	add	r3, pc, r3
   23618:	ldr	r0, [r3, #44]	; 0x2c
   2361c:	pop	{r3, r4, r5, pc}
   23620:	add	r5, r0, #44	; 0x2c
   23624:	mov	r0, r5
   23628:	bl	138ac <g_once_init_enter@plt>
   2362c:	cmp	r0, #0
   23630:	beq	23610 <g_unichar_xdigit_value@plt+0xf7ac>
   23634:	bl	22ff4 <g_unichar_xdigit_value@plt+0xf190>
   23638:	ldr	r2, [pc, #44]	; 2366c <g_unichar_xdigit_value@plt+0xf808>
   2363c:	ldr	r1, [pc, #44]	; 23670 <g_unichar_xdigit_value@plt+0xf80c>
   23640:	mov	r3, r4
   23644:	add	r2, pc, r2
   23648:	add	r1, pc, r1
   2364c:	add	r2, r2, #72	; 0x48
   23650:	bl	13438 <g_type_register_static@plt>
   23654:	mov	r1, r0
   23658:	mov	r0, r5
   2365c:	bl	13bac <g_once_init_leave@plt>
   23660:	b	23610 <g_unichar_xdigit_value@plt+0xf7ac>
   23664:	andeq	sp, r2, r0, asr pc
   23668:	andeq	sp, r2, r4, lsr pc
   2366c:	andeq	sp, r2, r0, ror r3
   23670:	andeq	r6, r1, r4, ror #22
   23674:	push	{r4, r5, r6, r7, lr}
   23678:	sub	sp, sp, #12
   2367c:	mov	r5, r1
   23680:	mov	r4, r2
   23684:	mov	r6, r0
   23688:	mov	r7, r3
   2368c:	bl	235f0 <g_unichar_xdigit_value@plt+0xf78c>
   23690:	str	r7, [sp]
   23694:	mov	r1, r6
   23698:	mov	r2, r5
   2369c:	mov	r3, r4
   236a0:	bl	234b8 <g_unichar_xdigit_value@plt+0xf654>
   236a4:	add	sp, sp, #12
   236a8:	pop	{r4, r5, r6, r7, pc}
   236ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   236b0:	subs	r7, r0, #0
   236b4:	ldr	r9, [pc, #536]	; 238d4 <g_unichar_xdigit_value@plt+0xfa70>
   236b8:	sub	sp, sp, #52	; 0x34
   236bc:	ldr	r3, [pc, #532]	; 238d8 <g_unichar_xdigit_value@plt+0xfa74>
   236c0:	mov	r5, #0
   236c4:	add	r9, pc, r9
   236c8:	mov	fp, r1
   236cc:	ldr	sl, [r9, r3]
   236d0:	str	r5, [sp, #24]
   236d4:	str	r5, [sp, #28]
   236d8:	ldr	r3, [sl]
   236dc:	str	r5, [sp, #32]
   236e0:	str	r5, [sp, #36]	; 0x24
   236e4:	str	r3, [sp, #44]	; 0x2c
   236e8:	str	r5, [sp, #40]	; 0x28
   236ec:	beq	238b0 <g_unichar_xdigit_value@plt+0xfa4c>
   236f0:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   236f4:	mov	r1, r0
   236f8:	mov	r0, r7
   236fc:	bl	22718 <g_unichar_xdigit_value@plt+0xe8b4>
   23700:	subs	r4, r0, #0
   23704:	beq	237a0 <g_unichar_xdigit_value@plt+0xf93c>
   23708:	mov	r0, r7
   2370c:	add	r1, sp, #20
   23710:	bl	22bc0 <g_unichar_xdigit_value@plt+0xed5c>
   23714:	ldr	r8, [sp, #20]
   23718:	cmp	r8, #0
   2371c:	subgt	r6, r0, #4
   23720:	bgt	2373c <g_unichar_xdigit_value@plt+0xf8d8>
   23724:	b	237c0 <g_unichar_xdigit_value@plt+0xf95c>
   23728:	mov	r0, r4
   2372c:	add	r5, r5, #1
   23730:	bl	1399c <g_free@plt>
   23734:	cmp	r5, r8
   23738:	beq	237c0 <g_unichar_xdigit_value@plt+0xf95c>
   2373c:	ldr	r0, [r6, #4]!
   23740:	bl	136f0 <g_strdup@plt>
   23744:	mov	r4, r0
   23748:	mov	r0, r7
   2374c:	mov	r1, r4
   23750:	bl	22718 <g_unichar_xdigit_value@plt+0xe8b4>
   23754:	subs	ip, r0, #0
   23758:	bne	23728 <g_unichar_xdigit_value@plt+0xf8c4>
   2375c:	str	ip, [sp]
   23760:	mov	r2, ip
   23764:	mov	r3, ip
   23768:	mov	r0, fp
   2376c:	mov	r1, #1
   23770:	str	ip, [sp, #12]
   23774:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   23778:	mov	r0, r4
   2377c:	bl	1399c <g_free@plt>
   23780:	ldr	ip, [sp, #12]
   23784:	mov	r0, ip
   23788:	ldr	r2, [sp, #44]	; 0x2c
   2378c:	ldr	r3, [sl]
   23790:	cmp	r2, r3
   23794:	bne	238d0 <g_unichar_xdigit_value@plt+0xfa6c>
   23798:	add	sp, sp, #52	; 0x34
   2379c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237a0:	mov	r0, fp
   237a4:	str	r4, [sp]
   237a8:	mov	r1, #1
   237ac:	mov	r2, r4
   237b0:	mov	r3, r4
   237b4:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   237b8:	mov	r0, r4
   237bc:	b	23788 <g_unichar_xdigit_value@plt+0xf924>
   237c0:	mov	r0, #4
   237c4:	bl	13c90 <g_malloc0@plt>
   237c8:	mov	r1, fp
   237cc:	mov	r3, #0
   237d0:	mov	r4, r0
   237d4:	mov	r0, r7
   237d8:	mov	r2, r4
   237dc:	bl	23674 <g_unichar_xdigit_value@plt+0xf810>
   237e0:	add	r2, sp, #28
   237e4:	add	r3, sp, #36	; 0x24
   237e8:	add	r1, sp, #24
   237ec:	str	r3, [sp]
   237f0:	add	r3, sp, #40	; 0x28
   237f4:	str	r3, [sp, #4]
   237f8:	add	r3, sp, #32
   237fc:	mov	r5, r0
   23800:	bl	1caa4 <g_unichar_xdigit_value@plt+0x8c40>
   23804:	ldr	r6, [sp, #28]
   23808:	mov	r0, #0
   2380c:	bl	1399c <g_free@plt>
   23810:	ldr	r7, [sp, #32]
   23814:	cmp	r6, #0
   23818:	ldr	r3, [sp, #36]	; 0x24
   2381c:	ldr	r2, [sp, #40]	; 0x28
   23820:	bne	23860 <g_unichar_xdigit_value@plt+0xf9fc>
   23824:	mov	r0, r7
   23828:	bl	1399c <g_free@plt>
   2382c:	cmp	r5, #0
   23830:	beq	2383c <g_unichar_xdigit_value@plt+0xf9d8>
   23834:	mov	r0, r5
   23838:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   2383c:	ldr	r3, [pc, #152]	; 238dc <g_unichar_xdigit_value@plt+0xfa78>
   23840:	mov	r0, r4
   23844:	mov	r1, #0
   23848:	ldr	r2, [r9, r3]
   2384c:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   23850:	mov	r0, r4
   23854:	bl	1399c <g_free@plt>
   23858:	mov	r0, #1
   2385c:	b	23788 <g_unichar_xdigit_value@plt+0xf924>
   23860:	str	r2, [sp]
   23864:	mov	r0, fp
   23868:	mov	r1, r6
   2386c:	mov	r2, r7
   23870:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   23874:	mov	r0, r7
   23878:	bl	1399c <g_free@plt>
   2387c:	cmp	r5, #0
   23880:	beq	2388c <g_unichar_xdigit_value@plt+0xfa28>
   23884:	mov	r0, r5
   23888:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   2388c:	ldr	r3, [pc, #72]	; 238dc <g_unichar_xdigit_value@plt+0xfa78>
   23890:	mov	r0, r4
   23894:	mov	r1, #0
   23898:	ldr	r2, [r9, r3]
   2389c:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   238a0:	mov	r0, r4
   238a4:	bl	1399c <g_free@plt>
   238a8:	mov	r0, #0
   238ac:	b	23788 <g_unichar_xdigit_value@plt+0xf924>
   238b0:	ldr	r1, [pc, #40]	; 238e0 <g_unichar_xdigit_value@plt+0xfa7c>
   238b4:	ldr	r2, [pc, #40]	; 238e4 <g_unichar_xdigit_value@plt+0xfa80>
   238b8:	add	r1, pc, r1
   238bc:	add	r2, pc, r2
   238c0:	add	r1, r1, #488	; 0x1e8
   238c4:	bl	13450 <g_return_if_fail_warning@plt>
   238c8:	mov	r0, r7
   238cc:	b	23788 <g_unichar_xdigit_value@plt+0xf924>
   238d0:	bl	13978 <__stack_chk_fail@plt>
   238d4:	andeq	sp, r2, r4, lsr r9
   238d8:	muleq	r0, r0, r3
   238dc:			; <UNDEFINED> instruction: 0x000003b8
   238e0:	andeq	r6, r1, ip, ror #11
   238e4:	andeq	r4, r1, r8, lsr #16
   238e8:	ldr	ip, [pc, #268]	; 239fc <g_unichar_xdigit_value@plt+0xfb98>
   238ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   238f0:	add	ip, pc, ip
   238f4:	ldr	lr, [pc, #260]	; 23a00 <g_unichar_xdigit_value@plt+0xfb9c>
   238f8:	sub	sp, sp, #36	; 0x24
   238fc:	mov	r4, r2
   23900:	mov	r7, r3
   23904:	mov	r2, r1
   23908:	mov	r3, r4
   2390c:	ldr	r5, [ip, lr]
   23910:	mov	r1, r7
   23914:	mov	r4, #0
   23918:	str	r4, [sp, #8]
   2391c:	str	r4, [sp, #12]
   23920:	ldr	ip, [r5]
   23924:	str	r4, [sp, #16]
   23928:	str	r4, [sp, #20]
   2392c:	str	ip, [sp, #28]
   23930:	str	r4, [sp, #24]
   23934:	bl	23674 <g_unichar_xdigit_value@plt+0xf810>
   23938:	add	r2, sp, #12
   2393c:	add	r3, sp, #20
   23940:	add	r1, sp, #8
   23944:	str	r3, [sp]
   23948:	add	r3, sp, #24
   2394c:	str	r3, [sp, #4]
   23950:	add	r3, sp, #16
   23954:	mov	r6, r0
   23958:	bl	1d450 <g_unichar_xdigit_value@plt+0x95ec>
   2395c:	ldr	r8, [sp, #12]
   23960:	mov	r9, r0
   23964:	mov	r0, r4
   23968:	bl	1399c <g_free@plt>
   2396c:	cmp	r8, #0
   23970:	ldr	r4, [sp, #16]
   23974:	ldr	r3, [sp, #20]
   23978:	ldr	r2, [sp, #24]
   2397c:	bne	239b8 <g_unichar_xdigit_value@plt+0xfb54>
   23980:	mov	r0, r4
   23984:	bl	1399c <g_free@plt>
   23988:	cmp	r6, #0
   2398c:	moveq	r0, r9
   23990:	beq	239a0 <g_unichar_xdigit_value@plt+0xfb3c>
   23994:	mov	r0, r6
   23998:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   2399c:	mov	r0, r9
   239a0:	ldr	r2, [sp, #28]
   239a4:	ldr	r3, [r5]
   239a8:	cmp	r2, r3
   239ac:	bne	239f8 <g_unichar_xdigit_value@plt+0xfb94>
   239b0:	add	sp, sp, #36	; 0x24
   239b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   239b8:	str	r2, [sp]
   239bc:	mov	r0, r7
   239c0:	mov	r1, r8
   239c4:	mov	r2, r4
   239c8:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   239cc:	cmp	r9, #0
   239d0:	beq	239dc <g_unichar_xdigit_value@plt+0xfb78>
   239d4:	mov	r0, r9
   239d8:	bl	13b94 <g_object_unref@plt>
   239dc:	mov	r0, r4
   239e0:	bl	1399c <g_free@plt>
   239e4:	subs	r0, r6, #0
   239e8:	beq	239a0 <g_unichar_xdigit_value@plt+0xfb3c>
   239ec:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   239f0:	mov	r0, #0
   239f4:	b	239a0 <g_unichar_xdigit_value@plt+0xfb3c>
   239f8:	bl	13978 <__stack_chk_fail@plt>
   239fc:	andeq	sp, r2, r8, lsl #14
   23a00:	muleq	r0, r0, r3
   23a04:	push	{r4, lr}
   23a08:	mov	r4, r0
   23a0c:	bl	235f0 <g_unichar_xdigit_value@plt+0xf78c>
   23a10:	mov	r1, r0
   23a14:	mov	r0, r4
   23a18:	bl	13870 <g_type_instance_get_private@plt>
   23a1c:	str	r0, [r4, #28]
   23a20:	pop	{r4, pc}
   23a24:	push	{r3, r4, r5, r6, r7, lr}
   23a28:	mov	r5, r0
   23a2c:	bl	235f0 <g_unichar_xdigit_value@plt+0xf78c>
   23a30:	ldr	r6, [pc, #136]	; 23ac0 <g_unichar_xdigit_value@plt+0xfc5c>
   23a34:	mov	r7, #0
   23a38:	add	r6, pc, r6
   23a3c:	mov	r1, r0
   23a40:	mov	r0, r5
   23a44:	bl	13510 <g_type_check_instance_cast@plt>
   23a48:	mov	r2, r6
   23a4c:	ldr	r1, [pc, #112]	; 23ac4 <g_unichar_xdigit_value@plt+0xfc60>
   23a50:	ldr	r2, [r2, r1]
   23a54:	ldr	r3, [r0, #28]
   23a58:	mov	r4, r0
   23a5c:	ldr	r6, [r3]
   23a60:	ldr	r1, [r3, #4]
   23a64:	mov	r0, r6
   23a68:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   23a6c:	mov	r0, r6
   23a70:	bl	1399c <g_free@plt>
   23a74:	ldr	r3, [r4, #28]
   23a78:	ldr	r0, [r3, #12]
   23a7c:	str	r7, [r3]
   23a80:	cmp	r0, r7
   23a84:	beq	23a94 <g_unichar_xdigit_value@plt+0xfc30>
   23a88:	bl	13b94 <g_object_unref@plt>
   23a8c:	ldr	r3, [r4, #28]
   23a90:	str	r7, [r3, #12]
   23a94:	ldr	r3, [pc, #44]	; 23ac8 <g_unichar_xdigit_value@plt+0xfc64>
   23a98:	add	r3, pc, r3
   23a9c:	ldr	r4, [r3, #8]
   23aa0:	bl	1a8a4 <g_unichar_xdigit_value@plt+0x6a40>
   23aa4:	mov	r1, r0
   23aa8:	mov	r0, r4
   23aac:	bl	13db0 <g_type_check_class_cast@plt>
   23ab0:	ldr	r3, [r0, #4]
   23ab4:	mov	r0, r5
   23ab8:	blx	r3
   23abc:	pop	{r3, r4, r5, r6, r7, pc}
   23ac0:	andeq	sp, r2, r0, asr #11
   23ac4:			; <UNDEFINED> instruction: 0x000003b8
   23ac8:			; <UNDEFINED> instruction: 0x0002dab0
   23acc:	push	{r4, r5, r6, r7, r8, r9, lr}
   23ad0:	subs	r7, r1, #0
   23ad4:	ldr	r5, [pc, #164]	; 23b80 <g_unichar_xdigit_value@plt+0xfd1c>
   23ad8:	sub	sp, sp, #12
   23adc:	mov	r8, r0
   23ae0:	mov	r9, r2
   23ae4:	add	r5, pc, r5
   23ae8:	beq	23b58 <g_unichar_xdigit_value@plt+0xfcf4>
   23aec:	mov	r0, #4
   23af0:	bl	13c90 <g_malloc0@plt>
   23af4:	mov	r4, r0
   23af8:	ldr	r0, [pc, #132]	; 23b84 <g_unichar_xdigit_value@plt+0xfd20>
   23afc:	add	r0, pc, r0
   23b00:	bl	136f0 <g_strdup@plt>
   23b04:	mov	r1, r7
   23b08:	mov	r2, r4
   23b0c:	mov	r3, #0
   23b10:	str	r9, [sp, #4]
   23b14:	mov	r6, r0
   23b18:	mov	r0, r8
   23b1c:	str	r6, [sp]
   23b20:	bl	22980 <g_unichar_xdigit_value@plt+0xeb1c>
   23b24:	mov	r7, r0
   23b28:	mov	r0, r6
   23b2c:	bl	1399c <g_free@plt>
   23b30:	ldr	r3, [pc, #80]	; 23b88 <g_unichar_xdigit_value@plt+0xfd24>
   23b34:	mov	r0, r4
   23b38:	mov	r1, #0
   23b3c:	ldr	r2, [r5, r3]
   23b40:	bl	22414 <g_unichar_xdigit_value@plt+0xe5b0>
   23b44:	mov	r0, r4
   23b48:	bl	1399c <g_free@plt>
   23b4c:	mov	r0, r7
   23b50:	add	sp, sp, #12
   23b54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23b58:	ldr	r1, [pc, #44]	; 23b8c <g_unichar_xdigit_value@plt+0xfd28>
   23b5c:	mov	r0, r7
   23b60:	ldr	r2, [pc, #40]	; 23b90 <g_unichar_xdigit_value@plt+0xfd2c>
   23b64:	add	r1, pc, r1
   23b68:	add	r2, pc, r2
   23b6c:	add	r1, r1, #512	; 0x200
   23b70:	bl	13450 <g_return_if_fail_warning@plt>
   23b74:	mov	r0, r7
   23b78:	add	sp, sp, #12
   23b7c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23b80:	andeq	sp, r2, r4, lsl r5
   23b84:	andeq	r5, r1, r8, asr #12
   23b88:	andeq	r0, r0, r4, lsr #7
   23b8c:	andeq	r6, r1, r0, asr #6
   23b90:	andeq	r6, r1, r0, lsr #11
   23b94:	ldr	r0, [pc, #108]	; 23c08 <g_unichar_xdigit_value@plt+0xfda4>
   23b98:	push	{r3, r4, r5, lr}
   23b9c:	add	r0, pc, r0
   23ba0:	dmb	sy
   23ba4:	ldr	r4, [r0, #48]	; 0x30
   23ba8:	dmb	sy
   23bac:	cmp	r4, #0
   23bb0:	beq	23bc4 <g_unichar_xdigit_value@plt+0xfd60>
   23bb4:	ldr	r3, [pc, #80]	; 23c0c <g_unichar_xdigit_value@plt+0xfda8>
   23bb8:	add	r3, pc, r3
   23bbc:	ldr	r0, [r3, #48]	; 0x30
   23bc0:	pop	{r3, r4, r5, pc}
   23bc4:	add	r5, r0, #48	; 0x30
   23bc8:	mov	r0, r5
   23bcc:	bl	138ac <g_once_init_enter@plt>
   23bd0:	cmp	r0, #0
   23bd4:	beq	23bb4 <g_unichar_xdigit_value@plt+0xfd50>
   23bd8:	bl	22c90 <g_unichar_xdigit_value@plt+0xee2c>
   23bdc:	ldr	r2, [pc, #44]	; 23c10 <g_unichar_xdigit_value@plt+0xfdac>
   23be0:	ldr	r1, [pc, #44]	; 23c14 <g_unichar_xdigit_value@plt+0xfdb0>
   23be4:	mov	r3, r4
   23be8:	add	r2, pc, r2
   23bec:	add	r1, pc, r1
   23bf0:	add	r2, r2, #108	; 0x6c
   23bf4:	bl	13438 <g_type_register_static@plt>
   23bf8:	mov	r1, r0
   23bfc:	mov	r0, r5
   23c00:	bl	13bac <g_once_init_leave@plt>
   23c04:	b	23bb4 <g_unichar_xdigit_value@plt+0xfd50>
   23c08:	andeq	sp, r2, ip, lsr #19
   23c0c:	muleq	r2, r0, r9
   23c10:	andeq	ip, r2, ip, asr #27
   23c14:	ldrdeq	r6, [r1], -r0
   23c18:	push	{r3, r4, r5, lr}
   23c1c:	mov	r4, r1
   23c20:	mov	r5, r0
   23c24:	bl	23b94 <g_unichar_xdigit_value@plt+0xfd30>
   23c28:	mov	r1, r5
   23c2c:	mov	r2, r4
   23c30:	pop	{r3, r4, r5, lr}
   23c34:	b	23acc <g_unichar_xdigit_value@plt+0xfc68>
   23c38:	push	{r4, r5, r6, r7, r8, lr}
   23c3c:	subs	r4, r0, #0
   23c40:	mov	r6, r1
   23c44:	mov	r7, r2
   23c48:	mov	r8, r3
   23c4c:	beq	23d58 <g_unichar_xdigit_value@plt+0xfef4>
   23c50:	mvn	r1, #0
   23c54:	bl	134c8 <g_utf8_strdown@plt>
   23c58:	mov	r5, r0
   23c5c:	ldr	r0, [r6]
   23c60:	cmp	r0, #0
   23c64:	beq	23c6c <g_unichar_xdigit_value@plt+0xfe08>
   23c68:	bl	133f0 <g_object_ref@plt>
   23c6c:	ldr	r1, [pc, #1672]	; 242fc <g_unichar_xdigit_value@plt+0x10498>
   23c70:	mov	r4, r0
   23c74:	mov	r0, r5
   23c78:	add	r1, pc, r1
   23c7c:	bl	13e58 <g_strcmp0@plt>
   23c80:	cmp	r0, #0
   23c84:	bne	23cd8 <g_unichar_xdigit_value@plt+0xfe74>
   23c88:	cmp	r7, #1
   23c8c:	ble	23d38 <g_unichar_xdigit_value@plt+0xfed4>
   23c90:	ldr	r0, [r6, #4]
   23c94:	bl	24ca0 <g_unichar_xdigit_value@plt+0x10e3c>
   23c98:	cmp	r0, #0
   23c9c:	sbcs	r3, r1, #0
   23ca0:	blt	23dc0 <g_unichar_xdigit_value@plt+0xff5c>
   23ca4:	mov	r2, r0
   23ca8:	mov	r3, r1
   23cac:	mov	r0, r4
   23cb0:	bl	26a30 <g_unichar_xdigit_value@plt+0x12bcc>
   23cb4:	cmp	r4, #0
   23cb8:	mov	r6, r0
   23cbc:	beq	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23cc0:	mov	r0, r4
   23cc4:	bl	13b94 <g_object_unref@plt>
   23cc8:	mov	r0, r5
   23ccc:	bl	1399c <g_free@plt>
   23cd0:	mov	r0, r6
   23cd4:	pop	{r4, r5, r6, r7, r8, pc}
   23cd8:	ldr	r1, [pc, #1568]	; 24300 <g_unichar_xdigit_value@plt+0x1049c>
   23cdc:	mov	r0, r5
   23ce0:	add	r1, pc, r1
   23ce4:	bl	13e58 <g_strcmp0@plt>
   23ce8:	cmp	r0, #0
   23cec:	beq	23d20 <g_unichar_xdigit_value@plt+0xfebc>
   23cf0:	ldr	r1, [pc, #1548]	; 24304 <g_unichar_xdigit_value@plt+0x104a0>
   23cf4:	mov	r0, r5
   23cf8:	add	r1, pc, r1
   23cfc:	bl	13e58 <g_strcmp0@plt>
   23d00:	cmp	r0, #0
   23d04:	bne	23d78 <g_unichar_xdigit_value@plt+0xff14>
   23d08:	mov	r0, r4
   23d0c:	bl	261f0 <g_unichar_xdigit_value@plt+0x1238c>
   23d10:	cmp	r4, #0
   23d14:	mov	r6, r0
   23d18:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23d1c:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23d20:	mov	r0, r4
   23d24:	bl	263ec <g_unichar_xdigit_value@plt+0x12588>
   23d28:	cmp	r4, #0
   23d2c:	mov	r6, r0
   23d30:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23d34:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23d38:	mov	r0, r4
   23d3c:	mov	r2, #10
   23d40:	mov	r3, #0
   23d44:	bl	26a30 <g_unichar_xdigit_value@plt+0x12bcc>
   23d48:	cmp	r4, #0
   23d4c:	mov	r6, r0
   23d50:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23d54:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23d58:	ldr	r1, [pc, #1448]	; 24308 <g_unichar_xdigit_value@plt+0x104a4>
   23d5c:	ldr	r2, [pc, #1448]	; 2430c <g_unichar_xdigit_value@plt+0x104a8>
   23d60:	add	r1, pc, r1
   23d64:	add	r2, pc, r2
   23d68:	add	r1, r1, #548	; 0x224
   23d6c:	bl	13450 <g_return_if_fail_warning@plt>
   23d70:	mov	r0, r4
   23d74:	pop	{r4, r5, r6, r7, r8, pc}
   23d78:	ldr	r1, [pc, #1424]	; 24310 <g_unichar_xdigit_value@plt+0x104ac>
   23d7c:	mov	r0, r5
   23d80:	add	r1, pc, r1
   23d84:	bl	13e58 <g_strcmp0@plt>
   23d88:	cmp	r0, #0
   23d8c:	beq	23de0 <g_unichar_xdigit_value@plt+0xff7c>
   23d90:	ldr	r1, [pc, #1404]	; 24314 <g_unichar_xdigit_value@plt+0x104b0>
   23d94:	mov	r0, r5
   23d98:	add	r1, pc, r1
   23d9c:	bl	13e58 <g_strcmp0@plt>
   23da0:	cmp	r0, #0
   23da4:	bne	23df8 <g_unichar_xdigit_value@plt+0xff94>
   23da8:	mov	r0, r4
   23dac:	bl	2564c <g_unichar_xdigit_value@plt+0x117e8>
   23db0:	cmp	r4, #0
   23db4:	mov	r6, r0
   23db8:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23dbc:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23dc0:	cmp	r4, #0
   23dc4:	beq	23dd0 <g_unichar_xdigit_value@plt+0xff6c>
   23dc8:	mov	r0, r4
   23dcc:	bl	13b94 <g_object_unref@plt>
   23dd0:	mov	r0, r5
   23dd4:	bl	1399c <g_free@plt>
   23dd8:	mov	r0, #0
   23ddc:	pop	{r4, r5, r6, r7, r8, pc}
   23de0:	mov	r0, r4
   23de4:	bl	259a4 <g_unichar_xdigit_value@plt+0x11b40>
   23de8:	cmp	r4, #0
   23dec:	mov	r6, r0
   23df0:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23df4:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23df8:	ldr	r1, [pc, #1304]	; 24318 <g_unichar_xdigit_value@plt+0x104b4>
   23dfc:	mov	r0, r5
   23e00:	add	r1, pc, r1
   23e04:	bl	13e58 <g_strcmp0@plt>
   23e08:	cmp	r0, #0
   23e0c:	bne	23e2c <g_unichar_xdigit_value@plt+0xffc8>
   23e10:	ldr	r1, [r8, #20]
   23e14:	mov	r0, r4
   23e18:	bl	25a08 <g_unichar_xdigit_value@plt+0x11ba4>
   23e1c:	cmp	r4, #0
   23e20:	mov	r6, r0
   23e24:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23e28:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23e2c:	ldr	r1, [pc, #1256]	; 2431c <g_unichar_xdigit_value@plt+0x104b8>
   23e30:	mov	r0, r5
   23e34:	add	r1, pc, r1
   23e38:	bl	13e58 <g_strcmp0@plt>
   23e3c:	cmp	r0, #0
   23e40:	bne	23e5c <g_unichar_xdigit_value@plt+0xfff8>
   23e44:	mov	r0, r4
   23e48:	bl	25b04 <g_unichar_xdigit_value@plt+0x11ca0>
   23e4c:	cmp	r4, #0
   23e50:	mov	r6, r0
   23e54:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23e58:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23e5c:	ldr	r1, [pc, #1212]	; 24320 <g_unichar_xdigit_value@plt+0x104bc>
   23e60:	mov	r0, r5
   23e64:	add	r1, pc, r1
   23e68:	bl	13e58 <g_strcmp0@plt>
   23e6c:	cmp	r0, #0
   23e70:	bne	23e8c <g_unichar_xdigit_value@plt+0x10028>
   23e74:	mov	r0, r4
   23e78:	bl	25c04 <g_unichar_xdigit_value@plt+0x11da0>
   23e7c:	cmp	r4, #0
   23e80:	mov	r6, r0
   23e84:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23e88:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23e8c:	ldr	r1, [pc, #1168]	; 24324 <g_unichar_xdigit_value@plt+0x104c0>
   23e90:	mov	r0, r5
   23e94:	add	r1, pc, r1
   23e98:	bl	13e58 <g_strcmp0@plt>
   23e9c:	cmp	r0, #0
   23ea0:	bne	23ebc <g_unichar_xdigit_value@plt+0x10058>
   23ea4:	mov	r0, r4
   23ea8:	bl	25c68 <g_unichar_xdigit_value@plt+0x11e04>
   23eac:	cmp	r4, #0
   23eb0:	mov	r6, r0
   23eb4:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23eb8:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23ebc:	ldr	r1, [pc, #1124]	; 24328 <g_unichar_xdigit_value@plt+0x104c4>
   23ec0:	mov	r0, r5
   23ec4:	add	r1, pc, r1
   23ec8:	bl	13e58 <g_strcmp0@plt>
   23ecc:	cmp	r0, #0
   23ed0:	bne	23eec <g_unichar_xdigit_value@plt+0x10088>
   23ed4:	mov	r0, r4
   23ed8:	bl	25ccc <g_unichar_xdigit_value@plt+0x11e68>
   23edc:	cmp	r4, #0
   23ee0:	mov	r6, r0
   23ee4:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23ee8:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23eec:	ldr	r1, [pc, #1080]	; 2432c <g_unichar_xdigit_value@plt+0x104c8>
   23ef0:	mov	r0, r5
   23ef4:	add	r1, pc, r1
   23ef8:	bl	13e58 <g_strcmp0@plt>
   23efc:	cmp	r0, #0
   23f00:	bne	23f1c <g_unichar_xdigit_value@plt+0x100b8>
   23f04:	mov	r0, r4
   23f08:	bl	25d30 <g_unichar_xdigit_value@plt+0x11ecc>
   23f0c:	cmp	r4, #0
   23f10:	mov	r6, r0
   23f14:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23f18:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23f1c:	ldr	r1, [pc, #1036]	; 24330 <g_unichar_xdigit_value@plt+0x104cc>
   23f20:	mov	r0, r5
   23f24:	add	r1, pc, r1
   23f28:	bl	13e58 <g_strcmp0@plt>
   23f2c:	cmp	r0, #0
   23f30:	bne	23f4c <g_unichar_xdigit_value@plt+0x100e8>
   23f34:	mov	r0, r4
   23f38:	bl	25d94 <g_unichar_xdigit_value@plt+0x11f30>
   23f3c:	cmp	r4, #0
   23f40:	mov	r6, r0
   23f44:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23f48:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23f4c:	ldr	r1, [pc, #992]	; 24334 <g_unichar_xdigit_value@plt+0x104d0>
   23f50:	mov	r0, r5
   23f54:	add	r1, pc, r1
   23f58:	bl	13e58 <g_strcmp0@plt>
   23f5c:	cmp	r0, #0
   23f60:	bne	23f7c <g_unichar_xdigit_value@plt+0x10118>
   23f64:	mov	r0, r4
   23f68:	bl	25b58 <g_unichar_xdigit_value@plt+0x11cf4>
   23f6c:	cmp	r4, #0
   23f70:	mov	r6, r0
   23f74:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23f78:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23f7c:	ldr	r1, [pc, #948]	; 24338 <g_unichar_xdigit_value@plt+0x104d4>
   23f80:	mov	r0, r5
   23f84:	add	r1, pc, r1
   23f88:	bl	13e58 <g_strcmp0@plt>
   23f8c:	cmp	r0, #0
   23f90:	bne	23fac <g_unichar_xdigit_value@plt+0x10148>
   23f94:	mov	r0, r4
   23f98:	bl	25bac <g_unichar_xdigit_value@plt+0x11d48>
   23f9c:	cmp	r4, #0
   23fa0:	mov	r6, r0
   23fa4:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23fa8:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23fac:	ldr	r1, [pc, #904]	; 2433c <g_unichar_xdigit_value@plt+0x104d8>
   23fb0:	mov	r0, r5
   23fb4:	add	r1, pc, r1
   23fb8:	bl	13e58 <g_strcmp0@plt>
   23fbc:	cmp	r0, #0
   23fc0:	bne	23fe0 <g_unichar_xdigit_value@plt+0x1017c>
   23fc4:	ldr	r1, [r8, #20]
   23fc8:	mov	r0, r4
   23fcc:	bl	275d0 <g_unichar_xdigit_value@plt+0x1376c>
   23fd0:	cmp	r4, #0
   23fd4:	mov	r6, r0
   23fd8:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   23fdc:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   23fe0:	ldr	r1, [pc, #856]	; 24340 <g_unichar_xdigit_value@plt+0x104dc>
   23fe4:	mov	r0, r5
   23fe8:	add	r1, pc, r1
   23fec:	bl	13e58 <g_strcmp0@plt>
   23ff0:	cmp	r0, #0
   23ff4:	bne	24014 <g_unichar_xdigit_value@plt+0x101b0>
   23ff8:	ldr	r1, [r8, #20]
   23ffc:	mov	r0, r4
   24000:	bl	2765c <g_unichar_xdigit_value@plt+0x137f8>
   24004:	cmp	r4, #0
   24008:	mov	r6, r0
   2400c:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   24010:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   24014:	ldr	r1, [pc, #808]	; 24344 <g_unichar_xdigit_value@plt+0x104e0>
   24018:	mov	r0, r5
   2401c:	add	r1, pc, r1
   24020:	bl	13e58 <g_strcmp0@plt>
   24024:	cmp	r0, #0
   24028:	bne	24048 <g_unichar_xdigit_value@plt+0x101e4>
   2402c:	ldr	r1, [r8, #20]
   24030:	mov	r0, r4
   24034:	bl	27808 <g_unichar_xdigit_value@plt+0x139a4>
   24038:	cmp	r4, #0
   2403c:	mov	r6, r0
   24040:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   24044:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   24048:	ldr	r1, [pc, #760]	; 24348 <g_unichar_xdigit_value@plt+0x104e4>
   2404c:	mov	r0, r5
   24050:	add	r1, pc, r1
   24054:	bl	13e58 <g_strcmp0@plt>
   24058:	cmp	r0, #0
   2405c:	bne	2407c <g_unichar_xdigit_value@plt+0x10218>
   24060:	ldr	r1, [r8, #20]
   24064:	mov	r0, r4
   24068:	bl	27998 <g_unichar_xdigit_value@plt+0x13b34>
   2406c:	cmp	r4, #0
   24070:	mov	r6, r0
   24074:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   24078:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   2407c:	ldr	r1, [pc, #712]	; 2434c <g_unichar_xdigit_value@plt+0x104e8>
   24080:	mov	r0, r5
   24084:	add	r1, pc, r1
   24088:	bl	13e58 <g_strcmp0@plt>
   2408c:	cmp	r0, #0
   24090:	beq	24060 <g_unichar_xdigit_value@plt+0x101fc>
   24094:	ldr	r1, [pc, #692]	; 24350 <g_unichar_xdigit_value@plt+0x104ec>
   24098:	mov	r0, r5
   2409c:	add	r1, pc, r1
   240a0:	bl	13e58 <g_strcmp0@plt>
   240a4:	cmp	r0, #0
   240a8:	bne	240c8 <g_unichar_xdigit_value@plt+0x10264>
   240ac:	ldr	r1, [r8, #20]
   240b0:	mov	r0, r4
   240b4:	bl	27ad8 <g_unichar_xdigit_value@plt+0x13c74>
   240b8:	cmp	r4, #0
   240bc:	mov	r6, r0
   240c0:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   240c4:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   240c8:	ldr	r1, [pc, #644]	; 24354 <g_unichar_xdigit_value@plt+0x104f0>
   240cc:	mov	r0, r5
   240d0:	add	r1, pc, r1
   240d4:	bl	13e58 <g_strcmp0@plt>
   240d8:	cmp	r0, #0
   240dc:	beq	240ac <g_unichar_xdigit_value@plt+0x10248>
   240e0:	ldr	r1, [pc, #624]	; 24358 <g_unichar_xdigit_value@plt+0x104f4>
   240e4:	mov	r0, r5
   240e8:	add	r1, pc, r1
   240ec:	bl	13e58 <g_strcmp0@plt>
   240f0:	cmp	r0, #0
   240f4:	bne	24114 <g_unichar_xdigit_value@plt+0x102b0>
   240f8:	ldr	r1, [r8, #20]
   240fc:	mov	r0, r4
   24100:	bl	27c18 <g_unichar_xdigit_value@plt+0x13db4>
   24104:	cmp	r4, #0
   24108:	mov	r6, r0
   2410c:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   24110:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   24114:	ldr	r1, [pc, #576]	; 2435c <g_unichar_xdigit_value@plt+0x104f8>
   24118:	mov	r0, r5
   2411c:	add	r1, pc, r1
   24120:	bl	13e58 <g_strcmp0@plt>
   24124:	cmp	r0, #0
   24128:	beq	240f8 <g_unichar_xdigit_value@plt+0x10294>
   2412c:	ldr	r1, [pc, #556]	; 24360 <g_unichar_xdigit_value@plt+0x104fc>
   24130:	mov	r0, r5
   24134:	add	r1, pc, r1
   24138:	bl	13e58 <g_strcmp0@plt>
   2413c:	cmp	r0, #0
   24140:	bne	2415c <g_unichar_xdigit_value@plt+0x102f8>
   24144:	mov	r0, r4
   24148:	bl	27c9c <g_unichar_xdigit_value@plt+0x13e38>
   2414c:	cmp	r4, #0
   24150:	mov	r6, r0
   24154:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   24158:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   2415c:	ldr	r1, [pc, #512]	; 24364 <g_unichar_xdigit_value@plt+0x10500>
   24160:	mov	r0, r5
   24164:	add	r1, pc, r1
   24168:	bl	13e58 <g_strcmp0@plt>
   2416c:	cmp	r0, #0
   24170:	bne	2418c <g_unichar_xdigit_value@plt+0x10328>
   24174:	mov	r0, r4
   24178:	bl	27cf0 <g_unichar_xdigit_value@plt+0x13e8c>
   2417c:	cmp	r4, #0
   24180:	mov	r6, r0
   24184:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   24188:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   2418c:	ldr	r1, [pc, #468]	; 24368 <g_unichar_xdigit_value@plt+0x10504>
   24190:	mov	r0, r5
   24194:	add	r1, pc, r1
   24198:	bl	13e58 <g_strcmp0@plt>
   2419c:	cmp	r0, #0
   241a0:	bne	241bc <g_unichar_xdigit_value@plt+0x10358>
   241a4:	mov	r0, r4
   241a8:	bl	27d48 <g_unichar_xdigit_value@plt+0x13ee4>
   241ac:	cmp	r4, #0
   241b0:	mov	r6, r0
   241b4:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   241b8:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   241bc:	ldr	r1, [pc, #424]	; 2436c <g_unichar_xdigit_value@plt+0x10508>
   241c0:	mov	r0, r5
   241c4:	add	r1, pc, r1
   241c8:	bl	13e58 <g_strcmp0@plt>
   241cc:	cmp	r0, #0
   241d0:	bne	241ec <g_unichar_xdigit_value@plt+0x10388>
   241d4:	mov	r0, r4
   241d8:	bl	27da0 <g_unichar_xdigit_value@plt+0x13f3c>
   241dc:	cmp	r4, #0
   241e0:	mov	r6, r0
   241e4:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   241e8:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   241ec:	ldr	r1, [pc, #380]	; 24370 <g_unichar_xdigit_value@plt+0x1050c>
   241f0:	mov	r0, r5
   241f4:	add	r1, pc, r1
   241f8:	bl	13e58 <g_strcmp0@plt>
   241fc:	cmp	r0, #0
   24200:	beq	241d4 <g_unichar_xdigit_value@plt+0x10370>
   24204:	ldr	r1, [pc, #360]	; 24374 <g_unichar_xdigit_value@plt+0x10510>
   24208:	mov	r0, r5
   2420c:	add	r1, pc, r1
   24210:	bl	13e58 <g_strcmp0@plt>
   24214:	cmp	r0, #0
   24218:	bne	24234 <g_unichar_xdigit_value@plt+0x103d0>
   2421c:	mov	r0, r4
   24220:	bl	27df8 <g_unichar_xdigit_value@plt+0x13f94>
   24224:	cmp	r4, #0
   24228:	mov	r6, r0
   2422c:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   24230:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   24234:	ldr	r1, [pc, #316]	; 24378 <g_unichar_xdigit_value@plt+0x10514>
   24238:	mov	r0, r5
   2423c:	add	r1, pc, r1
   24240:	bl	13e58 <g_strcmp0@plt>
   24244:	cmp	r0, #0
   24248:	beq	2421c <g_unichar_xdigit_value@plt+0x103b8>
   2424c:	ldr	r1, [pc, #296]	; 2437c <g_unichar_xdigit_value@plt+0x10518>
   24250:	mov	r0, r5
   24254:	add	r1, pc, r1
   24258:	bl	13e58 <g_strcmp0@plt>
   2425c:	cmp	r0, #0
   24260:	bne	2427c <g_unichar_xdigit_value@plt+0x10418>
   24264:	mov	r0, r4
   24268:	bl	27ee8 <g_unichar_xdigit_value@plt+0x14084>
   2426c:	cmp	r4, #0
   24270:	mov	r6, r0
   24274:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   24278:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   2427c:	ldr	r1, [pc, #252]	; 24380 <g_unichar_xdigit_value@plt+0x1051c>
   24280:	mov	r0, r5
   24284:	add	r1, pc, r1
   24288:	bl	13e58 <g_strcmp0@plt>
   2428c:	cmp	r0, #0
   24290:	beq	24264 <g_unichar_xdigit_value@plt+0x10400>
   24294:	ldr	r1, [pc, #232]	; 24384 <g_unichar_xdigit_value@plt+0x10520>
   24298:	mov	r0, r5
   2429c:	add	r1, pc, r1
   242a0:	bl	13e58 <g_strcmp0@plt>
   242a4:	cmp	r0, #0
   242a8:	bne	242c8 <g_unichar_xdigit_value@plt+0x10464>
   242ac:	ldr	r1, [r8, #16]
   242b0:	mov	r0, r4
   242b4:	bl	290b4 <g_unichar_xdigit_value@plt+0x15250>
   242b8:	cmp	r4, #0
   242bc:	mov	r6, r0
   242c0:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   242c4:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   242c8:	ldr	r1, [pc, #184]	; 24388 <g_unichar_xdigit_value@plt+0x10524>
   242cc:	mov	r0, r5
   242d0:	add	r1, pc, r1
   242d4:	bl	13e58 <g_strcmp0@plt>
   242d8:	cmp	r0, #0
   242dc:	bne	23dc0 <g_unichar_xdigit_value@plt+0xff5c>
   242e0:	ldr	r1, [r8, #16]
   242e4:	mov	r0, r4
   242e8:	bl	29170 <g_unichar_xdigit_value@plt+0x1530c>
   242ec:	cmp	r4, #0
   242f0:	mov	r6, r0
   242f4:	bne	23cc0 <g_unichar_xdigit_value@plt+0xfe5c>
   242f8:	b	23cc8 <g_unichar_xdigit_value@plt+0xfe64>
   242fc:	andeq	r5, r1, r4, lsr #29
   24300:	andeq	r5, r1, ip, asr #28
   24304:	andeq	r5, r1, ip, asr #28
   24308:	andeq	r6, r1, r4, asr #2
   2430c:	andeq	r7, r1, ip, ror #16
   24310:	ldrdeq	r5, [r1], -r8
   24314:	ldrdeq	r5, [r1], -r4
   24318:	andeq	r5, r1, r8, ror sp
   2431c:	andeq	r5, r1, r4, asr sp
   24320:	andeq	r5, r1, r8, lsr sp
   24324:	andeq	r5, r1, r4, lsl sp
   24328:	strdeq	r5, [r1], -r8
   2432c:	ldrdeq	r5, [r1], -r8
   24330:			; <UNDEFINED> instruction: 0x00015cb8
   24334:	andeq	r7, r1, r8, ror #31
   24338:	andeq	r5, r1, r0, ror ip
   2433c:	andeq	r5, r1, r0, asr ip
   24340:	andeq	r5, r1, r8, lsr #24
   24344:	andeq	r5, r1, r0, lsl #24
   24348:	andeq	r5, r1, r4, lsl ip
   2434c:	andeq	r5, r1, r4, lsr #23
   24350:	andeq	r5, r1, r4, ror #23
   24354:	andeq	r5, r1, ip, ror #22
   24358:			; <UNDEFINED> instruction: 0x00015bb4
   2435c:	andeq	r5, r1, r4, lsr fp
   24360:	andeq	r5, r1, r4, lsl #23
   24364:	andeq	r5, r1, ip, ror #22
   24368:	andeq	r5, r1, r8, asr fp
   2436c:	andeq	r5, r1, r4, asr #22
   24370:	andeq	r5, r1, ip, ror fp
   24374:	andeq	r5, r1, ip, lsl fp
   24378:	andeq	r5, r1, r4, asr fp
   2437c:	strdeq	r5, [r1], -r8
   24380:	andeq	r5, r1, r0, lsr fp
   24384:	andeq	r5, r1, ip, lsr fp
   24388:	andeq	r5, r1, r4, lsr #22
   2438c:	push	{r4, r5, r6, lr}
   24390:	mov	r6, r1
   24394:	mov	r5, r2
   24398:	mov	r4, r3
   2439c:	bl	22b80 <g_unichar_xdigit_value@plt+0xed1c>
   243a0:	mov	r1, r6
   243a4:	mov	r2, r5
   243a8:	mov	r3, r4
   243ac:	pop	{r4, r5, r6, lr}
   243b0:	b	23c38 <g_unichar_xdigit_value@plt+0xfdd4>
   243b4:	andeq	r0, r0, r0
   243b8:	and	r0, r0, r1
   243bc:	bx	lr
   243c0:	orr	r0, r0, r1
   243c4:	bx	lr
   243c8:	eor	r0, r0, r1
   243cc:	bx	lr
   243d0:	eor	r0, r0, #15
   243d4:	bx	lr
   243d8:	eor	r0, r0, r1
   243dc:	bx	lr
   243e0:	push	{r3, r4, r5, r6, r7, lr}
   243e4:	subs	r7, r0, #0
   243e8:	mov	r4, r1
   243ec:	mov	r5, r2
   243f0:	beq	244c4 <g_unichar_xdigit_value@plt+0x10660>
   243f4:	cmp	r1, #0
   243f8:	blt	24498 <g_unichar_xdigit_value@plt+0x10634>
   243fc:	cmp	r5, #0
   24400:	blt	24444 <g_unichar_xdigit_value@plt+0x105e0>
   24404:	add	r6, r4, r5
   24408:	mov	r1, #0
   2440c:	mov	r2, r6
   24410:	bl	13d08 <memchr@plt>
   24414:	cmp	r0, #0
   24418:	rsbne	r6, r7, r0
   2441c:	cmp	r4, r6
   24420:	ble	24454 <g_unichar_xdigit_value@plt+0x105f0>
   24424:	ldr	r1, [pc, #180]	; 244e0 <g_unichar_xdigit_value@plt+0x1067c>
   24428:	mov	r0, #0
   2442c:	ldr	r2, [pc, #176]	; 244e4 <g_unichar_xdigit_value@plt+0x10680>
   24430:	add	r1, pc, r1
   24434:	add	r2, pc, r2
   24438:	bl	13450 <g_return_if_fail_warning@plt>
   2443c:	mov	r0, #0
   24440:	pop	{r3, r4, r5, r6, r7, pc}
   24444:	bl	13ba0 <strlen@plt>
   24448:	mov	r6, r0
   2444c:	cmp	r4, r6
   24450:	bgt	24424 <g_unichar_xdigit_value@plt+0x105c0>
   24454:	cmp	r5, #0
   24458:	rsblt	r5, r4, r6
   2445c:	add	r3, r4, r5
   24460:	cmp	r3, r6
   24464:	bgt	24478 <g_unichar_xdigit_value@plt+0x10614>
   24468:	add	r0, r7, r4
   2446c:	mov	r1, r5
   24470:	pop	{r3, r4, r5, r6, r7, lr}
   24474:	b	134a4 <g_strndup@plt>
   24478:	ldr	r1, [pc, #104]	; 244e8 <g_unichar_xdigit_value@plt+0x10684>
   2447c:	mov	r0, #0
   24480:	ldr	r2, [pc, #100]	; 244ec <g_unichar_xdigit_value@plt+0x10688>
   24484:	add	r1, pc, r1
   24488:	add	r2, pc, r2
   2448c:	bl	13450 <g_return_if_fail_warning@plt>
   24490:	mov	r0, #0
   24494:	pop	{r3, r4, r5, r6, r7, pc}
   24498:	bl	13ba0 <strlen@plt>
   2449c:	adds	r4, r4, r0
   244a0:	mov	r6, r0
   244a4:	bpl	24454 <g_unichar_xdigit_value@plt+0x105f0>
   244a8:	ldr	r1, [pc, #64]	; 244f0 <g_unichar_xdigit_value@plt+0x1068c>
   244ac:	mov	r0, #0
   244b0:	ldr	r2, [pc, #60]	; 244f4 <g_unichar_xdigit_value@plt+0x10690>
   244b4:	add	r1, pc, r1
   244b8:	add	r2, pc, r2
   244bc:	bl	13450 <g_return_if_fail_warning@plt>
   244c0:	b	2443c <g_unichar_xdigit_value@plt+0x105d8>
   244c4:	ldr	r1, [pc, #44]	; 244f8 <g_unichar_xdigit_value@plt+0x10694>
   244c8:	ldr	r2, [pc, #44]	; 244fc <g_unichar_xdigit_value@plt+0x10698>
   244cc:	add	r1, pc, r1
   244d0:	add	r2, pc, r2
   244d4:	bl	13450 <g_return_if_fail_warning@plt>
   244d8:	mov	r0, #0
   244dc:	pop	{r3, r4, r5, r6, r7, pc}
   244e0:	andeq	r5, r1, r0, lsr #27
   244e4:	andeq	r5, r1, r0, lsl #3
   244e8:	andeq	r5, r1, ip, asr #26
   244ec:	andeq	r5, r1, r0, asr #2
   244f0:	andeq	r5, r1, ip, lsl sp
   244f4:	andeq	r5, r1, r4, ror #1
   244f8:	andeq	r5, r1, r4, lsl #26
   244fc:	andeq	r3, r1, r4, lsl ip
   24500:	push	{r4, lr}
   24504:	mov	r4, r0
   24508:	bl	13c60 <g_type_class_peek_parent@plt>
   2450c:	ldr	r3, [pc, #92]	; 24570 <g_unichar_xdigit_value@plt+0x1070c>
   24510:	mov	r1, #32
   24514:	add	r3, pc, r3
   24518:	str	r0, [r3]
   2451c:	mov	r0, r4
   24520:	bl	13a5c <g_type_class_add_private@plt>
   24524:	mov	r1, #80	; 0x50
   24528:	mov	r0, r4
   2452c:	bl	13db0 <g_type_check_class_cast@plt>
   24530:	ldr	r3, [pc, #60]	; 24574 <g_unichar_xdigit_value@plt+0x10710>
   24534:	mov	r1, #80	; 0x50
   24538:	add	r3, pc, r3
   2453c:	str	r3, [r0, #16]
   24540:	mov	r0, r4
   24544:	bl	13db0 <g_type_check_class_cast@plt>
   24548:	ldr	r3, [pc, #40]	; 24578 <g_unichar_xdigit_value@plt+0x10714>
   2454c:	mov	r1, #80	; 0x50
   24550:	add	r3, pc, r3
   24554:	str	r3, [r0, #12]
   24558:	mov	r0, r4
   2455c:	bl	13db0 <g_type_check_class_cast@plt>
   24560:	ldr	r3, [pc, #20]	; 2457c <g_unichar_xdigit_value@plt+0x10718>
   24564:	add	r3, pc, r3
   24568:	str	r3, [r0, #24]
   2456c:	pop	{r4, pc}
   24570:	andeq	sp, r2, r8, rrx
   24574:	strdeq	r3, [r0], -r0
   24578:	andeq	r3, r0, r4, asr #22
   2457c:	andeq	r3, r0, r8, ror #21
   24580:	ldr	r1, [pc, #32]	; 245a8 <g_unichar_xdigit_value@plt+0x10744>
   24584:	mov	r0, #0
   24588:	ldr	r2, [pc, #28]	; 245ac <g_unichar_xdigit_value@plt+0x10748>
   2458c:	add	r1, pc, r1
   24590:	push	{r3, lr}
   24594:	add	r2, pc, r2
   24598:	add	r1, r1, #20
   2459c:	bl	13450 <g_return_if_fail_warning@plt>
   245a0:	mov	r0, #0
   245a4:	pop	{r3, pc}
   245a8:	andeq	r5, r1, r4, asr #24
   245ac:	andeq	r3, r1, r0, asr fp
   245b0:	push	{r4, lr}
   245b4:	subs	r4, r0, #0
   245b8:	beq	245f8 <g_unichar_xdigit_value@plt+0x10794>
   245bc:	sub	r0, r1, #48	; 0x30
   245c0:	uxtb	r3, r0
   245c4:	cmp	r3, #9
   245c8:	bhi	245d0 <g_unichar_xdigit_value@plt+0x1076c>
   245cc:	pop	{r4, pc}
   245d0:	sub	r3, r1, #65	; 0x41
   245d4:	cmp	r3, #5
   245d8:	bhi	245e4 <g_unichar_xdigit_value@plt+0x10780>
   245dc:	sub	r0, r1, #55	; 0x37
   245e0:	pop	{r4, pc}
   245e4:	sub	r3, r1, #97	; 0x61
   245e8:	cmp	r3, #5
   245ec:	subls	r0, r1, #87	; 0x57
   245f0:	movhi	r0, #0
   245f4:	pop	{r4, pc}
   245f8:	ldr	r1, [pc, #24]	; 24618 <g_unichar_xdigit_value@plt+0x107b4>
   245fc:	ldr	r2, [pc, #24]	; 2461c <g_unichar_xdigit_value@plt+0x107b8>
   24600:	add	r1, pc, r1
   24604:	add	r2, pc, r2
   24608:	add	r1, r1, #32
   2460c:	bl	13450 <g_return_if_fail_warning@plt>
   24610:	mov	r0, r4
   24614:	pop	{r4, pc}
   24618:	ldrdeq	r5, [r1], -r0
   2461c:	andeq	r3, r1, r0, ror #21
   24620:	push	{r3, r4, r5, lr}
   24624:	subs	r5, r0, #0
   24628:	beq	24668 <g_unichar_xdigit_value@plt+0x10804>
   2462c:	mov	r1, #16
   24630:	mov	r2, #0
   24634:	mov	r0, #1
   24638:	bl	2b080 <g_unichar_xdigit_value@plt+0x1721c>
   2463c:	mov	r1, r5
   24640:	mov	r4, r0
   24644:	bl	2adfc <g_unichar_xdigit_value@plt+0x16f98>
   24648:	cmp	r4, #0
   2464c:	mov	r5, r0
   24650:	beq	24664 <g_unichar_xdigit_value@plt+0x10800>
   24654:	mov	r0, r4
   24658:	bl	13b94 <g_object_unref@plt>
   2465c:	mov	r0, r5
   24660:	pop	{r3, r4, r5, pc}
   24664:	pop	{r3, r4, r5, pc}
   24668:	ldr	r1, [pc, #24]	; 24688 <g_unichar_xdigit_value@plt+0x10824>
   2466c:	ldr	r2, [pc, #24]	; 2468c <g_unichar_xdigit_value@plt+0x10828>
   24670:	add	r1, pc, r1
   24674:	add	r2, pc, r2
   24678:	add	r1, r1, #52	; 0x34
   2467c:	bl	13450 <g_return_if_fail_warning@plt>
   24680:	mov	r0, r5
   24684:	pop	{r3, r4, r5, pc}
   24688:	andeq	r5, r1, r0, ror #22
   2468c:	andeq	r3, r1, r0, ror sl
   24690:	push	{r4, lr}
   24694:	subs	r4, r0, #0
   24698:	beq	246bc <g_unichar_xdigit_value@plt+0x10858>
   2469c:	add	r0, r4, r2
   246a0:	mov	r2, r1
   246a4:	mvn	r1, #0
   246a8:	bl	13dbc <g_utf8_strchr@plt>
   246ac:	cmp	r0, #0
   246b0:	beq	246dc <g_unichar_xdigit_value@plt+0x10878>
   246b4:	rsb	r0, r4, r0
   246b8:	pop	{r4, pc}
   246bc:	ldr	r1, [pc, #32]	; 246e4 <g_unichar_xdigit_value@plt+0x10880>
   246c0:	ldr	r2, [pc, #32]	; 246e8 <g_unichar_xdigit_value@plt+0x10884>
   246c4:	add	r1, pc, r1
   246c8:	add	r2, pc, r2
   246cc:	add	r1, r1, #76	; 0x4c
   246d0:	bl	13450 <g_return_if_fail_warning@plt>
   246d4:	mov	r0, r4
   246d8:	pop	{r4, pc}
   246dc:	mvn	r0, #0
   246e0:	pop	{r4, pc}
   246e4:	andeq	r5, r1, ip, lsl #22
   246e8:	andeq	r3, r1, ip, lsl sl
   246ec:	push	{r4, r5, r6, r7, r8, lr}
   246f0:	subs	r6, r0, #0
   246f4:	ldr	r7, [pc, #144]	; 2478c <g_unichar_xdigit_value@plt+0x10928>
   246f8:	mov	r8, r1
   246fc:	mov	r4, r2
   24700:	add	r7, pc, r7
   24704:	beq	2475c <g_unichar_xdigit_value@plt+0x108f8>
   24708:	ldr	r5, [r1]
   2470c:	add	r0, r6, r5
   24710:	bl	135e8 <g_utf8_get_char@plt>
   24714:	cmp	r0, #0
   24718:	beq	2474c <g_unichar_xdigit_value@plt+0x108e8>
   2471c:	ldr	r2, [pc, #108]	; 24790 <g_unichar_xdigit_value@plt+0x1092c>
   24720:	cmp	r4, #0
   24724:	ldrb	r3, [r6, r5]
   24728:	ldr	r2, [r7, r2]
   2472c:	ldr	r2, [r2]
   24730:	ldrb	r3, [r2, r3]
   24734:	add	r5, r3, r5
   24738:	str	r5, [r8]
   2473c:	beq	2477c <g_unichar_xdigit_value@plt+0x10918>
   24740:	str	r0, [r4]
   24744:	mov	r0, #1
   24748:	pop	{r4, r5, r6, r7, r8, pc}
   2474c:	cmp	r4, #0
   24750:	beq	24784 <g_unichar_xdigit_value@plt+0x10920>
   24754:	str	r0, [r4]
   24758:	pop	{r4, r5, r6, r7, r8, pc}
   2475c:	ldr	r1, [pc, #48]	; 24794 <g_unichar_xdigit_value@plt+0x10930>
   24760:	ldr	r2, [pc, #48]	; 24798 <g_unichar_xdigit_value@plt+0x10934>
   24764:	add	r1, pc, r1
   24768:	add	r2, pc, r2
   2476c:	add	r1, r1, #100	; 0x64
   24770:	bl	13450 <g_return_if_fail_warning@plt>
   24774:	mov	r0, r6
   24778:	pop	{r4, r5, r6, r7, r8, pc}
   2477c:	mov	r0, #1
   24780:	pop	{r4, r5, r6, r7, r8, pc}
   24784:	mov	r0, r4
   24788:	pop	{r4, r5, r6, r7, r8, pc}
   2478c:	strdeq	ip, [r2], -r8
   24790:	muleq	r0, ip, r3
   24794:	andeq	r5, r1, ip, ror #20
   24798:	andeq	r3, r1, ip, ror r9
   2479c:	push	{r4, r5, r6, lr}
   247a0:	subs	r4, r0, #0
   247a4:	mov	r6, r1
   247a8:	mov	r5, r2
   247ac:	beq	247fc <g_unichar_xdigit_value@plt+0x10998>
   247b0:	ldr	r0, [r1]
   247b4:	cmp	r0, #0
   247b8:	ble	247e8 <g_unichar_xdigit_value@plt+0x10984>
   247bc:	add	r0, r4, r0
   247c0:	bl	138f4 <g_utf8_prev_char@plt>
   247c4:	rsb	r0, r4, r0
   247c8:	str	r0, [r6]
   247cc:	add	r0, r4, r0
   247d0:	bl	135e8 <g_utf8_get_char@plt>
   247d4:	cmp	r5, #0
   247d8:	beq	2481c <g_unichar_xdigit_value@plt+0x109b8>
   247dc:	str	r0, [r5]
   247e0:	mov	r0, #1
   247e4:	pop	{r4, r5, r6, pc}
   247e8:	cmp	r5, #0
   247ec:	beq	24824 <g_unichar_xdigit_value@plt+0x109c0>
   247f0:	mov	r0, #0
   247f4:	str	r0, [r5]
   247f8:	pop	{r4, r5, r6, pc}
   247fc:	ldr	r1, [pc, #40]	; 2482c <g_unichar_xdigit_value@plt+0x109c8>
   24800:	ldr	r2, [pc, #40]	; 24830 <g_unichar_xdigit_value@plt+0x109cc>
   24804:	add	r1, pc, r1
   24808:	add	r2, pc, r2
   2480c:	add	r1, r1, #124	; 0x7c
   24810:	bl	13450 <g_return_if_fail_warning@plt>
   24814:	mov	r0, r4
   24818:	pop	{r4, r5, r6, pc}
   2481c:	mov	r0, #1
   24820:	pop	{r4, r5, r6, pc}
   24824:	mov	r0, r5
   24828:	pop	{r4, r5, r6, pc}
   2482c:	andeq	r5, r1, ip, asr #19
   24830:	ldrdeq	r3, [r1], -ip
   24834:	ldr	r3, [pc, #188]	; 248f8 <g_unichar_xdigit_value@plt+0x10a94>
   24838:	mov	ip, r2
   2483c:	push	{r4, r5, r6, lr}
   24840:	subs	r4, r1, #0
   24844:	ldr	r1, [pc, #176]	; 248fc <g_unichar_xdigit_value@plt+0x10a98>
   24848:	add	r3, pc, r3
   2484c:	sub	sp, sp, #40	; 0x28
   24850:	mov	r6, r0
   24854:	ldr	r5, [r3, r1]
   24858:	ldr	r3, [r5]
   2485c:	str	r3, [sp, #36]	; 0x24
   24860:	beq	248b0 <g_unichar_xdigit_value@plt+0x10a4c>
   24864:	cmp	r2, #0
   24868:	beq	248d4 <g_unichar_xdigit_value@plt+0x10a70>
   2486c:	ldm	r4, {r0, r1, r2, r3}
   24870:	add	lr, sp, #4
   24874:	stm	lr, {r0, r1, r2, r3}
   24878:	ldm	ip, {r0, r1, r2, r3}
   2487c:	add	ip, sp, #20
   24880:	stm	ip, {r0, r1, r2, r3}
   24884:	mov	r1, lr
   24888:	mov	r2, ip
   2488c:	mov	r0, r6
   24890:	mov	r3, #0
   24894:	bl	1351c <mpc_set_fr_fr@plt>
   24898:	ldr	r2, [sp, #36]	; 0x24
   2489c:	ldr	r3, [r5]
   248a0:	cmp	r2, r3
   248a4:	bne	248f4 <g_unichar_xdigit_value@plt+0x10a90>
   248a8:	add	sp, sp, #40	; 0x28
   248ac:	pop	{r4, r5, r6, pc}
   248b0:	ldr	r1, [pc, #72]	; 24900 <g_unichar_xdigit_value@plt+0x10a9c>
   248b4:	mov	r0, r4
   248b8:	ldr	r2, [pc, #68]	; 24904 <g_unichar_xdigit_value@plt+0x10aa0>
   248bc:	add	r1, pc, r1
   248c0:	add	r2, pc, r2
   248c4:	add	r1, r1, #148	; 0x94
   248c8:	bl	13450 <g_return_if_fail_warning@plt>
   248cc:	mov	r0, r4
   248d0:	b	24898 <g_unichar_xdigit_value@plt+0x10a34>
   248d4:	ldm	r4, {r0, r1, r2, r3}
   248d8:	add	lr, sp, #20
   248dc:	stm	lr, {r0, r1, r2, r3}
   248e0:	mov	r1, lr
   248e4:	mov	r0, r6
   248e8:	mov	r2, ip
   248ec:	bl	13d20 <mpc_set_fr@plt>
   248f0:	b	24898 <g_unichar_xdigit_value@plt+0x10a34>
   248f4:	bl	13978 <__stack_chk_fail@plt>
   248f8:			; <UNDEFINED> instruction: 0x0002c7b0
   248fc:	muleq	r0, r0, r3
   24900:	andeq	r5, r1, r4, lsl r9
   24904:	andeq	r5, r1, r8, ror #31
   24908:	ldr	r0, [pc, #96]	; 24970 <g_unichar_xdigit_value@plt+0x10b0c>
   2490c:	push	{r4, lr}
   24910:	add	r0, pc, r0
   24914:	dmb	sy
   24918:	ldr	r3, [r0, #4]
   2491c:	dmb	sy
   24920:	cmp	r3, #0
   24924:	beq	24938 <g_unichar_xdigit_value@plt+0x10ad4>
   24928:	ldr	r3, [pc, #68]	; 24974 <g_unichar_xdigit_value@plt+0x10b10>
   2492c:	add	r3, pc, r3
   24930:	ldr	r0, [r3, #4]
   24934:	pop	{r4, pc}
   24938:	add	r4, r0, #4
   2493c:	mov	r0, r4
   24940:	bl	138ac <g_once_init_enter@plt>
   24944:	cmp	r0, #0
   24948:	beq	24928 <g_unichar_xdigit_value@plt+0x10ac4>
   2494c:	ldr	r0, [pc, #36]	; 24978 <g_unichar_xdigit_value@plt+0x10b14>
   24950:	ldr	r1, [pc, #36]	; 2497c <g_unichar_xdigit_value@plt+0x10b18>
   24954:	add	r0, pc, r0
   24958:	add	r1, pc, r1
   2495c:	bl	13c78 <g_enum_register_static@plt>
   24960:	mov	r1, r0
   24964:	mov	r0, r4
   24968:	bl	13bac <g_once_init_leave@plt>
   2496c:	b	24928 <g_unichar_xdigit_value@plt+0x10ac4>
   24970:	andeq	ip, r2, ip, ror #24
   24974:	andeq	ip, r2, r0, asr ip
   24978:	andeq	r5, r1, r0, ror #30
   2497c:	andeq	ip, r2, ip, ror #1
   24980:	push	{r4, r5, r6, lr}
   24984:	mov	r1, #0
   24988:	mov	r6, r2
   2498c:	ldr	r5, [sp, #16]
   24990:	bl	133e4 <g_object_new@plt>
   24994:	mov	r1, r6
   24998:	mov	r3, #0
   2499c:	mov	r2, r5
   249a0:	mov	r4, r0
   249a4:	ldr	r0, [r0, #12]
   249a8:	bl	134b0 <mpc_set_si_si@plt>
   249ac:	mov	r0, r4
   249b0:	pop	{r4, r5, r6, pc}
   249b4:	push	{r4, r5, r6, lr}
   249b8:	mov	r1, #0
   249bc:	mov	r6, r2
   249c0:	ldr	r5, [sp, #16]
   249c4:	bl	133e4 <g_object_new@plt>
   249c8:	mov	r1, r6
   249cc:	mov	r3, #0
   249d0:	mov	r2, r5
   249d4:	mov	r4, r0
   249d8:	ldr	r0, [r0, #12]
   249dc:	bl	1372c <mpc_set_ui_ui@plt>
   249e0:	mov	r0, r4
   249e4:	pop	{r4, r5, r6, pc}
   249e8:	push	{r4, r5, r6, r7, lr}
   249ec:	sub	sp, sp, #12
   249f0:	ldrd	r4, [sp, #32]
   249f4:	cmp	r4, #0
   249f8:	sbcs	r1, r5, #0
   249fc:	blt	24a40 <g_unichar_xdigit_value@plt+0x10bdc>
   24a00:	mov	r6, #0
   24a04:	mov	r7, #0
   24a08:	strd	r6, [sp]
   24a0c:	bl	24980 <g_unichar_xdigit_value@plt+0x10b1c>
   24a10:	cmp	r5, #0
   24a14:	cmpeq	r4, #1
   24a18:	mov	r6, r0
   24a1c:	beq	24a34 <g_unichar_xdigit_value@plt+0x10bd0>
   24a20:	ldr	r0, [r0, #12]
   24a24:	mov	r2, r4
   24a28:	mov	r3, #0
   24a2c:	mov	r1, r0
   24a30:	bl	13618 <mpc_div_ui@plt>
   24a34:	mov	r0, r6
   24a38:	add	sp, sp, #12
   24a3c:	pop	{r4, r5, r6, r7, pc}
   24a40:	rsbs	r2, r2, #0
   24a44:	rsc	r3, r3, #0
   24a48:	rsbs	r4, r4, #0
   24a4c:	rsc	r5, r5, #0
   24a50:	b	24a00 <g_unichar_xdigit_value@plt+0x10b9c>
   24a54:	ldr	r3, [pc, #144]	; 24aec <g_unichar_xdigit_value@plt+0x10c88>
   24a58:	push	{r4, r5, r6, r7, lr}
   24a5c:	subs	r4, r1, #0
   24a60:	ldr	r1, [pc, #136]	; 24af0 <g_unichar_xdigit_value@plt+0x10c8c>
   24a64:	add	r3, pc, r3
   24a68:	sub	sp, sp, #28
   24a6c:	mov	r7, r2
   24a70:	ldr	r5, [r3, r1]
   24a74:	ldr	r3, [r5]
   24a78:	str	r3, [sp, #20]
   24a7c:	beq	24ac4 <g_unichar_xdigit_value@plt+0x10c60>
   24a80:	mov	r1, #0
   24a84:	bl	133e4 <g_object_new@plt>
   24a88:	add	ip, sp, #4
   24a8c:	mov	r6, r0
   24a90:	ldm	r4, {r0, r1, r2, r3}
   24a94:	stm	ip, {r0, r1, r2, r3}
   24a98:	mov	r1, ip
   24a9c:	mov	r2, r7
   24aa0:	ldr	r0, [r6, #12]
   24aa4:	bl	24834 <g_unichar_xdigit_value@plt+0x109d0>
   24aa8:	mov	r0, r6
   24aac:	ldr	r2, [sp, #20]
   24ab0:	ldr	r3, [r5]
   24ab4:	cmp	r2, r3
   24ab8:	bne	24ae8 <g_unichar_xdigit_value@plt+0x10c84>
   24abc:	add	sp, sp, #28
   24ac0:	pop	{r4, r5, r6, r7, pc}
   24ac4:	ldr	r1, [pc, #40]	; 24af4 <g_unichar_xdigit_value@plt+0x10c90>
   24ac8:	mov	r0, r4
   24acc:	ldr	r2, [pc, #36]	; 24af8 <g_unichar_xdigit_value@plt+0x10c94>
   24ad0:	add	r1, pc, r1
   24ad4:	add	r2, pc, r2
   24ad8:	add	r1, r1, #164	; 0xa4
   24adc:	bl	13450 <g_return_if_fail_warning@plt>
   24ae0:	mov	r0, r4
   24ae4:	b	24aac <g_unichar_xdigit_value@plt+0x10c48>
   24ae8:	bl	13978 <__stack_chk_fail@plt>
   24aec:	muleq	r2, r4, r5
   24af0:	muleq	r0, r0, r3
   24af4:	andeq	r5, r1, r0, lsl #14
   24af8:	andeq	r5, r1, ip, ror #27
   24afc:	push	{r4, lr}
   24b00:	vpush	{d8-d9}
   24b04:	mov	r1, #0
   24b08:	vmov.f64	d9, d0
   24b0c:	vmov.f64	d8, d1
   24b10:	bl	133e4 <g_object_new@plt>
   24b14:	mov	r1, #0
   24b18:	vmov.f64	d0, d9
   24b1c:	vmov.f64	d1, d8
   24b20:	mov	r4, r0
   24b24:	ldr	r0, [r0, #12]
   24b28:	bl	1360c <mpc_set_d_d@plt>
   24b2c:	vpop	{d8-d9}
   24b30:	mov	r0, r4
   24b34:	pop	{r4, pc}
   24b38:	push	{r4, r5, r6, lr}
   24b3c:	subs	r6, r1, #0
   24b40:	mov	r4, r2
   24b44:	beq	24b74 <g_unichar_xdigit_value@plt+0x10d10>
   24b48:	cmp	r2, #0
   24b4c:	beq	24b98 <g_unichar_xdigit_value@plt+0x10d34>
   24b50:	mov	r1, #0
   24b54:	bl	133e4 <g_object_new@plt>
   24b58:	ldr	r1, [r6, #12]
   24b5c:	ldr	r2, [r4, #12]
   24b60:	mov	r5, r0
   24b64:	ldr	r0, [r0, #12]
   24b68:	bl	24834 <g_unichar_xdigit_value@plt+0x109d0>
   24b6c:	mov	r0, r5
   24b70:	pop	{r4, r5, r6, pc}
   24b74:	ldr	r1, [pc, #64]	; 24bbc <g_unichar_xdigit_value@plt+0x10d58>
   24b78:	mov	r0, r6
   24b7c:	ldr	r2, [pc, #60]	; 24bc0 <g_unichar_xdigit_value@plt+0x10d5c>
   24b80:	add	r1, pc, r1
   24b84:	add	r2, pc, r2
   24b88:	add	r1, r1, #188	; 0xbc
   24b8c:	bl	13450 <g_return_if_fail_warning@plt>
   24b90:	mov	r0, r6
   24b94:	pop	{r4, r5, r6, pc}
   24b98:	ldr	r1, [pc, #36]	; 24bc4 <g_unichar_xdigit_value@plt+0x10d60>
   24b9c:	mov	r0, r2
   24ba0:	ldr	r2, [pc, #32]	; 24bc8 <g_unichar_xdigit_value@plt+0x10d64>
   24ba4:	add	r1, pc, r1
   24ba8:	add	r2, pc, r2
   24bac:	add	r1, r1, #188	; 0xbc
   24bb0:	bl	13450 <g_return_if_fail_warning@plt>
   24bb4:	mov	r0, r4
   24bb8:	pop	{r4, r5, r6, pc}
   24bbc:	andeq	r5, r1, r0, asr r6
   24bc0:	andeq	r4, r1, r0, lsr #12
   24bc4:	andeq	r5, r1, ip, lsr #12
   24bc8:	andeq	r5, r1, r8, lsr #26
   24bcc:	push	{r4, lr}
   24bd0:	mov	r1, #0
   24bd4:	bl	133e4 <g_object_new@plt>
   24bd8:	mov	r2, #0
   24bdc:	mov	r3, r2
   24be0:	mov	r1, #1
   24be4:	mov	r4, r0
   24be8:	ldr	r0, [r0, #12]
   24bec:	bl	13bf4 <mpfr_set_ui_2exp@plt>
   24bf0:	ldr	r0, [r4, #12]
   24bf4:	mov	r2, #0
   24bf8:	mov	r1, r0
   24bfc:	bl	13678 <mpfr_exp@plt>
   24c00:	ldr	r0, [r4, #12]
   24c04:	mov	r1, #0
   24c08:	add	r0, r0, #16
   24c0c:	bl	13b34 <mpfr_set_zero@plt>
   24c10:	mov	r0, r4
   24c14:	pop	{r4, pc}
   24c18:	push	{r4, lr}
   24c1c:	mov	r1, #0
   24c20:	bl	133e4 <g_object_new@plt>
   24c24:	mov	r1, #0
   24c28:	mov	r3, r1
   24c2c:	mov	r2, #1
   24c30:	mov	r4, r0
   24c34:	ldr	r0, [r0, #12]
   24c38:	bl	134b0 <mpc_set_si_si@plt>
   24c3c:	mov	r0, r4
   24c40:	pop	{r4, pc}
   24c44:	push	{r4, lr}
   24c48:	mov	r1, #0
   24c4c:	bl	133e4 <g_object_new@plt>
   24c50:	mov	r1, #0
   24c54:	mov	r4, r0
   24c58:	ldr	r0, [r0, #12]
   24c5c:	bl	13aa4 <mpfr_const_pi@plt>
   24c60:	ldr	r0, [r4, #12]
   24c64:	mov	r1, #0
   24c68:	add	r0, r0, #16
   24c6c:	bl	13b34 <mpfr_set_zero@plt>
   24c70:	mov	r0, r4
   24c74:	pop	{r4, pc}
   24c78:	push	{r4, lr}
   24c7c:	mov	r4, r0
   24c80:	bl	13a50 <g_random_double@plt>
   24c84:	mov	r0, r4
   24c88:	vldr	d1, [pc, #8]	; 24c98 <g_unichar_xdigit_value@plt+0x10e34>
   24c8c:	pop	{r4, lr}
   24c90:	b	24afc <g_unichar_xdigit_value@plt+0x10c98>
   24c94:	nop	{0}
	...
   24ca0:	push	{r3, lr}
   24ca4:	subs	r3, r0, #0
   24ca8:	beq	24cc0 <g_unichar_xdigit_value@plt+0x10e5c>
   24cac:	ldr	r0, [r3, #12]
   24cb0:	mov	r1, #0
   24cb4:	bl	13630 <mpfr_get_si@plt>
   24cb8:	asr	r1, r0, #31
   24cbc:	pop	{r3, pc}
   24cc0:	ldr	r1, [pc, #28]	; 24ce4 <g_unichar_xdigit_value@plt+0x10e80>
   24cc4:	ldr	r2, [pc, #28]	; 24ce8 <g_unichar_xdigit_value@plt+0x10e84>
   24cc8:	add	r1, pc, r1
   24ccc:	add	r2, pc, r2
   24cd0:	add	r1, r1, #216	; 0xd8
   24cd4:	bl	13450 <g_return_if_fail_warning@plt>
   24cd8:	mov	r0, #0
   24cdc:	mov	r1, #0
   24ce0:	pop	{r3, pc}
   24ce4:	andeq	r5, r1, r8, lsl #10
   24ce8:	andeq	r3, r1, r8, lsl r4
   24cec:	push	{r4, lr}
   24cf0:	subs	r4, r0, #0
   24cf4:	beq	24d0c <g_unichar_xdigit_value@plt+0x10ea8>
   24cf8:	ldr	r0, [r4, #12]
   24cfc:	mov	r1, #0
   24d00:	bl	13840 <mpfr_get_ui@plt>
   24d04:	mov	r1, #0
   24d08:	pop	{r4, pc}
   24d0c:	ldr	r1, [pc, #28]	; 24d30 <g_unichar_xdigit_value@plt+0x10ecc>
   24d10:	ldr	r2, [pc, #28]	; 24d34 <g_unichar_xdigit_value@plt+0x10ed0>
   24d14:	add	r1, pc, r1
   24d18:	add	r2, pc, r2
   24d1c:	add	r1, r1, #236	; 0xec
   24d20:	bl	13450 <g_return_if_fail_warning@plt>
   24d24:	mov	r0, r4
   24d28:	mov	r1, #0
   24d2c:	pop	{r4, pc}
   24d30:			; <UNDEFINED> instruction: 0x000154bc
   24d34:	andeq	r3, r1, ip, asr #7
   24d38:	push	{r3, lr}
   24d3c:	subs	r3, r0, #0
   24d40:	beq	24d54 <g_unichar_xdigit_value@plt+0x10ef0>
   24d44:	ldr	r0, [r3, #12]
   24d48:	mov	r1, #0
   24d4c:	pop	{r3, lr}
   24d50:	b	13864 <mpfr_get_flt@plt>
   24d54:	ldr	r1, [pc, #28]	; 24d78 <g_unichar_xdigit_value@plt+0x10f14>
   24d58:	ldr	r2, [pc, #28]	; 24d7c <g_unichar_xdigit_value@plt+0x10f18>
   24d5c:	add	r1, pc, r1
   24d60:	add	r2, pc, r2
   24d64:	add	r1, r1, #264	; 0x108
   24d68:	bl	13450 <g_return_if_fail_warning@plt>
   24d6c:	vldr	s0, [pc]	; 24d74 <g_unichar_xdigit_value@plt+0x10f10>
   24d70:	pop	{r3, pc}
   24d74:	andeq	r0, r0, r0
   24d78:	andeq	r5, r1, r4, ror r4
   24d7c:	andeq	r3, r1, r4, lsl #7
   24d80:	push	{r3, lr}
   24d84:	subs	r3, r0, #0
   24d88:	beq	24d9c <g_unichar_xdigit_value@plt+0x10f38>
   24d8c:	ldr	r0, [r3, #12]
   24d90:	mov	r1, #0
   24d94:	pop	{r3, lr}
   24d98:	b	13d5c <mpfr_get_d@plt>
   24d9c:	ldr	r1, [pc, #36]	; 24dc8 <g_unichar_xdigit_value@plt+0x10f64>
   24da0:	ldr	r2, [pc, #36]	; 24dcc <g_unichar_xdigit_value@plt+0x10f68>
   24da4:	add	r1, pc, r1
   24da8:	add	r2, pc, r2
   24dac:	add	r1, r1, #280	; 0x118
   24db0:	bl	13450 <g_return_if_fail_warning@plt>
   24db4:	vldr	d0, [pc, #4]	; 24dc0 <g_unichar_xdigit_value@plt+0x10f5c>
   24db8:	pop	{r3, pc}
   24dbc:	nop	{0}
	...
   24dc8:	andeq	r5, r1, ip, lsr #8
   24dcc:	andeq	r3, r1, ip, lsr r3
   24dd0:	push	{r4, lr}
   24dd4:	subs	r4, r0, #0
   24dd8:	beq	24e0c <g_unichar_xdigit_value@plt+0x10fa8>
   24ddc:	mov	r1, #0
   24de0:	ldr	r0, [r4, #12]
   24de4:	mov	r2, r1
   24de8:	bl	136b4 <mpc_cmp_si_si@plt>
   24dec:	tst	r0, #3
   24df0:	bne	24e04 <g_unichar_xdigit_value@plt+0x10fa0>
   24df4:	lsrs	r0, r0, #2
   24df8:	movne	r0, #0
   24dfc:	moveq	r0, #1
   24e00:	pop	{r4, pc}
   24e04:	mov	r0, #0
   24e08:	pop	{r4, pc}
   24e0c:	ldr	r1, [pc, #24]	; 24e2c <g_unichar_xdigit_value@plt+0x10fc8>
   24e10:	ldr	r2, [pc, #24]	; 24e30 <g_unichar_xdigit_value@plt+0x10fcc>
   24e14:	add	r1, pc, r1
   24e18:	add	r2, pc, r2
   24e1c:	add	r1, r1, #300	; 0x12c
   24e20:	bl	13450 <g_return_if_fail_warning@plt>
   24e24:	mov	r0, r4
   24e28:	pop	{r4, pc}
   24e2c:			; <UNDEFINED> instruction: 0x000153bc
   24e30:	andeq	r3, r1, ip, asr #5
   24e34:	push	{r4, lr}
   24e38:	subs	r4, r0, #0
   24e3c:	beq	24e6c <g_unichar_xdigit_value@plt+0x11008>
   24e40:	ldr	r3, [r4, #12]
   24e44:	ldr	r2, [r3, #8]
   24e48:	cmp	r2, #-2147483645	; 0x80000003
   24e4c:	bge	24e60 <g_unichar_xdigit_value@plt+0x10ffc>
   24e50:	cmp	r2, #-2147483646	; 0x80000002
   24e54:	beq	24e8c <g_unichar_xdigit_value@plt+0x11028>
   24e58:	mov	r0, #0
   24e5c:	pop	{r4, pc}
   24e60:	ldr	r0, [r3, #4]
   24e64:	lsr	r0, r0, #31
   24e68:	pop	{r4, pc}
   24e6c:	ldr	r1, [pc, #36]	; 24e98 <g_unichar_xdigit_value@plt+0x11034>
   24e70:	ldr	r2, [pc, #36]	; 24e9c <g_unichar_xdigit_value@plt+0x11038>
   24e74:	add	r1, pc, r1
   24e78:	add	r2, pc, r2
   24e7c:	add	r1, r1, #316	; 0x13c
   24e80:	bl	13450 <g_return_if_fail_warning@plt>
   24e84:	mov	r0, r4
   24e88:	pop	{r4, pc}
   24e8c:	bl	13bd0 <mpfr_set_erangeflag@plt>
   24e90:	mov	r0, #0
   24e94:	pop	{r4, pc}
   24e98:	andeq	r5, r1, ip, asr r3
   24e9c:	andeq	r3, r1, ip, ror #4
   24ea0:	push	{r4, lr}
   24ea4:	subs	r4, r0, #0
   24ea8:	beq	24ec0 <g_unichar_xdigit_value@plt+0x1105c>
   24eac:	ldr	r3, [r4, #12]
   24eb0:	ldr	r0, [r3, #24]
   24eb4:	subs	r0, r0, #-2147483647	; 0x80000001
   24eb8:	movne	r0, #1
   24ebc:	pop	{r4, pc}
   24ec0:	ldr	r1, [pc, #24]	; 24ee0 <g_unichar_xdigit_value@plt+0x1107c>
   24ec4:	ldr	r2, [pc, #24]	; 24ee4 <g_unichar_xdigit_value@plt+0x11080>
   24ec8:	add	r1, pc, r1
   24ecc:	add	r2, pc, r2
   24ed0:	add	r1, r1, #336	; 0x150
   24ed4:	bl	13450 <g_return_if_fail_warning@plt>
   24ed8:	mov	r0, r4
   24edc:	pop	{r4, pc}
   24ee0:	andeq	r5, r1, r8, lsl #6
   24ee4:	andeq	r3, r1, r8, lsl r2
   24ee8:	push	{r4, lr}
   24eec:	subs	r4, r0, #0
   24ef0:	beq	24f1c <g_unichar_xdigit_value@plt+0x110b8>
   24ef4:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   24ef8:	cmp	r0, #0
   24efc:	beq	24f08 <g_unichar_xdigit_value@plt+0x110a4>
   24f00:	mov	r0, #0
   24f04:	pop	{r4, pc}
   24f08:	ldr	r0, [r4, #12]
   24f0c:	bl	139fc <mpfr_integer_p@plt>
   24f10:	adds	r0, r0, #0
   24f14:	movne	r0, #1
   24f18:	pop	{r4, pc}
   24f1c:	ldr	r1, [pc, #24]	; 24f3c <g_unichar_xdigit_value@plt+0x110d8>
   24f20:	ldr	r2, [pc, #24]	; 24f40 <g_unichar_xdigit_value@plt+0x110dc>
   24f24:	add	r1, pc, r1
   24f28:	add	r2, pc, r2
   24f2c:	add	r1, r1, #356	; 0x164
   24f30:	bl	13450 <g_return_if_fail_warning@plt>
   24f34:	mov	r0, r4
   24f38:	pop	{r4, pc}
   24f3c:	andeq	r5, r1, ip, lsr #5
   24f40:			; <UNDEFINED> instruction: 0x000131bc
   24f44:	push	{r4, lr}
   24f48:	subs	r4, r0, #0
   24f4c:	beq	24f94 <g_unichar_xdigit_value@plt+0x11130>
   24f50:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   24f54:	cmp	r0, #0
   24f58:	bne	24f8c <g_unichar_xdigit_value@plt+0x11128>
   24f5c:	ldr	r3, [r4, #12]
   24f60:	ldr	r2, [r3, #8]
   24f64:	cmp	r2, #-2147483645	; 0x80000003
   24f68:	bge	24f80 <g_unichar_xdigit_value@plt+0x1111c>
   24f6c:	cmp	r2, #-2147483646	; 0x80000002
   24f70:	beq	24fb4 <g_unichar_xdigit_value@plt+0x11150>
   24f74:	mov	r0, r4
   24f78:	pop	{r4, lr}
   24f7c:	b	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   24f80:	ldr	r3, [r3, #4]
   24f84:	cmp	r3, #0
   24f88:	bge	24f74 <g_unichar_xdigit_value@plt+0x11110>
   24f8c:	mov	r0, #0
   24f90:	pop	{r4, pc}
   24f94:	ldr	r1, [pc, #32]	; 24fbc <g_unichar_xdigit_value@plt+0x11158>
   24f98:	ldr	r2, [pc, #32]	; 24fc0 <g_unichar_xdigit_value@plt+0x1115c>
   24f9c:	add	r1, pc, r1
   24fa0:	add	r2, pc, r2
   24fa4:	add	r1, r1, #376	; 0x178
   24fa8:	bl	13450 <g_return_if_fail_warning@plt>
   24fac:	mov	r0, #0
   24fb0:	pop	{r4, pc}
   24fb4:	bl	13bd0 <mpfr_set_erangeflag@plt>
   24fb8:	b	24f74 <g_unichar_xdigit_value@plt+0x11110>
   24fbc:	andeq	r5, r1, r4, lsr r2
   24fc0:	andeq	r3, r1, r4, asr #2
   24fc4:	push	{r4, lr}
   24fc8:	subs	r4, r0, #0
   24fcc:	beq	25014 <g_unichar_xdigit_value@plt+0x111b0>
   24fd0:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   24fd4:	cmp	r0, #0
   24fd8:	bne	24ff4 <g_unichar_xdigit_value@plt+0x11190>
   24fdc:	ldr	r3, [r4, #12]
   24fe0:	ldr	r2, [r3, #8]
   24fe4:	cmp	r2, #-2147483645	; 0x80000003
   24fe8:	bge	24ffc <g_unichar_xdigit_value@plt+0x11198>
   24fec:	cmp	r2, #-2147483646	; 0x80000002
   24ff0:	beq	25034 <g_unichar_xdigit_value@plt+0x111d0>
   24ff4:	mov	r0, #0
   24ff8:	pop	{r4, pc}
   24ffc:	ldr	r3, [r3, #4]
   25000:	cmp	r3, #0
   25004:	ble	24ff4 <g_unichar_xdigit_value@plt+0x11190>
   25008:	mov	r0, r4
   2500c:	pop	{r4, lr}
   25010:	b	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   25014:	ldr	r1, [pc, #32]	; 2503c <g_unichar_xdigit_value@plt+0x111d8>
   25018:	ldr	r2, [pc, #32]	; 25040 <g_unichar_xdigit_value@plt+0x111dc>
   2501c:	add	r1, pc, r1
   25020:	add	r2, pc, r2
   25024:	add	r1, r1, #404	; 0x194
   25028:	bl	13450 <g_return_if_fail_warning@plt>
   2502c:	mov	r0, #0
   25030:	pop	{r4, pc}
   25034:	bl	13bd0 <mpfr_set_erangeflag@plt>
   25038:	b	24ff4 <g_unichar_xdigit_value@plt+0x11190>
   2503c:			; <UNDEFINED> instruction: 0x000151b4
   25040:	andeq	r3, r1, r4, asr #1
   25044:	ldr	r3, [pc, #256]	; 2514c <g_unichar_xdigit_value@plt+0x112e8>
   25048:	ldr	r2, [pc, #256]	; 25150 <g_unichar_xdigit_value@plt+0x112ec>
   2504c:	add	r3, pc, r3
   25050:	push	{r4, r5, r6, r7, lr}
   25054:	subs	r7, r0, #0
   25058:	ldr	r4, [r3, r2]
   2505c:	sub	sp, sp, #44	; 0x2c
   25060:	mov	r5, r1
   25064:	ldr	r3, [r4]
   25068:	str	r3, [sp, #36]	; 0x24
   2506c:	beq	250e0 <g_unichar_xdigit_value@plt+0x1127c>
   25070:	cmp	r1, #0
   25074:	beq	25100 <g_unichar_xdigit_value@plt+0x1129c>
   25078:	ldr	r6, [r1, #12]
   2507c:	ldr	r5, [r7, #12]
   25080:	cmp	r6, #0
   25084:	beq	25124 <g_unichar_xdigit_value@plt+0x112c0>
   25088:	mov	lr, r6
   2508c:	add	ip, sp, #4
   25090:	ldm	lr!, {r0, r1, r2, r3}
   25094:	stmia	ip!, {r0, r1, r2, r3}
   25098:	ldm	lr, {r0, r1, r2, r3}
   2509c:	stm	ip, {r0, r1, r2, r3}
   250a0:	mov	r0, r5
   250a4:	add	r1, sp, #4
   250a8:	bl	13b10 <mpc_cmp@plt>
   250ac:	tst	r0, #3
   250b0:	movne	r0, #0
   250b4:	beq	250d0 <g_unichar_xdigit_value@plt+0x1126c>
   250b8:	ldr	r2, [sp, #36]	; 0x24
   250bc:	ldr	r3, [r4]
   250c0:	cmp	r2, r3
   250c4:	bne	25148 <g_unichar_xdigit_value@plt+0x112e4>
   250c8:	add	sp, sp, #44	; 0x2c
   250cc:	pop	{r4, r5, r6, r7, pc}
   250d0:	lsrs	r0, r0, #2
   250d4:	movne	r0, #0
   250d8:	moveq	r0, #1
   250dc:	b	250b8 <g_unichar_xdigit_value@plt+0x11254>
   250e0:	ldr	r1, [pc, #108]	; 25154 <g_unichar_xdigit_value@plt+0x112f0>
   250e4:	ldr	r2, [pc, #108]	; 25158 <g_unichar_xdigit_value@plt+0x112f4>
   250e8:	add	r1, pc, r1
   250ec:	add	r2, pc, r2
   250f0:	add	r1, r1, #424	; 0x1a8
   250f4:	bl	13450 <g_return_if_fail_warning@plt>
   250f8:	mov	r0, r7
   250fc:	b	250b8 <g_unichar_xdigit_value@plt+0x11254>
   25100:	ldr	r1, [pc, #84]	; 2515c <g_unichar_xdigit_value@plt+0x112f8>
   25104:	mov	r0, r5
   25108:	ldr	r2, [pc, #80]	; 25160 <g_unichar_xdigit_value@plt+0x112fc>
   2510c:	add	r1, pc, r1
   25110:	add	r2, pc, r2
   25114:	add	r1, r1, #424	; 0x1a8
   25118:	bl	13450 <g_return_if_fail_warning@plt>
   2511c:	mov	r0, r5
   25120:	b	250b8 <g_unichar_xdigit_value@plt+0x11254>
   25124:	ldr	r1, [pc, #56]	; 25164 <g_unichar_xdigit_value@plt+0x11300>
   25128:	mov	r0, r6
   2512c:	ldr	r2, [pc, #52]	; 25168 <g_unichar_xdigit_value@plt+0x11304>
   25130:	add	r1, pc, r1
   25134:	add	r2, pc, r2
   25138:	add	r1, r1, #440	; 0x1b8
   2513c:	bl	13450 <g_return_if_fail_warning@plt>
   25140:	mov	r0, r6
   25144:	b	250b8 <g_unichar_xdigit_value@plt+0x11254>
   25148:	bl	13978 <__stack_chk_fail@plt>
   2514c:	andeq	fp, r2, ip, lsr #31
   25150:	muleq	r0, r0, r3
   25154:	andeq	r5, r1, r8, ror #1
   25158:	strdeq	r2, [r1], -r8
   2515c:	andeq	r5, r1, r4, asr #1
   25160:	andeq	r5, r1, ip, asr #15
   25164:	andeq	r5, r1, r0, lsr #1
   25168:			; <UNDEFINED> instruction: 0x000157b4
   2516c:	push	{r3, lr}
   25170:	subs	r3, r0, #0
   25174:	beq	25194 <g_unichar_xdigit_value@plt+0x11330>
   25178:	cmp	r1, #0
   2517c:	beq	251b4 <g_unichar_xdigit_value@plt+0x11350>
   25180:	ldr	r0, [r3, #12]
   25184:	mov	r2, #1
   25188:	ldr	r1, [r1, #12]
   2518c:	pop	{r3, lr}
   25190:	b	134bc <mpfr_cmp3@plt>
   25194:	ldr	r1, [pc, #60]	; 251d8 <g_unichar_xdigit_value@plt+0x11374>
   25198:	ldr	r2, [pc, #60]	; 251dc <g_unichar_xdigit_value@plt+0x11378>
   2519c:	add	r1, pc, r1
   251a0:	add	r2, pc, r2
   251a4:	add	r1, r1, #456	; 0x1c8
   251a8:	bl	13450 <g_return_if_fail_warning@plt>
   251ac:	mov	r0, #0
   251b0:	pop	{r3, pc}
   251b4:	ldr	r3, [pc, #36]	; 251e0 <g_unichar_xdigit_value@plt+0x1137c>
   251b8:	mov	r0, r1
   251bc:	ldr	r2, [pc, #32]	; 251e4 <g_unichar_xdigit_value@plt+0x11380>
   251c0:	add	r3, pc, r3
   251c4:	add	r2, pc, r2
   251c8:	add	r1, r3, #456	; 0x1c8
   251cc:	bl	13450 <g_return_if_fail_warning@plt>
   251d0:	mov	r0, #0
   251d4:	pop	{r3, pc}
   251d8:	andeq	r5, r1, r4, lsr r0
   251dc:	andeq	r2, r1, r4, asr #30
   251e0:	andeq	r5, r1, r0, lsl r0
   251e4:	andeq	r5, r1, r8, lsl r7
   251e8:	mov	r1, #0
   251ec:	b	133e4 <g_object_new@plt>
   251f0:	ldr	r3, [pc, #4]	; 251fc <g_unichar_xdigit_value@plt+0x11398>
   251f4:	ldr	r0, [pc, r3]
   251f8:	bx	lr
   251fc:	ldrdeq	ip, [r2], -r8
   25200:	ldr	r3, [pc, #332]	; 25354 <g_unichar_xdigit_value@plt+0x114f0>
   25204:	mov	ip, #0
   25208:	push	{r4, r5, r6, r7, r8, lr}
   2520c:	add	r3, pc, r3
   25210:	ldr	r4, [pc, #320]	; 25358 <g_unichar_xdigit_value@plt+0x114f4>
   25214:	sub	sp, sp, #56	; 0x38
   25218:	subs	r7, r0, #0
   2521c:	mov	r5, r1
   25220:	ldr	r6, [r3, r4]
   25224:	str	ip, [sp, #4]
   25228:	str	ip, [sp, #8]
   2522c:	ldr	r3, [r6]
   25230:	str	ip, [sp, #12]
   25234:	str	ip, [sp, #16]
   25238:	str	r3, [sp, #52]	; 0x34
   2523c:	beq	25314 <g_unichar_xdigit_value@plt+0x114b0>
   25240:	cmp	r1, #0
   25244:	beq	25330 <g_unichar_xdigit_value@plt+0x114cc>
   25248:	cmp	r2, #1
   2524c:	beq	2530c <g_unichar_xdigit_value@plt+0x114a8>
   25250:	cmp	r2, #2
   25254:	beq	2529c <g_unichar_xdigit_value@plt+0x11438>
   25258:	cmp	r7, r5
   2525c:	beq	25284 <g_unichar_xdigit_value@plt+0x11420>
   25260:	ldm	r5!, {r0, r1, r2, r3}
   25264:	add	r4, sp, #20
   25268:	stmia	r4!, {r0, r1, r2, r3}
   2526c:	ldm	r5, {r0, r1, r2, r3}
   25270:	stm	r4, {r0, r1, r2, r3}
   25274:	mov	r0, r7
   25278:	mov	r2, ip
   2527c:	add	r1, sp, #20
   25280:	bl	13990 <mpc_set@plt>
   25284:	ldr	r2, [sp, #52]	; 0x34
   25288:	ldr	r3, [r6]
   2528c:	cmp	r2, r3
   25290:	bne	25350 <g_unichar_xdigit_value@plt+0x114ec>
   25294:	add	sp, sp, #56	; 0x38
   25298:	pop	{r4, r5, r6, r7, r8, pc}
   2529c:	mov	r8, #200	; 0xc8
   252a0:	bl	251f0 <g_unichar_xdigit_value@plt+0x1138c>
   252a4:	add	r4, sp, #4
   252a8:	mov	r1, r0
   252ac:	mov	r0, r4
   252b0:	bl	1375c <mpfr_init2@plt>
   252b4:	mov	r0, r4
   252b8:	mov	r1, #0
   252bc:	bl	13aa4 <mpfr_const_pi@plt>
   252c0:	mov	r1, r8
   252c4:	mov	r2, r4
   252c8:	mov	r0, r4
   252cc:	mov	r3, #0
   252d0:	bl	134ec <mpfr_si_div@plt>
   252d4:	mov	lr, r5
   252d8:	ldm	lr!, {r0, r1, r2, r3}
   252dc:	add	ip, sp, #20
   252e0:	stmia	ip!, {r0, r1, r2, r3}
   252e4:	ldm	lr, {r0, r1, r2, r3}
   252e8:	stm	ip, {r0, r1, r2, r3}
   252ec:	mov	r0, r7
   252f0:	mov	r2, r4
   252f4:	add	r1, sp, #20
   252f8:	mov	r3, #0
   252fc:	bl	13e4c <mpc_mul_fr@plt>
   25300:	mov	r0, r4
   25304:	bl	13ad4 <mpfr_clear@plt>
   25308:	b	25284 <g_unichar_xdigit_value@plt+0x11420>
   2530c:	mov	r8, #180	; 0xb4
   25310:	b	252a0 <g_unichar_xdigit_value@plt+0x1143c>
   25314:	ldr	r1, [pc, #64]	; 2535c <g_unichar_xdigit_value@plt+0x114f8>
   25318:	ldr	r2, [pc, #64]	; 25360 <g_unichar_xdigit_value@plt+0x114fc>
   2531c:	add	r1, pc, r1
   25320:	add	r2, pc, r2
   25324:	add	r1, r1, #472	; 0x1d8
   25328:	bl	13450 <g_return_if_fail_warning@plt>
   2532c:	b	25284 <g_unichar_xdigit_value@plt+0x11420>
   25330:	ldr	r1, [pc, #44]	; 25364 <g_unichar_xdigit_value@plt+0x11500>
   25334:	mov	r0, r5
   25338:	ldr	r2, [pc, #40]	; 25368 <g_unichar_xdigit_value@plt+0x11504>
   2533c:	add	r1, pc, r1
   25340:	add	r2, pc, r2
   25344:	add	r1, r1, #472	; 0x1d8
   25348:	bl	13450 <g_return_if_fail_warning@plt>
   2534c:	b	25284 <g_unichar_xdigit_value@plt+0x11420>
   25350:	bl	13978 <__stack_chk_fail@plt>
   25354:	andeq	fp, r2, ip, ror #27
   25358:	muleq	r0, r0, r3
   2535c:			; <UNDEFINED> instruction: 0x00014eb4
   25360:	ldrdeq	r5, [r1], -r4
   25364:	muleq	r1, r4, lr
   25368:	andeq	r5, r1, r0, asr #11
   2536c:	ldr	r3, [pc, #332]	; 254c0 <g_unichar_xdigit_value@plt+0x1165c>
   25370:	mov	ip, #0
   25374:	push	{r4, r5, r6, r7, r8, lr}
   25378:	add	r3, pc, r3
   2537c:	ldr	r4, [pc, #320]	; 254c4 <g_unichar_xdigit_value@plt+0x11660>
   25380:	sub	sp, sp, #56	; 0x38
   25384:	subs	r7, r0, #0
   25388:	mov	r5, r1
   2538c:	ldr	r6, [r3, r4]
   25390:	str	ip, [sp, #4]
   25394:	str	ip, [sp, #8]
   25398:	ldr	r3, [r6]
   2539c:	str	ip, [sp, #12]
   253a0:	str	ip, [sp, #16]
   253a4:	str	r3, [sp, #52]	; 0x34
   253a8:	beq	25480 <g_unichar_xdigit_value@plt+0x1161c>
   253ac:	cmp	r1, #0
   253b0:	beq	2549c <g_unichar_xdigit_value@plt+0x11638>
   253b4:	cmp	r2, #1
   253b8:	beq	25478 <g_unichar_xdigit_value@plt+0x11614>
   253bc:	cmp	r2, #2
   253c0:	beq	25408 <g_unichar_xdigit_value@plt+0x115a4>
   253c4:	cmp	r7, r5
   253c8:	beq	253f0 <g_unichar_xdigit_value@plt+0x1158c>
   253cc:	ldm	r5!, {r0, r1, r2, r3}
   253d0:	add	r4, sp, #20
   253d4:	stmia	r4!, {r0, r1, r2, r3}
   253d8:	ldm	r5, {r0, r1, r2, r3}
   253dc:	stm	r4, {r0, r1, r2, r3}
   253e0:	mov	r0, r7
   253e4:	mov	r2, ip
   253e8:	add	r1, sp, #20
   253ec:	bl	13990 <mpc_set@plt>
   253f0:	ldr	r2, [sp, #52]	; 0x34
   253f4:	ldr	r3, [r6]
   253f8:	cmp	r2, r3
   253fc:	bne	254bc <g_unichar_xdigit_value@plt+0x11658>
   25400:	add	sp, sp, #56	; 0x38
   25404:	pop	{r4, r5, r6, r7, r8, pc}
   25408:	mov	r8, #200	; 0xc8
   2540c:	bl	251f0 <g_unichar_xdigit_value@plt+0x1138c>
   25410:	add	r4, sp, #4
   25414:	mov	r1, r0
   25418:	mov	r0, r4
   2541c:	bl	1375c <mpfr_init2@plt>
   25420:	mov	r0, r4
   25424:	mov	r1, #0
   25428:	bl	13aa4 <mpfr_const_pi@plt>
   2542c:	mov	r1, r4
   25430:	mov	r2, r8
   25434:	mov	r0, r4
   25438:	mov	r3, #0
   2543c:	bl	136fc <mpfr_div_si@plt>
   25440:	mov	lr, r5
   25444:	ldm	lr!, {r0, r1, r2, r3}
   25448:	add	ip, sp, #20
   2544c:	stmia	ip!, {r0, r1, r2, r3}
   25450:	ldm	lr, {r0, r1, r2, r3}
   25454:	stm	ip, {r0, r1, r2, r3}
   25458:	mov	r0, r7
   2545c:	mov	r2, r4
   25460:	add	r1, sp, #20
   25464:	mov	r3, #0
   25468:	bl	13e4c <mpc_mul_fr@plt>
   2546c:	mov	r0, r4
   25470:	bl	13ad4 <mpfr_clear@plt>
   25474:	b	253f0 <g_unichar_xdigit_value@plt+0x1158c>
   25478:	mov	r8, #180	; 0xb4
   2547c:	b	2540c <g_unichar_xdigit_value@plt+0x115a8>
   25480:	ldr	r1, [pc, #64]	; 254c8 <g_unichar_xdigit_value@plt+0x11664>
   25484:	ldr	r2, [pc, #64]	; 254cc <g_unichar_xdigit_value@plt+0x11668>
   25488:	add	r1, pc, r1
   2548c:	add	r2, pc, r2
   25490:	add	r1, r1, #496	; 0x1f0
   25494:	bl	13450 <g_return_if_fail_warning@plt>
   25498:	b	253f0 <g_unichar_xdigit_value@plt+0x1158c>
   2549c:	ldr	r1, [pc, #44]	; 254d0 <g_unichar_xdigit_value@plt+0x1166c>
   254a0:	mov	r0, r5
   254a4:	ldr	r2, [pc, #40]	; 254d4 <g_unichar_xdigit_value@plt+0x11670>
   254a8:	add	r1, pc, r1
   254ac:	add	r2, pc, r2
   254b0:	add	r1, r1, #496	; 0x1f0
   254b4:	bl	13450 <g_return_if_fail_warning@plt>
   254b8:	b	253f0 <g_unichar_xdigit_value@plt+0x1158c>
   254bc:	bl	13978 <__stack_chk_fail@plt>
   254c0:	andeq	fp, r2, r0, lsl #25
   254c4:	muleq	r0, r0, r3
   254c8:	andeq	r4, r1, r8, asr #26
   254cc:	andeq	r5, r1, r8, ror #8
   254d0:	andeq	r4, r1, r8, lsr #26
   254d4:	andeq	r5, r1, r4, asr r4
   254d8:	ldr	r3, [pc, #8]	; 254e8 <g_unichar_xdigit_value@plt+0x11684>
   254dc:	add	r3, pc, r3
   254e0:	str	r0, [r3]
   254e4:	bx	lr
   254e8:	strdeq	fp, [r2], -r0
   254ec:	ldr	r3, [pc, #8]	; 254fc <g_unichar_xdigit_value@plt+0x11698>
   254f0:	add	r3, pc, r3
   254f4:	ldr	r0, [r3, #8]
   254f8:	bx	lr
   254fc:	andeq	ip, r2, ip, lsl #1
   25500:	push	{r3, r4, r5, lr}
   25504:	bl	136f0 <g_strdup@plt>
   25508:	ldr	r4, [pc, #20]	; 25524 <g_unichar_xdigit_value@plt+0x116c0>
   2550c:	add	r4, pc, r4
   25510:	mov	r5, r0
   25514:	ldr	r0, [r4, #8]
   25518:	bl	1399c <g_free@plt>
   2551c:	str	r5, [r4, #8]
   25520:	pop	{r3, r4, r5, pc}
   25524:	andeq	ip, r2, r0, ror r0
   25528:	push	{r3, lr}
   2552c:	bl	13600 <mpfr_underflow_p@plt>
   25530:	cmp	r0, #0
   25534:	bne	25564 <g_unichar_xdigit_value@plt+0x11700>
   25538:	bl	13cd8 <mpfr_overflow_p@plt>
   2553c:	cmp	r0, #0
   25540:	popeq	{r3, pc}
   25544:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   25548:	ldr	r0, [pc, #52]	; 25584 <g_unichar_xdigit_value@plt+0x11720>
   2554c:	ldr	r1, [pc, #52]	; 25588 <g_unichar_xdigit_value@plt+0x11724>
   25550:	add	r0, pc, r0
   25554:	add	r1, pc, r1
   25558:	bl	13c9c <g_dgettext@plt>
   2555c:	pop	{r3, lr}
   25560:	b	25500 <g_unichar_xdigit_value@plt+0x1169c>
   25564:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   25568:	ldr	r0, [pc, #28]	; 2558c <g_unichar_xdigit_value@plt+0x11728>
   2556c:	ldr	r1, [pc, #28]	; 25590 <g_unichar_xdigit_value@plt+0x1172c>
   25570:	add	r0, pc, r0
   25574:	add	r1, pc, r1
   25578:	bl	13c9c <g_dgettext@plt>
   2557c:	pop	{r3, lr}
   25580:	b	25500 <g_unichar_xdigit_value@plt+0x1169c>
   25584:	ldrdeq	r3, [r1], -r8
   25588:	andeq	r5, r1, r8, asr #7
   2558c:			; <UNDEFINED> instruction: 0x00013eb8
   25590:	muleq	r1, r8, r3
   25594:	ldr	r0, [pc, #108]	; 25608 <g_unichar_xdigit_value@plt+0x117a4>
   25598:	push	{r3, r4, r5, lr}
   2559c:	add	r0, pc, r0
   255a0:	dmb	sy
   255a4:	ldr	r4, [r0, #12]
   255a8:	dmb	sy
   255ac:	cmp	r4, #0
   255b0:	beq	255c4 <g_unichar_xdigit_value@plt+0x11760>
   255b4:	ldr	r3, [pc, #80]	; 2560c <g_unichar_xdigit_value@plt+0x117a8>
   255b8:	add	r3, pc, r3
   255bc:	ldr	r0, [r3, #12]
   255c0:	pop	{r3, r4, r5, pc}
   255c4:	add	r5, r0, #12
   255c8:	mov	r0, r5
   255cc:	bl	138ac <g_once_init_enter@plt>
   255d0:	cmp	r0, #0
   255d4:	beq	255b4 <g_unichar_xdigit_value@plt+0x11750>
   255d8:	ldr	r2, [pc, #48]	; 25610 <g_unichar_xdigit_value@plt+0x117ac>
   255dc:	mov	r3, r4
   255e0:	ldr	r1, [pc, #44]	; 25614 <g_unichar_xdigit_value@plt+0x117b0>
   255e4:	mov	r0, #80	; 0x50
   255e8:	add	r2, pc, r2
   255ec:	add	r1, pc, r1
   255f0:	add	r2, r2, #48	; 0x30
   255f4:	bl	13438 <g_type_register_static@plt>
   255f8:	mov	r1, r0
   255fc:	mov	r0, r5
   25600:	bl	13bac <g_once_init_leave@plt>
   25604:	b	255b4 <g_unichar_xdigit_value@plt+0x11750>
   25608:	andeq	fp, r2, r0, ror #31
   2560c:	andeq	fp, r2, r4, asr #31
   25610:	andeq	fp, r2, ip, asr r4
   25614:	andeq	r5, r1, r0, asr #6
   25618:	push	{r4, r5, r6, r7, lr}
   2561c:	sub	sp, sp, #12
   25620:	mov	r5, r1
   25624:	mov	r4, r0
   25628:	mov	r6, r2
   2562c:	mov	r7, r3
   25630:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   25634:	strd	r6, [sp]
   25638:	mov	r2, r4
   2563c:	mov	r3, r5
   25640:	bl	24980 <g_unichar_xdigit_value@plt+0x10b1c>
   25644:	add	sp, sp, #12
   25648:	pop	{r4, r5, r6, r7, pc}
   2564c:	push	{r4, lr}
   25650:	subs	r4, r0, #0
   25654:	beq	256a0 <g_unichar_xdigit_value@plt+0x1183c>
   25658:	ldr	r3, [r4, #12]
   2565c:	ldr	r2, [r3, #8]
   25660:	cmp	r2, #-2147483645	; 0x80000003
   25664:	blt	25680 <g_unichar_xdigit_value@plt+0x1181c>
   25668:	ldr	r0, [r3, #4]
   2566c:	asr	r1, r0, #31
   25670:	mov	r2, #0
   25674:	mov	r3, #0
   25678:	pop	{r4, lr}
   2567c:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   25680:	cmp	r2, #-2147483646	; 0x80000002
   25684:	movne	r0, #0
   25688:	movne	r1, #0
   2568c:	bne	25670 <g_unichar_xdigit_value@plt+0x1180c>
   25690:	bl	13bd0 <mpfr_set_erangeflag@plt>
   25694:	mov	r0, #0
   25698:	mov	r1, #0
   2569c:	b	25670 <g_unichar_xdigit_value@plt+0x1180c>
   256a0:	ldr	r1, [pc, #24]	; 256c0 <g_unichar_xdigit_value@plt+0x1185c>
   256a4:	ldr	r2, [pc, #24]	; 256c4 <g_unichar_xdigit_value@plt+0x11860>
   256a8:	add	r1, pc, r1
   256ac:	add	r2, pc, r2
   256b0:	add	r1, r1, #520	; 0x208
   256b4:	bl	13450 <g_return_if_fail_warning@plt>
   256b8:	mov	r0, r4
   256bc:	pop	{r4, pc}
   256c0:	andeq	r4, r1, r8, lsr #22
   256c4:	andeq	r2, r1, r8, lsr sl
   256c8:	push	{r4, r5, r6, r7, lr}
   256cc:	sub	sp, sp, #12
   256d0:	mov	r5, r1
   256d4:	mov	r4, r0
   256d8:	mov	r6, r2
   256dc:	mov	r7, r3
   256e0:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   256e4:	strd	r6, [sp]
   256e8:	mov	r2, r4
   256ec:	mov	r3, r5
   256f0:	bl	249b4 <g_unichar_xdigit_value@plt+0x10b50>
   256f4:	add	sp, sp, #12
   256f8:	pop	{r4, r5, r6, r7, pc}
   256fc:	push	{r4, r5, r6, r7, r8, lr}
   25700:	subs	r6, r0, #0
   25704:	mov	r4, r2
   25708:	mov	r5, r3
   2570c:	beq	2583c <g_unichar_xdigit_value@plt+0x119d8>
   25710:	mov	r6, #1
   25714:	mov	r7, #0
   25718:	and	r2, r2, r6
   2571c:	and	r3, r3, r7
   25720:	orrs	r1, r2, r3
   25724:	mov	r8, #0
   25728:	bne	25768 <g_unichar_xdigit_value@plt+0x11904>
   2572c:	mov	r2, #0
   25730:	mov	r3, #0
   25734:	mov	r1, #0
   25738:	mov	r0, #2
   2573c:	bl	256c8 <g_unichar_xdigit_value@plt+0x11864>
   25740:	lsrs	r5, r5, #1
   25744:	rrx	r4, r4
   25748:	mov	r1, r0
   2574c:	mov	r0, r8
   25750:	bl	13594 <g_list_append@plt>
   25754:	and	r2, r4, r6
   25758:	and	r3, r5, r7
   2575c:	orrs	r1, r2, r3
   25760:	mov	r8, r0
   25764:	beq	2572c <g_unichar_xdigit_value@plt+0x118c8>
   25768:	cmp	r5, #0
   2576c:	cmpeq	r4, #8
   25770:	bls	25804 <g_unichar_xdigit_value@plt+0x119a0>
   25774:	mov	r6, #3
   25778:	mov	r7, #0
   2577c:	b	257c0 <g_unichar_xdigit_value@plt+0x1195c>
   25780:	mov	r0, r4
   25784:	mov	r1, r5
   25788:	mov	r2, r6
   2578c:	mov	r3, r7
   25790:	bl	37484 <g_unichar_xdigit_value@plt+0x23620>
   25794:	mov	r2, #0
   25798:	mov	r3, #0
   2579c:	mov	r4, r0
   257a0:	mov	r5, r1
   257a4:	mov	r0, r6
   257a8:	mov	r1, r7
   257ac:	bl	256c8 <g_unichar_xdigit_value@plt+0x11864>
   257b0:	mov	r1, r0
   257b4:	mov	r0, r8
   257b8:	bl	13594 <g_list_append@plt>
   257bc:	mov	r8, r0
   257c0:	mov	r0, r4
   257c4:	mov	r1, r5
   257c8:	mov	r2, r6
   257cc:	mov	r3, r7
   257d0:	bl	37484 <g_unichar_xdigit_value@plt+0x23620>
   257d4:	orrs	r1, r2, r3
   257d8:	beq	25780 <g_unichar_xdigit_value@plt+0x1191c>
   257dc:	adds	r6, r6, #2
   257e0:	mov	r0, r4
   257e4:	adc	r7, r7, #0
   257e8:	mov	r1, r5
   257ec:	mov	r2, r6
   257f0:	mov	r3, r7
   257f4:	bl	37484 <g_unichar_xdigit_value@plt+0x23620>
   257f8:	cmp	r7, r1
   257fc:	cmpeq	r6, r0
   25800:	bls	257c0 <g_unichar_xdigit_value@plt+0x1195c>
   25804:	cmp	r5, #0
   25808:	cmpeq	r4, #1
   2580c:	bls	25834 <g_unichar_xdigit_value@plt+0x119d0>
   25810:	mov	r1, r5
   25814:	mov	r0, r4
   25818:	mov	r2, #0
   2581c:	mov	r3, #0
   25820:	bl	256c8 <g_unichar_xdigit_value@plt+0x11864>
   25824:	mov	r1, r0
   25828:	mov	r0, r8
   2582c:	pop	{r4, r5, r6, r7, r8, lr}
   25830:	b	13594 <g_list_append@plt>
   25834:	mov	r0, r8
   25838:	pop	{r4, r5, r6, r7, r8, pc}
   2583c:	ldr	r1, [pc, #24]	; 2585c <g_unichar_xdigit_value@plt+0x119f8>
   25840:	ldr	r2, [pc, #24]	; 25860 <g_unichar_xdigit_value@plt+0x119fc>
   25844:	add	r1, pc, r1
   25848:	add	r2, pc, r2
   2584c:	add	r1, r1, #532	; 0x214
   25850:	bl	13450 <g_return_if_fail_warning@plt>
   25854:	mov	r0, r6
   25858:	pop	{r4, r5, r6, r7, r8, pc}
   2585c:	andeq	r4, r1, ip, lsl #19
   25860:	muleq	r1, ip, r8
   25864:	push	{r4, r5, r6, r7, lr}
   25868:	sub	sp, sp, #12
   2586c:	mov	r5, r1
   25870:	mov	r4, r0
   25874:	mov	r6, r2
   25878:	mov	r7, r3
   2587c:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   25880:	strd	r6, [sp]
   25884:	mov	r2, r4
   25888:	mov	r3, r5
   2588c:	bl	249e8 <g_unichar_xdigit_value@plt+0x10b84>
   25890:	add	sp, sp, #12
   25894:	pop	{r4, r5, r6, r7, pc}
   25898:	push	{r3, r4, r5, lr}
   2589c:	mov	r4, r1
   258a0:	mov	r5, r0
   258a4:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   258a8:	mov	r1, r5
   258ac:	mov	r2, r4
   258b0:	pop	{r3, r4, r5, lr}
   258b4:	b	24a54 <g_unichar_xdigit_value@plt+0x10bf0>
   258b8:	push	{r3, lr}
   258bc:	vpush	{d8-d9}
   258c0:	vmov.f64	d9, d0
   258c4:	vmov.f64	d8, d1
   258c8:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   258cc:	vmov.f64	d0, d9
   258d0:	vmov.f64	d1, d8
   258d4:	vpop	{d8-d9}
   258d8:	pop	{r3, lr}
   258dc:	b	24afc <g_unichar_xdigit_value@plt+0x10c98>
   258e0:	push	{r3, r4, r5, lr}
   258e4:	mov	r4, r1
   258e8:	mov	r5, r0
   258ec:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   258f0:	mov	r1, r5
   258f4:	mov	r2, r4
   258f8:	pop	{r3, r4, r5, lr}
   258fc:	b	24b38 <g_unichar_xdigit_value@plt+0x10cd4>
   25900:	push	{r3, lr}
   25904:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   25908:	pop	{r3, lr}
   2590c:	b	24bcc <g_unichar_xdigit_value@plt+0x10d68>
   25910:	push	{r3, lr}
   25914:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   25918:	pop	{r3, lr}
   2591c:	b	24c18 <g_unichar_xdigit_value@plt+0x10db4>
   25920:	push	{r3, lr}
   25924:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   25928:	pop	{r3, lr}
   2592c:	b	24c44 <g_unichar_xdigit_value@plt+0x10de0>
   25930:	push	{r3, lr}
   25934:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   25938:	pop	{r3, lr}
   2593c:	b	24c78 <g_unichar_xdigit_value@plt+0x10e14>
   25940:	push	{r3, lr}
   25944:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   25948:	pop	{r3, lr}
   2594c:	b	251e8 <g_unichar_xdigit_value@plt+0x11384>
   25950:	push	{r3, r4, r5, lr}
   25954:	subs	r5, r0, #0
   25958:	beq	2597c <g_unichar_xdigit_value@plt+0x11b18>
   2595c:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25960:	ldr	r1, [r5, #12]
   25964:	mov	r2, #0
   25968:	mov	r4, r0
   2596c:	ldr	r0, [r0, #12]
   25970:	bl	139c0 <mpc_neg@plt>
   25974:	mov	r0, r4
   25978:	pop	{r3, r4, r5, pc}
   2597c:	ldr	r1, [pc, #24]	; 2599c <g_unichar_xdigit_value@plt+0x11b38>
   25980:	ldr	r2, [pc, #24]	; 259a0 <g_unichar_xdigit_value@plt+0x11b3c>
   25984:	add	r1, pc, r1
   25988:	add	r2, pc, r2
   2598c:	add	r1, r1, #556	; 0x22c
   25990:	bl	13450 <g_return_if_fail_warning@plt>
   25994:	mov	r0, r5
   25998:	pop	{r3, r4, r5, pc}
   2599c:	andeq	r4, r1, ip, asr #16
   259a0:	andeq	r2, r1, ip, asr r7
   259a4:	push	{r3, r4, r5, lr}
   259a8:	subs	r5, r0, #0
   259ac:	beq	259e0 <g_unichar_xdigit_value@plt+0x11b7c>
   259b0:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   259b4:	mov	r1, #0
   259b8:	mov	r4, r0
   259bc:	ldr	r0, [r0, #12]
   259c0:	add	r0, r0, #16
   259c4:	bl	13b34 <mpfr_set_zero@plt>
   259c8:	ldr	r1, [r5, #12]
   259cc:	ldr	r0, [r4, #12]
   259d0:	mov	r2, #0
   259d4:	bl	135b8 <mpc_abs@plt>
   259d8:	mov	r0, r4
   259dc:	pop	{r3, r4, r5, pc}
   259e0:	ldr	r1, [pc, #24]	; 25a00 <g_unichar_xdigit_value@plt+0x11b9c>
   259e4:	ldr	r2, [pc, #24]	; 25a04 <g_unichar_xdigit_value@plt+0x11ba0>
   259e8:	add	r1, pc, r1
   259ec:	add	r2, pc, r2
   259f0:	add	r1, r1, #576	; 0x240
   259f4:	bl	13450 <g_return_if_fail_warning@plt>
   259f8:	mov	r0, r5
   259fc:	pop	{r3, r4, r5, pc}
   25a00:	andeq	r4, r1, r8, ror #15
   25a04:	strdeq	r2, [r1], -r8
   25a08:	push	{r4, r5, r6, r7, r8, lr}
   25a0c:	subs	r5, r0, #0
   25a10:	mov	r7, r1
   25a14:	beq	25ad4 <g_unichar_xdigit_value@plt+0x11c70>
   25a18:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   25a1c:	subs	r6, r0, #0
   25a20:	bne	25a74 <g_unichar_xdigit_value@plt+0x11c10>
   25a24:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25a28:	mov	r1, r6
   25a2c:	mov	r4, r0
   25a30:	ldr	r0, [r0, #12]
   25a34:	add	r0, r0, #16
   25a38:	bl	13b34 <mpfr_set_zero@plt>
   25a3c:	mov	r2, r6
   25a40:	ldr	r1, [r5, #12]
   25a44:	ldr	r0, [r4, #12]
   25a48:	bl	1354c <mpc_arg@plt>
   25a4c:	ldr	r0, [r4, #12]
   25a50:	mov	r2, r7
   25a54:	mov	r1, r0
   25a58:	bl	25200 <g_unichar_xdigit_value@plt+0x1139c>
   25a5c:	mov	r0, r5
   25a60:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   25a64:	subs	r6, r0, #0
   25a68:	beq	25aa8 <g_unichar_xdigit_value@plt+0x11c44>
   25a6c:	mov	r0, r4
   25a70:	pop	{r4, r5, r6, r7, r8, pc}
   25a74:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   25a78:	ldr	r0, [pc, #116]	; 25af4 <g_unichar_xdigit_value@plt+0x11c90>
   25a7c:	ldr	r1, [pc, #116]	; 25af8 <g_unichar_xdigit_value@plt+0x11c94>
   25a80:	add	r0, pc, r0
   25a84:	add	r1, pc, r1
   25a88:	bl	13c9c <g_dgettext@plt>
   25a8c:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   25a90:	mov	r0, #0
   25a94:	mov	r1, #0
   25a98:	mov	r2, r0
   25a9c:	mov	r3, r1
   25aa0:	pop	{r4, r5, r6, r7, r8, lr}
   25aa4:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   25aa8:	mov	r0, r5
   25aac:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   25ab0:	cmp	r0, #0
   25ab4:	beq	25a6c <g_unichar_xdigit_value@plt+0x11c08>
   25ab8:	ldr	r0, [r4, #12]
   25abc:	mov	r2, r6
   25ac0:	mov	r3, #1
   25ac4:	mov	r1, r0
   25ac8:	bl	13e40 <mpfr_set4@plt>
   25acc:	mov	r0, r4
   25ad0:	pop	{r4, r5, r6, r7, r8, pc}
   25ad4:	ldr	r1, [pc, #32]	; 25afc <g_unichar_xdigit_value@plt+0x11c98>
   25ad8:	ldr	r2, [pc, #32]	; 25b00 <g_unichar_xdigit_value@plt+0x11c9c>
   25adc:	add	r1, pc, r1
   25ae0:	add	r2, pc, r2
   25ae4:	add	r1, r1, #588	; 0x24c
   25ae8:	bl	13450 <g_return_if_fail_warning@plt>
   25aec:	mov	r0, r5
   25af0:	pop	{r4, r5, r6, r7, r8, pc}
   25af4:	andeq	r3, r1, r8, lsr #19
   25af8:			; <UNDEFINED> instruction: 0x00014eb0
   25afc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   25b00:	andeq	r2, r1, r4, lsl #12
   25b04:	push	{r3, r4, r5, lr}
   25b08:	subs	r5, r0, #0
   25b0c:	beq	25b30 <g_unichar_xdigit_value@plt+0x11ccc>
   25b10:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25b14:	ldr	r1, [r5, #12]
   25b18:	mov	r2, #0
   25b1c:	mov	r4, r0
   25b20:	ldr	r0, [r0, #12]
   25b24:	bl	13588 <mpc_conj@plt>
   25b28:	mov	r0, r4
   25b2c:	pop	{r3, r4, r5, pc}
   25b30:	ldr	r1, [pc, #24]	; 25b50 <g_unichar_xdigit_value@plt+0x11cec>
   25b34:	ldr	r2, [pc, #24]	; 25b54 <g_unichar_xdigit_value@plt+0x11cf0>
   25b38:	add	r1, pc, r1
   25b3c:	add	r2, pc, r2
   25b40:	add	r1, r1, #600	; 0x258
   25b44:	bl	13450 <g_return_if_fail_warning@plt>
   25b48:	mov	r0, r5
   25b4c:	pop	{r3, r4, r5, pc}
   25b50:	muleq	r1, r8, r6
   25b54:	andeq	r2, r1, r8, lsr #11
   25b58:	push	{r3, r4, r5, lr}
   25b5c:	subs	r5, r0, #0
   25b60:	beq	25b84 <g_unichar_xdigit_value@plt+0x11d20>
   25b64:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25b68:	ldr	r1, [r5, #12]
   25b6c:	mov	r2, #0
   25b70:	mov	r4, r0
   25b74:	ldr	r0, [r0, #12]
   25b78:	bl	24834 <g_unichar_xdigit_value@plt+0x109d0>
   25b7c:	mov	r0, r4
   25b80:	pop	{r3, r4, r5, pc}
   25b84:	ldr	r1, [pc, #24]	; 25ba4 <g_unichar_xdigit_value@plt+0x11d40>
   25b88:	ldr	r2, [pc, #24]	; 25ba8 <g_unichar_xdigit_value@plt+0x11d44>
   25b8c:	add	r1, pc, r1
   25b90:	add	r2, pc, r2
   25b94:	add	r1, r1, #620	; 0x26c
   25b98:	bl	13450 <g_return_if_fail_warning@plt>
   25b9c:	mov	r0, r5
   25ba0:	pop	{r3, r4, r5, pc}
   25ba4:	andeq	r4, r1, r4, asr #12
   25ba8:	andeq	r2, r1, r4, asr r5
   25bac:	push	{r3, r4, r5, lr}
   25bb0:	subs	r5, r0, #0
   25bb4:	beq	25bdc <g_unichar_xdigit_value@plt+0x11d78>
   25bb8:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25bbc:	ldr	r1, [r5, #12]
   25bc0:	mov	r2, #0
   25bc4:	add	r1, r1, #16
   25bc8:	mov	r4, r0
   25bcc:	ldr	r0, [r0, #12]
   25bd0:	bl	24834 <g_unichar_xdigit_value@plt+0x109d0>
   25bd4:	mov	r0, r4
   25bd8:	pop	{r3, r4, r5, pc}
   25bdc:	ldr	r1, [pc, #24]	; 25bfc <g_unichar_xdigit_value@plt+0x11d98>
   25be0:	ldr	r2, [pc, #24]	; 25c00 <g_unichar_xdigit_value@plt+0x11d9c>
   25be4:	add	r1, pc, r1
   25be8:	add	r2, pc, r2
   25bec:	add	r1, r1, #644	; 0x284
   25bf0:	bl	13450 <g_return_if_fail_warning@plt>
   25bf4:	mov	r0, r5
   25bf8:	pop	{r3, r4, r5, pc}
   25bfc:	andeq	r4, r1, ip, ror #11
   25c00:	strdeq	r2, [r1], -ip
   25c04:	push	{r3, r4, r5, lr}
   25c08:	subs	r5, r0, #0
   25c0c:	beq	25c40 <g_unichar_xdigit_value@plt+0x11ddc>
   25c10:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25c14:	mov	r1, #0
   25c18:	mov	r4, r0
   25c1c:	ldr	r0, [r0, #12]
   25c20:	add	r0, r0, #16
   25c24:	bl	13b34 <mpfr_set_zero@plt>
   25c28:	ldr	r1, [r5, #12]
   25c2c:	ldr	r0, [r4, #12]
   25c30:	mov	r2, #1
   25c34:	bl	135dc <mpfr_rint@plt>
   25c38:	mov	r0, r4
   25c3c:	pop	{r3, r4, r5, pc}
   25c40:	ldr	r1, [pc, #24]	; 25c60 <g_unichar_xdigit_value@plt+0x11dfc>
   25c44:	ldr	r2, [pc, #24]	; 25c64 <g_unichar_xdigit_value@plt+0x11e00>
   25c48:	add	r1, pc, r1
   25c4c:	add	r2, pc, r2
   25c50:	add	r1, r1, #672	; 0x2a0
   25c54:	bl	13450 <g_return_if_fail_warning@plt>
   25c58:	mov	r0, r5
   25c5c:	pop	{r3, r4, r5, pc}
   25c60:	andeq	r4, r1, r8, lsl #11
   25c64:	muleq	r1, r8, r4
   25c68:	push	{r3, r4, r5, lr}
   25c6c:	subs	r5, r0, #0
   25c70:	beq	25ca4 <g_unichar_xdigit_value@plt+0x11e40>
   25c74:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25c78:	mov	r1, #0
   25c7c:	mov	r4, r0
   25c80:	ldr	r0, [r0, #12]
   25c84:	add	r0, r0, #16
   25c88:	bl	13b34 <mpfr_set_zero@plt>
   25c8c:	ldr	r1, [r5, #12]
   25c90:	ldr	r0, [r4, #12]
   25c94:	mov	r2, #0
   25c98:	bl	1384c <mpfr_frac@plt>
   25c9c:	mov	r0, r4
   25ca0:	pop	{r3, r4, r5, pc}
   25ca4:	ldr	r1, [pc, #24]	; 25cc4 <g_unichar_xdigit_value@plt+0x11e60>
   25ca8:	ldr	r2, [pc, #24]	; 25cc8 <g_unichar_xdigit_value@plt+0x11e64>
   25cac:	add	r1, pc, r1
   25cb0:	add	r2, pc, r2
   25cb4:	add	r1, r1, #700	; 0x2bc
   25cb8:	bl	13450 <g_return_if_fail_warning@plt>
   25cbc:	mov	r0, r5
   25cc0:	pop	{r3, r4, r5, pc}
   25cc4:	andeq	r4, r1, r4, lsr #10
   25cc8:	andeq	r2, r1, r4, lsr r4
   25ccc:	push	{r3, r4, r5, lr}
   25cd0:	subs	r5, r0, #0
   25cd4:	beq	25d08 <g_unichar_xdigit_value@plt+0x11ea4>
   25cd8:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25cdc:	mov	r1, #0
   25ce0:	mov	r4, r0
   25ce4:	ldr	r0, [r0, #12]
   25ce8:	add	r0, r0, #16
   25cec:	bl	13b34 <mpfr_set_zero@plt>
   25cf0:	ldr	r1, [r5, #12]
   25cf4:	ldr	r0, [r4, #12]
   25cf8:	mov	r2, #3
   25cfc:	bl	135dc <mpfr_rint@plt>
   25d00:	mov	r0, r4
   25d04:	pop	{r3, r4, r5, pc}
   25d08:	ldr	r1, [pc, #24]	; 25d28 <g_unichar_xdigit_value@plt+0x11ec4>
   25d0c:	ldr	r2, [pc, #24]	; 25d2c <g_unichar_xdigit_value@plt+0x11ec8>
   25d10:	add	r1, pc, r1
   25d14:	add	r2, pc, r2
   25d18:	add	r1, r1, #728	; 0x2d8
   25d1c:	bl	13450 <g_return_if_fail_warning@plt>
   25d20:	mov	r0, r5
   25d24:	pop	{r3, r4, r5, pc}
   25d28:	andeq	r4, r1, r0, asr #9
   25d2c:	ldrdeq	r2, [r1], -r0
   25d30:	push	{r3, r4, r5, lr}
   25d34:	subs	r5, r0, #0
   25d38:	beq	25d6c <g_unichar_xdigit_value@plt+0x11f08>
   25d3c:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25d40:	mov	r1, #0
   25d44:	mov	r4, r0
   25d48:	ldr	r0, [r0, #12]
   25d4c:	add	r0, r0, #16
   25d50:	bl	13b34 <mpfr_set_zero@plt>
   25d54:	ldr	r1, [r5, #12]
   25d58:	ldr	r0, [r4, #12]
   25d5c:	mov	r2, #2
   25d60:	bl	135dc <mpfr_rint@plt>
   25d64:	mov	r0, r4
   25d68:	pop	{r3, r4, r5, pc}
   25d6c:	ldr	r1, [pc, #24]	; 25d8c <g_unichar_xdigit_value@plt+0x11f28>
   25d70:	ldr	r2, [pc, #24]	; 25d90 <g_unichar_xdigit_value@plt+0x11f2c>
   25d74:	add	r1, pc, r1
   25d78:	add	r2, pc, r2
   25d7c:	add	r1, r1, #744	; 0x2e8
   25d80:	bl	13450 <g_return_if_fail_warning@plt>
   25d84:	mov	r0, r5
   25d88:	pop	{r3, r4, r5, pc}
   25d8c:	andeq	r4, r1, ip, asr r4
   25d90:	andeq	r2, r1, ip, ror #6
   25d94:	push	{r3, r4, r5, lr}
   25d98:	subs	r5, r0, #0
   25d9c:	beq	25dd0 <g_unichar_xdigit_value@plt+0x11f6c>
   25da0:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25da4:	mov	r1, #0
   25da8:	mov	r4, r0
   25dac:	ldr	r0, [r0, #12]
   25db0:	add	r0, r0, #16
   25db4:	bl	13b34 <mpfr_set_zero@plt>
   25db8:	ldr	r1, [r5, #12]
   25dbc:	ldr	r0, [r4, #12]
   25dc0:	mvn	r2, #0
   25dc4:	bl	135dc <mpfr_rint@plt>
   25dc8:	mov	r0, r4
   25dcc:	pop	{r3, r4, r5, pc}
   25dd0:	ldr	r1, [pc, #24]	; 25df0 <g_unichar_xdigit_value@plt+0x11f8c>
   25dd4:	ldr	r2, [pc, #24]	; 25df4 <g_unichar_xdigit_value@plt+0x11f90>
   25dd8:	add	r1, pc, r1
   25ddc:	add	r2, pc, r2
   25de0:	add	r1, r1, #760	; 0x2f8
   25de4:	bl	13450 <g_return_if_fail_warning@plt>
   25de8:	mov	r0, r5
   25dec:	pop	{r3, r4, r5, pc}
   25df0:	strdeq	r4, [r1], -r8
   25df4:	andeq	r2, r1, r8, lsl #6
   25df8:	push	{r3, r4, r5, lr}
   25dfc:	subs	r5, r0, #0
   25e00:	beq	25e3c <g_unichar_xdigit_value@plt+0x11fd8>
   25e04:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25e08:	mov	r2, #0
   25e0c:	mov	r3, r2
   25e10:	mov	r1, #1
   25e14:	mov	r4, r0
   25e18:	ldr	r0, [r0, #12]
   25e1c:	bl	134b0 <mpc_set_si_si@plt>
   25e20:	ldr	r0, [r4, #12]
   25e24:	ldr	r2, [r5, #12]
   25e28:	mov	r3, #0
   25e2c:	mov	r1, r0
   25e30:	bl	13a74 <mpc_fr_div@plt>
   25e34:	mov	r0, r4
   25e38:	pop	{r3, r4, r5, pc}
   25e3c:	ldr	r1, [pc, #24]	; 25e5c <g_unichar_xdigit_value@plt+0x11ff8>
   25e40:	ldr	r2, [pc, #24]	; 25e60 <g_unichar_xdigit_value@plt+0x11ffc>
   25e44:	add	r1, pc, r1
   25e48:	add	r2, pc, r2
   25e4c:	add	r1, r1, #776	; 0x308
   25e50:	bl	13450 <g_return_if_fail_warning@plt>
   25e54:	mov	r0, r5
   25e58:	pop	{r3, r4, r5, pc}
   25e5c:	andeq	r4, r1, ip, lsl #7
   25e60:	muleq	r1, ip, r2
   25e64:	push	{r3, r4, r5, lr}
   25e68:	subs	r5, r0, #0
   25e6c:	beq	25e90 <g_unichar_xdigit_value@plt+0x1202c>
   25e70:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25e74:	ldr	r1, [r5, #12]
   25e78:	mov	r2, #0
   25e7c:	mov	r4, r0
   25e80:	ldr	r0, [r0, #12]
   25e84:	bl	13900 <mpc_exp@plt>
   25e88:	mov	r0, r4
   25e8c:	pop	{r3, r4, r5, pc}
   25e90:	ldr	r1, [pc, #24]	; 25eb0 <g_unichar_xdigit_value@plt+0x1204c>
   25e94:	ldr	r2, [pc, #24]	; 25eb4 <g_unichar_xdigit_value@plt+0x12050>
   25e98:	add	r1, pc, r1
   25e9c:	add	r2, pc, r2
   25ea0:	add	r1, r1, #796	; 0x31c
   25ea4:	bl	13450 <g_return_if_fail_warning@plt>
   25ea8:	mov	r0, r5
   25eac:	pop	{r3, r4, r5, pc}
   25eb0:	andeq	r4, r1, r8, lsr r3
   25eb4:	andeq	r2, r1, r8, asr #4
   25eb8:	push	{r4, r5, r6, lr}
   25ebc:	subs	r6, r0, #0
   25ec0:	mov	r4, r2
   25ec4:	mov	r5, r3
   25ec8:	beq	25f88 <g_unichar_xdigit_value@plt+0x12124>
   25ecc:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   25ed0:	cmp	r0, #0
   25ed4:	beq	25f18 <g_unichar_xdigit_value@plt+0x120b4>
   25ed8:	cmp	r4, #0
   25edc:	sbcs	r3, r5, #0
   25ee0:	bge	25f18 <g_unichar_xdigit_value@plt+0x120b4>
   25ee4:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   25ee8:	ldr	r0, [pc, #184]	; 25fa8 <g_unichar_xdigit_value@plt+0x12144>
   25eec:	ldr	r1, [pc, #184]	; 25fac <g_unichar_xdigit_value@plt+0x12148>
   25ef0:	add	r0, pc, r0
   25ef4:	add	r1, pc, r1
   25ef8:	bl	13c9c <g_dgettext@plt>
   25efc:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   25f00:	mov	r0, #0
   25f04:	mov	r1, #0
   25f08:	mov	r2, r0
   25f0c:	mov	r3, r1
   25f10:	pop	{r4, r5, r6, lr}
   25f14:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   25f18:	mov	r0, r6
   25f1c:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   25f20:	cmp	r0, #0
   25f24:	beq	25f64 <g_unichar_xdigit_value@plt+0x12100>
   25f28:	orrs	r3, r4, r5
   25f2c:	bne	25f64 <g_unichar_xdigit_value@plt+0x12100>
   25f30:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   25f34:	ldr	r0, [pc, #116]	; 25fb0 <g_unichar_xdigit_value@plt+0x1214c>
   25f38:	ldr	r1, [pc, #116]	; 25fb4 <g_unichar_xdigit_value@plt+0x12150>
   25f3c:	add	r0, pc, r0
   25f40:	add	r1, pc, r1
   25f44:	bl	13c9c <g_dgettext@plt>
   25f48:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   25f4c:	mov	r0, r4
   25f50:	mov	r1, r5
   25f54:	mov	r2, r4
   25f58:	mov	r3, r5
   25f5c:	pop	{r4, r5, r6, lr}
   25f60:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   25f64:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25f68:	ldr	r1, [r6, #12]
   25f6c:	mov	r2, r4
   25f70:	mov	r3, #0
   25f74:	mov	r5, r0
   25f78:	ldr	r0, [r0, #12]
   25f7c:	bl	13a38 <mpc_pow_si@plt>
   25f80:	mov	r0, r5
   25f84:	pop	{r4, r5, r6, pc}
   25f88:	ldr	r1, [pc, #40]	; 25fb8 <g_unichar_xdigit_value@plt+0x12154>
   25f8c:	ldr	r2, [pc, #40]	; 25fbc <g_unichar_xdigit_value@plt+0x12158>
   25f90:	add	r1, pc, r1
   25f94:	add	r2, pc, r2
   25f98:	add	r1, r1, #812	; 0x32c
   25f9c:	bl	13450 <g_return_if_fail_warning@plt>
   25fa0:	mov	r0, r6
   25fa4:	pop	{r4, r5, r6, pc}
   25fa8:	andeq	r3, r1, r8, lsr r5
   25fac:	andeq	r4, r1, r0, ror #20
   25fb0:	andeq	r3, r1, ip, ror #9
   25fb4:	andeq	r4, r1, ip, asr #20
   25fb8:	andeq	r4, r1, r0, asr #4
   25fbc:	andeq	r2, r1, r0, asr r1
   25fc0:	ldr	ip, [pc, #528]	; 261d8 <g_unichar_xdigit_value@plt+0x12374>
   25fc4:	ldr	r1, [pc, #528]	; 261dc <g_unichar_xdigit_value@plt+0x12378>
   25fc8:	add	ip, pc, ip
   25fcc:	push	{r4, r5, r6, r7, r8, r9, lr}
   25fd0:	mov	r5, r3
   25fd4:	ldr	r7, [ip, r1]
   25fd8:	mov	r3, ip
   25fdc:	sub	sp, sp, #28
   25fe0:	subs	r9, r0, #0
   25fe4:	mov	r4, r2
   25fe8:	ldr	r3, [r7]
   25fec:	str	r3, [sp, #20]
   25ff0:	beq	26180 <g_unichar_xdigit_value@plt+0x1231c>
   25ff4:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   25ff8:	cmp	r4, #0
   25ffc:	sbcs	r3, r5, #0
   26000:	mov	r6, r0
   26004:	blt	261a0 <g_unichar_xdigit_value@plt+0x1233c>
   26008:	orrs	r3, r4, r5
   2600c:	beq	260bc <g_unichar_xdigit_value@plt+0x12258>
   26010:	ldr	r0, [r6, #12]
   26014:	mov	r2, #0
   26018:	ldr	r1, [r9, #12]
   2601c:	mov	r8, r4
   26020:	bl	13990 <mpc_set@plt>
   26024:	mov	r0, r9
   26028:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   2602c:	cmp	r0, #0
   26030:	beq	2610c <g_unichar_xdigit_value@plt+0x122a8>
   26034:	mov	r3, #0
   26038:	str	r3, [sp, #4]
   2603c:	str	r3, [sp, #8]
   26040:	add	r5, sp, #4
   26044:	str	r3, [sp, #12]
   26048:	str	r3, [sp, #16]
   2604c:	bl	251f0 <g_unichar_xdigit_value@plt+0x1138c>
   26050:	mov	r1, r0
   26054:	mov	r0, r5
   26058:	bl	1375c <mpfr_init2@plt>
   2605c:	mov	r2, #0
   26060:	mov	r1, r8
   26064:	mov	r3, r2
   26068:	mov	r0, r5
   2606c:	bl	13bf4 <mpfr_set_ui_2exp@plt>
   26070:	mov	r1, #1
   26074:	mov	r2, r5
   26078:	mov	r3, #0
   2607c:	mov	r0, r5
   26080:	bl	13714 <mpfr_ui_div@plt>
   26084:	ldr	r0, [r6, #12]
   26088:	mov	r2, r5
   2608c:	mov	r3, #0
   26090:	mov	r1, r0
   26094:	bl	135c4 <mpc_pow_fr@plt>
   26098:	mov	r0, r5
   2609c:	bl	13ad4 <mpfr_clear@plt>
   260a0:	mov	r0, r6
   260a4:	ldr	r2, [sp, #20]
   260a8:	ldr	r3, [r7]
   260ac:	cmp	r2, r3
   260b0:	bne	261d4 <g_unichar_xdigit_value@plt+0x12370>
   260b4:	add	sp, sp, #28
   260b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   260bc:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   260c0:	ldr	r0, [pc, #280]	; 261e0 <g_unichar_xdigit_value@plt+0x1237c>
   260c4:	ldr	r1, [pc, #280]	; 261e4 <g_unichar_xdigit_value@plt+0x12380>
   260c8:	add	r0, pc, r0
   260cc:	add	r1, pc, r1
   260d0:	bl	13c9c <g_dgettext@plt>
   260d4:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   260d8:	mov	r0, r4
   260dc:	mov	r1, r5
   260e0:	mov	r2, r4
   260e4:	mov	r3, r5
   260e8:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   260ec:	cmp	r6, #0
   260f0:	mov	r9, r0
   260f4:	moveq	r0, r0
   260f8:	beq	260a4 <g_unichar_xdigit_value@plt+0x12240>
   260fc:	mov	r0, r6
   26100:	bl	13b94 <g_object_unref@plt>
   26104:	mov	r0, r9
   26108:	b	260a4 <g_unichar_xdigit_value@plt+0x12240>
   2610c:	mov	r0, r9
   26110:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   26114:	cmp	r0, #0
   26118:	bne	26148 <g_unichar_xdigit_value@plt+0x122e4>
   2611c:	ldr	r0, [r6, #12]
   26120:	mov	r2, r8
   26124:	mov	r3, #0
   26128:	mov	r1, r0
   2612c:	bl	13cf0 <mpfr_root@plt>
   26130:	ldr	r0, [r6, #12]
   26134:	mov	r1, #0
   26138:	add	r0, r0, #16
   2613c:	bl	13b34 <mpfr_set_zero@plt>
   26140:	mov	r0, r6
   26144:	b	260a4 <g_unichar_xdigit_value@plt+0x12240>
   26148:	mov	r2, #1
   2614c:	and	r4, r4, r2
   26150:	cmp	r4, #0
   26154:	bne	2611c <g_unichar_xdigit_value@plt+0x122b8>
   26158:	add	r5, sp, #4
   2615c:	mov	r1, r4
   26160:	mov	r2, #16
   26164:	mov	r0, r5
   26168:	bl	13750 <memset@plt>
   2616c:	bl	251f0 <g_unichar_xdigit_value@plt+0x1138c>
   26170:	mov	r1, r0
   26174:	mov	r0, r5
   26178:	bl	1375c <mpfr_init2@plt>
   2617c:	b	2605c <g_unichar_xdigit_value@plt+0x121f8>
   26180:	ldr	r1, [pc, #96]	; 261e8 <g_unichar_xdigit_value@plt+0x12384>
   26184:	ldr	r2, [pc, #96]	; 261ec <g_unichar_xdigit_value@plt+0x12388>
   26188:	add	r1, pc, r1
   2618c:	add	r2, pc, r2
   26190:	add	r1, r1, #836	; 0x344
   26194:	bl	13450 <g_return_if_fail_warning@plt>
   26198:	mov	r0, r9
   2619c:	b	260a4 <g_unichar_xdigit_value@plt+0x12240>
   261a0:	ldr	r0, [r6, #12]
   261a4:	mov	r1, #1
   261a8:	ldr	r2, [r9, #12]
   261ac:	mov	r3, #0
   261b0:	bl	137a4 <mpc_ui_div@plt>
   261b4:	cmp	r5, #-2147483648	; 0x80000000
   261b8:	cmpeq	r4, #0
   261bc:	moveq	r8, #0
   261c0:	beq	26024 <g_unichar_xdigit_value@plt+0x121c0>
   261c4:	rsbs	r4, r4, #0
   261c8:	rsc	r5, r5, #0
   261cc:	mov	r8, r4
   261d0:	b	26024 <g_unichar_xdigit_value@plt+0x121c0>
   261d4:	bl	13978 <__stack_chk_fail@plt>
   261d8:	andeq	fp, r2, r0, lsr r0
   261dc:	muleq	r0, r0, r3
   261e0:	andeq	r3, r1, r0, ror #6
   261e4:	andeq	r3, r1, r0, ror r3
   261e8:	andeq	r4, r1, r8, asr #32
   261ec:	andeq	r1, r1, r8, asr pc
   261f0:	push	{r4, lr}
   261f4:	subs	r4, r0, #0
   261f8:	beq	2620c <g_unichar_xdigit_value@plt+0x123a8>
   261fc:	mov	r2, #2
   26200:	mov	r3, #0
   26204:	pop	{r4, lr}
   26208:	b	25fc0 <g_unichar_xdigit_value@plt+0x1215c>
   2620c:	ldr	r1, [pc, #24]	; 2622c <g_unichar_xdigit_value@plt+0x123c8>
   26210:	ldr	r2, [pc, #24]	; 26230 <g_unichar_xdigit_value@plt+0x123cc>
   26214:	add	r1, pc, r1
   26218:	add	r2, pc, r2
   2621c:	add	r1, r1, #848	; 0x350
   26220:	bl	13450 <g_return_if_fail_warning@plt>
   26224:	mov	r0, r4
   26228:	pop	{r4, pc}
   2622c:			; <UNDEFINED> instruction: 0x00013fbc
   26230:	andeq	r1, r1, ip, asr #29
   26234:	push	{r4, r5, r6, lr}
   26238:	subs	r5, r0, #0
   2623c:	mov	r4, r1
   26240:	beq	26308 <g_unichar_xdigit_value@plt+0x124a4>
   26244:	cmp	r1, #0
   26248:	beq	26328 <g_unichar_xdigit_value@plt+0x124c4>
   2624c:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   26250:	cmp	r0, #0
   26254:	bne	2629c <g_unichar_xdigit_value@plt+0x12438>
   26258:	mov	r0, r5
   2625c:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   26260:	cmp	r0, #0
   26264:	bne	262e0 <g_unichar_xdigit_value@plt+0x1247c>
   26268:	mov	r0, r5
   2626c:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   26270:	cmp	r0, #0
   26274:	beq	2634c <g_unichar_xdigit_value@plt+0x124e8>
   26278:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   2627c:	ldr	r1, [r5, #12]
   26280:	mov	r3, #0
   26284:	ldr	r2, [r4, #12]
   26288:	mov	r6, r0
   2628c:	ldr	r0, [r0, #12]
   26290:	bl	13e34 <mpc_pow@plt>
   26294:	mov	r0, r6
   26298:	pop	{r4, r5, r6, pc}
   2629c:	mov	r0, r4
   262a0:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   262a4:	cmp	r0, #0
   262a8:	beq	26258 <g_unichar_xdigit_value@plt+0x123f4>
   262ac:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   262b0:	ldr	r0, [pc, #276]	; 263cc <g_unichar_xdigit_value@plt+0x12568>
   262b4:	ldr	r1, [pc, #276]	; 263d0 <g_unichar_xdigit_value@plt+0x1256c>
   262b8:	add	r0, pc, r0
   262bc:	add	r1, pc, r1
   262c0:	bl	13c9c <g_dgettext@plt>
   262c4:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   262c8:	mov	r0, #0
   262cc:	mov	r1, #0
   262d0:	mov	r2, r0
   262d4:	mov	r3, r1
   262d8:	pop	{r4, r5, r6, lr}
   262dc:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   262e0:	mov	r0, r4
   262e4:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   262e8:	cmp	r0, #0
   262ec:	beq	26268 <g_unichar_xdigit_value@plt+0x12404>
   262f0:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   262f4:	ldr	r0, [pc, #216]	; 263d4 <g_unichar_xdigit_value@plt+0x12570>
   262f8:	ldr	r1, [pc, #216]	; 263d8 <g_unichar_xdigit_value@plt+0x12574>
   262fc:	add	r0, pc, r0
   26300:	add	r1, pc, r1
   26304:	b	262c0 <g_unichar_xdigit_value@plt+0x1245c>
   26308:	ldr	r1, [pc, #204]	; 263dc <g_unichar_xdigit_value@plt+0x12578>
   2630c:	ldr	r2, [pc, #204]	; 263e0 <g_unichar_xdigit_value@plt+0x1257c>
   26310:	add	r1, pc, r1
   26314:	add	r2, pc, r2
   26318:	add	r1, r1, #860	; 0x35c
   2631c:	bl	13450 <g_return_if_fail_warning@plt>
   26320:	mov	r0, r5
   26324:	pop	{r4, r5, r6, pc}
   26328:	ldr	r1, [pc, #180]	; 263e4 <g_unichar_xdigit_value@plt+0x12580>
   2632c:	mov	r0, r4
   26330:	ldr	r2, [pc, #176]	; 263e8 <g_unichar_xdigit_value@plt+0x12584>
   26334:	add	r1, pc, r1
   26338:	add	r2, pc, r2
   2633c:	add	r1, r1, #860	; 0x35c
   26340:	bl	13450 <g_return_if_fail_warning@plt>
   26344:	mov	r0, r4
   26348:	pop	{r4, r5, r6, pc}
   2634c:	mov	r0, r4
   26350:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   26354:	cmp	r0, #0
   26358:	bne	26278 <g_unichar_xdigit_value@plt+0x12414>
   2635c:	mov	r0, r4
   26360:	bl	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   26364:	cmp	r0, #0
   26368:	bne	26278 <g_unichar_xdigit_value@plt+0x12414>
   2636c:	mov	r0, r4
   26370:	bl	25df8 <g_unichar_xdigit_value@plt+0x11f94>
   26374:	mov	r6, r0
   26378:	bl	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   2637c:	cmp	r0, #0
   26380:	bne	26398 <g_unichar_xdigit_value@plt+0x12534>
   26384:	cmp	r6, #0
   26388:	beq	26278 <g_unichar_xdigit_value@plt+0x12414>
   2638c:	mov	r0, r6
   26390:	bl	13b94 <g_object_unref@plt>
   26394:	b	26278 <g_unichar_xdigit_value@plt+0x12414>
   26398:	mov	r0, r6
   2639c:	bl	24ca0 <g_unichar_xdigit_value@plt+0x10e3c>
   263a0:	mov	r2, r0
   263a4:	mov	r3, r1
   263a8:	mov	r0, r5
   263ac:	bl	25fc0 <g_unichar_xdigit_value@plt+0x1215c>
   263b0:	cmp	r6, #0
   263b4:	mov	r4, r0
   263b8:	beq	26344 <g_unichar_xdigit_value@plt+0x124e0>
   263bc:	mov	r0, r6
   263c0:	bl	13b94 <g_object_unref@plt>
   263c4:	mov	r0, r4
   263c8:	pop	{r4, r5, r6, pc}
   263cc:	andeq	r3, r1, r0, ror r1
   263d0:	muleq	r1, r8, r6
   263d4:	andeq	r3, r1, ip, lsr #2
   263d8:	andeq	r4, r1, ip, lsl #13
   263dc:	andeq	r3, r1, r0, asr #29
   263e0:	ldrdeq	r1, [r1], -r0
   263e4:	muleq	r1, ip, lr
   263e8:	andeq	r4, r1, r4, lsr #11
   263ec:	push	{r4, r5, r6, lr}
   263f0:	subs	r4, r0, #0
   263f4:	beq	26498 <g_unichar_xdigit_value@plt+0x12634>
   263f8:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   263fc:	subs	r6, r0, #0
   26400:	bne	26434 <g_unichar_xdigit_value@plt+0x125d0>
   26404:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   26408:	mov	r2, r6
   2640c:	ldr	r1, [r4, #12]
   26410:	mov	r5, r0
   26414:	ldr	r0, [r0, #12]
   26418:	bl	13504 <mpc_log@plt>
   2641c:	mov	r0, r4
   26420:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   26424:	subs	r6, r0, #0
   26428:	beq	26468 <g_unichar_xdigit_value@plt+0x12604>
   2642c:	mov	r0, r5
   26430:	pop	{r4, r5, r6, pc}
   26434:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   26438:	ldr	r0, [pc, #120]	; 264b8 <g_unichar_xdigit_value@plt+0x12654>
   2643c:	ldr	r1, [pc, #120]	; 264bc <g_unichar_xdigit_value@plt+0x12658>
   26440:	add	r0, pc, r0
   26444:	add	r1, pc, r1
   26448:	bl	13c9c <g_dgettext@plt>
   2644c:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   26450:	mov	r0, #0
   26454:	mov	r1, #0
   26458:	mov	r2, r0
   2645c:	mov	r3, r1
   26460:	pop	{r4, r5, r6, lr}
   26464:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26468:	mov	r0, r4
   2646c:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   26470:	cmp	r0, #0
   26474:	beq	2642c <g_unichar_xdigit_value@plt+0x125c8>
   26478:	ldr	r0, [r5, #12]
   2647c:	mov	r2, r6
   26480:	mov	r3, #1
   26484:	add	r0, r0, #16
   26488:	mov	r1, r0
   2648c:	bl	13e40 <mpfr_set4@plt>
   26490:	mov	r0, r5
   26494:	pop	{r4, r5, r6, pc}
   26498:	ldr	r1, [pc, #32]	; 264c0 <g_unichar_xdigit_value@plt+0x1265c>
   2649c:	ldr	r2, [pc, #32]	; 264c4 <g_unichar_xdigit_value@plt+0x12660>
   264a0:	add	r1, pc, r1
   264a4:	add	r2, pc, r2
   264a8:	add	r1, r1, #876	; 0x36c
   264ac:	bl	13450 <g_return_if_fail_warning@plt>
   264b0:	mov	r0, r4
   264b4:	pop	{r4, r5, r6, pc}
   264b8:	andeq	r2, r1, r8, ror #31
   264bc:	andeq	r4, r1, ip, ror #10
   264c0:	andeq	r3, r1, r0, lsr sp
   264c4:	andeq	r1, r1, r0, asr #24
   264c8:	push	{r4, r5, r6, lr}
   264cc:	subs	r6, r0, #0
   264d0:	mov	r4, r1
   264d4:	beq	26504 <g_unichar_xdigit_value@plt+0x126a0>
   264d8:	cmp	r1, #0
   264dc:	beq	26524 <g_unichar_xdigit_value@plt+0x126c0>
   264e0:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   264e4:	ldr	r1, [r6, #12]
   264e8:	mov	r3, #0
   264ec:	ldr	r2, [r4, #12]
   264f0:	mov	r5, r0
   264f4:	ldr	r0, [r0, #12]
   264f8:	bl	137e0 <mpc_add@plt>
   264fc:	mov	r0, r5
   26500:	pop	{r4, r5, r6, pc}
   26504:	ldr	r1, [pc, #60]	; 26548 <g_unichar_xdigit_value@plt+0x126e4>
   26508:	ldr	r2, [pc, #60]	; 2654c <g_unichar_xdigit_value@plt+0x126e8>
   2650c:	add	r1, pc, r1
   26510:	add	r2, pc, r2
   26514:	add	r1, r1, #888	; 0x378
   26518:	bl	13450 <g_return_if_fail_warning@plt>
   2651c:	mov	r0, r6
   26520:	pop	{r4, r5, r6, pc}
   26524:	ldr	r1, [pc, #36]	; 26550 <g_unichar_xdigit_value@plt+0x126ec>
   26528:	mov	r0, r4
   2652c:	ldr	r2, [pc, #32]	; 26554 <g_unichar_xdigit_value@plt+0x126f0>
   26530:	add	r1, pc, r1
   26534:	add	r2, pc, r2
   26538:	add	r1, r1, #888	; 0x378
   2653c:	bl	13450 <g_return_if_fail_warning@plt>
   26540:	mov	r0, r4
   26544:	pop	{r4, r5, r6, pc}
   26548:	andeq	r3, r1, r4, asr #25
   2654c:	ldrdeq	r1, [r1], -r4
   26550:	andeq	r3, r1, r0, lsr #25
   26554:	andeq	r4, r1, r8, lsr #7
   26558:	push	{r4, r5, r6, lr}
   2655c:	subs	r6, r0, #0
   26560:	mov	r4, r1
   26564:	beq	26594 <g_unichar_xdigit_value@plt+0x12730>
   26568:	cmp	r1, #0
   2656c:	beq	265b4 <g_unichar_xdigit_value@plt+0x12750>
   26570:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   26574:	ldr	r1, [r6, #12]
   26578:	mov	r3, #0
   2657c:	ldr	r2, [r4, #12]
   26580:	mov	r5, r0
   26584:	ldr	r0, [r0, #12]
   26588:	bl	13720 <mpc_sub@plt>
   2658c:	mov	r0, r5
   26590:	pop	{r4, r5, r6, pc}
   26594:	ldr	r1, [pc, #60]	; 265d8 <g_unichar_xdigit_value@plt+0x12774>
   26598:	ldr	r2, [pc, #60]	; 265dc <g_unichar_xdigit_value@plt+0x12778>
   2659c:	add	r1, pc, r1
   265a0:	add	r2, pc, r2
   265a4:	add	r1, r1, #900	; 0x384
   265a8:	bl	13450 <g_return_if_fail_warning@plt>
   265ac:	mov	r0, r6
   265b0:	pop	{r4, r5, r6, pc}
   265b4:	ldr	r1, [pc, #36]	; 265e0 <g_unichar_xdigit_value@plt+0x1277c>
   265b8:	mov	r0, r4
   265bc:	ldr	r2, [pc, #32]	; 265e4 <g_unichar_xdigit_value@plt+0x12780>
   265c0:	add	r1, pc, r1
   265c4:	add	r2, pc, r2
   265c8:	add	r1, r1, #900	; 0x384
   265cc:	bl	13450 <g_return_if_fail_warning@plt>
   265d0:	mov	r0, r4
   265d4:	pop	{r4, r5, r6, pc}
   265d8:	andeq	r3, r1, r4, lsr ip
   265dc:	andeq	r1, r1, r4, asr #22
   265e0:	andeq	r3, r1, r0, lsl ip
   265e4:	andeq	r4, r1, r8, lsl r3
   265e8:	push	{r3, r4, r5, lr}
   265ec:	subs	r5, r0, #0
   265f0:	beq	26628 <g_unichar_xdigit_value@plt+0x127c4>
   265f4:	bl	25ccc <g_unichar_xdigit_value@plt+0x11e68>
   265f8:	mov	r4, r0
   265fc:	mov	r0, r5
   26600:	mov	r1, r4
   26604:	bl	26558 <g_unichar_xdigit_value@plt+0x126f4>
   26608:	cmp	r4, #0
   2660c:	mov	r5, r0
   26610:	beq	26624 <g_unichar_xdigit_value@plt+0x127c0>
   26614:	mov	r0, r4
   26618:	bl	13b94 <g_object_unref@plt>
   2661c:	mov	r0, r5
   26620:	pop	{r3, r4, r5, pc}
   26624:	pop	{r3, r4, r5, pc}
   26628:	ldr	r1, [pc, #24]	; 26648 <g_unichar_xdigit_value@plt+0x127e4>
   2662c:	ldr	r2, [pc, #24]	; 2664c <g_unichar_xdigit_value@plt+0x127e8>
   26630:	add	r1, pc, r1
   26634:	add	r2, pc, r2
   26638:	add	r1, r1, #916	; 0x394
   2663c:	bl	13450 <g_return_if_fail_warning@plt>
   26640:	mov	r0, r5
   26644:	pop	{r3, r4, r5, pc}
   26648:	andeq	r3, r1, r0, lsr #23
   2664c:			; <UNDEFINED> instruction: 0x00011ab0
   26650:	push	{r4, r5, r6, lr}
   26654:	subs	r6, r0, #0
   26658:	mov	r4, r1
   2665c:	beq	2668c <g_unichar_xdigit_value@plt+0x12828>
   26660:	cmp	r1, #0
   26664:	beq	266ac <g_unichar_xdigit_value@plt+0x12848>
   26668:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   2666c:	ldr	r1, [r6, #12]
   26670:	mov	r3, #0
   26674:	ldr	r2, [r4, #12]
   26678:	mov	r5, r0
   2667c:	ldr	r0, [r0, #12]
   26680:	bl	1387c <mpc_mul@plt>
   26684:	mov	r0, r5
   26688:	pop	{r4, r5, r6, pc}
   2668c:	ldr	r1, [pc, #60]	; 266d0 <g_unichar_xdigit_value@plt+0x1286c>
   26690:	ldr	r2, [pc, #60]	; 266d4 <g_unichar_xdigit_value@plt+0x12870>
   26694:	add	r1, pc, r1
   26698:	add	r2, pc, r2
   2669c:	add	r1, r1, #940	; 0x3ac
   266a0:	bl	13450 <g_return_if_fail_warning@plt>
   266a4:	mov	r0, r6
   266a8:	pop	{r4, r5, r6, pc}
   266ac:	ldr	r1, [pc, #36]	; 266d8 <g_unichar_xdigit_value@plt+0x12874>
   266b0:	mov	r0, r4
   266b4:	ldr	r2, [pc, #32]	; 266dc <g_unichar_xdigit_value@plt+0x12878>
   266b8:	add	r1, pc, r1
   266bc:	add	r2, pc, r2
   266c0:	add	r1, r1, #940	; 0x3ac
   266c4:	bl	13450 <g_return_if_fail_warning@plt>
   266c8:	mov	r0, r4
   266cc:	pop	{r4, r5, r6, pc}
   266d0:	andeq	r3, r1, ip, lsr fp
   266d4:	andeq	r1, r1, ip, asr #20
   266d8:	andeq	r3, r1, r8, lsl fp
   266dc:	andeq	r4, r1, r0, lsr #4
   266e0:	push	{r4, r5, r6, lr}
   266e4:	subs	r5, r0, #0
   266e8:	mov	r6, r2
   266ec:	beq	26714 <g_unichar_xdigit_value@plt+0x128b0>
   266f0:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   266f4:	ldr	r1, [r5, #12]
   266f8:	mov	r2, r6
   266fc:	mov	r3, #0
   26700:	mov	r4, r0
   26704:	ldr	r0, [r0, #12]
   26708:	bl	13ca8 <mpc_mul_si@plt>
   2670c:	mov	r0, r4
   26710:	pop	{r4, r5, r6, pc}
   26714:	ldr	r1, [pc, #24]	; 26734 <g_unichar_xdigit_value@plt+0x128d0>
   26718:	ldr	r2, [pc, #24]	; 26738 <g_unichar_xdigit_value@plt+0x128d4>
   2671c:	add	r1, pc, r1
   26720:	add	r2, pc, r2
   26724:	add	r1, r1, #956	; 0x3bc
   26728:	bl	13450 <g_return_if_fail_warning@plt>
   2672c:	mov	r0, r5
   26730:	pop	{r4, r5, r6, pc}
   26734:			; <UNDEFINED> instruction: 0x00013ab4
   26738:	andeq	r1, r1, r4, asr #19
   2673c:	ldr	r3, [pc, #504]	; 2693c <g_unichar_xdigit_value@plt+0x12ad8>
   26740:	ldr	r2, [pc, #504]	; 26940 <g_unichar_xdigit_value@plt+0x12adc>
   26744:	add	r3, pc, r3
   26748:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2674c:	subs	sl, r0, #0
   26750:	ldr	r9, [r3, r2]
   26754:	sub	sp, sp, #24
   26758:	ldr	r3, [r9]
   2675c:	str	r3, [sp, #20]
   26760:	beq	26884 <g_unichar_xdigit_value@plt+0x12a20>
   26764:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   26768:	cmp	r0, #0
   2676c:	bne	2686c <g_unichar_xdigit_value@plt+0x12a08>
   26770:	mov	r0, sl
   26774:	bl	24fc4 <g_unichar_xdigit_value@plt+0x11160>
   26778:	subs	r3, r0, #0
   2677c:	mov	r0, sl
   26780:	beq	26808 <g_unichar_xdigit_value@plt+0x129a4>
   26784:	bl	24ca0 <g_unichar_xdigit_value@plt+0x10e3c>
   26788:	mov	r6, r0
   2678c:	mov	r0, sl
   26790:	mov	r7, r1
   26794:	bl	133f0 <g_object_ref@plt>
   26798:	cmp	r6, #3
   2679c:	sbcs	r3, r7, #0
   267a0:	mov	r8, r0
   267a4:	blt	26854 <g_unichar_xdigit_value@plt+0x129f0>
   267a8:	adds	r6, r6, #1
   267ac:	mov	r4, #3
   267b0:	adc	r7, r7, #0
   267b4:	mov	r5, #0
   267b8:	mov	r2, #2
   267bc:	mov	r3, #0
   267c0:	b	267c8 <g_unichar_xdigit_value@plt+0x12964>
   267c4:	mov	r8, sl
   267c8:	mov	r0, r8
   267cc:	bl	266e0 <g_unichar_xdigit_value@plt+0x1287c>
   267d0:	cmp	r8, #0
   267d4:	mov	sl, r0
   267d8:	beq	267e4 <g_unichar_xdigit_value@plt+0x12980>
   267dc:	mov	r0, r8
   267e0:	bl	13b94 <g_object_unref@plt>
   267e4:	mov	r2, r4
   267e8:	adds	r4, r4, #1
   267ec:	mov	r3, r5
   267f0:	adc	r5, r5, #0
   267f4:	cmp	r5, r7
   267f8:	cmpeq	r4, r6
   267fc:	bne	267c4 <g_unichar_xdigit_value@plt+0x12960>
   26800:	mov	r0, sl
   26804:	b	26854 <g_unichar_xdigit_value@plt+0x129f0>
   26808:	str	r3, [sp, #4]
   2680c:	str	r3, [sp, #8]
   26810:	str	r3, [sp, #12]
   26814:	str	r3, [sp, #16]
   26818:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   2681c:	cmp	r0, #0
   26820:	beq	268a4 <g_unichar_xdigit_value@plt+0x12a40>
   26824:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   26828:	ldr	r0, [pc, #276]	; 26944 <g_unichar_xdigit_value@plt+0x12ae0>
   2682c:	ldr	r1, [pc, #276]	; 26948 <g_unichar_xdigit_value@plt+0x12ae4>
   26830:	add	r0, pc, r0
   26834:	add	r1, pc, r1
   26838:	bl	13c9c <g_dgettext@plt>
   2683c:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   26840:	mov	r0, #0
   26844:	mov	r1, #0
   26848:	mov	r2, r0
   2684c:	mov	r3, r1
   26850:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26854:	ldr	r2, [sp, #20]
   26858:	ldr	r3, [r9]
   2685c:	cmp	r2, r3
   26860:	bne	26938 <g_unichar_xdigit_value@plt+0x12ad4>
   26864:	add	sp, sp, #24
   26868:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2686c:	mov	r1, #0
   26870:	mov	r2, #0
   26874:	mov	r3, #0
   26878:	mov	r0, #1
   2687c:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26880:	b	26854 <g_unichar_xdigit_value@plt+0x129f0>
   26884:	ldr	r1, [pc, #192]	; 2694c <g_unichar_xdigit_value@plt+0x12ae8>
   26888:	ldr	r2, [pc, #192]	; 26950 <g_unichar_xdigit_value@plt+0x12aec>
   2688c:	add	r1, pc, r1
   26890:	add	r2, pc, r2
   26894:	add	r1, r1, #980	; 0x3d4
   26898:	bl	13450 <g_return_if_fail_warning@plt>
   2689c:	mov	r0, sl
   268a0:	b	26854 <g_unichar_xdigit_value@plt+0x129f0>
   268a4:	mov	r0, sl
   268a8:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   268ac:	cmp	r0, #0
   268b0:	bne	26824 <g_unichar_xdigit_value@plt+0x129c0>
   268b4:	mov	r1, #0
   268b8:	mov	r2, #0
   268bc:	mov	r3, #0
   268c0:	mov	r0, #1
   268c4:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   268c8:	mov	r4, r0
   268cc:	mov	r0, sl
   268d0:	mov	r1, r4
   268d4:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   268d8:	cmp	r4, #0
   268dc:	mov	r5, r0
   268e0:	beq	268ec <g_unichar_xdigit_value@plt+0x12a88>
   268e4:	mov	r0, r4
   268e8:	bl	13b94 <g_object_unref@plt>
   268ec:	bl	251f0 <g_unichar_xdigit_value@plt+0x1138c>
   268f0:	add	r4, sp, #4
   268f4:	mov	r1, r0
   268f8:	mov	r0, r4
   268fc:	bl	1375c <mpfr_init2@plt>
   26900:	mov	r2, #0
   26904:	ldr	r1, [r5, #12]
   26908:	mov	r0, r4
   2690c:	bl	13660 <mpfr_gamma@plt>
   26910:	mov	r1, #0
   26914:	mov	r0, r4
   26918:	bl	25898 <g_unichar_xdigit_value@plt+0x11a34>
   2691c:	mov	sl, r0
   26920:	mov	r0, r4
   26924:	bl	13ad4 <mpfr_clear@plt>
   26928:	mov	r0, r5
   2692c:	bl	13b94 <g_object_unref@plt>
   26930:	mov	r0, sl
   26934:	b	26854 <g_unichar_xdigit_value@plt+0x129f0>
   26938:	bl	13978 <__stack_chk_fail@plt>
   2693c:			; <UNDEFINED> instruction: 0x0002a8b4
   26940:	muleq	r0, r0, r3
   26944:	strdeq	r2, [r1], -r8
   26948:	muleq	r1, ip, r1
   2694c:	andeq	r3, r1, r4, asr #18
   26950:	andeq	r1, r1, r4, asr r8
   26954:	push	{r4, r5, r6, r7, r8, lr}
   26958:	subs	r6, r0, #0
   2695c:	mov	r4, r1
   26960:	beq	269d4 <g_unichar_xdigit_value@plt+0x12b70>
   26964:	cmp	r1, #0
   26968:	beq	269f4 <g_unichar_xdigit_value@plt+0x12b90>
   2696c:	mov	r0, r1
   26970:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   26974:	subs	r7, r0, #0
   26978:	bne	269a0 <g_unichar_xdigit_value@plt+0x12b3c>
   2697c:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   26980:	ldr	r1, [r6, #12]
   26984:	mov	r3, r7
   26988:	ldr	r2, [r4, #12]
   2698c:	mov	r5, r0
   26990:	ldr	r0, [r0, #12]
   26994:	bl	13e1c <mpc_div@plt>
   26998:	mov	r0, r5
   2699c:	pop	{r4, r5, r6, r7, r8, pc}
   269a0:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   269a4:	ldr	r0, [pc, #108]	; 26a18 <g_unichar_xdigit_value@plt+0x12bb4>
   269a8:	ldr	r1, [pc, #108]	; 26a1c <g_unichar_xdigit_value@plt+0x12bb8>
   269ac:	add	r0, pc, r0
   269b0:	add	r1, pc, r1
   269b4:	bl	13c9c <g_dgettext@plt>
   269b8:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   269bc:	mov	r0, #0
   269c0:	mov	r1, #0
   269c4:	mov	r2, r0
   269c8:	mov	r3, r1
   269cc:	pop	{r4, r5, r6, r7, r8, lr}
   269d0:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   269d4:	ldr	r1, [pc, #68]	; 26a20 <g_unichar_xdigit_value@plt+0x12bbc>
   269d8:	ldr	r2, [pc, #68]	; 26a24 <g_unichar_xdigit_value@plt+0x12bc0>
   269dc:	add	r1, pc, r1
   269e0:	add	r2, pc, r2
   269e4:	add	r1, r1, #1000	; 0x3e8
   269e8:	bl	13450 <g_return_if_fail_warning@plt>
   269ec:	mov	r0, r6
   269f0:	pop	{r4, r5, r6, r7, r8, pc}
   269f4:	ldr	r1, [pc, #44]	; 26a28 <g_unichar_xdigit_value@plt+0x12bc4>
   269f8:	mov	r0, r4
   269fc:	ldr	r2, [pc, #40]	; 26a2c <g_unichar_xdigit_value@plt+0x12bc8>
   26a00:	add	r1, pc, r1
   26a04:	add	r2, pc, r2
   26a08:	add	r1, r1, #1000	; 0x3e8
   26a0c:	bl	13450 <g_return_if_fail_warning@plt>
   26a10:	mov	r0, r4
   26a14:	pop	{r4, r5, r6, r7, r8, pc}
   26a18:	andeq	r2, r1, ip, ror sl
   26a1c:	andeq	r4, r1, r8, asr r0
   26a20:	strdeq	r3, [r1], -r4
   26a24:	andeq	r1, r1, r4, lsl #14
   26a28:	ldrdeq	r3, [r1], -r0
   26a2c:	ldrdeq	r3, [r1], -r8
   26a30:	push	{r4, r5, r6, r7, r8, lr}
   26a34:	subs	r6, r0, #0
   26a38:	mov	r4, r2
   26a3c:	mov	r5, r3
   26a40:	beq	26b04 <g_unichar_xdigit_value@plt+0x12ca0>
   26a44:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   26a48:	cmp	r0, #0
   26a4c:	bne	26ac8 <g_unichar_xdigit_value@plt+0x12c64>
   26a50:	mov	r1, r5
   26a54:	mov	r2, #0
   26a58:	mov	r3, #0
   26a5c:	mov	r0, r4
   26a60:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26a64:	mov	r4, r0
   26a68:	mov	r0, r6
   26a6c:	bl	263ec <g_unichar_xdigit_value@plt+0x12588>
   26a70:	mov	r5, r0
   26a74:	mov	r0, r4
   26a78:	bl	263ec <g_unichar_xdigit_value@plt+0x12588>
   26a7c:	mov	r6, r0
   26a80:	mov	r0, r5
   26a84:	mov	r1, r6
   26a88:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   26a8c:	cmp	r6, #0
   26a90:	mov	r7, r0
   26a94:	beq	26aa0 <g_unichar_xdigit_value@plt+0x12c3c>
   26a98:	mov	r0, r6
   26a9c:	bl	13b94 <g_object_unref@plt>
   26aa0:	cmp	r5, #0
   26aa4:	beq	26ab0 <g_unichar_xdigit_value@plt+0x12c4c>
   26aa8:	mov	r0, r5
   26aac:	bl	13b94 <g_object_unref@plt>
   26ab0:	cmp	r4, #0
   26ab4:	beq	26afc <g_unichar_xdigit_value@plt+0x12c98>
   26ab8:	mov	r0, r4
   26abc:	bl	13b94 <g_object_unref@plt>
   26ac0:	mov	r0, r7
   26ac4:	pop	{r4, r5, r6, r7, r8, pc}
   26ac8:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   26acc:	ldr	r0, [pc, #80]	; 26b24 <g_unichar_xdigit_value@plt+0x12cc0>
   26ad0:	ldr	r1, [pc, #80]	; 26b28 <g_unichar_xdigit_value@plt+0x12cc4>
   26ad4:	add	r0, pc, r0
   26ad8:	add	r1, pc, r1
   26adc:	bl	13c9c <g_dgettext@plt>
   26ae0:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   26ae4:	mov	r0, #0
   26ae8:	mov	r1, #0
   26aec:	mov	r2, r0
   26af0:	mov	r3, r1
   26af4:	pop	{r4, r5, r6, r7, r8, lr}
   26af8:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26afc:	mov	r0, r7
   26b00:	pop	{r4, r5, r6, r7, r8, pc}
   26b04:	ldr	r1, [pc, #32]	; 26b2c <g_unichar_xdigit_value@plt+0x12cc8>
   26b08:	ldr	r2, [pc, #32]	; 26b30 <g_unichar_xdigit_value@plt+0x12ccc>
   26b0c:	add	r1, pc, r1
   26b10:	add	r2, pc, r2
   26b14:	add	r1, r1, #1016	; 0x3f8
   26b18:	bl	13450 <g_return_if_fail_warning@plt>
   26b1c:	mov	r0, r6
   26b20:	pop	{r4, r5, r6, r7, r8, pc}
   26b24:	andeq	r2, r1, r4, asr r9
   26b28:	ldrdeq	r3, [r1], -r8
   26b2c:	andeq	r3, r1, r4, asr #13
   26b30:	ldrdeq	r1, [r1], -r4
   26b34:	push	{r3, r4, r5, lr}
   26b38:	subs	r5, r0, #0
   26b3c:	beq	26b84 <g_unichar_xdigit_value@plt+0x12d20>
   26b40:	mov	r1, r3
   26b44:	mov	r0, r2
   26b48:	mov	r3, #0
   26b4c:	mov	r2, #0
   26b50:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26b54:	mov	r4, r0
   26b58:	mov	r0, r5
   26b5c:	mov	r1, r4
   26b60:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   26b64:	cmp	r4, #0
   26b68:	mov	r5, r0
   26b6c:	beq	26b80 <g_unichar_xdigit_value@plt+0x12d1c>
   26b70:	mov	r0, r4
   26b74:	bl	13b94 <g_object_unref@plt>
   26b78:	mov	r0, r5
   26b7c:	pop	{r3, r4, r5, pc}
   26b80:	pop	{r3, r4, r5, pc}
   26b84:	ldr	r1, [pc, #28]	; 26ba8 <g_unichar_xdigit_value@plt+0x12d44>
   26b88:	ldr	r2, [pc, #28]	; 26bac <g_unichar_xdigit_value@plt+0x12d48>
   26b8c:	add	r1, pc, r1
   26b90:	add	r1, r1, #1024	; 0x400
   26b94:	add	r2, pc, r2
   26b98:	add	r1, r1, #12
   26b9c:	bl	13450 <g_return_if_fail_warning@plt>
   26ba0:	mov	r0, r5
   26ba4:	pop	{r3, r4, r5, pc}
   26ba8:	andeq	r3, r1, r4, asr #12
   26bac:	andeq	r1, r1, r0, asr r5
   26bb0:	push	{r4, r5, r6, lr}
   26bb4:	subs	r5, r0, #0
   26bb8:	mov	r4, r1
   26bbc:	beq	26c80 <g_unichar_xdigit_value@plt+0x12e1c>
   26bc0:	bl	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   26bc4:	cmp	r0, #0
   26bc8:	beq	26c4c <g_unichar_xdigit_value@plt+0x12de8>
   26bcc:	cmp	r4, #0
   26bd0:	blt	26c00 <g_unichar_xdigit_value@plt+0x12d9c>
   26bd4:	mov	r2, #1
   26bd8:	mov	r3, #0
   26bdc:	beq	26bf4 <g_unichar_xdigit_value@plt+0x12d90>
   26be0:	add	r3, r3, #1
   26be4:	lsl	r2, r2, #1
   26be8:	cmp	r3, r4
   26bec:	bne	26be0 <g_unichar_xdigit_value@plt+0x12d7c>
   26bf0:	asr	r3, r2, #31
   26bf4:	mov	r0, r5
   26bf8:	pop	{r4, r5, r6, lr}
   26bfc:	b	266e0 <g_unichar_xdigit_value@plt+0x1287c>
   26c00:	rsb	r4, r4, #0
   26c04:	mov	r2, #1
   26c08:	mov	r3, #0
   26c0c:	add	r3, r3, #1
   26c10:	lsl	r2, r2, #1
   26c14:	cmp	r3, r4
   26c18:	bne	26c0c <g_unichar_xdigit_value@plt+0x12da8>
   26c1c:	mov	r0, r5
   26c20:	asr	r3, r2, #31
   26c24:	bl	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   26c28:	mov	r4, r0
   26c2c:	bl	25ccc <g_unichar_xdigit_value@plt+0x11e68>
   26c30:	cmp	r4, #0
   26c34:	mov	r5, r0
   26c38:	beq	26c9c <g_unichar_xdigit_value@plt+0x12e38>
   26c3c:	mov	r0, r4
   26c40:	bl	13b94 <g_object_unref@plt>
   26c44:	mov	r0, r5
   26c48:	pop	{r4, r5, r6, pc}
   26c4c:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   26c50:	ldr	r0, [pc, #76]	; 26ca4 <g_unichar_xdigit_value@plt+0x12e40>
   26c54:	ldr	r1, [pc, #76]	; 26ca8 <g_unichar_xdigit_value@plt+0x12e44>
   26c58:	add	r0, pc, r0
   26c5c:	add	r1, pc, r1
   26c60:	bl	13c9c <g_dgettext@plt>
   26c64:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   26c68:	mov	r0, #0
   26c6c:	mov	r1, #0
   26c70:	mov	r2, r0
   26c74:	mov	r3, r1
   26c78:	pop	{r4, r5, r6, lr}
   26c7c:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26c80:	ldr	r1, [pc, #36]	; 26cac <g_unichar_xdigit_value@plt+0x12e48>
   26c84:	ldr	r2, [pc, #36]	; 26cb0 <g_unichar_xdigit_value@plt+0x12e4c>
   26c88:	add	r1, pc, r1
   26c8c:	add	r1, r1, #1056	; 0x420
   26c90:	add	r2, pc, r2
   26c94:	add	r1, r1, #4
   26c98:	bl	13450 <g_return_if_fail_warning@plt>
   26c9c:	mov	r0, r5
   26ca0:	pop	{r4, r5, r6, pc}
   26ca4:	ldrdeq	r2, [r1], -r0
   26ca8:	andeq	r3, r1, ip, asr #27
   26cac:	andeq	r3, r1, r8, asr #10
   26cb0:	andeq	r1, r1, r4, asr r4
   26cb4:	push	{r4, r5, r6, r7, r8, lr}
   26cb8:	subs	r5, r0, #0
   26cbc:	mov	r4, r1
   26cc0:	beq	26e38 <g_unichar_xdigit_value@plt+0x12fd4>
   26cc4:	cmp	r1, #0
   26cc8:	beq	26e5c <g_unichar_xdigit_value@plt+0x12ff8>
   26ccc:	bl	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   26cd0:	cmp	r0, #0
   26cd4:	bne	26d0c <g_unichar_xdigit_value@plt+0x12ea8>
   26cd8:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   26cdc:	ldr	r0, [pc, #416]	; 26e84 <g_unichar_xdigit_value@plt+0x13020>
   26ce0:	ldr	r1, [pc, #416]	; 26e88 <g_unichar_xdigit_value@plt+0x13024>
   26ce4:	add	r0, pc, r0
   26ce8:	add	r1, pc, r1
   26cec:	bl	13c9c <g_dgettext@plt>
   26cf0:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   26cf4:	mov	r0, #0
   26cf8:	mov	r1, #0
   26cfc:	mov	r2, r0
   26d00:	mov	r3, r1
   26d04:	pop	{r4, r5, r6, r7, r8, lr}
   26d08:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26d0c:	mov	r0, r4
   26d10:	bl	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   26d14:	cmp	r0, #0
   26d18:	beq	26cd8 <g_unichar_xdigit_value@plt+0x12e74>
   26d1c:	mov	r1, r4
   26d20:	mov	r0, r5
   26d24:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   26d28:	mov	r6, r0
   26d2c:	bl	25ccc <g_unichar_xdigit_value@plt+0x11e68>
   26d30:	cmp	r6, #0
   26d34:	mov	r7, r0
   26d38:	beq	26d44 <g_unichar_xdigit_value@plt+0x12ee0>
   26d3c:	mov	r0, r6
   26d40:	bl	13b94 <g_object_unref@plt>
   26d44:	mov	r1, r4
   26d48:	mov	r0, r7
   26d4c:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   26d50:	mov	r6, r0
   26d54:	mov	r0, r5
   26d58:	mov	r1, r6
   26d5c:	bl	26558 <g_unichar_xdigit_value@plt+0x126f4>
   26d60:	mov	r1, #0
   26d64:	mov	r3, r1
   26d68:	mov	r8, r0
   26d6c:	mov	r0, #0
   26d70:	mov	r2, r0
   26d74:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26d78:	cmp	r7, #0
   26d7c:	mov	r5, r0
   26d80:	beq	26d8c <g_unichar_xdigit_value@plt+0x12f28>
   26d84:	mov	r0, r7
   26d88:	bl	13b94 <g_object_unref@plt>
   26d8c:	mov	r0, r4
   26d90:	mov	r1, r5
   26d94:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   26d98:	cmp	r0, #0
   26d9c:	blt	26df0 <g_unichar_xdigit_value@plt+0x12f8c>
   26da0:	mov	r0, r4
   26da4:	mov	r1, r5
   26da8:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   26dac:	cmp	r0, #0
   26db0:	ble	26dc8 <g_unichar_xdigit_value@plt+0x12f64>
   26db4:	mov	r0, r8
   26db8:	mov	r1, r5
   26dbc:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   26dc0:	cmp	r0, #0
   26dc4:	blt	26e04 <g_unichar_xdigit_value@plt+0x12fa0>
   26dc8:	cmp	r6, #0
   26dcc:	beq	26dd8 <g_unichar_xdigit_value@plt+0x12f74>
   26dd0:	mov	r0, r6
   26dd4:	bl	13b94 <g_object_unref@plt>
   26dd8:	cmp	r5, #0
   26ddc:	beq	26e30 <g_unichar_xdigit_value@plt+0x12fcc>
   26de0:	mov	r0, r5
   26de4:	bl	13b94 <g_object_unref@plt>
   26de8:	mov	r0, r8
   26dec:	pop	{r4, r5, r6, r7, r8, pc}
   26df0:	mov	r0, r8
   26df4:	mov	r1, r5
   26df8:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   26dfc:	cmp	r0, #0
   26e00:	ble	26da0 <g_unichar_xdigit_value@plt+0x12f3c>
   26e04:	mov	r0, r8
   26e08:	mov	r1, r4
   26e0c:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   26e10:	cmp	r8, #0
   26e14:	mov	r3, r0
   26e18:	moveq	r8, r0
   26e1c:	beq	26dc8 <g_unichar_xdigit_value@plt+0x12f64>
   26e20:	mov	r0, r8
   26e24:	mov	r8, r3
   26e28:	bl	13b94 <g_object_unref@plt>
   26e2c:	b	26dc8 <g_unichar_xdigit_value@plt+0x12f64>
   26e30:	mov	r0, r8
   26e34:	pop	{r4, r5, r6, r7, r8, pc}
   26e38:	ldr	r1, [pc, #76]	; 26e8c <g_unichar_xdigit_value@plt+0x13028>
   26e3c:	ldr	r2, [pc, #76]	; 26e90 <g_unichar_xdigit_value@plt+0x1302c>
   26e40:	add	r1, pc, r1
   26e44:	add	r1, r1, #1072	; 0x430
   26e48:	add	r2, pc, r2
   26e4c:	add	r1, r1, #4
   26e50:	bl	13450 <g_return_if_fail_warning@plt>
   26e54:	mov	r0, r5
   26e58:	pop	{r4, r5, r6, r7, r8, pc}
   26e5c:	ldr	r1, [pc, #48]	; 26e94 <g_unichar_xdigit_value@plt+0x13030>
   26e60:	mov	r0, r4
   26e64:	ldr	r2, [pc, #44]	; 26e98 <g_unichar_xdigit_value@plt+0x13034>
   26e68:	add	r1, pc, r1
   26e6c:	add	r1, r1, #1072	; 0x430
   26e70:	add	r2, pc, r2
   26e74:	add	r1, r1, #4
   26e78:	bl	13450 <g_return_if_fail_warning@plt>
   26e7c:	mov	r0, r4
   26e80:	pop	{r4, r5, r6, r7, r8, pc}
   26e84:	andeq	r2, r1, r4, asr #14
   26e88:	andeq	r3, r1, ip, ror #26
   26e8c:	muleq	r1, r0, r3
   26e90:	muleq	r1, ip, r2
   26e94:	andeq	r3, r1, r8, ror #6
   26e98:	andeq	r3, r1, ip, ror #20
   26e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ea0:	subs	r7, r0, #0
   26ea4:	sub	sp, sp, #12
   26ea8:	beq	26f74 <g_unichar_xdigit_value@plt+0x13110>
   26eac:	bl	259a4 <g_unichar_xdigit_value@plt+0x11b40>
   26eb0:	mov	r4, r0
   26eb4:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   26eb8:	cmp	r0, #0
   26ebc:	beq	26f00 <g_unichar_xdigit_value@plt+0x1309c>
   26ec0:	subs	r0, r4, #0
   26ec4:	beq	26ef0 <g_unichar_xdigit_value@plt+0x1308c>
   26ec8:	bl	133f0 <g_object_ref@plt>
   26ecc:	mov	r1, r0
   26ed0:	mov	r0, #0
   26ed4:	bl	13594 <g_list_append@plt>
   26ed8:	mov	r5, r0
   26edc:	mov	r0, r4
   26ee0:	bl	13b94 <g_object_unref@plt>
   26ee4:	mov	r0, r5
   26ee8:	add	sp, sp, #12
   26eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26ef0:	mov	r1, r0
   26ef4:	add	sp, sp, #12
   26ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26efc:	b	13594 <g_list_append@plt>
   26f00:	mov	r1, #0
   26f04:	mov	r2, #0
   26f08:	mov	r3, #0
   26f0c:	mov	r0, #1
   26f10:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26f14:	mov	r5, r0
   26f18:	mov	r0, r4
   26f1c:	mov	r1, r5
   26f20:	bl	25044 <g_unichar_xdigit_value@plt+0x111e0>
   26f24:	cmp	r5, #0
   26f28:	mov	r9, r0
   26f2c:	beq	26f38 <g_unichar_xdigit_value@plt+0x130d4>
   26f30:	mov	r0, r5
   26f34:	bl	13b94 <g_object_unref@plt>
   26f38:	cmp	r9, #0
   26f3c:	beq	26f9c <g_unichar_xdigit_value@plt+0x13138>
   26f40:	mov	r0, r7
   26f44:	bl	133f0 <g_object_ref@plt>
   26f48:	mov	r1, r0
   26f4c:	mov	r0, #0
   26f50:	bl	13594 <g_list_append@plt>
   26f54:	cmp	r4, #0
   26f58:	mov	r5, r0
   26f5c:	beq	27318 <g_unichar_xdigit_value@plt+0x134b4>
   26f60:	mov	r0, r4
   26f64:	bl	13b94 <g_object_unref@plt>
   26f68:	mov	r0, r5
   26f6c:	add	sp, sp, #12
   26f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26f74:	ldr	r1, [pc, #968]	; 27344 <g_unichar_xdigit_value@plt+0x134e0>
   26f78:	ldr	r2, [pc, #968]	; 27348 <g_unichar_xdigit_value@plt+0x134e4>
   26f7c:	add	r1, pc, r1
   26f80:	add	r1, r1, #1088	; 0x440
   26f84:	add	r2, pc, r2
   26f88:	add	r1, r1, #12
   26f8c:	bl	13450 <g_return_if_fail_warning@plt>
   26f90:	mov	r0, r7
   26f94:	add	sp, sp, #12
   26f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26f9c:	mvn	r1, #0
   26fa0:	mov	r2, #0
   26fa4:	mov	r3, #0
   26fa8:	mvn	r0, #0
   26fac:	bl	256c8 <g_unichar_xdigit_value@plt+0x11864>
   26fb0:	str	r0, [sp, #4]
   26fb4:	mov	r0, r4
   26fb8:	ldr	r1, [sp, #4]
   26fbc:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   26fc0:	cmp	r0, #0
   26fc4:	ble	272d0 <g_unichar_xdigit_value@plt+0x1346c>
   26fc8:	mov	r0, #2
   26fcc:	mov	r1, #0
   26fd0:	mov	r2, #0
   26fd4:	mov	r3, #0
   26fd8:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   26fdc:	mov	sl, r0
   26fe0:	b	27044 <g_unichar_xdigit_value@plt+0x131e0>
   26fe4:	cmp	r5, #0
   26fe8:	moveq	r6, r5
   26fec:	beq	26ffc <g_unichar_xdigit_value@plt+0x13198>
   26ff0:	mov	r0, r5
   26ff4:	bl	133f0 <g_object_ref@plt>
   26ff8:	mov	r6, r0
   26ffc:	cmp	r4, #0
   27000:	beq	2700c <g_unichar_xdigit_value@plt+0x131a8>
   27004:	mov	r0, r4
   27008:	bl	13b94 <g_object_unref@plt>
   2700c:	cmp	sl, #0
   27010:	moveq	r1, sl
   27014:	beq	27024 <g_unichar_xdigit_value@plt+0x131c0>
   27018:	mov	r0, sl
   2701c:	bl	133f0 <g_object_ref@plt>
   27020:	mov	r1, r0
   27024:	mov	r0, r9
   27028:	bl	13594 <g_list_append@plt>
   2702c:	cmp	r5, #0
   27030:	mov	r9, r0
   27034:	beq	27040 <g_unichar_xdigit_value@plt+0x131dc>
   27038:	mov	r0, r5
   2703c:	bl	13b94 <g_object_unref@plt>
   27040:	mov	r4, r6
   27044:	mov	r1, sl
   27048:	mov	r0, r4
   2704c:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   27050:	mov	r5, r0
   27054:	bl	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   27058:	cmp	r0, #0
   2705c:	bne	26fe4 <g_unichar_xdigit_value@plt+0x13180>
   27060:	cmp	r5, #0
   27064:	beq	27070 <g_unichar_xdigit_value@plt+0x1320c>
   27068:	mov	r0, r5
   2706c:	bl	13b94 <g_object_unref@plt>
   27070:	mov	r0, #3
   27074:	mov	r1, #0
   27078:	mov	r2, #0
   2707c:	mov	r3, #0
   27080:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27084:	cmp	sl, #0
   27088:	mov	r6, r0
   2708c:	beq	27098 <g_unichar_xdigit_value@plt+0x13234>
   27090:	mov	r0, sl
   27094:	bl	13b94 <g_object_unref@plt>
   27098:	mov	r0, r4
   2709c:	bl	261f0 <g_unichar_xdigit_value@plt+0x1238c>
   270a0:	mov	sl, r0
   270a4:	mov	r0, r6
   270a8:	mov	r1, sl
   270ac:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   270b0:	cmp	r0, #0
   270b4:	bgt	271dc <g_unichar_xdigit_value@plt+0x13378>
   270b8:	mov	r1, r6
   270bc:	mov	r0, r4
   270c0:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   270c4:	mov	r5, r0
   270c8:	bl	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   270cc:	cmp	r0, #0
   270d0:	beq	27158 <g_unichar_xdigit_value@plt+0x132f4>
   270d4:	cmp	r5, #0
   270d8:	moveq	fp, r5
   270dc:	beq	270ec <g_unichar_xdigit_value@plt+0x13288>
   270e0:	mov	r0, r5
   270e4:	bl	133f0 <g_object_ref@plt>
   270e8:	mov	fp, r0
   270ec:	cmp	r4, #0
   270f0:	beq	270fc <g_unichar_xdigit_value@plt+0x13298>
   270f4:	mov	r0, r4
   270f8:	bl	13b94 <g_object_unref@plt>
   270fc:	mov	r0, fp
   27100:	bl	261f0 <g_unichar_xdigit_value@plt+0x1238c>
   27104:	cmp	sl, #0
   27108:	mov	r4, r0
   2710c:	beq	27118 <g_unichar_xdigit_value@plt+0x132b4>
   27110:	mov	r0, sl
   27114:	bl	13b94 <g_object_unref@plt>
   27118:	cmp	r6, #0
   2711c:	moveq	r1, r6
   27120:	beq	27130 <g_unichar_xdigit_value@plt+0x132cc>
   27124:	mov	r0, r6
   27128:	bl	133f0 <g_object_ref@plt>
   2712c:	mov	r1, r0
   27130:	mov	r0, r9
   27134:	mov	sl, r4
   27138:	bl	13594 <g_list_append@plt>
   2713c:	mov	r4, fp
   27140:	mov	r9, r0
   27144:	cmp	r5, #0
   27148:	beq	270a4 <g_unichar_xdigit_value@plt+0x13240>
   2714c:	mov	r0, r5
   27150:	bl	13b94 <g_object_unref@plt>
   27154:	b	270a4 <g_unichar_xdigit_value@plt+0x13240>
   27158:	mov	r1, #0
   2715c:	mov	r2, #0
   27160:	mov	r3, #0
   27164:	mov	r0, #2
   27168:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   2716c:	mov	r8, r0
   27170:	mov	r0, r6
   27174:	mov	r1, r8
   27178:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   2717c:	cmp	r5, #0
   27180:	mov	fp, r0
   27184:	beq	27190 <g_unichar_xdigit_value@plt+0x1332c>
   27188:	mov	r0, r5
   2718c:	bl	13b94 <g_object_unref@plt>
   27190:	cmp	r8, #0
   27194:	beq	271a0 <g_unichar_xdigit_value@plt+0x1333c>
   27198:	mov	r0, r8
   2719c:	bl	13b94 <g_object_unref@plt>
   271a0:	cmp	fp, #0
   271a4:	moveq	r3, fp
   271a8:	beq	271b8 <g_unichar_xdigit_value@plt+0x13354>
   271ac:	mov	r0, fp
   271b0:	bl	133f0 <g_object_ref@plt>
   271b4:	mov	r3, r0
   271b8:	cmp	r6, #0
   271bc:	beq	272a0 <g_unichar_xdigit_value@plt+0x1343c>
   271c0:	mov	r0, r6
   271c4:	str	r3, [sp]
   271c8:	bl	13b94 <g_object_unref@plt>
   271cc:	ldr	r3, [sp]
   271d0:	mov	r5, fp
   271d4:	mov	r6, r3
   271d8:	b	27144 <g_unichar_xdigit_value@plt+0x132e0>
   271dc:	mov	r1, #0
   271e0:	mov	r2, #0
   271e4:	mov	r3, #0
   271e8:	mov	r0, #1
   271ec:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   271f0:	mov	r5, r0
   271f4:	mov	r0, r4
   271f8:	mov	r1, r5
   271fc:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   27200:	cmp	r5, #0
   27204:	mov	fp, r0
   27208:	beq	27214 <g_unichar_xdigit_value@plt+0x133b0>
   2720c:	mov	r0, r5
   27210:	bl	13b94 <g_object_unref@plt>
   27214:	cmp	fp, #0
   27218:	ble	27240 <g_unichar_xdigit_value@plt+0x133dc>
   2721c:	cmp	r4, #0
   27220:	moveq	r1, r4
   27224:	beq	27234 <g_unichar_xdigit_value@plt+0x133d0>
   27228:	mov	r0, r4
   2722c:	bl	133f0 <g_object_ref@plt>
   27230:	mov	r1, r0
   27234:	mov	r0, r9
   27238:	bl	13594 <g_list_append@plt>
   2723c:	mov	r9, r0
   27240:	mov	r0, r7
   27244:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   27248:	cmp	r0, #0
   2724c:	bne	272ac <g_unichar_xdigit_value@plt+0x13448>
   27250:	cmp	sl, #0
   27254:	beq	27260 <g_unichar_xdigit_value@plt+0x133fc>
   27258:	mov	r0, sl
   2725c:	bl	13b94 <g_object_unref@plt>
   27260:	cmp	r6, #0
   27264:	beq	27270 <g_unichar_xdigit_value@plt+0x1340c>
   27268:	mov	r0, r6
   2726c:	bl	13b94 <g_object_unref@plt>
   27270:	ldr	r3, [sp, #4]
   27274:	cmp	r3, #0
   27278:	beq	27284 <g_unichar_xdigit_value@plt+0x13420>
   2727c:	mov	r0, r3
   27280:	bl	13b94 <g_object_unref@plt>
   27284:	cmp	r4, #0
   27288:	moveq	r0, r9
   2728c:	beq	26ee8 <g_unichar_xdigit_value@plt+0x13084>
   27290:	mov	r0, r4
   27294:	bl	13b94 <g_object_unref@plt>
   27298:	mov	r0, r9
   2729c:	b	26ee8 <g_unichar_xdigit_value@plt+0x13084>
   272a0:	mov	r5, fp
   272a4:	mov	r6, r3
   272a8:	b	27144 <g_unichar_xdigit_value@plt+0x132e0>
   272ac:	ldr	r0, [r9]
   272b0:	bl	25950 <g_unichar_xdigit_value@plt+0x11aec>
   272b4:	mov	r5, r0
   272b8:	ldr	r0, [r9]
   272bc:	cmp	r0, #0
   272c0:	beq	272c8 <g_unichar_xdigit_value@plt+0x13464>
   272c4:	bl	13b94 <g_object_unref@plt>
   272c8:	str	r5, [r9]
   272cc:	b	27250 <g_unichar_xdigit_value@plt+0x133ec>
   272d0:	mov	r0, r4
   272d4:	bl	24cec <g_unichar_xdigit_value@plt+0x10e88>
   272d8:	mov	r2, r0
   272dc:	mov	r3, r1
   272e0:	mov	r0, r7
   272e4:	bl	256fc <g_unichar_xdigit_value@plt+0x11898>
   272e8:	mov	r5, r0
   272ec:	mov	r0, r7
   272f0:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   272f4:	cmp	r0, #0
   272f8:	bne	27320 <g_unichar_xdigit_value@plt+0x134bc>
   272fc:	ldr	r3, [sp, #4]
   27300:	cmp	r3, #0
   27304:	beq	27310 <g_unichar_xdigit_value@plt+0x134ac>
   27308:	mov	r0, r3
   2730c:	bl	13b94 <g_object_unref@plt>
   27310:	cmp	r4, #0
   27314:	bne	26f60 <g_unichar_xdigit_value@plt+0x130fc>
   27318:	mov	r0, r5
   2731c:	b	26ee8 <g_unichar_xdigit_value@plt+0x13084>
   27320:	ldr	r0, [r5]
   27324:	bl	25950 <g_unichar_xdigit_value@plt+0x11aec>
   27328:	mov	r6, r0
   2732c:	ldr	r0, [r5]
   27330:	cmp	r0, #0
   27334:	beq	2733c <g_unichar_xdigit_value@plt+0x134d8>
   27338:	bl	13b94 <g_object_unref@plt>
   2733c:	str	r6, [r5]
   27340:	b	272fc <g_unichar_xdigit_value@plt+0x13498>
   27344:	andeq	r3, r1, r4, asr r2
   27348:	andeq	r1, r1, r0, ror #2
   2734c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27350:	subs	r6, r0, #0
   27354:	mov	r4, r1
   27358:	mov	r7, r2
   2735c:	beq	27574 <g_unichar_xdigit_value@plt+0x13710>
   27360:	cmp	r1, #0
   27364:	beq	27594 <g_unichar_xdigit_value@plt+0x13730>
   27368:	cmp	r2, #0
   2736c:	beq	27534 <g_unichar_xdigit_value@plt+0x136d0>
   27370:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27374:	ldr	r1, [r6, #12]
   27378:	mov	r2, #0
   2737c:	mov	r5, r0
   27380:	ldr	r0, [r0, #12]
   27384:	bl	13990 <mpc_set@plt>
   27388:	mov	r0, r4
   2738c:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   27390:	cmp	r0, #0
   27394:	bne	27558 <g_unichar_xdigit_value@plt+0x136f4>
   27398:	mov	r0, r4
   2739c:	bl	259a4 <g_unichar_xdigit_value@plt+0x11b40>
   273a0:	mov	r2, #0
   273a4:	mov	r3, #0
   273a8:	mov	r1, #0
   273ac:	mov	r4, r0
   273b0:	mov	r0, #1
   273b4:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   273b8:	mov	r2, #0
   273bc:	mov	r3, #0
   273c0:	mov	r1, #0
   273c4:	mov	r8, r0
   273c8:	mov	r0, #2
   273cc:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   273d0:	mov	r9, r0
   273d4:	b	27458 <g_unichar_xdigit_value@plt+0x135f4>
   273d8:	mov	r0, r5
   273dc:	mov	r1, r5
   273e0:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   273e4:	cmp	r5, #0
   273e8:	mov	r6, r0
   273ec:	beq	273f8 <g_unichar_xdigit_value@plt+0x13594>
   273f0:	mov	r0, r5
   273f4:	bl	13b94 <g_object_unref@plt>
   273f8:	mov	r0, r6
   273fc:	mov	r1, r7
   27400:	bl	26cb4 <g_unichar_xdigit_value@plt+0x12e50>
   27404:	cmp	r6, #0
   27408:	mov	r5, r0
   2740c:	beq	27418 <g_unichar_xdigit_value@plt+0x135b4>
   27410:	mov	r0, r6
   27414:	bl	13b94 <g_object_unref@plt>
   27418:	mov	r2, #2
   2741c:	mov	r3, #0
   27420:	mov	r0, r4
   27424:	bl	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   27428:	mov	r6, r0
   2742c:	bl	25ccc <g_unichar_xdigit_value@plt+0x11e68>
   27430:	cmp	r4, #0
   27434:	mov	sl, r0
   27438:	beq	27444 <g_unichar_xdigit_value@plt+0x135e0>
   2743c:	mov	r0, r4
   27440:	bl	13b94 <g_object_unref@plt>
   27444:	cmp	r6, #0
   27448:	beq	27454 <g_unichar_xdigit_value@plt+0x135f0>
   2744c:	mov	r0, r6
   27450:	bl	13b94 <g_object_unref@plt>
   27454:	mov	r4, sl
   27458:	mov	r0, r4
   2745c:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   27460:	cmp	r0, #0
   27464:	bne	274dc <g_unichar_xdigit_value@plt+0x13678>
   27468:	mov	r1, r9
   2746c:	mov	r0, r4
   27470:	bl	26cb4 <g_unichar_xdigit_value@plt+0x12e50>
   27474:	mov	r6, r0
   27478:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   2747c:	cmp	r6, #0
   27480:	mov	sl, r0
   27484:	beq	27490 <g_unichar_xdigit_value@plt+0x1362c>
   27488:	mov	r0, r6
   2748c:	bl	13b94 <g_object_unref@plt>
   27490:	cmp	sl, #0
   27494:	bne	273d8 <g_unichar_xdigit_value@plt+0x13574>
   27498:	mov	r0, r8
   2749c:	mov	r1, r5
   274a0:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   274a4:	cmp	r8, #0
   274a8:	mov	r6, r0
   274ac:	beq	274b8 <g_unichar_xdigit_value@plt+0x13654>
   274b0:	mov	r0, r8
   274b4:	bl	13b94 <g_object_unref@plt>
   274b8:	mov	r0, r6
   274bc:	mov	r1, r7
   274c0:	bl	26cb4 <g_unichar_xdigit_value@plt+0x12e50>
   274c4:	cmp	r6, #0
   274c8:	mov	r8, r0
   274cc:	beq	273d8 <g_unichar_xdigit_value@plt+0x13574>
   274d0:	mov	r0, r6
   274d4:	bl	13b94 <g_object_unref@plt>
   274d8:	b	273d8 <g_unichar_xdigit_value@plt+0x13574>
   274dc:	mov	r1, r7
   274e0:	mov	r0, r8
   274e4:	bl	26cb4 <g_unichar_xdigit_value@plt+0x12e50>
   274e8:	cmp	r9, #0
   274ec:	mov	r7, r0
   274f0:	beq	274fc <g_unichar_xdigit_value@plt+0x13698>
   274f4:	mov	r0, r9
   274f8:	bl	13b94 <g_object_unref@plt>
   274fc:	cmp	r8, #0
   27500:	beq	2750c <g_unichar_xdigit_value@plt+0x136a8>
   27504:	mov	r0, r8
   27508:	bl	13b94 <g_object_unref@plt>
   2750c:	cmp	r4, #0
   27510:	beq	2751c <g_unichar_xdigit_value@plt+0x136b8>
   27514:	mov	r0, r4
   27518:	bl	13b94 <g_object_unref@plt>
   2751c:	cmp	r5, #0
   27520:	beq	27550 <g_unichar_xdigit_value@plt+0x136ec>
   27524:	mov	r0, r5
   27528:	bl	13b94 <g_object_unref@plt>
   2752c:	mov	r0, r7
   27530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27534:	ldr	r1, [pc, #124]	; 275b8 <g_unichar_xdigit_value@plt+0x13754>
   27538:	mov	r0, r2
   2753c:	ldr	r2, [pc, #120]	; 275bc <g_unichar_xdigit_value@plt+0x13758>
   27540:	add	r1, pc, r1
   27544:	add	r2, pc, r2
   27548:	add	r1, r1, #1120	; 0x460
   2754c:	bl	13450 <g_return_if_fail_warning@plt>
   27550:	mov	r0, r7
   27554:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27558:	mov	r0, r5
   2755c:	bl	25df8 <g_unichar_xdigit_value@plt+0x11f94>
   27560:	mov	r3, r0
   27564:	mov	r0, r5
   27568:	mov	r5, r3
   2756c:	bl	13b94 <g_object_unref@plt>
   27570:	b	27398 <g_unichar_xdigit_value@plt+0x13534>
   27574:	ldr	r1, [pc, #68]	; 275c0 <g_unichar_xdigit_value@plt+0x1375c>
   27578:	ldr	r2, [pc, #68]	; 275c4 <g_unichar_xdigit_value@plt+0x13760>
   2757c:	add	r1, pc, r1
   27580:	add	r2, pc, r2
   27584:	add	r1, r1, #1120	; 0x460
   27588:	bl	13450 <g_return_if_fail_warning@plt>
   2758c:	mov	r0, r6
   27590:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27594:	ldr	r1, [pc, #44]	; 275c8 <g_unichar_xdigit_value@plt+0x13764>
   27598:	mov	r0, r4
   2759c:	ldr	r2, [pc, #40]	; 275cc <g_unichar_xdigit_value@plt+0x13768>
   275a0:	add	r1, pc, r1
   275a4:	add	r2, pc, r2
   275a8:	add	r1, r1, #1120	; 0x460
   275ac:	bl	13450 <g_return_if_fail_warning@plt>
   275b0:	mov	r0, r4
   275b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   275b8:	muleq	r1, r0, ip
   275bc:	andeq	r3, r1, ip, asr #10
   275c0:	andeq	r2, r1, r4, asr ip
   275c4:	andeq	r0, r1, r4, ror #22
   275c8:	andeq	r2, r1, r0, lsr ip
   275cc:	andeq	r3, r1, r0, ror #9
   275d0:	push	{r4, r5, r6, lr}
   275d4:	subs	r5, r0, #0
   275d8:	mov	r6, r1
   275dc:	beq	27634 <g_unichar_xdigit_value@plt+0x137d0>
   275e0:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   275e4:	mov	r4, r0
   275e8:	mov	r0, r5
   275ec:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   275f0:	cmp	r0, #0
   275f4:	bne	27620 <g_unichar_xdigit_value@plt+0x137bc>
   275f8:	ldr	r1, [r5, #12]
   275fc:	mov	r2, r6
   27600:	ldr	r0, [r4, #12]
   27604:	bl	2536c <g_unichar_xdigit_value@plt+0x11508>
   27608:	ldr	r0, [r4, #12]
   2760c:	mov	r2, #0
   27610:	mov	r1, r0
   27614:	bl	13888 <mpc_sin@plt>
   27618:	mov	r0, r4
   2761c:	pop	{r4, r5, r6, pc}
   27620:	ldr	r1, [r5, #12]
   27624:	mov	r2, #0
   27628:	ldr	r0, [r4, #12]
   2762c:	bl	13990 <mpc_set@plt>
   27630:	b	27608 <g_unichar_xdigit_value@plt+0x137a4>
   27634:	ldr	r1, [pc, #24]	; 27654 <g_unichar_xdigit_value@plt+0x137f0>
   27638:	ldr	r2, [pc, #24]	; 27658 <g_unichar_xdigit_value@plt+0x137f4>
   2763c:	add	r1, pc, r1
   27640:	add	r2, pc, r2
   27644:	add	r1, r1, #1152	; 0x480
   27648:	bl	13450 <g_return_if_fail_warning@plt>
   2764c:	mov	r0, r5
   27650:	pop	{r4, r5, r6, pc}
   27654:	muleq	r1, r4, fp
   27658:	andeq	r0, r1, r4, lsr #21
   2765c:	push	{r4, r5, r6, lr}
   27660:	subs	r5, r0, #0
   27664:	mov	r6, r1
   27668:	beq	276c0 <g_unichar_xdigit_value@plt+0x1385c>
   2766c:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27670:	mov	r4, r0
   27674:	mov	r0, r5
   27678:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   2767c:	cmp	r0, #0
   27680:	bne	276ac <g_unichar_xdigit_value@plt+0x13848>
   27684:	ldr	r1, [r5, #12]
   27688:	mov	r2, r6
   2768c:	ldr	r0, [r4, #12]
   27690:	bl	2536c <g_unichar_xdigit_value@plt+0x11508>
   27694:	ldr	r0, [r4, #12]
   27698:	mov	r2, #0
   2769c:	mov	r1, r0
   276a0:	bl	133fc <mpc_cos@plt>
   276a4:	mov	r0, r4
   276a8:	pop	{r4, r5, r6, pc}
   276ac:	ldr	r1, [r5, #12]
   276b0:	mov	r2, #0
   276b4:	ldr	r0, [r4, #12]
   276b8:	bl	13990 <mpc_set@plt>
   276bc:	b	27694 <g_unichar_xdigit_value@plt+0x13830>
   276c0:	ldr	r1, [pc, #28]	; 276e4 <g_unichar_xdigit_value@plt+0x13880>
   276c4:	ldr	r2, [pc, #28]	; 276e8 <g_unichar_xdigit_value@plt+0x13884>
   276c8:	add	r1, pc, r1
   276cc:	add	r1, r1, #1152	; 0x480
   276d0:	add	r2, pc, r2
   276d4:	add	r1, r1, #12
   276d8:	bl	13450 <g_return_if_fail_warning@plt>
   276dc:	mov	r0, r5
   276e0:	pop	{r4, r5, r6, pc}
   276e4:	andeq	r2, r1, r8, lsl #22
   276e8:	andeq	r0, r1, r4, lsl sl
   276ec:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   276f0:	subs	r8, r1, #0
   276f4:	mov	r9, r0
   276f8:	mov	r4, r2
   276fc:	mov	r6, r3
   27700:	beq	277d0 <g_unichar_xdigit_value@plt+0x1396c>
   27704:	cmp	r2, #0
   27708:	beq	277a8 <g_unichar_xdigit_value@plt+0x13944>
   2770c:	mov	r1, r3
   27710:	mov	r0, r2
   27714:	bl	2765c <g_unichar_xdigit_value@plt+0x137f8>
   27718:	mov	r1, r6
   2771c:	mov	r5, r0
   27720:	mov	r0, r4
   27724:	bl	275d0 <g_unichar_xdigit_value@plt+0x1376c>
   27728:	mov	r1, r8
   2772c:	mov	r6, r0
   27730:	mov	r0, r5
   27734:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   27738:	mov	r1, r8
   2773c:	mov	r7, r0
   27740:	mov	r0, r6
   27744:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   27748:	mov	r1, r7
   2774c:	mov	r8, r0
   27750:	mov	r0, r9
   27754:	mov	r2, r8
   27758:	bl	24b38 <g_unichar_xdigit_value@plt+0x10cd4>
   2775c:	cmp	r8, #0
   27760:	mov	r4, r0
   27764:	beq	27770 <g_unichar_xdigit_value@plt+0x1390c>
   27768:	mov	r0, r8
   2776c:	bl	13b94 <g_object_unref@plt>
   27770:	cmp	r7, #0
   27774:	beq	27780 <g_unichar_xdigit_value@plt+0x1391c>
   27778:	mov	r0, r7
   2777c:	bl	13b94 <g_object_unref@plt>
   27780:	cmp	r6, #0
   27784:	beq	27790 <g_unichar_xdigit_value@plt+0x1392c>
   27788:	mov	r0, r6
   2778c:	bl	13b94 <g_object_unref@plt>
   27790:	cmp	r5, #0
   27794:	beq	277c8 <g_unichar_xdigit_value@plt+0x13964>
   27798:	mov	r0, r5
   2779c:	bl	13b94 <g_object_unref@plt>
   277a0:	mov	r0, r4
   277a4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   277a8:	ldr	r1, [pc, #72]	; 277f8 <g_unichar_xdigit_value@plt+0x13994>
   277ac:	mov	r0, r2
   277b0:	ldr	r2, [pc, #68]	; 277fc <g_unichar_xdigit_value@plt+0x13998>
   277b4:	add	r1, pc, r1
   277b8:	add	r1, r1, #1168	; 0x490
   277bc:	add	r2, pc, r2
   277c0:	add	r1, r1, #8
   277c4:	bl	13450 <g_return_if_fail_warning@plt>
   277c8:	mov	r0, r4
   277cc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   277d0:	ldr	r1, [pc, #40]	; 27800 <g_unichar_xdigit_value@plt+0x1399c>
   277d4:	mov	r0, r8
   277d8:	ldr	r2, [pc, #36]	; 27804 <g_unichar_xdigit_value@plt+0x139a0>
   277dc:	add	r1, pc, r1
   277e0:	add	r1, r1, #1168	; 0x490
   277e4:	add	r2, pc, r2
   277e8:	add	r1, r1, #8
   277ec:	bl	13450 <g_return_if_fail_warning@plt>
   277f0:	mov	r0, r8
   277f4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   277f8:	andeq	r2, r1, ip, lsl sl
   277fc:	andeq	r3, r1, r0, ror #5
   27800:	strdeq	r2, [r1], -r4
   27804:	andeq	r1, r1, r0, asr #19
   27808:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2780c:	subs	r9, r0, #0
   27810:	mov	fp, r1
   27814:	beq	27968 <g_unichar_xdigit_value@plt+0x13b04>
   27818:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   2781c:	ldr	r1, [r9, #12]
   27820:	mov	r2, fp
   27824:	mov	r4, r0
   27828:	ldr	r0, [r0, #12]
   2782c:	bl	2536c <g_unichar_xdigit_value@plt+0x11508>
   27830:	bl	25920 <g_unichar_xdigit_value@plt+0x11abc>
   27834:	mov	r2, #2
   27838:	mov	r3, #0
   2783c:	mov	sl, r0
   27840:	bl	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   27844:	mov	r6, r0
   27848:	mov	r0, r4
   2784c:	mov	r1, r6
   27850:	bl	26558 <g_unichar_xdigit_value@plt+0x126f4>
   27854:	mov	r7, r0
   27858:	bl	25920 <g_unichar_xdigit_value@plt+0x11abc>
   2785c:	mov	r8, r0
   27860:	mov	r0, r7
   27864:	mov	r1, r8
   27868:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   2786c:	cmp	r8, #0
   27870:	mov	r5, r0
   27874:	beq	27880 <g_unichar_xdigit_value@plt+0x13a1c>
   27878:	mov	r0, r8
   2787c:	bl	13b94 <g_object_unref@plt>
   27880:	cmp	r7, #0
   27884:	beq	27890 <g_unichar_xdigit_value@plt+0x13a2c>
   27888:	mov	r0, r7
   2788c:	bl	13b94 <g_object_unref@plt>
   27890:	cmp	r6, #0
   27894:	beq	278a0 <g_unichar_xdigit_value@plt+0x13a3c>
   27898:	mov	r0, r6
   2789c:	bl	13b94 <g_object_unref@plt>
   278a0:	cmp	sl, #0
   278a4:	beq	278b0 <g_unichar_xdigit_value@plt+0x13a4c>
   278a8:	mov	r0, sl
   278ac:	bl	13b94 <g_object_unref@plt>
   278b0:	mov	r0, r5
   278b4:	bl	24ee8 <g_unichar_xdigit_value@plt+0x11084>
   278b8:	subs	r7, r0, #0
   278bc:	bne	27918 <g_unichar_xdigit_value@plt+0x13ab4>
   278c0:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   278c4:	mov	r6, r0
   278c8:	mov	r0, r9
   278cc:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   278d0:	ldr	r1, [r9, #12]
   278d4:	cmp	r0, #0
   278d8:	beq	27958 <g_unichar_xdigit_value@plt+0x13af4>
   278dc:	mov	r2, r7
   278e0:	ldr	r0, [r6, #12]
   278e4:	bl	13990 <mpc_set@plt>
   278e8:	ldr	r0, [r6, #12]
   278ec:	mov	r2, #0
   278f0:	mov	r1, r0
   278f4:	bl	13ce4 <mpc_tan@plt>
   278f8:	cmp	r5, #0
   278fc:	beq	27908 <g_unichar_xdigit_value@plt+0x13aa4>
   27900:	mov	r0, r5
   27904:	bl	13b94 <g_object_unref@plt>
   27908:	mov	r0, r4
   2790c:	bl	13b94 <g_object_unref@plt>
   27910:	mov	r0, r6
   27914:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27918:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   2791c:	ldr	r0, [pc, #100]	; 27988 <g_unichar_xdigit_value@plt+0x13b24>
   27920:	ldr	r1, [pc, #100]	; 2798c <g_unichar_xdigit_value@plt+0x13b28>
   27924:	add	r0, pc, r0
   27928:	add	r1, pc, r1
   2792c:	bl	13c9c <g_dgettext@plt>
   27930:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   27934:	mov	r0, #0
   27938:	mov	r1, #0
   2793c:	mov	r2, r0
   27940:	mov	r3, r1
   27944:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27948:	cmp	r5, #0
   2794c:	mov	r6, r0
   27950:	bne	27900 <g_unichar_xdigit_value@plt+0x13a9c>
   27954:	b	27908 <g_unichar_xdigit_value@plt+0x13aa4>
   27958:	mov	r2, fp
   2795c:	ldr	r0, [r6, #12]
   27960:	bl	2536c <g_unichar_xdigit_value@plt+0x11508>
   27964:	b	278e8 <g_unichar_xdigit_value@plt+0x13a84>
   27968:	ldr	r1, [pc, #32]	; 27990 <g_unichar_xdigit_value@plt+0x13b2c>
   2796c:	ldr	r2, [pc, #32]	; 27994 <g_unichar_xdigit_value@plt+0x13b30>
   27970:	add	r1, pc, r1
   27974:	add	r2, pc, r2
   27978:	add	r1, r1, #1200	; 0x4b0
   2797c:	bl	13450 <g_return_if_fail_warning@plt>
   27980:	mov	r0, r9
   27984:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27988:	andeq	r1, r1, r4, lsl #22
   2798c:	andeq	r3, r1, r4, lsl #3
   27990:	andeq	r2, r1, r0, ror #16
   27994:	andeq	r0, r1, r0, ror r7
   27998:	push	{r4, r5, r6, r7, r8, lr}
   2799c:	subs	r5, r0, #0
   279a0:	mov	r7, r1
   279a4:	beq	27a1c <g_unichar_xdigit_value@plt+0x13bb8>
   279a8:	mov	r1, #0
   279ac:	mov	r2, #0
   279b0:	mov	r3, #0
   279b4:	mov	r0, #1
   279b8:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   279bc:	mov	r4, r0
   279c0:	mov	r0, r5
   279c4:	mov	r1, r4
   279c8:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   279cc:	cmp	r4, #0
   279d0:	mov	r6, r0
   279d4:	beq	279e0 <g_unichar_xdigit_value@plt+0x13b7c>
   279d8:	mov	r0, r4
   279dc:	bl	13b94 <g_object_unref@plt>
   279e0:	cmp	r6, #0
   279e4:	ble	27a40 <g_unichar_xdigit_value@plt+0x13bdc>
   279e8:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   279ec:	ldr	r0, [pc, #212]	; 27ac8 <g_unichar_xdigit_value@plt+0x13c64>
   279f0:	ldr	r1, [pc, #212]	; 27acc <g_unichar_xdigit_value@plt+0x13c68>
   279f4:	add	r0, pc, r0
   279f8:	add	r1, pc, r1
   279fc:	bl	13c9c <g_dgettext@plt>
   27a00:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   27a04:	mov	r0, #0
   27a08:	mov	r1, #0
   27a0c:	mov	r2, r0
   27a10:	mov	r3, r1
   27a14:	pop	{r4, r5, r6, r7, r8, lr}
   27a18:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27a1c:	ldr	r1, [pc, #172]	; 27ad0 <g_unichar_xdigit_value@plt+0x13c6c>
   27a20:	ldr	r2, [pc, #172]	; 27ad4 <g_unichar_xdigit_value@plt+0x13c70>
   27a24:	add	r1, pc, r1
   27a28:	add	r1, r1, #1200	; 0x4b0
   27a2c:	add	r2, pc, r2
   27a30:	add	r1, r1, #12
   27a34:	bl	13450 <g_return_if_fail_warning@plt>
   27a38:	mov	r0, r5
   27a3c:	pop	{r4, r5, r6, r7, r8, pc}
   27a40:	mvn	r1, #0
   27a44:	mov	r2, #0
   27a48:	mov	r3, #0
   27a4c:	mvn	r0, #0
   27a50:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27a54:	mov	r4, r0
   27a58:	mov	r0, r5
   27a5c:	mov	r1, r4
   27a60:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   27a64:	cmp	r4, #0
   27a68:	mov	r6, r0
   27a6c:	beq	27a78 <g_unichar_xdigit_value@plt+0x13c14>
   27a70:	mov	r0, r4
   27a74:	bl	13b94 <g_object_unref@plt>
   27a78:	cmp	r6, #0
   27a7c:	blt	279e8 <g_unichar_xdigit_value@plt+0x13b84>
   27a80:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27a84:	ldr	r1, [r5, #12]
   27a88:	mov	r2, #0
   27a8c:	mov	r4, r0
   27a90:	ldr	r0, [r0, #12]
   27a94:	bl	139a8 <mpc_asin@plt>
   27a98:	mov	r0, r4
   27a9c:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   27aa0:	cmp	r0, #0
   27aa4:	beq	27ab0 <g_unichar_xdigit_value@plt+0x13c4c>
   27aa8:	mov	r0, r4
   27aac:	pop	{r4, r5, r6, r7, r8, pc}
   27ab0:	ldr	r0, [r4, #12]
   27ab4:	mov	r2, r7
   27ab8:	mov	r1, r0
   27abc:	bl	25200 <g_unichar_xdigit_value@plt+0x1139c>
   27ac0:	mov	r0, r4
   27ac4:	pop	{r4, r5, r6, r7, r8, pc}
   27ac8:	andeq	r1, r1, r4, lsr sl
   27acc:	andeq	r3, r1, r8, lsl #2
   27ad0:	andeq	r2, r1, ip, lsr #15
   27ad4:			; <UNDEFINED> instruction: 0x000106b8
   27ad8:	push	{r4, r5, r6, r7, r8, lr}
   27adc:	subs	r5, r0, #0
   27ae0:	mov	r7, r1
   27ae4:	beq	27b5c <g_unichar_xdigit_value@plt+0x13cf8>
   27ae8:	mov	r1, #0
   27aec:	mov	r2, #0
   27af0:	mov	r3, #0
   27af4:	mov	r0, #1
   27af8:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27afc:	mov	r4, r0
   27b00:	mov	r0, r5
   27b04:	mov	r1, r4
   27b08:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   27b0c:	cmp	r4, #0
   27b10:	mov	r6, r0
   27b14:	beq	27b20 <g_unichar_xdigit_value@plt+0x13cbc>
   27b18:	mov	r0, r4
   27b1c:	bl	13b94 <g_object_unref@plt>
   27b20:	cmp	r6, #0
   27b24:	ble	27b80 <g_unichar_xdigit_value@plt+0x13d1c>
   27b28:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   27b2c:	ldr	r0, [pc, #212]	; 27c08 <g_unichar_xdigit_value@plt+0x13da4>
   27b30:	ldr	r1, [pc, #212]	; 27c0c <g_unichar_xdigit_value@plt+0x13da8>
   27b34:	add	r0, pc, r0
   27b38:	add	r1, pc, r1
   27b3c:	bl	13c9c <g_dgettext@plt>
   27b40:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   27b44:	mov	r0, #0
   27b48:	mov	r1, #0
   27b4c:	mov	r2, r0
   27b50:	mov	r3, r1
   27b54:	pop	{r4, r5, r6, r7, r8, lr}
   27b58:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27b5c:	ldr	r1, [pc, #172]	; 27c10 <g_unichar_xdigit_value@plt+0x13dac>
   27b60:	ldr	r2, [pc, #172]	; 27c14 <g_unichar_xdigit_value@plt+0x13db0>
   27b64:	add	r1, pc, r1
   27b68:	add	r1, r1, #1216	; 0x4c0
   27b6c:	add	r2, pc, r2
   27b70:	add	r1, r1, #8
   27b74:	bl	13450 <g_return_if_fail_warning@plt>
   27b78:	mov	r0, r5
   27b7c:	pop	{r4, r5, r6, r7, r8, pc}
   27b80:	mvn	r1, #0
   27b84:	mov	r2, #0
   27b88:	mov	r3, #0
   27b8c:	mvn	r0, #0
   27b90:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27b94:	mov	r4, r0
   27b98:	mov	r0, r5
   27b9c:	mov	r1, r4
   27ba0:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   27ba4:	cmp	r4, #0
   27ba8:	mov	r6, r0
   27bac:	beq	27bb8 <g_unichar_xdigit_value@plt+0x13d54>
   27bb0:	mov	r0, r4
   27bb4:	bl	13b94 <g_object_unref@plt>
   27bb8:	cmp	r6, #0
   27bbc:	blt	27b28 <g_unichar_xdigit_value@plt+0x13cc4>
   27bc0:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27bc4:	ldr	r1, [r5, #12]
   27bc8:	mov	r2, #0
   27bcc:	mov	r4, r0
   27bd0:	ldr	r0, [r0, #12]
   27bd4:	bl	135d0 <mpc_acos@plt>
   27bd8:	mov	r0, r4
   27bdc:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   27be0:	cmp	r0, #0
   27be4:	beq	27bf0 <g_unichar_xdigit_value@plt+0x13d8c>
   27be8:	mov	r0, r4
   27bec:	pop	{r4, r5, r6, r7, r8, pc}
   27bf0:	ldr	r0, [r4, #12]
   27bf4:	mov	r2, r7
   27bf8:	mov	r1, r0
   27bfc:	bl	25200 <g_unichar_xdigit_value@plt+0x1139c>
   27c00:	mov	r0, r4
   27c04:	pop	{r4, r5, r6, r7, r8, pc}
   27c08:	strdeq	r1, [r1], -r4
   27c0c:	andeq	r3, r1, r0
   27c10:	andeq	r2, r1, ip, ror #12
   27c14:	andeq	r0, r1, r8, ror r5
   27c18:	push	{r4, r5, r6, lr}
   27c1c:	subs	r5, r0, #0
   27c20:	mov	r6, r1
   27c24:	beq	27c70 <g_unichar_xdigit_value@plt+0x13e0c>
   27c28:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27c2c:	ldr	r1, [r5, #12]
   27c30:	mov	r2, #0
   27c34:	mov	r4, r0
   27c38:	ldr	r0, [r0, #12]
   27c3c:	bl	1342c <mpc_atan@plt>
   27c40:	mov	r0, r4
   27c44:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   27c48:	cmp	r0, #0
   27c4c:	beq	27c58 <g_unichar_xdigit_value@plt+0x13df4>
   27c50:	mov	r0, r4
   27c54:	pop	{r4, r5, r6, pc}
   27c58:	ldr	r0, [r4, #12]
   27c5c:	mov	r2, r6
   27c60:	mov	r1, r0
   27c64:	bl	25200 <g_unichar_xdigit_value@plt+0x1139c>
   27c68:	mov	r0, r4
   27c6c:	pop	{r4, r5, r6, pc}
   27c70:	ldr	r1, [pc, #28]	; 27c94 <g_unichar_xdigit_value@plt+0x13e30>
   27c74:	ldr	r2, [pc, #28]	; 27c98 <g_unichar_xdigit_value@plt+0x13e34>
   27c78:	add	r1, pc, r1
   27c7c:	add	r1, r1, #1232	; 0x4d0
   27c80:	add	r2, pc, r2
   27c84:	add	r1, r1, #4
   27c88:	bl	13450 <g_return_if_fail_warning@plt>
   27c8c:	mov	r0, r5
   27c90:	pop	{r4, r5, r6, pc}
   27c94:	andeq	r2, r1, r8, asr r5
   27c98:	andeq	r0, r1, r4, ror #8
   27c9c:	push	{r3, r4, r5, lr}
   27ca0:	subs	r5, r0, #0
   27ca4:	beq	27cc8 <g_unichar_xdigit_value@plt+0x13e64>
   27ca8:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27cac:	ldr	r1, [r5, #12]
   27cb0:	mov	r2, #0
   27cb4:	mov	r4, r0
   27cb8:	ldr	r0, [r0, #12]
   27cbc:	bl	13df8 <mpc_sinh@plt>
   27cc0:	mov	r0, r4
   27cc4:	pop	{r3, r4, r5, pc}
   27cc8:	ldr	r1, [pc, #24]	; 27ce8 <g_unichar_xdigit_value@plt+0x13e84>
   27ccc:	ldr	r2, [pc, #24]	; 27cec <g_unichar_xdigit_value@plt+0x13e88>
   27cd0:	add	r1, pc, r1
   27cd4:	add	r2, pc, r2
   27cd8:	add	r1, r1, #1248	; 0x4e0
   27cdc:	bl	13450 <g_return_if_fail_warning@plt>
   27ce0:	mov	r0, r5
   27ce4:	pop	{r3, r4, r5, pc}
   27ce8:	andeq	r2, r1, r0, lsl #10
   27cec:	andeq	r0, r1, r0, lsl r4
   27cf0:	push	{r3, r4, r5, lr}
   27cf4:	subs	r5, r0, #0
   27cf8:	beq	27d1c <g_unichar_xdigit_value@plt+0x13eb8>
   27cfc:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27d00:	ldr	r1, [r5, #12]
   27d04:	mov	r2, #0
   27d08:	mov	r4, r0
   27d0c:	ldr	r0, [r0, #12]
   27d10:	bl	13ac8 <mpc_cosh@plt>
   27d14:	mov	r0, r4
   27d18:	pop	{r3, r4, r5, pc}
   27d1c:	ldr	r1, [pc, #28]	; 27d40 <g_unichar_xdigit_value@plt+0x13edc>
   27d20:	ldr	r2, [pc, #28]	; 27d44 <g_unichar_xdigit_value@plt+0x13ee0>
   27d24:	add	r1, pc, r1
   27d28:	add	r1, r1, #1248	; 0x4e0
   27d2c:	add	r2, pc, r2
   27d30:	add	r1, r1, #12
   27d34:	bl	13450 <g_return_if_fail_warning@plt>
   27d38:	mov	r0, r5
   27d3c:	pop	{r3, r4, r5, pc}
   27d40:	andeq	r2, r1, ip, lsr #9
   27d44:			; <UNDEFINED> instruction: 0x000103b8
   27d48:	push	{r3, r4, r5, lr}
   27d4c:	subs	r5, r0, #0
   27d50:	beq	27d74 <g_unichar_xdigit_value@plt+0x13f10>
   27d54:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27d58:	ldr	r1, [r5, #12]
   27d5c:	mov	r2, #0
   27d60:	mov	r4, r0
   27d64:	ldr	r0, [r0, #12]
   27d68:	bl	138d0 <mpc_tanh@plt>
   27d6c:	mov	r0, r4
   27d70:	pop	{r3, r4, r5, pc}
   27d74:	ldr	r1, [pc, #28]	; 27d98 <g_unichar_xdigit_value@plt+0x13f34>
   27d78:	ldr	r2, [pc, #28]	; 27d9c <g_unichar_xdigit_value@plt+0x13f38>
   27d7c:	add	r1, pc, r1
   27d80:	add	r1, r1, #1264	; 0x4f0
   27d84:	add	r2, pc, r2
   27d88:	add	r1, r1, #8
   27d8c:	bl	13450 <g_return_if_fail_warning@plt>
   27d90:	mov	r0, r5
   27d94:	pop	{r3, r4, r5, pc}
   27d98:	andeq	r2, r1, r4, asr r4
   27d9c:	andeq	r0, r1, r0, ror #6
   27da0:	push	{r3, r4, r5, lr}
   27da4:	subs	r5, r0, #0
   27da8:	beq	27dcc <g_unichar_xdigit_value@plt+0x13f68>
   27dac:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27db0:	ldr	r1, [r5, #12]
   27db4:	mov	r2, #0
   27db8:	mov	r4, r0
   27dbc:	ldr	r0, [r0, #12]
   27dc0:	bl	13e04 <mpc_asinh@plt>
   27dc4:	mov	r0, r4
   27dc8:	pop	{r3, r4, r5, pc}
   27dcc:	ldr	r1, [pc, #28]	; 27df0 <g_unichar_xdigit_value@plt+0x13f8c>
   27dd0:	ldr	r2, [pc, #28]	; 27df4 <g_unichar_xdigit_value@plt+0x13f90>
   27dd4:	add	r1, pc, r1
   27dd8:	add	r1, r1, #1280	; 0x500
   27ddc:	add	r2, pc, r2
   27de0:	add	r1, r1, #4
   27de4:	bl	13450 <g_return_if_fail_warning@plt>
   27de8:	mov	r0, r5
   27dec:	pop	{r3, r4, r5, pc}
   27df0:	strdeq	r2, [r1], -ip
   27df4:	andeq	r0, r1, r8, lsl #6
   27df8:	push	{r4, r5, r6, lr}
   27dfc:	subs	r5, r0, #0
   27e00:	beq	27eb4 <g_unichar_xdigit_value@plt+0x14050>
   27e04:	mov	r1, #0
   27e08:	mov	r2, #0
   27e0c:	mov	r3, #0
   27e10:	mov	r0, #1
   27e14:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27e18:	mov	r4, r0
   27e1c:	mov	r0, r5
   27e20:	mov	r1, r4
   27e24:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   27e28:	cmp	r0, #0
   27e2c:	blt	27e60 <g_unichar_xdigit_value@plt+0x13ffc>
   27e30:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27e34:	ldr	r1, [r5, #12]
   27e38:	mov	r2, #0
   27e3c:	mov	r6, r0
   27e40:	ldr	r0, [r0, #12]
   27e44:	bl	135a0 <mpc_acosh@plt>
   27e48:	cmp	r4, #0
   27e4c:	beq	27eac <g_unichar_xdigit_value@plt+0x14048>
   27e50:	mov	r0, r4
   27e54:	bl	13b94 <g_object_unref@plt>
   27e58:	mov	r0, r6
   27e5c:	pop	{r4, r5, r6, pc}
   27e60:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   27e64:	ldr	r0, [pc, #108]	; 27ed8 <g_unichar_xdigit_value@plt+0x14074>
   27e68:	ldr	r1, [pc, #108]	; 27edc <g_unichar_xdigit_value@plt+0x14078>
   27e6c:	add	r0, pc, r0
   27e70:	add	r1, pc, r1
   27e74:	bl	13c9c <g_dgettext@plt>
   27e78:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   27e7c:	mov	r0, #0
   27e80:	mov	r1, #0
   27e84:	mov	r2, r0
   27e88:	mov	r3, r1
   27e8c:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27e90:	cmp	r4, #0
   27e94:	mov	r5, r0
   27e98:	beq	27ed0 <g_unichar_xdigit_value@plt+0x1406c>
   27e9c:	mov	r0, r4
   27ea0:	bl	13b94 <g_object_unref@plt>
   27ea4:	mov	r0, r5
   27ea8:	pop	{r4, r5, r6, pc}
   27eac:	mov	r0, r6
   27eb0:	pop	{r4, r5, r6, pc}
   27eb4:	ldr	r1, [pc, #36]	; 27ee0 <g_unichar_xdigit_value@plt+0x1407c>
   27eb8:	ldr	r2, [pc, #36]	; 27ee4 <g_unichar_xdigit_value@plt+0x14080>
   27ebc:	add	r1, pc, r1
   27ec0:	add	r1, r1, #1296	; 0x510
   27ec4:	add	r2, pc, r2
   27ec8:	add	r1, r1, #4
   27ecc:	bl	13450 <g_return_if_fail_warning@plt>
   27ed0:	mov	r0, r5
   27ed4:	pop	{r4, r5, r6, pc}
   27ed8:			; <UNDEFINED> instruction: 0x000115bc
   27edc:	andeq	r2, r1, r0, lsl #26
   27ee0:	andeq	r2, r1, r4, lsl r3
   27ee4:	andeq	r0, r1, r0, lsr #4
   27ee8:	push	{r4, r5, r6, lr}
   27eec:	subs	r5, r0, #0
   27ef0:	beq	27f68 <g_unichar_xdigit_value@plt+0x14104>
   27ef4:	mov	r1, #0
   27ef8:	mov	r2, #0
   27efc:	mov	r3, #0
   27f00:	mov	r0, #1
   27f04:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27f08:	mov	r4, r0
   27f0c:	mov	r0, r5
   27f10:	mov	r1, r4
   27f14:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   27f18:	cmp	r4, #0
   27f1c:	mov	r6, r0
   27f20:	beq	27f2c <g_unichar_xdigit_value@plt+0x140c8>
   27f24:	mov	r0, r4
   27f28:	bl	13b94 <g_object_unref@plt>
   27f2c:	cmp	r6, #0
   27f30:	blt	27f8c <g_unichar_xdigit_value@plt+0x14128>
   27f34:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   27f38:	ldr	r0, [pc, #172]	; 27fec <g_unichar_xdigit_value@plt+0x14188>
   27f3c:	ldr	r1, [pc, #172]	; 27ff0 <g_unichar_xdigit_value@plt+0x1418c>
   27f40:	add	r0, pc, r0
   27f44:	add	r1, pc, r1
   27f48:	bl	13c9c <g_dgettext@plt>
   27f4c:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   27f50:	mov	r0, #0
   27f54:	mov	r1, #0
   27f58:	mov	r2, r0
   27f5c:	mov	r3, r1
   27f60:	pop	{r4, r5, r6, lr}
   27f64:	b	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27f68:	ldr	r1, [pc, #132]	; 27ff4 <g_unichar_xdigit_value@plt+0x14190>
   27f6c:	ldr	r2, [pc, #132]	; 27ff8 <g_unichar_xdigit_value@plt+0x14194>
   27f70:	add	r1, pc, r1
   27f74:	add	r1, r1, #1312	; 0x520
   27f78:	add	r2, pc, r2
   27f7c:	add	r1, r1, #4
   27f80:	bl	13450 <g_return_if_fail_warning@plt>
   27f84:	mov	r0, r5
   27f88:	pop	{r4, r5, r6, pc}
   27f8c:	mvn	r1, #0
   27f90:	mov	r2, #0
   27f94:	mov	r3, #0
   27f98:	mvn	r0, #0
   27f9c:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   27fa0:	mov	r4, r0
   27fa4:	mov	r0, r5
   27fa8:	mov	r1, r4
   27fac:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   27fb0:	cmp	r4, #0
   27fb4:	mov	r6, r0
   27fb8:	beq	27fc4 <g_unichar_xdigit_value@plt+0x14160>
   27fbc:	mov	r0, r4
   27fc0:	bl	13b94 <g_object_unref@plt>
   27fc4:	cmp	r6, #0
   27fc8:	ble	27f34 <g_unichar_xdigit_value@plt+0x140d0>
   27fcc:	bl	25940 <g_unichar_xdigit_value@plt+0x11adc>
   27fd0:	ldr	r1, [r5, #12]
   27fd4:	mov	r2, #0
   27fd8:	mov	r4, r0
   27fdc:	ldr	r0, [r0, #12]
   27fe0:	bl	137bc <mpc_atanh@plt>
   27fe4:	mov	r0, r4
   27fe8:	pop	{r4, r5, r6, pc}
   27fec:	andeq	r1, r1, r8, ror #9
   27ff0:	andeq	r2, r1, ip, ror #24
   27ff4:	andeq	r2, r1, r0, ror #4
   27ff8:	andeq	r0, r1, ip, ror #2
   27ffc:	push	{r4, r5, r6, lr}
   28000:	mov	r5, r1
   28004:	mov	r4, r2
   28008:	mov	r6, r0
   2800c:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   28010:	mov	r1, r6
   28014:	mov	r2, r5
   28018:	mov	r3, r4
   2801c:	pop	{r4, r5, r6, lr}
   28020:	b	276ec <g_unichar_xdigit_value@plt+0x13888>
   28024:	push	{r4, lr}
   28028:	mov	r4, r0
   2802c:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   28030:	mov	r1, r0
   28034:	mov	r0, r4
   28038:	bl	13870 <g_type_instance_get_private@plt>
   2803c:	str	r0, [r4, #12]
   28040:	bl	251f0 <g_unichar_xdigit_value@plt+0x1138c>
   28044:	mov	r1, r0
   28048:	ldr	r0, [r4, #12]
   2804c:	pop	{r4, lr}
   28050:	b	13534 <mpc_init2@plt>
   28054:	push	{r4, lr}
   28058:	mov	r4, r0
   2805c:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   28060:	mov	r1, r0
   28064:	mov	r0, r4
   28068:	bl	13510 <g_type_check_instance_cast@plt>
   2806c:	ldr	r0, [r0, #12]
   28070:	bl	13480 <mpc_clear@plt>
   28074:	ldr	r3, [pc, #28]	; 28098 <g_unichar_xdigit_value@plt+0x14234>
   28078:	mov	r1, #80	; 0x50
   2807c:	add	r3, pc, r3
   28080:	ldr	r0, [r3]
   28084:	bl	13db0 <g_type_check_class_cast@plt>
   28088:	ldr	r3, [r0, #24]
   2808c:	mov	r0, r4
   28090:	blx	r3
   28094:	pop	{r4, pc}
   28098:	andeq	r9, r2, r0, lsl #10
   2809c:	push	{r4, r5, r6, r7, lr}
   280a0:	sub	sp, sp, #28
   280a4:	mov	r4, r0
   280a8:	mov	r6, r1
   280ac:	mov	r5, r3
   280b0:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   280b4:	mov	r1, r0
   280b8:	mov	r0, r4
   280bc:	bl	13510 <g_type_check_instance_cast@plt>
   280c0:	ldm	r5, {r3, r7}
   280c4:	ldr	r0, [r3]
   280c8:	bl	13564 <g_type_name@plt>
   280cc:	ldr	r3, [r4]
   280d0:	mov	r5, r0
   280d4:	ldr	r0, [r3]
   280d8:	bl	13564 <g_type_name@plt>
   280dc:	ldr	r2, [pc, #64]	; 28124 <g_unichar_xdigit_value@plt+0x142c0>
   280e0:	movw	r3, #3693	; 0xe6d
   280e4:	str	r3, [sp]
   280e8:	add	r2, pc, r2
   280ec:	ldr	r3, [pc, #52]	; 28128 <g_unichar_xdigit_value@plt+0x142c4>
   280f0:	str	r2, [sp, #4]
   280f4:	mov	r1, #16
   280f8:	ldr	r2, [pc, #44]	; 2812c <g_unichar_xdigit_value@plt+0x142c8>
   280fc:	add	r3, pc, r3
   28100:	str	r6, [sp, #8]
   28104:	str	r7, [sp, #12]
   28108:	add	r2, pc, r2
   2810c:	str	r5, [sp, #16]
   28110:	str	r0, [sp, #20]
   28114:	mov	r0, #0
   28118:	bl	13558 <g_log@plt>
   2811c:	add	sp, sp, #28
   28120:	pop	{r4, r5, r6, r7, pc}
   28124:	andeq	r2, r1, r4, lsr #1
   28128:	strdeq	r2, [r1], -r8
   2812c:	andeq	r2, r1, r8, lsr #32
   28130:	push	{r4, r5, r6, r7, lr}
   28134:	sub	sp, sp, #28
   28138:	mov	r4, r0
   2813c:	mov	r6, r1
   28140:	mov	r5, r3
   28144:	bl	25594 <g_unichar_xdigit_value@plt+0x11730>
   28148:	mov	r1, r0
   2814c:	mov	r0, r4
   28150:	bl	13510 <g_type_check_instance_cast@plt>
   28154:	ldm	r5, {r3, r7}
   28158:	ldr	r0, [r3]
   2815c:	bl	13564 <g_type_name@plt>
   28160:	ldr	r3, [r4]
   28164:	mov	r5, r0
   28168:	ldr	r0, [r3]
   2816c:	bl	13564 <g_type_name@plt>
   28170:	ldr	r2, [pc, #64]	; 281b8 <g_unichar_xdigit_value@plt+0x14354>
   28174:	movw	r3, #3677	; 0xe5d
   28178:	str	r3, [sp]
   2817c:	add	r2, pc, r2
   28180:	ldr	r3, [pc, #52]	; 281bc <g_unichar_xdigit_value@plt+0x14358>
   28184:	str	r2, [sp, #4]
   28188:	mov	r1, #16
   2818c:	ldr	r2, [pc, #44]	; 281c0 <g_unichar_xdigit_value@plt+0x1435c>
   28190:	add	r3, pc, r3
   28194:	str	r6, [sp, #8]
   28198:	str	r7, [sp, #12]
   2819c:	add	r2, pc, r2
   281a0:	str	r5, [sp, #16]
   281a4:	str	r0, [sp, #20]
   281a8:	mov	r0, #0
   281ac:	bl	13558 <g_log@plt>
   281b0:	add	sp, sp, #28
   281b4:	pop	{r4, r5, r6, r7, pc}
   281b8:	andeq	r2, r1, r0, lsl r0
   281bc:	andeq	r2, r1, r4, ror #20
   281c0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   281c4:	push	{r3, r4, r5, lr}
   281c8:	mov	r4, r1
   281cc:	mov	r5, r0
   281d0:	bl	13474 <g_unichar_isxdigit@plt>
   281d4:	cmp	r0, #0
   281d8:	beq	281f0 <g_unichar_xdigit_value@plt+0x1438c>
   281dc:	mov	r0, r5
   281e0:	bl	13e64 <g_unichar_xdigit_value@plt>
   281e4:	cmp	r0, r4
   281e8:	mvnge	r0, #0
   281ec:	pop	{r3, r4, r5, pc}
   281f0:	mvn	r0, #0
   281f4:	pop	{r3, r4, r5, pc}
   281f8:	ldr	r3, [pc, #748]	; 284ec <g_unichar_xdigit_value@plt+0x14688>
   281fc:	ldr	r2, [pc, #748]	; 284f0 <g_unichar_xdigit_value@plt+0x1468c>
   28200:	add	r3, pc, r3
   28204:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28208:	subs	r5, r0, #0
   2820c:	ldr	r6, [r3, r2]
   28210:	sub	sp, sp, #32
   28214:	mov	r4, #0
   28218:	str	r4, [sp, #4]
   2821c:	ldr	r3, [r6]
   28220:	str	r4, [sp, #8]
   28224:	str	r4, [sp, #12]
   28228:	str	r4, [sp, #16]
   2822c:	str	r3, [sp, #28]
   28230:	str	r4, [sp, #20]
   28234:	str	r4, [sp, #24]
   28238:	beq	283ac <g_unichar_xdigit_value@plt+0x14548>
   2823c:	mov	r1, #176	; 0xb0
   28240:	mov	r2, r4
   28244:	bl	24690 <g_unichar_xdigit_value@plt+0x1082c>
   28248:	subs	r8, r0, #0
   2824c:	blt	28394 <g_unichar_xdigit_value@plt+0x14530>
   28250:	mov	r2, r8
   28254:	mov	r1, r4
   28258:	mov	r0, r5
   2825c:	bl	243e0 <g_unichar_xdigit_value@plt+0x1057c>
   28260:	mov	r1, #10
   28264:	mov	r9, r0
   28268:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   2826c:	mov	r7, r0
   28270:	mov	r0, r9
   28274:	bl	1399c <g_free@plt>
   28278:	cmp	r7, #0
   2827c:	beq	28394 <g_unichar_xdigit_value@plt+0x14530>
   28280:	add	r1, sp, #32
   28284:	add	r2, sp, #8
   28288:	mov	r0, r5
   2828c:	str	r8, [r1, #-28]!	; 0xffffffe4
   28290:	bl	246ec <g_unichar_xdigit_value@plt+0x10888>
   28294:	ldr	r2, [sp, #4]
   28298:	ldrb	r3, [r5, r2]
   2829c:	cmp	r3, #0
   282a0:	moveq	r0, r7
   282a4:	bne	282c0 <g_unichar_xdigit_value@plt+0x1445c>
   282a8:	ldr	r2, [sp, #28]
   282ac:	ldr	r3, [r6]
   282b0:	cmp	r2, r3
   282b4:	bne	284e8 <g_unichar_xdigit_value@plt+0x14684>
   282b8:	add	sp, sp, #32
   282bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   282c0:	mov	r0, r5
   282c4:	mov	r1, #39	; 0x27
   282c8:	bl	24690 <g_unichar_xdigit_value@plt+0x1082c>
   282cc:	subs	r8, r0, #0
   282d0:	blt	2839c <g_unichar_xdigit_value@plt+0x14538>
   282d4:	ldr	r1, [sp, #4]
   282d8:	mov	r0, r5
   282dc:	rsb	r2, r1, r8
   282e0:	bl	243e0 <g_unichar_xdigit_value@plt+0x1057c>
   282e4:	mov	r1, #10
   282e8:	mov	r4, r0
   282ec:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   282f0:	mov	r9, r0
   282f4:	mov	r0, r4
   282f8:	bl	1399c <g_free@plt>
   282fc:	cmp	r9, #0
   28300:	beq	283d0 <g_unichar_xdigit_value@plt+0x1456c>
   28304:	mov	r2, #60	; 0x3c
   28308:	mov	r3, #0
   2830c:	mov	r0, r9
   28310:	bl	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   28314:	mov	sl, r0
   28318:	mov	r0, r7
   2831c:	mov	r1, sl
   28320:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   28324:	mov	r4, r0
   28328:	mov	r0, r7
   2832c:	bl	13b94 <g_object_unref@plt>
   28330:	cmp	sl, #0
   28334:	beq	28340 <g_unichar_xdigit_value@plt+0x144dc>
   28338:	mov	r0, sl
   2833c:	bl	13b94 <g_object_unref@plt>
   28340:	add	r1, sp, #32
   28344:	add	r2, sp, #16
   28348:	mov	r0, r5
   2834c:	str	r8, [r1, #-20]!	; 0xffffffec
   28350:	bl	246ec <g_unichar_xdigit_value@plt+0x10888>
   28354:	ldr	r2, [sp, #12]
   28358:	ldrb	r3, [r5, r2]
   2835c:	cmp	r3, #0
   28360:	bne	283e0 <g_unichar_xdigit_value@plt+0x1457c>
   28364:	mov	r0, r9
   28368:	bl	13b94 <g_object_unref@plt>
   2836c:	mov	r0, r4
   28370:	b	282a8 <g_unichar_xdigit_value@plt+0x14444>
   28374:	mov	r0, r7
   28378:	bl	13b94 <g_object_unref@plt>
   2837c:	mov	r0, r9
   28380:	bl	13b94 <g_object_unref@plt>
   28384:	cmp	sl, #0
   28388:	beq	28394 <g_unichar_xdigit_value@plt+0x14530>
   2838c:	mov	r0, sl
   28390:	bl	13b94 <g_object_unref@plt>
   28394:	mov	r0, #0
   28398:	b	282a8 <g_unichar_xdigit_value@plt+0x14444>
   2839c:	mov	r0, r7
   283a0:	bl	13b94 <g_object_unref@plt>
   283a4:	mov	r0, r4
   283a8:	b	282a8 <g_unichar_xdigit_value@plt+0x14444>
   283ac:	ldr	r1, [pc, #320]	; 284f4 <g_unichar_xdigit_value@plt+0x14690>
   283b0:	ldr	r2, [pc, #320]	; 284f8 <g_unichar_xdigit_value@plt+0x14694>
   283b4:	add	r1, pc, r1
   283b8:	add	r1, r1, #1328	; 0x530
   283bc:	add	r2, pc, r2
   283c0:	add	r1, r1, #4
   283c4:	bl	13450 <g_return_if_fail_warning@plt>
   283c8:	mov	r0, r5
   283cc:	b	282a8 <g_unichar_xdigit_value@plt+0x14444>
   283d0:	mov	r0, r7
   283d4:	bl	13b94 <g_object_unref@plt>
   283d8:	mov	r0, r9
   283dc:	b	282a8 <g_unichar_xdigit_value@plt+0x14444>
   283e0:	mov	r0, r5
   283e4:	mov	r1, #34	; 0x22
   283e8:	bl	24690 <g_unichar_xdigit_value@plt+0x1082c>
   283ec:	cmp	r0, #0
   283f0:	mov	r2, r0
   283f4:	str	r0, [sp, #20]
   283f8:	blt	284a8 <g_unichar_xdigit_value@plt+0x14644>
   283fc:	ldr	r1, [sp, #12]
   28400:	mov	r0, r5
   28404:	rsb	r2, r1, r2
   28408:	bl	243e0 <g_unichar_xdigit_value@plt+0x1057c>
   2840c:	mov	r1, #10
   28410:	mov	r8, r0
   28414:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   28418:	mov	r7, r0
   2841c:	mov	r0, r8
   28420:	bl	1399c <g_free@plt>
   28424:	cmp	r7, #0
   28428:	beq	284c8 <g_unichar_xdigit_value@plt+0x14664>
   2842c:	mov	r2, #3600	; 0xe10
   28430:	mov	r3, #0
   28434:	mov	r0, r7
   28438:	bl	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   2843c:	mov	r8, r0
   28440:	mov	r0, r4
   28444:	mov	r1, r8
   28448:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   2844c:	cmp	r4, #0
   28450:	mov	sl, r0
   28454:	beq	28460 <g_unichar_xdigit_value@plt+0x145fc>
   28458:	mov	r0, r4
   2845c:	bl	13b94 <g_object_unref@plt>
   28460:	cmp	r8, #0
   28464:	beq	28470 <g_unichar_xdigit_value@plt+0x1460c>
   28468:	mov	r0, r8
   2846c:	bl	13b94 <g_object_unref@plt>
   28470:	mov	r0, r5
   28474:	add	r1, sp, #20
   28478:	add	r2, sp, #24
   2847c:	bl	246ec <g_unichar_xdigit_value@plt+0x10888>
   28480:	ldr	r3, [sp, #20]
   28484:	ldrb	r3, [r5, r3]
   28488:	cmp	r3, #0
   2848c:	bne	28374 <g_unichar_xdigit_value@plt+0x14510>
   28490:	mov	r0, r7
   28494:	bl	13b94 <g_object_unref@plt>
   28498:	mov	r0, r9
   2849c:	bl	13b94 <g_object_unref@plt>
   284a0:	mov	r0, sl
   284a4:	b	282a8 <g_unichar_xdigit_value@plt+0x14444>
   284a8:	mov	r0, r9
   284ac:	bl	13b94 <g_object_unref@plt>
   284b0:	cmp	r4, #0
   284b4:	beq	28394 <g_unichar_xdigit_value@plt+0x14530>
   284b8:	mov	r0, r4
   284bc:	bl	13b94 <g_object_unref@plt>
   284c0:	mov	r0, #0
   284c4:	b	282a8 <g_unichar_xdigit_value@plt+0x14444>
   284c8:	mov	r0, r9
   284cc:	bl	13b94 <g_object_unref@plt>
   284d0:	cmp	r4, #0
   284d4:	beq	28394 <g_unichar_xdigit_value@plt+0x14530>
   284d8:	mov	r0, r4
   284dc:	bl	13b94 <g_object_unref@plt>
   284e0:	mov	r0, r7
   284e4:	b	282a8 <g_unichar_xdigit_value@plt+0x14444>
   284e8:	bl	13978 <__stack_chk_fail@plt>
   284ec:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   284f0:	muleq	r0, r0, r3
   284f4:	andeq	r1, r1, ip, lsl lr
   284f8:	andeq	r2, r1, r4, asr r8
   284fc:	ldr	r3, [pc, #1476]	; 28ac8 <g_unichar_xdigit_value@plt+0x14c64>
   28500:	ldr	r2, [pc, #1476]	; 28acc <g_unichar_xdigit_value@plt+0x14c68>
   28504:	add	r3, pc, r3
   28508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2850c:	subs	r5, r0, #0
   28510:	ldr	r2, [r3, r2]
   28514:	sub	sp, sp, #68	; 0x44
   28518:	mov	r8, #0
   2851c:	mov	r7, r1
   28520:	str	r8, [sp, #40]	; 0x28
   28524:	ldr	r3, [r2]
   28528:	str	r2, [sp, #16]
   2852c:	str	r8, [sp, #44]	; 0x2c
   28530:	str	r8, [sp, #48]	; 0x30
   28534:	str	r3, [sp, #60]	; 0x3c
   28538:	beq	28834 <g_unichar_xdigit_value@plt+0x149d0>
   2853c:	mov	r1, #176	; 0xb0
   28540:	mov	r2, r8
   28544:	bl	24690 <g_unichar_xdigit_value@plt+0x1082c>
   28548:	cmp	r0, #0
   2854c:	bge	287b8 <g_unichar_xdigit_value@plt+0x14954>
   28550:	add	r4, sp, #64	; 0x40
   28554:	add	r9, sp, #56	; 0x38
   28558:	mov	r6, r8
   2855c:	str	r8, [r4, #-24]!	; 0xffffffe8
   28560:	mov	r0, r5
   28564:	mov	r1, r4
   28568:	mov	r2, r9
   2856c:	str	r6, [sp, #56]	; 0x38
   28570:	bl	246ec <g_unichar_xdigit_value@plt+0x10888>
   28574:	cmp	r0, #0
   28578:	bne	28560 <g_unichar_xdigit_value@plt+0x146fc>
   2857c:	ldr	fp, [pc, #1356]	; 28ad0 <g_unichar_xdigit_value@plt+0x14c6c>
   28580:	mov	r8, r0
   28584:	ldr	sl, [sp, #40]	; 0x28
   28588:	mov	r6, #1
   2858c:	add	fp, pc, fp
   28590:	add	fp, fp, #1344	; 0x540
   28594:	str	sl, [sp, #12]
   28598:	mov	sl, r0
   2859c:	mov	r0, r5
   285a0:	mov	r1, r4
   285a4:	mov	r2, r9
   285a8:	str	sl, [sp, #56]	; 0x38
   285ac:	bl	2479c <g_unichar_xdigit_value@plt+0x10938>
   285b0:	ldr	ip, [sp, #56]	; 0x38
   285b4:	cmp	r0, #0
   285b8:	beq	285dc <g_unichar_xdigit_value@plt+0x14778>
   285bc:	add	r2, fp, #8
   285c0:	mov	r3, #0
   285c4:	ldr	r1, [r2, #4]!
   285c8:	cmp	ip, r1
   285cc:	beq	287a0 <g_unichar_xdigit_value@plt+0x1493c>
   285d0:	add	r3, r3, #1
   285d4:	cmp	r3, #10
   285d8:	bne	285c4 <g_unichar_xdigit_value@plt+0x14760>
   285dc:	mov	r0, r5
   285e0:	mov	r1, r4
   285e4:	add	r2, sp, #44	; 0x2c
   285e8:	mov	sl, #0
   285ec:	str	sl, [sp, #40]	; 0x28
   285f0:	bl	246ec <g_unichar_xdigit_value@plt+0x10888>
   285f4:	cmp	r6, #1
   285f8:	ldr	r3, [sp, #44]	; 0x2c
   285fc:	movne	r7, r8
   28600:	cmp	r3, #43	; 0x2b
   28604:	beq	28620 <g_unichar_xdigit_value@plt+0x147bc>
   28608:	cmp	r3, #45	; 0x2d
   2860c:	beq	28808 <g_unichar_xdigit_value@plt+0x149a4>
   28610:	movw	r2, #8722	; 0x2212
   28614:	cmp	r3, r2
   28618:	moveq	sl, #1
   2861c:	bne	287ec <g_unichar_xdigit_value@plt+0x14988>
   28620:	str	sl, [sp, #28]
   28624:	mov	r0, #0
   28628:	mov	r1, #0
   2862c:	mov	r2, r0
   28630:	mov	r3, r1
   28634:	add	sl, sp, #52	; 0x34
   28638:	asr	fp, r7, #31
   2863c:	str	sl, [sp, #20]
   28640:	mov	sl, r7
   28644:	strd	sl, [sp]
   28648:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   2864c:	add	fp, sp, #52	; 0x34
   28650:	str	r9, [sp, #24]
   28654:	mov	r6, r0
   28658:	b	286e8 <g_unichar_xdigit_value@plt+0x14884>
   2865c:	mov	r0, r3
   28660:	mov	r1, r7
   28664:	bl	281c4 <g_unichar_xdigit_value@plt+0x14360>
   28668:	cmp	r7, r0
   2866c:	mov	sl, r0
   28670:	blt	287dc <g_unichar_xdigit_value@plt+0x14978>
   28674:	cmp	r0, #0
   28678:	blt	28814 <g_unichar_xdigit_value@plt+0x149b0>
   2867c:	ldrd	r2, [sp]
   28680:	mov	r0, r6
   28684:	bl	266e0 <g_unichar_xdigit_value@plt+0x1287c>
   28688:	asr	r1, sl, #31
   2868c:	mov	r2, #0
   28690:	mov	r3, #0
   28694:	mov	r8, r0
   28698:	mov	r0, sl
   2869c:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   286a0:	mov	r9, r0
   286a4:	mov	r0, r8
   286a8:	mov	r1, r9
   286ac:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   286b0:	cmp	r6, #0
   286b4:	mov	sl, r0
   286b8:	beq	286c4 <g_unichar_xdigit_value@plt+0x14860>
   286bc:	mov	r0, r6
   286c0:	bl	13b94 <g_object_unref@plt>
   286c4:	cmp	r9, #0
   286c8:	beq	286d4 <g_unichar_xdigit_value@plt+0x14870>
   286cc:	mov	r0, r9
   286d0:	bl	13b94 <g_object_unref@plt>
   286d4:	cmp	r8, #0
   286d8:	beq	286e4 <g_unichar_xdigit_value@plt+0x14880>
   286dc:	mov	r0, r8
   286e0:	bl	13b94 <g_object_unref@plt>
   286e4:	mov	r6, sl
   286e8:	mov	r0, r5
   286ec:	mov	r1, r4
   286f0:	mov	r2, fp
   286f4:	mov	r3, #0
   286f8:	str	r3, [sp, #52]	; 0x34
   286fc:	bl	246ec <g_unichar_xdigit_value@plt+0x10888>
   28700:	mov	r8, #0
   28704:	ldr	r3, [sp, #52]	; 0x34
   28708:	cmp	r0, r8
   2870c:	bne	2865c <g_unichar_xdigit_value@plt+0x147f8>
   28710:	ldr	r9, [sp, #24]
   28714:	str	r6, [sp, #24]
   28718:	mov	r0, r5
   2871c:	mov	r1, r4
   28720:	add	r2, sp, #48	; 0x30
   28724:	bl	246ec <g_unichar_xdigit_value@plt+0x10888>
   28728:	ldr	ip, [sp, #48]	; 0x30
   2872c:	cmp	r0, #0
   28730:	beq	2877c <g_unichar_xdigit_value@plt+0x14918>
   28734:	ldr	r2, [pc, #920]	; 28ad4 <g_unichar_xdigit_value@plt+0x14c70>
   28738:	mov	r3, #0
   2873c:	add	r2, pc, r2
   28740:	add	r2, r2, #1392	; 0x570
   28744:	ldr	r1, [r2, #4]!
   28748:	cmp	ip, r1
   2874c:	beq	28858 <g_unichar_xdigit_value@plt+0x149f4>
   28750:	add	r3, r3, #1
   28754:	cmp	r3, #15
   28758:	bne	28744 <g_unichar_xdigit_value@plt+0x148e0>
   2875c:	cmp	ip, #46	; 0x2e
   28760:	beq	2890c <g_unichar_xdigit_value@plt+0x14aa8>
   28764:	mov	r0, r5
   28768:	mov	r1, r4
   2876c:	mov	r2, r9
   28770:	mov	r3, #0
   28774:	str	r3, [sp, #56]	; 0x38
   28778:	bl	2479c <g_unichar_xdigit_value@plt+0x10938>
   2877c:	ldr	r3, [sp, #40]	; 0x28
   28780:	ldr	fp, [sp, #12]
   28784:	cmp	fp, r3
   28788:	beq	288d8 <g_unichar_xdigit_value@plt+0x14a74>
   2878c:	subs	r0, r6, #0
   28790:	beq	287c0 <g_unichar_xdigit_value@plt+0x1495c>
   28794:	bl	13b94 <g_object_unref@plt>
   28798:	mov	r0, #0
   2879c:	b	287c0 <g_unichar_xdigit_value@plt+0x1495c>
   287a0:	ldr	r1, [sp, #40]	; 0x28
   287a4:	add	r2, r6, r6, lsl #2
   287a8:	mla	r8, r3, r6, r8
   287ac:	lsl	r6, r2, #1
   287b0:	str	r1, [sp, #12]
   287b4:	b	2859c <g_unichar_xdigit_value@plt+0x14738>
   287b8:	mov	r0, r5
   287bc:	bl	281f8 <g_unichar_xdigit_value@plt+0x14394>
   287c0:	ldr	fp, [sp, #16]
   287c4:	ldr	r2, [sp, #60]	; 0x3c
   287c8:	ldr	r3, [fp]
   287cc:	cmp	r2, r3
   287d0:	bne	28ac4 <g_unichar_xdigit_value@plt+0x14c60>
   287d4:	add	sp, sp, #68	; 0x44
   287d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   287dc:	cmp	r6, r8
   287e0:	beq	28798 <g_unichar_xdigit_value@plt+0x14934>
   287e4:	mov	r0, r6
   287e8:	b	28794 <g_unichar_xdigit_value@plt+0x14930>
   287ec:	mov	r0, r5
   287f0:	mov	r1, r4
   287f4:	mov	r2, r9
   287f8:	str	sl, [sp, #56]	; 0x38
   287fc:	str	sl, [sp, #28]
   28800:	bl	2479c <g_unichar_xdigit_value@plt+0x10938>
   28804:	b	28624 <g_unichar_xdigit_value@plt+0x147c0>
   28808:	mov	fp, #1
   2880c:	str	fp, [sp, #28]
   28810:	b	28624 <g_unichar_xdigit_value@plt+0x147c0>
   28814:	ldr	r9, [sp, #24]
   28818:	mov	r0, r5
   2881c:	mov	r1, r4
   28820:	str	r8, [sp, #56]	; 0x38
   28824:	str	r6, [sp, #24]
   28828:	mov	r2, r9
   2882c:	bl	2479c <g_unichar_xdigit_value@plt+0x10938>
   28830:	b	28718 <g_unichar_xdigit_value@plt+0x148b4>
   28834:	ldr	r1, [pc, #668]	; 28ad8 <g_unichar_xdigit_value@plt+0x14c74>
   28838:	ldr	r2, [pc, #668]	; 28adc <g_unichar_xdigit_value@plt+0x14c78>
   2883c:	add	r1, pc, r1
   28840:	add	r1, r1, #1568	; 0x620
   28844:	add	r2, pc, r2
   28848:	add	r1, r1, #8
   2884c:	bl	13450 <g_return_if_fail_warning@plt>
   28850:	mov	r0, r5
   28854:	b	287c0 <g_unichar_xdigit_value@plt+0x1495c>
   28858:	ldr	r2, [pc, #640]	; 28ae0 <g_unichar_xdigit_value@plt+0x14c7c>
   2885c:	mov	r1, #0
   28860:	str	r1, [sp, #56]	; 0x38
   28864:	add	r2, pc, r2
   28868:	add	r3, r2, r3, lsl #2
   2886c:	ldr	r0, [r3, #1456]	; 0x5b0
   28870:	ldr	r2, [r3, #1516]	; 0x5ec
   28874:	asr	r1, r0, #31
   28878:	asr	r3, r2, #31
   2887c:	bl	25864 <g_unichar_xdigit_value@plt+0x11a00>
   28880:	mov	r8, r0
   28884:	mov	r0, r6
   28888:	mov	r1, r8
   2888c:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   28890:	cmp	r6, #0
   28894:	mov	r7, r0
   28898:	beq	288a4 <g_unichar_xdigit_value@plt+0x14a40>
   2889c:	mov	r0, r6
   288a0:	bl	13b94 <g_object_unref@plt>
   288a4:	mov	r0, r5
   288a8:	mov	r1, r4
   288ac:	mov	r2, r9
   288b0:	bl	246ec <g_unichar_xdigit_value@plt+0x10888>
   288b4:	cmp	r0, #0
   288b8:	bne	28a84 <g_unichar_xdigit_value@plt+0x14c20>
   288bc:	cmp	r8, #0
   288c0:	moveq	r0, r7
   288c4:	beq	287c0 <g_unichar_xdigit_value@plt+0x1495c>
   288c8:	mov	r0, r8
   288cc:	bl	13b94 <g_object_unref@plt>
   288d0:	mov	r0, r7
   288d4:	b	287c0 <g_unichar_xdigit_value@plt+0x1495c>
   288d8:	ldr	sl, [sp, #28]
   288dc:	mov	r0, r6
   288e0:	cmp	sl, #0
   288e4:	beq	287c0 <g_unichar_xdigit_value@plt+0x1495c>
   288e8:	bl	25950 <g_unichar_xdigit_value@plt+0x11aec>
   288ec:	cmp	r6, #0
   288f0:	mov	r4, r0
   288f4:	moveq	r0, r0
   288f8:	beq	287c0 <g_unichar_xdigit_value@plt+0x1495c>
   288fc:	mov	r0, r6
   28900:	bl	13b94 <g_object_unref@plt>
   28904:	mov	r0, r4
   28908:	b	287c0 <g_unichar_xdigit_value@plt+0x1495c>
   2890c:	mov	r1, #0
   28910:	mov	r0, #0
   28914:	mov	r3, r1
   28918:	mov	r2, r0
   2891c:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   28920:	mov	r2, #0
   28924:	mov	r3, #0
   28928:	mov	r1, #0
   2892c:	mov	sl, r0
   28930:	mov	r0, #1
   28934:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   28938:	mov	r2, r7
   2893c:	asr	r3, r7, #31
   28940:	str	r6, [sp, #32]
   28944:	strd	r2, [sp]
   28948:	str	r9, [sp, #36]	; 0x24
   2894c:	mov	r8, r0
   28950:	b	289f4 <g_unichar_xdigit_value@plt+0x14b90>
   28954:	mov	r0, r3
   28958:	mov	r1, r7
   2895c:	bl	281c4 <g_unichar_xdigit_value@plt+0x14360>
   28960:	subs	fp, r0, #0
   28964:	blt	28aa0 <g_unichar_xdigit_value@plt+0x14c3c>
   28968:	mov	r0, r8
   2896c:	ldrd	r2, [sp]
   28970:	bl	266e0 <g_unichar_xdigit_value@plt+0x1287c>
   28974:	cmp	r8, #0
   28978:	mov	r9, r0
   2897c:	beq	28988 <g_unichar_xdigit_value@plt+0x14b24>
   28980:	mov	r0, r8
   28984:	bl	13b94 <g_object_unref@plt>
   28988:	mov	r0, sl
   2898c:	ldrd	r2, [sp]
   28990:	bl	266e0 <g_unichar_xdigit_value@plt+0x1287c>
   28994:	cmp	sl, #0
   28998:	mov	r6, r0
   2899c:	beq	289a8 <g_unichar_xdigit_value@plt+0x14b44>
   289a0:	mov	r0, sl
   289a4:	bl	13b94 <g_object_unref@plt>
   289a8:	asr	r1, fp, #31
   289ac:	mov	r2, #0
   289b0:	mov	r3, #0
   289b4:	mov	r0, fp
   289b8:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   289bc:	mov	r8, r0
   289c0:	mov	r0, r6
   289c4:	mov	r1, r8
   289c8:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   289cc:	cmp	r6, #0
   289d0:	mov	sl, r0
   289d4:	beq	289e0 <g_unichar_xdigit_value@plt+0x14b7c>
   289d8:	mov	r0, r6
   289dc:	bl	13b94 <g_object_unref@plt>
   289e0:	cmp	r8, #0
   289e4:	beq	289f0 <g_unichar_xdigit_value@plt+0x14b8c>
   289e8:	mov	r0, r8
   289ec:	bl	13b94 <g_object_unref@plt>
   289f0:	mov	r8, r9
   289f4:	mov	r0, r5
   289f8:	mov	r1, r4
   289fc:	add	r2, sp, #52	; 0x34
   28a00:	mov	fp, #0
   28a04:	str	fp, [sp, #52]	; 0x34
   28a08:	bl	246ec <g_unichar_xdigit_value@plt+0x10888>
   28a0c:	ldr	r3, [sp, #52]	; 0x34
   28a10:	cmp	r0, fp
   28a14:	bne	28954 <g_unichar_xdigit_value@plt+0x14af0>
   28a18:	ldr	r6, [sp, #32]
   28a1c:	mov	r0, sl
   28a20:	mov	r1, r8
   28a24:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   28a28:	cmp	sl, #0
   28a2c:	mov	r4, r0
   28a30:	beq	28a3c <g_unichar_xdigit_value@plt+0x14bd8>
   28a34:	mov	r0, sl
   28a38:	bl	13b94 <g_object_unref@plt>
   28a3c:	mov	r0, r6
   28a40:	mov	r1, r4
   28a44:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   28a48:	ldr	sl, [sp, #24]
   28a4c:	cmp	sl, #0
   28a50:	mov	r6, r0
   28a54:	beq	28a60 <g_unichar_xdigit_value@plt+0x14bfc>
   28a58:	mov	r0, sl
   28a5c:	bl	13b94 <g_object_unref@plt>
   28a60:	cmp	r8, #0
   28a64:	beq	28a70 <g_unichar_xdigit_value@plt+0x14c0c>
   28a68:	mov	r0, r8
   28a6c:	bl	13b94 <g_object_unref@plt>
   28a70:	cmp	r4, #0
   28a74:	beq	2877c <g_unichar_xdigit_value@plt+0x14918>
   28a78:	mov	r0, r4
   28a7c:	bl	13b94 <g_object_unref@plt>
   28a80:	b	2877c <g_unichar_xdigit_value@plt+0x14918>
   28a84:	cmp	r8, #0
   28a88:	beq	28a94 <g_unichar_xdigit_value@plt+0x14c30>
   28a8c:	mov	r0, r8
   28a90:	bl	13b94 <g_object_unref@plt>
   28a94:	subs	r0, r7, #0
   28a98:	bne	28794 <g_unichar_xdigit_value@plt+0x14930>
   28a9c:	b	287c0 <g_unichar_xdigit_value@plt+0x1495c>
   28aa0:	ldr	r9, [sp, #36]	; 0x24
   28aa4:	mov	r0, r5
   28aa8:	mov	r1, r4
   28aac:	mov	r3, #0
   28ab0:	ldr	r6, [sp, #32]
   28ab4:	mov	r2, r9
   28ab8:	str	r3, [sp, #56]	; 0x38
   28abc:	bl	2479c <g_unichar_xdigit_value@plt+0x10938>
   28ac0:	b	28a1c <g_unichar_xdigit_value@plt+0x14bb8>
   28ac4:	bl	13978 <__stack_chk_fail@plt>
   28ac8:	strdeq	r8, [r2], -r4
   28acc:	muleq	r0, r0, r3
   28ad0:	andeq	r1, r1, r4, asr #24
   28ad4:	muleq	r1, r4, sl
   28ad8:	muleq	r1, r4, r9
   28adc:	andeq	r2, r1, ip, asr #7
   28ae0:	andeq	r1, r1, ip, ror #18
   28ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28ae8:	subs	r9, r0, #0
   28aec:	sub	sp, sp, #20
   28af0:	mov	r5, r1
   28af4:	stmib	sp, {r2, r3}
   28af8:	ldr	r4, [sp, #56]	; 0x38
   28afc:	beq	28cac <g_unichar_xdigit_value@plt+0x14e48>
   28b00:	cmp	r1, #0
   28b04:	beq	28cd4 <g_unichar_xdigit_value@plt+0x14e70>
   28b08:	bl	24620 <g_unichar_xdigit_value@plt+0x107bc>
   28b0c:	mov	r7, r0
   28b10:	mov	r0, r5
   28b14:	bl	24620 <g_unichar_xdigit_value@plt+0x107bc>
   28b18:	mov	r8, r0
   28b1c:	mov	r0, r7
   28b20:	bl	13ba0 <strlen@plt>
   28b24:	sub	r5, r0, #1
   28b28:	mov	r0, r8
   28b2c:	bl	13ba0 <strlen@plt>
   28b30:	cmp	r4, #0
   28b34:	add	r3, r4, #3
   28b38:	movlt	r4, r3
   28b3c:	asr	r4, r4, #2
   28b40:	sub	r4, r4, #1
   28b44:	cmp	r4, #0
   28b48:	sub	r6, r0, #1
   28b4c:	ble	28c5c <g_unichar_xdigit_value@plt+0x14df8>
   28b50:	cmp	r5, r4
   28b54:	bgt	28c0c <g_unichar_xdigit_value@plt+0x14da8>
   28b58:	cmp	r6, r4
   28b5c:	bgt	28c0c <g_unichar_xdigit_value@plt+0x14da8>
   28b60:	add	r0, r4, #2
   28b64:	bl	13c90 <g_malloc0@plt>
   28b68:	mov	r2, #0
   28b6c:	add	r3, r0, r4
   28b70:	mov	sl, r0
   28b74:	strb	r2, [r3, #1]
   28b78:	ldr	r3, [pc, #384]	; 28d00 <g_unichar_xdigit_value@plt+0x14e9c>
   28b7c:	add	r3, pc, r3
   28b80:	str	r3, [sp, #12]
   28b84:	b	28be8 <g_unichar_xdigit_value@plt+0x14d84>
   28b88:	mov	r0, r9
   28b8c:	sub	r5, r5, #1
   28b90:	bl	245b0 <g_unichar_xdigit_value@plt+0x1074c>
   28b94:	mov	fp, r0
   28b98:	cmp	r6, #0
   28b9c:	movlt	r1, #0
   28ba0:	blt	28bc0 <g_unichar_xdigit_value@plt+0x14d5c>
   28ba4:	cmp	r8, #0
   28ba8:	ldrbne	r1, [r8, r6]
   28bac:	beq	28c50 <g_unichar_xdigit_value@plt+0x14dec>
   28bb0:	mov	r0, r9
   28bb4:	sub	r6, r6, #1
   28bb8:	bl	245b0 <g_unichar_xdigit_value@plt+0x1074c>
   28bbc:	mov	r1, r0
   28bc0:	ldr	r3, [sp, #4]
   28bc4:	mov	r0, fp
   28bc8:	ldr	r2, [sp, #8]
   28bcc:	blx	r3
   28bd0:	ldr	r3, [sp, #12]
   28bd4:	add	r0, r3, r0
   28bd8:	ldrb	r3, [r0, #1596]	; 0x63c
   28bdc:	strb	r3, [sl, r4]
   28be0:	subs	r4, r4, #1
   28be4:	bcc	28c90 <g_unichar_xdigit_value@plt+0x14e2c>
   28be8:	cmp	r5, #0
   28bec:	movlt	fp, #0
   28bf0:	blt	28b98 <g_unichar_xdigit_value@plt+0x14d34>
   28bf4:	cmp	r7, #0
   28bf8:	ldrbne	r1, [r7, r5]
   28bfc:	bne	28b88 <g_unichar_xdigit_value@plt+0x14d24>
   28c00:	bl	24580 <g_unichar_xdigit_value@plt+0x1071c>
   28c04:	mov	r1, r0
   28c08:	b	28b88 <g_unichar_xdigit_value@plt+0x14d24>
   28c0c:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   28c10:	ldr	r0, [pc, #236]	; 28d04 <g_unichar_xdigit_value@plt+0x14ea0>
   28c14:	add	r0, pc, r0
   28c18:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   28c1c:	mov	r0, #0
   28c20:	mov	r1, #0
   28c24:	mov	r2, r0
   28c28:	mov	r3, r1
   28c2c:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   28c30:	mov	r9, r0
   28c34:	mov	r0, r8
   28c38:	bl	1399c <g_free@plt>
   28c3c:	mov	r0, r7
   28c40:	bl	1399c <g_free@plt>
   28c44:	mov	r0, r9
   28c48:	add	sp, sp, #20
   28c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28c50:	bl	24580 <g_unichar_xdigit_value@plt+0x1071c>
   28c54:	mov	r1, r0
   28c58:	b	28bb0 <g_unichar_xdigit_value@plt+0x14d4c>
   28c5c:	cmp	r6, r5
   28c60:	movge	r4, r6
   28c64:	movlt	r4, r5
   28c68:	cmp	r4, #0
   28c6c:	bgt	28b50 <g_unichar_xdigit_value@plt+0x14cec>
   28c70:	add	r0, r4, #2
   28c74:	bl	13c90 <g_malloc0@plt>
   28c78:	cmp	r4, #0
   28c7c:	mov	r2, #0
   28c80:	add	r3, r0, r4
   28c84:	mov	sl, r0
   28c88:	strb	r2, [r3, #1]
   28c8c:	bge	28b78 <g_unichar_xdigit_value@plt+0x14d14>
   28c90:	mov	r0, sl
   28c94:	mov	r1, #16
   28c98:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   28c9c:	mov	r9, r0
   28ca0:	mov	r0, sl
   28ca4:	bl	1399c <g_free@plt>
   28ca8:	b	28c34 <g_unichar_xdigit_value@plt+0x14dd0>
   28cac:	ldr	r1, [pc, #84]	; 28d08 <g_unichar_xdigit_value@plt+0x14ea4>
   28cb0:	ldr	r2, [pc, #84]	; 28d0c <g_unichar_xdigit_value@plt+0x14ea8>
   28cb4:	add	r1, pc, r1
   28cb8:	add	r1, r1, #1600	; 0x640
   28cbc:	add	r2, pc, r2
   28cc0:	add	r1, r1, #12
   28cc4:	bl	13450 <g_return_if_fail_warning@plt>
   28cc8:	mov	r0, r9
   28ccc:	add	sp, sp, #20
   28cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28cd4:	ldr	r1, [pc, #52]	; 28d10 <g_unichar_xdigit_value@plt+0x14eac>
   28cd8:	mov	r0, r5
   28cdc:	ldr	r2, [pc, #48]	; 28d14 <g_unichar_xdigit_value@plt+0x14eb0>
   28ce0:	add	r1, pc, r1
   28ce4:	add	r1, r1, #1600	; 0x640
   28ce8:	add	r2, pc, r2
   28cec:	add	r1, r1, #12
   28cf0:	bl	13450 <g_return_if_fail_warning@plt>
   28cf4:	mov	r0, r5
   28cf8:	add	sp, sp, #20
   28cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28d00:	andeq	r1, r1, r4, asr r6
   28d04:	andeq	r2, r1, r8
   28d08:	andeq	r1, r1, ip, lsl r5
   28d0c:	andeq	pc, r0, r8, lsr #8
   28d10:	strdeq	r1, [r1], -r0
   28d14:	strdeq	r1, [r1], -r4
   28d18:	push	{r4, r5, lr}
   28d1c:	subs	r5, r0, #0
   28d20:	sub	sp, sp, #12
   28d24:	mov	r4, r1
   28d28:	beq	28d98 <g_unichar_xdigit_value@plt+0x14f34>
   28d2c:	cmp	r1, #0
   28d30:	beq	28dc0 <g_unichar_xdigit_value@plt+0x14f5c>
   28d34:	bl	24f44 <g_unichar_xdigit_value@plt+0x110e0>
   28d38:	cmp	r0, #0
   28d3c:	bne	28d84 <g_unichar_xdigit_value@plt+0x14f20>
   28d40:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   28d44:	ldr	r0, [pc, #160]	; 28dec <g_unichar_xdigit_value@plt+0x14f88>
   28d48:	ldr	r1, [pc, #160]	; 28df0 <g_unichar_xdigit_value@plt+0x14f8c>
   28d4c:	add	r0, pc, r0
   28d50:	add	r1, pc, r1
   28d54:	bl	13c9c <g_dgettext@plt>
   28d58:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   28d5c:	ldr	r2, [pc, #144]	; 28df4 <g_unichar_xdigit_value@plt+0x14f90>
   28d60:	mov	ip, #0
   28d64:	mov	r0, r5
   28d68:	mov	r1, r4
   28d6c:	mov	r3, r5
   28d70:	add	r2, pc, r2
   28d74:	str	ip, [sp]
   28d78:	bl	28ae4 <g_unichar_xdigit_value@plt+0x14c80>
   28d7c:	add	sp, sp, #12
   28d80:	pop	{r4, r5, pc}
   28d84:	mov	r0, r4
   28d88:	bl	24f44 <g_unichar_xdigit_value@plt+0x110e0>
   28d8c:	cmp	r0, #0
   28d90:	bne	28d5c <g_unichar_xdigit_value@plt+0x14ef8>
   28d94:	b	28d40 <g_unichar_xdigit_value@plt+0x14edc>
   28d98:	ldr	r1, [pc, #88]	; 28df8 <g_unichar_xdigit_value@plt+0x14f94>
   28d9c:	ldr	r2, [pc, #88]	; 28dfc <g_unichar_xdigit_value@plt+0x14f98>
   28da0:	add	r1, pc, r1
   28da4:	add	r1, r1, #1616	; 0x650
   28da8:	add	r2, pc, r2
   28dac:	add	r1, r1, #12
   28db0:	bl	13450 <g_return_if_fail_warning@plt>
   28db4:	mov	r0, r5
   28db8:	add	sp, sp, #12
   28dbc:	pop	{r4, r5, pc}
   28dc0:	ldr	r1, [pc, #56]	; 28e00 <g_unichar_xdigit_value@plt+0x14f9c>
   28dc4:	mov	r0, r4
   28dc8:	ldr	r2, [pc, #52]	; 28e04 <g_unichar_xdigit_value@plt+0x14fa0>
   28dcc:	add	r1, pc, r1
   28dd0:	add	r1, r1, #1616	; 0x650
   28dd4:	add	r2, pc, r2
   28dd8:	add	r1, r1, #12
   28ddc:	bl	13450 <g_return_if_fail_warning@plt>
   28de0:	mov	r0, r4
   28de4:	add	sp, sp, #12
   28de8:	pop	{r4, r5, pc}
   28dec:	ldrdeq	r0, [r1], -ip
   28df0:	strdeq	r1, [r1], -r0
   28df4:			; <UNDEFINED> instruction: 0xffffb640
   28df8:	andeq	r1, r1, r0, lsr r4
   28dfc:	andeq	pc, r0, ip, lsr r3	; <UNPREDICTABLE>
   28e00:	andeq	r1, r1, r4, lsl #8
   28e04:	andeq	r1, r1, r8, lsl #22
   28e08:	push	{r4, r5, lr}
   28e0c:	subs	r5, r0, #0
   28e10:	sub	sp, sp, #12
   28e14:	mov	r4, r1
   28e18:	beq	28e88 <g_unichar_xdigit_value@plt+0x15024>
   28e1c:	cmp	r1, #0
   28e20:	beq	28eb0 <g_unichar_xdigit_value@plt+0x1504c>
   28e24:	bl	24f44 <g_unichar_xdigit_value@plt+0x110e0>
   28e28:	cmp	r0, #0
   28e2c:	bne	28e74 <g_unichar_xdigit_value@plt+0x15010>
   28e30:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   28e34:	ldr	r0, [pc, #160]	; 28edc <g_unichar_xdigit_value@plt+0x15078>
   28e38:	ldr	r1, [pc, #160]	; 28ee0 <g_unichar_xdigit_value@plt+0x1507c>
   28e3c:	add	r0, pc, r0
   28e40:	add	r1, pc, r1
   28e44:	bl	13c9c <g_dgettext@plt>
   28e48:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   28e4c:	ldr	r2, [pc, #144]	; 28ee4 <g_unichar_xdigit_value@plt+0x15080>
   28e50:	mov	ip, #0
   28e54:	mov	r0, r5
   28e58:	mov	r1, r4
   28e5c:	mov	r3, r5
   28e60:	add	r2, pc, r2
   28e64:	str	ip, [sp]
   28e68:	bl	28ae4 <g_unichar_xdigit_value@plt+0x14c80>
   28e6c:	add	sp, sp, #12
   28e70:	pop	{r4, r5, pc}
   28e74:	mov	r0, r4
   28e78:	bl	24f44 <g_unichar_xdigit_value@plt+0x110e0>
   28e7c:	cmp	r0, #0
   28e80:	bne	28e4c <g_unichar_xdigit_value@plt+0x14fe8>
   28e84:	b	28e30 <g_unichar_xdigit_value@plt+0x14fcc>
   28e88:	ldr	r1, [pc, #88]	; 28ee8 <g_unichar_xdigit_value@plt+0x15084>
   28e8c:	ldr	r2, [pc, #88]	; 28eec <g_unichar_xdigit_value@plt+0x15088>
   28e90:	add	r1, pc, r1
   28e94:	add	r1, r1, #1632	; 0x660
   28e98:	add	r2, pc, r2
   28e9c:	add	r1, r1, #8
   28ea0:	bl	13450 <g_return_if_fail_warning@plt>
   28ea4:	mov	r0, r5
   28ea8:	add	sp, sp, #12
   28eac:	pop	{r4, r5, pc}
   28eb0:	ldr	r1, [pc, #56]	; 28ef0 <g_unichar_xdigit_value@plt+0x1508c>
   28eb4:	mov	r0, r4
   28eb8:	ldr	r2, [pc, #52]	; 28ef4 <g_unichar_xdigit_value@plt+0x15090>
   28ebc:	add	r1, pc, r1
   28ec0:	add	r1, r1, #1632	; 0x660
   28ec4:	add	r2, pc, r2
   28ec8:	add	r1, r1, #8
   28ecc:	bl	13450 <g_return_if_fail_warning@plt>
   28ed0:	mov	r0, r4
   28ed4:	add	sp, sp, #12
   28ed8:	pop	{r4, r5, pc}
   28edc:	andeq	r0, r1, ip, ror #11
   28ee0:	andeq	r1, r1, r4, lsr lr
   28ee4:			; <UNDEFINED> instruction: 0xffffb558
   28ee8:	andeq	r1, r1, r0, asr #6
   28eec:	andeq	pc, r0, ip, asr #4
   28ef0:	andeq	r1, r1, r4, lsl r3
   28ef4:	andeq	r1, r1, r8, lsl sl
   28ef8:	push	{r4, r5, lr}
   28efc:	subs	r5, r0, #0
   28f00:	sub	sp, sp, #12
   28f04:	mov	r4, r1
   28f08:	beq	28f78 <g_unichar_xdigit_value@plt+0x15114>
   28f0c:	cmp	r1, #0
   28f10:	beq	28fa0 <g_unichar_xdigit_value@plt+0x1513c>
   28f14:	bl	24f44 <g_unichar_xdigit_value@plt+0x110e0>
   28f18:	cmp	r0, #0
   28f1c:	bne	28f64 <g_unichar_xdigit_value@plt+0x15100>
   28f20:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   28f24:	ldr	r0, [pc, #160]	; 28fcc <g_unichar_xdigit_value@plt+0x15168>
   28f28:	ldr	r1, [pc, #160]	; 28fd0 <g_unichar_xdigit_value@plt+0x1516c>
   28f2c:	add	r0, pc, r0
   28f30:	add	r1, pc, r1
   28f34:	bl	13c9c <g_dgettext@plt>
   28f38:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   28f3c:	ldr	r2, [pc, #144]	; 28fd4 <g_unichar_xdigit_value@plt+0x15170>
   28f40:	mov	ip, #0
   28f44:	mov	r0, r5
   28f48:	mov	r1, r4
   28f4c:	mov	r3, r5
   28f50:	add	r2, pc, r2
   28f54:	str	ip, [sp]
   28f58:	bl	28ae4 <g_unichar_xdigit_value@plt+0x14c80>
   28f5c:	add	sp, sp, #12
   28f60:	pop	{r4, r5, pc}
   28f64:	mov	r0, r4
   28f68:	bl	24f44 <g_unichar_xdigit_value@plt+0x110e0>
   28f6c:	cmp	r0, #0
   28f70:	bne	28f3c <g_unichar_xdigit_value@plt+0x150d8>
   28f74:	b	28f20 <g_unichar_xdigit_value@plt+0x150bc>
   28f78:	ldr	r1, [pc, #88]	; 28fd8 <g_unichar_xdigit_value@plt+0x15174>
   28f7c:	ldr	r2, [pc, #88]	; 28fdc <g_unichar_xdigit_value@plt+0x15178>
   28f80:	add	r1, pc, r1
   28f84:	add	r1, r1, #1648	; 0x670
   28f88:	add	r2, pc, r2
   28f8c:	add	r1, r1, #4
   28f90:	bl	13450 <g_return_if_fail_warning@plt>
   28f94:	mov	r0, r5
   28f98:	add	sp, sp, #12
   28f9c:	pop	{r4, r5, pc}
   28fa0:	ldr	r1, [pc, #56]	; 28fe0 <g_unichar_xdigit_value@plt+0x1517c>
   28fa4:	mov	r0, r4
   28fa8:	ldr	r2, [pc, #52]	; 28fe4 <g_unichar_xdigit_value@plt+0x15180>
   28fac:	add	r1, pc, r1
   28fb0:	add	r1, r1, #1648	; 0x670
   28fb4:	add	r2, pc, r2
   28fb8:	add	r1, r1, #4
   28fbc:	bl	13450 <g_return_if_fail_warning@plt>
   28fc0:	mov	r0, r4
   28fc4:	add	sp, sp, #12
   28fc8:	pop	{r4, r5, pc}
   28fcc:	strdeq	r0, [r1], -ip
   28fd0:	andeq	r1, r1, r8, ror sp
   28fd4:			; <UNDEFINED> instruction: 0xffffb470
   28fd8:	andeq	r1, r1, r0, asr r2
   28fdc:	andeq	pc, r0, ip, asr r1	; <UNPREDICTABLE>
   28fe0:	andeq	r1, r1, r4, lsr #4
   28fe4:	andeq	r1, r1, r8, lsr #18
   28fe8:	push	{r4, r5, r6, lr}
   28fec:	subs	r5, r0, #0
   28ff0:	sub	sp, sp, #8
   28ff4:	mov	r6, r1
   28ff8:	beq	2905c <g_unichar_xdigit_value@plt+0x151f8>
   28ffc:	bl	24f44 <g_unichar_xdigit_value@plt+0x110e0>
   29000:	cmp	r0, #0
   29004:	beq	29080 <g_unichar_xdigit_value@plt+0x1521c>
   29008:	mov	r1, #0
   2900c:	mov	r0, #0
   29010:	mov	r3, r1
   29014:	mov	r2, r0
   29018:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   2901c:	ldr	r2, [pc, #124]	; 290a0 <g_unichar_xdigit_value@plt+0x1523c>
   29020:	mov	r3, r5
   29024:	str	r6, [sp]
   29028:	add	r2, pc, r2
   2902c:	mov	r4, r0
   29030:	mov	r0, r5
   29034:	mov	r1, r4
   29038:	bl	28ae4 <g_unichar_xdigit_value@plt+0x14c80>
   2903c:	cmp	r4, #0
   29040:	mov	r5, r0
   29044:	beq	29074 <g_unichar_xdigit_value@plt+0x15210>
   29048:	mov	r0, r4
   2904c:	bl	13b94 <g_object_unref@plt>
   29050:	mov	r0, r5
   29054:	add	sp, sp, #8
   29058:	pop	{r4, r5, r6, pc}
   2905c:	ldr	r1, [pc, #64]	; 290a4 <g_unichar_xdigit_value@plt+0x15240>
   29060:	ldr	r2, [pc, #64]	; 290a8 <g_unichar_xdigit_value@plt+0x15244>
   29064:	add	r1, pc, r1
   29068:	add	r2, pc, r2
   2906c:	add	r1, r1, #1664	; 0x680
   29070:	bl	13450 <g_return_if_fail_warning@plt>
   29074:	mov	r0, r5
   29078:	add	sp, sp, #8
   2907c:	pop	{r4, r5, r6, pc}
   29080:	bl	254ec <g_unichar_xdigit_value@plt+0x11688>
   29084:	ldr	r0, [pc, #32]	; 290ac <g_unichar_xdigit_value@plt+0x15248>
   29088:	ldr	r1, [pc, #32]	; 290b0 <g_unichar_xdigit_value@plt+0x1524c>
   2908c:	add	r0, pc, r0
   29090:	add	r1, pc, r1
   29094:	bl	13c9c <g_dgettext@plt>
   29098:	bl	25500 <g_unichar_xdigit_value@plt+0x1169c>
   2909c:	b	29008 <g_unichar_xdigit_value@plt+0x151a4>
   290a0:			; <UNDEFINED> instruction: 0xffffb3a0
   290a4:	andeq	r1, r1, ip, ror #2
   290a8:	andeq	pc, r0, ip, ror r0	; <UNPREDICTABLE>
   290ac:	muleq	r1, ip, r3
   290b0:	andeq	r1, r1, ip, asr #24
   290b4:	push	{r4, r5, r6, lr}
   290b8:	subs	r6, r0, #0
   290bc:	sub	sp, sp, #8
   290c0:	mov	r5, r1
   290c4:	beq	2913c <g_unichar_xdigit_value@plt+0x152d8>
   290c8:	mov	r1, #0
   290cc:	mov	r0, #0
   290d0:	mov	r3, r1
   290d4:	mov	r2, r0
   290d8:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   290dc:	ldr	r2, [pc, #128]	; 29164 <g_unichar_xdigit_value@plt+0x15300>
   290e0:	mov	r3, r6
   290e4:	str	r5, [sp]
   290e8:	add	r2, pc, r2
   290ec:	mov	r4, r0
   290f0:	mov	r0, r6
   290f4:	mov	r1, r4
   290f8:	bl	28ae4 <g_unichar_xdigit_value@plt+0x14c80>
   290fc:	mov	r1, r5
   29100:	mov	r6, r0
   29104:	bl	28fe8 <g_unichar_xdigit_value@plt+0x15184>
   29108:	cmp	r6, #0
   2910c:	mov	r5, r0
   29110:	beq	2911c <g_unichar_xdigit_value@plt+0x152b8>
   29114:	mov	r0, r6
   29118:	bl	13b94 <g_object_unref@plt>
   2911c:	cmp	r4, #0
   29120:	moveq	r0, r5
   29124:	beq	29134 <g_unichar_xdigit_value@plt+0x152d0>
   29128:	mov	r0, r4
   2912c:	bl	13b94 <g_object_unref@plt>
   29130:	mov	r0, r5
   29134:	add	sp, sp, #8
   29138:	pop	{r4, r5, r6, pc}
   2913c:	ldr	r1, [pc, #36]	; 29168 <g_unichar_xdigit_value@plt+0x15304>
   29140:	ldr	r2, [pc, #36]	; 2916c <g_unichar_xdigit_value@plt+0x15308>
   29144:	add	r1, pc, r1
   29148:	add	r1, r1, #1664	; 0x680
   2914c:	add	r2, pc, r2
   29150:	add	r1, r1, #12
   29154:	bl	13450 <g_return_if_fail_warning@plt>
   29158:	mov	r0, r6
   2915c:	add	sp, sp, #8
   29160:	pop	{r4, r5, r6, pc}
   29164:			; <UNDEFINED> instruction: 0xffffb2e8
   29168:	andeq	r1, r1, ip, lsl #1
   2916c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   29170:	push	{r4, r5, r6, lr}
   29174:	subs	r4, r0, #0
   29178:	beq	291dc <g_unichar_xdigit_value@plt+0x15378>
   2917c:	bl	290b4 <g_unichar_xdigit_value@plt+0x15250>
   29180:	mov	r2, #0
   29184:	mov	r3, #0
   29188:	mov	r1, #0
   2918c:	mov	r4, r0
   29190:	mov	r0, #1
   29194:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   29198:	mov	r5, r0
   2919c:	mov	r0, r4
   291a0:	mov	r1, r5
   291a4:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   291a8:	cmp	r5, #0
   291ac:	mov	r6, r0
   291b0:	beq	291bc <g_unichar_xdigit_value@plt+0x15358>
   291b4:	mov	r0, r5
   291b8:	bl	13b94 <g_object_unref@plt>
   291bc:	cmp	r4, #0
   291c0:	beq	291d4 <g_unichar_xdigit_value@plt+0x15370>
   291c4:	mov	r0, r4
   291c8:	bl	13b94 <g_object_unref@plt>
   291cc:	mov	r0, r6
   291d0:	pop	{r4, r5, r6, pc}
   291d4:	mov	r0, r6
   291d8:	pop	{r4, r5, r6, pc}
   291dc:	ldr	r1, [pc, #28]	; 29200 <g_unichar_xdigit_value@plt+0x1539c>
   291e0:	ldr	r2, [pc, #28]	; 29204 <g_unichar_xdigit_value@plt+0x153a0>
   291e4:	add	r1, pc, r1
   291e8:	add	r1, r1, #1696	; 0x6a0
   291ec:	add	r2, pc, r2
   291f0:	add	r1, r1, #4
   291f4:	bl	13450 <g_return_if_fail_warning@plt>
   291f8:	mov	r0, r4
   291fc:	pop	{r4, r5, r6, pc}
   29200:	andeq	r0, r1, ip, ror #31
   29204:	strdeq	lr, [r0], -r8
   29208:	push	{r4, r5, r6, lr}
   2920c:	subs	r6, r0, #0
   29210:	mov	r5, r1
   29214:	mov	r4, r2
   29218:	beq	2928c <g_unichar_xdigit_value@plt+0x15428>
   2921c:	cmp	r1, #0
   29220:	beq	292b0 <g_unichar_xdigit_value@plt+0x1544c>
   29224:	mov	r0, r1
   29228:	bl	24620 <g_unichar_xdigit_value@plt+0x107bc>
   2922c:	mov	r5, r0
   29230:	bl	13ba0 <strlen@plt>
   29234:	cmp	r4, #0
   29238:	add	r3, r4, #3
   2923c:	movlt	r4, r3
   29240:	asr	r4, r4, #2
   29244:	cmp	r0, r4
   29248:	movle	r1, #0
   2924c:	bgt	29284 <g_unichar_xdigit_value@plt+0x15420>
   29250:	mvn	r2, #0
   29254:	mov	r0, r5
   29258:	bl	243e0 <g_unichar_xdigit_value@plt+0x1057c>
   2925c:	mov	r1, #16
   29260:	mov	r4, r0
   29264:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   29268:	mov	r6, r0
   2926c:	mov	r0, r4
   29270:	bl	1399c <g_free@plt>
   29274:	mov	r0, r5
   29278:	bl	1399c <g_free@plt>
   2927c:	mov	r0, r6
   29280:	pop	{r4, r5, r6, pc}
   29284:	rsb	r1, r4, r0
   29288:	b	29250 <g_unichar_xdigit_value@plt+0x153ec>
   2928c:	ldr	r1, [pc, #68]	; 292d8 <g_unichar_xdigit_value@plt+0x15474>
   29290:	ldr	r2, [pc, #68]	; 292dc <g_unichar_xdigit_value@plt+0x15478>
   29294:	add	r1, pc, r1
   29298:	add	r1, r1, #1712	; 0x6b0
   2929c:	add	r2, pc, r2
   292a0:	add	r1, r1, #12
   292a4:	bl	13450 <g_return_if_fail_warning@plt>
   292a8:	mov	r0, r6
   292ac:	pop	{r4, r5, r6, pc}
   292b0:	ldr	r1, [pc, #40]	; 292e0 <g_unichar_xdigit_value@plt+0x1547c>
   292b4:	mov	r0, r5
   292b8:	ldr	r2, [pc, #36]	; 292e4 <g_unichar_xdigit_value@plt+0x15480>
   292bc:	add	r1, pc, r1
   292c0:	add	r1, r1, #1712	; 0x6b0
   292c4:	add	r2, pc, r2
   292c8:	add	r1, r1, #12
   292cc:	bl	13450 <g_return_if_fail_warning@plt>
   292d0:	mov	r0, r5
   292d4:	pop	{r4, r5, r6, pc}
   292d8:	andeq	r0, r1, ip, lsr pc
   292dc:	andeq	lr, r0, r8, asr #28
   292e0:	andeq	r0, r1, r4, lsl pc
   292e4:	muleq	r0, ip, r1
   292e8:	push	{r4, r5, r6, lr}
   292ec:	subs	r6, r0, #0
   292f0:	mov	r4, r1
   292f4:	beq	29368 <g_unichar_xdigit_value@plt+0x15504>
   292f8:	mov	r1, #0
   292fc:	mov	r2, #0
   29300:	mov	r3, #0
   29304:	mov	r0, #2
   29308:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   2930c:	mov	r2, r4
   29310:	asr	r3, r4, #31
   29314:	mov	r5, r0
   29318:	bl	25eb8 <g_unichar_xdigit_value@plt+0x12054>
   2931c:	cmp	r5, #0
   29320:	mov	r4, r0
   29324:	beq	29330 <g_unichar_xdigit_value@plt+0x154cc>
   29328:	mov	r0, r5
   2932c:	bl	13b94 <g_object_unref@plt>
   29330:	mov	r1, r6
   29334:	mov	r0, r4
   29338:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   2933c:	cmp	r0, #0
   29340:	movle	r5, #0
   29344:	movgt	r5, #1
   29348:	cmp	r4, #0
   2934c:	beq	29360 <g_unichar_xdigit_value@plt+0x154fc>
   29350:	mov	r0, r4
   29354:	bl	13b94 <g_object_unref@plt>
   29358:	mov	r0, r5
   2935c:	pop	{r4, r5, r6, pc}
   29360:	mov	r0, r5
   29364:	pop	{r4, r5, r6, pc}
   29368:	ldr	r1, [pc, #28]	; 2938c <g_unichar_xdigit_value@plt+0x15528>
   2936c:	ldr	r2, [pc, #28]	; 29390 <g_unichar_xdigit_value@plt+0x1552c>
   29370:	add	r1, pc, r1
   29374:	add	r1, r1, #1728	; 0x6c0
   29378:	add	r2, pc, r2
   2937c:	add	r1, r1, #8
   29380:	bl	13450 <g_return_if_fail_warning@plt>
   29384:	mov	r0, r6
   29388:	pop	{r4, r5, r6, pc}
   2938c:	andeq	r0, r1, r0, ror #28
   29390:	andeq	pc, r0, r8, ror #1
   29394:	push	{r4, r5, lr}
   29398:	sub	sp, sp, #12
   2939c:	mov	r4, r0
   293a0:	bl	13c60 <g_type_class_peek_parent@plt>
   293a4:	ldr	r5, [pc, #168]	; 29454 <g_unichar_xdigit_value@plt+0x155f0>
   293a8:	mov	r1, #44	; 0x2c
   293ac:	add	r5, pc, r5
   293b0:	str	r0, [r5]
   293b4:	mov	r0, r4
   293b8:	bl	13a5c <g_type_class_add_private@plt>
   293bc:	mov	r0, r4
   293c0:	mov	r1, #80	; 0x50
   293c4:	bl	13db0 <g_type_check_class_cast@plt>
   293c8:	ldr	r3, [pc, #136]	; 29458 <g_unichar_xdigit_value@plt+0x155f4>
   293cc:	mov	r1, #80	; 0x50
   293d0:	add	r3, pc, r3
   293d4:	str	r3, [r0, #16]
   293d8:	mov	r0, r4
   293dc:	bl	13db0 <g_type_check_class_cast@plt>
   293e0:	ldr	r3, [pc, #116]	; 2945c <g_unichar_xdigit_value@plt+0x155f8>
   293e4:	mov	r1, #80	; 0x50
   293e8:	add	r3, pc, r3
   293ec:	str	r3, [r0, #12]
   293f0:	mov	r0, r4
   293f4:	bl	13db0 <g_type_check_class_cast@plt>
   293f8:	ldr	r3, [pc, #96]	; 29460 <g_unichar_xdigit_value@plt+0x155fc>
   293fc:	mov	r1, #80	; 0x50
   29400:	add	r3, pc, r3
   29404:	str	r3, [r0, #24]
   29408:	mov	r0, r4
   2940c:	bl	13db0 <g_type_check_class_cast@plt>
   29410:	mov	r2, #227	; 0xe3
   29414:	mov	r3, #0
   29418:	str	r2, [sp]
   2941c:	mov	r4, r0
   29420:	ldr	r0, [pc, #60]	; 29464 <g_unichar_xdigit_value@plt+0x15600>
   29424:	add	r0, pc, r0
   29428:	mov	r1, r0
   2942c:	mov	r2, r0
   29430:	bl	134d4 <g_param_spec_string@plt>
   29434:	mov	r1, #1
   29438:	mov	r3, r0
   2943c:	mov	r2, r0
   29440:	str	r3, [r5, #8]
   29444:	mov	r0, r4
   29448:	add	sp, sp, #12
   2944c:	pop	{r4, r5, lr}
   29450:	b	13a2c <g_object_class_install_property@plt>
   29454:	andeq	r8, r2, r0, ror #3
   29458:	andeq	r1, r0, r0, lsl lr
   2945c:	andeq	r1, r0, ip, lsr sp
   29460:	andeq	r1, r0, r8, asr #25
   29464:	andeq	r1, r1, ip, lsr #26
   29468:	cmp	r0, #0
   2946c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   29470:	mov	r6, r1
   29474:	mov	r4, r2
   29478:	beq	29530 <g_unichar_xdigit_value@plt+0x156cc>
   2947c:	cmp	r1, #0
   29480:	beq	2954c <g_unichar_xdigit_value@plt+0x156e8>
   29484:	cmp	r2, #0
   29488:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   2948c:	ldr	r1, [pc, #236]	; 29580 <g_unichar_xdigit_value@plt+0x1571c>
   29490:	mov	r0, r6
   29494:	add	r1, pc, r1
   29498:	bl	13d50 <g_string_append@plt>
   2949c:	cmp	r4, #0
   294a0:	blt	2956c <g_unichar_xdigit_value@plt+0x15708>
   294a4:	ldr	r0, [pc, #216]	; 29584 <g_unichar_xdigit_value@plt+0x15720>
   294a8:	mov	r1, r4
   294ac:	ldr	r8, [pc, #212]	; 29588 <g_unichar_xdigit_value@plt+0x15724>
   294b0:	mov	r4, #0
   294b4:	add	r0, pc, r0
   294b8:	ldr	r9, [pc, #204]	; 2958c <g_unichar_xdigit_value@plt+0x15728>
   294bc:	bl	13774 <g_strdup_printf@plt>
   294c0:	ldr	r7, [pc, #200]	; 29590 <g_unichar_xdigit_value@plt+0x1572c>
   294c4:	add	r8, pc, r8
   294c8:	add	r9, pc, r9
   294cc:	add	r7, pc, r7
   294d0:	add	r8, r8, #68	; 0x44
   294d4:	mov	r5, r0
   294d8:	b	294f4 <g_unichar_xdigit_value@plt+0x15690>
   294dc:	ldrb	r3, [r5, r4]
   294e0:	sub	r3, r3, #48	; 0x30
   294e4:	ldr	r1, [r7, r3, lsl #2]
   294e8:	mov	r0, r6
   294ec:	add	r4, r4, #1
   294f0:	bl	13624 <g_string_append_unichar@plt>
   294f4:	mov	r0, r5
   294f8:	bl	13ba0 <strlen@plt>
   294fc:	cmp	r0, r4
   29500:	ble	29524 <g_unichar_xdigit_value@plt+0x156c0>
   29504:	cmp	r5, #0
   29508:	bne	294dc <g_unichar_xdigit_value@plt+0x15678>
   2950c:	mov	r0, r5
   29510:	mov	r1, r8
   29514:	mov	r2, r9
   29518:	bl	13450 <g_return_if_fail_warning@plt>
   2951c:	mvn	r3, #47	; 0x2f
   29520:	b	294e4 <g_unichar_xdigit_value@plt+0x15680>
   29524:	mov	r0, r5
   29528:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   2952c:	b	1399c <g_free@plt>
   29530:	ldr	r1, [pc, #92]	; 29594 <g_unichar_xdigit_value@plt+0x15730>
   29534:	ldr	r2, [pc, #92]	; 29598 <g_unichar_xdigit_value@plt+0x15734>
   29538:	add	r1, pc, r1
   2953c:	add	r2, pc, r2
   29540:	add	r1, r1, #40	; 0x28
   29544:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   29548:	b	13450 <g_return_if_fail_warning@plt>
   2954c:	ldr	r1, [pc, #72]	; 2959c <g_unichar_xdigit_value@plt+0x15738>
   29550:	mov	r0, r6
   29554:	ldr	r2, [pc, #68]	; 295a0 <g_unichar_xdigit_value@plt+0x1573c>
   29558:	add	r1, pc, r1
   2955c:	add	r2, pc, r2
   29560:	add	r1, r1, #40	; 0x28
   29564:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   29568:	b	13450 <g_return_if_fail_warning@plt>
   2956c:	mov	r0, r6
   29570:	movw	r1, #8315	; 0x207b
   29574:	rsb	r4, r4, #0
   29578:	bl	13624 <g_string_append_unichar@plt>
   2957c:	b	294a4 <g_unichar_xdigit_value@plt+0x15640>
   29580:	andeq	r1, r1, r4, asr #25
   29584:	andeq	r1, r1, ip, lsr #25
   29588:	muleq	r1, ip, r8
   2958c:	andeq	lr, r0, ip, lsl ip
   29590:	muleq	r1, r4, r8
   29594:	andeq	r1, r1, r8, lsr #16
   29598:	andeq	lr, r0, r8, lsr #23
   2959c:	andeq	r1, r1, r8, lsl #16
   295a0:	andeq	r1, r1, r8, lsl #24
   295a4:	ldr	r0, [pc, #96]	; 2960c <g_unichar_xdigit_value@plt+0x157a8>
   295a8:	push	{r4, lr}
   295ac:	add	r0, pc, r0
   295b0:	dmb	sy
   295b4:	ldr	r3, [r0, #12]
   295b8:	dmb	sy
   295bc:	cmp	r3, #0
   295c0:	beq	295d4 <g_unichar_xdigit_value@plt+0x15770>
   295c4:	ldr	r3, [pc, #68]	; 29610 <g_unichar_xdigit_value@plt+0x157ac>
   295c8:	add	r3, pc, r3
   295cc:	ldr	r0, [r3, #12]
   295d0:	pop	{r4, pc}
   295d4:	add	r4, r0, #12
   295d8:	mov	r0, r4
   295dc:	bl	138ac <g_once_init_enter@plt>
   295e0:	cmp	r0, #0
   295e4:	beq	295c4 <g_unichar_xdigit_value@plt+0x15760>
   295e8:	ldr	r0, [pc, #36]	; 29614 <g_unichar_xdigit_value@plt+0x157b0>
   295ec:	ldr	r1, [pc, #36]	; 29618 <g_unichar_xdigit_value@plt+0x157b4>
   295f0:	add	r0, pc, r0
   295f4:	add	r1, pc, r1
   295f8:	bl	13c78 <g_enum_register_static@plt>
   295fc:	mov	r1, r0
   29600:	mov	r0, r4
   29604:	bl	13bac <g_once_init_leave@plt>
   29608:	b	295c4 <g_unichar_xdigit_value@plt+0x15760>
   2960c:	andeq	r7, r2, r0, ror #31
   29610:	andeq	r7, r2, r4, asr #31
   29614:	andeq	r1, r1, r4, lsl #23
   29618:	andeq	r7, r2, r4, lsr #9
   2961c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29620:	mov	r8, r1
   29624:	sub	sp, sp, #8
   29628:	mov	r1, #0
   2962c:	mov	r5, r2
   29630:	mov	r9, r3
   29634:	bl	133e4 <g_object_new@plt>
   29638:	mov	r4, r0
   2963c:	mov	r0, #65536	; 0x10000
   29640:	bl	13654 <nl_langinfo@plt>
   29644:	bl	136f0 <g_strdup@plt>
   29648:	subs	r6, r0, #0
   2964c:	beq	29664 <g_unichar_xdigit_value@plt+0x15800>
   29650:	ldr	r1, [pc, #300]	; 29784 <g_unichar_xdigit_value@plt+0x15920>
   29654:	add	r1, pc, r1
   29658:	bl	13e58 <g_strcmp0@plt>
   2965c:	cmp	r0, #0
   29660:	bne	2972c <g_unichar_xdigit_value@plt+0x158c8>
   29664:	ldr	r3, [r4, #12]
   29668:	mov	r2, #46	; 0x2e
   2966c:	str	r2, [r3, #28]
   29670:	mov	r0, #1
   29674:	movt	r0, #1
   29678:	bl	13654 <nl_langinfo@plt>
   2967c:	bl	136f0 <g_strdup@plt>
   29680:	subs	r7, r0, #0
   29684:	beq	2969c <g_unichar_xdigit_value@plt+0x15838>
   29688:	ldr	r1, [pc, #248]	; 29788 <g_unichar_xdigit_value@plt+0x15924>
   2968c:	add	r1, pc, r1
   29690:	bl	13e58 <g_strcmp0@plt>
   29694:	cmp	r0, #0
   29698:	bne	296f0 <g_unichar_xdigit_value@plt+0x1588c>
   2969c:	ldr	ip, [r4, #12]
   296a0:	mov	r3, #32
   296a4:	str	r3, [ip, #32]
   296a8:	mov	r3, #0
   296ac:	mov	r1, #3
   296b0:	mov	r2, #12
   296b4:	str	r5, [ip, #20]
   296b8:	mov	r0, r7
   296bc:	str	r5, [ip, #24]
   296c0:	str	r9, [ip, #4]
   296c4:	str	r8, [ip, #8]
   296c8:	str	r1, [ip, #36]	; 0x24
   296cc:	str	r2, [ip]
   296d0:	str	r3, [ip, #16]
   296d4:	str	r3, [ip, #12]
   296d8:	bl	1399c <g_free@plt>
   296dc:	mov	r0, r6
   296e0:	bl	1399c <g_free@plt>
   296e4:	mov	r0, r4
   296e8:	add	sp, sp, #8
   296ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   296f0:	mov	r3, #0
   296f4:	mov	r0, r7
   296f8:	mov	r2, r3
   296fc:	str	r3, [sp]
   29700:	mvn	r1, #0
   29704:	bl	13d68 <g_locale_to_utf8@plt>
   29708:	subs	sl, r0, #0
   2970c:	beq	29764 <g_unichar_xdigit_value@plt+0x15900>
   29710:	bl	135e8 <g_utf8_get_char@plt>
   29714:	ldr	r3, [r4, #12]
   29718:	str	r0, [r3, #32]
   2971c:	mov	r0, sl
   29720:	bl	1399c <g_free@plt>
   29724:	ldr	ip, [r4, #12]
   29728:	b	296a8 <g_unichar_xdigit_value@plt+0x15844>
   2972c:	mov	r3, #0
   29730:	mov	r0, r6
   29734:	mov	r2, r3
   29738:	str	r3, [sp]
   2973c:	mvn	r1, #0
   29740:	bl	13d68 <g_locale_to_utf8@plt>
   29744:	subs	r7, r0, #0
   29748:	beq	29774 <g_unichar_xdigit_value@plt+0x15910>
   2974c:	bl	135e8 <g_utf8_get_char@plt>
   29750:	ldr	r3, [r4, #12]
   29754:	str	r0, [r3, #28]
   29758:	mov	r0, r7
   2975c:	bl	1399c <g_free@plt>
   29760:	b	29670 <g_unichar_xdigit_value@plt+0x1580c>
   29764:	ldr	r3, [r4, #12]
   29768:	mov	r2, #32
   2976c:	str	r2, [r3, #32]
   29770:	b	2971c <g_unichar_xdigit_value@plt+0x158b8>
   29774:	ldr	r3, [r4, #12]
   29778:	mov	r2, #46	; 0x2e
   2977c:	str	r2, [r3, #28]
   29780:	b	29758 <g_unichar_xdigit_value@plt+0x158f4>
   29784:	strdeq	pc, [r0], -r0
   29788:			; <UNDEFINED> instruction: 0x0000fab8
   2978c:	push	{r3, lr}
   29790:	subs	r3, r0, #0
   29794:	beq	297b4 <g_unichar_xdigit_value@plt+0x15950>
   29798:	cmp	r1, #0
   2979c:	beq	297d4 <g_unichar_xdigit_value@plt+0x15970>
   297a0:	ldr	r3, [r3, #12]
   297a4:	mov	r0, r1
   297a8:	ldr	r1, [r3, #20]
   297ac:	pop	{r3, lr}
   297b0:	b	284fc <g_unichar_xdigit_value@plt+0x14698>
   297b4:	ldr	r1, [pc, #60]	; 297f8 <g_unichar_xdigit_value@plt+0x15994>
   297b8:	ldr	r2, [pc, #60]	; 297fc <g_unichar_xdigit_value@plt+0x15998>
   297bc:	add	r1, pc, r1
   297c0:	add	r2, pc, r2
   297c4:	add	r1, r1, #80	; 0x50
   297c8:	bl	13450 <g_return_if_fail_warning@plt>
   297cc:	mov	r0, #0
   297d0:	pop	{r3, pc}
   297d4:	ldr	r3, [pc, #36]	; 29800 <g_unichar_xdigit_value@plt+0x1599c>
   297d8:	mov	r0, r1
   297dc:	ldr	r2, [pc, #32]	; 29804 <g_unichar_xdigit_value@plt+0x159a0>
   297e0:	add	r3, pc, r3
   297e4:	add	r2, pc, r2
   297e8:	add	r1, r3, #80	; 0x50
   297ec:	bl	13450 <g_return_if_fail_warning@plt>
   297f0:	mov	r0, #0
   297f4:	pop	{r3, pc}
   297f8:	andeq	r1, r1, r4, lsr #11
   297fc:	andeq	lr, r0, r4, lsr #18
   29800:	andeq	r1, r1, r0, lsl #11
   29804:	andeq	r1, r1, ip, lsr #8
   29808:	subs	r3, r0, #0
   2980c:	beq	2981c <g_unichar_xdigit_value@plt+0x159b8>
   29810:	ldr	r3, [r3, #12]
   29814:	str	r1, [r3, #20]
   29818:	bx	lr
   2981c:	ldr	r1, [pc, #16]	; 29834 <g_unichar_xdigit_value@plt+0x159d0>
   29820:	ldr	r2, [pc, #16]	; 29838 <g_unichar_xdigit_value@plt+0x159d4>
   29824:	add	r1, pc, r1
   29828:	add	r2, pc, r2
   2982c:	add	r1, r1, #104	; 0x68
   29830:	b	13450 <g_return_if_fail_warning@plt>
   29834:	andeq	r1, r1, ip, lsr r5
   29838:			; <UNDEFINED> instruction: 0x0000e8bc
   2983c:	push	{r4, lr}
   29840:	subs	r4, r0, #0
   29844:	beq	29854 <g_unichar_xdigit_value@plt+0x159f0>
   29848:	ldr	r3, [r4, #12]
   2984c:	ldr	r0, [r3, #20]
   29850:	pop	{r4, pc}
   29854:	ldr	r1, [pc, #24]	; 29874 <g_unichar_xdigit_value@plt+0x15a10>
   29858:	ldr	r2, [pc, #24]	; 29878 <g_unichar_xdigit_value@plt+0x15a14>
   2985c:	add	r1, pc, r1
   29860:	add	r2, pc, r2
   29864:	add	r1, r1, #124	; 0x7c
   29868:	bl	13450 <g_return_if_fail_warning@plt>
   2986c:	mov	r0, r4
   29870:	pop	{r4, pc}
   29874:	andeq	r1, r1, r4, lsl #10
   29878:	andeq	lr, r0, r4, lsl #17
   2987c:	subs	r3, r0, #0
   29880:	beq	29890 <g_unichar_xdigit_value@plt+0x15a2c>
   29884:	ldr	r3, [r3, #12]
   29888:	str	r1, [r3, #24]
   2988c:	bx	lr
   29890:	ldr	r1, [pc, #16]	; 298a8 <g_unichar_xdigit_value@plt+0x15a44>
   29894:	ldr	r2, [pc, #16]	; 298ac <g_unichar_xdigit_value@plt+0x15a48>
   29898:	add	r1, pc, r1
   2989c:	add	r2, pc, r2
   298a0:	add	r1, r1, #144	; 0x90
   298a4:	b	13450 <g_return_if_fail_warning@plt>
   298a8:	andeq	r1, r1, r8, asr #9
   298ac:	andeq	lr, r0, r8, asr #16
   298b0:	push	{r4, lr}
   298b4:	subs	r4, r0, #0
   298b8:	beq	298c8 <g_unichar_xdigit_value@plt+0x15a64>
   298bc:	ldr	r3, [r4, #12]
   298c0:	ldr	r0, [r3, #24]
   298c4:	pop	{r4, pc}
   298c8:	ldr	r1, [pc, #24]	; 298e8 <g_unichar_xdigit_value@plt+0x15a84>
   298cc:	ldr	r2, [pc, #24]	; 298ec <g_unichar_xdigit_value@plt+0x15a88>
   298d0:	add	r1, pc, r1
   298d4:	add	r2, pc, r2
   298d8:	add	r1, r1, #180	; 0xb4
   298dc:	bl	13450 <g_return_if_fail_warning@plt>
   298e0:	mov	r0, r4
   298e4:	pop	{r4, pc}
   298e8:	muleq	r1, r0, r4
   298ec:	andeq	lr, r0, r0, lsl r8
   298f0:	subs	r3, r0, #0
   298f4:	beq	29904 <g_unichar_xdigit_value@plt+0x15aa0>
   298f8:	ldr	r3, [r3, #12]
   298fc:	str	r1, [r3, #28]
   29900:	bx	lr
   29904:	ldr	r1, [pc, #16]	; 2991c <g_unichar_xdigit_value@plt+0x15ab8>
   29908:	ldr	r2, [pc, #16]	; 29920 <g_unichar_xdigit_value@plt+0x15abc>
   2990c:	add	r1, pc, r1
   29910:	add	r2, pc, r2
   29914:	add	r1, r1, #216	; 0xd8
   29918:	b	13450 <g_return_if_fail_warning@plt>
   2991c:	andeq	r1, r1, r4, asr r4
   29920:	ldrdeq	lr, [r0], -r4
   29924:	push	{r4, lr}
   29928:	subs	r4, r0, #0
   2992c:	beq	2993c <g_unichar_xdigit_value@plt+0x15ad8>
   29930:	ldr	r3, [r4, #12]
   29934:	ldr	r0, [r3, #28]
   29938:	pop	{r4, pc}
   2993c:	ldr	r1, [pc, #24]	; 2995c <g_unichar_xdigit_value@plt+0x15af8>
   29940:	ldr	r2, [pc, #24]	; 29960 <g_unichar_xdigit_value@plt+0x15afc>
   29944:	add	r1, pc, r1
   29948:	add	r2, pc, r2
   2994c:	add	r1, r1, #240	; 0xf0
   29950:	bl	13450 <g_return_if_fail_warning@plt>
   29954:	mov	r0, r4
   29958:	pop	{r4, pc}
   2995c:	andeq	r1, r1, ip, lsl r4
   29960:	muleq	r0, ip, r7
   29964:	subs	r3, r0, #0
   29968:	beq	29978 <g_unichar_xdigit_value@plt+0x15b14>
   2996c:	ldr	r3, [r3, #12]
   29970:	str	r1, [r3, #32]
   29974:	bx	lr
   29978:	ldr	r1, [pc, #16]	; 29990 <g_unichar_xdigit_value@plt+0x15b2c>
   2997c:	ldr	r2, [pc, #16]	; 29994 <g_unichar_xdigit_value@plt+0x15b30>
   29980:	add	r1, pc, r1
   29984:	add	r2, pc, r2
   29988:	add	r1, r1, #264	; 0x108
   2998c:	b	13450 <g_return_if_fail_warning@plt>
   29990:	andeq	r1, r1, r0, ror #7
   29994:	andeq	lr, r0, r0, ror #14
   29998:	push	{r4, lr}
   2999c:	subs	r4, r0, #0
   299a0:	beq	299b0 <g_unichar_xdigit_value@plt+0x15b4c>
   299a4:	ldr	r3, [r4, #12]
   299a8:	ldr	r0, [r3, #32]
   299ac:	pop	{r4, pc}
   299b0:	ldr	r1, [pc, #24]	; 299d0 <g_unichar_xdigit_value@plt+0x15b6c>
   299b4:	ldr	r2, [pc, #24]	; 299d4 <g_unichar_xdigit_value@plt+0x15b70>
   299b8:	add	r1, pc, r1
   299bc:	add	r2, pc, r2
   299c0:	add	r1, r1, #300	; 0x12c
   299c4:	bl	13450 <g_return_if_fail_warning@plt>
   299c8:	mov	r0, r4
   299cc:	pop	{r4, pc}
   299d0:	andeq	r1, r1, r8, lsr #7
   299d4:	andeq	lr, r0, r8, lsr #14
   299d8:	push	{r4, lr}
   299dc:	subs	r4, r0, #0
   299e0:	beq	299f0 <g_unichar_xdigit_value@plt+0x15b8c>
   299e4:	ldr	r3, [r4, #12]
   299e8:	ldr	r0, [r3, #36]	; 0x24
   299ec:	pop	{r4, pc}
   299f0:	ldr	r1, [pc, #24]	; 29a10 <g_unichar_xdigit_value@plt+0x15bac>
   299f4:	ldr	r2, [pc, #24]	; 29a14 <g_unichar_xdigit_value@plt+0x15bb0>
   299f8:	add	r1, pc, r1
   299fc:	add	r2, pc, r2
   29a00:	add	r1, r1, #336	; 0x150
   29a04:	bl	13450 <g_return_if_fail_warning@plt>
   29a08:	mov	r0, r4
   29a0c:	pop	{r4, pc}
   29a10:	andeq	r1, r1, r8, ror #6
   29a14:	andeq	lr, r0, r8, ror #13
   29a18:	subs	r3, r0, #0
   29a1c:	beq	29a2c <g_unichar_xdigit_value@plt+0x15bc8>
   29a20:	ldr	r3, [r3, #12]
   29a24:	str	r1, [r3, #36]	; 0x24
   29a28:	bx	lr
   29a2c:	ldr	r1, [pc, #16]	; 29a44 <g_unichar_xdigit_value@plt+0x15be0>
   29a30:	ldr	r2, [pc, #16]	; 29a48 <g_unichar_xdigit_value@plt+0x15be4>
   29a34:	add	r1, pc, r1
   29a38:	add	r2, pc, r2
   29a3c:	add	r1, r1, #380	; 0x17c
   29a40:	b	13450 <g_return_if_fail_warning@plt>
   29a44:	andeq	r1, r1, ip, lsr #6
   29a48:	andeq	lr, r0, ip, lsr #13
   29a4c:	subs	r3, r0, #0
   29a50:	beq	29a60 <g_unichar_xdigit_value@plt+0x15bfc>
   29a54:	ldr	r3, [r3, #12]
   29a58:	str	r1, [r3, #12]
   29a5c:	bx	lr
   29a60:	ldr	r1, [pc, #16]	; 29a78 <g_unichar_xdigit_value@plt+0x15c14>
   29a64:	ldr	r2, [pc, #16]	; 29a7c <g_unichar_xdigit_value@plt+0x15c18>
   29a68:	add	r1, pc, r1
   29a6c:	add	r2, pc, r2
   29a70:	add	r1, r1, #424	; 0x1a8
   29a74:	b	13450 <g_return_if_fail_warning@plt>
   29a78:	strdeq	r1, [r1], -r8
   29a7c:	andeq	lr, r0, r8, ror r6
   29a80:	push	{r4, lr}
   29a84:	subs	r4, r0, #0
   29a88:	beq	29a98 <g_unichar_xdigit_value@plt+0x15c34>
   29a8c:	ldr	r3, [r4, #12]
   29a90:	ldr	r0, [r3, #12]
   29a94:	pop	{r4, pc}
   29a98:	ldr	r1, [pc, #24]	; 29ab8 <g_unichar_xdigit_value@plt+0x15c54>
   29a9c:	ldr	r2, [pc, #24]	; 29abc <g_unichar_xdigit_value@plt+0x15c58>
   29aa0:	add	r1, pc, r1
   29aa4:	add	r2, pc, r2
   29aa8:	add	r1, r1, #468	; 0x1d4
   29aac:	bl	13450 <g_return_if_fail_warning@plt>
   29ab0:	mov	r0, r4
   29ab4:	pop	{r4, pc}
   29ab8:	andeq	r1, r1, r0, asr #5
   29abc:	andeq	lr, r0, r0, asr #12
   29ac0:	subs	r3, r0, #0
   29ac4:	beq	29ad4 <g_unichar_xdigit_value@plt+0x15c70>
   29ac8:	ldr	r3, [r3, #12]
   29acc:	str	r1, [r3, #16]
   29ad0:	bx	lr
   29ad4:	ldr	r1, [pc, #16]	; 29aec <g_unichar_xdigit_value@plt+0x15c88>
   29ad8:	ldr	r2, [pc, #16]	; 29af0 <g_unichar_xdigit_value@plt+0x15c8c>
   29adc:	add	r1, pc, r1
   29ae0:	add	r2, pc, r2
   29ae4:	add	r1, r1, #512	; 0x200
   29ae8:	b	13450 <g_return_if_fail_warning@plt>
   29aec:	andeq	r1, r1, r4, lsl #5
   29af0:	andeq	lr, r0, r4, lsl #12
   29af4:	push	{r4, lr}
   29af8:	subs	r4, r0, #0
   29afc:	beq	29b0c <g_unichar_xdigit_value@plt+0x15ca8>
   29b00:	ldr	r3, [r4, #12]
   29b04:	ldr	r0, [r3, #16]
   29b08:	pop	{r4, pc}
   29b0c:	ldr	r1, [pc, #24]	; 29b2c <g_unichar_xdigit_value@plt+0x15cc8>
   29b10:	ldr	r2, [pc, #24]	; 29b30 <g_unichar_xdigit_value@plt+0x15ccc>
   29b14:	add	r1, pc, r1
   29b18:	add	r2, pc, r2
   29b1c:	add	r1, r1, #548	; 0x224
   29b20:	bl	13450 <g_return_if_fail_warning@plt>
   29b24:	mov	r0, r4
   29b28:	pop	{r4, pc}
   29b2c:	andeq	r1, r1, ip, asr #4
   29b30:	andeq	lr, r0, ip, asr #11
   29b34:	push	{r4, lr}
   29b38:	subs	r4, r0, #0
   29b3c:	beq	29b4c <g_unichar_xdigit_value@plt+0x15ce8>
   29b40:	ldr	r3, [r4, #12]
   29b44:	ldr	r0, [r3]
   29b48:	pop	{r4, pc}
   29b4c:	ldr	r1, [pc, #24]	; 29b6c <g_unichar_xdigit_value@plt+0x15d08>
   29b50:	ldr	r2, [pc, #24]	; 29b70 <g_unichar_xdigit_value@plt+0x15d0c>
   29b54:	add	r1, pc, r1
   29b58:	add	r2, pc, r2
   29b5c:	add	r1, r1, #584	; 0x248
   29b60:	bl	13450 <g_return_if_fail_warning@plt>
   29b64:	mov	r0, r4
   29b68:	pop	{r4, pc}
   29b6c:	andeq	r1, r1, ip, lsl #4
   29b70:	andeq	lr, r0, ip, lsl #11
   29b74:	subs	r3, r0, #0
   29b78:	beq	29b88 <g_unichar_xdigit_value@plt+0x15d24>
   29b7c:	ldr	r3, [r3, #12]
   29b80:	str	r1, [r3]
   29b84:	bx	lr
   29b88:	ldr	r1, [pc, #16]	; 29ba0 <g_unichar_xdigit_value@plt+0x15d3c>
   29b8c:	ldr	r2, [pc, #16]	; 29ba4 <g_unichar_xdigit_value@plt+0x15d40>
   29b90:	add	r1, pc, r1
   29b94:	add	r2, pc, r2
   29b98:	add	r1, r1, #616	; 0x268
   29b9c:	b	13450 <g_return_if_fail_warning@plt>
   29ba0:	ldrdeq	r1, [r1], -r0
   29ba4:	andeq	lr, r0, r0, asr r5
   29ba8:	push	{r4, lr}
   29bac:	subs	r4, r0, #0
   29bb0:	beq	29bc0 <g_unichar_xdigit_value@plt+0x15d5c>
   29bb4:	ldr	r3, [r4, #12]
   29bb8:	ldr	r0, [r3, #4]
   29bbc:	pop	{r4, pc}
   29bc0:	ldr	r1, [pc, #24]	; 29be0 <g_unichar_xdigit_value@plt+0x15d7c>
   29bc4:	ldr	r2, [pc, #24]	; 29be4 <g_unichar_xdigit_value@plt+0x15d80>
   29bc8:	add	r1, pc, r1
   29bcc:	add	r2, pc, r2
   29bd0:	add	r1, r1, #648	; 0x288
   29bd4:	bl	13450 <g_return_if_fail_warning@plt>
   29bd8:	mov	r0, r4
   29bdc:	pop	{r4, pc}
   29be0:	muleq	r1, r8, r1
   29be4:	andeq	lr, r0, r8, lsl r5
   29be8:	subs	r3, r0, #0
   29bec:	beq	29bfc <g_unichar_xdigit_value@plt+0x15d98>
   29bf0:	ldr	r3, [r3, #12]
   29bf4:	str	r1, [r3, #4]
   29bf8:	bx	lr
   29bfc:	ldr	r1, [pc, #16]	; 29c14 <g_unichar_xdigit_value@plt+0x15db0>
   29c00:	ldr	r2, [pc, #16]	; 29c18 <g_unichar_xdigit_value@plt+0x15db4>
   29c04:	add	r1, pc, r1
   29c08:	add	r2, pc, r2
   29c0c:	add	r1, r1, #680	; 0x2a8
   29c10:	b	13450 <g_return_if_fail_warning@plt>
   29c14:	andeq	r1, r1, ip, asr r1
   29c18:	ldrdeq	lr, [r0], -ip
   29c1c:	push	{r4, lr}
   29c20:	subs	r4, r0, #0
   29c24:	beq	29c34 <g_unichar_xdigit_value@plt+0x15dd0>
   29c28:	ldr	r3, [r4, #12]
   29c2c:	ldr	r0, [r3, #8]
   29c30:	pop	{r4, pc}
   29c34:	ldr	r1, [pc, #24]	; 29c54 <g_unichar_xdigit_value@plt+0x15df0>
   29c38:	ldr	r2, [pc, #24]	; 29c58 <g_unichar_xdigit_value@plt+0x15df4>
   29c3c:	add	r1, pc, r1
   29c40:	add	r2, pc, r2
   29c44:	add	r1, r1, #712	; 0x2c8
   29c48:	bl	13450 <g_return_if_fail_warning@plt>
   29c4c:	mov	r0, r4
   29c50:	pop	{r4, pc}
   29c54:	andeq	r1, r1, r4, lsr #2
   29c58:	andeq	lr, r0, r4, lsr #9
   29c5c:	subs	r3, r0, #0
   29c60:	beq	29c70 <g_unichar_xdigit_value@plt+0x15e0c>
   29c64:	ldr	r3, [r3, #12]
   29c68:	str	r1, [r3, #8]
   29c6c:	bx	lr
   29c70:	ldr	r1, [pc, #16]	; 29c88 <g_unichar_xdigit_value@plt+0x15e24>
   29c74:	ldr	r2, [pc, #16]	; 29c8c <g_unichar_xdigit_value@plt+0x15e28>
   29c78:	add	r1, pc, r1
   29c7c:	add	r2, pc, r2
   29c80:	add	r1, r1, #744	; 0x2e8
   29c84:	b	13450 <g_return_if_fail_warning@plt>
   29c88:	andeq	r1, r1, r8, ror #1
   29c8c:	andeq	lr, r0, r8, ror #8
   29c90:	push	{r4, lr}
   29c94:	subs	r4, r0, #0
   29c98:	beq	29ca8 <g_unichar_xdigit_value@plt+0x15e44>
   29c9c:	ldr	r3, [r4, #12]
   29ca0:	ldr	r0, [r3, #40]	; 0x28
   29ca4:	pop	{r4, pc}
   29ca8:	ldr	r1, [pc, #24]	; 29cc8 <g_unichar_xdigit_value@plt+0x15e64>
   29cac:	ldr	r2, [pc, #24]	; 29ccc <g_unichar_xdigit_value@plt+0x15e68>
   29cb0:	add	r1, pc, r1
   29cb4:	add	r2, pc, r2
   29cb8:	add	r1, r1, #776	; 0x308
   29cbc:	bl	13450 <g_return_if_fail_warning@plt>
   29cc0:	mov	r0, r4
   29cc4:	pop	{r4, pc}
   29cc8:	strheq	r1, [r1], -r0
   29ccc:	andeq	lr, r0, r0, lsr r4
   29cd0:	push	{r3, r4, r5, lr}
   29cd4:	subs	r5, r0, #0
   29cd8:	mov	r4, r1
   29cdc:	beq	29d34 <g_unichar_xdigit_value@plt+0x15ed0>
   29ce0:	bl	29c90 <g_unichar_xdigit_value@plt+0x15e2c>
   29ce4:	mov	r1, r0
   29ce8:	mov	r0, r4
   29cec:	bl	13e58 <g_strcmp0@plt>
   29cf0:	cmp	r0, #0
   29cf4:	bne	29cfc <g_unichar_xdigit_value@plt+0x15e98>
   29cf8:	pop	{r3, r4, r5, pc}
   29cfc:	mov	r0, r4
   29d00:	bl	136f0 <g_strdup@plt>
   29d04:	ldr	r3, [r5, #12]
   29d08:	mov	r4, r0
   29d0c:	ldr	r0, [r3, #40]	; 0x28
   29d10:	bl	1399c <g_free@plt>
   29d14:	ldr	r3, [pc, #52]	; 29d50 <g_unichar_xdigit_value@plt+0x15eec>
   29d18:	ldr	r2, [r5, #12]
   29d1c:	mov	r0, r5
   29d20:	add	r3, pc, r3
   29d24:	str	r4, [r2, #40]	; 0x28
   29d28:	ldr	r1, [r3, #8]
   29d2c:	pop	{r3, r4, r5, lr}
   29d30:	b	13984 <g_object_notify_by_pspec@plt>
   29d34:	ldr	r1, [pc, #24]	; 29d54 <g_unichar_xdigit_value@plt+0x15ef0>
   29d38:	ldr	r2, [pc, #24]	; 29d58 <g_unichar_xdigit_value@plt+0x15ef4>
   29d3c:	add	r1, pc, r1
   29d40:	add	r2, pc, r2
   29d44:	add	r1, r1, #800	; 0x320
   29d48:	pop	{r3, r4, r5, lr}
   29d4c:	b	13450 <g_return_if_fail_warning@plt>
   29d50:	andeq	r7, r2, ip, ror #16
   29d54:	andeq	r1, r1, r4, lsr #32
   29d58:	andeq	lr, r0, r4, lsr #7
   29d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29d60:	subs	ip, r0, #0
   29d64:	sub	sp, sp, #44	; 0x2c
   29d68:	mov	sl, r2
   29d6c:	str	ip, [sp, #16]
   29d70:	str	r1, [sp, #28]
   29d74:	str	r3, [sp, #36]	; 0x24
   29d78:	ldr	fp, [sp, #80]	; 0x50
   29d7c:	ldr	r5, [sp, #84]	; 0x54
   29d80:	beq	2a314 <g_unichar_xdigit_value@plt+0x164b0>
   29d84:	ldr	ip, [sp, #28]
   29d88:	cmp	ip, #0
   29d8c:	beq	2a334 <g_unichar_xdigit_value@plt+0x164d0>
   29d90:	cmp	r5, #0
   29d94:	beq	2a358 <g_unichar_xdigit_value@plt+0x164f4>
   29d98:	ldr	r0, [sp, #28]
   29d9c:	bl	133f0 <g_object_ref@plt>
   29da0:	str	r0, [sp, #20]
   29da4:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   29da8:	cmp	r0, #0
   29dac:	bne	2a2b4 <g_unichar_xdigit_value@plt+0x16450>
   29db0:	mov	r2, sl
   29db4:	asr	r3, sl, #31
   29db8:	strd	r2, [sp]
   29dbc:	mov	r2, #0
   29dc0:	mov	r3, #0
   29dc4:	ldrd	r0, [sp]
   29dc8:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   29dcc:	ldr	ip, [sp, #16]
   29dd0:	ldr	r3, [ip, #12]
   29dd4:	ldr	r2, [r3, #4]
   29dd8:	mvn	r2, r2
   29ddc:	asr	r3, r2, #31
   29de0:	mov	r4, r0
   29de4:	bl	25eb8 <g_unichar_xdigit_value@plt+0x12054>
   29de8:	cmp	r4, #0
   29dec:	mov	r6, r0
   29df0:	beq	29dfc <g_unichar_xdigit_value@plt+0x15f98>
   29df4:	mov	r0, r4
   29df8:	bl	13b94 <g_object_unref@plt>
   29dfc:	mov	r0, r6
   29e00:	ldrd	r2, [sp]
   29e04:	bl	266e0 <g_unichar_xdigit_value@plt+0x1287c>
   29e08:	cmp	r6, #0
   29e0c:	mov	r4, r0
   29e10:	beq	29e1c <g_unichar_xdigit_value@plt+0x15fb8>
   29e14:	mov	r0, r6
   29e18:	bl	13b94 <g_object_unref@plt>
   29e1c:	mov	r0, r4
   29e20:	mov	r2, #2
   29e24:	mov	r3, #0
   29e28:	bl	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   29e2c:	cmp	r4, #0
   29e30:	mov	r7, r0
   29e34:	beq	29e40 <g_unichar_xdigit_value@plt+0x15fdc>
   29e38:	mov	r0, r4
   29e3c:	bl	13b94 <g_object_unref@plt>
   29e40:	mov	r1, r7
   29e44:	ldr	r0, [sp, #20]
   29e48:	bl	264c8 <g_unichar_xdigit_value@plt+0x12664>
   29e4c:	str	r0, [sp, #24]
   29e50:	bl	25ccc <g_unichar_xdigit_value@plt+0x11e68>
   29e54:	cmp	r7, #0
   29e58:	mov	r6, r0
   29e5c:	beq	29e68 <g_unichar_xdigit_value@plt+0x16004>
   29e60:	mov	r0, r7
   29e64:	bl	13b94 <g_object_unref@plt>
   29e68:	ldr	r1, [pc, #1300]	; 2a384 <g_unichar_xdigit_value@plt+0x16520>
   29e6c:	mov	ip, #0
   29e70:	str	sl, [sp, #8]
   29e74:	mov	sl, ip
   29e78:	add	r1, pc, r1
   29e7c:	str	r1, [sp, #12]
   29e80:	b	29f6c <g_unichar_xdigit_value@plt+0x16108>
   29e84:	add	sl, sl, #1
   29e88:	ldrd	r2, [sp]
   29e8c:	mov	r0, r6
   29e90:	bl	26b34 <g_unichar_xdigit_value@plt+0x12cd0>
   29e94:	mov	r7, r0
   29e98:	bl	25ccc <g_unichar_xdigit_value@plt+0x11e68>
   29e9c:	cmp	r7, #0
   29ea0:	mov	r4, r0
   29ea4:	beq	29eb0 <g_unichar_xdigit_value@plt+0x1604c>
   29ea8:	mov	r0, r7
   29eac:	bl	13b94 <g_object_unref@plt>
   29eb0:	ldrd	r2, [sp]
   29eb4:	mov	r0, r4
   29eb8:	bl	266e0 <g_unichar_xdigit_value@plt+0x1287c>
   29ebc:	mov	r7, r0
   29ec0:	mov	r0, r6
   29ec4:	mov	r1, r7
   29ec8:	bl	26558 <g_unichar_xdigit_value@plt+0x126f4>
   29ecc:	mov	r9, r0
   29ed0:	bl	24ca0 <g_unichar_xdigit_value@plt+0x10e3c>
   29ed4:	cmp	r1, #0
   29ed8:	cmpeq	r0, #15
   29edc:	bhi	29fac <g_unichar_xdigit_value@plt+0x16148>
   29ee0:	ldr	ip, [sp, #12]
   29ee4:	add	r3, ip, r0
   29ee8:	mov	r0, r5
   29eec:	ldrb	r1, [r3, #824]	; 0x338
   29ef0:	bl	13c30 <g_string_prepend_c@plt>
   29ef4:	ldr	r3, [fp]
   29ef8:	cmp	r4, #0
   29efc:	add	r3, r3, #1
   29f00:	str	r3, [fp]
   29f04:	moveq	r8, r4
   29f08:	beq	29f18 <g_unichar_xdigit_value@plt+0x160b4>
   29f0c:	mov	r0, r4
   29f10:	bl	133f0 <g_object_ref@plt>
   29f14:	mov	r8, r0
   29f18:	cmp	r6, #0
   29f1c:	beq	29f28 <g_unichar_xdigit_value@plt+0x160c4>
   29f20:	mov	r0, r6
   29f24:	bl	13b94 <g_object_unref@plt>
   29f28:	cmp	r9, #0
   29f2c:	beq	29f38 <g_unichar_xdigit_value@plt+0x160d4>
   29f30:	mov	r0, r9
   29f34:	bl	13b94 <g_object_unref@plt>
   29f38:	cmp	r7, #0
   29f3c:	beq	29f48 <g_unichar_xdigit_value@plt+0x160e4>
   29f40:	mov	r0, r7
   29f44:	bl	13b94 <g_object_unref@plt>
   29f48:	cmp	r4, #0
   29f4c:	beq	29f58 <g_unichar_xdigit_value@plt+0x160f4>
   29f50:	mov	r0, r4
   29f54:	bl	13b94 <g_object_unref@plt>
   29f58:	mov	r0, r8
   29f5c:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   29f60:	cmp	r0, #0
   29f64:	bne	2a1cc <g_unichar_xdigit_value@plt+0x16368>
   29f68:	mov	r6, r8
   29f6c:	ldr	ip, [sp, #8]
   29f70:	cmp	ip, #10
   29f74:	bne	29e84 <g_unichar_xdigit_value@plt+0x16020>
   29f78:	ldr	ip, [sp, #16]
   29f7c:	ldr	r3, [ip, #12]
   29f80:	ldr	r2, [r3, #12]
   29f84:	cmp	r2, #0
   29f88:	beq	29e84 <g_unichar_xdigit_value@plt+0x16020>
   29f8c:	ldr	r2, [r3, #36]	; 0x24
   29f90:	cmp	r2, sl
   29f94:	bne	29e84 <g_unichar_xdigit_value@plt+0x16020>
   29f98:	ldr	r1, [r3, #32]
   29f9c:	mov	r0, r5
   29fa0:	bl	13c84 <g_string_prepend_unichar@plt>
   29fa4:	mov	sl, #1
   29fa8:	b	29e88 <g_unichar_xdigit_value@plt+0x16024>
   29fac:	mov	r1, #63	; 0x3f
   29fb0:	mov	r0, r5
   29fb4:	ldr	sl, [sp, #8]
   29fb8:	bl	13c30 <g_string_prepend_c@plt>
   29fbc:	ldr	r0, [pc, #964]	; 2a388 <g_unichar_xdigit_value@plt+0x16524>
   29fc0:	ldr	r1, [pc, #964]	; 2a38c <g_unichar_xdigit_value@plt+0x16528>
   29fc4:	add	r0, pc, r0
   29fc8:	add	r1, pc, r1
   29fcc:	bl	13c9c <g_dgettext@plt>
   29fd0:	mov	r1, r0
   29fd4:	ldr	r0, [sp, #16]
   29fd8:	bl	29cd0 <g_unichar_xdigit_value@plt+0x15e6c>
   29fdc:	ldr	r1, [pc, #940]	; 2a390 <g_unichar_xdigit_value@plt+0x1652c>
   29fe0:	mov	r0, r5
   29fe4:	add	r1, pc, r1
   29fe8:	bl	13414 <g_string_assign@plt>
   29fec:	cmp	r9, #0
   29ff0:	beq	29ffc <g_unichar_xdigit_value@plt+0x16198>
   29ff4:	mov	r0, r9
   29ff8:	bl	13b94 <g_object_unref@plt>
   29ffc:	cmp	r7, #0
   2a000:	beq	2a00c <g_unichar_xdigit_value@plt+0x161a8>
   2a004:	mov	r0, r7
   2a008:	bl	13b94 <g_object_unref@plt>
   2a00c:	cmp	r4, #0
   2a010:	moveq	r8, r6
   2a014:	beq	2a024 <g_unichar_xdigit_value@plt+0x161c0>
   2a018:	mov	r0, r4
   2a01c:	mov	r8, r6
   2a020:	bl	13b94 <g_object_unref@plt>
   2a024:	ldr	ip, [sp, #16]
   2a028:	mov	r0, r5
   2a02c:	ldr	r3, [ip, #12]
   2a030:	ldr	ip, [r5, #4]
   2a034:	ldr	r1, [r3, #28]
   2a038:	str	ip, [sp, #12]
   2a03c:	bl	13624 <g_string_append_unichar@plt>
   2a040:	ldr	r0, [sp, #24]
   2a044:	bl	25c68 <g_unichar_xdigit_value@plt+0x11e04>
   2a048:	cmp	r8, #0
   2a04c:	mov	r4, r0
   2a050:	beq	2a05c <g_unichar_xdigit_value@plt+0x161f8>
   2a054:	mov	r0, r8
   2a058:	bl	13b94 <g_object_unref@plt>
   2a05c:	ldr	ip, [sp, #16]
   2a060:	ldr	r3, [ip, #12]
   2a064:	ldr	r2, [r3, #4]
   2a068:	cmp	r2, #0
   2a06c:	ble	2a16c <g_unichar_xdigit_value@plt+0x16308>
   2a070:	ldr	r9, [pc, #796]	; 2a394 <g_unichar_xdigit_value@plt+0x16530>
   2a074:	mov	r8, #0
   2a078:	str	sl, [sp, #32]
   2a07c:	add	r9, pc, r9
   2a080:	str	r8, [sp, #8]
   2a084:	b	2a0f4 <g_unichar_xdigit_value@plt+0x16290>
   2a088:	ldr	r0, [r5]
   2a08c:	str	r1, [r5, #4]
   2a090:	ldr	ip, [sp, #8]
   2a094:	strb	r2, [r0, r3]
   2a098:	ldm	r5, {r2, r3}
   2a09c:	strb	ip, [r2, r3]
   2a0a0:	orrs	r1, sl, fp
   2a0a4:	mov	r0, r6
   2a0a8:	mov	r1, r7
   2a0ac:	ldrne	ip, [r5, #4]
   2a0b0:	strne	ip, [sp, #12]
   2a0b4:	bl	26558 <g_unichar_xdigit_value@plt+0x126f4>
   2a0b8:	cmp	r6, #0
   2a0bc:	mov	r4, r0
   2a0c0:	beq	2a0cc <g_unichar_xdigit_value@plt+0x16268>
   2a0c4:	mov	r0, r6
   2a0c8:	bl	13b94 <g_object_unref@plt>
   2a0cc:	cmp	r7, #0
   2a0d0:	beq	2a0dc <g_unichar_xdigit_value@plt+0x16278>
   2a0d4:	mov	r0, r7
   2a0d8:	bl	13b94 <g_object_unref@plt>
   2a0dc:	ldr	ip, [sp, #16]
   2a0e0:	add	r8, r8, #1
   2a0e4:	ldr	r3, [ip, #12]
   2a0e8:	ldr	r2, [r3, #4]
   2a0ec:	cmp	r8, r2
   2a0f0:	bge	2a168 <g_unichar_xdigit_value@plt+0x16304>
   2a0f4:	mov	r0, r4
   2a0f8:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   2a0fc:	cmp	r0, #0
   2a100:	bne	2a2e0 <g_unichar_xdigit_value@plt+0x1647c>
   2a104:	mov	r0, r4
   2a108:	ldrd	r2, [sp]
   2a10c:	bl	266e0 <g_unichar_xdigit_value@plt+0x1287c>
   2a110:	cmp	r4, #0
   2a114:	mov	r6, r0
   2a118:	beq	2a124 <g_unichar_xdigit_value@plt+0x162c0>
   2a11c:	mov	r0, r4
   2a120:	bl	13b94 <g_object_unref@plt>
   2a124:	mov	r0, r6
   2a128:	bl	25ccc <g_unichar_xdigit_value@plt+0x11e68>
   2a12c:	mov	r7, r0
   2a130:	bl	24ca0 <g_unichar_xdigit_value@plt+0x10e3c>
   2a134:	ldr	r3, [r5, #4]
   2a138:	add	r2, r9, r0
   2a13c:	mov	sl, r0
   2a140:	ldr	r0, [r5, #8]
   2a144:	mov	fp, r1
   2a148:	add	r1, r3, #1
   2a14c:	ldrb	r2, [r2, #824]	; 0x338
   2a150:	cmp	r1, r0
   2a154:	bcc	2a088 <g_unichar_xdigit_value@plt+0x16224>
   2a158:	mov	r0, r5
   2a15c:	mvn	r1, #0
   2a160:	bl	13858 <g_string_insert_c@plt>
   2a164:	b	2a0a0 <g_unichar_xdigit_value@plt+0x1623c>
   2a168:	ldr	sl, [sp, #32]
   2a16c:	ldr	r2, [r3, #16]
   2a170:	cmp	r2, #0
   2a174:	bne	2a2a4 <g_unichar_xdigit_value@plt+0x16440>
   2a178:	ldr	r1, [sp, #12]
   2a17c:	mov	r0, r5
   2a180:	bl	134e0 <g_string_truncate@plt>
   2a184:	ldr	r1, [pc, #524]	; 2a398 <g_unichar_xdigit_value@plt+0x16534>
   2a188:	ldr	r0, [r5]
   2a18c:	add	r1, pc, r1
   2a190:	bl	13e58 <g_strcmp0@plt>
   2a194:	cmp	r0, #0
   2a198:	beq	2a1d4 <g_unichar_xdigit_value@plt+0x16370>
   2a19c:	ldr	r0, [sp, #28]
   2a1a0:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   2a1a4:	cmp	r0, #0
   2a1a8:	bne	2a300 <g_unichar_xdigit_value@plt+0x1649c>
   2a1ac:	ldr	ip, [sp, #36]	; 0x24
   2a1b0:	cmp	ip, #0
   2a1b4:	beq	2a1e0 <g_unichar_xdigit_value@plt+0x1637c>
   2a1b8:	ldr	r1, [pc, #476]	; 2a39c <g_unichar_xdigit_value@plt+0x16538>
   2a1bc:	mov	r0, r5
   2a1c0:	add	r1, pc, r1
   2a1c4:	bl	13de0 <g_string_prepend@plt>
   2a1c8:	b	2a1e0 <g_unichar_xdigit_value@plt+0x1637c>
   2a1cc:	ldr	sl, [sp, #8]
   2a1d0:	b	2a024 <g_unichar_xdigit_value@plt+0x161c0>
   2a1d4:	ldr	ip, [sp, #36]	; 0x24
   2a1d8:	cmp	ip, #0
   2a1dc:	bne	2a2f0 <g_unichar_xdigit_value@plt+0x1648c>
   2a1e0:	ldr	ip, [sp, #16]
   2a1e4:	ldr	r3, [ip, #12]
   2a1e8:	ldr	r3, [r3, #20]
   2a1ec:	cmp	sl, r3
   2a1f0:	beq	2a264 <g_unichar_xdigit_value@plt+0x16400>
   2a1f4:	cmp	sl, #0
   2a1f8:	beq	2a264 <g_unichar_xdigit_value@plt+0x16400>
   2a1fc:	mov	r6, #1
   2a200:	add	r6, r6, r6, lsl #2
   2a204:	mov	r0, sl
   2a208:	lsl	r6, r6, #1
   2a20c:	mov	r1, r6
   2a210:	bl	37244 <g_unichar_xdigit_value@plt+0x233e0>
   2a214:	cmp	r0, #0
   2a218:	bne	2a200 <g_unichar_xdigit_value@plt+0x1639c>
   2a21c:	ldr	r8, [pc, #380]	; 2a3a0 <g_unichar_xdigit_value@plt+0x1653c>
   2a220:	movw	r7, #26215	; 0x6667
   2a224:	movt	r7, #26214	; 0x6666
   2a228:	add	r8, pc, r8
   2a22c:	smull	r1, r3, r7, r6
   2a230:	asr	r6, r6, #31
   2a234:	mov	r0, sl
   2a238:	rsb	r6, r6, r3, asr #2
   2a23c:	mov	r1, r6
   2a240:	bl	37244 <g_unichar_xdigit_value@plt+0x233e0>
   2a244:	add	r2, r8, r0, lsl #2
   2a248:	mov	r3, r0
   2a24c:	mov	r0, r5
   2a250:	ldr	r1, [r2, #60]	; 0x3c
   2a254:	mls	sl, r3, r6, sl
   2a258:	bl	13d50 <g_string_append@plt>
   2a25c:	cmp	r6, #1
   2a260:	bne	2a22c <g_unichar_xdigit_value@plt+0x163c8>
   2a264:	ldr	ip, [sp, #24]
   2a268:	cmp	ip, #0
   2a26c:	beq	2a278 <g_unichar_xdigit_value@plt+0x16414>
   2a270:	ldr	r0, [sp, #24]
   2a274:	bl	13b94 <g_object_unref@plt>
   2a278:	cmp	r4, #0
   2a27c:	beq	2a288 <g_unichar_xdigit_value@plt+0x16424>
   2a280:	mov	r0, r4
   2a284:	bl	13b94 <g_object_unref@plt>
   2a288:	ldr	ip, [sp, #20]
   2a28c:	cmp	ip, #0
   2a290:	beq	2a37c <g_unichar_xdigit_value@plt+0x16518>
   2a294:	mov	r0, ip
   2a298:	add	sp, sp, #44	; 0x2c
   2a29c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2a0:	b	13b94 <g_object_unref@plt>
   2a2a4:	ldr	r3, [r3, #4]
   2a2a8:	cmp	r3, #0
   2a2ac:	bne	2a184 <g_unichar_xdigit_value@plt+0x16320>
   2a2b0:	b	2a178 <g_unichar_xdigit_value@plt+0x16314>
   2a2b4:	ldr	r0, [sp, #20]
   2a2b8:	bl	259a4 <g_unichar_xdigit_value@plt+0x11b40>
   2a2bc:	ldr	ip, [sp, #20]
   2a2c0:	cmp	ip, #0
   2a2c4:	mov	r3, r0
   2a2c8:	streq	r0, [sp, #20]
   2a2cc:	beq	29db0 <g_unichar_xdigit_value@plt+0x15f4c>
   2a2d0:	mov	r0, ip
   2a2d4:	str	r3, [sp, #20]
   2a2d8:	bl	13b94 <g_object_unref@plt>
   2a2dc:	b	29db0 <g_unichar_xdigit_value@plt+0x15f4c>
   2a2e0:	ldr	ip, [sp, #16]
   2a2e4:	ldr	sl, [sp, #32]
   2a2e8:	ldr	r3, [ip, #12]
   2a2ec:	b	2a16c <g_unichar_xdigit_value@plt+0x16308>
   2a2f0:	ldr	r0, [sp, #28]
   2a2f4:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   2a2f8:	cmp	r0, #0
   2a2fc:	beq	2a1b8 <g_unichar_xdigit_value@plt+0x16354>
   2a300:	ldr	r1, [pc, #156]	; 2a3a4 <g_unichar_xdigit_value@plt+0x16540>
   2a304:	mov	r0, r5
   2a308:	add	r1, pc, r1
   2a30c:	bl	13de0 <g_string_prepend@plt>
   2a310:	b	2a1e0 <g_unichar_xdigit_value@plt+0x1637c>
   2a314:	ldr	r1, [pc, #140]	; 2a3a8 <g_unichar_xdigit_value@plt+0x16544>
   2a318:	ldr	r2, [pc, #140]	; 2a3ac <g_unichar_xdigit_value@plt+0x16548>
   2a31c:	add	r1, pc, r1
   2a320:	add	r2, pc, r2
   2a324:	add	r1, r1, #840	; 0x348
   2a328:	add	sp, sp, #44	; 0x2c
   2a32c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a330:	b	13450 <g_return_if_fail_warning@plt>
   2a334:	ldr	r1, [pc, #116]	; 2a3b0 <g_unichar_xdigit_value@plt+0x1654c>
   2a338:	mov	r0, ip
   2a33c:	ldr	r2, [pc, #112]	; 2a3b4 <g_unichar_xdigit_value@plt+0x16550>
   2a340:	add	r1, pc, r1
   2a344:	add	r2, pc, r2
   2a348:	add	r1, r1, #840	; 0x348
   2a34c:	add	sp, sp, #44	; 0x2c
   2a350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a354:	b	13450 <g_return_if_fail_warning@plt>
   2a358:	ldr	r1, [pc, #88]	; 2a3b8 <g_unichar_xdigit_value@plt+0x16554>
   2a35c:	mov	r0, r5
   2a360:	ldr	r2, [pc, #84]	; 2a3bc <g_unichar_xdigit_value@plt+0x16558>
   2a364:	add	r1, pc, r1
   2a368:	add	r2, pc, r2
   2a36c:	add	r1, r1, #840	; 0x348
   2a370:	add	sp, sp, #44	; 0x2c
   2a374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a378:	b	13450 <g_return_if_fail_warning@plt>
   2a37c:	add	sp, sp, #44	; 0x2c
   2a380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a384:	andeq	r0, r1, r8, ror #29
   2a388:	andeq	pc, r0, r4, ror #8
   2a38c:			; <UNDEFINED> instruction: 0x000111bc
   2a390:	andeq	r2, r1, r4, ror ip
   2a394:	andeq	r0, r1, r4, ror #25
   2a398:	andeq	r2, r1, ip, asr #21
   2a39c:	strdeq	r0, [r1], -r8
   2a3a0:	andeq	r6, r2, r0, ror r8
   2a3a4:	andeq	r0, r1, ip, lsr #29
   2a3a8:	andeq	r0, r1, r4, asr #20
   2a3ac:	andeq	sp, r0, r4, asr #27
   2a3b0:	andeq	r0, r1, r0, lsr #20
   2a3b4:	andeq	lr, r0, ip, lsl r1
   2a3b8:	strdeq	r0, [r1], -ip
   2a3bc:	strdeq	r0, [r1], -ip
   2a3c0:	ldr	r3, [pc, #736]	; 2a6a8 <g_unichar_xdigit_value@plt+0x16844>
   2a3c4:	ldr	ip, [pc, #736]	; 2a6ac <g_unichar_xdigit_value@plt+0x16848>
   2a3c8:	add	r3, pc, r3
   2a3cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a3d0:	subs	r6, r0, #0
   2a3d4:	ldr	r8, [r3, ip]
   2a3d8:	sub	sp, sp, #20
   2a3dc:	mov	r5, r1
   2a3e0:	mov	r9, r2
   2a3e4:	ldr	r3, [r8]
   2a3e8:	str	r3, [sp, #12]
   2a3ec:	beq	2a538 <g_unichar_xdigit_value@plt+0x166d4>
   2a3f0:	cmp	r1, #0
   2a3f4:	beq	2a558 <g_unichar_xdigit_value@plt+0x166f4>
   2a3f8:	mov	r0, #1024	; 0x400
   2a3fc:	bl	13960 <g_string_sized_new@plt>
   2a400:	mov	r4, r0
   2a404:	mov	r0, r5
   2a408:	bl	25b58 <g_unichar_xdigit_value@plt+0x11cf4>
   2a40c:	ldr	r2, [r6, #12]
   2a410:	mov	r3, #0
   2a414:	ldr	r2, [r2, #24]
   2a418:	str	r4, [sp, #4]
   2a41c:	str	r9, [sp]
   2a420:	mov	r1, r0
   2a424:	mov	r7, r0
   2a428:	mov	r0, r6
   2a42c:	bl	29d5c <g_unichar_xdigit_value@plt+0x15ef8>
   2a430:	mov	r0, r5
   2a434:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   2a438:	cmp	r0, #0
   2a43c:	bne	2a484 <g_unichar_xdigit_value@plt+0x16620>
   2a440:	ldr	r0, [r4]
   2a444:	bl	136f0 <g_strdup@plt>
   2a448:	cmp	r7, #0
   2a44c:	mov	r5, r0
   2a450:	beq	2a45c <g_unichar_xdigit_value@plt+0x165f8>
   2a454:	mov	r0, r7
   2a458:	bl	13b94 <g_object_unref@plt>
   2a45c:	mov	r0, r4
   2a460:	mov	r1, #1
   2a464:	bl	13b4c <g_string_free@plt>
   2a468:	mov	r0, r5
   2a46c:	ldr	r2, [sp, #12]
   2a470:	ldr	r3, [r8]
   2a474:	cmp	r2, r3
   2a478:	bne	2a6a4 <g_unichar_xdigit_value@plt+0x16840>
   2a47c:	add	sp, sp, #20
   2a480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a484:	mov	r0, r5
   2a488:	mov	r3, #0
   2a48c:	str	r3, [sp, #8]
   2a490:	bl	25bac <g_unichar_xdigit_value@plt+0x11d48>
   2a494:	ldr	r1, [pc, #532]	; 2a6b0 <g_unichar_xdigit_value@plt+0x1684c>
   2a498:	add	r1, pc, r1
   2a49c:	mov	sl, r0
   2a4a0:	ldr	r0, [r4]
   2a4a4:	bl	13e58 <g_strcmp0@plt>
   2a4a8:	subs	fp, r0, #0
   2a4ac:	movne	fp, #1
   2a4b0:	beq	2a5f4 <g_unichar_xdigit_value@plt+0x16790>
   2a4b4:	mov	r0, #1024	; 0x400
   2a4b8:	bl	13960 <g_string_sized_new@plt>
   2a4bc:	ldr	r2, [r6, #12]
   2a4c0:	add	ip, sp, #16
   2a4c4:	mov	lr, #0
   2a4c8:	mov	r3, fp
   2a4cc:	mov	r1, sl
   2a4d0:	ldr	r2, [r2, #24]
   2a4d4:	str	lr, [ip, #-8]!
   2a4d8:	str	ip, [sp]
   2a4dc:	mov	r5, r0
   2a4e0:	mov	r0, r6
   2a4e4:	str	r5, [sp, #4]
   2a4e8:	ldr	r6, [pc, #452]	; 2a6b4 <g_unichar_xdigit_value@plt+0x16850>
   2a4ec:	bl	29d5c <g_unichar_xdigit_value@plt+0x15ef8>
   2a4f0:	ldr	r3, [sp, #8]
   2a4f4:	ldr	r2, [r9]
   2a4f8:	add	r6, pc, r6
   2a4fc:	ldr	r0, [r5]
   2a500:	cmp	r3, r2
   2a504:	mov	r1, r6
   2a508:	strgt	r3, [r9]
   2a50c:	bl	13e58 <g_strcmp0@plt>
   2a510:	cmp	r0, #0
   2a514:	bne	2a57c <g_unichar_xdigit_value@plt+0x16718>
   2a518:	mov	r0, r5
   2a51c:	mov	r1, #1
   2a520:	bl	13b4c <g_string_free@plt>
   2a524:	cmp	sl, #0
   2a528:	beq	2a440 <g_unichar_xdigit_value@plt+0x165dc>
   2a52c:	mov	r0, sl
   2a530:	bl	13b94 <g_object_unref@plt>
   2a534:	b	2a440 <g_unichar_xdigit_value@plt+0x165dc>
   2a538:	ldr	r1, [pc, #376]	; 2a6b8 <g_unichar_xdigit_value@plt+0x16854>
   2a53c:	ldr	r2, [pc, #376]	; 2a6bc <g_unichar_xdigit_value@plt+0x16858>
   2a540:	add	r1, pc, r1
   2a544:	add	r2, pc, r2
   2a548:	add	r1, r1, #872	; 0x368
   2a54c:	bl	13450 <g_return_if_fail_warning@plt>
   2a550:	mov	r0, r6
   2a554:	b	2a46c <g_unichar_xdigit_value@plt+0x16608>
   2a558:	ldr	r1, [pc, #352]	; 2a6c0 <g_unichar_xdigit_value@plt+0x1685c>
   2a55c:	mov	r0, r5
   2a560:	ldr	r2, [pc, #348]	; 2a6c4 <g_unichar_xdigit_value@plt+0x16860>
   2a564:	add	r1, pc, r1
   2a568:	add	r2, pc, r2
   2a56c:	add	r1, r1, #872	; 0x368
   2a570:	bl	13450 <g_return_if_fail_warning@plt>
   2a574:	mov	r0, r5
   2a578:	b	2a46c <g_unichar_xdigit_value@plt+0x16608>
   2a57c:	ldr	r9, [pc, #324]	; 2a6c8 <g_unichar_xdigit_value@plt+0x16864>
   2a580:	ldr	r0, [r5]
   2a584:	add	r9, pc, r9
   2a588:	mov	r1, r9
   2a58c:	bl	13e58 <g_strcmp0@plt>
   2a590:	cmp	r0, #0
   2a594:	beq	2a518 <g_unichar_xdigit_value@plt+0x166b4>
   2a598:	ldr	r1, [pc, #300]	; 2a6cc <g_unichar_xdigit_value@plt+0x16868>
   2a59c:	ldr	r0, [r5]
   2a5a0:	add	r1, pc, r1
   2a5a4:	bl	13e58 <g_strcmp0@plt>
   2a5a8:	cmp	r0, #0
   2a5ac:	beq	2a518 <g_unichar_xdigit_value@plt+0x166b4>
   2a5b0:	ldr	r1, [pc, #280]	; 2a6d0 <g_unichar_xdigit_value@plt+0x1686c>
   2a5b4:	ldr	r0, [r5]
   2a5b8:	add	r1, pc, r1
   2a5bc:	bl	13e58 <g_strcmp0@plt>
   2a5c0:	cmp	r0, #0
   2a5c4:	beq	2a608 <g_unichar_xdigit_value@plt+0x167a4>
   2a5c8:	ldr	r1, [pc, #260]	; 2a6d4 <g_unichar_xdigit_value@plt+0x16870>
   2a5cc:	ldr	r0, [r5]
   2a5d0:	add	r1, pc, r1
   2a5d4:	bl	13e58 <g_strcmp0@plt>
   2a5d8:	cmp	r0, #0
   2a5dc:	bne	2a61c <g_unichar_xdigit_value@plt+0x167b8>
   2a5e0:	ldr	r1, [pc, #240]	; 2a6d8 <g_unichar_xdigit_value@plt+0x16874>
   2a5e4:	mov	r0, r4
   2a5e8:	add	r1, pc, r1
   2a5ec:	bl	13d50 <g_string_append@plt>
   2a5f0:	b	2a518 <g_unichar_xdigit_value@plt+0x166b4>
   2a5f4:	ldr	r1, [pc, #224]	; 2a6dc <g_unichar_xdigit_value@plt+0x16878>
   2a5f8:	mov	r0, r4
   2a5fc:	add	r1, pc, r1
   2a600:	bl	13414 <g_string_assign@plt>
   2a604:	b	2a4b4 <g_unichar_xdigit_value@plt+0x16650>
   2a608:	ldr	r1, [pc, #208]	; 2a6e0 <g_unichar_xdigit_value@plt+0x1687c>
   2a60c:	mov	r0, r4
   2a610:	add	r1, pc, r1
   2a614:	bl	13d50 <g_string_append@plt>
   2a618:	b	2a518 <g_unichar_xdigit_value@plt+0x166b4>
   2a61c:	ldr	r1, [pc, #192]	; 2a6e4 <g_unichar_xdigit_value@plt+0x16880>
   2a620:	ldr	r0, [r5]
   2a624:	add	r1, pc, r1
   2a628:	bl	13e58 <g_strcmp0@plt>
   2a62c:	cmp	r0, #0
   2a630:	bne	2a648 <g_unichar_xdigit_value@plt+0x167e4>
   2a634:	ldr	r1, [pc, #172]	; 2a6e8 <g_unichar_xdigit_value@plt+0x16884>
   2a638:	mov	r0, r4
   2a63c:	add	r1, pc, r1
   2a640:	bl	13d50 <g_string_append@plt>
   2a644:	b	2a518 <g_unichar_xdigit_value@plt+0x166b4>
   2a648:	mov	r1, r9
   2a64c:	ldr	r0, [r5]
   2a650:	bl	13e58 <g_strcmp0@plt>
   2a654:	cmp	r0, #0
   2a658:	bne	2a680 <g_unichar_xdigit_value@plt+0x1681c>
   2a65c:	ldr	r1, [pc, #136]	; 2a6ec <g_unichar_xdigit_value@plt+0x16888>
   2a660:	mov	r0, r4
   2a664:	add	r1, pc, r1
   2a668:	bl	13d50 <g_string_append@plt>
   2a66c:	ldr	r1, [pc, #124]	; 2a6f0 <g_unichar_xdigit_value@plt+0x1688c>
   2a670:	mov	r0, r4
   2a674:	add	r1, pc, r1
   2a678:	bl	13d50 <g_string_append@plt>
   2a67c:	b	2a518 <g_unichar_xdigit_value@plt+0x166b4>
   2a680:	mov	r1, r6
   2a684:	ldr	r0, [r5]
   2a688:	bl	13e58 <g_strcmp0@plt>
   2a68c:	cmp	r0, #0
   2a690:	beq	2a66c <g_unichar_xdigit_value@plt+0x16808>
   2a694:	mov	r0, r4
   2a698:	ldr	r1, [r5]
   2a69c:	bl	13d50 <g_string_append@plt>
   2a6a0:	b	2a66c <g_unichar_xdigit_value@plt+0x16808>
   2a6a4:	bl	13978 <__stack_chk_fail@plt>
   2a6a8:	andeq	r6, r2, r0, lsr ip
   2a6ac:	muleq	r0, r0, r3
   2a6b0:	andeq	r2, r1, r0, asr #15
   2a6b4:	andeq	r2, r1, r0, ror #14
   2a6b8:	andeq	r0, r1, r0, lsr #16
   2a6bc:	andeq	sp, r0, r0, lsr #23
   2a6c0:	strdeq	r0, [r1], -ip
   2a6c4:	strdeq	sp, [r0], -r8
   2a6c8:	andeq	r0, r1, r8, lsr ip
   2a6cc:	andeq	r0, r1, r0, lsr #24
   2a6d0:	andeq	r0, r1, r0, lsl ip
   2a6d4:	strdeq	r0, [r1], -ip
   2a6d8:	andeq	r0, r1, r8, ror #23
   2a6dc:	andeq	lr, r0, r8, asr #22
   2a6e0:	andeq	r1, r1, r0, lsr #6
   2a6e4:			; <UNDEFINED> instruction: 0x00010bb0
   2a6e8:	andeq	r0, r1, r0, lsr #23
   2a6ec:	andeq	r0, r1, r4, asr fp
   2a6f0:			; <UNDEFINED> instruction: 0x000112bc
   2a6f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a6f8:	subs	ip, r0, #0
   2a6fc:	sub	sp, sp, #28
   2a700:	mov	r4, r1
   2a704:	mov	r8, r3
   2a708:	str	ip, [sp, #16]
   2a70c:	str	r2, [sp, #8]
   2a710:	beq	2aa64 <g_unichar_xdigit_value@plt+0x16c00>
   2a714:	cmp	r1, #0
   2a718:	beq	2a9e4 <g_unichar_xdigit_value@plt+0x16b80>
   2a71c:	ldr	ip, [sp, #8]
   2a720:	cmp	ip, #0
   2a724:	beq	2aa3c <g_unichar_xdigit_value@plt+0x16bd8>
   2a728:	mov	r0, r1
   2a72c:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   2a730:	cmp	r0, #0
   2a734:	bne	2aa0c <g_unichar_xdigit_value@plt+0x16ba8>
   2a738:	mov	r0, r4
   2a73c:	bl	259a4 <g_unichar_xdigit_value@plt+0x11b40>
   2a740:	ldr	ip, [sp, #16]
   2a744:	mov	r2, #0
   2a748:	mov	r3, #0
   2a74c:	ldr	r1, [ip, #12]
   2a750:	mov	r9, r0
   2a754:	ldr	r0, [r1, #20]
   2a758:	asr	r1, r0, #31
   2a75c:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   2a760:	mov	r2, #3
   2a764:	mov	r3, #0
   2a768:	mov	r5, r0
   2a76c:	bl	25eb8 <g_unichar_xdigit_value@plt+0x12054>
   2a770:	mov	r2, #10
   2a774:	mov	r3, #0
   2a778:	str	r0, [sp, #12]
   2a77c:	mov	r0, r5
   2a780:	bl	25eb8 <g_unichar_xdigit_value@plt+0x12054>
   2a784:	mov	r2, #0
   2a788:	mov	r3, #0
   2a78c:	mov	r1, #0
   2a790:	mov	r6, r0
   2a794:	mov	r0, #1
   2a798:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   2a79c:	mov	r1, r6
   2a7a0:	str	r0, [sp, #4]
   2a7a4:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   2a7a8:	mov	r7, r0
   2a7ac:	mov	r0, r9
   2a7b0:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   2a7b4:	cmp	r0, #0
   2a7b8:	beq	2a85c <g_unichar_xdigit_value@plt+0x169f8>
   2a7bc:	ldr	sl, [sp, #4]
   2a7c0:	mov	r4, #0
   2a7c4:	ldr	r2, [sp, #64]	; 0x40
   2a7c8:	mov	r1, r9
   2a7cc:	ldr	r0, [sp, #16]
   2a7d0:	bl	2a3c0 <g_unichar_xdigit_value@plt+0x1655c>
   2a7d4:	mov	r8, r0
   2a7d8:	ldr	r0, [sp, #8]
   2a7dc:	mov	r1, r8
   2a7e0:	bl	13d50 <g_string_append@plt>
   2a7e4:	mov	r0, r8
   2a7e8:	bl	1399c <g_free@plt>
   2a7ec:	cmp	r7, #0
   2a7f0:	beq	2a7fc <g_unichar_xdigit_value@plt+0x16998>
   2a7f4:	mov	r0, r7
   2a7f8:	bl	13b94 <g_object_unref@plt>
   2a7fc:	cmp	sl, #0
   2a800:	beq	2a80c <g_unichar_xdigit_value@plt+0x169a8>
   2a804:	mov	r0, sl
   2a808:	bl	13b94 <g_object_unref@plt>
   2a80c:	cmp	r6, #0
   2a810:	beq	2a81c <g_unichar_xdigit_value@plt+0x169b8>
   2a814:	mov	r0, r6
   2a818:	bl	13b94 <g_object_unref@plt>
   2a81c:	ldr	ip, [sp, #12]
   2a820:	cmp	ip, #0
   2a824:	beq	2a830 <g_unichar_xdigit_value@plt+0x169cc>
   2a828:	mov	r0, ip
   2a82c:	bl	13b94 <g_object_unref@plt>
   2a830:	cmp	r5, #0
   2a834:	beq	2a840 <g_unichar_xdigit_value@plt+0x169dc>
   2a838:	mov	r0, r5
   2a83c:	bl	13b94 <g_object_unref@plt>
   2a840:	cmp	r9, #0
   2a844:	beq	2aa00 <g_unichar_xdigit_value@plt+0x16b9c>
   2a848:	mov	r0, r9
   2a84c:	bl	13b94 <g_object_unref@plt>
   2a850:	mov	r0, r4
   2a854:	add	sp, sp, #28
   2a858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a85c:	cmp	r8, #0
   2a860:	bne	2aa88 <g_unichar_xdigit_value@plt+0x16c24>
   2a864:	mov	r4, r8
   2a868:	b	2a888 <g_unichar_xdigit_value@plt+0x16a24>
   2a86c:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   2a870:	add	r4, r4, #10
   2a874:	mov	sl, r0
   2a878:	subs	r0, r9, #0
   2a87c:	beq	2a884 <g_unichar_xdigit_value@plt+0x16a20>
   2a880:	bl	13b94 <g_object_unref@plt>
   2a884:	mov	r9, sl
   2a888:	mov	r1, r6
   2a88c:	mov	r0, r9
   2a890:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   2a894:	mov	r1, r7
   2a898:	cmp	r0, #0
   2a89c:	mov	r0, r9
   2a8a0:	bge	2a86c <g_unichar_xdigit_value@plt+0x16a08>
   2a8a4:	movw	sl, #21846	; 0x5556
   2a8a8:	ldr	fp, [sp, #12]
   2a8ac:	movt	sl, #21845	; 0x5555
   2a8b0:	str	r6, [sp, #20]
   2a8b4:	b	2a8e8 <g_unichar_xdigit_value@plt+0x16a84>
   2a8b8:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   2a8bc:	cmp	r0, #0
   2a8c0:	blt	2aa20 <g_unichar_xdigit_value@plt+0x16bbc>
   2a8c4:	mov	r0, r9
   2a8c8:	mov	r1, r5
   2a8cc:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   2a8d0:	add	r4, r4, #1
   2a8d4:	mov	r6, r0
   2a8d8:	subs	r0, r9, #0
   2a8dc:	beq	2a8e4 <g_unichar_xdigit_value@plt+0x16a80>
   2a8e0:	bl	13b94 <g_object_unref@plt>
   2a8e4:	mov	r9, r6
   2a8e8:	cmp	r8, #0
   2a8ec:	mov	r0, r9
   2a8f0:	mov	r1, fp
   2a8f4:	bne	2a8b8 <g_unichar_xdigit_value@plt+0x16a54>
   2a8f8:	mov	r1, r5
   2a8fc:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   2a900:	cmp	r0, #0
   2a904:	bge	2a8c4 <g_unichar_xdigit_value@plt+0x16a60>
   2a908:	ldr	r6, [sp, #20]
   2a90c:	b	2a92c <g_unichar_xdigit_value@plt+0x16ac8>
   2a910:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   2a914:	sub	r4, r4, #10
   2a918:	mov	sl, r0
   2a91c:	subs	r0, r9, #0
   2a920:	beq	2a928 <g_unichar_xdigit_value@plt+0x16ac4>
   2a924:	bl	13b94 <g_object_unref@plt>
   2a928:	mov	r9, sl
   2a92c:	mov	r1, r7
   2a930:	mov	r0, r9
   2a934:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   2a938:	mov	r1, r6
   2a93c:	cmp	r0, #0
   2a940:	mov	r0, r9
   2a944:	blt	2a910 <g_unichar_xdigit_value@plt+0x16aac>
   2a948:	mov	r0, #1
   2a94c:	mov	r1, #0
   2a950:	mov	r2, #0
   2a954:	mov	r3, #0
   2a958:	bl	25618 <g_unichar_xdigit_value@plt+0x117b4>
   2a95c:	ldr	ip, [sp, #4]
   2a960:	cmp	ip, #0
   2a964:	mov	sl, r0
   2a968:	beq	2a974 <g_unichar_xdigit_value@plt+0x16b10>
   2a96c:	mov	r0, ip
   2a970:	bl	13b94 <g_object_unref@plt>
   2a974:	movw	r3, #21846	; 0x5556
   2a978:	movt	r3, #21845	; 0x5555
   2a97c:	str	r6, [sp, #4]
   2a980:	mov	fp, r3
   2a984:	b	2a9b4 <g_unichar_xdigit_value@plt+0x16b50>
   2a988:	sub	r3, r3, r4, asr #31
   2a98c:	add	r3, r3, r3, lsl #1
   2a990:	cmp	r4, r3
   2a994:	beq	2a9dc <g_unichar_xdigit_value@plt+0x16b78>
   2a998:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   2a99c:	sub	r4, r4, #1
   2a9a0:	mov	r6, r0
   2a9a4:	subs	r0, r9, #0
   2a9a8:	beq	2a9b0 <g_unichar_xdigit_value@plt+0x16b4c>
   2a9ac:	bl	13b94 <g_object_unref@plt>
   2a9b0:	mov	r9, r6
   2a9b4:	mov	r1, sl
   2a9b8:	mov	r0, r9
   2a9bc:	bl	2516c <g_unichar_xdigit_value@plt+0x11308>
   2a9c0:	mov	r1, r5
   2a9c4:	cmp	r0, #0
   2a9c8:	mov	r0, r9
   2a9cc:	blt	2a998 <g_unichar_xdigit_value@plt+0x16b34>
   2a9d0:	cmp	r8, #0
   2a9d4:	smull	r2, r3, fp, r4
   2a9d8:	bne	2a988 <g_unichar_xdigit_value@plt+0x16b24>
   2a9dc:	ldr	r6, [sp, #4]
   2a9e0:	b	2a7c4 <g_unichar_xdigit_value@plt+0x16960>
   2a9e4:	ldr	r1, [pc, #164]	; 2aa90 <g_unichar_xdigit_value@plt+0x16c2c>
   2a9e8:	mov	r0, r4
   2a9ec:	ldr	r2, [pc, #160]	; 2aa94 <g_unichar_xdigit_value@plt+0x16c30>
   2a9f0:	add	r1, pc, r1
   2a9f4:	add	r2, pc, r2
   2a9f8:	add	r1, r1, #900	; 0x384
   2a9fc:	bl	13450 <g_return_if_fail_warning@plt>
   2aa00:	mov	r0, r4
   2aa04:	add	sp, sp, #28
   2aa08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aa0c:	ldr	r1, [pc, #132]	; 2aa98 <g_unichar_xdigit_value@plt+0x16c34>
   2aa10:	ldr	r0, [sp, #8]
   2aa14:	add	r1, pc, r1
   2aa18:	bl	13d50 <g_string_append@plt>
   2aa1c:	b	2a738 <g_unichar_xdigit_value@plt+0x168d4>
   2aa20:	smull	r2, r3, sl, r4
   2aa24:	sub	r3, r3, r4, asr #31
   2aa28:	add	r3, r3, r3, lsl #1
   2aa2c:	cmp	r4, r3
   2aa30:	bne	2a8c4 <g_unichar_xdigit_value@plt+0x16a60>
   2aa34:	ldr	r6, [sp, #20]
   2aa38:	b	2a948 <g_unichar_xdigit_value@plt+0x16ae4>
   2aa3c:	ldr	r1, [pc, #88]	; 2aa9c <g_unichar_xdigit_value@plt+0x16c38>
   2aa40:	ldr	r2, [pc, #88]	; 2aaa0 <g_unichar_xdigit_value@plt+0x16c3c>
   2aa44:	add	r1, pc, r1
   2aa48:	ldr	r0, [sp, #8]
   2aa4c:	add	r2, pc, r2
   2aa50:	add	r1, r1, #900	; 0x384
   2aa54:	bl	13450 <g_return_if_fail_warning@plt>
   2aa58:	ldr	r0, [sp, #8]
   2aa5c:	add	sp, sp, #28
   2aa60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aa64:	ldr	r1, [pc, #56]	; 2aaa4 <g_unichar_xdigit_value@plt+0x16c40>
   2aa68:	ldr	r2, [pc, #56]	; 2aaa8 <g_unichar_xdigit_value@plt+0x16c44>
   2aa6c:	add	r1, pc, r1
   2aa70:	add	r2, pc, r2
   2aa74:	add	r1, r1, #900	; 0x384
   2aa78:	bl	13450 <g_return_if_fail_warning@plt>
   2aa7c:	ldr	r0, [sp, #16]
   2aa80:	add	sp, sp, #28
   2aa84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aa88:	mov	r4, r0
   2aa8c:	b	2a8a4 <g_unichar_xdigit_value@plt+0x16a40>
   2aa90:	andeq	r0, r1, r0, ror r3
   2aa94:	andeq	sp, r0, ip, ror #20
   2aa98:	andeq	r0, r1, r0, lsr #15
   2aa9c:	andeq	r0, r1, ip, lsl r3
   2aaa0:	andeq	r0, r1, r8, lsl r7
   2aaa4:	strdeq	r0, [r1], -r4
   2aaa8:	andeq	sp, r0, r4, ror r6
   2aaac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aab0:	mov	sl, r3
   2aab4:	ldr	lr, [pc, #756]	; 2adb0 <g_unichar_xdigit_value@plt+0x16f4c>
   2aab8:	sub	sp, sp, #28
   2aabc:	ldr	ip, [pc, #752]	; 2adb4 <g_unichar_xdigit_value@plt+0x16f50>
   2aac0:	subs	r5, r0, #0
   2aac4:	add	lr, pc, lr
   2aac8:	mov	r8, r1
   2aacc:	mov	fp, r2
   2aad0:	ldr	r7, [lr, ip]
   2aad4:	mov	r3, lr
   2aad8:	ldr	r3, [r7]
   2aadc:	str	r3, [sp, #20]
   2aae0:	beq	2ac3c <g_unichar_xdigit_value@plt+0x16dd8>
   2aae4:	cmp	r1, #0
   2aae8:	beq	2ac5c <g_unichar_xdigit_value@plt+0x16df8>
   2aaec:	mov	r0, #1024	; 0x400
   2aaf0:	bl	13960 <g_string_sized_new@plt>
   2aaf4:	mov	r4, r0
   2aaf8:	mov	r0, r8
   2aafc:	bl	25b58 <g_unichar_xdigit_value@plt+0x11cf4>
   2ab00:	mov	r3, fp
   2ab04:	mov	r2, r4
   2ab08:	str	sl, [sp]
   2ab0c:	mov	r1, r0
   2ab10:	mov	r6, r0
   2ab14:	mov	r0, r5
   2ab18:	bl	2a6f4 <g_unichar_xdigit_value@plt+0x16890>
   2ab1c:	mov	r1, r4
   2ab20:	mov	r2, r0
   2ab24:	mov	r0, r5
   2ab28:	bl	29468 <g_unichar_xdigit_value@plt+0x15604>
   2ab2c:	mov	r0, r8
   2ab30:	bl	24ea0 <g_unichar_xdigit_value@plt+0x1103c>
   2ab34:	cmp	r0, #0
   2ab38:	bne	2ab80 <g_unichar_xdigit_value@plt+0x16d1c>
   2ab3c:	ldr	r0, [r4]
   2ab40:	bl	136f0 <g_strdup@plt>
   2ab44:	cmp	r6, #0
   2ab48:	mov	r5, r0
   2ab4c:	beq	2ab58 <g_unichar_xdigit_value@plt+0x16cf4>
   2ab50:	mov	r0, r6
   2ab54:	bl	13b94 <g_object_unref@plt>
   2ab58:	mov	r0, r4
   2ab5c:	mov	r1, #1
   2ab60:	bl	13b4c <g_string_free@plt>
   2ab64:	mov	r0, r5
   2ab68:	ldr	r2, [sp, #20]
   2ab6c:	ldr	r3, [r7]
   2ab70:	cmp	r2, r3
   2ab74:	bne	2adac <g_unichar_xdigit_value@plt+0x16f48>
   2ab78:	add	sp, sp, #28
   2ab7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab80:	mov	r0, r8
   2ab84:	mov	r3, #0
   2ab88:	str	r3, [sp, #16]
   2ab8c:	bl	25bac <g_unichar_xdigit_value@plt+0x11d48>
   2ab90:	ldr	r1, [pc, #544]	; 2adb8 <g_unichar_xdigit_value@plt+0x16f54>
   2ab94:	add	r1, pc, r1
   2ab98:	mov	r9, r0
   2ab9c:	ldr	r0, [r4]
   2aba0:	bl	13e58 <g_strcmp0@plt>
   2aba4:	cmp	r0, #0
   2aba8:	beq	2acfc <g_unichar_xdigit_value@plt+0x16e98>
   2abac:	mov	r0, #1024	; 0x400
   2abb0:	bl	13960 <g_string_sized_new@plt>
   2abb4:	add	r1, sp, #24
   2abb8:	mov	r3, fp
   2abbc:	mov	r8, r0
   2abc0:	mov	r0, #0
   2abc4:	mov	r2, r8
   2abc8:	str	r0, [r1, #-8]!
   2abcc:	mov	r0, r5
   2abd0:	str	r1, [sp]
   2abd4:	mov	r1, r9
   2abd8:	bl	2a6f4 <g_unichar_xdigit_value@plt+0x16890>
   2abdc:	ldr	r3, [sp, #16]
   2abe0:	ldr	r2, [sl]
   2abe4:	cmp	r3, r2
   2abe8:	strgt	r3, [sl]
   2abec:	ldr	sl, [pc, #456]	; 2adbc <g_unichar_xdigit_value@plt+0x16f58>
   2abf0:	add	sl, pc, sl
   2abf4:	mov	r1, sl
   2abf8:	mov	fp, r0
   2abfc:	ldr	r0, [r8]
   2ac00:	bl	13e58 <g_strcmp0@plt>
   2ac04:	cmp	r0, #0
   2ac08:	bne	2ac80 <g_unichar_xdigit_value@plt+0x16e1c>
   2ac0c:	mov	r0, r5
   2ac10:	mov	r2, fp
   2ac14:	mov	r1, r4
   2ac18:	bl	29468 <g_unichar_xdigit_value@plt+0x15604>
   2ac1c:	mov	r0, r8
   2ac20:	mov	r1, #1
   2ac24:	bl	13b4c <g_string_free@plt>
   2ac28:	cmp	r9, #0
   2ac2c:	beq	2ab3c <g_unichar_xdigit_value@plt+0x16cd8>
   2ac30:	mov	r0, r9
   2ac34:	bl	13b94 <g_object_unref@plt>
   2ac38:	b	2ab3c <g_unichar_xdigit_value@plt+0x16cd8>
   2ac3c:	ldr	r1, [pc, #380]	; 2adc0 <g_unichar_xdigit_value@plt+0x16f5c>
   2ac40:	ldr	r2, [pc, #380]	; 2adc4 <g_unichar_xdigit_value@plt+0x16f60>
   2ac44:	add	r1, pc, r1
   2ac48:	add	r2, pc, r2
   2ac4c:	add	r1, r1, #944	; 0x3b0
   2ac50:	bl	13450 <g_return_if_fail_warning@plt>
   2ac54:	mov	r0, r5
   2ac58:	b	2ab68 <g_unichar_xdigit_value@plt+0x16d04>
   2ac5c:	ldr	r1, [pc, #356]	; 2adc8 <g_unichar_xdigit_value@plt+0x16f64>
   2ac60:	mov	r0, r8
   2ac64:	ldr	r2, [pc, #352]	; 2adcc <g_unichar_xdigit_value@plt+0x16f68>
   2ac68:	add	r1, pc, r1
   2ac6c:	add	r2, pc, r2
   2ac70:	add	r1, r1, #944	; 0x3b0
   2ac74:	bl	13450 <g_return_if_fail_warning@plt>
   2ac78:	mov	r0, r8
   2ac7c:	b	2ab68 <g_unichar_xdigit_value@plt+0x16d04>
   2ac80:	ldr	r3, [pc, #328]	; 2add0 <g_unichar_xdigit_value@plt+0x16f6c>
   2ac84:	ldr	r0, [r8]
   2ac88:	add	r3, pc, r3
   2ac8c:	str	r3, [sp, #12]
   2ac90:	mov	r1, r3
   2ac94:	bl	13e58 <g_strcmp0@plt>
   2ac98:	cmp	r0, #0
   2ac9c:	beq	2ac0c <g_unichar_xdigit_value@plt+0x16da8>
   2aca0:	ldr	r1, [pc, #300]	; 2add4 <g_unichar_xdigit_value@plt+0x16f70>
   2aca4:	ldr	r0, [r8]
   2aca8:	add	r1, pc, r1
   2acac:	bl	13e58 <g_strcmp0@plt>
   2acb0:	cmp	r0, #0
   2acb4:	beq	2ac0c <g_unichar_xdigit_value@plt+0x16da8>
   2acb8:	ldr	r1, [pc, #280]	; 2add8 <g_unichar_xdigit_value@plt+0x16f74>
   2acbc:	ldr	r0, [r8]
   2acc0:	add	r1, pc, r1
   2acc4:	bl	13e58 <g_strcmp0@plt>
   2acc8:	cmp	r0, #0
   2accc:	beq	2ad10 <g_unichar_xdigit_value@plt+0x16eac>
   2acd0:	ldr	r1, [pc, #260]	; 2addc <g_unichar_xdigit_value@plt+0x16f78>
   2acd4:	ldr	r0, [r8]
   2acd8:	add	r1, pc, r1
   2acdc:	bl	13e58 <g_strcmp0@plt>
   2ace0:	cmp	r0, #0
   2ace4:	bne	2ad24 <g_unichar_xdigit_value@plt+0x16ec0>
   2ace8:	ldr	r1, [pc, #240]	; 2ade0 <g_unichar_xdigit_value@plt+0x16f7c>
   2acec:	mov	r0, r4
   2acf0:	add	r1, pc, r1
   2acf4:	bl	13d50 <g_string_append@plt>
   2acf8:	b	2ac0c <g_unichar_xdigit_value@plt+0x16da8>
   2acfc:	ldr	r1, [pc, #224]	; 2ade4 <g_unichar_xdigit_value@plt+0x16f80>
   2ad00:	mov	r0, r4
   2ad04:	add	r1, pc, r1
   2ad08:	bl	13414 <g_string_assign@plt>
   2ad0c:	b	2abac <g_unichar_xdigit_value@plt+0x16d48>
   2ad10:	ldr	r1, [pc, #208]	; 2ade8 <g_unichar_xdigit_value@plt+0x16f84>
   2ad14:	mov	r0, r4
   2ad18:	add	r1, pc, r1
   2ad1c:	bl	13d50 <g_string_append@plt>
   2ad20:	b	2ac0c <g_unichar_xdigit_value@plt+0x16da8>
   2ad24:	ldr	r1, [pc, #192]	; 2adec <g_unichar_xdigit_value@plt+0x16f88>
   2ad28:	ldr	r0, [r8]
   2ad2c:	add	r1, pc, r1
   2ad30:	bl	13e58 <g_strcmp0@plt>
   2ad34:	cmp	r0, #0
   2ad38:	bne	2ad50 <g_unichar_xdigit_value@plt+0x16eec>
   2ad3c:	ldr	r1, [pc, #172]	; 2adf0 <g_unichar_xdigit_value@plt+0x16f8c>
   2ad40:	mov	r0, r4
   2ad44:	add	r1, pc, r1
   2ad48:	bl	13d50 <g_string_append@plt>
   2ad4c:	b	2ac0c <g_unichar_xdigit_value@plt+0x16da8>
   2ad50:	ldr	r1, [sp, #12]
   2ad54:	ldr	r0, [r8]
   2ad58:	bl	13e58 <g_strcmp0@plt>
   2ad5c:	cmp	r0, #0
   2ad60:	bne	2ad88 <g_unichar_xdigit_value@plt+0x16f24>
   2ad64:	ldr	r1, [pc, #136]	; 2adf4 <g_unichar_xdigit_value@plt+0x16f90>
   2ad68:	mov	r0, r4
   2ad6c:	add	r1, pc, r1
   2ad70:	bl	13d50 <g_string_append@plt>
   2ad74:	ldr	r1, [pc, #124]	; 2adf8 <g_unichar_xdigit_value@plt+0x16f94>
   2ad78:	mov	r0, r4
   2ad7c:	add	r1, pc, r1
   2ad80:	bl	13d50 <g_string_append@plt>
   2ad84:	b	2ac0c <g_unichar_xdigit_value@plt+0x16da8>
   2ad88:	mov	r1, sl
   2ad8c:	ldr	r0, [r8]
   2ad90:	bl	13e58 <g_strcmp0@plt>
   2ad94:	cmp	r0, #0
   2ad98:	beq	2ad74 <g_unichar_xdigit_value@plt+0x16f10>
   2ad9c:	mov	r0, r4
   2ada0:	ldr	r1, [r8]
   2ada4:	bl	13d50 <g_string_append@plt>
   2ada8:	b	2ad74 <g_unichar_xdigit_value@plt+0x16f10>
   2adac:	bl	13978 <__stack_chk_fail@plt>
   2adb0:	andeq	r6, r2, r4, lsr r5
   2adb4:	muleq	r0, r0, r3
   2adb8:	andeq	r2, r1, r4, asr #1
   2adbc:	andeq	r2, r1, r8, rrx
   2adc0:	andeq	r0, r1, ip, lsl r1
   2adc4:	muleq	r0, ip, r4
   2adc8:	strdeq	r0, [r1], -r8
   2adcc:	strdeq	sp, [r0], -r4
   2add0:	andeq	r0, r1, r4, lsr r5
   2add4:	andeq	r0, r1, r8, lsl r5
   2add8:	andeq	r0, r1, r8, lsl #10
   2addc:	strdeq	r0, [r1], -r4
   2ade0:	andeq	r0, r1, r0, ror #9
   2ade4:	andeq	lr, r0, r0, asr #8
   2ade8:	andeq	r0, r1, r8, lsl ip
   2adec:	andeq	r0, r1, r8, lsr #9
   2adf0:	muleq	r1, r8, r4
   2adf4:	andeq	r0, r1, ip, asr #8
   2adf8:			; <UNDEFINED> instruction: 0x00010bb4
   2adfc:	ldr	r3, [pc, #480]	; 2afe4 <g_unichar_xdigit_value@plt+0x17180>
   2ae00:	ldr	r2, [pc, #480]	; 2afe8 <g_unichar_xdigit_value@plt+0x17184>
   2ae04:	add	r3, pc, r3
   2ae08:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ae0c:	subs	r5, r0, #0
   2ae10:	ldr	r4, [r3, r2]
   2ae14:	sub	sp, sp, #12
   2ae18:	mov	r6, r1
   2ae1c:	ldr	r3, [r4]
   2ae20:	str	r3, [sp, #4]
   2ae24:	beq	2af08 <g_unichar_xdigit_value@plt+0x170a4>
   2ae28:	cmp	r1, #0
   2ae2c:	beq	2af28 <g_unichar_xdigit_value@plt+0x170c4>
   2ae30:	ldr	r3, [r5, #12]
   2ae34:	ldr	r2, [r3, #20]
   2ae38:	ldr	ip, [r3, #24]
   2ae3c:	cmp	r2, ip
   2ae40:	bne	2aebc <g_unichar_xdigit_value@plt+0x17058>
   2ae44:	ldr	r3, [r3, #8]
   2ae48:	cmp	r3, #2
   2ae4c:	beq	2aee8 <g_unichar_xdigit_value@plt+0x17084>
   2ae50:	cmp	r3, #3
   2ae54:	beq	2aeb4 <g_unichar_xdigit_value@plt+0x17050>
   2ae58:	cmp	r3, #1
   2ae5c:	beq	2aebc <g_unichar_xdigit_value@plt+0x17058>
   2ae60:	add	r7, sp, #8
   2ae64:	mov	r2, sp
   2ae68:	mov	r8, #0
   2ae6c:	str	r8, [r7, #-8]!
   2ae70:	bl	2a3c0 <g_unichar_xdigit_value@plt+0x1655c>
   2ae74:	mov	r9, r0
   2ae78:	mov	r0, r5
   2ae7c:	bl	2983c <g_unichar_xdigit_value@plt+0x159d8>
   2ae80:	cmp	r0, #8
   2ae84:	beq	2afbc <g_unichar_xdigit_value@plt+0x17158>
   2ae88:	cmp	r0, #16
   2ae8c:	beq	2af9c <g_unichar_xdigit_value@plt+0x17138>
   2ae90:	cmp	r0, #2
   2ae94:	beq	2af68 <g_unichar_xdigit_value@plt+0x17104>
   2ae98:	ldr	r3, [r5, #12]
   2ae9c:	ldr	r2, [sp]
   2aea0:	ldr	r3, [r3]
   2aea4:	cmp	r2, r3
   2aea8:	bgt	2afcc <g_unichar_xdigit_value@plt+0x17168>
   2aeac:	mov	r0, r9
   2aeb0:	b	2aed0 <g_unichar_xdigit_value@plt+0x1706c>
   2aeb4:	cmp	r2, #10
   2aeb8:	beq	2af4c <g_unichar_xdigit_value@plt+0x170e8>
   2aebc:	add	r2, sp, #8
   2aec0:	mov	r3, #0
   2aec4:	str	r3, [r2, #-8]!
   2aec8:	mov	r2, sp
   2aecc:	bl	2a3c0 <g_unichar_xdigit_value@plt+0x1655c>
   2aed0:	ldr	r2, [sp, #4]
   2aed4:	ldr	r3, [r4]
   2aed8:	cmp	r2, r3
   2aedc:	bne	2afe0 <g_unichar_xdigit_value@plt+0x1717c>
   2aee0:	add	sp, sp, #12
   2aee4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2aee8:	cmp	r2, #10
   2aeec:	bne	2aebc <g_unichar_xdigit_value@plt+0x17058>
   2aef0:	add	r3, sp, #8
   2aef4:	mov	r2, #0
   2aef8:	str	r2, [r3, #-8]!
   2aefc:	mov	r3, sp
   2af00:	bl	2aaac <g_unichar_xdigit_value@plt+0x16c48>
   2af04:	b	2aed0 <g_unichar_xdigit_value@plt+0x1706c>
   2af08:	ldr	r1, [pc, #220]	; 2afec <g_unichar_xdigit_value@plt+0x17188>
   2af0c:	ldr	r2, [pc, #220]	; 2aff0 <g_unichar_xdigit_value@plt+0x1718c>
   2af10:	add	r1, pc, r1
   2af14:	add	r2, pc, r2
   2af18:	add	r1, r1, #984	; 0x3d8
   2af1c:	bl	13450 <g_return_if_fail_warning@plt>
   2af20:	mov	r0, r5
   2af24:	b	2aed0 <g_unichar_xdigit_value@plt+0x1706c>
   2af28:	ldr	r1, [pc, #196]	; 2aff4 <g_unichar_xdigit_value@plt+0x17190>
   2af2c:	mov	r0, r6
   2af30:	ldr	r2, [pc, #192]	; 2aff8 <g_unichar_xdigit_value@plt+0x17194>
   2af34:	add	r1, pc, r1
   2af38:	add	r2, pc, r2
   2af3c:	add	r1, r1, #984	; 0x3d8
   2af40:	bl	13450 <g_return_if_fail_warning@plt>
   2af44:	mov	r0, r6
   2af48:	b	2aed0 <g_unichar_xdigit_value@plt+0x1706c>
   2af4c:	add	r3, sp, #8
   2af50:	mov	ip, #0
   2af54:	mov	r2, #1
   2af58:	str	ip, [r3, #-8]!
   2af5c:	mov	r3, sp
   2af60:	bl	2aaac <g_unichar_xdigit_value@plt+0x16c48>
   2af64:	b	2aed0 <g_unichar_xdigit_value@plt+0x1706c>
   2af68:	ldr	r3, [sp]
   2af6c:	cmp	r3, #64	; 0x40
   2af70:	ble	2aeac <g_unichar_xdigit_value@plt+0x17048>
   2af74:	mov	r0, r5
   2af78:	mov	r1, r6
   2af7c:	mov	r3, sp
   2af80:	mov	r2, r8
   2af84:	bl	2aaac <g_unichar_xdigit_value@plt+0x16c48>
   2af88:	mov	r5, r0
   2af8c:	mov	r0, r9
   2af90:	bl	1399c <g_free@plt>
   2af94:	mov	r0, r5
   2af98:	b	2aed0 <g_unichar_xdigit_value@plt+0x1706c>
   2af9c:	ldr	r3, [sp]
   2afa0:	cmp	r3, #16
   2afa4:	ble	2aeac <g_unichar_xdigit_value@plt+0x17048>
   2afa8:	mov	r0, r5
   2afac:	mov	r1, r6
   2afb0:	mov	r2, r8
   2afb4:	mov	r3, sp
   2afb8:	b	2af84 <g_unichar_xdigit_value@plt+0x17120>
   2afbc:	ldr	r3, [sp]
   2afc0:	cmp	r3, #22
   2afc4:	ble	2aeac <g_unichar_xdigit_value@plt+0x17048>
   2afc8:	b	2afa8 <g_unichar_xdigit_value@plt+0x17144>
   2afcc:	mov	r0, r5
   2afd0:	mov	r1, r6
   2afd4:	mov	r3, sp
   2afd8:	mov	r2, #0
   2afdc:	b	2af84 <g_unichar_xdigit_value@plt+0x17120>
   2afe0:	bl	13978 <__stack_chk_fail@plt>
   2afe4:	strdeq	r6, [r2], -r4
   2afe8:	muleq	r0, r0, r3
   2afec:	andeq	pc, r0, r0, asr lr	; <UNPREDICTABLE>
   2aff0:	ldrdeq	sp, [r0], -r0
   2aff4:	andeq	pc, r0, ip, lsr #28
   2aff8:	andeq	sp, r0, r8, lsr #10
   2affc:	ldr	r0, [pc, #108]	; 2b070 <g_unichar_xdigit_value@plt+0x1720c>
   2b000:	push	{r3, r4, r5, lr}
   2b004:	add	r0, pc, r0
   2b008:	dmb	sy
   2b00c:	ldr	r4, [r0, #16]
   2b010:	dmb	sy
   2b014:	cmp	r4, #0
   2b018:	beq	2b02c <g_unichar_xdigit_value@plt+0x171c8>
   2b01c:	ldr	r3, [pc, #80]	; 2b074 <g_unichar_xdigit_value@plt+0x17210>
   2b020:	add	r3, pc, r3
   2b024:	ldr	r0, [r3, #16]
   2b028:	pop	{r3, r4, r5, pc}
   2b02c:	add	r5, r0, #16
   2b030:	mov	r0, r5
   2b034:	bl	138ac <g_once_init_enter@plt>
   2b038:	cmp	r0, #0
   2b03c:	beq	2b01c <g_unichar_xdigit_value@plt+0x171b8>
   2b040:	ldr	r2, [pc, #48]	; 2b078 <g_unichar_xdigit_value@plt+0x17214>
   2b044:	mov	r3, r4
   2b048:	ldr	r1, [pc, #44]	; 2b07c <g_unichar_xdigit_value@plt+0x17218>
   2b04c:	mov	r0, #80	; 0x50
   2b050:	add	r2, pc, r2
   2b054:	add	r1, pc, r1
   2b058:	add	r2, r2, #100	; 0x64
   2b05c:	bl	13438 <g_type_register_static@plt>
   2b060:	mov	r1, r0
   2b064:	mov	r0, r5
   2b068:	bl	13bac <g_once_init_leave@plt>
   2b06c:	b	2b01c <g_unichar_xdigit_value@plt+0x171b8>
   2b070:	andeq	r6, r2, r8, lsl #11
   2b074:	andeq	r6, r2, ip, ror #10
   2b078:	andeq	r5, r2, r8, asr #20
   2b07c:	muleq	r1, r0, r1
   2b080:	push	{r4, r5, r6, lr}
   2b084:	mov	r5, r1
   2b088:	mov	r4, r2
   2b08c:	mov	r6, r0
   2b090:	bl	2affc <g_unichar_xdigit_value@plt+0x17198>
   2b094:	mov	r1, r6
   2b098:	mov	r2, r5
   2b09c:	mov	r3, r4
   2b0a0:	pop	{r4, r5, r6, lr}
   2b0a4:	b	2961c <g_unichar_xdigit_value@plt+0x157b8>
   2b0a8:	push	{r4, lr}
   2b0ac:	mov	r4, r0
   2b0b0:	bl	2affc <g_unichar_xdigit_value@plt+0x17198>
   2b0b4:	mov	r1, r0
   2b0b8:	mov	r0, r4
   2b0bc:	bl	13870 <g_type_instance_get_private@plt>
   2b0c0:	mov	r3, #0
   2b0c4:	str	r0, [r4, #12]
   2b0c8:	str	r3, [r0, #40]	; 0x28
   2b0cc:	pop	{r4, pc}
   2b0d0:	push	{r3, r4, r5, lr}
   2b0d4:	mov	r4, r0
   2b0d8:	bl	2affc <g_unichar_xdigit_value@plt+0x17198>
   2b0dc:	mov	r1, r0
   2b0e0:	mov	r0, r4
   2b0e4:	bl	13510 <g_type_check_instance_cast@plt>
   2b0e8:	ldr	r3, [r0, #12]
   2b0ec:	mov	r5, r0
   2b0f0:	ldr	r0, [r3, #40]	; 0x28
   2b0f4:	bl	1399c <g_free@plt>
   2b0f8:	ldr	r3, [pc, #40]	; 2b128 <g_unichar_xdigit_value@plt+0x172c4>
   2b0fc:	ldr	r2, [r5, #12]
   2b100:	mov	r0, #0
   2b104:	add	r3, pc, r3
   2b108:	mov	r1, #80	; 0x50
   2b10c:	str	r0, [r2, #40]	; 0x28
   2b110:	ldr	r0, [r3]
   2b114:	bl	13db0 <g_type_check_class_cast@plt>
   2b118:	ldr	r3, [r0, #24]
   2b11c:	mov	r0, r4
   2b120:	blx	r3
   2b124:	pop	{r3, r4, r5, pc}
   2b128:	andeq	r6, r2, r8, lsl #9
   2b12c:	push	{r4, r5, r6, r7, r8, lr}
   2b130:	sub	sp, sp, #24
   2b134:	mov	r4, r1
   2b138:	mov	r5, r0
   2b13c:	mov	r7, r2
   2b140:	mov	r6, r3
   2b144:	bl	2affc <g_unichar_xdigit_value@plt+0x17198>
   2b148:	mov	r1, r0
   2b14c:	mov	r0, r5
   2b150:	bl	13510 <g_type_check_instance_cast@plt>
   2b154:	cmp	r4, #1
   2b158:	mov	r8, r0
   2b15c:	beq	2b1c0 <g_unichar_xdigit_value@plt+0x1735c>
   2b160:	ldm	r6, {r3, r7}
   2b164:	ldr	r0, [r3]
   2b168:	bl	13564 <g_type_name@plt>
   2b16c:	ldr	r3, [r5]
   2b170:	mov	r6, r0
   2b174:	ldr	r0, [r3]
   2b178:	bl	13564 <g_type_name@plt>
   2b17c:	ldr	r2, [pc, #88]	; 2b1dc <g_unichar_xdigit_value@plt+0x17378>
   2b180:	movw	r3, #1763	; 0x6e3
   2b184:	str	r3, [sp]
   2b188:	add	r2, pc, r2
   2b18c:	ldr	r3, [pc, #76]	; 2b1e0 <g_unichar_xdigit_value@plt+0x1737c>
   2b190:	stmib	sp, {r2, r4}
   2b194:	mov	r1, #16
   2b198:	ldr	r2, [pc, #68]	; 2b1e4 <g_unichar_xdigit_value@plt+0x17380>
   2b19c:	add	r3, pc, r3
   2b1a0:	str	r7, [sp, #12]
   2b1a4:	str	r6, [sp, #16]
   2b1a8:	add	r2, pc, r2
   2b1ac:	str	r0, [sp, #20]
   2b1b0:	mov	r0, #0
   2b1b4:	bl	13558 <g_log@plt>
   2b1b8:	add	sp, sp, #24
   2b1bc:	pop	{r4, r5, r6, r7, r8, pc}
   2b1c0:	mov	r0, r7
   2b1c4:	bl	13468 <g_value_get_string@plt>
   2b1c8:	mov	r1, r0
   2b1cc:	mov	r0, r8
   2b1d0:	add	sp, sp, #24
   2b1d4:	pop	{r4, r5, r6, r7, r8, lr}
   2b1d8:	b	29cd0 <g_unichar_xdigit_value@plt+0x15e6c>
   2b1dc:	andeq	pc, r0, r4
   2b1e0:	andeq	r0, r1, r4, asr r0
   2b1e4:	andeq	lr, r0, r8, lsl #31
   2b1e8:	push	{r4, r5, r6, r7, lr}
   2b1ec:	sub	sp, sp, #28
   2b1f0:	mov	r4, r1
   2b1f4:	mov	r5, r0
   2b1f8:	mov	r7, r2
   2b1fc:	mov	r6, r3
   2b200:	bl	2affc <g_unichar_xdigit_value@plt+0x17198>
   2b204:	mov	r1, r0
   2b208:	mov	r0, r5
   2b20c:	bl	13510 <g_type_check_instance_cast@plt>
   2b210:	cmp	r4, #1
   2b214:	beq	2b278 <g_unichar_xdigit_value@plt+0x17414>
   2b218:	ldm	r6, {r3, r7}
   2b21c:	ldr	r0, [r3]
   2b220:	bl	13564 <g_type_name@plt>
   2b224:	ldr	r3, [r5]
   2b228:	mov	r6, r0
   2b22c:	ldr	r0, [r3]
   2b230:	bl	13564 <g_type_name@plt>
   2b234:	ldr	r2, [pc, #84]	; 2b290 <g_unichar_xdigit_value@plt+0x1742c>
   2b238:	mov	r3, #1744	; 0x6d0
   2b23c:	str	r3, [sp]
   2b240:	add	r2, pc, r2
   2b244:	ldr	r3, [pc, #72]	; 2b294 <g_unichar_xdigit_value@plt+0x17430>
   2b248:	stmib	sp, {r2, r4}
   2b24c:	mov	r1, #16
   2b250:	ldr	r2, [pc, #64]	; 2b298 <g_unichar_xdigit_value@plt+0x17434>
   2b254:	add	r3, pc, r3
   2b258:	str	r7, [sp, #12]
   2b25c:	str	r6, [sp, #16]
   2b260:	add	r2, pc, r2
   2b264:	str	r0, [sp, #20]
   2b268:	mov	r0, #0
   2b26c:	bl	13558 <g_log@plt>
   2b270:	add	sp, sp, #28
   2b274:	pop	{r4, r5, r6, r7, pc}
   2b278:	bl	29c90 <g_unichar_xdigit_value@plt+0x15e2c>
   2b27c:	mov	r1, r0
   2b280:	mov	r0, r7
   2b284:	add	sp, sp, #28
   2b288:	pop	{r4, r5, r6, r7, lr}
   2b28c:	b	13834 <g_value_set_string@plt>
   2b290:	andeq	lr, r0, ip, asr #30
   2b294:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   2b298:	ldrdeq	lr, [r0], -r0
   2b29c:	cmp	r0, #0
   2b2a0:	bxeq	lr
   2b2a4:	b	13b94 <g_object_unref@plt>
   2b2a8:	b	1399c <g_free@plt>
   2b2ac:	push	{r4, r5, r6, lr}
   2b2b0:	subs	r5, r0, #0
   2b2b4:	mov	r4, r1
   2b2b8:	beq	2b300 <g_unichar_xdigit_value@plt+0x1749c>
   2b2bc:	cmp	r1, #0
   2b2c0:	beq	2b31c <g_unichar_xdigit_value@plt+0x174b8>
   2b2c4:	bl	3234c <g_unichar_xdigit_value@plt+0x1e4e8>
   2b2c8:	mov	r5, r0
   2b2cc:	mov	r0, r4
   2b2d0:	bl	3234c <g_unichar_xdigit_value@plt+0x1e4e8>
   2b2d4:	mov	r4, r0
   2b2d8:	mov	r0, r5
   2b2dc:	mov	r1, r4
   2b2e0:	bl	13918 <g_utf8_collate@plt>
   2b2e4:	mov	r6, r0
   2b2e8:	mov	r0, r4
   2b2ec:	bl	1399c <g_free@plt>
   2b2f0:	mov	r0, r5
   2b2f4:	bl	1399c <g_free@plt>
   2b2f8:	mov	r0, r6
   2b2fc:	pop	{r4, r5, r6, pc}
   2b300:	ldr	r1, [pc, #52]	; 2b33c <g_unichar_xdigit_value@plt+0x174d8>
   2b304:	ldr	r2, [pc, #52]	; 2b340 <g_unichar_xdigit_value@plt+0x174dc>
   2b308:	add	r1, pc, r1
   2b30c:	add	r2, pc, r2
   2b310:	bl	13450 <g_return_if_fail_warning@plt>
   2b314:	mov	r0, r5
   2b318:	pop	{r4, r5, r6, pc}
   2b31c:	mov	r0, r1
   2b320:	ldr	r2, [pc, #28]	; 2b344 <g_unichar_xdigit_value@plt+0x174e0>
   2b324:	ldr	r1, [pc, #28]	; 2b348 <g_unichar_xdigit_value@plt+0x174e4>
   2b328:	add	r2, pc, r2
   2b32c:	add	r1, pc, r1
   2b330:	bl	13450 <g_return_if_fail_warning@plt>
   2b334:	mov	r0, r4
   2b338:	pop	{r4, r5, r6, pc}
   2b33c:	andeq	pc, r0, r0, asr #31
   2b340:	muleq	r0, r4, r7
   2b344:	andeq	r0, r1, r8, ror r2
   2b348:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   2b34c:	push	{r4, lr}
   2b350:	mov	r4, r0
   2b354:	bl	13c60 <g_type_class_peek_parent@plt>
   2b358:	ldr	r3, [pc, #44]	; 2b38c <g_unichar_xdigit_value@plt+0x17528>
   2b35c:	mov	r1, #4
   2b360:	add	r3, pc, r3
   2b364:	str	r0, [r3]
   2b368:	mov	r0, r4
   2b36c:	bl	13a5c <g_type_class_add_private@plt>
   2b370:	mov	r0, r4
   2b374:	mov	r1, #80	; 0x50
   2b378:	bl	13db0 <g_type_check_class_cast@plt>
   2b37c:	ldr	r3, [pc, #12]	; 2b390 <g_unichar_xdigit_value@plt+0x1752c>
   2b380:	add	r3, pc, r3
   2b384:	str	r3, [r0, #24]
   2b388:	pop	{r4, pc}
   2b38c:	andeq	r6, r2, r0, asr #4
   2b390:			; <UNDEFINED> instruction: 0x000004b0
   2b394:	push	{r4, lr}
   2b398:	mov	r4, r0
   2b39c:	bl	13c60 <g_type_class_peek_parent@plt>
   2b3a0:	ldr	r3, [pc, #68]	; 2b3ec <g_unichar_xdigit_value@plt+0x17588>
   2b3a4:	mov	r1, #4
   2b3a8:	add	r3, pc, r3
   2b3ac:	str	r0, [r3, #4]
   2b3b0:	mov	r0, r4
   2b3b4:	bl	13a5c <g_type_class_add_private@plt>
   2b3b8:	ldr	r2, [pc, #48]	; 2b3f0 <g_unichar_xdigit_value@plt+0x1758c>
   2b3bc:	ldr	r3, [pc, #48]	; 2b3f4 <g_unichar_xdigit_value@plt+0x17590>
   2b3c0:	mov	r0, r4
   2b3c4:	add	r2, pc, r2
   2b3c8:	mov	r1, #80	; 0x50
   2b3cc:	add	r3, pc, r3
   2b3d0:	str	r2, [r4, #68]	; 0x44
   2b3d4:	str	r3, [r4, #72]	; 0x48
   2b3d8:	bl	13db0 <g_type_check_class_cast@plt>
   2b3dc:	ldr	r3, [pc, #20]	; 2b3f8 <g_unichar_xdigit_value@plt+0x17594>
   2b3e0:	add	r3, pc, r3
   2b3e4:	str	r3, [r0, #24]
   2b3e8:	pop	{r4, pc}
   2b3ec:	strdeq	r6, [r2], -r8
   2b3f0:	andeq	r0, r0, r0, lsr r2
   2b3f4:	andeq	r0, r0, r8, ror #4
   2b3f8:	ldrdeq	r6, [r0], -r4
   2b3fc:	push	{r4, r5, r6, r7, lr}
   2b400:	sub	sp, sp, #12
   2b404:	mov	r4, r0
   2b408:	bl	13c60 <g_type_class_peek_parent@plt>
   2b40c:	ldr	r5, [pc, #212]	; 2b4e8 <g_unichar_xdigit_value@plt+0x17684>
   2b410:	mov	r1, #12
   2b414:	mov	r6, #225	; 0xe1
   2b418:	add	r5, pc, r5
   2b41c:	str	r0, [r5, #8]
   2b420:	mov	r0, r4
   2b424:	bl	13a5c <g_type_class_add_private@plt>
   2b428:	mov	r0, r4
   2b42c:	mov	r1, #80	; 0x50
   2b430:	bl	13db0 <g_type_check_class_cast@plt>
   2b434:	ldr	r3, [pc, #176]	; 2b4ec <g_unichar_xdigit_value@plt+0x17688>
   2b438:	mov	r1, #80	; 0x50
   2b43c:	add	r3, pc, r3
   2b440:	str	r3, [r0, #16]
   2b444:	mov	r0, r4
   2b448:	bl	13db0 <g_type_check_class_cast@plt>
   2b44c:	ldr	r3, [pc, #156]	; 2b4f0 <g_unichar_xdigit_value@plt+0x1768c>
   2b450:	mov	r1, #80	; 0x50
   2b454:	add	r3, pc, r3
   2b458:	str	r3, [r0, #24]
   2b45c:	mov	r0, r4
   2b460:	bl	13db0 <g_type_check_class_cast@plt>
   2b464:	mov	r3, #0
   2b468:	str	r6, [sp]
   2b46c:	mov	r7, r0
   2b470:	ldr	r0, [pc, #124]	; 2b4f4 <g_unichar_xdigit_value@plt+0x17690>
   2b474:	add	r0, pc, r0
   2b478:	mov	r1, r0
   2b47c:	mov	r2, r0
   2b480:	bl	134d4 <g_param_spec_string@plt>
   2b484:	mov	r1, #1
   2b488:	mov	r3, r0
   2b48c:	mov	r2, r0
   2b490:	mov	r0, r7
   2b494:	str	r3, [r5, #16]
   2b498:	bl	13a2c <g_object_class_install_property@plt>
   2b49c:	mov	r0, r4
   2b4a0:	mov	r1, #80	; 0x50
   2b4a4:	bl	13db0 <g_type_check_class_cast@plt>
   2b4a8:	mov	r3, #0
   2b4ac:	str	r6, [sp]
   2b4b0:	mov	r4, r0
   2b4b4:	ldr	r0, [pc, #60]	; 2b4f8 <g_unichar_xdigit_value@plt+0x17694>
   2b4b8:	add	r0, pc, r0
   2b4bc:	mov	r1, r0
   2b4c0:	mov	r2, r0
   2b4c4:	bl	134d4 <g_param_spec_string@plt>
   2b4c8:	mov	r1, #2
   2b4cc:	mov	r3, r0
   2b4d0:	mov	r2, r0
   2b4d4:	str	r3, [r5, #20]
   2b4d8:	mov	r0, r4
   2b4dc:	add	sp, sp, #12
   2b4e0:	pop	{r4, r5, r6, r7, lr}
   2b4e4:	b	13a2c <g_object_class_install_property@plt>
   2b4e8:	andeq	r6, r2, r8, lsl #3
   2b4ec:	andeq	r0, r0, ip, ror #19
   2b4f0:	andeq	r0, r0, r0, asr #18
   2b4f4:	andeq	r0, r1, r0, asr #2
   2b4f8:	strdeq	r0, [r1], -r4
   2b4fc:	push	{r4, r5, r6, r7, lr}
   2b500:	sub	sp, sp, #12
   2b504:	mov	r4, r0
   2b508:	bl	13c60 <g_type_class_peek_parent@plt>
   2b50c:	ldr	r5, [pc, #212]	; 2b5e8 <g_unichar_xdigit_value@plt+0x17784>
   2b510:	mov	r1, #28
   2b514:	mov	r6, #225	; 0xe1
   2b518:	add	r5, pc, r5
   2b51c:	str	r0, [r5, #24]
   2b520:	mov	r0, r4
   2b524:	bl	13a5c <g_type_class_add_private@plt>
   2b528:	mov	r0, r4
   2b52c:	mov	r1, #80	; 0x50
   2b530:	bl	13db0 <g_type_check_class_cast@plt>
   2b534:	ldr	r3, [pc, #176]	; 2b5ec <g_unichar_xdigit_value@plt+0x17788>
   2b538:	mov	r1, #80	; 0x50
   2b53c:	add	r3, pc, r3
   2b540:	str	r3, [r0, #16]
   2b544:	mov	r0, r4
   2b548:	bl	13db0 <g_type_check_class_cast@plt>
   2b54c:	ldr	r3, [pc, #156]	; 2b5f0 <g_unichar_xdigit_value@plt+0x1778c>
   2b550:	mov	r1, #80	; 0x50
   2b554:	add	r3, pc, r3
   2b558:	str	r3, [r0, #24]
   2b55c:	mov	r0, r4
   2b560:	bl	13db0 <g_type_check_class_cast@plt>
   2b564:	mov	r3, #0
   2b568:	str	r6, [sp]
   2b56c:	mov	r7, r0
   2b570:	ldr	r0, [pc, #124]	; 2b5f4 <g_unichar_xdigit_value@plt+0x17790>
   2b574:	add	r0, pc, r0
   2b578:	mov	r1, r0
   2b57c:	mov	r2, r0
   2b580:	bl	134d4 <g_param_spec_string@plt>
   2b584:	mov	r1, #1
   2b588:	mov	r3, r0
   2b58c:	mov	r2, r0
   2b590:	mov	r0, r7
   2b594:	str	r3, [r5, #32]
   2b598:	bl	13a2c <g_object_class_install_property@plt>
   2b59c:	mov	r0, r4
   2b5a0:	mov	r1, #80	; 0x50
   2b5a4:	bl	13db0 <g_type_check_class_cast@plt>
   2b5a8:	mov	r3, #0
   2b5ac:	str	r6, [sp]
   2b5b0:	mov	r4, r0
   2b5b4:	ldr	r0, [pc, #60]	; 2b5f8 <g_unichar_xdigit_value@plt+0x17794>
   2b5b8:	add	r0, pc, r0
   2b5bc:	mov	r1, r0
   2b5c0:	mov	r2, r0
   2b5c4:	bl	134d4 <g_param_spec_string@plt>
   2b5c8:	mov	r1, #2
   2b5cc:	mov	r3, r0
   2b5d0:	mov	r2, r0
   2b5d4:	str	r3, [r5, #36]	; 0x24
   2b5d8:	mov	r0, r4
   2b5dc:	add	sp, sp, #12
   2b5e0:	pop	{r4, r5, r6, r7, lr}
   2b5e4:	b	13a2c <g_object_class_install_property@plt>
   2b5e8:	andeq	r6, r2, r8, lsl #1
   2b5ec:	andeq	r5, r0, ip, lsr #20
   2b5f0:	andeq	r5, r0, r8, lsr r9
   2b5f4:	andeq	r0, r1, r0, asr #32
   2b5f8:	strdeq	pc, [r0], -r4
   2b5fc:	push	{r4, lr}
   2b600:	subs	r4, r1, #0
   2b604:	beq	2b610 <g_unichar_xdigit_value@plt+0x177ac>
   2b608:	mov	r0, #1
   2b60c:	pop	{r4, pc}
   2b610:	ldr	r1, [pc, #28]	; 2b634 <g_unichar_xdigit_value@plt+0x177d0>
   2b614:	mov	r0, r4
   2b618:	ldr	r2, [pc, #24]	; 2b638 <g_unichar_xdigit_value@plt+0x177d4>
   2b61c:	add	r1, pc, r1
   2b620:	add	r2, pc, r2
   2b624:	add	r1, r1, #12
   2b628:	bl	13450 <g_return_if_fail_warning@plt>
   2b62c:	mov	r0, r4
   2b630:	pop	{r4, pc}
   2b634:	andeq	pc, r0, ip, lsr #25
   2b638:			; <UNDEFINED> instruction: 0x0000ffb0
   2b63c:	cmp	r1, #0
   2b640:	push	{r3, lr}
   2b644:	beq	2b660 <g_unichar_xdigit_value@plt+0x177fc>
   2b648:	ldr	r3, [r0, #28]
   2b64c:	ldr	r0, [r3]
   2b650:	cmp	r0, #0
   2b654:	beq	2b67c <g_unichar_xdigit_value@plt+0x17818>
   2b658:	pop	{r3, lr}
   2b65c:	b	133f0 <g_object_ref@plt>
   2b660:	ldr	r3, [pc, #28]	; 2b684 <g_unichar_xdigit_value@plt+0x17820>
   2b664:	mov	r0, r1
   2b668:	ldr	r2, [pc, #24]	; 2b688 <g_unichar_xdigit_value@plt+0x17824>
   2b66c:	add	r3, pc, r3
   2b670:	add	r2, pc, r2
   2b674:	add	r1, r3, #60	; 0x3c
   2b678:	bl	13450 <g_return_if_fail_warning@plt>
   2b67c:	mov	r0, #0
   2b680:	pop	{r3, pc}
   2b684:	andeq	pc, r0, ip, asr ip	; <UNPREDICTABLE>
   2b688:	andeq	pc, r0, r0, ror #30
   2b68c:	push	{r4, lr}
   2b690:	mov	r1, #0
   2b694:	bl	133e4 <g_object_new@plt>
   2b698:	ldr	r3, [r0, #12]
   2b69c:	mov	r4, r0
   2b6a0:	ldr	r0, [r3]
   2b6a4:	cmp	r0, #0
   2b6a8:	beq	2b6c4 <g_unichar_xdigit_value@plt+0x17860>
   2b6ac:	ldr	r1, [pc, #32]	; 2b6d4 <g_unichar_xdigit_value@plt+0x17870>
   2b6b0:	add	r1, pc, r1
   2b6b4:	bl	1396c <g_list_free_full@plt>
   2b6b8:	ldr	r3, [r4, #12]
   2b6bc:	mov	r2, #0
   2b6c0:	str	r2, [r3]
   2b6c4:	mov	r2, #0
   2b6c8:	mov	r0, r4
   2b6cc:	str	r2, [r3]
   2b6d0:	pop	{r4, pc}
   2b6d4:			; <UNDEFINED> instruction: 0xfffffbe4
   2b6d8:	push	{r4, r5, r6, lr}
   2b6dc:	subs	r4, r0, #0
   2b6e0:	beq	2b760 <g_unichar_xdigit_value@plt+0x178fc>
   2b6e4:	ldr	r3, [r4, #12]
   2b6e8:	ldr	r4, [r3]
   2b6ec:	cmp	r4, #0
   2b6f0:	beq	2b778 <g_unichar_xdigit_value@plt+0x17914>
   2b6f4:	mov	r5, #0
   2b6f8:	b	2b730 <g_unichar_xdigit_value@plt+0x178cc>
   2b6fc:	bl	133f0 <g_object_ref@plt>
   2b700:	subs	r6, r0, #0
   2b704:	beq	2b73c <g_unichar_xdigit_value@plt+0x178d8>
   2b708:	bl	133f0 <g_object_ref@plt>
   2b70c:	mov	r1, r0
   2b710:	mov	r0, r5
   2b714:	bl	13594 <g_list_append@plt>
   2b718:	mov	r5, r0
   2b71c:	mov	r0, r6
   2b720:	bl	13b94 <g_object_unref@plt>
   2b724:	ldr	r4, [r4, #4]
   2b728:	cmp	r4, #0
   2b72c:	beq	2b758 <g_unichar_xdigit_value@plt+0x178f4>
   2b730:	ldr	r0, [r4]
   2b734:	cmp	r0, #0
   2b738:	bne	2b6fc <g_unichar_xdigit_value@plt+0x17898>
   2b73c:	mov	r0, r5
   2b740:	mov	r1, #0
   2b744:	bl	13594 <g_list_append@plt>
   2b748:	ldr	r4, [r4, #4]
   2b74c:	cmp	r4, #0
   2b750:	mov	r5, r0
   2b754:	bne	2b730 <g_unichar_xdigit_value@plt+0x178cc>
   2b758:	mov	r0, r5
   2b75c:	pop	{r4, r5, r6, pc}
   2b760:	ldr	r1, [pc, #24]	; 2b780 <g_unichar_xdigit_value@plt+0x1791c>
   2b764:	ldr	r2, [pc, #24]	; 2b784 <g_unichar_xdigit_value@plt+0x17920>
   2b768:	add	r1, pc, r1
   2b76c:	add	r2, pc, r2
   2b770:	add	r1, r1, #100	; 0x64
   2b774:	bl	13450 <g_return_if_fail_warning@plt>
   2b778:	mov	r0, r4
   2b77c:	pop	{r4, r5, r6, pc}
   2b780:	andeq	pc, r0, r0, ror #22
   2b784:	andeq	ip, r0, r8, ror r9
   2b788:	ldr	r0, [pc, #104]	; 2b7f8 <g_unichar_xdigit_value@plt+0x17994>
   2b78c:	push	{r3, r4, r5, lr}
   2b790:	add	r0, pc, r0
   2b794:	dmb	sy
   2b798:	ldr	r4, [r0, #40]	; 0x28
   2b79c:	dmb	sy
   2b7a0:	cmp	r4, #0
   2b7a4:	beq	2b7b8 <g_unichar_xdigit_value@plt+0x17954>
   2b7a8:	ldr	r3, [pc, #76]	; 2b7fc <g_unichar_xdigit_value@plt+0x17998>
   2b7ac:	add	r3, pc, r3
   2b7b0:	ldr	r0, [r3, #40]	; 0x28
   2b7b4:	pop	{r3, r4, r5, pc}
   2b7b8:	add	r5, r0, #40	; 0x28
   2b7bc:	mov	r0, r5
   2b7c0:	bl	138ac <g_once_init_enter@plt>
   2b7c4:	cmp	r0, #0
   2b7c8:	beq	2b7a8 <g_unichar_xdigit_value@plt+0x17944>
   2b7cc:	ldr	r1, [pc, #44]	; 2b800 <g_unichar_xdigit_value@plt+0x1799c>
   2b7d0:	mov	r3, r4
   2b7d4:	ldr	r2, [pc, #40]	; 2b804 <g_unichar_xdigit_value@plt+0x179a0>
   2b7d8:	mov	r0, #80	; 0x50
   2b7dc:	add	r1, pc, r1
   2b7e0:	add	r2, pc, r2
   2b7e4:	bl	13438 <g_type_register_static@plt>
   2b7e8:	mov	r1, r0
   2b7ec:	mov	r0, r5
   2b7f0:	bl	13bac <g_once_init_leave@plt>
   2b7f4:	b	2b7a8 <g_unichar_xdigit_value@plt+0x17944>
   2b7f8:	andeq	r5, r2, r0, lsl lr
   2b7fc:	strdeq	r5, [r2], -r4
   2b800:	andeq	pc, r0, r0, ror #27
   2b804:	andeq	r5, r2, r0, asr #6
   2b808:	push	{r3, lr}
   2b80c:	bl	2b788 <g_unichar_xdigit_value@plt+0x17924>
   2b810:	pop	{r3, lr}
   2b814:	b	2b68c <g_unichar_xdigit_value@plt+0x17828>
   2b818:	push	{r4, lr}
   2b81c:	mov	r4, r0
   2b820:	bl	2b788 <g_unichar_xdigit_value@plt+0x17924>
   2b824:	mov	r1, r0
   2b828:	mov	r0, r4
   2b82c:	bl	13870 <g_type_instance_get_private@plt>
   2b830:	str	r0, [r4, #12]
   2b834:	pop	{r4, pc}
   2b838:	push	{r3, r4, r5, lr}
   2b83c:	mov	r4, r0
   2b840:	bl	2b788 <g_unichar_xdigit_value@plt+0x17924>
   2b844:	mov	r1, r0
   2b848:	mov	r0, r4
   2b84c:	bl	13510 <g_type_check_instance_cast@plt>
   2b850:	ldr	r3, [r0, #12]
   2b854:	mov	r5, r0
   2b858:	ldr	r0, [r3]
   2b85c:	cmp	r0, #0
   2b860:	beq	2b87c <g_unichar_xdigit_value@plt+0x17a18>
   2b864:	ldr	r1, [pc, #52]	; 2b8a0 <g_unichar_xdigit_value@plt+0x17a3c>
   2b868:	add	r1, pc, r1
   2b86c:	bl	1396c <g_list_free_full@plt>
   2b870:	ldr	r3, [r5, #12]
   2b874:	mov	r2, #0
   2b878:	str	r2, [r3]
   2b87c:	ldr	r3, [pc, #32]	; 2b8a4 <g_unichar_xdigit_value@plt+0x17a40>
   2b880:	mov	r1, #80	; 0x50
   2b884:	add	r3, pc, r3
   2b888:	ldr	r0, [r3]
   2b88c:	bl	13db0 <g_type_check_class_cast@plt>
   2b890:	ldr	r3, [r0, #24]
   2b894:	mov	r0, r4
   2b898:	blx	r3
   2b89c:	pop	{r3, r4, r5, pc}
   2b8a0:			; <UNDEFINED> instruction: 0xfffffa2c
   2b8a4:	andeq	r5, r2, ip, lsl sp
   2b8a8:	push	{r4, r5, r6, lr}
   2b8ac:	subs	r6, r1, #0
   2b8b0:	mov	r5, r2
   2b8b4:	beq	2b940 <g_unichar_xdigit_value@plt+0x17adc>
   2b8b8:	cmp	r2, #0
   2b8bc:	beq	2b964 <g_unichar_xdigit_value@plt+0x17b00>
   2b8c0:	mov	r1, #0
   2b8c4:	bl	133e4 <g_object_new@plt>
   2b8c8:	mov	r4, r0
   2b8cc:	mov	r0, r6
   2b8d0:	bl	136f0 <g_strdup@plt>
   2b8d4:	ldr	r3, [r4, #12]
   2b8d8:	mov	r6, r0
   2b8dc:	ldr	r0, [r3, #4]
   2b8e0:	bl	1399c <g_free@plt>
   2b8e4:	ldr	r3, [r4, #12]
   2b8e8:	mov	r0, r5
   2b8ec:	str	r6, [r3, #4]
   2b8f0:	bl	136f0 <g_strdup@plt>
   2b8f4:	ldr	r3, [r4, #12]
   2b8f8:	mov	r5, r0
   2b8fc:	ldr	r0, [r3, #8]
   2b900:	bl	1399c <g_free@plt>
   2b904:	ldr	r3, [r4, #12]
   2b908:	ldr	r0, [r3]
   2b90c:	str	r5, [r3, #8]
   2b910:	cmp	r0, #0
   2b914:	beq	2b930 <g_unichar_xdigit_value@plt+0x17acc>
   2b918:	ldr	r1, [pc, #104]	; 2b988 <g_unichar_xdigit_value@plt+0x17b24>
   2b91c:	add	r1, pc, r1
   2b920:	bl	1396c <g_list_free_full@plt>
   2b924:	ldr	r3, [r4, #12]
   2b928:	mov	r2, #0
   2b92c:	str	r2, [r3]
   2b930:	mov	r2, #0
   2b934:	mov	r0, r4
   2b938:	str	r2, [r3]
   2b93c:	pop	{r4, r5, r6, pc}
   2b940:	ldr	r1, [pc, #68]	; 2b98c <g_unichar_xdigit_value@plt+0x17b28>
   2b944:	mov	r0, r6
   2b948:	ldr	r2, [pc, #64]	; 2b990 <g_unichar_xdigit_value@plt+0x17b2c>
   2b94c:	add	r1, pc, r1
   2b950:	add	r2, pc, r2
   2b954:	add	r1, r1, #128	; 0x80
   2b958:	bl	13450 <g_return_if_fail_warning@plt>
   2b95c:	mov	r0, r6
   2b960:	pop	{r4, r5, r6, pc}
   2b964:	ldr	r1, [pc, #40]	; 2b994 <g_unichar_xdigit_value@plt+0x17b30>
   2b968:	mov	r0, r2
   2b96c:	ldr	r2, [pc, #36]	; 2b998 <g_unichar_xdigit_value@plt+0x17b34>
   2b970:	add	r1, pc, r1
   2b974:	add	r2, pc, r2
   2b978:	add	r1, r1, #128	; 0x80
   2b97c:	bl	13450 <g_return_if_fail_warning@plt>
   2b980:	mov	r0, r5
   2b984:	pop	{r4, r5, r6, pc}
   2b988:			; <UNDEFINED> instruction: 0xfffff978
   2b98c:	andeq	pc, r0, ip, ror r9	; <UNPREDICTABLE>
   2b990:	andeq	pc, r0, r0, lsl #25
   2b994:	andeq	pc, r0, r8, asr r9	; <UNPREDICTABLE>
   2b998:	andeq	pc, r0, r4, asr ip	; <UNPREDICTABLE>
   2b99c:	push	{r4, lr}
   2b9a0:	subs	r4, r0, #0
   2b9a4:	beq	2b9d0 <g_unichar_xdigit_value@plt+0x17b6c>
   2b9a8:	cmp	r1, #0
   2b9ac:	beq	2b9ec <g_unichar_xdigit_value@plt+0x17b88>
   2b9b0:	mov	r0, r1
   2b9b4:	bl	133f0 <g_object_ref@plt>
   2b9b8:	ldr	r4, [r4, #12]
   2b9bc:	mov	r1, r0
   2b9c0:	ldr	r0, [r4]
   2b9c4:	bl	13594 <g_list_append@plt>
   2b9c8:	str	r0, [r4]
   2b9cc:	pop	{r4, pc}
   2b9d0:	ldr	r1, [pc, #52]	; 2ba0c <g_unichar_xdigit_value@plt+0x17ba8>
   2b9d4:	ldr	r2, [pc, #52]	; 2ba10 <g_unichar_xdigit_value@plt+0x17bac>
   2b9d8:	add	r1, pc, r1
   2b9dc:	add	r2, pc, r2
   2b9e0:	add	r1, r1, #152	; 0x98
   2b9e4:	pop	{r4, lr}
   2b9e8:	b	13450 <g_return_if_fail_warning@plt>
   2b9ec:	ldr	r3, [pc, #32]	; 2ba14 <g_unichar_xdigit_value@plt+0x17bb0>
   2b9f0:	mov	r0, r1
   2b9f4:	ldr	r2, [pc, #28]	; 2ba18 <g_unichar_xdigit_value@plt+0x17bb4>
   2b9f8:	add	r3, pc, r3
   2b9fc:	add	r2, pc, r2
   2ba00:	add	r1, r3, #152	; 0x98
   2ba04:	pop	{r4, lr}
   2ba08:	b	13450 <g_return_if_fail_warning@plt>
   2ba0c:	strdeq	pc, [r0], -r0
   2ba10:	andeq	ip, r0, r8, lsl #14
   2ba14:	ldrdeq	pc, [r0], -r0
   2ba18:	andeq	pc, r0, r4, ror #23
   2ba1c:	push	{r4, lr}
   2ba20:	subs	r4, r0, #0
   2ba24:	beq	2ba34 <g_unichar_xdigit_value@plt+0x17bd0>
   2ba28:	ldr	r3, [r4, #12]
   2ba2c:	ldr	r0, [r3]
   2ba30:	pop	{r4, pc}
   2ba34:	ldr	r1, [pc, #24]	; 2ba54 <g_unichar_xdigit_value@plt+0x17bf0>
   2ba38:	ldr	r2, [pc, #24]	; 2ba58 <g_unichar_xdigit_value@plt+0x17bf4>
   2ba3c:	add	r1, pc, r1
   2ba40:	add	r2, pc, r2
   2ba44:	add	r1, r1, #176	; 0xb0
   2ba48:	bl	13450 <g_return_if_fail_warning@plt>
   2ba4c:	mov	r0, r4
   2ba50:	pop	{r4, pc}
   2ba54:	andeq	pc, r0, ip, lsl #17
   2ba58:	andeq	ip, r0, r4, lsr #13
   2ba5c:	push	{r4, lr}
   2ba60:	subs	r4, r0, #0
   2ba64:	beq	2ba78 <g_unichar_xdigit_value@plt+0x17c14>
   2ba68:	ldr	r3, [r4, #12]
   2ba6c:	pop	{r4, lr}
   2ba70:	ldr	r0, [r3, #4]
   2ba74:	b	136f0 <g_strdup@plt>
   2ba78:	ldr	r1, [pc, #24]	; 2ba98 <g_unichar_xdigit_value@plt+0x17c34>
   2ba7c:	ldr	r2, [pc, #24]	; 2ba9c <g_unichar_xdigit_value@plt+0x17c38>
   2ba80:	add	r1, pc, r1
   2ba84:	add	r2, pc, r2
   2ba88:	add	r1, r1, #200	; 0xc8
   2ba8c:	bl	13450 <g_return_if_fail_warning@plt>
   2ba90:	mov	r0, r4
   2ba94:	pop	{r4, pc}
   2ba98:	andeq	pc, r0, r8, asr #16
   2ba9c:	andeq	ip, r0, r0, ror #12
   2baa0:	push	{r4, r5, r6, r7, r8, lr}
   2baa4:	subs	r5, r0, #0
   2baa8:	mov	r8, r1
   2baac:	beq	2bb54 <g_unichar_xdigit_value@plt+0x17cf0>
   2bab0:	cmp	r1, #0
   2bab4:	beq	2bb74 <g_unichar_xdigit_value@plt+0x17d10>
   2bab8:	ldr	r3, [r5, #12]
   2babc:	ldr	r4, [r3]
   2bac0:	cmp	r4, #0
   2bac4:	bne	2bb14 <g_unichar_xdigit_value@plt+0x17cb0>
   2bac8:	b	2bb4c <g_unichar_xdigit_value@plt+0x17ce8>
   2bacc:	bl	133f0 <g_object_ref@plt>
   2bad0:	mov	r5, r0
   2bad4:	bl	2ba5c <g_unichar_xdigit_value@plt+0x17bf8>
   2bad8:	mov	r1, r8
   2badc:	mov	r6, r0
   2bae0:	bl	13e58 <g_strcmp0@plt>
   2bae4:	mov	r7, r0
   2bae8:	mov	r0, r6
   2baec:	bl	1399c <g_free@plt>
   2baf0:	cmp	r7, #0
   2baf4:	mov	r0, r5
   2baf8:	beq	2bb6c <g_unichar_xdigit_value@plt+0x17d08>
   2bafc:	cmp	r5, #0
   2bb00:	beq	2bb08 <g_unichar_xdigit_value@plt+0x17ca4>
   2bb04:	bl	13b94 <g_object_unref@plt>
   2bb08:	ldr	r4, [r4, #4]
   2bb0c:	cmp	r4, #0
   2bb10:	beq	2bb4c <g_unichar_xdigit_value@plt+0x17ce8>
   2bb14:	ldr	r3, [r4]
   2bb18:	cmp	r3, #0
   2bb1c:	mov	r0, r3
   2bb20:	bne	2bacc <g_unichar_xdigit_value@plt+0x17c68>
   2bb24:	mov	r0, r3
   2bb28:	bl	2ba5c <g_unichar_xdigit_value@plt+0x17bf8>
   2bb2c:	mov	r1, r8
   2bb30:	mov	r5, r0
   2bb34:	bl	13e58 <g_strcmp0@plt>
   2bb38:	mov	r6, r0
   2bb3c:	mov	r0, r5
   2bb40:	bl	1399c <g_free@plt>
   2bb44:	cmp	r6, #0
   2bb48:	bne	2bb08 <g_unichar_xdigit_value@plt+0x17ca4>
   2bb4c:	mov	r0, #0
   2bb50:	pop	{r4, r5, r6, r7, r8, pc}
   2bb54:	ldr	r1, [pc, #60]	; 2bb98 <g_unichar_xdigit_value@plt+0x17d34>
   2bb58:	ldr	r2, [pc, #60]	; 2bb9c <g_unichar_xdigit_value@plt+0x17d38>
   2bb5c:	add	r1, pc, r1
   2bb60:	add	r2, pc, r2
   2bb64:	add	r1, r1, #224	; 0xe0
   2bb68:	bl	13450 <g_return_if_fail_warning@plt>
   2bb6c:	mov	r0, r5
   2bb70:	pop	{r4, r5, r6, r7, r8, pc}
   2bb74:	ldr	r1, [pc, #36]	; 2bba0 <g_unichar_xdigit_value@plt+0x17d3c>
   2bb78:	mov	r0, r8
   2bb7c:	ldr	r2, [pc, #32]	; 2bba4 <g_unichar_xdigit_value@plt+0x17d40>
   2bb80:	add	r1, pc, r1
   2bb84:	add	r2, pc, r2
   2bb88:	add	r1, r1, #224	; 0xe0
   2bb8c:	bl	13450 <g_return_if_fail_warning@plt>
   2bb90:	mov	r0, r8
   2bb94:	pop	{r4, r5, r6, r7, r8, pc}
   2bb98:	andeq	pc, r0, ip, ror #14
   2bb9c:	andeq	ip, r0, r4, lsl #11
   2bba0:	andeq	pc, r0, r8, asr #14
   2bba4:	andeq	pc, r0, ip, ror #20
   2bba8:	push	{r4, lr}
   2bbac:	subs	r4, r0, #0
   2bbb0:	beq	2bbc4 <g_unichar_xdigit_value@plt+0x17d60>
   2bbb4:	ldr	r3, [r4, #12]
   2bbb8:	pop	{r4, lr}
   2bbbc:	ldr	r0, [r3, #8]
   2bbc0:	b	136f0 <g_strdup@plt>
   2bbc4:	ldr	r1, [pc, #24]	; 2bbe4 <g_unichar_xdigit_value@plt+0x17d80>
   2bbc8:	ldr	r2, [pc, #24]	; 2bbe8 <g_unichar_xdigit_value@plt+0x17d84>
   2bbcc:	add	r1, pc, r1
   2bbd0:	add	r2, pc, r2
   2bbd4:	add	r1, r1, #252	; 0xfc
   2bbd8:	bl	13450 <g_return_if_fail_warning@plt>
   2bbdc:	mov	r0, r4
   2bbe0:	pop	{r4, pc}
   2bbe4:	strdeq	pc, [r0], -ip
   2bbe8:	andeq	ip, r0, r4, lsl r5
   2bbec:	ldr	r0, [pc, #108]	; 2bc60 <g_unichar_xdigit_value@plt+0x17dfc>
   2bbf0:	push	{r3, r4, r5, lr}
   2bbf4:	add	r0, pc, r0
   2bbf8:	dmb	sy
   2bbfc:	ldr	r4, [r0, #44]	; 0x2c
   2bc00:	dmb	sy
   2bc04:	cmp	r4, #0
   2bc08:	beq	2bc1c <g_unichar_xdigit_value@plt+0x17db8>
   2bc0c:	ldr	r3, [pc, #80]	; 2bc64 <g_unichar_xdigit_value@plt+0x17e00>
   2bc10:	add	r3, pc, r3
   2bc14:	ldr	r0, [r3, #44]	; 0x2c
   2bc18:	pop	{r3, r4, r5, pc}
   2bc1c:	add	r5, r0, #44	; 0x2c
   2bc20:	mov	r0, r5
   2bc24:	bl	138ac <g_once_init_enter@plt>
   2bc28:	cmp	r0, #0
   2bc2c:	beq	2bc0c <g_unichar_xdigit_value@plt+0x17da8>
   2bc30:	ldr	r2, [pc, #48]	; 2bc68 <g_unichar_xdigit_value@plt+0x17e04>
   2bc34:	mov	r3, r4
   2bc38:	ldr	r1, [pc, #44]	; 2bc6c <g_unichar_xdigit_value@plt+0x17e08>
   2bc3c:	mov	r0, #80	; 0x50
   2bc40:	add	r2, pc, r2
   2bc44:	add	r1, pc, r1
   2bc48:	add	r2, r2, #36	; 0x24
   2bc4c:	bl	13438 <g_type_register_static@plt>
   2bc50:	mov	r1, r0
   2bc54:	mov	r0, r5
   2bc58:	bl	13bac <g_once_init_leave@plt>
   2bc5c:	b	2bc0c <g_unichar_xdigit_value@plt+0x17da8>
   2bc60:	andeq	r5, r2, ip, lsr #19
   2bc64:	muleq	r2, r0, r9
   2bc68:	andeq	r4, r2, r0, ror #29
   2bc6c:	andeq	pc, r0, r0, asr #19
   2bc70:	push	{r3, r4, r5, lr}
   2bc74:	mov	r4, r1
   2bc78:	mov	r5, r0
   2bc7c:	bl	2bbec <g_unichar_xdigit_value@plt+0x17d88>
   2bc80:	mov	r1, r5
   2bc84:	mov	r2, r4
   2bc88:	pop	{r3, r4, r5, lr}
   2bc8c:	b	2b8a8 <g_unichar_xdigit_value@plt+0x17a44>
   2bc90:	push	{r4, r5, r6, lr}
   2bc94:	subs	r6, r0, #0
   2bc98:	mov	r4, r1
   2bc9c:	mov	r5, r2
   2bca0:	beq	2bcf0 <g_unichar_xdigit_value@plt+0x17e8c>
   2bca4:	cmp	r1, #0
   2bca8:	beq	2bd14 <g_unichar_xdigit_value@plt+0x17eb0>
   2bcac:	cmp	r2, #0
   2bcb0:	beq	2bd3c <g_unichar_xdigit_value@plt+0x17ed8>
   2bcb4:	mov	r0, r1
   2bcb8:	mov	r1, r2
   2bcbc:	bl	2bc70 <g_unichar_xdigit_value@plt+0x17e0c>
   2bcc0:	subs	r5, r0, #0
   2bcc4:	moveq	r1, r5
   2bcc8:	beq	2bcd4 <g_unichar_xdigit_value@plt+0x17e70>
   2bccc:	bl	133f0 <g_object_ref@plt>
   2bcd0:	mov	r1, r0
   2bcd4:	ldr	r4, [r6, #12]
   2bcd8:	ldr	r0, [r4]
   2bcdc:	bl	13594 <g_list_append@plt>
   2bce0:	mov	r1, r5
   2bce4:	str	r0, [r4]
   2bce8:	mov	r0, r1
   2bcec:	pop	{r4, r5, r6, pc}
   2bcf0:	ldr	r1, [pc, #108]	; 2bd64 <g_unichar_xdigit_value@plt+0x17f00>
   2bcf4:	ldr	r2, [pc, #108]	; 2bd68 <g_unichar_xdigit_value@plt+0x17f04>
   2bcf8:	add	r1, pc, r1
   2bcfc:	add	r2, pc, r2
   2bd00:	add	r1, r1, #284	; 0x11c
   2bd04:	bl	13450 <g_return_if_fail_warning@plt>
   2bd08:	mov	r1, r6
   2bd0c:	mov	r0, r1
   2bd10:	pop	{r4, r5, r6, pc}
   2bd14:	ldr	r1, [pc, #80]	; 2bd6c <g_unichar_xdigit_value@plt+0x17f08>
   2bd18:	mov	r0, r4
   2bd1c:	ldr	r2, [pc, #76]	; 2bd70 <g_unichar_xdigit_value@plt+0x17f0c>
   2bd20:	add	r1, pc, r1
   2bd24:	add	r2, pc, r2
   2bd28:	add	r1, r1, #284	; 0x11c
   2bd2c:	bl	13450 <g_return_if_fail_warning@plt>
   2bd30:	mov	r1, r4
   2bd34:	mov	r0, r1
   2bd38:	pop	{r4, r5, r6, pc}
   2bd3c:	ldr	r1, [pc, #48]	; 2bd74 <g_unichar_xdigit_value@plt+0x17f10>
   2bd40:	mov	r0, r2
   2bd44:	ldr	r2, [pc, #44]	; 2bd78 <g_unichar_xdigit_value@plt+0x17f14>
   2bd48:	add	r1, pc, r1
   2bd4c:	add	r2, pc, r2
   2bd50:	add	r1, r1, #284	; 0x11c
   2bd54:	bl	13450 <g_return_if_fail_warning@plt>
   2bd58:	mov	r1, r5
   2bd5c:	mov	r0, r1
   2bd60:	pop	{r4, r5, r6, pc}
   2bd64:	ldrdeq	pc, [r0], -r0
   2bd68:	andeq	ip, r0, r8, ror #7
   2bd6c:	andeq	pc, r0, r8, lsr #11
   2bd70:	andeq	pc, r0, ip, lsr #17
   2bd74:	andeq	pc, r0, r0, lsl #11
   2bd78:	andeq	pc, r0, ip, ror r8	; <UNPREDICTABLE>
   2bd7c:	push	{r4, lr}
   2bd80:	mov	r4, r0
   2bd84:	bl	2bbec <g_unichar_xdigit_value@plt+0x17d88>
   2bd88:	mov	r1, r0
   2bd8c:	mov	r0, r4
   2bd90:	bl	13870 <g_type_instance_get_private@plt>
   2bd94:	str	r0, [r4, #12]
   2bd98:	pop	{r4, pc}
   2bd9c:	push	{r4, r5, r6, lr}
   2bda0:	mov	r5, r0
   2bda4:	bl	2bbec <g_unichar_xdigit_value@plt+0x17d88>
   2bda8:	mov	r1, r0
   2bdac:	mov	r0, r5
   2bdb0:	bl	13510 <g_type_check_instance_cast@plt>
   2bdb4:	ldr	r3, [r0, #12]
   2bdb8:	mov	r4, r0
   2bdbc:	ldr	r0, [r3]
   2bdc0:	cmp	r0, #0
   2bdc4:	beq	2bde0 <g_unichar_xdigit_value@plt+0x17f7c>
   2bdc8:	ldr	r1, [pc, #88]	; 2be28 <g_unichar_xdigit_value@plt+0x17fc4>
   2bdcc:	add	r1, pc, r1
   2bdd0:	bl	1396c <g_list_free_full@plt>
   2bdd4:	ldr	r3, [r4, #12]
   2bdd8:	mov	r2, #0
   2bddc:	str	r2, [r3]
   2bde0:	ldr	r0, [r3, #4]
   2bde4:	mov	r6, #0
   2bde8:	bl	1399c <g_free@plt>
   2bdec:	ldr	r3, [r4, #12]
   2bdf0:	str	r6, [r3, #4]
   2bdf4:	ldr	r0, [r3, #8]
   2bdf8:	bl	1399c <g_free@plt>
   2bdfc:	ldr	r3, [pc, #40]	; 2be2c <g_unichar_xdigit_value@plt+0x17fc8>
   2be00:	ldr	r2, [r4, #12]
   2be04:	mov	r1, #80	; 0x50
   2be08:	add	r3, pc, r3
   2be0c:	str	r6, [r2, #8]
   2be10:	ldr	r0, [r3, #8]
   2be14:	bl	13db0 <g_type_check_class_cast@plt>
   2be18:	ldr	r3, [r0, #24]
   2be1c:	mov	r0, r5
   2be20:	blx	r3
   2be24:	pop	{r4, r5, r6, pc}
   2be28:			; <UNDEFINED> instruction: 0xfffff4c8
   2be2c:	muleq	r2, r8, r7
   2be30:	push	{r4, r5, r6, r7, lr}
   2be34:	sub	sp, sp, #28
   2be38:	mov	r4, r1
   2be3c:	mov	r5, r0
   2be40:	mov	r6, r2
   2be44:	mov	r7, r3
   2be48:	bl	2bbec <g_unichar_xdigit_value@plt+0x17d88>
   2be4c:	mov	r1, r0
   2be50:	mov	r0, r5
   2be54:	bl	13510 <g_type_check_instance_cast@plt>
   2be58:	cmp	r4, #1
   2be5c:	beq	2bee0 <g_unichar_xdigit_value@plt+0x1807c>
   2be60:	cmp	r4, #2
   2be64:	bne	2be80 <g_unichar_xdigit_value@plt+0x1801c>
   2be68:	bl	2bba8 <g_unichar_xdigit_value@plt+0x17d44>
   2be6c:	mov	r1, r0
   2be70:	mov	r0, r6
   2be74:	add	sp, sp, #28
   2be78:	pop	{r4, r5, r6, r7, lr}
   2be7c:	b	13444 <g_value_take_string@plt>
   2be80:	ldm	r7, {r3, r7}
   2be84:	ldr	r0, [r3]
   2be88:	bl	13564 <g_type_name@plt>
   2be8c:	ldr	r3, [r5]
   2be90:	mov	r6, r0
   2be94:	ldr	r0, [r3]
   2be98:	bl	13564 <g_type_name@plt>
   2be9c:	ldr	r2, [pc, #68]	; 2bee8 <g_unichar_xdigit_value@plt+0x18084>
   2bea0:	mov	r3, #2176	; 0x880
   2bea4:	str	r3, [sp]
   2bea8:	add	r2, pc, r2
   2beac:	ldr	r3, [pc, #56]	; 2beec <g_unichar_xdigit_value@plt+0x18088>
   2beb0:	stmib	sp, {r2, r4}
   2beb4:	mov	r1, #16
   2beb8:	ldr	r2, [pc, #48]	; 2bef0 <g_unichar_xdigit_value@plt+0x1808c>
   2bebc:	add	r3, pc, r3
   2bec0:	str	r7, [sp, #12]
   2bec4:	str	r6, [sp, #16]
   2bec8:	add	r2, pc, r2
   2becc:	str	r0, [sp, #20]
   2bed0:	mov	r0, #0
   2bed4:	bl	13558 <g_log@plt>
   2bed8:	add	sp, sp, #28
   2bedc:	pop	{r4, r5, r6, r7, pc}
   2bee0:	bl	2ba5c <g_unichar_xdigit_value@plt+0x17bf8>
   2bee4:	b	2be6c <g_unichar_xdigit_value@plt+0x18008>
   2bee8:	andeq	lr, r0, r4, ror #5
   2beec:	andeq	pc, r0, r8, asr r7	; <UNPREDICTABLE>
   2bef0:	andeq	lr, r0, r8, ror #4
   2bef4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bef8:	subs	r8, r1, #0
   2befc:	mov	r4, r2
   2bf00:	mov	r5, r3
   2bf04:	ldr	r9, [sp, #40]	; 0x28
   2bf08:	ldr	sl, [sp, #44]	; 0x2c
   2bf0c:	ldr	r6, [sp, #48]	; 0x30
   2bf10:	beq	2c0fc <g_unichar_xdigit_value@plt+0x18298>
   2bf14:	cmp	r2, #0
   2bf18:	beq	2c120 <g_unichar_xdigit_value@plt+0x182bc>
   2bf1c:	cmp	r3, #0
   2bf20:	beq	2c144 <g_unichar_xdigit_value@plt+0x182e0>
   2bf24:	cmp	r6, #0
   2bf28:	beq	2c168 <g_unichar_xdigit_value@plt+0x18304>
   2bf2c:	mov	r1, #0
   2bf30:	bl	133e4 <g_object_new@plt>
   2bf34:	mov	r1, #10
   2bf38:	mov	r2, #2
   2bf3c:	mov	r7, r0
   2bf40:	mov	r0, #0
   2bf44:	bl	2b080 <g_unichar_xdigit_value@plt+0x1721c>
   2bf48:	ldr	ip, [r7, #12]
   2bf4c:	mov	fp, r0
   2bf50:	ldr	r0, [ip, #24]
   2bf54:	cmp	r0, #0
   2bf58:	beq	2bf6c <g_unichar_xdigit_value@plt+0x18108>
   2bf5c:	bl	13b94 <g_object_unref@plt>
   2bf60:	ldr	ip, [r7, #12]
   2bf64:	mov	r3, #0
   2bf68:	str	r3, [ip, #24]
   2bf6c:	mov	r1, #6
   2bf70:	str	fp, [ip, #24]
   2bf74:	mov	r0, fp
   2bf78:	bl	29b74 <g_unichar_xdigit_value@plt+0x15d10>
   2bf7c:	mov	r0, r8
   2bf80:	bl	136f0 <g_strdup@plt>
   2bf84:	ldr	r3, [r7, #12]
   2bf88:	mov	r8, r0
   2bf8c:	ldr	r0, [r3]
   2bf90:	bl	1399c <g_free@plt>
   2bf94:	ldr	r3, [r7, #12]
   2bf98:	mov	r0, r4
   2bf9c:	str	r8, [r3]
   2bfa0:	bl	136f0 <g_strdup@plt>
   2bfa4:	ldr	r3, [r7, #12]
   2bfa8:	mov	r4, r0
   2bfac:	ldr	r0, [r3, #4]
   2bfb0:	bl	1399c <g_free@plt>
   2bfb4:	ldr	r3, [r7, #12]
   2bfb8:	mov	r0, r5
   2bfbc:	str	r4, [r3, #4]
   2bfc0:	bl	136f0 <g_strdup@plt>
   2bfc4:	ldr	r3, [r7, #12]
   2bfc8:	mov	r4, r0
   2bfcc:	ldr	r0, [r3, #8]
   2bfd0:	bl	1399c <g_free@plt>
   2bfd4:	ldr	r3, [r7, #12]
   2bfd8:	mov	r0, r9
   2bfdc:	str	r4, [r3, #8]
   2bfe0:	bl	136f0 <g_strdup@plt>
   2bfe4:	ldr	r3, [r7, #12]
   2bfe8:	mov	r4, r0
   2bfec:	ldr	r0, [r3, #16]
   2bff0:	bl	1399c <g_free@plt>
   2bff4:	ldr	r3, [r7, #12]
   2bff8:	mov	r0, sl
   2bffc:	str	r4, [r3, #16]
   2c000:	bl	136f0 <g_strdup@plt>
   2c004:	ldr	r3, [r7, #12]
   2c008:	mov	r4, r0
   2c00c:	ldr	r0, [r3, #20]
   2c010:	bl	1399c <g_free@plt>
   2c014:	ldr	r1, [r7, #12]
   2c018:	ldr	r0, [r1, #12]
   2c01c:	str	r4, [r1, #20]
   2c020:	cmp	r0, #0
   2c024:	beq	2c040 <g_unichar_xdigit_value@plt+0x181dc>
   2c028:	ldr	r1, [pc, #348]	; 2c18c <g_unichar_xdigit_value@plt+0x18328>
   2c02c:	add	r1, pc, r1
   2c030:	bl	1396c <g_list_free_full@plt>
   2c034:	ldr	r1, [r7, #12]
   2c038:	mov	r3, #0
   2c03c:	str	r3, [r1, #12]
   2c040:	mov	r4, #0
   2c044:	str	r4, [r1, #12]
   2c048:	ldr	r1, [pc, #320]	; 2c190 <g_unichar_xdigit_value@plt+0x1832c>
   2c04c:	mov	r0, r6
   2c050:	mov	r2, r4
   2c054:	add	r1, pc, r1
   2c058:	bl	13810 <g_strsplit@plt>
   2c05c:	subs	sl, r0, #0
   2c060:	beq	2c0ec <g_unichar_xdigit_value@plt+0x18288>
   2c064:	ldr	r3, [sl]
   2c068:	cmp	r3, r4
   2c06c:	beq	2c0ec <g_unichar_xdigit_value@plt+0x18288>
   2c070:	mov	r3, sl
   2c074:	ldr	r5, [r3, #4]!
   2c078:	add	r4, r4, #1
   2c07c:	cmp	r5, #0
   2c080:	bne	2c074 <g_unichar_xdigit_value@plt+0x18210>
   2c084:	sub	fp, sl, #4
   2c088:	mov	r8, fp
   2c08c:	ldr	r0, [r8, #4]!
   2c090:	add	r5, r5, #1
   2c094:	bl	136f0 <g_strdup@plt>
   2c098:	mov	r9, r0
   2c09c:	bl	136f0 <g_strdup@plt>
   2c0a0:	ldr	r6, [r7, #12]
   2c0a4:	mov	r1, r0
   2c0a8:	ldr	r0, [r6, #12]
   2c0ac:	bl	13594 <g_list_append@plt>
   2c0b0:	str	r0, [r6, #12]
   2c0b4:	mov	r0, r9
   2c0b8:	bl	1399c <g_free@plt>
   2c0bc:	cmp	r5, r4
   2c0c0:	bne	2c08c <g_unichar_xdigit_value@plt+0x18228>
   2c0c4:	cmp	r4, #0
   2c0c8:	movne	r5, #0
   2c0cc:	beq	2c0ec <g_unichar_xdigit_value@plt+0x18288>
   2c0d0:	ldr	r0, [fp, #4]!
   2c0d4:	add	r5, r5, #1
   2c0d8:	cmp	r0, #0
   2c0dc:	beq	2c0e4 <g_unichar_xdigit_value@plt+0x18280>
   2c0e0:	bl	1399c <g_free@plt>
   2c0e4:	cmp	r4, r5
   2c0e8:	bne	2c0d0 <g_unichar_xdigit_value@plt+0x1826c>
   2c0ec:	mov	r0, sl
   2c0f0:	bl	1399c <g_free@plt>
   2c0f4:	mov	r0, r7
   2c0f8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c0fc:	ldr	r1, [pc, #144]	; 2c194 <g_unichar_xdigit_value@plt+0x18330>
   2c100:	mov	r0, r8
   2c104:	ldr	r2, [pc, #140]	; 2c198 <g_unichar_xdigit_value@plt+0x18334>
   2c108:	add	r1, pc, r1
   2c10c:	add	r2, pc, r2
   2c110:	add	r1, r1, #312	; 0x138
   2c114:	bl	13450 <g_return_if_fail_warning@plt>
   2c118:	mov	r0, r8
   2c11c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c120:	ldr	r1, [pc, #116]	; 2c19c <g_unichar_xdigit_value@plt+0x18338>
   2c124:	mov	r0, r2
   2c128:	ldr	r2, [pc, #112]	; 2c1a0 <g_unichar_xdigit_value@plt+0x1833c>
   2c12c:	add	r1, pc, r1
   2c130:	add	r2, pc, r2
   2c134:	add	r1, r1, #312	; 0x138
   2c138:	bl	13450 <g_return_if_fail_warning@plt>
   2c13c:	mov	r0, r4
   2c140:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c144:	ldr	r1, [pc, #88]	; 2c1a4 <g_unichar_xdigit_value@plt+0x18340>
   2c148:	mov	r0, r3
   2c14c:	ldr	r2, [pc, #84]	; 2c1a8 <g_unichar_xdigit_value@plt+0x18344>
   2c150:	add	r1, pc, r1
   2c154:	add	r2, pc, r2
   2c158:	add	r1, r1, #312	; 0x138
   2c15c:	bl	13450 <g_return_if_fail_warning@plt>
   2c160:	mov	r0, r5
   2c164:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c168:	ldr	r1, [pc, #60]	; 2c1ac <g_unichar_xdigit_value@plt+0x18348>
   2c16c:	mov	r0, r6
   2c170:	ldr	r2, [pc, #56]	; 2c1b0 <g_unichar_xdigit_value@plt+0x1834c>
   2c174:	add	r1, pc, r1
   2c178:	add	r2, pc, r2
   2c17c:	add	r1, r1, #312	; 0x138
   2c180:	bl	13450 <g_return_if_fail_warning@plt>
   2c184:	mov	r0, r6
   2c188:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c18c:			; <UNDEFINED> instruction: 0xfffff274
   2c190:	ldrdeq	pc, [r0], -ip
   2c194:	andeq	pc, r0, r0, asr #3
   2c198:	andeq	pc, r0, r4, asr #9
   2c19c:	muleq	r0, ip, r1
   2c1a0:	muleq	r0, r8, r4
   2c1a4:	andeq	pc, r0, r8, ror r1	; <UNPREDICTABLE>
   2c1a8:	andeq	pc, r0, r0, ror #9
   2c1ac:	andeq	pc, r0, r4, asr r1	; <UNPREDICTABLE>
   2c1b0:	andeq	pc, r0, ip, asr #9
   2c1b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c1b8:	subs	r4, r0, #0
   2c1bc:	mov	r9, r1
   2c1c0:	mov	sl, r2
   2c1c4:	beq	2c278 <g_unichar_xdigit_value@plt+0x18414>
   2c1c8:	cmp	r1, #0
   2c1cc:	beq	2c298 <g_unichar_xdigit_value@plt+0x18434>
   2c1d0:	ldr	r3, [r4, #12]
   2c1d4:	ldr	r4, [r3, #12]
   2c1d8:	cmp	r4, #0
   2c1dc:	bne	2c238 <g_unichar_xdigit_value@plt+0x183d4>
   2c1e0:	b	2c270 <g_unichar_xdigit_value@plt+0x1840c>
   2c1e4:	bl	134c8 <g_utf8_strdown@plt>
   2c1e8:	mvn	r1, #0
   2c1ec:	mov	r5, r0
   2c1f0:	mov	r0, r9
   2c1f4:	bl	134c8 <g_utf8_strdown@plt>
   2c1f8:	mov	r6, r0
   2c1fc:	mov	r0, r5
   2c200:	mov	r1, r6
   2c204:	bl	13e58 <g_strcmp0@plt>
   2c208:	mov	r8, r0
   2c20c:	mov	r0, r6
   2c210:	bl	1399c <g_free@plt>
   2c214:	mov	r0, r5
   2c218:	bl	1399c <g_free@plt>
   2c21c:	cmp	r8, #0
   2c220:	beq	2c260 <g_unichar_xdigit_value@plt+0x183fc>
   2c224:	mov	r0, r7
   2c228:	bl	1399c <g_free@plt>
   2c22c:	ldr	r4, [r4, #4]
   2c230:	cmp	r4, #0
   2c234:	beq	2c270 <g_unichar_xdigit_value@plt+0x1840c>
   2c238:	ldr	r0, [r4]
   2c23c:	bl	136f0 <g_strdup@plt>
   2c240:	cmp	sl, #0
   2c244:	mvn	r1, #0
   2c248:	mov	r7, r0
   2c24c:	beq	2c1e4 <g_unichar_xdigit_value@plt+0x18380>
   2c250:	mov	r1, r9
   2c254:	bl	13e58 <g_strcmp0@plt>
   2c258:	cmp	r0, #0
   2c25c:	bne	2c224 <g_unichar_xdigit_value@plt+0x183c0>
   2c260:	mov	r0, r7
   2c264:	bl	1399c <g_free@plt>
   2c268:	mov	r0, #1
   2c26c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c270:	mov	r0, #0
   2c274:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c278:	ldr	r1, [pc, #60]	; 2c2bc <g_unichar_xdigit_value@plt+0x18458>
   2c27c:	ldr	r2, [pc, #60]	; 2c2c0 <g_unichar_xdigit_value@plt+0x1845c>
   2c280:	add	r1, pc, r1
   2c284:	add	r2, pc, r2
   2c288:	add	r1, r1, #328	; 0x148
   2c28c:	bl	13450 <g_return_if_fail_warning@plt>
   2c290:	mov	r0, r4
   2c294:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c298:	ldr	r1, [pc, #36]	; 2c2c4 <g_unichar_xdigit_value@plt+0x18460>
   2c29c:	mov	r0, r9
   2c2a0:	ldr	r2, [pc, #32]	; 2c2c8 <g_unichar_xdigit_value@plt+0x18464>
   2c2a4:	add	r1, pc, r1
   2c2a8:	add	r2, pc, r2
   2c2ac:	add	r1, r1, #328	; 0x148
   2c2b0:	bl	13450 <g_return_if_fail_warning@plt>
   2c2b4:	mov	r0, r9
   2c2b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c2bc:	andeq	pc, r0, r8, asr #32
   2c2c0:	andeq	fp, r0, r0, ror #28
   2c2c4:	andeq	pc, r0, r4, lsr #32
   2c2c8:	andeq	pc, r0, ip, lsr #7
   2c2cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c2d0:	subs	r9, r0, #0
   2c2d4:	mov	r8, r1
   2c2d8:	beq	2c460 <g_unichar_xdigit_value@plt+0x185fc>
   2c2dc:	cmp	r1, #0
   2c2e0:	beq	2c480 <g_unichar_xdigit_value@plt+0x1861c>
   2c2e4:	ldr	r3, [r9, #12]
   2c2e8:	ldr	r4, [r3]
   2c2ec:	cmp	r4, #0
   2c2f0:	beq	2c3a4 <g_unichar_xdigit_value@plt+0x18540>
   2c2f4:	mov	r6, #0
   2c2f8:	mov	r7, r6
   2c2fc:	b	2c364 <g_unichar_xdigit_value@plt+0x18500>
   2c300:	bl	133f0 <g_object_ref@plt>
   2c304:	mov	r1, r8
   2c308:	mov	r2, #1
   2c30c:	mov	r5, r0
   2c310:	bl	2c1b4 <g_unichar_xdigit_value@plt+0x18350>
   2c314:	cmp	r0, #0
   2c318:	beq	2c348 <g_unichar_xdigit_value@plt+0x184e4>
   2c31c:	cmp	r5, #0
   2c320:	beq	2c384 <g_unichar_xdigit_value@plt+0x18520>
   2c324:	mov	r0, r5
   2c328:	bl	133f0 <g_object_ref@plt>
   2c32c:	mov	sl, r0
   2c330:	cmp	r6, #0
   2c334:	beq	2c340 <g_unichar_xdigit_value@plt+0x184dc>
   2c338:	mov	r0, r6
   2c33c:	bl	13b94 <g_object_unref@plt>
   2c340:	add	r7, r7, #1
   2c344:	mov	r6, sl
   2c348:	cmp	r5, #0
   2c34c:	beq	2c358 <g_unichar_xdigit_value@plt+0x184f4>
   2c350:	mov	r0, r5
   2c354:	bl	13b94 <g_object_unref@plt>
   2c358:	ldr	r4, [r4, #4]
   2c35c:	cmp	r4, #0
   2c360:	beq	2c38c <g_unichar_xdigit_value@plt+0x18528>
   2c364:	ldr	r5, [r4]
   2c368:	subs	r0, r5, #0
   2c36c:	bne	2c300 <g_unichar_xdigit_value@plt+0x1849c>
   2c370:	mov	r1, r8
   2c374:	mov	r2, #1
   2c378:	bl	2c1b4 <g_unichar_xdigit_value@plt+0x18350>
   2c37c:	cmp	r0, #0
   2c380:	beq	2c358 <g_unichar_xdigit_value@plt+0x184f4>
   2c384:	mov	sl, r5
   2c388:	b	2c330 <g_unichar_xdigit_value@plt+0x184cc>
   2c38c:	cmp	r7, #1
   2c390:	ble	2c3ac <g_unichar_xdigit_value@plt+0x18548>
   2c394:	cmp	r6, #0
   2c398:	beq	2c3a4 <g_unichar_xdigit_value@plt+0x18540>
   2c39c:	mov	r0, r6
   2c3a0:	bl	13b94 <g_object_unref@plt>
   2c3a4:	mov	r0, #0
   2c3a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c3ac:	beq	2c458 <g_unichar_xdigit_value@plt+0x185f4>
   2c3b0:	ldr	r3, [r9, #12]
   2c3b4:	ldr	r5, [r3]
   2c3b8:	cmp	r5, #0
   2c3bc:	bne	2c428 <g_unichar_xdigit_value@plt+0x185c4>
   2c3c0:	b	2c394 <g_unichar_xdigit_value@plt+0x18530>
   2c3c4:	bl	133f0 <g_object_ref@plt>
   2c3c8:	mov	r1, r8
   2c3cc:	mov	r2, #0
   2c3d0:	mov	r7, r0
   2c3d4:	bl	2c1b4 <g_unichar_xdigit_value@plt+0x18350>
   2c3d8:	cmp	r0, #0
   2c3dc:	beq	2c40c <g_unichar_xdigit_value@plt+0x185a8>
   2c3e0:	cmp	r7, #0
   2c3e4:	beq	2c448 <g_unichar_xdigit_value@plt+0x185e4>
   2c3e8:	mov	r0, r7
   2c3ec:	bl	133f0 <g_object_ref@plt>
   2c3f0:	mov	r9, r0
   2c3f4:	cmp	r6, #0
   2c3f8:	beq	2c404 <g_unichar_xdigit_value@plt+0x185a0>
   2c3fc:	mov	r0, r6
   2c400:	bl	13b94 <g_object_unref@plt>
   2c404:	add	r4, r4, #1
   2c408:	mov	r6, r9
   2c40c:	cmp	r7, #0
   2c410:	beq	2c41c <g_unichar_xdigit_value@plt+0x185b8>
   2c414:	mov	r0, r7
   2c418:	bl	13b94 <g_object_unref@plt>
   2c41c:	ldr	r5, [r5, #4]
   2c420:	cmp	r5, #0
   2c424:	beq	2c450 <g_unichar_xdigit_value@plt+0x185ec>
   2c428:	ldr	r7, [r5]
   2c42c:	subs	r0, r7, #0
   2c430:	bne	2c3c4 <g_unichar_xdigit_value@plt+0x18560>
   2c434:	mov	r1, r8
   2c438:	mov	r2, r7
   2c43c:	bl	2c1b4 <g_unichar_xdigit_value@plt+0x18350>
   2c440:	cmp	r0, #0
   2c444:	beq	2c41c <g_unichar_xdigit_value@plt+0x185b8>
   2c448:	mov	r9, r7
   2c44c:	b	2c3f4 <g_unichar_xdigit_value@plt+0x18590>
   2c450:	cmp	r4, #1
   2c454:	bne	2c394 <g_unichar_xdigit_value@plt+0x18530>
   2c458:	mov	r0, r6
   2c45c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c460:	ldr	r1, [pc, #60]	; 2c4a4 <g_unichar_xdigit_value@plt+0x18640>
   2c464:	ldr	r2, [pc, #60]	; 2c4a8 <g_unichar_xdigit_value@plt+0x18644>
   2c468:	add	r1, pc, r1
   2c46c:	add	r2, pc, r2
   2c470:	add	r1, r1, #348	; 0x15c
   2c474:	bl	13450 <g_return_if_fail_warning@plt>
   2c478:	mov	r0, r9
   2c47c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c480:	ldr	r1, [pc, #36]	; 2c4ac <g_unichar_xdigit_value@plt+0x18648>
   2c484:	mov	r0, r8
   2c488:	ldr	r2, [pc, #32]	; 2c4b0 <g_unichar_xdigit_value@plt+0x1864c>
   2c48c:	add	r1, pc, r1
   2c490:	add	r2, pc, r2
   2c494:	add	r1, r1, #348	; 0x15c
   2c498:	bl	13450 <g_return_if_fail_warning@plt>
   2c49c:	mov	r0, r8
   2c4a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c4a4:	andeq	lr, r0, r0, ror #28
   2c4a8:	andeq	fp, r0, r8, ror ip
   2c4ac:	andeq	lr, r0, ip, lsr lr
   2c4b0:	andeq	pc, r0, r4, asr #3
   2c4b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c4b8:	subs	sl, r0, #0
   2c4bc:	mov	r8, r1
   2c4c0:	beq	2c608 <g_unichar_xdigit_value@plt+0x187a4>
   2c4c4:	cmp	r1, #0
   2c4c8:	beq	2c628 <g_unichar_xdigit_value@plt+0x187c4>
   2c4cc:	ldr	r3, [sl, #12]
   2c4d0:	ldr	r4, [r3]
   2c4d4:	cmp	r4, #0
   2c4d8:	beq	2c56c <g_unichar_xdigit_value@plt+0x18708>
   2c4dc:	mov	r6, #0
   2c4e0:	mov	r9, r6
   2c4e4:	ldr	r5, [r4]
   2c4e8:	cmp	r5, #0
   2c4ec:	mov	r0, r5
   2c4f0:	beq	2c4fc <g_unichar_xdigit_value@plt+0x18698>
   2c4f4:	bl	133f0 <g_object_ref@plt>
   2c4f8:	mov	r5, r0
   2c4fc:	mov	r2, #1
   2c500:	mov	r0, r5
   2c504:	mov	r1, r8
   2c508:	bl	2c2cc <g_unichar_xdigit_value@plt+0x18468>
   2c50c:	subs	r7, r0, #0
   2c510:	beq	2c538 <g_unichar_xdigit_value@plt+0x186d4>
   2c514:	bl	133f0 <g_object_ref@plt>
   2c518:	add	r9, r9, #1
   2c51c:	mov	r3, r0
   2c520:	subs	r0, r6, #0
   2c524:	mov	r6, r3
   2c528:	beq	2c530 <g_unichar_xdigit_value@plt+0x186cc>
   2c52c:	bl	13b94 <g_object_unref@plt>
   2c530:	mov	r0, r7
   2c534:	bl	13b94 <g_object_unref@plt>
   2c538:	cmp	r5, #0
   2c53c:	mov	r0, r5
   2c540:	beq	2c548 <g_unichar_xdigit_value@plt+0x186e4>
   2c544:	bl	13b94 <g_object_unref@plt>
   2c548:	ldr	r4, [r4, #4]
   2c54c:	cmp	r4, #0
   2c550:	bne	2c4e4 <g_unichar_xdigit_value@plt+0x18680>
   2c554:	cmp	r9, #1
   2c558:	ble	2c574 <g_unichar_xdigit_value@plt+0x18710>
   2c55c:	cmp	r6, #0
   2c560:	beq	2c56c <g_unichar_xdigit_value@plt+0x18708>
   2c564:	mov	r0, r6
   2c568:	bl	13b94 <g_object_unref@plt>
   2c56c:	mov	r0, #0
   2c570:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c574:	beq	2c600 <g_unichar_xdigit_value@plt+0x1879c>
   2c578:	ldr	r3, [sl, #12]
   2c57c:	ldr	r5, [r3]
   2c580:	cmp	r5, #0
   2c584:	beq	2c55c <g_unichar_xdigit_value@plt+0x186f8>
   2c588:	ldr	r7, [r5]
   2c58c:	cmp	r7, #0
   2c590:	mov	r0, r7
   2c594:	beq	2c5a0 <g_unichar_xdigit_value@plt+0x1873c>
   2c598:	bl	133f0 <g_object_ref@plt>
   2c59c:	mov	r7, r0
   2c5a0:	mov	r2, #0
   2c5a4:	mov	r0, r7
   2c5a8:	mov	r1, r8
   2c5ac:	bl	2c2cc <g_unichar_xdigit_value@plt+0x18468>
   2c5b0:	subs	r9, r0, #0
   2c5b4:	beq	2c5dc <g_unichar_xdigit_value@plt+0x18778>
   2c5b8:	bl	133f0 <g_object_ref@plt>
   2c5bc:	add	r4, r4, #1
   2c5c0:	mov	r3, r0
   2c5c4:	subs	r0, r6, #0
   2c5c8:	mov	r6, r3
   2c5cc:	beq	2c5d4 <g_unichar_xdigit_value@plt+0x18770>
   2c5d0:	bl	13b94 <g_object_unref@plt>
   2c5d4:	mov	r0, r9
   2c5d8:	bl	13b94 <g_object_unref@plt>
   2c5dc:	cmp	r7, #0
   2c5e0:	mov	r0, r7
   2c5e4:	beq	2c5ec <g_unichar_xdigit_value@plt+0x18788>
   2c5e8:	bl	13b94 <g_object_unref@plt>
   2c5ec:	ldr	r5, [r5, #4]
   2c5f0:	cmp	r5, #0
   2c5f4:	bne	2c588 <g_unichar_xdigit_value@plt+0x18724>
   2c5f8:	cmp	r4, #1
   2c5fc:	bne	2c55c <g_unichar_xdigit_value@plt+0x186f8>
   2c600:	mov	r0, r6
   2c604:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c608:	ldr	r1, [pc, #60]	; 2c64c <g_unichar_xdigit_value@plt+0x187e8>
   2c60c:	ldr	r2, [pc, #60]	; 2c650 <g_unichar_xdigit_value@plt+0x187ec>
   2c610:	add	r1, pc, r1
   2c614:	add	r2, pc, r2
   2c618:	add	r1, r1, #384	; 0x180
   2c61c:	bl	13450 <g_return_if_fail_warning@plt>
   2c620:	mov	r0, sl
   2c624:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c628:	ldr	r1, [pc, #36]	; 2c654 <g_unichar_xdigit_value@plt+0x187f0>
   2c62c:	mov	r0, r8
   2c630:	ldr	r2, [pc, #32]	; 2c658 <g_unichar_xdigit_value@plt+0x187f4>
   2c634:	add	r1, pc, r1
   2c638:	add	r2, pc, r2
   2c63c:	add	r1, r1, #384	; 0x180
   2c640:	bl	13450 <g_return_if_fail_warning@plt>
   2c644:	mov	r0, r8
   2c648:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c64c:			; <UNDEFINED> instruction: 0x0000ecb8
   2c650:	ldrdeq	fp, [r0], -r0
   2c654:	muleq	r0, r4, ip
   2c658:	andeq	pc, r0, ip, lsl r0	; <UNPREDICTABLE>
   2c65c:	push	{r3, r4, r5, lr}
   2c660:	subs	r5, r0, #0
   2c664:	mov	r4, r1
   2c668:	beq	2c68c <g_unichar_xdigit_value@plt+0x18828>
   2c66c:	cmp	r1, #0
   2c670:	beq	2c6ac <g_unichar_xdigit_value@plt+0x18848>
   2c674:	bl	2c4b4 <g_unichar_xdigit_value@plt+0x18650>
   2c678:	subs	r3, r0, #0
   2c67c:	beq	2c6d0 <g_unichar_xdigit_value@plt+0x1886c>
   2c680:	bl	13b94 <g_object_unref@plt>
   2c684:	mov	r0, #1
   2c688:	pop	{r3, r4, r5, pc}
   2c68c:	ldr	r1, [pc, #68]	; 2c6d8 <g_unichar_xdigit_value@plt+0x18874>
   2c690:	ldr	r2, [pc, #68]	; 2c6dc <g_unichar_xdigit_value@plt+0x18878>
   2c694:	add	r1, pc, r1
   2c698:	add	r2, pc, r2
   2c69c:	add	r1, r1, #416	; 0x1a0
   2c6a0:	bl	13450 <g_return_if_fail_warning@plt>
   2c6a4:	mov	r0, r5
   2c6a8:	pop	{r3, r4, r5, pc}
   2c6ac:	ldr	r1, [pc, #44]	; 2c6e0 <g_unichar_xdigit_value@plt+0x1887c>
   2c6b0:	mov	r0, r4
   2c6b4:	ldr	r2, [pc, #40]	; 2c6e4 <g_unichar_xdigit_value@plt+0x18880>
   2c6b8:	add	r1, pc, r1
   2c6bc:	add	r2, pc, r2
   2c6c0:	add	r1, r1, #416	; 0x1a0
   2c6c4:	bl	13450 <g_return_if_fail_warning@plt>
   2c6c8:	mov	r0, r4
   2c6cc:	pop	{r3, r4, r5, pc}
   2c6d0:	mov	r0, r3
   2c6d4:	pop	{r3, r4, r5, pc}
   2c6d8:	andeq	lr, r0, r4, lsr ip
   2c6dc:	andeq	fp, r0, ip, asr #20
   2c6e0:	andeq	lr, r0, r0, lsl ip
   2c6e4:	andeq	lr, r0, r4, lsl pc
   2c6e8:	push	{r4, lr}
   2c6ec:	subs	r4, r0, #0
   2c6f0:	beq	2c700 <g_unichar_xdigit_value@plt+0x1889c>
   2c6f4:	ldr	r3, [r4, #12]
   2c6f8:	ldr	r0, [r3, #12]
   2c6fc:	pop	{r4, pc}
   2c700:	ldr	r1, [pc, #24]	; 2c720 <g_unichar_xdigit_value@plt+0x188bc>
   2c704:	ldr	r2, [pc, #24]	; 2c724 <g_unichar_xdigit_value@plt+0x188c0>
   2c708:	add	r1, pc, r1
   2c70c:	add	r2, pc, r2
   2c710:	add	r1, r1, #448	; 0x1c0
   2c714:	bl	13450 <g_return_if_fail_warning@plt>
   2c718:	mov	r0, r4
   2c71c:	pop	{r4, pc}
   2c720:	andeq	lr, r0, r0, asr #23
   2c724:	ldrdeq	fp, [r0], -r8
   2c728:	push	{r3, r4, r5, lr}
   2c72c:	subs	r4, r0, #0
   2c730:	mov	r5, r1
   2c734:	beq	2c774 <g_unichar_xdigit_value@plt+0x18910>
   2c738:	cmp	r1, #0
   2c73c:	beq	2c794 <g_unichar_xdigit_value@plt+0x18930>
   2c740:	ldr	r3, [r4, #12]
   2c744:	ldr	r0, [r3, #24]
   2c748:	bl	2adfc <g_unichar_xdigit_value@plt+0x16f98>
   2c74c:	ldr	r3, [r4, #12]
   2c750:	mov	r1, r0
   2c754:	mov	r5, r0
   2c758:	ldr	r0, [r3, #8]
   2c75c:	bl	13774 <g_strdup_printf@plt>
   2c760:	mov	r4, r0
   2c764:	mov	r0, r5
   2c768:	bl	1399c <g_free@plt>
   2c76c:	mov	r0, r4
   2c770:	pop	{r3, r4, r5, pc}
   2c774:	ldr	r1, [pc, #60]	; 2c7b8 <g_unichar_xdigit_value@plt+0x18954>
   2c778:	ldr	r2, [pc, #60]	; 2c7bc <g_unichar_xdigit_value@plt+0x18958>
   2c77c:	add	r1, pc, r1
   2c780:	add	r2, pc, r2
   2c784:	add	r1, r1, #468	; 0x1d4
   2c788:	bl	13450 <g_return_if_fail_warning@plt>
   2c78c:	mov	r0, r4
   2c790:	pop	{r3, r4, r5, pc}
   2c794:	ldr	r1, [pc, #36]	; 2c7c0 <g_unichar_xdigit_value@plt+0x1895c>
   2c798:	mov	r0, r5
   2c79c:	ldr	r2, [pc, #32]	; 2c7c4 <g_unichar_xdigit_value@plt+0x18960>
   2c7a0:	add	r1, pc, r1
   2c7a4:	add	r2, pc, r2
   2c7a8:	add	r1, r1, #468	; 0x1d4
   2c7ac:	bl	13450 <g_return_if_fail_warning@plt>
   2c7b0:	mov	r0, r5
   2c7b4:	pop	{r3, r4, r5, pc}
   2c7b8:	andeq	lr, r0, ip, asr #22
   2c7bc:	andeq	fp, r0, r4, ror #18
   2c7c0:	andeq	lr, r0, r8, lsr #22
   2c7c4:			; <UNDEFINED> instruction: 0x0000bcbc
   2c7c8:	push	{r4, lr}
   2c7cc:	subs	r4, r0, #0
   2c7d0:	beq	2c7e4 <g_unichar_xdigit_value@plt+0x18980>
   2c7d4:	ldr	r3, [r4, #12]
   2c7d8:	pop	{r4, lr}
   2c7dc:	ldr	r0, [r3]
   2c7e0:	b	136f0 <g_strdup@plt>
   2c7e4:	ldr	r1, [pc, #24]	; 2c804 <g_unichar_xdigit_value@plt+0x189a0>
   2c7e8:	ldr	r2, [pc, #24]	; 2c808 <g_unichar_xdigit_value@plt+0x189a4>
   2c7ec:	add	r1, pc, r1
   2c7f0:	add	r2, pc, r2
   2c7f4:	add	r1, r1, #480	; 0x1e0
   2c7f8:	bl	13450 <g_return_if_fail_warning@plt>
   2c7fc:	mov	r0, r4
   2c800:	pop	{r4, pc}
   2c804:	ldrdeq	lr, [r0], -ip
   2c808:	strdeq	fp, [r0], -r4
   2c80c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c810:	subs	r5, r0, #0
   2c814:	sub	sp, sp, #12
   2c818:	mov	r8, r1
   2c81c:	str	r2, [sp, #4]
   2c820:	beq	2c9a0 <g_unichar_xdigit_value@plt+0x18b3c>
   2c824:	cmp	r1, #0
   2c828:	beq	2c978 <g_unichar_xdigit_value@plt+0x18b14>
   2c82c:	ldr	r3, [r5, #12]
   2c830:	ldr	r5, [r3]
   2c834:	cmp	r5, #0
   2c838:	beq	2c96c <g_unichar_xdigit_value@plt+0x18b08>
   2c83c:	mov	r7, #0
   2c840:	str	r7, [sp]
   2c844:	b	2c8f0 <g_unichar_xdigit_value@plt+0x18a8c>
   2c848:	bl	2c7c8 <g_unichar_xdigit_value@plt+0x18964>
   2c84c:	mvn	r1, #0
   2c850:	mov	r9, r0
   2c854:	bl	134c8 <g_utf8_strdown@plt>
   2c858:	mvn	r1, #0
   2c85c:	mov	r6, r0
   2c860:	mov	r0, r8
   2c864:	bl	134c8 <g_utf8_strdown@plt>
   2c868:	mov	fp, r0
   2c86c:	mov	r0, r6
   2c870:	mov	r1, fp
   2c874:	bl	13e58 <g_strcmp0@plt>
   2c878:	mov	sl, r0
   2c87c:	mov	r0, fp
   2c880:	bl	1399c <g_free@plt>
   2c884:	mov	r0, r6
   2c888:	bl	1399c <g_free@plt>
   2c88c:	mov	r0, r9
   2c890:	bl	1399c <g_free@plt>
   2c894:	cmp	sl, #0
   2c898:	bne	2c8d4 <g_unichar_xdigit_value@plt+0x18a70>
   2c89c:	cmp	r4, #0
   2c8a0:	moveq	r6, r4
   2c8a4:	beq	2c8b4 <g_unichar_xdigit_value@plt+0x18a50>
   2c8a8:	mov	r0, r4
   2c8ac:	bl	133f0 <g_object_ref@plt>
   2c8b0:	mov	r6, r0
   2c8b4:	cmp	r7, #0
   2c8b8:	beq	2c8c4 <g_unichar_xdigit_value@plt+0x18a60>
   2c8bc:	mov	r0, r7
   2c8c0:	bl	13b94 <g_object_unref@plt>
   2c8c4:	ldr	r3, [sp]
   2c8c8:	mov	r7, r6
   2c8cc:	add	r3, r3, #1
   2c8d0:	str	r3, [sp]
   2c8d4:	cmp	r4, #0
   2c8d8:	beq	2c8e4 <g_unichar_xdigit_value@plt+0x18a80>
   2c8dc:	mov	r0, r4
   2c8e0:	bl	13b94 <g_object_unref@plt>
   2c8e4:	ldr	r5, [r5, #4]
   2c8e8:	cmp	r5, #0
   2c8ec:	beq	2c940 <g_unichar_xdigit_value@plt+0x18adc>
   2c8f0:	ldr	r0, [r5]
   2c8f4:	cmp	r0, #0
   2c8f8:	moveq	r4, r0
   2c8fc:	beq	2c908 <g_unichar_xdigit_value@plt+0x18aa4>
   2c900:	bl	133f0 <g_object_ref@plt>
   2c904:	mov	r4, r0
   2c908:	ldr	r3, [sp, #4]
   2c90c:	mov	r0, r4
   2c910:	cmp	r3, #0
   2c914:	beq	2c848 <g_unichar_xdigit_value@plt+0x189e4>
   2c918:	bl	2c7c8 <g_unichar_xdigit_value@plt+0x18964>
   2c91c:	mov	r1, r8
   2c920:	mov	r6, r0
   2c924:	bl	13e58 <g_strcmp0@plt>
   2c928:	mov	fp, r0
   2c92c:	mov	r0, r6
   2c930:	bl	1399c <g_free@plt>
   2c934:	cmp	fp, #0
   2c938:	beq	2c89c <g_unichar_xdigit_value@plt+0x18a38>
   2c93c:	b	2c8d4 <g_unichar_xdigit_value@plt+0x18a70>
   2c940:	ldr	r3, [sp]
   2c944:	cmp	r3, #1
   2c948:	moveq	r0, r7
   2c94c:	beq	2c964 <g_unichar_xdigit_value@plt+0x18b00>
   2c950:	cmp	r7, #0
   2c954:	beq	2c96c <g_unichar_xdigit_value@plt+0x18b08>
   2c958:	mov	r0, r7
   2c95c:	bl	13b94 <g_object_unref@plt>
   2c960:	mov	r0, r5
   2c964:	add	sp, sp, #12
   2c968:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c96c:	mov	r0, #0
   2c970:	add	sp, sp, #12
   2c974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c978:	ldr	r1, [pc, #68]	; 2c9c4 <g_unichar_xdigit_value@plt+0x18b60>
   2c97c:	mov	r0, r8
   2c980:	ldr	r2, [pc, #64]	; 2c9c8 <g_unichar_xdigit_value@plt+0x18b64>
   2c984:	add	r1, pc, r1
   2c988:	add	r2, pc, r2
   2c98c:	add	r1, r1, #496	; 0x1f0
   2c990:	bl	13450 <g_return_if_fail_warning@plt>
   2c994:	mov	r0, r8
   2c998:	add	sp, sp, #12
   2c99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c9a0:	ldr	r1, [pc, #36]	; 2c9cc <g_unichar_xdigit_value@plt+0x18b68>
   2c9a4:	ldr	r2, [pc, #36]	; 2c9d0 <g_unichar_xdigit_value@plt+0x18b6c>
   2c9a8:	add	r1, pc, r1
   2c9ac:	add	r2, pc, r2
   2c9b0:	add	r1, r1, #496	; 0x1f0
   2c9b4:	bl	13450 <g_return_if_fail_warning@plt>
   2c9b8:	mov	r0, r5
   2c9bc:	add	sp, sp, #12
   2c9c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c9c4:	andeq	lr, r0, r4, asr #18
   2c9c8:	andeq	lr, r0, r8, asr #24
   2c9cc:	andeq	lr, r0, r0, lsr #18
   2c9d0:	andeq	fp, r0, r8, lsr r7
   2c9d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c9d8:	subs	sl, r0, #0
   2c9dc:	mov	r8, r1
   2c9e0:	beq	2cb28 <g_unichar_xdigit_value@plt+0x18cc4>
   2c9e4:	cmp	r1, #0
   2c9e8:	beq	2cb48 <g_unichar_xdigit_value@plt+0x18ce4>
   2c9ec:	ldr	r3, [sl, #12]
   2c9f0:	ldr	r4, [r3]
   2c9f4:	cmp	r4, #0
   2c9f8:	beq	2ca8c <g_unichar_xdigit_value@plt+0x18c28>
   2c9fc:	mov	r6, #0
   2ca00:	mov	r9, r6
   2ca04:	ldr	r5, [r4]
   2ca08:	cmp	r5, #0
   2ca0c:	mov	r0, r5
   2ca10:	beq	2ca1c <g_unichar_xdigit_value@plt+0x18bb8>
   2ca14:	bl	133f0 <g_object_ref@plt>
   2ca18:	mov	r5, r0
   2ca1c:	mov	r2, #1
   2ca20:	mov	r0, r5
   2ca24:	mov	r1, r8
   2ca28:	bl	2c80c <g_unichar_xdigit_value@plt+0x189a8>
   2ca2c:	subs	r7, r0, #0
   2ca30:	beq	2ca58 <g_unichar_xdigit_value@plt+0x18bf4>
   2ca34:	bl	133f0 <g_object_ref@plt>
   2ca38:	add	r9, r9, #1
   2ca3c:	mov	r3, r0
   2ca40:	subs	r0, r6, #0
   2ca44:	mov	r6, r3
   2ca48:	beq	2ca50 <g_unichar_xdigit_value@plt+0x18bec>
   2ca4c:	bl	13b94 <g_object_unref@plt>
   2ca50:	mov	r0, r7
   2ca54:	bl	13b94 <g_object_unref@plt>
   2ca58:	cmp	r5, #0
   2ca5c:	mov	r0, r5
   2ca60:	beq	2ca68 <g_unichar_xdigit_value@plt+0x18c04>
   2ca64:	bl	13b94 <g_object_unref@plt>
   2ca68:	ldr	r4, [r4, #4]
   2ca6c:	cmp	r4, #0
   2ca70:	bne	2ca04 <g_unichar_xdigit_value@plt+0x18ba0>
   2ca74:	cmp	r9, #1
   2ca78:	ble	2ca94 <g_unichar_xdigit_value@plt+0x18c30>
   2ca7c:	cmp	r6, #0
   2ca80:	beq	2ca8c <g_unichar_xdigit_value@plt+0x18c28>
   2ca84:	mov	r0, r6
   2ca88:	bl	13b94 <g_object_unref@plt>
   2ca8c:	mov	r0, #0
   2ca90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ca94:	beq	2cb20 <g_unichar_xdigit_value@plt+0x18cbc>
   2ca98:	ldr	r3, [sl, #12]
   2ca9c:	ldr	r5, [r3]
   2caa0:	cmp	r5, #0
   2caa4:	beq	2ca7c <g_unichar_xdigit_value@plt+0x18c18>
   2caa8:	ldr	r7, [r5]
   2caac:	cmp	r7, #0
   2cab0:	mov	r0, r7
   2cab4:	beq	2cac0 <g_unichar_xdigit_value@plt+0x18c5c>
   2cab8:	bl	133f0 <g_object_ref@plt>
   2cabc:	mov	r7, r0
   2cac0:	mov	r2, #0
   2cac4:	mov	r0, r7
   2cac8:	mov	r1, r8
   2cacc:	bl	2c80c <g_unichar_xdigit_value@plt+0x189a8>
   2cad0:	subs	r9, r0, #0
   2cad4:	beq	2cafc <g_unichar_xdigit_value@plt+0x18c98>
   2cad8:	bl	133f0 <g_object_ref@plt>
   2cadc:	add	r4, r4, #1
   2cae0:	mov	r3, r0
   2cae4:	subs	r0, r6, #0
   2cae8:	mov	r6, r3
   2caec:	beq	2caf4 <g_unichar_xdigit_value@plt+0x18c90>
   2caf0:	bl	13b94 <g_object_unref@plt>
   2caf4:	mov	r0, r9
   2caf8:	bl	13b94 <g_object_unref@plt>
   2cafc:	cmp	r7, #0
   2cb00:	mov	r0, r7
   2cb04:	beq	2cb0c <g_unichar_xdigit_value@plt+0x18ca8>
   2cb08:	bl	13b94 <g_object_unref@plt>
   2cb0c:	ldr	r5, [r5, #4]
   2cb10:	cmp	r5, #0
   2cb14:	bne	2caa8 <g_unichar_xdigit_value@plt+0x18c44>
   2cb18:	cmp	r4, #1
   2cb1c:	bne	2ca7c <g_unichar_xdigit_value@plt+0x18c18>
   2cb20:	mov	r0, r6
   2cb24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2cb28:	ldr	r1, [pc, #60]	; 2cb6c <g_unichar_xdigit_value@plt+0x18d08>
   2cb2c:	ldr	r2, [pc, #60]	; 2cb70 <g_unichar_xdigit_value@plt+0x18d0c>
   2cb30:	add	r1, pc, r1
   2cb34:	add	r2, pc, r2
   2cb38:	add	r1, r1, #528	; 0x210
   2cb3c:	bl	13450 <g_return_if_fail_warning@plt>
   2cb40:	mov	r0, sl
   2cb44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2cb48:	ldr	r1, [pc, #36]	; 2cb74 <g_unichar_xdigit_value@plt+0x18d10>
   2cb4c:	mov	r0, r8
   2cb50:	ldr	r2, [pc, #32]	; 2cb78 <g_unichar_xdigit_value@plt+0x18d14>
   2cb54:	add	r1, pc, r1
   2cb58:	add	r2, pc, r2
   2cb5c:	add	r1, r1, #528	; 0x210
   2cb60:	bl	13450 <g_return_if_fail_warning@plt>
   2cb64:	mov	r0, r8
   2cb68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2cb6c:	muleq	r0, r8, r7
   2cb70:			; <UNDEFINED> instruction: 0x0000b5b0
   2cb74:	andeq	lr, r0, r4, ror r7
   2cb78:	andeq	lr, r0, r8, ror sl
   2cb7c:	push	{r4, lr}
   2cb80:	subs	r4, r0, #0
   2cb84:	beq	2cb98 <g_unichar_xdigit_value@plt+0x18d34>
   2cb88:	ldr	r3, [r4, #12]
   2cb8c:	pop	{r4, lr}
   2cb90:	ldr	r0, [r3, #4]
   2cb94:	b	136f0 <g_strdup@plt>
   2cb98:	ldr	r1, [pc, #24]	; 2cbb8 <g_unichar_xdigit_value@plt+0x18d54>
   2cb9c:	ldr	r2, [pc, #24]	; 2cbbc <g_unichar_xdigit_value@plt+0x18d58>
   2cba0:	add	r1, pc, r1
   2cba4:	add	r2, pc, r2
   2cba8:	add	r1, r1, #560	; 0x230
   2cbac:	bl	13450 <g_return_if_fail_warning@plt>
   2cbb0:	mov	r0, r4
   2cbb4:	pop	{r4, pc}
   2cbb8:	andeq	lr, r0, r8, lsr #14
   2cbbc:	andeq	fp, r0, r0, asr #10
   2cbc0:	ldr	r0, [pc, #108]	; 2cc34 <g_unichar_xdigit_value@plt+0x18dd0>
   2cbc4:	push	{r3, r4, r5, lr}
   2cbc8:	add	r0, pc, r0
   2cbcc:	dmb	sy
   2cbd0:	ldr	r4, [r0, #48]	; 0x30
   2cbd4:	dmb	sy
   2cbd8:	cmp	r4, #0
   2cbdc:	beq	2cbf0 <g_unichar_xdigit_value@plt+0x18d8c>
   2cbe0:	ldr	r3, [pc, #80]	; 2cc38 <g_unichar_xdigit_value@plt+0x18dd4>
   2cbe4:	add	r3, pc, r3
   2cbe8:	ldr	r0, [r3, #48]	; 0x30
   2cbec:	pop	{r3, r4, r5, pc}
   2cbf0:	add	r5, r0, #48	; 0x30
   2cbf4:	mov	r0, r5
   2cbf8:	bl	138ac <g_once_init_enter@plt>
   2cbfc:	cmp	r0, #0
   2cc00:	beq	2cbe0 <g_unichar_xdigit_value@plt+0x18d7c>
   2cc04:	ldr	r2, [pc, #48]	; 2cc3c <g_unichar_xdigit_value@plt+0x18dd8>
   2cc08:	mov	r3, r4
   2cc0c:	ldr	r1, [pc, #44]	; 2cc40 <g_unichar_xdigit_value@plt+0x18ddc>
   2cc10:	mov	r0, #80	; 0x50
   2cc14:	add	r2, pc, r2
   2cc18:	add	r1, pc, r1
   2cc1c:	add	r2, r2, #72	; 0x48
   2cc20:	bl	13438 <g_type_register_static@plt>
   2cc24:	mov	r1, r0
   2cc28:	mov	r0, r5
   2cc2c:	bl	13bac <g_once_init_leave@plt>
   2cc30:	b	2cbe0 <g_unichar_xdigit_value@plt+0x18d7c>
   2cc34:	ldrdeq	r4, [r2], -r8
   2cc38:			; <UNDEFINED> instruction: 0x000249bc
   2cc3c:	andeq	r3, r2, ip, lsl #30
   2cc40:	andeq	lr, r0, ip, asr #20
   2cc44:	push	{r4, r5, r6, r7, r8, r9, lr}
   2cc48:	sub	sp, sp, #20
   2cc4c:	mov	r7, r1
   2cc50:	mov	r6, r2
   2cc54:	ldr	r5, [sp, #48]	; 0x30
   2cc58:	mov	r8, r0
   2cc5c:	ldr	r4, [sp, #52]	; 0x34
   2cc60:	mov	r9, r3
   2cc64:	bl	2cbc0 <g_unichar_xdigit_value@plt+0x18d5c>
   2cc68:	str	r9, [sp]
   2cc6c:	mov	r1, r8
   2cc70:	mov	r2, r7
   2cc74:	mov	r3, r6
   2cc78:	str	r5, [sp, #4]
   2cc7c:	str	r4, [sp, #8]
   2cc80:	bl	2bef4 <g_unichar_xdigit_value@plt+0x18090>
   2cc84:	add	sp, sp, #20
   2cc88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2cc8c:	ldr	r3, [pc, #44]	; 2ccc0 <g_unichar_xdigit_value@plt+0x18e5c>
   2cc90:	ldr	r2, [pc, #44]	; 2ccc4 <g_unichar_xdigit_value@plt+0x18e60>
   2cc94:	add	r3, pc, r3
   2cc98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cc9c:	sub	sp, sp, #60	; 0x3c
   2cca0:	ldr	r2, [r3, r2]
   2cca4:	ldr	r0, [r2]
   2cca8:	str	r2, [sp, #8]
   2ccac:	cmp	r0, #0
   2ccb0:	beq	2d06c <g_unichar_xdigit_value@plt+0x19208>
   2ccb4:	add	sp, sp, #60	; 0x3c
   2ccb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ccbc:	b	133f0 <g_object_ref@plt>
   2ccc0:	andeq	r4, r2, r4, ror #6
   2ccc4:			; <UNDEFINED> instruction: 0x000003bc
   2ccc8:	muleq	r0, r8, r3
   2cccc:	ldrdeq	lr, [r0], -r0
   2ccd0:	andeq	lr, r0, r8, asr #11
   2ccd4:			; <UNDEFINED> instruction: 0x0000e5b8
   2ccd8:	andeq	ip, r0, r0, ror #26
   2ccdc:	muleq	r0, r0, r5
   2cce0:	andeq	lr, r0, r0, lsl #11
   2cce4:	andeq	lr, r0, r0, ror r5
   2cce8:	andeq	lr, r0, r0, ror #10
   2ccec:	andeq	lr, r0, r0, asr r5
   2ccf0:	andeq	lr, r0, r0, asr #10
   2ccf4:	andeq	lr, r0, r0, lsr r5
   2ccf8:	andeq	lr, r0, r4, lsr #10
   2ccfc:	andeq	lr, r0, r8, lsl r5
   2cd00:	andeq	lr, r0, ip, lsl #10
   2cd04:	andeq	lr, r0, r0, lsl #10
   2cd08:	strdeq	lr, [r0], -r8
   2cd0c:	strdeq	lr, [r0], -r4
   2cd10:	andeq	lr, r0, r4, ror #9
   2cd14:	andeq	lr, r0, ip, ror #9
   2cd18:	andeq	lr, r0, r0, ror #9
   2cd1c:	andeq	lr, r0, ip, ror #9
   2cd20:	strdeq	lr, [r0], -r8
   2cd24:	andeq	lr, r0, r4, ror #9
   2cd28:	andeq	lr, r0, ip, asr #9
   2cd2c:	andeq	ip, r0, ip, ror r1
   2cd30:			; <UNDEFINED> instruction: 0x0000e4b4
   2cd34:	andeq	lr, r0, ip, asr #8
   2cd38:	andeq	lr, r0, r8, lsr #9
   2cd3c:	andeq	lr, r0, r8, asr #8
   2cd40:	muleq	r0, r8, r4
   2cd44:	muleq	r0, ip, r6
   2cd48:	andeq	lr, r0, r0, lsl #9
   2cd4c:	andeq	ip, r0, ip, ror #1
   2cd50:	andeq	lr, r0, r4, asr r4
   2cd54:			; <UNDEFINED> instruction: 0x0000e3bc
   2cd58:	andeq	lr, r0, ip, asr #8
   2cd5c:			; <UNDEFINED> instruction: 0x0000e3b8
   2cd60:	andeq	lr, r0, ip, lsr r4
   2cd64:	andeq	lr, r0, ip, asr #8
   2cd68:	andeq	lr, r0, r8, lsr r4
   2cd6c:	andeq	lr, r0, r0, lsr #8
   2cd70:	andeq	ip, r0, r4, asr r0
   2cd74:	andeq	lr, r0, r8, lsl #8
   2cd78:	andeq	lr, r0, r4, lsr #6
   2cd7c:	strdeq	lr, [r0], -ip
   2cd80:	andeq	lr, r0, r0, lsr #6
   2cd84:	andeq	lr, r0, r8, ror #7
   2cd88:	strdeq	lr, [r0], -ip
   2cd8c:	andeq	lr, r0, r0, ror #7
   2cd90:	andeq	lr, r0, r8, asr #7
   2cd94:			; <UNDEFINED> instruction: 0x0000bfbc
   2cd98:	andeq	lr, r0, r4, asr #7
   2cd9c:	andeq	lr, r0, ip, lsl #5
   2cda0:			; <UNDEFINED> instruction: 0x0000e3bc
   2cda4:	andeq	lr, r0, r8, lsl #5
   2cda8:	andeq	lr, r0, r8, lsr #7
   2cdac:	andeq	lr, r0, r4, asr #7
   2cdb0:	andeq	lr, r0, r8, lsr #7
   2cdb4:	andeq	lr, r0, ip, lsl #7
   2cdb8:	andeq	fp, r0, r4, lsr #30
   2cdbc:	andeq	lr, r0, ip, lsl #7
   2cdc0:	strdeq	lr, [r0], -r4
   2cdc4:	andeq	lr, r0, ip, lsl #7
   2cdc8:	strdeq	lr, [r0], -r0
   2cdcc:	andeq	lr, r0, r8, ror r3
   2cdd0:	andeq	lr, r0, r4, lsl #7
   2cdd4:	andeq	lr, r0, ip, ror #6
   2cdd8:	andeq	lr, r0, r8, asr #6
   2cddc:	andeq	fp, r0, ip, lsl #29
   2cde0:	andeq	lr, r0, r8, asr #6
   2cde4:	andeq	lr, r0, ip, asr r1
   2cde8:	andeq	lr, r0, r4, asr #6
   2cdec:	andeq	lr, r0, r8, asr r1
   2cdf0:	andeq	lr, r0, r0, lsr r3
   2cdf4:	andeq	lr, r0, r0, lsr r3
   2cdf8:	andeq	lr, r0, r0, lsr #6
   2cdfc:	andeq	lr, r0, r0, lsl #6
   2ce00:	strdeq	fp, [r0], -r4
   2ce04:	andeq	lr, r0, ip, ror #5
   2ce08:	andeq	lr, r0, r4, asr #1
   2ce0c:	andeq	lr, r0, r0, ror #5
   2ce10:	andeq	lr, r0, r0, asr #1
   2ce14:	andeq	lr, r0, ip, asr #5
   2ce18:	ldrdeq	lr, [r0], -r4
   2ce1c:	andeq	lr, r0, r0, asr #5
   2ce20:	andeq	lr, r0, r8, lsr #5
   2ce24:	andeq	fp, r0, ip, asr sp
   2ce28:	muleq	r0, r4, r2
   2ce2c:	andeq	lr, r0, ip, lsr #32
   2ce30:	andeq	lr, r0, ip, lsl #5
   2ce34:	andeq	lr, r0, r8, lsr #32
   2ce38:	andeq	lr, r0, r8, ror r2
   2ce3c:	andeq	lr, r0, ip, lsl #5
   2ce40:	andeq	lr, r0, ip, ror r2
   2ce44:	andeq	lr, r0, r0, ror #4
   2ce48:	andeq	fp, r0, r4, asr #25
   2ce4c:	andeq	lr, r0, r8, asr #4
   2ce50:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   2ce54:	andeq	lr, r0, ip, lsr r2
   2ce58:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   2ce5c:	andeq	lr, r0, r8, lsr #4
   2ce60:	andeq	lr, r0, r0, lsr r2
   2ce64:	andeq	lr, r0, ip, lsl r2
   2ce68:	andeq	lr, r0, r4, lsl #4
   2ce6c:	andeq	fp, r0, ip, lsr #24
   2ce70:	strdeq	lr, [r0], -r0
   2ce74:	strdeq	sp, [r0], -ip
   2ce78:	andeq	lr, r0, r4, ror #3
   2ce7c:	strdeq	sp, [r0], -r8
   2ce80:	ldrdeq	lr, [r0], -r0
   2ce84:	ldrdeq	lr, [r0], -r8
   2ce88:	andeq	lr, r0, r8, asr #3
   2ce8c:			; <UNDEFINED> instruction: 0x0000e1b0
   2ce90:	muleq	r0, r4, fp
   2ce94:	muleq	r0, r8, r1
   2ce98:	andeq	sp, r0, r4, ror #28
   2ce9c:	andeq	lr, r0, ip, lsl #3
   2cea0:	andeq	sp, r0, r0, ror #28
   2cea4:	andeq	lr, r0, r8, ror r1
   2cea8:	strheq	pc, [r0], -r4	; <UNPREDICTABLE>
   2ceac:	andeq	lr, r0, r8, asr #9
   2ceb0:	andeq	fp, r0, r4, lsl #22
   2ceb4:	andeq	lr, r0, r8, lsr #2
   2ceb8:	ldrdeq	sp, [r0], -r4
   2cebc:	andeq	lr, r0, ip, lsl r1
   2cec0:	ldrdeq	sp, [r0], -r0
   2cec4:	andeq	lr, r0, r8, lsl #2
   2cec8:	andeq	lr, r0, ip, lsl #2
   2cecc:	strdeq	lr, [r0], -ip
   2ced0:	andeq	lr, r0, r4, ror #1
   2ced4:	andeq	fp, r0, ip, ror #20
   2ced8:	andeq	lr, r0, ip, asr #1
   2cedc:	andeq	sp, r0, ip, lsr sp
   2cee0:	andeq	lr, r0, r0, asr #1
   2cee4:	andeq	sp, r0, r8, lsr sp
   2cee8:	andeq	lr, r0, ip, lsr #1
   2ceec:	strheq	lr, [r0], -r0
   2cef0:	andeq	lr, r0, r0, lsr #1
   2cef4:	andeq	lr, r0, r8, lsl #1
   2cef8:	ldrdeq	fp, [r0], -r4
   2cefc:	andeq	lr, r0, r0, ror r0
   2cf00:	andeq	sp, r0, r4, lsr #25
   2cf04:	andeq	lr, r0, r4, rrx
   2cf08:	andeq	sp, r0, r0, lsr #25
   2cf0c:	andeq	lr, r0, r0, asr r0
   2cf10:	andeq	lr, r0, r4, asr r0
   2cf14:	andeq	lr, r0, r4, asr #32
   2cf18:	andeq	lr, r0, ip, lsr #32
   2cf1c:	andeq	fp, r0, ip, lsr r9
   2cf20:	andeq	lr, r0, r4, lsl r0
   2cf24:	andeq	sp, r0, ip, lsl #24
   2cf28:	andeq	lr, r0, ip
   2cf2c:	andeq	sp, r0, r8, lsl #24
   2cf30:	strdeq	sp, [r0], -r8
   2cf34:	andeq	lr, r0, r0, lsl r0
   2cf38:	andeq	lr, r0, r0
   2cf3c:	andeq	sp, r0, r4, ror #31
   2cf40:	andeq	fp, r0, r4, lsr #17
   2cf44:	andeq	sp, r0, ip, asr #31
   2cf48:	andeq	sp, r0, r4, ror fp
   2cf4c:	andeq	sp, r0, r4, asr #31
   2cf50:	andeq	sp, r0, r0, ror fp
   2cf54:			; <UNDEFINED> instruction: 0x0000dfb0
   2cf58:	andeq	sp, r0, ip, asr #27
   2cf5c:	andeq	sp, r0, ip, asr #27
   2cf60:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   2cf64:	andeq	fp, r0, ip, lsl #16
   2cf68:	andeq	sp, r0, r0, ror pc
   2cf6c:	ldrdeq	sp, [r0], -ip
   2cf70:	andeq	sp, r0, r8, ror #30
   2cf74:	ldrdeq	sp, [r0], -r8
   2cf78:	andeq	sp, r0, r4, asr pc
   2cf7c:	andeq	sp, r0, ip, ror #30
   2cf80:	andeq	sp, r0, r8, asr pc
   2cf84:	andeq	sp, r0, ip, lsr pc
   2cf88:	andeq	fp, r0, r4, ror r7
   2cf8c:	andeq	sp, r0, ip, lsr #30
   2cf90:	andeq	sp, r0, r4, asr #20
   2cf94:	andeq	sp, r0, r4, lsr #30
   2cf98:	andeq	sp, r0, r0, asr #20
   2cf9c:	andeq	sp, r0, r0, lsl pc
   2cfa0:	andeq	sp, r0, r8, lsr #30
   2cfa4:	andeq	sp, r0, r0, lsl pc
   2cfa8:	strdeq	sp, [r0], -r4
   2cfac:	ldrdeq	fp, [r0], -ip
   2cfb0:	andeq	sp, r0, r8, ror #29
   2cfb4:	andeq	sp, r0, ip, lsr #19
   2cfb8:	strdeq	sp, [r0], -r0
   2cfbc:	andeq	sp, r0, r8, lsr #19
   2cfc0:	ldrdeq	sp, [r0], -ip
   2cfc4:	andeq	sp, r0, ip, ror #29
   2cfc8:	ldrdeq	sp, [r0], -r4
   2cfcc:			; <UNDEFINED> instruction: 0x0000debc
   2cfd0:	andeq	fp, r0, r4, asr #12
   2cfd4:			; <UNDEFINED> instruction: 0x0000deb4
   2cfd8:	andeq	sp, r0, r4, lsl r9
   2cfdc:	andeq	sp, r0, ip, lsr #29
   2cfe0:	andeq	sp, r0, r0, lsl r9
   2cfe4:	muleq	r0, r8, lr
   2cfe8:	andeq	sp, r0, r0, lsr #29
   2cfec:	muleq	r0, r0, lr
   2cff0:	andeq	sp, r0, r8, ror lr
   2cff4:	andeq	fp, r0, ip, lsr #11
   2cff8:	andeq	sp, r0, ip, asr lr
   2cffc:	andeq	sp, r0, ip, ror r8
   2d000:	andeq	sp, r0, r0, asr lr
   2d004:	andeq	sp, r0, r8, ror r8
   2d008:	andeq	sp, r0, r0, asr #28
   2d00c:	andeq	sp, r0, r8, asr #28
   2d010:	andeq	sp, r0, r0, lsr lr
   2d014:	andeq	sp, r0, r8, lsl lr
   2d018:	andeq	fp, r0, r4, lsl r5
   2d01c:	andeq	sp, r0, ip, lsl #28
   2d020:	andeq	sp, r0, r4, ror #15
   2d024:	andeq	sp, r0, r8, lsl #28
   2d028:	andeq	sp, r0, r0, ror #15
   2d02c:	andeq	sp, r0, ip, lsl lr
   2d030:	andeq	lr, r0, r4, lsr sl
   2d034:	andeq	sp, r0, r8, asr #27
   2d038:	andeq	fp, r0, r4, lsl #9
   2d03c:	andeq	sp, r0, r4, lsr #27
   2d040:	andeq	sp, r0, r4, asr r7
   2d044:	andeq	sp, r0, r4, lsr #27
   2d048:	andeq	sp, r0, r0, asr r7
   2d04c:	muleq	r0, r0, sp
   2d050:	ldrdeq	sp, [r0], -r8
   2d054:	andeq	sp, r0, r8, lsl #27
   2d058:	andeq	sp, r0, r4, ror #26
   2d05c:	andeq	fp, r0, ip, ror #7
   2d060:	andeq	sp, r0, ip, asr #26
   2d064:			; <UNDEFINED> instruction: 0x0000d6bc
   2d068:	andeq	sp, r0, ip, asr #26
   2d06c:	bl	2b808 <g_unichar_xdigit_value@plt+0x179a4>
   2d070:	ldr	r3, [sp, #8]
   2d074:	mov	r5, r0
   2d078:	ldr	r0, [r3]
   2d07c:	cmp	r0, #0
   2d080:	beq	2d088 <g_unichar_xdigit_value@plt+0x19224>
   2d084:	bl	13b94 <g_object_unref@plt>
   2d088:	ldr	r4, [pc, #-968]	; 2ccc8 <g_unichar_xdigit_value@plt+0x18e64>
   2d08c:	ldr	r3, [sp, #8]
   2d090:	add	r4, pc, r4
   2d094:	ldr	r1, [pc, #-976]	; 2cccc <g_unichar_xdigit_value@plt+0x18e68>
   2d098:	mov	r0, r4
   2d09c:	add	r1, pc, r1
   2d0a0:	str	r5, [r3]
   2d0a4:	bl	13c9c <g_dgettext@plt>
   2d0a8:	ldr	r1, [pc, #-992]	; 2ccd0 <g_unichar_xdigit_value@plt+0x18e6c>
   2d0ac:	add	r1, pc, r1
   2d0b0:	mov	r2, r0
   2d0b4:	mov	r0, r5
   2d0b8:	bl	2bc90 <g_unichar_xdigit_value@plt+0x17e2c>
   2d0bc:	ldr	r3, [sp, #8]
   2d0c0:	ldr	r1, [pc, #-1012]	; 2ccd4 <g_unichar_xdigit_value@plt+0x18e70>
   2d0c4:	add	r1, pc, r1
   2d0c8:	ldr	r5, [r3]
   2d0cc:	str	r0, [sp, #44]	; 0x2c
   2d0d0:	mov	r0, r4
   2d0d4:	bl	13c9c <g_dgettext@plt>
   2d0d8:	ldr	r1, [pc, #-1032]	; 2ccd8 <g_unichar_xdigit_value@plt+0x18e74>
   2d0dc:	add	r1, pc, r1
   2d0e0:	mov	r2, r0
   2d0e4:	mov	r0, r5
   2d0e8:	bl	2bc90 <g_unichar_xdigit_value@plt+0x17e2c>
   2d0ec:	ldr	r3, [sp, #8]
   2d0f0:	ldr	r1, [pc, #-1052]	; 2ccdc <g_unichar_xdigit_value@plt+0x18e78>
   2d0f4:	add	r1, pc, r1
   2d0f8:	ldr	r5, [r3]
   2d0fc:	str	r0, [sp, #12]
   2d100:	mov	r0, r4
   2d104:	bl	13c9c <g_dgettext@plt>
   2d108:	ldr	r1, [pc, #-1072]	; 2cce0 <g_unichar_xdigit_value@plt+0x18e7c>
   2d10c:	add	r1, pc, r1
   2d110:	mov	r2, r0
   2d114:	mov	r0, r5
   2d118:	bl	2bc90 <g_unichar_xdigit_value@plt+0x17e2c>
   2d11c:	ldr	r3, [sp, #8]
   2d120:	ldr	r1, [pc, #-1092]	; 2cce4 <g_unichar_xdigit_value@plt+0x18e80>
   2d124:	add	r1, pc, r1
   2d128:	ldr	r5, [r3]
   2d12c:	str	r0, [sp, #36]	; 0x24
   2d130:	mov	r0, r4
   2d134:	bl	13c9c <g_dgettext@plt>
   2d138:	ldr	r1, [pc, #-1112]	; 2cce8 <g_unichar_xdigit_value@plt+0x18e84>
   2d13c:	add	r1, pc, r1
   2d140:	mov	r2, r0
   2d144:	mov	r0, r5
   2d148:	bl	2bc90 <g_unichar_xdigit_value@plt+0x17e2c>
   2d14c:	ldr	r3, [sp, #8]
   2d150:	ldr	r1, [pc, #-1132]	; 2ccec <g_unichar_xdigit_value@plt+0x18e88>
   2d154:	add	r1, pc, r1
   2d158:	ldr	r5, [r3]
   2d15c:	str	r0, [sp, #24]
   2d160:	mov	r0, r4
   2d164:	bl	13c9c <g_dgettext@plt>
   2d168:	ldr	r1, [pc, #-1152]	; 2ccf0 <g_unichar_xdigit_value@plt+0x18e8c>
   2d16c:	add	r1, pc, r1
   2d170:	mov	r2, r0
   2d174:	mov	r0, r5
   2d178:	bl	2bc90 <g_unichar_xdigit_value@plt+0x17e2c>
   2d17c:	ldr	r3, [sp, #8]
   2d180:	ldr	r1, [pc, #-1172]	; 2ccf4 <g_unichar_xdigit_value@plt+0x18e90>
   2d184:	add	r1, pc, r1
   2d188:	ldr	r5, [r3]
   2d18c:	str	r0, [sp, #32]
   2d190:	mov	r0, r4
   2d194:	bl	13c9c <g_dgettext@plt>
   2d198:	ldr	r1, [pc, #-1192]	; 2ccf8 <g_unichar_xdigit_value@plt+0x18e94>
   2d19c:	add	r1, pc, r1
   2d1a0:	mov	r2, r0
   2d1a4:	mov	r0, r5
   2d1a8:	bl	2bc90 <g_unichar_xdigit_value@plt+0x17e2c>
   2d1ac:	ldr	r3, [sp, #8]
   2d1b0:	ldr	r1, [pc, #-1212]	; 2ccfc <g_unichar_xdigit_value@plt+0x18e98>
   2d1b4:	add	r1, pc, r1
   2d1b8:	ldr	r5, [r3]
   2d1bc:	str	r0, [sp, #28]
   2d1c0:	mov	r0, r4
   2d1c4:	bl	13c9c <g_dgettext@plt>
   2d1c8:	ldr	r1, [pc, #-1232]	; 2cd00 <g_unichar_xdigit_value@plt+0x18e9c>
   2d1cc:	add	r1, pc, r1
   2d1d0:	mov	r2, r0
   2d1d4:	mov	r0, r5
   2d1d8:	bl	2bc90 <g_unichar_xdigit_value@plt+0x17e2c>
   2d1dc:	ldr	r3, [sp, #8]
   2d1e0:	ldr	r1, [pc, #-1252]	; 2cd04 <g_unichar_xdigit_value@plt+0x18ea0>
   2d1e4:	add	r1, pc, r1
   2d1e8:	ldr	r5, [r3]
   2d1ec:	str	r0, [sp, #40]	; 0x28
   2d1f0:	mov	r0, r4
   2d1f4:	bl	13c9c <g_dgettext@plt>
   2d1f8:	ldr	r1, [pc, #-1272]	; 2cd08 <g_unichar_xdigit_value@plt+0x18ea4>
   2d1fc:	add	r1, pc, r1
   2d200:	mov	r2, r0
   2d204:	mov	r0, r5
   2d208:	bl	2bc90 <g_unichar_xdigit_value@plt+0x17e2c>
   2d20c:	ldr	r1, [pc, #-1288]	; 2cd0c <g_unichar_xdigit_value@plt+0x18ea8>
   2d210:	add	r1, pc, r1
   2d214:	mov	r6, r0
   2d218:	mov	r0, r4
   2d21c:	bl	13c9c <g_dgettext@plt>
   2d220:	ldr	r1, [pc, #-1304]	; 2cd10 <g_unichar_xdigit_value@plt+0x18eac>
   2d224:	ldr	r2, [pc, #-1304]	; 2cd14 <g_unichar_xdigit_value@plt+0x18eb0>
   2d228:	add	r1, pc, r1
   2d22c:	add	r2, pc, r2
   2d230:	mov	r5, r0
   2d234:	mov	r0, #0
   2d238:	bl	13b04 <g_dpgettext2@plt>
   2d23c:	ldr	r1, [pc, #-1324]	; 2cd18 <g_unichar_xdigit_value@plt+0x18eb4>
   2d240:	ldr	r2, [pc, #-1324]	; 2cd1c <g_unichar_xdigit_value@plt+0x18eb8>
   2d244:	add	r1, pc, r1
   2d248:	add	r2, pc, r2
   2d24c:	mov	r4, r0
   2d250:	mov	r0, #0
   2d254:	bl	13b04 <g_dpgettext2@plt>
   2d258:	ldr	ip, [pc, #-1344]	; 2cd20 <g_unichar_xdigit_value@plt+0x18ebc>
   2d25c:	ldr	r3, [pc, #-1344]	; 2cd24 <g_unichar_xdigit_value@plt+0x18ec0>
   2d260:	mov	r2, r4
   2d264:	add	ip, pc, ip
   2d268:	mov	r1, r5
   2d26c:	add	r3, pc, r3
   2d270:	str	ip, [sp]
   2d274:	str	r0, [sp, #4]
   2d278:	ldr	r0, [pc, #-1368]	; 2cd28 <g_unichar_xdigit_value@plt+0x18ec4>
   2d27c:	add	r0, pc, r0
   2d280:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d284:	mov	r4, r0
   2d288:	ldr	r0, [sp, #44]	; 0x2c
   2d28c:	mov	r1, r4
   2d290:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d294:	cmp	r4, #0
   2d298:	beq	2d2a4 <g_unichar_xdigit_value@plt+0x19440>
   2d29c:	mov	r0, r4
   2d2a0:	bl	13b94 <g_object_unref@plt>
   2d2a4:	ldr	r0, [pc, #-1408]	; 2cd2c <g_unichar_xdigit_value@plt+0x18ec8>
   2d2a8:	ldr	r1, [pc, #-1408]	; 2cd30 <g_unichar_xdigit_value@plt+0x18ecc>
   2d2ac:	add	r0, pc, r0
   2d2b0:	add	r1, pc, r1
   2d2b4:	bl	13c9c <g_dgettext@plt>
   2d2b8:	ldr	r1, [pc, #-1420]	; 2cd34 <g_unichar_xdigit_value@plt+0x18ed0>
   2d2bc:	ldr	r2, [pc, #-1420]	; 2cd38 <g_unichar_xdigit_value@plt+0x18ed4>
   2d2c0:	add	r1, pc, r1
   2d2c4:	add	r2, pc, r2
   2d2c8:	mov	r5, r0
   2d2cc:	mov	r0, #0
   2d2d0:	bl	13b04 <g_dpgettext2@plt>
   2d2d4:	ldr	r1, [pc, #-1440]	; 2cd3c <g_unichar_xdigit_value@plt+0x18ed8>
   2d2d8:	ldr	r2, [pc, #-1440]	; 2cd40 <g_unichar_xdigit_value@plt+0x18edc>
   2d2dc:	add	r1, pc, r1
   2d2e0:	add	r2, pc, r2
   2d2e4:	mov	r4, r0
   2d2e8:	mov	r0, #0
   2d2ec:	bl	13b04 <g_dpgettext2@plt>
   2d2f0:	ldr	r3, [pc, #-1460]	; 2cd44 <g_unichar_xdigit_value@plt+0x18ee0>
   2d2f4:	mov	r2, r4
   2d2f8:	mov	r1, r5
   2d2fc:	add	r3, pc, r3
   2d300:	str	r3, [sp]
   2d304:	str	r0, [sp, #4]
   2d308:	ldr	r0, [pc, #-1480]	; 2cd48 <g_unichar_xdigit_value@plt+0x18ee4>
   2d30c:	add	r0, pc, r0
   2d310:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d314:	mov	r4, r0
   2d318:	ldr	r0, [sp, #44]	; 0x2c
   2d31c:	mov	r1, r4
   2d320:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d324:	cmp	r4, #0
   2d328:	beq	2d334 <g_unichar_xdigit_value@plt+0x194d0>
   2d32c:	mov	r0, r4
   2d330:	bl	13b94 <g_object_unref@plt>
   2d334:	ldr	r0, [pc, #-1520]	; 2cd4c <g_unichar_xdigit_value@plt+0x18ee8>
   2d338:	ldr	r1, [pc, #-1520]	; 2cd50 <g_unichar_xdigit_value@plt+0x18eec>
   2d33c:	add	r0, pc, r0
   2d340:	add	r1, pc, r1
   2d344:	bl	13c9c <g_dgettext@plt>
   2d348:	ldr	r1, [pc, #-1532]	; 2cd54 <g_unichar_xdigit_value@plt+0x18ef0>
   2d34c:	ldr	r2, [pc, #-1532]	; 2cd58 <g_unichar_xdigit_value@plt+0x18ef4>
   2d350:	add	r1, pc, r1
   2d354:	add	r2, pc, r2
   2d358:	mov	r5, r0
   2d35c:	mov	r0, #0
   2d360:	bl	13b04 <g_dpgettext2@plt>
   2d364:	ldr	r1, [pc, #-1552]	; 2cd5c <g_unichar_xdigit_value@plt+0x18ef8>
   2d368:	ldr	r2, [pc, #-1552]	; 2cd60 <g_unichar_xdigit_value@plt+0x18efc>
   2d36c:	add	r1, pc, r1
   2d370:	add	r2, pc, r2
   2d374:	mov	r4, r0
   2d378:	mov	r0, #0
   2d37c:	bl	13b04 <g_dpgettext2@plt>
   2d380:	ldr	ip, [pc, #-1572]	; 2cd64 <g_unichar_xdigit_value@plt+0x18f00>
   2d384:	ldr	r3, [pc, #-1572]	; 2cd68 <g_unichar_xdigit_value@plt+0x18f04>
   2d388:	mov	r2, r4
   2d38c:	add	ip, pc, ip
   2d390:	mov	r1, r5
   2d394:	add	r3, pc, r3
   2d398:	str	ip, [sp]
   2d39c:	str	r0, [sp, #4]
   2d3a0:	ldr	r0, [pc, #-1596]	; 2cd6c <g_unichar_xdigit_value@plt+0x18f08>
   2d3a4:	add	r0, pc, r0
   2d3a8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d3ac:	mov	r4, r0
   2d3b0:	ldr	r0, [sp, #44]	; 0x2c
   2d3b4:	mov	r1, r4
   2d3b8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d3bc:	cmp	r4, #0
   2d3c0:	beq	2d3cc <g_unichar_xdigit_value@plt+0x19568>
   2d3c4:	mov	r0, r4
   2d3c8:	bl	13b94 <g_object_unref@plt>
   2d3cc:	ldr	r0, [pc, #-1636]	; 2cd70 <g_unichar_xdigit_value@plt+0x18f0c>
   2d3d0:	ldr	r1, [pc, #-1636]	; 2cd74 <g_unichar_xdigit_value@plt+0x18f10>
   2d3d4:	add	r0, pc, r0
   2d3d8:	add	r1, pc, r1
   2d3dc:	bl	13c9c <g_dgettext@plt>
   2d3e0:	ldr	r1, [pc, #-1648]	; 2cd78 <g_unichar_xdigit_value@plt+0x18f14>
   2d3e4:	ldr	r2, [pc, #-1648]	; 2cd7c <g_unichar_xdigit_value@plt+0x18f18>
   2d3e8:	add	r1, pc, r1
   2d3ec:	add	r2, pc, r2
   2d3f0:	mov	r5, r0
   2d3f4:	mov	r0, #0
   2d3f8:	bl	13b04 <g_dpgettext2@plt>
   2d3fc:	ldr	r1, [pc, #-1668]	; 2cd80 <g_unichar_xdigit_value@plt+0x18f1c>
   2d400:	ldr	r2, [pc, #-1668]	; 2cd84 <g_unichar_xdigit_value@plt+0x18f20>
   2d404:	add	r1, pc, r1
   2d408:	add	r2, pc, r2
   2d40c:	mov	r4, r0
   2d410:	mov	r0, #0
   2d414:	bl	13b04 <g_dpgettext2@plt>
   2d418:	ldr	ip, [pc, #-1688]	; 2cd88 <g_unichar_xdigit_value@plt+0x18f24>
   2d41c:	ldr	r3, [pc, #-1688]	; 2cd8c <g_unichar_xdigit_value@plt+0x18f28>
   2d420:	mov	r2, r4
   2d424:	add	ip, pc, ip
   2d428:	mov	r1, r5
   2d42c:	add	r3, pc, r3
   2d430:	str	ip, [sp]
   2d434:	str	r0, [sp, #4]
   2d438:	ldr	r0, [pc, #-1712]	; 2cd90 <g_unichar_xdigit_value@plt+0x18f2c>
   2d43c:	add	r0, pc, r0
   2d440:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d444:	mov	r4, r0
   2d448:	ldr	r0, [sp, #12]
   2d44c:	mov	r1, r4
   2d450:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d454:	cmp	r4, #0
   2d458:	beq	2d464 <g_unichar_xdigit_value@plt+0x19600>
   2d45c:	mov	r0, r4
   2d460:	bl	13b94 <g_object_unref@plt>
   2d464:	ldr	r0, [pc, #-1752]	; 2cd94 <g_unichar_xdigit_value@plt+0x18f30>
   2d468:	ldr	r1, [pc, #-1752]	; 2cd98 <g_unichar_xdigit_value@plt+0x18f34>
   2d46c:	add	r0, pc, r0
   2d470:	add	r1, pc, r1
   2d474:	bl	13c9c <g_dgettext@plt>
   2d478:	ldr	r1, [pc, #-1764]	; 2cd9c <g_unichar_xdigit_value@plt+0x18f38>
   2d47c:	ldr	r2, [pc, #-1764]	; 2cda0 <g_unichar_xdigit_value@plt+0x18f3c>
   2d480:	add	r1, pc, r1
   2d484:	add	r2, pc, r2
   2d488:	mov	r5, r0
   2d48c:	mov	r0, #0
   2d490:	bl	13b04 <g_dpgettext2@plt>
   2d494:	ldr	r1, [pc, #-1784]	; 2cda4 <g_unichar_xdigit_value@plt+0x18f40>
   2d498:	ldr	r2, [pc, #-1784]	; 2cda8 <g_unichar_xdigit_value@plt+0x18f44>
   2d49c:	add	r1, pc, r1
   2d4a0:	add	r2, pc, r2
   2d4a4:	mov	r4, r0
   2d4a8:	mov	r0, #0
   2d4ac:	bl	13b04 <g_dpgettext2@plt>
   2d4b0:	ldr	ip, [pc, #-1804]	; 2cdac <g_unichar_xdigit_value@plt+0x18f48>
   2d4b4:	ldr	r3, [pc, #-1804]	; 2cdb0 <g_unichar_xdigit_value@plt+0x18f4c>
   2d4b8:	mov	r2, r4
   2d4bc:	add	ip, pc, ip
   2d4c0:	mov	r1, r5
   2d4c4:	add	r3, pc, r3
   2d4c8:	str	ip, [sp]
   2d4cc:	str	r0, [sp, #4]
   2d4d0:	ldr	r0, [pc, #-1828]	; 2cdb4 <g_unichar_xdigit_value@plt+0x18f50>
   2d4d4:	add	r0, pc, r0
   2d4d8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d4dc:	mov	r4, r0
   2d4e0:	ldr	r0, [sp, #12]
   2d4e4:	mov	r1, r4
   2d4e8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d4ec:	cmp	r4, #0
   2d4f0:	beq	2d4fc <g_unichar_xdigit_value@plt+0x19698>
   2d4f4:	mov	r0, r4
   2d4f8:	bl	13b94 <g_object_unref@plt>
   2d4fc:	ldr	r0, [pc, #-1868]	; 2cdb8 <g_unichar_xdigit_value@plt+0x18f54>
   2d500:	ldr	r1, [pc, #-1868]	; 2cdbc <g_unichar_xdigit_value@plt+0x18f58>
   2d504:	add	r0, pc, r0
   2d508:	add	r1, pc, r1
   2d50c:	bl	13c9c <g_dgettext@plt>
   2d510:	ldr	r1, [pc, #-1880]	; 2cdc0 <g_unichar_xdigit_value@plt+0x18f5c>
   2d514:	ldr	r2, [pc, #-1880]	; 2cdc4 <g_unichar_xdigit_value@plt+0x18f60>
   2d518:	add	r1, pc, r1
   2d51c:	add	r2, pc, r2
   2d520:	mov	r5, r0
   2d524:	mov	r0, #0
   2d528:	bl	13b04 <g_dpgettext2@plt>
   2d52c:	ldr	r1, [pc, #-1900]	; 2cdc8 <g_unichar_xdigit_value@plt+0x18f64>
   2d530:	ldr	r2, [pc, #-1900]	; 2cdcc <g_unichar_xdigit_value@plt+0x18f68>
   2d534:	add	r1, pc, r1
   2d538:	add	r2, pc, r2
   2d53c:	mov	r4, r0
   2d540:	mov	r0, #0
   2d544:	bl	13b04 <g_dpgettext2@plt>
   2d548:	ldr	ip, [pc, #-1920]	; 2cdd0 <g_unichar_xdigit_value@plt+0x18f6c>
   2d54c:	ldr	r3, [pc, #-1920]	; 2cdd4 <g_unichar_xdigit_value@plt+0x18f70>
   2d550:	mov	r2, r4
   2d554:	add	ip, pc, ip
   2d558:	mov	r1, r5
   2d55c:	add	r3, pc, r3
   2d560:	str	ip, [sp]
   2d564:	str	r0, [sp, #4]
   2d568:	ldr	r0, [pc, #-1944]	; 2cdd8 <g_unichar_xdigit_value@plt+0x18f74>
   2d56c:	add	r0, pc, r0
   2d570:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d574:	mov	r4, r0
   2d578:	ldr	r0, [sp, #12]
   2d57c:	mov	r1, r4
   2d580:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d584:	cmp	r4, #0
   2d588:	beq	2d594 <g_unichar_xdigit_value@plt+0x19730>
   2d58c:	mov	r0, r4
   2d590:	bl	13b94 <g_object_unref@plt>
   2d594:	ldr	r0, [pc, #-1984]	; 2cddc <g_unichar_xdigit_value@plt+0x18f78>
   2d598:	ldr	r1, [pc, #-1984]	; 2cde0 <g_unichar_xdigit_value@plt+0x18f7c>
   2d59c:	add	r0, pc, r0
   2d5a0:	add	r1, pc, r1
   2d5a4:	bl	13c9c <g_dgettext@plt>
   2d5a8:	ldr	r1, [pc, #-1996]	; 2cde4 <g_unichar_xdigit_value@plt+0x18f80>
   2d5ac:	ldr	r2, [pc, #-1996]	; 2cde8 <g_unichar_xdigit_value@plt+0x18f84>
   2d5b0:	add	r1, pc, r1
   2d5b4:	add	r2, pc, r2
   2d5b8:	mov	r5, r0
   2d5bc:	mov	r0, #0
   2d5c0:	bl	13b04 <g_dpgettext2@plt>
   2d5c4:	ldr	r1, [pc, #-2016]	; 2cdec <g_unichar_xdigit_value@plt+0x18f88>
   2d5c8:	ldr	r2, [pc, #-2016]	; 2cdf0 <g_unichar_xdigit_value@plt+0x18f8c>
   2d5cc:	add	r1, pc, r1
   2d5d0:	add	r2, pc, r2
   2d5d4:	mov	r4, r0
   2d5d8:	mov	r0, #0
   2d5dc:	bl	13b04 <g_dpgettext2@plt>
   2d5e0:	ldr	ip, [pc, #-2036]	; 2cdf4 <g_unichar_xdigit_value@plt+0x18f90>
   2d5e4:	ldr	r3, [pc, #-2036]	; 2cdf8 <g_unichar_xdigit_value@plt+0x18f94>
   2d5e8:	mov	r2, r4
   2d5ec:	add	ip, pc, ip
   2d5f0:	mov	r1, r5
   2d5f4:	add	r3, pc, r3
   2d5f8:	str	ip, [sp]
   2d5fc:	str	r0, [sp, #4]
   2d600:	ldr	r0, [pc, #-2060]	; 2cdfc <g_unichar_xdigit_value@plt+0x18f98>
   2d604:	add	r0, pc, r0
   2d608:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d60c:	mov	r4, r0
   2d610:	ldr	r0, [sp, #12]
   2d614:	mov	r1, r4
   2d618:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d61c:	cmp	r4, #0
   2d620:	beq	2d62c <g_unichar_xdigit_value@plt+0x197c8>
   2d624:	mov	r0, r4
   2d628:	bl	13b94 <g_object_unref@plt>
   2d62c:	ldr	r0, [pc, #-2100]	; 2ce00 <g_unichar_xdigit_value@plt+0x18f9c>
   2d630:	ldr	r1, [pc, #-2100]	; 2ce04 <g_unichar_xdigit_value@plt+0x18fa0>
   2d634:	add	r0, pc, r0
   2d638:	add	r1, pc, r1
   2d63c:	bl	13c9c <g_dgettext@plt>
   2d640:	ldr	r1, [pc, #-2112]	; 2ce08 <g_unichar_xdigit_value@plt+0x18fa4>
   2d644:	ldr	r2, [pc, #-2112]	; 2ce0c <g_unichar_xdigit_value@plt+0x18fa8>
   2d648:	add	r1, pc, r1
   2d64c:	add	r2, pc, r2
   2d650:	mov	r5, r0
   2d654:	mov	r0, #0
   2d658:	bl	13b04 <g_dpgettext2@plt>
   2d65c:	ldr	r1, [pc, #-2132]	; 2ce10 <g_unichar_xdigit_value@plt+0x18fac>
   2d660:	ldr	r2, [pc, #-2132]	; 2ce14 <g_unichar_xdigit_value@plt+0x18fb0>
   2d664:	add	r1, pc, r1
   2d668:	add	r2, pc, r2
   2d66c:	mov	r4, r0
   2d670:	mov	r0, #0
   2d674:	bl	13b04 <g_dpgettext2@plt>
   2d678:	ldr	ip, [pc, #-2152]	; 2ce18 <g_unichar_xdigit_value@plt+0x18fb4>
   2d67c:	ldr	r3, [pc, #-2152]	; 2ce1c <g_unichar_xdigit_value@plt+0x18fb8>
   2d680:	mov	r2, r4
   2d684:	add	ip, pc, ip
   2d688:	mov	r1, r5
   2d68c:	add	r3, pc, r3
   2d690:	str	ip, [sp]
   2d694:	str	r0, [sp, #4]
   2d698:	ldr	r0, [pc, #-2176]	; 2ce20 <g_unichar_xdigit_value@plt+0x18fbc>
   2d69c:	add	r0, pc, r0
   2d6a0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d6a4:	mov	r4, r0
   2d6a8:	ldr	r0, [sp, #12]
   2d6ac:	mov	r1, r4
   2d6b0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d6b4:	cmp	r4, #0
   2d6b8:	beq	2d6c4 <g_unichar_xdigit_value@plt+0x19860>
   2d6bc:	mov	r0, r4
   2d6c0:	bl	13b94 <g_object_unref@plt>
   2d6c4:	ldr	r0, [pc, #-2216]	; 2ce24 <g_unichar_xdigit_value@plt+0x18fc0>
   2d6c8:	ldr	r1, [pc, #-2216]	; 2ce28 <g_unichar_xdigit_value@plt+0x18fc4>
   2d6cc:	add	r0, pc, r0
   2d6d0:	add	r1, pc, r1
   2d6d4:	bl	13c9c <g_dgettext@plt>
   2d6d8:	ldr	r1, [pc, #-2228]	; 2ce2c <g_unichar_xdigit_value@plt+0x18fc8>
   2d6dc:	ldr	r2, [pc, #-2228]	; 2ce30 <g_unichar_xdigit_value@plt+0x18fcc>
   2d6e0:	add	r1, pc, r1
   2d6e4:	add	r2, pc, r2
   2d6e8:	mov	r5, r0
   2d6ec:	mov	r0, #0
   2d6f0:	bl	13b04 <g_dpgettext2@plt>
   2d6f4:	ldr	r1, [pc, #-2248]	; 2ce34 <g_unichar_xdigit_value@plt+0x18fd0>
   2d6f8:	ldr	r2, [pc, #-2248]	; 2ce38 <g_unichar_xdigit_value@plt+0x18fd4>
   2d6fc:	add	r1, pc, r1
   2d700:	add	r2, pc, r2
   2d704:	mov	r4, r0
   2d708:	mov	r0, #0
   2d70c:	bl	13b04 <g_dpgettext2@plt>
   2d710:	ldr	ip, [pc, #-2268]	; 2ce3c <g_unichar_xdigit_value@plt+0x18fd8>
   2d714:	ldr	r3, [pc, #-2268]	; 2ce40 <g_unichar_xdigit_value@plt+0x18fdc>
   2d718:	mov	r2, r4
   2d71c:	add	ip, pc, ip
   2d720:	mov	r1, r5
   2d724:	add	r3, pc, r3
   2d728:	str	ip, [sp]
   2d72c:	str	r0, [sp, #4]
   2d730:	ldr	r0, [pc, #-2292]	; 2ce44 <g_unichar_xdigit_value@plt+0x18fe0>
   2d734:	add	r0, pc, r0
   2d738:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d73c:	mov	r4, r0
   2d740:	ldr	r0, [sp, #12]
   2d744:	mov	r1, r4
   2d748:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d74c:	cmp	r4, #0
   2d750:	beq	2d75c <g_unichar_xdigit_value@plt+0x198f8>
   2d754:	mov	r0, r4
   2d758:	bl	13b94 <g_object_unref@plt>
   2d75c:	ldr	r0, [pc, #-2332]	; 2ce48 <g_unichar_xdigit_value@plt+0x18fe4>
   2d760:	ldr	r1, [pc, #-2332]	; 2ce4c <g_unichar_xdigit_value@plt+0x18fe8>
   2d764:	add	r0, pc, r0
   2d768:	add	r1, pc, r1
   2d76c:	bl	13c9c <g_dgettext@plt>
   2d770:	ldr	r1, [pc, #-2344]	; 2ce50 <g_unichar_xdigit_value@plt+0x18fec>
   2d774:	ldr	r2, [pc, #-2344]	; 2ce54 <g_unichar_xdigit_value@plt+0x18ff0>
   2d778:	add	r1, pc, r1
   2d77c:	add	r2, pc, r2
   2d780:	mov	r5, r0
   2d784:	mov	r0, #0
   2d788:	bl	13b04 <g_dpgettext2@plt>
   2d78c:	ldr	r1, [pc, #-2364]	; 2ce58 <g_unichar_xdigit_value@plt+0x18ff4>
   2d790:	ldr	r2, [pc, #-2364]	; 2ce5c <g_unichar_xdigit_value@plt+0x18ff8>
   2d794:	add	r1, pc, r1
   2d798:	add	r2, pc, r2
   2d79c:	mov	r4, r0
   2d7a0:	mov	r0, #0
   2d7a4:	bl	13b04 <g_dpgettext2@plt>
   2d7a8:	ldr	ip, [pc, #-2384]	; 2ce60 <g_unichar_xdigit_value@plt+0x18ffc>
   2d7ac:	ldr	r3, [pc, #-2384]	; 2ce64 <g_unichar_xdigit_value@plt+0x19000>
   2d7b0:	mov	r2, r4
   2d7b4:	add	ip, pc, ip
   2d7b8:	mov	r1, r5
   2d7bc:	add	r3, pc, r3
   2d7c0:	str	ip, [sp]
   2d7c4:	str	r0, [sp, #4]
   2d7c8:	ldr	r0, [pc, #-2408]	; 2ce68 <g_unichar_xdigit_value@plt+0x19004>
   2d7cc:	add	r0, pc, r0
   2d7d0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d7d4:	mov	r4, r0
   2d7d8:	ldr	r0, [sp, #12]
   2d7dc:	mov	r1, r4
   2d7e0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d7e4:	cmp	r4, #0
   2d7e8:	beq	2d7f4 <g_unichar_xdigit_value@plt+0x19990>
   2d7ec:	mov	r0, r4
   2d7f0:	bl	13b94 <g_object_unref@plt>
   2d7f4:	ldr	r0, [pc, #-2448]	; 2ce6c <g_unichar_xdigit_value@plt+0x19008>
   2d7f8:	ldr	r1, [pc, #-2448]	; 2ce70 <g_unichar_xdigit_value@plt+0x1900c>
   2d7fc:	add	r0, pc, r0
   2d800:	add	r1, pc, r1
   2d804:	bl	13c9c <g_dgettext@plt>
   2d808:	ldr	r1, [pc, #-2460]	; 2ce74 <g_unichar_xdigit_value@plt+0x19010>
   2d80c:	ldr	r2, [pc, #-2460]	; 2ce78 <g_unichar_xdigit_value@plt+0x19014>
   2d810:	add	r1, pc, r1
   2d814:	add	r2, pc, r2
   2d818:	mov	r5, r0
   2d81c:	mov	r0, #0
   2d820:	bl	13b04 <g_dpgettext2@plt>
   2d824:	ldr	r1, [pc, #-2480]	; 2ce7c <g_unichar_xdigit_value@plt+0x19018>
   2d828:	ldr	r2, [pc, #-2480]	; 2ce80 <g_unichar_xdigit_value@plt+0x1901c>
   2d82c:	add	r1, pc, r1
   2d830:	add	r2, pc, r2
   2d834:	mov	r4, r0
   2d838:	mov	r0, #0
   2d83c:	bl	13b04 <g_dpgettext2@plt>
   2d840:	ldr	ip, [pc, #-2500]	; 2ce84 <g_unichar_xdigit_value@plt+0x19020>
   2d844:	ldr	r3, [pc, #-2500]	; 2ce88 <g_unichar_xdigit_value@plt+0x19024>
   2d848:	mov	r2, r4
   2d84c:	add	ip, pc, ip
   2d850:	mov	r1, r5
   2d854:	add	r3, pc, r3
   2d858:	str	ip, [sp]
   2d85c:	str	r0, [sp, #4]
   2d860:	ldr	r0, [pc, #-2524]	; 2ce8c <g_unichar_xdigit_value@plt+0x19028>
   2d864:	add	r0, pc, r0
   2d868:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d86c:	mov	r4, r0
   2d870:	ldr	r0, [sp, #12]
   2d874:	mov	r1, r4
   2d878:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d87c:	cmp	r4, #0
   2d880:	beq	2d88c <g_unichar_xdigit_value@plt+0x19a28>
   2d884:	mov	r0, r4
   2d888:	bl	13b94 <g_object_unref@plt>
   2d88c:	ldr	r0, [pc, #-2564]	; 2ce90 <g_unichar_xdigit_value@plt+0x1902c>
   2d890:	ldr	r1, [pc, #-2564]	; 2ce94 <g_unichar_xdigit_value@plt+0x19030>
   2d894:	add	r0, pc, r0
   2d898:	add	r1, pc, r1
   2d89c:	bl	13c9c <g_dgettext@plt>
   2d8a0:	ldr	r1, [pc, #-2576]	; 2ce98 <g_unichar_xdigit_value@plt+0x19034>
   2d8a4:	ldr	r2, [pc, #-2576]	; 2ce9c <g_unichar_xdigit_value@plt+0x19038>
   2d8a8:	add	r1, pc, r1
   2d8ac:	add	r2, pc, r2
   2d8b0:	mov	r5, r0
   2d8b4:	mov	r0, #0
   2d8b8:	bl	13b04 <g_dpgettext2@plt>
   2d8bc:	ldr	r1, [pc, #-2596]	; 2cea0 <g_unichar_xdigit_value@plt+0x1903c>
   2d8c0:	ldr	r2, [pc, #-2596]	; 2cea4 <g_unichar_xdigit_value@plt+0x19040>
   2d8c4:	add	r1, pc, r1
   2d8c8:	add	r2, pc, r2
   2d8cc:	mov	r4, r0
   2d8d0:	mov	r0, #0
   2d8d4:	bl	13b04 <g_dpgettext2@plt>
   2d8d8:	ldr	r3, [pc, #-2616]	; 2cea8 <g_unichar_xdigit_value@plt+0x19044>
   2d8dc:	mov	r2, r4
   2d8e0:	mov	r1, r5
   2d8e4:	add	r3, pc, r3
   2d8e8:	str	r3, [sp]
   2d8ec:	str	r0, [sp, #4]
   2d8f0:	ldr	r0, [pc, #-2636]	; 2ceac <g_unichar_xdigit_value@plt+0x19048>
   2d8f4:	add	r0, pc, r0
   2d8f8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d8fc:	mov	r4, r0
   2d900:	ldr	r0, [sp, #12]
   2d904:	mov	r1, r4
   2d908:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d90c:	cmp	r4, #0
   2d910:	beq	2d91c <g_unichar_xdigit_value@plt+0x19ab8>
   2d914:	mov	r0, r4
   2d918:	bl	13b94 <g_object_unref@plt>
   2d91c:	ldr	r0, [pc, #-2676]	; 2ceb0 <g_unichar_xdigit_value@plt+0x1904c>
   2d920:	ldr	r1, [pc, #-2676]	; 2ceb4 <g_unichar_xdigit_value@plt+0x19050>
   2d924:	add	r0, pc, r0
   2d928:	add	r1, pc, r1
   2d92c:	bl	13c9c <g_dgettext@plt>
   2d930:	ldr	r1, [pc, #-2688]	; 2ceb8 <g_unichar_xdigit_value@plt+0x19054>
   2d934:	ldr	r2, [pc, #-2688]	; 2cebc <g_unichar_xdigit_value@plt+0x19058>
   2d938:	add	r1, pc, r1
   2d93c:	add	r2, pc, r2
   2d940:	mov	r5, r0
   2d944:	mov	r0, #0
   2d948:	bl	13b04 <g_dpgettext2@plt>
   2d94c:	ldr	r1, [pc, #-2708]	; 2cec0 <g_unichar_xdigit_value@plt+0x1905c>
   2d950:	ldr	r2, [pc, #-2708]	; 2cec4 <g_unichar_xdigit_value@plt+0x19060>
   2d954:	add	r1, pc, r1
   2d958:	add	r2, pc, r2
   2d95c:	mov	r4, r0
   2d960:	mov	r0, #0
   2d964:	bl	13b04 <g_dpgettext2@plt>
   2d968:	ldr	ip, [pc, #-2728]	; 2cec8 <g_unichar_xdigit_value@plt+0x19064>
   2d96c:	ldr	r3, [pc, #-2728]	; 2cecc <g_unichar_xdigit_value@plt+0x19068>
   2d970:	mov	r2, r4
   2d974:	add	ip, pc, ip
   2d978:	mov	r1, r5
   2d97c:	add	r3, pc, r3
   2d980:	str	ip, [sp]
   2d984:	str	r0, [sp, #4]
   2d988:	ldr	r0, [pc, #-2752]	; 2ced0 <g_unichar_xdigit_value@plt+0x1906c>
   2d98c:	add	r0, pc, r0
   2d990:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2d994:	mov	r4, r0
   2d998:	ldr	r0, [sp, #12]
   2d99c:	mov	r1, r4
   2d9a0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2d9a4:	cmp	r4, #0
   2d9a8:	beq	2d9b4 <g_unichar_xdigit_value@plt+0x19b50>
   2d9ac:	mov	r0, r4
   2d9b0:	bl	13b94 <g_object_unref@plt>
   2d9b4:	ldr	r0, [pc, #-2792]	; 2ced4 <g_unichar_xdigit_value@plt+0x19070>
   2d9b8:	ldr	r1, [pc, #-2792]	; 2ced8 <g_unichar_xdigit_value@plt+0x19074>
   2d9bc:	add	r0, pc, r0
   2d9c0:	add	r1, pc, r1
   2d9c4:	bl	13c9c <g_dgettext@plt>
   2d9c8:	ldr	r1, [pc, #-2804]	; 2cedc <g_unichar_xdigit_value@plt+0x19078>
   2d9cc:	ldr	r2, [pc, #-2804]	; 2cee0 <g_unichar_xdigit_value@plt+0x1907c>
   2d9d0:	add	r1, pc, r1
   2d9d4:	add	r2, pc, r2
   2d9d8:	mov	r5, r0
   2d9dc:	mov	r0, #0
   2d9e0:	bl	13b04 <g_dpgettext2@plt>
   2d9e4:	ldr	r1, [pc, #-2824]	; 2cee4 <g_unichar_xdigit_value@plt+0x19080>
   2d9e8:	ldr	r2, [pc, #-2824]	; 2cee8 <g_unichar_xdigit_value@plt+0x19084>
   2d9ec:	add	r1, pc, r1
   2d9f0:	add	r2, pc, r2
   2d9f4:	mov	r4, r0
   2d9f8:	mov	r0, #0
   2d9fc:	bl	13b04 <g_dpgettext2@plt>
   2da00:	ldr	ip, [pc, #-2844]	; 2ceec <g_unichar_xdigit_value@plt+0x19088>
   2da04:	ldr	r3, [pc, #-2844]	; 2cef0 <g_unichar_xdigit_value@plt+0x1908c>
   2da08:	mov	r2, r4
   2da0c:	add	ip, pc, ip
   2da10:	mov	r1, r5
   2da14:	add	r3, pc, r3
   2da18:	str	ip, [sp]
   2da1c:	str	r0, [sp, #4]
   2da20:	ldr	r0, [pc, #-2868]	; 2cef4 <g_unichar_xdigit_value@plt+0x19090>
   2da24:	add	r0, pc, r0
   2da28:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2da2c:	mov	r4, r0
   2da30:	ldr	r0, [sp, #12]
   2da34:	mov	r1, r4
   2da38:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2da3c:	cmp	r4, #0
   2da40:	beq	2da4c <g_unichar_xdigit_value@plt+0x19be8>
   2da44:	mov	r0, r4
   2da48:	bl	13b94 <g_object_unref@plt>
   2da4c:	ldr	r0, [pc, #-2908]	; 2cef8 <g_unichar_xdigit_value@plt+0x19094>
   2da50:	ldr	r1, [pc, #-2908]	; 2cefc <g_unichar_xdigit_value@plt+0x19098>
   2da54:	add	r0, pc, r0
   2da58:	add	r1, pc, r1
   2da5c:	bl	13c9c <g_dgettext@plt>
   2da60:	ldr	r1, [pc, #-2920]	; 2cf00 <g_unichar_xdigit_value@plt+0x1909c>
   2da64:	ldr	r2, [pc, #-2920]	; 2cf04 <g_unichar_xdigit_value@plt+0x190a0>
   2da68:	add	r1, pc, r1
   2da6c:	add	r2, pc, r2
   2da70:	mov	r5, r0
   2da74:	mov	r0, #0
   2da78:	bl	13b04 <g_dpgettext2@plt>
   2da7c:	ldr	r1, [pc, #-2940]	; 2cf08 <g_unichar_xdigit_value@plt+0x190a4>
   2da80:	ldr	r2, [pc, #-2940]	; 2cf0c <g_unichar_xdigit_value@plt+0x190a8>
   2da84:	add	r1, pc, r1
   2da88:	add	r2, pc, r2
   2da8c:	mov	r4, r0
   2da90:	mov	r0, #0
   2da94:	bl	13b04 <g_dpgettext2@plt>
   2da98:	ldr	ip, [pc, #-2960]	; 2cf10 <g_unichar_xdigit_value@plt+0x190ac>
   2da9c:	ldr	r3, [pc, #-2960]	; 2cf14 <g_unichar_xdigit_value@plt+0x190b0>
   2daa0:	mov	r2, r4
   2daa4:	add	ip, pc, ip
   2daa8:	mov	r1, r5
   2daac:	add	r3, pc, r3
   2dab0:	str	ip, [sp]
   2dab4:	str	r0, [sp, #4]
   2dab8:	ldr	r0, [pc, #-2984]	; 2cf18 <g_unichar_xdigit_value@plt+0x190b4>
   2dabc:	add	r0, pc, r0
   2dac0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2dac4:	mov	r4, r0
   2dac8:	ldr	r0, [sp, #12]
   2dacc:	mov	r1, r4
   2dad0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2dad4:	cmp	r4, #0
   2dad8:	beq	2dae4 <g_unichar_xdigit_value@plt+0x19c80>
   2dadc:	mov	r0, r4
   2dae0:	bl	13b94 <g_object_unref@plt>
   2dae4:	ldr	r0, [pc, #-3024]	; 2cf1c <g_unichar_xdigit_value@plt+0x190b8>
   2dae8:	ldr	r1, [pc, #-3024]	; 2cf20 <g_unichar_xdigit_value@plt+0x190bc>
   2daec:	add	r0, pc, r0
   2daf0:	add	r1, pc, r1
   2daf4:	bl	13c9c <g_dgettext@plt>
   2daf8:	ldr	r1, [pc, #-3036]	; 2cf24 <g_unichar_xdigit_value@plt+0x190c0>
   2dafc:	ldr	r2, [pc, #-3036]	; 2cf28 <g_unichar_xdigit_value@plt+0x190c4>
   2db00:	add	r1, pc, r1
   2db04:	add	r2, pc, r2
   2db08:	mov	r5, r0
   2db0c:	mov	r0, #0
   2db10:	bl	13b04 <g_dpgettext2@plt>
   2db14:	ldr	r1, [pc, #-3056]	; 2cf2c <g_unichar_xdigit_value@plt+0x190c8>
   2db18:	ldr	r2, [pc, #-3056]	; 2cf30 <g_unichar_xdigit_value@plt+0x190cc>
   2db1c:	add	r1, pc, r1
   2db20:	add	r2, pc, r2
   2db24:	mov	r4, r0
   2db28:	mov	r0, #0
   2db2c:	bl	13b04 <g_dpgettext2@plt>
   2db30:	ldr	ip, [pc, #-3076]	; 2cf34 <g_unichar_xdigit_value@plt+0x190d0>
   2db34:	ldr	r3, [pc, #-3076]	; 2cf38 <g_unichar_xdigit_value@plt+0x190d4>
   2db38:	mov	r2, r4
   2db3c:	add	ip, pc, ip
   2db40:	mov	r1, r5
   2db44:	add	r3, pc, r3
   2db48:	str	ip, [sp]
   2db4c:	str	r0, [sp, #4]
   2db50:	ldr	r0, [pc, #-3100]	; 2cf3c <g_unichar_xdigit_value@plt+0x190d8>
   2db54:	add	r0, pc, r0
   2db58:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2db5c:	mov	r4, r0
   2db60:	ldr	r0, [sp, #12]
   2db64:	mov	r1, r4
   2db68:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2db6c:	cmp	r4, #0
   2db70:	beq	2db7c <g_unichar_xdigit_value@plt+0x19d18>
   2db74:	mov	r0, r4
   2db78:	bl	13b94 <g_object_unref@plt>
   2db7c:	ldr	r0, [pc, #-3140]	; 2cf40 <g_unichar_xdigit_value@plt+0x190dc>
   2db80:	ldr	r1, [pc, #-3140]	; 2cf44 <g_unichar_xdigit_value@plt+0x190e0>
   2db84:	add	r0, pc, r0
   2db88:	add	r1, pc, r1
   2db8c:	bl	13c9c <g_dgettext@plt>
   2db90:	ldr	r1, [pc, #-3152]	; 2cf48 <g_unichar_xdigit_value@plt+0x190e4>
   2db94:	ldr	r2, [pc, #-3152]	; 2cf4c <g_unichar_xdigit_value@plt+0x190e8>
   2db98:	add	r1, pc, r1
   2db9c:	add	r2, pc, r2
   2dba0:	mov	r5, r0
   2dba4:	mov	r0, #0
   2dba8:	bl	13b04 <g_dpgettext2@plt>
   2dbac:	ldr	r1, [pc, #-3172]	; 2cf50 <g_unichar_xdigit_value@plt+0x190ec>
   2dbb0:	ldr	r2, [pc, #-3172]	; 2cf54 <g_unichar_xdigit_value@plt+0x190f0>
   2dbb4:	add	r1, pc, r1
   2dbb8:	add	r2, pc, r2
   2dbbc:	mov	r4, r0
   2dbc0:	mov	r0, #0
   2dbc4:	bl	13b04 <g_dpgettext2@plt>
   2dbc8:	ldr	ip, [pc, #-3192]	; 2cf58 <g_unichar_xdigit_value@plt+0x190f4>
   2dbcc:	ldr	r3, [pc, #-3192]	; 2cf5c <g_unichar_xdigit_value@plt+0x190f8>
   2dbd0:	mov	r2, r4
   2dbd4:	add	ip, pc, ip
   2dbd8:	mov	r1, r5
   2dbdc:	add	r3, pc, r3
   2dbe0:	str	ip, [sp]
   2dbe4:	str	r0, [sp, #4]
   2dbe8:	ldr	r0, [pc, #-3216]	; 2cf60 <g_unichar_xdigit_value@plt+0x190fc>
   2dbec:	add	r0, pc, r0
   2dbf0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2dbf4:	mov	r4, r0
   2dbf8:	ldr	r0, [sp, #12]
   2dbfc:	mov	r1, r4
   2dc00:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2dc04:	cmp	r4, #0
   2dc08:	beq	2dc14 <g_unichar_xdigit_value@plt+0x19db0>
   2dc0c:	mov	r0, r4
   2dc10:	bl	13b94 <g_object_unref@plt>
   2dc14:	ldr	r0, [pc, #-3256]	; 2cf64 <g_unichar_xdigit_value@plt+0x19100>
   2dc18:	ldr	r1, [pc, #-3256]	; 2cf68 <g_unichar_xdigit_value@plt+0x19104>
   2dc1c:	add	r0, pc, r0
   2dc20:	add	r1, pc, r1
   2dc24:	bl	13c9c <g_dgettext@plt>
   2dc28:	ldr	r1, [pc, #-3268]	; 2cf6c <g_unichar_xdigit_value@plt+0x19108>
   2dc2c:	ldr	r2, [pc, #-3268]	; 2cf70 <g_unichar_xdigit_value@plt+0x1910c>
   2dc30:	add	r1, pc, r1
   2dc34:	add	r2, pc, r2
   2dc38:	mov	r5, r0
   2dc3c:	mov	r0, #0
   2dc40:	bl	13b04 <g_dpgettext2@plt>
   2dc44:	ldr	r1, [pc, #-3288]	; 2cf74 <g_unichar_xdigit_value@plt+0x19110>
   2dc48:	ldr	r2, [pc, #-3288]	; 2cf78 <g_unichar_xdigit_value@plt+0x19114>
   2dc4c:	add	r1, pc, r1
   2dc50:	add	r2, pc, r2
   2dc54:	mov	r4, r0
   2dc58:	mov	r0, #0
   2dc5c:	bl	13b04 <g_dpgettext2@plt>
   2dc60:	ldr	ip, [pc, #-3308]	; 2cf7c <g_unichar_xdigit_value@plt+0x19118>
   2dc64:	ldr	r3, [pc, #-3308]	; 2cf80 <g_unichar_xdigit_value@plt+0x1911c>
   2dc68:	mov	r2, r4
   2dc6c:	add	ip, pc, ip
   2dc70:	mov	r1, r5
   2dc74:	add	r3, pc, r3
   2dc78:	str	ip, [sp]
   2dc7c:	str	r0, [sp, #4]
   2dc80:	ldr	r0, [pc, #-3332]	; 2cf84 <g_unichar_xdigit_value@plt+0x19120>
   2dc84:	add	r0, pc, r0
   2dc88:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2dc8c:	mov	r4, r0
   2dc90:	ldr	r0, [sp, #12]
   2dc94:	mov	r1, r4
   2dc98:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2dc9c:	cmp	r4, #0
   2dca0:	beq	2dcac <g_unichar_xdigit_value@plt+0x19e48>
   2dca4:	mov	r0, r4
   2dca8:	bl	13b94 <g_object_unref@plt>
   2dcac:	ldr	r0, [pc, #-3372]	; 2cf88 <g_unichar_xdigit_value@plt+0x19124>
   2dcb0:	ldr	r1, [pc, #-3372]	; 2cf8c <g_unichar_xdigit_value@plt+0x19128>
   2dcb4:	add	r0, pc, r0
   2dcb8:	add	r1, pc, r1
   2dcbc:	bl	13c9c <g_dgettext@plt>
   2dcc0:	ldr	r1, [pc, #-3384]	; 2cf90 <g_unichar_xdigit_value@plt+0x1912c>
   2dcc4:	ldr	r2, [pc, #-3384]	; 2cf94 <g_unichar_xdigit_value@plt+0x19130>
   2dcc8:	add	r1, pc, r1
   2dccc:	add	r2, pc, r2
   2dcd0:	mov	r5, r0
   2dcd4:	mov	r0, #0
   2dcd8:	bl	13b04 <g_dpgettext2@plt>
   2dcdc:	ldr	r1, [pc, #-3404]	; 2cf98 <g_unichar_xdigit_value@plt+0x19134>
   2dce0:	ldr	r2, [pc, #-3404]	; 2cf9c <g_unichar_xdigit_value@plt+0x19138>
   2dce4:	add	r1, pc, r1
   2dce8:	add	r2, pc, r2
   2dcec:	mov	r4, r0
   2dcf0:	mov	r0, #0
   2dcf4:	bl	13b04 <g_dpgettext2@plt>
   2dcf8:	ldr	ip, [pc, #-3424]	; 2cfa0 <g_unichar_xdigit_value@plt+0x1913c>
   2dcfc:	ldr	r3, [pc, #-3424]	; 2cfa4 <g_unichar_xdigit_value@plt+0x19140>
   2dd00:	mov	r2, r4
   2dd04:	add	ip, pc, ip
   2dd08:	mov	r1, r5
   2dd0c:	add	r3, pc, r3
   2dd10:	str	ip, [sp]
   2dd14:	str	r0, [sp, #4]
   2dd18:	ldr	r0, [pc, #-3448]	; 2cfa8 <g_unichar_xdigit_value@plt+0x19144>
   2dd1c:	add	r0, pc, r0
   2dd20:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2dd24:	mov	r4, r0
   2dd28:	ldr	r0, [sp, #12]
   2dd2c:	mov	r1, r4
   2dd30:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2dd34:	cmp	r4, #0
   2dd38:	beq	2dd44 <g_unichar_xdigit_value@plt+0x19ee0>
   2dd3c:	mov	r0, r4
   2dd40:	bl	13b94 <g_object_unref@plt>
   2dd44:	ldr	r0, [pc, #-3488]	; 2cfac <g_unichar_xdigit_value@plt+0x19148>
   2dd48:	ldr	r1, [pc, #-3488]	; 2cfb0 <g_unichar_xdigit_value@plt+0x1914c>
   2dd4c:	add	r0, pc, r0
   2dd50:	add	r1, pc, r1
   2dd54:	bl	13c9c <g_dgettext@plt>
   2dd58:	ldr	r1, [pc, #-3500]	; 2cfb4 <g_unichar_xdigit_value@plt+0x19150>
   2dd5c:	ldr	r2, [pc, #-3500]	; 2cfb8 <g_unichar_xdigit_value@plt+0x19154>
   2dd60:	add	r1, pc, r1
   2dd64:	add	r2, pc, r2
   2dd68:	mov	r5, r0
   2dd6c:	mov	r0, #0
   2dd70:	bl	13b04 <g_dpgettext2@plt>
   2dd74:	ldr	r1, [pc, #-3520]	; 2cfbc <g_unichar_xdigit_value@plt+0x19158>
   2dd78:	ldr	r2, [pc, #-3520]	; 2cfc0 <g_unichar_xdigit_value@plt+0x1915c>
   2dd7c:	add	r1, pc, r1
   2dd80:	add	r2, pc, r2
   2dd84:	mov	r4, r0
   2dd88:	mov	r0, #0
   2dd8c:	bl	13b04 <g_dpgettext2@plt>
   2dd90:	ldr	ip, [pc, #-3540]	; 2cfc4 <g_unichar_xdigit_value@plt+0x19160>
   2dd94:	ldr	r3, [pc, #-3540]	; 2cfc8 <g_unichar_xdigit_value@plt+0x19164>
   2dd98:	mov	r2, r4
   2dd9c:	add	ip, pc, ip
   2dda0:	mov	r1, r5
   2dda4:	add	r3, pc, r3
   2dda8:	str	ip, [sp]
   2ddac:	str	r0, [sp, #4]
   2ddb0:	ldr	r0, [pc, #-3564]	; 2cfcc <g_unichar_xdigit_value@plt+0x19168>
   2ddb4:	add	r0, pc, r0
   2ddb8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2ddbc:	mov	r4, r0
   2ddc0:	ldr	r0, [sp, #12]
   2ddc4:	mov	r1, r4
   2ddc8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2ddcc:	cmp	r4, #0
   2ddd0:	beq	2dddc <g_unichar_xdigit_value@plt+0x19f78>
   2ddd4:	mov	r0, r4
   2ddd8:	bl	13b94 <g_object_unref@plt>
   2dddc:	ldr	r0, [pc, #-3604]	; 2cfd0 <g_unichar_xdigit_value@plt+0x1916c>
   2dde0:	ldr	r1, [pc, #-3604]	; 2cfd4 <g_unichar_xdigit_value@plt+0x19170>
   2dde4:	add	r0, pc, r0
   2dde8:	add	r1, pc, r1
   2ddec:	bl	13c9c <g_dgettext@plt>
   2ddf0:	ldr	r1, [pc, #-3616]	; 2cfd8 <g_unichar_xdigit_value@plt+0x19174>
   2ddf4:	ldr	r2, [pc, #-3616]	; 2cfdc <g_unichar_xdigit_value@plt+0x19178>
   2ddf8:	add	r1, pc, r1
   2ddfc:	add	r2, pc, r2
   2de00:	mov	r5, r0
   2de04:	mov	r0, #0
   2de08:	bl	13b04 <g_dpgettext2@plt>
   2de0c:	ldr	r1, [pc, #-3636]	; 2cfe0 <g_unichar_xdigit_value@plt+0x1917c>
   2de10:	ldr	r2, [pc, #-3636]	; 2cfe4 <g_unichar_xdigit_value@plt+0x19180>
   2de14:	add	r1, pc, r1
   2de18:	add	r2, pc, r2
   2de1c:	mov	r4, r0
   2de20:	mov	r0, #0
   2de24:	bl	13b04 <g_dpgettext2@plt>
   2de28:	ldr	ip, [pc, #-3656]	; 2cfe8 <g_unichar_xdigit_value@plt+0x19184>
   2de2c:	ldr	r3, [pc, #-3656]	; 2cfec <g_unichar_xdigit_value@plt+0x19188>
   2de30:	mov	r2, r4
   2de34:	add	ip, pc, ip
   2de38:	mov	r1, r5
   2de3c:	add	r3, pc, r3
   2de40:	str	ip, [sp]
   2de44:	str	r0, [sp, #4]
   2de48:	ldr	r0, [pc, #-3680]	; 2cff0 <g_unichar_xdigit_value@plt+0x1918c>
   2de4c:	add	r0, pc, r0
   2de50:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2de54:	mov	r4, r0
   2de58:	ldr	r0, [sp, #36]	; 0x24
   2de5c:	mov	r1, r4
   2de60:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2de64:	cmp	r4, #0
   2de68:	beq	2de74 <g_unichar_xdigit_value@plt+0x1a010>
   2de6c:	mov	r0, r4
   2de70:	bl	13b94 <g_object_unref@plt>
   2de74:	ldr	r0, [pc, #-3720]	; 2cff4 <g_unichar_xdigit_value@plt+0x19190>
   2de78:	ldr	r1, [pc, #-3720]	; 2cff8 <g_unichar_xdigit_value@plt+0x19194>
   2de7c:	add	r0, pc, r0
   2de80:	add	r1, pc, r1
   2de84:	bl	13c9c <g_dgettext@plt>
   2de88:	ldr	r1, [pc, #-3732]	; 2cffc <g_unichar_xdigit_value@plt+0x19198>
   2de8c:	ldr	r2, [pc, #-3732]	; 2d000 <g_unichar_xdigit_value@plt+0x1919c>
   2de90:	add	r1, pc, r1
   2de94:	add	r2, pc, r2
   2de98:	mov	r5, r0
   2de9c:	mov	r0, #0
   2dea0:	bl	13b04 <g_dpgettext2@plt>
   2dea4:	ldr	r1, [pc, #-3752]	; 2d004 <g_unichar_xdigit_value@plt+0x191a0>
   2dea8:	ldr	r2, [pc, #-3752]	; 2d008 <g_unichar_xdigit_value@plt+0x191a4>
   2deac:	add	r1, pc, r1
   2deb0:	add	r2, pc, r2
   2deb4:	mov	r4, r0
   2deb8:	mov	r0, #0
   2debc:	bl	13b04 <g_dpgettext2@plt>
   2dec0:	ldr	ip, [pc, #-3772]	; 2d00c <g_unichar_xdigit_value@plt+0x191a8>
   2dec4:	ldr	r3, [pc, #-3772]	; 2d010 <g_unichar_xdigit_value@plt+0x191ac>
   2dec8:	mov	r2, r4
   2decc:	add	ip, pc, ip
   2ded0:	mov	r1, r5
   2ded4:	add	r3, pc, r3
   2ded8:	str	ip, [sp]
   2dedc:	str	r0, [sp, #4]
   2dee0:	ldr	r0, [pc, #-3796]	; 2d014 <g_unichar_xdigit_value@plt+0x191b0>
   2dee4:	add	r0, pc, r0
   2dee8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2deec:	mov	r4, r0
   2def0:	ldr	r0, [sp, #36]	; 0x24
   2def4:	mov	r1, r4
   2def8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2defc:	cmp	r4, #0
   2df00:	beq	2df0c <g_unichar_xdigit_value@plt+0x1a0a8>
   2df04:	mov	r0, r4
   2df08:	bl	13b94 <g_object_unref@plt>
   2df0c:	ldr	r0, [pc, #-3836]	; 2d018 <g_unichar_xdigit_value@plt+0x191b4>
   2df10:	ldr	r1, [pc, #-3836]	; 2d01c <g_unichar_xdigit_value@plt+0x191b8>
   2df14:	add	r0, pc, r0
   2df18:	add	r1, pc, r1
   2df1c:	bl	13c9c <g_dgettext@plt>
   2df20:	ldr	r1, [pc, #-3848]	; 2d020 <g_unichar_xdigit_value@plt+0x191bc>
   2df24:	ldr	r2, [pc, #-3848]	; 2d024 <g_unichar_xdigit_value@plt+0x191c0>
   2df28:	add	r1, pc, r1
   2df2c:	add	r2, pc, r2
   2df30:	mov	r5, r0
   2df34:	mov	r0, #0
   2df38:	bl	13b04 <g_dpgettext2@plt>
   2df3c:	ldr	r1, [pc, #-3868]	; 2d028 <g_unichar_xdigit_value@plt+0x191c4>
   2df40:	ldr	r2, [pc, #-3868]	; 2d02c <g_unichar_xdigit_value@plt+0x191c8>
   2df44:	add	r1, pc, r1
   2df48:	add	r2, pc, r2
   2df4c:	mov	r4, r0
   2df50:	mov	r0, #0
   2df54:	bl	13b04 <g_dpgettext2@plt>
   2df58:	ldr	r3, [pc, #-3888]	; 2d030 <g_unichar_xdigit_value@plt+0x191cc>
   2df5c:	mov	r2, r4
   2df60:	mov	r1, r5
   2df64:	add	r3, pc, r3
   2df68:	str	r3, [sp]
   2df6c:	str	r0, [sp, #4]
   2df70:	ldr	r0, [pc, #-3908]	; 2d034 <g_unichar_xdigit_value@plt+0x191d0>
   2df74:	add	r0, pc, r0
   2df78:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2df7c:	mov	r4, r0
   2df80:	ldr	r0, [sp, #36]	; 0x24
   2df84:	mov	r1, r4
   2df88:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2df8c:	cmp	r4, #0
   2df90:	beq	2df9c <g_unichar_xdigit_value@plt+0x1a138>
   2df94:	mov	r0, r4
   2df98:	bl	13b94 <g_object_unref@plt>
   2df9c:	ldr	r0, [pc, #-3948]	; 2d038 <g_unichar_xdigit_value@plt+0x191d4>
   2dfa0:	ldr	r1, [pc, #-3948]	; 2d03c <g_unichar_xdigit_value@plt+0x191d8>
   2dfa4:	add	r0, pc, r0
   2dfa8:	add	r1, pc, r1
   2dfac:	bl	13c9c <g_dgettext@plt>
   2dfb0:	ldr	r1, [pc, #-3960]	; 2d040 <g_unichar_xdigit_value@plt+0x191dc>
   2dfb4:	ldr	r2, [pc, #-3960]	; 2d044 <g_unichar_xdigit_value@plt+0x191e0>
   2dfb8:	add	r1, pc, r1
   2dfbc:	add	r2, pc, r2
   2dfc0:	mov	r5, r0
   2dfc4:	mov	r0, #0
   2dfc8:	bl	13b04 <g_dpgettext2@plt>
   2dfcc:	ldr	r1, [pc, #-3980]	; 2d048 <g_unichar_xdigit_value@plt+0x191e4>
   2dfd0:	ldr	r2, [pc, #-3980]	; 2d04c <g_unichar_xdigit_value@plt+0x191e8>
   2dfd4:	add	r1, pc, r1
   2dfd8:	add	r2, pc, r2
   2dfdc:	mov	r4, r0
   2dfe0:	mov	r0, #0
   2dfe4:	bl	13b04 <g_dpgettext2@plt>
   2dfe8:	ldr	ip, [pc, #-4000]	; 2d050 <g_unichar_xdigit_value@plt+0x191ec>
   2dfec:	ldr	r3, [pc, #-4000]	; 2d054 <g_unichar_xdigit_value@plt+0x191f0>
   2dff0:	mov	r2, r4
   2dff4:	add	ip, pc, ip
   2dff8:	mov	r1, r5
   2dffc:	add	r3, pc, r3
   2e000:	str	ip, [sp]
   2e004:	str	r0, [sp, #4]
   2e008:	ldr	r0, [pc, #-4024]	; 2d058 <g_unichar_xdigit_value@plt+0x191f4>
   2e00c:	add	r0, pc, r0
   2e010:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e014:	mov	r4, r0
   2e018:	ldr	r0, [sp, #36]	; 0x24
   2e01c:	mov	r1, r4
   2e020:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e024:	cmp	r4, #0
   2e028:	beq	2e034 <g_unichar_xdigit_value@plt+0x1a1d0>
   2e02c:	mov	r0, r4
   2e030:	bl	13b94 <g_object_unref@plt>
   2e034:	ldr	r0, [pc, #-4064]	; 2d05c <g_unichar_xdigit_value@plt+0x191f8>
   2e038:	ldr	r1, [pc, #-4064]	; 2d060 <g_unichar_xdigit_value@plt+0x191fc>
   2e03c:	add	r0, pc, r0
   2e040:	add	r1, pc, r1
   2e044:	bl	13c9c <g_dgettext@plt>
   2e048:	ldr	r1, [pc, #-4076]	; 2d064 <g_unichar_xdigit_value@plt+0x19200>
   2e04c:	ldr	r2, [pc, #-4076]	; 2d068 <g_unichar_xdigit_value@plt+0x19204>
   2e050:	add	r1, pc, r1
   2e054:	add	r2, pc, r2
   2e058:	mov	r5, r0
   2e05c:	mov	r0, #0
   2e060:	bl	13b04 <g_dpgettext2@plt>
   2e064:	ldr	r1, [pc, #4088]	; 2f064 <g_unichar_xdigit_value@plt+0x1b200>
   2e068:	ldr	r2, [pc, #4088]	; 2f068 <g_unichar_xdigit_value@plt+0x1b204>
   2e06c:	add	r1, pc, r1
   2e070:	add	r2, pc, r2
   2e074:	mov	r4, r0
   2e078:	mov	r0, #0
   2e07c:	bl	13b04 <g_dpgettext2@plt>
   2e080:	ldr	ip, [pc, #4068]	; 2f06c <g_unichar_xdigit_value@plt+0x1b208>
   2e084:	ldr	r3, [pc, #4068]	; 2f070 <g_unichar_xdigit_value@plt+0x1b20c>
   2e088:	mov	r2, r4
   2e08c:	add	ip, pc, ip
   2e090:	mov	r1, r5
   2e094:	add	r3, pc, r3
   2e098:	str	ip, [sp]
   2e09c:	str	r0, [sp, #4]
   2e0a0:	ldr	r0, [pc, #4044]	; 2f074 <g_unichar_xdigit_value@plt+0x1b210>
   2e0a4:	add	r0, pc, r0
   2e0a8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e0ac:	mov	r4, r0
   2e0b0:	ldr	r0, [sp, #36]	; 0x24
   2e0b4:	mov	r1, r4
   2e0b8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e0bc:	cmp	r4, #0
   2e0c0:	beq	2e0cc <g_unichar_xdigit_value@plt+0x1a268>
   2e0c4:	mov	r0, r4
   2e0c8:	bl	13b94 <g_object_unref@plt>
   2e0cc:	ldr	r0, [pc, #4004]	; 2f078 <g_unichar_xdigit_value@plt+0x1b214>
   2e0d0:	ldr	r1, [pc, #4004]	; 2f07c <g_unichar_xdigit_value@plt+0x1b218>
   2e0d4:	add	r0, pc, r0
   2e0d8:	add	r1, pc, r1
   2e0dc:	bl	13c9c <g_dgettext@plt>
   2e0e0:	ldr	r1, [pc, #3992]	; 2f080 <g_unichar_xdigit_value@plt+0x1b21c>
   2e0e4:	ldr	r2, [pc, #3992]	; 2f084 <g_unichar_xdigit_value@plt+0x1b220>
   2e0e8:	add	r1, pc, r1
   2e0ec:	add	r2, pc, r2
   2e0f0:	mov	r5, r0
   2e0f4:	mov	r0, #0
   2e0f8:	bl	13b04 <g_dpgettext2@plt>
   2e0fc:	ldr	r1, [pc, #3972]	; 2f088 <g_unichar_xdigit_value@plt+0x1b224>
   2e100:	ldr	r2, [pc, #3972]	; 2f08c <g_unichar_xdigit_value@plt+0x1b228>
   2e104:	add	r1, pc, r1
   2e108:	add	r2, pc, r2
   2e10c:	mov	r4, r0
   2e110:	mov	r0, #0
   2e114:	bl	13b04 <g_dpgettext2@plt>
   2e118:	ldr	ip, [pc, #3952]	; 2f090 <g_unichar_xdigit_value@plt+0x1b22c>
   2e11c:	ldr	r3, [pc, #3952]	; 2f094 <g_unichar_xdigit_value@plt+0x1b230>
   2e120:	mov	r2, r4
   2e124:	add	ip, pc, ip
   2e128:	mov	r1, r5
   2e12c:	add	r3, pc, r3
   2e130:	str	ip, [sp]
   2e134:	str	r0, [sp, #4]
   2e138:	ldr	r0, [pc, #3928]	; 2f098 <g_unichar_xdigit_value@plt+0x1b234>
   2e13c:	add	r0, pc, r0
   2e140:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e144:	mov	r4, r0
   2e148:	ldr	r0, [sp, #24]
   2e14c:	mov	r1, r4
   2e150:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e154:	cmp	r4, #0
   2e158:	beq	2e164 <g_unichar_xdigit_value@plt+0x1a300>
   2e15c:	mov	r0, r4
   2e160:	bl	13b94 <g_object_unref@plt>
   2e164:	ldr	r0, [pc, #3888]	; 2f09c <g_unichar_xdigit_value@plt+0x1b238>
   2e168:	ldr	r1, [pc, #3888]	; 2f0a0 <g_unichar_xdigit_value@plt+0x1b23c>
   2e16c:	add	r0, pc, r0
   2e170:	add	r1, pc, r1
   2e174:	bl	13c9c <g_dgettext@plt>
   2e178:	ldr	r1, [pc, #3876]	; 2f0a4 <g_unichar_xdigit_value@plt+0x1b240>
   2e17c:	ldr	r2, [pc, #3876]	; 2f0a8 <g_unichar_xdigit_value@plt+0x1b244>
   2e180:	add	r1, pc, r1
   2e184:	add	r2, pc, r2
   2e188:	mov	r5, r0
   2e18c:	mov	r0, #0
   2e190:	bl	13b04 <g_dpgettext2@plt>
   2e194:	ldr	r1, [pc, #3856]	; 2f0ac <g_unichar_xdigit_value@plt+0x1b248>
   2e198:	ldr	r2, [pc, #3856]	; 2f0b0 <g_unichar_xdigit_value@plt+0x1b24c>
   2e19c:	add	r1, pc, r1
   2e1a0:	add	r2, pc, r2
   2e1a4:	mov	r4, r0
   2e1a8:	mov	r0, #0
   2e1ac:	bl	13b04 <g_dpgettext2@plt>
   2e1b0:	ldr	ip, [pc, #3836]	; 2f0b4 <g_unichar_xdigit_value@plt+0x1b250>
   2e1b4:	ldr	r3, [pc, #3836]	; 2f0b8 <g_unichar_xdigit_value@plt+0x1b254>
   2e1b8:	mov	r2, r4
   2e1bc:	add	ip, pc, ip
   2e1c0:	mov	r1, r5
   2e1c4:	add	r3, pc, r3
   2e1c8:	str	ip, [sp]
   2e1cc:	str	r0, [sp, #4]
   2e1d0:	ldr	r0, [pc, #3812]	; 2f0bc <g_unichar_xdigit_value@plt+0x1b258>
   2e1d4:	add	r0, pc, r0
   2e1d8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e1dc:	mov	r4, r0
   2e1e0:	ldr	r0, [sp, #24]
   2e1e4:	mov	r1, r4
   2e1e8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e1ec:	cmp	r4, #0
   2e1f0:	beq	2e1fc <g_unichar_xdigit_value@plt+0x1a398>
   2e1f4:	mov	r0, r4
   2e1f8:	bl	13b94 <g_object_unref@plt>
   2e1fc:	ldr	r0, [pc, #3772]	; 2f0c0 <g_unichar_xdigit_value@plt+0x1b25c>
   2e200:	ldr	r1, [pc, #3772]	; 2f0c4 <g_unichar_xdigit_value@plt+0x1b260>
   2e204:	add	r0, pc, r0
   2e208:	add	r1, pc, r1
   2e20c:	bl	13c9c <g_dgettext@plt>
   2e210:	ldr	r1, [pc, #3760]	; 2f0c8 <g_unichar_xdigit_value@plt+0x1b264>
   2e214:	ldr	r2, [pc, #3760]	; 2f0cc <g_unichar_xdigit_value@plt+0x1b268>
   2e218:	add	r1, pc, r1
   2e21c:	add	r2, pc, r2
   2e220:	mov	r5, r0
   2e224:	mov	r0, #0
   2e228:	bl	13b04 <g_dpgettext2@plt>
   2e22c:	ldr	r1, [pc, #3740]	; 2f0d0 <g_unichar_xdigit_value@plt+0x1b26c>
   2e230:	ldr	r2, [pc, #3740]	; 2f0d4 <g_unichar_xdigit_value@plt+0x1b270>
   2e234:	add	r1, pc, r1
   2e238:	add	r2, pc, r2
   2e23c:	mov	r4, r0
   2e240:	mov	r0, #0
   2e244:	bl	13b04 <g_dpgettext2@plt>
   2e248:	ldr	r3, [pc, #3720]	; 2f0d8 <g_unichar_xdigit_value@plt+0x1b274>
   2e24c:	mov	r2, r4
   2e250:	mov	r1, r5
   2e254:	add	r3, pc, r3
   2e258:	str	r3, [sp]
   2e25c:	str	r0, [sp, #4]
   2e260:	ldr	r0, [pc, #3700]	; 2f0dc <g_unichar_xdigit_value@plt+0x1b278>
   2e264:	add	r0, pc, r0
   2e268:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e26c:	mov	r4, r0
   2e270:	ldr	r0, [sp, #24]
   2e274:	mov	r1, r4
   2e278:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e27c:	cmp	r4, #0
   2e280:	beq	2e28c <g_unichar_xdigit_value@plt+0x1a428>
   2e284:	mov	r0, r4
   2e288:	bl	13b94 <g_object_unref@plt>
   2e28c:	ldr	r0, [pc, #3660]	; 2f0e0 <g_unichar_xdigit_value@plt+0x1b27c>
   2e290:	ldr	r1, [pc, #3660]	; 2f0e4 <g_unichar_xdigit_value@plt+0x1b280>
   2e294:	add	r0, pc, r0
   2e298:	add	r1, pc, r1
   2e29c:	bl	13c9c <g_dgettext@plt>
   2e2a0:	ldr	r1, [pc, #3648]	; 2f0e8 <g_unichar_xdigit_value@plt+0x1b284>
   2e2a4:	ldr	r2, [pc, #3648]	; 2f0ec <g_unichar_xdigit_value@plt+0x1b288>
   2e2a8:	add	r1, pc, r1
   2e2ac:	add	r2, pc, r2
   2e2b0:	mov	r5, r0
   2e2b4:	mov	r0, #0
   2e2b8:	bl	13b04 <g_dpgettext2@plt>
   2e2bc:	ldr	r1, [pc, #3628]	; 2f0f0 <g_unichar_xdigit_value@plt+0x1b28c>
   2e2c0:	ldr	r2, [pc, #3628]	; 2f0f4 <g_unichar_xdigit_value@plt+0x1b290>
   2e2c4:	add	r1, pc, r1
   2e2c8:	add	r2, pc, r2
   2e2cc:	mov	r4, r0
   2e2d0:	mov	r0, #0
   2e2d4:	bl	13b04 <g_dpgettext2@plt>
   2e2d8:	ldr	ip, [pc, #3608]	; 2f0f8 <g_unichar_xdigit_value@plt+0x1b294>
   2e2dc:	ldr	r3, [pc, #3608]	; 2f0fc <g_unichar_xdigit_value@plt+0x1b298>
   2e2e0:	mov	r2, r4
   2e2e4:	add	ip, pc, ip
   2e2e8:	mov	r1, r5
   2e2ec:	add	r3, pc, r3
   2e2f0:	str	ip, [sp]
   2e2f4:	str	r0, [sp, #4]
   2e2f8:	ldr	r0, [pc, #3584]	; 2f100 <g_unichar_xdigit_value@plt+0x1b29c>
   2e2fc:	add	r0, pc, r0
   2e300:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e304:	mov	r4, r0
   2e308:	ldr	r0, [sp, #24]
   2e30c:	mov	r1, r4
   2e310:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e314:	cmp	r4, #0
   2e318:	beq	2e324 <g_unichar_xdigit_value@plt+0x1a4c0>
   2e31c:	mov	r0, r4
   2e320:	bl	13b94 <g_object_unref@plt>
   2e324:	ldr	r0, [pc, #3544]	; 2f104 <g_unichar_xdigit_value@plt+0x1b2a0>
   2e328:	ldr	r1, [pc, #3544]	; 2f108 <g_unichar_xdigit_value@plt+0x1b2a4>
   2e32c:	add	r0, pc, r0
   2e330:	add	r1, pc, r1
   2e334:	bl	13c9c <g_dgettext@plt>
   2e338:	ldr	r1, [pc, #3532]	; 2f10c <g_unichar_xdigit_value@plt+0x1b2a8>
   2e33c:	ldr	r2, [pc, #3532]	; 2f110 <g_unichar_xdigit_value@plt+0x1b2ac>
   2e340:	add	r1, pc, r1
   2e344:	add	r2, pc, r2
   2e348:	mov	r5, r0
   2e34c:	mov	r0, #0
   2e350:	bl	13b04 <g_dpgettext2@plt>
   2e354:	ldr	r1, [pc, #3512]	; 2f114 <g_unichar_xdigit_value@plt+0x1b2b0>
   2e358:	ldr	r2, [pc, #3512]	; 2f118 <g_unichar_xdigit_value@plt+0x1b2b4>
   2e35c:	add	r1, pc, r1
   2e360:	add	r2, pc, r2
   2e364:	mov	r4, r0
   2e368:	mov	r0, #0
   2e36c:	bl	13b04 <g_dpgettext2@plt>
   2e370:	ldr	ip, [pc, #3492]	; 2f11c <g_unichar_xdigit_value@plt+0x1b2b8>
   2e374:	ldr	r3, [pc, #3492]	; 2f120 <g_unichar_xdigit_value@plt+0x1b2bc>
   2e378:	mov	r2, r4
   2e37c:	add	ip, pc, ip
   2e380:	mov	r1, r5
   2e384:	add	r3, pc, r3
   2e388:	str	ip, [sp]
   2e38c:	str	r0, [sp, #4]
   2e390:	ldr	r0, [pc, #3468]	; 2f124 <g_unichar_xdigit_value@plt+0x1b2c0>
   2e394:	add	r0, pc, r0
   2e398:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e39c:	mov	r4, r0
   2e3a0:	ldr	r0, [sp, #24]
   2e3a4:	mov	r1, r4
   2e3a8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e3ac:	cmp	r4, #0
   2e3b0:	beq	2e3bc <g_unichar_xdigit_value@plt+0x1a558>
   2e3b4:	mov	r0, r4
   2e3b8:	bl	13b94 <g_object_unref@plt>
   2e3bc:	ldr	r0, [pc, #3428]	; 2f128 <g_unichar_xdigit_value@plt+0x1b2c4>
   2e3c0:	ldr	r1, [pc, #3428]	; 2f12c <g_unichar_xdigit_value@plt+0x1b2c8>
   2e3c4:	add	r0, pc, r0
   2e3c8:	add	r1, pc, r1
   2e3cc:	bl	13c9c <g_dgettext@plt>
   2e3d0:	ldr	r1, [pc, #3416]	; 2f130 <g_unichar_xdigit_value@plt+0x1b2cc>
   2e3d4:	ldr	r2, [pc, #3416]	; 2f134 <g_unichar_xdigit_value@plt+0x1b2d0>
   2e3d8:	add	r1, pc, r1
   2e3dc:	add	r2, pc, r2
   2e3e0:	mov	r5, r0
   2e3e4:	mov	r0, #0
   2e3e8:	bl	13b04 <g_dpgettext2@plt>
   2e3ec:	ldr	r1, [pc, #3396]	; 2f138 <g_unichar_xdigit_value@plt+0x1b2d4>
   2e3f0:	ldr	r2, [pc, #3396]	; 2f13c <g_unichar_xdigit_value@plt+0x1b2d8>
   2e3f4:	add	r1, pc, r1
   2e3f8:	add	r2, pc, r2
   2e3fc:	mov	r4, r0
   2e400:	mov	r0, #0
   2e404:	bl	13b04 <g_dpgettext2@plt>
   2e408:	ldr	ip, [pc, #3376]	; 2f140 <g_unichar_xdigit_value@plt+0x1b2dc>
   2e40c:	ldr	r3, [pc, #3376]	; 2f144 <g_unichar_xdigit_value@plt+0x1b2e0>
   2e410:	mov	r2, r4
   2e414:	add	ip, pc, ip
   2e418:	mov	r1, r5
   2e41c:	add	r3, pc, r3
   2e420:	str	ip, [sp]
   2e424:	str	r0, [sp, #4]
   2e428:	ldr	r0, [pc, #3352]	; 2f148 <g_unichar_xdigit_value@plt+0x1b2e4>
   2e42c:	add	r0, pc, r0
   2e430:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e434:	mov	r4, r0
   2e438:	ldr	r0, [sp, #24]
   2e43c:	mov	r1, r4
   2e440:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e444:	cmp	r4, #0
   2e448:	beq	2e454 <g_unichar_xdigit_value@plt+0x1a5f0>
   2e44c:	mov	r0, r4
   2e450:	bl	13b94 <g_object_unref@plt>
   2e454:	ldr	r0, [pc, #3312]	; 2f14c <g_unichar_xdigit_value@plt+0x1b2e8>
   2e458:	ldr	r1, [pc, #3312]	; 2f150 <g_unichar_xdigit_value@plt+0x1b2ec>
   2e45c:	add	r0, pc, r0
   2e460:	add	r1, pc, r1
   2e464:	bl	13c9c <g_dgettext@plt>
   2e468:	ldr	r1, [pc, #3300]	; 2f154 <g_unichar_xdigit_value@plt+0x1b2f0>
   2e46c:	ldr	r2, [pc, #3300]	; 2f158 <g_unichar_xdigit_value@plt+0x1b2f4>
   2e470:	add	r1, pc, r1
   2e474:	add	r2, pc, r2
   2e478:	mov	r5, r0
   2e47c:	mov	r0, #0
   2e480:	bl	13b04 <g_dpgettext2@plt>
   2e484:	ldr	r1, [pc, #3280]	; 2f15c <g_unichar_xdigit_value@plt+0x1b2f8>
   2e488:	ldr	r2, [pc, #3280]	; 2f160 <g_unichar_xdigit_value@plt+0x1b2fc>
   2e48c:	add	r1, pc, r1
   2e490:	add	r2, pc, r2
   2e494:	mov	r4, r0
   2e498:	mov	r0, #0
   2e49c:	bl	13b04 <g_dpgettext2@plt>
   2e4a0:	ldr	ip, [pc, #3260]	; 2f164 <g_unichar_xdigit_value@plt+0x1b300>
   2e4a4:	ldr	r3, [pc, #3260]	; 2f168 <g_unichar_xdigit_value@plt+0x1b304>
   2e4a8:	mov	r2, r4
   2e4ac:	add	ip, pc, ip
   2e4b0:	mov	r1, r5
   2e4b4:	add	r3, pc, r3
   2e4b8:	str	ip, [sp]
   2e4bc:	str	r0, [sp, #4]
   2e4c0:	ldr	r0, [pc, #3236]	; 2f16c <g_unichar_xdigit_value@plt+0x1b308>
   2e4c4:	add	r0, pc, r0
   2e4c8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e4cc:	mov	r4, r0
   2e4d0:	ldr	r0, [sp, #24]
   2e4d4:	mov	r1, r4
   2e4d8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e4dc:	cmp	r4, #0
   2e4e0:	beq	2e4ec <g_unichar_xdigit_value@plt+0x1a688>
   2e4e4:	mov	r0, r4
   2e4e8:	bl	13b94 <g_object_unref@plt>
   2e4ec:	ldr	r0, [pc, #3196]	; 2f170 <g_unichar_xdigit_value@plt+0x1b30c>
   2e4f0:	ldr	r1, [pc, #3196]	; 2f174 <g_unichar_xdigit_value@plt+0x1b310>
   2e4f4:	add	r0, pc, r0
   2e4f8:	add	r1, pc, r1
   2e4fc:	bl	13c9c <g_dgettext@plt>
   2e500:	ldr	r1, [pc, #3184]	; 2f178 <g_unichar_xdigit_value@plt+0x1b314>
   2e504:	ldr	r2, [pc, #3184]	; 2f17c <g_unichar_xdigit_value@plt+0x1b318>
   2e508:	add	r1, pc, r1
   2e50c:	add	r2, pc, r2
   2e510:	mov	r5, r0
   2e514:	mov	r0, #0
   2e518:	bl	13b04 <g_dpgettext2@plt>
   2e51c:	ldr	r1, [pc, #3164]	; 2f180 <g_unichar_xdigit_value@plt+0x1b31c>
   2e520:	ldr	r2, [pc, #3164]	; 2f184 <g_unichar_xdigit_value@plt+0x1b320>
   2e524:	add	r1, pc, r1
   2e528:	add	r2, pc, r2
   2e52c:	mov	r4, r0
   2e530:	mov	r0, #0
   2e534:	bl	13b04 <g_dpgettext2@plt>
   2e538:	ldr	ip, [pc, #3144]	; 2f188 <g_unichar_xdigit_value@plt+0x1b324>
   2e53c:	ldr	r3, [pc, #3144]	; 2f18c <g_unichar_xdigit_value@plt+0x1b328>
   2e540:	mov	r2, r4
   2e544:	add	ip, pc, ip
   2e548:	mov	r1, r5
   2e54c:	add	r3, pc, r3
   2e550:	str	ip, [sp]
   2e554:	str	r0, [sp, #4]
   2e558:	ldr	r0, [pc, #3120]	; 2f190 <g_unichar_xdigit_value@plt+0x1b32c>
   2e55c:	add	r0, pc, r0
   2e560:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e564:	mov	r4, r0
   2e568:	ldr	r0, [sp, #32]
   2e56c:	mov	r1, r4
   2e570:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e574:	cmp	r4, #0
   2e578:	beq	2e584 <g_unichar_xdigit_value@plt+0x1a720>
   2e57c:	mov	r0, r4
   2e580:	bl	13b94 <g_object_unref@plt>
   2e584:	ldr	r0, [pc, #3080]	; 2f194 <g_unichar_xdigit_value@plt+0x1b330>
   2e588:	ldr	r1, [pc, #3080]	; 2f198 <g_unichar_xdigit_value@plt+0x1b334>
   2e58c:	add	r0, pc, r0
   2e590:	add	r1, pc, r1
   2e594:	bl	13c9c <g_dgettext@plt>
   2e598:	ldr	r1, [pc, #3068]	; 2f19c <g_unichar_xdigit_value@plt+0x1b338>
   2e59c:	ldr	r2, [pc, #3068]	; 2f1a0 <g_unichar_xdigit_value@plt+0x1b33c>
   2e5a0:	add	r1, pc, r1
   2e5a4:	add	r2, pc, r2
   2e5a8:	mov	r5, r0
   2e5ac:	mov	r0, #0
   2e5b0:	bl	13b04 <g_dpgettext2@plt>
   2e5b4:	ldr	r1, [pc, #3048]	; 2f1a4 <g_unichar_xdigit_value@plt+0x1b340>
   2e5b8:	ldr	r2, [pc, #3048]	; 2f1a8 <g_unichar_xdigit_value@plt+0x1b344>
   2e5bc:	add	r1, pc, r1
   2e5c0:	add	r2, pc, r2
   2e5c4:	mov	r4, r0
   2e5c8:	mov	r0, #0
   2e5cc:	bl	13b04 <g_dpgettext2@plt>
   2e5d0:	ldr	r3, [pc, #3028]	; 2f1ac <g_unichar_xdigit_value@plt+0x1b348>
   2e5d4:	mov	r2, r4
   2e5d8:	mov	r1, r5
   2e5dc:	add	r3, pc, r3
   2e5e0:	str	r3, [sp]
   2e5e4:	str	r0, [sp, #4]
   2e5e8:	ldr	r0, [pc, #3008]	; 2f1b0 <g_unichar_xdigit_value@plt+0x1b34c>
   2e5ec:	add	r0, pc, r0
   2e5f0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e5f4:	mov	r4, r0
   2e5f8:	ldr	r0, [sp, #32]
   2e5fc:	mov	r1, r4
   2e600:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e604:	cmp	r4, #0
   2e608:	beq	2e614 <g_unichar_xdigit_value@plt+0x1a7b0>
   2e60c:	mov	r0, r4
   2e610:	bl	13b94 <g_object_unref@plt>
   2e614:	ldr	r0, [pc, #2968]	; 2f1b4 <g_unichar_xdigit_value@plt+0x1b350>
   2e618:	ldr	r1, [pc, #2968]	; 2f1b8 <g_unichar_xdigit_value@plt+0x1b354>
   2e61c:	add	r0, pc, r0
   2e620:	add	r1, pc, r1
   2e624:	bl	13c9c <g_dgettext@plt>
   2e628:	ldr	r1, [pc, #2956]	; 2f1bc <g_unichar_xdigit_value@plt+0x1b358>
   2e62c:	ldr	r2, [pc, #2956]	; 2f1c0 <g_unichar_xdigit_value@plt+0x1b35c>
   2e630:	add	r1, pc, r1
   2e634:	add	r2, pc, r2
   2e638:	mov	r5, r0
   2e63c:	mov	r0, #0
   2e640:	bl	13b04 <g_dpgettext2@plt>
   2e644:	ldr	r1, [pc, #2936]	; 2f1c4 <g_unichar_xdigit_value@plt+0x1b360>
   2e648:	ldr	r2, [pc, #2936]	; 2f1c8 <g_unichar_xdigit_value@plt+0x1b364>
   2e64c:	add	r1, pc, r1
   2e650:	add	r2, pc, r2
   2e654:	mov	r4, r0
   2e658:	mov	r0, #0
   2e65c:	bl	13b04 <g_dpgettext2@plt>
   2e660:	ldr	ip, [pc, #2916]	; 2f1cc <g_unichar_xdigit_value@plt+0x1b368>
   2e664:	ldr	r3, [pc, #2916]	; 2f1d0 <g_unichar_xdigit_value@plt+0x1b36c>
   2e668:	mov	r2, r4
   2e66c:	add	ip, pc, ip
   2e670:	mov	r1, r5
   2e674:	add	r3, pc, r3
   2e678:	str	ip, [sp]
   2e67c:	str	r0, [sp, #4]
   2e680:	ldr	r0, [pc, #2892]	; 2f1d4 <g_unichar_xdigit_value@plt+0x1b370>
   2e684:	add	r0, pc, r0
   2e688:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e68c:	mov	r4, r0
   2e690:	ldr	r0, [sp, #32]
   2e694:	mov	r1, r4
   2e698:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e69c:	cmp	r4, #0
   2e6a0:	beq	2e6ac <g_unichar_xdigit_value@plt+0x1a848>
   2e6a4:	mov	r0, r4
   2e6a8:	bl	13b94 <g_object_unref@plt>
   2e6ac:	ldr	r0, [pc, #2852]	; 2f1d8 <g_unichar_xdigit_value@plt+0x1b374>
   2e6b0:	ldr	r1, [pc, #2852]	; 2f1dc <g_unichar_xdigit_value@plt+0x1b378>
   2e6b4:	add	r0, pc, r0
   2e6b8:	add	r1, pc, r1
   2e6bc:	bl	13c9c <g_dgettext@plt>
   2e6c0:	ldr	r1, [pc, #2840]	; 2f1e0 <g_unichar_xdigit_value@plt+0x1b37c>
   2e6c4:	ldr	r2, [pc, #2840]	; 2f1e4 <g_unichar_xdigit_value@plt+0x1b380>
   2e6c8:	add	r1, pc, r1
   2e6cc:	add	r2, pc, r2
   2e6d0:	mov	r5, r0
   2e6d4:	mov	r0, #0
   2e6d8:	bl	13b04 <g_dpgettext2@plt>
   2e6dc:	ldr	r1, [pc, #2820]	; 2f1e8 <g_unichar_xdigit_value@plt+0x1b384>
   2e6e0:	ldr	r2, [pc, #2820]	; 2f1ec <g_unichar_xdigit_value@plt+0x1b388>
   2e6e4:	add	r1, pc, r1
   2e6e8:	add	r2, pc, r2
   2e6ec:	mov	r4, r0
   2e6f0:	mov	r0, #0
   2e6f4:	bl	13b04 <g_dpgettext2@plt>
   2e6f8:	ldr	ip, [pc, #2800]	; 2f1f0 <g_unichar_xdigit_value@plt+0x1b38c>
   2e6fc:	ldr	r3, [pc, #2800]	; 2f1f4 <g_unichar_xdigit_value@plt+0x1b390>
   2e700:	mov	r2, r4
   2e704:	add	ip, pc, ip
   2e708:	mov	r1, r5
   2e70c:	add	r3, pc, r3
   2e710:	str	ip, [sp]
   2e714:	str	r0, [sp, #4]
   2e718:	ldr	r0, [pc, #2776]	; 2f1f8 <g_unichar_xdigit_value@plt+0x1b394>
   2e71c:	add	r0, pc, r0
   2e720:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e724:	mov	r4, r0
   2e728:	ldr	r0, [sp, #32]
   2e72c:	mov	r1, r4
   2e730:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e734:	cmp	r4, #0
   2e738:	beq	2e744 <g_unichar_xdigit_value@plt+0x1a8e0>
   2e73c:	mov	r0, r4
   2e740:	bl	13b94 <g_object_unref@plt>
   2e744:	ldr	r0, [pc, #2736]	; 2f1fc <g_unichar_xdigit_value@plt+0x1b398>
   2e748:	ldr	r1, [pc, #2736]	; 2f200 <g_unichar_xdigit_value@plt+0x1b39c>
   2e74c:	add	r0, pc, r0
   2e750:	add	r1, pc, r1
   2e754:	bl	13c9c <g_dgettext@plt>
   2e758:	ldr	r1, [pc, #2724]	; 2f204 <g_unichar_xdigit_value@plt+0x1b3a0>
   2e75c:	ldr	r2, [pc, #2724]	; 2f208 <g_unichar_xdigit_value@plt+0x1b3a4>
   2e760:	add	r1, pc, r1
   2e764:	add	r2, pc, r2
   2e768:	mov	r5, r0
   2e76c:	mov	r0, #0
   2e770:	bl	13b04 <g_dpgettext2@plt>
   2e774:	ldr	r1, [pc, #2704]	; 2f20c <g_unichar_xdigit_value@plt+0x1b3a8>
   2e778:	ldr	r2, [pc, #2704]	; 2f210 <g_unichar_xdigit_value@plt+0x1b3ac>
   2e77c:	add	r1, pc, r1
   2e780:	add	r2, pc, r2
   2e784:	mov	r4, r0
   2e788:	mov	r0, #0
   2e78c:	bl	13b04 <g_dpgettext2@plt>
   2e790:	ldr	ip, [pc, #2684]	; 2f214 <g_unichar_xdigit_value@plt+0x1b3b0>
   2e794:	ldr	r3, [pc, #2684]	; 2f218 <g_unichar_xdigit_value@plt+0x1b3b4>
   2e798:	mov	r2, r4
   2e79c:	add	ip, pc, ip
   2e7a0:	mov	r1, r5
   2e7a4:	add	r3, pc, r3
   2e7a8:	str	ip, [sp]
   2e7ac:	str	r0, [sp, #4]
   2e7b0:	ldr	r0, [pc, #2660]	; 2f21c <g_unichar_xdigit_value@plt+0x1b3b8>
   2e7b4:	add	r0, pc, r0
   2e7b8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e7bc:	mov	r4, r0
   2e7c0:	ldr	r0, [sp, #32]
   2e7c4:	mov	r1, r4
   2e7c8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e7cc:	cmp	r4, #0
   2e7d0:	beq	2e7dc <g_unichar_xdigit_value@plt+0x1a978>
   2e7d4:	mov	r0, r4
   2e7d8:	bl	13b94 <g_object_unref@plt>
   2e7dc:	ldr	r0, [pc, #2620]	; 2f220 <g_unichar_xdigit_value@plt+0x1b3bc>
   2e7e0:	ldr	r1, [pc, #2620]	; 2f224 <g_unichar_xdigit_value@plt+0x1b3c0>
   2e7e4:	add	r0, pc, r0
   2e7e8:	add	r1, pc, r1
   2e7ec:	bl	13c9c <g_dgettext@plt>
   2e7f0:	ldr	r1, [pc, #2608]	; 2f228 <g_unichar_xdigit_value@plt+0x1b3c4>
   2e7f4:	ldr	r2, [pc, #2608]	; 2f22c <g_unichar_xdigit_value@plt+0x1b3c8>
   2e7f8:	add	r1, pc, r1
   2e7fc:	add	r2, pc, r2
   2e800:	mov	r5, r0
   2e804:	mov	r0, #0
   2e808:	bl	13b04 <g_dpgettext2@plt>
   2e80c:	ldr	r1, [pc, #2588]	; 2f230 <g_unichar_xdigit_value@plt+0x1b3cc>
   2e810:	ldr	r2, [pc, #2588]	; 2f234 <g_unichar_xdigit_value@plt+0x1b3d0>
   2e814:	add	r1, pc, r1
   2e818:	add	r2, pc, r2
   2e81c:	mov	r4, r0
   2e820:	mov	r0, #0
   2e824:	bl	13b04 <g_dpgettext2@plt>
   2e828:	ldr	ip, [pc, #2568]	; 2f238 <g_unichar_xdigit_value@plt+0x1b3d4>
   2e82c:	ldr	r3, [pc, #2568]	; 2f23c <g_unichar_xdigit_value@plt+0x1b3d8>
   2e830:	mov	r2, r4
   2e834:	add	ip, pc, ip
   2e838:	mov	r1, r5
   2e83c:	add	r3, pc, r3
   2e840:	str	ip, [sp]
   2e844:	str	r0, [sp, #4]
   2e848:	ldr	r0, [pc, #2544]	; 2f240 <g_unichar_xdigit_value@plt+0x1b3dc>
   2e84c:	add	r0, pc, r0
   2e850:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e854:	mov	r4, r0
   2e858:	ldr	r0, [sp, #32]
   2e85c:	mov	r1, r4
   2e860:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e864:	cmp	r4, #0
   2e868:	beq	2e874 <g_unichar_xdigit_value@plt+0x1aa10>
   2e86c:	mov	r0, r4
   2e870:	bl	13b94 <g_object_unref@plt>
   2e874:	ldr	r0, [pc, #2504]	; 2f244 <g_unichar_xdigit_value@plt+0x1b3e0>
   2e878:	ldr	r1, [pc, #2504]	; 2f248 <g_unichar_xdigit_value@plt+0x1b3e4>
   2e87c:	add	r0, pc, r0
   2e880:	add	r1, pc, r1
   2e884:	bl	13c9c <g_dgettext@plt>
   2e888:	ldr	r1, [pc, #2492]	; 2f24c <g_unichar_xdigit_value@plt+0x1b3e8>
   2e88c:	ldr	r2, [pc, #2492]	; 2f250 <g_unichar_xdigit_value@plt+0x1b3ec>
   2e890:	add	r1, pc, r1
   2e894:	add	r2, pc, r2
   2e898:	mov	r5, r0
   2e89c:	mov	r0, #0
   2e8a0:	bl	13b04 <g_dpgettext2@plt>
   2e8a4:	ldr	r1, [pc, #2472]	; 2f254 <g_unichar_xdigit_value@plt+0x1b3f0>
   2e8a8:	ldr	r2, [pc, #2472]	; 2f258 <g_unichar_xdigit_value@plt+0x1b3f4>
   2e8ac:	add	r1, pc, r1
   2e8b0:	add	r2, pc, r2
   2e8b4:	mov	r4, r0
   2e8b8:	mov	r0, #0
   2e8bc:	bl	13b04 <g_dpgettext2@plt>
   2e8c0:	ldr	ip, [pc, #2452]	; 2f25c <g_unichar_xdigit_value@plt+0x1b3f8>
   2e8c4:	ldr	r3, [pc, #2452]	; 2f260 <g_unichar_xdigit_value@plt+0x1b3fc>
   2e8c8:	mov	r2, r4
   2e8cc:	add	ip, pc, ip
   2e8d0:	mov	r1, r5
   2e8d4:	add	r3, pc, r3
   2e8d8:	str	ip, [sp]
   2e8dc:	str	r0, [sp, #4]
   2e8e0:	ldr	r0, [pc, #2428]	; 2f264 <g_unichar_xdigit_value@plt+0x1b400>
   2e8e4:	add	r0, pc, r0
   2e8e8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e8ec:	mov	r4, r0
   2e8f0:	ldr	r0, [sp, #28]
   2e8f4:	mov	r1, r4
   2e8f8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e8fc:	cmp	r4, #0
   2e900:	beq	2e90c <g_unichar_xdigit_value@plt+0x1aaa8>
   2e904:	mov	r0, r4
   2e908:	bl	13b94 <g_object_unref@plt>
   2e90c:	ldr	r0, [pc, #2388]	; 2f268 <g_unichar_xdigit_value@plt+0x1b404>
   2e910:	ldr	r1, [pc, #2388]	; 2f26c <g_unichar_xdigit_value@plt+0x1b408>
   2e914:	add	r0, pc, r0
   2e918:	add	r1, pc, r1
   2e91c:	bl	13c9c <g_dgettext@plt>
   2e920:	ldr	r1, [pc, #2376]	; 2f270 <g_unichar_xdigit_value@plt+0x1b40c>
   2e924:	ldr	r2, [pc, #2376]	; 2f274 <g_unichar_xdigit_value@plt+0x1b410>
   2e928:	add	r1, pc, r1
   2e92c:	add	r2, pc, r2
   2e930:	mov	r5, r0
   2e934:	mov	r0, #0
   2e938:	bl	13b04 <g_dpgettext2@plt>
   2e93c:	ldr	r1, [pc, #2356]	; 2f278 <g_unichar_xdigit_value@plt+0x1b414>
   2e940:	ldr	r2, [pc, #2356]	; 2f27c <g_unichar_xdigit_value@plt+0x1b418>
   2e944:	add	r1, pc, r1
   2e948:	add	r2, pc, r2
   2e94c:	mov	r4, r0
   2e950:	mov	r0, #0
   2e954:	bl	13b04 <g_dpgettext2@plt>
   2e958:	ldr	ip, [pc, #2336]	; 2f280 <g_unichar_xdigit_value@plt+0x1b41c>
   2e95c:	ldr	r3, [pc, #2336]	; 2f284 <g_unichar_xdigit_value@plt+0x1b420>
   2e960:	mov	r2, r4
   2e964:	add	ip, pc, ip
   2e968:	mov	r1, r5
   2e96c:	add	r3, pc, r3
   2e970:	str	ip, [sp]
   2e974:	str	r0, [sp, #4]
   2e978:	ldr	r0, [pc, #2312]	; 2f288 <g_unichar_xdigit_value@plt+0x1b424>
   2e97c:	add	r0, pc, r0
   2e980:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2e984:	mov	r4, r0
   2e988:	ldr	r0, [sp, #28]
   2e98c:	mov	r1, r4
   2e990:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2e994:	cmp	r4, #0
   2e998:	beq	2e9a4 <g_unichar_xdigit_value@plt+0x1ab40>
   2e99c:	mov	r0, r4
   2e9a0:	bl	13b94 <g_object_unref@plt>
   2e9a4:	ldr	r0, [pc, #2272]	; 2f28c <g_unichar_xdigit_value@plt+0x1b428>
   2e9a8:	ldr	r1, [pc, #2272]	; 2f290 <g_unichar_xdigit_value@plt+0x1b42c>
   2e9ac:	add	r0, pc, r0
   2e9b0:	add	r1, pc, r1
   2e9b4:	bl	13c9c <g_dgettext@plt>
   2e9b8:	ldr	r1, [pc, #2260]	; 2f294 <g_unichar_xdigit_value@plt+0x1b430>
   2e9bc:	ldr	r2, [pc, #2260]	; 2f298 <g_unichar_xdigit_value@plt+0x1b434>
   2e9c0:	add	r1, pc, r1
   2e9c4:	add	r2, pc, r2
   2e9c8:	mov	r5, r0
   2e9cc:	mov	r0, #0
   2e9d0:	bl	13b04 <g_dpgettext2@plt>
   2e9d4:	ldr	r1, [pc, #2240]	; 2f29c <g_unichar_xdigit_value@plt+0x1b438>
   2e9d8:	ldr	r2, [pc, #2240]	; 2f2a0 <g_unichar_xdigit_value@plt+0x1b43c>
   2e9dc:	add	r1, pc, r1
   2e9e0:	add	r2, pc, r2
   2e9e4:	mov	r4, r0
   2e9e8:	mov	r0, #0
   2e9ec:	bl	13b04 <g_dpgettext2@plt>
   2e9f0:	ldr	ip, [pc, #2220]	; 2f2a4 <g_unichar_xdigit_value@plt+0x1b440>
   2e9f4:	ldr	r3, [pc, #2220]	; 2f2a8 <g_unichar_xdigit_value@plt+0x1b444>
   2e9f8:	mov	r2, r4
   2e9fc:	add	ip, pc, ip
   2ea00:	mov	r1, r5
   2ea04:	add	r3, pc, r3
   2ea08:	str	ip, [sp]
   2ea0c:	str	r0, [sp, #4]
   2ea10:	ldr	r0, [pc, #2196]	; 2f2ac <g_unichar_xdigit_value@plt+0x1b448>
   2ea14:	add	r0, pc, r0
   2ea18:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2ea1c:	mov	r4, r0
   2ea20:	ldr	r0, [sp, #28]
   2ea24:	mov	r1, r4
   2ea28:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2ea2c:	cmp	r4, #0
   2ea30:	beq	2ea3c <g_unichar_xdigit_value@plt+0x1abd8>
   2ea34:	mov	r0, r4
   2ea38:	bl	13b94 <g_object_unref@plt>
   2ea3c:	ldr	r0, [pc, #2156]	; 2f2b0 <g_unichar_xdigit_value@plt+0x1b44c>
   2ea40:	ldr	r1, [pc, #2156]	; 2f2b4 <g_unichar_xdigit_value@plt+0x1b450>
   2ea44:	add	r0, pc, r0
   2ea48:	add	r1, pc, r1
   2ea4c:	bl	13c9c <g_dgettext@plt>
   2ea50:	ldr	r1, [pc, #2144]	; 2f2b8 <g_unichar_xdigit_value@plt+0x1b454>
   2ea54:	ldr	r2, [pc, #2144]	; 2f2bc <g_unichar_xdigit_value@plt+0x1b458>
   2ea58:	add	r1, pc, r1
   2ea5c:	add	r2, pc, r2
   2ea60:	mov	r5, r0
   2ea64:	mov	r0, #0
   2ea68:	bl	13b04 <g_dpgettext2@plt>
   2ea6c:	ldr	r1, [pc, #2124]	; 2f2c0 <g_unichar_xdigit_value@plt+0x1b45c>
   2ea70:	ldr	r2, [pc, #2124]	; 2f2c4 <g_unichar_xdigit_value@plt+0x1b460>
   2ea74:	add	r1, pc, r1
   2ea78:	add	r2, pc, r2
   2ea7c:	mov	r4, r0
   2ea80:	mov	r0, #0
   2ea84:	bl	13b04 <g_dpgettext2@plt>
   2ea88:	ldr	ip, [pc, #2104]	; 2f2c8 <g_unichar_xdigit_value@plt+0x1b464>
   2ea8c:	ldr	r3, [pc, #2104]	; 2f2cc <g_unichar_xdigit_value@plt+0x1b468>
   2ea90:	mov	r2, r4
   2ea94:	add	ip, pc, ip
   2ea98:	mov	r1, r5
   2ea9c:	add	r3, pc, r3
   2eaa0:	str	ip, [sp]
   2eaa4:	str	r0, [sp, #4]
   2eaa8:	ldr	r0, [pc, #2080]	; 2f2d0 <g_unichar_xdigit_value@plt+0x1b46c>
   2eaac:	add	r0, pc, r0
   2eab0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2eab4:	mov	r4, r0
   2eab8:	ldr	r0, [sp, #28]
   2eabc:	mov	r1, r4
   2eac0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2eac4:	cmp	r4, #0
   2eac8:	beq	2ead4 <g_unichar_xdigit_value@plt+0x1ac70>
   2eacc:	mov	r0, r4
   2ead0:	bl	13b94 <g_object_unref@plt>
   2ead4:	ldr	r0, [pc, #2040]	; 2f2d4 <g_unichar_xdigit_value@plt+0x1b470>
   2ead8:	ldr	r1, [pc, #2040]	; 2f2d8 <g_unichar_xdigit_value@plt+0x1b474>
   2eadc:	add	r0, pc, r0
   2eae0:	add	r1, pc, r1
   2eae4:	bl	13c9c <g_dgettext@plt>
   2eae8:	ldr	r1, [pc, #2028]	; 2f2dc <g_unichar_xdigit_value@plt+0x1b478>
   2eaec:	ldr	r2, [pc, #2028]	; 2f2e0 <g_unichar_xdigit_value@plt+0x1b47c>
   2eaf0:	add	r1, pc, r1
   2eaf4:	add	r2, pc, r2
   2eaf8:	mov	r5, r0
   2eafc:	mov	r0, #0
   2eb00:	bl	13b04 <g_dpgettext2@plt>
   2eb04:	ldr	r1, [pc, #2008]	; 2f2e4 <g_unichar_xdigit_value@plt+0x1b480>
   2eb08:	ldr	r2, [pc, #2008]	; 2f2e8 <g_unichar_xdigit_value@plt+0x1b484>
   2eb0c:	add	r1, pc, r1
   2eb10:	add	r2, pc, r2
   2eb14:	mov	r4, r0
   2eb18:	mov	r0, #0
   2eb1c:	bl	13b04 <g_dpgettext2@plt>
   2eb20:	ldr	r3, [pc, #1988]	; 2f2ec <g_unichar_xdigit_value@plt+0x1b488>
   2eb24:	mov	r2, r4
   2eb28:	mov	r1, r5
   2eb2c:	add	r3, pc, r3
   2eb30:	str	r3, [sp]
   2eb34:	str	r0, [sp, #4]
   2eb38:	ldr	r0, [pc, #1968]	; 2f2f0 <g_unichar_xdigit_value@plt+0x1b48c>
   2eb3c:	add	r0, pc, r0
   2eb40:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2eb44:	mov	r4, r0
   2eb48:	ldr	r0, [sp, #28]
   2eb4c:	mov	r1, r4
   2eb50:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2eb54:	cmp	r4, #0
   2eb58:	beq	2eb64 <g_unichar_xdigit_value@plt+0x1ad00>
   2eb5c:	mov	r0, r4
   2eb60:	bl	13b94 <g_object_unref@plt>
   2eb64:	ldr	r0, [pc, #1928]	; 2f2f4 <g_unichar_xdigit_value@plt+0x1b490>
   2eb68:	ldr	r1, [pc, #1928]	; 2f2f8 <g_unichar_xdigit_value@plt+0x1b494>
   2eb6c:	add	r0, pc, r0
   2eb70:	add	r1, pc, r1
   2eb74:	bl	13c9c <g_dgettext@plt>
   2eb78:	ldr	r1, [pc, #1916]	; 2f2fc <g_unichar_xdigit_value@plt+0x1b498>
   2eb7c:	ldr	r2, [pc, #1916]	; 2f300 <g_unichar_xdigit_value@plt+0x1b49c>
   2eb80:	add	r1, pc, r1
   2eb84:	add	r2, pc, r2
   2eb88:	mov	r5, r0
   2eb8c:	mov	r0, #0
   2eb90:	bl	13b04 <g_dpgettext2@plt>
   2eb94:	ldr	r1, [pc, #1896]	; 2f304 <g_unichar_xdigit_value@plt+0x1b4a0>
   2eb98:	ldr	r2, [pc, #1896]	; 2f308 <g_unichar_xdigit_value@plt+0x1b4a4>
   2eb9c:	add	r1, pc, r1
   2eba0:	add	r2, pc, r2
   2eba4:	mov	r4, r0
   2eba8:	mov	r0, #0
   2ebac:	bl	13b04 <g_dpgettext2@plt>
   2ebb0:	ldr	ip, [pc, #1876]	; 2f30c <g_unichar_xdigit_value@plt+0x1b4a8>
   2ebb4:	ldr	r3, [pc, #1876]	; 2f310 <g_unichar_xdigit_value@plt+0x1b4ac>
   2ebb8:	mov	r2, r4
   2ebbc:	add	ip, pc, ip
   2ebc0:	mov	r1, r5
   2ebc4:	add	r3, pc, r3
   2ebc8:	str	ip, [sp]
   2ebcc:	str	r0, [sp, #4]
   2ebd0:	ldr	r0, [pc, #1852]	; 2f314 <g_unichar_xdigit_value@plt+0x1b4b0>
   2ebd4:	add	r0, pc, r0
   2ebd8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2ebdc:	mov	r4, r0
   2ebe0:	ldr	r0, [sp, #28]
   2ebe4:	mov	r1, r4
   2ebe8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2ebec:	cmp	r4, #0
   2ebf0:	beq	2ebfc <g_unichar_xdigit_value@plt+0x1ad98>
   2ebf4:	mov	r0, r4
   2ebf8:	bl	13b94 <g_object_unref@plt>
   2ebfc:	ldr	r0, [pc, #1812]	; 2f318 <g_unichar_xdigit_value@plt+0x1b4b4>
   2ec00:	ldr	r1, [pc, #1812]	; 2f31c <g_unichar_xdigit_value@plt+0x1b4b8>
   2ec04:	add	r0, pc, r0
   2ec08:	add	r1, pc, r1
   2ec0c:	bl	13c9c <g_dgettext@plt>
   2ec10:	ldr	r1, [pc, #1800]	; 2f320 <g_unichar_xdigit_value@plt+0x1b4bc>
   2ec14:	ldr	r2, [pc, #1800]	; 2f324 <g_unichar_xdigit_value@plt+0x1b4c0>
   2ec18:	add	r1, pc, r1
   2ec1c:	add	r2, pc, r2
   2ec20:	mov	r5, r0
   2ec24:	mov	r0, #0
   2ec28:	bl	13b04 <g_dpgettext2@plt>
   2ec2c:	ldr	r1, [pc, #1780]	; 2f328 <g_unichar_xdigit_value@plt+0x1b4c4>
   2ec30:	ldr	r2, [pc, #1780]	; 2f32c <g_unichar_xdigit_value@plt+0x1b4c8>
   2ec34:	add	r1, pc, r1
   2ec38:	add	r2, pc, r2
   2ec3c:	mov	r4, r0
   2ec40:	mov	r0, #0
   2ec44:	bl	13b04 <g_dpgettext2@plt>
   2ec48:	ldr	ip, [pc, #1760]	; 2f330 <g_unichar_xdigit_value@plt+0x1b4cc>
   2ec4c:	ldr	r3, [pc, #1760]	; 2f334 <g_unichar_xdigit_value@plt+0x1b4d0>
   2ec50:	mov	r2, r4
   2ec54:	add	ip, pc, ip
   2ec58:	mov	r1, r5
   2ec5c:	add	r3, pc, r3
   2ec60:	str	ip, [sp]
   2ec64:	str	r0, [sp, #4]
   2ec68:	ldr	r0, [pc, #1736]	; 2f338 <g_unichar_xdigit_value@plt+0x1b4d4>
   2ec6c:	add	r0, pc, r0
   2ec70:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2ec74:	mov	r4, r0
   2ec78:	ldr	r0, [sp, #28]
   2ec7c:	mov	r1, r4
   2ec80:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2ec84:	cmp	r4, #0
   2ec88:	beq	2ec94 <g_unichar_xdigit_value@plt+0x1ae30>
   2ec8c:	mov	r0, r4
   2ec90:	bl	13b94 <g_object_unref@plt>
   2ec94:	ldr	r0, [pc, #1696]	; 2f33c <g_unichar_xdigit_value@plt+0x1b4d8>
   2ec98:	ldr	r1, [pc, #1696]	; 2f340 <g_unichar_xdigit_value@plt+0x1b4dc>
   2ec9c:	add	r0, pc, r0
   2eca0:	add	r1, pc, r1
   2eca4:	bl	13c9c <g_dgettext@plt>
   2eca8:	ldr	r1, [pc, #1684]	; 2f344 <g_unichar_xdigit_value@plt+0x1b4e0>
   2ecac:	ldr	r2, [pc, #1684]	; 2f348 <g_unichar_xdigit_value@plt+0x1b4e4>
   2ecb0:	add	r1, pc, r1
   2ecb4:	add	r2, pc, r2
   2ecb8:	mov	r5, r0
   2ecbc:	mov	r0, #0
   2ecc0:	bl	13b04 <g_dpgettext2@plt>
   2ecc4:	ldr	r1, [pc, #1664]	; 2f34c <g_unichar_xdigit_value@plt+0x1b4e8>
   2ecc8:	ldr	r2, [pc, #1664]	; 2f350 <g_unichar_xdigit_value@plt+0x1b4ec>
   2eccc:	add	r1, pc, r1
   2ecd0:	add	r2, pc, r2
   2ecd4:	mov	r4, r0
   2ecd8:	mov	r0, #0
   2ecdc:	bl	13b04 <g_dpgettext2@plt>
   2ece0:	ldr	ip, [pc, #1644]	; 2f354 <g_unichar_xdigit_value@plt+0x1b4f0>
   2ece4:	ldr	r3, [pc, #1644]	; 2f358 <g_unichar_xdigit_value@plt+0x1b4f4>
   2ece8:	mov	r2, r4
   2ecec:	add	ip, pc, ip
   2ecf0:	mov	r1, r5
   2ecf4:	add	r3, pc, r3
   2ecf8:	str	ip, [sp]
   2ecfc:	str	r0, [sp, #4]
   2ed00:	ldr	r0, [pc, #1620]	; 2f35c <g_unichar_xdigit_value@plt+0x1b4f8>
   2ed04:	add	r0, pc, r0
   2ed08:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2ed0c:	mov	r4, r0
   2ed10:	ldr	r0, [sp, #40]	; 0x28
   2ed14:	mov	r1, r4
   2ed18:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2ed1c:	cmp	r4, #0
   2ed20:	beq	2ed2c <g_unichar_xdigit_value@plt+0x1aec8>
   2ed24:	mov	r0, r4
   2ed28:	bl	13b94 <g_object_unref@plt>
   2ed2c:	ldr	r0, [pc, #1580]	; 2f360 <g_unichar_xdigit_value@plt+0x1b4fc>
   2ed30:	ldr	r1, [pc, #1580]	; 2f364 <g_unichar_xdigit_value@plt+0x1b500>
   2ed34:	add	r0, pc, r0
   2ed38:	add	r1, pc, r1
   2ed3c:	bl	13c9c <g_dgettext@plt>
   2ed40:	ldr	r1, [pc, #1568]	; 2f368 <g_unichar_xdigit_value@plt+0x1b504>
   2ed44:	ldr	r2, [pc, #1568]	; 2f36c <g_unichar_xdigit_value@plt+0x1b508>
   2ed48:	add	r1, pc, r1
   2ed4c:	add	r2, pc, r2
   2ed50:	mov	r5, r0
   2ed54:	mov	r0, #0
   2ed58:	bl	13b04 <g_dpgettext2@plt>
   2ed5c:	ldr	r1, [pc, #1548]	; 2f370 <g_unichar_xdigit_value@plt+0x1b50c>
   2ed60:	ldr	r2, [pc, #1548]	; 2f374 <g_unichar_xdigit_value@plt+0x1b510>
   2ed64:	add	r1, pc, r1
   2ed68:	add	r2, pc, r2
   2ed6c:	mov	r4, r0
   2ed70:	mov	r0, #0
   2ed74:	bl	13b04 <g_dpgettext2@plt>
   2ed78:	ldr	ip, [pc, #1528]	; 2f378 <g_unichar_xdigit_value@plt+0x1b514>
   2ed7c:	ldr	r3, [pc, #1528]	; 2f37c <g_unichar_xdigit_value@plt+0x1b518>
   2ed80:	mov	r2, r4
   2ed84:	add	ip, pc, ip
   2ed88:	mov	r1, r5
   2ed8c:	add	r3, pc, r3
   2ed90:	str	ip, [sp]
   2ed94:	str	r0, [sp, #4]
   2ed98:	ldr	r0, [pc, #1504]	; 2f380 <g_unichar_xdigit_value@plt+0x1b51c>
   2ed9c:	add	r0, pc, r0
   2eda0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2eda4:	mov	r4, r0
   2eda8:	ldr	r0, [sp, #40]	; 0x28
   2edac:	mov	r1, r4
   2edb0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2edb4:	cmp	r4, #0
   2edb8:	beq	2edc4 <g_unichar_xdigit_value@plt+0x1af60>
   2edbc:	mov	r0, r4
   2edc0:	bl	13b94 <g_object_unref@plt>
   2edc4:	ldr	r0, [pc, #1464]	; 2f384 <g_unichar_xdigit_value@plt+0x1b520>
   2edc8:	ldr	r1, [pc, #1464]	; 2f388 <g_unichar_xdigit_value@plt+0x1b524>
   2edcc:	add	r0, pc, r0
   2edd0:	add	r1, pc, r1
   2edd4:	bl	13c9c <g_dgettext@plt>
   2edd8:	ldr	r1, [pc, #1452]	; 2f38c <g_unichar_xdigit_value@plt+0x1b528>
   2eddc:	ldr	r2, [pc, #1452]	; 2f390 <g_unichar_xdigit_value@plt+0x1b52c>
   2ede0:	add	r1, pc, r1
   2ede4:	add	r2, pc, r2
   2ede8:	mov	r5, r0
   2edec:	mov	r0, #0
   2edf0:	bl	13b04 <g_dpgettext2@plt>
   2edf4:	ldr	r1, [pc, #1432]	; 2f394 <g_unichar_xdigit_value@plt+0x1b530>
   2edf8:	ldr	r2, [pc, #1432]	; 2f398 <g_unichar_xdigit_value@plt+0x1b534>
   2edfc:	add	r1, pc, r1
   2ee00:	add	r2, pc, r2
   2ee04:	mov	r4, r0
   2ee08:	mov	r0, #0
   2ee0c:	bl	13b04 <g_dpgettext2@plt>
   2ee10:	ldr	r3, [pc, #1412]	; 2f39c <g_unichar_xdigit_value@plt+0x1b538>
   2ee14:	mov	r2, r4
   2ee18:	mov	r1, r5
   2ee1c:	add	r3, pc, r3
   2ee20:	str	r3, [sp]
   2ee24:	str	r0, [sp, #4]
   2ee28:	ldr	r0, [pc, #1392]	; 2f3a0 <g_unichar_xdigit_value@plt+0x1b53c>
   2ee2c:	add	r0, pc, r0
   2ee30:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2ee34:	mov	r4, r0
   2ee38:	ldr	r0, [sp, #40]	; 0x28
   2ee3c:	mov	r1, r4
   2ee40:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2ee44:	cmp	r4, #0
   2ee48:	beq	2ee54 <g_unichar_xdigit_value@plt+0x1aff0>
   2ee4c:	mov	r0, r4
   2ee50:	bl	13b94 <g_object_unref@plt>
   2ee54:	ldr	r0, [pc, #1352]	; 2f3a4 <g_unichar_xdigit_value@plt+0x1b540>
   2ee58:	ldr	r1, [pc, #1352]	; 2f3a8 <g_unichar_xdigit_value@plt+0x1b544>
   2ee5c:	add	r0, pc, r0
   2ee60:	add	r1, pc, r1
   2ee64:	bl	13c9c <g_dgettext@plt>
   2ee68:	ldr	r1, [pc, #1340]	; 2f3ac <g_unichar_xdigit_value@plt+0x1b548>
   2ee6c:	ldr	r2, [pc, #1340]	; 2f3b0 <g_unichar_xdigit_value@plt+0x1b54c>
   2ee70:	add	r1, pc, r1
   2ee74:	add	r2, pc, r2
   2ee78:	mov	r5, r0
   2ee7c:	mov	r0, #0
   2ee80:	bl	13b04 <g_dpgettext2@plt>
   2ee84:	ldr	r1, [pc, #1320]	; 2f3b4 <g_unichar_xdigit_value@plt+0x1b550>
   2ee88:	ldr	r2, [pc, #1320]	; 2f3b8 <g_unichar_xdigit_value@plt+0x1b554>
   2ee8c:	add	r1, pc, r1
   2ee90:	add	r2, pc, r2
   2ee94:	mov	r4, r0
   2ee98:	mov	r0, #0
   2ee9c:	bl	13b04 <g_dpgettext2@plt>
   2eea0:	ldr	ip, [pc, #1300]	; 2f3bc <g_unichar_xdigit_value@plt+0x1b558>
   2eea4:	ldr	r3, [pc, #1300]	; 2f3c0 <g_unichar_xdigit_value@plt+0x1b55c>
   2eea8:	mov	r2, r4
   2eeac:	add	ip, pc, ip
   2eeb0:	mov	r1, r5
   2eeb4:	add	r3, pc, r3
   2eeb8:	str	ip, [sp]
   2eebc:	str	r0, [sp, #4]
   2eec0:	ldr	r0, [pc, #1276]	; 2f3c4 <g_unichar_xdigit_value@plt+0x1b560>
   2eec4:	add	r0, pc, r0
   2eec8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2eecc:	mov	r4, r0
   2eed0:	ldr	r0, [sp, #40]	; 0x28
   2eed4:	mov	r1, r4
   2eed8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2eedc:	cmp	r4, #0
   2eee0:	beq	2eeec <g_unichar_xdigit_value@plt+0x1b088>
   2eee4:	mov	r0, r4
   2eee8:	bl	13b94 <g_object_unref@plt>
   2eeec:	ldr	r0, [pc, #1236]	; 2f3c8 <g_unichar_xdigit_value@plt+0x1b564>
   2eef0:	ldr	r1, [pc, #1236]	; 2f3cc <g_unichar_xdigit_value@plt+0x1b568>
   2eef4:	add	r0, pc, r0
   2eef8:	add	r1, pc, r1
   2eefc:	bl	13c9c <g_dgettext@plt>
   2ef00:	ldr	r1, [pc, #1224]	; 2f3d0 <g_unichar_xdigit_value@plt+0x1b56c>
   2ef04:	ldr	r2, [pc, #1224]	; 2f3d4 <g_unichar_xdigit_value@plt+0x1b570>
   2ef08:	add	r1, pc, r1
   2ef0c:	add	r2, pc, r2
   2ef10:	mov	r5, r0
   2ef14:	mov	r0, #0
   2ef18:	bl	13b04 <g_dpgettext2@plt>
   2ef1c:	ldr	r1, [pc, #1204]	; 2f3d8 <g_unichar_xdigit_value@plt+0x1b574>
   2ef20:	ldr	r2, [pc, #1204]	; 2f3dc <g_unichar_xdigit_value@plt+0x1b578>
   2ef24:	add	r1, pc, r1
   2ef28:	add	r2, pc, r2
   2ef2c:	mov	r4, r0
   2ef30:	mov	r0, #0
   2ef34:	bl	13b04 <g_dpgettext2@plt>
   2ef38:	ldr	ip, [pc, #1184]	; 2f3e0 <g_unichar_xdigit_value@plt+0x1b57c>
   2ef3c:	ldr	r3, [pc, #1184]	; 2f3e4 <g_unichar_xdigit_value@plt+0x1b580>
   2ef40:	mov	r2, r4
   2ef44:	add	ip, pc, ip
   2ef48:	mov	r1, r5
   2ef4c:	add	r3, pc, r3
   2ef50:	str	ip, [sp]
   2ef54:	str	r0, [sp, #4]
   2ef58:	ldr	r0, [pc, #1160]	; 2f3e8 <g_unichar_xdigit_value@plt+0x1b584>
   2ef5c:	add	r0, pc, r0
   2ef60:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2ef64:	mov	r4, r0
   2ef68:	mov	r0, r6
   2ef6c:	mov	r1, r4
   2ef70:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2ef74:	cmp	r4, #0
   2ef78:	beq	2ef84 <g_unichar_xdigit_value@plt+0x1b120>
   2ef7c:	mov	r0, r4
   2ef80:	bl	13b94 <g_object_unref@plt>
   2ef84:	ldr	r0, [pc, #1120]	; 2f3ec <g_unichar_xdigit_value@plt+0x1b588>
   2ef88:	ldr	r1, [pc, #1120]	; 2f3f0 <g_unichar_xdigit_value@plt+0x1b58c>
   2ef8c:	add	r0, pc, r0
   2ef90:	add	r1, pc, r1
   2ef94:	bl	13c9c <g_dgettext@plt>
   2ef98:	ldr	r1, [pc, #1108]	; 2f3f4 <g_unichar_xdigit_value@plt+0x1b590>
   2ef9c:	ldr	r2, [pc, #1108]	; 2f3f8 <g_unichar_xdigit_value@plt+0x1b594>
   2efa0:	add	r1, pc, r1
   2efa4:	add	r2, pc, r2
   2efa8:	mov	r5, r0
   2efac:	mov	r0, #0
   2efb0:	bl	13b04 <g_dpgettext2@plt>
   2efb4:	ldr	r1, [pc, #1088]	; 2f3fc <g_unichar_xdigit_value@plt+0x1b598>
   2efb8:	ldr	r2, [pc, #1088]	; 2f400 <g_unichar_xdigit_value@plt+0x1b59c>
   2efbc:	add	r1, pc, r1
   2efc0:	add	r2, pc, r2
   2efc4:	mov	r4, r0
   2efc8:	mov	r0, #0
   2efcc:	bl	13b04 <g_dpgettext2@plt>
   2efd0:	ldr	r3, [pc, #1068]	; 2f404 <g_unichar_xdigit_value@plt+0x1b5a0>
   2efd4:	mov	r2, r4
   2efd8:	mov	r1, r5
   2efdc:	add	r3, pc, r3
   2efe0:	str	r3, [sp]
   2efe4:	str	r0, [sp, #4]
   2efe8:	ldr	r0, [pc, #1048]	; 2f408 <g_unichar_xdigit_value@plt+0x1b5a4>
   2efec:	add	r0, pc, r0
   2eff0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2eff4:	mov	r4, r0
   2eff8:	mov	r0, r6
   2effc:	mov	r1, r4
   2f000:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2f004:	cmp	r4, #0
   2f008:	beq	2f014 <g_unichar_xdigit_value@plt+0x1b1b0>
   2f00c:	mov	r0, r4
   2f010:	bl	13b94 <g_object_unref@plt>
   2f014:	ldr	r0, [pc, #1008]	; 2f40c <g_unichar_xdigit_value@plt+0x1b5a8>
   2f018:	ldr	r1, [pc, #1008]	; 2f410 <g_unichar_xdigit_value@plt+0x1b5ac>
   2f01c:	add	r0, pc, r0
   2f020:	add	r1, pc, r1
   2f024:	bl	13c9c <g_dgettext@plt>
   2f028:	ldr	r1, [pc, #996]	; 2f414 <g_unichar_xdigit_value@plt+0x1b5b0>
   2f02c:	ldr	r2, [pc, #996]	; 2f418 <g_unichar_xdigit_value@plt+0x1b5b4>
   2f030:	add	r1, pc, r1
   2f034:	add	r2, pc, r2
   2f038:	mov	r5, r0
   2f03c:	mov	r0, #0
   2f040:	bl	13b04 <g_dpgettext2@plt>
   2f044:	ldr	r1, [pc, #976]	; 2f41c <g_unichar_xdigit_value@plt+0x1b5b8>
   2f048:	ldr	r2, [pc, #976]	; 2f420 <g_unichar_xdigit_value@plt+0x1b5bc>
   2f04c:	add	r1, pc, r1
   2f050:	add	r2, pc, r2
   2f054:	mov	r4, r0
   2f058:	mov	r0, #0
   2f05c:	bl	13b04 <g_dpgettext2@plt>
   2f060:	b	2f7f0 <g_unichar_xdigit_value@plt+0x1b98c>
   2f064:			; <UNDEFINED> instruction: 0x0000d6b8
   2f068:	andeq	sp, r0, r8, lsr sp
   2f06c:	andeq	sp, r0, ip, asr #22
   2f070:	andeq	sp, r0, r0, lsr sp
   2f074:	andeq	sp, r0, ip, lsl #26
   2f078:	andeq	fp, r0, r4, asr r3
   2f07c:	strdeq	sp, [r0], -r8
   2f080:	andeq	sp, r0, r4, lsr #12
   2f084:	strdeq	sp, [r0], -r4
   2f088:	andeq	sp, r0, r0, lsr #12
   2f08c:	andeq	sp, r0, r0, ror #25
   2f090:	andeq	sp, r0, r4, lsl #17
   2f094:	andeq	sp, r0, r4, ror r8
   2f098:			; <UNDEFINED> instruction: 0x0000dcb0
   2f09c:			; <UNDEFINED> instruction: 0x0000b2bc
   2f0a0:	andeq	sp, r0, r8, lsl #25
   2f0a4:	andeq	sp, r0, ip, lsl #11
   2f0a8:	andeq	sp, r0, ip, ror ip
   2f0ac:	andeq	sp, r0, r8, lsl #11
   2f0b0:	andeq	sp, r0, r8, ror #24
   2f0b4:	andeq	sp, r0, r4, ror ip
   2f0b8:	andeq	sp, r0, r0, ror #24
   2f0bc:	andeq	sp, r0, r8, asr #24
   2f0c0:	andeq	fp, r0, r4, lsr #4
   2f0c4:	andeq	sp, r0, r4, lsr ip
   2f0c8:	strdeq	sp, [r0], -r4
   2f0cc:	andeq	sp, r0, r8, lsr #24
   2f0d0:	strdeq	sp, [r0], -r0
   2f0d4:	andeq	sp, r0, r4, lsl ip
   2f0d8:	andeq	lr, r0, r4, asr #14
   2f0dc:	andeq	sp, r0, r4, lsl #24
   2f0e0:	muleq	r0, r4, r1
   2f0e4:	ldrdeq	sp, [r0], -r8
   2f0e8:	andeq	sp, r0, r4, ror #8
   2f0ec:	andeq	sp, r0, ip, asr #23
   2f0f0:	andeq	sp, r0, r0, ror #8
   2f0f4:			; <UNDEFINED> instruction: 0x0000dbb8
   2f0f8:	andeq	sp, r0, r0, asr #23
   2f0fc:	andeq	sp, r0, ip, lsr #23
   2f100:	muleq	r0, r4, fp
   2f104:	strdeq	fp, [r0], -ip
   2f108:	andeq	sp, r0, r0, lsl #23
   2f10c:	andeq	sp, r0, ip, asr #7
   2f110:	andeq	sp, r0, r0, lsl r9
   2f114:	andeq	sp, r0, r8, asr #7
   2f118:	andeq	sp, r0, r8, asr fp
   2f11c:	andeq	sp, r0, r0, ror #22
   2f120:	andeq	sp, r0, ip, asr #22
   2f124:	andeq	sp, r0, r4, lsr fp
   2f128:	andeq	fp, r0, r4, rrx
   2f12c:	andeq	sp, r0, r0, lsr #22
   2f130:	andeq	sp, r0, r4, lsr r3
   2f134:	andeq	sp, r0, r8, lsl fp
   2f138:	andeq	sp, r0, r0, lsr r3
   2f13c:	andeq	sp, r0, r4, lsl #22
   2f140:	andeq	sp, r0, ip, lsl #11
   2f144:	andeq	sp, r0, r4, lsr #22
   2f148:	andeq	sp, r0, r8, lsl #22
   2f14c:	andeq	sl, r0, ip, asr #31
   2f150:	andeq	sp, r0, r8, ror #21
   2f154:	muleq	r0, ip, r2
   2f158:	andeq	sp, r0, r0, ror #21
   2f15c:	muleq	r0, r8, r2
   2f160:	andeq	sp, r0, ip, asr #21
   2f164:	andeq	sp, r0, ip, lsr #14
   2f168:	andeq	sp, r0, r0, lsl r9
   2f16c:	andeq	sp, r0, r4, lsr #21
   2f170:	andeq	sl, r0, r4, lsr pc
   2f174:	andeq	sp, r0, ip, ror sl
   2f178:	andeq	sp, r0, r4, lsl #4
   2f17c:	andeq	sp, r0, r0, ror sl
   2f180:	andeq	sp, r0, r0, lsl #4
   2f184:	andeq	sp, r0, ip, asr sl
   2f188:	andeq	sp, r0, r4, ror #8
   2f18c:	andeq	sp, r0, r4, asr r4
   2f190:	andeq	sp, r0, r8, lsr sl
   2f194:	muleq	r0, ip, lr
   2f198:	andeq	sp, r0, ip, lsl #20
   2f19c:	andeq	sp, r0, ip, ror #2
   2f1a0:	andeq	sp, r0, r4, lsl #20
   2f1a4:	andeq	sp, r0, r8, ror #2
   2f1a8:	strdeq	sp, [r0], -r0
   2f1ac:			; <UNDEFINED> instruction: 0x0000e3bc
   2f1b0:	strdeq	sp, [r0], -r8
   2f1b4:	andeq	sl, r0, ip, lsl #28
   2f1b8:	ldrdeq	sp, [r0], -r0
   2f1bc:	ldrdeq	sp, [r0], -ip
   2f1c0:	andeq	sp, r0, r4, asr #19
   2f1c4:	ldrdeq	sp, [r0], -r8
   2f1c8:			; <UNDEFINED> instruction: 0x0000d9b0
   2f1cc:			; <UNDEFINED> instruction: 0x0000d9b8
   2f1d0:	andeq	sp, r0, r4, lsr #19
   2f1d4:	andeq	sp, r0, ip, lsl #19
   2f1d8:	andeq	sl, r0, r4, ror sp
   2f1dc:	andeq	sp, r0, ip, ror r9
   2f1e0:	andeq	sp, r0, r4, asr #32
   2f1e4:	andeq	sp, r0, r0, ror r9
   2f1e8:	andeq	sp, r0, r0, asr #32
   2f1ec:	andeq	sp, r0, ip, asr r9
   2f1f0:	andeq	sp, r0, r4, ror #18
   2f1f4:	andeq	sp, r0, r0, asr r9
   2f1f8:	andeq	sp, r0, r8, lsr r9
   2f1fc:	ldrdeq	sl, [r0], -ip
   2f200:	andeq	sp, r0, r8, lsr #18
   2f204:	andeq	ip, r0, ip, lsr #31
   2f208:	andeq	sp, r0, ip, lsl r9
   2f20c:	andeq	ip, r0, r8, lsr #31
   2f210:	andeq	sp, r0, r8, lsl #18
   2f214:	andeq	sp, r0, r4, lsl #4
   2f218:	muleq	r0, ip, r7
   2f21c:	strdeq	sp, [r0], -r0
   2f220:	andeq	sl, r0, r4, asr #24
   2f224:	andeq	sp, r0, r4, asr #17
   2f228:	andeq	ip, r0, r4, lsl pc
   2f22c:			; <UNDEFINED> instruction: 0x0000d8b8
   2f230:	andeq	ip, r0, r0, lsl pc
   2f234:	andeq	sp, r0, r4, lsr #17
   2f238:	andeq	sp, r0, ip, lsr #17
   2f23c:	muleq	r0, r8, r8
   2f240:	andeq	sp, r0, r0, lsl #17
   2f244:	andeq	sl, r0, ip, lsr #23
   2f248:	andeq	sp, r0, ip, ror #16
   2f24c:	andeq	ip, r0, ip, ror lr
   2f250:	andeq	sp, r0, r0, ror #16
   2f254:	andeq	ip, r0, r8, ror lr
   2f258:	andeq	sp, r0, r0, asr r8
   2f25c:	andeq	sp, r0, r4, asr r8
   2f260:	andeq	sp, r0, r0, asr #16
   2f264:	andeq	sp, r0, r8, lsr #16
   2f268:	andeq	sl, r0, r4, lsl fp
   2f26c:	andeq	sp, r0, r4, lsl r8
   2f270:	andeq	ip, r0, r4, ror #27
   2f274:	andeq	sp, r0, r8, lsl #16
   2f278:	andeq	ip, r0, r0, ror #27
   2f27c:	strdeq	sp, [r0], -r4
   2f280:	strdeq	sp, [r0], -r0
   2f284:	andeq	sp, r0, r0, ror #15
   2f288:	andeq	sp, r0, ip, asr #15
   2f28c:	andeq	sl, r0, ip, ror sl
   2f290:	andeq	sp, r0, ip, lsr #15
   2f294:	andeq	ip, r0, ip, asr #26
   2f298:	andeq	sp, r0, r0, lsr #15
   2f29c:	andeq	ip, r0, r8, asr #26
   2f2a0:	muleq	r0, r0, r7
   2f2a4:	muleq	r0, r0, r7
   2f2a8:	andeq	sp, r0, r0, lsl #15
   2f2ac:	andeq	sp, r0, r8, ror #14
   2f2b0:	andeq	sl, r0, r4, ror #19
   2f2b4:	andeq	sp, r0, ip, asr #14
   2f2b8:			; <UNDEFINED> instruction: 0x0000ccb4
   2f2bc:	andeq	sp, r0, r0, asr #14
   2f2c0:			; <UNDEFINED> instruction: 0x0000ccb0
   2f2c4:	andeq	sp, r0, r0, lsr r7
   2f2c8:	andeq	sp, r0, r0, lsr r7
   2f2cc:	andeq	sp, r0, r4, lsr #14
   2f2d0:	andeq	sp, r0, ip, lsl #14
   2f2d4:	andeq	sl, r0, ip, asr #18
   2f2d8:	andeq	sp, r0, ip, ror #13
   2f2dc:	andeq	ip, r0, ip, lsl ip
   2f2e0:	andeq	sp, r0, r0, ror #13
   2f2e4:	andeq	ip, r0, r8, lsl ip
   2f2e8:	andeq	sp, r0, ip, asr #13
   2f2ec:	andeq	sp, r0, ip, ror #28
   2f2f0:			; <UNDEFINED> instruction: 0x0000d6b4
   2f2f4:			; <UNDEFINED> instruction: 0x0000a8bc
   2f2f8:	andeq	sp, r0, r8, lsl #13
   2f2fc:	andeq	ip, r0, ip, lsl #23
   2f300:	andeq	sp, r0, r4, lsl #13
   2f304:	andeq	ip, r0, r8, lsl #23
   2f308:	andeq	sp, r0, r0, ror r6
   2f30c:	andeq	ip, r0, r4, ror #27
   2f310:	andeq	sp, r0, ip, ror r3
   2f314:	andeq	sp, r0, r8, asr r6
   2f318:	andeq	sl, r0, r4, lsr #16
   2f31c:	andeq	sp, r0, r0, lsr r6
   2f320:	strdeq	ip, [r0], -r4
   2f324:	andeq	sp, r0, ip, lsr #12
   2f328:	strdeq	ip, [r0], -r0
   2f32c:	andeq	sp, r0, r8, lsl r6
   2f330:	andeq	ip, r0, r4, lsl #31
   2f334:	andeq	sp, r0, r8, ror #2
   2f338:	andeq	sp, r0, r4, lsl #12
   2f33c:	andeq	sl, r0, ip, lsl #15
   2f340:	ldrdeq	sp, [r0], -ip
   2f344:	andeq	ip, r0, ip, asr sl
   2f348:	ldrdeq	sp, [r0], -r0
   2f34c:	andeq	ip, r0, r8, asr sl
   2f350:			; <UNDEFINED> instruction: 0x0000d5bc
   2f354:	ldrdeq	sp, [r0], -ip
   2f358:	andeq	sp, r0, r8, asr #11
   2f35c:	andeq	sp, r0, r8, lsr #11
   2f360:	strdeq	sl, [r0], -r4
   2f364:	muleq	r0, ip, r5
   2f368:	andeq	ip, r0, r4, asr #19
   2f36c:	muleq	r0, r4, r5
   2f370:	andeq	ip, r0, r0, asr #19
   2f374:	andeq	sp, r0, r0, lsl #11
   2f378:	andeq	sp, r0, ip, lsr #11
   2f37c:	muleq	r0, r4, r5
   2f380:	andeq	sp, r0, r0, ror r5
   2f384:	andeq	sl, r0, ip, asr r6
   2f388:	andeq	sp, r0, r0, ror r5
   2f38c:	andeq	ip, r0, ip, lsr #18
   2f390:	andeq	sp, r0, r4, ror #10
   2f394:	andeq	ip, r0, r8, lsr #18
   2f398:	andeq	sp, r0, r0, asr r5
   2f39c:	andeq	sp, r0, ip, ror fp
   2f3a0:	andeq	sp, r0, r8, lsr r5
   2f3a4:	andeq	sl, r0, ip, asr #11
   2f3a8:	andeq	sp, r0, r4, lsl r5
   2f3ac:	muleq	r0, ip, r8
   2f3b0:	andeq	sp, r0, r8, lsl #10
   2f3b4:	muleq	r0, r8, r8
   2f3b8:	strdeq	sp, [r0], -r4
   2f3bc:	andeq	sp, r0, r4, lsl r5
   2f3c0:	andeq	sp, r0, r4, lsl #10
   2f3c4:	andeq	sp, r0, r4, ror #9
   2f3c8:	andeq	sl, r0, r4, lsr r5
   2f3cc:	ldrdeq	sp, [r0], -r0
   2f3d0:	andeq	ip, r0, r4, lsl #16
   2f3d4:	andeq	sp, r0, r4, asr #9
   2f3d8:	andeq	ip, r0, r0, lsl #16
   2f3dc:			; <UNDEFINED> instruction: 0x0000d4b0
   2f3e0:	andeq	sp, r0, r0, lsr #9
   2f3e4:	andeq	sp, r0, ip, ror #19
   2f3e8:	andeq	sp, r0, r8, lsl r6
   2f3ec:	muleq	r0, ip, r4
   2f3f0:	andeq	sp, r0, r8, asr r4
   2f3f4:	andeq	ip, r0, ip, ror #14
   2f3f8:	andeq	sp, r0, ip, asr #8
   2f3fc:	andeq	ip, r0, r8, ror #14
   2f400:	andeq	sp, r0, r8, lsr r4
   2f404:			; <UNDEFINED> instruction: 0x0000d9bc
   2f408:	ldrdeq	sp, [r0], -r4
   2f40c:	andeq	sl, r0, ip, lsl #8
   2f410:	andeq	sp, r0, r8, ror #7
   2f414:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   2f418:	ldrdeq	sp, [r0], -ip
   2f41c:	ldrdeq	ip, [r0], -r8
   2f420:	andeq	sp, r0, ip, asr #7
   2f424:	andeq	ip, r0, ip, lsr ip
   2f428:	andeq	ip, r0, r0, lsr ip
   2f42c:	andeq	ip, r0, r8, lsl ip
   2f430:	andeq	r9, r0, r4, ror #23
   2f434:	strdeq	ip, [r0], -r4
   2f438:			; <UNDEFINED> instruction: 0x0000beb4
   2f43c:	andeq	ip, r0, ip, ror #23
   2f440:			; <UNDEFINED> instruction: 0x0000beb0
   2f444:	ldrdeq	ip, [r0], -r8
   2f448:	andeq	ip, r0, r4, ror #23
   2f44c:	ldrdeq	ip, [r0], -r4
   2f450:			; <UNDEFINED> instruction: 0x0000cbbc
   2f454:	andeq	r9, r0, ip, asr #22
   2f458:	andeq	ip, r0, r0, lsr #23
   2f45c:	andeq	fp, r0, ip, lsl lr
   2f460:	muleq	r0, r8, fp
   2f464:	andeq	fp, r0, r8, lsl lr
   2f468:	andeq	ip, r0, r4, lsl #23
   2f46c:	andeq	ip, r0, ip, ror r0
   2f470:	andeq	ip, r0, ip, rrx
   2f474:	andeq	ip, r0, ip, ror #22
   2f478:			; <UNDEFINED> instruction: 0x00009ab4
   2f47c:	andeq	ip, r0, r4, asr #22
   2f480:	andeq	fp, r0, r4, lsl #27
   2f484:	andeq	ip, r0, ip, lsr fp
   2f488:	andeq	fp, r0, r0, lsl #27
   2f48c:	andeq	ip, r0, r8, lsr #22
   2f490:	andeq	ip, r0, r4, lsr fp
   2f494:	andeq	ip, r0, r4, lsr #22
   2f498:	andeq	ip, r0, ip, lsl #22
   2f49c:	andeq	r9, r0, ip, lsl sl
   2f4a0:	strdeq	ip, [r0], -r0
   2f4a4:	andeq	fp, r0, ip, ror #25
   2f4a8:	andeq	ip, r0, r8, ror #21
   2f4ac:	andeq	fp, r0, r8, ror #25
   2f4b0:	ldrdeq	ip, [r0], -r4
   2f4b4:	andeq	ip, r0, r4, ror #21
   2f4b8:	ldrdeq	ip, [r0], -r4
   2f4bc:			; <UNDEFINED> instruction: 0x0000cab8
   2f4c0:	andeq	r9, r0, r4, lsl #19
   2f4c4:	andeq	ip, r0, r0, lsr #21
   2f4c8:	andeq	fp, r0, r4, asr ip
   2f4cc:	muleq	r0, r8, sl
   2f4d0:	andeq	fp, r0, r0, asr ip
   2f4d4:	andeq	ip, r0, r4, lsl #21
   2f4d8:	muleq	r0, r0, sl
   2f4dc:	andeq	ip, r0, ip, ror sl
   2f4e0:	andeq	ip, r0, r4, ror #20
   2f4e4:	andeq	r9, r0, ip, ror #17
   2f4e8:	andeq	ip, r0, r0, asr sl
   2f4ec:			; <UNDEFINED> instruction: 0x0000bbbc
   2f4f0:	andeq	ip, r0, r8, asr #20
   2f4f4:			; <UNDEFINED> instruction: 0x0000bbb8
   2f4f8:	andeq	ip, r0, r4, lsr sl
   2f4fc:	andeq	ip, r0, r0, asr #32
   2f500:	andeq	ip, r0, r4, asr #32
   2f504:	andeq	ip, r0, r8, lsl sl
   2f508:	andeq	r9, r0, r4, asr r8
   2f50c:	strdeq	ip, [r0], -r0
   2f510:	andeq	fp, r0, r4, lsr #22
   2f514:	andeq	ip, r0, r8, ror #19
   2f518:	andeq	fp, r0, r0, lsr #22
   2f51c:	ldrdeq	ip, [r0], -r4
   2f520:	andeq	ip, r0, r4, ror #19
   2f524:	ldrdeq	ip, [r0], -r0
   2f528:			; <UNDEFINED> instruction: 0x0000c9b8
   2f52c:			; <UNDEFINED> instruction: 0x000097bc
   2f530:	andeq	ip, r0, r4, lsr #19
   2f534:	andeq	fp, r0, ip, lsl #21
   2f538:	muleq	r0, ip, r9
   2f53c:	andeq	fp, r0, r8, lsl #21
   2f540:	andeq	ip, r0, r8, lsl #19
   2f544:	muleq	r0, ip, r9
   2f548:	andeq	ip, r0, r8, lsl #19
   2f54c:	andeq	ip, r0, ip, ror #18
   2f550:	andeq	r9, r0, r4, lsr #14
   2f554:	andeq	ip, r0, ip, asr r9
   2f558:	strdeq	fp, [r0], -r4
   2f55c:	andeq	ip, r0, r4, asr r9
   2f560:	strdeq	fp, [r0], -r0
   2f564:	andeq	ip, r0, r0, asr #18
   2f568:	andeq	ip, r0, r0, asr r9
   2f56c:	andeq	ip, r0, r8, lsr r9
   2f570:	andeq	ip, r0, r0, lsr #18
   2f574:	andeq	r9, r0, ip, lsl #13
   2f578:	andeq	ip, r0, r4, lsl r9
   2f57c:	andeq	fp, r0, ip, asr r9
   2f580:	andeq	ip, r0, ip, lsl #18
   2f584:	andeq	fp, r0, r8, asr r9
   2f588:	strdeq	ip, [r0], -r8
   2f58c:	andeq	fp, r0, r0, lsr lr
   2f590:	andeq	fp, r0, r8, lsr lr
   2f594:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   2f598:	strdeq	r9, [r0], -r4
   2f59c:			; <UNDEFINED> instruction: 0x0000c8b4
   2f5a0:	andeq	fp, r0, r4, asr #17
   2f5a4:	andeq	ip, r0, ip, lsr #17
   2f5a8:	andeq	fp, r0, r0, asr #17
   2f5ac:	muleq	r0, r8, r8
   2f5b0:	andeq	ip, r0, ip, lsr #17
   2f5b4:	muleq	r0, r4, r8
   2f5b8:	andeq	ip, r0, ip, ror r8
   2f5bc:	andeq	r9, r0, ip, asr r5
   2f5c0:	andeq	ip, r0, r0, ror r8
   2f5c4:	andeq	fp, r0, ip, lsr #16
   2f5c8:	andeq	ip, r0, r8, ror #16
   2f5cc:	andeq	fp, r0, r8, lsr #16
   2f5d0:	andeq	ip, r0, r4, asr r8
   2f5d4:	andeq	ip, r0, r8, ror #16
   2f5d8:	andeq	ip, r0, r4, asr r8
   2f5dc:	andeq	ip, r0, r8, lsr r8
   2f5e0:	andeq	r9, r0, r4, asr #9
   2f5e4:	andeq	ip, r0, ip, lsr #16
   2f5e8:	muleq	r0, r4, r7
   2f5ec:	andeq	ip, r0, r4, lsr #16
   2f5f0:	muleq	r0, r0, r7
   2f5f4:	andeq	ip, r0, r0, lsl r8
   2f5f8:	andeq	ip, r0, r4, lsr #16
   2f5fc:	andeq	ip, r0, r8, lsl #16
   2f600:	strdeq	ip, [r0], -r0
   2f604:	andeq	r9, r0, ip, lsr #8
   2f608:	andeq	ip, r0, ip, ror #15
   2f60c:	strdeq	fp, [r0], -ip
   2f610:	andeq	ip, r0, r4, ror #15
   2f614:	strdeq	fp, [r0], -r8
   2f618:	ldrdeq	ip, [r0], -r0
   2f61c:	andeq	ip, r0, r8, ror #15
   2f620:	ldrdeq	ip, [r0], -r0
   2f624:			; <UNDEFINED> instruction: 0x0000c7b4
   2f628:	muleq	r0, r4, r3
   2f62c:	andeq	ip, r0, ip, lsr #15
   2f630:	andeq	fp, r0, r4, ror #12
   2f634:	andeq	ip, r0, r4, lsr #15
   2f638:	andeq	fp, r0, r0, ror #12
   2f63c:	muleq	r0, r0, r7
   2f640:	andeq	ip, r0, r8, lsr #15
   2f644:	andeq	ip, r0, ip, lsl #15
   2f648:	andeq	ip, r0, r4, ror r7
   2f64c:	strdeq	r9, [r0], -ip
   2f650:	andeq	ip, r0, r0, ror r7
   2f654:	andeq	fp, r0, ip, asr #11
   2f658:	andeq	ip, r0, r8, ror #14
   2f65c:	andeq	fp, r0, r8, asr #11
   2f660:	andeq	ip, r0, r4, asr r7
   2f664:	andeq	ip, r0, ip, ror #14
   2f668:	andeq	ip, r0, r4, asr r7
   2f66c:	andeq	ip, r0, r8, lsr r7
   2f670:	andeq	r9, r0, r4, ror #4
   2f674:	andeq	ip, r0, r0, lsr r7
   2f678:	andeq	fp, r0, r4, lsr r5
   2f67c:	andeq	ip, r0, r8, lsr #14
   2f680:	andeq	fp, r0, r0, lsr r5
   2f684:	andeq	ip, r0, r4, lsl r7
   2f688:	andeq	ip, r0, r8, lsr #14
   2f68c:	andeq	ip, r0, ip, lsl #14
   2f690:	strdeq	ip, [r0], -r4
   2f694:	andeq	r9, r0, ip, asr #3
   2f698:	strdeq	ip, [r0], -r0
   2f69c:	muleq	r0, ip, r4
   2f6a0:	andeq	ip, r0, r8, ror #13
   2f6a4:	muleq	r0, r8, r4
   2f6a8:	ldrdeq	ip, [r0], -r4
   2f6ac:	strdeq	ip, [r0], -r0
   2f6b0:	ldrdeq	ip, [r0], -r4
   2f6b4:			; <UNDEFINED> instruction: 0x0000c6b8
   2f6b8:	andeq	r9, r0, r4, lsr r1
   2f6bc:			; <UNDEFINED> instruction: 0x0000c6b8
   2f6c0:	andeq	fp, r0, r4, lsl #8
   2f6c4:			; <UNDEFINED> instruction: 0x0000c6b0
   2f6c8:	andeq	fp, r0, r0, lsl #8
   2f6cc:	muleq	r0, ip, r6
   2f6d0:			; <UNDEFINED> instruction: 0x0000c6b4
   2f6d4:	muleq	r0, r8, r6
   2f6d8:	andeq	ip, r0, r0, lsl #13
   2f6dc:	muleq	r0, ip, r0
   2f6e0:	andeq	ip, r0, ip, ror r6
   2f6e4:	andeq	fp, r0, ip, ror #6
   2f6e8:	andeq	ip, r0, r4, ror r6
   2f6ec:	andeq	fp, r0, r8, ror #6
   2f6f0:	andeq	ip, r0, r0, ror #12
   2f6f4:	andeq	ip, r0, ip, ror r6
   2f6f8:	andeq	ip, r0, r0, ror #12
   2f6fc:	andeq	ip, r0, r4, asr #12
   2f700:	andeq	r9, r0, r4
   2f704:	andeq	ip, r0, r4, asr #12
   2f708:	ldrdeq	fp, [r0], -r4
   2f70c:	andeq	ip, r0, r8, lsr r6
   2f710:	ldrdeq	fp, [r0], -r0
   2f714:	andeq	ip, r0, r4, lsr #12
   2f718:	andeq	ip, r0, ip, lsr r6
   2f71c:	andeq	ip, r0, ip, lsl r6
   2f720:	andeq	ip, r0, r4, lsl #12
   2f724:	andeq	r8, r0, ip, ror #30
   2f728:	andeq	ip, r0, r8, lsl #12
   2f72c:	andeq	fp, r0, ip, lsr r2
   2f730:	andeq	ip, r0, r0, lsl #12
   2f734:	andeq	fp, r0, r8, lsr r2
   2f738:	andeq	ip, r0, ip, ror #11
   2f73c:	andeq	ip, r0, r4, lsl #12
   2f740:	andeq	ip, r0, r4, ror #11
   2f744:	andeq	ip, r0, ip, asr #11
   2f748:	ldrdeq	r8, [r0], -r4
   2f74c:	ldrdeq	ip, [r0], -r0
   2f750:	andeq	fp, r0, r4, lsr #3
   2f754:	andeq	ip, r0, r8, asr #11
   2f758:	andeq	fp, r0, r0, lsr #3
   2f75c:			; <UNDEFINED> instruction: 0x0000c5b4
   2f760:	ldrdeq	ip, [r0], -r0
   2f764:			; <UNDEFINED> instruction: 0x0000c5b0
   2f768:	muleq	r0, r8, r5
   2f76c:	andeq	r8, r0, ip, lsr lr
   2f770:	muleq	r0, ip, r5
   2f774:	andeq	fp, r0, ip, lsl #2
   2f778:	muleq	r0, r4, r5
   2f77c:	andeq	fp, r0, r8, lsl #2
   2f780:	andeq	ip, r0, r0, lsl #11
   2f784:	andeq	ip, r0, r0, lsr #11
   2f788:	andeq	ip, r0, r0, lsl #11
   2f78c:	andeq	ip, r0, r4, ror #10
   2f790:	andeq	r8, r0, r4, lsr #27
   2f794:	andeq	ip, r0, ip, ror #10
   2f798:	andeq	fp, r0, r4, ror r0
   2f79c:	ldrdeq	ip, [r0], -r8
   2f7a0:	andeq	fp, r0, r0, ror r0
   2f7a4:	andeq	ip, r0, r8, asr #10
   2f7a8:	andeq	ip, r0, ip, ror #10
   2f7ac:	andeq	ip, r0, r8, asr #10
   2f7b0:	andeq	ip, r0, ip, lsr #10
   2f7b4:	andeq	r8, r0, ip, lsl #26
   2f7b8:	andeq	ip, r0, ip, lsr r5
   2f7bc:	ldrdeq	sl, [r0], -ip
   2f7c0:	andeq	ip, r0, r0, lsr #7
   2f7c4:	ldrdeq	sl, [r0], -r8
   2f7c8:	andeq	ip, r0, r8, lsl r5
   2f7cc:	andeq	ip, r0, r8, lsr r5
   2f7d0:	andeq	ip, r0, r8, lsl r5
   2f7d4:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   2f7d8:	andeq	r8, r0, r4, ror ip
   2f7dc:	andeq	ip, r0, r8, lsl #10
   2f7e0:	andeq	sl, r0, r4, asr #30
   2f7e4:	andeq	ip, r0, r0, lsl #10
   2f7e8:	andeq	sl, r0, r0, asr #30
   2f7ec:	andeq	ip, r0, ip, ror #9
   2f7f0:	ldr	ip, [pc, #-980]	; 2f424 <g_unichar_xdigit_value@plt+0x1b5c0>
   2f7f4:	ldr	r3, [pc, #-980]	; 2f428 <g_unichar_xdigit_value@plt+0x1b5c4>
   2f7f8:	mov	r2, r4
   2f7fc:	add	ip, pc, ip
   2f800:	mov	r1, r5
   2f804:	add	r3, pc, r3
   2f808:	str	ip, [sp]
   2f80c:	str	r0, [sp, #4]
   2f810:	ldr	r0, [pc, #-1004]	; 2f42c <g_unichar_xdigit_value@plt+0x1b5c8>
   2f814:	add	r0, pc, r0
   2f818:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2f81c:	mov	r4, r0
   2f820:	mov	r0, r6
   2f824:	mov	r1, r4
   2f828:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2f82c:	cmp	r4, #0
   2f830:	beq	2f83c <g_unichar_xdigit_value@plt+0x1b9d8>
   2f834:	mov	r0, r4
   2f838:	bl	13b94 <g_object_unref@plt>
   2f83c:	ldr	r0, [pc, #-1044]	; 2f430 <g_unichar_xdigit_value@plt+0x1b5cc>
   2f840:	ldr	r1, [pc, #-1044]	; 2f434 <g_unichar_xdigit_value@plt+0x1b5d0>
   2f844:	add	r0, pc, r0
   2f848:	add	r1, pc, r1
   2f84c:	bl	13c9c <g_dgettext@plt>
   2f850:	ldr	r1, [pc, #-1056]	; 2f438 <g_unichar_xdigit_value@plt+0x1b5d4>
   2f854:	ldr	r2, [pc, #-1056]	; 2f43c <g_unichar_xdigit_value@plt+0x1b5d8>
   2f858:	add	r1, pc, r1
   2f85c:	add	r2, pc, r2
   2f860:	mov	r5, r0
   2f864:	mov	r0, #0
   2f868:	bl	13b04 <g_dpgettext2@plt>
   2f86c:	ldr	r1, [pc, #-1076]	; 2f440 <g_unichar_xdigit_value@plt+0x1b5dc>
   2f870:	ldr	r2, [pc, #-1076]	; 2f444 <g_unichar_xdigit_value@plt+0x1b5e0>
   2f874:	add	r1, pc, r1
   2f878:	add	r2, pc, r2
   2f87c:	mov	r4, r0
   2f880:	mov	r0, #0
   2f884:	bl	13b04 <g_dpgettext2@plt>
   2f888:	ldr	ip, [pc, #-1096]	; 2f448 <g_unichar_xdigit_value@plt+0x1b5e4>
   2f88c:	ldr	r3, [pc, #-1096]	; 2f44c <g_unichar_xdigit_value@plt+0x1b5e8>
   2f890:	mov	r2, r4
   2f894:	add	ip, pc, ip
   2f898:	mov	r1, r5
   2f89c:	add	r3, pc, r3
   2f8a0:	str	ip, [sp]
   2f8a4:	str	r0, [sp, #4]
   2f8a8:	ldr	r0, [pc, #-1120]	; 2f450 <g_unichar_xdigit_value@plt+0x1b5ec>
   2f8ac:	add	r0, pc, r0
   2f8b0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2f8b4:	mov	r4, r0
   2f8b8:	mov	r0, r6
   2f8bc:	mov	r1, r4
   2f8c0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2f8c4:	cmp	r4, #0
   2f8c8:	beq	2f8d4 <g_unichar_xdigit_value@plt+0x1ba70>
   2f8cc:	mov	r0, r4
   2f8d0:	bl	13b94 <g_object_unref@plt>
   2f8d4:	ldr	r0, [pc, #-1160]	; 2f454 <g_unichar_xdigit_value@plt+0x1b5f0>
   2f8d8:	ldr	r1, [pc, #-1160]	; 2f458 <g_unichar_xdigit_value@plt+0x1b5f4>
   2f8dc:	add	r0, pc, r0
   2f8e0:	add	r1, pc, r1
   2f8e4:	bl	13c9c <g_dgettext@plt>
   2f8e8:	ldr	r1, [pc, #-1172]	; 2f45c <g_unichar_xdigit_value@plt+0x1b5f8>
   2f8ec:	ldr	r2, [pc, #-1172]	; 2f460 <g_unichar_xdigit_value@plt+0x1b5fc>
   2f8f0:	add	r1, pc, r1
   2f8f4:	add	r2, pc, r2
   2f8f8:	mov	r5, r0
   2f8fc:	mov	r0, #0
   2f900:	bl	13b04 <g_dpgettext2@plt>
   2f904:	ldr	r1, [pc, #-1192]	; 2f464 <g_unichar_xdigit_value@plt+0x1b600>
   2f908:	ldr	r2, [pc, #-1192]	; 2f468 <g_unichar_xdigit_value@plt+0x1b604>
   2f90c:	add	r1, pc, r1
   2f910:	add	r2, pc, r2
   2f914:	mov	r4, r0
   2f918:	mov	r0, #0
   2f91c:	bl	13b04 <g_dpgettext2@plt>
   2f920:	ldr	ip, [pc, #-1212]	; 2f46c <g_unichar_xdigit_value@plt+0x1b608>
   2f924:	ldr	r3, [pc, #-1212]	; 2f470 <g_unichar_xdigit_value@plt+0x1b60c>
   2f928:	mov	r2, r4
   2f92c:	add	ip, pc, ip
   2f930:	mov	r1, r5
   2f934:	add	r3, pc, r3
   2f938:	str	ip, [sp]
   2f93c:	str	r0, [sp, #4]
   2f940:	ldr	r0, [pc, #-1236]	; 2f474 <g_unichar_xdigit_value@plt+0x1b610>
   2f944:	add	r0, pc, r0
   2f948:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2f94c:	mov	r4, r0
   2f950:	mov	r0, r6
   2f954:	mov	r1, r4
   2f958:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2f95c:	cmp	r4, #0
   2f960:	beq	2f96c <g_unichar_xdigit_value@plt+0x1bb08>
   2f964:	mov	r0, r4
   2f968:	bl	13b94 <g_object_unref@plt>
   2f96c:	ldr	r0, [pc, #-1276]	; 2f478 <g_unichar_xdigit_value@plt+0x1b614>
   2f970:	ldr	r1, [pc, #-1276]	; 2f47c <g_unichar_xdigit_value@plt+0x1b618>
   2f974:	add	r0, pc, r0
   2f978:	add	r1, pc, r1
   2f97c:	bl	13c9c <g_dgettext@plt>
   2f980:	ldr	r1, [pc, #-1288]	; 2f480 <g_unichar_xdigit_value@plt+0x1b61c>
   2f984:	ldr	r2, [pc, #-1288]	; 2f484 <g_unichar_xdigit_value@plt+0x1b620>
   2f988:	add	r1, pc, r1
   2f98c:	add	r2, pc, r2
   2f990:	mov	r5, r0
   2f994:	mov	r0, #0
   2f998:	bl	13b04 <g_dpgettext2@plt>
   2f99c:	ldr	r1, [pc, #-1308]	; 2f488 <g_unichar_xdigit_value@plt+0x1b624>
   2f9a0:	ldr	r2, [pc, #-1308]	; 2f48c <g_unichar_xdigit_value@plt+0x1b628>
   2f9a4:	add	r1, pc, r1
   2f9a8:	add	r2, pc, r2
   2f9ac:	mov	r4, r0
   2f9b0:	mov	r0, #0
   2f9b4:	bl	13b04 <g_dpgettext2@plt>
   2f9b8:	ldr	ip, [pc, #-1328]	; 2f490 <g_unichar_xdigit_value@plt+0x1b62c>
   2f9bc:	ldr	r3, [pc, #-1328]	; 2f494 <g_unichar_xdigit_value@plt+0x1b630>
   2f9c0:	mov	r2, r4
   2f9c4:	add	ip, pc, ip
   2f9c8:	mov	r1, r5
   2f9cc:	add	r3, pc, r3
   2f9d0:	str	ip, [sp]
   2f9d4:	str	r0, [sp, #4]
   2f9d8:	ldr	r0, [pc, #-1352]	; 2f498 <g_unichar_xdigit_value@plt+0x1b634>
   2f9dc:	add	r0, pc, r0
   2f9e0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2f9e4:	mov	r4, r0
   2f9e8:	mov	r0, r6
   2f9ec:	mov	r1, r4
   2f9f0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2f9f4:	cmp	r4, #0
   2f9f8:	beq	2fa04 <g_unichar_xdigit_value@plt+0x1bba0>
   2f9fc:	mov	r0, r4
   2fa00:	bl	13b94 <g_object_unref@plt>
   2fa04:	ldr	r0, [pc, #-1392]	; 2f49c <g_unichar_xdigit_value@plt+0x1b638>
   2fa08:	ldr	r1, [pc, #-1392]	; 2f4a0 <g_unichar_xdigit_value@plt+0x1b63c>
   2fa0c:	add	r0, pc, r0
   2fa10:	add	r1, pc, r1
   2fa14:	bl	13c9c <g_dgettext@plt>
   2fa18:	ldr	r1, [pc, #-1404]	; 2f4a4 <g_unichar_xdigit_value@plt+0x1b640>
   2fa1c:	ldr	r2, [pc, #-1404]	; 2f4a8 <g_unichar_xdigit_value@plt+0x1b644>
   2fa20:	add	r1, pc, r1
   2fa24:	add	r2, pc, r2
   2fa28:	mov	r5, r0
   2fa2c:	mov	r0, #0
   2fa30:	bl	13b04 <g_dpgettext2@plt>
   2fa34:	ldr	r1, [pc, #-1424]	; 2f4ac <g_unichar_xdigit_value@plt+0x1b648>
   2fa38:	ldr	r2, [pc, #-1424]	; 2f4b0 <g_unichar_xdigit_value@plt+0x1b64c>
   2fa3c:	add	r1, pc, r1
   2fa40:	add	r2, pc, r2
   2fa44:	mov	r4, r0
   2fa48:	mov	r0, #0
   2fa4c:	bl	13b04 <g_dpgettext2@plt>
   2fa50:	ldr	ip, [pc, #-1444]	; 2f4b4 <g_unichar_xdigit_value@plt+0x1b650>
   2fa54:	ldr	r3, [pc, #-1444]	; 2f4b8 <g_unichar_xdigit_value@plt+0x1b654>
   2fa58:	mov	r2, r4
   2fa5c:	add	ip, pc, ip
   2fa60:	mov	r1, r5
   2fa64:	add	r3, pc, r3
   2fa68:	str	ip, [sp]
   2fa6c:	str	r0, [sp, #4]
   2fa70:	ldr	r0, [pc, #-1468]	; 2f4bc <g_unichar_xdigit_value@plt+0x1b658>
   2fa74:	add	r0, pc, r0
   2fa78:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2fa7c:	mov	r4, r0
   2fa80:	mov	r0, r6
   2fa84:	mov	r1, r4
   2fa88:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2fa8c:	cmp	r4, #0
   2fa90:	beq	2fa9c <g_unichar_xdigit_value@plt+0x1bc38>
   2fa94:	mov	r0, r4
   2fa98:	bl	13b94 <g_object_unref@plt>
   2fa9c:	ldr	r0, [pc, #-1508]	; 2f4c0 <g_unichar_xdigit_value@plt+0x1b65c>
   2faa0:	ldr	r1, [pc, #-1508]	; 2f4c4 <g_unichar_xdigit_value@plt+0x1b660>
   2faa4:	add	r0, pc, r0
   2faa8:	add	r1, pc, r1
   2faac:	bl	13c9c <g_dgettext@plt>
   2fab0:	ldr	r1, [pc, #-1520]	; 2f4c8 <g_unichar_xdigit_value@plt+0x1b664>
   2fab4:	ldr	r2, [pc, #-1520]	; 2f4cc <g_unichar_xdigit_value@plt+0x1b668>
   2fab8:	add	r1, pc, r1
   2fabc:	add	r2, pc, r2
   2fac0:	mov	r5, r0
   2fac4:	mov	r0, #0
   2fac8:	bl	13b04 <g_dpgettext2@plt>
   2facc:	ldr	r1, [pc, #-1540]	; 2f4d0 <g_unichar_xdigit_value@plt+0x1b66c>
   2fad0:	ldr	r2, [pc, #-1540]	; 2f4d4 <g_unichar_xdigit_value@plt+0x1b670>
   2fad4:	add	r1, pc, r1
   2fad8:	add	r2, pc, r2
   2fadc:	mov	r4, r0
   2fae0:	mov	r0, #0
   2fae4:	bl	13b04 <g_dpgettext2@plt>
   2fae8:	ldr	ip, [pc, #-1560]	; 2f4d8 <g_unichar_xdigit_value@plt+0x1b674>
   2faec:	ldr	r3, [pc, #-1560]	; 2f4dc <g_unichar_xdigit_value@plt+0x1b678>
   2faf0:	mov	r2, r4
   2faf4:	add	ip, pc, ip
   2faf8:	mov	r1, r5
   2fafc:	add	r3, pc, r3
   2fb00:	str	ip, [sp]
   2fb04:	str	r0, [sp, #4]
   2fb08:	ldr	r0, [pc, #-1584]	; 2f4e0 <g_unichar_xdigit_value@plt+0x1b67c>
   2fb0c:	add	r0, pc, r0
   2fb10:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2fb14:	mov	r4, r0
   2fb18:	mov	r0, r6
   2fb1c:	mov	r1, r4
   2fb20:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2fb24:	cmp	r4, #0
   2fb28:	beq	2fb34 <g_unichar_xdigit_value@plt+0x1bcd0>
   2fb2c:	mov	r0, r4
   2fb30:	bl	13b94 <g_object_unref@plt>
   2fb34:	ldr	r0, [pc, #-1624]	; 2f4e4 <g_unichar_xdigit_value@plt+0x1b680>
   2fb38:	ldr	r1, [pc, #-1624]	; 2f4e8 <g_unichar_xdigit_value@plt+0x1b684>
   2fb3c:	add	r0, pc, r0
   2fb40:	add	r1, pc, r1
   2fb44:	bl	13c9c <g_dgettext@plt>
   2fb48:	ldr	r1, [pc, #-1636]	; 2f4ec <g_unichar_xdigit_value@plt+0x1b688>
   2fb4c:	ldr	r2, [pc, #-1636]	; 2f4f0 <g_unichar_xdigit_value@plt+0x1b68c>
   2fb50:	add	r1, pc, r1
   2fb54:	add	r2, pc, r2
   2fb58:	mov	r5, r0
   2fb5c:	mov	r0, #0
   2fb60:	bl	13b04 <g_dpgettext2@plt>
   2fb64:	ldr	r1, [pc, #-1656]	; 2f4f4 <g_unichar_xdigit_value@plt+0x1b690>
   2fb68:	ldr	r2, [pc, #-1656]	; 2f4f8 <g_unichar_xdigit_value@plt+0x1b694>
   2fb6c:	add	r1, pc, r1
   2fb70:	add	r2, pc, r2
   2fb74:	mov	r4, r0
   2fb78:	mov	r0, #0
   2fb7c:	bl	13b04 <g_dpgettext2@plt>
   2fb80:	ldr	ip, [pc, #-1676]	; 2f4fc <g_unichar_xdigit_value@plt+0x1b698>
   2fb84:	ldr	r3, [pc, #-1676]	; 2f500 <g_unichar_xdigit_value@plt+0x1b69c>
   2fb88:	mov	r2, r4
   2fb8c:	add	ip, pc, ip
   2fb90:	mov	r1, r5
   2fb94:	add	r3, pc, r3
   2fb98:	str	ip, [sp]
   2fb9c:	str	r0, [sp, #4]
   2fba0:	ldr	r0, [pc, #-1700]	; 2f504 <g_unichar_xdigit_value@plt+0x1b6a0>
   2fba4:	add	r0, pc, r0
   2fba8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2fbac:	mov	r4, r0
   2fbb0:	mov	r0, r6
   2fbb4:	mov	r1, r4
   2fbb8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2fbbc:	cmp	r4, #0
   2fbc0:	beq	2fbcc <g_unichar_xdigit_value@plt+0x1bd68>
   2fbc4:	mov	r0, r4
   2fbc8:	bl	13b94 <g_object_unref@plt>
   2fbcc:	ldr	r0, [pc, #-1740]	; 2f508 <g_unichar_xdigit_value@plt+0x1b6a4>
   2fbd0:	ldr	r1, [pc, #-1740]	; 2f50c <g_unichar_xdigit_value@plt+0x1b6a8>
   2fbd4:	add	r0, pc, r0
   2fbd8:	add	r1, pc, r1
   2fbdc:	bl	13c9c <g_dgettext@plt>
   2fbe0:	ldr	r1, [pc, #-1752]	; 2f510 <g_unichar_xdigit_value@plt+0x1b6ac>
   2fbe4:	ldr	r2, [pc, #-1752]	; 2f514 <g_unichar_xdigit_value@plt+0x1b6b0>
   2fbe8:	add	r1, pc, r1
   2fbec:	add	r2, pc, r2
   2fbf0:	mov	r5, r0
   2fbf4:	mov	r0, #0
   2fbf8:	bl	13b04 <g_dpgettext2@plt>
   2fbfc:	ldr	r1, [pc, #-1772]	; 2f518 <g_unichar_xdigit_value@plt+0x1b6b4>
   2fc00:	ldr	r2, [pc, #-1772]	; 2f51c <g_unichar_xdigit_value@plt+0x1b6b8>
   2fc04:	add	r1, pc, r1
   2fc08:	add	r2, pc, r2
   2fc0c:	mov	r4, r0
   2fc10:	mov	r0, #0
   2fc14:	bl	13b04 <g_dpgettext2@plt>
   2fc18:	ldr	ip, [pc, #-1792]	; 2f520 <g_unichar_xdigit_value@plt+0x1b6bc>
   2fc1c:	ldr	r3, [pc, #-1792]	; 2f524 <g_unichar_xdigit_value@plt+0x1b6c0>
   2fc20:	mov	r2, r4
   2fc24:	add	ip, pc, ip
   2fc28:	mov	r1, r5
   2fc2c:	add	r3, pc, r3
   2fc30:	str	ip, [sp]
   2fc34:	str	r0, [sp, #4]
   2fc38:	ldr	r0, [pc, #-1816]	; 2f528 <g_unichar_xdigit_value@plt+0x1b6c4>
   2fc3c:	add	r0, pc, r0
   2fc40:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2fc44:	mov	r4, r0
   2fc48:	mov	r0, r6
   2fc4c:	mov	r1, r4
   2fc50:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2fc54:	cmp	r4, #0
   2fc58:	beq	2fc64 <g_unichar_xdigit_value@plt+0x1be00>
   2fc5c:	mov	r0, r4
   2fc60:	bl	13b94 <g_object_unref@plt>
   2fc64:	ldr	r0, [pc, #-1856]	; 2f52c <g_unichar_xdigit_value@plt+0x1b6c8>
   2fc68:	ldr	r1, [pc, #-1856]	; 2f530 <g_unichar_xdigit_value@plt+0x1b6cc>
   2fc6c:	add	r0, pc, r0
   2fc70:	add	r1, pc, r1
   2fc74:	bl	13c9c <g_dgettext@plt>
   2fc78:	ldr	r1, [pc, #-1868]	; 2f534 <g_unichar_xdigit_value@plt+0x1b6d0>
   2fc7c:	ldr	r2, [pc, #-1868]	; 2f538 <g_unichar_xdigit_value@plt+0x1b6d4>
   2fc80:	add	r1, pc, r1
   2fc84:	add	r2, pc, r2
   2fc88:	mov	r5, r0
   2fc8c:	mov	r0, #0
   2fc90:	bl	13b04 <g_dpgettext2@plt>
   2fc94:	ldr	r1, [pc, #-1888]	; 2f53c <g_unichar_xdigit_value@plt+0x1b6d8>
   2fc98:	ldr	r2, [pc, #-1888]	; 2f540 <g_unichar_xdigit_value@plt+0x1b6dc>
   2fc9c:	add	r1, pc, r1
   2fca0:	add	r2, pc, r2
   2fca4:	mov	r4, r0
   2fca8:	mov	r0, #0
   2fcac:	bl	13b04 <g_dpgettext2@plt>
   2fcb0:	ldr	ip, [pc, #-1908]	; 2f544 <g_unichar_xdigit_value@plt+0x1b6e0>
   2fcb4:	ldr	r3, [pc, #-1908]	; 2f548 <g_unichar_xdigit_value@plt+0x1b6e4>
   2fcb8:	mov	r2, r4
   2fcbc:	add	ip, pc, ip
   2fcc0:	mov	r1, r5
   2fcc4:	add	r3, pc, r3
   2fcc8:	str	ip, [sp]
   2fccc:	str	r0, [sp, #4]
   2fcd0:	ldr	r0, [pc, #-1932]	; 2f54c <g_unichar_xdigit_value@plt+0x1b6e8>
   2fcd4:	add	r0, pc, r0
   2fcd8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2fcdc:	mov	r4, r0
   2fce0:	mov	r0, r6
   2fce4:	mov	r1, r4
   2fce8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2fcec:	cmp	r4, #0
   2fcf0:	beq	2fcfc <g_unichar_xdigit_value@plt+0x1be98>
   2fcf4:	mov	r0, r4
   2fcf8:	bl	13b94 <g_object_unref@plt>
   2fcfc:	ldr	r0, [pc, #-1972]	; 2f550 <g_unichar_xdigit_value@plt+0x1b6ec>
   2fd00:	ldr	r1, [pc, #-1972]	; 2f554 <g_unichar_xdigit_value@plt+0x1b6f0>
   2fd04:	add	r0, pc, r0
   2fd08:	add	r1, pc, r1
   2fd0c:	bl	13c9c <g_dgettext@plt>
   2fd10:	ldr	r1, [pc, #-1984]	; 2f558 <g_unichar_xdigit_value@plt+0x1b6f4>
   2fd14:	ldr	r2, [pc, #-1984]	; 2f55c <g_unichar_xdigit_value@plt+0x1b6f8>
   2fd18:	add	r1, pc, r1
   2fd1c:	add	r2, pc, r2
   2fd20:	mov	r5, r0
   2fd24:	mov	r0, #0
   2fd28:	bl	13b04 <g_dpgettext2@plt>
   2fd2c:	ldr	r1, [pc, #-2004]	; 2f560 <g_unichar_xdigit_value@plt+0x1b6fc>
   2fd30:	ldr	r2, [pc, #-2004]	; 2f564 <g_unichar_xdigit_value@plt+0x1b700>
   2fd34:	add	r1, pc, r1
   2fd38:	add	r2, pc, r2
   2fd3c:	mov	r4, r0
   2fd40:	mov	r0, #0
   2fd44:	bl	13b04 <g_dpgettext2@plt>
   2fd48:	ldr	ip, [pc, #-2024]	; 2f568 <g_unichar_xdigit_value@plt+0x1b704>
   2fd4c:	ldr	r3, [pc, #-2024]	; 2f56c <g_unichar_xdigit_value@plt+0x1b708>
   2fd50:	mov	r2, r4
   2fd54:	add	ip, pc, ip
   2fd58:	mov	r1, r5
   2fd5c:	add	r3, pc, r3
   2fd60:	str	ip, [sp]
   2fd64:	str	r0, [sp, #4]
   2fd68:	ldr	r0, [pc, #-2048]	; 2f570 <g_unichar_xdigit_value@plt+0x1b70c>
   2fd6c:	add	r0, pc, r0
   2fd70:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2fd74:	mov	r4, r0
   2fd78:	mov	r0, r6
   2fd7c:	mov	r1, r4
   2fd80:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2fd84:	cmp	r4, #0
   2fd88:	beq	2fd94 <g_unichar_xdigit_value@plt+0x1bf30>
   2fd8c:	mov	r0, r4
   2fd90:	bl	13b94 <g_object_unref@plt>
   2fd94:	ldr	r0, [pc, #-2088]	; 2f574 <g_unichar_xdigit_value@plt+0x1b710>
   2fd98:	ldr	r1, [pc, #-2088]	; 2f578 <g_unichar_xdigit_value@plt+0x1b714>
   2fd9c:	add	r0, pc, r0
   2fda0:	add	r1, pc, r1
   2fda4:	bl	13c9c <g_dgettext@plt>
   2fda8:	ldr	r1, [pc, #-2100]	; 2f57c <g_unichar_xdigit_value@plt+0x1b718>
   2fdac:	ldr	r2, [pc, #-2100]	; 2f580 <g_unichar_xdigit_value@plt+0x1b71c>
   2fdb0:	add	r1, pc, r1
   2fdb4:	add	r2, pc, r2
   2fdb8:	mov	r5, r0
   2fdbc:	mov	r0, #0
   2fdc0:	bl	13b04 <g_dpgettext2@plt>
   2fdc4:	ldr	r1, [pc, #-2120]	; 2f584 <g_unichar_xdigit_value@plt+0x1b720>
   2fdc8:	ldr	r2, [pc, #-2120]	; 2f588 <g_unichar_xdigit_value@plt+0x1b724>
   2fdcc:	add	r1, pc, r1
   2fdd0:	add	r2, pc, r2
   2fdd4:	mov	r4, r0
   2fdd8:	mov	r0, #0
   2fddc:	bl	13b04 <g_dpgettext2@plt>
   2fde0:	ldr	ip, [pc, #-2140]	; 2f58c <g_unichar_xdigit_value@plt+0x1b728>
   2fde4:	ldr	r3, [pc, #-2140]	; 2f590 <g_unichar_xdigit_value@plt+0x1b72c>
   2fde8:	mov	r2, r4
   2fdec:	add	ip, pc, ip
   2fdf0:	mov	r1, r5
   2fdf4:	add	r3, pc, r3
   2fdf8:	str	ip, [sp]
   2fdfc:	str	r0, [sp, #4]
   2fe00:	ldr	r0, [pc, #-2164]	; 2f594 <g_unichar_xdigit_value@plt+0x1b730>
   2fe04:	add	r0, pc, r0
   2fe08:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2fe0c:	mov	r4, r0
   2fe10:	mov	r0, r6
   2fe14:	mov	r1, r4
   2fe18:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2fe1c:	cmp	r4, #0
   2fe20:	beq	2fe2c <g_unichar_xdigit_value@plt+0x1bfc8>
   2fe24:	mov	r0, r4
   2fe28:	bl	13b94 <g_object_unref@plt>
   2fe2c:	ldr	r0, [pc, #-2204]	; 2f598 <g_unichar_xdigit_value@plt+0x1b734>
   2fe30:	ldr	r1, [pc, #-2204]	; 2f59c <g_unichar_xdigit_value@plt+0x1b738>
   2fe34:	add	r0, pc, r0
   2fe38:	add	r1, pc, r1
   2fe3c:	bl	13c9c <g_dgettext@plt>
   2fe40:	ldr	r1, [pc, #-2216]	; 2f5a0 <g_unichar_xdigit_value@plt+0x1b73c>
   2fe44:	ldr	r2, [pc, #-2216]	; 2f5a4 <g_unichar_xdigit_value@plt+0x1b740>
   2fe48:	add	r1, pc, r1
   2fe4c:	add	r2, pc, r2
   2fe50:	mov	r5, r0
   2fe54:	mov	r0, #0
   2fe58:	bl	13b04 <g_dpgettext2@plt>
   2fe5c:	ldr	r1, [pc, #-2236]	; 2f5a8 <g_unichar_xdigit_value@plt+0x1b744>
   2fe60:	ldr	r2, [pc, #-2236]	; 2f5ac <g_unichar_xdigit_value@plt+0x1b748>
   2fe64:	add	r1, pc, r1
   2fe68:	add	r2, pc, r2
   2fe6c:	mov	r4, r0
   2fe70:	mov	r0, #0
   2fe74:	bl	13b04 <g_dpgettext2@plt>
   2fe78:	ldr	ip, [pc, #-2256]	; 2f5b0 <g_unichar_xdigit_value@plt+0x1b74c>
   2fe7c:	ldr	r3, [pc, #-2256]	; 2f5b4 <g_unichar_xdigit_value@plt+0x1b750>
   2fe80:	mov	r2, r4
   2fe84:	add	ip, pc, ip
   2fe88:	mov	r1, r5
   2fe8c:	add	r3, pc, r3
   2fe90:	str	ip, [sp]
   2fe94:	str	r0, [sp, #4]
   2fe98:	ldr	r0, [pc, #-2280]	; 2f5b8 <g_unichar_xdigit_value@plt+0x1b754>
   2fe9c:	add	r0, pc, r0
   2fea0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2fea4:	mov	r4, r0
   2fea8:	mov	r0, r6
   2feac:	mov	r1, r4
   2feb0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2feb4:	cmp	r4, #0
   2feb8:	beq	2fec4 <g_unichar_xdigit_value@plt+0x1c060>
   2febc:	mov	r0, r4
   2fec0:	bl	13b94 <g_object_unref@plt>
   2fec4:	ldr	r0, [pc, #-2320]	; 2f5bc <g_unichar_xdigit_value@plt+0x1b758>
   2fec8:	ldr	r1, [pc, #-2320]	; 2f5c0 <g_unichar_xdigit_value@plt+0x1b75c>
   2fecc:	add	r0, pc, r0
   2fed0:	add	r1, pc, r1
   2fed4:	bl	13c9c <g_dgettext@plt>
   2fed8:	ldr	r1, [pc, #-2332]	; 2f5c4 <g_unichar_xdigit_value@plt+0x1b760>
   2fedc:	ldr	r2, [pc, #-2332]	; 2f5c8 <g_unichar_xdigit_value@plt+0x1b764>
   2fee0:	add	r1, pc, r1
   2fee4:	add	r2, pc, r2
   2fee8:	mov	r5, r0
   2feec:	mov	r0, #0
   2fef0:	bl	13b04 <g_dpgettext2@plt>
   2fef4:	ldr	r1, [pc, #-2352]	; 2f5cc <g_unichar_xdigit_value@plt+0x1b768>
   2fef8:	ldr	r2, [pc, #-2352]	; 2f5d0 <g_unichar_xdigit_value@plt+0x1b76c>
   2fefc:	add	r1, pc, r1
   2ff00:	add	r2, pc, r2
   2ff04:	mov	r4, r0
   2ff08:	mov	r0, #0
   2ff0c:	bl	13b04 <g_dpgettext2@plt>
   2ff10:	ldr	ip, [pc, #-2372]	; 2f5d4 <g_unichar_xdigit_value@plt+0x1b770>
   2ff14:	ldr	r3, [pc, #-2372]	; 2f5d8 <g_unichar_xdigit_value@plt+0x1b774>
   2ff18:	mov	r2, r4
   2ff1c:	add	ip, pc, ip
   2ff20:	mov	r1, r5
   2ff24:	add	r3, pc, r3
   2ff28:	str	ip, [sp]
   2ff2c:	str	r0, [sp, #4]
   2ff30:	ldr	r0, [pc, #-2396]	; 2f5dc <g_unichar_xdigit_value@plt+0x1b778>
   2ff34:	add	r0, pc, r0
   2ff38:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2ff3c:	mov	r4, r0
   2ff40:	mov	r0, r6
   2ff44:	mov	r1, r4
   2ff48:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2ff4c:	cmp	r4, #0
   2ff50:	beq	2ff5c <g_unichar_xdigit_value@plt+0x1c0f8>
   2ff54:	mov	r0, r4
   2ff58:	bl	13b94 <g_object_unref@plt>
   2ff5c:	ldr	r0, [pc, #-2436]	; 2f5e0 <g_unichar_xdigit_value@plt+0x1b77c>
   2ff60:	ldr	r1, [pc, #-2436]	; 2f5e4 <g_unichar_xdigit_value@plt+0x1b780>
   2ff64:	add	r0, pc, r0
   2ff68:	add	r1, pc, r1
   2ff6c:	bl	13c9c <g_dgettext@plt>
   2ff70:	ldr	r1, [pc, #-2448]	; 2f5e8 <g_unichar_xdigit_value@plt+0x1b784>
   2ff74:	ldr	r2, [pc, #-2448]	; 2f5ec <g_unichar_xdigit_value@plt+0x1b788>
   2ff78:	add	r1, pc, r1
   2ff7c:	add	r2, pc, r2
   2ff80:	mov	r5, r0
   2ff84:	mov	r0, #0
   2ff88:	bl	13b04 <g_dpgettext2@plt>
   2ff8c:	ldr	r1, [pc, #-2468]	; 2f5f0 <g_unichar_xdigit_value@plt+0x1b78c>
   2ff90:	ldr	r2, [pc, #-2468]	; 2f5f4 <g_unichar_xdigit_value@plt+0x1b790>
   2ff94:	add	r1, pc, r1
   2ff98:	add	r2, pc, r2
   2ff9c:	mov	r4, r0
   2ffa0:	mov	r0, #0
   2ffa4:	bl	13b04 <g_dpgettext2@plt>
   2ffa8:	ldr	ip, [pc, #-2488]	; 2f5f8 <g_unichar_xdigit_value@plt+0x1b794>
   2ffac:	ldr	r3, [pc, #-2488]	; 2f5fc <g_unichar_xdigit_value@plt+0x1b798>
   2ffb0:	mov	r2, r4
   2ffb4:	add	ip, pc, ip
   2ffb8:	mov	r1, r5
   2ffbc:	add	r3, pc, r3
   2ffc0:	str	ip, [sp]
   2ffc4:	str	r0, [sp, #4]
   2ffc8:	ldr	r0, [pc, #-2512]	; 2f600 <g_unichar_xdigit_value@plt+0x1b79c>
   2ffcc:	add	r0, pc, r0
   2ffd0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   2ffd4:	mov	r4, r0
   2ffd8:	mov	r0, r6
   2ffdc:	mov	r1, r4
   2ffe0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   2ffe4:	cmp	r4, #0
   2ffe8:	beq	2fff4 <g_unichar_xdigit_value@plt+0x1c190>
   2ffec:	mov	r0, r4
   2fff0:	bl	13b94 <g_object_unref@plt>
   2fff4:	ldr	r0, [pc, #-2552]	; 2f604 <g_unichar_xdigit_value@plt+0x1b7a0>
   2fff8:	ldr	r1, [pc, #-2552]	; 2f608 <g_unichar_xdigit_value@plt+0x1b7a4>
   2fffc:	add	r0, pc, r0
   30000:	add	r1, pc, r1
   30004:	bl	13c9c <g_dgettext@plt>
   30008:	ldr	r1, [pc, #-2564]	; 2f60c <g_unichar_xdigit_value@plt+0x1b7a8>
   3000c:	ldr	r2, [pc, #-2564]	; 2f610 <g_unichar_xdigit_value@plt+0x1b7ac>
   30010:	add	r1, pc, r1
   30014:	add	r2, pc, r2
   30018:	mov	r5, r0
   3001c:	mov	r0, #0
   30020:	bl	13b04 <g_dpgettext2@plt>
   30024:	ldr	r1, [pc, #-2584]	; 2f614 <g_unichar_xdigit_value@plt+0x1b7b0>
   30028:	ldr	r2, [pc, #-2584]	; 2f618 <g_unichar_xdigit_value@plt+0x1b7b4>
   3002c:	add	r1, pc, r1
   30030:	add	r2, pc, r2
   30034:	mov	r4, r0
   30038:	mov	r0, #0
   3003c:	bl	13b04 <g_dpgettext2@plt>
   30040:	ldr	ip, [pc, #-2604]	; 2f61c <g_unichar_xdigit_value@plt+0x1b7b8>
   30044:	ldr	r3, [pc, #-2604]	; 2f620 <g_unichar_xdigit_value@plt+0x1b7bc>
   30048:	mov	r2, r4
   3004c:	add	ip, pc, ip
   30050:	mov	r1, r5
   30054:	add	r3, pc, r3
   30058:	str	ip, [sp]
   3005c:	str	r0, [sp, #4]
   30060:	ldr	r0, [pc, #-2628]	; 2f624 <g_unichar_xdigit_value@plt+0x1b7c0>
   30064:	add	r0, pc, r0
   30068:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   3006c:	mov	r4, r0
   30070:	mov	r0, r6
   30074:	mov	r1, r4
   30078:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   3007c:	cmp	r4, #0
   30080:	beq	3008c <g_unichar_xdigit_value@plt+0x1c228>
   30084:	mov	r0, r4
   30088:	bl	13b94 <g_object_unref@plt>
   3008c:	ldr	r0, [pc, #-2668]	; 2f628 <g_unichar_xdigit_value@plt+0x1b7c4>
   30090:	ldr	r1, [pc, #-2668]	; 2f62c <g_unichar_xdigit_value@plt+0x1b7c8>
   30094:	add	r0, pc, r0
   30098:	add	r1, pc, r1
   3009c:	bl	13c9c <g_dgettext@plt>
   300a0:	ldr	r1, [pc, #-2680]	; 2f630 <g_unichar_xdigit_value@plt+0x1b7cc>
   300a4:	ldr	r2, [pc, #-2680]	; 2f634 <g_unichar_xdigit_value@plt+0x1b7d0>
   300a8:	add	r1, pc, r1
   300ac:	add	r2, pc, r2
   300b0:	mov	r5, r0
   300b4:	mov	r0, #0
   300b8:	bl	13b04 <g_dpgettext2@plt>
   300bc:	ldr	r1, [pc, #-2700]	; 2f638 <g_unichar_xdigit_value@plt+0x1b7d4>
   300c0:	ldr	r2, [pc, #-2700]	; 2f63c <g_unichar_xdigit_value@plt+0x1b7d8>
   300c4:	add	r1, pc, r1
   300c8:	add	r2, pc, r2
   300cc:	mov	r4, r0
   300d0:	mov	r0, #0
   300d4:	bl	13b04 <g_dpgettext2@plt>
   300d8:	ldr	ip, [pc, #-2720]	; 2f640 <g_unichar_xdigit_value@plt+0x1b7dc>
   300dc:	ldr	r3, [pc, #-2720]	; 2f644 <g_unichar_xdigit_value@plt+0x1b7e0>
   300e0:	mov	r2, r4
   300e4:	add	ip, pc, ip
   300e8:	mov	r1, r5
   300ec:	add	r3, pc, r3
   300f0:	str	ip, [sp]
   300f4:	str	r0, [sp, #4]
   300f8:	ldr	r0, [pc, #-2744]	; 2f648 <g_unichar_xdigit_value@plt+0x1b7e4>
   300fc:	add	r0, pc, r0
   30100:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   30104:	mov	r4, r0
   30108:	mov	r0, r6
   3010c:	mov	r1, r4
   30110:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   30114:	cmp	r4, #0
   30118:	beq	30124 <g_unichar_xdigit_value@plt+0x1c2c0>
   3011c:	mov	r0, r4
   30120:	bl	13b94 <g_object_unref@plt>
   30124:	ldr	r0, [pc, #-2784]	; 2f64c <g_unichar_xdigit_value@plt+0x1b7e8>
   30128:	ldr	r1, [pc, #-2784]	; 2f650 <g_unichar_xdigit_value@plt+0x1b7ec>
   3012c:	add	r0, pc, r0
   30130:	add	r1, pc, r1
   30134:	bl	13c9c <g_dgettext@plt>
   30138:	ldr	r1, [pc, #-2796]	; 2f654 <g_unichar_xdigit_value@plt+0x1b7f0>
   3013c:	ldr	r2, [pc, #-2796]	; 2f658 <g_unichar_xdigit_value@plt+0x1b7f4>
   30140:	add	r1, pc, r1
   30144:	add	r2, pc, r2
   30148:	mov	r5, r0
   3014c:	mov	r0, #0
   30150:	bl	13b04 <g_dpgettext2@plt>
   30154:	ldr	r1, [pc, #-2816]	; 2f65c <g_unichar_xdigit_value@plt+0x1b7f8>
   30158:	ldr	r2, [pc, #-2816]	; 2f660 <g_unichar_xdigit_value@plt+0x1b7fc>
   3015c:	add	r1, pc, r1
   30160:	add	r2, pc, r2
   30164:	mov	r4, r0
   30168:	mov	r0, #0
   3016c:	bl	13b04 <g_dpgettext2@plt>
   30170:	ldr	ip, [pc, #-2836]	; 2f664 <g_unichar_xdigit_value@plt+0x1b800>
   30174:	ldr	r3, [pc, #-2836]	; 2f668 <g_unichar_xdigit_value@plt+0x1b804>
   30178:	mov	r2, r4
   3017c:	add	ip, pc, ip
   30180:	mov	r1, r5
   30184:	add	r3, pc, r3
   30188:	str	ip, [sp]
   3018c:	str	r0, [sp, #4]
   30190:	ldr	r0, [pc, #-2860]	; 2f66c <g_unichar_xdigit_value@plt+0x1b808>
   30194:	add	r0, pc, r0
   30198:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   3019c:	mov	r4, r0
   301a0:	mov	r0, r6
   301a4:	mov	r1, r4
   301a8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   301ac:	cmp	r4, #0
   301b0:	beq	301bc <g_unichar_xdigit_value@plt+0x1c358>
   301b4:	mov	r0, r4
   301b8:	bl	13b94 <g_object_unref@plt>
   301bc:	ldr	r0, [pc, #-2900]	; 2f670 <g_unichar_xdigit_value@plt+0x1b80c>
   301c0:	ldr	r1, [pc, #-2900]	; 2f674 <g_unichar_xdigit_value@plt+0x1b810>
   301c4:	add	r0, pc, r0
   301c8:	add	r1, pc, r1
   301cc:	bl	13c9c <g_dgettext@plt>
   301d0:	ldr	r1, [pc, #-2912]	; 2f678 <g_unichar_xdigit_value@plt+0x1b814>
   301d4:	ldr	r2, [pc, #-2912]	; 2f67c <g_unichar_xdigit_value@plt+0x1b818>
   301d8:	add	r1, pc, r1
   301dc:	add	r2, pc, r2
   301e0:	mov	r5, r0
   301e4:	mov	r0, #0
   301e8:	bl	13b04 <g_dpgettext2@plt>
   301ec:	ldr	r1, [pc, #-2932]	; 2f680 <g_unichar_xdigit_value@plt+0x1b81c>
   301f0:	ldr	r2, [pc, #-2932]	; 2f684 <g_unichar_xdigit_value@plt+0x1b820>
   301f4:	add	r1, pc, r1
   301f8:	add	r2, pc, r2
   301fc:	mov	r4, r0
   30200:	mov	r0, #0
   30204:	bl	13b04 <g_dpgettext2@plt>
   30208:	ldr	ip, [pc, #-2952]	; 2f688 <g_unichar_xdigit_value@plt+0x1b824>
   3020c:	ldr	r3, [pc, #-2952]	; 2f68c <g_unichar_xdigit_value@plt+0x1b828>
   30210:	mov	r2, r4
   30214:	add	ip, pc, ip
   30218:	mov	r1, r5
   3021c:	add	r3, pc, r3
   30220:	str	ip, [sp]
   30224:	str	r0, [sp, #4]
   30228:	ldr	r0, [pc, #-2976]	; 2f690 <g_unichar_xdigit_value@plt+0x1b82c>
   3022c:	add	r0, pc, r0
   30230:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   30234:	mov	r4, r0
   30238:	mov	r0, r6
   3023c:	mov	r1, r4
   30240:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   30244:	cmp	r4, #0
   30248:	beq	30254 <g_unichar_xdigit_value@plt+0x1c3f0>
   3024c:	mov	r0, r4
   30250:	bl	13b94 <g_object_unref@plt>
   30254:	ldr	r0, [pc, #-3016]	; 2f694 <g_unichar_xdigit_value@plt+0x1b830>
   30258:	ldr	r1, [pc, #-3016]	; 2f698 <g_unichar_xdigit_value@plt+0x1b834>
   3025c:	add	r0, pc, r0
   30260:	add	r1, pc, r1
   30264:	bl	13c9c <g_dgettext@plt>
   30268:	ldr	r1, [pc, #-3028]	; 2f69c <g_unichar_xdigit_value@plt+0x1b838>
   3026c:	ldr	r2, [pc, #-3028]	; 2f6a0 <g_unichar_xdigit_value@plt+0x1b83c>
   30270:	add	r1, pc, r1
   30274:	add	r2, pc, r2
   30278:	mov	r5, r0
   3027c:	mov	r0, #0
   30280:	bl	13b04 <g_dpgettext2@plt>
   30284:	ldr	r1, [pc, #-3048]	; 2f6a4 <g_unichar_xdigit_value@plt+0x1b840>
   30288:	ldr	r2, [pc, #-3048]	; 2f6a8 <g_unichar_xdigit_value@plt+0x1b844>
   3028c:	add	r1, pc, r1
   30290:	add	r2, pc, r2
   30294:	mov	r4, r0
   30298:	mov	r0, #0
   3029c:	bl	13b04 <g_dpgettext2@plt>
   302a0:	ldr	ip, [pc, #-3068]	; 2f6ac <g_unichar_xdigit_value@plt+0x1b848>
   302a4:	ldr	r3, [pc, #-3068]	; 2f6b0 <g_unichar_xdigit_value@plt+0x1b84c>
   302a8:	mov	r2, r4
   302ac:	add	ip, pc, ip
   302b0:	mov	r1, r5
   302b4:	add	r3, pc, r3
   302b8:	str	ip, [sp]
   302bc:	str	r0, [sp, #4]
   302c0:	ldr	r0, [pc, #-3092]	; 2f6b4 <g_unichar_xdigit_value@plt+0x1b850>
   302c4:	add	r0, pc, r0
   302c8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   302cc:	mov	r4, r0
   302d0:	mov	r0, r6
   302d4:	mov	r1, r4
   302d8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   302dc:	cmp	r4, #0
   302e0:	beq	302ec <g_unichar_xdigit_value@plt+0x1c488>
   302e4:	mov	r0, r4
   302e8:	bl	13b94 <g_object_unref@plt>
   302ec:	ldr	r0, [pc, #-3132]	; 2f6b8 <g_unichar_xdigit_value@plt+0x1b854>
   302f0:	ldr	r1, [pc, #-3132]	; 2f6bc <g_unichar_xdigit_value@plt+0x1b858>
   302f4:	add	r0, pc, r0
   302f8:	add	r1, pc, r1
   302fc:	bl	13c9c <g_dgettext@plt>
   30300:	ldr	r1, [pc, #-3144]	; 2f6c0 <g_unichar_xdigit_value@plt+0x1b85c>
   30304:	ldr	r2, [pc, #-3144]	; 2f6c4 <g_unichar_xdigit_value@plt+0x1b860>
   30308:	add	r1, pc, r1
   3030c:	add	r2, pc, r2
   30310:	mov	r5, r0
   30314:	mov	r0, #0
   30318:	bl	13b04 <g_dpgettext2@plt>
   3031c:	ldr	r1, [pc, #-3164]	; 2f6c8 <g_unichar_xdigit_value@plt+0x1b864>
   30320:	ldr	r2, [pc, #-3164]	; 2f6cc <g_unichar_xdigit_value@plt+0x1b868>
   30324:	add	r1, pc, r1
   30328:	add	r2, pc, r2
   3032c:	mov	r4, r0
   30330:	mov	r0, #0
   30334:	bl	13b04 <g_dpgettext2@plt>
   30338:	ldr	ip, [pc, #-3184]	; 2f6d0 <g_unichar_xdigit_value@plt+0x1b86c>
   3033c:	ldr	r3, [pc, #-3184]	; 2f6d4 <g_unichar_xdigit_value@plt+0x1b870>
   30340:	mov	r2, r4
   30344:	add	ip, pc, ip
   30348:	mov	r1, r5
   3034c:	add	r3, pc, r3
   30350:	str	ip, [sp]
   30354:	str	r0, [sp, #4]
   30358:	ldr	r0, [pc, #-3208]	; 2f6d8 <g_unichar_xdigit_value@plt+0x1b874>
   3035c:	add	r0, pc, r0
   30360:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   30364:	mov	r4, r0
   30368:	mov	r0, r6
   3036c:	mov	r1, r4
   30370:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   30374:	cmp	r4, #0
   30378:	beq	30384 <g_unichar_xdigit_value@plt+0x1c520>
   3037c:	mov	r0, r4
   30380:	bl	13b94 <g_object_unref@plt>
   30384:	ldr	r0, [pc, #-3248]	; 2f6dc <g_unichar_xdigit_value@plt+0x1b878>
   30388:	ldr	r1, [pc, #-3248]	; 2f6e0 <g_unichar_xdigit_value@plt+0x1b87c>
   3038c:	add	r0, pc, r0
   30390:	add	r1, pc, r1
   30394:	bl	13c9c <g_dgettext@plt>
   30398:	ldr	r1, [pc, #-3260]	; 2f6e4 <g_unichar_xdigit_value@plt+0x1b880>
   3039c:	ldr	r2, [pc, #-3260]	; 2f6e8 <g_unichar_xdigit_value@plt+0x1b884>
   303a0:	add	r1, pc, r1
   303a4:	add	r2, pc, r2
   303a8:	mov	r5, r0
   303ac:	mov	r0, #0
   303b0:	bl	13b04 <g_dpgettext2@plt>
   303b4:	ldr	r1, [pc, #-3280]	; 2f6ec <g_unichar_xdigit_value@plt+0x1b888>
   303b8:	ldr	r2, [pc, #-3280]	; 2f6f0 <g_unichar_xdigit_value@plt+0x1b88c>
   303bc:	add	r1, pc, r1
   303c0:	add	r2, pc, r2
   303c4:	mov	r4, r0
   303c8:	mov	r0, #0
   303cc:	bl	13b04 <g_dpgettext2@plt>
   303d0:	ldr	ip, [pc, #-3300]	; 2f6f4 <g_unichar_xdigit_value@plt+0x1b890>
   303d4:	ldr	r3, [pc, #-3300]	; 2f6f8 <g_unichar_xdigit_value@plt+0x1b894>
   303d8:	mov	r2, r4
   303dc:	add	ip, pc, ip
   303e0:	mov	r1, r5
   303e4:	add	r3, pc, r3
   303e8:	str	ip, [sp]
   303ec:	str	r0, [sp, #4]
   303f0:	ldr	r0, [pc, #-3324]	; 2f6fc <g_unichar_xdigit_value@plt+0x1b898>
   303f4:	add	r0, pc, r0
   303f8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   303fc:	mov	r4, r0
   30400:	mov	r0, r6
   30404:	mov	r1, r4
   30408:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   3040c:	cmp	r4, #0
   30410:	beq	3041c <g_unichar_xdigit_value@plt+0x1c5b8>
   30414:	mov	r0, r4
   30418:	bl	13b94 <g_object_unref@plt>
   3041c:	ldr	r0, [pc, #-3364]	; 2f700 <g_unichar_xdigit_value@plt+0x1b89c>
   30420:	ldr	r1, [pc, #-3364]	; 2f704 <g_unichar_xdigit_value@plt+0x1b8a0>
   30424:	add	r0, pc, r0
   30428:	add	r1, pc, r1
   3042c:	bl	13c9c <g_dgettext@plt>
   30430:	ldr	r1, [pc, #-3376]	; 2f708 <g_unichar_xdigit_value@plt+0x1b8a4>
   30434:	ldr	r2, [pc, #-3376]	; 2f70c <g_unichar_xdigit_value@plt+0x1b8a8>
   30438:	add	r1, pc, r1
   3043c:	add	r2, pc, r2
   30440:	mov	r5, r0
   30444:	mov	r0, #0
   30448:	bl	13b04 <g_dpgettext2@plt>
   3044c:	ldr	r1, [pc, #-3396]	; 2f710 <g_unichar_xdigit_value@plt+0x1b8ac>
   30450:	ldr	r2, [pc, #-3396]	; 2f714 <g_unichar_xdigit_value@plt+0x1b8b0>
   30454:	add	r1, pc, r1
   30458:	add	r2, pc, r2
   3045c:	mov	r4, r0
   30460:	mov	r0, #0
   30464:	bl	13b04 <g_dpgettext2@plt>
   30468:	ldr	ip, [pc, #-3416]	; 2f718 <g_unichar_xdigit_value@plt+0x1b8b4>
   3046c:	ldr	r3, [pc, #-3416]	; 2f71c <g_unichar_xdigit_value@plt+0x1b8b8>
   30470:	mov	r2, r4
   30474:	add	ip, pc, ip
   30478:	mov	r1, r5
   3047c:	add	r3, pc, r3
   30480:	str	ip, [sp]
   30484:	str	r0, [sp, #4]
   30488:	ldr	r0, [pc, #-3440]	; 2f720 <g_unichar_xdigit_value@plt+0x1b8bc>
   3048c:	add	r0, pc, r0
   30490:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   30494:	mov	r4, r0
   30498:	mov	r0, r6
   3049c:	mov	r1, r4
   304a0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   304a4:	cmp	r4, #0
   304a8:	beq	304b4 <g_unichar_xdigit_value@plt+0x1c650>
   304ac:	mov	r0, r4
   304b0:	bl	13b94 <g_object_unref@plt>
   304b4:	ldr	r0, [pc, #-3480]	; 2f724 <g_unichar_xdigit_value@plt+0x1b8c0>
   304b8:	ldr	r1, [pc, #-3480]	; 2f728 <g_unichar_xdigit_value@plt+0x1b8c4>
   304bc:	add	r0, pc, r0
   304c0:	add	r1, pc, r1
   304c4:	bl	13c9c <g_dgettext@plt>
   304c8:	ldr	r1, [pc, #-3492]	; 2f72c <g_unichar_xdigit_value@plt+0x1b8c8>
   304cc:	ldr	r2, [pc, #-3492]	; 2f730 <g_unichar_xdigit_value@plt+0x1b8cc>
   304d0:	add	r1, pc, r1
   304d4:	add	r2, pc, r2
   304d8:	mov	r5, r0
   304dc:	mov	r0, #0
   304e0:	bl	13b04 <g_dpgettext2@plt>
   304e4:	ldr	r1, [pc, #-3512]	; 2f734 <g_unichar_xdigit_value@plt+0x1b8d0>
   304e8:	ldr	r2, [pc, #-3512]	; 2f738 <g_unichar_xdigit_value@plt+0x1b8d4>
   304ec:	add	r1, pc, r1
   304f0:	add	r2, pc, r2
   304f4:	mov	r4, r0
   304f8:	mov	r0, #0
   304fc:	bl	13b04 <g_dpgettext2@plt>
   30500:	ldr	ip, [pc, #-3532]	; 2f73c <g_unichar_xdigit_value@plt+0x1b8d8>
   30504:	ldr	r3, [pc, #-3532]	; 2f740 <g_unichar_xdigit_value@plt+0x1b8dc>
   30508:	mov	r2, r4
   3050c:	add	ip, pc, ip
   30510:	mov	r1, r5
   30514:	add	r3, pc, r3
   30518:	str	ip, [sp]
   3051c:	str	r0, [sp, #4]
   30520:	ldr	r0, [pc, #-3556]	; 2f744 <g_unichar_xdigit_value@plt+0x1b8e0>
   30524:	add	r0, pc, r0
   30528:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   3052c:	mov	r4, r0
   30530:	mov	r0, r6
   30534:	mov	r1, r4
   30538:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   3053c:	cmp	r4, #0
   30540:	beq	3054c <g_unichar_xdigit_value@plt+0x1c6e8>
   30544:	mov	r0, r4
   30548:	bl	13b94 <g_object_unref@plt>
   3054c:	ldr	r0, [pc, #-3596]	; 2f748 <g_unichar_xdigit_value@plt+0x1b8e4>
   30550:	ldr	r1, [pc, #-3596]	; 2f74c <g_unichar_xdigit_value@plt+0x1b8e8>
   30554:	add	r0, pc, r0
   30558:	add	r1, pc, r1
   3055c:	bl	13c9c <g_dgettext@plt>
   30560:	ldr	r1, [pc, #-3608]	; 2f750 <g_unichar_xdigit_value@plt+0x1b8ec>
   30564:	ldr	r2, [pc, #-3608]	; 2f754 <g_unichar_xdigit_value@plt+0x1b8f0>
   30568:	add	r1, pc, r1
   3056c:	add	r2, pc, r2
   30570:	mov	r5, r0
   30574:	mov	r0, #0
   30578:	bl	13b04 <g_dpgettext2@plt>
   3057c:	ldr	r1, [pc, #-3628]	; 2f758 <g_unichar_xdigit_value@plt+0x1b8f4>
   30580:	ldr	r2, [pc, #-3628]	; 2f75c <g_unichar_xdigit_value@plt+0x1b8f8>
   30584:	add	r1, pc, r1
   30588:	add	r2, pc, r2
   3058c:	mov	r4, r0
   30590:	mov	r0, #0
   30594:	bl	13b04 <g_dpgettext2@plt>
   30598:	ldr	ip, [pc, #-3648]	; 2f760 <g_unichar_xdigit_value@plt+0x1b8fc>
   3059c:	ldr	r3, [pc, #-3648]	; 2f764 <g_unichar_xdigit_value@plt+0x1b900>
   305a0:	mov	r2, r4
   305a4:	add	ip, pc, ip
   305a8:	mov	r1, r5
   305ac:	add	r3, pc, r3
   305b0:	str	ip, [sp]
   305b4:	str	r0, [sp, #4]
   305b8:	ldr	r0, [pc, #-3672]	; 2f768 <g_unichar_xdigit_value@plt+0x1b904>
   305bc:	add	r0, pc, r0
   305c0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   305c4:	mov	r4, r0
   305c8:	mov	r0, r6
   305cc:	mov	r1, r4
   305d0:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   305d4:	cmp	r4, #0
   305d8:	beq	305e4 <g_unichar_xdigit_value@plt+0x1c780>
   305dc:	mov	r0, r4
   305e0:	bl	13b94 <g_object_unref@plt>
   305e4:	ldr	r0, [pc, #-3712]	; 2f76c <g_unichar_xdigit_value@plt+0x1b908>
   305e8:	ldr	r1, [pc, #-3712]	; 2f770 <g_unichar_xdigit_value@plt+0x1b90c>
   305ec:	add	r0, pc, r0
   305f0:	add	r1, pc, r1
   305f4:	bl	13c9c <g_dgettext@plt>
   305f8:	ldr	r1, [pc, #-3724]	; 2f774 <g_unichar_xdigit_value@plt+0x1b910>
   305fc:	ldr	r2, [pc, #-3724]	; 2f778 <g_unichar_xdigit_value@plt+0x1b914>
   30600:	add	r1, pc, r1
   30604:	add	r2, pc, r2
   30608:	mov	r5, r0
   3060c:	mov	r0, #0
   30610:	bl	13b04 <g_dpgettext2@plt>
   30614:	ldr	r1, [pc, #-3744]	; 2f77c <g_unichar_xdigit_value@plt+0x1b918>
   30618:	ldr	r2, [pc, #-3744]	; 2f780 <g_unichar_xdigit_value@plt+0x1b91c>
   3061c:	add	r1, pc, r1
   30620:	add	r2, pc, r2
   30624:	mov	r4, r0
   30628:	mov	r0, #0
   3062c:	bl	13b04 <g_dpgettext2@plt>
   30630:	ldr	ip, [pc, #-3764]	; 2f784 <g_unichar_xdigit_value@plt+0x1b920>
   30634:	ldr	r3, [pc, #-3764]	; 2f788 <g_unichar_xdigit_value@plt+0x1b924>
   30638:	mov	r2, r4
   3063c:	add	ip, pc, ip
   30640:	mov	r1, r5
   30644:	add	r3, pc, r3
   30648:	str	ip, [sp]
   3064c:	str	r0, [sp, #4]
   30650:	ldr	r0, [pc, #-3788]	; 2f78c <g_unichar_xdigit_value@plt+0x1b928>
   30654:	add	r0, pc, r0
   30658:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   3065c:	mov	r4, r0
   30660:	mov	r0, r6
   30664:	mov	r1, r4
   30668:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   3066c:	cmp	r4, #0
   30670:	beq	3067c <g_unichar_xdigit_value@plt+0x1c818>
   30674:	mov	r0, r4
   30678:	bl	13b94 <g_object_unref@plt>
   3067c:	ldr	r0, [pc, #-3828]	; 2f790 <g_unichar_xdigit_value@plt+0x1b92c>
   30680:	ldr	r1, [pc, #-3828]	; 2f794 <g_unichar_xdigit_value@plt+0x1b930>
   30684:	add	r0, pc, r0
   30688:	add	r1, pc, r1
   3068c:	bl	13c9c <g_dgettext@plt>
   30690:	ldr	r1, [pc, #-3840]	; 2f798 <g_unichar_xdigit_value@plt+0x1b934>
   30694:	ldr	r2, [pc, #-3840]	; 2f79c <g_unichar_xdigit_value@plt+0x1b938>
   30698:	add	r1, pc, r1
   3069c:	add	r2, pc, r2
   306a0:	mov	r5, r0
   306a4:	mov	r0, #0
   306a8:	bl	13b04 <g_dpgettext2@plt>
   306ac:	ldr	r1, [pc, #-3860]	; 2f7a0 <g_unichar_xdigit_value@plt+0x1b93c>
   306b0:	ldr	r2, [pc, #-3860]	; 2f7a4 <g_unichar_xdigit_value@plt+0x1b940>
   306b4:	add	r1, pc, r1
   306b8:	add	r2, pc, r2
   306bc:	mov	r4, r0
   306c0:	mov	r0, #0
   306c4:	bl	13b04 <g_dpgettext2@plt>
   306c8:	ldr	ip, [pc, #-3880]	; 2f7a8 <g_unichar_xdigit_value@plt+0x1b944>
   306cc:	ldr	r3, [pc, #-3880]	; 2f7ac <g_unichar_xdigit_value@plt+0x1b948>
   306d0:	mov	r2, r4
   306d4:	add	ip, pc, ip
   306d8:	mov	r1, r5
   306dc:	add	r3, pc, r3
   306e0:	str	ip, [sp]
   306e4:	str	r0, [sp, #4]
   306e8:	ldr	r0, [pc, #-3904]	; 2f7b0 <g_unichar_xdigit_value@plt+0x1b94c>
   306ec:	add	r0, pc, r0
   306f0:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   306f4:	mov	r4, r0
   306f8:	mov	r0, r6
   306fc:	mov	r1, r4
   30700:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   30704:	cmp	r4, #0
   30708:	beq	30714 <g_unichar_xdigit_value@plt+0x1c8b0>
   3070c:	mov	r0, r4
   30710:	bl	13b94 <g_object_unref@plt>
   30714:	ldr	r0, [pc, #-3944]	; 2f7b4 <g_unichar_xdigit_value@plt+0x1b950>
   30718:	ldr	r1, [pc, #-3944]	; 2f7b8 <g_unichar_xdigit_value@plt+0x1b954>
   3071c:	add	r0, pc, r0
   30720:	add	r1, pc, r1
   30724:	bl	13c9c <g_dgettext@plt>
   30728:	ldr	r1, [pc, #-3956]	; 2f7bc <g_unichar_xdigit_value@plt+0x1b958>
   3072c:	ldr	r2, [pc, #-3956]	; 2f7c0 <g_unichar_xdigit_value@plt+0x1b95c>
   30730:	add	r1, pc, r1
   30734:	add	r2, pc, r2
   30738:	mov	r5, r0
   3073c:	mov	r0, #0
   30740:	bl	13b04 <g_dpgettext2@plt>
   30744:	ldr	r1, [pc, #-3976]	; 2f7c4 <g_unichar_xdigit_value@plt+0x1b960>
   30748:	ldr	r2, [pc, #-3976]	; 2f7c8 <g_unichar_xdigit_value@plt+0x1b964>
   3074c:	add	r1, pc, r1
   30750:	add	r2, pc, r2
   30754:	mov	r4, r0
   30758:	mov	r0, #0
   3075c:	bl	13b04 <g_dpgettext2@plt>
   30760:	ldr	ip, [pc, #-3996]	; 2f7cc <g_unichar_xdigit_value@plt+0x1b968>
   30764:	ldr	r3, [pc, #-3996]	; 2f7d0 <g_unichar_xdigit_value@plt+0x1b96c>
   30768:	mov	r2, r4
   3076c:	add	ip, pc, ip
   30770:	mov	r1, r5
   30774:	add	r3, pc, r3
   30778:	str	ip, [sp]
   3077c:	str	r0, [sp, #4]
   30780:	ldr	r0, [pc, #-4020]	; 2f7d4 <g_unichar_xdigit_value@plt+0x1b970>
   30784:	add	r0, pc, r0
   30788:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   3078c:	mov	r4, r0
   30790:	mov	r0, r6
   30794:	mov	r1, r4
   30798:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   3079c:	cmp	r4, #0
   307a0:	beq	307ac <g_unichar_xdigit_value@plt+0x1c948>
   307a4:	mov	r0, r4
   307a8:	bl	13b94 <g_object_unref@plt>
   307ac:	ldr	r0, [pc, #-4060]	; 2f7d8 <g_unichar_xdigit_value@plt+0x1b974>
   307b0:	ldr	r1, [pc, #-4060]	; 2f7dc <g_unichar_xdigit_value@plt+0x1b978>
   307b4:	add	r0, pc, r0
   307b8:	add	r1, pc, r1
   307bc:	bl	13c9c <g_dgettext@plt>
   307c0:	ldr	r1, [pc, #-4072]	; 2f7e0 <g_unichar_xdigit_value@plt+0x1b97c>
   307c4:	ldr	r2, [pc, #-4072]	; 2f7e4 <g_unichar_xdigit_value@plt+0x1b980>
   307c8:	add	r1, pc, r1
   307cc:	add	r2, pc, r2
   307d0:	mov	r5, r0
   307d4:	mov	r0, #0
   307d8:	bl	13b04 <g_dpgettext2@plt>
   307dc:	ldr	r1, [pc, #-4092]	; 2f7e8 <g_unichar_xdigit_value@plt+0x1b984>
   307e0:	ldr	r2, [pc, #-4092]	; 2f7ec <g_unichar_xdigit_value@plt+0x1b988>
   307e4:	add	r1, pc, r1
   307e8:	add	r2, pc, r2
   307ec:	mov	r4, r0
   307f0:	mov	r0, #0
   307f4:	bl	13b04 <g_dpgettext2@plt>
   307f8:	ldr	ip, [pc, #1432]	; 30d98 <g_unichar_xdigit_value@plt+0x1cf34>
   307fc:	ldr	r3, [pc, #1432]	; 30d9c <g_unichar_xdigit_value@plt+0x1cf38>
   30800:	mov	r2, r4
   30804:	add	ip, pc, ip
   30808:	mov	r1, r5
   3080c:	add	r3, pc, r3
   30810:	str	ip, [sp]
   30814:	str	r0, [sp, #4]
   30818:	ldr	r0, [pc, #1408]	; 30da0 <g_unichar_xdigit_value@plt+0x1cf3c>
   3081c:	add	r0, pc, r0
   30820:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   30824:	mov	r4, r0
   30828:	mov	r0, r6
   3082c:	mov	r1, r4
   30830:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   30834:	cmp	r4, #0
   30838:	beq	30844 <g_unichar_xdigit_value@plt+0x1c9e0>
   3083c:	mov	r0, r4
   30840:	bl	13b94 <g_object_unref@plt>
   30844:	ldr	r0, [pc, #1368]	; 30da4 <g_unichar_xdigit_value@plt+0x1cf40>
   30848:	ldr	r1, [pc, #1368]	; 30da8 <g_unichar_xdigit_value@plt+0x1cf44>
   3084c:	add	r0, pc, r0
   30850:	add	r1, pc, r1
   30854:	bl	13c9c <g_dgettext@plt>
   30858:	ldr	r1, [pc, #1356]	; 30dac <g_unichar_xdigit_value@plt+0x1cf48>
   3085c:	ldr	r2, [pc, #1356]	; 30db0 <g_unichar_xdigit_value@plt+0x1cf4c>
   30860:	add	r1, pc, r1
   30864:	add	r2, pc, r2
   30868:	mov	r5, r0
   3086c:	mov	r0, #0
   30870:	bl	13b04 <g_dpgettext2@plt>
   30874:	ldr	r1, [pc, #1336]	; 30db4 <g_unichar_xdigit_value@plt+0x1cf50>
   30878:	ldr	r2, [pc, #1336]	; 30db8 <g_unichar_xdigit_value@plt+0x1cf54>
   3087c:	add	r1, pc, r1
   30880:	add	r2, pc, r2
   30884:	mov	r4, r0
   30888:	mov	r0, #0
   3088c:	bl	13b04 <g_dpgettext2@plt>
   30890:	ldr	ip, [pc, #1316]	; 30dbc <g_unichar_xdigit_value@plt+0x1cf58>
   30894:	ldr	r3, [pc, #1316]	; 30dc0 <g_unichar_xdigit_value@plt+0x1cf5c>
   30898:	mov	r2, r4
   3089c:	add	ip, pc, ip
   308a0:	mov	r1, r5
   308a4:	add	r3, pc, r3
   308a8:	str	ip, [sp]
   308ac:	str	r0, [sp, #4]
   308b0:	ldr	r0, [pc, #1292]	; 30dc4 <g_unichar_xdigit_value@plt+0x1cf60>
   308b4:	add	r0, pc, r0
   308b8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   308bc:	mov	r4, r0
   308c0:	mov	r0, r6
   308c4:	mov	r1, r4
   308c8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   308cc:	cmp	r4, #0
   308d0:	beq	308dc <g_unichar_xdigit_value@plt+0x1ca78>
   308d4:	mov	r0, r4
   308d8:	bl	13b94 <g_object_unref@plt>
   308dc:	ldr	r0, [pc, #1252]	; 30dc8 <g_unichar_xdigit_value@plt+0x1cf64>
   308e0:	ldr	r1, [pc, #1252]	; 30dcc <g_unichar_xdigit_value@plt+0x1cf68>
   308e4:	add	r0, pc, r0
   308e8:	add	r1, pc, r1
   308ec:	bl	13c9c <g_dgettext@plt>
   308f0:	ldr	r1, [pc, #1240]	; 30dd0 <g_unichar_xdigit_value@plt+0x1cf6c>
   308f4:	ldr	r2, [pc, #1240]	; 30dd4 <g_unichar_xdigit_value@plt+0x1cf70>
   308f8:	add	r1, pc, r1
   308fc:	add	r2, pc, r2
   30900:	mov	r5, r0
   30904:	mov	r0, #0
   30908:	bl	13b04 <g_dpgettext2@plt>
   3090c:	ldr	r1, [pc, #1220]	; 30dd8 <g_unichar_xdigit_value@plt+0x1cf74>
   30910:	ldr	r2, [pc, #1220]	; 30ddc <g_unichar_xdigit_value@plt+0x1cf78>
   30914:	add	r1, pc, r1
   30918:	add	r2, pc, r2
   3091c:	mov	r4, r0
   30920:	mov	r0, #0
   30924:	bl	13b04 <g_dpgettext2@plt>
   30928:	ldr	ip, [pc, #1200]	; 30de0 <g_unichar_xdigit_value@plt+0x1cf7c>
   3092c:	ldr	r3, [pc, #1200]	; 30de4 <g_unichar_xdigit_value@plt+0x1cf80>
   30930:	mov	r2, r4
   30934:	add	ip, pc, ip
   30938:	mov	r1, r5
   3093c:	add	r3, pc, r3
   30940:	str	ip, [sp]
   30944:	str	r0, [sp, #4]
   30948:	ldr	r0, [pc, #1176]	; 30de8 <g_unichar_xdigit_value@plt+0x1cf84>
   3094c:	add	r0, pc, r0
   30950:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   30954:	mov	r4, r0
   30958:	mov	r0, r6
   3095c:	mov	r1, r4
   30960:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   30964:	cmp	r4, #0
   30968:	beq	30974 <g_unichar_xdigit_value@plt+0x1cb10>
   3096c:	mov	r0, r4
   30970:	bl	13b94 <g_object_unref@plt>
   30974:	ldr	r0, [pc, #1136]	; 30dec <g_unichar_xdigit_value@plt+0x1cf88>
   30978:	ldr	r1, [pc, #1136]	; 30df0 <g_unichar_xdigit_value@plt+0x1cf8c>
   3097c:	add	r0, pc, r0
   30980:	add	r1, pc, r1
   30984:	bl	13c9c <g_dgettext@plt>
   30988:	ldr	r1, [pc, #1124]	; 30df4 <g_unichar_xdigit_value@plt+0x1cf90>
   3098c:	ldr	r2, [pc, #1124]	; 30df8 <g_unichar_xdigit_value@plt+0x1cf94>
   30990:	add	r1, pc, r1
   30994:	add	r2, pc, r2
   30998:	mov	r5, r0
   3099c:	mov	r0, #0
   309a0:	bl	13b04 <g_dpgettext2@plt>
   309a4:	ldr	r1, [pc, #1104]	; 30dfc <g_unichar_xdigit_value@plt+0x1cf98>
   309a8:	ldr	r2, [pc, #1104]	; 30e00 <g_unichar_xdigit_value@plt+0x1cf9c>
   309ac:	add	r1, pc, r1
   309b0:	add	r2, pc, r2
   309b4:	mov	r4, r0
   309b8:	mov	r0, #0
   309bc:	bl	13b04 <g_dpgettext2@plt>
   309c0:	ldr	ip, [pc, #1084]	; 30e04 <g_unichar_xdigit_value@plt+0x1cfa0>
   309c4:	ldr	r3, [pc, #1084]	; 30e08 <g_unichar_xdigit_value@plt+0x1cfa4>
   309c8:	mov	r2, r4
   309cc:	add	ip, pc, ip
   309d0:	mov	r1, r5
   309d4:	add	r3, pc, r3
   309d8:	str	ip, [sp]
   309dc:	str	r0, [sp, #4]
   309e0:	ldr	r0, [pc, #1060]	; 30e0c <g_unichar_xdigit_value@plt+0x1cfa8>
   309e4:	add	r0, pc, r0
   309e8:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   309ec:	mov	r4, r0
   309f0:	mov	r0, r6
   309f4:	mov	r1, r4
   309f8:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   309fc:	cmp	r4, #0
   30a00:	beq	30a0c <g_unichar_xdigit_value@plt+0x1cba8>
   30a04:	mov	r0, r4
   30a08:	bl	13b94 <g_object_unref@plt>
   30a0c:	ldr	r0, [pc, #1020]	; 30e10 <g_unichar_xdigit_value@plt+0x1cfac>
   30a10:	ldr	r1, [pc, #1020]	; 30e14 <g_unichar_xdigit_value@plt+0x1cfb0>
   30a14:	add	r0, pc, r0
   30a18:	add	r1, pc, r1
   30a1c:	bl	13c9c <g_dgettext@plt>
   30a20:	ldr	r1, [pc, #1008]	; 30e18 <g_unichar_xdigit_value@plt+0x1cfb4>
   30a24:	ldr	r2, [pc, #1008]	; 30e1c <g_unichar_xdigit_value@plt+0x1cfb8>
   30a28:	add	r1, pc, r1
   30a2c:	add	r2, pc, r2
   30a30:	mov	r5, r0
   30a34:	mov	r0, #0
   30a38:	bl	13b04 <g_dpgettext2@plt>
   30a3c:	ldr	r1, [pc, #988]	; 30e20 <g_unichar_xdigit_value@plt+0x1cfbc>
   30a40:	ldr	r2, [pc, #988]	; 30e24 <g_unichar_xdigit_value@plt+0x1cfc0>
   30a44:	add	r1, pc, r1
   30a48:	add	r2, pc, r2
   30a4c:	mov	r4, r0
   30a50:	mov	r0, #0
   30a54:	bl	13b04 <g_dpgettext2@plt>
   30a58:	ldr	ip, [pc, #968]	; 30e28 <g_unichar_xdigit_value@plt+0x1cfc4>
   30a5c:	ldr	r3, [pc, #968]	; 30e2c <g_unichar_xdigit_value@plt+0x1cfc8>
   30a60:	mov	r2, r4
   30a64:	add	ip, pc, ip
   30a68:	mov	r1, r5
   30a6c:	add	r3, pc, r3
   30a70:	str	ip, [sp]
   30a74:	str	r0, [sp, #4]
   30a78:	ldr	r0, [pc, #944]	; 30e30 <g_unichar_xdigit_value@plt+0x1cfcc>
   30a7c:	add	r0, pc, r0
   30a80:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   30a84:	mov	r4, r0
   30a88:	mov	r0, r6
   30a8c:	mov	r1, r4
   30a90:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   30a94:	cmp	r4, #0
   30a98:	beq	30aa4 <g_unichar_xdigit_value@plt+0x1cc40>
   30a9c:	mov	r0, r4
   30aa0:	bl	13b94 <g_object_unref@plt>
   30aa4:	ldr	r0, [pc, #904]	; 30e34 <g_unichar_xdigit_value@plt+0x1cfd0>
   30aa8:	ldr	r1, [pc, #904]	; 30e38 <g_unichar_xdigit_value@plt+0x1cfd4>
   30aac:	add	r0, pc, r0
   30ab0:	add	r1, pc, r1
   30ab4:	bl	13c9c <g_dgettext@plt>
   30ab8:	ldr	r1, [pc, #892]	; 30e3c <g_unichar_xdigit_value@plt+0x1cfd8>
   30abc:	ldr	r2, [pc, #892]	; 30e40 <g_unichar_xdigit_value@plt+0x1cfdc>
   30ac0:	add	r1, pc, r1
   30ac4:	add	r2, pc, r2
   30ac8:	mov	r5, r0
   30acc:	mov	r0, #0
   30ad0:	bl	13b04 <g_dpgettext2@plt>
   30ad4:	ldr	r1, [pc, #872]	; 30e44 <g_unichar_xdigit_value@plt+0x1cfe0>
   30ad8:	ldr	r2, [pc, #872]	; 30e48 <g_unichar_xdigit_value@plt+0x1cfe4>
   30adc:	add	r1, pc, r1
   30ae0:	add	r2, pc, r2
   30ae4:	mov	r4, r0
   30ae8:	mov	r0, #0
   30aec:	bl	13b04 <g_dpgettext2@plt>
   30af0:	ldr	ip, [pc, #852]	; 30e4c <g_unichar_xdigit_value@plt+0x1cfe8>
   30af4:	ldr	r3, [pc, #852]	; 30e50 <g_unichar_xdigit_value@plt+0x1cfec>
   30af8:	mov	r2, r4
   30afc:	add	ip, pc, ip
   30b00:	mov	r1, r5
   30b04:	add	r3, pc, r3
   30b08:	str	ip, [sp]
   30b0c:	str	r0, [sp, #4]
   30b10:	ldr	r0, [pc, #828]	; 30e54 <g_unichar_xdigit_value@plt+0x1cff0>
   30b14:	add	r0, pc, r0
   30b18:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   30b1c:	mov	r4, r0
   30b20:	mov	r0, r6
   30b24:	mov	r1, r4
   30b28:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   30b2c:	cmp	r4, #0
   30b30:	beq	30b3c <g_unichar_xdigit_value@plt+0x1ccd8>
   30b34:	mov	r0, r4
   30b38:	bl	13b94 <g_object_unref@plt>
   30b3c:	ldr	r3, [sp, #8]
   30b40:	ldr	r0, [pc, #784]	; 30e58 <g_unichar_xdigit_value@plt+0x1cff4>
   30b44:	ldr	r1, [pc, #784]	; 30e5c <g_unichar_xdigit_value@plt+0x1cff8>
   30b48:	add	r0, pc, r0
   30b4c:	ldr	r4, [r3]
   30b50:	add	r1, pc, r1
   30b54:	bl	13c9c <g_dgettext@plt>
   30b58:	ldr	r1, [pc, #768]	; 30e60 <g_unichar_xdigit_value@plt+0x1cffc>
   30b5c:	add	r1, pc, r1
   30b60:	mov	r2, r0
   30b64:	mov	r0, r4
   30b68:	bl	2bc90 <g_unichar_xdigit_value@plt+0x17e2c>
   30b6c:	str	r0, [sp, #16]
   30b70:	bl	34420 <g_unichar_xdigit_value@plt+0x205bc>
   30b74:	mov	r4, r0
   30b78:	bl	31d28 <g_unichar_xdigit_value@plt+0x1dec4>
   30b7c:	cmp	r4, #0
   30b80:	mov	r5, r0
   30b84:	beq	30b90 <g_unichar_xdigit_value@plt+0x1cd2c>
   30b88:	mov	r0, r4
   30b8c:	bl	13b94 <g_object_unref@plt>
   30b90:	ldr	r1, [pc, #716]	; 30e64 <g_unichar_xdigit_value@plt+0x1d000>
   30b94:	mov	r0, r5
   30b98:	add	r1, pc, r1
   30b9c:	bl	13d98 <g_list_sort@plt>
   30ba0:	cmp	r0, #0
   30ba4:	str	r0, [sp, #48]	; 0x30
   30ba8:	beq	30ca8 <g_unichar_xdigit_value@plt+0x1ce44>
   30bac:	ldr	ip, [pc, #692]	; 30e68 <g_unichar_xdigit_value@plt+0x1d004>
   30bb0:	ldr	r5, [sp, #48]	; 0x30
   30bb4:	add	ip, pc, ip
   30bb8:	ldr	r3, [pc, #684]	; 30e6c <g_unichar_xdigit_value@plt+0x1d008>
   30bbc:	str	r6, [sp, #52]	; 0x34
   30bc0:	mov	fp, ip
   30bc4:	add	r3, pc, r3
   30bc8:	str	r3, [sp, #20]
   30bcc:	ldr	r4, [r5]
   30bd0:	cmp	r4, #0
   30bd4:	mov	r0, r4
   30bd8:	beq	30be4 <g_unichar_xdigit_value@plt+0x1cd80>
   30bdc:	bl	133f0 <g_object_ref@plt>
   30be0:	mov	r4, r0
   30be4:	mov	r0, r4
   30be8:	bl	32390 <g_unichar_xdigit_value@plt+0x1e52c>
   30bec:	mov	r1, fp
   30bf0:	mov	r7, r0
   30bf4:	ldr	r0, [sp, #20]
   30bf8:	bl	13c9c <g_dgettext@plt>
   30bfc:	mov	r1, r7
   30c00:	bl	13774 <g_strdup_printf@plt>
   30c04:	mov	r6, r0
   30c08:	mov	r0, r7
   30c0c:	bl	1399c <g_free@plt>
   30c10:	mov	r0, r4
   30c14:	bl	321a4 <g_unichar_xdigit_value@plt+0x1e340>
   30c18:	mov	r7, r0
   30c1c:	mov	r0, r4
   30c20:	bl	3234c <g_unichar_xdigit_value@plt+0x1e4e8>
   30c24:	mov	r8, r0
   30c28:	mov	r0, r4
   30c2c:	bl	321a4 <g_unichar_xdigit_value@plt+0x1e340>
   30c30:	mov	r3, #0
   30c34:	mov	r1, r8
   30c38:	str	r3, [sp]
   30c3c:	mov	r2, r6
   30c40:	mov	sl, r0
   30c44:	mov	r0, r7
   30c48:	str	sl, [sp, #4]
   30c4c:	bl	2cc44 <g_unichar_xdigit_value@plt+0x18de0>
   30c50:	mov	r9, r0
   30c54:	mov	r0, sl
   30c58:	bl	1399c <g_free@plt>
   30c5c:	mov	r0, r8
   30c60:	bl	1399c <g_free@plt>
   30c64:	mov	r0, r7
   30c68:	bl	1399c <g_free@plt>
   30c6c:	ldr	r0, [sp, #16]
   30c70:	mov	r1, r9
   30c74:	bl	2b99c <g_unichar_xdigit_value@plt+0x17b38>
   30c78:	subs	r0, r9, #0
   30c7c:	beq	30c84 <g_unichar_xdigit_value@plt+0x1ce20>
   30c80:	bl	13b94 <g_object_unref@plt>
   30c84:	mov	r0, r6
   30c88:	bl	1399c <g_free@plt>
   30c8c:	subs	r0, r4, #0
   30c90:	beq	30c98 <g_unichar_xdigit_value@plt+0x1ce34>
   30c94:	bl	13b94 <g_object_unref@plt>
   30c98:	ldr	r5, [r5, #4]
   30c9c:	cmp	r5, #0
   30ca0:	bne	30bcc <g_unichar_xdigit_value@plt+0x1cd68>
   30ca4:	ldr	r6, [sp, #52]	; 0x34
   30ca8:	ldr	r3, [sp, #8]
   30cac:	ldr	r0, [r3]
   30cb0:	cmp	r0, #0
   30cb4:	beq	30cbc <g_unichar_xdigit_value@plt+0x1ce58>
   30cb8:	bl	133f0 <g_object_ref@plt>
   30cbc:	ldr	r3, [sp, #48]	; 0x30
   30cc0:	mov	r4, r0
   30cc4:	cmp	r3, #0
   30cc8:	beq	30cdc <g_unichar_xdigit_value@plt+0x1ce78>
   30ccc:	ldr	r1, [pc, #412]	; 30e70 <g_unichar_xdigit_value@plt+0x1d00c>
   30cd0:	mov	r0, r3
   30cd4:	add	r1, pc, r1
   30cd8:	bl	1396c <g_list_free_full@plt>
   30cdc:	ldr	r3, [sp, #16]
   30ce0:	cmp	r3, #0
   30ce4:	beq	30cf0 <g_unichar_xdigit_value@plt+0x1ce8c>
   30ce8:	mov	r0, r3
   30cec:	bl	13b94 <g_object_unref@plt>
   30cf0:	cmp	r6, #0
   30cf4:	beq	30d00 <g_unichar_xdigit_value@plt+0x1ce9c>
   30cf8:	mov	r0, r6
   30cfc:	bl	13b94 <g_object_unref@plt>
   30d00:	ldr	r3, [sp, #40]	; 0x28
   30d04:	cmp	r3, #0
   30d08:	beq	30d14 <g_unichar_xdigit_value@plt+0x1ceb0>
   30d0c:	mov	r0, r3
   30d10:	bl	13b94 <g_object_unref@plt>
   30d14:	ldr	r3, [sp, #28]
   30d18:	cmp	r3, #0
   30d1c:	beq	30d28 <g_unichar_xdigit_value@plt+0x1cec4>
   30d20:	mov	r0, r3
   30d24:	bl	13b94 <g_object_unref@plt>
   30d28:	ldr	r3, [sp, #32]
   30d2c:	cmp	r3, #0
   30d30:	beq	30d3c <g_unichar_xdigit_value@plt+0x1ced8>
   30d34:	mov	r0, r3
   30d38:	bl	13b94 <g_object_unref@plt>
   30d3c:	ldr	r3, [sp, #24]
   30d40:	cmp	r3, #0
   30d44:	beq	30d50 <g_unichar_xdigit_value@plt+0x1ceec>
   30d48:	mov	r0, r3
   30d4c:	bl	13b94 <g_object_unref@plt>
   30d50:	ldr	r3, [sp, #36]	; 0x24
   30d54:	cmp	r3, #0
   30d58:	beq	30d64 <g_unichar_xdigit_value@plt+0x1cf00>
   30d5c:	mov	r0, r3
   30d60:	bl	13b94 <g_object_unref@plt>
   30d64:	ldr	r3, [sp, #12]
   30d68:	cmp	r3, #0
   30d6c:	beq	30d78 <g_unichar_xdigit_value@plt+0x1cf14>
   30d70:	mov	r0, r3
   30d74:	bl	13b94 <g_object_unref@plt>
   30d78:	ldr	r3, [sp, #44]	; 0x2c
   30d7c:	cmp	r3, #0
   30d80:	beq	30d8c <g_unichar_xdigit_value@plt+0x1cf28>
   30d84:	mov	r0, r3
   30d88:	bl	13b94 <g_object_unref@plt>
   30d8c:	mov	r0, r4
   30d90:	add	sp, sp, #60	; 0x3c
   30d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30d98:	andeq	ip, r0, ip, lsl #10
   30d9c:	andeq	ip, r0, r8, ror #9
   30da0:	ldrdeq	ip, [r0], -r0
   30da4:	ldrdeq	r8, [r0], -ip
   30da8:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   30dac:	andeq	sl, r0, ip, lsr #29
   30db0:	ldrdeq	ip, [r0], -r4
   30db4:	andeq	sl, r0, r8, lsr #29
   30db8:	andeq	ip, r0, r0, asr #9
   30dbc:	andeq	ip, r0, r0, ror #9
   30dc0:	andeq	ip, r0, r0, asr #9
   30dc4:	andeq	ip, r0, r4, lsr #9
   30dc8:	andeq	r8, r0, r4, asr #22
   30dcc:			; <UNDEFINED> instruction: 0x0000c4b0
   30dd0:	andeq	sl, r0, r4, lsl lr
   30dd4:	andeq	ip, r0, r8, lsr #9
   30dd8:	andeq	sl, r0, r0, lsl lr
   30ddc:	muleq	r0, r4, r4
   30de0:			; <UNDEFINED> instruction: 0x0000c4bc
   30de4:	muleq	r0, r4, r4
   30de8:	andeq	ip, r0, r8, ror r4
   30dec:	andeq	r8, r0, ip, lsr #21
   30df0:	muleq	r0, r0, r4
   30df4:	andeq	sl, r0, ip, ror sp
   30df8:	andeq	ip, r0, r8, lsl #9
   30dfc:	andeq	sl, r0, r8, ror sp
   30e00:	andeq	ip, r0, r4, ror r4
   30e04:	muleq	r0, r8, r4
   30e08:	andeq	ip, r0, r4, ror r4
   30e0c:	andeq	ip, r0, r8, asr r4
   30e10:	andeq	r8, r0, r4, lsl sl
   30e14:	andeq	ip, r0, r8, ror #8
   30e18:	andeq	sl, r0, r4, ror #25
   30e1c:	andeq	ip, r0, r0, ror #8
   30e20:	andeq	sl, r0, r0, ror #25
   30e24:	andeq	ip, r0, ip, asr #8
   30e28:	andeq	ip, r0, r0, ror r4
   30e2c:	andeq	ip, r0, r8, asr #8
   30e30:	andeq	ip, r0, r0, lsr r4
   30e34:	andeq	r8, r0, ip, ror r9
   30e38:	andeq	ip, r0, r4, asr #8
   30e3c:	andeq	sl, r0, ip, asr #24
   30e40:	andeq	ip, r0, ip, lsr r4
   30e44:	andeq	sl, r0, r8, asr #24
   30e48:	andeq	ip, r0, r8, lsr #8
   30e4c:	andeq	ip, r0, ip, asr #8
   30e50:	andeq	ip, r0, r8, lsr #8
   30e54:	andeq	ip, r0, ip, lsl #8
   30e58:	andeq	r8, r0, r0, ror #17
   30e5c:	andeq	ip, r0, r4, lsl r4
   30e60:	andeq	ip, r0, r4, lsl r4
   30e64:			; <UNDEFINED> instruction: 0xffffa70c
   30e68:	andeq	ip, r0, r8, asr #7
   30e6c:	andeq	r8, r0, r4, ror #16
   30e70:			; <UNDEFINED> instruction: 0xffffa5c0
   30e74:	push	{r4, lr}
   30e78:	mov	r4, r0
   30e7c:	bl	2cbc0 <g_unichar_xdigit_value@plt+0x18d5c>
   30e80:	mov	r1, r0
   30e84:	mov	r0, r4
   30e88:	bl	13870 <g_type_instance_get_private@plt>
   30e8c:	str	r0, [r4, #12]
   30e90:	pop	{r4, pc}
   30e94:	push	{r4, r5, r6, lr}
   30e98:	mov	r6, r0
   30e9c:	bl	2cbc0 <g_unichar_xdigit_value@plt+0x18d5c>
   30ea0:	mov	r5, #0
   30ea4:	mov	r1, r0
   30ea8:	mov	r0, r6
   30eac:	bl	13510 <g_type_check_instance_cast@plt>
   30eb0:	ldr	r3, [r0, #12]
   30eb4:	mov	r4, r0
   30eb8:	ldr	r0, [r3]
   30ebc:	bl	1399c <g_free@plt>
   30ec0:	ldr	r3, [r4, #12]
   30ec4:	ldr	r0, [r3, #4]
   30ec8:	str	r5, [r3]
   30ecc:	bl	1399c <g_free@plt>
   30ed0:	ldr	r3, [r4, #12]
   30ed4:	ldr	r0, [r3, #8]
   30ed8:	str	r5, [r3, #4]
   30edc:	bl	1399c <g_free@plt>
   30ee0:	ldr	r3, [r4, #12]
   30ee4:	ldr	r0, [r3, #12]
   30ee8:	str	r5, [r3, #8]
   30eec:	cmp	r0, r5
   30ef0:	beq	30f08 <g_unichar_xdigit_value@plt+0x1d0a4>
   30ef4:	ldr	r1, [pc, #108]	; 30f68 <g_unichar_xdigit_value@plt+0x1d104>
   30ef8:	add	r1, pc, r1
   30efc:	bl	1396c <g_list_free_full@plt>
   30f00:	ldr	r3, [r4, #12]
   30f04:	str	r5, [r3, #12]
   30f08:	ldr	r0, [r3, #16]
   30f0c:	mov	r5, #0
   30f10:	bl	1399c <g_free@plt>
   30f14:	ldr	r3, [r4, #12]
   30f18:	ldr	r0, [r3, #20]
   30f1c:	str	r5, [r3, #16]
   30f20:	bl	1399c <g_free@plt>
   30f24:	ldr	r3, [r4, #12]
   30f28:	ldr	r0, [r3, #24]
   30f2c:	str	r5, [r3, #20]
   30f30:	cmp	r0, r5
   30f34:	beq	30f44 <g_unichar_xdigit_value@plt+0x1d0e0>
   30f38:	bl	13b94 <g_object_unref@plt>
   30f3c:	ldr	r3, [r4, #12]
   30f40:	str	r5, [r3, #24]
   30f44:	ldr	r3, [pc, #32]	; 30f6c <g_unichar_xdigit_value@plt+0x1d108>
   30f48:	mov	r1, #80	; 0x50
   30f4c:	add	r3, pc, r3
   30f50:	ldr	r0, [r3, #24]
   30f54:	bl	13db0 <g_type_check_class_cast@plt>
   30f58:	ldr	r3, [r0, #24]
   30f5c:	mov	r0, r6
   30f60:	blx	r3
   30f64:	pop	{r4, r5, r6, pc}
   30f68:			; <UNDEFINED> instruction: 0xffffa3a8
   30f6c:	andeq	r0, r2, r4, asr r6
   30f70:	push	{r4, r5, r6, r7, lr}
   30f74:	sub	sp, sp, #28
   30f78:	mov	r4, r1
   30f7c:	mov	r5, r0
   30f80:	mov	r6, r2
   30f84:	mov	r7, r3
   30f88:	bl	2cbc0 <g_unichar_xdigit_value@plt+0x18d5c>
   30f8c:	mov	r1, r0
   30f90:	mov	r0, r5
   30f94:	bl	13510 <g_type_check_instance_cast@plt>
   30f98:	cmp	r4, #1
   30f9c:	beq	31020 <g_unichar_xdigit_value@plt+0x1d1bc>
   30fa0:	cmp	r4, #2
   30fa4:	bne	30fc0 <g_unichar_xdigit_value@plt+0x1d15c>
   30fa8:	bl	2cb7c <g_unichar_xdigit_value@plt+0x18d18>
   30fac:	mov	r1, r0
   30fb0:	mov	r0, r6
   30fb4:	add	sp, sp, #28
   30fb8:	pop	{r4, r5, r6, r7, lr}
   30fbc:	b	13444 <g_value_take_string@plt>
   30fc0:	ldm	r7, {r3, r7}
   30fc4:	ldr	r0, [r3]
   30fc8:	bl	13564 <g_type_name@plt>
   30fcc:	ldr	r3, [r5]
   30fd0:	mov	r6, r0
   30fd4:	ldr	r0, [r3]
   30fd8:	bl	13564 <g_type_name@plt>
   30fdc:	ldr	r2, [pc, #68]	; 31028 <g_unichar_xdigit_value@plt+0x1d1c4>
   30fe0:	movw	r3, #2628	; 0xa44
   30fe4:	str	r3, [sp]
   30fe8:	add	r2, pc, r2
   30fec:	ldr	r3, [pc, #56]	; 3102c <g_unichar_xdigit_value@plt+0x1d1c8>
   30ff0:	stmib	sp, {r2, r4}
   30ff4:	mov	r1, #16
   30ff8:	ldr	r2, [pc, #48]	; 31030 <g_unichar_xdigit_value@plt+0x1d1cc>
   30ffc:	add	r3, pc, r3
   31000:	str	r7, [sp, #12]
   31004:	str	r6, [sp, #16]
   31008:	add	r2, pc, r2
   3100c:	str	r0, [sp, #20]
   31010:	mov	r0, #0
   31014:	bl	13558 <g_log@plt>
   31018:	add	sp, sp, #28
   3101c:	pop	{r4, r5, r6, r7, pc}
   31020:	bl	2c7c8 <g_unichar_xdigit_value@plt+0x18964>
   31024:	b	30fac <g_unichar_xdigit_value@plt+0x1d148>
   31028:	andeq	r9, r0, r4, lsr #3
   3102c:	andeq	sl, r0, r8, lsl r6
   31030:	andeq	r9, r0, r8, lsr #2
   31034:	push	{r3, r4, r5, lr}
   31038:	subs	r4, r1, #0
   3103c:	mov	r5, r2
   31040:	beq	3108c <g_unichar_xdigit_value@plt+0x1d228>
   31044:	cmp	r2, #0
   31048:	beq	310b0 <g_unichar_xdigit_value@plt+0x1d24c>
   3104c:	bl	14d98 <g_unichar_xdigit_value@plt+0xf34>
   31050:	mov	r4, r0
   31054:	mov	r0, r5
   31058:	bl	133f0 <g_object_ref@plt>
   3105c:	ldr	r3, [r4, #28]
   31060:	mov	r5, r0
   31064:	ldr	r0, [r3]
   31068:	cmp	r0, #0
   3106c:	beq	31080 <g_unichar_xdigit_value@plt+0x1d21c>
   31070:	bl	13b94 <g_object_unref@plt>
   31074:	ldr	r3, [r4, #28]
   31078:	mov	r2, #0
   3107c:	str	r2, [r3]
   31080:	str	r5, [r3]
   31084:	mov	r0, r4
   31088:	pop	{r3, r4, r5, pc}
   3108c:	ldr	r1, [pc, #64]	; 310d4 <g_unichar_xdigit_value@plt+0x1d270>
   31090:	mov	r0, r4
   31094:	ldr	r2, [pc, #60]	; 310d8 <g_unichar_xdigit_value@plt+0x1d274>
   31098:	add	r1, pc, r1
   3109c:	add	r2, pc, r2
   310a0:	add	r1, r1, #584	; 0x248
   310a4:	bl	13450 <g_return_if_fail_warning@plt>
   310a8:	mov	r0, r4
   310ac:	pop	{r3, r4, r5, pc}
   310b0:	ldr	r1, [pc, #36]	; 310dc <g_unichar_xdigit_value@plt+0x1d278>
   310b4:	mov	r0, r2
   310b8:	ldr	r2, [pc, #32]	; 310e0 <g_unichar_xdigit_value@plt+0x1d27c>
   310bc:	add	r1, pc, r1
   310c0:	add	r2, pc, r2
   310c4:	add	r1, r1, #584	; 0x248
   310c8:	bl	13450 <g_return_if_fail_warning@plt>
   310cc:	mov	r0, r5
   310d0:	pop	{r3, r4, r5, pc}
   310d4:	andeq	sl, r0, r0, lsr r2
   310d8:	andeq	r8, r0, r8, asr sl
   310dc:	andeq	sl, r0, ip, lsl #4
   310e0:	andeq	r7, r0, r0, lsr #7
   310e4:	ldr	r0, [pc, #108]	; 31158 <g_unichar_xdigit_value@plt+0x1d2f4>
   310e8:	push	{r3, r4, r5, lr}
   310ec:	add	r0, pc, r0
   310f0:	dmb	sy
   310f4:	ldr	r4, [r0, #52]	; 0x34
   310f8:	dmb	sy
   310fc:	cmp	r4, #0
   31100:	beq	31114 <g_unichar_xdigit_value@plt+0x1d2b0>
   31104:	ldr	r3, [pc, #80]	; 3115c <g_unichar_xdigit_value@plt+0x1d2f8>
   31108:	add	r3, pc, r3
   3110c:	ldr	r0, [r3, #52]	; 0x34
   31110:	pop	{r3, r4, r5, pc}
   31114:	add	r5, r0, #52	; 0x34
   31118:	mov	r0, r5
   3111c:	bl	138ac <g_once_init_enter@plt>
   31120:	cmp	r0, #0
   31124:	beq	31104 <g_unichar_xdigit_value@plt+0x1d2a0>
   31128:	bl	154ac <g_unichar_xdigit_value@plt+0x1648>
   3112c:	ldr	r2, [pc, #44]	; 31160 <g_unichar_xdigit_value@plt+0x1d2fc>
   31130:	ldr	r1, [pc, #44]	; 31164 <g_unichar_xdigit_value@plt+0x1d300>
   31134:	mov	r3, r4
   31138:	add	r2, pc, r2
   3113c:	add	r1, pc, r1
   31140:	add	r2, r2, #108	; 0x6c
   31144:	bl	13438 <g_type_register_static@plt>
   31148:	mov	r1, r0
   3114c:	mov	r0, r5
   31150:	bl	13bac <g_once_init_leave@plt>
   31154:	b	31104 <g_unichar_xdigit_value@plt+0x1d2a0>
   31158:			; <UNDEFINED> instruction: 0x000204b4
   3115c:	muleq	r2, r8, r4
   31160:	andeq	pc, r1, r8, ror #19
   31164:	andeq	fp, r0, r8, asr #28
   31168:	push	{r3, r4, r5, lr}
   3116c:	mov	r4, r1
   31170:	mov	r5, r0
   31174:	bl	310e4 <g_unichar_xdigit_value@plt+0x1d280>
   31178:	mov	r1, r5
   3117c:	mov	r2, r4
   31180:	pop	{r3, r4, r5, lr}
   31184:	b	31034 <g_unichar_xdigit_value@plt+0x1d1d0>
   31188:	push	{r4, r5, r6, lr}
   3118c:	subs	r6, r0, #0
   31190:	sub	sp, sp, #8
   31194:	mov	r5, r1
   31198:	mov	r4, r2
   3119c:	beq	31208 <g_unichar_xdigit_value@plt+0x1d3a4>
   311a0:	cmp	r1, #0
   311a4:	beq	3122c <g_unichar_xdigit_value@plt+0x1d3c8>
   311a8:	cmp	r2, #0
   311ac:	beq	31254 <g_unichar_xdigit_value@plt+0x1d3f0>
   311b0:	mov	r1, r2
   311b4:	mov	r0, r5
   311b8:	bl	31168 <g_unichar_xdigit_value@plt+0x1d304>
   311bc:	mov	ip, #0
   311c0:	mov	r3, #10
   311c4:	mov	lr, #32
   311c8:	mov	r1, ip
   311cc:	mov	r2, ip
   311d0:	str	r3, [r0, #16]
   311d4:	mov	r3, ip
   311d8:	str	lr, [r0, #20]
   311dc:	mov	r4, r0
   311e0:	str	ip, [sp]
   311e4:	str	ip, [sp, #4]
   311e8:	bl	1573c <g_unichar_xdigit_value@plt+0x18d8>
   311ec:	subs	r6, r0, #0
   311f0:	beq	3127c <g_unichar_xdigit_value@plt+0x1d418>
   311f4:	mov	r0, r4
   311f8:	bl	13b94 <g_object_unref@plt>
   311fc:	mov	r0, r6
   31200:	add	sp, sp, #8
   31204:	pop	{r4, r5, r6, pc}
   31208:	ldr	r1, [pc, #132]	; 31294 <g_unichar_xdigit_value@plt+0x1d430>
   3120c:	ldr	r2, [pc, #132]	; 31298 <g_unichar_xdigit_value@plt+0x1d434>
   31210:	add	r1, pc, r1
   31214:	add	r2, pc, r2
   31218:	add	r1, r1, #616	; 0x268
   3121c:	bl	13450 <g_return_if_fail_warning@plt>
   31220:	mov	r0, r6
   31224:	add	sp, sp, #8
   31228:	pop	{r4, r5, r6, pc}
   3122c:	ldr	r1, [pc, #104]	; 3129c <g_unichar_xdigit_value@plt+0x1d438>
   31230:	mov	r0, r5
   31234:	ldr	r2, [pc, #100]	; 312a0 <g_unichar_xdigit_value@plt+0x1d43c>
   31238:	add	r1, pc, r1
   3123c:	add	r2, pc, r2
   31240:	add	r1, r1, #616	; 0x268
   31244:	bl	13450 <g_return_if_fail_warning@plt>
   31248:	mov	r0, r5
   3124c:	add	sp, sp, #8
   31250:	pop	{r4, r5, r6, pc}
   31254:	ldr	r1, [pc, #72]	; 312a4 <g_unichar_xdigit_value@plt+0x1d440>
   31258:	mov	r0, r2
   3125c:	ldr	r2, [pc, #68]	; 312a8 <g_unichar_xdigit_value@plt+0x1d444>
   31260:	add	r1, pc, r1
   31264:	add	r2, pc, r2
   31268:	add	r1, r1, #616	; 0x268
   3126c:	bl	13450 <g_return_if_fail_warning@plt>
   31270:	mov	r0, r4
   31274:	add	sp, sp, #8
   31278:	pop	{r4, r5, r6, pc}
   3127c:	ldr	r2, [pc, #40]	; 312ac <g_unichar_xdigit_value@plt+0x1d448>
   31280:	mov	r3, r5
   31284:	mov	r1, #16
   31288:	add	r2, pc, r2
   3128c:	bl	13558 <g_log@plt>
   31290:	b	311f4 <g_unichar_xdigit_value@plt+0x1d390>
   31294:	strheq	sl, [r0], -r8
   31298:	ldrdeq	r6, [r0], -r0
   3129c:	muleq	r0, r0, r0
   312a0:			; <UNDEFINED> instruction: 0x000088b8
   312a4:	andeq	sl, r0, r8, rrx
   312a8:	strdeq	r7, [r0], -ip
   312ac:	andeq	fp, r0, r0, lsl sp
   312b0:	push	{r3, r4, r5, r6, r7, lr}
   312b4:	subs	r5, r0, #0
   312b8:	mov	r4, r1
   312bc:	beq	31350 <g_unichar_xdigit_value@plt+0x1d4ec>
   312c0:	cmp	r1, #0
   312c4:	beq	31370 <g_unichar_xdigit_value@plt+0x1d50c>
   312c8:	ldr	r3, [r5, #12]
   312cc:	ldr	r1, [r3, #16]
   312d0:	cmp	r1, #0
   312d4:	beq	312e4 <g_unichar_xdigit_value@plt+0x1d480>
   312d8:	mov	r2, r4
   312dc:	pop	{r3, r4, r5, r6, r7, lr}
   312e0:	b	31188 <g_unichar_xdigit_value@plt+0x1d324>
   312e4:	bl	34420 <g_unichar_xdigit_value@plt+0x205bc>
   312e8:	mov	r6, r0
   312ec:	mov	r0, r5
   312f0:	bl	2c7c8 <g_unichar_xdigit_value@plt+0x18964>
   312f4:	mov	r5, r0
   312f8:	mov	r0, r6
   312fc:	mov	r1, r5
   31300:	bl	3436c <g_unichar_xdigit_value@plt+0x20508>
   31304:	mov	r7, r0
   31308:	mov	r0, r5
   3130c:	bl	1399c <g_free@plt>
   31310:	cmp	r6, #0
   31314:	beq	31320 <g_unichar_xdigit_value@plt+0x1d4bc>
   31318:	mov	r0, r6
   3131c:	bl	13b94 <g_object_unref@plt>
   31320:	cmp	r7, #0
   31324:	beq	31348 <g_unichar_xdigit_value@plt+0x1d4e4>
   31328:	mov	r1, r7
   3132c:	mov	r0, r4
   31330:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   31334:	mov	r4, r0
   31338:	mov	r0, r7
   3133c:	bl	13b94 <g_object_unref@plt>
   31340:	mov	r0, r4
   31344:	pop	{r3, r4, r5, r6, r7, pc}
   31348:	mov	r0, r7
   3134c:	pop	{r3, r4, r5, r6, r7, pc}
   31350:	ldr	r1, [pc, #60]	; 31394 <g_unichar_xdigit_value@plt+0x1d530>
   31354:	ldr	r2, [pc, #60]	; 31398 <g_unichar_xdigit_value@plt+0x1d534>
   31358:	add	r1, pc, r1
   3135c:	add	r2, pc, r2
   31360:	add	r1, r1, #636	; 0x27c
   31364:	bl	13450 <g_return_if_fail_warning@plt>
   31368:	mov	r0, r5
   3136c:	pop	{r3, r4, r5, r6, r7, pc}
   31370:	ldr	r1, [pc, #36]	; 3139c <g_unichar_xdigit_value@plt+0x1d538>
   31374:	mov	r0, r4
   31378:	ldr	r2, [pc, #32]	; 313a0 <g_unichar_xdigit_value@plt+0x1d53c>
   3137c:	add	r1, pc, r1
   31380:	add	r2, pc, r2
   31384:	add	r1, r1, #636	; 0x27c
   31388:	bl	13450 <g_return_if_fail_warning@plt>
   3138c:	mov	r0, r4
   31390:	pop	{r3, r4, r5, r6, r7, pc}
   31394:	andeq	r9, r0, r0, ror pc
   31398:	andeq	r6, r0, r8, lsl #27
   3139c:	andeq	r9, r0, ip, asr #30
   313a0:	andeq	r7, r0, r0, ror #1
   313a4:	push	{r3, r4, r5, r6, r7, lr}
   313a8:	subs	r5, r0, #0
   313ac:	mov	r4, r1
   313b0:	beq	31444 <g_unichar_xdigit_value@plt+0x1d5e0>
   313b4:	cmp	r1, #0
   313b8:	beq	31464 <g_unichar_xdigit_value@plt+0x1d600>
   313bc:	ldr	r3, [r5, #12]
   313c0:	ldr	r1, [r3, #20]
   313c4:	cmp	r1, #0
   313c8:	beq	313d8 <g_unichar_xdigit_value@plt+0x1d574>
   313cc:	mov	r2, r4
   313d0:	pop	{r3, r4, r5, r6, r7, lr}
   313d4:	b	31188 <g_unichar_xdigit_value@plt+0x1d324>
   313d8:	bl	34420 <g_unichar_xdigit_value@plt+0x205bc>
   313dc:	mov	r6, r0
   313e0:	mov	r0, r5
   313e4:	bl	2c7c8 <g_unichar_xdigit_value@plt+0x18964>
   313e8:	mov	r5, r0
   313ec:	mov	r0, r6
   313f0:	mov	r1, r5
   313f4:	bl	3436c <g_unichar_xdigit_value@plt+0x20508>
   313f8:	mov	r7, r0
   313fc:	mov	r0, r5
   31400:	bl	1399c <g_free@plt>
   31404:	cmp	r6, #0
   31408:	beq	31414 <g_unichar_xdigit_value@plt+0x1d5b0>
   3140c:	mov	r0, r6
   31410:	bl	13b94 <g_object_unref@plt>
   31414:	cmp	r7, #0
   31418:	beq	3143c <g_unichar_xdigit_value@plt+0x1d5d8>
   3141c:	mov	r1, r7
   31420:	mov	r0, r4
   31424:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   31428:	mov	r4, r0
   3142c:	mov	r0, r7
   31430:	bl	13b94 <g_object_unref@plt>
   31434:	mov	r0, r4
   31438:	pop	{r3, r4, r5, r6, r7, pc}
   3143c:	mov	r0, r7
   31440:	pop	{r3, r4, r5, r6, r7, pc}
   31444:	ldr	r1, [pc, #60]	; 31488 <g_unichar_xdigit_value@plt+0x1d624>
   31448:	ldr	r2, [pc, #60]	; 3148c <g_unichar_xdigit_value@plt+0x1d628>
   3144c:	add	r1, pc, r1
   31450:	add	r2, pc, r2
   31454:	add	r1, r1, #656	; 0x290
   31458:	bl	13450 <g_return_if_fail_warning@plt>
   3145c:	mov	r0, r5
   31460:	pop	{r3, r4, r5, r6, r7, pc}
   31464:	ldr	r1, [pc, #36]	; 31490 <g_unichar_xdigit_value@plt+0x1d62c>
   31468:	mov	r0, r4
   3146c:	ldr	r2, [pc, #32]	; 31494 <g_unichar_xdigit_value@plt+0x1d630>
   31470:	add	r1, pc, r1
   31474:	add	r2, pc, r2
   31478:	add	r1, r1, #656	; 0x290
   3147c:	bl	13450 <g_return_if_fail_warning@plt>
   31480:	mov	r0, r4
   31484:	pop	{r3, r4, r5, r6, r7, pc}
   31488:	andeq	r9, r0, ip, ror lr
   3148c:	muleq	r0, r4, ip
   31490:	andeq	r9, r0, r8, asr lr
   31494:	andeq	r6, r0, ip, ror #31
   31498:	push	{r3, r4, r5, r6, r7, lr}
   3149c:	subs	r7, r0, #0
   314a0:	mov	r4, r2
   314a4:	mov	r5, r3
   314a8:	mov	r6, r1
   314ac:	beq	3151c <g_unichar_xdigit_value@plt+0x1d6b8>
   314b0:	cmp	r1, #0
   314b4:	beq	3153c <g_unichar_xdigit_value@plt+0x1d6d8>
   314b8:	cmp	r2, #0
   314bc:	beq	314f8 <g_unichar_xdigit_value@plt+0x1d694>
   314c0:	cmp	r3, #0
   314c4:	beq	31560 <g_unichar_xdigit_value@plt+0x1d6fc>
   314c8:	mov	r0, r2
   314cc:	bl	312b0 <g_unichar_xdigit_value@plt+0x1d44c>
   314d0:	subs	r4, r0, #0
   314d4:	beq	31514 <g_unichar_xdigit_value@plt+0x1d6b0>
   314d8:	mov	r1, r4
   314dc:	mov	r0, r5
   314e0:	bl	313a4 <g_unichar_xdigit_value@plt+0x1d540>
   314e4:	mov	r5, r0
   314e8:	mov	r0, r4
   314ec:	bl	13b94 <g_object_unref@plt>
   314f0:	mov	r0, r5
   314f4:	pop	{r3, r4, r5, r6, r7, pc}
   314f8:	ldr	r1, [pc, #132]	; 31584 <g_unichar_xdigit_value@plt+0x1d720>
   314fc:	mov	r0, r2
   31500:	ldr	r2, [pc, #128]	; 31588 <g_unichar_xdigit_value@plt+0x1d724>
   31504:	add	r1, pc, r1
   31508:	add	r2, pc, r2
   3150c:	add	r1, r1, #672	; 0x2a0
   31510:	bl	13450 <g_return_if_fail_warning@plt>
   31514:	mov	r0, r4
   31518:	pop	{r3, r4, r5, r6, r7, pc}
   3151c:	ldr	r1, [pc, #104]	; 3158c <g_unichar_xdigit_value@plt+0x1d728>
   31520:	ldr	r2, [pc, #104]	; 31590 <g_unichar_xdigit_value@plt+0x1d72c>
   31524:	add	r1, pc, r1
   31528:	add	r2, pc, r2
   3152c:	add	r1, r1, #672	; 0x2a0
   31530:	bl	13450 <g_return_if_fail_warning@plt>
   31534:	mov	r0, r7
   31538:	pop	{r3, r4, r5, r6, r7, pc}
   3153c:	ldr	r1, [pc, #80]	; 31594 <g_unichar_xdigit_value@plt+0x1d730>
   31540:	mov	r0, r6
   31544:	ldr	r2, [pc, #76]	; 31598 <g_unichar_xdigit_value@plt+0x1d734>
   31548:	add	r1, pc, r1
   3154c:	add	r2, pc, r2
   31550:	add	r1, r1, #672	; 0x2a0
   31554:	bl	13450 <g_return_if_fail_warning@plt>
   31558:	mov	r0, r6
   3155c:	pop	{r3, r4, r5, r6, r7, pc}
   31560:	ldr	r1, [pc, #52]	; 3159c <g_unichar_xdigit_value@plt+0x1d738>
   31564:	mov	r0, r3
   31568:	ldr	r2, [pc, #48]	; 315a0 <g_unichar_xdigit_value@plt+0x1d73c>
   3156c:	add	r1, pc, r1
   31570:	add	r2, pc, r2
   31574:	add	r1, r1, #672	; 0x2a0
   31578:	bl	13450 <g_return_if_fail_warning@plt>
   3157c:	mov	r0, r5
   31580:	pop	{r3, r4, r5, r6, r7, pc}
   31584:	andeq	r9, r0, r4, asr #27
   31588:	andeq	r6, r0, r4, ror #30
   3158c:	andeq	r9, r0, r4, lsr #27
   31590:			; <UNDEFINED> instruction: 0x00006bbc
   31594:	andeq	r9, r0, r0, lsl #27
   31598:	andeq	r6, r0, r4, lsl pc
   3159c:	andeq	r9, r0, ip, asr sp
   315a0:	andeq	r6, r0, ip, lsl #30
   315a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   315a8:	subs	r4, r0, #0
   315ac:	mov	sl, r1
   315b0:	mov	r8, r2
   315b4:	mov	r9, r3
   315b8:	beq	31738 <g_unichar_xdigit_value@plt+0x1d8d4>
   315bc:	cmp	r1, #0
   315c0:	beq	31758 <g_unichar_xdigit_value@plt+0x1d8f4>
   315c4:	cmp	r2, #0
   315c8:	beq	316f0 <g_unichar_xdigit_value@plt+0x1d88c>
   315cc:	cmp	r3, #0
   315d0:	beq	31714 <g_unichar_xdigit_value@plt+0x1d8b0>
   315d4:	ldr	r3, [r4, #12]
   315d8:	ldr	r5, [r3]
   315dc:	cmp	r5, #0
   315e0:	beq	31660 <g_unichar_xdigit_value@plt+0x1d7fc>
   315e4:	ldr	r0, [r5]
   315e8:	cmp	r0, #0
   315ec:	moveq	r4, r0
   315f0:	beq	315fc <g_unichar_xdigit_value@plt+0x1d798>
   315f4:	bl	133f0 <g_object_ref@plt>
   315f8:	mov	r4, r0
   315fc:	mov	r0, r4
   31600:	mov	r1, r8
   31604:	mov	r2, #1
   31608:	bl	2c2cc <g_unichar_xdigit_value@plt+0x18468>
   3160c:	subs	r7, r0, #0
   31610:	beq	31698 <g_unichar_xdigit_value@plt+0x1d834>
   31614:	mov	r0, r4
   31618:	mov	r1, r9
   3161c:	mov	r2, #1
   31620:	bl	2c2cc <g_unichar_xdigit_value@plt+0x18468>
   31624:	subs	r6, r0, #0
   31628:	beq	31668 <g_unichar_xdigit_value@plt+0x1d804>
   3162c:	cmp	r7, #0
   31630:	beq	3168c <g_unichar_xdigit_value@plt+0x1d828>
   31634:	cmp	r6, #0
   31638:	bne	316b0 <g_unichar_xdigit_value@plt+0x1d84c>
   3163c:	mov	r0, r7
   31640:	bl	13b94 <g_object_unref@plt>
   31644:	cmp	r4, #0
   31648:	beq	31654 <g_unichar_xdigit_value@plt+0x1d7f0>
   3164c:	mov	r0, r4
   31650:	bl	13b94 <g_object_unref@plt>
   31654:	ldr	r5, [r5, #4]
   31658:	cmp	r5, #0
   3165c:	bne	315e4 <g_unichar_xdigit_value@plt+0x1d780>
   31660:	mov	r0, #0
   31664:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31668:	mov	r2, r6
   3166c:	mov	r0, r4
   31670:	mov	r1, r9
   31674:	bl	2c2cc <g_unichar_xdigit_value@plt+0x18468>
   31678:	cmp	r7, #0
   3167c:	mov	r6, r0
   31680:	bne	31634 <g_unichar_xdigit_value@plt+0x1d7d0>
   31684:	cmp	r0, #0
   31688:	beq	31644 <g_unichar_xdigit_value@plt+0x1d7e0>
   3168c:	mov	r0, r6
   31690:	bl	13b94 <g_object_unref@plt>
   31694:	b	31644 <g_unichar_xdigit_value@plt+0x1d7e0>
   31698:	mov	r2, r7
   3169c:	mov	r0, r4
   316a0:	mov	r1, r8
   316a4:	bl	2c2cc <g_unichar_xdigit_value@plt+0x18468>
   316a8:	mov	r7, r0
   316ac:	b	31614 <g_unichar_xdigit_value@plt+0x1d7b0>
   316b0:	mov	r1, sl
   316b4:	mov	r2, r7
   316b8:	mov	r3, r6
   316bc:	mov	r0, r4
   316c0:	bl	31498 <g_unichar_xdigit_value@plt+0x1d634>
   316c4:	mov	r8, r0
   316c8:	mov	r0, r6
   316cc:	bl	13b94 <g_object_unref@plt>
   316d0:	mov	r0, r7
   316d4:	bl	13b94 <g_object_unref@plt>
   316d8:	cmp	r4, #0
   316dc:	beq	3170c <g_unichar_xdigit_value@plt+0x1d8a8>
   316e0:	mov	r0, r4
   316e4:	bl	13b94 <g_object_unref@plt>
   316e8:	mov	r0, r8
   316ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   316f0:	ldr	r1, [pc, #132]	; 3177c <g_unichar_xdigit_value@plt+0x1d918>
   316f4:	mov	r0, r2
   316f8:	ldr	r2, [pc, #128]	; 31780 <g_unichar_xdigit_value@plt+0x1d91c>
   316fc:	add	r1, pc, r1
   31700:	add	r2, pc, r2
   31704:	add	r1, r1, #696	; 0x2b8
   31708:	bl	13450 <g_return_if_fail_warning@plt>
   3170c:	mov	r0, r8
   31710:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31714:	ldr	r1, [pc, #104]	; 31784 <g_unichar_xdigit_value@plt+0x1d920>
   31718:	mov	r0, r3
   3171c:	ldr	r2, [pc, #100]	; 31788 <g_unichar_xdigit_value@plt+0x1d924>
   31720:	add	r1, pc, r1
   31724:	add	r2, pc, r2
   31728:	add	r1, r1, #696	; 0x2b8
   3172c:	bl	13450 <g_return_if_fail_warning@plt>
   31730:	mov	r0, r9
   31734:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31738:	ldr	r1, [pc, #76]	; 3178c <g_unichar_xdigit_value@plt+0x1d928>
   3173c:	ldr	r2, [pc, #76]	; 31790 <g_unichar_xdigit_value@plt+0x1d92c>
   31740:	add	r1, pc, r1
   31744:	add	r2, pc, r2
   31748:	add	r1, r1, #696	; 0x2b8
   3174c:	bl	13450 <g_return_if_fail_warning@plt>
   31750:	mov	r0, r4
   31754:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31758:	ldr	r1, [pc, #52]	; 31794 <g_unichar_xdigit_value@plt+0x1d930>
   3175c:	mov	r0, sl
   31760:	ldr	r2, [pc, #48]	; 31798 <g_unichar_xdigit_value@plt+0x1d934>
   31764:	add	r1, pc, r1
   31768:	add	r2, pc, r2
   3176c:	add	r1, r1, #696	; 0x2b8
   31770:	bl	13450 <g_return_if_fail_warning@plt>
   31774:	mov	r0, sl
   31778:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3177c:	andeq	r9, r0, ip, asr #23
   31780:	andeq	fp, r0, r4, asr #17
   31784:	andeq	r9, r0, r8, lsr #23
   31788:			; <UNDEFINED> instruction: 0x0000b8b4
   3178c:	andeq	r9, r0, r8, lsl #23
   31790:	andeq	r6, r0, r0, lsr #19
   31794:	andeq	r9, r0, r4, ror #22
   31798:	strdeq	r6, [r0], -r8
   3179c:	push	{r4, lr}
   317a0:	mov	r4, r0
   317a4:	bl	310e4 <g_unichar_xdigit_value@plt+0x1d280>
   317a8:	mov	r1, r0
   317ac:	mov	r0, r4
   317b0:	bl	13870 <g_type_instance_get_private@plt>
   317b4:	str	r0, [r4, #28]
   317b8:	pop	{r4, pc}
   317bc:	push	{r3, r4, r5, lr}
   317c0:	mov	r4, r0
   317c4:	bl	310e4 <g_unichar_xdigit_value@plt+0x1d280>
   317c8:	mov	r1, r0
   317cc:	mov	r0, r4
   317d0:	bl	13510 <g_type_check_instance_cast@plt>
   317d4:	ldr	r3, [r0, #28]
   317d8:	mov	r5, r0
   317dc:	ldr	r0, [r3]
   317e0:	cmp	r0, #0
   317e4:	beq	317f8 <g_unichar_xdigit_value@plt+0x1d994>
   317e8:	bl	13b94 <g_object_unref@plt>
   317ec:	ldr	r3, [r5, #28]
   317f0:	mov	r2, #0
   317f4:	str	r2, [r3]
   317f8:	ldr	r3, [pc, #28]	; 3181c <g_unichar_xdigit_value@plt+0x1d9b8>
   317fc:	mov	r1, #80	; 0x50
   31800:	add	r3, pc, r3
   31804:	ldr	r0, [r3, #4]
   31808:	bl	13db0 <g_type_check_class_cast@plt>
   3180c:	ldr	r3, [r0, #24]
   31810:	mov	r0, r4
   31814:	blx	r3
   31818:	pop	{r3, r4, r5, pc}
   3181c:	andeq	pc, r1, r0, lsr #27
   31820:	cmp	r0, #0
   31824:	bxeq	lr
   31828:	b	13b94 <g_object_unref@plt>
   3182c:	b	1399c <g_free@plt>
   31830:	push	{r3, r4, r5, lr}
   31834:	mov	r4, r0
   31838:	ldr	r0, [r0, #28]
   3183c:	mov	r5, #0
   31840:	bl	1399c <g_free@plt>
   31844:	ldr	r0, [r4, #32]
   31848:	str	r5, [r4, #28]
   3184c:	bl	1399c <g_free@plt>
   31850:	ldr	r0, [r4, #36]	; 0x24
   31854:	str	r5, [r4, #32]
   31858:	bl	1399c <g_free@plt>
   3185c:	ldr	r0, [r4, #24]
   31860:	str	r5, [r4, #36]	; 0x24
   31864:	cmp	r0, r5
   31868:	beq	31874 <g_unichar_xdigit_value@plt+0x1da10>
   3186c:	bl	13b94 <g_object_unref@plt>
   31870:	str	r5, [r4, #24]
   31874:	mov	r1, r4
   31878:	mov	r0, #128	; 0x80
   3187c:	pop	{r3, r4, r5, lr}
   31880:	b	13d80 <g_slice_free1@plt>
   31884:	push	{r3, r4, r5, r6, r7, lr}
   31888:	mov	r5, r1
   3188c:	mov	r7, r2
   31890:	mov	r6, r0
   31894:	bl	13bdc <g_task_get_type@plt>
   31898:	mov	r1, r0
   3189c:	mov	r0, r5
   318a0:	bl	13510 <g_type_check_instance_cast@plt>
   318a4:	bl	13a44 <g_task_get_task_data@plt>
   318a8:	ldr	r3, [r0, #16]
   318ac:	mov	r4, r0
   318b0:	cmp	r3, #0
   318b4:	beq	318c8 <g_unichar_xdigit_value@plt+0x1da64>
   318b8:	mov	r0, r6
   318bc:	mov	r1, r5
   318c0:	mov	r2, r7
   318c4:	blx	r3
   318c8:	mov	r3, #1
   318cc:	str	r3, [r4, #20]
   318d0:	pop	{r3, r4, r5, r6, r7, pc}
   318d4:	push	{r4, r5, r6, r7, lr}
   318d8:	sub	sp, sp, #12
   318dc:	mov	r4, r0
   318e0:	bl	13c60 <g_type_class_peek_parent@plt>
   318e4:	ldr	r5, [pc, #376]	; 31a64 <g_unichar_xdigit_value@plt+0x1dc00>
   318e8:	mov	r1, #20
   318ec:	mov	r6, #225	; 0xe1
   318f0:	add	r5, pc, r5
   318f4:	str	r0, [r5]
   318f8:	mov	r0, r4
   318fc:	bl	13a5c <g_type_class_add_private@plt>
   31900:	mov	r0, r4
   31904:	mov	r1, #80	; 0x50
   31908:	bl	13db0 <g_type_check_class_cast@plt>
   3190c:	ldr	r3, [pc, #340]	; 31a68 <g_unichar_xdigit_value@plt+0x1dc04>
   31910:	mov	r1, #80	; 0x50
   31914:	add	r3, pc, r3
   31918:	str	r3, [r0, #16]
   3191c:	mov	r0, r4
   31920:	bl	13db0 <g_type_check_class_cast@plt>
   31924:	ldr	r3, [pc, #320]	; 31a6c <g_unichar_xdigit_value@plt+0x1dc08>
   31928:	mov	r1, #80	; 0x50
   3192c:	add	r3, pc, r3
   31930:	str	r3, [r0, #12]
   31934:	mov	r0, r4
   31938:	bl	13db0 <g_type_check_class_cast@plt>
   3193c:	ldr	r3, [pc, #300]	; 31a70 <g_unichar_xdigit_value@plt+0x1dc0c>
   31940:	mov	r1, #80	; 0x50
   31944:	add	r3, pc, r3
   31948:	str	r3, [r0, #24]
   3194c:	mov	r0, r4
   31950:	bl	13db0 <g_type_check_class_cast@plt>
   31954:	mov	r3, #0
   31958:	str	r6, [sp]
   3195c:	mov	r7, r0
   31960:	ldr	r0, [pc, #268]	; 31a74 <g_unichar_xdigit_value@plt+0x1dc10>
   31964:	add	r0, pc, r0
   31968:	mov	r1, r0
   3196c:	mov	r2, r0
   31970:	bl	134d4 <g_param_spec_string@plt>
   31974:	mov	r1, #1
   31978:	mov	r3, r0
   3197c:	mov	r2, r0
   31980:	mov	r0, r7
   31984:	str	r3, [r5, #8]
   31988:	bl	13a2c <g_object_class_install_property@plt>
   3198c:	mov	r0, r4
   31990:	mov	r1, #80	; 0x50
   31994:	bl	13db0 <g_type_check_class_cast@plt>
   31998:	mov	r3, #0
   3199c:	str	r6, [sp]
   319a0:	mov	r7, r0
   319a4:	ldr	r0, [pc, #204]	; 31a78 <g_unichar_xdigit_value@plt+0x1dc14>
   319a8:	add	r0, pc, r0
   319ac:	mov	r1, r0
   319b0:	mov	r2, r0
   319b4:	bl	134d4 <g_param_spec_string@plt>
   319b8:	mov	r1, #2
   319bc:	mov	r3, r0
   319c0:	mov	r2, r0
   319c4:	mov	r0, r7
   319c8:	str	r3, [r5, #12]
   319cc:	bl	13a2c <g_object_class_install_property@plt>
   319d0:	mov	r0, r4
   319d4:	mov	r1, #80	; 0x50
   319d8:	bl	13db0 <g_type_check_class_cast@plt>
   319dc:	mov	r3, #0
   319e0:	str	r6, [sp]
   319e4:	mov	r7, r0
   319e8:	ldr	r0, [pc, #140]	; 31a7c <g_unichar_xdigit_value@plt+0x1dc18>
   319ec:	add	r0, pc, r0
   319f0:	mov	r1, r0
   319f4:	mov	r2, r0
   319f8:	bl	134d4 <g_param_spec_string@plt>
   319fc:	mov	r1, #3
   31a00:	mov	r3, r0
   31a04:	mov	r2, r0
   31a08:	mov	r0, r7
   31a0c:	str	r3, [r5, #16]
   31a10:	bl	13a2c <g_object_class_install_property@plt>
   31a14:	mov	r0, r4
   31a18:	mov	r1, #80	; 0x50
   31a1c:	bl	13db0 <g_type_check_class_cast@plt>
   31a20:	mov	r2, #227	; 0xe3
   31a24:	mov	r3, #0
   31a28:	str	r2, [sp]
   31a2c:	mov	r4, r0
   31a30:	ldr	r0, [pc, #72]	; 31a80 <g_unichar_xdigit_value@plt+0x1dc1c>
   31a34:	add	r0, pc, r0
   31a38:	mov	r1, r0
   31a3c:	mov	r2, r0
   31a40:	bl	134d4 <g_param_spec_string@plt>
   31a44:	mov	r1, #4
   31a48:	mov	r3, r0
   31a4c:	mov	r2, r0
   31a50:	str	r3, [r5, #20]
   31a54:	mov	r0, r4
   31a58:	add	sp, sp, #12
   31a5c:	pop	{r4, r5, r6, r7, lr}
   31a60:	b	13a2c <g_object_class_install_property@plt>
   31a64:	andeq	pc, r1, ip, ror #25
   31a68:	andeq	r3, r0, r8, lsr #27
   31a6c:	ldrdeq	r3, [r0], -r4
   31a70:	andeq	r3, r0, r4, lsl ip
   31a74:	andeq	r9, r0, r0, asr ip
   31a78:	andeq	r9, r0, r4, lsl #24
   31a7c:	andeq	fp, r0, r8, lsr #16
   31a80:	andeq	fp, r0, r8, ror #15
   31a84:	push	{r4, lr}
   31a88:	subs	r4, r0, #0
   31a8c:	beq	31ab0 <g_unichar_xdigit_value@plt+0x1dc4c>
   31a90:	bl	1366c <g_get_user_cache_dir@plt>
   31a94:	ldr	r1, [pc, #48]	; 31acc <g_unichar_xdigit_value@plt+0x1dc68>
   31a98:	ldr	r2, [pc, #48]	; 31ad0 <g_unichar_xdigit_value@plt+0x1dc6c>
   31a9c:	mov	r3, #0
   31aa0:	add	r1, pc, r1
   31aa4:	add	r2, pc, r2
   31aa8:	pop	{r4, lr}
   31aac:	b	135ac <g_build_filename@plt>
   31ab0:	ldr	r1, [pc, #28]	; 31ad4 <g_unichar_xdigit_value@plt+0x1dc70>
   31ab4:	ldr	r2, [pc, #28]	; 31ad8 <g_unichar_xdigit_value@plt+0x1dc74>
   31ab8:	add	r1, pc, r1
   31abc:	add	r2, pc, r2
   31ac0:	bl	13450 <g_return_if_fail_warning@plt>
   31ac4:	mov	r0, r4
   31ac8:	pop	{r4, pc}
   31acc:	andeq	r7, r0, r8, lsl #19
   31ad0:	andeq	fp, r0, r0, lsl #15
   31ad4:	andeq	fp, r0, r4, lsr r5
   31ad8:	andeq	r6, r0, r8, lsr #12
   31adc:	push	{r4, lr}
   31ae0:	subs	r4, r0, #0
   31ae4:	beq	31b08 <g_unichar_xdigit_value@plt+0x1dca4>
   31ae8:	bl	1366c <g_get_user_cache_dir@plt>
   31aec:	ldr	r1, [pc, #52]	; 31b28 <g_unichar_xdigit_value@plt+0x1dcc4>
   31af0:	ldr	r2, [pc, #52]	; 31b2c <g_unichar_xdigit_value@plt+0x1dcc8>
   31af4:	mov	r3, #0
   31af8:	add	r1, pc, r1
   31afc:	add	r2, pc, r2
   31b00:	pop	{r4, lr}
   31b04:	b	135ac <g_build_filename@plt>
   31b08:	ldr	r1, [pc, #32]	; 31b30 <g_unichar_xdigit_value@plt+0x1dccc>
   31b0c:	ldr	r2, [pc, #32]	; 31b34 <g_unichar_xdigit_value@plt+0x1dcd0>
   31b10:	add	r1, pc, r1
   31b14:	add	r2, pc, r2
   31b18:	add	r1, r1, #40	; 0x28
   31b1c:	bl	13450 <g_return_if_fail_warning@plt>
   31b20:	mov	r0, r4
   31b24:	pop	{r4, pc}
   31b28:	andeq	r7, r0, r0, lsr r9
   31b2c:	andeq	fp, r0, r8, lsr r7
   31b30:	ldrdeq	fp, [r0], -ip
   31b34:	ldrdeq	r6, [r0], -r0
   31b38:	push	{r4, lr}
   31b3c:	subs	r4, r0, #0
   31b40:	beq	31b58 <g_unichar_xdigit_value@plt+0x1dcf4>
   31b44:	bl	136f0 <g_strdup@plt>
   31b48:	mov	r4, r0
   31b4c:	bl	13c3c <g_strchug@plt>
   31b50:	mov	r0, r4
   31b54:	pop	{r4, pc}
   31b58:	ldr	r1, [pc, #24]	; 31b78 <g_unichar_xdigit_value@plt+0x1dd14>
   31b5c:	ldr	r2, [pc, #24]	; 31b7c <g_unichar_xdigit_value@plt+0x1dd18>
   31b60:	add	r1, pc, r1
   31b64:	add	r2, pc, r2
   31b68:	add	r1, r1, #80	; 0x50
   31b6c:	bl	13450 <g_return_if_fail_warning@plt>
   31b70:	mov	r0, r4
   31b74:	pop	{r4, pc}
   31b78:	andeq	fp, r0, ip, lsl #9
   31b7c:	andeq	r6, r0, r0, lsl #11
   31b80:	ldr	r3, [pc, #328]	; 31cd0 <g_unichar_xdigit_value@plt+0x1de6c>
   31b84:	ldr	r2, [pc, #328]	; 31cd4 <g_unichar_xdigit_value@plt+0x1de70>
   31b88:	add	r3, pc, r3
   31b8c:	push	{r4, r5, r6, r7, r8, lr}
   31b90:	sub	sp, sp, #216	; 0xd8
   31b94:	ldr	r5, [r3, r2]
   31b98:	add	r7, sp, #104	; 0x68
   31b9c:	mov	r8, r0
   31ba0:	mov	r2, #104	; 0x68
   31ba4:	mov	r4, r1
   31ba8:	mov	r0, sp
   31bac:	ldr	r3, [r5]
   31bb0:	mov	r1, #0
   31bb4:	str	r3, [sp, #212]	; 0xd4
   31bb8:	bl	13750 <memset@plt>
   31bbc:	mov	r0, r7
   31bc0:	mov	r1, #0
   31bc4:	mov	r2, #104	; 0x68
   31bc8:	bl	13750 <memset@plt>
   31bcc:	cmp	r8, #0
   31bd0:	beq	31c78 <g_unichar_xdigit_value@plt+0x1de14>
   31bd4:	cmp	r4, #0
   31bd8:	beq	31c9c <g_unichar_xdigit_value@plt+0x1de38>
   31bdc:	mov	r0, r4
   31be0:	mov	r1, #1
   31be4:	bl	139e4 <g_file_test@plt>
   31be8:	cmp	r0, #0
   31bec:	bne	31c0c <g_unichar_xdigit_value@plt+0x1dda8>
   31bf0:	mov	r0, #1
   31bf4:	ldr	r2, [sp, #212]	; 0xd4
   31bf8:	ldr	r3, [r5]
   31bfc:	cmp	r2, r3
   31c00:	bne	31cc0 <g_unichar_xdigit_value@plt+0x1de5c>
   31c04:	add	sp, sp, #216	; 0xd8
   31c08:	pop	{r4, r5, r6, r7, r8, pc}
   31c0c:	mov	r1, #0
   31c10:	mov	r2, #104	; 0x68
   31c14:	mov	r0, sp
   31c18:	bl	13750 <memset@plt>
   31c1c:	mov	r1, r4
   31c20:	mov	r2, r7
   31c24:	mov	r0, #3
   31c28:	bl	134f8 <__xstat64@plt>
   31c2c:	mov	r1, r7
   31c30:	mov	r2, #104	; 0x68
   31c34:	mov	r4, r0
   31c38:	mov	r0, sp
   31c3c:	bl	13b7c <memcpy@plt>
   31c40:	cmn	r4, #1
   31c44:	beq	31bf0 <g_unichar_xdigit_value@plt+0x1dd8c>
   31c48:	mov	r0, #0
   31c4c:	ldr	r4, [sp, #80]	; 0x50
   31c50:	bl	13cb4 <time@plt>
   31c54:	vldr	d7, [pc, #108]	; 31cc8 <g_unichar_xdigit_value@plt+0x1de64>
   31c58:	rsb	r0, r4, r0
   31c5c:	vmov	s11, r0
   31c60:	vcvt.f64.s32	d6, s11
   31c64:	vcmpe.f64	d6, d7
   31c68:	vmrs	APSR_nzcv, fpscr
   31c6c:	movle	r0, #0
   31c70:	movgt	r0, #1
   31c74:	b	31bf4 <g_unichar_xdigit_value@plt+0x1dd90>
   31c78:	ldr	r1, [pc, #88]	; 31cd8 <g_unichar_xdigit_value@plt+0x1de74>
   31c7c:	mov	r0, r8
   31c80:	ldr	r2, [pc, #84]	; 31cdc <g_unichar_xdigit_value@plt+0x1de78>
   31c84:	add	r1, pc, r1
   31c88:	add	r2, pc, r2
   31c8c:	add	r1, r1, #92	; 0x5c
   31c90:	bl	13450 <g_return_if_fail_warning@plt>
   31c94:	mov	r0, r8
   31c98:	b	31bf4 <g_unichar_xdigit_value@plt+0x1dd90>
   31c9c:	ldr	r1, [pc, #60]	; 31ce0 <g_unichar_xdigit_value@plt+0x1de7c>
   31ca0:	mov	r0, r4
   31ca4:	ldr	r2, [pc, #56]	; 31ce4 <g_unichar_xdigit_value@plt+0x1de80>
   31ca8:	add	r1, pc, r1
   31cac:	add	r2, pc, r2
   31cb0:	add	r1, r1, #92	; 0x5c
   31cb4:	bl	13450 <g_return_if_fail_warning@plt>
   31cb8:	mov	r0, r4
   31cbc:	b	31bf4 <g_unichar_xdigit_value@plt+0x1dd90>
   31cc0:	bl	13978 <__stack_chk_fail@plt>
   31cc4:	nop	{0}
   31cc8:	andeq	r0, r0, r0
   31ccc:			; <UNDEFINED> instruction: 0x41227500
   31cd0:	andeq	pc, r1, r0, ror r4	; <UNPREDICTABLE>
   31cd4:	muleq	r0, r0, r3
   31cd8:	andeq	fp, r0, r8, ror #6
   31cdc:	andeq	r6, r0, ip, asr r4
   31ce0:	andeq	fp, r0, r4, asr #6
   31ce4:	muleq	r0, ip, r5
   31ce8:	cmp	r0, #0
   31cec:	push	{r4, r5, r6, lr}
   31cf0:	mov	r6, r1
   31cf4:	popeq	{r4, r5, r6, pc}
   31cf8:	cmp	r1, #0
   31cfc:	pople	{r4, r5, r6, pc}
   31d00:	sub	r5, r0, #4
   31d04:	mov	r4, #0
   31d08:	ldr	r0, [r5, #4]!
   31d0c:	add	r4, r4, #1
   31d10:	cmp	r0, #0
   31d14:	beq	31d1c <g_unichar_xdigit_value@plt+0x1deb8>
   31d18:	bl	1399c <g_free@plt>
   31d1c:	cmp	r4, r6
   31d20:	bne	31d08 <g_unichar_xdigit_value@plt+0x1dea4>
   31d24:	pop	{r4, r5, r6, pc}
   31d28:	push	{r4, r5, r6, lr}
   31d2c:	subs	r4, r0, #0
   31d30:	beq	31db0 <g_unichar_xdigit_value@plt+0x1df4c>
   31d34:	ldr	r3, [r4, #12]
   31d38:	ldr	r4, [r3]
   31d3c:	cmp	r4, #0
   31d40:	beq	31dc8 <g_unichar_xdigit_value@plt+0x1df64>
   31d44:	mov	r5, #0
   31d48:	b	31d80 <g_unichar_xdigit_value@plt+0x1df1c>
   31d4c:	bl	133f0 <g_object_ref@plt>
   31d50:	subs	r6, r0, #0
   31d54:	beq	31d8c <g_unichar_xdigit_value@plt+0x1df28>
   31d58:	bl	133f0 <g_object_ref@plt>
   31d5c:	mov	r1, r0
   31d60:	mov	r0, r5
   31d64:	bl	13594 <g_list_append@plt>
   31d68:	mov	r5, r0
   31d6c:	mov	r0, r6
   31d70:	bl	13b94 <g_object_unref@plt>
   31d74:	ldr	r4, [r4, #4]
   31d78:	cmp	r4, #0
   31d7c:	beq	31da8 <g_unichar_xdigit_value@plt+0x1df44>
   31d80:	ldr	r0, [r4]
   31d84:	cmp	r0, #0
   31d88:	bne	31d4c <g_unichar_xdigit_value@plt+0x1dee8>
   31d8c:	mov	r0, r5
   31d90:	mov	r1, #0
   31d94:	bl	13594 <g_list_append@plt>
   31d98:	ldr	r4, [r4, #4]
   31d9c:	cmp	r4, #0
   31da0:	mov	r5, r0
   31da4:	bne	31d80 <g_unichar_xdigit_value@plt+0x1df1c>
   31da8:	mov	r0, r5
   31dac:	pop	{r4, r5, r6, pc}
   31db0:	ldr	r1, [pc, #24]	; 31dd0 <g_unichar_xdigit_value@plt+0x1df6c>
   31db4:	ldr	r2, [pc, #24]	; 31dd4 <g_unichar_xdigit_value@plt+0x1df70>
   31db8:	add	r1, pc, r1
   31dbc:	add	r2, pc, r2
   31dc0:	add	r1, r1, #128	; 0x80
   31dc4:	bl	13450 <g_return_if_fail_warning@plt>
   31dc8:	mov	r0, r4
   31dcc:	pop	{r4, r5, r6, pc}
   31dd0:	andeq	fp, r0, r4, lsr r2
   31dd4:	andeq	r6, r0, r8, lsr #6
   31dd8:	mov	r1, #0
   31ddc:	b	133e4 <g_object_new@plt>
   31de0:	ldr	r0, [pc, #104]	; 31e50 <g_unichar_xdigit_value@plt+0x1dfec>
   31de4:	push	{r3, r4, r5, lr}
   31de8:	add	r0, pc, r0
   31dec:	dmb	sy
   31df0:	ldr	r4, [r0, #24]
   31df4:	dmb	sy
   31df8:	cmp	r4, #0
   31dfc:	beq	31e10 <g_unichar_xdigit_value@plt+0x1dfac>
   31e00:	ldr	r3, [pc, #76]	; 31e54 <g_unichar_xdigit_value@plt+0x1dff0>
   31e04:	add	r3, pc, r3
   31e08:	ldr	r0, [r3, #24]
   31e0c:	pop	{r3, r4, r5, pc}
   31e10:	add	r5, r0, #24
   31e14:	mov	r0, r5
   31e18:	bl	138ac <g_once_init_enter@plt>
   31e1c:	cmp	r0, #0
   31e20:	beq	31e00 <g_unichar_xdigit_value@plt+0x1df9c>
   31e24:	ldr	r1, [pc, #44]	; 31e58 <g_unichar_xdigit_value@plt+0x1dff4>
   31e28:	mov	r3, r4
   31e2c:	ldr	r2, [pc, #40]	; 31e5c <g_unichar_xdigit_value@plt+0x1dff8>
   31e30:	mov	r0, #80	; 0x50
   31e34:	add	r1, pc, r1
   31e38:	add	r2, pc, r2
   31e3c:	bl	13438 <g_type_register_static@plt>
   31e40:	mov	r1, r0
   31e44:	mov	r0, r5
   31e48:	bl	13bac <g_once_init_leave@plt>
   31e4c:	b	31e00 <g_unichar_xdigit_value@plt+0x1df9c>
   31e50:	strdeq	pc, [r1], -r4
   31e54:	ldrdeq	pc, [r1], -r8
   31e58:	andeq	fp, r0, r8, lsr #8
   31e5c:	andeq	lr, r1, r8, ror sp
   31e60:	push	{r3, lr}
   31e64:	bl	31de0 <g_unichar_xdigit_value@plt+0x1df7c>
   31e68:	pop	{r3, lr}
   31e6c:	b	31dd8 <g_unichar_xdigit_value@plt+0x1df74>
   31e70:	push	{r4, lr}
   31e74:	mov	r4, r0
   31e78:	bl	31de0 <g_unichar_xdigit_value@plt+0x1df7c>
   31e7c:	mov	r1, r0
   31e80:	mov	r0, r4
   31e84:	bl	13870 <g_type_instance_get_private@plt>
   31e88:	str	r0, [r4, #12]
   31e8c:	pop	{r4, pc}
   31e90:	push	{r4, r5, r6, lr}
   31e94:	sub	sp, sp, #24
   31e98:	mov	r4, r0
   31e9c:	bl	13c60 <g_type_class_peek_parent@plt>
   31ea0:	ldr	r5, [pc, #124]	; 31f24 <g_unichar_xdigit_value@plt+0x1e0c0>
   31ea4:	mov	r1, #4
   31ea8:	ldr	r6, [pc, #120]	; 31f28 <g_unichar_xdigit_value@plt+0x1e0c4>
   31eac:	add	r5, pc, r5
   31eb0:	add	r6, pc, r6
   31eb4:	str	r0, [r5, #28]
   31eb8:	mov	r0, r4
   31ebc:	bl	13a5c <g_type_class_add_private@plt>
   31ec0:	mov	r1, #80	; 0x50
   31ec4:	mov	r0, r4
   31ec8:	bl	13db0 <g_type_check_class_cast@plt>
   31ecc:	ldr	r3, [pc, #88]	; 31f2c <g_unichar_xdigit_value@plt+0x1e0c8>
   31ed0:	add	r3, pc, r3
   31ed4:	str	r3, [r0, #24]
   31ed8:	bl	31de0 <g_unichar_xdigit_value@plt+0x1df7c>
   31edc:	ldr	ip, [pc, #76]	; 31f30 <g_unichar_xdigit_value@plt+0x1e0cc>
   31ee0:	mov	r2, #0
   31ee4:	str	r2, [sp]
   31ee8:	str	r2, [sp, #4]
   31eec:	mov	r3, r2
   31ef0:	mov	r1, r0
   31ef4:	ldr	r0, [r6, ip]
   31ef8:	mov	ip, #4
   31efc:	str	r2, [sp, #16]
   31f00:	str	ip, [sp, #12]
   31f04:	mov	r2, #2
   31f08:	str	r0, [sp, #8]
   31f0c:	ldr	r0, [pc, #32]	; 31f34 <g_unichar_xdigit_value@plt+0x1e0d0>
   31f10:	add	r0, pc, r0
   31f14:	bl	137b0 <g_signal_new@plt>
   31f18:	str	r0, [r5, #32]
   31f1c:	add	sp, sp, #24
   31f20:	pop	{r4, r5, r6, pc}
   31f24:	andeq	pc, r1, r0, lsr r7	; <UNPREDICTABLE>
   31f28:	andeq	pc, r1, r8, asr #2
   31f2c:	andeq	r0, r0, r0, rrx
   31f30:	andeq	r0, r0, r0, asr #7
   31f34:	strdeq	fp, [r0], -r8
   31f38:	push	{r3, r4, r5, lr}
   31f3c:	mov	r4, r0
   31f40:	bl	31de0 <g_unichar_xdigit_value@plt+0x1df7c>
   31f44:	mov	r1, r0
   31f48:	mov	r0, r4
   31f4c:	bl	13510 <g_type_check_instance_cast@plt>
   31f50:	ldr	r3, [r0, #12]
   31f54:	mov	r5, r0
   31f58:	ldr	r0, [r3]
   31f5c:	cmp	r0, #0
   31f60:	beq	31f7c <g_unichar_xdigit_value@plt+0x1e118>
   31f64:	ldr	r1, [pc, #52]	; 31fa0 <g_unichar_xdigit_value@plt+0x1e13c>
   31f68:	add	r1, pc, r1
   31f6c:	bl	1396c <g_list_free_full@plt>
   31f70:	ldr	r3, [r5, #12]
   31f74:	mov	r2, #0
   31f78:	str	r2, [r3]
   31f7c:	ldr	r3, [pc, #32]	; 31fa4 <g_unichar_xdigit_value@plt+0x1e140>
   31f80:	mov	r1, #80	; 0x50
   31f84:	add	r3, pc, r3
   31f88:	ldr	r0, [r3, #28]
   31f8c:	bl	13db0 <g_type_check_class_cast@plt>
   31f90:	ldr	r3, [r0, #24]
   31f94:	mov	r0, r4
   31f98:	blx	r3
   31f9c:	pop	{r3, r4, r5, pc}
   31fa0:			; <UNDEFINED> instruction: 0xfffff8b0
   31fa4:	andeq	pc, r1, r8, asr r6	; <UNPREDICTABLE>
   31fa8:	push	{r3, r4, r5, r6, r7, lr}
   31fac:	subs	r7, r1, #0
   31fb0:	mov	r5, r2
   31fb4:	mov	r6, r3
   31fb8:	beq	32040 <g_unichar_xdigit_value@plt+0x1e1dc>
   31fbc:	cmp	r2, #0
   31fc0:	beq	32064 <g_unichar_xdigit_value@plt+0x1e200>
   31fc4:	cmp	r3, #0
   31fc8:	beq	32088 <g_unichar_xdigit_value@plt+0x1e224>
   31fcc:	mov	r1, #0
   31fd0:	bl	133e4 <g_object_new@plt>
   31fd4:	mov	r4, r0
   31fd8:	mov	r0, r7
   31fdc:	bl	136f0 <g_strdup@plt>
   31fe0:	ldr	r3, [r4, #12]
   31fe4:	mov	r7, r0
   31fe8:	ldr	r0, [r3, #4]
   31fec:	bl	1399c <g_free@plt>
   31ff0:	ldr	r3, [r4, #12]
   31ff4:	mov	r0, r5
   31ff8:	str	r7, [r3, #4]
   31ffc:	bl	136f0 <g_strdup@plt>
   32000:	ldr	r3, [r4, #12]
   32004:	mov	r5, r0
   32008:	ldr	r0, [r3, #8]
   3200c:	bl	1399c <g_free@plt>
   32010:	ldr	r3, [r4, #12]
   32014:	mov	r0, r6
   32018:	str	r5, [r3, #8]
   3201c:	bl	136f0 <g_strdup@plt>
   32020:	ldr	r3, [r4, #12]
   32024:	mov	r5, r0
   32028:	ldr	r0, [r3, #12]
   3202c:	bl	1399c <g_free@plt>
   32030:	ldr	r3, [r4, #12]
   32034:	mov	r0, r4
   32038:	str	r5, [r3, #12]
   3203c:	pop	{r3, r4, r5, r6, r7, pc}
   32040:	ldr	r1, [pc, #100]	; 320ac <g_unichar_xdigit_value@plt+0x1e248>
   32044:	mov	r0, r7
   32048:	ldr	r2, [pc, #96]	; 320b0 <g_unichar_xdigit_value@plt+0x1e24c>
   3204c:	add	r1, pc, r1
   32050:	add	r2, pc, r2
   32054:	add	r1, r1, #160	; 0xa0
   32058:	bl	13450 <g_return_if_fail_warning@plt>
   3205c:	mov	r0, r7
   32060:	pop	{r3, r4, r5, r6, r7, pc}
   32064:	ldr	r1, [pc, #72]	; 320b4 <g_unichar_xdigit_value@plt+0x1e250>
   32068:	mov	r0, r2
   3206c:	ldr	r2, [pc, #68]	; 320b8 <g_unichar_xdigit_value@plt+0x1e254>
   32070:	add	r1, pc, r1
   32074:	add	r2, pc, r2
   32078:	add	r1, r1, #160	; 0xa0
   3207c:	bl	13450 <g_return_if_fail_warning@plt>
   32080:	mov	r0, r5
   32084:	pop	{r3, r4, r5, r6, r7, pc}
   32088:	ldr	r1, [pc, #44]	; 320bc <g_unichar_xdigit_value@plt+0x1e258>
   3208c:	mov	r0, r3
   32090:	ldr	r2, [pc, #40]	; 320c0 <g_unichar_xdigit_value@plt+0x1e25c>
   32094:	add	r1, pc, r1
   32098:	add	r2, pc, r2
   3209c:	add	r1, r1, #160	; 0xa0
   320a0:	bl	13450 <g_return_if_fail_warning@plt>
   320a4:	mov	r0, r6
   320a8:	pop	{r3, r4, r5, r6, r7, pc}
   320ac:	andeq	sl, r0, r0, lsr #31
   320b0:	andeq	r9, r0, r0, lsl #11
   320b4:	andeq	sl, r0, ip, ror pc
   320b8:	andeq	r9, r0, r4, asr r5
   320bc:	andeq	sl, r0, r8, asr pc
   320c0:			; <UNDEFINED> instruction: 0x000095bc
   320c4:	push	{r3, r4, r5, lr}
   320c8:	subs	r4, r0, #0
   320cc:	beq	3210c <g_unichar_xdigit_value@plt+0x1e2a8>
   320d0:	cmp	r1, #0
   320d4:	beq	32128 <g_unichar_xdigit_value@plt+0x1e2c4>
   320d8:	mov	r0, r1
   320dc:	bl	133f0 <g_object_ref@plt>
   320e0:	ldr	r3, [r4, #12]
   320e4:	mov	r5, r0
   320e8:	ldr	r0, [r3]
   320ec:	cmp	r0, #0
   320f0:	beq	32104 <g_unichar_xdigit_value@plt+0x1e2a0>
   320f4:	bl	13b94 <g_object_unref@plt>
   320f8:	ldr	r3, [r4, #12]
   320fc:	mov	r2, #0
   32100:	str	r2, [r3]
   32104:	str	r5, [r3]
   32108:	pop	{r3, r4, r5, pc}
   3210c:	ldr	r1, [pc, #52]	; 32148 <g_unichar_xdigit_value@plt+0x1e2e4>
   32110:	ldr	r2, [pc, #52]	; 3214c <g_unichar_xdigit_value@plt+0x1e2e8>
   32114:	add	r1, pc, r1
   32118:	add	r2, pc, r2
   3211c:	add	r1, r1, #180	; 0xb4
   32120:	pop	{r3, r4, r5, lr}
   32124:	b	13450 <g_return_if_fail_warning@plt>
   32128:	ldr	r3, [pc, #32]	; 32150 <g_unichar_xdigit_value@plt+0x1e2ec>
   3212c:	mov	r0, r1
   32130:	ldr	r2, [pc, #28]	; 32154 <g_unichar_xdigit_value@plt+0x1e2f0>
   32134:	add	r3, pc, r3
   32138:	add	r1, r3, #180	; 0xb4
   3213c:	add	r2, pc, r2
   32140:	pop	{r3, r4, r5, lr}
   32144:	b	13450 <g_return_if_fail_warning@plt>
   32148:	ldrdeq	sl, [r0], -r8
   3214c:	andeq	r5, r0, ip, asr #31
   32150:			; <UNDEFINED> instruction: 0x0000aeb8
   32154:	andeq	fp, r0, r0, lsr r1
   32158:	push	{r3, lr}
   3215c:	subs	r3, r0, #0
   32160:	beq	3217c <g_unichar_xdigit_value@plt+0x1e318>
   32164:	ldr	r3, [r3, #12]
   32168:	ldr	r0, [r3]
   3216c:	cmp	r0, #0
   32170:	beq	32194 <g_unichar_xdigit_value@plt+0x1e330>
   32174:	pop	{r3, lr}
   32178:	b	133f0 <g_object_ref@plt>
   3217c:	ldr	r1, [pc, #24]	; 3219c <g_unichar_xdigit_value@plt+0x1e338>
   32180:	ldr	r2, [pc, #24]	; 321a0 <g_unichar_xdigit_value@plt+0x1e33c>
   32184:	add	r1, pc, r1
   32188:	add	r2, pc, r2
   3218c:	add	r1, r1, #200	; 0xc8
   32190:	bl	13450 <g_return_if_fail_warning@plt>
   32194:	mov	r0, #0
   32198:	pop	{r3, pc}
   3219c:	andeq	sl, r0, r8, ror #28
   321a0:	andeq	r5, r0, ip, asr pc
   321a4:	push	{r4, lr}
   321a8:	subs	r4, r0, #0
   321ac:	beq	321c0 <g_unichar_xdigit_value@plt+0x1e35c>
   321b0:	ldr	r3, [r4, #12]
   321b4:	pop	{r4, lr}
   321b8:	ldr	r0, [r3, #4]
   321bc:	b	136f0 <g_strdup@plt>
   321c0:	ldr	r1, [pc, #24]	; 321e0 <g_unichar_xdigit_value@plt+0x1e37c>
   321c4:	ldr	r2, [pc, #24]	; 321e4 <g_unichar_xdigit_value@plt+0x1e380>
   321c8:	add	r1, pc, r1
   321cc:	add	r2, pc, r2
   321d0:	add	r1, r1, #220	; 0xdc
   321d4:	bl	13450 <g_return_if_fail_warning@plt>
   321d8:	mov	r0, r4
   321dc:	pop	{r4, pc}
   321e0:	andeq	sl, r0, r4, lsr #28
   321e4:	andeq	r5, r0, r8, lsl pc
   321e8:	push	{r4, r5, r6, r7, r8, lr}
   321ec:	subs	r5, r0, #0
   321f0:	mov	r8, r1
   321f4:	beq	322f8 <g_unichar_xdigit_value@plt+0x1e494>
   321f8:	cmp	r1, #0
   321fc:	beq	32318 <g_unichar_xdigit_value@plt+0x1e4b4>
   32200:	ldr	r3, [r5, #12]
   32204:	ldr	r4, [r3]
   32208:	cmp	r4, #0
   3220c:	bne	32260 <g_unichar_xdigit_value@plt+0x1e3fc>
   32210:	b	322d0 <g_unichar_xdigit_value@plt+0x1e46c>
   32214:	bl	133f0 <g_object_ref@plt>
   32218:	mov	r5, r0
   3221c:	bl	321a4 <g_unichar_xdigit_value@plt+0x1e340>
   32220:	mov	r6, r0
   32224:	mov	r0, r8
   32228:	mov	r1, r6
   3222c:	bl	13e58 <g_strcmp0@plt>
   32230:	mov	r7, r0
   32234:	mov	r0, r6
   32238:	bl	1399c <g_free@plt>
   3223c:	cmp	r7, #0
   32240:	mov	r0, r5
   32244:	beq	3229c <g_unichar_xdigit_value@plt+0x1e438>
   32248:	cmp	r5, #0
   3224c:	beq	32254 <g_unichar_xdigit_value@plt+0x1e3f0>
   32250:	bl	13b94 <g_object_unref@plt>
   32254:	ldr	r4, [r4, #4]
   32258:	cmp	r4, #0
   3225c:	beq	322d0 <g_unichar_xdigit_value@plt+0x1e46c>
   32260:	ldr	r3, [r4]
   32264:	cmp	r3, #0
   32268:	mov	r0, r3
   3226c:	bne	32214 <g_unichar_xdigit_value@plt+0x1e3b0>
   32270:	mov	r0, r3
   32274:	bl	321a4 <g_unichar_xdigit_value@plt+0x1e340>
   32278:	mov	r6, r0
   3227c:	mov	r0, r8
   32280:	mov	r1, r6
   32284:	bl	13e58 <g_strcmp0@plt>
   32288:	mov	r5, r0
   3228c:	mov	r0, r6
   32290:	bl	1399c <g_free@plt>
   32294:	cmp	r5, #0
   32298:	bne	32254 <g_unichar_xdigit_value@plt+0x1e3f0>
   3229c:	mov	r0, r5
   322a0:	bl	32158 <g_unichar_xdigit_value@plt+0x1e2f4>
   322a4:	subs	r4, r0, #0
   322a8:	beq	322c0 <g_unichar_xdigit_value@plt+0x1e45c>
   322ac:	bl	24e34 <g_unichar_xdigit_value@plt+0x10fd0>
   322b0:	cmp	r0, #0
   322b4:	beq	322d8 <g_unichar_xdigit_value@plt+0x1e474>
   322b8:	mov	r0, r4
   322bc:	bl	13b94 <g_object_unref@plt>
   322c0:	cmp	r5, #0
   322c4:	beq	322d0 <g_unichar_xdigit_value@plt+0x1e46c>
   322c8:	mov	r0, r5
   322cc:	bl	13b94 <g_object_unref@plt>
   322d0:	mov	r0, #0
   322d4:	pop	{r4, r5, r6, r7, r8, pc}
   322d8:	mov	r0, r4
   322dc:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   322e0:	cmp	r0, #0
   322e4:	bne	322b8 <g_unichar_xdigit_value@plt+0x1e454>
   322e8:	mov	r0, r4
   322ec:	bl	13b94 <g_object_unref@plt>
   322f0:	mov	r0, r5
   322f4:	pop	{r4, r5, r6, r7, r8, pc}
   322f8:	ldr	r1, [pc, #60]	; 3233c <g_unichar_xdigit_value@plt+0x1e4d8>
   322fc:	ldr	r2, [pc, #60]	; 32340 <g_unichar_xdigit_value@plt+0x1e4dc>
   32300:	add	r1, pc, r1
   32304:	add	r2, pc, r2
   32308:	add	r1, r1, #240	; 0xf0
   3230c:	bl	13450 <g_return_if_fail_warning@plt>
   32310:	mov	r0, r5
   32314:	pop	{r4, r5, r6, r7, r8, pc}
   32318:	ldr	r1, [pc, #36]	; 32344 <g_unichar_xdigit_value@plt+0x1e4e0>
   3231c:	mov	r0, r8
   32320:	ldr	r2, [pc, #32]	; 32348 <g_unichar_xdigit_value@plt+0x1e4e4>
   32324:	add	r1, pc, r1
   32328:	add	r2, pc, r2
   3232c:	add	r1, r1, #240	; 0xf0
   32330:	bl	13450 <g_return_if_fail_warning@plt>
   32334:	mov	r0, r8
   32338:	pop	{r4, r5, r6, r7, r8, pc}
   3233c:	andeq	sl, r0, ip, ror #25
   32340:	andeq	r5, r0, r0, ror #27
   32344:	andeq	sl, r0, r8, asr #25
   32348:	andeq	r9, r0, r8, lsr #5
   3234c:	push	{r4, lr}
   32350:	subs	r4, r0, #0
   32354:	beq	32368 <g_unichar_xdigit_value@plt+0x1e504>
   32358:	ldr	r3, [r4, #12]
   3235c:	pop	{r4, lr}
   32360:	ldr	r0, [r3, #8]
   32364:	b	136f0 <g_strdup@plt>
   32368:	ldr	r1, [pc, #24]	; 32388 <g_unichar_xdigit_value@plt+0x1e524>
   3236c:	ldr	r2, [pc, #24]	; 3238c <g_unichar_xdigit_value@plt+0x1e528>
   32370:	add	r1, pc, r1
   32374:	add	r2, pc, r2
   32378:	add	r1, r1, #272	; 0x110
   3237c:	bl	13450 <g_return_if_fail_warning@plt>
   32380:	mov	r0, r4
   32384:	pop	{r4, pc}
   32388:	andeq	sl, r0, ip, ror ip
   3238c:	andeq	r5, r0, r0, ror sp
   32390:	push	{r4, lr}
   32394:	subs	r4, r0, #0
   32398:	beq	323ac <g_unichar_xdigit_value@plt+0x1e548>
   3239c:	ldr	r3, [r4, #12]
   323a0:	pop	{r4, lr}
   323a4:	ldr	r0, [r3, #12]
   323a8:	b	136f0 <g_strdup@plt>
   323ac:	ldr	r1, [pc, #24]	; 323cc <g_unichar_xdigit_value@plt+0x1e568>
   323b0:	ldr	r2, [pc, #24]	; 323d0 <g_unichar_xdigit_value@plt+0x1e56c>
   323b4:	add	r1, pc, r1
   323b8:	add	r2, pc, r2
   323bc:	add	r1, r1, #300	; 0x12c
   323c0:	bl	13450 <g_return_if_fail_warning@plt>
   323c4:	mov	r0, r4
   323c8:	pop	{r4, pc}
   323cc:	andeq	sl, r0, r8, lsr ip
   323d0:	andeq	r5, r0, ip, lsr #26
   323d4:	push	{r4, lr}
   323d8:	subs	r4, r0, #0
   323dc:	beq	323f0 <g_unichar_xdigit_value@plt+0x1e58c>
   323e0:	ldr	r3, [r4, #12]
   323e4:	pop	{r4, lr}
   323e8:	ldr	r0, [r3, #16]
   323ec:	b	136f0 <g_strdup@plt>
   323f0:	ldr	r1, [pc, #24]	; 32410 <g_unichar_xdigit_value@plt+0x1e5ac>
   323f4:	ldr	r2, [pc, #24]	; 32414 <g_unichar_xdigit_value@plt+0x1e5b0>
   323f8:	add	r1, pc, r1
   323fc:	add	r2, pc, r2
   32400:	add	r1, r1, #320	; 0x140
   32404:	bl	13450 <g_return_if_fail_warning@plt>
   32408:	mov	r0, r4
   3240c:	pop	{r4, pc}
   32410:	strdeq	sl, [r0], -r4
   32414:	andeq	r5, r0, r8, ror #25
   32418:	push	{r4, r5, r6, lr}
   3241c:	subs	r4, r0, #0
   32420:	mov	r5, r1
   32424:	beq	32468 <g_unichar_xdigit_value@plt+0x1e604>
   32428:	mov	r0, r1
   3242c:	bl	136f0 <g_strdup@plt>
   32430:	ldr	r3, [r4, #12]
   32434:	mov	r6, r0
   32438:	ldr	r0, [r3, #16]
   3243c:	bl	1399c <g_free@plt>
   32440:	ldr	r3, [r4, #12]
   32444:	mov	r0, r5
   32448:	str	r6, [r3, #16]
   3244c:	bl	1399c <g_free@plt>
   32450:	ldr	r3, [pc, #44]	; 32484 <g_unichar_xdigit_value@plt+0x1e620>
   32454:	mov	r0, r4
   32458:	add	r3, pc, r3
   3245c:	pop	{r4, r5, r6, lr}
   32460:	ldr	r1, [r3, #20]
   32464:	b	13984 <g_object_notify_by_pspec@plt>
   32468:	ldr	r1, [pc, #24]	; 32488 <g_unichar_xdigit_value@plt+0x1e624>
   3246c:	ldr	r2, [pc, #24]	; 3248c <g_unichar_xdigit_value@plt+0x1e628>
   32470:	add	r1, pc, r1
   32474:	add	r2, pc, r2
   32478:	add	r1, r1, #340	; 0x154
   3247c:	pop	{r4, r5, r6, lr}
   32480:	b	13450 <g_return_if_fail_warning@plt>
   32484:	andeq	pc, r1, r4, lsl #3
   32488:	andeq	sl, r0, ip, ror fp
   3248c:	andeq	r5, r0, r0, ror ip
   32490:	ldr	r0, [pc, #108]	; 32504 <g_unichar_xdigit_value@plt+0x1e6a0>
   32494:	push	{r3, r4, r5, lr}
   32498:	add	r0, pc, r0
   3249c:	dmb	sy
   324a0:	ldr	r4, [r0, #36]	; 0x24
   324a4:	dmb	sy
   324a8:	cmp	r4, #0
   324ac:	beq	324c0 <g_unichar_xdigit_value@plt+0x1e65c>
   324b0:	ldr	r3, [pc, #80]	; 32508 <g_unichar_xdigit_value@plt+0x1e6a4>
   324b4:	add	r3, pc, r3
   324b8:	ldr	r0, [r3, #36]	; 0x24
   324bc:	pop	{r3, r4, r5, pc}
   324c0:	add	r5, r0, #36	; 0x24
   324c4:	mov	r0, r5
   324c8:	bl	138ac <g_once_init_enter@plt>
   324cc:	cmp	r0, #0
   324d0:	beq	324b0 <g_unichar_xdigit_value@plt+0x1e64c>
   324d4:	ldr	r2, [pc, #48]	; 3250c <g_unichar_xdigit_value@plt+0x1e6a8>
   324d8:	mov	r3, r4
   324dc:	ldr	r1, [pc, #44]	; 32510 <g_unichar_xdigit_value@plt+0x1e6ac>
   324e0:	mov	r0, #80	; 0x50
   324e4:	add	r2, pc, r2
   324e8:	add	r1, pc, r1
   324ec:	add	r2, r2, #36	; 0x24
   324f0:	bl	13438 <g_type_register_static@plt>
   324f4:	mov	r1, r0
   324f8:	mov	r0, r5
   324fc:	bl	13bac <g_once_init_leave@plt>
   32500:	b	324b0 <g_unichar_xdigit_value@plt+0x1e64c>
   32504:	andeq	pc, r1, r4, asr #2
   32508:	andeq	pc, r1, r8, lsr #2
   3250c:	andeq	lr, r1, ip, asr #13
   32510:	andeq	sl, r0, ip, ror sl
   32514:	push	{r4, r5, r6, lr}
   32518:	mov	r5, r1
   3251c:	mov	r4, r2
   32520:	mov	r6, r0
   32524:	bl	32490 <g_unichar_xdigit_value@plt+0x1e62c>
   32528:	mov	r1, r6
   3252c:	mov	r2, r5
   32530:	mov	r3, r4
   32534:	pop	{r4, r5, r6, lr}
   32538:	b	31fa8 <g_unichar_xdigit_value@plt+0x1e144>
   3253c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   32540:	subs	sl, r0, #0
   32544:	mov	r8, r1
   32548:	mov	r9, r2
   3254c:	beq	32684 <g_unichar_xdigit_value@plt+0x1e820>
   32550:	cmp	r1, #0
   32554:	beq	326a8 <g_unichar_xdigit_value@plt+0x1e844>
   32558:	cmp	r2, #0
   3255c:	beq	326cc <g_unichar_xdigit_value@plt+0x1e868>
   32560:	ldr	r3, [sl, #12]
   32564:	ldr	r4, [r3]
   32568:	cmp	r4, #0
   3256c:	bne	325bc <g_unichar_xdigit_value@plt+0x1e758>
   32570:	b	32614 <g_unichar_xdigit_value@plt+0x1e7b0>
   32574:	bl	133f0 <g_object_ref@plt>
   32578:	mov	r5, r0
   3257c:	bl	321a4 <g_unichar_xdigit_value@plt+0x1e340>
   32580:	mov	r1, r8
   32584:	mov	r6, r0
   32588:	bl	13e58 <g_strcmp0@plt>
   3258c:	mov	r7, r0
   32590:	mov	r0, r6
   32594:	bl	1399c <g_free@plt>
   32598:	cmp	r7, #0
   3259c:	mov	r0, r5
   325a0:	beq	325f4 <g_unichar_xdigit_value@plt+0x1e790>
   325a4:	cmp	r5, #0
   325a8:	beq	325b0 <g_unichar_xdigit_value@plt+0x1e74c>
   325ac:	bl	13b94 <g_object_unref@plt>
   325b0:	ldr	r4, [r4, #4]
   325b4:	cmp	r4, #0
   325b8:	beq	32614 <g_unichar_xdigit_value@plt+0x1e7b0>
   325bc:	ldr	ip, [r4]
   325c0:	cmp	ip, #0
   325c4:	mov	r0, ip
   325c8:	bne	32574 <g_unichar_xdigit_value@plt+0x1e710>
   325cc:	mov	r0, ip
   325d0:	bl	321a4 <g_unichar_xdigit_value@plt+0x1e340>
   325d4:	mov	r1, r8
   325d8:	mov	r6, r0
   325dc:	bl	13e58 <g_strcmp0@plt>
   325e0:	mov	r5, r0
   325e4:	mov	r0, r6
   325e8:	bl	1399c <g_free@plt>
   325ec:	cmp	r5, #0
   325f0:	bne	325b0 <g_unichar_xdigit_value@plt+0x1e74c>
   325f4:	mov	r0, r9
   325f8:	mov	r8, r5
   325fc:	bl	136f0 <g_strdup@plt>
   32600:	mov	r1, r0
   32604:	mov	r0, r5
   32608:	bl	32418 <g_unichar_xdigit_value@plt+0x1e5b4>
   3260c:	mov	r0, r8
   32610:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32614:	ldr	r2, [pc, #216]	; 326f4 <g_unichar_xdigit_value@plt+0x1e890>
   32618:	mov	r3, r8
   3261c:	mov	r0, #0
   32620:	mov	r1, #16
   32624:	add	r2, pc, r2
   32628:	bl	13558 <g_log@plt>
   3262c:	mov	r1, r8
   32630:	mov	r2, r8
   32634:	mov	r0, r8
   32638:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   3263c:	mov	r8, r0
   32640:	mov	r0, r9
   32644:	bl	136f0 <g_strdup@plt>
   32648:	mov	r1, r0
   3264c:	mov	r0, r8
   32650:	bl	32418 <g_unichar_xdigit_value@plt+0x1e5b4>
   32654:	cmp	r8, #0
   32658:	moveq	r1, r8
   3265c:	beq	3266c <g_unichar_xdigit_value@plt+0x1e808>
   32660:	mov	r0, r8
   32664:	bl	133f0 <g_object_ref@plt>
   32668:	mov	r1, r0
   3266c:	ldr	r4, [sl, #12]
   32670:	ldr	r0, [r4]
   32674:	bl	13594 <g_list_append@plt>
   32678:	str	r0, [r4]
   3267c:	mov	r0, r8
   32680:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32684:	ldr	r1, [pc, #108]	; 326f8 <g_unichar_xdigit_value@plt+0x1e894>
   32688:	mov	r8, sl
   3268c:	ldr	r2, [pc, #104]	; 326fc <g_unichar_xdigit_value@plt+0x1e898>
   32690:	add	r1, pc, r1
   32694:	add	r2, pc, r2
   32698:	add	r1, r1, #360	; 0x168
   3269c:	bl	13450 <g_return_if_fail_warning@plt>
   326a0:	mov	r0, r8
   326a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   326a8:	ldr	r1, [pc, #80]	; 32700 <g_unichar_xdigit_value@plt+0x1e89c>
   326ac:	mov	r0, r8
   326b0:	ldr	r2, [pc, #76]	; 32704 <g_unichar_xdigit_value@plt+0x1e8a0>
   326b4:	add	r1, pc, r1
   326b8:	add	r2, pc, r2
   326bc:	add	r1, r1, #360	; 0x168
   326c0:	bl	13450 <g_return_if_fail_warning@plt>
   326c4:	mov	r0, r8
   326c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   326cc:	ldr	r1, [pc, #52]	; 32708 <g_unichar_xdigit_value@plt+0x1e8a4>
   326d0:	mov	r0, r2
   326d4:	ldr	r2, [pc, #48]	; 3270c <g_unichar_xdigit_value@plt+0x1e8a8>
   326d8:	mov	r8, r9
   326dc:	add	r1, pc, r1
   326e0:	add	r2, pc, r2
   326e4:	add	r1, r1, #360	; 0x168
   326e8:	bl	13450 <g_return_if_fail_warning@plt>
   326ec:	mov	r0, r8
   326f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   326f4:	andeq	sl, r0, r8, asr ip
   326f8:	andeq	sl, r0, ip, asr r9
   326fc:	andeq	r5, r0, r0, asr sl
   32700:	andeq	sl, r0, r8, lsr r9
   32704:	andeq	sl, r0, r0, lsl #24
   32708:	andeq	sl, r0, r0, lsl r9
   3270c:	andeq	sl, r0, ip, ror #23
   32710:	push	{r4, r5, r6, r7, lr}
   32714:	subs	r6, r0, #0
   32718:	sub	sp, sp, #12
   3271c:	mov	r4, r1
   32720:	mov	r5, r2
   32724:	mov	r7, r3
   32728:	beq	327f4 <g_unichar_xdigit_value@plt+0x1e990>
   3272c:	cmp	r1, #0
   32730:	beq	32814 <g_unichar_xdigit_value@plt+0x1e9b0>
   32734:	cmp	r2, #0
   32738:	beq	32838 <g_unichar_xdigit_value@plt+0x1e9d4>
   3273c:	cmp	r3, #0
   32740:	beq	3285c <g_unichar_xdigit_value@plt+0x1e9f8>
   32744:	ldr	r2, [pc, #316]	; 32888 <g_unichar_xdigit_value@plt+0x1ea24>
   32748:	mov	r3, r5
   3274c:	str	r1, [sp]
   32750:	mov	r0, #0
   32754:	mov	r1, #128	; 0x80
   32758:	add	r2, pc, r2
   3275c:	bl	13558 <g_log@plt>
   32760:	ldr	r2, [pc, #292]	; 3288c <g_unichar_xdigit_value@plt+0x1ea28>
   32764:	mov	r1, r4
   32768:	mov	r0, r6
   3276c:	add	r2, pc, r2
   32770:	bl	3253c <g_unichar_xdigit_value@plt+0x1e6d8>
   32774:	mov	r1, #10
   32778:	mov	r4, r0
   3277c:	mov	r0, r5
   32780:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   32784:	mov	r6, r0
   32788:	mov	r0, r7
   3278c:	bl	32158 <g_unichar_xdigit_value@plt+0x1e2f4>
   32790:	mov	r1, r6
   32794:	mov	r7, r0
   32798:	bl	26954 <g_unichar_xdigit_value@plt+0x12af0>
   3279c:	cmp	r7, #0
   327a0:	mov	r5, r0
   327a4:	beq	327b0 <g_unichar_xdigit_value@plt+0x1e94c>
   327a8:	mov	r0, r7
   327ac:	bl	13b94 <g_object_unref@plt>
   327b0:	mov	r0, r4
   327b4:	mov	r1, r5
   327b8:	bl	320c4 <g_unichar_xdigit_value@plt+0x1e260>
   327bc:	cmp	r5, #0
   327c0:	beq	327cc <g_unichar_xdigit_value@plt+0x1e968>
   327c4:	mov	r0, r5
   327c8:	bl	13b94 <g_object_unref@plt>
   327cc:	cmp	r6, #0
   327d0:	beq	327dc <g_unichar_xdigit_value@plt+0x1e978>
   327d4:	mov	r0, r6
   327d8:	bl	13b94 <g_object_unref@plt>
   327dc:	cmp	r4, #0
   327e0:	beq	32880 <g_unichar_xdigit_value@plt+0x1ea1c>
   327e4:	mov	r0, r4
   327e8:	add	sp, sp, #12
   327ec:	pop	{r4, r5, r6, r7, lr}
   327f0:	b	13b94 <g_object_unref@plt>
   327f4:	ldr	r1, [pc, #148]	; 32890 <g_unichar_xdigit_value@plt+0x1ea2c>
   327f8:	ldr	r2, [pc, #148]	; 32894 <g_unichar_xdigit_value@plt+0x1ea30>
   327fc:	add	r1, pc, r1
   32800:	add	r2, pc, r2
   32804:	add	r1, r1, #392	; 0x188
   32808:	add	sp, sp, #12
   3280c:	pop	{r4, r5, r6, r7, lr}
   32810:	b	13450 <g_return_if_fail_warning@plt>
   32814:	ldr	r1, [pc, #124]	; 32898 <g_unichar_xdigit_value@plt+0x1ea34>
   32818:	mov	r0, r4
   3281c:	ldr	r2, [pc, #120]	; 3289c <g_unichar_xdigit_value@plt+0x1ea38>
   32820:	add	r1, pc, r1
   32824:	add	r2, pc, r2
   32828:	add	r1, r1, #392	; 0x188
   3282c:	add	sp, sp, #12
   32830:	pop	{r4, r5, r6, r7, lr}
   32834:	b	13450 <g_return_if_fail_warning@plt>
   32838:	ldr	r1, [pc, #96]	; 328a0 <g_unichar_xdigit_value@plt+0x1ea3c>
   3283c:	mov	r0, r2
   32840:	ldr	r2, [pc, #92]	; 328a4 <g_unichar_xdigit_value@plt+0x1ea40>
   32844:	add	r1, pc, r1
   32848:	add	r2, pc, r2
   3284c:	add	r1, r1, #392	; 0x188
   32850:	add	sp, sp, #12
   32854:	pop	{r4, r5, r6, r7, lr}
   32858:	b	13450 <g_return_if_fail_warning@plt>
   3285c:	ldr	r1, [pc, #68]	; 328a8 <g_unichar_xdigit_value@plt+0x1ea44>
   32860:	mov	r0, r3
   32864:	ldr	r2, [pc, #64]	; 328ac <g_unichar_xdigit_value@plt+0x1ea48>
   32868:	add	r1, pc, r1
   3286c:	add	r2, pc, r2
   32870:	add	r1, r1, #392	; 0x188
   32874:	add	sp, sp, #12
   32878:	pop	{r4, r5, r6, r7, lr}
   3287c:	b	13450 <g_return_if_fail_warning@plt>
   32880:	add	sp, sp, #12
   32884:	pop	{r4, r5, r6, r7, pc}
   32888:	muleq	r0, r8, fp
   3288c:			; <UNDEFINED> instruction: 0x0000abbc
   32890:	strdeq	sl, [r0], -r0
   32894:	andeq	r5, r0, r4, ror #17
   32898:	andeq	sl, r0, ip, asr #15
   3289c:	andeq	r8, r0, ip, lsr #27
   328a0:	andeq	sl, r0, r8, lsr #15
   328a4:	andeq	sl, r0, r4, lsr #20
   328a8:	andeq	sl, r0, r4, lsl #15
   328ac:	andeq	sl, r0, r0, ror sl
   328b0:	ldr	r3, [pc, #4060]	; 33894 <g_unichar_xdigit_value@plt+0x1fa30>
   328b4:	ldr	r2, [pc, #4060]	; 33898 <g_unichar_xdigit_value@plt+0x1fa34>
   328b8:	add	r3, pc, r3
   328bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   328c0:	sub	sp, sp, #100	; 0x64
   328c4:	ldr	r2, [r3, r2]
   328c8:	subs	fp, r0, #0
   328cc:	str	r2, [sp, #16]
   328d0:	ldr	r2, [r2]
   328d4:	str	r2, [sp, #92]	; 0x5c
   328d8:	beq	33580 <g_unichar_xdigit_value@plt+0x1f71c>
   328dc:	ldr	r2, [pc, #4024]	; 3389c <g_unichar_xdigit_value@plt+0x1fa38>
   328e0:	ldr	r2, [r3, r2]
   328e4:	ldr	r0, [r2]
   328e8:	str	r2, [sp, #24]
   328ec:	cmp	r0, #0
   328f0:	bne	333cc <g_unichar_xdigit_value@plt+0x1f568>
   328f4:	ldr	r2, [pc, #4004]	; 338a0 <g_unichar_xdigit_value@plt+0x1fa3c>
   328f8:	ldr	r2, [r3, r2]
   328fc:	ldr	r2, [r2]
   32900:	cmp	r2, #0
   32904:	bne	333d0 <g_unichar_xdigit_value@plt+0x1f56c>
   32908:	ldr	r1, [pc, #3988]	; 338a4 <g_unichar_xdigit_value@plt+0x1fa40>
   3290c:	ldr	r1, [r3, r1]
   32910:	ldr	r6, [r1]
   32914:	cmp	r6, #0
   32918:	movne	r0, r2
   3291c:	bne	333d0 <g_unichar_xdigit_value@plt+0x1f56c>
   32920:	ldr	r2, [pc, #3968]	; 338a8 <g_unichar_xdigit_value@plt+0x1fa44>
   32924:	ldr	r0, [pc, #3968]	; 338ac <g_unichar_xdigit_value@plt+0x1fa48>
   32928:	ldr	r1, [pc, #3968]	; 338b0 <g_unichar_xdigit_value@plt+0x1fa4c>
   3292c:	add	r2, pc, r2
   32930:	str	r6, [sp, #84]	; 0x54
   32934:	ldr	r0, [r3, r0]
   32938:	ldr	r1, [r3, r1]
   3293c:	mov	r3, r2
   32940:	bl	136cc <g_hash_table_new_full@plt>
   32944:	mov	r4, r0
   32948:	ldr	r0, [pc, #3940]	; 338b4 <g_unichar_xdigit_value@plt+0x1fa50>
   3294c:	add	r0, pc, r0
   32950:	bl	136f0 <g_strdup@plt>
   32954:	mov	r5, r0
   32958:	ldr	r0, [pc, #3928]	; 338b8 <g_unichar_xdigit_value@plt+0x1fa54>
   3295c:	add	r0, pc, r0
   32960:	bl	136f0 <g_strdup@plt>
   32964:	mov	r1, r5
   32968:	mov	r2, r0
   3296c:	mov	r0, r4
   32970:	bl	13738 <g_hash_table_insert@plt>
   32974:	ldr	r0, [pc, #3904]	; 338bc <g_unichar_xdigit_value@plt+0x1fa58>
   32978:	add	r0, pc, r0
   3297c:	bl	136f0 <g_strdup@plt>
   32980:	mov	r5, r0
   32984:	ldr	r0, [pc, #3892]	; 338c0 <g_unichar_xdigit_value@plt+0x1fa5c>
   32988:	add	r0, pc, r0
   3298c:	bl	136f0 <g_strdup@plt>
   32990:	mov	r1, r5
   32994:	mov	r2, r0
   32998:	mov	r0, r4
   3299c:	bl	13738 <g_hash_table_insert@plt>
   329a0:	ldr	r0, [pc, #3868]	; 338c4 <g_unichar_xdigit_value@plt+0x1fa60>
   329a4:	add	r0, pc, r0
   329a8:	bl	136f0 <g_strdup@plt>
   329ac:	mov	r5, r0
   329b0:	ldr	r0, [pc, #3856]	; 338c8 <g_unichar_xdigit_value@plt+0x1fa64>
   329b4:	add	r0, pc, r0
   329b8:	bl	136f0 <g_strdup@plt>
   329bc:	mov	r1, r5
   329c0:	mov	r2, r0
   329c4:	mov	r0, r4
   329c8:	bl	13738 <g_hash_table_insert@plt>
   329cc:	ldr	r0, [pc, #3832]	; 338cc <g_unichar_xdigit_value@plt+0x1fa68>
   329d0:	add	r0, pc, r0
   329d4:	bl	136f0 <g_strdup@plt>
   329d8:	mov	r5, r0
   329dc:	ldr	r0, [pc, #3820]	; 338d0 <g_unichar_xdigit_value@plt+0x1fa6c>
   329e0:	add	r0, pc, r0
   329e4:	bl	136f0 <g_strdup@plt>
   329e8:	mov	r1, r5
   329ec:	mov	r2, r0
   329f0:	mov	r0, r4
   329f4:	bl	13738 <g_hash_table_insert@plt>
   329f8:	ldr	r0, [pc, #3796]	; 338d4 <g_unichar_xdigit_value@plt+0x1fa70>
   329fc:	add	r0, pc, r0
   32a00:	bl	136f0 <g_strdup@plt>
   32a04:	mov	r5, r0
   32a08:	ldr	r0, [pc, #3784]	; 338d8 <g_unichar_xdigit_value@plt+0x1fa74>
   32a0c:	add	r0, pc, r0
   32a10:	bl	136f0 <g_strdup@plt>
   32a14:	mov	r1, r5
   32a18:	mov	r2, r0
   32a1c:	mov	r0, r4
   32a20:	bl	13738 <g_hash_table_insert@plt>
   32a24:	ldr	r0, [pc, #3760]	; 338dc <g_unichar_xdigit_value@plt+0x1fa78>
   32a28:	add	r0, pc, r0
   32a2c:	bl	136f0 <g_strdup@plt>
   32a30:	mov	r5, r0
   32a34:	ldr	r0, [pc, #3748]	; 338e0 <g_unichar_xdigit_value@plt+0x1fa7c>
   32a38:	add	r0, pc, r0
   32a3c:	bl	136f0 <g_strdup@plt>
   32a40:	mov	r1, r5
   32a44:	mov	r2, r0
   32a48:	mov	r0, r4
   32a4c:	bl	13738 <g_hash_table_insert@plt>
   32a50:	ldr	r0, [pc, #3724]	; 338e4 <g_unichar_xdigit_value@plt+0x1fa80>
   32a54:	add	r0, pc, r0
   32a58:	bl	136f0 <g_strdup@plt>
   32a5c:	mov	r5, r0
   32a60:	ldr	r0, [pc, #3712]	; 338e8 <g_unichar_xdigit_value@plt+0x1fa84>
   32a64:	add	r0, pc, r0
   32a68:	bl	136f0 <g_strdup@plt>
   32a6c:	mov	r1, r5
   32a70:	mov	r2, r0
   32a74:	mov	r0, r4
   32a78:	bl	13738 <g_hash_table_insert@plt>
   32a7c:	ldr	r0, [pc, #3688]	; 338ec <g_unichar_xdigit_value@plt+0x1fa88>
   32a80:	add	r0, pc, r0
   32a84:	bl	136f0 <g_strdup@plt>
   32a88:	mov	r5, r0
   32a8c:	ldr	r0, [pc, #3676]	; 338f0 <g_unichar_xdigit_value@plt+0x1fa8c>
   32a90:	add	r0, pc, r0
   32a94:	bl	136f0 <g_strdup@plt>
   32a98:	mov	r1, r5
   32a9c:	mov	r2, r0
   32aa0:	mov	r0, r4
   32aa4:	bl	13738 <g_hash_table_insert@plt>
   32aa8:	ldr	r0, [pc, #3652]	; 338f4 <g_unichar_xdigit_value@plt+0x1fa90>
   32aac:	add	r0, pc, r0
   32ab0:	bl	136f0 <g_strdup@plt>
   32ab4:	mov	r5, r0
   32ab8:	ldr	r0, [pc, #3640]	; 338f8 <g_unichar_xdigit_value@plt+0x1fa94>
   32abc:	add	r0, pc, r0
   32ac0:	bl	136f0 <g_strdup@plt>
   32ac4:	mov	r1, r5
   32ac8:	mov	r2, r0
   32acc:	mov	r0, r4
   32ad0:	bl	13738 <g_hash_table_insert@plt>
   32ad4:	ldr	r0, [pc, #3616]	; 338fc <g_unichar_xdigit_value@plt+0x1fa98>
   32ad8:	add	r0, pc, r0
   32adc:	bl	136f0 <g_strdup@plt>
   32ae0:	mov	r5, r0
   32ae4:	ldr	r0, [pc, #3604]	; 33900 <g_unichar_xdigit_value@plt+0x1fa9c>
   32ae8:	add	r0, pc, r0
   32aec:	bl	136f0 <g_strdup@plt>
   32af0:	mov	r1, r5
   32af4:	mov	r2, r0
   32af8:	mov	r0, r4
   32afc:	bl	13738 <g_hash_table_insert@plt>
   32b00:	ldr	r0, [pc, #3580]	; 33904 <g_unichar_xdigit_value@plt+0x1faa0>
   32b04:	add	r0, pc, r0
   32b08:	bl	136f0 <g_strdup@plt>
   32b0c:	mov	r5, r0
   32b10:	ldr	r0, [pc, #3568]	; 33908 <g_unichar_xdigit_value@plt+0x1faa4>
   32b14:	add	r0, pc, r0
   32b18:	bl	136f0 <g_strdup@plt>
   32b1c:	mov	r1, r5
   32b20:	mov	r2, r0
   32b24:	mov	r0, r4
   32b28:	bl	13738 <g_hash_table_insert@plt>
   32b2c:	ldr	r0, [pc, #3544]	; 3390c <g_unichar_xdigit_value@plt+0x1faa8>
   32b30:	add	r0, pc, r0
   32b34:	bl	136f0 <g_strdup@plt>
   32b38:	mov	r5, r0
   32b3c:	ldr	r0, [pc, #3532]	; 33910 <g_unichar_xdigit_value@plt+0x1faac>
   32b40:	add	r0, pc, r0
   32b44:	bl	136f0 <g_strdup@plt>
   32b48:	mov	r1, r5
   32b4c:	mov	r2, r0
   32b50:	mov	r0, r4
   32b54:	bl	13738 <g_hash_table_insert@plt>
   32b58:	ldr	r0, [pc, #3508]	; 33914 <g_unichar_xdigit_value@plt+0x1fab0>
   32b5c:	add	r0, pc, r0
   32b60:	bl	136f0 <g_strdup@plt>
   32b64:	mov	r5, r0
   32b68:	ldr	r0, [pc, #3496]	; 33918 <g_unichar_xdigit_value@plt+0x1fab4>
   32b6c:	add	r0, pc, r0
   32b70:	bl	136f0 <g_strdup@plt>
   32b74:	mov	r1, r5
   32b78:	mov	r2, r0
   32b7c:	mov	r0, r4
   32b80:	bl	13738 <g_hash_table_insert@plt>
   32b84:	ldr	r0, [pc, #3472]	; 3391c <g_unichar_xdigit_value@plt+0x1fab8>
   32b88:	add	r0, pc, r0
   32b8c:	bl	136f0 <g_strdup@plt>
   32b90:	mov	r5, r0
   32b94:	ldr	r0, [pc, #3460]	; 33920 <g_unichar_xdigit_value@plt+0x1fabc>
   32b98:	add	r0, pc, r0
   32b9c:	bl	136f0 <g_strdup@plt>
   32ba0:	mov	r1, r5
   32ba4:	mov	r2, r0
   32ba8:	mov	r0, r4
   32bac:	bl	13738 <g_hash_table_insert@plt>
   32bb0:	ldr	r0, [pc, #3436]	; 33924 <g_unichar_xdigit_value@plt+0x1fac0>
   32bb4:	add	r0, pc, r0
   32bb8:	bl	136f0 <g_strdup@plt>
   32bbc:	mov	r5, r0
   32bc0:	ldr	r0, [pc, #3424]	; 33928 <g_unichar_xdigit_value@plt+0x1fac4>
   32bc4:	add	r0, pc, r0
   32bc8:	bl	136f0 <g_strdup@plt>
   32bcc:	mov	r1, r5
   32bd0:	mov	r2, r0
   32bd4:	mov	r0, r4
   32bd8:	bl	13738 <g_hash_table_insert@plt>
   32bdc:	ldr	r0, [pc, #3400]	; 3392c <g_unichar_xdigit_value@plt+0x1fac8>
   32be0:	add	r0, pc, r0
   32be4:	bl	136f0 <g_strdup@plt>
   32be8:	mov	r5, r0
   32bec:	ldr	r0, [pc, #3388]	; 33930 <g_unichar_xdigit_value@plt+0x1facc>
   32bf0:	add	r0, pc, r0
   32bf4:	bl	136f0 <g_strdup@plt>
   32bf8:	mov	r1, r5
   32bfc:	mov	r2, r0
   32c00:	mov	r0, r4
   32c04:	bl	13738 <g_hash_table_insert@plt>
   32c08:	ldr	r0, [pc, #3364]	; 33934 <g_unichar_xdigit_value@plt+0x1fad0>
   32c0c:	add	r0, pc, r0
   32c10:	bl	136f0 <g_strdup@plt>
   32c14:	mov	r5, r0
   32c18:	ldr	r0, [pc, #3352]	; 33938 <g_unichar_xdigit_value@plt+0x1fad4>
   32c1c:	add	r0, pc, r0
   32c20:	bl	136f0 <g_strdup@plt>
   32c24:	mov	r1, r5
   32c28:	mov	r2, r0
   32c2c:	mov	r0, r4
   32c30:	bl	13738 <g_hash_table_insert@plt>
   32c34:	ldr	r0, [pc, #3328]	; 3393c <g_unichar_xdigit_value@plt+0x1fad8>
   32c38:	add	r0, pc, r0
   32c3c:	bl	136f0 <g_strdup@plt>
   32c40:	mov	r5, r0
   32c44:	ldr	r0, [pc, #3316]	; 33940 <g_unichar_xdigit_value@plt+0x1fadc>
   32c48:	add	r0, pc, r0
   32c4c:	bl	136f0 <g_strdup@plt>
   32c50:	mov	r1, r5
   32c54:	mov	r2, r0
   32c58:	mov	r0, r4
   32c5c:	bl	13738 <g_hash_table_insert@plt>
   32c60:	ldr	r0, [pc, #3292]	; 33944 <g_unichar_xdigit_value@plt+0x1fae0>
   32c64:	add	r0, pc, r0
   32c68:	bl	136f0 <g_strdup@plt>
   32c6c:	mov	r5, r0
   32c70:	ldr	r0, [pc, #3280]	; 33948 <g_unichar_xdigit_value@plt+0x1fae4>
   32c74:	add	r0, pc, r0
   32c78:	bl	136f0 <g_strdup@plt>
   32c7c:	mov	r1, r5
   32c80:	mov	r2, r0
   32c84:	mov	r0, r4
   32c88:	bl	13738 <g_hash_table_insert@plt>
   32c8c:	ldr	r0, [pc, #3256]	; 3394c <g_unichar_xdigit_value@plt+0x1fae8>
   32c90:	add	r0, pc, r0
   32c94:	bl	136f0 <g_strdup@plt>
   32c98:	mov	r5, r0
   32c9c:	ldr	r0, [pc, #3244]	; 33950 <g_unichar_xdigit_value@plt+0x1faec>
   32ca0:	add	r0, pc, r0
   32ca4:	bl	136f0 <g_strdup@plt>
   32ca8:	mov	r1, r5
   32cac:	mov	r2, r0
   32cb0:	mov	r0, r4
   32cb4:	bl	13738 <g_hash_table_insert@plt>
   32cb8:	ldr	r0, [pc, #3220]	; 33954 <g_unichar_xdigit_value@plt+0x1faf0>
   32cbc:	add	r0, pc, r0
   32cc0:	bl	136f0 <g_strdup@plt>
   32cc4:	mov	r5, r0
   32cc8:	ldr	r0, [pc, #3208]	; 33958 <g_unichar_xdigit_value@plt+0x1faf4>
   32ccc:	add	r0, pc, r0
   32cd0:	bl	136f0 <g_strdup@plt>
   32cd4:	mov	r1, r5
   32cd8:	mov	r2, r0
   32cdc:	mov	r0, r4
   32ce0:	bl	13738 <g_hash_table_insert@plt>
   32ce4:	ldr	r0, [pc, #3184]	; 3395c <g_unichar_xdigit_value@plt+0x1faf8>
   32ce8:	add	r0, pc, r0
   32cec:	bl	136f0 <g_strdup@plt>
   32cf0:	mov	r5, r0
   32cf4:	ldr	r0, [pc, #3172]	; 33960 <g_unichar_xdigit_value@plt+0x1fafc>
   32cf8:	add	r0, pc, r0
   32cfc:	bl	136f0 <g_strdup@plt>
   32d00:	mov	r1, r5
   32d04:	mov	r2, r0
   32d08:	mov	r0, r4
   32d0c:	bl	13738 <g_hash_table_insert@plt>
   32d10:	ldr	r0, [pc, #3148]	; 33964 <g_unichar_xdigit_value@plt+0x1fb00>
   32d14:	add	r0, pc, r0
   32d18:	bl	136f0 <g_strdup@plt>
   32d1c:	mov	r5, r0
   32d20:	ldr	r0, [pc, #3136]	; 33968 <g_unichar_xdigit_value@plt+0x1fb04>
   32d24:	add	r0, pc, r0
   32d28:	bl	136f0 <g_strdup@plt>
   32d2c:	mov	r1, r5
   32d30:	mov	r2, r0
   32d34:	mov	r0, r4
   32d38:	bl	13738 <g_hash_table_insert@plt>
   32d3c:	ldr	r0, [pc, #3112]	; 3396c <g_unichar_xdigit_value@plt+0x1fb08>
   32d40:	add	r0, pc, r0
   32d44:	bl	136f0 <g_strdup@plt>
   32d48:	mov	r5, r0
   32d4c:	ldr	r0, [pc, #3100]	; 33970 <g_unichar_xdigit_value@plt+0x1fb0c>
   32d50:	add	r0, pc, r0
   32d54:	bl	136f0 <g_strdup@plt>
   32d58:	mov	r1, r5
   32d5c:	mov	r2, r0
   32d60:	mov	r0, r4
   32d64:	bl	13738 <g_hash_table_insert@plt>
   32d68:	ldr	r0, [pc, #3076]	; 33974 <g_unichar_xdigit_value@plt+0x1fb10>
   32d6c:	add	r0, pc, r0
   32d70:	bl	136f0 <g_strdup@plt>
   32d74:	mov	r5, r0
   32d78:	ldr	r0, [pc, #3064]	; 33978 <g_unichar_xdigit_value@plt+0x1fb14>
   32d7c:	add	r0, pc, r0
   32d80:	bl	136f0 <g_strdup@plt>
   32d84:	mov	r1, r5
   32d88:	mov	r2, r0
   32d8c:	mov	r0, r4
   32d90:	bl	13738 <g_hash_table_insert@plt>
   32d94:	ldr	r0, [pc, #3040]	; 3397c <g_unichar_xdigit_value@plt+0x1fb18>
   32d98:	add	r0, pc, r0
   32d9c:	bl	136f0 <g_strdup@plt>
   32da0:	mov	r5, r0
   32da4:	ldr	r0, [pc, #3028]	; 33980 <g_unichar_xdigit_value@plt+0x1fb1c>
   32da8:	add	r0, pc, r0
   32dac:	bl	136f0 <g_strdup@plt>
   32db0:	mov	r1, r5
   32db4:	mov	r2, r0
   32db8:	mov	r0, r4
   32dbc:	bl	13738 <g_hash_table_insert@plt>
   32dc0:	ldr	r0, [pc, #3004]	; 33984 <g_unichar_xdigit_value@plt+0x1fb20>
   32dc4:	add	r0, pc, r0
   32dc8:	bl	136f0 <g_strdup@plt>
   32dcc:	mov	r5, r0
   32dd0:	ldr	r0, [pc, #2992]	; 33988 <g_unichar_xdigit_value@plt+0x1fb24>
   32dd4:	add	r0, pc, r0
   32dd8:	bl	136f0 <g_strdup@plt>
   32ddc:	mov	r1, r5
   32de0:	mov	r2, r0
   32de4:	mov	r0, r4
   32de8:	bl	13738 <g_hash_table_insert@plt>
   32dec:	ldr	r0, [pc, #2968]	; 3398c <g_unichar_xdigit_value@plt+0x1fb28>
   32df0:	add	r0, pc, r0
   32df4:	bl	136f0 <g_strdup@plt>
   32df8:	mov	r5, r0
   32dfc:	ldr	r0, [pc, #2956]	; 33990 <g_unichar_xdigit_value@plt+0x1fb2c>
   32e00:	add	r0, pc, r0
   32e04:	bl	136f0 <g_strdup@plt>
   32e08:	mov	r1, r5
   32e0c:	mov	r2, r0
   32e10:	mov	r0, r4
   32e14:	bl	13738 <g_hash_table_insert@plt>
   32e18:	ldr	r0, [pc, #2932]	; 33994 <g_unichar_xdigit_value@plt+0x1fb30>
   32e1c:	add	r0, pc, r0
   32e20:	bl	136f0 <g_strdup@plt>
   32e24:	mov	r5, r0
   32e28:	ldr	r0, [pc, #2920]	; 33998 <g_unichar_xdigit_value@plt+0x1fb34>
   32e2c:	add	r0, pc, r0
   32e30:	bl	136f0 <g_strdup@plt>
   32e34:	mov	r1, r5
   32e38:	mov	r2, r0
   32e3c:	mov	r0, r4
   32e40:	bl	13738 <g_hash_table_insert@plt>
   32e44:	ldr	r0, [pc, #2896]	; 3399c <g_unichar_xdigit_value@plt+0x1fb38>
   32e48:	add	r0, pc, r0
   32e4c:	bl	136f0 <g_strdup@plt>
   32e50:	mov	r5, r0
   32e54:	ldr	r0, [pc, #2884]	; 339a0 <g_unichar_xdigit_value@plt+0x1fb3c>
   32e58:	add	r0, pc, r0
   32e5c:	bl	136f0 <g_strdup@plt>
   32e60:	mov	r1, r5
   32e64:	mov	r2, r0
   32e68:	mov	r0, r4
   32e6c:	bl	13738 <g_hash_table_insert@plt>
   32e70:	ldr	r0, [pc, #2860]	; 339a4 <g_unichar_xdigit_value@plt+0x1fb40>
   32e74:	add	r0, pc, r0
   32e78:	bl	136f0 <g_strdup@plt>
   32e7c:	mov	r5, r0
   32e80:	ldr	r0, [pc, #2848]	; 339a8 <g_unichar_xdigit_value@plt+0x1fb44>
   32e84:	add	r0, pc, r0
   32e88:	bl	136f0 <g_strdup@plt>
   32e8c:	mov	r1, r5
   32e90:	mov	r2, r0
   32e94:	mov	r0, r4
   32e98:	bl	13738 <g_hash_table_insert@plt>
   32e9c:	ldr	r0, [pc, #2824]	; 339ac <g_unichar_xdigit_value@plt+0x1fb48>
   32ea0:	add	r0, pc, r0
   32ea4:	bl	136f0 <g_strdup@plt>
   32ea8:	mov	r5, r0
   32eac:	ldr	r0, [pc, #2812]	; 339b0 <g_unichar_xdigit_value@plt+0x1fb4c>
   32eb0:	add	r0, pc, r0
   32eb4:	bl	136f0 <g_strdup@plt>
   32eb8:	mov	r1, r5
   32ebc:	mov	r2, r0
   32ec0:	mov	r0, r4
   32ec4:	bl	13738 <g_hash_table_insert@plt>
   32ec8:	ldr	r0, [pc, #2788]	; 339b4 <g_unichar_xdigit_value@plt+0x1fb50>
   32ecc:	add	r0, pc, r0
   32ed0:	bl	136f0 <g_strdup@plt>
   32ed4:	mov	r5, r0
   32ed8:	ldr	r0, [pc, #2776]	; 339b8 <g_unichar_xdigit_value@plt+0x1fb54>
   32edc:	add	r0, pc, r0
   32ee0:	bl	136f0 <g_strdup@plt>
   32ee4:	mov	r1, r5
   32ee8:	mov	r2, r0
   32eec:	mov	r0, r4
   32ef0:	bl	13738 <g_hash_table_insert@plt>
   32ef4:	ldr	r0, [pc, #2752]	; 339bc <g_unichar_xdigit_value@plt+0x1fb58>
   32ef8:	add	r0, pc, r0
   32efc:	bl	136f0 <g_strdup@plt>
   32f00:	mov	r5, r0
   32f04:	ldr	r0, [pc, #2740]	; 339c0 <g_unichar_xdigit_value@plt+0x1fb5c>
   32f08:	add	r0, pc, r0
   32f0c:	bl	136f0 <g_strdup@plt>
   32f10:	mov	r1, r5
   32f14:	mov	r2, r0
   32f18:	mov	r0, r4
   32f1c:	bl	13738 <g_hash_table_insert@plt>
   32f20:	ldr	r0, [pc, #2716]	; 339c4 <g_unichar_xdigit_value@plt+0x1fb60>
   32f24:	add	r0, pc, r0
   32f28:	bl	136f0 <g_strdup@plt>
   32f2c:	mov	r5, r0
   32f30:	ldr	r0, [pc, #2704]	; 339c8 <g_unichar_xdigit_value@plt+0x1fb64>
   32f34:	add	r0, pc, r0
   32f38:	bl	136f0 <g_strdup@plt>
   32f3c:	mov	r1, r5
   32f40:	mov	r2, r0
   32f44:	mov	r0, r4
   32f48:	bl	13738 <g_hash_table_insert@plt>
   32f4c:	ldr	r0, [pc, #2680]	; 339cc <g_unichar_xdigit_value@plt+0x1fb68>
   32f50:	add	r0, pc, r0
   32f54:	bl	136f0 <g_strdup@plt>
   32f58:	mov	r5, r0
   32f5c:	ldr	r0, [pc, #2668]	; 339d0 <g_unichar_xdigit_value@plt+0x1fb6c>
   32f60:	add	r0, pc, r0
   32f64:	bl	136f0 <g_strdup@plt>
   32f68:	mov	r1, r5
   32f6c:	mov	r2, r0
   32f70:	mov	r0, r4
   32f74:	bl	13738 <g_hash_table_insert@plt>
   32f78:	ldr	r0, [pc, #2644]	; 339d4 <g_unichar_xdigit_value@plt+0x1fb70>
   32f7c:	add	r0, pc, r0
   32f80:	bl	136f0 <g_strdup@plt>
   32f84:	mov	r5, r0
   32f88:	ldr	r0, [pc, #2632]	; 339d8 <g_unichar_xdigit_value@plt+0x1fb74>
   32f8c:	add	r0, pc, r0
   32f90:	bl	136f0 <g_strdup@plt>
   32f94:	mov	r1, r5
   32f98:	mov	r2, r0
   32f9c:	mov	r0, r4
   32fa0:	bl	13738 <g_hash_table_insert@plt>
   32fa4:	ldr	r0, [pc, #2608]	; 339dc <g_unichar_xdigit_value@plt+0x1fb78>
   32fa8:	add	r0, pc, r0
   32fac:	bl	136f0 <g_strdup@plt>
   32fb0:	mov	r5, r0
   32fb4:	ldr	r0, [pc, #2596]	; 339e0 <g_unichar_xdigit_value@plt+0x1fb7c>
   32fb8:	add	r0, pc, r0
   32fbc:	bl	136f0 <g_strdup@plt>
   32fc0:	mov	r1, r5
   32fc4:	mov	r2, r0
   32fc8:	mov	r0, r4
   32fcc:	bl	13738 <g_hash_table_insert@plt>
   32fd0:	ldr	r0, [pc, #2572]	; 339e4 <g_unichar_xdigit_value@plt+0x1fb80>
   32fd4:	add	r0, pc, r0
   32fd8:	bl	136f0 <g_strdup@plt>
   32fdc:	mov	r5, r0
   32fe0:	ldr	r0, [pc, #2560]	; 339e8 <g_unichar_xdigit_value@plt+0x1fb84>
   32fe4:	add	r0, pc, r0
   32fe8:	bl	136f0 <g_strdup@plt>
   32fec:	mov	r1, r5
   32ff0:	mov	r2, r0
   32ff4:	mov	r0, r4
   32ff8:	bl	13738 <g_hash_table_insert@plt>
   32ffc:	ldr	r0, [pc, #2536]	; 339ec <g_unichar_xdigit_value@plt+0x1fb88>
   33000:	add	r0, pc, r0
   33004:	bl	136f0 <g_strdup@plt>
   33008:	mov	r5, r0
   3300c:	ldr	r0, [pc, #2524]	; 339f0 <g_unichar_xdigit_value@plt+0x1fb8c>
   33010:	add	r0, pc, r0
   33014:	bl	136f0 <g_strdup@plt>
   33018:	mov	r1, r5
   3301c:	mov	r2, r0
   33020:	mov	r0, r4
   33024:	bl	13738 <g_hash_table_insert@plt>
   33028:	ldr	r0, [pc, #2500]	; 339f4 <g_unichar_xdigit_value@plt+0x1fb90>
   3302c:	add	r0, pc, r0
   33030:	bl	136f0 <g_strdup@plt>
   33034:	mov	r5, r0
   33038:	ldr	r0, [pc, #2488]	; 339f8 <g_unichar_xdigit_value@plt+0x1fb94>
   3303c:	add	r0, pc, r0
   33040:	bl	136f0 <g_strdup@plt>
   33044:	mov	r1, r5
   33048:	mov	r2, r0
   3304c:	mov	r0, r4
   33050:	bl	13738 <g_hash_table_insert@plt>
   33054:	ldr	r0, [pc, #2464]	; 339fc <g_unichar_xdigit_value@plt+0x1fb98>
   33058:	add	r0, pc, r0
   3305c:	bl	136f0 <g_strdup@plt>
   33060:	mov	r5, r0
   33064:	ldr	r0, [pc, #2452]	; 33a00 <g_unichar_xdigit_value@plt+0x1fb9c>
   33068:	add	r0, pc, r0
   3306c:	bl	136f0 <g_strdup@plt>
   33070:	mov	r1, r5
   33074:	mov	r2, r0
   33078:	mov	r0, r4
   3307c:	bl	13738 <g_hash_table_insert@plt>
   33080:	ldr	r0, [pc, #2428]	; 33a04 <g_unichar_xdigit_value@plt+0x1fba0>
   33084:	add	r0, pc, r0
   33088:	bl	136f0 <g_strdup@plt>
   3308c:	mov	r5, r0
   33090:	ldr	r0, [pc, #2416]	; 33a08 <g_unichar_xdigit_value@plt+0x1fba4>
   33094:	add	r0, pc, r0
   33098:	bl	136f0 <g_strdup@plt>
   3309c:	mov	r1, r5
   330a0:	mov	r2, r0
   330a4:	mov	r0, r4
   330a8:	bl	13738 <g_hash_table_insert@plt>
   330ac:	ldr	r0, [pc, #2392]	; 33a0c <g_unichar_xdigit_value@plt+0x1fba8>
   330b0:	add	r0, pc, r0
   330b4:	bl	136f0 <g_strdup@plt>
   330b8:	mov	r5, r0
   330bc:	ldr	r0, [pc, #2380]	; 33a10 <g_unichar_xdigit_value@plt+0x1fbac>
   330c0:	add	r0, pc, r0
   330c4:	bl	136f0 <g_strdup@plt>
   330c8:	mov	r1, r5
   330cc:	mov	r2, r0
   330d0:	mov	r0, r4
   330d4:	bl	13738 <g_hash_table_insert@plt>
   330d8:	ldr	r0, [pc, #2356]	; 33a14 <g_unichar_xdigit_value@plt+0x1fbb0>
   330dc:	add	r0, pc, r0
   330e0:	bl	136f0 <g_strdup@plt>
   330e4:	mov	r5, r0
   330e8:	ldr	r0, [pc, #2344]	; 33a18 <g_unichar_xdigit_value@plt+0x1fbb4>
   330ec:	add	r0, pc, r0
   330f0:	bl	136f0 <g_strdup@plt>
   330f4:	mov	r1, r5
   330f8:	mov	r2, r0
   330fc:	mov	r0, r4
   33100:	bl	13738 <g_hash_table_insert@plt>
   33104:	ldr	r0, [pc, #2320]	; 33a1c <g_unichar_xdigit_value@plt+0x1fbb8>
   33108:	add	r0, pc, r0
   3310c:	bl	136f0 <g_strdup@plt>
   33110:	mov	r5, r0
   33114:	ldr	r0, [pc, #2308]	; 33a20 <g_unichar_xdigit_value@plt+0x1fbbc>
   33118:	add	r0, pc, r0
   3311c:	bl	136f0 <g_strdup@plt>
   33120:	mov	r1, r5
   33124:	mov	r2, r0
   33128:	mov	r0, r4
   3312c:	bl	13738 <g_hash_table_insert@plt>
   33130:	ldr	r0, [pc, #2284]	; 33a24 <g_unichar_xdigit_value@plt+0x1fbc0>
   33134:	add	r0, pc, r0
   33138:	bl	136f0 <g_strdup@plt>
   3313c:	mov	r5, r0
   33140:	ldr	r0, [pc, #2272]	; 33a28 <g_unichar_xdigit_value@plt+0x1fbc4>
   33144:	add	r0, pc, r0
   33148:	bl	136f0 <g_strdup@plt>
   3314c:	mov	r1, r5
   33150:	mov	r2, r0
   33154:	mov	r0, r4
   33158:	bl	13738 <g_hash_table_insert@plt>
   3315c:	ldr	r0, [pc, #2248]	; 33a2c <g_unichar_xdigit_value@plt+0x1fbc8>
   33160:	add	r0, pc, r0
   33164:	bl	136f0 <g_strdup@plt>
   33168:	mov	r5, r0
   3316c:	ldr	r0, [pc, #2236]	; 33a30 <g_unichar_xdigit_value@plt+0x1fbcc>
   33170:	add	r0, pc, r0
   33174:	bl	136f0 <g_strdup@plt>
   33178:	mov	r1, r5
   3317c:	mov	r2, r0
   33180:	mov	r0, r4
   33184:	bl	13738 <g_hash_table_insert@plt>
   33188:	ldr	r0, [pc, #2212]	; 33a34 <g_unichar_xdigit_value@plt+0x1fbd0>
   3318c:	add	r0, pc, r0
   33190:	bl	136f0 <g_strdup@plt>
   33194:	mov	r5, r0
   33198:	ldr	r0, [pc, #2200]	; 33a38 <g_unichar_xdigit_value@plt+0x1fbd4>
   3319c:	add	r0, pc, r0
   331a0:	bl	136f0 <g_strdup@plt>
   331a4:	mov	r1, r5
   331a8:	mov	r2, r0
   331ac:	mov	r0, r4
   331b0:	bl	13738 <g_hash_table_insert@plt>
   331b4:	ldr	r0, [pc, #2176]	; 33a3c <g_unichar_xdigit_value@plt+0x1fbd8>
   331b8:	add	r0, pc, r0
   331bc:	bl	136f0 <g_strdup@plt>
   331c0:	mov	r5, r0
   331c4:	ldr	r0, [pc, #2164]	; 33a40 <g_unichar_xdigit_value@plt+0x1fbdc>
   331c8:	add	r0, pc, r0
   331cc:	bl	136f0 <g_strdup@plt>
   331d0:	mov	r1, r5
   331d4:	mov	r2, r0
   331d8:	mov	r0, r4
   331dc:	bl	13738 <g_hash_table_insert@plt>
   331e0:	ldr	r0, [pc, #2140]	; 33a44 <g_unichar_xdigit_value@plt+0x1fbe0>
   331e4:	add	r0, pc, r0
   331e8:	bl	136f0 <g_strdup@plt>
   331ec:	mov	r5, r0
   331f0:	ldr	r0, [pc, #2128]	; 33a48 <g_unichar_xdigit_value@plt+0x1fbe4>
   331f4:	add	r0, pc, r0
   331f8:	bl	136f0 <g_strdup@plt>
   331fc:	mov	r1, r5
   33200:	mov	r2, r0
   33204:	mov	r0, r4
   33208:	bl	13738 <g_hash_table_insert@plt>
   3320c:	mov	r0, fp
   33210:	bl	31a84 <g_unichar_xdigit_value@plt+0x1dc20>
   33214:	add	r1, sp, #96	; 0x60
   33218:	mov	r2, r6
   3321c:	add	r3, sp, #84	; 0x54
   33220:	str	r6, [r1, #-8]!
   33224:	str	r0, [sp, #44]	; 0x2c
   33228:	bl	13948 <g_file_get_contents@plt>
   3322c:	mov	r0, r6
   33230:	bl	1399c <g_free@plt>
   33234:	ldr	r5, [sp, #84]	; 0x54
   33238:	ldr	ip, [sp, #88]	; 0x58
   3323c:	cmp	r5, #0
   33240:	str	ip, [sp, #40]	; 0x28
   33244:	beq	336d4 <g_unichar_xdigit_value@plt+0x1f870>
   33248:	ldr	r2, [pc, #2044]	; 33a4c <g_unichar_xdigit_value@plt+0x1fbe8>
   3324c:	mov	r0, r6
   33250:	mov	r1, #16
   33254:	ldr	r3, [r5, #8]
   33258:	add	r2, pc, r2
   3325c:	str	r6, [sp, #84]	; 0x54
   33260:	bl	13558 <g_log@plt>
   33264:	mov	r0, r5
   33268:	bl	13498 <g_error_free@plt>
   3326c:	ldr	r0, [sp, #40]	; 0x28
   33270:	bl	1399c <g_free@plt>
   33274:	ldr	r0, [sp, #44]	; 0x2c
   33278:	bl	1399c <g_free@plt>
   3327c:	cmp	r4, #0
   33280:	beq	3328c <g_unichar_xdigit_value@plt+0x1f428>
   33284:	mov	r0, r4
   33288:	bl	139cc <g_hash_table_unref@plt>
   3328c:	ldr	r1, [pc, #1980]	; 33a50 <g_unichar_xdigit_value@plt+0x1fbec>
   33290:	mov	r0, fp
   33294:	add	r1, pc, r1
   33298:	bl	321e8 <g_unichar_xdigit_value@plt+0x1e384>
   3329c:	subs	ip, r0, #0
   332a0:	str	ip, [sp, #20]
   332a4:	beq	33bb0 <g_unichar_xdigit_value@plt+0x1fd4c>
   332a8:	ldr	r1, [pc, #1956]	; 33a54 <g_unichar_xdigit_value@plt+0x1fbf0>
   332ac:	mov	r0, fp
   332b0:	ldr	r2, [pc, #1952]	; 33a58 <g_unichar_xdigit_value@plt+0x1fbf4>
   332b4:	add	r1, pc, r1
   332b8:	ldr	r3, [sp, #20]
   332bc:	add	r2, pc, r2
   332c0:	bl	32710 <g_unichar_xdigit_value@plt+0x1e8ac>
   332c4:	ldr	r1, [pc, #1936]	; 33a5c <g_unichar_xdigit_value@plt+0x1fbf8>
   332c8:	ldr	r2, [pc, #1936]	; 33a60 <g_unichar_xdigit_value@plt+0x1fbfc>
   332cc:	mov	r0, fp
   332d0:	add	r1, pc, r1
   332d4:	ldr	r3, [sp, #20]
   332d8:	add	r2, pc, r2
   332dc:	bl	32710 <g_unichar_xdigit_value@plt+0x1e8ac>
   332e0:	bl	13ccc <xmlInitParser@plt>
   332e4:	mov	r0, fp
   332e8:	bl	31adc <g_unichar_xdigit_value@plt+0x1dc78>
   332ec:	mov	r1, #0
   332f0:	mov	r2, r1
   332f4:	str	r0, [sp, #32]
   332f8:	bl	139d8 <xmlReadFile@plt>
   332fc:	cmp	r0, #0
   33300:	beq	335fc <g_unichar_xdigit_value@plt+0x1f798>
   33304:	bl	137c8 <xmlXPathNewContext@plt>
   33308:	subs	ip, r0, #0
   3330c:	str	ip, [sp, #28]
   33310:	beq	33bc4 <g_unichar_xdigit_value@plt+0x1fd60>
   33314:	ldr	r1, [pc, #1864]	; 33a64 <g_unichar_xdigit_value@plt+0x1fc00>
   33318:	ldr	r2, [pc, #1864]	; 33a68 <g_unichar_xdigit_value@plt+0x1fc04>
   3331c:	add	r1, pc, r1
   33320:	add	r2, pc, r2
   33324:	bl	13d8c <xmlXPathRegisterNs@plt>
   33328:	ldr	r0, [pc, #1852]	; 33a6c <g_unichar_xdigit_value@plt+0x1fc08>
   3332c:	ldr	r1, [sp, #28]
   33330:	add	r0, pc, r0
   33334:	bl	13708 <xmlXPathEvalExpression@plt>
   33338:	subs	sl, r0, #0
   3333c:	beq	33bf8 <g_unichar_xdigit_value@plt+0x1fd94>
   33340:	ldr	r3, [sl, #4]
   33344:	cmp	r3, #0
   33348:	beq	334a8 <g_unichar_xdigit_value@plt+0x1f644>
   3334c:	ldr	r7, [r3]
   33350:	cmp	r7, #0
   33354:	ble	334a8 <g_unichar_xdigit_value@plt+0x1f644>
   33358:	ldr	ip, [pc, #1808]	; 33a70 <g_unichar_xdigit_value@plt+0x1fc0c>
   3335c:	cmp	r3, #0
   33360:	ldr	r6, [pc, #1804]	; 33a74 <g_unichar_xdigit_value@plt+0x1fc10>
   33364:	mov	r4, #0
   33368:	add	ip, pc, ip
   3336c:	ldr	r9, [pc, #1796]	; 33a78 <g_unichar_xdigit_value@plt+0x1fc14>
   33370:	str	ip, [sp, #48]	; 0x30
   33374:	add	r6, pc, r6
   33378:	ldr	ip, [pc, #1788]	; 33a7c <g_unichar_xdigit_value@plt+0x1fc18>
   3337c:	add	r9, pc, r9
   33380:	str	fp, [sp, #36]	; 0x24
   33384:	add	ip, pc, ip
   33388:	str	ip, [sp, #52]	; 0x34
   3338c:	bne	333b4 <g_unichar_xdigit_value@plt+0x1f550>
   33390:	ldr	r2, [r3, #4]
   33394:	cmp	r2, #1
   33398:	beq	333ec <g_unichar_xdigit_value@plt+0x1f588>
   3339c:	add	r4, r4, #1
   333a0:	cmp	r4, r7
   333a4:	beq	334a4 <g_unichar_xdigit_value@plt+0x1f640>
   333a8:	ldr	r3, [sl, #4]
   333ac:	cmp	r3, #0
   333b0:	beq	33390 <g_unichar_xdigit_value@plt+0x1f52c>
   333b4:	ldr	r2, [r3]
   333b8:	cmp	r2, r4
   333bc:	movle	r3, #0
   333c0:	ldrgt	r3, [r3, #8]
   333c4:	ldrgt	r3, [r3, r4, lsl #2]
   333c8:	b	33390 <g_unichar_xdigit_value@plt+0x1f52c>
   333cc:	mov	r0, #1
   333d0:	ldr	ip, [sp, #16]
   333d4:	ldr	r2, [sp, #92]	; 0x5c
   333d8:	ldr	r3, [ip]
   333dc:	cmp	r2, r3
   333e0:	bne	33c94 <g_unichar_xdigit_value@plt+0x1fe30>
   333e4:	add	sp, sp, #100	; 0x64
   333e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   333ec:	ldr	fp, [r3, #44]	; 0x2c
   333f0:	cmp	fp, #0
   333f4:	beq	33bf0 <g_unichar_xdigit_value@plt+0x1fd8c>
   333f8:	mov	r8, #0
   333fc:	mov	r5, r8
   33400:	b	33428 <g_unichar_xdigit_value@plt+0x1f5c4>
   33404:	mov	r0, fp
   33408:	bl	13954 <xmlNodeGetContent@plt>
   3340c:	mov	r3, r0
   33410:	mov	r0, r5
   33414:	mov	r5, r3
   33418:	bl	1399c <g_free@plt>
   3341c:	ldr	fp, [fp, #24]
   33420:	cmp	fp, #0
   33424:	beq	33474 <g_unichar_xdigit_value@plt+0x1f610>
   33428:	ldr	r0, [fp, #8]
   3342c:	mov	r1, r6
   33430:	bl	13e58 <g_strcmp0@plt>
   33434:	cmp	r0, #0
   33438:	beq	33404 <g_unichar_xdigit_value@plt+0x1f5a0>
   3343c:	ldr	r0, [fp, #8]
   33440:	mov	r1, r9
   33444:	bl	13e58 <g_strcmp0@plt>
   33448:	cmp	r0, #0
   3344c:	bne	3341c <g_unichar_xdigit_value@plt+0x1f5b8>
   33450:	mov	r0, fp
   33454:	bl	13954 <xmlNodeGetContent@plt>
   33458:	mov	r3, r0
   3345c:	mov	r0, r8
   33460:	mov	r8, r3
   33464:	bl	1399c <g_free@plt>
   33468:	ldr	fp, [fp, #24]
   3346c:	cmp	fp, #0
   33470:	bne	33428 <g_unichar_xdigit_value@plt+0x1f5c4>
   33474:	cmp	r5, #0
   33478:	mov	fp, r8
   3347c:	beq	33488 <g_unichar_xdigit_value@plt+0x1f624>
   33480:	cmp	r8, #0
   33484:	bne	335e0 <g_unichar_xdigit_value@plt+0x1f77c>
   33488:	mov	r0, fp
   3348c:	add	r4, r4, #1
   33490:	bl	1399c <g_free@plt>
   33494:	mov	r0, r5
   33498:	bl	1399c <g_free@plt>
   3349c:	cmp	r4, r7
   334a0:	bne	333a8 <g_unichar_xdigit_value@plt+0x1f544>
   334a4:	ldr	fp, [sp, #36]	; 0x24
   334a8:	bl	13d38 <xmlCleanupParser@plt>
   334ac:	ldr	r0, [sp, #28]
   334b0:	bl	13a20 <xmlXPathFreeContext@plt>
   334b4:	ldr	r0, [sp, #32]
   334b8:	bl	1399c <g_free@plt>
   334bc:	ldr	r0, [sp, #20]
   334c0:	bl	13b94 <g_object_unref@plt>
   334c4:	ldr	r3, [fp, #12]
   334c8:	ldr	r7, [pc, #1456]	; 33a80 <g_unichar_xdigit_value@plt+0x1fc1c>
   334cc:	ldr	r5, [r3]
   334d0:	add	r7, pc, r7
   334d4:	cmp	r5, #0
   334d8:	bne	3352c <g_unichar_xdigit_value@plt+0x1f6c8>
   334dc:	b	335a0 <g_unichar_xdigit_value@plt+0x1f73c>
   334e0:	bl	13b94 <g_object_unref@plt>
   334e4:	mov	r0, r4
   334e8:	bl	32158 <g_unichar_xdigit_value@plt+0x1e2f4>
   334ec:	mov	r6, r0
   334f0:	bl	24dd0 <g_unichar_xdigit_value@plt+0x10f6c>
   334f4:	cmp	r6, #0
   334f8:	mov	r8, r0
   334fc:	beq	33508 <g_unichar_xdigit_value@plt+0x1f6a4>
   33500:	mov	r0, r6
   33504:	bl	13b94 <g_object_unref@plt>
   33508:	cmp	r8, #0
   3350c:	bne	33554 <g_unichar_xdigit_value@plt+0x1f6f0>
   33510:	cmp	r4, #0
   33514:	beq	33520 <g_unichar_xdigit_value@plt+0x1f6bc>
   33518:	mov	r0, r4
   3351c:	bl	13b94 <g_object_unref@plt>
   33520:	ldr	r5, [r5, #4]
   33524:	cmp	r5, #0
   33528:	beq	335a0 <g_unichar_xdigit_value@plt+0x1f73c>
   3352c:	ldr	r0, [r5]
   33530:	cmp	r0, #0
   33534:	moveq	r4, r0
   33538:	beq	33544 <g_unichar_xdigit_value@plt+0x1f6e0>
   3353c:	bl	133f0 <g_object_ref@plt>
   33540:	mov	r4, r0
   33544:	mov	r0, r4
   33548:	bl	32158 <g_unichar_xdigit_value@plt+0x1e2f4>
   3354c:	cmp	r0, #0
   33550:	bne	334e0 <g_unichar_xdigit_value@plt+0x1f67c>
   33554:	mov	r0, r4
   33558:	bl	321a4 <g_unichar_xdigit_value@plt+0x1e340>
   3355c:	mov	r1, #16
   33560:	mov	r2, r7
   33564:	mov	r6, r0
   33568:	mov	r3, r0
   3356c:	mov	r0, #0
   33570:	bl	13558 <g_log@plt>
   33574:	mov	r0, r6
   33578:	bl	1399c <g_free@plt>
   3357c:	b	33510 <g_unichar_xdigit_value@plt+0x1f6ac>
   33580:	ldr	r1, [pc, #1276]	; 33a84 <g_unichar_xdigit_value@plt+0x1fc20>
   33584:	ldr	r2, [pc, #1276]	; 33a88 <g_unichar_xdigit_value@plt+0x1fc24>
   33588:	add	r1, pc, r1
   3358c:	add	r2, pc, r2
   33590:	add	r1, r1, #428	; 0x1ac
   33594:	bl	13450 <g_return_if_fail_warning@plt>
   33598:	mov	r0, fp
   3359c:	b	333d0 <g_unichar_xdigit_value@plt+0x1f56c>
   335a0:	ldr	r2, [pc, #1252]	; 33a8c <g_unichar_xdigit_value@plt+0x1fc28>
   335a4:	mov	r0, #0
   335a8:	mov	r1, #128	; 0x80
   335ac:	mov	r4, #1
   335b0:	add	r2, pc, r2
   335b4:	bl	13558 <g_log@plt>
   335b8:	ldr	r3, [pc, #1232]	; 33a90 <g_unichar_xdigit_value@plt+0x1fc2c>
   335bc:	ldr	ip, [sp, #24]
   335c0:	mov	r0, fp
   335c4:	add	r3, pc, r3
   335c8:	mov	r2, #0
   335cc:	ldr	r1, [r3, #32]
   335d0:	str	r4, [ip]
   335d4:	bl	136e4 <g_signal_emit@plt>
   335d8:	mov	r0, r4
   335dc:	b	333d0 <g_unichar_xdigit_value@plt+0x1f56c>
   335e0:	ldr	r0, [sp, #36]	; 0x24
   335e4:	mov	r1, r5
   335e8:	bl	321e8 <g_unichar_xdigit_value@plt+0x1e384>
   335ec:	cmp	r0, #0
   335f0:	beq	33624 <g_unichar_xdigit_value@plt+0x1f7c0>
   335f4:	bl	13b94 <g_object_unref@plt>
   335f8:	b	33488 <g_unichar_xdigit_value@plt+0x1f624>
   335fc:	ldr	r2, [pc, #1168]	; 33a94 <g_unichar_xdigit_value@plt+0x1fc30>
   33600:	mov	r1, #16
   33604:	ldr	r3, [sp, #32]
   33608:	add	r2, pc, r2
   3360c:	bl	13558 <g_log@plt>
   33610:	ldr	r0, [sp, #32]
   33614:	bl	1399c <g_free@plt>
   33618:	ldr	r0, [sp, #20]
   3361c:	bl	13b94 <g_object_unref@plt>
   33620:	b	334c4 <g_unichar_xdigit_value@plt+0x1f660>
   33624:	mov	r3, r8
   33628:	mov	r1, #128	; 0x80
   3362c:	ldr	r2, [sp, #48]	; 0x30
   33630:	str	r5, [sp]
   33634:	bl	13558 <g_log@plt>
   33638:	ldr	r2, [sp, #52]	; 0x34
   3363c:	mov	r1, r5
   33640:	ldr	r0, [sp, #36]	; 0x24
   33644:	bl	3253c <g_unichar_xdigit_value@plt+0x1e6d8>
   33648:	mov	r1, #10
   3364c:	str	r0, [sp, #40]	; 0x28
   33650:	mov	r0, r8
   33654:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   33658:	str	r0, [sp, #44]	; 0x2c
   3365c:	ldr	r0, [sp, #20]
   33660:	bl	32158 <g_unichar_xdigit_value@plt+0x1e2f4>
   33664:	ldr	r1, [sp, #44]	; 0x2c
   33668:	str	r0, [sp, #12]
   3366c:	bl	26650 <g_unichar_xdigit_value@plt+0x127ec>
   33670:	ldr	r3, [sp, #12]
   33674:	cmp	r3, #0
   33678:	mov	fp, r0
   3367c:	beq	33688 <g_unichar_xdigit_value@plt+0x1f824>
   33680:	mov	r0, r3
   33684:	bl	13b94 <g_object_unref@plt>
   33688:	ldr	r0, [sp, #40]	; 0x28
   3368c:	mov	r1, fp
   33690:	bl	320c4 <g_unichar_xdigit_value@plt+0x1e260>
   33694:	cmp	fp, #0
   33698:	beq	336a4 <g_unichar_xdigit_value@plt+0x1f840>
   3369c:	mov	r0, fp
   336a0:	bl	13b94 <g_object_unref@plt>
   336a4:	ldr	r2, [sp, #44]	; 0x2c
   336a8:	cmp	r2, #0
   336ac:	beq	336b8 <g_unichar_xdigit_value@plt+0x1f854>
   336b0:	mov	r0, r2
   336b4:	bl	13b94 <g_object_unref@plt>
   336b8:	ldr	r3, [sp, #40]	; 0x28
   336bc:	cmp	r3, #0
   336c0:	moveq	fp, r8
   336c4:	beq	33488 <g_unichar_xdigit_value@plt+0x1f624>
   336c8:	mov	r0, r3
   336cc:	mov	fp, r8
   336d0:	b	335f4 <g_unichar_xdigit_value@plt+0x1f790>
   336d4:	ldr	r1, [pc, #956]	; 33a98 <g_unichar_xdigit_value@plt+0x1fc34>
   336d8:	mov	r2, r5
   336dc:	ldr	r0, [sp, #40]	; 0x28
   336e0:	add	r1, pc, r1
   336e4:	bl	13810 <g_strsplit@plt>
   336e8:	cmp	r0, #0
   336ec:	str	r0, [sp, #20]
   336f0:	moveq	r5, r0
   336f4:	beq	337dc <g_unichar_xdigit_value@plt+0x1f978>
   336f8:	ldr	ip, [sp, #20]
   336fc:	ldr	r3, [ip]
   33700:	cmp	r3, #0
   33704:	beq	33be8 <g_unichar_xdigit_value@plt+0x1fd84>
   33708:	mov	r3, ip
   3370c:	ldr	r6, [r3, #4]!
   33710:	add	r5, r5, #1
   33714:	cmp	r6, #0
   33718:	bne	3370c <g_unichar_xdigit_value@plt+0x1f8a8>
   3371c:	ldr	ip, [pc, #888]	; 33a9c <g_unichar_xdigit_value@plt+0x1fc38>
   33720:	mov	r8, r6
   33724:	str	r4, [sp, #48]	; 0x30
   33728:	add	ip, pc, ip
   3372c:	str	ip, [sp, #36]	; 0x24
   33730:	ldr	ip, [pc, #872]	; 33aa0 <g_unichar_xdigit_value@plt+0x1fc3c>
   33734:	str	r5, [sp, #32]
   33738:	add	ip, pc, ip
   3373c:	str	ip, [sp, #56]	; 0x38
   33740:	ldr	ip, [sp, #20]
   33744:	str	fp, [sp, #52]	; 0x34
   33748:	sub	sl, ip, #4
   3374c:	ldr	ip, [pc, #848]	; 33aa4 <g_unichar_xdigit_value@plt+0x1fc40>
   33750:	add	ip, pc, ip
   33754:	str	ip, [sp, #68]	; 0x44
   33758:	ldr	ip, [pc, #840]	; 33aa8 <g_unichar_xdigit_value@plt+0x1fc44>
   3375c:	add	ip, pc, ip
   33760:	str	ip, [sp, #60]	; 0x3c
   33764:	ldr	ip, [pc, #832]	; 33aac <g_unichar_xdigit_value@plt+0x1fc48>
   33768:	add	ip, pc, ip
   3376c:	str	ip, [sp, #64]	; 0x40
   33770:	ldr	ip, [pc, #824]	; 33ab0 <g_unichar_xdigit_value@plt+0x1fc4c>
   33774:	add	ip, pc, ip
   33778:	str	ip, [sp, #72]	; 0x48
   3377c:	ldr	r0, [sl, #4]!
   33780:	bl	136f0 <g_strdup@plt>
   33784:	mov	r4, r0
   33788:	bl	31b38 <g_unichar_xdigit_value@plt+0x1dcd4>
   3378c:	mov	r9, r0
   33790:	mov	r0, r4
   33794:	bl	1399c <g_free@plt>
   33798:	mov	r0, r9
   3379c:	ldr	r1, [sp, #36]	; 0x24
   337a0:	bl	13e58 <g_strcmp0@plt>
   337a4:	cmp	r0, #0
   337a8:	bne	337f4 <g_unichar_xdigit_value@plt+0x1f990>
   337ac:	cmp	r6, #0
   337b0:	bne	33808 <g_unichar_xdigit_value@plt+0x1f9a4>
   337b4:	mov	r0, r9
   337b8:	mov	r6, #1
   337bc:	bl	1399c <g_free@plt>
   337c0:	ldr	ip, [sp, #32]
   337c4:	add	r8, r8, #1
   337c8:	cmp	r8, ip
   337cc:	bne	3377c <g_unichar_xdigit_value@plt+0x1f918>
   337d0:	ldr	r4, [sp, #48]	; 0x30
   337d4:	mov	r5, ip
   337d8:	ldr	fp, [sp, #52]	; 0x34
   337dc:	ldr	r0, [sp, #20]
   337e0:	mov	r1, r5
   337e4:	bl	31ce8 <g_unichar_xdigit_value@plt+0x1de84>
   337e8:	ldr	r0, [sp, #20]
   337ec:	bl	1399c <g_free@plt>
   337f0:	b	3326c <g_unichar_xdigit_value@plt+0x1f408>
   337f4:	cmp	r6, #0
   337f8:	mov	r0, r9
   337fc:	bne	33820 <g_unichar_xdigit_value@plt+0x1f9bc>
   33800:	bl	1399c <g_free@plt>
   33804:	b	337c0 <g_unichar_xdigit_value@plt+0x1f95c>
   33808:	mov	r0, r9
   3380c:	ldr	r4, [sp, #48]	; 0x30
   33810:	ldr	r5, [sp, #32]
   33814:	ldr	fp, [sp, #52]	; 0x34
   33818:	bl	1399c <g_free@plt>
   3381c:	b	337dc <g_unichar_xdigit_value@plt+0x1f978>
   33820:	ldr	r1, [sp, #56]	; 0x38
   33824:	mov	r2, #0
   33828:	bl	13810 <g_strsplit@plt>
   3382c:	cmp	r0, #0
   33830:	str	r0, [sp, #28]
   33834:	ldreq	r0, [r0]
   33838:	beq	33c98 <g_unichar_xdigit_value@plt+0x1fe34>
   3383c:	ldr	ip, [sp, #28]
   33840:	ldr	r0, [ip]
   33844:	cmp	r0, #0
   33848:	beq	33c98 <g_unichar_xdigit_value@plt+0x1fe34>
   3384c:	mov	r3, ip
   33850:	mov	r5, #0
   33854:	ldr	r2, [r3, #4]!
   33858:	add	r5, r5, #1
   3385c:	cmp	r2, #0
   33860:	bne	33854 <g_unichar_xdigit_value@plt+0x1f9f0>
   33864:	ldr	r1, [sp, #60]	; 0x3c
   33868:	bl	13e58 <g_strcmp0@plt>
   3386c:	cmp	r0, #0
   33870:	beq	33b84 <g_unichar_xdigit_value@plt+0x1fd20>
   33874:	cmp	r5, #1
   33878:	ble	33b84 <g_unichar_xdigit_value@plt+0x1fd20>
   3387c:	ldr	ip, [sp, #28]
   33880:	mov	r6, #1
   33884:	str	r8, [sp, #76]	; 0x4c
   33888:	add	r4, ip, #4
   3388c:	ldr	fp, [sp, #64]	; 0x40
   33890:	b	33adc <g_unichar_xdigit_value@plt+0x1fc78>
   33894:	andeq	lr, r1, r0, asr #14
   33898:	muleq	r0, r0, r3
   3389c:	muleq	r0, r8, r3
   338a0:	andeq	r0, r0, r4, asr #7
   338a4:	andeq	r0, r0, r8, lsr #7
   338a8:			; <UNDEFINED> instruction: 0xffffeef8
   338ac:	andeq	r0, r0, r0, lsr #7
   338b0:	muleq	r0, r4, r3
   338b4:	andeq	sl, r0, r8, ror #19
   338b8:	andeq	sl, r0, r0, ror #19
   338bc:	andeq	sl, r0, r8, asr #19
   338c0:	andeq	sl, r0, r8, asr #19
   338c4:			; <UNDEFINED> instruction: 0x0000a9b0
   338c8:	andeq	sl, r0, ip, lsr #19
   338cc:	muleq	r0, r4, r9
   338d0:	muleq	r0, r0, r9
   338d4:	andeq	sl, r0, r8, ror r9
   338d8:	andeq	sl, r0, r8, ror r9
   338dc:	andeq	sl, r0, r0, ror #18
   338e0:	andeq	sl, r0, r4, ror #18
   338e4:	andeq	sl, r0, ip, asr #18
   338e8:	andeq	sl, r0, ip, asr #18
   338ec:	andeq	sl, r0, r4, lsr r9
   338f0:	andeq	sl, r0, r4, lsr r9
   338f4:	andeq	sl, r0, ip, lsl r9
   338f8:	andeq	sl, r0, ip, lsl r9
   338fc:	andeq	sl, r0, r4, lsl #18
   33900:	andeq	sl, r0, r4, lsl #18
   33904:	andeq	sl, r0, ip, ror #17
   33908:	andeq	sl, r0, ip, ror #17
   3390c:	ldrdeq	sl, [r0], -r4
   33910:	ldrdeq	sl, [r0], -r4
   33914:			; <UNDEFINED> instruction: 0x0000a8bc
   33918:			; <UNDEFINED> instruction: 0x0000a8bc
   3391c:	andeq	sl, r0, r4, lsr #17
   33920:	andeq	sl, r0, r4, lsr #17
   33924:	andeq	sl, r0, ip, lsl #17
   33928:	andeq	sl, r0, ip, lsl #17
   3392c:	andeq	sl, r0, r4, ror r8
   33930:	andeq	sl, r0, r4, ror r8
   33934:	andeq	sl, r0, ip, asr r8
   33938:	andeq	sl, r0, r0, ror #16
   3393c:	andeq	sl, r0, r8, asr #16
   33940:	andeq	sl, r0, r8, asr #16
   33944:	andeq	sl, r0, r0, lsr r8
   33948:	andeq	sl, r0, r0, lsr r8
   3394c:	andeq	sl, r0, r8, lsl r8
   33950:	andeq	sl, r0, ip, lsl r8
   33954:	andeq	sl, r0, r4, lsl #16
   33958:	andeq	sl, r0, r4, lsl #16
   3395c:	andeq	sl, r0, ip, ror #15
   33960:	strdeq	sl, [r0], -r0
   33964:	ldrdeq	sl, [r0], -r8
   33968:	ldrdeq	sl, [r0], -ip
   3396c:	andeq	sl, r0, r4, asr #15
   33970:	andeq	sl, r0, r0, asr #15
   33974:	andeq	sl, r0, r8, lsr #15
   33978:	andeq	sl, r0, r8, lsr #15
   3397c:	muleq	r0, r0, r7
   33980:	muleq	r0, r0, r7
   33984:	andeq	sl, r0, r8, ror r7
   33988:	andeq	sl, r0, ip, ror r7
   3398c:	andeq	sl, r0, r4, ror #14
   33990:	andeq	sl, r0, r4, ror #14
   33994:	andeq	sl, r0, ip, asr #14
   33998:	andeq	sl, r0, ip, asr #14
   3399c:	andeq	sl, r0, r4, lsr r7
   339a0:	andeq	sl, r0, r4, lsr r7
   339a4:	andeq	sl, r0, ip, lsl r7
   339a8:	andeq	sl, r0, r0, lsr #14
   339ac:	andeq	sl, r0, r8, lsl #14
   339b0:	andeq	sl, r0, r8, lsl #14
   339b4:	strdeq	sl, [r0], -r0
   339b8:	andeq	sl, r0, ip, ror #13
   339bc:	ldrdeq	sl, [r0], -r4
   339c0:	ldrdeq	sl, [r0], -r4
   339c4:			; <UNDEFINED> instruction: 0x0000a6bc
   339c8:			; <UNDEFINED> instruction: 0x0000a6bc
   339cc:	andeq	sl, r0, r4, lsr #13
   339d0:	andeq	sl, r0, r4, lsr #13
   339d4:	andeq	sl, r0, ip, lsl #13
   339d8:	andeq	sl, r0, ip, lsl #13
   339dc:	andeq	sl, r0, r4, ror r6
   339e0:	andeq	sl, r0, r4, ror r6
   339e4:	andeq	sl, r0, ip, asr r6
   339e8:	andeq	sl, r0, ip, asr r6
   339ec:	andeq	sl, r0, r4, asr #12
   339f0:	andeq	sl, r0, r8, asr #12
   339f4:	andeq	sl, r0, r0, lsr r6
   339f8:	andeq	sl, r0, r4, lsr r6
   339fc:	andeq	sl, r0, ip, lsl r6
   33a00:	andeq	sl, r0, r0, lsr #12
   33a04:	andeq	sl, r0, r8, lsl #12
   33a08:	andeq	sl, r0, ip, lsl #12
   33a0c:	strdeq	sl, [r0], -r4
   33a10:	strdeq	sl, [r0], -r4
   33a14:	ldrdeq	sl, [r0], -ip
   33a18:	ldrdeq	sl, [r0], -r8
   33a1c:	andeq	sl, r0, r0, asr #11
   33a20:			; <UNDEFINED> instruction: 0x0000a5bc
   33a24:	andeq	sl, r0, r4, lsr #11
   33a28:	andeq	sl, r0, r8, lsr #11
   33a2c:	muleq	r0, r0, r5
   33a30:	muleq	r0, r0, r5
   33a34:	andeq	sl, r0, r8, ror r5
   33a38:	andeq	sl, r0, r8, ror r5
   33a3c:	andeq	sl, r0, r0, ror #10
   33a40:	andeq	sl, r0, r0, ror #10
   33a44:	andeq	sl, r0, r8, asr #10
   33a48:	andeq	sl, r0, r8, asr #10
   33a4c:	andeq	sl, r0, r4, lsl #14
   33a50:	andeq	sl, r0, r8, lsr #1
   33a54:	andeq	sl, r0, r0, lsr r5
   33a58:	andeq	sl, r0, ip, lsr #10
   33a5c:	andeq	sl, r0, r0, lsr #10
   33a60:	andeq	sl, r0, ip, lsl r5
   33a64:	andeq	sl, r0, ip, asr #10
   33a68:	andeq	sl, r0, r0, asr r5
   33a6c:	andeq	sl, r0, r4, ror r5
   33a70:	andeq	sl, r0, ip, lsr #12
   33a74:	strdeq	r9, [r0], -ip
   33a78:	andeq	sl, r0, r8, ror r5
   33a7c:	andeq	sl, r0, r0, asr #12
   33a80:	andeq	sl, r0, ip, asr #8
   33a84:	andeq	r9, r0, r4, ror #20
   33a88:	andeq	r4, r0, r8, asr fp
   33a8c:	andeq	sl, r0, ip, asr #6
   33a90:	andeq	lr, r1, r8, lsl r0
   33a94:	strdeq	sl, [r0], -r8
   33a98:	andeq	r4, r0, r4, asr sl
   33a9c:	andeq	r5, r0, ip, lsl sl
   33aa0:	andeq	sl, r0, r8
   33aa4:	andeq	r9, r0, r4, lsl r8
   33aa8:	andeq	r9, r0, r8, lsl #16
   33aac:	ldrdeq	r5, [r0], -ip
   33ab0:	andeq	sl, r0, r4
   33ab4:	andeq	r9, r0, ip, ror #23
   33ab8:	andeq	r9, r0, r8, ror #24
   33abc:	andeq	r9, r0, r4, asr #25
   33ac0:	andeq	r9, r0, r8, lsl #22
   33ac4:	andeq	r9, r0, r0, lsr #22
   33ac8:	mov	r0, r8
   33acc:	add	r6, r6, #1
   33ad0:	bl	1399c <g_free@plt>
   33ad4:	cmp	r5, r6
   33ad8:	beq	33ba8 <g_unichar_xdigit_value@plt+0x1fd44>
   33adc:	mov	r7, r4
   33ae0:	add	r4, r4, #4
   33ae4:	ldr	r0, [r7]
   33ae8:	bl	31b38 <g_unichar_xdigit_value@plt+0x1dcd4>
   33aec:	mov	r1, fp
   33af0:	mov	r8, r0
   33af4:	bl	13e58 <g_strcmp0@plt>
   33af8:	cmp	r0, #0
   33afc:	beq	33ac8 <g_unichar_xdigit_value@plt+0x1fc64>
   33b00:	mov	fp, r8
   33b04:	ldr	r8, [sp, #76]	; 0x4c
   33b08:	mov	r0, fp
   33b0c:	bl	1399c <g_free@plt>
   33b10:	cmp	r5, r6
   33b14:	ble	33b84 <g_unichar_xdigit_value@plt+0x1fd20>
   33b18:	ldr	ip, [sp, #28]
   33b1c:	ldr	r0, [sp, #48]	; 0x30
   33b20:	ldr	r1, [ip]
   33b24:	bl	138e8 <g_hash_table_lookup@plt>
   33b28:	bl	136f0 <g_strdup@plt>
   33b2c:	subs	r6, r0, #0
   33b30:	beq	33c0c <g_unichar_xdigit_value@plt+0x1fda8>
   33b34:	mov	r1, r6
   33b38:	ldr	r0, [sp, #52]	; 0x34
   33b3c:	bl	321e8 <g_unichar_xdigit_value@plt+0x1e384>
   33b40:	mov	r1, #10
   33b44:	mov	r4, r0
   33b48:	ldr	r0, [r7]
   33b4c:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   33b50:	cmp	r4, #0
   33b54:	mov	fp, r0
   33b58:	beq	33c24 <g_unichar_xdigit_value@plt+0x1fdc0>
   33b5c:	cmp	fp, #0
   33b60:	beq	33b6c <g_unichar_xdigit_value@plt+0x1fd08>
   33b64:	mov	r0, fp
   33b68:	bl	13b94 <g_object_unref@plt>
   33b6c:	cmp	r4, #0
   33b70:	beq	33b7c <g_unichar_xdigit_value@plt+0x1fd18>
   33b74:	mov	r0, r4
   33b78:	bl	13b94 <g_object_unref@plt>
   33b7c:	mov	r0, r6
   33b80:	bl	1399c <g_free@plt>
   33b84:	mov	r1, r5
   33b88:	ldr	r0, [sp, #28]
   33b8c:	bl	31ce8 <g_unichar_xdigit_value@plt+0x1de84>
   33b90:	ldr	r0, [sp, #28]
   33b94:	bl	1399c <g_free@plt>
   33b98:	mov	r0, r9
   33b9c:	bl	1399c <g_free@plt>
   33ba0:	mov	r6, #1
   33ba4:	b	337c0 <g_unichar_xdigit_value@plt+0x1f95c>
   33ba8:	ldr	r8, [sp, #76]	; 0x4c
   33bac:	b	33b84 <g_unichar_xdigit_value@plt+0x1fd20>
   33bb0:	ldr	r2, [pc, #-260]	; 33ab4 <g_unichar_xdigit_value@plt+0x1fc50>
   33bb4:	mov	r1, #16
   33bb8:	add	r2, pc, r2
   33bbc:	bl	13558 <g_log@plt>
   33bc0:	b	334c4 <g_unichar_xdigit_value@plt+0x1f660>
   33bc4:	ldr	r2, [pc, #-276]	; 33ab8 <g_unichar_xdigit_value@plt+0x1fc54>
   33bc8:	mov	r1, #16
   33bcc:	add	r2, pc, r2
   33bd0:	bl	13558 <g_log@plt>
   33bd4:	ldr	r0, [sp, #32]
   33bd8:	bl	1399c <g_free@plt>
   33bdc:	ldr	r0, [sp, #20]
   33be0:	bl	13b94 <g_object_unref@plt>
   33be4:	b	334c4 <g_unichar_xdigit_value@plt+0x1f660>
   33be8:	mov	r5, r3
   33bec:	b	337dc <g_unichar_xdigit_value@plt+0x1f978>
   33bf0:	mov	r5, fp
   33bf4:	b	33488 <g_unichar_xdigit_value@plt+0x1f624>
   33bf8:	ldr	r2, [pc, #-324]	; 33abc <g_unichar_xdigit_value@plt+0x1fc58>
   33bfc:	mov	r1, #16
   33c00:	add	r2, pc, r2
   33c04:	bl	13558 <g_log@plt>
   33c08:	b	334ac <g_unichar_xdigit_value@plt+0x1f648>
   33c0c:	ldr	ip, [sp, #28]
   33c10:	mov	r1, #16
   33c14:	ldr	r2, [sp, #72]	; 0x48
   33c18:	ldr	r3, [ip]
   33c1c:	bl	13558 <g_log@plt>
   33c20:	b	33b7c <g_unichar_xdigit_value@plt+0x1fd18>
   33c24:	cmp	r0, #0
   33c28:	beq	33b7c <g_unichar_xdigit_value@plt+0x1fd18>
   33c2c:	ldr	r2, [pc, #-372]	; 33ac0 <g_unichar_xdigit_value@plt+0x1fc5c>
   33c30:	mov	r0, r4
   33c34:	ldr	r3, [r7]
   33c38:	mov	r1, #128	; 0x80
   33c3c:	add	r2, pc, r2
   33c40:	str	r6, [sp]
   33c44:	bl	13558 <g_log@plt>
   33c48:	ldr	r2, [pc, #-396]	; 33ac4 <g_unichar_xdigit_value@plt+0x1fc60>
   33c4c:	mov	r1, r6
   33c50:	ldr	r0, [sp, #52]	; 0x34
   33c54:	add	r2, pc, r2
   33c58:	bl	3253c <g_unichar_xdigit_value@plt+0x1e6d8>
   33c5c:	mov	r4, r0
   33c60:	mov	r0, fp
   33c64:	bl	25df8 <g_unichar_xdigit_value@plt+0x11f94>
   33c68:	mov	r7, r0
   33c6c:	mov	r0, fp
   33c70:	bl	13b94 <g_object_unref@plt>
   33c74:	cmp	r4, #0
   33c78:	moveq	fp, r7
   33c7c:	beq	33b5c <g_unichar_xdigit_value@plt+0x1fcf8>
   33c80:	mov	r0, r4
   33c84:	mov	r1, r7
   33c88:	bl	320c4 <g_unichar_xdigit_value@plt+0x1e260>
   33c8c:	mov	fp, r7
   33c90:	b	33b5c <g_unichar_xdigit_value@plt+0x1fcf8>
   33c94:	bl	13978 <__stack_chk_fail@plt>
   33c98:	ldr	r1, [sp, #68]	; 0x44
   33c9c:	mov	r5, #0
   33ca0:	bl	13e58 <g_strcmp0@plt>
   33ca4:	b	33b84 <g_unichar_xdigit_value@plt+0x1fd20>
   33ca8:	push	{r4, r5, r6, r7, lr}
   33cac:	mov	r4, r0
   33cb0:	ldr	r5, [pc, #1080]	; 340f0 <g_unichar_xdigit_value@plt+0x2028c>
   33cb4:	sub	sp, sp, #20
   33cb8:	ldr	r3, [r0]
   33cbc:	add	r5, pc, r5
   33cc0:	cmp	r3, #3
   33cc4:	addls	pc, pc, r3, lsl #2
   33cc8:	b	33f5c <g_unichar_xdigit_value@plt+0x200f8>
   33ccc:	b	33ed0 <g_unichar_xdigit_value@plt+0x2006c>
   33cd0:	b	33e70 <g_unichar_xdigit_value@plt+0x2000c>
   33cd4:	b	33e28 <g_unichar_xdigit_value@plt+0x1ffc4>
   33cd8:	b	33cdc <g_unichar_xdigit_value@plt+0x1fe78>
   33cdc:	add	r6, r0, #124	; 0x7c
   33ce0:	ldr	r1, [r4, #8]
   33ce4:	ldr	r0, [r0, #104]	; 0x68
   33ce8:	mov	r2, r6
   33cec:	bl	13d74 <g_output_stream_splice_finish@plt>
   33cf0:	ldr	r7, [r4, #124]	; 0x7c
   33cf4:	cmp	r7, #0
   33cf8:	beq	33fbc <g_unichar_xdigit_value@plt+0x20158>
   33cfc:	ldr	r0, [r4, #92]	; 0x5c
   33d00:	cmp	r0, #0
   33d04:	beq	33d14 <g_unichar_xdigit_value@plt+0x1feb0>
   33d08:	bl	13b94 <g_object_unref@plt>
   33d0c:	mov	r3, #0
   33d10:	str	r3, [r4, #92]	; 0x5c
   33d14:	ldr	r0, [r4, #76]	; 0x4c
   33d18:	cmp	r0, #0
   33d1c:	ldreq	ip, [r4, #124]	; 0x7c
   33d20:	bne	33e5c <g_unichar_xdigit_value@plt+0x1fff8>
   33d24:	ldr	r3, [ip, #8]
   33d28:	mov	r5, #0
   33d2c:	ldr	r2, [pc, #960]	; 340f4 <g_unichar_xdigit_value@plt+0x20290>
   33d30:	mov	r0, r5
   33d34:	str	ip, [r4, #112]	; 0x70
   33d38:	mov	r1, #16
   33d3c:	str	r3, [r4, #120]	; 0x78
   33d40:	add	r2, pc, r2
   33d44:	str	ip, [r4, #116]	; 0x74
   33d48:	str	r5, [r4, #124]	; 0x7c
   33d4c:	str	r3, [sp]
   33d50:	ldr	r3, [r4, #36]	; 0x24
   33d54:	bl	13558 <g_log@plt>
   33d58:	ldr	r0, [r4, #112]	; 0x70
   33d5c:	cmp	r0, r5
   33d60:	beq	33d6c <g_unichar_xdigit_value@plt+0x1ff08>
   33d64:	bl	13498 <g_error_free@plt>
   33d68:	str	r5, [r4, #112]	; 0x70
   33d6c:	ldr	r5, [r4, #124]	; 0x7c
   33d70:	cmp	r5, #0
   33d74:	beq	34044 <g_unichar_xdigit_value@plt+0x201e0>
   33d78:	ldr	r0, [r4, #68]	; 0x44
   33d7c:	cmp	r0, #0
   33d80:	beq	33d90 <g_unichar_xdigit_value@plt+0x1ff2c>
   33d84:	bl	13b94 <g_object_unref@plt>
   33d88:	mov	r3, #0
   33d8c:	str	r3, [r4, #68]	; 0x44
   33d90:	ldr	r0, [r4, #60]	; 0x3c
   33d94:	cmp	r0, #0
   33d98:	beq	33da8 <g_unichar_xdigit_value@plt+0x1ff44>
   33d9c:	bl	13b94 <g_object_unref@plt>
   33da0:	mov	r3, #0
   33da4:	str	r3, [r4, #60]	; 0x3c
   33da8:	ldr	r0, [r4, #52]	; 0x34
   33dac:	cmp	r0, #0
   33db0:	beq	33dc0 <g_unichar_xdigit_value@plt+0x1ff5c>
   33db4:	bl	13b94 <g_object_unref@plt>
   33db8:	mov	r3, #0
   33dbc:	str	r3, [r4, #52]	; 0x34
   33dc0:	ldr	r0, [r4, #40]	; 0x28
   33dc4:	mov	r7, #0
   33dc8:	bl	1399c <g_free@plt>
   33dcc:	ldr	r5, [r4, #124]	; 0x7c
   33dd0:	str	r7, [r4, #40]	; 0x28
   33dd4:	ldr	r0, [r5]
   33dd8:	bl	139f0 <g_quark_to_string@plt>
   33ddc:	mov	r3, #2176	; 0x880
   33de0:	str	r3, [sp]
   33de4:	mov	r1, #8
   33de8:	ldr	ip, [r5, #8]
   33dec:	ldr	r2, [pc, #772]	; 340f8 <g_unichar_xdigit_value@plt+0x20294>
   33df0:	ldr	r3, [pc, #772]	; 340fc <g_unichar_xdigit_value@plt+0x20298>
   33df4:	str	ip, [sp, #4]
   33df8:	add	r2, pc, r2
   33dfc:	add	r3, pc, r3
   33e00:	str	r0, [sp, #8]
   33e04:	mov	r0, r7
   33e08:	ldr	ip, [r5, #4]
   33e0c:	str	ip, [sp, #12]
   33e10:	bl	13558 <g_log@plt>
   33e14:	mov	r0, r6
   33e18:	bl	13aec <g_clear_error@plt>
   33e1c:	ldr	r0, [r4, #12]
   33e20:	bl	13b94 <g_object_unref@plt>
   33e24:	b	33f50 <g_unichar_xdigit_value@plt+0x200ec>
   33e28:	add	r6, r0, #124	; 0x7c
   33e2c:	ldr	r1, [r4, #8]
   33e30:	ldr	r0, [r0, #96]	; 0x60
   33e34:	mov	r2, r6
   33e38:	bl	13408 <g_file_replace_finish@plt>
   33e3c:	ldr	ip, [r4, #124]	; 0x7c
   33e40:	cmp	ip, #0
   33e44:	str	r0, [r4, #100]	; 0x64
   33e48:	str	r0, [r4, #92]	; 0x5c
   33e4c:	beq	33f84 <g_unichar_xdigit_value@plt+0x20120>
   33e50:	ldr	r0, [r4, #76]	; 0x4c
   33e54:	cmp	r0, #0
   33e58:	beq	33d24 <g_unichar_xdigit_value@plt+0x1fec0>
   33e5c:	bl	13b94 <g_object_unref@plt>
   33e60:	mov	r3, #0
   33e64:	ldr	ip, [r4, #124]	; 0x7c
   33e68:	str	r3, [r4, #76]	; 0x4c
   33e6c:	b	33d24 <g_unichar_xdigit_value@plt+0x1fec0>
   33e70:	add	r6, r0, #124	; 0x7c
   33e74:	ldr	r1, [r4, #8]
   33e78:	ldr	r0, [r0, #80]	; 0x50
   33e7c:	mov	r2, r6
   33e80:	bl	13ab0 <soup_session_send_finish@plt>
   33e84:	ldr	ip, [r4, #124]	; 0x7c
   33e88:	cmp	ip, #0
   33e8c:	str	r0, [r4, #88]	; 0x58
   33e90:	str	r0, [r4, #76]	; 0x4c
   33e94:	bne	33d24 <g_unichar_xdigit_value@plt+0x1fec0>
   33e98:	ldr	r0, [r4, #52]	; 0x34
   33e9c:	mov	r3, #2
   33ea0:	ldr	lr, [pc, #600]	; 34100 <g_unichar_xdigit_value@plt+0x2029c>
   33ea4:	mov	r1, ip
   33ea8:	str	r3, [r4]
   33eac:	mov	r2, ip
   33eb0:	str	r0, [r4, #96]	; 0x60
   33eb4:	add	lr, pc, lr
   33eb8:	str	ip, [sp]
   33ebc:	str	ip, [sp, #4]
   33ec0:	str	r4, [sp, #12]
   33ec4:	str	lr, [sp, #8]
   33ec8:	bl	1393c <g_file_replace_async@plt>
   33ecc:	b	33f50 <g_unichar_xdigit_value@plt+0x200ec>
   33ed0:	ldr	r0, [r0, #32]
   33ed4:	bl	13b70 <g_path_get_dirname@plt>
   33ed8:	movw	r1, #493	; 0x1ed
   33edc:	str	r0, [r4, #44]	; 0x2c
   33ee0:	str	r0, [r4, #40]	; 0x28
   33ee4:	str	r0, [r4, #48]	; 0x30
   33ee8:	bl	1345c <g_mkdir_with_parents@plt>
   33eec:	ldr	r0, [r4, #32]
   33ef0:	bl	13c6c <g_file_new_for_path@plt>
   33ef4:	str	r0, [r4, #56]	; 0x38
   33ef8:	str	r0, [r4, #52]	; 0x34
   33efc:	bl	13a68 <soup_session_new@plt>
   33f00:	ldr	r1, [r4, #28]
   33f04:	str	r0, [r4, #64]	; 0x40
   33f08:	str	r0, [r4, #60]	; 0x3c
   33f0c:	ldr	r0, [pc, #496]	; 34104 <g_unichar_xdigit_value@plt+0x202a0>
   33f10:	add	r0, pc, r0
   33f14:	bl	13930 <soup_message_new@plt>
   33f18:	ldr	r3, [r4, #60]	; 0x3c
   33f1c:	mov	ip, #1
   33f20:	mov	r2, #0
   33f24:	str	ip, [r4]
   33f28:	str	r3, [r4, #80]	; 0x50
   33f2c:	str	r0, [r4, #72]	; 0x48
   33f30:	mov	r1, r0
   33f34:	str	r0, [r4, #68]	; 0x44
   33f38:	str	r0, [r4, #84]	; 0x54
   33f3c:	mov	r0, r3
   33f40:	ldr	r3, [pc, #448]	; 34108 <g_unichar_xdigit_value@plt+0x202a4>
   33f44:	str	r4, [sp]
   33f48:	add	r3, pc, r3
   33f4c:	bl	1357c <soup_session_send_async@plt>
   33f50:	mov	r0, #0
   33f54:	add	sp, sp, #20
   33f58:	pop	{r4, r5, r6, r7, pc}
   33f5c:	ldr	r3, [pc, #424]	; 3410c <g_unichar_xdigit_value@plt+0x202a8>
   33f60:	mov	r2, #0
   33f64:	ldr	r1, [pc, #420]	; 34110 <g_unichar_xdigit_value@plt+0x202ac>
   33f68:	mov	r0, r2
   33f6c:	add	r3, pc, r3
   33f70:	str	r2, [sp]
   33f74:	add	r3, r3, #456	; 0x1c8
   33f78:	add	r1, pc, r1
   33f7c:	movw	r2, #2102	; 0x836
   33f80:	bl	13d2c <g_assertion_message_expr@plt>
   33f84:	ldr	r1, [r4, #76]	; 0x4c
   33f88:	mov	r5, #3
   33f8c:	ldr	r6, [pc, #384]	; 34114 <g_unichar_xdigit_value@plt+0x202b0>
   33f90:	mov	r3, ip
   33f94:	str	r0, [r4, #104]	; 0x68
   33f98:	mov	r2, r5
   33f9c:	str	r1, [r4, #108]	; 0x6c
   33fa0:	add	r6, pc, r6
   33fa4:	str	ip, [sp]
   33fa8:	str	r4, [sp, #8]
   33fac:	str	r6, [sp, #4]
   33fb0:	str	r5, [r4]
   33fb4:	bl	1378c <g_output_stream_splice_async@plt>
   33fb8:	b	33f50 <g_unichar_xdigit_value@plt+0x200ec>
   33fbc:	ldr	r1, [pc, #340]	; 34118 <g_unichar_xdigit_value@plt+0x202b4>
   33fc0:	ldr	r0, [r4, #36]	; 0x24
   33fc4:	add	r1, pc, r1
   33fc8:	bl	13e58 <g_strcmp0@plt>
   33fcc:	cmp	r0, #0
   33fd0:	bne	34034 <g_unichar_xdigit_value@plt+0x201d0>
   33fd4:	ldr	r3, [pc, #320]	; 3411c <g_unichar_xdigit_value@plt+0x202b8>
   33fd8:	ldr	r3, [r5, r3]
   33fdc:	str	r0, [r3]
   33fe0:	ldr	r0, [r4, #24]
   33fe4:	bl	328b0 <g_unichar_xdigit_value@plt+0x1ea4c>
   33fe8:	ldr	r2, [pc, #304]	; 34120 <g_unichar_xdigit_value@plt+0x202bc>
   33fec:	mov	r0, #0
   33ff0:	mov	r1, #128	; 0x80
   33ff4:	add	r2, pc, r2
   33ff8:	ldr	r3, [r4, #36]	; 0x24
   33ffc:	bl	13558 <g_log@plt>
   34000:	ldr	r0, [r4, #92]	; 0x5c
   34004:	cmp	r0, #0
   34008:	beq	34018 <g_unichar_xdigit_value@plt+0x201b4>
   3400c:	bl	13b94 <g_object_unref@plt>
   34010:	mov	r3, #0
   34014:	str	r3, [r4, #92]	; 0x5c
   34018:	ldr	r0, [r4, #76]	; 0x4c
   3401c:	cmp	r0, #0
   34020:	beq	33d6c <g_unichar_xdigit_value@plt+0x1ff08>
   34024:	bl	13b94 <g_object_unref@plt>
   34028:	mov	r3, #0
   3402c:	str	r3, [r4, #76]	; 0x4c
   34030:	b	33d6c <g_unichar_xdigit_value@plt+0x1ff08>
   34034:	ldr	r3, [pc, #232]	; 34124 <g_unichar_xdigit_value@plt+0x202c0>
   34038:	ldr	r3, [r5, r3]
   3403c:	str	r7, [r3]
   34040:	b	33fe0 <g_unichar_xdigit_value@plt+0x2017c>
   34044:	ldr	r0, [r4, #68]	; 0x44
   34048:	cmp	r0, #0
   3404c:	beq	34058 <g_unichar_xdigit_value@plt+0x201f4>
   34050:	bl	13b94 <g_object_unref@plt>
   34054:	str	r5, [r4, #68]	; 0x44
   34058:	ldr	r0, [r4, #60]	; 0x3c
   3405c:	cmp	r0, #0
   34060:	beq	34070 <g_unichar_xdigit_value@plt+0x2020c>
   34064:	bl	13b94 <g_object_unref@plt>
   34068:	mov	r3, #0
   3406c:	str	r3, [r4, #60]	; 0x3c
   34070:	ldr	r0, [r4, #52]	; 0x34
   34074:	cmp	r0, #0
   34078:	beq	34088 <g_unichar_xdigit_value@plt+0x20224>
   3407c:	bl	13b94 <g_object_unref@plt>
   34080:	mov	r3, #0
   34084:	str	r3, [r4, #52]	; 0x34
   34088:	ldr	r0, [r4, #40]	; 0x28
   3408c:	bl	1399c <g_free@plt>
   34090:	mov	r3, #0
   34094:	mov	r2, r3
   34098:	str	r3, [r4, #40]	; 0x28
   3409c:	ldr	r0, [r4, #12]
   340a0:	mov	r1, r4
   340a4:	bl	13570 <g_task_return_pointer@plt>
   340a8:	ldr	r3, [r4]
   340ac:	cmp	r3, #0
   340b0:	beq	340dc <g_unichar_xdigit_value@plt+0x20278>
   340b4:	ldr	r3, [r4, #20]
   340b8:	cmp	r3, #1
   340bc:	beq	340dc <g_unichar_xdigit_value@plt+0x20278>
   340c0:	ldr	r0, [r4, #12]
   340c4:	bl	139b4 <g_task_get_context@plt>
   340c8:	mov	r1, #1
   340cc:	bl	138dc <g_main_context_iteration@plt>
   340d0:	ldr	r3, [r4, #20]
   340d4:	cmp	r3, #1
   340d8:	bne	340c0 <g_unichar_xdigit_value@plt+0x2025c>
   340dc:	ldr	r0, [r4, #12]
   340e0:	bl	13b94 <g_object_unref@plt>
   340e4:	mov	r0, #0
   340e8:	add	sp, sp, #20
   340ec:	pop	{r4, r5, r6, r7, pc}
   340f0:	andeq	sp, r1, ip, lsr r3
   340f4:	ldrdeq	r9, [r0], -r0
   340f8:	andeq	r5, r0, r8, asr #25
   340fc:	andeq	r9, r0, ip, asr #23
   34100:	andeq	r0, r0, ip, ror #4
   34104:	ldrdeq	r9, [r0], -r8
   34108:	ldrdeq	r0, [r0], -r8
   3410c:	andeq	r9, r0, r0, lsl #1
   34110:	andeq	r9, r0, r0, asr sl
   34114:	andeq	r0, r0, r0, lsl #3
   34118:	andeq	r9, r0, ip, lsl #21
   3411c:	andeq	r0, r0, r4, asr #7
   34120:	strdeq	r9, [r0], -r8
   34124:	andeq	r0, r0, r8, lsr #7
   34128:	mov	r3, #1
   3412c:	str	r0, [r2, #4]
   34130:	str	r1, [r2, #8]
   34134:	mov	r0, r2
   34138:	str	r3, [r2, #20]
   3413c:	b	33ca8 <g_unichar_xdigit_value@plt+0x1fe44>
   34140:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   34144:	mov	r5, r0
   34148:	mov	r0, #128	; 0x80
   3414c:	mov	r8, r2
   34150:	mov	r7, r3
   34154:	mov	r9, r1
   34158:	bl	138b8 <g_slice_alloc0@plt>
   3415c:	mov	r1, #80	; 0x50
   34160:	mov	r6, #0
   34164:	mov	r4, r0
   34168:	mov	r0, r5
   3416c:	str	r6, [r4, #16]
   34170:	bl	13510 <g_type_check_instance_cast@plt>
   34174:	ldr	r2, [pc, #148]	; 34210 <g_unichar_xdigit_value@plt+0x203ac>
   34178:	mov	r1, r6
   3417c:	mov	r3, r6
   34180:	add	r2, pc, r2
   34184:	bl	13d44 <g_task_new@plt>
   34188:	ldr	r2, [pc, #132]	; 34214 <g_unichar_xdigit_value@plt+0x203b0>
   3418c:	mov	r1, r4
   34190:	mov	r3, #1
   34194:	add	r2, pc, r2
   34198:	str	r3, [r4, #20]
   3419c:	str	r0, [r4, #12]
   341a0:	bl	13a14 <g_task_set_task_data@plt>
   341a4:	cmp	r5, r6
   341a8:	beq	341b8 <g_unichar_xdigit_value@plt+0x20354>
   341ac:	mov	r0, r5
   341b0:	bl	133f0 <g_object_ref@plt>
   341b4:	mov	r5, r0
   341b8:	mov	r0, r9
   341bc:	str	r5, [r4, #24]
   341c0:	bl	136f0 <g_strdup@plt>
   341c4:	mov	r5, r0
   341c8:	ldr	r0, [r4, #28]
   341cc:	bl	1399c <g_free@plt>
   341d0:	mov	r0, r8
   341d4:	str	r5, [r4, #28]
   341d8:	bl	136f0 <g_strdup@plt>
   341dc:	mov	r5, r0
   341e0:	ldr	r0, [r4, #32]
   341e4:	bl	1399c <g_free@plt>
   341e8:	mov	r0, r7
   341ec:	str	r5, [r4, #32]
   341f0:	bl	136f0 <g_strdup@plt>
   341f4:	mov	r5, r0
   341f8:	ldr	r0, [r4, #36]	; 0x24
   341fc:	bl	1399c <g_free@plt>
   34200:	mov	r0, r4
   34204:	str	r5, [r4, #36]	; 0x24
   34208:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   3420c:	b	33ca8 <g_unichar_xdigit_value@plt+0x1fe44>
   34210:			; <UNDEFINED> instruction: 0xffffd6fc
   34214:			; <UNDEFINED> instruction: 0xffffd694
   34218:	push	{r4, r5, r6, r7, r8, lr}
   3421c:	subs	r5, r0, #0
   34220:	ldr	r4, [pc, #280]	; 34340 <g_unichar_xdigit_value@plt+0x204dc>
   34224:	add	r4, pc, r4
   34228:	beq	34324 <g_unichar_xdigit_value@plt+0x204c0>
   3422c:	bl	31a84 <g_unichar_xdigit_value@plt+0x1dc20>
   34230:	ldr	r3, [pc, #268]	; 34344 <g_unichar_xdigit_value@plt+0x204e0>
   34234:	ldr	r6, [r4, r3]
   34238:	ldr	r8, [r6]
   3423c:	cmp	r8, #0
   34240:	mov	r7, r0
   34244:	beq	3427c <g_unichar_xdigit_value@plt+0x20418>
   34248:	mov	r0, r5
   3424c:	bl	31adc <g_unichar_xdigit_value@plt+0x1dc78>
   34250:	mov	r6, r0
   34254:	mov	r0, r7
   34258:	bl	1399c <g_free@plt>
   3425c:	ldr	r3, [pc, #228]	; 34348 <g_unichar_xdigit_value@plt+0x204e4>
   34260:	ldr	r4, [r4, r3]
   34264:	ldr	r7, [r4]
   34268:	cmp	r7, #0
   3426c:	beq	342cc <g_unichar_xdigit_value@plt+0x20468>
   34270:	mov	r0, r6
   34274:	pop	{r4, r5, r6, r7, r8, lr}
   34278:	b	1399c <g_free@plt>
   3427c:	mov	r0, r5
   34280:	mov	r1, r7
   34284:	bl	31b80 <g_unichar_xdigit_value@plt+0x1dd1c>
   34288:	cmp	r0, #0
   3428c:	beq	34248 <g_unichar_xdigit_value@plt+0x203e4>
   34290:	ldr	r2, [pc, #180]	; 3434c <g_unichar_xdigit_value@plt+0x204e8>
   34294:	mov	r0, r8
   34298:	mov	r1, #128	; 0x80
   3429c:	mov	r3, #1
   342a0:	add	r2, pc, r2
   342a4:	str	r3, [r6]
   342a8:	bl	13558 <g_log@plt>
   342ac:	ldr	r1, [pc, #156]	; 34350 <g_unichar_xdigit_value@plt+0x204ec>
   342b0:	ldr	r3, [pc, #156]	; 34354 <g_unichar_xdigit_value@plt+0x204f0>
   342b4:	mov	r0, r5
   342b8:	add	r1, pc, r1
   342bc:	mov	r2, r7
   342c0:	add	r3, pc, r3
   342c4:	bl	34140 <g_unichar_xdigit_value@plt+0x202dc>
   342c8:	b	34248 <g_unichar_xdigit_value@plt+0x203e4>
   342cc:	mov	r0, r5
   342d0:	mov	r1, r6
   342d4:	bl	31b80 <g_unichar_xdigit_value@plt+0x1dd1c>
   342d8:	cmp	r0, #0
   342dc:	beq	34270 <g_unichar_xdigit_value@plt+0x2040c>
   342e0:	ldr	r2, [pc, #112]	; 34358 <g_unichar_xdigit_value@plt+0x204f4>
   342e4:	mov	r0, r7
   342e8:	mov	r1, #128	; 0x80
   342ec:	mov	r3, #1
   342f0:	add	r2, pc, r2
   342f4:	str	r3, [r4]
   342f8:	bl	13558 <g_log@plt>
   342fc:	ldr	r1, [pc, #88]	; 3435c <g_unichar_xdigit_value@plt+0x204f8>
   34300:	ldr	r3, [pc, #88]	; 34360 <g_unichar_xdigit_value@plt+0x204fc>
   34304:	mov	r0, r5
   34308:	mov	r2, r6
   3430c:	add	r1, pc, r1
   34310:	add	r3, pc, r3
   34314:	bl	34140 <g_unichar_xdigit_value@plt+0x202dc>
   34318:	mov	r0, r6
   3431c:	pop	{r4, r5, r6, r7, r8, lr}
   34320:	b	1399c <g_free@plt>
   34324:	ldr	r1, [pc, #56]	; 34364 <g_unichar_xdigit_value@plt+0x20500>
   34328:	ldr	r2, [pc, #56]	; 34368 <g_unichar_xdigit_value@plt+0x20504>
   3432c:	add	r1, pc, r1
   34330:	add	r2, pc, r2
   34334:	add	r1, r1, #492	; 0x1ec
   34338:	pop	{r4, r5, r6, r7, r8, lr}
   3433c:	b	13450 <g_return_if_fail_warning@plt>
   34340:	ldrdeq	ip, [r1], -r4
   34344:	andeq	r0, r0, r4, asr #7
   34348:	andeq	r0, r0, r8, lsr #7
   3434c:			; <UNDEFINED> instruction: 0x000097b4
   34350:	ldrdeq	r9, [r0], -r4
   34354:	muleq	r0, r0, r7
   34358:	andeq	r9, r0, r0, ror #15
   3435c:	strdeq	r9, [r0], -ip
   34360:	andeq	r9, r0, r8, lsr r8
   34364:	andeq	r8, r0, r0, asr #25
   34368:			; <UNDEFINED> instruction: 0x00003db4
   3436c:	push	{r3, r4, r5, lr}
   34370:	subs	r5, r0, #0
   34374:	mov	r4, r1
   34378:	beq	343cc <g_unichar_xdigit_value@plt+0x20568>
   3437c:	cmp	r1, #0
   34380:	beq	343ec <g_unichar_xdigit_value@plt+0x20588>
   34384:	bl	34218 <g_unichar_xdigit_value@plt+0x203b4>
   34388:	mov	r0, r5
   3438c:	bl	328b0 <g_unichar_xdigit_value@plt+0x1ea4c>
   34390:	cmp	r0, #0
   34394:	beq	343c4 <g_unichar_xdigit_value@plt+0x20560>
   34398:	mov	r1, r4
   3439c:	mov	r0, r5
   343a0:	bl	321e8 <g_unichar_xdigit_value@plt+0x1e384>
   343a4:	subs	r4, r0, #0
   343a8:	beq	343c4 <g_unichar_xdigit_value@plt+0x20560>
   343ac:	bl	32158 <g_unichar_xdigit_value@plt+0x1e2f4>
   343b0:	mov	r5, r0
   343b4:	mov	r0, r4
   343b8:	bl	13b94 <g_object_unref@plt>
   343bc:	mov	r0, r5
   343c0:	pop	{r3, r4, r5, pc}
   343c4:	mov	r0, #0
   343c8:	pop	{r3, r4, r5, pc}
   343cc:	ldr	r1, [pc, #60]	; 34410 <g_unichar_xdigit_value@plt+0x205ac>
   343d0:	ldr	r2, [pc, #60]	; 34414 <g_unichar_xdigit_value@plt+0x205b0>
   343d4:	add	r1, pc, r1
   343d8:	add	r2, pc, r2
   343dc:	add	r1, r1, #524	; 0x20c
   343e0:	bl	13450 <g_return_if_fail_warning@plt>
   343e4:	mov	r0, r5
   343e8:	pop	{r3, r4, r5, pc}
   343ec:	ldr	r1, [pc, #36]	; 34418 <g_unichar_xdigit_value@plt+0x205b4>
   343f0:	mov	r0, r4
   343f4:	ldr	r2, [pc, #32]	; 3441c <g_unichar_xdigit_value@plt+0x205b8>
   343f8:	add	r1, pc, r1
   343fc:	add	r2, pc, r2
   34400:	add	r1, r1, #524	; 0x20c
   34404:	bl	13450 <g_return_if_fail_warning@plt>
   34408:	mov	r0, r4
   3440c:	pop	{r3, r4, r5, pc}
   34410:	andeq	r8, r0, r8, lsl ip
   34414:	andeq	r3, r0, ip, lsl #26
   34418:	strdeq	r8, [r0], -r4
   3441c:	andeq	r9, r0, r0, asr r7
   34420:	ldr	r3, [pc, #3744]	; 352c8 <g_unichar_xdigit_value@plt+0x21464>
   34424:	ldr	r2, [pc, #3744]	; 352cc <g_unichar_xdigit_value@plt+0x21468>
   34428:	add	r3, pc, r3
   3442c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34430:	ldr	r4, [r3, r2]
   34434:	ldr	r0, [r4]
   34438:	cmp	r0, #0
   3443c:	beq	34448 <g_unichar_xdigit_value@plt+0x205e4>
   34440:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   34444:	b	133f0 <g_object_ref@plt>
   34448:	bl	31e60 <g_unichar_xdigit_value@plt+0x1dffc>
   3444c:	mov	r7, r0
   34450:	ldr	r0, [r4]
   34454:	cmp	r0, #0
   34458:	beq	34460 <g_unichar_xdigit_value@plt+0x205fc>
   3445c:	bl	13b94 <g_object_unref@plt>
   34460:	ldr	r5, [pc, #3688]	; 352d0 <g_unichar_xdigit_value@plt+0x2146c>
   34464:	ldr	r1, [pc, #3688]	; 352d4 <g_unichar_xdigit_value@plt+0x21470>
   34468:	add	r5, pc, r5
   3446c:	str	r7, [r4]
   34470:	add	r1, pc, r1
   34474:	ldr	r6, [pc, #3676]	; 352d8 <g_unichar_xdigit_value@plt+0x21474>
   34478:	mov	r0, r5
   3447c:	ldr	r8, [pc, #3672]	; 352dc <g_unichar_xdigit_value@plt+0x21478>
   34480:	bl	13c9c <g_dgettext@plt>
   34484:	ldr	r2, [pc, #3668]	; 352e0 <g_unichar_xdigit_value@plt+0x2147c>
   34488:	add	r6, pc, r6
   3448c:	add	r8, pc, r8
   34490:	add	r2, pc, r2
   34494:	ldr	r9, [pc, #3656]	; 352e4 <g_unichar_xdigit_value@plt+0x21480>
   34498:	add	r9, pc, r9
   3449c:	mov	r1, r0
   344a0:	ldr	r0, [pc, #3648]	; 352e8 <g_unichar_xdigit_value@plt+0x21484>
   344a4:	add	r0, pc, r0
   344a8:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   344ac:	ldr	r7, [r7, #12]
   344b0:	mov	r1, r0
   344b4:	ldr	r0, [r7]
   344b8:	bl	13594 <g_list_append@plt>
   344bc:	ldr	r1, [pc, #3624]	; 352ec <g_unichar_xdigit_value@plt+0x21488>
   344c0:	add	r1, pc, r1
   344c4:	str	r0, [r7]
   344c8:	mov	r0, r5
   344cc:	ldr	r7, [r4]
   344d0:	bl	13c9c <g_dgettext@plt>
   344d4:	mov	r2, r6
   344d8:	mov	r1, r0
   344dc:	ldr	r0, [pc, #3596]	; 352f0 <g_unichar_xdigit_value@plt+0x2148c>
   344e0:	add	r0, pc, r0
   344e4:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   344e8:	ldr	r7, [r7, #12]
   344ec:	mov	r1, r0
   344f0:	ldr	r0, [r7]
   344f4:	bl	13594 <g_list_append@plt>
   344f8:	ldr	r1, [pc, #3572]	; 352f4 <g_unichar_xdigit_value@plt+0x21490>
   344fc:	add	r1, pc, r1
   34500:	str	r0, [r7]
   34504:	mov	r0, r5
   34508:	ldr	r7, [r4]
   3450c:	bl	13c9c <g_dgettext@plt>
   34510:	ldr	r2, [pc, #3552]	; 352f8 <g_unichar_xdigit_value@plt+0x21494>
   34514:	add	r2, pc, r2
   34518:	mov	r1, r0
   3451c:	ldr	r0, [pc, #3544]	; 352fc <g_unichar_xdigit_value@plt+0x21498>
   34520:	add	r0, pc, r0
   34524:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34528:	ldr	r7, [r7, #12]
   3452c:	mov	r1, r0
   34530:	ldr	r0, [r7]
   34534:	bl	13594 <g_list_append@plt>
   34538:	ldr	r1, [pc, #3520]	; 35300 <g_unichar_xdigit_value@plt+0x2149c>
   3453c:	add	r1, pc, r1
   34540:	str	r0, [r7]
   34544:	mov	r0, r5
   34548:	ldr	r7, [r4]
   3454c:	bl	13c9c <g_dgettext@plt>
   34550:	ldr	r2, [pc, #3500]	; 35304 <g_unichar_xdigit_value@plt+0x214a0>
   34554:	add	r2, pc, r2
   34558:	mov	r1, r0
   3455c:	ldr	r0, [pc, #3492]	; 35308 <g_unichar_xdigit_value@plt+0x214a4>
   34560:	add	r0, pc, r0
   34564:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34568:	ldr	r7, [r7, #12]
   3456c:	mov	r1, r0
   34570:	ldr	r0, [r7]
   34574:	bl	13594 <g_list_append@plt>
   34578:	ldr	r1, [pc, #3468]	; 3530c <g_unichar_xdigit_value@plt+0x214a8>
   3457c:	add	r1, pc, r1
   34580:	str	r0, [r7]
   34584:	mov	r0, r5
   34588:	ldr	r7, [r4]
   3458c:	bl	13c9c <g_dgettext@plt>
   34590:	mov	r2, r6
   34594:	mov	r1, r0
   34598:	ldr	r0, [pc, #3440]	; 35310 <g_unichar_xdigit_value@plt+0x214ac>
   3459c:	add	r0, pc, r0
   345a0:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   345a4:	ldr	r7, [r7, #12]
   345a8:	mov	r1, r0
   345ac:	ldr	r0, [r7]
   345b0:	bl	13594 <g_list_append@plt>
   345b4:	ldr	r1, [pc, #3416]	; 35314 <g_unichar_xdigit_value@plt+0x214b0>
   345b8:	add	r1, pc, r1
   345bc:	str	r0, [r7]
   345c0:	mov	r0, r5
   345c4:	ldr	r7, [r4]
   345c8:	bl	13c9c <g_dgettext@plt>
   345cc:	ldr	r2, [pc, #3396]	; 35318 <g_unichar_xdigit_value@plt+0x214b4>
   345d0:	add	r2, pc, r2
   345d4:	mov	r1, r0
   345d8:	ldr	r0, [pc, #3388]	; 3531c <g_unichar_xdigit_value@plt+0x214b8>
   345dc:	add	r0, pc, r0
   345e0:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   345e4:	ldr	r7, [r7, #12]
   345e8:	mov	r1, r0
   345ec:	ldr	r0, [r7]
   345f0:	bl	13594 <g_list_append@plt>
   345f4:	ldr	r1, [pc, #3364]	; 35320 <g_unichar_xdigit_value@plt+0x214bc>
   345f8:	add	r1, pc, r1
   345fc:	str	r0, [r7]
   34600:	mov	r0, r5
   34604:	ldr	r7, [r4]
   34608:	bl	13c9c <g_dgettext@plt>
   3460c:	ldr	r2, [pc, #3344]	; 35324 <g_unichar_xdigit_value@plt+0x214c0>
   34610:	add	r2, pc, r2
   34614:	mov	r1, r0
   34618:	ldr	r0, [pc, #3336]	; 35328 <g_unichar_xdigit_value@plt+0x214c4>
   3461c:	add	r0, pc, r0
   34620:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34624:	ldr	r7, [r7, #12]
   34628:	mov	r1, r0
   3462c:	ldr	r0, [r7]
   34630:	bl	13594 <g_list_append@plt>
   34634:	ldr	r1, [pc, #3312]	; 3532c <g_unichar_xdigit_value@plt+0x214c8>
   34638:	add	r1, pc, r1
   3463c:	str	r0, [r7]
   34640:	mov	r0, r5
   34644:	ldr	r7, [r4]
   34648:	bl	13c9c <g_dgettext@plt>
   3464c:	mov	r2, r6
   34650:	mov	r1, r0
   34654:	ldr	r0, [pc, #3284]	; 35330 <g_unichar_xdigit_value@plt+0x214cc>
   34658:	add	r0, pc, r0
   3465c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34660:	ldr	sl, [r7, #12]
   34664:	ldr	r7, [pc, #3272]	; 35334 <g_unichar_xdigit_value@plt+0x214d0>
   34668:	add	r7, pc, r7
   3466c:	mov	r1, r0
   34670:	ldr	r0, [sl]
   34674:	bl	13594 <g_list_append@plt>
   34678:	ldr	r1, [pc, #3256]	; 35338 <g_unichar_xdigit_value@plt+0x214d4>
   3467c:	add	r1, pc, r1
   34680:	str	r0, [sl]
   34684:	mov	r0, r5
   34688:	ldr	sl, [r4]
   3468c:	bl	13c9c <g_dgettext@plt>
   34690:	mov	r2, r8
   34694:	mov	r1, r0
   34698:	ldr	r0, [pc, #3228]	; 3533c <g_unichar_xdigit_value@plt+0x214d8>
   3469c:	add	r0, pc, r0
   346a0:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   346a4:	ldr	sl, [sl, #12]
   346a8:	mov	r1, r0
   346ac:	ldr	r0, [sl]
   346b0:	bl	13594 <g_list_append@plt>
   346b4:	ldr	r1, [pc, #3204]	; 35340 <g_unichar_xdigit_value@plt+0x214dc>
   346b8:	add	r1, pc, r1
   346bc:	str	r0, [sl]
   346c0:	mov	r0, r5
   346c4:	ldr	sl, [r4]
   346c8:	bl	13c9c <g_dgettext@plt>
   346cc:	mov	r2, r8
   346d0:	mov	r1, r0
   346d4:	ldr	r0, [pc, #3176]	; 35344 <g_unichar_xdigit_value@plt+0x214e0>
   346d8:	add	r0, pc, r0
   346dc:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   346e0:	ldr	r8, [sl, #12]
   346e4:	mov	r1, r0
   346e8:	ldr	r0, [r8]
   346ec:	bl	13594 <g_list_append@plt>
   346f0:	ldr	r1, [pc, #3152]	; 35348 <g_unichar_xdigit_value@plt+0x214e4>
   346f4:	add	r1, pc, r1
   346f8:	str	r0, [r8]
   346fc:	mov	r0, r5
   34700:	ldr	r8, [r4]
   34704:	bl	13c9c <g_dgettext@plt>
   34708:	mov	r2, r6
   3470c:	mov	r1, r0
   34710:	ldr	r0, [pc, #3124]	; 3534c <g_unichar_xdigit_value@plt+0x214e8>
   34714:	add	r0, pc, r0
   34718:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   3471c:	ldr	r8, [r8, #12]
   34720:	mov	r1, r0
   34724:	ldr	r0, [r8]
   34728:	bl	13594 <g_list_append@plt>
   3472c:	ldr	r1, [pc, #3100]	; 35350 <g_unichar_xdigit_value@plt+0x214ec>
   34730:	add	r1, pc, r1
   34734:	str	r0, [r8]
   34738:	mov	r0, r5
   3473c:	ldr	r8, [r4]
   34740:	bl	13c9c <g_dgettext@plt>
   34744:	mov	r2, r9
   34748:	mov	r1, r0
   3474c:	ldr	r0, [pc, #3072]	; 35354 <g_unichar_xdigit_value@plt+0x214f0>
   34750:	add	r0, pc, r0
   34754:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34758:	ldr	r8, [r8, #12]
   3475c:	mov	r1, r0
   34760:	ldr	r0, [r8]
   34764:	bl	13594 <g_list_append@plt>
   34768:	ldr	r1, [pc, #3048]	; 35358 <g_unichar_xdigit_value@plt+0x214f4>
   3476c:	add	r1, pc, r1
   34770:	str	r0, [r8]
   34774:	mov	r0, r5
   34778:	ldr	r8, [r4]
   3477c:	bl	13c9c <g_dgettext@plt>
   34780:	mov	r2, r6
   34784:	mov	r1, r0
   34788:	ldr	r0, [pc, #3020]	; 3535c <g_unichar_xdigit_value@plt+0x214f8>
   3478c:	add	r0, pc, r0
   34790:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34794:	ldr	r8, [r8, #12]
   34798:	mov	r1, r0
   3479c:	ldr	r0, [r8]
   347a0:	bl	13594 <g_list_append@plt>
   347a4:	ldr	r1, [pc, #2996]	; 35360 <g_unichar_xdigit_value@plt+0x214fc>
   347a8:	add	r1, pc, r1
   347ac:	str	r0, [r8]
   347b0:	mov	r0, r5
   347b4:	ldr	r8, [r4]
   347b8:	bl	13c9c <g_dgettext@plt>
   347bc:	ldr	r2, [pc, #2976]	; 35364 <g_unichar_xdigit_value@plt+0x21500>
   347c0:	add	r2, pc, r2
   347c4:	mov	r1, r0
   347c8:	ldr	r0, [pc, #2968]	; 35368 <g_unichar_xdigit_value@plt+0x21504>
   347cc:	add	r0, pc, r0
   347d0:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   347d4:	ldr	r8, [r8, #12]
   347d8:	mov	r1, r0
   347dc:	ldr	r0, [r8]
   347e0:	bl	13594 <g_list_append@plt>
   347e4:	ldr	r1, [pc, #2944]	; 3536c <g_unichar_xdigit_value@plt+0x21508>
   347e8:	add	r1, pc, r1
   347ec:	str	r0, [r8]
   347f0:	mov	r0, r5
   347f4:	ldr	r8, [r4]
   347f8:	bl	13c9c <g_dgettext@plt>
   347fc:	mov	r2, r7
   34800:	mov	r1, r0
   34804:	ldr	r0, [pc, #2916]	; 35370 <g_unichar_xdigit_value@plt+0x2150c>
   34808:	add	r0, pc, r0
   3480c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34810:	ldr	r8, [r8, #12]
   34814:	mov	r1, r0
   34818:	ldr	r0, [r8]
   3481c:	bl	13594 <g_list_append@plt>
   34820:	ldr	r1, [pc, #2892]	; 35374 <g_unichar_xdigit_value@plt+0x21510>
   34824:	add	r1, pc, r1
   34828:	str	r0, [r8]
   3482c:	mov	r0, r5
   34830:	ldr	r8, [r4]
   34834:	bl	13c9c <g_dgettext@plt>
   34838:	ldr	r2, [pc, #2872]	; 35378 <g_unichar_xdigit_value@plt+0x21514>
   3483c:	add	r2, pc, r2
   34840:	mov	r1, r0
   34844:	ldr	r0, [pc, #2864]	; 3537c <g_unichar_xdigit_value@plt+0x21518>
   34848:	add	r0, pc, r0
   3484c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34850:	ldr	r8, [r8, #12]
   34854:	mov	r1, r0
   34858:	ldr	r0, [r8]
   3485c:	bl	13594 <g_list_append@plt>
   34860:	ldr	r1, [pc, #2840]	; 35380 <g_unichar_xdigit_value@plt+0x2151c>
   34864:	add	r1, pc, r1
   34868:	str	r0, [r8]
   3486c:	mov	r0, r5
   34870:	ldr	r8, [r4]
   34874:	bl	13c9c <g_dgettext@plt>
   34878:	ldr	r2, [pc, #2820]	; 35384 <g_unichar_xdigit_value@plt+0x21520>
   3487c:	add	r2, pc, r2
   34880:	mov	r1, r0
   34884:	ldr	r0, [pc, #2812]	; 35388 <g_unichar_xdigit_value@plt+0x21524>
   34888:	add	r0, pc, r0
   3488c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34890:	ldr	r8, [r8, #12]
   34894:	mov	r1, r0
   34898:	ldr	r0, [r8]
   3489c:	bl	13594 <g_list_append@plt>
   348a0:	ldr	r1, [pc, #2788]	; 3538c <g_unichar_xdigit_value@plt+0x21528>
   348a4:	add	r1, pc, r1
   348a8:	str	r0, [r8]
   348ac:	mov	r0, r5
   348b0:	ldr	r8, [r4]
   348b4:	bl	13c9c <g_dgettext@plt>
   348b8:	ldr	r2, [pc, #2768]	; 35390 <g_unichar_xdigit_value@plt+0x2152c>
   348bc:	add	r2, pc, r2
   348c0:	mov	r1, r0
   348c4:	ldr	r0, [pc, #2760]	; 35394 <g_unichar_xdigit_value@plt+0x21530>
   348c8:	add	r0, pc, r0
   348cc:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   348d0:	ldr	r8, [r8, #12]
   348d4:	mov	r1, r0
   348d8:	ldr	r0, [r8]
   348dc:	bl	13594 <g_list_append@plt>
   348e0:	ldr	r1, [pc, #2736]	; 35398 <g_unichar_xdigit_value@plt+0x21534>
   348e4:	add	r1, pc, r1
   348e8:	str	r0, [r8]
   348ec:	mov	r0, r5
   348f0:	ldr	r8, [r4]
   348f4:	bl	13c9c <g_dgettext@plt>
   348f8:	ldr	r2, [pc, #2716]	; 3539c <g_unichar_xdigit_value@plt+0x21538>
   348fc:	add	r2, pc, r2
   34900:	mov	r1, r0
   34904:	ldr	r0, [pc, #2708]	; 353a0 <g_unichar_xdigit_value@plt+0x2153c>
   34908:	add	r0, pc, r0
   3490c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34910:	ldr	r8, [r8, #12]
   34914:	mov	r1, r0
   34918:	ldr	r0, [r8]
   3491c:	bl	13594 <g_list_append@plt>
   34920:	ldr	r1, [pc, #2684]	; 353a4 <g_unichar_xdigit_value@plt+0x21540>
   34924:	add	r1, pc, r1
   34928:	str	r0, [r8]
   3492c:	mov	r0, r5
   34930:	ldr	r8, [r4]
   34934:	bl	13c9c <g_dgettext@plt>
   34938:	mov	r2, r6
   3493c:	mov	r1, r0
   34940:	ldr	r0, [pc, #2656]	; 353a8 <g_unichar_xdigit_value@plt+0x21544>
   34944:	add	r0, pc, r0
   34948:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   3494c:	ldr	r8, [r8, #12]
   34950:	mov	r1, r0
   34954:	ldr	r0, [r8]
   34958:	bl	13594 <g_list_append@plt>
   3495c:	ldr	r1, [pc, #2632]	; 353ac <g_unichar_xdigit_value@plt+0x21548>
   34960:	add	r1, pc, r1
   34964:	str	r0, [r8]
   34968:	mov	r0, r5
   3496c:	ldr	r8, [r4]
   34970:	bl	13c9c <g_dgettext@plt>
   34974:	ldr	r2, [pc, #2612]	; 353b0 <g_unichar_xdigit_value@plt+0x2154c>
   34978:	add	r2, pc, r2
   3497c:	mov	r1, r0
   34980:	ldr	r0, [pc, #2604]	; 353b4 <g_unichar_xdigit_value@plt+0x21550>
   34984:	add	r0, pc, r0
   34988:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   3498c:	ldr	r8, [r8, #12]
   34990:	mov	r1, r0
   34994:	ldr	r0, [r8]
   34998:	bl	13594 <g_list_append@plt>
   3499c:	ldr	r1, [pc, #2580]	; 353b8 <g_unichar_xdigit_value@plt+0x21554>
   349a0:	add	r1, pc, r1
   349a4:	str	r0, [r8]
   349a8:	mov	r0, r5
   349ac:	ldr	r8, [r4]
   349b0:	bl	13c9c <g_dgettext@plt>
   349b4:	ldr	r2, [pc, #2560]	; 353bc <g_unichar_xdigit_value@plt+0x21558>
   349b8:	add	r2, pc, r2
   349bc:	mov	r1, r0
   349c0:	ldr	r0, [pc, #2552]	; 353c0 <g_unichar_xdigit_value@plt+0x2155c>
   349c4:	add	r0, pc, r0
   349c8:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   349cc:	ldr	r8, [r8, #12]
   349d0:	mov	r1, r0
   349d4:	ldr	r0, [r8]
   349d8:	bl	13594 <g_list_append@plt>
   349dc:	ldr	r1, [pc, #2528]	; 353c4 <g_unichar_xdigit_value@plt+0x21560>
   349e0:	add	r1, pc, r1
   349e4:	str	r0, [r8]
   349e8:	mov	r0, r5
   349ec:	ldr	r8, [r4]
   349f0:	bl	13c9c <g_dgettext@plt>
   349f4:	ldr	r2, [pc, #2508]	; 353c8 <g_unichar_xdigit_value@plt+0x21564>
   349f8:	add	r2, pc, r2
   349fc:	mov	r1, r0
   34a00:	ldr	r0, [pc, #2500]	; 353cc <g_unichar_xdigit_value@plt+0x21568>
   34a04:	add	r0, pc, r0
   34a08:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34a0c:	ldr	r8, [r8, #12]
   34a10:	mov	r1, r0
   34a14:	ldr	r0, [r8]
   34a18:	bl	13594 <g_list_append@plt>
   34a1c:	ldr	r1, [pc, #2476]	; 353d0 <g_unichar_xdigit_value@plt+0x2156c>
   34a20:	add	r1, pc, r1
   34a24:	str	r0, [r8]
   34a28:	mov	r0, r5
   34a2c:	ldr	r8, [r4]
   34a30:	bl	13c9c <g_dgettext@plt>
   34a34:	ldr	r2, [pc, #2456]	; 353d4 <g_unichar_xdigit_value@plt+0x21570>
   34a38:	add	r2, pc, r2
   34a3c:	mov	r1, r0
   34a40:	ldr	r0, [pc, #2448]	; 353d8 <g_unichar_xdigit_value@plt+0x21574>
   34a44:	add	r0, pc, r0
   34a48:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34a4c:	ldr	r8, [r8, #12]
   34a50:	mov	r1, r0
   34a54:	ldr	r0, [r8]
   34a58:	bl	13594 <g_list_append@plt>
   34a5c:	ldr	r1, [pc, #2424]	; 353dc <g_unichar_xdigit_value@plt+0x21578>
   34a60:	add	r1, pc, r1
   34a64:	str	r0, [r8]
   34a68:	mov	r0, r5
   34a6c:	ldr	r8, [r4]
   34a70:	bl	13c9c <g_dgettext@plt>
   34a74:	ldr	r2, [pc, #2404]	; 353e0 <g_unichar_xdigit_value@plt+0x2157c>
   34a78:	add	r2, pc, r2
   34a7c:	mov	r1, r0
   34a80:	ldr	r0, [pc, #2396]	; 353e4 <g_unichar_xdigit_value@plt+0x21580>
   34a84:	add	r0, pc, r0
   34a88:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34a8c:	ldr	sl, [r8, #12]
   34a90:	ldr	r8, [pc, #2384]	; 353e8 <g_unichar_xdigit_value@plt+0x21584>
   34a94:	add	r8, pc, r8
   34a98:	mov	r1, r0
   34a9c:	ldr	r0, [sl]
   34aa0:	bl	13594 <g_list_append@plt>
   34aa4:	ldr	r1, [pc, #2368]	; 353ec <g_unichar_xdigit_value@plt+0x21588>
   34aa8:	add	r1, pc, r1
   34aac:	str	r0, [sl]
   34ab0:	mov	r0, r5
   34ab4:	ldr	sl, [r4]
   34ab8:	bl	13c9c <g_dgettext@plt>
   34abc:	ldr	r2, [pc, #2348]	; 353f0 <g_unichar_xdigit_value@plt+0x2158c>
   34ac0:	add	r2, pc, r2
   34ac4:	mov	r1, r0
   34ac8:	ldr	r0, [pc, #2340]	; 353f4 <g_unichar_xdigit_value@plt+0x21590>
   34acc:	add	r0, pc, r0
   34ad0:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34ad4:	ldr	sl, [sl, #12]
   34ad8:	mov	r1, r0
   34adc:	ldr	r0, [sl]
   34ae0:	bl	13594 <g_list_append@plt>
   34ae4:	ldr	r1, [pc, #2316]	; 353f8 <g_unichar_xdigit_value@plt+0x21594>
   34ae8:	add	r1, pc, r1
   34aec:	str	r0, [sl]
   34af0:	mov	r0, r5
   34af4:	ldr	sl, [r4]
   34af8:	bl	13c9c <g_dgettext@plt>
   34afc:	mov	r2, r7
   34b00:	mov	r1, r0
   34b04:	ldr	r0, [pc, #2288]	; 353fc <g_unichar_xdigit_value@plt+0x21598>
   34b08:	add	r0, pc, r0
   34b0c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34b10:	ldr	sl, [sl, #12]
   34b14:	mov	r1, r0
   34b18:	ldr	r0, [sl]
   34b1c:	bl	13594 <g_list_append@plt>
   34b20:	ldr	r1, [pc, #2264]	; 35400 <g_unichar_xdigit_value@plt+0x2159c>
   34b24:	add	r1, pc, r1
   34b28:	str	r0, [sl]
   34b2c:	mov	r0, r5
   34b30:	ldr	sl, [r4]
   34b34:	bl	13c9c <g_dgettext@plt>
   34b38:	mov	r2, r9
   34b3c:	mov	r1, r0
   34b40:	ldr	r0, [pc, #2236]	; 35404 <g_unichar_xdigit_value@plt+0x215a0>
   34b44:	add	r0, pc, r0
   34b48:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34b4c:	ldr	r9, [sl, #12]
   34b50:	mov	r1, r0
   34b54:	ldr	r0, [r9]
   34b58:	bl	13594 <g_list_append@plt>
   34b5c:	ldr	r1, [pc, #2212]	; 35408 <g_unichar_xdigit_value@plt+0x215a4>
   34b60:	add	r1, pc, r1
   34b64:	str	r0, [r9]
   34b68:	mov	r0, r5
   34b6c:	ldr	r9, [r4]
   34b70:	bl	13c9c <g_dgettext@plt>
   34b74:	ldr	r2, [pc, #2192]	; 3540c <g_unichar_xdigit_value@plt+0x215a8>
   34b78:	add	r2, pc, r2
   34b7c:	mov	r1, r0
   34b80:	ldr	r0, [pc, #2184]	; 35410 <g_unichar_xdigit_value@plt+0x215ac>
   34b84:	add	r0, pc, r0
   34b88:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34b8c:	ldr	r9, [r9, #12]
   34b90:	mov	r1, r0
   34b94:	ldr	r0, [r9]
   34b98:	bl	13594 <g_list_append@plt>
   34b9c:	ldr	r1, [pc, #2160]	; 35414 <g_unichar_xdigit_value@plt+0x215b0>
   34ba0:	add	r1, pc, r1
   34ba4:	str	r0, [r9]
   34ba8:	mov	r0, r5
   34bac:	ldr	r9, [r4]
   34bb0:	bl	13c9c <g_dgettext@plt>
   34bb4:	ldr	r2, [pc, #2140]	; 35418 <g_unichar_xdigit_value@plt+0x215b4>
   34bb8:	add	r2, pc, r2
   34bbc:	mov	r1, r0
   34bc0:	ldr	r0, [pc, #2132]	; 3541c <g_unichar_xdigit_value@plt+0x215b8>
   34bc4:	add	r0, pc, r0
   34bc8:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34bcc:	ldr	r9, [r9, #12]
   34bd0:	mov	r1, r0
   34bd4:	ldr	r0, [r9]
   34bd8:	bl	13594 <g_list_append@plt>
   34bdc:	ldr	r1, [pc, #2108]	; 35420 <g_unichar_xdigit_value@plt+0x215bc>
   34be0:	add	r1, pc, r1
   34be4:	str	r0, [r9]
   34be8:	mov	r0, r5
   34bec:	ldr	r9, [r4]
   34bf0:	bl	13c9c <g_dgettext@plt>
   34bf4:	ldr	r2, [pc, #2088]	; 35424 <g_unichar_xdigit_value@plt+0x215c0>
   34bf8:	add	r2, pc, r2
   34bfc:	mov	r1, r0
   34c00:	ldr	r0, [pc, #2080]	; 35428 <g_unichar_xdigit_value@plt+0x215c4>
   34c04:	add	r0, pc, r0
   34c08:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34c0c:	ldr	r9, [r9, #12]
   34c10:	mov	r1, r0
   34c14:	ldr	r0, [r9]
   34c18:	bl	13594 <g_list_append@plt>
   34c1c:	ldr	r1, [pc, #2056]	; 3542c <g_unichar_xdigit_value@plt+0x215c8>
   34c20:	add	r1, pc, r1
   34c24:	str	r0, [r9]
   34c28:	mov	r0, r5
   34c2c:	ldr	r9, [r4]
   34c30:	bl	13c9c <g_dgettext@plt>
   34c34:	mov	r2, r8
   34c38:	mov	r1, r0
   34c3c:	ldr	r0, [pc, #2028]	; 35430 <g_unichar_xdigit_value@plt+0x215cc>
   34c40:	add	r0, pc, r0
   34c44:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34c48:	ldr	r9, [r9, #12]
   34c4c:	mov	r1, r0
   34c50:	ldr	r0, [r9]
   34c54:	bl	13594 <g_list_append@plt>
   34c58:	ldr	r1, [pc, #2004]	; 35434 <g_unichar_xdigit_value@plt+0x215d0>
   34c5c:	add	r1, pc, r1
   34c60:	str	r0, [r9]
   34c64:	mov	r0, r5
   34c68:	ldr	r9, [r4]
   34c6c:	bl	13c9c <g_dgettext@plt>
   34c70:	ldr	r2, [pc, #1984]	; 35438 <g_unichar_xdigit_value@plt+0x215d4>
   34c74:	add	r2, pc, r2
   34c78:	mov	r1, r0
   34c7c:	ldr	r0, [pc, #1976]	; 3543c <g_unichar_xdigit_value@plt+0x215d8>
   34c80:	add	r0, pc, r0
   34c84:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34c88:	ldr	r9, [r9, #12]
   34c8c:	mov	r1, r0
   34c90:	ldr	r0, [r9]
   34c94:	bl	13594 <g_list_append@plt>
   34c98:	ldr	r1, [pc, #1952]	; 35440 <g_unichar_xdigit_value@plt+0x215dc>
   34c9c:	add	r1, pc, r1
   34ca0:	str	r0, [r9]
   34ca4:	mov	r0, r5
   34ca8:	ldr	r9, [r4]
   34cac:	bl	13c9c <g_dgettext@plt>
   34cb0:	mov	r2, r8
   34cb4:	mov	r1, r0
   34cb8:	ldr	r0, [pc, #1924]	; 35444 <g_unichar_xdigit_value@plt+0x215e0>
   34cbc:	add	r0, pc, r0
   34cc0:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34cc4:	ldr	r9, [r9, #12]
   34cc8:	mov	r1, r0
   34ccc:	ldr	r0, [r9]
   34cd0:	bl	13594 <g_list_append@plt>
   34cd4:	ldr	r1, [pc, #1900]	; 35448 <g_unichar_xdigit_value@plt+0x215e4>
   34cd8:	add	r1, pc, r1
   34cdc:	str	r0, [r9]
   34ce0:	mov	r0, r5
   34ce4:	ldr	r9, [r4]
   34ce8:	bl	13c9c <g_dgettext@plt>
   34cec:	mov	r2, r6
   34cf0:	mov	r1, r0
   34cf4:	ldr	r0, [pc, #1872]	; 3544c <g_unichar_xdigit_value@plt+0x215e8>
   34cf8:	add	r0, pc, r0
   34cfc:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34d00:	ldr	r9, [r9, #12]
   34d04:	mov	r1, r0
   34d08:	ldr	r0, [r9]
   34d0c:	bl	13594 <g_list_append@plt>
   34d10:	ldr	r1, [pc, #1848]	; 35450 <g_unichar_xdigit_value@plt+0x215ec>
   34d14:	add	r1, pc, r1
   34d18:	str	r0, [r9]
   34d1c:	mov	r0, r5
   34d20:	ldr	r9, [r4]
   34d24:	bl	13c9c <g_dgettext@plt>
   34d28:	ldr	r2, [pc, #1828]	; 35454 <g_unichar_xdigit_value@plt+0x215f0>
   34d2c:	add	r2, pc, r2
   34d30:	mov	r1, r0
   34d34:	ldr	r0, [pc, #1820]	; 35458 <g_unichar_xdigit_value@plt+0x215f4>
   34d38:	add	r0, pc, r0
   34d3c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34d40:	ldr	r9, [r9, #12]
   34d44:	mov	r1, r0
   34d48:	ldr	r0, [r9]
   34d4c:	bl	13594 <g_list_append@plt>
   34d50:	ldr	r1, [pc, #1796]	; 3545c <g_unichar_xdigit_value@plt+0x215f8>
   34d54:	add	r1, pc, r1
   34d58:	str	r0, [r9]
   34d5c:	mov	r0, r5
   34d60:	ldr	r9, [r4]
   34d64:	bl	13c9c <g_dgettext@plt>
   34d68:	mov	r2, r7
   34d6c:	mov	r1, r0
   34d70:	ldr	r0, [pc, #1768]	; 35460 <g_unichar_xdigit_value@plt+0x215fc>
   34d74:	add	r0, pc, r0
   34d78:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34d7c:	ldr	r9, [r9, #12]
   34d80:	mov	r1, r0
   34d84:	ldr	r0, [r9]
   34d88:	bl	13594 <g_list_append@plt>
   34d8c:	ldr	r1, [pc, #1744]	; 35464 <g_unichar_xdigit_value@plt+0x21600>
   34d90:	add	r1, pc, r1
   34d94:	str	r0, [r9]
   34d98:	mov	r0, r5
   34d9c:	ldr	r9, [r4]
   34da0:	bl	13c9c <g_dgettext@plt>
   34da4:	mov	r2, r8
   34da8:	mov	r1, r0
   34dac:	ldr	r0, [pc, #1716]	; 35468 <g_unichar_xdigit_value@plt+0x21604>
   34db0:	add	r0, pc, r0
   34db4:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34db8:	ldr	r9, [r9, #12]
   34dbc:	mov	r1, r0
   34dc0:	ldr	r0, [r9]
   34dc4:	bl	13594 <g_list_append@plt>
   34dc8:	ldr	r1, [pc, #1692]	; 3546c <g_unichar_xdigit_value@plt+0x21608>
   34dcc:	add	r1, pc, r1
   34dd0:	str	r0, [r9]
   34dd4:	mov	r0, r5
   34dd8:	ldr	r9, [r4]
   34ddc:	bl	13c9c <g_dgettext@plt>
   34de0:	mov	r2, r6
   34de4:	mov	r1, r0
   34de8:	ldr	r0, [pc, #1664]	; 35470 <g_unichar_xdigit_value@plt+0x2160c>
   34dec:	add	r0, pc, r0
   34df0:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34df4:	ldr	r9, [r9, #12]
   34df8:	mov	r1, r0
   34dfc:	ldr	r0, [r9]
   34e00:	bl	13594 <g_list_append@plt>
   34e04:	ldr	r1, [pc, #1640]	; 35474 <g_unichar_xdigit_value@plt+0x21610>
   34e08:	add	r1, pc, r1
   34e0c:	str	r0, [r9]
   34e10:	mov	r0, r5
   34e14:	ldr	r9, [r4]
   34e18:	bl	13c9c <g_dgettext@plt>
   34e1c:	ldr	r2, [pc, #1620]	; 35478 <g_unichar_xdigit_value@plt+0x21614>
   34e20:	add	r2, pc, r2
   34e24:	mov	r1, r0
   34e28:	ldr	r0, [pc, #1612]	; 3547c <g_unichar_xdigit_value@plt+0x21618>
   34e2c:	add	r0, pc, r0
   34e30:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34e34:	ldr	r9, [r9, #12]
   34e38:	mov	r1, r0
   34e3c:	ldr	r0, [r9]
   34e40:	bl	13594 <g_list_append@plt>
   34e44:	ldr	r1, [pc, #1588]	; 35480 <g_unichar_xdigit_value@plt+0x2161c>
   34e48:	add	r1, pc, r1
   34e4c:	str	r0, [r9]
   34e50:	mov	r0, r5
   34e54:	ldr	r9, [r4]
   34e58:	bl	13c9c <g_dgettext@plt>
   34e5c:	ldr	r2, [pc, #1568]	; 35484 <g_unichar_xdigit_value@plt+0x21620>
   34e60:	add	r2, pc, r2
   34e64:	mov	r1, r0
   34e68:	ldr	r0, [pc, #1560]	; 35488 <g_unichar_xdigit_value@plt+0x21624>
   34e6c:	add	r0, pc, r0
   34e70:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34e74:	ldr	r9, [r9, #12]
   34e78:	mov	r1, r0
   34e7c:	ldr	r0, [r9]
   34e80:	bl	13594 <g_list_append@plt>
   34e84:	ldr	r1, [pc, #1536]	; 3548c <g_unichar_xdigit_value@plt+0x21628>
   34e88:	add	r1, pc, r1
   34e8c:	str	r0, [r9]
   34e90:	mov	r0, r5
   34e94:	ldr	r9, [r4]
   34e98:	bl	13c9c <g_dgettext@plt>
   34e9c:	ldr	r2, [pc, #1516]	; 35490 <g_unichar_xdigit_value@plt+0x2162c>
   34ea0:	add	r2, pc, r2
   34ea4:	mov	r1, r0
   34ea8:	ldr	r0, [pc, #1508]	; 35494 <g_unichar_xdigit_value@plt+0x21630>
   34eac:	add	r0, pc, r0
   34eb0:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34eb4:	ldr	r9, [r9, #12]
   34eb8:	mov	r1, r0
   34ebc:	ldr	r0, [r9]
   34ec0:	bl	13594 <g_list_append@plt>
   34ec4:	ldr	r1, [pc, #1484]	; 35498 <g_unichar_xdigit_value@plt+0x21634>
   34ec8:	add	r1, pc, r1
   34ecc:	str	r0, [r9]
   34ed0:	mov	r0, r5
   34ed4:	ldr	r9, [r4]
   34ed8:	bl	13c9c <g_dgettext@plt>
   34edc:	mov	r2, r8
   34ee0:	mov	r1, r0
   34ee4:	ldr	r0, [pc, #1456]	; 3549c <g_unichar_xdigit_value@plt+0x21638>
   34ee8:	add	r0, pc, r0
   34eec:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34ef0:	ldr	r8, [r9, #12]
   34ef4:	mov	r1, r0
   34ef8:	ldr	r0, [r8]
   34efc:	bl	13594 <g_list_append@plt>
   34f00:	ldr	r1, [pc, #1432]	; 354a0 <g_unichar_xdigit_value@plt+0x2163c>
   34f04:	add	r1, pc, r1
   34f08:	str	r0, [r8]
   34f0c:	mov	r0, r5
   34f10:	ldr	r8, [r4]
   34f14:	bl	13c9c <g_dgettext@plt>
   34f18:	ldr	r2, [pc, #1412]	; 354a4 <g_unichar_xdigit_value@plt+0x21640>
   34f1c:	add	r2, pc, r2
   34f20:	mov	r1, r0
   34f24:	ldr	r0, [pc, #1404]	; 354a8 <g_unichar_xdigit_value@plt+0x21644>
   34f28:	add	r0, pc, r0
   34f2c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34f30:	ldr	r8, [r8, #12]
   34f34:	mov	r1, r0
   34f38:	ldr	r0, [r8]
   34f3c:	bl	13594 <g_list_append@plt>
   34f40:	ldr	r1, [pc, #1380]	; 354ac <g_unichar_xdigit_value@plt+0x21648>
   34f44:	add	r1, pc, r1
   34f48:	str	r0, [r8]
   34f4c:	mov	r0, r5
   34f50:	ldr	r8, [r4]
   34f54:	bl	13c9c <g_dgettext@plt>
   34f58:	ldr	r2, [pc, #1360]	; 354b0 <g_unichar_xdigit_value@plt+0x2164c>
   34f5c:	add	r2, pc, r2
   34f60:	mov	r1, r0
   34f64:	ldr	r0, [pc, #1352]	; 354b4 <g_unichar_xdigit_value@plt+0x21650>
   34f68:	add	r0, pc, r0
   34f6c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34f70:	ldr	r8, [r8, #12]
   34f74:	mov	r1, r0
   34f78:	ldr	r0, [r8]
   34f7c:	bl	13594 <g_list_append@plt>
   34f80:	ldr	r1, [pc, #1328]	; 354b8 <g_unichar_xdigit_value@plt+0x21654>
   34f84:	add	r1, pc, r1
   34f88:	str	r0, [r8]
   34f8c:	mov	r0, r5
   34f90:	ldr	r8, [r4]
   34f94:	bl	13c9c <g_dgettext@plt>
   34f98:	ldr	r2, [pc, #1308]	; 354bc <g_unichar_xdigit_value@plt+0x21658>
   34f9c:	add	r2, pc, r2
   34fa0:	mov	r1, r0
   34fa4:	ldr	r0, [pc, #1300]	; 354c0 <g_unichar_xdigit_value@plt+0x2165c>
   34fa8:	add	r0, pc, r0
   34fac:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34fb0:	ldr	r8, [r8, #12]
   34fb4:	mov	r1, r0
   34fb8:	ldr	r0, [r8]
   34fbc:	bl	13594 <g_list_append@plt>
   34fc0:	ldr	r1, [pc, #1276]	; 354c4 <g_unichar_xdigit_value@plt+0x21660>
   34fc4:	add	r1, pc, r1
   34fc8:	str	r0, [r8]
   34fcc:	mov	r0, r5
   34fd0:	ldr	r8, [r4]
   34fd4:	bl	13c9c <g_dgettext@plt>
   34fd8:	ldr	r2, [pc, #1256]	; 354c8 <g_unichar_xdigit_value@plt+0x21664>
   34fdc:	add	r2, pc, r2
   34fe0:	mov	r1, r0
   34fe4:	ldr	r0, [pc, #1248]	; 354cc <g_unichar_xdigit_value@plt+0x21668>
   34fe8:	add	r0, pc, r0
   34fec:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   34ff0:	ldr	r8, [r8, #12]
   34ff4:	mov	r1, r0
   34ff8:	ldr	r0, [r8]
   34ffc:	bl	13594 <g_list_append@plt>
   35000:	ldr	r1, [pc, #1224]	; 354d0 <g_unichar_xdigit_value@plt+0x2166c>
   35004:	add	r1, pc, r1
   35008:	str	r0, [r8]
   3500c:	mov	r0, r5
   35010:	ldr	r8, [r4]
   35014:	bl	13c9c <g_dgettext@plt>
   35018:	ldr	r2, [pc, #1204]	; 354d4 <g_unichar_xdigit_value@plt+0x21670>
   3501c:	add	r2, pc, r2
   35020:	mov	r1, r0
   35024:	ldr	r0, [pc, #1196]	; 354d8 <g_unichar_xdigit_value@plt+0x21674>
   35028:	add	r0, pc, r0
   3502c:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   35030:	ldr	r8, [r8, #12]
   35034:	mov	r1, r0
   35038:	ldr	r0, [r8]
   3503c:	bl	13594 <g_list_append@plt>
   35040:	ldr	r1, [pc, #1172]	; 354dc <g_unichar_xdigit_value@plt+0x21678>
   35044:	add	r1, pc, r1
   35048:	str	r0, [r8]
   3504c:	mov	r0, r5
   35050:	ldr	r8, [r4]
   35054:	bl	13c9c <g_dgettext@plt>
   35058:	mov	r2, r7
   3505c:	mov	r1, r0
   35060:	ldr	r0, [pc, #1144]	; 354e0 <g_unichar_xdigit_value@plt+0x2167c>
   35064:	add	r0, pc, r0
   35068:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   3506c:	ldr	r7, [r8, #12]
   35070:	mov	r1, r0
   35074:	ldr	r0, [r7]
   35078:	bl	13594 <g_list_append@plt>
   3507c:	ldr	r1, [pc, #1120]	; 354e4 <g_unichar_xdigit_value@plt+0x21680>
   35080:	add	r1, pc, r1
   35084:	str	r0, [r7]
   35088:	mov	r0, r5
   3508c:	ldr	r7, [r4]
   35090:	bl	13c9c <g_dgettext@plt>
   35094:	mov	r2, r6
   35098:	mov	r1, r0
   3509c:	ldr	r0, [pc, #1092]	; 354e8 <g_unichar_xdigit_value@plt+0x21684>
   350a0:	add	r0, pc, r0
   350a4:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   350a8:	ldr	r7, [r7, #12]
   350ac:	mov	r1, r0
   350b0:	ldr	r0, [r7]
   350b4:	bl	13594 <g_list_append@plt>
   350b8:	ldr	r1, [pc, #1068]	; 354ec <g_unichar_xdigit_value@plt+0x21688>
   350bc:	add	r1, pc, r1
   350c0:	str	r0, [r7]
   350c4:	mov	r0, r5
   350c8:	ldr	r7, [r4]
   350cc:	bl	13c9c <g_dgettext@plt>
   350d0:	ldr	r2, [pc, #1048]	; 354f0 <g_unichar_xdigit_value@plt+0x2168c>
   350d4:	add	r2, pc, r2
   350d8:	mov	r1, r0
   350dc:	ldr	r0, [pc, #1040]	; 354f4 <g_unichar_xdigit_value@plt+0x21690>
   350e0:	add	r0, pc, r0
   350e4:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   350e8:	ldr	r7, [r7, #12]
   350ec:	mov	r1, r0
   350f0:	ldr	r0, [r7]
   350f4:	bl	13594 <g_list_append@plt>
   350f8:	ldr	r1, [pc, #1016]	; 354f8 <g_unichar_xdigit_value@plt+0x21694>
   350fc:	add	r1, pc, r1
   35100:	str	r0, [r7]
   35104:	mov	r0, r5
   35108:	ldr	r7, [r4]
   3510c:	bl	13c9c <g_dgettext@plt>
   35110:	ldr	r2, [pc, #996]	; 354fc <g_unichar_xdigit_value@plt+0x21698>
   35114:	add	r2, pc, r2
   35118:	mov	r1, r0
   3511c:	ldr	r0, [pc, #988]	; 35500 <g_unichar_xdigit_value@plt+0x2169c>
   35120:	add	r0, pc, r0
   35124:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   35128:	ldr	r7, [r7, #12]
   3512c:	mov	r1, r0
   35130:	ldr	r0, [r7]
   35134:	bl	13594 <g_list_append@plt>
   35138:	ldr	r1, [pc, #964]	; 35504 <g_unichar_xdigit_value@plt+0x216a0>
   3513c:	add	r1, pc, r1
   35140:	str	r0, [r7]
   35144:	mov	r0, r5
   35148:	ldr	r7, [r4]
   3514c:	bl	13c9c <g_dgettext@plt>
   35150:	ldr	r2, [pc, #944]	; 35508 <g_unichar_xdigit_value@plt+0x216a4>
   35154:	add	r2, pc, r2
   35158:	mov	r1, r0
   3515c:	ldr	r0, [pc, #936]	; 3550c <g_unichar_xdigit_value@plt+0x216a8>
   35160:	add	r0, pc, r0
   35164:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   35168:	ldr	r7, [r7, #12]
   3516c:	mov	r1, r0
   35170:	ldr	r0, [r7]
   35174:	bl	13594 <g_list_append@plt>
   35178:	ldr	r1, [pc, #912]	; 35510 <g_unichar_xdigit_value@plt+0x216ac>
   3517c:	add	r1, pc, r1
   35180:	str	r0, [r7]
   35184:	mov	r0, r5
   35188:	ldr	r7, [r4]
   3518c:	bl	13c9c <g_dgettext@plt>
   35190:	mov	r2, r6
   35194:	mov	r1, r0
   35198:	ldr	r0, [pc, #884]	; 35514 <g_unichar_xdigit_value@plt+0x216b0>
   3519c:	add	r0, pc, r0
   351a0:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   351a4:	ldr	r7, [r7, #12]
   351a8:	mov	r1, r0
   351ac:	ldr	r0, [r7]
   351b0:	bl	13594 <g_list_append@plt>
   351b4:	ldr	r1, [pc, #860]	; 35518 <g_unichar_xdigit_value@plt+0x216b4>
   351b8:	add	r1, pc, r1
   351bc:	str	r0, [r7]
   351c0:	mov	r0, r5
   351c4:	ldr	r7, [r4]
   351c8:	bl	13c9c <g_dgettext@plt>
   351cc:	mov	r2, r6
   351d0:	mov	r1, r0
   351d4:	ldr	r0, [pc, #832]	; 3551c <g_unichar_xdigit_value@plt+0x216b8>
   351d8:	add	r0, pc, r0
   351dc:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   351e0:	ldr	r7, [r7, #12]
   351e4:	mov	r1, r0
   351e8:	ldr	r0, [r7]
   351ec:	bl	13594 <g_list_append@plt>
   351f0:	ldr	r1, [pc, #808]	; 35520 <g_unichar_xdigit_value@plt+0x216bc>
   351f4:	add	r1, pc, r1
   351f8:	str	r0, [r7]
   351fc:	mov	r0, r5
   35200:	ldr	r7, [r4]
   35204:	bl	13c9c <g_dgettext@plt>
   35208:	mov	r2, r6
   3520c:	mov	r1, r0
   35210:	ldr	r0, [pc, #780]	; 35524 <g_unichar_xdigit_value@plt+0x216c0>
   35214:	add	r0, pc, r0
   35218:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   3521c:	ldr	r6, [r7, #12]
   35220:	mov	r1, r0
   35224:	ldr	r0, [r6]
   35228:	bl	13594 <g_list_append@plt>
   3522c:	ldr	r1, [pc, #756]	; 35528 <g_unichar_xdigit_value@plt+0x216c4>
   35230:	add	r1, pc, r1
   35234:	str	r0, [r6]
   35238:	mov	r0, r5
   3523c:	ldr	r6, [r4]
   35240:	bl	13c9c <g_dgettext@plt>
   35244:	ldr	r2, [pc, #736]	; 3552c <g_unichar_xdigit_value@plt+0x216c8>
   35248:	add	r2, pc, r2
   3524c:	mov	r1, r0
   35250:	ldr	r0, [pc, #728]	; 35530 <g_unichar_xdigit_value@plt+0x216cc>
   35254:	add	r0, pc, r0
   35258:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   3525c:	ldr	r6, [r6, #12]
   35260:	mov	r1, r0
   35264:	ldr	r0, [r6]
   35268:	bl	13594 <g_list_append@plt>
   3526c:	ldr	r1, [pc, #704]	; 35534 <g_unichar_xdigit_value@plt+0x216d0>
   35270:	add	r1, pc, r1
   35274:	str	r0, [r6]
   35278:	mov	r0, r5
   3527c:	ldr	r5, [r4]
   35280:	bl	13c9c <g_dgettext@plt>
   35284:	ldr	r2, [pc, #684]	; 35538 <g_unichar_xdigit_value@plt+0x216d4>
   35288:	add	r2, pc, r2
   3528c:	mov	r1, r0
   35290:	ldr	r0, [pc, #676]	; 3553c <g_unichar_xdigit_value@plt+0x216d8>
   35294:	add	r0, pc, r0
   35298:	bl	32514 <g_unichar_xdigit_value@plt+0x1e6b0>
   3529c:	ldr	r5, [r5, #12]
   352a0:	mov	r1, r0
   352a4:	ldr	r0, [r5]
   352a8:	bl	13594 <g_list_append@plt>
   352ac:	str	r0, [r5]
   352b0:	ldr	r0, [r4]
   352b4:	bl	34218 <g_unichar_xdigit_value@plt+0x203b4>
   352b8:	ldr	r0, [r4]
   352bc:	cmp	r0, #0
   352c0:	bne	34440 <g_unichar_xdigit_value@plt+0x205dc>
   352c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   352c8:	ldrdeq	ip, [r1], -r0
   352cc:	andeq	r0, r0, ip, lsr #7
   352d0:	andeq	r4, r0, r0, asr #31
   352d4:	strdeq	r9, [r0], -r0
   352d8:	andeq	r5, r0, r0, lsl r1
   352dc:	andeq	r9, r0, r0, lsl #15
   352e0:	ldrdeq	r9, [r0], -ip
   352e4:	andeq	r9, r0, r4, lsr #15
   352e8:	andeq	r9, r0, r0, ror r2
   352ec:			; <UNDEFINED> instruction: 0x000096b4
   352f0:			; <UNDEFINED> instruction: 0x00008ebc
   352f4:	andeq	r9, r0, ip, lsl #13
   352f8:	andeq	r9, r0, r8, lsl #13
   352fc:	andeq	r9, r0, r8, ror r6
   35300:	andeq	r9, r0, r8, ror #12
   35304:	andeq	r9, r0, r0, ror #12
   35308:	andeq	r8, r0, r0, asr lr
   3530c:	andeq	r9, r0, r0, asr #12
   35310:	andeq	r8, r0, r0, asr lr
   35314:	andeq	r9, r0, r4, lsl r6
   35318:	andeq	r9, r0, ip, lsl #12
   3531c:	strdeq	r8, [r0], -ip
   35320:	andeq	r9, r0, r8, ror #11
   35324:	andeq	r4, r0, r4, lsr #1
   35328:	andeq	r8, r0, r8, lsr #27
   3532c:			; <UNDEFINED> instruction: 0x000095b8
   35330:	andeq	r8, r0, r8, lsr #27
   35334:	andeq	r9, r0, ip, lsl #12
   35338:	andeq	r9, r0, r4, lsl #11
   3533c:	andeq	r9, r0, r4, asr r1
   35340:	andeq	r9, r0, r8, asr r5
   35344:	andeq	r8, r0, ip, ror #31
   35348:	andeq	r9, r0, r8, lsr #10
   3534c:	andeq	r8, r0, r0, lsl #26
   35350:	strdeq	r9, [r0], -ip
   35354:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   35358:	ldrdeq	r9, [r0], -r4
   3535c:			; <UNDEFINED> instruction: 0x00008cb0
   35360:	andeq	r9, r0, r8, lsr #9
   35364:	andeq	r9, r0, r0, lsr #9
   35368:	andeq	r8, r0, r4, lsl #25
   3536c:	andeq	r9, r0, ip, ror r4
   35370:	andeq	r8, r0, ip, asr ip
   35374:	andeq	r9, r0, r4, asr r4
   35378:	andeq	r9, r0, ip, asr #8
   3537c:	andeq	r8, r0, ip, lsr fp
   35380:	andeq	r9, r0, ip, lsr #8
   35384:	andeq	r9, r0, r4, lsr #8
   35388:	andeq	r8, r0, ip, asr pc
   3538c:	muleq	r0, r0, sl
   35390:	andeq	r9, r0, r8, ror #7
   35394:	andeq	r8, r0, r4, ror sl
   35398:	andeq	r9, r0, r4, asr #7
   3539c:	andeq	r9, r0, r4, asr #7
   353a0:	andeq	r8, r0, r8, asr sl
   353a4:	andeq	r9, r0, r0, lsr #7
   353a8:	muleq	r0, r4, r3
   353ac:	andeq	r9, r0, ip, ror r3
   353b0:	andeq	r9, r0, r8, ror r3
   353b4:	andeq	r9, r0, r8, ror #6
   353b8:	andeq	r9, r0, r4, asr r3
   353bc:	andeq	r9, r0, r0, asr r3
   353c0:			; <UNDEFINED> instruction: 0x00008ab8
   353c4:	andeq	r9, r0, ip, lsr #6
   353c8:	andeq	r9, r0, r8, lsr #6
   353cc:			; <UNDEFINED> instruction: 0x00008ab8
   353d0:			; <UNDEFINED> instruction: 0x00008ab4
   353d4:	andeq	r9, r0, ip, ror #5
   353d8:	andeq	r8, r0, r4, lsr #21
   353dc:	andeq	r9, r0, r8, asr #5
   353e0:	andeq	r9, r0, r0, asr #5
   353e4:	andeq	r8, r0, r0, lsr #20
   353e8:	andeq	r9, r0, r8, lsr r3
   353ec:	muleq	r0, r4, r2
   353f0:	andeq	r9, r0, ip, lsl #5
   353f4:	andeq	r8, r0, r4, lsl #20
   353f8:	andeq	r9, r0, r8, ror #4
   353fc:	andeq	r8, r0, r8, lsl #19
   35400:	andeq	r9, r0, ip, lsr r2
   35404:	andeq	r8, r0, ip, lsl #16
   35408:	andeq	r9, r0, r0, lsl r2
   3540c:	andeq	r9, r0, ip, lsl #4
   35410:	andeq	r8, r0, ip, lsl #19
   35414:	andeq	r9, r0, r8, ror #3
   35418:	andeq	r9, r0, r0, ror #3
   3541c:	andeq	r8, r0, r0, ror #18
   35420:	andeq	r9, r0, r0, asr #3
   35424:			; <UNDEFINED> instruction: 0x000091bc
   35428:	strdeq	r8, [r0], -ip
   3542c:	muleq	r0, r8, r1
   35430:	andeq	r8, r0, r0, ror #20
   35434:	andeq	r9, r0, r4, ror r1
   35438:	andeq	r9, r0, ip, ror #2
   3543c:			; <UNDEFINED> instruction: 0x000088b8
   35440:	andeq	r9, r0, ip, asr #2
   35444:	andeq	r8, r0, r8, lsr #17
   35448:	andeq	r9, r0, r0, lsr #2
   3544c:	andeq	r8, r0, r0, lsl #17
   35450:	strdeq	r9, [r0], -r4
   35454:	strdeq	r9, [r0], -r0
   35458:	andeq	r8, r0, r8, lsl r8
   3545c:	andeq	r9, r0, ip, asr #1
   35460:	andeq	r8, r0, r4, asr #16
   35464:	andeq	r9, r0, r0, lsr #1
   35468:	ldrdeq	r8, [r0], -ip
   3546c:	andeq	r9, r0, r4, ror r0
   35470:			; <UNDEFINED> instruction: 0x000087b8
   35474:	andeq	r9, r0, ip, asr #32
   35478:	andeq	r9, r0, r0, asr #32
   3547c:	muleq	r0, ip, r7
   35480:	andeq	r9, r0, r0, lsr #32
   35484:	andeq	r9, r0, ip, lsl r0
   35488:	andeq	r8, r0, r4, lsl #15
   3548c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   35490:	strdeq	r8, [r0], -r0
   35494:	andeq	r8, r0, r8, asr r7
   35498:	andeq	r8, r0, ip, asr #31
   3549c:	strdeq	r8, [r0], -r4
   354a0:	andeq	r8, r0, r0, lsr #31
   354a4:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   354a8:	strdeq	r8, [r0], -r0
   354ac:	andeq	r8, r0, r4, ror pc
   354b0:	andeq	r8, r0, ip, ror #30
   354b4:	andeq	r8, r0, r4, asr #13
   354b8:	andeq	r8, r0, ip, asr #30
   354bc:	andeq	r5, r0, ip, lsl #22
   354c0:	andeq	r8, r0, ip, lsr pc
   354c4:	andeq	r8, r0, r4, lsr #30
   354c8:	andeq	r8, r0, ip, lsl pc
   354cc:	andeq	r8, r0, r8, asr r6
   354d0:	strdeq	r8, [r0], -ip
   354d4:	strdeq	r8, [r0], -r0
   354d8:	andeq	r8, r0, r0, lsr r6
   354dc:	ldrdeq	r8, [r0], -r0
   354e0:	andeq	r8, r0, r0, asr r6
   354e4:	andeq	r8, r0, r4, lsr #29
   354e8:	ldrdeq	r8, [r0], -r0
   354ec:	andeq	r8, r0, ip, ror lr
   354f0:	andeq	r8, r0, r0, ror lr
   354f4:	strdeq	r8, [r0], -r4
   354f8:	andeq	r8, r0, ip, asr #28
   354fc:	andeq	r8, r0, r4, asr #28
   35500:	andeq	r8, r0, r0, ror #11
   35504:	andeq	r8, r0, r4, lsr #28
   35508:	andeq	r8, r0, r4, lsr #28
   3550c:	andeq	r8, r0, r4, lsl lr
   35510:	andeq	r8, r0, r0, lsl #28
   35514:	andeq	r8, r0, r0, asr r5
   35518:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   3551c:	muleq	r0, r8, r1
   35520:	andeq	r8, r0, r8, lsr #27
   35524:	andeq	r8, r0, r4, lsl r5
   35528:	andeq	r8, r0, ip, ror sp
   3552c:	andeq	r8, r0, r8, ror sp
   35530:	andeq	r8, r0, r8, ror #9
   35534:	andeq	r8, r0, r8, asr sp
   35538:	andeq	r8, r0, r4, asr sp
   3553c:	strdeq	r8, [r0], -r4
   35540:	push	{r4, lr}
   35544:	mov	r4, r0
   35548:	bl	32490 <g_unichar_xdigit_value@plt+0x1e62c>
   3554c:	mov	r1, r0
   35550:	mov	r0, r4
   35554:	bl	13870 <g_type_instance_get_private@plt>
   35558:	str	r0, [r4, #12]
   3555c:	pop	{r4, pc}
   35560:	push	{r4, r5, r6, lr}
   35564:	mov	r6, r0
   35568:	bl	32490 <g_unichar_xdigit_value@plt+0x1e62c>
   3556c:	mov	r1, r0
   35570:	mov	r0, r6
   35574:	bl	13510 <g_type_check_instance_cast@plt>
   35578:	ldr	r3, [r0, #12]
   3557c:	mov	r4, r0
   35580:	ldr	r0, [r3]
   35584:	cmp	r0, #0
   35588:	beq	3559c <g_unichar_xdigit_value@plt+0x21738>
   3558c:	bl	13b94 <g_object_unref@plt>
   35590:	ldr	r3, [r4, #12]
   35594:	mov	r2, #0
   35598:	str	r2, [r3]
   3559c:	ldr	r0, [r3, #4]
   355a0:	mov	r5, #0
   355a4:	bl	1399c <g_free@plt>
   355a8:	ldr	r3, [r4, #12]
   355ac:	str	r5, [r3, #4]
   355b0:	ldr	r0, [r3, #8]
   355b4:	bl	1399c <g_free@plt>
   355b8:	ldr	r3, [r4, #12]
   355bc:	str	r5, [r3, #8]
   355c0:	ldr	r0, [r3, #12]
   355c4:	bl	1399c <g_free@plt>
   355c8:	ldr	r3, [r4, #12]
   355cc:	str	r5, [r3, #12]
   355d0:	ldr	r0, [r3, #16]
   355d4:	bl	1399c <g_free@plt>
   355d8:	ldr	r3, [pc, #36]	; 35604 <g_unichar_xdigit_value@plt+0x217a0>
   355dc:	ldr	r2, [r4, #12]
   355e0:	mov	r1, #80	; 0x50
   355e4:	add	r3, pc, r3
   355e8:	str	r5, [r2, #16]
   355ec:	ldr	r0, [r3]
   355f0:	bl	13db0 <g_type_check_class_cast@plt>
   355f4:	ldr	r3, [r0, #24]
   355f8:	mov	r0, r6
   355fc:	blx	r3
   35600:	pop	{r4, r5, r6, pc}
   35604:	strdeq	fp, [r1], -r8
   35608:	push	{r4, r5, r6, r7, r8, lr}
   3560c:	sub	sp, sp, #24
   35610:	mov	r4, r1
   35614:	mov	r5, r0
   35618:	mov	r7, r2
   3561c:	mov	r6, r3
   35620:	bl	32490 <g_unichar_xdigit_value@plt+0x1e62c>
   35624:	mov	r1, r0
   35628:	mov	r0, r5
   3562c:	bl	13510 <g_type_check_instance_cast@plt>
   35630:	cmp	r4, #4
   35634:	mov	r8, r0
   35638:	beq	3569c <g_unichar_xdigit_value@plt+0x21838>
   3563c:	ldm	r6, {r3, r7}
   35640:	ldr	r0, [r3]
   35644:	bl	13564 <g_type_name@plt>
   35648:	ldr	r3, [r5]
   3564c:	mov	r6, r0
   35650:	ldr	r0, [r3]
   35654:	bl	13564 <g_type_name@plt>
   35658:	ldr	r2, [pc, #88]	; 356b8 <g_unichar_xdigit_value@plt+0x21854>
   3565c:	movw	r3, #2477	; 0x9ad
   35660:	str	r3, [sp]
   35664:	add	r2, pc, r2
   35668:	ldr	r3, [pc, #76]	; 356bc <g_unichar_xdigit_value@plt+0x21858>
   3566c:	stmib	sp, {r2, r4}
   35670:	mov	r1, #16
   35674:	ldr	r2, [pc, #68]	; 356c0 <g_unichar_xdigit_value@plt+0x2185c>
   35678:	add	r3, pc, r3
   3567c:	str	r7, [sp, #12]
   35680:	str	r6, [sp, #16]
   35684:	add	r2, pc, r2
   35688:	str	r0, [sp, #20]
   3568c:	mov	r0, #0
   35690:	bl	13558 <g_log@plt>
   35694:	add	sp, sp, #24
   35698:	pop	{r4, r5, r6, r7, r8, pc}
   3569c:	mov	r0, r7
   356a0:	bl	13468 <g_value_get_string@plt>
   356a4:	mov	r1, r0
   356a8:	mov	r0, r8
   356ac:	add	sp, sp, #24
   356b0:	pop	{r4, r5, r6, r7, r8, lr}
   356b4:	b	32418 <g_unichar_xdigit_value@plt+0x1e5b4>
   356b8:	andeq	r4, r0, r8, lsr #22
   356bc:	andeq	r8, r0, r0, asr r3
   356c0:	andeq	r4, r0, ip, lsr #21
   356c4:	push	{r4, r5, r6, r7, lr}
   356c8:	sub	sp, sp, #28
   356cc:	mov	r4, r1
   356d0:	mov	r5, r0
   356d4:	mov	r6, r2
   356d8:	mov	r7, r3
   356dc:	bl	32490 <g_unichar_xdigit_value@plt+0x1e62c>
   356e0:	mov	r1, r0
   356e4:	mov	r0, r5
   356e8:	bl	13510 <g_type_check_instance_cast@plt>
   356ec:	sub	ip, r4, #1
   356f0:	cmp	ip, #3
   356f4:	addls	pc, pc, ip, lsl #2
   356f8:	b	3573c <g_unichar_xdigit_value@plt+0x218d8>
   356fc:	b	35734 <g_unichar_xdigit_value@plt+0x218d0>
   35700:	b	3572c <g_unichar_xdigit_value@plt+0x218c8>
   35704:	b	35724 <g_unichar_xdigit_value@plt+0x218c0>
   35708:	b	3570c <g_unichar_xdigit_value@plt+0x218a8>
   3570c:	bl	323d4 <g_unichar_xdigit_value@plt+0x1e570>
   35710:	mov	r1, r0
   35714:	mov	r0, r6
   35718:	add	sp, sp, #28
   3571c:	pop	{r4, r5, r6, r7, lr}
   35720:	b	13444 <g_value_take_string@plt>
   35724:	bl	32390 <g_unichar_xdigit_value@plt+0x1e52c>
   35728:	b	35710 <g_unichar_xdigit_value@plt+0x218ac>
   3572c:	bl	3234c <g_unichar_xdigit_value@plt+0x1e4e8>
   35730:	b	35710 <g_unichar_xdigit_value@plt+0x218ac>
   35734:	bl	321a4 <g_unichar_xdigit_value@plt+0x1e340>
   35738:	b	35710 <g_unichar_xdigit_value@plt+0x218ac>
   3573c:	ldm	r7, {r3, r7}
   35740:	ldr	r0, [r3]
   35744:	bl	13564 <g_type_name@plt>
   35748:	ldr	r3, [r5]
   3574c:	mov	r6, r0
   35750:	ldr	r0, [r3]
   35754:	bl	13564 <g_type_name@plt>
   35758:	ldr	r2, [pc, #60]	; 3579c <g_unichar_xdigit_value@plt+0x21938>
   3575c:	movw	r3, #2458	; 0x99a
   35760:	str	r3, [sp]
   35764:	add	r2, pc, r2
   35768:	ldr	r3, [pc, #48]	; 357a0 <g_unichar_xdigit_value@plt+0x2193c>
   3576c:	stmib	sp, {r2, r4}
   35770:	mov	r1, #16
   35774:	ldr	r2, [pc, #40]	; 357a4 <g_unichar_xdigit_value@plt+0x21940>
   35778:	add	r3, pc, r3
   3577c:	str	r7, [sp, #12]
   35780:	str	r6, [sp, #16]
   35784:	add	r2, pc, r2
   35788:	str	r0, [sp, #20]
   3578c:	mov	r0, #0
   35790:	bl	13558 <g_log@plt>
   35794:	add	sp, sp, #28
   35798:	pop	{r4, r5, r6, r7, pc}
   3579c:	andeq	r4, r0, r8, lsr #20
   357a0:	andeq	r8, r0, r0, asr r2
   357a4:	andeq	r4, r0, ip, lsr #19
   357a8:	bx	lr
   357ac:	push	{r4, lr}
   357b0:	mov	r4, r0
   357b4:	bl	13c60 <g_type_class_peek_parent@plt>
   357b8:	ldr	r3, [pc, #44]	; 357ec <g_unichar_xdigit_value@plt+0x21988>
   357bc:	mov	r1, #4
   357c0:	add	r3, pc, r3
   357c4:	str	r0, [r3]
   357c8:	mov	r0, r4
   357cc:	bl	13a5c <g_type_class_add_private@plt>
   357d0:	mov	r0, r4
   357d4:	mov	r1, #80	; 0x50
   357d8:	bl	13db0 <g_type_check_class_cast@plt>
   357dc:	ldr	r3, [pc, #12]	; 357f0 <g_unichar_xdigit_value@plt+0x2198c>
   357e0:	add	r3, pc, r3
   357e4:	str	r3, [r0, #24]
   357e8:	pop	{r4, pc}
   357ec:	andeq	fp, r1, r4, asr lr
   357f0:	andeq	r0, r0, r8, lsl fp
   357f4:	push	{r4, lr}
   357f8:	mov	r4, r0
   357fc:	bl	13c60 <g_type_class_peek_parent@plt>
   35800:	ldr	r3, [pc, #32]	; 35828 <g_unichar_xdigit_value@plt+0x219c4>
   35804:	mov	r1, #80	; 0x50
   35808:	add	r3, pc, r3
   3580c:	str	r0, [r3, #4]
   35810:	mov	r0, r4
   35814:	bl	13db0 <g_type_check_class_cast@plt>
   35818:	ldr	r3, [pc, #12]	; 3582c <g_unichar_xdigit_value@plt+0x219c8>
   3581c:	add	r3, pc, r3
   35820:	str	r3, [r0, #24]
   35824:	pop	{r4, pc}
   35828:	andeq	fp, r1, ip, lsl #28
   3582c:	andeq	r1, r0, r8, lsl r2
   35830:	push	{r4, lr}
   35834:	mov	r4, r0
   35838:	bl	13c60 <g_type_class_peek_parent@plt>
   3583c:	ldr	r3, [pc, #44]	; 35870 <g_unichar_xdigit_value@plt+0x21a0c>
   35840:	mov	r1, #16
   35844:	add	r3, pc, r3
   35848:	str	r0, [r3, #8]
   3584c:	mov	r0, r4
   35850:	bl	13a5c <g_type_class_add_private@plt>
   35854:	mov	r0, r4
   35858:	mov	r1, #80	; 0x50
   3585c:	bl	13db0 <g_type_check_class_cast@plt>
   35860:	ldr	r3, [pc, #12]	; 35874 <g_unichar_xdigit_value@plt+0x21a10>
   35864:	add	r3, pc, r3
   35868:	str	r3, [r0, #24]
   3586c:	pop	{r4, pc}
   35870:	ldrdeq	fp, [r1], -r0
   35874:	andeq	r1, r0, r4, lsr r9
   35878:	cmp	r0, #0
   3587c:	bxeq	lr
   35880:	b	13b94 <g_object_unref@plt>
   35884:	ldr	r0, [pc, #96]	; 358ec <g_unichar_xdigit_value@plt+0x21a88>
   35888:	push	{r4, lr}
   3588c:	add	r0, pc, r0
   35890:	dmb	sy
   35894:	ldr	r3, [r0, #12]
   35898:	dmb	sy
   3589c:	cmp	r3, #0
   358a0:	beq	358b4 <g_unichar_xdigit_value@plt+0x21a50>
   358a4:	ldr	r3, [pc, #68]	; 358f0 <g_unichar_xdigit_value@plt+0x21a8c>
   358a8:	add	r3, pc, r3
   358ac:	ldr	r0, [r3, #12]
   358b0:	pop	{r4, pc}
   358b4:	add	r4, r0, #12
   358b8:	mov	r0, r4
   358bc:	bl	138ac <g_once_init_enter@plt>
   358c0:	cmp	r0, #0
   358c4:	beq	358a4 <g_unichar_xdigit_value@plt+0x21a40>
   358c8:	ldr	r0, [pc, #36]	; 358f4 <g_unichar_xdigit_value@plt+0x21a90>
   358cc:	ldr	r1, [pc, #36]	; 358f8 <g_unichar_xdigit_value@plt+0x21a94>
   358d0:	add	r0, pc, r0
   358d4:	add	r1, pc, r1
   358d8:	bl	13c78 <g_enum_register_static@plt>
   358dc:	mov	r1, r0
   358e0:	mov	r0, r4
   358e4:	bl	13bac <g_once_init_leave@plt>
   358e8:	b	358a4 <g_unichar_xdigit_value@plt+0x21a40>
   358ec:	andeq	fp, r1, r8, lsl #27
   358f0:	andeq	fp, r1, ip, ror #26
   358f4:	andeq	r8, r0, r4, lsl #18
   358f8:	andeq	fp, r1, r4, lsr #6
   358fc:	push	{r3, r4, r5, lr}
   35900:	subs	r5, r1, #0
   35904:	beq	35940 <g_unichar_xdigit_value@plt+0x21adc>
   35908:	mov	r1, #0
   3590c:	bl	133e4 <g_object_new@plt>
   35910:	mov	r4, r0
   35914:	mov	r0, r5
   35918:	bl	136f0 <g_strdup@plt>
   3591c:	mov	r5, r0
   35920:	ldr	r0, [r4, #16]
   35924:	bl	1399c <g_free@plt>
   35928:	mov	r3, #0
   3592c:	mov	r0, r4
   35930:	str	r5, [r4, #16]
   35934:	str	r3, [r4, #20]
   35938:	str	r3, [r4, #24]
   3593c:	pop	{r3, r4, r5, pc}
   35940:	ldr	r1, [pc, #24]	; 35960 <g_unichar_xdigit_value@plt+0x21afc>
   35944:	mov	r0, r5
   35948:	ldr	r2, [pc, #20]	; 35964 <g_unichar_xdigit_value@plt+0x21b00>
   3594c:	add	r1, pc, r1
   35950:	add	r2, pc, r2
   35954:	bl	13450 <g_return_if_fail_warning@plt>
   35958:	mov	r0, r5
   3595c:	pop	{r3, r4, r5, pc}
   35960:	muleq	r0, r4, r6
   35964:	andeq	r3, r0, r8, asr #21
   35968:	push	{r3, r4, r5, lr}
   3596c:	subs	r4, r0, #0
   35970:	beq	359b8 <g_unichar_xdigit_value@plt+0x21b54>
   35974:	ldr	r3, [r4, #12]
   35978:	ldr	r2, [r3]
   3597c:	cmp	r2, #0
   35980:	movne	r2, #0
   35984:	strne	r2, [r3]
   35988:	popne	{r3, r4, r5, pc}
   3598c:	ldr	r5, [r4, #16]
   35990:	cmp	r5, #0
   35994:	beq	359d4 <g_unichar_xdigit_value@plt+0x21b70>
   35998:	ldr	r0, [r4, #20]
   3599c:	cmp	r0, #0
   359a0:	pople	{r3, r4, r5, pc}
   359a4:	add	r0, r5, r0
   359a8:	bl	138f4 <g_utf8_prev_char@plt>
   359ac:	rsb	r0, r5, r0
   359b0:	str	r0, [r4, #20]
   359b4:	pop	{r3, r4, r5, pc}
   359b8:	ldr	r1, [pc, #52]	; 359f4 <g_unichar_xdigit_value@plt+0x21b90>
   359bc:	ldr	r2, [pc, #52]	; 359f8 <g_unichar_xdigit_value@plt+0x21b94>
   359c0:	add	r1, pc, r1
   359c4:	add	r2, pc, r2
   359c8:	add	r1, r1, #20
   359cc:	pop	{r3, r4, r5, lr}
   359d0:	b	13450 <g_return_if_fail_warning@plt>
   359d4:	ldr	r1, [pc, #32]	; 359fc <g_unichar_xdigit_value@plt+0x21b98>
   359d8:	mov	r0, r5
   359dc:	ldr	r2, [pc, #28]	; 35a00 <g_unichar_xdigit_value@plt+0x21b9c>
   359e0:	add	r1, pc, r1
   359e4:	add	r2, pc, r2
   359e8:	add	r1, r1, #40	; 0x28
   359ec:	pop	{r3, r4, r5, lr}
   359f0:	b	13450 <g_return_if_fail_warning@plt>
   359f4:	andeq	r8, r0, r0, lsr #12
   359f8:	andeq	r2, r0, r0, lsr #14
   359fc:	andeq	r8, r0, r0, lsl #12
   35a00:	andeq	r2, r0, r0, lsl #14
   35a04:	subs	r3, r0, #0
   35a08:	beq	35a18 <g_unichar_xdigit_value@plt+0x21bb4>
   35a0c:	ldr	r2, [r3, #20]
   35a10:	str	r2, [r3, #24]
   35a14:	bx	lr
   35a18:	ldr	r1, [pc, #16]	; 35a30 <g_unichar_xdigit_value@plt+0x21bcc>
   35a1c:	ldr	r2, [pc, #16]	; 35a34 <g_unichar_xdigit_value@plt+0x21bd0>
   35a20:	add	r1, pc, r1
   35a24:	add	r2, pc, r2
   35a28:	add	r1, r1, #64	; 0x40
   35a2c:	b	13450 <g_return_if_fail_warning@plt>
   35a30:	andeq	r8, r0, r0, asr #11
   35a34:	andeq	r2, r0, r0, asr #13
   35a38:	push	{r3, r4, r5, r6, r7, lr}
   35a3c:	subs	r3, r0, #0
   35a40:	beq	35b3c <g_unichar_xdigit_value@plt+0x21cd8>
   35a44:	ldr	r7, [r3, #16]
   35a48:	ldr	r4, [r3, #24]
   35a4c:	ldr	r5, [r3, #20]
   35a50:	cmp	r7, #0
   35a54:	rsb	r6, r4, r5
   35a58:	beq	35b5c <g_unichar_xdigit_value@plt+0x21cf8>
   35a5c:	cmp	r4, #0
   35a60:	blt	35b08 <g_unichar_xdigit_value@plt+0x21ca4>
   35a64:	cmp	r6, #0
   35a68:	mov	r0, r7
   35a6c:	blt	35ab0 <g_unichar_xdigit_value@plt+0x21c4c>
   35a70:	mov	r2, r5
   35a74:	mov	r1, #0
   35a78:	bl	13d08 <memchr@plt>
   35a7c:	cmp	r0, #0
   35a80:	rsbne	r5, r7, r0
   35a84:	cmp	r4, r5
   35a88:	ble	35ac0 <g_unichar_xdigit_value@plt+0x21c5c>
   35a8c:	ldr	r1, [pc, #236]	; 35b80 <g_unichar_xdigit_value@plt+0x21d1c>
   35a90:	mov	r0, #0
   35a94:	ldr	r2, [pc, #232]	; 35b84 <g_unichar_xdigit_value@plt+0x21d20>
   35a98:	add	r1, pc, r1
   35a9c:	add	r2, pc, r2
   35aa0:	add	r1, r1, #120	; 0x78
   35aa4:	bl	13450 <g_return_if_fail_warning@plt>
   35aa8:	mov	r0, #0
   35aac:	pop	{r3, r4, r5, r6, r7, pc}
   35ab0:	bl	13ba0 <strlen@plt>
   35ab4:	mov	r5, r0
   35ab8:	cmp	r4, r5
   35abc:	bgt	35a8c <g_unichar_xdigit_value@plt+0x21c28>
   35ac0:	cmp	r6, #0
   35ac4:	rsblt	r6, r4, r5
   35ac8:	add	r3, r4, r6
   35acc:	cmp	r5, r3
   35ad0:	blt	35ae4 <g_unichar_xdigit_value@plt+0x21c80>
   35ad4:	add	r0, r7, r4
   35ad8:	mov	r1, r6
   35adc:	pop	{r3, r4, r5, r6, r7, lr}
   35ae0:	b	134a4 <g_strndup@plt>
   35ae4:	ldr	r1, [pc, #156]	; 35b88 <g_unichar_xdigit_value@plt+0x21d24>
   35ae8:	mov	r0, #0
   35aec:	ldr	r2, [pc, #152]	; 35b8c <g_unichar_xdigit_value@plt+0x21d28>
   35af0:	add	r1, pc, r1
   35af4:	add	r2, pc, r2
   35af8:	add	r1, r1, #120	; 0x78
   35afc:	bl	13450 <g_return_if_fail_warning@plt>
   35b00:	mov	r0, #0
   35b04:	pop	{r3, r4, r5, r6, r7, pc}
   35b08:	mov	r0, r7
   35b0c:	bl	13ba0 <strlen@plt>
   35b10:	adds	r4, r4, r0
   35b14:	mov	r5, r0
   35b18:	bpl	35ac0 <g_unichar_xdigit_value@plt+0x21c5c>
   35b1c:	ldr	r1, [pc, #108]	; 35b90 <g_unichar_xdigit_value@plt+0x21d2c>
   35b20:	mov	r0, #0
   35b24:	ldr	r2, [pc, #104]	; 35b94 <g_unichar_xdigit_value@plt+0x21d30>
   35b28:	add	r1, pc, r1
   35b2c:	add	r2, pc, r2
   35b30:	add	r1, r1, #120	; 0x78
   35b34:	bl	13450 <g_return_if_fail_warning@plt>
   35b38:	b	35aa8 <g_unichar_xdigit_value@plt+0x21c44>
   35b3c:	ldr	r1, [pc, #84]	; 35b98 <g_unichar_xdigit_value@plt+0x21d34>
   35b40:	ldr	r2, [pc, #84]	; 35b9c <g_unichar_xdigit_value@plt+0x21d38>
   35b44:	add	r1, pc, r1
   35b48:	add	r2, pc, r2
   35b4c:	add	r1, r1, #88	; 0x58
   35b50:	bl	13450 <g_return_if_fail_warning@plt>
   35b54:	mov	r0, #0
   35b58:	pop	{r3, r4, r5, r6, r7, pc}
   35b5c:	ldr	r1, [pc, #60]	; 35ba0 <g_unichar_xdigit_value@plt+0x21d3c>
   35b60:	mov	r0, r7
   35b64:	ldr	r2, [pc, #56]	; 35ba4 <g_unichar_xdigit_value@plt+0x21d40>
   35b68:	add	r1, pc, r1
   35b6c:	add	r2, pc, r2
   35b70:	add	r1, r1, #120	; 0x78
   35b74:	bl	13450 <g_return_if_fail_warning@plt>
   35b78:	mov	r0, #0
   35b7c:	pop	{r3, r4, r5, r6, r7, pc}
   35b80:	andeq	r8, r0, r8, asr #10
   35b84:	andeq	r3, r0, r8, lsl fp
   35b88:	strdeq	r8, [r0], -r0
   35b8c:	ldrdeq	r3, [r0], -r4
   35b90:			; <UNDEFINED> instruction: 0x000084b8
   35b94:	andeq	r3, r0, r0, ror sl
   35b98:	muleq	r0, ip, r4
   35b9c:	muleq	r0, ip, r5
   35ba0:	andeq	r8, r0, r8, ror r4
   35ba4:	andeq	r2, r0, r8, ror r5
   35ba8:	push	{r3, r4, r5, lr}
   35bac:	subs	r4, r0, #0
   35bb0:	beq	35be8 <g_unichar_xdigit_value@plt+0x21d84>
   35bb4:	ldr	r3, [r4, #12]
   35bb8:	ldr	r0, [r3, #4]
   35bbc:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   35bc0:	ldr	r3, [r4, #12]
   35bc4:	mov	r1, r0
   35bc8:	mov	r5, r0
   35bcc:	ldr	r0, [r3]
   35bd0:	bl	1a4a0 <g_unichar_xdigit_value@plt+0x663c>
   35bd4:	mov	r4, r0
   35bd8:	mov	r0, r5
   35bdc:	bl	1399c <g_free@plt>
   35be0:	mov	r0, r4
   35be4:	pop	{r3, r4, r5, pc}
   35be8:	ldr	r1, [pc, #24]	; 35c08 <g_unichar_xdigit_value@plt+0x21da4>
   35bec:	ldr	r2, [pc, #24]	; 35c0c <g_unichar_xdigit_value@plt+0x21da8>
   35bf0:	add	r1, pc, r1
   35bf4:	add	r2, pc, r2
   35bf8:	add	r1, r1, #140	; 0x8c
   35bfc:	bl	13450 <g_return_if_fail_warning@plt>
   35c00:	mov	r0, r4
   35c04:	pop	{r3, r4, r5, pc}
   35c08:	strdeq	r8, [r0], -r0
   35c0c:	strdeq	r2, [r0], -r0
   35c10:	push	{r4, r5, r6, r7, r8, lr}
   35c14:	subs	r4, r0, #0
   35c18:	ldr	r7, [pc, #1028]	; 36024 <g_unichar_xdigit_value@plt+0x221c0>
   35c1c:	add	r7, pc, r7
   35c20:	beq	35d98 <g_unichar_xdigit_value@plt+0x21f34>
   35c24:	ldr	r5, [r4, #16]
   35c28:	cmp	r5, #0
   35c2c:	beq	35c8c <g_unichar_xdigit_value@plt+0x21e28>
   35c30:	ldr	r6, [r4, #20]
   35c34:	add	r0, r5, r6
   35c38:	bl	135e8 <g_utf8_get_char@plt>
   35c3c:	subs	r8, r0, #0
   35c40:	beq	35ca8 <g_unichar_xdigit_value@plt+0x21e44>
   35c44:	ldr	ip, [pc, #988]	; 36028 <g_unichar_xdigit_value@plt+0x221c4>
   35c48:	bic	r3, r8, #2
   35c4c:	ldrb	r1, [r5, r6]
   35c50:	cmp	r3, #44	; 0x2c
   35c54:	ldr	r3, [r4, #12]
   35c58:	mov	r2, #0
   35c5c:	ldr	ip, [r7, ip]
   35c60:	ldr	ip, [ip]
   35c64:	ldrb	r1, [ip, r1]
   35c68:	add	r6, r1, r6
   35c6c:	str	r6, [r4, #20]
   35c70:	str	r2, [r3]
   35c74:	beq	35db8 <g_unichar_xdigit_value@plt+0x21f54>
   35c78:	bl	13e10 <g_unichar_isdigit@plt>
   35c7c:	cmp	r0, #0
   35c80:	beq	35cbc <g_unichar_xdigit_value@plt+0x21e58>
   35c84:	mov	r0, #2
   35c88:	pop	{r4, r5, r6, r7, r8, pc}
   35c8c:	ldr	r1, [pc, #920]	; 3602c <g_unichar_xdigit_value@plt+0x221c8>
   35c90:	mov	r0, r5
   35c94:	ldr	r2, [pc, #916]	; 36030 <g_unichar_xdigit_value@plt+0x221cc>
   35c98:	add	r1, pc, r1
   35c9c:	add	r2, pc, r2
   35ca0:	add	r1, r1, #192	; 0xc0
   35ca4:	bl	13450 <g_return_if_fail_warning@plt>
   35ca8:	ldr	r3, [r4, #12]
   35cac:	mov	r2, #1
   35cb0:	mov	r0, #12
   35cb4:	str	r2, [r3]
   35cb8:	pop	{r4, r5, r6, r7, r8, pc}
   35cbc:	bic	r3, r8, #32
   35cc0:	sub	r3, r3, #65	; 0x41
   35cc4:	cmp	r3, #5
   35cc8:	bls	35dc0 <g_unichar_xdigit_value@plt+0x21f5c>
   35ccc:	movw	r3, #8304	; 0x2070
   35cd0:	cmp	r8, r3
   35cd4:	beq	35dc8 <g_unichar_xdigit_value@plt+0x21f64>
   35cd8:	cmp	r8, #185	; 0xb9
   35cdc:	beq	35dc8 <g_unichar_xdigit_value@plt+0x21f64>
   35ce0:	sub	r3, r8, #178	; 0xb2
   35ce4:	cmp	r3, #1
   35ce8:	bls	35dc8 <g_unichar_xdigit_value@plt+0x21f64>
   35cec:	sub	r3, r8, #8256	; 0x2040
   35cf0:	sub	r3, r3, #52	; 0x34
   35cf4:	cmp	r3, #5
   35cf8:	bls	35dc8 <g_unichar_xdigit_value@plt+0x21f64>
   35cfc:	movw	r3, #8315	; 0x207b
   35d00:	cmp	r8, r3
   35d04:	beq	35dd0 <g_unichar_xdigit_value@plt+0x21f6c>
   35d08:	sub	r3, r8, #8320	; 0x2080
   35d0c:	cmp	r3, #9
   35d10:	bls	35dd8 <g_unichar_xdigit_value@plt+0x21f74>
   35d14:	sub	r3, r8, #8512	; 0x2140
   35d18:	sub	r3, r3, #19
   35d1c:	cmp	r3, #11
   35d20:	bls	35de0 <g_unichar_xdigit_value@plt+0x21f7c>
   35d24:	sub	r3, r8, #188	; 0xbc
   35d28:	cmp	r3, #2
   35d2c:	bls	35de0 <g_unichar_xdigit_value@plt+0x21f7c>
   35d30:	cmp	r8, #176	; 0xb0
   35d34:	beq	35de8 <g_unichar_xdigit_value@plt+0x21f84>
   35d38:	cmp	r8, #39	; 0x27
   35d3c:	beq	35df0 <g_unichar_xdigit_value@plt+0x21f8c>
   35d40:	cmp	r8, #34	; 0x22
   35d44:	beq	35e00 <g_unichar_xdigit_value@plt+0x21f9c>
   35d48:	mov	r0, r8
   35d4c:	bl	1363c <g_unichar_isalpha@plt>
   35d50:	cmp	r0, #0
   35d54:	bne	35df8 <g_unichar_xdigit_value@plt+0x21f94>
   35d58:	cmp	r8, #95	; 0x5f
   35d5c:	beq	35df8 <g_unichar_xdigit_value@plt+0x21f94>
   35d60:	movw	r3, #8743	; 0x2227
   35d64:	cmp	r8, r3
   35d68:	beq	35e08 <g_unichar_xdigit_value@plt+0x21fa4>
   35d6c:	add	r3, r3, #1
   35d70:	cmp	r8, r3
   35d74:	beq	35e10 <g_unichar_xdigit_value@plt+0x21fac>
   35d78:	add	r3, r3, #147	; 0x93
   35d7c:	cmp	r8, r3
   35d80:	beq	35d90 <g_unichar_xdigit_value@plt+0x21f2c>
   35d84:	movw	r3, #8853	; 0x2295
   35d88:	cmp	r8, r3
   35d8c:	bne	35e18 <g_unichar_xdigit_value@plt+0x21fb4>
   35d90:	mov	r0, #29
   35d94:	pop	{r4, r5, r6, r7, r8, pc}
   35d98:	ldr	r1, [pc, #660]	; 36034 <g_unichar_xdigit_value@plt+0x221d0>
   35d9c:	ldr	r2, [pc, #660]	; 36038 <g_unichar_xdigit_value@plt+0x221d4>
   35da0:	add	r1, pc, r1
   35da4:	add	r2, pc, r2
   35da8:	add	r1, r1, #164	; 0xa4
   35dac:	bl	13450 <g_return_if_fail_warning@plt>
   35db0:	mov	r0, r4
   35db4:	pop	{r4, r5, r6, r7, r8, pc}
   35db8:	mov	r0, #1
   35dbc:	pop	{r4, r5, r6, r7, r8, pc}
   35dc0:	mov	r0, #3
   35dc4:	pop	{r4, r5, r6, r7, r8, pc}
   35dc8:	mov	r0, #4
   35dcc:	pop	{r4, r5, r6, r7, r8, pc}
   35dd0:	mov	r0, #5
   35dd4:	pop	{r4, r5, r6, r7, r8, pc}
   35dd8:	mov	r0, #6
   35ddc:	pop	{r4, r5, r6, r7, r8, pc}
   35de0:	mov	r0, #7
   35de4:	pop	{r4, r5, r6, r7, r8, pc}
   35de8:	mov	r0, #8
   35dec:	pop	{r4, r5, r6, r7, r8, pc}
   35df0:	mov	r0, #9
   35df4:	pop	{r4, r5, r6, r7, r8, pc}
   35df8:	mov	r0, #11
   35dfc:	pop	{r4, r5, r6, r7, r8, pc}
   35e00:	mov	r0, #10
   35e04:	pop	{r4, r5, r6, r7, r8, pc}
   35e08:	mov	r0, #27
   35e0c:	pop	{r4, r5, r6, r7, r8, pc}
   35e10:	mov	r0, #28
   35e14:	pop	{r4, r5, r6, r7, r8, pc}
   35e18:	cmp	r8, #172	; 0xac
   35e1c:	beq	35e28 <g_unichar_xdigit_value@plt+0x21fc4>
   35e20:	cmp	r8, #126	; 0x7e
   35e24:	bne	35e30 <g_unichar_xdigit_value@plt+0x21fcc>
   35e28:	mov	r0, #26
   35e2c:	pop	{r4, r5, r6, r7, r8, pc}
   35e30:	cmp	r8, #43	; 0x2b
   35e34:	beq	35e60 <g_unichar_xdigit_value@plt+0x21ffc>
   35e38:	cmp	r8, #45	; 0x2d
   35e3c:	beq	35e58 <g_unichar_xdigit_value@plt+0x21ff4>
   35e40:	movw	r3, #8722	; 0x2212
   35e44:	cmp	r8, r3
   35e48:	beq	35e58 <g_unichar_xdigit_value@plt+0x21ff4>
   35e4c:	movw	r3, #8211	; 0x2013
   35e50:	cmp	r8, r3
   35e54:	bne	35e68 <g_unichar_xdigit_value@plt+0x22004>
   35e58:	mov	r0, #15
   35e5c:	pop	{r4, r5, r6, r7, r8, pc}
   35e60:	mov	r0, #14
   35e64:	pop	{r4, r5, r6, r7, r8, pc}
   35e68:	cmp	r8, #42	; 0x2a
   35e6c:	beq	35e78 <g_unichar_xdigit_value@plt+0x22014>
   35e70:	cmp	r8, #215	; 0xd7
   35e74:	bne	35e80 <g_unichar_xdigit_value@plt+0x2201c>
   35e78:	mov	r0, #16
   35e7c:	pop	{r4, r5, r6, r7, r8, pc}
   35e80:	cmp	r8, #47	; 0x2f
   35e84:	beq	35e9c <g_unichar_xdigit_value@plt+0x22038>
   35e88:	movw	r3, #8725	; 0x2215
   35e8c:	cmp	r8, r3
   35e90:	beq	35e9c <g_unichar_xdigit_value@plt+0x22038>
   35e94:	cmp	r8, #247	; 0xf7
   35e98:	bne	35ea4 <g_unichar_xdigit_value@plt+0x22040>
   35e9c:	mov	r0, #17
   35ea0:	pop	{r4, r5, r6, r7, r8, pc}
   35ea4:	add	r3, r3, #245	; 0xf5
   35ea8:	cmp	r8, r3
   35eac:	beq	35f7c <g_unichar_xdigit_value@plt+0x22118>
   35eb0:	add	r3, r3, #1
   35eb4:	cmp	r8, r3
   35eb8:	beq	3601c <g_unichar_xdigit_value@plt+0x221b8>
   35ebc:	movw	r3, #8968	; 0x2308
   35ec0:	cmp	r8, r3
   35ec4:	beq	36014 <g_unichar_xdigit_value@plt+0x221b0>
   35ec8:	add	r3, r3, #1
   35ecc:	cmp	r8, r3
   35ed0:	beq	3600c <g_unichar_xdigit_value@plt+0x221a8>
   35ed4:	movw	r3, #8730	; 0x221a
   35ed8:	cmp	r8, r3
   35edc:	beq	36004 <g_unichar_xdigit_value@plt+0x221a0>
   35ee0:	add	r3, r3, #1
   35ee4:	cmp	r8, r3
   35ee8:	beq	35ffc <g_unichar_xdigit_value@plt+0x22198>
   35eec:	add	r3, r3, #1
   35ef0:	cmp	r8, r3
   35ef4:	beq	35ff4 <g_unichar_xdigit_value@plt+0x22190>
   35ef8:	cmp	r8, #61	; 0x3d
   35efc:	beq	35fec <g_unichar_xdigit_value@plt+0x22188>
   35f00:	cmp	r8, #40	; 0x28
   35f04:	beq	35fe4 <g_unichar_xdigit_value@plt+0x22180>
   35f08:	cmp	r8, #41	; 0x29
   35f0c:	beq	35fdc <g_unichar_xdigit_value@plt+0x22178>
   35f10:	cmp	r8, #91	; 0x5b
   35f14:	beq	35fd4 <g_unichar_xdigit_value@plt+0x22170>
   35f18:	cmp	r8, #93	; 0x5d
   35f1c:	beq	35fcc <g_unichar_xdigit_value@plt+0x22168>
   35f20:	cmp	r8, #123	; 0x7b
   35f24:	beq	35fc4 <g_unichar_xdigit_value@plt+0x22160>
   35f28:	cmp	r8, #125	; 0x7d
   35f2c:	beq	35fbc <g_unichar_xdigit_value@plt+0x22158>
   35f30:	cmp	r8, #124	; 0x7c
   35f34:	beq	35fb4 <g_unichar_xdigit_value@plt+0x22150>
   35f38:	cmp	r8, #94	; 0x5e
   35f3c:	beq	35fac <g_unichar_xdigit_value@plt+0x22148>
   35f40:	cmp	r8, #33	; 0x21
   35f44:	beq	35fa4 <g_unichar_xdigit_value@plt+0x22140>
   35f48:	cmp	r8, #37	; 0x25
   35f4c:	beq	35f9c <g_unichar_xdigit_value@plt+0x22138>
   35f50:	cmp	r8, #59	; 0x3b
   35f54:	beq	35f94 <g_unichar_xdigit_value@plt+0x22130>
   35f58:	cmp	r8, #32
   35f5c:	beq	35f8c <g_unichar_xdigit_value@plt+0x22128>
   35f60:	cmp	r8, #13
   35f64:	beq	35f84 <g_unichar_xdigit_value@plt+0x22120>
   35f68:	sub	r0, r8, #9
   35f6c:	cmp	r0, #1
   35f70:	movls	r0, #13
   35f74:	movhi	r0, #0
   35f78:	pop	{r4, r5, r6, r7, r8, pc}
   35f7c:	mov	r0, #19
   35f80:	pop	{r4, r5, r6, r7, r8, pc}
   35f84:	mov	r0, r8
   35f88:	pop	{r4, r5, r6, r7, r8, pc}
   35f8c:	mov	r0, #13
   35f90:	pop	{r4, r5, r6, r7, r8, pc}
   35f94:	mov	r0, #49	; 0x31
   35f98:	pop	{r4, r5, r6, r7, r8, pc}
   35f9c:	mov	r0, #48	; 0x30
   35fa0:	pop	{r4, r5, r6, r7, r8, pc}
   35fa4:	mov	r0, #47	; 0x2f
   35fa8:	pop	{r4, r5, r6, r7, r8, pc}
   35fac:	mov	r0, #46	; 0x2e
   35fb0:	pop	{r4, r5, r6, r7, r8, pc}
   35fb4:	mov	r0, #45	; 0x2d
   35fb8:	pop	{r4, r5, r6, r7, r8, pc}
   35fbc:	mov	r0, #44	; 0x2c
   35fc0:	pop	{r4, r5, r6, r7, r8, pc}
   35fc4:	mov	r0, #43	; 0x2b
   35fc8:	pop	{r4, r5, r6, r7, r8, pc}
   35fcc:	mov	r0, #42	; 0x2a
   35fd0:	pop	{r4, r5, r6, r7, r8, pc}
   35fd4:	mov	r0, #41	; 0x29
   35fd8:	pop	{r4, r5, r6, r7, r8, pc}
   35fdc:	mov	r0, #40	; 0x28
   35fe0:	pop	{r4, r5, r6, r7, r8, pc}
   35fe4:	mov	r0, #39	; 0x27
   35fe8:	pop	{r4, r5, r6, r7, r8, pc}
   35fec:	mov	r0, #38	; 0x26
   35ff0:	pop	{r4, r5, r6, r7, r8, pc}
   35ff4:	mov	r0, #25
   35ff8:	pop	{r4, r5, r6, r7, r8, pc}
   35ffc:	mov	r0, #24
   36000:	pop	{r4, r5, r6, r7, r8, pc}
   36004:	mov	r0, #23
   36008:	pop	{r4, r5, r6, r7, r8, pc}
   3600c:	mov	r0, #22
   36010:	pop	{r4, r5, r6, r7, r8, pc}
   36014:	mov	r0, #21
   36018:	pop	{r4, r5, r6, r7, r8, pc}
   3601c:	mov	r0, #20
   36020:	pop	{r4, r5, r6, r7, r8, pc}
   36024:	ldrdeq	fp, [r1], -ip
   36028:	muleq	r0, ip, r3
   3602c:	andeq	r8, r0, r8, asr #6
   36030:	andeq	r2, r0, r8, asr #8
   36034:	andeq	r8, r0, r0, asr #4
   36038:	andeq	r2, r0, r0, asr #6
   3603c:	push	{r3, r4, r5, r6, r7, lr}
   36040:	subs	r4, r0, #0
   36044:	beq	36080 <g_unichar_xdigit_value@plt+0x2221c>
   36048:	ldr	r3, [r4, #12]
   3604c:	ldr	r0, [r3, #4]
   36050:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   36054:	ldr	r3, [r4, #12]
   36058:	ldr	r1, [r3, #12]
   3605c:	mov	r5, r0
   36060:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   36064:	subs	r6, r0, #0
   36068:	beq	360a0 <g_unichar_xdigit_value@plt+0x2223c>
   3606c:	bl	13b94 <g_object_unref@plt>
   36070:	mov	r0, r5
   36074:	bl	1399c <g_free@plt>
   36078:	mov	r0, #1
   3607c:	pop	{r3, r4, r5, r6, r7, pc}
   36080:	ldr	r1, [pc, #176]	; 36138 <g_unichar_xdigit_value@plt+0x222d4>
   36084:	ldr	r2, [pc, #176]	; 3613c <g_unichar_xdigit_value@plt+0x222d8>
   36088:	add	r1, pc, r1
   3608c:	add	r2, pc, r2
   36090:	add	r1, r1, #216	; 0xd8
   36094:	bl	13450 <g_return_if_fail_warning@plt>
   36098:	mov	r0, r4
   3609c:	pop	{r3, r4, r5, r6, r7, pc}
   360a0:	ldr	r7, [pc, #152]	; 36140 <g_unichar_xdigit_value@plt+0x222dc>
   360a4:	add	r7, pc, r7
   360a8:	b	360ec <g_unichar_xdigit_value@plt+0x22288>
   360ac:	ldr	r3, [r4, #12]
   360b0:	add	r6, r6, #1
   360b4:	ldr	r1, [r3, #12]
   360b8:	bl	284fc <g_unichar_xdigit_value@plt+0x14698>
   360bc:	cmp	r0, #0
   360c0:	bne	3606c <g_unichar_xdigit_value@plt+0x22208>
   360c4:	ldr	r3, [r4, #12]
   360c8:	ldr	r0, [r3, #4]
   360cc:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   360d0:	ldr	r3, [r4, #12]
   360d4:	ldr	r0, [r3, #4]
   360d8:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   360dc:	mov	r3, r0
   360e0:	mov	r0, r5
   360e4:	mov	r5, r3
   360e8:	bl	1399c <g_free@plt>
   360ec:	mov	r0, r5
   360f0:	mov	r1, r7
   360f4:	bl	13e58 <g_strcmp0@plt>
   360f8:	cmp	r0, #0
   360fc:	mov	r0, r5
   36100:	bne	360ac <g_unichar_xdigit_value@plt+0x22248>
   36104:	cmp	r6, #0
   36108:	sub	r6, r6, #1
   3610c:	beq	36128 <g_unichar_xdigit_value@plt+0x222c4>
   36110:	ldr	r3, [r4, #12]
   36114:	sub	r6, r6, #1
   36118:	ldr	r0, [r3, #4]
   3611c:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36120:	cmn	r6, #1
   36124:	bne	36110 <g_unichar_xdigit_value@plt+0x222ac>
   36128:	mov	r0, r5
   3612c:	bl	1399c <g_free@plt>
   36130:	mov	r0, #0
   36134:	pop	{r3, r4, r5, r6, r7, pc}
   36138:	andeq	r7, r0, r8, asr pc
   3613c:	andeq	r2, r0, r8, asr r0
   36140:	andeq	r3, r0, r0, lsr #1
   36144:	push	{r4, r5, r6, lr}
   36148:	subs	r4, r0, #0
   3614c:	beq	36214 <g_unichar_xdigit_value@plt+0x223b0>
   36150:	mov	r5, #0
   36154:	b	3615c <g_unichar_xdigit_value@plt+0x222f8>
   36158:	add	r5, r5, #1
   3615c:	ldr	r3, [r4, #12]
   36160:	ldr	r0, [r3, #4]
   36164:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36168:	cmp	r0, #4
   3616c:	beq	36158 <g_unichar_xdigit_value@plt+0x222f4>
   36170:	ldr	r3, [r4, #12]
   36174:	ldr	r0, [r3, #4]
   36178:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   3617c:	ldr	r3, [r4, #12]
   36180:	ldr	r0, [r3, #4]
   36184:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   36188:	ldr	r3, [r4, #12]
   3618c:	mov	r1, r0
   36190:	mov	r6, r0
   36194:	ldr	r0, [r3]
   36198:	bl	1a4e8 <g_unichar_xdigit_value@plt+0x6684>
   3619c:	cmp	r0, #0
   361a0:	bne	36204 <g_unichar_xdigit_value@plt+0x223a0>
   361a4:	cmp	r5, #0
   361a8:	sub	r5, r5, #1
   361ac:	beq	361c8 <g_unichar_xdigit_value@plt+0x22364>
   361b0:	ldr	r3, [r4, #12]
   361b4:	sub	r5, r5, #1
   361b8:	ldr	r0, [r3, #4]
   361bc:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   361c0:	cmn	r5, #1
   361c4:	bne	361b0 <g_unichar_xdigit_value@plt+0x2234c>
   361c8:	ldr	r3, [r4, #12]
   361cc:	ldr	r0, [r3, #4]
   361d0:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   361d4:	mov	r5, r0
   361d8:	mov	r0, r6
   361dc:	bl	1399c <g_free@plt>
   361e0:	ldr	r3, [r4, #12]
   361e4:	mov	r1, r5
   361e8:	ldr	r0, [r3]
   361ec:	bl	1a4e8 <g_unichar_xdigit_value@plt+0x6684>
   361f0:	mov	r4, r0
   361f4:	mov	r0, r5
   361f8:	bl	1399c <g_free@plt>
   361fc:	mov	r0, r4
   36200:	pop	{r4, r5, r6, pc}
   36204:	mov	r0, r6
   36208:	bl	1399c <g_free@plt>
   3620c:	mov	r0, #1
   36210:	pop	{r4, r5, r6, pc}
   36214:	ldr	r1, [pc, #24]	; 36234 <g_unichar_xdigit_value@plt+0x223d0>
   36218:	ldr	r2, [pc, #24]	; 36238 <g_unichar_xdigit_value@plt+0x223d4>
   3621c:	add	r1, pc, r1
   36220:	add	r2, pc, r2
   36224:	add	r1, r1, #240	; 0xf0
   36228:	bl	13450 <g_return_if_fail_warning@plt>
   3622c:	mov	r0, r4
   36230:	pop	{r4, r5, r6, pc}
   36234:	andeq	r7, r0, r4, asr #27
   36238:	andeq	r1, r0, r4, asr #29
   3623c:	ldr	r0, [pc, #108]	; 362b0 <g_unichar_xdigit_value@plt+0x2244c>
   36240:	push	{r3, r4, r5, lr}
   36244:	add	r0, pc, r0
   36248:	dmb	sy
   3624c:	ldr	r4, [r0, #16]
   36250:	dmb	sy
   36254:	cmp	r4, #0
   36258:	beq	3626c <g_unichar_xdigit_value@plt+0x22408>
   3625c:	ldr	r3, [pc, #80]	; 362b4 <g_unichar_xdigit_value@plt+0x22450>
   36260:	add	r3, pc, r3
   36264:	ldr	r0, [r3, #16]
   36268:	pop	{r3, r4, r5, pc}
   3626c:	add	r5, r0, #16
   36270:	mov	r0, r5
   36274:	bl	138ac <g_once_init_enter@plt>
   36278:	cmp	r0, #0
   3627c:	beq	3625c <g_unichar_xdigit_value@plt+0x223f8>
   36280:	ldr	r2, [pc, #48]	; 362b8 <g_unichar_xdigit_value@plt+0x22454>
   36284:	mov	r3, r4
   36288:	ldr	r1, [pc, #44]	; 362bc <g_unichar_xdigit_value@plt+0x22458>
   3628c:	mov	r0, #80	; 0x50
   36290:	add	r2, pc, r2
   36294:	add	r1, pc, r1
   36298:	add	r2, r2, #612	; 0x264
   3629c:	bl	13438 <g_type_register_static@plt>
   362a0:	mov	r1, r0
   362a4:	mov	r0, r5
   362a8:	bl	13bac <g_once_init_leave@plt>
   362ac:	b	3625c <g_unichar_xdigit_value@plt+0x223f8>
   362b0:	ldrdeq	fp, [r1], -r0
   362b4:			; <UNDEFINED> instruction: 0x0001b3b4
   362b8:	andeq	sl, r1, r8, ror #18
   362bc:	andeq	r7, r0, r0, asr pc
   362c0:	push	{r4, lr}
   362c4:	mov	r4, r0
   362c8:	bl	3623c <g_unichar_xdigit_value@plt+0x223d8>
   362cc:	mov	r1, r4
   362d0:	pop	{r4, lr}
   362d4:	b	358fc <g_unichar_xdigit_value@plt+0x21a98>
   362d8:	push	{r4, lr}
   362dc:	mov	r4, r0
   362e0:	bl	3623c <g_unichar_xdigit_value@plt+0x223d8>
   362e4:	mov	r1, r0
   362e8:	mov	r0, r4
   362ec:	bl	13870 <g_type_instance_get_private@plt>
   362f0:	mov	r3, #0
   362f4:	str	r0, [r4, #12]
   362f8:	str	r3, [r0]
   362fc:	pop	{r4, pc}
   36300:	push	{r3, r4, r5, lr}
   36304:	mov	r4, r0
   36308:	bl	3623c <g_unichar_xdigit_value@plt+0x223d8>
   3630c:	mov	r1, r0
   36310:	mov	r0, r4
   36314:	bl	13510 <g_type_check_instance_cast@plt>
   36318:	mov	r5, r0
   3631c:	ldr	r0, [r0, #16]
   36320:	bl	1399c <g_free@plt>
   36324:	ldr	r3, [pc, #36]	; 36350 <g_unichar_xdigit_value@plt+0x224ec>
   36328:	mov	r2, #0
   3632c:	mov	r1, #80	; 0x50
   36330:	add	r3, pc, r3
   36334:	str	r2, [r5, #16]
   36338:	ldr	r0, [r3]
   3633c:	bl	13db0 <g_type_check_class_cast@plt>
   36340:	ldr	r3, [r0, #24]
   36344:	mov	r0, r4
   36348:	blx	r3
   3634c:	pop	{r3, r4, r5, pc}
   36350:	andeq	fp, r1, r4, ror #5
   36354:	mov	r1, #0
   36358:	b	133e4 <g_object_new@plt>
   3635c:	ldr	r0, [pc, #108]	; 363d0 <g_unichar_xdigit_value@plt+0x2256c>
   36360:	push	{r3, r4, r5, lr}
   36364:	add	r0, pc, r0
   36368:	dmb	sy
   3636c:	ldr	r4, [r0, #20]
   36370:	dmb	sy
   36374:	cmp	r4, #0
   36378:	beq	3638c <g_unichar_xdigit_value@plt+0x22528>
   3637c:	ldr	r3, [pc, #80]	; 363d4 <g_unichar_xdigit_value@plt+0x22570>
   36380:	add	r3, pc, r3
   36384:	ldr	r0, [r3, #20]
   36388:	pop	{r3, r4, r5, pc}
   3638c:	add	r5, r0, #20
   36390:	mov	r0, r5
   36394:	bl	138ac <g_once_init_enter@plt>
   36398:	cmp	r0, #0
   3639c:	beq	3637c <g_unichar_xdigit_value@plt+0x22518>
   363a0:	ldr	r2, [pc, #48]	; 363d8 <g_unichar_xdigit_value@plt+0x22574>
   363a4:	mov	r3, r4
   363a8:	ldr	r1, [pc, #44]	; 363dc <g_unichar_xdigit_value@plt+0x22578>
   363ac:	mov	r0, #80	; 0x50
   363b0:	add	r2, pc, r2
   363b4:	add	r1, pc, r1
   363b8:	add	r2, r2, #648	; 0x288
   363bc:	bl	13438 <g_type_register_static@plt>
   363c0:	mov	r1, r0
   363c4:	mov	r0, r5
   363c8:	bl	13bac <g_once_init_leave@plt>
   363cc:	b	3637c <g_unichar_xdigit_value@plt+0x22518>
   363d0:			; <UNDEFINED> instruction: 0x0001b2b0
   363d4:	muleq	r1, r4, r2
   363d8:	andeq	sl, r1, r8, asr #16
   363dc:	andeq	r7, r0, ip, lsr lr
   363e0:	push	{r3, lr}
   363e4:	bl	3635c <g_unichar_xdigit_value@plt+0x224f8>
   363e8:	pop	{r3, lr}
   363ec:	b	36354 <g_unichar_xdigit_value@plt+0x224f0>
   363f0:	push	{r3, r4, r5, r6, r7, lr}
   363f4:	subs	r5, r0, #0
   363f8:	mov	r6, r1
   363fc:	beq	36448 <g_unichar_xdigit_value@plt+0x225e4>
   36400:	bl	363e0 <g_unichar_xdigit_value@plt+0x2257c>
   36404:	ldr	r3, [r5, #12]
   36408:	mov	r4, r0
   3640c:	ldr	r0, [r3, #4]
   36410:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   36414:	mov	r7, r0
   36418:	ldr	r0, [r4, #16]
   3641c:	bl	1399c <g_free@plt>
   36420:	ldr	r3, [r5, #12]
   36424:	mov	r0, r4
   36428:	str	r7, [r4, #16]
   3642c:	ldr	r3, [r3, #4]
   36430:	ldr	r2, [r3, #24]
   36434:	ldr	r3, [r3, #20]
   36438:	str	r6, [r4, #28]
   3643c:	str	r2, [r4, #20]
   36440:	str	r3, [r4, #24]
   36444:	pop	{r3, r4, r5, r6, r7, pc}
   36448:	ldr	r1, [pc, #24]	; 36468 <g_unichar_xdigit_value@plt+0x22604>
   3644c:	ldr	r2, [pc, #24]	; 3646c <g_unichar_xdigit_value@plt+0x22608>
   36450:	add	r1, pc, r1
   36454:	add	r2, pc, r2
   36458:	add	r1, r1, #260	; 0x104
   3645c:	bl	13450 <g_return_if_fail_warning@plt>
   36460:	mov	r0, r5
   36464:	pop	{r3, r4, r5, r6, r7, pc}
   36468:	muleq	r0, r0, fp
   3646c:	muleq	r0, r0, ip
   36470:	push	{r4, r5, r6, lr}
   36474:	subs	r4, r0, #0
   36478:	sub	sp, sp, #8
   3647c:	beq	3650c <g_unichar_xdigit_value@plt+0x226a8>
   36480:	ldr	r3, [r4, #12]
   36484:	ldr	r0, [r3, #4]
   36488:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   3648c:	cmp	r0, #2
   36490:	bne	364b8 <g_unichar_xdigit_value@plt+0x22654>
   36494:	ldr	r3, [r4, #12]
   36498:	ldr	r0, [r3, #4]
   3649c:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   364a0:	cmp	r0, #2
   364a4:	beq	36494 <g_unichar_xdigit_value@plt+0x22630>
   364a8:	cmp	r0, #10
   364ac:	moveq	r0, r4
   364b0:	moveq	r1, #31
   364b4:	beq	36500 <g_unichar_xdigit_value@plt+0x2269c>
   364b8:	ldr	r3, [r4, #12]
   364bc:	ldr	r0, [r3, #4]
   364c0:	ldr	r6, [r3]
   364c4:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   364c8:	ldr	r3, [r4, #12]
   364cc:	mov	r1, #6
   364d0:	ldr	ip, [r3, #4]
   364d4:	ldr	r3, [ip, #24]
   364d8:	ldr	ip, [ip, #20]
   364dc:	str	ip, [sp]
   364e0:	mov	r2, r0
   364e4:	mov	r5, r0
   364e8:	mov	r0, r6
   364ec:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   364f0:	mov	r0, r5
   364f4:	bl	1399c <g_free@plt>
   364f8:	mov	r0, r4
   364fc:	mov	r1, #0
   36500:	add	sp, sp, #8
   36504:	pop	{r4, r5, r6, lr}
   36508:	b	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   3650c:	ldr	r1, [pc, #28]	; 36530 <g_unichar_xdigit_value@plt+0x226cc>
   36510:	ldr	r2, [pc, #28]	; 36534 <g_unichar_xdigit_value@plt+0x226d0>
   36514:	add	r1, pc, r1
   36518:	add	r2, pc, r2
   3651c:	add	r1, r1, #280	; 0x118
   36520:	bl	13450 <g_return_if_fail_warning@plt>
   36524:	mov	r0, r4
   36528:	add	sp, sp, #8
   3652c:	pop	{r4, r5, r6, pc}
   36530:	andeq	r7, r0, ip, asr #21
   36534:	andeq	r1, r0, ip, asr #23
   36538:	push	{r4, r5, r6, lr}
   3653c:	subs	r4, r0, #0
   36540:	sub	sp, sp, #8
   36544:	beq	365b4 <g_unichar_xdigit_value@plt+0x22750>
   36548:	ldr	r3, [r4, #12]
   3654c:	ldr	r0, [r3, #4]
   36550:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36554:	cmp	r0, #2
   36558:	bne	36560 <g_unichar_xdigit_value@plt+0x226fc>
   3655c:	b	3655c <g_unichar_xdigit_value@plt+0x226f8>
   36560:	ldr	r3, [r4, #12]
   36564:	ldr	r0, [r3, #4]
   36568:	ldr	r6, [r3]
   3656c:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   36570:	ldr	r3, [r4, #12]
   36574:	mov	r1, #6
   36578:	ldr	ip, [r3, #4]
   3657c:	ldr	r3, [ip, #24]
   36580:	ldr	ip, [ip, #20]
   36584:	str	ip, [sp]
   36588:	mov	r2, r0
   3658c:	mov	r5, r0
   36590:	mov	r0, r6
   36594:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   36598:	mov	r0, r5
   3659c:	bl	1399c <g_free@plt>
   365a0:	mov	r0, r4
   365a4:	mov	r1, #0
   365a8:	add	sp, sp, #8
   365ac:	pop	{r4, r5, r6, lr}
   365b0:	b	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   365b4:	ldr	r1, [pc, #28]	; 365d8 <g_unichar_xdigit_value@plt+0x22774>
   365b8:	ldr	r2, [pc, #28]	; 365dc <g_unichar_xdigit_value@plt+0x22778>
   365bc:	add	r1, pc, r1
   365c0:	add	r2, pc, r2
   365c4:	add	r1, r1, #308	; 0x134
   365c8:	bl	13450 <g_return_if_fail_warning@plt>
   365cc:	mov	r0, r4
   365d0:	add	sp, sp, #8
   365d4:	pop	{r4, r5, r6, pc}
   365d8:	andeq	r7, r0, r4, lsr #20
   365dc:	andeq	r1, r0, r4, lsr #22
   365e0:	push	{r4, lr}
   365e4:	subs	r4, r0, #0
   365e8:	beq	3663c <g_unichar_xdigit_value@plt+0x227d8>
   365ec:	ldr	r3, [r4, #12]
   365f0:	ldr	r0, [r3, #4]
   365f4:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   365f8:	sub	r3, r0, #2
   365fc:	cmp	r3, #1
   36600:	bls	365ec <g_unichar_xdigit_value@plt+0x22788>
   36604:	cmp	r0, #6
   36608:	bne	36620 <g_unichar_xdigit_value@plt+0x227bc>
   3660c:	ldr	r3, [r4, #12]
   36610:	ldr	r0, [r3, #4]
   36614:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36618:	cmp	r0, #6
   3661c:	beq	3660c <g_unichar_xdigit_value@plt+0x227a8>
   36620:	ldr	r3, [r4, #12]
   36624:	ldr	r0, [r3, #4]
   36628:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   3662c:	mov	r0, r4
   36630:	mov	r1, #31
   36634:	pop	{r4, lr}
   36638:	b	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   3663c:	ldr	r1, [pc, #24]	; 3665c <g_unichar_xdigit_value@plt+0x227f8>
   36640:	ldr	r2, [pc, #24]	; 36660 <g_unichar_xdigit_value@plt+0x227fc>
   36644:	add	r1, pc, r1
   36648:	add	r2, pc, r2
   3664c:	add	r1, r1, #336	; 0x150
   36650:	bl	13450 <g_return_if_fail_warning@plt>
   36654:	mov	r0, r4
   36658:	pop	{r4, pc}
   3665c:	muleq	r0, ip, r9
   36660:	muleq	r0, ip, sl
   36664:	push	{r4, r5, r6, r7, lr}
   36668:	subs	r4, r0, #0
   3666c:	sub	sp, sp, #12
   36670:	beq	3673c <g_unichar_xdigit_value@plt+0x228d8>
   36674:	ldr	r3, [r4, #12]
   36678:	ldr	r0, [r3, #4]
   3667c:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36680:	sub	r3, r0, #2
   36684:	cmp	r3, #1
   36688:	bls	36674 <g_unichar_xdigit_value@plt+0x22810>
   3668c:	cmp	r0, #1
   36690:	beq	36760 <g_unichar_xdigit_value@plt+0x228fc>
   36694:	cmp	r0, #6
   36698:	beq	36708 <g_unichar_xdigit_value@plt+0x228a4>
   3669c:	mov	r0, r4
   366a0:	bl	3603c <g_unichar_xdigit_value@plt+0x221d8>
   366a4:	subs	r6, r0, #0
   366a8:	movne	r0, r4
   366ac:	movne	r1, #31
   366b0:	bne	366fc <g_unichar_xdigit_value@plt+0x22898>
   366b4:	ldr	r3, [r4, #12]
   366b8:	ldr	r0, [r3, #4]
   366bc:	ldr	r7, [r3]
   366c0:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   366c4:	ldr	r3, [r4, #12]
   366c8:	mov	r1, #6
   366cc:	ldr	ip, [r3, #4]
   366d0:	ldr	r3, [ip, #24]
   366d4:	ldr	ip, [ip, #20]
   366d8:	str	ip, [sp]
   366dc:	mov	r2, r0
   366e0:	mov	r5, r0
   366e4:	mov	r0, r7
   366e8:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   366ec:	mov	r0, r5
   366f0:	bl	1399c <g_free@plt>
   366f4:	mov	r0, r4
   366f8:	mov	r1, r6
   366fc:	add	sp, sp, #12
   36700:	pop	{r4, r5, r6, r7, lr}
   36704:	b	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   36708:	ldr	r3, [r4, #12]
   3670c:	ldr	r0, [r3, #4]
   36710:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36714:	cmp	r0, #6
   36718:	beq	36708 <g_unichar_xdigit_value@plt+0x228a4>
   3671c:	ldr	r3, [r4, #12]
   36720:	ldr	r0, [r3, #4]
   36724:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   36728:	mov	r0, r4
   3672c:	mov	r1, #31
   36730:	add	sp, sp, #12
   36734:	pop	{r4, r5, r6, r7, lr}
   36738:	b	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   3673c:	ldr	r1, [pc, #44]	; 36770 <g_unichar_xdigit_value@plt+0x2290c>
   36740:	ldr	r2, [pc, #44]	; 36774 <g_unichar_xdigit_value@plt+0x22910>
   36744:	add	r1, pc, r1
   36748:	add	r2, pc, r2
   3674c:	add	r1, r1, #364	; 0x16c
   36750:	bl	13450 <g_return_if_fail_warning@plt>
   36754:	mov	r0, r4
   36758:	add	sp, sp, #12
   3675c:	pop	{r4, r5, r6, r7, pc}
   36760:	mov	r0, r4
   36764:	add	sp, sp, #12
   36768:	pop	{r4, r5, r6, r7, lr}
   3676c:	b	365e0 <g_unichar_xdigit_value@plt+0x2277c>
   36770:	muleq	r0, ip, r8
   36774:	muleq	r0, ip, r9
   36778:	push	{r4, r5, r6, lr}
   3677c:	subs	r4, r0, #0
   36780:	sub	sp, sp, #8
   36784:	beq	3685c <g_unichar_xdigit_value@plt+0x229f8>
   36788:	ldr	r3, [r4, #12]
   3678c:	ldr	r0, [r3, #4]
   36790:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36794:	cmp	r0, #2
   36798:	beq	367f8 <g_unichar_xdigit_value@plt+0x22994>
   3679c:	cmp	r0, #3
   367a0:	beq	3684c <g_unichar_xdigit_value@plt+0x229e8>
   367a4:	ldr	r3, [r4, #12]
   367a8:	ldr	r0, [r3, #4]
   367ac:	ldr	r6, [r3]
   367b0:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   367b4:	ldr	r3, [r4, #12]
   367b8:	mov	r1, #6
   367bc:	ldr	ip, [r3, #4]
   367c0:	ldr	r3, [ip, #24]
   367c4:	ldr	ip, [ip, #20]
   367c8:	str	ip, [sp]
   367cc:	mov	r2, r0
   367d0:	mov	r5, r0
   367d4:	mov	r0, r6
   367d8:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   367dc:	mov	r0, r5
   367e0:	bl	1399c <g_free@plt>
   367e4:	mov	r0, r4
   367e8:	mov	r1, #0
   367ec:	add	sp, sp, #8
   367f0:	pop	{r4, r5, r6, lr}
   367f4:	b	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   367f8:	ldr	r3, [r4, #12]
   367fc:	ldr	r0, [r3, #4]
   36800:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36804:	cmp	r0, #2
   36808:	beq	367f8 <g_unichar_xdigit_value@plt+0x22994>
   3680c:	cmp	r0, #8
   36810:	beq	36838 <g_unichar_xdigit_value@plt+0x229d4>
   36814:	cmp	r0, #3
   36818:	bne	36824 <g_unichar_xdigit_value@plt+0x229c0>
   3681c:	b	3684c <g_unichar_xdigit_value@plt+0x229e8>
   36820:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36824:	ldr	r3, [r4, #12]
   36828:	cmp	r0, #6
   3682c:	ldr	r0, [r3, #4]
   36830:	beq	36820 <g_unichar_xdigit_value@plt+0x229bc>
   36834:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   36838:	mov	r0, r4
   3683c:	mov	r1, #31
   36840:	add	sp, sp, #8
   36844:	pop	{r4, r5, r6, lr}
   36848:	b	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   3684c:	mov	r0, r4
   36850:	add	sp, sp, #8
   36854:	pop	{r4, r5, r6, lr}
   36858:	b	365e0 <g_unichar_xdigit_value@plt+0x2277c>
   3685c:	ldr	r1, [pc, #28]	; 36880 <g_unichar_xdigit_value@plt+0x22a1c>
   36860:	ldr	r2, [pc, #28]	; 36884 <g_unichar_xdigit_value@plt+0x22a20>
   36864:	add	r1, pc, r1
   36868:	add	r2, pc, r2
   3686c:	add	r1, r1, #388	; 0x184
   36870:	bl	13450 <g_return_if_fail_warning@plt>
   36874:	mov	r0, r4
   36878:	add	sp, sp, #8
   3687c:	pop	{r4, r5, r6, pc}
   36880:	andeq	r7, r0, ip, ror r7
   36884:	andeq	r1, r0, ip, ror r8
   36888:	push	{r4, r5, r6, lr}
   3688c:	subs	r4, r0, #0
   36890:	beq	369fc <g_unichar_xdigit_value@plt+0x22b98>
   36894:	ldr	r3, [r4, #12]
   36898:	ldr	r0, [r3, #4]
   3689c:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   368a0:	bic	r3, r0, #8
   368a4:	cmp	r3, #3
   368a8:	beq	36894 <g_unichar_xdigit_value@plt+0x22a30>
   368ac:	cmp	r0, #6
   368b0:	bne	368c8 <g_unichar_xdigit_value@plt+0x22a64>
   368b4:	ldr	r3, [r4, #12]
   368b8:	ldr	r0, [r3, #4]
   368bc:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   368c0:	cmp	r0, #6
   368c4:	beq	368b4 <g_unichar_xdigit_value@plt+0x22a50>
   368c8:	ldr	r3, [r4, #12]
   368cc:	ldr	r0, [r3, #4]
   368d0:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   368d4:	ldr	r3, [r4, #12]
   368d8:	ldr	r0, [r3, #4]
   368dc:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   368e0:	mvn	r1, #0
   368e4:	mov	r6, r0
   368e8:	bl	134c8 <g_utf8_strdown@plt>
   368ec:	mov	r5, r0
   368f0:	mov	r0, r6
   368f4:	bl	1399c <g_free@plt>
   368f8:	ldr	r1, [pc, #284]	; 36a1c <g_unichar_xdigit_value@plt+0x22bb8>
   368fc:	mov	r0, r5
   36900:	add	r1, pc, r1
   36904:	bl	13e58 <g_strcmp0@plt>
   36908:	cmp	r0, #0
   3690c:	beq	369f0 <g_unichar_xdigit_value@plt+0x22b8c>
   36910:	ldr	r1, [pc, #264]	; 36a20 <g_unichar_xdigit_value@plt+0x22bbc>
   36914:	mov	r0, r5
   36918:	add	r1, pc, r1
   3691c:	bl	13e58 <g_strcmp0@plt>
   36920:	cmp	r0, #0
   36924:	moveq	r0, r4
   36928:	moveq	r1, #27
   3692c:	beq	369d8 <g_unichar_xdigit_value@plt+0x22b74>
   36930:	ldr	r1, [pc, #236]	; 36a24 <g_unichar_xdigit_value@plt+0x22bc0>
   36934:	mov	r0, r5
   36938:	add	r1, pc, r1
   3693c:	bl	13e58 <g_strcmp0@plt>
   36940:	cmp	r0, #0
   36944:	moveq	r0, r4
   36948:	moveq	r1, #28
   3694c:	beq	369d8 <g_unichar_xdigit_value@plt+0x22b74>
   36950:	ldr	r1, [pc, #208]	; 36a28 <g_unichar_xdigit_value@plt+0x22bc4>
   36954:	mov	r0, r5
   36958:	add	r1, pc, r1
   3695c:	bl	13e58 <g_strcmp0@plt>
   36960:	cmp	r0, #0
   36964:	moveq	r0, r4
   36968:	moveq	r1, #29
   3696c:	beq	369d8 <g_unichar_xdigit_value@plt+0x22b74>
   36970:	ldr	r1, [pc, #180]	; 36a2c <g_unichar_xdigit_value@plt+0x22bc8>
   36974:	mov	r0, r5
   36978:	add	r1, pc, r1
   3697c:	bl	13e58 <g_strcmp0@plt>
   36980:	cmp	r0, #0
   36984:	moveq	r0, r4
   36988:	moveq	r1, #26
   3698c:	beq	369d8 <g_unichar_xdigit_value@plt+0x22b74>
   36990:	ldr	r1, [pc, #152]	; 36a30 <g_unichar_xdigit_value@plt+0x22bcc>
   36994:	mov	r0, r5
   36998:	add	r1, pc, r1
   3699c:	bl	13e58 <g_strcmp0@plt>
   369a0:	cmp	r0, #0
   369a4:	mov	r0, r4
   369a8:	moveq	r1, #30
   369ac:	beq	369d8 <g_unichar_xdigit_value@plt+0x22b74>
   369b0:	bl	35ba8 <g_unichar_xdigit_value@plt+0x21d44>
   369b4:	cmp	r0, #0
   369b8:	mov	r0, r4
   369bc:	movne	r1, #35	; 0x23
   369c0:	bne	369d8 <g_unichar_xdigit_value@plt+0x22b74>
   369c4:	bl	36144 <g_unichar_xdigit_value@plt+0x222e0>
   369c8:	cmp	r0, #0
   369cc:	mov	r0, r4
   369d0:	movne	r1, #36	; 0x24
   369d4:	moveq	r1, #37	; 0x25
   369d8:	bl	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   369dc:	mov	r4, r0
   369e0:	mov	r0, r5
   369e4:	bl	1399c <g_free@plt>
   369e8:	mov	r0, r4
   369ec:	pop	{r4, r5, r6, pc}
   369f0:	mov	r0, r4
   369f4:	mov	r1, #18
   369f8:	b	369d8 <g_unichar_xdigit_value@plt+0x22b74>
   369fc:	ldr	r1, [pc, #48]	; 36a34 <g_unichar_xdigit_value@plt+0x22bd0>
   36a00:	ldr	r2, [pc, #48]	; 36a38 <g_unichar_xdigit_value@plt+0x22bd4>
   36a04:	add	r1, pc, r1
   36a08:	add	r2, pc, r2
   36a0c:	add	r1, r1, #412	; 0x19c
   36a10:	bl	13450 <g_return_if_fail_warning@plt>
   36a14:	mov	r0, r4
   36a18:	pop	{r4, r5, r6, pc}
   36a1c:	andeq	r2, r0, r8, lsr #28
   36a20:	andeq	r7, r0, r4, ror #17
   36a24:	strdeq	r3, [r0], -r0
   36a28:	andeq	r7, r0, r8, lsr #17
   36a2c:	andeq	r2, r0, r0, ror #27
   36a30:	andeq	r5, r0, ip, asr #2
   36a34:	ldrdeq	r7, [r0], -ip
   36a38:	ldrdeq	r1, [r0], -ip
   36a3c:	push	{r3, r4, r5, lr}
   36a40:	mov	r4, r0
   36a44:	bl	3635c <g_unichar_xdigit_value@plt+0x224f8>
   36a48:	mov	r1, r0
   36a4c:	mov	r0, r4
   36a50:	bl	13510 <g_type_check_instance_cast@plt>
   36a54:	mov	r5, r0
   36a58:	ldr	r0, [r0, #16]
   36a5c:	bl	1399c <g_free@plt>
   36a60:	ldr	r3, [pc, #36]	; 36a8c <g_unichar_xdigit_value@plt+0x22c28>
   36a64:	mov	r2, #0
   36a68:	mov	r1, #80	; 0x50
   36a6c:	add	r3, pc, r3
   36a70:	str	r2, [r5, #16]
   36a74:	ldr	r0, [r3, #4]
   36a78:	bl	13db0 <g_type_check_class_cast@plt>
   36a7c:	ldr	r3, [r0, #24]
   36a80:	mov	r0, r4
   36a84:	blx	r3
   36a88:	pop	{r3, r4, r5, pc}
   36a8c:	andeq	sl, r1, r8, lsr #23
   36a90:	push	{r3, r4, r5, r6, r7, lr}
   36a94:	subs	r7, r1, #0
   36a98:	mov	r5, r2
   36a9c:	mov	r6, r3
   36aa0:	beq	36b48 <g_unichar_xdigit_value@plt+0x22ce4>
   36aa4:	cmp	r2, #0
   36aa8:	beq	36b6c <g_unichar_xdigit_value@plt+0x22d08>
   36aac:	mov	r1, #0
   36ab0:	bl	133e4 <g_object_new@plt>
   36ab4:	mov	r4, r0
   36ab8:	mov	r0, r7
   36abc:	bl	362c0 <g_unichar_xdigit_value@plt+0x2245c>
   36ac0:	ldr	ip, [r4, #12]
   36ac4:	mov	r7, r0
   36ac8:	ldr	r0, [ip, #4]
   36acc:	cmp	r0, #0
   36ad0:	beq	36ae4 <g_unichar_xdigit_value@plt+0x22c80>
   36ad4:	bl	13b94 <g_object_unref@plt>
   36ad8:	ldr	ip, [r4, #12]
   36adc:	mov	r3, #0
   36ae0:	str	r3, [ip, #4]
   36ae4:	ldr	r0, [r4, #16]
   36ae8:	str	r7, [ip, #4]
   36aec:	cmp	r0, #0
   36af0:	beq	36b04 <g_unichar_xdigit_value@plt+0x22ca0>
   36af4:	ldr	r1, [pc, #148]	; 36b90 <g_unichar_xdigit_value@plt+0x22d2c>
   36af8:	add	r1, pc, r1
   36afc:	bl	1396c <g_list_free_full@plt>
   36b00:	ldr	ip, [r4, #12]
   36b04:	mov	r0, r5
   36b08:	mov	r5, #0
   36b0c:	str	r5, [r4, #16]
   36b10:	str	r5, [ip, #8]
   36b14:	bl	1ab70 <g_unichar_xdigit_value@plt+0x6d0c>
   36b18:	ldr	ip, [r4, #12]
   36b1c:	mov	r7, r0
   36b20:	ldr	r0, [ip]
   36b24:	cmp	r0, r5
   36b28:	beq	36b38 <g_unichar_xdigit_value@plt+0x22cd4>
   36b2c:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   36b30:	ldr	ip, [r4, #12]
   36b34:	str	r5, [ip]
   36b38:	str	r7, [ip]
   36b3c:	mov	r0, r4
   36b40:	str	r6, [ip, #12]
   36b44:	pop	{r3, r4, r5, r6, r7, pc}
   36b48:	ldr	r1, [pc, #68]	; 36b94 <g_unichar_xdigit_value@plt+0x22d30>
   36b4c:	mov	r0, r7
   36b50:	ldr	r2, [pc, #64]	; 36b98 <g_unichar_xdigit_value@plt+0x22d34>
   36b54:	add	r1, pc, r1
   36b58:	add	r2, pc, r2
   36b5c:	add	r1, r1, #432	; 0x1b0
   36b60:	bl	13450 <g_return_if_fail_warning@plt>
   36b64:	mov	r0, r7
   36b68:	pop	{r3, r4, r5, r6, r7, pc}
   36b6c:	ldr	r1, [pc, #40]	; 36b9c <g_unichar_xdigit_value@plt+0x22d38>
   36b70:	mov	r0, r2
   36b74:	ldr	r2, [pc, #36]	; 36ba0 <g_unichar_xdigit_value@plt+0x22d3c>
   36b78:	add	r1, pc, r1
   36b7c:	add	r2, pc, r2
   36b80:	add	r1, r1, #432	; 0x1b0
   36b84:	bl	13450 <g_return_if_fail_warning@plt>
   36b88:	mov	r0, r5
   36b8c:	pop	{r3, r4, r5, r6, r7, pc}
   36b90:			; <UNDEFINED> instruction: 0xffffed78
   36b94:	andeq	r7, r0, ip, lsl #9
   36b98:	andeq	r2, r0, r0, asr #17
   36b9c:	andeq	r7, r0, r8, ror #8
   36ba0:	andeq	r2, r0, ip, asr #19
   36ba4:	push	{r4, r5, r6, lr}
   36ba8:	subs	r4, r0, #0
   36bac:	sub	sp, sp, #8
   36bb0:	beq	36f34 <g_unichar_xdigit_value@plt+0x230d0>
   36bb4:	ldr	r3, [r4, #12]
   36bb8:	ldr	r0, [r3, #4]
   36bbc:	bl	35a04 <g_unichar_xdigit_value@plt+0x21ba0>
   36bc0:	ldr	r3, [r4, #12]
   36bc4:	ldr	r0, [r3, #4]
   36bc8:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36bcc:	cmp	r0, #13
   36bd0:	beq	36bb4 <g_unichar_xdigit_value@plt+0x22d50>
   36bd4:	sub	r3, r0, #14
   36bd8:	cmp	r3, #3
   36bdc:	bls	36e24 <g_unichar_xdigit_value@plt+0x22fc0>
   36be0:	sub	r3, r0, #19
   36be4:	cmp	r3, #10
   36be8:	bls	36e24 <g_unichar_xdigit_value@plt+0x22fc0>
   36bec:	sub	r3, r0, #38	; 0x26
   36bf0:	cmp	r3, #11
   36bf4:	bls	36e24 <g_unichar_xdigit_value@plt+0x22fc0>
   36bf8:	cmp	r0, #5
   36bfc:	beq	36e38 <g_unichar_xdigit_value@plt+0x22fd4>
   36c00:	cmp	r0, #4
   36c04:	beq	36cc4 <g_unichar_xdigit_value@plt+0x22e60>
   36c08:	cmp	r0, #6
   36c0c:	beq	36cf8 <g_unichar_xdigit_value@plt+0x22e94>
   36c10:	cmp	r0, #7
   36c14:	beq	36d74 <g_unichar_xdigit_value@plt+0x22f10>
   36c18:	cmp	r0, #2
   36c1c:	beq	36d2c <g_unichar_xdigit_value@plt+0x22ec8>
   36c20:	cmp	r0, #1
   36c24:	beq	36edc <g_unichar_xdigit_value@plt+0x23078>
   36c28:	cmp	r0, #3
   36c2c:	beq	36d88 <g_unichar_xdigit_value@plt+0x22f24>
   36c30:	cmp	r0, #11
   36c34:	beq	36eec <g_unichar_xdigit_value@plt+0x23088>
   36c38:	cmp	r0, #12
   36c3c:	beq	36e24 <g_unichar_xdigit_value@plt+0x22fc0>
   36c40:	ldr	r3, [r4, #12]
   36c44:	ldr	r0, [r3, #4]
   36c48:	ldr	r6, [r3]
   36c4c:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   36c50:	ldr	r3, [r4, #12]
   36c54:	mov	r1, #1
   36c58:	mov	r5, r0
   36c5c:	mov	r2, r0
   36c60:	mov	r0, r6
   36c64:	ldr	ip, [r3, #4]
   36c68:	ldr	r3, [ip, #24]
   36c6c:	ldr	ip, [ip, #20]
   36c70:	str	ip, [sp]
   36c74:	bl	18ea8 <g_unichar_xdigit_value@plt+0x5044>
   36c78:	mov	r0, r5
   36c7c:	bl	1399c <g_free@plt>
   36c80:	mov	r0, r4
   36c84:	mov	r1, #0
   36c88:	bl	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   36c8c:	mov	r5, r0
   36c90:	subs	r0, r5, #0
   36c94:	beq	36c9c <g_unichar_xdigit_value@plt+0x22e38>
   36c98:	bl	133f0 <g_object_ref@plt>
   36c9c:	mov	r1, r0
   36ca0:	ldr	r0, [r4, #16]
   36ca4:	bl	13594 <g_list_append@plt>
   36ca8:	ldr	r3, [r5, #28]
   36cac:	cmp	r3, #12
   36cb0:	str	r0, [r4, #16]
   36cb4:	beq	36e80 <g_unichar_xdigit_value@plt+0x2301c>
   36cb8:	mov	r0, r5
   36cbc:	bl	13b94 <g_object_unref@plt>
   36cc0:	b	36bb4 <g_unichar_xdigit_value@plt+0x22d50>
   36cc4:	ldr	r3, [r4, #12]
   36cc8:	ldr	r0, [r3, #4]
   36ccc:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36cd0:	cmp	r0, #4
   36cd4:	beq	36cc4 <g_unichar_xdigit_value@plt+0x22e60>
   36cd8:	ldr	r3, [r4, #12]
   36cdc:	ldr	r0, [r3, #4]
   36ce0:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   36ce4:	mov	r0, r4
   36ce8:	mov	r1, #32
   36cec:	bl	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   36cf0:	mov	r5, r0
   36cf4:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36cf8:	ldr	r3, [r4, #12]
   36cfc:	ldr	r0, [r3, #4]
   36d00:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36d04:	cmp	r0, #6
   36d08:	beq	36cf8 <g_unichar_xdigit_value@plt+0x22e94>
   36d0c:	ldr	r3, [r4, #12]
   36d10:	ldr	r0, [r3, #4]
   36d14:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   36d18:	mov	r0, r4
   36d1c:	mov	r1, #34	; 0x22
   36d20:	bl	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   36d24:	mov	r5, r0
   36d28:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36d2c:	ldr	r3, [r4, #12]
   36d30:	ldr	r0, [r3, #4]
   36d34:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36d38:	cmp	r0, #2
   36d3c:	beq	36d2c <g_unichar_xdigit_value@plt+0x22ec8>
   36d40:	cmp	r0, #7
   36d44:	beq	36d74 <g_unichar_xdigit_value@plt+0x22f10>
   36d48:	cmp	r0, #6
   36d4c:	beq	36e0c <g_unichar_xdigit_value@plt+0x22fa8>
   36d50:	cmp	r0, #8
   36d54:	beq	36f64 <g_unichar_xdigit_value@plt+0x23100>
   36d58:	cmp	r0, #1
   36d5c:	beq	36edc <g_unichar_xdigit_value@plt+0x23078>
   36d60:	cmp	r0, #3
   36d64:	beq	36f54 <g_unichar_xdigit_value@plt+0x230f0>
   36d68:	ldr	r3, [r4, #12]
   36d6c:	ldr	r0, [r3, #4]
   36d70:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   36d74:	mov	r0, r4
   36d78:	mov	r1, #31
   36d7c:	bl	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   36d80:	mov	r5, r0
   36d84:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36d88:	ldr	r3, [r4, #12]
   36d8c:	ldr	r0, [r3, #4]
   36d90:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36d94:	cmp	r0, #3
   36d98:	beq	36d88 <g_unichar_xdigit_value@plt+0x22f24>
   36d9c:	cmp	r0, #2
   36da0:	beq	36f54 <g_unichar_xdigit_value@plt+0x230f0>
   36da4:	cmp	r0, #1
   36da8:	beq	36f24 <g_unichar_xdigit_value@plt+0x230c0>
   36dac:	cmp	r0, #6
   36db0:	beq	36efc <g_unichar_xdigit_value@plt+0x23098>
   36db4:	cmp	r0, #11
   36db8:	beq	36eec <g_unichar_xdigit_value@plt+0x23088>
   36dbc:	ldr	r3, [r4, #12]
   36dc0:	ldr	r0, [r3, #4]
   36dc4:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   36dc8:	mov	r0, r4
   36dcc:	bl	3603c <g_unichar_xdigit_value@plt+0x221d8>
   36dd0:	cmp	r0, #0
   36dd4:	mov	r0, r4
   36dd8:	bne	36d78 <g_unichar_xdigit_value@plt+0x22f14>
   36ddc:	bl	35ba8 <g_unichar_xdigit_value@plt+0x21d44>
   36de0:	cmp	r0, #0
   36de4:	mov	r0, r4
   36de8:	bne	36f14 <g_unichar_xdigit_value@plt+0x230b0>
   36dec:	bl	36144 <g_unichar_xdigit_value@plt+0x222e0>
   36df0:	cmp	r0, #0
   36df4:	mov	r0, r4
   36df8:	movne	r1, #36	; 0x24
   36dfc:	moveq	r1, #37	; 0x25
   36e00:	bl	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   36e04:	mov	r5, r0
   36e08:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36e0c:	ldr	r3, [r4, #12]
   36e10:	ldr	r0, [r3, #4]
   36e14:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36e18:	cmp	r0, #6
   36e1c:	beq	36e0c <g_unichar_xdigit_value@plt+0x22fa8>
   36e20:	b	36d68 <g_unichar_xdigit_value@plt+0x22f04>
   36e24:	mov	r1, r0
   36e28:	mov	r0, r4
   36e2c:	bl	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   36e30:	mov	r5, r0
   36e34:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36e38:	ldr	r3, [r4, #12]
   36e3c:	ldr	r0, [r3, #4]
   36e40:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36e44:	cmp	r0, #4
   36e48:	bne	36eb4 <g_unichar_xdigit_value@plt+0x23050>
   36e4c:	ldr	r3, [r4, #12]
   36e50:	ldr	r0, [r3, #4]
   36e54:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36e58:	cmp	r0, #4
   36e5c:	beq	36e4c <g_unichar_xdigit_value@plt+0x22fe8>
   36e60:	ldr	r3, [r4, #12]
   36e64:	ldr	r0, [r3, #4]
   36e68:	bl	35968 <g_unichar_xdigit_value@plt+0x21b04>
   36e6c:	mov	r0, r4
   36e70:	mov	r1, #33	; 0x21
   36e74:	bl	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   36e78:	mov	r5, r0
   36e7c:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36e80:	mov	r0, r5
   36e84:	add	sp, sp, #8
   36e88:	pop	{r4, r5, r6, lr}
   36e8c:	b	13b94 <g_object_unref@plt>
   36e90:	ldr	r3, [r4, #12]
   36e94:	ldr	r0, [r3, #4]
   36e98:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36e9c:	cmp	r0, #2
   36ea0:	beq	36e90 <g_unichar_xdigit_value@plt+0x2302c>
   36ea4:	cmp	r0, #1
   36ea8:	beq	36fd0 <g_unichar_xdigit_value@plt+0x2316c>
   36eac:	cmp	r0, #10
   36eb0:	beq	36d74 <g_unichar_xdigit_value@plt+0x22f10>
   36eb4:	ldr	r3, [r4, #12]
   36eb8:	ldr	r0, [r3, #4]
   36ebc:	ldr	r6, [r3]
   36ec0:	bl	35a38 <g_unichar_xdigit_value@plt+0x21bd4>
   36ec4:	ldr	r3, [r4, #12]
   36ec8:	mov	r1, #6
   36ecc:	mov	r5, r0
   36ed0:	mov	r2, r0
   36ed4:	mov	r0, r6
   36ed8:	b	36c64 <g_unichar_xdigit_value@plt+0x22e00>
   36edc:	mov	r0, r4
   36ee0:	bl	36778 <g_unichar_xdigit_value@plt+0x22914>
   36ee4:	mov	r5, r0
   36ee8:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36eec:	mov	r0, r4
   36ef0:	bl	36888 <g_unichar_xdigit_value@plt+0x22a24>
   36ef4:	mov	r5, r0
   36ef8:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36efc:	ldr	r3, [r4, #12]
   36f00:	ldr	r0, [r3, #4]
   36f04:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36f08:	cmp	r0, #6
   36f0c:	beq	36efc <g_unichar_xdigit_value@plt+0x23098>
   36f10:	b	36dbc <g_unichar_xdigit_value@plt+0x22f58>
   36f14:	mov	r1, #35	; 0x23
   36f18:	bl	363f0 <g_unichar_xdigit_value@plt+0x2258c>
   36f1c:	mov	r5, r0
   36f20:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36f24:	mov	r0, r4
   36f28:	bl	365e0 <g_unichar_xdigit_value@plt+0x2277c>
   36f2c:	mov	r5, r0
   36f30:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36f34:	ldr	r1, [pc, #180]	; 36ff0 <g_unichar_xdigit_value@plt+0x2318c>
   36f38:	ldr	r2, [pc, #180]	; 36ff4 <g_unichar_xdigit_value@plt+0x23190>
   36f3c:	add	r1, pc, r1
   36f40:	add	r2, pc, r2
   36f44:	add	r1, r1, #448	; 0x1c0
   36f48:	add	sp, sp, #8
   36f4c:	pop	{r4, r5, r6, lr}
   36f50:	b	13450 <g_return_if_fail_warning@plt>
   36f54:	mov	r0, r4
   36f58:	bl	36664 <g_unichar_xdigit_value@plt+0x22800>
   36f5c:	mov	r5, r0
   36f60:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36f64:	ldr	r3, [r4, #12]
   36f68:	ldr	r0, [r3, #4]
   36f6c:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36f70:	cmp	r0, #2
   36f74:	beq	36f90 <g_unichar_xdigit_value@plt+0x2312c>
   36f78:	cmp	r0, #1
   36f7c:	mov	r0, r4
   36f80:	bne	36d78 <g_unichar_xdigit_value@plt+0x22f14>
   36f84:	bl	36538 <g_unichar_xdigit_value@plt+0x226d4>
   36f88:	mov	r5, r0
   36f8c:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36f90:	ldr	r3, [r4, #12]
   36f94:	ldr	r0, [r3, #4]
   36f98:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36f9c:	cmp	r0, #2
   36fa0:	beq	36f90 <g_unichar_xdigit_value@plt+0x2312c>
   36fa4:	cmp	r0, #1
   36fa8:	beq	36fe0 <g_unichar_xdigit_value@plt+0x2317c>
   36fac:	ldr	r3, [r4, #12]
   36fb0:	cmp	r0, #9
   36fb4:	ldr	r0, [r3, #4]
   36fb8:	bne	36ebc <g_unichar_xdigit_value@plt+0x23058>
   36fbc:	bl	35c10 <g_unichar_xdigit_value@plt+0x21dac>
   36fc0:	cmp	r0, #2
   36fc4:	beq	36e90 <g_unichar_xdigit_value@plt+0x2302c>
   36fc8:	cmp	r0, #1
   36fcc:	bne	36d68 <g_unichar_xdigit_value@plt+0x22f04>
   36fd0:	mov	r0, r4
   36fd4:	bl	36470 <g_unichar_xdigit_value@plt+0x2260c>
   36fd8:	mov	r5, r0
   36fdc:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36fe0:	mov	r0, r4
   36fe4:	bl	36538 <g_unichar_xdigit_value@plt+0x226d4>
   36fe8:	mov	r5, r0
   36fec:	b	36c90 <g_unichar_xdigit_value@plt+0x22e2c>
   36ff0:	andeq	r7, r0, r4, lsr #1
   36ff4:	andeq	r1, r0, r4, lsr #3
   36ff8:	push	{r3, r4, r5, lr}
   36ffc:	subs	r4, r0, #0
   37000:	beq	3706c <g_unichar_xdigit_value@plt+0x23208>
   37004:	ldr	r3, [r4, #12]
   37008:	ldr	r0, [r4, #16]
   3700c:	ldr	r5, [r3, #8]
   37010:	bl	13540 <g_list_length@plt>
   37014:	cmp	r5, r0
   37018:	bcs	37044 <g_unichar_xdigit_value@plt+0x231e0>
   3701c:	ldr	r3, [r4, #12]
   37020:	ldr	r0, [r4, #16]
   37024:	ldr	r1, [r3, #8]
   37028:	add	r2, r1, #1
   3702c:	str	r2, [r3, #8]
   37030:	bl	13cc0 <g_list_nth_data@plt>
   37034:	cmp	r0, #0
   37038:	beq	37064 <g_unichar_xdigit_value@plt+0x23200>
   3703c:	pop	{r3, r4, r5, lr}
   37040:	b	133f0 <g_object_ref@plt>
   37044:	ldr	r4, [r4, #16]
   37048:	mov	r0, r4
   3704c:	bl	13540 <g_list_length@plt>
   37050:	sub	r1, r0, #1
   37054:	mov	r0, r4
   37058:	bl	13cc0 <g_list_nth_data@plt>
   3705c:	cmp	r0, #0
   37060:	bne	3703c <g_unichar_xdigit_value@plt+0x231d8>
   37064:	mov	r0, #0
   37068:	pop	{r3, r4, r5, pc}
   3706c:	ldr	r1, [pc, #24]	; 3708c <g_unichar_xdigit_value@plt+0x23228>
   37070:	ldr	r2, [pc, #24]	; 37090 <g_unichar_xdigit_value@plt+0x2322c>
   37074:	add	r1, pc, r1
   37078:	add	r2, pc, r2
   3707c:	add	r1, r1, #460	; 0x1cc
   37080:	bl	13450 <g_return_if_fail_warning@plt>
   37084:	mov	r0, #0
   37088:	pop	{r3, r4, r5, pc}
   3708c:	andeq	r6, r0, ip, ror #30
   37090:	andeq	r1, r0, ip, rrx
   37094:	subs	r3, r0, #0
   37098:	beq	370b4 <g_unichar_xdigit_value@plt+0x23250>
   3709c:	ldr	r2, [r3, #12]
   370a0:	ldr	r3, [r2, #8]
   370a4:	cmp	r3, #0
   370a8:	subne	r3, r3, #1
   370ac:	strne	r3, [r2, #8]
   370b0:	bx	lr
   370b4:	ldr	r1, [pc, #16]	; 370cc <g_unichar_xdigit_value@plt+0x23268>
   370b8:	ldr	r2, [pc, #16]	; 370d0 <g_unichar_xdigit_value@plt+0x2326c>
   370bc:	add	r1, pc, r1
   370c0:	add	r2, pc, r2
   370c4:	add	r1, r1, #484	; 0x1e4
   370c8:	b	13450 <g_return_if_fail_warning@plt>
   370cc:	andeq	r6, r0, r4, lsr #30
   370d0:	andeq	r1, r0, r4, lsr #32
   370d4:	ldr	r0, [pc, #108]	; 37148 <g_unichar_xdigit_value@plt+0x232e4>
   370d8:	push	{r3, r4, r5, lr}
   370dc:	add	r0, pc, r0
   370e0:	dmb	sy
   370e4:	ldr	r4, [r0, #24]
   370e8:	dmb	sy
   370ec:	cmp	r4, #0
   370f0:	beq	37104 <g_unichar_xdigit_value@plt+0x232a0>
   370f4:	ldr	r3, [pc, #80]	; 3714c <g_unichar_xdigit_value@plt+0x232e8>
   370f8:	add	r3, pc, r3
   370fc:	ldr	r0, [r3, #24]
   37100:	pop	{r3, r4, r5, pc}
   37104:	add	r5, r0, #24
   37108:	mov	r0, r5
   3710c:	bl	138ac <g_once_init_enter@plt>
   37110:	cmp	r0, #0
   37114:	beq	370f4 <g_unichar_xdigit_value@plt+0x23290>
   37118:	ldr	r2, [pc, #48]	; 37150 <g_unichar_xdigit_value@plt+0x232ec>
   3711c:	mov	r3, r4
   37120:	ldr	r1, [pc, #44]	; 37154 <g_unichar_xdigit_value@plt+0x232f0>
   37124:	mov	r0, #80	; 0x50
   37128:	add	r2, pc, r2
   3712c:	add	r1, pc, r1
   37130:	add	r2, r2, #684	; 0x2ac
   37134:	bl	13438 <g_type_register_static@plt>
   37138:	mov	r1, r0
   3713c:	mov	r0, r5
   37140:	bl	13bac <g_once_init_leave@plt>
   37144:	b	370f4 <g_unichar_xdigit_value@plt+0x23290>
   37148:	andeq	sl, r1, r8, lsr r5
   3714c:	andeq	sl, r1, ip, lsl r5
   37150:	ldrdeq	r9, [r1], -r0
   37154:	ldrdeq	r7, [r0], -r8
   37158:	push	{r4, r5, r6, lr}
   3715c:	mov	r5, r1
   37160:	mov	r4, r2
   37164:	mov	r6, r0
   37168:	bl	370d4 <g_unichar_xdigit_value@plt+0x23270>
   3716c:	mov	r1, r6
   37170:	mov	r2, r5
   37174:	mov	r3, r4
   37178:	pop	{r4, r5, r6, lr}
   3717c:	b	36a90 <g_unichar_xdigit_value@plt+0x22c2c>
   37180:	push	{r4, lr}
   37184:	mov	r4, r0
   37188:	bl	370d4 <g_unichar_xdigit_value@plt+0x23270>
   3718c:	mov	r1, r0
   37190:	mov	r0, r4
   37194:	bl	13870 <g_type_instance_get_private@plt>
   37198:	str	r0, [r4, #12]
   3719c:	pop	{r4, pc}
   371a0:	push	{r3, r4, r5, lr}
   371a4:	mov	r5, r0
   371a8:	bl	370d4 <g_unichar_xdigit_value@plt+0x23270>
   371ac:	mov	r1, r0
   371b0:	mov	r0, r5
   371b4:	bl	13510 <g_type_check_instance_cast@plt>
   371b8:	ldr	r3, [r0, #12]
   371bc:	mov	r4, r0
   371c0:	ldr	r0, [r3]
   371c4:	cmp	r0, #0
   371c8:	beq	371dc <g_unichar_xdigit_value@plt+0x23378>
   371cc:	bl	1acfc <g_unichar_xdigit_value@plt+0x6e98>
   371d0:	ldr	r3, [r4, #12]
   371d4:	mov	r2, #0
   371d8:	str	r2, [r3]
   371dc:	ldr	r0, [r3, #4]
   371e0:	cmp	r0, #0
   371e4:	beq	371f8 <g_unichar_xdigit_value@plt+0x23394>
   371e8:	bl	13b94 <g_object_unref@plt>
   371ec:	ldr	r3, [r4, #12]
   371f0:	mov	r2, #0
   371f4:	str	r2, [r3, #4]
   371f8:	ldr	r0, [r4, #16]
   371fc:	cmp	r0, #0
   37200:	beq	37218 <g_unichar_xdigit_value@plt+0x233b4>
   37204:	ldr	r1, [pc, #48]	; 3723c <g_unichar_xdigit_value@plt+0x233d8>
   37208:	add	r1, pc, r1
   3720c:	bl	1396c <g_list_free_full@plt>
   37210:	mov	r3, #0
   37214:	str	r3, [r4, #16]
   37218:	ldr	r3, [pc, #32]	; 37240 <g_unichar_xdigit_value@plt+0x233dc>
   3721c:	mov	r1, #80	; 0x50
   37220:	add	r3, pc, r3
   37224:	ldr	r0, [r3, #8]
   37228:	bl	13db0 <g_type_check_class_cast@plt>
   3722c:	ldr	r3, [r0, #24]
   37230:	mov	r0, r5
   37234:	blx	r3
   37238:	pop	{r3, r4, r5, pc}
   3723c:			; <UNDEFINED> instruction: 0xffffe668
   37240:	strdeq	sl, [r1], -r4
   37244:	cmp	r1, #0
   37248:	beq	37454 <g_unichar_xdigit_value@plt+0x235f0>
   3724c:	eor	ip, r0, r1
   37250:	rsbmi	r1, r1, #0
   37254:	subs	r2, r1, #1
   37258:	beq	37420 <g_unichar_xdigit_value@plt+0x235bc>
   3725c:	movs	r3, r0
   37260:	rsbmi	r3, r0, #0
   37264:	cmp	r3, r1
   37268:	bls	3742c <g_unichar_xdigit_value@plt+0x235c8>
   3726c:	tst	r1, r2
   37270:	beq	3743c <g_unichar_xdigit_value@plt+0x235d8>
   37274:	clz	r2, r3
   37278:	clz	r0, r1
   3727c:	sub	r2, r0, r2
   37280:	rsbs	r2, r2, #31
   37284:	addne	r2, r2, r2, lsl #1
   37288:	mov	r0, #0
   3728c:	addne	pc, pc, r2, lsl #2
   37290:	nop	{0}
   37294:	cmp	r3, r1, lsl #31
   37298:	adc	r0, r0, r0
   3729c:	subcs	r3, r3, r1, lsl #31
   372a0:	cmp	r3, r1, lsl #30
   372a4:	adc	r0, r0, r0
   372a8:	subcs	r3, r3, r1, lsl #30
   372ac:	cmp	r3, r1, lsl #29
   372b0:	adc	r0, r0, r0
   372b4:	subcs	r3, r3, r1, lsl #29
   372b8:	cmp	r3, r1, lsl #28
   372bc:	adc	r0, r0, r0
   372c0:	subcs	r3, r3, r1, lsl #28
   372c4:	cmp	r3, r1, lsl #27
   372c8:	adc	r0, r0, r0
   372cc:	subcs	r3, r3, r1, lsl #27
   372d0:	cmp	r3, r1, lsl #26
   372d4:	adc	r0, r0, r0
   372d8:	subcs	r3, r3, r1, lsl #26
   372dc:	cmp	r3, r1, lsl #25
   372e0:	adc	r0, r0, r0
   372e4:	subcs	r3, r3, r1, lsl #25
   372e8:	cmp	r3, r1, lsl #24
   372ec:	adc	r0, r0, r0
   372f0:	subcs	r3, r3, r1, lsl #24
   372f4:	cmp	r3, r1, lsl #23
   372f8:	adc	r0, r0, r0
   372fc:	subcs	r3, r3, r1, lsl #23
   37300:	cmp	r3, r1, lsl #22
   37304:	adc	r0, r0, r0
   37308:	subcs	r3, r3, r1, lsl #22
   3730c:	cmp	r3, r1, lsl #21
   37310:	adc	r0, r0, r0
   37314:	subcs	r3, r3, r1, lsl #21
   37318:	cmp	r3, r1, lsl #20
   3731c:	adc	r0, r0, r0
   37320:	subcs	r3, r3, r1, lsl #20
   37324:	cmp	r3, r1, lsl #19
   37328:	adc	r0, r0, r0
   3732c:	subcs	r3, r3, r1, lsl #19
   37330:	cmp	r3, r1, lsl #18
   37334:	adc	r0, r0, r0
   37338:	subcs	r3, r3, r1, lsl #18
   3733c:	cmp	r3, r1, lsl #17
   37340:	adc	r0, r0, r0
   37344:	subcs	r3, r3, r1, lsl #17
   37348:	cmp	r3, r1, lsl #16
   3734c:	adc	r0, r0, r0
   37350:	subcs	r3, r3, r1, lsl #16
   37354:	cmp	r3, r1, lsl #15
   37358:	adc	r0, r0, r0
   3735c:	subcs	r3, r3, r1, lsl #15
   37360:	cmp	r3, r1, lsl #14
   37364:	adc	r0, r0, r0
   37368:	subcs	r3, r3, r1, lsl #14
   3736c:	cmp	r3, r1, lsl #13
   37370:	adc	r0, r0, r0
   37374:	subcs	r3, r3, r1, lsl #13
   37378:	cmp	r3, r1, lsl #12
   3737c:	adc	r0, r0, r0
   37380:	subcs	r3, r3, r1, lsl #12
   37384:	cmp	r3, r1, lsl #11
   37388:	adc	r0, r0, r0
   3738c:	subcs	r3, r3, r1, lsl #11
   37390:	cmp	r3, r1, lsl #10
   37394:	adc	r0, r0, r0
   37398:	subcs	r3, r3, r1, lsl #10
   3739c:	cmp	r3, r1, lsl #9
   373a0:	adc	r0, r0, r0
   373a4:	subcs	r3, r3, r1, lsl #9
   373a8:	cmp	r3, r1, lsl #8
   373ac:	adc	r0, r0, r0
   373b0:	subcs	r3, r3, r1, lsl #8
   373b4:	cmp	r3, r1, lsl #7
   373b8:	adc	r0, r0, r0
   373bc:	subcs	r3, r3, r1, lsl #7
   373c0:	cmp	r3, r1, lsl #6
   373c4:	adc	r0, r0, r0
   373c8:	subcs	r3, r3, r1, lsl #6
   373cc:	cmp	r3, r1, lsl #5
   373d0:	adc	r0, r0, r0
   373d4:	subcs	r3, r3, r1, lsl #5
   373d8:	cmp	r3, r1, lsl #4
   373dc:	adc	r0, r0, r0
   373e0:	subcs	r3, r3, r1, lsl #4
   373e4:	cmp	r3, r1, lsl #3
   373e8:	adc	r0, r0, r0
   373ec:	subcs	r3, r3, r1, lsl #3
   373f0:	cmp	r3, r1, lsl #2
   373f4:	adc	r0, r0, r0
   373f8:	subcs	r3, r3, r1, lsl #2
   373fc:	cmp	r3, r1, lsl #1
   37400:	adc	r0, r0, r0
   37404:	subcs	r3, r3, r1, lsl #1
   37408:	cmp	r3, r1
   3740c:	adc	r0, r0, r0
   37410:	subcs	r3, r3, r1
   37414:	cmp	ip, #0
   37418:	rsbmi	r0, r0, #0
   3741c:	bx	lr
   37420:	teq	ip, r0
   37424:	rsbmi	r0, r0, #0
   37428:	bx	lr
   3742c:	movcc	r0, #0
   37430:	asreq	r0, ip, #31
   37434:	orreq	r0, r0, #1
   37438:	bx	lr
   3743c:	clz	r2, r1
   37440:	rsb	r2, r2, #31
   37444:	cmp	ip, #0
   37448:	lsr	r0, r3, r2
   3744c:	rsbmi	r0, r0, #0
   37450:	bx	lr
   37454:	cmp	r0, #0
   37458:	mvngt	r0, #-2147483648	; 0x80000000
   3745c:	movlt	r0, #-2147483648	; 0x80000000
   37460:	b	374c0 <g_unichar_xdigit_value@plt+0x2365c>
   37464:	cmp	r1, #0
   37468:	beq	37454 <g_unichar_xdigit_value@plt+0x235f0>
   3746c:	push	{r0, r1, lr}
   37470:	bl	3724c <g_unichar_xdigit_value@plt+0x233e8>
   37474:	pop	{r1, r2, lr}
   37478:	mul	r3, r2, r0
   3747c:	sub	r1, r1, r3
   37480:	bx	lr
   37484:	cmp	r3, #0
   37488:	cmpeq	r2, #0
   3748c:	bne	374a4 <g_unichar_xdigit_value@plt+0x23640>
   37490:	cmp	r1, #0
   37494:	cmpeq	r0, #0
   37498:	mvnne	r1, #0
   3749c:	mvnne	r0, #0
   374a0:	b	374c0 <g_unichar_xdigit_value@plt+0x2365c>
   374a4:	sub	sp, sp, #8
   374a8:	push	{sp, lr}
   374ac:	bl	3750c <g_unichar_xdigit_value@plt+0x236a8>
   374b0:	ldr	lr, [sp, #4]
   374b4:	add	sp, sp, #8
   374b8:	pop	{r2, r3}
   374bc:	bx	lr
   374c0:	push	{r1, lr}
   374c4:	mov	r0, #8
   374c8:	bl	13a8c <raise@plt>
   374cc:	pop	{r1, pc}
   374d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   374d4:	mov	r8, r2
   374d8:	mov	r6, r0
   374dc:	mov	r7, r1
   374e0:	mov	sl, r3
   374e4:	ldr	r9, [sp, #32]
   374e8:	bl	37548 <g_unichar_xdigit_value@plt+0x236e4>
   374ec:	umull	r4, r5, r8, r0
   374f0:	mul	r8, r8, r1
   374f4:	mla	r2, r0, sl, r8
   374f8:	add	r5, r2, r5
   374fc:	subs	r4, r6, r4
   37500:	sbc	r5, r7, r5
   37504:	strd	r4, [r9]
   37508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3750c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   37510:	mov	r8, r2
   37514:	mov	r6, r0
   37518:	mov	r7, r1
   3751c:	mov	r5, r3
   37520:	ldr	r9, [sp, #32]
   37524:	bl	379d4 <g_unichar_xdigit_value@plt+0x23b70>
   37528:	mul	r3, r0, r5
   3752c:	umull	r4, r5, r0, r8
   37530:	mla	r8, r8, r1, r3
   37534:	add	r5, r8, r5
   37538:	subs	r4, r6, r4
   3753c:	sbc	r5, r7, r5
   37540:	strd	r4, [r9]
   37544:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   37548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3754c:	rsbs	r4, r0, #0
   37550:	rsc	r5, r1, #0
   37554:	cmp	r1, #0
   37558:	mvn	r6, #0
   3755c:	sub	sp, sp, #12
   37560:	movge	r4, r0
   37564:	movge	r5, r1
   37568:	movge	r6, #0
   3756c:	cmp	r3, #0
   37570:	blt	377a8 <g_unichar_xdigit_value@plt+0x23944>
   37574:	cmp	r3, #0
   37578:	mov	sl, r4
   3757c:	mov	ip, r5
   37580:	mov	r0, r2
   37584:	mov	r1, r3
   37588:	mov	r8, r2
   3758c:	mov	r7, r4
   37590:	mov	r9, r5
   37594:	bne	3768c <g_unichar_xdigit_value@plt+0x23828>
   37598:	cmp	r2, r5
   3759c:	bls	376c8 <g_unichar_xdigit_value@plt+0x23864>
   375a0:	clz	r3, r2
   375a4:	cmp	r3, #0
   375a8:	rsbne	r2, r3, #32
   375ac:	lslne	r8, r0, r3
   375b0:	lsrne	r2, r4, r2
   375b4:	lslne	r7, r4, r3
   375b8:	orrne	r9, r2, r5, lsl r3
   375bc:	lsr	r4, r8, #16
   375c0:	uxth	sl, r8
   375c4:	mov	r1, r4
   375c8:	mov	r0, r9
   375cc:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   375d0:	mov	r1, r4
   375d4:	mov	fp, r0
   375d8:	mov	r0, r9
   375dc:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   375e0:	mul	r0, sl, fp
   375e4:	lsr	r2, r7, #16
   375e8:	orr	r1, r2, r1, lsl #16
   375ec:	cmp	r0, r1
   375f0:	bls	37614 <g_unichar_xdigit_value@plt+0x237b0>
   375f4:	adds	r1, r1, r8
   375f8:	sub	r3, fp, #1
   375fc:	bcs	37610 <g_unichar_xdigit_value@plt+0x237ac>
   37600:	cmp	r0, r1
   37604:	subhi	fp, fp, #2
   37608:	addhi	r1, r1, r8
   3760c:	bhi	37614 <g_unichar_xdigit_value@plt+0x237b0>
   37610:	mov	fp, r3
   37614:	rsb	r9, r0, r1
   37618:	mov	r1, r4
   3761c:	uxth	r7, r7
   37620:	mov	r0, r9
   37624:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37628:	mov	r1, r4
   3762c:	mov	r5, r0
   37630:	mov	r0, r9
   37634:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37638:	mul	sl, sl, r5
   3763c:	orr	r1, r7, r1, lsl #16
   37640:	cmp	sl, r1
   37644:	bls	37664 <g_unichar_xdigit_value@plt+0x23800>
   37648:	adds	r8, r1, r8
   3764c:	sub	r3, r5, #1
   37650:	bcs	37660 <g_unichar_xdigit_value@plt+0x237fc>
   37654:	cmp	sl, r8
   37658:	subhi	r5, r5, #2
   3765c:	bhi	37664 <g_unichar_xdigit_value@plt+0x23800>
   37660:	mov	r5, r3
   37664:	orr	r3, r5, fp, lsl #16
   37668:	mov	r4, #0
   3766c:	cmp	r6, #0
   37670:	mov	r0, r3
   37674:	mov	r1, r4
   37678:	beq	37684 <g_unichar_xdigit_value@plt+0x23820>
   3767c:	rsbs	r0, r0, #0
   37680:	rsc	r1, r1, #0
   37684:	add	sp, sp, #12
   37688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3768c:	cmp	r3, r5
   37690:	movhi	r4, #0
   37694:	movhi	r3, r4
   37698:	bhi	3766c <g_unichar_xdigit_value@plt+0x23808>
   3769c:	clz	r5, r1
   376a0:	cmp	r5, #0
   376a4:	bne	37894 <g_unichar_xdigit_value@plt+0x23a30>
   376a8:	cmp	r1, ip
   376ac:	cmpcs	r2, sl
   376b0:	movhi	r4, #0
   376b4:	movls	r4, #1
   376b8:	movls	r3, #1
   376bc:	movls	r4, r5
   376c0:	movhi	r3, r4
   376c4:	b	3766c <g_unichar_xdigit_value@plt+0x23808>
   376c8:	cmp	r2, #0
   376cc:	bne	376e0 <g_unichar_xdigit_value@plt+0x2387c>
   376d0:	mov	r1, r2
   376d4:	mov	r0, #1
   376d8:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   376dc:	mov	r8, r0
   376e0:	clz	r3, r8
   376e4:	cmp	r3, #0
   376e8:	bne	377b8 <g_unichar_xdigit_value@plt+0x23954>
   376ec:	rsb	r9, r8, r9
   376f0:	lsr	r5, r8, #16
   376f4:	uxth	sl, r8
   376f8:	mov	r4, #1
   376fc:	mov	r1, r5
   37700:	mov	r0, r9
   37704:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37708:	mov	r1, r5
   3770c:	mov	fp, r0
   37710:	mov	r0, r9
   37714:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37718:	mul	r0, sl, fp
   3771c:	lsr	r2, r7, #16
   37720:	orr	r1, r2, r1, lsl #16
   37724:	cmp	r0, r1
   37728:	bls	37748 <g_unichar_xdigit_value@plt+0x238e4>
   3772c:	adds	r1, r1, r8
   37730:	sub	r3, fp, #1
   37734:	bcs	379b4 <g_unichar_xdigit_value@plt+0x23b50>
   37738:	cmp	r0, r1
   3773c:	subhi	fp, fp, #2
   37740:	addhi	r1, r1, r8
   37744:	bls	379b4 <g_unichar_xdigit_value@plt+0x23b50>
   37748:	rsb	r2, r0, r1
   3774c:	mov	r1, r5
   37750:	str	r2, [sp]
   37754:	uxth	r7, r7
   37758:	mov	r0, r2
   3775c:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37760:	ldr	r2, [sp]
   37764:	mov	r1, r5
   37768:	mov	r9, r0
   3776c:	mov	r0, r2
   37770:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37774:	mul	sl, sl, r9
   37778:	orr	r1, r7, r1, lsl #16
   3777c:	cmp	sl, r1
   37780:	bls	377a0 <g_unichar_xdigit_value@plt+0x2393c>
   37784:	adds	r8, r1, r8
   37788:	sub	r3, r9, #1
   3778c:	bcs	3779c <g_unichar_xdigit_value@plt+0x23938>
   37790:	cmp	sl, r8
   37794:	subhi	r9, r9, #2
   37798:	bhi	377a0 <g_unichar_xdigit_value@plt+0x2393c>
   3779c:	mov	r9, r3
   377a0:	orr	r3, r9, fp, lsl #16
   377a4:	b	3766c <g_unichar_xdigit_value@plt+0x23808>
   377a8:	mvn	r6, r6
   377ac:	rsbs	r2, r2, #0
   377b0:	rsc	r3, r3, #0
   377b4:	b	37574 <g_unichar_xdigit_value@plt+0x23710>
   377b8:	lsl	r8, r8, r3
   377bc:	rsb	fp, r3, #32
   377c0:	lsr	r4, r9, fp
   377c4:	lsr	fp, r7, fp
   377c8:	lsr	r5, r8, #16
   377cc:	orr	fp, fp, r9, lsl r3
   377d0:	mov	r0, r4
   377d4:	lsl	r7, r7, r3
   377d8:	mov	r1, r5
   377dc:	uxth	sl, r8
   377e0:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   377e4:	mov	r1, r5
   377e8:	mov	r3, r0
   377ec:	mov	r0, r4
   377f0:	str	r3, [sp]
   377f4:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   377f8:	ldr	r3, [sp]
   377fc:	lsr	r2, fp, #16
   37800:	mul	r0, sl, r3
   37804:	orr	r1, r2, r1, lsl #16
   37808:	cmp	r0, r1
   3780c:	bls	3782c <g_unichar_xdigit_value@plt+0x239c8>
   37810:	adds	r1, r1, r8
   37814:	sub	r2, r3, #1
   37818:	bcs	379cc <g_unichar_xdigit_value@plt+0x23b68>
   3781c:	cmp	r0, r1
   37820:	subhi	r3, r3, #2
   37824:	addhi	r1, r1, r8
   37828:	bls	379cc <g_unichar_xdigit_value@plt+0x23b68>
   3782c:	rsb	r9, r0, r1
   37830:	mov	r1, r5
   37834:	str	r3, [sp]
   37838:	uxth	fp, fp
   3783c:	mov	r0, r9
   37840:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37844:	mov	r1, r5
   37848:	mov	r4, r0
   3784c:	mov	r0, r9
   37850:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37854:	mul	r9, sl, r4
   37858:	ldr	r3, [sp]
   3785c:	orr	r1, fp, r1, lsl #16
   37860:	cmp	r9, r1
   37864:	bls	37888 <g_unichar_xdigit_value@plt+0x23a24>
   37868:	adds	r1, r1, r8
   3786c:	sub	r2, r4, #1
   37870:	bcs	37884 <g_unichar_xdigit_value@plt+0x23a20>
   37874:	cmp	r9, r1
   37878:	subhi	r4, r4, #2
   3787c:	addhi	r1, r1, r8
   37880:	bhi	37888 <g_unichar_xdigit_value@plt+0x23a24>
   37884:	mov	r4, r2
   37888:	rsb	r9, r9, r1
   3788c:	orr	r4, r4, r3, lsl #16
   37890:	b	376fc <g_unichar_xdigit_value@plt+0x23898>
   37894:	rsb	sl, r5, #32
   37898:	lsl	r3, r2, r5
   3789c:	lsr	r0, r2, sl
   378a0:	lsr	r2, ip, sl
   378a4:	orr	r4, r0, r1, lsl r5
   378a8:	lsr	sl, r7, sl
   378ac:	mov	r0, r2
   378b0:	orr	sl, sl, ip, lsl r5
   378b4:	lsr	r9, r4, #16
   378b8:	str	r3, [sp, #4]
   378bc:	str	r2, [sp]
   378c0:	uxth	fp, r4
   378c4:	mov	r1, r9
   378c8:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   378cc:	ldr	r2, [sp]
   378d0:	mov	r1, r9
   378d4:	mov	r8, r0
   378d8:	mov	r0, r2
   378dc:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   378e0:	mul	r0, fp, r8
   378e4:	lsr	r2, sl, #16
   378e8:	orr	r1, r2, r1, lsl #16
   378ec:	cmp	r0, r1
   378f0:	bls	37910 <g_unichar_xdigit_value@plt+0x23aac>
   378f4:	adds	r1, r1, r4
   378f8:	sub	r2, r8, #1
   378fc:	bcs	379c4 <g_unichar_xdigit_value@plt+0x23b60>
   37900:	cmp	r0, r1
   37904:	subhi	r8, r8, #2
   37908:	addhi	r1, r1, r4
   3790c:	bls	379c4 <g_unichar_xdigit_value@plt+0x23b60>
   37910:	rsb	ip, r0, r1
   37914:	mov	r1, r9
   37918:	str	ip, [sp]
   3791c:	mov	r0, ip
   37920:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37924:	ldr	ip, [sp]
   37928:	mov	r1, r9
   3792c:	mov	r2, r0
   37930:	mov	r0, ip
   37934:	str	r2, [sp]
   37938:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   3793c:	ldr	r2, [sp]
   37940:	uxth	ip, sl
   37944:	mul	fp, fp, r2
   37948:	orr	ip, ip, r1, lsl #16
   3794c:	cmp	fp, ip
   37950:	bls	37970 <g_unichar_xdigit_value@plt+0x23b0c>
   37954:	adds	ip, ip, r4
   37958:	sub	r1, r2, #1
   3795c:	bcs	379bc <g_unichar_xdigit_value@plt+0x23b58>
   37960:	cmp	fp, ip
   37964:	subhi	r2, r2, #2
   37968:	addhi	ip, ip, r4
   3796c:	bls	379bc <g_unichar_xdigit_value@plt+0x23b58>
   37970:	ldr	r0, [sp, #4]
   37974:	orr	r1, r2, r8, lsl #16
   37978:	rsb	fp, fp, ip
   3797c:	umull	r2, r3, r1, r0
   37980:	cmp	fp, r3
   37984:	bcc	379a8 <g_unichar_xdigit_value@plt+0x23b44>
   37988:	movne	r4, #0
   3798c:	moveq	r4, #1
   37990:	cmp	r2, r7, lsl r5
   37994:	movls	r4, #0
   37998:	andhi	r4, r4, #1
   3799c:	cmp	r4, #0
   379a0:	moveq	r3, r1
   379a4:	beq	3766c <g_unichar_xdigit_value@plt+0x23808>
   379a8:	sub	r3, r1, #1
   379ac:	mov	r4, #0
   379b0:	b	3766c <g_unichar_xdigit_value@plt+0x23808>
   379b4:	mov	fp, r3
   379b8:	b	37748 <g_unichar_xdigit_value@plt+0x238e4>
   379bc:	mov	r2, r1
   379c0:	b	37970 <g_unichar_xdigit_value@plt+0x23b0c>
   379c4:	mov	r8, r2
   379c8:	b	37910 <g_unichar_xdigit_value@plt+0x23aac>
   379cc:	mov	r3, r2
   379d0:	b	3782c <g_unichar_xdigit_value@plt+0x239c8>
   379d4:	cmp	r3, #0
   379d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   379dc:	mov	r6, r0
   379e0:	sub	sp, sp, #12
   379e4:	mov	r5, r1
   379e8:	mov	r7, r0
   379ec:	mov	r4, r2
   379f0:	mov	r8, r1
   379f4:	bne	37ad4 <g_unichar_xdigit_value@plt+0x23c70>
   379f8:	cmp	r2, r1
   379fc:	bls	37b10 <g_unichar_xdigit_value@plt+0x23cac>
   37a00:	clz	r3, r2
   37a04:	cmp	r3, #0
   37a08:	rsbne	r8, r3, #32
   37a0c:	lslne	r4, r2, r3
   37a10:	lsrne	r8, r0, r8
   37a14:	lslne	r7, r0, r3
   37a18:	orrne	r8, r8, r1, lsl r3
   37a1c:	lsr	r5, r4, #16
   37a20:	uxth	sl, r4
   37a24:	mov	r1, r5
   37a28:	mov	r0, r8
   37a2c:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37a30:	mov	r1, r5
   37a34:	mov	r9, r0
   37a38:	mov	r0, r8
   37a3c:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37a40:	mul	r0, sl, r9
   37a44:	lsr	r3, r7, #16
   37a48:	orr	r1, r3, r1, lsl #16
   37a4c:	cmp	r0, r1
   37a50:	bls	37a74 <g_unichar_xdigit_value@plt+0x23c10>
   37a54:	adds	r1, r1, r4
   37a58:	sub	r2, r9, #1
   37a5c:	bcs	37a70 <g_unichar_xdigit_value@plt+0x23c0c>
   37a60:	cmp	r0, r1
   37a64:	subhi	r9, r9, #2
   37a68:	addhi	r1, r1, r4
   37a6c:	bhi	37a74 <g_unichar_xdigit_value@plt+0x23c10>
   37a70:	mov	r9, r2
   37a74:	rsb	r8, r0, r1
   37a78:	mov	r1, r5
   37a7c:	uxth	r7, r7
   37a80:	mov	r0, r8
   37a84:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37a88:	mov	r1, r5
   37a8c:	mov	r6, r0
   37a90:	mov	r0, r8
   37a94:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37a98:	mul	sl, sl, r6
   37a9c:	orr	r1, r7, r1, lsl #16
   37aa0:	cmp	sl, r1
   37aa4:	bls	37ac0 <g_unichar_xdigit_value@plt+0x23c5c>
   37aa8:	adds	r4, r1, r4
   37aac:	sub	r3, r6, #1
   37ab0:	bcs	37dbc <g_unichar_xdigit_value@plt+0x23f58>
   37ab4:	cmp	sl, r4
   37ab8:	subhi	r6, r6, #2
   37abc:	bls	37dbc <g_unichar_xdigit_value@plt+0x23f58>
   37ac0:	orr	r0, r6, r9, lsl #16
   37ac4:	mov	r6, #0
   37ac8:	mov	r1, r6
   37acc:	add	sp, sp, #12
   37ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37ad4:	cmp	r3, r1
   37ad8:	movhi	r6, #0
   37adc:	movhi	r0, r6
   37ae0:	bhi	37ac8 <g_unichar_xdigit_value@plt+0x23c64>
   37ae4:	clz	r7, r3
   37ae8:	cmp	r7, #0
   37aec:	bne	37bec <g_unichar_xdigit_value@plt+0x23d88>
   37af0:	cmp	r3, r1
   37af4:	cmpcs	r2, r6
   37af8:	movhi	r6, #0
   37afc:	movls	r6, #1
   37b00:	movls	r0, #1
   37b04:	movls	r6, r7
   37b08:	movhi	r0, r6
   37b0c:	b	37ac8 <g_unichar_xdigit_value@plt+0x23c64>
   37b10:	cmp	r2, #0
   37b14:	bne	37b28 <g_unichar_xdigit_value@plt+0x23cc4>
   37b18:	mov	r1, r2
   37b1c:	mov	r0, #1
   37b20:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37b24:	mov	r4, r0
   37b28:	clz	r3, r4
   37b2c:	cmp	r3, #0
   37b30:	bne	37ce8 <g_unichar_xdigit_value@plt+0x23e84>
   37b34:	rsb	r5, r4, r5
   37b38:	lsr	r8, r4, #16
   37b3c:	uxth	sl, r4
   37b40:	mov	r6, #1
   37b44:	mov	r1, r8
   37b48:	mov	r0, r5
   37b4c:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37b50:	mov	r1, r8
   37b54:	mov	r9, r0
   37b58:	mov	r0, r5
   37b5c:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37b60:	mul	r0, sl, r9
   37b64:	lsr	r3, r7, #16
   37b68:	orr	r1, r3, r1, lsl #16
   37b6c:	cmp	r0, r1
   37b70:	bls	37b90 <g_unichar_xdigit_value@plt+0x23d2c>
   37b74:	adds	r1, r1, r4
   37b78:	sub	r2, r9, #1
   37b7c:	bcs	37dc4 <g_unichar_xdigit_value@plt+0x23f60>
   37b80:	cmp	r0, r1
   37b84:	subhi	r9, r9, #2
   37b88:	addhi	r1, r1, r4
   37b8c:	bls	37dc4 <g_unichar_xdigit_value@plt+0x23f60>
   37b90:	rsb	fp, r0, r1
   37b94:	mov	r1, r8
   37b98:	uxth	r7, r7
   37b9c:	mov	r0, fp
   37ba0:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37ba4:	mov	r1, r8
   37ba8:	mov	r5, r0
   37bac:	mov	r0, fp
   37bb0:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37bb4:	mul	sl, sl, r5
   37bb8:	orr	r1, r7, r1, lsl #16
   37bbc:	cmp	sl, r1
   37bc0:	bls	37bdc <g_unichar_xdigit_value@plt+0x23d78>
   37bc4:	adds	r4, r1, r4
   37bc8:	sub	r3, r5, #1
   37bcc:	bcs	37dcc <g_unichar_xdigit_value@plt+0x23f68>
   37bd0:	cmp	sl, r4
   37bd4:	subhi	r5, r5, #2
   37bd8:	bls	37dcc <g_unichar_xdigit_value@plt+0x23f68>
   37bdc:	orr	r0, r5, r9, lsl #16
   37be0:	mov	r1, r6
   37be4:	add	sp, sp, #12
   37be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37bec:	rsb	r1, r7, #32
   37bf0:	lsl	r0, r2, r7
   37bf4:	lsr	r2, r2, r1
   37bf8:	lsr	fp, r5, r1
   37bfc:	orr	r8, r2, r3, lsl r7
   37c00:	lsr	r1, r6, r1
   37c04:	str	r0, [sp, #4]
   37c08:	orr	r5, r1, r5, lsl r7
   37c0c:	lsr	r9, r8, #16
   37c10:	mov	r0, fp
   37c14:	uxth	sl, r8
   37c18:	mov	r1, r9
   37c1c:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37c20:	mov	r1, r9
   37c24:	mov	r4, r0
   37c28:	mov	r0, fp
   37c2c:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37c30:	mul	r0, sl, r4
   37c34:	lsr	ip, r5, #16
   37c38:	orr	r1, ip, r1, lsl #16
   37c3c:	cmp	r0, r1
   37c40:	bls	37c54 <g_unichar_xdigit_value@plt+0x23df0>
   37c44:	adds	r1, r1, r8
   37c48:	sub	r2, r4, #1
   37c4c:	bcc	37de8 <g_unichar_xdigit_value@plt+0x23f84>
   37c50:	mov	r4, r2
   37c54:	rsb	ip, r0, r1
   37c58:	mov	r1, r9
   37c5c:	str	ip, [sp]
   37c60:	uxth	r5, r5
   37c64:	mov	r0, ip
   37c68:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37c6c:	ldr	ip, [sp]
   37c70:	mov	r1, r9
   37c74:	mov	fp, r0
   37c78:	mov	r0, ip
   37c7c:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37c80:	mul	sl, sl, fp
   37c84:	orr	r1, r5, r1, lsl #16
   37c88:	cmp	sl, r1
   37c8c:	bls	37ca0 <g_unichar_xdigit_value@plt+0x23e3c>
   37c90:	adds	r1, r1, r8
   37c94:	sub	r2, fp, #1
   37c98:	bcc	37dd4 <g_unichar_xdigit_value@plt+0x23f70>
   37c9c:	mov	fp, r2
   37ca0:	ldr	r3, [sp, #4]
   37ca4:	orr	r0, fp, r4, lsl #16
   37ca8:	rsb	sl, sl, r1
   37cac:	umull	r4, r5, r0, r3
   37cb0:	cmp	sl, r5
   37cb4:	bcc	37cd4 <g_unichar_xdigit_value@plt+0x23e70>
   37cb8:	movne	r3, #0
   37cbc:	moveq	r3, #1
   37cc0:	cmp	r4, r6, lsl r7
   37cc4:	movls	r6, #0
   37cc8:	andhi	r6, r3, #1
   37ccc:	cmp	r6, #0
   37cd0:	beq	37ac8 <g_unichar_xdigit_value@plt+0x23c64>
   37cd4:	mov	r6, #0
   37cd8:	sub	r0, r0, #1
   37cdc:	mov	r1, r6
   37ce0:	add	sp, sp, #12
   37ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37ce8:	lsl	r4, r4, r3
   37cec:	rsb	r9, r3, #32
   37cf0:	lsr	r2, r5, r9
   37cf4:	lsr	r9, r6, r9
   37cf8:	lsr	r8, r4, #16
   37cfc:	orr	r9, r9, r5, lsl r3
   37d00:	mov	r0, r2
   37d04:	lsl	r7, r6, r3
   37d08:	mov	r1, r8
   37d0c:	str	r2, [sp]
   37d10:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37d14:	ldr	r2, [sp]
   37d18:	mov	r1, r8
   37d1c:	uxth	sl, r4
   37d20:	mov	fp, r0
   37d24:	mov	r0, r2
   37d28:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37d2c:	mul	r0, sl, fp
   37d30:	lsr	r3, r9, #16
   37d34:	orr	r1, r3, r1, lsl #16
   37d38:	cmp	r0, r1
   37d3c:	bls	37d5c <g_unichar_xdigit_value@plt+0x23ef8>
   37d40:	adds	r1, r1, r4
   37d44:	sub	r3, fp, #1
   37d48:	bcs	37dfc <g_unichar_xdigit_value@plt+0x23f98>
   37d4c:	cmp	r0, r1
   37d50:	subhi	fp, fp, #2
   37d54:	addhi	r1, r1, r4
   37d58:	bls	37dfc <g_unichar_xdigit_value@plt+0x23f98>
   37d5c:	rsb	r5, r0, r1
   37d60:	mov	r1, r8
   37d64:	uxth	r9, r9
   37d68:	mov	r0, r5
   37d6c:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   37d70:	mov	r1, r8
   37d74:	mov	r6, r0
   37d78:	mov	r0, r5
   37d7c:	bl	37ff0 <g_unichar_xdigit_value@plt+0x2418c>
   37d80:	mul	r5, sl, r6
   37d84:	orr	r1, r9, r1, lsl #16
   37d88:	cmp	r5, r1
   37d8c:	bls	37db0 <g_unichar_xdigit_value@plt+0x23f4c>
   37d90:	adds	r1, r1, r4
   37d94:	sub	r3, r6, #1
   37d98:	bcs	37dac <g_unichar_xdigit_value@plt+0x23f48>
   37d9c:	cmp	r5, r1
   37da0:	subhi	r6, r6, #2
   37da4:	addhi	r1, r1, r4
   37da8:	bhi	37db0 <g_unichar_xdigit_value@plt+0x23f4c>
   37dac:	mov	r6, r3
   37db0:	rsb	r5, r5, r1
   37db4:	orr	r6, r6, fp, lsl #16
   37db8:	b	37b44 <g_unichar_xdigit_value@plt+0x23ce0>
   37dbc:	mov	r6, r3
   37dc0:	b	37ac0 <g_unichar_xdigit_value@plt+0x23c5c>
   37dc4:	mov	r9, r2
   37dc8:	b	37b90 <g_unichar_xdigit_value@plt+0x23d2c>
   37dcc:	mov	r5, r3
   37dd0:	b	37bdc <g_unichar_xdigit_value@plt+0x23d78>
   37dd4:	cmp	sl, r1
   37dd8:	subhi	fp, fp, #2
   37ddc:	addhi	r1, r1, r8
   37de0:	bhi	37ca0 <g_unichar_xdigit_value@plt+0x23e3c>
   37de4:	b	37c9c <g_unichar_xdigit_value@plt+0x23e38>
   37de8:	cmp	r0, r1
   37dec:	subhi	r4, r4, #2
   37df0:	addhi	r1, r1, r8
   37df4:	bhi	37c54 <g_unichar_xdigit_value@plt+0x23df0>
   37df8:	b	37c50 <g_unichar_xdigit_value@plt+0x23dec>
   37dfc:	mov	fp, r3
   37e00:	b	37d5c <g_unichar_xdigit_value@plt+0x23ef8>
   37e04:	subs	r2, r1, #1
   37e08:	bxeq	lr
   37e0c:	bcc	37fe4 <g_unichar_xdigit_value@plt+0x24180>
   37e10:	cmp	r0, r1
   37e14:	bls	37fc8 <g_unichar_xdigit_value@plt+0x24164>
   37e18:	tst	r1, r2
   37e1c:	beq	37fd4 <g_unichar_xdigit_value@plt+0x24170>
   37e20:	clz	r3, r0
   37e24:	clz	r2, r1
   37e28:	sub	r3, r2, r3
   37e2c:	rsbs	r3, r3, #31
   37e30:	addne	r3, r3, r3, lsl #1
   37e34:	mov	r2, #0
   37e38:	addne	pc, pc, r3, lsl #2
   37e3c:	nop	{0}
   37e40:	cmp	r0, r1, lsl #31
   37e44:	adc	r2, r2, r2
   37e48:	subcs	r0, r0, r1, lsl #31
   37e4c:	cmp	r0, r1, lsl #30
   37e50:	adc	r2, r2, r2
   37e54:	subcs	r0, r0, r1, lsl #30
   37e58:	cmp	r0, r1, lsl #29
   37e5c:	adc	r2, r2, r2
   37e60:	subcs	r0, r0, r1, lsl #29
   37e64:	cmp	r0, r1, lsl #28
   37e68:	adc	r2, r2, r2
   37e6c:	subcs	r0, r0, r1, lsl #28
   37e70:	cmp	r0, r1, lsl #27
   37e74:	adc	r2, r2, r2
   37e78:	subcs	r0, r0, r1, lsl #27
   37e7c:	cmp	r0, r1, lsl #26
   37e80:	adc	r2, r2, r2
   37e84:	subcs	r0, r0, r1, lsl #26
   37e88:	cmp	r0, r1, lsl #25
   37e8c:	adc	r2, r2, r2
   37e90:	subcs	r0, r0, r1, lsl #25
   37e94:	cmp	r0, r1, lsl #24
   37e98:	adc	r2, r2, r2
   37e9c:	subcs	r0, r0, r1, lsl #24
   37ea0:	cmp	r0, r1, lsl #23
   37ea4:	adc	r2, r2, r2
   37ea8:	subcs	r0, r0, r1, lsl #23
   37eac:	cmp	r0, r1, lsl #22
   37eb0:	adc	r2, r2, r2
   37eb4:	subcs	r0, r0, r1, lsl #22
   37eb8:	cmp	r0, r1, lsl #21
   37ebc:	adc	r2, r2, r2
   37ec0:	subcs	r0, r0, r1, lsl #21
   37ec4:	cmp	r0, r1, lsl #20
   37ec8:	adc	r2, r2, r2
   37ecc:	subcs	r0, r0, r1, lsl #20
   37ed0:	cmp	r0, r1, lsl #19
   37ed4:	adc	r2, r2, r2
   37ed8:	subcs	r0, r0, r1, lsl #19
   37edc:	cmp	r0, r1, lsl #18
   37ee0:	adc	r2, r2, r2
   37ee4:	subcs	r0, r0, r1, lsl #18
   37ee8:	cmp	r0, r1, lsl #17
   37eec:	adc	r2, r2, r2
   37ef0:	subcs	r0, r0, r1, lsl #17
   37ef4:	cmp	r0, r1, lsl #16
   37ef8:	adc	r2, r2, r2
   37efc:	subcs	r0, r0, r1, lsl #16
   37f00:	cmp	r0, r1, lsl #15
   37f04:	adc	r2, r2, r2
   37f08:	subcs	r0, r0, r1, lsl #15
   37f0c:	cmp	r0, r1, lsl #14
   37f10:	adc	r2, r2, r2
   37f14:	subcs	r0, r0, r1, lsl #14
   37f18:	cmp	r0, r1, lsl #13
   37f1c:	adc	r2, r2, r2
   37f20:	subcs	r0, r0, r1, lsl #13
   37f24:	cmp	r0, r1, lsl #12
   37f28:	adc	r2, r2, r2
   37f2c:	subcs	r0, r0, r1, lsl #12
   37f30:	cmp	r0, r1, lsl #11
   37f34:	adc	r2, r2, r2
   37f38:	subcs	r0, r0, r1, lsl #11
   37f3c:	cmp	r0, r1, lsl #10
   37f40:	adc	r2, r2, r2
   37f44:	subcs	r0, r0, r1, lsl #10
   37f48:	cmp	r0, r1, lsl #9
   37f4c:	adc	r2, r2, r2
   37f50:	subcs	r0, r0, r1, lsl #9
   37f54:	cmp	r0, r1, lsl #8
   37f58:	adc	r2, r2, r2
   37f5c:	subcs	r0, r0, r1, lsl #8
   37f60:	cmp	r0, r1, lsl #7
   37f64:	adc	r2, r2, r2
   37f68:	subcs	r0, r0, r1, lsl #7
   37f6c:	cmp	r0, r1, lsl #6
   37f70:	adc	r2, r2, r2
   37f74:	subcs	r0, r0, r1, lsl #6
   37f78:	cmp	r0, r1, lsl #5
   37f7c:	adc	r2, r2, r2
   37f80:	subcs	r0, r0, r1, lsl #5
   37f84:	cmp	r0, r1, lsl #4
   37f88:	adc	r2, r2, r2
   37f8c:	subcs	r0, r0, r1, lsl #4
   37f90:	cmp	r0, r1, lsl #3
   37f94:	adc	r2, r2, r2
   37f98:	subcs	r0, r0, r1, lsl #3
   37f9c:	cmp	r0, r1, lsl #2
   37fa0:	adc	r2, r2, r2
   37fa4:	subcs	r0, r0, r1, lsl #2
   37fa8:	cmp	r0, r1, lsl #1
   37fac:	adc	r2, r2, r2
   37fb0:	subcs	r0, r0, r1, lsl #1
   37fb4:	cmp	r0, r1
   37fb8:	adc	r2, r2, r2
   37fbc:	subcs	r0, r0, r1
   37fc0:	mov	r0, r2
   37fc4:	bx	lr
   37fc8:	moveq	r0, #1
   37fcc:	movne	r0, #0
   37fd0:	bx	lr
   37fd4:	clz	r2, r1
   37fd8:	rsb	r2, r2, #31
   37fdc:	lsr	r0, r0, r2
   37fe0:	bx	lr
   37fe4:	cmp	r0, #0
   37fe8:	mvnne	r0, #0
   37fec:	b	374c0 <g_unichar_xdigit_value@plt+0x2365c>
   37ff0:	cmp	r1, #0
   37ff4:	beq	37fe4 <g_unichar_xdigit_value@plt+0x24180>
   37ff8:	push	{r0, r1, lr}
   37ffc:	bl	37e04 <g_unichar_xdigit_value@plt+0x23fa0>
   38000:	pop	{r1, r2, lr}
   38004:	mul	r3, r2, r0
   38008:	sub	r1, r1, r3
   3800c:	bx	lr
   38010:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   38014:	mov	r7, r0
   38018:	ldr	r6, [pc, #76]	; 3806c <g_unichar_xdigit_value@plt+0x24208>
   3801c:	mov	r8, r1
   38020:	ldr	r5, [pc, #72]	; 38070 <g_unichar_xdigit_value@plt+0x2420c>
   38024:	mov	r9, r2
   38028:	add	r6, pc, r6
   3802c:	bl	133c4 <_init@@Base>
   38030:	add	r5, pc, r5
   38034:	rsb	r6, r5, r6
   38038:	asrs	r6, r6, #2
   3803c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   38040:	sub	r5, r5, #4
   38044:	mov	r4, #0
   38048:	add	r4, r4, #1
   3804c:	ldr	r3, [r5, #4]!
   38050:	mov	r0, r7
   38054:	mov	r1, r8
   38058:	mov	r2, r9
   3805c:	blx	r3
   38060:	cmp	r4, r6
   38064:	bne	38048 <g_unichar_xdigit_value@plt+0x241e4>
   38068:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3806c:	andeq	r8, r1, ip, asr r2
   38070:	andeq	r8, r1, r0, asr r2
   38074:	bx	lr

Disassembly of section .fini:

00038078 <_fini@@Base>:
   38078:	push	{r3, lr}
   3807c:	pop	{r3, pc}
