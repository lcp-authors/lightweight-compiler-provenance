
centos-preinstalled/paperconf:     file format elf32-littlearm


Disassembly of section .init:

00010a90 <_init@@Base>:
   10a90:	push	{r3, lr}
   10a94:	bl	10fdc <paperpswidth@plt+0x3dc>
   10a98:	pop	{r3, pc}

Disassembly of section .plt:

00010a9c <paperinfo@plt-0x14>:
   10a9c:	push	{lr}		; (str lr, [sp, #-4]!)
   10aa0:	ldr	lr, [pc, #4]	; 10aac <_init@@Base+0x1c>
   10aa4:	add	lr, pc, lr
   10aa8:	ldr	pc, [lr, #8]!
   10aac:	andeq	r1, r1, r4, asr r5

00010ab0 <paperinfo@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1364]!	; 0x554

00010abc <paperpsheight@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1356]!	; 0x54c

00010ac8 <papernext@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1348]!	; 0x544

00010ad4 <__stack_chk_fail@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1340]!	; 0x53c

00010ae0 <systempapername@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1332]!	; 0x534

00010aec <systempapersizefile@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1324]!	; 0x52c

00010af8 <perror@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1316]!	; 0x524

00010b04 <paperdone@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1308]!	; 0x51c

00010b10 <_IO_putc@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1300]!	; 0x514

00010b1c <puts@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1292]!	; 0x50c

00010b28 <__libc_start_main@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1284]!	; 0x504

00010b34 <__ctype_toupper_loc@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b40 <__gmon_start__@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b4c <__ctype_b_loc@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b58 <exit@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b64 <getopt@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b70 <papername@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b7c <__errno_location@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b88 <__sprintf_chk@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b94 <__printf_chk@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1212]!	; 0x4bc

00010ba0 <__fprintf_chk@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1204]!	; 0x4b4

00010bac <paperinit@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1196]!	; 0x4ac

00010bb8 <setlocale@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1188]!	; 0x4a4

00010bc4 <paperfirst@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1180]!	; 0x49c

00010bd0 <strrchr@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1172]!	; 0x494

00010bdc <defaultpapername@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1164]!	; 0x48c

00010be8 <fputs@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1156]!	; 0x484

00010bf4 <abort@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1148]!	; 0x47c

00010c00 <paperpswidth@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1140]!	; 0x474

Disassembly of section .text:

00010c10 <.text>:
   10c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c14:	movw	r9, #8328	; 0x2088
   10c18:	movt	r9, #2
   10c1c:	sub	sp, sp, #8256	; 0x2040
   10c20:	sub	sp, sp, #20
   10c24:	mov	r5, r1
   10c28:	ldr	r3, [r9]
   10c2c:	add	r2, sp, #8192	; 0x2000
   10c30:	mov	r6, r0
   10c34:	movw	r1, #5276	; 0x149c
   10c38:	mov	r0, #6
   10c3c:	movt	r1, #1
   10c40:	str	r3, [r2, #76]	; 0x4c
   10c44:	bl	10bb8 <setlocale@plt>
   10c48:	ldr	fp, [r5]
   10c4c:	mov	r1, #47	; 0x2f
   10c50:	mov	r4, #0
   10c54:	movw	sl, #8352	; 0x20a0
   10c58:	movt	sl, #2
   10c5c:	mov	r7, r4
   10c60:	mov	r0, fp
   10c64:	mov	r8, r4
   10c68:	bl	10bd0 <strrchr@plt>
   10c6c:	cmp	r0, #0
   10c70:	addne	fp, r0, #1
   10c74:	movw	r2, #5400	; 0x1518
   10c78:	mov	r0, r6
   10c7c:	movt	r2, #1
   10c80:	mov	r1, r5
   10c84:	bl	10b64 <getopt@plt>
   10c88:	cmn	r0, #1
   10c8c:	beq	10e18 <paperpswidth@plt+0x218>
   10c90:	sub	r0, r0, #78	; 0x4e
   10c94:	cmp	r0, #44	; 0x2c
   10c98:	ldrls	pc, [pc, r0, lsl #2]
   10c9c:	b	10e10 <paperpswidth@plt+0x210>
   10ca0:	andeq	r0, r1, r4, lsl #28
   10ca4:	andeq	r0, r1, r0, lsl lr
   10ca8:	andeq	r0, r1, r0, lsl lr
   10cac:	andeq	r0, r1, r0, lsl lr
   10cb0:	andeq	r0, r1, r0, lsl lr
   10cb4:	andeq	r0, r1, r0, lsl lr
   10cb8:	andeq	r0, r1, r0, lsl lr
   10cbc:	andeq	r0, r1, r0, lsl lr
   10cc0:	andeq	r0, r1, r0, lsl lr
   10cc4:	andeq	r0, r1, r0, lsl lr
   10cc8:	andeq	r0, r1, r0, lsl lr
   10ccc:	andeq	r0, r1, r0, lsl lr
   10cd0:	andeq	r0, r1, r0, lsl lr
   10cd4:	andeq	r0, r1, r0, lsl lr
   10cd8:	andeq	r0, r1, r0, lsl lr
   10cdc:	andeq	r0, r1, r0, lsl lr
   10ce0:	andeq	r0, r1, r0, lsl lr
   10ce4:	andeq	r0, r1, r0, lsl lr
   10ce8:	andeq	r0, r1, r0, lsl lr
   10cec:	andeq	r0, r1, r8, ror #27
   10cf0:	andeq	r0, r1, r0, lsl lr
   10cf4:	ldrdeq	r0, [r1], -r8
   10cf8:			; <UNDEFINED> instruction: 0x00010dbc
   10cfc:	andeq	r0, r1, r0, lsl lr
   10d00:	andeq	r0, r1, r0, lsl lr
   10d04:	andeq	r0, r1, r0, lsl lr
   10d08:			; <UNDEFINED> instruction: 0x00010db4
   10d0c:	andeq	r0, r1, r4, lsr #27
   10d10:	andeq	r0, r1, r0, lsl lr
   10d14:	andeq	r0, r1, r0, lsl lr
   10d18:	andeq	r0, r1, r0, lsl lr
   10d1c:	muleq	r1, r4, sp
   10d20:	andeq	r0, r1, r4, lsl #27
   10d24:	andeq	r0, r1, r0, lsl lr
   10d28:	andeq	r0, r1, ip, ror #26
   10d2c:	andeq	r0, r1, r0, lsl lr
   10d30:	andeq	r0, r1, r0, lsl lr
   10d34:	andeq	r0, r1, r4, ror #26
   10d38:	andeq	r0, r1, r0, lsl lr
   10d3c:	andeq	r0, r1, r0, lsl lr
   10d40:	andeq	r0, r1, r0, lsl lr
   10d44:	andeq	r0, r1, ip, asr sp
   10d48:	andeq	r0, r1, r0, lsl lr
   10d4c:	andeq	r0, r1, r0, lsl lr
   10d50:	andeq	r0, r1, r4, asr sp
   10d54:	orr	r4, r4, #128	; 0x80
   10d58:	b	10c74 <paperpswidth@plt+0x74>
   10d5c:	orr	r4, r4, #4
   10d60:	b	10c74 <paperpswidth@plt+0x74>
   10d64:	orr	r4, r4, #12
   10d68:	b	10c74 <paperpswidth@plt+0x74>
   10d6c:	cmp	r7, #0
   10d70:	orrne	r8, r8, #1
   10d74:	cmp	r8, #0
   10d78:	bne	10e10 <paperpswidth@plt+0x210>
   10d7c:	ldr	r7, [sl]
   10d80:	b	10c74 <paperpswidth@plt+0x74>
   10d84:	tst	r4, #2
   10d88:	bne	10e10 <paperpswidth@plt+0x210>
   10d8c:	orr	r4, r4, #1
   10d90:	b	10c74 <paperpswidth@plt+0x74>
   10d94:	tst	r4, #112	; 0x70
   10d98:	bne	10e10 <paperpswidth@plt+0x210>
   10d9c:	orr	r4, r4, #32
   10da0:	b	10c74 <paperpswidth@plt+0x74>
   10da4:	tst	r4, #112	; 0x70
   10da8:	bne	10e10 <paperpswidth@plt+0x210>
   10dac:	orr	r4, r4, #64	; 0x40
   10db0:	b	10c74 <paperpswidth@plt+0x74>
   10db4:	orr	r4, r4, #8
   10db8:	b	10c74 <paperpswidth@plt+0x74>
   10dbc:	cmp	r7, #0
   10dc0:	orrne	r8, r8, #1
   10dc4:	cmp	r8, #0
   10dc8:	bne	10e10 <paperpswidth@plt+0x210>
   10dcc:	bl	10bdc <defaultpapername@plt>
   10dd0:	mov	r7, r0
   10dd4:	b	10c74 <paperpswidth@plt+0x74>
   10dd8:	tst	r4, #112	; 0x70
   10ddc:	bne	10e10 <paperpswidth@plt+0x210>
   10de0:	orr	r4, r4, #16
   10de4:	b	10c74 <paperpswidth@plt+0x74>
   10de8:	cmp	r7, #0
   10dec:	moveq	r7, r8
   10df0:	orrne	r7, r8, #1
   10df4:	cmp	r7, #0
   10df8:	bne	10e10 <paperpswidth@plt+0x210>
   10dfc:	mov	r8, #1
   10e00:	b	10c74 <paperpswidth@plt+0x74>
   10e04:	tst	r4, #1
   10e08:	orreq	r4, r4, #2
   10e0c:	beq	10c74 <paperpswidth@plt+0x74>
   10e10:	mov	r0, fp
   10e14:	bl	113f0 <paperpswidth@plt+0x7f0>
   10e18:	movw	r3, #8336	; 0x2090
   10e1c:	movt	r3, #2
   10e20:	sub	r2, r6, #1
   10e24:	ldr	r3, [r3]
   10e28:	cmp	r2, r3
   10e2c:	bgt	10e10 <paperpswidth@plt+0x210>
   10e30:	cmp	r7, #0
   10e34:	beq	10ec4 <paperpswidth@plt+0x2c4>
   10e38:	cmp	r6, r3
   10e3c:	bne	10e10 <paperpswidth@plt+0x210>
   10e40:	bl	10bac <paperinit@plt>
   10e44:	cmp	r8, #0
   10e48:	bne	10e98 <paperpswidth@plt+0x298>
   10e4c:	mov	r0, r7
   10e50:	bl	10ab0 <paperinfo@plt>
   10e54:	cmp	r0, #0
   10e58:	beq	10f48 <paperpswidth@plt+0x348>
   10e5c:	mov	r1, r4
   10e60:	bl	110d8 <paperpswidth@plt+0x4d8>
   10e64:	bl	10b04 <paperdone@plt>
   10e68:	add	r3, sp, #8192	; 0x2000
   10e6c:	mov	r0, #0
   10e70:	ldr	r2, [r3, #76]	; 0x4c
   10e74:	ldr	r3, [r9]
   10e78:	cmp	r2, r3
   10e7c:	bne	10f44 <paperpswidth@plt+0x344>
   10e80:	add	sp, sp, #8256	; 0x2040
   10e84:	add	sp, sp, #20
   10e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e8c:	bl	10bac <paperinit@plt>
   10e90:	cmp	r8, #0
   10e94:	beq	10ee4 <paperpswidth@plt+0x2e4>
   10e98:	bl	10bc4 <paperfirst@plt>
   10e9c:	subs	r5, r0, #0
   10ea0:	beq	10e64 <paperpswidth@plt+0x264>
   10ea4:	mov	r0, r5
   10ea8:	mov	r1, r4
   10eac:	bl	110d8 <paperpswidth@plt+0x4d8>
   10eb0:	mov	r0, r5
   10eb4:	bl	10ac8 <papernext@plt>
   10eb8:	subs	r5, r0, #0
   10ebc:	bne	10ea4 <paperpswidth@plt+0x2a4>
   10ec0:	b	10e64 <paperpswidth@plt+0x264>
   10ec4:	cmp	r6, r3
   10ec8:	beq	10e8c <paperpswidth@plt+0x28c>
   10ecc:	ldr	r7, [r5, r3, lsl #2]
   10ed0:	bl	10bac <paperinit@plt>
   10ed4:	cmp	r8, #0
   10ed8:	bne	10e98 <paperpswidth@plt+0x298>
   10edc:	cmp	r7, #0
   10ee0:	bne	10e4c <paperpswidth@plt+0x24c>
   10ee4:	bl	10ae0 <systempapername@plt>
   10ee8:	subs	r7, r0, #0
   10eec:	bne	10e4c <paperpswidth@plt+0x24c>
   10ef0:	bl	10bdc <defaultpapername@plt>
   10ef4:	subs	r7, r0, #0
   10ef8:	bne	10e4c <paperpswidth@plt+0x24c>
   10efc:	bl	10aec <systempapersizefile@plt>
   10f00:	mov	r1, #1
   10f04:	mov	r2, #8256	; 0x2040
   10f08:	str	fp, [sp]
   10f0c:	movw	r3, #5416	; 0x1528
   10f10:	movt	r3, #1
   10f14:	str	r0, [sp, #4]
   10f18:	add	r0, sp, #12
   10f1c:	bl	10b88 <__sprintf_chk@plt>
   10f20:	bl	10b7c <__errno_location@plt>
   10f24:	ldr	r3, [r0]
   10f28:	cmp	r3, #0
   10f2c:	beq	10f88 <paperpswidth@plt+0x388>
   10f30:	add	r0, sp, #12
   10f34:	bl	10af8 <perror@plt>
   10f38:	bl	10b04 <paperdone@plt>
   10f3c:	mov	r0, #3
   10f40:	bl	10b58 <exit@plt>
   10f44:	bl	10ad4 <__stack_chk_fail@plt>
   10f48:	movw	r2, #8340	; 0x2094
   10f4c:	movt	r2, #2
   10f50:	str	r7, [sp]
   10f54:	mov	r3, fp
   10f58:	ldr	r0, [r2]
   10f5c:	mov	r1, #1
   10f60:	movw	r2, #5452	; 0x154c
   10f64:	movt	r2, #1
   10f68:	bl	10ba0 <__fprintf_chk@plt>
   10f6c:	tst	r4, #128	; 0x80
   10f70:	beq	10f7c <paperpswidth@plt+0x37c>
   10f74:	mov	r0, r7
   10f78:	bl	10b1c <puts@plt>
   10f7c:	bl	10b04 <paperdone@plt>
   10f80:	mov	r0, #2
   10f84:	bl	10b58 <exit@plt>
   10f88:	movw	r3, #8340	; 0x2094
   10f8c:	movt	r3, #2
   10f90:	add	r0, sp, #12
   10f94:	ldr	r1, [r3]
   10f98:	bl	10be8 <fputs@plt>
   10f9c:	b	10f38 <paperpswidth@plt+0x338>
   10fa0:	mov	fp, #0
   10fa4:	mov	lr, #0
   10fa8:	pop	{r1}		; (ldr r1, [sp], #4)
   10fac:	mov	r2, sp
   10fb0:	push	{r2}		; (str r2, [sp, #-4]!)
   10fb4:	push	{r0}		; (str r0, [sp, #-4]!)
   10fb8:	ldr	ip, [pc, #16]	; 10fd0 <paperpswidth@plt+0x3d0>
   10fbc:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc0:	ldr	r0, [pc, #12]	; 10fd4 <paperpswidth@plt+0x3d4>
   10fc4:	ldr	r3, [pc, #12]	; 10fd8 <paperpswidth@plt+0x3d8>
   10fc8:	bl	10b28 <__libc_start_main@plt>
   10fcc:	bl	10bf4 <abort@plt>
   10fd0:	andeq	r1, r1, r0, lsl #9
   10fd4:	andeq	r0, r1, r0, lsl ip
   10fd8:	andeq	r1, r1, ip, lsl r4
   10fdc:	ldr	r3, [pc, #20]	; 10ff8 <paperpswidth@plt+0x3f8>
   10fe0:	ldr	r2, [pc, #20]	; 10ffc <paperpswidth@plt+0x3fc>
   10fe4:	add	r3, pc, r3
   10fe8:	ldr	r2, [r3, r2]
   10fec:	cmp	r2, #0
   10ff0:	bxeq	lr
   10ff4:	b	10b40 <__gmon_start__@plt>
   10ff8:	andeq	r1, r1, r4, lsl r0
   10ffc:	andeq	r0, r0, r0, lsl #1
   11000:	push	{r3, lr}
   11004:	movw	r0, #8328	; 0x2088
   11008:	ldr	r3, [pc, #36]	; 11034 <paperpswidth@plt+0x434>
   1100c:	movt	r0, #2
   11010:	rsb	r3, r0, r3
   11014:	cmp	r3, #6
   11018:	popls	{r3, pc}
   1101c:	movw	r3, #0
   11020:	movt	r3, #0
   11024:	cmp	r3, #0
   11028:	popeq	{r3, pc}
   1102c:	blx	r3
   11030:	pop	{r3, pc}
   11034:	andeq	r2, r2, fp, lsl #1
   11038:	push	{r3, lr}
   1103c:	movw	r0, #8328	; 0x2088
   11040:	movw	r3, #8328	; 0x2088
   11044:	movt	r0, #2
   11048:	movt	r3, #2
   1104c:	rsb	r3, r0, r3
   11050:	asr	r3, r3, #2
   11054:	add	r3, r3, r3, lsr #31
   11058:	asrs	r1, r3, #1
   1105c:	popeq	{r3, pc}
   11060:	movw	r2, #0
   11064:	movt	r2, #0
   11068:	cmp	r2, #0
   1106c:	popeq	{r3, pc}
   11070:	blx	r2
   11074:	pop	{r3, pc}
   11078:	push	{r4, lr}
   1107c:	movw	r4, #8356	; 0x20a4
   11080:	movt	r4, #2
   11084:	ldrb	r3, [r4]
   11088:	cmp	r3, #0
   1108c:	popne	{r4, pc}
   11090:	bl	11000 <paperpswidth@plt+0x400>
   11094:	mov	r3, #1
   11098:	strb	r3, [r4]
   1109c:	pop	{r4, pc}
   110a0:	movw	r0, #7932	; 0x1efc
   110a4:	movt	r0, #2
   110a8:	push	{r3, lr}
   110ac:	ldr	r3, [r0]
   110b0:	cmp	r3, #0
   110b4:	beq	110cc <paperpswidth@plt+0x4cc>
   110b8:	movw	r3, #0
   110bc:	movt	r3, #0
   110c0:	cmp	r3, #0
   110c4:	beq	110cc <paperpswidth@plt+0x4cc>
   110c8:	blx	r3
   110cc:	pop	{r3, lr}
   110d0:	b	11038 <paperpswidth@plt+0x438>
   110d4:	andeq	r0, r0, r0
   110d8:	push	{r4, r5, r6, r7, r8, lr}
   110dc:	bics	r7, r1, #128	; 0x80
   110e0:	mov	r4, r1
   110e4:	mov	r5, r0
   110e8:	beq	11124 <paperpswidth@plt+0x524>
   110ec:	tst	r1, #1
   110f0:	andne	r6, r1, #4
   110f4:	andne	r7, r1, #8
   110f8:	bne	1112c <paperpswidth@plt+0x52c>
   110fc:	tst	r1, #2
   11100:	bne	111f8 <paperpswidth@plt+0x5f8>
   11104:	tst	r1, #4
   11108:	bne	113c4 <paperpswidth@plt+0x7c4>
   1110c:	tst	r1, #8
   11110:	beq	113d4 <paperpswidth@plt+0x7d4>
   11114:	movw	r6, #8344	; 0x2098
   11118:	and	r8, r1, #16
   1111c:	movt	r6, #2
   11120:	b	111b4 <paperpswidth@plt+0x5b4>
   11124:	mov	r6, r7
   11128:	mov	r4, #1
   1112c:	mov	r0, r5
   11130:	bl	10b70 <papername@plt>
   11134:	movw	r1, #5268	; 0x1494
   11138:	movt	r1, #1
   1113c:	mov	r2, r0
   11140:	mov	r0, #1
   11144:	bl	10b94 <__printf_chk@plt>
   11148:	cmp	r6, #0
   1114c:	beq	113ac <paperpswidth@plt+0x7ac>
   11150:	movw	r6, #8344	; 0x2098
   11154:	movt	r6, #2
   11158:	mov	r0, #32
   1115c:	ldr	r1, [r6]
   11160:	bl	10b10 <_IO_putc@plt>
   11164:	ands	r8, r4, #16
   11168:	mov	r0, r5
   1116c:	bne	112b8 <paperpswidth@plt+0x6b8>
   11170:	tst	r4, #32
   11174:	bne	11338 <paperpswidth@plt+0x738>
   11178:	tst	r4, #64	; 0x40
   1117c:	beq	1131c <paperpswidth@plt+0x71c>
   11180:	bl	10c00 <paperpswidth@plt>
   11184:	vldr	d7, [pc, #596]	; 113e0 <paperpswidth@plt+0x7e0>
   11188:	movw	r1, #5296	; 0x14b0
   1118c:	mov	r0, #1
   11190:	movt	r1, #1
   11194:	vdiv.f64	d0, d0, d7
   11198:	vmov	r2, r3, d0
   1119c:	bl	10b94 <__printf_chk@plt>
   111a0:	cmp	r7, #0
   111a4:	beq	111e8 <paperpswidth@plt+0x5e8>
   111a8:	mov	r0, #32
   111ac:	ldr	r1, [r6]
   111b0:	bl	10b10 <_IO_putc@plt>
   111b4:	cmp	r8, #0
   111b8:	mov	r0, r5
   111bc:	bne	112e4 <paperpswidth@plt+0x6e4>
   111c0:	tst	r4, #32
   111c4:	bne	1136c <paperpswidth@plt+0x76c>
   111c8:	tst	r4, #64	; 0x40
   111cc:	bne	11288 <paperpswidth@plt+0x688>
   111d0:	bl	10abc <paperpsheight@plt>
   111d4:	movw	r1, #5300	; 0x14b4
   111d8:	mov	r0, #1
   111dc:	movt	r1, #1
   111e0:	vmov	r2, r3, d0
   111e4:	bl	10b94 <__printf_chk@plt>
   111e8:	ldr	r1, [r6]
   111ec:	mov	r0, #10
   111f0:	pop	{r4, r5, r6, r7, r8, lr}
   111f4:	b	10b10 <_IO_putc@plt>
   111f8:	bl	10b4c <__ctype_b_loc@plt>
   111fc:	ldr	r6, [r0]
   11200:	mov	r0, r5
   11204:	bl	10b70 <papername@plt>
   11208:	ldrb	r3, [r0]
   1120c:	lsl	r3, r3, #1
   11210:	ldrh	r3, [r6, r3]
   11214:	tst	r3, #512	; 0x200
   11218:	beq	11260 <paperpswidth@plt+0x660>
   1121c:	bl	10b34 <__ctype_toupper_loc@plt>
   11220:	and	r6, r4, #4
   11224:	and	r7, r4, #8
   11228:	ldr	r8, [r0]
   1122c:	mov	r0, r5
   11230:	bl	10b70 <papername@plt>
   11234:	ldrb	r3, [r0]
   11238:	mov	r0, r5
   1123c:	ldr	r8, [r8, r3, lsl #2]
   11240:	bl	10b70 <papername@plt>
   11244:	movw	r1, #5272	; 0x1498
   11248:	movt	r1, #1
   1124c:	mov	r2, r8
   11250:	add	r3, r0, #1
   11254:	mov	r0, #1
   11258:	bl	10b94 <__printf_chk@plt>
   1125c:	b	11148 <paperpswidth@plt+0x548>
   11260:	mov	r0, r5
   11264:	and	r6, r4, #4
   11268:	bl	10b70 <papername@plt>
   1126c:	movw	r1, #5268	; 0x1494
   11270:	movt	r1, #1
   11274:	and	r7, r4, #8
   11278:	mov	r2, r0
   1127c:	mov	r0, #1
   11280:	bl	10b94 <__printf_chk@plt>
   11284:	b	11148 <paperpswidth@plt+0x548>
   11288:	bl	10abc <paperpsheight@plt>
   1128c:	vldr	d7, [pc, #332]	; 113e0 <paperpswidth@plt+0x7e0>
   11290:	movw	r1, #5296	; 0x14b0
   11294:	mov	r0, #1
   11298:	movt	r1, #1
   1129c:	vdiv.f64	d0, d0, d7
   112a0:	vmov	r2, r3, d0
   112a4:	bl	10b94 <__printf_chk@plt>
   112a8:	ldr	r1, [r6]
   112ac:	mov	r0, #10
   112b0:	pop	{r4, r5, r6, r7, r8, lr}
   112b4:	b	10b10 <_IO_putc@plt>
   112b8:	bl	10c00 <paperpswidth@plt>
   112bc:	vldr	d6, [pc, #284]	; 113e0 <paperpswidth@plt+0x7e0>
   112c0:	vldr	d7, [pc, #288]	; 113e8 <paperpswidth@plt+0x7e8>
   112c4:	movw	r1, #5280	; 0x14a0
   112c8:	mov	r0, #1
   112cc:	movt	r1, #1
   112d0:	vdiv.f64	d0, d0, d6
   112d4:	vmul.f64	d5, d0, d7
   112d8:	vmov	r2, r3, d5
   112dc:	bl	10b94 <__printf_chk@plt>
   112e0:	b	111a0 <paperpswidth@plt+0x5a0>
   112e4:	bl	10abc <paperpsheight@plt>
   112e8:	vldr	d6, [pc, #240]	; 113e0 <paperpswidth@plt+0x7e0>
   112ec:	vldr	d7, [pc, #244]	; 113e8 <paperpswidth@plt+0x7e8>
   112f0:	movw	r1, #5280	; 0x14a0
   112f4:	mov	r0, #1
   112f8:	movt	r1, #1
   112fc:	vdiv.f64	d0, d0, d6
   11300:	vmul.f64	d6, d0, d7
   11304:	vmov	r2, r3, d6
   11308:	bl	10b94 <__printf_chk@plt>
   1130c:	ldr	r1, [r6]
   11310:	mov	r0, #10
   11314:	pop	{r4, r5, r6, r7, r8, lr}
   11318:	b	10b10 <_IO_putc@plt>
   1131c:	bl	10c00 <paperpswidth@plt>
   11320:	movw	r1, #5300	; 0x14b4
   11324:	mov	r0, #1
   11328:	movt	r1, #1
   1132c:	vmov	r2, r3, d0
   11330:	bl	10b94 <__printf_chk@plt>
   11334:	b	111a0 <paperpswidth@plt+0x5a0>
   11338:	bl	10c00 <paperpswidth@plt>
   1133c:	vldr	d5, [pc, #156]	; 113e0 <paperpswidth@plt+0x7e0>
   11340:	vmov.f64	d6, #36	; 0x41200000  10.0
   11344:	vldr	d7, [pc, #156]	; 113e8 <paperpswidth@plt+0x7e8>
   11348:	movw	r1, #5288	; 0x14a8
   1134c:	mov	r0, #1
   11350:	movt	r1, #1
   11354:	vdiv.f64	d0, d0, d5
   11358:	vmul.f64	d6, d0, d6
   1135c:	vmul.f64	d5, d6, d7
   11360:	vmov	r2, r3, d5
   11364:	bl	10b94 <__printf_chk@plt>
   11368:	b	111a0 <paperpswidth@plt+0x5a0>
   1136c:	bl	10abc <paperpsheight@plt>
   11370:	vldr	d5, [pc, #104]	; 113e0 <paperpswidth@plt+0x7e0>
   11374:	vmov.f64	d6, #36	; 0x41200000  10.0
   11378:	vldr	d7, [pc, #104]	; 113e8 <paperpswidth@plt+0x7e8>
   1137c:	movw	r1, #5288	; 0x14a8
   11380:	mov	r0, #1
   11384:	movt	r1, #1
   11388:	vdiv.f64	d0, d0, d5
   1138c:	vmul.f64	d6, d0, d6
   11390:	vmul.f64	d5, d6, d7
   11394:	vmov	r2, r3, d5
   11398:	bl	10b94 <__printf_chk@plt>
   1139c:	ldr	r1, [r6]
   113a0:	mov	r0, #10
   113a4:	pop	{r4, r5, r6, r7, r8, lr}
   113a8:	b	10b10 <_IO_putc@plt>
   113ac:	tst	r4, #8
   113b0:	beq	113d4 <paperpswidth@plt+0x7d4>
   113b4:	movw	r6, #8344	; 0x2098
   113b8:	and	r8, r4, #16
   113bc:	movt	r6, #2
   113c0:	b	111a8 <paperpswidth@plt+0x5a8>
   113c4:	movw	r6, #8344	; 0x2098
   113c8:	and	r7, r1, #8
   113cc:	movt	r6, #2
   113d0:	b	11164 <paperpswidth@plt+0x564>
   113d4:	movw	r6, #8344	; 0x2098
   113d8:	movt	r6, #2
   113dc:	b	111e8 <paperpswidth@plt+0x5e8>
   113e0:	andeq	r0, r0, r0
   113e4:	subsmi	r0, r2, r0
   113e8:	ldrhi	fp, [lr, #-2130]	; 0xfffff7ae
   113ec:	andmi	r5, r4, fp, ror #3
   113f0:	movw	r1, #8340	; 0x2094
   113f4:	movt	r1, #2
   113f8:	push	{r3, lr}
   113fc:	movw	r2, #5304	; 0x14b8
   11400:	mov	r3, r0
   11404:	movt	r2, #1
   11408:	ldr	r0, [r1]
   1140c:	mov	r1, #1
   11410:	bl	10ba0 <__fprintf_chk@plt>
   11414:	mov	r0, #1
   11418:	bl	10b58 <exit@plt>
   1141c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11420:	mov	r7, r0
   11424:	ldr	r6, [pc, #76]	; 11478 <paperpswidth@plt+0x878>
   11428:	mov	r8, r1
   1142c:	ldr	r5, [pc, #72]	; 1147c <paperpswidth@plt+0x87c>
   11430:	mov	r9, r2
   11434:	add	r6, pc, r6
   11438:	bl	10a90 <_init@@Base>
   1143c:	add	r5, pc, r5
   11440:	rsb	r6, r5, r6
   11444:	asrs	r6, r6, #2
   11448:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1144c:	sub	r5, r5, #4
   11450:	mov	r4, #0
   11454:	add	r4, r4, #1
   11458:	ldr	r3, [r5, #4]!
   1145c:	mov	r0, r7
   11460:	mov	r1, r8
   11464:	mov	r2, r9
   11468:	blx	r3
   1146c:	cmp	r4, r6
   11470:	bne	11454 <paperpswidth@plt+0x854>
   11474:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11478:			; <UNDEFINED> instruction: 0x00010abc
   1147c:			; <UNDEFINED> instruction: 0x00010ab0
   11480:	bx	lr

Disassembly of section .fini:

00011484 <_fini@@Base>:
   11484:	push	{r3, lr}
   11488:	pop	{r3, pc}
