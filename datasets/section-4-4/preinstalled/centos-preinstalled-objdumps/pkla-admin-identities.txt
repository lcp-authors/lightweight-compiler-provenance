
centos-preinstalled/pkla-admin-identities:     file format elf32-littlearm


Disassembly of section .init:

00001310 <_init@@Base>:
    1310:	push	{r3, lr}
    1314:	bl	1abc <main@@Base+0x41c>
    1318:	pop	{r3, pc}

Disassembly of section .plt:

0000131c <g_param_spec_object@plt-0x14>:
    131c:	push	{lr}		; (str lr, [sp, #-4]!)
    1320:	ldr	lr, [pc, #4]	; 132c <_init@@Base+0x1c>
    1324:	add	lr, pc, lr
    1328:	ldr	pc, [lr, #8]!
    132c:	andeq	r9, r0, r0, ror fp

00001330 <g_param_spec_object@plt>:
    1330:	add	ip, pc, #0, 12
    1334:	add	ip, ip, #36864	; 0x9000
    1338:	ldr	pc, [ip, #2928]!	; 0xb70

0000133c <g_free@plt>:
    133c:	add	ip, pc, #0, 12
    1340:	add	ip, ip, #36864	; 0x9000
    1344:	ldr	pc, [ip, #2920]!	; 0xb68

00001348 <g_key_file_has_key@plt>:
    1348:	add	ip, pc, #0, 12
    134c:	add	ip, ip, #36864	; 0x9000
    1350:	ldr	pc, [ip, #2912]!	; 0xb60

00001354 <abort@plt>:
    1354:	add	ip, pc, #0, 12
    1358:	add	ip, ip, #36864	; 0x9000
    135c:	ldr	pc, [ip, #2904]!	; 0xb58

00001360 <g_key_file_get_string_list@plt>:
    1360:	add	ip, pc, #0, 12
    1364:	add	ip, ip, #36864	; 0x9000
    1368:	ldr	pc, [ip, #2896]!	; 0xb50

0000136c <g_intern_static_string@plt>:
    136c:	add	ip, pc, #0, 12
    1370:	add	ip, ip, #36864	; 0x9000
    1374:	ldr	pc, [ip, #2888]!	; 0xb48

00001378 <__libc_start_main@plt>:
    1378:	add	ip, pc, #0, 12
    137c:	add	ip, ip, #36864	; 0x9000
    1380:	ldr	pc, [ip, #2880]!	; 0xb40

00001384 <g_key_file_get_string@plt>:
    1384:	add	ip, pc, #0, 12
    1388:	add	ip, ip, #36864	; 0x9000
    138c:	ldr	pc, [ip, #2872]!	; 0xb38

00001390 <g_option_context_free@plt>:
    1390:	add	ip, pc, #0, 12
    1394:	add	ip, ip, #36864	; 0x9000
    1398:	ldr	pc, [ip, #2864]!	; 0xb30

0000139c <g_file_get_basename@plt>:
    139c:	add	ip, pc, #0, 12
    13a0:	add	ip, ip, #36864	; 0x9000
    13a4:	ldr	pc, [ip, #2856]!	; 0xb28

000013a8 <__gmon_start__@plt>:
    13a8:	add	ip, pc, #0, 12
    13ac:	add	ip, ip, #36864	; 0x9000
    13b0:	ldr	pc, [ip, #2848]!	; 0xb20

000013b4 <g_object_unref@plt>:
    13b4:	add	ip, pc, #0, 12
    13b8:	add	ip, ip, #36864	; 0x9000
    13bc:	ldr	pc, [ip, #2840]!	; 0xb18

000013c0 <g_signal_emit_by_name@plt>:
    13c0:	add	ip, pc, #0, 12
    13c4:	add	ip, ip, #36864	; 0x9000
    13c8:	ldr	pc, [ip, #2832]!	; 0xb10

000013cc <g_strcmp0@plt>:
    13cc:	add	ip, pc, #0, 12
    13d0:	add	ip, ip, #36864	; 0x9000
    13d4:	ldr	pc, [ip, #2824]!	; 0xb08

000013d8 <g_key_file_new@plt>:
    13d8:	add	ip, pc, #0, 12
    13dc:	add	ip, ip, #36864	; 0x9000
    13e0:	ldr	pc, [ip, #2816]!	; 0xb00

000013e4 <g_strdup@plt>:
    13e4:	add	ip, pc, #0, 12
    13e8:	add	ip, ip, #36864	; 0x9000
    13ec:	ldr	pc, [ip, #2808]!	; 0xaf8

000013f0 <g_list_foreach@plt>:
    13f0:	add	ip, pc, #0, 12
    13f4:	add	ip, ip, #36864	; 0x9000
    13f8:	ldr	pc, [ip, #2800]!	; 0xaf0

000013fc <g_list_free@plt>:
    13fc:	add	ip, pc, #0, 12
    1400:	add	ip, ip, #36864	; 0x9000
    1404:	ldr	pc, [ip, #2792]!	; 0xae8

00001408 <g_key_file_get_double@plt>:
    1408:	add	ip, pc, #0, 12
    140c:	add	ip, ip, #36864	; 0x9000
    1410:	ldr	pc, [ip, #2784]!	; 0xae0

00001414 <g_file_enumerator_next_file@plt>:
    1414:	add	ip, pc, #0, 12
    1418:	add	ip, ip, #36864	; 0x9000
    141c:	ldr	pc, [ip, #2776]!	; 0xad8

00001420 <g_object_class_install_property@plt>:
    1420:	add	ip, pc, #0, 12
    1424:	add	ip, ip, #36864	; 0x9000
    1428:	ldr	pc, [ip, #2768]!	; 0xad0

0000142c <g_file_get_child@plt>:
    142c:	add	ip, pc, #0, 12
    1430:	add	ip, ip, #36864	; 0x9000
    1434:	ldr	pc, [ip, #2760]!	; 0xac8

00001438 <g_option_context_add_main_entries@plt>:
    1438:	add	ip, pc, #0, 12
    143c:	add	ip, ip, #36864	; 0x9000
    1440:	ldr	pc, [ip, #2752]!	; 0xac0

00001444 <g_object_new@plt>:
    1444:	add	ip, pc, #0, 12
    1448:	add	ip, ip, #36864	; 0x9000
    144c:	ldr	pc, [ip, #2744]!	; 0xab8

00001450 <dcgettext@plt>:
    1450:	add	ip, pc, #0, 12
    1454:	add	ip, ip, #36864	; 0x9000
    1458:	ldr	pc, [ip, #2736]!	; 0xab0

0000145c <g_key_file_get_integer@plt>:
    145c:	add	ip, pc, #0, 12
    1460:	add	ip, ip, #36864	; 0x9000
    1464:	ldr	pc, [ip, #2728]!	; 0xaa8

00001468 <g_type_check_class_cast@plt>:
    1468:	add	ip, pc, #0, 12
    146c:	add	ip, ip, #36864	; 0x9000
    1470:	ldr	pc, [ip, #2720]!	; 0xaa0

00001474 <polkit_identity_get_type@plt>:
    1474:	add	ip, pc, #0, 12
    1478:	add	ip, ip, #36864	; 0x9000
    147c:	ldr	pc, [ip, #2712]!	; 0xa98

00001480 <g_option_context_set_summary@plt>:
    1480:	add	ip, pc, #0, 12
    1484:	add	ip, ip, #36864	; 0x9000
    1488:	ldr	pc, [ip, #2704]!	; 0xa90

0000148c <g_file_monitor_directory@plt>:
    148c:	add	ip, pc, #0, 12
    1490:	add	ip, ip, #36864	; 0x9000
    1494:	ldr	pc, [ip, #2696]!	; 0xa88

00001498 <g_type_init@plt>:
    1498:	add	ip, pc, #0, 12
    149c:	add	ip, ip, #36864	; 0x9000
    14a0:	ldr	pc, [ip, #2688]!	; 0xa80

000014a4 <g_option_context_parse@plt>:
    14a4:	add	ip, pc, #0, 12
    14a8:	add	ip, ip, #36864	; 0x9000
    14ac:	ldr	pc, [ip, #2680]!	; 0xa78

000014b0 <g_key_file_get_boolean@plt>:
    14b0:	add	ip, pc, #0, 12
    14b4:	add	ip, ip, #36864	; 0x9000
    14b8:	ldr	pc, [ip, #2672]!	; 0xa70

000014bc <g_error_matches@plt>:
    14bc:	add	ip, pc, #0, 12
    14c0:	add	ip, ip, #36864	; 0x9000
    14c4:	ldr	pc, [ip, #2664]!	; 0xa68

000014c8 <g_signal_new@plt>:
    14c8:	add	ip, pc, #0, 12
    14cc:	add	ip, ip, #36864	; 0x9000
    14d0:	ldr	pc, [ip, #2656]!	; 0xa60

000014d4 <g_file_get_uri@plt>:
    14d4:	add	ip, pc, #0, 12
    14d8:	add	ip, ip, #36864	; 0x9000
    14dc:	ldr	pc, [ip, #2648]!	; 0xa58

000014e0 <g_list_sort@plt>:
    14e0:	add	ip, pc, #0, 12
    14e4:	add	ip, ip, #36864	; 0x9000
    14e8:	ldr	pc, [ip, #2640]!	; 0xa50

000014ec <g_list_append@plt>:
    14ec:	add	ip, pc, #0, 12
    14f0:	add	ip, ip, #36864	; 0x9000
    14f4:	ldr	pc, [ip, #2632]!	; 0xa48

000014f8 <g_get_prgname@plt>:
    14f8:	add	ip, pc, #0, 12
    14fc:	add	ip, ip, #36864	; 0x9000
    1500:	ldr	pc, [ip, #2624]!	; 0xa40

00001504 <g_value_dup_object@plt>:
    1504:	add	ip, pc, #0, 12
    1508:	add	ip, ip, #36864	; 0x9000
    150c:	ldr	pc, [ip, #2616]!	; 0xa38

00001510 <g_str_has_prefix@plt>:
    1510:	add	ip, pc, #0, 12
    1514:	add	ip, ip, #36864	; 0x9000
    1518:	ldr	pc, [ip, #2608]!	; 0xa30

0000151c <g_type_name@plt>:
    151c:	add	ip, pc, #0, 12
    1520:	add	ip, ip, #36864	; 0x9000
    1524:	ldr	pc, [ip, #2600]!	; 0xa28

00001528 <g_signal_connect_data@plt>:
    1528:	add	ip, pc, #0, 12
    152c:	add	ip, ip, #36864	; 0x9000
    1530:	ldr	pc, [ip, #2592]!	; 0xa20

00001534 <g_type_instance_get_private@plt>:
    1534:	add	ip, pc, #0, 12
    1538:	add	ip, ip, #36864	; 0x9000
    153c:	ldr	pc, [ip, #2584]!	; 0xa18

00001540 <g_type_check_instance_cast@plt>:
    1540:	add	ip, pc, #0, 12
    1544:	add	ip, ip, #36864	; 0x9000
    1548:	ldr	pc, [ip, #2576]!	; 0xa10

0000154c <g_key_file_load_from_file@plt>:
    154c:	add	ip, pc, #0, 12
    1550:	add	ip, ip, #36864	; 0x9000
    1554:	ldr	pc, [ip, #2568]!	; 0xa08

00001558 <__stack_chk_fail@plt>:
    1558:	add	ip, pc, #0, 12
    155c:	add	ip, ip, #36864	; 0x9000
    1560:	ldr	pc, [ip, #2560]!	; 0xa00

00001564 <g_file_enumerate_children@plt>:
    1564:	add	ip, pc, #0, 12
    1568:	add	ip, ip, #36864	; 0x9000
    156c:	ldr	pc, [ip, #2552]!	; 0x9f8

00001570 <g_file_info_get_name@plt>:
    1570:	add	ip, pc, #0, 12
    1574:	add	ip, ip, #36864	; 0x9000
    1578:	ldr	pc, [ip, #2544]!	; 0x9f0

0000157c <__fprintf_chk@plt>:
    157c:	add	ip, pc, #0, 12
    1580:	add	ip, ip, #36864	; 0x9000
    1584:	ldr	pc, [ip, #2536]!	; 0x9e8

00001588 <g_type_register_static_simple@plt>:
    1588:	add	ip, pc, #0, 12
    158c:	add	ip, ip, #36864	; 0x9000
    1590:	ldr	pc, [ip, #2528]!	; 0x9e0

00001594 <g_list_reverse@plt>:
    1594:	add	ip, pc, #0, 12
    1598:	add	ip, ip, #36864	; 0x9000
    159c:	ldr	pc, [ip, #2520]!	; 0x9d8

000015a0 <g_file_get_type@plt>:
    15a0:	add	ip, pc, #0, 12
    15a4:	add	ip, ip, #36864	; 0x9000
    15a8:	ldr	pc, [ip, #2512]!	; 0x9d0

000015ac <g_set_error_literal@plt>:
    15ac:	add	ip, pc, #0, 12
    15b0:	add	ip, ip, #36864	; 0x9000
    15b4:	ldr	pc, [ip, #2504]!	; 0x9c8

000015b8 <g_list_prepend@plt>:
    15b8:	add	ip, pc, #0, 12
    15bc:	add	ip, ip, #36864	; 0x9000
    15c0:	ldr	pc, [ip, #2496]!	; 0x9c0

000015c4 <g_value_set_object@plt>:
    15c4:	add	ip, pc, #0, 12
    15c8:	add	ip, ip, #36864	; 0x9000
    15cc:	ldr	pc, [ip, #2488]!	; 0x9b8

000015d0 <puts@plt>:
    15d0:	add	ip, pc, #0, 12
    15d4:	add	ip, ip, #36864	; 0x9000
    15d8:	ldr	pc, [ip, #2480]!	; 0x9b0

000015dc <g_once_init_enter@plt>:
    15dc:	add	ip, pc, #0, 12
    15e0:	add	ip, ip, #36864	; 0x9000
    15e4:	ldr	pc, [ip, #2472]!	; 0x9a8

000015e8 <g_file_get_path@plt>:
    15e8:	add	ip, pc, #0, 12
    15ec:	add	ip, ip, #36864	; 0x9000
    15f0:	ldr	pc, [ip, #2464]!	; 0x9a0

000015f4 <g_option_context_new@plt>:
    15f4:	add	ip, pc, #0, 12
    15f8:	add	ip, ip, #36864	; 0x9000
    15fc:	ldr	pc, [ip, #2456]!	; 0x998

00001600 <g_key_file_free@plt>:
    1600:	add	ip, pc, #0, 12
    1604:	add	ip, ip, #36864	; 0x9000
    1608:	ldr	pc, [ip, #2448]!	; 0x990

0000160c <g_key_file_error_quark@plt>:
    160c:	add	ip, pc, #0, 12
    1610:	add	ip, ip, #36864	; 0x9000
    1614:	ldr	pc, [ip, #2440]!	; 0x988

00001618 <g_error_free@plt>:
    1618:	add	ip, pc, #0, 12
    161c:	add	ip, ip, #36864	; 0x9000
    1620:	ldr	pc, [ip, #2432]!	; 0x980

00001624 <g_strfreev@plt>:
    1624:	add	ip, pc, #0, 12
    1628:	add	ip, ip, #36864	; 0x9000
    162c:	ldr	pc, [ip, #2424]!	; 0x978

00001630 <g_str_has_suffix@plt>:
    1630:	add	ip, pc, #0, 12
    1634:	add	ip, ip, #36864	; 0x9000
    1638:	ldr	pc, [ip, #2416]!	; 0x970

0000163c <g_file_new_for_path@plt>:
    163c:	add	ip, pc, #0, 12
    1640:	add	ip, ip, #36864	; 0x9000
    1644:	ldr	pc, [ip, #2408]!	; 0x968

00001648 <g_once_init_leave@plt>:
    1648:	add	ip, pc, #0, 12
    164c:	add	ip, ip, #36864	; 0x9000
    1650:	ldr	pc, [ip, #2400]!	; 0x960

00001654 <polkit_identity_from_string@plt>:
    1654:	add	ip, pc, #0, 12
    1658:	add	ip, ip, #36864	; 0x9000
    165c:	ldr	pc, [ip, #2392]!	; 0x958

00001660 <g_type_class_add_private@plt>:
    1660:	add	ip, pc, #0, 12
    1664:	add	ip, ip, #36864	; 0x9000
    1668:	ldr	pc, [ip, #2384]!	; 0x950

0000166c <g_type_class_peek_parent@plt>:
    166c:	add	ip, pc, #0, 12
    1670:	add	ip, ip, #36864	; 0x9000
    1674:	ldr	pc, [ip, #2376]!	; 0x948

00001678 <g_log@plt>:
    1678:	add	ip, pc, #0, 12
    167c:	add	ip, ip, #36864	; 0x9000
    1680:	ldr	pc, [ip, #2368]!	; 0x940

00001684 <__cxa_finalize@plt>:
    1684:	add	ip, pc, #0, 12
    1688:	add	ip, ip, #36864	; 0x9000
    168c:	ldr	pc, [ip, #2360]!	; 0x938

00001690 <polkit_identity_to_string@plt>:
    1690:	add	ip, pc, #0, 12
    1694:	add	ip, ip, #36864	; 0x9000
    1698:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

000016a0 <main@@Base>:
    16a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    16a4:	sub	sp, sp, #44	; 0x2c
    16a8:	ldr	r7, [pc, #872]	; 1a18 <main@@Base+0x378>
    16ac:	mov	r5, #0
    16b0:	ldr	r3, [pc, #868]	; 1a1c <main@@Base+0x37c>
    16b4:	add	r7, pc, r7
    16b8:	str	r1, [sp, #16]
    16bc:	str	r0, [sp, #20]
    16c0:	ldr	r3, [r7, r3]
    16c4:	str	r3, [sp, #8]
    16c8:	ldr	r3, [r3]
    16cc:	str	r3, [sp, #36]	; 0x24
    16d0:	bl	1498 <g_type_init@plt>
    16d4:	ldr	r0, [pc, #836]	; 1a20 <main@@Base+0x380>
    16d8:	add	r0, pc, r0
    16dc:	bl	15f4 <g_option_context_new@plt>
    16e0:	ldr	r1, [pc, #828]	; 1a24 <main@@Base+0x384>
    16e4:	add	r1, pc, r1
    16e8:	mov	r4, r0
    16ec:	bl	1480 <g_option_context_set_summary@plt>
    16f0:	ldr	r1, [pc, #816]	; 1a28 <main@@Base+0x388>
    16f4:	mov	r0, r4
    16f8:	ldr	r2, [pc, #812]	; 1a2c <main@@Base+0x38c>
    16fc:	add	r1, pc, r1
    1700:	add	r2, pc, r2
    1704:	bl	1438 <g_option_context_add_main_entries@plt>
    1708:	mov	r0, r4
    170c:	add	r1, sp, #20
    1710:	add	r2, sp, #16
    1714:	add	r3, sp, #28
    1718:	str	r5, [sp, #28]
    171c:	bl	14a4 <g_option_context_parse@plt>
    1720:	cmp	r0, r5
    1724:	beq	18b8 <main@@Base+0x218>
    1728:	mov	r0, r4
    172c:	bl	1390 <g_option_context_free@plt>
    1730:	ldr	r3, [sp, #20]
    1734:	cmp	r3, #1
    1738:	bne	1850 <main@@Base+0x1b0>
    173c:	ldr	r4, [pc, #748]	; 1a30 <main@@Base+0x390>
    1740:	add	r4, pc, r4
    1744:	ldr	r3, [r4]
    1748:	cmp	r3, #0
    174c:	beq	199c <main@@Base+0x2fc>
    1750:	ldr	r4, [pc, #732]	; 1a34 <main@@Base+0x394>
    1754:	mov	r1, #128	; 0x80
    1758:	ldr	r2, [pc, #728]	; 1a38 <main@@Base+0x398>
    175c:	mov	r0, #0
    1760:	add	r4, pc, r4
    1764:	mov	r5, r0
    1768:	add	r2, pc, r2
    176c:	add	r6, sp, #40	; 0x28
    1770:	ldr	r3, [r4]
    1774:	bl	1678 <g_log@plt>
    1778:	ldr	r0, [r4]
    177c:	bl	163c <g_file_new_for_path@plt>
    1780:	mov	r8, r0
    1784:	ldr	r0, [r4]
    1788:	bl	133c <g_free@plt>
    178c:	mov	r0, r8
    1790:	bl	25ec <main@@Base+0xf4c>
    1794:	mov	fp, r0
    1798:	mov	r0, r8
    179c:	bl	13b4 <g_object_unref@plt>
    17a0:	ldr	r1, [pc, #660]	; 1a3c <main@@Base+0x39c>
    17a4:	ldr	r2, [pc, #660]	; 1a40 <main@@Base+0x3a0>
    17a8:	mov	r0, fp
    17ac:	str	r5, [r6, #-8]!
    17b0:	add	r1, pc, r1
    17b4:	mov	r3, r6
    17b8:	add	r2, pc, r2
    17bc:	bl	2750 <main@@Base+0x10b0>
    17c0:	subs	sl, r0, #0
    17c4:	beq	19b0 <main@@Base+0x310>
    17c8:	ldr	r4, [sl]
    17cc:	cmp	r4, r5
    17d0:	beq	1990 <main@@Base+0x2f0>
    17d4:	ldr	r1, [pc, #616]	; 1a44 <main@@Base+0x3a4>
    17d8:	add	r4, sl, #4
    17dc:	mov	r8, r5
    17e0:	mov	r9, sl
    17e4:	add	r1, pc, r1
    17e8:	str	r1, [sp, #12]
    17ec:	b	1810 <main@@Base+0x170>
    17f0:	mov	r0, r5
    17f4:	bl	14ec <g_list_append@plt>
    17f8:	mov	r5, r0
    17fc:	mov	r9, r4
    1800:	add	r4, r4, #4
    1804:	ldr	r2, [r9]
    1808:	cmp	r2, #0
    180c:	beq	1920 <main@@Base+0x280>
    1810:	str	r8, [sp, #32]
    1814:	mov	r1, r6
    1818:	ldr	r0, [r9]
    181c:	bl	1654 <polkit_identity_from_string@plt>
    1820:	subs	r1, r0, #0
    1824:	bne	17f0 <main@@Base+0x150>
    1828:	ldr	ip, [sp, #32]
    182c:	mov	r1, #16
    1830:	ldr	r2, [sp, #12]
    1834:	ldr	ip, [ip, #8]
    1838:	str	ip, [sp]
    183c:	ldr	r3, [r9]
    1840:	bl	1678 <g_log@plt>
    1844:	ldr	r0, [sp, #32]
    1848:	bl	1618 <g_error_free@plt>
    184c:	b	17fc <main@@Base+0x15c>
    1850:	ldr	r3, [pc, #496]	; 1a48 <main@@Base+0x3a8>
    1854:	mov	r2, #5
    1858:	ldr	r1, [pc, #492]	; 1a4c <main@@Base+0x3ac>
    185c:	mov	r0, r5
    1860:	ldr	r3, [r7, r3]
    1864:	add	r1, pc, r1
    1868:	ldr	r4, [r3]
    186c:	bl	1450 <dcgettext@plt>
    1870:	mov	r6, r0
    1874:	bl	14f8 <g_get_prgname@plt>
    1878:	mov	r5, r0
    187c:	bl	14f8 <g_get_prgname@plt>
    1880:	mov	r2, r6
    1884:	mov	r3, r5
    1888:	mov	r1, #1
    188c:	str	r0, [sp]
    1890:	mov	r0, r4
    1894:	bl	157c <__fprintf_chk@plt>
    1898:	mov	r0, #1
    189c:	ldr	r1, [sp, #8]
    18a0:	ldr	r2, [sp, #36]	; 0x24
    18a4:	ldr	r3, [r1]
    18a8:	cmp	r2, r3
    18ac:	bne	1a14 <main@@Base+0x374>
    18b0:	add	sp, sp, #44	; 0x2c
    18b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    18b8:	ldr	r3, [pc, #392]	; 1a48 <main@@Base+0x3a8>
    18bc:	mov	r2, #5
    18c0:	ldr	r1, [pc, #392]	; 1a50 <main@@Base+0x3b0>
    18c4:	ldr	r3, [r7, r3]
    18c8:	add	r1, pc, r1
    18cc:	ldr	r5, [r3]
    18d0:	bl	1450 <dcgettext@plt>
    18d4:	mov	r8, r0
    18d8:	bl	14f8 <g_get_prgname@plt>
    18dc:	ldr	r3, [sp, #28]
    18e0:	ldr	r6, [r3, #8]
    18e4:	mov	r7, r0
    18e8:	bl	14f8 <g_get_prgname@plt>
    18ec:	mov	r2, r8
    18f0:	mov	r3, r7
    18f4:	mov	r1, #1
    18f8:	str	r6, [sp]
    18fc:	str	r0, [sp, #4]
    1900:	mov	r0, r5
    1904:	bl	157c <__fprintf_chk@plt>
    1908:	ldr	r0, [sp, #28]
    190c:	bl	1618 <g_error_free@plt>
    1910:	mov	r0, r4
    1914:	bl	1390 <g_option_context_free@plt>
    1918:	mov	r0, #1
    191c:	b	189c <main@@Base+0x1fc>
    1920:	mov	r0, sl
    1924:	bl	1624 <g_strfreev@plt>
    1928:	cmp	r5, #0
    192c:	beq	1964 <main@@Base+0x2c4>
    1930:	mov	r4, r5
    1934:	bl	1474 <polkit_identity_get_type@plt>
    1938:	mov	r1, r0
    193c:	ldr	r0, [r4]
    1940:	bl	1540 <g_type_check_instance_cast@plt>
    1944:	bl	1690 <polkit_identity_to_string@plt>
    1948:	mov	r6, r0
    194c:	bl	15d0 <puts@plt>
    1950:	mov	r0, r6
    1954:	bl	133c <g_free@plt>
    1958:	ldr	r4, [r4, #4]
    195c:	cmp	r4, #0
    1960:	bne	1934 <main@@Base+0x294>
    1964:	ldr	r3, [pc, #232]	; 1a54 <main@@Base+0x3b4>
    1968:	mov	r2, #0
    196c:	mov	r0, r5
    1970:	ldr	r1, [r7, r3]
    1974:	bl	13f0 <g_list_foreach@plt>
    1978:	mov	r0, r5
    197c:	bl	13fc <g_list_free@plt>
    1980:	mov	r0, fp
    1984:	bl	13b4 <g_object_unref@plt>
    1988:	mov	r0, #0
    198c:	b	189c <main@@Base+0x1fc>
    1990:	bl	1624 <g_strfreev@plt>
    1994:	mov	r5, r4
    1998:	b	1964 <main@@Base+0x2c4>
    199c:	ldr	r0, [pc, #180]	; 1a58 <main@@Base+0x3b8>
    19a0:	add	r0, pc, r0
    19a4:	bl	13e4 <g_strdup@plt>
    19a8:	str	r0, [r4]
    19ac:	b	1750 <main@@Base+0xb0>
    19b0:	ldr	r4, [sp, #32]
    19b4:	bl	160c <g_key_file_error_quark@plt>
    19b8:	mov	r2, #2
    19bc:	mov	r1, r0
    19c0:	mov	r0, r4
    19c4:	bl	14bc <g_error_matches@plt>
    19c8:	ldr	r3, [sp, #32]
    19cc:	cmp	r0, #0
    19d0:	beq	19fc <main@@Base+0x35c>
    19d4:	ldr	r2, [pc, #128]	; 1a5c <main@@Base+0x3bc>
    19d8:	mov	r0, sl
    19dc:	mov	r1, #128	; 0x80
    19e0:	ldr	r3, [r3, #8]
    19e4:	add	r2, pc, r2
    19e8:	bl	1678 <g_log@plt>
    19ec:	ldr	r0, [sp, #32]
    19f0:	mov	r5, #0
    19f4:	bl	1618 <g_error_free@plt>
    19f8:	b	1964 <main@@Base+0x2c4>
    19fc:	ldr	r2, [pc, #92]	; 1a60 <main@@Base+0x3c0>
    1a00:	mov	r1, #16
    1a04:	ldr	r3, [r3, #8]
    1a08:	add	r2, pc, r2
    1a0c:	bl	1678 <g_log@plt>
    1a10:	b	19ec <main@@Base+0x34c>
    1a14:	bl	1558 <__stack_chk_fail@plt>
    1a18:	andeq	r9, r0, r0, ror #15
    1a1c:	andeq	r0, r0, ip, asr #2
    1a20:	andeq	r1, r0, r8, lsl #7
    1a24:	andeq	r1, r0, r8, lsr r1
    1a28:	andeq	r9, r0, ip, lsr #12
    1a2c:	andeq	r1, r0, r0, asr r1
    1a30:	andeq	r9, r0, r0, asr #17
    1a34:	andeq	r9, r0, r0, lsr #17
    1a38:	muleq	r0, r0, r1
    1a3c:	andeq	r1, r0, r4, ror #2
    1a40:	andeq	r1, r0, ip, ror #2
    1a44:	andeq	r1, r0, r8, lsl #3
    1a48:	andeq	r0, r0, r4, asr r1
    1a4c:	andeq	r1, r0, r0, lsr r0
    1a50:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    1a54:	andeq	r0, r0, ip, lsr r1
    1a58:	andeq	r0, r0, r4, lsr pc
    1a5c:	andeq	r0, r0, r0, asr pc
    1a60:	andeq	r0, r0, ip, lsr #30
    1a64:	mov	fp, #0
    1a68:	mov	lr, #0
    1a6c:	pop	{r1}		; (ldr r1, [sp], #4)
    1a70:	mov	r2, sp
    1a74:	push	{r2}		; (str r2, [sp, #-4]!)
    1a78:	push	{r0}		; (str r0, [sp, #-4]!)
    1a7c:	ldr	sl, [pc, #40]	; 1aac <main@@Base+0x40c>
    1a80:	add	r3, pc, #36	; 0x24
    1a84:	add	sl, sl, r3
    1a88:	ldr	ip, [pc, #32]	; 1ab0 <main@@Base+0x410>
    1a8c:	ldr	ip, [sl, ip]
    1a90:	push	{ip}		; (str ip, [sp, #-4]!)
    1a94:	ldr	r3, [pc, #24]	; 1ab4 <main@@Base+0x414>
    1a98:	ldr	r3, [sl, r3]
    1a9c:	ldr	r0, [pc, #20]	; 1ab8 <main@@Base+0x418>
    1aa0:	ldr	r0, [sl, r0]
    1aa4:	bl	1378 <__libc_start_main@plt>
    1aa8:	bl	1354 <abort@plt>
    1aac:	strdeq	r9, [r0], -r0
    1ab0:	andeq	r0, r0, r0, lsr r1
    1ab4:	andeq	r0, r0, r8, asr #2
    1ab8:	andeq	r0, r0, r0, ror #2
    1abc:	ldr	r3, [pc, #20]	; 1ad8 <main@@Base+0x438>
    1ac0:	ldr	r2, [pc, #20]	; 1adc <main@@Base+0x43c>
    1ac4:	add	r3, pc, r3
    1ac8:	ldr	r2, [r3, r2]
    1acc:	cmp	r2, #0
    1ad0:	bxeq	lr
    1ad4:	b	13a8 <__gmon_start__@plt>
    1ad8:	ldrdeq	r9, [r0], -r0
    1adc:	andeq	r0, r0, r4, lsr r1
    1ae0:	ldr	r2, [pc, #60]	; 1b24 <main@@Base+0x484>
    1ae4:	ldr	r0, [pc, #60]	; 1b28 <main@@Base+0x488>
    1ae8:	add	r2, pc, r2
    1aec:	add	r0, pc, r0
    1af0:	add	r2, r2, #3
    1af4:	rsb	r2, r0, r2
    1af8:	push	{r3, lr}
    1afc:	cmp	r2, #6
    1b00:	ldr	r3, [pc, #36]	; 1b2c <main@@Base+0x48c>
    1b04:	add	r3, pc, r3
    1b08:	popls	{r3, pc}
    1b0c:	ldr	r2, [pc, #28]	; 1b30 <main@@Base+0x490>
    1b10:	ldr	r3, [r3, r2]
    1b14:	cmp	r3, #0
    1b18:	popeq	{r3, pc}
    1b1c:	blx	r3
    1b20:	pop	{r3, pc}
    1b24:	andeq	r9, r0, r4, lsl r5
    1b28:	andeq	r9, r0, r0, lsl r5
    1b2c:	muleq	r0, r0, r3
    1b30:	andeq	r0, r0, r0, asr #2
    1b34:	push	{r3, lr}
    1b38:	ldr	r0, [pc, #64]	; 1b80 <main@@Base+0x4e0>
    1b3c:	ldr	r3, [pc, #64]	; 1b84 <main@@Base+0x4e4>
    1b40:	add	r0, pc, r0
    1b44:	ldr	r2, [pc, #60]	; 1b88 <main@@Base+0x4e8>
    1b48:	add	r3, pc, r3
    1b4c:	rsb	r3, r0, r3
    1b50:	add	r2, pc, r2
    1b54:	asr	r3, r3, #2
    1b58:	add	r3, r3, r3, lsr #31
    1b5c:	asrs	r3, r3, #1
    1b60:	popeq	{r3, pc}
    1b64:	ldr	r1, [pc, #32]	; 1b8c <main@@Base+0x4ec>
    1b68:	ldr	r2, [r2, r1]
    1b6c:	cmp	r2, #0
    1b70:	popeq	{r3, pc}
    1b74:	mov	r1, r3
    1b78:	blx	r2
    1b7c:	pop	{r3, pc}
    1b80:			; <UNDEFINED> instruction: 0x000094bc
    1b84:			; <UNDEFINED> instruction: 0x000094b4
    1b88:	andeq	r9, r0, r4, asr #6
    1b8c:	andeq	r0, r0, r4, asr #2
    1b90:	ldr	r2, [pc, #76]	; 1be4 <main@@Base+0x544>
    1b94:	push	{r3, lr}
    1b98:	add	r2, pc, r2
    1b9c:	ldr	r3, [pc, #68]	; 1be8 <main@@Base+0x548>
    1ba0:	ldrb	r2, [r2]
    1ba4:	add	r3, pc, r3
    1ba8:	cmp	r2, #0
    1bac:	popne	{r3, pc}
    1bb0:	ldr	r2, [pc, #52]	; 1bec <main@@Base+0x54c>
    1bb4:	ldr	r3, [r3, r2]
    1bb8:	cmp	r3, #0
    1bbc:	beq	1bcc <main@@Base+0x52c>
    1bc0:	ldr	r0, [pc, #40]	; 1bf0 <main@@Base+0x550>
    1bc4:	add	r0, pc, r0
    1bc8:	bl	1684 <__cxa_finalize@plt>
    1bcc:	bl	1ae0 <main@@Base+0x440>
    1bd0:	ldr	r3, [pc, #28]	; 1bf4 <main@@Base+0x554>
    1bd4:	mov	r2, #1
    1bd8:	add	r3, pc, r3
    1bdc:	strb	r2, [r3]
    1be0:	pop	{r3, pc}
    1be4:	andeq	r9, r0, r4, ror #8
    1be8:	strdeq	r9, [r0], -r0
    1bec:	andeq	r0, r0, ip, asr r1
    1bf0:	muleq	r0, ip, r1
    1bf4:	andeq	r9, r0, r4, lsr #8
    1bf8:	ldr	r0, [pc, #52]	; 1c34 <main@@Base+0x594>
    1bfc:	push	{r3, lr}
    1c00:	add	r0, pc, r0
    1c04:	ldr	r3, [pc, #44]	; 1c38 <main@@Base+0x598>
    1c08:	ldr	r2, [r0]
    1c0c:	add	r3, pc, r3
    1c10:	cmp	r2, #0
    1c14:	beq	1c2c <main@@Base+0x58c>
    1c18:	ldr	r2, [pc, #28]	; 1c3c <main@@Base+0x59c>
    1c1c:	ldr	r3, [r3, r2]
    1c20:	cmp	r3, #0
    1c24:	beq	1c2c <main@@Base+0x58c>
    1c28:	blx	r3
    1c2c:	pop	{r3, lr}
    1c30:	b	1b34 <main@@Base+0x494>
    1c34:	andeq	r9, r0, r4, lsr #2
    1c38:	andeq	r9, r0, r8, lsl #5
    1c3c:	andeq	r0, r0, r8, lsr r1
    1c40:	ldr	r3, [pc, #64]	; 1c88 <main@@Base+0x5e8>
    1c44:	mov	r2, #0
    1c48:	push	{r4, lr}
    1c4c:	mov	r4, r0
    1c50:	ldr	r1, [pc, #52]	; 1c8c <main@@Base+0x5ec>
    1c54:	add	r3, pc, r3
    1c58:	ldr	r0, [r0, #12]
    1c5c:	ldr	r1, [r3, r1]
    1c60:	ldr	r0, [r0, #8]
    1c64:	bl	13f0 <g_list_foreach@plt>
    1c68:	ldr	r3, [r4, #12]
    1c6c:	ldr	r0, [r3, #8]
    1c70:	bl	13fc <g_list_free@plt>
    1c74:	ldr	r3, [r4, #12]
    1c78:	mov	r2, #0
    1c7c:	str	r2, [r3, #8]
    1c80:	str	r2, [r3, #12]
    1c84:	pop	{r4, pc}
    1c88:	andeq	r9, r0, r0, asr #4
    1c8c:	andeq	r0, r0, r8, asr r1
    1c90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1c94:	sub	sp, sp, #36	; 0x24
    1c98:	ldr	fp, [pc, #636]	; 1f1c <main@@Base+0x87c>
    1c9c:	mov	sl, r0
    1ca0:	ldr	r2, [pc, #632]	; 1f20 <main@@Base+0x880>
    1ca4:	add	fp, pc, fp
    1ca8:	ldr	r3, [r0, #12]
    1cac:	ldr	r2, [fp, r2]
    1cb0:	ldr	r6, [r3, #12]
    1cb4:	ldr	r3, [r2]
    1cb8:	cmp	r6, #0
    1cbc:	str	r2, [sp, #12]
    1cc0:	movne	r6, #0
    1cc4:	str	r3, [sp, #28]
    1cc8:	beq	1d04 <main@@Base+0x664>
    1ccc:	ldr	r3, [pc, #592]	; 1f24 <main@@Base+0x884>
    1cd0:	mov	r2, #0
    1cd4:	mov	r0, r6
    1cd8:	ldr	r1, [fp, r3]
    1cdc:	bl	13f0 <g_list_foreach@plt>
    1ce0:	mov	r0, r6
    1ce4:	bl	13fc <g_list_free@plt>
    1ce8:	ldr	r1, [sp, #12]
    1cec:	ldr	r2, [sp, #28]
    1cf0:	ldr	r3, [r1]
    1cf4:	cmp	r2, r3
    1cf8:	bne	1f18 <main@@Base+0x878>
    1cfc:	add	sp, sp, #36	; 0x24
    1d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1d04:	bl	1c40 <main@@Base+0x5a0>
    1d08:	ldr	r0, [sl, #12]
    1d0c:	add	r5, sp, #32
    1d10:	ldr	r1, [pc, #528]	; 1f28 <main@@Base+0x888>
    1d14:	mov	r2, r6
    1d18:	mov	r3, r6
    1d1c:	str	r6, [r5, #-8]!
    1d20:	add	r1, pc, r1
    1d24:	ldr	r0, [r0]
    1d28:	str	r5, [sp]
    1d2c:	bl	1564 <g_file_enumerate_children@plt>
    1d30:	subs	r7, r0, #0
    1d34:	beq	1ecc <main@@Base+0x82c>
    1d38:	ldr	r9, [pc, #492]	; 1f2c <main@@Base+0x88c>
    1d3c:	add	r9, pc, r9
    1d40:	b	1d4c <main@@Base+0x6ac>
    1d44:	mov	r0, r4
    1d48:	bl	13b4 <g_object_unref@plt>
    1d4c:	mov	r0, r7
    1d50:	mov	r1, #0
    1d54:	mov	r2, r5
    1d58:	bl	1414 <g_file_enumerator_next_file@plt>
    1d5c:	subs	r4, r0, #0
    1d60:	beq	1da0 <main@@Base+0x700>
    1d64:	bl	1570 <g_file_info_get_name@plt>
    1d68:	mov	r1, r9
    1d6c:	mov	r8, r0
    1d70:	bl	1630 <g_str_has_suffix@plt>
    1d74:	cmp	r0, #0
    1d78:	beq	1d44 <main@@Base+0x6a4>
    1d7c:	ldr	r3, [sl, #12]
    1d80:	mov	r1, r8
    1d84:	ldr	r0, [r3]
    1d88:	bl	142c <g_file_get_child@plt>
    1d8c:	mov	r1, r0
    1d90:	mov	r0, r6
    1d94:	bl	15b8 <g_list_prepend@plt>
    1d98:	mov	r6, r0
    1d9c:	b	1d44 <main@@Base+0x6a4>
    1da0:	mov	r0, r7
    1da4:	bl	13b4 <g_object_unref@plt>
    1da8:	ldr	r9, [sp, #24]
    1dac:	cmp	r9, #0
    1db0:	beq	1dd8 <main@@Base+0x738>
    1db4:	ldr	r2, [pc, #372]	; 1f30 <main@@Base+0x890>
    1db8:	mov	r0, r4
    1dbc:	ldr	r3, [r9, #8]
    1dc0:	mov	r1, #16
    1dc4:	add	r2, pc, r2
    1dc8:	bl	1678 <g_log@plt>
    1dcc:	ldr	r0, [sp, #24]
    1dd0:	bl	1618 <g_error_free@plt>
    1dd4:	b	1ccc <main@@Base+0x62c>
    1dd8:	ldr	r1, [pc, #340]	; 1f34 <main@@Base+0x894>
    1ddc:	mov	r0, r6
    1de0:	add	r1, pc, r1
    1de4:	bl	14e0 <g_list_sort@plt>
    1de8:	subs	r6, r0, #0
    1dec:	beq	1eac <main@@Base+0x80c>
    1df0:	ldr	ip, [pc, #320]	; 1f38 <main@@Base+0x898>
    1df4:	mov	r4, r6
    1df8:	str	r6, [sp, #16]
    1dfc:	add	ip, pc, ip
    1e00:	str	fp, [sp, #20]
    1e04:	mov	r6, ip
    1e08:	b	1e50 <main@@Base+0x7b0>
    1e0c:	ldr	lr, [sp, #24]
    1e10:	mov	r1, #16
    1e14:	mov	r2, r6
    1e18:	mov	r3, r7
    1e1c:	ldr	lr, [lr, #8]
    1e20:	str	lr, [sp]
    1e24:	bl	1678 <g_log@plt>
    1e28:	ldr	r0, [sp, #24]
    1e2c:	bl	1618 <g_error_free@plt>
    1e30:	mov	r0, r8
    1e34:	str	fp, [sp, #24]
    1e38:	bl	1600 <g_key_file_free@plt>
    1e3c:	mov	r0, r7
    1e40:	bl	133c <g_free@plt>
    1e44:	ldr	r4, [r4, #4]
    1e48:	cmp	r4, #0
    1e4c:	beq	1ea4 <main@@Base+0x804>
    1e50:	bl	15a0 <g_file_get_type@plt>
    1e54:	mov	r1, r0
    1e58:	ldr	r0, [r4]
    1e5c:	bl	1540 <g_type_check_instance_cast@plt>
    1e60:	bl	15e8 <g_file_get_path@plt>
    1e64:	mov	r7, r0
    1e68:	bl	13d8 <g_key_file_new@plt>
    1e6c:	mov	r1, r7
    1e70:	mov	r2, #0
    1e74:	mov	r3, r5
    1e78:	str	r9, [sp, #24]
    1e7c:	mov	r8, r0
    1e80:	bl	154c <g_key_file_load_from_file@plt>
    1e84:	subs	fp, r0, #0
    1e88:	beq	1e0c <main@@Base+0x76c>
    1e8c:	ldr	fp, [sl, #12]
    1e90:	mov	r1, r8
    1e94:	ldr	r0, [fp, #8]
    1e98:	bl	15b8 <g_list_prepend@plt>
    1e9c:	str	r0, [fp, #8]
    1ea0:	b	1e3c <main@@Base+0x79c>
    1ea4:	ldr	r6, [sp, #16]
    1ea8:	ldr	fp, [sp, #20]
    1eac:	ldr	r4, [sl, #12]
    1eb0:	ldr	r0, [r4, #8]
    1eb4:	bl	1594 <g_list_reverse@plt>
    1eb8:	ldr	r3, [sl, #12]
    1ebc:	mov	r2, #1
    1ec0:	str	r0, [r4, #8]
    1ec4:	str	r2, [r3, #12]
    1ec8:	b	1ccc <main@@Base+0x62c>
    1ecc:	ldr	r3, [sl, #12]
    1ed0:	mov	r6, r7
    1ed4:	ldr	r0, [r3]
    1ed8:	bl	14d4 <g_file_get_uri@plt>
    1edc:	ldr	ip, [sp, #24]
    1ee0:	ldr	r2, [pc, #84]	; 1f3c <main@@Base+0x89c>
    1ee4:	mov	r1, #16
    1ee8:	ldr	ip, [ip, #8]
    1eec:	add	r2, pc, r2
    1ef0:	str	ip, [sp]
    1ef4:	mov	r3, r0
    1ef8:	mov	r4, r0
    1efc:	mov	r0, r7
    1f00:	bl	1678 <g_log@plt>
    1f04:	mov	r0, r4
    1f08:	bl	133c <g_free@plt>
    1f0c:	ldr	r0, [sp, #24]
    1f10:	bl	1618 <g_error_free@plt>
    1f14:	b	1ccc <main@@Base+0x62c>
    1f18:	bl	1558 <__stack_chk_fail@plt>
    1f1c:	strdeq	r9, [r0], -r0
    1f20:	andeq	r0, r0, ip, asr #2
    1f24:	andeq	r0, r0, ip, lsr r1
    1f28:	muleq	r0, ip, ip
    1f2c:			; <UNDEFINED> instruction: 0x00000cb4
    1f30:	andeq	r0, r0, r4, lsr ip
    1f34:	andeq	r0, r0, r8, asr r1
    1f38:	andeq	r0, r0, r8, lsl ip
    1f3c:	andeq	r0, r0, r0, ror #21
    1f40:	push	{r3, r4, r5, lr}
    1f44:	mov	r5, r1
    1f48:	bl	14d4 <g_file_get_uri@plt>
    1f4c:	mov	r4, r0
    1f50:	mov	r0, r5
    1f54:	bl	14d4 <g_file_get_uri@plt>
    1f58:	mov	r1, r0
    1f5c:	mov	r0, r4
    1f60:	bl	13cc <g_strcmp0@plt>
    1f64:	rsb	r0, r0, #0
    1f68:	pop	{r3, r4, r5, pc}
    1f6c:	ldr	ip, [r0, #12]
    1f70:	push	{r4, r5, r6, r7, r8, lr}
    1f74:	mov	r7, r1
    1f78:	ldr	r4, [ip, #8]
    1f7c:	mov	r6, r2
    1f80:	mov	r8, r3
    1f84:	cmp	r4, #0
    1f88:	bne	1f9c <main@@Base+0x8fc>
    1f8c:	b	1fcc <main@@Base+0x92c>
    1f90:	ldr	r4, [r4, #4]
    1f94:	cmp	r4, #0
    1f98:	beq	1fcc <main@@Base+0x92c>
    1f9c:	ldr	r5, [r4]
    1fa0:	mov	r1, r7
    1fa4:	mov	r2, r6
    1fa8:	mov	r3, #0
    1fac:	mov	r0, r5
    1fb0:	bl	1348 <g_key_file_has_key@plt>
    1fb4:	cmp	r0, #0
    1fb8:	beq	1f90 <main@@Base+0x8f0>
    1fbc:	cmp	r5, #0
    1fc0:	beq	1fcc <main@@Base+0x92c>
    1fc4:	mov	r0, r5
    1fc8:	pop	{r4, r5, r6, r7, r8, pc}
    1fcc:	bl	160c <g_key_file_error_quark@plt>
    1fd0:	ldr	r3, [pc, #28]	; 1ff4 <main@@Base+0x954>
    1fd4:	mov	r2, #2
    1fd8:	mov	r5, #0
    1fdc:	add	r3, pc, r3
    1fe0:	mov	r1, r0
    1fe4:	mov	r0, r8
    1fe8:	bl	15ac <g_set_error_literal@plt>
    1fec:	mov	r0, r5
    1ff0:	pop	{r4, r5, r6, r7, r8, pc}
    1ff4:	andeq	r0, r0, r8, asr sl
    1ff8:	push	{r4, r5, lr}
    1ffc:	dmb	sy
    2000:	ldr	r4, [pc, #120]	; 2080 <main@@Base+0x9e0>
    2004:	sub	sp, sp, #20
    2008:	add	r4, pc, r4
    200c:	ldr	r5, [r4]
    2010:	cmp	r5, #0
    2014:	beq	2028 <main@@Base+0x988>
    2018:	ldr	r3, [pc, #100]	; 2084 <main@@Base+0x9e4>
    201c:	ldr	r0, [pc, r3]
    2020:	add	sp, sp, #20
    2024:	pop	{r4, r5, pc}
    2028:	mov	r0, r4
    202c:	bl	15dc <g_once_init_enter@plt>
    2030:	cmp	r0, #0
    2034:	beq	2018 <main@@Base+0x978>
    2038:	ldr	r0, [pc, #72]	; 2088 <main@@Base+0x9e8>
    203c:	add	r0, pc, r0
    2040:	bl	136c <g_intern_static_string@plt>
    2044:	ldr	r3, [pc, #64]	; 208c <main@@Base+0x9ec>
    2048:	mov	r2, #16
    204c:	str	r5, [sp, #8]
    2050:	add	r3, pc, r3
    2054:	stm	sp, {r2, r3}
    2058:	ldr	r3, [pc, #48]	; 2090 <main@@Base+0x9f0>
    205c:	mov	r2, #104	; 0x68
    2060:	add	r3, pc, r3
    2064:	mov	r1, r0
    2068:	mov	r0, #80	; 0x50
    206c:	bl	1588 <g_type_register_static_simple@plt>
    2070:	mov	r1, r0
    2074:	mov	r0, r4
    2078:	bl	1648 <g_once_init_leave@plt>
    207c:	b	2018 <main@@Base+0x978>
    2080:	strdeq	r8, [r0], -ip
    2084:	andeq	r8, r0, r8, ror #31
    2088:	andeq	r0, r0, r8, lsr #20
    208c:	andeq	r0, r0, ip, lsr r0
    2090:	andeq	r0, r0, ip, asr #32
    2094:	push	{r4, lr}
    2098:	mov	r4, r0
    209c:	bl	1ff8 <main@@Base+0x958>
    20a0:	mov	r1, r0
    20a4:	mov	r0, r4
    20a8:	bl	1534 <g_type_instance_get_private@plt>
    20ac:	str	r0, [r4, #12]
    20b0:	pop	{r4, pc}
    20b4:	push	{r4, r5, r6, r7, lr}
    20b8:	sub	sp, sp, #28
    20bc:	mov	r5, r0
    20c0:	bl	166c <g_type_class_peek_parent@plt>
    20c4:	ldr	r6, [pc, #224]	; 21ac <main@@Base+0xb0c>
    20c8:	mov	r1, #80	; 0x50
    20cc:	ldr	r7, [pc, #220]	; 21b0 <main@@Base+0xb10>
    20d0:	add	r6, pc, r6
    20d4:	add	r7, pc, r7
    20d8:	str	r0, [r6, #4]
    20dc:	mov	r0, r5
    20e0:	bl	1468 <g_type_check_class_cast@plt>
    20e4:	ldr	lr, [pc, #200]	; 21b4 <main@@Base+0xb14>
    20e8:	ldr	ip, [pc, #200]	; 21b8 <main@@Base+0xb18>
    20ec:	mov	r1, #16
    20f0:	ldr	r2, [pc, #196]	; 21bc <main@@Base+0xb1c>
    20f4:	add	lr, pc, lr
    20f8:	ldr	r3, [pc, #192]	; 21c0 <main@@Base+0xb20>
    20fc:	add	ip, pc, ip
    2100:	add	r2, pc, r2
    2104:	add	r3, pc, r3
    2108:	mov	r4, r0
    210c:	mov	r0, r5
    2110:	str	lr, [r4, #16]
    2114:	str	ip, [r4, #12]
    2118:	str	r2, [r4, #36]	; 0x24
    211c:	str	r3, [r4, #24]
    2120:	bl	1660 <g_type_class_add_private@plt>
    2124:	bl	15a0 <g_file_get_type@plt>
    2128:	mov	r2, #235	; 0xeb
    212c:	ldr	r1, [pc, #144]	; 21c4 <main@@Base+0xb24>
    2130:	str	r2, [sp]
    2134:	ldr	r2, [pc, #140]	; 21c8 <main@@Base+0xb28>
    2138:	add	r1, pc, r1
    213c:	add	r2, pc, r2
    2140:	mov	r3, r0
    2144:	ldr	r0, [pc, #128]	; 21cc <main@@Base+0xb2c>
    2148:	add	r0, pc, r0
    214c:	bl	1330 <g_param_spec_object@plt>
    2150:	mov	r1, #1
    2154:	mov	r2, r0
    2158:	mov	r0, r4
    215c:	bl	1420 <g_object_class_install_property@plt>
    2160:	bl	1ff8 <main@@Base+0x958>
    2164:	ldr	r2, [pc, #100]	; 21d0 <main@@Base+0xb30>
    2168:	mov	r3, #0
    216c:	str	r3, [sp]
    2170:	str	r3, [sp, #4]
    2174:	mov	ip, #4
    2178:	mov	r1, r0
    217c:	ldr	r0, [r7, r2]
    2180:	str	r3, [sp, #16]
    2184:	mov	r2, #2
    2188:	mov	r3, #68	; 0x44
    218c:	str	ip, [sp, #12]
    2190:	str	r0, [sp, #8]
    2194:	ldr	r0, [pc, #56]	; 21d4 <main@@Base+0xb34>
    2198:	add	r0, pc, r0
    219c:	bl	14c8 <g_signal_new@plt>
    21a0:	str	r0, [r6, #8]
    21a4:	add	sp, sp, #28
    21a8:	pop	{r4, r5, r6, r7, pc}
    21ac:	andeq	r8, r0, r4, lsr pc
    21b0:	andeq	r8, r0, r0, asr #27
    21b4:	andeq	r0, r0, r4, asr #8
    21b8:	andeq	r0, r0, ip, lsl #7
    21bc:	andeq	r0, r0, r8, lsl #3
    21c0:	andeq	r0, r0, ip, asr #1
    21c4:	andeq	r0, r0, r4, asr r9
    21c8:	andeq	r0, r0, ip, asr r9
    21cc:	andeq	r0, r0, r8, lsr r9
    21d0:	andeq	r0, r0, r0, asr r1
    21d4:	andeq	r0, r0, r0, lsr r9
    21d8:	push	{r3, r4, r5, r6, r7, lr}
    21dc:	mov	r6, r0
    21e0:	bl	1ff8 <main@@Base+0x958>
    21e4:	ldr	r5, [pc, #152]	; 2284 <main@@Base+0xbe4>
    21e8:	add	r5, pc, r5
    21ec:	mov	r1, r0
    21f0:	mov	r0, r6
    21f4:	bl	1540 <g_type_check_instance_cast@plt>
    21f8:	ldr	r3, [r0, #12]
    21fc:	mov	r4, r0
    2200:	ldr	r0, [r3]
    2204:	cmp	r0, #0
    2208:	beq	2214 <main@@Base+0xb74>
    220c:	bl	13b4 <g_object_unref@plt>
    2210:	ldr	r3, [r4, #12]
    2214:	ldr	r0, [r3, #4]
    2218:	cmp	r0, #0
    221c:	beq	2228 <main@@Base+0xb88>
    2220:	bl	13b4 <g_object_unref@plt>
    2224:	ldr	r3, [r4, #12]
    2228:	ldr	r1, [pc, #88]	; 2288 <main@@Base+0xbe8>
    222c:	mov	r2, #0
    2230:	ldr	r0, [r3, #8]
    2234:	ldr	r7, [pc, #80]	; 228c <main@@Base+0xbec>
    2238:	ldr	r1, [r5, r1]
    223c:	bl	13f0 <g_list_foreach@plt>
    2240:	ldr	r3, [r4, #12]
    2244:	add	r7, pc, r7
    2248:	ldr	r0, [r3, #8]
    224c:	bl	13fc <g_list_free@plt>
    2250:	ldr	r0, [r7, #4]
    2254:	mov	r1, #80	; 0x50
    2258:	bl	1468 <g_type_check_class_cast@plt>
    225c:	ldr	r3, [r0, #24]
    2260:	cmp	r3, #0
    2264:	popeq	{r3, r4, r5, r6, r7, pc}
    2268:	ldr	r0, [r7, #4]
    226c:	mov	r1, #80	; 0x50
    2270:	bl	1468 <g_type_check_class_cast@plt>
    2274:	ldr	r3, [r0, #24]
    2278:	mov	r0, r6
    227c:	blx	r3
    2280:	pop	{r3, r4, r5, r6, r7, pc}
    2284:	andeq	r8, r0, ip, lsr #25
    2288:	andeq	r0, r0, r8, asr r1
    228c:	andeq	r8, r0, r0, asr #27
    2290:	ldr	r3, [pc, #288]	; 23b8 <main@@Base+0xd18>
    2294:	ldr	r2, [pc, #288]	; 23bc <main@@Base+0xd1c>
    2298:	add	r3, pc, r3
    229c:	push	{r4, r5, r6, r7, r8, lr}
    22a0:	sub	sp, sp, #16
    22a4:	ldr	r6, [r3, r2]
    22a8:	mov	r8, r0
    22ac:	mov	r4, #0
    22b0:	ldr	r3, [r6]
    22b4:	str	r3, [sp, #12]
    22b8:	bl	1ff8 <main@@Base+0x958>
    22bc:	mov	r1, r0
    22c0:	mov	r0, r8
    22c4:	bl	1540 <g_type_check_instance_cast@plt>
    22c8:	add	r3, sp, #16
    22cc:	mov	r1, r4
    22d0:	mov	r2, r4
    22d4:	str	r4, [r3, #-8]!
    22d8:	ldr	r7, [r0, #12]
    22dc:	mov	r5, r0
    22e0:	ldr	r0, [r7]
    22e4:	bl	148c <g_file_monitor_directory@plt>
    22e8:	ldr	r3, [r5, #12]
    22ec:	str	r0, [r7, #4]
    22f0:	ldr	r7, [r3, #4]
    22f4:	cmp	r7, r4
    22f8:	beq	2370 <main@@Base+0xcd0>
    22fc:	ldr	r1, [pc, #188]	; 23c0 <main@@Base+0xd20>
    2300:	mov	r0, r7
    2304:	ldr	r2, [pc, #184]	; 23c4 <main@@Base+0xd24>
    2308:	mov	r3, r5
    230c:	str	r4, [sp]
    2310:	add	r1, pc, r1
    2314:	str	r4, [sp, #4]
    2318:	add	r2, pc, r2
    231c:	bl	1528 <g_signal_connect_data@plt>
    2320:	ldr	r4, [pc, #160]	; 23c8 <main@@Base+0xd28>
    2324:	mov	r1, #80	; 0x50
    2328:	add	r4, pc, r4
    232c:	ldr	r0, [r4, #4]
    2330:	bl	1468 <g_type_check_class_cast@plt>
    2334:	ldr	r3, [r0, #36]	; 0x24
    2338:	cmp	r3, #0
    233c:	beq	2358 <main@@Base+0xcb8>
    2340:	ldr	r0, [r4, #4]
    2344:	mov	r1, #80	; 0x50
    2348:	bl	1468 <g_type_check_class_cast@plt>
    234c:	ldr	r3, [r0, #36]	; 0x24
    2350:	mov	r0, r8
    2354:	blx	r3
    2358:	ldr	r2, [sp, #12]
    235c:	ldr	r3, [r6]
    2360:	cmp	r2, r3
    2364:	bne	23b4 <main@@Base+0xd14>
    2368:	add	sp, sp, #16
    236c:	pop	{r4, r5, r6, r7, r8, pc}
    2370:	ldr	r0, [r3]
    2374:	bl	14d4 <g_file_get_uri@plt>
    2378:	ldr	ip, [sp, #8]
    237c:	ldr	r2, [pc, #72]	; 23cc <main@@Base+0xd2c>
    2380:	mov	r1, #16
    2384:	ldr	ip, [ip, #8]
    2388:	add	r2, pc, r2
    238c:	str	ip, [sp]
    2390:	mov	r4, r0
    2394:	mov	r0, r7
    2398:	mov	r3, r4
    239c:	bl	1678 <g_log@plt>
    23a0:	mov	r0, r4
    23a4:	bl	133c <g_free@plt>
    23a8:	ldr	r0, [sp, #8]
    23ac:	bl	1618 <g_error_free@plt>
    23b0:	b	2320 <main@@Base+0xc80>
    23b4:	bl	1558 <__stack_chk_fail@plt>
    23b8:	strdeq	r8, [r0], -ip
    23bc:	andeq	r0, r0, ip, asr #2
    23c0:			; <UNDEFINED> instruction: 0x000007b8
    23c4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    23c8:	ldrdeq	r8, [r0], -ip
    23cc:	andeq	r0, r0, r8, asr #14
    23d0:	push	{r4, r5, r6, lr}
    23d4:	mov	r4, r1
    23d8:	mov	r6, r3
    23dc:	bl	1ff8 <main@@Base+0x958>
    23e0:	ldr	r5, [sp, #16]
    23e4:	mov	r1, r0
    23e8:	mov	r0, r5
    23ec:	bl	1540 <g_type_check_instance_cast@plt>
    23f0:	cmp	r4, #0
    23f4:	mov	r5, r0
    23f8:	popeq	{r4, r5, r6, pc}
    23fc:	mov	r0, r4
    2400:	bl	139c <g_file_get_basename@plt>
    2404:	ldr	r1, [pc, #116]	; 2480 <main@@Base+0xde0>
    2408:	add	r1, pc, r1
    240c:	mov	r4, r0
    2410:	bl	1510 <g_str_has_prefix@plt>
    2414:	cmp	r0, #0
    2418:	beq	2428 <main@@Base+0xd88>
    241c:	mov	r0, r4
    2420:	pop	{r4, r5, r6, lr}
    2424:	b	133c <g_free@plt>
    2428:	ldr	r1, [pc, #84]	; 2484 <main@@Base+0xde4>
    242c:	mov	r0, r4
    2430:	add	r1, pc, r1
    2434:	bl	1510 <g_str_has_prefix@plt>
    2438:	cmp	r0, #0
    243c:	bne	241c <main@@Base+0xd7c>
    2440:	ldr	r1, [pc, #64]	; 2488 <main@@Base+0xde8>
    2444:	mov	r0, r4
    2448:	add	r1, pc, r1
    244c:	bl	1630 <g_str_has_suffix@plt>
    2450:	cmp	r0, #0
    2454:	beq	241c <main@@Base+0xd7c>
    2458:	sub	r6, r6, #1
    245c:	cmp	r6, #2
    2460:	bhi	241c <main@@Base+0xd7c>
    2464:	mov	r0, r5
    2468:	bl	1c40 <main@@Base+0x5a0>
    246c:	ldr	r1, [pc, #24]	; 248c <main@@Base+0xdec>
    2470:	mov	r0, r5
    2474:	add	r1, pc, r1
    2478:	bl	13c0 <g_signal_emit_by_name@plt>
    247c:	b	241c <main@@Base+0xd7c>
    2480:	andeq	r0, r0, ip, ror #13
    2484:	andeq	r0, r0, r8, asr #13
    2488:	andeq	r0, r0, r8, lsr #11
    248c:	andeq	r0, r0, r4, asr r6
    2490:	push	{r4, r5, r6, r7, lr}
    2494:	sub	sp, sp, #28
    2498:	mov	r4, r1
    249c:	mov	r6, r3
    24a0:	mov	r5, r0
    24a4:	mov	r7, r2
    24a8:	bl	1ff8 <main@@Base+0x958>
    24ac:	mov	r1, r0
    24b0:	mov	r0, r5
    24b4:	bl	1540 <g_type_check_instance_cast@plt>
    24b8:	cmp	r4, #1
    24bc:	mov	r3, r0
    24c0:	beq	251c <main@@Base+0xe7c>
    24c4:	ldm	r6, {r3, r7}
    24c8:	ldr	r0, [r3]
    24cc:	bl	151c <g_type_name@plt>
    24d0:	ldr	r3, [r5]
    24d4:	mov	r6, r0
    24d8:	ldr	r0, [r3]
    24dc:	bl	151c <g_type_name@plt>
    24e0:	ldr	r3, [pc, #76]	; 2534 <main@@Base+0xe94>
    24e4:	ldr	r2, [pc, #76]	; 2538 <main@@Base+0xe98>
    24e8:	mov	r1, #16
    24ec:	add	r3, pc, r3
    24f0:	stm	sp, {r3, r4}
    24f4:	ldr	r3, [pc, #64]	; 253c <main@@Base+0xe9c>
    24f8:	add	r2, pc, r2
    24fc:	str	r7, [sp, #8]
    2500:	str	r6, [sp, #12]
    2504:	add	r3, pc, r3
    2508:	str	r0, [sp, #16]
    250c:	mov	r0, #0
    2510:	bl	1678 <g_log@plt>
    2514:	add	sp, sp, #28
    2518:	pop	{r4, r5, r6, r7, pc}
    251c:	mov	r0, r7
    2520:	ldr	r4, [r3, #12]
    2524:	bl	1504 <g_value_dup_object@plt>
    2528:	str	r0, [r4]
    252c:	add	sp, sp, #28
    2530:	pop	{r4, r5, r6, r7, pc}
    2534:	andeq	r0, r0, r8, ror #12
    2538:	andeq	r0, r0, r4, lsl #12
    253c:	andeq	r0, r0, ip, lsr #12
    2540:	push	{r4, r5, r6, r7, lr}
    2544:	sub	sp, sp, #28
    2548:	mov	r4, r1
    254c:	mov	r5, r0
    2550:	mov	r7, r2
    2554:	mov	r6, r3
    2558:	bl	1ff8 <main@@Base+0x958>
    255c:	mov	r1, r0
    2560:	mov	r0, r5
    2564:	bl	1540 <g_type_check_instance_cast@plt>
    2568:	cmp	r4, #1
    256c:	beq	25c8 <main@@Base+0xf28>
    2570:	ldm	r6, {r3, r7}
    2574:	ldr	r0, [r3]
    2578:	bl	151c <g_type_name@plt>
    257c:	ldr	r3, [r5]
    2580:	mov	r6, r0
    2584:	ldr	r0, [r3]
    2588:	bl	151c <g_type_name@plt>
    258c:	ldr	r3, [pc, #76]	; 25e0 <main@@Base+0xf40>
    2590:	ldr	r2, [pc, #76]	; 25e4 <main@@Base+0xf44>
    2594:	mov	r1, #16
    2598:	add	r3, pc, r3
    259c:	stm	sp, {r3, r4}
    25a0:	ldr	r3, [pc, #64]	; 25e8 <main@@Base+0xf48>
    25a4:	add	r2, pc, r2
    25a8:	str	r7, [sp, #8]
    25ac:	str	r6, [sp, #12]
    25b0:	add	r3, pc, r3
    25b4:	str	r0, [sp, #16]
    25b8:	mov	r0, #0
    25bc:	bl	1678 <g_log@plt>
    25c0:	add	sp, sp, #28
    25c4:	pop	{r4, r5, r6, r7, pc}
    25c8:	ldr	r3, [r0, #12]
    25cc:	mov	r0, r7
    25d0:	ldr	r1, [r3]
    25d4:	add	sp, sp, #28
    25d8:	pop	{r4, r5, r6, r7, lr}
    25dc:	b	15c4 <g_value_set_object@plt>
    25e0:			; <UNDEFINED> instruction: 0x000005bc
    25e4:	andeq	r0, r0, r8, asr r5
    25e8:			; <UNDEFINED> instruction: 0x000005b0
    25ec:	push	{r3, r4, r5, lr}
    25f0:	mov	r5, r0
    25f4:	bl	1ff8 <main@@Base+0x958>
    25f8:	ldr	r1, [pc, #28]	; 261c <main@@Base+0xf7c>
    25fc:	mov	r2, r5
    2600:	mov	r3, #0
    2604:	add	r1, pc, r1
    2608:	mov	r4, r0
    260c:	bl	1444 <g_object_new@plt>
    2610:	mov	r1, r4
    2614:	pop	{r3, r4, r5, lr}
    2618:	b	1540 <g_type_check_instance_cast@plt>
    261c:	andeq	r0, r0, ip, ror r4
    2620:	push	{r4, r5, r6, r7, r8, lr}
    2624:	mov	r6, r1
    2628:	mov	r5, r2
    262c:	mov	r4, r3
    2630:	mov	r7, r0
    2634:	bl	1c90 <main@@Base+0x5f0>
    2638:	mov	r0, r7
    263c:	mov	r1, r6
    2640:	mov	r2, r5
    2644:	mov	r3, r4
    2648:	bl	1f6c <main@@Base+0x8cc>
    264c:	cmp	r0, #0
    2650:	popeq	{r4, r5, r6, r7, r8, pc}
    2654:	mov	r1, r6
    2658:	mov	r2, r5
    265c:	mov	r3, r4
    2660:	pop	{r4, r5, r6, r7, r8, lr}
    2664:	b	145c <g_key_file_get_integer@plt>
    2668:	push	{r4, r5, r6, r7, r8, lr}
    266c:	mov	r6, r1
    2670:	mov	r5, r2
    2674:	mov	r4, r3
    2678:	mov	r7, r0
    267c:	bl	1c90 <main@@Base+0x5f0>
    2680:	mov	r0, r7
    2684:	mov	r1, r6
    2688:	mov	r2, r5
    268c:	mov	r3, r4
    2690:	bl	1f6c <main@@Base+0x8cc>
    2694:	cmp	r0, #0
    2698:	popeq	{r4, r5, r6, r7, r8, pc}
    269c:	mov	r1, r6
    26a0:	mov	r2, r5
    26a4:	mov	r3, r4
    26a8:	pop	{r4, r5, r6, r7, r8, lr}
    26ac:	b	14b0 <g_key_file_get_boolean@plt>
    26b0:	push	{r4, r5, r6, r7, r8, lr}
    26b4:	mov	r6, r1
    26b8:	mov	r5, r2
    26bc:	mov	r4, r3
    26c0:	mov	r7, r0
    26c4:	bl	1c90 <main@@Base+0x5f0>
    26c8:	mov	r0, r7
    26cc:	mov	r1, r6
    26d0:	mov	r2, r5
    26d4:	mov	r3, r4
    26d8:	bl	1f6c <main@@Base+0x8cc>
    26dc:	cmp	r0, #0
    26e0:	beq	26f8 <main@@Base+0x1058>
    26e4:	mov	r1, r6
    26e8:	mov	r2, r5
    26ec:	mov	r3, r4
    26f0:	pop	{r4, r5, r6, r7, r8, lr}
    26f4:	b	1408 <g_key_file_get_double@plt>
    26f8:	vldr	d0, [pc]	; 2700 <main@@Base+0x1060>
    26fc:	pop	{r4, r5, r6, r7, r8, pc}
	...
    2708:	push	{r4, r5, r6, r7, r8, lr}
    270c:	mov	r6, r1
    2710:	mov	r5, r2
    2714:	mov	r4, r3
    2718:	mov	r7, r0
    271c:	bl	1c90 <main@@Base+0x5f0>
    2720:	mov	r0, r7
    2724:	mov	r1, r6
    2728:	mov	r2, r5
    272c:	mov	r3, r4
    2730:	bl	1f6c <main@@Base+0x8cc>
    2734:	cmp	r0, #0
    2738:	popeq	{r4, r5, r6, r7, r8, pc}
    273c:	mov	r1, r6
    2740:	mov	r2, r5
    2744:	mov	r3, r4
    2748:	pop	{r4, r5, r6, r7, r8, lr}
    274c:	b	1384 <g_key_file_get_string@plt>
    2750:	push	{r4, r5, r6, r7, lr}
    2754:	mov	r5, r1
    2758:	sub	sp, sp, #12
    275c:	mov	r4, r2
    2760:	mov	r6, r3
    2764:	mov	r7, r0
    2768:	bl	1c90 <main@@Base+0x5f0>
    276c:	mov	r3, r6
    2770:	mov	r0, r7
    2774:	mov	r1, r5
    2778:	mov	r2, r4
    277c:	bl	1f6c <main@@Base+0x8cc>
    2780:	subs	r3, r0, #0
    2784:	beq	27a4 <main@@Base+0x1104>
    2788:	str	r6, [sp]
    278c:	mov	r1, r5
    2790:	mov	r2, r4
    2794:	mov	r3, #0
    2798:	bl	1360 <g_key_file_get_string_list@plt>
    279c:	add	sp, sp, #12
    27a0:	pop	{r4, r5, r6, r7, pc}
    27a4:	mov	r0, r3
    27a8:	b	279c <main@@Base+0x10fc>
    27ac:	nop	{0}

000027b0 <__libc_csu_init@@Base>:
    27b0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    27b4:	mov	r7, r0
    27b8:	ldr	r6, [pc, #76]	; 280c <__libc_csu_init@@Base+0x5c>
    27bc:	mov	r8, r1
    27c0:	ldr	r5, [pc, #72]	; 2810 <__libc_csu_init@@Base+0x60>
    27c4:	mov	r9, r2
    27c8:	add	r6, pc, r6
    27cc:	bl	1310 <_init@@Base>
    27d0:	add	r5, pc, r5
    27d4:	rsb	r6, r5, r6
    27d8:	asrs	r6, r6, #2
    27dc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    27e0:	sub	r5, r5, #4
    27e4:	mov	r4, #0
    27e8:	add	r4, r4, #1
    27ec:	ldr	r3, [r5, #4]!
    27f0:	mov	r0, r7
    27f4:	mov	r1, r8
    27f8:	mov	r2, r9
    27fc:	blx	r3
    2800:	cmp	r4, r6
    2804:	bne	27e8 <__libc_csu_init@@Base+0x38>
    2808:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    280c:	andeq	r8, r0, r8, asr r5
    2810:	andeq	r8, r0, ip, asr #10

00002814 <__libc_csu_fini@@Base>:
    2814:	bx	lr

Disassembly of section .fini:

00002818 <_fini@@Base>:
    2818:	push	{r3, lr}
    281c:	pop	{r3, pc}
