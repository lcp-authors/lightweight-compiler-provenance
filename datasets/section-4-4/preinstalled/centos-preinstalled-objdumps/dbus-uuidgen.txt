
centos-preinstalled/dbus-uuidgen:     file format elf32-littlearm


Disassembly of section .init:

000008a4 <_init@@Base>:
 8a4:	push	{r3, lr}
 8a8:	bl	c4c <main@@Base+0x2b0>
 8ac:	pop	{r3, pc}

Disassembly of section .plt:

000008b0 <abort@plt-0x14>:
 8b0:	push	{lr}		; (str lr, [sp, #-4]!)
 8b4:	ldr	lr, [pc, #4]	; 8c0 <_init@@Base+0x1c>
 8b8:	add	lr, pc, lr
 8bc:	ldr	pc, [lr, #8]!
 8c0:	andeq	r1, r1, r4, asr #13

000008c4 <abort@plt>:
 8c4:	add	ip, pc, #0, 12
 8c8:	add	ip, ip, #69632	; 0x11000
 8cc:	ldr	pc, [ip, #1732]!	; 0x6c4

000008d0 <dbus_free@plt>:
 8d0:	add	ip, pc, #0, 12
 8d4:	add	ip, ip, #69632	; 0x11000
 8d8:	ldr	pc, [ip, #1724]!	; 0x6bc

000008dc <__libc_start_main@plt>:
 8dc:	add	ip, pc, #0, 12
 8e0:	add	ip, ip, #69632	; 0x11000
 8e4:	ldr	pc, [ip, #1716]!	; 0x6b4

000008e8 <__gmon_start__@plt>:
 8e8:	add	ip, pc, #0, 12
 8ec:	add	ip, ip, #69632	; 0x11000
 8f0:	ldr	pc, [ip, #1708]!	; 0x6ac

000008f4 <__printf_chk@plt>:
 8f4:	add	ip, pc, #0, 12
 8f8:	add	ip, ip, #69632	; 0x11000
 8fc:	ldr	pc, [ip, #1700]!	; 0x6a4

00000900 <strlen@plt>:
 900:	add	ip, pc, #0, 12
 904:	add	ip, ip, #69632	; 0x11000
 908:	ldr	pc, [ip, #1692]!	; 0x69c

0000090c <fwrite@plt>:
 90c:	add	ip, pc, #0, 12
 910:	add	ip, ip, #69632	; 0x11000
 914:	ldr	pc, [ip, #1684]!	; 0x694

00000918 <__fprintf_chk@plt>:
 918:	add	ip, pc, #0, 12
 91c:	add	ip, ip, #69632	; 0x11000
 920:	ldr	pc, [ip, #1676]!	; 0x68c

00000924 <dbus_error_init@plt>:
 924:	add	ip, pc, #0, 12
 928:	add	ip, ip, #69632	; 0x11000
 92c:	ldr	pc, [ip, #1668]!	; 0x684

00000930 <_dbus_create_uuid@plt>:
 930:	add	ip, pc, #0, 12
 934:	add	ip, ip, #69632	; 0x11000
 938:	ldr	pc, [ip, #1660]!	; 0x67c

0000093c <puts@plt>:
 93c:	add	ip, pc, #0, 12
 940:	add	ip, ip, #69632	; 0x11000
 944:	ldr	pc, [ip, #1652]!	; 0x674

00000948 <dbus_internal_do_not_use_get_uuid@plt>:
 948:	add	ip, pc, #0, 12
 94c:	add	ip, ip, #69632	; 0x11000
 950:	ldr	pc, [ip, #1644]!	; 0x66c

00000954 <dbus_error_is_set@plt>:
 954:	add	ip, pc, #0, 12
 958:	add	ip, ip, #69632	; 0x11000
 95c:	ldr	pc, [ip, #1636]!	; 0x664

00000960 <dbus_error_free@plt>:
 960:	add	ip, pc, #0, 12
 964:	add	ip, ip, #69632	; 0x11000
 968:	ldr	pc, [ip, #1628]!	; 0x65c

0000096c <strncmp@plt>:
 96c:	add	ip, pc, #0, 12
 970:	add	ip, ip, #69632	; 0x11000
 974:	ldr	pc, [ip, #1620]!	; 0x654

00000978 <strcmp@plt>:
 978:	add	ip, pc, #0, 12
 97c:	add	ip, ip, #69632	; 0x11000
 980:	ldr	pc, [ip, #1612]!	; 0x64c

00000984 <exit@plt>:
 984:	add	ip, pc, #0, 12
 988:	add	ip, ip, #69632	; 0x11000
 98c:	ldr	pc, [ip, #1604]!	; 0x644

00000990 <__cxa_finalize@plt>:
 990:	add	ip, pc, #0, 12
 994:	add	ip, ip, #69632	; 0x11000
 998:	ldr	pc, [ip, #1596]!	; 0x63c

Disassembly of section .text:

0000099c <main@@Base>:
 99c:	ldr	ip, [pc, #548]	; bc8 <main@@Base+0x22c>
 9a0:	cmp	r0, #1
 9a4:	ldr	r3, [pc, #544]	; bcc <main@@Base+0x230>
 9a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 9ac:	add	ip, pc, ip
 9b0:	sub	sp, sp, #52	; 0x34
 9b4:	mov	sl, #0
 9b8:	mov	r8, r0
 9bc:	str	ip, [sp, #8]
 9c0:	str	r1, [sp, #12]
 9c4:	ldr	r3, [ip, r3]
 9c8:	str	sl, [sp, #20]
 9cc:	ldr	r3, [r3]
 9d0:	str	r3, [sp, #44]	; 0x2c
 9d4:	ble	b8c <main@@Base+0x1f0>
 9d8:	ldr	r7, [pc, #496]	; bd0 <main@@Base+0x234>
 9dc:	add	r9, sp, #20
 9e0:	ldr	r6, [pc, #492]	; bd4 <main@@Base+0x238>
 9e4:	mov	r5, r1
 9e8:	add	r7, pc, r7
 9ec:	str	sl, [sp, #4]
 9f0:	add	r6, pc, r6
 9f4:	mov	r4, #1
 9f8:	b	a30 <main@@Base+0x94>
 9fc:	mov	r1, r6
 a00:	mov	r2, #5
 a04:	bl	96c <strncmp@plt>
 a08:	cmp	r0, #0
 a0c:	mov	r0, fp
 a10:	bne	b30 <main@@Base+0x194>
 a14:	mov	r1, r6
 a18:	mov	r2, r9
 a1c:	add	r4, r4, #1
 a20:	bl	e28 <main@@Base+0x48c>
 a24:	cmp	r4, r8
 a28:	mov	sl, #1
 a2c:	beq	a70 <main@@Base+0xd4>
 a30:	ldr	fp, [r5, #4]!
 a34:	mov	r1, r7
 a38:	mov	r2, #8
 a3c:	mov	r0, fp
 a40:	bl	96c <strncmp@plt>
 a44:	cmp	r0, #0
 a48:	mov	r0, fp
 a4c:	bne	9fc <main@@Base+0x60>
 a50:	mov	r1, r7
 a54:	mov	r2, r9
 a58:	add	r4, r4, #1
 a5c:	mov	r3, #1
 a60:	str	r3, [sp, #4]
 a64:	bl	e28 <main@@Base+0x48c>
 a68:	cmp	r4, r8
 a6c:	bne	a30 <main@@Base+0x94>
 a70:	ldr	ip, [sp, #4]
 a74:	tst	ip, sl
 a78:	beq	aa8 <main@@Base+0x10c>
 a7c:	ldr	ip, [sp, #8]
 a80:	mov	r1, #1
 a84:	ldr	r3, [pc, #332]	; bd8 <main@@Base+0x23c>
 a88:	mov	r2, #38	; 0x26
 a8c:	ldr	r0, [pc, #328]	; bdc <main@@Base+0x240>
 a90:	ldr	r3, [ip, r3]
 a94:	add	r0, pc, r0
 a98:	ldr	r3, [r3]
 a9c:	bl	90c <fwrite@plt>
 aa0:	mov	r0, #1
 aa4:	bl	984 <exit@plt>
 aa8:	add	r4, sp, #28
 aac:	mov	r0, r4
 ab0:	bl	924 <dbus_error_init@plt>
 ab4:	ldr	r3, [sp, #4]
 ab8:	orrs	r3, sl, r3
 abc:	beq	b98 <main@@Base+0x1fc>
 ac0:	ldr	r2, [sp, #4]
 ac4:	add	r1, sp, #24
 ac8:	ldr	r0, [sp, #20]
 acc:	mov	r3, r4
 ad0:	bl	948 <dbus_internal_do_not_use_get_uuid@plt>
 ad4:	cmp	r0, #0
 ad8:	beq	aec <main@@Base+0x150>
 adc:	cmp	sl, #0
 ae0:	bne	bac <main@@Base+0x210>
 ae4:	ldr	r0, [sp, #24]
 ae8:	bl	8d0 <dbus_free@plt>
 aec:	mov	r0, r4
 af0:	bl	954 <dbus_error_is_set@plt>
 af4:	cmp	r0, #0
 af8:	beq	bb8 <main@@Base+0x21c>
 afc:	ldr	ip, [sp, #8]
 b00:	mov	r1, #1
 b04:	ldr	r0, [pc, #204]	; bd8 <main@@Base+0x23c>
 b08:	ldr	r2, [pc, #208]	; be0 <main@@Base+0x244>
 b0c:	ldr	r3, [sp, #32]
 b10:	ldr	r0, [ip, r0]
 b14:	add	r2, pc, r2
 b18:	ldr	r0, [r0]
 b1c:	bl	918 <__fprintf_chk@plt>
 b20:	mov	r0, r4
 b24:	bl	960 <dbus_error_free@plt>
 b28:	mov	r0, #1
 b2c:	bl	984 <exit@plt>
 b30:	ldr	r1, [pc, #172]	; be4 <main@@Base+0x248>
 b34:	add	r1, pc, r1
 b38:	bl	978 <strcmp@plt>
 b3c:	subs	r1, r0, #0
 b40:	beq	bbc <main@@Base+0x220>
 b44:	ldr	r1, [pc, #156]	; be8 <main@@Base+0x24c>
 b48:	mov	r0, fp
 b4c:	add	r1, pc, r1
 b50:	bl	978 <strcmp@plt>
 b54:	subs	r4, r0, #0
 b58:	bne	b7c <main@@Base+0x1e0>
 b5c:	ldr	r1, [pc, #136]	; bec <main@@Base+0x250>
 b60:	mov	r0, #1
 b64:	ldr	r2, [pc, #132]	; bf0 <main@@Base+0x254>
 b68:	add	r1, pc, r1
 b6c:	add	r2, pc, r2
 b70:	bl	8f4 <__printf_chk@plt>
 b74:	mov	r0, r4
 b78:	bl	984 <exit@plt>
 b7c:	ldr	r3, [sp, #12]
 b80:	mov	r1, #1
 b84:	ldr	r0, [r3]
 b88:	bl	dd0 <main@@Base+0x434>
 b8c:	add	r4, sp, #28
 b90:	mov	r0, r4
 b94:	bl	924 <dbus_error_init@plt>
 b98:	add	r0, sp, #24
 b9c:	mov	r1, r4
 ba0:	bl	930 <_dbus_create_uuid@plt>
 ba4:	cmp	r0, #0
 ba8:	beq	aec <main@@Base+0x150>
 bac:	ldr	r0, [sp, #24]
 bb0:	bl	93c <puts@plt>
 bb4:	b	ae4 <main@@Base+0x148>
 bb8:	bl	984 <exit@plt>
 bbc:	ldr	ip, [sp, #12]
 bc0:	ldr	r0, [ip]
 bc4:	bl	dd0 <main@@Base+0x434>
 bc8:	ldrdeq	r1, [r1], -r0
 bcc:	andeq	r0, r0, ip, rrx
 bd0:	andeq	r0, r0, r4, lsl #11
 bd4:	andeq	r0, r0, r8, lsl #11
 bd8:	andeq	r0, r0, r0, ror r0
 bdc:	ldrdeq	r0, [r0], -r8
 be0:	andeq	r0, r0, r0, lsl #11
 be4:	andeq	r0, r0, ip, asr #8
 be8:	andeq	r0, r0, ip, lsr r4
 bec:	andeq	r0, r0, ip, lsr #8
 bf0:	strdeq	r0, [r0], -r8
 bf4:	mov	fp, #0
 bf8:	mov	lr, #0
 bfc:	pop	{r1}		; (ldr r1, [sp], #4)
 c00:	mov	r2, sp
 c04:	push	{r2}		; (str r2, [sp, #-4]!)
 c08:	push	{r0}		; (str r0, [sp, #-4]!)
 c0c:	ldr	sl, [pc, #40]	; c3c <main@@Base+0x2a0>
 c10:	add	r3, pc, #36	; 0x24
 c14:	add	sl, sl, r3
 c18:	ldr	ip, [pc, #32]	; c40 <main@@Base+0x2a4>
 c1c:	ldr	ip, [sl, ip]
 c20:	push	{ip}		; (str ip, [sp, #-4]!)
 c24:	ldr	r3, [pc, #24]	; c44 <main@@Base+0x2a8>
 c28:	ldr	r3, [sl, r3]
 c2c:	ldr	r0, [pc, #20]	; c48 <main@@Base+0x2ac>
 c30:	ldr	r0, [sl, r0]
 c34:	bl	8dc <__libc_start_main@plt>
 c38:	bl	8c4 <abort@plt>
 c3c:	andeq	r1, r1, r8, asr #6
 c40:	andeq	r0, r0, r4, asr r0
 c44:	andeq	r0, r0, r8, rrx
 c48:	andeq	r0, r0, r8, ror r0
 c4c:	ldr	r3, [pc, #20]	; c68 <main@@Base+0x2cc>
 c50:	ldr	r2, [pc, #20]	; c6c <main@@Base+0x2d0>
 c54:	add	r3, pc, r3
 c58:	ldr	r2, [r3, r2]
 c5c:	cmp	r2, #0
 c60:	bxeq	lr
 c64:	b	8e8 <__gmon_start__@plt>
 c68:	andeq	r1, r1, r8, lsr #6
 c6c:	andeq	r0, r0, r8, asr r0
 c70:	ldr	r2, [pc, #60]	; cb4 <main@@Base+0x318>
 c74:	ldr	r0, [pc, #60]	; cb8 <main@@Base+0x31c>
 c78:	add	r2, pc, r2
 c7c:	add	r0, pc, r0
 c80:	add	r2, r2, #3
 c84:	rsb	r2, r0, r2
 c88:	push	{r3, lr}
 c8c:	cmp	r2, #6
 c90:	ldr	r3, [pc, #36]	; cbc <main@@Base+0x320>
 c94:	add	r3, pc, r3
 c98:	popls	{r3, pc}
 c9c:	ldr	r2, [pc, #28]	; cc0 <main@@Base+0x324>
 ca0:	ldr	r3, [r3, r2]
 ca4:	cmp	r3, #0
 ca8:	popeq	{r3, pc}
 cac:	blx	r3
 cb0:	pop	{r3, pc}
 cb4:	andeq	r1, r1, r4, lsl #7
 cb8:	andeq	r1, r1, r0, lsl #7
 cbc:	andeq	r1, r1, r8, ror #5
 cc0:	andeq	r0, r0, r0, rrx
 cc4:	push	{r3, lr}
 cc8:	ldr	r0, [pc, #64]	; d10 <main@@Base+0x374>
 ccc:	ldr	r3, [pc, #64]	; d14 <main@@Base+0x378>
 cd0:	add	r0, pc, r0
 cd4:	ldr	r2, [pc, #60]	; d18 <main@@Base+0x37c>
 cd8:	add	r3, pc, r3
 cdc:	rsb	r3, r0, r3
 ce0:	add	r2, pc, r2
 ce4:	asr	r3, r3, #2
 ce8:	add	r3, r3, r3, lsr #31
 cec:	asrs	r3, r3, #1
 cf0:	popeq	{r3, pc}
 cf4:	ldr	r1, [pc, #32]	; d1c <main@@Base+0x380>
 cf8:	ldr	r2, [r2, r1]
 cfc:	cmp	r2, #0
 d00:	popeq	{r3, pc}
 d04:	mov	r1, r3
 d08:	blx	r2
 d0c:	pop	{r3, pc}
 d10:	andeq	r1, r1, ip, lsr #6
 d14:	andeq	r1, r1, r4, lsr #6
 d18:	muleq	r1, ip, r2
 d1c:	andeq	r0, r0, r4, rrx
 d20:	ldr	r2, [pc, #76]	; d74 <main@@Base+0x3d8>
 d24:	push	{r3, lr}
 d28:	add	r2, pc, r2
 d2c:	ldr	r3, [pc, #68]	; d78 <main@@Base+0x3dc>
 d30:	ldrb	r2, [r2]
 d34:	add	r3, pc, r3
 d38:	cmp	r2, #0
 d3c:	popne	{r3, pc}
 d40:	ldr	r2, [pc, #52]	; d7c <main@@Base+0x3e0>
 d44:	ldr	r3, [r3, r2]
 d48:	cmp	r3, #0
 d4c:	beq	d5c <main@@Base+0x3c0>
 d50:	ldr	r0, [pc, #40]	; d80 <main@@Base+0x3e4>
 d54:	add	r0, pc, r0
 d58:	bl	990 <__cxa_finalize@plt>
 d5c:	bl	c70 <main@@Base+0x2d4>
 d60:	ldr	r3, [pc, #28]	; d84 <main@@Base+0x3e8>
 d64:	mov	r2, #1
 d68:	add	r3, pc, r3
 d6c:	strb	r2, [r3]
 d70:	pop	{r3, pc}
 d74:	ldrdeq	r1, [r1], -r4
 d78:	andeq	r1, r1, r8, asr #4
 d7c:	andeq	r0, r0, r4, ror r0
 d80:	andeq	r1, r1, r4, lsl #2
 d84:	muleq	r1, r4, r2
 d88:	ldr	r0, [pc, #52]	; dc4 <main@@Base+0x428>
 d8c:	push	{r3, lr}
 d90:	add	r0, pc, r0
 d94:	ldr	r3, [pc, #44]	; dc8 <main@@Base+0x42c>
 d98:	ldr	r2, [r0]
 d9c:	add	r3, pc, r3
 da0:	cmp	r2, #0
 da4:	beq	dbc <main@@Base+0x420>
 da8:	ldr	r2, [pc, #28]	; dcc <main@@Base+0x430>
 dac:	ldr	r3, [r3, r2]
 db0:	cmp	r3, #0
 db4:	beq	dbc <main@@Base+0x420>
 db8:	blx	r3
 dbc:	pop	{r3, lr}
 dc0:	b	cc4 <main@@Base+0x328>
 dc4:	andeq	r1, r1, r4, asr #1
 dc8:	andeq	r1, r1, r0, ror #3
 dcc:	andeq	r0, r0, ip, asr r0
 dd0:	subs	r3, r0, #0
 dd4:	ldr	ip, [pc, #60]	; e18 <main@@Base+0x47c>
 dd8:	push	{r4, lr}
 ddc:	add	ip, pc, ip
 de0:	mov	r4, r1
 de4:	beq	e0c <main@@Base+0x470>
 de8:	ldr	r0, [pc, #44]	; e1c <main@@Base+0x480>
 dec:	mov	r1, #1
 df0:	ldr	r2, [pc, #40]	; e20 <main@@Base+0x484>
 df4:	ldr	r0, [ip, r0]
 df8:	add	r2, pc, r2
 dfc:	ldr	r0, [r0]
 e00:	bl	918 <__fprintf_chk@plt>
 e04:	mov	r0, r4
 e08:	bl	984 <exit@plt>
 e0c:	ldr	r3, [pc, #16]	; e24 <main@@Base+0x488>
 e10:	add	r3, pc, r3
 e14:	b	de8 <main@@Base+0x44c>
 e18:	andeq	r1, r1, r0, lsr #3
 e1c:	andeq	r0, r0, r0, ror r0
 e20:	andeq	r0, r0, r0, asr #2
 e24:	andeq	r0, r0, r8, lsl r1
 e28:	push	{r3, r4, r5, r6, r7, lr}
 e2c:	mov	r5, r1
 e30:	mov	r6, r2
 e34:	mov	r4, r0
 e38:	bl	900 <strlen@plt>
 e3c:	mov	r7, r0
 e40:	mov	r0, r5
 e44:	bl	900 <strlen@plt>
 e48:	cmp	r7, r0
 e4c:	bcc	ea8 <main@@Base+0x50c>
 e50:	ldrb	r1, [r4, r0]
 e54:	add	ip, r4, r0
 e58:	cmp	r1, #32
 e5c:	cmpne	r1, #61	; 0x3d
 e60:	bne	ea0 <main@@Base+0x504>
 e64:	cmp	r1, #61	; 0x3d
 e68:	ldrbeq	r1, [ip, #1]
 e6c:	addeq	ip, ip, #1
 e70:	cmp	r1, #32
 e74:	bne	e8c <main@@Base+0x4f0>
 e78:	add	r3, ip, #1
 e7c:	mov	ip, r3
 e80:	ldrb	r1, [r3], #1
 e84:	cmp	r1, #32
 e88:	beq	e7c <main@@Base+0x4e0>
 e8c:	cmp	r1, #0
 e90:	beq	ea8 <main@@Base+0x50c>
 e94:	str	ip, [r6]
 e98:	mov	r0, #1
 e9c:	pop	{r3, r4, r5, r6, r7, pc}
 ea0:	cmp	r1, #0
 ea4:	bne	eb0 <main@@Base+0x514>
 ea8:	mov	r0, #0
 eac:	pop	{r3, r4, r5, r6, r7, pc}
 eb0:	mov	r0, #0
 eb4:	mov	r1, #1
 eb8:	bl	dd0 <main@@Base+0x434>

00000ebc <__libc_csu_init@@Base>:
 ebc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
 ec0:	mov	r7, r0
 ec4:	ldr	r6, [pc, #76]	; f18 <__libc_csu_init@@Base+0x5c>
 ec8:	mov	r8, r1
 ecc:	ldr	r5, [pc, #72]	; f1c <__libc_csu_init@@Base+0x60>
 ed0:	mov	r9, r2
 ed4:	add	r6, pc, r6
 ed8:	bl	8a4 <_init@@Base>
 edc:	add	r5, pc, r5
 ee0:	rsb	r6, r5, r6
 ee4:	asrs	r6, r6, #2
 ee8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
 eec:	sub	r5, r5, #4
 ef0:	mov	r4, #0
 ef4:	add	r4, r4, #1
 ef8:	ldr	r3, [r5, #4]!
 efc:	mov	r0, r7
 f00:	mov	r1, r8
 f04:	mov	r2, r9
 f08:	blx	r3
 f0c:	cmp	r4, r6
 f10:	bne	ef4 <__libc_csu_init@@Base+0x38>
 f14:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 f18:	andeq	r0, r1, ip, ror pc
 f1c:	andeq	r0, r1, r0, ror pc

00000f20 <__libc_csu_fini@@Base>:
 f20:	bx	lr

Disassembly of section .fini:

00000f24 <_fini@@Base>:
 f24:	push	{r3, lr}
 f28:	pop	{r3, pc}
