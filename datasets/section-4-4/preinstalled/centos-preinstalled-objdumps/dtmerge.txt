
centos-preinstalled/dtmerge:     file format elf32-littlearm


Disassembly of section .init:

00010948 <_init@@Base>:
   10948:	push	{r3, lr}
   1094c:	bl	10ee0 <_start@@Base+0x3c>
   10950:	pop	{r3, pc}

Disassembly of section .plt:

00010954 <dtoverlay_merge_overlay@plt-0x14>:
   10954:	push	{lr}		; (str lr, [sp, #-4]!)
   10958:	ldr	lr, [pc, #4]	; 10964 <_init@@Base+0x1c>
   1095c:	add	lr, pc, lr
   10960:	ldr	pc, [lr, #8]!
   10964:	muleq	r1, ip, r6

00010968 <dtoverlay_merge_overlay@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1692]!	; 0x69c

00010974 <strcmp@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1684]!	; 0x694

00010980 <dtoverlay_pack_dtb@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1676]!	; 0x68c

0001098c <dtoverlay_fixup_overlay@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1668]!	; 0x684

00010998 <dtoverlay_find_override@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1660]!	; 0x67c

000109a4 <__stack_chk_fail@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1652]!	; 0x674

000109b0 <dtoverlay_set_synonym@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1644]!	; 0x66c

000109bc <puts@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1636]!	; 0x664

000109c8 <dtoverlay_load_dtb@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1628]!	; 0x65c

000109d4 <__libc_start_main@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1620]!	; 0x654

000109e0 <__gmon_start__@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1612]!	; 0x64c

000109ec <exit@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1604]!	; 0x644

000109f8 <dtoverlay_free_dtb@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1596]!	; 0x63c

00010a04 <dtoverlay_save_dtb@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1588]!	; 0x634

00010a10 <__printf_chk@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1580]!	; 0x62c

00010a1c <dtoverlay_apply_override@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1572]!	; 0x624

00010a28 <dtoverlay_enable_debug@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1564]!	; 0x61c

00010a34 <abort@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1556]!	; 0x614

Disassembly of section .text:

00010a40 <main@@Base>:
   10a40:	ldr	r3, [pc, #1036]	; 10e54 <main@@Base+0x414>
   10a44:	cmp	r0, #1
   10a48:	ldr	r2, [pc, #1032]	; 10e58 <main@@Base+0x418>
   10a4c:	add	r3, pc, r3
   10a50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a54:	sub	sp, sp, #44	; 0x2c
   10a58:	ldr	r2, [r3, r2]
   10a5c:	mov	r5, r0
   10a60:	mov	r8, r1
   10a64:	ldr	r3, [r2]
   10a68:	str	r2, [sp, #16]
   10a6c:	str	r3, [sp, #36]	; 0x24
   10a70:	ble	10b18 <main@@Base+0xd8>
   10a74:	ldr	r6, [r1, #4]
   10a78:	ldrb	r3, [r6]
   10a7c:	cmp	r3, #45	; 0x2d
   10a80:	movne	r4, #1
   10a84:	bne	10b1c <main@@Base+0xdc>
   10a88:	ldr	sl, [pc, #972]	; 10e5c <main@@Base+0x41c>
   10a8c:	add	r9, r8, #4
   10a90:	mov	r4, #1
   10a94:	add	sl, pc, sl
   10a98:	b	10ac8 <main@@Base+0x88>
   10a9c:	ldrb	r3, [r6, #2]
   10aa0:	cmp	r3, #0
   10aa4:	bne	10ad8 <main@@Base+0x98>
   10aa8:	mov	r0, #1
   10aac:	bl	10a28 <dtoverlay_enable_debug@plt>
   10ab0:	cmp	r4, r5
   10ab4:	beq	10b1c <main@@Base+0xdc>
   10ab8:	ldr	r6, [r9, #4]!
   10abc:	ldrb	r3, [r6]
   10ac0:	cmp	r3, #45	; 0x2d
   10ac4:	bne	10b1c <main@@Base+0xdc>
   10ac8:	ldrb	r7, [r6, #1]
   10acc:	add	r4, r4, #1
   10ad0:	cmp	r7, #100	; 0x64
   10ad4:	beq	10a9c <main@@Base+0x5c>
   10ad8:	mov	r0, r6
   10adc:	mov	r1, sl
   10ae0:	bl	10974 <strcmp@plt>
   10ae4:	cmp	r0, #0
   10ae8:	beq	10aa8 <main@@Base+0x68>
   10aec:	cmp	r7, #104	; 0x68
   10af0:	bne	10b00 <main@@Base+0xc0>
   10af4:	ldrb	r3, [r6, #2]
   10af8:	cmp	r3, #0
   10afc:	beq	10b18 <main@@Base+0xd8>
   10b00:	ldr	r1, [pc, #856]	; 10e60 <main@@Base+0x420>
   10b04:	mov	r0, r6
   10b08:	add	r1, pc, r1
   10b0c:	bl	10974 <strcmp@plt>
   10b10:	cmp	r0, #0
   10b14:	bne	10dfc <main@@Base+0x3bc>
   10b18:	bl	10fd8 <_start@@Base+0x134>
   10b1c:	add	r3, r4, #2
   10b20:	cmp	r5, r3
   10b24:	ble	10b18 <main@@Base+0xd8>
   10b28:	lsl	r3, r4, #2
   10b2c:	ldr	r9, [r8, r4, lsl #2]
   10b30:	add	r2, r8, r3
   10b34:	add	r3, r3, #8
   10b38:	movw	r1, #34464	; 0x86a0
   10b3c:	movt	r1, #1
   10b40:	ldr	r2, [r2, #4]
   10b44:	mov	r0, r9
   10b48:	add	r6, r8, r3
   10b4c:	ldr	r7, [r8, r3]
   10b50:	add	r4, r4, #3
   10b54:	str	r2, [sp, #24]
   10b58:	bl	109c8 <dtoverlay_load_dtb@plt>
   10b5c:	subs	sl, r0, #0
   10b60:	beq	10e34 <main@@Base+0x3f4>
   10b64:	ldr	r9, [pc, #760]	; 10e64 <main@@Base+0x424>
   10b68:	ldr	r1, [pc, #760]	; 10e68 <main@@Base+0x428>
   10b6c:	add	r9, pc, r9
   10b70:	ldr	r8, [pc, #756]	; 10e6c <main@@Base+0x42c>
   10b74:	add	r1, pc, r1
   10b78:	mov	r2, r9
   10b7c:	add	r8, pc, r8
   10b80:	bl	109b0 <dtoverlay_set_synonym@plt>
   10b84:	ldr	r1, [pc, #740]	; 10e70 <main@@Base+0x430>
   10b88:	mov	r2, r9
   10b8c:	mov	r0, sl
   10b90:	add	r1, pc, r1
   10b94:	bl	109b0 <dtoverlay_set_synonym@plt>
   10b98:	ldr	r1, [pc, #724]	; 10e74 <main@@Base+0x434>
   10b9c:	ldr	r2, [pc, #724]	; 10e78 <main@@Base+0x438>
   10ba0:	mov	r0, sl
   10ba4:	add	r1, pc, r1
   10ba8:	add	r2, pc, r2
   10bac:	bl	109b0 <dtoverlay_set_synonym@plt>
   10bb0:	ldr	r1, [pc, #708]	; 10e7c <main@@Base+0x43c>
   10bb4:	mov	r2, r8
   10bb8:	mov	r0, sl
   10bbc:	add	r1, pc, r1
   10bc0:	bl	109b0 <dtoverlay_set_synonym@plt>
   10bc4:	ldr	r1, [pc, #692]	; 10e80 <main@@Base+0x440>
   10bc8:	mov	r2, r8
   10bcc:	mov	r0, sl
   10bd0:	add	r1, pc, r1
   10bd4:	bl	109b0 <dtoverlay_set_synonym@plt>
   10bd8:	ldr	r1, [pc, #676]	; 10e84 <main@@Base+0x444>
   10bdc:	ldr	r2, [pc, #676]	; 10e88 <main@@Base+0x448>
   10be0:	mov	r0, sl
   10be4:	add	r1, pc, r1
   10be8:	add	r2, pc, r2
   10bec:	bl	109b0 <dtoverlay_set_synonym@plt>
   10bf0:	ldrb	r3, [r7]
   10bf4:	cmp	r3, #45	; 0x2d
   10bf8:	mov	r8, r0
   10bfc:	bne	10d38 <main@@Base+0x2f8>
   10c00:	ldrb	r3, [r7, #1]
   10c04:	cmp	r3, #0
   10c08:	bne	10d38 <main@@Base+0x2f8>
   10c0c:	mov	r7, sl
   10c10:	rsbs	r3, r8, #1
   10c14:	movcc	r3, #0
   10c18:	cmp	r5, r4
   10c1c:	movle	r2, #0
   10c20:	andgt	r2, r3, #1
   10c24:	cmp	r2, #0
   10c28:	beq	10ce0 <main@@Base+0x2a0>
   10c2c:	ldr	r1, [pc, #600]	; 10e8c <main@@Base+0x44c>
   10c30:	add	r9, sp, #32
   10c34:	ldr	r2, [pc, #596]	; 10e90 <main@@Base+0x450>
   10c38:	ldr	r3, [pc, #596]	; 10e94 <main@@Base+0x454>
   10c3c:	add	r1, pc, r1
   10c40:	add	r2, pc, r2
   10c44:	str	r1, [sp, #20]
   10c48:	add	r3, pc, r3
   10c4c:	str	r2, [sp, #12]
   10c50:	str	r3, [sp, #28]
   10c54:	ldr	fp, [r6, #4]!
   10c58:	add	r4, r4, #1
   10c5c:	ldrb	r3, [fp]
   10c60:	cmp	r3, #0
   10c64:	beq	10da8 <main@@Base+0x368>
   10c68:	cmp	r3, #61	; 0x3d
   10c6c:	beq	10d64 <main@@Base+0x324>
   10c70:	add	r3, fp, #1
   10c74:	b	10c80 <main@@Base+0x240>
   10c78:	cmp	r2, #61	; 0x3d
   10c7c:	beq	10d68 <main@@Base+0x328>
   10c80:	mov	r8, r3
   10c84:	ldrb	r2, [r3], #1
   10c88:	cmp	r2, #0
   10c8c:	bne	10c78 <main@@Base+0x238>
   10c90:	ldr	r8, [sp, #12]
   10c94:	mov	r2, r9
   10c98:	mov	r0, r7
   10c9c:	mov	r1, fp
   10ca0:	bl	10998 <dtoverlay_find_override@plt>
   10ca4:	subs	r2, r0, #0
   10ca8:	beq	10d78 <main@@Base+0x338>
   10cac:	ldr	r3, [sp, #32]
   10cb0:	mov	r1, fp
   10cb4:	str	r8, [sp]
   10cb8:	mov	r0, r7
   10cbc:	bl	10a1c <dtoverlay_apply_override@plt>
   10cc0:	rsbs	r3, r0, #1
   10cc4:	movcc	r3, #0
   10cc8:	cmp	r5, r4
   10ccc:	movle	r2, #0
   10cd0:	andgt	r2, r3, #1
   10cd4:	cmp	r2, #0
   10cd8:	bne	10c54 <main@@Base+0x214>
   10cdc:	mov	r8, r0
   10ce0:	cmp	sl, r7
   10ce4:	moveq	r3, #0
   10ce8:	andne	r3, r3, #1
   10cec:	cmp	r3, #0
   10cf0:	bne	10de0 <main@@Base+0x3a0>
   10cf4:	cmp	r8, #0
   10cf8:	beq	10db0 <main@@Base+0x370>
   10cfc:	mov	r0, sl
   10d00:	bl	109f8 <dtoverlay_free_dtb@plt>
   10d04:	ldr	r1, [pc, #396]	; 10e98 <main@@Base+0x458>
   10d08:	mov	r0, #1
   10d0c:	mov	r2, r8
   10d10:	add	r1, pc, r1
   10d14:	bl	10a10 <__printf_chk@plt>
   10d18:	mov	r0, r8
   10d1c:	ldr	r1, [sp, #16]
   10d20:	ldr	r2, [sp, #36]	; 0x24
   10d24:	ldr	r3, [r1]
   10d28:	cmp	r2, r3
   10d2c:	bne	10e50 <main@@Base+0x410>
   10d30:	add	sp, sp, #44	; 0x2c
   10d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d38:	mov	r0, r7
   10d3c:	movw	r1, #34464	; 0x86a0
   10d40:	movt	r1, #1
   10d44:	bl	109c8 <dtoverlay_load_dtb@plt>
   10d48:	subs	r7, r0, #0
   10d4c:	beq	10e14 <main@@Base+0x3d4>
   10d50:	mov	r0, sl
   10d54:	mov	r1, r7
   10d58:	bl	1098c <dtoverlay_fixup_overlay@plt>
   10d5c:	mov	r8, r0
   10d60:	b	10c10 <main@@Base+0x1d0>
   10d64:	mov	r8, fp
   10d68:	mov	r2, #0
   10d6c:	add	r8, r8, #1
   10d70:	strb	r2, [r8, #-1]
   10d74:	b	10c94 <main@@Base+0x254>
   10d78:	mov	r2, r9
   10d7c:	mov	r0, sl
   10d80:	mov	r1, fp
   10d84:	bl	10998 <dtoverlay_find_override@plt>
   10d88:	subs	r2, r0, #0
   10d8c:	beq	10e1c <main@@Base+0x3dc>
   10d90:	ldr	r3, [sp, #32]
   10d94:	mov	r1, fp
   10d98:	str	r8, [sp]
   10d9c:	mov	r0, sl
   10da0:	bl	10a1c <dtoverlay_apply_override@plt>
   10da4:	b	10cc0 <main@@Base+0x280>
   10da8:	ldr	r8, [sp, #20]
   10dac:	b	10c94 <main@@Base+0x254>
   10db0:	mov	r0, sl
   10db4:	bl	10980 <dtoverlay_pack_dtb@plt>
   10db8:	ldr	r1, [sp, #24]
   10dbc:	mov	r0, sl
   10dc0:	bl	10a04 <dtoverlay_save_dtb@plt>
   10dc4:	mov	r8, r0
   10dc8:	mov	r0, sl
   10dcc:	bl	109f8 <dtoverlay_free_dtb@plt>
   10dd0:	cmp	r8, #0
   10dd4:	moveq	r0, r8
   10dd8:	beq	10d1c <main@@Base+0x2dc>
   10ddc:	b	10d04 <main@@Base+0x2c4>
   10de0:	mov	r0, sl
   10de4:	mov	r1, r7
   10de8:	bl	10968 <dtoverlay_merge_overlay@plt>
   10dec:	mov	r8, r0
   10df0:	mov	r0, r7
   10df4:	bl	109f8 <dtoverlay_free_dtb@plt>
   10df8:	b	10cf4 <main@@Base+0x2b4>
   10dfc:	ldr	r1, [pc, #152]	; 10e9c <main@@Base+0x45c>
   10e00:	mov	r2, r6
   10e04:	mov	r0, #1
   10e08:	add	r1, pc, r1
   10e0c:	bl	10a10 <__printf_chk@plt>
   10e10:	b	10b18 <main@@Base+0xd8>
   10e14:	mvn	r8, #0
   10e18:	b	10cfc <main@@Base+0x2bc>
   10e1c:	mov	r2, fp
   10e20:	mov	r0, #1
   10e24:	ldr	r1, [sp, #28]
   10e28:	bl	10a10 <__printf_chk@plt>
   10e2c:	ldr	r0, [sp, #32]
   10e30:	b	10cc0 <main@@Base+0x280>
   10e34:	ldr	r1, [pc, #100]	; 10ea0 <main@@Base+0x460>
   10e38:	mov	r2, r9
   10e3c:	mov	r0, #1
   10e40:	add	r1, pc, r1
   10e44:	bl	10a10 <__printf_chk@plt>
   10e48:	mvn	r0, #0
   10e4c:	b	10d1c <main@@Base+0x2dc>
   10e50:	bl	109a4 <__stack_chk_fail@plt>
   10e54:	andeq	r1, r1, ip, lsr #11
   10e58:	andeq	r0, r0, r4, asr r0
   10e5c:	andeq	r0, r0, r4, asr #15
   10e60:	andeq	r0, r0, r8, asr r7
   10e64:	andeq	r0, r0, r0, lsr r7
   10e68:	andeq	r0, r0, r4, lsr #14
   10e6c:	andeq	r0, r0, r0, asr r7
   10e70:	andeq	r0, r0, r4, lsl r7
   10e74:	andeq	r0, r0, r8, lsl #14
   10e78:	andeq	r0, r0, ip, lsl #14
   10e7c:	andeq	r0, r0, r0, lsl #14
   10e80:	andeq	r0, r0, ip, lsl #14
   10e84:	andeq	r0, r0, ip, lsl #14
   10e88:	andeq	r0, r0, r8, lsl r7
   10e8c:	andeq	r0, r0, r4, lsl r6
   10e90:	andeq	r0, r0, r0, lsl r6
   10e94:	andeq	r0, r0, r8, asr #13
   10e98:	andeq	r0, r0, r8, lsl r6
   10e9c:	andeq	r0, r0, r0, ror #8
   10ea0:	andeq	r0, r0, r0, asr #8

00010ea4 <_start@@Base>:
   10ea4:	mov	fp, #0
   10ea8:	mov	lr, #0
   10eac:	pop	{r1}		; (ldr r1, [sp], #4)
   10eb0:	mov	r2, sp
   10eb4:	push	{r2}		; (str r2, [sp, #-4]!)
   10eb8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ebc:	ldr	ip, [pc, #16]	; 10ed4 <_start@@Base+0x30>
   10ec0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ec4:	ldr	r0, [pc, #12]	; 10ed8 <_start@@Base+0x34>
   10ec8:	ldr	r3, [pc, #12]	; 10edc <_start@@Base+0x38>
   10ecc:	bl	109d4 <__libc_start_main@plt>
   10ed0:	bl	10a34 <abort@plt>
   10ed4:	andeq	r1, r1, r8, asr #1
   10ed8:	andeq	r0, r1, r0, asr #20
   10edc:	andeq	r1, r1, r4, rrx
   10ee0:	ldr	r3, [pc, #20]	; 10efc <_start@@Base+0x58>
   10ee4:	ldr	r2, [pc, #20]	; 10f00 <_start@@Base+0x5c>
   10ee8:	add	r3, pc, r3
   10eec:	ldr	r2, [r3, r2]
   10ef0:	cmp	r2, #0
   10ef4:	bxeq	lr
   10ef8:	b	109e0 <__gmon_start__@plt>
   10efc:	andeq	r1, r1, r0, lsl r1
   10f00:	andeq	r0, r0, r8, asr r0
   10f04:	push	{r3, lr}
   10f08:	movw	r0, #8288	; 0x2060
   10f0c:	ldr	r3, [pc, #36]	; 10f38 <_start@@Base+0x94>
   10f10:	movt	r0, #2
   10f14:	rsb	r3, r0, r3
   10f18:	cmp	r3, #6
   10f1c:	popls	{r3, pc}
   10f20:	movw	r3, #0
   10f24:	movt	r3, #0
   10f28:	cmp	r3, #0
   10f2c:	popeq	{r3, pc}
   10f30:	blx	r3
   10f34:	pop	{r3, pc}
   10f38:	andeq	r2, r2, r3, rrx
   10f3c:	push	{r3, lr}
   10f40:	movw	r0, #8288	; 0x2060
   10f44:	movw	r3, #8288	; 0x2060
   10f48:	movt	r0, #2
   10f4c:	movt	r3, #2
   10f50:	rsb	r3, r0, r3
   10f54:	asr	r3, r3, #2
   10f58:	add	r3, r3, r3, lsr #31
   10f5c:	asrs	r1, r3, #1
   10f60:	popeq	{r3, pc}
   10f64:	movw	r2, #0
   10f68:	movt	r2, #0
   10f6c:	cmp	r2, #0
   10f70:	popeq	{r3, pc}
   10f74:	blx	r2
   10f78:	pop	{r3, pc}
   10f7c:	push	{r4, lr}
   10f80:	movw	r4, #8288	; 0x2060
   10f84:	movt	r4, #2
   10f88:	ldrb	r3, [r4]
   10f8c:	cmp	r3, #0
   10f90:	popne	{r4, pc}
   10f94:	bl	10f04 <_start@@Base+0x60>
   10f98:	mov	r3, #1
   10f9c:	strb	r3, [r4]
   10fa0:	pop	{r4, pc}
   10fa4:	movw	r0, #7924	; 0x1ef4
   10fa8:	movt	r0, #2
   10fac:	push	{r3, lr}
   10fb0:	ldr	r3, [r0]
   10fb4:	cmp	r3, #0
   10fb8:	beq	10fd0 <_start@@Base+0x12c>
   10fbc:	movw	r3, #0
   10fc0:	movt	r3, #0
   10fc4:	cmp	r3, #0
   10fc8:	beq	10fd0 <_start@@Base+0x12c>
   10fcc:	blx	r3
   10fd0:	pop	{r3, lr}
   10fd4:	b	10f3c <_start@@Base+0x98>
   10fd8:	ldr	r0, [pc, #100]	; 11044 <_start@@Base+0x1a0>
   10fdc:	push	{r3, lr}
   10fe0:	add	r0, pc, r0
   10fe4:	bl	109bc <puts@plt>
   10fe8:	ldr	r0, [pc, #88]	; 11048 <_start@@Base+0x1a4>
   10fec:	add	r0, pc, r0
   10ff0:	bl	109bc <puts@plt>
   10ff4:	ldr	r0, [pc, #80]	; 1104c <_start@@Base+0x1a8>
   10ff8:	add	r0, pc, r0
   10ffc:	bl	109bc <puts@plt>
   11000:	ldr	r0, [pc, #72]	; 11050 <_start@@Base+0x1ac>
   11004:	add	r0, pc, r0
   11008:	bl	109bc <puts@plt>
   1100c:	ldr	r0, [pc, #64]	; 11054 <_start@@Base+0x1b0>
   11010:	add	r0, pc, r0
   11014:	bl	109bc <puts@plt>
   11018:	ldr	r0, [pc, #56]	; 11058 <_start@@Base+0x1b4>
   1101c:	add	r0, pc, r0
   11020:	bl	109bc <puts@plt>
   11024:	ldr	r0, [pc, #48]	; 1105c <_start@@Base+0x1b8>
   11028:	add	r0, pc, r0
   1102c:	bl	109bc <puts@plt>
   11030:	ldr	r0, [pc, #40]	; 11060 <_start@@Base+0x1bc>
   11034:	add	r0, pc, r0
   11038:	bl	109bc <puts@plt>
   1103c:	mov	r0, #1
   11040:	bl	109ec <exit@plt>
   11044:	strdeq	r0, [r0], -r4
   11048:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1104c:	andeq	r0, r0, r8, lsr #2
   11050:	andeq	r0, r0, r8, asr r1
   11054:	muleq	r0, ip, r1
   11058:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1105c:	andeq	r0, r0, r4, ror #3
   11060:	strdeq	r0, [r0], -r8

00011064 <__libc_csu_init@@Base>:
   11064:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11068:	mov	r7, r0
   1106c:	ldr	r6, [pc, #76]	; 110c0 <__libc_csu_init@@Base+0x5c>
   11070:	mov	r8, r1
   11074:	ldr	r5, [pc, #72]	; 110c4 <__libc_csu_init@@Base+0x60>
   11078:	mov	r9, r2
   1107c:	add	r6, pc, r6
   11080:	bl	10948 <_init@@Base>
   11084:	add	r5, pc, r5
   11088:	rsb	r6, r5, r6
   1108c:	asrs	r6, r6, #2
   11090:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11094:	sub	r5, r5, #4
   11098:	mov	r4, #0
   1109c:	add	r4, r4, #1
   110a0:	ldr	r3, [r5, #4]!
   110a4:	mov	r0, r7
   110a8:	mov	r1, r8
   110ac:	mov	r2, r9
   110b0:	blx	r3
   110b4:	cmp	r4, r6
   110b8:	bne	1109c <__libc_csu_init@@Base+0x38>
   110bc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   110c0:	andeq	r0, r1, ip, ror #28
   110c4:	andeq	r0, r1, r0, ror #28

000110c8 <__libc_csu_fini@@Base>:
   110c8:	bx	lr

Disassembly of section .fini:

000110cc <_fini@@Base>:
   110cc:	push	{r3, lr}
   110d0:	pop	{r3, pc}
