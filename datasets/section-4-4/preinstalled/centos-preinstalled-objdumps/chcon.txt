
centos-preinstalled/chcon:     file format elf32-littlearm


Disassembly of section .init:

00011650 <_init@@Base>:
   11650:	push	{r3, lr}
   11654:	bl	12ac0 <__assert_fail@plt+0x1060>
   11658:	pop	{r3, pc}

Disassembly of section .plt:

0001165c <fdopen@plt-0x14>:
   1165c:	push	{lr}		; (str lr, [sp, #-4]!)
   11660:	ldr	lr, [pc, #4]	; 1166c <_init@@Base+0x1c>
   11664:	add	lr, pc, lr
   11668:	ldr	pc, [lr, #8]!
   1166c:	muleq	r1, r4, r9

00011670 <fdopen@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #110592	; 0x1b000
   11678:	ldr	pc, [ip, #2452]!	; 0x994

0001167c <fstatfs64@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #110592	; 0x1b000
   11684:	ldr	pc, [ip, #2444]!	; 0x98c

00011688 <calloc@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #110592	; 0x1b000
   11690:	ldr	pc, [ip, #2436]!	; 0x984

00011694 <fputs_unlocked@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #110592	; 0x1b000
   1169c:	ldr	pc, [ip, #2428]!	; 0x97c

000116a0 <raise@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #110592	; 0x1b000
   116a8:	ldr	pc, [ip, #2420]!	; 0x974

000116ac <strcmp@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #110592	; 0x1b000
   116b4:	ldr	pc, [ip, #2412]!	; 0x96c

000116b8 <fflush@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #110592	; 0x1b000
   116c0:	ldr	pc, [ip, #2404]!	; 0x964

000116c4 <lsetfilecon@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #110592	; 0x1b000
   116cc:	ldr	pc, [ip, #2396]!	; 0x95c

000116d0 <memmove@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #110592	; 0x1b000
   116d8:	ldr	pc, [ip, #2388]!	; 0x954

000116dc <free@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #110592	; 0x1b000
   116e4:	ldr	pc, [ip, #2380]!	; 0x94c

000116e8 <_exit@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #110592	; 0x1b000
   116f0:	ldr	pc, [ip, #2372]!	; 0x944

000116f4 <memcpy@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #110592	; 0x1b000
   116fc:	ldr	pc, [ip, #2364]!	; 0x93c

00011700 <mbsinit@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #110592	; 0x1b000
   11708:	ldr	pc, [ip, #2356]!	; 0x934

0001170c <context_new@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #110592	; 0x1b000
   11714:	ldr	pc, [ip, #2348]!	; 0x92c

00011718 <memcmp@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #110592	; 0x1b000
   11720:	ldr	pc, [ip, #2340]!	; 0x924

00011724 <context_role_set@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #110592	; 0x1b000
   1172c:	ldr	pc, [ip, #2332]!	; 0x91c

00011730 <dcgettext@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #110592	; 0x1b000
   11738:	ldr	pc, [ip, #2324]!	; 0x914

0001173c <__stack_chk_fail@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #110592	; 0x1b000
   11744:	ldr	pc, [ip, #2316]!	; 0x90c

00011748 <context_type_set@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #110592	; 0x1b000
   11750:	ldr	pc, [ip, #2308]!	; 0x904

00011754 <realloc@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #110592	; 0x1b000
   1175c:	ldr	pc, [ip, #2300]!	; 0x8fc

00011760 <fgetfilecon@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #110592	; 0x1b000
   11768:	ldr	pc, [ip, #2292]!	; 0x8f4

0001176c <textdomain@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #110592	; 0x1b000
   11774:	ldr	pc, [ip, #2284]!	; 0x8ec

00011778 <chdir@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #110592	; 0x1b000
   11780:	ldr	pc, [ip, #2276]!	; 0x8e4

00011784 <__fxstatat64@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #110592	; 0x1b000
   1178c:	ldr	pc, [ip, #2268]!	; 0x8dc

00011790 <iswprint@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #110592	; 0x1b000
   11798:	ldr	pc, [ip, #2260]!	; 0x8d4

0001179c <__fxstat64@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #110592	; 0x1b000
   117a4:	ldr	pc, [ip, #2252]!	; 0x8cc

000117a8 <fwrite@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #110592	; 0x1b000
   117b0:	ldr	pc, [ip, #2244]!	; 0x8c4

000117b4 <lseek64@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #110592	; 0x1b000
   117bc:	ldr	pc, [ip, #2236]!	; 0x8bc

000117c0 <__ctype_get_mb_cur_max@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #110592	; 0x1b000
   117c8:	ldr	pc, [ip, #2228]!	; 0x8b4

000117cc <strcpy@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #110592	; 0x1b000
   117d4:	ldr	pc, [ip, #2220]!	; 0x8ac

000117d8 <__fpending@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #110592	; 0x1b000
   117e0:	ldr	pc, [ip, #2212]!	; 0x8a4

000117e4 <mbrtowc@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #110592	; 0x1b000
   117ec:	ldr	pc, [ip, #2204]!	; 0x89c

000117f0 <error@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #110592	; 0x1b000
   117f8:	ldr	pc, [ip, #2196]!	; 0x894

000117fc <open64@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #110592	; 0x1b000
   11804:	ldr	pc, [ip, #2188]!	; 0x88c

00011808 <getenv@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #110592	; 0x1b000
   11810:	ldr	pc, [ip, #2180]!	; 0x884

00011814 <lgetfilecon@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #110592	; 0x1b000
   1181c:	ldr	pc, [ip, #2172]!	; 0x87c

00011820 <malloc@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #110592	; 0x1b000
   11828:	ldr	pc, [ip, #2164]!	; 0x874

0001182c <__libc_start_main@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #110592	; 0x1b000
   11834:	ldr	pc, [ip, #2156]!	; 0x86c

00011838 <__freading@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #110592	; 0x1b000
   11840:	ldr	pc, [ip, #2148]!	; 0x864

00011844 <__gmon_start__@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #110592	; 0x1b000
   1184c:	ldr	pc, [ip, #2140]!	; 0x85c

00011850 <context_free@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #110592	; 0x1b000
   11858:	ldr	pc, [ip, #2132]!	; 0x854

0001185c <getopt_long@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #110592	; 0x1b000
   11864:	ldr	pc, [ip, #2124]!	; 0x84c

00011868 <__ctype_b_loc@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #110592	; 0x1b000
   11870:	ldr	pc, [ip, #2116]!	; 0x844

00011874 <getcwd@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #110592	; 0x1b000
   1187c:	ldr	pc, [ip, #2108]!	; 0x83c

00011880 <exit@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #110592	; 0x1b000
   11888:	ldr	pc, [ip, #2100]!	; 0x834

0001188c <context_user_set@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #110592	; 0x1b000
   11894:	ldr	pc, [ip, #2092]!	; 0x82c

00011898 <getfilecon@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #110592	; 0x1b000
   118a0:	ldr	pc, [ip, #2084]!	; 0x824

000118a4 <strlen@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #110592	; 0x1b000
   118ac:	ldr	pc, [ip, #2076]!	; 0x81c

000118b0 <openat64@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #110592	; 0x1b000
   118b8:	ldr	pc, [ip, #2068]!	; 0x814

000118bc <memrchr@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #110592	; 0x1b000
   118c4:	ldr	pc, [ip, #2060]!	; 0x80c

000118c8 <ungetc@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #110592	; 0x1b000
   118d0:	ldr	pc, [ip, #2052]!	; 0x804

000118d4 <fcntl@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #110592	; 0x1b000
   118dc:	ldr	pc, [ip, #2044]!	; 0x7fc

000118e0 <__errno_location@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #110592	; 0x1b000
   118e8:	ldr	pc, [ip, #2036]!	; 0x7f4

000118ec <__sprintf_chk@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #110592	; 0x1b000
   118f4:	ldr	pc, [ip, #2028]!	; 0x7ec

000118f8 <__cxa_atexit@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #110592	; 0x1b000
   11900:	ldr	pc, [ip, #2020]!	; 0x7e4

00011904 <memset@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #110592	; 0x1b000
   1190c:	ldr	pc, [ip, #2012]!	; 0x7dc

00011910 <fscanf@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #110592	; 0x1b000
   11918:	ldr	pc, [ip, #2004]!	; 0x7d4

0001191c <__printf_chk@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #110592	; 0x1b000
   11924:	ldr	pc, [ip, #1996]!	; 0x7cc

00011928 <fileno@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #110592	; 0x1b000
   11930:	ldr	pc, [ip, #1988]!	; 0x7c4

00011934 <__fprintf_chk@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #110592	; 0x1b000
   1193c:	ldr	pc, [ip, #1980]!	; 0x7bc

00011940 <memchr@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #110592	; 0x1b000
   11948:	ldr	pc, [ip, #1972]!	; 0x7b4

0001194c <setfilecon@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #110592	; 0x1b000
   11954:	ldr	pc, [ip, #1964]!	; 0x7ac

00011958 <access@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #110592	; 0x1b000
   11960:	ldr	pc, [ip, #1956]!	; 0x7a4

00011964 <fclose@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #110592	; 0x1b000
   1196c:	ldr	pc, [ip, #1948]!	; 0x79c

00011970 <fseeko64@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #110592	; 0x1b000
   11978:	ldr	pc, [ip, #1940]!	; 0x794

0001197c <__uflow@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #110592	; 0x1b000
   11984:	ldr	pc, [ip, #1932]!	; 0x78c

00011988 <setlocale@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #110592	; 0x1b000
   11990:	ldr	pc, [ip, #1924]!	; 0x784

00011994 <strrchr@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #110592	; 0x1b000
   1199c:	ldr	pc, [ip, #1916]!	; 0x77c

000119a0 <nl_langinfo@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #110592	; 0x1b000
   119a8:	ldr	pc, [ip, #1908]!	; 0x774

000119ac <readdir64@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #110592	; 0x1b000
   119b4:	ldr	pc, [ip, #1900]!	; 0x76c

000119b8 <fdopendir@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #110592	; 0x1b000
   119c0:	ldr	pc, [ip, #1892]!	; 0x764

000119c4 <dirfd@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #110592	; 0x1b000
   119cc:	ldr	pc, [ip, #1884]!	; 0x75c

000119d0 <fchdir@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #110592	; 0x1b000
   119d8:	ldr	pc, [ip, #1876]!	; 0x754

000119dc <qsort@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #110592	; 0x1b000
   119e4:	ldr	pc, [ip, #1868]!	; 0x74c

000119e8 <freecon@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #110592	; 0x1b000
   119f0:	ldr	pc, [ip, #1860]!	; 0x744

000119f4 <bindtextdomain@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #110592	; 0x1b000
   119fc:	ldr	pc, [ip, #1852]!	; 0x73c

00011a00 <context_range_set@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #110592	; 0x1b000
   11a08:	ldr	pc, [ip, #1844]!	; 0x734

00011a0c <context_str@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #110592	; 0x1b000
   11a14:	ldr	pc, [ip, #1836]!	; 0x72c

00011a18 <__xstat64@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #110592	; 0x1b000
   11a20:	ldr	pc, [ip, #1828]!	; 0x724

00011a24 <strncmp@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #110592	; 0x1b000
   11a2c:	ldr	pc, [ip, #1820]!	; 0x71c

00011a30 <abort@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #110592	; 0x1b000
   11a38:	ldr	pc, [ip, #1812]!	; 0x714

00011a3c <close@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #110592	; 0x1b000
   11a44:	ldr	pc, [ip, #1804]!	; 0x70c

00011a48 <__lxstat64@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #110592	; 0x1b000
   11a50:	ldr	pc, [ip, #1796]!	; 0x704

00011a54 <closedir@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #110592	; 0x1b000
   11a5c:	ldr	pc, [ip, #1788]!	; 0x6fc

00011a60 <__assert_fail@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #110592	; 0x1b000
   11a68:	ldr	pc, [ip, #1780]!	; 0x6f4

Disassembly of section .text:

00011a70 <close_stdout@@Base-0x1458>:
   11a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a74:	mov	r4, r1
   11a78:	ldr	r6, [pc, #3792]	; 12950 <__assert_fail@plt+0xef0>
   11a7c:	sub	sp, sp, #76	; 0x4c
   11a80:	ldr	r1, [pc, #3788]	; 12954 <__assert_fail@plt+0xef4>
   11a84:	mov	r2, #0
   11a88:	add	r6, pc, r6
   11a8c:	mov	r7, r2
   11a90:	mov	r8, r2
   11a94:	ldr	r3, [pc, #3772]	; 12958 <__assert_fail@plt+0xef8>
   11a98:	ldr	r1, [r6, r1]
   11a9c:	mov	r5, r0
   11aa0:	str	r2, [sp, #60]	; 0x3c
   11aa4:	add	r3, pc, r3
   11aa8:	str	r2, [sp, #28]
   11aac:	mvn	sl, #0
   11ab0:	ldr	r2, [r1]
   11ab4:	mov	r9, #16
   11ab8:	ldr	r1, [pc, #3740]	; 1295c <__assert_fail@plt+0xefc>
   11abc:	ldr	r0, [r4]
   11ac0:	str	r3, [sp, #36]	; 0x24
   11ac4:	add	r1, pc, r1
   11ac8:	str	r2, [sp, #68]	; 0x44
   11acc:	str	r1, [sp, #32]
   11ad0:	bl	13084 <close_stdout@@Base+0x1bc>
   11ad4:	ldr	r1, [pc, #3716]	; 12960 <__assert_fail@plt+0xf00>
   11ad8:	mov	r0, #6
   11adc:	ldr	fp, [pc, #3712]	; 12964 <__assert_fail@plt+0xf04>
   11ae0:	add	r1, pc, r1
   11ae4:	bl	11988 <setlocale@plt>
   11ae8:	add	fp, pc, fp
   11aec:	ldr	r1, [pc, #3700]	; 12968 <__assert_fail@plt+0xf08>
   11af0:	mov	r0, fp
   11af4:	add	r1, pc, r1
   11af8:	bl	119f4 <bindtextdomain@plt>
   11afc:	mov	r0, fp
   11b00:	bl	1176c <textdomain@plt>
   11b04:	ldr	r3, [pc, #3680]	; 1296c <__assert_fail@plt+0xf0c>
   11b08:	ldr	r1, [pc, #3680]	; 12970 <__assert_fail@plt+0xf10>
   11b0c:	ldr	r2, [pc, #3680]	; 12974 <__assert_fail@plt+0xf14>
   11b10:	add	r1, pc, r1
   11b14:	str	r1, [sp, #40]	; 0x28
   11b18:	add	r2, pc, r2
   11b1c:	ldr	r1, [pc, #3668]	; 12978 <__assert_fail@plt+0xf18>
   11b20:	str	r2, [sp, #44]	; 0x2c
   11b24:	ldr	r0, [r6, r3]
   11b28:	add	r1, pc, r1
   11b2c:	ldr	r3, [pc, #3656]	; 1297c <__assert_fail@plt+0xf1c>
   11b30:	str	r1, [sp, #52]	; 0x34
   11b34:	add	r3, pc, r3
   11b38:	str	r3, [sp, #48]	; 0x30
   11b3c:	bl	1aadc <fts_children@@Base+0x381c>
   11b40:	ldr	r2, [pc, #3640]	; 12980 <__assert_fail@plt+0xf20>
   11b44:	mov	fp, #0
   11b48:	ldr	r3, [pc, #3636]	; 12984 <__assert_fail@plt+0xf24>
   11b4c:	mov	r0, r5
   11b50:	str	fp, [sp]
   11b54:	mov	r1, r4
   11b58:	add	r2, pc, r2
   11b5c:	add	r3, pc, r3
   11b60:	bl	1185c <getopt_long@plt>
   11b64:	cmn	r0, #1
   11b68:	beq	11d44 <__assert_fail@plt+0x2e4>
   11b6c:	cmp	r0, #108	; 0x6c
   11b70:	beq	11d28 <__assert_fail@plt+0x2c8>
   11b74:	bgt	11ba8 <__assert_fail@plt+0x148>
   11b78:	cmp	r0, #76	; 0x4c
   11b7c:	beq	11d20 <__assert_fail@plt+0x2c0>
   11b80:	ble	11bec <__assert_fail@plt+0x18c>
   11b84:	cmp	r0, #82	; 0x52
   11b88:	beq	11d10 <__assert_fail@plt+0x2b0>
   11b8c:	ble	11c7c <__assert_fail@plt+0x21c>
   11b90:	cmp	r0, #102	; 0x66
   11b94:	beq	11b40 <__assert_fail@plt+0xe0>
   11b98:	cmp	r0, #104	; 0x68
   11b9c:	bne	11c04 <__assert_fail@plt+0x1a4>
   11ba0:	mov	sl, fp
   11ba4:	b	11b40 <__assert_fail@plt+0xe0>
   11ba8:	cmp	r0, #118	; 0x76
   11bac:	beq	11d00 <__assert_fail@plt+0x2a0>
   11bb0:	ble	11c0c <__assert_fail@plt+0x1ac>
   11bb4:	movw	r3, #257	; 0x101
   11bb8:	cmp	r0, r3
   11bbc:	beq	11cf8 <__assert_fail@plt+0x298>
   11bc0:	ble	11c6c <__assert_fail@plt+0x20c>
   11bc4:	movw	r3, #258	; 0x102
   11bc8:	cmp	r0, r3
   11bcc:	beq	11c3c <__assert_fail@plt+0x1dc>
   11bd0:	add	r3, r3, #1
   11bd4:	cmp	r0, r3
   11bd8:	bne	11c04 <__assert_fail@plt+0x1a4>
   11bdc:	ldr	r3, [pc, #3492]	; 12988 <__assert_fail@plt+0xf28>
   11be0:	ldr	r3, [r6, r3]
   11be4:	ldr	r7, [r3]
   11be8:	b	11b40 <__assert_fail@plt+0xe0>
   11bec:	cmn	r0, #2
   11bf0:	beq	11cf0 <__assert_fail@plt+0x290>
   11bf4:	cmp	r0, #72	; 0x48
   11bf8:	beq	11c64 <__assert_fail@plt+0x204>
   11bfc:	cmn	r0, #3
   11c00:	beq	11c8c <__assert_fail@plt+0x22c>
   11c04:	mov	r0, #1
   11c08:	bl	12bb8 <__assert_fail@plt+0x1158>
   11c0c:	cmp	r0, #116	; 0x74
   11c10:	beq	11cd4 <__assert_fail@plt+0x274>
   11c14:	bgt	11c48 <__assert_fail@plt+0x1e8>
   11c18:	cmp	r0, #114	; 0x72
   11c1c:	bne	11c04 <__assert_fail@plt+0x1a4>
   11c20:	ldr	r3, [pc, #3424]	; 12988 <__assert_fail@plt+0xf28>
   11c24:	mov	r8, #1
   11c28:	ldr	r2, [sp, #48]	; 0x30
   11c2c:	ldr	r3, [r6, r3]
   11c30:	ldr	r3, [r3]
   11c34:	str	r3, [r2, #8]
   11c38:	b	11b40 <__assert_fail@plt+0xe0>
   11c3c:	mov	r2, #1
   11c40:	str	r2, [sp, #28]
   11c44:	b	11b40 <__assert_fail@plt+0xe0>
   11c48:	ldr	r3, [pc, #3384]	; 12988 <__assert_fail@plt+0xf28>
   11c4c:	mov	r8, #1
   11c50:	ldr	r1, [sp, #44]	; 0x2c
   11c54:	ldr	r3, [r6, r3]
   11c58:	ldr	r3, [r3]
   11c5c:	str	r3, [r1, #4]
   11c60:	b	11b40 <__assert_fail@plt+0xe0>
   11c64:	mov	r9, #17
   11c68:	b	11b40 <__assert_fail@plt+0xe0>
   11c6c:	cmp	r0, #256	; 0x100
   11c70:	bne	11c04 <__assert_fail@plt+0x1a4>
   11c74:	mov	sl, #1
   11c78:	b	11b40 <__assert_fail@plt+0xe0>
   11c7c:	cmp	r0, #80	; 0x50
   11c80:	bne	11c04 <__assert_fail@plt+0x1a4>
   11c84:	mov	r9, #16
   11c88:	b	11b40 <__assert_fail@plt+0xe0>
   11c8c:	ldr	r2, [pc, #3320]	; 1298c <__assert_fail@plt+0xf2c>
   11c90:	ldr	r3, [pc, #3320]	; 12990 <__assert_fail@plt+0xf30>
   11c94:	ldr	r1, [pc, #3320]	; 12994 <__assert_fail@plt+0xf34>
   11c98:	ldr	r0, [r6, r2]
   11c9c:	ldr	r3, [r6, r3]
   11ca0:	add	r1, pc, r1
   11ca4:	ldr	r2, [pc, #3308]	; 12998 <__assert_fail@plt+0xf38>
   11ca8:	ldr	r0, [r0]
   11cac:	add	r2, pc, r2
   11cb0:	ldr	r3, [r3]
   11cb4:	stm	sp, {r1, r2, fp}
   11cb8:	ldr	r1, [pc, #3292]	; 1299c <__assert_fail@plt+0xf3c>
   11cbc:	ldr	r2, [pc, #3292]	; 129a0 <__assert_fail@plt+0xf40>
   11cc0:	add	r1, pc, r1
   11cc4:	add	r2, pc, r2
   11cc8:	bl	14dec <close_stdout@@Base+0x1f24>
   11ccc:	mov	r0, fp
   11cd0:	bl	11880 <exit@plt>
   11cd4:	ldr	r3, [pc, #3244]	; 12988 <__assert_fail@plt+0xf28>
   11cd8:	mov	r8, #1
   11cdc:	ldr	r1, [sp, #40]	; 0x28
   11ce0:	ldr	r3, [r6, r3]
   11ce4:	ldr	r3, [r3]
   11ce8:	str	r3, [r1, #12]
   11cec:	b	11b40 <__assert_fail@plt+0xe0>
   11cf0:	mov	r0, fp
   11cf4:	bl	12bb8 <__assert_fail@plt+0x1158>
   11cf8:	str	fp, [sp, #28]
   11cfc:	b	11b40 <__assert_fail@plt+0xe0>
   11d00:	ldr	r2, [sp, #36]	; 0x24
   11d04:	mov	r3, #1
   11d08:	strb	r3, [r2, #1]
   11d0c:	b	11b40 <__assert_fail@plt+0xe0>
   11d10:	ldr	r1, [sp, #52]	; 0x34
   11d14:	mov	r3, #1
   11d18:	strb	r3, [r1]
   11d1c:	b	11b40 <__assert_fail@plt+0xe0>
   11d20:	mov	r9, #2
   11d24:	b	11b40 <__assert_fail@plt+0xe0>
   11d28:	ldr	r3, [pc, #3160]	; 12988 <__assert_fail@plt+0xf28>
   11d2c:	mov	r8, #1
   11d30:	ldr	r2, [sp, #32]
   11d34:	ldr	r3, [r6, r3]
   11d38:	ldr	r3, [r3]
   11d3c:	str	r3, [r2, #16]
   11d40:	b	11b40 <__assert_fail@plt+0xe0>
   11d44:	ldr	r3, [pc, #3160]	; 129a4 <__assert_fail@plt+0xf44>
   11d48:	add	r3, pc, r3
   11d4c:	ldrb	r2, [r3]
   11d50:	cmp	r2, fp
   11d54:	beq	11d7c <__assert_fail@plt+0x31c>
   11d58:	cmp	r9, #16
   11d5c:	beq	121b4 <__assert_fail@plt+0x754>
   11d60:	cmp	sl, #0
   11d64:	beq	124b8 <__assert_fail@plt+0xa58>
   11d68:	ldr	r3, [pc, #3128]	; 129a8 <__assert_fail@plt+0xf48>
   11d6c:	mov	r2, #1
   11d70:	add	r3, pc, r3
   11d74:	strb	r2, [r3, #20]
   11d78:	b	11d8c <__assert_fail@plt+0x32c>
   11d7c:	adds	sl, sl, #0
   11d80:	mov	r9, #16
   11d84:	movne	sl, #1
   11d88:	strb	sl, [r3, #20]
   11d8c:	ldr	r3, [pc, #3096]	; 129ac <__assert_fail@plt+0xf4c>
   11d90:	adds	r2, r7, #0
   11d94:	movne	r2, #1
   11d98:	orrs	r1, r2, r8
   11d9c:	ldr	r6, [r6, r3]
   11da0:	movne	r0, #1
   11da4:	moveq	r0, #2
   11da8:	ldr	r3, [r6]
   11dac:	rsb	r1, r3, r5
   11db0:	cmp	r0, r1
   11db4:	ble	11de8 <__assert_fail@plt+0x388>
   11db8:	cmp	r5, r3
   11dbc:	mov	r0, #0
   11dc0:	bgt	12164 <__assert_fail@plt+0x704>
   11dc4:	ldr	r1, [pc, #3044]	; 129b0 <__assert_fail@plt+0xf50>
   11dc8:	add	r1, pc, r1
   11dcc:	mov	r2, #5
   11dd0:	bl	11730 <dcgettext@plt>
   11dd4:	mov	r2, r0
   11dd8:	mov	r0, #0
   11ddc:	mov	r1, r0
   11de0:	bl	117f0 <error@plt>
   11de4:	b	11c04 <__assert_fail@plt+0x1a4>
   11de8:	cmp	r2, #0
   11dec:	beq	1219c <__assert_fail@plt+0x73c>
   11df0:	mov	r0, r7
   11df4:	add	r1, sp, #60	; 0x3c
   11df8:	bl	17490 <fts_children@@Base+0x1d0>
   11dfc:	cmp	r0, #0
   11e00:	blt	12794 <__assert_fail@plt+0xd34>
   11e04:	ldr	r3, [pc, #2984]	; 129b4 <__assert_fail@plt+0xf54>
   11e08:	cmp	r8, #0
   11e0c:	ldr	r2, [sp, #60]	; 0x3c
   11e10:	add	r3, pc, r3
   11e14:	str	r2, [r3, #24]
   11e18:	bne	12424 <__assert_fail@plt+0x9c4>
   11e1c:	ldr	r5, [pc, #2964]	; 129b8 <__assert_fail@plt+0xf58>
   11e20:	add	r5, pc, r5
   11e24:	ldrb	r3, [r5]
   11e28:	cmp	r3, #0
   11e2c:	beq	11e3c <__assert_fail@plt+0x3dc>
   11e30:	ldr	r2, [sp, #28]
   11e34:	cmp	r2, #0
   11e38:	bne	12704 <__assert_fail@plt+0xca4>
   11e3c:	ldr	r3, [pc, #2936]	; 129bc <__assert_fail@plt+0xf5c>
   11e40:	mov	r2, #0
   11e44:	add	r3, pc, r3
   11e48:	str	r2, [r3, #48]	; 0x30
   11e4c:	ldr	r3, [pc, #2924]	; 129c0 <__assert_fail@plt+0xf60>
   11e50:	orr	r1, r9, #8
   11e54:	ldr	r0, [r6]
   11e58:	mov	r2, #0
   11e5c:	add	r3, pc, r3
   11e60:	str	r3, [sp, #32]
   11e64:	ldr	r3, [pc, #2904]	; 129c4 <__assert_fail@plt+0xf64>
   11e68:	mov	sl, #1
   11e6c:	add	r0, r4, r0, lsl #2
   11e70:	ldr	fp, [pc, #2896]	; 129c8 <__assert_fail@plt+0xf68>
   11e74:	add	r3, pc, r3
   11e78:	str	r3, [sp, #28]
   11e7c:	ldr	r3, [pc, #2888]	; 129cc <__assert_fail@plt+0xf6c>
   11e80:	add	fp, pc, fp
   11e84:	add	r3, pc, r3
   11e88:	str	r3, [sp, #36]	; 0x24
   11e8c:	bl	15168 <close_stdout@@Base+0x22a0>
   11e90:	ldr	r1, [pc, #2872]	; 129d0 <__assert_fail@plt+0xf70>
   11e94:	ldr	r2, [pc, #2872]	; 129d4 <__assert_fail@plt+0xf74>
   11e98:	add	r1, pc, r1
   11e9c:	str	r1, [sp, #44]	; 0x2c
   11ea0:	add	r2, pc, r2
   11ea4:	str	r2, [sp, #40]	; 0x28
   11ea8:	mov	r8, r0
   11eac:	mov	r0, r8
   11eb0:	bl	16a30 <fts_read@@Base>
   11eb4:	subs	r6, r0, #0
   11eb8:	beq	12320 <__assert_fail@plt+0x8c0>
   11ebc:	ldrh	r2, [r6, #60]	; 0x3c
   11ec0:	ldr	r7, [r6, #28]
   11ec4:	sub	r3, r2, #1
   11ec8:	ldr	r9, [r6, #24]
   11ecc:	cmp	r3, #9
   11ed0:	addls	pc, pc, r3, lsl #2
   11ed4:	b	12158 <__assert_fail@plt+0x6f8>
   11ed8:	b	1211c <__assert_fail@plt+0x6bc>
   11edc:	b	11f6c <__assert_fail@plt+0x50c>
   11ee0:	b	12158 <__assert_fail@plt+0x6f8>
   11ee4:	b	120e0 <__assert_fail@plt+0x680>
   11ee8:	b	12158 <__assert_fail@plt+0x6f8>
   11eec:	b	1201c <__assert_fail@plt+0x5bc>
   11ef0:	b	120f4 <__assert_fail@plt+0x694>
   11ef4:	b	12158 <__assert_fail@plt+0x6f8>
   11ef8:	b	12158 <__assert_fail@plt+0x6f8>
   11efc:	b	11f00 <__assert_fail@plt+0x4a0>
   11f00:	ldr	r3, [r6, #48]	; 0x30
   11f04:	cmp	r3, #0
   11f08:	bne	11f18 <__assert_fail@plt+0x4b8>
   11f0c:	ldr	r3, [r6, #16]
   11f10:	cmp	r3, #0
   11f14:	beq	12584 <__assert_fail@plt+0xb24>
   11f18:	ldr	r1, [pc, #2744]	; 129d8 <__assert_fail@plt+0xf78>
   11f1c:	mov	r0, #0
   11f20:	ldr	r4, [r6, #32]
   11f24:	add	r1, pc, r1
   11f28:	mov	r2, #5
   11f2c:	bl	11730 <dcgettext@plt>
   11f30:	mov	r5, r0
   11f34:	mov	r0, r7
   11f38:	bl	148d4 <close_stdout@@Base+0x1a0c>
   11f3c:	mov	r1, r4
   11f40:	mov	r2, r5
   11f44:	mov	r3, r0
   11f48:	mov	r0, #0
   11f4c:	bl	117f0 <error@plt>
   11f50:	mov	r4, #0
   11f54:	ldrb	r2, [fp]
   11f58:	cmp	r2, #0
   11f5c:	movne	r3, r4
   11f60:	beq	121d4 <__assert_fail@plt+0x774>
   11f64:	and	sl, r3, sl
   11f68:	b	11eac <__assert_fail@plt+0x44c>
   11f6c:	mov	r0, r8
   11f70:	mov	r1, r6
   11f74:	bl	151bc <close_stdout@@Base+0x22f4>
   11f78:	cmp	r0, #0
   11f7c:	bne	1247c <__assert_fail@plt+0xa1c>
   11f80:	ldr	r1, [sp, #32]
   11f84:	ldrb	r3, [r1, #1]
   11f88:	cmp	r3, #0
   11f8c:	bne	122e4 <__assert_fail@plt+0x884>
   11f90:	ldr	r2, [sp, #28]
   11f94:	mov	r3, #0
   11f98:	ldr	r5, [r8, #32]
   11f9c:	str	r3, [sp, #64]	; 0x40
   11fa0:	ldr	r0, [r2, #24]
   11fa4:	cmp	r0, r3
   11fa8:	beq	121ec <__assert_fail@plt+0x78c>
   11fac:	bl	1170c <context_new@plt>
   11fb0:	subs	r4, r0, #0
   11fb4:	beq	1294c <__assert_fail@plt+0xeec>
   11fb8:	mov	r0, r4
   11fbc:	bl	11a0c <context_str@plt>
   11fc0:	ldr	r1, [sp, #64]	; 0x40
   11fc4:	cmp	r1, #0
   11fc8:	mov	r7, r0
   11fcc:	beq	11fdc <__assert_fail@plt+0x57c>
   11fd0:	bl	116ac <strcmp@plt>
   11fd4:	cmp	r0, #0
   11fd8:	beq	12004 <__assert_fail@plt+0x5a4>
   11fdc:	ldr	r2, [sp, #36]	; 0x24
   11fe0:	mov	r0, r5
   11fe4:	mov	r1, r9
   11fe8:	ldrb	r3, [r2, #20]
   11fec:	mov	r2, r7
   11ff0:	cmp	r3, #0
   11ff4:	beq	12318 <__assert_fail@plt+0x8b8>
   11ff8:	bl	178b8 <fts_children@@Base+0x5f8>
   11ffc:	cmp	r0, #0
   12000:	bne	12358 <__assert_fail@plt+0x8f8>
   12004:	mov	r0, r4
   12008:	mov	r4, #1
   1200c:	bl	11850 <context_free@plt>
   12010:	ldr	r0, [sp, #64]	; 0x40
   12014:	bl	119e8 <freecon@plt>
   12018:	b	11f54 <__assert_fail@plt+0x4f4>
   1201c:	ldr	r3, [pc, #2488]	; 129dc <__assert_fail@plt+0xf7c>
   12020:	add	r3, pc, r3
   12024:	ldrb	r3, [r3]
   12028:	cmp	r3, #0
   1202c:	beq	12150 <__assert_fail@plt+0x6f0>
   12030:	ldr	r3, [pc, #2472]	; 129e0 <__assert_fail@plt+0xf80>
   12034:	add	r3, pc, r3
   12038:	ldr	r1, [r3, #48]	; 0x30
   1203c:	cmp	r1, #0
   12040:	beq	11f80 <__assert_fail@plt+0x520>
   12044:	ldrd	r4, [r6, #168]	; 0xa8
   12048:	ldrd	r2, [r1]
   1204c:	cmp	r5, r3
   12050:	cmpeq	r4, r2
   12054:	bne	11f80 <__assert_fail@plt+0x520>
   12058:	ldrd	r4, [r6, #72]	; 0x48
   1205c:	ldrd	r2, [r1, #8]
   12060:	cmp	r5, r3
   12064:	cmpeq	r4, r2
   12068:	bne	11f80 <__assert_fail@plt+0x520>
   1206c:	ldrb	r3, [r7]
   12070:	cmp	r3, #47	; 0x2f
   12074:	bne	128c4 <__assert_fail@plt+0xe64>
   12078:	ldrb	r4, [r7, #1]
   1207c:	cmp	r4, #0
   12080:	bne	128c4 <__assert_fail@plt+0xe64>
   12084:	ldr	r1, [pc, #2392]	; 129e4 <__assert_fail@plt+0xf84>
   12088:	mov	r2, #5
   1208c:	mov	r0, r4
   12090:	add	r1, pc, r1
   12094:	bl	11730 <dcgettext@plt>
   12098:	mov	r5, r0
   1209c:	mov	r0, r7
   120a0:	bl	148d4 <close_stdout@@Base+0x1a0c>
   120a4:	mov	r1, r4
   120a8:	mov	r2, r5
   120ac:	mov	r3, r0
   120b0:	mov	r0, r4
   120b4:	bl	117f0 <error@plt>
   120b8:	ldr	r1, [pc, #2344]	; 129e8 <__assert_fail@plt+0xf88>
   120bc:	mov	r2, #5
   120c0:	mov	r0, #0
   120c4:	add	r1, pc, r1
   120c8:	bl	11730 <dcgettext@plt>
   120cc:	mov	r2, r0
   120d0:	mov	r0, #0
   120d4:	mov	r1, r0
   120d8:	bl	117f0 <error@plt>
   120dc:	b	11f50 <__assert_fail@plt+0x4f0>
   120e0:	ldr	r1, [pc, #2308]	; 129ec <__assert_fail@plt+0xf8c>
   120e4:	mov	r0, #0
   120e8:	ldr	r4, [r6, #32]
   120ec:	add	r1, pc, r1
   120f0:	b	11f28 <__assert_fail@plt+0x4c8>
   120f4:	mov	r0, r7
   120f8:	ldr	r4, [r6, #32]
   120fc:	bl	148d4 <close_stdout@@Base+0x1a0c>
   12100:	ldr	r2, [pc, #2280]	; 129f0 <__assert_fail@plt+0xf90>
   12104:	mov	r1, r4
   12108:	add	r2, pc, r2
   1210c:	mov	r3, r0
   12110:	mov	r0, #0
   12114:	bl	117f0 <error@plt>
   12118:	b	11f50 <__assert_fail@plt+0x4f0>
   1211c:	ldr	r3, [pc, #2256]	; 129f4 <__assert_fail@plt+0xf94>
   12120:	add	r3, pc, r3
   12124:	ldrb	r2, [r3]
   12128:	cmp	r2, #0
   1212c:	beq	11f80 <__assert_fail@plt+0x520>
   12130:	ldr	ip, [r3, #48]	; 0x30
   12134:	cmp	ip, #0
   12138:	beq	12150 <__assert_fail@plt+0x6f0>
   1213c:	ldrd	r4, [r6, #168]	; 0xa8
   12140:	ldrd	r2, [ip]
   12144:	cmp	r5, r3
   12148:	cmpeq	r4, r2
   1214c:	beq	124e0 <__assert_fail@plt+0xa80>
   12150:	mov	r3, #1
   12154:	b	11f64 <__assert_fail@plt+0x504>
   12158:	cmp	r2, #6
   1215c:	bne	11f80 <__assert_fail@plt+0x520>
   12160:	b	12030 <__assert_fail@plt+0x5d0>
   12164:	ldr	r1, [pc, #2188]	; 129f8 <__assert_fail@plt+0xf98>
   12168:	mov	r2, #5
   1216c:	sub	r5, r5, #-1073741823	; 0xc0000001
   12170:	add	r1, pc, r1
   12174:	bl	11730 <dcgettext@plt>
   12178:	mov	r6, r0
   1217c:	ldr	r0, [r4, r5, lsl #2]
   12180:	bl	148d4 <close_stdout@@Base+0x1a0c>
   12184:	mov	r2, r6
   12188:	mov	r3, r0
   1218c:	mov	r0, #0
   12190:	mov	r1, r0
   12194:	bl	117f0 <error@plt>
   12198:	b	11c04 <__assert_fail@plt+0x1a4>
   1219c:	cmp	r8, #0
   121a0:	beq	12760 <__assert_fail@plt+0xd00>
   121a4:	ldr	r3, [pc, #2128]	; 129fc <__assert_fail@plt+0xf9c>
   121a8:	add	r3, pc, r3
   121ac:	str	r2, [r3, #24]
   121b0:	b	11e1c <__assert_fail@plt+0x3bc>
   121b4:	cmp	sl, #1
   121b8:	beq	12848 <__assert_fail@plt+0xde8>
   121bc:	ldr	r3, [pc, #2108]	; 12a00 <__assert_fail@plt+0xfa0>
   121c0:	mov	r2, #0
   121c4:	mov	r9, #16
   121c8:	add	r3, pc, r3
   121cc:	strb	r2, [r3, #20]
   121d0:	b	11d8c <__assert_fail@plt+0x32c>
   121d4:	mov	r1, r6
   121d8:	mov	r0, r8
   121dc:	mov	r2, #4
   121e0:	bl	17294 <fts_set@@Base>
   121e4:	mov	r3, r4
   121e8:	b	11f64 <__assert_fail@plt+0x504>
   121ec:	ldrb	r3, [r2, #20]
   121f0:	mov	r0, r5
   121f4:	mov	r1, r9
   121f8:	add	r2, sp, #64	; 0x40
   121fc:	cmp	r3, #0
   12200:	beq	12350 <__assert_fail@plt+0x8f0>
   12204:	bl	174d8 <fts_children@@Base+0x218>
   12208:	cmp	r0, #0
   1220c:	blt	12434 <__assert_fail@plt+0x9d4>
   12210:	ldr	r7, [sp, #64]	; 0x40
   12214:	subs	r0, r7, #0
   12218:	beq	127d4 <__assert_fail@plt+0xd74>
   1221c:	bl	1170c <context_new@plt>
   12220:	subs	r4, r0, #0
   12224:	beq	12808 <__assert_fail@plt+0xda8>
   12228:	ldr	r3, [sp, #40]	; 0x28
   1222c:	ldr	r1, [r3, #4]
   12230:	cmp	r1, #0
   12234:	beq	12244 <__assert_fail@plt+0x7e4>
   12238:	bl	1188c <context_user_set@plt>
   1223c:	cmp	r0, #0
   12240:	bne	126a8 <__assert_fail@plt+0xc48>
   12244:	mov	r7, #1
   12248:	ldr	r3, [pc, #1972]	; 12a04 <__assert_fail@plt+0xfa4>
   1224c:	add	r3, pc, r3
   12250:	ldr	r1, [r3, #16]
   12254:	cmp	r1, #0
   12258:	beq	12270 <__assert_fail@plt+0x810>
   1225c:	mov	r0, r4
   12260:	str	r3, [sp, #16]
   12264:	bl	11a00 <context_range_set@plt>
   12268:	cmp	r0, #0
   1226c:	bne	125a4 <__assert_fail@plt+0xb44>
   12270:	ldr	r3, [pc, #1936]	; 12a08 <__assert_fail@plt+0xfa8>
   12274:	add	r3, pc, r3
   12278:	ldr	r1, [r3, #8]
   1227c:	cmp	r1, #0
   12280:	beq	12298 <__assert_fail@plt+0x838>
   12284:	mov	r0, r4
   12288:	str	r3, [sp, #16]
   1228c:	bl	11724 <context_role_set@plt>
   12290:	cmp	r0, #0
   12294:	bne	12600 <__assert_fail@plt+0xba0>
   12298:	ldr	r3, [pc, #1900]	; 12a0c <__assert_fail@plt+0xfac>
   1229c:	add	r3, pc, r3
   122a0:	ldr	r1, [r3, #12]
   122a4:	cmp	r1, #0
   122a8:	beq	122c0 <__assert_fail@plt+0x860>
   122ac:	mov	r0, r4
   122b0:	str	r3, [sp, #16]
   122b4:	bl	11748 <context_type_set@plt>
   122b8:	cmp	r0, #0
   122bc:	bne	1265c <__assert_fail@plt+0xbfc>
   122c0:	cmp	r7, #0
   122c4:	bne	11fb8 <__assert_fail@plt+0x558>
   122c8:	bl	118e0 <__errno_location@plt>
   122cc:	ldr	r7, [r0]
   122d0:	mov	r5, r0
   122d4:	mov	r0, r4
   122d8:	bl	11850 <context_free@plt>
   122dc:	str	r7, [r5]
   122e0:	b	11f50 <__assert_fail@plt+0x4f0>
   122e4:	ldr	r1, [pc, #1828]	; 12a10 <__assert_fail@plt+0xfb0>
   122e8:	mov	r2, #5
   122ec:	mov	r0, #0
   122f0:	add	r1, pc, r1
   122f4:	bl	11730 <dcgettext@plt>
   122f8:	mov	r4, r0
   122fc:	mov	r0, r7
   12300:	bl	148d4 <close_stdout@@Base+0x1a0c>
   12304:	mov	r1, r4
   12308:	mov	r2, r0
   1230c:	mov	r0, #1
   12310:	bl	1191c <__printf_chk@plt>
   12314:	b	11f90 <__assert_fail@plt+0x530>
   12318:	bl	17aa8 <fts_children@@Base+0x7e8>
   1231c:	b	11ffc <__assert_fail@plt+0x59c>
   12320:	bl	118e0 <__errno_location@plt>
   12324:	ldr	r5, [r0]
   12328:	mov	r4, r0
   1232c:	cmp	r5, #0
   12330:	bne	123c0 <__assert_fail@plt+0x960>
   12334:	mov	r0, r8
   12338:	bl	168b8 <fts_close@@Base>
   1233c:	cmp	r0, #0
   12340:	bne	123f4 <__assert_fail@plt+0x994>
   12344:	cmp	sl, #0
   12348:	beq	1241c <__assert_fail@plt+0x9bc>
   1234c:	bl	11880 <exit@plt>
   12350:	bl	176c8 <fts_children@@Base+0x408>
   12354:	b	12208 <__assert_fail@plt+0x7a8>
   12358:	bl	118e0 <__errno_location@plt>
   1235c:	ldr	r1, [sp, #44]	; 0x2c
   12360:	mov	r2, #5
   12364:	ldr	r5, [r0]
   12368:	mov	r0, #0
   1236c:	bl	11730 <dcgettext@plt>
   12370:	mov	r1, r9
   12374:	mov	r2, r0
   12378:	mov	r0, #0
   1237c:	str	r2, [sp, #20]
   12380:	bl	148cc <close_stdout@@Base+0x1a04>
   12384:	mov	r1, r7
   12388:	mov	r9, r0
   1238c:	mov	r0, #1
   12390:	bl	148cc <close_stdout@@Base+0x1a04>
   12394:	mov	r1, r5
   12398:	ldr	r2, [sp, #20]
   1239c:	mov	r3, r9
   123a0:	str	r0, [sp]
   123a4:	mov	r0, #0
   123a8:	bl	117f0 <error@plt>
   123ac:	mov	r0, r4
   123b0:	bl	11850 <context_free@plt>
   123b4:	ldr	r0, [sp, #64]	; 0x40
   123b8:	bl	119e8 <freecon@plt>
   123bc:	b	11f50 <__assert_fail@plt+0x4f0>
   123c0:	ldr	r1, [pc, #1612]	; 12a14 <__assert_fail@plt+0xfb4>
   123c4:	mov	r2, #5
   123c8:	mov	r0, r6
   123cc:	add	r1, pc, r1
   123d0:	bl	11730 <dcgettext@plt>
   123d4:	mov	r1, r5
   123d8:	mov	r2, r0
   123dc:	mov	r0, r6
   123e0:	bl	117f0 <error@plt>
   123e4:	mov	r0, r8
   123e8:	bl	168b8 <fts_close@@Base>
   123ec:	cmp	r0, #0
   123f0:	beq	1241c <__assert_fail@plt+0x9bc>
   123f4:	ldr	r1, [pc, #1564]	; 12a18 <__assert_fail@plt+0xfb8>
   123f8:	mov	r2, #5
   123fc:	mov	r0, #0
   12400:	ldr	r4, [r4]
   12404:	add	r1, pc, r1
   12408:	bl	11730 <dcgettext@plt>
   1240c:	mov	r1, r4
   12410:	mov	r2, r0
   12414:	mov	r0, #0
   12418:	bl	117f0 <error@plt>
   1241c:	mov	r0, #1
   12420:	b	1234c <__assert_fail@plt+0x8ec>
   12424:	ldr	r1, [pc, #1520]	; 12a1c <__assert_fail@plt+0xfbc>
   12428:	mov	r0, #0
   1242c:	add	r1, pc, r1
   12430:	b	11dcc <__assert_fail@plt+0x36c>
   12434:	bl	118e0 <__errno_location@plt>
   12438:	ldr	r4, [r0]
   1243c:	cmp	r4, #61	; 0x3d
   12440:	beq	12210 <__assert_fail@plt+0x7b0>
   12444:	ldr	r1, [pc, #1492]	; 12a20 <__assert_fail@plt+0xfc0>
   12448:	mov	r2, #5
   1244c:	mov	r0, #0
   12450:	add	r1, pc, r1
   12454:	bl	11730 <dcgettext@plt>
   12458:	mov	r5, r0
   1245c:	mov	r0, r9
   12460:	bl	148d4 <close_stdout@@Base+0x1a0c>
   12464:	mov	r2, r5
   12468:	mov	r1, r4
   1246c:	mov	r3, r0
   12470:	mov	r0, #0
   12474:	bl	117f0 <error@plt>
   12478:	b	11f50 <__assert_fail@plt+0x4f0>
   1247c:	ldr	r1, [pc, #1440]	; 12a24 <__assert_fail@plt+0xfc4>
   12480:	mov	r2, #5
   12484:	mov	r0, #0
   12488:	add	r1, pc, r1
   1248c:	bl	11730 <dcgettext@plt>
   12490:	mov	r4, r0
   12494:	mov	r0, r7
   12498:	bl	148d4 <close_stdout@@Base+0x1a0c>
   1249c:	mov	r2, r4
   124a0:	mov	r3, r0
   124a4:	mov	r0, #0
   124a8:	mov	r1, r0
   124ac:	bl	117f0 <error@plt>
   124b0:	mov	r3, #0
   124b4:	b	11f64 <__assert_fail@plt+0x504>
   124b8:	ldr	r1, [pc, #1384]	; 12a28 <__assert_fail@plt+0xfc8>
   124bc:	mov	r0, sl
   124c0:	mov	r2, #5
   124c4:	add	r1, pc, r1
   124c8:	bl	11730 <dcgettext@plt>
   124cc:	mov	r1, sl
   124d0:	mov	r2, r0
   124d4:	mov	r0, #1
   124d8:	bl	117f0 <error@plt>
   124dc:	b	11d68 <__assert_fail@plt+0x308>
   124e0:	ldrd	r0, [r6, #72]	; 0x48
   124e4:	ldrd	r2, [ip, #8]
   124e8:	cmp	r1, r3
   124ec:	cmpeq	r0, r2
   124f0:	bne	12150 <__assert_fail@plt+0x6f0>
   124f4:	ldrb	r3, [r7]
   124f8:	cmp	r3, #47	; 0x2f
   124fc:	bne	12870 <__assert_fail@plt+0xe10>
   12500:	ldrb	r4, [r7, #1]
   12504:	cmp	r4, #0
   12508:	bne	12870 <__assert_fail@plt+0xe10>
   1250c:	ldr	r1, [pc, #1304]	; 12a2c <__assert_fail@plt+0xfcc>
   12510:	mov	r2, #5
   12514:	mov	r0, r4
   12518:	add	r1, pc, r1
   1251c:	bl	11730 <dcgettext@plt>
   12520:	mov	r5, r0
   12524:	mov	r0, r7
   12528:	bl	148d4 <close_stdout@@Base+0x1a0c>
   1252c:	mov	r1, r4
   12530:	mov	r2, r5
   12534:	mov	r3, r0
   12538:	mov	r0, r4
   1253c:	bl	117f0 <error@plt>
   12540:	ldr	r1, [pc, #1256]	; 12a30 <__assert_fail@plt+0xfd0>
   12544:	mov	r2, #5
   12548:	mov	r0, #0
   1254c:	add	r1, pc, r1
   12550:	bl	11730 <dcgettext@plt>
   12554:	mov	r2, r0
   12558:	mov	r0, #0
   1255c:	mov	r1, r0
   12560:	bl	117f0 <error@plt>
   12564:	mov	r1, r6
   12568:	mov	r2, #4
   1256c:	mov	r0, r8
   12570:	bl	17294 <fts_set@@Base>
   12574:	mov	r0, r8
   12578:	bl	16a30 <fts_read@@Base>
   1257c:	mov	r3, #0
   12580:	b	11f64 <__assert_fail@plt+0x504>
   12584:	mov	r4, #1
   12588:	mov	r1, r6
   1258c:	str	r4, [r6, #16]
   12590:	mov	r2, r4
   12594:	mov	r0, r8
   12598:	bl	17294 <fts_set@@Base>
   1259c:	mov	r3, r4
   125a0:	b	11f64 <__assert_fail@plt+0x504>
   125a4:	bl	118e0 <__errno_location@plt>
   125a8:	ldr	r1, [pc, #1156]	; 12a34 <__assert_fail@plt+0xfd4>
   125ac:	mov	r7, #0
   125b0:	mov	r2, #5
   125b4:	add	r1, pc, r1
   125b8:	ldr	ip, [r0]
   125bc:	mov	r0, r7
   125c0:	str	ip, [sp, #24]
   125c4:	bl	11730 <dcgettext@plt>
   125c8:	ldr	r3, [sp, #16]
   125cc:	mov	r2, r0
   125d0:	ldr	r0, [r3, #16]
   125d4:	str	r2, [sp, #20]
   125d8:	bl	148d4 <close_stdout@@Base+0x1a0c>
   125dc:	ldr	ip, [sp, #24]
   125e0:	ldr	r3, [pc, #1104]	; 12a38 <__assert_fail@plt+0xfd8>
   125e4:	ldr	r2, [sp, #20]
   125e8:	mov	r1, ip
   125ec:	add	r3, pc, r3
   125f0:	str	r0, [sp]
   125f4:	mov	r0, r7
   125f8:	bl	117f0 <error@plt>
   125fc:	b	12270 <__assert_fail@plt+0x810>
   12600:	bl	118e0 <__errno_location@plt>
   12604:	ldr	r1, [pc, #1072]	; 12a3c <__assert_fail@plt+0xfdc>
   12608:	mov	r7, #0
   1260c:	mov	r2, #5
   12610:	add	r1, pc, r1
   12614:	ldr	ip, [r0]
   12618:	mov	r0, r7
   1261c:	str	ip, [sp, #24]
   12620:	bl	11730 <dcgettext@plt>
   12624:	ldr	r3, [sp, #16]
   12628:	mov	r2, r0
   1262c:	ldr	r0, [r3, #8]
   12630:	str	r2, [sp, #20]
   12634:	bl	148d4 <close_stdout@@Base+0x1a0c>
   12638:	ldr	ip, [sp, #24]
   1263c:	ldr	r3, [pc, #1020]	; 12a40 <__assert_fail@plt+0xfe0>
   12640:	ldr	r2, [sp, #20]
   12644:	mov	r1, ip
   12648:	add	r3, pc, r3
   1264c:	str	r0, [sp]
   12650:	mov	r0, r7
   12654:	bl	117f0 <error@plt>
   12658:	b	12298 <__assert_fail@plt+0x838>
   1265c:	bl	118e0 <__errno_location@plt>
   12660:	ldr	r1, [pc, #988]	; 12a44 <__assert_fail@plt+0xfe4>
   12664:	mov	r2, #5
   12668:	add	r1, pc, r1
   1266c:	ldr	r5, [r0]
   12670:	mov	r0, #0
   12674:	bl	11730 <dcgettext@plt>
   12678:	ldr	r3, [sp, #16]
   1267c:	mov	r7, r0
   12680:	ldr	r0, [r3, #12]
   12684:	bl	148d4 <close_stdout@@Base+0x1a0c>
   12688:	ldr	r3, [pc, #952]	; 12a48 <__assert_fail@plt+0xfe8>
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	add	r3, pc, r3
   12698:	str	r0, [sp]
   1269c:	mov	r0, #0
   126a0:	bl	117f0 <error@plt>
   126a4:	b	122c8 <__assert_fail@plt+0x868>
   126a8:	bl	118e0 <__errno_location@plt>
   126ac:	ldr	r1, [pc, #920]	; 12a4c <__assert_fail@plt+0xfec>
   126b0:	mov	r7, #0
   126b4:	mov	r2, #5
   126b8:	add	r1, pc, r1
   126bc:	ldr	r3, [r0]
   126c0:	mov	r0, r7
   126c4:	str	r3, [sp, #16]
   126c8:	bl	11730 <dcgettext@plt>
   126cc:	ldr	r1, [sp, #40]	; 0x28
   126d0:	mov	r2, r0
   126d4:	ldr	r0, [r1, #4]
   126d8:	str	r2, [sp, #20]
   126dc:	bl	148d4 <close_stdout@@Base+0x1a0c>
   126e0:	ldr	r3, [sp, #16]
   126e4:	ldr	r2, [sp, #20]
   126e8:	mov	r1, r3
   126ec:	ldr	r3, [pc, #860]	; 12a50 <__assert_fail@plt+0xff0>
   126f0:	add	r3, pc, r3
   126f4:	str	r0, [sp]
   126f8:	mov	r0, r7
   126fc:	bl	117f0 <error@plt>
   12700:	b	12248 <__assert_fail@plt+0x7e8>
   12704:	add	r0, r5, #32
   12708:	bl	148e0 <close_stdout@@Base+0x1a18>
   1270c:	cmp	r0, #0
   12710:	mov	r7, r0
   12714:	str	r0, [r5, #48]	; 0x30
   12718:	bne	11e4c <__assert_fail@plt+0x3ec>
   1271c:	bl	118e0 <__errno_location@plt>
   12720:	ldr	r1, [pc, #812]	; 12a54 <__assert_fail@plt+0xff4>
   12724:	mov	r2, #5
   12728:	add	r1, pc, r1
   1272c:	ldr	r5, [r0]
   12730:	mov	r0, r7
   12734:	bl	11730 <dcgettext@plt>
   12738:	mov	r7, r0
   1273c:	ldr	r0, [pc, #788]	; 12a58 <__assert_fail@plt+0xff8>
   12740:	add	r0, pc, r0
   12744:	bl	148d4 <close_stdout@@Base+0x1a0c>
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	mov	r3, r0
   12754:	mov	r0, #1
   12758:	bl	117f0 <error@plt>
   1275c:	b	11e4c <__assert_fail@plt+0x3ec>
   12760:	add	r2, r3, #1
   12764:	ldr	r5, [pc, #752]	; 12a5c <__assert_fail@plt+0xffc>
   12768:	str	r2, [r6]
   1276c:	ldr	r3, [r4, r3, lsl #2]
   12770:	add	r5, pc, r5
   12774:	mov	r0, r3
   12778:	str	r3, [r5, #24]
   1277c:	bl	1170c <context_new@plt>
   12780:	subs	r7, r0, #0
   12784:	beq	12918 <__assert_fail@plt+0xeb8>
   12788:	mov	r0, r7
   1278c:	bl	11850 <context_free@plt>
   12790:	b	11e1c <__assert_fail@plt+0x3bc>
   12794:	bl	118e0 <__errno_location@plt>
   12798:	ldr	r1, [pc, #704]	; 12a60 <__assert_fail@plt+0x1000>
   1279c:	mov	r2, #5
   127a0:	add	r1, pc, r1
   127a4:	ldr	r5, [r0]
   127a8:	mov	r0, #0
   127ac:	bl	11730 <dcgettext@plt>
   127b0:	mov	sl, r0
   127b4:	mov	r0, r7
   127b8:	bl	148d4 <close_stdout@@Base+0x1a0c>
   127bc:	mov	r1, r5
   127c0:	mov	r2, sl
   127c4:	mov	r3, r0
   127c8:	mov	r0, #1
   127cc:	bl	117f0 <error@plt>
   127d0:	b	11e04 <__assert_fail@plt+0x3a4>
   127d4:	ldr	r1, [pc, #648]	; 12a64 <__assert_fail@plt+0x1004>
   127d8:	mov	r2, #5
   127dc:	add	r1, pc, r1
   127e0:	bl	11730 <dcgettext@plt>
   127e4:	mov	r4, r0
   127e8:	mov	r0, r9
   127ec:	bl	148d4 <close_stdout@@Base+0x1a0c>
   127f0:	mov	r1, r7
   127f4:	mov	r2, r4
   127f8:	mov	r3, r0
   127fc:	mov	r0, r7
   12800:	bl	117f0 <error@plt>
   12804:	b	11f50 <__assert_fail@plt+0x4f0>
   12808:	bl	118e0 <__errno_location@plt>
   1280c:	ldr	r1, [pc, #596]	; 12a68 <__assert_fail@plt+0x1008>
   12810:	mov	r2, #5
   12814:	add	r1, pc, r1
   12818:	ldr	r5, [r0]
   1281c:	mov	r0, r4
   12820:	bl	11730 <dcgettext@plt>
   12824:	mov	r9, r0
   12828:	mov	r0, r7
   1282c:	bl	14780 <close_stdout@@Base+0x18b8>
   12830:	mov	r1, r5
   12834:	mov	r2, r9
   12838:	mov	r3, r0
   1283c:	mov	r0, r4
   12840:	bl	117f0 <error@plt>
   12844:	b	11f50 <__assert_fail@plt+0x4f0>
   12848:	ldr	r1, [pc, #540]	; 12a6c <__assert_fail@plt+0x100c>
   1284c:	mov	r0, fp
   12850:	mov	r2, #5
   12854:	add	r1, pc, r1
   12858:	bl	11730 <dcgettext@plt>
   1285c:	mov	r1, fp
   12860:	mov	r2, r0
   12864:	mov	r0, sl
   12868:	bl	117f0 <error@plt>
   1286c:	b	121bc <__assert_fail@plt+0x75c>
   12870:	ldr	r1, [pc, #504]	; 12a70 <__assert_fail@plt+0x1010>
   12874:	mov	r2, #5
   12878:	mov	r0, #0
   1287c:	add	r1, pc, r1
   12880:	bl	11730 <dcgettext@plt>
   12884:	mov	r1, r7
   12888:	mov	r5, r0
   1288c:	mov	r0, #0
   12890:	bl	148cc <close_stdout@@Base+0x1a04>
   12894:	ldr	r1, [pc, #472]	; 12a74 <__assert_fail@plt+0x1014>
   12898:	add	r1, pc, r1
   1289c:	mov	r4, r0
   128a0:	mov	r0, #1
   128a4:	bl	148cc <close_stdout@@Base+0x1a04>
   128a8:	mov	r2, r5
   128ac:	mov	r3, r4
   128b0:	str	r0, [sp]
   128b4:	mov	r0, #0
   128b8:	mov	r1, r0
   128bc:	bl	117f0 <error@plt>
   128c0:	b	12540 <__assert_fail@plt+0xae0>
   128c4:	ldr	r1, [pc, #428]	; 12a78 <__assert_fail@plt+0x1018>
   128c8:	mov	r2, #5
   128cc:	mov	r0, #0
   128d0:	add	r1, pc, r1
   128d4:	bl	11730 <dcgettext@plt>
   128d8:	mov	r1, r7
   128dc:	mov	r5, r0
   128e0:	mov	r0, #0
   128e4:	bl	148cc <close_stdout@@Base+0x1a04>
   128e8:	ldr	r1, [pc, #396]	; 12a7c <__assert_fail@plt+0x101c>
   128ec:	add	r1, pc, r1
   128f0:	mov	r4, r0
   128f4:	mov	r0, #1
   128f8:	bl	148cc <close_stdout@@Base+0x1a04>
   128fc:	mov	r2, r5
   12900:	mov	r3, r4
   12904:	str	r0, [sp]
   12908:	mov	r0, #0
   1290c:	mov	r1, r0
   12910:	bl	117f0 <error@plt>
   12914:	b	120b8 <__assert_fail@plt+0x658>
   12918:	ldr	r1, [pc, #352]	; 12a80 <__assert_fail@plt+0x1020>
   1291c:	mov	r2, #5
   12920:	add	r1, pc, r1
   12924:	bl	11730 <dcgettext@plt>
   12928:	mov	sl, r0
   1292c:	ldr	r0, [r5, #24]
   12930:	bl	14780 <close_stdout@@Base+0x18b8>
   12934:	mov	r2, sl
   12938:	mov	r1, r8
   1293c:	mov	r3, r0
   12940:	mov	r0, #1
   12944:	bl	117f0 <error@plt>
   12948:	b	12788 <__assert_fail@plt+0xd28>
   1294c:	bl	11a30 <abort@plt>
   12950:	andeq	fp, r1, r0, ror r5
   12954:	andeq	r0, r0, r8, ror #2
   12958:	andeq	fp, r1, ip, asr #14
   1295c:	andeq	fp, r1, ip, lsr #14
   12960:	andeq	r9, r0, ip, lsr #14
   12964:	andeq	r9, r0, ip, lsr #15
   12968:	andeq	r9, r0, r4, ror #16
   1296c:	andeq	r0, r0, r8, ror r1
   12970:	andeq	fp, r1, r0, ror #13
   12974:	ldrdeq	fp, [r1], -r8
   12978:	andeq	fp, r1, r8, asr #13
   1297c:			; <UNDEFINED> instruction: 0x0001b6bc
   12980:	andeq	r9, r0, ip, lsr r8
   12984:	muleq	r1, r8, r2
   12988:	muleq	r0, ip, r1
   1298c:	andeq	r0, r0, r4, lsl #3
   12990:	andeq	r0, r0, r0, ror r1
   12994:	ldrdeq	r9, [r0], -r4
   12998:	ldrdeq	r9, [r0], -r8
   1299c:	andeq	r9, r0, ip, lsr #13
   129a0:	andeq	r9, r0, ip, asr #11
   129a4:	andeq	fp, r1, r8, lsr #9
   129a8:	andeq	fp, r1, r0, lsl #9
   129ac:	andeq	r0, r0, ip, ror #2
   129b0:	andeq	r9, r0, ip, lsl r6
   129b4:	andeq	fp, r1, r0, ror #7
   129b8:	ldrdeq	fp, [r1], -r0
   129bc:	andeq	fp, r1, ip, lsr #7
   129c0:	muleq	r1, r4, r3
   129c4:	andeq	fp, r1, ip, ror r3
   129c8:	andeq	fp, r1, r0, ror r3
   129cc:	andeq	fp, r1, ip, ror #6
   129d0:	andeq	r9, r0, r8, ror r8
   129d4:	andeq	fp, r1, r0, asr r3
   129d8:	andeq	r9, r0, ip, lsr #12
   129dc:	ldrdeq	fp, [r1], -r0
   129e0:			; <UNDEFINED> instruction: 0x0001b1bc
   129e4:	andeq	r9, r0, r0, lsr #8
   129e8:	andeq	r9, r0, r8, asr r4
   129ec:	andeq	r9, r0, r8, ror r4
   129f0:	andeq	r9, r0, ip, asr #13
   129f4:	ldrdeq	fp, [r1], -r0
   129f8:	andeq	r9, r0, r4, lsl #5
   129fc:	andeq	fp, r1, r8, asr #32
   12a00:	andeq	fp, r1, r8, lsr #32
   12a04:	andeq	sl, r1, r4, lsr #31
   12a08:	andeq	sl, r1, ip, ror pc
   12a0c:	andeq	sl, r1, r4, asr pc
   12a10:	andeq	r9, r0, ip, asr #6
   12a14:	ldrdeq	r9, [r0], -r4
   12a18:	andeq	r9, r0, r4, lsr r3
   12a1c:	andeq	r9, r0, r0, lsr #32
   12a20:	andeq	r8, r0, r0, asr #31
   12a24:	strdeq	r9, [r0], -r8
   12a28:	andeq	r8, r0, ip, lsl #30
   12a2c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   12a30:	ldrdeq	r8, [r0], -r0
   12a34:	andeq	r9, r0, r8, lsl #2
   12a38:	andeq	r9, r0, ip, lsl #2
   12a3c:	andeq	r9, r0, ip, lsr #1
   12a40:	strheq	r9, [r0], -r8
   12a44:	andeq	r9, r0, r4, asr r0
   12a48:	andeq	r9, r0, r4, ror r0
   12a4c:	andeq	r9, r0, r4
   12a50:	andeq	r9, r0, r0
   12a54:	andeq	r8, r0, r4, asr sp
   12a58:	andeq	r8, r0, ip, asr sp
   12a5c:	andeq	sl, r1, r0, lsl #21
   12a60:	andeq	r8, r0, r0, ror ip
   12a64:	andeq	r8, r0, r4, lsl #29
   12a68:	andeq	r8, r0, r0, lsl #29
   12a6c:	andeq	r8, r0, r0, asr fp
   12a70:	andeq	r8, r0, r4, ror #24
   12a74:	andeq	r8, r0, r4, lsl #24
   12a78:	andeq	r8, r0, r0, lsl ip
   12a7c:			; <UNDEFINED> instruction: 0x00008bb0
   12a80:	andeq	r8, r0, r8, lsl fp
   12a84:	mov	fp, #0
   12a88:	mov	lr, #0
   12a8c:	pop	{r1}		; (ldr r1, [sp], #4)
   12a90:	mov	r2, sp
   12a94:	push	{r2}		; (str r2, [sp, #-4]!)
   12a98:	push	{r0}		; (str r0, [sp, #-4]!)
   12a9c:	ldr	ip, [pc, #16]	; 12ab4 <__assert_fail@plt+0x1054>
   12aa0:	push	{ip}		; (str ip, [sp, #-4]!)
   12aa4:	ldr	r0, [pc, #12]	; 12ab8 <__assert_fail@plt+0x1058>
   12aa8:	ldr	r3, [pc, #12]	; 12abc <__assert_fail@plt+0x105c>
   12aac:	bl	1182c <__libc_start_main@plt>
   12ab0:	bl	11a30 <abort@plt>
   12ab4:	ldrdeq	sl, [r1], -r8
   12ab8:	andeq	r1, r1, r0, ror sl
   12abc:	andeq	sl, r1, r4, ror sl
   12ac0:	ldr	r3, [pc, #20]	; 12adc <__assert_fail@plt+0x107c>
   12ac4:	ldr	r2, [pc, #20]	; 12ae0 <__assert_fail@plt+0x1080>
   12ac8:	add	r3, pc, r3
   12acc:	ldr	r2, [r3, r2]
   12ad0:	cmp	r2, #0
   12ad4:	bxeq	lr
   12ad8:	b	11844 <__gmon_start__@plt>
   12adc:	andeq	sl, r1, r0, lsr r5
   12ae0:	andeq	r0, r0, ip, ror r1
   12ae4:	push	{r3, lr}
   12ae8:	movw	r0, #53740	; 0xd1ec
   12aec:	ldr	r3, [pc, #36]	; 12b18 <__assert_fail@plt+0x10b8>
   12af0:	movt	r0, #2
   12af4:	rsb	r3, r0, r3
   12af8:	cmp	r3, #6
   12afc:	popls	{r3, pc}
   12b00:	movw	r3, #0
   12b04:	movt	r3, #0
   12b08:	cmp	r3, #0
   12b0c:	popeq	{r3, pc}
   12b10:	blx	r3
   12b14:	pop	{r3, pc}
   12b18:	andeq	sp, r2, pc, ror #3
   12b1c:	push	{r3, lr}
   12b20:	movw	r0, #53740	; 0xd1ec
   12b24:	movw	r3, #53740	; 0xd1ec
   12b28:	movt	r0, #2
   12b2c:	movt	r3, #2
   12b30:	rsb	r3, r0, r3
   12b34:	asr	r3, r3, #2
   12b38:	add	r3, r3, r3, lsr #31
   12b3c:	asrs	r1, r3, #1
   12b40:	popeq	{r3, pc}
   12b44:	movw	r2, #0
   12b48:	movt	r2, #0
   12b4c:	cmp	r2, #0
   12b50:	popeq	{r3, pc}
   12b54:	blx	r2
   12b58:	pop	{r3, pc}
   12b5c:	push	{r4, lr}
   12b60:	movw	r4, #53744	; 0xd1f0
   12b64:	movt	r4, #2
   12b68:	ldrb	r3, [r4]
   12b6c:	cmp	r3, #0
   12b70:	popne	{r4, pc}
   12b74:	bl	12ae4 <__assert_fail@plt+0x1084>
   12b78:	mov	r3, #1
   12b7c:	strb	r3, [r4]
   12b80:	pop	{r4, pc}
   12b84:	movw	r0, #52728	; 0xcdf8
   12b88:	movt	r0, #2
   12b8c:	push	{r3, lr}
   12b90:	ldr	r3, [r0]
   12b94:	cmp	r3, #0
   12b98:	beq	12bb0 <__assert_fail@plt+0x1150>
   12b9c:	movw	r3, #0
   12ba0:	movt	r3, #0
   12ba4:	cmp	r3, #0
   12ba8:	beq	12bb0 <__assert_fail@plt+0x1150>
   12bac:	blx	r3
   12bb0:	pop	{r3, lr}
   12bb4:	b	12b1c <__assert_fail@plt+0x10bc>
   12bb8:	push	{r4, r5, r6, lr}
   12bbc:	subs	r4, r0, #0
   12bc0:	ldr	r5, [pc, #636]	; 12e44 <__assert_fail@plt+0x13e4>
   12bc4:	sub	sp, sp, #8
   12bc8:	add	r5, pc, r5
   12bcc:	beq	12c14 <__assert_fail@plt+0x11b4>
   12bd0:	ldr	r3, [pc, #624]	; 12e48 <__assert_fail@plt+0x13e8>
   12bd4:	mov	r2, #5
   12bd8:	ldr	r1, [pc, #620]	; 12e4c <__assert_fail@plt+0x13ec>
   12bdc:	mov	r0, #0
   12be0:	ldr	r3, [r5, r3]
   12be4:	add	r1, pc, r1
   12be8:	ldr	r6, [r3]
   12bec:	bl	11730 <dcgettext@plt>
   12bf0:	ldr	r3, [pc, #600]	; 12e50 <__assert_fail@plt+0x13f0>
   12bf4:	mov	r1, #1
   12bf8:	ldr	r3, [r5, r3]
   12bfc:	ldr	r3, [r3]
   12c00:	mov	r2, r0
   12c04:	mov	r0, r6
   12c08:	bl	11934 <__fprintf_chk@plt>
   12c0c:	mov	r0, r4
   12c10:	bl	11880 <exit@plt>
   12c14:	ldr	r1, [pc, #568]	; 12e54 <__assert_fail@plt+0x13f4>
   12c18:	mov	r2, #5
   12c1c:	add	r1, pc, r1
   12c20:	bl	11730 <dcgettext@plt>
   12c24:	ldr	r3, [pc, #548]	; 12e50 <__assert_fail@plt+0x13f0>
   12c28:	ldr	r6, [r5, r3]
   12c2c:	ldr	r3, [r6]
   12c30:	mov	r2, r3
   12c34:	str	r3, [sp]
   12c38:	mov	r1, r0
   12c3c:	mov	r0, #1
   12c40:	bl	1191c <__printf_chk@plt>
   12c44:	ldr	r1, [pc, #524]	; 12e58 <__assert_fail@plt+0x13f8>
   12c48:	mov	r2, #5
   12c4c:	mov	r0, r4
   12c50:	add	r1, pc, r1
   12c54:	bl	11730 <dcgettext@plt>
   12c58:	ldr	r3, [pc, #508]	; 12e5c <__assert_fail@plt+0x13fc>
   12c5c:	ldr	r5, [r5, r3]
   12c60:	ldr	r1, [r5]
   12c64:	bl	11694 <fputs_unlocked@plt>
   12c68:	ldr	r1, [pc, #496]	; 12e60 <__assert_fail@plt+0x1400>
   12c6c:	mov	r2, #5
   12c70:	mov	r0, r4
   12c74:	add	r1, pc, r1
   12c78:	bl	11730 <dcgettext@plt>
   12c7c:	ldr	r1, [r5]
   12c80:	bl	11694 <fputs_unlocked@plt>
   12c84:	ldr	r1, [pc, #472]	; 12e64 <__assert_fail@plt+0x1404>
   12c88:	mov	r2, #5
   12c8c:	mov	r0, r4
   12c90:	add	r1, pc, r1
   12c94:	bl	11730 <dcgettext@plt>
   12c98:	ldr	r1, [r5]
   12c9c:	bl	11694 <fputs_unlocked@plt>
   12ca0:	ldr	r1, [pc, #448]	; 12e68 <__assert_fail@plt+0x1408>
   12ca4:	mov	r2, #5
   12ca8:	mov	r0, r4
   12cac:	add	r1, pc, r1
   12cb0:	bl	11730 <dcgettext@plt>
   12cb4:	ldr	r1, [r5]
   12cb8:	bl	11694 <fputs_unlocked@plt>
   12cbc:	ldr	r1, [pc, #424]	; 12e6c <__assert_fail@plt+0x140c>
   12cc0:	mov	r2, #5
   12cc4:	mov	r0, r4
   12cc8:	add	r1, pc, r1
   12ccc:	bl	11730 <dcgettext@plt>
   12cd0:	ldr	r1, [r5]
   12cd4:	bl	11694 <fputs_unlocked@plt>
   12cd8:	ldr	r1, [pc, #400]	; 12e70 <__assert_fail@plt+0x1410>
   12cdc:	mov	r2, #5
   12ce0:	mov	r0, r4
   12ce4:	add	r1, pc, r1
   12ce8:	bl	11730 <dcgettext@plt>
   12cec:	ldr	r1, [r5]
   12cf0:	bl	11694 <fputs_unlocked@plt>
   12cf4:	ldr	r1, [pc, #376]	; 12e74 <__assert_fail@plt+0x1414>
   12cf8:	mov	r2, #5
   12cfc:	mov	r0, r4
   12d00:	add	r1, pc, r1
   12d04:	bl	11730 <dcgettext@plt>
   12d08:	ldr	r1, [r5]
   12d0c:	bl	11694 <fputs_unlocked@plt>
   12d10:	ldr	r1, [pc, #352]	; 12e78 <__assert_fail@plt+0x1418>
   12d14:	mov	r2, #5
   12d18:	mov	r0, r4
   12d1c:	add	r1, pc, r1
   12d20:	bl	11730 <dcgettext@plt>
   12d24:	ldr	r1, [r5]
   12d28:	bl	11694 <fputs_unlocked@plt>
   12d2c:	ldr	r1, [pc, #328]	; 12e7c <__assert_fail@plt+0x141c>
   12d30:	mov	r2, #5
   12d34:	mov	r0, r4
   12d38:	add	r1, pc, r1
   12d3c:	bl	11730 <dcgettext@plt>
   12d40:	ldr	r1, [r5]
   12d44:	bl	11694 <fputs_unlocked@plt>
   12d48:	ldr	r1, [pc, #304]	; 12e80 <__assert_fail@plt+0x1420>
   12d4c:	mov	r2, #5
   12d50:	mov	r0, r4
   12d54:	add	r1, pc, r1
   12d58:	bl	11730 <dcgettext@plt>
   12d5c:	ldr	r1, [r5]
   12d60:	bl	11694 <fputs_unlocked@plt>
   12d64:	ldr	r1, [pc, #280]	; 12e84 <__assert_fail@plt+0x1424>
   12d68:	mov	r2, #5
   12d6c:	mov	r0, r4
   12d70:	add	r1, pc, r1
   12d74:	bl	11730 <dcgettext@plt>
   12d78:	ldr	r1, [r5]
   12d7c:	bl	11694 <fputs_unlocked@plt>
   12d80:	ldr	r1, [pc, #256]	; 12e88 <__assert_fail@plt+0x1428>
   12d84:	mov	r2, #5
   12d88:	mov	r0, r4
   12d8c:	add	r1, pc, r1
   12d90:	bl	11730 <dcgettext@plt>
   12d94:	ldr	r2, [pc, #240]	; 12e8c <__assert_fail@plt+0x142c>
   12d98:	ldr	r3, [pc, #240]	; 12e90 <__assert_fail@plt+0x1430>
   12d9c:	add	r2, pc, r2
   12da0:	add	r3, pc, r3
   12da4:	mov	r1, r0
   12da8:	mov	r0, #1
   12dac:	bl	1191c <__printf_chk@plt>
   12db0:	mov	r0, #5
   12db4:	mov	r1, r4
   12db8:	bl	11988 <setlocale@plt>
   12dbc:	cmp	r0, #0
   12dc0:	beq	12ddc <__assert_fail@plt+0x137c>
   12dc4:	ldr	r1, [pc, #200]	; 12e94 <__assert_fail@plt+0x1434>
   12dc8:	mov	r2, #3
   12dcc:	add	r1, pc, r1
   12dd0:	bl	11a24 <strncmp@plt>
   12dd4:	cmp	r0, #0
   12dd8:	bne	12e10 <__assert_fail@plt+0x13b0>
   12ddc:	ldr	r1, [pc, #180]	; 12e98 <__assert_fail@plt+0x1438>
   12de0:	mov	r2, #5
   12de4:	mov	r0, #0
   12de8:	add	r1, pc, r1
   12dec:	bl	11730 <dcgettext@plt>
   12df0:	mov	r5, r0
   12df4:	ldr	r0, [r6]
   12df8:	bl	12fe0 <close_stdout@@Base+0x118>
   12dfc:	mov	r1, r5
   12e00:	mov	r2, r0
   12e04:	mov	r0, #1
   12e08:	bl	1191c <__printf_chk@plt>
   12e0c:	b	12c0c <__assert_fail@plt+0x11ac>
   12e10:	ldr	r1, [pc, #132]	; 12e9c <__assert_fail@plt+0x143c>
   12e14:	mov	r2, #5
   12e18:	mov	r0, r4
   12e1c:	add	r1, pc, r1
   12e20:	bl	11730 <dcgettext@plt>
   12e24:	mov	r5, r0
   12e28:	ldr	r0, [r6]
   12e2c:	bl	12fe0 <close_stdout@@Base+0x118>
   12e30:	mov	r1, r5
   12e34:	mov	r2, r0
   12e38:	mov	r0, #1
   12e3c:	bl	1191c <__printf_chk@plt>
   12e40:	b	12ddc <__assert_fail@plt+0x137c>
   12e44:	andeq	sl, r1, r0, lsr r4
   12e48:	andeq	r0, r0, r4, ror r1
   12e4c:	andeq	r7, r0, ip, lsr #30
   12e50:	muleq	r0, r0, r1
   12e54:	andeq	r7, r0, ip, lsl pc
   12e58:	andeq	r7, r0, r8, lsl #31
   12e5c:	andeq	r0, r0, r4, lsl #3
   12e60:	strdeq	r7, [r0], -r0
   12e64:	andeq	r8, r0, r0, lsr #32
   12e68:	andeq	r8, r0, ip, ror #1
   12e6c:	andeq	r8, r0, ip, ror #3
   12e70:	andeq	r8, r0, r0, asr r2
   12e74:	andeq	r8, r0, ip, lsr #5
   12e78:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   12e7c:	andeq	r8, r0, r4, lsl #6
   12e80:			; <UNDEFINED> instruction: 0x000084bc
   12e84:	ldrdeq	r8, [r0], -r0
   12e88:	andeq	r8, r0, ip, ror #9
   12e8c:	strdeq	r8, [r0], -r4
   12e90:	andeq	r8, r0, r0, lsl #10
   12e94:	strdeq	r8, [r0], -ip
   12e98:	andeq	r8, r0, ip, lsr #10
   12e9c:			; <UNDEFINED> instruction: 0x000084b0
   12ea0:	ldr	r3, [pc, #8]	; 12eb0 <__assert_fail@plt+0x1450>
   12ea4:	add	r3, pc, r3
   12ea8:	str	r0, [r3]
   12eac:	bx	lr
   12eb0:	andeq	sl, r1, r0, lsl #7
   12eb4:	ldr	r3, [pc, #8]	; 12ec4 <__assert_fail@plt+0x1464>
   12eb8:	add	r3, pc, r3
   12ebc:	strb	r0, [r3, #4]
   12ec0:	bx	lr
   12ec4:	andeq	sl, r1, ip, ror #6

00012ec8 <close_stdout@@Base>:
   12ec8:	push	{r4, r5, r6, r7, lr}
   12ecc:	sub	sp, sp, #12
   12ed0:	ldr	r4, [pc, #228]	; 12fbc <close_stdout@@Base+0xf4>
   12ed4:	ldr	r3, [pc, #228]	; 12fc0 <close_stdout@@Base+0xf8>
   12ed8:	add	r4, pc, r4
   12edc:	ldr	r3, [r4, r3]
   12ee0:	ldr	r0, [r3]
   12ee4:	bl	17d08 <fts_children@@Base+0xa48>
   12ee8:	cmp	r0, #0
   12eec:	beq	12f14 <close_stdout@@Base+0x4c>
   12ef0:	ldr	r3, [pc, #204]	; 12fc4 <close_stdout@@Base+0xfc>
   12ef4:	add	r3, pc, r3
   12ef8:	ldrb	r3, [r3, #4]
   12efc:	cmp	r3, #0
   12f00:	beq	12f34 <close_stdout@@Base+0x6c>
   12f04:	bl	118e0 <__errno_location@plt>
   12f08:	ldr	r3, [r0]
   12f0c:	cmp	r3, #32
   12f10:	bne	12f34 <close_stdout@@Base+0x6c>
   12f14:	ldr	r3, [pc, #172]	; 12fc8 <close_stdout@@Base+0x100>
   12f18:	ldr	r3, [r4, r3]
   12f1c:	ldr	r0, [r3]
   12f20:	bl	17d08 <fts_children@@Base+0xa48>
   12f24:	cmp	r0, #0
   12f28:	bne	12f88 <close_stdout@@Base+0xc0>
   12f2c:	add	sp, sp, #12
   12f30:	pop	{r4, r5, r6, r7, pc}
   12f34:	ldr	r1, [pc, #144]	; 12fcc <close_stdout@@Base+0x104>
   12f38:	mov	r0, #0
   12f3c:	mov	r2, #5
   12f40:	add	r1, pc, r1
   12f44:	bl	11730 <dcgettext@plt>
   12f48:	ldr	r3, [pc, #128]	; 12fd0 <close_stdout@@Base+0x108>
   12f4c:	ldr	r5, [pc, r3]
   12f50:	cmp	r5, #0
   12f54:	mov	r6, r0
   12f58:	beq	12f98 <close_stdout@@Base+0xd0>
   12f5c:	bl	118e0 <__errno_location@plt>
   12f60:	ldr	r7, [r0]
   12f64:	mov	r0, r5
   12f68:	bl	14780 <close_stdout@@Base+0x18b8>
   12f6c:	ldr	r2, [pc, #96]	; 12fd4 <close_stdout@@Base+0x10c>
   12f70:	str	r6, [sp]
   12f74:	mov	r1, r7
   12f78:	add	r2, pc, r2
   12f7c:	mov	r3, r0
   12f80:	mov	r0, #0
   12f84:	bl	117f0 <error@plt>
   12f88:	ldr	r3, [pc, #72]	; 12fd8 <close_stdout@@Base+0x110>
   12f8c:	ldr	r3, [r4, r3]
   12f90:	ldr	r0, [r3]
   12f94:	bl	116e8 <_exit@plt>
   12f98:	bl	118e0 <__errno_location@plt>
   12f9c:	ldr	r2, [pc, #56]	; 12fdc <close_stdout@@Base+0x114>
   12fa0:	add	r2, pc, r2
   12fa4:	mov	r3, r0
   12fa8:	mov	r0, r5
   12fac:	ldr	r1, [r3]
   12fb0:	mov	r3, r6
   12fb4:	bl	117f0 <error@plt>
   12fb8:	b	12f88 <close_stdout@@Base+0xc0>
   12fbc:	andeq	sl, r1, r0, lsr #2
   12fc0:	andeq	r0, r0, r4, lsl #3
   12fc4:	andeq	sl, r1, r0, lsr r3
   12fc8:	andeq	r0, r0, r4, ror r1
   12fcc:	andeq	r8, r0, r4, lsl #17
   12fd0:	ldrdeq	sl, [r1], -r8
   12fd4:	andeq	r8, r0, r8, asr r8
   12fd8:	andeq	r0, r0, r8, lsl #3
   12fdc:	andeq	r8, r0, r4, lsr r8
   12fe0:	ldrb	r3, [r0]
   12fe4:	cmp	r3, #47	; 0x2f
   12fe8:	bne	13004 <close_stdout@@Base+0x13c>
   12fec:	add	r2, r0, #1
   12ff0:	mov	r0, r2
   12ff4:	add	r2, r2, #1
   12ff8:	ldrb	r3, [r0]
   12ffc:	cmp	r3, #47	; 0x2f
   13000:	beq	12ff0 <close_stdout@@Base+0x128>
   13004:	cmp	r3, #0
   13008:	bxeq	lr
   1300c:	mov	r2, r0
   13010:	mov	r1, #0
   13014:	cmp	r3, #47	; 0x2f
   13018:	moveq	r1, #1
   1301c:	beq	1302c <close_stdout@@Base+0x164>
   13020:	cmp	r1, #0
   13024:	movne	r0, r2
   13028:	movne	r1, #0
   1302c:	ldrb	r3, [r2, #1]!
   13030:	cmp	r3, #0
   13034:	bne	13014 <close_stdout@@Base+0x14c>
   13038:	bx	lr
   1303c:	push	{r4, lr}
   13040:	mov	r4, r0
   13044:	bl	118a4 <strlen@plt>
   13048:	cmp	r0, #1
   1304c:	popls	{r4, pc}
   13050:	sub	r3, r0, #1
   13054:	ldrb	r2, [r4, r3]
   13058:	cmp	r2, #47	; 0x2f
   1305c:	popne	{r4, pc}
   13060:	mov	r0, r3
   13064:	cmp	r0, #1
   13068:	sub	r3, r3, #1
   1306c:	beq	13080 <close_stdout@@Base+0x1b8>
   13070:	ldrb	r2, [r4, r3]
   13074:	cmp	r2, #47	; 0x2f
   13078:	popne	{r4, pc}
   1307c:	b	13060 <close_stdout@@Base+0x198>
   13080:	pop	{r4, pc}
   13084:	push	{r3, r4, r5, r6, r7, lr}
   13088:	subs	r4, r0, #0
   1308c:	ldr	r5, [pc, #172]	; 13140 <close_stdout@@Base+0x278>
   13090:	add	r5, pc, r5
   13094:	beq	1311c <close_stdout@@Base+0x254>
   13098:	mov	r1, #47	; 0x2f
   1309c:	bl	11994 <strrchr@plt>
   130a0:	subs	r6, r0, #0
   130a4:	beq	13100 <close_stdout@@Base+0x238>
   130a8:	add	r7, r6, #1
   130ac:	rsb	r3, r4, r7
   130b0:	cmp	r3, #6
   130b4:	ble	13100 <close_stdout@@Base+0x238>
   130b8:	ldr	r1, [pc, #132]	; 13144 <close_stdout@@Base+0x27c>
   130bc:	sub	r0, r6, #6
   130c0:	mov	r2, #7
   130c4:	add	r1, pc, r1
   130c8:	bl	11a24 <strncmp@plt>
   130cc:	cmp	r0, #0
   130d0:	bne	13100 <close_stdout@@Base+0x238>
   130d4:	ldr	r1, [pc, #108]	; 13148 <close_stdout@@Base+0x280>
   130d8:	mov	r0, r7
   130dc:	mov	r2, #3
   130e0:	add	r1, pc, r1
   130e4:	bl	11a24 <strncmp@plt>
   130e8:	cmp	r0, #0
   130ec:	movne	r4, r7
   130f0:	ldreq	r3, [pc, #84]	; 1314c <close_stdout@@Base+0x284>
   130f4:	addeq	r4, r6, #4
   130f8:	ldreq	r3, [r5, r3]
   130fc:	streq	r4, [r3]
   13100:	ldr	r2, [pc, #72]	; 13150 <close_stdout@@Base+0x288>
   13104:	ldr	r3, [pc, #72]	; 13154 <close_stdout@@Base+0x28c>
   13108:	ldr	r2, [r5, r2]
   1310c:	str	r4, [r2]
   13110:	ldr	r3, [r5, r3]
   13114:	str	r4, [r3]
   13118:	pop	{r3, r4, r5, r6, r7, pc}
   1311c:	ldr	r3, [pc, #52]	; 13158 <close_stdout@@Base+0x290>
   13120:	mov	r1, #1
   13124:	ldr	r0, [pc, #48]	; 1315c <close_stdout@@Base+0x294>
   13128:	mov	r2, #55	; 0x37
   1312c:	ldr	r3, [r5, r3]
   13130:	add	r0, pc, r0
   13134:	ldr	r3, [r3]
   13138:	bl	117a8 <fwrite@plt>
   1313c:	bl	11a30 <abort@plt>
   13140:	andeq	r9, r1, r8, ror #30
   13144:	andeq	r8, r0, ip, asr #14
   13148:	andeq	r8, r0, r8, lsr r7
   1314c:	muleq	r0, r8, r1
   13150:	muleq	r0, r0, r1
   13154:	andeq	r0, r0, ip, lsl #3
   13158:	andeq	r0, r0, r4, ror r1
   1315c:	andeq	r8, r0, r8, lsr #13
   13160:	push	{r3, lr}
   13164:	mov	r3, r0
   13168:	mov	r2, #0
   1316c:	cmp	r1, #8
   13170:	str	r2, [r3], #4
   13174:	add	r3, r3, #4
   13178:	str	r2, [r0, #4]
   1317c:	str	r2, [r3], #4
   13180:	str	r2, [r3], #4
   13184:	str	r2, [r3], #4
   13188:	str	r2, [r3], #4
   1318c:	str	r2, [r3], #4
   13190:	str	r2, [r3], #4
   13194:	str	r2, [r3], #4
   13198:	str	r2, [r3], #4
   1319c:	str	r2, [r3], #4
   131a0:	str	r2, [r3]
   131a4:	beq	131b0 <close_stdout@@Base+0x2e8>
   131a8:	str	r1, [r0]
   131ac:	pop	{r3, pc}
   131b0:	bl	11a30 <abort@plt>
   131b4:	push	{r4, r5, r6, lr}
   131b8:	mov	r4, r0
   131bc:	mov	r6, r1
   131c0:	mov	r0, #0
   131c4:	mov	r1, r4
   131c8:	mov	r2, #5
   131cc:	bl	11730 <dcgettext@plt>
   131d0:	cmp	r0, r4
   131d4:	mov	r5, r0
   131d8:	beq	131e0 <close_stdout@@Base+0x318>
   131dc:	pop	{r4, r5, r6, pc}
   131e0:	bl	19078 <fts_children@@Base+0x1db8>
   131e4:	ldrb	r3, [r0]
   131e8:	bic	r3, r3, #32
   131ec:	cmp	r3, #85	; 0x55
   131f0:	bne	13264 <close_stdout@@Base+0x39c>
   131f4:	ldrb	r3, [r0, #1]
   131f8:	bic	r3, r3, #32
   131fc:	cmp	r3, #84	; 0x54
   13200:	bne	13250 <close_stdout@@Base+0x388>
   13204:	ldrb	r3, [r0, #2]
   13208:	bic	r3, r3, #32
   1320c:	cmp	r3, #70	; 0x46
   13210:	bne	13250 <close_stdout@@Base+0x388>
   13214:	ldrb	r3, [r0, #3]
   13218:	cmp	r3, #45	; 0x2d
   1321c:	bne	13250 <close_stdout@@Base+0x388>
   13220:	ldrb	r3, [r0, #4]
   13224:	cmp	r3, #56	; 0x38
   13228:	bne	13250 <close_stdout@@Base+0x388>
   1322c:	ldrb	r3, [r0, #5]
   13230:	cmp	r3, #0
   13234:	bne	13250 <close_stdout@@Base+0x388>
   13238:	ldrb	r3, [r5]
   1323c:	cmp	r3, #96	; 0x60
   13240:	beq	132dc <close_stdout@@Base+0x414>
   13244:	ldr	r0, [pc, #180]	; 13300 <close_stdout@@Base+0x438>
   13248:	add	r0, pc, r0
   1324c:	pop	{r4, r5, r6, pc}
   13250:	cmp	r6, #7
   13254:	beq	132e8 <close_stdout@@Base+0x420>
   13258:	ldr	r0, [pc, #164]	; 13304 <close_stdout@@Base+0x43c>
   1325c:	add	r0, pc, r0
   13260:	pop	{r4, r5, r6, pc}
   13264:	cmp	r3, #71	; 0x47
   13268:	bne	13250 <close_stdout@@Base+0x388>
   1326c:	ldrb	r3, [r0, #1]
   13270:	bic	r3, r3, #32
   13274:	cmp	r3, #66	; 0x42
   13278:	bne	13250 <close_stdout@@Base+0x388>
   1327c:	ldrb	r3, [r0, #2]
   13280:	cmp	r3, #49	; 0x31
   13284:	bne	13250 <close_stdout@@Base+0x388>
   13288:	ldrb	r3, [r0, #3]
   1328c:	cmp	r3, #56	; 0x38
   13290:	bne	13250 <close_stdout@@Base+0x388>
   13294:	ldrb	r3, [r0, #4]
   13298:	cmp	r3, #48	; 0x30
   1329c:	bne	13250 <close_stdout@@Base+0x388>
   132a0:	ldrb	r3, [r0, #5]
   132a4:	cmp	r3, #51	; 0x33
   132a8:	bne	13250 <close_stdout@@Base+0x388>
   132ac:	ldrb	r3, [r0, #6]
   132b0:	cmp	r3, #48	; 0x30
   132b4:	bne	13250 <close_stdout@@Base+0x388>
   132b8:	ldrb	r3, [r0, #7]
   132bc:	cmp	r3, #0
   132c0:	bne	13250 <close_stdout@@Base+0x388>
   132c4:	ldrb	r3, [r5]
   132c8:	cmp	r3, #96	; 0x60
   132cc:	beq	132f4 <close_stdout@@Base+0x42c>
   132d0:	ldr	r0, [pc, #48]	; 13308 <close_stdout@@Base+0x440>
   132d4:	add	r0, pc, r0
   132d8:	pop	{r4, r5, r6, pc}
   132dc:	ldr	r0, [pc, #40]	; 1330c <close_stdout@@Base+0x444>
   132e0:	add	r0, pc, r0
   132e4:	pop	{r4, r5, r6, pc}
   132e8:	ldr	r0, [pc, #32]	; 13310 <close_stdout@@Base+0x448>
   132ec:	add	r0, pc, r0
   132f0:	pop	{r4, r5, r6, pc}
   132f4:	ldr	r0, [pc, #24]	; 13314 <close_stdout@@Base+0x44c>
   132f8:	add	r0, pc, r0
   132fc:	pop	{r4, r5, r6, pc}
   13300:	strdeq	r8, [r0], -r4
   13304:	andeq	r8, r0, r8, ror #11
   13308:	andeq	r8, r0, ip, ror #10
   1330c:	andeq	r8, r0, r0, ror r5
   13310:	andeq	r8, r0, ip, asr r5
   13314:	andeq	r8, r0, r4, asr r5
   13318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1331c:	sub	sp, sp, #124	; 0x7c
   13320:	ldr	ip, [pc, #3304]	; 14010 <close_stdout@@Base+0x1148>
   13324:	mov	sl, r1
   13328:	str	r0, [sp, #40]	; 0x28
   1332c:	mov	r8, r3
   13330:	ldr	r0, [pc, #3292]	; 14014 <close_stdout@@Base+0x114c>
   13334:	add	ip, pc, ip
   13338:	str	r2, [sp, #32]
   1333c:	ldr	r1, [sp, #164]	; 0xa4
   13340:	mov	r3, ip
   13344:	ldr	r0, [ip, r0]
   13348:	ldr	r2, [sp, #172]	; 0xac
   1334c:	ubfx	r1, r1, #1, #1
   13350:	str	r1, [sp, #36]	; 0x24
   13354:	str	r0, [sp, #56]	; 0x38
   13358:	ldr	r0, [sp, #168]	; 0xa8
   1335c:	ldr	r1, [sp, #176]	; 0xb0
   13360:	str	r2, [sp, #72]	; 0x48
   13364:	str	r0, [sp, #48]	; 0x30
   13368:	ldr	r0, [sp, #56]	; 0x38
   1336c:	str	r1, [sp, #68]	; 0x44
   13370:	ldr	r3, [r0]
   13374:	str	r3, [sp, #116]	; 0x74
   13378:	bl	117c0 <__ctype_get_mb_cur_max@plt>
   1337c:	ldr	r2, [sp, #160]	; 0xa0
   13380:	str	r0, [sp, #64]	; 0x40
   13384:	cmp	r2, #8
   13388:	addls	pc, pc, r2, lsl #2
   1338c:	b	13eec <close_stdout@@Base+0x1024>
   13390:	b	133b4 <close_stdout@@Base+0x4ec>
   13394:	b	13c04 <close_stdout@@Base+0xd3c>
   13398:	b	13c34 <close_stdout@@Base+0xd6c>
   1339c:	b	13ae4 <close_stdout@@Base+0xc1c>
   133a0:	b	13b24 <close_stdout@@Base+0xc5c>
   133a4:	b	13b50 <close_stdout@@Base+0xc88>
   133a8:	b	13b70 <close_stdout@@Base+0xca8>
   133ac:	b	13b70 <close_stdout@@Base+0xca8>
   133b0:	b	13b70 <close_stdout@@Base+0xca8>
   133b4:	mov	r2, #0
   133b8:	str	r2, [sp, #36]	; 0x24
   133bc:	mov	r9, r2
   133c0:	str	r2, [sp, #24]
   133c4:	str	r2, [sp, #28]
   133c8:	str	r2, [sp, #52]	; 0x34
   133cc:	ldr	r0, [sp, #36]	; 0x24
   133d0:	mov	fp, #0
   133d4:	ldr	r1, [sp, #24]
   133d8:	eor	r2, r0, #1
   133dc:	eor	r3, r1, #1
   133e0:	and	r3, r2, r3
   133e4:	and	r2, r1, r0
   133e8:	str	r3, [sp, #44]	; 0x2c
   133ec:	str	r2, [sp, #76]	; 0x4c
   133f0:	cmn	r8, #1
   133f4:	beq	13774 <close_stdout@@Base+0x8ac>
   133f8:	subs	r3, fp, r8
   133fc:	movne	r3, #1
   13400:	cmp	r3, #0
   13404:	beq	1378c <close_stdout@@Base+0x8c4>
   13408:	ldr	r3, [sp, #28]
   1340c:	ldr	r0, [sp, #24]
   13410:	adds	r7, r3, #0
   13414:	movne	r7, #1
   13418:	ands	r6, r7, r0
   1341c:	bne	13c78 <close_stdout@@Base+0xdb0>
   13420:	ldr	r1, [sp, #32]
   13424:	add	r5, r1, fp
   13428:	ldrb	r4, [r5]
   1342c:	cmp	r4, #126	; 0x7e
   13430:	addls	pc, pc, r4, lsl #2
   13434:	b	139f8 <close_stdout@@Base+0xb30>
   13438:	b	13904 <close_stdout@@Base+0xa3c>
   1343c:	b	139f8 <close_stdout@@Base+0xb30>
   13440:	b	139f8 <close_stdout@@Base+0xb30>
   13444:	b	139f8 <close_stdout@@Base+0xb30>
   13448:	b	139f8 <close_stdout@@Base+0xb30>
   1344c:	b	139f8 <close_stdout@@Base+0xb30>
   13450:	b	139f8 <close_stdout@@Base+0xb30>
   13454:	b	138ec <close_stdout@@Base+0xa24>
   13458:	b	138d4 <close_stdout@@Base+0xa0c>
   1345c:	b	138fc <close_stdout@@Base+0xa34>
   13460:	b	138f4 <close_stdout@@Base+0xa2c>
   13464:	b	138e4 <close_stdout@@Base+0xa1c>
   13468:	b	138dc <close_stdout@@Base+0xa14>
   1346c:	b	138a0 <close_stdout@@Base+0x9d8>
   13470:	b	139f8 <close_stdout@@Base+0xb30>
   13474:	b	139f8 <close_stdout@@Base+0xb30>
   13478:	b	139f8 <close_stdout@@Base+0xb30>
   1347c:	b	139f8 <close_stdout@@Base+0xb30>
   13480:	b	139f8 <close_stdout@@Base+0xb30>
   13484:	b	139f8 <close_stdout@@Base+0xb30>
   13488:	b	139f8 <close_stdout@@Base+0xb30>
   1348c:	b	139f8 <close_stdout@@Base+0xb30>
   13490:	b	139f8 <close_stdout@@Base+0xb30>
   13494:	b	139f8 <close_stdout@@Base+0xb30>
   13498:	b	139f8 <close_stdout@@Base+0xb30>
   1349c:	b	139f8 <close_stdout@@Base+0xb30>
   134a0:	b	139f8 <close_stdout@@Base+0xb30>
   134a4:	b	139f8 <close_stdout@@Base+0xb30>
   134a8:	b	139f8 <close_stdout@@Base+0xb30>
   134ac:	b	139f8 <close_stdout@@Base+0xb30>
   134b0:	b	139f8 <close_stdout@@Base+0xb30>
   134b4:	b	139f8 <close_stdout@@Base+0xb30>
   134b8:	b	1382c <close_stdout@@Base+0x964>
   134bc:	b	1382c <close_stdout@@Base+0x964>
   134c0:	b	1382c <close_stdout@@Base+0x964>
   134c4:	b	13824 <close_stdout@@Base+0x95c>
   134c8:	b	1382c <close_stdout@@Base+0x964>
   134cc:	b	13700 <close_stdout@@Base+0x838>
   134d0:	b	1382c <close_stdout@@Base+0x964>
   134d4:	b	139a0 <close_stdout@@Base+0xad8>
   134d8:	b	1382c <close_stdout@@Base+0x964>
   134dc:	b	1382c <close_stdout@@Base+0x964>
   134e0:	b	1382c <close_stdout@@Base+0x964>
   134e4:	b	13700 <close_stdout@@Base+0x838>
   134e8:	b	13700 <close_stdout@@Base+0x838>
   134ec:	b	13700 <close_stdout@@Base+0x838>
   134f0:	b	13700 <close_stdout@@Base+0x838>
   134f4:	b	13700 <close_stdout@@Base+0x838>
   134f8:	b	13700 <close_stdout@@Base+0x838>
   134fc:	b	13700 <close_stdout@@Base+0x838>
   13500:	b	13700 <close_stdout@@Base+0x838>
   13504:	b	13700 <close_stdout@@Base+0x838>
   13508:	b	13700 <close_stdout@@Base+0x838>
   1350c:	b	13700 <close_stdout@@Base+0x838>
   13510:	b	13700 <close_stdout@@Base+0x838>
   13514:	b	13700 <close_stdout@@Base+0x838>
   13518:	b	13700 <close_stdout@@Base+0x838>
   1351c:	b	13700 <close_stdout@@Base+0x838>
   13520:	b	13700 <close_stdout@@Base+0x838>
   13524:	b	1382c <close_stdout@@Base+0x964>
   13528:	b	1382c <close_stdout@@Base+0x964>
   1352c:	b	1382c <close_stdout@@Base+0x964>
   13530:	b	1382c <close_stdout@@Base+0x964>
   13534:	b	13634 <close_stdout@@Base+0x76c>
   13538:	b	139f8 <close_stdout@@Base+0xb30>
   1353c:	b	13700 <close_stdout@@Base+0x838>
   13540:	b	13700 <close_stdout@@Base+0x838>
   13544:	b	13700 <close_stdout@@Base+0x838>
   13548:	b	13700 <close_stdout@@Base+0x838>
   1354c:	b	13700 <close_stdout@@Base+0x838>
   13550:	b	13700 <close_stdout@@Base+0x838>
   13554:	b	13700 <close_stdout@@Base+0x838>
   13558:	b	13700 <close_stdout@@Base+0x838>
   1355c:	b	13700 <close_stdout@@Base+0x838>
   13560:	b	13700 <close_stdout@@Base+0x838>
   13564:	b	13700 <close_stdout@@Base+0x838>
   13568:	b	13700 <close_stdout@@Base+0x838>
   1356c:	b	13700 <close_stdout@@Base+0x838>
   13570:	b	13700 <close_stdout@@Base+0x838>
   13574:	b	13700 <close_stdout@@Base+0x838>
   13578:	b	13700 <close_stdout@@Base+0x838>
   1357c:	b	13700 <close_stdout@@Base+0x838>
   13580:	b	13700 <close_stdout@@Base+0x838>
   13584:	b	13700 <close_stdout@@Base+0x838>
   13588:	b	13700 <close_stdout@@Base+0x838>
   1358c:	b	13700 <close_stdout@@Base+0x838>
   13590:	b	13700 <close_stdout@@Base+0x838>
   13594:	b	13700 <close_stdout@@Base+0x838>
   13598:	b	13700 <close_stdout@@Base+0x838>
   1359c:	b	13700 <close_stdout@@Base+0x838>
   135a0:	b	13700 <close_stdout@@Base+0x838>
   135a4:	b	1382c <close_stdout@@Base+0x964>
   135a8:	b	13984 <close_stdout@@Base+0xabc>
   135ac:	b	13700 <close_stdout@@Base+0x838>
   135b0:	b	1382c <close_stdout@@Base+0x964>
   135b4:	b	13700 <close_stdout@@Base+0x838>
   135b8:	b	1382c <close_stdout@@Base+0x964>
   135bc:	b	13700 <close_stdout@@Base+0x838>
   135c0:	b	13700 <close_stdout@@Base+0x838>
   135c4:	b	13700 <close_stdout@@Base+0x838>
   135c8:	b	13700 <close_stdout@@Base+0x838>
   135cc:	b	13700 <close_stdout@@Base+0x838>
   135d0:	b	13700 <close_stdout@@Base+0x838>
   135d4:	b	13700 <close_stdout@@Base+0x838>
   135d8:	b	13700 <close_stdout@@Base+0x838>
   135dc:	b	13700 <close_stdout@@Base+0x838>
   135e0:	b	13700 <close_stdout@@Base+0x838>
   135e4:	b	13700 <close_stdout@@Base+0x838>
   135e8:	b	13700 <close_stdout@@Base+0x838>
   135ec:	b	13700 <close_stdout@@Base+0x838>
   135f0:	b	13700 <close_stdout@@Base+0x838>
   135f4:	b	13700 <close_stdout@@Base+0x838>
   135f8:	b	13700 <close_stdout@@Base+0x838>
   135fc:	b	13700 <close_stdout@@Base+0x838>
   13600:	b	13700 <close_stdout@@Base+0x838>
   13604:	b	13700 <close_stdout@@Base+0x838>
   13608:	b	13700 <close_stdout@@Base+0x838>
   1360c:	b	13700 <close_stdout@@Base+0x838>
   13610:	b	13700 <close_stdout@@Base+0x838>
   13614:	b	13700 <close_stdout@@Base+0x838>
   13618:	b	13700 <close_stdout@@Base+0x838>
   1361c:	b	13700 <close_stdout@@Base+0x838>
   13620:	b	13700 <close_stdout@@Base+0x838>
   13624:	b	1380c <close_stdout@@Base+0x944>
   13628:	b	1382c <close_stdout@@Base+0x964>
   1362c:	b	1380c <close_stdout@@Base+0x944>
   13630:	b	13824 <close_stdout@@Base+0x95c>
   13634:	ldr	r3, [sp, #160]	; 0xa0
   13638:	cmp	r3, #2
   1363c:	beq	13ec8 <close_stdout@@Base+0x1000>
   13640:	cmp	r3, #3
   13644:	bne	13700 <close_stdout@@Base+0x838>
   13648:	ldr	r1, [sp, #164]	; 0xa4
   1364c:	tst	r1, #4
   13650:	beq	13700 <close_stdout@@Base+0x838>
   13654:	add	r3, fp, #2
   13658:	cmp	r8, r3
   1365c:	bls	13700 <close_stdout@@Base+0x838>
   13660:	ldrb	r2, [r5, #1]
   13664:	mov	r1, #1
   13668:	cmp	r2, #63	; 0x3f
   1366c:	bne	13700 <close_stdout@@Base+0x838>
   13670:	ldr	r0, [sp, #32]
   13674:	ldrb	ip, [r0, r3]
   13678:	sub	r0, ip, #33	; 0x21
   1367c:	uxtb	r0, r0
   13680:	cmp	r0, #29
   13684:	bhi	13700 <close_stdout@@Base+0x838>
   13688:	lsl	r1, r1, r0
   1368c:	movw	r0, #20929	; 0x51c1
   13690:	movt	r0, #14336	; 0x3800
   13694:	and	r0, r1, r0
   13698:	cmp	r0, #0
   1369c:	beq	13700 <close_stdout@@Base+0x838>
   136a0:	ldr	r1, [sp, #36]	; 0x24
   136a4:	cmp	r1, #0
   136a8:	bne	13848 <close_stdout@@Base+0x980>
   136ac:	cmp	r9, sl
   136b0:	mov	r4, ip
   136b4:	mov	fp, r3
   136b8:	ldrcc	r0, [sp, #40]	; 0x28
   136bc:	strbcc	r2, [r0, r9]
   136c0:	add	r2, r9, #1
   136c4:	cmp	sl, r2
   136c8:	ldrhi	r0, [sp, #40]	; 0x28
   136cc:	movhi	r1, #34	; 0x22
   136d0:	strbhi	r1, [r0, r2]
   136d4:	add	r2, r9, #2
   136d8:	cmp	sl, r2
   136dc:	ldrhi	r0, [sp, #40]	; 0x28
   136e0:	movhi	r1, #34	; 0x22
   136e4:	strbhi	r1, [r0, r2]
   136e8:	add	r2, r9, #3
   136ec:	cmp	sl, r2
   136f0:	add	r9, r9, #4
   136f4:	ldrhi	r0, [sp, #40]	; 0x28
   136f8:	movhi	r1, #63	; 0x3f
   136fc:	strbhi	r1, [r0, r2]
   13700:	ldr	r0, [sp, #44]	; 0x2c
   13704:	cmp	r0, #0
   13708:	bne	13730 <close_stdout@@Base+0x868>
   1370c:	ldr	r1, [sp, #48]	; 0x30
   13710:	cmp	r1, #0
   13714:	beq	13730 <close_stdout@@Base+0x868>
   13718:	ubfx	r2, r4, #5, #8
   1371c:	and	r3, r4, #31
   13720:	ldr	r2, [r1, r2, lsl #2]
   13724:	lsr	r3, r2, r3
   13728:	tst	r3, #1
   1372c:	bne	13738 <close_stdout@@Base+0x870>
   13730:	cmp	r6, #0
   13734:	beq	13758 <close_stdout@@Base+0x890>
   13738:	ldr	r2, [sp, #36]	; 0x24
   1373c:	cmp	r2, #0
   13740:	bne	13848 <close_stdout@@Base+0x980>
   13744:	cmp	r9, sl
   13748:	ldrcc	r0, [sp, #40]	; 0x28
   1374c:	movcc	r3, #92	; 0x5c
   13750:	strbcc	r3, [r0, r9]
   13754:	add	r9, r9, #1
   13758:	add	fp, fp, #1
   1375c:	cmp	r9, sl
   13760:	ldrcc	r1, [sp, #40]	; 0x28
   13764:	strbcc	r4, [r1, r9]
   13768:	cmn	r8, #1
   1376c:	add	r9, r9, #1
   13770:	bne	133f8 <close_stdout@@Base+0x530>
   13774:	ldr	r2, [sp, #32]
   13778:	ldrb	r3, [r2, fp]
   1377c:	adds	r3, r3, #0
   13780:	movne	r3, #1
   13784:	cmp	r3, #0
   13788:	bne	13408 <close_stdout@@Base+0x540>
   1378c:	ldr	r3, [sp, #160]	; 0xa0
   13790:	cmp	r9, #0
   13794:	cmpeq	r3, #2
   13798:	bne	137a8 <close_stdout@@Base+0x8e0>
   1379c:	ldr	r0, [sp, #36]	; 0x24
   137a0:	cmp	r0, #0
   137a4:	bne	13848 <close_stdout@@Base+0x980>
   137a8:	ldr	r1, [sp, #36]	; 0x24
   137ac:	ldr	r2, [sp, #52]	; 0x34
   137b0:	eor	r3, r1, #1
   137b4:	cmp	r2, #0
   137b8:	moveq	r3, #0
   137bc:	andne	r3, r3, #1
   137c0:	cmp	r3, #0
   137c4:	beq	137f0 <close_stdout@@Base+0x928>
   137c8:	ldrb	r3, [r2]
   137cc:	cmp	r3, #0
   137d0:	beq	137f0 <close_stdout@@Base+0x928>
   137d4:	ldr	r1, [sp, #40]	; 0x28
   137d8:	cmp	sl, r9
   137dc:	strbhi	r3, [r1, r9]
   137e0:	ldrb	r3, [r2, #1]!
   137e4:	add	r9, r9, #1
   137e8:	cmp	r3, #0
   137ec:	bne	137d8 <close_stdout@@Base+0x910>
   137f0:	cmp	r9, sl
   137f4:	movcs	r0, r9
   137f8:	ldrcc	r1, [sp, #40]	; 0x28
   137fc:	movcc	r3, #0
   13800:	movcc	r0, r9
   13804:	strbcc	r3, [r1, r9]
   13808:	b	13884 <close_stdout@@Base+0x9bc>
   1380c:	cmn	r8, #1
   13810:	beq	13ed8 <close_stdout@@Base+0x1010>
   13814:	subs	r3, r8, #1
   13818:	movne	r3, #1
   1381c:	cmp	r3, #0
   13820:	bne	13700 <close_stdout@@Base+0x838>
   13824:	cmp	fp, #0
   13828:	bne	13700 <close_stdout@@Base+0x838>
   1382c:	ldr	r3, [sp, #36]	; 0x24
   13830:	ldr	r0, [sp, #160]	; 0xa0
   13834:	cmp	r0, #2
   13838:	movne	r3, #0
   1383c:	andeq	r3, r3, #1
   13840:	cmp	r3, #0
   13844:	beq	13700 <close_stdout@@Base+0x838>
   13848:	ldr	r2, [sp, #164]	; 0xa4
   1384c:	mov	ip, #0
   13850:	ldr	r0, [sp, #160]	; 0xa0
   13854:	bic	r3, r2, #2
   13858:	ldr	r1, [sp, #72]	; 0x48
   1385c:	ldr	r2, [sp, #68]	; 0x44
   13860:	stm	sp, {r0, r3}
   13864:	mov	r3, r8
   13868:	str	r1, [sp, #12]
   1386c:	mov	r1, sl
   13870:	str	r2, [sp, #16]
   13874:	ldr	r0, [sp, #40]	; 0x28
   13878:	ldr	r2, [sp, #32]
   1387c:	str	ip, [sp, #8]
   13880:	bl	13318 <close_stdout@@Base+0x450>
   13884:	ldr	r1, [sp, #56]	; 0x38
   13888:	ldr	r2, [sp, #116]	; 0x74
   1388c:	ldr	r3, [r1]
   13890:	cmp	r2, r3
   13894:	bne	13fc8 <close_stdout@@Base+0x1100>
   13898:	add	sp, sp, #124	; 0x7c
   1389c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138a0:	mov	r3, #114	; 0x72
   138a4:	ldr	r2, [sp, #36]	; 0x24
   138a8:	ldr	r0, [sp, #160]	; 0xa0
   138ac:	cmp	r0, #2
   138b0:	movne	r2, #0
   138b4:	andeq	r2, r2, #1
   138b8:	cmp	r2, #0
   138bc:	bne	13848 <close_stdout@@Base+0x980>
   138c0:	ldr	r1, [sp, #24]
   138c4:	cmp	r1, #0
   138c8:	beq	13700 <close_stdout@@Base+0x838>
   138cc:	mov	r4, r3
   138d0:	b	13738 <close_stdout@@Base+0x870>
   138d4:	mov	r3, #98	; 0x62
   138d8:	b	138c0 <close_stdout@@Base+0x9f8>
   138dc:	mov	r3, #102	; 0x66
   138e0:	b	138c0 <close_stdout@@Base+0x9f8>
   138e4:	mov	r3, #118	; 0x76
   138e8:	b	138c0 <close_stdout@@Base+0x9f8>
   138ec:	mov	r3, #97	; 0x61
   138f0:	b	138c0 <close_stdout@@Base+0x9f8>
   138f4:	mov	r3, #110	; 0x6e
   138f8:	b	138a4 <close_stdout@@Base+0x9dc>
   138fc:	mov	r3, #116	; 0x74
   13900:	b	138a4 <close_stdout@@Base+0x9dc>
   13904:	ldr	r2, [sp, #24]
   13908:	cmp	r2, #0
   1390c:	beq	13eb4 <close_stdout@@Base+0xfec>
   13910:	ldr	r3, [sp, #36]	; 0x24
   13914:	cmp	r3, #0
   13918:	bne	13848 <close_stdout@@Base+0x980>
   1391c:	cmp	r9, sl
   13920:	add	r2, r9, #1
   13924:	ldrcc	r0, [sp, #40]	; 0x28
   13928:	movcc	r3, #92	; 0x5c
   1392c:	strbcc	r3, [r0, r9]
   13930:	add	r3, fp, #1
   13934:	cmp	r8, r3
   13938:	bls	13978 <close_stdout@@Base+0xab0>
   1393c:	ldr	r1, [sp, #32]
   13940:	ldrb	r3, [r1, r3]
   13944:	sub	r3, r3, #48	; 0x30
   13948:	cmp	r3, #9
   1394c:	bhi	13978 <close_stdout@@Base+0xab0>
   13950:	cmp	sl, r2
   13954:	ldrhi	r0, [sp, #40]	; 0x28
   13958:	movhi	r3, #48	; 0x30
   1395c:	strbhi	r3, [r0, r2]
   13960:	add	r3, r9, #2
   13964:	cmp	sl, r3
   13968:	ldrhi	r1, [sp, #40]	; 0x28
   1396c:	movhi	r2, #48	; 0x30
   13970:	strbhi	r2, [r1, r3]
   13974:	add	r2, r9, #3
   13978:	mov	r9, r2
   1397c:	mov	r4, #48	; 0x30
   13980:	b	1370c <close_stdout@@Base+0x844>
   13984:	ldr	r1, [sp, #76]	; 0x4c
   13988:	cmp	r1, #0
   1398c:	beq	13998 <close_stdout@@Base+0xad0>
   13990:	cmp	r7, #0
   13994:	bne	13758 <close_stdout@@Base+0x890>
   13998:	mov	r3, r4
   1399c:	b	138a4 <close_stdout@@Base+0x9dc>
   139a0:	ldr	r1, [sp, #160]	; 0xa0
   139a4:	cmp	r1, #2
   139a8:	bne	13700 <close_stdout@@Base+0x838>
   139ac:	ldr	r2, [sp, #36]	; 0x24
   139b0:	cmp	r2, #0
   139b4:	bne	13848 <close_stdout@@Base+0x980>
   139b8:	cmp	r9, sl
   139bc:	ldrcc	r0, [sp, #40]	; 0x28
   139c0:	movcc	r3, #39	; 0x27
   139c4:	strbcc	r3, [r0, r9]
   139c8:	add	r3, r9, #1
   139cc:	cmp	sl, r3
   139d0:	ldrhi	r1, [sp, #40]	; 0x28
   139d4:	movhi	r2, #92	; 0x5c
   139d8:	strbhi	r2, [r1, r3]
   139dc:	add	r3, r9, #2
   139e0:	cmp	sl, r3
   139e4:	add	r9, r9, #3
   139e8:	ldrhi	r0, [sp, #40]	; 0x28
   139ec:	movhi	r2, #39	; 0x27
   139f0:	strbhi	r2, [r0, r3]
   139f4:	b	13700 <close_stdout@@Base+0x838>
   139f8:	ldr	r1, [sp, #64]	; 0x40
   139fc:	cmp	r1, #1
   13a00:	bne	13cf8 <close_stdout@@Base+0xe30>
   13a04:	bl	11868 <__ctype_b_loc@plt>
   13a08:	ldr	r2, [sp, #64]	; 0x40
   13a0c:	sxth	r3, r4
   13a10:	str	r2, [sp, #60]	; 0x3c
   13a14:	lsl	r3, r3, #1
   13a18:	ldr	r2, [r0]
   13a1c:	ldrh	r2, [r2, r3]
   13a20:	eor	r2, r2, #16384	; 0x4000
   13a24:	ubfx	r2, r2, #14, #1
   13a28:	ldr	r1, [sp, #24]
   13a2c:	ands	r2, r2, r1
   13a30:	beq	13700 <close_stdout@@Base+0x838>
   13a34:	ldr	r3, [sp, #60]	; 0x3c
   13a38:	mov	r0, #92	; 0x5c
   13a3c:	ldr	r7, [sp, #36]	; 0x24
   13a40:	add	r1, r3, fp
   13a44:	str	r8, [sp, #60]	; 0x3c
   13a48:	ldr	r3, [sp, #40]	; 0x28
   13a4c:	b	13ab0 <close_stdout@@Base+0xbe8>
   13a50:	cmp	r7, #0
   13a54:	bne	13ef0 <close_stdout@@Base+0x1028>
   13a58:	add	ip, r9, #1
   13a5c:	cmp	r9, sl
   13a60:	strbcc	r0, [r3, r9]
   13a64:	cmp	sl, ip
   13a68:	lsrhi	r8, r4, #6
   13a6c:	addhi	r8, r8, #48	; 0x30
   13a70:	strbhi	r8, [r3, ip]
   13a74:	add	ip, r9, #2
   13a78:	add	r9, r9, #3
   13a7c:	cmp	sl, ip
   13a80:	ubfxhi	r8, r4, #3, #3
   13a84:	and	r4, r4, #7
   13a88:	add	r4, r4, #48	; 0x30
   13a8c:	addhi	r8, r8, #48	; 0x30
   13a90:	strbhi	r8, [r3, ip]
   13a94:	add	fp, fp, #1
   13a98:	cmp	r1, fp
   13a9c:	bls	13adc <close_stdout@@Base+0xc14>
   13aa0:	cmp	r9, sl
   13aa4:	strbcc	r4, [r3, r9]
   13aa8:	ldrb	r4, [r5, #1]!
   13aac:	add	r9, r9, #1
   13ab0:	cmp	r2, #0
   13ab4:	bne	13a50 <close_stdout@@Base+0xb88>
   13ab8:	cmp	r6, #0
   13abc:	beq	13a94 <close_stdout@@Base+0xbcc>
   13ac0:	add	fp, fp, #1
   13ac4:	cmp	r9, sl
   13ac8:	strbcc	r0, [r3, r9]
   13acc:	cmp	r1, fp
   13ad0:	add	r9, r9, #1
   13ad4:	mov	r6, #0
   13ad8:	bhi	13aa0 <close_stdout@@Base+0xbd8>
   13adc:	ldr	r8, [sp, #60]	; 0x3c
   13ae0:	b	1375c <close_stdout@@Base+0x894>
   13ae4:	ldr	r3, [sp, #36]	; 0x24
   13ae8:	cmp	r3, #0
   13aec:	bne	13ff0 <close_stdout@@Base+0x1128>
   13af0:	cmp	sl, #0
   13af4:	beq	13f08 <close_stdout@@Base+0x1040>
   13af8:	ldr	r1, [sp, #40]	; 0x28
   13afc:	mov	r0, #1
   13b00:	ldr	r2, [pc, #1296]	; 14018 <close_stdout@@Base+0x1150>
   13b04:	mov	r3, #34	; 0x22
   13b08:	str	r0, [sp, #24]
   13b0c:	mov	r9, r0
   13b10:	add	r2, pc, r2
   13b14:	str	r0, [sp, #28]
   13b18:	strb	r3, [r1]
   13b1c:	str	r2, [sp, #52]	; 0x34
   13b20:	b	133cc <close_stdout@@Base+0x504>
   13b24:	ldr	r3, [pc, #1264]	; 1401c <close_stdout@@Base+0x1154>
   13b28:	mov	r2, #1
   13b2c:	mov	r0, #3
   13b30:	str	r2, [sp, #36]	; 0x24
   13b34:	add	r3, pc, r3
   13b38:	str	r2, [sp, #24]
   13b3c:	str	r3, [sp, #52]	; 0x34
   13b40:	mov	r9, #0
   13b44:	str	r2, [sp, #28]
   13b48:	str	r0, [sp, #160]	; 0xa0
   13b4c:	b	133cc <close_stdout@@Base+0x504>
   13b50:	mov	r0, #0
   13b54:	mov	r1, #1
   13b58:	str	r0, [sp, #36]	; 0x24
   13b5c:	mov	r9, r0
   13b60:	str	r1, [sp, #24]
   13b64:	str	r0, [sp, #28]
   13b68:	str	r0, [sp, #52]	; 0x34
   13b6c:	b	133cc <close_stdout@@Base+0x504>
   13b70:	ldr	r3, [sp, #160]	; 0xa0
   13b74:	cmp	r3, #8
   13b78:	beq	13ba4 <close_stdout@@Base+0xcdc>
   13b7c:	ldr	r0, [pc, #1180]	; 14020 <close_stdout@@Base+0x1158>
   13b80:	mov	r1, r3
   13b84:	add	r0, pc, r0
   13b88:	bl	131b4 <close_stdout@@Base+0x2ec>
   13b8c:	ldr	r1, [sp, #160]	; 0xa0
   13b90:	str	r0, [sp, #72]	; 0x48
   13b94:	ldr	r0, [pc, #1160]	; 14024 <close_stdout@@Base+0x115c>
   13b98:	add	r0, pc, r0
   13b9c:	bl	131b4 <close_stdout@@Base+0x2ec>
   13ba0:	str	r0, [sp, #68]	; 0x44
   13ba4:	ldr	r0, [sp, #36]	; 0x24
   13ba8:	cmp	r0, #0
   13bac:	movne	r9, #0
   13bb0:	bne	13be8 <close_stdout@@Base+0xd20>
   13bb4:	ldr	r1, [sp, #72]	; 0x48
   13bb8:	ldrb	r3, [r1]
   13bbc:	cmp	r3, #0
   13bc0:	beq	13fc0 <close_stdout@@Base+0x10f8>
   13bc4:	mov	r2, r1
   13bc8:	ldr	r1, [sp, #40]	; 0x28
   13bcc:	mov	r9, r0
   13bd0:	cmp	r9, sl
   13bd4:	strbcc	r3, [r1, r9]
   13bd8:	ldrb	r3, [r2, #1]!
   13bdc:	add	r9, r9, #1
   13be0:	cmp	r3, #0
   13be4:	bne	13bd0 <close_stdout@@Base+0xd08>
   13be8:	ldr	r0, [sp, #68]	; 0x44
   13bec:	str	r0, [sp, #52]	; 0x34
   13bf0:	bl	118a4 <strlen@plt>
   13bf4:	mov	r2, #1
   13bf8:	str	r2, [sp, #24]
   13bfc:	str	r0, [sp, #28]
   13c00:	b	133cc <close_stdout@@Base+0x504>
   13c04:	ldr	r3, [pc, #1052]	; 14028 <close_stdout@@Base+0x1160>
   13c08:	mov	r2, #0
   13c0c:	mov	r1, #1
   13c10:	mov	r0, #2
   13c14:	add	r3, pc, r3
   13c18:	str	r1, [sp, #36]	; 0x24
   13c1c:	str	r2, [sp, #24]
   13c20:	mov	r9, r2
   13c24:	str	r1, [sp, #28]
   13c28:	str	r3, [sp, #52]	; 0x34
   13c2c:	str	r0, [sp, #160]	; 0xa0
   13c30:	b	133cc <close_stdout@@Base+0x504>
   13c34:	ldr	r3, [sp, #36]	; 0x24
   13c38:	cmp	r3, #0
   13c3c:	bne	13fcc <close_stdout@@Base+0x1104>
   13c40:	cmp	sl, #0
   13c44:	beq	13f28 <close_stdout@@Base+0x1060>
   13c48:	ldr	r1, [sp, #40]	; 0x28
   13c4c:	mov	r3, #39	; 0x27
   13c50:	ldr	r2, [sp, #36]	; 0x24
   13c54:	mov	r0, #1
   13c58:	mov	r9, r0
   13c5c:	str	r0, [sp, #28]
   13c60:	strb	r3, [r1]
   13c64:	ldr	r3, [pc, #960]	; 1402c <close_stdout@@Base+0x1164>
   13c68:	str	r2, [sp, #24]
   13c6c:	add	r3, pc, r3
   13c70:	str	r3, [sp, #52]	; 0x34
   13c74:	b	133cc <close_stdout@@Base+0x504>
   13c78:	ldr	r2, [sp, #28]
   13c7c:	cmp	r2, #1
   13c80:	add	r4, fp, r2
   13c84:	movls	r3, #0
   13c88:	movhi	r3, #1
   13c8c:	cmn	r8, #1
   13c90:	movne	r3, #0
   13c94:	cmp	r3, #0
   13c98:	beq	13ca8 <close_stdout@@Base+0xde0>
   13c9c:	ldr	r0, [sp, #32]
   13ca0:	bl	118a4 <strlen@plt>
   13ca4:	mov	r8, r0
   13ca8:	cmp	r8, r4
   13cac:	ldrcc	r3, [sp, #32]
   13cb0:	movcc	r6, #0
   13cb4:	addcc	r5, r3, fp
   13cb8:	bcc	13428 <close_stdout@@Base+0x560>
   13cbc:	ldr	r0, [sp, #32]
   13cc0:	ldr	r1, [sp, #52]	; 0x34
   13cc4:	add	r5, r0, fp
   13cc8:	ldr	r2, [sp, #28]
   13ccc:	mov	r0, r5
   13cd0:	bl	11718 <memcmp@plt>
   13cd4:	cmp	r0, #0
   13cd8:	bne	13cf0 <close_stdout@@Base+0xe28>
   13cdc:	ldr	r1, [sp, #36]	; 0x24
   13ce0:	cmp	r1, #0
   13ce4:	bne	13848 <close_stdout@@Base+0x980>
   13ce8:	mov	r6, #1
   13cec:	b	13428 <close_stdout@@Base+0x560>
   13cf0:	mov	r6, #0
   13cf4:	b	13428 <close_stdout@@Base+0x560>
   13cf8:	add	r7, sp, #108	; 0x6c
   13cfc:	cmn	r8, #1
   13d00:	mov	r3, #0
   13d04:	str	r3, [sp, #108]	; 0x6c
   13d08:	str	r3, [r7, #4]
   13d0c:	beq	13ef8 <close_stdout@@Base+0x1030>
   13d10:	mov	r1, #0
   13d14:	ldr	r0, [sp, #32]
   13d18:	mov	ip, #1
   13d1c:	str	r9, [sp, #88]	; 0x58
   13d20:	str	r6, [sp, #96]	; 0x60
   13d24:	mov	r9, r1
   13d28:	str	r5, [sp, #100]	; 0x64
   13d2c:	mov	r6, ip
   13d30:	mov	r5, r7
   13d34:	add	r3, sp, #104	; 0x68
   13d38:	sub	r0, r0, #1
   13d3c:	str	r3, [sp, #80]	; 0x50
   13d40:	str	r0, [sp, #84]	; 0x54
   13d44:	str	r1, [sp, #60]	; 0x3c
   13d48:	str	r4, [sp, #92]	; 0x5c
   13d4c:	ldr	r2, [sp, #32]
   13d50:	add	r7, r9, fp
   13d54:	add	r0, sp, #104	; 0x68
   13d58:	mov	r3, r5
   13d5c:	add	r4, r2, r7
   13d60:	rsb	r2, r7, r8
   13d64:	mov	r1, r4
   13d68:	bl	117e4 <mbrtowc@plt>
   13d6c:	subs	r2, r0, #0
   13d70:	beq	13e7c <close_stdout@@Base+0xfb4>
   13d74:	cmn	r2, #1
   13d78:	beq	13fa4 <close_stdout@@Base+0x10dc>
   13d7c:	cmn	r2, #2
   13d80:	beq	13f48 <close_stdout@@Base+0x1080>
   13d84:	ldr	r3, [sp, #36]	; 0x24
   13d88:	ldr	r0, [sp, #160]	; 0xa0
   13d8c:	cmp	r0, #2
   13d90:	movne	r3, #0
   13d94:	andeq	r3, r3, #1
   13d98:	cmp	r3, #0
   13d9c:	beq	13e58 <close_stdout@@Base+0xf90>
   13da0:	cmp	r2, #1
   13da4:	beq	13e58 <close_stdout@@Base+0xf90>
   13da8:	ldr	r1, [sp, #84]	; 0x54
   13dac:	add	r3, r1, r2
   13db0:	add	r7, r3, r7
   13db4:	ldrb	r3, [r4, #1]!
   13db8:	sub	r3, r3, #91	; 0x5b
   13dbc:	cmp	r3, #33	; 0x21
   13dc0:	addls	pc, pc, r3, lsl #2
   13dc4:	b	13e50 <close_stdout@@Base+0xf88>
   13dc8:	b	13848 <close_stdout@@Base+0x980>
   13dcc:	b	13848 <close_stdout@@Base+0x980>
   13dd0:	b	13e50 <close_stdout@@Base+0xf88>
   13dd4:	b	13848 <close_stdout@@Base+0x980>
   13dd8:	b	13e50 <close_stdout@@Base+0xf88>
   13ddc:	b	13848 <close_stdout@@Base+0x980>
   13de0:	b	13e50 <close_stdout@@Base+0xf88>
   13de4:	b	13e50 <close_stdout@@Base+0xf88>
   13de8:	b	13e50 <close_stdout@@Base+0xf88>
   13dec:	b	13e50 <close_stdout@@Base+0xf88>
   13df0:	b	13e50 <close_stdout@@Base+0xf88>
   13df4:	b	13e50 <close_stdout@@Base+0xf88>
   13df8:	b	13e50 <close_stdout@@Base+0xf88>
   13dfc:	b	13e50 <close_stdout@@Base+0xf88>
   13e00:	b	13e50 <close_stdout@@Base+0xf88>
   13e04:	b	13e50 <close_stdout@@Base+0xf88>
   13e08:	b	13e50 <close_stdout@@Base+0xf88>
   13e0c:	b	13e50 <close_stdout@@Base+0xf88>
   13e10:	b	13e50 <close_stdout@@Base+0xf88>
   13e14:	b	13e50 <close_stdout@@Base+0xf88>
   13e18:	b	13e50 <close_stdout@@Base+0xf88>
   13e1c:	b	13e50 <close_stdout@@Base+0xf88>
   13e20:	b	13e50 <close_stdout@@Base+0xf88>
   13e24:	b	13e50 <close_stdout@@Base+0xf88>
   13e28:	b	13e50 <close_stdout@@Base+0xf88>
   13e2c:	b	13e50 <close_stdout@@Base+0xf88>
   13e30:	b	13e50 <close_stdout@@Base+0xf88>
   13e34:	b	13e50 <close_stdout@@Base+0xf88>
   13e38:	b	13e50 <close_stdout@@Base+0xf88>
   13e3c:	b	13e50 <close_stdout@@Base+0xf88>
   13e40:	b	13e50 <close_stdout@@Base+0xf88>
   13e44:	b	13e50 <close_stdout@@Base+0xf88>
   13e48:	b	13e50 <close_stdout@@Base+0xf88>
   13e4c:	b	13848 <close_stdout@@Base+0x980>
   13e50:	cmp	r4, r7
   13e54:	bne	13db4 <close_stdout@@Base+0xeec>
   13e58:	ldr	r0, [sp, #104]	; 0x68
   13e5c:	add	r9, r9, r2
   13e60:	bl	11790 <iswprint@plt>
   13e64:	cmp	r0, #0
   13e68:	mov	r0, r5
   13e6c:	moveq	r6, #0
   13e70:	bl	11700 <mbsinit@plt>
   13e74:	cmp	r0, #0
   13e78:	beq	13d4c <close_stdout@@Base+0xe84>
   13e7c:	mov	ip, r6
   13e80:	eor	r2, ip, #1
   13e84:	str	r9, [sp, #60]	; 0x3c
   13e88:	ldr	r4, [sp, #92]	; 0x5c
   13e8c:	uxtb	r2, r2
   13e90:	ldr	r9, [sp, #88]	; 0x58
   13e94:	ldr	r6, [sp, #96]	; 0x60
   13e98:	ldr	r5, [sp, #100]	; 0x64
   13e9c:	ldr	r3, [sp, #60]	; 0x3c
   13ea0:	cmp	r3, #1
   13ea4:	bls	13a28 <close_stdout@@Base+0xb60>
   13ea8:	ldr	r0, [sp, #24]
   13eac:	and	r2, r2, r0
   13eb0:	b	13a34 <close_stdout@@Base+0xb6c>
   13eb4:	ldr	r2, [sp, #164]	; 0xa4
   13eb8:	tst	r2, #1
   13ebc:	addne	fp, fp, #1
   13ec0:	bne	133f0 <close_stdout@@Base+0x528>
   13ec4:	b	13700 <close_stdout@@Base+0x838>
   13ec8:	ldr	r0, [sp, #36]	; 0x24
   13ecc:	cmp	r0, #0
   13ed0:	beq	13700 <close_stdout@@Base+0x838>
   13ed4:	b	13848 <close_stdout@@Base+0x980>
   13ed8:	ldr	r2, [sp, #32]
   13edc:	ldrb	r3, [r2, #1]
   13ee0:	adds	r3, r3, #0
   13ee4:	movne	r3, #1
   13ee8:	b	1381c <close_stdout@@Base+0x954>
   13eec:	bl	11a30 <abort@plt>
   13ef0:	ldr	r8, [sp, #60]	; 0x3c
   13ef4:	b	13848 <close_stdout@@Base+0x980>
   13ef8:	ldr	r0, [sp, #32]
   13efc:	bl	118a4 <strlen@plt>
   13f00:	mov	r8, r0
   13f04:	b	13d10 <close_stdout@@Base+0xe48>
   13f08:	ldr	r2, [pc, #288]	; 14030 <close_stdout@@Base+0x1168>
   13f0c:	mov	r1, #1
   13f10:	mov	r9, r1
   13f14:	str	r1, [sp, #24]
   13f18:	add	r2, pc, r2
   13f1c:	str	r1, [sp, #28]
   13f20:	str	r2, [sp, #52]	; 0x34
   13f24:	b	133cc <close_stdout@@Base+0x504>
   13f28:	ldr	r2, [pc, #260]	; 14034 <close_stdout@@Base+0x116c>
   13f2c:	mov	r3, #1
   13f30:	mov	r9, r3
   13f34:	str	r3, [sp, #28]
   13f38:	add	r2, pc, r2
   13f3c:	str	sl, [sp, #24]
   13f40:	str	r2, [sp, #52]	; 0x34
   13f44:	b	133cc <close_stdout@@Base+0x504>
   13f48:	cmp	r8, r7
   13f4c:	str	r9, [sp, #60]	; 0x3c
   13f50:	mov	ip, r4
   13f54:	ldr	r6, [sp, #96]	; 0x60
   13f58:	ldr	r9, [sp, #88]	; 0x58
   13f5c:	ldr	r4, [sp, #92]	; 0x5c
   13f60:	ldr	r5, [sp, #100]	; 0x64
   13f64:	bls	13f9c <close_stdout@@Base+0x10d4>
   13f68:	ldrb	r3, [ip]
   13f6c:	cmp	r3, #0
   13f70:	beq	13f9c <close_stdout@@Base+0x10d4>
   13f74:	ldr	r3, [sp, #60]	; 0x3c
   13f78:	b	13f88 <close_stdout@@Base+0x10c0>
   13f7c:	ldrb	r2, [r5, r3]
   13f80:	cmp	r2, #0
   13f84:	beq	13f98 <close_stdout@@Base+0x10d0>
   13f88:	add	r3, r3, #1
   13f8c:	add	r2, fp, r3
   13f90:	cmp	r8, r2
   13f94:	bhi	13f7c <close_stdout@@Base+0x10b4>
   13f98:	str	r3, [sp, #60]	; 0x3c
   13f9c:	mov	r2, #1
   13fa0:	b	13e9c <close_stdout@@Base+0xfd4>
   13fa4:	str	r9, [sp, #60]	; 0x3c
   13fa8:	mov	r2, #1
   13fac:	ldr	r4, [sp, #92]	; 0x5c
   13fb0:	ldr	r6, [sp, #96]	; 0x60
   13fb4:	ldr	r9, [sp, #88]	; 0x58
   13fb8:	ldr	r5, [sp, #100]	; 0x64
   13fbc:	b	13e9c <close_stdout@@Base+0xfd4>
   13fc0:	ldr	r9, [sp, #36]	; 0x24
   13fc4:	b	13be8 <close_stdout@@Base+0xd20>
   13fc8:	bl	1173c <__stack_chk_fail@plt>
   13fcc:	ldr	r1, [pc, #100]	; 14038 <close_stdout@@Base+0x1170>
   13fd0:	mov	r3, #0
   13fd4:	mov	r0, #1
   13fd8:	str	r3, [sp, #24]
   13fdc:	add	r1, pc, r1
   13fe0:	str	r0, [sp, #28]
   13fe4:	mov	r9, r3
   13fe8:	str	r1, [sp, #52]	; 0x34
   13fec:	b	133cc <close_stdout@@Base+0x504>
   13ff0:	ldr	r0, [pc, #68]	; 1403c <close_stdout@@Base+0x1174>
   13ff4:	mov	r3, #1
   13ff8:	mov	r9, #0
   13ffc:	str	r3, [sp, #24]
   14000:	add	r0, pc, r0
   14004:	str	r3, [sp, #28]
   14008:	str	r0, [sp, #52]	; 0x34
   1400c:	b	133cc <close_stdout@@Base+0x504>
   14010:	andeq	r9, r1, r4, asr #25
   14014:	andeq	r0, r0, r8, ror #2
   14018:	andeq	r7, r0, r8, lsr sp
   1401c:	andeq	r7, r0, r4, lsl sp
   14020:	ldrdeq	r7, [r0], -r0
   14024:	andeq	r7, r0, ip, lsr #25
   14028:	andeq	r7, r0, r0, lsr ip
   1402c:	ldrdeq	r7, [r0], -r8
   14030:	andeq	r7, r0, r0, lsr r9
   14034:	andeq	r7, r0, ip, lsl #18
   14038:	andeq	r7, r0, r8, ror #16
   1403c:	andeq	r7, r0, r8, asr #16
   14040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14044:	sub	sp, sp, #44	; 0x2c
   14048:	mov	r6, r0
   1404c:	mov	r9, r1
   14050:	mov	sl, r2
   14054:	mov	r4, r3
   14058:	bl	118e0 <__errno_location@plt>
   1405c:	ldr	fp, [pc, #412]	; 14200 <close_stdout@@Base+0x1338>
   14060:	cmp	r6, #0
   14064:	add	fp, pc, fp
   14068:	ldr	r5, [fp]
   1406c:	ldr	r1, [r0]
   14070:	mov	r8, r0
   14074:	str	r1, [sp, #36]	; 0x24
   14078:	blt	141f8 <close_stdout@@Base+0x1330>
   1407c:	ldr	r3, [pc, #384]	; 14204 <close_stdout@@Base+0x133c>
   14080:	add	r3, pc, r3
   14084:	ldr	r3, [r3]
   14088:	cmp	r6, r3
   1408c:	bcc	140e0 <close_stdout@@Base+0x1218>
   14090:	add	r7, r6, #1
   14094:	cmn	r7, #-536870911	; 0xe0000001
   14098:	bhi	141fc <close_stdout@@Base+0x1334>
   1409c:	add	r3, fp, #4
   140a0:	cmp	r5, r3
   140a4:	beq	141d0 <close_stdout@@Base+0x1308>
   140a8:	mov	r0, r5
   140ac:	lsl	r1, r7, #3
   140b0:	bl	14f54 <close_stdout@@Base+0x208c>
   140b4:	mov	r5, r0
   140b8:	str	r0, [fp]
   140bc:	ldr	fp, [pc, #324]	; 14208 <close_stdout@@Base+0x1340>
   140c0:	mov	r1, #0
   140c4:	add	fp, pc, fp
   140c8:	ldr	r0, [fp]
   140cc:	rsb	r2, r0, r7
   140d0:	add	r0, r5, r0, lsl #3
   140d4:	lsl	r2, r2, #3
   140d8:	bl	11904 <memset@plt>
   140dc:	str	r7, [fp]
   140e0:	add	r2, r4, #8
   140e4:	str	r2, [sp, #32]
   140e8:	ldr	r1, [r4]
   140ec:	add	fp, r5, r6, lsl #3
   140f0:	ldr	lr, [sp, #32]
   140f4:	mov	r2, r9
   140f8:	ldr	r3, [r4, #4]
   140fc:	ldr	ip, [r5, r6, lsl #3]
   14100:	ldr	r7, [fp, #4]
   14104:	orr	r3, r3, #1
   14108:	str	r1, [sp]
   1410c:	str	r3, [sp, #4]
   14110:	mov	r1, ip
   14114:	str	lr, [sp, #8]
   14118:	mov	r0, r7
   1411c:	ldr	lr, [r4, #40]	; 0x28
   14120:	str	r3, [sp, #28]
   14124:	mov	r3, sl
   14128:	str	lr, [sp, #12]
   1412c:	ldr	lr, [r4, #44]	; 0x2c
   14130:	str	ip, [sp, #24]
   14134:	str	lr, [sp, #16]
   14138:	bl	13318 <close_stdout@@Base+0x450>
   1413c:	ldr	ip, [sp, #24]
   14140:	cmp	ip, r0
   14144:	bhi	141bc <close_stdout@@Base+0x12f4>
   14148:	ldr	r3, [pc, #188]	; 1420c <close_stdout@@Base+0x1344>
   1414c:	add	r1, r0, #1
   14150:	str	r1, [r5, r6, lsl #3]
   14154:	add	r3, pc, r3
   14158:	cmp	r7, r3
   1415c:	beq	14170 <close_stdout@@Base+0x12a8>
   14160:	mov	r0, r7
   14164:	str	r1, [sp, #24]
   14168:	bl	116dc <free@plt>
   1416c:	ldr	r1, [sp, #24]
   14170:	mov	r0, r1
   14174:	str	r1, [sp, #24]
   14178:	bl	14efc <close_stdout@@Base+0x2034>
   1417c:	ldr	r3, [sp, #28]
   14180:	ldr	lr, [sp, #32]
   14184:	mov	r2, r9
   14188:	str	r0, [fp, #4]
   1418c:	mov	r7, r0
   14190:	ldr	ip, [r4]
   14194:	str	r3, [sp, #4]
   14198:	mov	r3, sl
   1419c:	str	lr, [sp, #8]
   141a0:	str	ip, [sp]
   141a4:	ldr	ip, [r4, #40]	; 0x28
   141a8:	ldr	r1, [sp, #24]
   141ac:	str	ip, [sp, #12]
   141b0:	ldr	ip, [r4, #44]	; 0x2c
   141b4:	str	ip, [sp, #16]
   141b8:	bl	13318 <close_stdout@@Base+0x450>
   141bc:	ldr	r1, [sp, #36]	; 0x24
   141c0:	mov	r0, r7
   141c4:	str	r1, [r8]
   141c8:	add	sp, sp, #44	; 0x2c
   141cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141d0:	lsl	r1, r7, #3
   141d4:	mov	r0, #0
   141d8:	str	r3, [sp, #24]
   141dc:	bl	14f54 <close_stdout@@Base+0x208c>
   141e0:	ldr	r3, [sp, #24]
   141e4:	mov	r5, r0
   141e8:	ldm	r3, {r0, r1}
   141ec:	str	r5, [fp]
   141f0:	stm	r5, {r0, r1}
   141f4:	b	140bc <close_stdout@@Base+0x11f4>
   141f8:	bl	11a30 <abort@plt>
   141fc:	bl	15110 <close_stdout@@Base+0x2248>
   14200:	andeq	r9, r1, r4, ror r1
   14204:	andeq	r9, r1, r4, lsr #2
   14208:	andeq	r9, r1, r0, ror #1
   1420c:	ldrdeq	r9, [r1], -ip
   14210:	push	{r4, r5, r6, lr}
   14214:	mov	r5, r0
   14218:	bl	118e0 <__errno_location@plt>
   1421c:	cmp	r5, #0
   14220:	mov	r1, #48	; 0x30
   14224:	mov	r4, r0
   14228:	ldr	r0, [pc, #24]	; 14248 <close_stdout@@Base+0x1380>
   1422c:	ldr	r6, [r4]
   14230:	add	r0, pc, r0
   14234:	add	r0, r0, #256	; 0x100
   14238:	movne	r0, r5
   1423c:	bl	150d0 <close_stdout@@Base+0x2208>
   14240:	str	r6, [r4]
   14244:	pop	{r4, r5, r6, pc}
   14248:	andeq	r9, r1, r0
   1424c:	cmp	r0, #0
   14250:	beq	1425c <close_stdout@@Base+0x1394>
   14254:	ldr	r0, [r0]
   14258:	bx	lr
   1425c:	ldr	r0, [pc, #12]	; 14270 <close_stdout@@Base+0x13a8>
   14260:	add	r0, pc, r0
   14264:	add	r0, r0, #256	; 0x100
   14268:	ldr	r0, [r0]
   1426c:	bx	lr
   14270:	ldrdeq	r8, [r1], -r0
   14274:	cmp	r0, #0
   14278:	beq	14284 <close_stdout@@Base+0x13bc>
   1427c:	str	r1, [r0]
   14280:	bx	lr
   14284:	ldr	r0, [pc, #12]	; 14298 <close_stdout@@Base+0x13d0>
   14288:	add	r0, pc, r0
   1428c:	add	r0, r0, #256	; 0x100
   14290:	str	r1, [r0]
   14294:	bx	lr
   14298:	andeq	r8, r1, r8, lsr #31
   1429c:	cmp	r0, #0
   142a0:	movne	r3, r0
   142a4:	beq	142d4 <close_stdout@@Base+0x140c>
   142a8:	lsr	ip, r1, #5
   142ac:	and	r1, r1, #31
   142b0:	add	r3, r3, ip, lsl #2
   142b4:	ldr	ip, [r3, #8]
   142b8:	lsr	r0, ip, r1
   142bc:	eor	r2, r0, r2
   142c0:	and	r0, r0, #1
   142c4:	and	r2, r2, #1
   142c8:	eor	ip, ip, r2, lsl r1
   142cc:	str	ip, [r3, #8]
   142d0:	bx	lr
   142d4:	ldr	r3, [pc, #8]	; 142e4 <close_stdout@@Base+0x141c>
   142d8:	add	r3, pc, r3
   142dc:	add	r3, r3, #256	; 0x100
   142e0:	b	142a8 <close_stdout@@Base+0x13e0>
   142e4:	andeq	r8, r1, r8, asr pc
   142e8:	subs	r3, r0, #0
   142ec:	beq	142fc <close_stdout@@Base+0x1434>
   142f0:	ldr	r0, [r3, #4]
   142f4:	str	r1, [r3, #4]
   142f8:	bx	lr
   142fc:	ldr	r3, [pc, #8]	; 1430c <close_stdout@@Base+0x1444>
   14300:	add	r3, pc, r3
   14304:	add	r3, r3, #256	; 0x100
   14308:	b	142f0 <close_stdout@@Base+0x1428>
   1430c:	andeq	r8, r1, r0, lsr pc
   14310:	cmp	r0, #0
   14314:	push	{r3, lr}
   14318:	beq	1433c <close_stdout@@Base+0x1474>
   1431c:	cmp	r2, #0
   14320:	cmpne	r1, #0
   14324:	mov	r3, #8
   14328:	strne	r1, [r0, #40]	; 0x28
   1432c:	str	r3, [r0]
   14330:	strne	r2, [r0, #44]	; 0x2c
   14334:	popne	{r3, pc}
   14338:	bl	11a30 <abort@plt>
   1433c:	ldr	r0, [pc, #8]	; 1434c <close_stdout@@Base+0x1484>
   14340:	add	r0, pc, r0
   14344:	add	r0, r0, #256	; 0x100
   14348:	b	1431c <close_stdout@@Base+0x1454>
   1434c:	strdeq	r8, [r1], -r0
   14350:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14354:	sub	sp, sp, #24
   14358:	mov	r7, r0
   1435c:	mov	sl, r1
   14360:	ldr	r4, [sp, #56]	; 0x38
   14364:	mov	r9, r2
   14368:	mov	r8, r3
   1436c:	cmp	r4, #0
   14370:	beq	143c4 <close_stdout@@Base+0x14fc>
   14374:	bl	118e0 <__errno_location@plt>
   14378:	ldr	r3, [r4]
   1437c:	add	lr, r4, #8
   14380:	mov	r1, sl
   14384:	mov	r2, r9
   14388:	ldr	r6, [r0]
   1438c:	mov	r5, r0
   14390:	str	r3, [sp]
   14394:	mov	r0, r7
   14398:	ldr	ip, [r4, #4]
   1439c:	mov	r3, r8
   143a0:	stmib	sp, {ip, lr}
   143a4:	ldr	ip, [r4, #40]	; 0x28
   143a8:	str	ip, [sp, #12]
   143ac:	ldr	ip, [r4, #44]	; 0x2c
   143b0:	str	ip, [sp, #16]
   143b4:	bl	13318 <close_stdout@@Base+0x450>
   143b8:	str	r6, [r5]
   143bc:	add	sp, sp, #24
   143c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143c4:	ldr	r4, [pc, #8]	; 143d4 <close_stdout@@Base+0x150c>
   143c8:	add	r4, pc, r4
   143cc:	add	r4, r4, #256	; 0x100
   143d0:	b	14374 <close_stdout@@Base+0x14ac>
   143d4:	andeq	r8, r1, r8, ror #28
   143d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143dc:	subs	r4, r3, #0
   143e0:	sub	sp, sp, #36	; 0x24
   143e4:	mov	r7, r0
   143e8:	mov	r6, r1
   143ec:	mov	r5, r2
   143f0:	beq	144ac <close_stdout@@Base+0x15e4>
   143f4:	bl	118e0 <__errno_location@plt>
   143f8:	ldr	r3, [r4]
   143fc:	ldr	sl, [r4, #4]
   14400:	add	r9, r4, #8
   14404:	mov	r8, r0
   14408:	mov	r0, #0
   1440c:	ldr	r2, [r8]
   14410:	cmp	r5, r0
   14414:	orreq	sl, sl, #1
   14418:	str	r9, [sp, #8]
   1441c:	mov	r1, r0
   14420:	stm	sp, {r3, sl}
   14424:	mov	r3, r6
   14428:	ldr	ip, [r4, #40]	; 0x28
   1442c:	str	r2, [sp, #28]
   14430:	mov	r2, r7
   14434:	str	ip, [sp, #12]
   14438:	ldr	ip, [r4, #44]	; 0x2c
   1443c:	str	ip, [sp, #16]
   14440:	bl	13318 <close_stdout@@Base+0x450>
   14444:	add	r1, r0, #1
   14448:	mov	fp, r0
   1444c:	str	r1, [sp, #24]
   14450:	mov	r0, r1
   14454:	bl	14efc <close_stdout@@Base+0x2034>
   14458:	ldr	lr, [r4]
   1445c:	str	sl, [sp, #4]
   14460:	mov	r3, r6
   14464:	str	r9, [sp, #8]
   14468:	mov	r2, r7
   1446c:	str	lr, [sp]
   14470:	ldr	lr, [r4, #40]	; 0x28
   14474:	ldr	r1, [sp, #24]
   14478:	str	lr, [sp, #12]
   1447c:	ldr	lr, [r4, #44]	; 0x2c
   14480:	str	lr, [sp, #16]
   14484:	str	r0, [sp, #24]
   14488:	bl	13318 <close_stdout@@Base+0x450>
   1448c:	ldr	r3, [sp, #28]
   14490:	cmp	r5, #0
   14494:	str	r3, [r8]
   14498:	ldr	ip, [sp, #24]
   1449c:	strne	fp, [r5]
   144a0:	mov	r0, ip
   144a4:	add	sp, sp, #36	; 0x24
   144a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144ac:	ldr	r4, [pc, #8]	; 144bc <close_stdout@@Base+0x15f4>
   144b0:	add	r4, pc, r4
   144b4:	add	r4, r4, #256	; 0x100
   144b8:	b	143f4 <close_stdout@@Base+0x152c>
   144bc:	andeq	r8, r1, r0, lsl #27
   144c0:	mov	r3, r2
   144c4:	mov	r2, #0
   144c8:	b	143d8 <close_stdout@@Base+0x1510>
   144cc:	ldr	r2, [pc, #152]	; 1456c <close_stdout@@Base+0x16a4>
   144d0:	push	{r3, r4, r5, r6, r7, lr}
   144d4:	add	r2, pc, r2
   144d8:	ldr	r3, [pc, #144]	; 14570 <close_stdout@@Base+0x16a8>
   144dc:	ldr	r6, [r2]
   144e0:	add	r3, pc, r3
   144e4:	cmp	r6, #1
   144e8:	ldr	r7, [r3]
   144ec:	movhi	r4, #1
   144f0:	movhi	r5, r7
   144f4:	bls	14510 <close_stdout@@Base+0x1648>
   144f8:	ldr	r0, [r5, #12]
   144fc:	add	r4, r4, #1
   14500:	bl	116dc <free@plt>
   14504:	cmp	r4, r6
   14508:	add	r5, r5, #8
   1450c:	bne	144f8 <close_stdout@@Base+0x1630>
   14510:	ldr	r4, [pc, #92]	; 14574 <close_stdout@@Base+0x16ac>
   14514:	ldr	r0, [r7, #4]
   14518:	add	r4, pc, r4
   1451c:	cmp	r0, r4
   14520:	beq	14538 <close_stdout@@Base+0x1670>
   14524:	bl	116dc <free@plt>
   14528:	ldr	r3, [pc, #72]	; 14578 <close_stdout@@Base+0x16b0>
   1452c:	mov	r2, #256	; 0x100
   14530:	add	r3, pc, r3
   14534:	stmib	r3, {r2, r4}
   14538:	ldr	r4, [pc, #60]	; 1457c <close_stdout@@Base+0x16b4>
   1453c:	add	r4, pc, r4
   14540:	add	r5, r4, #4
   14544:	cmp	r7, r5
   14548:	beq	14558 <close_stdout@@Base+0x1690>
   1454c:	mov	r0, r7
   14550:	bl	116dc <free@plt>
   14554:	str	r5, [r4]
   14558:	ldr	r3, [pc, #32]	; 14580 <close_stdout@@Base+0x16b8>
   1455c:	mov	r2, #1
   14560:	add	r3, pc, r3
   14564:	str	r2, [r3]
   14568:	pop	{r3, r4, r5, r6, r7, pc}
   1456c:	ldrdeq	r8, [r1], -r0
   14570:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   14574:	andeq	r8, r1, r8, lsl sp
   14578:	andeq	r8, r1, r8, lsr #25
   1457c:	muleq	r1, ip, ip
   14580:	andeq	r8, r1, r4, asr #24
   14584:	ldr	r3, [pc, #12]	; 14598 <close_stdout@@Base+0x16d0>
   14588:	mvn	r2, #0
   1458c:	add	r3, pc, r3
   14590:	add	r3, r3, #256	; 0x100
   14594:	b	14040 <close_stdout@@Base+0x1178>
   14598:	andeq	r8, r1, r4, lsr #25
   1459c:	ldr	r3, [pc, #8]	; 145ac <close_stdout@@Base+0x16e4>
   145a0:	add	r3, pc, r3
   145a4:	add	r3, r3, #256	; 0x100
   145a8:	b	14040 <close_stdout@@Base+0x1178>
   145ac:	muleq	r1, r0, ip
   145b0:	mov	r1, r0
   145b4:	mov	r0, #0
   145b8:	b	14584 <close_stdout@@Base+0x16bc>
   145bc:	mov	r2, r1
   145c0:	mov	r1, r0
   145c4:	mov	r0, #0
   145c8:	b	1459c <close_stdout@@Base+0x16d4>
   145cc:	ldr	r3, [pc, #92]	; 14630 <close_stdout@@Base+0x1768>
   145d0:	ldr	ip, [pc, #92]	; 14634 <close_stdout@@Base+0x176c>
   145d4:	add	r3, pc, r3
   145d8:	push	{r4, r5, r6, r7, lr}
   145dc:	sub	sp, sp, #60	; 0x3c
   145e0:	ldr	r4, [r3, ip]
   145e4:	add	r5, sp, #4
   145e8:	mov	r7, r2
   145ec:	mov	r6, r0
   145f0:	mov	r0, r5
   145f4:	ldr	r3, [r4]
   145f8:	str	r3, [sp, #52]	; 0x34
   145fc:	bl	13160 <close_stdout@@Base+0x298>
   14600:	mov	r3, r5
   14604:	mvn	r2, #0
   14608:	mov	r0, r6
   1460c:	mov	r1, r7
   14610:	bl	14040 <close_stdout@@Base+0x1178>
   14614:	ldr	r2, [sp, #52]	; 0x34
   14618:	ldr	r3, [r4]
   1461c:	cmp	r2, r3
   14620:	bne	1462c <close_stdout@@Base+0x1764>
   14624:	add	sp, sp, #60	; 0x3c
   14628:	pop	{r4, r5, r6, r7, pc}
   1462c:	bl	1173c <__stack_chk_fail@plt>
   14630:	andeq	r8, r1, r4, lsr #20
   14634:	andeq	r0, r0, r8, ror #2
   14638:	ldr	ip, [pc, #96]	; 146a0 <close_stdout@@Base+0x17d8>
   1463c:	push	{r4, r5, r6, r7, r8, lr}
   14640:	add	ip, pc, ip
   14644:	ldr	lr, [pc, #88]	; 146a4 <close_stdout@@Base+0x17dc>
   14648:	sub	sp, sp, #56	; 0x38
   1464c:	mov	r8, r3
   14650:	add	r5, sp, #4
   14654:	mov	r7, r2
   14658:	mov	r6, r0
   1465c:	ldr	r4, [ip, lr]
   14660:	mov	r0, r5
   14664:	ldr	r3, [r4]
   14668:	str	r3, [sp, #52]	; 0x34
   1466c:	bl	13160 <close_stdout@@Base+0x298>
   14670:	mov	r2, r8
   14674:	mov	r3, r5
   14678:	mov	r0, r6
   1467c:	mov	r1, r7
   14680:	bl	14040 <close_stdout@@Base+0x1178>
   14684:	ldr	r2, [sp, #52]	; 0x34
   14688:	ldr	r3, [r4]
   1468c:	cmp	r2, r3
   14690:	bne	1469c <close_stdout@@Base+0x17d4>
   14694:	add	sp, sp, #56	; 0x38
   14698:	pop	{r4, r5, r6, r7, r8, pc}
   1469c:	bl	1173c <__stack_chk_fail@plt>
   146a0:			; <UNDEFINED> instruction: 0x000189b8
   146a4:	andeq	r0, r0, r8, ror #2
   146a8:	mov	r2, r1
   146ac:	mov	r1, r0
   146b0:	mov	r0, #0
   146b4:	b	145cc <close_stdout@@Base+0x1704>
   146b8:	mov	ip, r1
   146bc:	mov	r3, r2
   146c0:	mov	r1, r0
   146c4:	mov	r2, ip
   146c8:	mov	r0, #0
   146cc:	b	14638 <close_stdout@@Base+0x1770>
   146d0:	push	{r4, r5, r6, r7, r8, lr}
   146d4:	mov	r5, r2
   146d8:	ldr	lr, [pc, #136]	; 14768 <close_stdout@@Base+0x18a0>
   146dc:	mov	r7, r0
   146e0:	mov	r6, r1
   146e4:	ldr	r4, [pc, #128]	; 1476c <close_stdout@@Base+0x18a4>
   146e8:	add	lr, pc, lr
   146ec:	sub	sp, sp, #56	; 0x38
   146f0:	add	lr, lr, #256	; 0x100
   146f4:	ldr	r8, [pc, #116]	; 14770 <close_stdout@@Base+0x18a8>
   146f8:	add	r4, pc, r4
   146fc:	add	ip, sp, #4
   14700:	ldm	lr!, {r0, r1, r2, r3}
   14704:	ldr	r4, [r4, r8]
   14708:	stmia	ip!, {r0, r1, r2, r3}
   1470c:	ldm	lr!, {r0, r1, r2, r3}
   14710:	ldr	r8, [r4]
   14714:	stmia	ip!, {r0, r1, r2, r3}
   14718:	ldm	lr, {r0, r1, r2, r3}
   1471c:	str	r8, [sp, #52]	; 0x34
   14720:	stm	ip, {r0, r1, r2, r3}
   14724:	mov	r1, r5
   14728:	add	r5, sp, #4
   1472c:	mov	r2, #1
   14730:	mov	r0, r5
   14734:	bl	1429c <close_stdout@@Base+0x13d4>
   14738:	mov	r2, r6
   1473c:	mov	r3, r5
   14740:	mov	r1, r7
   14744:	mov	r0, #0
   14748:	bl	14040 <close_stdout@@Base+0x1178>
   1474c:	ldr	r2, [sp, #52]	; 0x34
   14750:	ldr	r3, [r4]
   14754:	cmp	r2, r3
   14758:	bne	14764 <close_stdout@@Base+0x189c>
   1475c:	add	sp, sp, #56	; 0x38
   14760:	pop	{r4, r5, r6, r7, r8, pc}
   14764:	bl	1173c <__stack_chk_fail@plt>
   14768:	andeq	r8, r1, r8, asr #22
   1476c:	andeq	r8, r1, r0, lsl #18
   14770:	andeq	r0, r0, r8, ror #2
   14774:	mov	r2, r1
   14778:	mvn	r1, #0
   1477c:	b	146d0 <close_stdout@@Base+0x1808>
   14780:	mov	r1, #58	; 0x3a
   14784:	b	14774 <close_stdout@@Base+0x18ac>
   14788:	mov	r2, #58	; 0x3a
   1478c:	b	146d0 <close_stdout@@Base+0x1808>
   14790:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14794:	mov	r5, r2
   14798:	ldr	lr, [pc, #144]	; 14830 <close_stdout@@Base+0x1968>
   1479c:	mov	r8, r0
   147a0:	mov	r9, r1
   147a4:	mov	r7, r3
   147a8:	add	lr, pc, lr
   147ac:	ldr	r4, [pc, #128]	; 14834 <close_stdout@@Base+0x196c>
   147b0:	add	lr, lr, #256	; 0x100
   147b4:	sub	sp, sp, #56	; 0x38
   147b8:	ldr	sl, [pc, #120]	; 14838 <close_stdout@@Base+0x1970>
   147bc:	add	r4, pc, r4
   147c0:	ldm	lr!, {r0, r1, r2, r3}
   147c4:	add	ip, sp, #4
   147c8:	ldr	r4, [r4, sl]
   147cc:	ldr	r6, [sp, #88]	; 0x58
   147d0:	stmia	ip!, {r0, r1, r2, r3}
   147d4:	ldm	lr!, {r0, r1, r2, r3}
   147d8:	ldr	sl, [r4]
   147dc:	stmia	ip!, {r0, r1, r2, r3}
   147e0:	ldm	lr, {r0, r1, r2, r3}
   147e4:	str	sl, [sp, #52]	; 0x34
   147e8:	stm	ip, {r0, r1, r2, r3}
   147ec:	mov	r2, r5
   147f0:	add	r5, sp, #4
   147f4:	mov	r1, r9
   147f8:	mov	r0, r5
   147fc:	bl	14310 <close_stdout@@Base+0x1448>
   14800:	mov	r2, r6
   14804:	mov	r3, r5
   14808:	mov	r0, r8
   1480c:	mov	r1, r7
   14810:	bl	14040 <close_stdout@@Base+0x1178>
   14814:	ldr	r2, [sp, #52]	; 0x34
   14818:	ldr	r3, [r4]
   1481c:	cmp	r2, r3
   14820:	bne	1482c <close_stdout@@Base+0x1964>
   14824:	add	sp, sp, #56	; 0x38
   14828:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1482c:	bl	1173c <__stack_chk_fail@plt>
   14830:	andeq	r8, r1, r8, lsl #21
   14834:	andeq	r8, r1, ip, lsr r8
   14838:	andeq	r0, r0, r8, ror #2
   1483c:	push	{lr}		; (str lr, [sp, #-4]!)
   14840:	sub	sp, sp, #12
   14844:	mvn	ip, #0
   14848:	str	ip, [sp]
   1484c:	bl	14790 <close_stdout@@Base+0x18c8>
   14850:	add	sp, sp, #12
   14854:	pop	{pc}		; (ldr pc, [sp], #4)
   14858:	mov	ip, r1
   1485c:	mov	r3, r2
   14860:	mov	r1, r0
   14864:	mov	r2, ip
   14868:	mov	r0, #0
   1486c:	b	1483c <close_stdout@@Base+0x1974>
   14870:	push	{lr}		; (str lr, [sp, #-4]!)
   14874:	sub	sp, sp, #12
   14878:	mov	lr, r1
   1487c:	mov	ip, r2
   14880:	mov	r1, r0
   14884:	str	r3, [sp]
   14888:	mov	r2, lr
   1488c:	mov	r3, ip
   14890:	mov	r0, #0
   14894:	bl	14790 <close_stdout@@Base+0x18c8>
   14898:	add	sp, sp, #12
   1489c:	pop	{pc}		; (ldr pc, [sp], #4)
   148a0:	ldr	r3, [pc, #12]	; 148b4 <close_stdout@@Base+0x19ec>
   148a4:	ldr	ip, [pc, #12]	; 148b8 <close_stdout@@Base+0x19f0>
   148a8:	add	r3, pc, r3
   148ac:	ldr	r3, [r3, ip]
   148b0:	b	14040 <close_stdout@@Base+0x1178>
   148b4:	andeq	r8, r1, r0, asr r7
   148b8:	andeq	r0, r0, r0, ror #2
   148bc:	mov	r2, r1
   148c0:	mov	r1, r0
   148c4:	mov	r0, #0
   148c8:	b	148a0 <close_stdout@@Base+0x19d8>
   148cc:	mvn	r2, #0
   148d0:	b	148a0 <close_stdout@@Base+0x19d8>
   148d4:	mov	r1, r0
   148d8:	mov	r0, #0
   148dc:	b	148cc <close_stdout@@Base+0x1a04>
   148e0:	ldr	r3, [pc, #104]	; 14950 <close_stdout@@Base+0x1a88>
   148e4:	ldr	ip, [pc, #104]	; 14954 <close_stdout@@Base+0x1a8c>
   148e8:	add	r3, pc, r3
   148ec:	ldr	r1, [pc, #100]	; 14958 <close_stdout@@Base+0x1a90>
   148f0:	push	{r4, r5, r6, r7, lr}
   148f4:	sub	sp, sp, #116	; 0x74
   148f8:	ldr	r7, [r3, ip]
   148fc:	mov	r6, r0
   14900:	mov	r2, sp
   14904:	mov	r0, #3
   14908:	add	r1, pc, r1
   1490c:	ldr	r3, [r7]
   14910:	str	r3, [sp, #108]	; 0x6c
   14914:	bl	11a48 <__lxstat64@plt>
   14918:	cmp	r0, #0
   1491c:	ldrdeq	r2, [sp]
   14920:	moveq	r0, r6
   14924:	ldrdeq	r4, [sp, #96]	; 0x60
   14928:	movne	r0, #0
   1492c:	strdeq	r2, [r6, #8]
   14930:	strdeq	r4, [r6]
   14934:	ldr	r2, [sp, #108]	; 0x6c
   14938:	ldr	r3, [r7]
   1493c:	cmp	r2, r3
   14940:	bne	1494c <close_stdout@@Base+0x1a84>
   14944:	add	sp, sp, #116	; 0x74
   14948:	pop	{r4, r5, r6, r7, pc}
   1494c:	bl	1173c <__stack_chk_fail@plt>
   14950:	andeq	r8, r1, r0, lsl r7
   14954:	andeq	r0, r0, r8, ror #2
   14958:	muleq	r0, r4, fp
   1495c:	push	{r4, r5, r6, r7, lr}
   14960:	cmp	r1, #0
   14964:	sub	sp, sp, #36	; 0x24
   14968:	ldr	r7, [pc, #896]	; 14cf0 <close_stdout@@Base+0x1e28>
   1496c:	mov	ip, r3
   14970:	mov	r5, r0
   14974:	add	r7, pc, r7
   14978:	ldr	r4, [sp, #56]	; 0x38
   1497c:	ldr	r6, [sp, #60]	; 0x3c
   14980:	beq	14cc4 <close_stdout@@Base+0x1dfc>
   14984:	str	r2, [sp]
   14988:	mov	r3, r1
   1498c:	ldr	r2, [pc, #864]	; 14cf4 <close_stdout@@Base+0x1e2c>
   14990:	mov	r1, #1
   14994:	str	ip, [sp, #4]
   14998:	add	r2, pc, r2
   1499c:	bl	11934 <__fprintf_chk@plt>
   149a0:	ldr	r1, [pc, #848]	; 14cf8 <close_stdout@@Base+0x1e30>
   149a4:	mov	r2, #5
   149a8:	mov	r0, #0
   149ac:	add	r1, pc, r1
   149b0:	bl	11730 <dcgettext@plt>
   149b4:	ldr	r2, [pc, #832]	; 14cfc <close_stdout@@Base+0x1e34>
   149b8:	movw	ip, #2013	; 0x7dd
   149bc:	mov	r1, #1
   149c0:	ldr	r2, [r7, r2]
   149c4:	str	ip, [sp]
   149c8:	mov	r3, r0
   149cc:	mov	r0, r5
   149d0:	bl	11934 <__fprintf_chk@plt>
   149d4:	ldr	r1, [pc, #804]	; 14d00 <close_stdout@@Base+0x1e38>
   149d8:	mov	r0, #0
   149dc:	mov	r2, #5
   149e0:	add	r1, pc, r1
   149e4:	bl	11730 <dcgettext@plt>
   149e8:	mov	r1, r5
   149ec:	bl	11694 <fputs_unlocked@plt>
   149f0:	cmp	r6, #9
   149f4:	addls	pc, pc, r6, lsl #2
   149f8:	b	14ce0 <close_stdout@@Base+0x1e18>
   149fc:	b	14a90 <close_stdout@@Base+0x1bc8>
   14a00:	b	14a94 <close_stdout@@Base+0x1bcc>
   14a04:	b	14ac4 <close_stdout@@Base+0x1bfc>
   14a08:	b	14af8 <close_stdout@@Base+0x1c30>
   14a0c:	b	14b34 <close_stdout@@Base+0x1c6c>
   14a10:	b	14b74 <close_stdout@@Base+0x1cac>
   14a14:	b	14bbc <close_stdout@@Base+0x1cf4>
   14a18:	b	14c0c <close_stdout@@Base+0x1d44>
   14a1c:	b	14c64 <close_stdout@@Base+0x1d9c>
   14a20:	b	14a24 <close_stdout@@Base+0x1b5c>
   14a24:	ldr	r1, [pc, #728]	; 14d04 <close_stdout@@Base+0x1e3c>
   14a28:	mov	r0, #0
   14a2c:	add	r1, pc, r1
   14a30:	mov	r2, #5
   14a34:	bl	11730 <dcgettext@plt>
   14a38:	ldm	r4, {r3, ip}
   14a3c:	mov	r1, #1
   14a40:	str	ip, [sp]
   14a44:	ldr	ip, [r4, #8]
   14a48:	str	ip, [sp, #4]
   14a4c:	ldr	ip, [r4, #12]
   14a50:	str	ip, [sp, #8]
   14a54:	ldr	ip, [r4, #16]
   14a58:	str	ip, [sp, #12]
   14a5c:	ldr	ip, [r4, #20]
   14a60:	str	ip, [sp, #16]
   14a64:	ldr	ip, [r4, #24]
   14a68:	str	ip, [sp, #20]
   14a6c:	ldr	ip, [r4, #28]
   14a70:	str	ip, [sp, #24]
   14a74:	ldr	ip, [r4, #32]
   14a78:	str	ip, [sp, #28]
   14a7c:	mov	r2, r0
   14a80:	mov	r0, r5
   14a84:	bl	11934 <__fprintf_chk@plt>
   14a88:	add	sp, sp, #36	; 0x24
   14a8c:	pop	{r4, r5, r6, r7, pc}
   14a90:	bl	11a30 <abort@plt>
   14a94:	ldr	r1, [pc, #620]	; 14d08 <close_stdout@@Base+0x1e40>
   14a98:	mov	r2, #5
   14a9c:	mov	r0, #0
   14aa0:	add	r1, pc, r1
   14aa4:	bl	11730 <dcgettext@plt>
   14aa8:	ldr	r3, [r4]
   14aac:	mov	r1, #1
   14ab0:	mov	r2, r0
   14ab4:	mov	r0, r5
   14ab8:	add	sp, sp, #36	; 0x24
   14abc:	pop	{r4, r5, r6, r7, lr}
   14ac0:	b	11934 <__fprintf_chk@plt>
   14ac4:	ldr	r1, [pc, #576]	; 14d0c <close_stdout@@Base+0x1e44>
   14ac8:	mov	r2, #5
   14acc:	mov	r0, #0
   14ad0:	add	r1, pc, r1
   14ad4:	bl	11730 <dcgettext@plt>
   14ad8:	ldm	r4, {r3, ip}
   14adc:	mov	r1, #1
   14ae0:	str	ip, [sp, #56]	; 0x38
   14ae4:	mov	r2, r0
   14ae8:	mov	r0, r5
   14aec:	add	sp, sp, #36	; 0x24
   14af0:	pop	{r4, r5, r6, r7, lr}
   14af4:	b	11934 <__fprintf_chk@plt>
   14af8:	ldr	r1, [pc, #528]	; 14d10 <close_stdout@@Base+0x1e48>
   14afc:	mov	r2, #5
   14b00:	mov	r0, #0
   14b04:	add	r1, pc, r1
   14b08:	bl	11730 <dcgettext@plt>
   14b0c:	ldm	r4, {r3, ip}
   14b10:	mov	r1, #1
   14b14:	str	ip, [sp, #56]	; 0x38
   14b18:	ldr	ip, [r4, #8]
   14b1c:	str	ip, [sp, #60]	; 0x3c
   14b20:	mov	r2, r0
   14b24:	mov	r0, r5
   14b28:	add	sp, sp, #36	; 0x24
   14b2c:	pop	{r4, r5, r6, r7, lr}
   14b30:	b	11934 <__fprintf_chk@plt>
   14b34:	ldr	r1, [pc, #472]	; 14d14 <close_stdout@@Base+0x1e4c>
   14b38:	mov	r2, #5
   14b3c:	mov	r0, #0
   14b40:	add	r1, pc, r1
   14b44:	bl	11730 <dcgettext@plt>
   14b48:	ldm	r4, {r3, ip}
   14b4c:	mov	r1, #1
   14b50:	str	ip, [sp]
   14b54:	ldr	ip, [r4, #8]
   14b58:	str	ip, [sp, #4]
   14b5c:	ldr	ip, [r4, #12]
   14b60:	str	ip, [sp, #8]
   14b64:	mov	r2, r0
   14b68:	mov	r0, r5
   14b6c:	bl	11934 <__fprintf_chk@plt>
   14b70:	b	14a88 <close_stdout@@Base+0x1bc0>
   14b74:	ldr	r1, [pc, #412]	; 14d18 <close_stdout@@Base+0x1e50>
   14b78:	mov	r2, #5
   14b7c:	mov	r0, #0
   14b80:	add	r1, pc, r1
   14b84:	bl	11730 <dcgettext@plt>
   14b88:	ldm	r4, {r3, ip}
   14b8c:	mov	r1, #1
   14b90:	str	ip, [sp]
   14b94:	ldr	ip, [r4, #8]
   14b98:	str	ip, [sp, #4]
   14b9c:	ldr	ip, [r4, #12]
   14ba0:	str	ip, [sp, #8]
   14ba4:	ldr	ip, [r4, #16]
   14ba8:	str	ip, [sp, #12]
   14bac:	mov	r2, r0
   14bb0:	mov	r0, r5
   14bb4:	bl	11934 <__fprintf_chk@plt>
   14bb8:	b	14a88 <close_stdout@@Base+0x1bc0>
   14bbc:	ldr	r1, [pc, #344]	; 14d1c <close_stdout@@Base+0x1e54>
   14bc0:	mov	r2, #5
   14bc4:	mov	r0, #0
   14bc8:	add	r1, pc, r1
   14bcc:	bl	11730 <dcgettext@plt>
   14bd0:	ldm	r4, {r3, ip}
   14bd4:	mov	r1, #1
   14bd8:	str	ip, [sp]
   14bdc:	ldr	ip, [r4, #8]
   14be0:	str	ip, [sp, #4]
   14be4:	ldr	ip, [r4, #12]
   14be8:	str	ip, [sp, #8]
   14bec:	ldr	ip, [r4, #16]
   14bf0:	str	ip, [sp, #12]
   14bf4:	ldr	ip, [r4, #20]
   14bf8:	str	ip, [sp, #16]
   14bfc:	mov	r2, r0
   14c00:	mov	r0, r5
   14c04:	bl	11934 <__fprintf_chk@plt>
   14c08:	b	14a88 <close_stdout@@Base+0x1bc0>
   14c0c:	ldr	r1, [pc, #268]	; 14d20 <close_stdout@@Base+0x1e58>
   14c10:	mov	r2, #5
   14c14:	mov	r0, #0
   14c18:	add	r1, pc, r1
   14c1c:	bl	11730 <dcgettext@plt>
   14c20:	ldm	r4, {r3, ip}
   14c24:	mov	r1, #1
   14c28:	str	ip, [sp]
   14c2c:	ldr	ip, [r4, #8]
   14c30:	str	ip, [sp, #4]
   14c34:	ldr	ip, [r4, #12]
   14c38:	str	ip, [sp, #8]
   14c3c:	ldr	ip, [r4, #16]
   14c40:	str	ip, [sp, #12]
   14c44:	ldr	ip, [r4, #20]
   14c48:	str	ip, [sp, #16]
   14c4c:	ldr	ip, [r4, #24]
   14c50:	str	ip, [sp, #20]
   14c54:	mov	r2, r0
   14c58:	mov	r0, r5
   14c5c:	bl	11934 <__fprintf_chk@plt>
   14c60:	b	14a88 <close_stdout@@Base+0x1bc0>
   14c64:	ldr	r1, [pc, #184]	; 14d24 <close_stdout@@Base+0x1e5c>
   14c68:	mov	r2, #5
   14c6c:	mov	r0, #0
   14c70:	add	r1, pc, r1
   14c74:	bl	11730 <dcgettext@plt>
   14c78:	ldm	r4, {r3, ip}
   14c7c:	mov	r1, #1
   14c80:	str	ip, [sp]
   14c84:	ldr	ip, [r4, #8]
   14c88:	str	ip, [sp, #4]
   14c8c:	ldr	ip, [r4, #12]
   14c90:	str	ip, [sp, #8]
   14c94:	ldr	ip, [r4, #16]
   14c98:	str	ip, [sp, #12]
   14c9c:	ldr	ip, [r4, #20]
   14ca0:	str	ip, [sp, #16]
   14ca4:	ldr	ip, [r4, #24]
   14ca8:	str	ip, [sp, #20]
   14cac:	ldr	ip, [r4, #28]
   14cb0:	str	ip, [sp, #24]
   14cb4:	mov	r2, r0
   14cb8:	mov	r0, r5
   14cbc:	bl	11934 <__fprintf_chk@plt>
   14cc0:	b	14a88 <close_stdout@@Base+0x1bc0>
   14cc4:	str	r3, [sp]
   14cc8:	mov	r3, r2
   14ccc:	ldr	r2, [pc, #84]	; 14d28 <close_stdout@@Base+0x1e60>
   14cd0:	mov	r1, #1
   14cd4:	add	r2, pc, r2
   14cd8:	bl	11934 <__fprintf_chk@plt>
   14cdc:	b	149a0 <close_stdout@@Base+0x1ad8>
   14ce0:	ldr	r1, [pc, #68]	; 14d2c <close_stdout@@Base+0x1e64>
   14ce4:	mov	r0, #0
   14ce8:	add	r1, pc, r1
   14cec:	b	14a30 <close_stdout@@Base+0x1b68>
   14cf0:	andeq	r8, r1, r4, lsl #13
   14cf4:	andeq	r6, r0, r0, lsl #30
   14cf8:	andeq	r6, r0, r0, lsl #30
   14cfc:	muleq	r0, r4, r1
   14d00:	ldrdeq	r6, [r0], -r0
   14d04:	andeq	r7, r0, ip, asr r0
   14d08:	ldrdeq	r6, [r0], -ip
   14d0c:			; <UNDEFINED> instruction: 0x00006ebc
   14d10:	andeq	r6, r0, r0, lsr #29
   14d14:	andeq	r6, r0, r0, lsl #29
   14d18:	andeq	r6, r0, r0, ror #28
   14d1c:	andeq	r6, r0, ip, lsr lr
   14d20:	andeq	r6, r0, r4, lsl lr
   14d24:	andeq	r6, r0, r8, ror #27
   14d28:	ldrdeq	r6, [r0], -r0
   14d2c:	ldrdeq	r6, [r0], -r4
   14d30:	push	{r4, r5, lr}
   14d34:	sub	sp, sp, #12
   14d38:	ldr	r5, [sp, #24]
   14d3c:	ldr	ip, [r5]
   14d40:	cmp	ip, #0
   14d44:	beq	14d60 <close_stdout@@Base+0x1e98>
   14d48:	mov	lr, r5
   14d4c:	mov	ip, #0
   14d50:	ldr	r4, [lr, #4]!
   14d54:	add	ip, ip, #1
   14d58:	cmp	r4, #0
   14d5c:	bne	14d50 <close_stdout@@Base+0x1e88>
   14d60:	stm	sp, {r5, ip}
   14d64:	bl	1495c <close_stdout@@Base+0x1a94>
   14d68:	add	sp, sp, #12
   14d6c:	pop	{r4, r5, pc}
   14d70:	push	{r4, r5, r6, r7, lr}
   14d74:	sub	sp, sp, #60	; 0x3c
   14d78:	ldr	r4, [pc, #100]	; 14de4 <close_stdout@@Base+0x1f1c>
   14d7c:	mov	ip, #0
   14d80:	ldr	r5, [pc, #96]	; 14de8 <close_stdout@@Base+0x1f20>
   14d84:	mov	lr, ip
   14d88:	add	r4, pc, r4
   14d8c:	ldr	r6, [sp, #80]	; 0x50
   14d90:	ldr	r7, [r4, r5]
   14d94:	add	r5, sp, #12
   14d98:	ldr	r4, [r7]
   14d9c:	str	r4, [sp, #52]	; 0x34
   14da0:	ldr	r4, [r6, ip]
   14da4:	cmp	r4, #0
   14da8:	str	r4, [r5, ip]
   14dac:	beq	14dc0 <close_stdout@@Base+0x1ef8>
   14db0:	add	lr, lr, #1
   14db4:	add	ip, ip, #4
   14db8:	cmp	lr, #10
   14dbc:	bne	14da0 <close_stdout@@Base+0x1ed8>
   14dc0:	stm	sp, {r5, lr}
   14dc4:	bl	1495c <close_stdout@@Base+0x1a94>
   14dc8:	ldr	r2, [sp, #52]	; 0x34
   14dcc:	ldr	r3, [r7]
   14dd0:	cmp	r2, r3
   14dd4:	bne	14de0 <close_stdout@@Base+0x1f18>
   14dd8:	add	sp, sp, #60	; 0x3c
   14ddc:	pop	{r4, r5, r6, r7, pc}
   14de0:	bl	1173c <__stack_chk_fail@plt>
   14de4:	andeq	r8, r1, r0, ror r2
   14de8:	andeq	r0, r0, r8, ror #2
   14dec:	push	{r3}		; (str r3, [sp, #-4]!)
   14df0:	push	{r4, lr}
   14df4:	sub	sp, sp, #20
   14df8:	ldr	lr, [pc, #72]	; 14e48 <close_stdout@@Base+0x1f80>
   14dfc:	add	ip, sp, #32
   14e00:	ldr	r4, [pc, #68]	; 14e4c <close_stdout@@Base+0x1f84>
   14e04:	add	lr, pc, lr
   14e08:	ldr	r3, [sp, #28]
   14e0c:	ldr	r4, [lr, r4]
   14e10:	str	ip, [sp]
   14e14:	str	ip, [sp, #8]
   14e18:	ldr	ip, [r4]
   14e1c:	str	ip, [sp, #12]
   14e20:	bl	14d70 <close_stdout@@Base+0x1ea8>
   14e24:	ldr	r2, [sp, #12]
   14e28:	ldr	r3, [r4]
   14e2c:	cmp	r2, r3
   14e30:	bne	14e44 <close_stdout@@Base+0x1f7c>
   14e34:	add	sp, sp, #20
   14e38:	pop	{r4, lr}
   14e3c:	add	sp, sp, #4
   14e40:	bx	lr
   14e44:	bl	1173c <__stack_chk_fail@plt>
   14e48:	strdeq	r8, [r1], -r4
   14e4c:	andeq	r0, r0, r8, ror #2
   14e50:	ldr	r1, [pc, #132]	; 14edc <close_stdout@@Base+0x2014>
   14e54:	mov	r2, #5
   14e58:	push	{r4, lr}
   14e5c:	add	r1, pc, r1
   14e60:	mov	r0, #0
   14e64:	ldr	r4, [pc, #116]	; 14ee0 <close_stdout@@Base+0x2018>
   14e68:	bl	11730 <dcgettext@plt>
   14e6c:	ldr	r2, [pc, #112]	; 14ee4 <close_stdout@@Base+0x201c>
   14e70:	add	r4, pc, r4
   14e74:	add	r2, pc, r2
   14e78:	mov	r1, r0
   14e7c:	mov	r0, #1
   14e80:	bl	1191c <__printf_chk@plt>
   14e84:	ldr	r1, [pc, #92]	; 14ee8 <close_stdout@@Base+0x2020>
   14e88:	mov	r2, #5
   14e8c:	mov	r0, #0
   14e90:	add	r1, pc, r1
   14e94:	bl	11730 <dcgettext@plt>
   14e98:	ldr	r2, [pc, #76]	; 14eec <close_stdout@@Base+0x2024>
   14e9c:	ldr	r3, [pc, #76]	; 14ef0 <close_stdout@@Base+0x2028>
   14ea0:	add	r2, pc, r2
   14ea4:	add	r3, pc, r3
   14ea8:	mov	r1, r0
   14eac:	mov	r0, #1
   14eb0:	bl	1191c <__printf_chk@plt>
   14eb4:	ldr	r1, [pc, #56]	; 14ef4 <close_stdout@@Base+0x202c>
   14eb8:	mov	r0, #0
   14ebc:	mov	r2, #5
   14ec0:	add	r1, pc, r1
   14ec4:	bl	11730 <dcgettext@plt>
   14ec8:	ldr	r3, [pc, #40]	; 14ef8 <close_stdout@@Base+0x2030>
   14ecc:	ldr	r3, [r4, r3]
   14ed0:	pop	{r4, lr}
   14ed4:	ldr	r1, [r3]
   14ed8:	b	11694 <fputs_unlocked@plt>
   14edc:	muleq	r0, ip, ip
   14ee0:	andeq	r8, r1, r8, lsl #3
   14ee4:	muleq	r0, ip, ip
   14ee8:	muleq	r0, r8, ip
   14eec:	strdeq	r6, [r0], -r0
   14ef0:	strdeq	r6, [r0], -ip
   14ef4:	andeq	r6, r0, ip, ror ip
   14ef8:	andeq	r0, r0, r4, lsl #3
   14efc:	push	{r4, lr}
   14f00:	mov	r4, r0
   14f04:	bl	11820 <malloc@plt>
   14f08:	rsbs	r3, r0, #1
   14f0c:	movcc	r3, #0
   14f10:	cmp	r4, #0
   14f14:	moveq	r3, #0
   14f18:	cmp	r3, #0
   14f1c:	popeq	{r4, pc}
   14f20:	bl	15110 <close_stdout@@Base+0x2248>
   14f24:	push	{r3, r4, r5, lr}
   14f28:	mov	r4, r0
   14f2c:	mvn	r0, #0
   14f30:	mov	r5, r1
   14f34:	bl	19ee8 <fts_children@@Base+0x2c28>
   14f38:	cmp	r0, r4
   14f3c:	bcc	14f4c <close_stdout@@Base+0x2084>
   14f40:	mul	r0, r4, r5
   14f44:	pop	{r3, r4, r5, lr}
   14f48:	b	14efc <close_stdout@@Base+0x2034>
   14f4c:	bl	15110 <close_stdout@@Base+0x2248>
   14f50:	b	14efc <close_stdout@@Base+0x2034>
   14f54:	rsbs	r3, r1, #1
   14f58:	push	{r4, lr}
   14f5c:	movcc	r3, #0
   14f60:	cmp	r0, #0
   14f64:	mov	r4, r1
   14f68:	moveq	r3, #0
   14f6c:	cmp	r3, #0
   14f70:	bne	14f94 <close_stdout@@Base+0x20cc>
   14f74:	bl	11754 <realloc@plt>
   14f78:	rsbs	r3, r0, #1
   14f7c:	movcc	r3, #0
   14f80:	cmp	r4, #0
   14f84:	moveq	r3, #0
   14f88:	cmp	r3, #0
   14f8c:	popeq	{r4, pc}
   14f90:	bl	15110 <close_stdout@@Base+0x2248>
   14f94:	bl	116dc <free@plt>
   14f98:	mov	r0, #0
   14f9c:	pop	{r4, pc}
   14fa0:	push	{r4, r5, r6, lr}
   14fa4:	mov	r5, r1
   14fa8:	mov	r6, r0
   14fac:	mov	r1, r2
   14fb0:	mvn	r0, #0
   14fb4:	mov	r4, r2
   14fb8:	bl	19ee8 <fts_children@@Base+0x2c28>
   14fbc:	cmp	r0, r5
   14fc0:	bcc	14fd4 <close_stdout@@Base+0x210c>
   14fc4:	mov	r0, r6
   14fc8:	mul	r1, r5, r4
   14fcc:	pop	{r4, r5, r6, lr}
   14fd0:	b	14f54 <close_stdout@@Base+0x208c>
   14fd4:	bl	15110 <close_stdout@@Base+0x2248>
   14fd8:	push	{r3, r4, r5, r6, r7, lr}
   14fdc:	subs	r7, r0, #0
   14fe0:	mov	r5, r1
   14fe4:	mov	r6, r2
   14fe8:	ldr	r4, [r1]
   14fec:	beq	15024 <close_stdout@@Base+0x215c>
   14ff0:	movw	r0, #43690	; 0xaaaa
   14ff4:	mov	r1, r2
   14ff8:	bfi	r0, r0, #16, #16
   14ffc:	bl	19ee8 <fts_children@@Base+0x2c28>
   15000:	cmp	r4, r0
   15004:	addcc	r3, r4, #1
   15008:	addcc	r4, r4, r3, lsr #1
   1500c:	bcs	15048 <close_stdout@@Base+0x2180>
   15010:	str	r4, [r5]
   15014:	mov	r0, r7
   15018:	mul	r1, r6, r4
   1501c:	pop	{r3, r4, r5, r6, r7, lr}
   15020:	b	14f54 <close_stdout@@Base+0x208c>
   15024:	cmp	r4, #0
   15028:	bne	15010 <close_stdout@@Base+0x2148>
   1502c:	mov	r0, #64	; 0x40
   15030:	mov	r1, r2
   15034:	bl	19ee8 <fts_children@@Base+0x2c28>
   15038:	cmp	r0, #0
   1503c:	movne	r4, r0
   15040:	addeq	r4, r0, #1
   15044:	b	15010 <close_stdout@@Base+0x2148>
   15048:	bl	15110 <close_stdout@@Base+0x2248>
   1504c:	cmp	r0, #0
   15050:	push	{r3, lr}
   15054:	ldr	r3, [r1]
   15058:	beq	15084 <close_stdout@@Base+0x21bc>
   1505c:	movw	r2, #43689	; 0xaaa9
   15060:	movt	r2, #43690	; 0xaaaa
   15064:	cmp	r3, r2
   15068:	addls	r2, r3, #1
   1506c:	addls	r3, r3, r2, lsr #1
   15070:	bhi	1509c <close_stdout@@Base+0x21d4>
   15074:	str	r3, [r1]
   15078:	mov	r1, r3
   1507c:	pop	{r3, lr}
   15080:	b	14f54 <close_stdout@@Base+0x208c>
   15084:	cmp	r3, #0
   15088:	moveq	r3, #64	; 0x40
   1508c:	str	r3, [r1]
   15090:	mov	r1, r3
   15094:	pop	{r3, lr}
   15098:	b	14f54 <close_stdout@@Base+0x208c>
   1509c:	bl	15110 <close_stdout@@Base+0x2248>
   150a0:	push	{r4, lr}
   150a4:	mov	r4, r0
   150a8:	bl	14efc <close_stdout@@Base+0x2034>
   150ac:	mov	r2, r4
   150b0:	mov	r1, #0
   150b4:	pop	{r4, lr}
   150b8:	b	11904 <memset@plt>
   150bc:	push	{r3, lr}
   150c0:	bl	11688 <calloc@plt>
   150c4:	cmp	r0, #0
   150c8:	popne	{r3, pc}
   150cc:	bl	15110 <close_stdout@@Base+0x2248>
   150d0:	push	{r3, r4, r5, lr}
   150d4:	mov	r4, r1
   150d8:	mov	r5, r0
   150dc:	mov	r0, r1
   150e0:	bl	14efc <close_stdout@@Base+0x2034>
   150e4:	mov	r1, r5
   150e8:	mov	r2, r4
   150ec:	pop	{r3, r4, r5, lr}
   150f0:	b	116f4 <memcpy@plt>
   150f4:	push	{r4, lr}
   150f8:	mov	r4, r0
   150fc:	bl	118a4 <strlen@plt>
   15100:	add	r1, r0, #1
   15104:	mov	r0, r4
   15108:	pop	{r4, lr}
   1510c:	b	150d0 <close_stdout@@Base+0x2208>
   15110:	ldr	r3, [pc, #64]	; 15158 <close_stdout@@Base+0x2290>
   15114:	mov	r2, #5
   15118:	ldr	ip, [pc, #60]	; 1515c <close_stdout@@Base+0x2294>
   1511c:	mov	r0, #0
   15120:	add	r3, pc, r3
   15124:	ldr	r1, [pc, #52]	; 15160 <close_stdout@@Base+0x2298>
   15128:	push	{r4, lr}
   1512c:	add	r1, pc, r1
   15130:	ldr	r3, [r3, ip]
   15134:	ldr	r4, [r3]
   15138:	bl	11730 <dcgettext@plt>
   1513c:	ldr	r2, [pc, #32]	; 15164 <close_stdout@@Base+0x229c>
   15140:	mov	r1, #0
   15144:	add	r2, pc, r2
   15148:	mov	r3, r0
   1514c:	mov	r0, r4
   15150:	bl	117f0 <error@plt>
   15154:	bl	11a30 <abort@plt>
   15158:	ldrdeq	r7, [r1], -r8
   1515c:	andeq	r0, r0, r8, lsl #3
   15160:	andeq	r6, r0, r0, lsl #21
   15164:	muleq	r0, r0, r6
   15168:	push	{r3, lr}
   1516c:	orr	r1, r1, #512	; 0x200
   15170:	bl	16520 <fts_open@@Base>
   15174:	cmp	r0, #0
   15178:	popne	{r3, pc}
   1517c:	bl	118e0 <__errno_location@plt>
   15180:	ldr	r3, [r0]
   15184:	cmp	r3, #22
   15188:	beq	15190 <close_stdout@@Base+0x22c8>
   1518c:	bl	15110 <close_stdout@@Base+0x2248>
   15190:	ldr	r0, [pc, #24]	; 151b0 <close_stdout@@Base+0x22e8>
   15194:	mov	r2, #41	; 0x29
   15198:	ldr	r1, [pc, #20]	; 151b4 <close_stdout@@Base+0x22ec>
   1519c:	ldr	r3, [pc, #20]	; 151b8 <close_stdout@@Base+0x22f0>
   151a0:	add	r0, pc, r0
   151a4:	add	r1, pc, r1
   151a8:	add	r3, pc, r3
   151ac:	bl	11a60 <__assert_fail@plt>
   151b0:	andeq	r6, r0, ip, lsr #20
   151b4:	andeq	r6, r0, r8, asr #20
   151b8:	andeq	r6, r0, r8, lsl sl
   151bc:	ldr	r3, [r0, #48]	; 0x30
   151c0:	and	r3, r3, #17
   151c4:	cmp	r3, #16
   151c8:	beq	151ec <close_stdout@@Base+0x2324>
   151cc:	cmp	r3, #17
   151d0:	beq	151dc <close_stdout@@Base+0x2314>
   151d4:	mov	r0, #0
   151d8:	bx	lr
   151dc:	ldr	r0, [r1, #48]	; 0x30
   151e0:	adds	r0, r0, #0
   151e4:	movne	r0, #1
   151e8:	bx	lr
   151ec:	mov	r0, #1
   151f0:	bx	lr
   151f4:	push	{r4, r5}
   151f8:	mov	ip, r1
   151fc:	ldrd	r4, [r0, #8]
   15200:	ldrd	r2, [r1, #8]
   15204:	cmp	r5, r3
   15208:	cmpeq	r4, r2
   1520c:	movne	r0, #0
   15210:	beq	1521c <close_stdout@@Base+0x2354>
   15214:	pop	{r4, r5}
   15218:	bx	lr
   1521c:	ldrd	r0, [r0]
   15220:	ldrd	r2, [ip]
   15224:	pop	{r4, r5}
   15228:	cmp	r1, r3
   1522c:	cmpeq	r0, r2
   15230:	movne	r0, #0
   15234:	moveq	r0, #1
   15238:	bx	lr
   1523c:	push	{r3, lr}
   15240:	mov	r2, r1
   15244:	mov	r3, #0
   15248:	ldrd	r0, [r0, #8]
   1524c:	bl	1a0f4 <fts_children@@Base+0x2e34>
   15250:	mov	r0, r2
   15254:	pop	{r3, pc}
   15258:	push	{r3, lr}
   1525c:	mov	r2, r1
   15260:	mov	r3, #0
   15264:	ldrd	r0, [r0]
   15268:	bl	1a0f4 <fts_children@@Base+0x2e34>
   1526c:	mov	r0, r2
   15270:	pop	{r3, pc}
   15274:	ldrd	r2, [r0]
   15278:	ldrd	r0, [r1]
   1527c:	cmp	r3, r1
   15280:	cmpeq	r2, r0
   15284:	movne	r0, #0
   15288:	moveq	r0, #1
   1528c:	bx	lr
   15290:	ldr	r3, [r0]
   15294:	ldr	r2, [r1]
   15298:	ldrd	r0, [r3, #168]	; 0xa8
   1529c:	ldrd	r2, [r2, #168]	; 0xa8
   152a0:	cmp	r1, r3
   152a4:	cmpeq	r0, r2
   152a8:	bcc	152b8 <close_stdout@@Base+0x23f0>
   152ac:	movls	r0, #0
   152b0:	movhi	r0, #1
   152b4:	bx	lr
   152b8:	mvn	r0, #0
   152bc:	bx	lr
   152c0:	push	{r3, r4, r5, r6, r7, lr}
   152c4:	mov	r7, r2
   152c8:	ldr	r2, [r0, #40]	; 0x28
   152cc:	mov	r5, r0
   152d0:	mov	r4, r1
   152d4:	ldr	r6, [r0, #44]	; 0x2c
   152d8:	cmp	r2, r7
   152dc:	bcc	15358 <close_stdout@@Base+0x2490>
   152e0:	ldr	ip, [r0, #8]
   152e4:	cmp	r4, #0
   152e8:	beq	153a8 <close_stdout@@Base+0x24e0>
   152ec:	str	r4, [ip], #4
   152f0:	ldr	r4, [r4, #8]
   152f4:	cmp	r4, #0
   152f8:	bne	152ec <close_stdout@@Base+0x2424>
   152fc:	ldr	r0, [r5, #8]
   15300:	mov	r3, r6
   15304:	mov	r2, #4
   15308:	mov	r1, r7
   1530c:	bl	119dc <qsort@plt>
   15310:	ldr	r2, [r5, #8]
   15314:	subs	r3, r7, #1
   15318:	ldr	r4, [r2]
   1531c:	beq	153a0 <close_stdout@@Base+0x24d8>
   15320:	add	ip, r2, #4
   15324:	mov	r6, r4
   15328:	b	15330 <close_stdout@@Base+0x2468>
   1532c:	ldr	r6, [ip, #-4]
   15330:	ldr	r5, [ip], #4
   15334:	subs	r3, r3, #1
   15338:	str	r5, [r6, #8]
   1533c:	bne	1532c <close_stdout@@Base+0x2464>
   15340:	add	r7, r2, r7, lsl #2
   15344:	ldr	r2, [r7, #-4]
   15348:	mov	r3, #0
   1534c:	mov	r0, r4
   15350:	str	r3, [r2, #8]
   15354:	pop	{r3, r4, r5, r6, r7, pc}
   15358:	add	r1, r7, #40	; 0x28
   1535c:	str	r1, [r0, #40]	; 0x28
   15360:	cmn	r1, #-1073741823	; 0xc0000001
   15364:	bhi	15384 <close_stdout@@Base+0x24bc>
   15368:	lsl	r1, r1, #2
   1536c:	ldr	r0, [r0, #8]
   15370:	bl	11754 <realloc@plt>
   15374:	cmp	r0, #0
   15378:	movne	ip, r0
   1537c:	strne	r0, [r5, #8]
   15380:	bne	152e4 <close_stdout@@Base+0x241c>
   15384:	ldr	r0, [r5, #8]
   15388:	bl	116dc <free@plt>
   1538c:	mov	r3, #0
   15390:	mov	r0, r4
   15394:	str	r3, [r5, #8]
   15398:	str	r3, [r5, #40]	; 0x28
   1539c:	pop	{r3, r4, r5, r6, r7, pc}
   153a0:	mov	r2, r4
   153a4:	b	15348 <close_stdout@@Base+0x2480>
   153a8:	mov	r0, ip
   153ac:	b	15300 <close_stdout@@Base+0x2438>
   153b0:	push	{r3, r4, r5, r6, r7, lr}
   153b4:	mov	r6, r0
   153b8:	add	r0, r2, #184	; 0xb8
   153bc:	mov	r5, r2
   153c0:	mov	r7, r1
   153c4:	bl	11820 <malloc@plt>
   153c8:	subs	r4, r0, #0
   153cc:	beq	15418 <close_stdout@@Base+0x2550>
   153d0:	mov	r1, r7
   153d4:	mov	r2, r5
   153d8:	add	r0, r4, #176	; 0xb0
   153dc:	bl	116f4 <memcpy@plt>
   153e0:	add	r1, r4, r5
   153e4:	mov	r3, #0
   153e8:	mov	r2, #3
   153ec:	strb	r3, [r1, #176]	; 0xb0
   153f0:	str	r5, [r4, #52]	; 0x34
   153f4:	str	r6, [r4, #44]	; 0x2c
   153f8:	ldr	r1, [r6, #24]
   153fc:	str	r3, [r4, #32]
   15400:	str	r3, [r4, #12]
   15404:	str	r1, [r4, #28]
   15408:	strh	r3, [r4, #62]	; 0x3e
   1540c:	str	r3, [r4, #16]
   15410:	str	r3, [r4, #20]
   15414:	strh	r2, [r4, #64]	; 0x40
   15418:	mov	r0, r4
   1541c:	pop	{r3, r4, r5, r6, r7, pc}
   15420:	push	{r3, r4, r5, lr}
   15424:	subs	r4, r0, #0
   15428:	popeq	{r3, r4, r5, pc}
   1542c:	ldr	r0, [r4, #12]
   15430:	ldr	r5, [r4, #8]
   15434:	cmp	r0, #0
   15438:	beq	15440 <close_stdout@@Base+0x2578>
   1543c:	bl	11a54 <closedir@plt>
   15440:	mov	r0, r4
   15444:	mov	r4, r5
   15448:	bl	116dc <free@plt>
   1544c:	cmp	r5, #0
   15450:	bne	1542c <close_stdout@@Base+0x2564>
   15454:	pop	{r3, r4, r5, pc}
   15458:	push	{r4, lr}
   1545c:	mov	r4, r0
   15460:	b	15470 <close_stdout@@Base+0x25a8>
   15464:	bl	19030 <fts_children@@Base+0x1d70>
   15468:	cmp	r0, #0
   1546c:	bge	15488 <close_stdout@@Base+0x25c0>
   15470:	mov	r0, r4
   15474:	bl	18fe4 <fts_children@@Base+0x1d24>
   15478:	cmp	r0, #0
   1547c:	mov	r0, r4
   15480:	beq	15464 <close_stdout@@Base+0x259c>
   15484:	pop	{r4, pc}
   15488:	bl	11a3c <close@plt>
   1548c:	b	15470 <close_stdout@@Base+0x25a8>
   15490:	push	{r3, r4, r5, lr}
   15494:	mov	r5, r1
   15498:	ldr	r1, [r0, #32]
   1549c:	mov	r4, r0
   154a0:	subs	r0, r1, r5
   154a4:	rsbs	r3, r0, #0
   154a8:	adcs	r3, r3, r0
   154ac:	cmn	r1, #100	; 0x64
   154b0:	moveq	r3, #0
   154b4:	cmp	r3, #0
   154b8:	bne	15500 <close_stdout@@Base+0x2638>
   154bc:	cmp	r2, #0
   154c0:	bne	154e8 <close_stdout@@Base+0x2620>
   154c4:	ldr	r3, [r4, #48]	; 0x30
   154c8:	tst	r3, #4
   154cc:	bne	154e0 <close_stdout@@Base+0x2618>
   154d0:	cmp	r1, #0
   154d4:	blt	154e0 <close_stdout@@Base+0x2618>
   154d8:	mov	r0, r1
   154dc:	bl	11a3c <close@plt>
   154e0:	str	r5, [r4, #32]
   154e4:	pop	{r3, r4, r5, pc}
   154e8:	add	r0, r4, #60	; 0x3c
   154ec:	bl	18fec <fts_children@@Base+0x1d2c>
   154f0:	cmp	r0, #0
   154f4:	bge	154dc <close_stdout@@Base+0x2614>
   154f8:	str	r5, [r4, #32]
   154fc:	pop	{r3, r4, r5, pc}
   15500:	bl	11a30 <abort@plt>
   15504:	push	{r3, r4, r5, lr}
   15508:	mov	r4, r0
   1550c:	ldr	r3, [r0, #48]	; 0x30
   15510:	ands	r5, r3, #4
   15514:	movne	r5, #0
   15518:	bne	15530 <close_stdout@@Base+0x2668>
   1551c:	tst	r3, #512	; 0x200
   15520:	beq	15540 <close_stdout@@Base+0x2678>
   15524:	mvn	r1, #99	; 0x63
   15528:	mov	r2, #1
   1552c:	bl	15490 <close_stdout@@Base+0x25c8>
   15530:	add	r0, r4, #60	; 0x3c
   15534:	bl	15458 <close_stdout@@Base+0x2590>
   15538:	mov	r0, r5
   1553c:	pop	{r3, r4, r5, pc}
   15540:	ldr	r0, [r0, #28]
   15544:	bl	119d0 <fchdir@plt>
   15548:	adds	r5, r0, #0
   1554c:	movne	r5, #1
   15550:	b	15530 <close_stdout@@Base+0x2668>
   15554:	push	{r4, r5, r6, r7, lr}
   15558:	mov	r4, r2
   1555c:	ldr	r2, [r2, #48]	; 0x30
   15560:	sub	sp, sp, #12
   15564:	mov	r6, r1
   15568:	add	r5, r4, #72	; 0x48
   1556c:	cmp	r2, #0
   15570:	ldr	r2, [r1]
   15574:	bne	15580 <close_stdout@@Base+0x26b8>
   15578:	tst	r2, #1
   1557c:	bne	15590 <close_stdout@@Base+0x26c8>
   15580:	tst	r2, #2
   15584:	bne	15590 <close_stdout@@Base+0x26c8>
   15588:	cmp	r3, #0
   1558c:	beq	155dc <close_stdout@@Base+0x2714>
   15590:	mov	r0, #3
   15594:	ldr	r1, [r4, #24]
   15598:	mov	r2, r5
   1559c:	bl	11a18 <__xstat64@plt>
   155a0:	cmp	r0, #0
   155a4:	beq	15600 <close_stdout@@Base+0x2738>
   155a8:	bl	118e0 <__errno_location@plt>
   155ac:	ldr	r6, [r0]
   155b0:	mov	r7, r0
   155b4:	cmp	r6, #2
   155b8:	beq	156a4 <close_stdout@@Base+0x27dc>
   155bc:	str	r6, [r4, #32]
   155c0:	mov	r0, r5
   155c4:	mov	r1, #0
   155c8:	mov	r2, #104	; 0x68
   155cc:	bl	11904 <memset@plt>
   155d0:	mov	r0, #10
   155d4:	add	sp, sp, #12
   155d8:	pop	{r4, r5, r6, r7, pc}
   155dc:	ldr	r2, [r4, #24]
   155e0:	mov	r1, r0
   155e4:	mov	r3, #256	; 0x100
   155e8:	mov	r0, #3
   155ec:	str	r3, [sp]
   155f0:	mov	r3, r5
   155f4:	bl	11784 <__fxstatat64@plt>
   155f8:	cmp	r0, #0
   155fc:	bne	15630 <close_stdout@@Base+0x2768>
   15600:	ldr	r0, [r4, #88]	; 0x58
   15604:	and	r0, r0, #61440	; 0xf000
   15608:	cmp	r0, #16384	; 0x4000
   1560c:	beq	15640 <close_stdout@@Base+0x2778>
   15610:	cmp	r0, #40960	; 0xa000
   15614:	moveq	r0, #12
   15618:	beq	155d4 <close_stdout@@Base+0x270c>
   1561c:	cmp	r0, #32768	; 0x8000
   15620:	movne	r0, #3
   15624:	moveq	r0, #8
   15628:	add	sp, sp, #12
   1562c:	pop	{r4, r5, r6, r7, pc}
   15630:	bl	118e0 <__errno_location@plt>
   15634:	ldr	r3, [r0]
   15638:	str	r3, [r4, #32]
   1563c:	b	155c0 <close_stdout@@Base+0x26f8>
   15640:	ldr	r3, [r6]
   15644:	ldrb	r1, [r4, #176]	; 0xb0
   15648:	tst	r3, #32
   1564c:	ldr	r2, [r4, #92]	; 0x5c
   15650:	moveq	r3, #2
   15654:	movne	r3, #0
   15658:	cmp	r1, #46	; 0x2e
   1565c:	rsb	r3, r3, r2
   15660:	str	r3, [r4, #56]	; 0x38
   15664:	beq	15670 <close_stdout@@Base+0x27a8>
   15668:	mov	r0, #1
   1566c:	b	155d4 <close_stdout@@Base+0x270c>
   15670:	ldrb	r3, [r4, #177]	; 0xb1
   15674:	cmp	r3, #0
   15678:	beq	15690 <close_stdout@@Base+0x27c8>
   1567c:	ldr	r3, [r4, #176]	; 0xb0
   15680:	bic	r3, r3, #-16777216	; 0xff000000
   15684:	bic	r3, r3, #255	; 0xff
   15688:	cmp	r3, #11776	; 0x2e00
   1568c:	bne	15668 <close_stdout@@Base+0x27a0>
   15690:	ldr	r0, [r4, #48]	; 0x30
   15694:	cmp	r0, #0
   15698:	movne	r0, #5
   1569c:	moveq	r0, #1
   156a0:	b	155d4 <close_stdout@@Base+0x270c>
   156a4:	mov	r0, #3
   156a8:	ldr	r1, [r4, #24]
   156ac:	mov	r2, r5
   156b0:	bl	11a48 <__lxstat64@plt>
   156b4:	cmp	r0, #0
   156b8:	streq	r0, [r7]
   156bc:	moveq	r0, #13
   156c0:	beq	155d4 <close_stdout@@Base+0x270c>
   156c4:	b	155bc <close_stdout@@Base+0x26f4>
   156c8:	push	{r3, r4, r5, lr}
   156cc:	mov	r4, r0
   156d0:	ldr	r3, [r1]
   156d4:	add	r0, r3, #256	; 0x100
   156d8:	add	r2, r0, r2
   156dc:	cmp	r3, r2
   156e0:	bhi	1570c <close_stdout@@Base+0x2844>
   156e4:	str	r2, [r1]
   156e8:	mov	r1, r2
   156ec:	ldr	r0, [r4]
   156f0:	bl	11754 <realloc@plt>
   156f4:	subs	r5, r0, #0
   156f8:	strne	r5, [r4]
   156fc:	movne	r3, #1
   15700:	beq	15734 <close_stdout@@Base+0x286c>
   15704:	mov	r0, r3
   15708:	pop	{r3, r4, r5, pc}
   1570c:	ldr	r0, [r4]
   15710:	mov	r5, #0
   15714:	bl	116dc <free@plt>
   15718:	str	r5, [r4]
   1571c:	bl	118e0 <__errno_location@plt>
   15720:	mov	r3, r5
   15724:	mov	r2, #36	; 0x24
   15728:	str	r2, [r0]
   1572c:	mov	r0, r3
   15730:	pop	{r3, r4, r5, pc}
   15734:	ldr	r0, [r4]
   15738:	bl	116dc <free@plt>
   1573c:	str	r5, [r4]
   15740:	mov	r3, r5
   15744:	b	15704 <close_stdout@@Base+0x283c>
   15748:	movw	r3, #258	; 0x102
   1574c:	and	r3, r0, r3
   15750:	cmp	r3, #0
   15754:	ldr	ip, [pc, #116]	; 157d0 <close_stdout@@Base+0x2908>
   15758:	push	{r4, lr}
   1575c:	add	ip, pc, ip
   15760:	sub	sp, sp, #8
   15764:	mov	r4, r1
   15768:	beq	157a8 <close_stdout@@Base+0x28e0>
   1576c:	ldr	lr, [pc, #96]	; 157d4 <close_stdout@@Base+0x290c>
   15770:	mov	r0, #31
   15774:	ldr	r2, [pc, #92]	; 157d8 <close_stdout@@Base+0x2910>
   15778:	mov	r1, #0
   1577c:	ldr	r3, [pc, #88]	; 157dc <close_stdout@@Base+0x2914>
   15780:	ldr	ip, [ip, lr]
   15784:	add	r2, pc, r2
   15788:	add	r3, pc, r3
   1578c:	str	ip, [sp]
   15790:	bl	187dc <fts_children@@Base+0x151c>
   15794:	str	r0, [r4]
   15798:	adds	r0, r0, #0
   1579c:	movne	r0, #1
   157a0:	add	sp, sp, #8
   157a4:	pop	{r4, pc}
   157a8:	mov	r0, #32
   157ac:	bl	11820 <malloc@plt>
   157b0:	cmp	r0, #0
   157b4:	str	r0, [r4]
   157b8:	moveq	r0, r0
   157bc:	beq	157a0 <close_stdout@@Base+0x28d8>
   157c0:	bl	17d88 <fts_children@@Base+0xac8>
   157c4:	mov	r0, #1
   157c8:	add	sp, sp, #8
   157cc:	pop	{r4, pc}
   157d0:	muleq	r1, ip, r8
   157d4:	andeq	r0, r0, r4, ror #2
   157d8:			; <UNDEFINED> instruction: 0xfffffab0
   157dc:			; <UNDEFINED> instruction: 0xfffffa64
   157e0:	tst	r1, #16
   157e4:	push	{r4, lr}
   157e8:	moveq	r3, #18688	; 0x4900
   157ec:	movne	r3, #51456	; 0xc900
   157f0:	tst	r1, #2048	; 0x800
   157f4:	moveq	ip, #0
   157f8:	movne	ip, #262144	; 0x40000
   157fc:	tst	r1, #512	; 0x200
   15800:	orr	r3, ip, r3
   15804:	beq	15834 <close_stdout@@Base+0x296c>
   15808:	mov	r1, r2
   1580c:	mov	r2, r3
   15810:	bl	19538 <fts_children@@Base+0x2278>
   15814:	mov	r4, r0
   15818:	cmp	r4, #0
   1581c:	blt	1582c <close_stdout@@Base+0x2964>
   15820:	mov	r0, r4
   15824:	mov	r1, #1
   15828:	bl	17c98 <fts_children@@Base+0x9d8>
   1582c:	mov	r0, r4
   15830:	pop	{r4, pc}
   15834:	mov	r0, r2
   15838:	mov	r1, r3
   1583c:	bl	17e7c <fts_children@@Base+0xbbc>
   15840:	mov	r4, r0
   15844:	b	15818 <close_stdout@@Base+0x2950>
   15848:	movw	r3, #258	; 0x102
   1584c:	and	r3, r0, r3
   15850:	cmp	r3, #0
   15854:	push	{r4, r5, r6, r7, r8, lr}
   15858:	mov	r8, r1
   1585c:	mov	r6, r2
   15860:	beq	158c8 <close_stdout@@Base+0x2a00>
   15864:	mov	r0, #24
   15868:	bl	11820 <malloc@plt>
   1586c:	subs	r7, r0, #0
   15870:	beq	158f4 <close_stdout@@Base+0x2a2c>
   15874:	ldrd	r4, [r6, #72]	; 0x48
   15878:	mov	r1, r7
   1587c:	strd	r4, [r7]
   15880:	ldrd	r4, [r6, #168]	; 0xa8
   15884:	str	r6, [r7, #16]
   15888:	strd	r4, [r7, #8]
   1588c:	ldr	r0, [r8]
   15890:	bl	18e04 <fts_children@@Base+0x1b44>
   15894:	cmp	r7, r0
   15898:	mov	r4, r0
   1589c:	beq	158ec <close_stdout@@Base+0x2a24>
   158a0:	mov	r0, r7
   158a4:	bl	116dc <free@plt>
   158a8:	cmp	r4, #0
   158ac:	beq	158f4 <close_stdout@@Base+0x2a2c>
   158b0:	ldr	r3, [r4, #16]
   158b4:	mov	r2, #2
   158b8:	mov	r0, #1
   158bc:	strh	r2, [r6, #60]	; 0x3c
   158c0:	str	r3, [r6]
   158c4:	pop	{r4, r5, r6, r7, r8, pc}
   158c8:	ldr	r0, [r1]
   158cc:	add	r1, r2, #72	; 0x48
   158d0:	bl	17da4 <fts_children@@Base+0xae4>
   158d4:	cmp	r0, #0
   158d8:	beq	158ec <close_stdout@@Base+0x2a24>
   158dc:	mov	r3, #2
   158e0:	str	r6, [r6]
   158e4:	strh	r3, [r6, #60]	; 0x3c
   158e8:	pop	{r4, r5, r6, r7, r8, pc}
   158ec:	mov	r0, #1
   158f0:	pop	{r4, r5, r6, r7, r8, pc}
   158f4:	mov	r0, #0
   158f8:	pop	{r4, r5, r6, r7, r8, pc}
   158fc:	ldr	ip, [pc, #568]	; 15b3c <close_stdout@@Base+0x2c74>
   15900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15904:	mov	sl, r0
   15908:	ldr	r0, [pc, #560]	; 15b40 <close_stdout@@Base+0x2c78>
   1590c:	add	ip, pc, ip
   15910:	sub	sp, sp, #124	; 0x7c
   15914:	mov	r9, r3
   15918:	mov	r3, ip
   1591c:	mov	r5, r1
   15920:	ldr	r0, [ip, r0]
   15924:	mov	fp, r2
   15928:	ldr	r4, [sp, #160]	; 0xa0
   1592c:	ldr	r3, [r0]
   15930:	cmp	r4, #0
   15934:	str	r0, [sp]
   15938:	moveq	r7, r4
   1593c:	str	r3, [sp, #116]	; 0x74
   15940:	beq	15954 <close_stdout@@Base+0x2a8c>
   15944:	ldrb	r3, [r4]
   15948:	cmp	r3, #46	; 0x2e
   1594c:	beq	15a2c <close_stdout@@Base+0x2b64>
   15950:	mov	r7, #0
   15954:	ldr	r6, [sl, #48]	; 0x30
   15958:	ands	r8, r6, #4
   1595c:	beq	159a0 <close_stdout@@Base+0x2ad8>
   15960:	ands	r8, r6, #512	; 0x200
   15964:	beq	15980 <close_stdout@@Base+0x2ab8>
   15968:	cmp	r9, #0
   1596c:	movlt	r8, #0
   15970:	blt	15980 <close_stdout@@Base+0x2ab8>
   15974:	mov	r0, r9
   15978:	mov	r8, #0
   1597c:	bl	11a3c <close@plt>
   15980:	ldr	r1, [sp]
   15984:	mov	r0, r8
   15988:	ldr	r2, [sp, #116]	; 0x74
   1598c:	ldr	r3, [r1]
   15990:	cmp	r2, r3
   15994:	bne	15b30 <close_stdout@@Base+0x2c68>
   15998:	add	sp, sp, #124	; 0x7c
   1599c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159a0:	lsr	r2, r9, #31
   159a4:	tst	r7, r2
   159a8:	bne	15a48 <close_stdout@@Base+0x2b80>
   159ac:	cmp	r2, #0
   159b0:	streq	r9, [sp, #4]
   159b4:	bne	15b34 <close_stdout@@Base+0x2c6c>
   159b8:	tst	r6, #2
   159bc:	bne	159ec <close_stdout@@Base+0x2b24>
   159c0:	cmp	r4, #0
   159c4:	beq	15a90 <close_stdout@@Base+0x2bc8>
   159c8:	ldrb	r2, [r4]
   159cc:	cmp	r2, #46	; 0x2e
   159d0:	bne	15a90 <close_stdout@@Base+0x2bc8>
   159d4:	ldrb	r2, [r4, #1]
   159d8:	cmp	r2, #46	; 0x2e
   159dc:	bne	15a90 <close_stdout@@Base+0x2bc8>
   159e0:	ldrb	r2, [r4, #2]
   159e4:	cmp	r2, #0
   159e8:	bne	15a90 <close_stdout@@Base+0x2bc8>
   159ec:	mov	r0, #3
   159f0:	ldr	r1, [sp, #4]
   159f4:	add	r2, sp, #8
   159f8:	bl	1179c <__fxstat64@plt>
   159fc:	cmp	r0, #0
   15a00:	beq	15aa8 <close_stdout@@Base+0x2be0>
   15a04:	mvn	r8, #0
   15a08:	cmp	r9, #0
   15a0c:	bge	15980 <close_stdout@@Base+0x2ab8>
   15a10:	bl	118e0 <__errno_location@plt>
   15a14:	ldr	r5, [r0]
   15a18:	mov	r4, r0
   15a1c:	ldr	r0, [sp, #4]
   15a20:	bl	11a3c <close@plt>
   15a24:	str	r5, [r4]
   15a28:	b	15980 <close_stdout@@Base+0x2ab8>
   15a2c:	ldrb	r3, [r4, #1]
   15a30:	cmp	r3, #46	; 0x2e
   15a34:	bne	15950 <close_stdout@@Base+0x2a88>
   15a38:	ldrb	r3, [r4, #2]
   15a3c:	rsbs	r7, r3, #1
   15a40:	movcc	r7, #0
   15a44:	b	15954 <close_stdout@@Base+0x2a8c>
   15a48:	tst	r6, #512	; 0x200
   15a4c:	bne	15acc <close_stdout@@Base+0x2c04>
   15a50:	mov	r1, r6
   15a54:	mov	r7, #1
   15a58:	ldr	r0, [sl, #32]
   15a5c:	mov	r2, r4
   15a60:	bl	157e0 <close_stdout@@Base+0x2918>
   15a64:	cmp	r0, #0
   15a68:	str	r0, [sp, #4]
   15a6c:	blt	15b28 <close_stdout@@Base+0x2c60>
   15a70:	ldr	r6, [sl, #48]	; 0x30
   15a74:	b	159b8 <close_stdout@@Base+0x2af0>
   15a78:	ldrd	r4, [fp]
   15a7c:	ldrd	r0, [sp, #104]	; 0x68
   15a80:	cmp	r5, r1
   15a84:	cmpeq	r4, r0
   15a88:	bne	15abc <close_stdout@@Base+0x2bf4>
   15a8c:	ldr	r6, [sl, #48]	; 0x30
   15a90:	tst	r6, #512	; 0x200
   15a94:	bne	15b10 <close_stdout@@Base+0x2c48>
   15a98:	ldr	r0, [sp, #4]
   15a9c:	bl	119d0 <fchdir@plt>
   15aa0:	mov	r8, r0
   15aa4:	b	15a08 <close_stdout@@Base+0x2b40>
   15aa8:	ldrd	r2, [r5]
   15aac:	ldrd	r4, [sp, #8]
   15ab0:	cmp	r3, r5
   15ab4:	cmpeq	r2, r4
   15ab8:	beq	15a78 <close_stdout@@Base+0x2bb0>
   15abc:	bl	118e0 <__errno_location@plt>
   15ac0:	mov	r3, #2
   15ac4:	str	r3, [r0]
   15ac8:	b	15a04 <close_stdout@@Base+0x2b3c>
   15acc:	add	r7, sl, #60	; 0x3c
   15ad0:	mov	r0, r7
   15ad4:	bl	18fe4 <fts_children@@Base+0x1d24>
   15ad8:	cmp	r0, #0
   15adc:	bne	15a50 <close_stdout@@Base+0x2b88>
   15ae0:	mov	r0, r7
   15ae4:	bl	19030 <fts_children@@Base+0x1d70>
   15ae8:	cmp	r0, #0
   15aec:	str	r0, [sp, #4]
   15af0:	ldrlt	r1, [sl, #48]	; 0x30
   15af4:	blt	15a54 <close_stdout@@Base+0x2b8c>
   15af8:	ldr	r6, [sl, #48]	; 0x30
   15afc:	mov	r7, #1
   15b00:	ldr	r9, [sp, #4]
   15b04:	tst	r6, #2
   15b08:	beq	15a90 <close_stdout@@Base+0x2bc8>
   15b0c:	b	159ec <close_stdout@@Base+0x2b24>
   15b10:	eor	r2, r7, #1
   15b14:	mov	r0, sl
   15b18:	ldr	r1, [sp, #4]
   15b1c:	uxtb	r2, r2
   15b20:	bl	15490 <close_stdout@@Base+0x25c8>
   15b24:	b	15980 <close_stdout@@Base+0x2ab8>
   15b28:	mvn	r8, #0
   15b2c:	b	15980 <close_stdout@@Base+0x2ab8>
   15b30:	bl	1173c <__stack_chk_fail@plt>
   15b34:	mov	r1, r6
   15b38:	b	15a58 <close_stdout@@Base+0x2b90>
   15b3c:	andeq	r7, r1, ip, ror #13
   15b40:	andeq	r0, r0, r8, ror #2
   15b44:	push	{r4, r5, r6, r7, lr}
   15b48:	movw	r3, #258	; 0x102
   15b4c:	ldr	r5, [pc, #216]	; 15c2c <close_stdout@@Base+0x2d64>
   15b50:	and	r3, r0, r3
   15b54:	ldr	r4, [pc, #212]	; 15c30 <close_stdout@@Base+0x2d68>
   15b58:	cmp	r3, #0
   15b5c:	add	r5, pc, r5
   15b60:	sub	sp, sp, #36	; 0x24
   15b64:	mov	ip, r1
   15b68:	ldr	r6, [r5, r4]
   15b6c:	mov	r3, r5
   15b70:	ldr	r3, [r6]
   15b74:	str	r3, [sp, #28]
   15b78:	bne	15bd0 <close_stdout@@Base+0x2d08>
   15b7c:	ldr	r3, [r2, #4]
   15b80:	cmp	r3, #0
   15b84:	beq	15bb8 <close_stdout@@Base+0x2cf0>
   15b88:	ldr	r1, [r3, #48]	; 0x30
   15b8c:	cmp	r1, #0
   15b90:	blt	15bb8 <close_stdout@@Base+0x2cf0>
   15b94:	ldr	r7, [ip]
   15b98:	ldrd	r0, [r7, #16]
   15b9c:	orrs	r4, r0, r1
   15ba0:	beq	15c28 <close_stdout@@Base+0x2d60>
   15ba4:	ldrd	r4, [r7]
   15ba8:	ldrd	r0, [r2, #168]	; 0xa8
   15bac:	cmp	r5, r1
   15bb0:	cmpeq	r4, r0
   15bb4:	beq	15bfc <close_stdout@@Base+0x2d34>
   15bb8:	ldr	r2, [sp, #28]
   15bbc:	ldr	r3, [r6]
   15bc0:	cmp	r2, r3
   15bc4:	bne	15c24 <close_stdout@@Base+0x2d5c>
   15bc8:	add	sp, sp, #36	; 0x24
   15bcc:	pop	{r4, r5, r6, r7, pc}
   15bd0:	ldrd	r4, [r2, #72]	; 0x48
   15bd4:	mov	r1, sp
   15bd8:	ldrd	r2, [r2, #168]	; 0xa8
   15bdc:	ldr	r0, [ip]
   15be0:	strd	r4, [sp]
   15be4:	strd	r2, [sp, #8]
   15be8:	bl	18e78 <fts_children@@Base+0x1bb8>
   15bec:	cmp	r0, #0
   15bf0:	beq	15c28 <close_stdout@@Base+0x2d60>
   15bf4:	bl	116dc <free@plt>
   15bf8:	b	15bb8 <close_stdout@@Base+0x2cf0>
   15bfc:	ldrd	r0, [r7, #8]
   15c00:	ldrd	r4, [r2, #72]	; 0x48
   15c04:	cmp	r1, r5
   15c08:	cmpeq	r0, r4
   15c0c:	ldrdeq	r0, [r3, #72]	; 0x48
   15c10:	strdeq	r0, [r7, #8]
   15c14:	ldreq	r1, [ip]
   15c18:	ldrdeq	r2, [r3, #168]	; 0xa8
   15c1c:	strdeq	r2, [r1]
   15c20:	b	15bb8 <close_stdout@@Base+0x2cf0>
   15c24:	bl	1173c <__stack_chk_fail@plt>
   15c28:	bl	11a30 <abort@plt>
   15c2c:	muleq	r1, ip, r4
   15c30:	andeq	r0, r0, r8, ror #2
   15c34:	ldr	r3, [pc, #2256]	; 1650c <close_stdout@@Base+0x3644>
   15c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c3c:	add	r3, pc, r3
   15c40:	ldr	r2, [pc, #2248]	; 16510 <close_stdout@@Base+0x3648>
   15c44:	sub	sp, sp, #164	; 0xa4
   15c48:	ldr	r9, [r0]
   15c4c:	mov	r5, r0
   15c50:	str	r1, [sp, #52]	; 0x34
   15c54:	ldr	r2, [r3, r2]
   15c58:	ldr	r0, [r9, #12]
   15c5c:	adds	r1, r0, #0
   15c60:	ldr	r3, [r2]
   15c64:	str	r2, [sp, #48]	; 0x30
   15c68:	movne	r1, #1
   15c6c:	cmp	r1, #0
   15c70:	str	r1, [sp, #44]	; 0x2c
   15c74:	str	r3, [sp, #156]	; 0x9c
   15c78:	bne	161ac <close_stdout@@Base+0x32e4>
   15c7c:	ldr	r3, [r5, #48]	; 0x30
   15c80:	ldr	r1, [r9, #24]
   15c84:	and	r3, r3, #516	; 0x204
   15c88:	cmp	r3, #512	; 0x200
   15c8c:	ldr	r3, [r5, #48]	; 0x30
   15c90:	ldreq	r0, [r5, #32]
   15c94:	mvnne	r0, #99	; 0x63
   15c98:	tst	r3, #16
   15c9c:	moveq	r2, #18688	; 0x4900
   15ca0:	bne	16138 <close_stdout@@Base+0x3270>
   15ca4:	tst	r3, #2048	; 0x800
   15ca8:	moveq	r3, #0
   15cac:	movne	r3, #262144	; 0x40000
   15cb0:	orr	r2, r3, r2
   15cb4:	bl	19538 <fts_children@@Base+0x2278>
   15cb8:	subs	r4, r0, #0
   15cbc:	blt	163d8 <close_stdout@@Base+0x3510>
   15cc0:	mov	r1, #1
   15cc4:	bl	17c98 <fts_children@@Base+0x9d8>
   15cc8:	mov	r0, r4
   15ccc:	bl	119b8 <fdopendir@plt>
   15cd0:	cmp	r0, #0
   15cd4:	beq	163c0 <close_stdout@@Base+0x34f8>
   15cd8:	ldrh	r3, [r9, #60]	; 0x3c
   15cdc:	str	r0, [r9, #12]
   15ce0:	cmp	r3, #11
   15ce4:	beq	163f4 <close_stdout@@Base+0x352c>
   15ce8:	ldr	r0, [r5, #48]	; 0x30
   15cec:	tst	r0, #256	; 0x100
   15cf0:	bne	1621c <close_stdout@@Base+0x3354>
   15cf4:	ldr	r2, [r5, #44]	; 0x2c
   15cf8:	movw	r3, #34464	; 0x86a0
   15cfc:	movt	r3, #1
   15d00:	cmp	r2, #0
   15d04:	mvnne	r3, #0
   15d08:	str	r3, [sp, #20]
   15d0c:	ldr	r3, [sp, #52]	; 0x34
   15d10:	cmp	r3, #2
   15d14:	moveq	r6, #0
   15d18:	beq	15d30 <close_stdout@@Base+0x2e68>
   15d1c:	ldr	r3, [r5, #48]	; 0x30
   15d20:	and	r3, r3, #24
   15d24:	cmp	r3, #24
   15d28:	mvnne	r6, #0
   15d2c:	beq	16204 <close_stdout@@Base+0x333c>
   15d30:	ldr	r1, [sp, #44]	; 0x2c
   15d34:	cmp	r1, #0
   15d38:	movne	r1, #1
   15d3c:	strne	r1, [sp, #60]	; 0x3c
   15d40:	beq	160dc <close_stdout@@Base+0x3214>
   15d44:	ldr	r3, [r9, #40]	; 0x28
   15d48:	ldr	r2, [r9, #28]
   15d4c:	str	r3, [sp, #28]
   15d50:	sub	r3, r3, #1
   15d54:	ldr	r1, [sp, #28]
   15d58:	ldrb	r2, [r2, r3]
   15d5c:	cmp	r2, #47	; 0x2f
   15d60:	moveq	r1, r3
   15d64:	ands	r0, r0, #4
   15d68:	str	r1, [sp, #28]
   15d6c:	ldrne	r3, [r5, #24]
   15d70:	movne	r1, #47	; 0x2f
   15d74:	ldrne	r0, [sp, #28]
   15d78:	streq	r0, [sp, #36]	; 0x24
   15d7c:	addne	r2, r3, r0
   15d80:	strbne	r1, [r3, r0]
   15d84:	addne	r2, r2, #1
   15d88:	ldr	r3, [r9, #48]	; 0x30
   15d8c:	add	r0, r5, #48	; 0x30
   15d90:	ldr	r1, [sp, #28]
   15d94:	add	r3, r3, #1
   15d98:	ldr	fp, [r5, #36]	; 0x24
   15d9c:	str	r3, [sp, #24]
   15da0:	add	r1, r1, #1
   15da4:	ldr	r3, [pc, #1896]	; 16514 <close_stdout@@Base+0x364c>
   15da8:	rsb	fp, r1, fp
   15dac:	strne	r2, [sp, #36]	; 0x24
   15db0:	mov	r2, #0
   15db4:	add	r3, pc, r3
   15db8:	str	r1, [sp, #12]
   15dbc:	str	r2, [sp, #32]
   15dc0:	mov	sl, r2
   15dc4:	mov	r7, r2
   15dc8:	str	r2, [sp, #16]
   15dcc:	str	r3, [sp, #40]	; 0x28
   15dd0:	str	r0, [sp, #56]	; 0x38
   15dd4:	b	15ea4 <close_stdout@@Base+0x2fdc>
   15dd8:	ldr	r2, [sp, #12]
   15ddc:	adds	r0, r0, r2
   15de0:	bcs	15f80 <close_stdout@@Base+0x30b8>
   15de4:	ldr	r3, [sp, #24]
   15de8:	str	r3, [r4, #48]	; 0x30
   15dec:	ldr	r3, [r5]
   15df0:	str	r0, [r4, #40]	; 0x28
   15df4:	str	r3, [r4, #4]
   15df8:	ldrd	r2, [r8]
   15dfc:	strd	r2, [r4, #168]	; 0xa8
   15e00:	ldr	r3, [r5, #48]	; 0x30
   15e04:	tst	r3, #4
   15e08:	addeq	r3, r4, #176	; 0xb0
   15e0c:	streq	r3, [r4, #24]
   15e10:	bne	15fc8 <close_stdout@@Base+0x3100>
   15e14:	ldr	r3, [r5, #44]	; 0x2c
   15e18:	cmp	r3, #0
   15e1c:	beq	15e2c <close_stdout@@Base+0x2f64>
   15e20:	ldr	r3, [r5, #48]	; 0x30
   15e24:	ands	r3, r3, #1024	; 0x400
   15e28:	beq	15fe8 <close_stdout@@Base+0x3120>
   15e2c:	ldr	r3, [r5, #48]	; 0x30
   15e30:	and	r3, r3, #24
   15e34:	cmp	r3, #24
   15e38:	movne	r2, #0
   15e3c:	beq	16020 <close_stdout@@Base+0x3158>
   15e40:	mov	r0, #11
   15e44:	strh	r0, [r4, #60]	; 0x3c
   15e48:	ldrb	r3, [r8, #18]
   15e4c:	sub	r3, r3, #1
   15e50:	cmp	r3, #11
   15e54:	ldrls	r1, [sp, #40]	; 0x28
   15e58:	movhi	r3, #0
   15e5c:	ldrls	r3, [r1, r3, lsl #2]
   15e60:	cmp	r2, #0
   15e64:	moveq	r2, #2
   15e68:	movne	r2, #1
   15e6c:	str	r3, [r4, #88]	; 0x58
   15e70:	mov	r3, #0
   15e74:	strd	r2, [r4, #120]	; 0x78
   15e78:	ldr	r2, [sp, #16]
   15e7c:	add	r7, r7, #1
   15e80:	ldr	r0, [sp, #20]
   15e84:	mov	r3, #0
   15e88:	cmp	r2, #0
   15e8c:	str	r3, [r4, #8]
   15e90:	streq	r4, [sp, #16]
   15e94:	strne	r4, [sl, #8]
   15e98:	cmp	r0, r7
   15e9c:	bls	16048 <close_stdout@@Base+0x3180>
   15ea0:	mov	sl, r4
   15ea4:	ldr	r0, [r9, #12]
   15ea8:	cmp	r0, #0
   15eac:	beq	16048 <close_stdout@@Base+0x3180>
   15eb0:	bl	119ac <readdir64@plt>
   15eb4:	subs	r8, r0, #0
   15eb8:	beq	16034 <close_stdout@@Base+0x316c>
   15ebc:	ldr	r3, [r5, #48]	; 0x30
   15ec0:	tst	r3, #32
   15ec4:	bne	15ed4 <close_stdout@@Base+0x300c>
   15ec8:	ldrb	r3, [r8, #19]
   15ecc:	cmp	r3, #46	; 0x2e
   15ed0:	beq	16000 <close_stdout@@Base+0x3138>
   15ed4:	add	r6, r8, #19
   15ed8:	mov	r0, r6
   15edc:	bl	118a4 <strlen@plt>
   15ee0:	mov	r1, r6
   15ee4:	mov	r2, r0
   15ee8:	mov	r0, r5
   15eec:	bl	153b0 <close_stdout@@Base+0x24e8>
   15ef0:	subs	r4, r0, #0
   15ef4:	beq	16378 <close_stdout@@Base+0x34b0>
   15ef8:	mov	r0, r6
   15efc:	bl	118a4 <strlen@plt>
   15f00:	cmp	fp, r0
   15f04:	bhi	15dd8 <close_stdout@@Base+0x2f10>
   15f08:	mov	r3, r5
   15f0c:	ldr	r1, [sp, #28]
   15f10:	ldr	fp, [r3, #24]!
   15f14:	add	r2, r1, #2
   15f18:	add	r1, r5, #36	; 0x24
   15f1c:	add	r2, r2, r0
   15f20:	mov	r0, r3
   15f24:	bl	156c8 <close_stdout@@Base+0x2800>
   15f28:	cmp	r0, #0
   15f2c:	beq	16378 <close_stdout@@Base+0x34b0>
   15f30:	ldr	r3, [r5, #24]
   15f34:	cmp	r3, fp
   15f38:	beq	15f60 <close_stdout@@Base+0x3098>
   15f3c:	ldr	r2, [r5, #48]	; 0x30
   15f40:	tst	r2, #4
   15f44:	ldrne	r2, [sp, #12]
   15f48:	moveq	r0, #1
   15f4c:	streq	r0, [sp, #32]
   15f50:	addne	r3, r3, r2
   15f54:	strne	r3, [sp, #36]	; 0x24
   15f58:	movne	r3, #1
   15f5c:	strne	r3, [sp, #32]
   15f60:	ldr	r1, [sp, #12]
   15f64:	mov	r0, r6
   15f68:	ldr	fp, [r5, #36]	; 0x24
   15f6c:	rsb	fp, r1, fp
   15f70:	bl	118a4 <strlen@plt>
   15f74:	ldr	r2, [sp, #12]
   15f78:	adds	r0, r0, r2
   15f7c:	bcc	15de4 <close_stdout@@Base+0x2f1c>
   15f80:	mov	r0, r4
   15f84:	mov	r4, #0
   15f88:	bl	116dc <free@plt>
   15f8c:	ldr	r0, [sp, #16]
   15f90:	bl	15420 <close_stdout@@Base+0x2558>
   15f94:	ldr	r0, [r9, #12]
   15f98:	bl	11a54 <closedir@plt>
   15f9c:	str	r4, [r9, #12]
   15fa0:	mov	r3, #7
   15fa4:	strh	r3, [r9, #60]	; 0x3c
   15fa8:	ldr	r3, [r5, #48]	; 0x30
   15fac:	orr	r3, r3, #16384	; 0x4000
   15fb0:	str	r3, [r5, #48]	; 0x30
   15fb4:	bl	118e0 <__errno_location@plt>
   15fb8:	mov	r2, #36	; 0x24
   15fbc:	mov	r3, r4
   15fc0:	str	r2, [r0]
   15fc4:	b	161d8 <close_stdout@@Base+0x3310>
   15fc8:	ldr	r3, [r4, #28]
   15fcc:	add	r1, r4, #176	; 0xb0
   15fd0:	ldr	r2, [r4, #52]	; 0x34
   15fd4:	ldr	r0, [sp, #36]	; 0x24
   15fd8:	str	r3, [r4, #24]
   15fdc:	add	r2, r2, #1
   15fe0:	bl	116d0 <memmove@plt>
   15fe4:	b	15e14 <close_stdout@@Base+0x2f4c>
   15fe8:	ldr	r0, [r5, #32]
   15fec:	mov	r2, r4
   15ff0:	ldr	r1, [sp, #56]	; 0x38
   15ff4:	bl	15554 <close_stdout@@Base+0x268c>
   15ff8:	strh	r0, [r4, #60]	; 0x3c
   15ffc:	b	15e78 <close_stdout@@Base+0x2fb0>
   16000:	ldrb	r3, [r8, #20]
   16004:	cmp	r3, #0
   16008:	beq	16018 <close_stdout@@Base+0x3150>
   1600c:	ldrh	r3, [r8, #20]
   16010:	cmp	r3, #46	; 0x2e
   16014:	bne	15ed4 <close_stdout@@Base+0x300c>
   16018:	mov	r4, sl
   1601c:	b	15ea0 <close_stdout@@Base+0x2fd8>
   16020:	ldrb	r3, [r8, #18]
   16024:	tst	r3, #251	; 0xfb
   16028:	moveq	r2, #0
   1602c:	movne	r2, #1
   16030:	b	15e40 <close_stdout@@Base+0x2f78>
   16034:	ldr	r0, [r9, #12]
   16038:	cmp	r0, #0
   1603c:	beq	16048 <close_stdout@@Base+0x3180>
   16040:	bl	11a54 <closedir@plt>
   16044:	str	r8, [r9, #12]
   16048:	ldr	r1, [sp, #32]
   1604c:	cmp	r1, #0
   16050:	bne	1626c <close_stdout@@Base+0x33a4>
   16054:	ldr	r3, [r5, #48]	; 0x30
   16058:	tst	r3, #4
   1605c:	beq	16090 <close_stdout@@Base+0x31c8>
   16060:	ldr	r3, [r5, #36]	; 0x24
   16064:	ldr	r2, [sp, #12]
   16068:	cmp	r3, r2
   1606c:	beq	16078 <close_stdout@@Base+0x31b0>
   16070:	cmp	r7, #0
   16074:	bne	16084 <close_stdout@@Base+0x31bc>
   16078:	ldr	r3, [sp, #36]	; 0x24
   1607c:	sub	r3, r3, #1
   16080:	str	r3, [sp, #36]	; 0x24
   16084:	ldr	r0, [sp, #36]	; 0x24
   16088:	mov	r3, #0
   1608c:	strb	r3, [r0]
   16090:	ldr	r1, [sp, #44]	; 0x2c
   16094:	ldr	r2, [sp, #60]	; 0x3c
   16098:	eor	r3, r1, #1
   1609c:	tst	r2, r3
   160a0:	bne	16158 <close_stdout@@Base+0x3290>
   160a4:	cmp	r7, #0
   160a8:	beq	16444 <close_stdout@@Base+0x357c>
   160ac:	movw	r3, #10000	; 0x2710
   160b0:	cmp	r7, r3
   160b4:	bls	161c0 <close_stdout@@Base+0x32f8>
   160b8:	ldr	r3, [r5, #44]	; 0x2c
   160bc:	cmp	r3, #0
   160c0:	beq	16464 <close_stdout@@Base+0x359c>
   160c4:	mov	r0, r5
   160c8:	ldr	r1, [sp, #16]
   160cc:	mov	r2, r7
   160d0:	bl	152c0 <close_stdout@@Base+0x23f8>
   160d4:	mov	r3, r0
   160d8:	b	161d8 <close_stdout@@Base+0x3310>
   160dc:	adds	r6, r6, #0
   160e0:	ldr	r2, [sp, #52]	; 0x34
   160e4:	movne	r6, #1
   160e8:	subs	r3, r2, #3
   160ec:	rsbs	r7, r3, #0
   160f0:	adcs	r7, r7, r3
   160f4:	orrs	r3, r6, r7
   160f8:	beq	161f8 <close_stdout@@Base+0x3330>
   160fc:	tst	r0, #512	; 0x200
   16100:	bne	162fc <close_stdout@@Base+0x3434>
   16104:	mov	r3, #0
   16108:	mov	r0, r5
   1610c:	str	r3, [sp]
   16110:	add	r1, r9, #72	; 0x48
   16114:	add	r2, r9, #168	; 0xa8
   16118:	mov	r3, r4
   1611c:	bl	158fc <close_stdout@@Base+0x2a34>
   16120:	cmp	r0, #0
   16124:	bne	16318 <close_stdout@@Base+0x3450>
   16128:	mov	r3, #1
   1612c:	ldr	r0, [r5, #48]	; 0x30
   16130:	str	r3, [sp, #60]	; 0x3c
   16134:	b	15d44 <close_stdout@@Base+0x2e7c>
   16138:	tst	r3, #1
   1613c:	moveq	r2, #51456	; 0xc900
   16140:	beq	15ca4 <close_stdout@@Base+0x2ddc>
   16144:	ldr	r2, [r9, #48]	; 0x30
   16148:	cmp	r2, #0
   1614c:	movne	r2, #51456	; 0xc900
   16150:	moveq	r2, #18688	; 0x4900
   16154:	b	15ca4 <close_stdout@@Base+0x2ddc>
   16158:	ldr	r3, [sp, #52]	; 0x34
   1615c:	cmp	r3, #1
   16160:	cmpne	r7, #0
   16164:	bne	160ac <close_stdout@@Base+0x31e4>
   16168:	ldr	r3, [r9, #48]	; 0x30
   1616c:	cmp	r3, #0
   16170:	bne	16414 <close_stdout@@Base+0x354c>
   16174:	mov	r0, r5
   16178:	bl	15504 <close_stdout@@Base+0x263c>
   1617c:	adds	r0, r0, #0
   16180:	movne	r0, #1
   16184:	cmp	r0, #0
   16188:	beq	160a4 <close_stdout@@Base+0x31dc>
   1618c:	mov	r3, #7
   16190:	strh	r3, [r9, #60]	; 0x3c
   16194:	ldr	r3, [r5, #48]	; 0x30
   16198:	ldr	r0, [sp, #16]
   1619c:	orr	r3, r3, #16384	; 0x4000
   161a0:	str	r3, [r5, #48]	; 0x30
   161a4:	bl	15420 <close_stdout@@Base+0x2558>
   161a8:	b	163ec <close_stdout@@Base+0x3524>
   161ac:	bl	119c4 <dirfd@plt>
   161b0:	subs	r4, r0, #0
   161b4:	blt	164d0 <close_stdout@@Base+0x3608>
   161b8:	ldr	r0, [r5, #48]	; 0x30
   161bc:	b	15cf4 <close_stdout@@Base+0x2e2c>
   161c0:	ldr	r3, [r5, #44]	; 0x2c
   161c4:	cmp	r3, #0
   161c8:	beq	161d4 <close_stdout@@Base+0x330c>
   161cc:	cmp	r7, #1
   161d0:	bhi	160c4 <close_stdout@@Base+0x31fc>
   161d4:	ldr	r3, [sp, #16]
   161d8:	ldr	r1, [sp, #48]	; 0x30
   161dc:	mov	r0, r3
   161e0:	ldr	r2, [sp, #156]	; 0x9c
   161e4:	ldr	r3, [r1]
   161e8:	cmp	r2, r3
   161ec:	bne	16508 <close_stdout@@Base+0x3640>
   161f0:	add	sp, sp, #164	; 0xa4
   161f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161f8:	ldr	r2, [sp, #44]	; 0x2c
   161fc:	str	r2, [sp, #60]	; 0x3c
   16200:	b	15d44 <close_stdout@@Base+0x2e7c>
   16204:	tst	r0, #32
   16208:	ldr	r6, [r9, #92]	; 0x5c
   1620c:	movne	r3, #0
   16210:	moveq	r3, #2
   16214:	rsb	r6, r3, r6
   16218:	b	15d30 <close_stdout@@Base+0x2e68>
   1621c:	add	r6, r5, #56	; 0x38
   16220:	mov	r2, r9
   16224:	mov	r1, r6
   16228:	bl	15b44 <close_stdout@@Base+0x2c7c>
   1622c:	add	r1, r5, #48	; 0x30
   16230:	mov	r2, r9
   16234:	mov	r3, #0
   16238:	ldr	r0, [r5, #32]
   1623c:	bl	15554 <close_stdout@@Base+0x268c>
   16240:	mov	r1, r6
   16244:	ldr	r0, [r5, #48]	; 0x30
   16248:	mov	r2, r9
   1624c:	bl	15848 <close_stdout@@Base+0x2980>
   16250:	subs	r6, r0, #0
   16254:	bne	161b8 <close_stdout@@Base+0x32f0>
   16258:	bl	118e0 <__errno_location@plt>
   1625c:	mov	r2, #12
   16260:	mov	r3, r6
   16264:	str	r2, [r0]
   16268:	b	161d8 <close_stdout@@Base+0x3310>
   1626c:	ldr	r3, [r5, #4]
   16270:	ldr	r2, [r5, #24]
   16274:	cmp	r3, #0
   16278:	beq	162a8 <close_stdout@@Base+0x33e0>
   1627c:	ldr	r1, [r3, #24]
   16280:	add	r0, r3, #176	; 0xb0
   16284:	cmp	r1, r0
   16288:	ldrne	r0, [r3, #28]
   1628c:	str	r2, [r3, #28]
   16290:	rsbne	r1, r0, r1
   16294:	addne	r1, r2, r1
   16298:	strne	r1, [r3, #24]
   1629c:	ldr	r3, [r3, #8]
   162a0:	cmp	r3, #0
   162a4:	bne	1627c <close_stdout@@Base+0x33b4>
   162a8:	ldr	r3, [sp, #16]
   162ac:	b	162e0 <close_stdout@@Base+0x3418>
   162b0:	ldr	r1, [r3, #24]
   162b4:	add	r0, r3, #176	; 0xb0
   162b8:	cmp	r1, r0
   162bc:	ldrne	r0, [r3, #28]
   162c0:	str	r2, [r3, #28]
   162c4:	rsbne	r1, r0, r1
   162c8:	addne	r1, r2, r1
   162cc:	strne	r1, [r3, #24]
   162d0:	ldr	r1, [r3, #8]
   162d4:	cmp	r1, #0
   162d8:	ldreq	r1, [r3, #4]
   162dc:	mov	r3, r1
   162e0:	ldr	r1, [r3, #48]	; 0x30
   162e4:	cmp	r1, #0
   162e8:	bge	162b0 <close_stdout@@Base+0x33e8>
   162ec:	ldr	r3, [r5, #48]	; 0x30
   162f0:	tst	r3, #4
   162f4:	bne	16060 <close_stdout@@Base+0x3198>
   162f8:	b	16090 <close_stdout@@Base+0x31c8>
   162fc:	mov	r0, r4
   16300:	bl	19644 <fts_children@@Base+0x2384>
   16304:	subs	r4, r0, #0
   16308:	blt	16318 <close_stdout@@Base+0x3450>
   1630c:	mov	r1, #1
   16310:	bl	17c98 <fts_children@@Base+0x9d8>
   16314:	b	16104 <close_stdout@@Base+0x323c>
   16318:	tst	r6, r7
   1631c:	beq	1632c <close_stdout@@Base+0x3464>
   16320:	bl	118e0 <__errno_location@plt>
   16324:	ldr	r3, [r0]
   16328:	str	r3, [r9, #32]
   1632c:	ldrh	r3, [r9, #62]	; 0x3e
   16330:	ldr	r0, [r9, #12]
   16334:	orr	r3, r3, #1
   16338:	strh	r3, [r9, #62]	; 0x3e
   1633c:	bl	11a54 <closedir@plt>
   16340:	mov	r3, #0
   16344:	str	r3, [r9, #12]
   16348:	ldr	r3, [r5, #48]	; 0x30
   1634c:	tst	r3, #512	; 0x200
   16350:	beq	16364 <close_stdout@@Base+0x349c>
   16354:	cmp	r4, #0
   16358:	blt	16364 <close_stdout@@Base+0x349c>
   1635c:	mov	r0, r4
   16360:	bl	11a3c <close@plt>
   16364:	mov	r3, #0
   16368:	str	r3, [r9, #12]
   1636c:	str	r3, [sp, #60]	; 0x3c
   16370:	ldr	r0, [r5, #48]	; 0x30
   16374:	b	15d44 <close_stdout@@Base+0x2e7c>
   16378:	bl	118e0 <__errno_location@plt>
   1637c:	mov	r6, r0
   16380:	mov	r0, r4
   16384:	ldr	r4, [r6]
   16388:	bl	116dc <free@plt>
   1638c:	ldr	r0, [sp, #16]
   16390:	bl	15420 <close_stdout@@Base+0x2558>
   16394:	ldr	r0, [r9, #12]
   16398:	bl	11a54 <closedir@plt>
   1639c:	mov	r2, #7
   163a0:	mov	r3, #0
   163a4:	strh	r2, [r9, #60]	; 0x3c
   163a8:	str	r3, [r9, #12]
   163ac:	ldr	r2, [r5, #48]	; 0x30
   163b0:	orr	r2, r2, #16384	; 0x4000
   163b4:	str	r2, [r5, #48]	; 0x30
   163b8:	str	r4, [r6]
   163bc:	b	161d8 <close_stdout@@Base+0x3310>
   163c0:	bl	118e0 <__errno_location@plt>
   163c4:	ldr	r6, [r0]
   163c8:	mov	r5, r0
   163cc:	mov	r0, r4
   163d0:	bl	11a3c <close@plt>
   163d4:	str	r6, [r5]
   163d8:	ldr	r2, [sp, #52]	; 0x34
   163dc:	mov	r4, #0
   163e0:	str	r4, [r9, #12]
   163e4:	cmp	r2, #3
   163e8:	beq	164ec <close_stdout@@Base+0x3624>
   163ec:	mov	r3, #0
   163f0:	b	161d8 <close_stdout@@Base+0x3310>
   163f4:	ldr	r0, [r5, #32]
   163f8:	add	r1, r5, #48	; 0x30
   163fc:	mov	r2, r9
   16400:	mov	r3, #0
   16404:	bl	15554 <close_stdout@@Base+0x268c>
   16408:	strh	r0, [r9, #60]	; 0x3c
   1640c:	ldr	r0, [r5, #48]	; 0x30
   16410:	b	15cf4 <close_stdout@@Base+0x2e2c>
   16414:	ldr	r2, [r9, #4]
   16418:	mov	r0, r5
   1641c:	ldr	r1, [pc, #244]	; 16518 <close_stdout@@Base+0x3650>
   16420:	mvn	r3, #0
   16424:	add	r1, pc, r1
   16428:	str	r1, [sp]
   1642c:	add	r1, r2, #72	; 0x48
   16430:	add	r2, r2, #168	; 0xa8
   16434:	bl	158fc <close_stdout@@Base+0x2a34>
   16438:	adds	r0, r0, #0
   1643c:	movne	r0, #1
   16440:	b	16184 <close_stdout@@Base+0x32bc>
   16444:	ldr	r0, [sp, #52]	; 0x34
   16448:	cmp	r0, #3
   1644c:	ldr	r0, [sp, #16]
   16450:	moveq	r3, #6
   16454:	strheq	r3, [r9, #60]	; 0x3c
   16458:	bl	15420 <close_stdout@@Base+0x2558>
   1645c:	mov	r3, #0
   16460:	b	161d8 <close_stdout@@Base+0x3310>
   16464:	ldr	r3, [r5, #48]	; 0x30
   16468:	tst	r3, #512	; 0x200
   1646c:	beq	161d4 <close_stdout@@Base+0x330c>
   16470:	ldr	r0, [r5, #32]
   16474:	add	r1, sp, #64	; 0x40
   16478:	bl	1167c <fstatfs64@plt>
   1647c:	cmp	r0, #0
   16480:	bne	164a4 <close_stdout@@Base+0x35dc>
   16484:	ldr	r2, [sp, #64]	; 0x40
   16488:	movw	r3, #26985	; 0x6969
   1648c:	cmp	r2, r3
   16490:	beq	161c0 <close_stdout@@Base+0x32f8>
   16494:	movw	r3, #6548	; 0x1994
   16498:	movt	r3, #258	; 0x102
   1649c:	cmp	r2, r3
   164a0:	beq	161c0 <close_stdout@@Base+0x32f8>
   164a4:	ldr	r3, [pc, #112]	; 1651c <close_stdout@@Base+0x3654>
   164a8:	mov	r2, r7
   164ac:	ldr	r1, [sp, #16]
   164b0:	mov	r0, r5
   164b4:	add	r3, pc, r3
   164b8:	str	r3, [r5, #44]	; 0x2c
   164bc:	bl	152c0 <close_stdout@@Base+0x23f8>
   164c0:	mov	r3, #0
   164c4:	str	r3, [r5, #44]	; 0x2c
   164c8:	str	r0, [sp, #16]
   164cc:	b	161d4 <close_stdout@@Base+0x330c>
   164d0:	ldr	r0, [r9, #12]
   164d4:	mov	r4, #0
   164d8:	bl	11a54 <closedir@plt>
   164dc:	ldr	r2, [sp, #52]	; 0x34
   164e0:	str	r4, [r9, #12]
   164e4:	cmp	r2, #3
   164e8:	bne	163ec <close_stdout@@Base+0x3524>
   164ec:	mov	r3, #4
   164f0:	strh	r3, [r9, #60]	; 0x3c
   164f4:	bl	118e0 <__errno_location@plt>
   164f8:	mov	r3, r4
   164fc:	ldr	r2, [r0]
   16500:	str	r2, [r9, #32]
   16504:	b	161d8 <close_stdout@@Base+0x3310>
   16508:	bl	1173c <__stack_chk_fail@plt>
   1650c:			; <UNDEFINED> instruction: 0x000173bc
   16510:	andeq	r0, r0, r8, ror #2
   16514:	andeq	r5, r0, r4, asr #28
   16518:	andeq	r5, r0, r4, lsl #16
   1651c:			; <UNDEFINED> instruction: 0xffffedd4

00016520 <fts_open@@Base>:
   16520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16524:	mov	fp, r1
   16528:	bic	r1, r1, #8128	; 0x1fc0
   1652c:	sub	sp, sp, #20
   16530:	bics	r4, r1, #63	; 0x3f
   16534:	mov	r7, r0
   16538:	mov	r8, r2
   1653c:	bne	1686c <fts_open@@Base+0x34c>
   16540:	and	r3, fp, #516	; 0x204
   16544:	cmp	r3, #516	; 0x204
   16548:	beq	16890 <fts_open@@Base+0x370>
   1654c:	ands	r5, fp, #18
   16550:	beq	16854 <fts_open@@Base+0x334>
   16554:	mov	r0, #96	; 0x60
   16558:	bl	11820 <malloc@plt>
   1655c:	subs	r5, r0, #0
   16560:	beq	167a4 <fts_open@@Base+0x284>
   16564:	mov	r1, r4
   16568:	mov	r2, #96	; 0x60
   1656c:	bl	11904 <memset@plt>
   16570:	tst	fp, #2
   16574:	bicne	r3, fp, #512	; 0x200
   16578:	streq	fp, [r5, #48]	; 0x30
   1657c:	str	r8, [r5, #44]	; 0x2c
   16580:	orrne	r3, r3, #4
   16584:	strne	r3, [r5, #48]	; 0x30
   16588:	mvn	r3, #99	; 0x63
   1658c:	str	r3, [r5, #32]
   16590:	ldr	r3, [r7]
   16594:	cmp	r3, #0
   16598:	beq	16888 <fts_open@@Base+0x368>
   1659c:	mov	r6, r7
   165a0:	mov	r4, #0
   165a4:	mov	r0, r3
   165a8:	bl	118a4 <strlen@plt>
   165ac:	ldr	r3, [r6, #4]!
   165b0:	cmp	r4, r0
   165b4:	movcc	r4, r0
   165b8:	cmp	r3, #0
   165bc:	bne	165a4 <fts_open@@Base+0x84>
   165c0:	add	r2, r4, #1
   165c4:	cmp	r2, #4096	; 0x1000
   165c8:	movcc	r2, #4096	; 0x1000
   165cc:	add	r0, r5, #24
   165d0:	add	r1, r5, #36	; 0x24
   165d4:	bl	156c8 <close_stdout@@Base+0x2800>
   165d8:	subs	sl, r0, #0
   165dc:	beq	167e8 <fts_open@@Base+0x2c8>
   165e0:	ldr	r1, [r7]
   165e4:	cmp	r1, #0
   165e8:	beq	16800 <fts_open@@Base+0x2e0>
   165ec:	ldr	r1, [pc, #696]	; 168ac <fts_open@@Base+0x38c>
   165f0:	mov	r0, r5
   165f4:	mov	r2, #0
   165f8:	add	r1, pc, r1
   165fc:	bl	153b0 <close_stdout@@Base+0x24e8>
   16600:	subs	r9, r0, #0
   16604:	beq	167e0 <fts_open@@Base+0x2c0>
   16608:	mvn	r3, #0
   1660c:	str	r3, [r9, #48]	; 0x30
   16610:	ldr	r1, [r7]
   16614:	cmp	r8, #0
   16618:	ldrne	sl, [r5, #48]	; 0x30
   1661c:	ubfxne	sl, sl, #10, #1
   16620:	cmp	r1, #0
   16624:	beq	168a4 <fts_open@@Base+0x384>
   16628:	mov	r2, #0
   1662c:	and	fp, fp, #4096	; 0x1000
   16630:	add	r3, r5, #48	; 0x30
   16634:	str	fp, [sp, #4]
   16638:	str	r2, [sp, #8]
   1663c:	mov	fp, sl
   16640:	str	r3, [sp, #12]
   16644:	mov	r6, r2
   16648:	mov	r4, r2
   1664c:	mov	sl, r1
   16650:	b	16688 <fts_open@@Base+0x168>
   16654:	cmp	r8, #0
   16658:	mov	r3, #11
   1665c:	mov	r2, #2
   16660:	strh	r3, [sl, #60]	; 0x3c
   16664:	mov	r3, #0
   16668:	strd	r2, [sl, #120]	; 0x78
   1666c:	beq	16710 <fts_open@@Base+0x1f0>
   16670:	str	r4, [sl, #8]
   16674:	mov	r4, sl
   16678:	ldr	sl, [r7, #4]!
   1667c:	add	r6, r6, #1
   16680:	cmp	sl, #0
   16684:	beq	1673c <fts_open@@Base+0x21c>
   16688:	mov	r0, sl
   1668c:	bl	118a4 <strlen@plt>
   16690:	ldr	r3, [sp, #4]
   16694:	cmp	r3, #0
   16698:	mov	r2, r0
   1669c:	bne	166b8 <fts_open@@Base+0x198>
   166a0:	cmp	r0, #2
   166a4:	bls	166b8 <fts_open@@Base+0x198>
   166a8:	add	r3, sl, r0
   166ac:	ldrb	r0, [r3, #-1]
   166b0:	cmp	r0, #47	; 0x2f
   166b4:	beq	167b0 <fts_open@@Base+0x290>
   166b8:	mov	r1, sl
   166bc:	mov	r0, r5
   166c0:	bl	153b0 <close_stdout@@Base+0x24e8>
   166c4:	subs	sl, r0, #0
   166c8:	beq	167d0 <fts_open@@Base+0x2b0>
   166cc:	cmp	r4, #0
   166d0:	moveq	r3, #0
   166d4:	andne	r3, fp, #1
   166d8:	mov	r2, #0
   166dc:	cmp	r3, r2
   166e0:	str	r2, [sl, #48]	; 0x30
   166e4:	str	r9, [sl, #4]
   166e8:	add	r2, sl, #176	; 0xb0
   166ec:	str	r2, [sl, #24]
   166f0:	bne	16654 <fts_open@@Base+0x134>
   166f4:	ldr	r0, [r5, #32]
   166f8:	mov	r2, sl
   166fc:	ldr	r1, [sp, #12]
   16700:	bl	15554 <close_stdout@@Base+0x268c>
   16704:	cmp	r8, #0
   16708:	strh	r0, [sl, #60]	; 0x3c
   1670c:	bne	16670 <fts_open@@Base+0x150>
   16710:	cmp	r4, #0
   16714:	str	r8, [sl, #8]
   16718:	streq	sl, [sp, #8]
   1671c:	add	r6, r6, #1
   16720:	ldrne	r3, [sp, #8]
   16724:	moveq	r4, sl
   16728:	strne	sl, [sp, #8]
   1672c:	strne	sl, [r3, #8]
   16730:	ldr	sl, [r7, #4]!
   16734:	cmp	sl, #0
   16738:	bne	16688 <fts_open@@Base+0x168>
   1673c:	cmp	r8, #0
   16740:	cmpne	r6, #1
   16744:	bhi	1683c <fts_open@@Base+0x31c>
   16748:	ldr	r1, [pc, #352]	; 168b0 <fts_open@@Base+0x390>
   1674c:	mov	r0, r5
   16750:	mov	r2, #0
   16754:	add	r1, pc, r1
   16758:	bl	153b0 <close_stdout@@Base+0x24e8>
   1675c:	cmp	r0, #0
   16760:	str	r0, [r5]
   16764:	beq	167d0 <fts_open@@Base+0x2b0>
   16768:	str	r4, [r0, #8]
   1676c:	mov	r2, #9
   16770:	ldr	r3, [r5]
   16774:	add	r1, r5, #56	; 0x38
   16778:	strh	r2, [r3, #60]	; 0x3c
   1677c:	ldr	r0, [r5, #48]	; 0x30
   16780:	bl	15748 <close_stdout@@Base+0x2880>
   16784:	cmp	r0, #0
   16788:	beq	167d0 <fts_open@@Base+0x2b0>
   1678c:	ldr	r1, [r5, #48]	; 0x30
   16790:	tst	r1, #516	; 0x204
   16794:	beq	16808 <fts_open@@Base+0x2e8>
   16798:	add	r0, r5, #60	; 0x3c
   1679c:	mvn	r1, #0
   167a0:	bl	18fb8 <fts_children@@Base+0x1cf8>
   167a4:	mov	r0, r5
   167a8:	add	sp, sp, #20
   167ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167b0:	ldrb	r1, [r3, #-2]
   167b4:	sub	r3, r3, #1
   167b8:	cmp	r1, #47	; 0x2f
   167bc:	bne	166b8 <fts_open@@Base+0x198>
   167c0:	sub	r2, r2, #1
   167c4:	cmp	r2, #1
   167c8:	bne	167b0 <fts_open@@Base+0x290>
   167cc:	b	166b8 <fts_open@@Base+0x198>
   167d0:	mov	r0, r4
   167d4:	bl	15420 <close_stdout@@Base+0x2558>
   167d8:	mov	r0, r9
   167dc:	bl	116dc <free@plt>
   167e0:	ldr	r0, [r5, #24]
   167e4:	bl	116dc <free@plt>
   167e8:	mov	r0, r5
   167ec:	mov	r5, #0
   167f0:	bl	116dc <free@plt>
   167f4:	mov	r0, r5
   167f8:	add	sp, sp, #20
   167fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16800:	mov	r9, r1
   16804:	b	16614 <fts_open@@Base+0xf4>
   16808:	ldr	r2, [pc, #164]	; 168b4 <fts_open@@Base+0x394>
   1680c:	ldr	r0, [r5, #32]
   16810:	add	r2, pc, r2
   16814:	bl	157e0 <close_stdout@@Base+0x2918>
   16818:	mvn	r1, #0
   1681c:	cmp	r0, #0
   16820:	str	r0, [r5, #28]
   16824:	add	r0, r5, #60	; 0x3c
   16828:	ldrlt	r3, [r5, #48]	; 0x30
   1682c:	orrlt	r3, r3, #4
   16830:	strlt	r3, [r5, #48]	; 0x30
   16834:	bl	18fb8 <fts_children@@Base+0x1cf8>
   16838:	b	167a4 <fts_open@@Base+0x284>
   1683c:	mov	r1, r4
   16840:	mov	r2, r6
   16844:	mov	r0, r5
   16848:	bl	152c0 <close_stdout@@Base+0x23f8>
   1684c:	mov	r4, r0
   16850:	b	16748 <fts_open@@Base+0x228>
   16854:	bl	118e0 <__errno_location@plt>
   16858:	mov	r3, #22
   1685c:	str	r3, [r0]
   16860:	mov	r0, r5
   16864:	add	sp, sp, #20
   16868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1686c:	bl	118e0 <__errno_location@plt>
   16870:	mov	r5, #0
   16874:	mov	r3, #22
   16878:	str	r3, [r0]
   1687c:	mov	r0, r5
   16880:	add	sp, sp, #20
   16884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16888:	mov	r2, #4096	; 0x1000
   1688c:	b	165cc <fts_open@@Base+0xac>
   16890:	bl	118e0 <__errno_location@plt>
   16894:	mov	r5, r4
   16898:	mov	r3, #22
   1689c:	str	r3, [r0]
   168a0:	b	167a4 <fts_open@@Base+0x284>
   168a4:	mov	r4, r1
   168a8:	b	16748 <fts_open@@Base+0x228>
   168ac:	andeq	r4, r0, r4, lsl ip
   168b0:			; <UNDEFINED> instruction: 0x00004ab8
   168b4:	andeq	r5, r0, ip, lsl r4

000168b8 <fts_close@@Base>:
   168b8:	push	{r4, r5, r6, lr}
   168bc:	mov	r5, r0
   168c0:	ldr	r3, [r0]
   168c4:	cmp	r3, #0
   168c8:	beq	16904 <fts_close@@Base+0x4c>
   168cc:	ldr	r2, [r3, #48]	; 0x30
   168d0:	cmp	r2, #0
   168d4:	blt	169f0 <fts_close@@Base+0x138>
   168d8:	ldr	r4, [r3, #8]
   168dc:	mov	r0, r3
   168e0:	cmp	r4, #0
   168e4:	ldreq	r4, [r3, #4]
   168e8:	bl	116dc <free@plt>
   168ec:	ldr	r2, [r4, #48]	; 0x30
   168f0:	mov	r3, r4
   168f4:	cmp	r2, #0
   168f8:	bge	168d8 <fts_close@@Base+0x20>
   168fc:	mov	r0, r4
   16900:	bl	116dc <free@plt>
   16904:	ldr	r0, [r5, #4]
   16908:	cmp	r0, #0
   1690c:	beq	16914 <fts_close@@Base+0x5c>
   16910:	bl	15420 <close_stdout@@Base+0x2558>
   16914:	ldr	r0, [r5, #8]
   16918:	bl	116dc <free@plt>
   1691c:	ldr	r0, [r5, #24]
   16920:	bl	116dc <free@plt>
   16924:	ldr	r3, [r5, #48]	; 0x30
   16928:	tst	r3, #512	; 0x200
   1692c:	beq	169a4 <fts_close@@Base+0xec>
   16930:	ldr	r0, [r5, #32]
   16934:	cmp	r0, #0
   16938:	blt	16948 <fts_close@@Base+0x90>
   1693c:	bl	11a3c <close@plt>
   16940:	cmp	r0, #0
   16944:	bne	169e4 <fts_close@@Base+0x12c>
   16948:	mov	r4, #0
   1694c:	add	r0, r5, #60	; 0x3c
   16950:	bl	15458 <close_stdout@@Base+0x2590>
   16954:	ldr	r0, [r5, #52]	; 0x34
   16958:	cmp	r0, #0
   1695c:	beq	16964 <fts_close@@Base+0xac>
   16960:	bl	189c0 <fts_children@@Base+0x1700>
   16964:	ldr	r2, [r5, #48]	; 0x30
   16968:	movw	r3, #258	; 0x102
   1696c:	ldr	r0, [r5, #56]	; 0x38
   16970:	and	r3, r2, r3
   16974:	cmp	r3, #0
   16978:	beq	169dc <fts_close@@Base+0x124>
   1697c:	cmp	r0, #0
   16980:	beq	16988 <fts_close@@Base+0xd0>
   16984:	bl	189c0 <fts_children@@Base+0x1700>
   16988:	mov	r0, r5
   1698c:	bl	116dc <free@plt>
   16990:	cmp	r4, #0
   16994:	moveq	r3, r4
   16998:	bne	16a20 <fts_close@@Base+0x168>
   1699c:	mov	r0, r3
   169a0:	pop	{r4, r5, r6, pc}
   169a4:	tst	r3, #4
   169a8:	bne	16948 <fts_close@@Base+0x90>
   169ac:	ldr	r0, [r5, #28]
   169b0:	bl	119d0 <fchdir@plt>
   169b4:	cmp	r0, #0
   169b8:	bne	169f8 <fts_close@@Base+0x140>
   169bc:	ldr	r0, [r5, #28]
   169c0:	bl	11a3c <close@plt>
   169c4:	cmp	r0, #0
   169c8:	beq	16948 <fts_close@@Base+0x90>
   169cc:	bl	118e0 <__errno_location@plt>
   169d0:	mov	r6, r0
   169d4:	ldr	r4, [r6]
   169d8:	b	1694c <fts_close@@Base+0x94>
   169dc:	bl	116dc <free@plt>
   169e0:	b	16988 <fts_close@@Base+0xd0>
   169e4:	bl	118e0 <__errno_location@plt>
   169e8:	ldr	r4, [r0]
   169ec:	b	1694c <fts_close@@Base+0x94>
   169f0:	mov	r4, r3
   169f4:	b	168fc <fts_close@@Base+0x44>
   169f8:	bl	118e0 <__errno_location@plt>
   169fc:	mov	r6, r0
   16a00:	ldr	r0, [r5, #28]
   16a04:	ldr	r4, [r6]
   16a08:	bl	11a3c <close@plt>
   16a0c:	cmp	r0, #0
   16a10:	beq	1694c <fts_close@@Base+0x94>
   16a14:	cmp	r4, #0
   16a18:	bne	1694c <fts_close@@Base+0x94>
   16a1c:	b	169d4 <fts_close@@Base+0x11c>
   16a20:	bl	118e0 <__errno_location@plt>
   16a24:	mvn	r3, #0
   16a28:	str	r4, [r0]
   16a2c:	b	1699c <fts_close@@Base+0xe4>

00016a30 <fts_read@@Base>:
   16a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a34:	sub	sp, sp, #124	; 0x7c
   16a38:	ldr	r9, [pc, #2100]	; 17274 <fts_read@@Base+0x844>
   16a3c:	mov	r8, r0
   16a40:	ldr	r3, [pc, #2096]	; 17278 <fts_read@@Base+0x848>
   16a44:	add	r9, pc, r9
   16a48:	ldr	fp, [r0]
   16a4c:	ldr	sl, [r9, r3]
   16a50:	cmp	fp, #0
   16a54:	ldr	r3, [sl]
   16a58:	str	r3, [sp, #116]	; 0x74
   16a5c:	beq	16c00 <fts_read@@Base+0x1d0>
   16a60:	ldr	r3, [r0, #48]	; 0x30
   16a64:	ands	r3, r3, #16384	; 0x4000
   16a68:	bne	16c00 <fts_read@@Base+0x1d0>
   16a6c:	ldrh	r2, [fp, #64]	; 0x40
   16a70:	mov	r1, #3
   16a74:	strh	r1, [fp, #64]	; 0x40
   16a78:	cmp	r2, #1
   16a7c:	beq	16e18 <fts_read@@Base+0x3e8>
   16a80:	cmp	r2, #2
   16a84:	ldrh	r3, [fp, #60]	; 0x3c
   16a88:	beq	16b7c <fts_read@@Base+0x14c>
   16a8c:	cmp	r3, #1
   16a90:	bne	16ac0 <fts_read@@Base+0x90>
   16a94:	b	16bf4 <fts_read@@Base+0x1c4>
   16a98:	str	r6, [r8]
   16a9c:	mov	r0, fp
   16aa0:	bl	116dc <free@plt>
   16aa4:	ldr	r4, [r6, #48]	; 0x30
   16aa8:	cmp	r4, #0
   16aac:	beq	16c20 <fts_read@@Base+0x1f0>
   16ab0:	ldrh	r3, [r6, #64]	; 0x40
   16ab4:	cmp	r3, #4
   16ab8:	bne	16d1c <fts_read@@Base+0x2ec>
   16abc:	mov	fp, r6
   16ac0:	ldr	r6, [fp, #8]
   16ac4:	cmp	r6, #0
   16ac8:	bne	16a98 <fts_read@@Base+0x68>
   16acc:	ldr	r4, [fp, #4]
   16ad0:	ldr	r3, [r4, #12]
   16ad4:	cmp	r3, #0
   16ad8:	bne	17020 <fts_read@@Base+0x5f0>
   16adc:	str	r4, [r8]
   16ae0:	mov	r0, fp
   16ae4:	bl	116dc <free@plt>
   16ae8:	ldr	r3, [r4, #48]	; 0x30
   16aec:	cmn	r3, #1
   16af0:	beq	16edc <fts_read@@Base+0x4ac>
   16af4:	ldrh	r3, [r4, #60]	; 0x3c
   16af8:	cmp	r3, #11
   16afc:	beq	16d90 <fts_read@@Base+0x360>
   16b00:	ldr	r3, [r4, #40]	; 0x28
   16b04:	mov	r1, #0
   16b08:	ldr	r2, [r8, #24]
   16b0c:	strb	r1, [r2, r3]
   16b10:	ldr	r3, [r4, #48]	; 0x30
   16b14:	cmp	r3, r1
   16b18:	beq	16e84 <fts_read@@Base+0x454>
   16b1c:	ldrh	r3, [r4, #62]	; 0x3e
   16b20:	tst	r3, #2
   16b24:	beq	16e34 <fts_read@@Base+0x404>
   16b28:	ldr	r3, [r8, #48]	; 0x30
   16b2c:	tst	r3, #4
   16b30:	beq	16e98 <fts_read@@Base+0x468>
   16b34:	ldr	r0, [r4, #36]	; 0x24
   16b38:	bl	11a3c <close@plt>
   16b3c:	ldr	r3, [r4, #32]
   16b40:	cmp	r3, #0
   16b44:	movne	r3, #7
   16b48:	strhne	r3, [r4, #60]	; 0x3c
   16b4c:	bne	16b68 <fts_read@@Base+0x138>
   16b50:	mov	r3, #6
   16b54:	add	r1, r8, #56	; 0x38
   16b58:	strh	r3, [r4, #60]	; 0x3c
   16b5c:	mov	r2, r4
   16b60:	ldr	r0, [r8, #48]	; 0x30
   16b64:	bl	15b44 <close_stdout@@Base+0x2c7c>
   16b68:	ldr	r3, [r8, #48]	; 0x30
   16b6c:	tst	r3, #16384	; 0x4000
   16b70:	bne	16c00 <fts_read@@Base+0x1d0>
   16b74:	mov	r6, r4
   16b78:	b	16c04 <fts_read@@Base+0x1d4>
   16b7c:	sub	r2, r3, #12
   16b80:	cmp	r2, #1
   16b84:	bls	16eb4 <fts_read@@Base+0x484>
   16b88:	cmp	r3, #1
   16b8c:	bne	16ac0 <fts_read@@Base+0x90>
   16b90:	ldr	r3, [r8, #48]	; 0x30
   16b94:	tst	r3, #64	; 0x40
   16b98:	beq	16d94 <fts_read@@Base+0x364>
   16b9c:	ldrd	r6, [fp, #72]	; 0x48
   16ba0:	ldrd	r4, [r8, #16]
   16ba4:	cmp	r7, r5
   16ba8:	cmpeq	r6, r4
   16bac:	beq	16d94 <fts_read@@Base+0x364>
   16bb0:	ldrh	r3, [fp, #62]	; 0x3e
   16bb4:	tst	r3, #2
   16bb8:	bne	17014 <fts_read@@Base+0x5e4>
   16bbc:	ldr	r0, [r8, #4]
   16bc0:	cmp	r0, #0
   16bc4:	beq	16bd4 <fts_read@@Base+0x1a4>
   16bc8:	bl	15420 <close_stdout@@Base+0x2558>
   16bcc:	mov	r3, #0
   16bd0:	str	r3, [r8, #4]
   16bd4:	mov	r3, #6
   16bd8:	add	r1, r8, #56	; 0x38
   16bdc:	strh	r3, [fp, #60]	; 0x3c
   16be0:	mov	r2, fp
   16be4:	ldr	r0, [r8, #48]	; 0x30
   16be8:	mov	r6, fp
   16bec:	bl	15b44 <close_stdout@@Base+0x2c7c>
   16bf0:	b	16c04 <fts_read@@Base+0x1d4>
   16bf4:	cmp	r2, #4
   16bf8:	bne	16b90 <fts_read@@Base+0x160>
   16bfc:	b	16bb0 <fts_read@@Base+0x180>
   16c00:	mov	r6, #0
   16c04:	ldr	r2, [sp, #116]	; 0x74
   16c08:	mov	r0, r6
   16c0c:	ldr	r3, [sl]
   16c10:	cmp	r2, r3
   16c14:	bne	17188 <fts_read@@Base+0x758>
   16c18:	add	sp, sp, #124	; 0x7c
   16c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c20:	mov	r0, r8
   16c24:	bl	15504 <close_stdout@@Base+0x263c>
   16c28:	cmp	r0, #0
   16c2c:	bne	16f84 <fts_read@@Base+0x554>
   16c30:	ldr	r2, [r8, #48]	; 0x30
   16c34:	movw	r3, #258	; 0x102
   16c38:	ldr	r0, [r8, #56]	; 0x38
   16c3c:	and	r3, r2, r3
   16c40:	cmp	r3, #0
   16c44:	beq	16f6c <fts_read@@Base+0x53c>
   16c48:	cmp	r0, #0
   16c4c:	beq	16c54 <fts_read@@Base+0x224>
   16c50:	bl	189c0 <fts_children@@Base+0x1700>
   16c54:	ldr	r3, [r6, #52]	; 0x34
   16c58:	add	r4, r6, #176	; 0xb0
   16c5c:	add	r2, r3, #1
   16c60:	mov	r1, r4
   16c64:	str	r3, [r6, #40]	; 0x28
   16c68:	ldr	r0, [r8, #24]
   16c6c:	bl	116d0 <memmove@plt>
   16c70:	mov	r0, r4
   16c74:	mov	r1, #47	; 0x2f
   16c78:	bl	11994 <strrchr@plt>
   16c7c:	cmp	r0, #0
   16c80:	beq	16cb0 <fts_read@@Base+0x280>
   16c84:	cmp	r4, r0
   16c88:	beq	16f74 <fts_read@@Base+0x544>
   16c8c:	add	r7, r0, #1
   16c90:	mov	r0, r7
   16c94:	bl	118a4 <strlen@plt>
   16c98:	mov	r1, r7
   16c9c:	mov	r5, r0
   16ca0:	mov	r0, r4
   16ca4:	add	r2, r5, #1
   16ca8:	bl	116d0 <memmove@plt>
   16cac:	str	r5, [r6, #52]	; 0x34
   16cb0:	ldr	r3, [r8, #24]
   16cb4:	add	r1, r8, #56	; 0x38
   16cb8:	str	r3, [r6, #28]
   16cbc:	str	r3, [r6, #24]
   16cc0:	ldr	r0, [r8, #48]	; 0x30
   16cc4:	bl	15748 <close_stdout@@Base+0x2880>
   16cc8:	str	r6, [r8]
   16ccc:	ldrh	r0, [r6, #60]	; 0x3c
   16cd0:	cmp	r0, #11
   16cd4:	beq	16d74 <fts_read@@Base+0x344>
   16cd8:	cmp	r0, #1
   16cdc:	bne	16c04 <fts_read@@Base+0x1d4>
   16ce0:	ldr	r3, [r6, #48]	; 0x30
   16ce4:	add	r1, r8, #56	; 0x38
   16ce8:	ldr	r0, [r8, #48]	; 0x30
   16cec:	mov	r2, r6
   16cf0:	cmp	r3, #0
   16cf4:	ldrdeq	r4, [r6, #72]	; 0x48
   16cf8:	strdeq	r4, [r8, #16]
   16cfc:	bl	15848 <close_stdout@@Base+0x2980>
   16d00:	subs	r4, r0, #0
   16d04:	bne	16c04 <fts_read@@Base+0x1d4>
   16d08:	bl	118e0 <__errno_location@plt>
   16d0c:	mov	r6, r4
   16d10:	mov	r3, #12
   16d14:	str	r3, [r0]
   16d18:	b	16c04 <fts_read@@Base+0x1d4>
   16d1c:	cmp	r3, #2
   16d20:	beq	17050 <fts_read@@Base+0x620>
   16d24:	ldr	r0, [r6, #4]
   16d28:	mov	ip, #47	; 0x2f
   16d2c:	ldr	r2, [r8, #24]
   16d30:	add	r1, r6, #176	; 0xb0
   16d34:	ldr	r3, [r0, #40]	; 0x28
   16d38:	ldr	lr, [r0, #28]
   16d3c:	sub	r0, r3, #1
   16d40:	ldrb	lr, [lr, r0]
   16d44:	cmp	lr, ip
   16d48:	moveq	r3, r0
   16d4c:	add	r0, r2, r3
   16d50:	strb	ip, [r2, r3]
   16d54:	add	r0, r0, #1
   16d58:	ldr	r2, [r6, #52]	; 0x34
   16d5c:	add	r2, r2, #1
   16d60:	bl	116d0 <memmove@plt>
   16d64:	str	r6, [r8]
   16d68:	ldrh	r0, [r6, #60]	; 0x3c
   16d6c:	cmp	r0, #11
   16d70:	bne	16cd8 <fts_read@@Base+0x2a8>
   16d74:	ldrd	r4, [r6, #120]	; 0x78
   16d78:	cmp	r5, #0
   16d7c:	cmpeq	r4, #2
   16d80:	beq	16f98 <fts_read@@Base+0x568>
   16d84:	cmp	r5, #0
   16d88:	cmpeq	r4, #1
   16d8c:	beq	16c04 <fts_read@@Base+0x1d4>
   16d90:	bl	11a30 <abort@plt>
   16d94:	ldr	r0, [r8, #4]
   16d98:	cmp	r0, #0
   16d9c:	beq	16f10 <fts_read@@Base+0x4e0>
   16da0:	tst	r3, #8192	; 0x2000
   16da4:	bne	16efc <fts_read@@Base+0x4cc>
   16da8:	ldr	ip, [fp, #24]
   16dac:	mov	r0, r8
   16db0:	add	r1, fp, #72	; 0x48
   16db4:	add	r2, fp, #168	; 0xa8
   16db8:	mvn	r3, #0
   16dbc:	str	ip, [sp]
   16dc0:	bl	158fc <close_stdout@@Base+0x2a34>
   16dc4:	cmp	r0, #0
   16dc8:	beq	16e08 <fts_read@@Base+0x3d8>
   16dcc:	bl	118e0 <__errno_location@plt>
   16dd0:	ldrh	r3, [fp, #62]	; 0x3e
   16dd4:	orr	r3, r3, #1
   16dd8:	ldr	r2, [r0]
   16ddc:	strh	r3, [fp, #62]	; 0x3e
   16de0:	str	r2, [fp, #32]
   16de4:	ldr	r6, [r8, #4]
   16de8:	cmp	r6, #0
   16dec:	beq	16e0c <fts_read@@Base+0x3dc>
   16df0:	ldr	r3, [r6, #4]
   16df4:	ldr	r3, [r3, #24]
   16df8:	str	r3, [r6, #24]
   16dfc:	ldr	r6, [r6, #8]
   16e00:	cmp	r6, #0
   16e04:	bne	16df0 <fts_read@@Base+0x3c0>
   16e08:	ldr	r6, [r8, #4]
   16e0c:	mov	r3, #0
   16e10:	str	r3, [r8, #4]
   16e14:	b	16d24 <fts_read@@Base+0x2f4>
   16e18:	ldr	r0, [r0, #32]
   16e1c:	add	r1, r8, #48	; 0x30
   16e20:	mov	r2, fp
   16e24:	mov	r6, fp
   16e28:	bl	15554 <close_stdout@@Base+0x268c>
   16e2c:	strh	r0, [fp, #60]	; 0x3c
   16e30:	b	16c04 <fts_read@@Base+0x1d4>
   16e34:	tst	r3, #1
   16e38:	bne	16b3c <fts_read@@Base+0x10c>
   16e3c:	ldr	r2, [r4, #4]
   16e40:	mov	r0, r8
   16e44:	ldr	r1, [pc, #1072]	; 1727c <fts_read@@Base+0x84c>
   16e48:	mvn	r3, #0
   16e4c:	add	r1, pc, r1
   16e50:	str	r1, [sp]
   16e54:	add	r1, r2, #72	; 0x48
   16e58:	add	r2, r2, #168	; 0xa8
   16e5c:	bl	158fc <close_stdout@@Base+0x2a34>
   16e60:	cmp	r0, #0
   16e64:	beq	16b3c <fts_read@@Base+0x10c>
   16e68:	bl	118e0 <__errno_location@plt>
   16e6c:	ldr	r3, [r0]
   16e70:	str	r3, [r4, #32]
   16e74:	ldr	r3, [r8, #48]	; 0x30
   16e78:	orr	r3, r3, #16384	; 0x4000
   16e7c:	str	r3, [r8, #48]	; 0x30
   16e80:	b	16b3c <fts_read@@Base+0x10c>
   16e84:	mov	r0, r8
   16e88:	bl	15504 <close_stdout@@Base+0x263c>
   16e8c:	cmp	r0, #0
   16e90:	beq	16b3c <fts_read@@Base+0x10c>
   16e94:	b	16e68 <fts_read@@Base+0x438>
   16e98:	tst	r3, #512	; 0x200
   16e9c:	beq	1707c <fts_read@@Base+0x64c>
   16ea0:	mov	r0, r8
   16ea4:	ldr	r1, [r4, #36]	; 0x24
   16ea8:	mov	r2, #1
   16eac:	bl	15490 <close_stdout@@Base+0x25c8>
   16eb0:	b	16b34 <fts_read@@Base+0x104>
   16eb4:	ldr	r0, [r0, #32]
   16eb8:	add	r1, r8, #48	; 0x30
   16ebc:	mov	r2, fp
   16ec0:	mov	r3, #1
   16ec4:	bl	15554 <close_stdout@@Base+0x268c>
   16ec8:	cmp	r0, #1
   16ecc:	strh	r0, [fp, #60]	; 0x3c
   16ed0:	beq	170b8 <fts_read@@Base+0x688>
   16ed4:	mov	r6, fp
   16ed8:	b	16cc8 <fts_read@@Base+0x298>
   16edc:	mov	r0, r4
   16ee0:	bl	116dc <free@plt>
   16ee4:	bl	118e0 <__errno_location@plt>
   16ee8:	mov	r3, #0
   16eec:	mov	r6, r3
   16ef0:	str	r3, [r0]
   16ef4:	str	r3, [r8]
   16ef8:	b	16c04 <fts_read@@Base+0x1d4>
   16efc:	bic	r3, r3, #8192	; 0x2000
   16f00:	str	r3, [r8, #48]	; 0x30
   16f04:	bl	15420 <close_stdout@@Base+0x2558>
   16f08:	mov	r3, #0
   16f0c:	str	r3, [r8, #4]
   16f10:	mov	r0, r8
   16f14:	mov	r1, #3
   16f18:	bl	15c34 <close_stdout@@Base+0x2d6c>
   16f1c:	cmp	r0, #0
   16f20:	str	r0, [r8, #4]
   16f24:	movne	r6, r0
   16f28:	bne	16e0c <fts_read@@Base+0x3dc>
   16f2c:	ldr	r0, [r8, #48]	; 0x30
   16f30:	tst	r0, #16384	; 0x4000
   16f34:	bne	16c00 <fts_read@@Base+0x1d0>
   16f38:	ldr	r3, [fp, #32]
   16f3c:	cmp	r3, #0
   16f40:	beq	16f58 <fts_read@@Base+0x528>
   16f44:	ldrh	r3, [fp, #60]	; 0x3c
   16f48:	cmp	r3, #4
   16f4c:	movne	r3, #7
   16f50:	strhne	r3, [fp, #60]	; 0x3c
   16f54:	ldrne	r0, [r8, #48]	; 0x30
   16f58:	add	r1, r8, #56	; 0x38
   16f5c:	mov	r2, fp
   16f60:	bl	15b44 <close_stdout@@Base+0x2c7c>
   16f64:	mov	r6, fp
   16f68:	b	16c04 <fts_read@@Base+0x1d4>
   16f6c:	bl	116dc <free@plt>
   16f70:	b	16c54 <fts_read@@Base+0x224>
   16f74:	ldrb	r3, [r6, #177]	; 0xb1
   16f78:	cmp	r3, #0
   16f7c:	bne	16c8c <fts_read@@Base+0x25c>
   16f80:	b	16cb0 <fts_read@@Base+0x280>
   16f84:	ldr	r3, [r8, #48]	; 0x30
   16f88:	mov	r6, r4
   16f8c:	orr	r3, r3, #16384	; 0x4000
   16f90:	str	r3, [r8, #48]	; 0x30
   16f94:	b	16c04 <fts_read@@Base+0x1d4>
   16f98:	ldr	r3, [r6, #48]	; 0x30
   16f9c:	ldr	r4, [r6, #4]
   16fa0:	cmp	r3, #0
   16fa4:	ble	16fc4 <fts_read@@Base+0x594>
   16fa8:	ldr	r3, [r4, #56]	; 0x38
   16fac:	cmp	r3, #0
   16fb0:	bne	16fc4 <fts_read@@Base+0x594>
   16fb4:	ldr	r3, [r8, #48]	; 0x30
   16fb8:	and	r3, r3, #24
   16fbc:	cmp	r3, #24
   16fc0:	beq	17140 <fts_read@@Base+0x710>
   16fc4:	mov	r3, #0
   16fc8:	ldr	r0, [r8, #32]
   16fcc:	add	r1, r8, #48	; 0x30
   16fd0:	mov	r2, r6
   16fd4:	bl	15554 <close_stdout@@Base+0x268c>
   16fd8:	ldr	r3, [r6, #88]	; 0x58
   16fdc:	and	r3, r3, #61440	; 0xf000
   16fe0:	cmp	r3, #16384	; 0x4000
   16fe4:	strh	r0, [r6, #60]	; 0x3c
   16fe8:	bne	16cd8 <fts_read@@Base+0x2a8>
   16fec:	ldr	r3, [r6, #48]	; 0x30
   16ff0:	cmp	r3, #0
   16ff4:	beq	16cd8 <fts_read@@Base+0x2a8>
   16ff8:	ldr	r3, [r4, #56]	; 0x38
   16ffc:	cmp	r3, #0
   17000:	beq	16cd8 <fts_read@@Base+0x2a8>
   17004:	sub	r3, r3, #1
   17008:	str	r3, [r4, #56]	; 0x38
   1700c:	ldrh	r0, [r6, #60]	; 0x3c
   17010:	b	16cd8 <fts_read@@Base+0x2a8>
   17014:	ldr	r0, [fp, #36]	; 0x24
   17018:	bl	11a3c <close@plt>
   1701c:	b	16bbc <fts_read@@Base+0x18c>
   17020:	str	r4, [r8]
   17024:	mov	r0, r8
   17028:	ldr	r3, [r4, #40]	; 0x28
   1702c:	mov	r1, #3
   17030:	ldr	r2, [r8, #24]
   17034:	strb	r6, [r2, r3]
   17038:	bl	15c34 <close_stdout@@Base+0x2d6c>
   1703c:	subs	r6, r0, #0
   17040:	beq	170f4 <fts_read@@Base+0x6c4>
   17044:	mov	r0, fp
   17048:	bl	116dc <free@plt>
   1704c:	b	16d24 <fts_read@@Base+0x2f4>
   17050:	ldr	r0, [r8, #32]
   17054:	add	r1, r8, #48	; 0x30
   17058:	mov	r2, r6
   1705c:	mov	r3, #1
   17060:	bl	15554 <close_stdout@@Base+0x268c>
   17064:	cmp	r0, #1
   17068:	strh	r0, [r6, #60]	; 0x3c
   1706c:	beq	17108 <fts_read@@Base+0x6d8>
   17070:	mov	r3, #3
   17074:	strh	r3, [r6, #64]	; 0x40
   17078:	b	16d24 <fts_read@@Base+0x2f4>
   1707c:	ldr	r0, [r4, #36]	; 0x24
   17080:	bl	119d0 <fchdir@plt>
   17084:	cmp	r0, #0
   17088:	beq	16b34 <fts_read@@Base+0x104>
   1708c:	bl	118e0 <__errno_location@plt>
   17090:	ldr	r5, [r0]
   17094:	mov	r6, r0
   17098:	ldr	r0, [r4, #36]	; 0x24
   1709c:	bl	11a3c <close@plt>
   170a0:	str	r5, [r6]
   170a4:	str	r5, [r4, #32]
   170a8:	ldr	r3, [r8, #48]	; 0x30
   170ac:	orr	r3, r3, #16384	; 0x4000
   170b0:	str	r3, [r8, #48]	; 0x30
   170b4:	b	16b34 <fts_read@@Base+0x104>
   170b8:	ldr	r1, [r8, #48]	; 0x30
   170bc:	tst	r1, #4
   170c0:	bne	16ed4 <fts_read@@Base+0x4a4>
   170c4:	ldr	r2, [pc, #436]	; 17280 <fts_read@@Base+0x850>
   170c8:	ldr	r0, [r8, #32]
   170cc:	add	r2, pc, r2
   170d0:	bl	157e0 <close_stdout@@Base+0x2918>
   170d4:	cmp	r0, #0
   170d8:	str	r0, [fp, #36]	; 0x24
   170dc:	blt	1718c <fts_read@@Base+0x75c>
   170e0:	ldrh	r3, [fp, #62]	; 0x3e
   170e4:	mov	r6, fp
   170e8:	orr	r3, r3, #2
   170ec:	strh	r3, [fp, #62]	; 0x3e
   170f0:	b	16cc8 <fts_read@@Base+0x298>
   170f4:	ldr	r3, [r8, #48]	; 0x30
   170f8:	tst	r3, #16384	; 0x4000
   170fc:	bne	16c00 <fts_read@@Base+0x1d0>
   17100:	ldr	r4, [fp, #4]
   17104:	b	16adc <fts_read@@Base+0xac>
   17108:	ldr	r1, [r8, #48]	; 0x30
   1710c:	tst	r1, #4
   17110:	bne	17070 <fts_read@@Base+0x640>
   17114:	ldr	r2, [pc, #360]	; 17284 <fts_read@@Base+0x854>
   17118:	ldr	r0, [r8, #32]
   1711c:	add	r2, pc, r2
   17120:	bl	157e0 <close_stdout@@Base+0x2918>
   17124:	cmp	r0, #0
   17128:	str	r0, [r6, #36]	; 0x24
   1712c:	blt	171a8 <fts_read@@Base+0x778>
   17130:	ldrh	r3, [r6, #62]	; 0x3e
   17134:	orr	r3, r3, #2
   17138:	strh	r3, [r6, #62]	; 0x3e
   1713c:	b	17070 <fts_read@@Base+0x640>
   17140:	ldr	r7, [r4, #44]	; 0x2c
   17144:	ldr	r3, [r7, #48]	; 0x30
   17148:	ldr	r5, [r7, #52]	; 0x34
   1714c:	tst	r3, #512	; 0x200
   17150:	beq	16fc4 <fts_read@@Base+0x594>
   17154:	cmp	r5, #0
   17158:	beq	1722c <fts_read@@Base+0x7fc>
   1715c:	ldrd	r2, [r4, #72]	; 0x48
   17160:	add	r1, sp, #120	; 0x78
   17164:	mov	r0, r5
   17168:	strd	r2, [r1, #-112]!	; 0xffffff90
   1716c:	bl	18528 <fts_children@@Base+0x1268>
   17170:	subs	fp, r0, #0
   17174:	beq	171c0 <fts_read@@Base+0x790>
   17178:	ldrb	r7, [fp, #8]
   1717c:	cmp	r7, #0
   17180:	bne	1700c <fts_read@@Base+0x5dc>
   17184:	b	16fc4 <fts_read@@Base+0x594>
   17188:	bl	1173c <__stack_chk_fail@plt>
   1718c:	bl	118e0 <__errno_location@plt>
   17190:	mov	r6, fp
   17194:	mov	r3, #7
   17198:	ldr	r2, [r0]
   1719c:	strh	r3, [fp, #60]	; 0x3c
   171a0:	str	r2, [fp, #32]
   171a4:	b	16cc8 <fts_read@@Base+0x298>
   171a8:	bl	118e0 <__errno_location@plt>
   171ac:	mov	r3, #7
   171b0:	ldr	r2, [r0]
   171b4:	strh	r3, [r6, #60]	; 0x3c
   171b8:	str	r2, [r6, #32]
   171bc:	b	17070 <fts_read@@Base+0x640>
   171c0:	mov	r0, #16
   171c4:	bl	11820 <malloc@plt>
   171c8:	subs	r9, r0, #0
   171cc:	beq	16fc4 <fts_read@@Base+0x594>
   171d0:	ldr	r0, [r7, #32]
   171d4:	add	r1, sp, #24
   171d8:	bl	1167c <fstatfs64@plt>
   171dc:	cmp	r0, #0
   171e0:	movne	r7, fp
   171e4:	bne	17200 <fts_read@@Base+0x7d0>
   171e8:	ldr	r7, [sp, #24]
   171ec:	movw	r3, #18803	; 0x4973
   171f0:	movt	r3, #21093	; 0x5265
   171f4:	subs	r3, r7, r3
   171f8:	rsbs	r7, r3, #0
   171fc:	adcs	r7, r7, r3
   17200:	strb	r7, [r9, #8]
   17204:	mov	r0, r5
   17208:	ldrd	r2, [r4, #72]	; 0x48
   1720c:	mov	r1, r9
   17210:	strd	r2, [r9]
   17214:	bl	18e04 <fts_children@@Base+0x1b44>
   17218:	cmp	r0, #0
   1721c:	beq	17268 <fts_read@@Base+0x838>
   17220:	cmp	r9, r0
   17224:	beq	1717c <fts_read@@Base+0x74c>
   17228:	b	16d90 <fts_read@@Base+0x360>
   1722c:	ldr	ip, [pc, #84]	; 17288 <fts_read@@Base+0x858>
   17230:	mov	r1, r5
   17234:	ldr	r2, [pc, #80]	; 1728c <fts_read@@Base+0x85c>
   17238:	mov	r0, #13
   1723c:	ldr	r3, [pc, #76]	; 17290 <fts_read@@Base+0x860>
   17240:	ldr	ip, [r9, ip]
   17244:	add	r2, pc, r2
   17248:	add	r3, pc, r3
   1724c:	str	ip, [sp]
   17250:	bl	187dc <fts_children@@Base+0x151c>
   17254:	cmp	r0, #0
   17258:	mov	r5, r0
   1725c:	str	r0, [r7, #52]	; 0x34
   17260:	bne	1715c <fts_read@@Base+0x72c>
   17264:	b	16fc4 <fts_read@@Base+0x594>
   17268:	mov	r0, r9
   1726c:	bl	116dc <free@plt>
   17270:	b	16fc4 <fts_read@@Base+0x594>
   17274:			; <UNDEFINED> instruction: 0x000165b4
   17278:	andeq	r0, r0, r8, ror #2
   1727c:	ldrdeq	r4, [r0], -ip
   17280:	andeq	r4, r0, r0, ror #22
   17284:	andeq	r4, r0, r0, lsl fp
   17288:	andeq	r0, r0, r4, ror #2
   1728c:			; <UNDEFINED> instruction: 0xffffe00c
   17290:			; <UNDEFINED> instruction: 0xffffe024

00017294 <fts_set@@Base>:
   17294:	cmp	r2, #4
   17298:	push	{r3, lr}
   1729c:	movls	r3, #0
   172a0:	strhls	r2, [r1, #64]	; 0x40
   172a4:	bls	172b8 <fts_set@@Base+0x24>
   172a8:	bl	118e0 <__errno_location@plt>
   172ac:	mov	r3, #1
   172b0:	mov	r2, #22
   172b4:	str	r2, [r0]
   172b8:	mov	r0, r3
   172bc:	pop	{r3, pc}

000172c0 <fts_children@@Base>:
   172c0:	push	{r4, r5, r6, r7, r8, lr}
   172c4:	bics	r7, r1, #8192	; 0x2000
   172c8:	mov	r5, r1
   172cc:	mov	r4, r0
   172d0:	bne	173cc <fts_children@@Base+0x10c>
   172d4:	bl	118e0 <__errno_location@plt>
   172d8:	ldr	r6, [r4]
   172dc:	str	r7, [r0]
   172e0:	mov	r8, r0
   172e4:	ldr	r3, [r4, #48]	; 0x30
   172e8:	ands	r3, r3, #16384	; 0x4000
   172ec:	bne	173e4 <fts_children@@Base+0x124>
   172f0:	ldrh	r2, [r6, #60]	; 0x3c
   172f4:	cmp	r2, #9
   172f8:	ldreq	r3, [r6, #8]
   172fc:	beq	1736c <fts_children@@Base+0xac>
   17300:	cmp	r2, #1
   17304:	bne	1736c <fts_children@@Base+0xac>
   17308:	ldr	r0, [r4, #4]
   1730c:	cmp	r0, #0
   17310:	beq	17318 <fts_children@@Base+0x58>
   17314:	bl	15420 <close_stdout@@Base+0x2558>
   17318:	cmp	r5, #8192	; 0x2000
   1731c:	ldreq	r3, [r4, #48]	; 0x30
   17320:	moveq	r5, #2
   17324:	movne	r5, #1
   17328:	orreq	r3, r3, #8192	; 0x2000
   1732c:	streq	r3, [r4, #48]	; 0x30
   17330:	ldr	r3, [r6, #48]	; 0x30
   17334:	cmp	r3, #0
   17338:	bne	17358 <fts_children@@Base+0x98>
   1733c:	ldr	r3, [r6, #24]
   17340:	ldrb	r3, [r3]
   17344:	cmp	r3, #47	; 0x2f
   17348:	beq	17358 <fts_children@@Base+0x98>
   1734c:	ldr	r1, [r4, #48]	; 0x30
   17350:	ands	r6, r1, #4
   17354:	beq	17374 <fts_children@@Base+0xb4>
   17358:	mov	r1, r5
   1735c:	mov	r0, r4
   17360:	bl	15c34 <close_stdout@@Base+0x2d6c>
   17364:	mov	r3, r0
   17368:	str	r0, [r4, #4]
   1736c:	mov	r0, r3
   17370:	pop	{r4, r5, r6, r7, r8, pc}
   17374:	ldr	r2, [pc, #164]	; 17420 <fts_children@@Base+0x160>
   17378:	ldr	r0, [r4, #32]
   1737c:	add	r2, pc, r2
   17380:	bl	157e0 <close_stdout@@Base+0x2918>
   17384:	subs	r7, r0, #0
   17388:	strlt	r6, [r4, #4]
   1738c:	movlt	r3, r6
   17390:	blt	1736c <fts_children@@Base+0xac>
   17394:	mov	r1, r5
   17398:	mov	r0, r4
   1739c:	bl	15c34 <close_stdout@@Base+0x2d6c>
   173a0:	ldr	r3, [r4, #48]	; 0x30
   173a4:	ands	r5, r3, #512	; 0x200
   173a8:	str	r0, [r4, #4]
   173ac:	beq	173ec <fts_children@@Base+0x12c>
   173b0:	mov	r1, r7
   173b4:	mov	r0, r4
   173b8:	mov	r2, #1
   173bc:	bl	15490 <close_stdout@@Base+0x25c8>
   173c0:	ldr	r3, [r4, #4]
   173c4:	mov	r0, r3
   173c8:	pop	{r4, r5, r6, r7, r8, pc}
   173cc:	bl	118e0 <__errno_location@plt>
   173d0:	mov	r3, #0
   173d4:	mov	r2, #22
   173d8:	str	r2, [r0]
   173dc:	mov	r0, r3
   173e0:	pop	{r4, r5, r6, r7, r8, pc}
   173e4:	mov	r3, r7
   173e8:	b	1736c <fts_children@@Base+0xac>
   173ec:	mov	r0, r7
   173f0:	bl	119d0 <fchdir@plt>
   173f4:	cmp	r0, #0
   173f8:	bne	17408 <fts_children@@Base+0x148>
   173fc:	mov	r0, r7
   17400:	bl	11a3c <close@plt>
   17404:	b	173c0 <fts_children@@Base+0x100>
   17408:	ldr	r4, [r8]
   1740c:	mov	r0, r7
   17410:	bl	11a3c <close@plt>
   17414:	mov	r3, r5
   17418:	str	r4, [r8]
   1741c:	b	1736c <fts_children@@Base+0xac>
   17420:			; <UNDEFINED> instruction: 0x000048b0
   17424:	push	{r3, r4, r5, lr}
   17428:	subs	r4, r0, #0
   1742c:	beq	17478 <fts_children@@Base+0x1b8>
   17430:	cmp	r4, #10
   17434:	beq	17440 <fts_children@@Base+0x180>
   17438:	mov	r0, r4
   1743c:	pop	{r3, r4, r5, pc}
   17440:	ldr	r5, [r1]
   17444:	ldr	r1, [pc, #64]	; 1748c <fts_children@@Base+0x1cc>
   17448:	mov	r0, r5
   1744c:	add	r1, pc, r1
   17450:	bl	116ac <strcmp@plt>
   17454:	cmp	r0, #0
   17458:	bne	17438 <fts_children@@Base+0x178>
   1745c:	mov	r0, r5
   17460:	mvn	r4, #0
   17464:	bl	119e8 <freecon@plt>
   17468:	bl	118e0 <__errno_location@plt>
   1746c:	mov	r3, #61	; 0x3d
   17470:	str	r3, [r0]
   17474:	b	17438 <fts_children@@Base+0x178>
   17478:	bl	118e0 <__errno_location@plt>
   1747c:	mvn	r4, #0
   17480:	mov	r3, #95	; 0x5f
   17484:	str	r3, [r0]
   17488:	b	17438 <fts_children@@Base+0x178>
   1748c:	andeq	r4, r0, r4, ror #15
   17490:	push	{r4, lr}
   17494:	mov	r4, r1
   17498:	bl	11898 <getfilecon@plt>
   1749c:	mov	r1, r4
   174a0:	pop	{r4, lr}
   174a4:	b	17424 <fts_children@@Base+0x164>
   174a8:	push	{r4, lr}
   174ac:	mov	r4, r1
   174b0:	bl	11814 <lgetfilecon@plt>
   174b4:	mov	r1, r4
   174b8:	pop	{r4, lr}
   174bc:	b	17424 <fts_children@@Base+0x164>
   174c0:	push	{r4, lr}
   174c4:	mov	r4, r1
   174c8:	bl	11760 <fgetfilecon@plt>
   174cc:	mov	r1, r4
   174d0:	pop	{r4, lr}
   174d4:	b	17424 <fts_children@@Base+0x164>
   174d8:	ldr	r3, [pc, #480]	; 176c0 <fts_children@@Base+0x400>
   174dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174e0:	mov	r4, r0
   174e4:	ldr	r0, [pc, #472]	; 176c4 <fts_children@@Base+0x404>
   174e8:	add	r3, pc, r3
   174ec:	sub	sp, sp, #4048	; 0xfd0
   174f0:	cmn	r4, #100	; 0x64
   174f4:	sub	sp, sp, #12
   174f8:	mov	r6, r1
   174fc:	ldr	r5, [r3, r0]
   17500:	mov	r7, r2
   17504:	ldr	r3, [r5]
   17508:	str	r3, [sp, #4052]	; 0xfd4
   1750c:	beq	17608 <fts_children@@Base+0x348>
   17510:	ldrb	r3, [r1]
   17514:	cmp	r3, #47	; 0x2f
   17518:	beq	17608 <fts_children@@Base+0x348>
   1751c:	add	sl, sp, #24
   17520:	mov	r1, r4
   17524:	sub	r8, sl, #4
   17528:	mov	r2, r6
   1752c:	mov	r0, r8
   17530:	bl	19d88 <fts_children@@Base+0x2ac8>
   17534:	subs	r9, r0, #0
   17538:	beq	175b0 <fts_children@@Base+0x2f0>
   1753c:	mov	r1, r7
   17540:	bl	17490 <fts_children@@Base+0x1d0>
   17544:	mov	fp, r0
   17548:	bl	118e0 <__errno_location@plt>
   1754c:	cmp	r9, r8
   17550:	mov	r3, r0
   17554:	ldr	r8, [r0]
   17558:	beq	1756c <fts_children@@Base+0x2ac>
   1755c:	mov	r0, r9
   17560:	str	r3, [sp, #4]
   17564:	bl	116dc <free@plt>
   17568:	ldr	r3, [sp, #4]
   1756c:	cmn	fp, #1
   17570:	beq	17598 <fts_children@@Base+0x2d8>
   17574:	mov	r3, fp
   17578:	ldr	r2, [sp, #4052]	; 0xfd4
   1757c:	mov	r0, r3
   17580:	ldr	r3, [r5]
   17584:	cmp	r2, r3
   17588:	bne	176a4 <fts_children@@Base+0x3e4>
   1758c:	add	sp, sp, #4048	; 0xfd0
   17590:	add	sp, sp, #12
   17594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17598:	cmp	r8, #20
   1759c:	beq	175b0 <fts_children@@Base+0x2f0>
   175a0:	sub	r2, r8, #1
   175a4:	cmp	r8, #13
   175a8:	cmpne	r2, #1
   175ac:	bhi	17668 <fts_children@@Base+0x3a8>
   175b0:	sub	sl, sl, #12
   175b4:	mov	r0, sl
   175b8:	bl	195a4 <fts_children@@Base+0x22e4>
   175bc:	cmp	r0, #0
   175c0:	bne	176a8 <fts_children@@Base+0x3e8>
   175c4:	cmp	r4, #0
   175c8:	blt	175d8 <fts_children@@Base+0x318>
   175cc:	ldr	r3, [sp, #12]
   175d0:	cmp	r3, r4
   175d4:	beq	17688 <fts_children@@Base+0x3c8>
   175d8:	mov	r0, r4
   175dc:	bl	119d0 <fchdir@plt>
   175e0:	subs	r8, r0, #0
   175e4:	beq	1761c <fts_children@@Base+0x35c>
   175e8:	bl	118e0 <__errno_location@plt>
   175ec:	ldr	r6, [r0]
   175f0:	mov	r4, r0
   175f4:	mov	r0, sl
   175f8:	bl	19620 <fts_children@@Base+0x2360>
   175fc:	mvn	r3, #0
   17600:	str	r6, [r4]
   17604:	b	17578 <fts_children@@Base+0x2b8>
   17608:	mov	r0, r6
   1760c:	mov	r1, r7
   17610:	bl	17490 <fts_children@@Base+0x1d0>
   17614:	mov	r3, r0
   17618:	b	17578 <fts_children@@Base+0x2b8>
   1761c:	mov	r0, r6
   17620:	mov	r1, r7
   17624:	bl	17490 <fts_children@@Base+0x1d0>
   17628:	cmn	r0, #1
   1762c:	mov	r4, r0
   17630:	beq	1767c <fts_children@@Base+0x3bc>
   17634:	mov	r0, sl
   17638:	bl	19604 <fts_children@@Base+0x2344>
   1763c:	cmp	r0, #0
   17640:	bne	176b4 <fts_children@@Base+0x3f4>
   17644:	mov	r0, sl
   17648:	bl	19620 <fts_children@@Base+0x2360>
   1764c:	cmp	r8, #0
   17650:	moveq	r3, r4
   17654:	beq	17578 <fts_children@@Base+0x2b8>
   17658:	bl	118e0 <__errno_location@plt>
   1765c:	mov	r3, r4
   17660:	str	r8, [r0]
   17664:	b	17578 <fts_children@@Base+0x2b8>
   17668:	cmp	r8, #38	; 0x26
   1766c:	cmpne	r8, #95	; 0x5f
   17670:	strne	r8, [r3]
   17674:	bne	17574 <fts_children@@Base+0x2b4>
   17678:	b	175b0 <fts_children@@Base+0x2f0>
   1767c:	bl	118e0 <__errno_location@plt>
   17680:	ldr	r8, [r0]
   17684:	b	17634 <fts_children@@Base+0x374>
   17688:	mov	r0, sl
   1768c:	bl	19620 <fts_children@@Base+0x2360>
   17690:	bl	118e0 <__errno_location@plt>
   17694:	mov	r2, #9
   17698:	mvn	r3, #0
   1769c:	str	r2, [r0]
   176a0:	b	17578 <fts_children@@Base+0x2b8>
   176a4:	bl	1173c <__stack_chk_fail@plt>
   176a8:	bl	118e0 <__errno_location@plt>
   176ac:	ldr	r0, [r0]
   176b0:	bl	19498 <fts_children@@Base+0x21d8>
   176b4:	bl	118e0 <__errno_location@plt>
   176b8:	ldr	r0, [r0]
   176bc:	bl	194e8 <fts_children@@Base+0x2228>
   176c0:	andeq	r5, r1, r0, lsl fp
   176c4:	andeq	r0, r0, r8, ror #2
   176c8:	ldr	r3, [pc, #480]	; 178b0 <fts_children@@Base+0x5f0>
   176cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176d0:	mov	r4, r0
   176d4:	ldr	r0, [pc, #472]	; 178b4 <fts_children@@Base+0x5f4>
   176d8:	add	r3, pc, r3
   176dc:	sub	sp, sp, #4048	; 0xfd0
   176e0:	cmn	r4, #100	; 0x64
   176e4:	sub	sp, sp, #12
   176e8:	mov	r6, r1
   176ec:	ldr	r5, [r3, r0]
   176f0:	mov	r7, r2
   176f4:	ldr	r3, [r5]
   176f8:	str	r3, [sp, #4052]	; 0xfd4
   176fc:	beq	177f8 <fts_children@@Base+0x538>
   17700:	ldrb	r3, [r1]
   17704:	cmp	r3, #47	; 0x2f
   17708:	beq	177f8 <fts_children@@Base+0x538>
   1770c:	add	sl, sp, #24
   17710:	mov	r1, r4
   17714:	sub	r8, sl, #4
   17718:	mov	r2, r6
   1771c:	mov	r0, r8
   17720:	bl	19d88 <fts_children@@Base+0x2ac8>
   17724:	subs	r9, r0, #0
   17728:	beq	177a0 <fts_children@@Base+0x4e0>
   1772c:	mov	r1, r7
   17730:	bl	174a8 <fts_children@@Base+0x1e8>
   17734:	mov	fp, r0
   17738:	bl	118e0 <__errno_location@plt>
   1773c:	cmp	r9, r8
   17740:	mov	r3, r0
   17744:	ldr	r8, [r0]
   17748:	beq	1775c <fts_children@@Base+0x49c>
   1774c:	mov	r0, r9
   17750:	str	r3, [sp, #4]
   17754:	bl	116dc <free@plt>
   17758:	ldr	r3, [sp, #4]
   1775c:	cmn	fp, #1
   17760:	beq	17788 <fts_children@@Base+0x4c8>
   17764:	mov	r3, fp
   17768:	ldr	r2, [sp, #4052]	; 0xfd4
   1776c:	mov	r0, r3
   17770:	ldr	r3, [r5]
   17774:	cmp	r2, r3
   17778:	bne	17894 <fts_children@@Base+0x5d4>
   1777c:	add	sp, sp, #4048	; 0xfd0
   17780:	add	sp, sp, #12
   17784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17788:	cmp	r8, #20
   1778c:	beq	177a0 <fts_children@@Base+0x4e0>
   17790:	sub	r2, r8, #1
   17794:	cmp	r8, #13
   17798:	cmpne	r2, #1
   1779c:	bhi	17858 <fts_children@@Base+0x598>
   177a0:	sub	sl, sl, #12
   177a4:	mov	r0, sl
   177a8:	bl	195a4 <fts_children@@Base+0x22e4>
   177ac:	cmp	r0, #0
   177b0:	bne	17898 <fts_children@@Base+0x5d8>
   177b4:	cmp	r4, #0
   177b8:	blt	177c8 <fts_children@@Base+0x508>
   177bc:	ldr	r3, [sp, #12]
   177c0:	cmp	r3, r4
   177c4:	beq	17878 <fts_children@@Base+0x5b8>
   177c8:	mov	r0, r4
   177cc:	bl	119d0 <fchdir@plt>
   177d0:	subs	r8, r0, #0
   177d4:	beq	1780c <fts_children@@Base+0x54c>
   177d8:	bl	118e0 <__errno_location@plt>
   177dc:	ldr	r6, [r0]
   177e0:	mov	r4, r0
   177e4:	mov	r0, sl
   177e8:	bl	19620 <fts_children@@Base+0x2360>
   177ec:	mvn	r3, #0
   177f0:	str	r6, [r4]
   177f4:	b	17768 <fts_children@@Base+0x4a8>
   177f8:	mov	r0, r6
   177fc:	mov	r1, r7
   17800:	bl	174a8 <fts_children@@Base+0x1e8>
   17804:	mov	r3, r0
   17808:	b	17768 <fts_children@@Base+0x4a8>
   1780c:	mov	r0, r6
   17810:	mov	r1, r7
   17814:	bl	174a8 <fts_children@@Base+0x1e8>
   17818:	cmn	r0, #1
   1781c:	mov	r4, r0
   17820:	beq	1786c <fts_children@@Base+0x5ac>
   17824:	mov	r0, sl
   17828:	bl	19604 <fts_children@@Base+0x2344>
   1782c:	cmp	r0, #0
   17830:	bne	178a4 <fts_children@@Base+0x5e4>
   17834:	mov	r0, sl
   17838:	bl	19620 <fts_children@@Base+0x2360>
   1783c:	cmp	r8, #0
   17840:	moveq	r3, r4
   17844:	beq	17768 <fts_children@@Base+0x4a8>
   17848:	bl	118e0 <__errno_location@plt>
   1784c:	mov	r3, r4
   17850:	str	r8, [r0]
   17854:	b	17768 <fts_children@@Base+0x4a8>
   17858:	cmp	r8, #38	; 0x26
   1785c:	cmpne	r8, #95	; 0x5f
   17860:	strne	r8, [r3]
   17864:	bne	17764 <fts_children@@Base+0x4a4>
   17868:	b	177a0 <fts_children@@Base+0x4e0>
   1786c:	bl	118e0 <__errno_location@plt>
   17870:	ldr	r8, [r0]
   17874:	b	17824 <fts_children@@Base+0x564>
   17878:	mov	r0, sl
   1787c:	bl	19620 <fts_children@@Base+0x2360>
   17880:	bl	118e0 <__errno_location@plt>
   17884:	mov	r2, #9
   17888:	mvn	r3, #0
   1788c:	str	r2, [r0]
   17890:	b	17768 <fts_children@@Base+0x4a8>
   17894:	bl	1173c <__stack_chk_fail@plt>
   17898:	bl	118e0 <__errno_location@plt>
   1789c:	ldr	r0, [r0]
   178a0:	bl	19498 <fts_children@@Base+0x21d8>
   178a4:	bl	118e0 <__errno_location@plt>
   178a8:	ldr	r0, [r0]
   178ac:	bl	194e8 <fts_children@@Base+0x2228>
   178b0:	andeq	r5, r1, r0, lsr #18
   178b4:	andeq	r0, r0, r8, ror #2
   178b8:	ldr	r3, [pc, #480]	; 17aa0 <fts_children@@Base+0x7e0>
   178bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178c0:	mov	r4, r0
   178c4:	ldr	r0, [pc, #472]	; 17aa4 <fts_children@@Base+0x7e4>
   178c8:	add	r3, pc, r3
   178cc:	sub	sp, sp, #4048	; 0xfd0
   178d0:	cmn	r4, #100	; 0x64
   178d4:	sub	sp, sp, #12
   178d8:	mov	r6, r1
   178dc:	ldr	r5, [r3, r0]
   178e0:	mov	r7, r2
   178e4:	ldr	r3, [r5]
   178e8:	str	r3, [sp, #4052]	; 0xfd4
   178ec:	beq	179e8 <fts_children@@Base+0x728>
   178f0:	ldrb	r3, [r1]
   178f4:	cmp	r3, #47	; 0x2f
   178f8:	beq	179e8 <fts_children@@Base+0x728>
   178fc:	add	sl, sp, #24
   17900:	mov	r1, r4
   17904:	sub	r8, sl, #4
   17908:	mov	r2, r6
   1790c:	mov	r0, r8
   17910:	bl	19d88 <fts_children@@Base+0x2ac8>
   17914:	subs	r9, r0, #0
   17918:	beq	17990 <fts_children@@Base+0x6d0>
   1791c:	mov	r1, r7
   17920:	bl	1194c <setfilecon@plt>
   17924:	mov	fp, r0
   17928:	bl	118e0 <__errno_location@plt>
   1792c:	cmp	r9, r8
   17930:	mov	r3, r0
   17934:	ldr	r8, [r0]
   17938:	beq	1794c <fts_children@@Base+0x68c>
   1793c:	mov	r0, r9
   17940:	str	r3, [sp, #4]
   17944:	bl	116dc <free@plt>
   17948:	ldr	r3, [sp, #4]
   1794c:	cmn	fp, #1
   17950:	beq	17978 <fts_children@@Base+0x6b8>
   17954:	mov	r3, fp
   17958:	ldr	r2, [sp, #4052]	; 0xfd4
   1795c:	mov	r0, r3
   17960:	ldr	r3, [r5]
   17964:	cmp	r2, r3
   17968:	bne	17a84 <fts_children@@Base+0x7c4>
   1796c:	add	sp, sp, #4048	; 0xfd0
   17970:	add	sp, sp, #12
   17974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17978:	cmp	r8, #20
   1797c:	beq	17990 <fts_children@@Base+0x6d0>
   17980:	sub	r2, r8, #1
   17984:	cmp	r8, #13
   17988:	cmpne	r2, #1
   1798c:	bhi	17a48 <fts_children@@Base+0x788>
   17990:	sub	sl, sl, #12
   17994:	mov	r0, sl
   17998:	bl	195a4 <fts_children@@Base+0x22e4>
   1799c:	cmp	r0, #0
   179a0:	bne	17a88 <fts_children@@Base+0x7c8>
   179a4:	cmp	r4, #0
   179a8:	blt	179b8 <fts_children@@Base+0x6f8>
   179ac:	ldr	r3, [sp, #12]
   179b0:	cmp	r3, r4
   179b4:	beq	17a68 <fts_children@@Base+0x7a8>
   179b8:	mov	r0, r4
   179bc:	bl	119d0 <fchdir@plt>
   179c0:	subs	r8, r0, #0
   179c4:	beq	179fc <fts_children@@Base+0x73c>
   179c8:	bl	118e0 <__errno_location@plt>
   179cc:	ldr	r6, [r0]
   179d0:	mov	r4, r0
   179d4:	mov	r0, sl
   179d8:	bl	19620 <fts_children@@Base+0x2360>
   179dc:	mvn	r3, #0
   179e0:	str	r6, [r4]
   179e4:	b	17958 <fts_children@@Base+0x698>
   179e8:	mov	r0, r6
   179ec:	mov	r1, r7
   179f0:	bl	1194c <setfilecon@plt>
   179f4:	mov	r3, r0
   179f8:	b	17958 <fts_children@@Base+0x698>
   179fc:	mov	r0, r6
   17a00:	mov	r1, r7
   17a04:	bl	1194c <setfilecon@plt>
   17a08:	cmn	r0, #1
   17a0c:	mov	r4, r0
   17a10:	beq	17a5c <fts_children@@Base+0x79c>
   17a14:	mov	r0, sl
   17a18:	bl	19604 <fts_children@@Base+0x2344>
   17a1c:	cmp	r0, #0
   17a20:	bne	17a94 <fts_children@@Base+0x7d4>
   17a24:	mov	r0, sl
   17a28:	bl	19620 <fts_children@@Base+0x2360>
   17a2c:	cmp	r8, #0
   17a30:	moveq	r3, r4
   17a34:	beq	17958 <fts_children@@Base+0x698>
   17a38:	bl	118e0 <__errno_location@plt>
   17a3c:	mov	r3, r4
   17a40:	str	r8, [r0]
   17a44:	b	17958 <fts_children@@Base+0x698>
   17a48:	cmp	r8, #38	; 0x26
   17a4c:	cmpne	r8, #95	; 0x5f
   17a50:	strne	r8, [r3]
   17a54:	bne	17954 <fts_children@@Base+0x694>
   17a58:	b	17990 <fts_children@@Base+0x6d0>
   17a5c:	bl	118e0 <__errno_location@plt>
   17a60:	ldr	r8, [r0]
   17a64:	b	17a14 <fts_children@@Base+0x754>
   17a68:	mov	r0, sl
   17a6c:	bl	19620 <fts_children@@Base+0x2360>
   17a70:	bl	118e0 <__errno_location@plt>
   17a74:	mov	r2, #9
   17a78:	mvn	r3, #0
   17a7c:	str	r2, [r0]
   17a80:	b	17958 <fts_children@@Base+0x698>
   17a84:	bl	1173c <__stack_chk_fail@plt>
   17a88:	bl	118e0 <__errno_location@plt>
   17a8c:	ldr	r0, [r0]
   17a90:	bl	19498 <fts_children@@Base+0x21d8>
   17a94:	bl	118e0 <__errno_location@plt>
   17a98:	ldr	r0, [r0]
   17a9c:	bl	194e8 <fts_children@@Base+0x2228>
   17aa0:	andeq	r5, r1, r0, lsr r7
   17aa4:	andeq	r0, r0, r8, ror #2
   17aa8:	ldr	r3, [pc, #480]	; 17c90 <fts_children@@Base+0x9d0>
   17aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ab0:	mov	r4, r0
   17ab4:	ldr	r0, [pc, #472]	; 17c94 <fts_children@@Base+0x9d4>
   17ab8:	add	r3, pc, r3
   17abc:	sub	sp, sp, #4048	; 0xfd0
   17ac0:	cmn	r4, #100	; 0x64
   17ac4:	sub	sp, sp, #12
   17ac8:	mov	r6, r1
   17acc:	ldr	r5, [r3, r0]
   17ad0:	mov	r7, r2
   17ad4:	ldr	r3, [r5]
   17ad8:	str	r3, [sp, #4052]	; 0xfd4
   17adc:	beq	17bd8 <fts_children@@Base+0x918>
   17ae0:	ldrb	r3, [r1]
   17ae4:	cmp	r3, #47	; 0x2f
   17ae8:	beq	17bd8 <fts_children@@Base+0x918>
   17aec:	add	sl, sp, #24
   17af0:	mov	r1, r4
   17af4:	sub	r8, sl, #4
   17af8:	mov	r2, r6
   17afc:	mov	r0, r8
   17b00:	bl	19d88 <fts_children@@Base+0x2ac8>
   17b04:	subs	r9, r0, #0
   17b08:	beq	17b80 <fts_children@@Base+0x8c0>
   17b0c:	mov	r1, r7
   17b10:	bl	116c4 <lsetfilecon@plt>
   17b14:	mov	fp, r0
   17b18:	bl	118e0 <__errno_location@plt>
   17b1c:	cmp	r9, r8
   17b20:	mov	r3, r0
   17b24:	ldr	r8, [r0]
   17b28:	beq	17b3c <fts_children@@Base+0x87c>
   17b2c:	mov	r0, r9
   17b30:	str	r3, [sp, #4]
   17b34:	bl	116dc <free@plt>
   17b38:	ldr	r3, [sp, #4]
   17b3c:	cmn	fp, #1
   17b40:	beq	17b68 <fts_children@@Base+0x8a8>
   17b44:	mov	r3, fp
   17b48:	ldr	r2, [sp, #4052]	; 0xfd4
   17b4c:	mov	r0, r3
   17b50:	ldr	r3, [r5]
   17b54:	cmp	r2, r3
   17b58:	bne	17c74 <fts_children@@Base+0x9b4>
   17b5c:	add	sp, sp, #4048	; 0xfd0
   17b60:	add	sp, sp, #12
   17b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b68:	cmp	r8, #20
   17b6c:	beq	17b80 <fts_children@@Base+0x8c0>
   17b70:	sub	r2, r8, #1
   17b74:	cmp	r8, #13
   17b78:	cmpne	r2, #1
   17b7c:	bhi	17c38 <fts_children@@Base+0x978>
   17b80:	sub	sl, sl, #12
   17b84:	mov	r0, sl
   17b88:	bl	195a4 <fts_children@@Base+0x22e4>
   17b8c:	cmp	r0, #0
   17b90:	bne	17c78 <fts_children@@Base+0x9b8>
   17b94:	cmp	r4, #0
   17b98:	blt	17ba8 <fts_children@@Base+0x8e8>
   17b9c:	ldr	r3, [sp, #12]
   17ba0:	cmp	r3, r4
   17ba4:	beq	17c58 <fts_children@@Base+0x998>
   17ba8:	mov	r0, r4
   17bac:	bl	119d0 <fchdir@plt>
   17bb0:	subs	r8, r0, #0
   17bb4:	beq	17bec <fts_children@@Base+0x92c>
   17bb8:	bl	118e0 <__errno_location@plt>
   17bbc:	ldr	r6, [r0]
   17bc0:	mov	r4, r0
   17bc4:	mov	r0, sl
   17bc8:	bl	19620 <fts_children@@Base+0x2360>
   17bcc:	mvn	r3, #0
   17bd0:	str	r6, [r4]
   17bd4:	b	17b48 <fts_children@@Base+0x888>
   17bd8:	mov	r0, r6
   17bdc:	mov	r1, r7
   17be0:	bl	116c4 <lsetfilecon@plt>
   17be4:	mov	r3, r0
   17be8:	b	17b48 <fts_children@@Base+0x888>
   17bec:	mov	r0, r6
   17bf0:	mov	r1, r7
   17bf4:	bl	116c4 <lsetfilecon@plt>
   17bf8:	cmn	r0, #1
   17bfc:	mov	r4, r0
   17c00:	beq	17c4c <fts_children@@Base+0x98c>
   17c04:	mov	r0, sl
   17c08:	bl	19604 <fts_children@@Base+0x2344>
   17c0c:	cmp	r0, #0
   17c10:	bne	17c84 <fts_children@@Base+0x9c4>
   17c14:	mov	r0, sl
   17c18:	bl	19620 <fts_children@@Base+0x2360>
   17c1c:	cmp	r8, #0
   17c20:	moveq	r3, r4
   17c24:	beq	17b48 <fts_children@@Base+0x888>
   17c28:	bl	118e0 <__errno_location@plt>
   17c2c:	mov	r3, r4
   17c30:	str	r8, [r0]
   17c34:	b	17b48 <fts_children@@Base+0x888>
   17c38:	cmp	r8, #38	; 0x26
   17c3c:	cmpne	r8, #95	; 0x5f
   17c40:	strne	r8, [r3]
   17c44:	bne	17b44 <fts_children@@Base+0x884>
   17c48:	b	17b80 <fts_children@@Base+0x8c0>
   17c4c:	bl	118e0 <__errno_location@plt>
   17c50:	ldr	r8, [r0]
   17c54:	b	17c04 <fts_children@@Base+0x944>
   17c58:	mov	r0, sl
   17c5c:	bl	19620 <fts_children@@Base+0x2360>
   17c60:	bl	118e0 <__errno_location@plt>
   17c64:	mov	r2, #9
   17c68:	mvn	r3, #0
   17c6c:	str	r2, [r0]
   17c70:	b	17b48 <fts_children@@Base+0x888>
   17c74:	bl	1173c <__stack_chk_fail@plt>
   17c78:	bl	118e0 <__errno_location@plt>
   17c7c:	ldr	r0, [r0]
   17c80:	bl	19498 <fts_children@@Base+0x21d8>
   17c84:	bl	118e0 <__errno_location@plt>
   17c88:	ldr	r0, [r0]
   17c8c:	bl	194e8 <fts_children@@Base+0x2228>
   17c90:	andeq	r5, r1, r0, asr #10
   17c94:	andeq	r0, r0, r8, ror #2
   17c98:	push	{r3, r4, r5, lr}
   17c9c:	mov	r2, #0
   17ca0:	mov	r4, r1
   17ca4:	mov	r1, #1
   17ca8:	mov	r5, r0
   17cac:	bl	19b0c <fts_children@@Base+0x284c>
   17cb0:	cmp	r0, #0
   17cb4:	blt	17cf4 <fts_children@@Base+0xa34>
   17cb8:	cmp	r4, #0
   17cbc:	orrne	r2, r0, #1
   17cc0:	biceq	r2, r0, #1
   17cc4:	cmp	r2, r0
   17cc8:	beq	17cec <fts_children@@Base+0xa2c>
   17ccc:	mov	r0, r5
   17cd0:	mov	r1, #2
   17cd4:	bl	19b0c <fts_children@@Base+0x284c>
   17cd8:	cmn	r0, #1
   17cdc:	movne	r0, #0
   17ce0:	moveq	r0, #1
   17ce4:	rsb	r0, r0, #0
   17ce8:	pop	{r3, r4, r5, pc}
   17cec:	mov	r0, #0
   17cf0:	pop	{r3, r4, r5, pc}
   17cf4:	mvn	r0, #0
   17cf8:	pop	{r3, r4, r5, pc}
   17cfc:	movw	r1, #1030	; 0x406
   17d00:	mov	r2, #0
   17d04:	b	19b0c <fts_children@@Base+0x284c>
   17d08:	push	{r4, r5, r6, lr}
   17d0c:	mov	r4, r0
   17d10:	bl	117d8 <__fpending@plt>
   17d14:	mov	r6, r0
   17d18:	mov	r0, r4
   17d1c:	ldr	r4, [r4]
   17d20:	bl	19a6c <fts_children@@Base+0x27ac>
   17d24:	and	r4, r4, #32
   17d28:	adds	r5, r0, #0
   17d2c:	movne	r5, #1
   17d30:	cmp	r4, #0
   17d34:	bne	17d54 <fts_children@@Base+0xa94>
   17d38:	cmp	r5, #0
   17d3c:	beq	17d4c <fts_children@@Base+0xa8c>
   17d40:	cmp	r6, #0
   17d44:	beq	17d70 <fts_children@@Base+0xab0>
   17d48:	mvn	r4, #0
   17d4c:	mov	r0, r4
   17d50:	pop	{r4, r5, r6, pc}
   17d54:	cmp	r5, #0
   17d58:	bne	17d48 <fts_children@@Base+0xa88>
   17d5c:	bl	118e0 <__errno_location@plt>
   17d60:	mvn	r4, #0
   17d64:	str	r5, [r0]
   17d68:	mov	r0, r4
   17d6c:	pop	{r4, r5, r6, pc}
   17d70:	bl	118e0 <__errno_location@plt>
   17d74:	ldr	r4, [r0]
   17d78:	subs	r4, r4, #9
   17d7c:	mvnne	r4, #0
   17d80:	mov	r0, r4
   17d84:	pop	{r4, r5, r6, pc}
   17d88:	mov	r2, #0
   17d8c:	mov	r3, #0
   17d90:	movw	r1, #62998	; 0xf616
   17d94:	strd	r2, [r0, #16]
   17d98:	movt	r1, #149	; 0x95
   17d9c:	str	r1, [r0, #24]
   17da0:	bx	lr
   17da4:	push	{r3, r4, r5, r6, r7, lr}
   17da8:	movw	r3, #62998	; 0xf616
   17dac:	ldr	r2, [r0, #24]
   17db0:	movt	r3, #149	; 0x95
   17db4:	mov	ip, r0
   17db8:	cmp	r2, r3
   17dbc:	bne	17e50 <fts_children@@Base+0xb90>
   17dc0:	ldrd	r6, [r0, #16]
   17dc4:	orrs	r0, r6, r7
   17dc8:	beq	17e0c <fts_children@@Base+0xb4c>
   17dcc:	ldrd	r4, [r1, #96]	; 0x60
   17dd0:	ldrd	r2, [ip]
   17dd4:	cmp	r5, r3
   17dd8:	cmpeq	r4, r2
   17ddc:	beq	17e38 <fts_children@@Base+0xb78>
   17de0:	adds	r2, r6, #1
   17de4:	adc	r3, r7, #0
   17de8:	and	r6, r6, r2
   17dec:	and	r7, r7, r3
   17df0:	strd	r2, [ip, #16]
   17df4:	orrs	r0, r6, r7
   17df8:	bne	17e30 <fts_children@@Base+0xb70>
   17dfc:	orrs	r0, r2, r3
   17e00:	bne	17e18 <fts_children@@Base+0xb58>
   17e04:	mov	r0, #1
   17e08:	pop	{r3, r4, r5, r6, r7, pc}
   17e0c:	mov	r2, #1
   17e10:	mov	r3, #0
   17e14:	strd	r2, [ip, #16]
   17e18:	ldrd	r2, [r1]
   17e1c:	mov	r0, #0
   17e20:	strd	r2, [ip, #8]
   17e24:	ldrd	r2, [r1, #96]	; 0x60
   17e28:	strd	r2, [ip]
   17e2c:	pop	{r3, r4, r5, r6, r7, pc}
   17e30:	mov	r0, #0
   17e34:	pop	{r3, r4, r5, r6, r7, pc}
   17e38:	ldrd	r4, [r1]
   17e3c:	ldrd	r2, [ip, #8]
   17e40:	cmp	r5, r3
   17e44:	cmpeq	r4, r2
   17e48:	bne	17de0 <fts_children@@Base+0xb20>
   17e4c:	b	17e04 <fts_children@@Base+0xb44>
   17e50:	ldr	r0, [pc, #24]	; 17e70 <fts_children@@Base+0xbb0>
   17e54:	mov	r2, #60	; 0x3c
   17e58:	ldr	r1, [pc, #20]	; 17e74 <fts_children@@Base+0xbb4>
   17e5c:	ldr	r3, [pc, #20]	; 17e78 <fts_children@@Base+0xbb8>
   17e60:	add	r0, pc, r0
   17e64:	add	r1, pc, r1
   17e68:	add	r3, pc, r3
   17e6c:	bl	11a60 <__assert_fail@plt>
   17e70:	andeq	r3, r0, r8, ror #27
   17e74:	strdeq	r3, [r0], -ip
   17e78:	ldrdeq	r3, [r0], -r4
   17e7c:	push	{r1, r2, r3}
   17e80:	ldr	r3, [pc, #88]	; 17ee0 <fts_children@@Base+0xc20>
   17e84:	ldr	r2, [pc, #88]	; 17ee4 <fts_children@@Base+0xc24>
   17e88:	add	r3, pc, r3
   17e8c:	push	{r4, lr}
   17e90:	sub	sp, sp, #12
   17e94:	ldr	r4, [r3, r2]
   17e98:	ldr	r1, [sp, #20]
   17e9c:	ldr	r3, [r4]
   17ea0:	ands	r2, r1, #64	; 0x40
   17ea4:	ldrne	r2, [sp, #24]
   17ea8:	str	r3, [sp, #4]
   17eac:	addne	r3, sp, #24
   17eb0:	strne	r3, [sp]
   17eb4:	bl	117fc <open64@plt>
   17eb8:	bl	19650 <fts_children@@Base+0x2390>
   17ebc:	ldr	r2, [sp, #4]
   17ec0:	ldr	r3, [r4]
   17ec4:	cmp	r2, r3
   17ec8:	bne	17edc <fts_children@@Base+0xc1c>
   17ecc:	add	sp, sp, #12
   17ed0:	pop	{r4, lr}
   17ed4:	add	sp, sp, #12
   17ed8:	bx	lr
   17edc:	bl	1173c <__stack_chk_fail@plt>
   17ee0:	andeq	r5, r1, r0, ror r1
   17ee4:	andeq	r0, r0, r8, ror #2
   17ee8:	cmp	r0, #9
   17eec:	push	{r4, r5, r6, r7, r8, lr}
   17ef0:	bhi	17f84 <fts_children@@Base+0xcc4>
   17ef4:	mov	r7, #11
   17ef8:	movw	r8, #43691	; 0xaaab
   17efc:	movt	r8, #43690	; 0xaaaa
   17f00:	cmp	r7, #9
   17f04:	bls	17f7c <fts_children@@Base+0xcbc>
   17f08:	umull	r2, r3, r8, r7
   17f0c:	lsr	r3, r3, #1
   17f10:	add	r3, r3, r3, lsl #1
   17f14:	cmp	r7, r3
   17f18:	beq	17f68 <fts_children@@Base+0xca8>
   17f1c:	mov	r6, #16
   17f20:	mov	r5, #9
   17f24:	mov	r4, #3
   17f28:	b	17f38 <fts_children@@Base+0xc78>
   17f2c:	bl	1a0d4 <fts_children@@Base+0x2e14>
   17f30:	cmp	r1, #0
   17f34:	beq	17f68 <fts_children@@Base+0xca8>
   17f38:	add	r5, r5, r6
   17f3c:	add	r4, r4, #2
   17f40:	cmp	r5, r7
   17f44:	mov	r0, r7
   17f48:	add	r6, r6, #8
   17f4c:	mov	r1, r4
   17f50:	bcc	17f2c <fts_children@@Base+0xc6c>
   17f54:	mov	r1, r4
   17f58:	mov	r0, r7
   17f5c:	bl	1a0d4 <fts_children@@Base+0x2e14>
   17f60:	cmp	r1, #0
   17f64:	bne	17f74 <fts_children@@Base+0xcb4>
   17f68:	add	r7, r7, #2
   17f6c:	cmn	r7, #1
   17f70:	bne	17f00 <fts_children@@Base+0xc40>
   17f74:	mov	r0, r7
   17f78:	pop	{r4, r5, r6, r7, r8, pc}
   17f7c:	mov	r4, #3
   17f80:	b	17f54 <fts_children@@Base+0xc94>
   17f84:	orr	r7, r0, #1
   17f88:	cmn	r7, #1
   17f8c:	bne	17ef8 <fts_children@@Base+0xc38>
   17f90:	b	17f74 <fts_children@@Base+0xcb4>
   17f94:	push	{r3, lr}
   17f98:	ror	r0, r0, #3
   17f9c:	bl	1a0d4 <fts_children@@Base+0x2e14>
   17fa0:	mov	r0, r1
   17fa4:	pop	{r3, pc}
   17fa8:	subs	r3, r1, r0
   17fac:	rsbs	r0, r3, #0
   17fb0:	adcs	r0, r0, r3
   17fb4:	bx	lr
   17fb8:	push	{r4, lr}
   17fbc:	mov	r4, r0
   17fc0:	ldr	r3, [r4, #24]
   17fc4:	mov	r0, r1
   17fc8:	ldr	r1, [r4, #8]
   17fcc:	blx	r3
   17fd0:	ldr	r3, [r4, #8]
   17fd4:	cmp	r0, r3
   17fd8:	bcs	17fe8 <fts_children@@Base+0xd28>
   17fdc:	ldr	r3, [r4]
   17fe0:	add	r0, r3, r0, lsl #3
   17fe4:	pop	{r4, pc}
   17fe8:	bl	11a30 <abort@plt>
   17fec:	push	{r4, r5, r6, r7, r8, lr}
   17ff0:	mov	r7, r2
   17ff4:	mov	r8, r3
   17ff8:	mov	r6, r0
   17ffc:	mov	r5, r1
   18000:	bl	17fb8 <fts_children@@Base+0xcf8>
   18004:	str	r0, [r7]
   18008:	mov	r4, r0
   1800c:	ldr	r2, [r0]
   18010:	cmp	r2, #0
   18014:	beq	180a8 <fts_children@@Base+0xde8>
   18018:	cmp	r5, r2
   1801c:	beq	1803c <fts_children@@Base+0xd7c>
   18020:	mov	r1, r2
   18024:	ldr	r3, [r6, #28]
   18028:	mov	r0, r5
   1802c:	blx	r3
   18030:	cmp	r0, #0
   18034:	beq	1809c <fts_children@@Base+0xddc>
   18038:	ldr	r2, [r4]
   1803c:	cmp	r8, #0
   18040:	beq	1806c <fts_children@@Base+0xdac>
   18044:	ldr	r3, [r4, #4]
   18048:	cmp	r3, #0
   1804c:	streq	r3, [r4]
   18050:	ldmne	r3, {r0, r1}
   18054:	movne	ip, #0
   18058:	stmne	r4, {r0, r1}
   1805c:	strne	ip, [r3]
   18060:	ldrne	r1, [r6, #36]	; 0x24
   18064:	strne	r1, [r3, #4]
   18068:	strne	r3, [r6, #36]	; 0x24
   1806c:	mov	r0, r2
   18070:	pop	{r4, r5, r6, r7, r8, pc}
   18074:	ldr	r2, [ip]
   18078:	cmp	r2, r5
   1807c:	beq	180bc <fts_children@@Base+0xdfc>
   18080:	mov	r1, r2
   18084:	mov	r0, r5
   18088:	ldr	r2, [r6, #28]
   1808c:	blx	r2
   18090:	cmp	r0, #0
   18094:	bne	180b4 <fts_children@@Base+0xdf4>
   18098:	ldr	r4, [r4, #4]
   1809c:	ldr	ip, [r4, #4]
   180a0:	cmp	ip, #0
   180a4:	bne	18074 <fts_children@@Base+0xdb4>
   180a8:	mov	r2, #0
   180ac:	mov	r0, r2
   180b0:	pop	{r4, r5, r6, r7, r8, pc}
   180b4:	ldr	ip, [r4, #4]
   180b8:	ldr	r2, [ip]
   180bc:	cmp	r8, #0
   180c0:	beq	1806c <fts_children@@Base+0xdac>
   180c4:	ldr	r1, [ip, #4]
   180c8:	mov	r3, #0
   180cc:	mov	r0, r2
   180d0:	str	r1, [r4, #4]
   180d4:	str	r3, [ip]
   180d8:	ldr	r3, [r6, #36]	; 0x24
   180dc:	str	r3, [ip, #4]
   180e0:	str	ip, [r6, #36]	; 0x24
   180e4:	pop	{r4, r5, r6, r7, r8, pc}
   180e8:	ldr	r1, [pc, #176]	; 181a0 <fts_children@@Base+0xee0>
   180ec:	mov	r2, r0
   180f0:	ldr	r3, [r0]
   180f4:	add	r1, pc, r1
   180f8:	cmp	r3, r1
   180fc:	beq	1818c <fts_children@@Base+0xecc>
   18100:	vldr	s15, [r3, #8]
   18104:	vldr	s14, [pc, #136]	; 18194 <fts_children@@Base+0xed4>
   18108:	vcmpe.f32	s15, s14
   1810c:	vmrs	APSR_nzcv, fpscr
   18110:	ble	18178 <fts_children@@Base+0xeb8>
   18114:	vldr	s13, [pc, #124]	; 18198 <fts_children@@Base+0xed8>
   18118:	vcmpe.f32	s15, s13
   1811c:	vmrs	APSR_nzcv, fpscr
   18120:	bpl	18178 <fts_children@@Base+0xeb8>
   18124:	vldr	s13, [pc, #112]	; 1819c <fts_children@@Base+0xedc>
   18128:	vldr	s12, [r3, #12]
   1812c:	vcmpe.f32	s12, s13
   18130:	vmrs	APSR_nzcv, fpscr
   18134:	ble	18178 <fts_children@@Base+0xeb8>
   18138:	vldr	s13, [r3]
   1813c:	vcmpe.f32	s13, #0.0
   18140:	vmrs	APSR_nzcv, fpscr
   18144:	blt	18178 <fts_children@@Base+0xeb8>
   18148:	vadd.f32	s14, s13, s14
   1814c:	vldr	s12, [r3, #4]
   18150:	vcmpe.f32	s14, s12
   18154:	vmrs	APSR_nzcv, fpscr
   18158:	bpl	18178 <fts_children@@Base+0xeb8>
   1815c:	vmov.f32	s13, #112	; 0x3f800000  1.0
   18160:	vcmpe.f32	s12, s13
   18164:	vmrs	APSR_nzcv, fpscr
   18168:	bhi	18178 <fts_children@@Base+0xeb8>
   1816c:	vcmpe.f32	s15, s14
   18170:	vmrs	APSR_nzcv, fpscr
   18174:	bgt	1818c <fts_children@@Base+0xecc>
   18178:	ldr	r3, [pc, #36]	; 181a4 <fts_children@@Base+0xee4>
   1817c:	mov	r0, #0
   18180:	add	r3, pc, r3
   18184:	str	r3, [r2]
   18188:	bx	lr
   1818c:	mov	r0, #1
   18190:	bx	lr
   18194:	stclcc	12, cr12, [ip, #820]	; 0x334
   18198:	svccc	0x00666666
   1819c:	svccc	0x008ccccd
   181a0:	andeq	r3, r0, r0, lsl #23
   181a4:	strdeq	r3, [r0], -r4
   181a8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181ac:	mov	r8, r1
   181b0:	ldr	r6, [r1]
   181b4:	mov	r5, r0
   181b8:	ldr	r3, [r1, #4]
   181bc:	mov	sl, r2
   181c0:	cmp	r6, r3
   181c4:	addcc	r6, r6, #8
   181c8:	movcc	r9, #0
   181cc:	bcs	18274 <fts_children@@Base+0xfb4>
   181d0:	ldr	fp, [r6, #-8]
   181d4:	mov	r7, r6
   181d8:	cmp	fp, #0
   181dc:	beq	18268 <fts_children@@Base+0xfa8>
   181e0:	ldr	r4, [r6, #-4]
   181e4:	cmp	r4, #0
   181e8:	bne	18208 <fts_children@@Base+0xf48>
   181ec:	b	18258 <fts_children@@Base+0xf98>
   181f0:	ldr	r2, [r0, #4]
   181f4:	cmp	r3, #0
   181f8:	str	r2, [r4, #4]
   181fc:	str	r4, [r0, #4]
   18200:	mov	r4, r3
   18204:	beq	18254 <fts_children@@Base+0xf94>
   18208:	ldr	fp, [r4]
   1820c:	mov	r0, r5
   18210:	mov	r1, fp
   18214:	bl	17fb8 <fts_children@@Base+0xcf8>
   18218:	ldr	r3, [r4, #4]
   1821c:	ldr	r2, [r0]
   18220:	cmp	r2, #0
   18224:	bne	181f0 <fts_children@@Base+0xf30>
   18228:	str	fp, [r0]
   1822c:	cmp	r3, #0
   18230:	ldr	r1, [r5, #12]
   18234:	add	r1, r1, #1
   18238:	str	r1, [r5, #12]
   1823c:	str	r2, [r4]
   18240:	ldr	r2, [r5, #36]	; 0x24
   18244:	str	r2, [r4, #4]
   18248:	str	r4, [r5, #36]	; 0x24
   1824c:	mov	r4, r3
   18250:	bne	18208 <fts_children@@Base+0xf48>
   18254:	ldr	fp, [r6, #-8]
   18258:	cmp	sl, #0
   1825c:	str	r9, [r6, #-4]
   18260:	beq	1827c <fts_children@@Base+0xfbc>
   18264:	ldr	r3, [r8, #4]
   18268:	cmp	r3, r7
   1826c:	add	r6, r6, #8
   18270:	bhi	181d0 <fts_children@@Base+0xf10>
   18274:	mov	r0, #1
   18278:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1827c:	mov	r0, r5
   18280:	mov	r1, fp
   18284:	bl	17fb8 <fts_children@@Base+0xcf8>
   18288:	ldr	r3, [r0]
   1828c:	mov	r4, r0
   18290:	cmp	r3, #0
   18294:	beq	182e0 <fts_children@@Base+0x1020>
   18298:	ldr	r0, [r5, #36]	; 0x24
   1829c:	cmp	r0, #0
   182a0:	beq	182f4 <fts_children@@Base+0x1034>
   182a4:	ldr	r2, [r0, #4]
   182a8:	str	r2, [r5, #36]	; 0x24
   182ac:	str	fp, [r0]
   182b0:	ldr	r2, [r4, #4]
   182b4:	str	r2, [r0, #4]
   182b8:	str	r0, [r4, #4]
   182bc:	str	r9, [r6, #-8]
   182c0:	add	r6, r6, #8
   182c4:	ldr	r3, [r8, #4]
   182c8:	ldr	r2, [r8, #12]
   182cc:	cmp	r3, r7
   182d0:	sub	r2, r2, #1
   182d4:	str	r2, [r8, #12]
   182d8:	bhi	181d0 <fts_children@@Base+0xf10>
   182dc:	b	18274 <fts_children@@Base+0xfb4>
   182e0:	str	fp, [r0]
   182e4:	ldr	r3, [r5, #12]
   182e8:	add	r3, r3, #1
   182ec:	str	r3, [r5, #12]
   182f0:	b	182bc <fts_children@@Base+0xffc>
   182f4:	mov	r0, #8
   182f8:	bl	11820 <malloc@plt>
   182fc:	cmp	r0, #0
   18300:	bne	182ac <fts_children@@Base+0xfec>
   18304:	mov	r0, sl
   18308:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1830c:	ldr	r0, [r0, #8]
   18310:	bx	lr
   18314:	ldr	r0, [r0, #12]
   18318:	bx	lr
   1831c:	ldr	r0, [r0, #16]
   18320:	bx	lr
   18324:	ldr	r3, [r0]
   18328:	ldr	r2, [r0, #4]
   1832c:	cmp	r3, r2
   18330:	bcs	18394 <fts_children@@Base+0x10d4>
   18334:	add	r1, r3, #8
   18338:	add	r2, r2, #7
   1833c:	rsb	r2, r1, r2
   18340:	add	r3, r3, #16
   18344:	bic	r2, r2, #7
   18348:	mov	r0, #0
   1834c:	add	ip, r3, r2
   18350:	ldr	r3, [r1, #-8]
   18354:	cmp	r3, #0
   18358:	beq	18384 <fts_children@@Base+0x10c4>
   1835c:	ldr	r3, [r1, #-4]
   18360:	mov	r2, #1
   18364:	cmp	r3, #0
   18368:	beq	1837c <fts_children@@Base+0x10bc>
   1836c:	ldr	r3, [r3, #4]
   18370:	add	r2, r2, #1
   18374:	cmp	r3, #0
   18378:	bne	1836c <fts_children@@Base+0x10ac>
   1837c:	cmp	r0, r2
   18380:	movcc	r0, r2
   18384:	add	r1, r1, #8
   18388:	cmp	r1, ip
   1838c:	bne	18350 <fts_children@@Base+0x1090>
   18390:	bx	lr
   18394:	mov	r0, #0
   18398:	bx	lr
   1839c:	push	{r4}		; (str r4, [sp, #-4]!)
   183a0:	ldr	r3, [r0]
   183a4:	ldr	r2, [r0, #4]
   183a8:	cmp	r3, r2
   183ac:	bcs	1843c <fts_children@@Base+0x117c>
   183b0:	add	r2, r2, #7
   183b4:	add	r1, r3, #8
   183b8:	rsb	ip, r1, r2
   183bc:	add	r3, r3, #16
   183c0:	bic	ip, ip, #7
   183c4:	mov	r2, #0
   183c8:	add	r4, r3, ip
   183cc:	mov	ip, r2
   183d0:	ldr	r3, [r1, #-8]
   183d4:	cmp	r3, #0
   183d8:	beq	18400 <fts_children@@Base+0x1140>
   183dc:	ldr	r3, [r1, #-4]
   183e0:	add	ip, ip, #1
   183e4:	add	r2, r2, #1
   183e8:	cmp	r3, #0
   183ec:	beq	18400 <fts_children@@Base+0x1140>
   183f0:	ldr	r3, [r3, #4]
   183f4:	add	r2, r2, #1
   183f8:	cmp	r3, #0
   183fc:	bne	183f0 <fts_children@@Base+0x1130>
   18400:	add	r1, r1, #8
   18404:	cmp	r1, r4
   18408:	bne	183d0 <fts_children@@Base+0x1110>
   1840c:	ldr	r3, [r0, #12]
   18410:	cmp	r3, ip
   18414:	movne	r0, #0
   18418:	beq	18424 <fts_children@@Base+0x1164>
   1841c:	pop	{r4}		; (ldr r4, [sp], #4)
   18420:	bx	lr
   18424:	ldr	r0, [r0, #16]
   18428:	pop	{r4}		; (ldr r4, [sp], #4)
   1842c:	subs	r3, r0, r2
   18430:	rsbs	r0, r3, #0
   18434:	adcs	r0, r0, r3
   18438:	bx	lr
   1843c:	mov	r2, #0
   18440:	mov	ip, r2
   18444:	b	1840c <fts_children@@Base+0x114c>
   18448:	push	{r4, r5, r6, r7, r8, lr}
   1844c:	sub	sp, sp, #8
   18450:	mov	r4, r1
   18454:	mov	r5, r0
   18458:	bl	1831c <fts_children@@Base+0x105c>
   1845c:	mov	r8, r0
   18460:	mov	r0, r5
   18464:	bl	1830c <fts_children@@Base+0x104c>
   18468:	mov	r6, r0
   1846c:	mov	r0, r5
   18470:	bl	18314 <fts_children@@Base+0x1054>
   18474:	mov	r7, r0
   18478:	mov	r0, r5
   1847c:	bl	18324 <fts_children@@Base+0x1064>
   18480:	ldr	r2, [pc, #144]	; 18518 <fts_children@@Base+0x1258>
   18484:	mov	r3, r8
   18488:	mov	r1, #1
   1848c:	add	r2, pc, r2
   18490:	mov	r5, r0
   18494:	mov	r0, r4
   18498:	bl	11934 <__fprintf_chk@plt>
   1849c:	ldr	r2, [pc, #120]	; 1851c <fts_children@@Base+0x125c>
   184a0:	mov	r3, r6
   184a4:	mov	r0, r4
   184a8:	mov	r1, #1
   184ac:	add	r2, pc, r2
   184b0:	bl	11934 <__fprintf_chk@plt>
   184b4:	vmov	s15, r7
   184b8:	vldr	d5, [pc, #80]	; 18510 <fts_children@@Base+0x1250>
   184bc:	ldr	r2, [pc, #92]	; 18520 <fts_children@@Base+0x1260>
   184c0:	vcvt.f64.u32	d4, s15
   184c4:	mov	r3, r7
   184c8:	vmov	s15, r6
   184cc:	mov	r0, r4
   184d0:	mov	r1, #1
   184d4:	add	r2, pc, r2
   184d8:	vmul.f64	d5, d4, d5
   184dc:	vcvt.f64.u32	d6, s15
   184e0:	vdiv.f64	d7, d5, d6
   184e4:	vstr	d7, [sp]
   184e8:	bl	11934 <__fprintf_chk@plt>
   184ec:	ldr	r2, [pc, #48]	; 18524 <fts_children@@Base+0x1264>
   184f0:	mov	r0, r4
   184f4:	mov	r3, r5
   184f8:	mov	r1, #1
   184fc:	add	r2, pc, r2
   18500:	add	sp, sp, #8
   18504:	pop	{r4, r5, r6, r7, r8, lr}
   18508:	b	11934 <__fprintf_chk@plt>
   1850c:	nop	{0}
   18510:	andeq	r0, r0, r0
   18514:	subsmi	r0, r9, r0
   18518:	strdeq	r3, [r0], -ip
   1851c:	strdeq	r3, [r0], -r4
   18520:	andeq	r3, r0, r4, ror #15
   18524:	andeq	r3, r0, r0, ror #15
   18528:	push	{r4, r5, r6, lr}
   1852c:	mov	r6, r0
   18530:	mov	r5, r1
   18534:	bl	17fb8 <fts_children@@Base+0xcf8>
   18538:	ldr	r3, [r0]
   1853c:	mov	r4, r0
   18540:	cmp	r3, #0
   18544:	bne	18550 <fts_children@@Base+0x1290>
   18548:	b	1857c <fts_children@@Base+0x12bc>
   1854c:	ldr	r3, [r4]
   18550:	cmp	r5, r3
   18554:	mov	r1, r3
   18558:	mov	r0, r5
   1855c:	beq	18588 <fts_children@@Base+0x12c8>
   18560:	ldr	r3, [r6, #28]
   18564:	blx	r3
   18568:	cmp	r0, #0
   1856c:	bne	18584 <fts_children@@Base+0x12c4>
   18570:	ldr	r4, [r4, #4]
   18574:	cmp	r4, #0
   18578:	bne	1854c <fts_children@@Base+0x128c>
   1857c:	mov	r0, #0
   18580:	pop	{r4, r5, r6, pc}
   18584:	ldr	r3, [r4]
   18588:	mov	r0, r3
   1858c:	pop	{r4, r5, r6, pc}
   18590:	push	{r3, lr}
   18594:	ldr	r3, [r0, #16]
   18598:	cmp	r3, #0
   1859c:	beq	185dc <fts_children@@Base+0x131c>
   185a0:	ldr	r3, [r0]
   185a4:	ldr	r2, [r0, #4]
   185a8:	cmp	r3, r2
   185ac:	bcs	185d8 <fts_children@@Base+0x1318>
   185b0:	ldr	r0, [r3]
   185b4:	cmp	r0, #0
   185b8:	beq	185cc <fts_children@@Base+0x130c>
   185bc:	b	185e4 <fts_children@@Base+0x1324>
   185c0:	ldr	r0, [r3]
   185c4:	cmp	r0, #0
   185c8:	popne	{r3, pc}
   185cc:	add	r3, r3, #8
   185d0:	cmp	r3, r2
   185d4:	bcc	185c0 <fts_children@@Base+0x1300>
   185d8:	bl	11a30 <abort@plt>
   185dc:	mov	r0, r3
   185e0:	pop	{r3, pc}
   185e4:	pop	{r3, pc}
   185e8:	push	{r3, r4, r5, lr}
   185ec:	mov	r5, r0
   185f0:	mov	r4, r1
   185f4:	bl	17fb8 <fts_children@@Base+0xcf8>
   185f8:	mov	r2, r0
   185fc:	mov	r3, r0
   18600:	b	1860c <fts_children@@Base+0x134c>
   18604:	cmp	r3, #0
   18608:	beq	18624 <fts_children@@Base+0x1364>
   1860c:	ldr	ip, [r3]
   18610:	ldr	r3, [r3, #4]
   18614:	cmp	ip, r4
   18618:	bne	18604 <fts_children@@Base+0x1344>
   1861c:	cmp	r3, #0
   18620:	bne	1864c <fts_children@@Base+0x138c>
   18624:	ldr	r3, [r5, #4]
   18628:	b	18638 <fts_children@@Base+0x1378>
   1862c:	ldr	r0, [r2]
   18630:	cmp	r0, #0
   18634:	popne	{r3, r4, r5, pc}
   18638:	add	r2, r2, #8
   1863c:	cmp	r2, r3
   18640:	bcc	1862c <fts_children@@Base+0x136c>
   18644:	mov	r0, #0
   18648:	pop	{r3, r4, r5, pc}
   1864c:	ldr	r0, [r3]
   18650:	pop	{r3, r4, r5, pc}
   18654:	push	{r4, r5, r6, r7}
   18658:	mov	r6, r0
   1865c:	ldm	r0, {r5, ip}
   18660:	cmp	ip, r5
   18664:	bls	186e8 <fts_children@@Base+0x1428>
   18668:	add	r5, r5, #8
   1866c:	mov	r0, #0
   18670:	ldr	r3, [r5, #-8]
   18674:	mov	r7, r5
   18678:	cmp	r3, #0
   1867c:	beq	186c8 <fts_children@@Base+0x1408>
   18680:	cmp	r2, r0
   18684:	bls	186d4 <fts_children@@Base+0x1414>
   18688:	str	r3, [r1, r0, lsl #2]
   1868c:	add	r4, r0, #1
   18690:	ldr	r3, [r5, #-4]
   18694:	add	ip, r1, r0, lsl #2
   18698:	cmp	r3, #0
   1869c:	beq	186dc <fts_children@@Base+0x141c>
   186a0:	mov	r0, r4
   186a4:	cmp	r0, r2
   186a8:	beq	186d4 <fts_children@@Base+0x1414>
   186ac:	ldr	r4, [r3]
   186b0:	add	r0, r0, #1
   186b4:	str	r4, [ip, #4]!
   186b8:	ldr	r3, [r3, #4]
   186bc:	cmp	r3, #0
   186c0:	bne	186a4 <fts_children@@Base+0x13e4>
   186c4:	ldr	ip, [r6, #4]
   186c8:	cmp	ip, r7
   186cc:	add	r5, r5, #8
   186d0:	bhi	18670 <fts_children@@Base+0x13b0>
   186d4:	pop	{r4, r5, r6, r7}
   186d8:	bx	lr
   186dc:	ldr	ip, [r6, #4]
   186e0:	mov	r0, r4
   186e4:	b	186c8 <fts_children@@Base+0x1408>
   186e8:	mov	r0, #0
   186ec:	b	186d4 <fts_children@@Base+0x1414>
   186f0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   186f4:	mov	r7, r2
   186f8:	ldr	r8, [r0]
   186fc:	mov	r9, r0
   18700:	ldr	r2, [r0, #4]
   18704:	mov	r6, r1
   18708:	mov	r5, #0
   1870c:	cmp	r2, r8
   18710:	bls	18760 <fts_children@@Base+0x14a0>
   18714:	ldr	r3, [r8]
   18718:	cmp	r3, #0
   1871c:	beq	18754 <fts_children@@Base+0x1494>
   18720:	mov	r0, r3
   18724:	mov	r4, r8
   18728:	b	18730 <fts_children@@Base+0x1470>
   1872c:	ldr	r0, [r4]
   18730:	mov	r1, r7
   18734:	blx	r6
   18738:	cmp	r0, #0
   1873c:	beq	18760 <fts_children@@Base+0x14a0>
   18740:	ldr	r4, [r4, #4]
   18744:	add	r5, r5, #1
   18748:	cmp	r4, #0
   1874c:	bne	1872c <fts_children@@Base+0x146c>
   18750:	ldr	r2, [r9, #4]
   18754:	add	r8, r8, #8
   18758:	cmp	r2, r8
   1875c:	bhi	18714 <fts_children@@Base+0x1454>
   18760:	mov	r0, r5
   18764:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18768:	push	{r3, r4, r5, lr}
   1876c:	mov	r5, r1
   18770:	ldrb	r3, [r0]
   18774:	cmp	r3, #0
   18778:	beq	187a8 <fts_children@@Base+0x14e8>
   1877c:	mov	r4, r0
   18780:	mov	r1, #0
   18784:	rsb	r0, r1, r1, lsl #5
   18788:	mov	r1, r5
   1878c:	add	r0, r3, r0
   18790:	bl	1a0d4 <fts_children@@Base+0x2e14>
   18794:	ldrb	r3, [r4, #1]!
   18798:	cmp	r3, #0
   1879c:	bne	18784 <fts_children@@Base+0x14c4>
   187a0:	mov	r0, r1
   187a4:	pop	{r3, r4, r5, pc}
   187a8:	mov	r1, r3
   187ac:	b	187a0 <fts_children@@Base+0x14e0>
   187b0:	push	{r4}		; (str r4, [sp, #-4]!)
   187b4:	mov	ip, r0
   187b8:	ldr	r4, [pc, #24]	; 187d8 <fts_children@@Base+0x1518>
   187bc:	add	r4, pc, r4
   187c0:	ldm	r4!, {r0, r1, r2, r3}
   187c4:	ldr	r4, [r4]
   187c8:	stmia	ip!, {r0, r1, r2, r3}
   187cc:	str	r4, [ip]
   187d0:	pop	{r4}		; (ldr r4, [sp], #4)
   187d4:	bx	lr
   187d8:			; <UNDEFINED> instruction: 0x000034b8
   187dc:	push	{r4, r5, r6, r7, r8, lr}
   187e0:	subs	r8, r2, #0
   187e4:	mov	r7, r0
   187e8:	mov	r5, r1
   187ec:	mov	r6, r3
   187f0:	beq	188e4 <fts_children@@Base+0x1624>
   187f4:	cmp	r6, #0
   187f8:	beq	188d8 <fts_children@@Base+0x1618>
   187fc:	mov	r0, #40	; 0x28
   18800:	bl	11820 <malloc@plt>
   18804:	subs	r4, r0, #0
   18808:	beq	188fc <fts_children@@Base+0x163c>
   1880c:	cmp	r5, #0
   18810:	beq	188f0 <fts_children@@Base+0x1630>
   18814:	mov	r0, r4
   18818:	str	r5, [r0, #20]!
   1881c:	bl	180e8 <fts_children@@Base+0xe28>
   18820:	cmp	r0, #0
   18824:	beq	188c8 <fts_children@@Base+0x1608>
   18828:	ldrb	r3, [r5, #16]
   1882c:	vldr	s15, [r5, #8]
   18830:	cmp	r3, #0
   18834:	bne	1885c <fts_children@@Base+0x159c>
   18838:	vmov	s14, r7
   1883c:	vcvt.f32.u32	s13, s14
   18840:	vldr	s14, [pc, #188]	; 18904 <fts_children@@Base+0x1644>
   18844:	vdiv.f32	s15, s13, s15
   18848:	vcmpe.f32	s15, s14
   1884c:	vmrs	APSR_nzcv, fpscr
   18850:	bge	188c0 <fts_children@@Base+0x1600>
   18854:	vcvt.u32.f32	s15, s15
   18858:	vmov	r7, s15
   1885c:	mov	r0, r7
   18860:	bl	17ee8 <fts_children@@Base+0xc28>
   18864:	cmn	r0, #-1073741823	; 0xc0000001
   18868:	mov	r5, r0
   1886c:	bhi	188c0 <fts_children@@Base+0x1600>
   18870:	cmp	r0, #0
   18874:	str	r0, [r4, #8]
   18878:	beq	188c8 <fts_children@@Base+0x1608>
   1887c:	mov	r1, #8
   18880:	bl	11688 <calloc@plt>
   18884:	cmp	r0, #0
   18888:	str	r0, [r4]
   1888c:	beq	188c8 <fts_children@@Base+0x1608>
   18890:	ldr	r3, [sp, #24]
   18894:	mov	r2, #0
   18898:	add	r5, r0, r5, lsl #3
   1889c:	str	r8, [r4, #24]
   188a0:	str	r5, [r4, #4]
   188a4:	mov	r0, r4
   188a8:	str	r6, [r4, #28]
   188ac:	str	r3, [r4, #32]
   188b0:	str	r2, [r4, #12]
   188b4:	str	r2, [r4, #16]
   188b8:	str	r2, [r4, #36]	; 0x24
   188bc:	pop	{r4, r5, r6, r7, r8, pc}
   188c0:	mov	r3, #0
   188c4:	str	r3, [r4, #8]
   188c8:	mov	r0, r4
   188cc:	bl	116dc <free@plt>
   188d0:	mov	r0, #0
   188d4:	pop	{r4, r5, r6, r7, r8, pc}
   188d8:	ldr	r6, [pc, #40]	; 18908 <fts_children@@Base+0x1648>
   188dc:	add	r6, pc, r6
   188e0:	b	187fc <fts_children@@Base+0x153c>
   188e4:	ldr	r8, [pc, #32]	; 1890c <fts_children@@Base+0x164c>
   188e8:	add	r8, pc, r8
   188ec:	b	187f4 <fts_children@@Base+0x1534>
   188f0:	ldr	r5, [pc, #24]	; 18910 <fts_children@@Base+0x1650>
   188f4:	add	r5, pc, r5
   188f8:	b	18814 <fts_children@@Base+0x1554>
   188fc:	mov	r0, r4
   18900:	pop	{r4, r5, r6, r7, r8, pc}
   18904:	svcmi	0x00800000
   18908:			; <UNDEFINED> instruction: 0xfffff6c4
   1890c:			; <UNDEFINED> instruction: 0xfffff6a4
   18910:	andeq	r3, r0, r0, lsl #7
   18914:	push	{r4, r5, r6, r7, r8, lr}
   18918:	mov	r5, r0
   1891c:	ldr	r7, [r0]
   18920:	ldr	r3, [r0, #4]
   18924:	cmp	r7, r3
   18928:	addcc	r7, r7, #8
   1892c:	movcc	r6, #0
   18930:	bcs	189b0 <fts_children@@Base+0x16f0>
   18934:	ldr	r2, [r7, #-8]
   18938:	mov	r8, r7
   1893c:	cmp	r2, #0
   18940:	beq	189a4 <fts_children@@Base+0x16e4>
   18944:	ldr	r4, [r7, #-4]
   18948:	cmp	r4, #0
   1894c:	beq	18984 <fts_children@@Base+0x16c4>
   18950:	ldr	r3, [r5, #32]
   18954:	cmp	r3, #0
   18958:	beq	18964 <fts_children@@Base+0x16a4>
   1895c:	ldr	r0, [r4]
   18960:	blx	r3
   18964:	ldr	r3, [r4, #4]
   18968:	str	r6, [r4]
   1896c:	ldr	r2, [r5, #36]	; 0x24
   18970:	cmp	r3, #0
   18974:	str	r2, [r4, #4]
   18978:	str	r4, [r5, #36]	; 0x24
   1897c:	mov	r4, r3
   18980:	bne	18950 <fts_children@@Base+0x1690>
   18984:	ldr	r3, [r5, #32]
   18988:	cmp	r3, #0
   1898c:	beq	18998 <fts_children@@Base+0x16d8>
   18990:	ldr	r0, [r7, #-8]
   18994:	blx	r3
   18998:	str	r6, [r7, #-8]
   1899c:	str	r6, [r7, #-4]
   189a0:	ldr	r3, [r5, #4]
   189a4:	cmp	r3, r8
   189a8:	add	r7, r7, #8
   189ac:	bhi	18934 <fts_children@@Base+0x1674>
   189b0:	mov	r3, #0
   189b4:	str	r3, [r5, #12]
   189b8:	str	r3, [r5, #16]
   189bc:	pop	{r4, r5, r6, r7, r8, pc}
   189c0:	push	{r3, r4, r5, r6, r7, lr}
   189c4:	mov	r5, r0
   189c8:	ldr	r3, [r0, #32]
   189cc:	cmp	r3, #0
   189d0:	beq	189e0 <fts_children@@Base+0x1720>
   189d4:	ldr	r3, [r0, #16]
   189d8:	cmp	r3, #0
   189dc:	bne	18a5c <fts_children@@Base+0x179c>
   189e0:	ldr	r3, [r5, #4]
   189e4:	ldr	r6, [r5]
   189e8:	cmp	r6, r3
   189ec:	bcs	18a28 <fts_children@@Base+0x1768>
   189f0:	add	r6, r6, #8
   189f4:	ldr	r0, [r6, #-4]
   189f8:	mov	r7, r6
   189fc:	cmp	r0, #0
   18a00:	beq	18a1c <fts_children@@Base+0x175c>
   18a04:	ldr	r4, [r0, #4]
   18a08:	bl	116dc <free@plt>
   18a0c:	cmp	r4, #0
   18a10:	mov	r0, r4
   18a14:	bne	18a04 <fts_children@@Base+0x1744>
   18a18:	ldr	r3, [r5, #4]
   18a1c:	cmp	r7, r3
   18a20:	add	r6, r6, #8
   18a24:	bcc	189f4 <fts_children@@Base+0x1734>
   18a28:	ldr	r0, [r5, #36]	; 0x24
   18a2c:	cmp	r0, #0
   18a30:	beq	18a48 <fts_children@@Base+0x1788>
   18a34:	ldr	r4, [r0, #4]
   18a38:	bl	116dc <free@plt>
   18a3c:	cmp	r4, #0
   18a40:	mov	r0, r4
   18a44:	bne	18a34 <fts_children@@Base+0x1774>
   18a48:	ldr	r0, [r5]
   18a4c:	bl	116dc <free@plt>
   18a50:	mov	r0, r5
   18a54:	pop	{r3, r4, r5, r6, r7, lr}
   18a58:	b	116dc <free@plt>
   18a5c:	ldr	r6, [r0]
   18a60:	ldr	r3, [r0, #4]
   18a64:	cmp	r6, r3
   18a68:	bcs	18a28 <fts_children@@Base+0x1768>
   18a6c:	ldr	r0, [r6]
   18a70:	cmp	r0, #0
   18a74:	movne	r4, r6
   18a78:	bne	18a84 <fts_children@@Base+0x17c4>
   18a7c:	b	18a9c <fts_children@@Base+0x17dc>
   18a80:	ldr	r0, [r4]
   18a84:	ldr	r3, [r5, #32]
   18a88:	blx	r3
   18a8c:	ldr	r4, [r4, #4]
   18a90:	cmp	r4, #0
   18a94:	bne	18a80 <fts_children@@Base+0x17c0>
   18a98:	ldr	r3, [r5, #4]
   18a9c:	add	r6, r6, #8
   18aa0:	cmp	r3, r6
   18aa4:	bhi	18a6c <fts_children@@Base+0x17ac>
   18aa8:	b	189e4 <fts_children@@Base+0x1724>
   18aac:	ldr	r3, [pc, #392]	; 18c3c <fts_children@@Base+0x197c>
   18ab0:	ldr	r2, [pc, #392]	; 18c40 <fts_children@@Base+0x1980>
   18ab4:	add	r3, pc, r3
   18ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18abc:	sub	sp, sp, #52	; 0x34
   18ac0:	ldr	r5, [r0, #20]
   18ac4:	mov	r4, r0
   18ac8:	ldr	r6, [r3, r2]
   18acc:	vldr	s15, [r5, #8]
   18ad0:	ldrb	r2, [r5, #16]
   18ad4:	ldr	r3, [r6]
   18ad8:	cmp	r2, #0
   18adc:	str	r3, [sp, #44]	; 0x2c
   18ae0:	bne	18b08 <fts_children@@Base+0x1848>
   18ae4:	vmov	s14, r1
   18ae8:	vcvt.f32.u32	s13, s14
   18aec:	vldr	s14, [pc, #324]	; 18c38 <fts_children@@Base+0x1978>
   18af0:	vdiv.f32	s15, s13, s15
   18af4:	vcmpe.f32	s15, s14
   18af8:	vmrs	APSR_nzcv, fpscr
   18afc:	bge	18c00 <fts_children@@Base+0x1940>
   18b00:	vcvt.u32.f32	s15, s15
   18b04:	vmov	r1, s15
   18b08:	mov	r0, r1
   18b0c:	bl	17ee8 <fts_children@@Base+0xc28>
   18b10:	sub	r3, r0, #1
   18b14:	mov	r7, r0
   18b18:	cmn	r3, #-1073741822	; 0xc0000002
   18b1c:	bhi	18c00 <fts_children@@Base+0x1940>
   18b20:	ldr	r3, [r4, #8]
   18b24:	cmp	r3, r0
   18b28:	beq	18be0 <fts_children@@Base+0x1920>
   18b2c:	mov	r1, #8
   18b30:	bl	11688 <calloc@plt>
   18b34:	cmp	r0, #0
   18b38:	mov	r3, r0
   18b3c:	str	r0, [sp, #4]
   18b40:	beq	18c00 <fts_children@@Base+0x1940>
   18b44:	ldr	fp, [r4, #24]
   18b48:	add	r8, sp, #4
   18b4c:	ldr	sl, [r4, #28]
   18b50:	mov	ip, #0
   18b54:	ldr	r9, [r4, #32]
   18b58:	mov	r0, r8
   18b5c:	ldr	lr, [r4, #36]	; 0x24
   18b60:	mov	r2, ip
   18b64:	mov	r1, r4
   18b68:	add	r3, r3, r7, lsl #3
   18b6c:	str	r5, [sp, #24]
   18b70:	str	r7, [sp, #12]
   18b74:	str	r3, [sp, #8]
   18b78:	str	fp, [sp, #28]
   18b7c:	str	sl, [sp, #32]
   18b80:	str	r9, [sp, #36]	; 0x24
   18b84:	str	lr, [sp, #40]	; 0x28
   18b88:	str	ip, [sp, #16]
   18b8c:	str	ip, [sp, #20]
   18b90:	bl	181a8 <fts_children@@Base+0xee8>
   18b94:	subs	r5, r0, #0
   18b98:	bne	18c08 <fts_children@@Base+0x1948>
   18b9c:	ldr	r3, [sp, #40]	; 0x28
   18ba0:	mov	r0, r4
   18ba4:	mov	r1, r8
   18ba8:	mov	r2, #1
   18bac:	str	r3, [r4, #36]	; 0x24
   18bb0:	bl	181a8 <fts_children@@Base+0xee8>
   18bb4:	cmp	r0, #0
   18bb8:	beq	18c34 <fts_children@@Base+0x1974>
   18bbc:	mov	r0, r4
   18bc0:	mov	r1, r8
   18bc4:	mov	r2, r5
   18bc8:	bl	181a8 <fts_children@@Base+0xee8>
   18bcc:	cmp	r0, #0
   18bd0:	beq	18c34 <fts_children@@Base+0x1974>
   18bd4:	ldr	r0, [sp, #4]
   18bd8:	bl	116dc <free@plt>
   18bdc:	b	18be4 <fts_children@@Base+0x1924>
   18be0:	mov	r5, #1
   18be4:	ldr	r1, [sp, #44]	; 0x2c
   18be8:	mov	r0, r5
   18bec:	ldr	r3, [r6]
   18bf0:	cmp	r1, r3
   18bf4:	bne	18c30 <fts_children@@Base+0x1970>
   18bf8:	add	sp, sp, #52	; 0x34
   18bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c00:	mov	r5, #0
   18c04:	b	18be4 <fts_children@@Base+0x1924>
   18c08:	ldr	r0, [r4]
   18c0c:	bl	116dc <free@plt>
   18c10:	add	r0, sp, #8
   18c14:	ldr	ip, [sp, #4]
   18c18:	ldm	r0, {r0, r1, r2}
   18c1c:	ldr	r3, [sp, #40]	; 0x28
   18c20:	str	ip, [r4]
   18c24:	stmib	r4, {r0, r1, r2}
   18c28:	str	r3, [r4, #36]	; 0x24
   18c2c:	b	18be4 <fts_children@@Base+0x1924>
   18c30:	bl	1173c <__stack_chk_fail@plt>
   18c34:	bl	11a30 <abort@plt>
   18c38:	svcmi	0x00800000
   18c3c:	andeq	r4, r1, r4, asr #10
   18c40:	andeq	r0, r0, r8, ror #2
   18c44:	ldr	r3, [pc, #428]	; 18df8 <fts_children@@Base+0x1b38>
   18c48:	ldr	ip, [pc, #428]	; 18dfc <fts_children@@Base+0x1b3c>
   18c4c:	add	r3, pc, r3
   18c50:	push	{r4, r5, r6, r7, r8, lr}
   18c54:	subs	r8, r1, #0
   18c58:	ldr	r4, [r3, ip]
   18c5c:	sub	sp, sp, #8
   18c60:	mov	r5, r2
   18c64:	mov	r6, r0
   18c68:	ldr	r3, [r4]
   18c6c:	str	r3, [sp, #4]
   18c70:	beq	18db0 <fts_children@@Base+0x1af0>
   18c74:	mov	r3, #0
   18c78:	mov	r2, sp
   18c7c:	bl	17fec <fts_children@@Base+0xd2c>
   18c80:	cmp	r0, #0
   18c84:	beq	18cb0 <fts_children@@Base+0x19f0>
   18c88:	cmp	r5, #0
   18c8c:	moveq	r0, r5
   18c90:	strne	r0, [r5]
   18c94:	movne	r0, #0
   18c98:	ldr	r2, [sp, #4]
   18c9c:	ldr	r3, [r4]
   18ca0:	cmp	r2, r3
   18ca4:	bne	18df0 <fts_children@@Base+0x1b30>
   18ca8:	add	sp, sp, #8
   18cac:	pop	{r4, r5, r6, r7, r8, pc}
   18cb0:	vldr	s11, [r6, #8]
   18cb4:	vcvt.f32.u32	s14, s11
   18cb8:	ldr	r3, [r6, #20]
   18cbc:	vldr	s15, [r3, #8]
   18cc0:	vldr	s13, [r6, #12]
   18cc4:	vmul.f32	s15, s14, s15
   18cc8:	vcvt.f32.u32	s14, s13
   18ccc:	vcmpe.f32	s14, s15
   18cd0:	vmrs	APSR_nzcv, fpscr
   18cd4:	bgt	18d24 <fts_children@@Base+0x1a64>
   18cd8:	ldr	r3, [sp]
   18cdc:	ldr	r2, [r3]
   18ce0:	cmp	r2, #0
   18ce4:	beq	18db4 <fts_children@@Base+0x1af4>
   18ce8:	ldr	r3, [r6, #36]	; 0x24
   18cec:	cmp	r3, #0
   18cf0:	beq	18dd8 <fts_children@@Base+0x1b18>
   18cf4:	ldr	r2, [r3, #4]
   18cf8:	str	r2, [r6, #36]	; 0x24
   18cfc:	str	r8, [r3]
   18d00:	mov	r0, #1
   18d04:	ldr	r2, [sp]
   18d08:	ldr	r1, [r2, #4]
   18d0c:	str	r1, [r3, #4]
   18d10:	str	r3, [r2, #4]
   18d14:	ldr	r3, [r6, #16]
   18d18:	add	r3, r3, r0
   18d1c:	str	r3, [r6, #16]
   18d20:	b	18c98 <fts_children@@Base+0x19d8>
   18d24:	add	r0, r6, #20
   18d28:	bl	180e8 <fts_children@@Base+0xe28>
   18d2c:	vldr	s11, [r6, #8]
   18d30:	vcvt.f32.u32	s15, s11
   18d34:	ldr	r3, [r6, #20]
   18d38:	vldr	s14, [r3, #8]
   18d3c:	vldr	s11, [r6, #12]
   18d40:	vmul.f32	s13, s14, s15
   18d44:	vcvt.f32.u32	s12, s11
   18d48:	vcmpe.f32	s12, s13
   18d4c:	vmrs	APSR_nzcv, fpscr
   18d50:	ble	18cd8 <fts_children@@Base+0x1a18>
   18d54:	ldrb	r2, [r3, #16]
   18d58:	cmp	r2, #0
   18d5c:	vldreq	s13, [r3, #12]
   18d60:	vldrne	s14, [r3, #12]
   18d64:	vmuleq.f32	s15, s15, s13
   18d68:	vmul.f32	s15, s14, s15
   18d6c:	vldr	s14, [pc, #128]	; 18df4 <fts_children@@Base+0x1b34>
   18d70:	vcmpe.f32	s15, s14
   18d74:	vmrs	APSR_nzcv, fpscr
   18d78:	bge	18de8 <fts_children@@Base+0x1b28>
   18d7c:	vcvt.u32.f32	s15, s15
   18d80:	mov	r0, r6
   18d84:	vmov	r1, s15
   18d88:	bl	18aac <fts_children@@Base+0x17ec>
   18d8c:	cmp	r0, #0
   18d90:	beq	18de8 <fts_children@@Base+0x1b28>
   18d94:	mov	r2, sp
   18d98:	mov	r0, r6
   18d9c:	mov	r1, r8
   18da0:	mov	r3, #0
   18da4:	bl	17fec <fts_children@@Base+0xd2c>
   18da8:	cmp	r0, #0
   18dac:	beq	18cd8 <fts_children@@Base+0x1a18>
   18db0:	bl	11a30 <abort@plt>
   18db4:	str	r8, [r3]
   18db8:	mov	r0, #1
   18dbc:	ldr	r2, [r6, #16]
   18dc0:	ldr	r3, [r6, #12]
   18dc4:	add	r2, r2, r0
   18dc8:	str	r2, [r6, #16]
   18dcc:	add	r3, r3, r0
   18dd0:	str	r3, [r6, #12]
   18dd4:	b	18c98 <fts_children@@Base+0x19d8>
   18dd8:	mov	r0, #8
   18ddc:	bl	11820 <malloc@plt>
   18de0:	subs	r3, r0, #0
   18de4:	bne	18cfc <fts_children@@Base+0x1a3c>
   18de8:	mvn	r0, #0
   18dec:	b	18c98 <fts_children@@Base+0x19d8>
   18df0:	bl	1173c <__stack_chk_fail@plt>
   18df4:	svcmi	0x00800000
   18df8:	andeq	r4, r1, ip, lsr #7
   18dfc:	andeq	r0, r0, r8, ror #2
   18e00:	b	18c44 <fts_children@@Base+0x1984>
   18e04:	ldr	r3, [pc, #100]	; 18e70 <fts_children@@Base+0x1bb0>
   18e08:	ldr	ip, [pc, #100]	; 18e74 <fts_children@@Base+0x1bb4>
   18e0c:	add	r3, pc, r3
   18e10:	push	{r4, r5, lr}
   18e14:	sub	sp, sp, #12
   18e18:	ldr	r4, [r3, ip]
   18e1c:	mov	r5, r1
   18e20:	mov	r2, sp
   18e24:	ldr	r3, [r4]
   18e28:	str	r3, [sp, #4]
   18e2c:	bl	18c44 <fts_children@@Base+0x1984>
   18e30:	cmn	r0, #1
   18e34:	beq	18e64 <fts_children@@Base+0x1ba4>
   18e38:	cmp	r0, #0
   18e3c:	movne	r0, r5
   18e40:	beq	18e5c <fts_children@@Base+0x1b9c>
   18e44:	ldr	r2, [sp, #4]
   18e48:	ldr	r3, [r4]
   18e4c:	cmp	r2, r3
   18e50:	bne	18e6c <fts_children@@Base+0x1bac>
   18e54:	add	sp, sp, #12
   18e58:	pop	{r4, r5, pc}
   18e5c:	ldr	r0, [sp]
   18e60:	b	18e44 <fts_children@@Base+0x1b84>
   18e64:	mov	r0, #0
   18e68:	b	18e44 <fts_children@@Base+0x1b84>
   18e6c:	bl	1173c <__stack_chk_fail@plt>
   18e70:	andeq	r4, r1, ip, ror #3
   18e74:	andeq	r0, r0, r8, ror #2
   18e78:	ldr	ip, [pc, #304]	; 18fb0 <fts_children@@Base+0x1cf0>
   18e7c:	mov	r3, #1
   18e80:	push	{r4, r5, r6, r7, lr}
   18e84:	add	ip, pc, ip
   18e88:	ldr	lr, [pc, #292]	; 18fb4 <fts_children@@Base+0x1cf4>
   18e8c:	sub	sp, sp, #12
   18e90:	mov	r4, r0
   18e94:	mov	r2, sp
   18e98:	ldr	r5, [ip, lr]
   18e9c:	ldr	ip, [r5]
   18ea0:	str	ip, [sp, #4]
   18ea4:	bl	17fec <fts_children@@Base+0xd2c>
   18ea8:	subs	r6, r0, #0
   18eac:	beq	18ecc <fts_children@@Base+0x1c0c>
   18eb0:	ldr	r3, [sp]
   18eb4:	ldr	r2, [r4, #16]
   18eb8:	sub	r2, r2, #1
   18ebc:	str	r2, [r4, #16]
   18ec0:	ldr	r3, [r3]
   18ec4:	cmp	r3, #0
   18ec8:	beq	18ee8 <fts_children@@Base+0x1c28>
   18ecc:	ldr	r2, [sp, #4]
   18ed0:	mov	r0, r6
   18ed4:	ldr	r3, [r5]
   18ed8:	cmp	r2, r3
   18edc:	bne	18fac <fts_children@@Base+0x1cec>
   18ee0:	add	sp, sp, #12
   18ee4:	pop	{r4, r5, r6, r7, pc}
   18ee8:	vldr	s12, [r4, #8]
   18eec:	vcvt.f32.u32	s14, s12
   18ef0:	ldr	r3, [r4, #12]
   18ef4:	ldr	r2, [r4, #20]
   18ef8:	sub	r3, r3, #1
   18efc:	str	r3, [r4, #12]
   18f00:	vldr	s15, [r2]
   18f04:	vmov	s13, r3
   18f08:	vmul.f32	s15, s14, s15
   18f0c:	vcvt.f32.u32	s14, s13
   18f10:	vcmpe.f32	s14, s15
   18f14:	vmrs	APSR_nzcv, fpscr
   18f18:	bpl	18ecc <fts_children@@Base+0x1c0c>
   18f1c:	add	r0, r4, #20
   18f20:	bl	180e8 <fts_children@@Base+0xe28>
   18f24:	vldr	s12, [r4, #8]
   18f28:	vcvt.f32.u32	s15, s12
   18f2c:	ldr	r3, [r4, #20]
   18f30:	vldr	s14, [r3]
   18f34:	vldr	s12, [r4, #12]
   18f38:	vmul.f32	s14, s15, s14
   18f3c:	vcvt.f32.u32	s13, s12
   18f40:	vcmpe.f32	s13, s14
   18f44:	vmrs	APSR_nzcv, fpscr
   18f48:	bpl	18ecc <fts_children@@Base+0x1c0c>
   18f4c:	vldr	s14, [r3, #4]
   18f50:	vmul.f32	s15, s15, s14
   18f54:	ldrb	r2, [r3, #16]
   18f58:	mov	r0, r4
   18f5c:	cmp	r2, #0
   18f60:	vldreq	s14, [r3, #8]
   18f64:	vmuleq.f32	s15, s15, s14
   18f68:	vcvt.u32.f32	s15, s15
   18f6c:	vmov	r1, s15
   18f70:	bl	18aac <fts_children@@Base+0x17ec>
   18f74:	cmp	r0, #0
   18f78:	bne	18ecc <fts_children@@Base+0x1c0c>
   18f7c:	ldr	r0, [r4, #36]	; 0x24
   18f80:	cmp	r0, #0
   18f84:	bne	18f90 <fts_children@@Base+0x1cd0>
   18f88:	b	18fa0 <fts_children@@Base+0x1ce0>
   18f8c:	mov	r0, r7
   18f90:	ldr	r7, [r0, #4]
   18f94:	bl	116dc <free@plt>
   18f98:	cmp	r7, #0
   18f9c:	bne	18f8c <fts_children@@Base+0x1ccc>
   18fa0:	mov	r3, #0
   18fa4:	str	r3, [r4, #36]	; 0x24
   18fa8:	b	18ecc <fts_children@@Base+0x1c0c>
   18fac:	bl	1173c <__stack_chk_fail@plt>
   18fb0:	andeq	r4, r1, r4, ror r1
   18fb4:	andeq	r0, r0, r8, ror #2
   18fb8:	mov	r3, #0
   18fbc:	mov	r2, #1
   18fc0:	str	r1, [r0]
   18fc4:	str	r1, [r0, #4]
   18fc8:	str	r1, [r0, #8]
   18fcc:	str	r1, [r0, #12]
   18fd0:	str	r1, [r0, #16]
   18fd4:	strb	r2, [r0, #28]
   18fd8:	str	r3, [r0, #20]
   18fdc:	str	r3, [r0, #24]
   18fe0:	bx	lr
   18fe4:	ldrb	r0, [r0, #28]
   18fe8:	bx	lr
   18fec:	ldrb	ip, [r0, #28]
   18ff0:	mov	r3, r0
   18ff4:	ldr	r2, [r0, #20]
   18ff8:	eor	ip, ip, #1
   18ffc:	add	r2, ip, r2
   19000:	and	r2, r2, #3
   19004:	ldr	r0, [r0, r2, lsl #2]
   19008:	str	r1, [r3, r2, lsl #2]
   1900c:	ldr	r1, [r3, #24]
   19010:	str	r2, [r3, #20]
   19014:	cmp	r1, r2
   19018:	mov	r2, #0
   1901c:	addeq	r1, ip, r1
   19020:	strb	r2, [r3, #28]
   19024:	andeq	r1, r1, #3
   19028:	streq	r1, [r3, #24]
   1902c:	bx	lr
   19030:	push	{r4, lr}
   19034:	mov	r4, r0
   19038:	bl	18fe4 <fts_children@@Base+0x1d24>
   1903c:	cmp	r0, #0
   19040:	bne	19074 <fts_children@@Base+0x1db4>
   19044:	ldr	r3, [r4, #20]
   19048:	ldr	r2, [r4, #16]
   1904c:	ldr	r0, [r4, r3, lsl #2]
   19050:	str	r2, [r4, r3, lsl #2]
   19054:	ldr	r2, [r4, #24]
   19058:	cmp	r3, r2
   1905c:	addne	r3, r3, #3
   19060:	moveq	r3, #1
   19064:	andne	r3, r3, #3
   19068:	strbeq	r3, [r4, #28]
   1906c:	strne	r3, [r4, #20]
   19070:	pop	{r4, pc}
   19074:	bl	11a30 <abort@plt>
   19078:	ldr	r3, [pc, #984]	; 19458 <fts_children@@Base+0x2198>
   1907c:	mov	r0, #14
   19080:	ldr	r2, [pc, #980]	; 1945c <fts_children@@Base+0x219c>
   19084:	add	r3, pc, r3
   19088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1908c:	sub	sp, sp, #132	; 0x84
   19090:	ldr	r6, [r3, r2]
   19094:	ldr	r3, [r6]
   19098:	str	r3, [sp, #124]	; 0x7c
   1909c:	bl	119a0 <nl_langinfo@plt>
   190a0:	subs	r5, r0, #0
   190a4:	beq	19158 <fts_children@@Base+0x1e98>
   190a8:	ldr	r3, [pc, #944]	; 19460 <fts_children@@Base+0x21a0>
   190ac:	ldr	r4, [pc, r3]
   190b0:	cmp	r4, #0
   190b4:	beq	19164 <fts_children@@Base+0x1ea4>
   190b8:	ldrb	r7, [r4]
   190bc:	cmp	r7, #0
   190c0:	bne	190f4 <fts_children@@Base+0x1e34>
   190c4:	b	1912c <fts_children@@Base+0x1e6c>
   190c8:	mov	r0, r4
   190cc:	bl	118a4 <strlen@plt>
   190d0:	add	r0, r0, #1
   190d4:	add	r7, r4, r0
   190d8:	mov	r0, r7
   190dc:	bl	118a4 <strlen@plt>
   190e0:	add	r0, r0, #1
   190e4:	add	r4, r7, r0
   190e8:	ldrb	r7, [r7, r0]
   190ec:	cmp	r7, #0
   190f0:	beq	1912c <fts_children@@Base+0x1e6c>
   190f4:	mov	r0, r5
   190f8:	mov	r1, r4
   190fc:	bl	116ac <strcmp@plt>
   19100:	cmp	r0, #0
   19104:	beq	1911c <fts_children@@Base+0x1e5c>
   19108:	cmp	r7, #42	; 0x2a
   1910c:	bne	190c8 <fts_children@@Base+0x1e08>
   19110:	ldrb	r3, [r4, #1]
   19114:	cmp	r3, #0
   19118:	bne	190c8 <fts_children@@Base+0x1e08>
   1911c:	mov	r0, r4
   19120:	bl	118a4 <strlen@plt>
   19124:	add	r0, r0, #1
   19128:	add	r5, r4, r0
   1912c:	ldrb	r3, [r5]
   19130:	cmp	r3, #0
   19134:	ldreq	r5, [pc, #808]	; 19464 <fts_children@@Base+0x21a4>
   19138:	addeq	r5, pc, r5
   1913c:	ldr	r2, [sp, #124]	; 0x7c
   19140:	mov	r0, r5
   19144:	ldr	r3, [r6]
   19148:	cmp	r2, r3
   1914c:	bne	1942c <fts_children@@Base+0x216c>
   19150:	add	sp, sp, #132	; 0x84
   19154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19158:	ldr	r5, [pc, #776]	; 19468 <fts_children@@Base+0x21a8>
   1915c:	add	r5, pc, r5
   19160:	b	190a8 <fts_children@@Base+0x1de8>
   19164:	ldr	r0, [pc, #768]	; 1946c <fts_children@@Base+0x21ac>
   19168:	add	r0, pc, r0
   1916c:	bl	11808 <getenv@plt>
   19170:	subs	r8, r0, #0
   19174:	beq	19404 <fts_children@@Base+0x2144>
   19178:	ldrb	r3, [r8]
   1917c:	cmp	r3, #0
   19180:	beq	19398 <fts_children@@Base+0x20d8>
   19184:	bl	118a4 <strlen@plt>
   19188:	subs	sl, r0, #0
   1918c:	subne	r3, sl, #1
   19190:	bne	193a8 <fts_children@@Base+0x20e8>
   19194:	mov	r9, #0
   19198:	mov	fp, r9
   1919c:	add	r9, sl, r9
   191a0:	add	r0, r9, #14
   191a4:	bl	11820 <malloc@plt>
   191a8:	subs	r7, r0, #0
   191ac:	beq	193f8 <fts_children@@Base+0x2138>
   191b0:	mov	r1, r8
   191b4:	mov	r2, sl
   191b8:	bl	116f4 <memcpy@plt>
   191bc:	cmp	fp, #0
   191c0:	add	ip, r7, r9
   191c4:	movne	r3, #47	; 0x2f
   191c8:	strbne	r3, [r7, sl]
   191cc:	ldr	r3, [pc, #668]	; 19470 <fts_children@@Base+0x21b0>
   191d0:	add	r3, pc, r3
   191d4:	ldm	r3!, {r0, r1, r2}
   191d8:	ldrh	r3, [r3]
   191dc:	str	r0, [r7, r9]
   191e0:	mov	r0, r7
   191e4:	str	r1, [ip, #4]
   191e8:	mov	r1, #32768	; 0x8000
   191ec:	strh	r3, [ip, #12]
   191f0:	str	r2, [ip, #8]
   191f4:	bl	117fc <open64@plt>
   191f8:	subs	r8, r0, #0
   191fc:	blt	193c0 <fts_children@@Base+0x2100>
   19200:	ldr	r1, [pc, #620]	; 19474 <fts_children@@Base+0x21b4>
   19204:	add	r1, pc, r1
   19208:	bl	11670 <fdopen@plt>
   1920c:	subs	fp, r0, #0
   19210:	beq	19418 <fts_children@@Base+0x2158>
   19214:	ldr	r0, [pc, #604]	; 19478 <fts_children@@Base+0x21b8>
   19218:	add	sl, sp, #20
   1921c:	add	r9, sp, #72	; 0x48
   19220:	mov	r8, #0
   19224:	add	r0, pc, r0
   19228:	str	r0, [sp, #12]
   1922c:	ldr	r3, [fp, #4]
   19230:	ldr	r2, [fp, #8]
   19234:	cmp	r3, r2
   19238:	bcs	19324 <fts_children@@Base+0x2064>
   1923c:	add	r2, r3, #1
   19240:	str	r2, [fp, #4]
   19244:	ldrb	r0, [r3]
   19248:	cmp	r0, #32
   1924c:	beq	1922c <fts_children@@Base+0x1f6c>
   19250:	sub	r3, r0, #9
   19254:	cmp	r3, #1
   19258:	bls	1922c <fts_children@@Base+0x1f6c>
   1925c:	cmp	r0, #35	; 0x23
   19260:	beq	19338 <fts_children@@Base+0x2078>
   19264:	mov	r1, fp
   19268:	bl	118c8 <ungetc@plt>
   1926c:	mov	r0, fp
   19270:	ldr	r1, [sp, #12]
   19274:	mov	r2, sl
   19278:	mov	r3, r9
   1927c:	bl	11910 <fscanf@plt>
   19280:	cmp	r0, #1
   19284:	ble	19368 <fts_children@@Base+0x20a8>
   19288:	mov	r0, sl
   1928c:	bl	118a4 <strlen@plt>
   19290:	str	r0, [sp, #8]
   19294:	mov	r0, r9
   19298:	bl	118a4 <strlen@plt>
   1929c:	cmp	r8, #0
   192a0:	mov	r2, r0
   192a4:	bne	193cc <fts_children@@Base+0x210c>
   192a8:	ldr	r3, [sp, #8]
   192ac:	str	r2, [sp]
   192b0:	add	r8, r0, r3
   192b4:	add	r0, r8, #3
   192b8:	add	r8, r8, #2
   192bc:	bl	11820 <malloc@plt>
   192c0:	ldr	r2, [sp]
   192c4:	mov	r3, r0
   192c8:	cmp	r3, #0
   192cc:	beq	19430 <fts_children@@Base+0x2170>
   192d0:	ldr	r0, [sp, #8]
   192d4:	movw	r1, #65534	; 0xfffe
   192d8:	movt	r1, #65535	; 0xffff
   192dc:	rsb	r2, r2, r8
   192e0:	rsb	r1, r0, r1
   192e4:	stm	sp, {r2, r3}
   192e8:	add	r0, r1, r2
   192ec:	mov	r1, sl
   192f0:	add	r0, r3, r0
   192f4:	mov	r4, r3
   192f8:	bl	117cc <strcpy@plt>
   192fc:	ldr	r2, [sp]
   19300:	ldr	r3, [sp, #4]
   19304:	mov	r1, r9
   19308:	sub	r0, r2, #1
   1930c:	add	r0, r3, r0
   19310:	bl	117cc <strcpy@plt>
   19314:	ldr	r3, [fp, #4]
   19318:	ldr	r2, [fp, #8]
   1931c:	cmp	r3, r2
   19320:	bcc	1923c <fts_children@@Base+0x1f7c>
   19324:	mov	r0, fp
   19328:	bl	1197c <__uflow@plt>
   1932c:	cmn	r0, #1
   19330:	beq	19368 <fts_children@@Base+0x20a8>
   19334:	b	19248 <fts_children@@Base+0x1f88>
   19338:	ldr	r3, [fp, #4]
   1933c:	ldr	r2, [fp, #8]
   19340:	cmp	r3, r2
   19344:	bcs	1944c <fts_children@@Base+0x218c>
   19348:	add	r2, r3, #1
   1934c:	str	r2, [fp, #4]
   19350:	ldrb	r0, [r3]
   19354:	cmp	r0, #10
   19358:	cmnne	r0, #1
   1935c:	bne	19338 <fts_children@@Base+0x2078>
   19360:	cmn	r0, #1
   19364:	bne	1922c <fts_children@@Base+0x1f6c>
   19368:	mov	r0, fp
   1936c:	bl	19a6c <fts_children@@Base+0x27ac>
   19370:	cmp	r8, #0
   19374:	beq	193c0 <fts_children@@Base+0x2100>
   19378:	mov	r3, #0
   1937c:	strb	r3, [r4, r8]
   19380:	mov	r0, r7
   19384:	bl	116dc <free@plt>
   19388:	ldr	r3, [pc, #236]	; 1947c <fts_children@@Base+0x21bc>
   1938c:	add	r3, pc, r3
   19390:	str	r4, [r3]
   19394:	b	190b8 <fts_children@@Base+0x1df8>
   19398:	ldr	r8, [pc, #224]	; 19480 <fts_children@@Base+0x21c0>
   1939c:	mov	r3, #7
   193a0:	mov	sl, #8
   193a4:	add	r8, pc, r8
   193a8:	ldrb	r3, [r8, r3]
   193ac:	cmp	r3, #47	; 0x2f
   193b0:	movne	r9, #1
   193b4:	movne	fp, r9
   193b8:	bne	1919c <fts_children@@Base+0x1edc>
   193bc:	b	19194 <fts_children@@Base+0x1ed4>
   193c0:	ldr	r4, [pc, #188]	; 19484 <fts_children@@Base+0x21c4>
   193c4:	add	r4, pc, r4
   193c8:	b	19380 <fts_children@@Base+0x20c0>
   193cc:	ldr	r0, [sp, #8]
   193d0:	str	r2, [sp]
   193d4:	add	r3, r0, r2
   193d8:	mov	r0, r4
   193dc:	add	r8, r3, r8
   193e0:	add	r1, r8, #3
   193e4:	add	r8, r8, #2
   193e8:	bl	11754 <realloc@plt>
   193ec:	ldr	r2, [sp]
   193f0:	mov	r3, r0
   193f4:	b	192c8 <fts_children@@Base+0x2008>
   193f8:	ldr	r4, [pc, #136]	; 19488 <fts_children@@Base+0x21c8>
   193fc:	add	r4, pc, r4
   19400:	b	19388 <fts_children@@Base+0x20c8>
   19404:	ldr	r8, [pc, #128]	; 1948c <fts_children@@Base+0x21cc>
   19408:	mov	r3, #7
   1940c:	mov	sl, #8
   19410:	add	r8, pc, r8
   19414:	b	193a8 <fts_children@@Base+0x20e8>
   19418:	ldr	r4, [pc, #112]	; 19490 <fts_children@@Base+0x21d0>
   1941c:	mov	r0, r8
   19420:	add	r4, pc, r4
   19424:	bl	11a3c <close@plt>
   19428:	b	19380 <fts_children@@Base+0x20c0>
   1942c:	bl	1173c <__stack_chk_fail@plt>
   19430:	mov	r0, r4
   19434:	ldr	r4, [pc, #88]	; 19494 <fts_children@@Base+0x21d4>
   19438:	bl	116dc <free@plt>
   1943c:	mov	r0, fp
   19440:	add	r4, pc, r4
   19444:	bl	19a6c <fts_children@@Base+0x27ac>
   19448:	b	19380 <fts_children@@Base+0x20c0>
   1944c:	mov	r0, fp
   19450:	bl	1197c <__uflow@plt>
   19454:	b	19354 <fts_children@@Base+0x2094>
   19458:	andeq	r3, r1, r4, ror pc
   1945c:	andeq	r0, r0, r8, ror #2
   19460:			; <UNDEFINED> instruction: 0x000142b4
   19464:	andeq	r2, r0, r8, asr #23
   19468:	strheq	r2, [r0], -r0
   1946c:	andeq	r2, r0, r0, lsr #23
   19470:	andeq	r2, r0, r8, asr #22
   19474:	andeq	r2, r0, ip, ror r1
   19478:	andeq	r2, r0, r4, lsl #22
   1947c:	ldrdeq	r3, [r1], -r4
   19480:	andeq	r2, r0, r0, asr r9
   19484:	andeq	r1, r0, r8, asr #28
   19488:	andeq	r1, r0, r0, lsl lr
   1948c:	andeq	r2, r0, r4, ror #17
   19490:	andeq	r1, r0, ip, ror #27
   19494:	andeq	r1, r0, ip, asr #27
   19498:	push	{r3, r4, r5, lr}
   1949c:	mov	r2, #5
   194a0:	ldr	r3, [pc, #52]	; 194dc <fts_children@@Base+0x221c>
   194a4:	mov	r4, r0
   194a8:	ldr	ip, [pc, #48]	; 194e0 <fts_children@@Base+0x2220>
   194ac:	mov	r0, #0
   194b0:	add	r3, pc, r3
   194b4:	ldr	r1, [pc, #40]	; 194e4 <fts_children@@Base+0x2224>
   194b8:	ldr	r3, [r3, ip]
   194bc:	add	r1, pc, r1
   194c0:	ldr	r5, [r3]
   194c4:	bl	11730 <dcgettext@plt>
   194c8:	mov	r1, r4
   194cc:	mov	r2, r0
   194d0:	mov	r0, r5
   194d4:	bl	117f0 <error@plt>
   194d8:	bl	11a30 <abort@plt>
   194dc:	andeq	r3, r1, r8, asr #22
   194e0:	andeq	r0, r0, r8, lsl #3
   194e4:	andeq	r2, r0, r8, ror r8
   194e8:	push	{r3, r4, r5, lr}
   194ec:	mov	r2, #5
   194f0:	ldr	r3, [pc, #52]	; 1952c <fts_children@@Base+0x226c>
   194f4:	mov	r4, r0
   194f8:	ldr	ip, [pc, #48]	; 19530 <fts_children@@Base+0x2270>
   194fc:	mov	r0, #0
   19500:	add	r3, pc, r3
   19504:	ldr	r1, [pc, #40]	; 19534 <fts_children@@Base+0x2274>
   19508:	ldr	r3, [r3, ip]
   1950c:	add	r1, pc, r1
   19510:	ldr	r5, [r3]
   19514:	bl	11730 <dcgettext@plt>
   19518:	mov	r1, r4
   1951c:	mov	r2, r0
   19520:	mov	r0, r5
   19524:	bl	117f0 <error@plt>
   19528:	bl	11a30 <abort@plt>
   1952c:	strdeq	r3, [r1], -r8
   19530:	andeq	r0, r0, r8, lsl #3
   19534:	andeq	r2, r0, r4, asr r8
   19538:	push	{r2, r3}
   1953c:	ldr	r3, [pc, #88]	; 1959c <fts_children@@Base+0x22dc>
   19540:	ldr	ip, [pc, #88]	; 195a0 <fts_children@@Base+0x22e0>
   19544:	add	r3, pc, r3
   19548:	push	{r4, lr}
   1954c:	sub	sp, sp, #8
   19550:	ldr	r4, [r3, ip]
   19554:	ldr	r2, [sp, #16]
   19558:	ldr	ip, [r4]
   1955c:	ands	r3, r2, #64	; 0x40
   19560:	ldrne	r3, [sp, #20]
   19564:	str	ip, [sp, #4]
   19568:	addne	ip, sp, #20
   1956c:	strne	ip, [sp]
   19570:	bl	118b0 <openat64@plt>
   19574:	bl	19650 <fts_children@@Base+0x2390>
   19578:	ldr	r2, [sp, #4]
   1957c:	ldr	r3, [r4]
   19580:	cmp	r2, r3
   19584:	bne	19598 <fts_children@@Base+0x22d8>
   19588:	add	sp, sp, #8
   1958c:	pop	{r4, lr}
   19590:	add	sp, sp, #8
   19594:	bx	lr
   19598:	bl	1173c <__stack_chk_fail@plt>
   1959c:			; <UNDEFINED> instruction: 0x00013ab4
   195a0:	andeq	r0, r0, r8, ror #2
   195a4:	push	{r3, r4, r5, lr}
   195a8:	mov	r4, #0
   195ac:	mov	r5, r0
   195b0:	str	r4, [r0, #4]
   195b4:	ldr	r0, [pc, #68]	; 19600 <fts_children@@Base+0x2340>
   195b8:	mov	r1, r4
   195bc:	add	r0, pc, r0
   195c0:	bl	17e7c <fts_children@@Base+0xbbc>
   195c4:	cmp	r0, r4
   195c8:	str	r0, [r5]
   195cc:	blt	195e0 <fts_children@@Base+0x2320>
   195d0:	mov	r1, #1
   195d4:	bl	17c98 <fts_children@@Base+0x9d8>
   195d8:	mov	r0, r4
   195dc:	pop	{r3, r4, r5, pc}
   195e0:	mov	r0, r4
   195e4:	mov	r1, r4
   195e8:	bl	11874 <getcwd@plt>
   195ec:	str	r0, [r5, #4]
   195f0:	cmp	r0, r4
   195f4:	movne	r0, #0
   195f8:	mvneq	r0, #0
   195fc:	pop	{r3, r4, r5, pc}
   19600:	andeq	r2, r0, r0, ror r6
   19604:	ldr	r3, [r0]
   19608:	cmp	r3, #0
   1960c:	blt	19618 <fts_children@@Base+0x2358>
   19610:	mov	r0, r3
   19614:	b	119d0 <fchdir@plt>
   19618:	ldr	r0, [r0, #4]
   1961c:	b	1970c <fts_children@@Base+0x244c>
   19620:	push	{r4, lr}
   19624:	mov	r4, r0
   19628:	ldr	r0, [r0]
   1962c:	cmp	r0, #0
   19630:	blt	19638 <fts_children@@Base+0x2378>
   19634:	bl	11a3c <close@plt>
   19638:	ldr	r0, [r4, #4]
   1963c:	pop	{r4, lr}
   19640:	b	116dc <free@plt>
   19644:	mov	r1, #0
   19648:	mov	r2, #3
   1964c:	b	19b0c <fts_children@@Base+0x284c>
   19650:	cmp	r0, #2
   19654:	push	{r3, r4, r5, r6, r7, lr}
   19658:	mov	r4, r0
   1965c:	bhi	19684 <fts_children@@Base+0x23c4>
   19660:	bl	19644 <fts_children@@Base+0x2384>
   19664:	mov	r7, r0
   19668:	bl	118e0 <__errno_location@plt>
   1966c:	ldr	r6, [r0]
   19670:	mov	r5, r0
   19674:	mov	r0, r4
   19678:	mov	r4, r7
   1967c:	bl	11a3c <close@plt>
   19680:	str	r6, [r5]
   19684:	mov	r0, r4
   19688:	pop	{r3, r4, r5, r6, r7, pc}
   1968c:	push	{r3, lr}
   19690:	ldr	r0, [r0]
   19694:	cmp	r0, #0
   19698:	poplt	{r3, pc}
   1969c:	bl	11a3c <close@plt>
   196a0:	cmp	r0, #0
   196a4:	popeq	{r3, pc}
   196a8:	ldr	r0, [pc, #24]	; 196c8 <fts_children@@Base+0x2408>
   196ac:	mov	r2, #63	; 0x3f
   196b0:	ldr	r1, [pc, #20]	; 196cc <fts_children@@Base+0x240c>
   196b4:	ldr	r3, [pc, #20]	; 196d0 <fts_children@@Base+0x2410>
   196b8:	add	r0, pc, r0
   196bc:	add	r1, pc, r1
   196c0:	add	r3, pc, r3
   196c4:	bl	11a60 <__assert_fail@plt>
   196c8:	strdeq	r2, [r0], -r0
   196cc:	strdeq	r2, [r0], -ip
   196d0:	ldrdeq	r2, [r0], -r0
   196d4:	push	{r3, r4, r5, lr}
   196d8:	mov	r2, #18688	; 0x4900
   196dc:	mov	r4, r0
   196e0:	ldr	r0, [r0]
   196e4:	bl	118b0 <openat64@plt>
   196e8:	subs	r5, r0, #0
   196ec:	blt	19704 <fts_children@@Base+0x2444>
   196f0:	mov	r0, r4
   196f4:	bl	1968c <fts_children@@Base+0x23cc>
   196f8:	str	r5, [r4]
   196fc:	mov	r0, #0
   19700:	pop	{r3, r4, r5, pc}
   19704:	mvn	r0, #0
   19708:	pop	{r3, r4, r5, pc}
   1970c:	ldr	r3, [pc, #784]	; 19a24 <fts_children@@Base+0x2764>
   19710:	ldr	r2, [pc, #784]	; 19a28 <fts_children@@Base+0x2768>
   19714:	add	r3, pc, r3
   19718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1971c:	sub	sp, sp, #20
   19720:	ldr	r7, [r3, r2]
   19724:	mov	r5, r0
   19728:	ldr	r3, [r7]
   1972c:	str	r3, [sp, #12]
   19730:	bl	11778 <chdir@plt>
   19734:	subs	r4, r0, #0
   19738:	beq	19750 <fts_children@@Base+0x2490>
   1973c:	bl	118e0 <__errno_location@plt>
   19740:	ldr	r3, [r0]
   19744:	mov	sl, r0
   19748:	cmp	r3, #36	; 0x24
   1974c:	beq	1976c <fts_children@@Base+0x24ac>
   19750:	ldr	r2, [sp, #12]
   19754:	mov	r0, r4
   19758:	ldr	r3, [r7]
   1975c:	cmp	r2, r3
   19760:	bne	19990 <fts_children@@Base+0x26d0>
   19764:	add	sp, sp, #20
   19768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1976c:	mov	r0, r5
   19770:	bl	118a4 <strlen@plt>
   19774:	mvn	r3, #99	; 0x63
   19778:	str	r3, [sp, #8]
   1977c:	cmp	r0, #0
   19780:	add	r6, r5, r0
   19784:	beq	199dc <fts_children@@Base+0x271c>
   19788:	cmp	r0, #4096	; 0x1000
   1978c:	bcc	19a00 <fts_children@@Base+0x2740>
   19790:	ldrb	r3, [r5]
   19794:	cmp	r3, #47	; 0x2f
   19798:	movne	r4, r5
   1979c:	bne	1988c <fts_children@@Base+0x25cc>
   197a0:	add	r3, r5, #1
   197a4:	mov	r2, #0
   197a8:	ldrb	ip, [r3]
   197ac:	mov	r4, r3
   197b0:	add	r2, r2, #1
   197b4:	add	r3, r3, #1
   197b8:	cmp	ip, #47	; 0x2f
   197bc:	beq	197a8 <fts_children@@Base+0x24e8>
   197c0:	cmp	r2, #2
   197c4:	beq	1981c <fts_children@@Base+0x255c>
   197c8:	add	r3, sp, #8
   197cc:	ldr	r1, [pc, #600]	; 19a2c <fts_children@@Base+0x276c>
   197d0:	str	r3, [sp, #4]
   197d4:	mov	r0, r3
   197d8:	add	r1, pc, r1
   197dc:	bl	196d4 <fts_children@@Base+0x2414>
   197e0:	ldr	r3, [sp, #4]
   197e4:	cmp	r0, #0
   197e8:	bne	19944 <fts_children@@Base+0x2684>
   197ec:	ldrb	r3, [r4]
   197f0:	cmp	r3, #47	; 0x2f
   197f4:	bne	1988c <fts_children@@Base+0x25cc>
   197f8:	ldr	r3, [pc, #560]	; 19a30 <fts_children@@Base+0x2770>
   197fc:	mov	r2, #161	; 0xa1
   19800:	ldr	r0, [pc, #556]	; 19a34 <fts_children@@Base+0x2774>
   19804:	ldr	r1, [pc, #556]	; 19a38 <fts_children@@Base+0x2778>
   19808:	add	r3, pc, r3
   1980c:	add	r0, pc, r0
   19810:	add	r3, r3, #12
   19814:	add	r1, pc, r1
   19818:	bl	11a60 <__assert_fail@plt>
   1981c:	add	r0, r5, #3
   19820:	mov	r1, #47	; 0x2f
   19824:	rsb	r2, r0, r6
   19828:	bl	11940 <memchr@plt>
   1982c:	subs	r8, r0, #0
   19830:	beq	1995c <fts_children@@Base+0x269c>
   19834:	add	r3, sp, #8
   19838:	mov	r2, #0
   1983c:	mov	r1, r5
   19840:	strb	r2, [r8]
   19844:	mov	r0, r3
   19848:	str	r3, [sp, #4]
   1984c:	bl	196d4 <fts_children@@Base+0x2414>
   19850:	mov	r2, #47	; 0x2f
   19854:	strb	r2, [r8]
   19858:	ldr	r3, [sp, #4]
   1985c:	cmp	r0, #0
   19860:	bne	19944 <fts_children@@Base+0x2684>
   19864:	ldrb	r3, [r8, #1]
   19868:	add	r4, r8, #1
   1986c:	cmp	r3, r2
   19870:	bne	1988c <fts_children@@Base+0x25cc>
   19874:	add	r3, r8, #2
   19878:	mov	r4, r3
   1987c:	add	r3, r3, #1
   19880:	ldrb	r2, [r4]
   19884:	cmp	r2, #47	; 0x2f
   19888:	beq	19878 <fts_children@@Base+0x25b8>
   1988c:	cmp	r6, r4
   19890:	bcc	199b8 <fts_children@@Base+0x26f8>
   19894:	add	r5, sp, #8
   19898:	mov	r9, #47	; 0x2f
   1989c:	mov	r8, #0
   198a0:	rsb	r3, r4, r6
   198a4:	cmp	r3, #4096	; 0x1000
   198a8:	blt	1991c <fts_children@@Base+0x265c>
   198ac:	mov	r0, r4
   198b0:	mov	r1, #47	; 0x2f
   198b4:	mov	r2, #4096	; 0x1000
   198b8:	bl	118bc <memrchr@plt>
   198bc:	subs	fp, r0, #0
   198c0:	beq	1995c <fts_children@@Base+0x269c>
   198c4:	rsb	r3, r4, fp
   198c8:	strb	r8, [fp]
   198cc:	cmp	r3, #4096	; 0x1000
   198d0:	bge	19994 <fts_children@@Base+0x26d4>
   198d4:	mov	r1, r4
   198d8:	mov	r0, r5
   198dc:	bl	196d4 <fts_children@@Base+0x2414>
   198e0:	mov	r3, r5
   198e4:	strb	r9, [fp]
   198e8:	cmp	r0, #0
   198ec:	bne	19944 <fts_children@@Base+0x2684>
   198f0:	ldrb	r3, [fp, #1]
   198f4:	add	r4, fp, #1
   198f8:	cmp	r3, #47	; 0x2f
   198fc:	bne	198a0 <fts_children@@Base+0x25e0>
   19900:	add	r3, fp, #2
   19904:	mov	r4, r3
   19908:	add	r3, r3, #1
   1990c:	ldrb	r2, [r4]
   19910:	cmp	r2, #47	; 0x2f
   19914:	beq	19904 <fts_children@@Base+0x2644>
   19918:	b	198a0 <fts_children@@Base+0x25e0>
   1991c:	cmp	r6, r4
   19920:	add	r3, sp, #8
   19924:	bls	1996c <fts_children@@Base+0x26ac>
   19928:	mov	r0, r3
   1992c:	mov	r1, r4
   19930:	str	r3, [sp, #4]
   19934:	bl	196d4 <fts_children@@Base+0x2414>
   19938:	ldr	r3, [sp, #4]
   1993c:	cmp	r0, #0
   19940:	beq	1996c <fts_children@@Base+0x26ac>
   19944:	ldr	r5, [sl]
   19948:	mov	r0, r3
   1994c:	bl	1968c <fts_children@@Base+0x23cc>
   19950:	mvn	r4, #0
   19954:	str	r5, [sl]
   19958:	b	19750 <fts_children@@Base+0x2490>
   1995c:	mov	r3, #36	; 0x24
   19960:	mvn	r4, #0
   19964:	str	r3, [sl]
   19968:	b	19750 <fts_children@@Base+0x2490>
   1996c:	ldr	r0, [sp, #8]
   19970:	str	r3, [sp, #4]
   19974:	bl	119d0 <fchdir@plt>
   19978:	ldr	r3, [sp, #4]
   1997c:	subs	r4, r0, #0
   19980:	bne	19944 <fts_children@@Base+0x2684>
   19984:	mov	r0, r3
   19988:	bl	1968c <fts_children@@Base+0x23cc>
   1998c:	b	19750 <fts_children@@Base+0x2490>
   19990:	bl	1173c <__stack_chk_fail@plt>
   19994:	ldr	r3, [pc, #160]	; 19a3c <fts_children@@Base+0x277c>
   19998:	mov	r2, #178	; 0xb2
   1999c:	ldr	r0, [pc, #156]	; 19a40 <fts_children@@Base+0x2780>
   199a0:	ldr	r1, [pc, #156]	; 19a44 <fts_children@@Base+0x2784>
   199a4:	add	r3, pc, r3
   199a8:	add	r0, pc, r0
   199ac:	add	r3, r3, #12
   199b0:	add	r1, pc, r1
   199b4:	bl	11a60 <__assert_fail@plt>
   199b8:	ldr	r3, [pc, #136]	; 19a48 <fts_children@@Base+0x2788>
   199bc:	mov	r2, #162	; 0xa2
   199c0:	ldr	r0, [pc, #132]	; 19a4c <fts_children@@Base+0x278c>
   199c4:	ldr	r1, [pc, #132]	; 19a50 <fts_children@@Base+0x2790>
   199c8:	add	r3, pc, r3
   199cc:	add	r0, pc, r0
   199d0:	add	r3, r3, #12
   199d4:	add	r1, pc, r1
   199d8:	bl	11a60 <__assert_fail@plt>
   199dc:	ldr	r3, [pc, #112]	; 19a54 <fts_children@@Base+0x2794>
   199e0:	mov	r2, #125	; 0x7d
   199e4:	ldr	r0, [pc, #108]	; 19a58 <fts_children@@Base+0x2798>
   199e8:	ldr	r1, [pc, #108]	; 19a5c <fts_children@@Base+0x279c>
   199ec:	add	r3, pc, r3
   199f0:	add	r0, pc, r0
   199f4:	add	r3, r3, #12
   199f8:	add	r1, pc, r1
   199fc:	bl	11a60 <__assert_fail@plt>
   19a00:	ldr	r3, [pc, #88]	; 19a60 <fts_children@@Base+0x27a0>
   19a04:	mov	r2, #126	; 0x7e
   19a08:	ldr	r0, [pc, #84]	; 19a64 <fts_children@@Base+0x27a4>
   19a0c:	ldr	r1, [pc, #84]	; 19a68 <fts_children@@Base+0x27a8>
   19a10:	add	r3, pc, r3
   19a14:	add	r0, pc, r0
   19a18:	add	r3, r3, #12
   19a1c:	add	r1, pc, r1
   19a20:	bl	11a60 <__assert_fail@plt>
   19a24:	andeq	r3, r1, r4, ror #17
   19a28:	andeq	r0, r0, r8, ror #2
   19a2c:	andeq	r1, r0, r4, asr #25
   19a30:	andeq	r2, r0, r8, lsl #11
   19a34:	ldrdeq	r2, [r0], -r4
   19a38:	andeq	r2, r0, r4, lsr #11
   19a3c:	andeq	r2, r0, ip, ror #7
   19a40:	andeq	r2, r0, r4, asr r4
   19a44:	andeq	r2, r0, r8, lsl #8
   19a48:	andeq	r2, r0, r8, asr #7
   19a4c:	andeq	r2, r0, r0, lsr #8
   19a50:	andeq	r2, r0, r4, ror #7
   19a54:	andeq	r2, r0, r4, lsr #7
   19a58:	ldrdeq	r2, [r0], -ip
   19a5c:	andeq	r2, r0, r0, asr #7
   19a60:	andeq	r2, r0, r0, lsl #7
   19a64:	andeq	r2, r0, r0, asr #7
   19a68:	muleq	r0, ip, r3
   19a6c:	push	{r4, r5, r6, lr}
   19a70:	sub	sp, sp, #8
   19a74:	mov	r4, r0
   19a78:	bl	11928 <fileno@plt>
   19a7c:	cmp	r0, #0
   19a80:	mov	r0, r4
   19a84:	blt	19b00 <fts_children@@Base+0x2840>
   19a88:	bl	11838 <__freading@plt>
   19a8c:	cmp	r0, #0
   19a90:	bne	19acc <fts_children@@Base+0x280c>
   19a94:	mov	r0, r4
   19a98:	bl	19c80 <fts_children@@Base+0x29c0>
   19a9c:	cmp	r0, #0
   19aa0:	beq	19afc <fts_children@@Base+0x283c>
   19aa4:	bl	118e0 <__errno_location@plt>
   19aa8:	ldr	r6, [r0]
   19aac:	mov	r5, r0
   19ab0:	mov	r0, r4
   19ab4:	bl	11964 <fclose@plt>
   19ab8:	cmp	r6, #0
   19abc:	mvnne	r0, #0
   19ac0:	strne	r6, [r5]
   19ac4:	add	sp, sp, #8
   19ac8:	pop	{r4, r5, r6, pc}
   19acc:	mov	r0, r4
   19ad0:	bl	11928 <fileno@plt>
   19ad4:	mov	r1, #1
   19ad8:	mov	r2, #0
   19adc:	mov	r3, #0
   19ae0:	str	r1, [sp]
   19ae4:	bl	117b4 <lseek64@plt>
   19ae8:	mvn	r2, #0
   19aec:	mvn	r3, #0
   19af0:	cmp	r1, r3
   19af4:	cmpeq	r0, r2
   19af8:	bne	19a94 <fts_children@@Base+0x27d4>
   19afc:	mov	r0, r4
   19b00:	add	sp, sp, #8
   19b04:	pop	{r4, r5, r6, lr}
   19b08:	b	11964 <fclose@plt>
   19b0c:	push	{r1, r2, r3}
   19b10:	movw	ip, #1030	; 0x406
   19b14:	ldr	r3, [pc, #336]	; 19c6c <fts_children@@Base+0x29ac>
   19b18:	push	{r4, r5, r6, r7, r8, lr}
   19b1c:	add	r3, pc, r3
   19b20:	ldr	lr, [pc, #328]	; 19c70 <fts_children@@Base+0x29b0>
   19b24:	sub	sp, sp, #12
   19b28:	add	r2, sp, #40	; 0x28
   19b2c:	mov	r6, r0
   19b30:	ldr	r1, [sp, #36]	; 0x24
   19b34:	ldr	r4, [r3, lr]
   19b38:	cmp	r1, ip
   19b3c:	str	r2, [sp]
   19b40:	ldr	r3, [r4]
   19b44:	str	r3, [sp, #4]
   19b48:	bne	19bcc <fts_children@@Base+0x290c>
   19b4c:	ldr	r8, [pc, #288]	; 19c74 <fts_children@@Base+0x29b4>
   19b50:	add	r3, sp, #44	; 0x2c
   19b54:	str	r3, [sp]
   19b58:	add	r8, pc, r8
   19b5c:	ldr	r7, [sp, #40]	; 0x28
   19b60:	ldr	r3, [r8]
   19b64:	mov	r2, r7
   19b68:	cmp	r3, #0
   19b6c:	blt	19c58 <fts_children@@Base+0x2998>
   19b70:	bl	118d4 <fcntl@plt>
   19b74:	subs	r5, r0, #0
   19b78:	blt	19bdc <fts_children@@Base+0x291c>
   19b7c:	ldr	r3, [pc, #244]	; 19c78 <fts_children@@Base+0x29b8>
   19b80:	mov	r2, #1
   19b84:	add	r3, pc, r3
   19b88:	str	r2, [r3]
   19b8c:	cmp	r5, #0
   19b90:	blt	19ba8 <fts_children@@Base+0x28e8>
   19b94:	ldr	r3, [pc, #224]	; 19c7c <fts_children@@Base+0x29bc>
   19b98:	add	r3, pc, r3
   19b9c:	ldr	r3, [r3]
   19ba0:	cmn	r3, #1
   19ba4:	beq	19c0c <fts_children@@Base+0x294c>
   19ba8:	ldr	r2, [sp, #4]
   19bac:	mov	r0, r5
   19bb0:	ldr	r3, [r4]
   19bb4:	cmp	r2, r3
   19bb8:	bne	19c68 <fts_children@@Base+0x29a8>
   19bbc:	add	sp, sp, #12
   19bc0:	pop	{r4, r5, r6, r7, r8, lr}
   19bc4:	add	sp, sp, #12
   19bc8:	bx	lr
   19bcc:	ldr	r2, [sp, #40]	; 0x28
   19bd0:	bl	118d4 <fcntl@plt>
   19bd4:	mov	r5, r0
   19bd8:	b	19ba8 <fts_children@@Base+0x28e8>
   19bdc:	bl	118e0 <__errno_location@plt>
   19be0:	ldr	r3, [r0]
   19be4:	cmp	r3, #22
   19be8:	bne	19b7c <fts_children@@Base+0x28bc>
   19bec:	mov	r0, r6
   19bf0:	mov	r2, r7
   19bf4:	mov	r1, #0
   19bf8:	bl	19b0c <fts_children@@Base+0x284c>
   19bfc:	subs	r5, r0, #0
   19c00:	blt	19ba8 <fts_children@@Base+0x28e8>
   19c04:	mvn	r3, #0
   19c08:	str	r3, [r8]
   19c0c:	mov	r0, r5
   19c10:	mov	r1, #1
   19c14:	bl	118d4 <fcntl@plt>
   19c18:	subs	r2, r0, #0
   19c1c:	blt	19c38 <fts_children@@Base+0x2978>
   19c20:	orr	r2, r2, #1
   19c24:	mov	r0, r5
   19c28:	mov	r1, #2
   19c2c:	bl	118d4 <fcntl@plt>
   19c30:	cmn	r0, #1
   19c34:	bne	19ba8 <fts_children@@Base+0x28e8>
   19c38:	bl	118e0 <__errno_location@plt>
   19c3c:	ldr	r7, [r0]
   19c40:	mov	r6, r0
   19c44:	mov	r0, r5
   19c48:	mvn	r5, #0
   19c4c:	bl	11a3c <close@plt>
   19c50:	str	r7, [r6]
   19c54:	b	19ba8 <fts_children@@Base+0x28e8>
   19c58:	mov	r1, #0
   19c5c:	bl	19b0c <fts_children@@Base+0x284c>
   19c60:	mov	r5, r0
   19c64:	b	19b8c <fts_children@@Base+0x28cc>
   19c68:	bl	1173c <__stack_chk_fail@plt>
   19c6c:	ldrdeq	r3, [r1], -ip
   19c70:	andeq	r0, r0, r8, ror #2
   19c74:	andeq	r3, r1, ip, lsl #16
   19c78:	andeq	r3, r1, r0, ror #15
   19c7c:	andeq	r3, r1, ip, asr #15
   19c80:	push	{r4, lr}
   19c84:	subs	r4, r0, #0
   19c88:	sub	sp, sp, #8
   19c8c:	beq	19c9c <fts_children@@Base+0x29dc>
   19c90:	bl	11838 <__freading@plt>
   19c94:	cmp	r0, #0
   19c98:	bne	19cac <fts_children@@Base+0x29ec>
   19c9c:	mov	r0, r4
   19ca0:	add	sp, sp, #8
   19ca4:	pop	{r4, lr}
   19ca8:	b	116b8 <fflush@plt>
   19cac:	ldr	r3, [r4]
   19cb0:	tst	r3, #256	; 0x100
   19cb4:	beq	19c9c <fts_children@@Base+0x29dc>
   19cb8:	mov	r3, #1
   19cbc:	mov	r0, r4
   19cc0:	str	r3, [sp]
   19cc4:	mov	r2, #0
   19cc8:	mov	r3, #0
   19ccc:	bl	19ce0 <fts_children@@Base+0x2a20>
   19cd0:	mov	r0, r4
   19cd4:	add	sp, sp, #8
   19cd8:	pop	{r4, lr}
   19cdc:	b	116b8 <fflush@plt>
   19ce0:	push	{r4, r5, r6, r7, lr}
   19ce4:	sub	sp, sp, #20
   19ce8:	ldmib	r0, {r1, ip}
   19cec:	mov	r6, r0
   19cf0:	ldr	r4, [sp, #40]	; 0x28
   19cf4:	cmp	ip, r1
   19cf8:	beq	19d10 <fts_children@@Base+0x2a50>
   19cfc:	str	r4, [sp, #40]	; 0x28
   19d00:	mov	r0, r6
   19d04:	add	sp, sp, #20
   19d08:	pop	{r4, r5, r6, r7, lr}
   19d0c:	b	11970 <fseeko64@plt>
   19d10:	ldr	ip, [r0, #20]
   19d14:	ldr	r1, [r0, #16]
   19d18:	cmp	ip, r1
   19d1c:	bne	19cfc <fts_children@@Base+0x2a3c>
   19d20:	ldr	r7, [r0, #36]	; 0x24
   19d24:	cmp	r7, #0
   19d28:	bne	19cfc <fts_children@@Base+0x2a3c>
   19d2c:	str	r2, [sp, #12]
   19d30:	mvn	r5, #0
   19d34:	str	r3, [sp, #8]
   19d38:	bl	11928 <fileno@plt>
   19d3c:	str	r4, [sp]
   19d40:	mvn	r4, #0
   19d44:	ldr	r2, [sp, #12]
   19d48:	ldr	r3, [sp, #8]
   19d4c:	bl	117b4 <lseek64@plt>
   19d50:	mov	r2, r0
   19d54:	mov	r3, r1
   19d58:	cmp	r3, r5
   19d5c:	cmpeq	r2, r4
   19d60:	beq	19d80 <fts_children@@Base+0x2ac0>
   19d64:	ldr	r1, [r6]
   19d68:	mov	r0, r7
   19d6c:	strd	r2, [r6, #80]	; 0x50
   19d70:	bic	r3, r1, #16
   19d74:	str	r3, [r6]
   19d78:	add	sp, sp, #20
   19d7c:	pop	{r4, r5, r6, r7, pc}
   19d80:	mvn	r0, #0
   19d84:	b	19d78 <fts_children@@Base+0x2ab8>
   19d88:	ldr	r3, [pc, #316]	; 19ecc <fts_children@@Base+0x2c0c>
   19d8c:	ldr	ip, [pc, #316]	; 19ed0 <fts_children@@Base+0x2c10>
   19d90:	add	r3, pc, r3
   19d94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d98:	mov	r5, r2
   19d9c:	ldr	r6, [r3, ip]
   19da0:	sub	sp, sp, #52	; 0x34
   19da4:	ldrb	r2, [r2]
   19da8:	mov	r4, r0
   19dac:	mov	r7, r1
   19db0:	ldr	r3, [r6]
   19db4:	cmp	r2, #0
   19db8:	strbeq	r2, [r0]
   19dbc:	moveq	r0, r0
   19dc0:	str	r3, [sp, #44]	; 0x2c
   19dc4:	beq	19e1c <fts_children@@Base+0x2b5c>
   19dc8:	ldr	r9, [pc, #260]	; 19ed4 <fts_children@@Base+0x2c14>
   19dcc:	add	r9, pc, r9
   19dd0:	ldr	r8, [r9]
   19dd4:	cmp	r8, #0
   19dd8:	beq	19e48 <fts_children@@Base+0x2b88>
   19ddc:	cmp	r8, #0
   19de0:	blt	19e40 <fts_children@@Base+0x2b80>
   19de4:	mov	r0, r5
   19de8:	bl	118a4 <strlen@plt>
   19dec:	add	r0, r0, #27
   19df0:	cmp	r0, #4032	; 0xfc0
   19df4:	bhi	19e34 <fts_children@@Base+0x2b74>
   19df8:	ldr	r3, [pc, #216]	; 19ed8 <fts_children@@Base+0x2c18>
   19dfc:	mov	r0, r4
   19e00:	str	r7, [sp]
   19e04:	mov	r1, #1
   19e08:	str	r5, [sp, #4]
   19e0c:	mvn	r2, #0
   19e10:	add	r3, pc, r3
   19e14:	bl	118ec <__sprintf_chk@plt>
   19e18:	mov	r0, r4
   19e1c:	ldr	r2, [sp, #44]	; 0x2c
   19e20:	ldr	r3, [r6]
   19e24:	cmp	r2, r3
   19e28:	bne	19ec8 <fts_children@@Base+0x2c08>
   19e2c:	add	sp, sp, #52	; 0x34
   19e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e34:	bl	11820 <malloc@plt>
   19e38:	subs	r4, r0, #0
   19e3c:	bne	19df8 <fts_children@@Base+0x2b38>
   19e40:	mov	r0, #0
   19e44:	b	19e1c <fts_children@@Base+0x2b5c>
   19e48:	ldr	r0, [pc, #140]	; 19edc <fts_children@@Base+0x2c1c>
   19e4c:	mov	r1, #18688	; 0x4900
   19e50:	add	r0, pc, r0
   19e54:	bl	117fc <open64@plt>
   19e58:	subs	sl, r0, #0
   19e5c:	blt	19eb8 <fts_children@@Base+0x2bf8>
   19e60:	ldr	r3, [pc, #120]	; 19ee0 <fts_children@@Base+0x2c20>
   19e64:	add	fp, sp, #12
   19e68:	mov	r2, #32
   19e6c:	mov	r1, #1
   19e70:	add	r3, pc, r3
   19e74:	str	r3, [sp, #4]
   19e78:	ldr	r3, [pc, #100]	; 19ee4 <fts_children@@Base+0x2c24>
   19e7c:	mov	r0, fp
   19e80:	str	sl, [sp]
   19e84:	add	r3, pc, r3
   19e88:	bl	118ec <__sprintf_chk@plt>
   19e8c:	mov	r1, r8
   19e90:	mov	r0, fp
   19e94:	bl	11958 <access@plt>
   19e98:	cmp	r0, #0
   19e9c:	mov	r0, sl
   19ea0:	moveq	r3, #1
   19ea4:	mvnne	r3, #0
   19ea8:	str	r3, [r9]
   19eac:	bl	11a3c <close@plt>
   19eb0:	ldr	r8, [r9]
   19eb4:	b	19ddc <fts_children@@Base+0x2b1c>
   19eb8:	mvn	r3, #0
   19ebc:	mov	r0, r8
   19ec0:	str	r3, [r9]
   19ec4:	b	19e1c <fts_children@@Base+0x2b5c>
   19ec8:	bl	1173c <__stack_chk_fail@plt>
   19ecc:	andeq	r3, r1, r8, ror #4
   19ed0:	andeq	r0, r0, r8, ror #2
   19ed4:	muleq	r1, ip, r5
   19ed8:	andeq	r2, r0, r0, lsl r0
   19edc:	andeq	r1, r0, r0, asr #31
   19ee0:	andeq	r1, r0, r4, asr #31
   19ee4:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   19ee8:	subs	r2, r1, #1
   19eec:	bxeq	lr
   19ef0:	bcc	1a0c8 <fts_children@@Base+0x2e08>
   19ef4:	cmp	r0, r1
   19ef8:	bls	1a0ac <fts_children@@Base+0x2dec>
   19efc:	tst	r1, r2
   19f00:	beq	1a0b8 <fts_children@@Base+0x2df8>
   19f04:	clz	r3, r0
   19f08:	clz	r2, r1
   19f0c:	sub	r3, r2, r3
   19f10:	rsbs	r3, r3, #31
   19f14:	addne	r3, r3, r3, lsl #1
   19f18:	mov	r2, #0
   19f1c:	addne	pc, pc, r3, lsl #2
   19f20:	nop	{0}
   19f24:	cmp	r0, r1, lsl #31
   19f28:	adc	r2, r2, r2
   19f2c:	subcs	r0, r0, r1, lsl #31
   19f30:	cmp	r0, r1, lsl #30
   19f34:	adc	r2, r2, r2
   19f38:	subcs	r0, r0, r1, lsl #30
   19f3c:	cmp	r0, r1, lsl #29
   19f40:	adc	r2, r2, r2
   19f44:	subcs	r0, r0, r1, lsl #29
   19f48:	cmp	r0, r1, lsl #28
   19f4c:	adc	r2, r2, r2
   19f50:	subcs	r0, r0, r1, lsl #28
   19f54:	cmp	r0, r1, lsl #27
   19f58:	adc	r2, r2, r2
   19f5c:	subcs	r0, r0, r1, lsl #27
   19f60:	cmp	r0, r1, lsl #26
   19f64:	adc	r2, r2, r2
   19f68:	subcs	r0, r0, r1, lsl #26
   19f6c:	cmp	r0, r1, lsl #25
   19f70:	adc	r2, r2, r2
   19f74:	subcs	r0, r0, r1, lsl #25
   19f78:	cmp	r0, r1, lsl #24
   19f7c:	adc	r2, r2, r2
   19f80:	subcs	r0, r0, r1, lsl #24
   19f84:	cmp	r0, r1, lsl #23
   19f88:	adc	r2, r2, r2
   19f8c:	subcs	r0, r0, r1, lsl #23
   19f90:	cmp	r0, r1, lsl #22
   19f94:	adc	r2, r2, r2
   19f98:	subcs	r0, r0, r1, lsl #22
   19f9c:	cmp	r0, r1, lsl #21
   19fa0:	adc	r2, r2, r2
   19fa4:	subcs	r0, r0, r1, lsl #21
   19fa8:	cmp	r0, r1, lsl #20
   19fac:	adc	r2, r2, r2
   19fb0:	subcs	r0, r0, r1, lsl #20
   19fb4:	cmp	r0, r1, lsl #19
   19fb8:	adc	r2, r2, r2
   19fbc:	subcs	r0, r0, r1, lsl #19
   19fc0:	cmp	r0, r1, lsl #18
   19fc4:	adc	r2, r2, r2
   19fc8:	subcs	r0, r0, r1, lsl #18
   19fcc:	cmp	r0, r1, lsl #17
   19fd0:	adc	r2, r2, r2
   19fd4:	subcs	r0, r0, r1, lsl #17
   19fd8:	cmp	r0, r1, lsl #16
   19fdc:	adc	r2, r2, r2
   19fe0:	subcs	r0, r0, r1, lsl #16
   19fe4:	cmp	r0, r1, lsl #15
   19fe8:	adc	r2, r2, r2
   19fec:	subcs	r0, r0, r1, lsl #15
   19ff0:	cmp	r0, r1, lsl #14
   19ff4:	adc	r2, r2, r2
   19ff8:	subcs	r0, r0, r1, lsl #14
   19ffc:	cmp	r0, r1, lsl #13
   1a000:	adc	r2, r2, r2
   1a004:	subcs	r0, r0, r1, lsl #13
   1a008:	cmp	r0, r1, lsl #12
   1a00c:	adc	r2, r2, r2
   1a010:	subcs	r0, r0, r1, lsl #12
   1a014:	cmp	r0, r1, lsl #11
   1a018:	adc	r2, r2, r2
   1a01c:	subcs	r0, r0, r1, lsl #11
   1a020:	cmp	r0, r1, lsl #10
   1a024:	adc	r2, r2, r2
   1a028:	subcs	r0, r0, r1, lsl #10
   1a02c:	cmp	r0, r1, lsl #9
   1a030:	adc	r2, r2, r2
   1a034:	subcs	r0, r0, r1, lsl #9
   1a038:	cmp	r0, r1, lsl #8
   1a03c:	adc	r2, r2, r2
   1a040:	subcs	r0, r0, r1, lsl #8
   1a044:	cmp	r0, r1, lsl #7
   1a048:	adc	r2, r2, r2
   1a04c:	subcs	r0, r0, r1, lsl #7
   1a050:	cmp	r0, r1, lsl #6
   1a054:	adc	r2, r2, r2
   1a058:	subcs	r0, r0, r1, lsl #6
   1a05c:	cmp	r0, r1, lsl #5
   1a060:	adc	r2, r2, r2
   1a064:	subcs	r0, r0, r1, lsl #5
   1a068:	cmp	r0, r1, lsl #4
   1a06c:	adc	r2, r2, r2
   1a070:	subcs	r0, r0, r1, lsl #4
   1a074:	cmp	r0, r1, lsl #3
   1a078:	adc	r2, r2, r2
   1a07c:	subcs	r0, r0, r1, lsl #3
   1a080:	cmp	r0, r1, lsl #2
   1a084:	adc	r2, r2, r2
   1a088:	subcs	r0, r0, r1, lsl #2
   1a08c:	cmp	r0, r1, lsl #1
   1a090:	adc	r2, r2, r2
   1a094:	subcs	r0, r0, r1, lsl #1
   1a098:	cmp	r0, r1
   1a09c:	adc	r2, r2, r2
   1a0a0:	subcs	r0, r0, r1
   1a0a4:	mov	r0, r2
   1a0a8:	bx	lr
   1a0ac:	moveq	r0, #1
   1a0b0:	movne	r0, #0
   1a0b4:	bx	lr
   1a0b8:	clz	r2, r1
   1a0bc:	rsb	r2, r2, #31
   1a0c0:	lsr	r0, r0, r2
   1a0c4:	bx	lr
   1a0c8:	cmp	r0, #0
   1a0cc:	mvnne	r0, #0
   1a0d0:	b	1a130 <fts_children@@Base+0x2e70>
   1a0d4:	cmp	r1, #0
   1a0d8:	beq	1a0c8 <fts_children@@Base+0x2e08>
   1a0dc:	push	{r0, r1, lr}
   1a0e0:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a0e4:	pop	{r1, r2, lr}
   1a0e8:	mul	r3, r2, r0
   1a0ec:	sub	r1, r1, r3
   1a0f0:	bx	lr
   1a0f4:	cmp	r3, #0
   1a0f8:	cmpeq	r2, #0
   1a0fc:	bne	1a114 <fts_children@@Base+0x2e54>
   1a100:	cmp	r1, #0
   1a104:	cmpeq	r0, #0
   1a108:	mvnne	r1, #0
   1a10c:	mvnne	r0, #0
   1a110:	b	1a130 <fts_children@@Base+0x2e70>
   1a114:	sub	sp, sp, #8
   1a118:	push	{sp, lr}
   1a11c:	bl	1a17c <fts_children@@Base+0x2ebc>
   1a120:	ldr	lr, [sp, #4]
   1a124:	add	sp, sp, #8
   1a128:	pop	{r2, r3}
   1a12c:	bx	lr
   1a130:	push	{r1, lr}
   1a134:	mov	r0, #8
   1a138:	bl	116a0 <raise@plt>
   1a13c:	pop	{r1, pc}
   1a140:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a144:	mov	r8, r2
   1a148:	mov	r6, r0
   1a14c:	mov	r7, r1
   1a150:	mov	sl, r3
   1a154:	ldr	r9, [sp, #32]
   1a158:	bl	1a1b8 <fts_children@@Base+0x2ef8>
   1a15c:	umull	r4, r5, r8, r0
   1a160:	mul	r8, r8, r1
   1a164:	mla	r2, r0, sl, r8
   1a168:	add	r5, r2, r5
   1a16c:	subs	r4, r6, r4
   1a170:	sbc	r5, r7, r5
   1a174:	strd	r4, [r9]
   1a178:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a17c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a180:	mov	r8, r2
   1a184:	mov	r6, r0
   1a188:	mov	r7, r1
   1a18c:	mov	r5, r3
   1a190:	ldr	r9, [sp, #32]
   1a194:	bl	1a644 <fts_children@@Base+0x3384>
   1a198:	mul	r3, r0, r5
   1a19c:	umull	r4, r5, r0, r8
   1a1a0:	mla	r8, r8, r1, r3
   1a1a4:	add	r5, r8, r5
   1a1a8:	subs	r4, r6, r4
   1a1ac:	sbc	r5, r7, r5
   1a1b0:	strd	r4, [r9]
   1a1b4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a1b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a1bc:	rsbs	r4, r0, #0
   1a1c0:	rsc	r5, r1, #0
   1a1c4:	cmp	r1, #0
   1a1c8:	mvn	r6, #0
   1a1cc:	sub	sp, sp, #12
   1a1d0:	movge	r4, r0
   1a1d4:	movge	r5, r1
   1a1d8:	movge	r6, #0
   1a1dc:	cmp	r3, #0
   1a1e0:	blt	1a418 <fts_children@@Base+0x3158>
   1a1e4:	cmp	r3, #0
   1a1e8:	mov	sl, r4
   1a1ec:	mov	ip, r5
   1a1f0:	mov	r0, r2
   1a1f4:	mov	r1, r3
   1a1f8:	mov	r8, r2
   1a1fc:	mov	r7, r4
   1a200:	mov	r9, r5
   1a204:	bne	1a2fc <fts_children@@Base+0x303c>
   1a208:	cmp	r2, r5
   1a20c:	bls	1a338 <fts_children@@Base+0x3078>
   1a210:	clz	r3, r2
   1a214:	cmp	r3, #0
   1a218:	rsbne	r2, r3, #32
   1a21c:	lslne	r8, r0, r3
   1a220:	lsrne	r2, r4, r2
   1a224:	lslne	r7, r4, r3
   1a228:	orrne	r9, r2, r5, lsl r3
   1a22c:	lsr	r4, r8, #16
   1a230:	uxth	sl, r8
   1a234:	mov	r1, r4
   1a238:	mov	r0, r9
   1a23c:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a240:	mov	r1, r4
   1a244:	mov	fp, r0
   1a248:	mov	r0, r9
   1a24c:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a250:	mul	r0, sl, fp
   1a254:	lsr	r2, r7, #16
   1a258:	orr	r1, r2, r1, lsl #16
   1a25c:	cmp	r0, r1
   1a260:	bls	1a284 <fts_children@@Base+0x2fc4>
   1a264:	adds	r1, r1, r8
   1a268:	sub	r3, fp, #1
   1a26c:	bcs	1a280 <fts_children@@Base+0x2fc0>
   1a270:	cmp	r0, r1
   1a274:	subhi	fp, fp, #2
   1a278:	addhi	r1, r1, r8
   1a27c:	bhi	1a284 <fts_children@@Base+0x2fc4>
   1a280:	mov	fp, r3
   1a284:	rsb	r9, r0, r1
   1a288:	mov	r1, r4
   1a28c:	uxth	r7, r7
   1a290:	mov	r0, r9
   1a294:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a298:	mov	r1, r4
   1a29c:	mov	r5, r0
   1a2a0:	mov	r0, r9
   1a2a4:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a2a8:	mul	sl, sl, r5
   1a2ac:	orr	r1, r7, r1, lsl #16
   1a2b0:	cmp	sl, r1
   1a2b4:	bls	1a2d4 <fts_children@@Base+0x3014>
   1a2b8:	adds	r8, r1, r8
   1a2bc:	sub	r3, r5, #1
   1a2c0:	bcs	1a2d0 <fts_children@@Base+0x3010>
   1a2c4:	cmp	sl, r8
   1a2c8:	subhi	r5, r5, #2
   1a2cc:	bhi	1a2d4 <fts_children@@Base+0x3014>
   1a2d0:	mov	r5, r3
   1a2d4:	orr	r3, r5, fp, lsl #16
   1a2d8:	mov	r4, #0
   1a2dc:	cmp	r6, #0
   1a2e0:	mov	r0, r3
   1a2e4:	mov	r1, r4
   1a2e8:	beq	1a2f4 <fts_children@@Base+0x3034>
   1a2ec:	rsbs	r0, r0, #0
   1a2f0:	rsc	r1, r1, #0
   1a2f4:	add	sp, sp, #12
   1a2f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a2fc:	cmp	r3, r5
   1a300:	movhi	r4, #0
   1a304:	movhi	r3, r4
   1a308:	bhi	1a2dc <fts_children@@Base+0x301c>
   1a30c:	clz	r5, r1
   1a310:	cmp	r5, #0
   1a314:	bne	1a504 <fts_children@@Base+0x3244>
   1a318:	cmp	r1, ip
   1a31c:	cmpcs	r2, sl
   1a320:	movhi	r4, #0
   1a324:	movls	r4, #1
   1a328:	movls	r3, #1
   1a32c:	movls	r4, r5
   1a330:	movhi	r3, r4
   1a334:	b	1a2dc <fts_children@@Base+0x301c>
   1a338:	cmp	r2, #0
   1a33c:	bne	1a350 <fts_children@@Base+0x3090>
   1a340:	mov	r1, r2
   1a344:	mov	r0, #1
   1a348:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a34c:	mov	r8, r0
   1a350:	clz	r3, r8
   1a354:	cmp	r3, #0
   1a358:	bne	1a428 <fts_children@@Base+0x3168>
   1a35c:	rsb	r9, r8, r9
   1a360:	lsr	r5, r8, #16
   1a364:	uxth	sl, r8
   1a368:	mov	r4, #1
   1a36c:	mov	r1, r5
   1a370:	mov	r0, r9
   1a374:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a378:	mov	r1, r5
   1a37c:	mov	fp, r0
   1a380:	mov	r0, r9
   1a384:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a388:	mul	r0, sl, fp
   1a38c:	lsr	r2, r7, #16
   1a390:	orr	r1, r2, r1, lsl #16
   1a394:	cmp	r0, r1
   1a398:	bls	1a3b8 <fts_children@@Base+0x30f8>
   1a39c:	adds	r1, r1, r8
   1a3a0:	sub	r3, fp, #1
   1a3a4:	bcs	1a624 <fts_children@@Base+0x3364>
   1a3a8:	cmp	r0, r1
   1a3ac:	subhi	fp, fp, #2
   1a3b0:	addhi	r1, r1, r8
   1a3b4:	bls	1a624 <fts_children@@Base+0x3364>
   1a3b8:	rsb	r2, r0, r1
   1a3bc:	mov	r1, r5
   1a3c0:	str	r2, [sp]
   1a3c4:	uxth	r7, r7
   1a3c8:	mov	r0, r2
   1a3cc:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a3d0:	ldr	r2, [sp]
   1a3d4:	mov	r1, r5
   1a3d8:	mov	r9, r0
   1a3dc:	mov	r0, r2
   1a3e0:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a3e4:	mul	sl, sl, r9
   1a3e8:	orr	r1, r7, r1, lsl #16
   1a3ec:	cmp	sl, r1
   1a3f0:	bls	1a410 <fts_children@@Base+0x3150>
   1a3f4:	adds	r8, r1, r8
   1a3f8:	sub	r3, r9, #1
   1a3fc:	bcs	1a40c <fts_children@@Base+0x314c>
   1a400:	cmp	sl, r8
   1a404:	subhi	r9, r9, #2
   1a408:	bhi	1a410 <fts_children@@Base+0x3150>
   1a40c:	mov	r9, r3
   1a410:	orr	r3, r9, fp, lsl #16
   1a414:	b	1a2dc <fts_children@@Base+0x301c>
   1a418:	mvn	r6, r6
   1a41c:	rsbs	r2, r2, #0
   1a420:	rsc	r3, r3, #0
   1a424:	b	1a1e4 <fts_children@@Base+0x2f24>
   1a428:	lsl	r8, r8, r3
   1a42c:	rsb	fp, r3, #32
   1a430:	lsr	r4, r9, fp
   1a434:	lsr	fp, r7, fp
   1a438:	lsr	r5, r8, #16
   1a43c:	orr	fp, fp, r9, lsl r3
   1a440:	mov	r0, r4
   1a444:	lsl	r7, r7, r3
   1a448:	mov	r1, r5
   1a44c:	uxth	sl, r8
   1a450:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a454:	mov	r1, r5
   1a458:	mov	r3, r0
   1a45c:	mov	r0, r4
   1a460:	str	r3, [sp]
   1a464:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a468:	ldr	r3, [sp]
   1a46c:	lsr	r2, fp, #16
   1a470:	mul	r0, sl, r3
   1a474:	orr	r1, r2, r1, lsl #16
   1a478:	cmp	r0, r1
   1a47c:	bls	1a49c <fts_children@@Base+0x31dc>
   1a480:	adds	r1, r1, r8
   1a484:	sub	r2, r3, #1
   1a488:	bcs	1a63c <fts_children@@Base+0x337c>
   1a48c:	cmp	r0, r1
   1a490:	subhi	r3, r3, #2
   1a494:	addhi	r1, r1, r8
   1a498:	bls	1a63c <fts_children@@Base+0x337c>
   1a49c:	rsb	r9, r0, r1
   1a4a0:	mov	r1, r5
   1a4a4:	str	r3, [sp]
   1a4a8:	uxth	fp, fp
   1a4ac:	mov	r0, r9
   1a4b0:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a4b4:	mov	r1, r5
   1a4b8:	mov	r4, r0
   1a4bc:	mov	r0, r9
   1a4c0:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a4c4:	mul	r9, sl, r4
   1a4c8:	ldr	r3, [sp]
   1a4cc:	orr	r1, fp, r1, lsl #16
   1a4d0:	cmp	r9, r1
   1a4d4:	bls	1a4f8 <fts_children@@Base+0x3238>
   1a4d8:	adds	r1, r1, r8
   1a4dc:	sub	r2, r4, #1
   1a4e0:	bcs	1a4f4 <fts_children@@Base+0x3234>
   1a4e4:	cmp	r9, r1
   1a4e8:	subhi	r4, r4, #2
   1a4ec:	addhi	r1, r1, r8
   1a4f0:	bhi	1a4f8 <fts_children@@Base+0x3238>
   1a4f4:	mov	r4, r2
   1a4f8:	rsb	r9, r9, r1
   1a4fc:	orr	r4, r4, r3, lsl #16
   1a500:	b	1a36c <fts_children@@Base+0x30ac>
   1a504:	rsb	sl, r5, #32
   1a508:	lsl	r3, r2, r5
   1a50c:	lsr	r0, r2, sl
   1a510:	lsr	r2, ip, sl
   1a514:	orr	r4, r0, r1, lsl r5
   1a518:	lsr	sl, r7, sl
   1a51c:	mov	r0, r2
   1a520:	orr	sl, sl, ip, lsl r5
   1a524:	lsr	r9, r4, #16
   1a528:	str	r3, [sp, #4]
   1a52c:	str	r2, [sp]
   1a530:	uxth	fp, r4
   1a534:	mov	r1, r9
   1a538:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a53c:	ldr	r2, [sp]
   1a540:	mov	r1, r9
   1a544:	mov	r8, r0
   1a548:	mov	r0, r2
   1a54c:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a550:	mul	r0, fp, r8
   1a554:	lsr	r2, sl, #16
   1a558:	orr	r1, r2, r1, lsl #16
   1a55c:	cmp	r0, r1
   1a560:	bls	1a580 <fts_children@@Base+0x32c0>
   1a564:	adds	r1, r1, r4
   1a568:	sub	r2, r8, #1
   1a56c:	bcs	1a634 <fts_children@@Base+0x3374>
   1a570:	cmp	r0, r1
   1a574:	subhi	r8, r8, #2
   1a578:	addhi	r1, r1, r4
   1a57c:	bls	1a634 <fts_children@@Base+0x3374>
   1a580:	rsb	ip, r0, r1
   1a584:	mov	r1, r9
   1a588:	str	ip, [sp]
   1a58c:	mov	r0, ip
   1a590:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a594:	ldr	ip, [sp]
   1a598:	mov	r1, r9
   1a59c:	mov	r2, r0
   1a5a0:	mov	r0, ip
   1a5a4:	str	r2, [sp]
   1a5a8:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a5ac:	ldr	r2, [sp]
   1a5b0:	uxth	ip, sl
   1a5b4:	mul	fp, fp, r2
   1a5b8:	orr	ip, ip, r1, lsl #16
   1a5bc:	cmp	fp, ip
   1a5c0:	bls	1a5e0 <fts_children@@Base+0x3320>
   1a5c4:	adds	ip, ip, r4
   1a5c8:	sub	r1, r2, #1
   1a5cc:	bcs	1a62c <fts_children@@Base+0x336c>
   1a5d0:	cmp	fp, ip
   1a5d4:	subhi	r2, r2, #2
   1a5d8:	addhi	ip, ip, r4
   1a5dc:	bls	1a62c <fts_children@@Base+0x336c>
   1a5e0:	ldr	r0, [sp, #4]
   1a5e4:	orr	r1, r2, r8, lsl #16
   1a5e8:	rsb	fp, fp, ip
   1a5ec:	umull	r2, r3, r1, r0
   1a5f0:	cmp	fp, r3
   1a5f4:	bcc	1a618 <fts_children@@Base+0x3358>
   1a5f8:	movne	r4, #0
   1a5fc:	moveq	r4, #1
   1a600:	cmp	r2, r7, lsl r5
   1a604:	movls	r4, #0
   1a608:	andhi	r4, r4, #1
   1a60c:	cmp	r4, #0
   1a610:	moveq	r3, r1
   1a614:	beq	1a2dc <fts_children@@Base+0x301c>
   1a618:	sub	r3, r1, #1
   1a61c:	mov	r4, #0
   1a620:	b	1a2dc <fts_children@@Base+0x301c>
   1a624:	mov	fp, r3
   1a628:	b	1a3b8 <fts_children@@Base+0x30f8>
   1a62c:	mov	r2, r1
   1a630:	b	1a5e0 <fts_children@@Base+0x3320>
   1a634:	mov	r8, r2
   1a638:	b	1a580 <fts_children@@Base+0x32c0>
   1a63c:	mov	r3, r2
   1a640:	b	1a49c <fts_children@@Base+0x31dc>
   1a644:	cmp	r3, #0
   1a648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a64c:	mov	r6, r0
   1a650:	sub	sp, sp, #12
   1a654:	mov	r5, r1
   1a658:	mov	r7, r0
   1a65c:	mov	r4, r2
   1a660:	mov	r8, r1
   1a664:	bne	1a744 <fts_children@@Base+0x3484>
   1a668:	cmp	r2, r1
   1a66c:	bls	1a780 <fts_children@@Base+0x34c0>
   1a670:	clz	r3, r2
   1a674:	cmp	r3, #0
   1a678:	rsbne	r8, r3, #32
   1a67c:	lslne	r4, r2, r3
   1a680:	lsrne	r8, r0, r8
   1a684:	lslne	r7, r0, r3
   1a688:	orrne	r8, r8, r1, lsl r3
   1a68c:	lsr	r5, r4, #16
   1a690:	uxth	sl, r4
   1a694:	mov	r1, r5
   1a698:	mov	r0, r8
   1a69c:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a6a0:	mov	r1, r5
   1a6a4:	mov	r9, r0
   1a6a8:	mov	r0, r8
   1a6ac:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a6b0:	mul	r0, sl, r9
   1a6b4:	lsr	r3, r7, #16
   1a6b8:	orr	r1, r3, r1, lsl #16
   1a6bc:	cmp	r0, r1
   1a6c0:	bls	1a6e4 <fts_children@@Base+0x3424>
   1a6c4:	adds	r1, r1, r4
   1a6c8:	sub	r2, r9, #1
   1a6cc:	bcs	1a6e0 <fts_children@@Base+0x3420>
   1a6d0:	cmp	r0, r1
   1a6d4:	subhi	r9, r9, #2
   1a6d8:	addhi	r1, r1, r4
   1a6dc:	bhi	1a6e4 <fts_children@@Base+0x3424>
   1a6e0:	mov	r9, r2
   1a6e4:	rsb	r8, r0, r1
   1a6e8:	mov	r1, r5
   1a6ec:	uxth	r7, r7
   1a6f0:	mov	r0, r8
   1a6f4:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a6f8:	mov	r1, r5
   1a6fc:	mov	r6, r0
   1a700:	mov	r0, r8
   1a704:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a708:	mul	sl, sl, r6
   1a70c:	orr	r1, r7, r1, lsl #16
   1a710:	cmp	sl, r1
   1a714:	bls	1a730 <fts_children@@Base+0x3470>
   1a718:	adds	r4, r1, r4
   1a71c:	sub	r3, r6, #1
   1a720:	bcs	1aa2c <fts_children@@Base+0x376c>
   1a724:	cmp	sl, r4
   1a728:	subhi	r6, r6, #2
   1a72c:	bls	1aa2c <fts_children@@Base+0x376c>
   1a730:	orr	r0, r6, r9, lsl #16
   1a734:	mov	r6, #0
   1a738:	mov	r1, r6
   1a73c:	add	sp, sp, #12
   1a740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a744:	cmp	r3, r1
   1a748:	movhi	r6, #0
   1a74c:	movhi	r0, r6
   1a750:	bhi	1a738 <fts_children@@Base+0x3478>
   1a754:	clz	r7, r3
   1a758:	cmp	r7, #0
   1a75c:	bne	1a85c <fts_children@@Base+0x359c>
   1a760:	cmp	r3, r1
   1a764:	cmpcs	r2, r6
   1a768:	movhi	r6, #0
   1a76c:	movls	r6, #1
   1a770:	movls	r0, #1
   1a774:	movls	r6, r7
   1a778:	movhi	r0, r6
   1a77c:	b	1a738 <fts_children@@Base+0x3478>
   1a780:	cmp	r2, #0
   1a784:	bne	1a798 <fts_children@@Base+0x34d8>
   1a788:	mov	r1, r2
   1a78c:	mov	r0, #1
   1a790:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a794:	mov	r4, r0
   1a798:	clz	r3, r4
   1a79c:	cmp	r3, #0
   1a7a0:	bne	1a958 <fts_children@@Base+0x3698>
   1a7a4:	rsb	r5, r4, r5
   1a7a8:	lsr	r8, r4, #16
   1a7ac:	uxth	sl, r4
   1a7b0:	mov	r6, #1
   1a7b4:	mov	r1, r8
   1a7b8:	mov	r0, r5
   1a7bc:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a7c0:	mov	r1, r8
   1a7c4:	mov	r9, r0
   1a7c8:	mov	r0, r5
   1a7cc:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a7d0:	mul	r0, sl, r9
   1a7d4:	lsr	r3, r7, #16
   1a7d8:	orr	r1, r3, r1, lsl #16
   1a7dc:	cmp	r0, r1
   1a7e0:	bls	1a800 <fts_children@@Base+0x3540>
   1a7e4:	adds	r1, r1, r4
   1a7e8:	sub	r2, r9, #1
   1a7ec:	bcs	1aa34 <fts_children@@Base+0x3774>
   1a7f0:	cmp	r0, r1
   1a7f4:	subhi	r9, r9, #2
   1a7f8:	addhi	r1, r1, r4
   1a7fc:	bls	1aa34 <fts_children@@Base+0x3774>
   1a800:	rsb	fp, r0, r1
   1a804:	mov	r1, r8
   1a808:	uxth	r7, r7
   1a80c:	mov	r0, fp
   1a810:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a814:	mov	r1, r8
   1a818:	mov	r5, r0
   1a81c:	mov	r0, fp
   1a820:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a824:	mul	sl, sl, r5
   1a828:	orr	r1, r7, r1, lsl #16
   1a82c:	cmp	sl, r1
   1a830:	bls	1a84c <fts_children@@Base+0x358c>
   1a834:	adds	r4, r1, r4
   1a838:	sub	r3, r5, #1
   1a83c:	bcs	1aa3c <fts_children@@Base+0x377c>
   1a840:	cmp	sl, r4
   1a844:	subhi	r5, r5, #2
   1a848:	bls	1aa3c <fts_children@@Base+0x377c>
   1a84c:	orr	r0, r5, r9, lsl #16
   1a850:	mov	r1, r6
   1a854:	add	sp, sp, #12
   1a858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a85c:	rsb	r1, r7, #32
   1a860:	lsl	r0, r2, r7
   1a864:	lsr	r2, r2, r1
   1a868:	lsr	fp, r5, r1
   1a86c:	orr	r8, r2, r3, lsl r7
   1a870:	lsr	r1, r6, r1
   1a874:	str	r0, [sp, #4]
   1a878:	orr	r5, r1, r5, lsl r7
   1a87c:	lsr	r9, r8, #16
   1a880:	mov	r0, fp
   1a884:	uxth	sl, r8
   1a888:	mov	r1, r9
   1a88c:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a890:	mov	r1, r9
   1a894:	mov	r4, r0
   1a898:	mov	r0, fp
   1a89c:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a8a0:	mul	r0, sl, r4
   1a8a4:	lsr	ip, r5, #16
   1a8a8:	orr	r1, ip, r1, lsl #16
   1a8ac:	cmp	r0, r1
   1a8b0:	bls	1a8c4 <fts_children@@Base+0x3604>
   1a8b4:	adds	r1, r1, r8
   1a8b8:	sub	r2, r4, #1
   1a8bc:	bcc	1aa58 <fts_children@@Base+0x3798>
   1a8c0:	mov	r4, r2
   1a8c4:	rsb	ip, r0, r1
   1a8c8:	mov	r1, r9
   1a8cc:	str	ip, [sp]
   1a8d0:	uxth	r5, r5
   1a8d4:	mov	r0, ip
   1a8d8:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a8dc:	ldr	ip, [sp]
   1a8e0:	mov	r1, r9
   1a8e4:	mov	fp, r0
   1a8e8:	mov	r0, ip
   1a8ec:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a8f0:	mul	sl, sl, fp
   1a8f4:	orr	r1, r5, r1, lsl #16
   1a8f8:	cmp	sl, r1
   1a8fc:	bls	1a910 <fts_children@@Base+0x3650>
   1a900:	adds	r1, r1, r8
   1a904:	sub	r2, fp, #1
   1a908:	bcc	1aa44 <fts_children@@Base+0x3784>
   1a90c:	mov	fp, r2
   1a910:	ldr	r3, [sp, #4]
   1a914:	orr	r0, fp, r4, lsl #16
   1a918:	rsb	sl, sl, r1
   1a91c:	umull	r4, r5, r0, r3
   1a920:	cmp	sl, r5
   1a924:	bcc	1a944 <fts_children@@Base+0x3684>
   1a928:	movne	r3, #0
   1a92c:	moveq	r3, #1
   1a930:	cmp	r4, r6, lsl r7
   1a934:	movls	r6, #0
   1a938:	andhi	r6, r3, #1
   1a93c:	cmp	r6, #0
   1a940:	beq	1a738 <fts_children@@Base+0x3478>
   1a944:	mov	r6, #0
   1a948:	sub	r0, r0, #1
   1a94c:	mov	r1, r6
   1a950:	add	sp, sp, #12
   1a954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a958:	lsl	r4, r4, r3
   1a95c:	rsb	r9, r3, #32
   1a960:	lsr	r2, r5, r9
   1a964:	lsr	r9, r6, r9
   1a968:	lsr	r8, r4, #16
   1a96c:	orr	r9, r9, r5, lsl r3
   1a970:	mov	r0, r2
   1a974:	lsl	r7, r6, r3
   1a978:	mov	r1, r8
   1a97c:	str	r2, [sp]
   1a980:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a984:	ldr	r2, [sp]
   1a988:	mov	r1, r8
   1a98c:	uxth	sl, r4
   1a990:	mov	fp, r0
   1a994:	mov	r0, r2
   1a998:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a99c:	mul	r0, sl, fp
   1a9a0:	lsr	r3, r9, #16
   1a9a4:	orr	r1, r3, r1, lsl #16
   1a9a8:	cmp	r0, r1
   1a9ac:	bls	1a9cc <fts_children@@Base+0x370c>
   1a9b0:	adds	r1, r1, r4
   1a9b4:	sub	r3, fp, #1
   1a9b8:	bcs	1aa6c <fts_children@@Base+0x37ac>
   1a9bc:	cmp	r0, r1
   1a9c0:	subhi	fp, fp, #2
   1a9c4:	addhi	r1, r1, r4
   1a9c8:	bls	1aa6c <fts_children@@Base+0x37ac>
   1a9cc:	rsb	r5, r0, r1
   1a9d0:	mov	r1, r8
   1a9d4:	uxth	r9, r9
   1a9d8:	mov	r0, r5
   1a9dc:	bl	19ee8 <fts_children@@Base+0x2c28>
   1a9e0:	mov	r1, r8
   1a9e4:	mov	r6, r0
   1a9e8:	mov	r0, r5
   1a9ec:	bl	1a0d4 <fts_children@@Base+0x2e14>
   1a9f0:	mul	r5, sl, r6
   1a9f4:	orr	r1, r9, r1, lsl #16
   1a9f8:	cmp	r5, r1
   1a9fc:	bls	1aa20 <fts_children@@Base+0x3760>
   1aa00:	adds	r1, r1, r4
   1aa04:	sub	r3, r6, #1
   1aa08:	bcs	1aa1c <fts_children@@Base+0x375c>
   1aa0c:	cmp	r5, r1
   1aa10:	subhi	r6, r6, #2
   1aa14:	addhi	r1, r1, r4
   1aa18:	bhi	1aa20 <fts_children@@Base+0x3760>
   1aa1c:	mov	r6, r3
   1aa20:	rsb	r5, r5, r1
   1aa24:	orr	r6, r6, fp, lsl #16
   1aa28:	b	1a7b4 <fts_children@@Base+0x34f4>
   1aa2c:	mov	r6, r3
   1aa30:	b	1a730 <fts_children@@Base+0x3470>
   1aa34:	mov	r9, r2
   1aa38:	b	1a800 <fts_children@@Base+0x3540>
   1aa3c:	mov	r5, r3
   1aa40:	b	1a84c <fts_children@@Base+0x358c>
   1aa44:	cmp	sl, r1
   1aa48:	subhi	fp, fp, #2
   1aa4c:	addhi	r1, r1, r8
   1aa50:	bhi	1a910 <fts_children@@Base+0x3650>
   1aa54:	b	1a90c <fts_children@@Base+0x364c>
   1aa58:	cmp	r0, r1
   1aa5c:	subhi	r4, r4, #2
   1aa60:	addhi	r1, r1, r8
   1aa64:	bhi	1a8c4 <fts_children@@Base+0x3604>
   1aa68:	b	1a8c0 <fts_children@@Base+0x3600>
   1aa6c:	mov	fp, r3
   1aa70:	b	1a9cc <fts_children@@Base+0x370c>
   1aa74:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1aa78:	mov	r7, r0
   1aa7c:	ldr	r6, [pc, #76]	; 1aad0 <fts_children@@Base+0x3810>
   1aa80:	mov	r8, r1
   1aa84:	ldr	r5, [pc, #72]	; 1aad4 <fts_children@@Base+0x3814>
   1aa88:	mov	r9, r2
   1aa8c:	add	r6, pc, r6
   1aa90:	bl	11650 <_init@@Base>
   1aa94:	add	r5, pc, r5
   1aa98:	rsb	r6, r5, r6
   1aa9c:	asrs	r6, r6, #2
   1aaa0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1aaa4:	sub	r5, r5, #4
   1aaa8:	mov	r4, #0
   1aaac:	add	r4, r4, #1
   1aab0:	ldr	r3, [r5, #4]!
   1aab4:	mov	r0, r7
   1aab8:	mov	r1, r8
   1aabc:	mov	r2, r9
   1aac0:	blx	r3
   1aac4:	cmp	r4, r6
   1aac8:	bne	1aaac <fts_children@@Base+0x37ec>
   1aacc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1aad0:	andeq	r2, r1, r0, ror #6
   1aad4:	andeq	r2, r1, r4, asr r3
   1aad8:	bx	lr
   1aadc:	ldr	r3, [pc, #28]	; 1ab00 <fts_children@@Base+0x3840>
   1aae0:	mov	r1, #0
   1aae4:	ldr	r2, [pc, #24]	; 1ab04 <fts_children@@Base+0x3844>
   1aae8:	add	r3, pc, r3
   1aaec:	ldr	r3, [r3, r2]
   1aaf0:	cmp	r3, #0
   1aaf4:	ldrne	r2, [r3]
   1aaf8:	moveq	r2, r3
   1aafc:	b	118f8 <__cxa_atexit@plt>
   1ab00:	andeq	r2, r1, r0, lsl r5
   1ab04:	andeq	r0, r0, r0, lsl #3

Disassembly of section .fini:

0001ab08 <_fini@@Base>:
   1ab08:	push	{r3, lr}
   1ab0c:	pop	{r3, pc}
