
centos-preinstalled/truncate:     file format elf32-littlearm


Disassembly of section .init:

00011188 <.init>:
   11188:	push	{r3, lr}
   1118c:	bl	1219c <__assert_fail@plt+0xcc4>
   11190:	pop	{r3, pc}

Disassembly of section .plt:

00011194 <fdopen@plt-0x14>:
   11194:	push	{lr}		; (str lr, [sp, #-4]!)
   11198:	ldr	lr, [pc, #4]	; 111a4 <fdopen@plt-0x4>
   1119c:	add	lr, pc, lr
   111a0:	ldr	pc, [lr, #8]!
   111a4:	andeq	r9, r1, ip, asr lr

000111a8 <fdopen@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #102400	; 0x19000
   111b0:	ldr	pc, [ip, #3676]!	; 0xe5c

000111b4 <calloc@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #102400	; 0x19000
   111bc:	ldr	pc, [ip, #3668]!	; 0xe54

000111c0 <fputs_unlocked@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #102400	; 0x19000
   111c8:	ldr	pc, [ip, #3660]!	; 0xe4c

000111cc <raise@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #102400	; 0x19000
   111d4:	ldr	pc, [ip, #3652]!	; 0xe44

000111d8 <iconv_close@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #102400	; 0x19000
   111e0:	ldr	pc, [ip, #3644]!	; 0xe3c

000111e4 <iconv@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #102400	; 0x19000
   111ec:	ldr	pc, [ip, #3636]!	; 0xe34

000111f0 <strcmp@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #102400	; 0x19000
   111f8:	ldr	pc, [ip, #3628]!	; 0xe2c

000111fc <fflush@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #102400	; 0x19000
   11204:	ldr	pc, [ip, #3620]!	; 0xe24

00011208 <wcwidth@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #102400	; 0x19000
   11210:	ldr	pc, [ip, #3612]!	; 0xe1c

00011214 <memmove@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #102400	; 0x19000
   1121c:	ldr	pc, [ip, #3604]!	; 0xe14

00011220 <free@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #102400	; 0x19000
   11228:	ldr	pc, [ip, #3596]!	; 0xe0c

0001122c <_exit@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #102400	; 0x19000
   11234:	ldr	pc, [ip, #3588]!	; 0xe04

00011238 <memcpy@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #102400	; 0x19000
   11240:	ldr	pc, [ip, #3580]!	; 0xdfc

00011244 <mbsinit@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #102400	; 0x19000
   1124c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011250 <ftruncate64@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #102400	; 0x19000
   11258:	ldr	pc, [ip, #3564]!	; 0xdec

0001125c <memcmp@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #102400	; 0x19000
   11264:	ldr	pc, [ip, #3556]!	; 0xde4

00011268 <dcgettext@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #102400	; 0x19000
   11270:	ldr	pc, [ip, #3548]!	; 0xddc

00011274 <__stack_chk_fail@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #102400	; 0x19000
   1127c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011280 <realloc@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #102400	; 0x19000
   11288:	ldr	pc, [ip, #3532]!	; 0xdcc

0001128c <textdomain@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #102400	; 0x19000
   11294:	ldr	pc, [ip, #3524]!	; 0xdc4

00011298 <iswcntrl@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #102400	; 0x19000
   112a0:	ldr	pc, [ip, #3516]!	; 0xdbc

000112a4 <iswprint@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #102400	; 0x19000
   112ac:	ldr	pc, [ip, #3508]!	; 0xdb4

000112b0 <__fxstat64@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #102400	; 0x19000
   112b8:	ldr	pc, [ip, #3500]!	; 0xdac

000112bc <fwrite@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #102400	; 0x19000
   112c4:	ldr	pc, [ip, #3492]!	; 0xda4

000112c8 <lseek64@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #102400	; 0x19000
   112d0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112d4 <__ctype_get_mb_cur_max@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #102400	; 0x19000
   112dc:	ldr	pc, [ip, #3476]!	; 0xd94

000112e0 <strcpy@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #102400	; 0x19000
   112e8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112ec <__fpending@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #102400	; 0x19000
   112f4:	ldr	pc, [ip, #3460]!	; 0xd84

000112f8 <mbrtowc@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #102400	; 0x19000
   11300:	ldr	pc, [ip, #3452]!	; 0xd7c

00011304 <error@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #102400	; 0x19000
   1130c:	ldr	pc, [ip, #3444]!	; 0xd74

00011310 <open64@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #102400	; 0x19000
   11318:	ldr	pc, [ip, #3436]!	; 0xd6c

0001131c <getenv@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #102400	; 0x19000
   11324:	ldr	pc, [ip, #3428]!	; 0xd64

00011328 <malloc@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #102400	; 0x19000
   11330:	ldr	pc, [ip, #3420]!	; 0xd5c

00011334 <iconv_open@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #102400	; 0x19000
   1133c:	ldr	pc, [ip, #3412]!	; 0xd54

00011340 <__libc_start_main@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #102400	; 0x19000
   11348:	ldr	pc, [ip, #3404]!	; 0xd4c

0001134c <__freading@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #102400	; 0x19000
   11354:	ldr	pc, [ip, #3396]!	; 0xd44

00011358 <__gmon_start__@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #102400	; 0x19000
   11360:	ldr	pc, [ip, #3388]!	; 0xd3c

00011364 <getopt_long@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #102400	; 0x19000
   1136c:	ldr	pc, [ip, #3380]!	; 0xd34

00011370 <__ctype_b_loc@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #102400	; 0x19000
   11378:	ldr	pc, [ip, #3372]!	; 0xd2c

0001137c <exit@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #102400	; 0x19000
   11384:	ldr	pc, [ip, #3364]!	; 0xd24

00011388 <iswspace@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #102400	; 0x19000
   11390:	ldr	pc, [ip, #3356]!	; 0xd1c

00011394 <strlen@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #102400	; 0x19000
   1139c:	ldr	pc, [ip, #3348]!	; 0xd14

000113a0 <strchr@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #102400	; 0x19000
   113a8:	ldr	pc, [ip, #3340]!	; 0xd0c

000113ac <ungetc@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #102400	; 0x19000
   113b4:	ldr	pc, [ip, #3332]!	; 0xd04

000113b8 <__errno_location@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #102400	; 0x19000
   113c0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113c4 <iswalnum@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #102400	; 0x19000
   113cc:	ldr	pc, [ip, #3316]!	; 0xcf4

000113d0 <__sprintf_chk@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #102400	; 0x19000
   113d8:	ldr	pc, [ip, #3308]!	; 0xcec

000113dc <__cxa_atexit@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #102400	; 0x19000
   113e4:	ldr	pc, [ip, #3300]!	; 0xce4

000113e8 <__strdup@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #102400	; 0x19000
   113f0:	ldr	pc, [ip, #3292]!	; 0xcdc

000113f4 <memset@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #102400	; 0x19000
   113fc:	ldr	pc, [ip, #3284]!	; 0xcd4

00011400 <fscanf@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #102400	; 0x19000
   11408:	ldr	pc, [ip, #3276]!	; 0xccc

0001140c <__printf_chk@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #102400	; 0x19000
   11414:	ldr	pc, [ip, #3268]!	; 0xcc4

00011418 <fileno@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #102400	; 0x19000
   11420:	ldr	pc, [ip, #3260]!	; 0xcbc

00011424 <__fprintf_chk@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #102400	; 0x19000
   1142c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011430 <memchr@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #102400	; 0x19000
   11438:	ldr	pc, [ip, #3244]!	; 0xcac

0001143c <fclose@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #102400	; 0x19000
   11444:	ldr	pc, [ip, #3236]!	; 0xca4

00011448 <strnlen@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #102400	; 0x19000
   11450:	ldr	pc, [ip, #3228]!	; 0xc9c

00011454 <fseeko64@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #102400	; 0x19000
   1145c:	ldr	pc, [ip, #3220]!	; 0xc94

00011460 <__uflow@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #102400	; 0x19000
   11468:	ldr	pc, [ip, #3212]!	; 0xc8c

0001146c <setlocale@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #102400	; 0x19000
   11474:	ldr	pc, [ip, #3204]!	; 0xc84

00011478 <strrchr@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #102400	; 0x19000
   11480:	ldr	pc, [ip, #3196]!	; 0xc7c

00011484 <nl_langinfo@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #102400	; 0x19000
   1148c:	ldr	pc, [ip, #3188]!	; 0xc74

00011490 <__strtoll_internal@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #102400	; 0x19000
   11498:	ldr	pc, [ip, #3180]!	; 0xc6c

0001149c <bindtextdomain@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #102400	; 0x19000
   114a4:	ldr	pc, [ip, #3172]!	; 0xc64

000114a8 <__xstat64@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #102400	; 0x19000
   114b0:	ldr	pc, [ip, #3164]!	; 0xc5c

000114b4 <strncmp@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #102400	; 0x19000
   114bc:	ldr	pc, [ip, #3156]!	; 0xc54

000114c0 <abort@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #102400	; 0x19000
   114c8:	ldr	pc, [ip, #3148]!	; 0xc4c

000114cc <close@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #102400	; 0x19000
   114d4:	ldr	pc, [ip, #3140]!	; 0xc44

000114d8 <__assert_fail@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #102400	; 0x19000
   114e0:	ldr	pc, [ip, #3132]!	; 0xc3c

Disassembly of section .text:

000114e4 <close_stdout@@Base-0x1074>:
   114e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114e8:	sub	sp, sp, #204	; 0xcc
   114ec:	ldr	r5, [pc, #2980]	; 12098 <__assert_fail@plt+0xbc0>
   114f0:	mov	r8, #0
   114f4:	ldr	r3, [pc, #2976]	; 1209c <__assert_fail@plt+0xbc4>
   114f8:	mov	r7, r0
   114fc:	add	r5, pc, r5
   11500:	str	r8, [sp, #32]
   11504:	ldr	ip, [pc, #2964]	; 120a0 <__assert_fail@plt+0xbc8>
   11508:	mov	r6, r1
   1150c:	ldr	r3, [r5, r3]
   11510:	ldr	r0, [r1]
   11514:	add	ip, pc, ip
   11518:	str	ip, [sp, #48]	; 0x30
   1151c:	str	r3, [sp, #40]	; 0x28
   11520:	ldr	r3, [r3]
   11524:	ldr	r4, [pc, #2936]	; 120a4 <__assert_fail@plt+0xbcc>
   11528:	ldr	fp, [pc, #2936]	; 120a8 <__assert_fail@plt+0xbd0>
   1152c:	str	r3, [sp, #196]	; 0xc4
   11530:	bl	12714 <close_stdout@@Base+0x1bc>
   11534:	ldr	r1, [pc, #2928]	; 120ac <__assert_fail@plt+0xbd4>
   11538:	mov	r0, #6
   1153c:	add	r4, pc, r4
   11540:	ldr	sl, [pc, #2920]	; 120b0 <__assert_fail@plt+0xbd8>
   11544:	add	r1, pc, r1
   11548:	ldr	r9, [pc, #2916]	; 120b4 <__assert_fail@plt+0xbdc>
   1154c:	bl	1146c <setlocale@plt>
   11550:	ldr	r1, [pc, #2912]	; 120b8 <__assert_fail@plt+0xbe0>
   11554:	mov	r0, r4
   11558:	add	fp, pc, fp
   1155c:	add	r1, pc, r1
   11560:	add	sl, pc, sl
   11564:	bl	1149c <bindtextdomain@plt>
   11568:	mov	r0, r4
   1156c:	bl	1128c <textdomain@plt>
   11570:	ldr	r3, [pc, #2884]	; 120bc <__assert_fail@plt+0xbe4>
   11574:	ldr	r4, [pc, #2884]	; 120c0 <__assert_fail@plt+0xbe8>
   11578:	add	r9, pc, r9
   1157c:	ldr	ip, [pc, #2880]	; 120c4 <__assert_fail@plt+0xbec>
   11580:	add	r4, pc, r4
   11584:	str	r4, [sp, #64]	; 0x40
   11588:	add	ip, pc, ip
   1158c:	str	ip, [sp, #44]	; 0x2c
   11590:	ldr	r0, [r5, r3]
   11594:	bl	198ac <close_stdout@@Base+0x7354>
   11598:	ldr	r2, [pc, #2856]	; 120c8 <__assert_fail@plt+0xbf0>
   1159c:	mov	r4, #0
   115a0:	ldr	r3, [pc, #2852]	; 120cc <__assert_fail@plt+0xbf4>
   115a4:	mov	r0, r7
   115a8:	str	r4, [sp]
   115ac:	mov	r1, r6
   115b0:	add	r2, pc, r2
   115b4:	add	r3, pc, r3
   115b8:	bl	11364 <getopt_long@plt>
   115bc:	cmn	r0, #1
   115c0:	beq	1180c <__assert_fail@plt+0x334>
   115c4:	cmp	r0, #99	; 0x63
   115c8:	beq	117c0 <__assert_fail@plt+0x2e8>
   115cc:	ble	115f0 <__assert_fail@plt+0x118>
   115d0:	cmp	r0, #114	; 0x72
   115d4:	beq	117ac <__assert_fail@plt+0x2d4>
   115d8:	cmp	r0, #115	; 0x73
   115dc:	beq	11660 <__assert_fail@plt+0x188>
   115e0:	cmp	r0, #111	; 0x6f
   115e4:	beq	1179c <__assert_fail@plt+0x2c4>
   115e8:	mov	r0, #1
   115ec:	bl	12294 <__assert_fail@plt+0xdbc>
   115f0:	cmn	r0, #3
   115f4:	beq	11608 <__assert_fail@plt+0x130>
   115f8:	cmn	r0, #2
   115fc:	bne	115e8 <__assert_fail@plt+0x110>
   11600:	mov	r0, r4
   11604:	bl	12294 <__assert_fail@plt+0xdbc>
   11608:	ldr	r2, [pc, #2752]	; 120d0 <__assert_fail@plt+0xbf8>
   1160c:	ldr	r3, [pc, #2752]	; 120d4 <__assert_fail@plt+0xbfc>
   11610:	ldr	r0, [pc, #2752]	; 120d8 <__assert_fail@plt+0xc00>
   11614:	ldr	r2, [r5, r2]
   11618:	ldr	r3, [r5, r3]
   1161c:	add	r0, pc, r0
   11620:	ldr	r1, [pc, #2740]	; 120dc <__assert_fail@plt+0xc04>
   11624:	ldr	r5, [r2]
   11628:	add	r1, pc, r1
   1162c:	ldr	r6, [r3]
   11630:	bl	13108 <close_stdout@@Base+0xbb0>
   11634:	ldr	r1, [pc, #2724]	; 120e0 <__assert_fail@plt+0xc08>
   11638:	ldr	r2, [pc, #2724]	; 120e4 <__assert_fail@plt+0xc0c>
   1163c:	str	r4, [sp, #4]
   11640:	add	r1, pc, r1
   11644:	mov	r3, r6
   11648:	add	r2, pc, r2
   1164c:	str	r0, [sp]
   11650:	mov	r0, r5
   11654:	bl	155a8 <close_stdout@@Base+0x3050>
   11658:	mov	r0, r4
   1165c:	bl	1137c <exit@plt>
   11660:	bl	11370 <__ctype_b_loc@plt>
   11664:	ldr	r3, [pc, #2684]	; 120e8 <__assert_fail@plt+0xc10>
   11668:	ldr	r4, [r5, r3]
   1166c:	ldr	r3, [r4]
   11670:	mov	ip, r0
   11674:	b	1167c <__assert_fail@plt+0x1a4>
   11678:	str	r3, [r4]
   1167c:	mov	lr, r3
   11680:	ldrb	r2, [r3], #1
   11684:	ldr	r1, [ip]
   11688:	lsl	r0, r2, #1
   1168c:	ldrh	r0, [r1, r0]
   11690:	tst	r0, #8192	; 0x2000
   11694:	bne	11678 <__assert_fail@plt+0x1a0>
   11698:	cmp	r2, #47	; 0x2f
   1169c:	beq	117f8 <__assert_fail@plt+0x320>
   116a0:	bls	117cc <__assert_fail@plt+0x2f4>
   116a4:	cmp	r2, #60	; 0x3c
   116a8:	beq	117e4 <__assert_fail@plt+0x30c>
   116ac:	cmp	r2, #62	; 0x3e
   116b0:	addeq	lr, lr, #1
   116b4:	streq	lr, [r4]
   116b8:	ldreq	r1, [ip]
   116bc:	moveq	r8, #2
   116c0:	ldr	r0, [r4]
   116c4:	ldrb	r2, [r0]
   116c8:	lsl	r3, r2, #1
   116cc:	ldrh	r3, [r1, r3]
   116d0:	tst	r3, #8192	; 0x2000
   116d4:	addne	r3, r0, #1
   116d8:	beq	116fc <__assert_fail@plt+0x224>
   116dc:	str	r3, [r4]
   116e0:	mov	r0, r3
   116e4:	ldrb	r2, [r3], #1
   116e8:	ldr	lr, [ip]
   116ec:	lsl	r1, r2, #1
   116f0:	ldrh	r1, [lr, r1]
   116f4:	tst	r1, #8192	; 0x2000
   116f8:	bne	116dc <__assert_fail@plt+0x204>
   116fc:	cmp	r2, #43	; 0x2b
   11700:	cmpne	r2, #45	; 0x2d
   11704:	bne	11714 <__assert_fail@plt+0x23c>
   11708:	cmp	r8, #0
   1170c:	bne	12024 <__assert_fail@plt+0xb4c>
   11710:	mov	r8, #1
   11714:	str	r9, [sp]
   11718:	mov	r1, #0
   1171c:	mov	r2, #10
   11720:	add	r3, sp, #88	; 0x58
   11724:	bl	159b8 <close_stdout@@Base+0x3460>
   11728:	subs	ip, r0, #0
   1172c:	str	ip, [sp, #24]
   11730:	bne	11c38 <__assert_fail@plt+0x760>
   11734:	bl	113b8 <__errno_location@plt>
   11738:	ldrd	r2, [sp, #88]	; 0x58
   1173c:	ldr	ip, [sp, #24]
   11740:	strd	r2, [sp, #56]	; 0x38
   11744:	str	ip, [r0]
   11748:	sub	r3, r8, #4
   1174c:	cmp	r3, #1
   11750:	movhi	ip, #1
   11754:	strhi	ip, [sp, #32]
   11758:	bhi	11598 <__assert_fail@plt+0xc0>
   1175c:	ldrd	r0, [sp, #56]	; 0x38
   11760:	orrs	r1, r0, r1
   11764:	movne	r4, #1
   11768:	strne	r4, [sp, #32]
   1176c:	bne	11598 <__assert_fail@plt+0xc0>
   11770:	ldr	r1, [sp, #48]	; 0x30
   11774:	mov	r2, #5
   11778:	mov	r0, #0
   1177c:	mov	r4, #1
   11780:	str	r4, [sp, #32]
   11784:	bl	11268 <dcgettext@plt>
   11788:	mov	r1, #0
   1178c:	mov	r2, r0
   11790:	mov	r0, r4
   11794:	bl	11304 <error@plt>
   11798:	b	11598 <__assert_fail@plt+0xc0>
   1179c:	ldr	r4, [sp, #44]	; 0x2c
   117a0:	mov	r3, #1
   117a4:	strb	r3, [r4, #1]
   117a8:	b	11598 <__assert_fail@plt+0xc0>
   117ac:	ldr	r3, [pc, #2356]	; 120e8 <__assert_fail@plt+0xc10>
   117b0:	ldr	r3, [r5, r3]
   117b4:	ldr	r3, [r3]
   117b8:	str	r3, [sl, #4]
   117bc:	b	11598 <__assert_fail@plt+0xc0>
   117c0:	mov	r3, #1
   117c4:	strb	r3, [fp]
   117c8:	b	11598 <__assert_fail@plt+0xc0>
   117cc:	cmp	r2, #37	; 0x25
   117d0:	addeq	lr, lr, #1
   117d4:	moveq	r8, #5
   117d8:	streq	lr, [r4]
   117dc:	ldreq	r1, [ip]
   117e0:	b	116c0 <__assert_fail@plt+0x1e8>
   117e4:	add	lr, lr, #1
   117e8:	mov	r8, #3
   117ec:	str	lr, [r4]
   117f0:	ldr	r1, [ip]
   117f4:	b	116c0 <__assert_fail@plt+0x1e8>
   117f8:	add	lr, lr, #1
   117fc:	mov	r8, #4
   11800:	str	lr, [r4]
   11804:	ldr	r1, [ip]
   11808:	b	116c0 <__assert_fail@plt+0x1e8>
   1180c:	ldr	r2, [pc, #2264]	; 120ec <__assert_fail@plt+0xc14>
   11810:	ldr	r3, [pc, #2264]	; 120f0 <__assert_fail@plt+0xc18>
   11814:	ldr	r2, [r5, r2]
   11818:	add	r3, pc, r3
   1181c:	ldr	r5, [r3, #4]
   11820:	ldr	r2, [r2]
   11824:	cmp	r5, r4
   11828:	rsb	r7, r2, r7
   1182c:	add	r9, r6, r2, lsl #2
   11830:	beq	11dcc <__assert_fail@plt+0x8f4>
   11834:	ldr	r2, [sp, #32]
   11838:	cmp	r8, #0
   1183c:	movne	r2, #0
   11840:	andeq	r2, r2, #1
   11844:	cmp	r2, #0
   11848:	bne	11fc8 <__assert_fail@plt+0xaf0>
   1184c:	ldrb	r3, [r3, #1]
   11850:	cmp	r3, #0
   11854:	bne	11b10 <__assert_fail@plt+0x638>
   11858:	cmp	r7, #0
   1185c:	ble	12050 <__assert_fail@plt+0xb78>
   11860:	mov	r0, #3
   11864:	mov	r1, r5
   11868:	add	r2, sp, #88	; 0x58
   1186c:	bl	114a8 <__xstat64@plt>
   11870:	cmp	r0, #0
   11874:	bne	11d5c <__assert_fail@plt+0x884>
   11878:	ldr	r3, [sp, #104]	; 0x68
   1187c:	and	r3, r3, #53248	; 0xd000
   11880:	cmp	r3, #32768	; 0x8000
   11884:	bne	11cb0 <__assert_fail@plt+0x7d8>
   11888:	ldrd	r4, [sp, #136]	; 0x88
   1188c:	cmp	r4, #0
   11890:	sbcs	r0, r5, #0
   11894:	blt	11d14 <__assert_fail@plt+0x83c>
   11898:	ldr	ip, [sp, #32]
   1189c:	cmp	ip, #0
   118a0:	strdne	r4, [sp, #48]	; 0x30
   118a4:	ldrdne	r4, [sp, #56]	; 0x38
   118a8:	mvneq	r0, #0
   118ac:	mvneq	r1, #0
   118b0:	strdeq	r0, [sp, #48]	; 0x30
   118b4:	strd	r4, [sp, #56]	; 0x38
   118b8:	ldr	r1, [pc, #2100]	; 120f4 <__assert_fail@plt+0xc1c>
   118bc:	mov	r4, #0
   118c0:	ldr	r5, [pc, #2096]	; 120f8 <__assert_fail@plt+0xc20>
   118c4:	movw	r2, #2113	; 0x841
   118c8:	add	r1, pc, r1
   118cc:	str	r4, [sp, #44]	; 0x2c
   118d0:	ldr	ip, [pc, #2084]	; 120fc <__assert_fail@plt+0xc24>
   118d4:	movw	r3, #2049	; 0x801
   118d8:	ldrb	r1, [r1]
   118dc:	add	r5, pc, r5
   118e0:	add	ip, pc, ip
   118e4:	str	r5, [sp, #64]	; 0x40
   118e8:	cmp	r1, r4
   118ec:	ldr	r4, [pc, #2060]	; 12100 <__assert_fail@plt+0xc28>
   118f0:	str	ip, [sp, #72]	; 0x48
   118f4:	add	r4, pc, r4
   118f8:	moveq	r7, r2
   118fc:	movne	r7, r3
   11900:	str	r4, [sp, #68]	; 0x44
   11904:	ldr	r5, [pc, #2040]	; 12104 <__assert_fail@plt+0xc2c>
   11908:	mov	fp, r7
   1190c:	ldr	ip, [pc, #2036]	; 12108 <__assert_fail@plt+0xc30>
   11910:	ldr	r4, [pc, #2036]	; 1210c <__assert_fail@plt+0xc34>
   11914:	add	r5, pc, r5
   11918:	add	ip, pc, ip
   1191c:	str	r5, [sp, #76]	; 0x4c
   11920:	add	r4, pc, r4
   11924:	str	ip, [sp, #80]	; 0x50
   11928:	str	r4, [sp, #84]	; 0x54
   1192c:	ldr	sl, [r9], #4
   11930:	cmp	sl, #0
   11934:	beq	11ae0 <__assert_fail@plt+0x608>
   11938:	mov	r0, sl
   1193c:	mov	r1, fp
   11940:	movw	r2, #438	; 0x1b6
   11944:	bl	11310 <open64@plt>
   11948:	cmn	r0, #1
   1194c:	mov	r6, r0
   11950:	beq	11a48 <__assert_fail@plt+0x570>
   11954:	ldr	ip, [sp, #64]	; 0x40
   11958:	ldrb	r3, [ip, #1]
   1195c:	cmp	r3, #0
   11960:	bne	11ec4 <__assert_fail@plt+0x9ec>
   11964:	adds	r3, r8, #0
   11968:	ldr	r0, [sp, #52]	; 0x34
   1196c:	movne	r3, #1
   11970:	ands	r3, r3, r0, lsr #31
   11974:	beq	11ab4 <__assert_fail@plt+0x5dc>
   11978:	mov	r0, #3
   1197c:	mov	r1, r6
   11980:	add	r2, sp, #88	; 0x58
   11984:	bl	112b0 <__fxstat64@plt>
   11988:	cmp	r0, #0
   1198c:	bne	11fb8 <__assert_fail@plt+0xae0>
   11990:	ldrd	r4, [sp, #56]	; 0x38
   11994:	strd	r4, [sp, #32]
   11998:	ldrd	r4, [sp, #48]	; 0x30
   1199c:	cmp	r4, #0
   119a0:	sbcs	r5, r5, #0
   119a4:	blt	11bbc <__assert_fail@plt+0x6e4>
   119a8:	ldrd	r0, [sp, #48]	; 0x30
   119ac:	cmp	r8, #2
   119b0:	beq	11c18 <__assert_fail@plt+0x740>
   119b4:	cmp	r8, #3
   119b8:	beq	11c90 <__assert_fail@plt+0x7b8>
   119bc:	cmp	r8, #4
   119c0:	beq	11d9c <__assert_fail@plt+0x8c4>
   119c4:	cmp	r8, #5
   119c8:	beq	11df0 <__assert_fail@plt+0x918>
   119cc:	ldrd	r4, [sp, #32]
   119d0:	mvn	r2, #0
   119d4:	mvn	r3, #-2147483648	; 0x80000000
   119d8:	subs	r2, r2, r0
   119dc:	sbc	r3, r3, r1
   119e0:	cmp	r2, r4
   119e4:	sbcs	r5, r3, r5
   119e8:	blt	11eb4 <__assert_fail@plt+0x9dc>
   119ec:	ldrd	r4, [sp, #32]
   119f0:	adds	r4, r4, r0
   119f4:	adc	r5, r5, r1
   119f8:	strd	r4, [sp, #32]
   119fc:	ldrd	r4, [sp, #32]
   11a00:	cmp	r4, #0
   11a04:	sbcs	r5, r5, #0
   11a08:	blt	11b00 <__assert_fail@plt+0x628>
   11a0c:	mov	r0, r6
   11a10:	ldrd	r2, [sp, #32]
   11a14:	bl	11250 <ftruncate64@plt>
   11a18:	cmn	r0, #1
   11a1c:	movne	r7, #1
   11a20:	beq	11b74 <__assert_fail@plt+0x69c>
   11a24:	mov	r0, r6
   11a28:	bl	114cc <close@plt>
   11a2c:	cmp	r0, #0
   11a30:	bne	11ac8 <__assert_fail@plt+0x5f0>
   11a34:	ldr	r5, [sp, #44]	; 0x2c
   11a38:	eor	r6, r7, #1
   11a3c:	orr	r5, r5, r6
   11a40:	str	r5, [sp, #44]	; 0x2c
   11a44:	b	1192c <__assert_fail@plt+0x454>
   11a48:	ldr	r3, [pc, #1728]	; 12110 <__assert_fail@plt+0xc38>
   11a4c:	add	r3, pc, r3
   11a50:	ldrb	r3, [r3]
   11a54:	cmp	r3, #0
   11a58:	beq	11a6c <__assert_fail@plt+0x594>
   11a5c:	bl	113b8 <__errno_location@plt>
   11a60:	ldr	r3, [r0]
   11a64:	cmp	r3, #2
   11a68:	beq	1192c <__assert_fail@plt+0x454>
   11a6c:	bl	113b8 <__errno_location@plt>
   11a70:	ldr	r1, [pc, #1692]	; 12114 <__assert_fail@plt+0xc3c>
   11a74:	mov	r2, #5
   11a78:	mov	r5, #1
   11a7c:	add	r1, pc, r1
   11a80:	str	r5, [sp, #44]	; 0x2c
   11a84:	ldr	r4, [r0]
   11a88:	mov	r0, #0
   11a8c:	bl	11268 <dcgettext@plt>
   11a90:	mov	r5, r0
   11a94:	mov	r0, sl
   11a98:	bl	14b2c <close_stdout@@Base+0x25d4>
   11a9c:	mov	r1, r4
   11aa0:	mov	r2, r5
   11aa4:	mov	r3, r0
   11aa8:	mov	r0, #0
   11aac:	bl	11304 <error@plt>
   11ab0:	b	1192c <__assert_fail@plt+0x454>
   11ab4:	ldrd	r4, [sp, #56]	; 0x38
   11ab8:	strd	r4, [sp, #32]
   11abc:	cmp	r8, #0
   11ac0:	beq	119fc <__assert_fail@plt+0x524>
   11ac4:	b	11998 <__assert_fail@plt+0x4c0>
   11ac8:	bl	113b8 <__errno_location@plt>
   11acc:	mov	ip, #1
   11ad0:	ldr	r1, [sp, #68]	; 0x44
   11ad4:	mov	r2, #5
   11ad8:	str	ip, [sp, #44]	; 0x2c
   11adc:	b	11a84 <__assert_fail@plt+0x5ac>
   11ae0:	ldr	r4, [sp, #40]	; 0x28
   11ae4:	ldr	r2, [sp, #196]	; 0xc4
   11ae8:	ldr	r0, [sp, #44]	; 0x2c
   11aec:	ldr	r3, [r4]
   11af0:	cmp	r2, r3
   11af4:	bne	11ec0 <__assert_fail@plt+0x9e8>
   11af8:	add	sp, sp, #204	; 0xcc
   11afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b00:	mov	r4, #0
   11b04:	mov	r5, #0
   11b08:	strd	r4, [sp, #32]
   11b0c:	b	11a0c <__assert_fail@plt+0x534>
   11b10:	ldr	ip, [sp, #32]
   11b14:	cmp	ip, #0
   11b18:	bne	11858 <__assert_fail@plt+0x380>
   11b1c:	ldr	r1, [pc, #1524]	; 12118 <__assert_fail@plt+0xc40>
   11b20:	mov	r0, ip
   11b24:	mov	r2, #5
   11b28:	add	r1, pc, r1
   11b2c:	bl	11268 <dcgettext@plt>
   11b30:	ldr	r1, [pc, #1508]	; 1211c <__assert_fail@plt+0xc44>
   11b34:	add	r1, pc, r1
   11b38:	mov	r5, r0
   11b3c:	ldr	r0, [sp, #32]
   11b40:	bl	14b24 <close_stdout@@Base+0x25cc>
   11b44:	ldr	r1, [pc, #1492]	; 12120 <__assert_fail@plt+0xc48>
   11b48:	add	r1, pc, r1
   11b4c:	mov	r4, r0
   11b50:	mov	r0, #1
   11b54:	bl	14b24 <close_stdout@@Base+0x25cc>
   11b58:	mov	r2, r5
   11b5c:	mov	r3, r4
   11b60:	str	r0, [sp]
   11b64:	ldr	r0, [sp, #32]
   11b68:	mov	r1, r0
   11b6c:	bl	11304 <error@plt>
   11b70:	b	115e8 <__assert_fail@plt+0x110>
   11b74:	bl	113b8 <__errno_location@plt>
   11b78:	mov	r7, #0
   11b7c:	ldr	r1, [sp, #76]	; 0x4c
   11b80:	mov	r2, #5
   11b84:	ldr	r4, [r0]
   11b88:	mov	r0, r7
   11b8c:	bl	11268 <dcgettext@plt>
   11b90:	mov	r5, r0
   11b94:	mov	r0, sl
   11b98:	bl	14b2c <close_stdout@@Base+0x25d4>
   11b9c:	mov	r1, r4
   11ba0:	mov	r2, r5
   11ba4:	ldrd	r4, [sp, #32]
   11ba8:	strd	r4, [sp]
   11bac:	mov	r3, r0
   11bb0:	mov	r0, r7
   11bb4:	bl	11304 <error@plt>
   11bb8:	b	11a24 <__assert_fail@plt+0x54c>
   11bbc:	ldr	r3, [sp, #104]	; 0x68
   11bc0:	and	r3, r3, #53248	; 0xd000
   11bc4:	cmp	r3, #32768	; 0x8000
   11bc8:	bne	11e4c <__assert_fail@plt+0x974>
   11bcc:	ldrd	r0, [sp, #136]	; 0x88
   11bd0:	cmp	r0, #0
   11bd4:	sbcs	ip, r1, #0
   11bd8:	bge	119ac <__assert_fail@plt+0x4d4>
   11bdc:	ldr	r1, [pc, #1344]	; 12124 <__assert_fail@plt+0xc4c>
   11be0:	mov	r0, #0
   11be4:	add	r1, pc, r1
   11be8:	mov	r2, #5
   11bec:	mov	r7, r0
   11bf0:	bl	11268 <dcgettext@plt>
   11bf4:	mov	r4, r0
   11bf8:	mov	r0, sl
   11bfc:	bl	14b2c <close_stdout@@Base+0x25d4>
   11c00:	mov	r2, r4
   11c04:	mov	r1, r7
   11c08:	mov	r3, r0
   11c0c:	mov	r0, r7
   11c10:	bl	11304 <error@plt>
   11c14:	b	11a24 <__assert_fail@plt+0x54c>
   11c18:	mov	r4, r0
   11c1c:	mov	r5, r1
   11c20:	ldrd	r0, [sp, #32]
   11c24:	cmp	r5, r1
   11c28:	cmpeq	r4, r0
   11c2c:	movcc	r4, r0
   11c30:	movcc	r5, r1
   11c34:	b	119f8 <__assert_fail@plt+0x520>
   11c38:	bl	113b8 <__errno_location@plt>
   11c3c:	ldr	ip, [sp, #24]
   11c40:	ldr	r1, [sp, #64]	; 0x40
   11c44:	mov	r2, #5
   11c48:	cmp	ip, #1
   11c4c:	moveq	ip, #75	; 0x4b
   11c50:	movne	ip, #0
   11c54:	str	ip, [r0]
   11c58:	mov	r0, #0
   11c5c:	str	ip, [sp, #24]
   11c60:	bl	11268 <dcgettext@plt>
   11c64:	mov	r2, r0
   11c68:	ldr	r0, [r4]
   11c6c:	str	r2, [sp, #28]
   11c70:	bl	14b2c <close_stdout@@Base+0x25d4>
   11c74:	ldr	ip, [sp, #24]
   11c78:	ldr	r2, [sp, #28]
   11c7c:	mov	r1, ip
   11c80:	mov	r3, r0
   11c84:	mov	r0, #1
   11c88:	bl	11304 <error@plt>
   11c8c:	b	11748 <__assert_fail@plt+0x270>
   11c90:	ldrd	r2, [sp, #32]
   11c94:	mov	r4, r0
   11c98:	mov	r5, r1
   11c9c:	cmp	r5, r3
   11ca0:	cmpeq	r4, r2
   11ca4:	movhi	r4, r2
   11ca8:	movhi	r5, r3
   11cac:	b	11b08 <__assert_fail@plt+0x630>
   11cb0:	ldr	r3, [pc, #1136]	; 12128 <__assert_fail@plt+0xc50>
   11cb4:	mov	r1, #0
   11cb8:	add	r3, pc, r3
   11cbc:	ldr	r0, [r3, #4]
   11cc0:	bl	11310 <open64@plt>
   11cc4:	subs	r6, r0, #0
   11cc8:	blt	11d0c <__assert_fail@plt+0x834>
   11ccc:	mov	r2, #0
   11cd0:	mov	r3, #0
   11cd4:	mov	r1, #2
   11cd8:	str	r1, [sp]
   11cdc:	bl	112c8 <lseek64@plt>
   11ce0:	mov	r5, r1
   11ce4:	mov	r4, r0
   11ce8:	bl	113b8 <__errno_location@plt>
   11cec:	mov	r7, r0
   11cf0:	mov	r0, r6
   11cf4:	ldr	r6, [r7]
   11cf8:	bl	114cc <close@plt>
   11cfc:	cmp	r4, #0
   11d00:	sbcs	r1, r5, #0
   11d04:	strlt	r6, [r7]
   11d08:	bge	11898 <__assert_fail@plt+0x3c0>
   11d0c:	mvn	r4, #0
   11d10:	mvn	r5, #0
   11d14:	bl	113b8 <__errno_location@plt>
   11d18:	ldr	r1, [pc, #1036]	; 1212c <__assert_fail@plt+0xc54>
   11d1c:	mov	r2, #5
   11d20:	add	r1, pc, r1
   11d24:	ldr	r6, [r0]
   11d28:	mov	r0, #0
   11d2c:	bl	11268 <dcgettext@plt>
   11d30:	ldr	r3, [pc, #1016]	; 12130 <__assert_fail@plt+0xc58>
   11d34:	add	r3, pc, r3
   11d38:	mov	r7, r0
   11d3c:	ldr	r0, [r3, #4]
   11d40:	bl	14b2c <close_stdout@@Base+0x25d4>
   11d44:	mov	r1, r6
   11d48:	mov	r2, r7
   11d4c:	mov	r3, r0
   11d50:	mov	r0, #1
   11d54:	bl	11304 <error@plt>
   11d58:	b	11898 <__assert_fail@plt+0x3c0>
   11d5c:	bl	113b8 <__errno_location@plt>
   11d60:	ldr	r1, [pc, #972]	; 12134 <__assert_fail@plt+0xc5c>
   11d64:	mov	r2, #5
   11d68:	add	r1, pc, r1
   11d6c:	ldr	r4, [r0]
   11d70:	mov	r0, #0
   11d74:	bl	11268 <dcgettext@plt>
   11d78:	mov	r6, r0
   11d7c:	mov	r0, r5
   11d80:	bl	14b2c <close_stdout@@Base+0x25d4>
   11d84:	mov	r1, r4
   11d88:	mov	r2, r6
   11d8c:	mov	r3, r0
   11d90:	mov	r0, #1
   11d94:	bl	11304 <error@plt>
   11d98:	b	11878 <__assert_fail@plt+0x3a0>
   11d9c:	ldr	r3, [sp, #36]	; 0x24
   11da0:	ldr	r2, [sp, #32]
   11da4:	bl	18ec4 <close_stdout@@Base+0x696c>
   11da8:	ldr	r4, [sp, #36]	; 0x24
   11dac:	ldr	r5, [sp, #32]
   11db0:	mul	r3, r0, r4
   11db4:	mla	r1, r1, r5, r3
   11db8:	umull	r4, r5, r0, r5
   11dbc:	add	r1, r1, r5
   11dc0:	strd	r4, [sp, #32]
   11dc4:	str	r1, [sp, #36]	; 0x24
   11dc8:	b	119fc <__assert_fail@plt+0x524>
   11dcc:	ldr	r5, [sp, #32]
   11dd0:	cmp	r5, r4
   11dd4:	beq	12060 <__assert_fail@plt+0xb88>
   11dd8:	cmp	r7, #0
   11ddc:	ble	12050 <__assert_fail@plt+0xb78>
   11de0:	mvn	r4, #0
   11de4:	mvn	r5, #0
   11de8:	strd	r4, [sp, #48]	; 0x30
   11dec:	b	118b8 <__assert_fail@plt+0x3e0>
   11df0:	ldrd	r4, [sp, #32]
   11df4:	ldrd	r2, [sp, #32]
   11df8:	subs	r4, r4, #1
   11dfc:	sbc	r5, r5, #0
   11e00:	adds	r0, r0, r4
   11e04:	adc	r1, r1, r5
   11e08:	bl	18ec4 <close_stdout@@Base+0x696c>
   11e0c:	ldr	r2, [sp, #32]
   11e10:	ldr	ip, [sp, #36]	; 0x24
   11e14:	umull	r4, r5, r0, r2
   11e18:	mul	r3, r0, ip
   11e1c:	mla	r1, r1, r2, r3
   11e20:	strd	r4, [sp, #32]
   11e24:	add	r1, r1, r5
   11e28:	str	r1, [sp, #36]	; 0x24
   11e2c:	ldrd	r4, [sp, #32]
   11e30:	cmp	r4, #0
   11e34:	sbcs	r5, r5, #0
   11e38:	movlt	r0, #0
   11e3c:	ldrlt	r1, [sp, #84]	; 0x54
   11e40:	movlt	r2, r8
   11e44:	bge	11a0c <__assert_fail@plt+0x534>
   11e48:	b	11bec <__assert_fail@plt+0x714>
   11e4c:	mov	r3, #2
   11e50:	mov	r2, #0
   11e54:	str	r3, [sp]
   11e58:	mov	r0, r6
   11e5c:	mov	r3, #0
   11e60:	bl	112c8 <lseek64@plt>
   11e64:	cmp	r0, #0
   11e68:	sbcs	r2, r1, #0
   11e6c:	bge	119ac <__assert_fail@plt+0x4d4>
   11e70:	bl	113b8 <__errno_location@plt>
   11e74:	ldr	r1, [pc, #700]	; 12138 <__assert_fail@plt+0xc60>
   11e78:	add	r1, pc, r1
   11e7c:	mov	r7, #0
   11e80:	ldr	r4, [r0]
   11e84:	mov	r2, #5
   11e88:	mov	r0, r7
   11e8c:	bl	11268 <dcgettext@plt>
   11e90:	mov	r5, r0
   11e94:	mov	r0, sl
   11e98:	bl	14b2c <close_stdout@@Base+0x25d4>
   11e9c:	mov	r1, r4
   11ea0:	mov	r2, r5
   11ea4:	mov	r3, r0
   11ea8:	mov	r0, r7
   11eac:	bl	11304 <error@plt>
   11eb0:	b	11a24 <__assert_fail@plt+0x54c>
   11eb4:	mov	r0, #0
   11eb8:	ldr	r1, [sp, #80]	; 0x50
   11ebc:	b	11be8 <__assert_fail@plt+0x710>
   11ec0:	bl	11274 <__stack_chk_fail@plt>
   11ec4:	mov	r0, #3
   11ec8:	mov	r1, r6
   11ecc:	add	r2, sp, #88	; 0x58
   11ed0:	bl	112b0 <__fxstat64@plt>
   11ed4:	cmp	r0, #0
   11ed8:	bne	11fb8 <__assert_fail@plt+0xae0>
   11edc:	ldr	r4, [sp, #144]	; 0x90
   11ee0:	sub	r3, r4, #1
   11ee4:	cmn	r3, #-536870911	; 0xe0000001
   11ee8:	movls	r0, r4
   11eec:	movhi	r4, #512	; 0x200
   11ef0:	asrls	r1, r0, #31
   11ef4:	movhi	r5, #0
   11ef8:	strdls	r0, [sp, #32]
   11efc:	mov	r0, #0
   11f00:	strdhi	r4, [sp, #32]
   11f04:	mov	r1, #-2147483648	; 0x80000000
   11f08:	ldrd	r2, [sp, #32]
   11f0c:	bl	18e7c <close_stdout@@Base+0x6924>
   11f10:	ldrd	r4, [sp, #56]	; 0x38
   11f14:	cmp	r4, r0
   11f18:	sbcs	r5, r5, r1
   11f1c:	blt	11f6c <__assert_fail@plt+0xa94>
   11f20:	mvn	r0, #0
   11f24:	mvn	r1, #-2147483648	; 0x80000000
   11f28:	ldrd	r2, [sp, #32]
   11f2c:	bl	18e7c <close_stdout@@Base+0x6924>
   11f30:	ldrd	r4, [sp, #56]	; 0x38
   11f34:	cmp	r0, r4
   11f38:	sbcs	r5, r1, r5
   11f3c:	blt	11f6c <__assert_fail@plt+0xa94>
   11f40:	ldr	r5, [sp, #32]
   11f44:	ldr	r1, [sp, #56]	; 0x38
   11f48:	ldr	ip, [sp, #60]	; 0x3c
   11f4c:	ldr	r0, [sp, #36]	; 0x24
   11f50:	mul	r3, r5, ip
   11f54:	umull	r4, r5, r5, r1
   11f58:	mla	r3, r1, r0, r3
   11f5c:	strd	r4, [sp, #32]
   11f60:	add	r3, r3, r5
   11f64:	str	r3, [sp, #36]	; 0x24
   11f68:	b	11abc <__assert_fail@plt+0x5e4>
   11f6c:	ldr	r1, [sp, #72]	; 0x48
   11f70:	mov	r0, #0
   11f74:	mov	r2, #5
   11f78:	mov	r7, r0
   11f7c:	bl	11268 <dcgettext@plt>
   11f80:	mov	r2, r0
   11f84:	mov	r0, sl
   11f88:	str	r2, [sp, #28]
   11f8c:	bl	14b2c <close_stdout@@Base+0x25d4>
   11f90:	ldrd	r4, [sp, #56]	; 0x38
   11f94:	mov	r1, r7
   11f98:	ldr	r2, [sp, #28]
   11f9c:	strd	r4, [sp]
   11fa0:	ldrd	r4, [sp, #32]
   11fa4:	strd	r4, [sp, #8]
   11fa8:	str	r0, [sp, #16]
   11fac:	mov	r0, r7
   11fb0:	bl	11304 <error@plt>
   11fb4:	b	11a24 <__assert_fail@plt+0x54c>
   11fb8:	bl	113b8 <__errno_location@plt>
   11fbc:	ldr	r1, [pc, #376]	; 1213c <__assert_fail@plt+0xc64>
   11fc0:	add	r1, pc, r1
   11fc4:	b	11e7c <__assert_fail@plt+0x9a4>
   11fc8:	ldr	r1, [pc, #368]	; 12140 <__assert_fail@plt+0xc68>
   11fcc:	mov	r2, #5
   11fd0:	mov	r0, r4
   11fd4:	add	r1, pc, r1
   11fd8:	bl	11268 <dcgettext@plt>
   11fdc:	ldr	r1, [pc, #352]	; 12144 <__assert_fail@plt+0xc6c>
   11fe0:	add	r1, pc, r1
   11fe4:	mov	r6, r0
   11fe8:	mov	r0, r4
   11fec:	bl	14b24 <close_stdout@@Base+0x25cc>
   11ff0:	ldr	r1, [pc, #336]	; 12148 <__assert_fail@plt+0xc70>
   11ff4:	add	r1, pc, r1
   11ff8:	mov	r5, r0
   11ffc:	mov	r0, #1
   12000:	bl	14b24 <close_stdout@@Base+0x25cc>
   12004:	mov	r2, r6
   12008:	mov	r3, r5
   1200c:	mov	r1, r4
   12010:	str	r0, [sp]
   12014:	mov	r0, r4
   12018:	bl	11304 <error@plt>
   1201c:	mov	r0, #1
   12020:	bl	12294 <__assert_fail@plt+0xdbc>
   12024:	ldr	r1, [pc, #288]	; 1214c <__assert_fail@plt+0xc74>
   12028:	mov	r0, #0
   1202c:	add	r1, pc, r1
   12030:	mov	r2, #5
   12034:	bl	11268 <dcgettext@plt>
   12038:	mov	r2, r0
   1203c:	mov	r0, #0
   12040:	mov	r1, r0
   12044:	bl	11304 <error@plt>
   12048:	mov	r0, #1
   1204c:	bl	12294 <__assert_fail@plt+0xdbc>
   12050:	ldr	r1, [pc, #248]	; 12150 <__assert_fail@plt+0xc78>
   12054:	mov	r0, #0
   12058:	add	r1, pc, r1
   1205c:	b	12030 <__assert_fail@plt+0xb58>
   12060:	ldr	r1, [pc, #236]	; 12154 <__assert_fail@plt+0xc7c>
   12064:	mov	r0, r5
   12068:	mov	r2, #5
   1206c:	add	r1, pc, r1
   12070:	bl	11268 <dcgettext@plt>
   12074:	ldr	r1, [pc, #220]	; 12158 <__assert_fail@plt+0xc80>
   12078:	add	r1, pc, r1
   1207c:	mov	r5, r0
   12080:	ldr	r0, [sp, #32]
   12084:	bl	14b24 <close_stdout@@Base+0x25cc>
   12088:	ldr	r1, [pc, #204]	; 1215c <__assert_fail@plt+0xc84>
   1208c:	add	r1, pc, r1
   12090:	mov	r4, r0
   12094:	b	11b50 <__assert_fail@plt+0x678>
   12098:	strdeq	r9, [r1], -ip
   1209c:	andeq	r0, r0, r8, lsr #2
   120a0:	andeq	r8, r0, r4, ror #18
   120a4:	andeq	r8, r0, r8, lsl r8
   120a8:	andeq	r9, r1, r0, asr ip
   120ac:	ldrdeq	r8, [r0], -r0
   120b0:	andeq	r9, r1, r8, asr #24
   120b4:	ldrdeq	r8, [r0], -ip
   120b8:			; <UNDEFINED> instruction: 0x000088bc
   120bc:	andeq	r0, r0, r8, lsr r1
   120c0:	andeq	r8, r0, r4, ror #17
   120c4:	andeq	r9, r1, r0, lsr #24
   120c8:	andeq	r8, r0, r8, lsl #18
   120cc:			; <UNDEFINED> instruction: 0x000198b8
   120d0:	andeq	r0, r0, r4, asr #2
   120d4:	andeq	r0, r0, r0, lsr r1
   120d8:	andeq	r8, r0, r0, ror r8
   120dc:	andeq	r8, r0, r4, ror r8
   120e0:	andeq	r8, r0, ip, ror #16
   120e4:	andeq	r8, r0, r8, lsl #14
   120e8:	andeq	r0, r0, ip, asr r1
   120ec:	andeq	r0, r0, ip, lsr #2
   120f0:	muleq	r1, r0, r9
   120f4:	andeq	r9, r1, r0, ror #17
   120f8:	andeq	r9, r1, ip, asr #17
   120fc:	ldrdeq	r8, [r0], -ip
   12100:	muleq	r0, r4, r7
   12104:	andeq	r8, r0, r0, asr r7
   12108:	andeq	r8, r0, r8, lsr #14
   1210c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   12110:	andeq	r9, r1, ip, asr r7
   12114:	andeq	r8, r0, r4, lsl r5
   12118:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1211c:	andeq	r8, r0, ip, lsl #8
   12120:	muleq	r0, ip, r3
   12124:	andeq	r8, r0, r8, lsl #8
   12128:	strdeq	r9, [r1], -r0
   1212c:	andeq	r8, r0, r4, asr r2
   12130:	andeq	r9, r1, r4, ror r4
   12134:	strdeq	r8, [r0], -ip
   12138:	strdeq	r8, [r0], -ip
   1213c:	andeq	r7, r0, ip, ror #31
   12140:	andeq	r7, r0, r4, lsr #30
   12144:	andeq	r7, r0, r4, lsl #30
   12148:	strdeq	r7, [r0], -r8
   1214c:	andeq	r7, r0, r0, lsl #28
   12150:	strdeq	r7, [r0], -r4
   12154:	andeq	r7, r0, r4, asr lr
   12158:	andeq	r7, r0, ip, ror #28
   1215c:	andeq	r7, r0, r0, ror #28
   12160:	mov	fp, #0
   12164:	mov	lr, #0
   12168:	pop	{r1}		; (ldr r1, [sp], #4)
   1216c:	mov	r2, sp
   12170:	push	{r2}		; (str r2, [sp, #-4]!)
   12174:	push	{r0}		; (str r0, [sp, #-4]!)
   12178:	ldr	ip, [pc, #16]	; 12190 <__assert_fail@plt+0xcb8>
   1217c:	push	{ip}		; (str ip, [sp, #-4]!)
   12180:	ldr	r0, [pc, #12]	; 12194 <__assert_fail@plt+0xcbc>
   12184:	ldr	r3, [pc, #12]	; 12198 <__assert_fail@plt+0xcc0>
   12188:	bl	11340 <__libc_start_main@plt>
   1218c:	bl	114c0 <abort@plt>
   12190:	andeq	r9, r1, r8, lsr #17
   12194:	andeq	r1, r1, r4, ror #9
   12198:	andeq	r9, r1, r4, asr #16
   1219c:	ldr	r3, [pc, #20]	; 121b8 <__assert_fail@plt+0xce0>
   121a0:	ldr	r2, [pc, #20]	; 121bc <__assert_fail@plt+0xce4>
   121a4:	add	r3, pc, r3
   121a8:	ldr	r2, [r3, r2]
   121ac:	cmp	r2, #0
   121b0:	bxeq	lr
   121b4:	b	11358 <__gmon_start__@plt>
   121b8:	andeq	r8, r1, r4, asr lr
   121bc:	andeq	r0, r0, ip, lsr r1
   121c0:	push	{r3, lr}
   121c4:	movw	r0, #45484	; 0xb1ac
   121c8:	ldr	r3, [pc, #36]	; 121f4 <__assert_fail@plt+0xd1c>
   121cc:	movt	r0, #2
   121d0:	rsb	r3, r0, r3
   121d4:	cmp	r3, #6
   121d8:	popls	{r3, pc}
   121dc:	movw	r3, #0
   121e0:	movt	r3, #0
   121e4:	cmp	r3, #0
   121e8:	popeq	{r3, pc}
   121ec:	blx	r3
   121f0:	pop	{r3, pc}
   121f4:	andeq	fp, r2, pc, lsr #3
   121f8:	push	{r3, lr}
   121fc:	movw	r0, #45484	; 0xb1ac
   12200:	movw	r3, #45484	; 0xb1ac
   12204:	movt	r0, #2
   12208:	movt	r3, #2
   1220c:	rsb	r3, r0, r3
   12210:	asr	r3, r3, #2
   12214:	add	r3, r3, r3, lsr #31
   12218:	asrs	r1, r3, #1
   1221c:	popeq	{r3, pc}
   12220:	movw	r2, #0
   12224:	movt	r2, #0
   12228:	cmp	r2, #0
   1222c:	popeq	{r3, pc}
   12230:	blx	r2
   12234:	pop	{r3, pc}
   12238:	push	{r4, lr}
   1223c:	movw	r4, #45484	; 0xb1ac
   12240:	movt	r4, #2
   12244:	ldrb	r3, [r4]
   12248:	cmp	r3, #0
   1224c:	popne	{r4, pc}
   12250:	bl	121c0 <__assert_fail@plt+0xce8>
   12254:	mov	r3, #1
   12258:	strb	r3, [r4]
   1225c:	pop	{r4, pc}
   12260:	movw	r0, #44656	; 0xae70
   12264:	movt	r0, #2
   12268:	push	{r3, lr}
   1226c:	ldr	r3, [r0]
   12270:	cmp	r3, #0
   12274:	beq	1228c <__assert_fail@plt+0xdb4>
   12278:	movw	r3, #0
   1227c:	movt	r3, #0
   12280:	cmp	r3, #0
   12284:	beq	1228c <__assert_fail@plt+0xdb4>
   12288:	blx	r3
   1228c:	pop	{r3, lr}
   12290:	b	121f8 <__assert_fail@plt+0xd20>
   12294:	push	{r4, r5, r6, lr}
   12298:	subs	r4, r0, #0
   1229c:	ldr	r5, [pc, #568]	; 124dc <__assert_fail@plt+0x1004>
   122a0:	add	r5, pc, r5
   122a4:	beq	122ec <__assert_fail@plt+0xe14>
   122a8:	ldr	r3, [pc, #560]	; 124e0 <__assert_fail@plt+0x1008>
   122ac:	mov	r2, #5
   122b0:	ldr	r1, [pc, #556]	; 124e4 <__assert_fail@plt+0x100c>
   122b4:	mov	r0, #0
   122b8:	ldr	r3, [r5, r3]
   122bc:	add	r1, pc, r1
   122c0:	ldr	r6, [r3]
   122c4:	bl	11268 <dcgettext@plt>
   122c8:	ldr	r3, [pc, #536]	; 124e8 <__assert_fail@plt+0x1010>
   122cc:	mov	r1, #1
   122d0:	ldr	r3, [r5, r3]
   122d4:	ldr	r3, [r3]
   122d8:	mov	r2, r0
   122dc:	mov	r0, r6
   122e0:	bl	11424 <__fprintf_chk@plt>
   122e4:	mov	r0, r4
   122e8:	bl	1137c <exit@plt>
   122ec:	ldr	r1, [pc, #504]	; 124ec <__assert_fail@plt+0x1014>
   122f0:	mov	r2, #5
   122f4:	add	r1, pc, r1
   122f8:	bl	11268 <dcgettext@plt>
   122fc:	ldr	r3, [pc, #484]	; 124e8 <__assert_fail@plt+0x1010>
   12300:	ldr	r6, [r5, r3]
   12304:	ldr	r2, [r6]
   12308:	mov	r1, r0
   1230c:	mov	r0, #1
   12310:	bl	1140c <__printf_chk@plt>
   12314:	ldr	r1, [pc, #468]	; 124f0 <__assert_fail@plt+0x1018>
   12318:	mov	r2, #5
   1231c:	mov	r0, r4
   12320:	add	r1, pc, r1
   12324:	bl	11268 <dcgettext@plt>
   12328:	ldr	r3, [pc, #452]	; 124f4 <__assert_fail@plt+0x101c>
   1232c:	ldr	r5, [r5, r3]
   12330:	ldr	r1, [r5]
   12334:	bl	111c0 <fputs_unlocked@plt>
   12338:	ldr	r1, [pc, #440]	; 124f8 <__assert_fail@plt+0x1020>
   1233c:	mov	r2, #5
   12340:	mov	r0, r4
   12344:	add	r1, pc, r1
   12348:	bl	11268 <dcgettext@plt>
   1234c:	ldr	r1, [r5]
   12350:	bl	111c0 <fputs_unlocked@plt>
   12354:	ldr	r1, [pc, #416]	; 124fc <__assert_fail@plt+0x1024>
   12358:	mov	r2, #5
   1235c:	mov	r0, r4
   12360:	add	r1, pc, r1
   12364:	bl	11268 <dcgettext@plt>
   12368:	ldr	r1, [r5]
   1236c:	bl	111c0 <fputs_unlocked@plt>
   12370:	ldr	r1, [pc, #392]	; 12500 <__assert_fail@plt+0x1028>
   12374:	mov	r2, #5
   12378:	mov	r0, r4
   1237c:	add	r1, pc, r1
   12380:	bl	11268 <dcgettext@plt>
   12384:	ldr	r1, [r5]
   12388:	bl	111c0 <fputs_unlocked@plt>
   1238c:	ldr	r1, [pc, #368]	; 12504 <__assert_fail@plt+0x102c>
   12390:	mov	r2, #5
   12394:	mov	r0, r4
   12398:	add	r1, pc, r1
   1239c:	bl	11268 <dcgettext@plt>
   123a0:	ldr	r1, [r5]
   123a4:	bl	111c0 <fputs_unlocked@plt>
   123a8:	ldr	r1, [pc, #344]	; 12508 <__assert_fail@plt+0x1030>
   123ac:	mov	r2, #5
   123b0:	mov	r0, r4
   123b4:	add	r1, pc, r1
   123b8:	bl	11268 <dcgettext@plt>
   123bc:	ldr	r1, [r5]
   123c0:	bl	111c0 <fputs_unlocked@plt>
   123c4:	ldr	r1, [pc, #320]	; 1250c <__assert_fail@plt+0x1034>
   123c8:	mov	r2, #5
   123cc:	mov	r0, r4
   123d0:	add	r1, pc, r1
   123d4:	bl	11268 <dcgettext@plt>
   123d8:	ldr	r1, [r5]
   123dc:	bl	111c0 <fputs_unlocked@plt>
   123e0:	ldr	r1, [pc, #296]	; 12510 <__assert_fail@plt+0x1038>
   123e4:	mov	r2, #5
   123e8:	mov	r0, r4
   123ec:	add	r1, pc, r1
   123f0:	bl	11268 <dcgettext@plt>
   123f4:	ldr	r1, [r5]
   123f8:	bl	111c0 <fputs_unlocked@plt>
   123fc:	ldr	r1, [pc, #272]	; 12514 <__assert_fail@plt+0x103c>
   12400:	mov	r2, #5
   12404:	mov	r0, r4
   12408:	add	r1, pc, r1
   1240c:	bl	11268 <dcgettext@plt>
   12410:	ldr	r1, [r5]
   12414:	bl	111c0 <fputs_unlocked@plt>
   12418:	ldr	r1, [pc, #248]	; 12518 <__assert_fail@plt+0x1040>
   1241c:	mov	r2, #5
   12420:	mov	r0, r4
   12424:	add	r1, pc, r1
   12428:	bl	11268 <dcgettext@plt>
   1242c:	ldr	r2, [pc, #232]	; 1251c <__assert_fail@plt+0x1044>
   12430:	ldr	r3, [pc, #232]	; 12520 <__assert_fail@plt+0x1048>
   12434:	add	r2, pc, r2
   12438:	add	r3, pc, r3
   1243c:	mov	r1, r0
   12440:	mov	r0, #1
   12444:	bl	1140c <__printf_chk@plt>
   12448:	mov	r0, #5
   1244c:	mov	r1, r4
   12450:	bl	1146c <setlocale@plt>
   12454:	cmp	r0, #0
   12458:	beq	12474 <__assert_fail@plt+0xf9c>
   1245c:	ldr	r1, [pc, #192]	; 12524 <__assert_fail@plt+0x104c>
   12460:	mov	r2, #3
   12464:	add	r1, pc, r1
   12468:	bl	114b4 <strncmp@plt>
   1246c:	cmp	r0, #0
   12470:	bne	124a8 <__assert_fail@plt+0xfd0>
   12474:	ldr	r1, [pc, #172]	; 12528 <__assert_fail@plt+0x1050>
   12478:	mov	r2, #5
   1247c:	mov	r0, #0
   12480:	add	r1, pc, r1
   12484:	bl	11268 <dcgettext@plt>
   12488:	mov	r5, r0
   1248c:	ldr	r0, [r6]
   12490:	bl	12670 <close_stdout@@Base+0x118>
   12494:	mov	r1, r5
   12498:	mov	r2, r0
   1249c:	mov	r0, #1
   124a0:	bl	1140c <__printf_chk@plt>
   124a4:	b	122e4 <__assert_fail@plt+0xe0c>
   124a8:	ldr	r1, [pc, #124]	; 1252c <__assert_fail@plt+0x1054>
   124ac:	mov	r2, #5
   124b0:	mov	r0, r4
   124b4:	add	r1, pc, r1
   124b8:	bl	11268 <dcgettext@plt>
   124bc:	mov	r5, r0
   124c0:	ldr	r0, [r6]
   124c4:	bl	12670 <close_stdout@@Base+0x118>
   124c8:	mov	r1, r5
   124cc:	mov	r2, r0
   124d0:	mov	r0, #1
   124d4:	bl	1140c <__printf_chk@plt>
   124d8:	b	12474 <__assert_fail@plt+0xf9c>
   124dc:	andeq	r8, r1, r8, asr sp
   124e0:	andeq	r0, r0, r4, lsr r1
   124e4:	andeq	r7, r0, r4, lsr #12
   124e8:	andeq	r0, r0, r0, asr r1
   124ec:	andeq	r7, r0, r4, lsl r6
   124f0:	andeq	r7, r0, r8, lsl #12
   124f4:	andeq	r0, r0, r4, asr #2
   124f8:	strdeq	r7, [r0], -r0
   124fc:	andeq	r7, r0, r0, lsr #14
   12500:	andeq	r7, r0, r8, lsr r7
   12504:	andeq	r7, r0, ip, ror #14
   12508:	andeq	r7, r0, r0, asr #15
   1250c:	ldrdeq	r7, [r0], -r4
   12510:	strdeq	r7, [r0], -r0
   12514:	andeq	r7, r0, r0, ror r8
   12518:	andeq	r7, r0, r4, lsl r9
   1251c:	andeq	r7, r0, ip, lsl r9
   12520:	andeq	r7, r0, r8, lsr #18
   12524:	andeq	r7, r0, r4, lsr #18
   12528:	andeq	r7, r0, r4, asr r9
   1252c:	ldrdeq	r7, [r0], -r8
   12530:	ldr	r3, [pc, #8]	; 12540 <__assert_fail@plt+0x1068>
   12534:	add	r3, pc, r3
   12538:	str	r0, [r3]
   1253c:	bx	lr
   12540:	andeq	r8, r1, ip, ror ip
   12544:	ldr	r3, [pc, #8]	; 12554 <__assert_fail@plt+0x107c>
   12548:	add	r3, pc, r3
   1254c:	strb	r0, [r3, #4]
   12550:	bx	lr
   12554:	andeq	r8, r1, r8, ror #24

00012558 <close_stdout@@Base>:
   12558:	push	{r4, r5, r6, r7, lr}
   1255c:	sub	sp, sp, #12
   12560:	ldr	r4, [pc, #228]	; 1264c <close_stdout@@Base+0xf4>
   12564:	ldr	r3, [pc, #228]	; 12650 <close_stdout@@Base+0xf8>
   12568:	add	r4, pc, r4
   1256c:	ldr	r3, [r4, r3]
   12570:	ldr	r0, [r3]
   12574:	bl	16478 <close_stdout@@Base+0x3f20>
   12578:	cmp	r0, #0
   1257c:	beq	125a4 <close_stdout@@Base+0x4c>
   12580:	ldr	r3, [pc, #204]	; 12654 <close_stdout@@Base+0xfc>
   12584:	add	r3, pc, r3
   12588:	ldrb	r3, [r3, #4]
   1258c:	cmp	r3, #0
   12590:	beq	125c4 <close_stdout@@Base+0x6c>
   12594:	bl	113b8 <__errno_location@plt>
   12598:	ldr	r3, [r0]
   1259c:	cmp	r3, #32
   125a0:	bne	125c4 <close_stdout@@Base+0x6c>
   125a4:	ldr	r3, [pc, #172]	; 12658 <close_stdout@@Base+0x100>
   125a8:	ldr	r3, [r4, r3]
   125ac:	ldr	r0, [r3]
   125b0:	bl	16478 <close_stdout@@Base+0x3f20>
   125b4:	cmp	r0, #0
   125b8:	bne	12618 <close_stdout@@Base+0xc0>
   125bc:	add	sp, sp, #12
   125c0:	pop	{r4, r5, r6, r7, pc}
   125c4:	ldr	r1, [pc, #144]	; 1265c <close_stdout@@Base+0x104>
   125c8:	mov	r0, #0
   125cc:	mov	r2, #5
   125d0:	add	r1, pc, r1
   125d4:	bl	11268 <dcgettext@plt>
   125d8:	ldr	r3, [pc, #128]	; 12660 <close_stdout@@Base+0x108>
   125dc:	ldr	r5, [pc, r3]
   125e0:	cmp	r5, #0
   125e4:	mov	r6, r0
   125e8:	beq	12628 <close_stdout@@Base+0xd0>
   125ec:	bl	113b8 <__errno_location@plt>
   125f0:	ldr	r7, [r0]
   125f4:	mov	r0, r5
   125f8:	bl	149d8 <close_stdout@@Base+0x2480>
   125fc:	ldr	r2, [pc, #96]	; 12664 <close_stdout@@Base+0x10c>
   12600:	str	r6, [sp]
   12604:	mov	r1, r7
   12608:	add	r2, pc, r2
   1260c:	mov	r3, r0
   12610:	mov	r0, #0
   12614:	bl	11304 <error@plt>
   12618:	ldr	r3, [pc, #72]	; 12668 <close_stdout@@Base+0x110>
   1261c:	ldr	r3, [r4, r3]
   12620:	ldr	r0, [r3]
   12624:	bl	1122c <_exit@plt>
   12628:	bl	113b8 <__errno_location@plt>
   1262c:	ldr	r2, [pc, #56]	; 1266c <close_stdout@@Base+0x114>
   12630:	add	r2, pc, r2
   12634:	mov	r3, r0
   12638:	mov	r0, r5
   1263c:	ldr	r1, [r3]
   12640:	mov	r3, r6
   12644:	bl	11304 <error@plt>
   12648:	b	12618 <close_stdout@@Base+0xc0>
   1264c:	muleq	r1, r0, sl
   12650:	andeq	r0, r0, r4, asr #2
   12654:	andeq	r8, r1, ip, lsr #24
   12658:	andeq	r0, r0, r4, lsr r1
   1265c:	andeq	r7, r0, r0, lsl fp
   12660:	ldrdeq	r8, [r1], -r4
   12664:	andeq	r7, r0, r4, ror #21
   12668:	andeq	r0, r0, r8, asr #2
   1266c:	andeq	r7, r0, r0, asr #21
   12670:	ldrb	r3, [r0]
   12674:	cmp	r3, #47	; 0x2f
   12678:	bne	12694 <close_stdout@@Base+0x13c>
   1267c:	add	r2, r0, #1
   12680:	mov	r0, r2
   12684:	add	r2, r2, #1
   12688:	ldrb	r3, [r0]
   1268c:	cmp	r3, #47	; 0x2f
   12690:	beq	12680 <close_stdout@@Base+0x128>
   12694:	cmp	r3, #0
   12698:	bxeq	lr
   1269c:	mov	r2, r0
   126a0:	mov	r1, #0
   126a4:	cmp	r3, #47	; 0x2f
   126a8:	moveq	r1, #1
   126ac:	beq	126bc <close_stdout@@Base+0x164>
   126b0:	cmp	r1, #0
   126b4:	movne	r0, r2
   126b8:	movne	r1, #0
   126bc:	ldrb	r3, [r2, #1]!
   126c0:	cmp	r3, #0
   126c4:	bne	126a4 <close_stdout@@Base+0x14c>
   126c8:	bx	lr
   126cc:	push	{r4, lr}
   126d0:	mov	r4, r0
   126d4:	bl	11394 <strlen@plt>
   126d8:	cmp	r0, #1
   126dc:	popls	{r4, pc}
   126e0:	sub	r3, r0, #1
   126e4:	ldrb	r2, [r4, r3]
   126e8:	cmp	r2, #47	; 0x2f
   126ec:	popne	{r4, pc}
   126f0:	mov	r0, r3
   126f4:	cmp	r0, #1
   126f8:	sub	r3, r3, #1
   126fc:	beq	12710 <close_stdout@@Base+0x1b8>
   12700:	ldrb	r2, [r4, r3]
   12704:	cmp	r2, #47	; 0x2f
   12708:	popne	{r4, pc}
   1270c:	b	126f0 <close_stdout@@Base+0x198>
   12710:	pop	{r4, pc}
   12714:	push	{r3, r4, r5, r6, r7, lr}
   12718:	subs	r4, r0, #0
   1271c:	ldr	r5, [pc, #172]	; 127d0 <close_stdout@@Base+0x278>
   12720:	add	r5, pc, r5
   12724:	beq	127ac <close_stdout@@Base+0x254>
   12728:	mov	r1, #47	; 0x2f
   1272c:	bl	11478 <strrchr@plt>
   12730:	subs	r6, r0, #0
   12734:	beq	12790 <close_stdout@@Base+0x238>
   12738:	add	r7, r6, #1
   1273c:	rsb	r3, r4, r7
   12740:	cmp	r3, #6
   12744:	ble	12790 <close_stdout@@Base+0x238>
   12748:	ldr	r1, [pc, #132]	; 127d4 <close_stdout@@Base+0x27c>
   1274c:	sub	r0, r6, #6
   12750:	mov	r2, #7
   12754:	add	r1, pc, r1
   12758:	bl	114b4 <strncmp@plt>
   1275c:	cmp	r0, #0
   12760:	bne	12790 <close_stdout@@Base+0x238>
   12764:	ldr	r1, [pc, #108]	; 127d8 <close_stdout@@Base+0x280>
   12768:	mov	r0, r7
   1276c:	mov	r2, #3
   12770:	add	r1, pc, r1
   12774:	bl	114b4 <strncmp@plt>
   12778:	cmp	r0, #0
   1277c:	movne	r4, r7
   12780:	ldreq	r3, [pc, #84]	; 127dc <close_stdout@@Base+0x284>
   12784:	addeq	r4, r6, #4
   12788:	ldreq	r3, [r5, r3]
   1278c:	streq	r4, [r3]
   12790:	ldr	r2, [pc, #72]	; 127e0 <close_stdout@@Base+0x288>
   12794:	ldr	r3, [pc, #72]	; 127e4 <close_stdout@@Base+0x28c>
   12798:	ldr	r2, [r5, r2]
   1279c:	str	r4, [r2]
   127a0:	ldr	r3, [r5, r3]
   127a4:	str	r4, [r3]
   127a8:	pop	{r3, r4, r5, r6, r7, pc}
   127ac:	ldr	r3, [pc, #52]	; 127e8 <close_stdout@@Base+0x290>
   127b0:	mov	r1, #1
   127b4:	ldr	r0, [pc, #48]	; 127ec <close_stdout@@Base+0x294>
   127b8:	mov	r2, #55	; 0x37
   127bc:	ldr	r3, [r5, r3]
   127c0:	add	r0, pc, r0
   127c4:	ldr	r3, [r3]
   127c8:	bl	112bc <fwrite@plt>
   127cc:	bl	114c0 <abort@plt>
   127d0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   127d4:	ldrdeq	r7, [r0], -r8
   127d8:	andeq	r7, r0, r4, asr #19
   127dc:	andeq	r0, r0, r8, asr r1
   127e0:	andeq	r0, r0, r0, asr r1
   127e4:	andeq	r0, r0, ip, asr #2
   127e8:	andeq	r0, r0, r4, lsr r1
   127ec:	andeq	r7, r0, r4, lsr r9
   127f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127f4:	sub	sp, sp, #156	; 0x9c
   127f8:	ldr	r7, [pc, #2116]	; 13044 <close_stdout@@Base+0xaec>
   127fc:	add	r2, sp, #120	; 0x78
   12800:	ldr	r3, [pc, #2112]	; 13048 <close_stdout@@Base+0xaf0>
   12804:	mov	fp, r0
   12808:	add	r7, pc, r7
   1280c:	mov	r0, r1
   12810:	mov	r1, #2
   12814:	add	r6, sp, #40	; 0x28
   12818:	ldr	r3, [r7, r3]
   1281c:	add	r9, sp, #96	; 0x60
   12820:	str	r2, [sp, #16]
   12824:	mov	r4, #1
   12828:	mov	r5, #0
   1282c:	str	r3, [sp, #28]
   12830:	add	r3, sp, #64	; 0x40
   12834:	ldr	r2, [sp, #28]
   12838:	str	r3, [sp, #12]
   1283c:	ldr	r3, [r2]
   12840:	str	r3, [sp, #148]	; 0x94
   12844:	bl	14b64 <close_stdout@@Base+0x260c>
   12848:	str	r0, [sp, #20]
   1284c:	ldrb	r3, [fp]
   12850:	cmp	r3, #0
   12854:	beq	12e4c <close_stdout@@Base+0x8f4>
   12858:	mov	r0, fp
   1285c:	ldr	r1, [sp, #20]
   12860:	bl	17470 <close_stdout@@Base+0x4f18>
   12864:	subs	r8, r0, #0
   12868:	beq	12e4c <close_stdout@@Base+0x8f4>
   1286c:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   12870:	cmp	r0, #1
   12874:	bls	12dcc <close_stdout@@Base+0x874>
   12878:	cmp	fp, r8
   1287c:	str	r5, [r6, #4]
   12880:	str	fp, [sp, #52]	; 0x34
   12884:	addcc	sl, sp, #64	; 0x40
   12888:	strb	r5, [sp, #36]	; 0x24
   1288c:	str	r5, [r6]
   12890:	strb	r5, [sp, #48]	; 0x30
   12894:	strcc	r9, [sp, #24]
   12898:	bcs	12e6c <close_stdout@@Base+0x914>
   1289c:	ldrb	r3, [sp, #36]	; 0x24
   128a0:	cmp	r3, #0
   128a4:	bne	12904 <close_stdout@@Base+0x3ac>
   128a8:	ldr	r2, [pc, #1948]	; 1304c <close_stdout@@Base+0xaf4>
   128ac:	ldrb	r3, [fp]
   128b0:	ldr	r1, [r7, r2]
   128b4:	and	r2, r3, #31
   128b8:	lsr	r3, r3, #5
   128bc:	ldr	r3, [r1, r3, lsl #2]
   128c0:	lsr	r3, r3, r2
   128c4:	tst	r3, #1
   128c8:	beq	128f0 <close_stdout@@Base+0x398>
   128cc:	str	r4, [sp, #56]	; 0x38
   128d0:	ldrb	r2, [fp]
   128d4:	strb	r4, [sp, #60]	; 0x3c
   128d8:	strb	r4, [sp, #48]	; 0x30
   128dc:	mov	r9, r2
   128e0:	cmp	r9, #0
   128e4:	str	r2, [sp, #64]	; 0x40
   128e8:	bne	12988 <close_stdout@@Base+0x430>
   128ec:	bl	114c0 <abort@plt>
   128f0:	mov	r0, r6
   128f4:	bl	11244 <mbsinit@plt>
   128f8:	cmp	r0, #0
   128fc:	beq	13000 <close_stdout@@Base+0xaa8>
   12900:	strb	r4, [sp, #36]	; 0x24
   12904:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   12908:	mov	r1, r0
   1290c:	mov	r0, fp
   12910:	bl	14b38 <close_stdout@@Base+0x25e0>
   12914:	mov	r1, fp
   12918:	mov	r3, r6
   1291c:	mov	r2, r0
   12920:	mov	r0, sl
   12924:	bl	112f8 <mbrtowc@plt>
   12928:	cmn	r0, #1
   1292c:	str	r0, [sp, #56]	; 0x38
   12930:	beq	12d74 <close_stdout@@Base+0x81c>
   12934:	cmn	r0, #2
   12938:	beq	12da4 <close_stdout@@Base+0x84c>
   1293c:	cmp	r0, #0
   12940:	bne	12d9c <close_stdout@@Base+0x844>
   12944:	ldr	fp, [sp, #52]	; 0x34
   12948:	str	r4, [sp, #56]	; 0x38
   1294c:	ldrb	r3, [fp]
   12950:	cmp	r3, #0
   12954:	bne	13024 <close_stdout@@Base+0xacc>
   12958:	ldr	r2, [sp, #64]	; 0x40
   1295c:	cmp	r2, #0
   12960:	bne	12d54 <close_stdout@@Base+0x7fc>
   12964:	mov	r9, r2
   12968:	mov	r0, r6
   1296c:	strb	r4, [sp, #60]	; 0x3c
   12970:	bl	11244 <mbsinit@plt>
   12974:	strb	r4, [sp, #48]	; 0x30
   12978:	cmp	r0, #0
   1297c:	strbne	r5, [sp, #36]	; 0x24
   12980:	cmp	r9, #0
   12984:	beq	128ec <close_stdout@@Base+0x394>
   12988:	ldr	fp, [sp, #52]	; 0x34
   1298c:	ldr	r3, [sp, #56]	; 0x38
   12990:	strb	r5, [sp, #48]	; 0x30
   12994:	add	fp, fp, r3
   12998:	ldrb	r3, [sp, #60]	; 0x3c
   1299c:	cmp	r8, fp
   129a0:	str	fp, [sp, #52]	; 0x34
   129a4:	bhi	1289c <close_stdout@@Base+0x344>
   129a8:	cmp	r3, #0
   129ac:	mov	r2, r9
   129b0:	ldr	r9, [sp, #24]
   129b4:	beq	12e6c <close_stdout@@Base+0x914>
   129b8:	mov	r0, r2
   129bc:	bl	113c4 <iswalnum@plt>
   129c0:	rsbs	r0, r0, #1
   129c4:	movcc	r0, #0
   129c8:	str	r0, [sp, #24]
   129cc:	strb	r5, [sp, #92]	; 0x5c
   129d0:	ldrb	r2, [sp, #92]	; 0x5c
   129d4:	ldr	fp, [sp, #20]
   129d8:	cmp	r2, #0
   129dc:	str	r5, [r6, #4]
   129e0:	str	r5, [r9, #4]
   129e4:	str	r8, [sp, #52]	; 0x34
   129e8:	strb	r5, [sp, #36]	; 0x24
   129ec:	str	r5, [r6]
   129f0:	strb	r5, [sp, #48]	; 0x30
   129f4:	str	fp, [sp, #108]	; 0x6c
   129f8:	str	r5, [r9]
   129fc:	strb	r5, [sp, #104]	; 0x68
   12a00:	bne	12bbc <close_stdout@@Base+0x664>
   12a04:	ldr	r1, [pc, #1600]	; 1304c <close_stdout@@Base+0xaf4>
   12a08:	ldrb	r2, [fp]
   12a0c:	ldr	r0, [r7, r1]
   12a10:	and	r1, r2, #31
   12a14:	lsr	r2, r2, #5
   12a18:	ldr	r2, [r0, r2, lsl #2]
   12a1c:	lsr	r2, r2, r1
   12a20:	tst	r2, #1
   12a24:	beq	12d1c <close_stdout@@Base+0x7c4>
   12a28:	str	r4, [sp, #112]	; 0x70
   12a2c:	ldrb	r3, [fp]
   12a30:	strb	r4, [sp, #116]	; 0x74
   12a34:	mov	fp, r3
   12a38:	str	r3, [sp, #120]	; 0x78
   12a3c:	cmp	fp, #0
   12a40:	strb	r4, [sp, #104]	; 0x68
   12a44:	mov	r3, #1
   12a48:	bne	12b70 <close_stdout@@Base+0x618>
   12a4c:	ldrb	ip, [sp, #48]	; 0x30
   12a50:	cmp	ip, #0
   12a54:	bne	12dc0 <close_stdout@@Base+0x868>
   12a58:	ldrb	r2, [sp, #36]	; 0x24
   12a5c:	ldr	sl, [sp, #52]	; 0x34
   12a60:	cmp	r2, #0
   12a64:	bne	12f10 <close_stdout@@Base+0x9b8>
   12a68:	ldr	r1, [pc, #1500]	; 1304c <close_stdout@@Base+0xaf4>
   12a6c:	ldrb	r2, [sl]
   12a70:	ldr	r0, [r7, r1]
   12a74:	and	r1, r2, #31
   12a78:	lsr	r2, r2, #5
   12a7c:	ldr	r2, [r0, r2, lsl #2]
   12a80:	lsr	r2, r2, r1
   12a84:	tst	r2, #1
   12a88:	beq	12eec <close_stdout@@Base+0x994>
   12a8c:	str	r3, [sp, #56]	; 0x38
   12a90:	mov	ip, r3
   12a94:	ldrb	r2, [sl]
   12a98:	strb	r3, [sp, #60]	; 0x3c
   12a9c:	mov	r3, r2
   12aa0:	str	r2, [sp, #64]	; 0x40
   12aa4:	strb	r4, [sp, #48]	; 0x30
   12aa8:	cmp	ip, #0
   12aac:	beq	12ab8 <close_stdout@@Base+0x560>
   12ab0:	cmp	r3, #0
   12ab4:	beq	12ad4 <close_stdout@@Base+0x57c>
   12ab8:	ldrb	r2, [sp, #60]	; 0x3c
   12abc:	cmp	r2, #0
   12ac0:	beq	12ad4 <close_stdout@@Base+0x57c>
   12ac4:	mov	r0, r3
   12ac8:	bl	113c4 <iswalnum@plt>
   12acc:	cmp	r0, #0
   12ad0:	bne	12ae0 <close_stdout@@Base+0x588>
   12ad4:	ldr	r2, [sp, #24]
   12ad8:	cmp	r2, #0
   12adc:	bne	12ff8 <close_stdout@@Base+0xaa0>
   12ae0:	ldr	r2, [pc, #1380]	; 1304c <close_stdout@@Base+0xaf4>
   12ae4:	str	r5, [r6, #4]
   12ae8:	str	r8, [sp, #52]	; 0x34
   12aec:	strb	r5, [sp, #36]	; 0x24
   12af0:	str	r5, [r6]
   12af4:	strb	r5, [sp, #48]	; 0x30
   12af8:	ldrb	r3, [r8]
   12afc:	ldr	r1, [r7, r2]
   12b00:	and	r2, r3, #31
   12b04:	lsr	r3, r3, #5
   12b08:	ldr	r3, [r1, r3, lsl #2]
   12b0c:	lsr	r3, r3, r2
   12b10:	tst	r3, #1
   12b14:	beq	12e78 <close_stdout@@Base+0x920>
   12b18:	str	r4, [sp, #56]	; 0x38
   12b1c:	ldrb	fp, [r8]
   12b20:	strb	r4, [sp, #60]	; 0x3c
   12b24:	str	fp, [sp, #64]	; 0x40
   12b28:	cmp	fp, #0
   12b2c:	strb	r4, [sp, #48]	; 0x30
   12b30:	bne	12e60 <close_stdout@@Base+0x908>
   12b34:	ldr	r0, [sp, #20]
   12b38:	bl	11220 <free@plt>
   12b3c:	ldr	r1, [sp, #28]
   12b40:	ldr	r2, [sp, #148]	; 0x94
   12b44:	mov	r0, fp
   12b48:	ldr	r3, [r1]
   12b4c:	cmp	r2, r3
   12b50:	bne	13020 <close_stdout@@Base+0xac8>
   12b54:	add	sp, sp, #156	; 0x9c
   12b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b5c:	ldr	r0, [sp, #108]	; 0x6c
   12b60:	bl	11394 <strlen@plt>
   12b64:	strb	r5, [sp, #116]	; 0x74
   12b68:	str	r0, [sp, #112]	; 0x70
   12b6c:	strb	r4, [sp, #104]	; 0x68
   12b70:	ldrb	fp, [sp, #48]	; 0x30
   12b74:	cmp	fp, #0
   12b78:	beq	12c20 <close_stdout@@Base+0x6c8>
   12b7c:	ldrb	fp, [sp, #60]	; 0x3c
   12b80:	cmp	fp, #0
   12b84:	bne	12c74 <close_stdout@@Base+0x71c>
   12b88:	ldr	r1, [sp, #52]	; 0x34
   12b8c:	ldr	r2, [sp, #56]	; 0x38
   12b90:	ldr	fp, [sp, #108]	; 0x6c
   12b94:	add	r1, r1, r2
   12b98:	ldr	r2, [sp, #112]	; 0x70
   12b9c:	strb	r5, [sp, #48]	; 0x30
   12ba0:	add	fp, fp, r2
   12ba4:	ldrb	r2, [sp, #92]	; 0x5c
   12ba8:	strb	r5, [sp, #104]	; 0x68
   12bac:	cmp	r2, #0
   12bb0:	str	r1, [sp, #52]	; 0x34
   12bb4:	str	fp, [sp, #108]	; 0x6c
   12bb8:	beq	12a04 <close_stdout@@Base+0x4ac>
   12bbc:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   12bc0:	mov	r1, r0
   12bc4:	mov	r0, fp
   12bc8:	bl	14b38 <close_stdout@@Base+0x25e0>
   12bcc:	mov	r1, fp
   12bd0:	mov	r3, r9
   12bd4:	mov	r2, r0
   12bd8:	add	r0, sp, #120	; 0x78
   12bdc:	bl	112f8 <mbrtowc@plt>
   12be0:	cmn	r0, #1
   12be4:	str	r0, [sp, #112]	; 0x70
   12be8:	strbeq	r5, [sp, #116]	; 0x74
   12bec:	streq	r4, [sp, #112]	; 0x70
   12bf0:	beq	12b6c <close_stdout@@Base+0x614>
   12bf4:	cmn	r0, #2
   12bf8:	beq	12b5c <close_stdout@@Base+0x604>
   12bfc:	cmp	r0, #0
   12c00:	beq	12d34 <close_stdout@@Base+0x7dc>
   12c04:	ldr	fp, [sp, #120]	; 0x78
   12c08:	mov	r0, r9
   12c0c:	strb	r4, [sp, #116]	; 0x74
   12c10:	bl	11244 <mbsinit@plt>
   12c14:	cmp	r0, #0
   12c18:	strbne	r5, [sp, #92]	; 0x5c
   12c1c:	b	12a3c <close_stdout@@Base+0x4e4>
   12c20:	ldrb	r3, [sp, #36]	; 0x24
   12c24:	ldr	sl, [sp, #52]	; 0x34
   12c28:	cmp	r3, #0
   12c2c:	bne	12c98 <close_stdout@@Base+0x740>
   12c30:	ldr	r1, [pc, #1044]	; 1304c <close_stdout@@Base+0xaf4>
   12c34:	ldrb	r2, [sl]
   12c38:	ldr	r0, [r7, r1]
   12c3c:	and	r1, r2, #31
   12c40:	lsr	r2, r2, #5
   12c44:	ldr	r2, [r0, r2, lsl #2]
   12c48:	lsr	r2, r2, r1
   12c4c:	tst	r2, #1
   12c50:	beq	12c84 <close_stdout@@Base+0x72c>
   12c54:	str	r4, [sp, #56]	; 0x38
   12c58:	mov	fp, #1
   12c5c:	ldrb	r3, [sl]
   12c60:	strb	r4, [sp, #60]	; 0x3c
   12c64:	str	r3, [sp, #64]	; 0x40
   12c68:	cmp	fp, #0
   12c6c:	strb	r4, [sp, #48]	; 0x30
   12c70:	beq	12b88 <close_stdout@@Base+0x630>
   12c74:	ldr	r3, [sp, #64]	; 0x40
   12c78:	cmp	r3, #0
   12c7c:	bne	12b88 <close_stdout@@Base+0x630>
   12c80:	b	128ec <close_stdout@@Base+0x394>
   12c84:	mov	r0, r6
   12c88:	bl	11244 <mbsinit@plt>
   12c8c:	cmp	r0, #0
   12c90:	beq	13000 <close_stdout@@Base+0xaa8>
   12c94:	strb	r4, [sp, #36]	; 0x24
   12c98:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   12c9c:	mov	r1, r0
   12ca0:	mov	r0, sl
   12ca4:	bl	14b38 <close_stdout@@Base+0x25e0>
   12ca8:	mov	r1, sl
   12cac:	mov	r3, r6
   12cb0:	mov	r2, r0
   12cb4:	add	r0, sp, #64	; 0x40
   12cb8:	bl	112f8 <mbrtowc@plt>
   12cbc:	cmn	r0, #1
   12cc0:	str	r0, [sp, #56]	; 0x38
   12cc4:	strbeq	r5, [sp, #60]	; 0x3c
   12cc8:	streq	r4, [sp, #56]	; 0x38
   12ccc:	beq	12c68 <close_stdout@@Base+0x710>
   12cd0:	cmn	r0, #2
   12cd4:	beq	12d88 <close_stdout@@Base+0x830>
   12cd8:	cmp	r0, #0
   12cdc:	bne	12d00 <close_stdout@@Base+0x7a8>
   12ce0:	ldr	r3, [sp, #52]	; 0x34
   12ce4:	str	r4, [sp, #56]	; 0x38
   12ce8:	ldrb	r3, [r3]
   12cec:	cmp	r3, #0
   12cf0:	bne	13024 <close_stdout@@Base+0xacc>
   12cf4:	ldr	r3, [sp, #64]	; 0x40
   12cf8:	cmp	r3, #0
   12cfc:	bne	12d54 <close_stdout@@Base+0x7fc>
   12d00:	mov	r0, r6
   12d04:	strb	r4, [sp, #60]	; 0x3c
   12d08:	bl	11244 <mbsinit@plt>
   12d0c:	mov	fp, #1
   12d10:	cmp	r0, #0
   12d14:	strbne	r5, [sp, #36]	; 0x24
   12d18:	b	12c68 <close_stdout@@Base+0x710>
   12d1c:	mov	r0, r9
   12d20:	bl	11244 <mbsinit@plt>
   12d24:	cmp	r0, #0
   12d28:	beq	13000 <close_stdout@@Base+0xaa8>
   12d2c:	strb	r4, [sp, #92]	; 0x5c
   12d30:	b	12bbc <close_stdout@@Base+0x664>
   12d34:	ldr	r3, [sp, #108]	; 0x6c
   12d38:	str	r4, [sp, #112]	; 0x70
   12d3c:	ldrb	r3, [r3]
   12d40:	cmp	r3, #0
   12d44:	bne	13024 <close_stdout@@Base+0xacc>
   12d48:	ldr	fp, [sp, #120]	; 0x78
   12d4c:	cmp	fp, #0
   12d50:	beq	12c08 <close_stdout@@Base+0x6b0>
   12d54:	ldr	r0, [pc, #756]	; 13050 <close_stdout@@Base+0xaf8>
   12d58:	mov	r2, #179	; 0xb3
   12d5c:	ldr	r1, [pc, #752]	; 13054 <close_stdout@@Base+0xafc>
   12d60:	ldr	r3, [pc, #752]	; 13058 <close_stdout@@Base+0xb00>
   12d64:	add	r0, pc, r0
   12d68:	add	r1, pc, r1
   12d6c:	add	r3, pc, r3
   12d70:	bl	114d8 <__assert_fail@plt>
   12d74:	str	r4, [sp, #56]	; 0x38
   12d78:	strb	r5, [sp, #60]	; 0x3c
   12d7c:	ldr	r9, [sp, #64]	; 0x40
   12d80:	ldr	fp, [sp, #52]	; 0x34
   12d84:	b	1298c <close_stdout@@Base+0x434>
   12d88:	ldr	r0, [sp, #52]	; 0x34
   12d8c:	bl	11394 <strlen@plt>
   12d90:	strb	r5, [sp, #60]	; 0x3c
   12d94:	str	r0, [sp, #56]	; 0x38
   12d98:	b	12c68 <close_stdout@@Base+0x710>
   12d9c:	ldr	r9, [sp, #64]	; 0x40
   12da0:	b	12968 <close_stdout@@Base+0x410>
   12da4:	ldr	fp, [sp, #52]	; 0x34
   12da8:	mov	r0, fp
   12dac:	bl	11394 <strlen@plt>
   12db0:	strb	r5, [sp, #60]	; 0x3c
   12db4:	ldr	r9, [sp, #64]	; 0x40
   12db8:	str	r0, [sp, #56]	; 0x38
   12dbc:	b	1298c <close_stdout@@Base+0x434>
   12dc0:	ldr	r3, [sp, #64]	; 0x40
   12dc4:	ldrb	ip, [sp, #60]	; 0x3c
   12dc8:	b	12aa8 <close_stdout@@Base+0x550>
   12dcc:	cmp	fp, r8
   12dd0:	movcs	fp, #1
   12dd4:	bcs	12df4 <close_stdout@@Base+0x89c>
   12dd8:	bl	11370 <__ctype_b_loc@plt>
   12ddc:	ldrb	r3, [r8, #-1]
   12de0:	lsl	r3, r3, #1
   12de4:	ldr	r2, [r0]
   12de8:	ldrh	fp, [r2, r3]
   12dec:	eor	fp, fp, #8
   12df0:	ubfx	fp, fp, #3, #1
   12df4:	ldr	r0, [sp, #20]
   12df8:	bl	11394 <strlen@plt>
   12dfc:	ldrb	r3, [r8, r0]
   12e00:	cmp	r3, #0
   12e04:	beq	12e28 <close_stdout@@Base+0x8d0>
   12e08:	str	r3, [sp, #8]
   12e0c:	bl	11370 <__ctype_b_loc@plt>
   12e10:	ldr	r3, [sp, #8]
   12e14:	lsl	r3, r3, #1
   12e18:	ldr	r2, [r0]
   12e1c:	ldrh	r3, [r2, r3]
   12e20:	tst	r3, #8
   12e24:	bne	12e30 <close_stdout@@Base+0x8d8>
   12e28:	cmp	fp, #0
   12e2c:	bne	12ff8 <close_stdout@@Base+0xaa0>
   12e30:	ldrb	r3, [r8]
   12e34:	cmp	r3, #0
   12e38:	beq	12e4c <close_stdout@@Base+0x8f4>
   12e3c:	add	fp, r8, #1
   12e40:	ldrb	r3, [fp]
   12e44:	cmp	r3, #0
   12e48:	bne	12858 <close_stdout@@Base+0x300>
   12e4c:	mov	fp, #0
   12e50:	b	12b34 <close_stdout@@Base+0x5dc>
   12e54:	ldr	r0, [sp, #52]	; 0x34
   12e58:	bl	11394 <strlen@plt>
   12e5c:	str	r0, [sp, #56]	; 0x38
   12e60:	ldr	fp, [sp, #56]	; 0x38
   12e64:	add	fp, r8, fp
   12e68:	b	1284c <close_stdout@@Base+0x2f4>
   12e6c:	mov	r3, #1
   12e70:	str	r3, [sp, #24]
   12e74:	b	129cc <close_stdout@@Base+0x474>
   12e78:	mov	r0, r6
   12e7c:	bl	11244 <mbsinit@plt>
   12e80:	cmp	r0, #0
   12e84:	beq	13000 <close_stdout@@Base+0xaa8>
   12e88:	strb	r4, [sp, #36]	; 0x24
   12e8c:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   12e90:	mov	r1, r0
   12e94:	mov	r0, r8
   12e98:	bl	14b38 <close_stdout@@Base+0x25e0>
   12e9c:	mov	r1, r8
   12ea0:	mov	r3, r6
   12ea4:	mov	r2, r0
   12ea8:	add	r0, sp, #64	; 0x40
   12eac:	bl	112f8 <mbrtowc@plt>
   12eb0:	cmn	r0, #1
   12eb4:	str	r0, [sp, #56]	; 0x38
   12eb8:	streq	r4, [sp, #56]	; 0x38
   12ebc:	beq	12e60 <close_stdout@@Base+0x908>
   12ec0:	cmn	r0, #2
   12ec4:	beq	12e54 <close_stdout@@Base+0x8fc>
   12ec8:	cmp	r0, #0
   12ecc:	beq	12f7c <close_stdout@@Base+0xa24>
   12ed0:	ldr	fp, [sp, #64]	; 0x40
   12ed4:	mov	r0, r6
   12ed8:	strb	r4, [sp, #60]	; 0x3c
   12edc:	bl	11244 <mbsinit@plt>
   12ee0:	cmp	r0, #0
   12ee4:	strbne	r5, [sp, #36]	; 0x24
   12ee8:	b	12b28 <close_stdout@@Base+0x5d0>
   12eec:	mov	r0, r6
   12ef0:	str	r3, [sp, #8]
   12ef4:	str	ip, [sp, #4]
   12ef8:	bl	11244 <mbsinit@plt>
   12efc:	ldr	r3, [sp, #8]
   12f00:	ldr	ip, [sp, #4]
   12f04:	cmp	r0, #0
   12f08:	beq	13000 <close_stdout@@Base+0xaa8>
   12f0c:	strb	r3, [sp, #36]	; 0x24
   12f10:	str	ip, [sp, #4]
   12f14:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   12f18:	mov	r1, r0
   12f1c:	mov	r0, sl
   12f20:	bl	14b38 <close_stdout@@Base+0x25e0>
   12f24:	mov	r1, sl
   12f28:	mov	r3, r6
   12f2c:	mov	r2, r0
   12f30:	add	r0, sp, #64	; 0x40
   12f34:	bl	112f8 <mbrtowc@plt>
   12f38:	ldr	ip, [sp, #4]
   12f3c:	cmn	r0, #1
   12f40:	str	r0, [sp, #56]	; 0x38
   12f44:	beq	12fc8 <close_stdout@@Base+0xa70>
   12f48:	cmn	r0, #2
   12f4c:	beq	12fd8 <close_stdout@@Base+0xa80>
   12f50:	cmp	r0, #0
   12f54:	bne	12fa0 <close_stdout@@Base+0xa48>
   12f58:	ldr	r3, [sp, #52]	; 0x34
   12f5c:	str	r4, [sp, #56]	; 0x38
   12f60:	ldrb	r3, [r3]
   12f64:	cmp	r3, #0
   12f68:	bne	13024 <close_stdout@@Base+0xacc>
   12f6c:	ldr	r3, [sp, #64]	; 0x40
   12f70:	cmp	r3, #0
   12f74:	beq	12fa4 <close_stdout@@Base+0xa4c>
   12f78:	b	12d54 <close_stdout@@Base+0x7fc>
   12f7c:	ldr	r3, [sp, #52]	; 0x34
   12f80:	str	r4, [sp, #56]	; 0x38
   12f84:	ldrb	r3, [r3]
   12f88:	cmp	r3, #0
   12f8c:	bne	13024 <close_stdout@@Base+0xacc>
   12f90:	ldr	fp, [sp, #64]	; 0x40
   12f94:	cmp	fp, #0
   12f98:	beq	12ed4 <close_stdout@@Base+0x97c>
   12f9c:	b	12d54 <close_stdout@@Base+0x7fc>
   12fa0:	ldr	r3, [sp, #64]	; 0x40
   12fa4:	mov	r0, r6
   12fa8:	str	r3, [sp, #8]
   12fac:	strb	r4, [sp, #60]	; 0x3c
   12fb0:	bl	11244 <mbsinit@plt>
   12fb4:	ldr	r3, [sp, #8]
   12fb8:	mov	ip, #1
   12fbc:	cmp	r0, #0
   12fc0:	strbne	r5, [sp, #36]	; 0x24
   12fc4:	b	12aa4 <close_stdout@@Base+0x54c>
   12fc8:	str	r4, [sp, #56]	; 0x38
   12fcc:	strb	r5, [sp, #60]	; 0x3c
   12fd0:	ldr	r3, [sp, #64]	; 0x40
   12fd4:	b	12aa4 <close_stdout@@Base+0x54c>
   12fd8:	ldr	r0, [sp, #52]	; 0x34
   12fdc:	str	ip, [sp, #4]
   12fe0:	bl	11394 <strlen@plt>
   12fe4:	strb	r5, [sp, #60]	; 0x3c
   12fe8:	ldr	r3, [sp, #64]	; 0x40
   12fec:	ldr	ip, [sp, #4]
   12ff0:	str	r0, [sp, #56]	; 0x38
   12ff4:	b	12aa4 <close_stdout@@Base+0x54c>
   12ff8:	mov	fp, #1
   12ffc:	b	12b34 <close_stdout@@Base+0x5dc>
   13000:	ldr	r0, [pc, #84]	; 1305c <close_stdout@@Base+0xb04>
   13004:	mov	r2, #150	; 0x96
   13008:	ldr	r1, [pc, #80]	; 13060 <close_stdout@@Base+0xb08>
   1300c:	ldr	r3, [pc, #80]	; 13064 <close_stdout@@Base+0xb0c>
   13010:	add	r0, pc, r0
   13014:	add	r1, pc, r1
   13018:	add	r3, pc, r3
   1301c:	bl	114d8 <__assert_fail@plt>
   13020:	bl	11274 <__stack_chk_fail@plt>
   13024:	ldr	r0, [pc, #60]	; 13068 <close_stdout@@Base+0xb10>
   13028:	mov	r2, #178	; 0xb2
   1302c:	ldr	r1, [pc, #56]	; 1306c <close_stdout@@Base+0xb14>
   13030:	ldr	r3, [pc, #56]	; 13070 <close_stdout@@Base+0xb18>
   13034:	add	r0, pc, r0
   13038:	add	r1, pc, r1
   1303c:	add	r3, pc, r3
   13040:	bl	114d8 <__assert_fail@plt>
   13044:	strdeq	r8, [r1], -r0
   13048:	andeq	r0, r0, r8, lsr #2
   1304c:	andeq	r0, r0, r4, lsr #2
   13050:	andeq	r7, r0, r8, lsr #8
   13054:	strdeq	r7, [r0], -ip
   13058:	andeq	r7, r0, ip, asr #7
   1305c:	andeq	r7, r0, ip, lsr r1
   13060:	andeq	r7, r0, r0, asr r1
   13064:	andeq	r7, r0, r0, lsr #2
   13068:	andeq	r7, r0, r0, asr #2
   1306c:	andeq	r7, r0, ip, lsr #2
   13070:	strdeq	r7, [r0], -ip
   13074:	push	{r4, r5, r6, lr}
   13078:	mov	r1, r0
   1307c:	mov	r4, r0
   13080:	sub	sp, sp, #8
   13084:	mov	r2, #5
   13088:	mov	r0, #0
   1308c:	bl	11268 <dcgettext@plt>
   13090:	cmp	r0, r4
   13094:	mov	r5, r0
   13098:	moveq	r0, r0
   1309c:	beq	130b4 <close_stdout@@Base+0xb5c>
   130a0:	mov	r1, r4
   130a4:	bl	127f0 <close_stdout@@Base+0x298>
   130a8:	cmp	r0, #0
   130ac:	mov	r0, r5
   130b0:	beq	130bc <close_stdout@@Base+0xb64>
   130b4:	add	sp, sp, #8
   130b8:	pop	{r4, r5, r6, pc}
   130bc:	bl	11394 <strlen@plt>
   130c0:	mov	r6, r0
   130c4:	mov	r0, r4
   130c8:	bl	11394 <strlen@plt>
   130cc:	add	r0, r6, r0
   130d0:	add	r0, r0, #4
   130d4:	bl	156b8 <close_stdout@@Base+0x3160>
   130d8:	ldr	r3, [pc, #36]	; 13104 <close_stdout@@Base+0xbac>
   130dc:	str	r5, [sp]
   130e0:	mov	r1, #1
   130e4:	str	r4, [sp, #4]
   130e8:	mvn	r2, #0
   130ec:	add	r3, pc, r3
   130f0:	mov	r6, r0
   130f4:	bl	113d0 <__sprintf_chk@plt>
   130f8:	mov	r0, r6
   130fc:	add	sp, sp, #8
   13100:	pop	{r4, r5, r6, pc}
   13104:	strheq	r7, [r0], -r4
   13108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1310c:	mov	r6, r0
   13110:	sub	sp, sp, #12
   13114:	mov	r2, #5
   13118:	mov	r4, r1
   1311c:	mov	r0, #0
   13120:	mov	r1, r6
   13124:	ldr	r7, [pc, #640]	; 133ac <close_stdout@@Base+0xe54>
   13128:	bl	11268 <dcgettext@plt>
   1312c:	add	r7, pc, r7
   13130:	mov	r8, r0
   13134:	bl	164f8 <close_stdout@@Base+0x3fa0>
   13138:	mov	r1, r7
   1313c:	mov	r9, r0
   13140:	bl	16408 <close_stdout@@Base+0x3eb0>
   13144:	cmp	r0, #0
   13148:	moveq	r5, r0
   1314c:	moveq	r9, r4
   13150:	bne	1319c <close_stdout@@Base+0xc44>
   13154:	cmp	r4, #0
   13158:	movne	sl, r4
   1315c:	movne	r7, #0
   13160:	beq	13254 <close_stdout@@Base+0xcfc>
   13164:	mov	r0, r8
   13168:	mov	r1, r6
   1316c:	bl	111f0 <strcmp@plt>
   13170:	cmp	r0, #0
   13174:	bne	1326c <close_stdout@@Base+0xd14>
   13178:	cmp	r5, r4
   1317c:	cmpne	r5, #0
   13180:	bne	132fc <close_stdout@@Base+0xda4>
   13184:	cmp	r7, r4
   13188:	cmpne	r7, #0
   1318c:	moveq	r0, r4
   13190:	bne	132e8 <close_stdout@@Base+0xd90>
   13194:	add	sp, sp, #12
   13198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1319c:	mov	r2, r9
   131a0:	mov	r1, r7
   131a4:	mov	r0, r4
   131a8:	bl	1598c <close_stdout@@Base+0x3434>
   131ac:	mov	r5, r0
   131b0:	mov	r0, r9
   131b4:	bl	11394 <strlen@plt>
   131b8:	mov	fp, r0
   131bc:	add	r0, r0, #11
   131c0:	bl	156b8 <close_stdout@@Base+0x3160>
   131c4:	mov	r1, r9
   131c8:	mov	r2, fp
   131cc:	mov	sl, r0
   131d0:	bl	11238 <memcpy@plt>
   131d4:	ldr	r3, [pc, #468]	; 133b0 <close_stdout@@Base+0xe58>
   131d8:	add	ip, sl, fp
   131dc:	mov	r2, sl
   131e0:	add	r3, pc, r3
   131e4:	ldm	r3!, {r0, r1}
   131e8:	ldrh	lr, [r3]
   131ec:	ldrb	r3, [r3, #2]
   131f0:	str	r0, [sl, fp]
   131f4:	mov	r0, r4
   131f8:	str	r1, [ip, #4]
   131fc:	mov	r1, r7
   13200:	strh	lr, [ip, #8]
   13204:	strb	r3, [ip, #10]
   13208:	bl	1598c <close_stdout@@Base+0x3434>
   1320c:	mov	r9, r0
   13210:	mov	r0, sl
   13214:	bl	11220 <free@plt>
   13218:	cmp	r9, #0
   1321c:	beq	1338c <close_stdout@@Base+0xe34>
   13220:	mov	r0, r9
   13224:	mov	r1, #63	; 0x3f
   13228:	bl	113a0 <strchr@plt>
   1322c:	cmp	r0, #0
   13230:	beq	13374 <close_stdout@@Base+0xe1c>
   13234:	mov	r0, r9
   13238:	mov	r4, r5
   1323c:	bl	11220 <free@plt>
   13240:	cmp	r4, #0
   13244:	mov	r9, #0
   13248:	movne	sl, r4
   1324c:	movne	r7, #0
   13250:	bne	13164 <close_stdout@@Base+0xc0c>
   13254:	cmp	r9, #0
   13258:	beq	13394 <close_stdout@@Base+0xe3c>
   1325c:	mov	r7, r4
   13260:	mov	sl, #0
   13264:	mov	r4, r9
   13268:	b	13164 <close_stdout@@Base+0xc0c>
   1326c:	mov	r1, r6
   13270:	mov	r0, r8
   13274:	bl	127f0 <close_stdout@@Base+0x298>
   13278:	cmp	r0, #0
   1327c:	bne	132b8 <close_stdout@@Base+0xd60>
   13280:	cmp	sl, #0
   13284:	beq	1329c <close_stdout@@Base+0xd44>
   13288:	mov	r1, sl
   1328c:	mov	r0, r8
   13290:	bl	127f0 <close_stdout@@Base+0x298>
   13294:	cmp	r0, #0
   13298:	bne	132b8 <close_stdout@@Base+0xd60>
   1329c:	cmp	r9, #0
   132a0:	beq	13308 <close_stdout@@Base+0xdb0>
   132a4:	mov	r1, r9
   132a8:	mov	r0, r8
   132ac:	bl	127f0 <close_stdout@@Base+0x298>
   132b0:	cmp	r0, #0
   132b4:	beq	13308 <close_stdout@@Base+0xdb0>
   132b8:	cmp	r5, #0
   132bc:	beq	132c8 <close_stdout@@Base+0xd70>
   132c0:	mov	r0, r5
   132c4:	bl	11220 <free@plt>
   132c8:	cmp	r7, #0
   132cc:	moveq	r0, r8
   132d0:	beq	13194 <close_stdout@@Base+0xc3c>
   132d4:	mov	r0, r7
   132d8:	bl	11220 <free@plt>
   132dc:	mov	r0, r8
   132e0:	add	sp, sp, #12
   132e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132e8:	mov	r0, r7
   132ec:	bl	11220 <free@plt>
   132f0:	mov	r0, r4
   132f4:	add	sp, sp, #12
   132f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132fc:	mov	r0, r5
   13300:	bl	11220 <free@plt>
   13304:	b	13184 <close_stdout@@Base+0xc2c>
   13308:	mov	r0, r8
   1330c:	bl	11394 <strlen@plt>
   13310:	mov	r6, r0
   13314:	mov	r0, r4
   13318:	bl	11394 <strlen@plt>
   1331c:	add	r0, r6, r0
   13320:	add	r0, r0, #4
   13324:	bl	156b8 <close_stdout@@Base+0x3160>
   13328:	ldr	r3, [pc, #132]	; 133b4 <close_stdout@@Base+0xe5c>
   1332c:	str	r8, [sp]
   13330:	mov	r1, #1
   13334:	str	r4, [sp, #4]
   13338:	mvn	r2, #0
   1333c:	add	r3, pc, r3
   13340:	mov	r6, r0
   13344:	bl	113d0 <__sprintf_chk@plt>
   13348:	cmp	r5, #0
   1334c:	beq	13358 <close_stdout@@Base+0xe00>
   13350:	mov	r0, r5
   13354:	bl	11220 <free@plt>
   13358:	cmp	r7, #0
   1335c:	moveq	r0, r6
   13360:	beq	13194 <close_stdout@@Base+0xc3c>
   13364:	mov	r0, r7
   13368:	bl	11220 <free@plt>
   1336c:	mov	r0, r6
   13370:	b	13194 <close_stdout@@Base+0xc3c>
   13374:	cmp	r5, #0
   13378:	beq	133a4 <close_stdout@@Base+0xe4c>
   1337c:	mov	sl, r5
   13380:	mov	r7, r9
   13384:	mov	r4, r5
   13388:	b	13164 <close_stdout@@Base+0xc0c>
   1338c:	mov	r4, r5
   13390:	b	13154 <close_stdout@@Base+0xbfc>
   13394:	mov	sl, r9
   13398:	mov	r7, r9
   1339c:	mov	r4, r6
   133a0:	b	13164 <close_stdout@@Base+0xc0c>
   133a4:	mov	r4, r9
   133a8:	b	1325c <close_stdout@@Base+0xd04>
   133ac:	andeq	r7, r0, ip, ror r0
   133b0:	ldrdeq	r6, [r0], -r0
   133b4:	andeq	r6, r0, r4, ror #28
   133b8:	push	{r3, lr}
   133bc:	mov	r3, r0
   133c0:	mov	r2, #0
   133c4:	cmp	r1, #8
   133c8:	str	r2, [r3], #4
   133cc:	add	r3, r3, #4
   133d0:	str	r2, [r0, #4]
   133d4:	str	r2, [r3], #4
   133d8:	str	r2, [r3], #4
   133dc:	str	r2, [r3], #4
   133e0:	str	r2, [r3], #4
   133e4:	str	r2, [r3], #4
   133e8:	str	r2, [r3], #4
   133ec:	str	r2, [r3], #4
   133f0:	str	r2, [r3], #4
   133f4:	str	r2, [r3], #4
   133f8:	str	r2, [r3]
   133fc:	beq	13408 <close_stdout@@Base+0xeb0>
   13400:	str	r1, [r0]
   13404:	pop	{r3, pc}
   13408:	bl	114c0 <abort@plt>
   1340c:	push	{r4, r5, r6, lr}
   13410:	mov	r4, r0
   13414:	mov	r6, r1
   13418:	mov	r0, #0
   1341c:	mov	r1, r4
   13420:	mov	r2, #5
   13424:	bl	11268 <dcgettext@plt>
   13428:	cmp	r0, r4
   1342c:	mov	r5, r0
   13430:	beq	13438 <close_stdout@@Base+0xee0>
   13434:	pop	{r4, r5, r6, pc}
   13438:	bl	164f8 <close_stdout@@Base+0x3fa0>
   1343c:	ldrb	r3, [r0]
   13440:	bic	r3, r3, #32
   13444:	cmp	r3, #85	; 0x55
   13448:	bne	134bc <close_stdout@@Base+0xf64>
   1344c:	ldrb	r3, [r0, #1]
   13450:	bic	r3, r3, #32
   13454:	cmp	r3, #84	; 0x54
   13458:	bne	134a8 <close_stdout@@Base+0xf50>
   1345c:	ldrb	r3, [r0, #2]
   13460:	bic	r3, r3, #32
   13464:	cmp	r3, #70	; 0x46
   13468:	bne	134a8 <close_stdout@@Base+0xf50>
   1346c:	ldrb	r3, [r0, #3]
   13470:	cmp	r3, #45	; 0x2d
   13474:	bne	134a8 <close_stdout@@Base+0xf50>
   13478:	ldrb	r3, [r0, #4]
   1347c:	cmp	r3, #56	; 0x38
   13480:	bne	134a8 <close_stdout@@Base+0xf50>
   13484:	ldrb	r3, [r0, #5]
   13488:	cmp	r3, #0
   1348c:	bne	134a8 <close_stdout@@Base+0xf50>
   13490:	ldrb	r3, [r5]
   13494:	cmp	r3, #96	; 0x60
   13498:	beq	13534 <close_stdout@@Base+0xfdc>
   1349c:	ldr	r0, [pc, #180]	; 13558 <close_stdout@@Base+0x1000>
   134a0:	add	r0, pc, r0
   134a4:	pop	{r4, r5, r6, pc}
   134a8:	cmp	r6, #7
   134ac:	beq	13540 <close_stdout@@Base+0xfe8>
   134b0:	ldr	r0, [pc, #164]	; 1355c <close_stdout@@Base+0x1004>
   134b4:	add	r0, pc, r0
   134b8:	pop	{r4, r5, r6, pc}
   134bc:	cmp	r3, #71	; 0x47
   134c0:	bne	134a8 <close_stdout@@Base+0xf50>
   134c4:	ldrb	r3, [r0, #1]
   134c8:	bic	r3, r3, #32
   134cc:	cmp	r3, #66	; 0x42
   134d0:	bne	134a8 <close_stdout@@Base+0xf50>
   134d4:	ldrb	r3, [r0, #2]
   134d8:	cmp	r3, #49	; 0x31
   134dc:	bne	134a8 <close_stdout@@Base+0xf50>
   134e0:	ldrb	r3, [r0, #3]
   134e4:	cmp	r3, #56	; 0x38
   134e8:	bne	134a8 <close_stdout@@Base+0xf50>
   134ec:	ldrb	r3, [r0, #4]
   134f0:	cmp	r3, #48	; 0x30
   134f4:	bne	134a8 <close_stdout@@Base+0xf50>
   134f8:	ldrb	r3, [r0, #5]
   134fc:	cmp	r3, #51	; 0x33
   13500:	bne	134a8 <close_stdout@@Base+0xf50>
   13504:	ldrb	r3, [r0, #6]
   13508:	cmp	r3, #48	; 0x30
   1350c:	bne	134a8 <close_stdout@@Base+0xf50>
   13510:	ldrb	r3, [r0, #7]
   13514:	cmp	r3, #0
   13518:	bne	134a8 <close_stdout@@Base+0xf50>
   1351c:	ldrb	r3, [r5]
   13520:	cmp	r3, #96	; 0x60
   13524:	beq	1354c <close_stdout@@Base+0xff4>
   13528:	ldr	r0, [pc, #48]	; 13560 <close_stdout@@Base+0x1008>
   1352c:	add	r0, pc, r0
   13530:	pop	{r4, r5, r6, pc}
   13534:	ldr	r0, [pc, #40]	; 13564 <close_stdout@@Base+0x100c>
   13538:	add	r0, pc, r0
   1353c:	pop	{r4, r5, r6, pc}
   13540:	ldr	r0, [pc, #32]	; 13568 <close_stdout@@Base+0x1010>
   13544:	add	r0, pc, r0
   13548:	pop	{r4, r5, r6, pc}
   1354c:	ldr	r0, [pc, #24]	; 1356c <close_stdout@@Base+0x1014>
   13550:	add	r0, pc, r0
   13554:	pop	{r4, r5, r6, pc}
   13558:	andeq	r6, r0, ip, lsr sp
   1355c:	andeq	r6, r0, r0, lsr sp
   13560:			; <UNDEFINED> instruction: 0x00006cb4
   13564:			; <UNDEFINED> instruction: 0x00006cb8
   13568:	andeq	r6, r0, r4, lsr #25
   1356c:	muleq	r0, ip, ip
   13570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13574:	sub	sp, sp, #124	; 0x7c
   13578:	ldr	ip, [pc, #3304]	; 14268 <close_stdout@@Base+0x1d10>
   1357c:	mov	sl, r1
   13580:	str	r0, [sp, #40]	; 0x28
   13584:	mov	r8, r3
   13588:	ldr	r0, [pc, #3292]	; 1426c <close_stdout@@Base+0x1d14>
   1358c:	add	ip, pc, ip
   13590:	str	r2, [sp, #32]
   13594:	ldr	r1, [sp, #164]	; 0xa4
   13598:	mov	r3, ip
   1359c:	ldr	r0, [ip, r0]
   135a0:	ldr	r2, [sp, #172]	; 0xac
   135a4:	ubfx	r1, r1, #1, #1
   135a8:	str	r1, [sp, #36]	; 0x24
   135ac:	str	r0, [sp, #56]	; 0x38
   135b0:	ldr	r0, [sp, #168]	; 0xa8
   135b4:	ldr	r1, [sp, #176]	; 0xb0
   135b8:	str	r2, [sp, #72]	; 0x48
   135bc:	str	r0, [sp, #48]	; 0x30
   135c0:	ldr	r0, [sp, #56]	; 0x38
   135c4:	str	r1, [sp, #68]	; 0x44
   135c8:	ldr	r3, [r0]
   135cc:	str	r3, [sp, #116]	; 0x74
   135d0:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   135d4:	ldr	r2, [sp, #160]	; 0xa0
   135d8:	str	r0, [sp, #64]	; 0x40
   135dc:	cmp	r2, #8
   135e0:	addls	pc, pc, r2, lsl #2
   135e4:	b	14144 <close_stdout@@Base+0x1bec>
   135e8:	b	1360c <close_stdout@@Base+0x10b4>
   135ec:	b	13e5c <close_stdout@@Base+0x1904>
   135f0:	b	13e8c <close_stdout@@Base+0x1934>
   135f4:	b	13d3c <close_stdout@@Base+0x17e4>
   135f8:	b	13d7c <close_stdout@@Base+0x1824>
   135fc:	b	13da8 <close_stdout@@Base+0x1850>
   13600:	b	13dc8 <close_stdout@@Base+0x1870>
   13604:	b	13dc8 <close_stdout@@Base+0x1870>
   13608:	b	13dc8 <close_stdout@@Base+0x1870>
   1360c:	mov	r2, #0
   13610:	str	r2, [sp, #36]	; 0x24
   13614:	mov	r9, r2
   13618:	str	r2, [sp, #24]
   1361c:	str	r2, [sp, #28]
   13620:	str	r2, [sp, #52]	; 0x34
   13624:	ldr	r0, [sp, #36]	; 0x24
   13628:	mov	fp, #0
   1362c:	ldr	r1, [sp, #24]
   13630:	eor	r2, r0, #1
   13634:	eor	r3, r1, #1
   13638:	and	r3, r2, r3
   1363c:	and	r2, r1, r0
   13640:	str	r3, [sp, #44]	; 0x2c
   13644:	str	r2, [sp, #76]	; 0x4c
   13648:	cmn	r8, #1
   1364c:	beq	139cc <close_stdout@@Base+0x1474>
   13650:	subs	r3, fp, r8
   13654:	movne	r3, #1
   13658:	cmp	r3, #0
   1365c:	beq	139e4 <close_stdout@@Base+0x148c>
   13660:	ldr	r3, [sp, #28]
   13664:	ldr	r0, [sp, #24]
   13668:	adds	r7, r3, #0
   1366c:	movne	r7, #1
   13670:	ands	r6, r7, r0
   13674:	bne	13ed0 <close_stdout@@Base+0x1978>
   13678:	ldr	r1, [sp, #32]
   1367c:	add	r5, r1, fp
   13680:	ldrb	r4, [r5]
   13684:	cmp	r4, #126	; 0x7e
   13688:	addls	pc, pc, r4, lsl #2
   1368c:	b	13c50 <close_stdout@@Base+0x16f8>
   13690:	b	13b5c <close_stdout@@Base+0x1604>
   13694:	b	13c50 <close_stdout@@Base+0x16f8>
   13698:	b	13c50 <close_stdout@@Base+0x16f8>
   1369c:	b	13c50 <close_stdout@@Base+0x16f8>
   136a0:	b	13c50 <close_stdout@@Base+0x16f8>
   136a4:	b	13c50 <close_stdout@@Base+0x16f8>
   136a8:	b	13c50 <close_stdout@@Base+0x16f8>
   136ac:	b	13b44 <close_stdout@@Base+0x15ec>
   136b0:	b	13b2c <close_stdout@@Base+0x15d4>
   136b4:	b	13b54 <close_stdout@@Base+0x15fc>
   136b8:	b	13b4c <close_stdout@@Base+0x15f4>
   136bc:	b	13b3c <close_stdout@@Base+0x15e4>
   136c0:	b	13b34 <close_stdout@@Base+0x15dc>
   136c4:	b	13af8 <close_stdout@@Base+0x15a0>
   136c8:	b	13c50 <close_stdout@@Base+0x16f8>
   136cc:	b	13c50 <close_stdout@@Base+0x16f8>
   136d0:	b	13c50 <close_stdout@@Base+0x16f8>
   136d4:	b	13c50 <close_stdout@@Base+0x16f8>
   136d8:	b	13c50 <close_stdout@@Base+0x16f8>
   136dc:	b	13c50 <close_stdout@@Base+0x16f8>
   136e0:	b	13c50 <close_stdout@@Base+0x16f8>
   136e4:	b	13c50 <close_stdout@@Base+0x16f8>
   136e8:	b	13c50 <close_stdout@@Base+0x16f8>
   136ec:	b	13c50 <close_stdout@@Base+0x16f8>
   136f0:	b	13c50 <close_stdout@@Base+0x16f8>
   136f4:	b	13c50 <close_stdout@@Base+0x16f8>
   136f8:	b	13c50 <close_stdout@@Base+0x16f8>
   136fc:	b	13c50 <close_stdout@@Base+0x16f8>
   13700:	b	13c50 <close_stdout@@Base+0x16f8>
   13704:	b	13c50 <close_stdout@@Base+0x16f8>
   13708:	b	13c50 <close_stdout@@Base+0x16f8>
   1370c:	b	13c50 <close_stdout@@Base+0x16f8>
   13710:	b	13a84 <close_stdout@@Base+0x152c>
   13714:	b	13a84 <close_stdout@@Base+0x152c>
   13718:	b	13a84 <close_stdout@@Base+0x152c>
   1371c:	b	13a7c <close_stdout@@Base+0x1524>
   13720:	b	13a84 <close_stdout@@Base+0x152c>
   13724:	b	13958 <close_stdout@@Base+0x1400>
   13728:	b	13a84 <close_stdout@@Base+0x152c>
   1372c:	b	13bf8 <close_stdout@@Base+0x16a0>
   13730:	b	13a84 <close_stdout@@Base+0x152c>
   13734:	b	13a84 <close_stdout@@Base+0x152c>
   13738:	b	13a84 <close_stdout@@Base+0x152c>
   1373c:	b	13958 <close_stdout@@Base+0x1400>
   13740:	b	13958 <close_stdout@@Base+0x1400>
   13744:	b	13958 <close_stdout@@Base+0x1400>
   13748:	b	13958 <close_stdout@@Base+0x1400>
   1374c:	b	13958 <close_stdout@@Base+0x1400>
   13750:	b	13958 <close_stdout@@Base+0x1400>
   13754:	b	13958 <close_stdout@@Base+0x1400>
   13758:	b	13958 <close_stdout@@Base+0x1400>
   1375c:	b	13958 <close_stdout@@Base+0x1400>
   13760:	b	13958 <close_stdout@@Base+0x1400>
   13764:	b	13958 <close_stdout@@Base+0x1400>
   13768:	b	13958 <close_stdout@@Base+0x1400>
   1376c:	b	13958 <close_stdout@@Base+0x1400>
   13770:	b	13958 <close_stdout@@Base+0x1400>
   13774:	b	13958 <close_stdout@@Base+0x1400>
   13778:	b	13958 <close_stdout@@Base+0x1400>
   1377c:	b	13a84 <close_stdout@@Base+0x152c>
   13780:	b	13a84 <close_stdout@@Base+0x152c>
   13784:	b	13a84 <close_stdout@@Base+0x152c>
   13788:	b	13a84 <close_stdout@@Base+0x152c>
   1378c:	b	1388c <close_stdout@@Base+0x1334>
   13790:	b	13c50 <close_stdout@@Base+0x16f8>
   13794:	b	13958 <close_stdout@@Base+0x1400>
   13798:	b	13958 <close_stdout@@Base+0x1400>
   1379c:	b	13958 <close_stdout@@Base+0x1400>
   137a0:	b	13958 <close_stdout@@Base+0x1400>
   137a4:	b	13958 <close_stdout@@Base+0x1400>
   137a8:	b	13958 <close_stdout@@Base+0x1400>
   137ac:	b	13958 <close_stdout@@Base+0x1400>
   137b0:	b	13958 <close_stdout@@Base+0x1400>
   137b4:	b	13958 <close_stdout@@Base+0x1400>
   137b8:	b	13958 <close_stdout@@Base+0x1400>
   137bc:	b	13958 <close_stdout@@Base+0x1400>
   137c0:	b	13958 <close_stdout@@Base+0x1400>
   137c4:	b	13958 <close_stdout@@Base+0x1400>
   137c8:	b	13958 <close_stdout@@Base+0x1400>
   137cc:	b	13958 <close_stdout@@Base+0x1400>
   137d0:	b	13958 <close_stdout@@Base+0x1400>
   137d4:	b	13958 <close_stdout@@Base+0x1400>
   137d8:	b	13958 <close_stdout@@Base+0x1400>
   137dc:	b	13958 <close_stdout@@Base+0x1400>
   137e0:	b	13958 <close_stdout@@Base+0x1400>
   137e4:	b	13958 <close_stdout@@Base+0x1400>
   137e8:	b	13958 <close_stdout@@Base+0x1400>
   137ec:	b	13958 <close_stdout@@Base+0x1400>
   137f0:	b	13958 <close_stdout@@Base+0x1400>
   137f4:	b	13958 <close_stdout@@Base+0x1400>
   137f8:	b	13958 <close_stdout@@Base+0x1400>
   137fc:	b	13a84 <close_stdout@@Base+0x152c>
   13800:	b	13bdc <close_stdout@@Base+0x1684>
   13804:	b	13958 <close_stdout@@Base+0x1400>
   13808:	b	13a84 <close_stdout@@Base+0x152c>
   1380c:	b	13958 <close_stdout@@Base+0x1400>
   13810:	b	13a84 <close_stdout@@Base+0x152c>
   13814:	b	13958 <close_stdout@@Base+0x1400>
   13818:	b	13958 <close_stdout@@Base+0x1400>
   1381c:	b	13958 <close_stdout@@Base+0x1400>
   13820:	b	13958 <close_stdout@@Base+0x1400>
   13824:	b	13958 <close_stdout@@Base+0x1400>
   13828:	b	13958 <close_stdout@@Base+0x1400>
   1382c:	b	13958 <close_stdout@@Base+0x1400>
   13830:	b	13958 <close_stdout@@Base+0x1400>
   13834:	b	13958 <close_stdout@@Base+0x1400>
   13838:	b	13958 <close_stdout@@Base+0x1400>
   1383c:	b	13958 <close_stdout@@Base+0x1400>
   13840:	b	13958 <close_stdout@@Base+0x1400>
   13844:	b	13958 <close_stdout@@Base+0x1400>
   13848:	b	13958 <close_stdout@@Base+0x1400>
   1384c:	b	13958 <close_stdout@@Base+0x1400>
   13850:	b	13958 <close_stdout@@Base+0x1400>
   13854:	b	13958 <close_stdout@@Base+0x1400>
   13858:	b	13958 <close_stdout@@Base+0x1400>
   1385c:	b	13958 <close_stdout@@Base+0x1400>
   13860:	b	13958 <close_stdout@@Base+0x1400>
   13864:	b	13958 <close_stdout@@Base+0x1400>
   13868:	b	13958 <close_stdout@@Base+0x1400>
   1386c:	b	13958 <close_stdout@@Base+0x1400>
   13870:	b	13958 <close_stdout@@Base+0x1400>
   13874:	b	13958 <close_stdout@@Base+0x1400>
   13878:	b	13958 <close_stdout@@Base+0x1400>
   1387c:	b	13a64 <close_stdout@@Base+0x150c>
   13880:	b	13a84 <close_stdout@@Base+0x152c>
   13884:	b	13a64 <close_stdout@@Base+0x150c>
   13888:	b	13a7c <close_stdout@@Base+0x1524>
   1388c:	ldr	r3, [sp, #160]	; 0xa0
   13890:	cmp	r3, #2
   13894:	beq	14120 <close_stdout@@Base+0x1bc8>
   13898:	cmp	r3, #3
   1389c:	bne	13958 <close_stdout@@Base+0x1400>
   138a0:	ldr	r1, [sp, #164]	; 0xa4
   138a4:	tst	r1, #4
   138a8:	beq	13958 <close_stdout@@Base+0x1400>
   138ac:	add	r3, fp, #2
   138b0:	cmp	r8, r3
   138b4:	bls	13958 <close_stdout@@Base+0x1400>
   138b8:	ldrb	r2, [r5, #1]
   138bc:	mov	r1, #1
   138c0:	cmp	r2, #63	; 0x3f
   138c4:	bne	13958 <close_stdout@@Base+0x1400>
   138c8:	ldr	r0, [sp, #32]
   138cc:	ldrb	ip, [r0, r3]
   138d0:	sub	r0, ip, #33	; 0x21
   138d4:	uxtb	r0, r0
   138d8:	cmp	r0, #29
   138dc:	bhi	13958 <close_stdout@@Base+0x1400>
   138e0:	lsl	r1, r1, r0
   138e4:	movw	r0, #20929	; 0x51c1
   138e8:	movt	r0, #14336	; 0x3800
   138ec:	and	r0, r1, r0
   138f0:	cmp	r0, #0
   138f4:	beq	13958 <close_stdout@@Base+0x1400>
   138f8:	ldr	r1, [sp, #36]	; 0x24
   138fc:	cmp	r1, #0
   13900:	bne	13aa0 <close_stdout@@Base+0x1548>
   13904:	cmp	r9, sl
   13908:	mov	r4, ip
   1390c:	mov	fp, r3
   13910:	ldrcc	r0, [sp, #40]	; 0x28
   13914:	strbcc	r2, [r0, r9]
   13918:	add	r2, r9, #1
   1391c:	cmp	sl, r2
   13920:	ldrhi	r0, [sp, #40]	; 0x28
   13924:	movhi	r1, #34	; 0x22
   13928:	strbhi	r1, [r0, r2]
   1392c:	add	r2, r9, #2
   13930:	cmp	sl, r2
   13934:	ldrhi	r0, [sp, #40]	; 0x28
   13938:	movhi	r1, #34	; 0x22
   1393c:	strbhi	r1, [r0, r2]
   13940:	add	r2, r9, #3
   13944:	cmp	sl, r2
   13948:	add	r9, r9, #4
   1394c:	ldrhi	r0, [sp, #40]	; 0x28
   13950:	movhi	r1, #63	; 0x3f
   13954:	strbhi	r1, [r0, r2]
   13958:	ldr	r0, [sp, #44]	; 0x2c
   1395c:	cmp	r0, #0
   13960:	bne	13988 <close_stdout@@Base+0x1430>
   13964:	ldr	r1, [sp, #48]	; 0x30
   13968:	cmp	r1, #0
   1396c:	beq	13988 <close_stdout@@Base+0x1430>
   13970:	ubfx	r2, r4, #5, #8
   13974:	and	r3, r4, #31
   13978:	ldr	r2, [r1, r2, lsl #2]
   1397c:	lsr	r3, r2, r3
   13980:	tst	r3, #1
   13984:	bne	13990 <close_stdout@@Base+0x1438>
   13988:	cmp	r6, #0
   1398c:	beq	139b0 <close_stdout@@Base+0x1458>
   13990:	ldr	r2, [sp, #36]	; 0x24
   13994:	cmp	r2, #0
   13998:	bne	13aa0 <close_stdout@@Base+0x1548>
   1399c:	cmp	r9, sl
   139a0:	ldrcc	r0, [sp, #40]	; 0x28
   139a4:	movcc	r3, #92	; 0x5c
   139a8:	strbcc	r3, [r0, r9]
   139ac:	add	r9, r9, #1
   139b0:	add	fp, fp, #1
   139b4:	cmp	r9, sl
   139b8:	ldrcc	r1, [sp, #40]	; 0x28
   139bc:	strbcc	r4, [r1, r9]
   139c0:	cmn	r8, #1
   139c4:	add	r9, r9, #1
   139c8:	bne	13650 <close_stdout@@Base+0x10f8>
   139cc:	ldr	r2, [sp, #32]
   139d0:	ldrb	r3, [r2, fp]
   139d4:	adds	r3, r3, #0
   139d8:	movne	r3, #1
   139dc:	cmp	r3, #0
   139e0:	bne	13660 <close_stdout@@Base+0x1108>
   139e4:	ldr	r3, [sp, #160]	; 0xa0
   139e8:	cmp	r9, #0
   139ec:	cmpeq	r3, #2
   139f0:	bne	13a00 <close_stdout@@Base+0x14a8>
   139f4:	ldr	r0, [sp, #36]	; 0x24
   139f8:	cmp	r0, #0
   139fc:	bne	13aa0 <close_stdout@@Base+0x1548>
   13a00:	ldr	r1, [sp, #36]	; 0x24
   13a04:	ldr	r2, [sp, #52]	; 0x34
   13a08:	eor	r3, r1, #1
   13a0c:	cmp	r2, #0
   13a10:	moveq	r3, #0
   13a14:	andne	r3, r3, #1
   13a18:	cmp	r3, #0
   13a1c:	beq	13a48 <close_stdout@@Base+0x14f0>
   13a20:	ldrb	r3, [r2]
   13a24:	cmp	r3, #0
   13a28:	beq	13a48 <close_stdout@@Base+0x14f0>
   13a2c:	ldr	r1, [sp, #40]	; 0x28
   13a30:	cmp	sl, r9
   13a34:	strbhi	r3, [r1, r9]
   13a38:	ldrb	r3, [r2, #1]!
   13a3c:	add	r9, r9, #1
   13a40:	cmp	r3, #0
   13a44:	bne	13a30 <close_stdout@@Base+0x14d8>
   13a48:	cmp	r9, sl
   13a4c:	movcs	r0, r9
   13a50:	ldrcc	r1, [sp, #40]	; 0x28
   13a54:	movcc	r3, #0
   13a58:	movcc	r0, r9
   13a5c:	strbcc	r3, [r1, r9]
   13a60:	b	13adc <close_stdout@@Base+0x1584>
   13a64:	cmn	r8, #1
   13a68:	beq	14130 <close_stdout@@Base+0x1bd8>
   13a6c:	subs	r3, r8, #1
   13a70:	movne	r3, #1
   13a74:	cmp	r3, #0
   13a78:	bne	13958 <close_stdout@@Base+0x1400>
   13a7c:	cmp	fp, #0
   13a80:	bne	13958 <close_stdout@@Base+0x1400>
   13a84:	ldr	r3, [sp, #36]	; 0x24
   13a88:	ldr	r0, [sp, #160]	; 0xa0
   13a8c:	cmp	r0, #2
   13a90:	movne	r3, #0
   13a94:	andeq	r3, r3, #1
   13a98:	cmp	r3, #0
   13a9c:	beq	13958 <close_stdout@@Base+0x1400>
   13aa0:	ldr	r2, [sp, #164]	; 0xa4
   13aa4:	mov	ip, #0
   13aa8:	ldr	r0, [sp, #160]	; 0xa0
   13aac:	bic	r3, r2, #2
   13ab0:	ldr	r1, [sp, #72]	; 0x48
   13ab4:	ldr	r2, [sp, #68]	; 0x44
   13ab8:	stm	sp, {r0, r3}
   13abc:	mov	r3, r8
   13ac0:	str	r1, [sp, #12]
   13ac4:	mov	r1, sl
   13ac8:	str	r2, [sp, #16]
   13acc:	ldr	r0, [sp, #40]	; 0x28
   13ad0:	ldr	r2, [sp, #32]
   13ad4:	str	ip, [sp, #8]
   13ad8:	bl	13570 <close_stdout@@Base+0x1018>
   13adc:	ldr	r1, [sp, #56]	; 0x38
   13ae0:	ldr	r2, [sp, #116]	; 0x74
   13ae4:	ldr	r3, [r1]
   13ae8:	cmp	r2, r3
   13aec:	bne	14220 <close_stdout@@Base+0x1cc8>
   13af0:	add	sp, sp, #124	; 0x7c
   13af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13af8:	mov	r3, #114	; 0x72
   13afc:	ldr	r2, [sp, #36]	; 0x24
   13b00:	ldr	r0, [sp, #160]	; 0xa0
   13b04:	cmp	r0, #2
   13b08:	movne	r2, #0
   13b0c:	andeq	r2, r2, #1
   13b10:	cmp	r2, #0
   13b14:	bne	13aa0 <close_stdout@@Base+0x1548>
   13b18:	ldr	r1, [sp, #24]
   13b1c:	cmp	r1, #0
   13b20:	beq	13958 <close_stdout@@Base+0x1400>
   13b24:	mov	r4, r3
   13b28:	b	13990 <close_stdout@@Base+0x1438>
   13b2c:	mov	r3, #98	; 0x62
   13b30:	b	13b18 <close_stdout@@Base+0x15c0>
   13b34:	mov	r3, #102	; 0x66
   13b38:	b	13b18 <close_stdout@@Base+0x15c0>
   13b3c:	mov	r3, #118	; 0x76
   13b40:	b	13b18 <close_stdout@@Base+0x15c0>
   13b44:	mov	r3, #97	; 0x61
   13b48:	b	13b18 <close_stdout@@Base+0x15c0>
   13b4c:	mov	r3, #110	; 0x6e
   13b50:	b	13afc <close_stdout@@Base+0x15a4>
   13b54:	mov	r3, #116	; 0x74
   13b58:	b	13afc <close_stdout@@Base+0x15a4>
   13b5c:	ldr	r2, [sp, #24]
   13b60:	cmp	r2, #0
   13b64:	beq	1410c <close_stdout@@Base+0x1bb4>
   13b68:	ldr	r3, [sp, #36]	; 0x24
   13b6c:	cmp	r3, #0
   13b70:	bne	13aa0 <close_stdout@@Base+0x1548>
   13b74:	cmp	r9, sl
   13b78:	add	r2, r9, #1
   13b7c:	ldrcc	r0, [sp, #40]	; 0x28
   13b80:	movcc	r3, #92	; 0x5c
   13b84:	strbcc	r3, [r0, r9]
   13b88:	add	r3, fp, #1
   13b8c:	cmp	r8, r3
   13b90:	bls	13bd0 <close_stdout@@Base+0x1678>
   13b94:	ldr	r1, [sp, #32]
   13b98:	ldrb	r3, [r1, r3]
   13b9c:	sub	r3, r3, #48	; 0x30
   13ba0:	cmp	r3, #9
   13ba4:	bhi	13bd0 <close_stdout@@Base+0x1678>
   13ba8:	cmp	sl, r2
   13bac:	ldrhi	r0, [sp, #40]	; 0x28
   13bb0:	movhi	r3, #48	; 0x30
   13bb4:	strbhi	r3, [r0, r2]
   13bb8:	add	r3, r9, #2
   13bbc:	cmp	sl, r3
   13bc0:	ldrhi	r1, [sp, #40]	; 0x28
   13bc4:	movhi	r2, #48	; 0x30
   13bc8:	strbhi	r2, [r1, r3]
   13bcc:	add	r2, r9, #3
   13bd0:	mov	r9, r2
   13bd4:	mov	r4, #48	; 0x30
   13bd8:	b	13964 <close_stdout@@Base+0x140c>
   13bdc:	ldr	r1, [sp, #76]	; 0x4c
   13be0:	cmp	r1, #0
   13be4:	beq	13bf0 <close_stdout@@Base+0x1698>
   13be8:	cmp	r7, #0
   13bec:	bne	139b0 <close_stdout@@Base+0x1458>
   13bf0:	mov	r3, r4
   13bf4:	b	13afc <close_stdout@@Base+0x15a4>
   13bf8:	ldr	r1, [sp, #160]	; 0xa0
   13bfc:	cmp	r1, #2
   13c00:	bne	13958 <close_stdout@@Base+0x1400>
   13c04:	ldr	r2, [sp, #36]	; 0x24
   13c08:	cmp	r2, #0
   13c0c:	bne	13aa0 <close_stdout@@Base+0x1548>
   13c10:	cmp	r9, sl
   13c14:	ldrcc	r0, [sp, #40]	; 0x28
   13c18:	movcc	r3, #39	; 0x27
   13c1c:	strbcc	r3, [r0, r9]
   13c20:	add	r3, r9, #1
   13c24:	cmp	sl, r3
   13c28:	ldrhi	r1, [sp, #40]	; 0x28
   13c2c:	movhi	r2, #92	; 0x5c
   13c30:	strbhi	r2, [r1, r3]
   13c34:	add	r3, r9, #2
   13c38:	cmp	sl, r3
   13c3c:	add	r9, r9, #3
   13c40:	ldrhi	r0, [sp, #40]	; 0x28
   13c44:	movhi	r2, #39	; 0x27
   13c48:	strbhi	r2, [r0, r3]
   13c4c:	b	13958 <close_stdout@@Base+0x1400>
   13c50:	ldr	r1, [sp, #64]	; 0x40
   13c54:	cmp	r1, #1
   13c58:	bne	13f50 <close_stdout@@Base+0x19f8>
   13c5c:	bl	11370 <__ctype_b_loc@plt>
   13c60:	ldr	r2, [sp, #64]	; 0x40
   13c64:	sxth	r3, r4
   13c68:	str	r2, [sp, #60]	; 0x3c
   13c6c:	lsl	r3, r3, #1
   13c70:	ldr	r2, [r0]
   13c74:	ldrh	r2, [r2, r3]
   13c78:	eor	r2, r2, #16384	; 0x4000
   13c7c:	ubfx	r2, r2, #14, #1
   13c80:	ldr	r1, [sp, #24]
   13c84:	ands	r2, r2, r1
   13c88:	beq	13958 <close_stdout@@Base+0x1400>
   13c8c:	ldr	r3, [sp, #60]	; 0x3c
   13c90:	mov	r0, #92	; 0x5c
   13c94:	ldr	r7, [sp, #36]	; 0x24
   13c98:	add	r1, r3, fp
   13c9c:	str	r8, [sp, #60]	; 0x3c
   13ca0:	ldr	r3, [sp, #40]	; 0x28
   13ca4:	b	13d08 <close_stdout@@Base+0x17b0>
   13ca8:	cmp	r7, #0
   13cac:	bne	14148 <close_stdout@@Base+0x1bf0>
   13cb0:	add	ip, r9, #1
   13cb4:	cmp	r9, sl
   13cb8:	strbcc	r0, [r3, r9]
   13cbc:	cmp	sl, ip
   13cc0:	lsrhi	r8, r4, #6
   13cc4:	addhi	r8, r8, #48	; 0x30
   13cc8:	strbhi	r8, [r3, ip]
   13ccc:	add	ip, r9, #2
   13cd0:	add	r9, r9, #3
   13cd4:	cmp	sl, ip
   13cd8:	ubfxhi	r8, r4, #3, #3
   13cdc:	and	r4, r4, #7
   13ce0:	add	r4, r4, #48	; 0x30
   13ce4:	addhi	r8, r8, #48	; 0x30
   13ce8:	strbhi	r8, [r3, ip]
   13cec:	add	fp, fp, #1
   13cf0:	cmp	r1, fp
   13cf4:	bls	13d34 <close_stdout@@Base+0x17dc>
   13cf8:	cmp	r9, sl
   13cfc:	strbcc	r4, [r3, r9]
   13d00:	ldrb	r4, [r5, #1]!
   13d04:	add	r9, r9, #1
   13d08:	cmp	r2, #0
   13d0c:	bne	13ca8 <close_stdout@@Base+0x1750>
   13d10:	cmp	r6, #0
   13d14:	beq	13cec <close_stdout@@Base+0x1794>
   13d18:	add	fp, fp, #1
   13d1c:	cmp	r9, sl
   13d20:	strbcc	r0, [r3, r9]
   13d24:	cmp	r1, fp
   13d28:	add	r9, r9, #1
   13d2c:	mov	r6, #0
   13d30:	bhi	13cf8 <close_stdout@@Base+0x17a0>
   13d34:	ldr	r8, [sp, #60]	; 0x3c
   13d38:	b	139b4 <close_stdout@@Base+0x145c>
   13d3c:	ldr	r3, [sp, #36]	; 0x24
   13d40:	cmp	r3, #0
   13d44:	bne	14248 <close_stdout@@Base+0x1cf0>
   13d48:	cmp	sl, #0
   13d4c:	beq	14160 <close_stdout@@Base+0x1c08>
   13d50:	ldr	r1, [sp, #40]	; 0x28
   13d54:	mov	r0, #1
   13d58:	ldr	r2, [pc, #1296]	; 14270 <close_stdout@@Base+0x1d18>
   13d5c:	mov	r3, #34	; 0x22
   13d60:	str	r0, [sp, #24]
   13d64:	mov	r9, r0
   13d68:	add	r2, pc, r2
   13d6c:	str	r0, [sp, #28]
   13d70:	strb	r3, [r1]
   13d74:	str	r2, [sp, #52]	; 0x34
   13d78:	b	13624 <close_stdout@@Base+0x10cc>
   13d7c:	ldr	r3, [pc, #1264]	; 14274 <close_stdout@@Base+0x1d1c>
   13d80:	mov	r2, #1
   13d84:	mov	r0, #3
   13d88:	str	r2, [sp, #36]	; 0x24
   13d8c:	add	r3, pc, r3
   13d90:	str	r2, [sp, #24]
   13d94:	str	r3, [sp, #52]	; 0x34
   13d98:	mov	r9, #0
   13d9c:	str	r2, [sp, #28]
   13da0:	str	r0, [sp, #160]	; 0xa0
   13da4:	b	13624 <close_stdout@@Base+0x10cc>
   13da8:	mov	r0, #0
   13dac:	mov	r1, #1
   13db0:	str	r0, [sp, #36]	; 0x24
   13db4:	mov	r9, r0
   13db8:	str	r1, [sp, #24]
   13dbc:	str	r0, [sp, #28]
   13dc0:	str	r0, [sp, #52]	; 0x34
   13dc4:	b	13624 <close_stdout@@Base+0x10cc>
   13dc8:	ldr	r3, [sp, #160]	; 0xa0
   13dcc:	cmp	r3, #8
   13dd0:	beq	13dfc <close_stdout@@Base+0x18a4>
   13dd4:	ldr	r0, [pc, #1180]	; 14278 <close_stdout@@Base+0x1d20>
   13dd8:	mov	r1, r3
   13ddc:	add	r0, pc, r0
   13de0:	bl	1340c <close_stdout@@Base+0xeb4>
   13de4:	ldr	r1, [sp, #160]	; 0xa0
   13de8:	str	r0, [sp, #72]	; 0x48
   13dec:	ldr	r0, [pc, #1160]	; 1427c <close_stdout@@Base+0x1d24>
   13df0:	add	r0, pc, r0
   13df4:	bl	1340c <close_stdout@@Base+0xeb4>
   13df8:	str	r0, [sp, #68]	; 0x44
   13dfc:	ldr	r0, [sp, #36]	; 0x24
   13e00:	cmp	r0, #0
   13e04:	movne	r9, #0
   13e08:	bne	13e40 <close_stdout@@Base+0x18e8>
   13e0c:	ldr	r1, [sp, #72]	; 0x48
   13e10:	ldrb	r3, [r1]
   13e14:	cmp	r3, #0
   13e18:	beq	14218 <close_stdout@@Base+0x1cc0>
   13e1c:	mov	r2, r1
   13e20:	ldr	r1, [sp, #40]	; 0x28
   13e24:	mov	r9, r0
   13e28:	cmp	r9, sl
   13e2c:	strbcc	r3, [r1, r9]
   13e30:	ldrb	r3, [r2, #1]!
   13e34:	add	r9, r9, #1
   13e38:	cmp	r3, #0
   13e3c:	bne	13e28 <close_stdout@@Base+0x18d0>
   13e40:	ldr	r0, [sp, #68]	; 0x44
   13e44:	str	r0, [sp, #52]	; 0x34
   13e48:	bl	11394 <strlen@plt>
   13e4c:	mov	r2, #1
   13e50:	str	r2, [sp, #24]
   13e54:	str	r0, [sp, #28]
   13e58:	b	13624 <close_stdout@@Base+0x10cc>
   13e5c:	ldr	r3, [pc, #1052]	; 14280 <close_stdout@@Base+0x1d28>
   13e60:	mov	r2, #0
   13e64:	mov	r1, #1
   13e68:	mov	r0, #2
   13e6c:	add	r3, pc, r3
   13e70:	str	r1, [sp, #36]	; 0x24
   13e74:	str	r2, [sp, #24]
   13e78:	mov	r9, r2
   13e7c:	str	r1, [sp, #28]
   13e80:	str	r3, [sp, #52]	; 0x34
   13e84:	str	r0, [sp, #160]	; 0xa0
   13e88:	b	13624 <close_stdout@@Base+0x10cc>
   13e8c:	ldr	r3, [sp, #36]	; 0x24
   13e90:	cmp	r3, #0
   13e94:	bne	14224 <close_stdout@@Base+0x1ccc>
   13e98:	cmp	sl, #0
   13e9c:	beq	14180 <close_stdout@@Base+0x1c28>
   13ea0:	ldr	r1, [sp, #40]	; 0x28
   13ea4:	mov	r3, #39	; 0x27
   13ea8:	ldr	r2, [sp, #36]	; 0x24
   13eac:	mov	r0, #1
   13eb0:	mov	r9, r0
   13eb4:	str	r0, [sp, #28]
   13eb8:	strb	r3, [r1]
   13ebc:	ldr	r3, [pc, #960]	; 14284 <close_stdout@@Base+0x1d2c>
   13ec0:	str	r2, [sp, #24]
   13ec4:	add	r3, pc, r3
   13ec8:	str	r3, [sp, #52]	; 0x34
   13ecc:	b	13624 <close_stdout@@Base+0x10cc>
   13ed0:	ldr	r2, [sp, #28]
   13ed4:	cmp	r2, #1
   13ed8:	add	r4, fp, r2
   13edc:	movls	r3, #0
   13ee0:	movhi	r3, #1
   13ee4:	cmn	r8, #1
   13ee8:	movne	r3, #0
   13eec:	cmp	r3, #0
   13ef0:	beq	13f00 <close_stdout@@Base+0x19a8>
   13ef4:	ldr	r0, [sp, #32]
   13ef8:	bl	11394 <strlen@plt>
   13efc:	mov	r8, r0
   13f00:	cmp	r8, r4
   13f04:	ldrcc	r3, [sp, #32]
   13f08:	movcc	r6, #0
   13f0c:	addcc	r5, r3, fp
   13f10:	bcc	13680 <close_stdout@@Base+0x1128>
   13f14:	ldr	r0, [sp, #32]
   13f18:	ldr	r1, [sp, #52]	; 0x34
   13f1c:	add	r5, r0, fp
   13f20:	ldr	r2, [sp, #28]
   13f24:	mov	r0, r5
   13f28:	bl	1125c <memcmp@plt>
   13f2c:	cmp	r0, #0
   13f30:	bne	13f48 <close_stdout@@Base+0x19f0>
   13f34:	ldr	r1, [sp, #36]	; 0x24
   13f38:	cmp	r1, #0
   13f3c:	bne	13aa0 <close_stdout@@Base+0x1548>
   13f40:	mov	r6, #1
   13f44:	b	13680 <close_stdout@@Base+0x1128>
   13f48:	mov	r6, #0
   13f4c:	b	13680 <close_stdout@@Base+0x1128>
   13f50:	add	r7, sp, #108	; 0x6c
   13f54:	cmn	r8, #1
   13f58:	mov	r3, #0
   13f5c:	str	r3, [sp, #108]	; 0x6c
   13f60:	str	r3, [r7, #4]
   13f64:	beq	14150 <close_stdout@@Base+0x1bf8>
   13f68:	mov	r1, #0
   13f6c:	ldr	r0, [sp, #32]
   13f70:	mov	ip, #1
   13f74:	str	r9, [sp, #88]	; 0x58
   13f78:	str	r6, [sp, #96]	; 0x60
   13f7c:	mov	r9, r1
   13f80:	str	r5, [sp, #100]	; 0x64
   13f84:	mov	r6, ip
   13f88:	mov	r5, r7
   13f8c:	add	r3, sp, #104	; 0x68
   13f90:	sub	r0, r0, #1
   13f94:	str	r3, [sp, #80]	; 0x50
   13f98:	str	r0, [sp, #84]	; 0x54
   13f9c:	str	r1, [sp, #60]	; 0x3c
   13fa0:	str	r4, [sp, #92]	; 0x5c
   13fa4:	ldr	r2, [sp, #32]
   13fa8:	add	r7, r9, fp
   13fac:	add	r0, sp, #104	; 0x68
   13fb0:	mov	r3, r5
   13fb4:	add	r4, r2, r7
   13fb8:	rsb	r2, r7, r8
   13fbc:	mov	r1, r4
   13fc0:	bl	112f8 <mbrtowc@plt>
   13fc4:	subs	r2, r0, #0
   13fc8:	beq	140d4 <close_stdout@@Base+0x1b7c>
   13fcc:	cmn	r2, #1
   13fd0:	beq	141fc <close_stdout@@Base+0x1ca4>
   13fd4:	cmn	r2, #2
   13fd8:	beq	141a0 <close_stdout@@Base+0x1c48>
   13fdc:	ldr	r3, [sp, #36]	; 0x24
   13fe0:	ldr	r0, [sp, #160]	; 0xa0
   13fe4:	cmp	r0, #2
   13fe8:	movne	r3, #0
   13fec:	andeq	r3, r3, #1
   13ff0:	cmp	r3, #0
   13ff4:	beq	140b0 <close_stdout@@Base+0x1b58>
   13ff8:	cmp	r2, #1
   13ffc:	beq	140b0 <close_stdout@@Base+0x1b58>
   14000:	ldr	r1, [sp, #84]	; 0x54
   14004:	add	r3, r1, r2
   14008:	add	r7, r3, r7
   1400c:	ldrb	r3, [r4, #1]!
   14010:	sub	r3, r3, #91	; 0x5b
   14014:	cmp	r3, #33	; 0x21
   14018:	addls	pc, pc, r3, lsl #2
   1401c:	b	140a8 <close_stdout@@Base+0x1b50>
   14020:	b	13aa0 <close_stdout@@Base+0x1548>
   14024:	b	13aa0 <close_stdout@@Base+0x1548>
   14028:	b	140a8 <close_stdout@@Base+0x1b50>
   1402c:	b	13aa0 <close_stdout@@Base+0x1548>
   14030:	b	140a8 <close_stdout@@Base+0x1b50>
   14034:	b	13aa0 <close_stdout@@Base+0x1548>
   14038:	b	140a8 <close_stdout@@Base+0x1b50>
   1403c:	b	140a8 <close_stdout@@Base+0x1b50>
   14040:	b	140a8 <close_stdout@@Base+0x1b50>
   14044:	b	140a8 <close_stdout@@Base+0x1b50>
   14048:	b	140a8 <close_stdout@@Base+0x1b50>
   1404c:	b	140a8 <close_stdout@@Base+0x1b50>
   14050:	b	140a8 <close_stdout@@Base+0x1b50>
   14054:	b	140a8 <close_stdout@@Base+0x1b50>
   14058:	b	140a8 <close_stdout@@Base+0x1b50>
   1405c:	b	140a8 <close_stdout@@Base+0x1b50>
   14060:	b	140a8 <close_stdout@@Base+0x1b50>
   14064:	b	140a8 <close_stdout@@Base+0x1b50>
   14068:	b	140a8 <close_stdout@@Base+0x1b50>
   1406c:	b	140a8 <close_stdout@@Base+0x1b50>
   14070:	b	140a8 <close_stdout@@Base+0x1b50>
   14074:	b	140a8 <close_stdout@@Base+0x1b50>
   14078:	b	140a8 <close_stdout@@Base+0x1b50>
   1407c:	b	140a8 <close_stdout@@Base+0x1b50>
   14080:	b	140a8 <close_stdout@@Base+0x1b50>
   14084:	b	140a8 <close_stdout@@Base+0x1b50>
   14088:	b	140a8 <close_stdout@@Base+0x1b50>
   1408c:	b	140a8 <close_stdout@@Base+0x1b50>
   14090:	b	140a8 <close_stdout@@Base+0x1b50>
   14094:	b	140a8 <close_stdout@@Base+0x1b50>
   14098:	b	140a8 <close_stdout@@Base+0x1b50>
   1409c:	b	140a8 <close_stdout@@Base+0x1b50>
   140a0:	b	140a8 <close_stdout@@Base+0x1b50>
   140a4:	b	13aa0 <close_stdout@@Base+0x1548>
   140a8:	cmp	r4, r7
   140ac:	bne	1400c <close_stdout@@Base+0x1ab4>
   140b0:	ldr	r0, [sp, #104]	; 0x68
   140b4:	add	r9, r9, r2
   140b8:	bl	112a4 <iswprint@plt>
   140bc:	cmp	r0, #0
   140c0:	mov	r0, r5
   140c4:	moveq	r6, #0
   140c8:	bl	11244 <mbsinit@plt>
   140cc:	cmp	r0, #0
   140d0:	beq	13fa4 <close_stdout@@Base+0x1a4c>
   140d4:	mov	ip, r6
   140d8:	eor	r2, ip, #1
   140dc:	str	r9, [sp, #60]	; 0x3c
   140e0:	ldr	r4, [sp, #92]	; 0x5c
   140e4:	uxtb	r2, r2
   140e8:	ldr	r9, [sp, #88]	; 0x58
   140ec:	ldr	r6, [sp, #96]	; 0x60
   140f0:	ldr	r5, [sp, #100]	; 0x64
   140f4:	ldr	r3, [sp, #60]	; 0x3c
   140f8:	cmp	r3, #1
   140fc:	bls	13c80 <close_stdout@@Base+0x1728>
   14100:	ldr	r0, [sp, #24]
   14104:	and	r2, r2, r0
   14108:	b	13c8c <close_stdout@@Base+0x1734>
   1410c:	ldr	r2, [sp, #164]	; 0xa4
   14110:	tst	r2, #1
   14114:	addne	fp, fp, #1
   14118:	bne	13648 <close_stdout@@Base+0x10f0>
   1411c:	b	13958 <close_stdout@@Base+0x1400>
   14120:	ldr	r0, [sp, #36]	; 0x24
   14124:	cmp	r0, #0
   14128:	beq	13958 <close_stdout@@Base+0x1400>
   1412c:	b	13aa0 <close_stdout@@Base+0x1548>
   14130:	ldr	r2, [sp, #32]
   14134:	ldrb	r3, [r2, #1]
   14138:	adds	r3, r3, #0
   1413c:	movne	r3, #1
   14140:	b	13a74 <close_stdout@@Base+0x151c>
   14144:	bl	114c0 <abort@plt>
   14148:	ldr	r8, [sp, #60]	; 0x3c
   1414c:	b	13aa0 <close_stdout@@Base+0x1548>
   14150:	ldr	r0, [sp, #32]
   14154:	bl	11394 <strlen@plt>
   14158:	mov	r8, r0
   1415c:	b	13f68 <close_stdout@@Base+0x1a10>
   14160:	ldr	r2, [pc, #288]	; 14288 <close_stdout@@Base+0x1d30>
   14164:	mov	r1, #1
   14168:	mov	r9, r1
   1416c:	str	r1, [sp, #24]
   14170:	add	r2, pc, r2
   14174:	str	r1, [sp, #28]
   14178:	str	r2, [sp, #52]	; 0x34
   1417c:	b	13624 <close_stdout@@Base+0x10cc>
   14180:	ldr	r2, [pc, #260]	; 1428c <close_stdout@@Base+0x1d34>
   14184:	mov	r3, #1
   14188:	mov	r9, r3
   1418c:	str	r3, [sp, #28]
   14190:	add	r2, pc, r2
   14194:	str	sl, [sp, #24]
   14198:	str	r2, [sp, #52]	; 0x34
   1419c:	b	13624 <close_stdout@@Base+0x10cc>
   141a0:	cmp	r8, r7
   141a4:	str	r9, [sp, #60]	; 0x3c
   141a8:	mov	ip, r4
   141ac:	ldr	r6, [sp, #96]	; 0x60
   141b0:	ldr	r9, [sp, #88]	; 0x58
   141b4:	ldr	r4, [sp, #92]	; 0x5c
   141b8:	ldr	r5, [sp, #100]	; 0x64
   141bc:	bls	141f4 <close_stdout@@Base+0x1c9c>
   141c0:	ldrb	r3, [ip]
   141c4:	cmp	r3, #0
   141c8:	beq	141f4 <close_stdout@@Base+0x1c9c>
   141cc:	ldr	r3, [sp, #60]	; 0x3c
   141d0:	b	141e0 <close_stdout@@Base+0x1c88>
   141d4:	ldrb	r2, [r5, r3]
   141d8:	cmp	r2, #0
   141dc:	beq	141f0 <close_stdout@@Base+0x1c98>
   141e0:	add	r3, r3, #1
   141e4:	add	r2, fp, r3
   141e8:	cmp	r8, r2
   141ec:	bhi	141d4 <close_stdout@@Base+0x1c7c>
   141f0:	str	r3, [sp, #60]	; 0x3c
   141f4:	mov	r2, #1
   141f8:	b	140f4 <close_stdout@@Base+0x1b9c>
   141fc:	str	r9, [sp, #60]	; 0x3c
   14200:	mov	r2, #1
   14204:	ldr	r4, [sp, #92]	; 0x5c
   14208:	ldr	r6, [sp, #96]	; 0x60
   1420c:	ldr	r9, [sp, #88]	; 0x58
   14210:	ldr	r5, [sp, #100]	; 0x64
   14214:	b	140f4 <close_stdout@@Base+0x1b9c>
   14218:	ldr	r9, [sp, #36]	; 0x24
   1421c:	b	13e40 <close_stdout@@Base+0x18e8>
   14220:	bl	11274 <__stack_chk_fail@plt>
   14224:	ldr	r1, [pc, #100]	; 14290 <close_stdout@@Base+0x1d38>
   14228:	mov	r3, #0
   1422c:	mov	r0, #1
   14230:	str	r3, [sp, #24]
   14234:	add	r1, pc, r1
   14238:	str	r0, [sp, #28]
   1423c:	mov	r9, r3
   14240:	str	r1, [sp, #52]	; 0x34
   14244:	b	13624 <close_stdout@@Base+0x10cc>
   14248:	ldr	r0, [pc, #68]	; 14294 <close_stdout@@Base+0x1d3c>
   1424c:	mov	r3, #1
   14250:	mov	r9, #0
   14254:	str	r3, [sp, #24]
   14258:	add	r0, pc, r0
   1425c:	str	r3, [sp, #28]
   14260:	str	r0, [sp, #52]	; 0x34
   14264:	b	13624 <close_stdout@@Base+0x10cc>
   14268:	andeq	r7, r1, ip, ror #20
   1426c:	andeq	r0, r0, r8, lsr #2
   14270:	andeq	r6, r0, r0, lsl #9
   14274:	andeq	r6, r0, ip, asr r4
   14278:	andeq	r6, r0, r8, lsl r4
   1427c:	strdeq	r6, [r0], -r4
   14280:	andeq	r6, r0, r8, ror r3
   14284:	andeq	r6, r0, r0, lsr #6
   14288:	andeq	r6, r0, r8, ror r0
   1428c:	andeq	r6, r0, r4, asr r0
   14290:			; <UNDEFINED> instruction: 0x00005fb0
   14294:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   14298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1429c:	sub	sp, sp, #44	; 0x2c
   142a0:	mov	r6, r0
   142a4:	mov	r9, r1
   142a8:	mov	sl, r2
   142ac:	mov	r4, r3
   142b0:	bl	113b8 <__errno_location@plt>
   142b4:	ldr	fp, [pc, #412]	; 14458 <close_stdout@@Base+0x1f00>
   142b8:	cmp	r6, #0
   142bc:	add	fp, pc, fp
   142c0:	ldr	r5, [fp]
   142c4:	ldr	r1, [r0]
   142c8:	mov	r8, r0
   142cc:	str	r1, [sp, #36]	; 0x24
   142d0:	blt	14450 <close_stdout@@Base+0x1ef8>
   142d4:	ldr	r3, [pc, #384]	; 1445c <close_stdout@@Base+0x1f04>
   142d8:	add	r3, pc, r3
   142dc:	ldr	r3, [r3]
   142e0:	cmp	r6, r3
   142e4:	bcc	14338 <close_stdout@@Base+0x1de0>
   142e8:	add	r7, r6, #1
   142ec:	cmn	r7, #-536870911	; 0xe0000001
   142f0:	bhi	14454 <close_stdout@@Base+0x1efc>
   142f4:	add	r3, fp, #4
   142f8:	cmp	r5, r3
   142fc:	beq	14428 <close_stdout@@Base+0x1ed0>
   14300:	mov	r0, r5
   14304:	lsl	r1, r7, #3
   14308:	bl	15710 <close_stdout@@Base+0x31b8>
   1430c:	mov	r5, r0
   14310:	str	r0, [fp]
   14314:	ldr	fp, [pc, #324]	; 14460 <close_stdout@@Base+0x1f08>
   14318:	mov	r1, #0
   1431c:	add	fp, pc, fp
   14320:	ldr	r0, [fp]
   14324:	rsb	r2, r0, r7
   14328:	add	r0, r5, r0, lsl #3
   1432c:	lsl	r2, r2, #3
   14330:	bl	113f4 <memset@plt>
   14334:	str	r7, [fp]
   14338:	add	r2, r4, #8
   1433c:	str	r2, [sp, #32]
   14340:	ldr	r1, [r4]
   14344:	add	fp, r5, r6, lsl #3
   14348:	ldr	lr, [sp, #32]
   1434c:	mov	r2, r9
   14350:	ldr	r3, [r4, #4]
   14354:	ldr	ip, [r5, r6, lsl #3]
   14358:	ldr	r7, [fp, #4]
   1435c:	orr	r3, r3, #1
   14360:	str	r1, [sp]
   14364:	str	r3, [sp, #4]
   14368:	mov	r1, ip
   1436c:	str	lr, [sp, #8]
   14370:	mov	r0, r7
   14374:	ldr	lr, [r4, #40]	; 0x28
   14378:	str	r3, [sp, #28]
   1437c:	mov	r3, sl
   14380:	str	lr, [sp, #12]
   14384:	ldr	lr, [r4, #44]	; 0x2c
   14388:	str	ip, [sp, #24]
   1438c:	str	lr, [sp, #16]
   14390:	bl	13570 <close_stdout@@Base+0x1018>
   14394:	ldr	ip, [sp, #24]
   14398:	cmp	ip, r0
   1439c:	bhi	14414 <close_stdout@@Base+0x1ebc>
   143a0:	ldr	r3, [pc, #188]	; 14464 <close_stdout@@Base+0x1f0c>
   143a4:	add	r1, r0, #1
   143a8:	str	r1, [r5, r6, lsl #3]
   143ac:	add	r3, pc, r3
   143b0:	cmp	r7, r3
   143b4:	beq	143c8 <close_stdout@@Base+0x1e70>
   143b8:	mov	r0, r7
   143bc:	str	r1, [sp, #24]
   143c0:	bl	11220 <free@plt>
   143c4:	ldr	r1, [sp, #24]
   143c8:	mov	r0, r1
   143cc:	str	r1, [sp, #24]
   143d0:	bl	156b8 <close_stdout@@Base+0x3160>
   143d4:	ldr	r3, [sp, #28]
   143d8:	ldr	lr, [sp, #32]
   143dc:	mov	r2, r9
   143e0:	str	r0, [fp, #4]
   143e4:	mov	r7, r0
   143e8:	ldr	ip, [r4]
   143ec:	str	r3, [sp, #4]
   143f0:	mov	r3, sl
   143f4:	str	lr, [sp, #8]
   143f8:	str	ip, [sp]
   143fc:	ldr	ip, [r4, #40]	; 0x28
   14400:	ldr	r1, [sp, #24]
   14404:	str	ip, [sp, #12]
   14408:	ldr	ip, [r4, #44]	; 0x2c
   1440c:	str	ip, [sp, #16]
   14410:	bl	13570 <close_stdout@@Base+0x1018>
   14414:	ldr	r1, [sp, #36]	; 0x24
   14418:	mov	r0, r7
   1441c:	str	r1, [r8]
   14420:	add	sp, sp, #44	; 0x2c
   14424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14428:	lsl	r1, r7, #3
   1442c:	mov	r0, #0
   14430:	str	r3, [sp, #24]
   14434:	bl	15710 <close_stdout@@Base+0x31b8>
   14438:	ldr	r3, [sp, #24]
   1443c:	mov	r5, r0
   14440:	ldm	r3, {r0, r1}
   14444:	str	r5, [fp]
   14448:	stm	r5, {r0, r1}
   1444c:	b	14314 <close_stdout@@Base+0x1dbc>
   14450:	bl	114c0 <abort@plt>
   14454:	bl	158cc <close_stdout@@Base+0x3374>
   14458:	ldrdeq	r6, [r1], -ip
   1445c:	andeq	r6, r1, ip, lsl #29
   14460:	andeq	r6, r1, r8, asr #28
   14464:	andeq	r6, r1, r0, lsl lr
   14468:	push	{r4, r5, r6, lr}
   1446c:	mov	r5, r0
   14470:	bl	113b8 <__errno_location@plt>
   14474:	cmp	r5, #0
   14478:	mov	r1, #48	; 0x30
   1447c:	mov	r4, r0
   14480:	ldr	r0, [pc, #24]	; 144a0 <close_stdout@@Base+0x1f48>
   14484:	ldr	r6, [r4]
   14488:	add	r0, pc, r0
   1448c:	add	r0, r0, #256	; 0x100
   14490:	movne	r0, r5
   14494:	bl	1588c <close_stdout@@Base+0x3334>
   14498:	str	r6, [r4]
   1449c:	pop	{r4, r5, r6, pc}
   144a0:	andeq	r6, r1, r4, lsr sp
   144a4:	cmp	r0, #0
   144a8:	beq	144b4 <close_stdout@@Base+0x1f5c>
   144ac:	ldr	r0, [r0]
   144b0:	bx	lr
   144b4:	ldr	r0, [pc, #12]	; 144c8 <close_stdout@@Base+0x1f70>
   144b8:	add	r0, pc, r0
   144bc:	add	r0, r0, #256	; 0x100
   144c0:	ldr	r0, [r0]
   144c4:	bx	lr
   144c8:	andeq	r6, r1, r4, lsl #26
   144cc:	cmp	r0, #0
   144d0:	beq	144dc <close_stdout@@Base+0x1f84>
   144d4:	str	r1, [r0]
   144d8:	bx	lr
   144dc:	ldr	r0, [pc, #12]	; 144f0 <close_stdout@@Base+0x1f98>
   144e0:	add	r0, pc, r0
   144e4:	add	r0, r0, #256	; 0x100
   144e8:	str	r1, [r0]
   144ec:	bx	lr
   144f0:	ldrdeq	r6, [r1], -ip
   144f4:	cmp	r0, #0
   144f8:	movne	r3, r0
   144fc:	beq	1452c <close_stdout@@Base+0x1fd4>
   14500:	lsr	ip, r1, #5
   14504:	and	r1, r1, #31
   14508:	add	r3, r3, ip, lsl #2
   1450c:	ldr	ip, [r3, #8]
   14510:	lsr	r0, ip, r1
   14514:	eor	r2, r0, r2
   14518:	and	r0, r0, #1
   1451c:	and	r2, r2, #1
   14520:	eor	ip, ip, r2, lsl r1
   14524:	str	ip, [r3, #8]
   14528:	bx	lr
   1452c:	ldr	r3, [pc, #8]	; 1453c <close_stdout@@Base+0x1fe4>
   14530:	add	r3, pc, r3
   14534:	add	r3, r3, #256	; 0x100
   14538:	b	14500 <close_stdout@@Base+0x1fa8>
   1453c:	andeq	r6, r1, ip, lsl #25
   14540:	subs	r3, r0, #0
   14544:	beq	14554 <close_stdout@@Base+0x1ffc>
   14548:	ldr	r0, [r3, #4]
   1454c:	str	r1, [r3, #4]
   14550:	bx	lr
   14554:	ldr	r3, [pc, #8]	; 14564 <close_stdout@@Base+0x200c>
   14558:	add	r3, pc, r3
   1455c:	add	r3, r3, #256	; 0x100
   14560:	b	14548 <close_stdout@@Base+0x1ff0>
   14564:	andeq	r6, r1, r4, ror #24
   14568:	cmp	r0, #0
   1456c:	push	{r3, lr}
   14570:	beq	14594 <close_stdout@@Base+0x203c>
   14574:	cmp	r2, #0
   14578:	cmpne	r1, #0
   1457c:	mov	r3, #8
   14580:	strne	r1, [r0, #40]	; 0x28
   14584:	str	r3, [r0]
   14588:	strne	r2, [r0, #44]	; 0x2c
   1458c:	popne	{r3, pc}
   14590:	bl	114c0 <abort@plt>
   14594:	ldr	r0, [pc, #8]	; 145a4 <close_stdout@@Base+0x204c>
   14598:	add	r0, pc, r0
   1459c:	add	r0, r0, #256	; 0x100
   145a0:	b	14574 <close_stdout@@Base+0x201c>
   145a4:	andeq	r6, r1, r4, lsr #24
   145a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   145ac:	sub	sp, sp, #24
   145b0:	mov	r7, r0
   145b4:	mov	sl, r1
   145b8:	ldr	r4, [sp, #56]	; 0x38
   145bc:	mov	r9, r2
   145c0:	mov	r8, r3
   145c4:	cmp	r4, #0
   145c8:	beq	1461c <close_stdout@@Base+0x20c4>
   145cc:	bl	113b8 <__errno_location@plt>
   145d0:	ldr	r3, [r4]
   145d4:	add	lr, r4, #8
   145d8:	mov	r1, sl
   145dc:	mov	r2, r9
   145e0:	ldr	r6, [r0]
   145e4:	mov	r5, r0
   145e8:	str	r3, [sp]
   145ec:	mov	r0, r7
   145f0:	ldr	ip, [r4, #4]
   145f4:	mov	r3, r8
   145f8:	stmib	sp, {ip, lr}
   145fc:	ldr	ip, [r4, #40]	; 0x28
   14600:	str	ip, [sp, #12]
   14604:	ldr	ip, [r4, #44]	; 0x2c
   14608:	str	ip, [sp, #16]
   1460c:	bl	13570 <close_stdout@@Base+0x1018>
   14610:	str	r6, [r5]
   14614:	add	sp, sp, #24
   14618:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1461c:	ldr	r4, [pc, #8]	; 1462c <close_stdout@@Base+0x20d4>
   14620:	add	r4, pc, r4
   14624:	add	r4, r4, #256	; 0x100
   14628:	b	145cc <close_stdout@@Base+0x2074>
   1462c:	muleq	r1, ip, fp
   14630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14634:	subs	r4, r3, #0
   14638:	sub	sp, sp, #36	; 0x24
   1463c:	mov	r7, r0
   14640:	mov	r6, r1
   14644:	mov	r5, r2
   14648:	beq	14704 <close_stdout@@Base+0x21ac>
   1464c:	bl	113b8 <__errno_location@plt>
   14650:	ldr	r3, [r4]
   14654:	ldr	sl, [r4, #4]
   14658:	add	r9, r4, #8
   1465c:	mov	r8, r0
   14660:	mov	r0, #0
   14664:	ldr	r2, [r8]
   14668:	cmp	r5, r0
   1466c:	orreq	sl, sl, #1
   14670:	str	r9, [sp, #8]
   14674:	mov	r1, r0
   14678:	stm	sp, {r3, sl}
   1467c:	mov	r3, r6
   14680:	ldr	ip, [r4, #40]	; 0x28
   14684:	str	r2, [sp, #28]
   14688:	mov	r2, r7
   1468c:	str	ip, [sp, #12]
   14690:	ldr	ip, [r4, #44]	; 0x2c
   14694:	str	ip, [sp, #16]
   14698:	bl	13570 <close_stdout@@Base+0x1018>
   1469c:	add	r1, r0, #1
   146a0:	mov	fp, r0
   146a4:	str	r1, [sp, #24]
   146a8:	mov	r0, r1
   146ac:	bl	156b8 <close_stdout@@Base+0x3160>
   146b0:	ldr	lr, [r4]
   146b4:	str	sl, [sp, #4]
   146b8:	mov	r3, r6
   146bc:	str	r9, [sp, #8]
   146c0:	mov	r2, r7
   146c4:	str	lr, [sp]
   146c8:	ldr	lr, [r4, #40]	; 0x28
   146cc:	ldr	r1, [sp, #24]
   146d0:	str	lr, [sp, #12]
   146d4:	ldr	lr, [r4, #44]	; 0x2c
   146d8:	str	lr, [sp, #16]
   146dc:	str	r0, [sp, #24]
   146e0:	bl	13570 <close_stdout@@Base+0x1018>
   146e4:	ldr	r3, [sp, #28]
   146e8:	cmp	r5, #0
   146ec:	str	r3, [r8]
   146f0:	ldr	ip, [sp, #24]
   146f4:	strne	fp, [r5]
   146f8:	mov	r0, ip
   146fc:	add	sp, sp, #36	; 0x24
   14700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14704:	ldr	r4, [pc, #8]	; 14714 <close_stdout@@Base+0x21bc>
   14708:	add	r4, pc, r4
   1470c:	add	r4, r4, #256	; 0x100
   14710:	b	1464c <close_stdout@@Base+0x20f4>
   14714:			; <UNDEFINED> instruction: 0x00016ab4
   14718:	mov	r3, r2
   1471c:	mov	r2, #0
   14720:	b	14630 <close_stdout@@Base+0x20d8>
   14724:	ldr	r2, [pc, #152]	; 147c4 <close_stdout@@Base+0x226c>
   14728:	push	{r3, r4, r5, r6, r7, lr}
   1472c:	add	r2, pc, r2
   14730:	ldr	r3, [pc, #144]	; 147c8 <close_stdout@@Base+0x2270>
   14734:	ldr	r6, [r2]
   14738:	add	r3, pc, r3
   1473c:	cmp	r6, #1
   14740:	ldr	r7, [r3]
   14744:	movhi	r4, #1
   14748:	movhi	r5, r7
   1474c:	bls	14768 <close_stdout@@Base+0x2210>
   14750:	ldr	r0, [r5, #12]
   14754:	add	r4, r4, #1
   14758:	bl	11220 <free@plt>
   1475c:	cmp	r4, r6
   14760:	add	r5, r5, #8
   14764:	bne	14750 <close_stdout@@Base+0x21f8>
   14768:	ldr	r4, [pc, #92]	; 147cc <close_stdout@@Base+0x2274>
   1476c:	ldr	r0, [r7, #4]
   14770:	add	r4, pc, r4
   14774:	cmp	r0, r4
   14778:	beq	14790 <close_stdout@@Base+0x2238>
   1477c:	bl	11220 <free@plt>
   14780:	ldr	r3, [pc, #72]	; 147d0 <close_stdout@@Base+0x2278>
   14784:	mov	r2, #256	; 0x100
   14788:	add	r3, pc, r3
   1478c:	stmib	r3, {r2, r4}
   14790:	ldr	r4, [pc, #60]	; 147d4 <close_stdout@@Base+0x227c>
   14794:	add	r4, pc, r4
   14798:	add	r5, r4, #4
   1479c:	cmp	r7, r5
   147a0:	beq	147b0 <close_stdout@@Base+0x2258>
   147a4:	mov	r0, r7
   147a8:	bl	11220 <free@plt>
   147ac:	str	r5, [r4]
   147b0:	ldr	r3, [pc, #32]	; 147d8 <close_stdout@@Base+0x2280>
   147b4:	mov	r2, #1
   147b8:	add	r3, pc, r3
   147bc:	str	r2, [r3]
   147c0:	pop	{r3, r4, r5, r6, r7, pc}
   147c4:	andeq	r6, r1, r8, lsr sl
   147c8:	andeq	r6, r1, r0, ror #20
   147cc:	andeq	r6, r1, ip, asr #20
   147d0:	andeq	r6, r1, r0, lsl sl
   147d4:	andeq	r6, r1, r4, lsl #20
   147d8:	andeq	r6, r1, ip, lsr #19
   147dc:	ldr	r3, [pc, #12]	; 147f0 <close_stdout@@Base+0x2298>
   147e0:	mvn	r2, #0
   147e4:	add	r3, pc, r3
   147e8:	add	r3, r3, #256	; 0x100
   147ec:	b	14298 <close_stdout@@Base+0x1d40>
   147f0:	ldrdeq	r6, [r1], -r8
   147f4:	ldr	r3, [pc, #8]	; 14804 <close_stdout@@Base+0x22ac>
   147f8:	add	r3, pc, r3
   147fc:	add	r3, r3, #256	; 0x100
   14800:	b	14298 <close_stdout@@Base+0x1d40>
   14804:	andeq	r6, r1, r4, asr #19
   14808:	mov	r1, r0
   1480c:	mov	r0, #0
   14810:	b	147dc <close_stdout@@Base+0x2284>
   14814:	mov	r2, r1
   14818:	mov	r1, r0
   1481c:	mov	r0, #0
   14820:	b	147f4 <close_stdout@@Base+0x229c>
   14824:	ldr	r3, [pc, #92]	; 14888 <close_stdout@@Base+0x2330>
   14828:	ldr	ip, [pc, #92]	; 1488c <close_stdout@@Base+0x2334>
   1482c:	add	r3, pc, r3
   14830:	push	{r4, r5, r6, r7, lr}
   14834:	sub	sp, sp, #60	; 0x3c
   14838:	ldr	r4, [r3, ip]
   1483c:	add	r5, sp, #4
   14840:	mov	r7, r2
   14844:	mov	r6, r0
   14848:	mov	r0, r5
   1484c:	ldr	r3, [r4]
   14850:	str	r3, [sp, #52]	; 0x34
   14854:	bl	133b8 <close_stdout@@Base+0xe60>
   14858:	mov	r3, r5
   1485c:	mvn	r2, #0
   14860:	mov	r0, r6
   14864:	mov	r1, r7
   14868:	bl	14298 <close_stdout@@Base+0x1d40>
   1486c:	ldr	r2, [sp, #52]	; 0x34
   14870:	ldr	r3, [r4]
   14874:	cmp	r2, r3
   14878:	bne	14884 <close_stdout@@Base+0x232c>
   1487c:	add	sp, sp, #60	; 0x3c
   14880:	pop	{r4, r5, r6, r7, pc}
   14884:	bl	11274 <__stack_chk_fail@plt>
   14888:	andeq	r6, r1, ip, asr #15
   1488c:	andeq	r0, r0, r8, lsr #2
   14890:	ldr	ip, [pc, #96]	; 148f8 <close_stdout@@Base+0x23a0>
   14894:	push	{r4, r5, r6, r7, r8, lr}
   14898:	add	ip, pc, ip
   1489c:	ldr	lr, [pc, #88]	; 148fc <close_stdout@@Base+0x23a4>
   148a0:	sub	sp, sp, #56	; 0x38
   148a4:	mov	r8, r3
   148a8:	add	r5, sp, #4
   148ac:	mov	r7, r2
   148b0:	mov	r6, r0
   148b4:	ldr	r4, [ip, lr]
   148b8:	mov	r0, r5
   148bc:	ldr	r3, [r4]
   148c0:	str	r3, [sp, #52]	; 0x34
   148c4:	bl	133b8 <close_stdout@@Base+0xe60>
   148c8:	mov	r2, r8
   148cc:	mov	r3, r5
   148d0:	mov	r0, r6
   148d4:	mov	r1, r7
   148d8:	bl	14298 <close_stdout@@Base+0x1d40>
   148dc:	ldr	r2, [sp, #52]	; 0x34
   148e0:	ldr	r3, [r4]
   148e4:	cmp	r2, r3
   148e8:	bne	148f4 <close_stdout@@Base+0x239c>
   148ec:	add	sp, sp, #56	; 0x38
   148f0:	pop	{r4, r5, r6, r7, r8, pc}
   148f4:	bl	11274 <__stack_chk_fail@plt>
   148f8:	andeq	r6, r1, r0, ror #14
   148fc:	andeq	r0, r0, r8, lsr #2
   14900:	mov	r2, r1
   14904:	mov	r1, r0
   14908:	mov	r0, #0
   1490c:	b	14824 <close_stdout@@Base+0x22cc>
   14910:	mov	ip, r1
   14914:	mov	r3, r2
   14918:	mov	r1, r0
   1491c:	mov	r2, ip
   14920:	mov	r0, #0
   14924:	b	14890 <close_stdout@@Base+0x2338>
   14928:	push	{r4, r5, r6, r7, r8, lr}
   1492c:	mov	r5, r2
   14930:	ldr	lr, [pc, #136]	; 149c0 <close_stdout@@Base+0x2468>
   14934:	mov	r7, r0
   14938:	mov	r6, r1
   1493c:	ldr	r4, [pc, #128]	; 149c4 <close_stdout@@Base+0x246c>
   14940:	add	lr, pc, lr
   14944:	sub	sp, sp, #56	; 0x38
   14948:	add	lr, lr, #256	; 0x100
   1494c:	ldr	r8, [pc, #116]	; 149c8 <close_stdout@@Base+0x2470>
   14950:	add	r4, pc, r4
   14954:	add	ip, sp, #4
   14958:	ldm	lr!, {r0, r1, r2, r3}
   1495c:	ldr	r4, [r4, r8]
   14960:	stmia	ip!, {r0, r1, r2, r3}
   14964:	ldm	lr!, {r0, r1, r2, r3}
   14968:	ldr	r8, [r4]
   1496c:	stmia	ip!, {r0, r1, r2, r3}
   14970:	ldm	lr, {r0, r1, r2, r3}
   14974:	str	r8, [sp, #52]	; 0x34
   14978:	stm	ip, {r0, r1, r2, r3}
   1497c:	mov	r1, r5
   14980:	add	r5, sp, #4
   14984:	mov	r2, #1
   14988:	mov	r0, r5
   1498c:	bl	144f4 <close_stdout@@Base+0x1f9c>
   14990:	mov	r2, r6
   14994:	mov	r3, r5
   14998:	mov	r1, r7
   1499c:	mov	r0, #0
   149a0:	bl	14298 <close_stdout@@Base+0x1d40>
   149a4:	ldr	r2, [sp, #52]	; 0x34
   149a8:	ldr	r3, [r4]
   149ac:	cmp	r2, r3
   149b0:	bne	149bc <close_stdout@@Base+0x2464>
   149b4:	add	sp, sp, #56	; 0x38
   149b8:	pop	{r4, r5, r6, r7, r8, pc}
   149bc:	bl	11274 <__stack_chk_fail@plt>
   149c0:	andeq	r6, r1, ip, ror r8
   149c4:	andeq	r6, r1, r8, lsr #13
   149c8:	andeq	r0, r0, r8, lsr #2
   149cc:	mov	r2, r1
   149d0:	mvn	r1, #0
   149d4:	b	14928 <close_stdout@@Base+0x23d0>
   149d8:	mov	r1, #58	; 0x3a
   149dc:	b	149cc <close_stdout@@Base+0x2474>
   149e0:	mov	r2, #58	; 0x3a
   149e4:	b	14928 <close_stdout@@Base+0x23d0>
   149e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   149ec:	mov	r5, r2
   149f0:	ldr	lr, [pc, #144]	; 14a88 <close_stdout@@Base+0x2530>
   149f4:	mov	r8, r0
   149f8:	mov	r9, r1
   149fc:	mov	r7, r3
   14a00:	add	lr, pc, lr
   14a04:	ldr	r4, [pc, #128]	; 14a8c <close_stdout@@Base+0x2534>
   14a08:	add	lr, lr, #256	; 0x100
   14a0c:	sub	sp, sp, #56	; 0x38
   14a10:	ldr	sl, [pc, #120]	; 14a90 <close_stdout@@Base+0x2538>
   14a14:	add	r4, pc, r4
   14a18:	ldm	lr!, {r0, r1, r2, r3}
   14a1c:	add	ip, sp, #4
   14a20:	ldr	r4, [r4, sl]
   14a24:	ldr	r6, [sp, #88]	; 0x58
   14a28:	stmia	ip!, {r0, r1, r2, r3}
   14a2c:	ldm	lr!, {r0, r1, r2, r3}
   14a30:	ldr	sl, [r4]
   14a34:	stmia	ip!, {r0, r1, r2, r3}
   14a38:	ldm	lr, {r0, r1, r2, r3}
   14a3c:	str	sl, [sp, #52]	; 0x34
   14a40:	stm	ip, {r0, r1, r2, r3}
   14a44:	mov	r2, r5
   14a48:	add	r5, sp, #4
   14a4c:	mov	r1, r9
   14a50:	mov	r0, r5
   14a54:	bl	14568 <close_stdout@@Base+0x2010>
   14a58:	mov	r2, r6
   14a5c:	mov	r3, r5
   14a60:	mov	r0, r8
   14a64:	mov	r1, r7
   14a68:	bl	14298 <close_stdout@@Base+0x1d40>
   14a6c:	ldr	r2, [sp, #52]	; 0x34
   14a70:	ldr	r3, [r4]
   14a74:	cmp	r2, r3
   14a78:	bne	14a84 <close_stdout@@Base+0x252c>
   14a7c:	add	sp, sp, #56	; 0x38
   14a80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a84:	bl	11274 <__stack_chk_fail@plt>
   14a88:			; <UNDEFINED> instruction: 0x000167bc
   14a8c:	andeq	r6, r1, r4, ror #11
   14a90:	andeq	r0, r0, r8, lsr #2
   14a94:	push	{lr}		; (str lr, [sp, #-4]!)
   14a98:	sub	sp, sp, #12
   14a9c:	mvn	ip, #0
   14aa0:	str	ip, [sp]
   14aa4:	bl	149e8 <close_stdout@@Base+0x2490>
   14aa8:	add	sp, sp, #12
   14aac:	pop	{pc}		; (ldr pc, [sp], #4)
   14ab0:	mov	ip, r1
   14ab4:	mov	r3, r2
   14ab8:	mov	r1, r0
   14abc:	mov	r2, ip
   14ac0:	mov	r0, #0
   14ac4:	b	14a94 <close_stdout@@Base+0x253c>
   14ac8:	push	{lr}		; (str lr, [sp, #-4]!)
   14acc:	sub	sp, sp, #12
   14ad0:	mov	lr, r1
   14ad4:	mov	ip, r2
   14ad8:	mov	r1, r0
   14adc:	str	r3, [sp]
   14ae0:	mov	r2, lr
   14ae4:	mov	r3, ip
   14ae8:	mov	r0, #0
   14aec:	bl	149e8 <close_stdout@@Base+0x2490>
   14af0:	add	sp, sp, #12
   14af4:	pop	{pc}		; (ldr pc, [sp], #4)
   14af8:	ldr	r3, [pc, #12]	; 14b0c <close_stdout@@Base+0x25b4>
   14afc:	ldr	ip, [pc, #12]	; 14b10 <close_stdout@@Base+0x25b8>
   14b00:	add	r3, pc, r3
   14b04:	ldr	r3, [r3, ip]
   14b08:	b	14298 <close_stdout@@Base+0x1d40>
   14b0c:	strdeq	r6, [r1], -r8
   14b10:	andeq	r0, r0, r0, lsr #2
   14b14:	mov	r2, r1
   14b18:	mov	r1, r0
   14b1c:	mov	r0, #0
   14b20:	b	14af8 <close_stdout@@Base+0x25a0>
   14b24:	mvn	r2, #0
   14b28:	b	14af8 <close_stdout@@Base+0x25a0>
   14b2c:	mov	r1, r0
   14b30:	mov	r0, #0
   14b34:	b	14b24 <close_stdout@@Base+0x25cc>
   14b38:	push	{r3, r4, r5, lr}
   14b3c:	mov	r4, r1
   14b40:	mov	r2, r4
   14b44:	mov	r1, #0
   14b48:	mov	r5, r0
   14b4c:	bl	11430 <memchr@plt>
   14b50:	cmp	r0, #0
   14b54:	rsbne	r0, r5, r0
   14b58:	addne	r0, r0, #1
   14b5c:	moveq	r0, r4
   14b60:	pop	{r3, r4, r5, pc}
   14b64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b68:	sub	sp, sp, #84	; 0x54
   14b6c:	ldr	r5, [pc, #1396]	; 150e8 <close_stdout@@Base+0x2b90>
   14b70:	mov	sl, r1
   14b74:	ldr	r3, [pc, #1392]	; 150ec <close_stdout@@Base+0x2b94>
   14b78:	add	r5, pc, r5
   14b7c:	ldr	r3, [r5, r3]
   14b80:	str	r3, [sp, #12]
   14b84:	ldr	r3, [r3]
   14b88:	str	r3, [sp, #76]	; 0x4c
   14b8c:	bl	113e8 <__strdup@plt>
   14b90:	cmp	r0, #0
   14b94:	str	r0, [sp]
   14b98:	beq	150c4 <close_stdout@@Base+0x2b6c>
   14b9c:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   14ba0:	cmp	r0, #1
   14ba4:	bls	14e48 <close_stdout@@Base+0x28f0>
   14ba8:	cmp	sl, #0
   14bac:	bne	14f08 <close_stdout@@Base+0x29b0>
   14bb0:	add	r4, sp, #24
   14bb4:	ldr	r0, [sp]
   14bb8:	mov	fp, #0
   14bbc:	str	r0, [sp, #36]	; 0x24
   14bc0:	bl	11394 <strlen@plt>
   14bc4:	ldr	r1, [sp]
   14bc8:	str	fp, [sp, #24]
   14bcc:	strb	fp, [sp, #20]
   14bd0:	str	fp, [r4, #4]
   14bd4:	strb	fp, [sp, #32]
   14bd8:	add	r9, r1, r0
   14bdc:	str	r9, [sp, #16]
   14be0:	cmp	r1, r9
   14be4:	bcs	14e18 <close_stdout@@Base+0x28c0>
   14be8:	add	r1, sp, #48	; 0x30
   14bec:	str	r1, [sp, #4]
   14bf0:	ldrb	r1, [sp, #20]
   14bf4:	mov	r8, fp
   14bf8:	ldr	r3, [sp]
   14bfc:	mov	r7, #1
   14c00:	cmp	r1, #0
   14c04:	mov	ip, r3
   14c08:	bne	14cac <close_stdout@@Base+0x2754>
   14c0c:	ldr	r2, [pc, #1244]	; 150f0 <close_stdout@@Base+0x2b98>
   14c10:	ldrb	r3, [ip]
   14c14:	ldr	r1, [r5, r2]
   14c18:	and	r2, r3, #31
   14c1c:	lsr	r3, r3, #5
   14c20:	ldr	r3, [r1, r3, lsl #2]
   14c24:	lsr	r3, r3, r2
   14c28:	tst	r3, #1
   14c2c:	beq	14d5c <close_stdout@@Base+0x2804>
   14c30:	str	r7, [sp, #40]	; 0x28
   14c34:	mov	r6, #1
   14c38:	ldrb	r2, [ip]
   14c3c:	ldr	r9, [sp, #16]
   14c40:	ldr	sl, [sp, #36]	; 0x24
   14c44:	strb	r7, [sp, #44]	; 0x2c
   14c48:	str	r2, [sp, #48]	; 0x30
   14c4c:	cmp	fp, #0
   14c50:	strb	r7, [sp, #32]
   14c54:	beq	14d34 <close_stdout@@Base+0x27dc>
   14c58:	cmp	fp, #1
   14c5c:	beq	14d74 <close_stdout@@Base+0x281c>
   14c60:	cmp	fp, #2
   14c64:	bne	14d54 <close_stdout@@Base+0x27fc>
   14c68:	ldrb	r2, [sp, #44]	; 0x2c
   14c6c:	cmp	r2, #0
   14c70:	beq	14d54 <close_stdout@@Base+0x27fc>
   14c74:	ldr	r0, [sp, #48]	; 0x30
   14c78:	bl	11388 <iswspace@plt>
   14c7c:	cmp	r0, #0
   14c80:	movne	fp, #2
   14c84:	moveq	fp, #1
   14c88:	add	ip, sl, r6
   14c8c:	strb	r8, [sp, #32]
   14c90:	cmp	ip, r9
   14c94:	str	ip, [sp, #36]	; 0x24
   14c98:	mov	r1, #0
   14c9c:	bcs	14e38 <close_stdout@@Base+0x28e0>
   14ca0:	ldrb	r1, [sp, #20]
   14ca4:	cmp	r1, #0
   14ca8:	beq	14c0c <close_stdout@@Base+0x26b4>
   14cac:	ldr	r1, [sp, #36]	; 0x24
   14cb0:	add	r0, sp, #48	; 0x30
   14cb4:	mov	r3, r4
   14cb8:	rsb	r2, r1, r9
   14cbc:	bl	112f8 <mbrtowc@plt>
   14cc0:	cmn	r0, #1
   14cc4:	str	r0, [sp, #40]	; 0x28
   14cc8:	beq	14da4 <close_stdout@@Base+0x284c>
   14ccc:	cmn	r0, #2
   14cd0:	beq	14dbc <close_stdout@@Base+0x2864>
   14cd4:	cmp	r0, #0
   14cd8:	ldr	r6, [sp, #36]	; 0x24
   14cdc:	bne	14cfc <close_stdout@@Base+0x27a4>
   14ce0:	str	r7, [sp, #40]	; 0x28
   14ce4:	ldrb	r3, [r6]
   14ce8:	cmp	r3, #0
   14cec:	bne	150c8 <close_stdout@@Base+0x2b70>
   14cf0:	ldr	r3, [sp, #48]	; 0x30
   14cf4:	cmp	r3, #0
   14cf8:	bne	150a4 <close_stdout@@Base+0x2b4c>
   14cfc:	mov	r0, r4
   14d00:	strb	r7, [sp, #44]	; 0x2c
   14d04:	bl	11244 <mbsinit@plt>
   14d08:	strb	r7, [sp, #32]
   14d0c:	cmp	r0, #0
   14d10:	strbne	r8, [sp, #20]
   14d14:	moveq	sl, r6
   14d18:	movne	sl, r6
   14d1c:	ldreq	r9, [sp, #16]
   14d20:	ldreq	r6, [sp, #40]	; 0x28
   14d24:	ldrne	r9, [sp, #16]
   14d28:	ldrne	r6, [sp, #40]	; 0x28
   14d2c:	cmp	fp, #0
   14d30:	bne	14c58 <close_stdout@@Base+0x2700>
   14d34:	ldrb	r2, [sp, #44]	; 0x2c
   14d38:	cmp	r2, #0
   14d3c:	beq	14d54 <close_stdout@@Base+0x27fc>
   14d40:	ldr	r0, [sp, #48]	; 0x30
   14d44:	bl	11388 <iswspace@plt>
   14d48:	rsbs	fp, r0, #1
   14d4c:	movcc	fp, #0
   14d50:	b	14c88 <close_stdout@@Base+0x2730>
   14d54:	mov	fp, #1
   14d58:	b	14c88 <close_stdout@@Base+0x2730>
   14d5c:	mov	r0, r4
   14d60:	bl	11244 <mbsinit@plt>
   14d64:	cmp	r0, #0
   14d68:	beq	15080 <close_stdout@@Base+0x2b28>
   14d6c:	strb	r7, [sp, #20]
   14d70:	b	14cac <close_stdout@@Base+0x2754>
   14d74:	ldrb	r2, [sp, #44]	; 0x2c
   14d78:	cmp	r2, #0
   14d7c:	beq	14c88 <close_stdout@@Base+0x2730>
   14d80:	ldr	r0, [sp, #48]	; 0x30
   14d84:	bl	11388 <iswspace@plt>
   14d88:	ldr	r2, [sp, #8]
   14d8c:	cmp	r0, #0
   14d90:	movne	r2, sl
   14d94:	moveq	fp, #1
   14d98:	movne	fp, #2
   14d9c:	str	r2, [sp, #8]
   14da0:	b	14c88 <close_stdout@@Base+0x2730>
   14da4:	str	r7, [sp, #40]	; 0x28
   14da8:	mov	r6, #1
   14dac:	strb	r8, [sp, #44]	; 0x2c
   14db0:	ldr	r9, [sp, #16]
   14db4:	ldr	sl, [sp, #36]	; 0x24
   14db8:	b	14c4c <close_stdout@@Base+0x26f4>
   14dbc:	ldr	ip, [sp, #36]	; 0x24
   14dc0:	ldr	r9, [sp, #16]
   14dc4:	strb	r8, [sp, #44]	; 0x2c
   14dc8:	rsb	r3, ip, r9
   14dcc:	mov	sl, ip
   14dd0:	str	r3, [sp, #40]	; 0x28
   14dd4:	mov	r6, r3
   14dd8:	b	14c4c <close_stdout@@Base+0x26f4>
   14ddc:	ldr	fp, [sp, #36]	; 0x24
   14de0:	mov	r2, #1
   14de4:	mov	r3, #0
   14de8:	str	r2, [sp, #40]	; 0x28
   14dec:	strb	r3, [sp, #44]	; 0x2c
   14df0:	mov	r3, #1
   14df4:	strb	r3, [sp, #32]
   14df8:	mov	r0, fp
   14dfc:	bl	11394 <strlen@plt>
   14e00:	mov	r1, fp
   14e04:	add	r2, r0, #1
   14e08:	ldr	r0, [sp]
   14e0c:	bl	11214 <memmove@plt>
   14e10:	cmp	sl, #1
   14e14:	bne	14bb4 <close_stdout@@Base+0x265c>
   14e18:	ldr	r1, [sp, #12]
   14e1c:	ldr	r2, [sp, #76]	; 0x4c
   14e20:	ldr	r0, [sp]
   14e24:	ldr	r3, [r1]
   14e28:	cmp	r2, r3
   14e2c:	bne	150a0 <close_stdout@@Base+0x2b48>
   14e30:	add	sp, sp, #84	; 0x54
   14e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e38:	cmp	fp, #2
   14e3c:	ldreq	r3, [sp, #8]
   14e40:	strbeq	r1, [r3]
   14e44:	b	14e18 <close_stdout@@Base+0x28c0>
   14e48:	cmp	sl, #0
   14e4c:	beq	14eb4 <close_stdout@@Base+0x295c>
   14e50:	ldr	r2, [sp]
   14e54:	ldrb	r4, [r2]
   14e58:	cmp	r4, #0
   14e5c:	beq	15070 <close_stdout@@Base+0x2b18>
   14e60:	bl	11370 <__ctype_b_loc@plt>
   14e64:	ldr	r3, [sp]
   14e68:	ldr	r1, [r0]
   14e6c:	b	14e80 <close_stdout@@Base+0x2928>
   14e70:	ldrb	r4, [r3, #1]
   14e74:	add	r3, r3, #1
   14e78:	cmp	r4, #0
   14e7c:	beq	15068 <close_stdout@@Base+0x2b10>
   14e80:	lsl	r4, r4, #1
   14e84:	mov	r5, r3
   14e88:	ldrh	r2, [r1, r4]
   14e8c:	tst	r2, #8192	; 0x2000
   14e90:	bne	14e70 <close_stdout@@Base+0x2918>
   14e94:	mov	r0, r5
   14e98:	bl	11394 <strlen@plt>
   14e9c:	mov	r1, r5
   14ea0:	add	r2, r0, #1
   14ea4:	ldr	r0, [sp]
   14ea8:	bl	11214 <memmove@plt>
   14eac:	cmp	sl, #1
   14eb0:	beq	14e18 <close_stdout@@Base+0x28c0>
   14eb4:	ldr	r0, [sp]
   14eb8:	bl	11394 <strlen@plt>
   14ebc:	ldr	r1, [sp]
   14ec0:	sub	r0, r0, #1
   14ec4:	adds	r4, r1, r0
   14ec8:	bcs	14e18 <close_stdout@@Base+0x28c0>
   14ecc:	bl	11370 <__ctype_b_loc@plt>
   14ed0:	mov	r3, r4
   14ed4:	mov	ip, #0
   14ed8:	ldr	r4, [sp]
   14edc:	b	14eec <close_stdout@@Base+0x2994>
   14ee0:	cmp	r4, r3
   14ee4:	strb	ip, [r3, #1]
   14ee8:	bhi	14e18 <close_stdout@@Base+0x28c0>
   14eec:	ldrb	r2, [r3], #-1
   14ef0:	ldr	r1, [r0]
   14ef4:	lsl	r2, r2, #1
   14ef8:	ldrh	r2, [r1, r2]
   14efc:	tst	r2, #8192	; 0x2000
   14f00:	bne	14ee0 <close_stdout@@Base+0x2988>
   14f04:	b	14e18 <close_stdout@@Base+0x28c0>
   14f08:	ldr	r0, [sp]
   14f0c:	add	r4, sp, #24
   14f10:	mov	r8, #0
   14f14:	str	r0, [sp, #36]	; 0x24
   14f18:	bl	11394 <strlen@plt>
   14f1c:	ldr	r3, [sp]
   14f20:	str	r8, [sp, #24]
   14f24:	strb	r8, [sp, #20]
   14f28:	str	r8, [r4, #4]
   14f2c:	strb	r8, [sp, #32]
   14f30:	add	r2, r3, r0
   14f34:	str	r2, [sp, #16]
   14f38:	cmp	r3, r2
   14f3c:	bcs	15078 <close_stdout@@Base+0x2b20>
   14f40:	mov	fp, r3
   14f44:	add	r9, sp, #48	; 0x30
   14f48:	mov	r7, #1
   14f4c:	mov	r6, r2
   14f50:	b	14fbc <close_stdout@@Base+0x2a64>
   14f54:	ldr	r2, [pc, #404]	; 150f0 <close_stdout@@Base+0x2b98>
   14f58:	ldrb	r3, [fp]
   14f5c:	ldr	r1, [r5, r2]
   14f60:	and	r2, r3, #31
   14f64:	lsr	r3, r3, #5
   14f68:	ldr	r3, [r1, r3, lsl #2]
   14f6c:	lsr	r3, r3, r2
   14f70:	tst	r3, #1
   14f74:	beq	15030 <close_stdout@@Base+0x2ad8>
   14f78:	str	r7, [sp, #40]	; 0x28
   14f7c:	ldrb	r6, [fp]
   14f80:	ldr	fp, [sp, #36]	; 0x24
   14f84:	strb	r7, [sp, #44]	; 0x2c
   14f88:	str	r6, [sp, #48]	; 0x30
   14f8c:	mov	r0, r6
   14f90:	strb	r7, [sp, #32]
   14f94:	bl	11388 <iswspace@plt>
   14f98:	cmp	r0, #0
   14f9c:	beq	14df8 <close_stdout@@Base+0x28a0>
   14fa0:	ldr	r3, [sp, #40]	; 0x28
   14fa4:	ldr	r6, [sp, #16]
   14fa8:	add	fp, fp, r3
   14fac:	strb	r8, [sp, #32]
   14fb0:	cmp	r6, fp
   14fb4:	str	fp, [sp, #36]	; 0x24
   14fb8:	bls	14df8 <close_stdout@@Base+0x28a0>
   14fbc:	ldrb	r3, [sp, #20]
   14fc0:	cmp	r3, #0
   14fc4:	beq	14f54 <close_stdout@@Base+0x29fc>
   14fc8:	ldr	r1, [sp, #36]	; 0x24
   14fcc:	mov	r0, r9
   14fd0:	mov	r3, r4
   14fd4:	rsb	r2, r1, r6
   14fd8:	bl	112f8 <mbrtowc@plt>
   14fdc:	cmn	r0, #1
   14fe0:	str	r0, [sp, #40]	; 0x28
   14fe4:	beq	14ddc <close_stdout@@Base+0x2884>
   14fe8:	cmn	r0, #2
   14fec:	ldr	fp, [sp, #36]	; 0x24
   14ff0:	beq	15050 <close_stdout@@Base+0x2af8>
   14ff4:	cmp	r0, #0
   14ff8:	bne	15048 <close_stdout@@Base+0x2af0>
   14ffc:	str	r7, [sp, #40]	; 0x28
   15000:	ldrb	r3, [fp]
   15004:	cmp	r3, #0
   15008:	bne	150c8 <close_stdout@@Base+0x2b70>
   1500c:	ldr	r6, [sp, #48]	; 0x30
   15010:	cmp	r6, #0
   15014:	bne	150a4 <close_stdout@@Base+0x2b4c>
   15018:	mov	r0, r4
   1501c:	strb	r7, [sp, #44]	; 0x2c
   15020:	bl	11244 <mbsinit@plt>
   15024:	cmp	r0, #0
   15028:	strbne	r8, [sp, #20]
   1502c:	b	14f8c <close_stdout@@Base+0x2a34>
   15030:	mov	r0, r4
   15034:	bl	11244 <mbsinit@plt>
   15038:	cmp	r0, #0
   1503c:	beq	15080 <close_stdout@@Base+0x2b28>
   15040:	strb	r7, [sp, #20]
   15044:	b	14fc8 <close_stdout@@Base+0x2a70>
   15048:	ldr	r6, [sp, #48]	; 0x30
   1504c:	b	15018 <close_stdout@@Base+0x2ac0>
   15050:	ldr	r3, [sp, #16]
   15054:	mov	r2, #0
   15058:	strb	r2, [sp, #44]	; 0x2c
   1505c:	rsb	r3, fp, r3
   15060:	str	r3, [sp, #40]	; 0x28
   15064:	b	14df0 <close_stdout@@Base+0x2898>
   15068:	mov	r5, r3
   1506c:	b	14e94 <close_stdout@@Base+0x293c>
   15070:	ldr	r5, [sp]
   15074:	b	14e94 <close_stdout@@Base+0x293c>
   15078:	ldr	fp, [sp]
   1507c:	b	14df8 <close_stdout@@Base+0x28a0>
   15080:	ldr	r0, [pc, #108]	; 150f4 <close_stdout@@Base+0x2b9c>
   15084:	mov	r2, #142	; 0x8e
   15088:	ldr	r1, [pc, #104]	; 150f8 <close_stdout@@Base+0x2ba0>
   1508c:	ldr	r3, [pc, #104]	; 150fc <close_stdout@@Base+0x2ba4>
   15090:	add	r0, pc, r0
   15094:	add	r1, pc, r1
   15098:	add	r3, pc, r3
   1509c:	bl	114d8 <__assert_fail@plt>
   150a0:	bl	11274 <__stack_chk_fail@plt>
   150a4:	ldr	r0, [pc, #84]	; 15100 <close_stdout@@Base+0x2ba8>
   150a8:	mov	r2, #170	; 0xaa
   150ac:	ldr	r1, [pc, #80]	; 15104 <close_stdout@@Base+0x2bac>
   150b0:	ldr	r3, [pc, #80]	; 15108 <close_stdout@@Base+0x2bb0>
   150b4:	add	r0, pc, r0
   150b8:	add	r1, pc, r1
   150bc:	add	r3, pc, r3
   150c0:	bl	114d8 <__assert_fail@plt>
   150c4:	bl	158cc <close_stdout@@Base+0x3374>
   150c8:	ldr	r0, [pc, #60]	; 1510c <close_stdout@@Base+0x2bb4>
   150cc:	mov	r2, #169	; 0xa9
   150d0:	ldr	r1, [pc, #56]	; 15110 <close_stdout@@Base+0x2bb8>
   150d4:	ldr	r3, [pc, #56]	; 15114 <close_stdout@@Base+0x2bbc>
   150d8:	add	r0, pc, r0
   150dc:	add	r1, pc, r1
   150e0:	add	r3, pc, r3
   150e4:	bl	114d8 <__assert_fail@plt>
   150e8:	andeq	r6, r1, r0, lsl #9
   150ec:	andeq	r0, r0, r8, lsr #2
   150f0:	andeq	r0, r0, r4, lsr #2
   150f4:	strheq	r5, [r0], -ip
   150f8:			; <UNDEFINED> instruction: 0x000051b8
   150fc:	andeq	r5, r0, r0, lsr #3
   15100:	ldrdeq	r5, [r0], -r8
   15104:	muleq	r0, r4, r1
   15108:	andeq	r5, r0, ip, ror r1
   1510c:	muleq	r0, ip, r0
   15110:	andeq	r5, r0, r0, ror r1
   15114:	andeq	r5, r0, r8, asr r1
   15118:	push	{r4, r5, r6, r7, lr}
   1511c:	cmp	r1, #0
   15120:	sub	sp, sp, #36	; 0x24
   15124:	ldr	r7, [pc, #896]	; 154ac <close_stdout@@Base+0x2f54>
   15128:	mov	ip, r3
   1512c:	mov	r5, r0
   15130:	add	r7, pc, r7
   15134:	ldr	r4, [sp, #56]	; 0x38
   15138:	ldr	r6, [sp, #60]	; 0x3c
   1513c:	beq	15480 <close_stdout@@Base+0x2f28>
   15140:	str	r2, [sp]
   15144:	mov	r3, r1
   15148:	ldr	r2, [pc, #864]	; 154b0 <close_stdout@@Base+0x2f58>
   1514c:	mov	r1, #1
   15150:	str	ip, [sp, #4]
   15154:	add	r2, pc, r2
   15158:	bl	11424 <__fprintf_chk@plt>
   1515c:	ldr	r1, [pc, #848]	; 154b4 <close_stdout@@Base+0x2f5c>
   15160:	mov	r2, #5
   15164:	mov	r0, #0
   15168:	add	r1, pc, r1
   1516c:	bl	11268 <dcgettext@plt>
   15170:	ldr	r2, [pc, #832]	; 154b8 <close_stdout@@Base+0x2f60>
   15174:	movw	ip, #2013	; 0x7dd
   15178:	mov	r1, #1
   1517c:	ldr	r2, [r7, r2]
   15180:	str	ip, [sp]
   15184:	mov	r3, r0
   15188:	mov	r0, r5
   1518c:	bl	11424 <__fprintf_chk@plt>
   15190:	ldr	r1, [pc, #804]	; 154bc <close_stdout@@Base+0x2f64>
   15194:	mov	r0, #0
   15198:	mov	r2, #5
   1519c:	add	r1, pc, r1
   151a0:	bl	11268 <dcgettext@plt>
   151a4:	mov	r1, r5
   151a8:	bl	111c0 <fputs_unlocked@plt>
   151ac:	cmp	r6, #9
   151b0:	addls	pc, pc, r6, lsl #2
   151b4:	b	1549c <close_stdout@@Base+0x2f44>
   151b8:	b	1524c <close_stdout@@Base+0x2cf4>
   151bc:	b	15250 <close_stdout@@Base+0x2cf8>
   151c0:	b	15280 <close_stdout@@Base+0x2d28>
   151c4:	b	152b4 <close_stdout@@Base+0x2d5c>
   151c8:	b	152f0 <close_stdout@@Base+0x2d98>
   151cc:	b	15330 <close_stdout@@Base+0x2dd8>
   151d0:	b	15378 <close_stdout@@Base+0x2e20>
   151d4:	b	153c8 <close_stdout@@Base+0x2e70>
   151d8:	b	15420 <close_stdout@@Base+0x2ec8>
   151dc:	b	151e0 <close_stdout@@Base+0x2c88>
   151e0:	ldr	r1, [pc, #728]	; 154c0 <close_stdout@@Base+0x2f68>
   151e4:	mov	r0, #0
   151e8:	add	r1, pc, r1
   151ec:	mov	r2, #5
   151f0:	bl	11268 <dcgettext@plt>
   151f4:	ldm	r4, {r3, ip}
   151f8:	mov	r1, #1
   151fc:	str	ip, [sp]
   15200:	ldr	ip, [r4, #8]
   15204:	str	ip, [sp, #4]
   15208:	ldr	ip, [r4, #12]
   1520c:	str	ip, [sp, #8]
   15210:	ldr	ip, [r4, #16]
   15214:	str	ip, [sp, #12]
   15218:	ldr	ip, [r4, #20]
   1521c:	str	ip, [sp, #16]
   15220:	ldr	ip, [r4, #24]
   15224:	str	ip, [sp, #20]
   15228:	ldr	ip, [r4, #28]
   1522c:	str	ip, [sp, #24]
   15230:	ldr	ip, [r4, #32]
   15234:	str	ip, [sp, #28]
   15238:	mov	r2, r0
   1523c:	mov	r0, r5
   15240:	bl	11424 <__fprintf_chk@plt>
   15244:	add	sp, sp, #36	; 0x24
   15248:	pop	{r4, r5, r6, r7, pc}
   1524c:	bl	114c0 <abort@plt>
   15250:	ldr	r1, [pc, #620]	; 154c4 <close_stdout@@Base+0x2f6c>
   15254:	mov	r2, #5
   15258:	mov	r0, #0
   1525c:	add	r1, pc, r1
   15260:	bl	11268 <dcgettext@plt>
   15264:	ldr	r3, [r4]
   15268:	mov	r1, #1
   1526c:	mov	r2, r0
   15270:	mov	r0, r5
   15274:	add	sp, sp, #36	; 0x24
   15278:	pop	{r4, r5, r6, r7, lr}
   1527c:	b	11424 <__fprintf_chk@plt>
   15280:	ldr	r1, [pc, #576]	; 154c8 <close_stdout@@Base+0x2f70>
   15284:	mov	r2, #5
   15288:	mov	r0, #0
   1528c:	add	r1, pc, r1
   15290:	bl	11268 <dcgettext@plt>
   15294:	ldm	r4, {r3, ip}
   15298:	mov	r1, #1
   1529c:	str	ip, [sp, #56]	; 0x38
   152a0:	mov	r2, r0
   152a4:	mov	r0, r5
   152a8:	add	sp, sp, #36	; 0x24
   152ac:	pop	{r4, r5, r6, r7, lr}
   152b0:	b	11424 <__fprintf_chk@plt>
   152b4:	ldr	r1, [pc, #528]	; 154cc <close_stdout@@Base+0x2f74>
   152b8:	mov	r2, #5
   152bc:	mov	r0, #0
   152c0:	add	r1, pc, r1
   152c4:	bl	11268 <dcgettext@plt>
   152c8:	ldm	r4, {r3, ip}
   152cc:	mov	r1, #1
   152d0:	str	ip, [sp, #56]	; 0x38
   152d4:	ldr	ip, [r4, #8]
   152d8:	str	ip, [sp, #60]	; 0x3c
   152dc:	mov	r2, r0
   152e0:	mov	r0, r5
   152e4:	add	sp, sp, #36	; 0x24
   152e8:	pop	{r4, r5, r6, r7, lr}
   152ec:	b	11424 <__fprintf_chk@plt>
   152f0:	ldr	r1, [pc, #472]	; 154d0 <close_stdout@@Base+0x2f78>
   152f4:	mov	r2, #5
   152f8:	mov	r0, #0
   152fc:	add	r1, pc, r1
   15300:	bl	11268 <dcgettext@plt>
   15304:	ldm	r4, {r3, ip}
   15308:	mov	r1, #1
   1530c:	str	ip, [sp]
   15310:	ldr	ip, [r4, #8]
   15314:	str	ip, [sp, #4]
   15318:	ldr	ip, [r4, #12]
   1531c:	str	ip, [sp, #8]
   15320:	mov	r2, r0
   15324:	mov	r0, r5
   15328:	bl	11424 <__fprintf_chk@plt>
   1532c:	b	15244 <close_stdout@@Base+0x2cec>
   15330:	ldr	r1, [pc, #412]	; 154d4 <close_stdout@@Base+0x2f7c>
   15334:	mov	r2, #5
   15338:	mov	r0, #0
   1533c:	add	r1, pc, r1
   15340:	bl	11268 <dcgettext@plt>
   15344:	ldm	r4, {r3, ip}
   15348:	mov	r1, #1
   1534c:	str	ip, [sp]
   15350:	ldr	ip, [r4, #8]
   15354:	str	ip, [sp, #4]
   15358:	ldr	ip, [r4, #12]
   1535c:	str	ip, [sp, #8]
   15360:	ldr	ip, [r4, #16]
   15364:	str	ip, [sp, #12]
   15368:	mov	r2, r0
   1536c:	mov	r0, r5
   15370:	bl	11424 <__fprintf_chk@plt>
   15374:	b	15244 <close_stdout@@Base+0x2cec>
   15378:	ldr	r1, [pc, #344]	; 154d8 <close_stdout@@Base+0x2f80>
   1537c:	mov	r2, #5
   15380:	mov	r0, #0
   15384:	add	r1, pc, r1
   15388:	bl	11268 <dcgettext@plt>
   1538c:	ldm	r4, {r3, ip}
   15390:	mov	r1, #1
   15394:	str	ip, [sp]
   15398:	ldr	ip, [r4, #8]
   1539c:	str	ip, [sp, #4]
   153a0:	ldr	ip, [r4, #12]
   153a4:	str	ip, [sp, #8]
   153a8:	ldr	ip, [r4, #16]
   153ac:	str	ip, [sp, #12]
   153b0:	ldr	ip, [r4, #20]
   153b4:	str	ip, [sp, #16]
   153b8:	mov	r2, r0
   153bc:	mov	r0, r5
   153c0:	bl	11424 <__fprintf_chk@plt>
   153c4:	b	15244 <close_stdout@@Base+0x2cec>
   153c8:	ldr	r1, [pc, #268]	; 154dc <close_stdout@@Base+0x2f84>
   153cc:	mov	r2, #5
   153d0:	mov	r0, #0
   153d4:	add	r1, pc, r1
   153d8:	bl	11268 <dcgettext@plt>
   153dc:	ldm	r4, {r3, ip}
   153e0:	mov	r1, #1
   153e4:	str	ip, [sp]
   153e8:	ldr	ip, [r4, #8]
   153ec:	str	ip, [sp, #4]
   153f0:	ldr	ip, [r4, #12]
   153f4:	str	ip, [sp, #8]
   153f8:	ldr	ip, [r4, #16]
   153fc:	str	ip, [sp, #12]
   15400:	ldr	ip, [r4, #20]
   15404:	str	ip, [sp, #16]
   15408:	ldr	ip, [r4, #24]
   1540c:	str	ip, [sp, #20]
   15410:	mov	r2, r0
   15414:	mov	r0, r5
   15418:	bl	11424 <__fprintf_chk@plt>
   1541c:	b	15244 <close_stdout@@Base+0x2cec>
   15420:	ldr	r1, [pc, #184]	; 154e0 <close_stdout@@Base+0x2f88>
   15424:	mov	r2, #5
   15428:	mov	r0, #0
   1542c:	add	r1, pc, r1
   15430:	bl	11268 <dcgettext@plt>
   15434:	ldm	r4, {r3, ip}
   15438:	mov	r1, #1
   1543c:	str	ip, [sp]
   15440:	ldr	ip, [r4, #8]
   15444:	str	ip, [sp, #4]
   15448:	ldr	ip, [r4, #12]
   1544c:	str	ip, [sp, #8]
   15450:	ldr	ip, [r4, #16]
   15454:	str	ip, [sp, #12]
   15458:	ldr	ip, [r4, #20]
   1545c:	str	ip, [sp, #16]
   15460:	ldr	ip, [r4, #24]
   15464:	str	ip, [sp, #20]
   15468:	ldr	ip, [r4, #28]
   1546c:	str	ip, [sp, #24]
   15470:	mov	r2, r0
   15474:	mov	r0, r5
   15478:	bl	11424 <__fprintf_chk@plt>
   1547c:	b	15244 <close_stdout@@Base+0x2cec>
   15480:	str	r3, [sp]
   15484:	mov	r3, r2
   15488:	ldr	r2, [pc, #84]	; 154e4 <close_stdout@@Base+0x2f8c>
   1548c:	mov	r1, #1
   15490:	add	r2, pc, r2
   15494:	bl	11424 <__fprintf_chk@plt>
   15498:	b	1515c <close_stdout@@Base+0x2c04>
   1549c:	ldr	r1, [pc, #68]	; 154e8 <close_stdout@@Base+0x2f90>
   154a0:	mov	r0, #0
   154a4:	add	r1, pc, r1
   154a8:	b	151ec <close_stdout@@Base+0x2c94>
   154ac:	andeq	r5, r1, r8, asr #29
   154b0:	andeq	r5, r0, r8, lsl #2
   154b4:	andeq	r5, r0, r8, lsl #2
   154b8:	andeq	r0, r0, r4, asr r1
   154bc:	ldrdeq	r5, [r0], -r8
   154c0:	andeq	r5, r0, r4, ror #4
   154c4:	andeq	r5, r0, r4, ror #1
   154c8:	andeq	r5, r0, r4, asr #1
   154cc:	andeq	r5, r0, r8, lsr #1
   154d0:	andeq	r5, r0, r8, lsl #1
   154d4:	andeq	r5, r0, r8, rrx
   154d8:	andeq	r5, r0, r4, asr #32
   154dc:	andeq	r5, r0, ip, lsl r0
   154e0:	strdeq	r4, [r0], -r0
   154e4:	ldrdeq	r4, [r0], -r8
   154e8:	ldrdeq	r4, [r0], -ip
   154ec:	push	{r4, r5, lr}
   154f0:	sub	sp, sp, #12
   154f4:	ldr	r5, [sp, #24]
   154f8:	ldr	ip, [r5]
   154fc:	cmp	ip, #0
   15500:	beq	1551c <close_stdout@@Base+0x2fc4>
   15504:	mov	lr, r5
   15508:	mov	ip, #0
   1550c:	ldr	r4, [lr, #4]!
   15510:	add	ip, ip, #1
   15514:	cmp	r4, #0
   15518:	bne	1550c <close_stdout@@Base+0x2fb4>
   1551c:	stm	sp, {r5, ip}
   15520:	bl	15118 <close_stdout@@Base+0x2bc0>
   15524:	add	sp, sp, #12
   15528:	pop	{r4, r5, pc}
   1552c:	push	{r4, r5, r6, r7, lr}
   15530:	sub	sp, sp, #60	; 0x3c
   15534:	ldr	r4, [pc, #100]	; 155a0 <close_stdout@@Base+0x3048>
   15538:	mov	ip, #0
   1553c:	ldr	r5, [pc, #96]	; 155a4 <close_stdout@@Base+0x304c>
   15540:	mov	lr, ip
   15544:	add	r4, pc, r4
   15548:	ldr	r6, [sp, #80]	; 0x50
   1554c:	ldr	r7, [r4, r5]
   15550:	add	r5, sp, #12
   15554:	ldr	r4, [r7]
   15558:	str	r4, [sp, #52]	; 0x34
   1555c:	ldr	r4, [r6, ip]
   15560:	cmp	r4, #0
   15564:	str	r4, [r5, ip]
   15568:	beq	1557c <close_stdout@@Base+0x3024>
   1556c:	add	lr, lr, #1
   15570:	add	ip, ip, #4
   15574:	cmp	lr, #10
   15578:	bne	1555c <close_stdout@@Base+0x3004>
   1557c:	stm	sp, {r5, lr}
   15580:	bl	15118 <close_stdout@@Base+0x2bc0>
   15584:	ldr	r2, [sp, #52]	; 0x34
   15588:	ldr	r3, [r7]
   1558c:	cmp	r2, r3
   15590:	bne	1559c <close_stdout@@Base+0x3044>
   15594:	add	sp, sp, #60	; 0x3c
   15598:	pop	{r4, r5, r6, r7, pc}
   1559c:	bl	11274 <__stack_chk_fail@plt>
   155a0:			; <UNDEFINED> instruction: 0x00015ab4
   155a4:	andeq	r0, r0, r8, lsr #2
   155a8:	push	{r3}		; (str r3, [sp, #-4]!)
   155ac:	push	{r4, lr}
   155b0:	sub	sp, sp, #20
   155b4:	ldr	lr, [pc, #72]	; 15604 <close_stdout@@Base+0x30ac>
   155b8:	add	ip, sp, #32
   155bc:	ldr	r4, [pc, #68]	; 15608 <close_stdout@@Base+0x30b0>
   155c0:	add	lr, pc, lr
   155c4:	ldr	r3, [sp, #28]
   155c8:	ldr	r4, [lr, r4]
   155cc:	str	ip, [sp]
   155d0:	str	ip, [sp, #8]
   155d4:	ldr	ip, [r4]
   155d8:	str	ip, [sp, #12]
   155dc:	bl	1552c <close_stdout@@Base+0x2fd4>
   155e0:	ldr	r2, [sp, #12]
   155e4:	ldr	r3, [r4]
   155e8:	cmp	r2, r3
   155ec:	bne	15600 <close_stdout@@Base+0x30a8>
   155f0:	add	sp, sp, #20
   155f4:	pop	{r4, lr}
   155f8:	add	sp, sp, #4
   155fc:	bx	lr
   15600:	bl	11274 <__stack_chk_fail@plt>
   15604:	andeq	r5, r1, r8, lsr sl
   15608:	andeq	r0, r0, r8, lsr #2
   1560c:	ldr	r1, [pc, #132]	; 15698 <close_stdout@@Base+0x3140>
   15610:	mov	r2, #5
   15614:	push	{r4, lr}
   15618:	add	r1, pc, r1
   1561c:	mov	r0, #0
   15620:	ldr	r4, [pc, #116]	; 1569c <close_stdout@@Base+0x3144>
   15624:	bl	11268 <dcgettext@plt>
   15628:	ldr	r2, [pc, #112]	; 156a0 <close_stdout@@Base+0x3148>
   1562c:	add	r4, pc, r4
   15630:	add	r2, pc, r2
   15634:	mov	r1, r0
   15638:	mov	r0, #1
   1563c:	bl	1140c <__printf_chk@plt>
   15640:	ldr	r1, [pc, #92]	; 156a4 <close_stdout@@Base+0x314c>
   15644:	mov	r2, #5
   15648:	mov	r0, #0
   1564c:	add	r1, pc, r1
   15650:	bl	11268 <dcgettext@plt>
   15654:	ldr	r2, [pc, #76]	; 156a8 <close_stdout@@Base+0x3150>
   15658:	ldr	r3, [pc, #76]	; 156ac <close_stdout@@Base+0x3154>
   1565c:	add	r2, pc, r2
   15660:	add	r3, pc, r3
   15664:	mov	r1, r0
   15668:	mov	r0, #1
   1566c:	bl	1140c <__printf_chk@plt>
   15670:	ldr	r1, [pc, #56]	; 156b0 <close_stdout@@Base+0x3158>
   15674:	mov	r0, #0
   15678:	mov	r2, #5
   1567c:	add	r1, pc, r1
   15680:	bl	11268 <dcgettext@plt>
   15684:	ldr	r3, [pc, #40]	; 156b4 <close_stdout@@Base+0x315c>
   15688:	ldr	r3, [r4, r3]
   1568c:	pop	{r4, lr}
   15690:	ldr	r1, [r3]
   15694:	b	111c0 <fputs_unlocked@plt>
   15698:	andeq	r4, r0, r4, lsr #29
   1569c:	andeq	r5, r1, ip, asr #19
   156a0:	andeq	r4, r0, r4, lsr #29
   156a4:	andeq	r4, r0, r0, lsr #29
   156a8:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   156ac:	andeq	r4, r0, r0, lsl #14
   156b0:	andeq	r4, r0, r4, lsl #29
   156b4:	andeq	r0, r0, r4, asr #2
   156b8:	push	{r4, lr}
   156bc:	mov	r4, r0
   156c0:	bl	11328 <malloc@plt>
   156c4:	rsbs	r3, r0, #1
   156c8:	movcc	r3, #0
   156cc:	cmp	r4, #0
   156d0:	moveq	r3, #0
   156d4:	cmp	r3, #0
   156d8:	popeq	{r4, pc}
   156dc:	bl	158cc <close_stdout@@Base+0x3374>
   156e0:	push	{r3, r4, r5, lr}
   156e4:	mov	r4, r0
   156e8:	mvn	r0, #0
   156ec:	mov	r5, r1
   156f0:	bl	18c70 <close_stdout@@Base+0x6718>
   156f4:	cmp	r0, r4
   156f8:	bcc	15708 <close_stdout@@Base+0x31b0>
   156fc:	mul	r0, r4, r5
   15700:	pop	{r3, r4, r5, lr}
   15704:	b	156b8 <close_stdout@@Base+0x3160>
   15708:	bl	158cc <close_stdout@@Base+0x3374>
   1570c:	b	156b8 <close_stdout@@Base+0x3160>
   15710:	rsbs	r3, r1, #1
   15714:	push	{r4, lr}
   15718:	movcc	r3, #0
   1571c:	cmp	r0, #0
   15720:	mov	r4, r1
   15724:	moveq	r3, #0
   15728:	cmp	r3, #0
   1572c:	bne	15750 <close_stdout@@Base+0x31f8>
   15730:	bl	11280 <realloc@plt>
   15734:	rsbs	r3, r0, #1
   15738:	movcc	r3, #0
   1573c:	cmp	r4, #0
   15740:	moveq	r3, #0
   15744:	cmp	r3, #0
   15748:	popeq	{r4, pc}
   1574c:	bl	158cc <close_stdout@@Base+0x3374>
   15750:	bl	11220 <free@plt>
   15754:	mov	r0, #0
   15758:	pop	{r4, pc}
   1575c:	push	{r4, r5, r6, lr}
   15760:	mov	r5, r1
   15764:	mov	r6, r0
   15768:	mov	r1, r2
   1576c:	mvn	r0, #0
   15770:	mov	r4, r2
   15774:	bl	18c70 <close_stdout@@Base+0x6718>
   15778:	cmp	r0, r5
   1577c:	bcc	15790 <close_stdout@@Base+0x3238>
   15780:	mov	r0, r6
   15784:	mul	r1, r5, r4
   15788:	pop	{r4, r5, r6, lr}
   1578c:	b	15710 <close_stdout@@Base+0x31b8>
   15790:	bl	158cc <close_stdout@@Base+0x3374>
   15794:	push	{r3, r4, r5, r6, r7, lr}
   15798:	subs	r7, r0, #0
   1579c:	mov	r5, r1
   157a0:	mov	r6, r2
   157a4:	ldr	r4, [r1]
   157a8:	beq	157e0 <close_stdout@@Base+0x3288>
   157ac:	movw	r0, #43690	; 0xaaaa
   157b0:	mov	r1, r2
   157b4:	bfi	r0, r0, #16, #16
   157b8:	bl	18c70 <close_stdout@@Base+0x6718>
   157bc:	cmp	r4, r0
   157c0:	addcc	r3, r4, #1
   157c4:	addcc	r4, r4, r3, lsr #1
   157c8:	bcs	15804 <close_stdout@@Base+0x32ac>
   157cc:	str	r4, [r5]
   157d0:	mov	r0, r7
   157d4:	mul	r1, r6, r4
   157d8:	pop	{r3, r4, r5, r6, r7, lr}
   157dc:	b	15710 <close_stdout@@Base+0x31b8>
   157e0:	cmp	r4, #0
   157e4:	bne	157cc <close_stdout@@Base+0x3274>
   157e8:	mov	r0, #64	; 0x40
   157ec:	mov	r1, r2
   157f0:	bl	18c70 <close_stdout@@Base+0x6718>
   157f4:	cmp	r0, #0
   157f8:	movne	r4, r0
   157fc:	addeq	r4, r0, #1
   15800:	b	157cc <close_stdout@@Base+0x3274>
   15804:	bl	158cc <close_stdout@@Base+0x3374>
   15808:	cmp	r0, #0
   1580c:	push	{r3, lr}
   15810:	ldr	r3, [r1]
   15814:	beq	15840 <close_stdout@@Base+0x32e8>
   15818:	movw	r2, #43689	; 0xaaa9
   1581c:	movt	r2, #43690	; 0xaaaa
   15820:	cmp	r3, r2
   15824:	addls	r2, r3, #1
   15828:	addls	r3, r3, r2, lsr #1
   1582c:	bhi	15858 <close_stdout@@Base+0x3300>
   15830:	str	r3, [r1]
   15834:	mov	r1, r3
   15838:	pop	{r3, lr}
   1583c:	b	15710 <close_stdout@@Base+0x31b8>
   15840:	cmp	r3, #0
   15844:	moveq	r3, #64	; 0x40
   15848:	str	r3, [r1]
   1584c:	mov	r1, r3
   15850:	pop	{r3, lr}
   15854:	b	15710 <close_stdout@@Base+0x31b8>
   15858:	bl	158cc <close_stdout@@Base+0x3374>
   1585c:	push	{r4, lr}
   15860:	mov	r4, r0
   15864:	bl	156b8 <close_stdout@@Base+0x3160>
   15868:	mov	r2, r4
   1586c:	mov	r1, #0
   15870:	pop	{r4, lr}
   15874:	b	113f4 <memset@plt>
   15878:	push	{r3, lr}
   1587c:	bl	111b4 <calloc@plt>
   15880:	cmp	r0, #0
   15884:	popne	{r3, pc}
   15888:	bl	158cc <close_stdout@@Base+0x3374>
   1588c:	push	{r3, r4, r5, lr}
   15890:	mov	r4, r1
   15894:	mov	r5, r0
   15898:	mov	r0, r1
   1589c:	bl	156b8 <close_stdout@@Base+0x3160>
   158a0:	mov	r1, r5
   158a4:	mov	r2, r4
   158a8:	pop	{r3, r4, r5, lr}
   158ac:	b	11238 <memcpy@plt>
   158b0:	push	{r4, lr}
   158b4:	mov	r4, r0
   158b8:	bl	11394 <strlen@plt>
   158bc:	add	r1, r0, #1
   158c0:	mov	r0, r4
   158c4:	pop	{r4, lr}
   158c8:	b	1588c <close_stdout@@Base+0x3334>
   158cc:	ldr	r3, [pc, #64]	; 15914 <close_stdout@@Base+0x33bc>
   158d0:	mov	r2, #5
   158d4:	ldr	ip, [pc, #60]	; 15918 <close_stdout@@Base+0x33c0>
   158d8:	mov	r0, #0
   158dc:	add	r3, pc, r3
   158e0:	ldr	r1, [pc, #52]	; 1591c <close_stdout@@Base+0x33c4>
   158e4:	push	{r4, lr}
   158e8:	add	r1, pc, r1
   158ec:	ldr	r3, [r3, ip]
   158f0:	ldr	r4, [r3]
   158f4:	bl	11268 <dcgettext@plt>
   158f8:	ldr	r2, [pc, #32]	; 15920 <close_stdout@@Base+0x33c8>
   158fc:	mov	r1, #0
   15900:	add	r2, pc, r2
   15904:	mov	r3, r0
   15908:	mov	r0, r4
   1590c:	bl	11304 <error@plt>
   15910:	bl	114c0 <abort@plt>
   15914:	andeq	r5, r1, ip, lsl r7
   15918:	andeq	r0, r0, r8, asr #2
   1591c:	andeq	r4, r0, r8, lsl #25
   15920:	strdeq	r4, [r0], -r0
   15924:	push	{r4, lr}
   15928:	sub	sp, sp, #8
   1592c:	ldr	ip, [sp, #16]
   15930:	str	ip, [sp]
   15934:	bl	18124 <close_stdout@@Base+0x5bcc>
   15938:	subs	r4, r0, #0
   1593c:	blt	1594c <close_stdout@@Base+0x33f4>
   15940:	mov	r0, r4
   15944:	add	sp, sp, #8
   15948:	pop	{r4, pc}
   1594c:	bl	113b8 <__errno_location@plt>
   15950:	ldr	r3, [r0]
   15954:	cmp	r3, #12
   15958:	bne	15940 <close_stdout@@Base+0x33e8>
   1595c:	bl	158cc <close_stdout@@Base+0x3374>
   15960:	push	{r4, lr}
   15964:	bl	18488 <close_stdout@@Base+0x5f30>
   15968:	subs	r4, r0, #0
   1596c:	beq	15978 <close_stdout@@Base+0x3420>
   15970:	mov	r0, r4
   15974:	pop	{r4, pc}
   15978:	bl	113b8 <__errno_location@plt>
   1597c:	ldr	r3, [r0]
   15980:	cmp	r3, #12
   15984:	bne	15970 <close_stdout@@Base+0x3418>
   15988:	bl	158cc <close_stdout@@Base+0x3374>
   1598c:	push	{r4, lr}
   15990:	bl	186a4 <close_stdout@@Base+0x614c>
   15994:	subs	r4, r0, #0
   15998:	beq	159a4 <close_stdout@@Base+0x344c>
   1599c:	mov	r0, r4
   159a0:	pop	{r4, pc}
   159a4:	bl	113b8 <__errno_location@plt>
   159a8:	ldr	r3, [r0]
   159ac:	cmp	r3, #12
   159b0:	bne	1599c <close_stdout@@Base+0x3444>
   159b4:	bl	158cc <close_stdout@@Base+0x3374>
   159b8:	ldr	ip, [pc, #2612]	; 163f4 <close_stdout@@Base+0x3e9c>
   159bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159c0:	mov	r8, r2
   159c4:	ldr	r2, [pc, #2604]	; 163f8 <close_stdout@@Base+0x3ea0>
   159c8:	add	ip, pc, ip
   159cc:	mov	r9, r3
   159d0:	sub	sp, sp, #60	; 0x3c
   159d4:	mov	r3, ip
   159d8:	cmp	r8, #36	; 0x24
   159dc:	ldr	r7, [ip, r2]
   159e0:	mov	r4, r0
   159e4:	mov	r6, r1
   159e8:	ldr	fp, [sp, #96]	; 0x60
   159ec:	ldr	r3, [r7]
   159f0:	str	r3, [sp, #52]	; 0x34
   159f4:	bhi	163c0 <close_stdout@@Base+0x3e68>
   159f8:	cmp	r1, #0
   159fc:	mov	r5, #0
   15a00:	addeq	r6, sp, #48	; 0x30
   15a04:	bl	113b8 <__errno_location@plt>
   15a08:	mov	r2, r8
   15a0c:	mov	r3, r5
   15a10:	mov	r1, r6
   15a14:	str	r5, [r0]
   15a18:	mov	sl, r0
   15a1c:	mov	r0, r4
   15a20:	bl	11490 <__strtoll_internal@plt>
   15a24:	ldr	r8, [r6]
   15a28:	cmp	r8, r4
   15a2c:	strd	r0, [sp]
   15a30:	beq	15bcc <close_stdout@@Base+0x3674>
   15a34:	ldr	sl, [sl]
   15a38:	cmp	sl, #0
   15a3c:	bne	15a78 <close_stdout@@Base+0x3520>
   15a40:	cmp	fp, #0
   15a44:	beq	15c10 <close_stdout@@Base+0x36b8>
   15a48:	ldrb	r4, [r8]
   15a4c:	cmp	r4, #0
   15a50:	bne	15a88 <close_stdout@@Base+0x3530>
   15a54:	ldrd	r2, [sp]
   15a58:	mov	r0, sl
   15a5c:	strd	r2, [r9]
   15a60:	ldr	r2, [sp, #52]	; 0x34
   15a64:	ldr	r3, [r7]
   15a68:	cmp	r2, r3
   15a6c:	bne	163bc <close_stdout@@Base+0x3e64>
   15a70:	add	sp, sp, #60	; 0x3c
   15a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a78:	cmp	sl, #34	; 0x22
   15a7c:	beq	15c08 <close_stdout@@Base+0x36b0>
   15a80:	mov	r0, #4
   15a84:	b	15a60 <close_stdout@@Base+0x3508>
   15a88:	mov	r0, fp
   15a8c:	mov	r1, r4
   15a90:	bl	113a0 <strchr@plt>
   15a94:	cmp	r0, #0
   15a98:	beq	15bbc <close_stdout@@Base+0x3664>
   15a9c:	mov	r0, fp
   15aa0:	mov	r1, #48	; 0x30
   15aa4:	bl	113a0 <strchr@plt>
   15aa8:	cmp	r0, #0
   15aac:	beq	15acc <close_stdout@@Base+0x3574>
   15ab0:	ldrb	r3, [r8, #1]
   15ab4:	cmp	r3, #68	; 0x44
   15ab8:	beq	15c20 <close_stdout@@Base+0x36c8>
   15abc:	cmp	r3, #105	; 0x69
   15ac0:	beq	1627c <close_stdout@@Base+0x3d24>
   15ac4:	cmp	r3, #66	; 0x42
   15ac8:	beq	15c20 <close_stdout@@Base+0x36c8>
   15acc:	mov	fp, #1
   15ad0:	mov	r3, #1024	; 0x400
   15ad4:	sub	r4, r4, #66	; 0x42
   15ad8:	cmp	r4, #53	; 0x35
   15adc:	addls	pc, pc, r4, lsl #2
   15ae0:	b	1626c <close_stdout@@Base+0x3d14>
   15ae4:	b	15f7c <close_stdout@@Base+0x3a24>
   15ae8:	b	1626c <close_stdout@@Base+0x3d14>
   15aec:	b	1626c <close_stdout@@Base+0x3d14>
   15af0:	b	15ecc <close_stdout@@Base+0x3974>
   15af4:	b	1626c <close_stdout@@Base+0x3d14>
   15af8:	b	15e34 <close_stdout@@Base+0x38dc>
   15afc:	b	1626c <close_stdout@@Base+0x3d14>
   15b00:	b	1626c <close_stdout@@Base+0x3d14>
   15b04:	b	1626c <close_stdout@@Base+0x3d14>
   15b08:	b	161f4 <close_stdout@@Base+0x3c9c>
   15b0c:	b	1626c <close_stdout@@Base+0x3d14>
   15b10:	b	16124 <close_stdout@@Base+0x3bcc>
   15b14:	b	1626c <close_stdout@@Base+0x3d14>
   15b18:	b	1626c <close_stdout@@Base+0x3d14>
   15b1c:	b	16074 <close_stdout@@Base+0x3b1c>
   15b20:	b	1626c <close_stdout@@Base+0x3d14>
   15b24:	b	1626c <close_stdout@@Base+0x3d14>
   15b28:	b	1626c <close_stdout@@Base+0x3d14>
   15b2c:	b	15fcc <close_stdout@@Base+0x3a74>
   15b30:	b	1626c <close_stdout@@Base+0x3d14>
   15b34:	b	1626c <close_stdout@@Base+0x3d14>
   15b38:	b	1626c <close_stdout@@Base+0x3d14>
   15b3c:	b	1626c <close_stdout@@Base+0x3d14>
   15b40:	b	15d4c <close_stdout@@Base+0x37f4>
   15b44:	b	15c9c <close_stdout@@Base+0x3744>
   15b48:	b	1626c <close_stdout@@Base+0x3d14>
   15b4c:	b	1626c <close_stdout@@Base+0x3d14>
   15b50:	b	1626c <close_stdout@@Base+0x3d14>
   15b54:	b	1626c <close_stdout@@Base+0x3d14>
   15b58:	b	1626c <close_stdout@@Base+0x3d14>
   15b5c:	b	1626c <close_stdout@@Base+0x3d14>
   15b60:	b	1626c <close_stdout@@Base+0x3d14>
   15b64:	b	15c4c <close_stdout@@Base+0x36f4>
   15b68:	b	15c2c <close_stdout@@Base+0x36d4>
   15b6c:	b	1626c <close_stdout@@Base+0x3d14>
   15b70:	b	1626c <close_stdout@@Base+0x3d14>
   15b74:	b	1626c <close_stdout@@Base+0x3d14>
   15b78:	b	15e34 <close_stdout@@Base+0x38dc>
   15b7c:	b	1626c <close_stdout@@Base+0x3d14>
   15b80:	b	1626c <close_stdout@@Base+0x3d14>
   15b84:	b	1626c <close_stdout@@Base+0x3d14>
   15b88:	b	161f4 <close_stdout@@Base+0x3c9c>
   15b8c:	b	1626c <close_stdout@@Base+0x3d14>
   15b90:	b	16124 <close_stdout@@Base+0x3bcc>
   15b94:	b	1626c <close_stdout@@Base+0x3d14>
   15b98:	b	1626c <close_stdout@@Base+0x3d14>
   15b9c:	b	1626c <close_stdout@@Base+0x3d14>
   15ba0:	b	1626c <close_stdout@@Base+0x3d14>
   15ba4:	b	1626c <close_stdout@@Base+0x3d14>
   15ba8:	b	1626c <close_stdout@@Base+0x3d14>
   15bac:	b	15fcc <close_stdout@@Base+0x3a74>
   15bb0:	b	1626c <close_stdout@@Base+0x3d14>
   15bb4:	b	1626c <close_stdout@@Base+0x3d14>
   15bb8:	b	15dfc <close_stdout@@Base+0x38a4>
   15bbc:	ldrd	r2, [sp]
   15bc0:	orr	r0, sl, #2
   15bc4:	strd	r2, [r9]
   15bc8:	b	15a60 <close_stdout@@Base+0x3508>
   15bcc:	cmp	fp, r5
   15bd0:	beq	15a80 <close_stdout@@Base+0x3528>
   15bd4:	ldrb	r4, [r4]
   15bd8:	cmp	r4, r5
   15bdc:	beq	15a80 <close_stdout@@Base+0x3528>
   15be0:	mov	r0, fp
   15be4:	mov	r1, r4
   15be8:	bl	113a0 <strchr@plt>
   15bec:	cmp	r0, r5
   15bf0:	beq	15a80 <close_stdout@@Base+0x3528>
   15bf4:	mov	r0, #1
   15bf8:	mov	r1, #0
   15bfc:	mov	sl, r5
   15c00:	strd	r0, [sp]
   15c04:	b	15a9c <close_stdout@@Base+0x3544>
   15c08:	mov	sl, #1
   15c0c:	b	15a40 <close_stdout@@Base+0x34e8>
   15c10:	ldrd	r0, [sp]
   15c14:	strd	r0, [r9]
   15c18:	mov	r0, sl
   15c1c:	b	15a60 <close_stdout@@Base+0x3508>
   15c20:	mov	fp, #2
   15c24:	mov	r3, #1000	; 0x3e8
   15c28:	b	15ad4 <close_stdout@@Base+0x357c>
   15c2c:	mov	r5, #0
   15c30:	add	r3, r8, fp
   15c34:	str	r3, [r6]
   15c38:	ldrb	r3, [r8, fp]
   15c3c:	orr	sl, sl, r5
   15c40:	cmp	r3, #0
   15c44:	orrne	sl, sl, #2
   15c48:	b	15a54 <close_stdout@@Base+0x34fc>
   15c4c:	ldrd	r0, [sp]
   15c50:	mov	r3, #0
   15c54:	movt	r3, #65472	; 0xffc0
   15c58:	mov	r2, #0
   15c5c:	cmp	r0, r2
   15c60:	sbcs	r1, r1, r3
   15c64:	blt	162b4 <close_stdout@@Base+0x3d5c>
   15c68:	ldrd	r2, [sp]
   15c6c:	cmp	r2, #0
   15c70:	sbcs	r3, r3, #4194304	; 0x400000
   15c74:	bge	16328 <close_stdout@@Base+0x3dd0>
   15c78:	ldr	r0, [sp, #4]
   15c7c:	mov	r5, #0
   15c80:	ldr	r1, [sp]
   15c84:	lsl	r3, r0, #9
   15c88:	lsl	r2, r1, #9
   15c8c:	orr	r3, r3, r1, lsr #23
   15c90:	str	r2, [sp]
   15c94:	str	r3, [sp, #4]
   15c98:	b	15c30 <close_stdout@@Base+0x36d8>
   15c9c:	mov	r0, r3
   15ca0:	asr	r1, r3, #31
   15ca4:	strd	r0, [sp, #8]
   15ca8:	mov	r0, #0
   15cac:	mov	r1, #-2147483648	; 0x80000000
   15cb0:	ldrd	r2, [sp, #8]
   15cb4:	bl	18e7c <close_stdout@@Base+0x6924>
   15cb8:	mov	r4, #7
   15cbc:	str	sl, [sp, #28]
   15cc0:	mov	r5, #0
   15cc4:	str	fp, [sp, #32]
   15cc8:	str	r8, [sp, #36]	; 0x24
   15ccc:	str	r6, [sp, #40]	; 0x28
   15cd0:	str	r9, [sp, #44]	; 0x2c
   15cd4:	ldrd	sl, [sp]
   15cd8:	strd	r0, [sp, #16]
   15cdc:	mov	r8, r0
   15ce0:	str	r7, [sp, #16]
   15ce4:	mov	r9, r1
   15ce8:	ldrd	r6, [sp, #8]
   15cec:	b	15d30 <close_stdout@@Base+0x37d8>
   15cf0:	mov	r2, r6
   15cf4:	mvn	r0, #0
   15cf8:	mvn	r1, #-2147483648	; 0x80000000
   15cfc:	mov	r3, r7
   15d00:	bl	18e7c <close_stdout@@Base+0x6924>
   15d04:	cmp	r0, sl
   15d08:	sbcs	r2, r1, fp
   15d0c:	blt	162e8 <close_stdout@@Base+0x3d90>
   15d10:	mul	r2, sl, r7
   15d14:	mov	r3, #0
   15d18:	mla	r2, r6, fp, r2
   15d1c:	umull	sl, fp, sl, r6
   15d20:	add	fp, r2, fp
   15d24:	subs	r4, r4, #1
   15d28:	orr	r5, r5, r3
   15d2c:	beq	16294 <close_stdout@@Base+0x3d3c>
   15d30:	cmp	sl, r8
   15d34:	sbcs	r1, fp, r9
   15d38:	bge	15cf0 <close_stdout@@Base+0x3798>
   15d3c:	mov	sl, #0
   15d40:	mov	fp, #-2147483648	; 0x80000000
   15d44:	mov	r3, #1
   15d48:	b	15d24 <close_stdout@@Base+0x37cc>
   15d4c:	mov	r0, r3
   15d50:	asr	r1, r3, #31
   15d54:	strd	r0, [sp, #8]
   15d58:	mov	r0, #0
   15d5c:	mov	r1, #-2147483648	; 0x80000000
   15d60:	ldrd	r2, [sp, #8]
   15d64:	bl	18e7c <close_stdout@@Base+0x6924>
   15d68:	mov	r4, #8
   15d6c:	str	sl, [sp, #28]
   15d70:	mov	r5, #0
   15d74:	str	fp, [sp, #32]
   15d78:	str	r8, [sp, #36]	; 0x24
   15d7c:	str	r6, [sp, #40]	; 0x28
   15d80:	str	r9, [sp, #44]	; 0x2c
   15d84:	ldrd	sl, [sp]
   15d88:	strd	r0, [sp, #16]
   15d8c:	mov	r8, r0
   15d90:	str	r7, [sp, #16]
   15d94:	mov	r9, r1
   15d98:	ldrd	r6, [sp, #8]
   15d9c:	b	15de0 <close_stdout@@Base+0x3888>
   15da0:	mov	r2, r6
   15da4:	mvn	r0, #0
   15da8:	mvn	r1, #-2147483648	; 0x80000000
   15dac:	mov	r3, r7
   15db0:	bl	18e7c <close_stdout@@Base+0x6924>
   15db4:	cmp	r0, sl
   15db8:	sbcs	r2, r1, fp
   15dbc:	blt	162d8 <close_stdout@@Base+0x3d80>
   15dc0:	mul	r2, sl, r7
   15dc4:	mov	r3, #0
   15dc8:	mla	r2, r6, fp, r2
   15dcc:	umull	sl, fp, sl, r6
   15dd0:	add	fp, r2, fp
   15dd4:	subs	r4, r4, #1
   15dd8:	orr	r5, r5, r3
   15ddc:	beq	16294 <close_stdout@@Base+0x3d3c>
   15de0:	cmp	sl, r8
   15de4:	sbcs	r1, fp, r9
   15de8:	bge	15da0 <close_stdout@@Base+0x3848>
   15dec:	mov	sl, #0
   15df0:	mov	fp, #-2147483648	; 0x80000000
   15df4:	mov	r3, #1
   15df8:	b	15dd4 <close_stdout@@Base+0x387c>
   15dfc:	ldrd	r0, [sp]
   15e00:	cmp	r0, #0
   15e04:	sbcs	r1, r1, #-1073741824	; 0xc0000000
   15e08:	blt	162b4 <close_stdout@@Base+0x3d5c>
   15e0c:	ldrd	r2, [sp]
   15e10:	cmp	r2, #0
   15e14:	sbcs	r3, r3, #1073741824	; 0x40000000
   15e18:	bge	16328 <close_stdout@@Base+0x3dd0>
   15e1c:	ldrd	r0, [sp]
   15e20:	mov	r5, #0
   15e24:	adds	r0, r0, r0
   15e28:	adc	r1, r1, r1
   15e2c:	strd	r0, [sp]
   15e30:	b	15c30 <close_stdout@@Base+0x36d8>
   15e34:	mov	r0, r3
   15e38:	asr	r1, r3, #31
   15e3c:	strd	r0, [sp, #8]
   15e40:	mov	r0, #0
   15e44:	mov	r1, #-2147483648	; 0x80000000
   15e48:	ldrd	r2, [sp, #8]
   15e4c:	bl	18e7c <close_stdout@@Base+0x6924>
   15e50:	str	r6, [sp, #28]
   15e54:	str	r7, [sp, #32]
   15e58:	mov	r4, #3
   15e5c:	ldrd	r6, [sp]
   15e60:	mov	r5, #0
   15e64:	strd	r0, [sp, #16]
   15e68:	ldrd	r2, [sp, #16]
   15e6c:	cmp	r6, r2
   15e70:	sbcs	r3, r7, r3
   15e74:	blt	162f8 <close_stdout@@Base+0x3da0>
   15e78:	ldrd	r2, [sp, #8]
   15e7c:	mvn	r0, #0
   15e80:	mvn	r1, #-2147483648	; 0x80000000
   15e84:	bl	18e7c <close_stdout@@Base+0x6924>
   15e88:	cmp	r0, r6
   15e8c:	sbcs	r2, r1, r7
   15e90:	blt	1636c <close_stdout@@Base+0x3e14>
   15e94:	ldr	r3, [sp, #12]
   15e98:	ldr	r0, [sp, #8]
   15e9c:	mul	r2, r6, r3
   15ea0:	mov	r3, #0
   15ea4:	mla	r2, r0, r7, r2
   15ea8:	umull	r6, r7, r6, r0
   15eac:	add	r7, r2, r7
   15eb0:	subs	r4, r4, #1
   15eb4:	orr	r5, r5, r3
   15eb8:	bne	15e68 <close_stdout@@Base+0x3910>
   15ebc:	strd	r6, [sp]
   15ec0:	ldr	r6, [sp, #28]
   15ec4:	ldr	r7, [sp, #32]
   15ec8:	b	15c30 <close_stdout@@Base+0x36d8>
   15ecc:	mov	r0, r3
   15ed0:	asr	r1, r3, #31
   15ed4:	strd	r0, [sp, #8]
   15ed8:	mov	r0, #0
   15edc:	mov	r1, #-2147483648	; 0x80000000
   15ee0:	ldrd	r2, [sp, #8]
   15ee4:	bl	18e7c <close_stdout@@Base+0x6924>
   15ee8:	mov	r4, #6
   15eec:	str	sl, [sp, #28]
   15ef0:	mov	r5, #0
   15ef4:	str	fp, [sp, #32]
   15ef8:	str	r8, [sp, #36]	; 0x24
   15efc:	str	r6, [sp, #40]	; 0x28
   15f00:	str	r9, [sp, #44]	; 0x2c
   15f04:	ldrd	sl, [sp]
   15f08:	strd	r0, [sp, #16]
   15f0c:	mov	r8, r0
   15f10:	str	r7, [sp, #16]
   15f14:	mov	r9, r1
   15f18:	ldrd	r6, [sp, #8]
   15f1c:	b	15f60 <close_stdout@@Base+0x3a08>
   15f20:	mov	r2, r6
   15f24:	mvn	r0, #0
   15f28:	mvn	r1, #-2147483648	; 0x80000000
   15f2c:	mov	r3, r7
   15f30:	bl	18e7c <close_stdout@@Base+0x6924>
   15f34:	cmp	r0, sl
   15f38:	sbcs	r2, r1, fp
   15f3c:	blt	16308 <close_stdout@@Base+0x3db0>
   15f40:	mul	r2, sl, r7
   15f44:	mov	r3, #0
   15f48:	mla	r2, r6, fp, r2
   15f4c:	umull	sl, fp, sl, r6
   15f50:	add	fp, r2, fp
   15f54:	subs	r4, r4, #1
   15f58:	orr	r5, r5, r3
   15f5c:	beq	16294 <close_stdout@@Base+0x3d3c>
   15f60:	cmp	sl, r8
   15f64:	sbcs	r1, fp, r9
   15f68:	bge	15f20 <close_stdout@@Base+0x39c8>
   15f6c:	mov	sl, #0
   15f70:	mov	fp, #-2147483648	; 0x80000000
   15f74:	mov	r3, #1
   15f78:	b	15f54 <close_stdout@@Base+0x39fc>
   15f7c:	ldrd	r0, [sp]
   15f80:	mov	r3, #0
   15f84:	movt	r3, #65504	; 0xffe0
   15f88:	mov	r2, #0
   15f8c:	cmp	r0, r2
   15f90:	sbcs	r1, r1, r3
   15f94:	blt	162b4 <close_stdout@@Base+0x3d5c>
   15f98:	ldrd	r2, [sp]
   15f9c:	cmp	r2, #0
   15fa0:	sbcs	r3, r3, #2097152	; 0x200000
   15fa4:	bge	16328 <close_stdout@@Base+0x3dd0>
   15fa8:	ldr	r0, [sp, #4]
   15fac:	mov	r5, #0
   15fb0:	ldr	r1, [sp]
   15fb4:	lsl	r3, r0, #10
   15fb8:	lsl	r2, r1, #10
   15fbc:	orr	r3, r3, r1, lsr #22
   15fc0:	str	r2, [sp]
   15fc4:	str	r3, [sp, #4]
   15fc8:	b	15c30 <close_stdout@@Base+0x36d8>
   15fcc:	mov	r0, r3
   15fd0:	asr	r1, r3, #31
   15fd4:	strd	r0, [sp, #16]
   15fd8:	mov	r0, #0
   15fdc:	ldrd	r2, [sp, #16]
   15fe0:	mov	r1, #-2147483648	; 0x80000000
   15fe4:	bl	18e7c <close_stdout@@Base+0x6924>
   15fe8:	str	r8, [sp, #28]
   15fec:	str	r6, [sp, #32]
   15ff0:	mov	r4, #4
   15ff4:	str	r9, [sp, #36]	; 0x24
   15ff8:	mov	r5, #0
   15ffc:	ldrd	r8, [sp, #16]
   16000:	str	r7, [sp, #16]
   16004:	ldrd	r6, [sp]
   16008:	strd	r0, [sp, #8]
   1600c:	ldrd	r2, [sp, #8]
   16010:	cmp	r6, r2
   16014:	sbcs	r3, r7, r3
   16018:	blt	162c8 <close_stdout@@Base+0x3d70>
   1601c:	mov	r2, r8
   16020:	mvn	r0, #0
   16024:	mvn	r1, #-2147483648	; 0x80000000
   16028:	mov	r3, r9
   1602c:	bl	18e7c <close_stdout@@Base+0x6924>
   16030:	cmp	r0, r6
   16034:	sbcs	r2, r1, r7
   16038:	blt	1633c <close_stdout@@Base+0x3de4>
   1603c:	mul	r2, r6, r9
   16040:	mov	r3, #0
   16044:	mla	r2, r8, r7, r2
   16048:	umull	r6, r7, r6, r8
   1604c:	add	r7, r2, r7
   16050:	subs	r4, r4, #1
   16054:	orr	r5, r5, r3
   16058:	bne	1600c <close_stdout@@Base+0x3ab4>
   1605c:	strd	r6, [sp]
   16060:	ldr	r8, [sp, #28]
   16064:	ldr	r6, [sp, #32]
   16068:	ldr	r9, [sp, #36]	; 0x24
   1606c:	ldr	r7, [sp, #16]
   16070:	b	15c30 <close_stdout@@Base+0x36d8>
   16074:	mov	r0, r3
   16078:	asr	r1, r3, #31
   1607c:	strd	r0, [sp, #8]
   16080:	mov	r0, #0
   16084:	ldrd	r2, [sp, #8]
   16088:	mov	r1, #-2147483648	; 0x80000000
   1608c:	bl	18e7c <close_stdout@@Base+0x6924>
   16090:	mov	r4, #5
   16094:	str	sl, [sp, #28]
   16098:	mov	r5, #0
   1609c:	str	fp, [sp, #32]
   160a0:	str	r8, [sp, #36]	; 0x24
   160a4:	str	r9, [sp, #40]	; 0x28
   160a8:	ldrd	r8, [sp, #8]
   160ac:	str	r7, [sp, #8]
   160b0:	strd	r0, [sp, #16]
   160b4:	mov	sl, r0
   160b8:	str	r6, [sp, #16]
   160bc:	mov	fp, r1
   160c0:	ldrd	r6, [sp]
   160c4:	b	16108 <close_stdout@@Base+0x3bb0>
   160c8:	mov	r2, r8
   160cc:	mvn	r0, #0
   160d0:	mvn	r1, #-2147483648	; 0x80000000
   160d4:	mov	r3, r9
   160d8:	bl	18e7c <close_stdout@@Base+0x6924>
   160dc:	cmp	r0, r6
   160e0:	sbcs	r2, r1, r7
   160e4:	blt	16318 <close_stdout@@Base+0x3dc0>
   160e8:	mul	r2, r6, r9
   160ec:	mov	r3, #0
   160f0:	mla	r2, r8, r7, r2
   160f4:	umull	r6, r7, r6, r8
   160f8:	add	r7, r2, r7
   160fc:	subs	r4, r4, #1
   16100:	orr	r5, r5, r3
   16104:	beq	1634c <close_stdout@@Base+0x3df4>
   16108:	cmp	r6, sl
   1610c:	sbcs	r1, r7, fp
   16110:	bge	160c8 <close_stdout@@Base+0x3b70>
   16114:	mov	r6, #0
   16118:	mov	r7, #-2147483648	; 0x80000000
   1611c:	mov	r3, #1
   16120:	b	160fc <close_stdout@@Base+0x3ba4>
   16124:	asr	r5, r3, #31
   16128:	mov	r2, r3
   1612c:	mov	r4, r3
   16130:	mov	r0, #0
   16134:	mov	r3, r5
   16138:	mov	r1, #-2147483648	; 0x80000000
   1613c:	bl	18e7c <close_stdout@@Base+0x6924>
   16140:	ldrd	r2, [sp]
   16144:	cmp	r2, r0
   16148:	sbcs	r3, r3, r1
   1614c:	strd	r0, [sp, #8]
   16150:	blt	1637c <close_stdout@@Base+0x3e24>
   16154:	mov	r2, r4
   16158:	mov	r3, r5
   1615c:	mvn	r0, #0
   16160:	mvn	r1, #-2147483648	; 0x80000000
   16164:	bl	18e7c <close_stdout@@Base+0x6924>
   16168:	ldrd	r2, [sp]
   1616c:	cmp	r0, r2
   16170:	sbcs	r3, r1, r3
   16174:	strd	r0, [sp, #16]
   16178:	blt	16394 <close_stdout@@Base+0x3e3c>
   1617c:	ldr	r0, [sp]
   16180:	mov	ip, #0
   16184:	ldr	r2, [sp, #4]
   16188:	mul	r1, r0, r5
   1618c:	mla	r1, r4, r2, r1
   16190:	umull	r2, r3, r0, r4
   16194:	add	r1, r1, r3
   16198:	strd	r2, [sp]
   1619c:	str	r1, [sp, #4]
   161a0:	ldrd	r0, [sp]
   161a4:	ldrd	r2, [sp, #8]
   161a8:	cmp	r0, r2
   161ac:	sbcs	r3, r1, r3
   161b0:	blt	163e0 <close_stdout@@Base+0x3e88>
   161b4:	ldrd	r2, [sp, #16]
   161b8:	ldrd	r0, [sp]
   161bc:	cmp	r2, r0
   161c0:	sbcs	r1, r3, r1
   161c4:	blt	163a8 <close_stdout@@Base+0x3e50>
   161c8:	ldr	r2, [sp]
   161cc:	ldr	r3, [sp, #4]
   161d0:	mul	r0, r2, r5
   161d4:	mov	r5, #0
   161d8:	mla	r0, r4, r3, r0
   161dc:	umull	r2, r3, r2, r4
   161e0:	add	r0, r0, r3
   161e4:	strd	r2, [sp]
   161e8:	str	r0, [sp, #4]
   161ec:	orr	r5, r5, ip
   161f0:	b	15c30 <close_stdout@@Base+0x36d8>
   161f4:	asr	r5, r3, #31
   161f8:	mov	r2, r3
   161fc:	mov	r4, r3
   16200:	mov	r0, #0
   16204:	mov	r3, r5
   16208:	mov	r1, #-2147483648	; 0x80000000
   1620c:	bl	18e7c <close_stdout@@Base+0x6924>
   16210:	ldrd	r2, [sp]
   16214:	cmp	r2, r0
   16218:	sbcs	r3, r3, r1
   1621c:	blt	162b4 <close_stdout@@Base+0x3d5c>
   16220:	mov	r2, r4
   16224:	mov	r3, r5
   16228:	mvn	r0, #0
   1622c:	mvn	r1, #-2147483648	; 0x80000000
   16230:	bl	18e7c <close_stdout@@Base+0x6924>
   16234:	ldrd	r2, [sp]
   16238:	cmp	r0, r2
   1623c:	sbcs	r3, r1, r3
   16240:	blt	16328 <close_stdout@@Base+0x3dd0>
   16244:	ldr	r0, [sp]
   16248:	ldr	r1, [sp, #4]
   1624c:	mul	r3, r0, r5
   16250:	mov	r5, #0
   16254:	mla	r3, r4, r1, r3
   16258:	umull	r0, r1, r0, r4
   1625c:	add	r3, r3, r1
   16260:	strd	r0, [sp]
   16264:	str	r3, [sp, #4]
   16268:	b	15c30 <close_stdout@@Base+0x36d8>
   1626c:	ldrd	r0, [sp]
   16270:	strd	r0, [r9]
   16274:	orr	r0, sl, #2
   16278:	b	15a60 <close_stdout@@Base+0x3508>
   1627c:	ldrb	fp, [r8, #2]
   16280:	mov	r3, #1024	; 0x400
   16284:	cmp	fp, #66	; 0x42
   16288:	moveq	fp, #3
   1628c:	movne	fp, #1
   16290:	b	15ad4 <close_stdout@@Base+0x357c>
   16294:	strd	sl, [sp]
   16298:	ldr	r8, [sp, #36]	; 0x24
   1629c:	ldr	sl, [sp, #28]
   162a0:	ldr	fp, [sp, #32]
   162a4:	ldr	r6, [sp, #40]	; 0x28
   162a8:	ldr	r9, [sp, #44]	; 0x2c
   162ac:	ldr	r7, [sp, #16]
   162b0:	b	15c30 <close_stdout@@Base+0x36d8>
   162b4:	mov	r2, #0
   162b8:	mov	r3, #-2147483648	; 0x80000000
   162bc:	mov	r5, #1
   162c0:	strd	r2, [sp]
   162c4:	b	15c30 <close_stdout@@Base+0x36d8>
   162c8:	mov	r6, #0
   162cc:	mov	r7, #-2147483648	; 0x80000000
   162d0:	mov	r3, #1
   162d4:	b	16050 <close_stdout@@Base+0x3af8>
   162d8:	mvn	sl, #0
   162dc:	mvn	fp, #-2147483648	; 0x80000000
   162e0:	mov	r3, #1
   162e4:	b	15dd4 <close_stdout@@Base+0x387c>
   162e8:	mvn	sl, #0
   162ec:	mvn	fp, #-2147483648	; 0x80000000
   162f0:	mov	r3, #1
   162f4:	b	15d24 <close_stdout@@Base+0x37cc>
   162f8:	mov	r6, #0
   162fc:	mov	r7, #-2147483648	; 0x80000000
   16300:	mov	r3, #1
   16304:	b	15eb0 <close_stdout@@Base+0x3958>
   16308:	mvn	sl, #0
   1630c:	mvn	fp, #-2147483648	; 0x80000000
   16310:	mov	r3, #1
   16314:	b	15f54 <close_stdout@@Base+0x39fc>
   16318:	mvn	r6, #0
   1631c:	mvn	r7, #-2147483648	; 0x80000000
   16320:	mov	r3, #1
   16324:	b	160fc <close_stdout@@Base+0x3ba4>
   16328:	mvn	r0, #0
   1632c:	mvn	r1, #-2147483648	; 0x80000000
   16330:	mov	r5, #1
   16334:	strd	r0, [sp]
   16338:	b	15c30 <close_stdout@@Base+0x36d8>
   1633c:	mvn	r6, #0
   16340:	mvn	r7, #-2147483648	; 0x80000000
   16344:	mov	r3, #1
   16348:	b	16050 <close_stdout@@Base+0x3af8>
   1634c:	strd	r6, [sp]
   16350:	ldr	sl, [sp, #28]
   16354:	ldr	fp, [sp, #32]
   16358:	ldr	r8, [sp, #36]	; 0x24
   1635c:	ldr	r6, [sp, #16]
   16360:	ldr	r9, [sp, #40]	; 0x28
   16364:	ldr	r7, [sp, #8]
   16368:	b	15c30 <close_stdout@@Base+0x36d8>
   1636c:	mvn	r6, #0
   16370:	mvn	r7, #-2147483648	; 0x80000000
   16374:	mov	r3, #1
   16378:	b	15eb0 <close_stdout@@Base+0x3958>
   1637c:	mov	ip, #1
   16380:	mov	r0, #0
   16384:	mov	r1, #-2147483648	; 0x80000000
   16388:	mov	r5, ip
   1638c:	strd	r0, [sp]
   16390:	b	161ec <close_stdout@@Base+0x3c94>
   16394:	mvn	r0, #0
   16398:	mvn	r1, #-2147483648	; 0x80000000
   1639c:	mov	ip, #1
   163a0:	strd	r0, [sp]
   163a4:	b	161b4 <close_stdout@@Base+0x3c5c>
   163a8:	mvn	r0, #0
   163ac:	mvn	r1, #-2147483648	; 0x80000000
   163b0:	mov	r5, #1
   163b4:	strd	r0, [sp]
   163b8:	b	161ec <close_stdout@@Base+0x3c94>
   163bc:	bl	11274 <__stack_chk_fail@plt>
   163c0:	ldr	r0, [pc, #52]	; 163fc <close_stdout@@Base+0x3ea4>
   163c4:	mov	r2, #96	; 0x60
   163c8:	ldr	r1, [pc, #48]	; 16400 <close_stdout@@Base+0x3ea8>
   163cc:	ldr	r3, [pc, #48]	; 16404 <close_stdout@@Base+0x3eac>
   163d0:	add	r0, pc, r0
   163d4:	add	r1, pc, r1
   163d8:	add	r3, pc, r3
   163dc:	bl	114d8 <__assert_fail@plt>
   163e0:	mov	r2, #0
   163e4:	mov	r3, #-2147483648	; 0x80000000
   163e8:	mov	r5, #1
   163ec:	strd	r2, [sp]
   163f0:	b	161ec <close_stdout@@Base+0x3c94>
   163f4:	andeq	r5, r1, r0, lsr r6
   163f8:	andeq	r0, r0, r8, lsr #2
   163fc:	andeq	r4, r0, r0, asr #3
   16400:	andeq	r4, r0, r4, ror #3
   16404:	andeq	r4, r0, ip, lsr #3
   16408:	cmp	r0, r1
   1640c:	push	{r4}		; (str r4, [sp, #-4]!)
   16410:	beq	1646c <close_stdout@@Base+0x3f14>
   16414:	sub	r4, r0, #1
   16418:	sub	r1, r1, #1
   1641c:	b	16428 <close_stdout@@Base+0x3ed0>
   16420:	cmp	r2, ip
   16424:	bne	16460 <close_stdout@@Base+0x3f08>
   16428:	ldrb	r3, [r4, #1]!
   1642c:	sub	r0, r3, #65	; 0x41
   16430:	add	r2, r3, #32
   16434:	cmp	r0, #25
   16438:	movhi	r2, r3
   1643c:	ldrb	r3, [r1, #1]!
   16440:	uxtb	r2, r2
   16444:	sub	r0, r3, #65	; 0x41
   16448:	add	ip, r3, #32
   1644c:	cmp	r0, #25
   16450:	movhi	ip, r3
   16454:	cmp	r2, #0
   16458:	uxtb	ip, ip
   1645c:	bne	16420 <close_stdout@@Base+0x3ec8>
   16460:	rsb	r0, ip, r2
   16464:	pop	{r4}		; (ldr r4, [sp], #4)
   16468:	bx	lr
   1646c:	mov	r0, #0
   16470:	pop	{r4}		; (ldr r4, [sp], #4)
   16474:	bx	lr
   16478:	push	{r4, r5, r6, lr}
   1647c:	mov	r4, r0
   16480:	bl	112ec <__fpending@plt>
   16484:	mov	r6, r0
   16488:	mov	r0, r4
   1648c:	ldr	r4, [r4]
   16490:	bl	1878c <close_stdout@@Base+0x6234>
   16494:	and	r4, r4, #32
   16498:	adds	r5, r0, #0
   1649c:	movne	r5, #1
   164a0:	cmp	r4, #0
   164a4:	bne	164c4 <close_stdout@@Base+0x3f6c>
   164a8:	cmp	r5, #0
   164ac:	beq	164bc <close_stdout@@Base+0x3f64>
   164b0:	cmp	r6, #0
   164b4:	beq	164e0 <close_stdout@@Base+0x3f88>
   164b8:	mvn	r4, #0
   164bc:	mov	r0, r4
   164c0:	pop	{r4, r5, r6, pc}
   164c4:	cmp	r5, #0
   164c8:	bne	164b8 <close_stdout@@Base+0x3f60>
   164cc:	bl	113b8 <__errno_location@plt>
   164d0:	mvn	r4, #0
   164d4:	str	r5, [r0]
   164d8:	mov	r0, r4
   164dc:	pop	{r4, r5, r6, pc}
   164e0:	bl	113b8 <__errno_location@plt>
   164e4:	ldr	r4, [r0]
   164e8:	subs	r4, r4, #9
   164ec:	mvnne	r4, #0
   164f0:	mov	r0, r4
   164f4:	pop	{r4, r5, r6, pc}
   164f8:	ldr	r3, [pc, #984]	; 168d8 <close_stdout@@Base+0x4380>
   164fc:	mov	r0, #14
   16500:	ldr	r2, [pc, #980]	; 168dc <close_stdout@@Base+0x4384>
   16504:	add	r3, pc, r3
   16508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1650c:	sub	sp, sp, #132	; 0x84
   16510:	ldr	r6, [r3, r2]
   16514:	ldr	r3, [r6]
   16518:	str	r3, [sp, #124]	; 0x7c
   1651c:	bl	11484 <nl_langinfo@plt>
   16520:	subs	r5, r0, #0
   16524:	beq	165d8 <close_stdout@@Base+0x4080>
   16528:	ldr	r3, [pc, #944]	; 168e0 <close_stdout@@Base+0x4388>
   1652c:	ldr	r4, [pc, r3]
   16530:	cmp	r4, #0
   16534:	beq	165e4 <close_stdout@@Base+0x408c>
   16538:	ldrb	r7, [r4]
   1653c:	cmp	r7, #0
   16540:	bne	16574 <close_stdout@@Base+0x401c>
   16544:	b	165ac <close_stdout@@Base+0x4054>
   16548:	mov	r0, r4
   1654c:	bl	11394 <strlen@plt>
   16550:	add	r0, r0, #1
   16554:	add	r7, r4, r0
   16558:	mov	r0, r7
   1655c:	bl	11394 <strlen@plt>
   16560:	add	r0, r0, #1
   16564:	add	r4, r7, r0
   16568:	ldrb	r7, [r7, r0]
   1656c:	cmp	r7, #0
   16570:	beq	165ac <close_stdout@@Base+0x4054>
   16574:	mov	r0, r5
   16578:	mov	r1, r4
   1657c:	bl	111f0 <strcmp@plt>
   16580:	cmp	r0, #0
   16584:	beq	1659c <close_stdout@@Base+0x4044>
   16588:	cmp	r7, #42	; 0x2a
   1658c:	bne	16548 <close_stdout@@Base+0x3ff0>
   16590:	ldrb	r3, [r4, #1]
   16594:	cmp	r3, #0
   16598:	bne	16548 <close_stdout@@Base+0x3ff0>
   1659c:	mov	r0, r4
   165a0:	bl	11394 <strlen@plt>
   165a4:	add	r0, r0, #1
   165a8:	add	r5, r4, r0
   165ac:	ldrb	r3, [r5]
   165b0:	cmp	r3, #0
   165b4:	ldreq	r5, [pc, #808]	; 168e4 <close_stdout@@Base+0x438c>
   165b8:	addeq	r5, pc, r5
   165bc:	ldr	r2, [sp, #124]	; 0x7c
   165c0:	mov	r0, r5
   165c4:	ldr	r3, [r6]
   165c8:	cmp	r2, r3
   165cc:	bne	168ac <close_stdout@@Base+0x4354>
   165d0:	add	sp, sp, #132	; 0x84
   165d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165d8:	ldr	r5, [pc, #776]	; 168e8 <close_stdout@@Base+0x4390>
   165dc:	add	r5, pc, r5
   165e0:	b	16528 <close_stdout@@Base+0x3fd0>
   165e4:	ldr	r0, [pc, #768]	; 168ec <close_stdout@@Base+0x4394>
   165e8:	add	r0, pc, r0
   165ec:	bl	1131c <getenv@plt>
   165f0:	subs	r8, r0, #0
   165f4:	beq	16884 <close_stdout@@Base+0x432c>
   165f8:	ldrb	r3, [r8]
   165fc:	cmp	r3, #0
   16600:	beq	16818 <close_stdout@@Base+0x42c0>
   16604:	bl	11394 <strlen@plt>
   16608:	subs	sl, r0, #0
   1660c:	subne	r3, sl, #1
   16610:	bne	16828 <close_stdout@@Base+0x42d0>
   16614:	mov	r9, #0
   16618:	mov	fp, r9
   1661c:	add	r9, sl, r9
   16620:	add	r0, r9, #14
   16624:	bl	11328 <malloc@plt>
   16628:	subs	r7, r0, #0
   1662c:	beq	16878 <close_stdout@@Base+0x4320>
   16630:	mov	r1, r8
   16634:	mov	r2, sl
   16638:	bl	11238 <memcpy@plt>
   1663c:	cmp	fp, #0
   16640:	add	ip, r7, r9
   16644:	movne	r3, #47	; 0x2f
   16648:	strbne	r3, [r7, sl]
   1664c:	ldr	r3, [pc, #668]	; 168f0 <close_stdout@@Base+0x4398>
   16650:	add	r3, pc, r3
   16654:	ldm	r3!, {r0, r1, r2}
   16658:	ldrh	r3, [r3]
   1665c:	str	r0, [r7, r9]
   16660:	mov	r0, r7
   16664:	str	r1, [ip, #4]
   16668:	mov	r1, #32768	; 0x8000
   1666c:	strh	r3, [ip, #12]
   16670:	str	r2, [ip, #8]
   16674:	bl	11310 <open64@plt>
   16678:	subs	r8, r0, #0
   1667c:	blt	16840 <close_stdout@@Base+0x42e8>
   16680:	ldr	r1, [pc, #620]	; 168f4 <close_stdout@@Base+0x439c>
   16684:	add	r1, pc, r1
   16688:	bl	111a8 <fdopen@plt>
   1668c:	subs	fp, r0, #0
   16690:	beq	16898 <close_stdout@@Base+0x4340>
   16694:	ldr	r0, [pc, #604]	; 168f8 <close_stdout@@Base+0x43a0>
   16698:	add	sl, sp, #20
   1669c:	add	r9, sp, #72	; 0x48
   166a0:	mov	r8, #0
   166a4:	add	r0, pc, r0
   166a8:	str	r0, [sp, #12]
   166ac:	ldr	r3, [fp, #4]
   166b0:	ldr	r2, [fp, #8]
   166b4:	cmp	r3, r2
   166b8:	bcs	167a4 <close_stdout@@Base+0x424c>
   166bc:	add	r2, r3, #1
   166c0:	str	r2, [fp, #4]
   166c4:	ldrb	r0, [r3]
   166c8:	cmp	r0, #32
   166cc:	beq	166ac <close_stdout@@Base+0x4154>
   166d0:	sub	r3, r0, #9
   166d4:	cmp	r3, #1
   166d8:	bls	166ac <close_stdout@@Base+0x4154>
   166dc:	cmp	r0, #35	; 0x23
   166e0:	beq	167b8 <close_stdout@@Base+0x4260>
   166e4:	mov	r1, fp
   166e8:	bl	113ac <ungetc@plt>
   166ec:	mov	r0, fp
   166f0:	ldr	r1, [sp, #12]
   166f4:	mov	r2, sl
   166f8:	mov	r3, r9
   166fc:	bl	11400 <fscanf@plt>
   16700:	cmp	r0, #1
   16704:	ble	167e8 <close_stdout@@Base+0x4290>
   16708:	mov	r0, sl
   1670c:	bl	11394 <strlen@plt>
   16710:	str	r0, [sp, #8]
   16714:	mov	r0, r9
   16718:	bl	11394 <strlen@plt>
   1671c:	cmp	r8, #0
   16720:	mov	r2, r0
   16724:	bne	1684c <close_stdout@@Base+0x42f4>
   16728:	ldr	r3, [sp, #8]
   1672c:	str	r2, [sp]
   16730:	add	r8, r0, r3
   16734:	add	r0, r8, #3
   16738:	add	r8, r8, #2
   1673c:	bl	11328 <malloc@plt>
   16740:	ldr	r2, [sp]
   16744:	mov	r3, r0
   16748:	cmp	r3, #0
   1674c:	beq	168b0 <close_stdout@@Base+0x4358>
   16750:	ldr	r0, [sp, #8]
   16754:	movw	r1, #65534	; 0xfffe
   16758:	movt	r1, #65535	; 0xffff
   1675c:	rsb	r2, r2, r8
   16760:	rsb	r1, r0, r1
   16764:	stm	sp, {r2, r3}
   16768:	add	r0, r1, r2
   1676c:	mov	r1, sl
   16770:	add	r0, r3, r0
   16774:	mov	r4, r3
   16778:	bl	112e0 <strcpy@plt>
   1677c:	ldr	r2, [sp]
   16780:	ldr	r3, [sp, #4]
   16784:	mov	r1, r9
   16788:	sub	r0, r2, #1
   1678c:	add	r0, r3, r0
   16790:	bl	112e0 <strcpy@plt>
   16794:	ldr	r3, [fp, #4]
   16798:	ldr	r2, [fp, #8]
   1679c:	cmp	r3, r2
   167a0:	bcc	166bc <close_stdout@@Base+0x4164>
   167a4:	mov	r0, fp
   167a8:	bl	11460 <__uflow@plt>
   167ac:	cmn	r0, #1
   167b0:	beq	167e8 <close_stdout@@Base+0x4290>
   167b4:	b	166c8 <close_stdout@@Base+0x4170>
   167b8:	ldr	r3, [fp, #4]
   167bc:	ldr	r2, [fp, #8]
   167c0:	cmp	r3, r2
   167c4:	bcs	168cc <close_stdout@@Base+0x4374>
   167c8:	add	r2, r3, #1
   167cc:	str	r2, [fp, #4]
   167d0:	ldrb	r0, [r3]
   167d4:	cmp	r0, #10
   167d8:	cmnne	r0, #1
   167dc:	bne	167b8 <close_stdout@@Base+0x4260>
   167e0:	cmn	r0, #1
   167e4:	bne	166ac <close_stdout@@Base+0x4154>
   167e8:	mov	r0, fp
   167ec:	bl	1878c <close_stdout@@Base+0x6234>
   167f0:	cmp	r8, #0
   167f4:	beq	16840 <close_stdout@@Base+0x42e8>
   167f8:	mov	r3, #0
   167fc:	strb	r3, [r4, r8]
   16800:	mov	r0, r7
   16804:	bl	11220 <free@plt>
   16808:	ldr	r3, [pc, #236]	; 168fc <close_stdout@@Base+0x43a4>
   1680c:	add	r3, pc, r3
   16810:	str	r4, [r3]
   16814:	b	16538 <close_stdout@@Base+0x3fe0>
   16818:	ldr	r8, [pc, #224]	; 16900 <close_stdout@@Base+0x43a8>
   1681c:	mov	r3, #7
   16820:	mov	sl, #8
   16824:	add	r8, pc, r8
   16828:	ldrb	r3, [r8, r3]
   1682c:	cmp	r3, #47	; 0x2f
   16830:	movne	r9, #1
   16834:	movne	fp, r9
   16838:	bne	1661c <close_stdout@@Base+0x40c4>
   1683c:	b	16614 <close_stdout@@Base+0x40bc>
   16840:	ldr	r4, [pc, #188]	; 16904 <close_stdout@@Base+0x43ac>
   16844:	add	r4, pc, r4
   16848:	b	16800 <close_stdout@@Base+0x42a8>
   1684c:	ldr	r0, [sp, #8]
   16850:	str	r2, [sp]
   16854:	add	r3, r0, r2
   16858:	mov	r0, r4
   1685c:	add	r8, r3, r8
   16860:	add	r1, r8, #3
   16864:	add	r8, r8, #2
   16868:	bl	11280 <realloc@plt>
   1686c:	ldr	r2, [sp]
   16870:	mov	r3, r0
   16874:	b	16748 <close_stdout@@Base+0x41f0>
   16878:	ldr	r4, [pc, #136]	; 16908 <close_stdout@@Base+0x43b0>
   1687c:	add	r4, pc, r4
   16880:	b	16808 <close_stdout@@Base+0x42b0>
   16884:	ldr	r8, [pc, #128]	; 1690c <close_stdout@@Base+0x43b4>
   16888:	mov	r3, #7
   1688c:	mov	sl, #8
   16890:	add	r8, pc, r8
   16894:	b	16828 <close_stdout@@Base+0x42d0>
   16898:	ldr	r4, [pc, #112]	; 16910 <close_stdout@@Base+0x43b8>
   1689c:	mov	r0, r8
   168a0:	add	r4, pc, r4
   168a4:	bl	114cc <close@plt>
   168a8:	b	16800 <close_stdout@@Base+0x42a8>
   168ac:	bl	11274 <__stack_chk_fail@plt>
   168b0:	mov	r0, r4
   168b4:	ldr	r4, [pc, #88]	; 16914 <close_stdout@@Base+0x43bc>
   168b8:	bl	11220 <free@plt>
   168bc:	mov	r0, fp
   168c0:	add	r4, pc, r4
   168c4:	bl	1878c <close_stdout@@Base+0x6234>
   168c8:	b	16800 <close_stdout@@Base+0x42a8>
   168cc:	mov	r0, fp
   168d0:	bl	11460 <__uflow@plt>
   168d4:	b	167d4 <close_stdout@@Base+0x427c>
   168d8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   168dc:	andeq	r0, r0, r8, lsr #2
   168e0:	andeq	r4, r1, r0, asr #27
   168e4:	andeq	r4, r0, ip, lsl r0
   168e8:	andeq	r3, r0, r8, lsr r8
   168ec:	strdeq	r3, [r0], -r4
   168f0:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   168f4:	andeq	r3, r0, r8, ror pc
   168f8:	andeq	r3, r0, ip, asr pc
   168fc:	andeq	r4, r1, r0, ror #21
   16900:	andeq	r3, r0, r4, lsr #27
   16904:	ldrdeq	r3, [r0], -r0
   16908:	muleq	r0, r8, r5
   1690c:	andeq	r3, r0, r8, lsr sp
   16910:	andeq	r3, r0, r4, ror r5
   16914:	andeq	r3, r0, r4, asr r5
   16918:	push	{r4, lr}
   1691c:	mov	r4, r0
   16920:	bl	11208 <wcwidth@plt>
   16924:	cmp	r0, #0
   16928:	popge	{r4, pc}
   1692c:	mov	r0, r4
   16930:	bl	11298 <iswcntrl@plt>
   16934:	rsbs	r0, r0, #1
   16938:	movcc	r0, #0
   1693c:	pop	{r4, pc}
   16940:	push	{r3, r4, r5, lr}
   16944:	mov	r3, r1
   16948:	mov	r4, r1
   1694c:	ldr	r1, [r3], #16
   16950:	mov	r5, r0
   16954:	cmp	r1, r3
   16958:	strne	r1, [r0]
   1695c:	beq	16980 <close_stdout@@Base+0x4428>
   16960:	ldr	r3, [r4, #4]
   16964:	str	r3, [r5, #4]
   16968:	ldrb	r3, [r4, #8]
   1696c:	cmp	r3, #0
   16970:	strb	r3, [r5, #8]
   16974:	ldrne	r3, [r4, #12]
   16978:	strne	r3, [r5, #12]
   1697c:	pop	{r3, r4, r5, pc}
   16980:	add	r3, r0, #16
   16984:	ldr	r2, [r4, #4]
   16988:	mov	r0, r3
   1698c:	bl	11238 <memcpy@plt>
   16990:	str	r0, [r5]
   16994:	b	16960 <close_stdout@@Base+0x4408>
   16998:	ldr	r3, [pc, #32]	; 169c0 <close_stdout@@Base+0x4468>
   1699c:	lsr	r2, r0, #5
   169a0:	ldr	r1, [pc, #28]	; 169c4 <close_stdout@@Base+0x446c>
   169a4:	and	r0, r0, #31
   169a8:	add	r3, pc, r3
   169ac:	ldr	r3, [r3, r1]
   169b0:	ldr	r3, [r3, r2, lsl #2]
   169b4:	lsr	r0, r3, r0
   169b8:	and	r0, r0, #1
   169bc:	bx	lr
   169c0:	andeq	r4, r1, r0, asr r6
   169c4:	andeq	r0, r0, r4, lsr #2
   169c8:	ldr	ip, [pc, #380]	; 16b4c <close_stdout@@Base+0x45f4>
   169cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   169d0:	mov	r7, r2
   169d4:	add	fp, sp, #28
   169d8:	ldr	r2, [pc, #368]	; 16b50 <close_stdout@@Base+0x45f8>
   169dc:	sub	sp, sp, #8
   169e0:	add	ip, pc, ip
   169e4:	mov	r8, r3
   169e8:	mov	r3, ip
   169ec:	cmn	r7, #-1073741823	; 0xc0000001
   169f0:	ldr	r5, [ip, r2]
   169f4:	mov	r6, r0
   169f8:	mov	r4, r1
   169fc:	ldr	r3, [r5]
   16a00:	str	r3, [fp, #-32]	; 0xffffffe0
   16a04:	bls	16a24 <close_stdout@@Base+0x44cc>
   16a08:	mov	r0, #0
   16a0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16a10:	ldr	r3, [r5]
   16a14:	cmp	r2, r3
   16a18:	bne	16b48 <close_stdout@@Base+0x45f0>
   16a1c:	sub	sp, fp, #28
   16a20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16a24:	lsl	r0, r7, #2
   16a28:	movw	r3, #4023	; 0xfb7
   16a2c:	cmp	r0, r3
   16a30:	bls	16afc <close_stdout@@Base+0x45a4>
   16a34:	bl	18934 <close_stdout@@Base+0x63dc>
   16a38:	cmp	r0, #0
   16a3c:	beq	16a08 <close_stdout@@Base+0x44b0>
   16a40:	cmp	r7, #2
   16a44:	mov	r3, #1
   16a48:	str	r3, [r0, #4]
   16a4c:	movhi	r9, r4
   16a50:	movhi	r2, r0
   16a54:	movhi	ip, #0
   16a58:	movhi	r3, #2
   16a5c:	bls	16aa8 <close_stdout@@Base+0x4550>
   16a60:	ldrb	r1, [r9, #1]!
   16a64:	ldrb	lr, [r4, ip]
   16a68:	cmp	lr, r1
   16a6c:	bne	16a88 <close_stdout@@Base+0x4530>
   16a70:	b	16b10 <close_stdout@@Base+0x45b8>
   16a74:	ldr	lr, [r0, ip, lsl #2]
   16a78:	rsb	ip, lr, ip
   16a7c:	ldrb	lr, [r4, ip]
   16a80:	cmp	lr, r1
   16a84:	beq	16b10 <close_stdout@@Base+0x45b8>
   16a88:	cmp	ip, #0
   16a8c:	bne	16a74 <close_stdout@@Base+0x451c>
   16a90:	mov	ip, #0
   16a94:	str	r3, [r2, #8]
   16a98:	add	r3, r3, #1
   16a9c:	add	r2, r2, #4
   16aa0:	cmp	r3, r7
   16aa4:	bne	16a60 <close_stdout@@Base+0x4508>
   16aa8:	mov	r2, #0
   16aac:	str	r2, [r8]
   16ab0:	ldrb	r3, [r6]
   16ab4:	mov	ip, r6
   16ab8:	cmp	r3, #0
   16abc:	beq	16af0 <close_stdout@@Base+0x4598>
   16ac0:	ldrb	r1, [r4, r2]
   16ac4:	cmp	r1, r3
   16ac8:	beq	16b20 <close_stdout@@Base+0x45c8>
   16acc:	cmp	r2, #0
   16ad0:	addeq	r6, r6, #1
   16ad4:	ldrne	r1, [r0, r2, lsl #2]
   16ad8:	ldrbeq	r3, [ip, #1]
   16adc:	addeq	ip, ip, #1
   16ae0:	addne	r6, r6, r1
   16ae4:	rsbne	r2, r1, r2
   16ae8:	cmp	r3, #0
   16aec:	bne	16ac0 <close_stdout@@Base+0x4568>
   16af0:	bl	1899c <close_stdout@@Base+0x6444>
   16af4:	mov	r0, #1
   16af8:	b	16a0c <close_stdout@@Base+0x44b4>
   16afc:	add	r3, r0, #22
   16b00:	bic	r3, r3, #7
   16b04:	sub	sp, sp, r3
   16b08:	add	r0, sp, #8
   16b0c:	b	16a38 <close_stdout@@Base+0x44e0>
   16b10:	add	ip, ip, #1
   16b14:	rsb	r1, ip, r3
   16b18:	str	r1, [r2, #8]
   16b1c:	b	16a98 <close_stdout@@Base+0x4540>
   16b20:	add	r2, r2, #1
   16b24:	add	r1, ip, #1
   16b28:	cmp	r7, r2
   16b2c:	ldrbne	r3, [ip, #1]
   16b30:	movne	ip, r1
   16b34:	bne	16ab8 <close_stdout@@Base+0x4560>
   16b38:	str	r6, [r8]
   16b3c:	bl	1899c <close_stdout@@Base+0x6444>
   16b40:	mov	r0, #1
   16b44:	b	16a0c <close_stdout@@Base+0x44b4>
   16b48:	bl	11274 <__stack_chk_fail@plt>
   16b4c:	andeq	r4, r1, r8, lsl r6
   16b50:	andeq	r0, r0, r8, lsr #2
   16b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b58:	add	fp, sp, #32
   16b5c:	ldr	r8, [pc, #2268]	; 17440 <close_stdout@@Base+0x4ee8>
   16b60:	sub	sp, sp, #220	; 0xdc
   16b64:	ldr	r3, [pc, #2264]	; 17444 <close_stdout@@Base+0x4eec>
   16b68:	add	r8, pc, r8
   16b6c:	str	r0, [fp, #-232]	; 0xffffff18
   16b70:	str	r2, [fp, #-248]	; 0xffffff08
   16b74:	mov	r0, r1
   16b78:	ldr	r3, [r8, r3]
   16b7c:	mov	r4, r1
   16b80:	str	r3, [fp, #-244]	; 0xffffff0c
   16b84:	ldr	r3, [r3]
   16b88:	str	r3, [fp, #-40]	; 0xffffffd8
   16b8c:	bl	18a24 <close_stdout@@Base+0x64cc>
   16b90:	movw	r3, #29789	; 0x745d
   16b94:	movt	r3, #1489	; 0x5d1
   16b98:	cmp	r0, r3
   16b9c:	str	r0, [fp, #-224]	; 0xffffff20
   16ba0:	bls	16bc4 <close_stdout@@Base+0x466c>
   16ba4:	mov	r0, #0
   16ba8:	ldr	r1, [fp, #-244]	; 0xffffff0c
   16bac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16bb0:	ldr	r3, [r1]
   16bb4:	cmp	r2, r3
   16bb8:	bne	1741c <close_stdout@@Base+0x4ec4>
   16bbc:	sub	sp, fp, #32
   16bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16bc4:	ldr	r1, [fp, #-224]	; 0xffffff20
   16bc8:	mov	r0, #44	; 0x2c
   16bcc:	movw	r3, #4023	; 0xfb7
   16bd0:	mul	r0, r0, r1
   16bd4:	cmp	r0, r3
   16bd8:	bls	16fa4 <close_stdout@@Base+0x4a4c>
   16bdc:	bl	18934 <close_stdout@@Base+0x63dc>
   16be0:	str	r0, [fp, #-236]	; 0xffffff14
   16be4:	ldr	r3, [fp, #-236]	; 0xffffff14
   16be8:	cmp	r3, #0
   16bec:	beq	16ba4 <close_stdout@@Base+0x464c>
   16bf0:	mov	r2, #0
   16bf4:	ldr	r0, [fp, #-224]	; 0xffffff20
   16bf8:	str	r2, [fp, #-200]	; 0xffffff38
   16bfc:	mov	r5, r2
   16c00:	strb	r2, [fp, #-208]	; 0xffffff30
   16c04:	add	sl, r3, #16
   16c08:	str	r2, [fp, #-204]	; 0xffffff34
   16c0c:	add	r9, r0, r0, lsl #2
   16c10:	strb	r2, [fp, #-196]	; 0xffffff3c
   16c14:	sub	ip, fp, #204	; 0xcc
   16c18:	ldrb	r2, [fp, #-208]	; 0xffffff30
   16c1c:	mov	r7, r4
   16c20:	add	r9, r3, r9, lsl #3
   16c24:	str	r4, [fp, #-192]	; 0xffffff40
   16c28:	cmp	r2, #0
   16c2c:	sub	r1, fp, #180	; 0xb4
   16c30:	str	r9, [fp, #-220]	; 0xffffff24
   16c34:	mov	r4, #1
   16c38:	mov	r9, sl
   16c3c:	str	r1, [fp, #-216]	; 0xffffff28
   16c40:	mov	sl, r7
   16c44:	sub	r6, fp, #176	; 0xb0
   16c48:	mov	r7, ip
   16c4c:	bne	17020 <close_stdout@@Base+0x4ac8>
   16c50:	ldr	r1, [pc, #2032]	; 17448 <close_stdout@@Base+0x4ef0>
   16c54:	ldrb	r2, [sl]
   16c58:	ldr	r0, [r8, r1]
   16c5c:	and	r1, r2, #31
   16c60:	lsr	r2, r2, #5
   16c64:	ldr	r2, [r0, r2, lsl #2]
   16c68:	lsr	r2, r2, r1
   16c6c:	tst	r2, #1
   16c70:	beq	17084 <close_stdout@@Base+0x4b2c>
   16c74:	str	r4, [fp, #-188]	; 0xffffff44
   16c78:	ldrb	r3, [sl]
   16c7c:	strb	r4, [fp, #-184]	; 0xffffff48
   16c80:	mov	sl, r3
   16c84:	str	r3, [fp, #-180]	; 0xffffff4c
   16c88:	cmp	sl, #0
   16c8c:	strb	r4, [fp, #-196]	; 0xffffff3c
   16c90:	mov	r2, #1
   16c94:	bne	16fd0 <close_stdout@@Base+0x4a78>
   16c98:	ldr	r0, [fp, #-224]	; 0xffffff20
   16c9c:	ldr	r9, [fp, #-220]	; 0xffffff24
   16ca0:	cmp	r0, #2
   16ca4:	str	r2, [r9, #4]
   16ca8:	bls	16d74 <close_stdout@@Base+0x481c>
   16cac:	ldr	r7, [fp, #-236]	; 0xffffff14
   16cb0:	mov	r6, r9
   16cb4:	str	r8, [fp, #-216]	; 0xffffff28
   16cb8:	mov	r4, sl
   16cbc:	mov	r8, r9
   16cc0:	mov	r5, #2
   16cc4:	mov	r9, r7
   16cc8:	ldrb	sl, [r7, #48]	; 0x30
   16ccc:	b	16d08 <close_stdout@@Base+0x47b0>
   16cd0:	ldrb	r2, [r3, #8]
   16cd4:	cmp	r2, #0
   16cd8:	beq	16d18 <close_stdout@@Base+0x47c0>
   16cdc:	ldr	r0, [r7, #52]	; 0x34
   16ce0:	ldr	r3, [r3, #12]
   16ce4:	subs	r1, r0, r3
   16ce8:	rsbs	r0, r1, #0
   16cec:	adcs	r0, r0, r1
   16cf0:	cmp	r0, #0
   16cf4:	bne	16d48 <close_stdout@@Base+0x47f0>
   16cf8:	cmp	r4, #0
   16cfc:	beq	1725c <close_stdout@@Base+0x4d04>
   16d00:	ldr	r3, [r8, r4, lsl #2]
   16d04:	rsb	r4, r3, r4
   16d08:	add	r3, r4, r4, lsl #2
   16d0c:	cmp	sl, #0
   16d10:	add	r3, r9, r3, lsl #3
   16d14:	bne	16cd0 <close_stdout@@Base+0x4778>
   16d18:	ldr	r2, [r7, #44]	; 0x2c
   16d1c:	ldr	r1, [r3, #4]
   16d20:	cmp	r2, r1
   16d24:	movne	r0, #0
   16d28:	bne	16cf0 <close_stdout@@Base+0x4798>
   16d2c:	ldr	r1, [r3]
   16d30:	ldr	r0, [r7, #40]	; 0x28
   16d34:	bl	1125c <memcmp@plt>
   16d38:	rsbs	r0, r0, #1
   16d3c:	movcc	r0, #0
   16d40:	cmp	r0, #0
   16d44:	beq	16cf8 <close_stdout@@Base+0x47a0>
   16d48:	add	r4, r4, #1
   16d4c:	rsb	r2, r4, r5
   16d50:	str	r2, [r6, #8]
   16d54:	ldr	r2, [fp, #-224]	; 0xffffff20
   16d58:	add	r5, r5, #1
   16d5c:	add	r7, r7, #40	; 0x28
   16d60:	add	r6, r6, #4
   16d64:	cmp	r5, r2
   16d68:	bne	16cc8 <close_stdout@@Base+0x4770>
   16d6c:	mov	r9, r8
   16d70:	ldr	r8, [fp, #-216]	; 0xffffff28
   16d74:	ldr	r1, [fp, #-232]	; 0xffffff18
   16d78:	mov	r3, #0
   16d7c:	ldr	r2, [fp, #-248]	; 0xffffff08
   16d80:	sub	r7, fp, #148	; 0x94
   16d84:	mov	r4, r3
   16d88:	mov	r6, r3
   16d8c:	mov	r5, #1
   16d90:	sub	r0, fp, #92	; 0x5c
   16d94:	str	r1, [fp, #-136]	; 0xffffff78
   16d98:	str	r0, [fp, #-228]	; 0xffffff1c
   16d9c:	sub	r0, fp, #68	; 0x44
   16da0:	str	r1, [fp, #-80]	; 0xffffffb0
   16da4:	sub	r1, fp, #124	; 0x7c
   16da8:	str	r3, [fp, #-148]	; 0xffffff6c
   16dac:	strb	r3, [fp, #-140]	; 0xffffff74
   16db0:	str	r3, [fp, #-220]	; 0xffffff24
   16db4:	str	r3, [r2]
   16db8:	strb	r3, [fp, #-152]	; 0xffffff68
   16dbc:	str	r0, [fp, #-232]	; 0xffffff18
   16dc0:	str	r1, [fp, #-216]	; 0xffffff28
   16dc4:	strb	r3, [fp, #-96]	; 0xffffffa0
   16dc8:	str	r3, [fp, #-92]	; 0xffffffa4
   16dcc:	strb	r3, [fp, #-84]	; 0xffffffac
   16dd0:	str	r3, [r7, #4]
   16dd4:	str	r3, [fp, #-88]	; 0xffffffa8
   16dd8:	str	r9, [fp, #-240]	; 0xffffff10
   16ddc:	cmp	r4, #0
   16de0:	beq	16e50 <close_stdout@@Base+0x48f8>
   16de4:	ldrb	r4, [fp, #-72]	; 0xffffffb8
   16de8:	cmp	r4, #0
   16dec:	bne	16ea4 <close_stdout@@Base+0x494c>
   16df0:	ldr	r2, [fp, #-220]	; 0xffffff24
   16df4:	ldr	r3, [fp, #-236]	; 0xffffff14
   16df8:	add	r1, r2, r2, lsl #2
   16dfc:	add	r1, r3, r1, lsl #3
   16e00:	ldr	r2, [r1, #4]
   16e04:	ldr	r3, [fp, #-76]	; 0xffffffb4
   16e08:	cmp	r2, r3
   16e0c:	movne	r0, #0
   16e10:	beq	17244 <close_stdout@@Base+0x4cec>
   16e14:	mov	r3, r0
   16e18:	cmp	r3, #0
   16e1c:	ldr	r2, [fp, #-220]	; 0xffffff24
   16e20:	beq	16ee8 <close_stdout@@Base+0x4990>
   16e24:	ldr	r0, [fp, #-224]	; 0xffffff20
   16e28:	add	r2, r2, #1
   16e2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16e30:	str	r2, [fp, #-220]	; 0xffffff24
   16e34:	cmp	r0, r2
   16e38:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16e3c:	strb	r6, [fp, #-84]	; 0xffffffac
   16e40:	add	r3, r3, r2
   16e44:	str	r3, [fp, #-80]	; 0xffffffb0
   16e48:	beq	173cc <close_stdout@@Base+0x4e74>
   16e4c:	mov	r4, #0
   16e50:	ldrb	r3, [fp, #-96]	; 0xffffffa0
   16e54:	cmp	r3, #0
   16e58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16e5c:	bne	17164 <close_stdout@@Base+0x4c0c>
   16e60:	ldr	r1, [pc, #1504]	; 17448 <close_stdout@@Base+0x4ef0>
   16e64:	ldrb	r2, [r3]
   16e68:	ldr	r0, [r8, r1]
   16e6c:	and	r1, r2, #31
   16e70:	lsr	r2, r2, #5
   16e74:	ldr	r2, [r0, r2, lsl #2]
   16e78:	lsr	r2, r2, r1
   16e7c:	tst	r2, #1
   16e80:	beq	17148 <close_stdout@@Base+0x4bf0>
   16e84:	str	r5, [fp, #-76]	; 0xffffffb4
   16e88:	mov	r4, #1
   16e8c:	ldrb	r3, [r3]
   16e90:	strb	r5, [fp, #-72]	; 0xffffffb8
   16e94:	str	r3, [fp, #-68]	; 0xffffffbc
   16e98:	cmp	r4, #0
   16e9c:	strb	r5, [fp, #-84]	; 0xffffffac
   16ea0:	beq	16df0 <close_stdout@@Base+0x4898>
   16ea4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16ea8:	cmp	r2, #0
   16eac:	beq	173d8 <close_stdout@@Base+0x4e80>
   16eb0:	ldr	r3, [fp, #-220]	; 0xffffff24
   16eb4:	ldr	r0, [fp, #-236]	; 0xffffff14
   16eb8:	add	r1, r3, r3, lsl #2
   16ebc:	add	r1, r0, r1, lsl #3
   16ec0:	ldrb	r3, [r1, #8]
   16ec4:	cmp	r3, #0
   16ec8:	beq	16e00 <close_stdout@@Base+0x48a8>
   16ecc:	ldr	r3, [r1, #12]
   16ed0:	subs	r2, r2, r3
   16ed4:	rsbs	r3, r2, #0
   16ed8:	adcs	r3, r3, r2
   16edc:	ldr	r2, [fp, #-220]	; 0xffffff24
   16ee0:	cmp	r3, #0
   16ee4:	bne	16e24 <close_stdout@@Base+0x48cc>
   16ee8:	cmp	r2, #0
   16eec:	beq	171f4 <close_stdout@@Base+0x4c9c>
   16ef0:	ldr	r3, [fp, #-240]	; 0xffffff10
   16ef4:	ldr	r4, [r3, r2, lsl #2]
   16ef8:	cmp	r4, #0
   16efc:	rsb	r2, r4, r2
   16f00:	str	r2, [fp, #-220]	; 0xffffff24
   16f04:	beq	1723c <close_stdout@@Base+0x4ce4>
   16f08:	ldrb	sl, [fp, #-140]	; 0xffffff74
   16f0c:	cmp	sl, #0
   16f10:	beq	16f40 <close_stdout@@Base+0x49e8>
   16f14:	ldrb	sl, [fp, #-128]	; 0xffffff80
   16f18:	cmp	sl, #0
   16f1c:	bne	16f94 <close_stdout@@Base+0x4a3c>
   16f20:	ldr	r2, [fp, #-136]	; 0xffffff78
   16f24:	subs	r4, r4, #1
   16f28:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16f2c:	strb	r6, [fp, #-140]	; 0xffffff74
   16f30:	movne	sl, #0
   16f34:	add	r3, r2, r3
   16f38:	str	r3, [fp, #-136]	; 0xffffff78
   16f3c:	beq	1723c <close_stdout@@Base+0x4ce4>
   16f40:	ldrb	r3, [fp, #-152]	; 0xffffff68
   16f44:	ldr	r9, [fp, #-136]	; 0xffffff78
   16f48:	cmp	r3, #0
   16f4c:	bne	170b0 <close_stdout@@Base+0x4b58>
   16f50:	ldr	r1, [pc, #1264]	; 17448 <close_stdout@@Base+0x4ef0>
   16f54:	ldrb	r2, [r9]
   16f58:	ldr	r0, [r8, r1]
   16f5c:	and	r1, r2, #31
   16f60:	lsr	r2, r2, #5
   16f64:	ldr	r2, [r0, r2, lsl #2]
   16f68:	lsr	r2, r2, r1
   16f6c:	tst	r2, #1
   16f70:	beq	1709c <close_stdout@@Base+0x4b44>
   16f74:	str	r5, [fp, #-132]	; 0xffffff7c
   16f78:	mov	sl, #1
   16f7c:	ldrb	r3, [r9]
   16f80:	strb	r5, [fp, #-128]	; 0xffffff80
   16f84:	str	r3, [fp, #-124]	; 0xffffff84
   16f88:	cmp	sl, #0
   16f8c:	strb	r5, [fp, #-140]	; 0xffffff74
   16f90:	beq	16f20 <close_stdout@@Base+0x49c8>
   16f94:	ldr	r3, [fp, #-124]	; 0xffffff84
   16f98:	cmp	r3, #0
   16f9c:	bne	16f20 <close_stdout@@Base+0x49c8>
   16fa0:	bl	114c0 <abort@plt>
   16fa4:	add	r3, r0, #22
   16fa8:	bic	r3, r3, #7
   16fac:	sub	sp, sp, r3
   16fb0:	add	r2, sp, #8
   16fb4:	str	r2, [fp, #-236]	; 0xffffff14
   16fb8:	b	16be4 <close_stdout@@Base+0x468c>
   16fbc:	ldr	r0, [fp, #-192]	; 0xffffff40
   16fc0:	bl	11394 <strlen@plt>
   16fc4:	strb	r5, [fp, #-184]	; 0xffffff48
   16fc8:	str	r0, [fp, #-188]	; 0xffffff44
   16fcc:	strb	r4, [fp, #-196]	; 0xffffff3c
   16fd0:	ldr	r3, [fp, #-192]	; 0xffffff40
   16fd4:	cmp	r3, r6
   16fd8:	strne	r3, [r9, #-16]
   16fdc:	beq	17308 <close_stdout@@Base+0x4db0>
   16fe0:	ldr	r3, [fp, #-188]	; 0xffffff44
   16fe4:	add	r9, r9, #40	; 0x28
   16fe8:	str	r3, [r9, #-52]	; 0xffffffcc
   16fec:	ldrb	r3, [fp, #-184]	; 0xffffff48
   16ff0:	cmp	r3, #0
   16ff4:	strb	r3, [r9, #-48]	; 0xffffffd0
   16ff8:	ldrne	r3, [fp, #-180]	; 0xffffff4c
   16ffc:	strne	r3, [r9, #-44]	; 0xffffffd4
   17000:	ldr	sl, [fp, #-192]	; 0xffffff40
   17004:	ldr	r2, [fp, #-188]	; 0xffffff44
   17008:	strb	r5, [fp, #-196]	; 0xffffff3c
   1700c:	add	sl, sl, r2
   17010:	ldrb	r2, [fp, #-208]	; 0xffffff30
   17014:	str	sl, [fp, #-192]	; 0xffffff40
   17018:	cmp	r2, #0
   1701c:	beq	16c50 <close_stdout@@Base+0x46f8>
   17020:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   17024:	mov	r1, r0
   17028:	mov	r0, sl
   1702c:	bl	14b38 <close_stdout@@Base+0x25e0>
   17030:	mov	r1, sl
   17034:	mov	r3, r7
   17038:	mov	r2, r0
   1703c:	sub	r0, fp, #180	; 0xb4
   17040:	bl	112f8 <mbrtowc@plt>
   17044:	cmn	r0, #1
   17048:	str	r0, [fp, #-188]	; 0xffffff44
   1704c:	strbeq	r5, [fp, #-184]	; 0xffffff48
   17050:	streq	r4, [fp, #-188]	; 0xffffff44
   17054:	beq	16fcc <close_stdout@@Base+0x4a74>
   17058:	cmn	r0, #2
   1705c:	beq	16fbc <close_stdout@@Base+0x4a64>
   17060:	cmp	r0, #0
   17064:	beq	17264 <close_stdout@@Base+0x4d0c>
   17068:	ldr	sl, [fp, #-180]	; 0xffffff4c
   1706c:	mov	r0, r7
   17070:	strb	r4, [fp, #-184]	; 0xffffff48
   17074:	bl	11244 <mbsinit@plt>
   17078:	cmp	r0, #0
   1707c:	strbne	r5, [fp, #-208]	; 0xffffff30
   17080:	b	16c88 <close_stdout@@Base+0x4730>
   17084:	mov	r0, r7
   17088:	bl	11244 <mbsinit@plt>
   1708c:	cmp	r0, #0
   17090:	beq	173fc <close_stdout@@Base+0x4ea4>
   17094:	strb	r4, [fp, #-208]	; 0xffffff30
   17098:	b	17020 <close_stdout@@Base+0x4ac8>
   1709c:	mov	r0, r7
   170a0:	bl	11244 <mbsinit@plt>
   170a4:	cmp	r0, #0
   170a8:	beq	173fc <close_stdout@@Base+0x4ea4>
   170ac:	strb	r5, [fp, #-152]	; 0xffffff68
   170b0:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   170b4:	mov	r1, r0
   170b8:	mov	r0, r9
   170bc:	bl	14b38 <close_stdout@@Base+0x25e0>
   170c0:	mov	r1, r9
   170c4:	mov	r3, r7
   170c8:	mov	r2, r0
   170cc:	sub	r0, fp, #124	; 0x7c
   170d0:	bl	112f8 <mbrtowc@plt>
   170d4:	cmn	r0, #1
   170d8:	str	r0, [fp, #-132]	; 0xffffff7c
   170dc:	strbeq	r6, [fp, #-128]	; 0xffffff80
   170e0:	streq	r5, [fp, #-132]	; 0xffffff7c
   170e4:	beq	16f88 <close_stdout@@Base+0x4a30>
   170e8:	cmn	r0, #2
   170ec:	beq	17134 <close_stdout@@Base+0x4bdc>
   170f0:	cmp	r0, #0
   170f4:	bne	17118 <close_stdout@@Base+0x4bc0>
   170f8:	ldr	r3, [fp, #-136]	; 0xffffff78
   170fc:	str	r5, [fp, #-132]	; 0xffffff7c
   17100:	ldrb	r3, [r3]
   17104:	cmp	r3, #0
   17108:	bne	17420 <close_stdout@@Base+0x4ec8>
   1710c:	ldr	r3, [fp, #-124]	; 0xffffff84
   17110:	cmp	r3, #0
   17114:	bne	17284 <close_stdout@@Base+0x4d2c>
   17118:	mov	r0, r7
   1711c:	strb	r5, [fp, #-128]	; 0xffffff80
   17120:	bl	11244 <mbsinit@plt>
   17124:	mov	sl, #1
   17128:	cmp	r0, #0
   1712c:	strbne	r6, [fp, #-152]	; 0xffffff68
   17130:	b	16f88 <close_stdout@@Base+0x4a30>
   17134:	ldr	r0, [fp, #-136]	; 0xffffff78
   17138:	bl	11394 <strlen@plt>
   1713c:	strb	r6, [fp, #-128]	; 0xffffff80
   17140:	str	r0, [fp, #-132]	; 0xffffff7c
   17144:	b	16f88 <close_stdout@@Base+0x4a30>
   17148:	sub	r0, fp, #92	; 0x5c
   1714c:	str	r3, [fp, #-252]	; 0xffffff04
   17150:	bl	11244 <mbsinit@plt>
   17154:	ldr	r3, [fp, #-252]	; 0xffffff04
   17158:	cmp	r0, #0
   1715c:	beq	173fc <close_stdout@@Base+0x4ea4>
   17160:	strb	r5, [fp, #-96]	; 0xffffffa0
   17164:	str	r3, [fp, #-252]	; 0xffffff04
   17168:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   1716c:	ldr	r3, [fp, #-252]	; 0xffffff04
   17170:	mov	r1, r0
   17174:	mov	r0, r3
   17178:	bl	14b38 <close_stdout@@Base+0x25e0>
   1717c:	ldr	r3, [fp, #-252]	; 0xffffff04
   17180:	mov	r1, r3
   17184:	sub	r3, fp, #92	; 0x5c
   17188:	mov	r2, r0
   1718c:	sub	r0, fp, #68	; 0x44
   17190:	bl	112f8 <mbrtowc@plt>
   17194:	cmn	r0, #1
   17198:	str	r0, [fp, #-76]	; 0xffffffb4
   1719c:	strbeq	r6, [fp, #-72]	; 0xffffffb8
   171a0:	streq	r5, [fp, #-76]	; 0xffffffb4
   171a4:	beq	16e98 <close_stdout@@Base+0x4940>
   171a8:	cmn	r0, #2
   171ac:	beq	173b8 <close_stdout@@Base+0x4e60>
   171b0:	cmp	r0, #0
   171b4:	bne	171d8 <close_stdout@@Base+0x4c80>
   171b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   171bc:	str	r5, [fp, #-76]	; 0xffffffb4
   171c0:	ldrb	r3, [r3]
   171c4:	cmp	r3, #0
   171c8:	bne	17420 <close_stdout@@Base+0x4ec8>
   171cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   171d0:	cmp	r3, #0
   171d4:	bne	17284 <close_stdout@@Base+0x4d2c>
   171d8:	sub	r0, fp, #92	; 0x5c
   171dc:	strb	r5, [fp, #-72]	; 0xffffffb8
   171e0:	bl	11244 <mbsinit@plt>
   171e4:	mov	r4, #1
   171e8:	cmp	r0, #0
   171ec:	strbne	r6, [fp, #-96]	; 0xffffffa0
   171f0:	b	16e98 <close_stdout@@Base+0x4940>
   171f4:	ldrb	r4, [fp, #-140]	; 0xffffff74
   171f8:	cmp	r4, #0
   171fc:	beq	172a4 <close_stdout@@Base+0x4d4c>
   17200:	ldrb	r4, [fp, #-128]	; 0xffffff80
   17204:	cmp	r4, #0
   17208:	bne	172f8 <close_stdout@@Base+0x4da0>
   1720c:	ldr	r1, [fp, #-136]	; 0xffffff78
   17210:	mov	r4, #0
   17214:	ldr	r2, [fp, #-132]	; 0xffffff7c
   17218:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1721c:	add	r2, r1, r2
   17220:	str	r2, [fp, #-136]	; 0xffffff78
   17224:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17228:	strb	r6, [fp, #-140]	; 0xffffff74
   1722c:	add	r3, r3, r2
   17230:	strb	r6, [fp, #-84]	; 0xffffffac
   17234:	str	r3, [fp, #-80]	; 0xffffffb0
   17238:	b	16e50 <close_stdout@@Base+0x48f8>
   1723c:	ldrb	r4, [fp, #-84]	; 0xffffffac
   17240:	b	16ddc <close_stdout@@Base+0x4884>
   17244:	ldr	r0, [r1]
   17248:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1724c:	bl	1125c <memcmp@plt>
   17250:	rsbs	r0, r0, #1
   17254:	movcc	r0, #0
   17258:	b	16e14 <close_stdout@@Base+0x48bc>
   1725c:	str	r5, [r6, #8]
   17260:	b	16d54 <close_stdout@@Base+0x47fc>
   17264:	ldr	r3, [fp, #-192]	; 0xffffff40
   17268:	str	r4, [fp, #-188]	; 0xffffff44
   1726c:	ldrb	r3, [r3]
   17270:	cmp	r3, #0
   17274:	bne	17420 <close_stdout@@Base+0x4ec8>
   17278:	ldr	sl, [fp, #-180]	; 0xffffff4c
   1727c:	cmp	sl, #0
   17280:	beq	1706c <close_stdout@@Base+0x4b14>
   17284:	ldr	r0, [pc, #448]	; 1744c <close_stdout@@Base+0x4ef4>
   17288:	mov	r2, #179	; 0xb3
   1728c:	ldr	r1, [pc, #444]	; 17450 <close_stdout@@Base+0x4ef8>
   17290:	ldr	r3, [pc, #444]	; 17454 <close_stdout@@Base+0x4efc>
   17294:	add	r0, pc, r0
   17298:	add	r1, pc, r1
   1729c:	add	r3, pc, r3
   172a0:	bl	114d8 <__assert_fail@plt>
   172a4:	ldrb	r3, [fp, #-152]	; 0xffffff68
   172a8:	ldr	sl, [fp, #-136]	; 0xffffff78
   172ac:	cmp	r3, #0
   172b0:	bne	17334 <close_stdout@@Base+0x4ddc>
   172b4:	ldr	r1, [pc, #396]	; 17448 <close_stdout@@Base+0x4ef0>
   172b8:	ldrb	r2, [sl]
   172bc:	ldr	r0, [r8, r1]
   172c0:	and	r1, r2, #31
   172c4:	lsr	r2, r2, #5
   172c8:	ldr	r2, [r0, r2, lsl #2]
   172cc:	lsr	r2, r2, r1
   172d0:	tst	r2, #1
   172d4:	beq	17320 <close_stdout@@Base+0x4dc8>
   172d8:	str	r5, [fp, #-132]	; 0xffffff7c
   172dc:	mov	r4, #1
   172e0:	ldrb	r3, [sl]
   172e4:	strb	r5, [fp, #-128]	; 0xffffff80
   172e8:	str	r3, [fp, #-124]	; 0xffffff84
   172ec:	cmp	r4, #0
   172f0:	strb	r5, [fp, #-140]	; 0xffffff74
   172f4:	beq	1720c <close_stdout@@Base+0x4cb4>
   172f8:	ldr	r3, [fp, #-124]	; 0xffffff84
   172fc:	cmp	r3, #0
   17300:	bne	1720c <close_stdout@@Base+0x4cb4>
   17304:	b	16fa0 <close_stdout@@Base+0x4a48>
   17308:	mov	r0, r9
   1730c:	mov	r1, r6
   17310:	ldr	r2, [fp, #-188]	; 0xffffff44
   17314:	bl	11238 <memcpy@plt>
   17318:	str	r9, [r9, #-16]
   1731c:	b	16fe0 <close_stdout@@Base+0x4a88>
   17320:	mov	r0, r7
   17324:	bl	11244 <mbsinit@plt>
   17328:	cmp	r0, #0
   1732c:	beq	173fc <close_stdout@@Base+0x4ea4>
   17330:	strb	r5, [fp, #-152]	; 0xffffff68
   17334:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   17338:	mov	r1, r0
   1733c:	mov	r0, sl
   17340:	bl	14b38 <close_stdout@@Base+0x25e0>
   17344:	mov	r1, sl
   17348:	mov	r3, r7
   1734c:	mov	r2, r0
   17350:	sub	r0, fp, #124	; 0x7c
   17354:	bl	112f8 <mbrtowc@plt>
   17358:	cmn	r0, #1
   1735c:	str	r0, [fp, #-132]	; 0xffffff7c
   17360:	strbeq	r6, [fp, #-128]	; 0xffffff80
   17364:	streq	r5, [fp, #-132]	; 0xffffff7c
   17368:	beq	172ec <close_stdout@@Base+0x4d94>
   1736c:	cmn	r0, #2
   17370:	beq	173e8 <close_stdout@@Base+0x4e90>
   17374:	cmp	r0, #0
   17378:	bne	1739c <close_stdout@@Base+0x4e44>
   1737c:	ldr	r3, [fp, #-136]	; 0xffffff78
   17380:	str	r5, [fp, #-132]	; 0xffffff7c
   17384:	ldrb	r3, [r3]
   17388:	cmp	r3, #0
   1738c:	bne	17420 <close_stdout@@Base+0x4ec8>
   17390:	ldr	r3, [fp, #-124]	; 0xffffff84
   17394:	cmp	r3, #0
   17398:	bne	17284 <close_stdout@@Base+0x4d2c>
   1739c:	mov	r0, r7
   173a0:	strb	r5, [fp, #-128]	; 0xffffff80
   173a4:	bl	11244 <mbsinit@plt>
   173a8:	mov	r4, #1
   173ac:	cmp	r0, #0
   173b0:	strbne	r6, [fp, #-152]	; 0xffffff68
   173b4:	b	172ec <close_stdout@@Base+0x4d94>
   173b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   173bc:	bl	11394 <strlen@plt>
   173c0:	strb	r6, [fp, #-72]	; 0xffffffb8
   173c4:	str	r0, [fp, #-76]	; 0xffffffb4
   173c8:	b	16e98 <close_stdout@@Base+0x4940>
   173cc:	ldr	r3, [fp, #-136]	; 0xffffff78
   173d0:	ldr	r1, [fp, #-248]	; 0xffffff08
   173d4:	str	r3, [r1]
   173d8:	ldr	r0, [fp, #-236]	; 0xffffff14
   173dc:	bl	1899c <close_stdout@@Base+0x6444>
   173e0:	mov	r0, #1
   173e4:	b	16ba8 <close_stdout@@Base+0x4650>
   173e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   173ec:	bl	11394 <strlen@plt>
   173f0:	strb	r6, [fp, #-128]	; 0xffffff80
   173f4:	str	r0, [fp, #-132]	; 0xffffff7c
   173f8:	b	172ec <close_stdout@@Base+0x4d94>
   173fc:	ldr	r0, [pc, #84]	; 17458 <close_stdout@@Base+0x4f00>
   17400:	mov	r2, #150	; 0x96
   17404:	ldr	r1, [pc, #80]	; 1745c <close_stdout@@Base+0x4f04>
   17408:	ldr	r3, [pc, #80]	; 17460 <close_stdout@@Base+0x4f08>
   1740c:	add	r0, pc, r0
   17410:	add	r1, pc, r1
   17414:	add	r3, pc, r3
   17418:	bl	114d8 <__assert_fail@plt>
   1741c:	bl	11274 <__stack_chk_fail@plt>
   17420:	ldr	r0, [pc, #60]	; 17464 <close_stdout@@Base+0x4f0c>
   17424:	mov	r2, #178	; 0xb2
   17428:	ldr	r1, [pc, #56]	; 17468 <close_stdout@@Base+0x4f10>
   1742c:	ldr	r3, [pc, #56]	; 1746c <close_stdout@@Base+0x4f14>
   17430:	add	r0, pc, r0
   17434:	add	r1, pc, r1
   17438:	add	r3, pc, r3
   1743c:	bl	114d8 <__assert_fail@plt>
   17440:	muleq	r1, r0, r4
   17444:	andeq	r0, r0, r8, lsr #2
   17448:	andeq	r0, r0, r4, lsr #2
   1744c:	strdeq	r2, [r0], -r8
   17450:	andeq	r2, r0, ip, asr #29
   17454:	muleq	r0, r0, r3
   17458:	andeq	r2, r0, r0, asr #26
   1745c:	andeq	r2, r0, r4, asr sp
   17460:	andeq	r3, r0, r8, lsl r2
   17464:	andeq	r2, r0, r4, asr #26
   17468:	andeq	r2, r0, r0, lsr sp
   1746c:	strdeq	r3, [r0], -r4
   17470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17474:	sub	sp, sp, #348	; 0x15c
   17478:	ldr	r4, [pc, #3188]	; 180f4 <close_stdout@@Base+0x5b9c>
   1747c:	ldr	r3, [pc, #3188]	; 180f8 <close_stdout@@Base+0x5ba0>
   17480:	add	r4, pc, r4
   17484:	str	r0, [sp, #16]
   17488:	str	r1, [sp, #4]
   1748c:	ldr	r3, [r4, r3]
   17490:	str	r3, [sp, #20]
   17494:	ldr	r3, [r3]
   17498:	str	r3, [sp, #340]	; 0x154
   1749c:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   174a0:	cmp	r0, #1
   174a4:	bls	17688 <close_stdout@@Base+0x5130>
   174a8:	ldr	r0, [sp, #4]
   174ac:	add	r5, sp, #64	; 0x40
   174b0:	ldr	ip, [pc, #3140]	; 180fc <close_stdout@@Base+0x5ba4>
   174b4:	mov	r2, #0
   174b8:	str	r2, [r5, #4]
   174bc:	ldrb	r1, [r0]
   174c0:	str	r0, [sp, #76]	; 0x4c
   174c4:	strb	r2, [sp, #60]	; 0x3c
   174c8:	and	r3, r1, #31
   174cc:	str	r2, [sp, #64]	; 0x40
   174d0:	lsr	r0, r1, #5
   174d4:	strb	r2, [sp, #72]	; 0x48
   174d8:	ldr	r6, [r4, ip]
   174dc:	ldr	r2, [r6, r0, lsl #2]
   174e0:	lsr	r3, r2, r3
   174e4:	ands	r4, r3, #1
   174e8:	beq	175d8 <close_stdout@@Base+0x5080>
   174ec:	mov	r4, r1
   174f0:	cmp	r4, #0
   174f4:	mov	r3, #1
   174f8:	str	r1, [sp, #88]	; 0x58
   174fc:	str	r3, [sp, #80]	; 0x50
   17500:	strb	r3, [sp, #84]	; 0x54
   17504:	mov	r3, #1
   17508:	strb	r3, [sp, #72]	; 0x48
   1750c:	beq	17668 <close_stdout@@Base+0x5110>
   17510:	add	r2, sp, #120	; 0x78
   17514:	add	r0, sp, #176	; 0xb0
   17518:	str	r2, [sp, #8]
   1751c:	mov	r3, #0
   17520:	ldr	r2, [sp, #4]
   17524:	mov	r9, r3
   17528:	str	r0, [sp, #44]	; 0x2c
   1752c:	mov	r5, r3
   17530:	ldr	r0, [sp, #16]
   17534:	mov	r4, #1
   17538:	mov	r1, #1
   1753c:	str	r2, [sp, #132]	; 0x84
   17540:	str	r1, [sp, #32]
   17544:	add	r2, sp, #200	; 0xc8
   17548:	str	r0, [sp, #188]	; 0xbc
   1754c:	mov	r8, r0
   17550:	add	r1, sp, #144	; 0x90
   17554:	add	r0, sp, #56	; 0x38
   17558:	str	r3, [sp, #28]
   1755c:	strb	r3, [sp, #116]	; 0x74
   17560:	str	r3, [sp, #12]
   17564:	str	r3, [sp, #120]	; 0x78
   17568:	strb	r3, [sp, #128]	; 0x80
   1756c:	strb	r3, [sp, #172]	; 0xac
   17570:	str	r3, [sp, #176]	; 0xb0
   17574:	str	r2, [sp, #48]	; 0x30
   17578:	strb	r3, [sp, #184]	; 0xb8
   1757c:	str	r0, [sp, #52]	; 0x34
   17580:	str	r3, [sp, #124]	; 0x7c
   17584:	str	r1, [sp, #24]
   17588:	str	r3, [sp, #180]	; 0xb4
   1758c:	ldrb	r3, [sp, #172]	; 0xac
   17590:	cmp	r3, #0
   17594:	bne	177f0 <close_stdout@@Base+0x5298>
   17598:	ldrb	r3, [r8]
   1759c:	and	r2, r3, #31
   175a0:	lsr	r3, r3, #5
   175a4:	ldr	r3, [r6, r3, lsl #2]
   175a8:	lsr	r3, r3, r2
   175ac:	tst	r3, #1
   175b0:	beq	177dc <close_stdout@@Base+0x5284>
   175b4:	str	r4, [sp, #192]	; 0xc0
   175b8:	ldrb	r7, [r8]
   175bc:	strb	r4, [sp, #196]	; 0xc4
   175c0:	cmp	r7, #0
   175c4:	strb	r4, [sp, #184]	; 0xb8
   175c8:	str	r7, [sp, #200]	; 0xc8
   175cc:	bne	1785c <close_stdout@@Base+0x5304>
   175d0:	mov	r0, r7
   175d4:	b	1766c <close_stdout@@Base+0x5114>
   175d8:	mov	r0, r5
   175dc:	bl	11244 <mbsinit@plt>
   175e0:	cmp	r0, #0
   175e4:	beq	180b0 <close_stdout@@Base+0x5b58>
   175e8:	mov	r7, #1
   175ec:	strb	r7, [sp, #60]	; 0x3c
   175f0:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   175f4:	mov	r1, r0
   175f8:	ldr	r0, [sp, #4]
   175fc:	bl	14b38 <close_stdout@@Base+0x25e0>
   17600:	ldr	r1, [sp, #4]
   17604:	mov	r3, r5
   17608:	mov	r2, r0
   1760c:	add	r0, sp, #88	; 0x58
   17610:	bl	112f8 <mbrtowc@plt>
   17614:	cmn	r0, #1
   17618:	str	r0, [sp, #80]	; 0x50
   1761c:	strbeq	r4, [sp, #84]	; 0x54
   17620:	streq	r7, [sp, #80]	; 0x50
   17624:	beq	17874 <close_stdout@@Base+0x531c>
   17628:	cmn	r0, #2
   1762c:	beq	17864 <close_stdout@@Base+0x530c>
   17630:	cmp	r0, #0
   17634:	beq	17fec <close_stdout@@Base+0x5a94>
   17638:	ldr	r4, [sp, #88]	; 0x58
   1763c:	mov	r0, r5
   17640:	mov	r3, #1
   17644:	strb	r3, [sp, #84]	; 0x54
   17648:	bl	11244 <mbsinit@plt>
   1764c:	cmp	r0, #0
   17650:	movne	r3, #0
   17654:	strbne	r3, [sp, #60]	; 0x3c
   17658:	cmp	r4, #0
   1765c:	mov	r3, #1
   17660:	strb	r3, [sp, #72]	; 0x48
   17664:	bne	17510 <close_stdout@@Base+0x4fb8>
   17668:	ldr	r0, [sp, #16]
   1766c:	ldr	r1, [sp, #20]
   17670:	ldr	r2, [sp, #340]	; 0x154
   17674:	ldr	r3, [r1]
   17678:	cmp	r2, r3
   1767c:	bne	180d0 <close_stdout@@Base+0x5b78>
   17680:	add	sp, sp, #348	; 0x15c
   17684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17688:	ldr	r2, [sp, #4]
   1768c:	ldrb	r8, [r2]
   17690:	cmp	r8, #0
   17694:	beq	17668 <close_stdout@@Base+0x5110>
   17698:	ldr	r3, [sp, #16]
   1769c:	ldrb	sl, [r3]
   176a0:	cmp	sl, #0
   176a4:	beq	17b64 <close_stdout@@Base+0x560c>
   176a8:	cmp	sl, r8
   176ac:	mov	r4, #0
   176b0:	mov	r5, r4
   176b4:	mov	r9, r4
   176b8:	add	r0, sp, #56	; 0x38
   176bc:	add	r7, r3, #1
   176c0:	mov	r6, r3
   176c4:	mov	fp, r2
   176c8:	mov	r1, #1
   176cc:	str	r0, [sp, #8]
   176d0:	add	r4, r4, #1
   176d4:	beq	17778 <close_stdout@@Base+0x5220>
   176d8:	ldrb	sl, [r6, #1]
   176dc:	cmp	sl, #0
   176e0:	beq	17b64 <close_stdout@@Base+0x560c>
   176e4:	add	r5, r5, #1
   176e8:	cmp	r4, #9
   176ec:	movls	r3, #0
   176f0:	andhi	r3, r1, #1
   176f4:	cmp	r3, #0
   176f8:	beq	17764 <close_stdout@@Base+0x520c>
   176fc:	add	r3, r4, r4, lsl #2
   17700:	cmp	r5, r3
   17704:	bcc	17760 <close_stdout@@Base+0x5208>
   17708:	cmp	fp, #0
   1770c:	beq	1772c <close_stdout@@Base+0x51d4>
   17710:	rsb	r1, r9, r5
   17714:	mov	r0, fp
   17718:	bl	11448 <strnlen@plt>
   1771c:	mov	r9, r5
   17720:	ldrb	r3, [fp, r0]!
   17724:	cmp	r3, #0
   17728:	bne	17760 <close_stdout@@Base+0x5208>
   1772c:	ldr	r0, [sp, #4]
   17730:	bl	11394 <strlen@plt>
   17734:	ldr	r1, [sp, #4]
   17738:	add	r3, sp, #56	; 0x38
   1773c:	mov	r2, r0
   17740:	mov	r0, r7
   17744:	bl	169c8 <close_stdout@@Base+0x4470>
   17748:	cmp	r0, #0
   1774c:	bne	180a8 <close_stdout@@Base+0x5b50>
   17750:	mov	fp, r0
   17754:	ldrb	sl, [r6, #1]
   17758:	mov	r1, r0
   1775c:	b	17764 <close_stdout@@Base+0x520c>
   17760:	mov	r1, #1
   17764:	cmp	sl, r8
   17768:	add	r7, r7, #1
   1776c:	add	r6, r6, #1
   17770:	add	r4, r4, #1
   17774:	bne	176d8 <close_stdout@@Base+0x5180>
   17778:	ldr	r2, [sp, #4]
   1777c:	ldrb	r3, [r2, #1]
   17780:	cmp	r3, #0
   17784:	beq	177d4 <close_stdout@@Base+0x527c>
   17788:	ldrb	sl, [r6, #1]
   1778c:	cmp	sl, #0
   17790:	beq	17b64 <close_stdout@@Base+0x560c>
   17794:	cmp	r3, sl
   17798:	add	r3, r5, #2
   1779c:	bne	17c00 <close_stdout@@Base+0x56a8>
   177a0:	rsb	r0, r5, #0
   177a4:	add	r5, r2, r0
   177a8:	add	r0, r6, r0
   177ac:	b	177c8 <close_stdout@@Base+0x5270>
   177b0:	ldrb	ip, [r0, r3]
   177b4:	cmp	ip, #0
   177b8:	beq	17b64 <close_stdout@@Base+0x560c>
   177bc:	cmp	r2, ip
   177c0:	add	r3, r3, #1
   177c4:	bne	17c00 <close_stdout@@Base+0x56a8>
   177c8:	ldrb	r2, [r5, r3]
   177cc:	cmp	r2, #0
   177d0:	bne	177b0 <close_stdout@@Base+0x5258>
   177d4:	mov	r0, r6
   177d8:	b	1766c <close_stdout@@Base+0x5114>
   177dc:	add	r0, sp, #176	; 0xb0
   177e0:	bl	11244 <mbsinit@plt>
   177e4:	cmp	r0, #0
   177e8:	beq	180b0 <close_stdout@@Base+0x5b58>
   177ec:	strb	r4, [sp, #172]	; 0xac
   177f0:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   177f4:	mov	r1, r0
   177f8:	mov	r0, r8
   177fc:	bl	14b38 <close_stdout@@Base+0x25e0>
   17800:	mov	r1, r8
   17804:	add	r3, sp, #176	; 0xb0
   17808:	mov	r2, r0
   1780c:	add	r0, sp, #200	; 0xc8
   17810:	bl	112f8 <mbrtowc@plt>
   17814:	cmn	r0, #1
   17818:	str	r0, [sp, #192]	; 0xc0
   1781c:	strbeq	r5, [sp, #196]	; 0xc4
   17820:	streq	r4, [sp, #192]	; 0xc0
   17824:	beq	17890 <close_stdout@@Base+0x5338>
   17828:	cmn	r0, #2
   1782c:	beq	17880 <close_stdout@@Base+0x5328>
   17830:	cmp	r0, #0
   17834:	beq	17fc8 <close_stdout@@Base+0x5a70>
   17838:	ldr	r7, [sp, #200]	; 0xc8
   1783c:	add	r0, sp, #176	; 0xb0
   17840:	strb	r4, [sp, #196]	; 0xc4
   17844:	bl	11244 <mbsinit@plt>
   17848:	strb	r4, [sp, #184]	; 0xb8
   1784c:	cmp	r0, #0
   17850:	strbne	r5, [sp, #172]	; 0xac
   17854:	cmp	r7, #0
   17858:	beq	175d0 <close_stdout@@Base+0x5078>
   1785c:	mov	r3, #1
   17860:	b	17898 <close_stdout@@Base+0x5340>
   17864:	ldr	r0, [sp, #76]	; 0x4c
   17868:	bl	11394 <strlen@plt>
   1786c:	strb	r4, [sp, #84]	; 0x54
   17870:	str	r0, [sp, #80]	; 0x50
   17874:	mov	r3, #1
   17878:	strb	r3, [sp, #72]	; 0x48
   1787c:	b	17510 <close_stdout@@Base+0x4fb8>
   17880:	ldr	r0, [sp, #188]	; 0xbc
   17884:	bl	11394 <strlen@plt>
   17888:	strb	r5, [sp, #196]	; 0xc4
   1788c:	str	r0, [sp, #192]	; 0xc0
   17890:	mov	r3, #0
   17894:	strb	r4, [sp, #184]	; 0xb8
   17898:	ldr	r8, [sp, #32]
   1789c:	ldr	r2, [sp, #12]
   178a0:	cmp	r2, #9
   178a4:	movls	r8, #0
   178a8:	andhi	r8, r8, #1
   178ac:	cmp	r8, #0
   178b0:	beq	17988 <close_stdout@@Base+0x5430>
   178b4:	ldr	r1, [sp, #12]
   178b8:	add	r2, r1, r1, lsl #2
   178bc:	cmp	r9, r2
   178c0:	bcc	17b58 <close_stdout@@Base+0x5600>
   178c4:	ldr	r2, [sp, #28]
   178c8:	subs	r7, r9, r2
   178cc:	beq	17960 <close_stdout@@Base+0x5408>
   178d0:	ldrb	sl, [sp, #128]	; 0x80
   178d4:	cmp	sl, #0
   178d8:	beq	17908 <close_stdout@@Base+0x53b0>
   178dc:	ldrb	sl, [sp, #140]	; 0x8c
   178e0:	cmp	sl, #0
   178e4:	bne	17954 <close_stdout@@Base+0x53fc>
   178e8:	ldr	sl, [sp, #132]	; 0x84
   178ec:	subs	r7, r7, #1
   178f0:	ldr	r3, [sp, #136]	; 0x88
   178f4:	strb	r5, [sp, #128]	; 0x80
   178f8:	add	sl, sl, r3
   178fc:	str	sl, [sp, #132]	; 0x84
   17900:	beq	17c2c <close_stdout@@Base+0x56d4>
   17904:	mov	sl, #0
   17908:	ldrb	r3, [sp, #116]	; 0x74
   1790c:	ldr	fp, [sp, #132]	; 0x84
   17910:	cmp	r3, #0
   17914:	bne	179f8 <close_stdout@@Base+0x54a0>
   17918:	ldrb	r3, [fp]
   1791c:	and	r2, r3, #31
   17920:	lsr	r3, r3, #5
   17924:	ldr	r3, [r6, r3, lsl #2]
   17928:	lsr	r3, r3, r2
   1792c:	tst	r3, #1
   17930:	beq	179e4 <close_stdout@@Base+0x548c>
   17934:	str	r4, [sp, #136]	; 0x88
   17938:	mov	sl, r8
   1793c:	ldrb	r3, [fp]
   17940:	strb	r4, [sp, #140]	; 0x8c
   17944:	str	r3, [sp, #144]	; 0x90
   17948:	cmp	sl, #0
   1794c:	strb	r4, [sp, #128]	; 0x80
   17950:	beq	178e8 <close_stdout@@Base+0x5390>
   17954:	ldr	r3, [sp, #144]	; 0x90
   17958:	cmp	r3, #0
   1795c:	bne	178e8 <close_stdout@@Base+0x5390>
   17960:	ldrb	r3, [sp, #128]	; 0x80
   17964:	cmp	r3, #0
   17968:	ldrbne	r8, [sp, #140]	; 0x8c
   1796c:	beq	17c28 <close_stdout@@Base+0x56d0>
   17970:	cmp	r8, #0
   17974:	bne	17c08 <close_stdout@@Base+0x56b0>
   17978:	ldrb	r3, [sp, #196]	; 0xc4
   1797c:	mov	r0, #1
   17980:	str	r9, [sp, #28]
   17984:	str	r0, [sp, #32]
   17988:	cmp	r3, #0
   1798c:	ldr	r3, [sp, #12]
   17990:	add	r7, r9, #1
   17994:	add	r3, r3, #1
   17998:	str	r3, [sp, #12]
   1799c:	beq	17a7c <close_stdout@@Base+0x5524>
   179a0:	ldrb	r3, [sp, #84]	; 0x54
   179a4:	cmp	r3, #0
   179a8:	beq	17a7c <close_stdout@@Base+0x5524>
   179ac:	ldr	r0, [sp, #200]	; 0xc8
   179b0:	ldr	r3, [sp, #88]	; 0x58
   179b4:	subs	r3, r0, r3
   179b8:	rsbs	r0, r3, #0
   179bc:	adcs	r0, r0, r3
   179c0:	cmp	r0, #0
   179c4:	bne	17aac <close_stdout@@Base+0x5554>
   179c8:	ldr	r8, [sp, #188]	; 0xbc
   179cc:	mov	r9, r7
   179d0:	ldr	r3, [sp, #192]	; 0xc0
   179d4:	strb	r5, [sp, #184]	; 0xb8
   179d8:	add	r8, r8, r3
   179dc:	str	r8, [sp, #188]	; 0xbc
   179e0:	b	1758c <close_stdout@@Base+0x5034>
   179e4:	add	r0, sp, #120	; 0x78
   179e8:	bl	11244 <mbsinit@plt>
   179ec:	cmp	r0, #0
   179f0:	beq	180b0 <close_stdout@@Base+0x5b58>
   179f4:	strb	r4, [sp, #116]	; 0x74
   179f8:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   179fc:	mov	r1, r0
   17a00:	mov	r0, fp
   17a04:	bl	14b38 <close_stdout@@Base+0x25e0>
   17a08:	mov	r1, fp
   17a0c:	add	r3, sp, #120	; 0x78
   17a10:	mov	r2, r0
   17a14:	add	r0, sp, #144	; 0x90
   17a18:	bl	112f8 <mbrtowc@plt>
   17a1c:	cmn	r0, #1
   17a20:	str	r0, [sp, #136]	; 0x88
   17a24:	strbeq	r5, [sp, #140]	; 0x8c
   17a28:	streq	r4, [sp, #136]	; 0x88
   17a2c:	beq	17948 <close_stdout@@Base+0x53f0>
   17a30:	cmn	r0, #2
   17a34:	beq	17b44 <close_stdout@@Base+0x55ec>
   17a38:	cmp	r0, #0
   17a3c:	bne	17a60 <close_stdout@@Base+0x5508>
   17a40:	ldr	r3, [sp, #132]	; 0x84
   17a44:	str	r4, [sp, #136]	; 0x88
   17a48:	ldrb	r3, [r3]
   17a4c:	cmp	r3, #0
   17a50:	bne	180d4 <close_stdout@@Base+0x5b7c>
   17a54:	ldr	r3, [sp, #144]	; 0x90
   17a58:	cmp	r3, #0
   17a5c:	bne	17be0 <close_stdout@@Base+0x5688>
   17a60:	add	r0, sp, #120	; 0x78
   17a64:	strb	r4, [sp, #140]	; 0x8c
   17a68:	bl	11244 <mbsinit@plt>
   17a6c:	mov	sl, r8
   17a70:	cmp	r0, #0
   17a74:	strbne	r5, [sp, #116]	; 0x74
   17a78:	b	17948 <close_stdout@@Base+0x53f0>
   17a7c:	ldr	r2, [sp, #192]	; 0xc0
   17a80:	ldr	r3, [sp, #80]	; 0x50
   17a84:	cmp	r2, r3
   17a88:	movne	r0, #0
   17a8c:	bne	179c0 <close_stdout@@Base+0x5468>
   17a90:	ldr	r0, [sp, #188]	; 0xbc
   17a94:	ldr	r1, [sp, #76]	; 0x4c
   17a98:	bl	1125c <memcmp@plt>
   17a9c:	rsbs	r0, r0, #1
   17aa0:	movcc	r0, #0
   17aa4:	cmp	r0, #0
   17aa8:	beq	179c8 <close_stdout@@Base+0x5470>
   17aac:	ldr	r0, [sp, #4]
   17ab0:	add	r7, sp, #172	; 0xac
   17ab4:	add	ip, sp, #228	; 0xe4
   17ab8:	add	r8, sp, #288	; 0x120
   17abc:	str	r0, [sp, #300]	; 0x12c
   17ac0:	ldm	r7!, {r0, r1, r2, r3}
   17ac4:	stmia	ip!, {r0, r1, r2, r3}
   17ac8:	ldm	r7!, {r0, r1, r2, r3}
   17acc:	strb	r5, [sp, #240]	; 0xf0
   17ad0:	stmia	ip!, {r0, r1, r2, r3}
   17ad4:	ldm	r7!, {r0, r1, r2, r3}
   17ad8:	ldr	sl, [sp, #244]	; 0xf4
   17adc:	stmia	ip!, {r0, r1, r2, r3}
   17ae0:	ldm	r7, {r0, r1}
   17ae4:	ldr	r3, [sp, #248]	; 0xf8
   17ae8:	stm	ip, {r0, r1}
   17aec:	add	r3, sl, r3
   17af0:	str	r3, [sp, #244]	; 0xf4
   17af4:	ldr	r1, [sp, #4]
   17af8:	str	r5, [sp, #288]	; 0x120
   17afc:	strb	r5, [sp, #296]	; 0x128
   17b00:	ldrb	r3, [r1]
   17b04:	strb	r5, [sp, #284]	; 0x11c
   17b08:	and	r2, r3, #31
   17b0c:	str	r5, [r8, #4]
   17b10:	lsr	r1, r3, #5
   17b14:	ldr	r7, [r6, r1, lsl #2]
   17b18:	lsr	r7, r7, r2
   17b1c:	ands	r7, r7, #1
   17b20:	beq	17b6c <close_stdout@@Base+0x5614>
   17b24:	mov	r7, r3
   17b28:	str	r4, [sp, #304]	; 0x130
   17b2c:	str	r3, [sp, #312]	; 0x138
   17b30:	strb	r4, [sp, #308]	; 0x134
   17b34:	cmp	r7, #0
   17b38:	strb	r4, [sp, #296]	; 0x128
   17b3c:	bne	17cf0 <close_stdout@@Base+0x5798>
   17b40:	bl	114c0 <abort@plt>
   17b44:	ldr	r0, [sp, #132]	; 0x84
   17b48:	bl	11394 <strlen@plt>
   17b4c:	strb	r5, [sp, #140]	; 0x8c
   17b50:	str	r0, [sp, #136]	; 0x88
   17b54:	b	17948 <close_stdout@@Base+0x53f0>
   17b58:	mov	r2, #1
   17b5c:	str	r2, [sp, #32]
   17b60:	b	17988 <close_stdout@@Base+0x5430>
   17b64:	mov	r0, #0
   17b68:	b	1766c <close_stdout@@Base+0x5114>
   17b6c:	mov	r0, r8
   17b70:	bl	11244 <mbsinit@plt>
   17b74:	cmp	r0, #0
   17b78:	beq	180b0 <close_stdout@@Base+0x5b58>
   17b7c:	strb	r4, [sp, #284]	; 0x11c
   17b80:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   17b84:	mov	r1, r0
   17b88:	ldr	r0, [sp, #4]
   17b8c:	bl	14b38 <close_stdout@@Base+0x25e0>
   17b90:	ldr	r1, [sp, #4]
   17b94:	mov	r3, r8
   17b98:	mov	r2, r0
   17b9c:	add	r0, sp, #312	; 0x138
   17ba0:	bl	112f8 <mbrtowc@plt>
   17ba4:	cmn	r0, #1
   17ba8:	str	r0, [sp, #304]	; 0x130
   17bac:	beq	18080 <close_stdout@@Base+0x5b28>
   17bb0:	cmn	r0, #2
   17bb4:	beq	18090 <close_stdout@@Base+0x5b38>
   17bb8:	cmp	r0, #0
   17bbc:	bne	1804c <close_stdout@@Base+0x5af4>
   17bc0:	ldr	fp, [sp, #300]	; 0x12c
   17bc4:	str	r4, [sp, #304]	; 0x130
   17bc8:	ldrb	r3, [fp]
   17bcc:	cmp	r3, #0
   17bd0:	bne	180d4 <close_stdout@@Base+0x5b7c>
   17bd4:	ldr	r7, [sp, #312]	; 0x138
   17bd8:	cmp	r7, #0
   17bdc:	beq	18050 <close_stdout@@Base+0x5af8>
   17be0:	ldr	r0, [pc, #1304]	; 18100 <close_stdout@@Base+0x5ba8>
   17be4:	mov	r2, #179	; 0xb3
   17be8:	ldr	r1, [pc, #1300]	; 18104 <close_stdout@@Base+0x5bac>
   17bec:	ldr	r3, [pc, #1300]	; 18108 <close_stdout@@Base+0x5bb0>
   17bf0:	add	r0, pc, r0
   17bf4:	add	r1, pc, r1
   17bf8:	add	r3, pc, r3
   17bfc:	bl	114d8 <__assert_fail@plt>
   17c00:	mov	r5, r3
   17c04:	b	176e8 <close_stdout@@Base+0x5190>
   17c08:	ldr	r3, [sp, #144]	; 0x90
   17c0c:	cmp	r3, #0
   17c10:	beq	18010 <close_stdout@@Base+0x5ab8>
   17c14:	mov	r1, #1
   17c18:	ldrb	r3, [sp, #196]	; 0xc4
   17c1c:	str	r9, [sp, #28]
   17c20:	str	r1, [sp, #32]
   17c24:	b	17988 <close_stdout@@Base+0x5430>
   17c28:	ldr	sl, [sp, #132]	; 0x84
   17c2c:	ldrb	r3, [sp, #116]	; 0x74
   17c30:	cmp	r3, #0
   17c34:	bne	17c68 <close_stdout@@Base+0x5710>
   17c38:	ldrb	r3, [sl]
   17c3c:	and	r2, r3, #31
   17c40:	lsr	r3, r3, #5
   17c44:	ldr	r3, [r6, r3, lsl #2]
   17c48:	lsr	r3, r3, r2
   17c4c:	tst	r3, #1
   17c50:	bne	18038 <close_stdout@@Base+0x5ae0>
   17c54:	add	r0, sp, #120	; 0x78
   17c58:	bl	11244 <mbsinit@plt>
   17c5c:	cmp	r0, #0
   17c60:	beq	180b0 <close_stdout@@Base+0x5b58>
   17c64:	strb	r4, [sp, #116]	; 0x74
   17c68:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   17c6c:	mov	r1, r0
   17c70:	mov	r0, sl
   17c74:	bl	14b38 <close_stdout@@Base+0x25e0>
   17c78:	mov	r1, sl
   17c7c:	add	r3, sp, #120	; 0x78
   17c80:	mov	r2, r0
   17c84:	add	r0, sp, #144	; 0x90
   17c88:	bl	112f8 <mbrtowc@plt>
   17c8c:	cmn	r0, #1
   17c90:	str	r0, [sp, #136]	; 0x88
   17c94:	strbeq	r5, [sp, #140]	; 0x8c
   17c98:	streq	r4, [sp, #136]	; 0x88
   17c9c:	moveq	r8, #0
   17ca0:	beq	17ce8 <close_stdout@@Base+0x5790>
   17ca4:	cmn	r0, #2
   17ca8:	beq	18068 <close_stdout@@Base+0x5b10>
   17cac:	cmp	r0, #0
   17cb0:	bne	17cd4 <close_stdout@@Base+0x577c>
   17cb4:	ldr	r3, [sp, #132]	; 0x84
   17cb8:	str	r4, [sp, #136]	; 0x88
   17cbc:	ldrb	r3, [r3]
   17cc0:	cmp	r3, #0
   17cc4:	bne	180d4 <close_stdout@@Base+0x5b7c>
   17cc8:	ldr	r3, [sp, #144]	; 0x90
   17ccc:	cmp	r3, #0
   17cd0:	bne	17be0 <close_stdout@@Base+0x5688>
   17cd4:	add	r0, sp, #120	; 0x78
   17cd8:	strb	r4, [sp, #140]	; 0x8c
   17cdc:	bl	11244 <mbsinit@plt>
   17ce0:	cmp	r0, #0
   17ce4:	strbne	r5, [sp, #116]	; 0x74
   17ce8:	strb	r4, [sp, #128]	; 0x80
   17cec:	b	17970 <close_stdout@@Base+0x5418>
   17cf0:	ldr	fp, [sp, #300]	; 0x12c
   17cf4:	ldr	r2, [sp, #304]	; 0x130
   17cf8:	add	r7, r9, #2
   17cfc:	add	r3, sp, #312	; 0x138
   17d00:	add	r0, sp, #256	; 0x100
   17d04:	add	fp, fp, r2
   17d08:	ldrb	r2, [sp, #284]	; 0x11c
   17d0c:	strb	r5, [sp, #296]	; 0x128
   17d10:	add	r9, sp, #232	; 0xe8
   17d14:	cmp	r2, #0
   17d18:	str	r3, [sp, #36]	; 0x24
   17d1c:	str	r0, [sp, #40]	; 0x28
   17d20:	str	fp, [sp, #300]	; 0x12c
   17d24:	bne	17df0 <close_stdout@@Base+0x5898>
   17d28:	ldrb	r2, [fp]
   17d2c:	and	r1, r2, #31
   17d30:	lsr	r2, r2, #5
   17d34:	ldr	r2, [r6, r2, lsl #2]
   17d38:	lsr	r2, r2, r1
   17d3c:	tst	r2, #1
   17d40:	beq	17f78 <close_stdout@@Base+0x5a20>
   17d44:	str	r4, [sp, #304]	; 0x130
   17d48:	ldrb	r3, [fp]
   17d4c:	strb	r4, [sp, #308]	; 0x134
   17d50:	mov	fp, r3
   17d54:	str	r3, [sp, #312]	; 0x138
   17d58:	cmp	fp, #0
   17d5c:	strb	r4, [sp, #296]	; 0x128
   17d60:	bne	17d80 <close_stdout@@Base+0x5828>
   17d64:	ldr	r0, [sp, #188]	; 0xbc
   17d68:	b	1766c <close_stdout@@Base+0x5114>
   17d6c:	ldr	r0, [sp, #300]	; 0x12c
   17d70:	bl	11394 <strlen@plt>
   17d74:	strb	r5, [sp, #308]	; 0x134
   17d78:	str	r0, [sp, #304]	; 0x130
   17d7c:	strb	r4, [sp, #296]	; 0x128
   17d80:	ldrb	fp, [sp, #240]	; 0xf0
   17d84:	cmp	fp, #0
   17d88:	beq	17e54 <close_stdout@@Base+0x58fc>
   17d8c:	ldrb	fp, [sp, #252]	; 0xfc
   17d90:	cmp	fp, #0
   17d94:	bne	17ea0 <close_stdout@@Base+0x5948>
   17d98:	ldr	r2, [sp, #248]	; 0xf8
   17d9c:	ldr	r3, [sp, #304]	; 0x130
   17da0:	cmp	r2, r3
   17da4:	movne	r0, #1
   17da8:	beq	17f60 <close_stdout@@Base+0x5a08>
   17dac:	cmp	r0, #0
   17db0:	add	r3, r7, #1
   17db4:	bne	179c8 <close_stdout@@Base+0x5470>
   17db8:	ldr	r1, [sp, #244]	; 0xf4
   17dbc:	mov	r7, r3
   17dc0:	ldr	r2, [sp, #248]	; 0xf8
   17dc4:	ldr	fp, [sp, #300]	; 0x12c
   17dc8:	add	r1, r1, r2
   17dcc:	ldr	r2, [sp, #304]	; 0x130
   17dd0:	strb	r0, [sp, #240]	; 0xf0
   17dd4:	add	fp, fp, r2
   17dd8:	ldrb	r2, [sp, #284]	; 0x11c
   17ddc:	strb	r0, [sp, #296]	; 0x128
   17de0:	cmp	r2, #0
   17de4:	str	r1, [sp, #244]	; 0xf4
   17de8:	str	fp, [sp, #300]	; 0x12c
   17dec:	beq	17d28 <close_stdout@@Base+0x57d0>
   17df0:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   17df4:	mov	r1, r0
   17df8:	mov	r0, fp
   17dfc:	bl	14b38 <close_stdout@@Base+0x25e0>
   17e00:	mov	r1, fp
   17e04:	mov	r3, r8
   17e08:	mov	r2, r0
   17e0c:	add	r0, sp, #312	; 0x138
   17e10:	bl	112f8 <mbrtowc@plt>
   17e14:	cmn	r0, #1
   17e18:	str	r0, [sp, #304]	; 0x130
   17e1c:	strbeq	r5, [sp, #308]	; 0x134
   17e20:	streq	r4, [sp, #304]	; 0x130
   17e24:	beq	17d7c <close_stdout@@Base+0x5824>
   17e28:	cmn	r0, #2
   17e2c:	beq	17d6c <close_stdout@@Base+0x5814>
   17e30:	cmp	r0, #0
   17e34:	beq	17f90 <close_stdout@@Base+0x5a38>
   17e38:	ldr	fp, [sp, #312]	; 0x138
   17e3c:	mov	r0, r8
   17e40:	strb	r4, [sp, #308]	; 0x134
   17e44:	bl	11244 <mbsinit@plt>
   17e48:	cmp	r0, #0
   17e4c:	strbne	r5, [sp, #284]	; 0x11c
   17e50:	b	17d58 <close_stdout@@Base+0x5800>
   17e54:	ldrb	r3, [sp, #228]	; 0xe4
   17e58:	ldr	sl, [sp, #244]	; 0xf4
   17e5c:	cmp	r3, #0
   17e60:	bne	17edc <close_stdout@@Base+0x5984>
   17e64:	ldrb	r2, [sl]
   17e68:	and	r1, r2, #31
   17e6c:	lsr	r2, r2, #5
   17e70:	ldr	r2, [r6, r2, lsl #2]
   17e74:	lsr	r2, r2, r1
   17e78:	tst	r2, #1
   17e7c:	beq	17ec8 <close_stdout@@Base+0x5970>
   17e80:	str	r4, [sp, #248]	; 0xf8
   17e84:	mov	fp, #1
   17e88:	ldrb	r3, [sl]
   17e8c:	strb	r4, [sp, #252]	; 0xfc
   17e90:	str	r3, [sp, #256]	; 0x100
   17e94:	cmp	fp, #0
   17e98:	strb	r4, [sp, #240]	; 0xf0
   17e9c:	beq	17d98 <close_stdout@@Base+0x5840>
   17ea0:	ldr	r0, [sp, #256]	; 0x100
   17ea4:	cmp	r0, #0
   17ea8:	beq	1766c <close_stdout@@Base+0x5114>
   17eac:	ldrb	r3, [sp, #308]	; 0x134
   17eb0:	cmp	r3, #0
   17eb4:	beq	17d98 <close_stdout@@Base+0x5840>
   17eb8:	ldr	r3, [sp, #312]	; 0x138
   17ebc:	subs	r0, r0, r3
   17ec0:	movne	r0, #1
   17ec4:	b	17dac <close_stdout@@Base+0x5854>
   17ec8:	mov	r0, r9
   17ecc:	bl	11244 <mbsinit@plt>
   17ed0:	cmp	r0, #0
   17ed4:	beq	180b0 <close_stdout@@Base+0x5b58>
   17ed8:	strb	r4, [sp, #228]	; 0xe4
   17edc:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   17ee0:	mov	r1, r0
   17ee4:	mov	r0, sl
   17ee8:	bl	14b38 <close_stdout@@Base+0x25e0>
   17eec:	mov	r1, sl
   17ef0:	mov	r3, r9
   17ef4:	mov	r2, r0
   17ef8:	add	r0, sp, #256	; 0x100
   17efc:	bl	112f8 <mbrtowc@plt>
   17f00:	cmn	r0, #1
   17f04:	str	r0, [sp, #248]	; 0xf8
   17f08:	strbeq	r5, [sp, #252]	; 0xfc
   17f0c:	streq	r4, [sp, #248]	; 0xf8
   17f10:	beq	17e94 <close_stdout@@Base+0x593c>
   17f14:	cmn	r0, #2
   17f18:	beq	17fb4 <close_stdout@@Base+0x5a5c>
   17f1c:	cmp	r0, #0
   17f20:	bne	17f44 <close_stdout@@Base+0x59ec>
   17f24:	ldr	r3, [sp, #244]	; 0xf4
   17f28:	str	r4, [sp, #248]	; 0xf8
   17f2c:	ldrb	r3, [r3]
   17f30:	cmp	r3, #0
   17f34:	bne	180d4 <close_stdout@@Base+0x5b7c>
   17f38:	ldr	r3, [sp, #256]	; 0x100
   17f3c:	cmp	r3, #0
   17f40:	bne	17be0 <close_stdout@@Base+0x5688>
   17f44:	mov	r0, r9
   17f48:	strb	r4, [sp, #252]	; 0xfc
   17f4c:	bl	11244 <mbsinit@plt>
   17f50:	mov	fp, #1
   17f54:	cmp	r0, #0
   17f58:	strbne	r5, [sp, #228]	; 0xe4
   17f5c:	b	17e94 <close_stdout@@Base+0x593c>
   17f60:	ldr	r0, [sp, #244]	; 0xf4
   17f64:	ldr	r1, [sp, #300]	; 0x12c
   17f68:	bl	1125c <memcmp@plt>
   17f6c:	adds	r0, r0, #0
   17f70:	movne	r0, #1
   17f74:	b	17dac <close_stdout@@Base+0x5854>
   17f78:	mov	r0, r8
   17f7c:	bl	11244 <mbsinit@plt>
   17f80:	cmp	r0, #0
   17f84:	beq	180b0 <close_stdout@@Base+0x5b58>
   17f88:	strb	r4, [sp, #284]	; 0x11c
   17f8c:	b	17df0 <close_stdout@@Base+0x5898>
   17f90:	ldr	r3, [sp, #300]	; 0x12c
   17f94:	str	r4, [sp, #304]	; 0x130
   17f98:	ldrb	r3, [r3]
   17f9c:	cmp	r3, #0
   17fa0:	bne	180d4 <close_stdout@@Base+0x5b7c>
   17fa4:	ldr	fp, [sp, #312]	; 0x138
   17fa8:	cmp	fp, #0
   17fac:	beq	17e3c <close_stdout@@Base+0x58e4>
   17fb0:	b	17be0 <close_stdout@@Base+0x5688>
   17fb4:	ldr	r0, [sp, #244]	; 0xf4
   17fb8:	bl	11394 <strlen@plt>
   17fbc:	strb	r5, [sp, #252]	; 0xfc
   17fc0:	str	r0, [sp, #248]	; 0xf8
   17fc4:	b	17e94 <close_stdout@@Base+0x593c>
   17fc8:	ldr	r3, [sp, #188]	; 0xbc
   17fcc:	str	r4, [sp, #192]	; 0xc0
   17fd0:	ldrb	r3, [r3]
   17fd4:	cmp	r3, #0
   17fd8:	bne	180d4 <close_stdout@@Base+0x5b7c>
   17fdc:	ldr	r7, [sp, #200]	; 0xc8
   17fe0:	cmp	r7, #0
   17fe4:	beq	1783c <close_stdout@@Base+0x52e4>
   17fe8:	b	17be0 <close_stdout@@Base+0x5688>
   17fec:	ldr	r3, [sp, #76]	; 0x4c
   17ff0:	str	r7, [sp, #80]	; 0x50
   17ff4:	ldrb	r3, [r3]
   17ff8:	cmp	r3, #0
   17ffc:	bne	180d4 <close_stdout@@Base+0x5b7c>
   18000:	ldr	r4, [sp, #88]	; 0x58
   18004:	cmp	r4, #0
   18008:	beq	1763c <close_stdout@@Base+0x50e4>
   1800c:	b	17be0 <close_stdout@@Base+0x5688>
   18010:	ldr	r0, [sp, #16]
   18014:	add	r2, sp, #56	; 0x38
   18018:	ldr	r1, [sp, #4]
   1801c:	bl	16b54 <close_stdout@@Base+0x45fc>
   18020:	cmp	r0, #0
   18024:	bne	180a8 <close_stdout@@Base+0x5b50>
   18028:	str	r0, [sp, #32]
   1802c:	ldrb	r3, [sp, #196]	; 0xc4
   18030:	str	r9, [sp, #28]
   18034:	b	17988 <close_stdout@@Base+0x5430>
   18038:	str	r4, [sp, #136]	; 0x88
   1803c:	ldrb	r3, [sl]
   18040:	strb	r4, [sp, #140]	; 0x8c
   18044:	str	r3, [sp, #144]	; 0x90
   18048:	b	17ce8 <close_stdout@@Base+0x5790>
   1804c:	ldr	r7, [sp, #312]	; 0x138
   18050:	mov	r0, r8
   18054:	strb	r4, [sp, #308]	; 0x134
   18058:	bl	11244 <mbsinit@plt>
   1805c:	cmp	r0, #0
   18060:	strbne	r5, [sp, #284]	; 0x11c
   18064:	b	17b34 <close_stdout@@Base+0x55dc>
   18068:	ldr	r0, [sp, #132]	; 0x84
   1806c:	mov	r8, #0
   18070:	bl	11394 <strlen@plt>
   18074:	strb	r5, [sp, #140]	; 0x8c
   18078:	str	r0, [sp, #136]	; 0x88
   1807c:	b	17ce8 <close_stdout@@Base+0x5790>
   18080:	str	r4, [sp, #304]	; 0x130
   18084:	strb	r7, [sp, #308]	; 0x134
   18088:	ldr	fp, [sp, #300]	; 0x12c
   1808c:	b	17cf4 <close_stdout@@Base+0x579c>
   18090:	ldr	fp, [sp, #300]	; 0x12c
   18094:	mov	r0, fp
   18098:	bl	11394 <strlen@plt>
   1809c:	strb	r7, [sp, #308]	; 0x134
   180a0:	str	r0, [sp, #304]	; 0x130
   180a4:	b	17cf4 <close_stdout@@Base+0x579c>
   180a8:	ldr	r0, [sp, #56]	; 0x38
   180ac:	b	1766c <close_stdout@@Base+0x5114>
   180b0:	ldr	r0, [pc, #84]	; 1810c <close_stdout@@Base+0x5bb4>
   180b4:	mov	r2, #150	; 0x96
   180b8:	ldr	r1, [pc, #80]	; 18110 <close_stdout@@Base+0x5bb8>
   180bc:	ldr	r3, [pc, #80]	; 18114 <close_stdout@@Base+0x5bbc>
   180c0:	add	r0, pc, r0
   180c4:	add	r1, pc, r1
   180c8:	add	r3, pc, r3
   180cc:	bl	114d8 <__assert_fail@plt>
   180d0:	bl	11274 <__stack_chk_fail@plt>
   180d4:	ldr	r0, [pc, #60]	; 18118 <close_stdout@@Base+0x5bc0>
   180d8:	mov	r2, #178	; 0xb2
   180dc:	ldr	r1, [pc, #56]	; 1811c <close_stdout@@Base+0x5bc4>
   180e0:	ldr	r3, [pc, #56]	; 18120 <close_stdout@@Base+0x5bc8>
   180e4:	add	r0, pc, r0
   180e8:	add	r1, pc, r1
   180ec:	add	r3, pc, r3
   180f0:	bl	114d8 <__assert_fail@plt>
   180f4:	andeq	r3, r1, r8, ror fp
   180f8:	andeq	r0, r0, r8, lsr #2
   180fc:	andeq	r0, r0, r4, lsr #2
   18100:	muleq	r0, ip, r5
   18104:	andeq	r2, r0, r0, ror r5
   18108:	andeq	r2, r0, r4, lsr sl
   1810c:	andeq	r2, r0, ip, lsl #1
   18110:	andeq	r2, r0, r0, lsr #1
   18114:	andeq	r2, r0, r4, ror #10
   18118:	muleq	r0, r0, r0
   1811c:	andeq	r2, r0, ip, ror r0
   18120:	andeq	r2, r0, r0, asr #10
   18124:	ldr	ip, [pc, #852]	; 18480 <close_stdout@@Base+0x5f28>
   18128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1812c:	mov	r6, r2
   18130:	sub	sp, sp, #4160	; 0x1040
   18134:	ldr	r2, [pc, #840]	; 18484 <close_stdout@@Base+0x5f2c>
   18138:	sub	sp, sp, #4
   1813c:	add	ip, pc, ip
   18140:	mov	r5, #0
   18144:	movw	fp, #61424	; 0xeff0
   18148:	str	r0, [sp, #24]
   1814c:	mov	r0, r6
   18150:	str	r1, [sp, #16]
   18154:	mov	r1, r5
   18158:	str	r3, [sp, #32]
   1815c:	mov	r3, r5
   18160:	ldr	r2, [ip, r2]
   18164:	add	ip, sp, #8192	; 0x2000
   18168:	str	r5, [sp]
   1816c:	movt	fp, #65535	; 0xffff
   18170:	ldr	ip, [ip, #-3992]	; 0xfffff068
   18174:	str	r2, [sp, #20]
   18178:	mov	r2, r5
   1817c:	ldr	lr, [sp, #20]
   18180:	str	ip, [sp, #28]
   18184:	ldr	ip, [lr]
   18188:	add	lr, sp, #8192	; 0x2000
   1818c:	str	ip, [lr, #-4036]	; 0xfffff03c
   18190:	bl	111e4 <iconv@plt>
   18194:	ldr	ip, [sp, #16]
   18198:	add	lr, sp, #4160	; 0x1040
   1819c:	movw	r3, #61420	; 0xefec
   181a0:	cmp	ip, r5
   181a4:	ldr	ip, [sp, #24]
   181a8:	movt	r3, #65535	; 0xffff
   181ac:	str	ip, [lr, r3]
   181b0:	ldr	ip, [sp, #16]
   181b4:	str	ip, [lr, fp]
   181b8:	beq	1845c <close_stdout@@Base+0x5f04>
   181bc:	movw	r9, #61432	; 0xeff8
   181c0:	movt	r9, #65535	; 0xffff
   181c4:	movw	sl, #61428	; 0xeff4
   181c8:	movt	sl, #65535	; 0xffff
   181cc:	mov	r3, r9
   181d0:	add	ip, sp, #64	; 0x40
   181d4:	mov	r9, sl
   181d8:	str	ip, [sp, #36]	; 0x24
   181dc:	add	r4, sp, #60	; 0x3c
   181e0:	add	ip, sp, #44	; 0x2c
   181e4:	add	r7, sp, #52	; 0x34
   181e8:	str	ip, [sp, #8]
   181ec:	add	r8, sp, #56	; 0x38
   181f0:	add	ip, sp, #48	; 0x30
   181f4:	mov	sl, r3
   181f8:	str	ip, [sp, #12]
   181fc:	b	1821c <close_stdout@@Base+0x5cc4>
   18200:	add	lr, sp, #4160	; 0x1040
   18204:	ldr	r2, [lr, fp]
   18208:	ldr	r3, [lr, r9]
   1820c:	cmp	r2, #0
   18210:	rsb	r3, r4, r3
   18214:	add	r5, r5, r3
   18218:	beq	18264 <close_stdout@@Base+0x5d0c>
   1821c:	add	lr, sp, #4160	; 0x1040
   18220:	str	r8, [sp]
   18224:	mov	ip, #4096	; 0x1000
   18228:	mov	r0, r6
   1822c:	add	r1, sp, #44	; 0x2c
   18230:	add	r2, sp, #48	; 0x30
   18234:	mov	r3, r7
   18238:	str	r4, [lr, r9]
   1823c:	str	ip, [lr, sl]
   18240:	bl	111e4 <iconv@plt>
   18244:	cmn	r0, #1
   18248:	bne	18200 <close_stdout@@Base+0x5ca8>
   1824c:	bl	113b8 <__errno_location@plt>
   18250:	ldr	r3, [r0]
   18254:	cmp	r3, #7
   18258:	beq	18200 <close_stdout@@Base+0x5ca8>
   1825c:	cmp	r3, #22
   18260:	bne	18454 <close_stdout@@Base+0x5efc>
   18264:	add	lr, sp, #4160	; 0x1040
   18268:	movw	r9, #61428	; 0xeff4
   1826c:	movw	r3, #61432	; 0xeff8
   18270:	movt	r9, #65535	; 0xffff
   18274:	movt	r3, #65535	; 0xffff
   18278:	mov	r1, #0
   1827c:	str	r8, [sp]
   18280:	mov	ip, #4096	; 0x1000
   18284:	mov	r2, r1
   18288:	str	ip, [lr, r3]
   1828c:	mov	r0, r6
   18290:	str	r4, [lr, r9]
   18294:	mov	r3, r7
   18298:	bl	111e4 <iconv@plt>
   1829c:	cmn	r0, #1
   182a0:	beq	18454 <close_stdout@@Base+0x5efc>
   182a4:	add	r0, sp, #4160	; 0x1040
   182a8:	ldr	r3, [r0, r9]
   182ac:	rsb	r4, r4, r3
   182b0:	adds	r5, r5, r4
   182b4:	beq	18404 <close_stdout@@Base+0x5eac>
   182b8:	ldr	ip, [sp, #32]
   182bc:	ldr	r4, [ip]
   182c0:	cmp	r4, #0
   182c4:	beq	183e0 <close_stdout@@Base+0x5e88>
   182c8:	ldr	ip, [sp, #28]
   182cc:	ldr	r3, [ip]
   182d0:	cmp	r5, r3
   182d4:	bhi	183e0 <close_stdout@@Base+0x5e88>
   182d8:	mov	r3, #0
   182dc:	mov	r0, r6
   182e0:	mov	r1, r3
   182e4:	mov	r2, r3
   182e8:	str	r3, [sp]
   182ec:	movw	sl, #61424	; 0xeff0
   182f0:	bl	111e4 <iconv@plt>
   182f4:	ldr	ip, [sp, #24]
   182f8:	add	lr, sp, #4160	; 0x1040
   182fc:	movw	r3, #61420	; 0xefec
   18300:	movt	r3, #65535	; 0xffff
   18304:	movt	sl, #65535	; 0xffff
   18308:	movw	r1, #61428	; 0xeff4
   1830c:	movw	r2, #61432	; 0xeff8
   18310:	str	ip, [lr, r3]
   18314:	movt	r1, #65535	; 0xffff
   18318:	ldr	ip, [sp, #16]
   1831c:	movt	r2, #65535	; 0xffff
   18320:	str	r4, [lr, r1]
   18324:	str	r5, [lr, r2]
   18328:	str	ip, [lr, sl]
   1832c:	mov	r3, ip
   18330:	ldr	ip, [sp, #36]	; 0x24
   18334:	sub	fp, ip, #20
   18338:	sub	r9, ip, #16
   1833c:	b	18368 <close_stdout@@Base+0x5e10>
   18340:	str	r8, [sp]
   18344:	mov	r0, r6
   18348:	mov	r1, fp
   1834c:	mov	r2, r9
   18350:	mov	r3, r7
   18354:	bl	111e4 <iconv@plt>
   18358:	cmn	r0, #1
   1835c:	beq	18414 <close_stdout@@Base+0x5ebc>
   18360:	add	lr, sp, #4160	; 0x1040
   18364:	ldr	r3, [lr, sl]
   18368:	cmp	r3, #0
   1836c:	bne	18340 <close_stdout@@Base+0x5de8>
   18370:	mov	r1, #0
   18374:	str	r8, [sp]
   18378:	mov	r0, r6
   1837c:	mov	r3, r7
   18380:	mov	r2, r1
   18384:	bl	111e4 <iconv@plt>
   18388:	cmn	r0, #1
   1838c:	beq	18424 <close_stdout@@Base+0x5ecc>
   18390:	movw	r3, #61432	; 0xeff8
   18394:	add	r0, sp, #4160	; 0x1040
   18398:	movt	r3, #65535	; 0xffff
   1839c:	ldr	r3, [r0, r3]
   183a0:	cmp	r3, #0
   183a4:	bne	18478 <close_stdout@@Base+0x5f20>
   183a8:	ldr	ip, [sp, #32]
   183ac:	str	r4, [ip]
   183b0:	ldr	ip, [sp, #28]
   183b4:	str	r5, [ip]
   183b8:	ldr	ip, [sp, #20]
   183bc:	add	r0, sp, #8192	; 0x2000
   183c0:	ldr	r2, [r0, #-4036]	; 0xfffff03c
   183c4:	mov	r0, r3
   183c8:	ldr	r3, [ip]
   183cc:	cmp	r2, r3
   183d0:	bne	1847c <close_stdout@@Base+0x5f24>
   183d4:	add	sp, sp, #4160	; 0x1040
   183d8:	add	sp, sp, #4
   183dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183e0:	mov	r0, r5
   183e4:	bl	11328 <malloc@plt>
   183e8:	subs	r4, r0, #0
   183ec:	bne	182d8 <close_stdout@@Base+0x5d80>
   183f0:	bl	113b8 <__errno_location@plt>
   183f4:	mov	r2, #12
   183f8:	mvn	r3, #0
   183fc:	str	r2, [r0]
   18400:	b	183b8 <close_stdout@@Base+0x5e60>
   18404:	ldr	ip, [sp, #28]
   18408:	mov	r3, r5
   1840c:	str	r5, [ip]
   18410:	b	183b8 <close_stdout@@Base+0x5e60>
   18414:	bl	113b8 <__errno_location@plt>
   18418:	ldr	r3, [r0]
   1841c:	cmp	r3, #22
   18420:	beq	18370 <close_stdout@@Base+0x5e18>
   18424:	ldr	ip, [sp, #32]
   18428:	ldr	r3, [ip]
   1842c:	cmp	r3, r4
   18430:	beq	18454 <close_stdout@@Base+0x5efc>
   18434:	bl	113b8 <__errno_location@plt>
   18438:	ldr	r6, [r0]
   1843c:	mov	r5, r0
   18440:	mov	r0, r4
   18444:	bl	11220 <free@plt>
   18448:	mvn	r3, #0
   1844c:	str	r6, [r5]
   18450:	b	183b8 <close_stdout@@Base+0x5e60>
   18454:	mvn	r3, #0
   18458:	b	183b8 <close_stdout@@Base+0x5e60>
   1845c:	add	ip, sp, #64	; 0x40
   18460:	add	r4, sp, #60	; 0x3c
   18464:	str	ip, [sp, #36]	; 0x24
   18468:	add	r7, sp, #52	; 0x34
   1846c:	add	r8, sp, #56	; 0x38
   18470:	ldr	r5, [sp, #16]
   18474:	b	18264 <close_stdout@@Base+0x5d0c>
   18478:	bl	114c0 <abort@plt>
   1847c:	bl	11274 <__stack_chk_fail@plt>
   18480:			; <UNDEFINED> instruction: 0x00012ebc
   18484:	andeq	r0, r0, r8, lsr #2
   18488:	ldr	r3, [pc, #524]	; 1869c <close_stdout@@Base+0x6144>
   1848c:	ldr	r2, [pc, #524]	; 186a0 <close_stdout@@Base+0x6148>
   18490:	add	r3, pc, r3
   18494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18498:	sub	sp, sp, #52	; 0x34
   1849c:	ldr	r2, [r3, r2]
   184a0:	mov	r6, r1
   184a4:	str	r0, [sp, #28]
   184a8:	ldr	r3, [r2]
   184ac:	str	r2, [sp, #20]
   184b0:	str	r3, [sp, #44]	; 0x2c
   184b4:	bl	11394 <strlen@plt>
   184b8:	cmp	r0, #4096	; 0x1000
   184bc:	mov	fp, r0
   184c0:	lslcc	fp, r0, #4
   184c4:	str	r0, [sp, #32]
   184c8:	add	r5, fp, #1
   184cc:	mov	r0, r5
   184d0:	bl	11328 <malloc@plt>
   184d4:	subs	r4, r0, #0
   184d8:	beq	18688 <close_stdout@@Base+0x6130>
   184dc:	mov	r3, #0
   184e0:	add	r2, sp, #32
   184e4:	mov	r1, r3
   184e8:	str	r2, [sp, #16]
   184ec:	str	r3, [sp]
   184f0:	mov	r2, r3
   184f4:	mov	r0, r6
   184f8:	add	sl, sp, #28
   184fc:	bl	111e4 <iconv@plt>
   18500:	add	r8, sp, #36	; 0x24
   18504:	add	r7, sp, #40	; 0x28
   18508:	str	r4, [sp, #36]	; 0x24
   1850c:	str	fp, [sp, #40]	; 0x28
   18510:	b	18574 <close_stdout@@Base+0x601c>
   18514:	bl	113b8 <__errno_location@plt>
   18518:	ldr	r3, [r0]
   1851c:	mov	fp, r0
   18520:	cmp	r3, #22
   18524:	beq	185f0 <close_stdout@@Base+0x6098>
   18528:	cmp	r3, #7
   1852c:	bne	18650 <close_stdout@@Base+0x60f8>
   18530:	lsl	r9, r5, #1
   18534:	ldr	r1, [sp, #36]	; 0x24
   18538:	cmp	r5, r9
   1853c:	rsb	r5, r4, r1
   18540:	bcs	18648 <close_stdout@@Base+0x60f0>
   18544:	mov	r0, r4
   18548:	mov	r1, r9
   1854c:	bl	11280 <realloc@plt>
   18550:	cmp	r0, #0
   18554:	beq	18648 <close_stdout@@Base+0x60f0>
   18558:	sub	r1, r9, #1
   1855c:	add	r2, r0, r5
   18560:	mov	r4, r0
   18564:	rsb	r5, r5, r1
   18568:	str	r5, [sp, #40]	; 0x28
   1856c:	mov	r5, r9
   18570:	str	r2, [sp, #36]	; 0x24
   18574:	str	r7, [sp]
   18578:	mov	r0, r6
   1857c:	mov	r1, sl
   18580:	add	r2, sp, #32
   18584:	mov	r3, r8
   18588:	bl	111e4 <iconv@plt>
   1858c:	cmn	r0, #1
   18590:	beq	18514 <close_stdout@@Base+0x5fbc>
   18594:	b	185f0 <close_stdout@@Base+0x6098>
   18598:	bl	113b8 <__errno_location@plt>
   1859c:	ldr	r3, [r0]
   185a0:	mov	fp, r0
   185a4:	cmp	r3, #7
   185a8:	bne	18650 <close_stdout@@Base+0x60f8>
   185ac:	lsl	r9, r5, #1
   185b0:	ldr	r3, [sp, #36]	; 0x24
   185b4:	cmp	r5, r9
   185b8:	rsb	r5, r4, r3
   185bc:	bcs	18648 <close_stdout@@Base+0x60f0>
   185c0:	mov	r0, r4
   185c4:	mov	r1, r9
   185c8:	bl	11280 <realloc@plt>
   185cc:	cmp	r0, #0
   185d0:	beq	18648 <close_stdout@@Base+0x60f0>
   185d4:	sub	r2, r9, #1
   185d8:	add	r3, r0, r5
   185dc:	mov	r4, r0
   185e0:	rsb	r5, r5, r2
   185e4:	str	r5, [sp, #40]	; 0x28
   185e8:	mov	r5, r9
   185ec:	str	r3, [sp, #36]	; 0x24
   185f0:	mov	r1, #0
   185f4:	str	r7, [sp]
   185f8:	mov	r2, r1
   185fc:	mov	r0, r6
   18600:	mov	r3, r8
   18604:	bl	111e4 <iconv@plt>
   18608:	cmn	r0, #1
   1860c:	beq	18598 <close_stdout@@Base+0x6040>
   18610:	ldr	r3, [sp, #36]	; 0x24
   18614:	mov	r2, #0
   18618:	add	r1, r3, #1
   1861c:	str	r1, [sp, #36]	; 0x24
   18620:	strb	r2, [r3]
   18624:	ldr	r1, [sp, #36]	; 0x24
   18628:	rsb	r1, r4, r1
   1862c:	cmp	r1, r5
   18630:	bcs	18668 <close_stdout@@Base+0x6110>
   18634:	mov	r0, r4
   18638:	bl	11280 <realloc@plt>
   1863c:	cmp	r0, #0
   18640:	movne	r4, r0
   18644:	b	18668 <close_stdout@@Base+0x6110>
   18648:	mov	r3, #12
   1864c:	str	r3, [fp]
   18650:	mov	r0, r4
   18654:	str	r3, [sp, #12]
   18658:	bl	11220 <free@plt>
   1865c:	ldr	r3, [sp, #12]
   18660:	mov	r4, #0
   18664:	str	r3, [fp]
   18668:	ldr	r1, [sp, #20]
   1866c:	mov	r0, r4
   18670:	ldr	r2, [sp, #44]	; 0x2c
   18674:	ldr	r3, [r1]
   18678:	cmp	r2, r3
   1867c:	bne	18698 <close_stdout@@Base+0x6140>
   18680:	add	sp, sp, #52	; 0x34
   18684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18688:	bl	113b8 <__errno_location@plt>
   1868c:	mov	r3, #12
   18690:	str	r3, [r0]
   18694:	b	18668 <close_stdout@@Base+0x6110>
   18698:	bl	11274 <__stack_chk_fail@plt>
   1869c:	andeq	r2, r1, r8, ror #22
   186a0:	andeq	r0, r0, r8, lsr #2
   186a4:	push	{r3, r4, r5, r6, r7, lr}
   186a8:	mov	r4, r0
   186ac:	ldrb	r3, [r0]
   186b0:	mov	r5, r1
   186b4:	mov	r6, r2
   186b8:	cmp	r3, #0
   186bc:	beq	186d4 <close_stdout@@Base+0x617c>
   186c0:	mov	r0, r1
   186c4:	mov	r1, r2
   186c8:	bl	16408 <close_stdout@@Base+0x3eb0>
   186cc:	cmp	r0, #0
   186d0:	bne	186f0 <close_stdout@@Base+0x6198>
   186d4:	mov	r0, r4
   186d8:	bl	113e8 <__strdup@plt>
   186dc:	subs	r4, r0, #0
   186e0:	beq	1874c <close_stdout@@Base+0x61f4>
   186e4:	mov	r3, r4
   186e8:	mov	r0, r3
   186ec:	pop	{r3, r4, r5, r6, r7, pc}
   186f0:	mov	r1, r5
   186f4:	mov	r0, r6
   186f8:	bl	11334 <iconv_open@plt>
   186fc:	cmn	r0, #1
   18700:	mov	r5, r0
   18704:	beq	18764 <close_stdout@@Base+0x620c>
   18708:	mov	r0, r4
   1870c:	mov	r1, r5
   18710:	bl	18488 <close_stdout@@Base+0x5f30>
   18714:	subs	r4, r0, #0
   18718:	beq	1876c <close_stdout@@Base+0x6214>
   1871c:	mov	r0, r5
   18720:	bl	111d8 <iconv_close@plt>
   18724:	cmp	r0, #0
   18728:	bge	186e4 <close_stdout@@Base+0x618c>
   1872c:	bl	113b8 <__errno_location@plt>
   18730:	ldr	r6, [r0]
   18734:	mov	r5, r0
   18738:	mov	r0, r4
   1873c:	bl	11220 <free@plt>
   18740:	mov	r3, #0
   18744:	str	r6, [r5]
   18748:	b	186e8 <close_stdout@@Base+0x6190>
   1874c:	bl	113b8 <__errno_location@plt>
   18750:	mov	r3, r4
   18754:	mov	r2, #12
   18758:	str	r2, [r0]
   1875c:	mov	r0, r3
   18760:	pop	{r3, r4, r5, r6, r7, pc}
   18764:	mov	r3, #0
   18768:	b	186e8 <close_stdout@@Base+0x6190>
   1876c:	bl	113b8 <__errno_location@plt>
   18770:	ldr	r7, [r0]
   18774:	mov	r6, r0
   18778:	mov	r0, r5
   1877c:	bl	111d8 <iconv_close@plt>
   18780:	mov	r3, r4
   18784:	str	r7, [r6]
   18788:	b	186e8 <close_stdout@@Base+0x6190>
   1878c:	push	{r4, r5, r6, lr}
   18790:	sub	sp, sp, #8
   18794:	mov	r4, r0
   18798:	bl	11418 <fileno@plt>
   1879c:	cmp	r0, #0
   187a0:	mov	r0, r4
   187a4:	blt	18820 <close_stdout@@Base+0x62c8>
   187a8:	bl	1134c <__freading@plt>
   187ac:	cmp	r0, #0
   187b0:	bne	187ec <close_stdout@@Base+0x6294>
   187b4:	mov	r0, r4
   187b8:	bl	1882c <close_stdout@@Base+0x62d4>
   187bc:	cmp	r0, #0
   187c0:	beq	1881c <close_stdout@@Base+0x62c4>
   187c4:	bl	113b8 <__errno_location@plt>
   187c8:	ldr	r6, [r0]
   187cc:	mov	r5, r0
   187d0:	mov	r0, r4
   187d4:	bl	1143c <fclose@plt>
   187d8:	cmp	r6, #0
   187dc:	mvnne	r0, #0
   187e0:	strne	r6, [r5]
   187e4:	add	sp, sp, #8
   187e8:	pop	{r4, r5, r6, pc}
   187ec:	mov	r0, r4
   187f0:	bl	11418 <fileno@plt>
   187f4:	mov	r1, #1
   187f8:	mov	r2, #0
   187fc:	mov	r3, #0
   18800:	str	r1, [sp]
   18804:	bl	112c8 <lseek64@plt>
   18808:	mvn	r2, #0
   1880c:	mvn	r3, #0
   18810:	cmp	r1, r3
   18814:	cmpeq	r0, r2
   18818:	bne	187b4 <close_stdout@@Base+0x625c>
   1881c:	mov	r0, r4
   18820:	add	sp, sp, #8
   18824:	pop	{r4, r5, r6, lr}
   18828:	b	1143c <fclose@plt>
   1882c:	push	{r4, lr}
   18830:	subs	r4, r0, #0
   18834:	sub	sp, sp, #8
   18838:	beq	18848 <close_stdout@@Base+0x62f0>
   1883c:	bl	1134c <__freading@plt>
   18840:	cmp	r0, #0
   18844:	bne	18858 <close_stdout@@Base+0x6300>
   18848:	mov	r0, r4
   1884c:	add	sp, sp, #8
   18850:	pop	{r4, lr}
   18854:	b	111fc <fflush@plt>
   18858:	ldr	r3, [r4]
   1885c:	tst	r3, #256	; 0x100
   18860:	beq	18848 <close_stdout@@Base+0x62f0>
   18864:	mov	r3, #1
   18868:	mov	r0, r4
   1886c:	str	r3, [sp]
   18870:	mov	r2, #0
   18874:	mov	r3, #0
   18878:	bl	1888c <close_stdout@@Base+0x6334>
   1887c:	mov	r0, r4
   18880:	add	sp, sp, #8
   18884:	pop	{r4, lr}
   18888:	b	111fc <fflush@plt>
   1888c:	push	{r4, r5, r6, r7, lr}
   18890:	sub	sp, sp, #20
   18894:	ldmib	r0, {r1, ip}
   18898:	mov	r6, r0
   1889c:	ldr	r4, [sp, #40]	; 0x28
   188a0:	cmp	ip, r1
   188a4:	beq	188bc <close_stdout@@Base+0x6364>
   188a8:	str	r4, [sp, #40]	; 0x28
   188ac:	mov	r0, r6
   188b0:	add	sp, sp, #20
   188b4:	pop	{r4, r5, r6, r7, lr}
   188b8:	b	11454 <fseeko64@plt>
   188bc:	ldr	ip, [r0, #20]
   188c0:	ldr	r1, [r0, #16]
   188c4:	cmp	ip, r1
   188c8:	bne	188a8 <close_stdout@@Base+0x6350>
   188cc:	ldr	r7, [r0, #36]	; 0x24
   188d0:	cmp	r7, #0
   188d4:	bne	188a8 <close_stdout@@Base+0x6350>
   188d8:	str	r2, [sp, #12]
   188dc:	mvn	r5, #0
   188e0:	str	r3, [sp, #8]
   188e4:	bl	11418 <fileno@plt>
   188e8:	str	r4, [sp]
   188ec:	mvn	r4, #0
   188f0:	ldr	r2, [sp, #12]
   188f4:	ldr	r3, [sp, #8]
   188f8:	bl	112c8 <lseek64@plt>
   188fc:	mov	r2, r0
   18900:	mov	r3, r1
   18904:	cmp	r3, r5
   18908:	cmpeq	r2, r4
   1890c:	beq	1892c <close_stdout@@Base+0x63d4>
   18910:	ldr	r1, [r6]
   18914:	mov	r0, r7
   18918:	strd	r2, [r6, #80]	; 0x50
   1891c:	bic	r3, r1, #16
   18920:	str	r3, [r6]
   18924:	add	sp, sp, #20
   18928:	pop	{r4, r5, r6, r7, pc}
   1892c:	mvn	r0, #0
   18930:	b	18924 <close_stdout@@Base+0x63cc>
   18934:	adds	r0, r0, #8
   18938:	push	{r3, r4, r5, lr}
   1893c:	bcs	18990 <close_stdout@@Base+0x6438>
   18940:	bl	11328 <malloc@plt>
   18944:	subs	r1, r0, #0
   18948:	beq	18990 <close_stdout@@Base+0x6438>
   1894c:	add	r2, r1, #8
   18950:	movw	r3, #65281	; 0xff01
   18954:	movt	r3, #65280	; 0xff00
   18958:	ldr	ip, [pc, #56]	; 18998 <close_stdout@@Base+0x6440>
   1895c:	movw	r4, #64330	; 0xfb4a
   18960:	movt	r4, #5141	; 0x1415
   18964:	umull	r5, r3, r3, r2
   18968:	add	ip, pc, ip
   1896c:	str	r4, [r1, #4]
   18970:	mov	r0, r2
   18974:	lsr	r3, r3, #8
   18978:	add	r3, r3, r3, lsl #8
   1897c:	rsb	r3, r3, r2
   18980:	ldr	r4, [ip, r3, lsl #2]
   18984:	str	r2, [ip, r3, lsl #2]
   18988:	str	r4, [r1]
   1898c:	pop	{r3, r4, r5, pc}
   18990:	mov	r0, #0
   18994:	pop	{r3, r4, r5, pc}
   18998:	andeq	r2, r1, r8, lsl #19
   1899c:	cmp	r0, #0
   189a0:	bxeq	lr
   189a4:	ldr	r2, [r0, #-4]
   189a8:	movw	r3, #64330	; 0xfb4a
   189ac:	movt	r3, #5141	; 0x1415
   189b0:	cmp	r2, r3
   189b4:	bxne	lr
   189b8:	movw	r3, #65281	; 0xff01
   189bc:	movt	r3, #65280	; 0xff00
   189c0:	ldr	r1, [pc, #88]	; 18a20 <close_stdout@@Base+0x64c8>
   189c4:	umull	r2, r3, r3, r0
   189c8:	add	r1, pc, r1
   189cc:	lsr	r3, r3, #8
   189d0:	add	r3, r3, r3, lsl #8
   189d4:	rsb	r3, r3, r0
   189d8:	ldr	r2, [r1, r3, lsl #2]
   189dc:	cmp	r2, #0
   189e0:	bxeq	lr
   189e4:	cmp	r0, r2
   189e8:	addeq	r2, r1, r3, lsl #2
   189ec:	bne	18a00 <close_stdout@@Base+0x64a8>
   189f0:	b	18a14 <close_stdout@@Base+0x64bc>
   189f4:	cmp	r0, r3
   189f8:	beq	18a10 <close_stdout@@Base+0x64b8>
   189fc:	mov	r2, r3
   18a00:	ldr	r3, [r2, #-8]
   18a04:	cmp	r3, #0
   18a08:	bne	189f4 <close_stdout@@Base+0x649c>
   18a0c:	bx	lr
   18a10:	sub	r2, r2, #8
   18a14:	ldr	ip, [r0, #-8]!
   18a18:	str	ip, [r2]
   18a1c:	b	11220 <free@plt>
   18a20:	andeq	r2, r1, r8, lsr #18
   18a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a28:	sub	sp, sp, #76	; 0x4c
   18a2c:	ldr	r8, [pc, #524]	; 18c40 <close_stdout@@Base+0x66e8>
   18a30:	mov	sl, r0
   18a34:	ldr	r3, [pc, #520]	; 18c44 <close_stdout@@Base+0x66ec>
   18a38:	add	r8, pc, r8
   18a3c:	ldr	r3, [r8, r3]
   18a40:	str	r3, [sp, #4]
   18a44:	ldr	r3, [r3]
   18a48:	str	r3, [sp, #68]	; 0x44
   18a4c:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   18a50:	cmp	r0, #1
   18a54:	bls	18bf0 <close_stdout@@Base+0x6698>
   18a58:	mov	r3, #0
   18a5c:	add	r7, sp, #16
   18a60:	add	r9, sp, #40	; 0x28
   18a64:	mov	fp, r3
   18a68:	mov	r4, sl
   18a6c:	mov	r6, r3
   18a70:	mov	r5, #1
   18a74:	str	r3, [sp, #16]
   18a78:	strb	r3, [sp, #24]
   18a7c:	str	sl, [sp, #28]
   18a80:	strb	r3, [sp, #12]
   18a84:	str	r3, [r7, #4]
   18a88:	ldrb	r2, [sp, #12]
   18a8c:	cmp	r2, #0
   18a90:	bne	18b08 <close_stdout@@Base+0x65b0>
   18a94:	ldr	r2, [pc, #428]	; 18c48 <close_stdout@@Base+0x66f0>
   18a98:	ldrb	r3, [r4]
   18a9c:	ldr	r1, [r8, r2]
   18aa0:	and	r2, r3, #31
   18aa4:	lsr	r3, r3, #5
   18aa8:	ldr	r3, [r1, r3, lsl #2]
   18aac:	lsr	r3, r3, r2
   18ab0:	tst	r3, #1
   18ab4:	beq	18af4 <close_stdout@@Base+0x659c>
   18ab8:	str	r5, [sp, #32]
   18abc:	ldrb	r4, [r4]
   18ac0:	strb	r5, [sp, #36]	; 0x24
   18ac4:	cmp	r4, #0
   18ac8:	strb	r5, [sp, #24]
   18acc:	str	r4, [sp, #40]	; 0x28
   18ad0:	bne	18b6c <close_stdout@@Base+0x6614>
   18ad4:	mov	r0, fp
   18ad8:	ldr	r1, [sp, #4]
   18adc:	ldr	r2, [sp, #68]	; 0x44
   18ae0:	ldr	r3, [r1]
   18ae4:	cmp	r2, r3
   18ae8:	bne	18c1c <close_stdout@@Base+0x66c4>
   18aec:	add	sp, sp, #76	; 0x4c
   18af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18af4:	mov	r0, r7
   18af8:	bl	11244 <mbsinit@plt>
   18afc:	cmp	r0, #0
   18b00:	beq	18bfc <close_stdout@@Base+0x66a4>
   18b04:	strb	r5, [sp, #12]
   18b08:	bl	112d4 <__ctype_get_mb_cur_max@plt>
   18b0c:	mov	r1, r0
   18b10:	mov	r0, r4
   18b14:	bl	14b38 <close_stdout@@Base+0x25e0>
   18b18:	mov	r1, r4
   18b1c:	mov	r3, r7
   18b20:	mov	r2, r0
   18b24:	mov	r0, r9
   18b28:	bl	112f8 <mbrtowc@plt>
   18b2c:	cmn	r0, #1
   18b30:	str	r0, [sp, #32]
   18b34:	beq	18b88 <close_stdout@@Base+0x6630>
   18b38:	cmn	r0, #2
   18b3c:	beq	18bd8 <close_stdout@@Base+0x6680>
   18b40:	cmp	r0, #0
   18b44:	beq	18b98 <close_stdout@@Base+0x6640>
   18b48:	ldr	r4, [sp, #40]	; 0x28
   18b4c:	mov	r0, r7
   18b50:	strb	r5, [sp, #36]	; 0x24
   18b54:	bl	11244 <mbsinit@plt>
   18b58:	strb	r5, [sp, #24]
   18b5c:	cmp	r0, #0
   18b60:	strbne	r6, [sp, #12]
   18b64:	cmp	r4, #0
   18b68:	beq	18ad4 <close_stdout@@Base+0x657c>
   18b6c:	ldr	r4, [sp, #28]
   18b70:	ldr	r3, [sp, #32]
   18b74:	add	fp, fp, #1
   18b78:	strb	r6, [sp, #24]
   18b7c:	add	r4, r4, r3
   18b80:	str	r4, [sp, #28]
   18b84:	b	18a88 <close_stdout@@Base+0x6530>
   18b88:	str	r5, [sp, #32]
   18b8c:	strb	r6, [sp, #36]	; 0x24
   18b90:	ldr	r4, [sp, #28]
   18b94:	b	18b70 <close_stdout@@Base+0x6618>
   18b98:	ldr	r4, [sp, #28]
   18b9c:	str	r5, [sp, #32]
   18ba0:	ldrb	r3, [r4]
   18ba4:	cmp	r3, #0
   18ba8:	bne	18c20 <close_stdout@@Base+0x66c8>
   18bac:	ldr	r4, [sp, #40]	; 0x28
   18bb0:	cmp	r4, #0
   18bb4:	beq	18b4c <close_stdout@@Base+0x65f4>
   18bb8:	ldr	r0, [pc, #140]	; 18c4c <close_stdout@@Base+0x66f4>
   18bbc:	mov	r2, #179	; 0xb3
   18bc0:	ldr	r1, [pc, #136]	; 18c50 <close_stdout@@Base+0x66f8>
   18bc4:	ldr	r3, [pc, #136]	; 18c54 <close_stdout@@Base+0x66fc>
   18bc8:	add	r0, pc, r0
   18bcc:	add	r1, pc, r1
   18bd0:	add	r3, pc, r3
   18bd4:	bl	114d8 <__assert_fail@plt>
   18bd8:	ldr	r4, [sp, #28]
   18bdc:	mov	r0, r4
   18be0:	bl	11394 <strlen@plt>
   18be4:	strb	r6, [sp, #36]	; 0x24
   18be8:	str	r0, [sp, #32]
   18bec:	b	18b70 <close_stdout@@Base+0x6618>
   18bf0:	mov	r0, sl
   18bf4:	bl	11394 <strlen@plt>
   18bf8:	b	18ad8 <close_stdout@@Base+0x6580>
   18bfc:	ldr	r0, [pc, #84]	; 18c58 <close_stdout@@Base+0x6700>
   18c00:	mov	r2, #150	; 0x96
   18c04:	ldr	r1, [pc, #80]	; 18c5c <close_stdout@@Base+0x6704>
   18c08:	ldr	r3, [pc, #80]	; 18c60 <close_stdout@@Base+0x6708>
   18c0c:	add	r0, pc, r0
   18c10:	add	r1, pc, r1
   18c14:	add	r3, pc, r3
   18c18:	bl	114d8 <__assert_fail@plt>
   18c1c:	bl	11274 <__stack_chk_fail@plt>
   18c20:	ldr	r0, [pc, #60]	; 18c64 <close_stdout@@Base+0x670c>
   18c24:	mov	r2, #178	; 0xb2
   18c28:	ldr	r1, [pc, #56]	; 18c68 <close_stdout@@Base+0x6710>
   18c2c:	ldr	r3, [pc, #56]	; 18c6c <close_stdout@@Base+0x6714>
   18c30:	add	r0, pc, r0
   18c34:	add	r1, pc, r1
   18c38:	add	r3, pc, r3
   18c3c:	bl	114d8 <__assert_fail@plt>
   18c40:	andeq	r2, r1, r0, asr #11
   18c44:	andeq	r0, r0, r8, lsr #2
   18c48:	andeq	r0, r0, r4, lsr #2
   18c4c:	andeq	r1, r0, r4, asr #11
   18c50:	muleq	r0, r8, r5
   18c54:	andeq	r1, r0, r0, ror sl
   18c58:	andeq	r1, r0, r0, asr #10
   18c5c:	andeq	r1, r0, r4, asr r5
   18c60:	andeq	r1, r0, ip, lsr #20
   18c64:	andeq	r1, r0, r4, asr #10
   18c68:	andeq	r1, r0, r0, lsr r5
   18c6c:	andeq	r1, r0, r8, lsl #20
   18c70:	subs	r2, r1, #1
   18c74:	bxeq	lr
   18c78:	bcc	18e50 <close_stdout@@Base+0x68f8>
   18c7c:	cmp	r0, r1
   18c80:	bls	18e34 <close_stdout@@Base+0x68dc>
   18c84:	tst	r1, r2
   18c88:	beq	18e40 <close_stdout@@Base+0x68e8>
   18c8c:	clz	r3, r0
   18c90:	clz	r2, r1
   18c94:	sub	r3, r2, r3
   18c98:	rsbs	r3, r3, #31
   18c9c:	addne	r3, r3, r3, lsl #1
   18ca0:	mov	r2, #0
   18ca4:	addne	pc, pc, r3, lsl #2
   18ca8:	nop	{0}
   18cac:	cmp	r0, r1, lsl #31
   18cb0:	adc	r2, r2, r2
   18cb4:	subcs	r0, r0, r1, lsl #31
   18cb8:	cmp	r0, r1, lsl #30
   18cbc:	adc	r2, r2, r2
   18cc0:	subcs	r0, r0, r1, lsl #30
   18cc4:	cmp	r0, r1, lsl #29
   18cc8:	adc	r2, r2, r2
   18ccc:	subcs	r0, r0, r1, lsl #29
   18cd0:	cmp	r0, r1, lsl #28
   18cd4:	adc	r2, r2, r2
   18cd8:	subcs	r0, r0, r1, lsl #28
   18cdc:	cmp	r0, r1, lsl #27
   18ce0:	adc	r2, r2, r2
   18ce4:	subcs	r0, r0, r1, lsl #27
   18ce8:	cmp	r0, r1, lsl #26
   18cec:	adc	r2, r2, r2
   18cf0:	subcs	r0, r0, r1, lsl #26
   18cf4:	cmp	r0, r1, lsl #25
   18cf8:	adc	r2, r2, r2
   18cfc:	subcs	r0, r0, r1, lsl #25
   18d00:	cmp	r0, r1, lsl #24
   18d04:	adc	r2, r2, r2
   18d08:	subcs	r0, r0, r1, lsl #24
   18d0c:	cmp	r0, r1, lsl #23
   18d10:	adc	r2, r2, r2
   18d14:	subcs	r0, r0, r1, lsl #23
   18d18:	cmp	r0, r1, lsl #22
   18d1c:	adc	r2, r2, r2
   18d20:	subcs	r0, r0, r1, lsl #22
   18d24:	cmp	r0, r1, lsl #21
   18d28:	adc	r2, r2, r2
   18d2c:	subcs	r0, r0, r1, lsl #21
   18d30:	cmp	r0, r1, lsl #20
   18d34:	adc	r2, r2, r2
   18d38:	subcs	r0, r0, r1, lsl #20
   18d3c:	cmp	r0, r1, lsl #19
   18d40:	adc	r2, r2, r2
   18d44:	subcs	r0, r0, r1, lsl #19
   18d48:	cmp	r0, r1, lsl #18
   18d4c:	adc	r2, r2, r2
   18d50:	subcs	r0, r0, r1, lsl #18
   18d54:	cmp	r0, r1, lsl #17
   18d58:	adc	r2, r2, r2
   18d5c:	subcs	r0, r0, r1, lsl #17
   18d60:	cmp	r0, r1, lsl #16
   18d64:	adc	r2, r2, r2
   18d68:	subcs	r0, r0, r1, lsl #16
   18d6c:	cmp	r0, r1, lsl #15
   18d70:	adc	r2, r2, r2
   18d74:	subcs	r0, r0, r1, lsl #15
   18d78:	cmp	r0, r1, lsl #14
   18d7c:	adc	r2, r2, r2
   18d80:	subcs	r0, r0, r1, lsl #14
   18d84:	cmp	r0, r1, lsl #13
   18d88:	adc	r2, r2, r2
   18d8c:	subcs	r0, r0, r1, lsl #13
   18d90:	cmp	r0, r1, lsl #12
   18d94:	adc	r2, r2, r2
   18d98:	subcs	r0, r0, r1, lsl #12
   18d9c:	cmp	r0, r1, lsl #11
   18da0:	adc	r2, r2, r2
   18da4:	subcs	r0, r0, r1, lsl #11
   18da8:	cmp	r0, r1, lsl #10
   18dac:	adc	r2, r2, r2
   18db0:	subcs	r0, r0, r1, lsl #10
   18db4:	cmp	r0, r1, lsl #9
   18db8:	adc	r2, r2, r2
   18dbc:	subcs	r0, r0, r1, lsl #9
   18dc0:	cmp	r0, r1, lsl #8
   18dc4:	adc	r2, r2, r2
   18dc8:	subcs	r0, r0, r1, lsl #8
   18dcc:	cmp	r0, r1, lsl #7
   18dd0:	adc	r2, r2, r2
   18dd4:	subcs	r0, r0, r1, lsl #7
   18dd8:	cmp	r0, r1, lsl #6
   18ddc:	adc	r2, r2, r2
   18de0:	subcs	r0, r0, r1, lsl #6
   18de4:	cmp	r0, r1, lsl #5
   18de8:	adc	r2, r2, r2
   18dec:	subcs	r0, r0, r1, lsl #5
   18df0:	cmp	r0, r1, lsl #4
   18df4:	adc	r2, r2, r2
   18df8:	subcs	r0, r0, r1, lsl #4
   18dfc:	cmp	r0, r1, lsl #3
   18e00:	adc	r2, r2, r2
   18e04:	subcs	r0, r0, r1, lsl #3
   18e08:	cmp	r0, r1, lsl #2
   18e0c:	adc	r2, r2, r2
   18e10:	subcs	r0, r0, r1, lsl #2
   18e14:	cmp	r0, r1, lsl #1
   18e18:	adc	r2, r2, r2
   18e1c:	subcs	r0, r0, r1, lsl #1
   18e20:	cmp	r0, r1
   18e24:	adc	r2, r2, r2
   18e28:	subcs	r0, r0, r1
   18e2c:	mov	r0, r2
   18e30:	bx	lr
   18e34:	moveq	r0, #1
   18e38:	movne	r0, #0
   18e3c:	bx	lr
   18e40:	clz	r2, r1
   18e44:	rsb	r2, r2, #31
   18e48:	lsr	r0, r0, r2
   18e4c:	bx	lr
   18e50:	cmp	r0, #0
   18e54:	mvnne	r0, #0
   18e58:	b	18f00 <close_stdout@@Base+0x69a8>
   18e5c:	cmp	r1, #0
   18e60:	beq	18e50 <close_stdout@@Base+0x68f8>
   18e64:	push	{r0, r1, lr}
   18e68:	bl	18c70 <close_stdout@@Base+0x6718>
   18e6c:	pop	{r1, r2, lr}
   18e70:	mul	r3, r2, r0
   18e74:	sub	r1, r1, r3
   18e78:	bx	lr
   18e7c:	cmp	r3, #0
   18e80:	cmpeq	r2, #0
   18e84:	bne	18ea8 <close_stdout@@Base+0x6950>
   18e88:	cmp	r1, #0
   18e8c:	movlt	r1, #-2147483648	; 0x80000000
   18e90:	movlt	r0, #0
   18e94:	blt	18ea4 <close_stdout@@Base+0x694c>
   18e98:	cmpeq	r0, #0
   18e9c:	mvnne	r1, #-2147483648	; 0x80000000
   18ea0:	mvnne	r0, #0
   18ea4:	b	18f00 <close_stdout@@Base+0x69a8>
   18ea8:	sub	sp, sp, #8
   18eac:	push	{sp, lr}
   18eb0:	bl	18f10 <close_stdout@@Base+0x69b8>
   18eb4:	ldr	lr, [sp, #4]
   18eb8:	add	sp, sp, #8
   18ebc:	pop	{r2, r3}
   18ec0:	bx	lr
   18ec4:	cmp	r3, #0
   18ec8:	cmpeq	r2, #0
   18ecc:	bne	18ee4 <close_stdout@@Base+0x698c>
   18ed0:	cmp	r1, #0
   18ed4:	cmpeq	r0, #0
   18ed8:	mvnne	r1, #0
   18edc:	mvnne	r0, #0
   18ee0:	b	18f00 <close_stdout@@Base+0x69a8>
   18ee4:	sub	sp, sp, #8
   18ee8:	push	{sp, lr}
   18eec:	bl	18f4c <close_stdout@@Base+0x69f4>
   18ef0:	ldr	lr, [sp, #4]
   18ef4:	add	sp, sp, #8
   18ef8:	pop	{r2, r3}
   18efc:	bx	lr
   18f00:	push	{r1, lr}
   18f04:	mov	r0, #8
   18f08:	bl	111cc <raise@plt>
   18f0c:	pop	{r1, pc}
   18f10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18f14:	mov	r8, r2
   18f18:	mov	r6, r0
   18f1c:	mov	r7, r1
   18f20:	mov	sl, r3
   18f24:	ldr	r9, [sp, #32]
   18f28:	bl	18f88 <close_stdout@@Base+0x6a30>
   18f2c:	umull	r4, r5, r8, r0
   18f30:	mul	r8, r8, r1
   18f34:	mla	r2, r0, sl, r8
   18f38:	add	r5, r2, r5
   18f3c:	subs	r4, r6, r4
   18f40:	sbc	r5, r7, r5
   18f44:	strd	r4, [r9]
   18f48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18f4c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   18f50:	mov	r8, r2
   18f54:	mov	r6, r0
   18f58:	mov	r7, r1
   18f5c:	mov	r5, r3
   18f60:	ldr	r9, [sp, #32]
   18f64:	bl	19414 <close_stdout@@Base+0x6ebc>
   18f68:	mul	r3, r0, r5
   18f6c:	umull	r4, r5, r0, r8
   18f70:	mla	r8, r8, r1, r3
   18f74:	add	r5, r8, r5
   18f78:	subs	r4, r6, r4
   18f7c:	sbc	r5, r7, r5
   18f80:	strd	r4, [r9]
   18f84:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f8c:	rsbs	r4, r0, #0
   18f90:	rsc	r5, r1, #0
   18f94:	cmp	r1, #0
   18f98:	mvn	r6, #0
   18f9c:	sub	sp, sp, #12
   18fa0:	movge	r4, r0
   18fa4:	movge	r5, r1
   18fa8:	movge	r6, #0
   18fac:	cmp	r3, #0
   18fb0:	blt	191e8 <close_stdout@@Base+0x6c90>
   18fb4:	cmp	r3, #0
   18fb8:	mov	sl, r4
   18fbc:	mov	ip, r5
   18fc0:	mov	r0, r2
   18fc4:	mov	r1, r3
   18fc8:	mov	r8, r2
   18fcc:	mov	r7, r4
   18fd0:	mov	r9, r5
   18fd4:	bne	190cc <close_stdout@@Base+0x6b74>
   18fd8:	cmp	r2, r5
   18fdc:	bls	19108 <close_stdout@@Base+0x6bb0>
   18fe0:	clz	r3, r2
   18fe4:	cmp	r3, #0
   18fe8:	rsbne	r2, r3, #32
   18fec:	lslne	r8, r0, r3
   18ff0:	lsrne	r2, r4, r2
   18ff4:	lslne	r7, r4, r3
   18ff8:	orrne	r9, r2, r5, lsl r3
   18ffc:	lsr	r4, r8, #16
   19000:	uxth	sl, r8
   19004:	mov	r1, r4
   19008:	mov	r0, r9
   1900c:	bl	18c70 <close_stdout@@Base+0x6718>
   19010:	mov	r1, r4
   19014:	mov	fp, r0
   19018:	mov	r0, r9
   1901c:	bl	18e5c <close_stdout@@Base+0x6904>
   19020:	mul	r0, sl, fp
   19024:	lsr	r2, r7, #16
   19028:	orr	r1, r2, r1, lsl #16
   1902c:	cmp	r0, r1
   19030:	bls	19054 <close_stdout@@Base+0x6afc>
   19034:	adds	r1, r1, r8
   19038:	sub	r3, fp, #1
   1903c:	bcs	19050 <close_stdout@@Base+0x6af8>
   19040:	cmp	r0, r1
   19044:	subhi	fp, fp, #2
   19048:	addhi	r1, r1, r8
   1904c:	bhi	19054 <close_stdout@@Base+0x6afc>
   19050:	mov	fp, r3
   19054:	rsb	r9, r0, r1
   19058:	mov	r1, r4
   1905c:	uxth	r7, r7
   19060:	mov	r0, r9
   19064:	bl	18c70 <close_stdout@@Base+0x6718>
   19068:	mov	r1, r4
   1906c:	mov	r5, r0
   19070:	mov	r0, r9
   19074:	bl	18e5c <close_stdout@@Base+0x6904>
   19078:	mul	sl, sl, r5
   1907c:	orr	r1, r7, r1, lsl #16
   19080:	cmp	sl, r1
   19084:	bls	190a4 <close_stdout@@Base+0x6b4c>
   19088:	adds	r8, r1, r8
   1908c:	sub	r3, r5, #1
   19090:	bcs	190a0 <close_stdout@@Base+0x6b48>
   19094:	cmp	sl, r8
   19098:	subhi	r5, r5, #2
   1909c:	bhi	190a4 <close_stdout@@Base+0x6b4c>
   190a0:	mov	r5, r3
   190a4:	orr	r3, r5, fp, lsl #16
   190a8:	mov	r4, #0
   190ac:	cmp	r6, #0
   190b0:	mov	r0, r3
   190b4:	mov	r1, r4
   190b8:	beq	190c4 <close_stdout@@Base+0x6b6c>
   190bc:	rsbs	r0, r0, #0
   190c0:	rsc	r1, r1, #0
   190c4:	add	sp, sp, #12
   190c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190cc:	cmp	r3, r5
   190d0:	movhi	r4, #0
   190d4:	movhi	r3, r4
   190d8:	bhi	190ac <close_stdout@@Base+0x6b54>
   190dc:	clz	r5, r1
   190e0:	cmp	r5, #0
   190e4:	bne	192d4 <close_stdout@@Base+0x6d7c>
   190e8:	cmp	r1, ip
   190ec:	cmpcs	r2, sl
   190f0:	movhi	r4, #0
   190f4:	movls	r4, #1
   190f8:	movls	r3, #1
   190fc:	movls	r4, r5
   19100:	movhi	r3, r4
   19104:	b	190ac <close_stdout@@Base+0x6b54>
   19108:	cmp	r2, #0
   1910c:	bne	19120 <close_stdout@@Base+0x6bc8>
   19110:	mov	r1, r2
   19114:	mov	r0, #1
   19118:	bl	18c70 <close_stdout@@Base+0x6718>
   1911c:	mov	r8, r0
   19120:	clz	r3, r8
   19124:	cmp	r3, #0
   19128:	bne	191f8 <close_stdout@@Base+0x6ca0>
   1912c:	rsb	r9, r8, r9
   19130:	lsr	r5, r8, #16
   19134:	uxth	sl, r8
   19138:	mov	r4, #1
   1913c:	mov	r1, r5
   19140:	mov	r0, r9
   19144:	bl	18c70 <close_stdout@@Base+0x6718>
   19148:	mov	r1, r5
   1914c:	mov	fp, r0
   19150:	mov	r0, r9
   19154:	bl	18e5c <close_stdout@@Base+0x6904>
   19158:	mul	r0, sl, fp
   1915c:	lsr	r2, r7, #16
   19160:	orr	r1, r2, r1, lsl #16
   19164:	cmp	r0, r1
   19168:	bls	19188 <close_stdout@@Base+0x6c30>
   1916c:	adds	r1, r1, r8
   19170:	sub	r3, fp, #1
   19174:	bcs	193f4 <close_stdout@@Base+0x6e9c>
   19178:	cmp	r0, r1
   1917c:	subhi	fp, fp, #2
   19180:	addhi	r1, r1, r8
   19184:	bls	193f4 <close_stdout@@Base+0x6e9c>
   19188:	rsb	r2, r0, r1
   1918c:	mov	r1, r5
   19190:	str	r2, [sp]
   19194:	uxth	r7, r7
   19198:	mov	r0, r2
   1919c:	bl	18c70 <close_stdout@@Base+0x6718>
   191a0:	ldr	r2, [sp]
   191a4:	mov	r1, r5
   191a8:	mov	r9, r0
   191ac:	mov	r0, r2
   191b0:	bl	18e5c <close_stdout@@Base+0x6904>
   191b4:	mul	sl, sl, r9
   191b8:	orr	r1, r7, r1, lsl #16
   191bc:	cmp	sl, r1
   191c0:	bls	191e0 <close_stdout@@Base+0x6c88>
   191c4:	adds	r8, r1, r8
   191c8:	sub	r3, r9, #1
   191cc:	bcs	191dc <close_stdout@@Base+0x6c84>
   191d0:	cmp	sl, r8
   191d4:	subhi	r9, r9, #2
   191d8:	bhi	191e0 <close_stdout@@Base+0x6c88>
   191dc:	mov	r9, r3
   191e0:	orr	r3, r9, fp, lsl #16
   191e4:	b	190ac <close_stdout@@Base+0x6b54>
   191e8:	mvn	r6, r6
   191ec:	rsbs	r2, r2, #0
   191f0:	rsc	r3, r3, #0
   191f4:	b	18fb4 <close_stdout@@Base+0x6a5c>
   191f8:	lsl	r8, r8, r3
   191fc:	rsb	fp, r3, #32
   19200:	lsr	r4, r9, fp
   19204:	lsr	fp, r7, fp
   19208:	lsr	r5, r8, #16
   1920c:	orr	fp, fp, r9, lsl r3
   19210:	mov	r0, r4
   19214:	lsl	r7, r7, r3
   19218:	mov	r1, r5
   1921c:	uxth	sl, r8
   19220:	bl	18c70 <close_stdout@@Base+0x6718>
   19224:	mov	r1, r5
   19228:	mov	r3, r0
   1922c:	mov	r0, r4
   19230:	str	r3, [sp]
   19234:	bl	18e5c <close_stdout@@Base+0x6904>
   19238:	ldr	r3, [sp]
   1923c:	lsr	r2, fp, #16
   19240:	mul	r0, sl, r3
   19244:	orr	r1, r2, r1, lsl #16
   19248:	cmp	r0, r1
   1924c:	bls	1926c <close_stdout@@Base+0x6d14>
   19250:	adds	r1, r1, r8
   19254:	sub	r2, r3, #1
   19258:	bcs	1940c <close_stdout@@Base+0x6eb4>
   1925c:	cmp	r0, r1
   19260:	subhi	r3, r3, #2
   19264:	addhi	r1, r1, r8
   19268:	bls	1940c <close_stdout@@Base+0x6eb4>
   1926c:	rsb	r9, r0, r1
   19270:	mov	r1, r5
   19274:	str	r3, [sp]
   19278:	uxth	fp, fp
   1927c:	mov	r0, r9
   19280:	bl	18c70 <close_stdout@@Base+0x6718>
   19284:	mov	r1, r5
   19288:	mov	r4, r0
   1928c:	mov	r0, r9
   19290:	bl	18e5c <close_stdout@@Base+0x6904>
   19294:	mul	r9, sl, r4
   19298:	ldr	r3, [sp]
   1929c:	orr	r1, fp, r1, lsl #16
   192a0:	cmp	r9, r1
   192a4:	bls	192c8 <close_stdout@@Base+0x6d70>
   192a8:	adds	r1, r1, r8
   192ac:	sub	r2, r4, #1
   192b0:	bcs	192c4 <close_stdout@@Base+0x6d6c>
   192b4:	cmp	r9, r1
   192b8:	subhi	r4, r4, #2
   192bc:	addhi	r1, r1, r8
   192c0:	bhi	192c8 <close_stdout@@Base+0x6d70>
   192c4:	mov	r4, r2
   192c8:	rsb	r9, r9, r1
   192cc:	orr	r4, r4, r3, lsl #16
   192d0:	b	1913c <close_stdout@@Base+0x6be4>
   192d4:	rsb	sl, r5, #32
   192d8:	lsl	r3, r2, r5
   192dc:	lsr	r0, r2, sl
   192e0:	lsr	r2, ip, sl
   192e4:	orr	r4, r0, r1, lsl r5
   192e8:	lsr	sl, r7, sl
   192ec:	mov	r0, r2
   192f0:	orr	sl, sl, ip, lsl r5
   192f4:	lsr	r9, r4, #16
   192f8:	str	r3, [sp, #4]
   192fc:	str	r2, [sp]
   19300:	uxth	fp, r4
   19304:	mov	r1, r9
   19308:	bl	18c70 <close_stdout@@Base+0x6718>
   1930c:	ldr	r2, [sp]
   19310:	mov	r1, r9
   19314:	mov	r8, r0
   19318:	mov	r0, r2
   1931c:	bl	18e5c <close_stdout@@Base+0x6904>
   19320:	mul	r0, fp, r8
   19324:	lsr	r2, sl, #16
   19328:	orr	r1, r2, r1, lsl #16
   1932c:	cmp	r0, r1
   19330:	bls	19350 <close_stdout@@Base+0x6df8>
   19334:	adds	r1, r1, r4
   19338:	sub	r2, r8, #1
   1933c:	bcs	19404 <close_stdout@@Base+0x6eac>
   19340:	cmp	r0, r1
   19344:	subhi	r8, r8, #2
   19348:	addhi	r1, r1, r4
   1934c:	bls	19404 <close_stdout@@Base+0x6eac>
   19350:	rsb	ip, r0, r1
   19354:	mov	r1, r9
   19358:	str	ip, [sp]
   1935c:	mov	r0, ip
   19360:	bl	18c70 <close_stdout@@Base+0x6718>
   19364:	ldr	ip, [sp]
   19368:	mov	r1, r9
   1936c:	mov	r2, r0
   19370:	mov	r0, ip
   19374:	str	r2, [sp]
   19378:	bl	18e5c <close_stdout@@Base+0x6904>
   1937c:	ldr	r2, [sp]
   19380:	uxth	ip, sl
   19384:	mul	fp, fp, r2
   19388:	orr	ip, ip, r1, lsl #16
   1938c:	cmp	fp, ip
   19390:	bls	193b0 <close_stdout@@Base+0x6e58>
   19394:	adds	ip, ip, r4
   19398:	sub	r1, r2, #1
   1939c:	bcs	193fc <close_stdout@@Base+0x6ea4>
   193a0:	cmp	fp, ip
   193a4:	subhi	r2, r2, #2
   193a8:	addhi	ip, ip, r4
   193ac:	bls	193fc <close_stdout@@Base+0x6ea4>
   193b0:	ldr	r0, [sp, #4]
   193b4:	orr	r1, r2, r8, lsl #16
   193b8:	rsb	fp, fp, ip
   193bc:	umull	r2, r3, r1, r0
   193c0:	cmp	fp, r3
   193c4:	bcc	193e8 <close_stdout@@Base+0x6e90>
   193c8:	movne	r4, #0
   193cc:	moveq	r4, #1
   193d0:	cmp	r2, r7, lsl r5
   193d4:	movls	r4, #0
   193d8:	andhi	r4, r4, #1
   193dc:	cmp	r4, #0
   193e0:	moveq	r3, r1
   193e4:	beq	190ac <close_stdout@@Base+0x6b54>
   193e8:	sub	r3, r1, #1
   193ec:	mov	r4, #0
   193f0:	b	190ac <close_stdout@@Base+0x6b54>
   193f4:	mov	fp, r3
   193f8:	b	19188 <close_stdout@@Base+0x6c30>
   193fc:	mov	r2, r1
   19400:	b	193b0 <close_stdout@@Base+0x6e58>
   19404:	mov	r8, r2
   19408:	b	19350 <close_stdout@@Base+0x6df8>
   1940c:	mov	r3, r2
   19410:	b	1926c <close_stdout@@Base+0x6d14>
   19414:	cmp	r3, #0
   19418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1941c:	mov	r6, r0
   19420:	sub	sp, sp, #12
   19424:	mov	r5, r1
   19428:	mov	r7, r0
   1942c:	mov	r4, r2
   19430:	mov	r8, r1
   19434:	bne	19514 <close_stdout@@Base+0x6fbc>
   19438:	cmp	r2, r1
   1943c:	bls	19550 <close_stdout@@Base+0x6ff8>
   19440:	clz	r3, r2
   19444:	cmp	r3, #0
   19448:	rsbne	r8, r3, #32
   1944c:	lslne	r4, r2, r3
   19450:	lsrne	r8, r0, r8
   19454:	lslne	r7, r0, r3
   19458:	orrne	r8, r8, r1, lsl r3
   1945c:	lsr	r5, r4, #16
   19460:	uxth	sl, r4
   19464:	mov	r1, r5
   19468:	mov	r0, r8
   1946c:	bl	18c70 <close_stdout@@Base+0x6718>
   19470:	mov	r1, r5
   19474:	mov	r9, r0
   19478:	mov	r0, r8
   1947c:	bl	18e5c <close_stdout@@Base+0x6904>
   19480:	mul	r0, sl, r9
   19484:	lsr	r3, r7, #16
   19488:	orr	r1, r3, r1, lsl #16
   1948c:	cmp	r0, r1
   19490:	bls	194b4 <close_stdout@@Base+0x6f5c>
   19494:	adds	r1, r1, r4
   19498:	sub	r2, r9, #1
   1949c:	bcs	194b0 <close_stdout@@Base+0x6f58>
   194a0:	cmp	r0, r1
   194a4:	subhi	r9, r9, #2
   194a8:	addhi	r1, r1, r4
   194ac:	bhi	194b4 <close_stdout@@Base+0x6f5c>
   194b0:	mov	r9, r2
   194b4:	rsb	r8, r0, r1
   194b8:	mov	r1, r5
   194bc:	uxth	r7, r7
   194c0:	mov	r0, r8
   194c4:	bl	18c70 <close_stdout@@Base+0x6718>
   194c8:	mov	r1, r5
   194cc:	mov	r6, r0
   194d0:	mov	r0, r8
   194d4:	bl	18e5c <close_stdout@@Base+0x6904>
   194d8:	mul	sl, sl, r6
   194dc:	orr	r1, r7, r1, lsl #16
   194e0:	cmp	sl, r1
   194e4:	bls	19500 <close_stdout@@Base+0x6fa8>
   194e8:	adds	r4, r1, r4
   194ec:	sub	r3, r6, #1
   194f0:	bcs	197fc <close_stdout@@Base+0x72a4>
   194f4:	cmp	sl, r4
   194f8:	subhi	r6, r6, #2
   194fc:	bls	197fc <close_stdout@@Base+0x72a4>
   19500:	orr	r0, r6, r9, lsl #16
   19504:	mov	r6, #0
   19508:	mov	r1, r6
   1950c:	add	sp, sp, #12
   19510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19514:	cmp	r3, r1
   19518:	movhi	r6, #0
   1951c:	movhi	r0, r6
   19520:	bhi	19508 <close_stdout@@Base+0x6fb0>
   19524:	clz	r7, r3
   19528:	cmp	r7, #0
   1952c:	bne	1962c <close_stdout@@Base+0x70d4>
   19530:	cmp	r3, r1
   19534:	cmpcs	r2, r6
   19538:	movhi	r6, #0
   1953c:	movls	r6, #1
   19540:	movls	r0, #1
   19544:	movls	r6, r7
   19548:	movhi	r0, r6
   1954c:	b	19508 <close_stdout@@Base+0x6fb0>
   19550:	cmp	r2, #0
   19554:	bne	19568 <close_stdout@@Base+0x7010>
   19558:	mov	r1, r2
   1955c:	mov	r0, #1
   19560:	bl	18c70 <close_stdout@@Base+0x6718>
   19564:	mov	r4, r0
   19568:	clz	r3, r4
   1956c:	cmp	r3, #0
   19570:	bne	19728 <close_stdout@@Base+0x71d0>
   19574:	rsb	r5, r4, r5
   19578:	lsr	r8, r4, #16
   1957c:	uxth	sl, r4
   19580:	mov	r6, #1
   19584:	mov	r1, r8
   19588:	mov	r0, r5
   1958c:	bl	18c70 <close_stdout@@Base+0x6718>
   19590:	mov	r1, r8
   19594:	mov	r9, r0
   19598:	mov	r0, r5
   1959c:	bl	18e5c <close_stdout@@Base+0x6904>
   195a0:	mul	r0, sl, r9
   195a4:	lsr	r3, r7, #16
   195a8:	orr	r1, r3, r1, lsl #16
   195ac:	cmp	r0, r1
   195b0:	bls	195d0 <close_stdout@@Base+0x7078>
   195b4:	adds	r1, r1, r4
   195b8:	sub	r2, r9, #1
   195bc:	bcs	19804 <close_stdout@@Base+0x72ac>
   195c0:	cmp	r0, r1
   195c4:	subhi	r9, r9, #2
   195c8:	addhi	r1, r1, r4
   195cc:	bls	19804 <close_stdout@@Base+0x72ac>
   195d0:	rsb	fp, r0, r1
   195d4:	mov	r1, r8
   195d8:	uxth	r7, r7
   195dc:	mov	r0, fp
   195e0:	bl	18c70 <close_stdout@@Base+0x6718>
   195e4:	mov	r1, r8
   195e8:	mov	r5, r0
   195ec:	mov	r0, fp
   195f0:	bl	18e5c <close_stdout@@Base+0x6904>
   195f4:	mul	sl, sl, r5
   195f8:	orr	r1, r7, r1, lsl #16
   195fc:	cmp	sl, r1
   19600:	bls	1961c <close_stdout@@Base+0x70c4>
   19604:	adds	r4, r1, r4
   19608:	sub	r3, r5, #1
   1960c:	bcs	1980c <close_stdout@@Base+0x72b4>
   19610:	cmp	sl, r4
   19614:	subhi	r5, r5, #2
   19618:	bls	1980c <close_stdout@@Base+0x72b4>
   1961c:	orr	r0, r5, r9, lsl #16
   19620:	mov	r1, r6
   19624:	add	sp, sp, #12
   19628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1962c:	rsb	r1, r7, #32
   19630:	lsl	r0, r2, r7
   19634:	lsr	r2, r2, r1
   19638:	lsr	fp, r5, r1
   1963c:	orr	r8, r2, r3, lsl r7
   19640:	lsr	r1, r6, r1
   19644:	str	r0, [sp, #4]
   19648:	orr	r5, r1, r5, lsl r7
   1964c:	lsr	r9, r8, #16
   19650:	mov	r0, fp
   19654:	uxth	sl, r8
   19658:	mov	r1, r9
   1965c:	bl	18c70 <close_stdout@@Base+0x6718>
   19660:	mov	r1, r9
   19664:	mov	r4, r0
   19668:	mov	r0, fp
   1966c:	bl	18e5c <close_stdout@@Base+0x6904>
   19670:	mul	r0, sl, r4
   19674:	lsr	ip, r5, #16
   19678:	orr	r1, ip, r1, lsl #16
   1967c:	cmp	r0, r1
   19680:	bls	19694 <close_stdout@@Base+0x713c>
   19684:	adds	r1, r1, r8
   19688:	sub	r2, r4, #1
   1968c:	bcc	19828 <close_stdout@@Base+0x72d0>
   19690:	mov	r4, r2
   19694:	rsb	ip, r0, r1
   19698:	mov	r1, r9
   1969c:	str	ip, [sp]
   196a0:	uxth	r5, r5
   196a4:	mov	r0, ip
   196a8:	bl	18c70 <close_stdout@@Base+0x6718>
   196ac:	ldr	ip, [sp]
   196b0:	mov	r1, r9
   196b4:	mov	fp, r0
   196b8:	mov	r0, ip
   196bc:	bl	18e5c <close_stdout@@Base+0x6904>
   196c0:	mul	sl, sl, fp
   196c4:	orr	r1, r5, r1, lsl #16
   196c8:	cmp	sl, r1
   196cc:	bls	196e0 <close_stdout@@Base+0x7188>
   196d0:	adds	r1, r1, r8
   196d4:	sub	r2, fp, #1
   196d8:	bcc	19814 <close_stdout@@Base+0x72bc>
   196dc:	mov	fp, r2
   196e0:	ldr	r3, [sp, #4]
   196e4:	orr	r0, fp, r4, lsl #16
   196e8:	rsb	sl, sl, r1
   196ec:	umull	r4, r5, r0, r3
   196f0:	cmp	sl, r5
   196f4:	bcc	19714 <close_stdout@@Base+0x71bc>
   196f8:	movne	r3, #0
   196fc:	moveq	r3, #1
   19700:	cmp	r4, r6, lsl r7
   19704:	movls	r6, #0
   19708:	andhi	r6, r3, #1
   1970c:	cmp	r6, #0
   19710:	beq	19508 <close_stdout@@Base+0x6fb0>
   19714:	mov	r6, #0
   19718:	sub	r0, r0, #1
   1971c:	mov	r1, r6
   19720:	add	sp, sp, #12
   19724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19728:	lsl	r4, r4, r3
   1972c:	rsb	r9, r3, #32
   19730:	lsr	r2, r5, r9
   19734:	lsr	r9, r6, r9
   19738:	lsr	r8, r4, #16
   1973c:	orr	r9, r9, r5, lsl r3
   19740:	mov	r0, r2
   19744:	lsl	r7, r6, r3
   19748:	mov	r1, r8
   1974c:	str	r2, [sp]
   19750:	bl	18c70 <close_stdout@@Base+0x6718>
   19754:	ldr	r2, [sp]
   19758:	mov	r1, r8
   1975c:	uxth	sl, r4
   19760:	mov	fp, r0
   19764:	mov	r0, r2
   19768:	bl	18e5c <close_stdout@@Base+0x6904>
   1976c:	mul	r0, sl, fp
   19770:	lsr	r3, r9, #16
   19774:	orr	r1, r3, r1, lsl #16
   19778:	cmp	r0, r1
   1977c:	bls	1979c <close_stdout@@Base+0x7244>
   19780:	adds	r1, r1, r4
   19784:	sub	r3, fp, #1
   19788:	bcs	1983c <close_stdout@@Base+0x72e4>
   1978c:	cmp	r0, r1
   19790:	subhi	fp, fp, #2
   19794:	addhi	r1, r1, r4
   19798:	bls	1983c <close_stdout@@Base+0x72e4>
   1979c:	rsb	r5, r0, r1
   197a0:	mov	r1, r8
   197a4:	uxth	r9, r9
   197a8:	mov	r0, r5
   197ac:	bl	18c70 <close_stdout@@Base+0x6718>
   197b0:	mov	r1, r8
   197b4:	mov	r6, r0
   197b8:	mov	r0, r5
   197bc:	bl	18e5c <close_stdout@@Base+0x6904>
   197c0:	mul	r5, sl, r6
   197c4:	orr	r1, r9, r1, lsl #16
   197c8:	cmp	r5, r1
   197cc:	bls	197f0 <close_stdout@@Base+0x7298>
   197d0:	adds	r1, r1, r4
   197d4:	sub	r3, r6, #1
   197d8:	bcs	197ec <close_stdout@@Base+0x7294>
   197dc:	cmp	r5, r1
   197e0:	subhi	r6, r6, #2
   197e4:	addhi	r1, r1, r4
   197e8:	bhi	197f0 <close_stdout@@Base+0x7298>
   197ec:	mov	r6, r3
   197f0:	rsb	r5, r5, r1
   197f4:	orr	r6, r6, fp, lsl #16
   197f8:	b	19584 <close_stdout@@Base+0x702c>
   197fc:	mov	r6, r3
   19800:	b	19500 <close_stdout@@Base+0x6fa8>
   19804:	mov	r9, r2
   19808:	b	195d0 <close_stdout@@Base+0x7078>
   1980c:	mov	r5, r3
   19810:	b	1961c <close_stdout@@Base+0x70c4>
   19814:	cmp	sl, r1
   19818:	subhi	fp, fp, #2
   1981c:	addhi	r1, r1, r8
   19820:	bhi	196e0 <close_stdout@@Base+0x7188>
   19824:	b	196dc <close_stdout@@Base+0x7184>
   19828:	cmp	r0, r1
   1982c:	subhi	r4, r4, #2
   19830:	addhi	r1, r1, r8
   19834:	bhi	19694 <close_stdout@@Base+0x713c>
   19838:	b	19690 <close_stdout@@Base+0x7138>
   1983c:	mov	fp, r3
   19840:	b	1979c <close_stdout@@Base+0x7244>
   19844:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19848:	mov	r7, r0
   1984c:	ldr	r6, [pc, #76]	; 198a0 <close_stdout@@Base+0x7348>
   19850:	mov	r8, r1
   19854:	ldr	r5, [pc, #72]	; 198a4 <close_stdout@@Base+0x734c>
   19858:	mov	r9, r2
   1985c:	add	r6, pc, r6
   19860:	bl	11188 <fdopen@plt-0x20>
   19864:	add	r5, pc, r5
   19868:	rsb	r6, r5, r6
   1986c:	asrs	r6, r6, #2
   19870:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   19874:	sub	r5, r5, #4
   19878:	mov	r4, #0
   1987c:	add	r4, r4, #1
   19880:	ldr	r3, [r5, #4]!
   19884:	mov	r0, r7
   19888:	mov	r1, r8
   1988c:	mov	r2, r9
   19890:	blx	r3
   19894:	cmp	r4, r6
   19898:	bne	1987c <close_stdout@@Base+0x7324>
   1989c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   198a0:	andeq	r1, r1, r8, lsl #12
   198a4:	strdeq	r1, [r1], -ip
   198a8:	bx	lr
   198ac:	ldr	r3, [pc, #28]	; 198d0 <close_stdout@@Base+0x7378>
   198b0:	mov	r1, #0
   198b4:	ldr	r2, [pc, #24]	; 198d4 <close_stdout@@Base+0x737c>
   198b8:	add	r3, pc, r3
   198bc:	ldr	r3, [r3, r2]
   198c0:	cmp	r3, #0
   198c4:	ldrne	r2, [r3]
   198c8:	moveq	r2, r3
   198cc:	b	113dc <__cxa_atexit@plt>
   198d0:	andeq	r1, r1, r0, asr #14
   198d4:	andeq	r0, r0, r0, asr #2

Disassembly of section .fini:

000198d8 <.fini>:
   198d8:	push	{r3, lr}
   198dc:	pop	{r3, pc}
