
centos-preinstalled/python2.7:     file format elf32-littlearm


Disassembly of section .init:

00010608 <_init@@Base>:
   10608:	push	{r3, lr}
   1060c:	bl	10698 <_start@@Base+0x3c>
   10610:	pop	{r3, pc}

Disassembly of section .plt:

00010614 <abort@plt-0x14>:
   10614:	push	{lr}		; (str lr, [sp, #-4]!)
   10618:	ldr	lr, [pc, #4]	; 10624 <_init@@Base+0x1c>
   1061c:	add	lr, pc, lr
   10620:	ldr	pc, [lr, #8]!
   10624:	ldrdeq	r0, [r1], -ip

00010628 <abort@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #16, 20	; 0x10000
   10630:	ldr	pc, [ip, #2524]!	; 0x9dc

00010634 <__libc_start_main@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #16, 20	; 0x10000
   1063c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010640 <__gmon_start__@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #16, 20	; 0x10000
   10648:	ldr	pc, [ip, #2508]!	; 0x9cc

0001064c <Py_Main@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #16, 20	; 0x10000
   10654:	ldr	pc, [ip, #2500]!	; 0x9c4

Disassembly of section .text:

00010658 <main@@Base>:
   10658:	b	1064c <Py_Main@plt>

0001065c <_start@@Base>:
   1065c:	mov	fp, #0
   10660:	mov	lr, #0
   10664:	pop	{r1}		; (ldr r1, [sp], #4)
   10668:	mov	r2, sp
   1066c:	push	{r2}		; (str r2, [sp, #-4]!)
   10670:	push	{r0}		; (str r0, [sp, #-4]!)
   10674:	ldr	ip, [pc, #16]	; 1068c <_start@@Base+0x30>
   10678:	push	{ip}		; (str ip, [sp, #-4]!)
   1067c:	ldr	r0, [pc, #12]	; 10690 <_start@@Base+0x34>
   10680:	ldr	r3, [pc, #12]	; 10694 <_start@@Base+0x38>
   10684:	bl	10634 <__libc_start_main@plt>
   10688:	bl	10628 <abort@plt>
   1068c:	strdeq	r0, [r1], -r4
   10690:	andeq	r0, r1, r8, asr r6
   10694:	muleq	r1, r0, r7
   10698:	ldr	r3, [pc, #20]	; 106b4 <_start@@Base+0x58>
   1069c:	ldr	r2, [pc, #20]	; 106b8 <_start@@Base+0x5c>
   106a0:	add	r3, pc, r3
   106a4:	ldr	r2, [r3, r2]
   106a8:	cmp	r2, #0
   106ac:	bxeq	lr
   106b0:	b	10640 <__gmon_start__@plt>
   106b4:	andeq	r0, r1, r8, asr r9
   106b8:	andeq	r0, r0, ip, lsl r0
   106bc:	push	{r3, lr}
   106c0:	movw	r0, #4132	; 0x1024
   106c4:	ldr	r3, [pc, #36]	; 106f0 <_start@@Base+0x94>
   106c8:	movt	r0, #2
   106cc:	rsb	r3, r0, r3
   106d0:	cmp	r3, #6
   106d4:	popls	{r3, pc}
   106d8:	movw	r3, #0
   106dc:	movt	r3, #0
   106e0:	cmp	r3, #0
   106e4:	popeq	{r3, pc}
   106e8:	blx	r3
   106ec:	pop	{r3, pc}
   106f0:	andeq	r1, r2, r7, lsr #32
   106f4:	push	{r3, lr}
   106f8:	movw	r0, #4132	; 0x1024
   106fc:	movw	r3, #4132	; 0x1024
   10700:	movt	r0, #2
   10704:	movt	r3, #2
   10708:	rsb	r3, r0, r3
   1070c:	asr	r3, r3, #2
   10710:	add	r3, r3, r3, lsr #31
   10714:	asrs	r1, r3, #1
   10718:	popeq	{r3, pc}
   1071c:	movw	r2, #0
   10720:	movt	r2, #0
   10724:	cmp	r2, #0
   10728:	popeq	{r3, pc}
   1072c:	blx	r2
   10730:	pop	{r3, pc}
   10734:	push	{r4, lr}
   10738:	movw	r4, #4132	; 0x1024
   1073c:	movt	r4, #2
   10740:	ldrb	r3, [r4]
   10744:	cmp	r3, #0
   10748:	popne	{r4, pc}
   1074c:	bl	106bc <_start@@Base+0x60>
   10750:	mov	r3, #1
   10754:	strb	r3, [r4]
   10758:	pop	{r4, pc}
   1075c:	movw	r0, #3812	; 0xee4
   10760:	movt	r0, #2
   10764:	push	{r3, lr}
   10768:	ldr	r3, [r0]
   1076c:	cmp	r3, #0
   10770:	beq	10788 <_start@@Base+0x12c>
   10774:	movw	r3, #0
   10778:	movt	r3, #0
   1077c:	cmp	r3, #0
   10780:	beq	10788 <_start@@Base+0x12c>
   10784:	blx	r3
   10788:	pop	{r3, lr}
   1078c:	b	106f4 <_start@@Base+0x98>

00010790 <__libc_csu_init@@Base>:
   10790:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10794:	mov	r7, r0
   10798:	ldr	r6, [pc, #76]	; 107ec <__libc_csu_init@@Base+0x5c>
   1079c:	mov	r8, r1
   107a0:	ldr	r5, [pc, #72]	; 107f0 <__libc_csu_init@@Base+0x60>
   107a4:	mov	r9, r2
   107a8:	add	r6, pc, r6
   107ac:	bl	10608 <_init@@Base>
   107b0:	add	r5, pc, r5
   107b4:	rsb	r6, r5, r6
   107b8:	asrs	r6, r6, #2
   107bc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   107c0:	sub	r5, r5, #4
   107c4:	mov	r4, #0
   107c8:	add	r4, r4, #1
   107cc:	ldr	r3, [r5, #4]!
   107d0:	mov	r0, r7
   107d4:	mov	r1, r8
   107d8:	mov	r2, r9
   107dc:	blx	r3
   107e0:	cmp	r4, r6
   107e4:	bne	107c8 <__libc_csu_init@@Base+0x38>
   107e8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   107ec:	andeq	r0, r1, r0, lsr r7
   107f0:	andeq	r0, r1, r4, lsr #14

000107f4 <__libc_csu_fini@@Base>:
   107f4:	bx	lr

Disassembly of section .fini:

000107f8 <_fini@@Base>:
   107f8:	push	{r3, lr}
   107fc:	pop	{r3, pc}
