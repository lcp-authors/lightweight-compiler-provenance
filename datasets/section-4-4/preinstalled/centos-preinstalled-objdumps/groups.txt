
centos-preinstalled/groups:     file format elf32-littlearm


Disassembly of section .init:

00010f58 <.init>:
   10f58:	push	{r3, lr}
   10f5c:	bl	11614 <getgrgid@plt+0x3d8>
   10f60:	pop	{r3, pc}

Disassembly of section .plt:

00010f64 <fdopen@plt-0x14>:
   10f64:	push	{lr}		; (str lr, [sp, #-4]!)
   10f68:	ldr	lr, [pc, #4]	; 10f74 <fdopen@plt-0x4>
   10f6c:	add	lr, pc, lr
   10f70:	ldr	pc, [lr, #8]!
   10f74:	andeq	r5, r1, ip, lsl #1

00010f78 <fdopen@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #140]!	; 0x8c

00010f84 <calloc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #132]!	; 0x84

00010f90 <fputs_unlocked@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #124]!	; 0x7c

00010f9c <raise@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #116]!	; 0x74

00010fa8 <getpwnam@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #108]!	; 0x6c

00010fb4 <strcmp@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #100]!	; 0x64

00010fc0 <getpwuid@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #92]!	; 0x5c

00010fcc <fflush@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #84]!	; 0x54

00010fd8 <getuid@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #76]!	; 0x4c

00010fe4 <free@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #68]!	; 0x44

00010ff0 <_exit@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #60]!	; 0x3c

00010ffc <memcpy@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #52]!	; 0x34

00011008 <mbsinit@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #44]!	; 0x2c

00011014 <memcmp@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #36]!	; 0x24

00011020 <dcgettext@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #86016	; 0x15000
   11028:	ldr	pc, [ip, #28]!

0001102c <__stack_chk_fail@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #86016	; 0x15000
   11034:	ldr	pc, [ip, #20]!

00011038 <realloc@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #86016	; 0x15000
   11040:	ldr	pc, [ip, #12]!

00011044 <textdomain@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #86016	; 0x15000
   1104c:	ldr	pc, [ip, #4]!

00011050 <iswprint@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #20, 20	; 0x14000
   11058:	ldr	pc, [ip, #4092]!	; 0xffc

0001105c <getegid@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #20, 20	; 0x14000
   11064:	ldr	pc, [ip, #4084]!	; 0xff4

00011068 <fwrite@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #20, 20	; 0x14000
   11070:	ldr	pc, [ip, #4076]!	; 0xfec

00011074 <lseek64@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #20, 20	; 0x14000
   1107c:	ldr	pc, [ip, #4068]!	; 0xfe4

00011080 <__ctype_get_mb_cur_max@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #20, 20	; 0x14000
   11088:	ldr	pc, [ip, #4060]!	; 0xfdc

0001108c <strcpy@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #20, 20	; 0x14000
   11094:	ldr	pc, [ip, #4052]!	; 0xfd4

00011098 <__fpending@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #20, 20	; 0x14000
   110a0:	ldr	pc, [ip, #4044]!	; 0xfcc

000110a4 <mbrtowc@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #20, 20	; 0x14000
   110ac:	ldr	pc, [ip, #4036]!	; 0xfc4

000110b0 <error@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #20, 20	; 0x14000
   110b8:	ldr	pc, [ip, #4028]!	; 0xfbc

000110bc <open64@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #20, 20	; 0x14000
   110c4:	ldr	pc, [ip, #4020]!	; 0xfb4

000110c8 <getenv@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #20, 20	; 0x14000
   110d0:	ldr	pc, [ip, #4012]!	; 0xfac

000110d4 <malloc@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #20, 20	; 0x14000
   110dc:	ldr	pc, [ip, #4004]!	; 0xfa4

000110e0 <__libc_start_main@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #20, 20	; 0x14000
   110e8:	ldr	pc, [ip, #3996]!	; 0xf9c

000110ec <__freading@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #20, 20	; 0x14000
   110f4:	ldr	pc, [ip, #3988]!	; 0xf94

000110f8 <__gmon_start__@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #20, 20	; 0x14000
   11100:	ldr	pc, [ip, #3980]!	; 0xf8c

00011104 <getopt_long@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #20, 20	; 0x14000
   1110c:	ldr	pc, [ip, #3972]!	; 0xf84

00011110 <__ctype_b_loc@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #20, 20	; 0x14000
   11118:	ldr	pc, [ip, #3964]!	; 0xf7c

0001111c <exit@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #20, 20	; 0x14000
   11124:	ldr	pc, [ip, #3956]!	; 0xf74

00011128 <strlen@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #20, 20	; 0x14000
   11130:	ldr	pc, [ip, #3948]!	; 0xf6c

00011134 <ungetc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #20, 20	; 0x14000
   1113c:	ldr	pc, [ip, #3940]!	; 0xf64

00011140 <__errno_location@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #20, 20	; 0x14000
   11148:	ldr	pc, [ip, #3932]!	; 0xf5c

0001114c <__cxa_atexit@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #20, 20	; 0x14000
   11154:	ldr	pc, [ip, #3924]!	; 0xf54

00011158 <getgid@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #20, 20	; 0x14000
   11160:	ldr	pc, [ip, #3916]!	; 0xf4c

00011164 <getgrouplist@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #20, 20	; 0x14000
   1116c:	ldr	pc, [ip, #3908]!	; 0xf44

00011170 <memset@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #20, 20	; 0x14000
   11178:	ldr	pc, [ip, #3900]!	; 0xf3c

0001117c <fscanf@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #20, 20	; 0x14000
   11184:	ldr	pc, [ip, #3892]!	; 0xf34

00011188 <__printf_chk@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #20, 20	; 0x14000
   11190:	ldr	pc, [ip, #3884]!	; 0xf2c

00011194 <fileno@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #20, 20	; 0x14000
   1119c:	ldr	pc, [ip, #3876]!	; 0xf24

000111a0 <__fprintf_chk@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #20, 20	; 0x14000
   111a8:	ldr	pc, [ip, #3868]!	; 0xf1c

000111ac <fclose@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #20, 20	; 0x14000
   111b4:	ldr	pc, [ip, #3860]!	; 0xf14

000111b8 <fseeko64@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #20, 20	; 0x14000
   111c0:	ldr	pc, [ip, #3852]!	; 0xf0c

000111c4 <__uflow@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #20, 20	; 0x14000
   111cc:	ldr	pc, [ip, #3844]!	; 0xf04

000111d0 <__overflow@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #20, 20	; 0x14000
   111d8:	ldr	pc, [ip, #3836]!	; 0xefc

000111dc <setlocale@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #20, 20	; 0x14000
   111e4:	ldr	pc, [ip, #3828]!	; 0xef4

000111e8 <strrchr@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #20, 20	; 0x14000
   111f0:	ldr	pc, [ip, #3820]!	; 0xeec

000111f4 <nl_langinfo@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #20, 20	; 0x14000
   111fc:	ldr	pc, [ip, #3812]!	; 0xee4

00011200 <getgroups@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #20, 20	; 0x14000
   11208:	ldr	pc, [ip, #3804]!	; 0xedc

0001120c <bindtextdomain@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #20, 20	; 0x14000
   11214:	ldr	pc, [ip, #3796]!	; 0xed4

00011218 <strncmp@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #20, 20	; 0x14000
   11220:	ldr	pc, [ip, #3788]!	; 0xecc

00011224 <abort@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #20, 20	; 0x14000
   1122c:	ldr	pc, [ip, #3780]!	; 0xec4

00011230 <close@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #20, 20	; 0x14000
   11238:	ldr	pc, [ip, #3772]!	; 0xebc

0001123c <getgrgid@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #20, 20	; 0x14000
   11244:	ldr	pc, [ip, #3764]!	; 0xeb4

Disassembly of section .text:

00011248 <close_stdout@@Base-0x97c>:
   11248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1124c:	mov	r8, r0
   11250:	ldr	r4, [pc, #824]	; 11590 <getgrgid@plt+0x354>
   11254:	sub	sp, sp, #28
   11258:	ldr	r0, [r1]
   1125c:	mov	r5, r1
   11260:	add	r4, pc, r4
   11264:	ldr	r7, [pc, #808]	; 11594 <getgrgid@plt+0x358>
   11268:	bl	11de4 <close_stdout@@Base+0x220>
   1126c:	mov	r0, #6
   11270:	mov	r1, r4
   11274:	add	r7, pc, r7
   11278:	bl	111dc <setlocale@plt>
   1127c:	ldr	r1, [pc, #788]	; 11598 <getgrgid@plt+0x35c>
   11280:	mov	r0, r7
   11284:	ldr	r6, [pc, #784]	; 1159c <getgrgid@plt+0x360>
   11288:	add	r1, pc, r1
   1128c:	mov	r9, #0
   11290:	bl	1120c <bindtextdomain@plt>
   11294:	mov	r0, r7
   11298:	bl	11044 <textdomain@plt>
   1129c:	ldr	r3, [pc, #764]	; 115a0 <getgrgid@plt+0x364>
   112a0:	add	r6, pc, r6
   112a4:	ldr	r0, [r6, r3]
   112a8:	bl	15328 <close_stdout@@Base+0x3764>
   112ac:	ldr	r3, [pc, #752]	; 115a4 <getgrgid@plt+0x368>
   112b0:	mov	r2, r4
   112b4:	mov	r0, r8
   112b8:	mov	r1, r5
   112bc:	str	r9, [sp]
   112c0:	add	r3, pc, r3
   112c4:	bl	11104 <getopt_long@plt>
   112c8:	cmn	r0, #1
   112cc:	beq	11330 <getgrgid@plt+0xf4>
   112d0:	cmn	r0, #3
   112d4:	beq	112e8 <getgrgid@plt+0xac>
   112d8:	cmn	r0, #2
   112dc:	bne	1140c <getgrgid@plt+0x1d0>
   112e0:	mov	r0, r9
   112e4:	bl	1170c <getgrgid@plt+0x4d0>
   112e8:	ldr	r2, [pc, #696]	; 115a8 <getgrgid@plt+0x36c>
   112ec:	ldr	r3, [pc, #696]	; 115ac <getgrgid@plt+0x370>
   112f0:	ldr	r1, [pc, #696]	; 115b0 <getgrgid@plt+0x374>
   112f4:	ldr	r0, [r6, r2]
   112f8:	ldr	r3, [r6, r3]
   112fc:	add	r1, pc, r1
   11300:	ldr	r2, [pc, #684]	; 115b4 <getgrgid@plt+0x378>
   11304:	ldr	r0, [r0]
   11308:	add	r2, pc, r2
   1130c:	ldr	r3, [r3]
   11310:	stm	sp, {r1, r2, r9}
   11314:	ldr	r1, [pc, #668]	; 115b8 <getgrgid@plt+0x37c>
   11318:	ldr	r2, [pc, #668]	; 115bc <getgrgid@plt+0x380>
   1131c:	add	r1, pc, r1
   11320:	add	r2, pc, r2
   11324:	bl	13ad0 <close_stdout@@Base+0x1f0c>
   11328:	mov	r0, r9
   1132c:	bl	1111c <exit@plt>
   11330:	ldr	r3, [pc, #648]	; 115c0 <getgrgid@plt+0x384>
   11334:	ldr	r4, [r6, r3]
   11338:	ldr	r3, [r4]
   1133c:	cmp	r3, r8
   11340:	beq	1143c <getgrgid@plt+0x200>
   11344:	ldr	ip, [pc, #632]	; 115c4 <getgrgid@plt+0x388>
   11348:	mov	r7, #1
   1134c:	mov	fp, r7
   11350:	add	ip, pc, ip
   11354:	str	ip, [sp, #20]
   11358:	ldr	ip, [pc, #616]	; 115c8 <getgrgid@plt+0x38c>
   1135c:	add	ip, pc, ip
   11360:	str	ip, [sp, #16]
   11364:	b	113f4 <getgrgid@plt+0x1b8>
   11368:	ldr	r0, [r5, r3, lsl #2]
   1136c:	bl	10fa8 <getpwnam@plt>
   11370:	subs	r9, r0, #0
   11374:	beq	11414 <getgrgid@plt+0x1d8>
   11378:	ldr	r3, [r4]
   1137c:	mov	r0, #1
   11380:	ldr	r1, [sp, #16]
   11384:	ldr	sl, [r9, #8]
   11388:	ldr	r2, [r5, r3, lsl #2]
   1138c:	ldr	r9, [r9, #12]
   11390:	bl	11188 <__printf_chk@plt>
   11394:	ldr	r3, [r4]
   11398:	mov	r1, sl
   1139c:	mov	ip, #32
   113a0:	add	r0, r3, #1
   113a4:	mov	r2, r9
   113a8:	str	r0, [r4]
   113ac:	ldr	r0, [r5, r3, lsl #2]
   113b0:	mov	r3, r9
   113b4:	str	fp, [sp]
   113b8:	str	ip, [sp, #4]
   113bc:	bl	1197c <getgrgid@plt+0x740>
   113c0:	ldr	r3, [pc, #480]	; 115a8 <getgrgid@plt+0x36c>
   113c4:	ldr	r3, [r6, r3]
   113c8:	ldr	r3, [r3]
   113cc:	ldr	r2, [r3, #20]
   113d0:	ldr	r1, [r3, #24]
   113d4:	cmp	r0, #0
   113d8:	moveq	r7, #0
   113dc:	cmp	r2, r1
   113e0:	addcc	r0, r2, #1
   113e4:	strcc	r0, [r3, #20]
   113e8:	movcc	r1, #10
   113ec:	strbcc	r1, [r2]
   113f0:	bcs	11580 <getgrgid@plt+0x344>
   113f4:	ldr	r3, [r4]
   113f8:	cmp	r8, r3
   113fc:	bgt	11368 <getgrgid@plt+0x12c>
   11400:	rsbs	r0, r7, #1
   11404:	movcc	r0, #0
   11408:	bl	1111c <exit@plt>
   1140c:	mov	r0, #1
   11410:	bl	1170c <getgrgid@plt+0x4d0>
   11414:	ldr	r1, [sp, #20]
   11418:	mov	r2, #5
   1141c:	bl	11020 <dcgettext@plt>
   11420:	ldr	r3, [r4]
   11424:	mov	r1, r9
   11428:	ldr	r3, [r5, r3, lsl #2]
   1142c:	mov	r2, r0
   11430:	mov	r0, #1
   11434:	bl	110b0 <error@plt>
   11438:	b	11378 <getgrgid@plt+0x13c>
   1143c:	bl	11140 <__errno_location@plt>
   11440:	str	r9, [r0]
   11444:	mov	r4, r0
   11448:	bl	10fd8 <getuid@plt>
   1144c:	cmn	r0, #1
   11450:	mov	r5, r0
   11454:	beq	114e4 <getgrgid@plt+0x2a8>
   11458:	mov	r8, #0
   1145c:	str	r8, [r4]
   11460:	bl	1105c <getegid@plt>
   11464:	cmn	r0, #1
   11468:	mov	r7, r0
   1146c:	beq	1154c <getgrgid@plt+0x310>
   11470:	mov	r9, #0
   11474:	str	r9, [r4]
   11478:	bl	11158 <getgid@plt>
   1147c:	cmn	r0, #1
   11480:	mov	r8, r0
   11484:	beq	11518 <getgrgid@plt+0x2dc>
   11488:	mov	r1, r5
   1148c:	mov	r3, r7
   11490:	mov	r2, r8
   11494:	mov	r0, #1
   11498:	mov	ip, #32
   1149c:	stm	sp, {r0, ip}
   114a0:	mov	r0, #0
   114a4:	bl	1197c <getgrgid@plt+0x740>
   114a8:	ldr	r3, [pc, #248]	; 115a8 <getgrgid@plt+0x36c>
   114ac:	ldr	r3, [r6, r3]
   114b0:	mov	r7, r0
   114b4:	ldr	r0, [r3]
   114b8:	ldr	r3, [r0, #20]
   114bc:	ldr	r2, [r0, #24]
   114c0:	cmp	r3, r2
   114c4:	addcc	r1, r3, #1
   114c8:	strcc	r1, [r0, #20]
   114cc:	movcc	r2, #10
   114d0:	strbcc	r2, [r3]
   114d4:	bcc	11400 <getgrgid@plt+0x1c4>
   114d8:	mov	r1, #10
   114dc:	bl	111d0 <__overflow@plt>
   114e0:	b	11400 <getgrgid@plt+0x1c4>
   114e4:	ldr	r7, [r4]
   114e8:	cmp	r7, #0
   114ec:	beq	11458 <getgrgid@plt+0x21c>
   114f0:	ldr	r1, [pc, #212]	; 115cc <getgrgid@plt+0x390>
   114f4:	mov	r0, r9
   114f8:	mov	r2, #5
   114fc:	add	r1, pc, r1
   11500:	bl	11020 <dcgettext@plt>
   11504:	mov	r1, r7
   11508:	mov	r2, r0
   1150c:	mov	r0, #1
   11510:	bl	110b0 <error@plt>
   11514:	b	11458 <getgrgid@plt+0x21c>
   11518:	ldr	r4, [r4]
   1151c:	cmp	r4, r9
   11520:	beq	11488 <getgrgid@plt+0x24c>
   11524:	ldr	r1, [pc, #164]	; 115d0 <getgrgid@plt+0x394>
   11528:	mov	r0, r9
   1152c:	mov	r2, #5
   11530:	add	r1, pc, r1
   11534:	bl	11020 <dcgettext@plt>
   11538:	mov	r1, r4
   1153c:	mov	r2, r0
   11540:	mov	r0, #1
   11544:	bl	110b0 <error@plt>
   11548:	b	11488 <getgrgid@plt+0x24c>
   1154c:	ldr	r9, [r4]
   11550:	cmp	r9, r8
   11554:	beq	11470 <getgrgid@plt+0x234>
   11558:	ldr	r1, [pc, #116]	; 115d4 <getgrgid@plt+0x398>
   1155c:	mov	r0, r8
   11560:	mov	r2, #5
   11564:	add	r1, pc, r1
   11568:	bl	11020 <dcgettext@plt>
   1156c:	mov	r1, r9
   11570:	mov	r2, r0
   11574:	mov	r0, #1
   11578:	bl	110b0 <error@plt>
   1157c:	b	11470 <getgrgid@plt+0x234>
   11580:	mov	r0, r3
   11584:	mov	r1, #10
   11588:	bl	111d0 <__overflow@plt>
   1158c:	b	113f4 <getgrgid@plt+0x1b8>
   11590:	andeq	r4, r0, ip, lsr #6
   11594:	andeq	r4, r0, r8, asr r2
   11598:	andeq	r4, r0, r8, lsl #6
   1159c:	andeq	r4, r1, r8, asr sp
   115a0:	andeq	r0, r0, r0, lsl r1
   115a4:	andeq	r4, r1, ip, ror #23
   115a8:	andeq	r0, r0, ip, lsl r1
   115ac:	andeq	r0, r0, r8, lsl #2
   115b0:			; <UNDEFINED> instruction: 0x000042b0
   115b4:			; <UNDEFINED> instruction: 0x000042b4
   115b8:	andeq	r4, r0, r8, lsl #5
   115bc:	andeq	r4, r0, r8, lsr #3
   115c0:	andeq	r0, r0, r4, lsl #2
   115c4:	andeq	r4, r0, r0, asr #5
   115c8:	andeq	r4, r0, r8, asr #5
   115cc:	ldrdeq	r4, [r0], -r0
   115d0:	andeq	r4, r0, ip, asr #1
   115d4:	andeq	r4, r0, ip, ror r0
   115d8:	mov	fp, #0
   115dc:	mov	lr, #0
   115e0:	pop	{r1}		; (ldr r1, [sp], #4)
   115e4:	mov	r2, sp
   115e8:	push	{r2}		; (str r2, [sp, #-4]!)
   115ec:	push	{r0}		; (str r0, [sp, #-4]!)
   115f0:	ldr	ip, [pc, #16]	; 11608 <getgrgid@plt+0x3cc>
   115f4:	push	{ip}		; (str ip, [sp, #-4]!)
   115f8:	ldr	r0, [pc, #12]	; 1160c <getgrgid@plt+0x3d0>
   115fc:	ldr	r3, [pc, #12]	; 11610 <getgrgid@plt+0x3d4>
   11600:	bl	110e0 <__libc_start_main@plt>
   11604:	bl	11224 <abort@plt>
   11608:	andeq	r5, r1, r4, lsr #6
   1160c:	andeq	r1, r1, r8, asr #4
   11610:	andeq	r5, r1, r0, asr #5
   11614:	ldr	r3, [pc, #20]	; 11630 <getgrgid@plt+0x3f4>
   11618:	ldr	r2, [pc, #20]	; 11634 <getgrgid@plt+0x3f8>
   1161c:	add	r3, pc, r3
   11620:	ldr	r2, [r3, r2]
   11624:	cmp	r2, #0
   11628:	bxeq	lr
   1162c:	b	110f8 <__gmon_start__@plt>
   11630:	ldrdeq	r4, [r1], -ip
   11634:	andeq	r0, r0, r4, lsl r1
   11638:	push	{r3, lr}
   1163c:	movw	r0, #24960	; 0x6180
   11640:	ldr	r3, [pc, #36]	; 1166c <getgrgid@plt+0x430>
   11644:	movt	r0, #2
   11648:	rsb	r3, r0, r3
   1164c:	cmp	r3, #6
   11650:	popls	{r3, pc}
   11654:	movw	r3, #0
   11658:	movt	r3, #0
   1165c:	cmp	r3, #0
   11660:	popeq	{r3, pc}
   11664:	blx	r3
   11668:	pop	{r3, pc}
   1166c:	andeq	r6, r2, r3, lsl #3
   11670:	push	{r3, lr}
   11674:	movw	r0, #24960	; 0x6180
   11678:	movw	r3, #24960	; 0x6180
   1167c:	movt	r0, #2
   11680:	movt	r3, #2
   11684:	rsb	r3, r0, r3
   11688:	asr	r3, r3, #2
   1168c:	add	r3, r3, r3, lsr #31
   11690:	asrs	r1, r3, #1
   11694:	popeq	{r3, pc}
   11698:	movw	r2, #0
   1169c:	movt	r2, #0
   116a0:	cmp	r2, #0
   116a4:	popeq	{r3, pc}
   116a8:	blx	r2
   116ac:	pop	{r3, pc}
   116b0:	push	{r4, lr}
   116b4:	movw	r4, #24960	; 0x6180
   116b8:	movt	r4, #2
   116bc:	ldrb	r3, [r4]
   116c0:	cmp	r3, #0
   116c4:	popne	{r4, pc}
   116c8:	bl	11638 <getgrgid@plt+0x3fc>
   116cc:	mov	r3, #1
   116d0:	strb	r3, [r4]
   116d4:	pop	{r4, pc}
   116d8:	movw	r0, #24240	; 0x5eb0
   116dc:	movt	r0, #2
   116e0:	push	{r3, lr}
   116e4:	ldr	r3, [r0]
   116e8:	cmp	r3, #0
   116ec:	beq	11704 <getgrgid@plt+0x4c8>
   116f0:	movw	r3, #0
   116f4:	movt	r3, #0
   116f8:	cmp	r3, #0
   116fc:	beq	11704 <getgrgid@plt+0x4c8>
   11700:	blx	r3
   11704:	pop	{r3, lr}
   11708:	b	11670 <getgrgid@plt+0x434>
   1170c:	push	{r4, r5, r6, lr}
   11710:	subs	r4, r0, #0
   11714:	ldr	r5, [pc, #400]	; 118ac <getgrgid@plt+0x670>
   11718:	add	r5, pc, r5
   1171c:	beq	11764 <getgrgid@plt+0x528>
   11720:	ldr	r3, [pc, #392]	; 118b0 <getgrgid@plt+0x674>
   11724:	mov	r2, #5
   11728:	ldr	r1, [pc, #388]	; 118b4 <getgrgid@plt+0x678>
   1172c:	mov	r0, #0
   11730:	ldr	r3, [r5, r3]
   11734:	add	r1, pc, r1
   11738:	ldr	r6, [r3]
   1173c:	bl	11020 <dcgettext@plt>
   11740:	ldr	r3, [pc, #368]	; 118b8 <getgrgid@plt+0x67c>
   11744:	mov	r1, #1
   11748:	ldr	r3, [r5, r3]
   1174c:	ldr	r3, [r3]
   11750:	mov	r2, r0
   11754:	mov	r0, r6
   11758:	bl	111a0 <__fprintf_chk@plt>
   1175c:	mov	r0, r4
   11760:	bl	1111c <exit@plt>
   11764:	ldr	r1, [pc, #336]	; 118bc <getgrgid@plt+0x680>
   11768:	mov	r2, #5
   1176c:	add	r1, pc, r1
   11770:	bl	11020 <dcgettext@plt>
   11774:	ldr	r3, [pc, #316]	; 118b8 <getgrgid@plt+0x67c>
   11778:	ldr	r6, [r5, r3]
   1177c:	ldr	r2, [r6]
   11780:	mov	r1, r0
   11784:	mov	r0, #1
   11788:	bl	11188 <__printf_chk@plt>
   1178c:	ldr	r1, [pc, #300]	; 118c0 <getgrgid@plt+0x684>
   11790:	mov	r2, #5
   11794:	mov	r0, r4
   11798:	add	r1, pc, r1
   1179c:	bl	11020 <dcgettext@plt>
   117a0:	ldr	r3, [pc, #284]	; 118c4 <getgrgid@plt+0x688>
   117a4:	ldr	r5, [r5, r3]
   117a8:	ldr	r1, [r5]
   117ac:	bl	10f90 <fputs_unlocked@plt>
   117b0:	ldr	r1, [pc, #272]	; 118c8 <getgrgid@plt+0x68c>
   117b4:	mov	r2, #5
   117b8:	mov	r0, r4
   117bc:	add	r1, pc, r1
   117c0:	bl	11020 <dcgettext@plt>
   117c4:	ldr	r1, [r5]
   117c8:	bl	10f90 <fputs_unlocked@plt>
   117cc:	ldr	r1, [pc, #248]	; 118cc <getgrgid@plt+0x690>
   117d0:	mov	r2, #5
   117d4:	mov	r0, r4
   117d8:	add	r1, pc, r1
   117dc:	bl	11020 <dcgettext@plt>
   117e0:	ldr	r1, [r5]
   117e4:	bl	10f90 <fputs_unlocked@plt>
   117e8:	ldr	r1, [pc, #224]	; 118d0 <getgrgid@plt+0x694>
   117ec:	mov	r2, #5
   117f0:	mov	r0, r4
   117f4:	add	r1, pc, r1
   117f8:	bl	11020 <dcgettext@plt>
   117fc:	ldr	r2, [pc, #208]	; 118d4 <getgrgid@plt+0x698>
   11800:	ldr	r3, [pc, #208]	; 118d8 <getgrgid@plt+0x69c>
   11804:	add	r2, pc, r2
   11808:	add	r3, pc, r3
   1180c:	mov	r1, r0
   11810:	mov	r0, #1
   11814:	bl	11188 <__printf_chk@plt>
   11818:	mov	r0, #5
   1181c:	mov	r1, r4
   11820:	bl	111dc <setlocale@plt>
   11824:	cmp	r0, #0
   11828:	beq	11844 <getgrgid@plt+0x608>
   1182c:	ldr	r1, [pc, #168]	; 118dc <getgrgid@plt+0x6a0>
   11830:	mov	r2, #3
   11834:	add	r1, pc, r1
   11838:	bl	11218 <strncmp@plt>
   1183c:	cmp	r0, #0
   11840:	bne	11878 <getgrgid@plt+0x63c>
   11844:	ldr	r1, [pc, #148]	; 118e0 <getgrgid@plt+0x6a4>
   11848:	mov	r2, #5
   1184c:	mov	r0, #0
   11850:	add	r1, pc, r1
   11854:	bl	11020 <dcgettext@plt>
   11858:	mov	r5, r0
   1185c:	ldr	r0, [r6]
   11860:	bl	11cdc <close_stdout@@Base+0x118>
   11864:	mov	r1, r5
   11868:	mov	r2, r0
   1186c:	mov	r0, #1
   11870:	bl	11188 <__printf_chk@plt>
   11874:	b	1175c <getgrgid@plt+0x520>
   11878:	ldr	r1, [pc, #100]	; 118e4 <getgrgid@plt+0x6a8>
   1187c:	mov	r2, #5
   11880:	mov	r0, r4
   11884:	add	r1, pc, r1
   11888:	bl	11020 <dcgettext@plt>
   1188c:	mov	r5, r0
   11890:	ldr	r0, [r6]
   11894:	bl	11cdc <close_stdout@@Base+0x118>
   11898:	mov	r1, r5
   1189c:	mov	r2, r0
   118a0:	mov	r0, #1
   118a4:	bl	11188 <__printf_chk@plt>
   118a8:	b	11844 <getgrgid@plt+0x608>
   118ac:	andeq	r4, r1, r0, ror #17
   118b0:	andeq	r0, r0, ip, lsl #2
   118b4:	andeq	r3, r0, r8, lsr #24
   118b8:	andeq	r0, r0, r8, lsr #2
   118bc:	andeq	r3, r0, r8, lsl ip
   118c0:	andeq	r3, r0, r4, lsl ip
   118c4:	andeq	r0, r0, ip, lsl r1
   118c8:	andeq	r3, r0, ip, lsl #25
   118cc:	andeq	r3, r0, r0, lsr #25
   118d0:			; <UNDEFINED> instruction: 0x00003cbc
   118d4:	andeq	r3, r0, r4, asr #25
   118d8:	ldrdeq	r3, [r0], -r0
   118dc:	andeq	r3, r0, ip, asr #25
   118e0:	strdeq	r3, [r0], -ip
   118e4:	andeq	r3, r0, r0, lsl #25
   118e8:	push	{r4, r5, r6, lr}
   118ec:	cmp	r1, #0
   118f0:	ldr	r4, [pc, #116]	; 1196c <getgrgid@plt+0x730>
   118f4:	mov	r6, r0
   118f8:	moveq	r5, #1
   118fc:	add	r4, pc, r4
   11900:	bne	11930 <getgrgid@plt+0x6f4>
   11904:	ldr	r2, [pc, #100]	; 11970 <getgrgid@plt+0x734>
   11908:	mov	r0, r6
   1190c:	mov	r1, #0
   11910:	add	r2, pc, r2
   11914:	bl	11d80 <close_stdout@@Base+0x1bc>
   11918:	ldr	r3, [pc, #84]	; 11974 <getgrgid@plt+0x738>
   1191c:	ldr	r3, [r4, r3]
   11920:	ldr	r1, [r3]
   11924:	bl	10f90 <fputs_unlocked@plt>
   11928:	mov	r0, r5
   1192c:	pop	{r4, r5, r6, pc}
   11930:	bl	1123c <getgrgid@plt>
   11934:	subs	r5, r0, #0
   11938:	ldrne	r0, [r5]
   1193c:	movne	r5, #1
   11940:	bne	11918 <getgrgid@plt+0x6dc>
   11944:	ldr	r1, [pc, #44]	; 11978 <getgrgid@plt+0x73c>
   11948:	mov	r2, #5
   1194c:	add	r1, pc, r1
   11950:	bl	11020 <dcgettext@plt>
   11954:	mov	r1, r5
   11958:	mov	r3, r6
   1195c:	mov	r2, r0
   11960:	mov	r0, r5
   11964:	bl	110b0 <error@plt>
   11968:	b	11904 <getgrgid@plt+0x6c8>
   1196c:	strdeq	r4, [r1], -ip
   11970:	andeq	r4, r1, ip, ror #16
   11974:	andeq	r0, r0, ip, lsl r1
   11978:	strdeq	r3, [r0], -r0
   1197c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11980:	mov	r6, r3
   11984:	ldr	r7, [pc, #508]	; 11b88 <getgrgid@plt+0x94c>
   11988:	sub	sp, sp, #20
   1198c:	ldr	ip, [pc, #504]	; 11b8c <getgrgid@plt+0x950>
   11990:	subs	r4, r0, #0
   11994:	add	r7, pc, r7
   11998:	mov	r5, r2
   1199c:	ldrb	r9, [sp, #56]	; 0x38
   119a0:	ldr	ip, [r7, ip]
   119a4:	ldrb	sl, [sp, #60]	; 0x3c
   119a8:	ldr	r3, [ip]
   119ac:	str	ip, [sp, #4]
   119b0:	str	r3, [sp, #12]
   119b4:	beq	11adc <getgrgid@plt+0x8a0>
   119b8:	mov	r0, r1
   119bc:	bl	10fc0 <getpwuid@plt>
   119c0:	adds	r8, r0, #0
   119c4:	mov	fp, r0
   119c8:	movne	r8, #1
   119cc:	mov	r0, r5
   119d0:	mov	r1, r9
   119d4:	bl	118e8 <getgrgid@plt+0x6ac>
   119d8:	cmp	r0, #0
   119dc:	moveq	r8, #0
   119e0:	cmp	r6, r5
   119e4:	beq	11a24 <getgrgid@plt+0x7e8>
   119e8:	ldr	r2, [pc, #416]	; 11b90 <getgrgid@plt+0x954>
   119ec:	ldr	r2, [r7, r2]
   119f0:	ldr	r0, [r2]
   119f4:	ldr	r2, [r0, #20]
   119f8:	ldr	r1, [r0, #24]
   119fc:	cmp	r2, r1
   11a00:	addcc	r1, r2, #1
   11a04:	strcc	r1, [r0, #20]
   11a08:	strbcc	sl, [r2]
   11a0c:	bcs	11b7c <getgrgid@plt+0x940>
   11a10:	mov	r0, r6
   11a14:	mov	r1, r9
   11a18:	bl	118e8 <getgrgid@plt+0x6ac>
   11a1c:	cmp	r0, #0
   11a20:	moveq	r8, #0
   11a24:	cmp	fp, #0
   11a28:	mov	r0, r4
   11a2c:	add	r2, sp, #8
   11a30:	ldrne	r1, [fp, #12]
   11a34:	moveq	r1, r6
   11a38:	bl	13e4c <close_stdout@@Base+0x2288>
   11a3c:	subs	fp, r0, #0
   11a40:	blt	11ae8 <getgrgid@plt+0x8ac>
   11a44:	ldr	r0, [sp, #8]
   11a48:	movne	r4, #0
   11a4c:	beq	11ab8 <getgrgid@plt+0x87c>
   11a50:	ldr	r3, [r0, r4, lsl #2]
   11a54:	lsl	ip, r4, #2
   11a58:	cmp	r3, r5
   11a5c:	beq	11aac <getgrgid@plt+0x870>
   11a60:	cmp	r6, r3
   11a64:	beq	11aac <getgrgid@plt+0x870>
   11a68:	ldr	r3, [pc, #288]	; 11b90 <getgrgid@plt+0x954>
   11a6c:	ldr	r3, [r7, r3]
   11a70:	ldr	r0, [r3]
   11a74:	ldr	r3, [r0, #20]
   11a78:	ldr	r1, [r0, #24]
   11a7c:	cmp	r3, r1
   11a80:	addcc	r1, r3, #1
   11a84:	strcc	r1, [r0, #20]
   11a88:	strbcc	sl, [r3]
   11a8c:	bcs	11b64 <getgrgid@plt+0x928>
   11a90:	ldr	r3, [sp, #8]
   11a94:	mov	r1, r9
   11a98:	ldr	r0, [r3, ip]
   11a9c:	bl	118e8 <getgrgid@plt+0x6ac>
   11aa0:	subs	r3, r0, #0
   11aa4:	ldr	r0, [sp, #8]
   11aa8:	moveq	r8, r3
   11aac:	add	r4, r4, #1
   11ab0:	cmp	r4, fp
   11ab4:	bne	11a50 <getgrgid@plt+0x814>
   11ab8:	bl	10fe4 <free@plt>
   11abc:	mov	r0, r8
   11ac0:	ldr	r1, [sp, #4]
   11ac4:	ldr	r2, [sp, #12]
   11ac8:	ldr	r3, [r1]
   11acc:	cmp	r2, r3
   11ad0:	bne	11b78 <getgrgid@plt+0x93c>
   11ad4:	add	sp, sp, #20
   11ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11adc:	mov	fp, r4
   11ae0:	mov	r8, #1
   11ae4:	b	119cc <getgrgid@plt+0x790>
   11ae8:	cmp	r4, #0
   11aec:	beq	11b34 <getgrgid@plt+0x8f8>
   11af0:	bl	11140 <__errno_location@plt>
   11af4:	ldr	r1, [pc, #152]	; 11b94 <getgrgid@plt+0x958>
   11af8:	mov	r2, #5
   11afc:	add	r1, pc, r1
   11b00:	ldr	r5, [r0]
   11b04:	mov	r0, #0
   11b08:	bl	11020 <dcgettext@plt>
   11b0c:	mov	r6, r0
   11b10:	mov	r0, r4
   11b14:	bl	13634 <close_stdout@@Base+0x1a70>
   11b18:	mov	r1, r5
   11b1c:	mov	r2, r6
   11b20:	mov	r3, r0
   11b24:	mov	r0, #0
   11b28:	bl	110b0 <error@plt>
   11b2c:	mov	r0, #0
   11b30:	b	11ac0 <getgrgid@plt+0x884>
   11b34:	bl	11140 <__errno_location@plt>
   11b38:	ldr	r1, [pc, #88]	; 11b98 <getgrgid@plt+0x95c>
   11b3c:	mov	r2, #5
   11b40:	add	r1, pc, r1
   11b44:	ldr	r5, [r0]
   11b48:	mov	r0, r4
   11b4c:	bl	11020 <dcgettext@plt>
   11b50:	mov	r1, r5
   11b54:	mov	r2, r0
   11b58:	mov	r0, r4
   11b5c:	bl	110b0 <error@plt>
   11b60:	b	11b2c <getgrgid@plt+0x8f0>
   11b64:	mov	r1, sl
   11b68:	str	ip, [sp]
   11b6c:	bl	111d0 <__overflow@plt>
   11b70:	ldr	ip, [sp]
   11b74:	b	11a90 <getgrgid@plt+0x854>
   11b78:	bl	1102c <__stack_chk_fail@plt>
   11b7c:	mov	r1, sl
   11b80:	bl	111d0 <__overflow@plt>
   11b84:	b	11a10 <getgrgid@plt+0x7d4>
   11b88:	andeq	r4, r1, r4, ror #12
   11b8c:	andeq	r0, r0, r0, lsl #2
   11b90:	andeq	r0, r0, ip, lsl r1
   11b94:	andeq	r3, r0, r4, ror #22
   11b98:	andeq	r3, r0, r4, asr #22
   11b9c:	ldr	r3, [pc, #8]	; 11bac <getgrgid@plt+0x970>
   11ba0:	add	r3, pc, r3
   11ba4:	str	r0, [r3]
   11ba8:	bx	lr
   11bac:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11bb0:	ldr	r3, [pc, #8]	; 11bc0 <getgrgid@plt+0x984>
   11bb4:	add	r3, pc, r3
   11bb8:	strb	r0, [r3, #4]
   11bbc:	bx	lr
   11bc0:	andeq	r4, r1, r0, ror #11

00011bc4 <close_stdout@@Base>:
   11bc4:	push	{r4, r5, r6, r7, lr}
   11bc8:	sub	sp, sp, #12
   11bcc:	ldr	r4, [pc, #228]	; 11cb8 <close_stdout@@Base+0xf4>
   11bd0:	ldr	r3, [pc, #228]	; 11cbc <close_stdout@@Base+0xf8>
   11bd4:	add	r4, pc, r4
   11bd8:	ldr	r3, [r4, r3]
   11bdc:	ldr	r0, [r3]
   11be0:	bl	13e7c <close_stdout@@Base+0x22b8>
   11be4:	cmp	r0, #0
   11be8:	beq	11c10 <close_stdout@@Base+0x4c>
   11bec:	ldr	r3, [pc, #204]	; 11cc0 <close_stdout@@Base+0xfc>
   11bf0:	add	r3, pc, r3
   11bf4:	ldrb	r3, [r3, #4]
   11bf8:	cmp	r3, #0
   11bfc:	beq	11c30 <close_stdout@@Base+0x6c>
   11c00:	bl	11140 <__errno_location@plt>
   11c04:	ldr	r3, [r0]
   11c08:	cmp	r3, #32
   11c0c:	bne	11c30 <close_stdout@@Base+0x6c>
   11c10:	ldr	r3, [pc, #172]	; 11cc4 <close_stdout@@Base+0x100>
   11c14:	ldr	r3, [r4, r3]
   11c18:	ldr	r0, [r3]
   11c1c:	bl	13e7c <close_stdout@@Base+0x22b8>
   11c20:	cmp	r0, #0
   11c24:	bne	11c84 <close_stdout@@Base+0xc0>
   11c28:	add	sp, sp, #12
   11c2c:	pop	{r4, r5, r6, r7, pc}
   11c30:	ldr	r1, [pc, #144]	; 11cc8 <close_stdout@@Base+0x104>
   11c34:	mov	r0, #0
   11c38:	mov	r2, #5
   11c3c:	add	r1, pc, r1
   11c40:	bl	11020 <dcgettext@plt>
   11c44:	ldr	r3, [pc, #128]	; 11ccc <close_stdout@@Base+0x108>
   11c48:	ldr	r5, [pc, r3]
   11c4c:	cmp	r5, #0
   11c50:	mov	r6, r0
   11c54:	beq	11c94 <close_stdout@@Base+0xd0>
   11c58:	bl	11140 <__errno_location@plt>
   11c5c:	ldr	r7, [r0]
   11c60:	mov	r0, r5
   11c64:	bl	134e0 <close_stdout@@Base+0x191c>
   11c68:	ldr	r2, [pc, #96]	; 11cd0 <close_stdout@@Base+0x10c>
   11c6c:	str	r6, [sp]
   11c70:	mov	r1, r7
   11c74:	add	r2, pc, r2
   11c78:	mov	r3, r0
   11c7c:	mov	r0, #0
   11c80:	bl	110b0 <error@plt>
   11c84:	ldr	r3, [pc, #72]	; 11cd4 <close_stdout@@Base+0x110>
   11c88:	ldr	r3, [r4, r3]
   11c8c:	ldr	r0, [r3]
   11c90:	bl	10ff0 <_exit@plt>
   11c94:	bl	11140 <__errno_location@plt>
   11c98:	ldr	r2, [pc, #56]	; 11cd8 <close_stdout@@Base+0x114>
   11c9c:	add	r2, pc, r2
   11ca0:	mov	r3, r0
   11ca4:	mov	r0, r5
   11ca8:	ldr	r1, [r3]
   11cac:	mov	r3, r6
   11cb0:	bl	110b0 <error@plt>
   11cb4:	b	11c84 <close_stdout@@Base+0xc0>
   11cb8:	andeq	r4, r1, r4, lsr #8
   11cbc:	andeq	r0, r0, ip, lsl r1
   11cc0:	andeq	r4, r1, r4, lsr #11
   11cc4:	andeq	r0, r0, ip, lsl #2
   11cc8:	andeq	r3, r0, r0, lsl #21
   11ccc:	andeq	r4, r1, ip, asr #10
   11cd0:	andeq	r3, r0, r4, asr sl
   11cd4:	andeq	r0, r0, r0, lsr #2
   11cd8:	andeq	r3, r0, r0, lsr sl
   11cdc:	ldrb	r3, [r0]
   11ce0:	cmp	r3, #47	; 0x2f
   11ce4:	bne	11d00 <close_stdout@@Base+0x13c>
   11ce8:	add	r2, r0, #1
   11cec:	mov	r0, r2
   11cf0:	add	r2, r2, #1
   11cf4:	ldrb	r3, [r0]
   11cf8:	cmp	r3, #47	; 0x2f
   11cfc:	beq	11cec <close_stdout@@Base+0x128>
   11d00:	cmp	r3, #0
   11d04:	bxeq	lr
   11d08:	mov	r2, r0
   11d0c:	mov	r1, #0
   11d10:	cmp	r3, #47	; 0x2f
   11d14:	moveq	r1, #1
   11d18:	beq	11d28 <close_stdout@@Base+0x164>
   11d1c:	cmp	r1, #0
   11d20:	movne	r0, r2
   11d24:	movne	r1, #0
   11d28:	ldrb	r3, [r2, #1]!
   11d2c:	cmp	r3, #0
   11d30:	bne	11d10 <close_stdout@@Base+0x14c>
   11d34:	bx	lr
   11d38:	push	{r4, lr}
   11d3c:	mov	r4, r0
   11d40:	bl	11128 <strlen@plt>
   11d44:	cmp	r0, #1
   11d48:	popls	{r4, pc}
   11d4c:	sub	r3, r0, #1
   11d50:	ldrb	r2, [r4, r3]
   11d54:	cmp	r2, #47	; 0x2f
   11d58:	popne	{r4, pc}
   11d5c:	mov	r0, r3
   11d60:	cmp	r0, #1
   11d64:	sub	r3, r3, #1
   11d68:	beq	11d7c <close_stdout@@Base+0x1b8>
   11d6c:	ldrb	r2, [r4, r3]
   11d70:	cmp	r2, #47	; 0x2f
   11d74:	popne	{r4, pc}
   11d78:	b	11d5c <close_stdout@@Base+0x198>
   11d7c:	pop	{r4, pc}
   11d80:	push	{r3, r4, r5, r6, r7, lr}
   11d84:	add	r6, r2, #19
   11d88:	mov	r4, r0
   11d8c:	mov	r5, r1
   11d90:	mov	r3, #0
   11d94:	strb	r3, [r2, #20]
   11d98:	mov	r0, r4
   11d9c:	mov	r1, r5
   11da0:	mov	r2, #10
   11da4:	mov	r3, #0
   11da8:	bl	14940 <close_stdout@@Base+0x2d7c>
   11dac:	mov	r7, r6
   11db0:	mov	r0, r4
   11db4:	mov	r1, r5
   11db8:	mov	r3, #0
   11dbc:	add	ip, r2, #48	; 0x30
   11dc0:	mov	r2, #10
   11dc4:	strb	ip, [r6], #-1
   11dc8:	bl	14940 <close_stdout@@Base+0x2d7c>
   11dcc:	mov	r4, r0
   11dd0:	mov	r5, r1
   11dd4:	orrs	r3, r4, r5
   11dd8:	bne	11d98 <close_stdout@@Base+0x1d4>
   11ddc:	mov	r0, r7
   11de0:	pop	{r3, r4, r5, r6, r7, pc}
   11de4:	push	{r3, r4, r5, r6, r7, lr}
   11de8:	subs	r4, r0, #0
   11dec:	ldr	r5, [pc, #172]	; 11ea0 <close_stdout@@Base+0x2dc>
   11df0:	add	r5, pc, r5
   11df4:	beq	11e7c <close_stdout@@Base+0x2b8>
   11df8:	mov	r1, #47	; 0x2f
   11dfc:	bl	111e8 <strrchr@plt>
   11e00:	subs	r6, r0, #0
   11e04:	beq	11e60 <close_stdout@@Base+0x29c>
   11e08:	add	r7, r6, #1
   11e0c:	rsb	r3, r4, r7
   11e10:	cmp	r3, #6
   11e14:	ble	11e60 <close_stdout@@Base+0x29c>
   11e18:	ldr	r1, [pc, #132]	; 11ea4 <close_stdout@@Base+0x2e0>
   11e1c:	sub	r0, r6, #6
   11e20:	mov	r2, #7
   11e24:	add	r1, pc, r1
   11e28:	bl	11218 <strncmp@plt>
   11e2c:	cmp	r0, #0
   11e30:	bne	11e60 <close_stdout@@Base+0x29c>
   11e34:	ldr	r1, [pc, #108]	; 11ea8 <close_stdout@@Base+0x2e4>
   11e38:	mov	r0, r7
   11e3c:	mov	r2, #3
   11e40:	add	r1, pc, r1
   11e44:	bl	11218 <strncmp@plt>
   11e48:	cmp	r0, #0
   11e4c:	movne	r4, r7
   11e50:	ldreq	r3, [pc, #84]	; 11eac <close_stdout@@Base+0x2e8>
   11e54:	addeq	r4, r6, #4
   11e58:	ldreq	r3, [r5, r3]
   11e5c:	streq	r4, [r3]
   11e60:	ldr	r2, [pc, #72]	; 11eb0 <close_stdout@@Base+0x2ec>
   11e64:	ldr	r3, [pc, #72]	; 11eb4 <close_stdout@@Base+0x2f0>
   11e68:	ldr	r2, [r5, r2]
   11e6c:	str	r4, [r2]
   11e70:	ldr	r3, [r5, r3]
   11e74:	str	r4, [r3]
   11e78:	pop	{r3, r4, r5, r6, r7, pc}
   11e7c:	ldr	r3, [pc, #52]	; 11eb8 <close_stdout@@Base+0x2f4>
   11e80:	mov	r1, #1
   11e84:	ldr	r0, [pc, #48]	; 11ebc <close_stdout@@Base+0x2f8>
   11e88:	mov	r2, #55	; 0x37
   11e8c:	ldr	r3, [r5, r3]
   11e90:	add	r0, pc, r0
   11e94:	ldr	r3, [r3]
   11e98:	bl	11068 <fwrite@plt>
   11e9c:	bl	11224 <abort@plt>
   11ea0:	andeq	r4, r1, r8, lsl #4
   11ea4:	andeq	r3, r0, r4, ror #17
   11ea8:	ldrdeq	r3, [r0], -r0
   11eac:	andeq	r0, r0, r0, lsr r1
   11eb0:	andeq	r0, r0, r8, lsr #2
   11eb4:	andeq	r0, r0, r4, lsr #2
   11eb8:	andeq	r0, r0, ip, lsl #2
   11ebc:	andeq	r3, r0, r0, asr #16
   11ec0:	push	{r3, lr}
   11ec4:	mov	r3, r0
   11ec8:	mov	r2, #0
   11ecc:	cmp	r1, #8
   11ed0:	str	r2, [r3], #4
   11ed4:	add	r3, r3, #4
   11ed8:	str	r2, [r0, #4]
   11edc:	str	r2, [r3], #4
   11ee0:	str	r2, [r3], #4
   11ee4:	str	r2, [r3], #4
   11ee8:	str	r2, [r3], #4
   11eec:	str	r2, [r3], #4
   11ef0:	str	r2, [r3], #4
   11ef4:	str	r2, [r3], #4
   11ef8:	str	r2, [r3], #4
   11efc:	str	r2, [r3], #4
   11f00:	str	r2, [r3]
   11f04:	beq	11f10 <close_stdout@@Base+0x34c>
   11f08:	str	r1, [r0]
   11f0c:	pop	{r3, pc}
   11f10:	bl	11224 <abort@plt>
   11f14:	push	{r4, r5, r6, lr}
   11f18:	mov	r4, r0
   11f1c:	mov	r6, r1
   11f20:	mov	r0, #0
   11f24:	mov	r1, r4
   11f28:	mov	r2, #5
   11f2c:	bl	11020 <dcgettext@plt>
   11f30:	cmp	r0, r4
   11f34:	mov	r5, r0
   11f38:	beq	11f40 <close_stdout@@Base+0x37c>
   11f3c:	pop	{r4, r5, r6, pc}
   11f40:	bl	13efc <close_stdout@@Base+0x2338>
   11f44:	ldrb	r3, [r0]
   11f48:	bic	r3, r3, #32
   11f4c:	cmp	r3, #85	; 0x55
   11f50:	bne	11fc4 <close_stdout@@Base+0x400>
   11f54:	ldrb	r3, [r0, #1]
   11f58:	bic	r3, r3, #32
   11f5c:	cmp	r3, #84	; 0x54
   11f60:	bne	11fb0 <close_stdout@@Base+0x3ec>
   11f64:	ldrb	r3, [r0, #2]
   11f68:	bic	r3, r3, #32
   11f6c:	cmp	r3, #70	; 0x46
   11f70:	bne	11fb0 <close_stdout@@Base+0x3ec>
   11f74:	ldrb	r3, [r0, #3]
   11f78:	cmp	r3, #45	; 0x2d
   11f7c:	bne	11fb0 <close_stdout@@Base+0x3ec>
   11f80:	ldrb	r3, [r0, #4]
   11f84:	cmp	r3, #56	; 0x38
   11f88:	bne	11fb0 <close_stdout@@Base+0x3ec>
   11f8c:	ldrb	r3, [r0, #5]
   11f90:	cmp	r3, #0
   11f94:	bne	11fb0 <close_stdout@@Base+0x3ec>
   11f98:	ldrb	r3, [r5]
   11f9c:	cmp	r3, #96	; 0x60
   11fa0:	beq	1203c <close_stdout@@Base+0x478>
   11fa4:	ldr	r0, [pc, #180]	; 12060 <close_stdout@@Base+0x49c>
   11fa8:	add	r0, pc, r0
   11fac:	pop	{r4, r5, r6, pc}
   11fb0:	cmp	r6, #7
   11fb4:	beq	12048 <close_stdout@@Base+0x484>
   11fb8:	ldr	r0, [pc, #164]	; 12064 <close_stdout@@Base+0x4a0>
   11fbc:	add	r0, pc, r0
   11fc0:	pop	{r4, r5, r6, pc}
   11fc4:	cmp	r3, #71	; 0x47
   11fc8:	bne	11fb0 <close_stdout@@Base+0x3ec>
   11fcc:	ldrb	r3, [r0, #1]
   11fd0:	bic	r3, r3, #32
   11fd4:	cmp	r3, #66	; 0x42
   11fd8:	bne	11fb0 <close_stdout@@Base+0x3ec>
   11fdc:	ldrb	r3, [r0, #2]
   11fe0:	cmp	r3, #49	; 0x31
   11fe4:	bne	11fb0 <close_stdout@@Base+0x3ec>
   11fe8:	ldrb	r3, [r0, #3]
   11fec:	cmp	r3, #56	; 0x38
   11ff0:	bne	11fb0 <close_stdout@@Base+0x3ec>
   11ff4:	ldrb	r3, [r0, #4]
   11ff8:	cmp	r3, #48	; 0x30
   11ffc:	bne	11fb0 <close_stdout@@Base+0x3ec>
   12000:	ldrb	r3, [r0, #5]
   12004:	cmp	r3, #51	; 0x33
   12008:	bne	11fb0 <close_stdout@@Base+0x3ec>
   1200c:	ldrb	r3, [r0, #6]
   12010:	cmp	r3, #48	; 0x30
   12014:	bne	11fb0 <close_stdout@@Base+0x3ec>
   12018:	ldrb	r3, [r0, #7]
   1201c:	cmp	r3, #0
   12020:	bne	11fb0 <close_stdout@@Base+0x3ec>
   12024:	ldrb	r3, [r5]
   12028:	cmp	r3, #96	; 0x60
   1202c:	beq	12054 <close_stdout@@Base+0x490>
   12030:	ldr	r0, [pc, #48]	; 12068 <close_stdout@@Base+0x4a4>
   12034:	add	r0, pc, r0
   12038:	pop	{r4, r5, r6, pc}
   1203c:	ldr	r0, [pc, #40]	; 1206c <close_stdout@@Base+0x4a8>
   12040:	add	r0, pc, r0
   12044:	pop	{r4, r5, r6, pc}
   12048:	ldr	r0, [pc, #32]	; 12070 <close_stdout@@Base+0x4ac>
   1204c:	add	r0, pc, r0
   12050:	pop	{r4, r5, r6, pc}
   12054:	ldr	r0, [pc, #24]	; 12074 <close_stdout@@Base+0x4b0>
   12058:	add	r0, pc, r0
   1205c:	pop	{r4, r5, r6, pc}
   12060:	andeq	r3, r0, ip, lsl #15
   12064:	andeq	r3, r0, r0, lsl #15
   12068:	andeq	r3, r0, r4, lsl #14
   1206c:	andeq	r3, r0, r8, lsl #14
   12070:	strdeq	r3, [r0], -r4
   12074:	andeq	r3, r0, ip, ror #13
   12078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1207c:	sub	sp, sp, #124	; 0x7c
   12080:	ldr	ip, [pc, #3304]	; 12d70 <close_stdout@@Base+0x11ac>
   12084:	mov	sl, r1
   12088:	str	r0, [sp, #40]	; 0x28
   1208c:	mov	r8, r3
   12090:	ldr	r0, [pc, #3292]	; 12d74 <close_stdout@@Base+0x11b0>
   12094:	add	ip, pc, ip
   12098:	str	r2, [sp, #32]
   1209c:	ldr	r1, [sp, #164]	; 0xa4
   120a0:	mov	r3, ip
   120a4:	ldr	r0, [ip, r0]
   120a8:	ldr	r2, [sp, #172]	; 0xac
   120ac:	ubfx	r1, r1, #1, #1
   120b0:	str	r1, [sp, #36]	; 0x24
   120b4:	str	r0, [sp, #56]	; 0x38
   120b8:	ldr	r0, [sp, #168]	; 0xa8
   120bc:	ldr	r1, [sp, #176]	; 0xb0
   120c0:	str	r2, [sp, #72]	; 0x48
   120c4:	str	r0, [sp, #48]	; 0x30
   120c8:	ldr	r0, [sp, #56]	; 0x38
   120cc:	str	r1, [sp, #68]	; 0x44
   120d0:	ldr	r3, [r0]
   120d4:	str	r3, [sp, #116]	; 0x74
   120d8:	bl	11080 <__ctype_get_mb_cur_max@plt>
   120dc:	ldr	r2, [sp, #160]	; 0xa0
   120e0:	str	r0, [sp, #64]	; 0x40
   120e4:	cmp	r2, #8
   120e8:	addls	pc, pc, r2, lsl #2
   120ec:	b	12c4c <close_stdout@@Base+0x1088>
   120f0:	b	12114 <close_stdout@@Base+0x550>
   120f4:	b	12964 <close_stdout@@Base+0xda0>
   120f8:	b	12994 <close_stdout@@Base+0xdd0>
   120fc:	b	12844 <close_stdout@@Base+0xc80>
   12100:	b	12884 <close_stdout@@Base+0xcc0>
   12104:	b	128b0 <close_stdout@@Base+0xcec>
   12108:	b	128d0 <close_stdout@@Base+0xd0c>
   1210c:	b	128d0 <close_stdout@@Base+0xd0c>
   12110:	b	128d0 <close_stdout@@Base+0xd0c>
   12114:	mov	r2, #0
   12118:	str	r2, [sp, #36]	; 0x24
   1211c:	mov	r9, r2
   12120:	str	r2, [sp, #24]
   12124:	str	r2, [sp, #28]
   12128:	str	r2, [sp, #52]	; 0x34
   1212c:	ldr	r0, [sp, #36]	; 0x24
   12130:	mov	fp, #0
   12134:	ldr	r1, [sp, #24]
   12138:	eor	r2, r0, #1
   1213c:	eor	r3, r1, #1
   12140:	and	r3, r2, r3
   12144:	and	r2, r1, r0
   12148:	str	r3, [sp, #44]	; 0x2c
   1214c:	str	r2, [sp, #76]	; 0x4c
   12150:	cmn	r8, #1
   12154:	beq	124d4 <close_stdout@@Base+0x910>
   12158:	subs	r3, fp, r8
   1215c:	movne	r3, #1
   12160:	cmp	r3, #0
   12164:	beq	124ec <close_stdout@@Base+0x928>
   12168:	ldr	r3, [sp, #28]
   1216c:	ldr	r0, [sp, #24]
   12170:	adds	r7, r3, #0
   12174:	movne	r7, #1
   12178:	ands	r6, r7, r0
   1217c:	bne	129d8 <close_stdout@@Base+0xe14>
   12180:	ldr	r1, [sp, #32]
   12184:	add	r5, r1, fp
   12188:	ldrb	r4, [r5]
   1218c:	cmp	r4, #126	; 0x7e
   12190:	addls	pc, pc, r4, lsl #2
   12194:	b	12758 <close_stdout@@Base+0xb94>
   12198:	b	12664 <close_stdout@@Base+0xaa0>
   1219c:	b	12758 <close_stdout@@Base+0xb94>
   121a0:	b	12758 <close_stdout@@Base+0xb94>
   121a4:	b	12758 <close_stdout@@Base+0xb94>
   121a8:	b	12758 <close_stdout@@Base+0xb94>
   121ac:	b	12758 <close_stdout@@Base+0xb94>
   121b0:	b	12758 <close_stdout@@Base+0xb94>
   121b4:	b	1264c <close_stdout@@Base+0xa88>
   121b8:	b	12634 <close_stdout@@Base+0xa70>
   121bc:	b	1265c <close_stdout@@Base+0xa98>
   121c0:	b	12654 <close_stdout@@Base+0xa90>
   121c4:	b	12644 <close_stdout@@Base+0xa80>
   121c8:	b	1263c <close_stdout@@Base+0xa78>
   121cc:	b	12600 <close_stdout@@Base+0xa3c>
   121d0:	b	12758 <close_stdout@@Base+0xb94>
   121d4:	b	12758 <close_stdout@@Base+0xb94>
   121d8:	b	12758 <close_stdout@@Base+0xb94>
   121dc:	b	12758 <close_stdout@@Base+0xb94>
   121e0:	b	12758 <close_stdout@@Base+0xb94>
   121e4:	b	12758 <close_stdout@@Base+0xb94>
   121e8:	b	12758 <close_stdout@@Base+0xb94>
   121ec:	b	12758 <close_stdout@@Base+0xb94>
   121f0:	b	12758 <close_stdout@@Base+0xb94>
   121f4:	b	12758 <close_stdout@@Base+0xb94>
   121f8:	b	12758 <close_stdout@@Base+0xb94>
   121fc:	b	12758 <close_stdout@@Base+0xb94>
   12200:	b	12758 <close_stdout@@Base+0xb94>
   12204:	b	12758 <close_stdout@@Base+0xb94>
   12208:	b	12758 <close_stdout@@Base+0xb94>
   1220c:	b	12758 <close_stdout@@Base+0xb94>
   12210:	b	12758 <close_stdout@@Base+0xb94>
   12214:	b	12758 <close_stdout@@Base+0xb94>
   12218:	b	1258c <close_stdout@@Base+0x9c8>
   1221c:	b	1258c <close_stdout@@Base+0x9c8>
   12220:	b	1258c <close_stdout@@Base+0x9c8>
   12224:	b	12584 <close_stdout@@Base+0x9c0>
   12228:	b	1258c <close_stdout@@Base+0x9c8>
   1222c:	b	12460 <close_stdout@@Base+0x89c>
   12230:	b	1258c <close_stdout@@Base+0x9c8>
   12234:	b	12700 <close_stdout@@Base+0xb3c>
   12238:	b	1258c <close_stdout@@Base+0x9c8>
   1223c:	b	1258c <close_stdout@@Base+0x9c8>
   12240:	b	1258c <close_stdout@@Base+0x9c8>
   12244:	b	12460 <close_stdout@@Base+0x89c>
   12248:	b	12460 <close_stdout@@Base+0x89c>
   1224c:	b	12460 <close_stdout@@Base+0x89c>
   12250:	b	12460 <close_stdout@@Base+0x89c>
   12254:	b	12460 <close_stdout@@Base+0x89c>
   12258:	b	12460 <close_stdout@@Base+0x89c>
   1225c:	b	12460 <close_stdout@@Base+0x89c>
   12260:	b	12460 <close_stdout@@Base+0x89c>
   12264:	b	12460 <close_stdout@@Base+0x89c>
   12268:	b	12460 <close_stdout@@Base+0x89c>
   1226c:	b	12460 <close_stdout@@Base+0x89c>
   12270:	b	12460 <close_stdout@@Base+0x89c>
   12274:	b	12460 <close_stdout@@Base+0x89c>
   12278:	b	12460 <close_stdout@@Base+0x89c>
   1227c:	b	12460 <close_stdout@@Base+0x89c>
   12280:	b	12460 <close_stdout@@Base+0x89c>
   12284:	b	1258c <close_stdout@@Base+0x9c8>
   12288:	b	1258c <close_stdout@@Base+0x9c8>
   1228c:	b	1258c <close_stdout@@Base+0x9c8>
   12290:	b	1258c <close_stdout@@Base+0x9c8>
   12294:	b	12394 <close_stdout@@Base+0x7d0>
   12298:	b	12758 <close_stdout@@Base+0xb94>
   1229c:	b	12460 <close_stdout@@Base+0x89c>
   122a0:	b	12460 <close_stdout@@Base+0x89c>
   122a4:	b	12460 <close_stdout@@Base+0x89c>
   122a8:	b	12460 <close_stdout@@Base+0x89c>
   122ac:	b	12460 <close_stdout@@Base+0x89c>
   122b0:	b	12460 <close_stdout@@Base+0x89c>
   122b4:	b	12460 <close_stdout@@Base+0x89c>
   122b8:	b	12460 <close_stdout@@Base+0x89c>
   122bc:	b	12460 <close_stdout@@Base+0x89c>
   122c0:	b	12460 <close_stdout@@Base+0x89c>
   122c4:	b	12460 <close_stdout@@Base+0x89c>
   122c8:	b	12460 <close_stdout@@Base+0x89c>
   122cc:	b	12460 <close_stdout@@Base+0x89c>
   122d0:	b	12460 <close_stdout@@Base+0x89c>
   122d4:	b	12460 <close_stdout@@Base+0x89c>
   122d8:	b	12460 <close_stdout@@Base+0x89c>
   122dc:	b	12460 <close_stdout@@Base+0x89c>
   122e0:	b	12460 <close_stdout@@Base+0x89c>
   122e4:	b	12460 <close_stdout@@Base+0x89c>
   122e8:	b	12460 <close_stdout@@Base+0x89c>
   122ec:	b	12460 <close_stdout@@Base+0x89c>
   122f0:	b	12460 <close_stdout@@Base+0x89c>
   122f4:	b	12460 <close_stdout@@Base+0x89c>
   122f8:	b	12460 <close_stdout@@Base+0x89c>
   122fc:	b	12460 <close_stdout@@Base+0x89c>
   12300:	b	12460 <close_stdout@@Base+0x89c>
   12304:	b	1258c <close_stdout@@Base+0x9c8>
   12308:	b	126e4 <close_stdout@@Base+0xb20>
   1230c:	b	12460 <close_stdout@@Base+0x89c>
   12310:	b	1258c <close_stdout@@Base+0x9c8>
   12314:	b	12460 <close_stdout@@Base+0x89c>
   12318:	b	1258c <close_stdout@@Base+0x9c8>
   1231c:	b	12460 <close_stdout@@Base+0x89c>
   12320:	b	12460 <close_stdout@@Base+0x89c>
   12324:	b	12460 <close_stdout@@Base+0x89c>
   12328:	b	12460 <close_stdout@@Base+0x89c>
   1232c:	b	12460 <close_stdout@@Base+0x89c>
   12330:	b	12460 <close_stdout@@Base+0x89c>
   12334:	b	12460 <close_stdout@@Base+0x89c>
   12338:	b	12460 <close_stdout@@Base+0x89c>
   1233c:	b	12460 <close_stdout@@Base+0x89c>
   12340:	b	12460 <close_stdout@@Base+0x89c>
   12344:	b	12460 <close_stdout@@Base+0x89c>
   12348:	b	12460 <close_stdout@@Base+0x89c>
   1234c:	b	12460 <close_stdout@@Base+0x89c>
   12350:	b	12460 <close_stdout@@Base+0x89c>
   12354:	b	12460 <close_stdout@@Base+0x89c>
   12358:	b	12460 <close_stdout@@Base+0x89c>
   1235c:	b	12460 <close_stdout@@Base+0x89c>
   12360:	b	12460 <close_stdout@@Base+0x89c>
   12364:	b	12460 <close_stdout@@Base+0x89c>
   12368:	b	12460 <close_stdout@@Base+0x89c>
   1236c:	b	12460 <close_stdout@@Base+0x89c>
   12370:	b	12460 <close_stdout@@Base+0x89c>
   12374:	b	12460 <close_stdout@@Base+0x89c>
   12378:	b	12460 <close_stdout@@Base+0x89c>
   1237c:	b	12460 <close_stdout@@Base+0x89c>
   12380:	b	12460 <close_stdout@@Base+0x89c>
   12384:	b	1256c <close_stdout@@Base+0x9a8>
   12388:	b	1258c <close_stdout@@Base+0x9c8>
   1238c:	b	1256c <close_stdout@@Base+0x9a8>
   12390:	b	12584 <close_stdout@@Base+0x9c0>
   12394:	ldr	r3, [sp, #160]	; 0xa0
   12398:	cmp	r3, #2
   1239c:	beq	12c28 <close_stdout@@Base+0x1064>
   123a0:	cmp	r3, #3
   123a4:	bne	12460 <close_stdout@@Base+0x89c>
   123a8:	ldr	r1, [sp, #164]	; 0xa4
   123ac:	tst	r1, #4
   123b0:	beq	12460 <close_stdout@@Base+0x89c>
   123b4:	add	r3, fp, #2
   123b8:	cmp	r8, r3
   123bc:	bls	12460 <close_stdout@@Base+0x89c>
   123c0:	ldrb	r2, [r5, #1]
   123c4:	mov	r1, #1
   123c8:	cmp	r2, #63	; 0x3f
   123cc:	bne	12460 <close_stdout@@Base+0x89c>
   123d0:	ldr	r0, [sp, #32]
   123d4:	ldrb	ip, [r0, r3]
   123d8:	sub	r0, ip, #33	; 0x21
   123dc:	uxtb	r0, r0
   123e0:	cmp	r0, #29
   123e4:	bhi	12460 <close_stdout@@Base+0x89c>
   123e8:	lsl	r1, r1, r0
   123ec:	movw	r0, #20929	; 0x51c1
   123f0:	movt	r0, #14336	; 0x3800
   123f4:	and	r0, r1, r0
   123f8:	cmp	r0, #0
   123fc:	beq	12460 <close_stdout@@Base+0x89c>
   12400:	ldr	r1, [sp, #36]	; 0x24
   12404:	cmp	r1, #0
   12408:	bne	125a8 <close_stdout@@Base+0x9e4>
   1240c:	cmp	r9, sl
   12410:	mov	r4, ip
   12414:	mov	fp, r3
   12418:	ldrcc	r0, [sp, #40]	; 0x28
   1241c:	strbcc	r2, [r0, r9]
   12420:	add	r2, r9, #1
   12424:	cmp	sl, r2
   12428:	ldrhi	r0, [sp, #40]	; 0x28
   1242c:	movhi	r1, #34	; 0x22
   12430:	strbhi	r1, [r0, r2]
   12434:	add	r2, r9, #2
   12438:	cmp	sl, r2
   1243c:	ldrhi	r0, [sp, #40]	; 0x28
   12440:	movhi	r1, #34	; 0x22
   12444:	strbhi	r1, [r0, r2]
   12448:	add	r2, r9, #3
   1244c:	cmp	sl, r2
   12450:	add	r9, r9, #4
   12454:	ldrhi	r0, [sp, #40]	; 0x28
   12458:	movhi	r1, #63	; 0x3f
   1245c:	strbhi	r1, [r0, r2]
   12460:	ldr	r0, [sp, #44]	; 0x2c
   12464:	cmp	r0, #0
   12468:	bne	12490 <close_stdout@@Base+0x8cc>
   1246c:	ldr	r1, [sp, #48]	; 0x30
   12470:	cmp	r1, #0
   12474:	beq	12490 <close_stdout@@Base+0x8cc>
   12478:	ubfx	r2, r4, #5, #8
   1247c:	and	r3, r4, #31
   12480:	ldr	r2, [r1, r2, lsl #2]
   12484:	lsr	r3, r2, r3
   12488:	tst	r3, #1
   1248c:	bne	12498 <close_stdout@@Base+0x8d4>
   12490:	cmp	r6, #0
   12494:	beq	124b8 <close_stdout@@Base+0x8f4>
   12498:	ldr	r2, [sp, #36]	; 0x24
   1249c:	cmp	r2, #0
   124a0:	bne	125a8 <close_stdout@@Base+0x9e4>
   124a4:	cmp	r9, sl
   124a8:	ldrcc	r0, [sp, #40]	; 0x28
   124ac:	movcc	r3, #92	; 0x5c
   124b0:	strbcc	r3, [r0, r9]
   124b4:	add	r9, r9, #1
   124b8:	add	fp, fp, #1
   124bc:	cmp	r9, sl
   124c0:	ldrcc	r1, [sp, #40]	; 0x28
   124c4:	strbcc	r4, [r1, r9]
   124c8:	cmn	r8, #1
   124cc:	add	r9, r9, #1
   124d0:	bne	12158 <close_stdout@@Base+0x594>
   124d4:	ldr	r2, [sp, #32]
   124d8:	ldrb	r3, [r2, fp]
   124dc:	adds	r3, r3, #0
   124e0:	movne	r3, #1
   124e4:	cmp	r3, #0
   124e8:	bne	12168 <close_stdout@@Base+0x5a4>
   124ec:	ldr	r3, [sp, #160]	; 0xa0
   124f0:	cmp	r9, #0
   124f4:	cmpeq	r3, #2
   124f8:	bne	12508 <close_stdout@@Base+0x944>
   124fc:	ldr	r0, [sp, #36]	; 0x24
   12500:	cmp	r0, #0
   12504:	bne	125a8 <close_stdout@@Base+0x9e4>
   12508:	ldr	r1, [sp, #36]	; 0x24
   1250c:	ldr	r2, [sp, #52]	; 0x34
   12510:	eor	r3, r1, #1
   12514:	cmp	r2, #0
   12518:	moveq	r3, #0
   1251c:	andne	r3, r3, #1
   12520:	cmp	r3, #0
   12524:	beq	12550 <close_stdout@@Base+0x98c>
   12528:	ldrb	r3, [r2]
   1252c:	cmp	r3, #0
   12530:	beq	12550 <close_stdout@@Base+0x98c>
   12534:	ldr	r1, [sp, #40]	; 0x28
   12538:	cmp	sl, r9
   1253c:	strbhi	r3, [r1, r9]
   12540:	ldrb	r3, [r2, #1]!
   12544:	add	r9, r9, #1
   12548:	cmp	r3, #0
   1254c:	bne	12538 <close_stdout@@Base+0x974>
   12550:	cmp	r9, sl
   12554:	movcs	r0, r9
   12558:	ldrcc	r1, [sp, #40]	; 0x28
   1255c:	movcc	r3, #0
   12560:	movcc	r0, r9
   12564:	strbcc	r3, [r1, r9]
   12568:	b	125e4 <close_stdout@@Base+0xa20>
   1256c:	cmn	r8, #1
   12570:	beq	12c38 <close_stdout@@Base+0x1074>
   12574:	subs	r3, r8, #1
   12578:	movne	r3, #1
   1257c:	cmp	r3, #0
   12580:	bne	12460 <close_stdout@@Base+0x89c>
   12584:	cmp	fp, #0
   12588:	bne	12460 <close_stdout@@Base+0x89c>
   1258c:	ldr	r3, [sp, #36]	; 0x24
   12590:	ldr	r0, [sp, #160]	; 0xa0
   12594:	cmp	r0, #2
   12598:	movne	r3, #0
   1259c:	andeq	r3, r3, #1
   125a0:	cmp	r3, #0
   125a4:	beq	12460 <close_stdout@@Base+0x89c>
   125a8:	ldr	r2, [sp, #164]	; 0xa4
   125ac:	mov	ip, #0
   125b0:	ldr	r0, [sp, #160]	; 0xa0
   125b4:	bic	r3, r2, #2
   125b8:	ldr	r1, [sp, #72]	; 0x48
   125bc:	ldr	r2, [sp, #68]	; 0x44
   125c0:	stm	sp, {r0, r3}
   125c4:	mov	r3, r8
   125c8:	str	r1, [sp, #12]
   125cc:	mov	r1, sl
   125d0:	str	r2, [sp, #16]
   125d4:	ldr	r0, [sp, #40]	; 0x28
   125d8:	ldr	r2, [sp, #32]
   125dc:	str	ip, [sp, #8]
   125e0:	bl	12078 <close_stdout@@Base+0x4b4>
   125e4:	ldr	r1, [sp, #56]	; 0x38
   125e8:	ldr	r2, [sp, #116]	; 0x74
   125ec:	ldr	r3, [r1]
   125f0:	cmp	r2, r3
   125f4:	bne	12d28 <close_stdout@@Base+0x1164>
   125f8:	add	sp, sp, #124	; 0x7c
   125fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12600:	mov	r3, #114	; 0x72
   12604:	ldr	r2, [sp, #36]	; 0x24
   12608:	ldr	r0, [sp, #160]	; 0xa0
   1260c:	cmp	r0, #2
   12610:	movne	r2, #0
   12614:	andeq	r2, r2, #1
   12618:	cmp	r2, #0
   1261c:	bne	125a8 <close_stdout@@Base+0x9e4>
   12620:	ldr	r1, [sp, #24]
   12624:	cmp	r1, #0
   12628:	beq	12460 <close_stdout@@Base+0x89c>
   1262c:	mov	r4, r3
   12630:	b	12498 <close_stdout@@Base+0x8d4>
   12634:	mov	r3, #98	; 0x62
   12638:	b	12620 <close_stdout@@Base+0xa5c>
   1263c:	mov	r3, #102	; 0x66
   12640:	b	12620 <close_stdout@@Base+0xa5c>
   12644:	mov	r3, #118	; 0x76
   12648:	b	12620 <close_stdout@@Base+0xa5c>
   1264c:	mov	r3, #97	; 0x61
   12650:	b	12620 <close_stdout@@Base+0xa5c>
   12654:	mov	r3, #110	; 0x6e
   12658:	b	12604 <close_stdout@@Base+0xa40>
   1265c:	mov	r3, #116	; 0x74
   12660:	b	12604 <close_stdout@@Base+0xa40>
   12664:	ldr	r2, [sp, #24]
   12668:	cmp	r2, #0
   1266c:	beq	12c14 <close_stdout@@Base+0x1050>
   12670:	ldr	r3, [sp, #36]	; 0x24
   12674:	cmp	r3, #0
   12678:	bne	125a8 <close_stdout@@Base+0x9e4>
   1267c:	cmp	r9, sl
   12680:	add	r2, r9, #1
   12684:	ldrcc	r0, [sp, #40]	; 0x28
   12688:	movcc	r3, #92	; 0x5c
   1268c:	strbcc	r3, [r0, r9]
   12690:	add	r3, fp, #1
   12694:	cmp	r8, r3
   12698:	bls	126d8 <close_stdout@@Base+0xb14>
   1269c:	ldr	r1, [sp, #32]
   126a0:	ldrb	r3, [r1, r3]
   126a4:	sub	r3, r3, #48	; 0x30
   126a8:	cmp	r3, #9
   126ac:	bhi	126d8 <close_stdout@@Base+0xb14>
   126b0:	cmp	sl, r2
   126b4:	ldrhi	r0, [sp, #40]	; 0x28
   126b8:	movhi	r3, #48	; 0x30
   126bc:	strbhi	r3, [r0, r2]
   126c0:	add	r3, r9, #2
   126c4:	cmp	sl, r3
   126c8:	ldrhi	r1, [sp, #40]	; 0x28
   126cc:	movhi	r2, #48	; 0x30
   126d0:	strbhi	r2, [r1, r3]
   126d4:	add	r2, r9, #3
   126d8:	mov	r9, r2
   126dc:	mov	r4, #48	; 0x30
   126e0:	b	1246c <close_stdout@@Base+0x8a8>
   126e4:	ldr	r1, [sp, #76]	; 0x4c
   126e8:	cmp	r1, #0
   126ec:	beq	126f8 <close_stdout@@Base+0xb34>
   126f0:	cmp	r7, #0
   126f4:	bne	124b8 <close_stdout@@Base+0x8f4>
   126f8:	mov	r3, r4
   126fc:	b	12604 <close_stdout@@Base+0xa40>
   12700:	ldr	r1, [sp, #160]	; 0xa0
   12704:	cmp	r1, #2
   12708:	bne	12460 <close_stdout@@Base+0x89c>
   1270c:	ldr	r2, [sp, #36]	; 0x24
   12710:	cmp	r2, #0
   12714:	bne	125a8 <close_stdout@@Base+0x9e4>
   12718:	cmp	r9, sl
   1271c:	ldrcc	r0, [sp, #40]	; 0x28
   12720:	movcc	r3, #39	; 0x27
   12724:	strbcc	r3, [r0, r9]
   12728:	add	r3, r9, #1
   1272c:	cmp	sl, r3
   12730:	ldrhi	r1, [sp, #40]	; 0x28
   12734:	movhi	r2, #92	; 0x5c
   12738:	strbhi	r2, [r1, r3]
   1273c:	add	r3, r9, #2
   12740:	cmp	sl, r3
   12744:	add	r9, r9, #3
   12748:	ldrhi	r0, [sp, #40]	; 0x28
   1274c:	movhi	r2, #39	; 0x27
   12750:	strbhi	r2, [r0, r3]
   12754:	b	12460 <close_stdout@@Base+0x89c>
   12758:	ldr	r1, [sp, #64]	; 0x40
   1275c:	cmp	r1, #1
   12760:	bne	12a58 <close_stdout@@Base+0xe94>
   12764:	bl	11110 <__ctype_b_loc@plt>
   12768:	ldr	r2, [sp, #64]	; 0x40
   1276c:	sxth	r3, r4
   12770:	str	r2, [sp, #60]	; 0x3c
   12774:	lsl	r3, r3, #1
   12778:	ldr	r2, [r0]
   1277c:	ldrh	r2, [r2, r3]
   12780:	eor	r2, r2, #16384	; 0x4000
   12784:	ubfx	r2, r2, #14, #1
   12788:	ldr	r1, [sp, #24]
   1278c:	ands	r2, r2, r1
   12790:	beq	12460 <close_stdout@@Base+0x89c>
   12794:	ldr	r3, [sp, #60]	; 0x3c
   12798:	mov	r0, #92	; 0x5c
   1279c:	ldr	r7, [sp, #36]	; 0x24
   127a0:	add	r1, r3, fp
   127a4:	str	r8, [sp, #60]	; 0x3c
   127a8:	ldr	r3, [sp, #40]	; 0x28
   127ac:	b	12810 <close_stdout@@Base+0xc4c>
   127b0:	cmp	r7, #0
   127b4:	bne	12c50 <close_stdout@@Base+0x108c>
   127b8:	add	ip, r9, #1
   127bc:	cmp	r9, sl
   127c0:	strbcc	r0, [r3, r9]
   127c4:	cmp	sl, ip
   127c8:	lsrhi	r8, r4, #6
   127cc:	addhi	r8, r8, #48	; 0x30
   127d0:	strbhi	r8, [r3, ip]
   127d4:	add	ip, r9, #2
   127d8:	add	r9, r9, #3
   127dc:	cmp	sl, ip
   127e0:	ubfxhi	r8, r4, #3, #3
   127e4:	and	r4, r4, #7
   127e8:	add	r4, r4, #48	; 0x30
   127ec:	addhi	r8, r8, #48	; 0x30
   127f0:	strbhi	r8, [r3, ip]
   127f4:	add	fp, fp, #1
   127f8:	cmp	r1, fp
   127fc:	bls	1283c <close_stdout@@Base+0xc78>
   12800:	cmp	r9, sl
   12804:	strbcc	r4, [r3, r9]
   12808:	ldrb	r4, [r5, #1]!
   1280c:	add	r9, r9, #1
   12810:	cmp	r2, #0
   12814:	bne	127b0 <close_stdout@@Base+0xbec>
   12818:	cmp	r6, #0
   1281c:	beq	127f4 <close_stdout@@Base+0xc30>
   12820:	add	fp, fp, #1
   12824:	cmp	r9, sl
   12828:	strbcc	r0, [r3, r9]
   1282c:	cmp	r1, fp
   12830:	add	r9, r9, #1
   12834:	mov	r6, #0
   12838:	bhi	12800 <close_stdout@@Base+0xc3c>
   1283c:	ldr	r8, [sp, #60]	; 0x3c
   12840:	b	124bc <close_stdout@@Base+0x8f8>
   12844:	ldr	r3, [sp, #36]	; 0x24
   12848:	cmp	r3, #0
   1284c:	bne	12d50 <close_stdout@@Base+0x118c>
   12850:	cmp	sl, #0
   12854:	beq	12c68 <close_stdout@@Base+0x10a4>
   12858:	ldr	r1, [sp, #40]	; 0x28
   1285c:	mov	r0, #1
   12860:	ldr	r2, [pc, #1296]	; 12d78 <close_stdout@@Base+0x11b4>
   12864:	mov	r3, #34	; 0x22
   12868:	str	r0, [sp, #24]
   1286c:	mov	r9, r0
   12870:	add	r2, pc, r2
   12874:	str	r0, [sp, #28]
   12878:	strb	r3, [r1]
   1287c:	str	r2, [sp, #52]	; 0x34
   12880:	b	1212c <close_stdout@@Base+0x568>
   12884:	ldr	r3, [pc, #1264]	; 12d7c <close_stdout@@Base+0x11b8>
   12888:	mov	r2, #1
   1288c:	mov	r0, #3
   12890:	str	r2, [sp, #36]	; 0x24
   12894:	add	r3, pc, r3
   12898:	str	r2, [sp, #24]
   1289c:	str	r3, [sp, #52]	; 0x34
   128a0:	mov	r9, #0
   128a4:	str	r2, [sp, #28]
   128a8:	str	r0, [sp, #160]	; 0xa0
   128ac:	b	1212c <close_stdout@@Base+0x568>
   128b0:	mov	r0, #0
   128b4:	mov	r1, #1
   128b8:	str	r0, [sp, #36]	; 0x24
   128bc:	mov	r9, r0
   128c0:	str	r1, [sp, #24]
   128c4:	str	r0, [sp, #28]
   128c8:	str	r0, [sp, #52]	; 0x34
   128cc:	b	1212c <close_stdout@@Base+0x568>
   128d0:	ldr	r3, [sp, #160]	; 0xa0
   128d4:	cmp	r3, #8
   128d8:	beq	12904 <close_stdout@@Base+0xd40>
   128dc:	ldr	r0, [pc, #1180]	; 12d80 <close_stdout@@Base+0x11bc>
   128e0:	mov	r1, r3
   128e4:	add	r0, pc, r0
   128e8:	bl	11f14 <close_stdout@@Base+0x350>
   128ec:	ldr	r1, [sp, #160]	; 0xa0
   128f0:	str	r0, [sp, #72]	; 0x48
   128f4:	ldr	r0, [pc, #1160]	; 12d84 <close_stdout@@Base+0x11c0>
   128f8:	add	r0, pc, r0
   128fc:	bl	11f14 <close_stdout@@Base+0x350>
   12900:	str	r0, [sp, #68]	; 0x44
   12904:	ldr	r0, [sp, #36]	; 0x24
   12908:	cmp	r0, #0
   1290c:	movne	r9, #0
   12910:	bne	12948 <close_stdout@@Base+0xd84>
   12914:	ldr	r1, [sp, #72]	; 0x48
   12918:	ldrb	r3, [r1]
   1291c:	cmp	r3, #0
   12920:	beq	12d20 <close_stdout@@Base+0x115c>
   12924:	mov	r2, r1
   12928:	ldr	r1, [sp, #40]	; 0x28
   1292c:	mov	r9, r0
   12930:	cmp	r9, sl
   12934:	strbcc	r3, [r1, r9]
   12938:	ldrb	r3, [r2, #1]!
   1293c:	add	r9, r9, #1
   12940:	cmp	r3, #0
   12944:	bne	12930 <close_stdout@@Base+0xd6c>
   12948:	ldr	r0, [sp, #68]	; 0x44
   1294c:	str	r0, [sp, #52]	; 0x34
   12950:	bl	11128 <strlen@plt>
   12954:	mov	r2, #1
   12958:	str	r2, [sp, #24]
   1295c:	str	r0, [sp, #28]
   12960:	b	1212c <close_stdout@@Base+0x568>
   12964:	ldr	r3, [pc, #1052]	; 12d88 <close_stdout@@Base+0x11c4>
   12968:	mov	r2, #0
   1296c:	mov	r1, #1
   12970:	mov	r0, #2
   12974:	add	r3, pc, r3
   12978:	str	r1, [sp, #36]	; 0x24
   1297c:	str	r2, [sp, #24]
   12980:	mov	r9, r2
   12984:	str	r1, [sp, #28]
   12988:	str	r3, [sp, #52]	; 0x34
   1298c:	str	r0, [sp, #160]	; 0xa0
   12990:	b	1212c <close_stdout@@Base+0x568>
   12994:	ldr	r3, [sp, #36]	; 0x24
   12998:	cmp	r3, #0
   1299c:	bne	12d2c <close_stdout@@Base+0x1168>
   129a0:	cmp	sl, #0
   129a4:	beq	12c88 <close_stdout@@Base+0x10c4>
   129a8:	ldr	r1, [sp, #40]	; 0x28
   129ac:	mov	r3, #39	; 0x27
   129b0:	ldr	r2, [sp, #36]	; 0x24
   129b4:	mov	r0, #1
   129b8:	mov	r9, r0
   129bc:	str	r0, [sp, #28]
   129c0:	strb	r3, [r1]
   129c4:	ldr	r3, [pc, #960]	; 12d8c <close_stdout@@Base+0x11c8>
   129c8:	str	r2, [sp, #24]
   129cc:	add	r3, pc, r3
   129d0:	str	r3, [sp, #52]	; 0x34
   129d4:	b	1212c <close_stdout@@Base+0x568>
   129d8:	ldr	r2, [sp, #28]
   129dc:	cmp	r2, #1
   129e0:	add	r4, fp, r2
   129e4:	movls	r3, #0
   129e8:	movhi	r3, #1
   129ec:	cmn	r8, #1
   129f0:	movne	r3, #0
   129f4:	cmp	r3, #0
   129f8:	beq	12a08 <close_stdout@@Base+0xe44>
   129fc:	ldr	r0, [sp, #32]
   12a00:	bl	11128 <strlen@plt>
   12a04:	mov	r8, r0
   12a08:	cmp	r8, r4
   12a0c:	ldrcc	r3, [sp, #32]
   12a10:	movcc	r6, #0
   12a14:	addcc	r5, r3, fp
   12a18:	bcc	12188 <close_stdout@@Base+0x5c4>
   12a1c:	ldr	r0, [sp, #32]
   12a20:	ldr	r1, [sp, #52]	; 0x34
   12a24:	add	r5, r0, fp
   12a28:	ldr	r2, [sp, #28]
   12a2c:	mov	r0, r5
   12a30:	bl	11014 <memcmp@plt>
   12a34:	cmp	r0, #0
   12a38:	bne	12a50 <close_stdout@@Base+0xe8c>
   12a3c:	ldr	r1, [sp, #36]	; 0x24
   12a40:	cmp	r1, #0
   12a44:	bne	125a8 <close_stdout@@Base+0x9e4>
   12a48:	mov	r6, #1
   12a4c:	b	12188 <close_stdout@@Base+0x5c4>
   12a50:	mov	r6, #0
   12a54:	b	12188 <close_stdout@@Base+0x5c4>
   12a58:	add	r7, sp, #108	; 0x6c
   12a5c:	cmn	r8, #1
   12a60:	mov	r3, #0
   12a64:	str	r3, [sp, #108]	; 0x6c
   12a68:	str	r3, [r7, #4]
   12a6c:	beq	12c58 <close_stdout@@Base+0x1094>
   12a70:	mov	r1, #0
   12a74:	ldr	r0, [sp, #32]
   12a78:	mov	ip, #1
   12a7c:	str	r9, [sp, #88]	; 0x58
   12a80:	str	r6, [sp, #96]	; 0x60
   12a84:	mov	r9, r1
   12a88:	str	r5, [sp, #100]	; 0x64
   12a8c:	mov	r6, ip
   12a90:	mov	r5, r7
   12a94:	add	r3, sp, #104	; 0x68
   12a98:	sub	r0, r0, #1
   12a9c:	str	r3, [sp, #80]	; 0x50
   12aa0:	str	r0, [sp, #84]	; 0x54
   12aa4:	str	r1, [sp, #60]	; 0x3c
   12aa8:	str	r4, [sp, #92]	; 0x5c
   12aac:	ldr	r2, [sp, #32]
   12ab0:	add	r7, r9, fp
   12ab4:	add	r0, sp, #104	; 0x68
   12ab8:	mov	r3, r5
   12abc:	add	r4, r2, r7
   12ac0:	rsb	r2, r7, r8
   12ac4:	mov	r1, r4
   12ac8:	bl	110a4 <mbrtowc@plt>
   12acc:	subs	r2, r0, #0
   12ad0:	beq	12bdc <close_stdout@@Base+0x1018>
   12ad4:	cmn	r2, #1
   12ad8:	beq	12d04 <close_stdout@@Base+0x1140>
   12adc:	cmn	r2, #2
   12ae0:	beq	12ca8 <close_stdout@@Base+0x10e4>
   12ae4:	ldr	r3, [sp, #36]	; 0x24
   12ae8:	ldr	r0, [sp, #160]	; 0xa0
   12aec:	cmp	r0, #2
   12af0:	movne	r3, #0
   12af4:	andeq	r3, r3, #1
   12af8:	cmp	r3, #0
   12afc:	beq	12bb8 <close_stdout@@Base+0xff4>
   12b00:	cmp	r2, #1
   12b04:	beq	12bb8 <close_stdout@@Base+0xff4>
   12b08:	ldr	r1, [sp, #84]	; 0x54
   12b0c:	add	r3, r1, r2
   12b10:	add	r7, r3, r7
   12b14:	ldrb	r3, [r4, #1]!
   12b18:	sub	r3, r3, #91	; 0x5b
   12b1c:	cmp	r3, #33	; 0x21
   12b20:	addls	pc, pc, r3, lsl #2
   12b24:	b	12bb0 <close_stdout@@Base+0xfec>
   12b28:	b	125a8 <close_stdout@@Base+0x9e4>
   12b2c:	b	125a8 <close_stdout@@Base+0x9e4>
   12b30:	b	12bb0 <close_stdout@@Base+0xfec>
   12b34:	b	125a8 <close_stdout@@Base+0x9e4>
   12b38:	b	12bb0 <close_stdout@@Base+0xfec>
   12b3c:	b	125a8 <close_stdout@@Base+0x9e4>
   12b40:	b	12bb0 <close_stdout@@Base+0xfec>
   12b44:	b	12bb0 <close_stdout@@Base+0xfec>
   12b48:	b	12bb0 <close_stdout@@Base+0xfec>
   12b4c:	b	12bb0 <close_stdout@@Base+0xfec>
   12b50:	b	12bb0 <close_stdout@@Base+0xfec>
   12b54:	b	12bb0 <close_stdout@@Base+0xfec>
   12b58:	b	12bb0 <close_stdout@@Base+0xfec>
   12b5c:	b	12bb0 <close_stdout@@Base+0xfec>
   12b60:	b	12bb0 <close_stdout@@Base+0xfec>
   12b64:	b	12bb0 <close_stdout@@Base+0xfec>
   12b68:	b	12bb0 <close_stdout@@Base+0xfec>
   12b6c:	b	12bb0 <close_stdout@@Base+0xfec>
   12b70:	b	12bb0 <close_stdout@@Base+0xfec>
   12b74:	b	12bb0 <close_stdout@@Base+0xfec>
   12b78:	b	12bb0 <close_stdout@@Base+0xfec>
   12b7c:	b	12bb0 <close_stdout@@Base+0xfec>
   12b80:	b	12bb0 <close_stdout@@Base+0xfec>
   12b84:	b	12bb0 <close_stdout@@Base+0xfec>
   12b88:	b	12bb0 <close_stdout@@Base+0xfec>
   12b8c:	b	12bb0 <close_stdout@@Base+0xfec>
   12b90:	b	12bb0 <close_stdout@@Base+0xfec>
   12b94:	b	12bb0 <close_stdout@@Base+0xfec>
   12b98:	b	12bb0 <close_stdout@@Base+0xfec>
   12b9c:	b	12bb0 <close_stdout@@Base+0xfec>
   12ba0:	b	12bb0 <close_stdout@@Base+0xfec>
   12ba4:	b	12bb0 <close_stdout@@Base+0xfec>
   12ba8:	b	12bb0 <close_stdout@@Base+0xfec>
   12bac:	b	125a8 <close_stdout@@Base+0x9e4>
   12bb0:	cmp	r4, r7
   12bb4:	bne	12b14 <close_stdout@@Base+0xf50>
   12bb8:	ldr	r0, [sp, #104]	; 0x68
   12bbc:	add	r9, r9, r2
   12bc0:	bl	11050 <iswprint@plt>
   12bc4:	cmp	r0, #0
   12bc8:	mov	r0, r5
   12bcc:	moveq	r6, #0
   12bd0:	bl	11008 <mbsinit@plt>
   12bd4:	cmp	r0, #0
   12bd8:	beq	12aac <close_stdout@@Base+0xee8>
   12bdc:	mov	ip, r6
   12be0:	eor	r2, ip, #1
   12be4:	str	r9, [sp, #60]	; 0x3c
   12be8:	ldr	r4, [sp, #92]	; 0x5c
   12bec:	uxtb	r2, r2
   12bf0:	ldr	r9, [sp, #88]	; 0x58
   12bf4:	ldr	r6, [sp, #96]	; 0x60
   12bf8:	ldr	r5, [sp, #100]	; 0x64
   12bfc:	ldr	r3, [sp, #60]	; 0x3c
   12c00:	cmp	r3, #1
   12c04:	bls	12788 <close_stdout@@Base+0xbc4>
   12c08:	ldr	r0, [sp, #24]
   12c0c:	and	r2, r2, r0
   12c10:	b	12794 <close_stdout@@Base+0xbd0>
   12c14:	ldr	r2, [sp, #164]	; 0xa4
   12c18:	tst	r2, #1
   12c1c:	addne	fp, fp, #1
   12c20:	bne	12150 <close_stdout@@Base+0x58c>
   12c24:	b	12460 <close_stdout@@Base+0x89c>
   12c28:	ldr	r0, [sp, #36]	; 0x24
   12c2c:	cmp	r0, #0
   12c30:	beq	12460 <close_stdout@@Base+0x89c>
   12c34:	b	125a8 <close_stdout@@Base+0x9e4>
   12c38:	ldr	r2, [sp, #32]
   12c3c:	ldrb	r3, [r2, #1]
   12c40:	adds	r3, r3, #0
   12c44:	movne	r3, #1
   12c48:	b	1257c <close_stdout@@Base+0x9b8>
   12c4c:	bl	11224 <abort@plt>
   12c50:	ldr	r8, [sp, #60]	; 0x3c
   12c54:	b	125a8 <close_stdout@@Base+0x9e4>
   12c58:	ldr	r0, [sp, #32]
   12c5c:	bl	11128 <strlen@plt>
   12c60:	mov	r8, r0
   12c64:	b	12a70 <close_stdout@@Base+0xeac>
   12c68:	ldr	r2, [pc, #288]	; 12d90 <close_stdout@@Base+0x11cc>
   12c6c:	mov	r1, #1
   12c70:	mov	r9, r1
   12c74:	str	r1, [sp, #24]
   12c78:	add	r2, pc, r2
   12c7c:	str	r1, [sp, #28]
   12c80:	str	r2, [sp, #52]	; 0x34
   12c84:	b	1212c <close_stdout@@Base+0x568>
   12c88:	ldr	r2, [pc, #260]	; 12d94 <close_stdout@@Base+0x11d0>
   12c8c:	mov	r3, #1
   12c90:	mov	r9, r3
   12c94:	str	r3, [sp, #28]
   12c98:	add	r2, pc, r2
   12c9c:	str	sl, [sp, #24]
   12ca0:	str	r2, [sp, #52]	; 0x34
   12ca4:	b	1212c <close_stdout@@Base+0x568>
   12ca8:	cmp	r8, r7
   12cac:	str	r9, [sp, #60]	; 0x3c
   12cb0:	mov	ip, r4
   12cb4:	ldr	r6, [sp, #96]	; 0x60
   12cb8:	ldr	r9, [sp, #88]	; 0x58
   12cbc:	ldr	r4, [sp, #92]	; 0x5c
   12cc0:	ldr	r5, [sp, #100]	; 0x64
   12cc4:	bls	12cfc <close_stdout@@Base+0x1138>
   12cc8:	ldrb	r3, [ip]
   12ccc:	cmp	r3, #0
   12cd0:	beq	12cfc <close_stdout@@Base+0x1138>
   12cd4:	ldr	r3, [sp, #60]	; 0x3c
   12cd8:	b	12ce8 <close_stdout@@Base+0x1124>
   12cdc:	ldrb	r2, [r5, r3]
   12ce0:	cmp	r2, #0
   12ce4:	beq	12cf8 <close_stdout@@Base+0x1134>
   12ce8:	add	r3, r3, #1
   12cec:	add	r2, fp, r3
   12cf0:	cmp	r8, r2
   12cf4:	bhi	12cdc <close_stdout@@Base+0x1118>
   12cf8:	str	r3, [sp, #60]	; 0x3c
   12cfc:	mov	r2, #1
   12d00:	b	12bfc <close_stdout@@Base+0x1038>
   12d04:	str	r9, [sp, #60]	; 0x3c
   12d08:	mov	r2, #1
   12d0c:	ldr	r4, [sp, #92]	; 0x5c
   12d10:	ldr	r6, [sp, #96]	; 0x60
   12d14:	ldr	r9, [sp, #88]	; 0x58
   12d18:	ldr	r5, [sp, #100]	; 0x64
   12d1c:	b	12bfc <close_stdout@@Base+0x1038>
   12d20:	ldr	r9, [sp, #36]	; 0x24
   12d24:	b	12948 <close_stdout@@Base+0xd84>
   12d28:	bl	1102c <__stack_chk_fail@plt>
   12d2c:	ldr	r1, [pc, #100]	; 12d98 <close_stdout@@Base+0x11d4>
   12d30:	mov	r3, #0
   12d34:	mov	r0, #1
   12d38:	str	r3, [sp, #24]
   12d3c:	add	r1, pc, r1
   12d40:	str	r0, [sp, #28]
   12d44:	mov	r9, r3
   12d48:	str	r1, [sp, #52]	; 0x34
   12d4c:	b	1212c <close_stdout@@Base+0x568>
   12d50:	ldr	r0, [pc, #68]	; 12d9c <close_stdout@@Base+0x11d8>
   12d54:	mov	r3, #1
   12d58:	mov	r9, #0
   12d5c:	str	r3, [sp, #24]
   12d60:	add	r0, pc, r0
   12d64:	str	r3, [sp, #28]
   12d68:	str	r0, [sp, #52]	; 0x34
   12d6c:	b	1212c <close_stdout@@Base+0x568>
   12d70:	andeq	r3, r1, r4, ror #30
   12d74:	andeq	r0, r0, r0, lsl #2
   12d78:	ldrdeq	r2, [r0], -r0
   12d7c:	andeq	r2, r0, ip, lsr #29
   12d80:	andeq	r2, r0, r8, ror #28
   12d84:	andeq	r2, r0, r4, asr #28
   12d88:	andeq	r2, r0, r8, asr #27
   12d8c:	andeq	r2, r0, r0, ror sp
   12d90:	andeq	r2, r0, r8, asr #21
   12d94:	andeq	r2, r0, r4, lsr #21
   12d98:	andeq	r2, r0, r0, lsl #20
   12d9c:	andeq	r2, r0, r0, ror #19
   12da0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12da4:	sub	sp, sp, #44	; 0x2c
   12da8:	mov	r6, r0
   12dac:	mov	r9, r1
   12db0:	mov	sl, r2
   12db4:	mov	r4, r3
   12db8:	bl	11140 <__errno_location@plt>
   12dbc:	ldr	fp, [pc, #412]	; 12f60 <close_stdout@@Base+0x139c>
   12dc0:	cmp	r6, #0
   12dc4:	add	fp, pc, fp
   12dc8:	ldr	r5, [fp]
   12dcc:	ldr	r1, [r0]
   12dd0:	mov	r8, r0
   12dd4:	str	r1, [sp, #36]	; 0x24
   12dd8:	blt	12f58 <close_stdout@@Base+0x1394>
   12ddc:	ldr	r3, [pc, #384]	; 12f64 <close_stdout@@Base+0x13a0>
   12de0:	add	r3, pc, r3
   12de4:	ldr	r3, [r3]
   12de8:	cmp	r6, r3
   12dec:	bcc	12e40 <close_stdout@@Base+0x127c>
   12df0:	add	r7, r6, #1
   12df4:	cmn	r7, #-536870911	; 0xe0000001
   12df8:	bhi	12f5c <close_stdout@@Base+0x1398>
   12dfc:	add	r3, fp, #4
   12e00:	cmp	r5, r3
   12e04:	beq	12f30 <close_stdout@@Base+0x136c>
   12e08:	mov	r0, r5
   12e0c:	lsl	r1, r7, #3
   12e10:	bl	13c38 <close_stdout@@Base+0x2074>
   12e14:	mov	r5, r0
   12e18:	str	r0, [fp]
   12e1c:	ldr	fp, [pc, #324]	; 12f68 <close_stdout@@Base+0x13a4>
   12e20:	mov	r1, #0
   12e24:	add	fp, pc, fp
   12e28:	ldr	r0, [fp]
   12e2c:	rsb	r2, r0, r7
   12e30:	add	r0, r5, r0, lsl #3
   12e34:	lsl	r2, r2, #3
   12e38:	bl	11170 <memset@plt>
   12e3c:	str	r7, [fp]
   12e40:	add	r2, r4, #8
   12e44:	str	r2, [sp, #32]
   12e48:	ldr	r1, [r4]
   12e4c:	add	fp, r5, r6, lsl #3
   12e50:	ldr	lr, [sp, #32]
   12e54:	mov	r2, r9
   12e58:	ldr	r3, [r4, #4]
   12e5c:	ldr	ip, [r5, r6, lsl #3]
   12e60:	ldr	r7, [fp, #4]
   12e64:	orr	r3, r3, #1
   12e68:	str	r1, [sp]
   12e6c:	str	r3, [sp, #4]
   12e70:	mov	r1, ip
   12e74:	str	lr, [sp, #8]
   12e78:	mov	r0, r7
   12e7c:	ldr	lr, [r4, #40]	; 0x28
   12e80:	str	r3, [sp, #28]
   12e84:	mov	r3, sl
   12e88:	str	lr, [sp, #12]
   12e8c:	ldr	lr, [r4, #44]	; 0x2c
   12e90:	str	ip, [sp, #24]
   12e94:	str	lr, [sp, #16]
   12e98:	bl	12078 <close_stdout@@Base+0x4b4>
   12e9c:	ldr	ip, [sp, #24]
   12ea0:	cmp	ip, r0
   12ea4:	bhi	12f1c <close_stdout@@Base+0x1358>
   12ea8:	ldr	r3, [pc, #188]	; 12f6c <close_stdout@@Base+0x13a8>
   12eac:	add	r1, r0, #1
   12eb0:	str	r1, [r5, r6, lsl #3]
   12eb4:	add	r3, pc, r3
   12eb8:	cmp	r7, r3
   12ebc:	beq	12ed0 <close_stdout@@Base+0x130c>
   12ec0:	mov	r0, r7
   12ec4:	str	r1, [sp, #24]
   12ec8:	bl	10fe4 <free@plt>
   12ecc:	ldr	r1, [sp, #24]
   12ed0:	mov	r0, r1
   12ed4:	str	r1, [sp, #24]
   12ed8:	bl	13be0 <close_stdout@@Base+0x201c>
   12edc:	ldr	r3, [sp, #28]
   12ee0:	ldr	lr, [sp, #32]
   12ee4:	mov	r2, r9
   12ee8:	str	r0, [fp, #4]
   12eec:	mov	r7, r0
   12ef0:	ldr	ip, [r4]
   12ef4:	str	r3, [sp, #4]
   12ef8:	mov	r3, sl
   12efc:	str	lr, [sp, #8]
   12f00:	str	ip, [sp]
   12f04:	ldr	ip, [r4, #40]	; 0x28
   12f08:	ldr	r1, [sp, #24]
   12f0c:	str	ip, [sp, #12]
   12f10:	ldr	ip, [r4, #44]	; 0x2c
   12f14:	str	ip, [sp, #16]
   12f18:	bl	12078 <close_stdout@@Base+0x4b4>
   12f1c:	ldr	r1, [sp, #36]	; 0x24
   12f20:	mov	r0, r7
   12f24:	str	r1, [r8]
   12f28:	add	sp, sp, #44	; 0x2c
   12f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f30:	lsl	r1, r7, #3
   12f34:	mov	r0, #0
   12f38:	str	r3, [sp, #24]
   12f3c:	bl	13c38 <close_stdout@@Base+0x2074>
   12f40:	ldr	r3, [sp, #24]
   12f44:	mov	r5, r0
   12f48:	ldm	r3, {r0, r1}
   12f4c:	str	r5, [fp]
   12f50:	stm	r5, {r0, r1}
   12f54:	b	12e1c <close_stdout@@Base+0x1258>
   12f58:	bl	11224 <abort@plt>
   12f5c:	bl	13df4 <close_stdout@@Base+0x2230>
   12f60:	andeq	r3, r1, r8, lsr #7
   12f64:	andeq	r3, r1, r8, asr r3
   12f68:	andeq	r3, r1, r4, lsl r3
   12f6c:	andeq	r3, r1, ip, ror #5
   12f70:	push	{r4, r5, r6, lr}
   12f74:	mov	r5, r0
   12f78:	bl	11140 <__errno_location@plt>
   12f7c:	cmp	r5, #0
   12f80:	mov	r1, #48	; 0x30
   12f84:	mov	r4, r0
   12f88:	ldr	r0, [pc, #24]	; 12fa8 <close_stdout@@Base+0x13e4>
   12f8c:	ldr	r6, [r4]
   12f90:	add	r0, pc, r0
   12f94:	add	r0, r0, #256	; 0x100
   12f98:	movne	r0, r5
   12f9c:	bl	13db4 <close_stdout@@Base+0x21f0>
   12fa0:	str	r6, [r4]
   12fa4:	pop	{r4, r5, r6, pc}
   12fa8:	andeq	r3, r1, r0, lsl r2
   12fac:	cmp	r0, #0
   12fb0:	beq	12fbc <close_stdout@@Base+0x13f8>
   12fb4:	ldr	r0, [r0]
   12fb8:	bx	lr
   12fbc:	ldr	r0, [pc, #12]	; 12fd0 <close_stdout@@Base+0x140c>
   12fc0:	add	r0, pc, r0
   12fc4:	add	r0, r0, #256	; 0x100
   12fc8:	ldr	r0, [r0]
   12fcc:	bx	lr
   12fd0:	andeq	r3, r1, r0, ror #3
   12fd4:	cmp	r0, #0
   12fd8:	beq	12fe4 <close_stdout@@Base+0x1420>
   12fdc:	str	r1, [r0]
   12fe0:	bx	lr
   12fe4:	ldr	r0, [pc, #12]	; 12ff8 <close_stdout@@Base+0x1434>
   12fe8:	add	r0, pc, r0
   12fec:	add	r0, r0, #256	; 0x100
   12ff0:	str	r1, [r0]
   12ff4:	bx	lr
   12ff8:			; <UNDEFINED> instruction: 0x000131b8
   12ffc:	cmp	r0, #0
   13000:	movne	r3, r0
   13004:	beq	13034 <close_stdout@@Base+0x1470>
   13008:	lsr	ip, r1, #5
   1300c:	and	r1, r1, #31
   13010:	add	r3, r3, ip, lsl #2
   13014:	ldr	ip, [r3, #8]
   13018:	lsr	r0, ip, r1
   1301c:	eor	r2, r0, r2
   13020:	and	r0, r0, #1
   13024:	and	r2, r2, #1
   13028:	eor	ip, ip, r2, lsl r1
   1302c:	str	ip, [r3, #8]
   13030:	bx	lr
   13034:	ldr	r3, [pc, #8]	; 13044 <close_stdout@@Base+0x1480>
   13038:	add	r3, pc, r3
   1303c:	add	r3, r3, #256	; 0x100
   13040:	b	13008 <close_stdout@@Base+0x1444>
   13044:	andeq	r3, r1, r8, ror #2
   13048:	subs	r3, r0, #0
   1304c:	beq	1305c <close_stdout@@Base+0x1498>
   13050:	ldr	r0, [r3, #4]
   13054:	str	r1, [r3, #4]
   13058:	bx	lr
   1305c:	ldr	r3, [pc, #8]	; 1306c <close_stdout@@Base+0x14a8>
   13060:	add	r3, pc, r3
   13064:	add	r3, r3, #256	; 0x100
   13068:	b	13050 <close_stdout@@Base+0x148c>
   1306c:	andeq	r3, r1, r0, asr #2
   13070:	cmp	r0, #0
   13074:	push	{r3, lr}
   13078:	beq	1309c <close_stdout@@Base+0x14d8>
   1307c:	cmp	r2, #0
   13080:	cmpne	r1, #0
   13084:	mov	r3, #8
   13088:	strne	r1, [r0, #40]	; 0x28
   1308c:	str	r3, [r0]
   13090:	strne	r2, [r0, #44]	; 0x2c
   13094:	popne	{r3, pc}
   13098:	bl	11224 <abort@plt>
   1309c:	ldr	r0, [pc, #8]	; 130ac <close_stdout@@Base+0x14e8>
   130a0:	add	r0, pc, r0
   130a4:	add	r0, r0, #256	; 0x100
   130a8:	b	1307c <close_stdout@@Base+0x14b8>
   130ac:	andeq	r3, r1, r0, lsl #2
   130b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   130b4:	sub	sp, sp, #24
   130b8:	mov	r7, r0
   130bc:	mov	sl, r1
   130c0:	ldr	r4, [sp, #56]	; 0x38
   130c4:	mov	r9, r2
   130c8:	mov	r8, r3
   130cc:	cmp	r4, #0
   130d0:	beq	13124 <close_stdout@@Base+0x1560>
   130d4:	bl	11140 <__errno_location@plt>
   130d8:	ldr	r3, [r4]
   130dc:	add	lr, r4, #8
   130e0:	mov	r1, sl
   130e4:	mov	r2, r9
   130e8:	ldr	r6, [r0]
   130ec:	mov	r5, r0
   130f0:	str	r3, [sp]
   130f4:	mov	r0, r7
   130f8:	ldr	ip, [r4, #4]
   130fc:	mov	r3, r8
   13100:	stmib	sp, {ip, lr}
   13104:	ldr	ip, [r4, #40]	; 0x28
   13108:	str	ip, [sp, #12]
   1310c:	ldr	ip, [r4, #44]	; 0x2c
   13110:	str	ip, [sp, #16]
   13114:	bl	12078 <close_stdout@@Base+0x4b4>
   13118:	str	r6, [r5]
   1311c:	add	sp, sp, #24
   13120:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13124:	ldr	r4, [pc, #8]	; 13134 <close_stdout@@Base+0x1570>
   13128:	add	r4, pc, r4
   1312c:	add	r4, r4, #256	; 0x100
   13130:	b	130d4 <close_stdout@@Base+0x1510>
   13134:	andeq	r3, r1, r8, ror r0
   13138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1313c:	subs	r4, r3, #0
   13140:	sub	sp, sp, #36	; 0x24
   13144:	mov	r7, r0
   13148:	mov	r6, r1
   1314c:	mov	r5, r2
   13150:	beq	1320c <close_stdout@@Base+0x1648>
   13154:	bl	11140 <__errno_location@plt>
   13158:	ldr	r3, [r4]
   1315c:	ldr	sl, [r4, #4]
   13160:	add	r9, r4, #8
   13164:	mov	r8, r0
   13168:	mov	r0, #0
   1316c:	ldr	r2, [r8]
   13170:	cmp	r5, r0
   13174:	orreq	sl, sl, #1
   13178:	str	r9, [sp, #8]
   1317c:	mov	r1, r0
   13180:	stm	sp, {r3, sl}
   13184:	mov	r3, r6
   13188:	ldr	ip, [r4, #40]	; 0x28
   1318c:	str	r2, [sp, #28]
   13190:	mov	r2, r7
   13194:	str	ip, [sp, #12]
   13198:	ldr	ip, [r4, #44]	; 0x2c
   1319c:	str	ip, [sp, #16]
   131a0:	bl	12078 <close_stdout@@Base+0x4b4>
   131a4:	add	r1, r0, #1
   131a8:	mov	fp, r0
   131ac:	str	r1, [sp, #24]
   131b0:	mov	r0, r1
   131b4:	bl	13be0 <close_stdout@@Base+0x201c>
   131b8:	ldr	lr, [r4]
   131bc:	str	sl, [sp, #4]
   131c0:	mov	r3, r6
   131c4:	str	r9, [sp, #8]
   131c8:	mov	r2, r7
   131cc:	str	lr, [sp]
   131d0:	ldr	lr, [r4, #40]	; 0x28
   131d4:	ldr	r1, [sp, #24]
   131d8:	str	lr, [sp, #12]
   131dc:	ldr	lr, [r4, #44]	; 0x2c
   131e0:	str	lr, [sp, #16]
   131e4:	str	r0, [sp, #24]
   131e8:	bl	12078 <close_stdout@@Base+0x4b4>
   131ec:	ldr	r3, [sp, #28]
   131f0:	cmp	r5, #0
   131f4:	str	r3, [r8]
   131f8:	ldr	ip, [sp, #24]
   131fc:	strne	fp, [r5]
   13200:	mov	r0, ip
   13204:	add	sp, sp, #36	; 0x24
   13208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1320c:	ldr	r4, [pc, #8]	; 1321c <close_stdout@@Base+0x1658>
   13210:	add	r4, pc, r4
   13214:	add	r4, r4, #256	; 0x100
   13218:	b	13154 <close_stdout@@Base+0x1590>
   1321c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13220:	mov	r3, r2
   13224:	mov	r2, #0
   13228:	b	13138 <close_stdout@@Base+0x1574>
   1322c:	ldr	r2, [pc, #152]	; 132cc <close_stdout@@Base+0x1708>
   13230:	push	{r3, r4, r5, r6, r7, lr}
   13234:	add	r2, pc, r2
   13238:	ldr	r3, [pc, #144]	; 132d0 <close_stdout@@Base+0x170c>
   1323c:	ldr	r6, [r2]
   13240:	add	r3, pc, r3
   13244:	cmp	r6, #1
   13248:	ldr	r7, [r3]
   1324c:	movhi	r4, #1
   13250:	movhi	r5, r7
   13254:	bls	13270 <close_stdout@@Base+0x16ac>
   13258:	ldr	r0, [r5, #12]
   1325c:	add	r4, r4, #1
   13260:	bl	10fe4 <free@plt>
   13264:	cmp	r4, r6
   13268:	add	r5, r5, #8
   1326c:	bne	13258 <close_stdout@@Base+0x1694>
   13270:	ldr	r4, [pc, #92]	; 132d4 <close_stdout@@Base+0x1710>
   13274:	ldr	r0, [r7, #4]
   13278:	add	r4, pc, r4
   1327c:	cmp	r0, r4
   13280:	beq	13298 <close_stdout@@Base+0x16d4>
   13284:	bl	10fe4 <free@plt>
   13288:	ldr	r3, [pc, #72]	; 132d8 <close_stdout@@Base+0x1714>
   1328c:	mov	r2, #256	; 0x100
   13290:	add	r3, pc, r3
   13294:	stmib	r3, {r2, r4}
   13298:	ldr	r4, [pc, #60]	; 132dc <close_stdout@@Base+0x1718>
   1329c:	add	r4, pc, r4
   132a0:	add	r5, r4, #4
   132a4:	cmp	r7, r5
   132a8:	beq	132b8 <close_stdout@@Base+0x16f4>
   132ac:	mov	r0, r7
   132b0:	bl	10fe4 <free@plt>
   132b4:	str	r5, [r4]
   132b8:	ldr	r3, [pc, #32]	; 132e0 <close_stdout@@Base+0x171c>
   132bc:	mov	r2, #1
   132c0:	add	r3, pc, r3
   132c4:	str	r2, [r3]
   132c8:	pop	{r3, r4, r5, r6, r7, pc}
   132cc:	andeq	r2, r1, r4, lsl #30
   132d0:	andeq	r2, r1, ip, lsr #30
   132d4:	andeq	r2, r1, r8, lsr #30
   132d8:	ldrdeq	r2, [r1], -ip
   132dc:	ldrdeq	r2, [r1], -r0
   132e0:	andeq	r2, r1, r8, ror lr
   132e4:	ldr	r3, [pc, #12]	; 132f8 <close_stdout@@Base+0x1734>
   132e8:	mvn	r2, #0
   132ec:	add	r3, pc, r3
   132f0:	add	r3, r3, #256	; 0x100
   132f4:	b	12da0 <close_stdout@@Base+0x11dc>
   132f8:			; <UNDEFINED> instruction: 0x00012eb4
   132fc:	ldr	r3, [pc, #8]	; 1330c <close_stdout@@Base+0x1748>
   13300:	add	r3, pc, r3
   13304:	add	r3, r3, #256	; 0x100
   13308:	b	12da0 <close_stdout@@Base+0x11dc>
   1330c:	andeq	r2, r1, r0, lsr #29
   13310:	mov	r1, r0
   13314:	mov	r0, #0
   13318:	b	132e4 <close_stdout@@Base+0x1720>
   1331c:	mov	r2, r1
   13320:	mov	r1, r0
   13324:	mov	r0, #0
   13328:	b	132fc <close_stdout@@Base+0x1738>
   1332c:	ldr	r3, [pc, #92]	; 13390 <close_stdout@@Base+0x17cc>
   13330:	ldr	ip, [pc, #92]	; 13394 <close_stdout@@Base+0x17d0>
   13334:	add	r3, pc, r3
   13338:	push	{r4, r5, r6, r7, lr}
   1333c:	sub	sp, sp, #60	; 0x3c
   13340:	ldr	r4, [r3, ip]
   13344:	add	r5, sp, #4
   13348:	mov	r7, r2
   1334c:	mov	r6, r0
   13350:	mov	r0, r5
   13354:	ldr	r3, [r4]
   13358:	str	r3, [sp, #52]	; 0x34
   1335c:	bl	11ec0 <close_stdout@@Base+0x2fc>
   13360:	mov	r3, r5
   13364:	mvn	r2, #0
   13368:	mov	r0, r6
   1336c:	mov	r1, r7
   13370:	bl	12da0 <close_stdout@@Base+0x11dc>
   13374:	ldr	r2, [sp, #52]	; 0x34
   13378:	ldr	r3, [r4]
   1337c:	cmp	r2, r3
   13380:	bne	1338c <close_stdout@@Base+0x17c8>
   13384:	add	sp, sp, #60	; 0x3c
   13388:	pop	{r4, r5, r6, r7, pc}
   1338c:	bl	1102c <__stack_chk_fail@plt>
   13390:	andeq	r2, r1, r4, asr #25
   13394:	andeq	r0, r0, r0, lsl #2
   13398:	ldr	ip, [pc, #96]	; 13400 <close_stdout@@Base+0x183c>
   1339c:	push	{r4, r5, r6, r7, r8, lr}
   133a0:	add	ip, pc, ip
   133a4:	ldr	lr, [pc, #88]	; 13404 <close_stdout@@Base+0x1840>
   133a8:	sub	sp, sp, #56	; 0x38
   133ac:	mov	r8, r3
   133b0:	add	r5, sp, #4
   133b4:	mov	r7, r2
   133b8:	mov	r6, r0
   133bc:	ldr	r4, [ip, lr]
   133c0:	mov	r0, r5
   133c4:	ldr	r3, [r4]
   133c8:	str	r3, [sp, #52]	; 0x34
   133cc:	bl	11ec0 <close_stdout@@Base+0x2fc>
   133d0:	mov	r2, r8
   133d4:	mov	r3, r5
   133d8:	mov	r0, r6
   133dc:	mov	r1, r7
   133e0:	bl	12da0 <close_stdout@@Base+0x11dc>
   133e4:	ldr	r2, [sp, #52]	; 0x34
   133e8:	ldr	r3, [r4]
   133ec:	cmp	r2, r3
   133f0:	bne	133fc <close_stdout@@Base+0x1838>
   133f4:	add	sp, sp, #56	; 0x38
   133f8:	pop	{r4, r5, r6, r7, r8, pc}
   133fc:	bl	1102c <__stack_chk_fail@plt>
   13400:	andeq	r2, r1, r8, asr ip
   13404:	andeq	r0, r0, r0, lsl #2
   13408:	mov	r2, r1
   1340c:	mov	r1, r0
   13410:	mov	r0, #0
   13414:	b	1332c <close_stdout@@Base+0x1768>
   13418:	mov	ip, r1
   1341c:	mov	r3, r2
   13420:	mov	r1, r0
   13424:	mov	r2, ip
   13428:	mov	r0, #0
   1342c:	b	13398 <close_stdout@@Base+0x17d4>
   13430:	push	{r4, r5, r6, r7, r8, lr}
   13434:	mov	r5, r2
   13438:	ldr	lr, [pc, #136]	; 134c8 <close_stdout@@Base+0x1904>
   1343c:	mov	r7, r0
   13440:	mov	r6, r1
   13444:	ldr	r4, [pc, #128]	; 134cc <close_stdout@@Base+0x1908>
   13448:	add	lr, pc, lr
   1344c:	sub	sp, sp, #56	; 0x38
   13450:	add	lr, lr, #256	; 0x100
   13454:	ldr	r8, [pc, #116]	; 134d0 <close_stdout@@Base+0x190c>
   13458:	add	r4, pc, r4
   1345c:	add	ip, sp, #4
   13460:	ldm	lr!, {r0, r1, r2, r3}
   13464:	ldr	r4, [r4, r8]
   13468:	stmia	ip!, {r0, r1, r2, r3}
   1346c:	ldm	lr!, {r0, r1, r2, r3}
   13470:	ldr	r8, [r4]
   13474:	stmia	ip!, {r0, r1, r2, r3}
   13478:	ldm	lr, {r0, r1, r2, r3}
   1347c:	str	r8, [sp, #52]	; 0x34
   13480:	stm	ip, {r0, r1, r2, r3}
   13484:	mov	r1, r5
   13488:	add	r5, sp, #4
   1348c:	mov	r2, #1
   13490:	mov	r0, r5
   13494:	bl	12ffc <close_stdout@@Base+0x1438>
   13498:	mov	r2, r6
   1349c:	mov	r3, r5
   134a0:	mov	r1, r7
   134a4:	mov	r0, #0
   134a8:	bl	12da0 <close_stdout@@Base+0x11dc>
   134ac:	ldr	r2, [sp, #52]	; 0x34
   134b0:	ldr	r3, [r4]
   134b4:	cmp	r2, r3
   134b8:	bne	134c4 <close_stdout@@Base+0x1900>
   134bc:	add	sp, sp, #56	; 0x38
   134c0:	pop	{r4, r5, r6, r7, r8, pc}
   134c4:	bl	1102c <__stack_chk_fail@plt>
   134c8:	andeq	r2, r1, r8, asr sp
   134cc:	andeq	r2, r1, r0, lsr #23
   134d0:	andeq	r0, r0, r0, lsl #2
   134d4:	mov	r2, r1
   134d8:	mvn	r1, #0
   134dc:	b	13430 <close_stdout@@Base+0x186c>
   134e0:	mov	r1, #58	; 0x3a
   134e4:	b	134d4 <close_stdout@@Base+0x1910>
   134e8:	mov	r2, #58	; 0x3a
   134ec:	b	13430 <close_stdout@@Base+0x186c>
   134f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134f4:	mov	r5, r2
   134f8:	ldr	lr, [pc, #144]	; 13590 <close_stdout@@Base+0x19cc>
   134fc:	mov	r8, r0
   13500:	mov	r9, r1
   13504:	mov	r7, r3
   13508:	add	lr, pc, lr
   1350c:	ldr	r4, [pc, #128]	; 13594 <close_stdout@@Base+0x19d0>
   13510:	add	lr, lr, #256	; 0x100
   13514:	sub	sp, sp, #56	; 0x38
   13518:	ldr	sl, [pc, #120]	; 13598 <close_stdout@@Base+0x19d4>
   1351c:	add	r4, pc, r4
   13520:	ldm	lr!, {r0, r1, r2, r3}
   13524:	add	ip, sp, #4
   13528:	ldr	r4, [r4, sl]
   1352c:	ldr	r6, [sp, #88]	; 0x58
   13530:	stmia	ip!, {r0, r1, r2, r3}
   13534:	ldm	lr!, {r0, r1, r2, r3}
   13538:	ldr	sl, [r4]
   1353c:	stmia	ip!, {r0, r1, r2, r3}
   13540:	ldm	lr, {r0, r1, r2, r3}
   13544:	str	sl, [sp, #52]	; 0x34
   13548:	stm	ip, {r0, r1, r2, r3}
   1354c:	mov	r2, r5
   13550:	add	r5, sp, #4
   13554:	mov	r1, r9
   13558:	mov	r0, r5
   1355c:	bl	13070 <close_stdout@@Base+0x14ac>
   13560:	mov	r2, r6
   13564:	mov	r3, r5
   13568:	mov	r0, r8
   1356c:	mov	r1, r7
   13570:	bl	12da0 <close_stdout@@Base+0x11dc>
   13574:	ldr	r2, [sp, #52]	; 0x34
   13578:	ldr	r3, [r4]
   1357c:	cmp	r2, r3
   13580:	bne	1358c <close_stdout@@Base+0x19c8>
   13584:	add	sp, sp, #56	; 0x38
   13588:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1358c:	bl	1102c <__stack_chk_fail@plt>
   13590:	muleq	r1, r8, ip
   13594:	ldrdeq	r2, [r1], -ip
   13598:	andeq	r0, r0, r0, lsl #2
   1359c:	push	{lr}		; (str lr, [sp, #-4]!)
   135a0:	sub	sp, sp, #12
   135a4:	mvn	ip, #0
   135a8:	str	ip, [sp]
   135ac:	bl	134f0 <close_stdout@@Base+0x192c>
   135b0:	add	sp, sp, #12
   135b4:	pop	{pc}		; (ldr pc, [sp], #4)
   135b8:	mov	ip, r1
   135bc:	mov	r3, r2
   135c0:	mov	r1, r0
   135c4:	mov	r2, ip
   135c8:	mov	r0, #0
   135cc:	b	1359c <close_stdout@@Base+0x19d8>
   135d0:	push	{lr}		; (str lr, [sp, #-4]!)
   135d4:	sub	sp, sp, #12
   135d8:	mov	lr, r1
   135dc:	mov	ip, r2
   135e0:	mov	r1, r0
   135e4:	str	r3, [sp]
   135e8:	mov	r2, lr
   135ec:	mov	r3, ip
   135f0:	mov	r0, #0
   135f4:	bl	134f0 <close_stdout@@Base+0x192c>
   135f8:	add	sp, sp, #12
   135fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13600:	ldr	r3, [pc, #12]	; 13614 <close_stdout@@Base+0x1a50>
   13604:	ldr	ip, [pc, #12]	; 13618 <close_stdout@@Base+0x1a54>
   13608:	add	r3, pc, r3
   1360c:	ldr	r3, [r3, ip]
   13610:	b	12da0 <close_stdout@@Base+0x11dc>
   13614:	strdeq	r2, [r1], -r0
   13618:	strdeq	r0, [r0], -ip
   1361c:	mov	r2, r1
   13620:	mov	r1, r0
   13624:	mov	r0, #0
   13628:	b	13600 <close_stdout@@Base+0x1a3c>
   1362c:	mvn	r2, #0
   13630:	b	13600 <close_stdout@@Base+0x1a3c>
   13634:	mov	r1, r0
   13638:	mov	r0, #0
   1363c:	b	1362c <close_stdout@@Base+0x1a68>
   13640:	push	{r4, r5, r6, r7, lr}
   13644:	cmp	r1, #0
   13648:	sub	sp, sp, #36	; 0x24
   1364c:	ldr	r7, [pc, #896]	; 139d4 <close_stdout@@Base+0x1e10>
   13650:	mov	ip, r3
   13654:	mov	r5, r0
   13658:	add	r7, pc, r7
   1365c:	ldr	r4, [sp, #56]	; 0x38
   13660:	ldr	r6, [sp, #60]	; 0x3c
   13664:	beq	139a8 <close_stdout@@Base+0x1de4>
   13668:	str	r2, [sp]
   1366c:	mov	r3, r1
   13670:	ldr	r2, [pc, #864]	; 139d8 <close_stdout@@Base+0x1e14>
   13674:	mov	r1, #1
   13678:	str	ip, [sp, #4]
   1367c:	add	r2, pc, r2
   13680:	bl	111a0 <__fprintf_chk@plt>
   13684:	ldr	r1, [pc, #848]	; 139dc <close_stdout@@Base+0x1e18>
   13688:	mov	r2, #5
   1368c:	mov	r0, #0
   13690:	add	r1, pc, r1
   13694:	bl	11020 <dcgettext@plt>
   13698:	ldr	r2, [pc, #832]	; 139e0 <close_stdout@@Base+0x1e1c>
   1369c:	movw	ip, #2013	; 0x7dd
   136a0:	mov	r1, #1
   136a4:	ldr	r2, [r7, r2]
   136a8:	str	ip, [sp]
   136ac:	mov	r3, r0
   136b0:	mov	r0, r5
   136b4:	bl	111a0 <__fprintf_chk@plt>
   136b8:	ldr	r1, [pc, #804]	; 139e4 <close_stdout@@Base+0x1e20>
   136bc:	mov	r0, #0
   136c0:	mov	r2, #5
   136c4:	add	r1, pc, r1
   136c8:	bl	11020 <dcgettext@plt>
   136cc:	mov	r1, r5
   136d0:	bl	10f90 <fputs_unlocked@plt>
   136d4:	cmp	r6, #9
   136d8:	addls	pc, pc, r6, lsl #2
   136dc:	b	139c4 <close_stdout@@Base+0x1e00>
   136e0:	b	13774 <close_stdout@@Base+0x1bb0>
   136e4:	b	13778 <close_stdout@@Base+0x1bb4>
   136e8:	b	137a8 <close_stdout@@Base+0x1be4>
   136ec:	b	137dc <close_stdout@@Base+0x1c18>
   136f0:	b	13818 <close_stdout@@Base+0x1c54>
   136f4:	b	13858 <close_stdout@@Base+0x1c94>
   136f8:	b	138a0 <close_stdout@@Base+0x1cdc>
   136fc:	b	138f0 <close_stdout@@Base+0x1d2c>
   13700:	b	13948 <close_stdout@@Base+0x1d84>
   13704:	b	13708 <close_stdout@@Base+0x1b44>
   13708:	ldr	r1, [pc, #728]	; 139e8 <close_stdout@@Base+0x1e24>
   1370c:	mov	r0, #0
   13710:	add	r1, pc, r1
   13714:	mov	r2, #5
   13718:	bl	11020 <dcgettext@plt>
   1371c:	ldm	r4, {r3, ip}
   13720:	mov	r1, #1
   13724:	str	ip, [sp]
   13728:	ldr	ip, [r4, #8]
   1372c:	str	ip, [sp, #4]
   13730:	ldr	ip, [r4, #12]
   13734:	str	ip, [sp, #8]
   13738:	ldr	ip, [r4, #16]
   1373c:	str	ip, [sp, #12]
   13740:	ldr	ip, [r4, #20]
   13744:	str	ip, [sp, #16]
   13748:	ldr	ip, [r4, #24]
   1374c:	str	ip, [sp, #20]
   13750:	ldr	ip, [r4, #28]
   13754:	str	ip, [sp, #24]
   13758:	ldr	ip, [r4, #32]
   1375c:	str	ip, [sp, #28]
   13760:	mov	r2, r0
   13764:	mov	r0, r5
   13768:	bl	111a0 <__fprintf_chk@plt>
   1376c:	add	sp, sp, #36	; 0x24
   13770:	pop	{r4, r5, r6, r7, pc}
   13774:	bl	11224 <abort@plt>
   13778:	ldr	r1, [pc, #620]	; 139ec <close_stdout@@Base+0x1e28>
   1377c:	mov	r2, #5
   13780:	mov	r0, #0
   13784:	add	r1, pc, r1
   13788:	bl	11020 <dcgettext@plt>
   1378c:	ldr	r3, [r4]
   13790:	mov	r1, #1
   13794:	mov	r2, r0
   13798:	mov	r0, r5
   1379c:	add	sp, sp, #36	; 0x24
   137a0:	pop	{r4, r5, r6, r7, lr}
   137a4:	b	111a0 <__fprintf_chk@plt>
   137a8:	ldr	r1, [pc, #576]	; 139f0 <close_stdout@@Base+0x1e2c>
   137ac:	mov	r2, #5
   137b0:	mov	r0, #0
   137b4:	add	r1, pc, r1
   137b8:	bl	11020 <dcgettext@plt>
   137bc:	ldm	r4, {r3, ip}
   137c0:	mov	r1, #1
   137c4:	str	ip, [sp, #56]	; 0x38
   137c8:	mov	r2, r0
   137cc:	mov	r0, r5
   137d0:	add	sp, sp, #36	; 0x24
   137d4:	pop	{r4, r5, r6, r7, lr}
   137d8:	b	111a0 <__fprintf_chk@plt>
   137dc:	ldr	r1, [pc, #528]	; 139f4 <close_stdout@@Base+0x1e30>
   137e0:	mov	r2, #5
   137e4:	mov	r0, #0
   137e8:	add	r1, pc, r1
   137ec:	bl	11020 <dcgettext@plt>
   137f0:	ldm	r4, {r3, ip}
   137f4:	mov	r1, #1
   137f8:	str	ip, [sp, #56]	; 0x38
   137fc:	ldr	ip, [r4, #8]
   13800:	str	ip, [sp, #60]	; 0x3c
   13804:	mov	r2, r0
   13808:	mov	r0, r5
   1380c:	add	sp, sp, #36	; 0x24
   13810:	pop	{r4, r5, r6, r7, lr}
   13814:	b	111a0 <__fprintf_chk@plt>
   13818:	ldr	r1, [pc, #472]	; 139f8 <close_stdout@@Base+0x1e34>
   1381c:	mov	r2, #5
   13820:	mov	r0, #0
   13824:	add	r1, pc, r1
   13828:	bl	11020 <dcgettext@plt>
   1382c:	ldm	r4, {r3, ip}
   13830:	mov	r1, #1
   13834:	str	ip, [sp]
   13838:	ldr	ip, [r4, #8]
   1383c:	str	ip, [sp, #4]
   13840:	ldr	ip, [r4, #12]
   13844:	str	ip, [sp, #8]
   13848:	mov	r2, r0
   1384c:	mov	r0, r5
   13850:	bl	111a0 <__fprintf_chk@plt>
   13854:	b	1376c <close_stdout@@Base+0x1ba8>
   13858:	ldr	r1, [pc, #412]	; 139fc <close_stdout@@Base+0x1e38>
   1385c:	mov	r2, #5
   13860:	mov	r0, #0
   13864:	add	r1, pc, r1
   13868:	bl	11020 <dcgettext@plt>
   1386c:	ldm	r4, {r3, ip}
   13870:	mov	r1, #1
   13874:	str	ip, [sp]
   13878:	ldr	ip, [r4, #8]
   1387c:	str	ip, [sp, #4]
   13880:	ldr	ip, [r4, #12]
   13884:	str	ip, [sp, #8]
   13888:	ldr	ip, [r4, #16]
   1388c:	str	ip, [sp, #12]
   13890:	mov	r2, r0
   13894:	mov	r0, r5
   13898:	bl	111a0 <__fprintf_chk@plt>
   1389c:	b	1376c <close_stdout@@Base+0x1ba8>
   138a0:	ldr	r1, [pc, #344]	; 13a00 <close_stdout@@Base+0x1e3c>
   138a4:	mov	r2, #5
   138a8:	mov	r0, #0
   138ac:	add	r1, pc, r1
   138b0:	bl	11020 <dcgettext@plt>
   138b4:	ldm	r4, {r3, ip}
   138b8:	mov	r1, #1
   138bc:	str	ip, [sp]
   138c0:	ldr	ip, [r4, #8]
   138c4:	str	ip, [sp, #4]
   138c8:	ldr	ip, [r4, #12]
   138cc:	str	ip, [sp, #8]
   138d0:	ldr	ip, [r4, #16]
   138d4:	str	ip, [sp, #12]
   138d8:	ldr	ip, [r4, #20]
   138dc:	str	ip, [sp, #16]
   138e0:	mov	r2, r0
   138e4:	mov	r0, r5
   138e8:	bl	111a0 <__fprintf_chk@plt>
   138ec:	b	1376c <close_stdout@@Base+0x1ba8>
   138f0:	ldr	r1, [pc, #268]	; 13a04 <close_stdout@@Base+0x1e40>
   138f4:	mov	r2, #5
   138f8:	mov	r0, #0
   138fc:	add	r1, pc, r1
   13900:	bl	11020 <dcgettext@plt>
   13904:	ldm	r4, {r3, ip}
   13908:	mov	r1, #1
   1390c:	str	ip, [sp]
   13910:	ldr	ip, [r4, #8]
   13914:	str	ip, [sp, #4]
   13918:	ldr	ip, [r4, #12]
   1391c:	str	ip, [sp, #8]
   13920:	ldr	ip, [r4, #16]
   13924:	str	ip, [sp, #12]
   13928:	ldr	ip, [r4, #20]
   1392c:	str	ip, [sp, #16]
   13930:	ldr	ip, [r4, #24]
   13934:	str	ip, [sp, #20]
   13938:	mov	r2, r0
   1393c:	mov	r0, r5
   13940:	bl	111a0 <__fprintf_chk@plt>
   13944:	b	1376c <close_stdout@@Base+0x1ba8>
   13948:	ldr	r1, [pc, #184]	; 13a08 <close_stdout@@Base+0x1e44>
   1394c:	mov	r2, #5
   13950:	mov	r0, #0
   13954:	add	r1, pc, r1
   13958:	bl	11020 <dcgettext@plt>
   1395c:	ldm	r4, {r3, ip}
   13960:	mov	r1, #1
   13964:	str	ip, [sp]
   13968:	ldr	ip, [r4, #8]
   1396c:	str	ip, [sp, #4]
   13970:	ldr	ip, [r4, #12]
   13974:	str	ip, [sp, #8]
   13978:	ldr	ip, [r4, #16]
   1397c:	str	ip, [sp, #12]
   13980:	ldr	ip, [r4, #20]
   13984:	str	ip, [sp, #16]
   13988:	ldr	ip, [r4, #24]
   1398c:	str	ip, [sp, #20]
   13990:	ldr	ip, [r4, #28]
   13994:	str	ip, [sp, #24]
   13998:	mov	r2, r0
   1399c:	mov	r0, r5
   139a0:	bl	111a0 <__fprintf_chk@plt>
   139a4:	b	1376c <close_stdout@@Base+0x1ba8>
   139a8:	str	r3, [sp]
   139ac:	mov	r3, r2
   139b0:	ldr	r2, [pc, #84]	; 13a0c <close_stdout@@Base+0x1e48>
   139b4:	mov	r1, #1
   139b8:	add	r2, pc, r2
   139bc:	bl	111a0 <__fprintf_chk@plt>
   139c0:	b	13684 <close_stdout@@Base+0x1ac0>
   139c4:	ldr	r1, [pc, #68]	; 13a10 <close_stdout@@Base+0x1e4c>
   139c8:	mov	r0, #0
   139cc:	add	r1, pc, r1
   139d0:	b	13714 <close_stdout@@Base+0x1b50>
   139d4:	andeq	r2, r1, r0, lsr #19
   139d8:	andeq	r2, r0, r8, lsl r1
   139dc:	andeq	r2, r0, r8, lsl r1
   139e0:	andeq	r0, r0, ip, lsr #2
   139e4:	andeq	r2, r0, r8, ror #1
   139e8:	andeq	r2, r0, r4, ror r2
   139ec:	strdeq	r2, [r0], -r4
   139f0:	ldrdeq	r2, [r0], -r4
   139f4:	strheq	r2, [r0], -r8
   139f8:	muleq	r0, r8, r0
   139fc:	andeq	r2, r0, r8, ror r0
   13a00:	andeq	r2, r0, r4, asr r0
   13a04:	andeq	r2, r0, ip, lsr #32
   13a08:	andeq	r2, r0, r0
   13a0c:	andeq	r1, r0, r8, ror #27
   13a10:	andeq	r1, r0, ip, ror #31
   13a14:	push	{r4, r5, lr}
   13a18:	sub	sp, sp, #12
   13a1c:	ldr	r5, [sp, #24]
   13a20:	ldr	ip, [r5]
   13a24:	cmp	ip, #0
   13a28:	beq	13a44 <close_stdout@@Base+0x1e80>
   13a2c:	mov	lr, r5
   13a30:	mov	ip, #0
   13a34:	ldr	r4, [lr, #4]!
   13a38:	add	ip, ip, #1
   13a3c:	cmp	r4, #0
   13a40:	bne	13a34 <close_stdout@@Base+0x1e70>
   13a44:	stm	sp, {r5, ip}
   13a48:	bl	13640 <close_stdout@@Base+0x1a7c>
   13a4c:	add	sp, sp, #12
   13a50:	pop	{r4, r5, pc}
   13a54:	push	{r4, r5, r6, r7, lr}
   13a58:	sub	sp, sp, #60	; 0x3c
   13a5c:	ldr	r4, [pc, #100]	; 13ac8 <close_stdout@@Base+0x1f04>
   13a60:	mov	ip, #0
   13a64:	ldr	r5, [pc, #96]	; 13acc <close_stdout@@Base+0x1f08>
   13a68:	mov	lr, ip
   13a6c:	add	r4, pc, r4
   13a70:	ldr	r6, [sp, #80]	; 0x50
   13a74:	ldr	r7, [r4, r5]
   13a78:	add	r5, sp, #12
   13a7c:	ldr	r4, [r7]
   13a80:	str	r4, [sp, #52]	; 0x34
   13a84:	ldr	r4, [r6, ip]
   13a88:	cmp	r4, #0
   13a8c:	str	r4, [r5, ip]
   13a90:	beq	13aa4 <close_stdout@@Base+0x1ee0>
   13a94:	add	lr, lr, #1
   13a98:	add	ip, ip, #4
   13a9c:	cmp	lr, #10
   13aa0:	bne	13a84 <close_stdout@@Base+0x1ec0>
   13aa4:	stm	sp, {r5, lr}
   13aa8:	bl	13640 <close_stdout@@Base+0x1a7c>
   13aac:	ldr	r2, [sp, #52]	; 0x34
   13ab0:	ldr	r3, [r7]
   13ab4:	cmp	r2, r3
   13ab8:	bne	13ac4 <close_stdout@@Base+0x1f00>
   13abc:	add	sp, sp, #60	; 0x3c
   13ac0:	pop	{r4, r5, r6, r7, pc}
   13ac4:	bl	1102c <__stack_chk_fail@plt>
   13ac8:	andeq	r2, r1, ip, lsl #11
   13acc:	andeq	r0, r0, r0, lsl #2
   13ad0:	push	{r3}		; (str r3, [sp, #-4]!)
   13ad4:	push	{r4, lr}
   13ad8:	sub	sp, sp, #20
   13adc:	ldr	lr, [pc, #72]	; 13b2c <close_stdout@@Base+0x1f68>
   13ae0:	add	ip, sp, #32
   13ae4:	ldr	r4, [pc, #68]	; 13b30 <close_stdout@@Base+0x1f6c>
   13ae8:	add	lr, pc, lr
   13aec:	ldr	r3, [sp, #28]
   13af0:	ldr	r4, [lr, r4]
   13af4:	str	ip, [sp]
   13af8:	str	ip, [sp, #8]
   13afc:	ldr	ip, [r4]
   13b00:	str	ip, [sp, #12]
   13b04:	bl	13a54 <close_stdout@@Base+0x1e90>
   13b08:	ldr	r2, [sp, #12]
   13b0c:	ldr	r3, [r4]
   13b10:	cmp	r2, r3
   13b14:	bne	13b28 <close_stdout@@Base+0x1f64>
   13b18:	add	sp, sp, #20
   13b1c:	pop	{r4, lr}
   13b20:	add	sp, sp, #4
   13b24:	bx	lr
   13b28:	bl	1102c <__stack_chk_fail@plt>
   13b2c:	andeq	r2, r1, r0, lsl r5
   13b30:	andeq	r0, r0, r0, lsl #2
   13b34:	ldr	r1, [pc, #132]	; 13bc0 <close_stdout@@Base+0x1ffc>
   13b38:	mov	r2, #5
   13b3c:	push	{r4, lr}
   13b40:	add	r1, pc, r1
   13b44:	mov	r0, #0
   13b48:	ldr	r4, [pc, #116]	; 13bc4 <close_stdout@@Base+0x2000>
   13b4c:	bl	11020 <dcgettext@plt>
   13b50:	ldr	r2, [pc, #112]	; 13bc8 <close_stdout@@Base+0x2004>
   13b54:	add	r4, pc, r4
   13b58:	add	r2, pc, r2
   13b5c:	mov	r1, r0
   13b60:	mov	r0, #1
   13b64:	bl	11188 <__printf_chk@plt>
   13b68:	ldr	r1, [pc, #92]	; 13bcc <close_stdout@@Base+0x2008>
   13b6c:	mov	r2, #5
   13b70:	mov	r0, #0
   13b74:	add	r1, pc, r1
   13b78:	bl	11020 <dcgettext@plt>
   13b7c:	ldr	r2, [pc, #76]	; 13bd0 <close_stdout@@Base+0x200c>
   13b80:	ldr	r3, [pc, #76]	; 13bd4 <close_stdout@@Base+0x2010>
   13b84:	add	r2, pc, r2
   13b88:	add	r3, pc, r3
   13b8c:	mov	r1, r0
   13b90:	mov	r0, #1
   13b94:	bl	11188 <__printf_chk@plt>
   13b98:	ldr	r1, [pc, #56]	; 13bd8 <close_stdout@@Base+0x2014>
   13b9c:	mov	r0, #0
   13ba0:	mov	r2, #5
   13ba4:	add	r1, pc, r1
   13ba8:	bl	11020 <dcgettext@plt>
   13bac:	ldr	r3, [pc, #40]	; 13bdc <close_stdout@@Base+0x2018>
   13bb0:	ldr	r3, [r4, r3]
   13bb4:	pop	{r4, lr}
   13bb8:	ldr	r1, [r3]
   13bbc:	b	10f90 <fputs_unlocked@plt>
   13bc0:			; <UNDEFINED> instruction: 0x00001eb4
   13bc4:	andeq	r2, r1, r4, lsr #9
   13bc8:			; <UNDEFINED> instruction: 0x00001eb4
   13bcc:			; <UNDEFINED> instruction: 0x00001eb0
   13bd0:	andeq	r1, r0, r4, asr #18
   13bd4:	andeq	r1, r0, r0, asr r9
   13bd8:	muleq	r0, r4, lr
   13bdc:	andeq	r0, r0, ip, lsl r1
   13be0:	push	{r4, lr}
   13be4:	mov	r4, r0
   13be8:	bl	110d4 <malloc@plt>
   13bec:	rsbs	r3, r0, #1
   13bf0:	movcc	r3, #0
   13bf4:	cmp	r4, #0
   13bf8:	moveq	r3, #0
   13bfc:	cmp	r3, #0
   13c00:	popeq	{r4, pc}
   13c04:	bl	13df4 <close_stdout@@Base+0x2230>
   13c08:	push	{r3, r4, r5, lr}
   13c0c:	mov	r4, r0
   13c10:	mvn	r0, #0
   13c14:	mov	r5, r1
   13c18:	bl	14734 <close_stdout@@Base+0x2b70>
   13c1c:	cmp	r0, r4
   13c20:	bcc	13c30 <close_stdout@@Base+0x206c>
   13c24:	mul	r0, r4, r5
   13c28:	pop	{r3, r4, r5, lr}
   13c2c:	b	13be0 <close_stdout@@Base+0x201c>
   13c30:	bl	13df4 <close_stdout@@Base+0x2230>
   13c34:	b	13be0 <close_stdout@@Base+0x201c>
   13c38:	rsbs	r3, r1, #1
   13c3c:	push	{r4, lr}
   13c40:	movcc	r3, #0
   13c44:	cmp	r0, #0
   13c48:	mov	r4, r1
   13c4c:	moveq	r3, #0
   13c50:	cmp	r3, #0
   13c54:	bne	13c78 <close_stdout@@Base+0x20b4>
   13c58:	bl	11038 <realloc@plt>
   13c5c:	rsbs	r3, r0, #1
   13c60:	movcc	r3, #0
   13c64:	cmp	r4, #0
   13c68:	moveq	r3, #0
   13c6c:	cmp	r3, #0
   13c70:	popeq	{r4, pc}
   13c74:	bl	13df4 <close_stdout@@Base+0x2230>
   13c78:	bl	10fe4 <free@plt>
   13c7c:	mov	r0, #0
   13c80:	pop	{r4, pc}
   13c84:	push	{r4, r5, r6, lr}
   13c88:	mov	r5, r1
   13c8c:	mov	r6, r0
   13c90:	mov	r1, r2
   13c94:	mvn	r0, #0
   13c98:	mov	r4, r2
   13c9c:	bl	14734 <close_stdout@@Base+0x2b70>
   13ca0:	cmp	r0, r5
   13ca4:	bcc	13cb8 <close_stdout@@Base+0x20f4>
   13ca8:	mov	r0, r6
   13cac:	mul	r1, r5, r4
   13cb0:	pop	{r4, r5, r6, lr}
   13cb4:	b	13c38 <close_stdout@@Base+0x2074>
   13cb8:	bl	13df4 <close_stdout@@Base+0x2230>
   13cbc:	push	{r3, r4, r5, r6, r7, lr}
   13cc0:	subs	r7, r0, #0
   13cc4:	mov	r5, r1
   13cc8:	mov	r6, r2
   13ccc:	ldr	r4, [r1]
   13cd0:	beq	13d08 <close_stdout@@Base+0x2144>
   13cd4:	movw	r0, #43690	; 0xaaaa
   13cd8:	mov	r1, r2
   13cdc:	bfi	r0, r0, #16, #16
   13ce0:	bl	14734 <close_stdout@@Base+0x2b70>
   13ce4:	cmp	r4, r0
   13ce8:	addcc	r3, r4, #1
   13cec:	addcc	r4, r4, r3, lsr #1
   13cf0:	bcs	13d2c <close_stdout@@Base+0x2168>
   13cf4:	str	r4, [r5]
   13cf8:	mov	r0, r7
   13cfc:	mul	r1, r6, r4
   13d00:	pop	{r3, r4, r5, r6, r7, lr}
   13d04:	b	13c38 <close_stdout@@Base+0x2074>
   13d08:	cmp	r4, #0
   13d0c:	bne	13cf4 <close_stdout@@Base+0x2130>
   13d10:	mov	r0, #64	; 0x40
   13d14:	mov	r1, r2
   13d18:	bl	14734 <close_stdout@@Base+0x2b70>
   13d1c:	cmp	r0, #0
   13d20:	movne	r4, r0
   13d24:	addeq	r4, r0, #1
   13d28:	b	13cf4 <close_stdout@@Base+0x2130>
   13d2c:	bl	13df4 <close_stdout@@Base+0x2230>
   13d30:	cmp	r0, #0
   13d34:	push	{r3, lr}
   13d38:	ldr	r3, [r1]
   13d3c:	beq	13d68 <close_stdout@@Base+0x21a4>
   13d40:	movw	r2, #43689	; 0xaaa9
   13d44:	movt	r2, #43690	; 0xaaaa
   13d48:	cmp	r3, r2
   13d4c:	addls	r2, r3, #1
   13d50:	addls	r3, r3, r2, lsr #1
   13d54:	bhi	13d80 <close_stdout@@Base+0x21bc>
   13d58:	str	r3, [r1]
   13d5c:	mov	r1, r3
   13d60:	pop	{r3, lr}
   13d64:	b	13c38 <close_stdout@@Base+0x2074>
   13d68:	cmp	r3, #0
   13d6c:	moveq	r3, #64	; 0x40
   13d70:	str	r3, [r1]
   13d74:	mov	r1, r3
   13d78:	pop	{r3, lr}
   13d7c:	b	13c38 <close_stdout@@Base+0x2074>
   13d80:	bl	13df4 <close_stdout@@Base+0x2230>
   13d84:	push	{r4, lr}
   13d88:	mov	r4, r0
   13d8c:	bl	13be0 <close_stdout@@Base+0x201c>
   13d90:	mov	r2, r4
   13d94:	mov	r1, #0
   13d98:	pop	{r4, lr}
   13d9c:	b	11170 <memset@plt>
   13da0:	push	{r3, lr}
   13da4:	bl	10f84 <calloc@plt>
   13da8:	cmp	r0, #0
   13dac:	popne	{r3, pc}
   13db0:	bl	13df4 <close_stdout@@Base+0x2230>
   13db4:	push	{r3, r4, r5, lr}
   13db8:	mov	r4, r1
   13dbc:	mov	r5, r0
   13dc0:	mov	r0, r1
   13dc4:	bl	13be0 <close_stdout@@Base+0x201c>
   13dc8:	mov	r1, r5
   13dcc:	mov	r2, r4
   13dd0:	pop	{r3, r4, r5, lr}
   13dd4:	b	10ffc <memcpy@plt>
   13dd8:	push	{r4, lr}
   13ddc:	mov	r4, r0
   13de0:	bl	11128 <strlen@plt>
   13de4:	add	r1, r0, #1
   13de8:	mov	r0, r4
   13dec:	pop	{r4, lr}
   13df0:	b	13db4 <close_stdout@@Base+0x21f0>
   13df4:	ldr	r3, [pc, #64]	; 13e3c <close_stdout@@Base+0x2278>
   13df8:	mov	r2, #5
   13dfc:	ldr	ip, [pc, #60]	; 13e40 <close_stdout@@Base+0x227c>
   13e00:	mov	r0, #0
   13e04:	add	r3, pc, r3
   13e08:	ldr	r1, [pc, #52]	; 13e44 <close_stdout@@Base+0x2280>
   13e0c:	push	{r4, lr}
   13e10:	add	r1, pc, r1
   13e14:	ldr	r3, [r3, ip]
   13e18:	ldr	r4, [r3]
   13e1c:	bl	11020 <dcgettext@plt>
   13e20:	ldr	r2, [pc, #32]	; 13e48 <close_stdout@@Base+0x2284>
   13e24:	mov	r1, #0
   13e28:	add	r2, pc, r2
   13e2c:	mov	r3, r0
   13e30:	mov	r0, r4
   13e34:	bl	110b0 <error@plt>
   13e38:	bl	11224 <abort@plt>
   13e3c:	strdeq	r2, [r1], -r4
   13e40:	andeq	r0, r0, r0, lsr #2
   13e44:	muleq	r0, r8, ip
   13e48:	andeq	r1, r0, r4, lsr #17
   13e4c:	push	{r4, lr}
   13e50:	bl	1431c <close_stdout@@Base+0x2758>
   13e54:	cmn	r0, #1
   13e58:	mov	r4, r0
   13e5c:	beq	13e68 <close_stdout@@Base+0x22a4>
   13e60:	mov	r0, r4
   13e64:	pop	{r4, pc}
   13e68:	bl	11140 <__errno_location@plt>
   13e6c:	ldr	r3, [r0]
   13e70:	cmp	r3, #12
   13e74:	bne	13e60 <close_stdout@@Base+0x229c>
   13e78:	bl	13df4 <close_stdout@@Base+0x2230>
   13e7c:	push	{r4, r5, r6, lr}
   13e80:	mov	r4, r0
   13e84:	bl	11098 <__fpending@plt>
   13e88:	mov	r6, r0
   13e8c:	mov	r0, r4
   13e90:	ldr	r4, [r4]
   13e94:	bl	1458c <close_stdout@@Base+0x29c8>
   13e98:	and	r4, r4, #32
   13e9c:	adds	r5, r0, #0
   13ea0:	movne	r5, #1
   13ea4:	cmp	r4, #0
   13ea8:	bne	13ec8 <close_stdout@@Base+0x2304>
   13eac:	cmp	r5, #0
   13eb0:	beq	13ec0 <close_stdout@@Base+0x22fc>
   13eb4:	cmp	r6, #0
   13eb8:	beq	13ee4 <close_stdout@@Base+0x2320>
   13ebc:	mvn	r4, #0
   13ec0:	mov	r0, r4
   13ec4:	pop	{r4, r5, r6, pc}
   13ec8:	cmp	r5, #0
   13ecc:	bne	13ebc <close_stdout@@Base+0x22f8>
   13ed0:	bl	11140 <__errno_location@plt>
   13ed4:	mvn	r4, #0
   13ed8:	str	r5, [r0]
   13edc:	mov	r0, r4
   13ee0:	pop	{r4, r5, r6, pc}
   13ee4:	bl	11140 <__errno_location@plt>
   13ee8:	ldr	r4, [r0]
   13eec:	subs	r4, r4, #9
   13ef0:	mvnne	r4, #0
   13ef4:	mov	r0, r4
   13ef8:	pop	{r4, r5, r6, pc}
   13efc:	ldr	r3, [pc, #984]	; 142dc <close_stdout@@Base+0x2718>
   13f00:	mov	r0, #14
   13f04:	ldr	r2, [pc, #980]	; 142e0 <close_stdout@@Base+0x271c>
   13f08:	add	r3, pc, r3
   13f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f10:	sub	sp, sp, #132	; 0x84
   13f14:	ldr	r6, [r3, r2]
   13f18:	ldr	r3, [r6]
   13f1c:	str	r3, [sp, #124]	; 0x7c
   13f20:	bl	111f4 <nl_langinfo@plt>
   13f24:	subs	r5, r0, #0
   13f28:	beq	13fdc <close_stdout@@Base+0x2418>
   13f2c:	ldr	r3, [pc, #944]	; 142e4 <close_stdout@@Base+0x2720>
   13f30:	ldr	r4, [pc, r3]
   13f34:	cmp	r4, #0
   13f38:	beq	13fe8 <close_stdout@@Base+0x2424>
   13f3c:	ldrb	r7, [r4]
   13f40:	cmp	r7, #0
   13f44:	bne	13f78 <close_stdout@@Base+0x23b4>
   13f48:	b	13fb0 <close_stdout@@Base+0x23ec>
   13f4c:	mov	r0, r4
   13f50:	bl	11128 <strlen@plt>
   13f54:	add	r0, r0, #1
   13f58:	add	r7, r4, r0
   13f5c:	mov	r0, r7
   13f60:	bl	11128 <strlen@plt>
   13f64:	add	r0, r0, #1
   13f68:	add	r4, r7, r0
   13f6c:	ldrb	r7, [r7, r0]
   13f70:	cmp	r7, #0
   13f74:	beq	13fb0 <close_stdout@@Base+0x23ec>
   13f78:	mov	r0, r5
   13f7c:	mov	r1, r4
   13f80:	bl	10fb4 <strcmp@plt>
   13f84:	cmp	r0, #0
   13f88:	beq	13fa0 <close_stdout@@Base+0x23dc>
   13f8c:	cmp	r7, #42	; 0x2a
   13f90:	bne	13f4c <close_stdout@@Base+0x2388>
   13f94:	ldrb	r3, [r4, #1]
   13f98:	cmp	r3, #0
   13f9c:	bne	13f4c <close_stdout@@Base+0x2388>
   13fa0:	mov	r0, r4
   13fa4:	bl	11128 <strlen@plt>
   13fa8:	add	r0, r0, #1
   13fac:	add	r5, r4, r0
   13fb0:	ldrb	r3, [r5]
   13fb4:	cmp	r3, #0
   13fb8:	ldreq	r5, [pc, #808]	; 142e8 <close_stdout@@Base+0x2724>
   13fbc:	addeq	r5, pc, r5
   13fc0:	ldr	r2, [sp, #124]	; 0x7c
   13fc4:	mov	r0, r5
   13fc8:	ldr	r3, [r6]
   13fcc:	cmp	r2, r3
   13fd0:	bne	142b0 <close_stdout@@Base+0x26ec>
   13fd4:	add	sp, sp, #132	; 0x84
   13fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fdc:	ldr	r5, [pc, #776]	; 142ec <close_stdout@@Base+0x2728>
   13fe0:	add	r5, pc, r5
   13fe4:	b	13f2c <close_stdout@@Base+0x2368>
   13fe8:	ldr	r0, [pc, #768]	; 142f0 <close_stdout@@Base+0x272c>
   13fec:	add	r0, pc, r0
   13ff0:	bl	110c8 <getenv@plt>
   13ff4:	subs	r8, r0, #0
   13ff8:	beq	14288 <close_stdout@@Base+0x26c4>
   13ffc:	ldrb	r3, [r8]
   14000:	cmp	r3, #0
   14004:	beq	1421c <close_stdout@@Base+0x2658>
   14008:	bl	11128 <strlen@plt>
   1400c:	subs	sl, r0, #0
   14010:	subne	r3, sl, #1
   14014:	bne	1422c <close_stdout@@Base+0x2668>
   14018:	mov	r9, #0
   1401c:	mov	fp, r9
   14020:	add	r9, sl, r9
   14024:	add	r0, r9, #14
   14028:	bl	110d4 <malloc@plt>
   1402c:	subs	r7, r0, #0
   14030:	beq	1427c <close_stdout@@Base+0x26b8>
   14034:	mov	r1, r8
   14038:	mov	r2, sl
   1403c:	bl	10ffc <memcpy@plt>
   14040:	cmp	fp, #0
   14044:	add	ip, r7, r9
   14048:	movne	r3, #47	; 0x2f
   1404c:	strbne	r3, [r7, sl]
   14050:	ldr	r3, [pc, #668]	; 142f4 <close_stdout@@Base+0x2730>
   14054:	add	r3, pc, r3
   14058:	ldm	r3!, {r0, r1, r2}
   1405c:	ldrh	r3, [r3]
   14060:	str	r0, [r7, r9]
   14064:	mov	r0, r7
   14068:	str	r1, [ip, #4]
   1406c:	mov	r1, #32768	; 0x8000
   14070:	strh	r3, [ip, #12]
   14074:	str	r2, [ip, #8]
   14078:	bl	110bc <open64@plt>
   1407c:	subs	r8, r0, #0
   14080:	blt	14244 <close_stdout@@Base+0x2680>
   14084:	ldr	r1, [pc, #620]	; 142f8 <close_stdout@@Base+0x2734>
   14088:	add	r1, pc, r1
   1408c:	bl	10f78 <fdopen@plt>
   14090:	subs	fp, r0, #0
   14094:	beq	1429c <close_stdout@@Base+0x26d8>
   14098:	ldr	r0, [pc, #604]	; 142fc <close_stdout@@Base+0x2738>
   1409c:	add	sl, sp, #20
   140a0:	add	r9, sp, #72	; 0x48
   140a4:	mov	r8, #0
   140a8:	add	r0, pc, r0
   140ac:	str	r0, [sp, #12]
   140b0:	ldr	r3, [fp, #4]
   140b4:	ldr	r2, [fp, #8]
   140b8:	cmp	r3, r2
   140bc:	bcs	141a8 <close_stdout@@Base+0x25e4>
   140c0:	add	r2, r3, #1
   140c4:	str	r2, [fp, #4]
   140c8:	ldrb	r0, [r3]
   140cc:	cmp	r0, #32
   140d0:	beq	140b0 <close_stdout@@Base+0x24ec>
   140d4:	sub	r3, r0, #9
   140d8:	cmp	r3, #1
   140dc:	bls	140b0 <close_stdout@@Base+0x24ec>
   140e0:	cmp	r0, #35	; 0x23
   140e4:	beq	141bc <close_stdout@@Base+0x25f8>
   140e8:	mov	r1, fp
   140ec:	bl	11134 <ungetc@plt>
   140f0:	mov	r0, fp
   140f4:	ldr	r1, [sp, #12]
   140f8:	mov	r2, sl
   140fc:	mov	r3, r9
   14100:	bl	1117c <fscanf@plt>
   14104:	cmp	r0, #1
   14108:	ble	141ec <close_stdout@@Base+0x2628>
   1410c:	mov	r0, sl
   14110:	bl	11128 <strlen@plt>
   14114:	str	r0, [sp, #8]
   14118:	mov	r0, r9
   1411c:	bl	11128 <strlen@plt>
   14120:	cmp	r8, #0
   14124:	mov	r2, r0
   14128:	bne	14250 <close_stdout@@Base+0x268c>
   1412c:	ldr	r3, [sp, #8]
   14130:	str	r2, [sp]
   14134:	add	r8, r0, r3
   14138:	add	r0, r8, #3
   1413c:	add	r8, r8, #2
   14140:	bl	110d4 <malloc@plt>
   14144:	ldr	r2, [sp]
   14148:	mov	r3, r0
   1414c:	cmp	r3, #0
   14150:	beq	142b4 <close_stdout@@Base+0x26f0>
   14154:	ldr	r0, [sp, #8]
   14158:	movw	r1, #65534	; 0xfffe
   1415c:	movt	r1, #65535	; 0xffff
   14160:	rsb	r2, r2, r8
   14164:	rsb	r1, r0, r1
   14168:	stm	sp, {r2, r3}
   1416c:	add	r0, r1, r2
   14170:	mov	r1, sl
   14174:	add	r0, r3, r0
   14178:	mov	r4, r3
   1417c:	bl	1108c <strcpy@plt>
   14180:	ldr	r2, [sp]
   14184:	ldr	r3, [sp, #4]
   14188:	mov	r1, r9
   1418c:	sub	r0, r2, #1
   14190:	add	r0, r3, r0
   14194:	bl	1108c <strcpy@plt>
   14198:	ldr	r3, [fp, #4]
   1419c:	ldr	r2, [fp, #8]
   141a0:	cmp	r3, r2
   141a4:	bcc	140c0 <close_stdout@@Base+0x24fc>
   141a8:	mov	r0, fp
   141ac:	bl	111c4 <__uflow@plt>
   141b0:	cmn	r0, #1
   141b4:	beq	141ec <close_stdout@@Base+0x2628>
   141b8:	b	140cc <close_stdout@@Base+0x2508>
   141bc:	ldr	r3, [fp, #4]
   141c0:	ldr	r2, [fp, #8]
   141c4:	cmp	r3, r2
   141c8:	bcs	142d0 <close_stdout@@Base+0x270c>
   141cc:	add	r2, r3, #1
   141d0:	str	r2, [fp, #4]
   141d4:	ldrb	r0, [r3]
   141d8:	cmp	r0, #10
   141dc:	cmnne	r0, #1
   141e0:	bne	141bc <close_stdout@@Base+0x25f8>
   141e4:	cmn	r0, #1
   141e8:	bne	140b0 <close_stdout@@Base+0x24ec>
   141ec:	mov	r0, fp
   141f0:	bl	1458c <close_stdout@@Base+0x29c8>
   141f4:	cmp	r8, #0
   141f8:	beq	14244 <close_stdout@@Base+0x2680>
   141fc:	mov	r3, #0
   14200:	strb	r3, [r4, r8]
   14204:	mov	r0, r7
   14208:	bl	10fe4 <free@plt>
   1420c:	ldr	r3, [pc, #236]	; 14300 <close_stdout@@Base+0x273c>
   14210:	add	r3, pc, r3
   14214:	str	r4, [r3]
   14218:	b	13f3c <close_stdout@@Base+0x2378>
   1421c:	ldr	r8, [pc, #224]	; 14304 <close_stdout@@Base+0x2740>
   14220:	mov	r3, #7
   14224:	mov	sl, #8
   14228:	add	r8, pc, r8
   1422c:	ldrb	r3, [r8, r3]
   14230:	cmp	r3, #47	; 0x2f
   14234:	movne	r9, #1
   14238:	movne	fp, r9
   1423c:	bne	14020 <close_stdout@@Base+0x245c>
   14240:	b	14018 <close_stdout@@Base+0x2454>
   14244:	ldr	r4, [pc, #188]	; 14308 <close_stdout@@Base+0x2744>
   14248:	add	r4, pc, r4
   1424c:	b	14204 <close_stdout@@Base+0x2640>
   14250:	ldr	r0, [sp, #8]
   14254:	str	r2, [sp]
   14258:	add	r3, r0, r2
   1425c:	mov	r0, r4
   14260:	add	r8, r3, r8
   14264:	add	r1, r8, #3
   14268:	add	r8, r8, #2
   1426c:	bl	11038 <realloc@plt>
   14270:	ldr	r2, [sp]
   14274:	mov	r3, r0
   14278:	b	1414c <close_stdout@@Base+0x2588>
   1427c:	ldr	r4, [pc, #136]	; 1430c <close_stdout@@Base+0x2748>
   14280:	add	r4, pc, r4
   14284:	b	1420c <close_stdout@@Base+0x2648>
   14288:	ldr	r8, [pc, #128]	; 14310 <close_stdout@@Base+0x274c>
   1428c:	mov	r3, #7
   14290:	mov	sl, #8
   14294:	add	r8, pc, r8
   14298:	b	1422c <close_stdout@@Base+0x2668>
   1429c:	ldr	r4, [pc, #112]	; 14314 <close_stdout@@Base+0x2750>
   142a0:	mov	r0, r8
   142a4:	add	r4, pc, r4
   142a8:	bl	11230 <close@plt>
   142ac:	b	14204 <close_stdout@@Base+0x2640>
   142b0:	bl	1102c <__stack_chk_fail@plt>
   142b4:	mov	r0, r4
   142b8:	ldr	r4, [pc, #88]	; 14318 <close_stdout@@Base+0x2754>
   142bc:	bl	10fe4 <free@plt>
   142c0:	mov	r0, fp
   142c4:	add	r4, pc, r4
   142c8:	bl	1458c <close_stdout@@Base+0x29c8>
   142cc:	b	14204 <close_stdout@@Base+0x2640>
   142d0:	mov	r0, fp
   142d4:	bl	111c4 <__uflow@plt>
   142d8:	b	141d8 <close_stdout@@Base+0x2614>
   142dc:	strdeq	r2, [r1], -r0
   142e0:	andeq	r0, r0, r0, lsl #2
   142e4:	andeq	r2, r1, r0, lsr #7
   142e8:	andeq	r1, r0, ip, lsl #22
   142ec:	andeq	r1, r0, ip, lsr #11
   142f0:	andeq	r1, r0, r4, ror #21
   142f4:	andeq	r1, r0, ip, lsl #21
   142f8:	andeq	r1, r0, r8, ror #20
   142fc:	andeq	r1, r0, ip, asr #20
   14300:	andeq	r2, r1, r0, asr #1
   14304:	muleq	r0, r4, r8
   14308:	andeq	r1, r0, r4, asr #6
   1430c:	andeq	r1, r0, ip, lsl #6
   14310:	andeq	r1, r0, r8, lsr #16
   14314:	andeq	r1, r0, r8, ror #5
   14318:	andeq	r1, r0, r8, asr #5
   1431c:	ldr	r3, [pc, #608]	; 14584 <close_stdout@@Base+0x29c0>
   14320:	ldr	ip, [pc, #608]	; 14588 <close_stdout@@Base+0x29c4>
   14324:	add	r3, pc, r3
   14328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1432c:	subs	r7, r0, #0
   14330:	ldr	r9, [r3, ip]
   14334:	sub	sp, sp, #12
   14338:	mov	r6, r1
   1433c:	mov	sl, r2
   14340:	ldr	r3, [r9]
   14344:	str	r3, [sp, #4]
   14348:	beq	14420 <close_stdout@@Base+0x285c>
   1434c:	mov	r0, #0
   14350:	mov	r1, #40	; 0x28
   14354:	mov	r3, #10
   14358:	str	r3, [sp]
   1435c:	bl	11038 <realloc@plt>
   14360:	subs	r4, r0, #0
   14364:	bne	14398 <close_stdout@@Base+0x27d4>
   14368:	b	143f4 <close_stdout@@Base+0x2830>
   1436c:	ldr	r1, [sp]
   14370:	cmn	r1, #-1073741823	; 0xc0000001
   14374:	bhi	143d4 <close_stdout@@Base+0x2810>
   14378:	lsl	r1, r1, #2
   1437c:	mov	r0, r4
   14380:	bl	11038 <realloc@plt>
   14384:	cmp	r0, #0
   14388:	beq	14574 <close_stdout@@Base+0x29b0>
   1438c:	cmp	r5, #0
   14390:	bge	14414 <close_stdout@@Base+0x2850>
   14394:	mov	r4, r0
   14398:	mov	r0, r7
   1439c:	mov	r1, r6
   143a0:	mov	r2, r4
   143a4:	mov	r3, sp
   143a8:	ldr	fp, [sp]
   143ac:	bl	11164 <getgrouplist@plt>
   143b0:	subs	r5, r0, #0
   143b4:	bge	1436c <close_stdout@@Base+0x27a8>
   143b8:	ldr	ip, [sp]
   143bc:	cmp	fp, ip
   143c0:	lsleq	ip, fp, #1
   143c4:	streq	ip, [sp]
   143c8:	mov	r1, ip
   143cc:	cmn	r1, #-1073741823	; 0xc0000001
   143d0:	bls	14378 <close_stdout@@Base+0x27b4>
   143d4:	bl	11140 <__errno_location@plt>
   143d8:	mov	r3, #12
   143dc:	mov	r6, r3
   143e0:	mov	r5, r0
   143e4:	str	r3, [r0]
   143e8:	mov	r0, r4
   143ec:	bl	10fe4 <free@plt>
   143f0:	str	r6, [r5]
   143f4:	mvn	r3, #0
   143f8:	ldr	r2, [sp, #4]
   143fc:	mov	r0, r3
   14400:	ldr	r3, [r9]
   14404:	cmp	r2, r3
   14408:	bne	14570 <close_stdout@@Base+0x29ac>
   1440c:	add	sp, sp, #12
   14410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14414:	str	r0, [sl]
   14418:	ldr	r3, [sp]
   1441c:	b	143f8 <close_stdout@@Base+0x2834>
   14420:	mov	r1, r7
   14424:	bl	11200 <getgroups@plt>
   14428:	cmp	r0, #0
   1442c:	str	r0, [sp]
   14430:	blt	144f4 <close_stdout@@Base+0x2930>
   14434:	beq	14440 <close_stdout@@Base+0x287c>
   14438:	cmn	r6, #1
   1443c:	beq	14448 <close_stdout@@Base+0x2884>
   14440:	add	r0, r0, #1
   14444:	str	r0, [sp]
   14448:	cmn	r0, #-1073741823	; 0xc0000001
   1444c:	bhi	1452c <close_stdout@@Base+0x2968>
   14450:	lsl	r1, r0, #2
   14454:	mov	r0, #0
   14458:	bl	11038 <realloc@plt>
   1445c:	subs	r4, r0, #0
   14460:	beq	143f4 <close_stdout@@Base+0x2830>
   14464:	adds	r3, r6, #1
   14468:	ldr	r2, [sp]
   1446c:	movne	r3, #1
   14470:	cmp	r3, #0
   14474:	rsb	r0, r3, r2
   14478:	beq	14540 <close_stdout@@Base+0x297c>
   1447c:	add	r1, r4, #4
   14480:	bl	11200 <getgroups@plt>
   14484:	cmp	r0, #0
   14488:	strge	r6, [r4]
   1448c:	addge	r0, r0, #1
   14490:	blt	14550 <close_stdout@@Base+0x298c>
   14494:	cmp	r0, #1
   14498:	str	r4, [sl]
   1449c:	ble	144ec <close_stdout@@Base+0x2928>
   144a0:	add	ip, r4, r0, lsl #2
   144a4:	add	r2, r4, #4
   144a8:	cmp	ip, r2
   144ac:	ldr	r5, [r4]
   144b0:	bhi	144d4 <close_stdout@@Base+0x2910>
   144b4:	b	144ec <close_stdout@@Base+0x2928>
   144b8:	ldr	r1, [r4]
   144bc:	cmp	r3, r1
   144c0:	strne	r3, [r4, #4]
   144c4:	addne	r4, r4, #4
   144c8:	beq	144e0 <close_stdout@@Base+0x291c>
   144cc:	cmp	ip, r2
   144d0:	bls	144ec <close_stdout@@Base+0x2928>
   144d4:	ldr	r3, [r2], #4
   144d8:	cmp	r3, r5
   144dc:	bne	144b8 <close_stdout@@Base+0x28f4>
   144e0:	cmp	ip, r2
   144e4:	sub	r0, r0, #1
   144e8:	bhi	144d4 <close_stdout@@Base+0x2910>
   144ec:	mov	r3, r0
   144f0:	b	143f8 <close_stdout@@Base+0x2834>
   144f4:	bl	11140 <__errno_location@plt>
   144f8:	ldr	r3, [r0]
   144fc:	cmp	r3, #38	; 0x26
   14500:	bne	143f4 <close_stdout@@Base+0x2830>
   14504:	mov	r0, r7
   14508:	mov	r1, #4
   1450c:	bl	11038 <realloc@plt>
   14510:	cmp	r0, #0
   14514:	beq	143f4 <close_stdout@@Base+0x2830>
   14518:	adds	r3, r6, #1
   1451c:	str	r0, [sl]
   14520:	str	r6, [r0]
   14524:	movne	r3, #1
   14528:	b	143f8 <close_stdout@@Base+0x2834>
   1452c:	bl	11140 <__errno_location@plt>
   14530:	mov	r2, #12
   14534:	mvn	r3, #0
   14538:	str	r2, [r0]
   1453c:	b	143f8 <close_stdout@@Base+0x2834>
   14540:	mov	r1, r4
   14544:	bl	11200 <getgroups@plt>
   14548:	cmp	r0, #0
   1454c:	bge	14494 <close_stdout@@Base+0x28d0>
   14550:	bl	11140 <__errno_location@plt>
   14554:	ldr	r6, [r0]
   14558:	mov	r5, r0
   1455c:	mov	r0, r4
   14560:	bl	10fe4 <free@plt>
   14564:	mvn	r3, #0
   14568:	str	r6, [r5]
   1456c:	b	143f8 <close_stdout@@Base+0x2834>
   14570:	bl	1102c <__stack_chk_fail@plt>
   14574:	bl	11140 <__errno_location@plt>
   14578:	mov	r5, r0
   1457c:	ldr	r6, [r0]
   14580:	b	143e8 <close_stdout@@Base+0x2824>
   14584:	ldrdeq	r1, [r1], -r4
   14588:	andeq	r0, r0, r0, lsl #2
   1458c:	push	{r4, r5, r6, lr}
   14590:	sub	sp, sp, #8
   14594:	mov	r4, r0
   14598:	bl	11194 <fileno@plt>
   1459c:	cmp	r0, #0
   145a0:	mov	r0, r4
   145a4:	blt	14620 <close_stdout@@Base+0x2a5c>
   145a8:	bl	110ec <__freading@plt>
   145ac:	cmp	r0, #0
   145b0:	bne	145ec <close_stdout@@Base+0x2a28>
   145b4:	mov	r0, r4
   145b8:	bl	1462c <close_stdout@@Base+0x2a68>
   145bc:	cmp	r0, #0
   145c0:	beq	1461c <close_stdout@@Base+0x2a58>
   145c4:	bl	11140 <__errno_location@plt>
   145c8:	ldr	r6, [r0]
   145cc:	mov	r5, r0
   145d0:	mov	r0, r4
   145d4:	bl	111ac <fclose@plt>
   145d8:	cmp	r6, #0
   145dc:	mvnne	r0, #0
   145e0:	strne	r6, [r5]
   145e4:	add	sp, sp, #8
   145e8:	pop	{r4, r5, r6, pc}
   145ec:	mov	r0, r4
   145f0:	bl	11194 <fileno@plt>
   145f4:	mov	r1, #1
   145f8:	mov	r2, #0
   145fc:	mov	r3, #0
   14600:	str	r1, [sp]
   14604:	bl	11074 <lseek64@plt>
   14608:	mvn	r2, #0
   1460c:	mvn	r3, #0
   14610:	cmp	r1, r3
   14614:	cmpeq	r0, r2
   14618:	bne	145b4 <close_stdout@@Base+0x29f0>
   1461c:	mov	r0, r4
   14620:	add	sp, sp, #8
   14624:	pop	{r4, r5, r6, lr}
   14628:	b	111ac <fclose@plt>
   1462c:	push	{r4, lr}
   14630:	subs	r4, r0, #0
   14634:	sub	sp, sp, #8
   14638:	beq	14648 <close_stdout@@Base+0x2a84>
   1463c:	bl	110ec <__freading@plt>
   14640:	cmp	r0, #0
   14644:	bne	14658 <close_stdout@@Base+0x2a94>
   14648:	mov	r0, r4
   1464c:	add	sp, sp, #8
   14650:	pop	{r4, lr}
   14654:	b	10fcc <fflush@plt>
   14658:	ldr	r3, [r4]
   1465c:	tst	r3, #256	; 0x100
   14660:	beq	14648 <close_stdout@@Base+0x2a84>
   14664:	mov	r3, #1
   14668:	mov	r0, r4
   1466c:	str	r3, [sp]
   14670:	mov	r2, #0
   14674:	mov	r3, #0
   14678:	bl	1468c <close_stdout@@Base+0x2ac8>
   1467c:	mov	r0, r4
   14680:	add	sp, sp, #8
   14684:	pop	{r4, lr}
   14688:	b	10fcc <fflush@plt>
   1468c:	push	{r4, r5, r6, r7, lr}
   14690:	sub	sp, sp, #20
   14694:	ldmib	r0, {r1, ip}
   14698:	mov	r6, r0
   1469c:	ldr	r4, [sp, #40]	; 0x28
   146a0:	cmp	ip, r1
   146a4:	beq	146bc <close_stdout@@Base+0x2af8>
   146a8:	str	r4, [sp, #40]	; 0x28
   146ac:	mov	r0, r6
   146b0:	add	sp, sp, #20
   146b4:	pop	{r4, r5, r6, r7, lr}
   146b8:	b	111b8 <fseeko64@plt>
   146bc:	ldr	ip, [r0, #20]
   146c0:	ldr	r1, [r0, #16]
   146c4:	cmp	ip, r1
   146c8:	bne	146a8 <close_stdout@@Base+0x2ae4>
   146cc:	ldr	r7, [r0, #36]	; 0x24
   146d0:	cmp	r7, #0
   146d4:	bne	146a8 <close_stdout@@Base+0x2ae4>
   146d8:	str	r2, [sp, #12]
   146dc:	mvn	r5, #0
   146e0:	str	r3, [sp, #8]
   146e4:	bl	11194 <fileno@plt>
   146e8:	str	r4, [sp]
   146ec:	mvn	r4, #0
   146f0:	ldr	r2, [sp, #12]
   146f4:	ldr	r3, [sp, #8]
   146f8:	bl	11074 <lseek64@plt>
   146fc:	mov	r2, r0
   14700:	mov	r3, r1
   14704:	cmp	r3, r5
   14708:	cmpeq	r2, r4
   1470c:	beq	1472c <close_stdout@@Base+0x2b68>
   14710:	ldr	r1, [r6]
   14714:	mov	r0, r7
   14718:	strd	r2, [r6, #80]	; 0x50
   1471c:	bic	r3, r1, #16
   14720:	str	r3, [r6]
   14724:	add	sp, sp, #20
   14728:	pop	{r4, r5, r6, r7, pc}
   1472c:	mvn	r0, #0
   14730:	b	14724 <close_stdout@@Base+0x2b60>
   14734:	subs	r2, r1, #1
   14738:	bxeq	lr
   1473c:	bcc	14914 <close_stdout@@Base+0x2d50>
   14740:	cmp	r0, r1
   14744:	bls	148f8 <close_stdout@@Base+0x2d34>
   14748:	tst	r1, r2
   1474c:	beq	14904 <close_stdout@@Base+0x2d40>
   14750:	clz	r3, r0
   14754:	clz	r2, r1
   14758:	sub	r3, r2, r3
   1475c:	rsbs	r3, r3, #31
   14760:	addne	r3, r3, r3, lsl #1
   14764:	mov	r2, #0
   14768:	addne	pc, pc, r3, lsl #2
   1476c:	nop	{0}
   14770:	cmp	r0, r1, lsl #31
   14774:	adc	r2, r2, r2
   14778:	subcs	r0, r0, r1, lsl #31
   1477c:	cmp	r0, r1, lsl #30
   14780:	adc	r2, r2, r2
   14784:	subcs	r0, r0, r1, lsl #30
   14788:	cmp	r0, r1, lsl #29
   1478c:	adc	r2, r2, r2
   14790:	subcs	r0, r0, r1, lsl #29
   14794:	cmp	r0, r1, lsl #28
   14798:	adc	r2, r2, r2
   1479c:	subcs	r0, r0, r1, lsl #28
   147a0:	cmp	r0, r1, lsl #27
   147a4:	adc	r2, r2, r2
   147a8:	subcs	r0, r0, r1, lsl #27
   147ac:	cmp	r0, r1, lsl #26
   147b0:	adc	r2, r2, r2
   147b4:	subcs	r0, r0, r1, lsl #26
   147b8:	cmp	r0, r1, lsl #25
   147bc:	adc	r2, r2, r2
   147c0:	subcs	r0, r0, r1, lsl #25
   147c4:	cmp	r0, r1, lsl #24
   147c8:	adc	r2, r2, r2
   147cc:	subcs	r0, r0, r1, lsl #24
   147d0:	cmp	r0, r1, lsl #23
   147d4:	adc	r2, r2, r2
   147d8:	subcs	r0, r0, r1, lsl #23
   147dc:	cmp	r0, r1, lsl #22
   147e0:	adc	r2, r2, r2
   147e4:	subcs	r0, r0, r1, lsl #22
   147e8:	cmp	r0, r1, lsl #21
   147ec:	adc	r2, r2, r2
   147f0:	subcs	r0, r0, r1, lsl #21
   147f4:	cmp	r0, r1, lsl #20
   147f8:	adc	r2, r2, r2
   147fc:	subcs	r0, r0, r1, lsl #20
   14800:	cmp	r0, r1, lsl #19
   14804:	adc	r2, r2, r2
   14808:	subcs	r0, r0, r1, lsl #19
   1480c:	cmp	r0, r1, lsl #18
   14810:	adc	r2, r2, r2
   14814:	subcs	r0, r0, r1, lsl #18
   14818:	cmp	r0, r1, lsl #17
   1481c:	adc	r2, r2, r2
   14820:	subcs	r0, r0, r1, lsl #17
   14824:	cmp	r0, r1, lsl #16
   14828:	adc	r2, r2, r2
   1482c:	subcs	r0, r0, r1, lsl #16
   14830:	cmp	r0, r1, lsl #15
   14834:	adc	r2, r2, r2
   14838:	subcs	r0, r0, r1, lsl #15
   1483c:	cmp	r0, r1, lsl #14
   14840:	adc	r2, r2, r2
   14844:	subcs	r0, r0, r1, lsl #14
   14848:	cmp	r0, r1, lsl #13
   1484c:	adc	r2, r2, r2
   14850:	subcs	r0, r0, r1, lsl #13
   14854:	cmp	r0, r1, lsl #12
   14858:	adc	r2, r2, r2
   1485c:	subcs	r0, r0, r1, lsl #12
   14860:	cmp	r0, r1, lsl #11
   14864:	adc	r2, r2, r2
   14868:	subcs	r0, r0, r1, lsl #11
   1486c:	cmp	r0, r1, lsl #10
   14870:	adc	r2, r2, r2
   14874:	subcs	r0, r0, r1, lsl #10
   14878:	cmp	r0, r1, lsl #9
   1487c:	adc	r2, r2, r2
   14880:	subcs	r0, r0, r1, lsl #9
   14884:	cmp	r0, r1, lsl #8
   14888:	adc	r2, r2, r2
   1488c:	subcs	r0, r0, r1, lsl #8
   14890:	cmp	r0, r1, lsl #7
   14894:	adc	r2, r2, r2
   14898:	subcs	r0, r0, r1, lsl #7
   1489c:	cmp	r0, r1, lsl #6
   148a0:	adc	r2, r2, r2
   148a4:	subcs	r0, r0, r1, lsl #6
   148a8:	cmp	r0, r1, lsl #5
   148ac:	adc	r2, r2, r2
   148b0:	subcs	r0, r0, r1, lsl #5
   148b4:	cmp	r0, r1, lsl #4
   148b8:	adc	r2, r2, r2
   148bc:	subcs	r0, r0, r1, lsl #4
   148c0:	cmp	r0, r1, lsl #3
   148c4:	adc	r2, r2, r2
   148c8:	subcs	r0, r0, r1, lsl #3
   148cc:	cmp	r0, r1, lsl #2
   148d0:	adc	r2, r2, r2
   148d4:	subcs	r0, r0, r1, lsl #2
   148d8:	cmp	r0, r1, lsl #1
   148dc:	adc	r2, r2, r2
   148e0:	subcs	r0, r0, r1, lsl #1
   148e4:	cmp	r0, r1
   148e8:	adc	r2, r2, r2
   148ec:	subcs	r0, r0, r1
   148f0:	mov	r0, r2
   148f4:	bx	lr
   148f8:	moveq	r0, #1
   148fc:	movne	r0, #0
   14900:	bx	lr
   14904:	clz	r2, r1
   14908:	rsb	r2, r2, #31
   1490c:	lsr	r0, r0, r2
   14910:	bx	lr
   14914:	cmp	r0, #0
   14918:	mvnne	r0, #0
   1491c:	b	1497c <close_stdout@@Base+0x2db8>
   14920:	cmp	r1, #0
   14924:	beq	14914 <close_stdout@@Base+0x2d50>
   14928:	push	{r0, r1, lr}
   1492c:	bl	14734 <close_stdout@@Base+0x2b70>
   14930:	pop	{r1, r2, lr}
   14934:	mul	r3, r2, r0
   14938:	sub	r1, r1, r3
   1493c:	bx	lr
   14940:	cmp	r3, #0
   14944:	cmpeq	r2, #0
   14948:	bne	14960 <close_stdout@@Base+0x2d9c>
   1494c:	cmp	r1, #0
   14950:	cmpeq	r0, #0
   14954:	mvnne	r1, #0
   14958:	mvnne	r0, #0
   1495c:	b	1497c <close_stdout@@Base+0x2db8>
   14960:	sub	sp, sp, #8
   14964:	push	{sp, lr}
   14968:	bl	149c8 <close_stdout@@Base+0x2e04>
   1496c:	ldr	lr, [sp, #4]
   14970:	add	sp, sp, #8
   14974:	pop	{r2, r3}
   14978:	bx	lr
   1497c:	push	{r1, lr}
   14980:	mov	r0, #8
   14984:	bl	10f9c <raise@plt>
   14988:	pop	{r1, pc}
   1498c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14990:	mov	r8, r2
   14994:	mov	r6, r0
   14998:	mov	r7, r1
   1499c:	mov	sl, r3
   149a0:	ldr	r9, [sp, #32]
   149a4:	bl	14a04 <close_stdout@@Base+0x2e40>
   149a8:	umull	r4, r5, r8, r0
   149ac:	mul	r8, r8, r1
   149b0:	mla	r2, r0, sl, r8
   149b4:	add	r5, r2, r5
   149b8:	subs	r4, r6, r4
   149bc:	sbc	r5, r7, r5
   149c0:	strd	r4, [r9]
   149c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   149c8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   149cc:	mov	r8, r2
   149d0:	mov	r6, r0
   149d4:	mov	r7, r1
   149d8:	mov	r5, r3
   149dc:	ldr	r9, [sp, #32]
   149e0:	bl	14e90 <close_stdout@@Base+0x32cc>
   149e4:	mul	r3, r0, r5
   149e8:	umull	r4, r5, r0, r8
   149ec:	mla	r8, r8, r1, r3
   149f0:	add	r5, r8, r5
   149f4:	subs	r4, r6, r4
   149f8:	sbc	r5, r7, r5
   149fc:	strd	r4, [r9]
   14a00:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14a04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a08:	rsbs	r4, r0, #0
   14a0c:	rsc	r5, r1, #0
   14a10:	cmp	r1, #0
   14a14:	mvn	r6, #0
   14a18:	sub	sp, sp, #12
   14a1c:	movge	r4, r0
   14a20:	movge	r5, r1
   14a24:	movge	r6, #0
   14a28:	cmp	r3, #0
   14a2c:	blt	14c64 <close_stdout@@Base+0x30a0>
   14a30:	cmp	r3, #0
   14a34:	mov	sl, r4
   14a38:	mov	ip, r5
   14a3c:	mov	r0, r2
   14a40:	mov	r1, r3
   14a44:	mov	r8, r2
   14a48:	mov	r7, r4
   14a4c:	mov	r9, r5
   14a50:	bne	14b48 <close_stdout@@Base+0x2f84>
   14a54:	cmp	r2, r5
   14a58:	bls	14b84 <close_stdout@@Base+0x2fc0>
   14a5c:	clz	r3, r2
   14a60:	cmp	r3, #0
   14a64:	rsbne	r2, r3, #32
   14a68:	lslne	r8, r0, r3
   14a6c:	lsrne	r2, r4, r2
   14a70:	lslne	r7, r4, r3
   14a74:	orrne	r9, r2, r5, lsl r3
   14a78:	lsr	r4, r8, #16
   14a7c:	uxth	sl, r8
   14a80:	mov	r1, r4
   14a84:	mov	r0, r9
   14a88:	bl	14734 <close_stdout@@Base+0x2b70>
   14a8c:	mov	r1, r4
   14a90:	mov	fp, r0
   14a94:	mov	r0, r9
   14a98:	bl	14920 <close_stdout@@Base+0x2d5c>
   14a9c:	mul	r0, sl, fp
   14aa0:	lsr	r2, r7, #16
   14aa4:	orr	r1, r2, r1, lsl #16
   14aa8:	cmp	r0, r1
   14aac:	bls	14ad0 <close_stdout@@Base+0x2f0c>
   14ab0:	adds	r1, r1, r8
   14ab4:	sub	r3, fp, #1
   14ab8:	bcs	14acc <close_stdout@@Base+0x2f08>
   14abc:	cmp	r0, r1
   14ac0:	subhi	fp, fp, #2
   14ac4:	addhi	r1, r1, r8
   14ac8:	bhi	14ad0 <close_stdout@@Base+0x2f0c>
   14acc:	mov	fp, r3
   14ad0:	rsb	r9, r0, r1
   14ad4:	mov	r1, r4
   14ad8:	uxth	r7, r7
   14adc:	mov	r0, r9
   14ae0:	bl	14734 <close_stdout@@Base+0x2b70>
   14ae4:	mov	r1, r4
   14ae8:	mov	r5, r0
   14aec:	mov	r0, r9
   14af0:	bl	14920 <close_stdout@@Base+0x2d5c>
   14af4:	mul	sl, sl, r5
   14af8:	orr	r1, r7, r1, lsl #16
   14afc:	cmp	sl, r1
   14b00:	bls	14b20 <close_stdout@@Base+0x2f5c>
   14b04:	adds	r8, r1, r8
   14b08:	sub	r3, r5, #1
   14b0c:	bcs	14b1c <close_stdout@@Base+0x2f58>
   14b10:	cmp	sl, r8
   14b14:	subhi	r5, r5, #2
   14b18:	bhi	14b20 <close_stdout@@Base+0x2f5c>
   14b1c:	mov	r5, r3
   14b20:	orr	r3, r5, fp, lsl #16
   14b24:	mov	r4, #0
   14b28:	cmp	r6, #0
   14b2c:	mov	r0, r3
   14b30:	mov	r1, r4
   14b34:	beq	14b40 <close_stdout@@Base+0x2f7c>
   14b38:	rsbs	r0, r0, #0
   14b3c:	rsc	r1, r1, #0
   14b40:	add	sp, sp, #12
   14b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b48:	cmp	r3, r5
   14b4c:	movhi	r4, #0
   14b50:	movhi	r3, r4
   14b54:	bhi	14b28 <close_stdout@@Base+0x2f64>
   14b58:	clz	r5, r1
   14b5c:	cmp	r5, #0
   14b60:	bne	14d50 <close_stdout@@Base+0x318c>
   14b64:	cmp	r1, ip
   14b68:	cmpcs	r2, sl
   14b6c:	movhi	r4, #0
   14b70:	movls	r4, #1
   14b74:	movls	r3, #1
   14b78:	movls	r4, r5
   14b7c:	movhi	r3, r4
   14b80:	b	14b28 <close_stdout@@Base+0x2f64>
   14b84:	cmp	r2, #0
   14b88:	bne	14b9c <close_stdout@@Base+0x2fd8>
   14b8c:	mov	r1, r2
   14b90:	mov	r0, #1
   14b94:	bl	14734 <close_stdout@@Base+0x2b70>
   14b98:	mov	r8, r0
   14b9c:	clz	r3, r8
   14ba0:	cmp	r3, #0
   14ba4:	bne	14c74 <close_stdout@@Base+0x30b0>
   14ba8:	rsb	r9, r8, r9
   14bac:	lsr	r5, r8, #16
   14bb0:	uxth	sl, r8
   14bb4:	mov	r4, #1
   14bb8:	mov	r1, r5
   14bbc:	mov	r0, r9
   14bc0:	bl	14734 <close_stdout@@Base+0x2b70>
   14bc4:	mov	r1, r5
   14bc8:	mov	fp, r0
   14bcc:	mov	r0, r9
   14bd0:	bl	14920 <close_stdout@@Base+0x2d5c>
   14bd4:	mul	r0, sl, fp
   14bd8:	lsr	r2, r7, #16
   14bdc:	orr	r1, r2, r1, lsl #16
   14be0:	cmp	r0, r1
   14be4:	bls	14c04 <close_stdout@@Base+0x3040>
   14be8:	adds	r1, r1, r8
   14bec:	sub	r3, fp, #1
   14bf0:	bcs	14e70 <close_stdout@@Base+0x32ac>
   14bf4:	cmp	r0, r1
   14bf8:	subhi	fp, fp, #2
   14bfc:	addhi	r1, r1, r8
   14c00:	bls	14e70 <close_stdout@@Base+0x32ac>
   14c04:	rsb	r2, r0, r1
   14c08:	mov	r1, r5
   14c0c:	str	r2, [sp]
   14c10:	uxth	r7, r7
   14c14:	mov	r0, r2
   14c18:	bl	14734 <close_stdout@@Base+0x2b70>
   14c1c:	ldr	r2, [sp]
   14c20:	mov	r1, r5
   14c24:	mov	r9, r0
   14c28:	mov	r0, r2
   14c2c:	bl	14920 <close_stdout@@Base+0x2d5c>
   14c30:	mul	sl, sl, r9
   14c34:	orr	r1, r7, r1, lsl #16
   14c38:	cmp	sl, r1
   14c3c:	bls	14c5c <close_stdout@@Base+0x3098>
   14c40:	adds	r8, r1, r8
   14c44:	sub	r3, r9, #1
   14c48:	bcs	14c58 <close_stdout@@Base+0x3094>
   14c4c:	cmp	sl, r8
   14c50:	subhi	r9, r9, #2
   14c54:	bhi	14c5c <close_stdout@@Base+0x3098>
   14c58:	mov	r9, r3
   14c5c:	orr	r3, r9, fp, lsl #16
   14c60:	b	14b28 <close_stdout@@Base+0x2f64>
   14c64:	mvn	r6, r6
   14c68:	rsbs	r2, r2, #0
   14c6c:	rsc	r3, r3, #0
   14c70:	b	14a30 <close_stdout@@Base+0x2e6c>
   14c74:	lsl	r8, r8, r3
   14c78:	rsb	fp, r3, #32
   14c7c:	lsr	r4, r9, fp
   14c80:	lsr	fp, r7, fp
   14c84:	lsr	r5, r8, #16
   14c88:	orr	fp, fp, r9, lsl r3
   14c8c:	mov	r0, r4
   14c90:	lsl	r7, r7, r3
   14c94:	mov	r1, r5
   14c98:	uxth	sl, r8
   14c9c:	bl	14734 <close_stdout@@Base+0x2b70>
   14ca0:	mov	r1, r5
   14ca4:	mov	r3, r0
   14ca8:	mov	r0, r4
   14cac:	str	r3, [sp]
   14cb0:	bl	14920 <close_stdout@@Base+0x2d5c>
   14cb4:	ldr	r3, [sp]
   14cb8:	lsr	r2, fp, #16
   14cbc:	mul	r0, sl, r3
   14cc0:	orr	r1, r2, r1, lsl #16
   14cc4:	cmp	r0, r1
   14cc8:	bls	14ce8 <close_stdout@@Base+0x3124>
   14ccc:	adds	r1, r1, r8
   14cd0:	sub	r2, r3, #1
   14cd4:	bcs	14e88 <close_stdout@@Base+0x32c4>
   14cd8:	cmp	r0, r1
   14cdc:	subhi	r3, r3, #2
   14ce0:	addhi	r1, r1, r8
   14ce4:	bls	14e88 <close_stdout@@Base+0x32c4>
   14ce8:	rsb	r9, r0, r1
   14cec:	mov	r1, r5
   14cf0:	str	r3, [sp]
   14cf4:	uxth	fp, fp
   14cf8:	mov	r0, r9
   14cfc:	bl	14734 <close_stdout@@Base+0x2b70>
   14d00:	mov	r1, r5
   14d04:	mov	r4, r0
   14d08:	mov	r0, r9
   14d0c:	bl	14920 <close_stdout@@Base+0x2d5c>
   14d10:	mul	r9, sl, r4
   14d14:	ldr	r3, [sp]
   14d18:	orr	r1, fp, r1, lsl #16
   14d1c:	cmp	r9, r1
   14d20:	bls	14d44 <close_stdout@@Base+0x3180>
   14d24:	adds	r1, r1, r8
   14d28:	sub	r2, r4, #1
   14d2c:	bcs	14d40 <close_stdout@@Base+0x317c>
   14d30:	cmp	r9, r1
   14d34:	subhi	r4, r4, #2
   14d38:	addhi	r1, r1, r8
   14d3c:	bhi	14d44 <close_stdout@@Base+0x3180>
   14d40:	mov	r4, r2
   14d44:	rsb	r9, r9, r1
   14d48:	orr	r4, r4, r3, lsl #16
   14d4c:	b	14bb8 <close_stdout@@Base+0x2ff4>
   14d50:	rsb	sl, r5, #32
   14d54:	lsl	r3, r2, r5
   14d58:	lsr	r0, r2, sl
   14d5c:	lsr	r2, ip, sl
   14d60:	orr	r4, r0, r1, lsl r5
   14d64:	lsr	sl, r7, sl
   14d68:	mov	r0, r2
   14d6c:	orr	sl, sl, ip, lsl r5
   14d70:	lsr	r9, r4, #16
   14d74:	str	r3, [sp, #4]
   14d78:	str	r2, [sp]
   14d7c:	uxth	fp, r4
   14d80:	mov	r1, r9
   14d84:	bl	14734 <close_stdout@@Base+0x2b70>
   14d88:	ldr	r2, [sp]
   14d8c:	mov	r1, r9
   14d90:	mov	r8, r0
   14d94:	mov	r0, r2
   14d98:	bl	14920 <close_stdout@@Base+0x2d5c>
   14d9c:	mul	r0, fp, r8
   14da0:	lsr	r2, sl, #16
   14da4:	orr	r1, r2, r1, lsl #16
   14da8:	cmp	r0, r1
   14dac:	bls	14dcc <close_stdout@@Base+0x3208>
   14db0:	adds	r1, r1, r4
   14db4:	sub	r2, r8, #1
   14db8:	bcs	14e80 <close_stdout@@Base+0x32bc>
   14dbc:	cmp	r0, r1
   14dc0:	subhi	r8, r8, #2
   14dc4:	addhi	r1, r1, r4
   14dc8:	bls	14e80 <close_stdout@@Base+0x32bc>
   14dcc:	rsb	ip, r0, r1
   14dd0:	mov	r1, r9
   14dd4:	str	ip, [sp]
   14dd8:	mov	r0, ip
   14ddc:	bl	14734 <close_stdout@@Base+0x2b70>
   14de0:	ldr	ip, [sp]
   14de4:	mov	r1, r9
   14de8:	mov	r2, r0
   14dec:	mov	r0, ip
   14df0:	str	r2, [sp]
   14df4:	bl	14920 <close_stdout@@Base+0x2d5c>
   14df8:	ldr	r2, [sp]
   14dfc:	uxth	ip, sl
   14e00:	mul	fp, fp, r2
   14e04:	orr	ip, ip, r1, lsl #16
   14e08:	cmp	fp, ip
   14e0c:	bls	14e2c <close_stdout@@Base+0x3268>
   14e10:	adds	ip, ip, r4
   14e14:	sub	r1, r2, #1
   14e18:	bcs	14e78 <close_stdout@@Base+0x32b4>
   14e1c:	cmp	fp, ip
   14e20:	subhi	r2, r2, #2
   14e24:	addhi	ip, ip, r4
   14e28:	bls	14e78 <close_stdout@@Base+0x32b4>
   14e2c:	ldr	r0, [sp, #4]
   14e30:	orr	r1, r2, r8, lsl #16
   14e34:	rsb	fp, fp, ip
   14e38:	umull	r2, r3, r1, r0
   14e3c:	cmp	fp, r3
   14e40:	bcc	14e64 <close_stdout@@Base+0x32a0>
   14e44:	movne	r4, #0
   14e48:	moveq	r4, #1
   14e4c:	cmp	r2, r7, lsl r5
   14e50:	movls	r4, #0
   14e54:	andhi	r4, r4, #1
   14e58:	cmp	r4, #0
   14e5c:	moveq	r3, r1
   14e60:	beq	14b28 <close_stdout@@Base+0x2f64>
   14e64:	sub	r3, r1, #1
   14e68:	mov	r4, #0
   14e6c:	b	14b28 <close_stdout@@Base+0x2f64>
   14e70:	mov	fp, r3
   14e74:	b	14c04 <close_stdout@@Base+0x3040>
   14e78:	mov	r2, r1
   14e7c:	b	14e2c <close_stdout@@Base+0x3268>
   14e80:	mov	r8, r2
   14e84:	b	14dcc <close_stdout@@Base+0x3208>
   14e88:	mov	r3, r2
   14e8c:	b	14ce8 <close_stdout@@Base+0x3124>
   14e90:	cmp	r3, #0
   14e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e98:	mov	r6, r0
   14e9c:	sub	sp, sp, #12
   14ea0:	mov	r5, r1
   14ea4:	mov	r7, r0
   14ea8:	mov	r4, r2
   14eac:	mov	r8, r1
   14eb0:	bne	14f90 <close_stdout@@Base+0x33cc>
   14eb4:	cmp	r2, r1
   14eb8:	bls	14fcc <close_stdout@@Base+0x3408>
   14ebc:	clz	r3, r2
   14ec0:	cmp	r3, #0
   14ec4:	rsbne	r8, r3, #32
   14ec8:	lslne	r4, r2, r3
   14ecc:	lsrne	r8, r0, r8
   14ed0:	lslne	r7, r0, r3
   14ed4:	orrne	r8, r8, r1, lsl r3
   14ed8:	lsr	r5, r4, #16
   14edc:	uxth	sl, r4
   14ee0:	mov	r1, r5
   14ee4:	mov	r0, r8
   14ee8:	bl	14734 <close_stdout@@Base+0x2b70>
   14eec:	mov	r1, r5
   14ef0:	mov	r9, r0
   14ef4:	mov	r0, r8
   14ef8:	bl	14920 <close_stdout@@Base+0x2d5c>
   14efc:	mul	r0, sl, r9
   14f00:	lsr	r3, r7, #16
   14f04:	orr	r1, r3, r1, lsl #16
   14f08:	cmp	r0, r1
   14f0c:	bls	14f30 <close_stdout@@Base+0x336c>
   14f10:	adds	r1, r1, r4
   14f14:	sub	r2, r9, #1
   14f18:	bcs	14f2c <close_stdout@@Base+0x3368>
   14f1c:	cmp	r0, r1
   14f20:	subhi	r9, r9, #2
   14f24:	addhi	r1, r1, r4
   14f28:	bhi	14f30 <close_stdout@@Base+0x336c>
   14f2c:	mov	r9, r2
   14f30:	rsb	r8, r0, r1
   14f34:	mov	r1, r5
   14f38:	uxth	r7, r7
   14f3c:	mov	r0, r8
   14f40:	bl	14734 <close_stdout@@Base+0x2b70>
   14f44:	mov	r1, r5
   14f48:	mov	r6, r0
   14f4c:	mov	r0, r8
   14f50:	bl	14920 <close_stdout@@Base+0x2d5c>
   14f54:	mul	sl, sl, r6
   14f58:	orr	r1, r7, r1, lsl #16
   14f5c:	cmp	sl, r1
   14f60:	bls	14f7c <close_stdout@@Base+0x33b8>
   14f64:	adds	r4, r1, r4
   14f68:	sub	r3, r6, #1
   14f6c:	bcs	15278 <close_stdout@@Base+0x36b4>
   14f70:	cmp	sl, r4
   14f74:	subhi	r6, r6, #2
   14f78:	bls	15278 <close_stdout@@Base+0x36b4>
   14f7c:	orr	r0, r6, r9, lsl #16
   14f80:	mov	r6, #0
   14f84:	mov	r1, r6
   14f88:	add	sp, sp, #12
   14f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f90:	cmp	r3, r1
   14f94:	movhi	r6, #0
   14f98:	movhi	r0, r6
   14f9c:	bhi	14f84 <close_stdout@@Base+0x33c0>
   14fa0:	clz	r7, r3
   14fa4:	cmp	r7, #0
   14fa8:	bne	150a8 <close_stdout@@Base+0x34e4>
   14fac:	cmp	r3, r1
   14fb0:	cmpcs	r2, r6
   14fb4:	movhi	r6, #0
   14fb8:	movls	r6, #1
   14fbc:	movls	r0, #1
   14fc0:	movls	r6, r7
   14fc4:	movhi	r0, r6
   14fc8:	b	14f84 <close_stdout@@Base+0x33c0>
   14fcc:	cmp	r2, #0
   14fd0:	bne	14fe4 <close_stdout@@Base+0x3420>
   14fd4:	mov	r1, r2
   14fd8:	mov	r0, #1
   14fdc:	bl	14734 <close_stdout@@Base+0x2b70>
   14fe0:	mov	r4, r0
   14fe4:	clz	r3, r4
   14fe8:	cmp	r3, #0
   14fec:	bne	151a4 <close_stdout@@Base+0x35e0>
   14ff0:	rsb	r5, r4, r5
   14ff4:	lsr	r8, r4, #16
   14ff8:	uxth	sl, r4
   14ffc:	mov	r6, #1
   15000:	mov	r1, r8
   15004:	mov	r0, r5
   15008:	bl	14734 <close_stdout@@Base+0x2b70>
   1500c:	mov	r1, r8
   15010:	mov	r9, r0
   15014:	mov	r0, r5
   15018:	bl	14920 <close_stdout@@Base+0x2d5c>
   1501c:	mul	r0, sl, r9
   15020:	lsr	r3, r7, #16
   15024:	orr	r1, r3, r1, lsl #16
   15028:	cmp	r0, r1
   1502c:	bls	1504c <close_stdout@@Base+0x3488>
   15030:	adds	r1, r1, r4
   15034:	sub	r2, r9, #1
   15038:	bcs	15280 <close_stdout@@Base+0x36bc>
   1503c:	cmp	r0, r1
   15040:	subhi	r9, r9, #2
   15044:	addhi	r1, r1, r4
   15048:	bls	15280 <close_stdout@@Base+0x36bc>
   1504c:	rsb	fp, r0, r1
   15050:	mov	r1, r8
   15054:	uxth	r7, r7
   15058:	mov	r0, fp
   1505c:	bl	14734 <close_stdout@@Base+0x2b70>
   15060:	mov	r1, r8
   15064:	mov	r5, r0
   15068:	mov	r0, fp
   1506c:	bl	14920 <close_stdout@@Base+0x2d5c>
   15070:	mul	sl, sl, r5
   15074:	orr	r1, r7, r1, lsl #16
   15078:	cmp	sl, r1
   1507c:	bls	15098 <close_stdout@@Base+0x34d4>
   15080:	adds	r4, r1, r4
   15084:	sub	r3, r5, #1
   15088:	bcs	15288 <close_stdout@@Base+0x36c4>
   1508c:	cmp	sl, r4
   15090:	subhi	r5, r5, #2
   15094:	bls	15288 <close_stdout@@Base+0x36c4>
   15098:	orr	r0, r5, r9, lsl #16
   1509c:	mov	r1, r6
   150a0:	add	sp, sp, #12
   150a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150a8:	rsb	r1, r7, #32
   150ac:	lsl	r0, r2, r7
   150b0:	lsr	r2, r2, r1
   150b4:	lsr	fp, r5, r1
   150b8:	orr	r8, r2, r3, lsl r7
   150bc:	lsr	r1, r6, r1
   150c0:	str	r0, [sp, #4]
   150c4:	orr	r5, r1, r5, lsl r7
   150c8:	lsr	r9, r8, #16
   150cc:	mov	r0, fp
   150d0:	uxth	sl, r8
   150d4:	mov	r1, r9
   150d8:	bl	14734 <close_stdout@@Base+0x2b70>
   150dc:	mov	r1, r9
   150e0:	mov	r4, r0
   150e4:	mov	r0, fp
   150e8:	bl	14920 <close_stdout@@Base+0x2d5c>
   150ec:	mul	r0, sl, r4
   150f0:	lsr	ip, r5, #16
   150f4:	orr	r1, ip, r1, lsl #16
   150f8:	cmp	r0, r1
   150fc:	bls	15110 <close_stdout@@Base+0x354c>
   15100:	adds	r1, r1, r8
   15104:	sub	r2, r4, #1
   15108:	bcc	152a4 <close_stdout@@Base+0x36e0>
   1510c:	mov	r4, r2
   15110:	rsb	ip, r0, r1
   15114:	mov	r1, r9
   15118:	str	ip, [sp]
   1511c:	uxth	r5, r5
   15120:	mov	r0, ip
   15124:	bl	14734 <close_stdout@@Base+0x2b70>
   15128:	ldr	ip, [sp]
   1512c:	mov	r1, r9
   15130:	mov	fp, r0
   15134:	mov	r0, ip
   15138:	bl	14920 <close_stdout@@Base+0x2d5c>
   1513c:	mul	sl, sl, fp
   15140:	orr	r1, r5, r1, lsl #16
   15144:	cmp	sl, r1
   15148:	bls	1515c <close_stdout@@Base+0x3598>
   1514c:	adds	r1, r1, r8
   15150:	sub	r2, fp, #1
   15154:	bcc	15290 <close_stdout@@Base+0x36cc>
   15158:	mov	fp, r2
   1515c:	ldr	r3, [sp, #4]
   15160:	orr	r0, fp, r4, lsl #16
   15164:	rsb	sl, sl, r1
   15168:	umull	r4, r5, r0, r3
   1516c:	cmp	sl, r5
   15170:	bcc	15190 <close_stdout@@Base+0x35cc>
   15174:	movne	r3, #0
   15178:	moveq	r3, #1
   1517c:	cmp	r4, r6, lsl r7
   15180:	movls	r6, #0
   15184:	andhi	r6, r3, #1
   15188:	cmp	r6, #0
   1518c:	beq	14f84 <close_stdout@@Base+0x33c0>
   15190:	mov	r6, #0
   15194:	sub	r0, r0, #1
   15198:	mov	r1, r6
   1519c:	add	sp, sp, #12
   151a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151a4:	lsl	r4, r4, r3
   151a8:	rsb	r9, r3, #32
   151ac:	lsr	r2, r5, r9
   151b0:	lsr	r9, r6, r9
   151b4:	lsr	r8, r4, #16
   151b8:	orr	r9, r9, r5, lsl r3
   151bc:	mov	r0, r2
   151c0:	lsl	r7, r6, r3
   151c4:	mov	r1, r8
   151c8:	str	r2, [sp]
   151cc:	bl	14734 <close_stdout@@Base+0x2b70>
   151d0:	ldr	r2, [sp]
   151d4:	mov	r1, r8
   151d8:	uxth	sl, r4
   151dc:	mov	fp, r0
   151e0:	mov	r0, r2
   151e4:	bl	14920 <close_stdout@@Base+0x2d5c>
   151e8:	mul	r0, sl, fp
   151ec:	lsr	r3, r9, #16
   151f0:	orr	r1, r3, r1, lsl #16
   151f4:	cmp	r0, r1
   151f8:	bls	15218 <close_stdout@@Base+0x3654>
   151fc:	adds	r1, r1, r4
   15200:	sub	r3, fp, #1
   15204:	bcs	152b8 <close_stdout@@Base+0x36f4>
   15208:	cmp	r0, r1
   1520c:	subhi	fp, fp, #2
   15210:	addhi	r1, r1, r4
   15214:	bls	152b8 <close_stdout@@Base+0x36f4>
   15218:	rsb	r5, r0, r1
   1521c:	mov	r1, r8
   15220:	uxth	r9, r9
   15224:	mov	r0, r5
   15228:	bl	14734 <close_stdout@@Base+0x2b70>
   1522c:	mov	r1, r8
   15230:	mov	r6, r0
   15234:	mov	r0, r5
   15238:	bl	14920 <close_stdout@@Base+0x2d5c>
   1523c:	mul	r5, sl, r6
   15240:	orr	r1, r9, r1, lsl #16
   15244:	cmp	r5, r1
   15248:	bls	1526c <close_stdout@@Base+0x36a8>
   1524c:	adds	r1, r1, r4
   15250:	sub	r3, r6, #1
   15254:	bcs	15268 <close_stdout@@Base+0x36a4>
   15258:	cmp	r5, r1
   1525c:	subhi	r6, r6, #2
   15260:	addhi	r1, r1, r4
   15264:	bhi	1526c <close_stdout@@Base+0x36a8>
   15268:	mov	r6, r3
   1526c:	rsb	r5, r5, r1
   15270:	orr	r6, r6, fp, lsl #16
   15274:	b	15000 <close_stdout@@Base+0x343c>
   15278:	mov	r6, r3
   1527c:	b	14f7c <close_stdout@@Base+0x33b8>
   15280:	mov	r9, r2
   15284:	b	1504c <close_stdout@@Base+0x3488>
   15288:	mov	r5, r3
   1528c:	b	15098 <close_stdout@@Base+0x34d4>
   15290:	cmp	sl, r1
   15294:	subhi	fp, fp, #2
   15298:	addhi	r1, r1, r8
   1529c:	bhi	1515c <close_stdout@@Base+0x3598>
   152a0:	b	15158 <close_stdout@@Base+0x3594>
   152a4:	cmp	r0, r1
   152a8:	subhi	r4, r4, #2
   152ac:	addhi	r1, r1, r8
   152b0:	bhi	15110 <close_stdout@@Base+0x354c>
   152b4:	b	1510c <close_stdout@@Base+0x3548>
   152b8:	mov	fp, r3
   152bc:	b	15218 <close_stdout@@Base+0x3654>
   152c0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   152c4:	mov	r7, r0
   152c8:	ldr	r6, [pc, #76]	; 1531c <close_stdout@@Base+0x3758>
   152cc:	mov	r8, r1
   152d0:	ldr	r5, [pc, #72]	; 15320 <close_stdout@@Base+0x375c>
   152d4:	mov	r9, r2
   152d8:	add	r6, pc, r6
   152dc:	bl	10f58 <fdopen@plt-0x20>
   152e0:	add	r5, pc, r5
   152e4:	rsb	r6, r5, r6
   152e8:	asrs	r6, r6, #2
   152ec:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   152f0:	sub	r5, r5, #4
   152f4:	mov	r4, #0
   152f8:	add	r4, r4, #1
   152fc:	ldr	r3, [r5, #4]!
   15300:	mov	r0, r7
   15304:	mov	r1, r8
   15308:	mov	r2, r9
   1530c:	blx	r3
   15310:	cmp	r4, r6
   15314:	bne	152f8 <close_stdout@@Base+0x3734>
   15318:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1531c:	andeq	r0, r1, ip, asr #23
   15320:	andeq	r0, r1, r0, asr #23
   15324:	bx	lr
   15328:	ldr	r3, [pc, #28]	; 1534c <close_stdout@@Base+0x3788>
   1532c:	mov	r1, #0
   15330:	ldr	r2, [pc, #24]	; 15350 <close_stdout@@Base+0x378c>
   15334:	add	r3, pc, r3
   15338:	ldr	r3, [r3, r2]
   1533c:	cmp	r3, #0
   15340:	ldrne	r2, [r3]
   15344:	moveq	r2, r3
   15348:	b	1114c <__cxa_atexit@plt>
   1534c:	andeq	r0, r1, r4, asr #25
   15350:	andeq	r0, r0, r8, lsl r1

Disassembly of section .fini:

00015354 <.fini>:
   15354:	push	{r3, lr}
   15358:	pop	{r3, pc}
