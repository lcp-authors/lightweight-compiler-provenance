
centos-preinstalled/dfu-tool:     file format elf32-littlearm


Disassembly of section .init:

000037d8 <_init@@Base>:
    37d8:	push	{r3, lr}
    37dc:	bl	553c <main@@Base+0x1104>
    37e0:	pop	{r3, pc}

Disassembly of section .plt:

000037e4 <g_string_set_size@plt-0x14>:
    37e4:	push	{lr}		; (str lr, [sp, #-4]!)
    37e8:	ldr	lr, [pc, #4]	; 37f4 <_init@@Base+0x1c>
    37ec:	add	lr, pc, lr
    37f0:	ldr	pc, [lr, #8]!
    37f4:	muleq	r3, r4, r3

000037f8 <g_string_set_size@plt>:
    37f8:	add	ip, pc, #0, 12
    37fc:	add	ip, ip, #241664	; 0x3b000
    3800:	ldr	pc, [ip, #916]!	; 0x394

00003804 <g_object_new@plt>:
    3804:	add	ip, pc, #0, 12
    3808:	add	ip, ip, #241664	; 0x3b000
    380c:	ldr	pc, [ip, #908]!	; 0x38c

00003810 <g_object_add_weak_pointer@plt>:
    3810:	add	ip, pc, #0, 12
    3814:	add	ip, ip, #241664	; 0x3b000
    3818:	ldr	pc, [ip, #900]!	; 0x384

0000381c <g_object_ref@plt>:
    381c:	add	ip, pc, #0, 12
    3820:	add	ip, ip, #241664	; 0x3b000
    3824:	ldr	pc, [ip, #892]!	; 0x37c

00003828 <as_utils_string_replace@plt>:
    3828:	add	ip, pc, #0, 12
    382c:	add	ip, ip, #241664	; 0x3b000
    3830:	ldr	pc, [ip, #884]!	; 0x374

00003834 <fnmatch@plt>:
    3834:	add	ip, pc, #0, 12
    3838:	add	ip, ip, #241664	; 0x3b000
    383c:	ldr	pc, [ip, #876]!	; 0x36c

00003840 <g_option_context_parse@plt>:
    3840:	add	ip, pc, #0, 12
    3844:	add	ip, ip, #241664	; 0x3b000
    3848:	ldr	pc, [ip, #868]!	; 0x364

0000384c <archive_entry_pathname@plt>:
    384c:	add	ip, pc, #0, 12
    3850:	add	ip, ip, #241664	; 0x3b000
    3854:	ldr	pc, [ip, #860]!	; 0x35c

00003858 <g_unix_input_stream_new@plt>:
    3858:	add	ip, pc, #0, 12
    385c:	add	ip, ip, #241664	; 0x3b000
    3860:	ldr	pc, [ip, #852]!	; 0x354

00003864 <__memcpy_chk@plt>:
    3864:	add	ip, pc, #0, 12
    3868:	add	ip, ip, #241664	; 0x3b000
    386c:	ldr	pc, [ip, #844]!	; 0x34c

00003870 <g_return_if_fail_warning@plt>:
    3870:	add	ip, pc, #0, 12
    3874:	add	ip, ip, #241664	; 0x3b000
    3878:	ldr	pc, [ip, #836]!	; 0x344

0000387c <g_mkdir_with_parents@plt>:
    387c:	add	ip, pc, #0, 12
    3880:	add	ip, ip, #241664	; 0x3b000
    3884:	ldr	pc, [ip, #828]!	; 0x33c

00003888 <g_io_error_quark@plt>:
    3888:	add	ip, pc, #0, 12
    388c:	add	ip, ip, #241664	; 0x3b000
    3890:	ldr	pc, [ip, #820]!	; 0x334

00003894 <g_type_register_static_simple@plt>:
    3894:	add	ip, pc, #0, 12
    3898:	add	ip, ip, #241664	; 0x3b000
    389c:	ldr	pc, [ip, #812]!	; 0x32c

000038a0 <archive_entry_update_pathname_utf8@plt>:
    38a0:	add	ip, pc, #0, 12
    38a4:	add	ip, ip, #241664	; 0x3b000
    38a8:	ldr	pc, [ip, #804]!	; 0x324

000038ac <g_value_get_string@plt>:
    38ac:	add	ip, pc, #0, 12
    38b0:	add	ip, ip, #241664	; 0x3b000
    38b4:	ldr	pc, [ip, #796]!	; 0x31c

000038b8 <g_type_class_adjust_private_offset@plt>:
    38b8:	add	ip, pc, #0, 12
    38bc:	add	ip, ip, #241664	; 0x3b000
    38c0:	ldr	pc, [ip, #788]!	; 0x314

000038c4 <g_timeout_add@plt>:
    38c4:	add	ip, pc, #0, 12
    38c8:	add	ip, ip, #241664	; 0x3b000
    38cc:	ldr	pc, [ip, #780]!	; 0x30c

000038d0 <g_pollable_input_stream_create_source@plt>:
    38d0:	add	ip, pc, #0, 12
    38d4:	add	ip, ip, #241664	; 0x3b000
    38d8:	ldr	pc, [ip, #772]!	; 0x304

000038dc <g_setenv@plt>:
    38dc:	add	ip, pc, #0, 12
    38e0:	add	ip, ip, #241664	; 0x3b000
    38e4:	ldr	pc, [ip, #764]!	; 0x2fc

000038e8 <g_error_free@plt>:
    38e8:	add	ip, pc, #0, 12
    38ec:	add	ip, ip, #241664	; 0x3b000
    38f0:	ldr	pc, [ip, #756]!	; 0x2f4

000038f4 <g_usb_context_find_by_vid_pid@plt>:
    38f4:	add	ip, pc, #0, 12
    38f8:	add	ip, ip, #241664	; 0x3b000
    38fc:	ldr	pc, [ip, #748]!	; 0x2ec

00003900 <g_strndup@plt>:
    3900:	add	ip, pc, #0, 12
    3904:	add	ip, ip, #241664	; 0x3b000
    3908:	ldr	pc, [ip, #740]!	; 0x2e4

0000390c <g_bytes_new@plt>:
    390c:	add	ip, pc, #0, 12
    3910:	add	ip, ip, #241664	; 0x3b000
    3914:	ldr	pc, [ip, #732]!	; 0x2dc

00003918 <g_key_file_load_from_file@plt>:
    3918:	add	ip, pc, #0, 12
    391c:	add	ip, ip, #241664	; 0x3b000
    3920:	ldr	pc, [ip, #724]!	; 0x2d4

00003924 <as_utils_guid_is_valid@plt>:
    3924:	add	ip, pc, #0, 12
    3928:	add	ip, ip, #241664	; 0x3b000
    392c:	ldr	pc, [ip, #716]!	; 0x2cc

00003930 <bind_textdomain_codeset@plt>:
    3930:	add	ip, pc, #0, 12
    3934:	add	ip, ip, #241664	; 0x3b000
    3938:	ldr	pc, [ip, #708]!	; 0x2c4

0000393c <g_file_replace_contents@plt>:
    393c:	add	ip, pc, #0, 12
    3940:	add	ip, ip, #241664	; 0x3b000
    3944:	ldr	pc, [ip, #700]!	; 0x2bc

00003948 <g_propagate_error@plt>:
    3948:	add	ip, pc, #0, 12
    394c:	add	ip, ip, #241664	; 0x3b000
    3950:	ldr	pc, [ip, #692]!	; 0x2b4

00003954 <g_param_spec_string@plt>:
    3954:	add	ip, pc, #0, 12
    3958:	add	ip, ip, #241664	; 0x3b000
    395c:	ldr	pc, [ip, #684]!	; 0x2ac

00003960 <g_string_truncate@plt>:
    3960:	add	ip, pc, #0, 12
    3964:	add	ip, ip, #241664	; 0x3b000
    3968:	ldr	pc, [ip, #676]!	; 0x2a4

0000396c <g_strdelimit@plt>:
    396c:	add	ip, pc, #0, 12
    3970:	add	ip, ip, #241664	; 0x3b000
    3974:	ldr	pc, [ip, #668]!	; 0x29c

00003978 <g_timer_elapsed@plt>:
    3978:	add	ip, pc, #0, 12
    397c:	add	ip, ip, #241664	; 0x3b000
    3980:	ldr	pc, [ip, #660]!	; 0x294

00003984 <__gcc_personality_v0@plt>:
    3984:	add	ip, pc, #0, 12
    3988:	add	ip, ip, #241664	; 0x3b000
    398c:	ldr	pc, [ip, #652]!	; 0x28c

00003990 <g_string_new@plt>:
    3990:	add	ip, pc, #0, 12
    3994:	add	ip, ip, #241664	; 0x3b000
    3998:	ldr	pc, [ip, #644]!	; 0x284

0000399c <g_input_stream_read_bytes@plt>:
    399c:	add	ip, pc, #0, 12
    39a0:	add	ip, ip, #241664	; 0x3b000
    39a4:	ldr	pc, [ip, #636]!	; 0x27c

000039a8 <strncmp@plt>:
    39a8:	add	ip, pc, #0, 12
    39ac:	add	ip, ip, #241664	; 0x3b000
    39b0:	ldr	pc, [ip, #628]!	; 0x274

000039b4 <g_subprocess_wait_check@plt>:
    39b4:	add	ip, pc, #0, 12
    39b8:	add	ip, ip, #241664	; 0x3b000
    39bc:	ldr	pc, [ip, #620]!	; 0x26c

000039c0 <g_usb_device_control_transfer@plt>:
    39c0:	add	ip, pc, #0, 12
    39c4:	add	ip, ip, #241664	; 0x3b000
    39c8:	ldr	pc, [ip, #612]!	; 0x264

000039cc <g_timer_destroy@plt>:
    39cc:	add	ip, pc, #0, 12
    39d0:	add	ip, ip, #241664	; 0x3b000
    39d4:	ldr	pc, [ip, #604]!	; 0x25c

000039d8 <g_type_check_instance_cast@plt>:
    39d8:	add	ip, pc, #0, 12
    39dc:	add	ip, ip, #241664	; 0x3b000
    39e0:	ldr	pc, [ip, #596]!	; 0x254

000039e4 <as_profile_start@plt>:
    39e4:	add	ip, pc, #0, 12
    39e8:	add	ip, ip, #241664	; 0x3b000
    39ec:	ldr	pc, [ip, #588]!	; 0x24c

000039f0 <g_usleep@plt>:
    39f0:	add	ip, pc, #0, 12
    39f4:	add	ip, ip, #241664	; 0x3b000
    39f8:	ldr	pc, [ip, #580]!	; 0x244

000039fc <g_option_context_new@plt>:
    39fc:	add	ip, pc, #0, 12
    3a00:	add	ip, ip, #241664	; 0x3b000
    3a04:	ldr	pc, [ip, #572]!	; 0x23c

00003a08 <fwupd_device_set_vendor@plt>:
    3a08:	add	ip, pc, #0, 12
    3a0c:	add	ip, ip, #241664	; 0x3b000
    3a10:	ldr	pc, [ip, #564]!	; 0x234

00003a14 <fwupd_device_get_guids@plt>:
    3a14:	add	ip, pc, #0, 12
    3a18:	add	ip, ip, #241664	; 0x3b000
    3a1c:	ldr	pc, [ip, #556]!	; 0x22c

00003a20 <g_usb_device_set_interface_alt@plt>:
    3a20:	add	ip, pc, #0, 12
    3a24:	add	ip, ip, #241664	; 0x3b000
    3a28:	ldr	pc, [ip, #548]!	; 0x224

00003a2c <g_list_length@plt>:
    3a2c:	add	ip, pc, #0, 12
    3a30:	add	ip, ip, #241664	; 0x3b000
    3a34:	ldr	pc, [ip, #540]!	; 0x21c

00003a38 <g_log@plt>:
    3a38:	add	ip, pc, #0, 12
    3a3c:	add	ip, ip, #241664	; 0x3b000
    3a40:	ldr	pc, [ip, #532]!	; 0x214

00003a44 <g_option_context_set_summary@plt>:
    3a44:	add	ip, pc, #0, 12
    3a48:	add	ip, ip, #241664	; 0x3b000
    3a4c:	ldr	pc, [ip, #524]!	; 0x20c

00003a50 <g_type_name@plt>:
    3a50:	add	ip, pc, #0, 12
    3a54:	add	ip, ip, #241664	; 0x3b000
    3a58:	ldr	pc, [ip, #516]!	; 0x204

00003a5c <g_main_loop_quit@plt>:
    3a5c:	add	ip, pc, #0, 12
    3a60:	add	ip, ip, #241664	; 0x3b000
    3a64:	ldr	pc, [ip, #508]!	; 0x1fc

00003a68 <g_cancellable_cancel@plt>:
    3a68:	add	ip, pc, #0, 12
    3a6c:	add	ip, ip, #241664	; 0x3b000
    3a70:	ldr	pc, [ip, #500]!	; 0x1f4

00003a74 <g_dir_make_tmp@plt>:
    3a74:	add	ip, pc, #0, 12
    3a78:	add	ip, ip, #241664	; 0x3b000
    3a7c:	ldr	pc, [ip, #492]!	; 0x1ec

00003a80 <g_build_filename@plt>:
    3a80:	add	ip, pc, #0, 12
    3a84:	add	ip, ip, #241664	; 0x3b000
    3a88:	ldr	pc, [ip, #484]!	; 0x1e4

00003a8c <archive_read_support_filter_all@plt>:
    3a8c:	add	ip, pc, #0, 12
    3a90:	add	ip, ip, #241664	; 0x3b000
    3a94:	ldr	pc, [ip, #476]!	; 0x1dc

00003a98 <g_bytes_new_take@plt>:
    3a98:	add	ip, pc, #0, 12
    3a9c:	add	ip, ip, #241664	; 0x3b000
    3aa0:	ldr	pc, [ip, #468]!	; 0x1d4

00003aa4 <g_hash_table_remove_all@plt>:
    3aa4:	add	ip, pc, #0, 12
    3aa8:	add	ip, ip, #241664	; 0x3b000
    3aac:	ldr	pc, [ip, #460]!	; 0x1cc

00003ab0 <g_value_set_uint@plt>:
    3ab0:	add	ip, pc, #0, 12
    3ab4:	add	ip, ip, #241664	; 0x3b000
    3ab8:	ldr	pc, [ip, #452]!	; 0x1c4

00003abc <g_usb_device_get_pid@plt>:
    3abc:	add	ip, pc, #0, 12
    3ac0:	add	ip, ip, #241664	; 0x3b000
    3ac4:	ldr	pc, [ip, #444]!	; 0x1bc

00003ac8 <fwupd_device_has_flag@plt>:
    3ac8:	add	ip, pc, #0, 12
    3acc:	add	ip, ip, #241664	; 0x3b000
    3ad0:	ldr	pc, [ip, #436]!	; 0x1b4

00003ad4 <g_file_get_path@plt>:
    3ad4:	add	ip, pc, #0, 12
    3ad8:	add	ip, ip, #241664	; 0x3b000
    3adc:	ldr	pc, [ip, #428]!	; 0x1ac

00003ae0 <g_set_error_literal@plt>:
    3ae0:	add	ip, pc, #0, 12
    3ae4:	add	ip, ip, #241664	; 0x3b000
    3ae8:	ldr	pc, [ip, #420]!	; 0x1a4

00003aec <fwupd_device_get_id@plt>:
    3aec:	add	ip, pc, #0, 12
    3af0:	add	ip, ip, #241664	; 0x3b000
    3af4:	ldr	pc, [ip, #412]!	; 0x19c

00003af8 <archive_read_free@plt>:
    3af8:	add	ip, pc, #0, 12
    3afc:	add	ip, ip, #241664	; 0x3b000
    3b00:	ldr	pc, [ip, #404]!	; 0x194

00003b04 <g_hash_table_get_keys@plt>:
    3b04:	add	ip, pc, #0, 12
    3b08:	add	ip, ip, #241664	; 0x3b000
    3b0c:	ldr	pc, [ip, #396]!	; 0x18c

00003b10 <g_list_free@plt>:
    3b10:	add	ip, pc, #0, 12
    3b14:	add	ip, ip, #241664	; 0x3b000
    3b18:	ldr	pc, [ip, #388]!	; 0x184

00003b1c <g_usb_device_get_product_index@plt>:
    3b1c:	add	ip, pc, #0, 12
    3b20:	add	ip, ip, #241664	; 0x3b000
    3b24:	ldr	pc, [ip, #380]!	; 0x17c

00003b28 <g_checksum_free@plt>:
    3b28:	add	ip, pc, #0, 12
    3b2c:	add	ip, ip, #241664	; 0x3b000
    3b30:	ldr	pc, [ip, #372]!	; 0x174

00003b34 <textdomain@plt>:
    3b34:	add	ip, pc, #0, 12
    3b38:	add	ip, ip, #241664	; 0x3b000
    3b3c:	ldr	pc, [ip, #364]!	; 0x16c

00003b40 <g_bytes_new_from_bytes@plt>:
    3b40:	add	ip, pc, #0, 12
    3b44:	add	ip, ip, #241664	; 0x3b000
    3b48:	ldr	pc, [ip, #356]!	; 0x164

00003b4c <fwupd_device_to_string@plt>:
    3b4c:	add	ip, pc, #0, 12
    3b50:	add	ip, ip, #241664	; 0x3b000
    3b54:	ldr	pc, [ip, #348]!	; 0x15c

00003b58 <g_hash_table_new_full@plt>:
    3b58:	add	ip, pc, #0, 12
    3b5c:	add	ip, ip, #241664	; 0x3b000
    3b60:	ldr	pc, [ip, #340]!	; 0x154

00003b64 <g_error_copy@plt>:
    3b64:	add	ip, pc, #0, 12
    3b68:	add	ip, ip, #241664	; 0x3b000
    3b6c:	ldr	pc, [ip, #332]!	; 0x14c

00003b70 <g_signal_emit@plt>:
    3b70:	add	ip, pc, #0, 12
    3b74:	add	ip, ip, #241664	; 0x3b000
    3b78:	ldr	pc, [ip, #324]!	; 0x144

00003b7c <g_strdup@plt>:
    3b7c:	add	ip, pc, #0, 12
    3b80:	add	ip, ip, #241664	; 0x3b000
    3b84:	ldr	pc, [ip, #316]!	; 0x13c

00003b88 <fwupd_device_add_guid@plt>:
    3b88:	add	ip, pc, #0, 12
    3b8c:	add	ip, ip, #241664	; 0x3b000
    3b90:	ldr	pc, [ip, #308]!	; 0x134

00003b94 <g_object_remove_weak_pointer@plt>:
    3b94:	add	ip, pc, #0, 12
    3b98:	add	ip, ip, #241664	; 0x3b000
    3b9c:	ldr	pc, [ip, #300]!	; 0x12c

00003ba0 <g_value_get_object@plt>:
    3ba0:	add	ip, pc, #0, 12
    3ba4:	add	ip, ip, #241664	; 0x3b000
    3ba8:	ldr	pc, [ip, #292]!	; 0x124

00003bac <g_file_query_exists@plt>:
    3bac:	add	ip, pc, #0, 12
    3bb0:	add	ip, ip, #241664	; 0x3b000
    3bb4:	ldr	pc, [ip, #284]!	; 0x11c

00003bb8 <g_hash_table_insert@plt>:
    3bb8:	add	ip, pc, #0, 12
    3bbc:	add	ip, ip, #241664	; 0x3b000
    3bc0:	ldr	pc, [ip, #276]!	; 0x114

00003bc4 <g_strchomp@plt>:
    3bc4:	add	ip, pc, #0, 12
    3bc8:	add	ip, ip, #241664	; 0x3b000
    3bcc:	ldr	pc, [ip, #268]!	; 0x10c

00003bd0 <memset@plt>:
    3bd0:	add	ip, pc, #0, 12
    3bd4:	add	ip, ip, #241664	; 0x3b000
    3bd8:	ldr	pc, [ip, #260]!	; 0x104

00003bdc <remove@plt>:
    3bdc:	add	ip, pc, #0, 12
    3be0:	add	ip, ip, #241664	; 0x3b000
    3be4:	ldr	pc, [ip, #252]!	; 0xfc

00003be8 <g_key_file_get_value@plt>:
    3be8:	add	ip, pc, #0, 12
    3bec:	add	ip, ip, #241664	; 0x3b000
    3bf0:	ldr	pc, [ip, #244]!	; 0xf4

00003bf4 <g_usb_device_get_serial_number_index@plt>:
    3bf4:	add	ip, pc, #0, 12
    3bf8:	add	ip, ip, #241664	; 0x3b000
    3bfc:	ldr	pc, [ip, #236]!	; 0xec

00003c00 <g_pollable_input_stream_read_nonblocking@plt>:
    3c00:	add	ip, pc, #0, 12
    3c04:	add	ip, ip, #241664	; 0x3b000
    3c08:	ldr	pc, [ip, #228]!	; 0xe4

00003c0c <g_ptr_array_new_with_free_func@plt>:
    3c0c:	add	ip, pc, #0, 12
    3c10:	add	ip, ip, #241664	; 0x3b000
    3c14:	ldr	pc, [ip, #220]!	; 0xdc

00003c18 <g_strdup_printf@plt>:
    3c18:	add	ip, pc, #0, 12
    3c1c:	add	ip, ip, #241664	; 0x3b000
    3c20:	ldr	pc, [ip, #212]!	; 0xd4

00003c24 <fwupd_status_to_string@plt>:
    3c24:	add	ip, pc, #0, 12
    3c28:	add	ip, ip, #241664	; 0x3b000
    3c2c:	ldr	pc, [ip, #204]!	; 0xcc

00003c30 <g_checksum_update@plt>:
    3c30:	add	ip, pc, #0, 12
    3c34:	add	ip, ip, #241664	; 0x3b000
    3c38:	ldr	pc, [ip, #196]!	; 0xc4

00003c3c <g_usb_device_get_release@plt>:
    3c3c:	add	ip, pc, #0, 12
    3c40:	add	ip, ip, #241664	; 0x3b000
    3c44:	ldr	pc, [ip, #188]!	; 0xbc

00003c48 <g_main_loop_run@plt>:
    3c48:	add	ip, pc, #0, 12
    3c4c:	add	ip, ip, #241664	; 0x3b000
    3c50:	ldr	pc, [ip, #180]!	; 0xb4

00003c54 <g_malloc@plt>:
    3c54:	add	ip, pc, #0, 12
    3c58:	add	ip, ip, #241664	; 0x3b000
    3c5c:	ldr	pc, [ip, #172]!	; 0xac

00003c60 <as_utils_version_from_uint16@plt>:
    3c60:	add	ip, pc, #0, 12
    3c64:	add	ip, ip, #241664	; 0x3b000
    3c68:	ldr	pc, [ip, #164]!	; 0xa4

00003c6c <g_signal_new@plt>:
    3c6c:	add	ip, pc, #0, 12
    3c70:	add	ip, ip, #241664	; 0x3b000
    3c74:	ldr	pc, [ip, #156]!	; 0x9c

00003c78 <archive_error_string@plt>:
    3c78:	add	ip, pc, #0, 12
    3c7c:	add	ip, ip, #241664	; 0x3b000
    3c80:	ldr	pc, [ip, #148]!	; 0x94

00003c84 <g_main_loop_new@plt>:
    3c84:	add	ip, pc, #0, 12
    3c88:	add	ip, ip, #241664	; 0x3b000
    3c8c:	ldr	pc, [ip, #140]!	; 0x8c

00003c90 <abort@plt>:
    3c90:	add	ip, pc, #0, 12
    3c94:	add	ip, ip, #241664	; 0x3b000
    3c98:	ldr	pc, [ip, #132]!	; 0x84

00003c9c <g_file_set_contents@plt>:
    3c9c:	add	ip, pc, #0, 12
    3ca0:	add	ip, ip, #241664	; 0x3b000
    3ca4:	ldr	pc, [ip, #124]!	; 0x7c

00003ca8 <g_dir_close@plt>:
    3ca8:	add	ip, pc, #0, 12
    3cac:	add	ip, ip, #241664	; 0x3b000
    3cb0:	ldr	pc, [ip, #116]!	; 0x74

00003cb4 <g_strsplit@plt>:
    3cb4:	add	ip, pc, #0, 12
    3cb8:	add	ip, ip, #241664	; 0x3b000
    3cbc:	ldr	pc, [ip, #108]!	; 0x6c

00003cc0 <g_error_new@plt>:
    3cc0:	add	ip, pc, #0, 12
    3cc4:	add	ip, ip, #241664	; 0x3b000
    3cc8:	ldr	pc, [ip, #100]!	; 0x64

00003ccc <g_usb_context_enumerate@plt>:
    3ccc:	add	ip, pc, #0, 12
    3cd0:	add	ip, ip, #241664	; 0x3b000
    3cd4:	ldr	pc, [ip, #92]!	; 0x5c

00003cd8 <g_usb_context_new@plt>:
    3cd8:	add	ip, pc, #0, 12
    3cdc:	add	ip, ip, #241664	; 0x3b000
    3ce0:	ldr	pc, [ip, #84]!	; 0x54

00003ce4 <g_usb_device_error_quark@plt>:
    3ce4:	add	ip, pc, #0, 12
    3ce8:	add	ip, ip, #241664	; 0x3b000
    3cec:	ldr	pc, [ip, #76]!	; 0x4c

00003cf0 <g_value_set_string@plt>:
    3cf0:	add	ip, pc, #0, 12
    3cf4:	add	ip, ip, #241664	; 0x3b000
    3cf8:	ldr	pc, [ip, #68]!	; 0x44

00003cfc <g_string_insert_c@plt>:
    3cfc:	add	ip, pc, #0, 12
    3d00:	add	ip, ip, #241664	; 0x3b000
    3d04:	ldr	pc, [ip, #60]!	; 0x3c

00003d08 <g_key_file_get_groups@plt>:
    3d08:	add	ip, pc, #0, 12
    3d0c:	add	ip, ip, #241664	; 0x3b000
    3d10:	ldr	pc, [ip, #52]!	; 0x34

00003d14 <g_str_has_prefix@plt>:
    3d14:	add	ip, pc, #0, 12
    3d18:	add	ip, ip, #241664	; 0x3b000
    3d1c:	ldr	pc, [ip, #44]!	; 0x2c

00003d20 <fwupd_device_set_parent_id@plt>:
    3d20:	add	ip, pc, #0, 12
    3d24:	add	ip, ip, #241664	; 0x3b000
    3d28:	ldr	pc, [ip, #36]!	; 0x24

00003d2c <g_cancellable_new@plt>:
    3d2c:	add	ip, pc, #0, 12
    3d30:	add	ip, ip, #241664	; 0x3b000
    3d34:	ldr	pc, [ip, #28]!

00003d38 <g_signal_connect_data@plt>:
    3d38:	add	ip, pc, #0, 12
    3d3c:	add	ip, ip, #241664	; 0x3b000
    3d40:	ldr	pc, [ip, #20]!

00003d44 <g_usb_device_reset@plt>:
    3d44:	add	ip, pc, #0, 12
    3d48:	add	ip, ip, #241664	; 0x3b000
    3d4c:	ldr	pc, [ip, #12]!

00003d50 <g_once_init_enter@plt>:
    3d50:	add	ip, pc, #0, 12
    3d54:	add	ip, ip, #241664	; 0x3b000
    3d58:	ldr	pc, [ip, #4]!

00003d5c <g_strerror@plt>:
    3d5c:	add	ip, pc, #0, 12
    3d60:	add	ip, ip, #237568	; 0x3a000
    3d64:	ldr	pc, [ip, #4092]!	; 0xffc

00003d68 <g_error_matches@plt>:
    3d68:	add	ip, pc, #0, 12
    3d6c:	add	ip, ip, #237568	; 0x3a000
    3d70:	ldr	pc, [ip, #4084]!	; 0xff4

00003d74 <g_source_attach@plt>:
    3d74:	add	ip, pc, #0, 12
    3d78:	add	ip, ip, #237568	; 0x3a000
    3d7c:	ldr	pc, [ip, #4076]!	; 0xfec

00003d80 <fwupd_device_set_version@plt>:
    3d80:	add	ip, pc, #0, 12
    3d84:	add	ip, ip, #237568	; 0x3a000
    3d88:	ldr	pc, [ip, #4068]!	; 0xfe4

00003d8c <g_signal_handler_disconnect@plt>:
    3d8c:	add	ip, pc, #0, 12
    3d90:	add	ip, ip, #237568	; 0x3a000
    3d94:	ldr	pc, [ip, #4060]!	; 0xfdc

00003d98 <g_file_monitor@plt>:
    3d98:	add	ip, pc, #0, 12
    3d9c:	add	ip, ip, #237568	; 0x3a000
    3da0:	ldr	pc, [ip, #4052]!	; 0xfd4

00003da4 <ceil@plt>:
    3da4:	add	ip, pc, #0, 12
    3da8:	add	ip, ip, #237568	; 0x3a000
    3dac:	ldr	pc, [ip, #4044]!	; 0xfcc

00003db0 <g_hash_table_lookup@plt>:
    3db0:	add	ip, pc, #0, 12
    3db4:	add	ip, ip, #237568	; 0x3a000
    3db8:	ldr	pc, [ip, #4036]!	; 0xfc4

00003dbc <g_usb_interface_get_alternate@plt>:
    3dbc:	add	ip, pc, #0, 12
    3dc0:	add	ip, ip, #237568	; 0x3a000
    3dc4:	ldr	pc, [ip, #4028]!	; 0xfbc

00003dc8 <g_usb_context_wait_for_replug@plt>:
    3dc8:	add	ip, pc, #0, 12
    3dcc:	add	ip, ip, #237568	; 0x3a000
    3dd0:	ldr	pc, [ip, #4020]!	; 0xfb4

00003dd4 <g_compute_checksum_for_string@plt>:
    3dd4:	add	ip, pc, #0, 12
    3dd8:	add	ip, ip, #237568	; 0x3a000
    3ddc:	ldr	pc, [ip, #4012]!	; 0xfac

00003de0 <g_usb_interface_get_class@plt>:
    3de0:	add	ip, pc, #0, 12
    3de4:	add	ip, ip, #237568	; 0x3a000
    3de8:	ldr	pc, [ip, #4004]!	; 0xfa4

00003dec <g_ptr_array_set_size@plt>:
    3dec:	add	ip, pc, #0, 12
    3df0:	add	ip, ip, #237568	; 0x3a000
    3df4:	ldr	pc, [ip, #3996]!	; 0xf9c

00003df8 <g_intern_static_string@plt>:
    3df8:	add	ip, pc, #0, 12
    3dfc:	add	ip, ip, #237568	; 0x3a000
    3e00:	ldr	pc, [ip, #3988]!	; 0xf94

00003e04 <g_strstr_len@plt>:
    3e04:	add	ip, pc, #0, 12
    3e08:	add	ip, ip, #237568	; 0x3a000
    3e0c:	ldr	pc, [ip, #3980]!	; 0xf8c

00003e10 <g_file_get_contents@plt>:
    3e10:	add	ip, pc, #0, 12
    3e14:	add	ip, ip, #237568	; 0x3a000
    3e18:	ldr	pc, [ip, #3972]!	; 0xf84

00003e1c <g_strfreev@plt>:
    3e1c:	add	ip, pc, #0, 12
    3e20:	add	ip, ip, #237568	; 0x3a000
    3e24:	ldr	pc, [ip, #3964]!	; 0xf7c

00003e28 <g_file_load_contents@plt>:
    3e28:	add	ip, pc, #0, 12
    3e2c:	add	ip, ip, #237568	; 0x3a000
    3e30:	ldr	pc, [ip, #3956]!	; 0xf74

00003e34 <g_strv_length@plt>:
    3e34:	add	ip, pc, #0, 12
    3e38:	add	ip, ip, #237568	; 0x3a000
    3e3c:	ldr	pc, [ip, #3948]!	; 0xf6c

00003e40 <g_option_context_free@plt>:
    3e40:	add	ip, pc, #0, 12
    3e44:	add	ip, ip, #237568	; 0x3a000
    3e48:	ldr	pc, [ip, #3940]!	; 0xf64

00003e4c <__stack_chk_fail@plt>:
    3e4c:	add	ip, pc, #0, 12
    3e50:	add	ip, ip, #237568	; 0x3a000
    3e54:	ldr	pc, [ip, #3932]!	; 0xf5c

00003e58 <fwupd_device_get_release_default@plt>:
    3e58:	add	ip, pc, #0, 12
    3e5c:	add	ip, ip, #237568	; 0x3a000
    3e60:	ldr	pc, [ip, #3924]!	; 0xf54

00003e64 <g_getenv@plt>:
    3e64:	add	ip, pc, #0, 12
    3e68:	add	ip, ip, #237568	; 0x3a000
    3e6c:	ldr	pc, [ip, #3916]!	; 0xf4c

00003e70 <g_spawn_sync@plt>:
    3e70:	add	ip, pc, #0, 12
    3e74:	add	ip, ip, #237568	; 0x3a000
    3e78:	ldr	pc, [ip, #3908]!	; 0xf44

00003e7c <g_usb_interface_get_subclass@plt>:
    3e7c:	add	ip, pc, #0, 12
    3e80:	add	ip, ip, #237568	; 0x3a000
    3e84:	ldr	pc, [ip, #3900]!	; 0xf3c

00003e88 <g_subprocess_get_stdout_pipe@plt>:
    3e88:	add	ip, pc, #0, 12
    3e8c:	add	ip, ip, #237568	; 0x3a000
    3e90:	ldr	pc, [ip, #3892]!	; 0xf34

00003e94 <fwupd_device_set_vendor_id@plt>:
    3e94:	add	ip, pc, #0, 12
    3e98:	add	ip, ip, #237568	; 0x3a000
    3e9c:	ldr	pc, [ip, #3884]!	; 0xf2c

00003ea0 <g_usb_interface_get_index@plt>:
    3ea0:	add	ip, pc, #0, 12
    3ea4:	add	ip, ip, #237568	; 0x3a000
    3ea8:	ldr	pc, [ip, #3876]!	; 0xf24

00003eac <g_free@plt>:
    3eac:	add	ip, pc, #0, 12
    3eb0:	add	ip, ip, #237568	; 0x3a000
    3eb4:	ldr	pc, [ip, #3868]!	; 0xf1c

00003eb8 <fwupd_device_set_id@plt>:
    3eb8:	add	ip, pc, #0, 12
    3ebc:	add	ip, ip, #237568	; 0x3a000
    3ec0:	ldr	pc, [ip, #3860]!	; 0xf14

00003ec4 <g_value_set_object@plt>:
    3ec4:	add	ip, pc, #0, 12
    3ec8:	add	ip, ip, #237568	; 0x3a000
    3ecc:	ldr	pc, [ip, #3852]!	; 0xf0c

00003ed0 <dcgettext@plt>:
    3ed0:	add	ip, pc, #0, 12
    3ed4:	add	ip, ip, #237568	; 0x3a000
    3ed8:	ldr	pc, [ip, #3844]!	; 0xf04

00003edc <g_type_add_instance_private@plt>:
    3edc:	add	ip, pc, #0, 12
    3ee0:	add	ip, ip, #237568	; 0x3a000
    3ee4:	ldr	pc, [ip, #3836]!	; 0xefc

00003ee8 <g_hash_table_unref@plt>:
    3ee8:	add	ip, pc, #0, 12
    3eec:	add	ip, ip, #237568	; 0x3a000
    3ef0:	ldr	pc, [ip, #3828]!	; 0xef4

00003ef4 <g_usb_device_get_interfaces@plt>:
    3ef4:	add	ip, pc, #0, 12
    3ef8:	add	ip, ip, #237568	; 0x3a000
    3efc:	ldr	pc, [ip, #3820]!	; 0xeec

00003f00 <g_file_test@plt>:
    3f00:	add	ip, pc, #0, 12
    3f04:	add	ip, ip, #237568	; 0x3a000
    3f08:	ldr	pc, [ip, #3812]!	; 0xee4

00003f0c <g_usb_interface_get_extra@plt>:
    3f0c:	add	ip, pc, #0, 12
    3f10:	add	ip, ip, #237568	; 0x3a000
    3f14:	ldr	pc, [ip, #3804]!	; 0xedc

00003f18 <g_ptr_array_new@plt>:
    3f18:	add	ip, pc, #0, 12
    3f1c:	add	ip, ip, #237568	; 0x3a000
    3f20:	ldr	pc, [ip, #3796]!	; 0xed4

00003f24 <g_bytes_get_size@plt>:
    3f24:	add	ip, pc, #0, 12
    3f28:	add	ip, ip, #237568	; 0x3a000
    3f2c:	ldr	pc, [ip, #3788]!	; 0xecc

00003f30 <fwupd_device_get_vendor@plt>:
    3f30:	add	ip, pc, #0, 12
    3f34:	add	ip, ip, #237568	; 0x3a000
    3f38:	ldr	pc, [ip, #3780]!	; 0xec4

00003f3c <g_file_make_directory_with_parents@plt>:
    3f3c:	add	ip, pc, #0, 12
    3f40:	add	ip, ip, #237568	; 0x3a000
    3f44:	ldr	pc, [ip, #3772]!	; 0xebc

00003f48 <fwupd_release_new@plt>:
    3f48:	add	ip, pc, #0, 12
    3f4c:	add	ip, ip, #237568	; 0x3a000
    3f50:	ldr	pc, [ip, #3764]!	; 0xeb4

00003f54 <g_object_class_install_property@plt>:
    3f54:	add	ip, pc, #0, 12
    3f58:	add	ip, ip, #237568	; 0x3a000
    3f5c:	ldr	pc, [ip, #3756]!	; 0xeac

00003f60 <g_dir_open@plt>:
    3f60:	add	ip, pc, #0, 12
    3f64:	add	ip, ip, #237568	; 0x3a000
    3f68:	ldr	pc, [ip, #3748]!	; 0xea4

00003f6c <fwupd_device_get_name@plt>:
    3f6c:	add	ip, pc, #0, 12
    3f70:	add	ip, ip, #237568	; 0x3a000
    3f74:	ldr	pc, [ip, #3740]!	; 0xe9c

00003f78 <g_file_get_basename@plt>:
    3f78:	add	ip, pc, #0, 12
    3f7c:	add	ip, ip, #237568	; 0x3a000
    3f80:	ldr	pc, [ip, #3732]!	; 0xe94

00003f84 <g_param_spec_uint@plt>:
    3f84:	add	ip, pc, #0, 12
    3f88:	add	ip, ip, #237568	; 0x3a000
    3f8c:	ldr	pc, [ip, #3724]!	; 0xe8c

00003f90 <archive_read_close@plt>:
    3f90:	add	ip, pc, #0, 12
    3f94:	add	ip, ip, #237568	; 0x3a000
    3f98:	ldr	pc, [ip, #3716]!	; 0xe84

00003f9c <g_set_application_name@plt>:
    3f9c:	add	ip, pc, #0, 12
    3fa0:	add	ip, ip, #237568	; 0x3a000
    3fa4:	ldr	pc, [ip, #3708]!	; 0xe7c

00003fa8 <g_object_notify@plt>:
    3fa8:	add	ip, pc, #0, 12
    3fac:	add	ip, ip, #237568	; 0x3a000
    3fb0:	ldr	pc, [ip, #3700]!	; 0xe74

00003fb4 <g_unlink@plt>:
    3fb4:	add	ip, pc, #0, 12
    3fb8:	add	ip, ip, #237568	; 0x3a000
    3fbc:	ldr	pc, [ip, #3692]!	; 0xe6c

00003fc0 <raise@plt>:
    3fc0:	add	ip, pc, #0, 12
    3fc4:	add	ip, ip, #237568	; 0x3a000
    3fc8:	ldr	pc, [ip, #3684]!	; 0xe64

00003fcc <g_type_check_instance_is_a@plt>:
    3fcc:	add	ip, pc, #0, 12
    3fd0:	add	ip, ip, #237568	; 0x3a000
    3fd4:	ldr	pc, [ip, #3676]!	; 0xe5c

00003fd8 <g_usb_interface_get_protocol@plt>:
    3fd8:	add	ip, pc, #0, 12
    3fdc:	add	ip, ip, #237568	; 0x3a000
    3fe0:	ldr	pc, [ip, #3668]!	; 0xe54

00003fe4 <g_print@plt>:
    3fe4:	add	ip, pc, #0, 12
    3fe8:	add	ip, ip, #237568	; 0x3a000
    3fec:	ldr	pc, [ip, #3660]!	; 0xe4c

00003ff0 <g_usb_device_release_interface@plt>:
    3ff0:	add	ip, pc, #0, 12
    3ff4:	add	ip, ip, #237568	; 0x3a000
    3ff8:	ldr	pc, [ip, #3652]!	; 0xe44

00003ffc <bindtextdomain@plt>:
    3ffc:	add	ip, pc, #0, 12
    4000:	add	ip, ip, #237568	; 0x3a000
    4004:	ldr	pc, [ip, #3644]!	; 0xe3c

00004008 <g_checksum_new@plt>:
    4008:	add	ip, pc, #0, 12
    400c:	add	ip, ip, #237568	; 0x3a000
    4010:	ldr	pc, [ip, #3636]!	; 0xe34

00004014 <fwupd_device_set_name@plt>:
    4014:	add	ip, pc, #0, 12
    4018:	add	ip, ip, #237568	; 0x3a000
    401c:	ldr	pc, [ip, #3628]!	; 0xe2c

00004020 <g_value_get_uint@plt>:
    4020:	add	ip, pc, #0, 12
    4024:	add	ip, ip, #237568	; 0x3a000
    4028:	ldr	pc, [ip, #3620]!	; 0xe24

0000402c <g_key_file_get_keys@plt>:
    402c:	add	ip, pc, #0, 12
    4030:	add	ip, ip, #237568	; 0x3a000
    4034:	ldr	pc, [ip, #3612]!	; 0xe1c

00004038 <g_unix_signal_add_full@plt>:
    4038:	add	ip, pc, #0, 12
    403c:	add	ip, ip, #237568	; 0x3a000
    4040:	ldr	pc, [ip, #3604]!	; 0xe14

00004044 <g_usb_device_get_type@plt>:
    4044:	add	ip, pc, #0, 12
    4048:	add	ip, ip, #237568	; 0x3a000
    404c:	ldr	pc, [ip, #3596]!	; 0xe0c

00004050 <g_usb_device_get_vid@plt>:
    4050:	add	ip, pc, #0, 12
    4054:	add	ip, ip, #237568	; 0x3a000
    4058:	ldr	pc, [ip, #3588]!	; 0xe04

0000405c <g_dir_read_name@plt>:
    405c:	add	ip, pc, #0, 12
    4060:	add	ip, ip, #237568	; 0x3a000
    4064:	ldr	pc, [ip, #3580]!	; 0xdfc

00004068 <setlocale@plt>:
    4068:	add	ip, pc, #0, 12
    406c:	add	ip, ip, #237568	; 0x3a000
    4070:	ldr	pc, [ip, #3572]!	; 0xdf4

00004074 <g_option_context_add_main_entries@plt>:
    4074:	add	ip, pc, #0, 12
    4078:	add	ip, ip, #237568	; 0x3a000
    407c:	ldr	pc, [ip, #3564]!	; 0xdec

00004080 <g_hash_table_remove@plt>:
    4080:	add	ip, pc, #0, 12
    4084:	add	ip, ip, #237568	; 0x3a000
    4088:	ldr	pc, [ip, #3556]!	; 0xde4

0000408c <as_profile_new@plt>:
    408c:	add	ip, pc, #0, 12
    4090:	add	ip, ip, #237568	; 0x3a000
    4094:	ldr	pc, [ip, #3548]!	; 0xddc

00004098 <g_key_file_new@plt>:
    4098:	add	ip, pc, #0, 12
    409c:	add	ip, ip, #237568	; 0x3a000
    40a0:	ldr	pc, [ip, #3540]!	; 0xdd4

000040a4 <fwupd_error_quark@plt>:
    40a4:	add	ip, pc, #0, 12
    40a8:	add	ip, ip, #237568	; 0x3a000
    40ac:	ldr	pc, [ip, #3532]!	; 0xdcc

000040b0 <g_timer_new@plt>:
    40b0:	add	ip, pc, #0, 12
    40b4:	add	ip, ip, #237568	; 0x3a000
    40b8:	ldr	pc, [ip, #3524]!	; 0xdc4

000040bc <g_string_free@plt>:
    40bc:	add	ip, pc, #0, 12
    40c0:	add	ip, ip, #237568	; 0x3a000
    40c4:	ldr	pc, [ip, #3516]!	; 0xdbc

000040c8 <g_usb_device_get_manufacturer_index@plt>:
    40c8:	add	ip, pc, #0, 12
    40cc:	add	ip, ip, #237568	; 0x3a000
    40d0:	ldr	pc, [ip, #3508]!	; 0xdb4

000040d4 <g_path_get_dirname@plt>:
    40d4:	add	ip, pc, #0, 12
    40d8:	add	ip, ip, #237568	; 0x3a000
    40dc:	ldr	pc, [ip, #3500]!	; 0xdac

000040e0 <memcpy@plt>:
    40e0:	add	ip, pc, #0, 12
    40e4:	add	ip, ip, #237568	; 0x3a000
    40e8:	ldr	pc, [ip, #3492]!	; 0xda4

000040ec <g_bytes_ref@plt>:
    40ec:	add	ip, pc, #0, 12
    40f0:	add	ip, ip, #237568	; 0x3a000
    40f4:	ldr	pc, [ip, #3484]!	; 0xd9c

000040f8 <g_bytes_new_static@plt>:
    40f8:	add	ip, pc, #0, 12
    40fc:	add	ip, ip, #237568	; 0x3a000
    4100:	ldr	pc, [ip, #3476]!	; 0xd94

00004104 <archive_read_open_memory@plt>:
    4104:	add	ip, pc, #0, 12
    4108:	add	ip, ip, #237568	; 0x3a000
    410c:	ldr	pc, [ip, #3468]!	; 0xd8c

00004110 <g_object_unref@plt>:
    4110:	add	ip, pc, #0, 12
    4114:	add	ip, ip, #237568	; 0x3a000
    4118:	ldr	pc, [ip, #3460]!	; 0xd84

0000411c <strlen@plt>:
    411c:	add	ip, pc, #0, 12
    4120:	add	ip, ip, #237568	; 0x3a000
    4124:	ldr	pc, [ip, #3452]!	; 0xd7c

00004128 <as_profile_task_free@plt>:
    4128:	add	ip, pc, #0, 12
    412c:	add	ip, ip, #237568	; 0x3a000
    4130:	ldr	pc, [ip, #3444]!	; 0xd74

00004134 <g_source_set_callback@plt>:
    4134:	add	ip, pc, #0, 12
    4138:	add	ip, ip, #237568	; 0x3a000
    413c:	ldr	pc, [ip, #3436]!	; 0xd6c

00004140 <g_once_init_leave@plt>:
    4140:	add	ip, pc, #0, 12
    4144:	add	ip, ip, #237568	; 0x3a000
    4148:	ldr	pc, [ip, #3428]!	; 0xd64

0000414c <g_bytes_unref@plt>:
    414c:	add	ip, pc, #0, 12
    4150:	add	ip, ip, #237568	; 0x3a000
    4154:	ldr	pc, [ip, #3420]!	; 0xd5c

00004158 <g_get_monotonic_time@plt>:
    4158:	add	ip, pc, #0, 12
    415c:	add	ip, ip, #237568	; 0x3a000
    4160:	ldr	pc, [ip, #3412]!	; 0xd54

00004164 <archive_read_next_header@plt>:
    4164:	add	ip, pc, #0, 12
    4168:	add	ip, ip, #237568	; 0x3a000
    416c:	ldr	pc, [ip, #3404]!	; 0xd4c

00004170 <g_usb_device_get_platform_id@plt>:
    4170:	add	ip, pc, #0, 12
    4174:	add	ip, ip, #237568	; 0x3a000
    4178:	ldr	pc, [ip, #3396]!	; 0xd44

0000417c <g_option_context_get_help@plt>:
    417c:	add	ip, pc, #0, 12
    4180:	add	ip, ip, #237568	; 0x3a000
    4184:	ldr	pc, [ip, #3388]!	; 0xd3c

00004188 <g_usb_interface_get_number@plt>:
    4188:	add	ip, pc, #0, 12
    418c:	add	ip, ip, #237568	; 0x3a000
    4190:	ldr	pc, [ip, #3380]!	; 0xd34

00004194 <g_strdup_vprintf@plt>:
    4194:	add	ip, pc, #0, 12
    4198:	add	ip, ip, #237568	; 0x3a000
    419c:	ldr	pc, [ip, #3372]!	; 0xd2c

000041a0 <g_pollable_input_stream_get_type@plt>:
    41a0:	add	ip, pc, #0, 12
    41a4:	add	ip, ip, #237568	; 0x3a000
    41a8:	ldr	pc, [ip, #3364]!	; 0xd24

000041ac <g_malloc0_n@plt>:
    41ac:	add	ip, pc, #0, 12
    41b0:	add	ip, ip, #237568	; 0x3a000
    41b4:	ldr	pc, [ip, #3356]!	; 0xd1c

000041b8 <g_bytes_compare@plt>:
    41b8:	add	ip, pc, #0, 12
    41bc:	add	ip, ip, #237568	; 0x3a000
    41c0:	ldr	pc, [ip, #3348]!	; 0xd14

000041c4 <fwupd_device_add_flag@plt>:
    41c4:	add	ip, pc, #0, 12
    41c8:	add	ip, ip, #237568	; 0x3a000
    41cc:	ldr	pc, [ip, #3340]!	; 0xd0c

000041d0 <g_hash_table_size@plt>:
    41d0:	add	ip, pc, #0, 12
    41d4:	add	ip, ip, #237568	; 0x3a000
    41d8:	ldr	pc, [ip, #3332]!	; 0xd04

000041dc <g_key_file_unref@plt>:
    41dc:	add	ip, pc, #0, 12
    41e0:	add	ip, ip, #237568	; 0x3a000
    41e4:	ldr	pc, [ip, #3324]!	; 0xcfc

000041e8 <g_bytes_equal@plt>:
    41e8:	add	ip, pc, #0, 12
    41ec:	add	ip, ip, #237568	; 0x3a000
    41f0:	ldr	pc, [ip, #3316]!	; 0xcf4

000041f4 <g_ptr_array_sort@plt>:
    41f4:	add	ip, pc, #0, 12
    41f8:	add	ip, ip, #237568	; 0x3a000
    41fc:	ldr	pc, [ip, #3308]!	; 0xcec

00004200 <fwupd_device_set_summary@plt>:
    4200:	add	ip, pc, #0, 12
    4204:	add	ip, ip, #237568	; 0x3a000
    4208:	ldr	pc, [ip, #3300]!	; 0xce4

0000420c <g_type_class_peek_parent@plt>:
    420c:	add	ip, pc, #0, 12
    4210:	add	ip, ip, #237568	; 0x3a000
    4214:	ldr	pc, [ip, #3292]!	; 0xcdc

00004218 <g_file_new_for_path@plt>:
    4218:	add	ip, pc, #0, 12
    421c:	add	ip, ip, #237568	; 0x3a000
    4220:	ldr	pc, [ip, #3284]!	; 0xcd4

00004224 <g_ptr_array_unref@plt>:
    4224:	add	ip, pc, #0, 12
    4228:	add	ip, ip, #237568	; 0x3a000
    422c:	ldr	pc, [ip, #3276]!	; 0xccc

00004230 <g_hash_table_destroy@plt>:
    4230:	add	ip, pc, #0, 12
    4234:	add	ip, ip, #237568	; 0x3a000
    4238:	ldr	pc, [ip, #3268]!	; 0xcc4

0000423c <g_file_get_parent@plt>:
    423c:	add	ip, pc, #0, 12
    4240:	add	ip, ip, #237568	; 0x3a000
    4244:	ldr	pc, [ip, #3260]!	; 0xcbc

00004248 <g_malloc0@plt>:
    4248:	add	ip, pc, #0, 12
    424c:	add	ip, ip, #237568	; 0x3a000
    4250:	ldr	pc, [ip, #3252]!	; 0xcb4

00004254 <archive_read_support_format_all@plt>:
    4254:	add	ip, pc, #0, 12
    4258:	add	ip, ip, #237568	; 0x3a000
    425c:	ldr	pc, [ip, #3244]!	; 0xcac

00004260 <g_file_get_type@plt>:
    4260:	add	ip, pc, #0, 12
    4264:	add	ip, ip, #237568	; 0x3a000
    4268:	ldr	pc, [ip, #3236]!	; 0xca4

0000426c <g_ptr_array_add@plt>:
    426c:	add	ip, pc, #0, 12
    4270:	add	ip, ip, #237568	; 0x3a000
    4274:	ldr	pc, [ip, #3228]!	; 0xc9c

00004278 <g_str_has_suffix@plt>:
    4278:	add	ip, pc, #0, 12
    427c:	add	ip, ip, #237568	; 0x3a000
    4280:	ldr	pc, [ip, #3220]!	; 0xc94

00004284 <g_ascii_strtoull@plt>:
    4284:	add	ip, pc, #0, 12
    4288:	add	ip, ip, #237568	; 0x3a000
    428c:	ldr	pc, [ip, #3212]!	; 0xc8c

00004290 <fwupd_device_get_type@plt>:
    4290:	add	ip, pc, #0, 12
    4294:	add	ip, ip, #237568	; 0x3a000
    4298:	ldr	pc, [ip, #3204]!	; 0xc84

0000429c <fwupd_device_get_guid_default@plt>:
    429c:	add	ip, pc, #0, 12
    42a0:	add	ip, ip, #237568	; 0x3a000
    42a4:	ldr	pc, [ip, #3196]!	; 0xc7c

000042a8 <__errno_location@plt>:
    42a8:	add	ip, pc, #0, 12
    42ac:	add	ip, ip, #237568	; 0x3a000
    42b0:	ldr	pc, [ip, #3188]!	; 0xc74

000042b4 <archive_read_new@plt>:
    42b4:	add	ip, pc, #0, 12
    42b8:	add	ip, ip, #237568	; 0x3a000
    42bc:	ldr	pc, [ip, #3180]!	; 0xc6c

000042c0 <g_usb_device_get_string_descriptor@plt>:
    42c0:	add	ip, pc, #0, 12
    42c4:	add	ip, ip, #237568	; 0x3a000
    42c8:	ldr	pc, [ip, #3172]!	; 0xc64

000042cc <g_usb_device_claim_interface@plt>:
    42cc:	add	ip, pc, #0, 12
    42d0:	add	ip, ip, #237568	; 0x3a000
    42d4:	ldr	pc, [ip, #3164]!	; 0xc5c

000042d8 <fwupd_device_add_icon@plt>:
    42d8:	add	ip, pc, #0, 12
    42dc:	add	ip, ip, #237568	; 0x3a000
    42e0:	ldr	pc, [ip, #3156]!	; 0xc54

000042e4 <g_assertion_message_expr@plt>:
    42e4:	add	ip, pc, #0, 12
    42e8:	add	ip, ip, #237568	; 0x3a000
    42ec:	ldr	pc, [ip, #3148]!	; 0xc4c

000042f0 <_Unwind_Resume@plt>:
    42f0:	add	ip, pc, #0, 12
    42f4:	add	ip, ip, #237568	; 0x3a000
    42f8:	ldr	pc, [ip, #3140]!	; 0xc44

000042fc <memcmp@plt>:
    42fc:	add	ip, pc, #0, 12
    4300:	add	ip, ip, #237568	; 0x3a000
    4304:	ldr	pc, [ip, #3132]!	; 0xc3c

00004308 <g_string_append@plt>:
    4308:	add	ip, pc, #0, 12
    430c:	add	ip, ip, #237568	; 0x3a000
    4310:	ldr	pc, [ip, #3124]!	; 0xc34

00004314 <g_checksum_get_digest@plt>:
    4314:	add	ip, pc, #0, 12
    4318:	add	ip, ip, #237568	; 0x3a000
    431c:	ldr	pc, [ip, #3116]!	; 0xc2c

00004320 <g_bytes_get_data@plt>:
    4320:	add	ip, pc, #0, 12
    4324:	add	ip, ip, #237568	; 0x3a000
    4328:	ldr	pc, [ip, #3108]!	; 0xc24

0000432c <g_format_size_full@plt>:
    432c:	add	ip, pc, #0, 12
    4330:	add	ip, ip, #237568	; 0x3a000
    4334:	ldr	pc, [ip, #3100]!	; 0xc1c

00004338 <g_strjoinv@plt>:
    4338:	add	ip, pc, #0, 12
    433c:	add	ip, ip, #237568	; 0x3a000
    4340:	ldr	pc, [ip, #3092]!	; 0xc14

00004344 <g_string_append_printf@plt>:
    4344:	add	ip, pc, #0, 12
    4348:	add	ip, ip, #237568	; 0x3a000
    434c:	ldr	pc, [ip, #3084]!	; 0xc0c

00004350 <g_set_error@plt>:
    4350:	add	ip, pc, #0, 12
    4354:	add	ip, ip, #237568	; 0x3a000
    4358:	ldr	pc, [ip, #3076]!	; 0xc04

0000435c <archive_read_extract@plt>:
    435c:	add	ip, pc, #0, 12
    4360:	add	ip, ip, #237568	; 0x3a000
    4364:	ldr	pc, [ip, #3068]!	; 0xbfc

00004368 <g_usb_device_get_custom_index@plt>:
    4368:	add	ip, pc, #0, 12
    436c:	add	ip, ip, #237568	; 0x3a000
    4370:	ldr	pc, [ip, #3060]!	; 0xbf4

00004374 <g_type_check_class_cast@plt>:
    4374:	add	ip, pc, #0, 12
    4378:	add	ip, ip, #237568	; 0x3a000
    437c:	ldr	pc, [ip, #3052]!	; 0xbec

00004380 <g_param_spec_object@plt>:
    4380:	add	ip, pc, #0, 12
    4384:	add	ip, ip, #237568	; 0x3a000
    4388:	ldr	pc, [ip, #3044]!	; 0xbe4

0000438c <__libc_start_main@plt>:
    438c:	add	ip, pc, #0, 12
    4390:	add	ip, ip, #237568	; 0x3a000
    4394:	ldr	pc, [ip, #3036]!	; 0xbdc

00004398 <g_source_destroy@plt>:
    4398:	add	ip, pc, #0, 12
    439c:	add	ip, ip, #237568	; 0x3a000
    43a0:	ldr	pc, [ip, #3028]!	; 0xbd4

000043a4 <fwupd_device_add_release@plt>:
    43a4:	add	ip, pc, #0, 12
    43a8:	add	ip, ip, #237568	; 0x3a000
    43ac:	ldr	pc, [ip, #3020]!	; 0xbcc

000043b0 <g_main_loop_unref@plt>:
    43b0:	add	ip, pc, #0, 12
    43b4:	add	ip, ip, #237568	; 0x3a000
    43b8:	ldr	pc, [ip, #3012]!	; 0xbc4

000043bc <__gmon_start__@plt>:
    43bc:	add	ip, pc, #0, 12
    43c0:	add	ip, ip, #237568	; 0x3a000
    43c4:	ldr	pc, [ip, #3004]!	; 0xbbc

000043c8 <fwupd_device_get_vendor_id@plt>:
    43c8:	add	ip, pc, #0, 12
    43cc:	add	ip, ip, #237568	; 0x3a000
    43d0:	ldr	pc, [ip, #2996]!	; 0xbb4

000043d4 <__cxa_finalize@plt>:
    43d4:	add	ip, pc, #0, 12
    43d8:	add	ip, ip, #237568	; 0x3a000
    43dc:	ldr	pc, [ip, #2988]!	; 0xbac

000043e0 <as_utils_guid_from_string@plt>:
    43e0:	add	ip, pc, #0, 12
    43e4:	add	ip, ip, #237568	; 0x3a000
    43e8:	ldr	pc, [ip, #2980]!	; 0xba4

000043ec <g_usb_context_get_devices@plt>:
    43ec:	add	ip, pc, #0, 12
    43f0:	add	ip, ip, #237568	; 0x3a000
    43f4:	ldr	pc, [ip, #2972]!	; 0xb9c

000043f8 <g_source_remove@plt>:
    43f8:	add	ip, pc, #0, 12
    43fc:	add	ip, ip, #237568	; 0x3a000
    4400:	ldr	pc, [ip, #2964]!	; 0xb94

00004404 <g_prefix_error@plt>:
    4404:	add	ip, pc, #0, 12
    4408:	add	ip, ip, #237568	; 0x3a000
    440c:	ldr	pc, [ip, #2956]!	; 0xb8c

00004410 <g_subprocess_newv@plt>:
    4410:	add	ip, pc, #0, 12
    4414:	add	ip, ip, #237568	; 0x3a000
    4418:	ldr	pc, [ip, #2948]!	; 0xb84

0000441c <g_strcmp0@plt>:
    441c:	add	ip, pc, #0, 12
    4420:	add	ip, ip, #237568	; 0x3a000
    4424:	ldr	pc, [ip, #2940]!	; 0xb7c

00004428 <g_hash_table_new@plt>:
    4428:	add	ip, pc, #0, 12
    442c:	add	ip, ip, #237568	; 0x3a000
    4430:	ldr	pc, [ip, #2932]!	; 0xb74

Disassembly of section .text:

00004438 <main@@Base>:
    4438:	ldr	r2, [pc, #3736]	; 52d8 <main@@Base+0xea0>
    443c:	mov	r3, #0
    4440:	ldr	ip, [pc, #3732]	; 52dc <main@@Base+0xea4>
    4444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4448:	add	r2, pc, r2
    444c:	sub	sp, sp, #228	; 0xe4
    4450:	str	r0, [sp, #36]	; 0x24
    4454:	mov	r0, #28
    4458:	str	r1, [sp, #32]
    445c:	ldr	ip, [r2, ip]
    4460:	str	r3, [sp, #40]	; 0x28
    4464:	str	r3, [sp, #44]	; 0x2c
    4468:	ldr	r3, [ip]
    446c:	str	ip, [sp, #16]
    4470:	str	r3, [sp, #220]	; 0xdc
    4474:	bl	4248 <g_malloc0@plt>
    4478:	mov	r3, #0
    447c:	mov	r8, r0
    4480:	mov	r1, r3
    4484:	add	r2, sp, #52	; 0x34
    4488:	add	r0, sp, #52	; 0x34
    448c:	str	r2, [sp, #24]
    4490:	mov	r2, #168	; 0xa8
    4494:	str	r3, [sp, #48]	; 0x30
    4498:	bl	3bd0 <memset@plt>
    449c:	ldr	r1, [pc, #3644]	; 52e0 <main@@Base+0xea8>
    44a0:	ldr	r6, [pc, #3644]	; 52e4 <main@@Base+0xeac>
    44a4:	add	ip, r8, #12
    44a8:	add	r1, pc, r1
    44ac:	str	r1, [sp, #52]	; 0x34
    44b0:	ldr	r1, [pc, #3632]	; 52e8 <main@@Base+0xeb0>
    44b4:	add	r6, pc, r6
    44b8:	ldr	r5, [pc, #3628]	; 52ec <main@@Base+0xeb4>
    44bc:	add	r3, r8, #16
    44c0:	add	r1, pc, r1
    44c4:	str	r1, [sp, #160]	; 0xa0
    44c8:	ldr	r1, [pc, #3616]	; 52f0 <main@@Base+0xeb8>
    44cc:	add	r5, pc, r5
    44d0:	add	r2, r8, #8
    44d4:	str	ip, [sp, #124]	; 0x7c
    44d8:	str	r3, [sp, #152]	; 0x98
    44dc:	add	r1, pc, r1
    44e0:	str	r2, [sp, #180]	; 0xb4
    44e4:	mov	r0, #6
    44e8:	str	r6, [sp, #72]	; 0x48
    44ec:	str	r5, [sp, #80]	; 0x50
    44f0:	ldr	r4, [pc, #3580]	; 52f4 <main@@Base+0xebc>
    44f4:	ldr	r9, [pc, #3580]	; 52f8 <main@@Base+0xec0>
    44f8:	ldr	lr, [pc, #3580]	; 52fc <main@@Base+0xec4>
    44fc:	add	r4, pc, r4
    4500:	ldr	r7, [pc, #3576]	; 5300 <main@@Base+0xec8>
    4504:	add	r9, pc, r9
    4508:	ldr	ip, [pc, #3572]	; 5304 <main@@Base+0xecc>
    450c:	add	lr, pc, lr
    4510:	ldr	r3, [pc, #3568]	; 5308 <main@@Base+0xed0>
    4514:	add	r7, pc, r7
    4518:	ldr	r2, [pc, #3564]	; 530c <main@@Base+0xed4>
    451c:	add	ip, pc, ip
    4520:	ldr	r6, [pc, #3560]	; 5310 <main@@Base+0xed8>
    4524:	add	r3, pc, r3
    4528:	ldr	r5, [pc, #3556]	; 5314 <main@@Base+0xedc>
    452c:	add	r2, pc, r2
    4530:	str	lr, [sp, #108]	; 0x6c
    4534:	add	r6, pc, r6
    4538:	add	r5, pc, r5
    453c:	mov	lr, #118	; 0x76
    4540:	str	ip, [sp, #132]	; 0x84
    4544:	mov	ip, #100	; 0x64
    4548:	str	r3, [sp, #136]	; 0x88
    454c:	mov	r3, #1
    4550:	strb	ip, [sp, #112]	; 0x70
    4554:	str	r3, [sp, #120]	; 0x78
    4558:	str	r3, [sp, #148]	; 0x94
    455c:	str	r2, [sp, #156]	; 0x9c
    4560:	mov	r2, #116	; 0x74
    4564:	str	r5, [sp, #184]	; 0xb8
    4568:	add	r5, sp, #44	; 0x2c
    456c:	strb	r2, [sp, #140]	; 0x8c
    4570:	strb	lr, [sp, #84]	; 0x54
    4574:	add	lr, sp, #40	; 0x28
    4578:	str	r9, [sp, #100]	; 0x64
    457c:	str	lr, [sp, #96]	; 0x60
    4580:	str	r7, [sp, #128]	; 0x80
    4584:	str	r6, [sp, #164]	; 0xa4
    4588:	str	r5, [sp, #68]	; 0x44
    458c:	bl	4068 <setlocale@plt>
    4590:	ldr	r1, [pc, #3456]	; 5318 <main@@Base+0xee0>
    4594:	mov	r0, r4
    4598:	add	r1, pc, r1
    459c:	bl	3ffc <bindtextdomain@plt>
    45a0:	ldr	r1, [pc, #3444]	; 531c <main@@Base+0xee4>
    45a4:	mov	r0, r4
    45a8:	add	r1, pc, r1
    45ac:	bl	3930 <bind_textdomain_codeset@plt>
    45b0:	mov	r0, r4
    45b4:	bl	3b34 <textdomain@plt>
    45b8:	ldr	r0, [pc, #3424]	; 5320 <main@@Base+0xee8>
    45bc:	add	r0, pc, r0
    45c0:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
    45c4:	ldr	r1, [pc, #3416]	; 5324 <main@@Base+0xeec>
    45c8:	mov	r4, r0
    45cc:	mov	r2, #5
    45d0:	mov	r0, #0
    45d4:	add	r1, pc, r1
    45d8:	str	r4, [r8, #4]
    45dc:	bl	3ed0 <dcgettext@plt>
    45e0:	ldr	ip, [pc, #3392]	; 5328 <main@@Base+0xef0>
    45e4:	ldr	r1, [pc, #3392]	; 532c <main@@Base+0xef4>
    45e8:	ldr	r2, [pc, #3392]	; 5330 <main@@Base+0xef8>
    45ec:	add	ip, pc, ip
    45f0:	add	r1, pc, r1
    45f4:	str	ip, [sp]
    45f8:	add	r2, pc, r2
    45fc:	mov	r3, r0
    4600:	mov	r0, r4
    4604:	bl	76a8 <main@@Base+0x3270>
    4608:	ldr	r1, [pc, #3364]	; 5334 <main@@Base+0xefc>
    460c:	mov	r2, #5
    4610:	mov	r0, #0
    4614:	ldr	r4, [r8, #4]
    4618:	add	r1, pc, r1
    461c:	bl	3ed0 <dcgettext@plt>
    4620:	ldr	ip, [pc, #3344]	; 5338 <main@@Base+0xf00>
    4624:	ldr	r1, [pc, #3344]	; 533c <main@@Base+0xf04>
    4628:	ldr	r2, [pc, #3344]	; 5340 <main@@Base+0xf08>
    462c:	add	ip, pc, ip
    4630:	add	r1, pc, r1
    4634:	str	ip, [sp]
    4638:	add	r2, pc, r2
    463c:	mov	r3, r0
    4640:	mov	r0, r4
    4644:	bl	76a8 <main@@Base+0x3270>
    4648:	ldr	r1, [pc, #3316]	; 5344 <main@@Base+0xf0c>
    464c:	mov	r2, #5
    4650:	mov	r0, #0
    4654:	ldr	r4, [r8, #4]
    4658:	add	r1, pc, r1
    465c:	bl	3ed0 <dcgettext@plt>
    4660:	ldr	ip, [pc, #3296]	; 5348 <main@@Base+0xf10>
    4664:	ldr	r1, [pc, #3296]	; 534c <main@@Base+0xf14>
    4668:	ldr	r2, [pc, #3296]	; 5350 <main@@Base+0xf18>
    466c:	add	ip, pc, ip
    4670:	add	r1, pc, r1
    4674:	str	ip, [sp]
    4678:	add	r2, pc, r2
    467c:	mov	r3, r0
    4680:	mov	r0, r4
    4684:	bl	76a8 <main@@Base+0x3270>
    4688:	ldr	r1, [pc, #3268]	; 5354 <main@@Base+0xf1c>
    468c:	mov	r2, #5
    4690:	mov	r0, #0
    4694:	ldr	r4, [r8, #4]
    4698:	add	r1, pc, r1
    469c:	bl	3ed0 <dcgettext@plt>
    46a0:	ldr	ip, [pc, #3248]	; 5358 <main@@Base+0xf20>
    46a4:	ldr	r1, [pc, #3248]	; 535c <main@@Base+0xf24>
    46a8:	ldr	r2, [pc, #3248]	; 5360 <main@@Base+0xf28>
    46ac:	add	ip, pc, ip
    46b0:	add	r1, pc, r1
    46b4:	str	ip, [sp]
    46b8:	add	r2, pc, r2
    46bc:	mov	r3, r0
    46c0:	mov	r0, r4
    46c4:	bl	76a8 <main@@Base+0x3270>
    46c8:	ldr	r1, [pc, #3220]	; 5364 <main@@Base+0xf2c>
    46cc:	mov	r2, #5
    46d0:	mov	r0, #0
    46d4:	ldr	r4, [r8, #4]
    46d8:	add	r1, pc, r1
    46dc:	bl	3ed0 <dcgettext@plt>
    46e0:	ldr	ip, [pc, #3200]	; 5368 <main@@Base+0xf30>
    46e4:	ldr	r1, [pc, #3200]	; 536c <main@@Base+0xf34>
    46e8:	ldr	r2, [pc, #3200]	; 5370 <main@@Base+0xf38>
    46ec:	add	ip, pc, ip
    46f0:	add	r1, pc, r1
    46f4:	str	ip, [sp]
    46f8:	add	r2, pc, r2
    46fc:	mov	r3, r0
    4700:	mov	r0, r4
    4704:	bl	76a8 <main@@Base+0x3270>
    4708:	ldr	r1, [pc, #3172]	; 5374 <main@@Base+0xf3c>
    470c:	mov	r2, #5
    4710:	mov	r0, #0
    4714:	ldr	r4, [r8, #4]
    4718:	add	r1, pc, r1
    471c:	bl	3ed0 <dcgettext@plt>
    4720:	ldr	ip, [pc, #3152]	; 5378 <main@@Base+0xf40>
    4724:	ldr	r1, [pc, #3152]	; 537c <main@@Base+0xf44>
    4728:	ldr	r2, [pc, #3152]	; 5380 <main@@Base+0xf48>
    472c:	add	ip, pc, ip
    4730:	add	r1, pc, r1
    4734:	str	ip, [sp]
    4738:	add	r2, pc, r2
    473c:	mov	r3, r0
    4740:	mov	r0, r4
    4744:	bl	76a8 <main@@Base+0x3270>
    4748:	ldr	r1, [pc, #3124]	; 5384 <main@@Base+0xf4c>
    474c:	mov	r2, #5
    4750:	mov	r0, #0
    4754:	ldr	r4, [r8, #4]
    4758:	add	r1, pc, r1
    475c:	bl	3ed0 <dcgettext@plt>
    4760:	ldr	ip, [pc, #3104]	; 5388 <main@@Base+0xf50>
    4764:	ldr	r1, [pc, #3104]	; 538c <main@@Base+0xf54>
    4768:	ldr	r2, [pc, #3104]	; 5390 <main@@Base+0xf58>
    476c:	add	ip, pc, ip
    4770:	add	r1, pc, r1
    4774:	str	ip, [sp]
    4778:	add	r2, pc, r2
    477c:	mov	r3, r0
    4780:	mov	r0, r4
    4784:	bl	76a8 <main@@Base+0x3270>
    4788:	ldr	r1, [pc, #3076]	; 5394 <main@@Base+0xf5c>
    478c:	mov	r2, #5
    4790:	mov	r0, #0
    4794:	ldr	r4, [r8, #4]
    4798:	add	r1, pc, r1
    479c:	bl	3ed0 <dcgettext@plt>
    47a0:	ldr	ip, [pc, #3056]	; 5398 <main@@Base+0xf60>
    47a4:	ldr	r1, [pc, #3056]	; 539c <main@@Base+0xf64>
    47a8:	ldr	r2, [pc, #3056]	; 53a0 <main@@Base+0xf68>
    47ac:	add	ip, pc, ip
    47b0:	add	r1, pc, r1
    47b4:	str	ip, [sp]
    47b8:	add	r2, pc, r2
    47bc:	mov	r3, r0
    47c0:	mov	r0, r4
    47c4:	bl	76a8 <main@@Base+0x3270>
    47c8:	ldr	r1, [pc, #3028]	; 53a4 <main@@Base+0xf6c>
    47cc:	mov	r2, #5
    47d0:	mov	r0, #0
    47d4:	ldr	r4, [r8, #4]
    47d8:	add	r1, pc, r1
    47dc:	bl	3ed0 <dcgettext@plt>
    47e0:	ldr	ip, [pc, #3008]	; 53a8 <main@@Base+0xf70>
    47e4:	ldr	r1, [pc, #3008]	; 53ac <main@@Base+0xf74>
    47e8:	ldr	r2, [pc, #3008]	; 53b0 <main@@Base+0xf78>
    47ec:	add	ip, pc, ip
    47f0:	add	r1, pc, r1
    47f4:	str	ip, [sp]
    47f8:	add	r2, pc, r2
    47fc:	mov	r3, r0
    4800:	mov	r0, r4
    4804:	bl	76a8 <main@@Base+0x3270>
    4808:	ldr	r1, [pc, #2980]	; 53b4 <main@@Base+0xf7c>
    480c:	mov	r2, #5
    4810:	mov	r0, #0
    4814:	ldr	r4, [r8, #4]
    4818:	add	r1, pc, r1
    481c:	bl	3ed0 <dcgettext@plt>
    4820:	ldr	ip, [pc, #2960]	; 53b8 <main@@Base+0xf80>
    4824:	ldr	r1, [pc, #2960]	; 53bc <main@@Base+0xf84>
    4828:	mov	r2, #0
    482c:	add	ip, pc, ip
    4830:	str	ip, [sp]
    4834:	add	r1, pc, r1
    4838:	mov	r3, r0
    483c:	mov	r0, r4
    4840:	bl	76a8 <main@@Base+0x3270>
    4844:	ldr	r1, [pc, #2932]	; 53c0 <main@@Base+0xf88>
    4848:	mov	r2, #5
    484c:	mov	r0, #0
    4850:	ldr	r4, [r8, #4]
    4854:	add	r1, pc, r1
    4858:	bl	3ed0 <dcgettext@plt>
    485c:	ldr	ip, [pc, #2912]	; 53c4 <main@@Base+0xf8c>
    4860:	ldr	r1, [pc, #2912]	; 53c8 <main@@Base+0xf90>
    4864:	mov	r2, #0
    4868:	add	ip, pc, ip
    486c:	str	ip, [sp]
    4870:	add	r1, pc, r1
    4874:	mov	r3, r0
    4878:	mov	r0, r4
    487c:	bl	76a8 <main@@Base+0x3270>
    4880:	ldr	r1, [pc, #2884]	; 53cc <main@@Base+0xf94>
    4884:	mov	r2, #5
    4888:	mov	r0, #0
    488c:	ldr	r4, [r8, #4]
    4890:	add	r1, pc, r1
    4894:	bl	3ed0 <dcgettext@plt>
    4898:	ldr	ip, [pc, #2864]	; 53d0 <main@@Base+0xf98>
    489c:	ldr	r1, [pc, #2864]	; 53d4 <main@@Base+0xf9c>
    48a0:	ldr	r2, [pc, #2864]	; 53d8 <main@@Base+0xfa0>
    48a4:	add	ip, pc, ip
    48a8:	add	r1, pc, r1
    48ac:	str	ip, [sp]
    48b0:	add	r2, pc, r2
    48b4:	mov	r3, r0
    48b8:	mov	r0, r4
    48bc:	bl	76a8 <main@@Base+0x3270>
    48c0:	ldr	r1, [pc, #2836]	; 53dc <main@@Base+0xfa4>
    48c4:	mov	r2, #5
    48c8:	mov	r0, #0
    48cc:	ldr	r4, [r8, #4]
    48d0:	add	r1, pc, r1
    48d4:	bl	3ed0 <dcgettext@plt>
    48d8:	ldr	ip, [pc, #2816]	; 53e0 <main@@Base+0xfa8>
    48dc:	ldr	r1, [pc, #2816]	; 53e4 <main@@Base+0xfac>
    48e0:	ldr	r2, [pc, #2816]	; 53e8 <main@@Base+0xfb0>
    48e4:	add	ip, pc, ip
    48e8:	add	r1, pc, r1
    48ec:	str	ip, [sp]
    48f0:	add	r2, pc, r2
    48f4:	mov	r3, r0
    48f8:	mov	r0, r4
    48fc:	bl	76a8 <main@@Base+0x3270>
    4900:	ldr	r1, [pc, #2788]	; 53ec <main@@Base+0xfb4>
    4904:	mov	r2, #5
    4908:	mov	r0, #0
    490c:	ldr	r4, [r8, #4]
    4910:	add	r1, pc, r1
    4914:	bl	3ed0 <dcgettext@plt>
    4918:	ldr	ip, [pc, #2768]	; 53f0 <main@@Base+0xfb8>
    491c:	ldr	r1, [pc, #2768]	; 53f4 <main@@Base+0xfbc>
    4920:	mov	r2, #0
    4924:	add	ip, pc, ip
    4928:	str	ip, [sp]
    492c:	add	r1, pc, r1
    4930:	mov	r3, r0
    4934:	mov	r0, r4
    4938:	bl	76a8 <main@@Base+0x3270>
    493c:	ldr	r1, [pc, #2740]	; 53f8 <main@@Base+0xfc0>
    4940:	mov	r2, #5
    4944:	mov	r0, #0
    4948:	ldr	r4, [r8, #4]
    494c:	add	r1, pc, r1
    4950:	bl	3ed0 <dcgettext@plt>
    4954:	ldr	ip, [pc, #2720]	; 53fc <main@@Base+0xfc4>
    4958:	ldr	r1, [pc, #2720]	; 5400 <main@@Base+0xfc8>
    495c:	ldr	r2, [pc, #2720]	; 5404 <main@@Base+0xfcc>
    4960:	add	ip, pc, ip
    4964:	add	r1, pc, r1
    4968:	str	ip, [sp]
    496c:	add	r2, pc, r2
    4970:	mov	r3, r0
    4974:	mov	r0, r4
    4978:	bl	76a8 <main@@Base+0x3270>
    497c:	ldr	r1, [pc, #2692]	; 5408 <main@@Base+0xfd0>
    4980:	mov	r2, #5
    4984:	mov	r0, #0
    4988:	ldr	r4, [r8, #4]
    498c:	add	r1, pc, r1
    4990:	bl	3ed0 <dcgettext@plt>
    4994:	ldr	ip, [pc, #2672]	; 540c <main@@Base+0xfd4>
    4998:	ldr	r1, [pc, #2672]	; 5410 <main@@Base+0xfd8>
    499c:	mov	r2, #0
    49a0:	add	ip, pc, ip
    49a4:	str	ip, [sp]
    49a8:	add	r1, pc, r1
    49ac:	mov	r3, r0
    49b0:	mov	r0, r4
    49b4:	bl	76a8 <main@@Base+0x3270>
    49b8:	ldr	r1, [pc, #2644]	; 5414 <main@@Base+0xfdc>
    49bc:	mov	r2, #5
    49c0:	mov	r0, #0
    49c4:	ldr	r4, [r8, #4]
    49c8:	add	r1, pc, r1
    49cc:	bl	3ed0 <dcgettext@plt>
    49d0:	ldr	ip, [pc, #2624]	; 5418 <main@@Base+0xfe0>
    49d4:	ldr	r1, [pc, #2624]	; 541c <main@@Base+0xfe4>
    49d8:	mov	r2, #0
    49dc:	add	ip, pc, ip
    49e0:	str	ip, [sp]
    49e4:	add	r1, pc, r1
    49e8:	mov	r3, r0
    49ec:	mov	r0, r4
    49f0:	bl	76a8 <main@@Base+0x3270>
    49f4:	ldr	r1, [pc, #2596]	; 5420 <main@@Base+0xfe8>
    49f8:	mov	r2, #5
    49fc:	mov	r0, #0
    4a00:	ldr	r4, [r8, #4]
    4a04:	add	r1, pc, r1
    4a08:	bl	3ed0 <dcgettext@plt>
    4a0c:	ldr	ip, [pc, #2576]	; 5424 <main@@Base+0xfec>
    4a10:	ldr	r1, [pc, #2576]	; 5428 <main@@Base+0xff0>
    4a14:	ldr	r2, [pc, #2576]	; 542c <main@@Base+0xff4>
    4a18:	add	ip, pc, ip
    4a1c:	add	r1, pc, r1
    4a20:	str	ip, [sp]
    4a24:	add	r2, pc, r2
    4a28:	mov	r3, r0
    4a2c:	mov	r0, r4
    4a30:	bl	76a8 <main@@Base+0x3270>
    4a34:	ldr	r1, [pc, #2548]	; 5430 <main@@Base+0xff8>
    4a38:	mov	r2, #5
    4a3c:	mov	r0, #0
    4a40:	ldr	r4, [r8, #4]
    4a44:	add	r1, pc, r1
    4a48:	bl	3ed0 <dcgettext@plt>
    4a4c:	ldr	ip, [pc, #2528]	; 5434 <main@@Base+0xffc>
    4a50:	ldr	r1, [pc, #2528]	; 5438 <main@@Base+0x1000>
    4a54:	mov	r2, #0
    4a58:	add	ip, pc, ip
    4a5c:	str	ip, [sp]
    4a60:	add	r1, pc, r1
    4a64:	mov	r3, r0
    4a68:	mov	r0, r4
    4a6c:	bl	76a8 <main@@Base+0x3270>
    4a70:	ldr	r1, [pc, #2500]	; 543c <main@@Base+0x1004>
    4a74:	mov	r2, #5
    4a78:	mov	r0, #0
    4a7c:	ldr	r4, [r8, #4]
    4a80:	add	r1, pc, r1
    4a84:	bl	3ed0 <dcgettext@plt>
    4a88:	ldr	ip, [pc, #2480]	; 5440 <main@@Base+0x1008>
    4a8c:	ldr	r1, [pc, #2480]	; 5444 <main@@Base+0x100c>
    4a90:	ldr	r2, [pc, #2480]	; 5448 <main@@Base+0x1010>
    4a94:	add	ip, pc, ip
    4a98:	add	r1, pc, r1
    4a9c:	str	ip, [sp]
    4aa0:	add	r2, pc, r2
    4aa4:	mov	r3, r0
    4aa8:	mov	r0, r4
    4aac:	bl	76a8 <main@@Base+0x3270>
    4ab0:	ldr	r1, [pc, #2452]	; 544c <main@@Base+0x1014>
    4ab4:	mov	r2, #5
    4ab8:	mov	r0, #0
    4abc:	ldr	r4, [r8, #4]
    4ac0:	add	r1, pc, r1
    4ac4:	bl	3ed0 <dcgettext@plt>
    4ac8:	ldr	ip, [pc, #2432]	; 5450 <main@@Base+0x1018>
    4acc:	ldr	r1, [pc, #2432]	; 5454 <main@@Base+0x101c>
    4ad0:	ldr	r2, [pc, #2432]	; 5458 <main@@Base+0x1020>
    4ad4:	add	ip, pc, ip
    4ad8:	add	r1, pc, r1
    4adc:	str	ip, [sp]
    4ae0:	add	r2, pc, r2
    4ae4:	mov	r3, r0
    4ae8:	mov	r0, r4
    4aec:	bl	76a8 <main@@Base+0x3270>
    4af0:	ldr	r1, [pc, #2404]	; 545c <main@@Base+0x1024>
    4af4:	mov	r2, #5
    4af8:	mov	r0, #0
    4afc:	ldr	r4, [r8, #4]
    4b00:	add	r1, pc, r1
    4b04:	bl	3ed0 <dcgettext@plt>
    4b08:	ldr	ip, [pc, #2384]	; 5460 <main@@Base+0x1028>
    4b0c:	ldr	r1, [pc, #2384]	; 5464 <main@@Base+0x102c>
    4b10:	ldr	r2, [pc, #2384]	; 5468 <main@@Base+0x1030>
    4b14:	add	ip, pc, ip
    4b18:	add	r1, pc, r1
    4b1c:	str	ip, [sp]
    4b20:	add	r2, pc, r2
    4b24:	mov	r3, r0
    4b28:	mov	r0, r4
    4b2c:	bl	76a8 <main@@Base+0x3270>
    4b30:	ldr	r1, [pc, #2356]	; 546c <main@@Base+0x1034>
    4b34:	mov	r2, #5
    4b38:	mov	r0, #0
    4b3c:	ldr	r4, [r8, #4]
    4b40:	add	r1, pc, r1
    4b44:	bl	3ed0 <dcgettext@plt>
    4b48:	ldr	ip, [pc, #2336]	; 5470 <main@@Base+0x1038>
    4b4c:	ldr	r1, [pc, #2336]	; 5474 <main@@Base+0x103c>
    4b50:	mov	r2, #0
    4b54:	add	ip, pc, ip
    4b58:	str	ip, [sp]
    4b5c:	add	r1, pc, r1
    4b60:	mov	r3, r0
    4b64:	mov	r0, r4
    4b68:	bl	76a8 <main@@Base+0x3270>
    4b6c:	ldr	r1, [pc, #2308]	; 5478 <main@@Base+0x1040>
    4b70:	mov	r2, #5
    4b74:	mov	r0, #0
    4b78:	ldr	r4, [r8, #4]
    4b7c:	add	r1, pc, r1
    4b80:	bl	3ed0 <dcgettext@plt>
    4b84:	ldr	ip, [pc, #2288]	; 547c <main@@Base+0x1044>
    4b88:	ldr	r1, [pc, #2288]	; 5480 <main@@Base+0x1048>
    4b8c:	mov	r2, #0
    4b90:	add	ip, pc, ip
    4b94:	str	ip, [sp]
    4b98:	add	r1, pc, r1
    4b9c:	mov	r3, r0
    4ba0:	mov	r0, r4
    4ba4:	bl	76a8 <main@@Base+0x3270>
    4ba8:	ldr	r1, [pc, #2260]	; 5484 <main@@Base+0x104c>
    4bac:	mov	r2, #5
    4bb0:	mov	r0, #0
    4bb4:	ldr	r4, [r8, #4]
    4bb8:	add	r1, pc, r1
    4bbc:	bl	3ed0 <dcgettext@plt>
    4bc0:	ldr	ip, [pc, #2240]	; 5488 <main@@Base+0x1050>
    4bc4:	ldr	r1, [pc, #2240]	; 548c <main@@Base+0x1054>
    4bc8:	mov	r2, #0
    4bcc:	add	ip, pc, ip
    4bd0:	str	ip, [sp]
    4bd4:	add	r1, pc, r1
    4bd8:	mov	r3, r0
    4bdc:	mov	r0, r4
    4be0:	bl	76a8 <main@@Base+0x3270>
    4be4:	ldr	r1, [pc, #2212]	; 5490 <main@@Base+0x1058>
    4be8:	mov	r2, #5
    4bec:	mov	r0, #0
    4bf0:	ldr	r4, [r8, #4]
    4bf4:	add	r1, pc, r1
    4bf8:	bl	3ed0 <dcgettext@plt>
    4bfc:	ldr	ip, [pc, #2192]	; 5494 <main@@Base+0x105c>
    4c00:	ldr	r1, [pc, #2192]	; 5498 <main@@Base+0x1060>
    4c04:	mov	r2, #0
    4c08:	add	ip, pc, ip
    4c0c:	str	ip, [sp]
    4c10:	add	r1, pc, r1
    4c14:	mov	r3, r0
    4c18:	mov	r0, r4
    4c1c:	bl	76a8 <main@@Base+0x3270>
    4c20:	bl	229f0 <main@@Base+0x1e5b8>
    4c24:	mov	r1, #50	; 0x32
    4c28:	str	r0, [r8, #20]
    4c2c:	bl	22940 <main@@Base+0x1e508>
    4c30:	ldr	r0, [r8, #20]
    4c34:	mov	r1, #20
    4c38:	bl	22890 <main@@Base+0x1e458>
    4c3c:	bl	2395c <main@@Base+0x1f524>
    4c40:	add	r3, sp, #48	; 0x30
    4c44:	str	r0, [r8, #24]
    4c48:	str	r3, [sp, #20]
    4c4c:	mov	r1, r3
    4c50:	bl	236ec <main@@Base+0x1f2b4>
    4c54:	cmp	r0, #0
    4c58:	bne	4ccc <main@@Base+0x894>
    4c5c:	ldr	r1, [pc, #2104]	; 549c <main@@Base+0x1064>
    4c60:	mov	r2, #5
    4c64:	add	r1, pc, r1
    4c68:	bl	3ed0 <dcgettext@plt>
    4c6c:	ldr	r3, [sp, #48]	; 0x30
    4c70:	ldr	r2, [r3, #8]
    4c74:	mov	r1, r0
    4c78:	ldr	r0, [pc, #2080]	; 54a0 <main@@Base+0x1068>
    4c7c:	add	r0, pc, r0
    4c80:	bl	3fe4 <g_print@plt>
    4c84:	mov	r5, #0
    4c88:	mov	r4, #1
    4c8c:	ldr	r0, [sp, #48]	; 0x30
    4c90:	cmp	r0, #0
    4c94:	beq	4c9c <main@@Base+0x864>
    4c98:	bl	38e8 <g_error_free@plt>
    4c9c:	mov	r0, r8
    4ca0:	bl	6840 <main@@Base+0x2408>
    4ca4:	mov	r0, r5
    4ca8:	bl	3eac <g_free@plt>
    4cac:	ldr	r1, [sp, #16]
    4cb0:	ldr	r2, [sp, #220]	; 0xdc
    4cb4:	mov	r0, r4
    4cb8:	ldr	r3, [r1]
    4cbc:	cmp	r2, r3
    4cc0:	bne	520c <main@@Base+0xdd4>
    4cc4:	add	sp, sp, #228	; 0xe4
    4cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ccc:	bl	3d2c <g_cancellable_new@plt>
    4cd0:	ldr	r2, [pc, #1996]	; 54a4 <main@@Base+0x106c>
    4cd4:	mov	r3, #0
    4cd8:	str	r0, [r8]
    4cdc:	mov	r1, #2
    4ce0:	str	r3, [sp]
    4ce4:	mov	r0, r3
    4ce8:	add	r2, pc, r2
    4cec:	mov	r3, r8
    4cf0:	bl	4038 <g_unix_signal_add_full@plt>
    4cf4:	ldr	r1, [pc, #1964]	; 54a8 <main@@Base+0x1070>
    4cf8:	ldr	r0, [r8, #4]
    4cfc:	add	r1, pc, r1
    4d00:	bl	41f4 <g_ptr_array_sort@plt>
    4d04:	mov	r0, #0
    4d08:	bl	39fc <g_option_context_new@plt>
    4d0c:	str	r0, [sp, #12]
    4d10:	ldr	r0, [pc, #1940]	; 54ac <main@@Base+0x1074>
    4d14:	ldr	fp, [r8, #4]
    4d18:	add	r0, pc, r0
    4d1c:	bl	3990 <g_string_new@plt>
    4d20:	ldr	r3, [fp, #4]
    4d24:	mov	r4, r0
    4d28:	cmp	r3, #0
    4d2c:	beq	4e60 <main@@Base+0xa28>
    4d30:	ldr	r9, [pc, #1912]	; 54b0 <main@@Base+0x1078>
    4d34:	mov	sl, #0
    4d38:	ldr	r1, [pc, #1908]	; 54b4 <main@@Base+0x107c>
    4d3c:	mov	r6, sl
    4d40:	add	r9, pc, r9
    4d44:	mov	r7, #32
    4d48:	add	r1, pc, r1
    4d4c:	str	r8, [sp, #28]
    4d50:	str	r1, [sp, #8]
    4d54:	ldr	r3, [fp]
    4d58:	mov	r0, r4
    4d5c:	mov	r1, r9
    4d60:	ldr	r8, [r3, sl, lsl #2]
    4d64:	bl	4308 <g_string_append@plt>
    4d68:	mov	r0, r4
    4d6c:	ldr	r1, [r8]
    4d70:	bl	4308 <g_string_append@plt>
    4d74:	ldr	r0, [r8]
    4d78:	bl	411c <strlen@plt>
    4d7c:	ldr	r3, [r8, #4]
    4d80:	cmp	r3, #0
    4d84:	mov	r5, r0
    4d88:	addeq	r5, r0, #2
    4d8c:	beq	4db8 <main@@Base+0x980>
    4d90:	mov	r0, r4
    4d94:	ldr	r1, [sp, #8]
    4d98:	bl	4308 <g_string_append@plt>
    4d9c:	mov	r0, r4
    4da0:	ldr	r1, [r8, #4]
    4da4:	bl	4308 <g_string_append@plt>
    4da8:	ldr	r0, [r8, #4]
    4dac:	add	r5, r5, #3
    4db0:	bl	411c <strlen@plt>
    4db4:	add	r5, r5, r0
    4db8:	cmp	r5, #30
    4dbc:	bls	4de4 <main@@Base+0x9ac>
    4dc0:	b	4f1c <main@@Base+0xae4>
    4dc4:	ldr	r1, [r4]
    4dc8:	add	r5, r5, #1
    4dcc:	str	r2, [r4, #4]
    4dd0:	cmp	r5, #32
    4dd4:	strb	r7, [r1, r3]
    4dd8:	ldm	r4, {r2, r3}
    4ddc:	strb	r6, [r2, r3]
    4de0:	beq	4e14 <main@@Base+0x9dc>
    4de4:	ldr	r3, [r4, #4]
    4de8:	ldr	r1, [r4, #8]
    4dec:	add	r2, r3, #1
    4df0:	cmp	r2, r1
    4df4:	bcc	4dc4 <main@@Base+0x98c>
    4df8:	mov	r0, r4
    4dfc:	mvn	r1, #0
    4e00:	mov	r2, #32
    4e04:	bl	3cfc <g_string_insert_c@plt>
    4e08:	add	r5, r5, #1
    4e0c:	cmp	r5, #32
    4e10:	bne	4de4 <main@@Base+0x9ac>
    4e14:	ldr	r1, [r8, #8]
    4e18:	mov	r0, r4
    4e1c:	bl	4308 <g_string_append@plt>
    4e20:	ldr	r3, [r4, #4]
    4e24:	ldr	r1, [r4, #8]
    4e28:	add	r2, r3, #1
    4e2c:	cmp	r2, r1
    4e30:	bcs	4fcc <main@@Base+0xb94>
    4e34:	ldr	r1, [r4]
    4e38:	str	r2, [r4, #4]
    4e3c:	mov	r2, #10
    4e40:	strb	r2, [r1, r3]
    4e44:	ldm	r4, {r2, r3}
    4e48:	strb	r6, [r2, r3]
    4e4c:	ldr	r3, [fp, #4]
    4e50:	add	sl, sl, #1
    4e54:	cmp	sl, r3
    4e58:	bcc	4d54 <main@@Base+0x91c>
    4e5c:	ldr	r8, [sp, #28]
    4e60:	ldr	r1, [r4, #4]
    4e64:	cmp	r1, #0
    4e68:	bne	4ff4 <main@@Base+0xbbc>
    4e6c:	mov	r0, r4
    4e70:	mov	r1, #0
    4e74:	bl	40bc <g_string_free@plt>
    4e78:	mov	r5, r0
    4e7c:	ldr	r0, [sp, #12]
    4e80:	mov	r1, r5
    4e84:	bl	3a44 <g_option_context_set_summary@plt>
    4e88:	ldr	r1, [pc, #1576]	; 54b8 <main@@Base+0x1080>
    4e8c:	mov	r2, #5
    4e90:	mov	r0, #0
    4e94:	add	r1, pc, r1
    4e98:	bl	3ed0 <dcgettext@plt>
    4e9c:	bl	3f9c <g_set_application_name@plt>
    4ea0:	ldr	r0, [sp, #12]
    4ea4:	add	r1, sp, #52	; 0x34
    4ea8:	mov	r2, #0
    4eac:	bl	4074 <g_option_context_add_main_entries@plt>
    4eb0:	ldr	r0, [sp, #12]
    4eb4:	add	r1, sp, #36	; 0x24
    4eb8:	add	r2, sp, #32
    4ebc:	add	r3, sp, #48	; 0x30
    4ec0:	bl	3840 <g_option_context_parse@plt>
    4ec4:	cmp	r0, #0
    4ec8:	beq	5078 <main@@Base+0xc40>
    4ecc:	ldr	r3, [sp, #40]	; 0x28
    4ed0:	cmp	r3, #0
    4ed4:	bne	50a8 <main@@Base+0xc70>
    4ed8:	ldr	r4, [sp, #44]	; 0x2c
    4edc:	cmp	r4, #0
    4ee0:	beq	5004 <main@@Base+0xbcc>
    4ee4:	ldr	r0, [pc, #1488]	; 54bc <main@@Base+0x1084>
    4ee8:	ldr	r1, [pc, #1488]	; 54c0 <main@@Base+0x1088>
    4eec:	ldr	r2, [pc, #1488]	; 54c4 <main@@Base+0x108c>
    4ef0:	add	r0, pc, r0
    4ef4:	add	r1, pc, r1
    4ef8:	add	r2, pc, r2
    4efc:	bl	3fe4 <g_print@plt>
    4f00:	mov	r4, #0
    4f04:	ldr	r3, [sp, #12]
    4f08:	cmp	r3, #0
    4f0c:	beq	4c8c <main@@Base+0x854>
    4f10:	mov	r0, r3
    4f14:	bl	3e40 <g_option_context_free@plt>
    4f18:	b	4c8c <main@@Base+0x854>
    4f1c:	ldr	r3, [r4, #4]
    4f20:	ldr	r1, [r4, #8]
    4f24:	add	r2, r3, #1
    4f28:	cmp	r2, r1
    4f2c:	bcs	4fe0 <main@@Base+0xba8>
    4f30:	ldr	r1, [r4]
    4f34:	str	r2, [r4, #4]
    4f38:	mov	r2, #10
    4f3c:	strb	r2, [r1, r3]
    4f40:	ldm	r4, {r2, r3}
    4f44:	strb	r6, [r2, r3]
    4f48:	mov	r5, #32
    4f4c:	b	4f6c <main@@Base+0xb34>
    4f50:	ldr	r1, [r4]
    4f54:	subs	r5, r5, #1
    4f58:	str	r2, [r4, #4]
    4f5c:	strb	r7, [r1, r3]
    4f60:	ldm	r4, {r2, r3}
    4f64:	strb	r6, [r2, r3]
    4f68:	beq	4f98 <main@@Base+0xb60>
    4f6c:	ldr	r3, [r4, #4]
    4f70:	ldr	r1, [r4, #8]
    4f74:	add	r2, r3, #1
    4f78:	cmp	r2, r1
    4f7c:	bcc	4f50 <main@@Base+0xb18>
    4f80:	mov	r0, r4
    4f84:	mvn	r1, #0
    4f88:	mov	r2, #32
    4f8c:	bl	3cfc <g_string_insert_c@plt>
    4f90:	subs	r5, r5, #1
    4f94:	bne	4f6c <main@@Base+0xb34>
    4f98:	ldr	r1, [r8, #8]
    4f9c:	mov	r0, r4
    4fa0:	bl	4308 <g_string_append@plt>
    4fa4:	ldr	r3, [r4, #4]
    4fa8:	ldr	r1, [r4, #8]
    4fac:	add	r2, r3, #1
    4fb0:	cmp	r2, r1
    4fb4:	bcc	4e34 <main@@Base+0x9fc>
    4fb8:	mov	r0, r4
    4fbc:	mvn	r1, #0
    4fc0:	mov	r2, #10
    4fc4:	bl	3cfc <g_string_insert_c@plt>
    4fc8:	b	4e4c <main@@Base+0xa14>
    4fcc:	mov	r0, r4
    4fd0:	mvn	r1, #0
    4fd4:	mov	r2, #10
    4fd8:	bl	3cfc <g_string_insert_c@plt>
    4fdc:	b	4e4c <main@@Base+0xa14>
    4fe0:	mov	r0, r4
    4fe4:	mvn	r1, #0
    4fe8:	mov	r2, #10
    4fec:	bl	3cfc <g_string_insert_c@plt>
    4ff0:	b	4f48 <main@@Base+0xb10>
    4ff4:	sub	r1, r1, #1
    4ff8:	mov	r0, r4
    4ffc:	bl	37f8 <g_string_set_size@plt>
    5000:	b	4e6c <main@@Base+0xa34>
    5004:	ldr	r3, [r8, #4]
    5008:	ldr	r9, [sp, #32]
    500c:	ldr	r2, [r3, #4]
    5010:	ldr	r7, [r9, #4]
    5014:	cmp	r2, #0
    5018:	bne	5034 <main@@Base+0xbfc>
    501c:	b	50c4 <main@@Base+0xc8c>
    5020:	ldr	r3, [r8, #4]
    5024:	add	r4, r4, #1
    5028:	ldr	r2, [r3, #4]
    502c:	cmp	r4, r2
    5030:	bcs	50c4 <main@@Base+0xc8c>
    5034:	ldr	r3, [r3]
    5038:	mov	r1, r7
    503c:	ldr	r6, [r3, r4, lsl #2]
    5040:	ldr	r0, [r6]
    5044:	bl	441c <g_strcmp0@plt>
    5048:	cmp	r0, #0
    504c:	bne	5020 <main@@Base+0xbe8>
    5050:	ldr	r3, [r6, #12]
    5054:	add	r1, r9, #8
    5058:	add	r2, sp, #48	; 0x30
    505c:	mov	r0, r8
    5060:	blx	r3
    5064:	cmp	r0, #0
    5068:	beq	50f4 <main@@Base+0xcbc>
    506c:	ldr	r0, [r8, #20]
    5070:	bl	4110 <g_object_unref@plt>
    5074:	b	4f00 <main@@Base+0xac8>
    5078:	ldr	r1, [pc, #1096]	; 54c8 <main@@Base+0x1090>
    507c:	mov	r2, #5
    5080:	add	r1, pc, r1
    5084:	bl	3ed0 <dcgettext@plt>
    5088:	ldr	r3, [sp, #48]	; 0x30
    508c:	ldr	r2, [r3, #8]
    5090:	mov	r1, r0
    5094:	ldr	r0, [pc, #1072]	; 54cc <main@@Base+0x1094>
    5098:	add	r0, pc, r0
    509c:	bl	3fe4 <g_print@plt>
    50a0:	mov	r4, #1
    50a4:	b	4f04 <main@@Base+0xacc>
    50a8:	ldr	r0, [pc, #1056]	; 54d0 <main@@Base+0x1098>
    50ac:	mov	r2, #0
    50b0:	ldr	r1, [pc, #1052]	; 54d4 <main@@Base+0x109c>
    50b4:	add	r0, pc, r0
    50b8:	add	r1, pc, r1
    50bc:	bl	38dc <g_setenv@plt>
    50c0:	b	4ed8 <main@@Base+0xaa0>
    50c4:	bl	40a4 <fwupd_error_quark@plt>
    50c8:	ldr	r1, [pc, #1032]	; 54d8 <main@@Base+0x10a0>
    50cc:	mov	r4, r0
    50d0:	mov	r2, #5
    50d4:	mov	r0, #0
    50d8:	add	r1, pc, r1
    50dc:	bl	3ed0 <dcgettext@plt>
    50e0:	mov	r1, r4
    50e4:	mov	r2, #0
    50e8:	mov	r3, r0
    50ec:	add	r0, sp, #48	; 0x30
    50f0:	bl	3ae0 <g_set_error_literal@plt>
    50f4:	ldr	r4, [sp, #48]	; 0x30
    50f8:	bl	40a4 <fwupd_error_quark@plt>
    50fc:	mov	r1, r0
    5100:	mov	r2, #0
    5104:	mov	r0, r4
    5108:	bl	3d68 <g_error_matches@plt>
    510c:	cmp	r0, #0
    5110:	beq	514c <main@@Base+0xd14>
    5114:	ldr	r0, [sp, #12]
    5118:	mov	r1, #1
    511c:	mov	r2, #0
    5120:	bl	417c <g_option_context_get_help@plt>
    5124:	ldr	r3, [sp, #48]	; 0x30
    5128:	mov	r6, r0
    512c:	ldr	r0, [pc, #936]	; 54dc <main@@Base+0x10a4>
    5130:	mov	r2, r6
    5134:	add	r0, pc, r0
    5138:	ldr	r1, [r3, #8]
    513c:	bl	3fe4 <g_print@plt>
    5140:	mov	r0, r6
    5144:	bl	3eac <g_free@plt>
    5148:	b	50a0 <main@@Base+0xc68>
    514c:	ldr	r3, [sp, #48]	; 0x30
    5150:	ldr	r0, [pc, #904]	; 54e0 <main@@Base+0x10a8>
    5154:	ldr	r1, [r3, #8]
    5158:	add	r0, pc, r0
    515c:	bl	3fe4 <g_print@plt>
    5160:	b	50a0 <main@@Base+0xc68>
    5164:	mov	r4, r0
    5168:	ldr	r0, [sp, #48]	; 0x30
    516c:	cmp	r0, #0
    5170:	beq	5178 <main@@Base+0xd40>
    5174:	bl	38e8 <g_error_free@plt>
    5178:	cmp	r8, #0
    517c:	beq	5188 <main@@Base+0xd50>
    5180:	mov	r0, r8
    5184:	bl	6840 <main@@Base+0x2408>
    5188:	mov	r0, r5
    518c:	bl	3eac <g_free@plt>
    5190:	mov	r0, r4
    5194:	bl	42f0 <_Unwind_Resume@plt>
    5198:	mov	r4, r0
    519c:	b	5178 <main@@Base+0xd40>
    51a0:	mov	r4, r0
    51a4:	mov	r0, r6
    51a8:	bl	3eac <g_free@plt>
    51ac:	ldr	r2, [sp, #12]
    51b0:	cmp	r2, #0
    51b4:	beq	5168 <main@@Base+0xd30>
    51b8:	mov	r0, r2
    51bc:	bl	3e40 <g_option_context_free@plt>
    51c0:	b	5168 <main@@Base+0xd30>
    51c4:	mov	r4, r0
    51c8:	mov	r6, #0
    51cc:	b	51a4 <main@@Base+0xd6c>
    51d0:	mov	r4, r0
    51d4:	mov	r5, #0
    51d8:	b	51ac <main@@Base+0xd74>
    51dc:	mov	r4, r0
    51e0:	mov	r5, #0
    51e4:	b	5168 <main@@Base+0xd30>
    51e8:	b	51dc <main@@Base+0xda4>
    51ec:	b	51dc <main@@Base+0xda4>
    51f0:	b	51d0 <main@@Base+0xd98>
    51f4:	mov	r4, r0
    51f8:	b	51ac <main@@Base+0xd74>
    51fc:	b	51dc <main@@Base+0xda4>
    5200:	b	51dc <main@@Base+0xda4>
    5204:	b	51dc <main@@Base+0xda4>
    5208:	b	51dc <main@@Base+0xda4>
    520c:	bl	3e4c <__stack_chk_fail@plt>
    5210:	mov	r4, r0
    5214:	b	5188 <main@@Base+0xd50>
    5218:	mov	r4, r0
    521c:	b	5180 <main@@Base+0xd48>
    5220:	b	51dc <main@@Base+0xda4>
    5224:	b	51dc <main@@Base+0xda4>
    5228:	b	51dc <main@@Base+0xda4>
    522c:	b	51dc <main@@Base+0xda4>
    5230:	mov	r4, r0
    5234:	mov	r5, #0
    5238:	b	5188 <main@@Base+0xd50>
    523c:	b	51dc <main@@Base+0xda4>
    5240:	b	51dc <main@@Base+0xda4>
    5244:	b	51dc <main@@Base+0xda4>
    5248:	b	51dc <main@@Base+0xda4>
    524c:	b	51dc <main@@Base+0xda4>
    5250:	b	51dc <main@@Base+0xda4>
    5254:	b	51dc <main@@Base+0xda4>
    5258:	b	51dc <main@@Base+0xda4>
    525c:	b	51dc <main@@Base+0xda4>
    5260:	b	51dc <main@@Base+0xda4>
    5264:	ldr	r8, [sp, #28]
    5268:	b	51d0 <main@@Base+0xd98>
    526c:	b	5264 <main@@Base+0xe2c>
    5270:	b	5264 <main@@Base+0xe2c>
    5274:	b	5264 <main@@Base+0xe2c>
    5278:	b	5264 <main@@Base+0xe2c>
    527c:	b	51dc <main@@Base+0xda4>
    5280:	b	51dc <main@@Base+0xda4>
    5284:	b	51dc <main@@Base+0xda4>
    5288:	b	51dc <main@@Base+0xda4>
    528c:	b	51dc <main@@Base+0xda4>
    5290:	b	51dc <main@@Base+0xda4>
    5294:	b	51dc <main@@Base+0xda4>
    5298:	b	51dc <main@@Base+0xda4>
    529c:	b	51dc <main@@Base+0xda4>
    52a0:	b	51dc <main@@Base+0xda4>
    52a4:	b	51dc <main@@Base+0xda4>
    52a8:	b	51dc <main@@Base+0xda4>
    52ac:	b	51dc <main@@Base+0xda4>
    52b0:	b	51dc <main@@Base+0xda4>
    52b4:	b	51dc <main@@Base+0xda4>
    52b8:	b	51dc <main@@Base+0xda4>
    52bc:	b	5264 <main@@Base+0xe2c>
    52c0:	b	5264 <main@@Base+0xe2c>
    52c4:	b	5264 <main@@Base+0xe2c>
    52c8:	b	51d0 <main@@Base+0xd98>
    52cc:	b	5264 <main@@Base+0xe2c>
    52d0:	b	5264 <main@@Base+0xe2c>
    52d4:	b	5264 <main@@Base+0xe2c>
    52d8:	andeq	sl, r3, r8, lsr r7
    52dc:	andeq	r0, r0, r0, lsr r4
    52e0:	andeq	r2, r2, ip, lsl r8
    52e4:	andeq	r1, r2, r0, ror r8
    52e8:	andeq	r1, r2, ip, lsl r9
    52ec:	andeq	r1, r2, r4, ror r8
    52f0:	andeq	r1, r2, r4, lsr #3
    52f4:	andeq	r1, r2, r8, lsl r9
    52f8:	andeq	r1, r2, r4, asr #16
    52fc:	ldrdeq	r1, [r2], -r0
    5300:	andeq	r1, r2, r4, asr r8
    5304:	andeq	r1, r2, r8, ror r8
    5308:	andeq	r1, r2, r8, ror r8
    530c:	andeq	r1, r2, r0, lsl #17
    5310:			; <UNDEFINED> instruction: 0x000218b0
    5314:			; <UNDEFINED> instruction: 0x000218b4
    5318:	andeq	r1, r2, r4, lsl #17
    531c:	andeq	r1, r2, r8, lsl #17
    5320:	andeq	r2, r0, r0, asr r2
    5324:	andeq	r1, r2, r4, ror #16
    5328:	andeq	r2, r0, r8, lsl lr
    532c:	andeq	r1, r2, r8, ror #16
    5330:	andeq	r1, r2, r8, ror #16
    5334:	andeq	r1, r2, r8, ror #16
    5338:	andeq	r2, r0, r0, ror r9
    533c:	andeq	r1, r2, r8, ror r8
    5340:	andeq	r1, r2, r8, ror r8
    5344:	andeq	r1, r2, r8, ror r8
    5348:	strdeq	r1, [r0], -r0
    534c:	andeq	r1, r2, r0, lsl #17
    5350:	andeq	r1, r2, r4, lsl #17
    5354:	andeq	r1, r2, r0, ror r8
    5358:	andeq	r1, r0, r4, lsr r4
    535c:	andeq	r1, r2, r8, ror r8
    5360:	andeq	r1, r2, ip, ror r8
    5364:	andeq	r1, r2, r8, ror #16
    5368:	andeq	r1, r0, r0, asr #29
    536c:	andeq	r1, r2, r8, ror r8
    5370:	andeq	r1, r2, ip, ror r8
    5374:	andeq	r1, r2, ip, ror #16
    5378:	andeq	r1, r0, ip, lsr #23
    537c:	andeq	r1, r2, ip, ror r8
    5380:	andeq	r1, r2, r4, lsl #17
    5384:	andeq	r1, r2, r0, ror r8
    5388:	andeq	r1, r0, r4, ror r8
    538c:	andeq	r1, r2, r0, lsl #17
    5390:	andeq	r1, r2, r4, lsl #17
    5394:	andeq	r1, r2, r4, ror r8
    5398:	andeq	r1, r0, ip, asr #12
    539c:	andeq	r1, r2, r4, lsl #17
    53a0:	andeq	r1, r2, ip, lsl #17
    53a4:	andeq	r1, r2, r8, ror r8
    53a8:	andeq	r1, r0, r8, ror r4
    53ac:	andeq	r1, r2, r8, lsl #17
    53b0:	muleq	r2, r8, r8
    53b4:	andeq	r1, r2, r4, lsl #17
    53b8:	andeq	r4, r0, ip, lsr r9
    53bc:	muleq	r2, r4, r8
    53c0:	andeq	r1, r2, ip, ror r8
    53c4:	andeq	r4, r0, r8, asr #19
    53c8:	ldrdeq	r4, [r2], -ip
    53cc:	andeq	r1, r2, r4, asr r8
    53d0:	andeq	r5, r0, r8, lsl #18
    53d4:	andeq	r1, r2, r4, ror #16
    53d8:	andeq	r0, r2, r8, ror sp
    53dc:	andeq	r1, r2, r4, asr #16
    53e0:	andeq	r5, r0, r4, ror r3
    53e4:	andeq	r1, r2, ip, asr r8
    53e8:	strdeq	r1, [r2], -r0
    53ec:	andeq	r1, r2, r0, asr #16
    53f0:	andeq	r4, r0, r4, asr #31
    53f4:	andeq	r3, r2, r0, ror #15
    53f8:	andeq	r1, r2, ip, lsr #16
    53fc:	muleq	r0, r8, r9
    5400:	andeq	r1, r2, r0, asr #16
    5404:	andeq	r1, r2, r0
    5408:	andeq	r1, r2, r4, lsr #16
    540c:	andeq	r3, r0, r0, asr r1
    5410:	andeq	r1, r2, r4, lsr r8
    5414:	andeq	r1, r2, ip, lsl r8
    5418:	andeq	r4, r0, ip, lsr #13
    541c:	andeq	r2, r2, r8, lsl #20
    5420:	andeq	r1, r2, r0, lsl r8
    5424:	andeq	r2, r0, r8, lsr lr
    5428:	andeq	r1, r2, ip, lsl r8
    542c:	andeq	r0, r2, r4, lsl #24
    5430:	strdeq	r1, [r2], -ip
    5434:	andeq	r6, r0, r4, ror #11
    5438:	andeq	r1, r2, r4, lsl #16
    543c:	andeq	r1, r2, ip, ror #15
    5440:	andeq	r3, r0, ip, ror pc
    5444:	andeq	r1, r2, ip, ror #15
    5448:	andeq	r1, r2, ip, ror #15
    544c:	strdeq	r1, [r2], -r0
    5450:	andeq	r3, r0, r4, asr ip
    5454:	strdeq	r1, [r2], -r0
    5458:	andeq	r1, r2, ip, lsr #15
    545c:	ldrdeq	r1, [r2], -r0
    5460:	andeq	r0, r0, r8, lsl #25
    5464:	ldrdeq	r1, [r2], -ip
    5468:	andeq	r1, r2, r4, ror #15
    546c:	ldrdeq	r1, [r2], -r4
    5470:	andeq	r5, r0, ip, asr sp
    5474:	andeq	r1, r2, r4, ror #15
    5478:	ldrdeq	r1, [r2], -r4
    547c:	andeq	r2, r0, ip, ror #2
    5480:	andeq	r1, r2, r0, ror #15
    5484:	ldrdeq	r1, [r2], -r0
    5488:	andeq	r1, r0, r0, lsl #29
    548c:	andeq	r1, r2, ip, asr #15
    5490:			; <UNDEFINED> instruction: 0x000217b8
    5494:	andeq	r1, r0, r0, ror ip
    5498:	ldrdeq	r1, [r2], -r0
    549c:	andeq	r1, r2, r8, lsl #15
    54a0:	andeq	r1, r2, r8, lsl #15
    54a4:	andeq	r0, r0, r4, ror #19
    54a8:			; <UNDEFINED> instruction: 0x000009bc
    54ac:	andeq	r0, r2, r8, ror #18
    54b0:	andeq	r1, r2, ip, asr #13
    54b4:	andeq	r2, r2, ip, lsl #10
    54b8:	andeq	r1, r2, ip, ror r5
    54bc:	andeq	r1, r2, r0, ror #10
    54c0:	andeq	r0, r2, r0, lsr #30
    54c4:	andeq	r1, r2, r0, ror #10
    54c8:	muleq	r2, ip, r3
    54cc:	andeq	r1, r2, ip, ror #6
    54d0:	andeq	r1, r2, r4, lsl #7
    54d4:	muleq	r2, r4, r3
    54d8:	andeq	r1, r2, r8, lsl #7
    54dc:	andeq	r1, r2, r0, asr #6
    54e0:			; <UNDEFINED> instruction: 0x000212b0
    54e4:	mov	fp, #0
    54e8:	mov	lr, #0
    54ec:	pop	{r1}		; (ldr r1, [sp], #4)
    54f0:	mov	r2, sp
    54f4:	push	{r2}		; (str r2, [sp, #-4]!)
    54f8:	push	{r0}		; (str r0, [sp, #-4]!)
    54fc:	ldr	sl, [pc, #40]	; 552c <main@@Base+0x10f4>
    5500:	add	r3, pc, #36	; 0x24
    5504:	add	sl, sl, r3
    5508:	ldr	ip, [pc, #32]	; 5530 <main@@Base+0x10f8>
    550c:	ldr	ip, [sl, ip]
    5510:	push	{ip}		; (str ip, [sp, #-4]!)
    5514:	ldr	r3, [pc, #24]	; 5534 <main@@Base+0x10fc>
    5518:	ldr	r3, [sl, r3]
    551c:	ldr	r0, [pc, #20]	; 5538 <main@@Base+0x1100>
    5520:	ldr	r0, [sl, r0]
    5524:	bl	438c <__libc_start_main@plt>
    5528:	bl	3c90 <abort@plt>
    552c:	andeq	r9, r3, ip, asr r6
    5530:	andeq	r0, r0, r8, ror #8
    5534:	andeq	r0, r0, ip, asr r4
    5538:	andeq	r0, r0, ip, lsr r4
    553c:	ldr	r3, [pc, #20]	; 5558 <main@@Base+0x1120>
    5540:	ldr	r2, [pc, #20]	; 555c <main@@Base+0x1124>
    5544:	add	r3, pc, r3
    5548:	ldr	r2, [r3, r2]
    554c:	cmp	r2, #0
    5550:	bxeq	lr
    5554:	b	43bc <__gmon_start__@plt>
    5558:	andeq	r9, r3, ip, lsr r6
    555c:	andeq	r0, r0, ip, ror #8
    5560:	ldr	r2, [pc, #60]	; 55a4 <main@@Base+0x116c>
    5564:	ldr	r0, [pc, #60]	; 55a8 <main@@Base+0x1170>
    5568:	add	r2, pc, r2
    556c:	add	r0, pc, r0
    5570:	add	r2, r2, #3
    5574:	rsb	r2, r0, r2
    5578:	push	{r3, lr}
    557c:	cmp	r2, #6
    5580:	ldr	r3, [pc, #36]	; 55ac <main@@Base+0x1174>
    5584:	add	r3, pc, r3
    5588:	popls	{r3, pc}
    558c:	ldr	r2, [pc, #28]	; 55b0 <main@@Base+0x1178>
    5590:	ldr	r3, [r3, r2]
    5594:	cmp	r3, #0
    5598:	popeq	{r3, pc}
    559c:	blx	r3
    55a0:	pop	{r3, pc}
    55a4:	muleq	r3, r4, sl
    55a8:	muleq	r3, r0, sl
    55ac:	strdeq	r9, [r3], -ip
    55b0:	andeq	r0, r0, r4, ror #8
    55b4:	push	{r3, lr}
    55b8:	ldr	r0, [pc, #64]	; 5600 <main@@Base+0x11c8>
    55bc:	ldr	r3, [pc, #64]	; 5604 <main@@Base+0x11cc>
    55c0:	add	r0, pc, r0
    55c4:	ldr	r2, [pc, #60]	; 5608 <main@@Base+0x11d0>
    55c8:	add	r3, pc, r3
    55cc:	rsb	r3, r0, r3
    55d0:	add	r2, pc, r2
    55d4:	asr	r3, r3, #2
    55d8:	add	r3, r3, r3, lsr #31
    55dc:	asrs	r3, r3, #1
    55e0:	popeq	{r3, pc}
    55e4:	ldr	r1, [pc, #32]	; 560c <main@@Base+0x11d4>
    55e8:	ldr	r2, [r2, r1]
    55ec:	cmp	r2, #0
    55f0:	popeq	{r3, pc}
    55f4:	mov	r1, r3
    55f8:	blx	r2
    55fc:	pop	{r3, pc}
    5600:	andeq	r9, r3, ip, lsr sl
    5604:	andeq	r9, r3, r4, lsr sl
    5608:			; <UNDEFINED> instruction: 0x000395b0
    560c:	andeq	r0, r0, r0, ror r4
    5610:	ldr	r2, [pc, #76]	; 5664 <main@@Base+0x122c>
    5614:	push	{r3, lr}
    5618:	add	r2, pc, r2
    561c:	ldr	r3, [pc, #68]	; 5668 <main@@Base+0x1230>
    5620:	ldrb	r2, [r2]
    5624:	add	r3, pc, r3
    5628:	cmp	r2, #0
    562c:	popne	{r3, pc}
    5630:	ldr	r2, [pc, #52]	; 566c <main@@Base+0x1234>
    5634:	ldr	r3, [r3, r2]
    5638:	cmp	r3, #0
    563c:	beq	564c <main@@Base+0x1214>
    5640:	ldr	r0, [pc, #40]	; 5670 <main@@Base+0x1238>
    5644:	add	r0, pc, r0
    5648:	bl	43d4 <__cxa_finalize@plt>
    564c:	bl	5560 <main@@Base+0x1128>
    5650:	ldr	r3, [pc, #28]	; 5674 <main@@Base+0x123c>
    5654:	mov	r2, #1
    5658:	add	r3, pc, r3
    565c:	strb	r2, [r3]
    5660:	pop	{r3, pc}
    5664:	andeq	r9, r3, r4, ror #19
    5668:	andeq	r9, r3, ip, asr r5
    566c:	andeq	r0, r0, r4, ror r4
    5670:	andeq	r9, r3, r8, ror #7
    5674:	andeq	r9, r3, r4, lsr #19
    5678:	ldr	r0, [pc, #52]	; 56b4 <main@@Base+0x127c>
    567c:	push	{r3, lr}
    5680:	add	r0, pc, r0
    5684:	ldr	r3, [pc, #44]	; 56b8 <main@@Base+0x1280>
    5688:	ldr	r2, [r0]
    568c:	add	r3, pc, r3
    5690:	cmp	r2, #0
    5694:	beq	56ac <main@@Base+0x1274>
    5698:	ldr	r2, [pc, #28]	; 56bc <main@@Base+0x1284>
    569c:	ldr	r3, [r3, r2]
    56a0:	cmp	r3, #0
    56a4:	beq	56ac <main@@Base+0x1274>
    56a8:	blx	r3
    56ac:	pop	{r3, lr}
    56b0:	b	55b4 <main@@Base+0x117c>
    56b4:	andeq	r9, r3, r8, lsr #7
    56b8:	strdeq	r9, [r3], -r4
    56bc:	andeq	r0, r0, r0, asr r4
    56c0:	ldr	r2, [r0]
    56c4:	ldr	r3, [r1]
    56c8:	ldr	r0, [r2]
    56cc:	ldr	r1, [r3]
    56d0:	b	441c <g_strcmp0@plt>
    56d4:	push	{r4, lr}
    56d8:	mov	r4, r0
    56dc:	ldr	r2, [pc, #32]	; 5704 <main@@Base+0x12cc>
    56e0:	mov	r1, #128	; 0x80
    56e4:	ldr	r0, [pc, #28]	; 5708 <main@@Base+0x12d0>
    56e8:	add	r2, pc, r2
    56ec:	add	r0, pc, r0
    56f0:	bl	3a38 <g_log@plt>
    56f4:	ldr	r0, [r4]
    56f8:	bl	3a68 <g_cancellable_cancel@plt>
    56fc:	mov	r0, #0
    5700:	pop	{r4, pc}
    5704:			; <UNDEFINED> instruction: 0x0001f7b0
    5708:	andeq	pc, r1, r0, lsr #15
    570c:	push	{r4, r5, r6, r7, r8, lr}
    5710:	subs	r4, r2, #0
    5714:	ldr	r6, [pc, #120]	; 5794 <main@@Base+0x135c>
    5718:	mov	r5, #0
    571c:	mov	r7, r0
    5720:	mov	r8, r1
    5724:	add	r6, pc, r6
    5728:	beq	5740 <main@@Base+0x1308>
    572c:	add	r5, r5, #1
    5730:	mov	r0, r6
    5734:	bl	3fe4 <g_print@plt>
    5738:	cmp	r5, r4
    573c:	bne	572c <main@@Base+0x12f4>
    5740:	ldr	r0, [pc, #80]	; 5798 <main@@Base+0x1360>
    5744:	mov	r1, r7
    5748:	ldr	r5, [pc, #76]	; 579c <main@@Base+0x1364>
    574c:	add	r0, pc, r0
    5750:	bl	3fe4 <g_print@plt>
    5754:	mov	r0, r7
    5758:	bl	411c <strlen@plt>
    575c:	add	r5, pc, r5
    5760:	add	r4, r0, r4
    5764:	cmp	r4, #14
    5768:	bhi	5780 <main@@Base+0x1348>
    576c:	add	r4, r4, #1
    5770:	mov	r0, r5
    5774:	bl	3fe4 <g_print@plt>
    5778:	cmp	r4, #15
    577c:	bne	576c <main@@Base+0x1334>
    5780:	ldr	r0, [pc, #24]	; 57a0 <main@@Base+0x1368>
    5784:	mov	r1, r8
    5788:	pop	{r4, r5, r6, r7, r8, lr}
    578c:	add	r0, pc, r0
    5790:	b	3fe4 <g_print@plt>
    5794:	andeq	r1, r2, r0, lsr fp
    5798:	andeq	pc, r1, ip, asr r7	; <UNPREDICTABLE>
    579c:	strdeq	r1, [r2], -r8
    57a0:	andeq	r0, r2, ip, ror ip
    57a4:	push	{r3, r4, r5, r6, r7, lr}
    57a8:	mov	r0, r1
    57ac:	mov	r4, r1
    57b0:	mov	r7, r2
    57b4:	bl	3e34 <g_strv_length@plt>
    57b8:	cmp	r0, #2
    57bc:	bhi	57e8 <main@@Base+0x13b0>
    57c0:	bl	40a4 <fwupd_error_quark@plt>
    57c4:	ldr	r3, [pc, #288]	; 58ec <main@@Base+0x14b4>
    57c8:	mov	r1, r0
    57cc:	mov	r2, #0
    57d0:	mov	r0, r7
    57d4:	add	r3, pc, r3
    57d8:	bl	3ae0 <g_set_error_literal@plt>
    57dc:	mov	r4, #0
    57e0:	mov	r0, r4
    57e4:	pop	{r3, r4, r5, r6, r7, pc}
    57e8:	ldr	r0, [r4]
    57ec:	bl	4218 <g_file_new_for_path@plt>
    57f0:	mov	r6, r0
    57f4:	bl	11258 <main@@Base+0xce20>
    57f8:	mov	r1, r6
    57fc:	mov	r2, #0
    5800:	mov	r3, r7
    5804:	mov	r5, r0
    5808:	bl	11ddc <main@@Base+0xd9a4>
    580c:	cmp	r0, #0
    5810:	bne	5840 <main@@Base+0x1408>
    5814:	mov	r4, #0
    5818:	cmp	r6, #0
    581c:	beq	5828 <main@@Base+0x13f0>
    5820:	mov	r0, r6
    5824:	bl	4110 <g_object_unref@plt>
    5828:	cmp	r5, #0
    582c:	beq	57e0 <main@@Base+0x13a8>
    5830:	mov	r0, r5
    5834:	bl	4110 <g_object_unref@plt>
    5838:	mov	r0, r4
    583c:	pop	{r3, r4, r5, r6, r7, pc}
    5840:	mov	r0, r5
    5844:	bl	118e0 <main@@Base+0xd4a8>
    5848:	cmp	r0, #1
    584c:	beq	5874 <main@@Base+0x143c>
    5850:	mov	r0, r5
    5854:	ldmib	r4, {r1, r2}
    5858:	bl	12088 <main@@Base+0xdc50>
    585c:	mov	r0, r5
    5860:	mov	r1, r6
    5864:	mov	r2, r7
    5868:	bl	12420 <main@@Base+0xdfe8>
    586c:	mov	r4, r0
    5870:	b	5818 <main@@Base+0x13e0>
    5874:	bl	40a4 <fwupd_error_quark@plt>
    5878:	ldr	r3, [pc, #112]	; 58f0 <main@@Base+0x14b8>
    587c:	mov	r1, r0
    5880:	mov	r2, #0
    5884:	mov	r0, r7
    5888:	add	r3, pc, r3
    588c:	bl	4350 <g_set_error@plt>
    5890:	b	5814 <main@@Base+0x13dc>
    5894:	mov	r4, r0
    5898:	mov	r5, #0
    589c:	cmp	r6, #0
    58a0:	beq	58ac <main@@Base+0x1474>
    58a4:	mov	r0, r6
    58a8:	bl	4110 <g_object_unref@plt>
    58ac:	cmp	r5, #0
    58b0:	beq	58bc <main@@Base+0x1484>
    58b4:	mov	r0, r5
    58b8:	bl	4110 <g_object_unref@plt>
    58bc:	mov	r0, r4
    58c0:	bl	42f0 <_Unwind_Resume@plt>
    58c4:	mov	r4, r0
    58c8:	mov	r5, #0
    58cc:	b	58ac <main@@Base+0x1474>
    58d0:	mov	r4, r0
    58d4:	b	589c <main@@Base+0x1464>
    58d8:	b	58c4 <main@@Base+0x148c>
    58dc:	b	58c4 <main@@Base+0x148c>
    58e0:	b	58c4 <main@@Base+0x148c>
    58e4:	mov	r4, r0
    58e8:	b	58ac <main@@Base+0x1474>
    58ec:	ldrdeq	pc, [r1], -r8
    58f0:	andeq	pc, r1, r8, ror r6	; <UNPREDICTABLE>
    58f4:	push	{r4, lr}
    58f8:	mov	r4, r1
    58fc:	ldr	r1, [pc, #40]	; 592c <main@@Base+0x14f4>
    5900:	mov	r2, #5
    5904:	mov	r0, #0
    5908:	add	r1, pc, r1
    590c:	bl	3ed0 <dcgettext@plt>
    5910:	mov	r1, r0
    5914:	ldr	r0, [pc, #20]	; 5930 <main@@Base+0x14f8>
    5918:	add	r0, pc, r0
    591c:	bl	3fe4 <g_print@plt>
    5920:	mov	r0, r4
    5924:	pop	{r4, lr}
    5928:	b	3a5c <g_main_loop_quit@plt>
    592c:	andeq	pc, r1, r8, lsr #12
    5930:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
    5934:	push	{r4, r5, r6, lr}
    5938:	mov	r4, r0
    593c:	ldr	r6, [r2, #20]
    5940:	bl	20e08 <main@@Base+0x1c9d0>
    5944:	mov	r5, r0
    5948:	mov	r0, r4
    594c:	bl	20f54 <main@@Base+0x1cb1c>
    5950:	mov	r1, r5
    5954:	mov	r2, r0
    5958:	mov	r0, r6
    595c:	pop	{r4, r5, r6, lr}
    5960:	b	226f8 <main@@Base+0x1e2c0>
    5964:	push	{r4, r5, r6, r7, r8, r9, lr}
    5968:	mov	r0, r1
    596c:	sub	sp, sp, #12
    5970:	mov	r6, r1
    5974:	mov	r9, r2
    5978:	bl	3e34 <g_strv_length@plt>
    597c:	cmp	r0, #1
    5980:	bls	59e0 <main@@Base+0x15a8>
    5984:	ldr	r0, [r6]
    5988:	bl	4218 <g_file_new_for_path@plt>
    598c:	mov	r7, r0
    5990:	bl	11258 <main@@Base+0xce20>
    5994:	mov	r1, r7
    5998:	mov	r2, #0
    599c:	mov	r3, r9
    59a0:	mov	r8, r0
    59a4:	bl	11ddc <main@@Base+0xd9a4>
    59a8:	cmp	r0, #0
    59ac:	bne	5a0c <main@@Base+0x15d4>
    59b0:	mov	r4, #0
    59b4:	cmp	r7, #0
    59b8:	beq	59c4 <main@@Base+0x158c>
    59bc:	mov	r0, r7
    59c0:	bl	4110 <g_object_unref@plt>
    59c4:	cmp	r8, #0
    59c8:	beq	59d4 <main@@Base+0x159c>
    59cc:	mov	r0, r8
    59d0:	bl	4110 <g_object_unref@plt>
    59d4:	mov	r0, r4
    59d8:	add	sp, sp, #12
    59dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
    59e0:	bl	40a4 <fwupd_error_quark@plt>
    59e4:	ldr	r3, [pc, #244]	; 5ae0 <main@@Base+0x16a8>
    59e8:	mov	r1, r0
    59ec:	mov	r2, #0
    59f0:	mov	r0, r9
    59f4:	add	r3, pc, r3
    59f8:	bl	3ae0 <g_set_error_literal@plt>
    59fc:	mov	r4, #0
    5a00:	mov	r0, r4
    5a04:	add	sp, sp, #12
    5a08:	pop	{r4, r5, r6, r7, r8, r9, pc}
    5a0c:	ldr	r0, [r6, #4]
    5a10:	mov	r1, #0
    5a14:	mov	r2, #16
    5a18:	bl	4284 <g_ascii_strtoull@plt>
    5a1c:	mov	r2, r0
    5a20:	subs	r0, r0, #1
    5a24:	sbc	r1, r1, #0
    5a28:	movw	r4, #65534	; 0xfffe
    5a2c:	mov	r5, #0
    5a30:	cmp	r1, r5
    5a34:	cmpeq	r0, r4
    5a38:	bhi	5a60 <main@@Base+0x1628>
    5a3c:	uxth	r1, r2
    5a40:	mov	r0, r8
    5a44:	bl	11970 <main@@Base+0xd538>
    5a48:	mov	r0, r8
    5a4c:	mov	r1, r7
    5a50:	mov	r2, r9
    5a54:	bl	12420 <main@@Base+0xdfe8>
    5a58:	mov	r4, r0
    5a5c:	b	59b4 <main@@Base+0x157c>
    5a60:	bl	40a4 <fwupd_error_quark@plt>
    5a64:	ldr	ip, [r6, #4]
    5a68:	mov	r1, r0
    5a6c:	ldr	r3, [pc, #112]	; 5ae4 <main@@Base+0x16ac>
    5a70:	mov	r0, r9
    5a74:	mov	r2, #0
    5a78:	add	r3, pc, r3
    5a7c:	str	ip, [sp]
    5a80:	bl	4350 <g_set_error@plt>
    5a84:	b	59b0 <main@@Base+0x1578>
    5a88:	mov	r4, r0
    5a8c:	mov	r8, #0
    5a90:	cmp	r8, #0
    5a94:	beq	5aa0 <main@@Base+0x1668>
    5a98:	mov	r0, r8
    5a9c:	bl	4110 <g_object_unref@plt>
    5aa0:	mov	r0, r4
    5aa4:	bl	42f0 <_Unwind_Resume@plt>
    5aa8:	mov	r4, r0
    5aac:	cmp	r7, #0
    5ab0:	beq	5a90 <main@@Base+0x1658>
    5ab4:	mov	r0, r7
    5ab8:	bl	4110 <g_object_unref@plt>
    5abc:	b	5a90 <main@@Base+0x1658>
    5ac0:	b	5a88 <main@@Base+0x1650>
    5ac4:	mov	r4, r0
    5ac8:	b	5a90 <main@@Base+0x1658>
    5acc:	mov	r4, r0
    5ad0:	mov	r8, #0
    5ad4:	b	5aac <main@@Base+0x1674>
    5ad8:	b	5a88 <main@@Base+0x1650>
    5adc:	b	5a88 <main@@Base+0x1650>
    5ae0:	andeq	pc, r1, r8, asr #10
    5ae4:	andeq	pc, r1, r4, lsl #10
    5ae8:	push	{r4, r5, r6, r7, r8, r9, lr}
    5aec:	mov	r0, r1
    5af0:	sub	sp, sp, #12
    5af4:	mov	r6, r1
    5af8:	mov	r9, r2
    5afc:	bl	3e34 <g_strv_length@plt>
    5b00:	cmp	r0, #1
    5b04:	bls	5b64 <main@@Base+0x172c>
    5b08:	ldr	r0, [r6]
    5b0c:	bl	4218 <g_file_new_for_path@plt>
    5b10:	mov	r7, r0
    5b14:	bl	11258 <main@@Base+0xce20>
    5b18:	mov	r1, r7
    5b1c:	mov	r2, #0
    5b20:	mov	r3, r9
    5b24:	mov	r8, r0
    5b28:	bl	11ddc <main@@Base+0xd9a4>
    5b2c:	cmp	r0, #0
    5b30:	bne	5b90 <main@@Base+0x1758>
    5b34:	mov	r4, #0
    5b38:	cmp	r7, #0
    5b3c:	beq	5b48 <main@@Base+0x1710>
    5b40:	mov	r0, r7
    5b44:	bl	4110 <g_object_unref@plt>
    5b48:	cmp	r8, #0
    5b4c:	beq	5b58 <main@@Base+0x1720>
    5b50:	mov	r0, r8
    5b54:	bl	4110 <g_object_unref@plt>
    5b58:	mov	r0, r4
    5b5c:	add	sp, sp, #12
    5b60:	pop	{r4, r5, r6, r7, r8, r9, pc}
    5b64:	bl	40a4 <fwupd_error_quark@plt>
    5b68:	ldr	r3, [pc, #244]	; 5c64 <main@@Base+0x182c>
    5b6c:	mov	r1, r0
    5b70:	mov	r2, #0
    5b74:	mov	r0, r9
    5b78:	add	r3, pc, r3
    5b7c:	bl	3ae0 <g_set_error_literal@plt>
    5b80:	mov	r4, #0
    5b84:	mov	r0, r4
    5b88:	add	sp, sp, #12
    5b8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    5b90:	ldr	r0, [r6, #4]
    5b94:	mov	r1, #0
    5b98:	mov	r2, #16
    5b9c:	bl	4284 <g_ascii_strtoull@plt>
    5ba0:	mov	r2, r0
    5ba4:	subs	r0, r0, #1
    5ba8:	sbc	r1, r1, #0
    5bac:	movw	r4, #65534	; 0xfffe
    5bb0:	mov	r5, #0
    5bb4:	cmp	r1, r5
    5bb8:	cmpeq	r0, r4
    5bbc:	bhi	5be4 <main@@Base+0x17ac>
    5bc0:	uxth	r1, r2
    5bc4:	mov	r0, r8
    5bc8:	bl	11a00 <main@@Base+0xd5c8>
    5bcc:	mov	r0, r8
    5bd0:	mov	r1, r7
    5bd4:	mov	r2, r9
    5bd8:	bl	12420 <main@@Base+0xdfe8>
    5bdc:	mov	r4, r0
    5be0:	b	5b38 <main@@Base+0x1700>
    5be4:	bl	40a4 <fwupd_error_quark@plt>
    5be8:	ldr	ip, [r6, #4]
    5bec:	mov	r1, r0
    5bf0:	ldr	r3, [pc, #112]	; 5c68 <main@@Base+0x1830>
    5bf4:	mov	r0, r9
    5bf8:	mov	r2, #0
    5bfc:	add	r3, pc, r3
    5c00:	str	ip, [sp]
    5c04:	bl	4350 <g_set_error@plt>
    5c08:	b	5b34 <main@@Base+0x16fc>
    5c0c:	mov	r4, r0
    5c10:	mov	r8, #0
    5c14:	cmp	r8, #0
    5c18:	beq	5c24 <main@@Base+0x17ec>
    5c1c:	mov	r0, r8
    5c20:	bl	4110 <g_object_unref@plt>
    5c24:	mov	r0, r4
    5c28:	bl	42f0 <_Unwind_Resume@plt>
    5c2c:	mov	r4, r0
    5c30:	cmp	r7, #0
    5c34:	beq	5c14 <main@@Base+0x17dc>
    5c38:	mov	r0, r7
    5c3c:	bl	4110 <g_object_unref@plt>
    5c40:	b	5c14 <main@@Base+0x17dc>
    5c44:	b	5c0c <main@@Base+0x17d4>
    5c48:	mov	r4, r0
    5c4c:	b	5c14 <main@@Base+0x17dc>
    5c50:	mov	r4, r0
    5c54:	mov	r8, #0
    5c58:	b	5c30 <main@@Base+0x17f8>
    5c5c:	b	5c0c <main@@Base+0x17d4>
    5c60:	b	5c0c <main@@Base+0x17d4>
    5c64:	andeq	pc, r1, r0, lsr #8
    5c68:	ldrdeq	pc, [r1], -ip
    5c6c:	push	{r4, r5, r6, r7, lr}
    5c70:	mov	r0, r1
    5c74:	sub	sp, sp, #12
    5c78:	mov	r4, r1
    5c7c:	mov	r7, r2
    5c80:	bl	3e34 <g_strv_length@plt>
    5c84:	cmp	r0, #1
    5c88:	bls	5ce8 <main@@Base+0x18b0>
    5c8c:	ldr	r0, [r4]
    5c90:	bl	4218 <g_file_new_for_path@plt>
    5c94:	mov	r5, r0
    5c98:	bl	11258 <main@@Base+0xce20>
    5c9c:	mov	r1, r5
    5ca0:	mov	r2, #0
    5ca4:	mov	r3, r7
    5ca8:	mov	r6, r0
    5cac:	bl	11ddc <main@@Base+0xd9a4>
    5cb0:	cmp	r0, #0
    5cb4:	bne	5d14 <main@@Base+0x18dc>
    5cb8:	mov	r4, #0
    5cbc:	cmp	r5, #0
    5cc0:	beq	5ccc <main@@Base+0x1894>
    5cc4:	mov	r0, r5
    5cc8:	bl	4110 <g_object_unref@plt>
    5ccc:	cmp	r6, #0
    5cd0:	beq	5cdc <main@@Base+0x18a4>
    5cd4:	mov	r0, r6
    5cd8:	bl	4110 <g_object_unref@plt>
    5cdc:	mov	r0, r4
    5ce0:	add	sp, sp, #12
    5ce4:	pop	{r4, r5, r6, r7, pc}
    5ce8:	bl	40a4 <fwupd_error_quark@plt>
    5cec:	ldr	r3, [pc, #256]	; 5df4 <main@@Base+0x19bc>
    5cf0:	mov	r1, r0
    5cf4:	mov	r2, #0
    5cf8:	mov	r0, r7
    5cfc:	add	r3, pc, r3
    5d00:	bl	3ae0 <g_set_error_literal@plt>
    5d04:	mov	r4, #0
    5d08:	mov	r0, r4
    5d0c:	add	sp, sp, #12
    5d10:	pop	{r4, r5, r6, r7, pc}
    5d14:	mov	r0, r6
    5d18:	bl	118e0 <main@@Base+0xd4a8>
    5d1c:	cmp	r0, #3
    5d20:	beq	5d44 <main@@Base+0x190c>
    5d24:	bl	40a4 <fwupd_error_quark@plt>
    5d28:	ldr	r3, [pc, #200]	; 5df8 <main@@Base+0x19c0>
    5d2c:	mov	r1, r0
    5d30:	mov	r2, #0
    5d34:	mov	r0, r7
    5d38:	add	r3, pc, r3
    5d3c:	bl	4350 <g_set_error@plt>
    5d40:	b	5cb8 <main@@Base+0x1880>
    5d44:	mov	r0, r6
    5d48:	bl	11420 <main@@Base+0xcfe8>
    5d4c:	cmp	r0, #0
    5d50:	beq	5d74 <main@@Base+0x193c>
    5d54:	ldr	r1, [r4, #4]
    5d58:	bl	16040 <main@@Base+0x11c08>
    5d5c:	mov	r0, r6
    5d60:	mov	r1, r5
    5d64:	mov	r2, r7
    5d68:	bl	12420 <main@@Base+0xdfe8>
    5d6c:	mov	r4, r0
    5d70:	b	5cbc <main@@Base+0x1884>
    5d74:	bl	40a4 <fwupd_error_quark@plt>
    5d78:	ldr	ip, [r4, #4]
    5d7c:	mov	r1, r0
    5d80:	ldr	r3, [pc, #116]	; 5dfc <main@@Base+0x19c4>
    5d84:	mov	r0, r7
    5d88:	mov	r2, #0
    5d8c:	add	r3, pc, r3
    5d90:	str	ip, [sp]
    5d94:	bl	4350 <g_set_error@plt>
    5d98:	b	5cb8 <main@@Base+0x1880>
    5d9c:	mov	r4, r0
    5da0:	mov	r6, #0
    5da4:	cmp	r5, #0
    5da8:	beq	5db4 <main@@Base+0x197c>
    5dac:	mov	r0, r5
    5db0:	bl	4110 <g_object_unref@plt>
    5db4:	cmp	r6, #0
    5db8:	beq	5dc4 <main@@Base+0x198c>
    5dbc:	mov	r0, r6
    5dc0:	bl	4110 <g_object_unref@plt>
    5dc4:	mov	r0, r4
    5dc8:	bl	42f0 <_Unwind_Resume@plt>
    5dcc:	mov	r4, r0
    5dd0:	mov	r6, #0
    5dd4:	b	5db4 <main@@Base+0x197c>
    5dd8:	b	5dcc <main@@Base+0x1994>
    5ddc:	b	5dcc <main@@Base+0x1994>
    5de0:	b	5dcc <main@@Base+0x1994>
    5de4:	mov	r4, r0
    5de8:	b	5db4 <main@@Base+0x197c>
    5dec:	mov	r4, r0
    5df0:	b	5da4 <main@@Base+0x196c>
    5df4:	strdeq	pc, [r1], -r8
    5df8:	andeq	pc, r1, r0, lsl #6
    5dfc:	ldrdeq	pc, [r1], -r8
    5e00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5e04:	mov	r0, r1
    5e08:	sub	sp, sp, #12
    5e0c:	mov	r9, r1
    5e10:	mov	fp, r2
    5e14:	bl	3e34 <g_strv_length@plt>
    5e18:	cmp	r0, #1
    5e1c:	bls	5e7c <main@@Base+0x1a44>
    5e20:	ldr	r0, [r9]
    5e24:	bl	4218 <g_file_new_for_path@plt>
    5e28:	mov	r8, r0
    5e2c:	bl	11258 <main@@Base+0xce20>
    5e30:	mov	r1, r8
    5e34:	mov	r2, #0
    5e38:	mov	r3, fp
    5e3c:	mov	sl, r0
    5e40:	bl	11ddc <main@@Base+0xd9a4>
    5e44:	cmp	r0, #0
    5e48:	bne	5ea8 <main@@Base+0x1a70>
    5e4c:	mov	r4, #0
    5e50:	cmp	r8, #0
    5e54:	beq	5e60 <main@@Base+0x1a28>
    5e58:	mov	r0, r8
    5e5c:	bl	4110 <g_object_unref@plt>
    5e60:	cmp	sl, #0
    5e64:	beq	5e70 <main@@Base+0x1a38>
    5e68:	mov	r0, sl
    5e6c:	bl	4110 <g_object_unref@plt>
    5e70:	mov	r0, r4
    5e74:	add	sp, sp, #12
    5e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5e7c:	bl	40a4 <fwupd_error_quark@plt>
    5e80:	ldr	r3, [pc, #336]	; 5fd8 <main@@Base+0x1ba0>
    5e84:	mov	r1, r0
    5e88:	mov	r2, #0
    5e8c:	mov	r0, fp
    5e90:	add	r3, pc, r3
    5e94:	bl	3ae0 <g_set_error_literal@plt>
    5e98:	mov	r4, #0
    5e9c:	mov	r0, r4
    5ea0:	add	sp, sp, #12
    5ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5ea8:	mov	r0, sl
    5eac:	bl	118e0 <main@@Base+0xd4a8>
    5eb0:	cmp	r0, #3
    5eb4:	beq	5ed8 <main@@Base+0x1aa0>
    5eb8:	bl	40a4 <fwupd_error_quark@plt>
    5ebc:	ldr	r3, [pc, #280]	; 5fdc <main@@Base+0x1ba4>
    5ec0:	mov	r1, r0
    5ec4:	mov	r2, #0
    5ec8:	mov	r0, fp
    5ecc:	add	r3, pc, r3
    5ed0:	bl	4350 <g_set_error@plt>
    5ed4:	b	5e4c <main@@Base+0x1a14>
    5ed8:	ldr	r0, [r9, #4]
    5edc:	mov	r1, #0
    5ee0:	mov	r2, #10
    5ee4:	bl	4284 <g_ascii_strtoull@plt>
    5ee8:	subs	r6, r0, #1
    5eec:	mov	r4, r0
    5ef0:	sbc	r7, r1, #0
    5ef4:	cmp	r7, #0
    5ef8:	cmpeq	r6, #254	; 0xfe
    5efc:	bhi	5f30 <main@@Base+0x1af8>
    5f00:	mov	r0, sl
    5f04:	bl	11420 <main@@Base+0xcfe8>
    5f08:	cmp	r0, #0
    5f0c:	beq	5f58 <main@@Base+0x1b20>
    5f10:	uxtb	r1, r4
    5f14:	bl	15fb0 <main@@Base+0x11b78>
    5f18:	mov	r0, sl
    5f1c:	mov	r1, r8
    5f20:	mov	r2, fp
    5f24:	bl	12420 <main@@Base+0xdfe8>
    5f28:	mov	r4, r0
    5f2c:	b	5e50 <main@@Base+0x1a18>
    5f30:	bl	40a4 <fwupd_error_quark@plt>
    5f34:	ldr	ip, [r9, #4]
    5f38:	mov	r1, r0
    5f3c:	ldr	r3, [pc, #156]	; 5fe0 <main@@Base+0x1ba8>
    5f40:	mov	r0, fp
    5f44:	mov	r2, #0
    5f48:	add	r3, pc, r3
    5f4c:	str	ip, [sp]
    5f50:	bl	4350 <g_set_error@plt>
    5f54:	b	5e4c <main@@Base+0x1a14>
    5f58:	bl	40a4 <fwupd_error_quark@plt>
    5f5c:	ldr	ip, [r9, #4]
    5f60:	mov	r1, r0
    5f64:	ldr	r3, [pc, #120]	; 5fe4 <main@@Base+0x1bac>
    5f68:	mov	r0, fp
    5f6c:	mov	r2, #0
    5f70:	add	r3, pc, r3
    5f74:	str	ip, [sp]
    5f78:	bl	4350 <g_set_error@plt>
    5f7c:	b	5e4c <main@@Base+0x1a14>
    5f80:	mov	r4, r0
    5f84:	mov	sl, #0
    5f88:	cmp	r8, #0
    5f8c:	beq	5f98 <main@@Base+0x1b60>
    5f90:	mov	r0, r8
    5f94:	bl	4110 <g_object_unref@plt>
    5f98:	cmp	sl, #0
    5f9c:	beq	5fa8 <main@@Base+0x1b70>
    5fa0:	mov	r0, sl
    5fa4:	bl	4110 <g_object_unref@plt>
    5fa8:	mov	r0, r4
    5fac:	bl	42f0 <_Unwind_Resume@plt>
    5fb0:	mov	r4, r0
    5fb4:	mov	sl, #0
    5fb8:	b	5f98 <main@@Base+0x1b60>
    5fbc:	b	5fb0 <main@@Base+0x1b78>
    5fc0:	b	5fb0 <main@@Base+0x1b78>
    5fc4:	b	5fb0 <main@@Base+0x1b78>
    5fc8:	mov	r4, r0
    5fcc:	b	5f98 <main@@Base+0x1b60>
    5fd0:	mov	r4, r0
    5fd4:	b	5f88 <main@@Base+0x1b50>
    5fd8:	andeq	pc, r1, r8, ror #3
    5fdc:	andeq	pc, r1, ip, ror #2
    5fe0:	andeq	pc, r1, r0, ror r1	; <UNPREDICTABLE>
    5fe4:	strdeq	pc, [r1], -r4
    5fe8:	ldr	r3, [pc, #724]	; 62c4 <main@@Base+0x1e8c>
    5fec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5ff0:	mov	r8, r1
    5ff4:	ldr	r1, [pc, #716]	; 62c8 <main@@Base+0x1e90>
    5ff8:	add	r3, pc, r3
    5ffc:	sub	sp, sp, #32
    6000:	mov	r0, r8
    6004:	mov	r7, r2
    6008:	mov	r2, #0
    600c:	ldr	r5, [r3, r1]
    6010:	str	r2, [sp, #20]
    6014:	ldr	r3, [r5]
    6018:	str	r3, [sp, #28]
    601c:	bl	3e34 <g_strv_length@plt>
    6020:	cmp	r0, #1
    6024:	bls	6094 <main@@Base+0x1c5c>
    6028:	ldr	r0, [r8]
    602c:	bl	4218 <g_file_new_for_path@plt>
    6030:	mov	r4, r0
    6034:	bl	11258 <main@@Base+0xce20>
    6038:	mov	r1, r4
    603c:	mov	r2, #0
    6040:	mov	r3, r7
    6044:	mov	r6, r0
    6048:	bl	11ddc <main@@Base+0xd9a4>
    604c:	cmp	r0, #0
    6050:	bne	60b8 <main@@Base+0x1c80>
    6054:	mov	r8, #0
    6058:	cmp	r4, #0
    605c:	beq	6068 <main@@Base+0x1c30>
    6060:	mov	r0, r4
    6064:	bl	4110 <g_object_unref@plt>
    6068:	cmp	r6, #0
    606c:	beq	6078 <main@@Base+0x1c40>
    6070:	mov	r0, r6
    6074:	bl	4110 <g_object_unref@plt>
    6078:	ldr	r2, [sp, #28]
    607c:	mov	r0, r8
    6080:	ldr	r3, [r5]
    6084:	cmp	r2, r3
    6088:	bne	6248 <main@@Base+0x1e10>
    608c:	add	sp, sp, #32
    6090:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6094:	bl	40a4 <fwupd_error_quark@plt>
    6098:	ldr	r3, [pc, #556]	; 62cc <main@@Base+0x1e94>
    609c:	mov	r1, r0
    60a0:	mov	r2, #0
    60a4:	mov	r0, r7
    60a8:	add	r3, pc, r3
    60ac:	bl	3ae0 <g_set_error_literal@plt>
    60b0:	mov	r8, #0
    60b4:	b	6078 <main@@Base+0x1c40>
    60b8:	ldr	r0, [r8, #4]
    60bc:	add	r1, sp, #20
    60c0:	mov	r2, #16
    60c4:	bl	4284 <g_ascii_strtoull@plt>
    60c8:	mov	r2, r0
    60cc:	mov	r3, r1
    60d0:	movw	r0, #65535	; 0xffff
    60d4:	mov	r1, #0
    60d8:	cmp	r3, r1
    60dc:	cmpeq	r2, r0
    60e0:	bhi	60f4 <main@@Base+0x1cbc>
    60e4:	ldr	r1, [sp, #20]
    60e8:	ldrb	r1, [r1]
    60ec:	cmp	r1, #0
    60f0:	beq	6170 <main@@Base+0x1d38>
    60f4:	ldr	r9, [r8, #4]
    60f8:	mvn	r2, #0
    60fc:	ldr	r1, [pc, #460]	; 62d0 <main@@Base+0x1e98>
    6100:	mov	r3, #0
    6104:	str	r3, [sp, #24]
    6108:	add	r1, pc, r1
    610c:	mov	r0, r9
    6110:	bl	3cb4 <g_strsplit@plt>
    6114:	mov	r8, r0
    6118:	bl	3e34 <g_strv_length@plt>
    611c:	cmp	r0, #2
    6120:	beq	6194 <main@@Base+0x1d5c>
    6124:	bl	40a4 <fwupd_error_quark@plt>
    6128:	ldr	r3, [pc, #420]	; 62d4 <main@@Base+0x1e9c>
    612c:	mov	r1, r0
    6130:	mov	r2, #0
    6134:	mov	r0, r7
    6138:	add	r3, pc, r3
    613c:	bl	3ae0 <g_set_error_literal@plt>
    6140:	cmp	r8, #0
    6144:	beq	6058 <main@@Base+0x1c20>
    6148:	movw	r9, #65535	; 0xffff
    614c:	mov	r0, r8
    6150:	bl	3e1c <g_strfreev@plt>
    6154:	uxth	r2, r9
    6158:	mov	r3, #0
    615c:	movw	r0, #65535	; 0xffff
    6160:	mov	r1, #0
    6164:	cmp	r3, r1
    6168:	cmpeq	r2, r0
    616c:	beq	6054 <main@@Base+0x1c1c>
    6170:	uxth	r1, r2
    6174:	mov	r0, r6
    6178:	bl	11a90 <main@@Base+0xd658>
    617c:	mov	r0, r6
    6180:	mov	r1, r4
    6184:	mov	r2, r7
    6188:	bl	12420 <main@@Base+0xdfe8>
    618c:	mov	r8, r0
    6190:	b	6058 <main@@Base+0x1c20>
    6194:	add	sl, sp, #24
    6198:	ldr	r0, [r8]
    619c:	mov	r2, #10
    61a0:	mov	r1, sl
    61a4:	bl	4284 <g_ascii_strtoull@plt>
    61a8:	cmp	r1, #0
    61ac:	cmpeq	r0, #255	; 0xff
    61b0:	strd	r0, [sp, #8]
    61b4:	bhi	61c8 <main@@Base+0x1d90>
    61b8:	ldr	r3, [sp, #24]
    61bc:	ldrb	r3, [r3]
    61c0:	cmp	r3, #0
    61c4:	beq	61ec <main@@Base+0x1db4>
    61c8:	bl	40a4 <fwupd_error_quark@plt>
    61cc:	ldr	r3, [pc, #260]	; 62d8 <main@@Base+0x1ea0>
    61d0:	mov	r1, r0
    61d4:	str	r9, [sp]
    61d8:	mov	r0, r7
    61dc:	mov	r2, #0
    61e0:	add	r3, pc, r3
    61e4:	bl	4350 <g_set_error@plt>
    61e8:	b	6148 <main@@Base+0x1d10>
    61ec:	mov	r1, sl
    61f0:	ldr	r0, [r8, #4]
    61f4:	mov	r2, #10
    61f8:	bl	4284 <g_ascii_strtoull@plt>
    61fc:	cmp	r1, #0
    6200:	cmpeq	r0, #255	; 0xff
    6204:	bhi	6224 <main@@Base+0x1dec>
    6208:	ldr	r3, [sp, #24]
    620c:	ldrb	r3, [r3]
    6210:	cmp	r3, #0
    6214:	ldreq	r2, [sp, #8]
    6218:	addeq	r0, r0, r2, lsl #8
    621c:	uxtheq	r9, r0
    6220:	beq	614c <main@@Base+0x1d14>
    6224:	bl	40a4 <fwupd_error_quark@plt>
    6228:	ldr	r3, [pc, #172]	; 62dc <main@@Base+0x1ea4>
    622c:	mov	r1, r0
    6230:	str	r9, [sp]
    6234:	mov	r0, r7
    6238:	mov	r2, #0
    623c:	add	r3, pc, r3
    6240:	bl	4350 <g_set_error@plt>
    6244:	b	6148 <main@@Base+0x1d10>
    6248:	bl	3e4c <__stack_chk_fail@plt>
    624c:	mov	r5, r0
    6250:	cmp	r6, #0
    6254:	beq	6260 <main@@Base+0x1e28>
    6258:	mov	r0, r6
    625c:	bl	4110 <g_object_unref@plt>
    6260:	mov	r0, r5
    6264:	bl	42f0 <_Unwind_Resume@plt>
    6268:	mov	r5, r0
    626c:	mov	r0, r8
    6270:	bl	3e1c <g_strfreev@plt>
    6274:	cmp	r4, #0
    6278:	beq	6250 <main@@Base+0x1e18>
    627c:	mov	r0, r4
    6280:	bl	4110 <g_object_unref@plt>
    6284:	b	6250 <main@@Base+0x1e18>
    6288:	cmp	r8, #0
    628c:	mov	r5, r0
    6290:	bne	626c <main@@Base+0x1e34>
    6294:	b	6274 <main@@Base+0x1e3c>
    6298:	mov	r5, r0
    629c:	mov	r6, #0
    62a0:	b	6250 <main@@Base+0x1e18>
    62a4:	mov	r5, r0
    62a8:	b	6274 <main@@Base+0x1e3c>
    62ac:	mov	r5, r0
    62b0:	mov	r6, #0
    62b4:	b	6274 <main@@Base+0x1e3c>
    62b8:	b	6298 <main@@Base+0x1e60>
    62bc:	b	6298 <main@@Base+0x1e60>
    62c0:	b	6298 <main@@Base+0x1e60>
    62c4:	andeq	r8, r3, r8, lsl #23
    62c8:	andeq	r0, r0, r0, lsr r4
    62cc:	andeq	pc, r1, ip, lsr r0	; <UNPREDICTABLE>
    62d0:			; <UNDEFINED> instruction: 0x000213bc
    62d4:	strdeq	lr, [r1], -r0
    62d8:	andeq	lr, r1, r0, ror pc
    62dc:	andeq	lr, r1, r4, lsl pc
    62e0:	ldr	r3, [pc, #676]	; 658c <main@@Base+0x2154>
    62e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    62e8:	mov	r6, r1
    62ec:	ldr	r1, [pc, #668]	; 6590 <main@@Base+0x2158>
    62f0:	add	r3, pc, r3
    62f4:	sub	sp, sp, #28
    62f8:	mov	r0, r6
    62fc:	mov	sl, r2
    6300:	ldr	r7, [r3, r1]
    6304:	ldr	r3, [r7]
    6308:	str	r3, [sp, #20]
    630c:	bl	3e34 <g_strv_length@plt>
    6310:	cmp	r0, #1
    6314:	bls	6384 <main@@Base+0x1f4c>
    6318:	ldr	r0, [r6]
    631c:	bl	4218 <g_file_new_for_path@plt>
    6320:	mov	r8, r0
    6324:	bl	11258 <main@@Base+0xce20>
    6328:	mov	r1, r8
    632c:	mov	r2, #0
    6330:	mov	r3, sl
    6334:	mov	r9, r0
    6338:	bl	11ddc <main@@Base+0xd9a4>
    633c:	cmp	r0, #0
    6340:	bne	63a8 <main@@Base+0x1f70>
    6344:	mov	r4, #0
    6348:	cmp	r8, #0
    634c:	beq	6358 <main@@Base+0x1f20>
    6350:	mov	r0, r8
    6354:	bl	4110 <g_object_unref@plt>
    6358:	cmp	r9, #0
    635c:	beq	6368 <main@@Base+0x1f30>
    6360:	mov	r0, r9
    6364:	bl	4110 <g_object_unref@plt>
    6368:	ldr	r2, [sp, #20]
    636c:	mov	r0, r4
    6370:	ldr	r3, [r7]
    6374:	cmp	r2, r3
    6378:	bne	655c <main@@Base+0x2124>
    637c:	add	sp, sp, #28
    6380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6384:	bl	40a4 <fwupd_error_quark@plt>
    6388:	ldr	r3, [pc, #516]	; 6594 <main@@Base+0x215c>
    638c:	mov	r1, r0
    6390:	mov	r2, #0
    6394:	mov	r0, sl
    6398:	add	r3, pc, r3
    639c:	bl	3ae0 <g_set_error_literal@plt>
    63a0:	mov	r4, #0
    63a4:	b	6368 <main@@Base+0x1f30>
    63a8:	mov	r0, r9
    63ac:	bl	118e0 <main@@Base+0xd4a8>
    63b0:	cmp	r0, #3
    63b4:	beq	6420 <main@@Base+0x1fe8>
    63b8:	add	fp, sp, #16
    63bc:	ldr	r0, [r6, #4]
    63c0:	mov	r2, #16
    63c4:	mov	r1, fp
    63c8:	bl	4284 <g_ascii_strtoull@plt>
    63cc:	mov	r4, r0
    63d0:	mov	r5, r1
    63d4:	movw	r2, #65535	; 0xffff
    63d8:	mov	r3, #0
    63dc:	cmp	r5, r3
    63e0:	cmpeq	r4, r2
    63e4:	bhi	63f8 <main@@Base+0x1fc0>
    63e8:	ldr	r3, [sp, #16]
    63ec:	ldrb	r3, [r3]
    63f0:	cmp	r3, #0
    63f4:	beq	6440 <main@@Base+0x2008>
    63f8:	bl	40a4 <fwupd_error_quark@plt>
    63fc:	ldr	ip, [r6, #4]
    6400:	mov	r1, r0
    6404:	ldr	r3, [pc, #396]	; 6598 <main@@Base+0x2160>
    6408:	mov	r0, sl
    640c:	mov	r2, #0
    6410:	add	r3, pc, r3
    6414:	str	ip, [sp]
    6418:	bl	4350 <g_set_error@plt>
    641c:	b	6344 <main@@Base+0x1f0c>
    6420:	bl	40a4 <fwupd_error_quark@plt>
    6424:	ldr	r3, [pc, #368]	; 659c <main@@Base+0x2164>
    6428:	mov	r1, r0
    642c:	mov	r2, #0
    6430:	mov	r0, sl
    6434:	add	r3, pc, r3
    6438:	bl	4350 <g_set_error@plt>
    643c:	b	6344 <main@@Base+0x1f0c>
    6440:	mov	r0, r6
    6444:	bl	3e34 <g_strv_length@plt>
    6448:	cmp	r0, #3
    644c:	movls	r2, #0
    6450:	movls	r3, #0
    6454:	strdls	r2, [sp, #8]
    6458:	bhi	64ac <main@@Base+0x2074>
    645c:	orrs	r3, r4, r5
    6460:	beq	6494 <main@@Base+0x205c>
    6464:	mov	r0, r9
    6468:	bl	11420 <main@@Base+0xcfe8>
    646c:	cmp	r0, #0
    6470:	beq	6504 <main@@Base+0x20cc>
    6474:	mov	r1, #0
    6478:	bl	15b70 <main@@Base+0x11738>
    647c:	ldrb	r1, [sp, #8]
    6480:	mov	r6, r0
    6484:	bl	10d78 <main@@Base+0xc940>
    6488:	mov	r0, r6
    648c:	mov	r1, r4
    6490:	bl	10e08 <main@@Base+0xc9d0>
    6494:	mov	r2, sl
    6498:	mov	r0, r9
    649c:	mov	r1, r8
    64a0:	bl	12420 <main@@Base+0xdfe8>
    64a4:	mov	r4, r0
    64a8:	b	6348 <main@@Base+0x1f10>
    64ac:	mov	r1, fp
    64b0:	ldr	r0, [r6, #8]
    64b4:	mov	r2, #16
    64b8:	bl	4284 <g_ascii_strtoull@plt>
    64bc:	cmp	r1, #0
    64c0:	cmpeq	r0, #255	; 0xff
    64c4:	strd	r0, [sp, #8]
    64c8:	bhi	64dc <main@@Base+0x20a4>
    64cc:	ldr	r3, [sp, #16]
    64d0:	ldrb	r3, [r3]
    64d4:	cmp	r3, #0
    64d8:	beq	645c <main@@Base+0x2024>
    64dc:	bl	40a4 <fwupd_error_quark@plt>
    64e0:	ldr	ip, [r6, #8]
    64e4:	mov	r1, r0
    64e8:	ldr	r3, [pc, #176]	; 65a0 <main@@Base+0x2168>
    64ec:	mov	r0, sl
    64f0:	mov	r2, #0
    64f4:	add	r3, pc, r3
    64f8:	str	ip, [sp]
    64fc:	bl	4350 <g_set_error@plt>
    6500:	b	6344 <main@@Base+0x1f0c>
    6504:	ldr	r3, [pc, #152]	; 65a4 <main@@Base+0x216c>
    6508:	movw	r2, #754	; 0x2f2
    650c:	ldr	r0, [pc, #148]	; 65a8 <main@@Base+0x2170>
    6510:	add	r3, pc, r3
    6514:	ldr	r1, [pc, #144]	; 65ac <main@@Base+0x2174>
    6518:	str	r3, [sp]
    651c:	add	r0, pc, r0
    6520:	ldr	r3, [pc, #136]	; 65b0 <main@@Base+0x2178>
    6524:	add	r1, pc, r1
    6528:	add	r3, pc, r3
    652c:	bl	42e4 <g_assertion_message_expr@plt>
    6530:	mov	r4, r0
    6534:	cmp	r8, #0
    6538:	beq	6544 <main@@Base+0x210c>
    653c:	mov	r0, r8
    6540:	bl	4110 <g_object_unref@plt>
    6544:	cmp	r9, #0
    6548:	beq	6554 <main@@Base+0x211c>
    654c:	mov	r0, r9
    6550:	bl	4110 <g_object_unref@plt>
    6554:	mov	r0, r4
    6558:	bl	42f0 <_Unwind_Resume@plt>
    655c:	bl	3e4c <__stack_chk_fail@plt>
    6560:	mov	r4, r0
    6564:	mov	r9, #0
    6568:	b	6544 <main@@Base+0x210c>
    656c:	mov	r4, r0
    6570:	b	6544 <main@@Base+0x210c>
    6574:	mov	r4, r0
    6578:	mov	r9, #0
    657c:	b	6534 <main@@Base+0x20fc>
    6580:	b	6560 <main@@Base+0x2128>
    6584:	b	6560 <main@@Base+0x2128>
    6588:	b	6560 <main@@Base+0x2128>
    658c:	muleq	r3, r0, r8
    6590:	andeq	r0, r0, r0, lsr r4
    6594:	ldrdeq	lr, [r1], -r8
    6598:	andeq	lr, r1, ip, asr #27
    659c:	andeq	lr, r1, r8, lsl #27
    65a0:	andeq	lr, r1, ip, lsl #26
    65a4:	andeq	lr, r1, r0, lsr sp
    65a8:	andeq	lr, r1, r0, ror r9
    65ac:	andeq	lr, r1, r0, lsl #26
    65b0:	andeq	lr, r1, r8, lsl #18
    65b4:	ldr	r3, [pc, #564]	; 67f0 <main@@Base+0x23b8>
    65b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    65bc:	mov	r8, r1
    65c0:	ldr	r1, [pc, #556]	; 67f4 <main@@Base+0x23bc>
    65c4:	add	r3, pc, r3
    65c8:	sub	sp, sp, #16
    65cc:	mov	r0, r8
    65d0:	mov	sl, r2
    65d4:	ldr	r6, [r3, r1]
    65d8:	ldr	r3, [r6]
    65dc:	str	r3, [sp, #12]
    65e0:	bl	3e34 <g_strv_length@plt>
    65e4:	cmp	r0, #1
    65e8:	bls	6658 <main@@Base+0x2220>
    65ec:	ldr	r0, [r8]
    65f0:	bl	4218 <g_file_new_for_path@plt>
    65f4:	mov	r7, r0
    65f8:	bl	11258 <main@@Base+0xce20>
    65fc:	mov	r1, r7
    6600:	mov	r2, #0
    6604:	mov	r3, sl
    6608:	mov	r9, r0
    660c:	bl	11ddc <main@@Base+0xd9a4>
    6610:	cmp	r0, #0
    6614:	bne	667c <main@@Base+0x2244>
    6618:	mov	r4, #0
    661c:	cmp	r7, #0
    6620:	beq	662c <main@@Base+0x21f4>
    6624:	mov	r0, r7
    6628:	bl	4110 <g_object_unref@plt>
    662c:	cmp	r9, #0
    6630:	beq	663c <main@@Base+0x2204>
    6634:	mov	r0, r9
    6638:	bl	4110 <g_object_unref@plt>
    663c:	ldr	r2, [sp, #12]
    6640:	mov	r0, r4
    6644:	ldr	r3, [r6]
    6648:	cmp	r2, r3
    664c:	bne	67c0 <main@@Base+0x2388>
    6650:	add	sp, sp, #16
    6654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6658:	bl	40a4 <fwupd_error_quark@plt>
    665c:	ldr	r3, [pc, #404]	; 67f8 <main@@Base+0x23c0>
    6660:	mov	r1, r0
    6664:	mov	r2, #0
    6668:	mov	r0, sl
    666c:	add	r3, pc, r3
    6670:	bl	3ae0 <g_set_error_literal@plt>
    6674:	mov	r4, #0
    6678:	b	663c <main@@Base+0x2204>
    667c:	mov	r0, r9
    6680:	bl	118e0 <main@@Base+0xd4a8>
    6684:	cmp	r0, #3
    6688:	mov	r4, r0
    668c:	beq	66c0 <main@@Base+0x2288>
    6690:	bl	40a4 <fwupd_error_quark@plt>
    6694:	mov	r5, r0
    6698:	mov	r0, r4
    669c:	bl	12154 <main@@Base+0xdd1c>
    66a0:	ldr	r3, [pc, #340]	; 67fc <main@@Base+0x23c4>
    66a4:	mov	r1, r5
    66a8:	str	r0, [sp]
    66ac:	mov	r2, #0
    66b0:	mov	r0, sl
    66b4:	add	r3, pc, r3
    66b8:	bl	4350 <g_set_error@plt>
    66bc:	b	6618 <main@@Base+0x21e0>
    66c0:	ldr	r0, [r8, #4]
    66c4:	add	r1, sp, #8
    66c8:	mov	r2, #16
    66cc:	bl	4284 <g_ascii_strtoull@plt>
    66d0:	mov	r4, r0
    66d4:	mov	r5, r1
    66d8:	mvn	r2, #0
    66dc:	mov	r3, #0
    66e0:	cmp	r5, r3
    66e4:	cmpeq	r4, r2
    66e8:	bhi	673c <main@@Base+0x2304>
    66ec:	ldr	r3, [sp, #8]
    66f0:	ldrb	r3, [r3]
    66f4:	cmp	r3, #0
    66f8:	bne	673c <main@@Base+0x2304>
    66fc:	orrs	r3, r4, r5
    6700:	beq	6724 <main@@Base+0x22ec>
    6704:	mov	r0, r9
    6708:	bl	11420 <main@@Base+0xcfe8>
    670c:	cmp	r0, #0
    6710:	beq	6764 <main@@Base+0x232c>
    6714:	mov	r1, #0
    6718:	bl	15b70 <main@@Base+0x11738>
    671c:	mov	r1, r4
    6720:	bl	10bcc <main@@Base+0xc794>
    6724:	mov	r2, sl
    6728:	mov	r0, r9
    672c:	mov	r1, r7
    6730:	bl	12420 <main@@Base+0xdfe8>
    6734:	mov	r4, r0
    6738:	b	661c <main@@Base+0x21e4>
    673c:	bl	40a4 <fwupd_error_quark@plt>
    6740:	ldr	ip, [r8, #4]
    6744:	mov	r1, r0
    6748:	ldr	r3, [pc, #176]	; 6800 <main@@Base+0x23c8>
    674c:	mov	r0, sl
    6750:	mov	r2, #0
    6754:	add	r3, pc, r3
    6758:	str	ip, [sp]
    675c:	bl	4350 <g_set_error@plt>
    6760:	b	6618 <main@@Base+0x21e0>
    6764:	ldr	r1, [pc, #152]	; 6804 <main@@Base+0x23cc>
    6768:	movw	r2, #819	; 0x333
    676c:	ldr	r3, [pc, #148]	; 6808 <main@@Base+0x23d0>
    6770:	add	r1, pc, r1
    6774:	ldr	r0, [pc, #144]	; 680c <main@@Base+0x23d4>
    6778:	str	r1, [sp]
    677c:	add	r3, pc, r3
    6780:	ldr	r1, [pc, #136]	; 6810 <main@@Base+0x23d8>
    6784:	add	r0, pc, r0
    6788:	add	r3, r3, #28
    678c:	add	r1, pc, r1
    6790:	bl	42e4 <g_assertion_message_expr@plt>
    6794:	mov	r4, r0
    6798:	cmp	r7, #0
    679c:	beq	67a8 <main@@Base+0x2370>
    67a0:	mov	r0, r7
    67a4:	bl	4110 <g_object_unref@plt>
    67a8:	cmp	r9, #0
    67ac:	beq	67b8 <main@@Base+0x2380>
    67b0:	mov	r0, r9
    67b4:	bl	4110 <g_object_unref@plt>
    67b8:	mov	r0, r4
    67bc:	bl	42f0 <_Unwind_Resume@plt>
    67c0:	bl	3e4c <__stack_chk_fail@plt>
    67c4:	mov	r4, r0
    67c8:	mov	r9, #0
    67cc:	b	67a8 <main@@Base+0x2370>
    67d0:	b	67c4 <main@@Base+0x238c>
    67d4:	mov	r4, r0
    67d8:	mov	r9, #0
    67dc:	b	6798 <main@@Base+0x2360>
    67e0:	b	67c4 <main@@Base+0x238c>
    67e4:	mov	r4, r0
    67e8:	b	67a8 <main@@Base+0x2370>
    67ec:	b	67c4 <main@@Base+0x238c>
    67f0:			; <UNDEFINED> instruction: 0x000385bc
    67f4:	andeq	r0, r0, r0, lsr r4
    67f8:	andeq	lr, r1, r4, ror #23
    67fc:	andeq	lr, r1, r0, ror #23
    6800:	andeq	lr, r1, ip, ror #22
    6804:	ldrdeq	lr, [r1], -r0
    6808:			; <UNDEFINED> instruction: 0x0001e6b4
    680c:	andeq	lr, r1, r8, lsl #14
    6810:	muleq	r1, r8, sl
    6814:	push	{r4, lr}
    6818:	mov	r4, r0
    681c:	ldr	r0, [r0]
    6820:	bl	3eac <g_free@plt>
    6824:	ldr	r0, [r4, #4]
    6828:	bl	3eac <g_free@plt>
    682c:	ldr	r0, [r4, #8]
    6830:	bl	3eac <g_free@plt>
    6834:	mov	r0, r4
    6838:	pop	{r4, lr}
    683c:	b	3eac <g_free@plt>
    6840:	push	{r4, lr}
    6844:	subs	r4, r0, #0
    6848:	popeq	{r4, pc}
    684c:	ldr	r0, [r4, #12]
    6850:	bl	3eac <g_free@plt>
    6854:	ldr	r0, [r4]
    6858:	bl	4110 <g_object_unref@plt>
    685c:	ldr	r0, [r4, #24]
    6860:	bl	4110 <g_object_unref@plt>
    6864:	ldr	r0, [r4, #4]
    6868:	cmp	r0, #0
    686c:	beq	6874 <main@@Base+0x243c>
    6870:	bl	4224 <g_ptr_array_unref@plt>
    6874:	mov	r0, r4
    6878:	pop	{r4, lr}
    687c:	b	3eac <g_free@plt>
    6880:	push	{r4, r5, r6, r7, r8, lr}
    6884:	sub	sp, sp, #16
    6888:	ldr	lr, [pc, #436]	; 6a44 <main@@Base+0x260c>
    688c:	mov	r0, r1
    6890:	ldr	r3, [pc, #432]	; 6a48 <main@@Base+0x2610>
    6894:	mov	ip, #0
    6898:	add	lr, pc, lr
    689c:	mov	r4, r1
    68a0:	mov	r6, r2
    68a4:	ldr	r5, [lr, r3]
    68a8:	str	ip, [sp, #4]
    68ac:	str	ip, [sp, #8]
    68b0:	ldr	r3, [r5]
    68b4:	str	r3, [sp, #12]
    68b8:	bl	3e34 <g_strv_length@plt>
    68bc:	cmp	r0, #1
    68c0:	beq	6914 <main@@Base+0x24dc>
    68c4:	bl	40a4 <fwupd_error_quark@plt>
    68c8:	ldr	r3, [pc, #380]	; 6a4c <main@@Base+0x2614>
    68cc:	mov	r1, r0
    68d0:	mov	r2, #0
    68d4:	mov	r0, r6
    68d8:	add	r3, pc, r3
    68dc:	bl	3ae0 <g_set_error_literal@plt>
    68e0:	mov	r4, #0
    68e4:	mov	r6, r4
    68e8:	mov	r0, r4
    68ec:	bl	3eac <g_free@plt>
    68f0:	ldr	r0, [sp, #8]
    68f4:	bl	3eac <g_free@plt>
    68f8:	ldr	r2, [sp, #12]
    68fc:	ldr	r3, [r5]
    6900:	mov	r0, r6
    6904:	cmp	r2, r3
    6908:	bne	69ac <main@@Base+0x2574>
    690c:	add	sp, sp, #16
    6910:	pop	{r4, r5, r6, r7, r8, pc}
    6914:	ldr	r0, [r4]
    6918:	add	r1, sp, #8
    691c:	add	r2, sp, #4
    6920:	mov	r3, r6
    6924:	bl	3e10 <g_file_get_contents@plt>
    6928:	cmp	r0, #0
    692c:	beq	68e0 <main@@Base+0x24a8>
    6930:	ldr	r0, [sp, #8]
    6934:	ldr	r1, [sp, #4]
    6938:	bl	390c <g_bytes_new@plt>
    693c:	mov	r8, r0
    6940:	bl	176bc <main@@Base+0x13284>
    6944:	mov	r2, r6
    6948:	mov	r1, r8
    694c:	mov	r7, r0
    6950:	bl	16970 <main@@Base+0x12538>
    6954:	cmp	r0, #0
    6958:	moveq	r4, r0
    695c:	moveq	r6, r4
    6960:	bne	6988 <main@@Base+0x2550>
    6964:	cmp	r8, #0
    6968:	beq	6974 <main@@Base+0x253c>
    696c:	mov	r0, r8
    6970:	bl	414c <g_bytes_unref@plt>
    6974:	cmp	r7, #0
    6978:	beq	68e8 <main@@Base+0x24b0>
    697c:	mov	r0, r7
    6980:	bl	4110 <g_object_unref@plt>
    6984:	b	68e8 <main@@Base+0x24b0>
    6988:	mov	r0, r7
    698c:	bl	174e8 <main@@Base+0x130b0>
    6990:	mov	r4, r0
    6994:	ldr	r0, [pc, #180]	; 6a50 <main@@Base+0x2618>
    6998:	mov	r1, r4
    699c:	add	r0, pc, r0
    69a0:	bl	3fe4 <g_print@plt>
    69a4:	mov	r6, #1
    69a8:	b	6964 <main@@Base+0x252c>
    69ac:	bl	3e4c <__stack_chk_fail@plt>
    69b0:	mov	r7, #0
    69b4:	mov	r5, r0
    69b8:	mov	r4, r7
    69bc:	cmp	r8, #0
    69c0:	beq	69cc <main@@Base+0x2594>
    69c4:	mov	r0, r8
    69c8:	bl	414c <g_bytes_unref@plt>
    69cc:	cmp	r7, #0
    69d0:	beq	69dc <main@@Base+0x25a4>
    69d4:	mov	r0, r7
    69d8:	bl	4110 <g_object_unref@plt>
    69dc:	mov	r0, r4
    69e0:	bl	3eac <g_free@plt>
    69e4:	ldr	r0, [sp, #8]
    69e8:	bl	3eac <g_free@plt>
    69ec:	mov	r0, r5
    69f0:	bl	42f0 <_Unwind_Resume@plt>
    69f4:	mov	r4, #0
    69f8:	mov	r5, r0
    69fc:	mov	r7, r4
    6a00:	b	69cc <main@@Base+0x2594>
    6a04:	mov	r5, r0
    6a08:	mov	r4, #0
    6a0c:	b	69bc <main@@Base+0x2584>
    6a10:	b	69f4 <main@@Base+0x25bc>
    6a14:	mov	r5, r0
    6a18:	b	69e4 <main@@Base+0x25ac>
    6a1c:	b	69f4 <main@@Base+0x25bc>
    6a20:	b	69f4 <main@@Base+0x25bc>
    6a24:	b	69f4 <main@@Base+0x25bc>
    6a28:	mov	r5, r0
    6a2c:	b	69dc <main@@Base+0x25a4>
    6a30:	mov	r5, r0
    6a34:	b	69cc <main@@Base+0x2594>
    6a38:	mov	r5, r0
    6a3c:	b	69bc <main@@Base+0x2584>
    6a40:	b	6a04 <main@@Base+0x25cc>
    6a44:	andeq	r8, r3, r8, ror #5
    6a48:	andeq	r0, r0, r0, lsr r4
    6a4c:	andeq	lr, r1, r8, lsl #20
    6a50:	andeq	pc, r1, ip, ror #20
    6a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6a58:	sub	sp, sp, #28
    6a5c:	ldr	lr, [pc, #660]	; 6cf8 <main@@Base+0x28c0>
    6a60:	mov	r7, r0
    6a64:	ldr	r3, [pc, #656]	; 6cfc <main@@Base+0x28c4>
    6a68:	mov	r0, r1
    6a6c:	add	lr, pc, lr
    6a70:	mov	ip, #0
    6a74:	mov	r5, r1
    6a78:	mov	r6, r2
    6a7c:	ldr	r4, [lr, r3]
    6a80:	str	ip, [sp]
    6a84:	str	ip, [sp, #4]
    6a88:	ldr	r3, [r4]
    6a8c:	str	ip, [sp, #8]
    6a90:	str	ip, [sp, #12]
    6a94:	str	r3, [sp, #20]
    6a98:	str	ip, [sp, #16]
    6a9c:	bl	3e34 <g_strv_length@plt>
    6aa0:	cmp	r0, #3
    6aa4:	beq	6af4 <main@@Base+0x26bc>
    6aa8:	bl	40a4 <fwupd_error_quark@plt>
    6aac:	ldr	r3, [pc, #588]	; 6d00 <main@@Base+0x28c8>
    6ab0:	mov	r1, r0
    6ab4:	mov	r2, #0
    6ab8:	mov	r0, r6
    6abc:	add	r3, pc, r3
    6ac0:	bl	3ae0 <g_set_error_literal@plt>
    6ac4:	mov	r5, #0
    6ac8:	ldr	r0, [sp, #16]
    6acc:	bl	3eac <g_free@plt>
    6ad0:	ldr	r0, [sp, #12]
    6ad4:	bl	3eac <g_free@plt>
    6ad8:	ldr	r2, [sp, #20]
    6adc:	ldr	r3, [r4]
    6ae0:	mov	r0, r5
    6ae4:	cmp	r2, r3
    6ae8:	bne	6c14 <main@@Base+0x27dc>
    6aec:	add	sp, sp, #28
    6af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6af4:	ldr	r0, [r5]
    6af8:	add	r1, sp, #16
    6afc:	add	r2, sp, #8
    6b00:	mov	r3, r6
    6b04:	ldr	fp, [r7, #8]
    6b08:	bl	3e10 <g_file_get_contents@plt>
    6b0c:	cmp	r0, #0
    6b10:	beq	6ac4 <main@@Base+0x268c>
    6b14:	ldr	r0, [sp, #16]
    6b18:	ldr	r1, [sp, #8]
    6b1c:	bl	390c <g_bytes_new@plt>
    6b20:	mov	sl, r0
    6b24:	add	r1, sp, #12
    6b28:	ldr	r0, [r5, #4]
    6b2c:	mov	r2, sp
    6b30:	mov	r3, r6
    6b34:	bl	3e10 <g_file_get_contents@plt>
    6b38:	cmp	r0, #0
    6b3c:	bne	6b94 <main@@Base+0x275c>
    6b40:	mov	r7, r0
    6b44:	mov	r9, r0
    6b48:	mov	r8, r0
    6b4c:	mov	r5, r0
    6b50:	cmp	sl, #0
    6b54:	beq	6b60 <main@@Base+0x2728>
    6b58:	mov	r0, sl
    6b5c:	bl	414c <g_bytes_unref@plt>
    6b60:	cmp	r7, #0
    6b64:	beq	6b70 <main@@Base+0x2738>
    6b68:	mov	r0, r7
    6b6c:	bl	414c <g_bytes_unref@plt>
    6b70:	cmp	r9, #0
    6b74:	beq	6b80 <main@@Base+0x2748>
    6b78:	mov	r0, r9
    6b7c:	bl	414c <g_bytes_unref@plt>
    6b80:	cmp	r8, #0
    6b84:	beq	6ac8 <main@@Base+0x2690>
    6b88:	mov	r0, r8
    6b8c:	bl	4110 <g_object_unref@plt>
    6b90:	b	6ac8 <main@@Base+0x2690>
    6b94:	ldr	r0, [sp, #12]
    6b98:	ldr	r1, [sp]
    6b9c:	bl	390c <g_bytes_new@plt>
    6ba0:	mov	r9, r0
    6ba4:	bl	176bc <main@@Base+0x13284>
    6ba8:	mov	r1, r9
    6bac:	mov	r2, r6
    6bb0:	mov	r8, r0
    6bb4:	bl	16970 <main@@Base+0x12538>
    6bb8:	cmp	r0, #0
    6bbc:	moveq	r7, r0
    6bc0:	moveq	r5, r7
    6bc4:	beq	6b50 <main@@Base+0x2718>
    6bc8:	adds	r2, fp, #0
    6bcc:	mov	r0, r8
    6bd0:	mov	r1, sl
    6bd4:	mov	r3, r6
    6bd8:	movne	r2, #1
    6bdc:	bl	16fe0 <main@@Base+0x12ba8>
    6be0:	subs	r7, r0, #0
    6be4:	beq	6c0c <main@@Base+0x27d4>
    6be8:	add	r1, sp, #4
    6bec:	bl	4320 <g_bytes_get_data@plt>
    6bf0:	mov	r1, r0
    6bf4:	mov	r3, r6
    6bf8:	ldr	r0, [r5, #8]
    6bfc:	ldr	r2, [sp, #4]
    6c00:	bl	3c9c <g_file_set_contents@plt>
    6c04:	mov	r5, r0
    6c08:	b	6b50 <main@@Base+0x2718>
    6c0c:	mov	r5, r7
    6c10:	b	6b50 <main@@Base+0x2718>
    6c14:	bl	3e4c <__stack_chk_fail@plt>
    6c18:	mov	r4, r0
    6c1c:	mov	r7, #0
    6c20:	cmp	sl, #0
    6c24:	beq	6c30 <main@@Base+0x27f8>
    6c28:	mov	r0, sl
    6c2c:	bl	414c <g_bytes_unref@plt>
    6c30:	cmp	r7, #0
    6c34:	beq	6c40 <main@@Base+0x2808>
    6c38:	mov	r0, r7
    6c3c:	bl	414c <g_bytes_unref@plt>
    6c40:	cmp	r9, #0
    6c44:	beq	6c50 <main@@Base+0x2818>
    6c48:	mov	r0, r9
    6c4c:	bl	414c <g_bytes_unref@plt>
    6c50:	cmp	r8, #0
    6c54:	beq	6c60 <main@@Base+0x2828>
    6c58:	mov	r0, r8
    6c5c:	bl	4110 <g_object_unref@plt>
    6c60:	ldr	r0, [sp, #16]
    6c64:	bl	3eac <g_free@plt>
    6c68:	ldr	r0, [sp, #12]
    6c6c:	bl	3eac <g_free@plt>
    6c70:	mov	r0, r4
    6c74:	bl	42f0 <_Unwind_Resume@plt>
    6c78:	mov	r8, #0
    6c7c:	mov	r4, r0
    6c80:	mov	r9, r8
    6c84:	mov	r7, r8
    6c88:	b	6c30 <main@@Base+0x27f8>
    6c8c:	b	6c78 <main@@Base+0x2840>
    6c90:	b	6c78 <main@@Base+0x2840>
    6c94:	mov	r4, r0
    6c98:	b	6c60 <main@@Base+0x2828>
    6c9c:	mov	r4, r0
    6ca0:	b	6c50 <main@@Base+0x2818>
    6ca4:	mov	r4, r0
    6ca8:	b	6c40 <main@@Base+0x2808>
    6cac:	mov	r4, r0
    6cb0:	b	6c30 <main@@Base+0x27f8>
    6cb4:	b	6c18 <main@@Base+0x27e0>
    6cb8:	mov	r7, #0
    6cbc:	mov	r4, r0
    6cc0:	mov	r8, r7
    6cc4:	b	6c20 <main@@Base+0x27e8>
    6cc8:	mov	r7, #0
    6ccc:	mov	r4, r0
    6cd0:	mov	r9, r7
    6cd4:	mov	r8, r7
    6cd8:	b	6c20 <main@@Base+0x27e8>
    6cdc:	mov	r4, r0
    6ce0:	b	6c20 <main@@Base+0x27e8>
    6ce4:	b	6cc8 <main@@Base+0x2890>
    6ce8:	b	6c78 <main@@Base+0x2840>
    6cec:	mov	r4, r0
    6cf0:	b	6c68 <main@@Base+0x2830>
    6cf4:	b	6c78 <main@@Base+0x2840>
    6cf8:	andeq	r8, r3, r4, lsl r1
    6cfc:	andeq	r0, r0, r0, lsr r4
    6d00:	andeq	lr, r1, ip, asr #16
    6d04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    6d08:	sub	sp, sp, #24
    6d0c:	ldr	lr, [pc, #644]	; 6f98 <main@@Base+0x2b60>
    6d10:	mov	r0, r1
    6d14:	ldr	r3, [pc, #640]	; 6f9c <main@@Base+0x2b64>
    6d18:	mov	ip, #0
    6d1c:	add	lr, pc, lr
    6d20:	mov	r5, r1
    6d24:	mov	r6, r2
    6d28:	ldr	r4, [lr, r3]
    6d2c:	str	ip, [sp]
    6d30:	str	ip, [sp, #4]
    6d34:	ldr	r3, [r4]
    6d38:	str	ip, [sp, #8]
    6d3c:	str	ip, [sp, #12]
    6d40:	str	r3, [sp, #20]
    6d44:	str	ip, [sp, #16]
    6d48:	bl	3e34 <g_strv_length@plt>
    6d4c:	cmp	r0, #3
    6d50:	beq	6da0 <main@@Base+0x2968>
    6d54:	bl	40a4 <fwupd_error_quark@plt>
    6d58:	ldr	r3, [pc, #576]	; 6fa0 <main@@Base+0x2b68>
    6d5c:	mov	r1, r0
    6d60:	mov	r2, #0
    6d64:	mov	r0, r6
    6d68:	add	r3, pc, r3
    6d6c:	bl	3ae0 <g_set_error_literal@plt>
    6d70:	mov	r5, #0
    6d74:	ldr	r0, [sp, #16]
    6d78:	bl	3eac <g_free@plt>
    6d7c:	ldr	r0, [sp, #12]
    6d80:	bl	3eac <g_free@plt>
    6d84:	ldr	r2, [sp, #20]
    6d88:	ldr	r3, [r4]
    6d8c:	mov	r0, r5
    6d90:	cmp	r2, r3
    6d94:	bne	6eb4 <main@@Base+0x2a7c>
    6d98:	add	sp, sp, #24
    6d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6da0:	ldr	r0, [r5]
    6da4:	add	r1, sp, #16
    6da8:	add	r2, sp, #8
    6dac:	mov	r3, r6
    6db0:	bl	3e10 <g_file_get_contents@plt>
    6db4:	cmp	r0, #0
    6db8:	beq	6d70 <main@@Base+0x2938>
    6dbc:	ldr	r0, [sp, #16]
    6dc0:	ldr	r1, [sp, #8]
    6dc4:	bl	390c <g_bytes_new@plt>
    6dc8:	mov	sl, r0
    6dcc:	add	r1, sp, #12
    6dd0:	ldr	r0, [r5, #4]
    6dd4:	add	r2, sp, #4
    6dd8:	mov	r3, r6
    6ddc:	bl	3e10 <g_file_get_contents@plt>
    6de0:	cmp	r0, #0
    6de4:	bne	6e3c <main@@Base+0x2a04>
    6de8:	mov	r7, r0
    6dec:	mov	r9, r0
    6df0:	mov	r8, r0
    6df4:	mov	r5, r0
    6df8:	cmp	sl, #0
    6dfc:	beq	6e08 <main@@Base+0x29d0>
    6e00:	mov	r0, sl
    6e04:	bl	414c <g_bytes_unref@plt>
    6e08:	cmp	r7, #0
    6e0c:	beq	6e18 <main@@Base+0x29e0>
    6e10:	mov	r0, r7
    6e14:	bl	414c <g_bytes_unref@plt>
    6e18:	cmp	r9, #0
    6e1c:	beq	6e28 <main@@Base+0x29f0>
    6e20:	mov	r0, r9
    6e24:	bl	414c <g_bytes_unref@plt>
    6e28:	cmp	r8, #0
    6e2c:	beq	6d74 <main@@Base+0x293c>
    6e30:	mov	r0, r8
    6e34:	bl	4110 <g_object_unref@plt>
    6e38:	b	6d74 <main@@Base+0x293c>
    6e3c:	ldr	r0, [sp, #12]
    6e40:	ldr	r1, [sp, #4]
    6e44:	bl	390c <g_bytes_new@plt>
    6e48:	mov	r7, r0
    6e4c:	bl	176bc <main@@Base+0x13284>
    6e50:	mov	r1, sl
    6e54:	mov	r2, r7
    6e58:	mov	r3, r6
    6e5c:	mov	r8, r0
    6e60:	bl	16c68 <main@@Base+0x12830>
    6e64:	cmp	r0, #0
    6e68:	moveq	r9, r0
    6e6c:	moveq	r5, r9
    6e70:	beq	6df8 <main@@Base+0x29c0>
    6e74:	mov	r0, r8
    6e78:	mov	r1, r6
    6e7c:	bl	166e4 <main@@Base+0x122ac>
    6e80:	subs	r9, r0, #0
    6e84:	beq	6eac <main@@Base+0x2a74>
    6e88:	mov	r1, sp
    6e8c:	bl	4320 <g_bytes_get_data@plt>
    6e90:	mov	r1, r0
    6e94:	mov	r3, r6
    6e98:	ldr	r0, [r5, #8]
    6e9c:	ldr	r2, [sp]
    6ea0:	bl	3c9c <g_file_set_contents@plt>
    6ea4:	mov	r5, r0
    6ea8:	b	6df8 <main@@Base+0x29c0>
    6eac:	mov	r5, r9
    6eb0:	b	6df8 <main@@Base+0x29c0>
    6eb4:	bl	3e4c <__stack_chk_fail@plt>
    6eb8:	mov	r4, r0
    6ebc:	mov	r9, #0
    6ec0:	cmp	sl, #0
    6ec4:	beq	6ed0 <main@@Base+0x2a98>
    6ec8:	mov	r0, sl
    6ecc:	bl	414c <g_bytes_unref@plt>
    6ed0:	cmp	r7, #0
    6ed4:	beq	6ee0 <main@@Base+0x2aa8>
    6ed8:	mov	r0, r7
    6edc:	bl	414c <g_bytes_unref@plt>
    6ee0:	cmp	r9, #0
    6ee4:	beq	6ef0 <main@@Base+0x2ab8>
    6ee8:	mov	r0, r9
    6eec:	bl	414c <g_bytes_unref@plt>
    6ef0:	cmp	r8, #0
    6ef4:	beq	6f00 <main@@Base+0x2ac8>
    6ef8:	mov	r0, r8
    6efc:	bl	4110 <g_object_unref@plt>
    6f00:	ldr	r0, [sp, #16]
    6f04:	bl	3eac <g_free@plt>
    6f08:	ldr	r0, [sp, #12]
    6f0c:	bl	3eac <g_free@plt>
    6f10:	mov	r0, r4
    6f14:	bl	42f0 <_Unwind_Resume@plt>
    6f18:	mov	r8, #0
    6f1c:	mov	r4, r0
    6f20:	mov	r9, r8
    6f24:	mov	r7, r8
    6f28:	b	6ed0 <main@@Base+0x2a98>
    6f2c:	b	6f18 <main@@Base+0x2ae0>
    6f30:	b	6f18 <main@@Base+0x2ae0>
    6f34:	mov	r4, r0
    6f38:	b	6f00 <main@@Base+0x2ac8>
    6f3c:	mov	r4, r0
    6f40:	b	6ef0 <main@@Base+0x2ab8>
    6f44:	mov	r4, r0
    6f48:	b	6ee0 <main@@Base+0x2aa8>
    6f4c:	mov	r4, r0
    6f50:	b	6ed0 <main@@Base+0x2a98>
    6f54:	b	6eb8 <main@@Base+0x2a80>
    6f58:	mov	r9, #0
    6f5c:	mov	r4, r0
    6f60:	mov	r8, r9
    6f64:	b	6ec0 <main@@Base+0x2a88>
    6f68:	mov	r7, #0
    6f6c:	mov	r4, r0
    6f70:	mov	r9, r7
    6f74:	mov	r8, r7
    6f78:	b	6ec0 <main@@Base+0x2a88>
    6f7c:	mov	r4, r0
    6f80:	b	6ec0 <main@@Base+0x2a88>
    6f84:	b	6f68 <main@@Base+0x2b30>
    6f88:	b	6f18 <main@@Base+0x2ae0>
    6f8c:	mov	r4, r0
    6f90:	b	6f08 <main@@Base+0x2ad0>
    6f94:	b	6f18 <main@@Base+0x2ae0>
    6f98:	andeq	r7, r3, r4, ror #28
    6f9c:	andeq	r0, r0, r0, lsr r4
    6fa0:	ldrdeq	lr, [r1], -r8
    6fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6fa8:	sub	sp, sp, #44	; 0x2c
    6fac:	mov	sl, r0
    6fb0:	mov	r0, r1
    6fb4:	str	r1, [sp, #28]
    6fb8:	str	r2, [sp, #32]
    6fbc:	bl	3e34 <g_strv_length@plt>
    6fc0:	cmp	r0, #2
    6fc4:	bhi	7014 <main@@Base+0x2bdc>
    6fc8:	bl	40a4 <fwupd_error_quark@plt>
    6fcc:	ldr	r3, [pc, #1048]	; 73ec <main@@Base+0x2fb4>
    6fd0:	mov	r1, r0
    6fd4:	mov	r2, #0
    6fd8:	ldr	r0, [sp, #32]
    6fdc:	add	r3, pc, r3
    6fe0:	bl	3ae0 <g_set_error_literal@plt>
    6fe4:	mov	r7, #0
    6fe8:	mov	r4, #0
    6fec:	mov	r5, r4
    6ff0:	cmp	r7, #0
    6ff4:	beq	7000 <main@@Base+0x2bc8>
    6ff8:	mov	r0, r7
    6ffc:	bl	4110 <g_object_unref@plt>
    7000:	mov	r0, r4
    7004:	bl	3eac <g_free@plt>
    7008:	mov	r0, r5
    700c:	add	sp, sp, #44	; 0x2c
    7010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7014:	bl	11258 <main@@Base+0xce20>
    7018:	mov	r1, #3
    701c:	mov	r7, r0
    7020:	bl	11b20 <main@@Base+0xd6e8>
    7024:	ldr	r3, [sp, #28]
    7028:	add	r8, r3, #4
    702c:	ldr	r0, [r3, #4]
    7030:	cmp	r0, #0
    7034:	beq	71c4 <main@@Base+0x2d8c>
    7038:	ldr	r9, [pc, #944]	; 73f0 <main@@Base+0x2fb8>
    703c:	movw	r4, #65535	; 0xffff
    7040:	ldr	fp, [pc, #940]	; 73f4 <main@@Base+0x2fbc>
    7044:	mov	r5, r4
    7048:	ldr	r3, [sp, #28]
    704c:	add	r9, pc, r9
    7050:	add	fp, pc, fp
    7054:	mov	r6, r4
    7058:	add	r3, r3, #8
    705c:	str	r3, [sp, #36]	; 0x24
    7060:	bl	4218 <g_file_new_for_path@plt>
    7064:	str	r0, [sp, #24]
    7068:	bl	11258 <main@@Base+0xce20>
    706c:	ldr	r1, [sp, #24]
    7070:	mov	r2, #0
    7074:	ldr	r3, [sp, #32]
    7078:	str	r0, [sp, #20]
    707c:	bl	11ddc <main@@Base+0xd9a4>
    7080:	cmp	r0, #0
    7084:	beq	7250 <main@@Base+0x2e18>
    7088:	movw	r3, #65535	; 0xffff
    708c:	cmp	r4, r3
    7090:	beq	70a4 <main@@Base+0x2c6c>
    7094:	ldr	r0, [sp, #20]
    7098:	bl	11730 <main@@Base+0xd2f8>
    709c:	cmp	r4, r0
    70a0:	bne	72dc <main@@Base+0x2ea4>
    70a4:	movw	r3, #65535	; 0xffff
    70a8:	cmp	r6, r3
    70ac:	beq	70c0 <main@@Base+0x2c88>
    70b0:	ldr	r0, [sp, #20]
    70b4:	bl	117c0 <main@@Base+0xd388>
    70b8:	cmp	r6, r0
    70bc:	bne	72a0 <main@@Base+0x2e68>
    70c0:	movw	r3, #65535	; 0xffff
    70c4:	cmp	r5, r3
    70c8:	beq	70dc <main@@Base+0x2ca4>
    70cc:	ldr	r0, [sp, #20]
    70d0:	bl	11850 <main@@Base+0xd418>
    70d4:	cmp	r5, r0
    70d8:	bne	7218 <main@@Base+0x2de0>
    70dc:	ldr	r0, [sp, #20]
    70e0:	bl	114c8 <main@@Base+0xd090>
    70e4:	ldr	r3, [r0, #4]
    70e8:	mov	r8, r0
    70ec:	cmp	r3, #0
    70f0:	movne	r4, #0
    70f4:	beq	7160 <main@@Base+0x2d28>
    70f8:	ldr	r3, [r8]
    70fc:	ldr	r6, [r3, r4, lsl #2]
    7100:	mov	r0, r6
    7104:	bl	15cb8 <main@@Base+0x11880>
    7108:	mov	r5, r0
    710c:	mov	r0, r9
    7110:	mov	r1, r5
    7114:	bl	3fe4 <g_print@plt>
    7118:	mov	r0, r7
    711c:	mov	r1, r5
    7120:	bl	1126c <main@@Base+0xce34>
    7124:	cmp	r0, #0
    7128:	beq	7144 <main@@Base+0x2d0c>
    712c:	ldr	r3, [sl, #8]
    7130:	cmp	r3, #0
    7134:	beq	727c <main@@Base+0x2e44>
    7138:	mov	r1, r5
    713c:	mov	r0, fp
    7140:	bl	3fe4 <g_print@plt>
    7144:	mov	r1, r6
    7148:	mov	r0, r7
    714c:	bl	11624 <main@@Base+0xd1ec>
    7150:	ldr	r3, [r8, #4]
    7154:	add	r4, r4, #1
    7158:	cmp	r3, r4
    715c:	bhi	70f8 <main@@Base+0x2cc0>
    7160:	ldr	r0, [sp, #20]
    7164:	bl	11730 <main@@Base+0xd2f8>
    7168:	mov	r4, r0
    716c:	ldr	r0, [sp, #20]
    7170:	bl	117c0 <main@@Base+0xd388>
    7174:	mov	r6, r0
    7178:	ldr	r0, [sp, #20]
    717c:	bl	11850 <main@@Base+0xd418>
    7180:	ldr	r3, [sp, #20]
    7184:	mov	r5, r0
    7188:	cmp	r3, #0
    718c:	beq	7198 <main@@Base+0x2d60>
    7190:	mov	r0, r3
    7194:	bl	4110 <g_object_unref@plt>
    7198:	ldr	r3, [sp, #24]
    719c:	cmp	r3, #0
    71a0:	beq	71ac <main@@Base+0x2d74>
    71a4:	mov	r0, r3
    71a8:	bl	4110 <g_object_unref@plt>
    71ac:	ldr	r8, [sp, #36]	; 0x24
    71b0:	mov	r3, r8
    71b4:	ldr	r0, [r3], #4
    71b8:	cmp	r0, #0
    71bc:	str	r3, [sp, #36]	; 0x24
    71c0:	bne	7060 <main@@Base+0x2c28>
    71c4:	mov	r0, r7
    71c8:	bl	125fc <main@@Base+0xe1c4>
    71cc:	mov	r4, r0
    71d0:	ldr	r0, [pc, #544]	; 73f8 <main@@Base+0x2fc0>
    71d4:	mov	r1, r4
    71d8:	add	r0, pc, r0
    71dc:	bl	3fe4 <g_print@plt>
    71e0:	ldr	r3, [sp, #28]
    71e4:	ldr	r0, [r3]
    71e8:	bl	4218 <g_file_new_for_path@plt>
    71ec:	mov	r6, r0
    71f0:	ldr	r2, [sp, #32]
    71f4:	mov	r0, r7
    71f8:	mov	r1, r6
    71fc:	bl	12420 <main@@Base+0xdfe8>
    7200:	cmp	r6, #0
    7204:	mov	r5, r0
    7208:	beq	6ff0 <main@@Base+0x2bb8>
    720c:	mov	r0, r6
    7210:	bl	4110 <g_object_unref@plt>
    7214:	b	6ff0 <main@@Base+0x2bb8>
    7218:	bl	40a4 <fwupd_error_quark@plt>
    721c:	mov	r6, r0
    7220:	ldr	r0, [sp, #20]
    7224:	ldr	r4, [r8]
    7228:	bl	11850 <main@@Base+0xd418>
    722c:	ldr	r3, [pc, #456]	; 73fc <main@@Base+0x2fc4>
    7230:	mov	r1, r6
    7234:	str	r0, [sp, #8]
    7238:	mov	r2, #7
    723c:	str	r5, [sp]
    7240:	add	r3, pc, r3
    7244:	ldr	r0, [sp, #32]
    7248:	str	r4, [sp, #4]
    724c:	bl	4350 <g_set_error@plt>
    7250:	ldr	r3, [sp, #20]
    7254:	cmp	r3, #0
    7258:	beq	7264 <main@@Base+0x2e2c>
    725c:	mov	r0, r3
    7260:	bl	4110 <g_object_unref@plt>
    7264:	ldr	r3, [sp, #24]
    7268:	cmp	r3, #0
    726c:	beq	6fe8 <main@@Base+0x2bb0>
    7270:	mov	r0, r3
    7274:	bl	4110 <g_object_unref@plt>
    7278:	b	6fe8 <main@@Base+0x2bb0>
    727c:	bl	40a4 <fwupd_error_quark@plt>
    7280:	ldr	r3, [pc, #376]	; 7400 <main@@Base+0x2fc8>
    7284:	mov	r1, r0
    7288:	str	r5, [sp]
    728c:	mov	r2, #7
    7290:	ldr	r0, [sp, #32]
    7294:	add	r3, pc, r3
    7298:	bl	4350 <g_set_error@plt>
    729c:	b	7250 <main@@Base+0x2e18>
    72a0:	bl	40a4 <fwupd_error_quark@plt>
    72a4:	mov	r5, r0
    72a8:	ldr	r0, [sp, #20]
    72ac:	ldr	r4, [r8]
    72b0:	bl	117c0 <main@@Base+0xd388>
    72b4:	ldr	r3, [pc, #328]	; 7404 <main@@Base+0x2fcc>
    72b8:	mov	r1, r5
    72bc:	str	r0, [sp, #8]
    72c0:	mov	r2, #7
    72c4:	str	r6, [sp]
    72c8:	add	r3, pc, r3
    72cc:	ldr	r0, [sp, #32]
    72d0:	str	r4, [sp, #4]
    72d4:	bl	4350 <g_set_error@plt>
    72d8:	b	7250 <main@@Base+0x2e18>
    72dc:	bl	40a4 <fwupd_error_quark@plt>
    72e0:	mov	r6, r0
    72e4:	ldr	r0, [sp, #20]
    72e8:	ldr	r5, [r8]
    72ec:	bl	11730 <main@@Base+0xd2f8>
    72f0:	ldr	r3, [pc, #272]	; 7408 <main@@Base+0x2fd0>
    72f4:	mov	r1, r6
    72f8:	str	r0, [sp, #8]
    72fc:	mov	r2, #7
    7300:	str	r4, [sp]
    7304:	add	r3, pc, r3
    7308:	ldr	r0, [sp, #32]
    730c:	str	r5, [sp, #4]
    7310:	bl	4350 <g_set_error@plt>
    7314:	b	7250 <main@@Base+0x2e18>
    7318:	mov	r5, r0
    731c:	mov	r4, #0
    7320:	cmp	r7, #0
    7324:	beq	7330 <main@@Base+0x2ef8>
    7328:	mov	r0, r7
    732c:	bl	4110 <g_object_unref@plt>
    7330:	mov	r0, r4
    7334:	bl	3eac <g_free@plt>
    7338:	mov	r0, r5
    733c:	bl	42f0 <_Unwind_Resume@plt>
    7340:	b	7318 <main@@Base+0x2ee0>
    7344:	mov	r4, #0
    7348:	mov	r5, r0
    734c:	mov	r7, r4
    7350:	b	7320 <main@@Base+0x2ee8>
    7354:	mov	r5, r0
    7358:	b	7330 <main@@Base+0x2ef8>
    735c:	b	7318 <main@@Base+0x2ee0>
    7360:	b	7344 <main@@Base+0x2f0c>
    7364:	b	7344 <main@@Base+0x2f0c>
    7368:	b	7344 <main@@Base+0x2f0c>
    736c:	mov	r4, r0
    7370:	mov	r3, #0
    7374:	str	r3, [sp, #24]
    7378:	ldr	r3, [sp, #24]
    737c:	cmp	r3, #0
    7380:	beq	738c <main@@Base+0x2f54>
    7384:	ldr	r0, [sp, #24]
    7388:	bl	4110 <g_object_unref@plt>
    738c:	mov	r5, r4
    7390:	mov	r4, #0
    7394:	b	7320 <main@@Base+0x2ee8>
    7398:	mov	r5, r0
    739c:	b	7320 <main@@Base+0x2ee8>
    73a0:	cmp	r6, #0
    73a4:	mov	r5, r0
    73a8:	beq	7320 <main@@Base+0x2ee8>
    73ac:	mov	r0, r6
    73b0:	bl	4110 <g_object_unref@plt>
    73b4:	b	7320 <main@@Base+0x2ee8>
    73b8:	b	7398 <main@@Base+0x2f60>
    73bc:	b	7318 <main@@Base+0x2ee0>
    73c0:	ldr	r3, [sp, #20]
    73c4:	mov	r4, r0
    73c8:	cmp	r3, #0
    73cc:	beq	7378 <main@@Base+0x2f40>
    73d0:	ldr	r0, [sp, #20]
    73d4:	bl	4110 <g_object_unref@plt>
    73d8:	b	7378 <main@@Base+0x2f40>
    73dc:	mov	r4, r0
    73e0:	b	7378 <main@@Base+0x2f40>
    73e4:	b	73dc <main@@Base+0x2fa4>
    73e8:	b	7318 <main@@Base+0x2ee0>
    73ec:	muleq	r1, ip, r3
    73f0:	andeq	lr, r1, r8, lsr #8
    73f4:	andeq	lr, r1, ip, lsl #9
    73f8:	andeq	lr, r1, ip, asr #6
    73fc:	andeq	lr, r1, r4, lsl #4
    7400:	andeq	lr, r1, ip, lsl #4
    7404:	andeq	lr, r1, r8, asr #2
    7408:	ldrdeq	lr, [r1], -r8
    740c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7410:	mov	r0, r1
    7414:	sub	sp, sp, #12
    7418:	mov	r4, r1
    741c:	mov	r5, r2
    7420:	bl	3e34 <g_strv_length@plt>
    7424:	cmp	r0, #3
    7428:	beq	7464 <main@@Base+0x302c>
    742c:	bl	40a4 <fwupd_error_quark@plt>
    7430:	ldr	r3, [pc, #604]	; 7694 <main@@Base+0x325c>
    7434:	mov	r1, r0
    7438:	mov	r2, #0
    743c:	mov	r0, r5
    7440:	add	r3, pc, r3
    7444:	bl	3ae0 <g_set_error_literal@plt>
    7448:	mov	r4, #0
    744c:	mov	r5, r4
    7450:	mov	r0, r4
    7454:	bl	3eac <g_free@plt>
    7458:	mov	r0, r5
    745c:	add	sp, sp, #12
    7460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7464:	ldr	r0, [r4, #4]
    7468:	bl	4218 <g_file_new_for_path@plt>
    746c:	mov	r6, r0
    7470:	ldr	r0, [r4, #8]
    7474:	bl	4218 <g_file_new_for_path@plt>
    7478:	mov	r8, r0
    747c:	bl	11258 <main@@Base+0xce20>
    7480:	mov	r1, r6
    7484:	mov	r2, #0
    7488:	mov	r3, r5
    748c:	mov	r7, r0
    7490:	bl	11ddc <main@@Base+0xd9a4>
    7494:	cmp	r0, #0
    7498:	bne	74d8 <main@@Base+0x30a0>
    749c:	mov	r4, #0
    74a0:	mov	r5, r4
    74a4:	cmp	r8, #0
    74a8:	beq	74b4 <main@@Base+0x307c>
    74ac:	mov	r0, r8
    74b0:	bl	4110 <g_object_unref@plt>
    74b4:	cmp	r6, #0
    74b8:	beq	74c4 <main@@Base+0x308c>
    74bc:	mov	r0, r6
    74c0:	bl	4110 <g_object_unref@plt>
    74c4:	cmp	r7, #0
    74c8:	beq	7450 <main@@Base+0x3018>
    74cc:	mov	r0, r7
    74d0:	bl	4110 <g_object_unref@plt>
    74d4:	b	7450 <main@@Base+0x3018>
    74d8:	ldr	r0, [r4]
    74dc:	bl	128ac <main@@Base+0xe474>
    74e0:	mov	r9, r0
    74e4:	mov	r0, r7
    74e8:	mov	r1, r9
    74ec:	bl	11b20 <main@@Base+0xd6e8>
    74f0:	cmp	r9, #0
    74f4:	bne	7584 <main@@Base+0x314c>
    74f8:	mov	r0, r9
    74fc:	bl	3990 <g_string_new@plt>
    7500:	ldr	fp, [pc, #400]	; 7698 <main@@Base+0x3260>
    7504:	mov	sl, r0
    7508:	mov	r9, #1
    750c:	add	fp, pc, fp
    7510:	ldr	r3, [sl, #4]
    7514:	cmp	r3, #0
    7518:	beq	7528 <main@@Base+0x30f0>
    751c:	mov	r0, sl
    7520:	mov	r1, fp
    7524:	bl	4308 <g_string_append@plt>
    7528:	mov	r0, r9
    752c:	bl	12154 <main@@Base+0xdd1c>
    7530:	mov	r1, r0
    7534:	mov	r0, sl
    7538:	bl	4308 <g_string_append@plt>
    753c:	add	r9, r9, #1
    7540:	cmp	r9, #6
    7544:	bne	7510 <main@@Base+0x30d8>
    7548:	bl	40a4 <fwupd_error_quark@plt>
    754c:	ldr	ip, [r4]
    7550:	mov	r1, r0
    7554:	ldr	r3, [pc, #320]	; 769c <main@@Base+0x3264>
    7558:	mov	r0, r5
    755c:	mov	r2, #0
    7560:	str	ip, [sp]
    7564:	add	r3, pc, r3
    7568:	ldr	ip, [sl]
    756c:	str	ip, [sp, #4]
    7570:	bl	4350 <g_set_error@plt>
    7574:	mov	r0, sl
    7578:	mov	r1, #1
    757c:	bl	40bc <g_string_free@plt>
    7580:	b	749c <main@@Base+0x3064>
    7584:	mov	r0, r7
    7588:	bl	125fc <main@@Base+0xe1c4>
    758c:	mov	r4, r0
    7590:	ldr	r2, [pc, #264]	; 76a0 <main@@Base+0x3268>
    7594:	ldr	r0, [pc, #264]	; 76a4 <main@@Base+0x326c>
    7598:	mov	r3, r4
    759c:	mov	r1, #128	; 0x80
    75a0:	add	r2, pc, r2
    75a4:	add	r0, pc, r0
    75a8:	bl	3a38 <g_log@plt>
    75ac:	mov	r2, r5
    75b0:	mov	r0, r7
    75b4:	mov	r1, r8
    75b8:	bl	12420 <main@@Base+0xdfe8>
    75bc:	mov	r5, r0
    75c0:	b	74a4 <main@@Base+0x306c>
    75c4:	mov	r5, r0
    75c8:	mov	r4, #0
    75cc:	cmp	r8, #0
    75d0:	beq	75dc <main@@Base+0x31a4>
    75d4:	mov	r0, r8
    75d8:	bl	4110 <g_object_unref@plt>
    75dc:	cmp	r6, #0
    75e0:	beq	75ec <main@@Base+0x31b4>
    75e4:	mov	r0, r6
    75e8:	bl	4110 <g_object_unref@plt>
    75ec:	cmp	r7, #0
    75f0:	beq	75fc <main@@Base+0x31c4>
    75f4:	mov	r0, r7
    75f8:	bl	4110 <g_object_unref@plt>
    75fc:	mov	r0, r4
    7600:	bl	3eac <g_free@plt>
    7604:	mov	r0, r5
    7608:	bl	42f0 <_Unwind_Resume@plt>
    760c:	b	75c4 <main@@Base+0x318c>
    7610:	b	75c4 <main@@Base+0x318c>
    7614:	mov	r5, r0
    7618:	mov	r1, #1
    761c:	mov	r0, sl
    7620:	bl	40bc <g_string_free@plt>
    7624:	b	75c8 <main@@Base+0x3190>
    7628:	b	75c4 <main@@Base+0x318c>
    762c:	mov	r5, r0
    7630:	b	75cc <main@@Base+0x3194>
    7634:	b	75c4 <main@@Base+0x318c>
    7638:	mov	r5, r0
    763c:	b	75dc <main@@Base+0x31a4>
    7640:	b	75c4 <main@@Base+0x318c>
    7644:	mov	r5, r0
    7648:	b	75ec <main@@Base+0x31b4>
    764c:	mov	r5, r0
    7650:	b	75fc <main@@Base+0x31c4>
    7654:	mov	r4, #0
    7658:	mov	r5, r0
    765c:	mov	r7, r4
    7660:	mov	r6, r4
    7664:	b	75dc <main@@Base+0x31a4>
    7668:	b	7654 <main@@Base+0x321c>
    766c:	b	7654 <main@@Base+0x321c>
    7670:	mov	r4, #0
    7674:	mov	r5, r0
    7678:	mov	r7, r4
    767c:	b	75dc <main@@Base+0x31a4>
    7680:	mov	r7, #0
    7684:	mov	r5, r0
    7688:	mov	r4, r7
    768c:	b	75cc <main@@Base+0x3194>
    7690:	b	75c4 <main@@Base+0x318c>
    7694:	strdeq	lr, [r1], -ip
    7698:	andeq	r0, r2, r8, lsl r1
    769c:	andeq	lr, r1, r4, lsr r0
    76a0:	andeq	lr, r1, ip, lsl r0
    76a4:	andeq	sp, r1, r8, ror #17
    76a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    76ac:	cmp	r1, #0
    76b0:	sub	sp, sp, #12
    76b4:	mov	r9, r0
    76b8:	mov	sl, r2
    76bc:	str	r3, [sp]
    76c0:	ldr	r8, [sp, #48]	; 0x30
    76c4:	beq	77a8 <main@@Base+0x3370>
    76c8:	ldr	r3, [sp]
    76cc:	cmp	r3, #0
    76d0:	beq	77d0 <main@@Base+0x3398>
    76d4:	cmp	r8, #0
    76d8:	beq	77f4 <main@@Base+0x33bc>
    76dc:	mov	r0, r1
    76e0:	ldr	r1, [pc, #324]	; 782c <main@@Base+0x33f4>
    76e4:	mvn	r2, #0
    76e8:	add	r1, pc, r1
    76ec:	bl	3cb4 <g_strsplit@plt>
    76f0:	ldr	r3, [r0]
    76f4:	mov	fp, r0
    76f8:	cmp	r3, #0
    76fc:	beq	7798 <main@@Base+0x3360>
    7700:	ldr	r3, [pc, #296]	; 7830 <main@@Base+0x33f8>
    7704:	add	r7, r0, #4
    7708:	mov	r6, r0
    770c:	mov	r5, #0
    7710:	add	r3, pc, r3
    7714:	str	r3, [sp, #4]
    7718:	b	775c <main@@Base+0x3324>
    771c:	ldr	r0, [sp]
    7720:	bl	3b7c <g_strdup@plt>
    7724:	str	r0, [r4, #8]
    7728:	mov	r0, sl
    772c:	bl	3b7c <g_strdup@plt>
    7730:	str	r0, [r4, #4]
    7734:	mov	r1, r4
    7738:	mov	r0, r9
    773c:	str	r8, [r4, #12]
    7740:	bl	426c <g_ptr_array_add@plt>
    7744:	ldr	r3, [r7]
    7748:	mov	r6, r7
    774c:	add	r5, r5, #1
    7750:	add	r7, r7, #4
    7754:	cmp	r3, #0
    7758:	beq	7798 <main@@Base+0x3360>
    775c:	mov	r0, #16
    7760:	bl	4248 <g_malloc0@plt>
    7764:	mov	r4, r0
    7768:	ldr	r0, [r6]
    776c:	bl	3b7c <g_strdup@plt>
    7770:	cmp	r5, #0
    7774:	str	r0, [r4]
    7778:	beq	771c <main@@Base+0x32e4>
    777c:	ldr	r1, [sp, #4]
    7780:	mov	r0, #0
    7784:	mov	r2, #5
    7788:	bl	3ed0 <dcgettext@plt>
    778c:	ldr	r1, [fp]
    7790:	bl	3c18 <g_strdup_printf@plt>
    7794:	b	7724 <main@@Base+0x32ec>
    7798:	mov	r0, fp
    779c:	add	sp, sp, #12
    77a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    77a4:	b	3e1c <g_strfreev@plt>
    77a8:	ldr	r1, [pc, #132]	; 7834 <main@@Base+0x33fc>
    77ac:	ldr	r0, [pc, #132]	; 7838 <main@@Base+0x3400>
    77b0:	ldr	r2, [pc, #132]	; 783c <main@@Base+0x3404>
    77b4:	add	r1, pc, r1
    77b8:	add	r0, pc, r0
    77bc:	add	r1, r1, #52	; 0x34
    77c0:	add	r2, pc, r2
    77c4:	bl	3870 <g_return_if_fail_warning@plt>
    77c8:	add	sp, sp, #12
    77cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    77d0:	ldr	r1, [pc, #104]	; 7840 <main@@Base+0x3408>
    77d4:	ldr	r0, [pc, #104]	; 7844 <main@@Base+0x340c>
    77d8:	ldr	r2, [pc, #104]	; 7848 <main@@Base+0x3410>
    77dc:	add	r1, pc, r1
    77e0:	add	r0, pc, r0
    77e4:	add	r1, r1, #52	; 0x34
    77e8:	add	r2, pc, r2
    77ec:	bl	3870 <g_return_if_fail_warning@plt>
    77f0:	b	77c8 <main@@Base+0x3390>
    77f4:	ldr	r1, [pc, #80]	; 784c <main@@Base+0x3414>
    77f8:	ldr	r0, [pc, #80]	; 7850 <main@@Base+0x3418>
    77fc:	ldr	r2, [pc, #80]	; 7854 <main@@Base+0x341c>
    7800:	add	r1, pc, r1
    7804:	add	r0, pc, r0
    7808:	add	r1, r1, #52	; 0x34
    780c:	add	r2, pc, r2
    7810:	bl	3870 <g_return_if_fail_warning@plt>
    7814:	b	77c8 <main@@Base+0x3390>
    7818:	mov	r4, r0
    781c:	mov	r0, fp
    7820:	bl	3e1c <g_strfreev@plt>
    7824:	mov	r0, r4
    7828:	bl	42f0 <_Unwind_Resume@plt>
    782c:	andeq	sp, r1, ip, lsl #30
    7830:			; <UNDEFINED> instruction: 0x0001deb4
    7834:	andeq	sp, r1, ip, ror r6
    7838:	ldrdeq	sp, [r1], -r4
    783c:	andeq	sp, r1, r0, lsl lr
    7840:	andeq	sp, r1, r4, asr r6
    7844:	andeq	sp, r1, ip, lsr #13
    7848:	strdeq	sp, [r1], -r8
    784c:	andeq	sp, r1, r0, lsr r6
    7850:	andeq	sp, r1, r8, lsl #13
    7854:	andeq	sp, r1, ip, ror #27
    7858:	ldr	r3, [pc, #640]	; 7ae0 <main@@Base+0x36a8>
    785c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7860:	mov	r5, r1
    7864:	ldr	r1, [pc, #632]	; 7ae4 <main@@Base+0x36ac>
    7868:	add	r3, pc, r3
    786c:	sub	sp, sp, #28
    7870:	mov	r4, r0
    7874:	mov	r0, r5
    7878:	mov	r6, r2
    787c:	ldr	r1, [r3, r1]
    7880:	ldr	r3, [r1]
    7884:	str	r1, [sp, #12]
    7888:	str	r3, [sp, #20]
    788c:	bl	3e34 <g_strv_length@plt>
    7890:	subs	r7, r0, #0
    7894:	beq	79f8 <main@@Base+0x35c0>
    7898:	ldr	r8, [r4, #8]
    789c:	ldr	r1, [r5]
    78a0:	cmp	r8, #0
    78a4:	movne	r8, #3
    78a8:	moveq	r8, #0
    78ac:	cmp	r1, #0
    78b0:	beq	79d8 <main@@Base+0x35a0>
    78b4:	ldr	sl, [pc, #556]	; 7ae8 <main@@Base+0x36b0>
    78b8:	add	r6, r5, #4
    78bc:	ldr	r2, [pc, #552]	; 7aec <main@@Base+0x36b4>
    78c0:	add	fp, sp, #16
    78c4:	ldr	r3, [pc, #548]	; 7af0 <main@@Base+0x36b8>
    78c8:	add	sl, pc, sl
    78cc:	add	r2, pc, r2
    78d0:	mov	r9, #0
    78d4:	add	r3, pc, r3
    78d8:	str	r2, [sp, #4]
    78dc:	str	r3, [sp, #8]
    78e0:	b	793c <main@@Base+0x3504>
    78e4:	ldr	r3, [sp, #16]
    78e8:	ldr	r0, [sp, #8]
    78ec:	ldr	r1, [r3, #8]
    78f0:	bl	3fe4 <g_print@plt>
    78f4:	ldr	r0, [sp, #16]
    78f8:	cmp	r0, #0
    78fc:	beq	7904 <main@@Base+0x34cc>
    7900:	bl	38e8 <g_error_free@plt>
    7904:	cmp	r5, #0
    7908:	beq	7914 <main@@Base+0x34dc>
    790c:	mov	r0, r5
    7910:	bl	4110 <g_object_unref@plt>
    7914:	cmp	r4, #0
    7918:	beq	7924 <main@@Base+0x34ec>
    791c:	mov	r0, r4
    7920:	bl	4110 <g_object_unref@plt>
    7924:	mov	r0, #0
    7928:	mov	r5, r6
    792c:	bl	3eac <g_free@plt>
    7930:	ldr	r1, [r6], #4
    7934:	cmp	r1, #0
    7938:	beq	79d8 <main@@Base+0x35a0>
    793c:	mov	r0, sl
    7940:	str	r9, [sp, #16]
    7944:	bl	3fe4 <g_print@plt>
    7948:	bl	11258 <main@@Base+0xce20>
    794c:	mov	r4, r0
    7950:	ldr	r0, [r5]
    7954:	bl	4218 <g_file_new_for_path@plt>
    7958:	mov	r5, r0
    795c:	mov	r1, r0
    7960:	mov	r2, r8
    7964:	mov	r0, r4
    7968:	mov	r3, fp
    796c:	bl	11ddc <main@@Base+0xd9a4>
    7970:	cmp	r0, #0
    7974:	beq	78e4 <main@@Base+0x34ac>
    7978:	mov	r0, r4
    797c:	bl	125fc <main@@Base+0xe1c4>
    7980:	mov	r7, r0
    7984:	ldr	r0, [sp, #4]
    7988:	mov	r1, r7
    798c:	bl	3fe4 <g_print@plt>
    7990:	ldr	r0, [sp, #16]
    7994:	cmp	r0, #0
    7998:	beq	79a0 <main@@Base+0x3568>
    799c:	bl	38e8 <g_error_free@plt>
    79a0:	cmp	r5, #0
    79a4:	beq	79b0 <main@@Base+0x3578>
    79a8:	mov	r0, r5
    79ac:	bl	4110 <g_object_unref@plt>
    79b0:	cmp	r4, #0
    79b4:	beq	79c0 <main@@Base+0x3588>
    79b8:	mov	r0, r4
    79bc:	bl	4110 <g_object_unref@plt>
    79c0:	mov	r0, r7
    79c4:	mov	r5, r6
    79c8:	bl	3eac <g_free@plt>
    79cc:	ldr	r1, [r6], #4
    79d0:	cmp	r1, #0
    79d4:	bne	793c <main@@Base+0x3504>
    79d8:	mov	r0, #1
    79dc:	ldr	r1, [sp, #12]
    79e0:	ldr	r2, [sp, #20]
    79e4:	ldr	r3, [r1]
    79e8:	cmp	r2, r3
    79ec:	bne	7a1c <main@@Base+0x35e4>
    79f0:	add	sp, sp, #28
    79f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    79f8:	bl	40a4 <fwupd_error_quark@plt>
    79fc:	ldr	r3, [pc, #240]	; 7af4 <main@@Base+0x36bc>
    7a00:	mov	r2, r7
    7a04:	add	r3, pc, r3
    7a08:	mov	r1, r0
    7a0c:	mov	r0, r6
    7a10:	bl	3ae0 <g_set_error_literal@plt>
    7a14:	mov	r0, r7
    7a18:	b	79dc <main@@Base+0x35a4>
    7a1c:	bl	3e4c <__stack_chk_fail@plt>
    7a20:	mov	r5, r0
    7a24:	mov	r0, r7
    7a28:	bl	3eac <g_free@plt>
    7a2c:	mov	r0, r5
    7a30:	bl	42f0 <_Unwind_Resume@plt>
    7a34:	mov	r5, r0
    7a38:	cmp	r4, #0
    7a3c:	beq	7a24 <main@@Base+0x35ec>
    7a40:	mov	r0, r4
    7a44:	bl	4110 <g_object_unref@plt>
    7a48:	b	7a24 <main@@Base+0x35ec>
    7a4c:	mov	r6, r0
    7a50:	cmp	r5, #0
    7a54:	beq	7a60 <main@@Base+0x3628>
    7a58:	mov	r0, r5
    7a5c:	bl	4110 <g_object_unref@plt>
    7a60:	mov	r5, r6
    7a64:	b	7a38 <main@@Base+0x3600>
    7a68:	mov	r6, r0
    7a6c:	ldr	r0, [sp, #16]
    7a70:	cmp	r0, #0
    7a74:	beq	7a50 <main@@Base+0x3618>
    7a78:	bl	38e8 <g_error_free@plt>
    7a7c:	b	7a50 <main@@Base+0x3618>
    7a80:	mov	r6, r0
    7a84:	mov	r7, #0
    7a88:	b	7a6c <main@@Base+0x3634>
    7a8c:	mov	r5, r0
    7a90:	mov	r7, #0
    7a94:	b	7a24 <main@@Base+0x35ec>
    7a98:	mov	r5, r0
    7a9c:	mov	r7, #0
    7aa0:	b	7a38 <main@@Base+0x3600>
    7aa4:	mov	r6, r0
    7aa8:	mov	r7, #0
    7aac:	b	7a50 <main@@Base+0x3618>
    7ab0:	b	7a80 <main@@Base+0x3648>
    7ab4:	b	7a80 <main@@Base+0x3648>
    7ab8:	mov	r5, #0
    7abc:	mov	r6, r0
    7ac0:	mov	r7, r5
    7ac4:	b	7a6c <main@@Base+0x3634>
    7ac8:	mov	r5, #0
    7acc:	mov	r6, r0
    7ad0:	mov	r4, r5
    7ad4:	mov	r7, r5
    7ad8:	b	7a6c <main@@Base+0x3634>
    7adc:	b	7ac8 <main@@Base+0x3690>
    7ae0:	andeq	r7, r3, r8, lsl r3
    7ae4:	andeq	r0, r0, r0, lsr r4
    7ae8:	andeq	sp, r1, ip, ror #26
    7aec:	andeq	lr, r1, ip, lsr fp
    7af0:	andeq	sp, r1, r0, ror sp
    7af4:	andeq	sp, r1, r8, lsl #24
    7af8:	ldr	r3, [pc, #2824]	; 8608 <main@@Base+0x41d0>
    7afc:	ldr	r1, [pc, #2824]	; 860c <main@@Base+0x41d4>
    7b00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7b04:	add	r3, pc, r3
    7b08:	sub	sp, sp, #124	; 0x7c
    7b0c:	str	r0, [sp, #64]	; 0x40
    7b10:	mov	r0, r2
    7b14:	ldr	r1, [r3, r1]
    7b18:	ldr	r3, [r1]
    7b1c:	str	r1, [sp, #68]	; 0x44
    7b20:	str	r3, [sp, #116]	; 0x74
    7b24:	bl	3cd8 <g_usb_context_new@plt>
    7b28:	subs	r1, r0, #0
    7b2c:	str	r1, [sp, #56]	; 0x38
    7b30:	beq	82e8 <main@@Base+0x3eb0>
    7b34:	bl	3ccc <g_usb_context_enumerate@plt>
    7b38:	ldr	r0, [sp, #56]	; 0x38
    7b3c:	bl	43ec <g_usb_context_get_devices@plt>
    7b40:	ldr	r3, [r0, #4]
    7b44:	str	r0, [sp, #48]	; 0x30
    7b48:	cmp	r3, #0
    7b4c:	beq	827c <main@@Base+0x3e44>
    7b50:	ldr	r2, [pc, #2744]	; 8610 <main@@Base+0x41d8>
    7b54:	mov	r3, #0
    7b58:	ldr	r1, [pc, #2740]	; 8614 <main@@Base+0x41dc>
    7b5c:	add	r2, pc, r2
    7b60:	str	r2, [sp, #72]	; 0x48
    7b64:	ldr	r2, [pc, #2732]	; 8618 <main@@Base+0x41e0>
    7b68:	add	r1, pc, r1
    7b6c:	str	r3, [sp, #32]
    7b70:	add	r2, pc, r2
    7b74:	str	r1, [sp, #76]	; 0x4c
    7b78:	str	r2, [sp, #88]	; 0x58
    7b7c:	ldr	r3, [pc, #2712]	; 861c <main@@Base+0x41e4>
    7b80:	ldr	r1, [pc, #2712]	; 8620 <main@@Base+0x41e8>
    7b84:	ldr	r2, [pc, #2712]	; 8624 <main@@Base+0x41ec>
    7b88:	add	r3, pc, r3
    7b8c:	add	r1, pc, r1
    7b90:	str	r3, [sp, #92]	; 0x5c
    7b94:	add	r2, pc, r2
    7b98:	str	r1, [sp, #96]	; 0x60
    7b9c:	str	r2, [sp, #100]	; 0x64
    7ba0:	b	7c0c <main@@Base+0x37d4>
    7ba4:	ldr	r0, [sp, #108]	; 0x6c
    7ba8:	cmp	r0, #0
    7bac:	beq	7bb4 <main@@Base+0x377c>
    7bb0:	bl	38e8 <g_error_free@plt>
    7bb4:	cmp	fp, #0
    7bb8:	beq	7bc4 <main@@Base+0x378c>
    7bbc:	mov	r0, fp
    7bc0:	bl	4110 <g_object_unref@plt>
    7bc4:	ldr	r1, [sp, #20]
    7bc8:	cmp	r1, #0
    7bcc:	beq	7bd8 <main@@Base+0x37a0>
    7bd0:	mov	r0, r1
    7bd4:	bl	4110 <g_object_unref@plt>
    7bd8:	ldr	r0, [sp, #36]	; 0x24
    7bdc:	bl	3eac <g_free@plt>
    7be0:	mov	r0, #0
    7be4:	bl	3eac <g_free@plt>
    7be8:	mov	r0, #0
    7bec:	bl	3eac <g_free@plt>
    7bf0:	ldr	r1, [sp, #48]	; 0x30
    7bf4:	ldr	r2, [sp, #32]
    7bf8:	ldr	r3, [r1, #4]
    7bfc:	add	r2, r2, #1
    7c00:	str	r2, [sp, #32]
    7c04:	cmp	r3, r2
    7c08:	bls	827c <main@@Base+0x3e44>
    7c0c:	ldr	r1, [sp, #48]	; 0x30
    7c10:	mov	r2, #0
    7c14:	ldr	r3, [r1]
    7c18:	str	r2, [sp, #108]	; 0x6c
    7c1c:	ldr	r2, [sp, #32]
    7c20:	ldr	r4, [r3, r2, lsl #2]
    7c24:	mov	r0, r4
    7c28:	bl	d8e8 <main@@Base+0x94b0>
    7c2c:	str	r0, [sp, #20]
    7c30:	bl	1f330 <main@@Base+0x1aef8>
    7c34:	mov	r1, r0
    7c38:	ldr	r0, [sp, #20]
    7c3c:	bl	39d8 <g_type_check_instance_cast@plt>
    7c40:	ldr	r3, [sp, #64]	; 0x40
    7c44:	ldr	r1, [r3, #24]
    7c48:	bl	212c8 <main@@Base+0x1ce90>
    7c4c:	ldr	r0, [sp, #20]
    7c50:	ldr	r1, [sp, #56]	; 0x38
    7c54:	bl	d87c <main@@Base+0x9444>
    7c58:	bl	23a78 <main@@Base+0x1f640>
    7c5c:	mov	r1, r0
    7c60:	ldr	r0, [sp, #20]
    7c64:	bl	39d8 <g_type_check_instance_cast@plt>
    7c68:	mov	r1, #0
    7c6c:	bl	23e30 <fu_usb_device_close@@Base+0x11c>
    7c70:	cmp	r0, #0
    7c74:	moveq	fp, r0
    7c78:	streq	fp, [sp, #36]	; 0x24
    7c7c:	beq	7ba4 <main@@Base+0x376c>
    7c80:	mov	r0, r4
    7c84:	bl	3c3c <g_usb_device_get_release@plt>
    7c88:	mov	r1, #2
    7c8c:	bl	3c60 <as_utils_version_from_uint16@plt>
    7c90:	str	r0, [sp, #36]	; 0x24
    7c94:	mov	r2, #5
    7c98:	ldr	r1, [sp, #72]	; 0x48
    7c9c:	mov	r0, #0
    7ca0:	bl	3ed0 <dcgettext@plt>
    7ca4:	mov	r6, r0
    7ca8:	mov	r0, r4
    7cac:	bl	4050 <g_usb_device_get_vid@plt>
    7cb0:	mov	r5, r0
    7cb4:	mov	r0, r4
    7cb8:	bl	3abc <g_usb_device_get_pid@plt>
    7cbc:	ldr	r1, [sp, #36]	; 0x24
    7cc0:	mov	r3, r0
    7cc4:	mov	r2, r5
    7cc8:	ldr	r0, [sp, #76]	; 0x4c
    7ccc:	str	r1, [sp]
    7cd0:	mov	r1, r6
    7cd4:	bl	3fe4 <g_print@plt>
    7cd8:	ldr	r0, [sp, #20]
    7cdc:	bl	c4d8 <main@@Base+0x80a0>
    7ce0:	bl	bba0 <main@@Base+0x7768>
    7ce4:	subs	r4, r0, #0
    7ce8:	beq	7d08 <main@@Base+0x38d0>
    7cec:	ldr	r1, [sp, #88]	; 0x58
    7cf0:	mov	r2, #5
    7cf4:	mov	r0, #0
    7cf8:	bl	3ed0 <dcgettext@plt>
    7cfc:	mov	r1, r4
    7d00:	mov	r2, #1
    7d04:	bl	570c <main@@Base+0x12d4>
    7d08:	add	r4, sp, #108	; 0x6c
    7d0c:	ldr	r0, [sp, #20]
    7d10:	mov	r1, r4
    7d14:	bl	21dac <main@@Base+0x1d974>
    7d18:	subs	fp, r0, #0
    7d1c:	beq	821c <main@@Base+0x3de4>
    7d20:	mov	r1, r4
    7d24:	ldr	r0, [sp, #20]
    7d28:	bl	f9a4 <main@@Base+0xb56c>
    7d2c:	cmp	r0, #0
    7d30:	bne	7d58 <main@@Base+0x3920>
    7d34:	ldr	r1, [pc, #2284]	; 8628 <main@@Base+0x41f0>
    7d38:	mov	r2, #5
    7d3c:	add	r1, pc, r1
    7d40:	bl	3ed0 <dcgettext@plt>
    7d44:	ldr	r3, [sp, #108]	; 0x6c
    7d48:	mov	r2, #1
    7d4c:	ldr	r1, [r3, #8]
    7d50:	bl	570c <main@@Base+0x12d4>
    7d54:	b	7ba4 <main@@Base+0x376c>
    7d58:	bl	1f330 <main@@Base+0x1aef8>
    7d5c:	mov	r1, r0
    7d60:	ldr	r0, [sp, #20]
    7d64:	bl	39d8 <g_type_check_instance_cast@plt>
    7d68:	mov	r4, r0
    7d6c:	bl	4290 <fwupd_device_get_type@plt>
    7d70:	mov	r1, r0
    7d74:	mov	r0, r4
    7d78:	bl	39d8 <g_type_check_instance_cast@plt>
    7d7c:	bl	3f6c <fwupd_device_get_name@plt>
    7d80:	subs	r4, r0, #0
    7d84:	beq	7da4 <main@@Base+0x396c>
    7d88:	ldr	r1, [sp, #92]	; 0x5c
    7d8c:	mov	r2, #5
    7d90:	mov	r0, #0
    7d94:	bl	3ed0 <dcgettext@plt>
    7d98:	mov	r1, r4
    7d9c:	mov	r2, #1
    7da0:	bl	570c <main@@Base+0x12d4>
    7da4:	bl	1f330 <main@@Base+0x1aef8>
    7da8:	mov	r1, r0
    7dac:	ldr	r0, [sp, #20]
    7db0:	bl	39d8 <g_type_check_instance_cast@plt>
    7db4:	bl	20800 <main@@Base+0x1c3c8>
    7db8:	subs	r4, r0, #0
    7dbc:	beq	7ddc <main@@Base+0x39a4>
    7dc0:	ldr	r1, [sp, #96]	; 0x60
    7dc4:	mov	r2, #5
    7dc8:	mov	r0, #0
    7dcc:	bl	3ed0 <dcgettext@plt>
    7dd0:	mov	r1, r4
    7dd4:	mov	r2, #1
    7dd8:	bl	570c <main@@Base+0x12d4>
    7ddc:	ldr	r0, [sp, #20]
    7de0:	bl	d500 <main@@Base+0x90c8>
    7de4:	mov	r5, r0
    7de8:	ldr	r1, [sp, #100]	; 0x64
    7dec:	mov	r0, #0
    7df0:	mov	r2, #5
    7df4:	bl	3ed0 <dcgettext@plt>
    7df8:	cmp	r5, #0
    7dfc:	mov	r4, r0
    7e00:	beq	81dc <main@@Base+0x3da4>
    7e04:	ldr	r1, [pc, #2080]	; 862c <main@@Base+0x41f4>
    7e08:	mov	r0, #0
    7e0c:	mov	r2, #5
    7e10:	add	r1, pc, r1
    7e14:	bl	3ed0 <dcgettext@plt>
    7e18:	mov	r1, r0
    7e1c:	mov	r0, r4
    7e20:	mov	r2, #1
    7e24:	bl	570c <main@@Base+0x12d4>
    7e28:	ldr	r0, [sp, #20]
    7e2c:	bl	d6bc <main@@Base+0x9284>
    7e30:	bl	b9c8 <main@@Base+0x7590>
    7e34:	ldr	r1, [pc, #2036]	; 8630 <main@@Base+0x41f8>
    7e38:	mov	r4, r0
    7e3c:	mov	r2, #5
    7e40:	mov	r0, #0
    7e44:	add	r1, pc, r1
    7e48:	bl	3ed0 <dcgettext@plt>
    7e4c:	mov	r1, r4
    7e50:	mov	r2, #1
    7e54:	bl	570c <main@@Base+0x12d4>
    7e58:	ldr	r0, [sp, #20]
    7e5c:	bl	d62c <main@@Base+0x91f4>
    7e60:	bl	b8b8 <main@@Base+0x7480>
    7e64:	ldr	r1, [pc, #1992]	; 8634 <main@@Base+0x41fc>
    7e68:	mov	r4, r0
    7e6c:	mov	r2, #5
    7e70:	mov	r0, #0
    7e74:	add	r1, pc, r1
    7e78:	bl	3ed0 <dcgettext@plt>
    7e7c:	mov	r1, r4
    7e80:	mov	r2, #1
    7e84:	bl	570c <main@@Base+0x12d4>
    7e88:	ldr	r0, [sp, #20]
    7e8c:	bl	c44c <main@@Base+0x8014>
    7e90:	cmp	r0, #0
    7e94:	beq	7ed4 <main@@Base+0x3a9c>
    7e98:	uxth	r0, r0
    7e9c:	mov	r1, #0
    7ea0:	mov	r2, #1
    7ea4:	bl	432c <g_format_size_full@plt>
    7ea8:	ldr	r1, [pc, #1928]	; 8638 <main@@Base+0x4200>
    7eac:	mov	r4, r0
    7eb0:	mov	r2, #5
    7eb4:	mov	r0, #0
    7eb8:	add	r1, pc, r1
    7ebc:	bl	3ed0 <dcgettext@plt>
    7ec0:	mov	r1, r4
    7ec4:	mov	r2, #1
    7ec8:	bl	570c <main@@Base+0x12d4>
    7ecc:	mov	r0, r4
    7ed0:	bl	3eac <g_free@plt>
    7ed4:	ldr	r0, [sp, #20]
    7ed8:	bl	10754 <main@@Base+0xc31c>
    7edc:	cmp	r0, #0
    7ee0:	str	r0, [sp, #24]
    7ee4:	beq	7ef8 <main@@Base+0x3ac0>
    7ee8:	ldr	r2, [sp, #24]
    7eec:	ldrb	r3, [r2]
    7ef0:	cmp	r3, #0
    7ef4:	bne	81f8 <main@@Base+0x3dc0>
    7ef8:	ldr	r0, [sp, #20]
    7efc:	bl	10510 <main@@Base+0xc0d8>
    7f00:	subs	sl, r0, #0
    7f04:	beq	7f28 <main@@Base+0x3af0>
    7f08:	ldr	r1, [pc, #1836]	; 863c <main@@Base+0x4204>
    7f0c:	mov	r2, #5
    7f10:	mov	r0, #0
    7f14:	add	r1, pc, r1
    7f18:	bl	3ed0 <dcgettext@plt>
    7f1c:	mov	r1, sl
    7f20:	mov	r2, #1
    7f24:	bl	570c <main@@Base+0x12d4>
    7f28:	ldr	r0, [sp, #20]
    7f2c:	bl	e1d4 <main@@Base+0x9d9c>
    7f30:	subs	r4, r0, #0
    7f34:	beq	7f58 <main@@Base+0x3b20>
    7f38:	ldr	r1, [pc, #1792]	; 8640 <main@@Base+0x4208>
    7f3c:	mov	r2, #5
    7f40:	mov	r0, #0
    7f44:	add	r1, pc, r1
    7f48:	bl	3ed0 <dcgettext@plt>
    7f4c:	mov	r1, r4
    7f50:	mov	r2, #1
    7f54:	bl	570c <main@@Base+0x12d4>
    7f58:	ldr	r0, [sp, #20]
    7f5c:	bl	d910 <main@@Base+0x94d8>
    7f60:	ldr	r3, [r0, #4]
    7f64:	str	r0, [sp, #28]
    7f68:	cmp	r3, #0
    7f6c:	beq	8138 <main@@Base+0x3d00>
    7f70:	ldr	r3, [pc, #1740]	; 8644 <main@@Base+0x420c>
    7f74:	mov	r1, #0
    7f78:	ldr	r2, [pc, #1736]	; 8648 <main@@Base+0x4210>
    7f7c:	add	r3, pc, r3
    7f80:	str	r3, [sp, #40]	; 0x28
    7f84:	ldr	r3, [pc, #1728]	; 864c <main@@Base+0x4214>
    7f88:	add	r2, pc, r2
    7f8c:	str	r1, [sp, #12]
    7f90:	add	r3, pc, r3
    7f94:	str	r2, [sp, #44]	; 0x2c
    7f98:	str	r3, [sp, #80]	; 0x50
    7f9c:	ldr	r1, [pc, #1708]	; 8650 <main@@Base+0x4218>
    7fa0:	ldr	r2, [pc, #1708]	; 8654 <main@@Base+0x421c>
    7fa4:	ldr	r3, [pc, #1708]	; 8658 <main@@Base+0x4220>
    7fa8:	add	r1, pc, r1
    7fac:	add	r2, pc, r2
    7fb0:	str	r1, [sp, #84]	; 0x54
    7fb4:	add	r3, pc, r3
    7fb8:	str	r2, [sp, #52]	; 0x34
    7fbc:	str	r3, [sp, #60]	; 0x3c
    7fc0:	ldr	r1, [sp, #28]
    7fc4:	mov	r3, #0
    7fc8:	ldr	r2, [r1]
    7fcc:	ldr	r1, [sp, #12]
    7fd0:	ldr	r4, [r2, r1, lsl #2]
    7fd4:	str	r3, [sp, #112]	; 0x70
    7fd8:	mov	r0, r4
    7fdc:	bl	1a5dc <main@@Base+0x161a4>
    7fe0:	mov	r1, r0
    7fe4:	ldr	r0, [sp, #40]	; 0x28
    7fe8:	bl	3c18 <g_strdup_printf@plt>
    7fec:	str	r0, [sp, #16]
    7ff0:	mov	r2, #5
    7ff4:	ldr	r1, [sp, #44]	; 0x2c
    7ff8:	mov	r0, #0
    7ffc:	bl	3ed0 <dcgettext@plt>
    8000:	ldr	r1, [sp, #16]
    8004:	mov	r2, #1
    8008:	bl	570c <main@@Base+0x12d4>
    800c:	mov	r0, r4
    8010:	add	r1, sp, #112	; 0x70
    8014:	bl	1a74c <main@@Base+0x16314>
    8018:	subs	r5, r0, #0
    801c:	beq	8180 <main@@Base+0x3d48>
    8020:	ldr	r1, [sp, #52]	; 0x34
    8024:	mov	r2, #5
    8028:	mov	r0, #0
    802c:	bl	3ed0 <dcgettext@plt>
    8030:	mov	r1, r5
    8034:	mov	r2, #2
    8038:	bl	570c <main@@Base+0x12d4>
    803c:	mov	r0, r4
    8040:	bl	1a82c <main@@Base+0x163f4>
    8044:	subs	r6, r0, #0
    8048:	beq	8078 <main@@Base+0x3c40>
    804c:	mov	r0, #0
    8050:	ldr	r1, [sp, #60]	; 0x3c
    8054:	mov	r2, #5
    8058:	bl	3ed0 <dcgettext@plt>
    805c:	mov	r5, r0
    8060:	mov	r0, r6
    8064:	bl	bb50 <main@@Base+0x7718>
    8068:	mov	r1, r0
    806c:	mov	r2, #2
    8070:	mov	r0, r5
    8074:	bl	570c <main@@Base+0x12d4>
    8078:	mov	r0, r4
    807c:	bl	18a80 <main@@Base+0x14648>
    8080:	ldr	r3, [r0, #4]
    8084:	mov	r6, r0
    8088:	cmp	r3, #0
    808c:	beq	8104 <main@@Base+0x3ccc>
    8090:	ldr	r8, [pc, #1476]	; 865c <main@@Base+0x4224>
    8094:	mov	r4, #0
    8098:	ldr	r9, [pc, #1472]	; 8660 <main@@Base+0x4228>
    809c:	add	r8, pc, r8
    80a0:	add	r9, pc, r9
    80a4:	ldr	r3, [r6]
    80a8:	ldr	r0, [r3, r4, lsl #2]
    80ac:	bl	17c1c <main@@Base+0x137e4>
    80b0:	mov	r1, r8
    80b4:	mov	r2, #5
    80b8:	mov	r5, r0
    80bc:	mov	r0, #0
    80c0:	bl	3ed0 <dcgettext@plt>
    80c4:	mov	r2, r4
    80c8:	mov	r1, r0
    80cc:	mov	r0, r9
    80d0:	bl	3c18 <g_strdup_printf@plt>
    80d4:	mov	r1, r5
    80d8:	mov	r2, #2
    80dc:	mov	r7, r0
    80e0:	bl	570c <main@@Base+0x12d4>
    80e4:	mov	r0, r7
    80e8:	bl	3eac <g_free@plt>
    80ec:	mov	r0, r5
    80f0:	bl	3eac <g_free@plt>
    80f4:	ldr	r3, [r6, #4]
    80f8:	add	r4, r4, #1
    80fc:	cmp	r4, r3
    8100:	bcc	80a4 <main@@Base+0x3c6c>
    8104:	ldr	r0, [sp, #112]	; 0x70
    8108:	cmp	r0, #0
    810c:	beq	8114 <main@@Base+0x3cdc>
    8110:	bl	38e8 <g_error_free@plt>
    8114:	ldr	r0, [sp, #16]
    8118:	bl	3eac <g_free@plt>
    811c:	ldr	r1, [sp, #28]
    8120:	ldr	r2, [sp, #12]
    8124:	ldr	r3, [r1, #4]
    8128:	add	r2, r2, #1
    812c:	str	r2, [sp, #12]
    8130:	cmp	r3, r2
    8134:	bhi	7fc0 <main@@Base+0x3b88>
    8138:	ldr	r0, [sp, #108]	; 0x6c
    813c:	cmp	r0, #0
    8140:	beq	8148 <main@@Base+0x3d10>
    8144:	bl	38e8 <g_error_free@plt>
    8148:	mov	r0, fp
    814c:	bl	4110 <g_object_unref@plt>
    8150:	ldr	r3, [sp, #20]
    8154:	cmp	r3, #0
    8158:	beq	8164 <main@@Base+0x3d2c>
    815c:	mov	r0, r3
    8160:	bl	4110 <g_object_unref@plt>
    8164:	ldr	r0, [sp, #36]	; 0x24
    8168:	bl	3eac <g_free@plt>
    816c:	mov	r0, sl
    8170:	bl	3eac <g_free@plt>
    8174:	ldr	r0, [sp, #24]
    8178:	bl	3eac <g_free@plt>
    817c:	b	7bf0 <main@@Base+0x37b8>
    8180:	ldr	r5, [sp, #112]	; 0x70
    8184:	bl	40a4 <fwupd_error_quark@plt>
    8188:	mov	r1, r0
    818c:	mov	r2, #8
    8190:	mov	r0, r5
    8194:	bl	3d68 <g_error_matches@plt>
    8198:	cmp	r0, #0
    819c:	bne	803c <main@@Base+0x3c04>
    81a0:	ldr	r3, [sp, #112]	; 0x70
    81a4:	ldr	r0, [sp, #80]	; 0x50
    81a8:	ldr	r1, [r3, #8]
    81ac:	bl	3c18 <g_strdup_printf@plt>
    81b0:	mov	r5, r0
    81b4:	ldr	r1, [sp, #84]	; 0x54
    81b8:	mov	r2, #5
    81bc:	mov	r0, #0
    81c0:	bl	3ed0 <dcgettext@plt>
    81c4:	mov	r1, r5
    81c8:	mov	r2, #2
    81cc:	bl	570c <main@@Base+0x12d4>
    81d0:	mov	r0, r5
    81d4:	bl	3eac <g_free@plt>
    81d8:	b	803c <main@@Base+0x3c04>
    81dc:	ldr	r1, [pc, #1152]	; 8664 <main@@Base+0x422c>
    81e0:	mov	r0, r5
    81e4:	mov	r2, #5
    81e8:	add	r1, pc, r1
    81ec:	bl	3ed0 <dcgettext@plt>
    81f0:	mov	r1, r0
    81f4:	b	7e1c <main@@Base+0x39e4>
    81f8:	ldr	r1, [pc, #1128]	; 8668 <main@@Base+0x4230>
    81fc:	mov	r2, #5
    8200:	mov	r0, #0
    8204:	add	r1, pc, r1
    8208:	bl	3ed0 <dcgettext@plt>
    820c:	ldr	r1, [sp, #24]
    8210:	mov	r2, #1
    8214:	bl	570c <main@@Base+0x12d4>
    8218:	b	7ef8 <main@@Base+0x3ac0>
    821c:	ldr	r4, [sp, #108]	; 0x6c
    8220:	bl	40a4 <fwupd_error_quark@plt>
    8224:	mov	r1, r0
    8228:	mov	r2, #13
    822c:	mov	r0, r4
    8230:	bl	3d68 <g_error_matches@plt>
    8234:	cmp	r0, #0
    8238:	beq	82ac <main@@Base+0x3e74>
    823c:	ldr	r1, [pc, #1064]	; 866c <main@@Base+0x4234>
    8240:	mov	r2, #5
    8244:	mov	r0, #0
    8248:	add	r1, pc, r1
    824c:	bl	3ed0 <dcgettext@plt>
    8250:	ldr	r1, [pc, #1048]	; 8670 <main@@Base+0x4238>
    8254:	mov	r2, #5
    8258:	add	r1, pc, r1
    825c:	mov	r4, r0
    8260:	mov	r0, #0
    8264:	bl	3ed0 <dcgettext@plt>
    8268:	mov	r2, #1
    826c:	mov	r1, r0
    8270:	mov	r0, r4
    8274:	bl	570c <main@@Base+0x12d4>
    8278:	b	7ba4 <main@@Base+0x376c>
    827c:	ldr	r0, [sp, #48]	; 0x30
    8280:	bl	4224 <g_ptr_array_unref@plt>
    8284:	ldr	r0, [sp, #56]	; 0x38
    8288:	bl	4110 <g_object_unref@plt>
    828c:	mov	r0, #1
    8290:	ldr	r1, [sp, #68]	; 0x44
    8294:	ldr	r2, [sp, #116]	; 0x74
    8298:	ldr	r3, [r1]
    829c:	cmp	r2, r3
    82a0:	bne	83b4 <main@@Base+0x3f7c>
    82a4:	add	sp, sp, #124	; 0x7c
    82a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    82ac:	ldr	r4, [sp, #108]	; 0x6c
    82b0:	bl	40a4 <fwupd_error_quark@plt>
    82b4:	mov	r1, r0
    82b8:	mov	r2, #10
    82bc:	mov	r0, r4
    82c0:	bl	3d68 <g_error_matches@plt>
    82c4:	cmp	r0, #0
    82c8:	beq	82f0 <main@@Base+0x3eb8>
    82cc:	ldr	r0, [pc, #928]	; 8674 <main@@Base+0x423c>
    82d0:	mov	r1, #128	; 0x80
    82d4:	ldr	r2, [pc, #924]	; 8678 <main@@Base+0x4240>
    82d8:	add	r0, pc, r0
    82dc:	add	r2, pc, r2
    82e0:	bl	3a38 <g_log@plt>
    82e4:	b	7ba4 <main@@Base+0x376c>
    82e8:	ldr	r0, [sp, #56]	; 0x38
    82ec:	b	8290 <main@@Base+0x3e58>
    82f0:	ldr	r1, [pc, #900]	; 867c <main@@Base+0x4244>
    82f4:	mov	r2, #5
    82f8:	add	r1, pc, r1
    82fc:	bl	3ed0 <dcgettext@plt>
    8300:	ldr	r3, [sp, #108]	; 0x6c
    8304:	mov	r2, #1
    8308:	ldr	r1, [r3, #8]
    830c:	bl	570c <main@@Base+0x12d4>
    8310:	b	7ba4 <main@@Base+0x376c>
    8314:	mov	r4, r0
    8318:	mov	r1, #0
    831c:	str	r1, [sp, #56]	; 0x38
    8320:	ldr	r3, [sp, #56]	; 0x38
    8324:	cmp	r3, #0
    8328:	beq	8334 <main@@Base+0x3efc>
    832c:	ldr	r0, [sp, #56]	; 0x38
    8330:	bl	4110 <g_object_unref@plt>
    8334:	mov	r0, r4
    8338:	bl	42f0 <_Unwind_Resume@plt>
    833c:	mov	r4, r0
    8340:	mov	sl, #0
    8344:	str	sl, [sp, #24]
    8348:	ldr	r0, [sp, #108]	; 0x6c
    834c:	cmp	r0, #0
    8350:	beq	8358 <main@@Base+0x3f20>
    8354:	bl	38e8 <g_error_free@plt>
    8358:	cmp	fp, #0
    835c:	beq	8368 <main@@Base+0x3f30>
    8360:	mov	r0, fp
    8364:	bl	4110 <g_object_unref@plt>
    8368:	ldr	r2, [sp, #20]
    836c:	cmp	r2, #0
    8370:	beq	837c <main@@Base+0x3f44>
    8374:	mov	r0, r2
    8378:	bl	4110 <g_object_unref@plt>
    837c:	ldr	r0, [sp, #36]	; 0x24
    8380:	bl	3eac <g_free@plt>
    8384:	mov	r0, sl
    8388:	bl	3eac <g_free@plt>
    838c:	ldr	r0, [sp, #24]
    8390:	bl	3eac <g_free@plt>
    8394:	ldr	r0, [sp, #48]	; 0x30
    8398:	bl	4224 <g_ptr_array_unref@plt>
    839c:	b	8320 <main@@Base+0x3ee8>
    83a0:	b	833c <main@@Base+0x3f04>
    83a4:	b	833c <main@@Base+0x3f04>
    83a8:	b	833c <main@@Base+0x3f04>
    83ac:	mov	r4, r0
    83b0:	b	8358 <main@@Base+0x3f20>
    83b4:	bl	3e4c <__stack_chk_fail@plt>
    83b8:	mov	r4, r0
    83bc:	b	832c <main@@Base+0x3ef4>
    83c0:	b	833c <main@@Base+0x3f04>
    83c4:	b	833c <main@@Base+0x3f04>
    83c8:	b	833c <main@@Base+0x3f04>
    83cc:	mov	r4, r0
    83d0:	mov	sl, #0
    83d4:	b	8348 <main@@Base+0x3f10>
    83d8:	mov	r4, r0
    83dc:	mov	r0, r5
    83e0:	bl	3eac <g_free@plt>
    83e4:	ldr	r0, [sp, #112]	; 0x70
    83e8:	cmp	r0, #0
    83ec:	beq	83f4 <main@@Base+0x3fbc>
    83f0:	bl	38e8 <g_error_free@plt>
    83f4:	ldr	r0, [sp, #16]
    83f8:	bl	3eac <g_free@plt>
    83fc:	b	8348 <main@@Base+0x3f10>
    8400:	mov	r4, r0
    8404:	mov	r5, #0
    8408:	b	83dc <main@@Base+0x3fa4>
    840c:	mov	r4, r0
    8410:	b	838c <main@@Base+0x3f54>
    8414:	mov	r4, r0
    8418:	b	8384 <main@@Base+0x3f4c>
    841c:	mov	r4, r0
    8420:	b	837c <main@@Base+0x3f44>
    8424:	mov	r4, r0
    8428:	b	8368 <main@@Base+0x3f30>
    842c:	mov	r4, r0
    8430:	b	8360 <main@@Base+0x3f28>
    8434:	mov	r4, r0
    8438:	b	83f4 <main@@Base+0x3fbc>
    843c:	b	83d8 <main@@Base+0x3fa0>
    8440:	mov	r4, r0
    8444:	mov	r0, r7
    8448:	bl	3eac <g_free@plt>
    844c:	b	83dc <main@@Base+0x3fa4>
    8450:	mov	r4, r0
    8454:	mov	r7, #0
    8458:	b	8444 <main@@Base+0x400c>
    845c:	mov	r7, #0
    8460:	mov	r4, r0
    8464:	mov	r5, r7
    8468:	b	8444 <main@@Base+0x400c>
    846c:	mov	r4, r0
    8470:	b	83e4 <main@@Base+0x3fac>
    8474:	mov	r3, #0
    8478:	mov	r4, r0
    847c:	str	r3, [sp, #16]
    8480:	b	83e4 <main@@Base+0x3fac>
    8484:	mov	r2, #0
    8488:	mov	r4, r0
    848c:	str	r2, [sp, #16]
    8490:	b	83e4 <main@@Base+0x3fac>
    8494:	mov	r4, r0
    8498:	b	8348 <main@@Base+0x3f10>
    849c:	b	83cc <main@@Base+0x3f94>
    84a0:	b	833c <main@@Base+0x3f04>
    84a4:	b	833c <main@@Base+0x3f04>
    84a8:	mov	r5, r0
    84ac:	mov	r0, r4
    84b0:	bl	3eac <g_free@plt>
    84b4:	mov	sl, #0
    84b8:	mov	r4, r5
    84bc:	str	sl, [sp, #24]
    84c0:	b	8348 <main@@Base+0x3f10>
    84c4:	mov	r5, r0
    84c8:	mov	r4, #0
    84cc:	b	84ac <main@@Base+0x4074>
    84d0:	b	833c <main@@Base+0x3f04>
    84d4:	b	833c <main@@Base+0x3f04>
    84d8:	b	833c <main@@Base+0x3f04>
    84dc:	b	833c <main@@Base+0x3f04>
    84e0:	b	833c <main@@Base+0x3f04>
    84e4:	b	833c <main@@Base+0x3f04>
    84e8:	b	833c <main@@Base+0x3f04>
    84ec:	b	833c <main@@Base+0x3f04>
    84f0:	b	833c <main@@Base+0x3f04>
    84f4:	b	833c <main@@Base+0x3f04>
    84f8:	b	833c <main@@Base+0x3f04>
    84fc:	b	833c <main@@Base+0x3f04>
    8500:	b	833c <main@@Base+0x3f04>
    8504:	b	833c <main@@Base+0x3f04>
    8508:	b	833c <main@@Base+0x3f04>
    850c:	b	833c <main@@Base+0x3f04>
    8510:	b	833c <main@@Base+0x3f04>
    8514:	b	833c <main@@Base+0x3f04>
    8518:	b	833c <main@@Base+0x3f04>
    851c:	b	833c <main@@Base+0x3f04>
    8520:	b	833c <main@@Base+0x3f04>
    8524:	b	833c <main@@Base+0x3f04>
    8528:	mov	fp, #0
    852c:	mov	r4, r0
    8530:	mov	sl, fp
    8534:	str	fp, [sp, #24]
    8538:	b	8348 <main@@Base+0x3f10>
    853c:	b	8528 <main@@Base+0x40f0>
    8540:	b	8528 <main@@Base+0x40f0>
    8544:	b	8528 <main@@Base+0x40f0>
    8548:	b	8528 <main@@Base+0x40f0>
    854c:	b	8528 <main@@Base+0x40f0>
    8550:	b	8528 <main@@Base+0x40f0>
    8554:	mov	fp, #0
    8558:	mov	r4, r0
    855c:	str	fp, [sp, #36]	; 0x24
    8560:	mov	sl, fp
    8564:	str	fp, [sp, #24]
    8568:	b	8348 <main@@Base+0x3f10>
    856c:	b	8554 <main@@Base+0x411c>
    8570:	mov	r4, r0
    8574:	b	8394 <main@@Base+0x3f5c>
    8578:	mov	r2, #0
    857c:	mov	r4, r0
    8580:	str	r2, [sp, #24]
    8584:	b	838c <main@@Base+0x3f54>
    8588:	mov	sl, #0
    858c:	mov	r4, r0
    8590:	str	sl, [sp, #24]
    8594:	b	8384 <main@@Base+0x3f4c>
    8598:	mov	sl, #0
    859c:	mov	r4, r0
    85a0:	str	sl, [sp, #24]
    85a4:	b	837c <main@@Base+0x3f44>
    85a8:	mov	sl, #0
    85ac:	mov	r4, r0
    85b0:	str	sl, [sp, #24]
    85b4:	b	8368 <main@@Base+0x3f30>
    85b8:	mov	sl, #0
    85bc:	mov	r4, r0
    85c0:	str	sl, [sp, #24]
    85c4:	b	8358 <main@@Base+0x3f20>
    85c8:	b	8554 <main@@Base+0x411c>
    85cc:	b	8554 <main@@Base+0x411c>
    85d0:	b	8554 <main@@Base+0x411c>
    85d4:	b	8554 <main@@Base+0x411c>
    85d8:	b	8554 <main@@Base+0x411c>
    85dc:	b	8554 <main@@Base+0x411c>
    85e0:	b	8554 <main@@Base+0x411c>
    85e4:	mov	fp, #0
    85e8:	mov	r4, r0
    85ec:	str	fp, [sp, #20]
    85f0:	mov	sl, fp
    85f4:	str	fp, [sp, #36]	; 0x24
    85f8:	str	fp, [sp, #24]
    85fc:	b	8348 <main@@Base+0x3f10>
    8600:	mov	r4, r0
    8604:	b	8320 <main@@Base+0x3ee8>
    8608:	andeq	r7, r3, ip, ror r0
    860c:	andeq	r0, r0, r0, lsr r4
    8610:	andeq	sp, r1, r8, lsl #22
    8614:	andeq	sp, r1, r4, lsl #22
    8618:	andeq	sp, r1, r4, lsl fp
    861c:	andeq	sp, r1, r4, asr #22
    8620:	andeq	sp, r1, r8, asr #22
    8624:	andeq	sp, r1, r8, asr #22
    8628:	andeq	sp, r1, r4, asr r9
    862c:	ldrdeq	sp, [r1], -r4
    8630:	andeq	sp, r1, ip, asr #16
    8634:	andeq	sp, r1, r8, ror r8
    8638:	andeq	sp, r1, ip, lsr r8
    863c:	strdeq	sp, [r1], -ip
    8640:	ldrdeq	sp, [r1], -r4
    8644:	andeq	sp, r1, r4, lsr #15
    8648:	andeq	sp, r1, ip, ror fp
    864c:	muleq	r1, r4, r7
    8650:	andeq	sp, r1, r4, lsr #14
    8654:	andeq	sp, r1, r0, lsr #14
    8658:	andeq	sp, r1, ip, ror r7
    865c:	muleq	r1, ip, r6
    8660:	andeq	sp, r1, r0, lsr #13
    8664:	strdeq	ip, [r1], -r0
    8668:	andeq	sp, r1, r0, lsl #10
    866c:	andeq	sp, r1, r8, asr #8
    8670:	andeq	sp, r1, r0, asr #8
    8674:			; <UNDEFINED> instruction: 0x0001cbb4
    8678:	ldrdeq	sp, [r1], -r0
    867c:	muleq	r1, r8, r3
    8680:	push	{r4, r5, r6, lr}
    8684:	mov	r4, r1
    8688:	mov	r5, r2
    868c:	bl	11420 <main@@Base+0xcfe8>
    8690:	subs	r6, r0, #0
    8694:	beq	86c0 <main@@Base+0x4288>
    8698:	mov	r1, #0
    869c:	bl	15b70 <main@@Base+0x11738>
    86a0:	subs	r6, r0, #0
    86a4:	beq	86e4 <main@@Base+0x42ac>
    86a8:	bl	109d0 <main@@Base+0xc598>
    86ac:	subs	r6, r0, #0
    86b0:	beq	8704 <main@@Base+0x42cc>
    86b4:	mov	r1, r4
    86b8:	pop	{r4, r5, r6, lr}
    86bc:	b	4320 <g_bytes_get_data@plt>
    86c0:	bl	40a4 <fwupd_error_quark@plt>
    86c4:	ldr	r3, [pc, #88]	; 8724 <main@@Base+0x42ec>
    86c8:	mov	r2, r6
    86cc:	add	r3, pc, r3
    86d0:	mov	r1, r0
    86d4:	mov	r0, r5
    86d8:	bl	3ae0 <g_set_error_literal@plt>
    86dc:	mov	r0, #0
    86e0:	pop	{r4, r5, r6, pc}
    86e4:	bl	40a4 <fwupd_error_quark@plt>
    86e8:	ldr	r3, [pc, #56]	; 8728 <main@@Base+0x42f0>
    86ec:	mov	r2, r6
    86f0:	add	r3, pc, r3
    86f4:	mov	r1, r0
    86f8:	mov	r0, r5
    86fc:	bl	3ae0 <g_set_error_literal@plt>
    8700:	b	86dc <main@@Base+0x42a4>
    8704:	bl	40a4 <fwupd_error_quark@plt>
    8708:	ldr	r3, [pc, #28]	; 872c <main@@Base+0x42f4>
    870c:	mov	r2, r6
    8710:	add	r3, pc, r3
    8714:	mov	r1, r0
    8718:	mov	r0, r5
    871c:	bl	3ae0 <g_set_error_literal@plt>
    8720:	b	86dc <main@@Base+0x42a4>
    8724:	andeq	sp, r1, r0, lsl #1
    8728:	andeq	sp, r1, r0, ror r0
    872c:	andeq	sp, r1, r4, rrx
    8730:	ldr	r3, [pc, #688]	; 89e8 <main@@Base+0x45b0>
    8734:	ldr	ip, [pc, #688]	; 89ec <main@@Base+0x45b4>
    8738:	add	r3, pc, r3
    873c:	push	{r4, r5, r6, r7, r8, r9, lr}
    8740:	mov	r5, r1
    8744:	ldr	r6, [r3, ip]
    8748:	mov	r4, r0
    874c:	mov	r0, r1
    8750:	mov	r1, r3
    8754:	sub	sp, sp, #20
    8758:	mov	r8, r2
    875c:	ldr	r3, [r6]
    8760:	str	r3, [sp, #12]
    8764:	bl	3e34 <g_strv_length@plt>
    8768:	cmp	r0, #3
    876c:	bls	8838 <main@@Base+0x4400>
    8770:	ldr	r3, [r4, #8]
    8774:	cmp	r3, #0
    8778:	beq	87e8 <main@@Base+0x43b0>
    877c:	ldr	r0, [r5]
    8780:	bl	4218 <g_file_new_for_path@plt>
    8784:	mov	r4, r0
    8788:	bl	11258 <main@@Base+0xce20>
    878c:	mov	r1, r4
    8790:	mov	r2, #0
    8794:	mov	r3, r8
    8798:	mov	r7, r0
    879c:	bl	11ddc <main@@Base+0xd9a4>
    87a0:	cmp	r0, #0
    87a4:	bne	8880 <main@@Base+0x4448>
    87a8:	mov	r5, #0
    87ac:	cmp	r4, #0
    87b0:	beq	87bc <main@@Base+0x4384>
    87b4:	mov	r0, r4
    87b8:	bl	4110 <g_object_unref@plt>
    87bc:	cmp	r7, #0
    87c0:	beq	87cc <main@@Base+0x4394>
    87c4:	mov	r0, r7
    87c8:	bl	4110 <g_object_unref@plt>
    87cc:	ldr	r2, [sp, #12]
    87d0:	mov	r0, r5
    87d4:	ldr	r3, [r6]
    87d8:	cmp	r2, r3
    87dc:	bne	8954 <main@@Base+0x451c>
    87e0:	add	sp, sp, #20
    87e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    87e8:	ldr	r1, [pc, #512]	; 89f0 <main@@Base+0x45b8>
    87ec:	ldr	r0, [r5]
    87f0:	add	r1, pc, r1
    87f4:	bl	4278 <g_str_has_suffix@plt>
    87f8:	cmp	r0, #0
    87fc:	beq	8860 <main@@Base+0x4428>
    8800:	ldr	r1, [pc, #492]	; 89f4 <main@@Base+0x45bc>
    8804:	ldr	r0, [r5, #4]
    8808:	add	r1, pc, r1
    880c:	bl	4278 <g_str_has_suffix@plt>
    8810:	cmp	r0, #0
    8814:	bne	877c <main@@Base+0x4344>
    8818:	bl	40a4 <fwupd_error_quark@plt>
    881c:	ldr	r3, [pc, #468]	; 89f8 <main@@Base+0x45c0>
    8820:	mov	r1, r0
    8824:	mov	r2, #10
    8828:	mov	r0, r8
    882c:	add	r3, pc, r3
    8830:	bl	3ae0 <g_set_error_literal@plt>
    8834:	b	8854 <main@@Base+0x441c>
    8838:	bl	40a4 <fwupd_error_quark@plt>
    883c:	ldr	r3, [pc, #440]	; 89fc <main@@Base+0x45c4>
    8840:	mov	r1, r0
    8844:	mov	r2, #0
    8848:	mov	r0, r8
    884c:	add	r3, pc, r3
    8850:	bl	3ae0 <g_set_error_literal@plt>
    8854:	mov	r4, #0
    8858:	mov	r7, r4
    885c:	b	87a8 <main@@Base+0x4370>
    8860:	bl	40a4 <fwupd_error_quark@plt>
    8864:	ldr	r3, [pc, #404]	; 8a00 <main@@Base+0x45c8>
    8868:	mov	r1, r0
    886c:	mov	r2, #10
    8870:	mov	r0, r8
    8874:	add	r3, pc, r3
    8878:	bl	3ae0 <g_set_error_literal@plt>
    887c:	b	8854 <main@@Base+0x441c>
    8880:	mov	r0, r7
    8884:	add	r1, sp, #8
    8888:	mov	r2, r8
    888c:	bl	8680 <main@@Base+0x4248>
    8890:	subs	r9, r0, #0
    8894:	beq	87a8 <main@@Base+0x4370>
    8898:	ldr	r1, [pc, #356]	; 8a04 <main@@Base+0x45cc>
    889c:	ldr	r0, [r5, #8]
    88a0:	add	r1, pc, r1
    88a4:	bl	441c <g_strcmp0@plt>
    88a8:	cmp	r0, #0
    88ac:	bne	892c <main@@Base+0x44f4>
    88b0:	mov	r1, r9
    88b4:	ldr	r0, [r5, #12]
    88b8:	ldr	r2, [sp, #8]
    88bc:	mov	r3, r8
    88c0:	bl	b4e0 <main@@Base+0x70a8>
    88c4:	cmp	r0, #0
    88c8:	beq	87a8 <main@@Base+0x4370>
    88cc:	ldr	r1, [pc, #308]	; 8a08 <main@@Base+0x45d0>
    88d0:	mov	r0, r7
    88d4:	add	r1, pc, r1
    88d8:	bl	12104 <main@@Base+0xdccc>
    88dc:	ldr	r0, [r5, #4]
    88e0:	bl	4218 <g_file_new_for_path@plt>
    88e4:	mov	r9, r0
    88e8:	ldr	r2, [pc, #284]	; 8a0c <main@@Base+0x45d4>
    88ec:	ldr	r0, [pc, #284]	; 8a10 <main@@Base+0x45d8>
    88f0:	mov	r1, #128	; 0x80
    88f4:	ldr	r3, [r5, #4]
    88f8:	add	r2, pc, r2
    88fc:	add	r0, pc, r0
    8900:	bl	3a38 <g_log@plt>
    8904:	mov	r0, r7
    8908:	mov	r1, r9
    890c:	mov	r2, r8
    8910:	bl	12420 <main@@Base+0xdfe8>
    8914:	cmp	r9, #0
    8918:	mov	r5, r0
    891c:	beq	87ac <main@@Base+0x4374>
    8920:	mov	r0, r9
    8924:	bl	4110 <g_object_unref@plt>
    8928:	b	87ac <main@@Base+0x4374>
    892c:	bl	40a4 <fwupd_error_quark@plt>
    8930:	ldr	ip, [r5, #8]
    8934:	mov	r1, r0
    8938:	ldr	r3, [pc, #212]	; 8a14 <main@@Base+0x45dc>
    893c:	mov	r0, r8
    8940:	mov	r2, #0
    8944:	add	r3, pc, r3
    8948:	str	ip, [sp]
    894c:	bl	4350 <g_set_error@plt>
    8950:	b	87a8 <main@@Base+0x4370>
    8954:	bl	3e4c <__stack_chk_fail@plt>
    8958:	mov	r5, r0
    895c:	cmp	r7, #0
    8960:	beq	896c <main@@Base+0x4534>
    8964:	mov	r0, r7
    8968:	bl	4110 <g_object_unref@plt>
    896c:	mov	r0, r5
    8970:	bl	42f0 <_Unwind_Resume@plt>
    8974:	mov	r7, #0
    8978:	mov	r5, r0
    897c:	mov	r4, r7
    8980:	cmp	r4, #0
    8984:	beq	895c <main@@Base+0x4524>
    8988:	mov	r0, r4
    898c:	bl	4110 <g_object_unref@plt>
    8990:	b	895c <main@@Base+0x4524>
    8994:	b	8974 <main@@Base+0x453c>
    8998:	b	8974 <main@@Base+0x453c>
    899c:	b	8974 <main@@Base+0x453c>
    89a0:	b	8974 <main@@Base+0x453c>
    89a4:	b	8974 <main@@Base+0x453c>
    89a8:	b	8974 <main@@Base+0x453c>
    89ac:	b	8974 <main@@Base+0x453c>
    89b0:	b	8974 <main@@Base+0x453c>
    89b4:	mov	r5, r0
    89b8:	mov	r7, #0
    89bc:	b	8980 <main@@Base+0x4548>
    89c0:	mov	r5, r0
    89c4:	b	8980 <main@@Base+0x4548>
    89c8:	b	8974 <main@@Base+0x453c>
    89cc:	b	89c0 <main@@Base+0x4588>
    89d0:	cmp	r9, #0
    89d4:	mov	r5, r0
    89d8:	beq	8980 <main@@Base+0x4548>
    89dc:	mov	r0, r9
    89e0:	bl	4110 <g_object_unref@plt>
    89e4:	b	8980 <main@@Base+0x4548>
    89e8:	andeq	r6, r3, r8, asr #8
    89ec:	andeq	r0, r0, r0, lsr r4
    89f0:	andeq	sp, r1, r4, lsr #32
    89f4:	andeq	sp, r1, r0, lsr r0
    89f8:	strdeq	ip, [r1], -r0
    89fc:	andeq	ip, r1, ip, lsr pc
    8a00:	andeq	ip, r1, r4, lsl #31
    8a04:	andeq	ip, r1, r0, lsr #31
    8a08:	andeq	ip, r1, r4, ror pc
    8a0c:	andeq	ip, r1, r0, lsl #31
    8a10:	muleq	r1, r0, r5
    8a14:	andeq	ip, r1, r0, lsl pc
    8a18:	ldr	r3, [pc, #696]	; 8cd8 <main@@Base+0x48a0>
    8a1c:	ldr	ip, [pc, #696]	; 8cdc <main@@Base+0x48a4>
    8a20:	add	r3, pc, r3
    8a24:	push	{r4, r5, r6, r7, r8, r9, lr}
    8a28:	mov	r5, r1
    8a2c:	ldr	r6, [r3, ip]
    8a30:	mov	r4, r0
    8a34:	mov	r0, r1
    8a38:	mov	r1, r3
    8a3c:	sub	sp, sp, #20
    8a40:	mov	r8, r2
    8a44:	ldr	r3, [r6]
    8a48:	str	r3, [sp, #12]
    8a4c:	bl	3e34 <g_strv_length@plt>
    8a50:	cmp	r0, #3
    8a54:	bls	8b20 <main@@Base+0x46e8>
    8a58:	ldr	r3, [r4, #8]
    8a5c:	cmp	r3, #0
    8a60:	beq	8ad0 <main@@Base+0x4698>
    8a64:	ldr	r0, [r5]
    8a68:	bl	4218 <g_file_new_for_path@plt>
    8a6c:	mov	r4, r0
    8a70:	bl	11258 <main@@Base+0xce20>
    8a74:	mov	r1, r4
    8a78:	mov	r2, #0
    8a7c:	mov	r3, r8
    8a80:	mov	r7, r0
    8a84:	bl	11ddc <main@@Base+0xd9a4>
    8a88:	cmp	r0, #0
    8a8c:	bne	8b68 <main@@Base+0x4730>
    8a90:	mov	r5, #0
    8a94:	cmp	r4, #0
    8a98:	beq	8aa4 <main@@Base+0x466c>
    8a9c:	mov	r0, r4
    8aa0:	bl	4110 <g_object_unref@plt>
    8aa4:	cmp	r7, #0
    8aa8:	beq	8ab4 <main@@Base+0x467c>
    8aac:	mov	r0, r7
    8ab0:	bl	4110 <g_object_unref@plt>
    8ab4:	ldr	r2, [sp, #12]
    8ab8:	mov	r0, r5
    8abc:	ldr	r3, [r6]
    8ac0:	cmp	r2, r3
    8ac4:	bne	8c44 <main@@Base+0x480c>
    8ac8:	add	sp, sp, #20
    8acc:	pop	{r4, r5, r6, r7, r8, r9, pc}
    8ad0:	ldr	r1, [pc, #520]	; 8ce0 <main@@Base+0x48a8>
    8ad4:	ldr	r0, [r5]
    8ad8:	add	r1, pc, r1
    8adc:	bl	4278 <g_str_has_suffix@plt>
    8ae0:	cmp	r0, #0
    8ae4:	beq	8b48 <main@@Base+0x4710>
    8ae8:	ldr	r1, [pc, #500]	; 8ce4 <main@@Base+0x48ac>
    8aec:	ldr	r0, [r5, #4]
    8af0:	add	r1, pc, r1
    8af4:	bl	4278 <g_str_has_suffix@plt>
    8af8:	cmp	r0, #0
    8afc:	bne	8a64 <main@@Base+0x462c>
    8b00:	bl	40a4 <fwupd_error_quark@plt>
    8b04:	ldr	r3, [pc, #476]	; 8ce8 <main@@Base+0x48b0>
    8b08:	mov	r1, r0
    8b0c:	mov	r2, #10
    8b10:	mov	r0, r8
    8b14:	add	r3, pc, r3
    8b18:	bl	3ae0 <g_set_error_literal@plt>
    8b1c:	b	8b3c <main@@Base+0x4704>
    8b20:	bl	40a4 <fwupd_error_quark@plt>
    8b24:	ldr	r3, [pc, #448]	; 8cec <main@@Base+0x48b4>
    8b28:	mov	r1, r0
    8b2c:	mov	r2, #0
    8b30:	mov	r0, r8
    8b34:	add	r3, pc, r3
    8b38:	bl	3ae0 <g_set_error_literal@plt>
    8b3c:	mov	r4, #0
    8b40:	mov	r7, r4
    8b44:	b	8a90 <main@@Base+0x4658>
    8b48:	bl	40a4 <fwupd_error_quark@plt>
    8b4c:	ldr	r3, [pc, #412]	; 8cf0 <main@@Base+0x48b8>
    8b50:	mov	r1, r0
    8b54:	mov	r2, #10
    8b58:	mov	r0, r8
    8b5c:	add	r3, pc, r3
    8b60:	bl	3ae0 <g_set_error_literal@plt>
    8b64:	b	8b3c <main@@Base+0x4704>
    8b68:	mov	r0, r7
    8b6c:	add	r1, sp, #8
    8b70:	mov	r2, r8
    8b74:	bl	8680 <main@@Base+0x4248>
    8b78:	subs	r9, r0, #0
    8b7c:	beq	8a90 <main@@Base+0x4658>
    8b80:	ldr	r1, [pc, #364]	; 8cf4 <main@@Base+0x48bc>
    8b84:	ldr	r0, [r5, #8]
    8b88:	add	r1, pc, r1
    8b8c:	bl	441c <g_strcmp0@plt>
    8b90:	cmp	r0, #0
    8b94:	bne	8c1c <main@@Base+0x47e4>
    8b98:	mov	r1, r9
    8b9c:	ldr	r0, [r5, #12]
    8ba0:	ldr	r2, [sp, #8]
    8ba4:	mov	r3, r8
    8ba8:	bl	b6c8 <main@@Base+0x7290>
    8bac:	cmp	r0, #0
    8bb0:	beq	8a90 <main@@Base+0x4658>
    8bb4:	ldr	r1, [pc, #316]	; 8cf8 <main@@Base+0x48c0>
    8bb8:	mov	r0, r7
    8bbc:	ldr	r2, [pc, #312]	; 8cfc <main@@Base+0x48c4>
    8bc0:	add	r1, pc, r1
    8bc4:	add	r2, pc, r2
    8bc8:	bl	12088 <main@@Base+0xdc50>
    8bcc:	ldr	r0, [r5, #4]
    8bd0:	bl	4218 <g_file_new_for_path@plt>
    8bd4:	mov	r9, r0
    8bd8:	ldr	r2, [pc, #288]	; 8d00 <main@@Base+0x48c8>
    8bdc:	ldr	r0, [pc, #288]	; 8d04 <main@@Base+0x48cc>
    8be0:	mov	r1, #128	; 0x80
    8be4:	ldr	r3, [r5, #4]
    8be8:	add	r2, pc, r2
    8bec:	add	r0, pc, r0
    8bf0:	bl	3a38 <g_log@plt>
    8bf4:	mov	r0, r7
    8bf8:	mov	r1, r9
    8bfc:	mov	r2, r8
    8c00:	bl	12420 <main@@Base+0xdfe8>
    8c04:	cmp	r9, #0
    8c08:	mov	r5, r0
    8c0c:	beq	8a94 <main@@Base+0x465c>
    8c10:	mov	r0, r9
    8c14:	bl	4110 <g_object_unref@plt>
    8c18:	b	8a94 <main@@Base+0x465c>
    8c1c:	bl	40a4 <fwupd_error_quark@plt>
    8c20:	ldr	ip, [r5, #8]
    8c24:	mov	r1, r0
    8c28:	ldr	r3, [pc, #216]	; 8d08 <main@@Base+0x48d0>
    8c2c:	mov	r0, r8
    8c30:	mov	r2, #0
    8c34:	add	r3, pc, r3
    8c38:	str	ip, [sp]
    8c3c:	bl	4350 <g_set_error@plt>
    8c40:	b	8a90 <main@@Base+0x4658>
    8c44:	bl	3e4c <__stack_chk_fail@plt>
    8c48:	mov	r5, r0
    8c4c:	cmp	r7, #0
    8c50:	beq	8c5c <main@@Base+0x4824>
    8c54:	mov	r0, r7
    8c58:	bl	4110 <g_object_unref@plt>
    8c5c:	mov	r0, r5
    8c60:	bl	42f0 <_Unwind_Resume@plt>
    8c64:	mov	r7, #0
    8c68:	mov	r5, r0
    8c6c:	mov	r4, r7
    8c70:	cmp	r4, #0
    8c74:	beq	8c4c <main@@Base+0x4814>
    8c78:	mov	r0, r4
    8c7c:	bl	4110 <g_object_unref@plt>
    8c80:	b	8c4c <main@@Base+0x4814>
    8c84:	b	8c64 <main@@Base+0x482c>
    8c88:	b	8c64 <main@@Base+0x482c>
    8c8c:	b	8c64 <main@@Base+0x482c>
    8c90:	b	8c64 <main@@Base+0x482c>
    8c94:	b	8c64 <main@@Base+0x482c>
    8c98:	b	8c64 <main@@Base+0x482c>
    8c9c:	b	8c64 <main@@Base+0x482c>
    8ca0:	b	8c64 <main@@Base+0x482c>
    8ca4:	mov	r5, r0
    8ca8:	mov	r7, #0
    8cac:	b	8c70 <main@@Base+0x4838>
    8cb0:	mov	r5, r0
    8cb4:	b	8c70 <main@@Base+0x4838>
    8cb8:	b	8c64 <main@@Base+0x482c>
    8cbc:	b	8cb0 <main@@Base+0x4878>
    8cc0:	cmp	r9, #0
    8cc4:	mov	r5, r0
    8cc8:	beq	8c70 <main@@Base+0x4838>
    8ccc:	mov	r0, r9
    8cd0:	bl	4110 <g_object_unref@plt>
    8cd4:	b	8c70 <main@@Base+0x4838>
    8cd8:	andeq	r6, r3, r0, ror #2
    8cdc:	andeq	r0, r0, r0, lsr r4
    8ce0:	andeq	ip, r1, r0, ror #26
    8ce4:	andeq	ip, r1, r4, lsr #26
    8ce8:	andeq	ip, r1, r4, ror #25
    8cec:	andeq	ip, r1, r0, asr sp
    8cf0:	andeq	ip, r1, r0, asr #25
    8cf4:			; <UNDEFINED> instruction: 0x0001ccb8
    8cf8:	andeq	ip, r1, r8, lsl #25
    8cfc:	andeq	ip, r1, r0, lsr sp
    8d00:	muleq	r1, r0, ip
    8d04:	andeq	ip, r1, r0, lsr #5
    8d08:	andeq	ip, r1, r0, lsr #24
    8d0c:	ldr	r3, [pc, #864]	; 9074 <main@@Base+0x4c3c>
    8d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8d14:	mov	r9, r2
    8d18:	ldr	r2, [pc, #856]	; 9078 <main@@Base+0x4c40>
    8d1c:	add	r3, pc, r3
    8d20:	sub	sp, sp, #28
    8d24:	mov	r4, r0
    8d28:	mov	r0, r9
    8d2c:	mov	r7, r1
    8d30:	ldr	r8, [r3, r2]
    8d34:	ldr	r3, [r8]
    8d38:	str	r3, [sp, #20]
    8d3c:	bl	3cd8 <g_usb_context_new@plt>
    8d40:	subs	r6, r0, #0
    8d44:	beq	8f7c <main@@Base+0x4b44>
    8d48:	bl	3ccc <g_usb_context_enumerate@plt>
    8d4c:	ldr	r0, [r4]
    8d50:	cmp	r0, #0
    8d54:	beq	8e50 <main@@Base+0x4a18>
    8d58:	add	r1, sp, #16
    8d5c:	mov	r2, #16
    8d60:	bl	4284 <g_ascii_strtoull@plt>
    8d64:	mov	r4, r0
    8d68:	subs	r0, r0, #1
    8d6c:	sbc	r1, r1, #0
    8d70:	movw	r2, #65534	; 0xfffe
    8d74:	mov	r3, #0
    8d78:	cmp	r1, r3
    8d7c:	cmpeq	r0, r2
    8d80:	bhi	8de0 <main@@Base+0x49a8>
    8d84:	ldr	r0, [sp, #16]
    8d88:	ldrb	r3, [r0]
    8d8c:	cmp	r3, #58	; 0x3a
    8d90:	beq	8e00 <main@@Base+0x49c8>
    8d94:	bl	40a4 <fwupd_error_quark@plt>
    8d98:	ldr	r3, [pc, #732]	; 907c <main@@Base+0x4c44>
    8d9c:	mov	r1, r0
    8da0:	mov	r2, #0
    8da4:	mov	r0, r9
    8da8:	add	r3, pc, r3
    8dac:	bl	3ae0 <g_set_error_literal@plt>
    8db0:	mov	r4, #0
    8db4:	cmp	r6, #0
    8db8:	beq	8dc4 <main@@Base+0x498c>
    8dbc:	mov	r0, r6
    8dc0:	bl	4110 <g_object_unref@plt>
    8dc4:	ldr	r2, [sp, #20]
    8dc8:	mov	r0, r4
    8dcc:	ldr	r3, [r8]
    8dd0:	cmp	r2, r3
    8dd4:	bne	8fa8 <main@@Base+0x4b70>
    8dd8:	add	sp, sp, #28
    8ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8de0:	bl	40a4 <fwupd_error_quark@plt>
    8de4:	ldr	r3, [pc, #660]	; 9080 <main@@Base+0x4c48>
    8de8:	mov	r1, r0
    8dec:	mov	r2, #0
    8df0:	mov	r0, r9
    8df4:	add	r3, pc, r3
    8df8:	bl	3ae0 <g_set_error_literal@plt>
    8dfc:	b	8db0 <main@@Base+0x4978>
    8e00:	add	r0, r0, #1
    8e04:	mov	r1, #0
    8e08:	mov	r2, #16
    8e0c:	bl	4284 <g_ascii_strtoull@plt>
    8e10:	mov	sl, r0
    8e14:	subs	r0, r0, #1
    8e18:	sbc	r1, r1, #0
    8e1c:	movw	r2, #65534	; 0xfffe
    8e20:	mov	r3, #0
    8e24:	cmp	r1, r3
    8e28:	cmpeq	r0, r2
    8e2c:	bls	8ef0 <main@@Base+0x4ab8>
    8e30:	bl	40a4 <fwupd_error_quark@plt>
    8e34:	ldr	r3, [pc, #584]	; 9084 <main@@Base+0x4c4c>
    8e38:	mov	r1, r0
    8e3c:	mov	r2, #0
    8e40:	mov	r0, r9
    8e44:	add	r3, pc, r3
    8e48:	bl	3ae0 <g_set_error_literal@plt>
    8e4c:	b	8db0 <main@@Base+0x4978>
    8e50:	mov	r0, r6
    8e54:	bl	43ec <g_usb_context_get_devices@plt>
    8e58:	ldr	r3, [r0, #4]
    8e5c:	mov	sl, r0
    8e60:	cmp	r3, #0
    8e64:	movne	r5, #0
    8e68:	bne	8e90 <main@@Base+0x4a58>
    8e6c:	b	8f58 <main@@Base+0x4b20>
    8e70:	cmp	r4, #0
    8e74:	beq	8e80 <main@@Base+0x4a48>
    8e78:	mov	r0, r4
    8e7c:	bl	4110 <g_object_unref@plt>
    8e80:	ldr	r3, [sl, #4]
    8e84:	add	r5, r5, #1
    8e88:	cmp	r5, r3
    8e8c:	bcs	8f58 <main@@Base+0x4b20>
    8e90:	ldr	r3, [sl]
    8e94:	ldr	r0, [r3, r5, lsl #2]
    8e98:	bl	d8e8 <main@@Base+0x94b0>
    8e9c:	mov	r4, r0
    8ea0:	bl	1f330 <main@@Base+0x1aef8>
    8ea4:	mov	r1, r0
    8ea8:	mov	r0, r4
    8eac:	bl	39d8 <g_type_check_instance_cast@plt>
    8eb0:	ldr	r1, [r7]
    8eb4:	bl	212c8 <main@@Base+0x1ce90>
    8eb8:	mov	r0, r4
    8ebc:	mov	r1, r6
    8ec0:	bl	d87c <main@@Base+0x9444>
    8ec4:	bl	23a78 <main@@Base+0x1f640>
    8ec8:	mov	r1, r0
    8ecc:	mov	r0, r4
    8ed0:	bl	39d8 <g_type_check_instance_cast@plt>
    8ed4:	mov	r1, #0
    8ed8:	bl	23e30 <fu_usb_device_close@@Base+0x11c>
    8edc:	cmp	r0, #0
    8ee0:	beq	8e70 <main@@Base+0x4a38>
    8ee4:	mov	r0, sl
    8ee8:	bl	4224 <g_ptr_array_unref@plt>
    8eec:	b	8dbc <main@@Base+0x4984>
    8ef0:	mov	r0, r6
    8ef4:	uxth	r1, r4
    8ef8:	uxth	r2, sl
    8efc:	mov	r3, r9
    8f00:	bl	38f4 <g_usb_context_find_by_vid_pid@plt>
    8f04:	subs	r3, r0, #0
    8f08:	str	r3, [sp, #12]
    8f0c:	beq	8f84 <main@@Base+0x4b4c>
    8f10:	bl	d8e8 <main@@Base+0x94b0>
    8f14:	mov	r4, r0
    8f18:	bl	1f330 <main@@Base+0x1aef8>
    8f1c:	mov	r1, r0
    8f20:	mov	r0, r4
    8f24:	bl	39d8 <g_type_check_instance_cast@plt>
    8f28:	ldr	r1, [r7]
    8f2c:	bl	212c8 <main@@Base+0x1ce90>
    8f30:	mov	r0, r4
    8f34:	mov	r1, r6
    8f38:	bl	d87c <main@@Base+0x9444>
    8f3c:	ldr	r0, [sp, #12]
    8f40:	bl	4110 <g_object_unref@plt>
    8f44:	cmp	r4, #0
    8f48:	beq	8db4 <main@@Base+0x497c>
    8f4c:	mov	r0, r4
    8f50:	bl	4110 <g_object_unref@plt>
    8f54:	b	8db4 <main@@Base+0x497c>
    8f58:	bl	40a4 <fwupd_error_quark@plt>
    8f5c:	ldr	r3, [pc, #292]	; 9088 <main@@Base+0x4c50>
    8f60:	mov	r1, r0
    8f64:	mov	r2, #8
    8f68:	mov	r0, r9
    8f6c:	add	r3, pc, r3
    8f70:	bl	3ae0 <g_set_error_literal@plt>
    8f74:	mov	r4, #0
    8f78:	b	8ee4 <main@@Base+0x4aac>
    8f7c:	mov	r4, r6
    8f80:	b	8dc4 <main@@Base+0x498c>
    8f84:	bl	40a4 <fwupd_error_quark@plt>
    8f88:	ldr	r3, [pc, #252]	; 908c <main@@Base+0x4c54>
    8f8c:	mov	r1, r0
    8f90:	stm	sp, {r4, sl}
    8f94:	mov	r0, r9
    8f98:	mov	r2, #8
    8f9c:	add	r3, pc, r3
    8fa0:	bl	4350 <g_set_error@plt>
    8fa4:	b	8db0 <main@@Base+0x4978>
    8fa8:	bl	3e4c <__stack_chk_fail@plt>
    8fac:	mov	r5, r0
    8fb0:	mov	r4, #0
    8fb4:	cmp	r4, #0
    8fb8:	beq	8fc4 <main@@Base+0x4b8c>
    8fbc:	mov	r0, r4
    8fc0:	bl	4110 <g_object_unref@plt>
    8fc4:	mov	r4, r5
    8fc8:	cmp	r6, #0
    8fcc:	beq	8fd8 <main@@Base+0x4ba0>
    8fd0:	mov	r0, r6
    8fd4:	bl	4110 <g_object_unref@plt>
    8fd8:	mov	r0, r4
    8fdc:	bl	42f0 <_Unwind_Resume@plt>
    8fe0:	mov	r5, r0
    8fe4:	ldr	r0, [sp, #12]
    8fe8:	bl	4110 <g_object_unref@plt>
    8fec:	b	8fb4 <main@@Base+0x4b7c>
    8ff0:	mov	r5, r0
    8ff4:	mov	r4, #0
    8ff8:	b	8fe4 <main@@Base+0x4bac>
    8ffc:	mov	r5, r0
    9000:	b	8fb4 <main@@Base+0x4b7c>
    9004:	b	8fac <main@@Base+0x4b74>
    9008:	mov	r4, r0
    900c:	b	8fd0 <main@@Base+0x4b98>
    9010:	cmp	r4, #0
    9014:	mov	r5, r0
    9018:	beq	9024 <main@@Base+0x4bec>
    901c:	mov	r0, r4
    9020:	bl	4110 <g_object_unref@plt>
    9024:	mov	r4, r5
    9028:	mov	r0, sl
    902c:	bl	4224 <g_ptr_array_unref@plt>
    9030:	b	8fc8 <main@@Base+0x4b90>
    9034:	mov	r4, r0
    9038:	b	9028 <main@@Base+0x4bf0>
    903c:	b	8fac <main@@Base+0x4b74>
    9040:	b	8fac <main@@Base+0x4b74>
    9044:	b	8fac <main@@Base+0x4b74>
    9048:	mov	r4, r0
    904c:	b	8fc8 <main@@Base+0x4b90>
    9050:	mov	r4, r0
    9054:	mov	r6, #0
    9058:	b	8fc8 <main@@Base+0x4b90>
    905c:	b	8fac <main@@Base+0x4b74>
    9060:	b	8fac <main@@Base+0x4b74>
    9064:	b	8fac <main@@Base+0x4b74>
    9068:	b	8fac <main@@Base+0x4b74>
    906c:	b	8fac <main@@Base+0x4b74>
    9070:	b	8fac <main@@Base+0x4b74>
    9074:	andeq	r5, r3, r4, ror #28
    9078:	andeq	r0, r0, r0, lsr r4
    907c:	andeq	ip, r1, r4, asr fp
    9080:	andeq	ip, r1, r8, lsl #22
    9084:			; <UNDEFINED> instruction: 0x0001cab8
    9088:	andeq	ip, r1, ip, asr #19
    908c:	andeq	ip, r1, ip, ror r9
    9090:	push	{r3, r4, r5, r6, r7, lr}
    9094:	mov	r4, r0
    9098:	add	r0, r0, #12
    909c:	add	r1, r4, #24
    90a0:	mov	r6, r2
    90a4:	bl	8d0c <main@@Base+0x48d4>
    90a8:	subs	r5, r0, #0
    90ac:	beq	9114 <main@@Base+0x4cdc>
    90b0:	ldrh	r1, [r4, #16]
    90b4:	cmp	r1, #0
    90b8:	bne	9100 <main@@Base+0x4cc8>
    90bc:	mov	r0, r5
    90c0:	mov	r1, r6
    90c4:	bl	21dac <main@@Base+0x1d974>
    90c8:	subs	r7, r0, #0
    90cc:	beq	9108 <main@@Base+0x4cd0>
    90d0:	mov	r0, r5
    90d4:	mov	r1, r6
    90d8:	bl	f9a4 <main@@Base+0xb56c>
    90dc:	cmp	r0, #0
    90e0:	bne	9120 <main@@Base+0x4ce8>
    90e4:	mov	r4, r0
    90e8:	mov	r0, r7
    90ec:	bl	4110 <g_object_unref@plt>
    90f0:	mov	r0, r5
    90f4:	bl	4110 <g_object_unref@plt>
    90f8:	mov	r0, r4
    90fc:	pop	{r3, r4, r5, r6, r7, pc}
    9100:	bl	c5f8 <main@@Base+0x81c0>
    9104:	b	90bc <main@@Base+0x4c84>
    9108:	cmp	r5, #0
    910c:	movne	r4, r7
    9110:	bne	90f0 <main@@Base+0x4cb8>
    9114:	mov	r4, #0
    9118:	mov	r0, r4
    911c:	pop	{r3, r4, r5, r6, r7, pc}
    9120:	mov	r1, r6
    9124:	mov	r0, r5
    9128:	bl	fe20 <main@@Base+0xb9e8>
    912c:	b	90e4 <main@@Base+0x4cac>
    9130:	mov	r4, r0
    9134:	mov	r0, r5
    9138:	bl	4110 <g_object_unref@plt>
    913c:	mov	r0, r4
    9140:	bl	42f0 <_Unwind_Resume@plt>
    9144:	mov	r4, r0
    9148:	cmp	r5, #0
    914c:	bne	9134 <main@@Base+0x4cfc>
    9150:	b	913c <main@@Base+0x4d04>
    9154:	mov	r4, r0
    9158:	mov	r0, r7
    915c:	bl	4110 <g_object_unref@plt>
    9160:	b	9148 <main@@Base+0x4d10>
    9164:	mov	r4, r0
    9168:	mov	r5, #0
    916c:	b	9148 <main@@Base+0x4d10>
    9170:	mov	r1, r0
    9174:	add	r0, r0, #12
    9178:	push	{r3, r4, r5, r6, r7, lr}
    917c:	add	r1, r1, #24
    9180:	mov	r6, r2
    9184:	bl	8d0c <main@@Base+0x48d4>
    9188:	subs	r5, r0, #0
    918c:	beq	91dc <main@@Base+0x4da4>
    9190:	mov	r1, r6
    9194:	bl	21dac <main@@Base+0x1d974>
    9198:	subs	r7, r0, #0
    919c:	beq	91d0 <main@@Base+0x4d98>
    91a0:	mov	r0, r5
    91a4:	mov	r1, r6
    91a8:	bl	f9a4 <main@@Base+0xb56c>
    91ac:	cmp	r0, #0
    91b0:	bne	91e8 <main@@Base+0x4db0>
    91b4:	mov	r4, r0
    91b8:	mov	r0, r7
    91bc:	bl	4110 <g_object_unref@plt>
    91c0:	mov	r0, r5
    91c4:	bl	4110 <g_object_unref@plt>
    91c8:	mov	r0, r4
    91cc:	pop	{r3, r4, r5, r6, r7, pc}
    91d0:	cmp	r5, #0
    91d4:	movne	r4, r7
    91d8:	bne	91c0 <main@@Base+0x4d88>
    91dc:	mov	r4, #0
    91e0:	mov	r0, r4
    91e4:	pop	{r3, r4, r5, r6, r7, pc}
    91e8:	mov	r1, r6
    91ec:	mov	r0, r5
    91f0:	bl	fb9c <main@@Base+0xb764>
    91f4:	b	91b4 <main@@Base+0x4d7c>
    91f8:	mov	r4, r0
    91fc:	mov	r0, r7
    9200:	bl	4110 <g_object_unref@plt>
    9204:	cmp	r5, #0
    9208:	beq	9214 <main@@Base+0x4ddc>
    920c:	mov	r0, r5
    9210:	bl	4110 <g_object_unref@plt>
    9214:	mov	r0, r4
    9218:	bl	42f0 <_Unwind_Resume@plt>
    921c:	mov	r4, r0
    9220:	b	920c <main@@Base+0x4dd4>
    9224:	mov	r4, r0
    9228:	b	9204 <main@@Base+0x4dcc>
    922c:	mov	r4, r0
    9230:	mov	r5, #0
    9234:	b	9204 <main@@Base+0x4dcc>
    9238:	mov	r1, r0
    923c:	add	r0, r0, #12
    9240:	push	{r3, r4, r5, r6, r7, lr}
    9244:	add	r1, r1, #24
    9248:	mov	r6, r2
    924c:	bl	8d0c <main@@Base+0x48d4>
    9250:	subs	r5, r0, #0
    9254:	beq	92a4 <main@@Base+0x4e6c>
    9258:	mov	r1, r6
    925c:	bl	21dac <main@@Base+0x1d974>
    9260:	subs	r7, r0, #0
    9264:	beq	9298 <main@@Base+0x4e60>
    9268:	mov	r0, r5
    926c:	mov	r1, r6
    9270:	bl	e448 <main@@Base+0xa010>
    9274:	cmp	r0, #0
    9278:	bne	92b0 <main@@Base+0x4e78>
    927c:	mov	r4, r0
    9280:	mov	r0, r7
    9284:	bl	4110 <g_object_unref@plt>
    9288:	mov	r0, r5
    928c:	bl	4110 <g_object_unref@plt>
    9290:	mov	r0, r4
    9294:	pop	{r3, r4, r5, r6, r7, pc}
    9298:	cmp	r5, #0
    929c:	movne	r4, r7
    92a0:	bne	9288 <main@@Base+0x4e50>
    92a4:	mov	r4, #0
    92a8:	mov	r0, r4
    92ac:	pop	{r3, r4, r5, r6, r7, pc}
    92b0:	mov	r1, r6
    92b4:	mov	r0, r5
    92b8:	bl	e870 <main@@Base+0xa438>
    92bc:	b	927c <main@@Base+0x4e44>
    92c0:	mov	r4, r0
    92c4:	mov	r0, r7
    92c8:	bl	4110 <g_object_unref@plt>
    92cc:	cmp	r5, #0
    92d0:	beq	92dc <main@@Base+0x4ea4>
    92d4:	mov	r0, r5
    92d8:	bl	4110 <g_object_unref@plt>
    92dc:	mov	r0, r4
    92e0:	bl	42f0 <_Unwind_Resume@plt>
    92e4:	mov	r4, r0
    92e8:	b	92d4 <main@@Base+0x4e9c>
    92ec:	mov	r4, r0
    92f0:	b	92cc <main@@Base+0x4e94>
    92f4:	mov	r4, r0
    92f8:	mov	r5, #0
    92fc:	b	92cc <main@@Base+0x4e94>
    9300:	ldr	r3, [pc, #1444]	; 98ac <main@@Base+0x5474>
    9304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9308:	mov	r8, r1
    930c:	ldr	r1, [pc, #1436]	; 98b0 <main@@Base+0x5478>
    9310:	sub	sp, sp, #44	; 0x2c
    9314:	add	r3, pc, r3
    9318:	mov	r9, r2
    931c:	str	r0, [sp, #16]
    9320:	mov	r0, r8
    9324:	ldr	r1, [r3, r1]
    9328:	ldr	r3, [r1]
    932c:	str	r1, [sp, #12]
    9330:	str	r3, [sp, #36]	; 0x24
    9334:	bl	3e34 <g_strv_length@plt>
    9338:	cmp	r0, #1
    933c:	bls	93fc <main@@Base+0x4fc4>
    9340:	bl	11258 <main@@Base+0xce20>
    9344:	mov	r6, r0
    9348:	ldr	r0, [r8]
    934c:	bl	4218 <g_file_new_for_path@plt>
    9350:	mov	r7, r0
    9354:	mov	r2, #0
    9358:	mov	r0, r6
    935c:	mov	r1, r7
    9360:	mov	r3, r9
    9364:	bl	11ddc <main@@Base+0xd9a4>
    9368:	cmp	r0, #0
    936c:	bne	9424 <main@@Base+0x4fec>
    9370:	mov	r4, #0
    9374:	mov	sl, r4
    9378:	mov	r5, r4
    937c:	mov	fp, r4
    9380:	mov	r8, r4
    9384:	cmp	r7, #0
    9388:	beq	9394 <main@@Base+0x4f5c>
    938c:	mov	r0, r7
    9390:	bl	4110 <g_object_unref@plt>
    9394:	cmp	r4, #0
    9398:	beq	93a4 <main@@Base+0x4f6c>
    939c:	mov	r0, r4
    93a0:	bl	4110 <g_object_unref@plt>
    93a4:	cmp	sl, #0
    93a8:	beq	93b4 <main@@Base+0x4f7c>
    93ac:	mov	r0, sl
    93b0:	bl	4110 <g_object_unref@plt>
    93b4:	cmp	r6, #0
    93b8:	beq	93c4 <main@@Base+0x4f8c>
    93bc:	mov	r0, r6
    93c0:	bl	4110 <g_object_unref@plt>
    93c4:	cmp	r5, #0
    93c8:	beq	93d4 <main@@Base+0x4f9c>
    93cc:	mov	r0, r5
    93d0:	bl	4110 <g_object_unref@plt>
    93d4:	mov	r0, fp
    93d8:	bl	3eac <g_free@plt>
    93dc:	ldr	r1, [sp, #12]
    93e0:	ldr	r2, [sp, #36]	; 0x24
    93e4:	mov	r0, r8
    93e8:	ldr	r3, [r1]
    93ec:	cmp	r2, r3
    93f0:	bne	96c0 <main@@Base+0x5288>
    93f4:	add	sp, sp, #44	; 0x2c
    93f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    93fc:	bl	40a4 <fwupd_error_quark@plt>
    9400:	ldr	r3, [pc, #1196]	; 98b4 <main@@Base+0x547c>
    9404:	mov	r1, r0
    9408:	mov	r2, #0
    940c:	mov	r0, r9
    9410:	add	r3, pc, r3
    9414:	bl	3ae0 <g_set_error_literal@plt>
    9418:	mov	r8, #0
    941c:	mov	fp, r8
    9420:	b	93d4 <main@@Base+0x4f9c>
    9424:	ldr	r1, [sp, #16]
    9428:	mov	r2, r9
    942c:	add	r0, r1, #12
    9430:	add	r1, r1, #24
    9434:	bl	8d0c <main@@Base+0x48d4>
    9438:	subs	r5, r0, #0
    943c:	beq	9370 <main@@Base+0x4f38>
    9440:	ldr	r2, [sp, #16]
    9444:	ldrh	r1, [r2, #16]
    9448:	cmp	r1, #0
    944c:	beq	9454 <main@@Base+0x501c>
    9450:	bl	c5f8 <main@@Base+0x81c0>
    9454:	mov	r0, r5
    9458:	mov	r1, r9
    945c:	bl	21dac <main@@Base+0x1d974>
    9460:	subs	r4, r0, #0
    9464:	beq	948c <main@@Base+0x5054>
    9468:	mov	r0, r5
    946c:	mov	r1, r9
    9470:	bl	e448 <main@@Base+0xa010>
    9474:	cmp	r0, #0
    9478:	bne	949c <main@@Base+0x5064>
    947c:	mov	sl, r0
    9480:	mov	fp, r0
    9484:	mov	r8, r0
    9488:	b	9384 <main@@Base+0x4f4c>
    948c:	mov	sl, r4
    9490:	mov	fp, r4
    9494:	mov	r8, r4
    9498:	b	9384 <main@@Base+0x4f4c>
    949c:	mov	r2, #0
    94a0:	ldr	r1, [pc, #1040]	; 98b8 <main@@Base+0x5480>
    94a4:	str	r2, [sp]
    94a8:	mov	r0, r5
    94ac:	str	r2, [sp, #4]
    94b0:	add	r1, pc, r1
    94b4:	ldr	r2, [pc, #1024]	; 98bc <main@@Base+0x5484>
    94b8:	ldr	r3, [sp, #16]
    94bc:	add	r2, pc, r2
    94c0:	bl	3d38 <g_signal_connect_data@plt>
    94c4:	mov	r2, #0
    94c8:	ldr	r1, [pc, #1008]	; 98c0 <main@@Base+0x5488>
    94cc:	str	r2, [sp]
    94d0:	mov	r0, r5
    94d4:	str	r2, [sp, #4]
    94d8:	add	r1, pc, r1
    94dc:	ldr	r2, [pc, #992]	; 98c4 <main@@Base+0x548c>
    94e0:	ldr	r3, [sp, #16]
    94e4:	add	r2, pc, r2
    94e8:	bl	3d38 <g_signal_connect_data@plt>
    94ec:	mov	r0, r5
    94f0:	bl	d500 <main@@Base+0x90c8>
    94f4:	cmp	r0, #0
    94f8:	beq	9540 <main@@Base+0x5108>
    94fc:	ldr	r0, [pc, #964]	; 98c8 <main@@Base+0x5490>
    9500:	mov	r1, #128	; 0x80
    9504:	ldr	r2, [pc, #960]	; 98cc <main@@Base+0x5494>
    9508:	add	r0, pc, r0
    950c:	add	r2, pc, r2
    9510:	bl	3a38 <g_log@plt>
    9514:	mov	r0, r5
    9518:	mov	r1, r9
    951c:	bl	fe20 <main@@Base+0xb9e8>
    9520:	cmp	r0, #0
    9524:	beq	947c <main@@Base+0x5044>
    9528:	mov	r0, r5
    952c:	movw	r1, #5000	; 0x1388
    9530:	mov	r2, r9
    9534:	bl	fa94 <main@@Base+0xb65c>
    9538:	cmp	r0, #0
    953c:	beq	947c <main@@Base+0x5044>
    9540:	mov	r0, r6
    9544:	bl	125fc <main@@Base+0xe1c4>
    9548:	mov	fp, r0
    954c:	ldr	r2, [pc, #892]	; 98d0 <main@@Base+0x5498>
    9550:	ldr	r0, [pc, #892]	; 98d4 <main@@Base+0x549c>
    9554:	mov	r3, fp
    9558:	mov	r1, #128	; 0x80
    955c:	add	r2, pc, r2
    9560:	add	r0, pc, r0
    9564:	bl	3a38 <g_log@plt>
    9568:	mov	r0, r5
    956c:	ldr	r1, [r8, #4]
    9570:	mov	r2, #0
    9574:	bl	dc50 <main@@Base+0x9818>
    9578:	subs	sl, r0, #0
    957c:	beq	966c <main@@Base+0x5234>
    9580:	mov	r0, r8
    9584:	bl	3e34 <g_strv_length@plt>
    9588:	cmp	r0, #2
    958c:	bls	95dc <main@@Base+0x51a4>
    9590:	mov	r0, r6
    9594:	ldr	r1, [r8, #8]
    9598:	bl	11340 <main@@Base+0xcf08>
    959c:	cmp	r0, #0
    95a0:	str	r0, [sp, #20]
    95a4:	beq	96c4 <main@@Base+0x528c>
    95a8:	ldr	r1, [sp, #16]
    95ac:	mov	r0, sl
    95b0:	mov	r3, r9
    95b4:	ldr	r2, [r1, #8]
    95b8:	ldr	r1, [sp, #20]
    95bc:	cmp	r2, #0
    95c0:	movne	r2, #65	; 0x41
    95c4:	moveq	r2, #1
    95c8:	bl	19ed0 <main@@Base+0x15a98>
    95cc:	cmp	r0, #0
    95d0:	bne	961c <main@@Base+0x51e4>
    95d4:	mov	r8, #0
    95d8:	b	9384 <main@@Base+0x4f4c>
    95dc:	ldr	r0, [pc, #756]	; 98d8 <main@@Base+0x54a0>
    95e0:	add	r0, pc, r0
    95e4:	bl	3fe4 <g_print@plt>
    95e8:	mov	r0, r6
    95ec:	bl	11420 <main@@Base+0xcfe8>
    95f0:	cmp	r0, #0
    95f4:	str	r0, [sp, #20]
    95f8:	bne	95a8 <main@@Base+0x5170>
    95fc:	bl	40a4 <fwupd_error_quark@plt>
    9600:	ldr	r3, [pc, #724]	; 98dc <main@@Base+0x54a4>
    9604:	mov	r1, r0
    9608:	mov	r2, #7
    960c:	mov	r0, r9
    9610:	add	r3, pc, r3
    9614:	bl	3ae0 <g_set_error_literal@plt>
    9618:	b	95d4 <main@@Base+0x519c>
    961c:	mov	r0, r5
    9620:	mov	r1, r9
    9624:	bl	fb9c <main@@Base+0xb764>
    9628:	cmp	r0, #0
    962c:	beq	95d4 <main@@Base+0x519c>
    9630:	mov	r2, r9
    9634:	mov	r0, r5
    9638:	movw	r1, #5000	; 0x1388
    963c:	bl	fa94 <main@@Base+0xb65c>
    9640:	cmp	r0, #0
    9644:	moveq	r8, r0
    9648:	beq	9384 <main@@Base+0x4f4c>
    964c:	ldr	r0, [sp, #20]
    9650:	bl	15dd8 <main@@Base+0x119a0>
    9654:	mov	r1, r0
    9658:	ldr	r0, [pc, #640]	; 98e0 <main@@Base+0x54a8>
    965c:	add	r0, pc, r0
    9660:	bl	3fe4 <g_print@plt>
    9664:	mov	r8, #1
    9668:	b	9384 <main@@Base+0x4f4c>
    966c:	ldr	r0, [r8, #4]
    9670:	add	r1, sp, #32
    9674:	mov	r2, #10
    9678:	bl	4284 <g_ascii_strtoull@plt>
    967c:	cmp	r1, #0
    9680:	cmpeq	r0, #255	; 0xff
    9684:	bhi	9698 <main@@Base+0x5260>
    9688:	ldr	r3, [sp, #32]
    968c:	ldrb	r3, [r3]
    9690:	cmp	r3, #0
    9694:	beq	971c <main@@Base+0x52e4>
    9698:	bl	40a4 <fwupd_error_quark@plt>
    969c:	ldr	ip, [r8, #4]
    96a0:	mov	r1, r0
    96a4:	ldr	r3, [pc, #568]	; 98e4 <main@@Base+0x54ac>
    96a8:	mov	r0, r9
    96ac:	mov	r2, #0
    96b0:	add	r3, pc, r3
    96b4:	str	ip, [sp]
    96b8:	bl	4350 <g_set_error@plt>
    96bc:	b	95d4 <main@@Base+0x519c>
    96c0:	bl	3e4c <__stack_chk_fail@plt>
    96c4:	ldr	r0, [r8, #8]
    96c8:	add	r1, sp, #32
    96cc:	mov	r2, #10
    96d0:	bl	4284 <g_ascii_strtoull@plt>
    96d4:	cmp	r1, #0
    96d8:	cmpeq	r0, #255	; 0xff
    96dc:	strd	r0, [sp, #24]
    96e0:	bhi	96f4 <main@@Base+0x52bc>
    96e4:	ldr	r3, [sp, #32]
    96e8:	ldrb	r3, [r3]
    96ec:	cmp	r3, #0
    96f0:	beq	973c <main@@Base+0x5304>
    96f4:	bl	40a4 <fwupd_error_quark@plt>
    96f8:	ldr	ip, [r8, #8]
    96fc:	mov	r1, r0
    9700:	ldr	r3, [pc, #480]	; 98e8 <main@@Base+0x54b0>
    9704:	mov	r0, r9
    9708:	mov	r2, #0
    970c:	add	r3, pc, r3
    9710:	str	ip, [sp]
    9714:	bl	4350 <g_set_error@plt>
    9718:	b	95d4 <main@@Base+0x519c>
    971c:	uxtb	r1, r0
    9720:	mov	r2, r9
    9724:	mov	r0, r5
    9728:	bl	dae8 <main@@Base+0x96b0>
    972c:	cmp	r0, #0
    9730:	beq	95d4 <main@@Base+0x519c>
    9734:	mov	sl, r0
    9738:	b	9580 <main@@Base+0x5148>
    973c:	mov	r0, r6
    9740:	ldrb	r1, [sp, #24]
    9744:	bl	1126c <main@@Base+0xce34>
    9748:	cmp	r0, #0
    974c:	str	r0, [sp, #20]
    9750:	bne	95a8 <main@@Base+0x5170>
    9754:	bl	40a4 <fwupd_error_quark@plt>
    9758:	ldr	r3, [sp, #24]
    975c:	mov	r1, r0
    9760:	mov	r2, #7
    9764:	mov	r0, r9
    9768:	str	r3, [sp]
    976c:	ldr	r3, [pc, #376]	; 98ec <main@@Base+0x54b4>
    9770:	add	r3, pc, r3
    9774:	bl	4350 <g_set_error@plt>
    9778:	b	95d4 <main@@Base+0x519c>
    977c:	mov	r8, r0
    9780:	mov	sl, #0
    9784:	cmp	r7, #0
    9788:	beq	9794 <main@@Base+0x535c>
    978c:	mov	r0, r7
    9790:	bl	4110 <g_object_unref@plt>
    9794:	cmp	r4, #0
    9798:	beq	97a4 <main@@Base+0x536c>
    979c:	mov	r0, r4
    97a0:	bl	4110 <g_object_unref@plt>
    97a4:	mov	r4, r8
    97a8:	cmp	sl, #0
    97ac:	beq	97b8 <main@@Base+0x5380>
    97b0:	mov	r0, sl
    97b4:	bl	4110 <g_object_unref@plt>
    97b8:	cmp	r6, #0
    97bc:	beq	97c8 <main@@Base+0x5390>
    97c0:	mov	r0, r6
    97c4:	bl	4110 <g_object_unref@plt>
    97c8:	cmp	r5, #0
    97cc:	beq	97d8 <main@@Base+0x53a0>
    97d0:	mov	r0, r5
    97d4:	bl	4110 <g_object_unref@plt>
    97d8:	mov	r0, fp
    97dc:	bl	3eac <g_free@plt>
    97e0:	mov	r0, r4
    97e4:	bl	42f0 <_Unwind_Resume@plt>
    97e8:	mov	r8, r0
    97ec:	mov	r6, #0
    97f0:	mov	r4, #0
    97f4:	mov	fp, r4
    97f8:	mov	r5, r4
    97fc:	mov	sl, r4
    9800:	b	9794 <main@@Base+0x535c>
    9804:	mov	r8, r0
    9808:	b	9784 <main@@Base+0x534c>
    980c:	mov	sl, #0
    9810:	mov	r8, r0
    9814:	mov	fp, sl
    9818:	b	9784 <main@@Base+0x534c>
    981c:	b	980c <main@@Base+0x53d4>
    9820:	b	980c <main@@Base+0x53d4>
    9824:	b	980c <main@@Base+0x53d4>
    9828:	b	980c <main@@Base+0x53d4>
    982c:	b	980c <main@@Base+0x53d4>
    9830:	mov	r8, r0
    9834:	b	9794 <main@@Base+0x535c>
    9838:	b	97e8 <main@@Base+0x53b0>
    983c:	b	977c <main@@Base+0x5344>
    9840:	b	980c <main@@Base+0x53d4>
    9844:	mov	r4, #0
    9848:	mov	r8, r0
    984c:	mov	sl, r4
    9850:	mov	r5, r4
    9854:	mov	fp, r4
    9858:	b	9784 <main@@Base+0x534c>
    985c:	mov	r4, r0
    9860:	b	97d8 <main@@Base+0x53a0>
    9864:	b	9844 <main@@Base+0x540c>
    9868:	mov	r4, r0
    986c:	b	97a8 <main@@Base+0x5370>
    9870:	b	980c <main@@Base+0x53d4>
    9874:	mov	r4, #0
    9878:	mov	r8, r0
    987c:	mov	sl, r4
    9880:	mov	fp, r4
    9884:	b	9784 <main@@Base+0x534c>
    9888:	b	9874 <main@@Base+0x543c>
    988c:	mov	r8, r0
    9890:	b	97f0 <main@@Base+0x53b8>
    9894:	b	97e8 <main@@Base+0x53b0>
    9898:	mov	r4, r0
    989c:	b	97c8 <main@@Base+0x5390>
    98a0:	mov	r4, r0
    98a4:	b	97b8 <main@@Base+0x5380>
    98a8:	b	97e8 <main@@Base+0x53b0>
    98ac:	andeq	r5, r3, ip, ror #16
    98b0:	andeq	r0, r0, r0, lsr r4
    98b4:	andeq	ip, r1, r0, asr #10
    98b8:	andeq	ip, r1, r4, lsl #10
    98bc:			; <UNDEFINED> instruction: 0xffffc470
    98c0:	andeq	ip, r1, ip, ror #9
    98c4:			; <UNDEFINED> instruction: 0xffffc448
    98c8:	andeq	fp, r1, r4, lsl #19
    98cc:	andeq	ip, r1, ip, asr #9
    98d0:	andeq	ip, r1, r0, rrx
    98d4:	andeq	fp, r1, ip, lsr #18
    98d8:	andeq	ip, r1, ip, ror r4
    98dc:	andeq	ip, r1, r4, ror r4
    98e0:	andeq	ip, r1, ip, lsr r4
    98e4:	andeq	ip, r1, r4, lsr r3
    98e8:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
    98ec:	andeq	ip, r1, r0, asr #5
    98f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    98f4:	mov	fp, r0
    98f8:	sub	sp, sp, #12
    98fc:	mov	r0, r1
    9900:	mov	r4, r1
    9904:	mov	r7, r2
    9908:	bl	3e34 <g_strv_length@plt>
    990c:	cmp	r0, #0
    9910:	bne	994c <main@@Base+0x5514>
    9914:	bl	40a4 <fwupd_error_quark@plt>
    9918:	ldr	r3, [pc, #800]	; 9c40 <main@@Base+0x5808>
    991c:	mov	r1, r0
    9920:	mov	r2, #0
    9924:	mov	r0, r7
    9928:	add	r3, pc, r3
    992c:	bl	3ae0 <g_set_error_literal@plt>
    9930:	mov	r6, #0
    9934:	mov	r5, r6
    9938:	mov	r0, r6
    993c:	bl	3eac <g_free@plt>
    9940:	mov	r0, r5
    9944:	add	sp, sp, #12
    9948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    994c:	bl	11258 <main@@Base+0xce20>
    9950:	mov	r8, r0
    9954:	ldr	r0, [r4]
    9958:	bl	4218 <g_file_new_for_path@plt>
    995c:	mov	r9, r0
    9960:	mov	r1, r0
    9964:	mov	r2, #0
    9968:	mov	r0, r8
    996c:	mov	r3, r7
    9970:	bl	11ddc <main@@Base+0xd9a4>
    9974:	cmp	r0, #0
    9978:	bne	99d0 <main@@Base+0x5598>
    997c:	mov	r4, #0
    9980:	mov	sl, r4
    9984:	mov	r6, r4
    9988:	mov	r5, r4
    998c:	cmp	r9, #0
    9990:	beq	999c <main@@Base+0x5564>
    9994:	mov	r0, r9
    9998:	bl	4110 <g_object_unref@plt>
    999c:	cmp	r4, #0
    99a0:	beq	99ac <main@@Base+0x5574>
    99a4:	mov	r0, r4
    99a8:	bl	4110 <g_object_unref@plt>
    99ac:	cmp	r8, #0
    99b0:	beq	99bc <main@@Base+0x5584>
    99b4:	mov	r0, r8
    99b8:	bl	4110 <g_object_unref@plt>
    99bc:	cmp	sl, #0
    99c0:	beq	9938 <main@@Base+0x5500>
    99c4:	mov	r0, sl
    99c8:	bl	4110 <g_object_unref@plt>
    99cc:	b	9938 <main@@Base+0x5500>
    99d0:	add	r0, fp, #12
    99d4:	add	r1, fp, #24
    99d8:	mov	r2, r7
    99dc:	bl	8d0c <main@@Base+0x48d4>
    99e0:	subs	sl, r0, #0
    99e4:	beq	997c <main@@Base+0x5544>
    99e8:	mov	r1, r7
    99ec:	bl	21dac <main@@Base+0x1d974>
    99f0:	subs	r4, r0, #0
    99f4:	beq	9ad0 <main@@Base+0x5698>
    99f8:	mov	r0, sl
    99fc:	mov	r1, r7
    9a00:	bl	e448 <main@@Base+0xa010>
    9a04:	cmp	r0, #0
    9a08:	moveq	r6, r0
    9a0c:	moveq	r5, r6
    9a10:	beq	998c <main@@Base+0x5554>
    9a14:	mov	r0, r8
    9a18:	bl	125fc <main@@Base+0xe1c4>
    9a1c:	mov	r6, r0
    9a20:	ldr	r2, [pc, #540]	; 9c44 <main@@Base+0x580c>
    9a24:	ldr	r0, [pc, #540]	; 9c48 <main@@Base+0x5810>
    9a28:	mov	r3, r6
    9a2c:	mov	r1, #128	; 0x80
    9a30:	add	r2, pc, r2
    9a34:	add	r0, pc, r0
    9a38:	bl	3a38 <g_log@plt>
    9a3c:	mov	r0, sl
    9a40:	bl	d500 <main@@Base+0x90c8>
    9a44:	cmp	r0, #0
    9a48:	bne	9adc <main@@Base+0x56a4>
    9a4c:	ldr	r5, [fp, #8]
    9a50:	mov	r3, #0
    9a54:	ldr	r1, [pc, #496]	; 9c4c <main@@Base+0x5814>
    9a58:	mov	r0, sl
    9a5c:	ldr	r2, [pc, #492]	; 9c50 <main@@Base+0x5818>
    9a60:	cmp	r5, #0
    9a64:	str	r3, [sp]
    9a68:	add	r1, pc, r1
    9a6c:	str	r3, [sp, #4]
    9a70:	add	r2, pc, r2
    9a74:	mov	r3, fp
    9a78:	movne	r5, #113	; 0x71
    9a7c:	moveq	r5, #1
    9a80:	bl	3d38 <g_signal_connect_data@plt>
    9a84:	mov	r2, #0
    9a88:	ldr	r1, [pc, #452]	; 9c54 <main@@Base+0x581c>
    9a8c:	str	r2, [sp]
    9a90:	mov	r3, fp
    9a94:	str	r2, [sp, #4]
    9a98:	mov	r0, sl
    9a9c:	ldr	r2, [pc, #436]	; 9c58 <main@@Base+0x5820>
    9aa0:	add	r1, pc, r1
    9aa4:	add	r2, pc, r2
    9aa8:	bl	3d38 <g_signal_connect_data@plt>
    9aac:	mov	r0, sl
    9ab0:	mov	r1, r8
    9ab4:	mov	r2, r5
    9ab8:	mov	r3, r7
    9abc:	bl	edb4 <main@@Base+0xa97c>
    9ac0:	cmp	r0, #0
    9ac4:	bne	9b0c <main@@Base+0x56d4>
    9ac8:	mov	r5, r0
    9acc:	b	998c <main@@Base+0x5554>
    9ad0:	mov	r6, r4
    9ad4:	mov	r5, r4
    9ad8:	b	998c <main@@Base+0x5554>
    9adc:	mov	r0, sl
    9ae0:	mov	r1, r7
    9ae4:	bl	fe20 <main@@Base+0xb9e8>
    9ae8:	cmp	r0, #0
    9aec:	beq	9ac8 <main@@Base+0x5690>
    9af0:	mov	r0, sl
    9af4:	movw	r1, #5000	; 0x1388
    9af8:	mov	r2, r7
    9afc:	bl	fa94 <main@@Base+0xb65c>
    9b00:	cmp	r0, #0
    9b04:	beq	9ac8 <main@@Base+0x5690>
    9b08:	b	9a4c <main@@Base+0x5614>
    9b0c:	mov	r0, sl
    9b10:	mov	r1, r7
    9b14:	bl	fb9c <main@@Base+0xb764>
    9b18:	cmp	r0, #0
    9b1c:	beq	9ac8 <main@@Base+0x5690>
    9b20:	mov	r2, r7
    9b24:	mov	r0, sl
    9b28:	movw	r1, #5000	; 0x1388
    9b2c:	bl	fa94 <main@@Base+0xb65c>
    9b30:	cmp	r0, #0
    9b34:	beq	9ac8 <main@@Base+0x5690>
    9b38:	mov	r0, r8
    9b3c:	bl	11558 <main@@Base+0xd120>
    9b40:	mov	r1, r0
    9b44:	ldr	r0, [pc, #272]	; 9c5c <main@@Base+0x5824>
    9b48:	add	r0, pc, r0
    9b4c:	bl	3fe4 <g_print@plt>
    9b50:	mov	r5, #1
    9b54:	b	998c <main@@Base+0x5554>
    9b58:	mov	r5, r0
    9b5c:	mov	r6, #0
    9b60:	cmp	r9, #0
    9b64:	beq	9b70 <main@@Base+0x5738>
    9b68:	mov	r0, r9
    9b6c:	bl	4110 <g_object_unref@plt>
    9b70:	cmp	r4, #0
    9b74:	beq	9b80 <main@@Base+0x5748>
    9b78:	mov	r0, r4
    9b7c:	bl	4110 <g_object_unref@plt>
    9b80:	mov	r4, r5
    9b84:	cmp	r8, #0
    9b88:	beq	9b94 <main@@Base+0x575c>
    9b8c:	mov	r0, r8
    9b90:	bl	4110 <g_object_unref@plt>
    9b94:	cmp	sl, #0
    9b98:	beq	9ba4 <main@@Base+0x576c>
    9b9c:	mov	r0, sl
    9ba0:	bl	4110 <g_object_unref@plt>
    9ba4:	mov	r0, r6
    9ba8:	bl	3eac <g_free@plt>
    9bac:	mov	r0, r4
    9bb0:	bl	42f0 <_Unwind_Resume@plt>
    9bb4:	mov	r5, r0
    9bb8:	b	9b60 <main@@Base+0x5728>
    9bbc:	b	9b58 <main@@Base+0x5720>
    9bc0:	mov	r4, #0
    9bc4:	mov	r5, r0
    9bc8:	mov	r6, r4
    9bcc:	b	9b60 <main@@Base+0x5728>
    9bd0:	mov	r4, #0
    9bd4:	mov	r5, r0
    9bd8:	mov	sl, r4
    9bdc:	mov	r6, r4
    9be0:	b	9b60 <main@@Base+0x5728>
    9be4:	mov	r6, #0
    9be8:	mov	r5, r0
    9bec:	mov	sl, r6
    9bf0:	mov	r4, r6
    9bf4:	b	9b70 <main@@Base+0x5738>
    9bf8:	mov	r6, #0
    9bfc:	mov	r5, r0
    9c00:	mov	sl, r6
    9c04:	mov	r8, r6
    9c08:	mov	r4, r6
    9c0c:	b	9b70 <main@@Base+0x5738>
    9c10:	b	9bd0 <main@@Base+0x5798>
    9c14:	b	9bf8 <main@@Base+0x57c0>
    9c18:	b	9bf8 <main@@Base+0x57c0>
    9c1c:	b	9bf8 <main@@Base+0x57c0>
    9c20:	mov	r5, r0
    9c24:	b	9b70 <main@@Base+0x5738>
    9c28:	mov	r4, r0
    9c2c:	b	9b84 <main@@Base+0x574c>
    9c30:	mov	r4, r0
    9c34:	b	9b94 <main@@Base+0x575c>
    9c38:	mov	r4, r0
    9c3c:	b	9ba4 <main@@Base+0x576c>
    9c40:	andeq	fp, r1, r4, ror #25
    9c44:	andeq	fp, r1, ip, lsl #23
    9c48:	andeq	fp, r1, r8, asr r4
    9c4c:	andeq	fp, r1, ip, asr #30
    9c50:			; <UNDEFINED> instruction: 0xffffbebc
    9c54:	andeq	fp, r1, r4, lsr #30
    9c58:			; <UNDEFINED> instruction: 0xffffbe88
    9c5c:	andeq	fp, r1, r0, asr pc
    9c60:	ldr	r3, [pc, #1304]	; a180 <main@@Base+0x5d48>
    9c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9c68:	mov	fp, r1
    9c6c:	ldr	r1, [pc, #1296]	; a184 <main@@Base+0x5d4c>
    9c70:	add	r3, pc, r3
    9c74:	sub	sp, sp, #28
    9c78:	mov	r4, r0
    9c7c:	mov	r0, fp
    9c80:	mov	sl, r2
    9c84:	ldr	r7, [r3, r1]
    9c88:	ldr	r3, [r7]
    9c8c:	str	r3, [sp, #20]
    9c90:	bl	3e34 <g_strv_length@plt>
    9c94:	cmp	r0, #1
    9c98:	bls	9d70 <main@@Base+0x5938>
    9c9c:	add	r0, r4, #12
    9ca0:	add	r1, r4, #24
    9ca4:	mov	r2, sl
    9ca8:	bl	8d0c <main@@Base+0x48d4>
    9cac:	subs	r5, r0, #0
    9cb0:	beq	9d8c <main@@Base+0x5954>
    9cb4:	ldrh	r1, [r4, #16]
    9cb8:	cmp	r1, #0
    9cbc:	bne	9d68 <main@@Base+0x5930>
    9cc0:	mov	r0, r5
    9cc4:	mov	r1, sl
    9cc8:	bl	21dac <main@@Base+0x1d974>
    9ccc:	subs	r9, r0, #0
    9cd0:	beq	9d9c <main@@Base+0x5964>
    9cd4:	mov	r0, r5
    9cd8:	mov	r1, sl
    9cdc:	bl	e448 <main@@Base+0xa010>
    9ce0:	cmp	r0, #0
    9ce4:	bne	9da8 <main@@Base+0x5970>
    9ce8:	mov	r6, r0
    9cec:	mov	r8, r0
    9cf0:	cmp	r9, #0
    9cf4:	bne	a14c <main@@Base+0x5d14>
    9cf8:	mov	r4, #0
    9cfc:	mov	sl, r4
    9d00:	mov	fp, r4
    9d04:	cmp	r6, #0
    9d08:	beq	9d14 <main@@Base+0x58dc>
    9d0c:	mov	r0, r6
    9d10:	bl	4110 <g_object_unref@plt>
    9d14:	cmp	r8, #0
    9d18:	beq	9d24 <main@@Base+0x58ec>
    9d1c:	mov	r0, r8
    9d20:	bl	4110 <g_object_unref@plt>
    9d24:	cmp	r4, #0
    9d28:	beq	9d34 <main@@Base+0x58fc>
    9d2c:	mov	r0, r4
    9d30:	bl	4110 <g_object_unref@plt>
    9d34:	cmp	r5, #0
    9d38:	beq	9d44 <main@@Base+0x590c>
    9d3c:	mov	r0, r5
    9d40:	bl	4110 <g_object_unref@plt>
    9d44:	mov	r0, sl
    9d48:	bl	3eac <g_free@plt>
    9d4c:	ldr	r2, [sp, #20]
    9d50:	ldr	r3, [r7]
    9d54:	mov	r0, fp
    9d58:	cmp	r2, r3
    9d5c:	bne	9ff8 <main@@Base+0x5bc0>
    9d60:	add	sp, sp, #28
    9d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9d68:	bl	c5f8 <main@@Base+0x81c0>
    9d6c:	b	9cc0 <main@@Base+0x5888>
    9d70:	bl	40a4 <fwupd_error_quark@plt>
    9d74:	ldr	r3, [pc, #1036]	; a188 <main@@Base+0x5d50>
    9d78:	mov	r1, r0
    9d7c:	mov	r2, #0
    9d80:	mov	r0, sl
    9d84:	add	r3, pc, r3
    9d88:	bl	3ae0 <g_set_error_literal@plt>
    9d8c:	mov	r6, #0
    9d90:	mov	r8, r6
    9d94:	mov	r5, r6
    9d98:	b	9cf8 <main@@Base+0x58c0>
    9d9c:	mov	r6, r9
    9da0:	mov	r8, r9
    9da4:	b	9cf8 <main@@Base+0x58c0>
    9da8:	mov	r2, #0
    9dac:	ldr	r1, [pc, #984]	; a18c <main@@Base+0x5d54>
    9db0:	str	r2, [sp]
    9db4:	mov	r0, r5
    9db8:	str	r2, [sp, #4]
    9dbc:	mov	r3, r4
    9dc0:	ldr	r2, [pc, #968]	; a190 <main@@Base+0x5d58>
    9dc4:	add	r1, pc, r1
    9dc8:	add	r2, pc, r2
    9dcc:	bl	3d38 <g_signal_connect_data@plt>
    9dd0:	mov	r2, #0
    9dd4:	ldr	r1, [pc, #952]	; a194 <main@@Base+0x5d5c>
    9dd8:	str	r2, [sp]
    9ddc:	mov	r3, r4
    9de0:	str	r2, [sp, #4]
    9de4:	mov	r0, r5
    9de8:	ldr	r2, [pc, #936]	; a198 <main@@Base+0x5d60>
    9dec:	add	r1, pc, r1
    9df0:	add	r2, pc, r2
    9df4:	bl	3d38 <g_signal_connect_data@plt>
    9df8:	mov	r0, r5
    9dfc:	bl	d500 <main@@Base+0x90c8>
    9e00:	cmp	r0, #0
    9e04:	beq	9e4c <main@@Base+0x5a14>
    9e08:	ldr	r0, [pc, #908]	; a19c <main@@Base+0x5d64>
    9e0c:	mov	r1, #128	; 0x80
    9e10:	ldr	r2, [pc, #904]	; a1a0 <main@@Base+0x5d68>
    9e14:	add	r0, pc, r0
    9e18:	add	r2, pc, r2
    9e1c:	bl	3a38 <g_log@plt>
    9e20:	mov	r0, r5
    9e24:	mov	r1, sl
    9e28:	bl	fe20 <main@@Base+0xb9e8>
    9e2c:	cmp	r0, #0
    9e30:	beq	9ce8 <main@@Base+0x58b0>
    9e34:	mov	r0, r5
    9e38:	movw	r1, #5000	; 0x1388
    9e3c:	mov	r2, sl
    9e40:	bl	fa94 <main@@Base+0xb65c>
    9e44:	cmp	r0, #0
    9e48:	beq	9ce8 <main@@Base+0x58b0>
    9e4c:	mov	r0, r5
    9e50:	ldr	r1, [fp, #4]
    9e54:	mov	r2, #0
    9e58:	bl	dc50 <main@@Base+0x9818>
    9e5c:	subs	r6, r0, #0
    9e60:	beq	9f38 <main@@Base+0x5b00>
    9e64:	mov	r0, r6
    9e68:	mov	r1, #0
    9e6c:	mov	r2, sl
    9e70:	bl	19b88 <main@@Base+0x15750>
    9e74:	subs	r8, r0, #0
    9e78:	beq	9cf0 <main@@Base+0x58b8>
    9e7c:	mov	r0, r5
    9e80:	mov	r1, sl
    9e84:	bl	fb9c <main@@Base+0xb764>
    9e88:	cmp	r0, #0
    9e8c:	beq	9cf0 <main@@Base+0x58b8>
    9e90:	mov	r0, r5
    9e94:	movw	r1, #5000	; 0x1388
    9e98:	mov	r2, sl
    9e9c:	bl	fa94 <main@@Base+0xb65c>
    9ea0:	cmp	r0, #0
    9ea4:	beq	9cf0 <main@@Base+0x58b8>
    9ea8:	bl	11258 <main@@Base+0xce20>
    9eac:	mov	r1, #2
    9eb0:	mov	r4, r0
    9eb4:	bl	11b20 <main@@Base+0xd6e8>
    9eb8:	mov	r0, r5
    9ebc:	bl	de5c <main@@Base+0x9a24>
    9ec0:	mov	r1, r0
    9ec4:	mov	r0, r4
    9ec8:	bl	11970 <main@@Base+0xd538>
    9ecc:	mov	r0, r5
    9ed0:	bl	deec <main@@Base+0x9ab4>
    9ed4:	mov	r1, r0
    9ed8:	mov	r0, r4
    9edc:	bl	11a00 <main@@Base+0xd5c8>
    9ee0:	mov	r0, r4
    9ee4:	mov	r1, r8
    9ee8:	bl	11624 <main@@Base+0xd1ec>
    9eec:	ldr	r0, [fp]
    9ef0:	bl	4218 <g_file_new_for_path@plt>
    9ef4:	str	r0, [sp, #12]
    9ef8:	mov	r2, sl
    9efc:	mov	r0, r4
    9f00:	ldr	r1, [sp, #12]
    9f04:	bl	12420 <main@@Base+0xdfe8>
    9f08:	cmp	r0, #0
    9f0c:	moveq	sl, r0
    9f10:	moveq	fp, sl
    9f14:	bne	9fb0 <main@@Base+0x5b78>
    9f18:	ldr	r3, [sp, #12]
    9f1c:	cmp	r3, #0
    9f20:	beq	9f2c <main@@Base+0x5af4>
    9f24:	mov	r0, r3
    9f28:	bl	4110 <g_object_unref@plt>
    9f2c:	mov	r0, r9
    9f30:	bl	4110 <g_object_unref@plt>
    9f34:	b	9d04 <main@@Base+0x58cc>
    9f38:	ldr	r0, [fp, #4]
    9f3c:	add	r1, sp, #16
    9f40:	mov	r2, #10
    9f44:	bl	4284 <g_ascii_strtoull@plt>
    9f48:	cmp	r1, #0
    9f4c:	cmpeq	r0, #255	; 0xff
    9f50:	bhi	9f64 <main@@Base+0x5b2c>
    9f54:	ldr	r3, [sp, #16]
    9f58:	ldrb	r3, [r3]
    9f5c:	cmp	r3, #0
    9f60:	beq	9f90 <main@@Base+0x5b58>
    9f64:	bl	40a4 <fwupd_error_quark@plt>
    9f68:	ldr	ip, [fp, #4]
    9f6c:	mov	r1, r0
    9f70:	ldr	r3, [pc, #556]	; a1a4 <main@@Base+0x5d6c>
    9f74:	mov	r0, sl
    9f78:	mov	r2, #0
    9f7c:	add	r3, pc, r3
    9f80:	str	ip, [sp]
    9f84:	bl	4350 <g_set_error@plt>
    9f88:	mov	r8, #0
    9f8c:	b	9cf0 <main@@Base+0x58b8>
    9f90:	uxtb	r1, r0
    9f94:	mov	r2, sl
    9f98:	mov	r0, r5
    9f9c:	bl	dae8 <main@@Base+0x96b0>
    9fa0:	cmp	r0, #0
    9fa4:	movne	r6, r0
    9fa8:	bne	9e64 <main@@Base+0x5a2c>
    9fac:	b	9f88 <main@@Base+0x5b50>
    9fb0:	mov	r0, r4
    9fb4:	bl	125fc <main@@Base+0xe1c4>
    9fb8:	mov	sl, r0
    9fbc:	ldr	r2, [pc, #484]	; a1a8 <main@@Base+0x5d70>
    9fc0:	ldr	r0, [pc, #484]	; a1ac <main@@Base+0x5d74>
    9fc4:	mov	r3, sl
    9fc8:	mov	r1, #128	; 0x80
    9fcc:	add	r2, pc, r2
    9fd0:	add	r0, pc, r0
    9fd4:	bl	3a38 <g_log@plt>
    9fd8:	mov	r0, r8
    9fdc:	bl	15dd8 <main@@Base+0x119a0>
    9fe0:	mov	r1, r0
    9fe4:	ldr	r0, [pc, #452]	; a1b0 <main@@Base+0x5d78>
    9fe8:	add	r0, pc, r0
    9fec:	bl	3fe4 <g_print@plt>
    9ff0:	mov	fp, #1
    9ff4:	b	9f18 <main@@Base+0x5ae0>
    9ff8:	bl	3e4c <__stack_chk_fail@plt>
    9ffc:	mov	r4, r0
    a000:	mov	r0, sl
    a004:	bl	3eac <g_free@plt>
    a008:	mov	r0, r4
    a00c:	bl	42f0 <_Unwind_Resume@plt>
    a010:	mov	r6, #0
    a014:	mov	r7, r0
    a018:	mov	r8, r6
    a01c:	mov	r4, r6
    a020:	mov	sl, #0
    a024:	cmp	r9, #0
    a028:	beq	a034 <main@@Base+0x5bfc>
    a02c:	mov	r0, r9
    a030:	bl	4110 <g_object_unref@plt>
    a034:	cmp	r6, #0
    a038:	beq	a044 <main@@Base+0x5c0c>
    a03c:	mov	r0, r6
    a040:	bl	4110 <g_object_unref@plt>
    a044:	mov	r6, r7
    a048:	cmp	r8, #0
    a04c:	beq	a058 <main@@Base+0x5c20>
    a050:	mov	r0, r8
    a054:	bl	4110 <g_object_unref@plt>
    a058:	cmp	r4, #0
    a05c:	beq	a068 <main@@Base+0x5c30>
    a060:	mov	r0, r4
    a064:	bl	4110 <g_object_unref@plt>
    a068:	mov	r4, r6
    a06c:	cmp	r5, #0
    a070:	beq	a000 <main@@Base+0x5bc8>
    a074:	mov	r0, r5
    a078:	bl	4110 <g_object_unref@plt>
    a07c:	b	a000 <main@@Base+0x5bc8>
    a080:	b	a010 <main@@Base+0x5bd8>
    a084:	b	a010 <main@@Base+0x5bd8>
    a088:	mov	r7, r0
    a08c:	b	a034 <main@@Base+0x5bfc>
    a090:	mov	r7, r0
    a094:	mov	r4, #0
    a098:	b	a020 <main@@Base+0x5be8>
    a09c:	mov	r7, r0
    a0a0:	b	a02c <main@@Base+0x5bf4>
    a0a4:	mov	r8, #0
    a0a8:	mov	r7, r0
    a0ac:	mov	r4, r8
    a0b0:	b	a020 <main@@Base+0x5be8>
    a0b4:	b	a010 <main@@Base+0x5bd8>
    a0b8:	mov	r7, r0
    a0bc:	mov	sl, #0
    a0c0:	ldr	r3, [sp, #12]
    a0c4:	cmp	r3, #0
    a0c8:	beq	a024 <main@@Base+0x5bec>
    a0cc:	ldr	r0, [sp, #12]
    a0d0:	bl	4110 <g_object_unref@plt>
    a0d4:	b	a024 <main@@Base+0x5bec>
    a0d8:	mov	r7, r0
    a0dc:	b	a020 <main@@Base+0x5be8>
    a0e0:	b	a090 <main@@Base+0x5c58>
    a0e4:	b	a090 <main@@Base+0x5c58>
    a0e8:	b	a0a4 <main@@Base+0x5c6c>
    a0ec:	b	a0a4 <main@@Base+0x5c6c>
    a0f0:	b	a0a4 <main@@Base+0x5c6c>
    a0f4:	b	a0a4 <main@@Base+0x5c6c>
    a0f8:	b	a010 <main@@Base+0x5bd8>
    a0fc:	b	a010 <main@@Base+0x5bd8>
    a100:	b	a010 <main@@Base+0x5bd8>
    a104:	mov	r9, #0
    a108:	mov	r7, r0
    a10c:	mov	r6, r9
    a110:	mov	r8, r9
    a114:	mov	r4, r9
    a118:	mov	r5, r9
    a11c:	b	a020 <main@@Base+0x5be8>
    a120:	b	a104 <main@@Base+0x5ccc>
    a124:	b	a104 <main@@Base+0x5ccc>
    a128:	mov	r9, #0
    a12c:	mov	r7, r0
    a130:	mov	r6, r9
    a134:	mov	r8, r9
    a138:	mov	r4, r9
    a13c:	b	a020 <main@@Base+0x5be8>
    a140:	b	a104 <main@@Base+0x5ccc>
    a144:	b	a010 <main@@Base+0x5bd8>
    a148:	b	a128 <main@@Base+0x5cf0>
    a14c:	mov	r4, #0
    a150:	mov	sl, r4
    a154:	mov	fp, r4
    a158:	b	9f2c <main@@Base+0x5af4>
    a15c:	mov	r6, r0
    a160:	b	a048 <main@@Base+0x5c10>
    a164:	mov	r6, r0
    a168:	b	a058 <main@@Base+0x5c20>
    a16c:	mov	r4, r0
    a170:	b	a06c <main@@Base+0x5c34>
    a174:	mov	r7, r0
    a178:	b	a0c0 <main@@Base+0x5c88>
    a17c:	b	a0b8 <main@@Base+0x5c80>
    a180:	andeq	r4, r3, r0, lsl pc
    a184:	andeq	r0, r0, r0, lsr r4
    a188:	andeq	fp, r1, r0, asr #26
    a18c:	strdeq	fp, [r1], -r0
    a190:			; <UNDEFINED> instruction: 0xffffbb64
    a194:	ldrdeq	fp, [r1], -r8
    a198:			; <UNDEFINED> instruction: 0xffffbb3c
    a19c:	andeq	fp, r1, r8, ror r0
    a1a0:	andeq	fp, r1, r0, asr #23
    a1a4:	andeq	fp, r1, r8, ror #20
    a1a8:	strdeq	fp, [r1], -r0
    a1ac:			; <UNDEFINED> instruction: 0x0001aebc
    a1b0:	andeq	fp, r1, r0, lsr #22
    a1b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    a1b8:	mov	r9, r0
    a1bc:	sub	sp, sp, #8
    a1c0:	mov	r0, r1
    a1c4:	mov	r4, r1
    a1c8:	mov	r7, r2
    a1cc:	bl	3e34 <g_strv_length@plt>
    a1d0:	cmp	r0, #1
    a1d4:	beq	a248 <main@@Base+0x5e10>
    a1d8:	mov	r0, r4
    a1dc:	bl	3e34 <g_strv_length@plt>
    a1e0:	cmp	r0, #2
    a1e4:	beq	a2b8 <main@@Base+0x5e80>
    a1e8:	bl	40a4 <fwupd_error_quark@plt>
    a1ec:	ldr	r3, [pc, #1204]	; a6a8 <main@@Base+0x6270>
    a1f0:	mov	r1, r0
    a1f4:	mov	r2, #0
    a1f8:	mov	r0, r7
    a1fc:	add	r3, pc, r3
    a200:	bl	3ae0 <g_set_error_literal@plt>
    a204:	mov	r6, #0
    a208:	mov	r5, r6
    a20c:	mov	r4, #0
    a210:	mov	r7, r4
    a214:	cmp	r6, #0
    a218:	beq	a224 <main@@Base+0x5dec>
    a21c:	mov	r0, r6
    a220:	bl	4110 <g_object_unref@plt>
    a224:	cmp	r5, #0
    a228:	beq	a234 <main@@Base+0x5dfc>
    a22c:	mov	r0, r5
    a230:	bl	4110 <g_object_unref@plt>
    a234:	mov	r0, r7
    a238:	bl	3eac <g_free@plt>
    a23c:	mov	r0, r4
    a240:	add	sp, sp, #8
    a244:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a248:	ldr	r1, [pc, #1116]	; a6ac <main@@Base+0x6274>
    a24c:	ldr	r0, [r4]
    a250:	add	r1, pc, r1
    a254:	bl	4278 <g_str_has_suffix@plt>
    a258:	cmp	r0, #0
    a25c:	movne	sl, #2
    a260:	beq	a350 <main@@Base+0x5f18>
    a264:	add	r0, r9, #12
    a268:	add	r1, r9, #24
    a26c:	mov	r2, r7
    a270:	bl	8d0c <main@@Base+0x48d4>
    a274:	subs	r5, r0, #0
    a278:	beq	a204 <main@@Base+0x5dcc>
    a27c:	mov	r1, r7
    a280:	bl	21dac <main@@Base+0x1d974>
    a284:	subs	r8, r0, #0
    a288:	beq	a468 <main@@Base+0x6030>
    a28c:	mov	r0, r5
    a290:	mov	r1, r7
    a294:	bl	e448 <main@@Base+0xa010>
    a298:	cmp	r0, #0
    a29c:	bne	a370 <main@@Base+0x5f38>
    a2a0:	mov	r6, r0
    a2a4:	cmp	r8, #0
    a2a8:	beq	a20c <main@@Base+0x5dd4>
    a2ac:	mov	r4, #0
    a2b0:	mov	r7, r4
    a2b4:	b	a45c <main@@Base+0x6024>
    a2b8:	ldr	r0, [r4, #4]
    a2bc:	bl	128ac <main@@Base+0xe474>
    a2c0:	subs	sl, r0, #0
    a2c4:	bne	a264 <main@@Base+0x5e2c>
    a2c8:	bl	3990 <g_string_new@plt>
    a2cc:	ldr	r8, [pc, #988]	; a6b0 <main@@Base+0x6278>
    a2d0:	mov	r6, r0
    a2d4:	mov	r5, #1
    a2d8:	add	r8, pc, r8
    a2dc:	ldr	r3, [r6, #4]
    a2e0:	cmp	r3, #0
    a2e4:	beq	a2f4 <main@@Base+0x5ebc>
    a2e8:	mov	r0, r6
    a2ec:	mov	r1, r8
    a2f0:	bl	4308 <g_string_append@plt>
    a2f4:	mov	r0, r5
    a2f8:	bl	12154 <main@@Base+0xdd1c>
    a2fc:	mov	r1, r0
    a300:	mov	r0, r6
    a304:	bl	4308 <g_string_append@plt>
    a308:	add	r5, r5, #1
    a30c:	cmp	r5, #6
    a310:	bne	a2dc <main@@Base+0x5ea4>
    a314:	bl	40a4 <fwupd_error_quark@plt>
    a318:	ldr	ip, [r4]
    a31c:	mov	r1, r0
    a320:	ldr	r3, [pc, #908]	; a6b4 <main@@Base+0x627c>
    a324:	mov	r0, r7
    a328:	mov	r2, #0
    a32c:	str	ip, [sp]
    a330:	add	r3, pc, r3
    a334:	ldr	ip, [r6]
    a338:	str	ip, [sp, #4]
    a33c:	bl	4350 <g_set_error@plt>
    a340:	mov	r0, r6
    a344:	mov	r1, #1
    a348:	bl	40bc <g_string_free@plt>
    a34c:	b	a204 <main@@Base+0x5dcc>
    a350:	ldr	r1, [pc, #864]	; a6b8 <main@@Base+0x6280>
    a354:	ldr	r0, [r4]
    a358:	add	r1, pc, r1
    a35c:	bl	4278 <g_str_has_suffix@plt>
    a360:	cmp	r0, #0
    a364:	beq	a4a0 <main@@Base+0x6068>
    a368:	mov	sl, #1
    a36c:	b	a264 <main@@Base+0x5e2c>
    a370:	mov	r0, r5
    a374:	bl	d500 <main@@Base+0x90c8>
    a378:	cmp	r0, #0
    a37c:	bne	a470 <main@@Base+0x6038>
    a380:	mov	r2, #0
    a384:	ldr	r1, [pc, #816]	; a6bc <main@@Base+0x6284>
    a388:	str	r2, [sp]
    a38c:	mov	r0, r5
    a390:	str	r2, [sp, #4]
    a394:	mov	r3, r9
    a398:	ldr	r2, [pc, #800]	; a6c0 <main@@Base+0x6288>
    a39c:	add	r1, pc, r1
    a3a0:	add	r2, pc, r2
    a3a4:	bl	3d38 <g_signal_connect_data@plt>
    a3a8:	mov	r2, #0
    a3ac:	ldr	r1, [pc, #784]	; a6c4 <main@@Base+0x628c>
    a3b0:	str	r2, [sp]
    a3b4:	mov	r3, r9
    a3b8:	str	r2, [sp, #4]
    a3bc:	mov	r0, r5
    a3c0:	ldr	r2, [pc, #768]	; a6c8 <main@@Base+0x6290>
    a3c4:	add	r1, pc, r1
    a3c8:	add	r2, pc, r2
    a3cc:	bl	3d38 <g_signal_connect_data@plt>
    a3d0:	mov	r0, r5
    a3d4:	mov	r1, #0
    a3d8:	mov	r2, r7
    a3dc:	bl	eab8 <main@@Base+0xa680>
    a3e0:	subs	r6, r0, #0
    a3e4:	beq	a2a4 <main@@Base+0x5e6c>
    a3e8:	mov	r0, r5
    a3ec:	mov	r1, r7
    a3f0:	bl	fb9c <main@@Base+0xb764>
    a3f4:	cmp	r0, #0
    a3f8:	beq	a2a4 <main@@Base+0x5e6c>
    a3fc:	mov	r0, r5
    a400:	movw	r1, #5000	; 0x1388
    a404:	mov	r2, r7
    a408:	bl	fa94 <main@@Base+0xb65c>
    a40c:	cmp	r0, #0
    a410:	beq	a2a4 <main@@Base+0x5e6c>
    a414:	ldr	r0, [r4]
    a418:	bl	4218 <g_file_new_for_path@plt>
    a41c:	mov	r9, r0
    a420:	mov	r1, sl
    a424:	mov	r0, r6
    a428:	bl	11b20 <main@@Base+0xd6e8>
    a42c:	mov	r2, r7
    a430:	mov	r0, r6
    a434:	mov	r1, r9
    a438:	bl	12420 <main@@Base+0xdfe8>
    a43c:	cmp	r0, #0
    a440:	moveq	r7, r0
    a444:	moveq	r4, r7
    a448:	bne	a510 <main@@Base+0x60d8>
    a44c:	cmp	r9, #0
    a450:	beq	a45c <main@@Base+0x6024>
    a454:	mov	r0, r9
    a458:	bl	4110 <g_object_unref@plt>
    a45c:	mov	r0, r8
    a460:	bl	4110 <g_object_unref@plt>
    a464:	b	a214 <main@@Base+0x5ddc>
    a468:	mov	r6, r8
    a46c:	b	a20c <main@@Base+0x5dd4>
    a470:	mov	r0, r5
    a474:	mov	r1, r7
    a478:	bl	fe20 <main@@Base+0xb9e8>
    a47c:	cmp	r0, #0
    a480:	beq	a2a0 <main@@Base+0x5e68>
    a484:	mov	r0, r5
    a488:	movw	r1, #5000	; 0x1388
    a48c:	mov	r2, r7
    a490:	bl	fa94 <main@@Base+0xb65c>
    a494:	cmp	r0, #0
    a498:	beq	a2a0 <main@@Base+0x5e68>
    a49c:	b	a380 <main@@Base+0x5f48>
    a4a0:	ldr	r1, [pc, #548]	; a6cc <main@@Base+0x6294>
    a4a4:	ldr	r0, [r4]
    a4a8:	add	r1, pc, r1
    a4ac:	bl	4278 <g_str_has_suffix@plt>
    a4b0:	cmp	r0, #0
    a4b4:	bne	a368 <main@@Base+0x5f30>
    a4b8:	ldr	r1, [pc, #528]	; a6d0 <main@@Base+0x6298>
    a4bc:	ldr	r0, [r4]
    a4c0:	add	r1, pc, r1
    a4c4:	bl	4278 <g_str_has_suffix@plt>
    a4c8:	cmp	r0, #0
    a4cc:	beq	a4d8 <main@@Base+0x60a0>
    a4d0:	mov	sl, #4
    a4d4:	b	a264 <main@@Base+0x5e2c>
    a4d8:	ldr	r1, [pc, #500]	; a6d4 <main@@Base+0x629c>
    a4dc:	ldr	r0, [r4]
    a4e0:	add	r1, pc, r1
    a4e4:	bl	4278 <g_str_has_suffix@plt>
    a4e8:	cmp	r0, #0
    a4ec:	bne	a4d0 <main@@Base+0x6098>
    a4f0:	bl	40a4 <fwupd_error_quark@plt>
    a4f4:	ldr	r3, [pc, #476]	; a6d8 <main@@Base+0x62a0>
    a4f8:	mov	r1, r0
    a4fc:	mov	r2, #0
    a500:	mov	r0, r7
    a504:	add	r3, pc, r3
    a508:	bl	3ae0 <g_set_error_literal@plt>
    a50c:	b	a204 <main@@Base+0x5dcc>
    a510:	mov	r0, r6
    a514:	bl	125fc <main@@Base+0xe1c4>
    a518:	mov	r7, r0
    a51c:	ldr	r2, [pc, #440]	; a6dc <main@@Base+0x62a4>
    a520:	ldr	r0, [pc, #440]	; a6e0 <main@@Base+0x62a8>
    a524:	mov	r3, r7
    a528:	mov	r1, #128	; 0x80
    a52c:	add	r2, pc, r2
    a530:	add	r0, pc, r0
    a534:	bl	3a38 <g_log@plt>
    a538:	mov	r0, r6
    a53c:	bl	11558 <main@@Base+0xd120>
    a540:	mov	r1, r0
    a544:	ldr	r0, [pc, #408]	; a6e4 <main@@Base+0x62ac>
    a548:	add	r0, pc, r0
    a54c:	bl	3fe4 <g_print@plt>
    a550:	mov	r4, #1
    a554:	b	a44c <main@@Base+0x6014>
    a558:	mov	r7, #0
    a55c:	mov	r4, r0
    a560:	mov	r5, r7
    a564:	mov	r6, r7
    a568:	mov	r8, r7
    a56c:	cmp	r8, #0
    a570:	beq	a57c <main@@Base+0x6144>
    a574:	mov	r0, r8
    a578:	bl	4110 <g_object_unref@plt>
    a57c:	cmp	r6, #0
    a580:	beq	a58c <main@@Base+0x6154>
    a584:	mov	r0, r6
    a588:	bl	4110 <g_object_unref@plt>
    a58c:	cmp	r5, #0
    a590:	beq	a59c <main@@Base+0x6164>
    a594:	mov	r0, r5
    a598:	bl	4110 <g_object_unref@plt>
    a59c:	mov	r0, r7
    a5a0:	bl	3eac <g_free@plt>
    a5a4:	mov	r0, r4
    a5a8:	bl	42f0 <_Unwind_Resume@plt>
    a5ac:	b	a558 <main@@Base+0x6120>
    a5b0:	mov	r4, r0
    a5b4:	cmp	r9, #0
    a5b8:	beq	a56c <main@@Base+0x6134>
    a5bc:	mov	r0, r9
    a5c0:	bl	4110 <g_object_unref@plt>
    a5c4:	b	a56c <main@@Base+0x6134>
    a5c8:	mov	r4, r0
    a5cc:	mov	r7, #0
    a5d0:	b	a5b4 <main@@Base+0x617c>
    a5d4:	b	a558 <main@@Base+0x6120>
    a5d8:	mov	r4, r0
    a5dc:	b	a58c <main@@Base+0x6154>
    a5e0:	b	a558 <main@@Base+0x6120>
    a5e4:	b	a558 <main@@Base+0x6120>
    a5e8:	b	a558 <main@@Base+0x6120>
    a5ec:	b	a558 <main@@Base+0x6120>
    a5f0:	b	a558 <main@@Base+0x6120>
    a5f4:	b	a558 <main@@Base+0x6120>
    a5f8:	mov	r7, #0
    a5fc:	mov	r4, r0
    a600:	mov	r6, r7
    a604:	b	a56c <main@@Base+0x6134>
    a608:	mov	r4, r0
    a60c:	b	a59c <main@@Base+0x6164>
    a610:	b	a558 <main@@Base+0x6120>
    a614:	mov	r7, #0
    a618:	mov	r4, r0
    a61c:	mov	r6, r7
    a620:	mov	r8, r7
    a624:	b	a56c <main@@Base+0x6134>
    a628:	b	a558 <main@@Base+0x6120>
    a62c:	mov	r4, r0
    a630:	mov	r1, #1
    a634:	mov	r0, r6
    a638:	bl	40bc <g_string_free@plt>
    a63c:	mov	r7, #0
    a640:	mov	r5, r7
    a644:	mov	r6, r7
    a648:	mov	r8, r7
    a64c:	b	a56c <main@@Base+0x6134>
    a650:	b	a558 <main@@Base+0x6120>
    a654:	b	a558 <main@@Base+0x6120>
    a658:	mov	r4, r0
    a65c:	mov	r7, #0
    a660:	b	a56c <main@@Base+0x6134>
    a664:	b	a5f8 <main@@Base+0x61c0>
    a668:	b	a5f8 <main@@Base+0x61c0>
    a66c:	b	a5f8 <main@@Base+0x61c0>
    a670:	mov	r4, r0
    a674:	b	a574 <main@@Base+0x613c>
    a678:	mov	r4, r0
    a67c:	b	a57c <main@@Base+0x6144>
    a680:	b	a5f8 <main@@Base+0x61c0>
    a684:	b	a5f8 <main@@Base+0x61c0>
    a688:	b	a5c8 <main@@Base+0x6190>
    a68c:	b	a5c8 <main@@Base+0x6190>
    a690:	b	a658 <main@@Base+0x6220>
    a694:	b	a658 <main@@Base+0x6220>
    a698:	b	a5f8 <main@@Base+0x61c0>
    a69c:	b	a558 <main@@Base+0x6120>
    a6a0:	b	a558 <main@@Base+0x6120>
    a6a4:	b	a558 <main@@Base+0x6120>
    a6a8:	andeq	fp, r1, r8, ror r9
    a6ac:	andeq	fp, r1, r8, ror #11
    a6b0:	andeq	sp, r1, ip, asr #6
    a6b4:	andeq	fp, r1, r8, ror #4
    a6b8:	ldrdeq	fp, [r1], -ip
    a6bc:	andeq	fp, r1, r8, lsl r6
    a6c0:			; <UNDEFINED> instruction: 0xffffb58c
    a6c4:	andeq	fp, r1, r0, lsl #12
    a6c8:			; <UNDEFINED> instruction: 0xffffb564
    a6cc:	muleq	r1, r4, r6
    a6d0:	andeq	fp, r1, r4, lsl #13
    a6d4:	andeq	fp, r1, ip, ror #12
    a6d8:	andeq	fp, r1, r0, asr r6
    a6dc:	muleq	r1, r0, r0
    a6e0:	andeq	sl, r1, ip, asr r9
    a6e4:	andeq	fp, r1, r0, asr #11
    a6e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a6ec:	sub	sp, sp, #60	; 0x3c
    a6f0:	ldr	r3, [pc, #428]	; a8a4 <main@@Base+0x646c>
    a6f4:	subs	r2, r0, #0
    a6f8:	str	r2, [sp, #32]
    a6fc:	ldr	r2, [pc, #420]	; a8a8 <main@@Base+0x6470>
    a700:	add	r3, pc, r3
    a704:	str	r1, [sp, #36]	; 0x24
    a708:	ldr	r2, [r3, r2]
    a70c:	ldr	r3, [r2]
    a710:	str	r2, [sp, #28]
    a714:	str	r3, [sp, #52]	; 0x34
    a718:	beq	a83c <main@@Base+0x6404>
    a71c:	bl	411c <strlen@plt>
    a720:	lsr	r0, r0, #1
    a724:	str	r0, [sp, #24]
    a728:	bl	3c54 <g_malloc@plt>
    a72c:	ldr	r1, [sp, #24]
    a730:	str	r0, [sp, #20]
    a734:	cmp	r1, #0
    a738:	beq	a828 <main@@Base+0x63f0>
    a73c:	ldr	r3, [pc, #360]	; a8ac <main@@Base+0x6474>
    a740:	add	r7, sp, #48	; 0x30
    a744:	ldr	r1, [sp, #20]
    a748:	add	r9, sp, #50	; 0x32
    a74c:	add	r3, pc, r3
    a750:	ldr	r2, [sp, #24]
    a754:	mov	r4, r7
    a758:	ldr	r5, [sp, #32]
    a75c:	ldr	r8, [r3]
    a760:	add	r1, r1, r2
    a764:	ldr	r6, [sp, #20]
    a768:	mov	fp, #0
    a76c:	str	r1, [sp, #16]
    a770:	add	r1, sp, #44	; 0x2c
    a774:	lsr	sl, r8, #16
    a778:	str	r1, [sp, #12]
    a77c:	b	a7a4 <main@@Base+0x636c>
    a780:	ldr	r3, [sp, #44]	; 0x2c
    a784:	ldrb	r3, [r3]
    a788:	cmp	r3, #0
    a78c:	bne	a7d8 <main@@Base+0x63a0>
    a790:	ldr	r3, [sp, #16]
    a794:	add	r5, r5, #2
    a798:	strb	r0, [r6], #1
    a79c:	cmp	r6, r3
    a7a0:	beq	a828 <main@@Base+0x63f0>
    a7a4:	ldrh	r3, [r5]
    a7a8:	mov	r0, r4
    a7ac:	strh	r8, [r7]
    a7b0:	add	r1, sp, #44	; 0x2c
    a7b4:	mov	r2, #16
    a7b8:	mov	r7, r4
    a7bc:	strh	r3, [r4]
    a7c0:	strb	sl, [r9]
    a7c4:	str	fp, [sp, #44]	; 0x2c
    a7c8:	bl	4284 <g_ascii_strtoull@plt>
    a7cc:	cmp	r1, #0
    a7d0:	cmpeq	r0, #255	; 0xff
    a7d4:	bls	a780 <main@@Base+0x6348>
    a7d8:	bl	40a4 <fwupd_error_quark@plt>
    a7dc:	ldr	r2, [sp, #32]
    a7e0:	mov	r1, r0
    a7e4:	ldr	r3, [pc, #196]	; a8b0 <main@@Base+0x6478>
    a7e8:	ldr	r0, [sp, #36]	; 0x24
    a7ec:	str	r2, [sp]
    a7f0:	add	r3, pc, r3
    a7f4:	mov	r2, #0
    a7f8:	bl	4350 <g_set_error@plt>
    a7fc:	mov	r4, #0
    a800:	ldr	r0, [sp, #20]
    a804:	bl	3eac <g_free@plt>
    a808:	ldr	r1, [sp, #28]
    a80c:	ldr	r2, [sp, #52]	; 0x34
    a810:	mov	r0, r4
    a814:	ldr	r3, [r1]
    a818:	cmp	r2, r3
    a81c:	bne	a868 <main@@Base+0x6430>
    a820:	add	sp, sp, #60	; 0x3c
    a824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a828:	ldr	r1, [sp, #24]
    a82c:	ldr	r0, [sp, #20]
    a830:	bl	390c <g_bytes_new@plt>
    a834:	mov	r4, r0
    a838:	b	a800 <main@@Base+0x63c8>
    a83c:	bl	40a4 <fwupd_error_quark@plt>
    a840:	ldr	r3, [pc, #108]	; a8b4 <main@@Base+0x647c>
    a844:	mov	r1, r0
    a848:	mov	r2, #0
    a84c:	ldr	r0, [sp, #36]	; 0x24
    a850:	add	r3, pc, r3
    a854:	bl	3ae0 <g_set_error_literal@plt>
    a858:	mov	r1, #0
    a85c:	str	r1, [sp, #20]
    a860:	mov	r4, r1
    a864:	b	a800 <main@@Base+0x63c8>
    a868:	bl	3e4c <__stack_chk_fail@plt>
    a86c:	mov	r4, r0
    a870:	mov	r3, #0
    a874:	str	r3, [sp, #20]
    a878:	ldr	r0, [sp, #20]
    a87c:	bl	3eac <g_free@plt>
    a880:	mov	r0, r4
    a884:	bl	42f0 <_Unwind_Resume@plt>
    a888:	mov	r2, #0
    a88c:	mov	r4, r0
    a890:	str	r2, [sp, #20]
    a894:	b	a878 <main@@Base+0x6440>
    a898:	b	a888 <main@@Base+0x6450>
    a89c:	mov	r4, r0
    a8a0:	b	a878 <main@@Base+0x6440>
    a8a4:	andeq	r4, r3, r0, lsl #9
    a8a8:	andeq	r0, r0, r0, lsr r4
    a8ac:	andeq	fp, r1, r4, lsl #9
    a8b0:	andeq	fp, r1, r8, asr #7
    a8b4:	andeq	fp, r1, r4, asr r3
    a8b8:	ldr	r3, [pc, #1108]	; ad14 <main@@Base+0x68dc>
    a8bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a8c0:	mov	r4, r1
    a8c4:	ldr	r1, [pc, #1100]	; ad18 <main@@Base+0x68e0>
    a8c8:	sub	sp, sp, #92	; 0x5c
    a8cc:	add	r3, pc, r3
    a8d0:	mov	r0, r4
    a8d4:	str	r2, [sp, #60]	; 0x3c
    a8d8:	ldr	r1, [r3, r1]
    a8dc:	ldr	r3, [r1]
    a8e0:	str	r1, [sp, #64]	; 0x40
    a8e4:	str	r3, [sp, #84]	; 0x54
    a8e8:	bl	3e34 <g_strv_length@plt>
    a8ec:	cmp	r0, #2
    a8f0:	bhi	a968 <main@@Base+0x6530>
    a8f4:	bl	40a4 <fwupd_error_quark@plt>
    a8f8:	ldr	r3, [pc, #1052]	; ad1c <main@@Base+0x68e4>
    a8fc:	mov	r1, r0
    a900:	mov	r2, #0
    a904:	ldr	r0, [sp, #60]	; 0x3c
    a908:	add	r3, pc, r3
    a90c:	bl	3ae0 <g_set_error_literal@plt>
    a910:	mov	r3, #0
    a914:	str	r3, [sp, #52]	; 0x34
    a918:	str	r3, [sp, #48]	; 0x30
    a91c:	mov	r4, #0
    a920:	ldr	r1, [sp, #52]	; 0x34
    a924:	cmp	r1, #0
    a928:	beq	a934 <main@@Base+0x64fc>
    a92c:	ldr	r0, [sp, #52]	; 0x34
    a930:	bl	4110 <g_object_unref@plt>
    a934:	ldr	r2, [sp, #48]	; 0x30
    a938:	cmp	r2, #0
    a93c:	beq	a948 <main@@Base+0x6510>
    a940:	ldr	r0, [sp, #48]	; 0x30
    a944:	bl	4110 <g_object_unref@plt>
    a948:	ldr	r1, [sp, #64]	; 0x40
    a94c:	mov	r0, r4
    a950:	ldr	r2, [sp, #84]	; 0x54
    a954:	ldr	r3, [r1]
    a958:	cmp	r2, r3
    a95c:	bne	acc4 <main@@Base+0x688c>
    a960:	add	sp, sp, #92	; 0x5c
    a964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a968:	ldr	r0, [r4]
    a96c:	bl	4218 <g_file_new_for_path@plt>
    a970:	str	r0, [sp, #52]	; 0x34
    a974:	bl	11258 <main@@Base+0xce20>
    a978:	ldr	r1, [sp, #52]	; 0x34
    a97c:	mov	r2, #0
    a980:	ldr	r3, [sp, #60]	; 0x3c
    a984:	str	r0, [sp, #48]	; 0x30
    a988:	bl	11ddc <main@@Base+0xd9a4>
    a98c:	cmp	r0, #0
    a990:	beq	a91c <main@@Base+0x64e4>
    a994:	ldr	r0, [r4, #4]
    a998:	ldr	r1, [sp, #60]	; 0x3c
    a99c:	bl	a6e8 <main@@Base+0x62b0>
    a9a0:	cmp	r0, #0
    a9a4:	str	r0, [sp, #24]
    a9a8:	beq	a91c <main@@Base+0x64e4>
    a9ac:	ldr	r0, [r4, #8]
    a9b0:	ldr	r1, [sp, #60]	; 0x3c
    a9b4:	bl	a6e8 <main@@Base+0x62b0>
    a9b8:	cmp	r0, #0
    a9bc:	str	r0, [sp, #28]
    a9c0:	beq	aa14 <main@@Base+0x65dc>
    a9c4:	ldr	r0, [sp, #24]
    a9c8:	bl	3f24 <g_bytes_get_size@plt>
    a9cc:	mov	r4, r0
    a9d0:	ldr	r0, [sp, #28]
    a9d4:	bl	3f24 <g_bytes_get_size@plt>
    a9d8:	cmp	r4, r0
    a9dc:	beq	aa28 <main@@Base+0x65f0>
    a9e0:	bl	40a4 <fwupd_error_quark@plt>
    a9e4:	ldr	r3, [pc, #820]	; ad20 <main@@Base+0x68e8>
    a9e8:	mov	r1, r0
    a9ec:	mov	r2, #0
    a9f0:	ldr	r0, [sp, #60]	; 0x3c
    a9f4:	add	r3, pc, r3
    a9f8:	bl	3ae0 <g_set_error_literal@plt>
    a9fc:	mov	r4, #0
    aa00:	ldr	r0, [sp, #28]
    aa04:	bl	414c <g_bytes_unref@plt>
    aa08:	ldr	r0, [sp, #24]
    aa0c:	bl	414c <g_bytes_unref@plt>
    aa10:	b	a920 <main@@Base+0x64e8>
    aa14:	ldr	r1, [sp, #24]
    aa18:	cmp	r1, #0
    aa1c:	ldrne	r4, [sp, #28]
    aa20:	bne	aa08 <main@@Base+0x65d0>
    aa24:	b	a91c <main@@Base+0x64e4>
    aa28:	ldr	r0, [sp, #48]	; 0x30
    aa2c:	bl	114c8 <main@@Base+0xd090>
    aa30:	ldr	r3, [r0, #4]
    aa34:	str	r0, [sp, #68]	; 0x44
    aa38:	cmp	r3, #0
    aa3c:	beq	ac00 <main@@Base+0x67c8>
    aa40:	ldr	r2, [pc, #732]	; ad24 <main@@Base+0x68ec>
    aa44:	mov	r1, #0
    aa48:	ldr	r3, [pc, #728]	; ad28 <main@@Base+0x68f0>
    aa4c:	add	r2, pc, r2
    aa50:	str	r1, [sp, #56]	; 0x38
    aa54:	str	r2, [sp, #36]	; 0x24
    aa58:	add	r3, pc, r3
    aa5c:	str	r1, [sp, #20]
    aa60:	add	r3, r3, #68	; 0x44
    aa64:	ldr	r1, [pc, #704]	; ad2c <main@@Base+0x68f4>
    aa68:	ldr	r2, [pc, #704]	; ad30 <main@@Base+0x68f8>
    aa6c:	add	r1, pc, r1
    aa70:	str	r3, [sp, #40]	; 0x28
    aa74:	add	r2, pc, r2
    aa78:	str	r1, [sp, #44]	; 0x2c
    aa7c:	str	r2, [sp, #16]
    aa80:	ldr	r1, [sp, #68]	; 0x44
    aa84:	ldr	r2, [sp, #56]	; 0x38
    aa88:	ldr	r3, [r1]
    aa8c:	ldr	r0, [r3, r2, lsl #2]
    aa90:	bl	15ae8 <main@@Base+0x116b0>
    aa94:	ldr	r3, [r0, #4]
    aa98:	str	r0, [sp, #12]
    aa9c:	cmp	r3, #0
    aaa0:	beq	abc0 <main@@Base+0x6788>
    aaa4:	add	r3, sp, #72	; 0x48
    aaa8:	mov	r1, #0
    aaac:	str	r3, [sp, #32]
    aab0:	str	r1, [sp, #4]
    aab4:	b	aaf0 <main@@Base+0x66b8>
    aab8:	add	r0, sp, #36	; 0x24
    aabc:	ldm	r0, {r0, r1, r2}
    aac0:	bl	3870 <g_return_if_fail_warning@plt>
    aac4:	mov	sl, #0
    aac8:	ldr	r2, [sp, #20]
    aacc:	add	r2, r2, sl
    aad0:	str	r2, [sp, #20]
    aad4:	ldr	r1, [sp, #12]
    aad8:	ldr	r2, [sp, #4]
    aadc:	ldr	r3, [r1, #4]
    aae0:	add	r2, r2, #1
    aae4:	str	r2, [sp, #4]
    aae8:	cmp	r3, r2
    aaec:	bls	abc0 <main@@Base+0x6788>
    aaf0:	ldr	r2, [sp, #12]
    aaf4:	ldr	r1, [sp, #4]
    aaf8:	ldr	r3, [r2]
    aafc:	ldr	r0, [r3, r1, lsl #2]
    ab00:	bl	109d0 <main@@Base+0xc598>
    ab04:	cmp	r0, #0
    ab08:	beq	aad4 <main@@Base+0x669c>
    ab0c:	add	r1, sp, #72	; 0x48
    ab10:	bl	4320 <g_bytes_get_data@plt>
    ab14:	mov	r7, r0
    ab18:	add	r1, sp, #80	; 0x50
    ab1c:	ldr	r0, [sp, #24]
    ab20:	bl	4320 <g_bytes_get_data@plt>
    ab24:	mov	r8, r0
    ab28:	add	r1, sp, #76	; 0x4c
    ab2c:	ldr	r0, [sp, #28]
    ab30:	bl	4320 <g_bytes_get_data@plt>
    ab34:	ldr	fp, [sp, #80]	; 0x50
    ab38:	ldr	r9, [sp, #76]	; 0x4c
    ab3c:	str	r0, [sp, #8]
    ab40:	cmp	fp, r9
    ab44:	bne	aab8 <main@@Base+0x6680>
    ab48:	ldr	r6, [sp, #72]	; 0x48
    ab4c:	cmp	fp, r6
    ab50:	movne	sl, #0
    ab54:	movne	r4, sl
    ab58:	bne	ab70 <main@@Base+0x6738>
    ab5c:	b	aac4 <main@@Base+0x668c>
    ab60:	add	r4, r4, #1
    ab64:	rsb	r2, fp, r6
    ab68:	cmp	r4, r2
    ab6c:	bcs	aac8 <main@@Base+0x6690>
    ab70:	add	r5, r7, r4
    ab74:	mov	r1, r8
    ab78:	mov	r2, fp
    ab7c:	mov	r0, r5
    ab80:	bl	42fc <memcmp@plt>
    ab84:	cmp	r0, #0
    ab88:	bne	ab60 <main@@Base+0x6728>
    ab8c:	mov	r1, r9
    ab90:	ldr	r0, [sp, #16]
    ab94:	mov	r2, r4
    ab98:	bl	3fe4 <g_print@plt>
    ab9c:	add	r6, sp, #72	; 0x48
    aba0:	mov	r0, r5
    aba4:	ldr	r1, [sp, #8]
    aba8:	add	sl, sl, #1
    abac:	ldr	r2, [sp, #76]	; 0x4c
    abb0:	bl	40e0 <memcpy@plt>
    abb4:	ldm	r6, {r6, r9, fp}
    abb8:	add	r4, r4, r9
    abbc:	b	ab60 <main@@Base+0x6728>
    abc0:	ldr	r1, [sp, #68]	; 0x44
    abc4:	ldr	r2, [sp, #56]	; 0x38
    abc8:	ldr	r3, [r1, #4]
    abcc:	add	r2, r2, #1
    abd0:	str	r2, [sp, #56]	; 0x38
    abd4:	cmp	r3, r2
    abd8:	bhi	aa80 <main@@Base+0x6648>
    abdc:	ldr	r3, [sp, #20]
    abe0:	cmp	r3, #0
    abe4:	beq	ac00 <main@@Base+0x67c8>
    abe8:	ldr	r2, [sp, #60]	; 0x3c
    abec:	ldr	r0, [sp, #48]	; 0x30
    abf0:	ldr	r1, [sp, #52]	; 0x34
    abf4:	bl	12420 <main@@Base+0xdfe8>
    abf8:	mov	r4, r0
    abfc:	b	aa00 <main@@Base+0x65c8>
    ac00:	bl	40a4 <fwupd_error_quark@plt>
    ac04:	ldr	r3, [pc, #296]	; ad34 <main@@Base+0x68fc>
    ac08:	mov	r1, r0
    ac0c:	mov	r2, #0
    ac10:	ldr	r0, [sp, #60]	; 0x3c
    ac14:	add	r3, pc, r3
    ac18:	bl	3ae0 <g_set_error_literal@plt>
    ac1c:	b	a9fc <main@@Base+0x65c4>
    ac20:	mov	r4, r0
    ac24:	ldr	r0, [sp, #28]
    ac28:	bl	414c <g_bytes_unref@plt>
    ac2c:	ldr	r3, [sp, #24]
    ac30:	cmp	r3, #0
    ac34:	beq	ac40 <main@@Base+0x6808>
    ac38:	ldr	r0, [sp, #24]
    ac3c:	bl	414c <g_bytes_unref@plt>
    ac40:	ldr	r1, [sp, #52]	; 0x34
    ac44:	cmp	r1, #0
    ac48:	beq	ac54 <main@@Base+0x681c>
    ac4c:	mov	r0, r1
    ac50:	bl	4110 <g_object_unref@plt>
    ac54:	ldr	r2, [sp, #48]	; 0x30
    ac58:	cmp	r2, #0
    ac5c:	beq	ac68 <main@@Base+0x6830>
    ac60:	mov	r0, r2
    ac64:	bl	4110 <g_object_unref@plt>
    ac68:	mov	r0, r4
    ac6c:	bl	42f0 <_Unwind_Resume@plt>
    ac70:	mov	r4, r0
    ac74:	b	ac2c <main@@Base+0x67f4>
    ac78:	mov	r2, #0
    ac7c:	mov	r4, r0
    ac80:	str	r2, [sp, #24]
    ac84:	b	ac2c <main@@Base+0x67f4>
    ac88:	mov	r3, #0
    ac8c:	mov	r4, r0
    ac90:	str	r3, [sp, #24]
    ac94:	b	ac2c <main@@Base+0x67f4>
    ac98:	mov	r2, #0
    ac9c:	mov	r4, r0
    aca0:	str	r2, [sp, #48]	; 0x30
    aca4:	str	r2, [sp, #24]
    aca8:	b	ac2c <main@@Base+0x67f4>
    acac:	mov	r1, #0
    acb0:	mov	r4, r0
    acb4:	str	r1, [sp, #48]	; 0x30
    acb8:	str	r1, [sp, #52]	; 0x34
    acbc:	str	r1, [sp, #24]
    acc0:	b	ac2c <main@@Base+0x67f4>
    acc4:	bl	3e4c <__stack_chk_fail@plt>
    acc8:	mov	r4, r0
    accc:	b	ac54 <main@@Base+0x681c>
    acd0:	mov	r3, #0
    acd4:	mov	r4, r0
    acd8:	str	r3, [sp, #48]	; 0x30
    acdc:	str	r3, [sp, #52]	; 0x34
    ace0:	str	r3, [sp, #24]
    ace4:	b	ac2c <main@@Base+0x67f4>
    ace8:	mov	r2, #0
    acec:	mov	r4, r0
    acf0:	str	r2, [sp, #48]	; 0x30
    acf4:	str	r2, [sp, #52]	; 0x34
    acf8:	str	r2, [sp, #24]
    acfc:	b	ac2c <main@@Base+0x67f4>
    ad00:	b	acac <main@@Base+0x6874>
    ad04:	mov	r4, r0
    ad08:	b	ac40 <main@@Base+0x6808>
    ad0c:	mov	r4, r0
    ad10:	b	ac38 <main@@Base+0x6800>
    ad14:			; <UNDEFINED> instruction: 0x000342b4
    ad18:	andeq	r0, r0, r0, lsr r4
    ad1c:	andeq	fp, r1, ip, asr #5
    ad20:	andeq	fp, r1, r8, lsr r2
    ad24:	andeq	sl, r1, r0, asr #8
    ad28:	ldrdeq	sl, [r1], -r8
    ad2c:	andeq	fp, r1, r0, lsr #4
    ad30:	andeq	fp, r1, r0, ror #3
    ad34:	andeq	fp, r1, ip, asr r0
    ad38:	ldr	r3, [pc, #496]	; af30 <main@@Base+0x6af8>
    ad3c:	ldr	r2, [pc, #496]	; af34 <main@@Base+0x6afc>
    ad40:	add	r3, pc, r3
    ad44:	push	{r4, r5, r6, r7, r8, r9, lr}
    ad48:	sub	sp, sp, #20
    ad4c:	ldr	r5, [r3, r2]
    ad50:	mov	r4, r0
    ad54:	ldr	r3, [r5]
    ad58:	str	r3, [sp, #12]
    ad5c:	bl	23a78 <main@@Base+0x1f640>
    ad60:	mov	r1, r0
    ad64:	mov	r0, r4
    ad68:	bl	39d8 <g_type_check_instance_cast@plt>
    ad6c:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    ad70:	cmp	r0, #0
    ad74:	beq	aea4 <main@@Base+0x6a6c>
    ad78:	bl	23a78 <main@@Base+0x1f640>
    ad7c:	mov	r1, r0
    ad80:	mov	r0, r4
    ad84:	bl	39d8 <g_type_check_instance_cast@plt>
    ad88:	bl	23c80 <main@@Base+0x1f848>
    ad8c:	subs	r3, r0, #0
    ad90:	beq	ae18 <main@@Base+0x69e0>
    ad94:	mov	r6, #0
    ad98:	mov	r0, r4
    ad9c:	bl	e00c <main@@Base+0x9bd4>
    ada0:	mov	r9, r0
    ada4:	mov	r0, r4
    ada8:	bl	e0a4 <main@@Base+0x9c6c>
    adac:	mov	r8, r0
    adb0:	mov	r0, r4
    adb4:	bl	d62c <main@@Base+0x91f4>
    adb8:	bl	b8b8 <main@@Base+0x7480>
    adbc:	mov	r7, r0
    adc0:	mov	r0, r4
    adc4:	bl	d6bc <main@@Base+0x9284>
    adc8:	bl	b9c8 <main@@Base+0x7590>
    adcc:	str	r0, [sp]
    add0:	mov	r1, r9
    add4:	ldr	r0, [pc, #348]	; af38 <main@@Base+0x6b00>
    add8:	mov	r2, r8
    addc:	mov	r3, r7
    ade0:	add	r0, pc, r0
    ade4:	bl	3c18 <g_strdup_printf@plt>
    ade8:	mov	r4, r0
    adec:	cmp	r6, #0
    adf0:	beq	adfc <main@@Base+0x69c4>
    adf4:	mov	r0, r6
    adf8:	bl	4110 <g_object_unref@plt>
    adfc:	ldr	r2, [sp, #12]
    ae00:	mov	r0, r4
    ae04:	ldr	r3, [r5]
    ae08:	cmp	r2, r3
    ae0c:	bne	aedc <main@@Base+0x6aa4>
    ae10:	add	sp, sp, #20
    ae14:	pop	{r4, r5, r6, r7, r8, r9, pc}
    ae18:	add	r7, sp, #16
    ae1c:	mov	r0, r4
    ae20:	str	r3, [r7, #-8]!
    ae24:	mov	r1, r7
    ae28:	bl	21dac <main@@Base+0x1d974>
    ae2c:	subs	r6, r0, #0
    ae30:	beq	ae5c <main@@Base+0x6a24>
    ae34:	mov	r1, r7
    ae38:	mov	r0, r4
    ae3c:	bl	e448 <main@@Base+0xa010>
    ae40:	cmp	r0, #0
    ae44:	beq	ae8c <main@@Base+0x6a54>
    ae48:	ldr	r0, [sp, #8]
    ae4c:	cmp	r0, #0
    ae50:	beq	ad98 <main@@Base+0x6960>
    ae54:	bl	38e8 <g_error_free@plt>
    ae58:	b	ad98 <main@@Base+0x6960>
    ae5c:	mov	r0, r4
    ae60:	bl	e00c <main@@Base+0x9bd4>
    ae64:	mov	r7, r0
    ae68:	mov	r0, r4
    ae6c:	bl	e0a4 <main@@Base+0x9c6c>
    ae70:	ldr	r3, [sp, #8]
    ae74:	mov	r2, r0
    ae78:	ldr	r0, [pc, #188]	; af3c <main@@Base+0x6b04>
    ae7c:	mov	r1, r7
    ae80:	add	r0, pc, r0
    ae84:	ldr	r3, [r3, #8]
    ae88:	bl	3c18 <g_strdup_printf@plt>
    ae8c:	mov	r4, r0
    ae90:	ldr	r0, [sp, #8]
    ae94:	cmp	r0, #0
    ae98:	beq	adec <main@@Base+0x69b4>
    ae9c:	bl	38e8 <g_error_free@plt>
    aea0:	b	adec <main@@Base+0x69b4>
    aea4:	mov	r0, r4
    aea8:	bl	de5c <main@@Base+0x9a24>
    aeac:	mov	r6, r0
    aeb0:	mov	r0, r4
    aeb4:	bl	deec <main@@Base+0x9ab4>
    aeb8:	mov	r2, r0
    aebc:	ldr	r3, [pc, #124]	; af40 <main@@Base+0x6b08>
    aec0:	ldr	r0, [pc, #124]	; af44 <main@@Base+0x6b0c>
    aec4:	mov	r1, r6
    aec8:	add	r3, pc, r3
    aecc:	add	r0, pc, r0
    aed0:	bl	3c18 <g_strdup_printf@plt>
    aed4:	mov	r4, r0
    aed8:	b	adfc <main@@Base+0x69c4>
    aedc:	bl	3e4c <__stack_chk_fail@plt>
    aee0:	mov	r4, r0
    aee4:	mov	r0, r6
    aee8:	bl	4110 <g_object_unref@plt>
    aeec:	mov	r0, r4
    aef0:	bl	42f0 <_Unwind_Resume@plt>
    aef4:	mov	r4, r0
    aef8:	b	aeec <main@@Base+0x6ab4>
    aefc:	mov	r4, r0
    af00:	cmp	r6, #0
    af04:	bne	aee4 <main@@Base+0x6aac>
    af08:	b	aeec <main@@Base+0x6ab4>
    af0c:	mov	r4, r0
    af10:	mov	r6, #0
    af14:	ldr	r0, [sp, #8]
    af18:	cmp	r0, #0
    af1c:	beq	af00 <main@@Base+0x6ac8>
    af20:	bl	38e8 <g_error_free@plt>
    af24:	b	af00 <main@@Base+0x6ac8>
    af28:	mov	r4, r0
    af2c:	b	af14 <main@@Base+0x6adc>
    af30:	andeq	r3, r3, r0, asr #28
    af34:	andeq	r0, r0, r0, lsr r4
    af38:	ldrdeq	sl, [r1], -ip
    af3c:	andeq	sl, r1, r4, lsr #28
    af40:	andeq	sl, r1, ip, ror #27
    af44:	ldrdeq	sl, [r1], -r8
    af48:	push	{r3, r4, r5, lr}
    af4c:	mov	r0, r1
    af50:	bl	ad38 <main@@Base+0x6900>
    af54:	ldr	r1, [pc, #60]	; af98 <main@@Base+0x6b60>
    af58:	mov	r2, #5
    af5c:	add	r1, pc, r1
    af60:	mov	r4, r0
    af64:	mov	r0, #0
    af68:	bl	3ed0 <dcgettext@plt>
    af6c:	mov	r1, r4
    af70:	mov	r2, #0
    af74:	bl	570c <main@@Base+0x12d4>
    af78:	mov	r0, r4
    af7c:	pop	{r3, r4, r5, lr}
    af80:	b	3eac <g_free@plt>
    af84:	mov	r5, r0
    af88:	mov	r0, r4
    af8c:	bl	3eac <g_free@plt>
    af90:	mov	r0, r5
    af94:	bl	42f0 <_Unwind_Resume@plt>
    af98:	andeq	sl, r1, r4, ror sp
    af9c:	push	{r3, r4, r5, lr}
    afa0:	mov	r0, r1
    afa4:	bl	ad38 <main@@Base+0x6900>
    afa8:	ldr	r1, [pc, #60]	; afec <main@@Base+0x6bb4>
    afac:	mov	r2, #5
    afb0:	add	r1, pc, r1
    afb4:	mov	r4, r0
    afb8:	mov	r0, #0
    afbc:	bl	3ed0 <dcgettext@plt>
    afc0:	mov	r1, r4
    afc4:	mov	r2, #0
    afc8:	bl	570c <main@@Base+0x12d4>
    afcc:	mov	r0, r4
    afd0:	pop	{r3, r4, r5, lr}
    afd4:	b	3eac <g_free@plt>
    afd8:	mov	r5, r0
    afdc:	mov	r0, r4
    afe0:	bl	3eac <g_free@plt>
    afe4:	mov	r0, r5
    afe8:	bl	42f0 <_Unwind_Resume@plt>
    afec:	andeq	sl, r1, r8, lsr #26
    aff0:	push	{r3, r4, r5, lr}
    aff4:	mov	r0, r1
    aff8:	bl	ad38 <main@@Base+0x6900>
    affc:	ldr	r1, [pc, #60]	; b040 <main@@Base+0x6c08>
    b000:	mov	r2, #5
    b004:	add	r1, pc, r1
    b008:	mov	r4, r0
    b00c:	mov	r0, #0
    b010:	bl	3ed0 <dcgettext@plt>
    b014:	mov	r1, r4
    b018:	mov	r2, #0
    b01c:	bl	570c <main@@Base+0x12d4>
    b020:	mov	r0, r4
    b024:	pop	{r3, r4, r5, lr}
    b028:	b	3eac <g_free@plt>
    b02c:	mov	r5, r0
    b030:	mov	r0, r4
    b034:	bl	3eac <g_free@plt>
    b038:	mov	r0, r5
    b03c:	bl	42f0 <_Unwind_Resume@plt>
    b040:	ldrdeq	sl, [r1], -ip
    b044:	push	{r4, r5, r6, r7, lr}
    b048:	mov	r7, r0
    b04c:	sub	sp, sp, #12
    b050:	mov	r0, r2
    b054:	bl	3cd8 <g_usb_context_new@plt>
    b058:	subs	r6, r0, #0
    b05c:	beq	b188 <main@@Base+0x6d50>
    b060:	bl	3ccc <g_usb_context_enumerate@plt>
    b064:	mov	r0, r6
    b068:	bl	43ec <g_usb_context_get_devices@plt>
    b06c:	ldr	r3, [r0, #4]
    b070:	mov	r5, r0
    b074:	cmp	r3, #0
    b078:	movne	r4, #0
    b07c:	beq	b0a4 <main@@Base+0x6c6c>
    b080:	ldr	r1, [r5]
    b084:	mov	r0, r6
    b088:	mov	r2, r7
    b08c:	ldr	r1, [r1, r4, lsl #2]
    b090:	bl	aff0 <main@@Base+0x6bb8>
    b094:	ldr	r1, [r5, #4]
    b098:	add	r4, r4, #1
    b09c:	cmp	r1, r4
    b0a0:	bhi	b080 <main@@Base+0x6c48>
    b0a4:	mov	r0, #0
    b0a8:	mov	r1, r0
    b0ac:	bl	3c84 <g_main_loop_new@plt>
    b0b0:	mov	r2, #0
    b0b4:	ldr	r1, [pc, #344]	; b214 <main@@Base+0x6ddc>
    b0b8:	str	r2, [sp]
    b0bc:	mov	r4, r0
    b0c0:	str	r2, [sp, #4]
    b0c4:	mov	r0, r6
    b0c8:	ldr	r2, [pc, #328]	; b218 <main@@Base+0x6de0>
    b0cc:	add	r1, pc, r1
    b0d0:	mov	r3, r7
    b0d4:	add	r2, pc, r2
    b0d8:	bl	3d38 <g_signal_connect_data@plt>
    b0dc:	mov	r2, #0
    b0e0:	ldr	r1, [pc, #308]	; b21c <main@@Base+0x6de4>
    b0e4:	str	r2, [sp]
    b0e8:	mov	r0, r6
    b0ec:	str	r2, [sp, #4]
    b0f0:	mov	r3, r7
    b0f4:	ldr	r2, [pc, #292]	; b220 <main@@Base+0x6de8>
    b0f8:	add	r1, pc, r1
    b0fc:	add	r2, pc, r2
    b100:	bl	3d38 <g_signal_connect_data@plt>
    b104:	mov	r2, #0
    b108:	ldr	r1, [pc, #276]	; b224 <main@@Base+0x6dec>
    b10c:	str	r2, [sp]
    b110:	mov	r0, r6
    b114:	str	r2, [sp, #4]
    b118:	mov	r3, r7
    b11c:	ldr	r2, [pc, #260]	; b228 <main@@Base+0x6df0>
    b120:	add	r1, pc, r1
    b124:	add	r2, pc, r2
    b128:	bl	3d38 <g_signal_connect_data@plt>
    b12c:	mov	r2, #0
    b130:	ldr	r0, [r7]
    b134:	ldr	r1, [pc, #240]	; b22c <main@@Base+0x6df4>
    b138:	mov	r3, r4
    b13c:	str	r2, [sp]
    b140:	str	r2, [sp, #4]
    b144:	add	r1, pc, r1
    b148:	ldr	r2, [pc, #224]	; b230 <main@@Base+0x6df8>
    b14c:	add	r2, pc, r2
    b150:	bl	3d38 <g_signal_connect_data@plt>
    b154:	mov	r0, r4
    b158:	bl	3c48 <g_main_loop_run@plt>
    b15c:	mov	r0, r5
    b160:	bl	4224 <g_ptr_array_unref@plt>
    b164:	cmp	r4, #0
    b168:	beq	b174 <main@@Base+0x6d3c>
    b16c:	mov	r0, r4
    b170:	bl	43b0 <g_main_loop_unref@plt>
    b174:	mov	r0, r6
    b178:	bl	4110 <g_object_unref@plt>
    b17c:	mov	r0, #1
    b180:	add	sp, sp, #12
    b184:	pop	{r4, r5, r6, r7, pc}
    b188:	mov	r0, r6
    b18c:	add	sp, sp, #12
    b190:	pop	{r4, r5, r6, r7, pc}
    b194:	mov	r6, #0
    b198:	mov	r7, r0
    b19c:	mov	r4, r6
    b1a0:	cmp	r4, #0
    b1a4:	beq	b1b0 <main@@Base+0x6d78>
    b1a8:	mov	r0, r4
    b1ac:	bl	43b0 <g_main_loop_unref@plt>
    b1b0:	mov	r4, r7
    b1b4:	cmp	r6, #0
    b1b8:	beq	b1c4 <main@@Base+0x6d8c>
    b1bc:	mov	r0, r6
    b1c0:	bl	4110 <g_object_unref@plt>
    b1c4:	mov	r0, r4
    b1c8:	bl	42f0 <_Unwind_Resume@plt>
    b1cc:	mov	r7, r0
    b1d0:	mov	r4, #0
    b1d4:	mov	r0, r5
    b1d8:	bl	4224 <g_ptr_array_unref@plt>
    b1dc:	b	b1a0 <main@@Base+0x6d68>
    b1e0:	b	b1cc <main@@Base+0x6d94>
    b1e4:	mov	r7, r0
    b1e8:	mov	r4, #0
    b1ec:	b	b1a0 <main@@Base+0x6d68>
    b1f0:	b	b1e4 <main@@Base+0x6dac>
    b1f4:	mov	r7, r0
    b1f8:	b	b1a0 <main@@Base+0x6d68>
    b1fc:	mov	r7, r0
    b200:	b	b1d4 <main@@Base+0x6d9c>
    b204:	mov	r4, r0
    b208:	b	b1bc <main@@Base+0x6d84>
    b20c:	mov	r4, r0
    b210:	b	b1b4 <main@@Base+0x6d7c>
    b214:	andeq	sl, r1, ip, lsl ip
    b218:			; <UNDEFINED> instruction: 0xffffff14
    b21c:	andeq	sl, r1, r0, lsl #24
    b220:			; <UNDEFINED> instruction: 0xfffffe98
    b224:	andeq	sl, r1, r8, ror #23
    b228:			; <UNDEFINED> instruction: 0xfffffe1c
    b22c:	ldrdeq	sl, [r1], -r4
    b230:			; <UNDEFINED> instruction: 0xffffa7a0
    b234:	push	{r3, r4, r5, r6, r7, lr}
    b238:	lsrs	r7, r1, #2
    b23c:	popeq	{r3, r4, r5, r6, r7, pc}
    b240:	sub	r6, r2, #4
    b244:	mov	r5, r0
    b248:	mov	r4, #0
    b24c:	mov	r0, r5
    b250:	movw	r1, #1234	; 0x4d2
    b254:	bl	1e4cc <main@@Base+0x1a094>
    b258:	add	r4, r4, #1
    b25c:	cmp	r4, r7
    b260:	add	r5, r5, #4
    b264:	str	r0, [r6, #4]!
    b268:	bne	b24c <main@@Base+0x6e14>
    b26c:	pop	{r3, r4, r5, r6, r7, pc}
    b270:	push	{r3, r4, r5, r6, r7, lr}
    b274:	lsrs	r7, r1, #2
    b278:	popeq	{r3, r4, r5, r6, r7, pc}
    b27c:	sub	r6, r2, #4
    b280:	mov	r5, r0
    b284:	mov	r4, #0
    b288:	mov	r0, r5
    b28c:	add	r4, r4, #1
    b290:	ldr	r1, [r6, #4]!
    b294:	movw	r2, #1234	; 0x4d2
    b298:	bl	1e368 <main@@Base+0x19f30>
    b29c:	cmp	r4, r7
    b2a0:	add	r5, r5, #4
    b2a4:	bne	b288 <main@@Base+0x6e50>
    b2a8:	pop	{r3, r4, r5, r6, r7, pc}
    b2ac:	ldr	r3, [pc, #512]	; b4b4 <main@@Base+0x707c>
    b2b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b2b4:	mov	r5, r1
    b2b8:	ldr	r1, [pc, #504]	; b4b8 <main@@Base+0x7080>
    b2bc:	add	r3, pc, r3
    b2c0:	sub	sp, sp, #52	; 0x34
    b2c4:	mov	r9, r2
    b2c8:	mov	r7, r0
    b2cc:	ldr	r1, [r3, r1]
    b2d0:	ldr	r3, [r1]
    b2d4:	str	r1, [sp, #20]
    b2d8:	str	r3, [sp, #44]	; 0x2c
    b2dc:	bl	411c <strlen@plt>
    b2e0:	cmp	r0, #32
    b2e4:	mov	r4, r0
    b2e8:	bhi	b424 <main@@Base+0x6fec>
    b2ec:	beq	b35c <main@@Base+0x6f24>
    b2f0:	mov	r0, #0
    b2f4:	mov	r3, #16
    b2f8:	str	r3, [sp, #24]
    b2fc:	bl	4008 <g_checksum_new@plt>
    b300:	mov	r1, r7
    b304:	mov	r2, r4
    b308:	mov	r6, r0
    b30c:	bl	3c30 <g_checksum_update@plt>
    b310:	add	r4, sp, #28
    b314:	mov	r0, r6
    b318:	add	r2, sp, #24
    b31c:	mov	r1, r4
    b320:	bl	4314 <g_checksum_get_digest@plt>
    b324:	ldr	r1, [sp, #24]
    b328:	cmp	r1, #16
    b32c:	beq	b44c <main@@Base+0x7014>
    b330:	ldr	r3, [pc, #388]	; b4bc <main@@Base+0x7084>
    b334:	mov	r2, #77	; 0x4d
    b338:	ldr	r0, [pc, #384]	; b4c0 <main@@Base+0x7088>
    b33c:	add	r3, pc, r3
    b340:	ldr	r1, [pc, #380]	; b4c4 <main@@Base+0x708c>
    b344:	str	r3, [sp]
    b348:	add	r0, pc, r0
    b34c:	ldr	r3, [pc, #372]	; b4c8 <main@@Base+0x7090>
    b350:	add	r1, pc, r1
    b354:	add	r3, pc, r3
    b358:	bl	42e4 <g_assertion_message_expr@plt>
    b35c:	ldr	r6, [pc, #360]	; b4cc <main@@Base+0x7094>
    b360:	add	fp, r5, #16
    b364:	add	r4, sp, #28
    b368:	add	r8, sp, #24
    b36c:	add	r6, pc, r6
    b370:	mov	sl, #0
    b374:	ldm	r6, {r0, r1, r2}
    b378:	add	lr, r7, sl
    b37c:	mov	r3, r4
    b380:	mov	ip, r4
    b384:	stmia	r3!, {r0, r1}
    b388:	ldr	r0, [lr]
    b38c:	ldr	r1, [lr, #4]
    b390:	strb	r2, [r3]
    b394:	mov	r2, #16
    b398:	stmia	ip!, {r0, r1}
    b39c:	mov	r0, r4
    b3a0:	mov	r1, r8
    b3a4:	bl	4284 <g_ascii_strtoull@plt>
    b3a8:	ldr	r3, [sp, #24]
    b3ac:	cmp	r3, #0
    b3b0:	beq	b3c0 <main@@Base+0x6f88>
    b3b4:	ldrb	r3, [r3]
    b3b8:	cmp	r3, #0
    b3bc:	bne	b46c <main@@Base+0x7034>
    b3c0:	add	sl, sl, #8
    b3c4:	str	r0, [fp, #-4]!
    b3c8:	cmp	sl, #32
    b3cc:	bne	b374 <main@@Base+0x6f3c>
    b3d0:	ldr	r2, [r5, #8]
    b3d4:	mov	r1, #128	; 0x80
    b3d8:	ldr	r0, [r5]
    b3dc:	ldr	r3, [r5, #12]
    b3e0:	str	r2, [sp]
    b3e4:	ldr	r2, [r5, #4]
    b3e8:	str	r0, [sp, #8]
    b3ec:	ldr	r0, [pc, #220]	; b4d0 <main@@Base+0x7098>
    b3f0:	str	r2, [sp, #4]
    b3f4:	ldr	r2, [pc, #216]	; b4d4 <main@@Base+0x709c>
    b3f8:	add	r0, pc, r0
    b3fc:	add	r2, pc, r2
    b400:	bl	3a38 <g_log@plt>
    b404:	mov	r0, #1
    b408:	ldr	r1, [sp, #20]
    b40c:	ldr	r2, [sp, #44]	; 0x2c
    b410:	ldr	r3, [r1]
    b414:	cmp	r2, r3
    b418:	bne	b4b0 <main@@Base+0x7078>
    b41c:	add	sp, sp, #52	; 0x34
    b420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b424:	bl	40a4 <fwupd_error_quark@plt>
    b428:	ldr	r3, [pc, #168]	; b4d8 <main@@Base+0x70a0>
    b42c:	str	r4, [sp]
    b430:	mov	r2, #10
    b434:	add	r3, pc, r3
    b438:	mov	r1, r0
    b43c:	mov	r0, r9
    b440:	bl	4350 <g_set_error@plt>
    b444:	mov	r0, #0
    b448:	b	b408 <main@@Base+0x6fd0>
    b44c:	mov	r0, r4
    b450:	mov	r2, r5
    b454:	bl	b234 <main@@Base+0x6dfc>
    b458:	cmp	r6, #0
    b45c:	beq	b3d0 <main@@Base+0x6f98>
    b460:	mov	r0, r6
    b464:	bl	3b28 <g_checksum_free@plt>
    b468:	b	b3d0 <main@@Base+0x6f98>
    b46c:	bl	40a4 <fwupd_error_quark@plt>
    b470:	ldr	r3, [pc, #100]	; b4dc <main@@Base+0x70a4>
    b474:	str	r7, [sp]
    b478:	mov	r2, #10
    b47c:	add	r3, pc, r3
    b480:	mov	r1, r0
    b484:	mov	r0, r9
    b488:	bl	4350 <g_set_error@plt>
    b48c:	mov	r0, #0
    b490:	b	b408 <main@@Base+0x6fd0>
    b494:	cmp	r6, #0
    b498:	mov	r4, r0
    b49c:	beq	b4a8 <main@@Base+0x7070>
    b4a0:	mov	r0, r6
    b4a4:	bl	3b28 <g_checksum_free@plt>
    b4a8:	mov	r0, r4
    b4ac:	bl	42f0 <_Unwind_Resume@plt>
    b4b0:	bl	3e4c <__stack_chk_fail@plt>
    b4b4:	andeq	r3, r3, r4, asr #17
    b4b8:	andeq	r0, r0, r0, lsr r4
    b4bc:	andeq	fp, r1, r0, ror #3
    b4c0:	andeq	r9, r1, r4, asr #22
    b4c4:	andeq	fp, r1, r8, lsr #3
    b4c8:	andeq	fp, r1, r8, lsr #2
    b4cc:	andeq	fp, r1, r0, asr #3
    b4d0:	muleq	r1, r4, sl
    b4d4:	ldrdeq	fp, [r1], -ip
    b4d8:	andeq	fp, r1, r0, rrx
    b4dc:	andeq	fp, r1, r0, asr #32
    b4e0:	ldr	ip, [pc, #464]	; b6b8 <main@@Base+0x7280>
    b4e4:	cmp	r2, #7
    b4e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4ec:	add	ip, pc, ip
    b4f0:	ldr	lr, [pc, #452]	; b6bc <main@@Base+0x7284>
    b4f4:	mov	r8, r1
    b4f8:	mov	r1, ip
    b4fc:	sub	sp, sp, #36	; 0x24
    b500:	mov	r5, r2
    b504:	mov	r4, r3
    b508:	ldr	r6, [ip, lr]
    b50c:	ldr	r1, [r6]
    b510:	str	r1, [sp, #28]
    b514:	bls	b65c <main@@Base+0x7224>
    b518:	tst	r2, #3
    b51c:	bne	b610 <main@@Base+0x71d8>
    b520:	mov	r2, r3
    b524:	add	r1, sp, #12
    b528:	bl	b2ac <main@@Base+0x6e74>
    b52c:	cmp	r0, #0
    b530:	beq	b630 <main@@Base+0x71f8>
    b534:	lsr	r7, r5, #2
    b538:	mov	r1, #4
    b53c:	mov	r0, r7
    b540:	bl	41ac <g_malloc0_n@plt>
    b544:	mov	r4, r0
    b548:	mov	r1, r5
    b54c:	mov	r0, r8
    b550:	mov	r2, r4
    b554:	bl	b234 <main@@Base+0x6dfc>
    b558:	add	r9, r4, #4
    b55c:	mov	r0, r4
    b560:	mov	sl, #0
    b564:	ldr	lr, [r9, #-4]
    b568:	movw	r3, #14112	; 0x3720
    b56c:	ldr	ip, [r0, #4]
    b570:	movt	r3, #50927	; 0xc6ef
    b574:	ubfx	fp, r3, #11, #2
    b578:	add	r2, sp, #32
    b57c:	lsl	r1, lr, #4
    b580:	add	fp, r2, fp, lsl #2
    b584:	eor	r1, r1, lr, lsr #5
    b588:	add	r1, r1, lr
    b58c:	ldr	r2, [fp, #-20]	; 0xffffffec
    b590:	add	r2, r3, r2
    b594:	add	r3, r3, #1627389952	; 0x61000000
    b598:	add	r3, r3, #13107200	; 0xc80000
    b59c:	eor	r2, r2, r1
    b5a0:	add	r3, r3, #34304	; 0x8600
    b5a4:	rsb	ip, r2, ip
    b5a8:	add	r3, r3, #71	; 0x47
    b5ac:	add	r2, sp, #32
    b5b0:	and	fp, r3, #3
    b5b4:	lsl	r1, ip, #4
    b5b8:	eor	r1, r1, ip, lsr #5
    b5bc:	cmp	r3, #0
    b5c0:	add	fp, r2, fp, lsl #2
    b5c4:	add	r1, r1, ip
    b5c8:	ldr	r2, [fp, #-20]	; 0xffffffec
    b5cc:	add	r2, r3, r2
    b5d0:	eor	r2, r1, r2
    b5d4:	rsb	lr, r2, lr
    b5d8:	bne	b574 <main@@Base+0x713c>
    b5dc:	add	sl, sl, #2
    b5e0:	str	lr, [r9, #-4]
    b5e4:	cmp	r7, sl
    b5e8:	str	ip, [r0, #4]
    b5ec:	add	r9, r9, #8
    b5f0:	add	r0, r0, #8
    b5f4:	bhi	b564 <main@@Base+0x712c>
    b5f8:	mov	r0, r8
    b5fc:	mov	r1, r5
    b600:	mov	r2, r4
    b604:	bl	b270 <main@@Base+0x6e38>
    b608:	mov	r5, #1
    b60c:	b	b638 <main@@Base+0x7200>
    b610:	bl	40a4 <fwupd_error_quark@plt>
    b614:	ldr	r3, [pc, #164]	; b6c0 <main@@Base+0x7288>
    b618:	mov	r1, r0
    b61c:	str	r5, [sp]
    b620:	mov	r0, r4
    b624:	mov	r2, #10
    b628:	add	r3, pc, r3
    b62c:	bl	4350 <g_set_error@plt>
    b630:	mov	r4, #0
    b634:	mov	r5, r4
    b638:	mov	r0, r4
    b63c:	bl	3eac <g_free@plt>
    b640:	ldr	r2, [sp, #28]
    b644:	ldr	r3, [r6]
    b648:	mov	r0, r5
    b64c:	cmp	r2, r3
    b650:	bne	b6ac <main@@Base+0x7274>
    b654:	add	sp, sp, #36	; 0x24
    b658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b65c:	bl	40a4 <fwupd_error_quark@plt>
    b660:	ldr	r3, [pc, #92]	; b6c4 <main@@Base+0x728c>
    b664:	mov	r1, r0
    b668:	str	r5, [sp]
    b66c:	mov	r0, r4
    b670:	mov	r2, #10
    b674:	add	r3, pc, r3
    b678:	bl	4350 <g_set_error@plt>
    b67c:	b	b630 <main@@Base+0x71f8>
    b680:	mov	r5, r0
    b684:	mov	r4, #0
    b688:	mov	r0, r4
    b68c:	bl	3eac <g_free@plt>
    b690:	mov	r0, r5
    b694:	bl	42f0 <_Unwind_Resume@plt>
    b698:	b	b680 <main@@Base+0x7248>
    b69c:	mov	r5, r0
    b6a0:	b	b688 <main@@Base+0x7250>
    b6a4:	b	b680 <main@@Base+0x7248>
    b6a8:	b	b680 <main@@Base+0x7248>
    b6ac:	bl	3e4c <__stack_chk_fail@plt>
    b6b0:	b	b680 <main@@Base+0x7248>
    b6b4:	b	b680 <main@@Base+0x7248>
    b6b8:	muleq	r3, r4, r6
    b6bc:	andeq	r0, r0, r0, lsr r4
    b6c0:	andeq	sl, r1, r0, lsr pc
    b6c4:	andeq	sl, r1, r4, asr #29
    b6c8:	ldr	ip, [pc, #472]	; b8a8 <main@@Base+0x7470>
    b6cc:	cmp	r2, #7
    b6d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b6d4:	add	ip, pc, ip
    b6d8:	ldr	lr, [pc, #460]	; b8ac <main@@Base+0x7474>
    b6dc:	mov	r8, r1
    b6e0:	mov	r1, ip
    b6e4:	sub	sp, sp, #44	; 0x2c
    b6e8:	mov	r5, r2
    b6ec:	mov	r4, r3
    b6f0:	ldr	lr, [ip, lr]
    b6f4:	ldr	r1, [lr]
    b6f8:	str	lr, [sp, #12]
    b6fc:	str	r1, [sp, #36]	; 0x24
    b700:	bls	b84c <main@@Base+0x7414>
    b704:	tst	r2, #3
    b708:	bne	b7fc <main@@Base+0x73c4>
    b70c:	mov	r2, r3
    b710:	add	r1, sp, #20
    b714:	bl	b2ac <main@@Base+0x6e74>
    b718:	cmp	r0, #0
    b71c:	beq	b81c <main@@Base+0x73e4>
    b720:	lsr	r7, r5, #2
    b724:	mov	r1, #4
    b728:	mov	r0, r7
    b72c:	bl	41ac <g_malloc0_n@plt>
    b730:	mov	r4, r0
    b734:	mov	r1, r5
    b738:	mov	r0, r8
    b73c:	mov	r2, r4
    b740:	bl	b234 <main@@Base+0x6dfc>
    b744:	movw	r1, #14112	; 0x3720
    b748:	add	r9, r4, #4
    b74c:	movt	r1, #50927	; 0xc6ef
    b750:	mov	r0, r4
    b754:	mov	sl, #0
    b758:	ldr	lr, [r9, #-4]
    b75c:	mov	r3, #0
    b760:	ldr	ip, [r0, #4]
    b764:	and	r2, r3, #3
    b768:	add	r6, sp, #40	; 0x28
    b76c:	lsl	fp, ip, #4
    b770:	add	r2, r6, r2, lsl #2
    b774:	eor	fp, fp, ip, lsr #5
    b778:	add	fp, fp, ip
    b77c:	ldr	r2, [r2, #-20]	; 0xffffffec
    b780:	add	r2, r3, r2
    b784:	add	r3, r3, #-1644167168	; 0x9e000000
    b788:	add	r3, r3, #3620864	; 0x374000
    b78c:	eor	r2, r2, fp
    b790:	add	r3, r3, #14720	; 0x3980
    b794:	add	lr, lr, r2
    b798:	add	r3, r3, #57	; 0x39
    b79c:	ubfx	r2, r3, #11, #2
    b7a0:	lsl	fp, lr, #4
    b7a4:	eor	fp, fp, lr, lsr #5
    b7a8:	cmp	r3, r1
    b7ac:	add	r2, r6, r2, lsl #2
    b7b0:	add	fp, fp, lr
    b7b4:	ldr	r2, [r2, #-20]	; 0xffffffec
    b7b8:	add	r2, r3, r2
    b7bc:	eor	r2, fp, r2
    b7c0:	add	ip, ip, r2
    b7c4:	bne	b764 <main@@Base+0x732c>
    b7c8:	add	sl, sl, #2
    b7cc:	str	lr, [r9, #-4]
    b7d0:	cmp	r7, sl
    b7d4:	str	ip, [r0, #4]
    b7d8:	add	r9, r9, #8
    b7dc:	add	r0, r0, #8
    b7e0:	bhi	b758 <main@@Base+0x7320>
    b7e4:	mov	r0, r8
    b7e8:	mov	r1, r5
    b7ec:	mov	r2, r4
    b7f0:	bl	b270 <main@@Base+0x6e38>
    b7f4:	mov	r5, #1
    b7f8:	b	b824 <main@@Base+0x73ec>
    b7fc:	bl	40a4 <fwupd_error_quark@plt>
    b800:	ldr	r3, [pc, #168]	; b8b0 <main@@Base+0x7478>
    b804:	mov	r1, r0
    b808:	str	r5, [sp]
    b80c:	mov	r0, r4
    b810:	mov	r2, #10
    b814:	add	r3, pc, r3
    b818:	bl	4350 <g_set_error@plt>
    b81c:	mov	r4, #0
    b820:	mov	r5, r4
    b824:	mov	r0, r4
    b828:	bl	3eac <g_free@plt>
    b82c:	ldr	r6, [sp, #12]
    b830:	ldr	r2, [sp, #36]	; 0x24
    b834:	mov	r0, r5
    b838:	ldr	r3, [r6]
    b83c:	cmp	r2, r3
    b840:	bne	b89c <main@@Base+0x7464>
    b844:	add	sp, sp, #44	; 0x2c
    b848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b84c:	bl	40a4 <fwupd_error_quark@plt>
    b850:	ldr	r3, [pc, #92]	; b8b4 <main@@Base+0x747c>
    b854:	mov	r1, r0
    b858:	str	r5, [sp]
    b85c:	mov	r0, r4
    b860:	mov	r2, #10
    b864:	add	r3, pc, r3
    b868:	bl	4350 <g_set_error@plt>
    b86c:	b	b81c <main@@Base+0x73e4>
    b870:	mov	r5, r0
    b874:	mov	r4, #0
    b878:	mov	r0, r4
    b87c:	bl	3eac <g_free@plt>
    b880:	mov	r0, r5
    b884:	bl	42f0 <_Unwind_Resume@plt>
    b888:	b	b870 <main@@Base+0x7438>
    b88c:	mov	r5, r0
    b890:	b	b878 <main@@Base+0x7440>
    b894:	b	b870 <main@@Base+0x7438>
    b898:	b	b870 <main@@Base+0x7438>
    b89c:	bl	3e4c <__stack_chk_fail@plt>
    b8a0:	b	b870 <main@@Base+0x7438>
    b8a4:	b	b870 <main@@Base+0x7438>
    b8a8:	andeq	r3, r3, ip, lsr #9
    b8ac:	andeq	r0, r0, r0, lsr r4
    b8b0:	andeq	sl, r1, r4, asr #26
    b8b4:	ldrdeq	sl, [r1], -r4
    b8b8:	cmp	r0, #0
    b8bc:	beq	b91c <main@@Base+0x74e4>
    b8c0:	cmp	r0, #1
    b8c4:	beq	b928 <main@@Base+0x74f0>
    b8c8:	cmp	r0, #2
    b8cc:	beq	b934 <main@@Base+0x74fc>
    b8d0:	cmp	r0, #3
    b8d4:	beq	b940 <main@@Base+0x7508>
    b8d8:	cmp	r0, #4
    b8dc:	beq	b94c <main@@Base+0x7514>
    b8e0:	cmp	r0, #5
    b8e4:	beq	b958 <main@@Base+0x7520>
    b8e8:	cmp	r0, #6
    b8ec:	beq	b964 <main@@Base+0x752c>
    b8f0:	cmp	r0, #7
    b8f4:	beq	b970 <main@@Base+0x7538>
    b8f8:	cmp	r0, #8
    b8fc:	beq	b97c <main@@Base+0x7544>
    b900:	cmp	r0, #9
    b904:	beq	b988 <main@@Base+0x7550>
    b908:	cmp	r0, #10
    b90c:	bne	b994 <main@@Base+0x755c>
    b910:	ldr	r0, [pc, #132]	; b99c <main@@Base+0x7564>
    b914:	add	r0, pc, r0
    b918:	bx	lr
    b91c:	ldr	r0, [pc, #124]	; b9a0 <main@@Base+0x7568>
    b920:	add	r0, pc, r0
    b924:	bx	lr
    b928:	ldr	r0, [pc, #116]	; b9a4 <main@@Base+0x756c>
    b92c:	add	r0, pc, r0
    b930:	bx	lr
    b934:	ldr	r0, [pc, #108]	; b9a8 <main@@Base+0x7570>
    b938:	add	r0, pc, r0
    b93c:	bx	lr
    b940:	ldr	r0, [pc, #100]	; b9ac <main@@Base+0x7574>
    b944:	add	r0, pc, r0
    b948:	bx	lr
    b94c:	ldr	r0, [pc, #92]	; b9b0 <main@@Base+0x7578>
    b950:	add	r0, pc, r0
    b954:	bx	lr
    b958:	ldr	r0, [pc, #84]	; b9b4 <main@@Base+0x757c>
    b95c:	add	r0, pc, r0
    b960:	bx	lr
    b964:	ldr	r0, [pc, #76]	; b9b8 <main@@Base+0x7580>
    b968:	add	r0, pc, r0
    b96c:	bx	lr
    b970:	ldr	r0, [pc, #68]	; b9bc <main@@Base+0x7584>
    b974:	add	r0, pc, r0
    b978:	bx	lr
    b97c:	ldr	r0, [pc, #60]	; b9c0 <main@@Base+0x7588>
    b980:	add	r0, pc, r0
    b984:	bx	lr
    b988:	ldr	r0, [pc, #52]	; b9c4 <main@@Base+0x758c>
    b98c:	add	r0, pc, r0
    b990:	bx	lr
    b994:	mov	r0, #0
    b998:	bx	lr
    b99c:	andeq	sl, r1, r0, lsl sp
    b9a0:	andeq	sl, r1, r4, ror ip
    b9a4:	andeq	sl, r1, r0, ror ip
    b9a8:	andeq	sl, r1, r0, ror ip
    b9ac:	andeq	sl, r1, ip, ror #24
    b9b0:	andeq	sl, r1, r0, ror ip
    b9b4:	andeq	sl, r1, r0, ror ip
    b9b8:	andeq	sl, r1, r4, ror ip
    b9bc:	andeq	sl, r1, ip, ror ip
    b9c0:	andeq	sl, r1, ip, ror ip
    b9c4:	andeq	sl, r1, r8, lsl #25
    b9c8:	cmp	r0, #0
    b9cc:	beq	ba54 <main@@Base+0x761c>
    b9d0:	cmp	r0, #1
    b9d4:	beq	ba60 <main@@Base+0x7628>
    b9d8:	cmp	r0, #2
    b9dc:	beq	ba6c <main@@Base+0x7634>
    b9e0:	cmp	r0, #3
    b9e4:	beq	ba78 <main@@Base+0x7640>
    b9e8:	cmp	r0, #4
    b9ec:	beq	ba84 <main@@Base+0x764c>
    b9f0:	cmp	r0, #5
    b9f4:	beq	ba90 <main@@Base+0x7658>
    b9f8:	cmp	r0, #6
    b9fc:	beq	ba9c <main@@Base+0x7664>
    ba00:	cmp	r0, #7
    ba04:	beq	bab4 <main@@Base+0x767c>
    ba08:	cmp	r0, #8
    ba0c:	beq	bac0 <main@@Base+0x7688>
    ba10:	cmp	r0, #9
    ba14:	beq	bacc <main@@Base+0x7694>
    ba18:	cmp	r0, #10
    ba1c:	beq	bad8 <main@@Base+0x76a0>
    ba20:	cmp	r0, #11
    ba24:	beq	bae4 <main@@Base+0x76ac>
    ba28:	cmp	r0, #12
    ba2c:	beq	baa8 <main@@Base+0x7670>
    ba30:	cmp	r0, #13
    ba34:	beq	baf0 <main@@Base+0x76b8>
    ba38:	cmp	r0, #14
    ba3c:	beq	bafc <main@@Base+0x76c4>
    ba40:	cmp	r0, #15
    ba44:	bne	bb08 <main@@Base+0x76d0>
    ba48:	ldr	r0, [pc, #192]	; bb10 <main@@Base+0x76d8>
    ba4c:	add	r0, pc, r0
    ba50:	bx	lr
    ba54:	ldr	r0, [pc, #184]	; bb14 <main@@Base+0x76dc>
    ba58:	add	r0, pc, r0
    ba5c:	bx	lr
    ba60:	ldr	r0, [pc, #176]	; bb18 <main@@Base+0x76e0>
    ba64:	add	r0, pc, r0
    ba68:	bx	lr
    ba6c:	ldr	r0, [pc, #168]	; bb1c <main@@Base+0x76e4>
    ba70:	add	r0, pc, r0
    ba74:	bx	lr
    ba78:	ldr	r0, [pc, #160]	; bb20 <main@@Base+0x76e8>
    ba7c:	add	r0, pc, r0
    ba80:	bx	lr
    ba84:	ldr	r0, [pc, #152]	; bb24 <main@@Base+0x76ec>
    ba88:	add	r0, pc, r0
    ba8c:	bx	lr
    ba90:	ldr	r0, [pc, #144]	; bb28 <main@@Base+0x76f0>
    ba94:	add	r0, pc, r0
    ba98:	bx	lr
    ba9c:	ldr	r0, [pc, #136]	; bb2c <main@@Base+0x76f4>
    baa0:	add	r0, pc, r0
    baa4:	bx	lr
    baa8:	ldr	r0, [pc, #128]	; bb30 <main@@Base+0x76f8>
    baac:	add	r0, pc, r0
    bab0:	bx	lr
    bab4:	ldr	r0, [pc, #120]	; bb34 <main@@Base+0x76fc>
    bab8:	add	r0, pc, r0
    babc:	bx	lr
    bac0:	ldr	r0, [pc, #112]	; bb38 <main@@Base+0x7700>
    bac4:	add	r0, pc, r0
    bac8:	bx	lr
    bacc:	ldr	r0, [pc, #104]	; bb3c <main@@Base+0x7704>
    bad0:	add	r0, pc, r0
    bad4:	bx	lr
    bad8:	ldr	r0, [pc, #96]	; bb40 <main@@Base+0x7708>
    badc:	add	r0, pc, r0
    bae0:	bx	lr
    bae4:	ldr	r0, [pc, #88]	; bb44 <main@@Base+0x770c>
    bae8:	add	r0, pc, r0
    baec:	bx	lr
    baf0:	ldr	r0, [pc, #80]	; bb48 <main@@Base+0x7710>
    baf4:	add	r0, pc, r0
    baf8:	bx	lr
    bafc:	ldr	r0, [pc, #72]	; bb4c <main@@Base+0x7714>
    bb00:	add	r0, pc, r0
    bb04:	bx	lr
    bb08:	mov	r0, #0
    bb0c:	bx	lr
    bb10:	andeq	sl, r1, r4, lsl #25
    bb14:	ldrdeq	sl, [r1], -r8
    bb18:	ldrdeq	sl, [r1], -r0
    bb1c:	ldrdeq	sl, [r1], -r0
    bb20:	andeq	sl, r1, ip, asr #23
    bb24:	andeq	sl, r1, ip, asr #23
    bb28:	andeq	sl, r1, ip, asr #23
    bb2c:	ldrdeq	sl, [r1], -r0
    bb30:	andeq	sl, r1, r8, lsl #24
    bb34:	andeq	sl, r1, r0, asr #23
    bb38:	andeq	sl, r1, r0, asr #23
    bb3c:	andeq	sl, r1, r0, asr #23
    bb40:	andeq	sl, r1, r0, asr #23
    bb44:	andeq	sl, r1, r0, asr #23
    bb48:	andeq	sl, r1, r8, asr #23
    bb4c:	andeq	sl, r1, r4, asr #23
    bb50:	cmp	r0, #0
    bb54:	beq	bb74 <main@@Base+0x773c>
    bb58:	cmp	r0, #1
    bb5c:	beq	bb80 <main@@Base+0x7748>
    bb60:	cmp	r0, #2
    bb64:	bne	bb8c <main@@Base+0x7754>
    bb68:	ldr	r0, [pc, #36]	; bb94 <main@@Base+0x775c>
    bb6c:	add	r0, pc, r0
    bb70:	bx	lr
    bb74:	ldr	r0, [pc, #28]	; bb98 <main@@Base+0x7760>
    bb78:	add	r0, pc, r0
    bb7c:	bx	lr
    bb80:	ldr	r0, [pc, #20]	; bb9c <main@@Base+0x7764>
    bb84:	add	r0, pc, r0
    bb88:	bx	lr
    bb8c:	mov	r0, #0
    bb90:	bx	lr
    bb94:	andeq	sl, r1, ip, ror fp
    bb98:	andeq	sl, r1, r8, ror #22
    bb9c:			; <UNDEFINED> instruction: 0x00019cbc
    bba0:	cmp	r0, #256	; 0x100
    bba4:	beq	bbdc <main@@Base+0x77a4>
    bba8:	cmp	r0, #272	; 0x110
    bbac:	beq	bbe8 <main@@Base+0x77b0>
    bbb0:	movw	r3, #282	; 0x11a
    bbb4:	cmp	r0, r3
    bbb8:	beq	bbf4 <main@@Base+0x77bc>
    bbbc:	movw	r3, #65281	; 0xff01
    bbc0:	cmp	r0, r3
    bbc4:	bne	bbd4 <main@@Base+0x779c>
    bbc8:	ldr	r0, [pc, #48]	; bc00 <main@@Base+0x77c8>
    bbcc:	add	r0, pc, r0
    bbd0:	bx	lr
    bbd4:	mov	r0, #0
    bbd8:	bx	lr
    bbdc:	ldr	r0, [pc, #32]	; bc04 <main@@Base+0x77cc>
    bbe0:	add	r0, pc, r0
    bbe4:	bx	lr
    bbe8:	ldr	r0, [pc, #24]	; bc08 <main@@Base+0x77d0>
    bbec:	add	r0, pc, r0
    bbf0:	bx	lr
    bbf4:	ldr	r0, [pc, #16]	; bc0c <main@@Base+0x77d4>
    bbf8:	add	r0, pc, r0
    bbfc:	bx	lr
    bc00:	andeq	sl, r1, r8, lsr #22
    bc04:	andeq	sl, r1, ip, lsl #22
    bc08:	andeq	sl, r1, r4, lsl #22
    bc0c:	andeq	r9, r1, r0, asr #13
    bc10:	ldr	r3, [pc, #244]	; bd0c <main@@Base+0x78d4>
    bc14:	ldr	r2, [pc, #244]	; bd10 <main@@Base+0x78d8>
    bc18:	add	r3, pc, r3
    bc1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bc20:	sub	sp, sp, #12
    bc24:	ldr	sl, [r3, r2]
    bc28:	mov	r4, r0
    bc2c:	ldr	r6, [r0, #4]
    bc30:	ldr	r3, [sl]
    bc34:	cmp	r6, #0
    bc38:	str	r3, [sp, #4]
    bc3c:	beq	bc68 <main@@Base+0x7830>
    bc40:	mov	r5, #0
    bc44:	mov	r6, r5
    bc48:	ldr	r3, [r4]
    bc4c:	ldr	r0, [r3, r5, lsl #2]
    bc50:	add	r5, r5, #1
    bc54:	bl	3f24 <g_bytes_get_size@plt>
    bc58:	ldr	r3, [r4, #4]
    bc5c:	cmp	r3, r5
    bc60:	add	r6, r6, r0
    bc64:	bhi	bc48 <main@@Base+0x7810>
    bc68:	mov	r0, r6
    bc6c:	bl	4248 <g_malloc0@plt>
    bc70:	ldr	r3, [r4, #4]
    bc74:	cmp	r3, #0
    bc78:	movne	r5, #0
    bc7c:	movne	r9, r5
    bc80:	movne	r7, r5
    bc84:	mov	fp, r0
    bc88:	bne	bca0 <main@@Base+0x7868>
    bc8c:	b	bce4 <main@@Base+0x78ac>
    bc90:	ldr	r3, [r4, #4]
    bc94:	add	r5, r5, #1
    bc98:	cmp	r3, r5
    bc9c:	bls	bce4 <main@@Base+0x78ac>
    bca0:	ldr	r3, [r4]
    bca4:	mov	r1, sp
    bca8:	str	r7, [sp]
    bcac:	ldr	r0, [r3, r5, lsl #2]
    bcb0:	bl	4320 <g_bytes_get_data@plt>
    bcb4:	ldr	r3, [sp]
    bcb8:	cmp	r3, #0
    bcbc:	beq	bc90 <main@@Base+0x7858>
    bcc0:	mov	r1, r0
    bcc4:	mov	r2, r3
    bcc8:	add	r0, fp, r9
    bccc:	add	r9, r9, r3
    bcd0:	bl	40e0 <memcpy@plt>
    bcd4:	ldr	r3, [r4, #4]
    bcd8:	add	r5, r5, #1
    bcdc:	cmp	r3, r5
    bce0:	bhi	bca0 <main@@Base+0x7868>
    bce4:	mov	r0, fp
    bce8:	mov	r1, r6
    bcec:	bl	3a98 <g_bytes_new_take@plt>
    bcf0:	ldr	r2, [sp, #4]
    bcf4:	ldr	r3, [sl]
    bcf8:	cmp	r2, r3
    bcfc:	bne	bd08 <main@@Base+0x78d0>
    bd00:	add	sp, sp, #12
    bd04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bd08:	bl	3e4c <__stack_chk_fail@plt>
    bd0c:	andeq	r2, r3, r8, ror #30
    bd10:	andeq	r0, r0, r0, lsr r4
    bd14:	ldr	r3, [pc, #140]	; bda8 <main@@Base+0x7970>
    bd18:	ldr	r2, [pc, #140]	; bdac <main@@Base+0x7974>
    bd1c:	add	r3, pc, r3
    bd20:	push	{r4, r5, lr}
    bd24:	sub	sp, sp, #12
    bd28:	ldr	r4, [r3, r2]
    bd2c:	add	r1, sp, #8
    bd30:	mov	r5, #0
    bd34:	str	r5, [r1, #-8]!
    bd38:	mov	r1, sp
    bd3c:	ldr	r3, [r4]
    bd40:	str	r3, [sp, #4]
    bd44:	bl	4320 <g_bytes_get_data@plt>
    bd48:	ldr	r2, [sp]
    bd4c:	cmp	r2, r5
    bd50:	beq	bd80 <main@@Base+0x7948>
    bd54:	ldrb	r3, [r0]
    bd58:	cmp	r3, #255	; 0xff
    bd5c:	bne	bd9c <main@@Base+0x7964>
    bd60:	sub	r2, r2, #1
    bd64:	add	r2, r0, r2
    bd68:	b	bd78 <main@@Base+0x7940>
    bd6c:	ldrb	r3, [r0, #1]!
    bd70:	cmp	r3, #255	; 0xff
    bd74:	bne	bd9c <main@@Base+0x7964>
    bd78:	cmp	r0, r2
    bd7c:	bne	bd6c <main@@Base+0x7934>
    bd80:	mov	r0, #1
    bd84:	ldr	r2, [sp, #4]
    bd88:	ldr	r3, [r4]
    bd8c:	cmp	r2, r3
    bd90:	bne	bda4 <main@@Base+0x796c>
    bd94:	add	sp, sp, #12
    bd98:	pop	{r4, r5, pc}
    bd9c:	mov	r0, #0
    bda0:	b	bd84 <main@@Base+0x794c>
    bda4:	bl	3e4c <__stack_chk_fail@plt>
    bda8:	andeq	r2, r3, r4, ror #28
    bdac:	andeq	r0, r0, r0, lsr r4
    bdb0:	push	{r3, r4, r5, r6, r7, lr}
    bdb4:	mov	r4, r1
    bdb8:	mov	r5, r0
    bdbc:	bl	3f24 <g_bytes_get_size@plt>
    bdc0:	cmp	r0, r4
    bdc4:	bhi	be24 <main@@Base+0x79ec>
    bdc8:	mov	r0, r5
    bdcc:	bl	3f24 <g_bytes_get_size@plt>
    bdd0:	cmp	r4, r0
    bdd4:	mov	r6, r0
    bdd8:	bls	be48 <main@@Base+0x7a10>
    bddc:	mov	r1, #0
    bde0:	mov	r0, r5
    bde4:	bl	4320 <g_bytes_get_data@plt>
    bde8:	mov	r7, r0
    bdec:	mov	r0, r4
    bdf0:	bl	3c54 <g_malloc@plt>
    bdf4:	mov	r1, r7
    bdf8:	mov	r2, r6
    bdfc:	mov	r5, r0
    be00:	bl	40e0 <memcpy@plt>
    be04:	add	r0, r5, r6
    be08:	rsb	r2, r6, r4
    be0c:	mov	r1, #255	; 0xff
    be10:	bl	3bd0 <memset@plt>
    be14:	mov	r0, r5
    be18:	mov	r1, r4
    be1c:	pop	{r3, r4, r5, r6, r7, lr}
    be20:	b	3a98 <g_bytes_new_take@plt>
    be24:	ldr	r0, [pc, #40]	; be54 <main@@Base+0x7a1c>
    be28:	ldr	r1, [pc, #40]	; be58 <main@@Base+0x7a20>
    be2c:	ldr	r2, [pc, #40]	; be5c <main@@Base+0x7a24>
    be30:	add	r0, pc, r0
    be34:	add	r1, pc, r1
    be38:	add	r2, pc, r2
    be3c:	bl	3870 <g_return_if_fail_warning@plt>
    be40:	mov	r0, #0
    be44:	pop	{r3, r4, r5, r6, r7, pc}
    be48:	mov	r0, r5
    be4c:	pop	{r3, r4, r5, r6, r7, lr}
    be50:	b	40ec <g_bytes_ref@plt>
    be54:	andeq	r9, r1, ip, asr r0
    be58:	andeq	sl, r1, ip, asr #14
    be5c:	andeq	sl, r1, r8, asr #17
    be60:	ldr	ip, [pc, #88]	; bec0 <main@@Base+0x7a88>
    be64:	mov	r3, #0
    be68:	push	{r4, lr}
    be6c:	add	ip, pc, ip
    be70:	ldr	r4, [pc, #76]	; bec4 <main@@Base+0x7a8c>
    be74:	sub	sp, sp, #8
    be78:	ldrb	lr, [r0]
    be7c:	mov	r1, r3
    be80:	mov	r2, #16
    be84:	mov	r0, sp
    be88:	ldr	r4, [ip, r4]
    be8c:	strb	r3, [sp, #1]
    be90:	strb	lr, [sp]
    be94:	ldr	r3, [r4]
    be98:	str	r3, [sp, #4]
    be9c:	bl	4284 <g_ascii_strtoull@plt>
    bea0:	ldr	r2, [sp, #4]
    bea4:	ldr	r3, [r4]
    bea8:	cmp	r2, r3
    beac:	uxtb	r0, r0
    beb0:	bne	bebc <main@@Base+0x7a84>
    beb4:	add	sp, sp, #8
    beb8:	pop	{r4, pc}
    bebc:	bl	3e4c <__stack_chk_fail@plt>
    bec0:	andeq	r2, r3, r4, lsl sp
    bec4:	andeq	r0, r0, r0, lsr r4
    bec8:	ldr	ip, [pc, #88]	; bf28 <main@@Base+0x7af0>
    becc:	mov	r3, #0
    bed0:	push	{r4, lr}
    bed4:	add	ip, pc, ip
    bed8:	ldr	r4, [pc, #76]	; bf2c <main@@Base+0x7af4>
    bedc:	sub	sp, sp, #8
    bee0:	ldrh	lr, [r0]
    bee4:	mov	r1, r3
    bee8:	mov	r2, #16
    beec:	mov	r0, sp
    bef0:	ldr	r4, [ip, r4]
    bef4:	strb	r3, [sp, #2]
    bef8:	strh	lr, [sp]
    befc:	ldr	r3, [r4]
    bf00:	str	r3, [sp, #4]
    bf04:	bl	4284 <g_ascii_strtoull@plt>
    bf08:	ldr	r2, [sp, #4]
    bf0c:	ldr	r3, [r4]
    bf10:	cmp	r2, r3
    bf14:	uxtb	r0, r0
    bf18:	bne	bf24 <main@@Base+0x7aec>
    bf1c:	add	sp, sp, #8
    bf20:	pop	{r4, pc}
    bf24:	bl	3e4c <__stack_chk_fail@plt>
    bf28:	andeq	r2, r3, ip, lsr #25
    bf2c:	andeq	r0, r0, r0, lsr r4
    bf30:	ldr	ip, [pc, #88]	; bf90 <main@@Base+0x7b58>
    bf34:	mov	r3, #0
    bf38:	push	{r4, lr}
    bf3c:	add	ip, pc, ip
    bf40:	ldr	lr, [pc, #76]	; bf94 <main@@Base+0x7b5c>
    bf44:	sub	sp, sp, #16
    bf48:	ldr	r0, [r0]
    bf4c:	mov	r1, r3
    bf50:	mov	r2, #16
    bf54:	ldr	r4, [ip, lr]
    bf58:	strb	r3, [sp, #8]
    bf5c:	str	r0, [sp, #4]
    bf60:	add	r0, sp, #4
    bf64:	ldr	r3, [r4]
    bf68:	str	r3, [sp, #12]
    bf6c:	bl	4284 <g_ascii_strtoull@plt>
    bf70:	ldr	r2, [sp, #12]
    bf74:	ldr	r3, [r4]
    bf78:	cmp	r2, r3
    bf7c:	uxth	r0, r0
    bf80:	bne	bf8c <main@@Base+0x7b54>
    bf84:	add	sp, sp, #16
    bf88:	pop	{r4, pc}
    bf8c:	bl	3e4c <__stack_chk_fail@plt>
    bf90:	andeq	r2, r3, r4, asr #24
    bf94:	andeq	r0, r0, r0, lsr r4
    bf98:	push	{r4, r5, lr}
    bf9c:	mov	r2, r0
    bfa0:	ldr	lr, [pc, #92]	; c004 <main@@Base+0x7bcc>
    bfa4:	sub	sp, sp, #20
    bfa8:	ldr	ip, [pc, #88]	; c008 <main@@Base+0x7bd0>
    bfac:	mov	r3, #0
    bfb0:	add	lr, pc, lr
    bfb4:	ldr	r0, [r0]
    bfb8:	ldrh	r5, [r2, #4]
    bfbc:	mov	r1, r3
    bfc0:	ldr	r4, [lr, ip]
    bfc4:	add	ip, sp, #4
    bfc8:	str	r0, [sp, #4]
    bfcc:	mov	r2, #16
    bfd0:	mov	r0, ip
    bfd4:	strb	r3, [sp, #10]
    bfd8:	ldr	ip, [r4]
    bfdc:	strh	r5, [sp, #8]
    bfe0:	str	ip, [sp, #12]
    bfe4:	bl	4284 <g_ascii_strtoull@plt>
    bfe8:	ldr	r2, [sp, #12]
    bfec:	ldr	r3, [r4]
    bff0:	cmp	r2, r3
    bff4:	bne	c000 <main@@Base+0x7bc8>
    bff8:	add	sp, sp, #20
    bffc:	pop	{r4, r5, pc}
    c000:	bl	3e4c <__stack_chk_fail@plt>
    c004:	ldrdeq	r2, [r3], -r0
    c008:	andeq	r0, r0, r0, lsr r4
    c00c:	push	{r4, r5, lr}
    c010:	mov	r3, r0
    c014:	ldr	r5, [pc, #88]	; c074 <main@@Base+0x7c3c>
    c018:	sub	sp, sp, #20
    c01c:	ldr	r2, [pc, #84]	; c078 <main@@Base+0x7c40>
    c020:	mov	ip, #0
    c024:	add	r5, pc, r5
    c028:	ldr	r1, [r3, #4]
    c02c:	ldr	r0, [r0]
    c030:	mov	r3, sp
    c034:	ldr	r4, [r5, r2]
    c038:	mov	r2, #16
    c03c:	stmia	r3!, {r0, r1}
    c040:	mov	r0, sp
    c044:	ldr	r3, [r4]
    c048:	mov	r1, ip
    c04c:	strb	ip, [sp, #8]
    c050:	str	r3, [sp, #12]
    c054:	bl	4284 <g_ascii_strtoull@plt>
    c058:	ldr	r2, [sp, #12]
    c05c:	ldr	r3, [r4]
    c060:	cmp	r2, r3
    c064:	bne	c070 <main@@Base+0x7c38>
    c068:	add	sp, sp, #20
    c06c:	pop	{r4, r5, pc}
    c070:	bl	3e4c <__stack_chk_fail@plt>
    c074:	andeq	r2, r3, ip, asr fp
    c078:	andeq	r0, r0, r0, lsr r4
    c07c:	andeq	r0, r0, r0
    c080:	push	{r4, lr}
    c084:	mvn	r3, #0
    c088:	ldr	lr, [pc, #80]	; c0e0 <main@@Base+0x7ca8>
    c08c:	mov	r1, #0
    c090:	ldr	r2, [pc, #76]	; c0e4 <main@@Base+0x7cac>
    c094:	add	lr, pc, lr
    c098:	ldr	ip, [pc, #72]	; c0e8 <main@@Base+0x7cb0>
    c09c:	add	r2, pc, r2
    c0a0:	ldr	r4, [lr]
    c0a4:	add	r4, r0, r4
    c0a8:	strb	r3, [r4, #46]	; 0x2e
    c0ac:	strh	r3, [r4, #38]	; 0x26
    c0b0:	strh	r3, [r4, #40]	; 0x28
    c0b4:	strh	r3, [r4, #42]	; 0x2a
    c0b8:	str	r1, [r4, #8]
    c0bc:	str	r1, [r4, #12]
    c0c0:	ldr	r0, [r2, ip]
    c0c4:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
    c0c8:	movw	r2, #1500	; 0x5dc
    c0cc:	mov	r3, #64	; 0x40
    c0d0:	str	r2, [r4, #52]	; 0x34
    c0d4:	strh	r3, [r4, #44]	; 0x2c
    c0d8:	str	r0, [r4, #16]
    c0dc:	pop	{r4, pc}
    c0e0:	andeq	r2, r3, ip, ror #30
    c0e4:	andeq	r2, r3, r4, ror #21
    c0e8:	andeq	r0, r0, r4, asr r4
    c0ec:	push	{r4, r5, r6, r7, r8, r9, lr}
    c0f0:	sub	sp, sp, #28
    c0f4:	mov	r4, r0
    c0f8:	bl	420c <g_type_class_peek_parent@plt>
    c0fc:	ldr	r1, [pc, #260]	; c208 <main@@Base+0x7dd0>
    c100:	ldr	r6, [pc, #260]	; c20c <main@@Base+0x7dd4>
    c104:	add	r1, pc, r1
    c108:	add	r6, pc, r6
    c10c:	ldr	r3, [r1]
    c110:	cmp	r3, #0
    c114:	str	r0, [r1, #4]
    c118:	beq	c124 <main@@Base+0x7cec>
    c11c:	mov	r0, r4
    c120:	bl	38b8 <g_type_class_adjust_private_offset@plt>
    c124:	mov	r1, #80	; 0x50
    c128:	mov	r0, r4
    c12c:	bl	4374 <g_type_check_class_cast@plt>
    c130:	mov	r9, #4
    c134:	mov	r8, #1
    c138:	mov	r7, #28
    c13c:	mov	r5, r0
    c140:	bl	23a78 <main@@Base+0x1f640>
    c144:	mov	r1, r0
    c148:	mov	r0, r4
    c14c:	bl	4374 <g_type_check_class_cast@plt>
    c150:	ldr	ip, [pc, #184]	; c210 <main@@Base+0x7dd8>
    c154:	ldr	r2, [pc, #184]	; c214 <main@@Base+0x7ddc>
    c158:	mov	r4, #0
    c15c:	ldr	r3, [pc, #180]	; c218 <main@@Base+0x7de0>
    c160:	ldr	r1, [pc, #180]	; c21c <main@@Base+0x7de4>
    c164:	add	r2, pc, r2
    c168:	add	r3, pc, r3
    c16c:	add	r1, pc, r1
    c170:	str	r2, [r0, #228]	; 0xe4
    c174:	mov	r2, #2
    c178:	str	r3, [r0, #232]	; 0xe8
    c17c:	mov	r3, #352	; 0x160
    c180:	str	r1, [r0, #236]	; 0xec
    c184:	ldr	r1, [r5]
    c188:	str	r4, [sp]
    c18c:	str	r4, [sp, #4]
    c190:	ldr	r6, [r6, ip]
    c194:	ldr	r0, [pc, #132]	; c220 <main@@Base+0x7de8>
    c198:	str	r9, [sp, #12]
    c19c:	str	r8, [sp, #16]
    c1a0:	add	r0, pc, r0
    c1a4:	str	r6, [sp, #8]
    c1a8:	str	r7, [sp, #20]
    c1ac:	bl	3c6c <g_signal_new@plt>
    c1b0:	ldr	ip, [pc, #108]	; c224 <main@@Base+0x7dec>
    c1b4:	ldr	r1, [r5]
    c1b8:	mov	r2, #2
    c1bc:	add	ip, pc, ip
    c1c0:	str	r4, [sp]
    c1c4:	str	r4, [sp, #4]
    c1c8:	mov	r3, #356	; 0x164
    c1cc:	str	r6, [sp, #8]
    c1d0:	mov	r4, ip
    c1d4:	str	r9, [sp, #12]
    c1d8:	str	r8, [sp, #16]
    c1dc:	str	r7, [sp, #20]
    c1e0:	str	r0, [ip, #8]
    c1e4:	ldr	r0, [pc, #60]	; c228 <main@@Base+0x7df0>
    c1e8:	add	r0, pc, r0
    c1ec:	bl	3c6c <g_signal_new@plt>
    c1f0:	ldr	r3, [pc, #52]	; c22c <main@@Base+0x7df4>
    c1f4:	add	r3, pc, r3
    c1f8:	str	r3, [r5, #24]
    c1fc:	str	r0, [r4, #12]
    c200:	add	sp, sp, #28
    c204:	pop	{r4, r5, r6, r7, r8, r9, pc}
    c208:	strdeq	r2, [r3], -ip
    c20c:	andeq	r2, r3, r8, ror sl
    c210:	andeq	r0, r0, ip, lsr #8
    c214:	andeq	r1, r0, r4, lsr r8
    c218:	andeq	r0, r0, r4, ror r2
    c21c:	ldrdeq	r0, [r0], -r4
    c220:	andeq	sl, r1, r0, ror #17
    c224:	andeq	r2, r3, r4, asr #28
    c228:	andeq	sl, r1, r8, lsr #17
    c22c:	andeq	r0, r0, r8, ror r1
    c230:	ldr	r2, [pc, #40]	; c260 <main@@Base+0x7e28>
    c234:	add	r2, pc, r2
    c238:	ldr	r3, [r2]
    c23c:	add	r3, r0, r3
    c240:	ldr	ip, [r3, #8]
    c244:	cmp	ip, r1
    c248:	bxeq	lr
    c24c:	str	r1, [r3, #8]
    c250:	mov	r3, r1
    c254:	ldr	r1, [r2, #12]
    c258:	mov	r2, #0
    c25c:	b	3b70 <g_signal_emit@plt>
    c260:	andeq	r2, r3, ip, asr #27
    c264:	push	{r3, r4, r5, lr}
    c268:	mov	r5, r2
    c26c:	mov	r4, r1
    c270:	bl	1f330 <main@@Base+0x1aef8>
    c274:	mov	r1, r0
    c278:	mov	r0, r5
    c27c:	bl	39d8 <g_type_check_instance_cast@plt>
    c280:	mov	r1, r4
    c284:	pop	{r3, r4, r5, lr}
    c288:	b	20e98 <main@@Base+0x1ca60>
    c28c:	push	{r3, r4, r5, lr}
    c290:	mov	r5, r2
    c294:	mov	r4, r1
    c298:	bl	1f330 <main@@Base+0x1aef8>
    c29c:	mov	r1, r0
    c2a0:	mov	r0, r5
    c2a4:	bl	39d8 <g_type_check_instance_cast@plt>
    c2a8:	mov	r1, r4
    c2ac:	pop	{r3, r4, r5, lr}
    c2b0:	b	20fe4 <main@@Base+0x1cbac>
    c2b4:	push	{r4, r5, r6, r7, lr}
    c2b8:	dmb	sy
    c2bc:	ldr	r4, [pc, #156]	; c360 <main@@Base+0x7f28>
    c2c0:	sub	sp, sp, #20
    c2c4:	add	r4, pc, r4
    c2c8:	ldr	r5, [r4, #16]
    c2cc:	dmb	sy
    c2d0:	cmp	r5, #0
    c2d4:	beq	c2ec <main@@Base+0x7eb4>
    c2d8:	ldr	r3, [pc, #132]	; c364 <main@@Base+0x7f2c>
    c2dc:	add	r3, pc, r3
    c2e0:	ldr	r0, [r3, #16]
    c2e4:	add	sp, sp, #20
    c2e8:	pop	{r4, r5, r6, r7, pc}
    c2ec:	add	r6, r4, #16
    c2f0:	mov	r0, r6
    c2f4:	bl	3d50 <g_once_init_enter@plt>
    c2f8:	cmp	r0, #0
    c2fc:	beq	c2d8 <main@@Base+0x7ea0>
    c300:	bl	23a78 <main@@Base+0x1f640>
    c304:	mov	r7, r0
    c308:	ldr	r0, [pc, #88]	; c368 <main@@Base+0x7f30>
    c30c:	add	r0, pc, r0
    c310:	bl	3df8 <g_intern_static_string@plt>
    c314:	ldr	ip, [pc, #80]	; c36c <main@@Base+0x7f34>
    c318:	mov	r3, #12
    c31c:	str	r5, [sp, #8]
    c320:	add	ip, pc, ip
    c324:	stm	sp, {r3, ip}
    c328:	ldr	r3, [pc, #64]	; c370 <main@@Base+0x7f38>
    c32c:	mov	r2, #368	; 0x170
    c330:	add	r3, pc, r3
    c334:	mov	r1, r0
    c338:	mov	r0, r7
    c33c:	bl	3894 <g_type_register_static_simple@plt>
    c340:	mov	r1, #56	; 0x38
    c344:	mov	r5, r0
    c348:	bl	3edc <g_type_add_instance_private@plt>
    c34c:	mov	r1, r5
    c350:	str	r0, [r4]
    c354:	mov	r0, r6
    c358:	bl	4140 <g_once_init_leave@plt>
    c35c:	b	c2d8 <main@@Base+0x7ea0>
    c360:	andeq	r2, r3, ip, lsr sp
    c364:	andeq	r2, r3, r4, lsr #26
    c368:	muleq	r1, r4, r7
    c36c:			; <UNDEFINED> instruction: 0xfffffd58
    c370:			; <UNDEFINED> instruction: 0xfffffdb4
    c374:	push	{r3, r4, r5, lr}
    c378:	mov	r5, r0
    c37c:	bl	c2b4 <main@@Base+0x7e7c>
    c380:	mov	r1, r0
    c384:	mov	r0, r5
    c388:	bl	39d8 <g_type_check_instance_cast@plt>
    c38c:	ldr	r3, [pc, #72]	; c3dc <main@@Base+0x7fa4>
    c390:	ldr	r4, [pc, r3]
    c394:	add	r4, r0, r4
    c398:	ldr	r0, [r4, #20]
    c39c:	cmp	r0, #0
    c3a0:	beq	c3a8 <main@@Base+0x7f70>
    c3a4:	bl	4110 <g_object_unref@plt>
    c3a8:	ldr	r0, [r4, #32]
    c3ac:	bl	3eac <g_free@plt>
    c3b0:	ldr	r0, [r4, #16]
    c3b4:	bl	4224 <g_ptr_array_unref@plt>
    c3b8:	ldr	r3, [pc, #32]	; c3e0 <main@@Base+0x7fa8>
    c3bc:	mov	r1, #80	; 0x50
    c3c0:	add	r3, pc, r3
    c3c4:	ldr	r0, [r3, #4]
    c3c8:	bl	4374 <g_type_check_class_cast@plt>
    c3cc:	ldr	r3, [r0, #24]
    c3d0:	mov	r0, r5
    c3d4:	blx	r3
    c3d8:	pop	{r3, r4, r5, pc}
    c3dc:	andeq	r2, r3, r0, ror ip
    c3e0:	andeq	r2, r3, r0, asr #24
    c3e4:	push	{r3, r4, r5, lr}
    c3e8:	mov	r4, r0
    c3ec:	bl	c2b4 <main@@Base+0x7e7c>
    c3f0:	mov	r1, r0
    c3f4:	mov	r0, r4
    c3f8:	bl	39d8 <g_type_check_instance_cast@plt>
    c3fc:	ldr	r3, [pc, #68]	; c448 <main@@Base+0x8010>
    c400:	ldr	r5, [pc, r3]
    c404:	add	r5, r0, r5
    c408:	bl	23a78 <main@@Base+0x1f640>
    c40c:	mov	r1, r0
    c410:	mov	r0, r4
    c414:	bl	39d8 <g_type_check_instance_cast@plt>
    c418:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    c41c:	ldr	r3, [r5, #28]
    c420:	cmp	r3, #0
    c424:	beq	c440 <main@@Base+0x8008>
    c428:	mov	r2, #0
    c42c:	ldrb	r1, [r5, #46]	; 0x2e
    c430:	mov	r3, r2
    c434:	bl	3ff0 <g_usb_device_release_interface@plt>
    c438:	mov	r3, #0
    c43c:	str	r3, [r5, #28]
    c440:	mov	r0, #1
    c444:	pop	{r3, r4, r5, pc}
    c448:	andeq	r2, r3, r0, lsl #24
    c44c:	push	{r3, r4, r5, lr}
    c450:	mov	r4, r0
    c454:	ldr	r3, [pc, #108]	; c4c8 <main@@Base+0x8090>
    c458:	add	r3, pc, r3
    c45c:	ldr	r5, [r3]
    c460:	bl	c2b4 <main@@Base+0x7e7c>
    c464:	cmp	r4, #0
    c468:	beq	c498 <main@@Base+0x8060>
    c46c:	ldr	r3, [r4]
    c470:	cmp	r3, #0
    c474:	beq	c484 <main@@Base+0x804c>
    c478:	ldr	r3, [r3]
    c47c:	cmp	r0, r3
    c480:	beq	c4bc <main@@Base+0x8084>
    c484:	mov	r1, r0
    c488:	mov	r0, r4
    c48c:	bl	3fcc <g_type_check_instance_is_a@plt>
    c490:	cmp	r0, #0
    c494:	bne	c4bc <main@@Base+0x8084>
    c498:	ldr	r0, [pc, #44]	; c4cc <main@@Base+0x8094>
    c49c:	ldr	r1, [pc, #44]	; c4d0 <main@@Base+0x8098>
    c4a0:	ldr	r2, [pc, #44]	; c4d4 <main@@Base+0x809c>
    c4a4:	add	r0, pc, r0
    c4a8:	add	r1, pc, r1
    c4ac:	add	r2, pc, r2
    c4b0:	bl	3870 <g_return_if_fail_warning@plt>
    c4b4:	movw	r0, #65535	; 0xffff
    c4b8:	pop	{r3, r4, r5, pc}
    c4bc:	add	r4, r4, r5
    c4c0:	ldrh	r0, [r4, #44]	; 0x2c
    c4c4:	pop	{r3, r4, r5, pc}
    c4c8:	andeq	r2, r3, r8, lsr #23
    c4cc:	andeq	r8, r1, r8, ror #19
    c4d0:	andeq	sl, r1, r8, ror r2
    c4d4:	andeq	sl, r1, r0, lsl #12
    c4d8:	push	{r3, r4, r5, lr}
    c4dc:	mov	r4, r0
    c4e0:	ldr	r3, [pc, #112]	; c558 <main@@Base+0x8120>
    c4e4:	add	r3, pc, r3
    c4e8:	ldr	r5, [r3]
    c4ec:	bl	c2b4 <main@@Base+0x7e7c>
    c4f0:	cmp	r4, #0
    c4f4:	beq	c524 <main@@Base+0x80ec>
    c4f8:	ldr	r3, [r4]
    c4fc:	cmp	r3, #0
    c500:	beq	c510 <main@@Base+0x80d8>
    c504:	ldr	r3, [r3]
    c508:	cmp	r0, r3
    c50c:	beq	c54c <main@@Base+0x8114>
    c510:	mov	r1, r0
    c514:	mov	r0, r4
    c518:	bl	3fcc <g_type_check_instance_is_a@plt>
    c51c:	cmp	r0, #0
    c520:	bne	c54c <main@@Base+0x8114>
    c524:	ldr	r1, [pc, #48]	; c55c <main@@Base+0x8124>
    c528:	ldr	r0, [pc, #48]	; c560 <main@@Base+0x8128>
    c52c:	ldr	r2, [pc, #48]	; c564 <main@@Base+0x812c>
    c530:	add	r1, pc, r1
    c534:	add	r0, pc, r0
    c538:	add	r1, r1, #32
    c53c:	add	r2, pc, r2
    c540:	bl	3870 <g_return_if_fail_warning@plt>
    c544:	movw	r0, #65535	; 0xffff
    c548:	pop	{r3, r4, r5, pc}
    c54c:	add	r4, r4, r5
    c550:	ldrh	r0, [r4, #36]	; 0x24
    c554:	pop	{r3, r4, r5, pc}
    c558:	andeq	r2, r3, ip, lsl fp
    c55c:	strdeq	sl, [r1], -r0
    c560:	andeq	r8, r1, r8, asr r9
    c564:	andeq	sl, r1, r0, ror r5
    c568:	push	{r3, r4, r5, lr}
    c56c:	mov	r4, r0
    c570:	ldr	r3, [pc, #112]	; c5e8 <main@@Base+0x81b0>
    c574:	add	r3, pc, r3
    c578:	ldr	r5, [r3]
    c57c:	bl	c2b4 <main@@Base+0x7e7c>
    c580:	cmp	r4, #0
    c584:	beq	c5b4 <main@@Base+0x817c>
    c588:	ldr	r3, [r4]
    c58c:	cmp	r3, #0
    c590:	beq	c5a0 <main@@Base+0x8168>
    c594:	ldr	r3, [r3]
    c598:	cmp	r0, r3
    c59c:	beq	c5dc <main@@Base+0x81a4>
    c5a0:	mov	r1, r0
    c5a4:	mov	r0, r4
    c5a8:	bl	3fcc <g_type_check_instance_is_a@plt>
    c5ac:	cmp	r0, #0
    c5b0:	bne	c5dc <main@@Base+0x81a4>
    c5b4:	ldr	r1, [pc, #48]	; c5ec <main@@Base+0x81b4>
    c5b8:	ldr	r0, [pc, #48]	; c5f0 <main@@Base+0x81b8>
    c5bc:	ldr	r2, [pc, #48]	; c5f4 <main@@Base+0x81bc>
    c5c0:	add	r1, pc, r1
    c5c4:	add	r0, pc, r0
    c5c8:	add	r1, r1, #56	; 0x38
    c5cc:	add	r2, pc, r2
    c5d0:	bl	3870 <g_return_if_fail_warning@plt>
    c5d4:	mov	r0, #0
    c5d8:	pop	{r3, r4, r5, pc}
    c5dc:	add	r4, r4, r5
    c5e0:	ldr	r0, [r4, #48]	; 0x30
    c5e4:	pop	{r3, r4, r5, pc}
    c5e8:	andeq	r2, r3, ip, lsl #21
    c5ec:	andeq	sl, r1, r0, ror #2
    c5f0:	andeq	r8, r1, r8, asr #17
    c5f4:	andeq	sl, r1, r0, ror #9
    c5f8:	ldr	r3, [pc, #120]	; c678 <main@@Base+0x8240>
    c5fc:	push	{r4, r5, r6, lr}
    c600:	add	r3, pc, r3
    c604:	mov	r4, r0
    c608:	mov	r5, r1
    c60c:	ldr	r6, [r3]
    c610:	bl	c2b4 <main@@Base+0x7e7c>
    c614:	cmp	r4, #0
    c618:	beq	c648 <main@@Base+0x8210>
    c61c:	ldr	r3, [r4]
    c620:	cmp	r3, #0
    c624:	beq	c634 <main@@Base+0x81fc>
    c628:	ldr	r3, [r3]
    c62c:	cmp	r0, r3
    c630:	beq	c66c <main@@Base+0x8234>
    c634:	mov	r1, r0
    c638:	mov	r0, r4
    c63c:	bl	3fcc <g_type_check_instance_is_a@plt>
    c640:	cmp	r0, #0
    c644:	bne	c66c <main@@Base+0x8234>
    c648:	ldr	r1, [pc, #44]	; c67c <main@@Base+0x8244>
    c64c:	ldr	r0, [pc, #44]	; c680 <main@@Base+0x8248>
    c650:	ldr	r2, [pc, #44]	; c684 <main@@Base+0x824c>
    c654:	add	r1, pc, r1
    c658:	add	r0, pc, r0
    c65c:	add	r1, r1, #88	; 0x58
    c660:	add	r2, pc, r2
    c664:	pop	{r4, r5, r6, lr}
    c668:	b	3870 <g_return_if_fail_warning@plt>
    c66c:	add	r4, r4, r6
    c670:	strh	r5, [r4, #44]	; 0x2c
    c674:	pop	{r4, r5, r6, pc}
    c678:	andeq	r2, r3, r0, lsl #20
    c67c:	andeq	sl, r1, ip, asr #1
    c680:	andeq	r8, r1, r4, lsr r8
    c684:	andeq	sl, r1, ip, asr #8
    c688:	ldr	r3, [pc, #136]	; c718 <main@@Base+0x82e0>
    c68c:	push	{r4, r5, r6, lr}
    c690:	add	r3, pc, r3
    c694:	mov	r4, r0
    c698:	mov	r5, r1
    c69c:	ldr	r6, [r3]
    c6a0:	bl	c2b4 <main@@Base+0x7e7c>
    c6a4:	cmp	r4, #0
    c6a8:	beq	c6d8 <main@@Base+0x82a0>
    c6ac:	ldr	r3, [r4]
    c6b0:	cmp	r3, #0
    c6b4:	beq	c6c4 <main@@Base+0x828c>
    c6b8:	ldr	r3, [r3]
    c6bc:	cmp	r0, r3
    c6c0:	beq	c700 <main@@Base+0x82c8>
    c6c4:	mov	r1, r0
    c6c8:	mov	r0, r4
    c6cc:	bl	3fcc <g_type_check_instance_is_a@plt>
    c6d0:	cmp	r0, #0
    c6d4:	bne	c700 <main@@Base+0x82c8>
    c6d8:	ldr	r1, [pc, #60]	; c71c <main@@Base+0x82e4>
    c6dc:	ldr	r0, [pc, #60]	; c720 <main@@Base+0x82e8>
    c6e0:	ldr	r2, [pc, #60]	; c724 <main@@Base+0x82ec>
    c6e4:	add	r1, pc, r1
    c6e8:	add	r0, pc, r0
    c6ec:	add	r1, r1, #120	; 0x78
    c6f0:	add	r2, pc, r2
    c6f4:	bl	3870 <g_return_if_fail_warning@plt>
    c6f8:	mov	r0, #0
    c6fc:	pop	{r4, r5, r6, pc}
    c700:	add	r4, r4, r6
    c704:	ldr	r3, [r4, #4]
    c708:	tst	r5, r3
    c70c:	moveq	r0, #0
    c710:	movne	r0, #1
    c714:	pop	{r4, r5, r6, pc}
    c718:	andeq	r2, r3, r0, ror r9
    c71c:	andeq	sl, r1, ip, lsr r0
    c720:	andeq	r8, r1, r4, lsr #15
    c724:			; <UNDEFINED> instruction: 0x0001a3bc
    c728:	push	{r3, r4, r5, lr}
    c72c:	mov	r4, r0
    c730:	ldr	r3, [pc, #112]	; c7a8 <main@@Base+0x8370>
    c734:	add	r3, pc, r3
    c738:	ldr	r5, [r3]
    c73c:	bl	c2b4 <main@@Base+0x7e7c>
    c740:	cmp	r4, #0
    c744:	beq	c774 <main@@Base+0x833c>
    c748:	ldr	r3, [r4]
    c74c:	cmp	r3, #0
    c750:	beq	c760 <main@@Base+0x8328>
    c754:	ldr	r3, [r3]
    c758:	cmp	r0, r3
    c75c:	beq	c79c <main@@Base+0x8364>
    c760:	mov	r1, r0
    c764:	mov	r0, r4
    c768:	bl	3fcc <g_type_check_instance_is_a@plt>
    c76c:	cmp	r0, #0
    c770:	bne	c79c <main@@Base+0x8364>
    c774:	ldr	r1, [pc, #48]	; c7ac <main@@Base+0x8374>
    c778:	ldr	r0, [pc, #48]	; c7b0 <main@@Base+0x8378>
    c77c:	ldr	r2, [pc, #48]	; c7b4 <main@@Base+0x837c>
    c780:	add	r1, pc, r1
    c784:	add	r0, pc, r0
    c788:	add	r1, r1, #144	; 0x90
    c78c:	add	r2, pc, r2
    c790:	bl	3870 <g_return_if_fail_warning@plt>
    c794:	mov	r0, #0
    c798:	pop	{r3, r4, r5, pc}
    c79c:	ldr	r0, [r4, r5]
    c7a0:	ubfx	r0, r0, #1, #1
    c7a4:	pop	{r3, r4, r5, pc}
    c7a8:	andeq	r2, r3, ip, asr #17
    c7ac:	andeq	r9, r1, r0, lsr #31
    c7b0:	andeq	r8, r1, r8, lsl #14
    c7b4:	andeq	sl, r1, r0, lsr #6
    c7b8:	push	{r3, r4, r5, lr}
    c7bc:	mov	r4, r0
    c7c0:	ldr	r3, [pc, #112]	; c838 <main@@Base+0x8400>
    c7c4:	add	r3, pc, r3
    c7c8:	ldr	r5, [r3]
    c7cc:	bl	c2b4 <main@@Base+0x7e7c>
    c7d0:	cmp	r4, #0
    c7d4:	beq	c804 <main@@Base+0x83cc>
    c7d8:	ldr	r3, [r4]
    c7dc:	cmp	r3, #0
    c7e0:	beq	c7f0 <main@@Base+0x83b8>
    c7e4:	ldr	r3, [r3]
    c7e8:	cmp	r0, r3
    c7ec:	beq	c82c <main@@Base+0x83f4>
    c7f0:	mov	r1, r0
    c7f4:	mov	r0, r4
    c7f8:	bl	3fcc <g_type_check_instance_is_a@plt>
    c7fc:	cmp	r0, #0
    c800:	bne	c82c <main@@Base+0x83f4>
    c804:	ldr	r1, [pc, #48]	; c83c <main@@Base+0x8404>
    c808:	ldr	r0, [pc, #48]	; c840 <main@@Base+0x8408>
    c80c:	ldr	r2, [pc, #48]	; c844 <main@@Base+0x840c>
    c810:	add	r1, pc, r1
    c814:	add	r0, pc, r0
    c818:	add	r1, r1, #168	; 0xa8
    c81c:	add	r2, pc, r2
    c820:	bl	3870 <g_return_if_fail_warning@plt>
    c824:	mov	r0, #0
    c828:	pop	{r3, r4, r5, pc}
    c82c:	ldr	r0, [r4, r5]
    c830:	and	r0, r0, #1
    c834:	pop	{r3, r4, r5, pc}
    c838:	andeq	r2, r3, ip, lsr r8
    c83c:	andeq	r9, r1, r0, lsl pc
    c840:	andeq	r8, r1, r8, ror r6
    c844:	muleq	r1, r0, r2
    c848:	ldr	r3, [pc, #2888]	; d398 <main@@Base+0x8f60>
    c84c:	ldr	r2, [pc, #2888]	; d39c <main@@Base+0x8f64>
    c850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c854:	add	r3, pc, r3
    c858:	sub	sp, sp, #92	; 0x5c
    c85c:	ldr	r5, [pc, #2876]	; d3a0 <main@@Base+0x8f68>
    c860:	str	r1, [sp, #52]	; 0x34
    c864:	add	r5, pc, r5
    c868:	str	r0, [sp, #44]	; 0x2c
    c86c:	ldr	r2, [r3, r2]
    c870:	ldr	r3, [r2]
    c874:	str	r2, [sp, #48]	; 0x30
    c878:	str	r3, [sp, #84]	; 0x54
    c87c:	bl	c2b4 <main@@Base+0x7e7c>
    c880:	mov	r1, r0
    c884:	ldr	r0, [sp, #44]	; 0x2c
    c888:	bl	39d8 <g_type_check_instance_cast@plt>
    c88c:	ldr	r4, [r5]
    c890:	mov	r7, r0
    c894:	add	r4, r0, r4
    c898:	bl	23a78 <main@@Base+0x1f640>
    c89c:	mov	r1, r0
    c8a0:	ldr	r0, [sp, #44]	; 0x2c
    c8a4:	bl	39d8 <g_type_check_instance_cast@plt>
    c8a8:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    c8ac:	mov	r3, #0
    c8b0:	str	r3, [r4, #4]
    c8b4:	str	r0, [sp, #60]	; 0x3c
    c8b8:	bl	23a78 <main@@Base+0x1f640>
    c8bc:	mov	r1, r0
    c8c0:	mov	r0, r7
    c8c4:	bl	39d8 <g_type_check_instance_cast@plt>
    c8c8:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    c8cc:	mov	r4, r0
    c8d0:	bl	1f330 <main@@Base+0x1aef8>
    c8d4:	mov	r1, r0
    c8d8:	mov	r0, r7
    c8dc:	bl	39d8 <g_type_check_instance_cast@plt>
    c8e0:	bl	214d0 <main@@Base+0x1d098>
    c8e4:	cmp	r4, #0
    c8e8:	cmpne	r0, #0
    c8ec:	beq	d068 <main@@Base+0x8c30>
    c8f0:	ldr	r1, [pc, #2732]	; d3a4 <main@@Base+0x8f6c>
    c8f4:	mov	r2, r4
    c8f8:	add	r1, pc, r1
    c8fc:	bl	2341c <main@@Base+0x1efe4>
    c900:	cmp	r0, #0
    c904:	beq	c9dc <main@@Base+0x85a4>
    c908:	ldr	r1, [pc, #2712]	; d3a8 <main@@Base+0x8f70>
    c90c:	mvn	r2, #0
    c910:	ldr	r5, [r5]
    c914:	add	r1, pc, r1
    c918:	bl	3cb4 <g_strsplit@plt>
    c91c:	add	r5, r7, r5
    c920:	mov	fp, r0
    c924:	ldr	r0, [r0]
    c928:	cmp	r0, #0
    c92c:	beq	c9d4 <main@@Base+0x859c>
    c930:	ldr	r8, [pc, #2676]	; d3ac <main@@Base+0x8f74>
    c934:	add	r4, fp, #4
    c938:	ldr	r9, [pc, #2672]	; d3b0 <main@@Base+0x8f78>
    c93c:	mov	r6, fp
    c940:	ldr	sl, [pc, #2668]	; d3b4 <main@@Base+0x8f7c>
    c944:	add	r8, pc, r8
    c948:	ldr	r1, [pc, #2664]	; d3b8 <main@@Base+0x8f80>
    c94c:	add	r9, pc, r9
    c950:	ldr	r2, [pc, #2660]	; d3bc <main@@Base+0x8f84>
    c954:	add	sl, pc, sl
    c958:	ldr	r3, [pc, #2656]	; d3c0 <main@@Base+0x8f88>
    c95c:	add	r1, pc, r1
    c960:	add	r2, pc, r2
    c964:	str	r1, [sp, #12]
    c968:	add	r3, pc, r3
    c96c:	str	r2, [sp, #16]
    c970:	str	r3, [sp, #20]
    c974:	b	c994 <main@@Base+0x855c>
    c978:	ldr	r3, [r5, #4]
    c97c:	orr	r3, r3, #1
    c980:	str	r3, [r5, #4]
    c984:	mov	r6, r4
    c988:	ldr	r0, [r4], #4
    c98c:	cmp	r0, #0
    c990:	beq	c9d4 <main@@Base+0x859c>
    c994:	mov	r1, r8
    c998:	bl	441c <g_strcmp0@plt>
    c99c:	cmp	r0, #0
    c9a0:	beq	c978 <main@@Base+0x8540>
    c9a4:	ldr	r0, [r6]
    c9a8:	mov	r1, r9
    c9ac:	bl	441c <g_strcmp0@plt>
    c9b0:	cmp	r0, #0
    c9b4:	bne	d0ac <main@@Base+0x8c74>
    c9b8:	mov	r6, r4
    c9bc:	ldr	r0, [r4], #4
    c9c0:	ldr	r3, [r5, #4]
    c9c4:	cmp	r0, #0
    c9c8:	orr	r3, r3, #2
    c9cc:	str	r3, [r5, #4]
    c9d0:	bne	c994 <main@@Base+0x855c>
    c9d4:	mov	r0, fp
    c9d8:	bl	3e1c <g_strfreev@plt>
    c9dc:	ldr	r3, [pc, #2528]	; d3c4 <main@@Base+0x8f8c>
    c9e0:	add	r3, pc, r3
    c9e4:	ldr	r3, [r3]
    c9e8:	str	r3, [sp, #56]	; 0x38
    c9ec:	bl	23a78 <main@@Base+0x1f640>
    c9f0:	mov	r1, r0
    c9f4:	mov	r0, r7
    c9f8:	bl	39d8 <g_type_check_instance_cast@plt>
    c9fc:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    ca00:	str	r0, [sp, #12]
    ca04:	bl	1f330 <main@@Base+0x1aef8>
    ca08:	mov	r1, r0
    ca0c:	mov	r0, r7
    ca10:	bl	39d8 <g_type_check_instance_cast@plt>
    ca14:	bl	214d0 <main@@Base+0x1d098>
    ca18:	ldr	r1, [sp, #52]	; 0x34
    ca1c:	str	r0, [sp, #16]
    ca20:	ldr	r0, [sp, #12]
    ca24:	bl	3ef4 <g_usb_device_get_interfaces@plt>
    ca28:	subs	fp, r0, #0
    ca2c:	beq	d114 <main@@Base+0x8cdc>
    ca30:	ldr	r1, [sp, #56]	; 0x38
    ca34:	add	r6, r7, r1
    ca38:	mov	r1, #0
    ca3c:	ldr	r0, [r6, #16]
    ca40:	bl	3dec <g_ptr_array_set_size@plt>
    ca44:	ldr	r3, [fp, #4]
    ca48:	cmp	r3, #0
    ca4c:	beq	cf90 <main@@Base+0x8b58>
    ca50:	ldr	r2, [pc, #2416]	; d3c8 <main@@Base+0x8f90>
    ca54:	mov	r5, #0
    ca58:	ldr	r3, [pc, #2412]	; d3cc <main@@Base+0x8f94>
    ca5c:	ldr	r1, [pc, #2412]	; d3d0 <main@@Base+0x8f98>
    ca60:	add	r2, pc, r2
    ca64:	add	r3, pc, r3
    ca68:	str	r2, [sp, #20]
    ca6c:	add	r1, pc, r1
    ca70:	str	r3, [sp, #24]
    ca74:	str	r1, [sp, #36]	; 0x24
    ca78:	ldr	r2, [pc, #2388]	; d3d4 <main@@Base+0x8f9c>
    ca7c:	ldr	r3, [pc, #2388]	; d3d8 <main@@Base+0x8fa0>
    ca80:	ldr	r1, [pc, #2388]	; d3dc <main@@Base+0x8fa4>
    ca84:	add	r2, pc, r2
    ca88:	add	r3, pc, r3
    ca8c:	str	r2, [sp, #40]	; 0x28
    ca90:	add	r1, pc, r1
    ca94:	str	r3, [sp, #28]
    ca98:	str	r1, [sp, #32]
    ca9c:	b	cc64 <main@@Base+0x882c>
    caa0:	mov	r0, r4
    caa4:	bl	3f0c <g_usb_interface_get_extra@plt>
    caa8:	mov	r8, r0
    caac:	bl	3f24 <g_bytes_get_size@plt>
    cab0:	cmp	r0, #0
    cab4:	bne	cd08 <main@@Base+0x88d0>
    cab8:	ldr	r3, [r6]
    cabc:	orr	r3, r3, #3
    cac0:	str	r3, [r6]
    cac4:	ldr	r0, [sp, #16]
    cac8:	ldr	r1, [sp, #20]
    cacc:	ldr	r2, [sp, #12]
    cad0:	bl	2341c <main@@Base+0x1efe4>
    cad4:	subs	r8, r0, #0
    cad8:	beq	cae8 <main@@Base+0x86b0>
    cadc:	bl	411c <strlen@plt>
    cae0:	cmp	r0, #4
    cae4:	beq	ce7c <main@@Base+0x8a44>
    cae8:	ldrh	r3, [r6, #36]	; 0x24
    caec:	movw	r2, #65519	; 0xffef
    caf0:	and	r2, r3, r2
    caf4:	cmp	r2, #256	; 0x100
    caf8:	beq	ce10 <main@@Base+0x89d8>
    cafc:	movw	r2, #65281	; 0xff01
    cb00:	cmp	r3, r2
    cb04:	beq	ce90 <main@@Base+0x8a58>
    cb08:	movw	r2, #282	; 0x11a
    cb0c:	cmp	r3, r2
    cb10:	beq	ceb4 <main@@Base+0x8a7c>
    cb14:	movw	r2, #257	; 0x101
    cb18:	cmp	r3, r2
    cb1c:	beq	ce60 <main@@Base+0x8a28>
    cb20:	ldr	r0, [pc, #2232]	; d3e0 <main@@Base+0x8fa8>
    cb24:	mov	r1, #16
    cb28:	ldr	r2, [pc, #2228]	; d3e4 <main@@Base+0x8fac>
    cb2c:	add	r0, pc, r0
    cb30:	add	r2, pc, r2
    cb34:	bl	3a38 <g_log@plt>
    cb38:	mov	r3, #272	; 0x110
    cb3c:	strh	r3, [r6, #36]	; 0x24
    cb40:	ldrh	r3, [r6, #44]	; 0x2c
    cb44:	movw	r2, #65535	; 0xffff
    cb48:	cmp	r3, r2
    cb4c:	beq	ce38 <main@@Base+0x8a00>
    cb50:	cmp	r3, #0
    cb54:	beq	ccac <main@@Base+0x8874>
    cb58:	ldr	r0, [pc, #2184]	; d3e8 <main@@Base+0x8fb0>
    cb5c:	mov	r1, #128	; 0x80
    cb60:	ldr	r2, [pc, #2180]	; d3ec <main@@Base+0x8fb4>
    cb64:	add	r0, pc, r0
    cb68:	add	r2, pc, r2
    cb6c:	bl	3a38 <g_log@plt>
    cb70:	ldrh	r3, [r6, #36]	; 0x24
    cb74:	movw	r2, #282	; 0x11a
    cb78:	cmp	r3, r2
    cb7c:	beq	ccdc <main@@Base+0x88a4>
    cb80:	movw	r2, #65281	; 0xff01
    cb84:	cmp	r3, r2
    cb88:	bne	cd00 <main@@Base+0x88c8>
    cb8c:	bl	1cedc <main@@Base+0x18aa4>
    cb90:	mov	r1, r7
    cb94:	mov	r8, r0
    cb98:	bl	18ef8 <main@@Base+0x14ac0>
    cb9c:	mov	r0, r4
    cba0:	bl	3ea0 <g_usb_interface_get_index@plt>
    cba4:	mov	r1, r0
    cba8:	mov	r0, r8
    cbac:	bl	193a4 <main@@Base+0x14f6c>
    cbb0:	mov	r0, r4
    cbb4:	bl	3dbc <g_usb_interface_get_alternate@plt>
    cbb8:	mov	r1, r0
    cbbc:	mov	r0, r8
    cbc0:	bl	193c0 <main@@Base+0x14f88>
    cbc4:	mov	r0, r4
    cbc8:	bl	4188 <g_usb_interface_get_number@plt>
    cbcc:	strb	r0, [r6, #46]	; 0x2e
    cbd0:	mov	r1, r8
    cbd4:	ldr	r0, [r6, #16]
    cbd8:	bl	426c <g_ptr_array_add@plt>
    cbdc:	ldr	r2, [sp, #24]
    cbe0:	mov	r0, r7
    cbe4:	mov	r1, #2
    cbe8:	ldr	r8, [r2]
    cbec:	add	r8, r7, r8
    cbf0:	bl	c688 <main@@Base+0x8250>
    cbf4:	cmp	r0, #0
    cbf8:	bne	cce4 <main@@Base+0x88ac>
    cbfc:	mov	r0, r4
    cc00:	bl	3fd8 <g_usb_interface_get_protocol@plt>
    cc04:	cmp	r0, #1
    cc08:	moveq	r3, #0
    cc0c:	streq	r3, [r8, #8]
    cc10:	beq	cc44 <main@@Base+0x880c>
    cc14:	mov	r0, r4
    cc18:	bl	3fd8 <g_usb_interface_get_protocol@plt>
    cc1c:	cmp	r0, #2
    cc20:	streq	r0, [r8, #8]
    cc24:	beq	cc44 <main@@Base+0x880c>
    cc28:	mov	r0, r4
    cc2c:	bl	3fd8 <g_usb_interface_get_protocol@plt>
    cc30:	mov	r3, r0
    cc34:	mov	r1, #16
    cc38:	ldr	r0, [sp, #36]	; 0x24
    cc3c:	ldr	r2, [sp, #40]	; 0x28
    cc40:	bl	3a38 <g_log@plt>
    cc44:	ldr	r0, [sp, #64]	; 0x40
    cc48:	cmp	r0, #0
    cc4c:	beq	cc54 <main@@Base+0x881c>
    cc50:	bl	38e8 <g_error_free@plt>
    cc54:	ldr	r3, [fp, #4]
    cc58:	add	r5, r5, #1
    cc5c:	cmp	r5, r3
    cc60:	bcs	cf90 <main@@Base+0x8b58>
    cc64:	ldr	r3, [fp]
    cc68:	mov	r0, r7
    cc6c:	mov	r1, #4
    cc70:	mov	r2, #0
    cc74:	str	r2, [sp, #64]	; 0x40
    cc78:	ldr	r4, [r3, r5, lsl #2]
    cc7c:	bl	c688 <main@@Base+0x8250>
    cc80:	cmp	r0, #0
    cc84:	bne	caa0 <main@@Base+0x8668>
    cc88:	mov	r0, r4
    cc8c:	bl	3de0 <g_usb_interface_get_class@plt>
    cc90:	cmp	r0, #254	; 0xfe
    cc94:	bne	cc44 <main@@Base+0x880c>
    cc98:	mov	r0, r4
    cc9c:	bl	3e7c <g_usb_interface_get_subclass@plt>
    cca0:	cmp	r0, #1
    cca4:	bne	cc44 <main@@Base+0x880c>
    cca8:	b	caa0 <main@@Base+0x8668>
    ccac:	ldr	r0, [pc, #1852]	; d3f0 <main@@Base+0x8fb8>
    ccb0:	mov	r1, #16
    ccb4:	ldr	r2, [pc, #1848]	; d3f4 <main@@Base+0x8fbc>
    ccb8:	add	r0, pc, r0
    ccbc:	add	r2, pc, r2
    ccc0:	bl	3a38 <g_log@plt>
    ccc4:	mov	r3, #64	; 0x40
    ccc8:	strh	r3, [r6, #44]	; 0x2c
    cccc:	ldrh	r3, [r6, #36]	; 0x24
    ccd0:	movw	r2, #282	; 0x11a
    ccd4:	cmp	r3, r2
    ccd8:	bne	cb80 <main@@Base+0x8748>
    ccdc:	bl	1b5e8 <main@@Base+0x171b0>
    cce0:	b	cb90 <main@@Base+0x8758>
    cce4:	ldr	r0, [sp, #28]
    cce8:	mov	r1, #128	; 0x80
    ccec:	ldr	r2, [sp, #32]
    ccf0:	bl	3a38 <g_log@plt>
    ccf4:	mov	r3, #2
    ccf8:	str	r3, [r8, #8]
    ccfc:	b	cc44 <main@@Base+0x880c>
    cd00:	bl	18a6c <main@@Base+0x14634>
    cd04:	b	cb90 <main@@Base+0x8758>
    cd08:	ldr	r3, [pc, #1768]	; d3f8 <main@@Base+0x8fc0>
    cd0c:	mov	r0, r8
    cd10:	add	r1, sp, #68	; 0x44
    cd14:	add	r3, pc, r3
    cd18:	ldr	r8, [r3]
    cd1c:	bl	4320 <g_bytes_get_data@plt>
    cd20:	ldr	r3, [sp, #68]	; 0x44
    cd24:	mov	r9, r0
    cd28:	cmp	r3, #9
    cd2c:	beq	cf74 <main@@Base+0x8b3c>
    cd30:	cmp	r3, #7
    cd34:	beq	ced0 <main@@Base+0x8a98>
    cd38:	mov	r0, #0
    cd3c:	bl	3990 <g_string_new@plt>
    cd40:	ldr	r3, [sp, #68]	; 0x44
    cd44:	mov	r8, r0
    cd48:	ldr	sl, [pc, #1708]	; d3fc <main@@Base+0x8fc4>
    cd4c:	mov	r4, #0
    cd50:	cmp	r3, #0
    cd54:	add	sl, pc, sl
    cd58:	beq	cd7c <main@@Base+0x8944>
    cd5c:	mov	r0, r8
    cd60:	mov	r1, sl
    cd64:	ldrb	r2, [r9, r4]
    cd68:	bl	4344 <g_string_append_printf@plt>
    cd6c:	ldr	r3, [sp, #68]	; 0x44
    cd70:	add	r4, r4, #1
    cd74:	cmp	r4, r3
    cd78:	bcc	cd5c <main@@Base+0x8924>
    cd7c:	ldr	r1, [r8, #4]
    cd80:	cmp	r1, #0
    cd84:	beq	cd94 <main@@Base+0x895c>
    cd88:	sub	r1, r1, #1
    cd8c:	mov	r0, r8
    cd90:	bl	3960 <g_string_truncate@plt>
    cd94:	bl	3888 <g_io_error_quark@plt>
    cd98:	ldr	ip, [sp, #68]	; 0x44
    cd9c:	mov	r1, r0
    cda0:	ldr	r3, [pc, #1624]	; d400 <main@@Base+0x8fc8>
    cda4:	add	r0, sp, #64	; 0x40
    cda8:	mov	r2, #35	; 0x23
    cdac:	str	ip, [sp]
    cdb0:	add	r3, pc, r3
    cdb4:	ldr	ip, [r8]
    cdb8:	str	ip, [sp, #4]
    cdbc:	bl	4350 <g_set_error@plt>
    cdc0:	mov	r0, r8
    cdc4:	mov	r1, #1
    cdc8:	bl	40bc <g_string_free@plt>
    cdcc:	ldr	r0, [sp, #12]
    cdd0:	bl	4050 <g_usb_device_get_vid@plt>
    cdd4:	mov	r4, r0
    cdd8:	ldr	r0, [sp, #12]
    cddc:	bl	3abc <g_usb_device_get_pid@plt>
    cde0:	ldr	r2, [sp, #64]	; 0x40
    cde4:	mov	r3, r4
    cde8:	str	r0, [sp]
    cdec:	mov	r1, #16
    cdf0:	ldr	r0, [pc, #1548]	; d404 <main@@Base+0x8fcc>
    cdf4:	ldr	ip, [r2, #8]
    cdf8:	ldr	r2, [pc, #1544]	; d408 <main@@Base+0x8fd0>
    cdfc:	add	r0, pc, r0
    ce00:	add	r2, pc, r2
    ce04:	str	ip, [sp, #4]
    ce08:	bl	3a38 <g_log@plt>
    ce0c:	b	cc44 <main@@Base+0x880c>
    ce10:	ldr	r0, [pc, #1524]	; d40c <main@@Base+0x8fd4>
    ce14:	mov	r1, #128	; 0x80
    ce18:	ldr	r2, [pc, #1520]	; d410 <main@@Base+0x8fd8>
    ce1c:	add	r0, pc, r0
    ce20:	add	r2, pc, r2
    ce24:	bl	3a38 <g_log@plt>
    ce28:	ldrh	r3, [r6, #44]	; 0x2c
    ce2c:	movw	r2, #65535	; 0xffff
    ce30:	cmp	r3, r2
    ce34:	bne	cb50 <main@@Base+0x8718>
    ce38:	ldr	r0, [pc, #1492]	; d414 <main@@Base+0x8fdc>
    ce3c:	mov	r3, #1024	; 0x400
    ce40:	ldr	r2, [pc, #1488]	; d418 <main@@Base+0x8fe0>
    ce44:	mov	r1, #128	; 0x80
    ce48:	add	r0, pc, r0
    ce4c:	strh	r3, [r6, #44]	; 0x2c
    ce50:	add	r2, pc, r2
    ce54:	bl	3a38 <g_log@plt>
    ce58:	ldrh	r3, [r6, #44]	; 0x2c
    ce5c:	b	cb50 <main@@Base+0x8718>
    ce60:	ldr	r0, [pc, #1460]	; d41c <main@@Base+0x8fe4>
    ce64:	mov	r1, #128	; 0x80
    ce68:	ldr	r2, [pc, #1456]	; d420 <main@@Base+0x8fe8>
    ce6c:	add	r0, pc, r0
    ce70:	add	r2, pc, r2
    ce74:	bl	3a38 <g_log@plt>
    ce78:	b	cb38 <main@@Base+0x8700>
    ce7c:	mov	r0, r8
    ce80:	bl	bf30 <main@@Base+0x7af8>
    ce84:	strh	r0, [r6, #36]	; 0x24
    ce88:	mov	r3, r0
    ce8c:	b	caec <main@@Base+0x86b4>
    ce90:	ldr	r0, [pc, #1420]	; d424 <main@@Base+0x8fec>
    ce94:	mov	r1, #128	; 0x80
    ce98:	ldr	r2, [pc, #1416]	; d428 <main@@Base+0x8ff0>
    ce9c:	add	r0, pc, r0
    cea0:	add	r2, pc, r2
    cea4:	bl	3a38 <g_log@plt>
    cea8:	mvn	r3, #254	; 0xfe
    ceac:	strh	r3, [r6, #36]	; 0x24
    ceb0:	b	cb40 <main@@Base+0x8708>
    ceb4:	ldr	r0, [pc, #1392]	; d42c <main@@Base+0x8ff4>
    ceb8:	mov	r1, #128	; 0x80
    cebc:	ldr	r2, [pc, #1388]	; d430 <main@@Base+0x8ff8>
    cec0:	add	r0, pc, r0
    cec4:	add	r2, pc, r2
    cec8:	bl	3a38 <g_log@plt>
    cecc:	b	cb40 <main@@Base+0x8708>
    ced0:	ldr	r0, [pc, #1372]	; d434 <main@@Base+0x8ffc>
    ced4:	mov	r1, #16
    ced8:	ldr	r2, [pc, #1368]	; d438 <main@@Base+0x9000>
    cedc:	add	r0, pc, r0
    cee0:	add	r2, pc, r2
    cee4:	bl	3a38 <g_log@plt>
    cee8:	ldr	sl, [sp, #68]	; 0x44
    ceec:	mov	r1, r9
    cef0:	mov	r3, #9
    cef4:	add	r0, sp, #72	; 0x48
    cef8:	mov	r2, sl
    cefc:	bl	3864 <__memcpy_chk@plt>
    cf00:	mov	r3, sl
    cf04:	mov	r1, #16
    cf08:	mov	r2, #1
    cf0c:	strb	r1, [sp, #79]	; 0x4f
    cf10:	strb	r2, [sp, #80]	; 0x50
    cf14:	ldrb	r9, [sp, #72]	; 0x48
    cf18:	cmp	r9, r3
    cf1c:	bne	cf50 <main@@Base+0x8b18>
    cf20:	ldrh	r2, [sp, #79]	; 0x4f
    cf24:	add	r3, r7, r8
    cf28:	ldr	r1, [sp, #76]	; 0x4c
    cf2c:	movw	r0, #282	; 0x11a
    cf30:	cmp	r2, r0
    cf34:	ubfx	r1, r1, #8, #16
    cf38:	strh	r2, [r3, #36]	; 0x24
    cf3c:	strh	r1, [r3, #44]	; 0x2c
    cf40:	ldrb	r2, [sp, #74]	; 0x4a
    cf44:	beq	d148 <main@@Base+0x8d10>
    cf48:	str	r2, [r7, r8]
    cf4c:	b	cac4 <main@@Base+0x868c>
    cf50:	bl	3888 <g_io_error_quark@plt>
    cf54:	ldr	r3, [pc, #1248]	; d43c <main@@Base+0x9004>
    cf58:	mov	r1, r0
    cf5c:	str	r9, [sp]
    cf60:	add	r0, sp, #64	; 0x40
    cf64:	mov	r2, #35	; 0x23
    cf68:	add	r3, pc, r3
    cf6c:	bl	4350 <g_set_error@plt>
    cf70:	b	cdcc <main@@Base+0x8994>
    cf74:	ldr	r0, [r0]
    cf78:	add	ip, sp, #72	; 0x48
    cf7c:	ldr	r1, [r9, #4]
    cf80:	ldrb	r2, [r9, #8]
    cf84:	stmia	ip!, {r0, r1}
    cf88:	strb	r2, [ip]
    cf8c:	b	cf14 <main@@Base+0x8adc>
    cf90:	ldr	r3, [r6, #8]
    cf94:	cmp	r3, #0
    cf98:	beq	cfa8 <main@@Base+0x8b70>
    cf9c:	ldr	r3, [r6, #4]
    cfa0:	tst	r3, #16
    cfa4:	beq	cfd0 <main@@Base+0x8b98>
    cfa8:	ldr	r0, [sp, #12]
    cfac:	bl	4050 <g_usb_device_get_vid@plt>
    cfb0:	strh	r0, [r6, #40]	; 0x28
    cfb4:	ldr	r0, [sp, #12]
    cfb8:	bl	3abc <g_usb_device_get_pid@plt>
    cfbc:	strh	r0, [r6, #38]	; 0x26
    cfc0:	ldr	r0, [sp, #12]
    cfc4:	bl	3c3c <g_usb_device_get_release@plt>
    cfc8:	ldr	r3, [r6, #4]
    cfcc:	strh	r0, [r6, #42]	; 0x2a
    cfd0:	tst	r3, #64	; 0x40
    cfd4:	beq	d084 <main@@Base+0x8c4c>
    cfd8:	ldr	r3, [r6, #16]
    cfdc:	ldr	r3, [r3, #4]
    cfe0:	cmp	r3, #0
    cfe4:	beq	d1c8 <main@@Base+0x8d90>
    cfe8:	mov	r0, fp
    cfec:	bl	4224 <g_ptr_array_unref@plt>
    cff0:	mov	r0, r7
    cff4:	bl	c7b8 <main@@Base+0x8380>
    cff8:	cmp	r0, #0
    cffc:	bne	d158 <main@@Base+0x8d20>
    d000:	mov	r0, r7
    d004:	mov	r1, #512	; 0x200
    d008:	bl	c688 <main@@Base+0x8250>
    d00c:	cmp	r0, #0
    d010:	moveq	r0, #1
    d014:	beq	d04c <main@@Base+0x8c14>
    d018:	bl	1f330 <main@@Base+0x1aef8>
    d01c:	mov	r1, r0
    d020:	ldr	r0, [sp, #44]	; 0x2c
    d024:	bl	39d8 <g_type_check_instance_cast@plt>
    d028:	mov	r4, r0
    d02c:	bl	4290 <fwupd_device_get_type@plt>
    d030:	mov	r1, r0
    d034:	mov	r0, r4
    d038:	bl	39d8 <g_type_check_instance_cast@plt>
    d03c:	mov	r2, #64	; 0x40
    d040:	mov	r3, #0
    d044:	bl	41c4 <fwupd_device_add_flag@plt>
    d048:	mov	r0, #1
    d04c:	ldr	r1, [sp, #48]	; 0x30
    d050:	ldr	r2, [sp, #84]	; 0x54
    d054:	ldr	r3, [r1]
    d058:	cmp	r2, r3
    d05c:	bne	d328 <main@@Base+0x8ef0>
    d060:	add	sp, sp, #92	; 0x5c
    d064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d068:	ldr	r0, [pc, #976]	; d440 <main@@Base+0x9008>
    d06c:	mov	r1, #16
    d070:	ldr	r2, [pc, #972]	; d444 <main@@Base+0x900c>
    d074:	add	r0, pc, r0
    d078:	add	r2, pc, r2
    d07c:	bl	3a38 <g_log@plt>
    d080:	b	c9dc <main@@Base+0x85a4>
    d084:	ldr	r2, [r6, #16]
    d088:	ldr	r2, [r2, #4]
    d08c:	cmp	r2, #0
    d090:	beq	d0f0 <main@@Base+0x8cb8>
    d094:	tst	r3, #1024	; 0x400
    d098:	ldrne	r2, [sp, #56]	; 0x38
    d09c:	ldrne	r3, [r7, r2]
    d0a0:	bicne	r3, r3, #2
    d0a4:	strne	r3, [r7, r2]
    d0a8:	b	cfe8 <main@@Base+0x8bb0>
    d0ac:	ldr	r0, [r6]
    d0b0:	mov	r1, sl
    d0b4:	bl	441c <g_strcmp0@plt>
    d0b8:	cmp	r0, #0
    d0bc:	ldreq	r3, [r5, #4]
    d0c0:	orreq	r3, r3, #16
    d0c4:	streq	r3, [r5, #4]
    d0c8:	beq	c984 <main@@Base+0x854c>
    d0cc:	ldr	r0, [r6]
    d0d0:	ldr	r1, [sp, #12]
    d0d4:	bl	441c <g_strcmp0@plt>
    d0d8:	cmp	r0, #0
    d0dc:	bne	d1a4 <main@@Base+0x8d6c>
    d0e0:	ldr	r3, [r5, #4]
    d0e4:	orr	r3, r3, #32
    d0e8:	str	r3, [r5, #4]
    d0ec:	b	c984 <main@@Base+0x854c>
    d0f0:	bl	40a4 <fwupd_error_quark@plt>
    d0f4:	ldr	r3, [pc, #844]	; d448 <main@@Base+0x9010>
    d0f8:	mov	r1, r0
    d0fc:	mov	r2, #10
    d100:	ldr	r0, [sp, #52]	; 0x34
    d104:	add	r3, pc, r3
    d108:	bl	3ae0 <g_set_error_literal@plt>
    d10c:	mov	r0, fp
    d110:	bl	4224 <g_ptr_array_unref@plt>
    d114:	ldr	r0, [sp, #60]	; 0x3c
    d118:	bl	4050 <g_usb_device_get_vid@plt>
    d11c:	mov	r4, r0
    d120:	ldr	r0, [sp, #60]	; 0x3c
    d124:	bl	3abc <g_usb_device_get_pid@plt>
    d128:	ldr	r1, [pc, #796]	; d44c <main@@Base+0x9014>
    d12c:	mov	r2, r4
    d130:	add	r1, pc, r1
    d134:	mov	r3, r0
    d138:	ldr	r0, [sp, #52]	; 0x34
    d13c:	bl	4404 <g_prefix_error@plt>
    d140:	mov	r0, #0
    d144:	b	d04c <main@@Base+0x8c14>
    d148:	tst	r2, #128	; 0x80
    d14c:	movne	r1, #4096	; 0x1000
    d150:	strhne	r1, [r3, #44]	; 0x2c
    d154:	b	cf48 <main@@Base+0x8b10>
    d158:	bl	1f330 <main@@Base+0x1aef8>
    d15c:	mov	r1, r0
    d160:	ldr	r0, [sp, #44]	; 0x2c
    d164:	bl	39d8 <g_type_check_instance_cast@plt>
    d168:	mov	r4, r0
    d16c:	bl	4290 <fwupd_device_get_type@plt>
    d170:	mov	r1, r0
    d174:	mov	r0, r4
    d178:	bl	39d8 <g_type_check_instance_cast@plt>
    d17c:	mov	r2, #2
    d180:	mov	r3, #0
    d184:	bl	41c4 <fwupd_device_add_flag@plt>
    d188:	bl	1f330 <main@@Base+0x1aef8>
    d18c:	mov	r1, r0
    d190:	ldr	r0, [sp, #44]	; 0x2c
    d194:	bl	39d8 <g_type_check_instance_cast@plt>
    d198:	movw	r1, #5000	; 0x1388
    d19c:	bl	20d78 <main@@Base+0x1c940>
    d1a0:	b	d000 <main@@Base+0x8bc8>
    d1a4:	ldr	r0, [r6]
    d1a8:	ldr	r1, [sp, #16]
    d1ac:	bl	441c <g_strcmp0@plt>
    d1b0:	cmp	r0, #0
    d1b4:	bne	d224 <main@@Base+0x8dec>
    d1b8:	ldr	r3, [r5, #4]
    d1bc:	orr	r3, r3, #64	; 0x40
    d1c0:	str	r3, [r5, #4]
    d1c4:	b	c984 <main@@Base+0x854c>
    d1c8:	ldr	r0, [pc, #640]	; d450 <main@@Base+0x9018>
    d1cc:	mov	r1, #128	; 0x80
    d1d0:	ldr	r2, [pc, #636]	; d454 <main@@Base+0x901c>
    d1d4:	add	r0, pc, r0
    d1d8:	add	r2, pc, r2
    d1dc:	bl	3a38 <g_log@plt>
    d1e0:	mov	r2, #0
    d1e4:	mvn	r3, #0
    d1e8:	str	r2, [r6, #8]
    d1ec:	ldr	r0, [sp, #12]
    d1f0:	strb	r3, [r6, #46]	; 0x2e
    d1f4:	bl	4050 <g_usb_device_get_vid@plt>
    d1f8:	strh	r0, [r6, #40]	; 0x28
    d1fc:	ldr	r0, [sp, #12]
    d200:	bl	3abc <g_usb_device_get_pid@plt>
    d204:	strh	r0, [r6, #38]	; 0x26
    d208:	ldr	r0, [sp, #12]
    d20c:	bl	3c3c <g_usb_device_get_release@plt>
    d210:	ldr	r1, [sp, #56]	; 0x38
    d214:	mov	r3, #3
    d218:	strh	r0, [r6, #42]	; 0x2a
    d21c:	str	r3, [r7, r1]
    d220:	b	cfe8 <main@@Base+0x8bb0>
    d224:	ldr	r0, [r6]
    d228:	ldr	r1, [sp, #20]
    d22c:	bl	441c <g_strcmp0@plt>
    d230:	cmp	r0, #0
    d234:	ldreq	r3, [r5, #4]
    d238:	orreq	r3, r3, #128	; 0x80
    d23c:	streq	r3, [r5, #4]
    d240:	beq	c984 <main@@Base+0x854c>
    d244:	ldr	r1, [pc, #524]	; d458 <main@@Base+0x9020>
    d248:	ldr	r0, [r6]
    d24c:	add	r1, pc, r1
    d250:	bl	441c <g_strcmp0@plt>
    d254:	cmp	r0, #0
    d258:	bne	d280 <main@@Base+0x8e48>
    d25c:	ldr	r3, [r5, #4]
    d260:	orr	r3, r3, #256	; 0x100
    d264:	str	r3, [r5, #4]
    d268:	b	c984 <main@@Base+0x854c>
    d26c:	mov	r4, r0
    d270:	mov	r0, fp
    d274:	bl	4224 <g_ptr_array_unref@plt>
    d278:	mov	r0, r4
    d27c:	bl	42f0 <_Unwind_Resume@plt>
    d280:	ldr	r1, [pc, #468]	; d45c <main@@Base+0x9024>
    d284:	ldr	r0, [r6]
    d288:	add	r1, pc, r1
    d28c:	bl	441c <g_strcmp0@plt>
    d290:	cmp	r0, #0
    d294:	bne	d2dc <main@@Base+0x8ea4>
    d298:	ldr	r3, [r5, #4]
    d29c:	orr	r3, r3, #512	; 0x200
    d2a0:	str	r3, [r5, #4]
    d2a4:	b	c984 <main@@Base+0x854c>
    d2a8:	mov	r4, r0
    d2ac:	b	d278 <main@@Base+0x8e40>
    d2b0:	cmp	r8, #0
    d2b4:	mov	r4, r0
    d2b8:	beq	d2c8 <main@@Base+0x8e90>
    d2bc:	mov	r0, r8
    d2c0:	mov	r1, #1
    d2c4:	bl	40bc <g_string_free@plt>
    d2c8:	ldr	r0, [sp, #64]	; 0x40
    d2cc:	cmp	r0, #0
    d2d0:	beq	d270 <main@@Base+0x8e38>
    d2d4:	bl	38e8 <g_error_free@plt>
    d2d8:	b	d270 <main@@Base+0x8e38>
    d2dc:	ldr	r1, [pc, #380]	; d460 <main@@Base+0x9028>
    d2e0:	ldr	r0, [r6]
    d2e4:	add	r1, pc, r1
    d2e8:	bl	441c <g_strcmp0@plt>
    d2ec:	cmp	r0, #0
    d2f0:	bne	d32c <main@@Base+0x8ef4>
    d2f4:	ldr	r3, [r5, #4]
    d2f8:	orr	r3, r3, #1024	; 0x400
    d2fc:	str	r3, [r5, #4]
    d300:	b	c984 <main@@Base+0x854c>
    d304:	mov	r4, r0
    d308:	b	d2c8 <main@@Base+0x8e90>
    d30c:	mov	r4, r0
    d310:	mov	r0, fp
    d314:	bl	3e1c <g_strfreev@plt>
    d318:	mov	r0, r4
    d31c:	bl	42f0 <_Unwind_Resume@plt>
    d320:	mov	r4, r0
    d324:	b	d2bc <main@@Base+0x8e84>
    d328:	bl	3e4c <__stack_chk_fail@plt>
    d32c:	ldr	r1, [pc, #304]	; d464 <main@@Base+0x902c>
    d330:	ldr	r0, [r6]
    d334:	add	r1, pc, r1
    d338:	bl	441c <g_strcmp0@plt>
    d33c:	cmp	r0, #0
    d340:	ldreq	r3, [r5, #4]
    d344:	orreq	r3, r3, #2048	; 0x800
    d348:	streq	r3, [r5, #4]
    d34c:	beq	c984 <main@@Base+0x854c>
    d350:	ldr	r1, [pc, #272]	; d468 <main@@Base+0x9030>
    d354:	ldr	r0, [r6]
    d358:	add	r1, pc, r1
    d35c:	bl	441c <g_strcmp0@plt>
    d360:	cmp	r0, #0
    d364:	ldreq	r3, [r5, #4]
    d368:	orreq	r3, r3, #4
    d36c:	streq	r3, [r5, #4]
    d370:	beq	c984 <main@@Base+0x854c>
    d374:	ldr	r1, [pc, #240]	; d46c <main@@Base+0x9034>
    d378:	ldr	r0, [r6]
    d37c:	add	r1, pc, r1
    d380:	bl	441c <g_strcmp0@plt>
    d384:	cmp	r0, #0
    d388:	ldreq	r3, [r5, #4]
    d38c:	orreq	r3, r3, #4096	; 0x1000
    d390:	streq	r3, [r5, #4]
    d394:	b	c984 <main@@Base+0x854c>
    d398:	andeq	r2, r3, ip, lsr #6
    d39c:	andeq	r0, r0, r0, lsr r4
    d3a0:	muleq	r3, ip, r7
    d3a4:	andeq	sl, r1, ip, asr #3
    d3a8:	andeq	sl, r1, r0, lsl sp
    d3ac:	andeq	sl, r1, ip, lsl #3
    d3b0:	muleq	r1, r8, r1
    d3b4:	andeq	sl, r1, r0, lsr #3
    d3b8:	andeq	sl, r1, r8, lsr #3
    d3bc:			; <UNDEFINED> instruction: 0x0001a1bc
    d3c0:	andeq	sl, r1, r4, asr #3
    d3c4:	andeq	r2, r3, r0, lsr #12
    d3c8:	andeq	sl, r1, r4, asr r2
    d3cc:	muleq	r3, ip, r5
    d3d0:	andeq	r8, r1, r0, lsr #8
    d3d4:	andeq	sl, r1, r0, asr r3
    d3d8:	andeq	r8, r1, r4, lsl #8
    d3dc:	andeq	sl, r1, r4, lsr #6
    d3e0:	andeq	r8, r1, r0, ror #6
    d3e4:	ldrdeq	sl, [r1], -ip
    d3e8:	andeq	r8, r1, r8, lsr #6
    d3ec:	strdeq	sl, [r1], -r8
    d3f0:	ldrdeq	r8, [r1], -r4
    d3f4:	andeq	sl, r1, ip, asr #1
    d3f8:	andeq	r2, r3, ip, ror #5
    d3fc:	andeq	r9, r1, r4, lsr #29
    d400:	andeq	r9, r1, r0, asr lr
    d404:	muleq	r1, r0, r0
    d408:	andeq	r9, r1, r0, lsl #29
    d40c:	andeq	r8, r1, r0, ror r0
    d410:	andeq	r9, r1, ip, lsr #29
    d414:	andeq	r8, r1, r4, asr #32
    d418:	andeq	r9, r1, r8, ror #29
    d41c:	andeq	r8, r1, r0, lsr #32
    d420:	andeq	r9, r1, r8, lsl #29
    d424:	strdeq	r7, [r1], -r0
    d428:	andeq	r9, r1, r8, lsr lr
    d42c:	andeq	r7, r1, ip, asr #31
    d430:	andeq	r9, r1, r4, lsr #28
    d434:			; <UNDEFINED> instruction: 0x00017fb0
    d438:	andeq	r9, r1, r8, ror #25
    d43c:	andeq	r9, r1, r8, ror #25
    d440:	andeq	r7, r1, r8, lsl lr
    d444:	andeq	r9, r1, r4, lsr fp
    d448:	andeq	r9, r1, ip, lsr #26
    d44c:	andeq	r9, r1, r4, lsl sp
    d450:			; <UNDEFINED> instruction: 0x00017cb8
    d454:	andeq	r9, r1, r4, lsr ip
    d458:	strdeq	r9, [r1], -r8
    d45c:	andeq	r9, r1, ip, asr #17
    d460:	andeq	r9, r1, r0, lsl #17
    d464:	andeq	r9, r1, r0, asr #16
    d468:	andeq	r9, r1, r0, lsr r8
    d46c:	andeq	r9, r1, r0, lsr #16
    d470:	ldr	r3, [pc, #120]	; d4f0 <main@@Base+0x90b8>
    d474:	push	{r4, r5, r6, lr}
    d478:	add	r3, pc, r3
    d47c:	mov	r4, r0
    d480:	mov	r5, r1
    d484:	ldr	r6, [r3]
    d488:	bl	c2b4 <main@@Base+0x7e7c>
    d48c:	cmp	r4, #0
    d490:	beq	d4c0 <main@@Base+0x9088>
    d494:	ldr	r3, [r4]
    d498:	cmp	r3, #0
    d49c:	beq	d4ac <main@@Base+0x9074>
    d4a0:	ldr	r3, [r3]
    d4a4:	cmp	r0, r3
    d4a8:	beq	d4e4 <main@@Base+0x90ac>
    d4ac:	mov	r1, r0
    d4b0:	mov	r0, r4
    d4b4:	bl	3fcc <g_type_check_instance_is_a@plt>
    d4b8:	cmp	r0, #0
    d4bc:	bne	d4e4 <main@@Base+0x90ac>
    d4c0:	ldr	r1, [pc, #44]	; d4f4 <main@@Base+0x90bc>
    d4c4:	ldr	r0, [pc, #44]	; d4f8 <main@@Base+0x90c0>
    d4c8:	ldr	r2, [pc, #44]	; d4fc <main@@Base+0x90c4>
    d4cc:	add	r1, pc, r1
    d4d0:	add	r0, pc, r0
    d4d4:	add	r1, r1, #192	; 0xc0
    d4d8:	add	r2, pc, r2
    d4dc:	pop	{r4, r5, r6, lr}
    d4e0:	b	3870 <g_return_if_fail_warning@plt>
    d4e4:	add	r4, r4, r6
    d4e8:	str	r5, [r4, #52]	; 0x34
    d4ec:	pop	{r4, r5, r6, pc}
    d4f0:	andeq	r1, r3, r8, lsl #23
    d4f4:	andeq	r9, r1, r4, asr r2
    d4f8:			; <UNDEFINED> instruction: 0x000179bc
    d4fc:	ldrdeq	r9, [r1], -r4
    d500:	push	{r3, r4, r5, lr}
    d504:	mov	r4, r0
    d508:	ldr	r3, [pc, #124]	; d58c <main@@Base+0x9154>
    d50c:	add	r3, pc, r3
    d510:	ldr	r5, [r3]
    d514:	bl	c2b4 <main@@Base+0x7e7c>
    d518:	cmp	r4, #0
    d51c:	beq	d54c <main@@Base+0x9114>
    d520:	ldr	r3, [r4]
    d524:	cmp	r3, #0
    d528:	beq	d538 <main@@Base+0x9100>
    d52c:	ldr	r3, [r3]
    d530:	cmp	r0, r3
    d534:	beq	d574 <main@@Base+0x913c>
    d538:	mov	r1, r0
    d53c:	mov	r0, r4
    d540:	bl	3fcc <g_type_check_instance_is_a@plt>
    d544:	cmp	r0, #0
    d548:	bne	d574 <main@@Base+0x913c>
    d54c:	ldr	r1, [pc, #60]	; d590 <main@@Base+0x9158>
    d550:	ldr	r0, [pc, #60]	; d594 <main@@Base+0x915c>
    d554:	ldr	r2, [pc, #60]	; d598 <main@@Base+0x9160>
    d558:	add	r1, pc, r1
    d55c:	add	r0, pc, r0
    d560:	add	r1, r1, #216	; 0xd8
    d564:	add	r2, pc, r2
    d568:	bl	3870 <g_return_if_fail_warning@plt>
    d56c:	mov	r0, #0
    d570:	pop	{r3, r4, r5, pc}
    d574:	add	r4, r4, r5
    d578:	ldr	r0, [r4, #8]
    d57c:	cmp	r0, #1
    d580:	movhi	r0, #0
    d584:	movls	r0, #1
    d588:	pop	{r3, r4, r5, pc}
    d58c:	strdeq	r1, [r3], -r4
    d590:	andeq	r9, r1, r8, asr #3
    d594:	andeq	r7, r1, r0, lsr r9
    d598:	andeq	r9, r1, r8, asr #10
    d59c:	push	{r3, r4, r5, lr}
    d5a0:	mov	r4, r0
    d5a4:	ldr	r3, [pc, #112]	; d61c <main@@Base+0x91e4>
    d5a8:	add	r3, pc, r3
    d5ac:	ldr	r5, [r3]
    d5b0:	bl	c2b4 <main@@Base+0x7e7c>
    d5b4:	cmp	r4, #0
    d5b8:	beq	d5e8 <main@@Base+0x91b0>
    d5bc:	ldr	r3, [r4]
    d5c0:	cmp	r3, #0
    d5c4:	beq	d5d4 <main@@Base+0x919c>
    d5c8:	ldr	r3, [r3]
    d5cc:	cmp	r0, r3
    d5d0:	beq	d610 <main@@Base+0x91d8>
    d5d4:	mov	r1, r0
    d5d8:	mov	r0, r4
    d5dc:	bl	3fcc <g_type_check_instance_is_a@plt>
    d5e0:	cmp	r0, #0
    d5e4:	bne	d610 <main@@Base+0x91d8>
    d5e8:	ldr	r1, [pc, #48]	; d620 <main@@Base+0x91e8>
    d5ec:	ldr	r0, [pc, #48]	; d624 <main@@Base+0x91ec>
    d5f0:	ldr	r2, [pc, #48]	; d628 <main@@Base+0x91f0>
    d5f4:	add	r1, pc, r1
    d5f8:	add	r0, pc, r0
    d5fc:	add	r1, r1, #240	; 0xf0
    d600:	add	r2, pc, r2
    d604:	bl	3870 <g_return_if_fail_warning@plt>
    d608:	mov	r0, #0
    d60c:	pop	{r3, r4, r5, pc}
    d610:	add	r4, r4, r5
    d614:	ldr	r0, [r4, #52]	; 0x34
    d618:	pop	{r3, r4, r5, pc}
    d61c:	andeq	r1, r3, r8, asr sl
    d620:	andeq	r9, r1, ip, lsr #2
    d624:	muleq	r1, r4, r8
    d628:	andeq	r9, r1, ip, lsr #9
    d62c:	push	{r3, r4, r5, lr}
    d630:	mov	r4, r0
    d634:	ldr	r3, [pc, #112]	; d6ac <main@@Base+0x9274>
    d638:	add	r3, pc, r3
    d63c:	ldr	r5, [r3]
    d640:	bl	c2b4 <main@@Base+0x7e7c>
    d644:	cmp	r4, #0
    d648:	beq	d678 <main@@Base+0x9240>
    d64c:	ldr	r3, [r4]
    d650:	cmp	r3, #0
    d654:	beq	d664 <main@@Base+0x922c>
    d658:	ldr	r3, [r3]
    d65c:	cmp	r0, r3
    d660:	beq	d6a0 <main@@Base+0x9268>
    d664:	mov	r1, r0
    d668:	mov	r0, r4
    d66c:	bl	3fcc <g_type_check_instance_is_a@plt>
    d670:	cmp	r0, #0
    d674:	bne	d6a0 <main@@Base+0x9268>
    d678:	ldr	r1, [pc, #48]	; d6b0 <main@@Base+0x9278>
    d67c:	ldr	r0, [pc, #48]	; d6b4 <main@@Base+0x927c>
    d680:	ldr	r2, [pc, #48]	; d6b8 <main@@Base+0x9280>
    d684:	add	r1, pc, r1
    d688:	add	r0, pc, r0
    d68c:	add	r1, r1, #264	; 0x108
    d690:	add	r2, pc, r2
    d694:	bl	3870 <g_return_if_fail_warning@plt>
    d698:	mov	r0, #0
    d69c:	pop	{r3, r4, r5, pc}
    d6a0:	add	r4, r4, r5
    d6a4:	ldr	r0, [r4, #8]
    d6a8:	pop	{r3, r4, r5, pc}
    d6ac:	andeq	r1, r3, r8, asr #19
    d6b0:	muleq	r1, ip, r0
    d6b4:	andeq	r7, r1, r4, lsl #16
    d6b8:	andeq	r9, r1, ip, lsl r4
    d6bc:	push	{r3, r4, r5, lr}
    d6c0:	mov	r4, r0
    d6c4:	ldr	r3, [pc, #112]	; d73c <main@@Base+0x9304>
    d6c8:	add	r3, pc, r3
    d6cc:	ldr	r5, [r3]
    d6d0:	bl	c2b4 <main@@Base+0x7e7c>
    d6d4:	cmp	r4, #0
    d6d8:	beq	d708 <main@@Base+0x92d0>
    d6dc:	ldr	r3, [r4]
    d6e0:	cmp	r3, #0
    d6e4:	beq	d6f4 <main@@Base+0x92bc>
    d6e8:	ldr	r3, [r3]
    d6ec:	cmp	r0, r3
    d6f0:	beq	d730 <main@@Base+0x92f8>
    d6f4:	mov	r1, r0
    d6f8:	mov	r0, r4
    d6fc:	bl	3fcc <g_type_check_instance_is_a@plt>
    d700:	cmp	r0, #0
    d704:	bne	d730 <main@@Base+0x92f8>
    d708:	ldr	r1, [pc, #48]	; d740 <main@@Base+0x9308>
    d70c:	ldr	r0, [pc, #48]	; d744 <main@@Base+0x930c>
    d710:	ldr	r2, [pc, #48]	; d748 <main@@Base+0x9310>
    d714:	add	r1, pc, r1
    d718:	add	r0, pc, r0
    d71c:	add	r1, r1, #288	; 0x120
    d720:	add	r2, pc, r2
    d724:	bl	3870 <g_return_if_fail_warning@plt>
    d728:	mov	r0, #0
    d72c:	pop	{r3, r4, r5, pc}
    d730:	add	r4, r4, r5
    d734:	ldr	r0, [r4, #12]
    d738:	pop	{r3, r4, r5, pc}
    d73c:	andeq	r1, r3, r8, lsr r9
    d740:	andeq	r9, r1, ip
    d744:	andeq	r7, r1, r4, ror r7
    d748:	andeq	r9, r1, ip, lsl #7
    d74c:	ldr	r3, [pc, #132]	; d7d8 <main@@Base+0x93a0>
    d750:	push	{r4, r5, r6, lr}
    d754:	add	r3, pc, r3
    d758:	mov	r4, r0
    d75c:	mov	r5, r1
    d760:	ldr	r6, [r3]
    d764:	bl	c2b4 <main@@Base+0x7e7c>
    d768:	cmp	r4, #0
    d76c:	beq	d79c <main@@Base+0x9364>
    d770:	ldr	r3, [r4]
    d774:	cmp	r3, #0
    d778:	beq	d788 <main@@Base+0x9350>
    d77c:	ldr	r3, [r3]
    d780:	cmp	r0, r3
    d784:	beq	d7c4 <main@@Base+0x938c>
    d788:	mov	r1, r0
    d78c:	mov	r0, r4
    d790:	bl	3fcc <g_type_check_instance_is_a@plt>
    d794:	cmp	r0, #0
    d798:	bne	d7c4 <main@@Base+0x938c>
    d79c:	ldr	r1, [pc, #56]	; d7dc <main@@Base+0x93a4>
    d7a0:	ldr	r0, [pc, #56]	; d7e0 <main@@Base+0x93a8>
    d7a4:	ldr	r2, [pc, #56]	; d7e4 <main@@Base+0x93ac>
    d7a8:	add	r1, pc, r1
    d7ac:	add	r0, pc, r0
    d7b0:	add	r1, r1, #312	; 0x138
    d7b4:	add	r2, pc, r2
    d7b8:	bl	3870 <g_return_if_fail_warning@plt>
    d7bc:	mov	r0, #0
    d7c0:	pop	{r4, r5, r6, pc}
    d7c4:	ldr	r3, [r4, r6]
    d7c8:	tst	r5, r3
    d7cc:	moveq	r0, #0
    d7d0:	movne	r0, #1
    d7d4:	pop	{r4, r5, r6, pc}
    d7d8:	andeq	r1, r3, ip, lsr #17
    d7dc:	andeq	r8, r1, r8, ror pc
    d7e0:	andeq	r7, r1, r0, ror #13
    d7e4:	strdeq	r9, [r1], -r8
    d7e8:	ldr	r3, [pc, #124]	; d86c <main@@Base+0x9434>
    d7ec:	push	{r4, r5, r6, lr}
    d7f0:	add	r3, pc, r3
    d7f4:	mov	r4, r0
    d7f8:	mov	r6, r1
    d7fc:	ldr	r5, [r3]
    d800:	bl	c2b4 <main@@Base+0x7e7c>
    d804:	cmp	r4, #0
    d808:	beq	d838 <main@@Base+0x9400>
    d80c:	ldr	r3, [r4]
    d810:	cmp	r3, #0
    d814:	beq	d824 <main@@Base+0x93ec>
    d818:	ldr	r3, [r3]
    d81c:	cmp	r0, r3
    d820:	beq	d85c <main@@Base+0x9424>
    d824:	mov	r1, r0
    d828:	mov	r0, r4
    d82c:	bl	3fcc <g_type_check_instance_is_a@plt>
    d830:	cmp	r0, #0
    d834:	bne	d85c <main@@Base+0x9424>
    d838:	ldr	r1, [pc, #48]	; d870 <main@@Base+0x9438>
    d83c:	ldr	r0, [pc, #48]	; d874 <main@@Base+0x943c>
    d840:	ldr	r2, [pc, #48]	; d878 <main@@Base+0x9440>
    d844:	add	r1, pc, r1
    d848:	add	r0, pc, r0
    d84c:	add	r1, r1, #340	; 0x154
    d850:	add	r2, pc, r2
    d854:	pop	{r4, r5, r6, lr}
    d858:	b	3870 <g_return_if_fail_warning@plt>
    d85c:	ldr	r3, [r4, r5]
    d860:	bic	r6, r3, r6
    d864:	str	r6, [r4, r5]
    d868:	pop	{r4, r5, r6, pc}
    d86c:	andeq	r1, r3, r0, lsl r8
    d870:	ldrdeq	r8, [r1], -ip
    d874:	andeq	r7, r1, r4, asr #12
    d878:	andeq	r9, r1, ip, asr r2
    d87c:	ldr	r3, [pc, #68]	; d8c8 <main@@Base+0x9490>
    d880:	push	{r4, r5, r6, lr}
    d884:	add	r3, pc, r3
    d888:	mov	r4, r1
    d88c:	ldr	r6, [r3]
    d890:	add	r6, r0, r6
    d894:	ldr	r5, [r6, #20]
    d898:	cmp	r1, r5
    d89c:	popeq	{r4, r5, r6, pc}
    d8a0:	cmp	r1, #0
    d8a4:	beq	d8b0 <main@@Base+0x9478>
    d8a8:	mov	r0, r1
    d8ac:	bl	381c <g_object_ref@plt>
    d8b0:	cmp	r5, #0
    d8b4:	str	r4, [r6, #20]
    d8b8:	popeq	{r4, r5, r6, pc}
    d8bc:	mov	r0, r5
    d8c0:	pop	{r4, r5, r6, lr}
    d8c4:	b	4110 <g_object_unref@plt>
    d8c8:	andeq	r1, r3, ip, ror r7
    d8cc:	ldr	r3, [pc, #16]	; d8e4 <main@@Base+0x94ac>
    d8d0:	add	r3, pc, r3
    d8d4:	ldr	r3, [r3]
    d8d8:	add	r0, r0, r3
    d8dc:	ldr	r0, [r0, #20]
    d8e0:	bx	lr
    d8e4:	andeq	r1, r3, r0, lsr r7
    d8e8:	push	{r4, lr}
    d8ec:	mov	r4, r0
    d8f0:	bl	c2b4 <main@@Base+0x7e7c>
    d8f4:	ldr	r1, [pc, #16]	; d90c <main@@Base+0x94d4>
    d8f8:	mov	r2, r4
    d8fc:	mov	r3, #0
    d900:	add	r1, pc, r1
    d904:	pop	{r4, lr}
    d908:	b	3804 <g_object_new@plt>
    d90c:	andeq	r9, r1, r4, ror #10
    d910:	push	{r3, r4, r5, lr}
    d914:	mov	r4, r0
    d918:	ldr	r3, [pc, #112]	; d990 <main@@Base+0x9558>
    d91c:	add	r3, pc, r3
    d920:	ldr	r5, [r3]
    d924:	bl	c2b4 <main@@Base+0x7e7c>
    d928:	cmp	r4, #0
    d92c:	beq	d95c <main@@Base+0x9524>
    d930:	ldr	r3, [r4]
    d934:	cmp	r3, #0
    d938:	beq	d948 <main@@Base+0x9510>
    d93c:	ldr	r3, [r3]
    d940:	cmp	r0, r3
    d944:	beq	d984 <main@@Base+0x954c>
    d948:	mov	r1, r0
    d94c:	mov	r0, r4
    d950:	bl	3fcc <g_type_check_instance_is_a@plt>
    d954:	cmp	r0, #0
    d958:	bne	d984 <main@@Base+0x954c>
    d95c:	ldr	r1, [pc, #48]	; d994 <main@@Base+0x955c>
    d960:	ldr	r0, [pc, #48]	; d998 <main@@Base+0x9560>
    d964:	ldr	r2, [pc, #48]	; d99c <main@@Base+0x9564>
    d968:	add	r1, pc, r1
    d96c:	add	r0, pc, r0
    d970:	add	r1, r1, #368	; 0x170
    d974:	add	r2, pc, r2
    d978:	bl	3870 <g_return_if_fail_warning@plt>
    d97c:	mov	r0, #0
    d980:	pop	{r3, r4, r5, pc}
    d984:	add	r4, r4, r5
    d988:	ldr	r0, [r4, #16]
    d98c:	pop	{r3, r4, r5, pc}
    d990:	andeq	r1, r3, r4, ror #13
    d994:			; <UNDEFINED> instruction: 0x00018db8
    d998:	andeq	r7, r1, r0, lsr #10
    d99c:	andeq	r9, r1, r8, lsr r1
    d9a0:	push	{r4, r5, r6, r7, r8, lr}
    d9a4:	mov	r4, r0
    d9a8:	mov	r6, r1
    d9ac:	bl	c2b4 <main@@Base+0x7e7c>
    d9b0:	mov	r1, r0
    d9b4:	mov	r0, r4
    d9b8:	bl	39d8 <g_type_check_instance_cast@plt>
    d9bc:	ldr	r3, [pc, #264]	; dacc <main@@Base+0x9694>
    d9c0:	ldr	r8, [pc, r3]
    d9c4:	mov	r7, r0
    d9c8:	bl	d910 <main@@Base+0x94d8>
    d9cc:	mov	r5, r0
    d9d0:	bl	c2b4 <main@@Base+0x7e7c>
    d9d4:	cmp	r4, #0
    d9d8:	mov	r1, r0
    d9dc:	beq	da08 <main@@Base+0x95d0>
    d9e0:	ldr	r3, [r4]
    d9e4:	cmp	r3, #0
    d9e8:	beq	d9f8 <main@@Base+0x95c0>
    d9ec:	ldr	r3, [r3]
    d9f0:	cmp	r0, r3
    d9f4:	beq	da30 <main@@Base+0x95f8>
    d9f8:	mov	r0, r4
    d9fc:	bl	3fcc <g_type_check_instance_is_a@plt>
    da00:	cmp	r0, #0
    da04:	bne	da30 <main@@Base+0x95f8>
    da08:	ldr	r1, [pc, #192]	; dad0 <main@@Base+0x9698>
    da0c:	ldr	r0, [pc, #192]	; dad4 <main@@Base+0x969c>
    da10:	ldr	r2, [pc, #192]	; dad8 <main@@Base+0x96a0>
    da14:	add	r1, pc, r1
    da18:	add	r0, pc, r0
    da1c:	add	r1, r1, #392	; 0x188
    da20:	add	r2, pc, r2
    da24:	bl	3870 <g_return_if_fail_warning@plt>
    da28:	mov	r0, #0
    da2c:	pop	{r4, r5, r6, r7, r8, pc}
    da30:	cmp	r6, #0
    da34:	beq	da6c <main@@Base+0x9634>
    da38:	ldr	r3, [r6]
    da3c:	cmp	r3, #0
    da40:	beq	da6c <main@@Base+0x9634>
    da44:	ldr	r1, [pc, #144]	; dadc <main@@Base+0x96a4>
    da48:	ldr	r0, [pc, #144]	; dae0 <main@@Base+0x96a8>
    da4c:	ldr	r2, [pc, #144]	; dae4 <main@@Base+0x96ac>
    da50:	add	r1, pc, r1
    da54:	add	r0, pc, r0
    da58:	add	r1, r1, #392	; 0x188
    da5c:	add	r2, pc, r2
    da60:	bl	3870 <g_return_if_fail_warning@plt>
    da64:	mov	r0, #0
    da68:	pop	{r4, r5, r6, r7, r8, pc}
    da6c:	add	r0, r7, r8
    da70:	ldr	r3, [r0, #4]
    da74:	tst	r3, #64	; 0x40
    da78:	bne	dabc <main@@Base+0x9684>
    da7c:	ldr	r3, [r5, #4]
    da80:	cmp	r3, #0
    da84:	movne	r4, #0
    da88:	beq	dab4 <main@@Base+0x967c>
    da8c:	ldr	r3, [r5]
    da90:	mov	r1, r6
    da94:	ldr	r0, [r3, r4, lsl #2]
    da98:	add	r4, r4, #1
    da9c:	bl	18f68 <main@@Base+0x14b30>
    daa0:	cmp	r0, #0
    daa4:	popeq	{r4, r5, r6, r7, r8, pc}
    daa8:	ldr	r3, [r5, #4]
    daac:	cmp	r3, r4
    dab0:	bhi	da8c <main@@Base+0x9654>
    dab4:	mov	r0, #1
    dab8:	pop	{r4, r5, r6, r7, r8, pc}
    dabc:	mov	r3, #0
    dac0:	str	r3, [r0, #8]
    dac4:	str	r3, [r0, #12]
    dac8:	b	da7c <main@@Base+0x9644>
    dacc:	andeq	r1, r3, r0, asr #12
    dad0:	andeq	r8, r1, ip, lsl #26
    dad4:	andeq	r7, r1, r4, ror r4
    dad8:	andeq	r9, r1, ip, lsl #1
    dadc:	ldrdeq	r8, [r1], -r0
    dae0:	andeq	r7, r1, r8, lsr r4
    dae4:	andeq	r9, r1, r4, lsl r4
    dae8:	ldr	r3, [pc, #320]	; dc30 <main@@Base+0x97f8>
    daec:	push	{r4, r5, r6, r7, r8, lr}
    daf0:	add	r3, pc, r3
    daf4:	sub	sp, sp, #8
    daf8:	mov	r4, r0
    dafc:	ldr	r6, [r3]
    db00:	mov	r7, r1
    db04:	mov	r8, r2
    db08:	add	r6, r0, r6
    db0c:	bl	c2b4 <main@@Base+0x7e7c>
    db10:	cmp	r4, #0
    db14:	mov	r1, r0
    db18:	beq	db44 <main@@Base+0x970c>
    db1c:	ldr	r3, [r4]
    db20:	cmp	r3, #0
    db24:	beq	db34 <main@@Base+0x96fc>
    db28:	ldr	r3, [r3]
    db2c:	cmp	r0, r3
    db30:	beq	db70 <main@@Base+0x9738>
    db34:	mov	r0, r4
    db38:	bl	3fcc <g_type_check_instance_is_a@plt>
    db3c:	cmp	r0, #0
    db40:	bne	db70 <main@@Base+0x9738>
    db44:	ldr	r1, [pc, #232]	; dc34 <main@@Base+0x97fc>
    db48:	ldr	r0, [pc, #232]	; dc38 <main@@Base+0x9800>
    db4c:	ldr	r2, [pc, #232]	; dc3c <main@@Base+0x9804>
    db50:	add	r1, pc, r1
    db54:	add	r0, pc, r0
    db58:	add	r1, r1, #408	; 0x198
    db5c:	add	r2, pc, r2
    db60:	bl	3870 <g_return_if_fail_warning@plt>
    db64:	mov	r0, #0
    db68:	add	sp, sp, #8
    db6c:	pop	{r4, r5, r6, r7, r8, pc}
    db70:	cmp	r8, #0
    db74:	beq	dbb0 <main@@Base+0x9778>
    db78:	ldr	r3, [r8]
    db7c:	cmp	r3, #0
    db80:	beq	dbb0 <main@@Base+0x9778>
    db84:	ldr	r1, [pc, #180]	; dc40 <main@@Base+0x9808>
    db88:	ldr	r0, [pc, #180]	; dc44 <main@@Base+0x980c>
    db8c:	ldr	r2, [pc, #180]	; dc48 <main@@Base+0x9810>
    db90:	add	r1, pc, r1
    db94:	add	r0, pc, r0
    db98:	add	r1, r1, #408	; 0x198
    db9c:	add	r2, pc, r2
    dba0:	bl	3870 <g_return_if_fail_warning@plt>
    dba4:	mov	r0, #0
    dba8:	add	sp, sp, #8
    dbac:	pop	{r4, r5, r6, r7, r8, pc}
    dbb0:	ldr	r3, [r6, #16]
    dbb4:	ldr	r2, [r3, #4]
    dbb8:	cmp	r2, #0
    dbbc:	movne	r4, #0
    dbc0:	bne	dbd8 <main@@Base+0x97a0>
    dbc4:	b	dc04 <main@@Base+0x97cc>
    dbc8:	ldr	r3, [r6, #16]
    dbcc:	ldr	ip, [r3, #4]
    dbd0:	cmp	ip, r4
    dbd4:	bls	dc04 <main@@Base+0x97cc>
    dbd8:	ldr	r3, [r3]
    dbdc:	ldr	r5, [r3, r4, lsl #2]
    dbe0:	add	r4, r4, #1
    dbe4:	mov	r0, r5
    dbe8:	bl	1a5dc <main@@Base+0x161a4>
    dbec:	cmp	r0, r7
    dbf0:	bne	dbc8 <main@@Base+0x9790>
    dbf4:	mov	r0, r5
    dbf8:	add	sp, sp, #8
    dbfc:	pop	{r4, r5, r6, r7, r8, lr}
    dc00:	b	381c <g_object_ref@plt>
    dc04:	bl	40a4 <fwupd_error_quark@plt>
    dc08:	ldr	r3, [pc, #60]	; dc4c <main@@Base+0x9814>
    dc0c:	str	r7, [sp]
    dc10:	mov	r2, #8
    dc14:	add	r3, pc, r3
    dc18:	mov	r1, r0
    dc1c:	mov	r0, r8
    dc20:	bl	4350 <g_set_error@plt>
    dc24:	mov	r0, #0
    dc28:	add	sp, sp, #8
    dc2c:	pop	{r4, r5, r6, r7, r8, pc}
    dc30:	andeq	r1, r3, r0, lsl r5
    dc34:	ldrdeq	r8, [r1], -r0
    dc38:	andeq	r7, r1, r8, lsr r3
    dc3c:	andeq	r8, r1, r0, asr pc
    dc40:	muleq	r1, r0, fp
    dc44:	strdeq	r7, [r1], -r8
    dc48:	ldrdeq	r9, [r1], -r4
    dc4c:	andeq	r9, r1, ip, ror r2
    dc50:	ldr	r3, [pc, #332]	; dda4 <main@@Base+0x996c>
    dc54:	push	{r4, r5, r6, r7, r8, lr}
    dc58:	add	r3, pc, r3
    dc5c:	sub	sp, sp, #8
    dc60:	mov	r4, r0
    dc64:	ldr	r6, [r3]
    dc68:	mov	r7, r1
    dc6c:	mov	r8, r2
    dc70:	add	r6, r0, r6
    dc74:	bl	c2b4 <main@@Base+0x7e7c>
    dc78:	cmp	r4, #0
    dc7c:	mov	r1, r0
    dc80:	beq	dcac <main@@Base+0x9874>
    dc84:	ldr	r3, [r4]
    dc88:	cmp	r3, #0
    dc8c:	beq	dc9c <main@@Base+0x9864>
    dc90:	ldr	r3, [r3]
    dc94:	cmp	r0, r3
    dc98:	beq	dcd8 <main@@Base+0x98a0>
    dc9c:	mov	r0, r4
    dca0:	bl	3fcc <g_type_check_instance_is_a@plt>
    dca4:	cmp	r0, #0
    dca8:	bne	dcd8 <main@@Base+0x98a0>
    dcac:	ldr	r1, [pc, #244]	; dda8 <main@@Base+0x9970>
    dcb0:	ldr	r0, [pc, #244]	; ddac <main@@Base+0x9974>
    dcb4:	ldr	r2, [pc, #244]	; ddb0 <main@@Base+0x9978>
    dcb8:	add	r1, pc, r1
    dcbc:	add	r0, pc, r0
    dcc0:	add	r1, r1, #448	; 0x1c0
    dcc4:	add	r2, pc, r2
    dcc8:	bl	3870 <g_return_if_fail_warning@plt>
    dccc:	mov	r0, #0
    dcd0:	add	sp, sp, #8
    dcd4:	pop	{r4, r5, r6, r7, r8, pc}
    dcd8:	cmp	r8, #0
    dcdc:	beq	dd18 <main@@Base+0x98e0>
    dce0:	ldr	r3, [r8]
    dce4:	cmp	r3, #0
    dce8:	beq	dd18 <main@@Base+0x98e0>
    dcec:	ldr	r1, [pc, #192]	; ddb4 <main@@Base+0x997c>
    dcf0:	ldr	r0, [pc, #192]	; ddb8 <main@@Base+0x9980>
    dcf4:	ldr	r2, [pc, #192]	; ddbc <main@@Base+0x9984>
    dcf8:	add	r1, pc, r1
    dcfc:	add	r0, pc, r0
    dd00:	add	r1, r1, #448	; 0x1c0
    dd04:	add	r2, pc, r2
    dd08:	bl	3870 <g_return_if_fail_warning@plt>
    dd0c:	mov	r0, #0
    dd10:	add	sp, sp, #8
    dd14:	pop	{r4, r5, r6, r7, r8, pc}
    dd18:	ldr	r3, [r6, #16]
    dd1c:	ldr	r2, [r3, #4]
    dd20:	cmp	r2, #0
    dd24:	movne	r4, #0
    dd28:	bne	dd40 <main@@Base+0x9908>
    dd2c:	b	dd78 <main@@Base+0x9940>
    dd30:	ldr	r3, [r6, #16]
    dd34:	ldr	ip, [r3, #4]
    dd38:	cmp	ip, r4
    dd3c:	bls	dd78 <main@@Base+0x9940>
    dd40:	ldr	r3, [r3]
    dd44:	mov	r1, #0
    dd48:	ldr	r5, [r3, r4, lsl #2]
    dd4c:	add	r4, r4, #1
    dd50:	mov	r0, r5
    dd54:	bl	1a66c <main@@Base+0x16234>
    dd58:	mov	r1, r7
    dd5c:	bl	441c <g_strcmp0@plt>
    dd60:	cmp	r0, #0
    dd64:	bne	dd30 <main@@Base+0x98f8>
    dd68:	mov	r0, r5
    dd6c:	add	sp, sp, #8
    dd70:	pop	{r4, r5, r6, r7, r8, lr}
    dd74:	b	381c <g_object_ref@plt>
    dd78:	bl	40a4 <fwupd_error_quark@plt>
    dd7c:	ldr	r3, [pc, #60]	; ddc0 <main@@Base+0x9988>
    dd80:	str	r7, [sp]
    dd84:	mov	r2, #8
    dd88:	add	r3, pc, r3
    dd8c:	mov	r1, r0
    dd90:	mov	r0, r8
    dd94:	bl	4350 <g_set_error@plt>
    dd98:	mov	r0, #0
    dd9c:	add	sp, sp, #8
    dda0:	pop	{r4, r5, r6, r7, r8, pc}
    dda4:	andeq	r1, r3, r8, lsr #7
    dda8:	andeq	r8, r1, r8, ror #20
    ddac:	ldrdeq	r7, [r1], -r0
    ddb0:	andeq	r8, r1, r8, ror #27
    ddb4:	andeq	r8, r1, r8, lsr #20
    ddb8:	muleq	r1, r0, r1
    ddbc:	andeq	r9, r1, ip, ror #2
    ddc0:	andeq	r9, r1, r8, lsr #2
    ddc4:	push	{r3, r4, r5, lr}
    ddc8:	mov	r4, r0
    ddcc:	bl	23a78 <main@@Base+0x1f640>
    ddd0:	mov	r1, r0
    ddd4:	mov	r0, r4
    ddd8:	bl	39d8 <g_type_check_instance_cast@plt>
    dddc:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    dde0:	mov	r5, r0
    dde4:	bl	c2b4 <main@@Base+0x7e7c>
    dde8:	cmp	r4, #0
    ddec:	mov	r1, r0
    ddf0:	beq	de1c <main@@Base+0x99e4>
    ddf4:	ldr	r3, [r4]
    ddf8:	cmp	r3, #0
    ddfc:	beq	de0c <main@@Base+0x99d4>
    de00:	ldr	r3, [r3]
    de04:	cmp	r0, r3
    de08:	beq	de44 <main@@Base+0x9a0c>
    de0c:	mov	r0, r4
    de10:	bl	3fcc <g_type_check_instance_is_a@plt>
    de14:	cmp	r0, #0
    de18:	bne	de44 <main@@Base+0x9a0c>
    de1c:	ldr	r1, [pc, #44]	; de50 <main@@Base+0x9a18>
    de20:	ldr	r0, [pc, #44]	; de54 <main@@Base+0x9a1c>
    de24:	ldr	r2, [pc, #44]	; de58 <main@@Base+0x9a20>
    de28:	add	r1, pc, r1
    de2c:	add	r0, pc, r0
    de30:	add	r1, r1, #484	; 0x1e4
    de34:	add	r2, pc, r2
    de38:	bl	3870 <g_return_if_fail_warning@plt>
    de3c:	mov	r0, #0
    de40:	pop	{r3, r4, r5, pc}
    de44:	mov	r0, r5
    de48:	pop	{r3, r4, r5, lr}
    de4c:	b	4170 <g_usb_device_get_platform_id@plt>
    de50:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    de54:	andeq	r7, r1, r0, rrx
    de58:	andeq	r8, r1, r8, ror ip
    de5c:	push	{r3, r4, r5, lr}
    de60:	mov	r4, r0
    de64:	ldr	r3, [pc, #112]	; dedc <main@@Base+0x9aa4>
    de68:	add	r3, pc, r3
    de6c:	ldr	r5, [r3]
    de70:	bl	c2b4 <main@@Base+0x7e7c>
    de74:	cmp	r4, #0
    de78:	beq	dea8 <main@@Base+0x9a70>
    de7c:	ldr	r3, [r4]
    de80:	cmp	r3, #0
    de84:	beq	de94 <main@@Base+0x9a5c>
    de88:	ldr	r3, [r3]
    de8c:	cmp	r0, r3
    de90:	beq	ded0 <main@@Base+0x9a98>
    de94:	mov	r1, r0
    de98:	mov	r0, r4
    de9c:	bl	3fcc <g_type_check_instance_is_a@plt>
    dea0:	cmp	r0, #0
    dea4:	bne	ded0 <main@@Base+0x9a98>
    dea8:	ldr	r1, [pc, #48]	; dee0 <main@@Base+0x9aa8>
    deac:	ldr	r0, [pc, #48]	; dee4 <main@@Base+0x9aac>
    deb0:	ldr	r2, [pc, #48]	; dee8 <main@@Base+0x9ab0>
    deb4:	add	r1, pc, r1
    deb8:	add	r0, pc, r0
    debc:	add	r1, r1, #512	; 0x200
    dec0:	add	r2, pc, r2
    dec4:	bl	3870 <g_return_if_fail_warning@plt>
    dec8:	movw	r0, #65535	; 0xffff
    decc:	pop	{r3, r4, r5, pc}
    ded0:	add	r4, r4, r5
    ded4:	ldrh	r0, [r4, #40]	; 0x28
    ded8:	pop	{r3, r4, r5, pc}
    dedc:	muleq	r3, r8, r1
    dee0:	andeq	r8, r1, ip, ror #16
    dee4:	ldrdeq	r6, [r1], -r4
    dee8:	andeq	r8, r1, ip, ror #23
    deec:	push	{r3, r4, r5, lr}
    def0:	mov	r4, r0
    def4:	ldr	r3, [pc, #112]	; df6c <main@@Base+0x9b34>
    def8:	add	r3, pc, r3
    defc:	ldr	r5, [r3]
    df00:	bl	c2b4 <main@@Base+0x7e7c>
    df04:	cmp	r4, #0
    df08:	beq	df38 <main@@Base+0x9b00>
    df0c:	ldr	r3, [r4]
    df10:	cmp	r3, #0
    df14:	beq	df24 <main@@Base+0x9aec>
    df18:	ldr	r3, [r3]
    df1c:	cmp	r0, r3
    df20:	beq	df60 <main@@Base+0x9b28>
    df24:	mov	r1, r0
    df28:	mov	r0, r4
    df2c:	bl	3fcc <g_type_check_instance_is_a@plt>
    df30:	cmp	r0, #0
    df34:	bne	df60 <main@@Base+0x9b28>
    df38:	ldr	r1, [pc, #48]	; df70 <main@@Base+0x9b38>
    df3c:	ldr	r0, [pc, #48]	; df74 <main@@Base+0x9b3c>
    df40:	ldr	r2, [pc, #48]	; df78 <main@@Base+0x9b40>
    df44:	add	r1, pc, r1
    df48:	add	r0, pc, r0
    df4c:	add	r1, r1, #540	; 0x21c
    df50:	add	r2, pc, r2
    df54:	bl	3870 <g_return_if_fail_warning@plt>
    df58:	movw	r0, #65535	; 0xffff
    df5c:	pop	{r3, r4, r5, pc}
    df60:	add	r4, r4, r5
    df64:	ldrh	r0, [r4, #38]	; 0x26
    df68:	pop	{r3, r4, r5, pc}
    df6c:	andeq	r1, r3, r8, lsl #2
    df70:	ldrdeq	r8, [r1], -ip
    df74:	andeq	r6, r1, r4, asr #30
    df78:	andeq	r8, r1, ip, asr fp
    df7c:	push	{r3, r4, r5, lr}
    df80:	mov	r4, r0
    df84:	ldr	r3, [pc, #112]	; dffc <main@@Base+0x9bc4>
    df88:	add	r3, pc, r3
    df8c:	ldr	r5, [r3]
    df90:	bl	c2b4 <main@@Base+0x7e7c>
    df94:	cmp	r4, #0
    df98:	beq	dfc8 <main@@Base+0x9b90>
    df9c:	ldr	r3, [r4]
    dfa0:	cmp	r3, #0
    dfa4:	beq	dfb4 <main@@Base+0x9b7c>
    dfa8:	ldr	r3, [r3]
    dfac:	cmp	r0, r3
    dfb0:	beq	dff0 <main@@Base+0x9bb8>
    dfb4:	mov	r1, r0
    dfb8:	mov	r0, r4
    dfbc:	bl	3fcc <g_type_check_instance_is_a@plt>
    dfc0:	cmp	r0, #0
    dfc4:	bne	dff0 <main@@Base+0x9bb8>
    dfc8:	ldr	r1, [pc, #48]	; e000 <main@@Base+0x9bc8>
    dfcc:	ldr	r0, [pc, #48]	; e004 <main@@Base+0x9bcc>
    dfd0:	ldr	r2, [pc, #48]	; e008 <main@@Base+0x9bd0>
    dfd4:	add	r1, pc, r1
    dfd8:	add	r0, pc, r0
    dfdc:	add	r1, r1, #568	; 0x238
    dfe0:	add	r2, pc, r2
    dfe4:	bl	3870 <g_return_if_fail_warning@plt>
    dfe8:	movw	r0, #65535	; 0xffff
    dfec:	pop	{r3, r4, r5, pc}
    dff0:	add	r4, r4, r5
    dff4:	ldrh	r0, [r4, #42]	; 0x2a
    dff8:	pop	{r3, r4, r5, pc}
    dffc:	andeq	r1, r3, r8, ror r0
    e000:	andeq	r8, r1, ip, asr #14
    e004:			; <UNDEFINED> instruction: 0x00016eb4
    e008:	andeq	r8, r1, ip, asr #21
    e00c:	push	{r3, r4, r5, lr}
    e010:	mov	r4, r0
    e014:	bl	23a78 <main@@Base+0x1f640>
    e018:	mov	r1, r0
    e01c:	mov	r0, r4
    e020:	bl	39d8 <g_type_check_instance_cast@plt>
    e024:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    e028:	mov	r5, r0
    e02c:	bl	c2b4 <main@@Base+0x7e7c>
    e030:	cmp	r4, #0
    e034:	mov	r1, r0
    e038:	beq	e064 <main@@Base+0x9c2c>
    e03c:	ldr	r3, [r4]
    e040:	cmp	r3, #0
    e044:	beq	e054 <main@@Base+0x9c1c>
    e048:	ldr	r3, [r3]
    e04c:	cmp	r0, r3
    e050:	beq	e08c <main@@Base+0x9c54>
    e054:	mov	r0, r4
    e058:	bl	3fcc <g_type_check_instance_is_a@plt>
    e05c:	cmp	r0, #0
    e060:	bne	e08c <main@@Base+0x9c54>
    e064:	ldr	r1, [pc, #44]	; e098 <main@@Base+0x9c60>
    e068:	ldr	r0, [pc, #44]	; e09c <main@@Base+0x9c64>
    e06c:	ldr	r2, [pc, #44]	; e0a0 <main@@Base+0x9c68>
    e070:	add	r1, pc, r1
    e074:	add	r0, pc, r0
    e078:	add	r1, r1, #600	; 0x258
    e07c:	add	r2, pc, r2
    e080:	bl	3870 <g_return_if_fail_warning@plt>
    e084:	movw	r0, #65535	; 0xffff
    e088:	pop	{r3, r4, r5, pc}
    e08c:	mov	r0, r5
    e090:	pop	{r3, r4, r5, lr}
    e094:	b	4050 <g_usb_device_get_vid@plt>
    e098:			; <UNDEFINED> instruction: 0x000186b0
    e09c:	andeq	r6, r1, r8, lsl lr
    e0a0:	andeq	r8, r1, r0, lsr sl
    e0a4:	push	{r3, r4, r5, lr}
    e0a8:	mov	r4, r0
    e0ac:	bl	23a78 <main@@Base+0x1f640>
    e0b0:	mov	r1, r0
    e0b4:	mov	r0, r4
    e0b8:	bl	39d8 <g_type_check_instance_cast@plt>
    e0bc:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    e0c0:	mov	r5, r0
    e0c4:	bl	c2b4 <main@@Base+0x7e7c>
    e0c8:	cmp	r4, #0
    e0cc:	mov	r1, r0
    e0d0:	beq	e0fc <main@@Base+0x9cc4>
    e0d4:	ldr	r3, [r4]
    e0d8:	cmp	r3, #0
    e0dc:	beq	e0ec <main@@Base+0x9cb4>
    e0e0:	ldr	r3, [r3]
    e0e4:	cmp	r0, r3
    e0e8:	beq	e124 <main@@Base+0x9cec>
    e0ec:	mov	r0, r4
    e0f0:	bl	3fcc <g_type_check_instance_is_a@plt>
    e0f4:	cmp	r0, #0
    e0f8:	bne	e124 <main@@Base+0x9cec>
    e0fc:	ldr	r1, [pc, #44]	; e130 <main@@Base+0x9cf8>
    e100:	ldr	r0, [pc, #44]	; e134 <main@@Base+0x9cfc>
    e104:	ldr	r2, [pc, #44]	; e138 <main@@Base+0x9d00>
    e108:	add	r1, pc, r1
    e10c:	add	r0, pc, r0
    e110:	add	r1, r1, #620	; 0x26c
    e114:	add	r2, pc, r2
    e118:	bl	3870 <g_return_if_fail_warning@plt>
    e11c:	movw	r0, #65535	; 0xffff
    e120:	pop	{r3, r4, r5, pc}
    e124:	mov	r0, r5
    e128:	pop	{r3, r4, r5, lr}
    e12c:	b	3abc <g_usb_device_get_pid@plt>
    e130:	andeq	r8, r1, r8, lsl r6
    e134:	andeq	r6, r1, r0, lsl #27
    e138:	muleq	r1, r8, r9
    e13c:	push	{r3, r4, r5, lr}
    e140:	mov	r4, r0
    e144:	bl	23a78 <main@@Base+0x1f640>
    e148:	mov	r1, r0
    e14c:	mov	r0, r4
    e150:	bl	39d8 <g_type_check_instance_cast@plt>
    e154:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    e158:	mov	r5, r0
    e15c:	bl	c2b4 <main@@Base+0x7e7c>
    e160:	cmp	r4, #0
    e164:	mov	r1, r0
    e168:	beq	e194 <main@@Base+0x9d5c>
    e16c:	ldr	r3, [r4]
    e170:	cmp	r3, #0
    e174:	beq	e184 <main@@Base+0x9d4c>
    e178:	ldr	r3, [r3]
    e17c:	cmp	r0, r3
    e180:	beq	e1bc <main@@Base+0x9d84>
    e184:	mov	r0, r4
    e188:	bl	3fcc <g_type_check_instance_is_a@plt>
    e18c:	cmp	r0, #0
    e190:	bne	e1bc <main@@Base+0x9d84>
    e194:	ldr	r1, [pc, #44]	; e1c8 <main@@Base+0x9d90>
    e198:	ldr	r0, [pc, #44]	; e1cc <main@@Base+0x9d94>
    e19c:	ldr	r2, [pc, #44]	; e1d0 <main@@Base+0x9d98>
    e1a0:	add	r1, pc, r1
    e1a4:	add	r0, pc, r0
    e1a8:	add	r1, r1, #640	; 0x280
    e1ac:	add	r2, pc, r2
    e1b0:	bl	3870 <g_return_if_fail_warning@plt>
    e1b4:	movw	r0, #65535	; 0xffff
    e1b8:	pop	{r3, r4, r5, pc}
    e1bc:	mov	r0, r5
    e1c0:	pop	{r3, r4, r5, lr}
    e1c4:	b	3c3c <g_usb_device_get_release@plt>
    e1c8:	andeq	r8, r1, r0, lsl #11
    e1cc:	andeq	r6, r1, r8, ror #25
    e1d0:	andeq	r8, r1, r0, lsl #18
    e1d4:	push	{r3, r4, r5, lr}
    e1d8:	mov	r4, r0
    e1dc:	ldr	r3, [pc, #112]	; e254 <main@@Base+0x9e1c>
    e1e0:	add	r3, pc, r3
    e1e4:	ldr	r5, [r3]
    e1e8:	bl	c2b4 <main@@Base+0x7e7c>
    e1ec:	cmp	r4, #0
    e1f0:	beq	e220 <main@@Base+0x9de8>
    e1f4:	ldr	r3, [r4]
    e1f8:	cmp	r3, #0
    e1fc:	beq	e20c <main@@Base+0x9dd4>
    e200:	ldr	r3, [r3]
    e204:	cmp	r0, r3
    e208:	beq	e248 <main@@Base+0x9e10>
    e20c:	mov	r1, r0
    e210:	mov	r0, r4
    e214:	bl	3fcc <g_type_check_instance_is_a@plt>
    e218:	cmp	r0, #0
    e21c:	bne	e248 <main@@Base+0x9e10>
    e220:	ldr	r1, [pc, #48]	; e258 <main@@Base+0x9e20>
    e224:	ldr	r0, [pc, #48]	; e25c <main@@Base+0x9e24>
    e228:	ldr	r2, [pc, #48]	; e260 <main@@Base+0x9e28>
    e22c:	add	r1, pc, r1
    e230:	add	r0, pc, r0
    e234:	add	r1, r1, #664	; 0x298
    e238:	add	r2, pc, r2
    e23c:	bl	3870 <g_return_if_fail_warning@plt>
    e240:	mov	r0, #0
    e244:	pop	{r3, r4, r5, pc}
    e248:	add	r4, r4, r5
    e24c:	ldr	r0, [r4, #32]
    e250:	pop	{r3, r4, r5, pc}
    e254:	andeq	r0, r3, r0, lsr #28
    e258:	strdeq	r8, [r1], -r4
    e25c:	andeq	r6, r1, ip, asr ip
    e260:	andeq	r8, r1, r4, ror r8
    e264:	ldr	r3, [pc, #156]	; e308 <main@@Base+0x9ed0>
    e268:	push	{r4, r5, r6, lr}
    e26c:	add	r3, pc, r3
    e270:	mov	r4, r0
    e274:	mov	r5, r1
    e278:	ldr	r6, [r3]
    e27c:	bl	c2b4 <main@@Base+0x7e7c>
    e280:	cmp	r4, #0
    e284:	beq	e2b4 <main@@Base+0x9e7c>
    e288:	ldr	r2, [r4]
    e28c:	cmp	r2, #0
    e290:	beq	e2a0 <main@@Base+0x9e68>
    e294:	ldr	r3, [r2]
    e298:	cmp	r0, r3
    e29c:	beq	e2d8 <main@@Base+0x9ea0>
    e2a0:	mov	r1, r0
    e2a4:	mov	r0, r4
    e2a8:	bl	3fcc <g_type_check_instance_is_a@plt>
    e2ac:	cmp	r0, #0
    e2b0:	bne	e2d8 <main@@Base+0x9ea0>
    e2b4:	ldr	r1, [pc, #80]	; e30c <main@@Base+0x9ed4>
    e2b8:	ldr	r0, [pc, #80]	; e310 <main@@Base+0x9ed8>
    e2bc:	ldr	r2, [pc, #80]	; e314 <main@@Base+0x9edc>
    e2c0:	add	r1, pc, r1
    e2c4:	add	r0, pc, r0
    e2c8:	add	r1, r1, #688	; 0x2b0
    e2cc:	add	r2, pc, r2
    e2d0:	pop	{r4, r5, r6, lr}
    e2d4:	b	3870 <g_return_if_fail_warning@plt>
    e2d8:	ldr	r0, [pc, #56]	; e318 <main@@Base+0x9ee0>
    e2dc:	mov	r1, #128	; 0x80
    e2e0:	ldr	r2, [pc, #52]	; e31c <main@@Base+0x9ee4>
    e2e4:	mov	r3, r5
    e2e8:	add	r0, pc, r0
    e2ec:	add	r4, r4, r6
    e2f0:	add	r2, pc, r2
    e2f4:	bl	3a38 <g_log@plt>
    e2f8:	mov	r0, r5
    e2fc:	bl	3b7c <g_strdup@plt>
    e300:	str	r0, [r4, #32]
    e304:	pop	{r4, r5, r6, pc}
    e308:	muleq	r3, r4, sp
    e30c:	andeq	r8, r1, r0, ror #8
    e310:	andeq	r6, r1, r8, asr #23
    e314:	andeq	r8, r1, r0, ror #15
    e318:	andeq	r6, r1, r4, lsr #23
    e31c:	ldrdeq	r8, [r1], -ip
    e320:	ldr	r3, [pc, #272]	; e438 <main@@Base+0xa000>
    e324:	ldr	r2, [pc, #272]	; e43c <main@@Base+0xa004>
    e328:	add	r3, pc, r3
    e32c:	push	{r4, r5, r6, r7, lr}
    e330:	mov	r7, r1
    e334:	ldr	r4, [r3, r2]
    e338:	sub	sp, sp, #20
    e33c:	ldr	r1, [pc, #252]	; e440 <main@@Base+0xa008>
    e340:	mov	r5, r0
    e344:	add	r1, pc, r1
    e348:	ldr	r3, [r4]
    e34c:	ldr	r6, [r1]
    e350:	str	r3, [sp, #12]
    e354:	add	r6, r0, r6
    e358:	bl	23a78 <main@@Base+0x1f640>
    e35c:	mov	r1, r0
    e360:	mov	r0, r5
    e364:	bl	39d8 <g_type_check_instance_cast@plt>
    e368:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    e36c:	ldr	r3, [r6, #28]
    e370:	mov	r2, #0
    e374:	str	r2, [sp, #8]
    e378:	cmp	r3, r2
    e37c:	bne	e3bc <main@@Base+0x9f84>
    e380:	ldrb	r1, [r6, #46]	; 0x2e
    e384:	cmp	r1, #255	; 0xff
    e388:	beq	e3bc <main@@Base+0x9f84>
    e38c:	mov	r2, #1
    e390:	add	r3, sp, #8
    e394:	bl	42cc <g_usb_device_claim_interface@plt>
    e398:	cmp	r0, #0
    e39c:	movne	r5, #1
    e3a0:	strne	r5, [r6, #28]
    e3a4:	beq	e3dc <main@@Base+0x9fa4>
    e3a8:	ldr	r0, [sp, #8]
    e3ac:	cmp	r0, #0
    e3b0:	beq	e3c0 <main@@Base+0x9f88>
    e3b4:	bl	38e8 <g_error_free@plt>
    e3b8:	b	e3c0 <main@@Base+0x9f88>
    e3bc:	mov	r5, #1
    e3c0:	ldr	r2, [sp, #12]
    e3c4:	mov	r0, r5
    e3c8:	ldr	r3, [r4]
    e3cc:	cmp	r2, r3
    e3d0:	bne	e414 <main@@Base+0x9fdc>
    e3d4:	add	sp, sp, #20
    e3d8:	pop	{r4, r5, r6, r7, pc}
    e3dc:	bl	40a4 <fwupd_error_quark@plt>
    e3e0:	ldrb	lr, [r6, #46]	; 0x2e
    e3e4:	mov	r1, r0
    e3e8:	ldr	ip, [sp, #8]
    e3ec:	mov	r0, r7
    e3f0:	ldr	r3, [pc, #76]	; e444 <main@@Base+0xa00c>
    e3f4:	mov	r2, #10
    e3f8:	str	lr, [sp]
    e3fc:	ldr	ip, [ip, #8]
    e400:	add	r3, pc, r3
    e404:	str	ip, [sp, #4]
    e408:	bl	4350 <g_set_error@plt>
    e40c:	mov	r5, #0
    e410:	b	e3a8 <main@@Base+0x9f70>
    e414:	bl	3e4c <__stack_chk_fail@plt>
    e418:	ldr	r3, [sp, #8]
    e41c:	mov	r4, r0
    e420:	cmp	r3, #0
    e424:	beq	e430 <main@@Base+0x9ff8>
    e428:	mov	r0, r3
    e42c:	bl	38e8 <g_error_free@plt>
    e430:	mov	r0, r4
    e434:	bl	42f0 <_Unwind_Resume@plt>
    e438:	andeq	r0, r3, r8, asr r8
    e43c:	andeq	r0, r0, r0, lsr r4
    e440:			; <UNDEFINED> instruction: 0x00030cbc
    e444:	andeq	r8, r1, r0, ror #21
    e448:	ldr	r3, [pc, #844]	; e79c <main@@Base+0xa364>
    e44c:	ldr	r2, [pc, #844]	; e7a0 <main@@Base+0xa368>
    e450:	add	r3, pc, r3
    e454:	push	{r4, r5, r6, r7, r8, lr}
    e458:	mov	r6, r1
    e45c:	ldr	r5, [r3, r2]
    e460:	sub	sp, sp, #64	; 0x40
    e464:	ldr	r1, [pc, #824]	; e7a4 <main@@Base+0xa36c>
    e468:	mov	r4, r0
    e46c:	add	r1, pc, r1
    e470:	ldr	r3, [r5]
    e474:	ldr	r7, [r1]
    e478:	str	r3, [sp, #60]	; 0x3c
    e47c:	add	r7, r0, r7
    e480:	bl	23a78 <main@@Base+0x1f640>
    e484:	mov	r1, r0
    e488:	mov	r0, r4
    e48c:	bl	39d8 <g_type_check_instance_cast@plt>
    e490:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    e494:	mov	r3, #0
    e498:	str	r3, [sp, #44]	; 0x2c
    e49c:	str	r3, [sp, #48]	; 0x30
    e4a0:	mov	r8, r0
    e4a4:	bl	c2b4 <main@@Base+0x7e7c>
    e4a8:	cmp	r4, #0
    e4ac:	beq	e4dc <main@@Base+0xa0a4>
    e4b0:	ldr	r3, [r4]
    e4b4:	cmp	r3, #0
    e4b8:	beq	e4c8 <main@@Base+0xa090>
    e4bc:	ldr	r3, [r3]
    e4c0:	cmp	r0, r3
    e4c4:	beq	e52c <main@@Base+0xa0f4>
    e4c8:	mov	r1, r0
    e4cc:	mov	r0, r4
    e4d0:	bl	3fcc <g_type_check_instance_is_a@plt>
    e4d4:	cmp	r0, #0
    e4d8:	bne	e52c <main@@Base+0xa0f4>
    e4dc:	ldr	r1, [pc, #708]	; e7a8 <main@@Base+0xa370>
    e4e0:	ldr	r0, [pc, #708]	; e7ac <main@@Base+0xa374>
    e4e4:	ldr	r2, [pc, #708]	; e7b0 <main@@Base+0xa378>
    e4e8:	add	r1, pc, r1
    e4ec:	add	r0, pc, r0
    e4f0:	add	r1, r1, #712	; 0x2c8
    e4f4:	add	r2, pc, r2
    e4f8:	bl	3870 <g_return_if_fail_warning@plt>
    e4fc:	mov	r4, #0
    e500:	ldr	r0, [sp, #48]	; 0x30
    e504:	cmp	r0, #0
    e508:	beq	e510 <main@@Base+0xa0d8>
    e50c:	bl	38e8 <g_error_free@plt>
    e510:	ldr	r2, [sp, #60]	; 0x3c
    e514:	mov	r0, r4
    e518:	ldr	r3, [r5]
    e51c:	cmp	r2, r3
    e520:	bne	e778 <main@@Base+0xa340>
    e524:	add	sp, sp, #64	; 0x40
    e528:	pop	{r4, r5, r6, r7, r8, pc}
    e52c:	cmp	r6, #0
    e530:	beq	e564 <main@@Base+0xa12c>
    e534:	ldr	r3, [r6]
    e538:	cmp	r3, #0
    e53c:	beq	e564 <main@@Base+0xa12c>
    e540:	ldr	r1, [pc, #620]	; e7b4 <main@@Base+0xa37c>
    e544:	ldr	r0, [pc, #620]	; e7b8 <main@@Base+0xa380>
    e548:	ldr	r2, [pc, #620]	; e7bc <main@@Base+0xa384>
    e54c:	add	r1, pc, r1
    e550:	add	r0, pc, r0
    e554:	add	r1, r1, #712	; 0x2c8
    e558:	add	r2, pc, r2
    e55c:	bl	3870 <g_return_if_fail_warning@plt>
    e560:	b	e4fc <main@@Base+0xa0c4>
    e564:	cmp	r8, #0
    e568:	beq	e624 <main@@Base+0xa1ec>
    e56c:	ldr	r3, [r7, #4]
    e570:	tst	r3, #64	; 0x40
    e574:	beq	e580 <main@@Base+0xa148>
    e578:	mov	r4, #1
    e57c:	b	e500 <main@@Base+0xa0c8>
    e580:	mov	r0, r4
    e584:	mov	r1, r6
    e588:	bl	e320 <main@@Base+0x9ee8>
    e58c:	cmp	r0, #0
    e590:	beq	e4fc <main@@Base+0xa0c4>
    e594:	mov	ip, #0
    e598:	mov	r3, #3
    e59c:	stm	sp, {r3, ip}
    e5a0:	mov	r1, #6
    e5a4:	ldrb	r3, [r7, #46]	; 0x2e
    e5a8:	add	r2, sp, #52	; 0x34
    e5ac:	str	r1, [sp, #16]
    e5b0:	mov	r0, r8
    e5b4:	str	r2, [sp, #12]
    e5b8:	mov	r2, #1
    e5bc:	str	r3, [sp, #8]
    e5c0:	add	r3, sp, #44	; 0x2c
    e5c4:	str	r3, [sp, #20]
    e5c8:	mov	r1, ip
    e5cc:	ldr	lr, [r7, #52]	; 0x34
    e5d0:	mov	r3, r2
    e5d4:	str	ip, [sp, #28]
    e5d8:	add	ip, sp, #48	; 0x30
    e5dc:	str	ip, [sp, #32]
    e5e0:	str	lr, [sp, #24]
    e5e4:	bl	39c0 <g_usb_device_control_transfer@plt>
    e5e8:	cmp	r0, #0
    e5ec:	beq	e71c <main@@Base+0xa2e4>
    e5f0:	ldr	r3, [sp, #44]	; 0x2c
    e5f4:	cmp	r3, #6
    e5f8:	beq	e654 <main@@Base+0xa21c>
    e5fc:	bl	40a4 <fwupd_error_quark@plt>
    e600:	ldr	ip, [sp, #44]	; 0x2c
    e604:	mov	r1, r0
    e608:	ldr	r3, [pc, #432]	; e7c0 <main@@Base+0xa388>
    e60c:	mov	r0, r6
    e610:	mov	r2, #0
    e614:	add	r3, pc, r3
    e618:	str	ip, [sp]
    e61c:	bl	4350 <g_set_error@plt>
    e620:	b	e4fc <main@@Base+0xa0c4>
    e624:	bl	40a4 <fwupd_error_quark@plt>
    e628:	mov	r7, r0
    e62c:	mov	r0, r4
    e630:	bl	ddc4 <main@@Base+0x998c>
    e634:	ldr	r3, [pc, #392]	; e7c4 <main@@Base+0xa38c>
    e638:	mov	r1, r7
    e63c:	str	r0, [sp]
    e640:	mov	r2, #0
    e644:	mov	r0, r6
    e648:	add	r3, pc, r3
    e64c:	bl	4350 <g_set_error@plt>
    e650:	b	e4fc <main@@Base+0xa0c4>
    e654:	mov	r0, r4
    e658:	mov	r1, #2
    e65c:	bl	c688 <main@@Base+0x8250>
    e660:	cmp	r0, #0
    e664:	beq	e748 <main@@Base+0xa310>
    e668:	ldr	r0, [pc, #344]	; e7c8 <main@@Base+0xa390>
    e66c:	mov	r1, #128	; 0x80
    e670:	ldr	r2, [pc, #340]	; e7cc <main@@Base+0xa394>
    e674:	add	r0, pc, r0
    e678:	add	r2, pc, r2
    e67c:	bl	3a38 <g_log@plt>
    e680:	mov	r0, r4
    e684:	mov	r1, #2
    e688:	bl	c230 <main@@Base+0x7df8>
    e68c:	ldr	r2, [pc, #316]	; e7d0 <main@@Base+0xa398>
    e690:	ldrb	r3, [sp, #52]	; 0x34
    e694:	add	r2, pc, r2
    e698:	ldr	r1, [r2]
    e69c:	add	r1, r4, r1
    e6a0:	ldr	r0, [r1, #12]
    e6a4:	cmp	r3, r0
    e6a8:	beq	e6c0 <main@@Base+0xa288>
    e6ac:	str	r3, [r1, #12]
    e6b0:	mov	r0, r4
    e6b4:	ldr	r1, [r2, #8]
    e6b8:	mov	r2, #0
    e6bc:	bl	3b70 <g_signal_emit@plt>
    e6c0:	mov	r0, r4
    e6c4:	mov	r1, #1
    e6c8:	bl	c688 <main@@Base+0x8250>
    e6cc:	cmp	r0, #0
    e6d0:	beq	e758 <main@@Base+0xa320>
    e6d4:	mov	r3, #5
    e6d8:	str	r3, [r7, #48]	; 0x30
    e6dc:	ldr	r0, [r7, #12]
    e6e0:	bl	b9c8 <main@@Base+0x7590>
    e6e4:	mov	r4, r0
    e6e8:	ldr	r0, [r7, #8]
    e6ec:	bl	b8b8 <main@@Base+0x7480>
    e6f0:	str	r0, [sp]
    e6f4:	mov	r3, r4
    e6f8:	ldr	ip, [r7, #48]	; 0x30
    e6fc:	mov	r1, #128	; 0x80
    e700:	ldr	r0, [pc, #204]	; e7d4 <main@@Base+0xa39c>
    e704:	ldr	r2, [pc, #204]	; e7d8 <main@@Base+0xa3a0>
    e708:	add	r0, pc, r0
    e70c:	str	ip, [sp, #4]
    e710:	add	r2, pc, r2
    e714:	bl	3a38 <g_log@plt>
    e718:	b	e578 <main@@Base+0xa140>
    e71c:	bl	40a4 <fwupd_error_quark@plt>
    e720:	ldr	ip, [sp, #48]	; 0x30
    e724:	mov	r1, r0
    e728:	ldr	r3, [pc, #172]	; e7dc <main@@Base+0xa3a4>
    e72c:	mov	r0, r6
    e730:	mov	r2, #10
    e734:	ldr	ip, [ip, #8]
    e738:	add	r3, pc, r3
    e73c:	str	ip, [sp]
    e740:	bl	4350 <g_set_error@plt>
    e744:	b	e4fc <main@@Base+0xa0c4>
    e748:	mov	r0, r4
    e74c:	ldrb	r1, [sp, #56]	; 0x38
    e750:	bl	c230 <main@@Base+0x7df8>
    e754:	b	e68c <main@@Base+0xa254>
    e758:	ldrb	r2, [sp, #55]	; 0x37
    e75c:	ldrb	r1, [sp, #54]	; 0x36
    e760:	ldrb	r3, [sp, #53]	; 0x35
    e764:	lsl	r2, r2, #16
    e768:	add	r2, r2, r1, lsl #8
    e76c:	add	r3, r2, r3
    e770:	str	r3, [r7, #48]	; 0x30
    e774:	b	e6dc <main@@Base+0xa2a4>
    e778:	bl	3e4c <__stack_chk_fail@plt>
    e77c:	ldr	r3, [sp, #48]	; 0x30
    e780:	mov	r4, r0
    e784:	cmp	r3, #0
    e788:	beq	e794 <main@@Base+0xa35c>
    e78c:	mov	r0, r3
    e790:	bl	38e8 <g_error_free@plt>
    e794:	mov	r0, r4
    e798:	bl	42f0 <_Unwind_Resume@plt>
    e79c:	andeq	r0, r3, r0, lsr r7
    e7a0:	andeq	r0, r0, r0, lsr r4
    e7a4:	muleq	r3, r4, fp
    e7a8:	andeq	r8, r1, r8, lsr r2
    e7ac:	andeq	r6, r1, r0, lsr #19
    e7b0:			; <UNDEFINED> instruction: 0x000185b8
    e7b4:	ldrdeq	r8, [r1], -r4
    e7b8:	andeq	r6, r1, ip, lsr r9
    e7bc:	andeq	r8, r1, r8, lsl r9
    e7c0:	andeq	r8, r1, r0, lsr r9
    e7c4:			; <UNDEFINED> instruction: 0x000188b8
    e7c8:	andeq	r6, r1, r8, lsl r8
    e7cc:	andeq	r8, r1, ip, lsr r7
    e7d0:	andeq	r0, r3, ip, ror #18
    e7d4:	andeq	r6, r1, r4, lsl #15
    e7d8:	andeq	r8, r1, r4, ror #16
    e7dc:	strdeq	r8, [r1], -r0
    e7e0:	push	{r3, r4, r5, lr}
    e7e4:	mov	r4, r0
    e7e8:	ldr	r3, [pc, #112]	; e860 <main@@Base+0xa428>
    e7ec:	add	r3, pc, r3
    e7f0:	ldr	r5, [r3]
    e7f4:	bl	c2b4 <main@@Base+0x7e7c>
    e7f8:	cmp	r4, #0
    e7fc:	beq	e82c <main@@Base+0xa3f4>
    e800:	ldr	r3, [r4]
    e804:	cmp	r3, #0
    e808:	beq	e818 <main@@Base+0xa3e0>
    e80c:	ldr	r3, [r3]
    e810:	cmp	r0, r3
    e814:	beq	e854 <main@@Base+0xa41c>
    e818:	mov	r1, r0
    e81c:	mov	r0, r4
    e820:	bl	3fcc <g_type_check_instance_is_a@plt>
    e824:	cmp	r0, #0
    e828:	bne	e854 <main@@Base+0xa41c>
    e82c:	ldr	r1, [pc, #48]	; e864 <main@@Base+0xa42c>
    e830:	ldr	r0, [pc, #48]	; e868 <main@@Base+0xa430>
    e834:	ldr	r2, [pc, #48]	; e86c <main@@Base+0xa434>
    e838:	add	r1, pc, r1
    e83c:	add	r0, pc, r0
    e840:	add	r1, r1, #732	; 0x2dc
    e844:	add	r2, pc, r2
    e848:	bl	3870 <g_return_if_fail_warning@plt>
    e84c:	mov	r0, #255	; 0xff
    e850:	pop	{r3, r4, r5, pc}
    e854:	add	r4, r4, r5
    e858:	ldrb	r0, [r4, #46]	; 0x2e
    e85c:	pop	{r3, r4, r5, pc}
    e860:	andeq	r0, r3, r4, lsl r8
    e864:	andeq	r7, r1, r8, ror #29
    e868:	andeq	r6, r1, r0, asr r6
    e86c:	andeq	r8, r1, r8, ror #4
    e870:	ldr	r3, [pc, #528]	; ea88 <main@@Base+0xa650>
    e874:	ldr	r2, [pc, #528]	; ea8c <main@@Base+0xa654>
    e878:	add	r3, pc, r3
    e87c:	push	{r4, r5, r6, r7, r8, lr}
    e880:	sub	sp, sp, #16
    e884:	ldr	r6, [r3, r2]
    e888:	mov	r4, r0
    e88c:	mov	r7, r1
    e890:	ldr	r3, [r6]
    e894:	str	r3, [sp, #12]
    e898:	bl	23a78 <main@@Base+0x1f640>
    e89c:	mov	r1, r0
    e8a0:	mov	r0, r4
    e8a4:	bl	39d8 <g_type_check_instance_cast@plt>
    e8a8:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    e8ac:	mov	r3, #0
    e8b0:	str	r3, [sp, #8]
    e8b4:	mov	r8, r0
    e8b8:	bl	40b0 <g_timer_new@plt>
    e8bc:	mov	r5, r0
    e8c0:	bl	c2b4 <main@@Base+0x7e7c>
    e8c4:	cmp	r4, #0
    e8c8:	beq	e8f8 <main@@Base+0xa4c0>
    e8cc:	ldr	r3, [r4]
    e8d0:	cmp	r3, #0
    e8d4:	beq	e8e4 <main@@Base+0xa4ac>
    e8d8:	ldr	r3, [r3]
    e8dc:	cmp	r0, r3
    e8e0:	beq	e958 <main@@Base+0xa520>
    e8e4:	mov	r1, r0
    e8e8:	mov	r0, r4
    e8ec:	bl	3fcc <g_type_check_instance_is_a@plt>
    e8f0:	cmp	r0, #0
    e8f4:	bne	e958 <main@@Base+0xa520>
    e8f8:	ldr	r1, [pc, #400]	; ea90 <main@@Base+0xa658>
    e8fc:	ldr	r0, [pc, #400]	; ea94 <main@@Base+0xa65c>
    e900:	ldr	r2, [pc, #400]	; ea98 <main@@Base+0xa660>
    e904:	add	r1, pc, r1
    e908:	add	r0, pc, r0
    e90c:	add	r1, r1, #760	; 0x2f8
    e910:	add	r2, pc, r2
    e914:	bl	3870 <g_return_if_fail_warning@plt>
    e918:	mov	r4, #0
    e91c:	cmp	r5, #0
    e920:	beq	e92c <main@@Base+0xa4f4>
    e924:	mov	r0, r5
    e928:	bl	39cc <g_timer_destroy@plt>
    e92c:	ldr	r0, [sp, #8]
    e930:	cmp	r0, #0
    e934:	beq	e93c <main@@Base+0xa504>
    e938:	bl	38e8 <g_error_free@plt>
    e93c:	ldr	r2, [sp, #12]
    e940:	mov	r0, r4
    e944:	ldr	r3, [r6]
    e948:	cmp	r2, r3
    e94c:	bne	ea48 <main@@Base+0xa610>
    e950:	add	sp, sp, #16
    e954:	pop	{r4, r5, r6, r7, r8, pc}
    e958:	cmp	r7, #0
    e95c:	beq	e990 <main@@Base+0xa558>
    e960:	ldr	r3, [r7]
    e964:	cmp	r3, #0
    e968:	beq	e990 <main@@Base+0xa558>
    e96c:	ldr	r1, [pc, #296]	; ea9c <main@@Base+0xa664>
    e970:	ldr	r0, [pc, #296]	; eaa0 <main@@Base+0xa668>
    e974:	ldr	r2, [pc, #296]	; eaa4 <main@@Base+0xa66c>
    e978:	add	r1, pc, r1
    e97c:	add	r0, pc, r0
    e980:	add	r1, r1, #760	; 0x2f8
    e984:	add	r2, pc, r2
    e988:	bl	3870 <g_return_if_fail_warning@plt>
    e98c:	b	e918 <main@@Base+0xa4e0>
    e990:	cmp	r8, #0
    e994:	beq	ea18 <main@@Base+0xa5e0>
    e998:	mov	r0, r8
    e99c:	add	r1, sp, #8
    e9a0:	bl	3d44 <g_usb_device_reset@plt>
    e9a4:	cmp	r0, #0
    e9a8:	bne	e9e0 <main@@Base+0xa5a8>
    e9ac:	bl	40a4 <fwupd_error_quark@plt>
    e9b0:	ldr	ip, [sp, #8]
    e9b4:	mov	r1, r0
    e9b8:	ldr	r3, [pc, #232]	; eaa8 <main@@Base+0xa670>
    e9bc:	mov	r0, r7
    e9c0:	mov	r2, #10
    e9c4:	ldr	lr, [ip, #8]
    e9c8:	add	r3, pc, r3
    e9cc:	str	lr, [sp]
    e9d0:	ldr	ip, [ip, #4]
    e9d4:	str	ip, [sp, #4]
    e9d8:	bl	4350 <g_set_error@plt>
    e9dc:	b	e918 <main@@Base+0xa4e0>
    e9e0:	mov	r0, r5
    e9e4:	mov	r1, #0
    e9e8:	bl	3978 <g_timer_elapsed@plt>
    e9ec:	vldr	d7, [pc, #140]	; ea80 <main@@Base+0xa648>
    e9f0:	vmul.f64	d0, d0, d7
    e9f4:	ldr	r0, [pc, #176]	; eaac <main@@Base+0xa674>
    e9f8:	mov	r1, #128	; 0x80
    e9fc:	ldr	r2, [pc, #172]	; eab0 <main@@Base+0xa678>
    ea00:	add	r0, pc, r0
    ea04:	add	r2, pc, r2
    ea08:	vstr	d0, [sp]
    ea0c:	bl	3a38 <g_log@plt>
    ea10:	mov	r4, #1
    ea14:	b	e91c <main@@Base+0xa4e4>
    ea18:	bl	40a4 <fwupd_error_quark@plt>
    ea1c:	mov	r8, r0
    ea20:	mov	r0, r4
    ea24:	bl	ddc4 <main@@Base+0x998c>
    ea28:	ldr	r3, [pc, #132]	; eab4 <main@@Base+0xa67c>
    ea2c:	mov	r1, r8
    ea30:	str	r0, [sp]
    ea34:	mov	r2, #0
    ea38:	mov	r0, r7
    ea3c:	add	r3, pc, r3
    ea40:	bl	4350 <g_set_error@plt>
    ea44:	b	e918 <main@@Base+0xa4e0>
    ea48:	bl	3e4c <__stack_chk_fail@plt>
    ea4c:	cmp	r5, #0
    ea50:	mov	r4, r0
    ea54:	beq	ea60 <main@@Base+0xa628>
    ea58:	mov	r0, r5
    ea5c:	bl	39cc <g_timer_destroy@plt>
    ea60:	ldr	r0, [sp, #8]
    ea64:	cmp	r0, #0
    ea68:	beq	ea70 <main@@Base+0xa638>
    ea6c:	bl	38e8 <g_error_free@plt>
    ea70:	mov	r0, r4
    ea74:	bl	42f0 <_Unwind_Resume@plt>
    ea78:	mov	r4, r0
    ea7c:	b	ea60 <main@@Base+0xa628>
    ea80:	andeq	r0, r0, r0
    ea84:	addmi	r4, pc, r0
    ea88:	andeq	r0, r3, r8, lsl #6
    ea8c:	andeq	r0, r0, r0, lsr r4
    ea90:	andeq	r7, r1, ip, lsl lr
    ea94:	andeq	r6, r1, r4, lsl #11
    ea98:	muleq	r1, ip, r1
    ea9c:	andeq	r7, r1, r8, lsr #27
    eaa0:	andeq	r6, r1, r0, lsl r5
    eaa4:	andeq	r8, r1, ip, ror #9
    eaa8:	andeq	r8, r1, r4, lsl #12
    eaac:	andeq	r6, r1, ip, lsl #9
    eab0:	andeq	r8, r1, ip, ror #11
    eab4:	andeq	r8, r1, r8, ror #10
    eab8:	ldr	r3, [pc, #712]	; ed88 <main@@Base+0xa950>
    eabc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eac0:	add	r3, pc, r3
    eac4:	sub	sp, sp, #44	; 0x2c
    eac8:	mov	r7, r0
    eacc:	ldr	fp, [r3]
    ead0:	str	r2, [sp, #16]
    ead4:	bl	23a78 <main@@Base+0x1f640>
    ead8:	mov	r1, r0
    eadc:	mov	r0, r7
    eae0:	bl	39d8 <g_type_check_instance_cast@plt>
    eae4:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    eae8:	subs	r4, r0, #0
    eaec:	beq	ecec <main@@Base+0xa8b4>
    eaf0:	mov	r0, r7
    eaf4:	ldr	r1, [sp, #16]
    eaf8:	bl	e320 <main@@Base+0x9ee8>
    eafc:	cmp	r0, #0
    eb00:	beq	ed18 <main@@Base+0xa8e0>
    eb04:	bl	11258 <main@@Base+0xce20>
    eb08:	add	fp, r7, fp
    eb0c:	ldrh	r1, [fp, #40]	; 0x28
    eb10:	str	r0, [sp, #12]
    eb14:	bl	11970 <main@@Base+0xd538>
    eb18:	ldr	r0, [sp, #12]
    eb1c:	ldrh	r1, [fp, #38]	; 0x26
    eb20:	bl	11a00 <main@@Base+0xd5c8>
    eb24:	ldr	r0, [sp, #12]
    eb28:	movw	r1, #65535	; 0xffff
    eb2c:	bl	11a90 <main@@Base+0xd658>
    eb30:	ldr	r3, [fp, #16]
    eb34:	ldr	r2, [r3, #4]
    eb38:	cmp	r2, #0
    eb3c:	beq	ed28 <main@@Base+0xa8f0>
    eb40:	ldr	r2, [pc, #580]	; ed8c <main@@Base+0xa954>
    eb44:	mov	r5, #0
    eb48:	ldr	r8, [pc, #576]	; ed90 <main@@Base+0xa958>
    eb4c:	add	r2, pc, r2
    eb50:	str	r2, [sp, #20]
    eb54:	ldr	r2, [pc, #568]	; ed94 <main@@Base+0xa95c>
    eb58:	add	r8, pc, r8
    eb5c:	add	r2, pc, r2
    eb60:	str	r2, [sp, #24]
    eb64:	ldr	r2, [pc, #556]	; ed98 <main@@Base+0xa960>
    eb68:	add	r2, pc, r2
    eb6c:	str	r2, [sp, #28]
    eb70:	ldr	r2, [pc, #548]	; ed9c <main@@Base+0xa964>
    eb74:	add	r2, pc, r2
    eb78:	str	r2, [sp, #32]
    eb7c:	ldr	r2, [pc, #540]	; eda0 <main@@Base+0xa968>
    eb80:	add	r2, pc, r2
    eb84:	str	r2, [sp, #36]	; 0x24
    eb88:	b	ebb8 <main@@Base+0xa780>
    eb8c:	ldr	r2, [pc, #528]	; eda4 <main@@Base+0xa96c>
    eb90:	mov	r3, r6
    eb94:	ldr	r0, [sp, #36]	; 0x24
    eb98:	mov	r1, #128	; 0x80
    eb9c:	add	r2, pc, r2
    eba0:	bl	3a38 <g_log@plt>
    eba4:	ldr	r3, [fp, #16]
    eba8:	add	r5, r5, #1
    ebac:	ldr	r2, [r3, #4]
    ebb0:	cmp	r2, r5
    ebb4:	bls	ec74 <main@@Base+0xa83c>
    ebb8:	ldr	r3, [r3]
    ebbc:	mov	r1, #0
    ebc0:	ldr	r4, [r3, r5, lsl #2]
    ebc4:	mov	r0, r4
    ebc8:	bl	1a74c <main@@Base+0x16314>
    ebcc:	mov	r1, r8
    ebd0:	mov	r6, r0
    ebd4:	bl	441c <g_strcmp0@plt>
    ebd8:	cmp	r0, #0
    ebdc:	beq	eb8c <main@@Base+0xa754>
    ebe0:	mov	r3, #0
    ebe4:	mov	r0, r4
    ebe8:	str	r3, [sp]
    ebec:	str	r3, [sp, #4]
    ebf0:	mov	r3, r7
    ebf4:	ldr	r1, [sp, #20]
    ebf8:	ldr	r2, [sp, #24]
    ebfc:	bl	3d38 <g_signal_connect_data@plt>
    ec00:	mov	r3, #0
    ec04:	mov	sl, r0
    ec08:	str	r3, [sp]
    ec0c:	mov	r0, r4
    ec10:	str	r3, [sp, #4]
    ec14:	mov	r3, r7
    ec18:	ldr	r1, [sp, #28]
    ec1c:	ldr	r2, [sp, #32]
    ec20:	bl	3d38 <g_signal_connect_data@plt>
    ec24:	mov	r9, r0
    ec28:	mov	r1, #0
    ec2c:	mov	r0, r4
    ec30:	ldr	r2, [sp, #16]
    ec34:	bl	19b88 <main@@Base+0x15750>
    ec38:	mov	r6, r0
    ec3c:	mov	r1, sl
    ec40:	mov	r0, r4
    ec44:	bl	3d8c <g_signal_handler_disconnect@plt>
    ec48:	mov	r0, r4
    ec4c:	mov	r1, r9
    ec50:	bl	3d8c <g_signal_handler_disconnect@plt>
    ec54:	cmp	r6, #0
    ec58:	beq	eccc <main@@Base+0xa894>
    ec5c:	ldr	r0, [sp, #12]
    ec60:	mov	r1, r6
    ec64:	bl	11624 <main@@Base+0xd1ec>
    ec68:	mov	r0, r6
    ec6c:	bl	4110 <g_object_unref@plt>
    ec70:	b	eba4 <main@@Base+0xa76c>
    ec74:	cmp	r2, #1
    ec78:	mov	r3, #1
    ec7c:	str	r3, [fp, #24]
    ec80:	bls	ed30 <main@@Base+0xa8f8>
    ec84:	ldr	r0, [pc, #284]	; eda8 <main@@Base+0xa970>
    ec88:	mov	r1, #128	; 0x80
    ec8c:	ldr	r2, [pc, #280]	; edac <main@@Base+0xa974>
    ec90:	add	r0, pc, r0
    ec94:	add	r2, pc, r2
    ec98:	bl	3a38 <g_log@plt>
    ec9c:	ldr	r0, [sp, #12]
    eca0:	mov	r1, #3
    eca4:	bl	11b20 <main@@Base+0xd6e8>
    eca8:	bl	1f330 <main@@Base+0x1aef8>
    ecac:	mov	r1, r0
    ecb0:	mov	r0, r7
    ecb4:	bl	39d8 <g_type_check_instance_cast@plt>
    ecb8:	mov	r1, #1
    ecbc:	bl	20e98 <main@@Base+0x1ca60>
    ecc0:	ldr	r0, [sp, #12]
    ecc4:	bl	381c <g_object_ref@plt>
    ecc8:	mov	r6, r0
    eccc:	ldr	r3, [sp, #12]
    ecd0:	cmp	r3, #0
    ecd4:	beq	ece0 <main@@Base+0xa8a8>
    ecd8:	mov	r0, r3
    ecdc:	bl	4110 <g_object_unref@plt>
    ece0:	mov	r0, r6
    ece4:	add	sp, sp, #44	; 0x2c
    ece8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ecec:	bl	40a4 <fwupd_error_quark@plt>
    ecf0:	mov	r5, r0
    ecf4:	mov	r0, r7
    ecf8:	bl	ddc4 <main@@Base+0x998c>
    ecfc:	ldr	r3, [pc, #172]	; edb0 <main@@Base+0xa978>
    ed00:	mov	r1, r5
    ed04:	mov	r2, r4
    ed08:	add	r3, pc, r3
    ed0c:	str	r0, [sp]
    ed10:	ldr	r0, [sp, #16]
    ed14:	bl	4350 <g_set_error@plt>
    ed18:	mov	r6, #0
    ed1c:	mov	r0, r6
    ed20:	add	sp, sp, #44	; 0x2c
    ed24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ed28:	mov	r3, #1
    ed2c:	str	r3, [fp, #24]
    ed30:	ldr	r0, [sp, #12]
    ed34:	mov	r1, #2
    ed38:	bl	11b20 <main@@Base+0xd6e8>
    ed3c:	b	eca8 <main@@Base+0xa870>
    ed40:	mov	r4, r0
    ed44:	ldr	r2, [sp, #12]
    ed48:	cmp	r2, #0
    ed4c:	beq	ed58 <main@@Base+0xa920>
    ed50:	mov	r0, r2
    ed54:	bl	4110 <g_object_unref@plt>
    ed58:	mov	r0, r4
    ed5c:	bl	42f0 <_Unwind_Resume@plt>
    ed60:	mov	r4, r0
    ed64:	mov	r0, r6
    ed68:	bl	4110 <g_object_unref@plt>
    ed6c:	b	ed44 <main@@Base+0xa90c>
    ed70:	cmp	r6, #0
    ed74:	mov	r4, r0
    ed78:	bne	ed64 <main@@Base+0xa92c>
    ed7c:	b	ed44 <main@@Base+0xa90c>
    ed80:	b	ed70 <main@@Base+0xa938>
    ed84:	b	ed40 <main@@Base+0xa908>
    ed88:	andeq	r0, r3, r0, asr #10
    ed8c:	andeq	r8, r1, r4, lsl #10
    ed90:	ldrdeq	r8, [r1], -r4
    ed94:			; <UNDEFINED> instruction: 0xffffd728
    ed98:	strdeq	r8, [r1], -ip
    ed9c:			; <UNDEFINED> instruction: 0xffffd6e8
    eda0:	andeq	r6, r1, ip, lsl #6
    eda4:	andeq	r8, r1, r0, lsr #9
    eda8:	strdeq	r6, [r1], -ip
    edac:	andeq	r8, r1, r0, ror #7
    edb0:	strdeq	r8, [r1], -ip
    edb4:	ldr	ip, [pc, #1528]	; f3b4 <main@@Base+0xaf7c>
    edb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    edbc:	mov	r5, r0
    edc0:	ldr	r0, [pc, #1520]	; f3b8 <main@@Base+0xaf80>
    edc4:	sub	sp, sp, #76	; 0x4c
    edc8:	add	ip, pc, ip
    edcc:	mov	fp, r1
    edd0:	str	r2, [sp, #20]
    edd4:	str	r3, [sp, #24]
    edd8:	mov	r3, ip
    eddc:	ldr	r0, [ip, r0]
    ede0:	ldr	r1, [pc, #1492]	; f3bc <main@@Base+0xaf84>
    ede4:	ldr	r3, [r0]
    ede8:	add	r1, pc, r1
    edec:	str	r0, [sp, #52]	; 0x34
    edf0:	ldr	r4, [r1]
    edf4:	str	r3, [sp, #68]	; 0x44
    edf8:	bl	23a78 <main@@Base+0x1f640>
    edfc:	mov	r1, r0
    ee00:	mov	r0, r5
    ee04:	bl	39d8 <g_type_check_instance_cast@plt>
    ee08:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    ee0c:	subs	r6, r0, #0
    ee10:	beq	f29c <main@@Base+0xae64>
    ee14:	mov	r0, r5
    ee18:	ldr	r1, [sp, #24]
    ee1c:	bl	e320 <main@@Base+0x9ee8>
    ee20:	cmp	r0, #0
    ee24:	beq	ef04 <main@@Base+0xaacc>
    ee28:	ldr	r2, [sp, #20]
    ee2c:	ands	r6, r2, #16
    ee30:	beq	f22c <main@@Base+0xadf4>
    ee34:	ldr	r3, [sp, #20]
    ee38:	ands	r6, r3, #32
    ee3c:	beq	f264 <main@@Base+0xae2c>
    ee40:	add	r4, r5, r4
    ee44:	str	r4, [sp, #56]	; 0x38
    ee48:	ldr	r2, [sp, #56]	; 0x38
    ee4c:	movw	r4, #65535	; 0xffff
    ee50:	ldrh	r3, [r2, #40]	; 0x28
    ee54:	cmp	r3, r4
    ee58:	beq	ef20 <main@@Base+0xaae8>
    ee5c:	mov	r0, fp
    ee60:	bl	11730 <main@@Base+0xd2f8>
    ee64:	ldr	r3, [sp, #56]	; 0x38
    ee68:	ldrh	r7, [r3, #40]	; 0x28
    ee6c:	mov	r6, r0
    ee70:	mov	r0, r5
    ee74:	bl	e00c <main@@Base+0x9bd4>
    ee78:	cmp	r6, r4
    ee7c:	beq	ef20 <main@@Base+0xaae8>
    ee80:	subs	ip, r6, r7
    ee84:	rsbs	r3, ip, #0
    ee88:	adcs	r3, r3, ip
    ee8c:	cmp	r7, r4
    ee90:	moveq	r3, #0
    ee94:	cmp	r3, #0
    ee98:	bne	ef20 <main@@Base+0xaae8>
    ee9c:	subs	r1, r6, r0
    eea0:	rsbs	r6, r1, #0
    eea4:	adcs	r6, r6, r1
    eea8:	cmp	r0, r4
    eeac:	moveq	r6, #0
    eeb0:	cmp	r6, #0
    eeb4:	bne	ef20 <main@@Base+0xaae8>
    eeb8:	bl	40a4 <fwupd_error_quark@plt>
    eebc:	mov	r7, r0
    eec0:	mov	r0, fp
    eec4:	bl	11730 <main@@Base+0xd2f8>
    eec8:	ldr	r2, [sp, #56]	; 0x38
    eecc:	ldrh	r4, [r2, #40]	; 0x28
    eed0:	mov	r8, r0
    eed4:	mov	r0, r5
    eed8:	bl	e00c <main@@Base+0x9bd4>
    eedc:	ldr	r3, [pc, #1244]	; f3c0 <main@@Base+0xaf88>
    eee0:	str	r8, [sp]
    eee4:	mov	r1, r7
    eee8:	mov	r2, #10
    eeec:	str	r4, [sp, #4]
    eef0:	add	r3, pc, r3
    eef4:	str	r0, [sp, #8]
    eef8:	ldr	r0, [sp, #24]
    eefc:	bl	4350 <g_set_error@plt>
    ef00:	mov	r0, r6
    ef04:	ldr	r2, [sp, #52]	; 0x34
    ef08:	ldr	ip, [sp, #68]	; 0x44
    ef0c:	ldr	r3, [r2]
    ef10:	cmp	ip, r3
    ef14:	bne	f364 <main@@Base+0xaf2c>
    ef18:	add	sp, sp, #76	; 0x4c
    ef1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ef20:	ldr	r2, [sp, #56]	; 0x38
    ef24:	movw	r4, #65535	; 0xffff
    ef28:	ldrh	r3, [r2, #38]	; 0x26
    ef2c:	cmp	r3, r4
    ef30:	beq	efe0 <main@@Base+0xaba8>
    ef34:	mov	r0, fp
    ef38:	bl	117c0 <main@@Base+0xd388>
    ef3c:	ldr	r3, [sp, #56]	; 0x38
    ef40:	ldrh	r7, [r3, #38]	; 0x26
    ef44:	mov	r6, r0
    ef48:	mov	r0, r5
    ef4c:	bl	e0a4 <main@@Base+0x9c6c>
    ef50:	cmp	r6, r4
    ef54:	beq	efe0 <main@@Base+0xaba8>
    ef58:	subs	r2, r6, r7
    ef5c:	rsbs	r3, r2, #0
    ef60:	adcs	r3, r3, r2
    ef64:	cmp	r7, r4
    ef68:	moveq	r3, #0
    ef6c:	cmp	r3, #0
    ef70:	bne	efe0 <main@@Base+0xaba8>
    ef74:	subs	r3, r6, r0
    ef78:	rsbs	r6, r3, #0
    ef7c:	adcs	r6, r6, r3
    ef80:	cmp	r0, r4
    ef84:	moveq	r6, #0
    ef88:	cmp	r6, #0
    ef8c:	bne	efe0 <main@@Base+0xaba8>
    ef90:	bl	40a4 <fwupd_error_quark@plt>
    ef94:	mov	r7, r0
    ef98:	mov	r0, fp
    ef9c:	bl	117c0 <main@@Base+0xd388>
    efa0:	ldr	r2, [sp, #56]	; 0x38
    efa4:	ldrh	r4, [r2, #38]	; 0x26
    efa8:	mov	r8, r0
    efac:	mov	r0, r5
    efb0:	bl	e0a4 <main@@Base+0x9c6c>
    efb4:	ldr	r3, [pc, #1032]	; f3c4 <main@@Base+0xaf8c>
    efb8:	str	r8, [sp]
    efbc:	mov	r1, r7
    efc0:	mov	r2, #10
    efc4:	str	r4, [sp, #4]
    efc8:	add	r3, pc, r3
    efcc:	str	r0, [sp, #8]
    efd0:	ldr	r0, [sp, #24]
    efd4:	bl	4350 <g_set_error@plt>
    efd8:	mov	r0, r6
    efdc:	b	ef04 <main@@Base+0xaacc>
    efe0:	mov	r0, fp
    efe4:	bl	114c8 <main@@Base+0xd090>
    efe8:	ldr	r4, [r0, #4]
    efec:	mov	r9, r0
    eff0:	cmp	r4, #0
    eff4:	beq	f2d0 <main@@Base+0xae98>
    eff8:	ldr	r3, [pc, #968]	; f3c8 <main@@Base+0xaf90>
    effc:	mov	r6, #0
    f000:	ldr	r2, [pc, #964]	; f3cc <main@@Base+0xaf94>
    f004:	add	r3, pc, r3
    f008:	str	r3, [sp, #60]	; 0x3c
    f00c:	add	r2, pc, r2
    f010:	ldr	r3, [pc, #952]	; f3d0 <main@@Base+0xaf98>
    f014:	str	r2, [sp, #32]
    f018:	ldr	r2, [pc, #948]	; f3d4 <main@@Base+0xaf9c>
    f01c:	add	r3, pc, r3
    f020:	str	r3, [sp, #36]	; 0x24
    f024:	add	r2, pc, r2
    f028:	ldr	r3, [pc, #936]	; f3d8 <main@@Base+0xafa0>
    f02c:	str	r2, [sp, #40]	; 0x28
    f030:	ldr	r2, [pc, #932]	; f3dc <main@@Base+0xafa4>
    f034:	add	r3, pc, r3
    f038:	str	r3, [sp, #44]	; 0x2c
    f03c:	add	r2, pc, r2
    f040:	str	r2, [sp, #48]	; 0x30
    f044:	b	f170 <main@@Base+0xad38>
    f048:	ldr	r0, [sp, #32]
    f04c:	mov	r1, #128	; 0x80
    f050:	ldr	r2, [sp, #36]	; 0x24
    f054:	bl	3a38 <g_log@plt>
    f058:	mov	r0, r4
    f05c:	bl	1a82c <main@@Base+0x163f4>
    f060:	mov	r8, r0
    f064:	mov	r0, fp
    f068:	bl	12964 <main@@Base+0xe52c>
    f06c:	ldr	r3, [sp, #20]
    f070:	mov	sl, r0
    f074:	tst	r3, #64	; 0x40
    f078:	bne	f0ac <main@@Base+0xac74>
    f07c:	adds	r3, r0, #0
    f080:	movne	r3, #1
    f084:	cmp	r8, #0
    f088:	movne	r3, #0
    f08c:	cmp	r3, #0
    f090:	bne	f1d8 <main@@Base+0xada0>
    f094:	rsbs	sl, r0, #1
    f098:	movcc	sl, #0
    f09c:	cmp	r8, #0
    f0a0:	moveq	sl, #0
    f0a4:	cmp	sl, #0
    f0a8:	bne	f320 <main@@Base+0xaee8>
    f0ac:	ldr	r2, [sp, #20]
    f0b0:	mov	r0, fp
    f0b4:	and	r8, r2, #1
    f0b8:	bl	118e0 <main@@Base+0xd4a8>
    f0bc:	mov	r3, #0
    f0c0:	cmp	r0, #1
    f0c4:	str	r3, [sp]
    f0c8:	mov	r0, r4
    f0cc:	str	r3, [sp, #4]
    f0d0:	mov	r3, r5
    f0d4:	ldr	r1, [sp, #40]	; 0x28
    f0d8:	orreq	r8, r8, #128	; 0x80
    f0dc:	ldr	r2, [sp, #44]	; 0x2c
    f0e0:	bl	3d38 <g_signal_connect_data@plt>
    f0e4:	mov	r2, #0
    f0e8:	str	r2, [sp]
    f0ec:	str	r2, [sp, #4]
    f0f0:	mov	r3, r5
    f0f4:	ldr	r2, [pc, #740]	; f3e0 <main@@Base+0xafa8>
    f0f8:	str	r0, [sp, #28]
    f0fc:	mov	r0, r4
    f100:	ldr	r1, [sp, #48]	; 0x30
    f104:	add	r2, pc, r2
    f108:	bl	3d38 <g_signal_connect_data@plt>
    f10c:	mov	sl, r0
    f110:	mov	r1, r7
    f114:	mov	r0, r4
    f118:	mov	r2, r8
    f11c:	ldr	r3, [sp, #24]
    f120:	bl	19ed0 <main@@Base+0x15a98>
    f124:	mov	r7, r0
    f128:	ldr	r1, [sp, #28]
    f12c:	mov	r0, r4
    f130:	bl	3d8c <g_signal_handler_disconnect@plt>
    f134:	mov	r0, r4
    f138:	mov	r1, sl
    f13c:	bl	3d8c <g_signal_handler_disconnect@plt>
    f140:	cmp	r7, #0
    f144:	beq	f204 <main@@Base+0xadcc>
    f148:	ldr	r0, [sp, #64]	; 0x40
    f14c:	cmp	r0, #0
    f150:	beq	f158 <main@@Base+0xad20>
    f154:	bl	38e8 <g_error_free@plt>
    f158:	mov	r0, r4
    f15c:	add	r6, r6, #1
    f160:	bl	4110 <g_object_unref@plt>
    f164:	ldr	r3, [r9, #4]
    f168:	cmp	r3, r6
    f16c:	bls	f2f4 <main@@Base+0xaebc>
    f170:	ldr	r3, [r9]
    f174:	mov	r2, #0
    f178:	str	r2, [sp, #64]	; 0x40
    f17c:	ldr	r7, [r3, r6, lsl #2]
    f180:	mov	r0, r7
    f184:	bl	15cb8 <main@@Base+0x11880>
    f188:	mov	r1, r0
    f18c:	ldr	r2, [sp, #24]
    f190:	mov	r0, r5
    f194:	bl	dae8 <main@@Base+0x96b0>
    f198:	subs	r4, r0, #0
    f19c:	beq	f204 <main@@Base+0xadcc>
    f1a0:	add	r1, sp, #64	; 0x40
    f1a4:	bl	1a66c <main@@Base+0x16234>
    f1a8:	subs	r3, r0, #0
    f1ac:	bne	f048 <main@@Base+0xac10>
    f1b0:	ldr	r8, [sp, #64]	; 0x40
    f1b4:	bl	40a4 <fwupd_error_quark@plt>
    f1b8:	mov	r1, r0
    f1bc:	mov	r2, #8
    f1c0:	mov	r0, r8
    f1c4:	bl	3d68 <g_error_matches@plt>
    f1c8:	subs	r3, r0, #0
    f1cc:	beq	f350 <main@@Base+0xaf18>
    f1d0:	ldr	r3, [sp, #60]	; 0x3c
    f1d4:	b	f048 <main@@Base+0xac10>
    f1d8:	bl	40a4 <fwupd_error_quark@plt>
    f1dc:	mov	r5, r0
    f1e0:	mov	r0, sl
    f1e4:	bl	bb50 <main@@Base+0x7718>
    f1e8:	ldr	r3, [pc, #500]	; f3e4 <main@@Base+0xafac>
    f1ec:	mov	r1, r5
    f1f0:	str	r0, [sp]
    f1f4:	mov	r2, #7
    f1f8:	ldr	r0, [sp, #24]
    f1fc:	add	r3, pc, r3
    f200:	bl	4350 <g_set_error@plt>
    f204:	ldr	r0, [sp, #64]	; 0x40
    f208:	cmp	r0, #0
    f20c:	beq	f214 <main@@Base+0xaddc>
    f210:	bl	38e8 <g_error_free@plt>
    f214:	cmp	r4, #0
    f218:	beq	f224 <main@@Base+0xadec>
    f21c:	mov	r0, r4
    f220:	bl	4110 <g_object_unref@plt>
    f224:	mov	r0, #0
    f228:	b	ef04 <main@@Base+0xaacc>
    f22c:	mov	r0, fp
    f230:	bl	11730 <main@@Base+0xd2f8>
    f234:	movw	r3, #65535	; 0xffff
    f238:	cmp	r0, r3
    f23c:	bne	ee34 <main@@Base+0xa9fc>
    f240:	bl	40a4 <fwupd_error_quark@plt>
    f244:	ldr	r3, [pc, #412]	; f3e8 <main@@Base+0xafb0>
    f248:	mov	r2, #10
    f24c:	add	r3, pc, r3
    f250:	mov	r1, r0
    f254:	ldr	r0, [sp, #24]
    f258:	bl	4350 <g_set_error@plt>
    f25c:	mov	r0, r6
    f260:	b	ef04 <main@@Base+0xaacc>
    f264:	mov	r0, fp
    f268:	bl	117c0 <main@@Base+0xd388>
    f26c:	movw	r3, #65535	; 0xffff
    f270:	cmp	r0, r3
    f274:	bne	ee40 <main@@Base+0xaa08>
    f278:	bl	40a4 <fwupd_error_quark@plt>
    f27c:	ldr	r3, [pc, #360]	; f3ec <main@@Base+0xafb4>
    f280:	mov	r2, #10
    f284:	add	r3, pc, r3
    f288:	mov	r1, r0
    f28c:	ldr	r0, [sp, #24]
    f290:	bl	4350 <g_set_error@plt>
    f294:	mov	r0, r6
    f298:	b	ef04 <main@@Base+0xaacc>
    f29c:	bl	40a4 <fwupd_error_quark@plt>
    f2a0:	mov	r4, r0
    f2a4:	mov	r0, r5
    f2a8:	bl	ddc4 <main@@Base+0x998c>
    f2ac:	ldr	r3, [pc, #316]	; f3f0 <main@@Base+0xafb8>
    f2b0:	mov	r1, r4
    f2b4:	mov	r2, r6
    f2b8:	add	r3, pc, r3
    f2bc:	str	r0, [sp]
    f2c0:	ldr	r0, [sp, #24]
    f2c4:	bl	4350 <g_set_error@plt>
    f2c8:	mov	r0, r6
    f2cc:	b	ef04 <main@@Base+0xaacc>
    f2d0:	bl	40a4 <fwupd_error_quark@plt>
    f2d4:	ldr	r3, [pc, #280]	; f3f4 <main@@Base+0xafbc>
    f2d8:	mov	r2, #7
    f2dc:	add	r3, pc, r3
    f2e0:	mov	r1, r0
    f2e4:	ldr	r0, [sp, #24]
    f2e8:	bl	3ae0 <g_set_error_literal@plt>
    f2ec:	mov	r0, r4
    f2f0:	b	ef04 <main@@Base+0xaacc>
    f2f4:	ldr	r3, [sp, #56]	; 0x38
    f2f8:	mov	r4, #1
    f2fc:	str	r4, [r3, #24]
    f300:	bl	1f330 <main@@Base+0x1aef8>
    f304:	mov	r1, r0
    f308:	mov	r0, r5
    f30c:	bl	39d8 <g_type_check_instance_cast@plt>
    f310:	mov	r1, r4
    f314:	bl	20e98 <main@@Base+0x1ca60>
    f318:	mov	r0, r4
    f31c:	b	ef04 <main@@Base+0xaacc>
    f320:	bl	40a4 <fwupd_error_quark@plt>
    f324:	mov	r5, r0
    f328:	mov	r0, r8
    f32c:	bl	bb50 <main@@Base+0x7718>
    f330:	ldr	r3, [pc, #192]	; f3f8 <main@@Base+0xafc0>
    f334:	mov	r1, r5
    f338:	str	r0, [sp]
    f33c:	mov	r2, #7
    f340:	ldr	r0, [sp, #24]
    f344:	add	r3, pc, r3
    f348:	bl	4350 <g_set_error@plt>
    f34c:	b	f204 <main@@Base+0xadcc>
    f350:	ldr	r1, [sp, #64]	; 0x40
    f354:	ldr	r0, [sp, #24]
    f358:	str	r3, [sp, #64]	; 0x40
    f35c:	bl	3948 <g_propagate_error@plt>
    f360:	b	f204 <main@@Base+0xadcc>
    f364:	bl	3e4c <__stack_chk_fail@plt>
    f368:	mov	r5, r0
    f36c:	ldr	r0, [sp, #64]	; 0x40
    f370:	cmp	r0, #0
    f374:	beq	f37c <main@@Base+0xaf44>
    f378:	bl	38e8 <g_error_free@plt>
    f37c:	cmp	r4, #0
    f380:	beq	f38c <main@@Base+0xaf54>
    f384:	mov	r0, r4
    f388:	bl	4110 <g_object_unref@plt>
    f38c:	mov	r0, r5
    f390:	bl	42f0 <_Unwind_Resume@plt>
    f394:	mov	r5, r0
    f398:	b	f37c <main@@Base+0xaf44>
    f39c:	mov	r5, r0
    f3a0:	b	f384 <main@@Base+0xaf4c>
    f3a4:	mov	r5, r0
    f3a8:	mov	r4, #0
    f3ac:	b	f36c <main@@Base+0xaf34>
    f3b0:	b	f3a4 <main@@Base+0xaf6c>
    f3b4:			; <UNDEFINED> instruction: 0x0002fdb8
    f3b8:	andeq	r0, r0, r0, lsr r4
    f3bc:	andeq	r0, r3, r8, lsl r2
    f3c0:	andeq	r8, r1, r4, lsr #4
    f3c4:	andeq	r8, r1, r8, lsl #3
    f3c8:	muleq	r1, r4, r0
    f3cc:	andeq	r5, r1, r0, lsl #29
    f3d0:	andeq	r8, r1, ip, lsl #3
    f3d4:	andeq	r8, r1, ip, lsr #32
    f3d8:			; <UNDEFINED> instruction: 0xffffd250
    f3dc:	andeq	r8, r1, r8, lsr #32
    f3e0:			; <UNDEFINED> instruction: 0xffffd158
    f3e4:	andeq	r7, r1, r8, asr #31
    f3e8:	andeq	r7, r1, r0, lsl #29
    f3ec:	andeq	r7, r1, ip, ror #28
    f3f0:	andeq	r7, r1, r8, ror #27
    f3f4:			; <UNDEFINED> instruction: 0x00017eb0
    f3f8:			; <UNDEFINED> instruction: 0x00017eb4
    f3fc:	ldr	r3, [pc, #172]	; f4b0 <main@@Base+0xb078>
    f400:	push	{r4, r5, r6, r7, r8, lr}
    f404:	add	r3, pc, r3
    f408:	subs	r4, r1, #0
    f40c:	mov	r6, r0
    f410:	ldr	r7, [r3]
    f414:	popeq	{r4, r5, r6, r7, r8, pc}
    f418:	ldr	r5, [r4]
    f41c:	bl	3ce4 <g_usb_device_error_quark@plt>
    f420:	mov	r2, #3
    f424:	mov	r1, r0
    f428:	mov	r0, r5
    f42c:	bl	3d68 <g_error_matches@plt>
    f430:	cmp	r0, #0
    f434:	popeq	{r4, r5, r6, r7, r8, pc}
    f438:	mov	r0, r6
    f43c:	mov	r1, #0
    f440:	bl	e448 <main@@Base+0xa010>
    f444:	cmp	r0, #0
    f448:	popeq	{r4, r5, r6, r7, r8, pc}
    f44c:	add	r6, r6, r7
    f450:	ldr	r0, [r6, #8]
    f454:	cmp	r0, #10
    f458:	popne	{r4, r5, r6, r7, r8, pc}
    f45c:	ldr	r3, [r6, #12]
    f460:	cmp	r3, #0
    f464:	popeq	{r4, r5, r6, r7, r8, pc}
    f468:	cmp	r3, #11
    f46c:	bne	f484 <main@@Base+0xb04c>
    f470:	ldr	r1, [pc, #60]	; f4b4 <main@@Base+0xb07c>
    f474:	mov	r0, r4
    f478:	pop	{r4, r5, r6, r7, r8, lr}
    f47c:	add	r1, pc, r1
    f480:	b	4404 <g_prefix_error@plt>
    f484:	bl	b8b8 <main@@Base+0x7480>
    f488:	mov	r5, r0
    f48c:	ldr	r0, [r6, #12]
    f490:	bl	b9c8 <main@@Base+0x7590>
    f494:	ldr	r1, [pc, #28]	; f4b8 <main@@Base+0xb080>
    f498:	mov	r2, r5
    f49c:	add	r1, pc, r1
    f4a0:	mov	r3, r0
    f4a4:	mov	r0, r4
    f4a8:	pop	{r4, r5, r6, r7, r8, lr}
    f4ac:	b	4404 <g_prefix_error@plt>
    f4b0:	strdeq	pc, [r2], -ip
    f4b4:			; <UNDEFINED> instruction: 0x00017db4
    f4b8:			; <UNDEFINED> instruction: 0x00017db0
    f4bc:	ldr	r3, [pc, #572]	; f700 <main@@Base+0xb2c8>
    f4c0:	ldr	r2, [pc, #572]	; f704 <main@@Base+0xb2cc>
    f4c4:	add	r3, pc, r3
    f4c8:	push	{r4, r5, r6, r7, r8, lr}
    f4cc:	mov	r5, r1
    f4d0:	ldr	r6, [r3, r2]
    f4d4:	sub	sp, sp, #48	; 0x30
    f4d8:	ldr	r1, [pc, #552]	; f708 <main@@Base+0xb2d0>
    f4dc:	mov	r4, r0
    f4e0:	add	r1, pc, r1
    f4e4:	ldr	r3, [r6]
    f4e8:	ldr	r7, [r1]
    f4ec:	str	r3, [sp, #44]	; 0x2c
    f4f0:	add	r7, r0, r7
    f4f4:	bl	23a78 <main@@Base+0x1f640>
    f4f8:	mov	r1, r0
    f4fc:	mov	r0, r4
    f500:	bl	39d8 <g_type_check_instance_cast@plt>
    f504:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    f508:	mov	r3, #0
    f50c:	str	r3, [sp, #40]	; 0x28
    f510:	mov	r8, r0
    f514:	bl	c2b4 <main@@Base+0x7e7c>
    f518:	cmp	r4, #0
    f51c:	beq	f54c <main@@Base+0xb114>
    f520:	ldr	r3, [r4]
    f524:	cmp	r3, #0
    f528:	beq	f538 <main@@Base+0xb100>
    f52c:	ldr	r3, [r3]
    f530:	cmp	r0, r3
    f534:	beq	f59c <main@@Base+0xb164>
    f538:	mov	r1, r0
    f53c:	mov	r0, r4
    f540:	bl	3fcc <g_type_check_instance_is_a@plt>
    f544:	cmp	r0, #0
    f548:	bne	f59c <main@@Base+0xb164>
    f54c:	ldr	r1, [pc, #440]	; f70c <main@@Base+0xb2d4>
    f550:	ldr	r0, [pc, #440]	; f710 <main@@Base+0xb2d8>
    f554:	ldr	r2, [pc, #440]	; f714 <main@@Base+0xb2dc>
    f558:	add	r1, pc, r1
    f55c:	add	r0, pc, r0
    f560:	add	r1, r1, #780	; 0x30c
    f564:	add	r2, pc, r2
    f568:	bl	3870 <g_return_if_fail_warning@plt>
    f56c:	mov	r4, #0
    f570:	ldr	r0, [sp, #40]	; 0x28
    f574:	cmp	r0, #0
    f578:	beq	f580 <main@@Base+0xb148>
    f57c:	bl	38e8 <g_error_free@plt>
    f580:	ldr	r2, [sp, #44]	; 0x2c
    f584:	mov	r0, r4
    f588:	ldr	r3, [r6]
    f58c:	cmp	r2, r3
    f590:	bne	f6dc <main@@Base+0xb2a4>
    f594:	add	sp, sp, #48	; 0x30
    f598:	pop	{r4, r5, r6, r7, r8, pc}
    f59c:	cmp	r5, #0
    f5a0:	beq	f5d4 <main@@Base+0xb19c>
    f5a4:	ldr	r3, [r5]
    f5a8:	cmp	r3, #0
    f5ac:	beq	f5d4 <main@@Base+0xb19c>
    f5b0:	ldr	r1, [pc, #352]	; f718 <main@@Base+0xb2e0>
    f5b4:	ldr	r0, [pc, #352]	; f71c <main@@Base+0xb2e4>
    f5b8:	ldr	r2, [pc, #352]	; f720 <main@@Base+0xb2e8>
    f5bc:	add	r1, pc, r1
    f5c0:	add	r0, pc, r0
    f5c4:	add	r1, r1, #780	; 0x30c
    f5c8:	add	r2, pc, r2
    f5cc:	bl	3870 <g_return_if_fail_warning@plt>
    f5d0:	b	f56c <main@@Base+0xb134>
    f5d4:	cmp	r8, #0
    f5d8:	beq	f6ac <main@@Base+0xb274>
    f5dc:	ldr	r3, [r7, #4]
    f5e0:	tst	r3, #64	; 0x40
    f5e4:	beq	f608 <main@@Base+0xb1d0>
    f5e8:	bl	40a4 <fwupd_error_quark@plt>
    f5ec:	ldr	r3, [pc, #304]	; f724 <main@@Base+0xb2ec>
    f5f0:	mov	r1, r0
    f5f4:	mov	r2, #10
    f5f8:	mov	r0, r5
    f5fc:	add	r3, pc, r3
    f600:	bl	3ae0 <g_set_error_literal@plt>
    f604:	b	f56c <main@@Base+0xb134>
    f608:	mov	r0, r4
    f60c:	mov	r1, r5
    f610:	bl	e320 <main@@Base+0x9ee8>
    f614:	cmp	r0, #0
    f618:	beq	f56c <main@@Base+0xb134>
    f61c:	mov	ip, #0
    f620:	mov	r3, #6
    f624:	str	ip, [sp, #4]
    f628:	mov	r1, #1
    f62c:	str	r3, [sp]
    f630:	mov	r0, r8
    f634:	ldrb	lr, [r7, #46]	; 0x2e
    f638:	add	r8, sp, #40	; 0x28
    f63c:	str	ip, [sp, #12]
    f640:	mov	r2, r1
    f644:	str	ip, [sp, #16]
    f648:	mov	r3, r1
    f64c:	str	lr, [sp, #8]
    f650:	str	ip, [sp, #20]
    f654:	ldr	lr, [r7, #52]	; 0x34
    f658:	str	ip, [sp, #28]
    f65c:	str	r8, [sp, #32]
    f660:	str	lr, [sp, #24]
    f664:	bl	39c0 <g_usb_device_control_transfer@plt>
    f668:	cmp	r0, #0
    f66c:	movne	r4, #1
    f670:	bne	f570 <main@@Base+0xb138>
    f674:	mov	r0, r4
    f678:	mov	r1, r8
    f67c:	bl	f3fc <main@@Base+0xafc4>
    f680:	bl	40a4 <fwupd_error_quark@plt>
    f684:	ldr	ip, [sp, #40]	; 0x28
    f688:	mov	r1, r0
    f68c:	ldr	r3, [pc, #148]	; f728 <main@@Base+0xb2f0>
    f690:	mov	r0, r5
    f694:	mov	r2, #10
    f698:	ldr	ip, [ip, #8]
    f69c:	add	r3, pc, r3
    f6a0:	str	ip, [sp]
    f6a4:	bl	4350 <g_set_error@plt>
    f6a8:	b	f56c <main@@Base+0xb134>
    f6ac:	bl	40a4 <fwupd_error_quark@plt>
    f6b0:	mov	r7, r0
    f6b4:	mov	r0, r4
    f6b8:	bl	ddc4 <main@@Base+0x998c>
    f6bc:	ldr	r3, [pc, #104]	; f72c <main@@Base+0xb2f4>
    f6c0:	mov	r1, r7
    f6c4:	str	r0, [sp]
    f6c8:	mov	r2, #0
    f6cc:	mov	r0, r5
    f6d0:	add	r3, pc, r3
    f6d4:	bl	4350 <g_set_error@plt>
    f6d8:	b	f56c <main@@Base+0xb134>
    f6dc:	bl	3e4c <__stack_chk_fail@plt>
    f6e0:	ldr	r3, [sp, #40]	; 0x28
    f6e4:	mov	r4, r0
    f6e8:	cmp	r3, #0
    f6ec:	beq	f6f8 <main@@Base+0xb2c0>
    f6f0:	mov	r0, r3
    f6f4:	bl	38e8 <g_error_free@plt>
    f6f8:	mov	r0, r4
    f6fc:	bl	42f0 <_Unwind_Resume@plt>
    f700:			; <UNDEFINED> instruction: 0x0002f6bc
    f704:	andeq	r0, r0, r0, lsr r4
    f708:	andeq	pc, r2, r0, lsr #22
    f70c:	andeq	r7, r1, r8, asr #3
    f710:	andeq	r5, r1, r0, lsr r9
    f714:	andeq	r7, r1, r8, asr #10
    f718:	andeq	r7, r1, r4, ror #2
    f71c:	andeq	r5, r1, ip, asr #17
    f720:	andeq	r7, r1, r8, lsr #17
    f724:	andeq	r7, r1, r4, lsl #25
    f728:	andeq	r7, r1, r4, lsl #24
    f72c:	andeq	r7, r1, r8, lsl #23
    f730:	ldr	r3, [pc, #572]	; f974 <main@@Base+0xb53c>
    f734:	ldr	r2, [pc, #572]	; f978 <main@@Base+0xb540>
    f738:	add	r3, pc, r3
    f73c:	push	{r4, r5, r6, r7, r8, lr}
    f740:	mov	r5, r1
    f744:	ldr	r6, [r3, r2]
    f748:	sub	sp, sp, #48	; 0x30
    f74c:	ldr	r1, [pc, #552]	; f97c <main@@Base+0xb544>
    f750:	mov	r4, r0
    f754:	add	r1, pc, r1
    f758:	ldr	r3, [r6]
    f75c:	ldr	r7, [r1]
    f760:	str	r3, [sp, #44]	; 0x2c
    f764:	add	r7, r0, r7
    f768:	bl	23a78 <main@@Base+0x1f640>
    f76c:	mov	r1, r0
    f770:	mov	r0, r4
    f774:	bl	39d8 <g_type_check_instance_cast@plt>
    f778:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    f77c:	mov	r3, #0
    f780:	str	r3, [sp, #40]	; 0x28
    f784:	mov	r8, r0
    f788:	bl	c2b4 <main@@Base+0x7e7c>
    f78c:	cmp	r4, #0
    f790:	beq	f7c0 <main@@Base+0xb388>
    f794:	ldr	r3, [r4]
    f798:	cmp	r3, #0
    f79c:	beq	f7ac <main@@Base+0xb374>
    f7a0:	ldr	r3, [r3]
    f7a4:	cmp	r0, r3
    f7a8:	beq	f810 <main@@Base+0xb3d8>
    f7ac:	mov	r1, r0
    f7b0:	mov	r0, r4
    f7b4:	bl	3fcc <g_type_check_instance_is_a@plt>
    f7b8:	cmp	r0, #0
    f7bc:	bne	f810 <main@@Base+0xb3d8>
    f7c0:	ldr	r1, [pc, #440]	; f980 <main@@Base+0xb548>
    f7c4:	ldr	r0, [pc, #440]	; f984 <main@@Base+0xb54c>
    f7c8:	ldr	r2, [pc, #440]	; f988 <main@@Base+0xb550>
    f7cc:	add	r1, pc, r1
    f7d0:	add	r0, pc, r0
    f7d4:	add	r1, r1, #800	; 0x320
    f7d8:	add	r2, pc, r2
    f7dc:	bl	3870 <g_return_if_fail_warning@plt>
    f7e0:	mov	r4, #0
    f7e4:	ldr	r0, [sp, #40]	; 0x28
    f7e8:	cmp	r0, #0
    f7ec:	beq	f7f4 <main@@Base+0xb3bc>
    f7f0:	bl	38e8 <g_error_free@plt>
    f7f4:	ldr	r2, [sp, #44]	; 0x2c
    f7f8:	mov	r0, r4
    f7fc:	ldr	r3, [r6]
    f800:	cmp	r2, r3
    f804:	bne	f950 <main@@Base+0xb518>
    f808:	add	sp, sp, #48	; 0x30
    f80c:	pop	{r4, r5, r6, r7, r8, pc}
    f810:	cmp	r5, #0
    f814:	beq	f848 <main@@Base+0xb410>
    f818:	ldr	r3, [r5]
    f81c:	cmp	r3, #0
    f820:	beq	f848 <main@@Base+0xb410>
    f824:	ldr	r1, [pc, #352]	; f98c <main@@Base+0xb554>
    f828:	ldr	r0, [pc, #352]	; f990 <main@@Base+0xb558>
    f82c:	ldr	r2, [pc, #352]	; f994 <main@@Base+0xb55c>
    f830:	add	r1, pc, r1
    f834:	add	r0, pc, r0
    f838:	add	r1, r1, #800	; 0x320
    f83c:	add	r2, pc, r2
    f840:	bl	3870 <g_return_if_fail_warning@plt>
    f844:	b	f7e0 <main@@Base+0xb3a8>
    f848:	cmp	r8, #0
    f84c:	beq	f920 <main@@Base+0xb4e8>
    f850:	ldr	r3, [r7, #4]
    f854:	tst	r3, #64	; 0x40
    f858:	beq	f87c <main@@Base+0xb444>
    f85c:	bl	40a4 <fwupd_error_quark@plt>
    f860:	ldr	r3, [pc, #304]	; f998 <main@@Base+0xb560>
    f864:	mov	r1, r0
    f868:	mov	r2, #10
    f86c:	mov	r0, r5
    f870:	add	r3, pc, r3
    f874:	bl	3ae0 <g_set_error_literal@plt>
    f878:	b	f7e0 <main@@Base+0xb3a8>
    f87c:	mov	r0, r4
    f880:	mov	r1, r5
    f884:	bl	e320 <main@@Base+0x9ee8>
    f888:	cmp	r0, #0
    f88c:	beq	f7e0 <main@@Base+0xb3a8>
    f890:	mov	ip, #0
    f894:	mov	r3, #4
    f898:	str	ip, [sp, #4]
    f89c:	mov	r1, #1
    f8a0:	str	r3, [sp]
    f8a4:	mov	r0, r8
    f8a8:	ldrb	lr, [r7, #46]	; 0x2e
    f8ac:	add	r8, sp, #40	; 0x28
    f8b0:	str	ip, [sp, #12]
    f8b4:	mov	r2, r1
    f8b8:	str	ip, [sp, #16]
    f8bc:	mov	r3, r1
    f8c0:	str	lr, [sp, #8]
    f8c4:	str	ip, [sp, #20]
    f8c8:	ldr	lr, [r7, #52]	; 0x34
    f8cc:	str	ip, [sp, #28]
    f8d0:	str	r8, [sp, #32]
    f8d4:	str	lr, [sp, #24]
    f8d8:	bl	39c0 <g_usb_device_control_transfer@plt>
    f8dc:	cmp	r0, #0
    f8e0:	movne	r4, #1
    f8e4:	bne	f7e4 <main@@Base+0xb3ac>
    f8e8:	mov	r0, r4
    f8ec:	mov	r1, r8
    f8f0:	bl	f3fc <main@@Base+0xafc4>
    f8f4:	bl	40a4 <fwupd_error_quark@plt>
    f8f8:	ldr	ip, [sp, #40]	; 0x28
    f8fc:	mov	r1, r0
    f900:	ldr	r3, [pc, #148]	; f99c <main@@Base+0xb564>
    f904:	mov	r0, r5
    f908:	mov	r2, #10
    f90c:	ldr	ip, [ip, #8]
    f910:	add	r3, pc, r3
    f914:	str	ip, [sp]
    f918:	bl	4350 <g_set_error@plt>
    f91c:	b	f7e0 <main@@Base+0xb3a8>
    f920:	bl	40a4 <fwupd_error_quark@plt>
    f924:	mov	r7, r0
    f928:	mov	r0, r4
    f92c:	bl	ddc4 <main@@Base+0x998c>
    f930:	ldr	r3, [pc, #104]	; f9a0 <main@@Base+0xb568>
    f934:	mov	r1, r7
    f938:	str	r0, [sp]
    f93c:	mov	r2, #0
    f940:	mov	r0, r5
    f944:	add	r3, pc, r3
    f948:	bl	4350 <g_set_error@plt>
    f94c:	b	f7e0 <main@@Base+0xb3a8>
    f950:	bl	3e4c <__stack_chk_fail@plt>
    f954:	ldr	r3, [sp, #40]	; 0x28
    f958:	mov	r4, r0
    f95c:	cmp	r3, #0
    f960:	beq	f96c <main@@Base+0xb534>
    f964:	mov	r0, r3
    f968:	bl	38e8 <g_error_free@plt>
    f96c:	mov	r0, r4
    f970:	bl	42f0 <_Unwind_Resume@plt>
    f974:	andeq	pc, r2, r8, asr #8
    f978:	andeq	r0, r0, r0, lsr r4
    f97c:	andeq	pc, r2, ip, lsr #17
    f980:	andeq	r6, r1, r4, asr pc
    f984:			; <UNDEFINED> instruction: 0x000156bc
    f988:	ldrdeq	r7, [r1], -r4
    f98c:	strdeq	r6, [r1], -r0
    f990:	andeq	r5, r1, r8, asr r6
    f994:	andeq	r7, r1, r4, lsr r6
    f998:	andeq	r7, r1, r0, lsl sl
    f99c:	ldrdeq	r7, [r1], -r8
    f9a0:	andeq	r7, r1, r4, ror r9
    f9a4:	ldr	r3, [pc, #212]	; fa80 <main@@Base+0xb648>
    f9a8:	push	{r4, r5, r6, lr}
    f9ac:	add	r3, pc, r3
    f9b0:	mov	r4, r0
    f9b4:	mov	r6, r1
    f9b8:	ldr	r5, [r3]
    f9bc:	bl	e448 <main@@Base+0xa010>
    f9c0:	cmp	r0, #0
    f9c4:	popeq	{r4, r5, r6, pc}
    f9c8:	add	r2, r4, r5
    f9cc:	ldr	r3, [r2, #8]
    f9d0:	sub	r3, r3, #3
    f9d4:	cmp	r3, #7
    f9d8:	addls	pc, pc, r3, lsl #2
    f9dc:	b	fa78 <main@@Base+0xb640>
    f9e0:	b	fa3c <main@@Base+0xb604>
    f9e4:	b	fa78 <main@@Base+0xb640>
    f9e8:	b	fa3c <main@@Base+0xb604>
    f9ec:	b	fa78 <main@@Base+0xb640>
    f9f0:	b	fa78 <main@@Base+0xb640>
    f9f4:	b	fa78 <main@@Base+0xb640>
    f9f8:	b	fa3c <main@@Base+0xb604>
    f9fc:	b	fa00 <main@@Base+0xb5c8>
    fa00:	ldr	r0, [r2, #12]
    fa04:	bl	b9c8 <main@@Base+0x7590>
    fa08:	ldr	r2, [pc, #116]	; fa84 <main@@Base+0xb64c>
    fa0c:	mov	r1, #128	; 0x80
    fa10:	add	r2, pc, r2
    fa14:	mov	r3, r0
    fa18:	ldr	r0, [pc, #104]	; fa88 <main@@Base+0xb650>
    fa1c:	add	r0, pc, r0
    fa20:	bl	3a38 <g_log@plt>
    fa24:	mov	r0, r4
    fa28:	mov	r1, r6
    fa2c:	bl	f730 <main@@Base+0xb2f8>
    fa30:	adds	r0, r0, #0
    fa34:	movne	r0, #1
    fa38:	pop	{r4, r5, r6, pc}
    fa3c:	ldr	r0, [r2, #12]
    fa40:	bl	b9c8 <main@@Base+0x7590>
    fa44:	ldr	r2, [pc, #64]	; fa8c <main@@Base+0xb654>
    fa48:	mov	r1, #128	; 0x80
    fa4c:	add	r2, pc, r2
    fa50:	mov	r3, r0
    fa54:	ldr	r0, [pc, #52]	; fa90 <main@@Base+0xb658>
    fa58:	add	r0, pc, r0
    fa5c:	bl	3a38 <g_log@plt>
    fa60:	mov	r0, r4
    fa64:	mov	r1, r6
    fa68:	bl	f4bc <main@@Base+0xb084>
    fa6c:	adds	r0, r0, #0
    fa70:	movne	r0, #1
    fa74:	pop	{r4, r5, r6, pc}
    fa78:	mov	r0, #1
    fa7c:	pop	{r4, r5, r6, pc}
    fa80:	andeq	pc, r2, r4, asr r6	; <UNPREDICTABLE>
    fa84:	andeq	r7, r1, r8, lsl r9
    fa88:	andeq	r5, r1, r0, ror r4
    fa8c:	andeq	r7, r1, r4, asr #17
    fa90:	andeq	r5, r1, r4, lsr r4
    fa94:	push	{r3, r4, r5, r6, r7, lr}
    fa98:	mov	r5, r2
    fa9c:	ldr	r3, [pc, #244]	; fb98 <main@@Base+0xb760>
    faa0:	mov	r4, r0
    faa4:	add	r3, pc, r3
    faa8:	ldr	r7, [r3]
    faac:	add	r7, r0, r7
    fab0:	bl	23a78 <main@@Base+0x1f640>
    fab4:	mov	r1, r0
    fab8:	mov	r0, r4
    fabc:	bl	39d8 <g_type_check_instance_cast@plt>
    fac0:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    fac4:	mov	r6, r0
    fac8:	bl	23a78 <main@@Base+0x1f640>
    facc:	mov	r1, r0
    fad0:	mov	r0, r4
    fad4:	bl	39d8 <g_type_check_instance_cast@plt>
    fad8:	mov	r1, #0
    fadc:	bl	23d14 <fu_usb_device_close@@Base>
    fae0:	mov	r1, r6
    fae4:	ldr	r0, [r7, #20]
    fae8:	mov	r3, r5
    faec:	movw	r2, #5000	; 0x1388
    faf0:	bl	3dc8 <g_usb_context_wait_for_replug@plt>
    faf4:	subs	r6, r0, #0
    faf8:	beq	fb78 <main@@Base+0xb740>
    fafc:	bl	1f330 <main@@Base+0x1aef8>
    fb00:	mov	r1, r0
    fb04:	mov	r0, r4
    fb08:	bl	39d8 <g_type_check_instance_cast@plt>
    fb0c:	mov	r1, #1
    fb10:	bl	20e98 <main@@Base+0x1ca60>
    fb14:	bl	23a78 <main@@Base+0x1f640>
    fb18:	mov	r1, r0
    fb1c:	mov	r0, r4
    fb20:	bl	39d8 <g_type_check_instance_cast@plt>
    fb24:	mov	r1, r6
    fb28:	bl	24758 <fu_usb_device_open@@Base+0x814>
    fb2c:	bl	23a78 <main@@Base+0x1f640>
    fb30:	mov	r1, r0
    fb34:	mov	r0, r4
    fb38:	bl	39d8 <g_type_check_instance_cast@plt>
    fb3c:	mov	r1, r5
    fb40:	bl	23f44 <fu_usb_device_open@@Base>
    fb44:	cmp	r0, #0
    fb48:	moveq	r4, r0
    fb4c:	bne	fb60 <main@@Base+0xb728>
    fb50:	mov	r0, r6
    fb54:	bl	4110 <g_object_unref@plt>
    fb58:	mov	r0, r4
    fb5c:	pop	{r3, r4, r5, r6, r7, pc}
    fb60:	mov	r0, r4
    fb64:	mov	r1, r5
    fb68:	bl	f9a4 <main@@Base+0xb56c>
    fb6c:	adds	r4, r0, #0
    fb70:	movne	r4, #1
    fb74:	b	fb50 <main@@Base+0xb718>
    fb78:	mov	r4, r6
    fb7c:	mov	r0, r4
    fb80:	pop	{r3, r4, r5, r6, r7, pc}
    fb84:	mov	r4, r0
    fb88:	mov	r0, r6
    fb8c:	bl	4110 <g_object_unref@plt>
    fb90:	mov	r0, r4
    fb94:	bl	42f0 <_Unwind_Resume@plt>
    fb98:	andeq	pc, r2, ip, asr r5	; <UNPREDICTABLE>
    fb9c:	push	{r3, r4, r5, r6, r7, lr}
    fba0:	mov	r4, r0
    fba4:	ldr	r3, [pc, #588]	; fdf8 <main@@Base+0xb9c0>
    fba8:	mov	r5, r1
    fbac:	add	r3, pc, r3
    fbb0:	ldr	r6, [r3]
    fbb4:	bl	c2b4 <main@@Base+0x7e7c>
    fbb8:	cmp	r4, #0
    fbbc:	beq	fbec <main@@Base+0xb7b4>
    fbc0:	ldr	r3, [r4]
    fbc4:	cmp	r3, #0
    fbc8:	beq	fbd8 <main@@Base+0xb7a0>
    fbcc:	ldr	r3, [r3]
    fbd0:	cmp	r0, r3
    fbd4:	beq	fc18 <main@@Base+0xb7e0>
    fbd8:	mov	r1, r0
    fbdc:	mov	r0, r4
    fbe0:	bl	3fcc <g_type_check_instance_is_a@plt>
    fbe4:	cmp	r0, #0
    fbe8:	bne	fc18 <main@@Base+0xb7e0>
    fbec:	ldr	r1, [pc, #520]	; fdfc <main@@Base+0xb9c4>
    fbf0:	ldr	r0, [pc, #520]	; fe00 <main@@Base+0xb9c8>
    fbf4:	ldr	r2, [pc, #520]	; fe04 <main@@Base+0xb9cc>
    fbf8:	add	r1, pc, r1
    fbfc:	add	r0, pc, r0
    fc00:	add	r1, r1, #824	; 0x338
    fc04:	add	r2, pc, r2
    fc08:	bl	3870 <g_return_if_fail_warning@plt>
    fc0c:	mov	r4, #0
    fc10:	mov	r0, r4
    fc14:	pop	{r3, r4, r5, r6, r7, pc}
    fc18:	cmp	r5, #0
    fc1c:	beq	fc50 <main@@Base+0xb818>
    fc20:	ldr	r3, [r5]
    fc24:	cmp	r3, #0
    fc28:	beq	fc50 <main@@Base+0xb818>
    fc2c:	ldr	r1, [pc, #468]	; fe08 <main@@Base+0xb9d0>
    fc30:	ldr	r0, [pc, #468]	; fe0c <main@@Base+0xb9d4>
    fc34:	ldr	r2, [pc, #468]	; fe10 <main@@Base+0xb9d8>
    fc38:	add	r1, pc, r1
    fc3c:	add	r0, pc, r0
    fc40:	add	r1, r1, #824	; 0x338
    fc44:	add	r2, pc, r2
    fc48:	bl	3870 <g_return_if_fail_warning@plt>
    fc4c:	b	fc0c <main@@Base+0xb7d4>
    fc50:	mov	r0, r4
    fc54:	bl	d500 <main@@Base+0x90c8>
    fc58:	cmp	r0, #0
    fc5c:	bne	fcd0 <main@@Base+0xb898>
    fc60:	bl	1f330 <main@@Base+0x1aef8>
    fc64:	add	r6, r4, r6
    fc68:	mov	r1, r0
    fc6c:	mov	r0, r4
    fc70:	bl	39d8 <g_type_check_instance_cast@plt>
    fc74:	mov	r1, #4
    fc78:	bl	20e98 <main@@Base+0x1ca60>
    fc7c:	ldr	r3, [r6, #24]
    fc80:	cmp	r3, #0
    fc84:	bne	fc94 <main@@Base+0xb85c>
    fc88:	ldr	r3, [r6, #4]
    fc8c:	tst	r3, #128	; 0x80
    fc90:	bne	fcf0 <main@@Base+0xb8b8>
    fc94:	mov	r0, r4
    fc98:	mov	r1, #0
    fc9c:	mov	r2, r5
    fca0:	bl	dae8 <main@@Base+0x96b0>
    fca4:	subs	r6, r0, #0
    fca8:	beq	fc0c <main@@Base+0xb7d4>
    fcac:	mov	r1, r5
    fcb0:	bl	19b30 <main@@Base+0x156f8>
    fcb4:	cmp	r0, #0
    fcb8:	bne	fd4c <main@@Base+0xb914>
    fcbc:	mov	r4, #0
    fcc0:	mov	r0, r6
    fcc4:	bl	4110 <g_object_unref@plt>
    fcc8:	mov	r0, r4
    fccc:	pop	{r3, r4, r5, r6, r7, pc}
    fcd0:	bl	40a4 <fwupd_error_quark@plt>
    fcd4:	ldr	r3, [pc, #312]	; fe14 <main@@Base+0xb9dc>
    fcd8:	mov	r2, #10
    fcdc:	add	r3, pc, r3
    fce0:	mov	r1, r0
    fce4:	mov	r0, r5
    fce8:	bl	4350 <g_set_error@plt>
    fcec:	b	fc0c <main@@Base+0xb7d4>
    fcf0:	ldr	r0, [pc, #288]	; fe18 <main@@Base+0xb9e0>
    fcf4:	mov	r1, #128	; 0x80
    fcf8:	ldr	r2, [pc, #284]	; fe1c <main@@Base+0xb9e4>
    fcfc:	add	r0, pc, r0
    fd00:	add	r2, pc, r2
    fd04:	bl	3a38 <g_log@plt>
    fd08:	mov	r0, r4
    fd0c:	mov	r1, #0
    fd10:	mov	r2, r5
    fd14:	bl	dae8 <main@@Base+0x96b0>
    fd18:	subs	r6, r0, #0
    fd1c:	beq	fc0c <main@@Base+0xb7d4>
    fd20:	mov	r1, #0
    fd24:	mov	r3, r5
    fd28:	mov	r2, r1
    fd2c:	bl	191b8 <main@@Base+0x14d80>
    fd30:	subs	r7, r0, #0
    fd34:	beq	fdac <main@@Base+0xb974>
    fd38:	mov	r0, r6
    fd3c:	bl	4110 <g_object_unref@plt>
    fd40:	mov	r0, r7
    fd44:	bl	414c <g_bytes_unref@plt>
    fd48:	b	fc94 <main@@Base+0xb85c>
    fd4c:	mov	r0, r4
    fd50:	mov	r1, #2048	; 0x800
    fd54:	bl	c688 <main@@Base+0x8250>
    fd58:	cmp	r0, #0
    fd5c:	beq	fd8c <main@@Base+0xb954>
    fd60:	mov	r0, r4
    fd64:	movw	r1, #5000	; 0x1388
    fd68:	mov	r2, r5
    fd6c:	bl	fa94 <main@@Base+0xb65c>
    fd70:	cmp	r0, #0
    fd74:	beq	fcbc <main@@Base+0xb884>
    fd78:	mov	r1, r5
    fd7c:	mov	r0, r4
    fd80:	bl	e870 <main@@Base+0xa438>
    fd84:	cmp	r0, #0
    fd88:	beq	fcbc <main@@Base+0xb884>
    fd8c:	bl	1f330 <main@@Base+0x1aef8>
    fd90:	mov	r1, r0
    fd94:	mov	r0, r4
    fd98:	bl	39d8 <g_type_check_instance_cast@plt>
    fd9c:	mov	r1, #1
    fda0:	bl	20e98 <main@@Base+0x1ca60>
    fda4:	mov	r4, #1
    fda8:	b	fcc0 <main@@Base+0xb888>
    fdac:	mov	r0, r6
    fdb0:	bl	4110 <g_object_unref@plt>
    fdb4:	b	fc0c <main@@Base+0xb7d4>
    fdb8:	mov	r4, r0
    fdbc:	mov	r0, r7
    fdc0:	bl	414c <g_bytes_unref@plt>
    fdc4:	mov	r0, r4
    fdc8:	bl	42f0 <_Unwind_Resume@plt>
    fdcc:	mov	r4, r0
    fdd0:	mov	r0, r6
    fdd4:	bl	4110 <g_object_unref@plt>
    fdd8:	b	fdc4 <main@@Base+0xb98c>
    fddc:	mov	r4, r0
    fde0:	b	fdc4 <main@@Base+0xb98c>
    fde4:	mov	r4, r0
    fde8:	mov	r0, r6
    fdec:	bl	4110 <g_object_unref@plt>
    fdf0:	mov	r0, r4
    fdf4:	bl	42f0 <_Unwind_Resume@plt>
    fdf8:	andeq	pc, r2, r4, asr r4	; <UNPREDICTABLE>
    fdfc:	andeq	r6, r1, r8, lsr #22
    fe00:	muleq	r1, r0, r2
    fe04:	andeq	r6, r1, r8, lsr #29
    fe08:	andeq	r6, r1, r8, ror #21
    fe0c:	andeq	r5, r1, r0, asr r2
    fe10:	andeq	r7, r1, ip, lsr #4
    fe14:	andeq	r7, r1, r0, ror #12
    fe18:	muleq	r1, r0, r1
    fe1c:	andeq	r7, r1, r0, ror #12
    fe20:	ldr	r3, [pc, #1664]	; 104a8 <main@@Base+0xc070>
    fe24:	ldr	r2, [pc, #1664]	; 104ac <main@@Base+0xc074>
    fe28:	add	r3, pc, r3
    fe2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fe30:	mov	r6, r1
    fe34:	ldr	r2, [r3, r2]
    fe38:	sub	sp, sp, #76	; 0x4c
    fe3c:	ldr	r1, [pc, #1644]	; 104b0 <main@@Base+0xc078>
    fe40:	mov	r4, r0
    fe44:	add	r1, pc, r1
    fe48:	ldr	r3, [r2]
    fe4c:	str	r2, [sp, #40]	; 0x28
    fe50:	ldr	sl, [r1]
    fe54:	str	r3, [sp, #68]	; 0x44
    fe58:	add	fp, r0, sl
    fe5c:	bl	1f330 <main@@Base+0x1aef8>
    fe60:	mov	r1, r0
    fe64:	mov	r0, r4
    fe68:	bl	39d8 <g_type_check_instance_cast@plt>
    fe6c:	bl	214d0 <main@@Base+0x1d098>
    fe70:	mov	r5, r0
    fe74:	bl	23a78 <main@@Base+0x1f640>
    fe78:	mov	r1, r0
    fe7c:	mov	r0, r4
    fe80:	bl	39d8 <g_type_check_instance_cast@plt>
    fe84:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
    fe88:	mov	r3, #0
    fe8c:	str	r3, [sp, #60]	; 0x3c
    fe90:	mov	r9, r0
    fe94:	bl	c2b4 <main@@Base+0x7e7c>
    fe98:	cmp	r4, #0
    fe9c:	beq	fecc <main@@Base+0xba94>
    fea0:	ldr	r3, [r4]
    fea4:	cmp	r3, #0
    fea8:	beq	feb8 <main@@Base+0xba80>
    feac:	ldr	r3, [r3]
    feb0:	cmp	r0, r3
    feb4:	beq	ff20 <main@@Base+0xbae8>
    feb8:	mov	r1, r0
    febc:	mov	r0, r4
    fec0:	bl	3fcc <g_type_check_instance_is_a@plt>
    fec4:	cmp	r0, #0
    fec8:	bne	ff20 <main@@Base+0xbae8>
    fecc:	ldr	r1, [pc, #1504]	; 104b4 <main@@Base+0xc07c>
    fed0:	ldr	r0, [pc, #1504]	; 104b8 <main@@Base+0xc080>
    fed4:	ldr	r2, [pc, #1504]	; 104bc <main@@Base+0xc084>
    fed8:	add	r1, pc, r1
    fedc:	add	r0, pc, r0
    fee0:	add	r1, r1, #844	; 0x34c
    fee4:	add	r2, pc, r2
    fee8:	bl	3870 <g_return_if_fail_warning@plt>
    feec:	mov	r4, #0
    fef0:	ldr	r0, [sp, #60]	; 0x3c
    fef4:	cmp	r0, #0
    fef8:	beq	ff00 <main@@Base+0xbac8>
    fefc:	bl	38e8 <g_error_free@plt>
    ff00:	ldr	r5, [sp, #40]	; 0x28
    ff04:	mov	r0, r4
    ff08:	ldr	r2, [sp, #68]	; 0x44
    ff0c:	ldr	r3, [r5]
    ff10:	cmp	r2, r3
    ff14:	bne	1044c <main@@Base+0xc014>
    ff18:	add	sp, sp, #76	; 0x4c
    ff1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ff20:	cmp	r6, #0
    ff24:	beq	ff58 <main@@Base+0xbb20>
    ff28:	ldr	r3, [r6]
    ff2c:	cmp	r3, #0
    ff30:	beq	ff58 <main@@Base+0xbb20>
    ff34:	ldr	r1, [pc, #1412]	; 104c0 <main@@Base+0xc088>
    ff38:	ldr	r0, [pc, #1412]	; 104c4 <main@@Base+0xc08c>
    ff3c:	ldr	r2, [pc, #1412]	; 104c8 <main@@Base+0xc090>
    ff40:	add	r1, pc, r1
    ff44:	add	r0, pc, r0
    ff48:	add	r1, r1, #844	; 0x34c
    ff4c:	add	r2, pc, r2
    ff50:	bl	3870 <g_return_if_fail_warning@plt>
    ff54:	b	feec <main@@Base+0xbab4>
    ff58:	mov	r0, r4
    ff5c:	bl	d500 <main@@Base+0x90c8>
    ff60:	cmp	r0, #0
    ff64:	beq	ffec <main@@Base+0xbbb4>
    ff68:	cmp	r9, #0
    ff6c:	beq	10274 <main@@Base+0xbe3c>
    ff70:	ldr	r1, [pc, #1364]	; 104cc <main@@Base+0xc094>
    ff74:	mov	r0, r5
    ff78:	mov	r2, r9
    ff7c:	add	r1, pc, r1
    ff80:	bl	2341c <main@@Base+0x1efe4>
    ff84:	subs	r5, r0, #0
    ff88:	beq	10140 <main@@Base+0xbd08>
    ff8c:	mov	r0, #33	; 0x21
    ff90:	bl	4248 <g_malloc0@plt>
    ff94:	str	r0, [sp, #44]	; 0x2c
    ff98:	mov	r0, r5
    ff9c:	mov	r3, #0
    ffa0:	str	r3, [sp, #64]	; 0x40
    ffa4:	bl	411c <strlen@plt>
    ffa8:	cmp	r0, #4
    ffac:	beq	10154 <main@@Base+0xbd1c>
    ffb0:	bl	40a4 <fwupd_error_quark@plt>
    ffb4:	ldr	r3, [pc, #1300]	; 104d0 <main@@Base+0xc098>
    ffb8:	mov	r1, r0
    ffbc:	str	r5, [sp]
    ffc0:	mov	r0, r6
    ffc4:	mov	r2, #10
    ffc8:	add	r3, pc, r3
    ffcc:	bl	4350 <g_set_error@plt>
    ffd0:	ldr	r0, [sp, #64]	; 0x40
    ffd4:	cmp	r0, #0
    ffd8:	beq	ffe0 <main@@Base+0xbba8>
    ffdc:	bl	38e8 <g_error_free@plt>
    ffe0:	ldr	r0, [sp, #44]	; 0x2c
    ffe4:	bl	3eac <g_free@plt>
    ffe8:	b	feec <main@@Base+0xbab4>
    ffec:	bl	40a4 <fwupd_error_quark@plt>
    fff0:	mov	r4, r0
    fff4:	ldr	r0, [fp, #8]
    fff8:	bl	b8b8 <main@@Base+0x7480>
    fffc:	ldr	r3, [pc, #1232]	; 104d4 <main@@Base+0xc09c>
   10000:	mov	r1, r4
   10004:	str	r0, [sp]
   10008:	mov	r2, #10
   1000c:	mov	r0, r6
   10010:	add	r3, pc, r3
   10014:	bl	4350 <g_set_error@plt>
   10018:	b	feec <main@@Base+0xbab4>
   1001c:	ldr	r5, [sp, #52]	; 0x34
   10020:	mov	r1, #1
   10024:	mov	lr, #9
   10028:	mov	ip, #3
   1002c:	orr	r3, r5, #512	; 0x200
   10030:	ldr	r5, [sp, #44]	; 0x2c
   10034:	str	lr, [sp]
   10038:	mov	r0, r9
   1003c:	uxth	r3, r3
   10040:	mov	lr, #33	; 0x21
   10044:	str	r3, [sp, #4]
   10048:	mov	r2, r1
   1004c:	str	ip, [sp, #8]
   10050:	mov	r3, r1
   10054:	mov	ip, #0
   10058:	str	lr, [sp, #16]
   1005c:	str	ip, [sp, #20]
   10060:	movw	lr, #5000	; 0x1388
   10064:	str	ip, [sp, #28]
   10068:	add	ip, sp, #64	; 0x40
   1006c:	str	r5, [sp, #12]
   10070:	str	lr, [sp, #24]
   10074:	str	ip, [sp, #32]
   10078:	bl	39c0 <g_usb_device_control_transfer@plt>
   1007c:	cmp	r0, #0
   10080:	bne	100a4 <main@@Base+0xbc6c>
   10084:	ldr	r3, [sp, #64]	; 0x40
   10088:	mov	r1, #128	; 0x80
   1008c:	ldr	r0, [pc, #1092]	; 104d8 <main@@Base+0xc0a0>
   10090:	ldr	r2, [pc, #1092]	; 104dc <main@@Base+0xc0a4>
   10094:	add	r0, pc, r0
   10098:	ldr	r3, [r3, #8]
   1009c:	add	r2, pc, r2
   100a0:	bl	3a38 <g_log@plt>
   100a4:	bl	1f330 <main@@Base+0x1aef8>
   100a8:	mov	r1, r0
   100ac:	mov	r0, r4
   100b0:	bl	39d8 <g_type_check_instance_cast@plt>
   100b4:	mov	r1, #4
   100b8:	bl	20e98 <main@@Base+0x1ca60>
   100bc:	mov	r0, r4
   100c0:	movw	r1, #5000	; 0x1388
   100c4:	mov	r2, r6
   100c8:	bl	fa94 <main@@Base+0xb65c>
   100cc:	cmp	r0, #0
   100d0:	beq	ffd0 <main@@Base+0xbb98>
   100d4:	ldr	r0, [pc, #1028]	; 104e0 <main@@Base+0xc0a8>
   100d8:	mov	r1, #128	; 0x80
   100dc:	ldr	r2, [pc, #1024]	; 104e4 <main@@Base+0xc0ac>
   100e0:	add	r0, pc, r0
   100e4:	add	r2, pc, r2
   100e8:	bl	3a38 <g_log@plt>
   100ec:	bl	1f330 <main@@Base+0x1aef8>
   100f0:	mov	r1, r0
   100f4:	mov	r0, r4
   100f8:	bl	39d8 <g_type_check_instance_cast@plt>
   100fc:	mov	r1, #12
   10100:	bl	20e98 <main@@Base+0x1ca60>
   10104:	movw	r0, #38528	; 0x9680
   10108:	movt	r0, #152	; 0x98
   1010c:	bl	39f0 <g_usleep@plt>
   10110:	bl	23a78 <main@@Base+0x1f640>
   10114:	mov	r1, r0
   10118:	mov	r0, r4
   1011c:	bl	39d8 <g_type_check_instance_cast@plt>
   10120:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
   10124:	mov	r9, r0
   10128:	ldr	r0, [sp, #64]	; 0x40
   1012c:	cmp	r0, #0
   10130:	beq	10138 <main@@Base+0xbd00>
   10134:	bl	38e8 <g_error_free@plt>
   10138:	ldr	r0, [sp, #44]	; 0x2c
   1013c:	bl	3eac <g_free@plt>
   10140:	ldr	r3, [fp, #4]
   10144:	tst	r3, #64	; 0x40
   10148:	beq	102a4 <main@@Base+0xbe6c>
   1014c:	mov	r4, #1
   10150:	b	fef0 <main@@Base+0xbab8>
   10154:	mov	r0, r5
   10158:	bl	bec8 <main@@Base+0x7a90>
   1015c:	str	r0, [sp, #52]	; 0x34
   10160:	add	r0, r5, #2
   10164:	bl	bec8 <main@@Base+0x7a90>
   10168:	add	r5, sp, #60	; 0x3c
   1016c:	ldr	ip, [sp, #52]	; 0x34
   10170:	str	r5, [sp, #48]	; 0x30
   10174:	mov	r2, #0
   10178:	ldr	r5, [sp, #44]	; 0x2c
   1017c:	mov	r3, #1
   10180:	ldr	r1, [sp, #48]	; 0x30
   10184:	strb	r0, [r5, #1]
   10188:	mov	r0, r9
   1018c:	strb	r2, [r5, #2]
   10190:	mvn	r2, #122	; 0x7a
   10194:	strb	r3, [r5, #3]
   10198:	mov	r3, #7
   1019c:	strb	ip, [r5]
   101a0:	strb	r2, [r5, #4]
   101a4:	strb	r3, [r5, #5]
   101a8:	bl	3ef4 <g_usb_device_get_interfaces@plt>
   101ac:	subs	r7, r0, #0
   101b0:	beq	10384 <main@@Base+0xbf4c>
   101b4:	ldr	r3, [r7, #4]
   101b8:	cmp	r3, #0
   101bc:	beq	1037c <main@@Base+0xbf44>
   101c0:	mov	r5, #0
   101c4:	b	101d8 <main@@Base+0xbda0>
   101c8:	ldr	r3, [r7, #4]
   101cc:	add	r5, r5, #1
   101d0:	cmp	r5, r3
   101d4:	bcs	1037c <main@@Base+0xbf44>
   101d8:	ldr	r3, [r7]
   101dc:	ldr	r8, [r3, r5, lsl #2]
   101e0:	mov	r0, r8
   101e4:	bl	3de0 <g_usb_interface_get_class@plt>
   101e8:	cmp	r0, #3
   101ec:	bne	101c8 <main@@Base+0xbd90>
   101f0:	mov	r0, r8
   101f4:	bl	4188 <g_usb_interface_get_number@plt>
   101f8:	mov	r5, r0
   101fc:	mov	r0, r7
   10200:	bl	4224 <g_ptr_array_unref@plt>
   10204:	cmp	r5, #255	; 0xff
   10208:	beq	10384 <main@@Base+0xbf4c>
   1020c:	ldr	r0, [pc, #724]	; 104e8 <main@@Base+0xc0b0>
   10210:	mov	r1, #128	; 0x80
   10214:	ldr	r2, [pc, #720]	; 104ec <main@@Base+0xc0b4>
   10218:	mov	r3, r5
   1021c:	add	r0, pc, r0
   10220:	add	r2, pc, r2
   10224:	bl	3a38 <g_log@plt>
   10228:	mov	r0, r9
   1022c:	mov	r1, r5
   10230:	ldr	r3, [sp, #48]	; 0x30
   10234:	mov	r2, #1
   10238:	bl	42cc <g_usb_device_claim_interface@plt>
   1023c:	cmp	r0, #0
   10240:	bne	1001c <main@@Base+0xbbe4>
   10244:	bl	40a4 <fwupd_error_quark@plt>
   10248:	ldr	ip, [sp, #60]	; 0x3c
   1024c:	mov	r1, r0
   10250:	str	r5, [sp]
   10254:	mov	r0, r6
   10258:	ldr	r3, [pc, #656]	; 104f0 <main@@Base+0xc0b8>
   1025c:	mov	r2, #10
   10260:	ldr	ip, [ip, #8]
   10264:	add	r3, pc, r3
   10268:	str	ip, [sp, #4]
   1026c:	bl	4350 <g_set_error@plt>
   10270:	b	ffd0 <main@@Base+0xbb98>
   10274:	bl	40a4 <fwupd_error_quark@plt>
   10278:	mov	r5, r0
   1027c:	mov	r0, r4
   10280:	bl	ddc4 <main@@Base+0x998c>
   10284:	ldr	r3, [pc, #616]	; 104f4 <main@@Base+0xc0bc>
   10288:	mov	r1, r5
   1028c:	str	r0, [sp]
   10290:	mov	r2, #0
   10294:	mov	r0, r6
   10298:	add	r3, pc, r3
   1029c:	bl	4350 <g_set_error@plt>
   102a0:	b	feec <main@@Base+0xbab4>
   102a4:	mov	r0, r4
   102a8:	mov	r1, r6
   102ac:	bl	e320 <main@@Base+0x9ee8>
   102b0:	cmp	r0, #0
   102b4:	beq	feec <main@@Base+0xbab4>
   102b8:	bl	1f330 <main@@Base+0x1aef8>
   102bc:	mov	r1, r0
   102c0:	mov	r0, r4
   102c4:	bl	39d8 <g_type_check_instance_cast@plt>
   102c8:	mov	r1, #4
   102cc:	bl	20e98 <main@@Base+0x1ca60>
   102d0:	mov	ip, #0
   102d4:	mov	r3, #1000	; 0x3e8
   102d8:	str	ip, [sp]
   102dc:	mov	r1, #1
   102e0:	str	r3, [sp, #4]
   102e4:	add	r5, sp, #60	; 0x3c
   102e8:	ldrb	lr, [fp, #46]	; 0x2e
   102ec:	mov	r0, r9
   102f0:	str	ip, [sp, #12]
   102f4:	mov	r2, r1
   102f8:	str	ip, [sp, #16]
   102fc:	mov	r3, r1
   10300:	str	lr, [sp, #8]
   10304:	str	ip, [sp, #20]
   10308:	ldr	lr, [fp, #52]	; 0x34
   1030c:	str	ip, [sp, #28]
   10310:	str	r5, [sp, #32]
   10314:	str	lr, [sp, #24]
   10318:	str	r5, [sp, #48]	; 0x30
   1031c:	bl	39c0 <g_usb_device_control_transfer@plt>
   10320:	cmp	r0, #0
   10324:	beq	103b0 <main@@Base+0xbf78>
   10328:	ldr	r3, [r4, sl]
   1032c:	tst	r3, #8
   10330:	bne	10360 <main@@Base+0xbf28>
   10334:	ldr	r0, [pc, #444]	; 104f8 <main@@Base+0xc0c0>
   10338:	mov	r1, #128	; 0x80
   1033c:	ldr	r2, [pc, #440]	; 104fc <main@@Base+0xc0c4>
   10340:	add	r0, pc, r0
   10344:	add	r2, pc, r2
   10348:	bl	3a38 <g_log@plt>
   1034c:	mov	r0, r4
   10350:	mov	r1, r6
   10354:	bl	e870 <main@@Base+0xa438>
   10358:	cmp	r0, #0
   1035c:	beq	feec <main@@Base+0xbab4>
   10360:	bl	1f330 <main@@Base+0x1aef8>
   10364:	mov	r1, r0
   10368:	mov	r0, r4
   1036c:	bl	39d8 <g_type_check_instance_cast@plt>
   10370:	mov	r1, #1
   10374:	bl	20e98 <main@@Base+0x1ca60>
   10378:	b	1014c <main@@Base+0xbd14>
   1037c:	mov	r5, #255	; 0xff
   10380:	b	101fc <main@@Base+0xbdc4>
   10384:	bl	40a4 <fwupd_error_quark@plt>
   10388:	ldr	ip, [sp, #60]	; 0x3c
   1038c:	mov	r1, r0
   10390:	ldr	r3, [pc, #360]	; 10500 <main@@Base+0xc0c8>
   10394:	mov	r0, r6
   10398:	mov	r2, #10
   1039c:	ldr	ip, [ip, #8]
   103a0:	add	r3, pc, r3
   103a4:	str	ip, [sp]
   103a8:	bl	4350 <g_set_error@plt>
   103ac:	b	ffd0 <main@@Base+0xbb98>
   103b0:	ldr	r5, [sp, #60]	; 0x3c
   103b4:	bl	3ce4 <g_usb_device_error_quark@plt>
   103b8:	mov	r1, r0
   103bc:	mov	r2, #3
   103c0:	mov	r0, r5
   103c4:	bl	3d68 <g_error_matches@plt>
   103c8:	cmp	r0, #0
   103cc:	bne	103f0 <main@@Base+0xbfb8>
   103d0:	ldr	r5, [sp, #60]	; 0x3c
   103d4:	bl	3ce4 <g_usb_device_error_quark@plt>
   103d8:	mov	r1, r0
   103dc:	mov	r2, #8
   103e0:	mov	r0, r5
   103e4:	bl	3d68 <g_error_matches@plt>
   103e8:	cmp	r0, #0
   103ec:	beq	10414 <main@@Base+0xbfdc>
   103f0:	ldr	r3, [sp, #60]	; 0x3c
   103f4:	mov	r1, #128	; 0x80
   103f8:	ldr	r0, [pc, #260]	; 10504 <main@@Base+0xc0cc>
   103fc:	ldr	r2, [pc, #260]	; 10508 <main@@Base+0xc0d0>
   10400:	add	r0, pc, r0
   10404:	ldr	r3, [r3, #8]
   10408:	add	r2, pc, r2
   1040c:	bl	3a38 <g_log@plt>
   10410:	b	10328 <main@@Base+0xbef0>
   10414:	mov	r0, r4
   10418:	ldr	r1, [sp, #48]	; 0x30
   1041c:	bl	f3fc <main@@Base+0xafc4>
   10420:	bl	40a4 <fwupd_error_quark@plt>
   10424:	ldr	ip, [sp, #60]	; 0x3c
   10428:	mov	r1, r0
   1042c:	ldr	r3, [pc, #216]	; 1050c <main@@Base+0xc0d4>
   10430:	mov	r0, r6
   10434:	mov	r2, #10
   10438:	ldr	ip, [ip, #8]
   1043c:	add	r3, pc, r3
   10440:	str	ip, [sp]
   10444:	bl	4350 <g_set_error@plt>
   10448:	b	feec <main@@Base+0xbab4>
   1044c:	bl	3e4c <__stack_chk_fail@plt>
   10450:	mov	r4, r0
   10454:	mov	r0, r7
   10458:	bl	4224 <g_ptr_array_unref@plt>
   1045c:	ldr	r0, [sp, #64]	; 0x40
   10460:	cmp	r0, #0
   10464:	beq	1046c <main@@Base+0xc034>
   10468:	bl	38e8 <g_error_free@plt>
   1046c:	ldr	r0, [sp, #44]	; 0x2c
   10470:	bl	3eac <g_free@plt>
   10474:	ldr	r0, [sp, #60]	; 0x3c
   10478:	cmp	r0, #0
   1047c:	beq	10484 <main@@Base+0xc04c>
   10480:	bl	38e8 <g_error_free@plt>
   10484:	mov	r0, r4
   10488:	bl	42f0 <_Unwind_Resume@plt>
   1048c:	mov	r4, r0
   10490:	b	10474 <main@@Base+0xc03c>
   10494:	mov	r4, r0
   10498:	b	1046c <main@@Base+0xc034>
   1049c:	mov	r4, r0
   104a0:	b	1045c <main@@Base+0xc024>
   104a4:	b	1049c <main@@Base+0xc064>
   104a8:	andeq	lr, r2, r8, asr sp
   104ac:	andeq	r0, r0, r0, lsr r4
   104b0:			; <UNDEFINED> instruction: 0x0002f1bc
   104b4:	andeq	r6, r1, r8, asr #16
   104b8:			; <UNDEFINED> instruction: 0x00014fb0
   104bc:	andeq	r6, r1, r8, asr #23
   104c0:	andeq	r6, r1, r0, ror #15
   104c4:	andeq	r4, r1, r8, asr #30
   104c8:	andeq	r6, r1, r4, lsr #30
   104cc:	andeq	r7, r1, r0, ror #8
   104d0:	andeq	r7, r1, ip, lsr #8
   104d4:	andeq	r7, r1, r0, lsl #7
   104d8:	strdeq	r4, [r1], -r8
   104dc:	andeq	r7, r1, r0, ror #7
   104e0:	andeq	r4, r1, ip, lsr #27
   104e4:			; <UNDEFINED> instruction: 0x000173bc
   104e8:	andeq	r4, r1, r0, ror ip
   104ec:	andeq	r7, r1, ip, lsl r2
   104f0:	strdeq	r7, [r1], -r4
   104f4:	andeq	r7, r1, ip, lsl r1
   104f8:	andeq	r4, r1, ip, asr #22
   104fc:	andeq	r7, r1, r0, asr #3
   10500:	andeq	r7, r1, ip, ror r0
   10504:	andeq	r4, r1, ip, lsl #21
   10508:	andeq	r7, r1, r0, asr #1
   1050c:	andeq	r7, r1, ip, lsr #1
   10510:	push	{r3, r4, r5, lr}
   10514:	ldr	r3, [pc, #512]	; 1071c <main@@Base+0xc2e4>
   10518:	ldr	r5, [pc, r3]
   1051c:	add	r5, r0, r5
   10520:	ldr	r0, [pc, #504]	; 10720 <main@@Base+0xc2e8>
   10524:	add	r0, pc, r0
   10528:	bl	3990 <g_string_new@plt>
   1052c:	ldr	r3, [r5, #4]
   10530:	tst	r3, #1
   10534:	mov	r4, r0
   10538:	bne	105bc <main@@Base+0xc184>
   1053c:	tst	r3, #2
   10540:	bne	105d4 <main@@Base+0xc19c>
   10544:	tst	r3, #16
   10548:	bne	105f0 <main@@Base+0xc1b8>
   1054c:	tst	r3, #32
   10550:	bne	1060c <main@@Base+0xc1d4>
   10554:	tst	r3, #64	; 0x40
   10558:	bne	10628 <main@@Base+0xc1f0>
   1055c:	tst	r3, #128	; 0x80
   10560:	bne	10644 <main@@Base+0xc20c>
   10564:	tst	r3, #256	; 0x100
   10568:	bne	10660 <main@@Base+0xc228>
   1056c:	tst	r3, #512	; 0x200
   10570:	bne	1067c <main@@Base+0xc244>
   10574:	tst	r3, #1024	; 0x400
   10578:	bne	10698 <main@@Base+0xc260>
   1057c:	tst	r3, #2048	; 0x800
   10580:	bne	106b4 <main@@Base+0xc27c>
   10584:	tst	r3, #4
   10588:	bne	106d0 <main@@Base+0xc298>
   1058c:	tst	r3, #4096	; 0x1000
   10590:	bne	106ec <main@@Base+0xc2b4>
   10594:	ldr	r5, [r4, #4]
   10598:	cmp	r5, #0
   1059c:	beq	10708 <main@@Base+0xc2d0>
   105a0:	sub	r1, r5, #1
   105a4:	mov	r0, r4
   105a8:	bl	3960 <g_string_truncate@plt>
   105ac:	mov	r0, r4
   105b0:	mov	r1, #0
   105b4:	pop	{r3, r4, r5, lr}
   105b8:	b	40bc <g_string_free@plt>
   105bc:	ldr	r1, [pc, #352]	; 10724 <main@@Base+0xc2ec>
   105c0:	add	r1, pc, r1
   105c4:	bl	4344 <g_string_append_printf@plt>
   105c8:	ldr	r3, [r5, #4]
   105cc:	tst	r3, #2
   105d0:	beq	10544 <main@@Base+0xc10c>
   105d4:	ldr	r1, [pc, #332]	; 10728 <main@@Base+0xc2f0>
   105d8:	mov	r0, r4
   105dc:	add	r1, pc, r1
   105e0:	bl	4344 <g_string_append_printf@plt>
   105e4:	ldr	r3, [r5, #4]
   105e8:	tst	r3, #16
   105ec:	beq	1054c <main@@Base+0xc114>
   105f0:	ldr	r1, [pc, #308]	; 1072c <main@@Base+0xc2f4>
   105f4:	mov	r0, r4
   105f8:	add	r1, pc, r1
   105fc:	bl	4344 <g_string_append_printf@plt>
   10600:	ldr	r3, [r5, #4]
   10604:	tst	r3, #32
   10608:	beq	10554 <main@@Base+0xc11c>
   1060c:	ldr	r1, [pc, #284]	; 10730 <main@@Base+0xc2f8>
   10610:	mov	r0, r4
   10614:	add	r1, pc, r1
   10618:	bl	4344 <g_string_append_printf@plt>
   1061c:	ldr	r3, [r5, #4]
   10620:	tst	r3, #64	; 0x40
   10624:	beq	1055c <main@@Base+0xc124>
   10628:	ldr	r1, [pc, #260]	; 10734 <main@@Base+0xc2fc>
   1062c:	mov	r0, r4
   10630:	add	r1, pc, r1
   10634:	bl	4344 <g_string_append_printf@plt>
   10638:	ldr	r3, [r5, #4]
   1063c:	tst	r3, #128	; 0x80
   10640:	beq	10564 <main@@Base+0xc12c>
   10644:	ldr	r1, [pc, #236]	; 10738 <main@@Base+0xc300>
   10648:	mov	r0, r4
   1064c:	add	r1, pc, r1
   10650:	bl	4344 <g_string_append_printf@plt>
   10654:	ldr	r3, [r5, #4]
   10658:	tst	r3, #256	; 0x100
   1065c:	beq	1056c <main@@Base+0xc134>
   10660:	ldr	r1, [pc, #212]	; 1073c <main@@Base+0xc304>
   10664:	mov	r0, r4
   10668:	add	r1, pc, r1
   1066c:	bl	4344 <g_string_append_printf@plt>
   10670:	ldr	r3, [r5, #4]
   10674:	tst	r3, #512	; 0x200
   10678:	beq	10574 <main@@Base+0xc13c>
   1067c:	ldr	r1, [pc, #188]	; 10740 <main@@Base+0xc308>
   10680:	mov	r0, r4
   10684:	add	r1, pc, r1
   10688:	bl	4344 <g_string_append_printf@plt>
   1068c:	ldr	r3, [r5, #4]
   10690:	tst	r3, #1024	; 0x400
   10694:	beq	1057c <main@@Base+0xc144>
   10698:	ldr	r1, [pc, #164]	; 10744 <main@@Base+0xc30c>
   1069c:	mov	r0, r4
   106a0:	add	r1, pc, r1
   106a4:	bl	4344 <g_string_append_printf@plt>
   106a8:	ldr	r3, [r5, #4]
   106ac:	tst	r3, #2048	; 0x800
   106b0:	beq	10584 <main@@Base+0xc14c>
   106b4:	ldr	r1, [pc, #140]	; 10748 <main@@Base+0xc310>
   106b8:	mov	r0, r4
   106bc:	add	r1, pc, r1
   106c0:	bl	4344 <g_string_append_printf@plt>
   106c4:	ldr	r3, [r5, #4]
   106c8:	tst	r3, #4
   106cc:	beq	1058c <main@@Base+0xc154>
   106d0:	ldr	r1, [pc, #116]	; 1074c <main@@Base+0xc314>
   106d4:	mov	r0, r4
   106d8:	add	r1, pc, r1
   106dc:	bl	4344 <g_string_append_printf@plt>
   106e0:	ldr	r3, [r5, #4]
   106e4:	tst	r3, #4096	; 0x1000
   106e8:	beq	10594 <main@@Base+0xc15c>
   106ec:	ldr	r1, [pc, #92]	; 10750 <main@@Base+0xc318>
   106f0:	mov	r0, r4
   106f4:	add	r1, pc, r1
   106f8:	bl	4344 <g_string_append_printf@plt>
   106fc:	ldr	r5, [r4, #4]
   10700:	cmp	r5, #0
   10704:	bne	105a0 <main@@Base+0xc168>
   10708:	mov	r0, r4
   1070c:	mov	r1, #1
   10710:	bl	40bc <g_string_free@plt>
   10714:	mov	r0, r5
   10718:	pop	{r3, r4, r5, pc}
   1071c:	andeq	lr, r2, r8, ror #21
   10720:	andeq	r5, r1, ip, asr r1
   10724:	andeq	r6, r1, r4, ror pc
   10728:	andeq	r6, r1, ip, ror #30
   1072c:	andeq	r6, r1, r0, ror #30
   10730:	andeq	r6, r1, r4, asr pc
   10734:	andeq	r6, r1, r0, asr pc
   10738:	andeq	r6, r1, r4, asr #30
   1073c:	andeq	r6, r1, r0, asr #30
   10740:	andeq	r6, r1, r4, lsr pc
   10744:	andeq	r6, r1, ip, lsr #30
   10748:	andeq	r6, r1, r0, lsr #30
   1074c:	andeq	r6, r1, r8, lsl pc
   10750:	andeq	r6, r1, r0, lsl pc
   10754:	ldr	r3, [pc, #212]	; 10830 <main@@Base+0xc3f8>
   10758:	push	{r4, r5, r6, lr}
   1075c:	mov	r6, r0
   10760:	ldr	r0, [pc, #204]	; 10834 <main@@Base+0xc3fc>
   10764:	add	r3, pc, r3
   10768:	add	r0, pc, r0
   1076c:	ldr	r5, [r3]
   10770:	bl	3990 <g_string_new@plt>
   10774:	ldr	r3, [r6, r5]
   10778:	tst	r3, #1
   1077c:	mov	r4, r0
   10780:	bne	1081c <main@@Base+0xc3e4>
   10784:	tst	r3, #2
   10788:	bne	10804 <main@@Base+0xc3cc>
   1078c:	tst	r3, #4
   10790:	bne	107ec <main@@Base+0xc3b4>
   10794:	tst	r3, #8
   10798:	bne	107d4 <main@@Base+0xc39c>
   1079c:	tst	r3, #128	; 0x80
   107a0:	beq	107b4 <main@@Base+0xc37c>
   107a4:	ldr	r1, [pc, #140]	; 10838 <main@@Base+0xc400>
   107a8:	mov	r0, r4
   107ac:	add	r1, pc, r1
   107b0:	bl	4344 <g_string_append_printf@plt>
   107b4:	ldr	r1, [r4, #4]
   107b8:	mov	r0, r4
   107bc:	sub	r1, r1, #1
   107c0:	bl	3960 <g_string_truncate@plt>
   107c4:	mov	r0, r4
   107c8:	mov	r1, #0
   107cc:	pop	{r4, r5, r6, lr}
   107d0:	b	40bc <g_string_free@plt>
   107d4:	ldr	r1, [pc, #96]	; 1083c <main@@Base+0xc404>
   107d8:	mov	r0, r4
   107dc:	add	r1, pc, r1
   107e0:	bl	4344 <g_string_append_printf@plt>
   107e4:	ldr	r3, [r6, r5]
   107e8:	b	1079c <main@@Base+0xc364>
   107ec:	ldr	r1, [pc, #76]	; 10840 <main@@Base+0xc408>
   107f0:	mov	r0, r4
   107f4:	add	r1, pc, r1
   107f8:	bl	4344 <g_string_append_printf@plt>
   107fc:	ldr	r3, [r6, r5]
   10800:	b	10794 <main@@Base+0xc35c>
   10804:	ldr	r1, [pc, #56]	; 10844 <main@@Base+0xc40c>
   10808:	mov	r0, r4
   1080c:	add	r1, pc, r1
   10810:	bl	4344 <g_string_append_printf@plt>
   10814:	ldr	r3, [r6, r5]
   10818:	b	1078c <main@@Base+0xc354>
   1081c:	ldr	r1, [pc, #36]	; 10848 <main@@Base+0xc410>
   10820:	add	r1, pc, r1
   10824:	bl	4344 <g_string_append_printf@plt>
   10828:	ldr	r3, [r6, r5]
   1082c:	b	10784 <main@@Base+0xc34c>
   10830:	muleq	r2, ip, r8
   10834:	andeq	r4, r1, r8, lsl pc
   10838:	andeq	r6, r1, r8, lsr #29
   1083c:	andeq	r6, r1, r8, ror #28
   10840:	andeq	r6, r1, r0, asr #28
   10844:	andeq	r6, r1, ip, lsl lr
   10848:	strdeq	r6, [r1], -r8
   1084c:	bx	lr
   10850:	push	{r4, lr}
   10854:	mov	r4, r0
   10858:	bl	420c <g_type_class_peek_parent@plt>
   1085c:	ldr	r1, [pc, #56]	; 1089c <main@@Base+0xc464>
   10860:	add	r1, pc, r1
   10864:	ldr	r3, [r1, #4]
   10868:	cmp	r3, #0
   1086c:	str	r0, [r1]
   10870:	beq	10880 <main@@Base+0xc448>
   10874:	add	r1, r1, #4
   10878:	mov	r0, r4
   1087c:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   10880:	mov	r0, r4
   10884:	mov	r1, #80	; 0x50
   10888:	bl	4374 <g_type_check_class_cast@plt>
   1088c:	ldr	r3, [pc, #12]	; 108a0 <main@@Base+0xc468>
   10890:	add	r3, pc, r3
   10894:	str	r3, [r0, #24]
   10898:	pop	{r4, pc}
   1089c:			; <UNDEFINED> instruction: 0x0002e7b4
   108a0:	andeq	r0, r0, r4, asr #1
   108a4:	push	{r4, r5, r6, lr}
   108a8:	dmb	sy
   108ac:	ldr	r4, [pc, #148]	; 10948 <main@@Base+0xc510>
   108b0:	sub	sp, sp, #16
   108b4:	add	r4, pc, r4
   108b8:	ldr	r5, [r4, #8]
   108bc:	dmb	sy
   108c0:	cmp	r5, #0
   108c4:	beq	108dc <main@@Base+0xc4a4>
   108c8:	ldr	r3, [pc, #124]	; 1094c <main@@Base+0xc514>
   108cc:	add	r3, pc, r3
   108d0:	ldr	r0, [r3, #8]
   108d4:	add	sp, sp, #16
   108d8:	pop	{r4, r5, r6, pc}
   108dc:	add	r6, r4, #8
   108e0:	mov	r0, r6
   108e4:	bl	3d50 <g_once_init_enter@plt>
   108e8:	cmp	r0, #0
   108ec:	beq	108c8 <main@@Base+0xc490>
   108f0:	ldr	r0, [pc, #88]	; 10950 <main@@Base+0xc518>
   108f4:	add	r0, pc, r0
   108f8:	bl	3df8 <g_intern_static_string@plt>
   108fc:	ldr	r3, [pc, #80]	; 10954 <main@@Base+0xc51c>
   10900:	mov	r2, #12
   10904:	str	r5, [sp, #8]
   10908:	add	r3, pc, r3
   1090c:	stm	sp, {r2, r3}
   10910:	ldr	r3, [pc, #64]	; 10958 <main@@Base+0xc520>
   10914:	mov	r2, #68	; 0x44
   10918:	add	r3, pc, r3
   1091c:	mov	r1, r0
   10920:	mov	r0, #80	; 0x50
   10924:	bl	3894 <g_type_register_static_simple@plt>
   10928:	mov	r1, #16
   1092c:	mov	r5, r0
   10930:	bl	3edc <g_type_add_instance_private@plt>
   10934:	mov	r1, r5
   10938:	str	r0, [r4, #4]
   1093c:	mov	r0, r6
   10940:	bl	4140 <g_once_init_leave@plt>
   10944:	b	108c8 <main@@Base+0xc490>
   10948:	andeq	lr, r2, r0, ror #14
   1094c:	andeq	lr, r2, r8, asr #14
   10950:	andeq	r6, r1, ip, lsr #28
   10954:			; <UNDEFINED> instruction: 0xffffff3c
   10958:			; <UNDEFINED> instruction: 0xffffff30
   1095c:	push	{r4, lr}
   10960:	mov	r4, r0
   10964:	bl	108a4 <main@@Base+0xc46c>
   10968:	mov	r1, r0
   1096c:	mov	r0, r4
   10970:	bl	39d8 <g_type_check_instance_cast@plt>
   10974:	ldr	r3, [pc, #56]	; 109b4 <main@@Base+0xc57c>
   10978:	add	r3, pc, r3
   1097c:	ldr	r3, [r3, #4]
   10980:	ldr	r0, [r0, r3]
   10984:	cmp	r0, #0
   10988:	beq	10990 <main@@Base+0xc558>
   1098c:	bl	414c <g_bytes_unref@plt>
   10990:	ldr	r3, [pc, #32]	; 109b8 <main@@Base+0xc580>
   10994:	mov	r1, #80	; 0x50
   10998:	add	r3, pc, r3
   1099c:	ldr	r0, [r3]
   109a0:	bl	4374 <g_type_check_class_cast@plt>
   109a4:	ldr	r3, [r0, #24]
   109a8:	mov	r0, r4
   109ac:	blx	r3
   109b0:	pop	{r4, pc}
   109b4:	muleq	r2, ip, r6
   109b8:	andeq	lr, r2, ip, ror r6
   109bc:	push	{r3, lr}
   109c0:	bl	108a4 <main@@Base+0xc46c>
   109c4:	mov	r1, #0
   109c8:	pop	{r3, lr}
   109cc:	b	3804 <g_object_new@plt>
   109d0:	push	{r3, r4, r5, lr}
   109d4:	mov	r4, r0
   109d8:	ldr	r3, [pc, #104]	; 10a48 <main@@Base+0xc610>
   109dc:	add	r3, pc, r3
   109e0:	ldr	r5, [r3, #4]
   109e4:	bl	108a4 <main@@Base+0xc46c>
   109e8:	cmp	r4, #0
   109ec:	beq	10a1c <main@@Base+0xc5e4>
   109f0:	ldr	r3, [r4]
   109f4:	cmp	r3, #0
   109f8:	beq	10a08 <main@@Base+0xc5d0>
   109fc:	ldr	r3, [r3]
   10a00:	cmp	r0, r3
   10a04:	beq	10a40 <main@@Base+0xc608>
   10a08:	mov	r1, r0
   10a0c:	mov	r0, r4
   10a10:	bl	3fcc <g_type_check_instance_is_a@plt>
   10a14:	cmp	r0, #0
   10a18:	bne	10a40 <main@@Base+0xc608>
   10a1c:	ldr	r0, [pc, #40]	; 10a4c <main@@Base+0xc614>
   10a20:	ldr	r1, [pc, #40]	; 10a50 <main@@Base+0xc618>
   10a24:	ldr	r2, [pc, #40]	; 10a54 <main@@Base+0xc61c>
   10a28:	add	r0, pc, r0
   10a2c:	add	r1, pc, r1
   10a30:	add	r2, pc, r2
   10a34:	bl	3870 <g_return_if_fail_warning@plt>
   10a38:	mov	r0, #0
   10a3c:	pop	{r3, r4, r5, pc}
   10a40:	ldr	r0, [r4, r5]
   10a44:	pop	{r3, r4, r5, pc}
   10a48:	andeq	lr, r2, r8, lsr r6
   10a4c:	andeq	r4, r1, r4, ror #8
   10a50:	andeq	r6, r1, r8, lsr ip
   10a54:	strdeq	r6, [r1], -ip
   10a58:	push	{r3, r4, r5, lr}
   10a5c:	mov	r4, r0
   10a60:	ldr	r3, [pc, #112]	; 10ad8 <main@@Base+0xc6a0>
   10a64:	add	r3, pc, r3
   10a68:	ldr	r5, [r3, #4]
   10a6c:	bl	108a4 <main@@Base+0xc46c>
   10a70:	cmp	r4, #0
   10a74:	beq	10aa4 <main@@Base+0xc66c>
   10a78:	ldr	r3, [r4]
   10a7c:	cmp	r3, #0
   10a80:	beq	10a90 <main@@Base+0xc658>
   10a84:	ldr	r3, [r3]
   10a88:	cmp	r0, r3
   10a8c:	beq	10acc <main@@Base+0xc694>
   10a90:	mov	r1, r0
   10a94:	mov	r0, r4
   10a98:	bl	3fcc <g_type_check_instance_is_a@plt>
   10a9c:	cmp	r0, #0
   10aa0:	bne	10acc <main@@Base+0xc694>
   10aa4:	ldr	r1, [pc, #48]	; 10adc <main@@Base+0xc6a4>
   10aa8:	ldr	r0, [pc, #48]	; 10ae0 <main@@Base+0xc6a8>
   10aac:	ldr	r2, [pc, #48]	; 10ae4 <main@@Base+0xc6ac>
   10ab0:	add	r1, pc, r1
   10ab4:	add	r0, pc, r0
   10ab8:	add	r1, r1, #28
   10abc:	add	r2, pc, r2
   10ac0:	bl	3870 <g_return_if_fail_warning@plt>
   10ac4:	mov	r0, #0
   10ac8:	pop	{r3, r4, r5, pc}
   10acc:	add	r4, r4, r5
   10ad0:	ldr	r0, [r4, #8]
   10ad4:	pop	{r3, r4, r5, pc}
   10ad8:			; <UNDEFINED> instruction: 0x0002e5b0
   10adc:			; <UNDEFINED> instruction: 0x00016bb4
   10ae0:	ldrdeq	r4, [r1], -r8
   10ae4:	andeq	r6, r1, r0, ror ip
   10ae8:	ldr	r3, [pc, #192]	; 10bb0 <main@@Base+0xc778>
   10aec:	push	{r4, r5, r6, lr}
   10af0:	add	r3, pc, r3
   10af4:	mov	r4, r0
   10af8:	mov	r5, r1
   10afc:	ldr	r6, [r3, #4]
   10b00:	bl	108a4 <main@@Base+0xc46c>
   10b04:	cmp	r4, #0
   10b08:	beq	10b38 <main@@Base+0xc700>
   10b0c:	ldr	r3, [r4]
   10b10:	cmp	r3, #0
   10b14:	beq	10b24 <main@@Base+0xc6ec>
   10b18:	ldr	r3, [r3]
   10b1c:	cmp	r0, r3
   10b20:	beq	10b5c <main@@Base+0xc724>
   10b24:	mov	r1, r0
   10b28:	mov	r0, r4
   10b2c:	bl	3fcc <g_type_check_instance_is_a@plt>
   10b30:	cmp	r0, #0
   10b34:	bne	10b5c <main@@Base+0xc724>
   10b38:	ldr	r1, [pc, #116]	; 10bb4 <main@@Base+0xc77c>
   10b3c:	ldr	r0, [pc, #116]	; 10bb8 <main@@Base+0xc780>
   10b40:	ldr	r2, [pc, #116]	; 10bbc <main@@Base+0xc784>
   10b44:	add	r1, pc, r1
   10b48:	add	r0, pc, r0
   10b4c:	add	r1, r1, #52	; 0x34
   10b50:	add	r2, pc, r2
   10b54:	pop	{r4, r5, r6, lr}
   10b58:	b	3870 <g_return_if_fail_warning@plt>
   10b5c:	cmp	r5, #0
   10b60:	beq	10b8c <main@@Base+0xc754>
   10b64:	ldr	r0, [r4, r6]
   10b68:	cmp	r0, r5
   10b6c:	popeq	{r4, r5, r6, pc}
   10b70:	cmp	r0, #0
   10b74:	beq	10b7c <main@@Base+0xc744>
   10b78:	bl	414c <g_bytes_unref@plt>
   10b7c:	mov	r0, r5
   10b80:	bl	40ec <g_bytes_ref@plt>
   10b84:	str	r0, [r4, r6]
   10b88:	pop	{r4, r5, r6, pc}
   10b8c:	ldr	r1, [pc, #44]	; 10bc0 <main@@Base+0xc788>
   10b90:	ldr	r0, [pc, #44]	; 10bc4 <main@@Base+0xc78c>
   10b94:	ldr	r2, [pc, #44]	; 10bc8 <main@@Base+0xc790>
   10b98:	add	r1, pc, r1
   10b9c:	add	r0, pc, r0
   10ba0:	add	r1, r1, #52	; 0x34
   10ba4:	add	r2, pc, r2
   10ba8:	pop	{r4, r5, r6, lr}
   10bac:	b	3870 <g_return_if_fail_warning@plt>
   10bb0:	andeq	lr, r2, r4, lsr #10
   10bb4:	andeq	r6, r1, r0, lsr #22
   10bb8:	andeq	r4, r1, r4, asr #6
   10bbc:	ldrdeq	r6, [r1], -ip
   10bc0:	andeq	r6, r1, ip, asr #21
   10bc4:	strdeq	r4, [r1], -r0
   10bc8:	andeq	r6, r1, r4, lsr #23
   10bcc:	ldr	r3, [pc, #120]	; 10c4c <main@@Base+0xc814>
   10bd0:	push	{r4, r5, r6, lr}
   10bd4:	add	r3, pc, r3
   10bd8:	mov	r4, r0
   10bdc:	mov	r5, r1
   10be0:	ldr	r6, [r3, #4]
   10be4:	bl	108a4 <main@@Base+0xc46c>
   10be8:	cmp	r4, #0
   10bec:	beq	10c1c <main@@Base+0xc7e4>
   10bf0:	ldr	r3, [r4]
   10bf4:	cmp	r3, #0
   10bf8:	beq	10c08 <main@@Base+0xc7d0>
   10bfc:	ldr	r3, [r3]
   10c00:	cmp	r0, r3
   10c04:	beq	10c40 <main@@Base+0xc808>
   10c08:	mov	r1, r0
   10c0c:	mov	r0, r4
   10c10:	bl	3fcc <g_type_check_instance_is_a@plt>
   10c14:	cmp	r0, #0
   10c18:	bne	10c40 <main@@Base+0xc808>
   10c1c:	ldr	r1, [pc, #44]	; 10c50 <main@@Base+0xc818>
   10c20:	ldr	r0, [pc, #44]	; 10c54 <main@@Base+0xc81c>
   10c24:	ldr	r2, [pc, #44]	; 10c58 <main@@Base+0xc820>
   10c28:	add	r1, pc, r1
   10c2c:	add	r0, pc, r0
   10c30:	add	r1, r1, #80	; 0x50
   10c34:	add	r2, pc, r2
   10c38:	pop	{r4, r5, r6, lr}
   10c3c:	b	3870 <g_return_if_fail_warning@plt>
   10c40:	add	r4, r4, r6
   10c44:	str	r5, [r4, #8]
   10c48:	pop	{r4, r5, r6, pc}
   10c4c:	andeq	lr, r2, r0, asr #8
   10c50:	andeq	r6, r1, ip, lsr sl
   10c54:	andeq	r4, r1, r0, ror #4
   10c58:	strdeq	r6, [r1], -r8
   10c5c:	push	{r3, r4, r5, r6, r7, lr}
   10c60:	mov	r4, r0
   10c64:	ldr	r3, [pc, #236]	; 10d58 <main@@Base+0xc920>
   10c68:	add	r3, pc, r3
   10c6c:	ldr	r6, [r3, #4]
   10c70:	bl	108a4 <main@@Base+0xc46c>
   10c74:	cmp	r4, #0
   10c78:	beq	10ca8 <main@@Base+0xc870>
   10c7c:	ldr	r3, [r4]
   10c80:	cmp	r3, #0
   10c84:	beq	10c94 <main@@Base+0xc85c>
   10c88:	ldr	r3, [r3]
   10c8c:	cmp	r0, r3
   10c90:	beq	10cd0 <main@@Base+0xc898>
   10c94:	mov	r1, r0
   10c98:	mov	r0, r4
   10c9c:	bl	3fcc <g_type_check_instance_is_a@plt>
   10ca0:	cmp	r0, #0
   10ca4:	bne	10cd0 <main@@Base+0xc898>
   10ca8:	ldr	r1, [pc, #172]	; 10d5c <main@@Base+0xc924>
   10cac:	ldr	r0, [pc, #172]	; 10d60 <main@@Base+0xc928>
   10cb0:	ldr	r2, [pc, #172]	; 10d64 <main@@Base+0xc92c>
   10cb4:	add	r1, pc, r1
   10cb8:	add	r0, pc, r0
   10cbc:	add	r1, r1, #104	; 0x68
   10cc0:	add	r2, pc, r2
   10cc4:	bl	3870 <g_return_if_fail_warning@plt>
   10cc8:	mov	r0, #0
   10ccc:	pop	{r3, r4, r5, r6, r7, pc}
   10cd0:	ldr	r0, [pc, #144]	; 10d68 <main@@Base+0xc930>
   10cd4:	add	r7, r4, r6
   10cd8:	add	r0, pc, r0
   10cdc:	bl	3990 <g_string_new@plt>
   10ce0:	ldr	r1, [pc, #132]	; 10d6c <main@@Base+0xc934>
   10ce4:	ldr	r2, [r7, #8]
   10ce8:	add	r1, pc, r1
   10cec:	mov	r5, r0
   10cf0:	bl	4344 <g_string_append_printf@plt>
   10cf4:	ldr	r2, [r7, #4]
   10cf8:	cmp	r2, #0
   10cfc:	bne	10d44 <main@@Base+0xc90c>
   10d00:	ldr	r0, [r4, r6]
   10d04:	cmp	r0, #0
   10d08:	beq	10d24 <main@@Base+0xc8ec>
   10d0c:	bl	3f24 <g_bytes_get_size@plt>
   10d10:	ldr	r1, [pc, #88]	; 10d70 <main@@Base+0xc938>
   10d14:	add	r1, pc, r1
   10d18:	mov	r2, r0
   10d1c:	mov	r0, r5
   10d20:	bl	4344 <g_string_append_printf@plt>
   10d24:	ldr	r1, [r5, #4]
   10d28:	mov	r0, r5
   10d2c:	sub	r1, r1, #1
   10d30:	bl	3960 <g_string_truncate@plt>
   10d34:	mov	r0, r5
   10d38:	mov	r1, #0
   10d3c:	pop	{r3, r4, r5, r6, r7, lr}
   10d40:	b	40bc <g_string_free@plt>
   10d44:	ldr	r1, [pc, #40]	; 10d74 <main@@Base+0xc93c>
   10d48:	mov	r0, r5
   10d4c:	add	r1, pc, r1
   10d50:	bl	4344 <g_string_append_printf@plt>
   10d54:	b	10d00 <main@@Base+0xc8c8>
   10d58:	andeq	lr, r2, ip, lsr #7
   10d5c:			; <UNDEFINED> instruction: 0x000169b0
   10d60:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   10d64:	andeq	r6, r1, ip, ror #20
   10d68:	andeq	r4, r1, r8, lsr #19
   10d6c:	andeq	r6, r1, r4, lsr #21
   10d70:	andeq	r6, r1, r0, ror #20
   10d74:	andeq	r6, r1, r0, lsl sl
   10d78:	ldr	r3, [pc, #120]	; 10df8 <main@@Base+0xc9c0>
   10d7c:	push	{r4, r5, r6, lr}
   10d80:	add	r3, pc, r3
   10d84:	mov	r4, r0
   10d88:	mov	r5, r1
   10d8c:	ldr	r6, [r3, #4]
   10d90:	bl	108a4 <main@@Base+0xc46c>
   10d94:	cmp	r4, #0
   10d98:	beq	10dc8 <main@@Base+0xc990>
   10d9c:	ldr	r3, [r4]
   10da0:	cmp	r3, #0
   10da4:	beq	10db4 <main@@Base+0xc97c>
   10da8:	ldr	r3, [r3]
   10dac:	cmp	r0, r3
   10db0:	beq	10dec <main@@Base+0xc9b4>
   10db4:	mov	r1, r0
   10db8:	mov	r0, r4
   10dbc:	bl	3fcc <g_type_check_instance_is_a@plt>
   10dc0:	cmp	r0, #0
   10dc4:	bne	10dec <main@@Base+0xc9b4>
   10dc8:	ldr	r1, [pc, #44]	; 10dfc <main@@Base+0xc9c4>
   10dcc:	ldr	r0, [pc, #44]	; 10e00 <main@@Base+0xc9c8>
   10dd0:	ldr	r2, [pc, #44]	; 10e04 <main@@Base+0xc9cc>
   10dd4:	add	r1, pc, r1
   10dd8:	add	r0, pc, r0
   10ddc:	add	r1, r1, #128	; 0x80
   10de0:	add	r2, pc, r2
   10de4:	pop	{r4, r5, r6, lr}
   10de8:	b	3870 <g_return_if_fail_warning@plt>
   10dec:	add	r4, r4, r6
   10df0:	strb	r5, [r4, #12]
   10df4:	pop	{r4, r5, r6, pc}
   10df8:	muleq	r2, r4, r2
   10dfc:	muleq	r1, r0, r8
   10e00:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   10e04:	andeq	r6, r1, ip, asr #18
   10e08:	ldr	r3, [pc, #340]	; 10f64 <main@@Base+0xcb2c>
   10e0c:	ldr	r2, [pc, #340]	; 10f68 <main@@Base+0xcb30>
   10e10:	add	r3, pc, r3
   10e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e18:	mov	r6, r1
   10e1c:	ldr	r5, [r3, r2]
   10e20:	sub	sp, sp, #20
   10e24:	ldr	r1, [pc, #320]	; 10f6c <main@@Base+0xcb34>
   10e28:	mov	r4, r0
   10e2c:	ldr	r3, [r5]
   10e30:	add	r1, pc, r1
   10e34:	ldr	r7, [r1, #4]
   10e38:	str	r3, [sp, #12]
   10e3c:	bl	108a4 <main@@Base+0xc46c>
   10e40:	cmp	r4, #0
   10e44:	beq	10e74 <main@@Base+0xca3c>
   10e48:	ldr	r3, [r4]
   10e4c:	cmp	r3, #0
   10e50:	beq	10e60 <main@@Base+0xca28>
   10e54:	ldr	r3, [r3]
   10e58:	cmp	r0, r3
   10e5c:	beq	10eac <main@@Base+0xca74>
   10e60:	mov	r1, r0
   10e64:	mov	r0, r4
   10e68:	bl	3fcc <g_type_check_instance_is_a@plt>
   10e6c:	cmp	r0, #0
   10e70:	bne	10eac <main@@Base+0xca74>
   10e74:	ldr	r1, [pc, #244]	; 10f70 <main@@Base+0xcb38>
   10e78:	ldr	r0, [pc, #244]	; 10f74 <main@@Base+0xcb3c>
   10e7c:	ldr	r2, [pc, #244]	; 10f78 <main@@Base+0xcb40>
   10e80:	add	r1, pc, r1
   10e84:	add	r0, pc, r0
   10e88:	add	r1, r1, #160	; 0xa0
   10e8c:	add	r2, pc, r2
   10e90:	bl	3870 <g_return_if_fail_warning@plt>
   10e94:	ldr	r2, [sp, #12]
   10e98:	ldr	r3, [r5]
   10e9c:	cmp	r2, r3
   10ea0:	bne	10f60 <main@@Base+0xcb28>
   10ea4:	add	sp, sp, #20
   10ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10eac:	ldr	r0, [r4, r7]
   10eb0:	add	r8, r4, r7
   10eb4:	cmp	r0, #0
   10eb8:	str	r6, [r8, #4]
   10ebc:	beq	10e94 <main@@Base+0xca5c>
   10ec0:	bl	3f24 <g_bytes_get_size@plt>
   10ec4:	cmp	r6, r0
   10ec8:	bls	10e94 <main@@Base+0xca5c>
   10ecc:	add	r1, sp, #8
   10ed0:	ldr	r0, [r4, r7]
   10ed4:	bl	4320 <g_bytes_get_data@plt>
   10ed8:	mov	fp, r0
   10edc:	mov	r0, r6
   10ee0:	bl	4248 <g_malloc0@plt>
   10ee4:	subs	sl, r0, #0
   10ee8:	beq	10f30 <main@@Base+0xcaf8>
   10eec:	ldr	r9, [sp, #8]
   10ef0:	mov	r1, fp
   10ef4:	mov	r2, r9
   10ef8:	bl	40e0 <memcpy@plt>
   10efc:	ldrb	r1, [r8, #12]
   10f00:	cmp	r1, #0
   10f04:	beq	10f14 <main@@Base+0xcadc>
   10f08:	add	r0, sl, r9
   10f0c:	rsb	r2, r9, r6
   10f10:	bl	3bd0 <memset@plt>
   10f14:	ldr	r0, [r4, r7]
   10f18:	bl	414c <g_bytes_unref@plt>
   10f1c:	mov	r0, sl
   10f20:	mov	r1, r6
   10f24:	bl	3a98 <g_bytes_new_take@plt>
   10f28:	str	r0, [r4, r7]
   10f2c:	b	10e94 <main@@Base+0xca5c>
   10f30:	ldr	r1, [pc, #68]	; 10f7c <main@@Base+0xcb44>
   10f34:	mov	r2, #229	; 0xe5
   10f38:	ldr	r3, [pc, #64]	; 10f80 <main@@Base+0xcb48>
   10f3c:	add	r1, pc, r1
   10f40:	ldr	r0, [pc, #60]	; 10f84 <main@@Base+0xcb4c>
   10f44:	str	r1, [sp]
   10f48:	add	r3, pc, r3
   10f4c:	ldr	r1, [pc, #52]	; 10f88 <main@@Base+0xcb50>
   10f50:	add	r0, pc, r0
   10f54:	add	r3, r3, #160	; 0xa0
   10f58:	add	r1, pc, r1
   10f5c:	bl	42e4 <g_assertion_message_expr@plt>
   10f60:	bl	3e4c <__stack_chk_fail@plt>
   10f64:	andeq	sp, r2, r0, ror sp
   10f68:	andeq	r0, r0, r0, lsr r4
   10f6c:	andeq	lr, r2, r4, ror #3
   10f70:	andeq	r6, r1, r4, ror #15
   10f74:	andeq	r4, r1, r8
   10f78:	andeq	r6, r1, r0, lsr #17
   10f7c:	andeq	r6, r1, r8, lsl #17
   10f80:	andeq	r6, r1, ip, lsl r7
   10f84:	andeq	r3, r1, ip, lsr pc
   10f88:	andeq	r6, r1, ip, asr #16
   10f8c:	push	{r4, r5, r6, r7, lr}
   10f90:	sub	sp, sp, #12
   10f94:	mov	r4, r1
   10f98:	mov	r6, r2
   10f9c:	mov	r7, r3
   10fa0:	mov	r5, r0
   10fa4:	bl	10a58 <main@@Base+0xc620>
   10fa8:	cmp	r0, r4
   10fac:	bhi	10ffc <main@@Base+0xcbc4>
   10fb0:	mov	r0, r5
   10fb4:	bl	10a58 <main@@Base+0xc620>
   10fb8:	rsb	r4, r0, r4
   10fbc:	mov	r0, r5
   10fc0:	bl	109d0 <main@@Base+0xc598>
   10fc4:	mov	r5, r0
   10fc8:	bl	3f24 <g_bytes_get_size@plt>
   10fcc:	cmp	r4, r0
   10fd0:	bhi	11038 <main@@Base+0xcc00>
   10fd4:	mov	r0, r5
   10fd8:	bl	3f24 <g_bytes_get_size@plt>
   10fdc:	mov	r1, r4
   10fe0:	rsb	r2, r4, r0
   10fe4:	mov	r0, r5
   10fe8:	cmp	r2, r6
   10fec:	movcs	r2, r6
   10ff0:	add	sp, sp, #12
   10ff4:	pop	{r4, r5, r6, r7, lr}
   10ff8:	b	3b40 <g_bytes_new_from_bytes@plt>
   10ffc:	bl	40a4 <fwupd_error_quark@plt>
   11000:	mov	r6, r0
   11004:	mov	r0, r5
   11008:	bl	10a58 <main@@Base+0xc620>
   1100c:	ldr	r3, [pc, #88]	; 1106c <main@@Base+0xcc34>
   11010:	mov	r1, r6
   11014:	str	r4, [sp]
   11018:	mov	r2, #0
   1101c:	add	r3, pc, r3
   11020:	str	r0, [sp, #4]
   11024:	mov	r0, r7
   11028:	bl	4350 <g_set_error@plt>
   1102c:	mov	r0, #0
   11030:	add	sp, sp, #12
   11034:	pop	{r4, r5, r6, r7, pc}
   11038:	bl	40a4 <fwupd_error_quark@plt>
   1103c:	mov	r6, r0
   11040:	mov	r0, r5
   11044:	bl	3f24 <g_bytes_get_size@plt>
   11048:	ldr	r3, [pc, #32]	; 11070 <main@@Base+0xcc38>
   1104c:	mov	r1, r6
   11050:	str	r4, [sp]
   11054:	mov	r2, #8
   11058:	add	r3, pc, r3
   1105c:	str	r0, [sp, #4]
   11060:	mov	r0, r7
   11064:	bl	4350 <g_set_error@plt>
   11068:	b	1102c <main@@Base+0xcbf4>
   1106c:			; <UNDEFINED> instruction: 0x000167b4
   11070:	andeq	r6, r1, ip, lsr #15
   11074:	ldr	r2, [pc, #96]	; 110dc <main@@Base+0xcca4>
   11078:	push	{r3, r4, r5, r6, r7, lr}
   1107c:	add	r2, pc, r2
   11080:	ldr	r4, [pc, #88]	; 110e0 <main@@Base+0xcca8>
   11084:	mvn	r3, #0
   11088:	ldr	r6, [r2]
   1108c:	mov	r7, r0
   11090:	ldr	r1, [pc, #76]	; 110e4 <main@@Base+0xccac>
   11094:	add	r4, pc, r4
   11098:	add	r5, r0, r6
   1109c:	strh	r3, [r5, #8]
   110a0:	strh	r3, [r5, #10]
   110a4:	strh	r3, [r5, #12]
   110a8:	ldr	r0, [r4, r1]
   110ac:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   110b0:	ldr	r2, [pc, #48]	; 110e8 <main@@Base+0xccb0>
   110b4:	ldr	r1, [pc, #48]	; 110ec <main@@Base+0xccb4>
   110b8:	ldr	r3, [pc, #48]	; 110f0 <main@@Base+0xccb8>
   110bc:	str	r0, [r5, #4]
   110c0:	ldr	r2, [r4, r2]
   110c4:	ldr	r0, [r4, r1]
   110c8:	ldr	r1, [r4, r3]
   110cc:	mov	r3, r2
   110d0:	bl	3b58 <g_hash_table_new_full@plt>
   110d4:	str	r0, [r7, r6]
   110d8:	pop	{r3, r4, r5, r6, r7, pc}
   110dc:	andeq	sp, r2, r4, lsr #31
   110e0:	andeq	sp, r2, ip, ror #21
   110e4:	andeq	r0, r0, r4, asr r4
   110e8:	andeq	r0, r0, ip, asr #8
   110ec:	andeq	r0, r0, r8, asr #8
   110f0:	andeq	r0, r0, r4, lsr r4
   110f4:	push	{r4, lr}
   110f8:	mov	r4, r0
   110fc:	bl	420c <g_type_class_peek_parent@plt>
   11100:	ldr	r1, [pc, #52]	; 1113c <main@@Base+0xcd04>
   11104:	add	r1, pc, r1
   11108:	ldr	r3, [r1]
   1110c:	cmp	r3, #0
   11110:	str	r0, [r1, #4]
   11114:	beq	11120 <main@@Base+0xcce8>
   11118:	mov	r0, r4
   1111c:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   11120:	mov	r0, r4
   11124:	mov	r1, #80	; 0x50
   11128:	bl	4374 <g_type_check_class_cast@plt>
   1112c:	ldr	r3, [pc, #12]	; 11140 <main@@Base+0xcd08>
   11130:	add	r3, pc, r3
   11134:	str	r3, [r0, #24]
   11138:	pop	{r4, pc}
   1113c:	andeq	sp, r2, ip, lsl pc
   11140:	andeq	r0, r0, r4, asr #1
   11144:	push	{r4, r5, r6, lr}
   11148:	dmb	sy
   1114c:	ldr	r4, [pc, #148]	; 111e8 <main@@Base+0xcdb0>
   11150:	sub	sp, sp, #16
   11154:	add	r4, pc, r4
   11158:	ldr	r5, [r4, #8]
   1115c:	dmb	sy
   11160:	cmp	r5, #0
   11164:	beq	1117c <main@@Base+0xcd44>
   11168:	ldr	r3, [pc, #124]	; 111ec <main@@Base+0xcdb4>
   1116c:	add	r3, pc, r3
   11170:	ldr	r0, [r3, #8]
   11174:	add	sp, sp, #16
   11178:	pop	{r4, r5, r6, pc}
   1117c:	add	r6, r4, #8
   11180:	mov	r0, r6
   11184:	bl	3d50 <g_once_init_enter@plt>
   11188:	cmp	r0, #0
   1118c:	beq	11168 <main@@Base+0xcd30>
   11190:	ldr	r0, [pc, #88]	; 111f0 <main@@Base+0xcdb8>
   11194:	add	r0, pc, r0
   11198:	bl	3df8 <g_intern_static_string@plt>
   1119c:	ldr	r3, [pc, #80]	; 111f4 <main@@Base+0xcdbc>
   111a0:	mov	r2, #12
   111a4:	str	r5, [sp, #8]
   111a8:	add	r3, pc, r3
   111ac:	stm	sp, {r2, r3}
   111b0:	ldr	r3, [pc, #64]	; 111f8 <main@@Base+0xcdc0>
   111b4:	mov	r2, #68	; 0x44
   111b8:	add	r3, pc, r3
   111bc:	mov	r1, r0
   111c0:	mov	r0, #80	; 0x50
   111c4:	bl	3894 <g_type_register_static_simple@plt>
   111c8:	mov	r1, #24
   111cc:	mov	r5, r0
   111d0:	bl	3edc <g_type_add_instance_private@plt>
   111d4:	mov	r1, r5
   111d8:	str	r0, [r4]
   111dc:	mov	r0, r6
   111e0:	bl	4140 <g_once_init_leave@plt>
   111e4:	b	11168 <main@@Base+0xcd30>
   111e8:	andeq	sp, r2, ip, asr #29
   111ec:			; <UNDEFINED> instruction: 0x0002deb4
   111f0:			; <UNDEFINED> instruction: 0x000168b8
   111f4:			; <UNDEFINED> instruction: 0xfffffec4
   111f8:			; <UNDEFINED> instruction: 0xffffff34
   111fc:	push	{r3, r4, r5, r6, r7, lr}
   11200:	mov	r4, r0
   11204:	bl	11144 <main@@Base+0xcd0c>
   11208:	ldr	r5, [pc, #68]	; 11254 <main@@Base+0xce1c>
   1120c:	add	r5, pc, r5
   11210:	mov	r1, r0
   11214:	mov	r0, r4
   11218:	bl	39d8 <g_type_check_instance_cast@plt>
   1121c:	ldr	r6, [r5]
   11220:	add	r3, r0, r6
   11224:	mov	r7, r0
   11228:	ldr	r0, [r3, #4]
   1122c:	bl	4224 <g_ptr_array_unref@plt>
   11230:	ldr	r0, [r7, r6]
   11234:	bl	4230 <g_hash_table_destroy@plt>
   11238:	ldr	r0, [r5, #4]
   1123c:	mov	r1, #80	; 0x50
   11240:	bl	4374 <g_type_check_class_cast@plt>
   11244:	ldr	r3, [r0, #24]
   11248:	mov	r0, r4
   1124c:	blx	r3
   11250:	pop	{r3, r4, r5, r6, r7, pc}
   11254:	andeq	sp, r2, r4, lsl lr
   11258:	push	{r3, lr}
   1125c:	bl	11144 <main@@Base+0xcd0c>
   11260:	mov	r1, #0
   11264:	pop	{r3, lr}
   11268:	b	3804 <g_object_new@plt>
   1126c:	push	{r3, r4, r5, r6, r7, lr}
   11270:	mov	r4, r0
   11274:	ldr	r3, [pc, #180]	; 11330 <main@@Base+0xcef8>
   11278:	mov	r7, r1
   1127c:	add	r3, pc, r3
   11280:	ldr	r6, [r3]
   11284:	add	r6, r0, r6
   11288:	bl	11144 <main@@Base+0xcd0c>
   1128c:	cmp	r4, #0
   11290:	mov	r1, r0
   11294:	beq	112c0 <main@@Base+0xce88>
   11298:	ldr	r3, [r4]
   1129c:	cmp	r3, #0
   112a0:	beq	112b0 <main@@Base+0xce78>
   112a4:	ldr	r3, [r3]
   112a8:	cmp	r0, r3
   112ac:	beq	112e4 <main@@Base+0xceac>
   112b0:	mov	r0, r4
   112b4:	bl	3fcc <g_type_check_instance_is_a@plt>
   112b8:	cmp	r0, #0
   112bc:	bne	112e4 <main@@Base+0xceac>
   112c0:	ldr	r0, [pc, #108]	; 11334 <main@@Base+0xcefc>
   112c4:	ldr	r1, [pc, #108]	; 11338 <main@@Base+0xcf00>
   112c8:	ldr	r2, [pc, #108]	; 1133c <main@@Base+0xcf04>
   112cc:	add	r0, pc, r0
   112d0:	add	r1, pc, r1
   112d4:	add	r2, pc, r2
   112d8:	bl	3870 <g_return_if_fail_warning@plt>
   112dc:	mov	r0, #0
   112e0:	pop	{r3, r4, r5, r6, r7, pc}
   112e4:	ldr	r3, [r6, #4]
   112e8:	ldr	r2, [r3, #4]
   112ec:	cmp	r2, #0
   112f0:	movne	r4, #0
   112f4:	bne	1130c <main@@Base+0xced4>
   112f8:	b	112dc <main@@Base+0xcea4>
   112fc:	ldr	r3, [r6, #4]
   11300:	ldr	r2, [r3, #4]
   11304:	cmp	r2, r4
   11308:	bls	112dc <main@@Base+0xcea4>
   1130c:	ldr	r3, [r3]
   11310:	ldr	r5, [r3, r4, lsl #2]
   11314:	add	r4, r4, #1
   11318:	mov	r0, r5
   1131c:	bl	15cb8 <main@@Base+0x11880>
   11320:	cmp	r0, r7
   11324:	bne	112fc <main@@Base+0xcec4>
   11328:	mov	r0, r5
   1132c:	pop	{r3, r4, r5, r6, r7, pc}
   11330:	andeq	sp, r2, r4, lsr #27
   11334:	andeq	r3, r1, r0, asr #23
   11338:	andeq	r6, r1, ip, asr r5
   1133c:	andeq	r6, r1, r4, lsl #15
   11340:	push	{r3, r4, r5, r6, r7, lr}
   11344:	mov	r4, r0
   11348:	ldr	r3, [pc, #192]	; 11410 <main@@Base+0xcfd8>
   1134c:	mov	r7, r1
   11350:	add	r3, pc, r3
   11354:	ldr	r6, [r3]
   11358:	add	r6, r0, r6
   1135c:	bl	11144 <main@@Base+0xcd0c>
   11360:	cmp	r4, #0
   11364:	mov	r1, r0
   11368:	beq	11394 <main@@Base+0xcf5c>
   1136c:	ldr	r3, [r4]
   11370:	cmp	r3, #0
   11374:	beq	11384 <main@@Base+0xcf4c>
   11378:	ldr	r3, [r3]
   1137c:	cmp	r0, r3
   11380:	beq	113bc <main@@Base+0xcf84>
   11384:	mov	r0, r4
   11388:	bl	3fcc <g_type_check_instance_is_a@plt>
   1138c:	cmp	r0, #0
   11390:	bne	113bc <main@@Base+0xcf84>
   11394:	ldr	r1, [pc, #120]	; 11414 <main@@Base+0xcfdc>
   11398:	ldr	r0, [pc, #120]	; 11418 <main@@Base+0xcfe0>
   1139c:	ldr	r2, [pc, #120]	; 1141c <main@@Base+0xcfe4>
   113a0:	add	r1, pc, r1
   113a4:	add	r0, pc, r0
   113a8:	add	r1, r1, #24
   113ac:	add	r2, pc, r2
   113b0:	bl	3870 <g_return_if_fail_warning@plt>
   113b4:	mov	r0, #0
   113b8:	pop	{r3, r4, r5, r6, r7, pc}
   113bc:	ldr	r3, [r6, #4]
   113c0:	ldr	r2, [r3, #4]
   113c4:	cmp	r2, #0
   113c8:	movne	r4, #0
   113cc:	bne	113e4 <main@@Base+0xcfac>
   113d0:	b	113b4 <main@@Base+0xcf7c>
   113d4:	ldr	r3, [r6, #4]
   113d8:	ldr	r2, [r3, #4]
   113dc:	cmp	r2, r4
   113e0:	bls	113b4 <main@@Base+0xcf7c>
   113e4:	ldr	r3, [r3]
   113e8:	ldr	r5, [r3, r4, lsl #2]
   113ec:	add	r4, r4, #1
   113f0:	mov	r0, r5
   113f4:	bl	15d48 <main@@Base+0x11910>
   113f8:	mov	r1, r7
   113fc:	bl	441c <g_strcmp0@plt>
   11400:	cmp	r0, #0
   11404:	bne	113d4 <main@@Base+0xcf9c>
   11408:	mov	r0, r5
   1140c:	pop	{r3, r4, r5, r6, r7, pc}
   11410:	ldrdeq	sp, [r2], -r0
   11414:	andeq	r6, r1, ip, lsl #9
   11418:	andeq	r3, r1, r8, ror #21
   1141c:	andeq	r6, r1, ip, lsr #13
   11420:	push	{r3, r4, r5, lr}
   11424:	mov	r4, r0
   11428:	ldr	r3, [pc, #136]	; 114b8 <main@@Base+0xd080>
   1142c:	add	r3, pc, r3
   11430:	ldr	r5, [r3]
   11434:	bl	11144 <main@@Base+0xcd0c>
   11438:	cmp	r4, #0
   1143c:	beq	1146c <main@@Base+0xd034>
   11440:	ldr	r3, [r4]
   11444:	cmp	r3, #0
   11448:	beq	11458 <main@@Base+0xd020>
   1144c:	ldr	r3, [r3]
   11450:	cmp	r0, r3
   11454:	beq	11494 <main@@Base+0xd05c>
   11458:	mov	r1, r0
   1145c:	mov	r0, r4
   11460:	bl	3fcc <g_type_check_instance_is_a@plt>
   11464:	cmp	r0, #0
   11468:	bne	11494 <main@@Base+0xd05c>
   1146c:	ldr	r1, [pc, #72]	; 114bc <main@@Base+0xd084>
   11470:	ldr	r0, [pc, #72]	; 114c0 <main@@Base+0xd088>
   11474:	ldr	r2, [pc, #72]	; 114c4 <main@@Base+0xd08c>
   11478:	add	r1, pc, r1
   1147c:	add	r0, pc, r0
   11480:	add	r1, r1, #56	; 0x38
   11484:	add	r2, pc, r2
   11488:	bl	3870 <g_return_if_fail_warning@plt>
   1148c:	mov	r0, #0
   11490:	pop	{r3, r4, r5, pc}
   11494:	add	r4, r4, r5
   11498:	ldr	r3, [r4, #4]
   1149c:	ldr	r0, [r3, #4]
   114a0:	cmp	r0, #0
   114a4:	beq	114b4 <main@@Base+0xd07c>
   114a8:	ldr	r3, [r3]
   114ac:	ldr	r0, [r3]
   114b0:	pop	{r3, r4, r5, pc}
   114b4:	pop	{r3, r4, r5, pc}
   114b8:	strdeq	sp, [r2], -r4
   114bc:			; <UNDEFINED> instruction: 0x000163b4
   114c0:	andeq	r3, r1, r0, lsl sl
   114c4:	ldrdeq	r6, [r1], -r4
   114c8:	push	{r3, r4, r5, lr}
   114cc:	mov	r4, r0
   114d0:	ldr	r3, [pc, #112]	; 11548 <main@@Base+0xd110>
   114d4:	add	r3, pc, r3
   114d8:	ldr	r5, [r3]
   114dc:	bl	11144 <main@@Base+0xcd0c>
   114e0:	cmp	r4, #0
   114e4:	beq	11514 <main@@Base+0xd0dc>
   114e8:	ldr	r3, [r4]
   114ec:	cmp	r3, #0
   114f0:	beq	11500 <main@@Base+0xd0c8>
   114f4:	ldr	r3, [r3]
   114f8:	cmp	r0, r3
   114fc:	beq	1153c <main@@Base+0xd104>
   11500:	mov	r1, r0
   11504:	mov	r0, r4
   11508:	bl	3fcc <g_type_check_instance_is_a@plt>
   1150c:	cmp	r0, #0
   11510:	bne	1153c <main@@Base+0xd104>
   11514:	ldr	r1, [pc, #48]	; 1154c <main@@Base+0xd114>
   11518:	ldr	r0, [pc, #48]	; 11550 <main@@Base+0xd118>
   1151c:	ldr	r2, [pc, #48]	; 11554 <main@@Base+0xd11c>
   11520:	add	r1, pc, r1
   11524:	add	r0, pc, r0
   11528:	add	r1, r1, #88	; 0x58
   1152c:	add	r2, pc, r2
   11530:	bl	3870 <g_return_if_fail_warning@plt>
   11534:	mov	r0, #0
   11538:	pop	{r3, r4, r5, pc}
   1153c:	add	r4, r4, r5
   11540:	ldr	r0, [r4, #4]
   11544:	pop	{r3, r4, r5, pc}
   11548:	andeq	sp, r2, ip, asr #22
   1154c:	andeq	r6, r1, ip, lsl #6
   11550:	andeq	r3, r1, r8, ror #18
   11554:	andeq	r6, r1, ip, lsr #10
   11558:	ldr	r3, [pc, #180]	; 11614 <main@@Base+0xd1dc>
   1155c:	push	{r4, r5, r6, lr}
   11560:	add	r3, pc, r3
   11564:	mov	r4, r0
   11568:	ldr	r6, [r3]
   1156c:	add	r6, r0, r6
   11570:	bl	11144 <main@@Base+0xcd0c>
   11574:	cmp	r4, #0
   11578:	mov	r1, r0
   1157c:	beq	115a8 <main@@Base+0xd170>
   11580:	ldr	r3, [r4]
   11584:	cmp	r3, #0
   11588:	beq	11598 <main@@Base+0xd160>
   1158c:	ldr	r3, [r3]
   11590:	cmp	r0, r3
   11594:	beq	115d0 <main@@Base+0xd198>
   11598:	mov	r0, r4
   1159c:	bl	3fcc <g_type_check_instance_is_a@plt>
   115a0:	cmp	r0, #0
   115a4:	bne	115d0 <main@@Base+0xd198>
   115a8:	ldr	r1, [pc, #104]	; 11618 <main@@Base+0xd1e0>
   115ac:	ldr	r0, [pc, #104]	; 1161c <main@@Base+0xd1e4>
   115b0:	ldr	r2, [pc, #104]	; 11620 <main@@Base+0xd1e8>
   115b4:	add	r1, pc, r1
   115b8:	add	r0, pc, r0
   115bc:	add	r1, r1, #112	; 0x70
   115c0:	add	r2, pc, r2
   115c4:	bl	3870 <g_return_if_fail_warning@plt>
   115c8:	mov	r0, #0
   115cc:	pop	{r4, r5, r6, pc}
   115d0:	ldr	r3, [r6, #4]
   115d4:	ldr	r0, [r3, #4]
   115d8:	cmp	r0, #0
   115dc:	popeq	{r4, r5, r6, pc}
   115e0:	mov	r4, #0
   115e4:	mov	r5, r4
   115e8:	ldr	r3, [r3]
   115ec:	ldr	r0, [r3, r4, lsl #2]
   115f0:	add	r4, r4, #1
   115f4:	bl	15dd8 <main@@Base+0x119a0>
   115f8:	ldr	r3, [r6, #4]
   115fc:	ldr	r2, [r3, #4]
   11600:	cmp	r2, r4
   11604:	add	r5, r5, r0
   11608:	bhi	115e8 <main@@Base+0xd1b0>
   1160c:	mov	r0, r5
   11610:	pop	{r4, r5, r6, pc}
   11614:	andeq	sp, r2, r0, asr #21
   11618:	andeq	r6, r1, r8, ror r2
   1161c:	ldrdeq	r3, [r1], -r4
   11620:	muleq	r1, r8, r4
   11624:	ldr	r3, [pc, #232]	; 11714 <main@@Base+0xd2dc>
   11628:	push	{r4, r5, r6, lr}
   1162c:	add	r3, pc, r3
   11630:	mov	r4, r0
   11634:	mov	r5, r1
   11638:	ldr	r6, [r3]
   1163c:	bl	11144 <main@@Base+0xcd0c>
   11640:	cmp	r4, #0
   11644:	beq	11674 <main@@Base+0xd23c>
   11648:	ldr	r3, [r4]
   1164c:	cmp	r3, #0
   11650:	beq	11660 <main@@Base+0xd228>
   11654:	ldr	r3, [r3]
   11658:	cmp	r0, r3
   1165c:	beq	11698 <main@@Base+0xd260>
   11660:	mov	r1, r0
   11664:	mov	r0, r4
   11668:	bl	3fcc <g_type_check_instance_is_a@plt>
   1166c:	cmp	r0, #0
   11670:	bne	11698 <main@@Base+0xd260>
   11674:	ldr	r1, [pc, #156]	; 11718 <main@@Base+0xd2e0>
   11678:	ldr	r0, [pc, #156]	; 1171c <main@@Base+0xd2e4>
   1167c:	ldr	r2, [pc, #156]	; 11720 <main@@Base+0xd2e8>
   11680:	add	r1, pc, r1
   11684:	add	r0, pc, r0
   11688:	add	r1, r1, #136	; 0x88
   1168c:	add	r2, pc, r2
   11690:	pop	{r4, r5, r6, lr}
   11694:	b	3870 <g_return_if_fail_warning@plt>
   11698:	bl	159d0 <main@@Base+0x11598>
   1169c:	cmp	r5, #0
   116a0:	mov	r1, r0
   116a4:	beq	116d0 <main@@Base+0xd298>
   116a8:	ldr	r3, [r5]
   116ac:	cmp	r3, #0
   116b0:	beq	116c0 <main@@Base+0xd288>
   116b4:	ldr	r3, [r3]
   116b8:	cmp	r1, r3
   116bc:	beq	116f4 <main@@Base+0xd2bc>
   116c0:	mov	r0, r5
   116c4:	bl	3fcc <g_type_check_instance_is_a@plt>
   116c8:	cmp	r0, #0
   116cc:	bne	116f4 <main@@Base+0xd2bc>
   116d0:	ldr	r1, [pc, #76]	; 11724 <main@@Base+0xd2ec>
   116d4:	ldr	r0, [pc, #76]	; 11728 <main@@Base+0xd2f0>
   116d8:	ldr	r2, [pc, #76]	; 1172c <main@@Base+0xd2f4>
   116dc:	add	r1, pc, r1
   116e0:	add	r0, pc, r0
   116e4:	add	r1, r1, #136	; 0x88
   116e8:	add	r2, pc, r2
   116ec:	pop	{r4, r5, r6, lr}
   116f0:	b	3870 <g_return_if_fail_warning@plt>
   116f4:	add	r4, r4, r6
   116f8:	mov	r0, r5
   116fc:	ldr	r4, [r4, #4]
   11700:	bl	381c <g_object_ref@plt>
   11704:	mov	r1, r0
   11708:	mov	r0, r4
   1170c:	pop	{r4, r5, r6, lr}
   11710:	b	426c <g_ptr_array_add@plt>
   11714:	strdeq	sp, [r2], -r4
   11718:	andeq	r6, r1, ip, lsr #3
   1171c:	andeq	r3, r1, r8, lsl #16
   11720:	andeq	r6, r1, ip, asr #7
   11724:	andeq	r6, r1, r0, asr r1
   11728:	andeq	r3, r1, ip, lsr #15
   1172c:	andeq	r6, r1, ip, lsl #7
   11730:	push	{r3, r4, r5, lr}
   11734:	mov	r4, r0
   11738:	ldr	r3, [pc, #112]	; 117b0 <main@@Base+0xd378>
   1173c:	add	r3, pc, r3
   11740:	ldr	r5, [r3]
   11744:	bl	11144 <main@@Base+0xcd0c>
   11748:	cmp	r4, #0
   1174c:	beq	1177c <main@@Base+0xd344>
   11750:	ldr	r3, [r4]
   11754:	cmp	r3, #0
   11758:	beq	11768 <main@@Base+0xd330>
   1175c:	ldr	r3, [r3]
   11760:	cmp	r0, r3
   11764:	beq	117a4 <main@@Base+0xd36c>
   11768:	mov	r1, r0
   1176c:	mov	r0, r4
   11770:	bl	3fcc <g_type_check_instance_is_a@plt>
   11774:	cmp	r0, #0
   11778:	bne	117a4 <main@@Base+0xd36c>
   1177c:	ldr	r1, [pc, #48]	; 117b4 <main@@Base+0xd37c>
   11780:	ldr	r0, [pc, #48]	; 117b8 <main@@Base+0xd380>
   11784:	ldr	r2, [pc, #48]	; 117bc <main@@Base+0xd384>
   11788:	add	r1, pc, r1
   1178c:	add	r0, pc, r0
   11790:	add	r1, r1, #160	; 0xa0
   11794:	add	r2, pc, r2
   11798:	bl	3870 <g_return_if_fail_warning@plt>
   1179c:	movw	r0, #65535	; 0xffff
   117a0:	pop	{r3, r4, r5, pc}
   117a4:	add	r4, r4, r5
   117a8:	ldrh	r0, [r4, #8]
   117ac:	pop	{r3, r4, r5, pc}
   117b0:	andeq	sp, r2, r4, ror #17
   117b4:	andeq	r6, r1, r4, lsr #1
   117b8:	andeq	r3, r1, r0, lsl #14
   117bc:	andeq	r6, r1, r4, asr #5
   117c0:	push	{r3, r4, r5, lr}
   117c4:	mov	r4, r0
   117c8:	ldr	r3, [pc, #112]	; 11840 <main@@Base+0xd408>
   117cc:	add	r3, pc, r3
   117d0:	ldr	r5, [r3]
   117d4:	bl	11144 <main@@Base+0xcd0c>
   117d8:	cmp	r4, #0
   117dc:	beq	1180c <main@@Base+0xd3d4>
   117e0:	ldr	r3, [r4]
   117e4:	cmp	r3, #0
   117e8:	beq	117f8 <main@@Base+0xd3c0>
   117ec:	ldr	r3, [r3]
   117f0:	cmp	r0, r3
   117f4:	beq	11834 <main@@Base+0xd3fc>
   117f8:	mov	r1, r0
   117fc:	mov	r0, r4
   11800:	bl	3fcc <g_type_check_instance_is_a@plt>
   11804:	cmp	r0, #0
   11808:	bne	11834 <main@@Base+0xd3fc>
   1180c:	ldr	r1, [pc, #48]	; 11844 <main@@Base+0xd40c>
   11810:	ldr	r0, [pc, #48]	; 11848 <main@@Base+0xd410>
   11814:	ldr	r2, [pc, #48]	; 1184c <main@@Base+0xd414>
   11818:	add	r1, pc, r1
   1181c:	add	r0, pc, r0
   11820:	add	r1, r1, #184	; 0xb8
   11824:	add	r2, pc, r2
   11828:	bl	3870 <g_return_if_fail_warning@plt>
   1182c:	movw	r0, #65535	; 0xffff
   11830:	pop	{r3, r4, r5, pc}
   11834:	add	r4, r4, r5
   11838:	ldrh	r0, [r4, #10]
   1183c:	pop	{r3, r4, r5, pc}
   11840:	andeq	sp, r2, r4, asr r8
   11844:	andeq	r6, r1, r4, lsl r0
   11848:	andeq	r3, r1, r0, ror r6
   1184c:	andeq	r6, r1, r4, lsr r2
   11850:	push	{r3, r4, r5, lr}
   11854:	mov	r4, r0
   11858:	ldr	r3, [pc, #112]	; 118d0 <main@@Base+0xd498>
   1185c:	add	r3, pc, r3
   11860:	ldr	r5, [r3]
   11864:	bl	11144 <main@@Base+0xcd0c>
   11868:	cmp	r4, #0
   1186c:	beq	1189c <main@@Base+0xd464>
   11870:	ldr	r3, [r4]
   11874:	cmp	r3, #0
   11878:	beq	11888 <main@@Base+0xd450>
   1187c:	ldr	r3, [r3]
   11880:	cmp	r0, r3
   11884:	beq	118c4 <main@@Base+0xd48c>
   11888:	mov	r1, r0
   1188c:	mov	r0, r4
   11890:	bl	3fcc <g_type_check_instance_is_a@plt>
   11894:	cmp	r0, #0
   11898:	bne	118c4 <main@@Base+0xd48c>
   1189c:	ldr	r1, [pc, #48]	; 118d4 <main@@Base+0xd49c>
   118a0:	ldr	r0, [pc, #48]	; 118d8 <main@@Base+0xd4a0>
   118a4:	ldr	r2, [pc, #48]	; 118dc <main@@Base+0xd4a4>
   118a8:	add	r1, pc, r1
   118ac:	add	r0, pc, r0
   118b0:	add	r1, r1, #208	; 0xd0
   118b4:	add	r2, pc, r2
   118b8:	bl	3870 <g_return_if_fail_warning@plt>
   118bc:	movw	r0, #65535	; 0xffff
   118c0:	pop	{r3, r4, r5, pc}
   118c4:	add	r4, r4, r5
   118c8:	ldrh	r0, [r4, #12]
   118cc:	pop	{r3, r4, r5, pc}
   118d0:	andeq	sp, r2, r4, asr #15
   118d4:	andeq	r5, r1, r4, lsl #31
   118d8:	andeq	r3, r1, r0, ror #11
   118dc:	andeq	r6, r1, r4, lsr #3
   118e0:	push	{r3, r4, r5, lr}
   118e4:	mov	r4, r0
   118e8:	ldr	r3, [pc, #112]	; 11960 <main@@Base+0xd528>
   118ec:	add	r3, pc, r3
   118f0:	ldr	r5, [r3]
   118f4:	bl	11144 <main@@Base+0xcd0c>
   118f8:	cmp	r4, #0
   118fc:	beq	1192c <main@@Base+0xd4f4>
   11900:	ldr	r3, [r4]
   11904:	cmp	r3, #0
   11908:	beq	11918 <main@@Base+0xd4e0>
   1190c:	ldr	r3, [r3]
   11910:	cmp	r0, r3
   11914:	beq	11954 <main@@Base+0xd51c>
   11918:	mov	r1, r0
   1191c:	mov	r0, r4
   11920:	bl	3fcc <g_type_check_instance_is_a@plt>
   11924:	cmp	r0, #0
   11928:	bne	11954 <main@@Base+0xd51c>
   1192c:	ldr	r1, [pc, #48]	; 11964 <main@@Base+0xd52c>
   11930:	ldr	r0, [pc, #48]	; 11968 <main@@Base+0xd530>
   11934:	ldr	r2, [pc, #48]	; 1196c <main@@Base+0xd534>
   11938:	add	r1, pc, r1
   1193c:	add	r0, pc, r0
   11940:	add	r1, r1, #236	; 0xec
   11944:	add	r2, pc, r2
   11948:	bl	3870 <g_return_if_fail_warning@plt>
   1194c:	movw	r0, #65535	; 0xffff
   11950:	pop	{r3, r4, r5, pc}
   11954:	add	r4, r4, r5
   11958:	ldrh	r0, [r4, #20]
   1195c:	pop	{r3, r4, r5, pc}
   11960:	andeq	sp, r2, r4, lsr r7
   11964:	strdeq	r5, [r1], -r4
   11968:	andeq	r3, r1, r0, asr r5
   1196c:	andeq	r6, r1, r4, lsl r1
   11970:	ldr	r3, [pc, #120]	; 119f0 <main@@Base+0xd5b8>
   11974:	push	{r4, r5, r6, lr}
   11978:	add	r3, pc, r3
   1197c:	mov	r4, r0
   11980:	mov	r5, r1
   11984:	ldr	r6, [r3]
   11988:	bl	11144 <main@@Base+0xcd0c>
   1198c:	cmp	r4, #0
   11990:	beq	119c0 <main@@Base+0xd588>
   11994:	ldr	r3, [r4]
   11998:	cmp	r3, #0
   1199c:	beq	119ac <main@@Base+0xd574>
   119a0:	ldr	r3, [r3]
   119a4:	cmp	r0, r3
   119a8:	beq	119e4 <main@@Base+0xd5ac>
   119ac:	mov	r1, r0
   119b0:	mov	r0, r4
   119b4:	bl	3fcc <g_type_check_instance_is_a@plt>
   119b8:	cmp	r0, #0
   119bc:	bne	119e4 <main@@Base+0xd5ac>
   119c0:	ldr	r1, [pc, #44]	; 119f4 <main@@Base+0xd5bc>
   119c4:	ldr	r0, [pc, #44]	; 119f8 <main@@Base+0xd5c0>
   119c8:	ldr	r2, [pc, #44]	; 119fc <main@@Base+0xd5c4>
   119cc:	add	r1, pc, r1
   119d0:	add	r0, pc, r0
   119d4:	add	r1, r1, #260	; 0x104
   119d8:	add	r2, pc, r2
   119dc:	pop	{r4, r5, r6, lr}
   119e0:	b	3870 <g_return_if_fail_warning@plt>
   119e4:	add	r4, r4, r6
   119e8:	strh	r5, [r4, #8]
   119ec:	pop	{r4, r5, r6, pc}
   119f0:	andeq	sp, r2, r8, lsr #13
   119f4:	andeq	r5, r1, r0, ror #28
   119f8:			; <UNDEFINED> instruction: 0x000134bc
   119fc:	andeq	r6, r1, r0, lsl #1
   11a00:	ldr	r3, [pc, #120]	; 11a80 <main@@Base+0xd648>
   11a04:	push	{r4, r5, r6, lr}
   11a08:	add	r3, pc, r3
   11a0c:	mov	r4, r0
   11a10:	mov	r5, r1
   11a14:	ldr	r6, [r3]
   11a18:	bl	11144 <main@@Base+0xcd0c>
   11a1c:	cmp	r4, #0
   11a20:	beq	11a50 <main@@Base+0xd618>
   11a24:	ldr	r3, [r4]
   11a28:	cmp	r3, #0
   11a2c:	beq	11a3c <main@@Base+0xd604>
   11a30:	ldr	r3, [r3]
   11a34:	cmp	r0, r3
   11a38:	beq	11a74 <main@@Base+0xd63c>
   11a3c:	mov	r1, r0
   11a40:	mov	r0, r4
   11a44:	bl	3fcc <g_type_check_instance_is_a@plt>
   11a48:	cmp	r0, #0
   11a4c:	bne	11a74 <main@@Base+0xd63c>
   11a50:	ldr	r1, [pc, #44]	; 11a84 <main@@Base+0xd64c>
   11a54:	ldr	r0, [pc, #44]	; 11a88 <main@@Base+0xd650>
   11a58:	ldr	r2, [pc, #44]	; 11a8c <main@@Base+0xd654>
   11a5c:	add	r1, pc, r1
   11a60:	add	r0, pc, r0
   11a64:	add	r1, r1, #284	; 0x11c
   11a68:	add	r2, pc, r2
   11a6c:	pop	{r4, r5, r6, lr}
   11a70:	b	3870 <g_return_if_fail_warning@plt>
   11a74:	add	r4, r4, r6
   11a78:	strh	r5, [r4, #10]
   11a7c:	pop	{r4, r5, r6, pc}
   11a80:	andeq	sp, r2, r8, lsl r6
   11a84:	ldrdeq	r5, [r1], -r0
   11a88:	andeq	r3, r1, ip, lsr #8
   11a8c:	strdeq	r5, [r1], -r0
   11a90:	ldr	r3, [pc, #120]	; 11b10 <main@@Base+0xd6d8>
   11a94:	push	{r4, r5, r6, lr}
   11a98:	add	r3, pc, r3
   11a9c:	mov	r4, r0
   11aa0:	mov	r5, r1
   11aa4:	ldr	r6, [r3]
   11aa8:	bl	11144 <main@@Base+0xcd0c>
   11aac:	cmp	r4, #0
   11ab0:	beq	11ae0 <main@@Base+0xd6a8>
   11ab4:	ldr	r3, [r4]
   11ab8:	cmp	r3, #0
   11abc:	beq	11acc <main@@Base+0xd694>
   11ac0:	ldr	r3, [r3]
   11ac4:	cmp	r0, r3
   11ac8:	beq	11b04 <main@@Base+0xd6cc>
   11acc:	mov	r1, r0
   11ad0:	mov	r0, r4
   11ad4:	bl	3fcc <g_type_check_instance_is_a@plt>
   11ad8:	cmp	r0, #0
   11adc:	bne	11b04 <main@@Base+0xd6cc>
   11ae0:	ldr	r1, [pc, #44]	; 11b14 <main@@Base+0xd6dc>
   11ae4:	ldr	r0, [pc, #44]	; 11b18 <main@@Base+0xd6e0>
   11ae8:	ldr	r2, [pc, #44]	; 11b1c <main@@Base+0xd6e4>
   11aec:	add	r1, pc, r1
   11af0:	add	r0, pc, r0
   11af4:	add	r1, r1, #308	; 0x134
   11af8:	add	r2, pc, r2
   11afc:	pop	{r4, r5, r6, lr}
   11b00:	b	3870 <g_return_if_fail_warning@plt>
   11b04:	add	r4, r4, r6
   11b08:	strh	r5, [r4, #12]
   11b0c:	pop	{r4, r5, r6, pc}
   11b10:	andeq	sp, r2, r8, lsl #11
   11b14:	andeq	r5, r1, r0, asr #26
   11b18:	muleq	r1, ip, r3
   11b1c:	andeq	r5, r1, r0, ror #30
   11b20:	ldr	r3, [pc, #120]	; 11ba0 <main@@Base+0xd768>
   11b24:	push	{r4, r5, r6, lr}
   11b28:	add	r3, pc, r3
   11b2c:	mov	r4, r0
   11b30:	mov	r5, r1
   11b34:	ldr	r6, [r3]
   11b38:	bl	11144 <main@@Base+0xcd0c>
   11b3c:	cmp	r4, #0
   11b40:	beq	11b70 <main@@Base+0xd738>
   11b44:	ldr	r3, [r4]
   11b48:	cmp	r3, #0
   11b4c:	beq	11b5c <main@@Base+0xd724>
   11b50:	ldr	r3, [r3]
   11b54:	cmp	r0, r3
   11b58:	beq	11b94 <main@@Base+0xd75c>
   11b5c:	mov	r1, r0
   11b60:	mov	r0, r4
   11b64:	bl	3fcc <g_type_check_instance_is_a@plt>
   11b68:	cmp	r0, #0
   11b6c:	bne	11b94 <main@@Base+0xd75c>
   11b70:	ldr	r1, [pc, #44]	; 11ba4 <main@@Base+0xd76c>
   11b74:	ldr	r0, [pc, #44]	; 11ba8 <main@@Base+0xd770>
   11b78:	ldr	r2, [pc, #44]	; 11bac <main@@Base+0xd774>
   11b7c:	add	r1, pc, r1
   11b80:	add	r0, pc, r0
   11b84:	add	r1, r1, #336	; 0x150
   11b88:	add	r2, pc, r2
   11b8c:	pop	{r4, r5, r6, lr}
   11b90:	b	3870 <g_return_if_fail_warning@plt>
   11b94:	add	r4, r4, r6
   11b98:	str	r5, [r4, #20]
   11b9c:	pop	{r4, r5, r6, pc}
   11ba0:	strdeq	sp, [r2], -r8
   11ba4:			; <UNDEFINED> instruction: 0x00015cb0
   11ba8:	andeq	r3, r1, ip, lsl #6
   11bac:	ldrdeq	r5, [r1], -r0
   11bb0:	ldr	ip, [pc, #508]	; 11db4 <main@@Base+0xd97c>
   11bb4:	push	{r4, r5, r6, r7, r8, lr}
   11bb8:	add	ip, pc, ip
   11bbc:	mov	r4, r0
   11bc0:	mov	r5, r1
   11bc4:	mov	r8, r2
   11bc8:	mov	r6, r3
   11bcc:	ldr	r7, [ip]
   11bd0:	bl	11144 <main@@Base+0xcd0c>
   11bd4:	cmp	r4, #0
   11bd8:	beq	11c08 <main@@Base+0xd7d0>
   11bdc:	ldr	r3, [r4]
   11be0:	cmp	r3, #0
   11be4:	beq	11bf4 <main@@Base+0xd7bc>
   11be8:	ldr	r3, [r3]
   11bec:	cmp	r0, r3
   11bf0:	beq	11c30 <main@@Base+0xd7f8>
   11bf4:	mov	r1, r0
   11bf8:	mov	r0, r4
   11bfc:	bl	3fcc <g_type_check_instance_is_a@plt>
   11c00:	cmp	r0, #0
   11c04:	bne	11c30 <main@@Base+0xd7f8>
   11c08:	ldr	r1, [pc, #424]	; 11db8 <main@@Base+0xd980>
   11c0c:	ldr	r0, [pc, #424]	; 11dbc <main@@Base+0xd984>
   11c10:	ldr	r2, [pc, #424]	; 11dc0 <main@@Base+0xd988>
   11c14:	add	r1, pc, r1
   11c18:	add	r0, pc, r0
   11c1c:	add	r1, r1, #360	; 0x168
   11c20:	add	r2, pc, r2
   11c24:	bl	3870 <g_return_if_fail_warning@plt>
   11c28:	mov	r0, #0
   11c2c:	pop	{r4, r5, r6, r7, r8, pc}
   11c30:	cmp	r5, #0
   11c34:	beq	11d8c <main@@Base+0xd954>
   11c38:	cmp	r6, #0
   11c3c:	beq	11c74 <main@@Base+0xd83c>
   11c40:	ldr	r3, [r6]
   11c44:	cmp	r3, #0
   11c48:	beq	11c74 <main@@Base+0xd83c>
   11c4c:	ldr	r1, [pc, #368]	; 11dc4 <main@@Base+0xd98c>
   11c50:	ldr	r0, [pc, #368]	; 11dc8 <main@@Base+0xd990>
   11c54:	ldr	r2, [pc, #368]	; 11dcc <main@@Base+0xd994>
   11c58:	add	r1, pc, r1
   11c5c:	add	r0, pc, r0
   11c60:	add	r1, r1, #360	; 0x168
   11c64:	add	r2, pc, r2
   11c68:	bl	3870 <g_return_if_fail_warning@plt>
   11c6c:	mov	r0, #0
   11c70:	pop	{r4, r5, r6, r7, r8, pc}
   11c74:	add	r7, r4, r7
   11c78:	mvn	r2, #0
   11c7c:	ldr	r3, [r7, #20]
   11c80:	strh	r2, [r7, #8]
   11c84:	cmp	r3, #0
   11c88:	strh	r2, [r7, #10]
   11c8c:	strh	r2, [r7, #12]
   11c90:	beq	11d14 <main@@Base+0xd8dc>
   11c94:	sub	r0, r3, #2
   11c98:	cmp	r0, #3
   11c9c:	addls	pc, pc, r0, lsl #2
   11ca0:	b	11d6c <main@@Base+0xd934>
   11ca4:	b	11cf4 <main@@Base+0xd8bc>
   11ca8:	b	11cf4 <main@@Base+0xd8bc>
   11cac:	b	11cd4 <main@@Base+0xd89c>
   11cb0:	b	11cb4 <main@@Base+0xd87c>
   11cb4:	mov	r0, r4
   11cb8:	mov	r1, r5
   11cbc:	mov	r2, r8
   11cc0:	mov	r3, r6
   11cc4:	bl	15200 <main@@Base+0x10dc8>
   11cc8:	adds	r0, r0, #0
   11ccc:	movne	r0, #1
   11cd0:	pop	{r4, r5, r6, r7, r8, pc}
   11cd4:	mov	r0, r4
   11cd8:	mov	r1, r5
   11cdc:	mov	r2, r8
   11ce0:	mov	r3, r6
   11ce4:	bl	13c00 <main@@Base+0xf7c8>
   11ce8:	adds	r0, r0, #0
   11cec:	movne	r0, #1
   11cf0:	pop	{r4, r5, r6, r7, r8, pc}
   11cf4:	mov	r0, r4
   11cf8:	mov	r1, r5
   11cfc:	mov	r2, r8
   11d00:	mov	r3, r6
   11d04:	bl	12cf0 <main@@Base+0xe8b8>
   11d08:	adds	r0, r0, #0
   11d0c:	movne	r0, #1
   11d10:	pop	{r4, r5, r6, r7, r8, pc}
   11d14:	mov	r0, r5
   11d18:	bl	13b94 <main@@Base+0xf75c>
   11d1c:	cmp	r0, #0
   11d20:	str	r0, [r7, #20]
   11d24:	beq	11d30 <main@@Base+0xd8f8>
   11d28:	mov	r3, r0
   11d2c:	b	11c94 <main@@Base+0xd85c>
   11d30:	mov	r0, r5
   11d34:	bl	148f0 <main@@Base+0x104b8>
   11d38:	cmp	r0, #0
   11d3c:	str	r0, [r7, #20]
   11d40:	bne	11d28 <main@@Base+0xd8f0>
   11d44:	mov	r0, r5
   11d48:	bl	12c40 <main@@Base+0xe808>
   11d4c:	cmp	r0, #0
   11d50:	str	r0, [r7, #20]
   11d54:	bne	11d28 <main@@Base+0xd8f0>
   11d58:	mov	r0, r5
   11d5c:	bl	157fc <main@@Base+0x113c4>
   11d60:	mov	r3, r0
   11d64:	str	r0, [r7, #20]
   11d68:	b	11c94 <main@@Base+0xd85c>
   11d6c:	mov	r0, r4
   11d70:	mov	r1, r5
   11d74:	mov	r2, r8
   11d78:	mov	r3, r6
   11d7c:	bl	15804 <main@@Base+0x113cc>
   11d80:	adds	r0, r0, #0
   11d84:	movne	r0, #1
   11d88:	pop	{r4, r5, r6, r7, r8, pc}
   11d8c:	ldr	r1, [pc, #60]	; 11dd0 <main@@Base+0xd998>
   11d90:	ldr	r0, [pc, #60]	; 11dd4 <main@@Base+0xd99c>
   11d94:	ldr	r2, [pc, #60]	; 11dd8 <main@@Base+0xd9a0>
   11d98:	add	r1, pc, r1
   11d9c:	add	r0, pc, r0
   11da0:	add	r1, r1, #360	; 0x168
   11da4:	add	r2, pc, r2
   11da8:	bl	3870 <g_return_if_fail_warning@plt>
   11dac:	mov	r0, r5
   11db0:	pop	{r4, r5, r6, r7, r8, pc}
   11db4:	andeq	sp, r2, r8, ror #8
   11db8:	andeq	r5, r1, r8, lsl ip
   11dbc:	andeq	r3, r1, r4, ror r2
   11dc0:	andeq	r5, r1, r8, lsr lr
   11dc4:	ldrdeq	r5, [r1], -r4
   11dc8:	andeq	r3, r1, r0, lsr r2
   11dcc:	andeq	r5, r1, ip, lsl #4
   11dd0:	muleq	r1, r4, sl
   11dd4:	strdeq	r3, [r1], -r0
   11dd8:	andeq	r5, r1, r8, ror #25
   11ddc:	ldr	ip, [pc, #576]	; 12024 <main@@Base+0xdbec>
   11de0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11de4:	mov	r4, r0
   11de8:	ldr	r0, [pc, #568]	; 12028 <main@@Base+0xdbf0>
   11dec:	add	ip, pc, ip
   11df0:	ldr	lr, [pc, #564]	; 1202c <main@@Base+0xdbf4>
   11df4:	mov	r8, r2
   11df8:	sub	sp, sp, #24
   11dfc:	mov	r5, r1
   11e00:	ldr	r7, [ip, r0]
   11e04:	add	lr, pc, lr
   11e08:	mov	r6, r3
   11e0c:	mov	r1, ip
   11e10:	mov	r3, #0
   11e14:	ldr	r9, [lr]
   11e18:	ldr	r2, [r7]
   11e1c:	str	r3, [sp, #12]
   11e20:	str	r3, [sp, #16]
   11e24:	str	r2, [sp, #20]
   11e28:	bl	11144 <main@@Base+0xcd0c>
   11e2c:	cmp	r4, #0
   11e30:	beq	11e60 <main@@Base+0xda28>
   11e34:	ldr	r3, [r4]
   11e38:	cmp	r3, #0
   11e3c:	beq	11e4c <main@@Base+0xda14>
   11e40:	ldr	r3, [r3]
   11e44:	cmp	r0, r3
   11e48:	beq	11eac <main@@Base+0xda74>
   11e4c:	mov	r1, r0
   11e50:	mov	r0, r4
   11e54:	bl	3fcc <g_type_check_instance_is_a@plt>
   11e58:	cmp	r0, #0
   11e5c:	bne	11eac <main@@Base+0xda74>
   11e60:	ldr	r1, [pc, #456]	; 12030 <main@@Base+0xdbf8>
   11e64:	ldr	r0, [pc, #456]	; 12034 <main@@Base+0xdbfc>
   11e68:	ldr	r2, [pc, #456]	; 12038 <main@@Base+0xdc00>
   11e6c:	add	r1, pc, r1
   11e70:	add	r0, pc, r0
   11e74:	add	r1, r1, #384	; 0x180
   11e78:	add	r2, pc, r2
   11e7c:	bl	3870 <g_return_if_fail_warning@plt>
   11e80:	mov	sl, #0
   11e84:	mov	r4, #0
   11e88:	mov	r0, sl
   11e8c:	bl	3eac <g_free@plt>
   11e90:	ldr	r2, [sp, #20]
   11e94:	ldr	r3, [r7]
   11e98:	mov	r0, r4
   11e9c:	cmp	r2, r3
   11ea0:	bne	11fc8 <main@@Base+0xdb90>
   11ea4:	add	sp, sp, #24
   11ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11eac:	bl	4260 <g_file_get_type@plt>
   11eb0:	cmp	r5, #0
   11eb4:	mov	r1, r0
   11eb8:	beq	11ee4 <main@@Base+0xdaac>
   11ebc:	ldr	r3, [r5]
   11ec0:	cmp	r3, #0
   11ec4:	beq	11ed4 <main@@Base+0xda9c>
   11ec8:	ldr	r3, [r3]
   11ecc:	cmp	r1, r3
   11ed0:	beq	11f08 <main@@Base+0xdad0>
   11ed4:	mov	r0, r5
   11ed8:	bl	3fcc <g_type_check_instance_is_a@plt>
   11edc:	cmp	r0, #0
   11ee0:	bne	11f08 <main@@Base+0xdad0>
   11ee4:	ldr	r1, [pc, #336]	; 1203c <main@@Base+0xdc04>
   11ee8:	ldr	r0, [pc, #336]	; 12040 <main@@Base+0xdc08>
   11eec:	ldr	r2, [pc, #336]	; 12044 <main@@Base+0xdc0c>
   11ef0:	add	r1, pc, r1
   11ef4:	add	r0, pc, r0
   11ef8:	add	r1, r1, #384	; 0x180
   11efc:	add	r2, pc, r2
   11f00:	bl	3870 <g_return_if_fail_warning@plt>
   11f04:	b	11e80 <main@@Base+0xda48>
   11f08:	cmp	r6, #0
   11f0c:	beq	11f40 <main@@Base+0xdb08>
   11f10:	ldr	r3, [r6]
   11f14:	cmp	r3, #0
   11f18:	beq	11f40 <main@@Base+0xdb08>
   11f1c:	ldr	r1, [pc, #292]	; 12048 <main@@Base+0xdc10>
   11f20:	ldr	r0, [pc, #292]	; 1204c <main@@Base+0xdc14>
   11f24:	ldr	r2, [pc, #292]	; 12050 <main@@Base+0xdc18>
   11f28:	add	r1, pc, r1
   11f2c:	add	r0, pc, r0
   11f30:	add	r1, r1, #384	; 0x180
   11f34:	add	r2, pc, r2
   11f38:	bl	3870 <g_return_if_fail_warning@plt>
   11f3c:	b	11e80 <main@@Base+0xda48>
   11f40:	mov	r0, r5
   11f44:	bl	3f78 <g_file_get_basename@plt>
   11f48:	ldr	r1, [pc, #260]	; 12054 <main@@Base+0xdc1c>
   11f4c:	mov	sl, r0
   11f50:	add	r1, pc, r1
   11f54:	bl	4278 <g_str_has_suffix@plt>
   11f58:	cmp	r0, #0
   11f5c:	mov	r1, #0
   11f60:	addne	r9, r4, r9
   11f64:	mov	r0, r5
   11f68:	movne	r3, #1
   11f6c:	add	r2, sp, #12
   11f70:	strne	r3, [r9, #16]
   11f74:	add	r3, sp, #16
   11f78:	str	r6, [sp, #4]
   11f7c:	str	r1, [sp]
   11f80:	bl	3e28 <g_file_load_contents@plt>
   11f84:	cmp	r0, #0
   11f88:	beq	11e84 <main@@Base+0xda4c>
   11f8c:	ldr	r0, [sp, #12]
   11f90:	ldr	r1, [sp, #16]
   11f94:	bl	3a98 <g_bytes_new_take@plt>
   11f98:	mov	r5, r0
   11f9c:	mov	r2, r8
   11fa0:	mov	r0, r4
   11fa4:	mov	r1, r5
   11fa8:	mov	r3, r6
   11fac:	bl	11bb0 <main@@Base+0xd778>
   11fb0:	cmp	r5, #0
   11fb4:	mov	r4, r0
   11fb8:	beq	11e88 <main@@Base+0xda50>
   11fbc:	mov	r0, r5
   11fc0:	bl	414c <g_bytes_unref@plt>
   11fc4:	b	11e88 <main@@Base+0xda50>
   11fc8:	bl	3e4c <__stack_chk_fail@plt>
   11fcc:	mov	r4, r0
   11fd0:	mov	sl, #0
   11fd4:	mov	r0, sl
   11fd8:	bl	3eac <g_free@plt>
   11fdc:	mov	r0, r4
   11fe0:	bl	42f0 <_Unwind_Resume@plt>
   11fe4:	b	11fcc <main@@Base+0xdb94>
   11fe8:	b	11fcc <main@@Base+0xdb94>
   11fec:	b	11fcc <main@@Base+0xdb94>
   11ff0:	b	11fcc <main@@Base+0xdb94>
   11ff4:	b	11fcc <main@@Base+0xdb94>
   11ff8:	b	11fcc <main@@Base+0xdb94>
   11ffc:	b	11fcc <main@@Base+0xdb94>
   12000:	mov	r4, r0
   12004:	b	11fd4 <main@@Base+0xdb9c>
   12008:	cmp	r5, #0
   1200c:	mov	r4, r0
   12010:	beq	11fd4 <main@@Base+0xdb9c>
   12014:	mov	r0, r5
   12018:	bl	414c <g_bytes_unref@plt>
   1201c:	b	11fd4 <main@@Base+0xdb9c>
   12020:	b	12000 <main@@Base+0xdbc8>
   12024:	muleq	r2, r4, sp
   12028:	andeq	r0, r0, r0, lsr r4
   1202c:	andeq	sp, r2, ip, lsl r2
   12030:	andeq	r5, r1, r0, asr #19
   12034:	andeq	r3, r1, ip, lsl r0
   12038:	andeq	r5, r1, r0, ror #23
   1203c:	andeq	r5, r1, ip, lsr r9
   12040:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   12044:	andeq	r5, r1, r0, lsr #23
   12048:	andeq	r5, r1, r4, lsl #18
   1204c:	andeq	r2, r1, r0, ror #30
   12050:	andeq	r4, r1, ip, lsr pc
   12054:	andeq	r3, r1, r4, asr #17
   12058:	ldr	r3, [pc, #12]	; 1206c <main@@Base+0xdc34>
   1205c:	add	r3, pc, r3
   12060:	ldr	r3, [r3]
   12064:	ldr	r0, [r0, r3]
   12068:	b	3db0 <g_hash_table_lookup@plt>
   1206c:	andeq	ip, r2, r4, asr #31
   12070:	ldr	r3, [pc, #12]	; 12084 <main@@Base+0xdc4c>
   12074:	add	r3, pc, r3
   12078:	ldr	r3, [r3]
   1207c:	ldr	r0, [r0, r3]
   12080:	bx	lr
   12084:	andeq	ip, r2, ip, lsr #31
   12088:	ldr	ip, [pc, #104]	; 120f8 <main@@Base+0xdcc0>
   1208c:	mov	r3, r1
   12090:	push	{r4, r5, r6, r7, lr}
   12094:	sub	sp, sp, #12
   12098:	add	ip, pc, ip
   1209c:	mov	r7, r0
   120a0:	str	r2, [sp]
   120a4:	mov	r4, r2
   120a8:	ldr	r0, [pc, #76]	; 120fc <main@@Base+0xdcc4>
   120ac:	mov	r5, r1
   120b0:	ldr	r2, [pc, #72]	; 12100 <main@@Base+0xdcc8>
   120b4:	mov	r1, #128	; 0x80
   120b8:	ldr	r6, [ip]
   120bc:	add	r0, pc, r0
   120c0:	add	r2, pc, r2
   120c4:	bl	3a38 <g_log@plt>
   120c8:	mov	r0, r5
   120cc:	ldr	r6, [r7, r6]
   120d0:	bl	3b7c <g_strdup@plt>
   120d4:	mov	r5, r0
   120d8:	mov	r0, r4
   120dc:	bl	3b7c <g_strdup@plt>
   120e0:	mov	r1, r5
   120e4:	mov	r2, r0
   120e8:	mov	r0, r6
   120ec:	add	sp, sp, #12
   120f0:	pop	{r4, r5, r6, r7, lr}
   120f4:	b	3bb8 <g_hash_table_insert@plt>
   120f8:	andeq	ip, r2, r8, lsl #31
   120fc:	ldrdeq	r2, [r1], -r0
   12100:	strdeq	r5, [r1], -r0
   12104:	ldr	r2, [pc, #60]	; 12148 <main@@Base+0xdd10>
   12108:	mov	r3, r1
   1210c:	push	{r4, r5, r6, lr}
   12110:	add	r2, pc, r2
   12114:	mov	r6, r0
   12118:	ldr	r0, [pc, #44]	; 1214c <main@@Base+0xdd14>
   1211c:	ldr	r5, [r2]
   12120:	mov	r4, r1
   12124:	ldr	r2, [pc, #36]	; 12150 <main@@Base+0xdd18>
   12128:	add	r0, pc, r0
   1212c:	mov	r1, #128	; 0x80
   12130:	add	r2, pc, r2
   12134:	bl	3a38 <g_log@plt>
   12138:	mov	r1, r4
   1213c:	ldr	r0, [r6, r5]
   12140:	pop	{r4, r5, r6, lr}
   12144:	b	4080 <g_hash_table_remove@plt>
   12148:	andeq	ip, r2, r0, lsl pc
   1214c:	andeq	r2, r1, r4, ror #26
   12150:	muleq	r1, r8, r9
   12154:	cmp	r0, #1
   12158:	beq	12194 <main@@Base+0xdd5c>
   1215c:	cmp	r0, #2
   12160:	beq	121a0 <main@@Base+0xdd68>
   12164:	cmp	r0, #3
   12168:	beq	121ac <main@@Base+0xdd74>
   1216c:	cmp	r0, #4
   12170:	beq	12188 <main@@Base+0xdd50>
   12174:	cmp	r0, #5
   12178:	bne	121b8 <main@@Base+0xdd80>
   1217c:	ldr	r0, [pc, #60]	; 121c0 <main@@Base+0xdd88>
   12180:	add	r0, pc, r0
   12184:	bx	lr
   12188:	ldr	r0, [pc, #52]	; 121c4 <main@@Base+0xdd8c>
   1218c:	add	r0, pc, r0
   12190:	bx	lr
   12194:	ldr	r0, [pc, #44]	; 121c8 <main@@Base+0xdd90>
   12198:	add	r0, pc, r0
   1219c:	bx	lr
   121a0:	ldr	r0, [pc, #36]	; 121cc <main@@Base+0xdd94>
   121a4:	add	r0, pc, r0
   121a8:	bx	lr
   121ac:	ldr	r0, [pc, #28]	; 121d0 <main@@Base+0xdd98>
   121b0:	add	r0, pc, r0
   121b4:	bx	lr
   121b8:	mov	r0, #0
   121bc:	bx	lr
   121c0:	andeq	r5, r1, r8, ror #18
   121c4:	andeq	r5, r1, r4, asr r9
   121c8:	andeq	r5, r1, r8, asr r9
   121cc:	andeq	r5, r1, r0, asr r9
   121d0:	andeq	r5, r1, r8, asr #18
   121d4:	ldr	r3, [pc, #532]	; 123f0 <main@@Base+0xdfb8>
   121d8:	push	{r4, r5, r6, r7, r8, lr}
   121dc:	add	r3, pc, r3
   121e0:	sub	sp, sp, #8
   121e4:	mov	r4, r0
   121e8:	mov	r6, r1
   121ec:	ldr	r7, [r3]
   121f0:	bl	11144 <main@@Base+0xcd0c>
   121f4:	cmp	r4, #0
   121f8:	beq	12228 <main@@Base+0xddf0>
   121fc:	ldr	r3, [r4]
   12200:	cmp	r3, #0
   12204:	beq	12214 <main@@Base+0xdddc>
   12208:	ldr	r3, [r3]
   1220c:	cmp	r0, r3
   12210:	beq	12254 <main@@Base+0xde1c>
   12214:	mov	r1, r0
   12218:	mov	r0, r4
   1221c:	bl	3fcc <g_type_check_instance_is_a@plt>
   12220:	cmp	r0, #0
   12224:	bne	12254 <main@@Base+0xde1c>
   12228:	ldr	r1, [pc, #452]	; 123f4 <main@@Base+0xdfbc>
   1222c:	ldr	r0, [pc, #452]	; 123f8 <main@@Base+0xdfc0>
   12230:	ldr	r2, [pc, #452]	; 123fc <main@@Base+0xdfc4>
   12234:	add	r1, pc, r1
   12238:	add	r0, pc, r0
   1223c:	add	r1, r1, #408	; 0x198
   12240:	add	r2, pc, r2
   12244:	bl	3870 <g_return_if_fail_warning@plt>
   12248:	mov	r0, #0
   1224c:	add	sp, sp, #8
   12250:	pop	{r4, r5, r6, r7, r8, pc}
   12254:	cmp	r6, #0
   12258:	beq	12294 <main@@Base+0xde5c>
   1225c:	ldr	r3, [r6]
   12260:	cmp	r3, #0
   12264:	beq	12294 <main@@Base+0xde5c>
   12268:	ldr	r1, [pc, #400]	; 12400 <main@@Base+0xdfc8>
   1226c:	ldr	r0, [pc, #400]	; 12404 <main@@Base+0xdfcc>
   12270:	ldr	r2, [pc, #400]	; 12408 <main@@Base+0xdfd0>
   12274:	add	r1, pc, r1
   12278:	add	r0, pc, r0
   1227c:	add	r1, r1, #408	; 0x198
   12280:	add	r2, pc, r2
   12284:	bl	3870 <g_return_if_fail_warning@plt>
   12288:	mov	r0, #0
   1228c:	add	sp, sp, #8
   12290:	pop	{r4, r5, r6, r7, r8, pc}
   12294:	add	r7, r4, r7
   12298:	ldr	r5, [r7, #4]
   1229c:	cmp	r5, #0
   122a0:	beq	123d0 <main@@Base+0xdf98>
   122a4:	ldr	r3, [pc, #352]	; 1240c <main@@Base+0xdfd4>
   122a8:	ldr	r5, [pc, r3]
   122ac:	add	r5, r4, r5
   122b0:	ldr	r3, [r5, #4]
   122b4:	ldr	r3, [r3, #4]
   122b8:	cmp	r3, #1
   122bc:	bls	12314 <main@@Base+0xdedc>
   122c0:	ldr	r2, [r5, #20]
   122c4:	cmp	r2, #3
   122c8:	beq	12314 <main@@Base+0xdedc>
   122cc:	cmp	r2, #4
   122d0:	bne	122dc <main@@Base+0xdea4>
   122d4:	cmp	r3, #2
   122d8:	beq	123b4 <main@@Base+0xdf7c>
   122dc:	bl	40a4 <fwupd_error_quark@plt>
   122e0:	ldr	r3, [r5, #4]
   122e4:	mov	r8, r0
   122e8:	ldr	r0, [r5, #20]
   122ec:	ldr	r5, [r3, #4]
   122f0:	bl	12154 <main@@Base+0xdd1c>
   122f4:	ldr	r3, [pc, #276]	; 12410 <main@@Base+0xdfd8>
   122f8:	mov	r1, r8
   122fc:	mov	r2, #0
   12300:	add	r3, pc, r3
   12304:	str	r5, [sp]
   12308:	str	r0, [sp, #4]
   1230c:	mov	r0, r6
   12310:	bl	4350 <g_set_error@plt>
   12314:	ldr	r3, [r7, #20]
   12318:	cmp	r3, #1
   1231c:	beq	12378 <main@@Base+0xdf40>
   12320:	sub	r2, r3, #2
   12324:	cmp	r2, #1
   12328:	bls	1238c <main@@Base+0xdf54>
   1232c:	cmp	r3, #4
   12330:	beq	123a0 <main@@Base+0xdf68>
   12334:	cmp	r3, #5
   12338:	bne	12350 <main@@Base+0xdf18>
   1233c:	mov	r0, r4
   12340:	mov	r1, r6
   12344:	add	sp, sp, #8
   12348:	pop	{r4, r5, r6, r7, r8, lr}
   1234c:	b	152d4 <main@@Base+0x10e9c>
   12350:	bl	40a4 <fwupd_error_quark@plt>
   12354:	ldr	ip, [r7, #20]
   12358:	ldr	r3, [pc, #180]	; 12414 <main@@Base+0xdfdc>
   1235c:	mov	r2, #0
   12360:	add	r3, pc, r3
   12364:	str	ip, [sp]
   12368:	mov	r1, r0
   1236c:	mov	r0, r6
   12370:	bl	4350 <g_set_error@plt>
   12374:	b	12248 <main@@Base+0xde10>
   12378:	mov	r0, r4
   1237c:	mov	r1, r6
   12380:	add	sp, sp, #8
   12384:	pop	{r4, r5, r6, r7, r8, lr}
   12388:	b	158b4 <main@@Base+0x1147c>
   1238c:	mov	r0, r4
   12390:	mov	r1, r6
   12394:	add	sp, sp, #8
   12398:	pop	{r4, r5, r6, r7, r8, lr}
   1239c:	b	13090 <main@@Base+0xec58>
   123a0:	mov	r0, r4
   123a4:	mov	r1, r6
   123a8:	add	sp, sp, #8
   123ac:	pop	{r4, r5, r6, r7, r8, lr}
   123b0:	b	146a8 <main@@Base+0x10270>
   123b4:	ldr	r1, [pc, #92]	; 12418 <main@@Base+0xdfe0>
   123b8:	mov	r0, r4
   123bc:	add	r1, pc, r1
   123c0:	bl	11340 <main@@Base+0xcf08>
   123c4:	cmp	r0, #0
   123c8:	bne	12314 <main@@Base+0xdedc>
   123cc:	b	122dc <main@@Base+0xdea4>
   123d0:	bl	40a4 <fwupd_error_quark@plt>
   123d4:	ldr	r3, [pc, #64]	; 1241c <main@@Base+0xdfe4>
   123d8:	mov	r2, r5
   123dc:	add	r3, pc, r3
   123e0:	mov	r1, r0
   123e4:	mov	r0, r6
   123e8:	bl	3ae0 <g_set_error_literal@plt>
   123ec:	b	12248 <main@@Base+0xde10>
   123f0:	andeq	ip, r2, r4, asr #28
   123f4:	strdeq	r5, [r1], -r8
   123f8:	andeq	r2, r1, r4, asr ip
   123fc:	andeq	r5, r1, r8, lsl r8
   12400:			; <UNDEFINED> instruction: 0x000155b8
   12404:	andeq	r2, r1, r4, lsl ip
   12408:	strdeq	r4, [r1], -r0
   1240c:	andeq	ip, r2, r8, ror sp
   12410:	andeq	r5, r1, r8, lsl r8
   12414:	strdeq	r5, [r1], -r0
   12418:	andeq	r5, r1, r8, lsl #15
   1241c:	andeq	r5, r1, r4, lsr #14
   12420:	ldr	r3, [pc, #424]	; 125d0 <main@@Base+0xe198>
   12424:	push	{r4, r5, r6, r7, r8, lr}
   12428:	mov	r4, r0
   1242c:	ldr	r0, [pc, #416]	; 125d4 <main@@Base+0xe19c>
   12430:	add	r3, pc, r3
   12434:	sub	sp, sp, #32
   12438:	mov	r5, r1
   1243c:	mov	r6, r2
   12440:	mov	r2, #0
   12444:	ldr	r7, [r3, r0]
   12448:	str	r2, [sp, #24]
   1244c:	ldr	r3, [r7]
   12450:	str	r3, [sp, #28]
   12454:	bl	11144 <main@@Base+0xcd0c>
   12458:	cmp	r4, #0
   1245c:	beq	1248c <main@@Base+0xe054>
   12460:	ldr	r3, [r4]
   12464:	cmp	r3, #0
   12468:	beq	12478 <main@@Base+0xe040>
   1246c:	ldr	r3, [r3]
   12470:	cmp	r0, r3
   12474:	beq	124cc <main@@Base+0xe094>
   12478:	mov	r1, r0
   1247c:	mov	r0, r4
   12480:	bl	3fcc <g_type_check_instance_is_a@plt>
   12484:	cmp	r0, #0
   12488:	bne	124cc <main@@Base+0xe094>
   1248c:	ldr	r1, [pc, #324]	; 125d8 <main@@Base+0xe1a0>
   12490:	ldr	r0, [pc, #324]	; 125dc <main@@Base+0xe1a4>
   12494:	ldr	r2, [pc, #324]	; 125e0 <main@@Base+0xe1a8>
   12498:	add	r1, pc, r1
   1249c:	add	r0, pc, r0
   124a0:	add	r1, r1, #432	; 0x1b0
   124a4:	add	r2, pc, r2
   124a8:	bl	3870 <g_return_if_fail_warning@plt>
   124ac:	mov	r4, #0
   124b0:	ldr	r2, [sp, #28]
   124b4:	mov	r0, r4
   124b8:	ldr	r3, [r7]
   124bc:	cmp	r2, r3
   124c0:	bne	125b8 <main@@Base+0xe180>
   124c4:	add	sp, sp, #32
   124c8:	pop	{r4, r5, r6, r7, r8, pc}
   124cc:	bl	4260 <g_file_get_type@plt>
   124d0:	cmp	r5, #0
   124d4:	mov	r1, r0
   124d8:	beq	12504 <main@@Base+0xe0cc>
   124dc:	ldr	r3, [r5]
   124e0:	cmp	r3, #0
   124e4:	beq	124f4 <main@@Base+0xe0bc>
   124e8:	ldr	r3, [r3]
   124ec:	cmp	r1, r3
   124f0:	beq	12528 <main@@Base+0xe0f0>
   124f4:	mov	r0, r5
   124f8:	bl	3fcc <g_type_check_instance_is_a@plt>
   124fc:	cmp	r0, #0
   12500:	bne	12528 <main@@Base+0xe0f0>
   12504:	ldr	r1, [pc, #216]	; 125e4 <main@@Base+0xe1ac>
   12508:	ldr	r0, [pc, #216]	; 125e8 <main@@Base+0xe1b0>
   1250c:	ldr	r2, [pc, #216]	; 125ec <main@@Base+0xe1b4>
   12510:	add	r1, pc, r1
   12514:	add	r0, pc, r0
   12518:	add	r1, r1, #432	; 0x1b0
   1251c:	add	r2, pc, r2
   12520:	bl	3870 <g_return_if_fail_warning@plt>
   12524:	b	124ac <main@@Base+0xe074>
   12528:	cmp	r6, #0
   1252c:	beq	12560 <main@@Base+0xe128>
   12530:	ldr	r3, [r6]
   12534:	cmp	r3, #0
   12538:	beq	12560 <main@@Base+0xe128>
   1253c:	ldr	r1, [pc, #172]	; 125f0 <main@@Base+0xe1b8>
   12540:	ldr	r0, [pc, #172]	; 125f4 <main@@Base+0xe1bc>
   12544:	ldr	r2, [pc, #172]	; 125f8 <main@@Base+0xe1c0>
   12548:	add	r1, pc, r1
   1254c:	add	r0, pc, r0
   12550:	add	r1, r1, #432	; 0x1b0
   12554:	add	r2, pc, r2
   12558:	bl	3870 <g_return_if_fail_warning@plt>
   1255c:	b	124ac <main@@Base+0xe074>
   12560:	mov	r0, r4
   12564:	mov	r1, r6
   12568:	bl	121d4 <main@@Base+0xdd9c>
   1256c:	subs	r8, r0, #0
   12570:	beq	124ac <main@@Base+0xe074>
   12574:	add	r1, sp, #24
   12578:	bl	4320 <g_bytes_get_data@plt>
   1257c:	mov	ip, #0
   12580:	mov	r1, r0
   12584:	ldr	r2, [sp, #24]
   12588:	mov	r0, r5
   1258c:	str	r6, [sp, #16]
   12590:	mov	r3, ip
   12594:	str	ip, [sp]
   12598:	str	ip, [sp, #4]
   1259c:	str	ip, [sp, #8]
   125a0:	str	ip, [sp, #12]
   125a4:	bl	393c <g_file_replace_contents@plt>
   125a8:	mov	r4, r0
   125ac:	mov	r0, r8
   125b0:	bl	414c <g_bytes_unref@plt>
   125b4:	b	124b0 <main@@Base+0xe078>
   125b8:	bl	3e4c <__stack_chk_fail@plt>
   125bc:	mov	r4, r0
   125c0:	mov	r0, r8
   125c4:	bl	414c <g_bytes_unref@plt>
   125c8:	mov	r0, r4
   125cc:	bl	42f0 <_Unwind_Resume@plt>
   125d0:	andeq	ip, r2, r0, asr r7
   125d4:	andeq	r0, r0, r0, lsr r4
   125d8:	muleq	r1, r4, r3
   125dc:	strdeq	r2, [r1], -r0
   125e0:			; <UNDEFINED> instruction: 0x000155b4
   125e4:	andeq	r5, r1, ip, lsl r3
   125e8:	andeq	r2, r1, r8, ror r9
   125ec:	andeq	r5, r1, r0, lsl #11
   125f0:	andeq	r5, r1, r4, ror #5
   125f4:	andeq	r2, r1, r0, asr #18
   125f8:	andeq	r4, r1, ip, lsl r9
   125fc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12600:	mov	r4, r0
   12604:	ldr	r3, [pc, #620]	; 12878 <main@@Base+0xe440>
   12608:	add	r3, pc, r3
   1260c:	ldr	r7, [r3]
   12610:	bl	11144 <main@@Base+0xcd0c>
   12614:	cmp	r4, #0
   12618:	beq	12648 <main@@Base+0xe210>
   1261c:	ldr	r3, [r4]
   12620:	cmp	r3, #0
   12624:	beq	12634 <main@@Base+0xe1fc>
   12628:	ldr	r3, [r3]
   1262c:	cmp	r0, r3
   12630:	beq	12680 <main@@Base+0xe248>
   12634:	mov	r1, r0
   12638:	mov	r0, r4
   1263c:	bl	3fcc <g_type_check_instance_is_a@plt>
   12640:	cmp	r0, #0
   12644:	bne	12680 <main@@Base+0xe248>
   12648:	ldr	r1, [pc, #556]	; 1287c <main@@Base+0xe444>
   1264c:	ldr	r0, [pc, #556]	; 12880 <main@@Base+0xe448>
   12650:	ldr	r2, [pc, #556]	; 12884 <main@@Base+0xe44c>
   12654:	add	r1, pc, r1
   12658:	add	r0, pc, r0
   1265c:	add	r1, r1, #456	; 0x1c8
   12660:	add	r2, pc, r2
   12664:	bl	3870 <g_return_if_fail_warning@plt>
   12668:	mov	sl, #0
   1266c:	mov	r4, sl
   12670:	mov	r0, sl
   12674:	bl	3eac <g_free@plt>
   12678:	mov	r0, r4
   1267c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12680:	add	r6, r4, r7
   12684:	mov	r1, #2
   12688:	ldrh	r0, [r6, #12]
   1268c:	bl	3c60 <as_utils_version_from_uint16@plt>
   12690:	mov	sl, r0
   12694:	ldr	r0, [pc, #492]	; 12888 <main@@Base+0xe450>
   12698:	add	r0, pc, r0
   1269c:	bl	3990 <g_string_new@plt>
   126a0:	ldr	r1, [pc, #484]	; 1288c <main@@Base+0xe454>
   126a4:	mov	r5, r0
   126a8:	ldrh	r2, [r6, #8]
   126ac:	add	r1, pc, r1
   126b0:	bl	4344 <g_string_append_printf@plt>
   126b4:	ldr	r1, [pc, #468]	; 12890 <main@@Base+0xe458>
   126b8:	mov	r0, r5
   126bc:	ldrh	r2, [r6, #10]
   126c0:	add	r1, pc, r1
   126c4:	bl	4344 <g_string_append_printf@plt>
   126c8:	ldr	r1, [pc, #452]	; 12894 <main@@Base+0xe45c>
   126cc:	mov	r0, r5
   126d0:	mov	r3, sl
   126d4:	ldrh	r2, [r6, #12]
   126d8:	add	r1, pc, r1
   126dc:	bl	4344 <g_string_append_printf@plt>
   126e0:	ldr	r0, [r6, #20]
   126e4:	bl	12154 <main@@Base+0xdd1c>
   126e8:	ldr	r1, [pc, #424]	; 12898 <main@@Base+0xe460>
   126ec:	mov	r2, r0
   126f0:	ldr	r3, [r6, #20]
   126f4:	mov	r0, r5
   126f8:	add	r1, pc, r1
   126fc:	bl	4344 <g_string_append_printf@plt>
   12700:	ldr	r0, [r6, #16]
   12704:	bl	bb50 <main@@Base+0x7718>
   12708:	ldr	r1, [pc, #396]	; 1289c <main@@Base+0xe464>
   1270c:	mov	r2, r0
   12710:	mov	r0, r5
   12714:	add	r1, pc, r1
   12718:	bl	4344 <g_string_append_printf@plt>
   1271c:	ldr	r0, [r4, r7]
   12720:	bl	3b04 <g_hash_table_get_keys@plt>
   12724:	subs	r9, r0, #0
   12728:	beq	12768 <main@@Base+0xe330>
   1272c:	ldr	r8, [pc, #364]	; 128a0 <main@@Base+0xe468>
   12730:	mov	r4, r9
   12734:	add	r8, pc, r8
   12738:	ldr	r7, [r4]
   1273c:	ldr	r0, [r6]
   12740:	mov	r1, r7
   12744:	bl	3db0 <g_hash_table_lookup@plt>
   12748:	mov	r3, r0
   1274c:	mov	r1, r8
   12750:	mov	r0, r5
   12754:	mov	r2, r7
   12758:	bl	4344 <g_string_append_printf@plt>
   1275c:	ldr	r4, [r4, #4]
   12760:	cmp	r4, #0
   12764:	bne	12738 <main@@Base+0xe300>
   12768:	ldr	r2, [r6, #4]
   1276c:	ldr	r3, [r2, #4]
   12770:	cmp	r3, #0
   12774:	beq	127d8 <main@@Base+0xe3a0>
   12778:	ldr	r7, [pc, #292]	; 128a4 <main@@Base+0xe46c>
   1277c:	mov	r4, #0
   12780:	ldr	r8, [pc, #288]	; 128a8 <main@@Base+0xe470>
   12784:	add	r7, pc, r7
   12788:	add	r8, pc, r8
   1278c:	ldr	r3, [r2]
   12790:	ldr	r0, [r3, r4, lsl #2]
   12794:	bl	16130 <main@@Base+0x11cf8>
   12798:	mov	fp, r0
   1279c:	mov	r1, r7
   127a0:	mov	r0, r5
   127a4:	mov	r2, r4
   127a8:	bl	4344 <g_string_append_printf@plt>
   127ac:	mov	r0, r5
   127b0:	mov	r1, r8
   127b4:	mov	r2, fp
   127b8:	bl	4344 <g_string_append_printf@plt>
   127bc:	mov	r0, fp
   127c0:	bl	3eac <g_free@plt>
   127c4:	ldr	r2, [r6, #4]
   127c8:	add	r4, r4, #1
   127cc:	ldr	r3, [r2, #4]
   127d0:	cmp	r3, r4
   127d4:	bhi	1278c <main@@Base+0xe354>
   127d8:	ldr	r1, [r5, #4]
   127dc:	mov	r0, r5
   127e0:	sub	r1, r1, #1
   127e4:	bl	3960 <g_string_truncate@plt>
   127e8:	mov	r0, r5
   127ec:	mov	r1, #0
   127f0:	bl	40bc <g_string_free@plt>
   127f4:	cmp	r9, #0
   127f8:	mov	r4, r0
   127fc:	beq	12670 <main@@Base+0xe238>
   12800:	mov	r0, r9
   12804:	bl	3b10 <g_list_free@plt>
   12808:	b	12670 <main@@Base+0xe238>
   1280c:	mov	r4, r0
   12810:	mov	sl, #0
   12814:	mov	r0, sl
   12818:	bl	3eac <g_free@plt>
   1281c:	mov	r0, r4
   12820:	bl	42f0 <_Unwind_Resume@plt>
   12824:	mov	r4, r0
   12828:	b	12814 <main@@Base+0xe3dc>
   1282c:	mov	r4, r0
   12830:	cmp	r9, #0
   12834:	beq	12814 <main@@Base+0xe3dc>
   12838:	mov	r0, r9
   1283c:	bl	3b10 <g_list_free@plt>
   12840:	b	12814 <main@@Base+0xe3dc>
   12844:	mov	r4, r0
   12848:	mov	r0, fp
   1284c:	bl	3eac <g_free@plt>
   12850:	b	12830 <main@@Base+0xe3f8>
   12854:	mov	r4, r0
   12858:	mov	fp, #0
   1285c:	b	12848 <main@@Base+0xe410>
   12860:	mov	r4, r0
   12864:	b	12838 <main@@Base+0xe400>
   12868:	b	12824 <main@@Base+0xe3ec>
   1286c:	b	1280c <main@@Base+0xe3d4>
   12870:	b	1280c <main@@Base+0xe3d4>
   12874:	b	1280c <main@@Base+0xe3d4>
   12878:	andeq	ip, r2, r8, lsl sl
   1287c:	ldrdeq	r5, [r1], -r8
   12880:	andeq	r2, r1, r4, lsr r8
   12884:	strdeq	r5, [r1], -r8
   12888:	andeq	r2, r1, r8, ror #31
   1288c:	andeq	r5, r1, r8, asr #9
   12890:	andeq	r5, r1, ip, asr #9
   12894:	andeq	r5, r1, ip, asr #9
   12898:	andeq	r5, r1, r8, asr #9
   1289c:	andeq	r5, r1, r8, asr #9
   128a0:			; <UNDEFINED> instruction: 0x000154bc
   128a4:	andeq	r5, r1, r0, lsl #9
   128a8:	andeq	r3, r1, r0, lsl #25
   128ac:	ldr	r1, [pc, #156]	; 12950 <main@@Base+0xe518>
   128b0:	push	{r4, lr}
   128b4:	add	r1, pc, r1
   128b8:	mov	r4, r0
   128bc:	bl	441c <g_strcmp0@plt>
   128c0:	cmp	r0, #0
   128c4:	bne	128d0 <main@@Base+0xe498>
   128c8:	mov	r0, #1
   128cc:	pop	{r4, pc}
   128d0:	ldr	r1, [pc, #124]	; 12954 <main@@Base+0xe51c>
   128d4:	mov	r0, r4
   128d8:	add	r1, pc, r1
   128dc:	bl	441c <g_strcmp0@plt>
   128e0:	cmp	r0, #0
   128e4:	bne	128f0 <main@@Base+0xe4b8>
   128e8:	mov	r0, #2
   128ec:	pop	{r4, pc}
   128f0:	ldr	r1, [pc, #96]	; 12958 <main@@Base+0xe520>
   128f4:	mov	r0, r4
   128f8:	add	r1, pc, r1
   128fc:	bl	441c <g_strcmp0@plt>
   12900:	cmp	r0, #0
   12904:	bne	12910 <main@@Base+0xe4d8>
   12908:	mov	r0, #3
   1290c:	pop	{r4, pc}
   12910:	ldr	r1, [pc, #68]	; 1295c <main@@Base+0xe524>
   12914:	mov	r0, r4
   12918:	add	r1, pc, r1
   1291c:	bl	441c <g_strcmp0@plt>
   12920:	cmp	r0, #0
   12924:	bne	12930 <main@@Base+0xe4f8>
   12928:	mov	r0, #4
   1292c:	pop	{r4, pc}
   12930:	ldr	r1, [pc, #40]	; 12960 <main@@Base+0xe528>
   12934:	mov	r0, r4
   12938:	add	r1, pc, r1
   1293c:	bl	441c <g_strcmp0@plt>
   12940:	cmp	r0, #0
   12944:	moveq	r0, #5
   12948:	movne	r0, #0
   1294c:	pop	{r4, pc}
   12950:	andeq	r5, r1, ip, lsr r2
   12954:	andeq	r5, r1, ip, lsl r2
   12958:	andeq	r5, r1, r0, lsl #4
   1295c:	andeq	r5, r1, r8, asr #3
   12960:			; <UNDEFINED> instruction: 0x000151b0
   12964:	push	{r3, r4, r5, lr}
   12968:	mov	r4, r0
   1296c:	ldr	r3, [pc, #112]	; 129e4 <main@@Base+0xe5ac>
   12970:	add	r3, pc, r3
   12974:	ldr	r5, [r3]
   12978:	bl	11144 <main@@Base+0xcd0c>
   1297c:	cmp	r4, #0
   12980:	beq	129b0 <main@@Base+0xe578>
   12984:	ldr	r3, [r4]
   12988:	cmp	r3, #0
   1298c:	beq	1299c <main@@Base+0xe564>
   12990:	ldr	r3, [r3]
   12994:	cmp	r0, r3
   12998:	beq	129d8 <main@@Base+0xe5a0>
   1299c:	mov	r1, r0
   129a0:	mov	r0, r4
   129a4:	bl	3fcc <g_type_check_instance_is_a@plt>
   129a8:	cmp	r0, #0
   129ac:	bne	129d8 <main@@Base+0xe5a0>
   129b0:	ldr	r1, [pc, #48]	; 129e8 <main@@Base+0xe5b0>
   129b4:	ldr	r0, [pc, #48]	; 129ec <main@@Base+0xe5b4>
   129b8:	ldr	r2, [pc, #48]	; 129f0 <main@@Base+0xe5b8>
   129bc:	add	r1, pc, r1
   129c0:	add	r0, pc, r0
   129c4:	add	r1, r1, #480	; 0x1e0
   129c8:	add	r2, pc, r2
   129cc:	bl	3870 <g_return_if_fail_warning@plt>
   129d0:	mov	r0, #0
   129d4:	pop	{r3, r4, r5, pc}
   129d8:	add	r4, r4, r5
   129dc:	ldr	r0, [r4, #16]
   129e0:	pop	{r3, r4, r5, pc}
   129e4:			; <UNDEFINED> instruction: 0x0002c6b0
   129e8:	andeq	r4, r1, r0, ror lr
   129ec:	andeq	r2, r1, ip, asr #9
   129f0:	muleq	r1, r0, r0
   129f4:	ldr	r3, [pc, #120]	; 12a74 <main@@Base+0xe63c>
   129f8:	push	{r4, r5, r6, lr}
   129fc:	add	r3, pc, r3
   12a00:	mov	r4, r0
   12a04:	mov	r5, r1
   12a08:	ldr	r6, [r3]
   12a0c:	bl	11144 <main@@Base+0xcd0c>
   12a10:	cmp	r4, #0
   12a14:	beq	12a44 <main@@Base+0xe60c>
   12a18:	ldr	r3, [r4]
   12a1c:	cmp	r3, #0
   12a20:	beq	12a30 <main@@Base+0xe5f8>
   12a24:	ldr	r3, [r3]
   12a28:	cmp	r0, r3
   12a2c:	beq	12a68 <main@@Base+0xe630>
   12a30:	mov	r1, r0
   12a34:	mov	r0, r4
   12a38:	bl	3fcc <g_type_check_instance_is_a@plt>
   12a3c:	cmp	r0, #0
   12a40:	bne	12a68 <main@@Base+0xe630>
   12a44:	ldr	r1, [pc, #44]	; 12a78 <main@@Base+0xe640>
   12a48:	ldr	r0, [pc, #44]	; 12a7c <main@@Base+0xe644>
   12a4c:	ldr	r2, [pc, #44]	; 12a80 <main@@Base+0xe648>
   12a50:	add	r1, pc, r1
   12a54:	add	r0, pc, r0
   12a58:	add	r1, r1, #512	; 0x200
   12a5c:	add	r2, pc, r2
   12a60:	pop	{r4, r5, r6, lr}
   12a64:	b	3870 <g_return_if_fail_warning@plt>
   12a68:	add	r4, r4, r6
   12a6c:	str	r5, [r4, #16]
   12a70:	pop	{r4, r5, r6, pc}
   12a74:	andeq	ip, r2, r4, lsr #12
   12a78:	ldrdeq	r4, [r1], -ip
   12a7c:	andeq	r2, r1, r8, lsr r4
   12a80:	strdeq	r4, [r1], -ip
   12a84:	ldr	r3, [pc, #420]	; 12c30 <main@@Base+0xe7f8>
   12a88:	ldr	ip, [pc, #420]	; 12c34 <main@@Base+0xe7fc>
   12a8c:	add	r3, pc, r3
   12a90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a94:	mov	r4, r1
   12a98:	mov	r1, r2
   12a9c:	mov	r2, r3
   12aa0:	ldr	r6, [r2, ip]
   12aa4:	sub	sp, sp, #16
   12aa8:	mov	r3, #0
   12aac:	mov	r8, r0
   12ab0:	str	r3, [sp, #4]
   12ab4:	str	r3, [sp, #8]
   12ab8:	ldr	r3, [r6]
   12abc:	str	r3, [sp, #12]
   12ac0:	bl	1557c <main@@Base+0x11144>
   12ac4:	subs	r7, r0, #0
   12ac8:	beq	12c10 <main@@Base+0xe7d8>
   12acc:	add	r1, sp, #8
   12ad0:	bl	4320 <g_bytes_get_data@plt>
   12ad4:	mov	r9, r0
   12ad8:	add	r1, sp, #4
   12adc:	mov	r0, r4
   12ae0:	bl	4320 <g_bytes_get_data@plt>
   12ae4:	mov	sl, r0
   12ae8:	ldmib	sp, {r0, r3}
   12aec:	add	r0, r0, r3
   12af0:	add	r0, r0, #16
   12af4:	bl	4248 <g_malloc0@plt>
   12af8:	ldr	r5, [sp, #4]
   12afc:	mov	r1, sl
   12b00:	mov	r4, r0
   12b04:	mov	r2, r5
   12b08:	bl	40e0 <memcpy@plt>
   12b0c:	ldr	r2, [sp, #8]
   12b10:	mov	r1, r9
   12b14:	add	r0, r4, r5
   12b18:	add	r9, r2, r5
   12b1c:	bl	40e0 <memcpy@plt>
   12b20:	mov	r0, r8
   12b24:	add	r5, r4, r9
   12b28:	bl	11850 <main@@Base+0xd418>
   12b2c:	strh	r0, [r4, r9]
   12b30:	mov	r0, r8
   12b34:	bl	117c0 <main@@Base+0xd388>
   12b38:	strh	r0, [r5, #2]
   12b3c:	mov	r0, r8
   12b40:	bl	11730 <main@@Base+0xd2f8>
   12b44:	strh	r0, [r5, #4]
   12b48:	mov	r0, r8
   12b4c:	bl	118e0 <main@@Base+0xd4a8>
   12b50:	cmp	r0, #2
   12b54:	moveq	r0, #256	; 0x100
   12b58:	beq	12b6c <main@@Base+0xe734>
   12b5c:	cmp	r0, #3
   12b60:	movw	r3, #282	; 0x11a
   12b64:	moveq	r0, r3
   12b68:	movne	r0, #0
   12b6c:	ldr	r2, [pc, #196]	; 12c38 <main@@Base+0xe800>
   12b70:	ldmib	sp, {r1, r3}
   12b74:	add	r2, pc, r2
   12b78:	strh	r0, [r5, #6]
   12b7c:	add	r1, r3, r1
   12b80:	add	ip, r3, #16
   12b84:	ldrh	r8, [r2]
   12b88:	adds	lr, r1, #12
   12b8c:	ldrb	r2, [r2, #2]
   12b90:	strb	ip, [r5, #11]
   12b94:	strh	r8, [r5, #8]
   12b98:	strb	r2, [r5, #10]
   12b9c:	beq	12c08 <main@@Base+0xe7d0>
   12ba0:	ldr	r0, [pc, #148]	; 12c3c <main@@Base+0xe804>
   12ba4:	mvn	r2, #0
   12ba8:	mov	r3, #0
   12bac:	add	r0, pc, r0
   12bb0:	ldrb	ip, [r4, r3]
   12bb4:	add	r3, r3, #1
   12bb8:	cmp	lr, r3
   12bbc:	eor	ip, ip, r2
   12bc0:	uxtb	ip, ip
   12bc4:	ldr	ip, [r0, ip, lsl #2]
   12bc8:	eor	r2, ip, r2, lsr #8
   12bcc:	bne	12bb0 <main@@Base+0xe778>
   12bd0:	mov	r0, r4
   12bd4:	add	r1, r1, #16
   12bd8:	str	r2, [r5, #12]
   12bdc:	bl	3a98 <g_bytes_new_take@plt>
   12be0:	mov	r4, r0
   12be4:	mov	r0, r7
   12be8:	bl	414c <g_bytes_unref@plt>
   12bec:	ldr	r2, [sp, #12]
   12bf0:	mov	r0, r4
   12bf4:	ldr	r3, [r6]
   12bf8:	cmp	r2, r3
   12bfc:	bne	12c18 <main@@Base+0xe7e0>
   12c00:	add	sp, sp, #16
   12c04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c08:	mvn	r2, #0
   12c0c:	b	12bd0 <main@@Base+0xe798>
   12c10:	mov	r4, r7
   12c14:	b	12bec <main@@Base+0xe7b4>
   12c18:	bl	3e4c <__stack_chk_fail@plt>
   12c1c:	mov	r4, r0
   12c20:	mov	r0, r7
   12c24:	bl	414c <g_bytes_unref@plt>
   12c28:	mov	r0, r4
   12c2c:	bl	42f0 <_Unwind_Resume@plt>
   12c30:	strdeq	ip, [r2], -r4
   12c34:	andeq	r0, r0, r0, lsr r4
   12c38:			; <UNDEFINED> instruction: 0x000154b4
   12c3c:	andeq	r5, r1, r8, rrx
   12c40:	ldr	r3, [pc, #156]	; 12ce4 <main@@Base+0xe8ac>
   12c44:	ldr	r2, [pc, #156]	; 12ce8 <main@@Base+0xe8b0>
   12c48:	add	r3, pc, r3
   12c4c:	push	{r4, r5, lr}
   12c50:	sub	sp, sp, #12
   12c54:	ldr	r4, [r3, r2]
   12c58:	mov	r1, sp
   12c5c:	ldr	r3, [r4]
   12c60:	str	r3, [sp, #4]
   12c64:	bl	4320 <g_bytes_get_data@plt>
   12c68:	ldr	r3, [sp]
   12c6c:	cmp	r3, #15
   12c70:	bls	12cc4 <main@@Base+0xe88c>
   12c74:	sub	r3, r3, #16
   12c78:	ldr	r1, [pc, #108]	; 12cec <main@@Base+0xe8b4>
   12c7c:	add	r5, r0, r3
   12c80:	mov	r2, #3
   12c84:	add	r1, pc, r1
   12c88:	add	r0, r5, #8
   12c8c:	bl	42fc <memcmp@plt>
   12c90:	cmp	r0, #0
   12c94:	bne	12cc4 <main@@Base+0xe88c>
   12c98:	ldrh	r3, [r5, #6]
   12c9c:	cmp	r3, #272	; 0x110
   12ca0:	beq	12cbc <main@@Base+0xe884>
   12ca4:	movw	r2, #282	; 0x11a
   12ca8:	cmp	r3, r2
   12cac:	moveq	r0, #3
   12cb0:	beq	12cc8 <main@@Base+0xe890>
   12cb4:	cmp	r3, #256	; 0x100
   12cb8:	bne	12cc8 <main@@Base+0xe890>
   12cbc:	mov	r0, #2
   12cc0:	b	12cc8 <main@@Base+0xe890>
   12cc4:	mov	r0, #0
   12cc8:	ldr	r2, [sp, #4]
   12ccc:	ldr	r3, [r4]
   12cd0:	cmp	r2, r3
   12cd4:	bne	12ce0 <main@@Base+0xe8a8>
   12cd8:	add	sp, sp, #12
   12cdc:	pop	{r4, r5, pc}
   12ce0:	bl	3e4c <__stack_chk_fail@plt>
   12ce4:	andeq	fp, r2, r8, lsr pc
   12ce8:	andeq	r0, r0, r0, lsr r4
   12cec:	andeq	r5, r1, r4, lsr #7
   12cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cf4:	mov	sl, r3
   12cf8:	ldr	lr, [pc, #860]	; 1305c <main@@Base+0xec24>
   12cfc:	sub	sp, sp, #20
   12d00:	ldr	ip, [pc, #856]	; 13060 <main@@Base+0xec28>
   12d04:	mov	r9, r1
   12d08:	add	lr, pc, lr
   12d0c:	mov	r8, r0
   12d10:	add	r1, sp, #8
   12d14:	mov	r0, r9
   12d18:	ldr	r7, [lr, ip]
   12d1c:	mov	r3, lr
   12d20:	mov	r6, r2
   12d24:	ldr	r3, [r7]
   12d28:	str	r3, [sp, #12]
   12d2c:	bl	4320 <g_bytes_get_data@plt>
   12d30:	ldr	r5, [sp, #8]
   12d34:	cmp	r5, #15
   12d38:	mov	fp, r0
   12d3c:	bls	12eb0 <main@@Base+0xea78>
   12d40:	sub	r5, r5, #16
   12d44:	ldr	r1, [pc, #792]	; 13064 <main@@Base+0xec2c>
   12d48:	add	r5, r0, r5
   12d4c:	mov	r2, #3
   12d50:	add	r1, pc, r1
   12d54:	add	r0, r5, #8
   12d58:	bl	42fc <memcmp@plt>
   12d5c:	cmp	r0, #0
   12d60:	bne	12eec <main@@Base+0xeab4>
   12d64:	ands	r4, r6, #2
   12d68:	beq	12f0c <main@@Base+0xead4>
   12d6c:	ands	ip, r6, #1
   12d70:	ldr	r0, [r5, #12]
   12d74:	bne	12de4 <main@@Base+0xe9ac>
   12d78:	ldr	r2, [sp, #8]
   12d7c:	subs	r2, r2, #4
   12d80:	beq	13018 <main@@Base+0xebe0>
   12d84:	ldr	r1, [pc, #732]	; 13068 <main@@Base+0xec30>
   12d88:	mvn	r4, #0
   12d8c:	add	r1, pc, r1
   12d90:	ldrb	r3, [fp, ip]
   12d94:	add	ip, ip, #1
   12d98:	cmp	r2, ip
   12d9c:	eor	r3, r3, r4
   12da0:	uxtb	r3, r3
   12da4:	ldr	r3, [r1, r3, lsl #2]
   12da8:	eor	r4, r3, r4, lsr #8
   12dac:	bne	12d90 <main@@Base+0xe958>
   12db0:	cmp	r0, r4
   12db4:	beq	12de4 <main@@Base+0xe9ac>
   12db8:	bl	40a4 <fwupd_error_quark@plt>
   12dbc:	str	r4, [sp]
   12dc0:	ldr	ip, [r5, #12]
   12dc4:	mov	r2, #0
   12dc8:	ldr	r3, [pc, #668]	; 1306c <main@@Base+0xec34>
   12dcc:	str	ip, [sp, #4]
   12dd0:	add	r3, pc, r3
   12dd4:	mov	r1, r0
   12dd8:	mov	r0, sl
   12ddc:	bl	4350 <g_set_error@plt>
   12de0:	b	12ecc <main@@Base+0xea94>
   12de4:	mov	r0, r8
   12de8:	ldrh	r1, [r5, #4]
   12dec:	bl	11970 <main@@Base+0xd538>
   12df0:	mov	r0, r8
   12df4:	ldrh	r1, [r5, #2]
   12df8:	bl	11a00 <main@@Base+0xd5c8>
   12dfc:	ldrh	r1, [r5]
   12e00:	mov	r0, r8
   12e04:	bl	11a90 <main@@Base+0xd658>
   12e08:	ldrb	r1, [r5, #11]
   12e0c:	ldr	r3, [sp, #8]
   12e10:	cmp	r1, r3
   12e14:	bhi	12f9c <main@@Base+0xeb64>
   12e18:	tst	r6, #4
   12e1c:	beq	12f5c <main@@Base+0xeb24>
   12e20:	ldr	r1, [pc, #584]	; 13070 <main@@Base+0xec38>
   12e24:	mov	r0, r8
   12e28:	add	r1, pc, r1
   12e2c:	bl	12058 <main@@Base+0xdc20>
   12e30:	subs	r4, r0, #0
   12e34:	beq	12e58 <main@@Base+0xea20>
   12e38:	ldr	r1, [pc, #564]	; 13074 <main@@Base+0xec3c>
   12e3c:	add	r1, pc, r1
   12e40:	bl	441c <g_strcmp0@plt>
   12e44:	cmp	r0, #0
   12e48:	bne	12fcc <main@@Base+0xeb94>
   12e4c:	mov	r0, r8
   12e50:	mov	r1, #1
   12e54:	bl	129f4 <main@@Base+0xe5bc>
   12e58:	ldrb	r3, [r5, #11]
   12e5c:	mov	r0, r9
   12e60:	ldr	r2, [sp, #8]
   12e64:	mov	r1, #0
   12e68:	rsb	r2, r3, r2
   12e6c:	bl	3b40 <g_bytes_new_from_bytes@plt>
   12e70:	mov	r5, r0
   12e74:	mov	r0, r8
   12e78:	bl	118e0 <main@@Base+0xd4a8>
   12e7c:	cmp	r0, #3
   12e80:	beq	13000 <main@@Base+0xebc8>
   12e84:	mov	r0, r8
   12e88:	mov	r2, r6
   12e8c:	mov	r3, sl
   12e90:	mov	r1, r5
   12e94:	bl	15804 <main@@Base+0x113cc>
   12e98:	cmp	r5, #0
   12e9c:	mov	r4, r0
   12ea0:	beq	12ed0 <main@@Base+0xea98>
   12ea4:	mov	r0, r5
   12ea8:	bl	414c <g_bytes_unref@plt>
   12eac:	b	12ed0 <main@@Base+0xea98>
   12eb0:	bl	40a4 <fwupd_error_quark@plt>
   12eb4:	ldr	r3, [pc, #444]	; 13078 <main@@Base+0xec40>
   12eb8:	mov	r2, #0
   12ebc:	add	r3, pc, r3
   12ec0:	mov	r1, r0
   12ec4:	mov	r0, sl
   12ec8:	bl	3ae0 <g_set_error_literal@plt>
   12ecc:	mov	r4, #0
   12ed0:	ldr	r2, [sp, #12]
   12ed4:	mov	r0, r4
   12ed8:	ldr	r3, [r7]
   12edc:	cmp	r2, r3
   12ee0:	bne	13020 <main@@Base+0xebe8>
   12ee4:	add	sp, sp, #20
   12ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12eec:	bl	40a4 <fwupd_error_quark@plt>
   12ef0:	ldr	r3, [pc, #388]	; 1307c <main@@Base+0xec44>
   12ef4:	mov	r2, #0
   12ef8:	add	r3, pc, r3
   12efc:	mov	r1, r0
   12f00:	mov	r0, sl
   12f04:	bl	3ae0 <g_set_error_literal@plt>
   12f08:	b	12ecc <main@@Base+0xea94>
   12f0c:	mov	r0, r8
   12f10:	bl	118e0 <main@@Base+0xd4a8>
   12f14:	cmp	r0, #2
   12f18:	beq	12d6c <main@@Base+0xe934>
   12f1c:	mov	r0, r8
   12f20:	bl	118e0 <main@@Base+0xd4a8>
   12f24:	cmp	r0, #3
   12f28:	beq	12d6c <main@@Base+0xe934>
   12f2c:	bl	40a4 <fwupd_error_quark@plt>
   12f30:	mov	r5, r0
   12f34:	mov	r0, r8
   12f38:	bl	118e0 <main@@Base+0xd4a8>
   12f3c:	ldr	r3, [pc, #316]	; 13080 <main@@Base+0xec48>
   12f40:	mov	r1, r5
   12f44:	mov	r2, r4
   12f48:	add	r3, pc, r3
   12f4c:	str	r0, [sp]
   12f50:	mov	r0, sl
   12f54:	bl	4350 <g_set_error@plt>
   12f58:	b	12ecc <main@@Base+0xea94>
   12f5c:	rsb	r0, r1, r3
   12f60:	add	r0, fp, r0
   12f64:	bl	390c <g_bytes_new@plt>
   12f68:	mov	r2, r6
   12f6c:	mov	r3, sl
   12f70:	mov	r4, r0
   12f74:	mov	r0, r8
   12f78:	mov	r1, r4
   12f7c:	bl	15304 <main@@Base+0x10ecc>
   12f80:	cmp	r0, #0
   12f84:	bne	12fec <main@@Base+0xebb4>
   12f88:	cmp	r4, #0
   12f8c:	beq	12ecc <main@@Base+0xea94>
   12f90:	mov	r0, r4
   12f94:	bl	414c <g_bytes_unref@plt>
   12f98:	b	12ecc <main@@Base+0xea94>
   12f9c:	bl	40a4 <fwupd_error_quark@plt>
   12fa0:	ldrb	lr, [r5, #11]
   12fa4:	ldr	ip, [sp, #8]
   12fa8:	mov	r2, #0
   12fac:	ldr	r3, [pc, #208]	; 13084 <main@@Base+0xec4c>
   12fb0:	str	lr, [sp]
   12fb4:	add	r3, pc, r3
   12fb8:	str	ip, [sp, #4]
   12fbc:	mov	r1, r0
   12fc0:	mov	r0, sl
   12fc4:	bl	4350 <g_set_error@plt>
   12fc8:	b	12ecc <main@@Base+0xea94>
   12fcc:	ldr	r0, [pc, #180]	; 13088 <main@@Base+0xec50>
   12fd0:	mov	r3, r4
   12fd4:	ldr	r2, [pc, #176]	; 1308c <main@@Base+0xec54>
   12fd8:	mov	r1, #16
   12fdc:	add	r0, pc, r0
   12fe0:	add	r2, pc, r2
   12fe4:	bl	3a38 <g_log@plt>
   12fe8:	b	12e58 <main@@Base+0xea20>
   12fec:	cmp	r4, #0
   12ff0:	beq	12e20 <main@@Base+0xe9e8>
   12ff4:	mov	r0, r4
   12ff8:	bl	414c <g_bytes_unref@plt>
   12ffc:	b	12e20 <main@@Base+0xe9e8>
   13000:	mov	r0, r8
   13004:	mov	r2, r6
   13008:	mov	r3, sl
   1300c:	mov	r1, r5
   13010:	bl	13680 <main@@Base+0xf248>
   13014:	b	12e98 <main@@Base+0xea60>
   13018:	mvn	r4, #0
   1301c:	b	12db0 <main@@Base+0xe978>
   13020:	bl	3e4c <__stack_chk_fail@plt>
   13024:	cmp	r4, #0
   13028:	mov	r5, r0
   1302c:	beq	13038 <main@@Base+0xec00>
   13030:	mov	r0, r4
   13034:	bl	414c <g_bytes_unref@plt>
   13038:	mov	r0, r5
   1303c:	bl	42f0 <_Unwind_Resume@plt>
   13040:	cmp	r5, #0
   13044:	mov	r4, r0
   13048:	beq	13054 <main@@Base+0xec1c>
   1304c:	mov	r0, r5
   13050:	bl	414c <g_bytes_unref@plt>
   13054:	mov	r0, r4
   13058:	bl	42f0 <_Unwind_Resume@plt>
   1305c:	andeq	fp, r2, r8, ror lr
   13060:	andeq	r0, r0, r0, lsr r4
   13064:	ldrdeq	r5, [r1], -r8
   13068:	andeq	r4, r1, r8, lsl #29
   1306c:			; <UNDEFINED> instruction: 0x000152b0
   13070:	andeq	r2, r1, r0, lsr #20
   13074:			; <UNDEFINED> instruction: 0x00012ab8
   13078:	andeq	r5, r1, r0, ror r1
   1307c:	andeq	r5, r1, r4, asr r1
   13080:	andeq	r5, r1, r8, lsl r1
   13084:	strdeq	r5, [r1], -r0
   13088:			; <UNDEFINED> instruction: 0x00011eb0
   1308c:	strdeq	r5, [r1], -r8
   13090:	push	{r4, r5, r6, lr}
   13094:	sub	sp, sp, #8
   13098:	mov	r4, r0
   1309c:	mov	r5, r1
   130a0:	bl	118e0 <main@@Base+0xd4a8>
   130a4:	cmp	r0, #2
   130a8:	mov	r0, r4
   130ac:	beq	130f8 <main@@Base+0xecc0>
   130b0:	bl	118e0 <main@@Base+0xd4a8>
   130b4:	cmp	r0, #3
   130b8:	bne	13194 <main@@Base+0xed5c>
   130bc:	mov	r0, r4
   130c0:	mov	r1, r5
   130c4:	bl	131f4 <main@@Base+0xedbc>
   130c8:	subs	r6, r0, #0
   130cc:	beq	13130 <main@@Base+0xecf8>
   130d0:	mov	r0, r4
   130d4:	mov	r2, r5
   130d8:	mov	r1, r6
   130dc:	bl	12a84 <main@@Base+0xe64c>
   130e0:	mov	r4, r0
   130e4:	mov	r0, r6
   130e8:	bl	414c <g_bytes_unref@plt>
   130ec:	mov	r0, r4
   130f0:	add	sp, sp, #8
   130f4:	pop	{r4, r5, r6, pc}
   130f8:	bl	11420 <main@@Base+0xcfe8>
   130fc:	cmp	r0, #0
   13100:	beq	13140 <main@@Base+0xed08>
   13104:	mov	r1, #0
   13108:	bl	15b70 <main@@Base+0x11738>
   1310c:	subs	r6, r0, #0
   13110:	beq	13170 <main@@Base+0xed38>
   13114:	bl	109d0 <main@@Base+0xc598>
   13118:	mov	r2, r5
   1311c:	mov	r1, r0
   13120:	mov	r0, r4
   13124:	add	sp, sp, #8
   13128:	pop	{r4, r5, r6, lr}
   1312c:	b	12a84 <main@@Base+0xe64c>
   13130:	mov	r4, r6
   13134:	mov	r0, r4
   13138:	add	sp, sp, #8
   1313c:	pop	{r4, r5, r6, pc}
   13140:	ldr	r1, [pc, #140]	; 131d4 <main@@Base+0xed9c>
   13144:	movw	r2, #305	; 0x131
   13148:	ldr	r3, [pc, #136]	; 131d8 <main@@Base+0xeda0>
   1314c:	add	r1, pc, r1
   13150:	ldr	r0, [pc, #132]	; 131dc <main@@Base+0xeda4>
   13154:	str	r1, [sp]
   13158:	add	r3, pc, r3
   1315c:	ldr	r1, [pc, #124]	; 131e0 <main@@Base+0xeda8>
   13160:	add	r0, pc, r0
   13164:	add	r3, r3, #1024	; 0x400
   13168:	add	r1, pc, r1
   1316c:	bl	42e4 <g_assertion_message_expr@plt>
   13170:	bl	40a4 <fwupd_error_quark@plt>
   13174:	ldr	r3, [pc, #104]	; 131e4 <main@@Base+0xedac>
   13178:	mov	r2, #8
   1317c:	mov	r4, r6
   13180:	add	r3, pc, r3
   13184:	mov	r1, r0
   13188:	mov	r0, r5
   1318c:	bl	4350 <g_set_error@plt>
   13190:	b	130ec <main@@Base+0xecb4>
   13194:	ldr	r3, [pc, #76]	; 131e8 <main@@Base+0xedb0>
   13198:	mov	r1, #0
   1319c:	ldr	r0, [pc, #72]	; 131ec <main@@Base+0xedb4>
   131a0:	movw	r2, #327	; 0x147
   131a4:	str	r1, [sp]
   131a8:	add	r3, pc, r3
   131ac:	ldr	r1, [pc, #60]	; 131f0 <main@@Base+0xedb8>
   131b0:	add	r0, pc, r0
   131b4:	add	r3, r3, #1024	; 0x400
   131b8:	add	r1, pc, r1
   131bc:	bl	42e4 <g_assertion_message_expr@plt>
   131c0:	mov	r4, r0
   131c4:	mov	r0, r6
   131c8:	bl	414c <g_bytes_unref@plt>
   131cc:	mov	r0, r4
   131d0:	bl	42f0 <_Unwind_Resume@plt>
   131d4:	strdeq	r2, [r1], -r4
   131d8:			; <UNDEFINED> instruction: 0x00014abc
   131dc:	andeq	r1, r1, ip, lsr #26
   131e0:	andeq	r4, r1, ip, lsr #31
   131e4:	andeq	r4, r1, r0, ror pc
   131e8:	andeq	r4, r1, ip, ror #20
   131ec:	ldrdeq	r1, [r1], -ip
   131f0:	andeq	r4, r1, ip, asr pc
   131f4:	ldr	r3, [pc, #1124]	; 13660 <main@@Base+0xf228>
   131f8:	ldr	r2, [pc, #1124]	; 13664 <main@@Base+0xf22c>
   131fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13200:	add	r3, pc, r3
   13204:	sub	sp, sp, #60	; 0x3c
   13208:	mov	r4, r0
   1320c:	str	r1, [sp, #44]	; 0x2c
   13210:	ldr	r2, [r3, r2]
   13214:	ldr	r1, [pc, #1100]	; 13668 <main@@Base+0xf230>
   13218:	str	r2, [sp, #40]	; 0x28
   1321c:	ldr	r2, [r2]
   13220:	str	r2, [sp, #52]	; 0x34
   13224:	ldr	r2, [r3, r1]
   13228:	mov	r0, r2
   1322c:	str	r2, [sp, #36]	; 0x24
   13230:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   13234:	str	r0, [sp, #32]
   13238:	mov	r0, r4
   1323c:	bl	114c8 <main@@Base+0xd090>
   13240:	ldr	r3, [r0, #4]
   13244:	str	r0, [sp, #20]
   13248:	cmp	r3, #0
   1324c:	beq	135d4 <main@@Base+0xf19c>
   13250:	ldr	r0, [pc, #1044]	; 1366c <main@@Base+0xf234>
   13254:	add	fp, sp, #48	; 0x30
   13258:	mov	r1, #0
   1325c:	str	r1, [sp, #16]
   13260:	add	r0, pc, r0
   13264:	str	r1, [sp, #24]
   13268:	str	r0, [sp, #28]
   1326c:	ldr	r2, [sp, #20]
   13270:	ldr	r1, [sp, #16]
   13274:	ldr	r0, [sp, #36]	; 0x24
   13278:	ldr	r3, [r2]
   1327c:	ldr	r3, [r3, r1, lsl #2]
   13280:	str	r3, [sp, #12]
   13284:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   13288:	mov	r9, r0
   1328c:	ldr	r0, [sp, #12]
   13290:	bl	15ae8 <main@@Base+0x116b0>
   13294:	ldr	r7, [r0, #4]
   13298:	mov	r8, r0
   1329c:	cmp	r7, #0
   132a0:	movne	r7, #0
   132a4:	movne	r5, r7
   132a8:	beq	13554 <main@@Base+0xf11c>
   132ac:	ldr	r3, [r8]
   132b0:	ldr	r6, [r3, r5, lsl #2]
   132b4:	mov	r0, r6
   132b8:	bl	109d0 <main@@Base+0xc598>
   132bc:	mov	r1, fp
   132c0:	bl	4320 <g_bytes_get_data@plt>
   132c4:	ldr	r3, [sp, #48]	; 0x30
   132c8:	mov	sl, r0
   132cc:	add	r0, r3, #8
   132d0:	bl	4248 <g_malloc0@plt>
   132d4:	mov	r4, r0
   132d8:	mov	r0, r6
   132dc:	bl	10a58 <main@@Base+0xc620>
   132e0:	ldr	r6, [sp, #48]	; 0x30
   132e4:	mov	r1, sl
   132e8:	str	r0, [r4]
   132ec:	add	r0, r4, #8
   132f0:	mov	r2, r6
   132f4:	str	r6, [r4, #4]
   132f8:	bl	40e0 <memcpy@plt>
   132fc:	mov	r0, r4
   13300:	add	r1, r6, #8
   13304:	bl	3a98 <g_bytes_new_take@plt>
   13308:	mov	r4, r0
   1330c:	mov	r0, r9
   13310:	mov	r1, r4
   13314:	bl	426c <g_ptr_array_add@plt>
   13318:	mov	r0, r4
   1331c:	bl	3f24 <g_bytes_get_size@plt>
   13320:	ldr	r3, [r8, #4]
   13324:	add	r5, r5, #1
   13328:	add	r7, r7, r0
   1332c:	cmp	r5, r3
   13330:	bcc	132ac <main@@Base+0xee74>
   13334:	add	r5, r7, #272	; 0x110
   13338:	add	r5, r5, #2
   1333c:	mov	r0, r5
   13340:	bl	4248 <g_malloc0@plt>
   13344:	ldr	r2, [sp, #28]
   13348:	mov	r4, r0
   1334c:	ldrh	r3, [r2, #4]
   13350:	ldr	r0, [r2]
   13354:	strh	r3, [r4, #4]
   13358:	str	r0, [r4]
   1335c:	ldr	r0, [sp, #12]
   13360:	bl	15cb8 <main@@Base+0x11880>
   13364:	strb	r0, [r4, #6]
   13368:	ldr	r0, [sp, #12]
   1336c:	bl	15d48 <main@@Base+0x11910>
   13370:	cmp	r0, #0
   13374:	beq	133ac <main@@Base+0xef74>
   13378:	mov	r1, #0
   1337c:	mov	r3, #1
   13380:	ldr	r0, [sp, #12]
   13384:	add	r6, r4, #11
   13388:	strb	r3, [r4, #7]
   1338c:	strb	r1, [r4, #8]
   13390:	strb	r1, [r4, #9]
   13394:	strb	r1, [r4, #10]
   13398:	bl	15d48 <main@@Base+0x11910>
   1339c:	mov	r1, r0
   133a0:	mov	r2, #255	; 0xff
   133a4:	mov	r0, r6
   133a8:	bl	40e0 <memcpy@plt>
   133ac:	ldr	r2, [r9, #4]
   133b0:	ldr	r3, [r8, #4]
   133b4:	cmp	r2, #0
   133b8:	str	r7, [r4, #266]	; 0x10a
   133bc:	str	r3, [r4, #270]	; 0x10e
   133c0:	movwne	r7, #274	; 0x112
   133c4:	movne	r6, #0
   133c8:	beq	13400 <main@@Base+0xefc8>
   133cc:	ldr	r3, [r9]
   133d0:	mov	r1, fp
   133d4:	ldr	r0, [r3, r6, lsl #2]
   133d8:	bl	4320 <g_bytes_get_data@plt>
   133dc:	ldr	r2, [sp, #48]	; 0x30
   133e0:	mov	r1, r0
   133e4:	add	r0, r4, r7
   133e8:	add	r6, r6, #1
   133ec:	add	r7, r7, r2
   133f0:	bl	40e0 <memcpy@plt>
   133f4:	ldr	r3, [r9, #4]
   133f8:	cmp	r6, r3
   133fc:	bcc	133cc <main@@Base+0xef94>
   13400:	mov	r0, r4
   13404:	mov	r1, r5
   13408:	bl	3a98 <g_bytes_new_take@plt>
   1340c:	mov	r4, r0
   13410:	mov	r0, r9
   13414:	bl	4224 <g_ptr_array_unref@plt>
   13418:	mov	r0, r4
   1341c:	bl	3f24 <g_bytes_get_size@plt>
   13420:	ldr	r2, [sp, #24]
   13424:	mov	r1, r4
   13428:	add	r2, r2, r0
   1342c:	ldr	r0, [sp, #32]
   13430:	str	r2, [sp, #24]
   13434:	bl	426c <g_ptr_array_add@plt>
   13438:	ldr	r0, [sp, #20]
   1343c:	ldr	r1, [sp, #16]
   13440:	ldr	r3, [r0, #4]
   13444:	add	r1, r1, #1
   13448:	str	r1, [sp, #16]
   1344c:	cmp	r3, r1
   13450:	bhi	1326c <main@@Base+0xee34>
   13454:	ldr	r0, [pc, #532]	; 13670 <main@@Base+0xf238>
   13458:	mov	r1, #128	; 0x80
   1345c:	ldr	r2, [pc, #528]	; 13674 <main@@Base+0xf23c>
   13460:	add	r0, pc, r0
   13464:	ldr	r3, [sp, #24]
   13468:	add	r2, pc, r2
   1346c:	bl	3a38 <g_log@plt>
   13470:	ldr	r2, [sp, #24]
   13474:	add	r7, r2, #11
   13478:	mov	r0, r7
   1347c:	bl	4248 <g_malloc0@plt>
   13480:	ldr	r3, [pc, #496]	; 13678 <main@@Base+0xf240>
   13484:	mov	r5, r0
   13488:	str	r7, [r0, #6]
   1348c:	mov	r2, #1
   13490:	add	r3, pc, r3
   13494:	strb	r2, [r0, #5]
   13498:	ldr	r0, [r3]
   1349c:	ldrb	r3, [r3, #4]
   134a0:	str	r0, [r5]
   134a4:	ldr	r0, [sp, #20]
   134a8:	strb	r3, [r5, #4]
   134ac:	ldr	r3, [r0, #4]
   134b0:	cmp	r3, #255	; 0xff
   134b4:	bhi	1355c <main@@Base+0xf124>
   134b8:	ldr	r0, [sp, #32]
   134bc:	strb	r3, [r5, #10]
   134c0:	ldr	r3, [r0, #4]
   134c4:	cmp	r3, #0
   134c8:	addne	r8, sp, #48	; 0x30
   134cc:	movne	r4, #0
   134d0:	movne	r6, #11
   134d4:	beq	13514 <main@@Base+0xf0dc>
   134d8:	ldr	r1, [sp, #32]
   134dc:	ldr	r3, [r1]
   134e0:	mov	r1, r8
   134e4:	ldr	r0, [r3, r4, lsl #2]
   134e8:	bl	4320 <g_bytes_get_data@plt>
   134ec:	ldr	r2, [sp, #48]	; 0x30
   134f0:	mov	r1, r0
   134f4:	add	r0, r5, r6
   134f8:	add	r4, r4, #1
   134fc:	add	r6, r6, r2
   13500:	bl	40e0 <memcpy@plt>
   13504:	ldr	r2, [sp, #32]
   13508:	ldr	r3, [r2, #4]
   1350c:	cmp	r3, r4
   13510:	bhi	134d8 <main@@Base+0xf0a0>
   13514:	mov	r1, r7
   13518:	mov	r0, r5
   1351c:	bl	390c <g_bytes_new@plt>
   13520:	mov	r4, r0
   13524:	ldr	r0, [sp, #32]
   13528:	bl	4224 <g_ptr_array_unref@plt>
   1352c:	mov	r0, r5
   13530:	bl	3eac <g_free@plt>
   13534:	ldr	r1, [sp, #40]	; 0x28
   13538:	ldr	r2, [sp, #52]	; 0x34
   1353c:	mov	r0, r4
   13540:	ldr	r3, [r1]
   13544:	cmp	r2, r3
   13548:	bne	13654 <main@@Base+0xf21c>
   1354c:	add	sp, sp, #60	; 0x3c
   13550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13554:	movw	r5, #274	; 0x112
   13558:	b	1333c <main@@Base+0xef04>
   1355c:	bl	40a4 <fwupd_error_quark@plt>
   13560:	ldr	r2, [sp, #20]
   13564:	mov	r1, r0
   13568:	ldr	r3, [pc, #268]	; 1367c <main@@Base+0xf244>
   1356c:	ldr	r0, [sp, #44]	; 0x2c
   13570:	ldr	ip, [r2, #4]
   13574:	add	r3, pc, r3
   13578:	mov	r2, #0
   1357c:	str	ip, [sp]
   13580:	bl	4350 <g_set_error@plt>
   13584:	ldr	r3, [sp, #32]
   13588:	cmp	r3, #0
   1358c:	ldreq	r4, [sp, #32]
   13590:	beq	1352c <main@@Base+0xf0f4>
   13594:	mov	r4, #0
   13598:	b	13524 <main@@Base+0xf0ec>
   1359c:	mov	r4, r0
   135a0:	mov	r5, #0
   135a4:	mov	r0, r5
   135a8:	bl	3eac <g_free@plt>
   135ac:	mov	r0, r4
   135b0:	bl	42f0 <_Unwind_Resume@plt>
   135b4:	mov	r4, r0
   135b8:	mov	r5, #0
   135bc:	ldr	r2, [sp, #32]
   135c0:	cmp	r2, #0
   135c4:	beq	135a4 <main@@Base+0xf16c>
   135c8:	ldr	r0, [sp, #32]
   135cc:	bl	4224 <g_ptr_array_unref@plt>
   135d0:	b	135a4 <main@@Base+0xf16c>
   135d4:	str	r3, [sp, #24]
   135d8:	b	13454 <main@@Base+0xf01c>
   135dc:	b	135b4 <main@@Base+0xf17c>
   135e0:	cmp	r9, #0
   135e4:	mov	r4, r0
   135e8:	beq	135b8 <main@@Base+0xf180>
   135ec:	mov	r0, r9
   135f0:	bl	4224 <g_ptr_array_unref@plt>
   135f4:	b	135b8 <main@@Base+0xf180>
   135f8:	b	135e0 <main@@Base+0xf1a8>
   135fc:	b	135b4 <main@@Base+0xf17c>
   13600:	b	135e0 <main@@Base+0xf1a8>
   13604:	b	135e0 <main@@Base+0xf1a8>
   13608:	b	135e0 <main@@Base+0xf1a8>
   1360c:	b	135e0 <main@@Base+0xf1a8>
   13610:	b	135e0 <main@@Base+0xf1a8>
   13614:	b	135e0 <main@@Base+0xf1a8>
   13618:	b	135e0 <main@@Base+0xf1a8>
   1361c:	b	135e0 <main@@Base+0xf1a8>
   13620:	b	135e0 <main@@Base+0xf1a8>
   13624:	b	135e0 <main@@Base+0xf1a8>
   13628:	mov	r4, r0
   1362c:	b	135ec <main@@Base+0xf1b4>
   13630:	b	135b4 <main@@Base+0xf17c>
   13634:	b	135b4 <main@@Base+0xf17c>
   13638:	b	135b4 <main@@Base+0xf17c>
   1363c:	b	135b4 <main@@Base+0xf17c>
   13640:	b	135b4 <main@@Base+0xf17c>
   13644:	mov	r4, r0
   13648:	b	135c8 <main@@Base+0xf190>
   1364c:	mov	r4, r0
   13650:	b	135a4 <main@@Base+0xf16c>
   13654:	bl	3e4c <__stack_chk_fail@plt>
   13658:	mov	r4, r0
   1365c:	b	135bc <main@@Base+0xf184>
   13660:	andeq	fp, r2, r0, lsl #19
   13664:	andeq	r0, r0, r0, lsr r4
   13668:	andeq	r0, r0, r8, asr r4
   1366c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13670:	andeq	r1, r1, ip, lsr #20
   13674:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13678:	andeq	r1, r1, r8, lsr #28
   1367c:	andeq	r4, r1, r0, ror #23
   13680:	ldr	ip, [pc, #1048]	; 13aa0 <main@@Base+0xf668>
   13684:	ldr	r2, [pc, #1048]	; 13aa4 <main@@Base+0xf66c>
   13688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1368c:	add	ip, pc, ip
   13690:	sub	sp, sp, #68	; 0x44
   13694:	str	r0, [sp, #44]	; 0x2c
   13698:	mov	r0, r1
   1369c:	str	r3, [sp, #16]
   136a0:	mov	r3, ip
   136a4:	ldr	r2, [ip, r2]
   136a8:	add	r1, sp, #56	; 0x38
   136ac:	ldr	r3, [r2]
   136b0:	str	r2, [sp, #52]	; 0x34
   136b4:	str	r3, [sp, #60]	; 0x3c
   136b8:	bl	4320 <g_bytes_get_data@plt>
   136bc:	ldr	r1, [pc, #996]	; 13aa8 <main@@Base+0xf670>
   136c0:	mov	r2, #5
   136c4:	add	r1, pc, r1
   136c8:	str	r0, [sp, #36]	; 0x24
   136cc:	bl	42fc <memcmp@plt>
   136d0:	subs	r5, r0, #0
   136d4:	bne	139d0 <main@@Base+0xf598>
   136d8:	ldr	r1, [sp, #36]	; 0x24
   136dc:	ldrb	r3, [r1, #5]
   136e0:	cmp	r3, #1
   136e4:	bne	137b4 <main@@Base+0xf37c>
   136e8:	ldr	r1, [sp, #36]	; 0x24
   136ec:	ldr	r2, [sp, #56]	; 0x38
   136f0:	ldr	r3, [r1, #6]
   136f4:	cmp	r3, r2
   136f8:	bne	139f4 <main@@Base+0xf5bc>
   136fc:	ldr	r1, [sp, #36]	; 0x24
   13700:	sub	r4, r3, #11
   13704:	str	r4, [sp, #56]	; 0x38
   13708:	ldrb	r2, [r1, #10]
   1370c:	cmp	r2, #0
   13710:	beq	13a2c <main@@Base+0xf5f4>
   13714:	ldr	r3, [pc, #912]	; 13aac <main@@Base+0xf674>
   13718:	ldr	r2, [pc, #912]	; 13ab0 <main@@Base+0xf678>
   1371c:	add	r3, pc, r3
   13720:	ldr	r1, [pc, #908]	; 13ab4 <main@@Base+0xf67c>
   13724:	str	r3, [sp, #20]
   13728:	movw	r3, #273	; 0x111
   1372c:	cmp	r4, r3
   13730:	add	r2, pc, r2
   13734:	add	r1, pc, r1
   13738:	str	r2, [sp, #48]	; 0x30
   1373c:	str	r5, [sp, #24]
   13740:	mov	r2, #11
   13744:	str	r1, [sp, #32]
   13748:	str	r2, [sp, #28]
   1374c:	bls	138f4 <main@@Base+0xf4bc>
   13750:	ldr	r2, [sp, #28]
   13754:	ldr	r1, [sp, #36]	; 0x24
   13758:	add	r1, r1, r2
   1375c:	str	r1, [sp, #12]
   13760:	mov	r2, #6
   13764:	ldr	r1, [sp, #48]	; 0x30
   13768:	ldr	r0, [sp, #12]
   1376c:	bl	42fc <memcmp@plt>
   13770:	cmp	r0, #0
   13774:	beq	137e4 <main@@Base+0xf3ac>
   13778:	bl	40a4 <fwupd_error_quark@plt>
   1377c:	ldr	r3, [pc, #820]	; 13ab8 <main@@Base+0xf680>
   13780:	mov	r1, r0
   13784:	mov	r2, #7
   13788:	ldr	r0, [sp, #16]
   1378c:	add	r3, pc, r3
   13790:	bl	3ae0 <g_set_error_literal@plt>
   13794:	mov	r0, #0
   13798:	ldr	r1, [sp, #52]	; 0x34
   1379c:	ldr	r2, [sp, #60]	; 0x3c
   137a0:	ldr	r3, [r1]
   137a4:	cmp	r2, r3
   137a8:	bne	13a94 <main@@Base+0xf65c>
   137ac:	add	sp, sp, #68	; 0x44
   137b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137b4:	bl	40a4 <fwupd_error_quark@plt>
   137b8:	ldr	r2, [sp, #36]	; 0x24
   137bc:	ldr	r3, [pc, #760]	; 13abc <main@@Base+0xf684>
   137c0:	ldrb	ip, [r2, #5]
   137c4:	add	r3, pc, r3
   137c8:	mov	r2, r5
   137cc:	str	ip, [sp]
   137d0:	mov	r1, r0
   137d4:	ldr	r0, [sp, #16]
   137d8:	bl	4350 <g_set_error@plt>
   137dc:	mov	r0, r5
   137e0:	b	13798 <main@@Base+0xf360>
   137e4:	bl	15ad4 <main@@Base+0x1169c>
   137e8:	ldr	r3, [sp, #12]
   137ec:	mov	fp, r0
   137f0:	ldrb	r1, [r3, #6]
   137f4:	bl	15fb0 <main@@Base+0x11b78>
   137f8:	ldr	r1, [sp, #12]
   137fc:	ldr	r3, [r1, #7]
   13800:	cmp	r3, #1
   13804:	beq	139bc <main@@Base+0xf584>
   13808:	ldr	r2, [sp, #12]
   1380c:	sub	r4, r4, #272	; 0x110
   13810:	sub	r4, r4, #2
   13814:	ldr	r2, [r2, #270]	; 0x10e
   13818:	cmp	r2, #0
   1381c:	str	r2, [sp, #8]
   13820:	movweq	r3, #274	; 0x112
   13824:	streq	r3, [sp, #40]	; 0x28
   13828:	beq	1398c <main@@Base+0xf554>
   1382c:	mov	r7, #0
   13830:	movw	r8, #274	; 0x112
   13834:	cmp	r4, #7
   13838:	bls	1399c <main@@Base+0xf564>
   1383c:	ldr	r3, [sp, #12]
   13840:	add	sl, r3, r8
   13844:	ldr	r9, [sl, #4]
   13848:	add	r6, r9, #8
   1384c:	cmp	r6, r4
   13850:	bls	13918 <main@@Base+0xf4e0>
   13854:	bl	40a4 <fwupd_error_quark@plt>
   13858:	mov	r1, r0
   1385c:	sub	r4, r4, #8
   13860:	ldr	r0, [sp, #16]
   13864:	mov	r2, #0
   13868:	str	r9, [sp]
   1386c:	str	r4, [sp, #4]
   13870:	ldr	r3, [sp, #20]
   13874:	bl	4350 <g_set_error@plt>
   13878:	mov	r4, #0
   1387c:	cmp	fp, #0
   13880:	beq	1388c <main@@Base+0xf454>
   13884:	mov	r0, fp
   13888:	bl	4110 <g_object_unref@plt>
   1388c:	cmp	r4, #0
   13890:	beq	13a40 <main@@Base+0xf608>
   13894:	ldr	r0, [sp, #44]	; 0x2c
   13898:	mov	r1, r4
   1389c:	bl	11624 <main@@Base+0xd1ec>
   138a0:	ldr	r2, [sp, #24]
   138a4:	mov	r0, r4
   138a8:	ldr	r3, [sp, #56]	; 0x38
   138ac:	ldr	r1, [sp, #28]
   138b0:	add	r2, r2, #1
   138b4:	str	r2, [sp, #24]
   138b8:	ldr	r2, [sp, #40]	; 0x28
   138bc:	add	r1, r1, r2
   138c0:	rsb	r3, r2, r3
   138c4:	str	r1, [sp, #28]
   138c8:	str	r3, [sp, #56]	; 0x38
   138cc:	bl	4110 <g_object_unref@plt>
   138d0:	ldr	r1, [sp, #36]	; 0x24
   138d4:	ldr	r2, [sp, #24]
   138d8:	ldrb	r3, [r1, #10]
   138dc:	cmp	r3, r2
   138e0:	bls	13a2c <main@@Base+0xf5f4>
   138e4:	ldr	r4, [sp, #56]	; 0x38
   138e8:	movw	r3, #273	; 0x111
   138ec:	cmp	r4, r3
   138f0:	bhi	13750 <main@@Base+0xf318>
   138f4:	bl	40a4 <fwupd_error_quark@plt>
   138f8:	ldr	r3, [pc, #448]	; 13ac0 <main@@Base+0xf688>
   138fc:	mov	r1, r0
   13900:	str	r4, [sp]
   13904:	mov	r2, #0
   13908:	ldr	r0, [sp, #16]
   1390c:	add	r3, pc, r3
   13910:	bl	4350 <g_set_error@plt>
   13914:	b	13794 <main@@Base+0xf35c>
   13918:	bl	109bc <main@@Base+0xc584>
   1391c:	ldr	r1, [sl]
   13920:	mov	r5, r0
   13924:	bl	10bcc <main@@Base+0xc794>
   13928:	add	r0, sl, #8
   1392c:	mov	r1, r9
   13930:	bl	390c <g_bytes_new@plt>
   13934:	mov	r9, r0
   13938:	mov	r0, r5
   1393c:	mov	r1, r9
   13940:	bl	10ae8 <main@@Base+0xc6b0>
   13944:	cmp	r9, #0
   13948:	beq	13954 <main@@Base+0xf51c>
   1394c:	mov	r0, r9
   13950:	bl	414c <g_bytes_unref@plt>
   13954:	cmp	r5, #0
   13958:	beq	13878 <main@@Base+0xf440>
   1395c:	mov	r0, fp
   13960:	mov	r1, r5
   13964:	bl	15ea8 <main@@Base+0x11a70>
   13968:	mov	r0, r5
   1396c:	add	r8, r8, r6
   13970:	rsb	r4, r6, r4
   13974:	bl	4110 <g_object_unref@plt>
   13978:	ldr	r1, [sp, #8]
   1397c:	add	r7, r7, #1
   13980:	cmp	r7, r1
   13984:	bne	13834 <main@@Base+0xf3fc>
   13988:	str	r8, [sp, #40]	; 0x28
   1398c:	mov	r0, fp
   13990:	bl	381c <g_object_ref@plt>
   13994:	mov	r4, r0
   13998:	b	1387c <main@@Base+0xf444>
   1399c:	bl	40a4 <fwupd_error_quark@plt>
   139a0:	mov	r1, r0
   139a4:	str	r4, [sp]
   139a8:	ldr	r0, [sp, #16]
   139ac:	mov	r2, #0
   139b0:	ldr	r3, [sp, #32]
   139b4:	bl	4350 <g_set_error@plt>
   139b8:	b	13878 <main@@Base+0xf440>
   139bc:	ldr	r2, [sp, #12]
   139c0:	mov	r0, fp
   139c4:	add	r1, r2, #11
   139c8:	bl	16040 <main@@Base+0x11c08>
   139cc:	b	13808 <main@@Base+0xf3d0>
   139d0:	bl	40a4 <fwupd_error_quark@plt>
   139d4:	ldr	r3, [pc, #232]	; 13ac4 <main@@Base+0xf68c>
   139d8:	mov	r2, #0
   139dc:	add	r3, pc, r3
   139e0:	mov	r1, r0
   139e4:	ldr	r0, [sp, #16]
   139e8:	bl	3ae0 <g_set_error_literal@plt>
   139ec:	mov	r0, #0
   139f0:	b	13798 <main@@Base+0xf360>
   139f4:	bl	40a4 <fwupd_error_quark@plt>
   139f8:	ldr	r2, [sp, #36]	; 0x24
   139fc:	ldr	ip, [sp, #56]	; 0x38
   13a00:	ldr	r3, [pc, #192]	; 13ac8 <main@@Base+0xf690>
   13a04:	ldr	lr, [r2, #6]
   13a08:	mov	r2, r5
   13a0c:	add	r3, pc, r3
   13a10:	str	ip, [sp, #4]
   13a14:	str	lr, [sp]
   13a18:	mov	r1, r0
   13a1c:	ldr	r0, [sp, #16]
   13a20:	bl	4350 <g_set_error@plt>
   13a24:	mov	r0, r5
   13a28:	b	13798 <main@@Base+0xf360>
   13a2c:	mov	r0, #1
   13a30:	b	13798 <main@@Base+0xf360>
   13a34:	mov	r4, r0
   13a38:	mov	r0, r4
   13a3c:	bl	42f0 <_Unwind_Resume@plt>
   13a40:	mov	r0, r4
   13a44:	b	13798 <main@@Base+0xf360>
   13a48:	mov	r5, r0
   13a4c:	mov	r0, r4
   13a50:	bl	4110 <g_object_unref@plt>
   13a54:	mov	r0, r5
   13a58:	bl	42f0 <_Unwind_Resume@plt>
   13a5c:	cmp	r9, #0
   13a60:	mov	r4, r0
   13a64:	beq	13a70 <main@@Base+0xf638>
   13a68:	mov	r0, r9
   13a6c:	bl	414c <g_bytes_unref@plt>
   13a70:	cmp	fp, #0
   13a74:	beq	13a38 <main@@Base+0xf600>
   13a78:	mov	r0, fp
   13a7c:	bl	4110 <g_object_unref@plt>
   13a80:	b	13a38 <main@@Base+0xf600>
   13a84:	mov	r4, r0
   13a88:	mov	r0, r5
   13a8c:	bl	4110 <g_object_unref@plt>
   13a90:	b	13a70 <main@@Base+0xf638>
   13a94:	bl	3e4c <__stack_chk_fail@plt>
   13a98:	mov	r4, r0
   13a9c:	b	13a70 <main@@Base+0xf638>
   13aa0:	strdeq	fp, [r2], -r4
   13aa4:	andeq	r0, r0, r0, lsr r4
   13aa8:	strdeq	r1, [r1], -r4
   13aac:	andeq	r4, r1, r8, lsr #22
   13ab0:	andeq	r4, r1, r4, lsl #20
   13ab4:	strdeq	r4, [r1], -r0
   13ab8:	andeq	r4, r1, r8, ror sl
   13abc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13ac0:	ldrdeq	r4, [r1], -ip
   13ac4:	andeq	r4, r1, r4, lsr #15
   13ac8:	andeq	r4, r1, ip, lsr #15
   13acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ad0:	sub	sp, sp, #12
   13ad4:	mov	r9, r1
   13ad8:	mov	sl, r3
   13adc:	ldr	r8, [sp, #48]	; 0x30
   13ae0:	mov	r3, r1
   13ae4:	ldr	r1, [pc, #156]	; 13b88 <main@@Base+0xf750>
   13ae8:	mov	fp, r2
   13aec:	str	r2, [sp]
   13af0:	mov	r6, r0
   13af4:	mov	r2, r8
   13af8:	add	r1, pc, r1
   13afc:	bl	4344 <g_string_append_printf@plt>
   13b00:	cmp	r8, #0
   13b04:	beq	13b78 <main@@Base+0xf740>
   13b08:	ldr	r7, [pc, #124]	; 13b8c <main@@Base+0xf754>
   13b0c:	add	r5, sl, r8
   13b10:	mov	r4, sl
   13b14:	add	r7, pc, r7
   13b18:	ldrb	r2, [r4], #1
   13b1c:	mov	r0, r6
   13b20:	mov	r1, r7
   13b24:	bl	4344 <g_string_append_printf@plt>
   13b28:	cmp	r4, r5
   13b2c:	bne	13b18 <main@@Base+0xf6e0>
   13b30:	uxtab	r3, fp, r8
   13b34:	mov	ip, sl
   13b38:	uxtab	r3, r9, r3
   13b3c:	add	r3, r3, r9, lsr #8
   13b40:	and	r3, r3, #255	; 0xff
   13b44:	ldrb	r2, [ip], #1
   13b48:	add	r3, r3, r2
   13b4c:	cmp	r5, ip
   13b50:	uxtb	r3, r3
   13b54:	bne	13b44 <main@@Base+0xf70c>
   13b58:	rsb	r2, r3, #0
   13b5c:	ldr	r1, [pc, #44]	; 13b90 <main@@Base+0xf758>
   13b60:	mov	r0, r6
   13b64:	add	r1, pc, r1
   13b68:	uxtb	r2, r2
   13b6c:	add	sp, sp, #12
   13b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b74:	b	4344 <g_string_append_printf@plt>
   13b78:	add	r3, fp, r9
   13b7c:	add	r3, r3, r9, lsr #8
   13b80:	and	r3, r3, #255	; 0xff
   13b84:	b	13b58 <main@@Base+0xf720>
   13b88:	muleq	r1, r0, r7
   13b8c:	andeq	r4, r1, r4, lsl #15
   13b90:	andeq	r4, r1, ip, lsr r7
   13b94:	ldr	r3, [pc, #92]	; 13bf8 <main@@Base+0xf7c0>
   13b98:	ldr	r2, [pc, #92]	; 13bfc <main@@Base+0xf7c4>
   13b9c:	add	r3, pc, r3
   13ba0:	push	{r4, lr}
   13ba4:	sub	sp, sp, #8
   13ba8:	ldr	r4, [r3, r2]
   13bac:	mov	r1, sp
   13bb0:	ldr	r3, [r4]
   13bb4:	str	r3, [sp, #4]
   13bb8:	bl	4320 <g_bytes_get_data@plt>
   13bbc:	ldr	r3, [sp]
   13bc0:	cmp	r3, #11
   13bc4:	movls	r0, #0
   13bc8:	bls	13bdc <main@@Base+0xf7a4>
   13bcc:	ldrb	r0, [r0]
   13bd0:	cmp	r0, #58	; 0x3a
   13bd4:	moveq	r0, #4
   13bd8:	movne	r0, #0
   13bdc:	ldr	r2, [sp, #4]
   13be0:	ldr	r3, [r4]
   13be4:	cmp	r2, r3
   13be8:	bne	13bf4 <main@@Base+0xf7bc>
   13bec:	add	sp, sp, #8
   13bf0:	pop	{r4, pc}
   13bf4:	bl	3e4c <__stack_chk_fail@plt>
   13bf8:	andeq	sl, r2, r4, ror #31
   13bfc:	andeq	r0, r0, r0, lsr r4
   13c00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c04:	sub	sp, sp, #116	; 0x74
   13c08:	ldr	lr, [pc, #2620]	; 1464c <main@@Base+0x10214>
   13c0c:	mov	r4, r1
   13c10:	ldr	ip, [pc, #2616]	; 14650 <main@@Base+0x10218>
   13c14:	add	lr, pc, lr
   13c18:	str	r0, [sp, #84]	; 0x54
   13c1c:	str	r3, [sp, #64]	; 0x40
   13c20:	mov	r0, #0
   13c24:	str	r2, [sp, #32]
   13c28:	mov	r3, lr
   13c2c:	ldr	ip, [lr, ip]
   13c30:	ldr	r3, [ip]
   13c34:	str	ip, [sp, #80]	; 0x50
   13c38:	str	r3, [sp, #108]	; 0x6c
   13c3c:	bl	3990 <g_string_new@plt>
   13c40:	cmp	r4, #0
   13c44:	str	r0, [sp, #52]	; 0x34
   13c48:	beq	14224 <main@@Base+0xfdec>
   13c4c:	bl	15ad4 <main@@Base+0x1169c>
   13c50:	ldr	r1, [pc, #2556]	; 14654 <main@@Base+0x1021c>
   13c54:	str	r0, [sp, #48]	; 0x30
   13c58:	add	r1, pc, r1
   13c5c:	bl	16040 <main@@Base+0x11c08>
   13c60:	bl	109bc <main@@Base+0xc584>
   13c64:	str	r0, [sp, #40]	; 0x28
   13c68:	add	r1, sp, #104	; 0x68
   13c6c:	mov	r0, r4
   13c70:	bl	4320 <g_bytes_get_data@plt>
   13c74:	str	r0, [sp, #20]
   13c78:	ldr	r0, [pc, #2520]	; 14658 <main@@Base+0x10220>
   13c7c:	add	r0, pc, r0
   13c80:	bl	3990 <g_string_new@plt>
   13c84:	ldr	r3, [pc, #2512]	; 1465c <main@@Base+0x10224>
   13c88:	mov	r5, #0
   13c8c:	ldr	r1, [pc, #2508]	; 14660 <main@@Base+0x10228>
   13c90:	mov	r4, r0
   13c94:	ldr	sl, [pc, #2504]	; 14664 <main@@Base+0x1022c>
   13c98:	add	r3, pc, r3
   13c9c:	ldr	fp, [pc, #2500]	; 14668 <main@@Base+0x10230>
   13ca0:	add	r1, pc, r1
   13ca4:	ldr	r2, [sp, #104]	; 0x68
   13ca8:	add	sl, pc, sl
   13cac:	str	r3, [sp, #88]	; 0x58
   13cb0:	add	fp, pc, fp
   13cb4:	str	r1, [sp, #92]	; 0x5c
   13cb8:	mov	r9, r5
   13cbc:	ldr	r3, [pc, #2472]	; 1466c <main@@Base+0x10234>
   13cc0:	ldr	r1, [pc, #2472]	; 14670 <main@@Base+0x10238>
   13cc4:	add	r3, pc, r3
   13cc8:	str	r5, [sp, #76]	; 0x4c
   13ccc:	add	r1, pc, r1
   13cd0:	str	r5, [sp, #60]	; 0x3c
   13cd4:	str	r5, [sp, #72]	; 0x48
   13cd8:	str	r5, [sp, #68]	; 0x44
   13cdc:	str	r3, [sp, #96]	; 0x60
   13ce0:	str	r1, [sp, #100]	; 0x64
   13ce4:	cmp	r5, r2
   13ce8:	bcs	14060 <main@@Base+0xfc28>
   13cec:	ldr	r1, [sp, #20]
   13cf0:	add	r6, r1, r5
   13cf4:	ldrb	r3, [r1, r5]
   13cf8:	cmp	r3, #58	; 0x3a
   13cfc:	bne	14250 <main@@Base+0xfe18>
   13d00:	add	r3, r5, #12
   13d04:	cmp	r3, r2
   13d08:	bhi	1427c <main@@Base+0xfe44>
   13d0c:	ldr	r2, [sp, #20]
   13d10:	add	r6, r5, #1
   13d14:	add	r7, r2, r6
   13d18:	mov	r0, r7
   13d1c:	bl	bec8 <main@@Base+0x7a90>
   13d20:	ldr	r3, [sp, #20]
   13d24:	mov	r8, r0
   13d28:	add	r0, r5, #3
   13d2c:	add	r0, r3, r0
   13d30:	bl	bf30 <main@@Base+0x7af8>
   13d34:	ldr	r1, [sp, #20]
   13d38:	add	r3, r5, #7
   13d3c:	str	r0, [sp, #44]	; 0x2c
   13d40:	add	r0, r1, r3
   13d44:	bl	bec8 <main@@Base+0x7a90>
   13d48:	mov	r2, #2
   13d4c:	ldr	r3, [sp, #104]	; 0x68
   13d50:	smlabb	r2, r2, r8, r5
   13d54:	str	r0, [sp, #16]
   13d58:	str	r2, [sp, #28]
   13d5c:	add	r2, r2, #9
   13d60:	cmp	r2, r3
   13d64:	str	r2, [sp, #24]
   13d68:	bhi	14174 <main@@Base+0xfd3c>
   13d6c:	ldr	r1, [sp, #32]
   13d70:	ands	r8, r1, #1
   13d74:	bne	13dc8 <main@@Base+0xf990>
   13d78:	ldr	r2, [sp, #28]
   13d7c:	add	r2, r2, #11
   13d80:	str	r2, [sp, #36]	; 0x24
   13d84:	cmp	r6, r2
   13d88:	bcs	13dc8 <main@@Base+0xf990>
   13d8c:	str	r9, [sp, #56]	; 0x38
   13d90:	mov	r0, r7
   13d94:	mov	r9, r2
   13d98:	ldr	r7, [sp, #20]
   13d9c:	b	13da4 <main@@Base+0xf96c>
   13da0:	add	r0, r7, r6
   13da4:	bl	bec8 <main@@Base+0x7a90>
   13da8:	add	r6, r6, #2
   13dac:	add	r0, r8, r0
   13db0:	cmp	r6, r9
   13db4:	uxtb	r8, r0
   13db8:	bcc	13da0 <main@@Base+0xf968>
   13dbc:	cmp	r8, #0
   13dc0:	ldr	r9, [sp, #56]	; 0x38
   13dc4:	bne	14308 <main@@Base+0xfed0>
   13dc8:	ldr	r1, [sp, #16]
   13dcc:	cmp	r1, #3
   13dd0:	beq	14124 <main@@Base+0xfcec>
   13dd4:	bhi	13f70 <main@@Base+0xfb38>
   13dd8:	cmp	r1, #1
   13ddc:	beq	1410c <main@@Base+0xfcd4>
   13de0:	bhi	140f4 <main@@Base+0xfcbc>
   13de4:	ldr	r1, [sp, #72]	; 0x48
   13de8:	ldr	r2, [sp, #44]	; 0x2c
   13dec:	add	r3, r1, r2
   13df0:	ldr	r1, [sp, #60]	; 0x3c
   13df4:	cmp	r3, r1
   13df8:	beq	14168 <main@@Base+0xfd30>
   13dfc:	cmp	r1, #0
   13e00:	beq	14138 <main@@Base+0xfd00>
   13e04:	ldr	r3, [sp, #72]	; 0x48
   13e08:	ldr	r1, [sp, #76]	; 0x4c
   13e0c:	ldr	r2, [sp, #44]	; 0x2c
   13e10:	cmp	r1, #0
   13e14:	add	r2, r2, r3, lsl #16
   13e18:	str	r2, [sp, #16]
   13e1c:	moveq	r1, r2
   13e20:	str	r1, [sp, #76]	; 0x4c
   13e24:	ldr	r2, [sp, #16]
   13e28:	cmp	r2, r9
   13e2c:	bcc	143f8 <main@@Base+0xffc0>
   13e30:	ldr	r0, [sp, #88]	; 0x58
   13e34:	mov	r1, #128	; 0x80
   13e38:	ldr	r2, [sp, #92]	; 0x5c
   13e3c:	ldr	r3, [sp, #16]
   13e40:	bl	3a38 <g_log@plt>
   13e44:	ldr	r1, [sp, #24]
   13e48:	add	r5, r5, #9
   13e4c:	cmp	r1, r5
   13e50:	bls	143e0 <main@@Base+0xffa8>
   13e54:	ldr	r2, [sp, #16]
   13e58:	adds	r3, r9, #0
   13e5c:	rsb	r8, r9, r2
   13e60:	movne	r3, #1
   13e64:	cmp	r8, #1048576	; 0x100000
   13e68:	movls	r7, #0
   13e6c:	andhi	r7, r3, #1
   13e70:	cmp	r7, #0
   13e74:	bne	143bc <main@@Base+0xff84>
   13e78:	cmp	r8, #1
   13e7c:	movls	r3, #0
   13e80:	andhi	r3, r3, #1
   13e84:	cmp	r3, #0
   13e88:	movne	r6, #1
   13e8c:	bne	13eb4 <main@@Base+0xfa7c>
   13e90:	b	13ef8 <main@@Base+0xfac0>
   13e94:	ldr	r1, [r4]
   13e98:	add	r6, r6, #1
   13e9c:	str	r2, [r4, #4]
   13ea0:	cmp	r6, r8
   13ea4:	strb	r7, [r1, r3]
   13ea8:	ldm	r4, {r2, r3}
   13eac:	strb	r7, [r2, r3]
   13eb0:	bcs	13ef8 <main@@Base+0xfac0>
   13eb4:	mov	r0, sl
   13eb8:	mov	r1, #128	; 0x80
   13ebc:	mov	r2, fp
   13ec0:	add	r3, r6, r9
   13ec4:	bl	3a38 <g_log@plt>
   13ec8:	ldr	r3, [r4, #4]
   13ecc:	ldr	r1, [r4, #8]
   13ed0:	add	r2, r3, #1
   13ed4:	cmp	r2, r1
   13ed8:	bcc	13e94 <main@@Base+0xfa5c>
   13edc:	mov	r0, r4
   13ee0:	mvn	r1, #0
   13ee4:	mov	r2, #0
   13ee8:	bl	3cfc <g_string_insert_c@plt>
   13eec:	add	r6, r6, #1
   13ef0:	cmp	r6, r8
   13ef4:	bcc	13eb4 <main@@Base+0xfa7c>
   13ef8:	ldr	r2, [sp, #20]
   13efc:	add	r0, r2, r5
   13f00:	bl	bec8 <main@@Base+0x7a90>
   13f04:	ldmib	r4, {r3, ip}
   13f08:	add	r1, r3, #1
   13f0c:	cmp	r1, ip
   13f10:	bcs	13f5c <main@@Base+0xfb24>
   13f14:	ldr	r2, [r4]
   13f18:	str	r1, [r4, #4]
   13f1c:	strb	r0, [r2, r3]
   13f20:	ldm	r4, {r2, r3}
   13f24:	strb	r7, [r2, r3]
   13f28:	ldr	r1, [sp, #24]
   13f2c:	add	r5, r5, #2
   13f30:	ldr	r3, [sp, #16]
   13f34:	cmp	r1, r5
   13f38:	add	r2, r3, #1
   13f3c:	bls	1415c <main@@Base+0xfd24>
   13f40:	ldr	r1, [sp, #16]
   13f44:	mov	r8, #1
   13f48:	str	r2, [sp, #16]
   13f4c:	adds	r3, r1, #0
   13f50:	mov	r9, r1
   13f54:	movne	r3, #1
   13f58:	b	13e78 <main@@Base+0xfa40>
   13f5c:	mov	r2, r0
   13f60:	mvn	r1, #0
   13f64:	mov	r0, r4
   13f68:	bl	3cfc <g_string_insert_c@plt>
   13f6c:	b	13f28 <main@@Base+0xfaf0>
   13f70:	ldr	r2, [sp, #16]
   13f74:	cmp	r2, #5
   13f78:	beq	140dc <main@@Base+0xfca4>
   13f7c:	bcc	140b8 <main@@Base+0xfc80>
   13f80:	cmp	r2, #253	; 0xfd
   13f84:	bne	140a0 <main@@Base+0xfc68>
   13f88:	ldr	r2, [sp, #24]
   13f8c:	add	r5, r5, #9
   13f90:	cmp	r2, r5
   13f94:	bls	1400c <main@@Base+0xfbd4>
   13f98:	str	r9, [sp, #16]
   13f9c:	mov	r6, #0
   13fa0:	ldr	r7, [sp, #52]	; 0x34
   13fa4:	mov	r9, r2
   13fa8:	ldr	r8, [sp, #20]
   13fac:	b	13fd0 <main@@Base+0xfb98>
   13fb0:	ldr	r2, [r7]
   13fb4:	add	r5, r5, #2
   13fb8:	str	r1, [r7, #4]
   13fbc:	cmp	r9, r5
   13fc0:	strb	r0, [r2, r3]
   13fc4:	ldm	r7, {r2, r3}
   13fc8:	strb	r6, [r2, r3]
   13fcc:	bls	14008 <main@@Base+0xfbd0>
   13fd0:	add	r0, r8, r5
   13fd4:	bl	bec8 <main@@Base+0x7a90>
   13fd8:	ldr	r3, [r7, #4]
   13fdc:	ldr	r2, [r7, #8]
   13fe0:	add	r1, r3, #1
   13fe4:	cmp	r1, r2
   13fe8:	bcc	13fb0 <main@@Base+0xfb78>
   13fec:	mov	r2, r0
   13ff0:	mvn	r1, #0
   13ff4:	mov	r0, r7
   13ff8:	bl	3cfc <g_string_insert_c@plt>
   13ffc:	add	r5, r5, #2
   14000:	cmp	r9, r5
   14004:	bhi	13fd0 <main@@Base+0xfb98>
   14008:	ldr	r9, [sp, #16]
   1400c:	ldr	r3, [sp, #28]
   14010:	ldr	r2, [sp, #104]	; 0x68
   14014:	add	r5, r3, #11
   14018:	cmp	r5, r2
   1401c:	bcs	13ce4 <main@@Base+0xf8ac>
   14020:	ldr	r1, [sp, #20]
   14024:	ldrb	r3, [r1, r5]
   14028:	cmp	r3, #13
   1402c:	cmpne	r3, #10
   14030:	ldreq	r1, [sp, #20]
   14034:	beq	1404c <main@@Base+0xfc14>
   14038:	b	13ce4 <main@@Base+0xf8ac>
   1403c:	ldrb	r3, [r1, r5]
   14040:	cmp	r3, #13
   14044:	cmpne	r3, #10
   14048:	bne	13ce4 <main@@Base+0xf8ac>
   1404c:	add	r5, r5, #1
   14050:	cmp	r5, r2
   14054:	bcc	1403c <main@@Base+0xfc04>
   14058:	cmp	r5, r2
   1405c:	bcc	13cec <main@@Base+0xf8b4>
   14060:	ldr	r2, [sp, #68]	; 0x44
   14064:	cmp	r2, #0
   14068:	bne	142a8 <main@@Base+0xfe70>
   1406c:	bl	40a4 <fwupd_error_quark@plt>
   14070:	ldr	r3, [pc, #1532]	; 14674 <main@@Base+0x1023c>
   14074:	mov	r1, r0
   14078:	mov	r2, #7
   1407c:	ldr	r0, [sp, #64]	; 0x40
   14080:	add	r3, pc, r3
   14084:	bl	3ae0 <g_set_error_literal@plt>
   14088:	ldr	r3, [sp, #52]	; 0x34
   1408c:	cmp	r3, #0
   14090:	bne	141a4 <main@@Base+0xfd6c>
   14094:	ldr	r5, [sp, #52]	; 0x34
   14098:	mov	r6, r5
   1409c:	b	141b8 <main@@Base+0xfd80>
   140a0:	ldr	r3, [sp, #68]	; 0x44
   140a4:	cmp	r3, #0
   140a8:	beq	1444c <main@@Base+0x10014>
   140ac:	mov	r2, #1
   140b0:	str	r2, [sp, #68]	; 0x44
   140b4:	b	1400c <main@@Base+0xfbd4>
   140b8:	ldr	r3, [sp, #20]
   140bc:	add	r0, r5, #9
   140c0:	add	r0, r3, r0
   140c4:	bl	bf30 <main@@Base+0x7af8>
   140c8:	ldr	r1, [sp, #44]	; 0x2c
   140cc:	str	r0, [sp, #72]	; 0x48
   140d0:	add	r1, r1, r0, lsl #16
   140d4:	str	r1, [sp, #60]	; 0x3c
   140d8:	b	1400c <main@@Base+0xfbd4>
   140dc:	ldr	r2, [sp, #20]
   140e0:	add	r0, r5, #9
   140e4:	add	r0, r2, r0
   140e8:	bl	c00c <main@@Base+0x7bd4>
   140ec:	str	r0, [sp, #60]	; 0x3c
   140f0:	b	1400c <main@@Base+0xfbd4>
   140f4:	ldr	r3, [sp, #20]
   140f8:	add	r0, r5, #9
   140fc:	add	r0, r3, r0
   14100:	bl	bf30 <main@@Base+0x7af8>
   14104:	lsl	r0, r0, #4
   14108:	b	140ec <main@@Base+0xfcb4>
   1410c:	ldr	r2, [sp, #68]	; 0x44
   14110:	cmp	r2, #0
   14114:	bne	14420 <main@@Base+0xffe8>
   14118:	ldr	r1, [sp, #16]
   1411c:	str	r1, [sp, #68]	; 0x44
   14120:	b	1400c <main@@Base+0xfbd4>
   14124:	ldr	r1, [sp, #20]
   14128:	add	r0, r5, #9
   1412c:	add	r0, r1, r0
   14130:	bl	c00c <main@@Base+0x7bd4>
   14134:	b	140ec <main@@Base+0xfcb4>
   14138:	ldr	r0, [sp, #96]	; 0x60
   1413c:	mov	r1, #128	; 0x80
   14140:	ldr	r2, [sp, #100]	; 0x64
   14144:	ldr	r3, [sp, #44]	; 0x2c
   14148:	bl	3a38 <g_log@plt>
   1414c:	ldr	r0, [sp, #40]	; 0x28
   14150:	ldr	r1, [sp, #44]	; 0x2c
   14154:	bl	10bcc <main@@Base+0xc794>
   14158:	b	13e04 <main@@Base+0xf9cc>
   1415c:	str	r2, [sp, #60]	; 0x3c
   14160:	mov	r9, r3
   14164:	b	1400c <main@@Base+0xfbd4>
   14168:	ldr	r1, [sp, #60]	; 0x3c
   1416c:	str	r1, [sp, #16]
   14170:	b	13e24 <main@@Base+0xf9ec>
   14174:	bl	40a4 <fwupd_error_quark@plt>
   14178:	ldr	r3, [sp, #24]
   1417c:	mov	r1, r0
   14180:	mov	r2, #7
   14184:	ldr	r0, [sp, #64]	; 0x40
   14188:	str	r3, [sp]
   1418c:	ldr	r3, [pc, #1252]	; 14678 <main@@Base+0x10240>
   14190:	add	r3, pc, r3
   14194:	bl	4350 <g_set_error@plt>
   14198:	ldr	r3, [sp, #52]	; 0x34
   1419c:	cmp	r3, #0
   141a0:	beq	14094 <main@@Base+0xfc5c>
   141a4:	mov	r5, #0
   141a8:	mov	r6, r5
   141ac:	ldr	r0, [sp, #52]	; 0x34
   141b0:	mov	r1, #1
   141b4:	bl	40bc <g_string_free@plt>
   141b8:	cmp	r4, #0
   141bc:	beq	141cc <main@@Base+0xfd94>
   141c0:	mov	r0, r4
   141c4:	mov	r1, #1
   141c8:	bl	40bc <g_string_free@plt>
   141cc:	cmp	r5, #0
   141d0:	beq	141dc <main@@Base+0xfda4>
   141d4:	mov	r0, r5
   141d8:	bl	414c <g_bytes_unref@plt>
   141dc:	ldr	r1, [sp, #48]	; 0x30
   141e0:	cmp	r1, #0
   141e4:	beq	141f0 <main@@Base+0xfdb8>
   141e8:	ldr	r0, [sp, #48]	; 0x30
   141ec:	bl	4110 <g_object_unref@plt>
   141f0:	ldr	r2, [sp, #40]	; 0x28
   141f4:	cmp	r2, #0
   141f8:	beq	14204 <main@@Base+0xfdcc>
   141fc:	ldr	r0, [sp, #40]	; 0x28
   14200:	bl	4110 <g_object_unref@plt>
   14204:	ldr	r1, [sp, #80]	; 0x50
   14208:	mov	r0, r6
   1420c:	ldr	r2, [sp, #108]	; 0x6c
   14210:	ldr	r3, [r1]
   14214:	cmp	r2, r3
   14218:	bne	14624 <main@@Base+0x101ec>
   1421c:	add	sp, sp, #116	; 0x74
   14220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14224:	ldr	r0, [pc, #1104]	; 1467c <main@@Base+0x10244>
   14228:	ldr	r1, [pc, #1104]	; 14680 <main@@Base+0x10248>
   1422c:	ldr	r2, [pc, #1104]	; 14684 <main@@Base+0x1024c>
   14230:	add	r0, pc, r0
   14234:	add	r1, pc, r1
   14238:	add	r2, pc, r2
   1423c:	bl	3870 <g_return_if_fail_warning@plt>
   14240:	mov	r4, #0
   14244:	str	r4, [sp, #48]	; 0x30
   14248:	str	r4, [sp, #40]	; 0x28
   1424c:	b	14198 <main@@Base+0xfd60>
   14250:	bl	40a4 <fwupd_error_quark@plt>
   14254:	ldrb	ip, [r6]
   14258:	mov	r1, r0
   1425c:	ldr	r3, [pc, #1060]	; 14688 <main@@Base+0x10250>
   14260:	mov	r2, #7
   14264:	ldr	r0, [sp, #64]	; 0x40
   14268:	str	r5, [sp, #4]
   1426c:	add	r3, pc, r3
   14270:	str	ip, [sp]
   14274:	bl	4350 <g_set_error@plt>
   14278:	b	14198 <main@@Base+0xfd60>
   1427c:	bl	40a4 <fwupd_error_quark@plt>
   14280:	ldr	ip, [sp, #104]	; 0x68
   14284:	mov	r1, r0
   14288:	ldr	r3, [pc, #1020]	; 1468c <main@@Base+0x10254>
   1428c:	mov	r2, #7
   14290:	ldr	r0, [sp, #64]	; 0x40
   14294:	str	r5, [sp]
   14298:	add	r3, pc, r3
   1429c:	str	ip, [sp, #4]
   142a0:	bl	4350 <g_set_error@plt>
   142a4:	b	14198 <main@@Base+0xfd60>
   142a8:	ldm	r4, {r0, r1}
   142ac:	bl	390c <g_bytes_new@plt>
   142b0:	mov	r5, r0
   142b4:	ldr	r0, [sp, #40]	; 0x28
   142b8:	mov	r1, r5
   142bc:	bl	10ae8 <main@@Base+0xc6b0>
   142c0:	ldr	r1, [sp, #76]	; 0x4c
   142c4:	ldr	r0, [sp, #40]	; 0x28
   142c8:	bl	10bcc <main@@Base+0xc794>
   142cc:	ldr	r0, [sp, #48]	; 0x30
   142d0:	ldr	r1, [sp, #40]	; 0x28
   142d4:	bl	15ea8 <main@@Base+0x11a70>
   142d8:	ldr	r0, [sp, #84]	; 0x54
   142dc:	ldr	r1, [sp, #48]	; 0x30
   142e0:	bl	11624 <main@@Base+0xd1ec>
   142e4:	ldr	r0, [sp, #84]	; 0x54
   142e8:	mov	r1, #4
   142ec:	bl	11b20 <main@@Base+0xd6e8>
   142f0:	ldr	r1, [sp, #52]	; 0x34
   142f4:	ldr	r3, [r1, #4]
   142f8:	cmp	r3, #0
   142fc:	bne	144f4 <main@@Base+0x100bc>
   14300:	mov	r6, #1
   14304:	b	141ac <main@@Base+0xfd74>
   14308:	bl	40a4 <fwupd_error_quark@plt>
   1430c:	ldr	r3, [sp, #24]
   14310:	mov	r1, r0
   14314:	str	r5, [sp]
   14318:	mov	r2, #7
   1431c:	ldr	r0, [sp, #64]	; 0x40
   14320:	str	r3, [sp, #4]
   14324:	ldr	r3, [pc, #868]	; 14690 <main@@Base+0x10258>
   14328:	str	r8, [sp, #8]
   1432c:	add	r3, pc, r3
   14330:	bl	4350 <g_set_error@plt>
   14334:	b	14198 <main@@Base+0xfd60>
   14338:	mov	r6, r0
   1433c:	mov	r5, #0
   14340:	ldr	r2, [sp, #52]	; 0x34
   14344:	cmp	r2, #0
   14348:	beq	14358 <main@@Base+0xff20>
   1434c:	ldr	r0, [sp, #52]	; 0x34
   14350:	mov	r1, #1
   14354:	bl	40bc <g_string_free@plt>
   14358:	cmp	r4, #0
   1435c:	beq	1436c <main@@Base+0xff34>
   14360:	mov	r0, r4
   14364:	mov	r1, #1
   14368:	bl	40bc <g_string_free@plt>
   1436c:	mov	r4, r6
   14370:	cmp	r5, #0
   14374:	beq	14380 <main@@Base+0xff48>
   14378:	mov	r0, r5
   1437c:	bl	414c <g_bytes_unref@plt>
   14380:	ldr	r3, [sp, #48]	; 0x30
   14384:	cmp	r3, #0
   14388:	beq	14394 <main@@Base+0xff5c>
   1438c:	mov	r0, r3
   14390:	bl	4110 <g_object_unref@plt>
   14394:	ldr	r1, [sp, #40]	; 0x28
   14398:	cmp	r1, #0
   1439c:	beq	143a8 <main@@Base+0xff70>
   143a0:	mov	r0, r1
   143a4:	bl	4110 <g_object_unref@plt>
   143a8:	mov	r0, r4
   143ac:	bl	42f0 <_Unwind_Resume@plt>
   143b0:	b	14338 <main@@Base+0xff00>
   143b4:	b	14338 <main@@Base+0xff00>
   143b8:	b	14338 <main@@Base+0xff00>
   143bc:	bl	40a4 <fwupd_error_quark@plt>
   143c0:	ldr	r3, [pc, #716]	; 14694 <main@@Base+0x1025c>
   143c4:	mov	r1, r0
   143c8:	str	r8, [sp]
   143cc:	mov	r2, #7
   143d0:	ldr	r0, [sp, #64]	; 0x40
   143d4:	add	r3, pc, r3
   143d8:	bl	4350 <g_set_error@plt>
   143dc:	b	14198 <main@@Base+0xfd60>
   143e0:	ldr	r3, [sp, #16]
   143e4:	str	r3, [sp, #60]	; 0x3c
   143e8:	b	1400c <main@@Base+0xfbd4>
   143ec:	b	14338 <main@@Base+0xff00>
   143f0:	b	14338 <main@@Base+0xff00>
   143f4:	b	14338 <main@@Base+0xff00>
   143f8:	bl	40a4 <fwupd_error_quark@plt>
   143fc:	ldr	r3, [sp, #16]
   14400:	mov	r1, r0
   14404:	mov	r2, #7
   14408:	ldr	r0, [sp, #64]	; 0x40
   1440c:	stm	sp, {r3, r9}
   14410:	ldr	r3, [pc, #640]	; 14698 <main@@Base+0x10260>
   14414:	add	r3, pc, r3
   14418:	bl	4350 <g_set_error@plt>
   1441c:	b	14198 <main@@Base+0xfd60>
   14420:	bl	40a4 <fwupd_error_quark@plt>
   14424:	ldr	r3, [pc, #624]	; 1469c <main@@Base+0x10264>
   14428:	mov	r1, r0
   1442c:	mov	r2, #7
   14430:	ldr	r0, [sp, #64]	; 0x40
   14434:	add	r3, pc, r3
   14438:	bl	3ae0 <g_set_error_literal@plt>
   1443c:	b	14198 <main@@Base+0xfd60>
   14440:	b	14338 <main@@Base+0xff00>
   14444:	b	14338 <main@@Base+0xff00>
   14448:	b	14338 <main@@Base+0xff00>
   1444c:	bl	40a4 <fwupd_error_quark@plt>
   14450:	ldr	r2, [sp, #16]
   14454:	mov	r1, r0
   14458:	ldr	r3, [pc, #576]	; 146a0 <main@@Base+0x10268>
   1445c:	ldr	r0, [sp, #64]	; 0x40
   14460:	str	r2, [sp]
   14464:	add	r3, pc, r3
   14468:	mov	r2, #7
   1446c:	bl	4350 <g_set_error@plt>
   14470:	b	14198 <main@@Base+0xfd60>
   14474:	mov	r6, r0
   14478:	mov	r5, #0
   1447c:	b	1434c <main@@Base+0xff14>
   14480:	b	14338 <main@@Base+0xff00>
   14484:	b	14338 <main@@Base+0xff00>
   14488:	b	14338 <main@@Base+0xff00>
   1448c:	b	14338 <main@@Base+0xff00>
   14490:	b	14338 <main@@Base+0xff00>
   14494:	b	14338 <main@@Base+0xff00>
   14498:	b	14338 <main@@Base+0xff00>
   1449c:	b	14338 <main@@Base+0xff00>
   144a0:	b	14338 <main@@Base+0xff00>
   144a4:	b	14338 <main@@Base+0xff00>
   144a8:	b	14338 <main@@Base+0xff00>
   144ac:	b	14338 <main@@Base+0xff00>
   144b0:	mov	r4, #0
   144b4:	mov	r6, r0
   144b8:	mov	r5, r4
   144bc:	b	14340 <main@@Base+0xff08>
   144c0:	b	144b0 <main@@Base+0x10078>
   144c4:	mov	r4, #0
   144c8:	mov	r6, r0
   144cc:	mov	r5, r4
   144d0:	str	r4, [sp, #40]	; 0x28
   144d4:	b	14340 <main@@Base+0xff08>
   144d8:	b	144c4 <main@@Base+0x1008c>
   144dc:	mov	r4, #0
   144e0:	mov	r6, r0
   144e4:	mov	r5, r4
   144e8:	str	r4, [sp, #48]	; 0x30
   144ec:	str	r4, [sp, #40]	; 0x28
   144f0:	b	14340 <main@@Base+0xff08>
   144f4:	bl	109bc <main@@Base+0xc584>
   144f8:	mov	r7, r0
   144fc:	bl	15ad4 <main@@Base+0x1169c>
   14500:	ldr	r2, [sp, #52]	; 0x34
   14504:	mov	r6, r0
   14508:	ldm	r2, {r0, r1}
   1450c:	bl	40f8 <g_bytes_new_static@plt>
   14510:	mov	r8, r0
   14514:	mov	r0, r7
   14518:	mov	r1, r8
   1451c:	bl	10ae8 <main@@Base+0xc6b0>
   14520:	mov	r0, r6
   14524:	mov	r1, r7
   14528:	bl	15ea8 <main@@Base+0x11a70>
   1452c:	ldr	r1, [pc, #368]	; 146a4 <main@@Base+0x1026c>
   14530:	mov	r0, r6
   14534:	add	r1, pc, r1
   14538:	bl	16040 <main@@Base+0x11c08>
   1453c:	ldr	r0, [sp, #84]	; 0x54
   14540:	mov	r1, r6
   14544:	bl	11624 <main@@Base+0xd1ec>
   14548:	cmp	r8, #0
   1454c:	beq	14558 <main@@Base+0x10120>
   14550:	mov	r0, r8
   14554:	bl	414c <g_bytes_unref@plt>
   14558:	cmp	r6, #0
   1455c:	beq	14568 <main@@Base+0x10130>
   14560:	mov	r0, r6
   14564:	bl	4110 <g_object_unref@plt>
   14568:	cmp	r7, #0
   1456c:	beq	14300 <main@@Base+0xfec8>
   14570:	mov	r0, r7
   14574:	bl	4110 <g_object_unref@plt>
   14578:	b	14300 <main@@Base+0xfec8>
   1457c:	cmp	r8, #0
   14580:	mov	r9, r0
   14584:	beq	14590 <main@@Base+0x10158>
   14588:	mov	r0, r8
   1458c:	bl	414c <g_bytes_unref@plt>
   14590:	cmp	r6, #0
   14594:	beq	145a0 <main@@Base+0x10168>
   14598:	mov	r0, r6
   1459c:	bl	4110 <g_object_unref@plt>
   145a0:	mov	r6, r9
   145a4:	cmp	r7, #0
   145a8:	beq	1434c <main@@Base+0xff14>
   145ac:	mov	r0, r7
   145b0:	bl	4110 <g_object_unref@plt>
   145b4:	b	1434c <main@@Base+0xff14>
   145b8:	mov	r9, r0
   145bc:	b	14590 <main@@Base+0x10158>
   145c0:	mov	r6, r0
   145c4:	b	145a4 <main@@Base+0x1016c>
   145c8:	mov	r6, r0
   145cc:	b	1434c <main@@Base+0xff14>
   145d0:	mov	r1, #0
   145d4:	mov	r6, r0
   145d8:	str	r1, [sp, #40]	; 0x28
   145dc:	mov	r5, r1
   145e0:	str	r1, [sp, #48]	; 0x30
   145e4:	b	1436c <main@@Base+0xff34>
   145e8:	b	14338 <main@@Base+0xff00>
   145ec:	b	14338 <main@@Base+0xff00>
   145f0:	b	14338 <main@@Base+0xff00>
   145f4:	b	14338 <main@@Base+0xff00>
   145f8:	b	14338 <main@@Base+0xff00>
   145fc:	mov	r6, r0
   14600:	b	14340 <main@@Base+0xff08>
   14604:	b	14338 <main@@Base+0xff00>
   14608:	b	14338 <main@@Base+0xff00>
   1460c:	b	14338 <main@@Base+0xff00>
   14610:	b	14338 <main@@Base+0xff00>
   14614:	b	14338 <main@@Base+0xff00>
   14618:	b	14338 <main@@Base+0xff00>
   1461c:	b	14338 <main@@Base+0xff00>
   14620:	b	144dc <main@@Base+0x100a4>
   14624:	bl	3e4c <__stack_chk_fail@plt>
   14628:	mov	r4, r0
   1462c:	b	14394 <main@@Base+0xff5c>
   14630:	mov	r4, r0
   14634:	b	14380 <main@@Base+0xff48>
   14638:	mov	r4, r0
   1463c:	b	14370 <main@@Base+0xff38>
   14640:	mov	r6, r0
   14644:	b	14358 <main@@Base+0xff20>
   14648:	b	14338 <main@@Base+0xff00>
   1464c:	andeq	sl, r2, ip, ror #30
   14650:	andeq	r0, r0, r0, lsr r4
   14654:	andeq	r3, r1, r8, lsl #29
   14658:	andeq	r1, r1, r4, lsl #20
   1465c:	strdeq	r1, [r1], -r4
   14660:	andeq	r4, r1, r0, ror #13
   14664:	andeq	r1, r1, r4, ror #3
   14668:	andeq	r4, r1, ip, lsl #14
   1466c:	andeq	r1, r1, r8, asr #3
   14670:	andeq	r4, r1, ip, ror r6
   14674:	muleq	r1, r4, r3
   14678:	andeq	r4, r1, r4, ror #2
   1467c:	andeq	r0, r1, ip, asr ip
   14680:	andeq	r4, r1, ip, lsr r0
   14684:	andeq	r3, r1, r4, asr r8
   14688:	andeq	r4, r1, ip, lsr r0
   1468c:	andeq	r4, r1, r8, lsr r0
   14690:	andeq	r3, r1, r4, ror #31
   14694:	andeq	r3, r1, r0, asr #31
   14698:	andeq	r3, r1, r8, asr #30
   1469c:	andeq	r3, r1, r0, lsr #31
   146a0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   146a4:	andeq	r3, r1, r0, lsl r6
   146a8:	ldr	r3, [pc, #560]	; 148e0 <main@@Base+0x104a8>
   146ac:	ldr	r2, [pc, #560]	; 148e4 <main@@Base+0x104ac>
   146b0:	add	r3, pc, r3
   146b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146b8:	mov	r4, r0
   146bc:	ldr	r2, [r3, r2]
   146c0:	sub	sp, sp, #68	; 0x44
   146c4:	ldr	r0, [pc, #540]	; 148e8 <main@@Base+0x104b0>
   146c8:	ldr	r3, [r2]
   146cc:	add	r0, pc, r0
   146d0:	str	r2, [sp, #44]	; 0x2c
   146d4:	str	r3, [sp, #60]	; 0x3c
   146d8:	bl	3990 <g_string_new@plt>
   146dc:	mov	r9, r0
   146e0:	mov	r0, r4
   146e4:	bl	114c8 <main@@Base+0xd090>
   146e8:	ldr	r3, [r0, #4]
   146ec:	str	r0, [sp, #36]	; 0x24
   146f0:	cmp	r3, #0
   146f4:	beq	14864 <main@@Base+0x1042c>
   146f8:	ldr	r1, [pc, #492]	; 148ec <main@@Base+0x104b4>
   146fc:	add	r2, sp, #52	; 0x34
   14700:	add	r3, sp, #56	; 0x38
   14704:	str	r2, [sp, #28]
   14708:	add	r1, pc, r1
   1470c:	str	r3, [sp, #12]
   14710:	str	r1, [sp, #40]	; 0x28
   14714:	mov	r1, #0
   14718:	str	r1, [sp, #32]
   1471c:	ldr	r2, [sp, #36]	; 0x24
   14720:	ldr	r1, [sp, #32]
   14724:	ldr	r3, [r2]
   14728:	ldr	r4, [r3, r1, lsl #2]
   1472c:	mov	r0, r4
   14730:	bl	15d48 <main@@Base+0x11910>
   14734:	ldr	r1, [sp, #40]	; 0x28
   14738:	bl	441c <g_strcmp0@plt>
   1473c:	cmp	r0, #0
   14740:	moveq	r0, #253	; 0xfd
   14744:	movne	r0, #0
   14748:	str	r0, [sp, #16]
   1474c:	mov	r0, r4
   14750:	bl	15ae8 <main@@Base+0x116b0>
   14754:	ldr	r3, [r0, #4]
   14758:	str	r0, [sp, #24]
   1475c:	cmp	r3, #0
   14760:	movne	r2, #0
   14764:	strne	r2, [sp, #20]
   14768:	beq	14848 <main@@Base+0x10410>
   1476c:	ldr	r1, [sp, #24]
   14770:	ldr	r2, [sp, #20]
   14774:	ldr	r3, [r1]
   14778:	ldr	r5, [r3, r2, lsl #2]
   1477c:	mov	r0, r5
   14780:	bl	109d0 <main@@Base+0xc598>
   14784:	mov	r4, r0
   14788:	mov	r0, r5
   1478c:	bl	10a58 <main@@Base+0xc620>
   14790:	mov	sl, r0
   14794:	add	r1, sp, #52	; 0x34
   14798:	mov	r0, r4
   1479c:	bl	4320 <g_bytes_get_data@plt>
   147a0:	ldr	r5, [sp, #52]	; 0x34
   147a4:	mov	fp, r0
   147a8:	cmp	r5, #0
   147ac:	movne	r8, #0
   147b0:	movne	r4, r8
   147b4:	beq	1482c <main@@Base+0x103f4>
   147b8:	add	r7, r4, sl
   147bc:	rsb	r5, r4, r5
   147c0:	cmp	r5, #16
   147c4:	movcs	r5, #16
   147c8:	lsr	r6, r7, #16
   147cc:	cmp	r6, r8
   147d0:	beq	14804 <main@@Base+0x103cc>
   147d4:	add	r0, sp, #56	; 0x38
   147d8:	mov	r1, r6
   147dc:	movw	r2, #4321	; 0x10e1
   147e0:	bl	1e2b8 <main@@Base+0x19e80>
   147e4:	mov	r3, #2
   147e8:	mov	r0, r9
   147ec:	str	r3, [sp]
   147f0:	mov	r1, #0
   147f4:	mov	r2, #4
   147f8:	add	r3, sp, #56	; 0x38
   147fc:	bl	13acc <main@@Base+0xf694>
   14800:	mov	r8, r6
   14804:	str	r5, [sp]
   14808:	uxth	r1, r7
   1480c:	mov	r0, r9
   14810:	ldr	r2, [sp, #16]
   14814:	add	r3, fp, r4
   14818:	bl	13acc <main@@Base+0xf694>
   1481c:	ldr	r5, [sp, #52]	; 0x34
   14820:	add	r4, r4, #16
   14824:	cmp	r5, r4
   14828:	bhi	147b8 <main@@Base+0x10380>
   1482c:	ldr	r1, [sp, #24]
   14830:	ldr	r2, [sp, #20]
   14834:	ldr	r3, [r1, #4]
   14838:	add	r2, r2, #1
   1483c:	str	r2, [sp, #20]
   14840:	cmp	r2, r3
   14844:	bcc	1476c <main@@Base+0x10334>
   14848:	ldr	r2, [sp, #36]	; 0x24
   1484c:	ldr	r1, [sp, #32]
   14850:	ldr	r3, [r2, #4]
   14854:	add	r1, r1, #1
   14858:	str	r1, [sp, #32]
   1485c:	cmp	r3, r1
   14860:	bhi	1471c <main@@Base+0x102e4>
   14864:	mov	r3, #0
   14868:	mov	r0, r9
   1486c:	mov	r1, r3
   14870:	str	r3, [sp]
   14874:	mov	r2, #1
   14878:	bl	13acc <main@@Base+0xf694>
   1487c:	ldm	r9, {r0, r1}
   14880:	bl	390c <g_bytes_new@plt>
   14884:	mov	r4, r0
   14888:	mov	r1, #1
   1488c:	mov	r0, r9
   14890:	bl	40bc <g_string_free@plt>
   14894:	ldr	r1, [sp, #44]	; 0x2c
   14898:	ldr	r2, [sp, #60]	; 0x3c
   1489c:	mov	r0, r4
   148a0:	ldr	r3, [r1]
   148a4:	cmp	r2, r3
   148a8:	bne	148dc <main@@Base+0x104a4>
   148ac:	add	sp, sp, #68	; 0x44
   148b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148b4:	cmp	r9, #0
   148b8:	mov	r4, r0
   148bc:	beq	148cc <main@@Base+0x10494>
   148c0:	mov	r0, r9
   148c4:	mov	r1, #1
   148c8:	bl	40bc <g_string_free@plt>
   148cc:	mov	r0, r4
   148d0:	bl	42f0 <_Unwind_Resume@plt>
   148d4:	mov	r4, r0
   148d8:	b	148c0 <main@@Base+0x10488>
   148dc:	bl	3e4c <__stack_chk_fail@plt>
   148e0:	ldrdeq	sl, [r2], -r0
   148e4:	andeq	r0, r0, r0, lsr r4
   148e8:			; <UNDEFINED> instruction: 0x00010fb4
   148ec:	andeq	r3, r1, ip, lsr r4
   148f0:	ldr	r3, [pc, #104]	; 14960 <main@@Base+0x10528>
   148f4:	ldr	r2, [pc, #104]	; 14964 <main@@Base+0x1052c>
   148f8:	add	r3, pc, r3
   148fc:	push	{r4, lr}
   14900:	sub	sp, sp, #8
   14904:	ldr	r4, [r3, r2]
   14908:	mov	r1, sp
   1490c:	ldr	r3, [r4]
   14910:	str	r3, [sp, #4]
   14914:	bl	4320 <g_bytes_get_data@plt>
   14918:	ldr	r3, [sp]
   1491c:	cmp	r3, #11
   14920:	movls	r0, #0
   14924:	bls	14944 <main@@Base+0x1050c>
   14928:	ldr	r1, [pc, #56]	; 14968 <main@@Base+0x10530>
   1492c:	mov	r2, #2
   14930:	add	r1, pc, r1
   14934:	bl	42fc <memcmp@plt>
   14938:	cmp	r0, #0
   1493c:	moveq	r0, #5
   14940:	movne	r0, #0
   14944:	ldr	r2, [sp, #4]
   14948:	ldr	r3, [r4]
   1494c:	cmp	r2, r3
   14950:	bne	1495c <main@@Base+0x10524>
   14954:	add	sp, sp, #8
   14958:	pop	{r4, pc}
   1495c:	bl	3e4c <__stack_chk_fail@plt>
   14960:	andeq	sl, r2, r8, lsl #5
   14964:	andeq	r0, r0, r0, lsr r4
   14968:	andeq	r3, r1, r0, lsr fp
   1496c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14970:	sub	sp, sp, #100	; 0x64
   14974:	ldr	ip, [pc, #2092]	; 151a8 <main@@Base+0x10d70>
   14978:	mov	r4, r1
   1497c:	str	r2, [sp, #68]	; 0x44
   14980:	mov	r5, r3
   14984:	add	ip, pc, ip
   14988:	str	ip, [sp, #16]
   1498c:	ldr	r1, [sp, #136]	; 0x88
   14990:	ldr	ip, [pc, #2068]	; 151ac <main@@Base+0x10d74>
   14994:	ldr	r2, [sp, #16]
   14998:	str	r0, [sp, #84]	; 0x54
   1499c:	mov	r0, #0
   149a0:	str	r1, [sp, #72]	; 0x48
   149a4:	ldr	ip, [r2, ip]
   149a8:	ldr	r3, [ip]
   149ac:	str	ip, [sp, #56]	; 0x38
   149b0:	str	r3, [sp, #92]	; 0x5c
   149b4:	bl	3990 <g_string_new@plt>
   149b8:	cmp	r4, #0
   149bc:	mov	r9, r0
   149c0:	beq	14ee4 <main@@Base+0x10aac>
   149c4:	bl	109bc <main@@Base+0xc584>
   149c8:	str	r0, [sp, #36]	; 0x24
   149cc:	add	r1, sp, #88	; 0x58
   149d0:	mov	r0, r4
   149d4:	bl	4320 <g_bytes_get_data@plt>
   149d8:	mov	r8, r0
   149dc:	ldr	r0, [pc, #1996]	; 151b0 <main@@Base+0x10d78>
   149e0:	add	r0, pc, r0
   149e4:	bl	3990 <g_string_new@plt>
   149e8:	ldr	ip, [pc, #1988]	; 151b4 <main@@Base+0x10d7c>
   149ec:	mov	r6, r0
   149f0:	ldr	r1, [sp, #88]	; 0x58
   149f4:	mov	r4, #0
   149f8:	add	ip, pc, ip
   149fc:	ldr	r2, [pc, #1972]	; 151b8 <main@@Base+0x10d80>
   14a00:	str	ip, [sp, #60]	; 0x3c
   14a04:	and	r5, r5, #1
   14a08:	ldr	r3, [pc, #1964]	; 151bc <main@@Base+0x10d84>
   14a0c:	add	r2, pc, r2
   14a10:	ldr	ip, [pc, #1960]	; 151c0 <main@@Base+0x10d88>
   14a14:	add	r3, pc, r3
   14a18:	str	r5, [sp, #28]
   14a1c:	add	ip, pc, ip
   14a20:	str	r4, [sp, #44]	; 0x2c
   14a24:	str	r4, [sp, #48]	; 0x30
   14a28:	str	r4, [sp, #32]
   14a2c:	str	r4, [sp, #40]	; 0x28
   14a30:	str	r4, [sp, #52]	; 0x34
   14a34:	str	r2, [sp, #64]	; 0x40
   14a38:	str	r3, [sp, #76]	; 0x4c
   14a3c:	str	ip, [sp, #80]	; 0x50
   14a40:	cmp	r4, r1
   14a44:	bcs	14bc8 <main@@Base+0x10790>
   14a48:	ldrb	r3, [r8, r4]
   14a4c:	add	r7, r8, r4
   14a50:	cmp	r3, #83	; 0x53
   14a54:	bne	14f60 <main@@Base+0x10b28>
   14a58:	add	r3, r4, #10
   14a5c:	cmp	r3, r1
   14a60:	bhi	14f34 <main@@Base+0x10afc>
   14a64:	add	r5, r4, #2
   14a68:	ldrb	r7, [r7, #1]
   14a6c:	add	r5, r8, r5
   14a70:	mov	r0, r5
   14a74:	str	r7, [sp, #24]
   14a78:	bl	bec8 <main@@Base+0x7a90>
   14a7c:	mov	r1, #2
   14a80:	ldr	r3, [sp, #88]	; 0x58
   14a84:	smlabb	r1, r1, r0, r4
   14a88:	mov	fp, r0
   14a8c:	add	r2, r1, #4
   14a90:	cmp	r2, r3
   14a94:	str	r1, [sp, #20]
   14a98:	bhi	14f8c <main@@Base+0x10b54>
   14a9c:	ldr	r2, [sp, #28]
   14aa0:	cmp	r2, #0
   14aa4:	bne	14b0c <main@@Base+0x106d4>
   14aa8:	cmp	r0, #0
   14aac:	beq	14f2c <main@@Base+0x10af4>
   14ab0:	sub	sl, r0, #1
   14ab4:	add	r3, r8, #4
   14ab8:	add	r3, r3, r4
   14abc:	mov	ip, #2
   14ac0:	uxtb	sl, sl
   14ac4:	mov	r7, r2
   14ac8:	smlabb	sl, ip, sl, r3
   14acc:	mov	r0, r5
   14ad0:	bl	bec8 <main@@Base+0x7a90>
   14ad4:	add	r5, r5, #2
   14ad8:	add	r0, r7, r0
   14adc:	cmp	r5, sl
   14ae0:	uxtb	r7, r0
   14ae4:	bne	14acc <main@@Base+0x10694>
   14ae8:	mvn	r7, r7
   14aec:	uxtb	r7, r7
   14af0:	ldr	r1, [sp, #20]
   14af4:	add	r0, r1, #2
   14af8:	add	r0, r8, r0
   14afc:	bl	bec8 <main@@Base+0x7a90>
   14b00:	cmp	r0, r7
   14b04:	mov	r5, r0
   14b08:	bne	14ff0 <main@@Base+0x10bb8>
   14b0c:	ldr	r2, [sp, #24]
   14b10:	sub	r3, r2, #48	; 0x30
   14b14:	cmp	r3, #9
   14b18:	addls	pc, pc, r3, lsl #2
   14b1c:	b	14e20 <main@@Base+0x109e8>
   14b20:	b	14d44 <main@@Base+0x1090c>
   14b24:	b	14d2c <main@@Base+0x108f4>
   14b28:	b	14d14 <main@@Base+0x108dc>
   14b2c:	b	14c3c <main@@Base+0x10804>
   14b30:	b	14e20 <main@@Base+0x109e8>
   14b34:	b	14c14 <main@@Base+0x107dc>
   14b38:	b	14e20 <main@@Base+0x109e8>
   14b3c:	b	14c04 <main@@Base+0x107cc>
   14b40:	b	14bf4 <main@@Base+0x107bc>
   14b44:	b	14b48 <main@@Base+0x10710>
   14b48:	add	r0, r4, #4
   14b4c:	add	r0, r8, r0
   14b50:	bl	bf30 <main@@Base+0x7af8>
   14b54:	mov	r3, r0
   14b58:	mov	r1, #128	; 0x80
   14b5c:	ldr	r0, [sp, #60]	; 0x3c
   14b60:	ldr	r2, [sp, #64]	; 0x40
   14b64:	bl	3a38 <g_log@plt>
   14b68:	mov	r2, #1
   14b6c:	str	r2, [sp, #52]	; 0x34
   14b70:	mov	r3, #4
   14b74:	mov	ip, #2
   14b78:	smlabb	r3, ip, fp, r3
   14b7c:	ldr	r1, [sp, #88]	; 0x58
   14b80:	add	r4, r4, r3
   14b84:	cmp	r4, r1
   14b88:	bcs	14a40 <main@@Base+0x10608>
   14b8c:	ldrb	r3, [r8, r4]
   14b90:	add	r2, r8, r4
   14b94:	cmp	r3, #10
   14b98:	cmpne	r3, #13
   14b9c:	beq	14bb4 <main@@Base+0x1077c>
   14ba0:	b	14a40 <main@@Base+0x10608>
   14ba4:	ldrb	r3, [r2, #1]!
   14ba8:	cmp	r3, #13
   14bac:	cmpne	r3, #10
   14bb0:	bne	14a40 <main@@Base+0x10608>
   14bb4:	add	r4, r4, #1
   14bb8:	cmp	r4, r1
   14bbc:	bcc	14ba4 <main@@Base+0x1076c>
   14bc0:	cmp	r4, r1
   14bc4:	bcc	14a48 <main@@Base+0x10610>
   14bc8:	ldr	r1, [sp, #52]	; 0x34
   14bcc:	cmp	r1, #0
   14bd0:	bne	14fb8 <main@@Base+0x10b80>
   14bd4:	bl	40a4 <fwupd_error_quark@plt>
   14bd8:	ldr	r3, [pc, #1508]	; 151c4 <main@@Base+0x10d8c>
   14bdc:	mov	r1, r0
   14be0:	mov	r2, #7
   14be4:	ldr	r0, [sp, #72]	; 0x48
   14be8:	add	r3, pc, r3
   14bec:	bl	3ae0 <g_set_error_literal@plt>
   14bf0:	b	14e44 <main@@Base+0x10a0c>
   14bf4:	add	r0, r4, #4
   14bf8:	add	r0, r8, r0
   14bfc:	bl	bf98 <main@@Base+0x7b60>
   14c00:	b	14b54 <main@@Base+0x1071c>
   14c04:	add	r0, r4, #4
   14c08:	add	r0, r8, r0
   14c0c:	bl	c00c <main@@Base+0x7bd4>
   14c10:	b	14b54 <main@@Base+0x1071c>
   14c14:	add	r0, r4, #4
   14c18:	add	r0, r8, r0
   14c1c:	bl	bf30 <main@@Base+0x7af8>
   14c20:	ldr	r1, [sp, #32]
   14c24:	mov	r5, r0
   14c28:	cmp	r1, r0
   14c2c:	bne	15018 <main@@Base+0x10be0>
   14c30:	mov	ip, #1
   14c34:	str	ip, [sp, #52]	; 0x34
   14c38:	b	14b70 <main@@Base+0x10738>
   14c3c:	add	r0, r4, #4
   14c40:	add	r0, r8, r0
   14c44:	bl	c00c <main@@Base+0x7bd4>
   14c48:	mov	sl, r0
   14c4c:	mov	r5, #6
   14c50:	ldr	ip, [sp, #40]	; 0x28
   14c54:	cmp	ip, #0
   14c58:	beq	15064 <main@@Base+0x10c2c>
   14c5c:	ldr	r1, [sp, #48]	; 0x30
   14c60:	cmp	r1, sl
   14c64:	bhi	15084 <main@@Base+0x10c4c>
   14c68:	ldr	r3, [sp, #68]	; 0x44
   14c6c:	cmp	r3, sl
   14c70:	bhi	14eb8 <main@@Base+0x10a80>
   14c74:	cmp	r5, fp
   14c78:	movls	r7, #0
   14c7c:	bls	14ca8 <main@@Base+0x10870>
   14c80:	b	14cec <main@@Base+0x108b4>
   14c84:	ldr	r2, [r6]
   14c88:	add	r5, r5, #1
   14c8c:	str	r1, [r6, #4]
   14c90:	uxtb	r5, r5
   14c94:	strb	r0, [r2, r3]
   14c98:	cmp	fp, r5
   14c9c:	ldm	r6, {r2, r3}
   14ca0:	strb	r7, [r2, r3]
   14ca4:	bcc	14cec <main@@Base+0x108b4>
   14ca8:	mov	r3, #2
   14cac:	smlabb	r0, r3, r5, r4
   14cb0:	add	r0, r8, r0
   14cb4:	bl	bec8 <main@@Base+0x7a90>
   14cb8:	ldr	r3, [r6, #4]
   14cbc:	ldr	r2, [r6, #8]
   14cc0:	add	r1, r3, #1
   14cc4:	cmp	r1, r2
   14cc8:	bcc	14c84 <main@@Base+0x1084c>
   14ccc:	mov	r2, r0
   14cd0:	mvn	r1, #0
   14cd4:	mov	r0, r6
   14cd8:	bl	3cfc <g_string_insert_c@plt>
   14cdc:	add	r5, r5, #1
   14ce0:	uxtb	r5, r5
   14ce4:	cmp	fp, r5
   14ce8:	bcs	14ca8 <main@@Base+0x10870>
   14cec:	ldr	ip, [sp, #44]	; 0x2c
   14cf0:	cmp	ip, #0
   14cf4:	moveq	ip, sl
   14cf8:	str	ip, [sp, #44]	; 0x2c
   14cfc:	ldr	ip, [sp, #32]
   14d00:	str	sl, [sp, #48]	; 0x30
   14d04:	add	r3, ip, #1
   14d08:	uxth	r3, r3
   14d0c:	str	r3, [sp, #32]
   14d10:	b	14b70 <main@@Base+0x10738>
   14d14:	add	r0, r4, #4
   14d18:	add	r0, r8, r0
   14d1c:	bl	bf98 <main@@Base+0x7b60>
   14d20:	mov	sl, r0
   14d24:	mov	r5, #5
   14d28:	b	14c50 <main@@Base+0x10818>
   14d2c:	add	r0, r4, #4
   14d30:	add	r0, r8, r0
   14d34:	bl	bf30 <main@@Base+0x7af8>
   14d38:	mov	sl, r0
   14d3c:	mov	r5, #4
   14d40:	b	14c50 <main@@Base+0x10818>
   14d44:	add	r0, r4, #4
   14d48:	add	r0, r8, r0
   14d4c:	bl	bf30 <main@@Base+0x7af8>
   14d50:	ldr	r3, [sp, #40]	; 0x28
   14d54:	mov	r5, r0
   14d58:	cmp	r3, #0
   14d5c:	bne	15044 <main@@Base+0x10c0c>
   14d60:	cmp	r0, #0
   14d64:	bne	150b0 <main@@Base+0x10c78>
   14d68:	cmp	fp, #3
   14d6c:	ldrhi	r7, [sp, #40]	; 0x28
   14d70:	movhi	r5, #4
   14d74:	bhi	14da0 <main@@Base+0x10968>
   14d78:	b	14e08 <main@@Base+0x109d0>
   14d7c:	ldr	r1, [r9]
   14d80:	add	r5, r5, #1
   14d84:	str	r2, [r9, #4]
   14d88:	uxtb	r5, r5
   14d8c:	strb	r0, [r1, r3]
   14d90:	cmp	fp, r5
   14d94:	ldm	r9, {r2, r3}
   14d98:	strb	r7, [r2, r3]
   14d9c:	bcc	14e08 <main@@Base+0x109d0>
   14da0:	mov	r1, #2
   14da4:	smlabb	r0, r1, r5, r4
   14da8:	add	r0, r8, r0
   14dac:	bl	bec8 <main@@Base+0x7a90>
   14db0:	ldr	r2, [pc, #1040]	; 151c8 <main@@Base+0x10d90>
   14db4:	sxth	r3, r0
   14db8:	ldr	ip, [sp, #16]
   14dbc:	lsl	r3, r3, #1
   14dc0:	ldr	r2, [ip, r2]
   14dc4:	ldr	r2, [r2]
   14dc8:	ldrh	r3, [r2, r3]
   14dcc:	tst	r3, #16
   14dd0:	beq	14e08 <main@@Base+0x109d0>
   14dd4:	ldr	r3, [r9, #4]
   14dd8:	ldr	r1, [r9, #8]
   14ddc:	add	r2, r3, #1
   14de0:	cmp	r2, r1
   14de4:	bcc	14d7c <main@@Base+0x10944>
   14de8:	mov	r2, r0
   14dec:	mvn	r1, #0
   14df0:	mov	r0, r9
   14df4:	bl	3cfc <g_string_insert_c@plt>
   14df8:	add	r5, r5, #1
   14dfc:	uxtb	r5, r5
   14e00:	cmp	fp, r5
   14e04:	bcs	14da0 <main@@Base+0x10968>
   14e08:	ldr	r3, [r9, #4]
   14e0c:	cmp	r3, #0
   14e10:	bne	14f14 <main@@Base+0x10adc>
   14e14:	mov	ip, #1
   14e18:	str	ip, [sp, #40]	; 0x28
   14e1c:	b	14b70 <main@@Base+0x10738>
   14e20:	bl	40a4 <fwupd_error_quark@plt>
   14e24:	ldr	r3, [sp, #24]
   14e28:	mov	r1, r0
   14e2c:	mov	r2, #7
   14e30:	ldr	r0, [sp, #72]	; 0x48
   14e34:	str	r3, [sp]
   14e38:	ldr	r3, [pc, #908]	; 151cc <main@@Base+0x10d94>
   14e3c:	add	r3, pc, r3
   14e40:	bl	4350 <g_set_error@plt>
   14e44:	cmp	r6, #0
   14e48:	beq	14ed8 <main@@Base+0x10aa0>
   14e4c:	mov	r4, #0
   14e50:	mov	r5, r4
   14e54:	mov	r0, r6
   14e58:	mov	r1, #1
   14e5c:	bl	40bc <g_string_free@plt>
   14e60:	cmp	r9, #0
   14e64:	beq	14e74 <main@@Base+0x10a3c>
   14e68:	mov	r0, r9
   14e6c:	mov	r1, #1
   14e70:	bl	40bc <g_string_free@plt>
   14e74:	cmp	r4, #0
   14e78:	beq	14e84 <main@@Base+0x10a4c>
   14e7c:	mov	r0, r4
   14e80:	bl	414c <g_bytes_unref@plt>
   14e84:	ldr	r3, [sp, #36]	; 0x24
   14e88:	cmp	r3, #0
   14e8c:	beq	14e98 <main@@Base+0x10a60>
   14e90:	ldr	r0, [sp, #36]	; 0x24
   14e94:	bl	4110 <g_object_unref@plt>
   14e98:	ldr	ip, [sp, #56]	; 0x38
   14e9c:	mov	r0, r5
   14ea0:	ldr	r2, [sp, #92]	; 0x5c
   14ea4:	ldr	r3, [ip]
   14ea8:	cmp	r2, r3
   14eac:	bne	1515c <main@@Base+0x10d24>
   14eb0:	add	sp, sp, #100	; 0x64
   14eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14eb8:	ldr	r2, [sp, #68]	; 0x44
   14ebc:	mov	r1, #128	; 0x80
   14ec0:	ldr	r0, [sp, #76]	; 0x4c
   14ec4:	mov	r3, sl
   14ec8:	str	r2, [sp]
   14ecc:	ldr	r2, [sp, #80]	; 0x50
   14ed0:	bl	3a38 <g_log@plt>
   14ed4:	b	14cfc <main@@Base+0x108c4>
   14ed8:	mov	r4, r6
   14edc:	mov	r5, r6
   14ee0:	b	14e60 <main@@Base+0x10a28>
   14ee4:	ldr	r0, [pc, #740]	; 151d0 <main@@Base+0x10d98>
   14ee8:	ldr	r1, [pc, #740]	; 151d4 <main@@Base+0x10d9c>
   14eec:	ldr	r2, [pc, #740]	; 151d8 <main@@Base+0x10da0>
   14ef0:	add	r0, pc, r0
   14ef4:	add	r1, pc, r1
   14ef8:	add	r2, pc, r2
   14efc:	bl	3870 <g_return_if_fail_warning@plt>
   14f00:	mov	r2, #0
   14f04:	str	r2, [sp, #36]	; 0x24
   14f08:	mov	r4, r2
   14f0c:	mov	r5, r2
   14f10:	b	14e60 <main@@Base+0x10a28>
   14f14:	ldr	r0, [sp, #84]	; 0x54
   14f18:	ldr	r1, [r9]
   14f1c:	bl	16040 <main@@Base+0x11c08>
   14f20:	mov	r1, #1
   14f24:	str	r1, [sp, #40]	; 0x28
   14f28:	b	14b70 <main@@Base+0x10738>
   14f2c:	mov	r7, #255	; 0xff
   14f30:	b	14af0 <main@@Base+0x106b8>
   14f34:	bl	40a4 <fwupd_error_quark@plt>
   14f38:	ldr	ip, [sp, #88]	; 0x58
   14f3c:	mov	r1, r0
   14f40:	ldr	r3, [pc, #660]	; 151dc <main@@Base+0x10da4>
   14f44:	mov	r2, #7
   14f48:	ldr	r0, [sp, #72]	; 0x48
   14f4c:	str	r4, [sp]
   14f50:	add	r3, pc, r3
   14f54:	str	ip, [sp, #4]
   14f58:	bl	4350 <g_set_error@plt>
   14f5c:	b	14e44 <main@@Base+0x10a0c>
   14f60:	bl	40a4 <fwupd_error_quark@plt>
   14f64:	ldrb	ip, [r7]
   14f68:	mov	r1, r0
   14f6c:	ldr	r3, [pc, #620]	; 151e0 <main@@Base+0x10da8>
   14f70:	mov	r2, #7
   14f74:	ldr	r0, [sp, #72]	; 0x48
   14f78:	str	r4, [sp, #4]
   14f7c:	add	r3, pc, r3
   14f80:	str	ip, [sp]
   14f84:	bl	4350 <g_set_error@plt>
   14f88:	b	14e44 <main@@Base+0x10a0c>
   14f8c:	bl	40a4 <fwupd_error_quark@plt>
   14f90:	ldr	ip, [sp, #88]	; 0x58
   14f94:	mov	r1, r0
   14f98:	ldr	r3, [pc, #580]	; 151e4 <main@@Base+0x10dac>
   14f9c:	mov	r2, #7
   14fa0:	ldr	r0, [sp, #72]	; 0x48
   14fa4:	str	r4, [sp]
   14fa8:	add	r3, pc, r3
   14fac:	str	ip, [sp, #4]
   14fb0:	bl	4350 <g_set_error@plt>
   14fb4:	b	14e44 <main@@Base+0x10a0c>
   14fb8:	ldm	r6, {r0, r1}
   14fbc:	bl	390c <g_bytes_new@plt>
   14fc0:	mov	r4, r0
   14fc4:	ldr	r0, [sp, #36]	; 0x24
   14fc8:	mov	r1, r4
   14fcc:	bl	10ae8 <main@@Base+0xc6b0>
   14fd0:	ldr	r1, [sp, #44]	; 0x2c
   14fd4:	ldr	r0, [sp, #36]	; 0x24
   14fd8:	bl	10bcc <main@@Base+0xc794>
   14fdc:	ldr	r0, [sp, #84]	; 0x54
   14fe0:	ldr	r1, [sp, #36]	; 0x24
   14fe4:	bl	15ea8 <main@@Base+0x11a70>
   14fe8:	mov	r5, #1
   14fec:	b	14e54 <main@@Base+0x10a1c>
   14ff0:	bl	40a4 <fwupd_error_quark@plt>
   14ff4:	ldr	r3, [pc, #492]	; 151e8 <main@@Base+0x10db0>
   14ff8:	mov	r1, r0
   14ffc:	stm	sp, {r4, r5}
   15000:	mov	r2, #7
   15004:	ldr	r0, [sp, #72]	; 0x48
   15008:	add	r3, pc, r3
   1500c:	str	r7, [sp, #8]
   15010:	bl	4350 <g_set_error@plt>
   15014:	b	14e44 <main@@Base+0x10a0c>
   15018:	bl	40a4 <fwupd_error_quark@plt>
   1501c:	ldr	r2, [sp, #32]
   15020:	mov	r1, r0
   15024:	ldr	r3, [pc, #448]	; 151ec <main@@Base+0x10db4>
   15028:	ldr	r0, [sp, #72]	; 0x48
   1502c:	str	r2, [sp, #4]
   15030:	add	r3, pc, r3
   15034:	str	r5, [sp]
   15038:	mov	r2, #7
   1503c:	bl	4350 <g_set_error@plt>
   15040:	b	14e44 <main@@Base+0x10a0c>
   15044:	bl	40a4 <fwupd_error_quark@plt>
   15048:	ldr	r3, [pc, #416]	; 151f0 <main@@Base+0x10db8>
   1504c:	mov	r1, r0
   15050:	mov	r2, #7
   15054:	ldr	r0, [sp, #72]	; 0x48
   15058:	add	r3, pc, r3
   1505c:	bl	3ae0 <g_set_error_literal@plt>
   15060:	b	14e44 <main@@Base+0x10a0c>
   15064:	bl	40a4 <fwupd_error_quark@plt>
   15068:	ldr	r3, [pc, #388]	; 151f4 <main@@Base+0x10dbc>
   1506c:	mov	r1, r0
   15070:	mov	r2, #7
   15074:	ldr	r0, [sp, #72]	; 0x48
   15078:	add	r3, pc, r3
   1507c:	bl	3ae0 <g_set_error_literal@plt>
   15080:	b	14e44 <main@@Base+0x10a0c>
   15084:	bl	40a4 <fwupd_error_quark@plt>
   15088:	ldr	r2, [sp, #48]	; 0x30
   1508c:	mov	r1, r0
   15090:	ldr	r3, [pc, #352]	; 151f8 <main@@Base+0x10dc0>
   15094:	ldr	r0, [sp, #72]	; 0x48
   15098:	str	r2, [sp, #4]
   1509c:	add	r3, pc, r3
   150a0:	str	sl, [sp]
   150a4:	mov	r2, #7
   150a8:	bl	4350 <g_set_error@plt>
   150ac:	b	14e44 <main@@Base+0x10a0c>
   150b0:	bl	40a4 <fwupd_error_quark@plt>
   150b4:	ldr	r3, [pc, #320]	; 151fc <main@@Base+0x10dc4>
   150b8:	mov	r1, r0
   150bc:	str	r5, [sp]
   150c0:	mov	r2, #7
   150c4:	ldr	r0, [sp, #72]	; 0x48
   150c8:	add	r3, pc, r3
   150cc:	bl	4350 <g_set_error@plt>
   150d0:	b	14e44 <main@@Base+0x10a0c>
   150d4:	mov	r5, r0
   150d8:	cmp	r4, #0
   150dc:	beq	150e8 <main@@Base+0x10cb0>
   150e0:	mov	r0, r4
   150e4:	bl	414c <g_bytes_unref@plt>
   150e8:	ldr	r1, [sp, #36]	; 0x24
   150ec:	cmp	r1, #0
   150f0:	beq	150fc <main@@Base+0x10cc4>
   150f4:	mov	r0, r1
   150f8:	bl	4110 <g_object_unref@plt>
   150fc:	mov	r0, r5
   15100:	bl	42f0 <_Unwind_Resume@plt>
   15104:	mov	r3, #0
   15108:	mov	r5, r0
   1510c:	str	r3, [sp, #36]	; 0x24
   15110:	b	150e8 <main@@Base+0x10cb0>
   15114:	mov	r3, #0
   15118:	mov	r5, r0
   1511c:	mov	r4, r3
   15120:	str	r3, [sp, #36]	; 0x24
   15124:	cmp	r9, #0
   15128:	beq	150d8 <main@@Base+0x10ca0>
   1512c:	mov	r0, r9
   15130:	mov	r1, #1
   15134:	bl	40bc <g_string_free@plt>
   15138:	b	150d8 <main@@Base+0x10ca0>
   1513c:	mov	r5, r0
   15140:	mov	r0, r6
   15144:	mov	r1, #1
   15148:	bl	40bc <g_string_free@plt>
   1514c:	b	15124 <main@@Base+0x10cec>
   15150:	mov	r5, r0
   15154:	mov	r4, #0
   15158:	b	15140 <main@@Base+0x10d08>
   1515c:	bl	3e4c <__stack_chk_fail@plt>
   15160:	mov	r2, #0
   15164:	mov	r5, r0
   15168:	str	r2, [sp, #36]	; 0x24
   1516c:	mov	r4, r2
   15170:	b	15124 <main@@Base+0x10cec>
   15174:	mov	r5, r0
   15178:	b	15124 <main@@Base+0x10cec>
   1517c:	cmp	r6, #0
   15180:	mov	r5, r0
   15184:	bne	15154 <main@@Base+0x10d1c>
   15188:	mov	r4, #0
   1518c:	b	15124 <main@@Base+0x10cec>
   15190:	b	15150 <main@@Base+0x10d18>
   15194:	mov	r5, r0
   15198:	b	15188 <main@@Base+0x10d50>
   1519c:	b	15194 <main@@Base+0x10d5c>
   151a0:	mov	r5, r0
   151a4:	b	150e8 <main@@Base+0x10cb0>
   151a8:	strdeq	sl, [r2], -ip
   151ac:	andeq	r0, r0, r0, lsr r4
   151b0:	andeq	r0, r1, r0, lsr #25
   151b4:	muleq	r1, r4, r4
   151b8:	andeq	r3, r1, r4, asr #23
   151bc:	andeq	r0, r1, r8, ror r4
   151c0:	andeq	r3, r1, r0, lsl #23
   151c4:	andeq	r3, r1, ip, lsr #16
   151c8:	andeq	r0, r0, r4, asr #8
   151cc:	andeq	r3, r1, r8, lsr #14
   151d0:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   151d4:	andeq	r3, r1, r0, asr #10
   151d8:	muleq	r1, r4, fp
   151dc:	andeq	r3, r1, r0, lsl #7
   151e0:	andeq	r3, r1, r8, ror #9
   151e4:	andeq	r3, r1, r8, ror #9
   151e8:	andeq	r3, r1, ip, lsr #9
   151ec:	strdeq	r3, [r1], -ip
   151f0:	muleq	r1, r4, r4
   151f4:	andeq	r3, r1, ip, lsl #10
   151f8:	andeq	r3, r1, r0, asr #5
   151fc:	andeq	r3, r1, ip, lsr r4
   15200:	push	{r4, r5, r6, r7, r8, lr}
   15204:	subs	r4, r1, #0
   15208:	sub	sp, sp, #8
   1520c:	mov	r8, r0
   15210:	mov	r6, r2
   15214:	mov	r7, r3
   15218:	beq	15280 <main@@Base+0x10e48>
   1521c:	bl	15ad4 <main@@Base+0x1169c>
   15220:	str	r7, [sp]
   15224:	mov	r1, r4
   15228:	mov	r3, r6
   1522c:	mov	r2, #0
   15230:	mov	r5, r0
   15234:	bl	1496c <main@@Base+0x10534>
   15238:	cmp	r0, #0
   1523c:	moveq	r4, r0
   15240:	bne	15260 <main@@Base+0x10e28>
   15244:	cmp	r5, #0
   15248:	beq	15254 <main@@Base+0x10e1c>
   1524c:	mov	r0, r5
   15250:	bl	4110 <g_object_unref@plt>
   15254:	mov	r0, r4
   15258:	add	sp, sp, #8
   1525c:	pop	{r4, r5, r6, r7, r8, pc}
   15260:	mov	r0, r8
   15264:	mov	r1, r5
   15268:	bl	11624 <main@@Base+0xd1ec>
   1526c:	mov	r0, r8
   15270:	mov	r1, #5
   15274:	bl	11b20 <main@@Base+0xd6e8>
   15278:	mov	r4, #1
   1527c:	b	15244 <main@@Base+0x10e0c>
   15280:	ldr	r1, [pc, #64]	; 152c8 <main@@Base+0x10e90>
   15284:	ldr	r0, [pc, #64]	; 152cc <main@@Base+0x10e94>
   15288:	ldr	r2, [pc, #64]	; 152d0 <main@@Base+0x10e98>
   1528c:	add	r1, pc, r1
   15290:	add	r0, pc, r0
   15294:	add	r1, r1, #20
   15298:	add	r2, pc, r2
   1529c:	bl	3870 <g_return_if_fail_warning@plt>
   152a0:	mov	r0, r4
   152a4:	add	sp, sp, #8
   152a8:	pop	{r4, r5, r6, r7, r8, pc}
   152ac:	cmp	r5, #0
   152b0:	mov	r4, r0
   152b4:	beq	152c0 <main@@Base+0x10e88>
   152b8:	mov	r0, r5
   152bc:	bl	4110 <g_object_unref@plt>
   152c0:	mov	r0, r4
   152c4:	bl	42f0 <_Unwind_Resume@plt>
   152c8:	andeq	r3, r1, r8, lsr #3
   152cc:	strdeq	pc, [r0], -ip
   152d0:	strdeq	r2, [r1], -r4
   152d4:	push	{r4, lr}
   152d8:	mov	r4, r1
   152dc:	bl	40a4 <fwupd_error_quark@plt>
   152e0:	ldr	r3, [pc, #24]	; 15300 <main@@Base+0x10ec8>
   152e4:	mov	r2, #10
   152e8:	add	r3, pc, r3
   152ec:	mov	r1, r0
   152f0:	mov	r0, r4
   152f4:	bl	3ae0 <g_set_error_literal@plt>
   152f8:	mov	r0, #0
   152fc:	pop	{r4, pc}
   15300:	andeq	r3, r1, ip, lsl #6
   15304:	ldr	ip, [pc, #596]	; 15560 <main@@Base+0x11128>
   15308:	ldr	r2, [pc, #596]	; 15564 <main@@Base+0x1112c>
   1530c:	add	ip, pc, ip
   15310:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15314:	mov	fp, r3
   15318:	ldr	r2, [ip, r2]
   1531c:	mov	r3, ip
   15320:	sub	sp, sp, #28
   15324:	mov	r9, r0
   15328:	mov	r0, r1
   1532c:	add	r1, sp, #16
   15330:	ldr	r3, [r2]
   15334:	str	r2, [sp, #12]
   15338:	str	r3, [sp, #20]
   1533c:	bl	4320 <g_bytes_get_data@plt>
   15340:	ldr	r7, [sp, #16]
   15344:	cmp	r7, #16
   15348:	mov	r4, r0
   1534c:	bls	1546c <main@@Base+0x11034>
   15350:	ldr	r1, [pc, #528]	; 15568 <main@@Base+0x11130>
   15354:	mov	r2, #2
   15358:	add	r1, pc, r1
   1535c:	bl	42fc <memcmp@plt>
   15360:	cmp	r0, #0
   15364:	bne	1546c <main@@Base+0x11034>
   15368:	ldrb	sl, [r4, #2]
   1536c:	cmp	sl, #0
   15370:	beq	1546c <main@@Base+0x11034>
   15374:	ldrb	r5, [r4, #3]
   15378:	cmp	r5, #233	; 0xe9
   1537c:	bhi	1548c <main@@Base+0x11054>
   15380:	add	r3, r5, #20
   15384:	add	r6, r5, #4
   15388:	cmp	r7, r3
   1538c:	bcc	154b4 <main@@Base+0x1107c>
   15390:	mov	r8, r0
   15394:	sub	sl, sl, #1
   15398:	mov	r0, #4
   1539c:	b	15414 <main@@Base+0x10fdc>
   153a0:	add	r6, r5, r0
   153a4:	ldr	r3, [sp, #16]
   153a8:	add	r2, r6, #16
   153ac:	cmp	r2, r3
   153b0:	bhi	154d8 <main@@Base+0x110a0>
   153b4:	add	r0, r4, r0
   153b8:	mov	r1, r5
   153bc:	bl	3900 <g_strndup@plt>
   153c0:	mov	r5, r0
   153c4:	mov	r1, r7
   153c8:	mov	r0, r9
   153cc:	mov	r2, r5
   153d0:	bl	12088 <main@@Base+0xdc50>
   153d4:	mov	r0, r5
   153d8:	bl	3eac <g_free@plt>
   153dc:	mov	r0, r7
   153e0:	bl	3eac <g_free@plt>
   153e4:	cmp	r8, sl
   153e8:	beq	1546c <main@@Base+0x11034>
   153ec:	ldrb	r5, [r4, r6]
   153f0:	add	r0, r6, #1
   153f4:	cmp	r5, #233	; 0xe9
   153f8:	bhi	1548c <main@@Base+0x11054>
   153fc:	add	r6, r5, r0
   15400:	ldr	r3, [sp, #16]
   15404:	add	r2, r6, #16
   15408:	add	r8, r8, #1
   1540c:	cmp	r2, r3
   15410:	bhi	154b4 <main@@Base+0x1107c>
   15414:	add	r0, r4, r0
   15418:	mov	r1, r5
   1541c:	bl	3900 <g_strndup@plt>
   15420:	ldrb	r5, [r4, r6]
   15424:	mov	r7, r0
   15428:	add	r0, r6, #1
   1542c:	cmp	r5, #233	; 0xe9
   15430:	bls	153a0 <main@@Base+0x10f68>
   15434:	bl	40a4 <fwupd_error_quark@plt>
   15438:	ldr	r3, [pc, #300]	; 1556c <main@@Base+0x11134>
   1543c:	mov	r1, r0
   15440:	str	r5, [sp]
   15444:	mov	r0, fp
   15448:	mov	r2, #0
   1544c:	add	r3, pc, r3
   15450:	bl	4350 <g_set_error@plt>
   15454:	mov	r0, #0
   15458:	bl	3eac <g_free@plt>
   1545c:	mov	r0, r7
   15460:	bl	3eac <g_free@plt>
   15464:	mov	r0, #0
   15468:	b	15470 <main@@Base+0x11038>
   1546c:	mov	r0, #1
   15470:	ldr	r1, [sp, #12]
   15474:	ldr	r2, [sp, #20]
   15478:	ldr	r3, [r1]
   1547c:	cmp	r2, r3
   15480:	bne	154fc <main@@Base+0x110c4>
   15484:	add	sp, sp, #28
   15488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1548c:	bl	40a4 <fwupd_error_quark@plt>
   15490:	ldr	r3, [pc, #216]	; 15570 <main@@Base+0x11138>
   15494:	mov	r1, r0
   15498:	str	r5, [sp]
   1549c:	mov	r0, fp
   154a0:	mov	r2, #0
   154a4:	add	r3, pc, r3
   154a8:	bl	4350 <g_set_error@plt>
   154ac:	mov	r7, #0
   154b0:	b	15454 <main@@Base+0x1101c>
   154b4:	bl	40a4 <fwupd_error_quark@plt>
   154b8:	ldr	r3, [pc, #180]	; 15574 <main@@Base+0x1113c>
   154bc:	mov	r1, r0
   154c0:	str	r5, [sp]
   154c4:	mov	r0, fp
   154c8:	mov	r2, #0
   154cc:	add	r3, pc, r3
   154d0:	bl	4350 <g_set_error@plt>
   154d4:	b	154ac <main@@Base+0x11074>
   154d8:	bl	40a4 <fwupd_error_quark@plt>
   154dc:	ldr	r3, [pc, #148]	; 15578 <main@@Base+0x11140>
   154e0:	mov	r1, r0
   154e4:	str	r5, [sp]
   154e8:	mov	r0, fp
   154ec:	mov	r2, #0
   154f0:	add	r3, pc, r3
   154f4:	bl	4350 <g_set_error@plt>
   154f8:	b	15454 <main@@Base+0x1101c>
   154fc:	bl	3e4c <__stack_chk_fail@plt>
   15500:	mov	r4, r0
   15504:	mov	r5, #0
   15508:	mov	r0, r5
   1550c:	bl	3eac <g_free@plt>
   15510:	mov	r0, r7
   15514:	bl	3eac <g_free@plt>
   15518:	mov	r0, r4
   1551c:	bl	42f0 <_Unwind_Resume@plt>
   15520:	b	15500 <main@@Base+0x110c8>
   15524:	mov	r5, #0
   15528:	mov	r4, r0
   1552c:	mov	r7, r5
   15530:	b	15508 <main@@Base+0x110d0>
   15534:	b	15524 <main@@Base+0x110ec>
   15538:	b	15524 <main@@Base+0x110ec>
   1553c:	b	15524 <main@@Base+0x110ec>
   15540:	b	15500 <main@@Base+0x110c8>
   15544:	b	15500 <main@@Base+0x110c8>
   15548:	mov	r4, r0
   1554c:	b	15508 <main@@Base+0x110d0>
   15550:	mov	r4, r0
   15554:	b	15510 <main@@Base+0x110d8>
   15558:	b	15524 <main@@Base+0x110ec>
   1555c:	b	15500 <main@@Base+0x110c8>
   15560:	andeq	r9, r2, r4, ror r8
   15564:	andeq	r0, r0, r0, lsr r4
   15568:	andeq	r3, r1, ip, asr #5
   1556c:	andeq	r3, r1, r0, lsr #4
   15570:	andeq	r3, r1, r4, lsl #3
   15574:	andeq	r3, r1, ip, ror r1
   15578:	andeq	r3, r1, r0, lsr #3
   1557c:	ldr	r3, [pc, #600]	; 157dc <main@@Base+0x113a4>
   15580:	ldr	r2, [pc, #600]	; 157e0 <main@@Base+0x113a8>
   15584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15588:	add	r3, pc, r3
   1558c:	sub	sp, sp, #276	; 0x114
   15590:	str	r1, [sp, #20]
   15594:	ldr	r2, [r3, r2]
   15598:	ldr	r3, [r2]
   1559c:	str	r2, [sp, #12]
   155a0:	str	r3, [sp, #268]	; 0x10c
   155a4:	bl	12070 <main@@Base+0xdc38>
   155a8:	str	r0, [sp, #8]
   155ac:	bl	41d0 <g_hash_table_size@plt>
   155b0:	subs	r1, r0, #0
   155b4:	bne	155e0 <main@@Base+0x111a8>
   155b8:	bl	390c <g_bytes_new@plt>
   155bc:	mov	r4, r0
   155c0:	ldr	r1, [sp, #12]
   155c4:	mov	r0, r4
   155c8:	ldr	r2, [sp, #268]	; 0x10c
   155cc:	ldr	r3, [r1]
   155d0:	cmp	r2, r3
   155d4:	bne	157b0 <main@@Base+0x11378>
   155d8:	add	sp, sp, #276	; 0x114
   155dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155e0:	ldr	r0, [sp, #8]
   155e4:	bl	3b04 <g_hash_table_get_keys@plt>
   155e8:	str	r0, [sp, #16]
   155ec:	bl	3a2c <g_list_length@plt>
   155f0:	cmp	r0, #59	; 0x3b
   155f4:	mov	r4, r0
   155f8:	bhi	156f0 <main@@Base+0x112b8>
   155fc:	ldr	r1, [sp, #16]
   15600:	mov	r2, #77	; 0x4d
   15604:	mov	r3, #68	; 0x44
   15608:	strb	r0, [sp, #30]
   1560c:	cmp	r1, #0
   15610:	strb	r2, [sp, #28]
   15614:	strb	r3, [sp, #29]
   15618:	beq	1572c <main@@Base+0x112f4>
   1561c:	add	r8, sp, #28
   15620:	mov	r7, r1
   15624:	mov	r6, #3
   15628:	b	156b4 <main@@Base+0x1127c>
   1562c:	ldr	r0, [sp, #8]
   15630:	mov	r1, r5
   15634:	bl	3db0 <g_hash_table_lookup@plt>
   15638:	mov	r9, r0
   1563c:	bl	411c <strlen@plt>
   15640:	cmp	r0, #233	; 0xe9
   15644:	mov	fp, r0
   15648:	bhi	15768 <main@@Base+0x11330>
   1564c:	add	r2, r4, r6
   15650:	add	r2, r2, #2
   15654:	add	r2, r2, r0
   15658:	cmp	r2, #239	; 0xef
   1565c:	bhi	1578c <main@@Base+0x11354>
   15660:	add	r2, sp, #272	; 0x110
   15664:	add	sl, r6, #1
   15668:	add	r6, r2, r6
   1566c:	mov	r1, r5
   15670:	mov	r2, r4
   15674:	add	r0, r8, sl
   15678:	strb	r4, [r6, #-244]	; 0xffffff0c
   1567c:	bl	40e0 <memcpy@plt>
   15680:	add	r4, sl, r4
   15684:	add	r3, sp, #272	; 0x110
   15688:	add	r6, r4, #1
   1568c:	add	r4, r3, r4
   15690:	add	r0, r8, r6
   15694:	mov	r1, r9
   15698:	mov	r2, fp
   1569c:	strb	fp, [r4, #-244]	; 0xffffff0c
   156a0:	bl	40e0 <memcpy@plt>
   156a4:	ldr	r7, [r7, #4]
   156a8:	add	r6, fp, r6
   156ac:	cmp	r7, #0
   156b0:	beq	15730 <main@@Base+0x112f8>
   156b4:	ldr	r5, [r7]
   156b8:	mov	r0, r5
   156bc:	bl	411c <strlen@plt>
   156c0:	cmp	r0, #233	; 0xe9
   156c4:	mov	r4, r0
   156c8:	bls	1562c <main@@Base+0x111f4>
   156cc:	bl	40a4 <fwupd_error_quark@plt>
   156d0:	ldr	r3, [pc, #268]	; 157e4 <main@@Base+0x113ac>
   156d4:	mov	r1, r0
   156d8:	str	r5, [sp]
   156dc:	mov	r2, #10
   156e0:	ldr	r0, [sp, #20]
   156e4:	add	r3, pc, r3
   156e8:	bl	4350 <g_set_error@plt>
   156ec:	b	15710 <main@@Base+0x112d8>
   156f0:	bl	40a4 <fwupd_error_quark@plt>
   156f4:	ldr	r3, [pc, #236]	; 157e8 <main@@Base+0x113b0>
   156f8:	mov	r1, r0
   156fc:	str	r4, [sp]
   15700:	mov	r2, #10
   15704:	ldr	r0, [sp, #20]
   15708:	add	r3, pc, r3
   1570c:	bl	4350 <g_set_error@plt>
   15710:	mov	r4, #0
   15714:	ldr	r1, [sp, #16]
   15718:	cmp	r1, #0
   1571c:	beq	155c0 <main@@Base+0x11188>
   15720:	mov	r0, r1
   15724:	bl	3b10 <g_list_free@plt>
   15728:	b	155c0 <main@@Base+0x11188>
   1572c:	mov	r6, #3
   15730:	ldr	r0, [pc, #180]	; 157ec <main@@Base+0x113b4>
   15734:	mov	r3, #239	; 0xef
   15738:	ldr	r2, [pc, #176]	; 157f0 <main@@Base+0x113b8>
   1573c:	mov	r1, #128	; 0x80
   15740:	str	r3, [sp]
   15744:	add	r0, pc, r0
   15748:	add	r2, pc, r2
   1574c:	mov	r3, r6
   15750:	bl	3a38 <g_log@plt>
   15754:	mov	r1, r6
   15758:	add	r0, sp, #28
   1575c:	bl	390c <g_bytes_new@plt>
   15760:	mov	r4, r0
   15764:	b	15714 <main@@Base+0x112dc>
   15768:	bl	40a4 <fwupd_error_quark@plt>
   1576c:	ldr	r3, [pc, #128]	; 157f4 <main@@Base+0x113bc>
   15770:	mov	r1, r0
   15774:	str	r9, [sp]
   15778:	mov	r2, #10
   1577c:	ldr	r0, [sp, #20]
   15780:	add	r3, pc, r3
   15784:	bl	4350 <g_set_error@plt>
   15788:	b	15710 <main@@Base+0x112d8>
   1578c:	bl	40a4 <fwupd_error_quark@plt>
   15790:	ldr	r3, [pc, #96]	; 157f8 <main@@Base+0x113c0>
   15794:	mov	r1, r0
   15798:	str	r6, [sp]
   1579c:	mov	r2, #10
   157a0:	ldr	r0, [sp, #20]
   157a4:	add	r3, pc, r3
   157a8:	bl	4350 <g_set_error@plt>
   157ac:	b	15710 <main@@Base+0x112d8>
   157b0:	bl	3e4c <__stack_chk_fail@plt>
   157b4:	ldr	r2, [sp, #16]
   157b8:	mov	r4, r0
   157bc:	cmp	r2, #0
   157c0:	beq	157cc <main@@Base+0x11394>
   157c4:	ldr	r0, [sp, #16]
   157c8:	bl	3b10 <g_list_free@plt>
   157cc:	mov	r0, r4
   157d0:	bl	42f0 <_Unwind_Resume@plt>
   157d4:	mov	r4, r0
   157d8:	b	157c4 <main@@Base+0x1138c>
   157dc:	strdeq	r9, [r2], -r8
   157e0:	andeq	r0, r0, r0, lsr r4
   157e4:	andeq	r2, r1, ip, ror #31
   157e8:	andeq	r2, r1, ip, lsr #31
   157ec:	andeq	pc, r0, r8, asr #14
   157f0:	strdeq	r2, [r1], -r4
   157f4:	andeq	r2, r1, ip, ror #30
   157f8:	andeq	r2, r1, ip, asr pc
   157fc:	mov	r0, #1
   15800:	bx	lr
   15804:	push	{r4, r5, r6, lr}
   15808:	mov	r6, r0
   1580c:	mov	r5, r1
   15810:	bl	15ad4 <main@@Base+0x1169c>
   15814:	mov	r4, r0
   15818:	bl	109bc <main@@Base+0xc584>
   1581c:	mov	r1, r5
   15820:	mov	r5, r0
   15824:	bl	10ae8 <main@@Base+0xc6b0>
   15828:	mov	r0, r4
   1582c:	mov	r1, r5
   15830:	bl	15ea8 <main@@Base+0x11a70>
   15834:	mov	r0, r6
   15838:	mov	r1, r4
   1583c:	bl	11624 <main@@Base+0xd1ec>
   15840:	cmp	r4, #0
   15844:	beq	15850 <main@@Base+0x11418>
   15848:	mov	r0, r4
   1584c:	bl	4110 <g_object_unref@plt>
   15850:	cmp	r5, #0
   15854:	beq	15860 <main@@Base+0x11428>
   15858:	mov	r0, r5
   1585c:	bl	4110 <g_object_unref@plt>
   15860:	mov	r0, #1
   15864:	pop	{r4, r5, r6, pc}
   15868:	mov	r6, r0
   1586c:	mov	r5, #0
   15870:	cmp	r5, #0
   15874:	beq	15880 <main@@Base+0x11448>
   15878:	mov	r0, r5
   1587c:	bl	4110 <g_object_unref@plt>
   15880:	mov	r0, r6
   15884:	bl	42f0 <_Unwind_Resume@plt>
   15888:	mov	r6, r0
   1588c:	b	15870 <main@@Base+0x11438>
   15890:	mov	r6, r0
   15894:	cmp	r4, #0
   15898:	beq	15870 <main@@Base+0x11438>
   1589c:	mov	r0, r4
   158a0:	bl	4110 <g_object_unref@plt>
   158a4:	b	15870 <main@@Base+0x11438>
   158a8:	mov	r6, r0
   158ac:	mov	r5, #0
   158b0:	b	15894 <main@@Base+0x1145c>
   158b4:	push	{r4, lr}
   158b8:	mov	r4, r1
   158bc:	bl	11420 <main@@Base+0xcfe8>
   158c0:	cmp	r0, #0
   158c4:	beq	158e4 <main@@Base+0x114ac>
   158c8:	mov	r1, #0
   158cc:	bl	15b70 <main@@Base+0x11738>
   158d0:	cmp	r0, #0
   158d4:	beq	15908 <main@@Base+0x114d0>
   158d8:	bl	109d0 <main@@Base+0xc598>
   158dc:	pop	{r4, lr}
   158e0:	b	40ec <g_bytes_ref@plt>
   158e4:	bl	40a4 <fwupd_error_quark@plt>
   158e8:	ldr	r3, [pc, #56]	; 15928 <main@@Base+0x114f0>
   158ec:	mov	r2, #8
   158f0:	add	r3, pc, r3
   158f4:	mov	r1, r0
   158f8:	mov	r0, r4
   158fc:	bl	3ae0 <g_set_error_literal@plt>
   15900:	mov	r0, #0
   15904:	pop	{r4, pc}
   15908:	bl	40a4 <fwupd_error_quark@plt>
   1590c:	ldr	r3, [pc, #24]	; 1592c <main@@Base+0x114f4>
   15910:	mov	r2, #8
   15914:	add	r3, pc, r3
   15918:	mov	r1, r0
   1591c:	mov	r0, r4
   15920:	bl	3ae0 <g_set_error_literal@plt>
   15924:	b	15900 <main@@Base+0x114c8>
   15928:	andeq	r2, r1, ip, ror #28
   1592c:	ldrdeq	r2, [r1], -ip
   15930:	ldr	r3, [pc, #60]	; 15974 <main@@Base+0x1153c>
   15934:	ldr	r1, [pc, #60]	; 15978 <main@@Base+0x11540>
   15938:	ldr	r2, [pc, #60]	; 1597c <main@@Base+0x11544>
   1593c:	add	r3, pc, r3
   15940:	push	{r4, r5, r6, lr}
   15944:	add	r2, pc, r2
   15948:	mov	r5, r0
   1594c:	ldr	r0, [r3, r1]
   15950:	ldr	r4, [r2]
   15954:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   15958:	mov	r1, #0
   1595c:	mov	r2, #255	; 0xff
   15960:	add	r6, r5, r4
   15964:	str	r0, [r5, r4]
   15968:	add	r0, r6, #4
   1596c:	pop	{r4, r5, r6, lr}
   15970:	b	3bd0 <memset@plt>
   15974:	andeq	r9, r2, r4, asr #4
   15978:	andeq	r0, r0, r4, asr r4
   1597c:	andeq	r9, r2, r8, ror #13
   15980:	push	{r4, lr}
   15984:	mov	r4, r0
   15988:	bl	420c <g_type_class_peek_parent@plt>
   1598c:	ldr	r1, [pc, #52]	; 159c8 <main@@Base+0x11590>
   15990:	add	r1, pc, r1
   15994:	ldr	r3, [r1]
   15998:	cmp	r3, #0
   1599c:	str	r0, [r1, #4]
   159a0:	beq	159ac <main@@Base+0x11574>
   159a4:	mov	r0, r4
   159a8:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   159ac:	mov	r0, r4
   159b0:	mov	r1, #80	; 0x50
   159b4:	bl	4374 <g_type_check_class_cast@plt>
   159b8:	ldr	r3, [pc, #12]	; 159cc <main@@Base+0x11594>
   159bc:	add	r3, pc, r3
   159c0:	str	r3, [r0, #24]
   159c4:	pop	{r4, pc}
   159c8:	muleq	r2, ip, r6
   159cc:	andeq	r0, r0, r4, asr #1
   159d0:	push	{r4, r5, r6, lr}
   159d4:	dmb	sy
   159d8:	ldr	r4, [pc, #148]	; 15a74 <main@@Base+0x1163c>
   159dc:	sub	sp, sp, #16
   159e0:	add	r4, pc, r4
   159e4:	ldr	r5, [r4, #8]
   159e8:	dmb	sy
   159ec:	cmp	r5, #0
   159f0:	beq	15a08 <main@@Base+0x115d0>
   159f4:	ldr	r3, [pc, #124]	; 15a78 <main@@Base+0x11640>
   159f8:	add	r3, pc, r3
   159fc:	ldr	r0, [r3, #8]
   15a00:	add	sp, sp, #16
   15a04:	pop	{r4, r5, r6, pc}
   15a08:	add	r6, r4, #8
   15a0c:	mov	r0, r6
   15a10:	bl	3d50 <g_once_init_enter@plt>
   15a14:	cmp	r0, #0
   15a18:	beq	159f4 <main@@Base+0x115bc>
   15a1c:	ldr	r0, [pc, #88]	; 15a7c <main@@Base+0x11644>
   15a20:	add	r0, pc, r0
   15a24:	bl	3df8 <g_intern_static_string@plt>
   15a28:	ldr	r3, [pc, #80]	; 15a80 <main@@Base+0x11648>
   15a2c:	mov	r2, #12
   15a30:	str	r5, [sp, #8]
   15a34:	add	r3, pc, r3
   15a38:	stm	sp, {r2, r3}
   15a3c:	ldr	r3, [pc, #64]	; 15a84 <main@@Base+0x1164c>
   15a40:	mov	r2, #68	; 0x44
   15a44:	add	r3, pc, r3
   15a48:	mov	r1, r0
   15a4c:	mov	r0, #80	; 0x50
   15a50:	bl	3894 <g_type_register_static_simple@plt>
   15a54:	mov	r1, #260	; 0x104
   15a58:	mov	r5, r0
   15a5c:	bl	3edc <g_type_add_instance_private@plt>
   15a60:	mov	r1, r5
   15a64:	str	r0, [r4]
   15a68:	mov	r0, r6
   15a6c:	bl	4140 <g_once_init_leave@plt>
   15a70:	b	159f4 <main@@Base+0x115bc>
   15a74:	andeq	r9, r2, ip, asr #12
   15a78:	andeq	r9, r2, r4, lsr r6
   15a7c:	andeq	r2, r1, ip, asr #28
   15a80:			; <UNDEFINED> instruction: 0xfffffef4
   15a84:			; <UNDEFINED> instruction: 0xffffff34
   15a88:	push	{r3, r4, r5, lr}
   15a8c:	mov	r4, r0
   15a90:	bl	159d0 <main@@Base+0x11598>
   15a94:	ldr	r5, [pc, #52]	; 15ad0 <main@@Base+0x11698>
   15a98:	add	r5, pc, r5
   15a9c:	mov	r1, r0
   15aa0:	mov	r0, r4
   15aa4:	bl	39d8 <g_type_check_instance_cast@plt>
   15aa8:	ldr	r3, [r5]
   15aac:	ldr	r0, [r0, r3]
   15ab0:	bl	4224 <g_ptr_array_unref@plt>
   15ab4:	ldr	r0, [r5, #4]
   15ab8:	mov	r1, #80	; 0x50
   15abc:	bl	4374 <g_type_check_class_cast@plt>
   15ac0:	ldr	r3, [r0, #24]
   15ac4:	mov	r0, r4
   15ac8:	blx	r3
   15acc:	pop	{r3, r4, r5, pc}
   15ad0:	muleq	r2, r4, r5
   15ad4:	push	{r3, lr}
   15ad8:	bl	159d0 <main@@Base+0x11598>
   15adc:	mov	r1, #0
   15ae0:	pop	{r3, lr}
   15ae4:	b	3804 <g_object_new@plt>
   15ae8:	push	{r3, r4, r5, lr}
   15aec:	mov	r4, r0
   15af0:	ldr	r3, [pc, #104]	; 15b60 <main@@Base+0x11728>
   15af4:	add	r3, pc, r3
   15af8:	ldr	r5, [r3]
   15afc:	bl	159d0 <main@@Base+0x11598>
   15b00:	cmp	r4, #0
   15b04:	beq	15b34 <main@@Base+0x116fc>
   15b08:	ldr	r3, [r4]
   15b0c:	cmp	r3, #0
   15b10:	beq	15b20 <main@@Base+0x116e8>
   15b14:	ldr	r3, [r3]
   15b18:	cmp	r0, r3
   15b1c:	beq	15b58 <main@@Base+0x11720>
   15b20:	mov	r1, r0
   15b24:	mov	r0, r4
   15b28:	bl	3fcc <g_type_check_instance_is_a@plt>
   15b2c:	cmp	r0, #0
   15b30:	bne	15b58 <main@@Base+0x11720>
   15b34:	ldr	r0, [pc, #40]	; 15b64 <main@@Base+0x1172c>
   15b38:	ldr	r1, [pc, #40]	; 15b68 <main@@Base+0x11730>
   15b3c:	ldr	r2, [pc, #40]	; 15b6c <main@@Base+0x11734>
   15b40:	add	r0, pc, r0
   15b44:	add	r1, pc, r1
   15b48:	add	r2, pc, r2
   15b4c:	bl	3870 <g_return_if_fail_warning@plt>
   15b50:	mov	r0, #0
   15b54:	pop	{r3, r4, r5, pc}
   15b58:	ldr	r0, [r4, r5]
   15b5c:	pop	{r3, r4, r5, pc}
   15b60:	andeq	r9, r2, r8, lsr r5
   15b64:	andeq	pc, r0, ip, asr #6
   15b68:	andeq	r2, r1, r8, lsr ip
   15b6c:	andeq	r1, r1, ip, lsr #30
   15b70:	ldr	r3, [pc, #140]	; 15c04 <main@@Base+0x117cc>
   15b74:	push	{r4, r5, r6, lr}
   15b78:	add	r3, pc, r3
   15b7c:	mov	r4, r0
   15b80:	mov	r5, r1
   15b84:	ldr	r6, [r3]
   15b88:	bl	159d0 <main@@Base+0x11598>
   15b8c:	cmp	r4, #0
   15b90:	beq	15bc0 <main@@Base+0x11788>
   15b94:	ldr	r3, [r4]
   15b98:	cmp	r3, #0
   15b9c:	beq	15bac <main@@Base+0x11774>
   15ba0:	ldr	r3, [r3]
   15ba4:	cmp	r0, r3
   15ba8:	beq	15be8 <main@@Base+0x117b0>
   15bac:	mov	r1, r0
   15bb0:	mov	r0, r4
   15bb4:	bl	3fcc <g_type_check_instance_is_a@plt>
   15bb8:	cmp	r0, #0
   15bbc:	bne	15be8 <main@@Base+0x117b0>
   15bc0:	ldr	r1, [pc, #64]	; 15c08 <main@@Base+0x117d0>
   15bc4:	ldr	r0, [pc, #64]	; 15c0c <main@@Base+0x117d4>
   15bc8:	ldr	r2, [pc, #64]	; 15c10 <main@@Base+0x117d8>
   15bcc:	add	r1, pc, r1
   15bd0:	add	r0, pc, r0
   15bd4:	add	r1, r1, #24
   15bd8:	add	r2, pc, r2
   15bdc:	bl	3870 <g_return_if_fail_warning@plt>
   15be0:	mov	r0, #0
   15be4:	pop	{r4, r5, r6, pc}
   15be8:	ldr	r3, [r4, r6]
   15bec:	ldr	r2, [r3, #4]
   15bf0:	cmp	r5, r2
   15bf4:	bcs	15be0 <main@@Base+0x117a8>
   15bf8:	ldr	r3, [r3]
   15bfc:	ldr	r0, [r3, r5, lsl #2]
   15c00:	pop	{r4, r5, r6, pc}
   15c04:			; <UNDEFINED> instruction: 0x000294b4
   15c08:			; <UNDEFINED> instruction: 0x00012bb0
   15c0c:			; <UNDEFINED> instruction: 0x0000f2bc
   15c10:	muleq	r1, ip, lr
   15c14:	push	{r3, r4, r5, lr}
   15c18:	mov	r4, r0
   15c1c:	ldr	r3, [pc, #132]	; 15ca8 <main@@Base+0x11870>
   15c20:	add	r3, pc, r3
   15c24:	ldr	r5, [r3]
   15c28:	bl	159d0 <main@@Base+0x11598>
   15c2c:	cmp	r4, #0
   15c30:	beq	15c60 <main@@Base+0x11828>
   15c34:	ldr	r3, [r4]
   15c38:	cmp	r3, #0
   15c3c:	beq	15c4c <main@@Base+0x11814>
   15c40:	ldr	r3, [r3]
   15c44:	cmp	r0, r3
   15c48:	beq	15c88 <main@@Base+0x11850>
   15c4c:	mov	r1, r0
   15c50:	mov	r0, r4
   15c54:	bl	3fcc <g_type_check_instance_is_a@plt>
   15c58:	cmp	r0, #0
   15c5c:	bne	15c88 <main@@Base+0x11850>
   15c60:	ldr	r1, [pc, #68]	; 15cac <main@@Base+0x11874>
   15c64:	ldr	r0, [pc, #68]	; 15cb0 <main@@Base+0x11878>
   15c68:	ldr	r2, [pc, #68]	; 15cb4 <main@@Base+0x1187c>
   15c6c:	add	r1, pc, r1
   15c70:	add	r0, pc, r0
   15c74:	add	r1, r1, #48	; 0x30
   15c78:	add	r2, pc, r2
   15c7c:	bl	3870 <g_return_if_fail_warning@plt>
   15c80:	mov	r0, #0
   15c84:	pop	{r3, r4, r5, pc}
   15c88:	ldr	r3, [r4, r5]
   15c8c:	ldr	r0, [r3, #4]
   15c90:	cmp	r0, #0
   15c94:	beq	15ca4 <main@@Base+0x1186c>
   15c98:	ldr	r3, [r3]
   15c9c:	ldr	r0, [r3]
   15ca0:	pop	{r3, r4, r5, pc}
   15ca4:	pop	{r3, r4, r5, pc}
   15ca8:	andeq	r9, r2, ip, lsl #8
   15cac:	andeq	r2, r1, r0, lsl fp
   15cb0:	andeq	pc, r0, ip, lsl r2	; <UNPREDICTABLE>
   15cb4:	strdeq	r1, [r1], -ip
   15cb8:	push	{r3, r4, r5, lr}
   15cbc:	mov	r4, r0
   15cc0:	ldr	r3, [pc, #112]	; 15d38 <main@@Base+0x11900>
   15cc4:	add	r3, pc, r3
   15cc8:	ldr	r5, [r3]
   15ccc:	bl	159d0 <main@@Base+0x11598>
   15cd0:	cmp	r4, #0
   15cd4:	beq	15d04 <main@@Base+0x118cc>
   15cd8:	ldr	r3, [r4]
   15cdc:	cmp	r3, #0
   15ce0:	beq	15cf0 <main@@Base+0x118b8>
   15ce4:	ldr	r3, [r3]
   15ce8:	cmp	r0, r3
   15cec:	beq	15d2c <main@@Base+0x118f4>
   15cf0:	mov	r1, r0
   15cf4:	mov	r0, r4
   15cf8:	bl	3fcc <g_type_check_instance_is_a@plt>
   15cfc:	cmp	r0, #0
   15d00:	bne	15d2c <main@@Base+0x118f4>
   15d04:	ldr	r1, [pc, #48]	; 15d3c <main@@Base+0x11904>
   15d08:	ldr	r0, [pc, #48]	; 15d40 <main@@Base+0x11908>
   15d0c:	ldr	r2, [pc, #48]	; 15d44 <main@@Base+0x1190c>
   15d10:	add	r1, pc, r1
   15d14:	add	r0, pc, r0
   15d18:	add	r1, r1, #80	; 0x50
   15d1c:	add	r2, pc, r2
   15d20:	bl	3870 <g_return_if_fail_warning@plt>
   15d24:	mov	r0, #255	; 0xff
   15d28:	pop	{r3, r4, r5, pc}
   15d2c:	add	r4, r4, r5
   15d30:	ldrb	r0, [r4, #259]	; 0x103
   15d34:	pop	{r3, r4, r5, pc}
   15d38:	andeq	r9, r2, r8, ror #6
   15d3c:	andeq	r2, r1, ip, ror #20
   15d40:	andeq	pc, r0, r8, ror r1	; <UNPREDICTABLE>
   15d44:	andeq	r1, r1, r8, asr sp
   15d48:	push	{r3, r4, r5, lr}
   15d4c:	mov	r4, r0
   15d50:	ldr	r3, [pc, #112]	; 15dc8 <main@@Base+0x11990>
   15d54:	add	r3, pc, r3
   15d58:	ldr	r5, [r3]
   15d5c:	bl	159d0 <main@@Base+0x11598>
   15d60:	cmp	r4, #0
   15d64:	beq	15d94 <main@@Base+0x1195c>
   15d68:	ldr	r3, [r4]
   15d6c:	cmp	r3, #0
   15d70:	beq	15d80 <main@@Base+0x11948>
   15d74:	ldr	r3, [r3]
   15d78:	cmp	r0, r3
   15d7c:	beq	15dbc <main@@Base+0x11984>
   15d80:	mov	r1, r0
   15d84:	mov	r0, r4
   15d88:	bl	3fcc <g_type_check_instance_is_a@plt>
   15d8c:	cmp	r0, #0
   15d90:	bne	15dbc <main@@Base+0x11984>
   15d94:	ldr	r1, [pc, #48]	; 15dcc <main@@Base+0x11994>
   15d98:	ldr	r0, [pc, #48]	; 15dd0 <main@@Base+0x11998>
   15d9c:	ldr	r2, [pc, #48]	; 15dd4 <main@@Base+0x1199c>
   15da0:	add	r1, pc, r1
   15da4:	add	r0, pc, r0
   15da8:	add	r1, r1, #108	; 0x6c
   15dac:	add	r2, pc, r2
   15db0:	bl	3870 <g_return_if_fail_warning@plt>
   15db4:	mov	r0, #0
   15db8:	pop	{r3, r4, r5, pc}
   15dbc:	add	r4, r4, r5
   15dc0:	add	r0, r4, #4
   15dc4:	pop	{r3, r4, r5, pc}
   15dc8:	ldrdeq	r9, [r2], -r8
   15dcc:	ldrdeq	r2, [r1], -ip
   15dd0:	andeq	pc, r0, r8, ror #1
   15dd4:	andeq	r1, r1, r8, asr #25
   15dd8:	ldr	r3, [pc, #184]	; 15e98 <main@@Base+0x11a60>
   15ddc:	push	{r4, r5, r6, lr}
   15de0:	add	r3, pc, r3
   15de4:	mov	r4, r0
   15de8:	ldr	r5, [r3]
   15dec:	bl	159d0 <main@@Base+0x11598>
   15df0:	cmp	r4, #0
   15df4:	add	r6, r4, r5
   15df8:	beq	15e28 <main@@Base+0x119f0>
   15dfc:	ldr	r3, [r4]
   15e00:	cmp	r3, #0
   15e04:	beq	15e14 <main@@Base+0x119dc>
   15e08:	ldr	r3, [r3]
   15e0c:	cmp	r0, r3
   15e10:	beq	15e50 <main@@Base+0x11a18>
   15e14:	mov	r1, r0
   15e18:	mov	r0, r4
   15e1c:	bl	3fcc <g_type_check_instance_is_a@plt>
   15e20:	cmp	r0, #0
   15e24:	bne	15e50 <main@@Base+0x11a18>
   15e28:	ldr	r1, [pc, #108]	; 15e9c <main@@Base+0x11a64>
   15e2c:	ldr	r0, [pc, #108]	; 15ea0 <main@@Base+0x11a68>
   15e30:	ldr	r2, [pc, #108]	; 15ea4 <main@@Base+0x11a6c>
   15e34:	add	r1, pc, r1
   15e38:	add	r0, pc, r0
   15e3c:	add	r1, r1, #128	; 0x80
   15e40:	add	r2, pc, r2
   15e44:	bl	3870 <g_return_if_fail_warning@plt>
   15e48:	mov	r0, #0
   15e4c:	pop	{r4, r5, r6, pc}
   15e50:	ldr	r3, [r4, r5]
   15e54:	ldr	r0, [r3, #4]
   15e58:	cmp	r0, #0
   15e5c:	popeq	{r4, r5, r6, pc}
   15e60:	mov	r4, #0
   15e64:	mov	r5, r4
   15e68:	ldr	r3, [r3]
   15e6c:	ldr	r0, [r3, r4, lsl #2]
   15e70:	add	r4, r4, #1
   15e74:	bl	109d0 <main@@Base+0xc598>
   15e78:	bl	3f24 <g_bytes_get_size@plt>
   15e7c:	ldr	r3, [r6]
   15e80:	ldr	r2, [r3, #4]
   15e84:	cmp	r2, r4
   15e88:	add	r5, r5, r0
   15e8c:	bhi	15e68 <main@@Base+0x11a30>
   15e90:	mov	r0, r5
   15e94:	pop	{r4, r5, r6, pc}
   15e98:	andeq	r9, r2, ip, asr #4
   15e9c:	andeq	r2, r1, r8, asr #18
   15ea0:	andeq	pc, r0, r4, asr r0	; <UNPREDICTABLE>
   15ea4:	andeq	r1, r1, r4, lsr ip
   15ea8:	ldr	r3, [pc, #228]	; 15f94 <main@@Base+0x11b5c>
   15eac:	push	{r4, r5, r6, lr}
   15eb0:	add	r3, pc, r3
   15eb4:	mov	r4, r0
   15eb8:	mov	r5, r1
   15ebc:	ldr	r6, [r3]
   15ec0:	bl	159d0 <main@@Base+0x11598>
   15ec4:	cmp	r4, #0
   15ec8:	beq	15ef8 <main@@Base+0x11ac0>
   15ecc:	ldr	r3, [r4]
   15ed0:	cmp	r3, #0
   15ed4:	beq	15ee4 <main@@Base+0x11aac>
   15ed8:	ldr	r3, [r3]
   15edc:	cmp	r0, r3
   15ee0:	beq	15f1c <main@@Base+0x11ae4>
   15ee4:	mov	r1, r0
   15ee8:	mov	r0, r4
   15eec:	bl	3fcc <g_type_check_instance_is_a@plt>
   15ef0:	cmp	r0, #0
   15ef4:	bne	15f1c <main@@Base+0x11ae4>
   15ef8:	ldr	r1, [pc, #152]	; 15f98 <main@@Base+0x11b60>
   15efc:	ldr	r0, [pc, #152]	; 15f9c <main@@Base+0x11b64>
   15f00:	ldr	r2, [pc, #152]	; 15fa0 <main@@Base+0x11b68>
   15f04:	add	r1, pc, r1
   15f08:	add	r0, pc, r0
   15f0c:	add	r1, r1, #148	; 0x94
   15f10:	add	r2, pc, r2
   15f14:	pop	{r4, r5, r6, lr}
   15f18:	b	3870 <g_return_if_fail_warning@plt>
   15f1c:	bl	108a4 <main@@Base+0xc46c>
   15f20:	cmp	r5, #0
   15f24:	mov	r1, r0
   15f28:	beq	15f54 <main@@Base+0x11b1c>
   15f2c:	ldr	r3, [r5]
   15f30:	cmp	r3, #0
   15f34:	beq	15f44 <main@@Base+0x11b0c>
   15f38:	ldr	r3, [r3]
   15f3c:	cmp	r1, r3
   15f40:	beq	15f78 <main@@Base+0x11b40>
   15f44:	mov	r0, r5
   15f48:	bl	3fcc <g_type_check_instance_is_a@plt>
   15f4c:	cmp	r0, #0
   15f50:	bne	15f78 <main@@Base+0x11b40>
   15f54:	ldr	r1, [pc, #72]	; 15fa4 <main@@Base+0x11b6c>
   15f58:	ldr	r0, [pc, #72]	; 15fa8 <main@@Base+0x11b70>
   15f5c:	ldr	r2, [pc, #72]	; 15fac <main@@Base+0x11b74>
   15f60:	add	r1, pc, r1
   15f64:	add	r0, pc, r0
   15f68:	add	r1, r1, #148	; 0x94
   15f6c:	add	r2, pc, r2
   15f70:	pop	{r4, r5, r6, lr}
   15f74:	b	3870 <g_return_if_fail_warning@plt>
   15f78:	mov	r0, r5
   15f7c:	ldr	r4, [r4, r6]
   15f80:	bl	381c <g_object_ref@plt>
   15f84:	mov	r1, r0
   15f88:	mov	r0, r4
   15f8c:	pop	{r4, r5, r6, lr}
   15f90:	b	426c <g_ptr_array_add@plt>
   15f94:	andeq	r9, r2, ip, ror r1
   15f98:	andeq	r2, r1, r8, ror r8
   15f9c:	andeq	lr, r0, r4, lsl #31
   15fa0:	andeq	r1, r1, r4, ror #22
   15fa4:	andeq	r2, r1, ip, lsl r8
   15fa8:	andeq	lr, r0, r8, lsr #30
   15fac:	andeq	r1, r1, r0, asr #15
   15fb0:	ldr	r3, [pc, #120]	; 16030 <main@@Base+0x11bf8>
   15fb4:	push	{r4, r5, r6, lr}
   15fb8:	add	r3, pc, r3
   15fbc:	mov	r4, r0
   15fc0:	mov	r5, r1
   15fc4:	ldr	r6, [r3]
   15fc8:	bl	159d0 <main@@Base+0x11598>
   15fcc:	cmp	r4, #0
   15fd0:	beq	16000 <main@@Base+0x11bc8>
   15fd4:	ldr	r3, [r4]
   15fd8:	cmp	r3, #0
   15fdc:	beq	15fec <main@@Base+0x11bb4>
   15fe0:	ldr	r3, [r3]
   15fe4:	cmp	r0, r3
   15fe8:	beq	16024 <main@@Base+0x11bec>
   15fec:	mov	r1, r0
   15ff0:	mov	r0, r4
   15ff4:	bl	3fcc <g_type_check_instance_is_a@plt>
   15ff8:	cmp	r0, #0
   15ffc:	bne	16024 <main@@Base+0x11bec>
   16000:	ldr	r1, [pc, #44]	; 16034 <main@@Base+0x11bfc>
   16004:	ldr	r0, [pc, #44]	; 16038 <main@@Base+0x11c00>
   16008:	ldr	r2, [pc, #44]	; 1603c <main@@Base+0x11c04>
   1600c:	add	r1, pc, r1
   16010:	add	r0, pc, r0
   16014:	add	r1, r1, #172	; 0xac
   16018:	add	r2, pc, r2
   1601c:	pop	{r4, r5, r6, lr}
   16020:	b	3870 <g_return_if_fail_warning@plt>
   16024:	add	r4, r4, r6
   16028:	strb	r5, [r4, #259]	; 0x103
   1602c:	pop	{r4, r5, r6, pc}
   16030:	andeq	r9, r2, r4, ror r0
   16034:	andeq	r2, r1, r0, ror r7
   16038:	andeq	lr, r0, ip, ror lr
   1603c:	andeq	r1, r1, ip, asr sl
   16040:	ldr	r3, [pc, #212]	; 1611c <main@@Base+0x11ce4>
   16044:	push	{r4, r5, r6, lr}
   16048:	add	r3, pc, r3
   1604c:	mov	r4, r0
   16050:	mov	r5, r1
   16054:	ldr	r6, [r3]
   16058:	bl	159d0 <main@@Base+0x11598>
   1605c:	cmp	r4, #0
   16060:	beq	16090 <main@@Base+0x11c58>
   16064:	ldr	r3, [r4]
   16068:	cmp	r3, #0
   1606c:	beq	1607c <main@@Base+0x11c44>
   16070:	ldr	r3, [r3]
   16074:	cmp	r0, r3
   16078:	beq	160b4 <main@@Base+0x11c7c>
   1607c:	mov	r1, r0
   16080:	mov	r0, r4
   16084:	bl	3fcc <g_type_check_instance_is_a@plt>
   16088:	cmp	r0, #0
   1608c:	bne	160b4 <main@@Base+0x11c7c>
   16090:	ldr	r1, [pc, #136]	; 16120 <main@@Base+0x11ce8>
   16094:	ldr	r0, [pc, #136]	; 16124 <main@@Base+0x11cec>
   16098:	ldr	r2, [pc, #136]	; 16128 <main@@Base+0x11cf0>
   1609c:	add	r1, pc, r1
   160a0:	add	r0, pc, r0
   160a4:	add	r1, r1, #200	; 0xc8
   160a8:	add	r2, pc, r2
   160ac:	pop	{r4, r5, r6, lr}
   160b0:	b	3870 <g_return_if_fail_warning@plt>
   160b4:	add	r4, r4, r6
   160b8:	mov	r1, #0
   160bc:	add	r4, r4, #4
   160c0:	mov	r2, #255	; 0xff
   160c4:	mov	r0, r4
   160c8:	bl	3bd0 <memset@plt>
   160cc:	cmp	r5, #0
   160d0:	popeq	{r4, r5, r6, pc}
   160d4:	mov	r0, r5
   160d8:	bl	411c <strlen@plt>
   160dc:	mov	r1, r5
   160e0:	uxth	r2, r0
   160e4:	mov	r0, r4
   160e8:	cmp	r2, #253	; 0xfd
   160ec:	movhi	r2, #254	; 0xfe
   160f0:	bl	40e0 <memcpy@plt>
   160f4:	ldr	r0, [pc, #48]	; 1612c <main@@Base+0x11cf4>
   160f8:	add	r0, pc, r0
   160fc:	bl	3e64 <g_getenv@plt>
   16100:	cmp	r0, #0
   16104:	popeq	{r4, r5, r6, pc}
   16108:	mov	r0, r4
   1610c:	mov	r1, r5
   16110:	mov	r2, #255	; 0xff
   16114:	pop	{r4, r5, r6, lr}
   16118:	b	40e0 <memcpy@plt>
   1611c:	andeq	r8, r2, r4, ror #31
   16120:	andeq	r2, r1, r0, ror #13
   16124:	andeq	lr, r0, ip, ror #27
   16128:	andeq	r1, r1, ip, asr #19
   1612c:	andeq	r2, r1, r0, lsl #15
   16130:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   16134:	mov	r4, r0
   16138:	ldr	r3, [pc, #372]	; 162b4 <main@@Base+0x11e7c>
   1613c:	add	r3, pc, r3
   16140:	ldr	r5, [r3]
   16144:	bl	159d0 <main@@Base+0x11598>
   16148:	cmp	r4, #0
   1614c:	beq	1617c <main@@Base+0x11d44>
   16150:	ldr	r3, [r4]
   16154:	cmp	r3, #0
   16158:	beq	16168 <main@@Base+0x11d30>
   1615c:	ldr	r3, [r3]
   16160:	cmp	r0, r3
   16164:	beq	161a4 <main@@Base+0x11d6c>
   16168:	mov	r1, r0
   1616c:	mov	r0, r4
   16170:	bl	3fcc <g_type_check_instance_is_a@plt>
   16174:	cmp	r0, #0
   16178:	bne	161a4 <main@@Base+0x11d6c>
   1617c:	ldr	r1, [pc, #308]	; 162b8 <main@@Base+0x11e80>
   16180:	ldr	r0, [pc, #308]	; 162bc <main@@Base+0x11e84>
   16184:	ldr	r2, [pc, #308]	; 162c0 <main@@Base+0x11e88>
   16188:	add	r1, pc, r1
   1618c:	add	r0, pc, r0
   16190:	add	r1, r1, #220	; 0xdc
   16194:	add	r2, pc, r2
   16198:	bl	3870 <g_return_if_fail_warning@plt>
   1619c:	mov	r0, #0
   161a0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   161a4:	ldr	r0, [pc, #280]	; 162c4 <main@@Base+0x11e8c>
   161a8:	add	r7, r4, r5
   161ac:	add	r0, pc, r0
   161b0:	bl	3990 <g_string_new@plt>
   161b4:	ldr	r1, [pc, #268]	; 162c8 <main@@Base+0x11e90>
   161b8:	ldrb	r2, [r7, #259]	; 0x103
   161bc:	add	r1, pc, r1
   161c0:	mov	r6, r0
   161c4:	bl	4344 <g_string_append_printf@plt>
   161c8:	ldrb	r3, [r7, #4]
   161cc:	cmp	r3, #0
   161d0:	bne	1627c <main@@Base+0x11e44>
   161d4:	ldr	r3, [r4, r5]
   161d8:	mov	r0, r6
   161dc:	ldr	r1, [pc, #232]	; 162cc <main@@Base+0x11e94>
   161e0:	ldr	r2, [r3, #4]
   161e4:	add	r1, pc, r1
   161e8:	bl	4344 <g_string_append_printf@plt>
   161ec:	ldr	r3, [r4, r5]
   161f0:	ldr	r2, [r3, #4]
   161f4:	cmp	r2, #0
   161f8:	beq	1625c <main@@Base+0x11e24>
   161fc:	ldr	r8, [pc, #204]	; 162d0 <main@@Base+0x11e98>
   16200:	mov	r4, #0
   16204:	ldr	r9, [pc, #200]	; 162d4 <main@@Base+0x11e9c>
   16208:	add	r8, pc, r8
   1620c:	add	r9, pc, r9
   16210:	ldr	r3, [r3]
   16214:	ldr	r0, [r3, r4, lsl #2]
   16218:	bl	10c5c <main@@Base+0xc824>
   1621c:	mov	r5, r0
   16220:	mov	r1, r8
   16224:	mov	r0, r6
   16228:	mov	r2, r4
   1622c:	bl	4344 <g_string_append_printf@plt>
   16230:	mov	r0, r6
   16234:	mov	r1, r9
   16238:	mov	r2, r5
   1623c:	bl	4344 <g_string_append_printf@plt>
   16240:	mov	r0, r5
   16244:	add	r4, r4, #1
   16248:	bl	3eac <g_free@plt>
   1624c:	ldr	r3, [r7]
   16250:	ldr	r2, [r3, #4]
   16254:	cmp	r2, r4
   16258:	bhi	16210 <main@@Base+0x11dd8>
   1625c:	ldr	r1, [r6, #4]
   16260:	mov	r0, r6
   16264:	sub	r1, r1, #1
   16268:	bl	3960 <g_string_truncate@plt>
   1626c:	mov	r0, r6
   16270:	mov	r1, #0
   16274:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   16278:	b	40bc <g_string_free@plt>
   1627c:	ldr	r1, [pc, #84]	; 162d8 <main@@Base+0x11ea0>
   16280:	mov	r0, r6
   16284:	add	r2, r7, #4
   16288:	add	r1, pc, r1
   1628c:	bl	4344 <g_string_append_printf@plt>
   16290:	b	161d4 <main@@Base+0x11d9c>
   16294:	mov	r4, r0
   16298:	mov	r0, r5
   1629c:	bl	3eac <g_free@plt>
   162a0:	mov	r0, r4
   162a4:	bl	42f0 <_Unwind_Resume@plt>
   162a8:	mov	r4, r0
   162ac:	mov	r5, #0
   162b0:	b	16298 <main@@Base+0x11e60>
   162b4:	strdeq	r8, [r2], -r0
   162b8:	strdeq	r2, [r1], -r4
   162bc:	andeq	lr, r0, r0, lsl #26
   162c0:	andeq	r1, r1, r0, ror #17
   162c4:	ldrdeq	pc, [r0], -r4
   162c8:	andeq	r2, r1, ip, lsl r7
   162cc:	andeq	r2, r1, r8, asr #13
   162d0:			; <UNDEFINED> instruction: 0x000126bc
   162d4:	strdeq	r0, [r1], -ip
   162d8:	andeq	r2, r1, r0, lsl r6
   162dc:	ldr	r3, [pc, #28]	; 16300 <main@@Base+0x11ec8>
   162e0:	push	{r4, lr}
   162e4:	ldr	r4, [pc, r3]
   162e8:	add	r4, r0, r4
   162ec:	ldr	r0, [pc, #16]	; 16304 <main@@Base+0x11ecc>
   162f0:	add	r0, pc, r0
   162f4:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   162f8:	str	r0, [r4, #8]
   162fc:	pop	{r4, pc}
   16300:	andeq	r8, r2, r4, asr sp
   16304:	andeq	r0, r0, r0, lsl r0
   16308:	push	{r4, lr}
   1630c:	mov	r4, r0
   16310:	ldr	r0, [r0, #4]
   16314:	bl	414c <g_bytes_unref@plt>
   16318:	mov	r0, r4
   1631c:	pop	{r4, lr}
   16320:	b	3eac <g_free@plt>
   16324:	push	{r4, lr}
   16328:	mov	r4, r0
   1632c:	bl	420c <g_type_class_peek_parent@plt>
   16330:	ldr	r1, [pc, #52]	; 1636c <main@@Base+0x11f34>
   16334:	add	r1, pc, r1
   16338:	ldr	r3, [r1]
   1633c:	cmp	r3, #0
   16340:	str	r0, [r1, #4]
   16344:	beq	16350 <main@@Base+0x11f18>
   16348:	mov	r0, r4
   1634c:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   16350:	mov	r0, r4
   16354:	mov	r1, #80	; 0x50
   16358:	bl	4374 <g_type_check_class_cast@plt>
   1635c:	ldr	r3, [pc, #12]	; 16370 <main@@Base+0x11f38>
   16360:	add	r3, pc, r3
   16364:	str	r3, [r0, #24]
   16368:	pop	{r4, pc}
   1636c:	andeq	r8, r2, r4, lsl #26
   16370:	andeq	r0, r0, r0, lsl #6
   16374:	ldr	r3, [pc, #152]	; 16414 <main@@Base+0x11fdc>
   16378:	ldr	r2, [r1, #4]
   1637c:	push	{r4, r5, r6, r7, r8, lr}
   16380:	add	r3, pc, r3
   16384:	movw	r5, #65535	; 0xffff
   16388:	cmp	r2, r5
   1638c:	sub	sp, sp, #8
   16390:	mov	r4, r1
   16394:	mov	r7, r0
   16398:	ldr	r8, [r3]
   1639c:	beq	1640c <main@@Base+0x11fd4>
   163a0:	ldr	r3, [r1]
   163a4:	add	r2, r2, #1
   163a8:	ldr	r0, [pc, #104]	; 16418 <main@@Base+0x11fe0>
   163ac:	mov	r1, #128	; 0x80
   163b0:	rsb	ip, r3, r2
   163b4:	ldr	r2, [pc, #96]	; 1641c <main@@Base+0x11fe4>
   163b8:	str	ip, [sp]
   163bc:	add	r0, pc, r0
   163c0:	add	r2, pc, r2
   163c4:	add	r7, r7, r8
   163c8:	bl	3a38 <g_log@plt>
   163cc:	mov	r0, #8
   163d0:	bl	4248 <g_malloc0@plt>
   163d4:	ldr	r3, [r4]
   163d8:	ldr	r2, [r4, #4]
   163dc:	add	r2, r2, #1
   163e0:	mov	r1, r3
   163e4:	rsb	r2, r3, r2
   163e8:	mov	r6, r0
   163ec:	ldr	r0, [r4, #8]
   163f0:	str	r3, [r6]
   163f4:	bl	3b40 <g_bytes_new_from_bytes@plt>
   163f8:	mov	r1, r6
   163fc:	str	r0, [r6, #4]
   16400:	ldr	r0, [r7, #8]
   16404:	bl	426c <g_ptr_array_add@plt>
   16408:	str	r5, [r4, #4]
   1640c:	add	sp, sp, #8
   16410:	pop	{r4, r5, r6, r7, r8, pc}
   16414:			; <UNDEFINED> instruction: 0x00028cb8
   16418:	ldrdeq	lr, [r0], -r0
   1641c:	andeq	r2, r1, r0, lsl #11
   16420:	ldr	r2, [pc, #208]	; 164f8 <main@@Base+0x120c0>
   16424:	mov	r3, #20
   16428:	ldr	ip, [pc, #204]	; 164fc <main@@Base+0x120c4>
   1642c:	mov	r1, #0
   16430:	add	r2, pc, r2
   16434:	push	{r4, r5, r6, r7, r8, lr}
   16438:	sub	sp, sp, #16
   1643c:	ldr	r6, [r2, ip]
   16440:	mov	r8, r0
   16444:	str	r3, [sp, #4]
   16448:	mov	r0, r3
   1644c:	add	r5, sp, #16
   16450:	ldr	r3, [r6]
   16454:	str	r1, [r5, #-8]!
   16458:	str	r3, [sp, #12]
   1645c:	bl	4248 <g_malloc0@plt>
   16460:	mov	r7, r0
   16464:	mov	r0, #1
   16468:	bl	4008 <g_checksum_new@plt>
   1646c:	mov	r1, r5
   16470:	mov	r4, r0
   16474:	mov	r0, r8
   16478:	bl	4320 <g_bytes_get_data@plt>
   1647c:	mov	r1, r0
   16480:	ldr	r2, [sp, #8]
   16484:	mov	r0, r4
   16488:	bl	3c30 <g_checksum_update@plt>
   1648c:	mov	r0, r4
   16490:	mov	r1, r7
   16494:	add	r2, sp, #4
   16498:	bl	4314 <g_checksum_get_digest@plt>
   1649c:	mov	r0, r7
   164a0:	ldr	r1, [sp, #4]
   164a4:	bl	3a98 <g_bytes_new_take@plt>
   164a8:	cmp	r4, #0
   164ac:	mov	r5, r0
   164b0:	beq	164bc <main@@Base+0x12084>
   164b4:	mov	r0, r4
   164b8:	bl	3b28 <g_checksum_free@plt>
   164bc:	ldr	r2, [sp, #12]
   164c0:	mov	r0, r5
   164c4:	ldr	r3, [r6]
   164c8:	cmp	r2, r3
   164cc:	bne	164d8 <main@@Base+0x120a0>
   164d0:	add	sp, sp, #16
   164d4:	pop	{r4, r5, r6, r7, r8, pc}
   164d8:	bl	3e4c <__stack_chk_fail@plt>
   164dc:	cmp	r4, #0
   164e0:	mov	r5, r0
   164e4:	beq	164f0 <main@@Base+0x120b8>
   164e8:	mov	r0, r4
   164ec:	bl	3b28 <g_checksum_free@plt>
   164f0:	mov	r0, r5
   164f4:	bl	42f0 <_Unwind_Resume@plt>
   164f8:	andeq	r8, r2, r0, asr r7
   164fc:	andeq	r0, r0, r0, lsr r4
   16500:	ldr	r3, [pc, #152]	; 165a0 <main@@Base+0x12168>
   16504:	ldr	r2, [pc, #152]	; 165a4 <main@@Base+0x1216c>
   16508:	add	r3, pc, r3
   1650c:	push	{r4, r5, r6, r7, r8, lr}
   16510:	sub	sp, sp, #8
   16514:	ldr	r8, [r3, r2]
   16518:	add	r1, sp, #8
   1651c:	mov	r4, #0
   16520:	ldr	r7, [pc, #128]	; 165a8 <main@@Base+0x12170>
   16524:	str	r4, [r1, #-8]!
   16528:	mov	r1, sp
   1652c:	ldr	r3, [r8]
   16530:	add	r7, pc, r7
   16534:	str	r3, [sp, #4]
   16538:	bl	4320 <g_bytes_get_data@plt>
   1653c:	mov	r6, r0
   16540:	mov	r0, r4
   16544:	bl	3990 <g_string_new@plt>
   16548:	ldr	r3, [sp]
   1654c:	cmp	r3, r4
   16550:	mov	r5, r0
   16554:	beq	16578 <main@@Base+0x12140>
   16558:	ldrb	r2, [r6, r4]
   1655c:	mov	r0, r5
   16560:	mov	r1, r7
   16564:	add	r4, r4, #1
   16568:	bl	4344 <g_string_append_printf@plt>
   1656c:	ldr	r3, [sp]
   16570:	cmp	r3, r4
   16574:	bhi	16558 <main@@Base+0x12120>
   16578:	mov	r0, r5
   1657c:	mov	r1, #0
   16580:	bl	40bc <g_string_free@plt>
   16584:	ldr	r2, [sp, #4]
   16588:	ldr	r3, [r8]
   1658c:	cmp	r2, r3
   16590:	bne	1659c <main@@Base+0x12164>
   16594:	add	sp, sp, #8
   16598:	pop	{r4, r5, r6, r7, r8, pc}
   1659c:	bl	3e4c <__stack_chk_fail@plt>
   165a0:	andeq	r8, r2, r8, ror r6
   165a4:	andeq	r0, r0, r0, lsr r4
   165a8:			; <UNDEFINED> instruction: 0x00011fb4
   165ac:	push	{r4, r5, r6, r7, lr}
   165b0:	dmb	sy
   165b4:	ldr	r4, [pc, #152]	; 16654 <main@@Base+0x1221c>
   165b8:	sub	sp, sp, #20
   165bc:	add	r4, pc, r4
   165c0:	ldr	r5, [r4, #8]
   165c4:	dmb	sy
   165c8:	cmp	r5, #0
   165cc:	beq	165e4 <main@@Base+0x121ac>
   165d0:	ldr	r3, [pc, #128]	; 16658 <main@@Base+0x12220>
   165d4:	add	r3, pc, r3
   165d8:	ldr	r0, [r3, #8]
   165dc:	add	sp, sp, #20
   165e0:	pop	{r4, r5, r6, r7, pc}
   165e4:	add	r6, r4, #8
   165e8:	mov	r0, r6
   165ec:	bl	3d50 <g_once_init_enter@plt>
   165f0:	cmp	r0, #0
   165f4:	beq	165d0 <main@@Base+0x12198>
   165f8:	ldr	r0, [pc, #92]	; 1665c <main@@Base+0x12224>
   165fc:	mov	r7, #12
   16600:	add	r0, pc, r0
   16604:	bl	3df8 <g_intern_static_string@plt>
   16608:	ldr	r3, [pc, #80]	; 16660 <main@@Base+0x12228>
   1660c:	str	r5, [sp, #8]
   16610:	mov	r2, #68	; 0x44
   16614:	add	r3, pc, r3
   16618:	str	r3, [sp, #4]
   1661c:	ldr	r3, [pc, #64]	; 16664 <main@@Base+0x1222c>
   16620:	str	r7, [sp]
   16624:	add	r3, pc, r3
   16628:	mov	r1, r0
   1662c:	mov	r0, #80	; 0x50
   16630:	bl	3894 <g_type_register_static_simple@plt>
   16634:	mov	r1, r7
   16638:	mov	r5, r0
   1663c:	bl	3edc <g_type_add_instance_private@plt>
   16640:	mov	r1, r5
   16644:	str	r0, [r4]
   16648:	mov	r0, r6
   1664c:	bl	4140 <g_once_init_leave@plt>
   16650:	b	165d0 <main@@Base+0x12198>
   16654:	andeq	r8, r2, ip, ror sl
   16658:	andeq	r8, r2, r4, ror #20
   1665c:	andeq	r2, r1, ip, asr r3
   16660:			; <UNDEFINED> instruction: 0xfffffcc0
   16664:			; <UNDEFINED> instruction: 0xfffffcf8
   16668:	push	{r3, r4, r5, lr}
   1666c:	mov	r4, r0
   16670:	bl	165ac <main@@Base+0x12174>
   16674:	mov	r1, r0
   16678:	mov	r0, r4
   1667c:	bl	39d8 <g_type_check_instance_cast@plt>
   16680:	ldr	r3, [pc, #84]	; 166dc <main@@Base+0x122a4>
   16684:	add	r3, pc, r3
   16688:	ldr	r3, [r3]
   1668c:	add	r5, r0, r3
   16690:	ldr	r0, [r0, r3]
   16694:	cmp	r0, #0
   16698:	beq	166a0 <main@@Base+0x12268>
   1669c:	bl	414c <g_bytes_unref@plt>
   166a0:	ldr	r0, [r5, #4]
   166a4:	cmp	r0, #0
   166a8:	beq	166b0 <main@@Base+0x12278>
   166ac:	bl	414c <g_bytes_unref@plt>
   166b0:	ldr	r0, [r5, #8]
   166b4:	bl	4224 <g_ptr_array_unref@plt>
   166b8:	ldr	r3, [pc, #32]	; 166e0 <main@@Base+0x122a8>
   166bc:	mov	r1, #80	; 0x50
   166c0:	add	r3, pc, r3
   166c4:	ldr	r0, [r3, #4]
   166c8:	bl	4374 <g_type_check_class_cast@plt>
   166cc:	ldr	r3, [r0, #24]
   166d0:	mov	r0, r4
   166d4:	blx	r3
   166d8:	pop	{r3, r4, r5, pc}
   166dc:			; <UNDEFINED> instruction: 0x000289b4
   166e0:	andeq	r8, r2, r8, ror r9
   166e4:	ldr	r3, [pc, #604]	; 16948 <main@@Base+0x12510>
   166e8:	ldr	r2, [pc, #604]	; 1694c <main@@Base+0x12514>
   166ec:	add	r3, pc, r3
   166f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166f4:	mov	r4, r1
   166f8:	ldr	r2, [r3, r2]
   166fc:	sub	sp, sp, #20
   16700:	ldr	r1, [pc, #584]	; 16950 <main@@Base+0x12518>
   16704:	mov	r5, r0
   16708:	ldr	r3, [r2]
   1670c:	add	r1, pc, r1
   16710:	str	r2, [sp, #4]
   16714:	ldr	r9, [r1]
   16718:	str	r3, [sp, #12]
   1671c:	bl	165ac <main@@Base+0x12174>
   16720:	cmp	r5, #0
   16724:	beq	16754 <main@@Base+0x1231c>
   16728:	ldr	r3, [r5]
   1672c:	cmp	r3, #0
   16730:	beq	16740 <main@@Base+0x12308>
   16734:	ldr	r3, [r3]
   16738:	cmp	r0, r3
   1673c:	beq	16790 <main@@Base+0x12358>
   16740:	mov	r1, r0
   16744:	mov	r0, r5
   16748:	bl	3fcc <g_type_check_instance_is_a@plt>
   1674c:	cmp	r0, #0
   16750:	bne	16790 <main@@Base+0x12358>
   16754:	ldr	r0, [pc, #504]	; 16954 <main@@Base+0x1251c>
   16758:	ldr	r1, [pc, #504]	; 16958 <main@@Base+0x12520>
   1675c:	ldr	r2, [pc, #504]	; 1695c <main@@Base+0x12524>
   16760:	add	r0, pc, r0
   16764:	add	r1, pc, r1
   16768:	add	r2, pc, r2
   1676c:	bl	3870 <g_return_if_fail_warning@plt>
   16770:	mov	r0, #0
   16774:	ldr	r1, [sp, #4]
   16778:	ldr	r2, [sp, #12]
   1677c:	ldr	r3, [r1]
   16780:	cmp	r2, r3
   16784:	bne	16944 <main@@Base+0x1250c>
   16788:	add	sp, sp, #20
   1678c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16790:	add	r8, r5, r9
   16794:	ldr	r3, [r8, #8]
   16798:	ldr	r6, [r3, #4]
   1679c:	cmp	r6, #0
   167a0:	beq	16920 <main@@Base+0x124e8>
   167a4:	mov	r4, #0
   167a8:	mov	r7, #48	; 0x30
   167ac:	ldr	r3, [r3]
   167b0:	ldr	r3, [r3, r4, lsl #2]
   167b4:	add	r4, r4, #1
   167b8:	ldr	r0, [r3, #4]
   167bc:	bl	3f24 <g_bytes_get_size@plt>
   167c0:	ldr	r3, [r8, #8]
   167c4:	ldr	r2, [r3, #4]
   167c8:	cmp	r2, r4
   167cc:	add	r0, r0, #12
   167d0:	add	r7, r7, r0
   167d4:	bhi	167ac <main@@Base+0x12374>
   167d8:	ldr	r0, [pc, #384]	; 16960 <main@@Base+0x12528>
   167dc:	mov	r3, r7
   167e0:	ldr	r2, [pc, #380]	; 16964 <main@@Base+0x1252c>
   167e4:	mov	r1, #128	; 0x80
   167e8:	add	r0, pc, r0
   167ec:	add	r2, pc, r2
   167f0:	bl	3a38 <g_log@plt>
   167f4:	mov	r0, r7
   167f8:	bl	4248 <g_malloc0@plt>
   167fc:	ldr	r3, [pc, #356]	; 16968 <main@@Base+0x12530>
   16800:	add	r3, pc, r3
   16804:	mov	r6, r0
   16808:	ldr	r0, [r3]
   1680c:	str	r0, [r6]
   16810:	ldr	r0, [r5, r9]
   16814:	cmp	r0, #0
   16818:	beq	16848 <main@@Base+0x12410>
   1681c:	add	r3, sp, #16
   16820:	str	r3, [sp]
   16824:	ldr	r1, [sp]
   16828:	mov	r3, #0
   1682c:	str	r3, [r1, #-8]!
   16830:	str	r1, [sp]
   16834:	bl	4320 <g_bytes_get_data@plt>
   16838:	ldr	r2, [sp, #8]
   1683c:	mov	r1, r0
   16840:	add	r0, r6, #8
   16844:	bl	40e0 <memcpy@plt>
   16848:	ldr	r0, [r8, #4]
   1684c:	cmp	r0, #0
   16850:	beq	16880 <main@@Base+0x12448>
   16854:	add	r3, sp, #16
   16858:	str	r3, [sp]
   1685c:	ldr	r1, [sp]
   16860:	mov	r3, #0
   16864:	str	r3, [r1, #-8]!
   16868:	str	r1, [sp]
   1686c:	bl	4320 <g_bytes_get_data@plt>
   16870:	ldr	r2, [sp, #8]
   16874:	mov	r1, r0
   16878:	add	r0, r6, #28
   1687c:	bl	40e0 <memcpy@plt>
   16880:	ldr	r2, [r8, #8]
   16884:	ldr	r3, [r2, #4]
   16888:	cmp	r3, #0
   1688c:	beq	16910 <main@@Base+0x124d8>
   16890:	mov	fp, #0
   16894:	mov	r4, #48	; 0x30
   16898:	mov	r5, fp
   1689c:	add	r3, sp, #8
   168a0:	str	r3, [sp]
   168a4:	ldr	r3, [r2]
   168a8:	ldr	r1, [sp]
   168ac:	ldr	r9, [r3, fp, lsl #2]
   168b0:	add	fp, fp, #1
   168b4:	str	r5, [sp, #8]
   168b8:	ldr	r0, [r9, #4]
   168bc:	bl	4320 <g_bytes_get_data@plt>
   168c0:	ldr	lr, [r9]
   168c4:	ldr	sl, [sp, #8]
   168c8:	add	ip, r6, r4
   168cc:	str	lr, [r6, r4]
   168d0:	mov	r2, sl
   168d4:	str	sl, [ip, #4]
   168d8:	strb	r5, [ip, #8]
   168dc:	strb	r5, [ip, #9]
   168e0:	strb	r5, [ip, #10]
   168e4:	strb	r5, [ip, #11]
   168e8:	mov	r1, r0
   168ec:	add	r0, r4, #12
   168f0:	add	r0, r6, r0
   168f4:	bl	40e0 <memcpy@plt>
   168f8:	ldr	r2, [r8, #8]
   168fc:	add	r3, sl, #12
   16900:	add	r4, r4, r3
   16904:	ldr	r3, [r2, #4]
   16908:	cmp	r3, fp
   1690c:	bhi	168a4 <main@@Base+0x1246c>
   16910:	mov	r0, r6
   16914:	mov	r1, r7
   16918:	bl	3a98 <g_bytes_new_take@plt>
   1691c:	b	16774 <main@@Base+0x1233c>
   16920:	bl	40a4 <fwupd_error_quark@plt>
   16924:	ldr	r3, [pc, #64]	; 1696c <main@@Base+0x12534>
   16928:	mov	r2, #7
   1692c:	add	r3, pc, r3
   16930:	mov	r1, r0
   16934:	mov	r0, r4
   16938:	bl	3ae0 <g_set_error_literal@plt>
   1693c:	mov	r0, r6
   16940:	b	16774 <main@@Base+0x1233c>
   16944:	bl	3e4c <__stack_chk_fail@plt>
   16948:	muleq	r2, r4, r4
   1694c:	andeq	r0, r0, r0, lsr r4
   16950:	andeq	r8, r2, ip, lsr #18
   16954:	andeq	lr, r0, ip, lsr #14
   16958:	andeq	r2, r1, ip, lsl #3
   1695c:	andeq	r2, r1, r0, lsr r2
   16960:	andeq	lr, r0, r4, lsr #13
   16964:	muleq	r1, r4, r1
   16968:	muleq	r1, r0, r1
   1696c:	andeq	r2, r1, ip, lsr r0
   16970:	ldr	r3, [pc, #692]	; 16c2c <main@@Base+0x127f4>
   16974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16978:	mov	r4, r0
   1697c:	ldr	r0, [pc, #684]	; 16c30 <main@@Base+0x127f8>
   16980:	sub	sp, sp, #28
   16984:	add	r3, pc, r3
   16988:	mov	r6, r1
   1698c:	str	r2, [sp, #12]
   16990:	mov	r2, #0
   16994:	ldr	r0, [r3, r0]
   16998:	ldr	r1, [pc, #660]	; 16c34 <main@@Base+0x127fc>
   1699c:	str	r2, [sp, #16]
   169a0:	ldr	r3, [r0]
   169a4:	add	r1, pc, r1
   169a8:	str	r0, [sp, #8]
   169ac:	ldr	r5, [r1]
   169b0:	str	r3, [sp, #20]
   169b4:	bl	165ac <main@@Base+0x12174>
   169b8:	cmp	r4, #0
   169bc:	add	r7, r4, r5
   169c0:	beq	169f0 <main@@Base+0x125b8>
   169c4:	ldr	r3, [r4]
   169c8:	cmp	r3, #0
   169cc:	beq	169dc <main@@Base+0x125a4>
   169d0:	ldr	r3, [r3]
   169d4:	cmp	r0, r3
   169d8:	beq	16a30 <main@@Base+0x125f8>
   169dc:	mov	r1, r0
   169e0:	mov	r0, r4
   169e4:	bl	3fcc <g_type_check_instance_is_a@plt>
   169e8:	cmp	r0, #0
   169ec:	bne	16a30 <main@@Base+0x125f8>
   169f0:	ldr	r1, [pc, #576]	; 16c38 <main@@Base+0x12800>
   169f4:	ldr	r0, [pc, #576]	; 16c3c <main@@Base+0x12804>
   169f8:	ldr	r2, [pc, #576]	; 16c40 <main@@Base+0x12808>
   169fc:	add	r1, pc, r1
   16a00:	add	r0, pc, r0
   16a04:	add	r1, r1, #20
   16a08:	add	r2, pc, r2
   16a0c:	bl	3870 <g_return_if_fail_warning@plt>
   16a10:	mov	r0, #0
   16a14:	ldr	r1, [sp, #8]
   16a18:	ldr	r2, [sp, #20]
   16a1c:	ldr	r3, [r1]
   16a20:	cmp	r2, r3
   16a24:	bne	16c28 <main@@Base+0x127f0>
   16a28:	add	sp, sp, #28
   16a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a30:	cmp	r6, #0
   16a34:	beq	16ba4 <main@@Base+0x1276c>
   16a38:	ldr	r3, [r7, #8]
   16a3c:	ldr	fp, [r3, #4]
   16a40:	cmp	fp, #0
   16a44:	bne	16b5c <main@@Base+0x12724>
   16a48:	mov	r0, r6
   16a4c:	add	r1, sp, #16
   16a50:	bl	4320 <g_bytes_get_data@plt>
   16a54:	ldr	r3, [sp, #16]
   16a58:	cmp	r3, #60	; 0x3c
   16a5c:	mov	r8, r0
   16a60:	bls	16b80 <main@@Base+0x12748>
   16a64:	ldr	r1, [pc, #472]	; 16c44 <main@@Base+0x1280c>
   16a68:	mov	r2, #4
   16a6c:	add	r1, pc, r1
   16a70:	bl	42fc <memcmp@plt>
   16a74:	cmp	r0, #0
   16a78:	bne	16bfc <main@@Base+0x127c4>
   16a7c:	mov	r1, #20
   16a80:	add	r0, r8, #8
   16a84:	bl	390c <g_bytes_new@plt>
   16a88:	mov	r1, #20
   16a8c:	str	r0, [r4, r5]
   16a90:	add	r0, r8, #28
   16a94:	bl	390c <g_bytes_new@plt>
   16a98:	ldr	r3, [sp, #16]
   16a9c:	cmp	r3, #48	; 0x30
   16aa0:	str	r0, [r7, #4]
   16aa4:	bls	16c20 <main@@Base+0x127e8>
   16aa8:	ldr	r5, [r8, #52]	; 0x34
   16aac:	ldr	r9, [r8, #48]	; 0x30
   16ab0:	cmp	r3, r5
   16ab4:	add	fp, r5, #48	; 0x30
   16ab8:	bcc	16bcc <main@@Base+0x12794>
   16abc:	cmp	fp, r3
   16ac0:	movls	r4, #48	; 0x30
   16ac4:	bls	16aec <main@@Base+0x126b4>
   16ac8:	b	16bcc <main@@Base+0x12794>
   16acc:	add	r2, r8, r4
   16ad0:	ldr	r5, [r2, #4]
   16ad4:	ldr	r9, [r2]
   16ad8:	cmp	r3, r5
   16adc:	add	fp, r4, r5
   16ae0:	bcc	16bcc <main@@Base+0x12794>
   16ae4:	cmp	r3, fp
   16ae8:	bcc	16bcc <main@@Base+0x12794>
   16aec:	mov	r0, #8
   16af0:	bl	4248 <g_malloc0@plt>
   16af4:	add	r1, r4, #12
   16af8:	mov	r2, r5
   16afc:	add	r4, fp, #12
   16b00:	mov	sl, r0
   16b04:	mov	r0, r6
   16b08:	str	r9, [sl]
   16b0c:	bl	3b40 <g_bytes_new_from_bytes@plt>
   16b10:	mov	r1, sl
   16b14:	str	r0, [sl, #4]
   16b18:	ldr	r0, [r7, #8]
   16b1c:	bl	426c <g_ptr_array_add@plt>
   16b20:	ldr	r3, [sp, #16]
   16b24:	cmp	r3, r4
   16b28:	bhi	16acc <main@@Base+0x12694>
   16b2c:	cmp	r4, r3
   16b30:	moveq	r0, #1
   16b34:	beq	16a14 <main@@Base+0x125dc>
   16b38:	bl	40a4 <fwupd_error_quark@plt>
   16b3c:	ldr	r3, [pc, #260]	; 16c48 <main@@Base+0x12810>
   16b40:	mov	r2, #7
   16b44:	add	r3, pc, r3
   16b48:	mov	r1, r0
   16b4c:	ldr	r0, [sp, #12]
   16b50:	bl	3ae0 <g_set_error_literal@plt>
   16b54:	mov	r0, #0
   16b58:	b	16a14 <main@@Base+0x125dc>
   16b5c:	bl	40a4 <fwupd_error_quark@plt>
   16b60:	ldr	r3, [pc, #228]	; 16c4c <main@@Base+0x12814>
   16b64:	mov	r2, #7
   16b68:	add	r3, pc, r3
   16b6c:	mov	r1, r0
   16b70:	ldr	r0, [sp, #12]
   16b74:	bl	3ae0 <g_set_error_literal@plt>
   16b78:	mov	r0, #0
   16b7c:	b	16a14 <main@@Base+0x125dc>
   16b80:	bl	40a4 <fwupd_error_quark@plt>
   16b84:	ldr	r3, [pc, #196]	; 16c50 <main@@Base+0x12818>
   16b88:	mov	r2, #7
   16b8c:	add	r3, pc, r3
   16b90:	mov	r1, r0
   16b94:	ldr	r0, [sp, #12]
   16b98:	bl	3ae0 <g_set_error_literal@plt>
   16b9c:	mov	r0, fp
   16ba0:	b	16a14 <main@@Base+0x125dc>
   16ba4:	ldr	r1, [pc, #168]	; 16c54 <main@@Base+0x1281c>
   16ba8:	ldr	r0, [pc, #168]	; 16c58 <main@@Base+0x12820>
   16bac:	ldr	r2, [pc, #168]	; 16c5c <main@@Base+0x12824>
   16bb0:	add	r1, pc, r1
   16bb4:	add	r0, pc, r0
   16bb8:	add	r1, r1, #20
   16bbc:	add	r2, pc, r2
   16bc0:	bl	3870 <g_return_if_fail_warning@plt>
   16bc4:	mov	r0, r6
   16bc8:	b	16a14 <main@@Base+0x125dc>
   16bcc:	bl	40a4 <fwupd_error_quark@plt>
   16bd0:	ldr	ip, [sp, #16]
   16bd4:	ldr	r3, [pc, #132]	; 16c60 <main@@Base+0x12828>
   16bd8:	mov	r2, #7
   16bdc:	str	fp, [sp]
   16be0:	add	r3, pc, r3
   16be4:	str	ip, [sp, #4]
   16be8:	mov	r1, r0
   16bec:	ldr	r0, [sp, #12]
   16bf0:	bl	4350 <g_set_error@plt>
   16bf4:	mov	r0, #0
   16bf8:	b	16a14 <main@@Base+0x125dc>
   16bfc:	bl	40a4 <fwupd_error_quark@plt>
   16c00:	ldr	r3, [pc, #92]	; 16c64 <main@@Base+0x1282c>
   16c04:	mov	r2, #7
   16c08:	add	r3, pc, r3
   16c0c:	mov	r1, r0
   16c10:	ldr	r0, [sp, #12]
   16c14:	bl	3ae0 <g_set_error_literal@plt>
   16c18:	mov	r0, fp
   16c1c:	b	16a14 <main@@Base+0x125dc>
   16c20:	mov	r4, #48	; 0x30
   16c24:	b	16b2c <main@@Base+0x126f4>
   16c28:	bl	3e4c <__stack_chk_fail@plt>
   16c2c:	strdeq	r8, [r2], -ip
   16c30:	andeq	r0, r0, r0, lsr r4
   16c34:	muleq	r2, r4, r6
   16c38:	strdeq	r1, [r1], -r4
   16c3c:	andeq	lr, r0, ip, lsl #9
   16c40:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   16c44:	andeq	r1, r1, r4, lsr #30
   16c48:	andeq	r1, r1, ip, ror #29
   16c4c:	andeq	r1, r1, r4, asr #28
   16c50:	andeq	r1, r1, r0, asr #28
   16c54:	andeq	r1, r1, r0, asr #26
   16c58:	ldrdeq	lr, [r0], -r8
   16c5c:	muleq	r1, ip, lr
   16c60:	andeq	r1, r1, r0, lsr #28
   16c64:	ldrdeq	r1, [r1], -r8
   16c68:	ldr	ip, [pc, #752]	; 16f60 <main@@Base+0x12b28>
   16c6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c70:	mov	r6, r0
   16c74:	ldr	r0, [pc, #744]	; 16f64 <main@@Base+0x12b2c>
   16c78:	add	ip, pc, ip
   16c7c:	mov	r4, r1
   16c80:	ldr	r1, [pc, #736]	; 16f68 <main@@Base+0x12b30>
   16c84:	mov	r5, r2
   16c88:	mov	r2, ip
   16c8c:	ldr	r7, [ip, r0]
   16c90:	sub	sp, sp, #44	; 0x2c
   16c94:	add	r1, pc, r1
   16c98:	mov	sl, r3
   16c9c:	mov	r3, #0
   16ca0:	str	r3, [sp, #16]
   16ca4:	ldr	r2, [r7]
   16ca8:	ldr	r8, [r1]
   16cac:	str	r3, [sp, #20]
   16cb0:	str	r2, [sp, #36]	; 0x24
   16cb4:	bl	165ac <main@@Base+0x12174>
   16cb8:	cmp	r6, #0
   16cbc:	add	r9, r6, r8
   16cc0:	beq	16cf0 <main@@Base+0x128b8>
   16cc4:	ldr	r3, [r6]
   16cc8:	cmp	r3, #0
   16ccc:	beq	16cdc <main@@Base+0x128a4>
   16cd0:	ldr	r3, [r3]
   16cd4:	cmp	r0, r3
   16cd8:	beq	16d2c <main@@Base+0x128f4>
   16cdc:	mov	r1, r0
   16ce0:	mov	r0, r6
   16ce4:	bl	3fcc <g_type_check_instance_is_a@plt>
   16ce8:	cmp	r0, #0
   16cec:	bne	16d2c <main@@Base+0x128f4>
   16cf0:	ldr	r1, [pc, #628]	; 16f6c <main@@Base+0x12b34>
   16cf4:	ldr	r0, [pc, #628]	; 16f70 <main@@Base+0x12b38>
   16cf8:	ldr	r2, [pc, #628]	; 16f74 <main@@Base+0x12b3c>
   16cfc:	add	r1, pc, r1
   16d00:	add	r0, pc, r0
   16d04:	add	r1, r1, #40	; 0x28
   16d08:	add	r2, pc, r2
   16d0c:	bl	3870 <g_return_if_fail_warning@plt>
   16d10:	mov	r0, #0
   16d14:	ldr	r2, [sp, #36]	; 0x24
   16d18:	ldr	r3, [r7]
   16d1c:	cmp	r2, r3
   16d20:	bne	16f5c <main@@Base+0x12b24>
   16d24:	add	sp, sp, #44	; 0x2c
   16d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d2c:	cmp	r4, #0
   16d30:	beq	16ebc <main@@Base+0x12a84>
   16d34:	cmp	r5, #0
   16d38:	beq	16ee4 <main@@Base+0x12aac>
   16d3c:	mov	r0, r4
   16d40:	mov	r1, r5
   16d44:	bl	41e8 <g_bytes_equal@plt>
   16d48:	subs	ip, r0, #0
   16d4c:	bne	16e98 <main@@Base+0x12a60>
   16d50:	ldr	r3, [r9, #8]
   16d54:	ldr	fp, [r3, #4]
   16d58:	cmp	fp, #0
   16d5c:	bne	16e58 <main@@Base+0x12a20>
   16d60:	mov	r0, r4
   16d64:	bl	16420 <main@@Base+0x11fe8>
   16d68:	str	r0, [r6, r8]
   16d6c:	mov	r0, r5
   16d70:	bl	16420 <main@@Base+0x11fe8>
   16d74:	add	r1, sp, #16
   16d78:	str	r0, [r9, #4]
   16d7c:	mov	r0, r4
   16d80:	bl	4320 <g_bytes_get_data@plt>
   16d84:	add	r1, sp, #20
   16d88:	mov	r8, r0
   16d8c:	mov	r0, r5
   16d90:	bl	4320 <g_bytes_get_data@plt>
   16d94:	ldr	r3, [sp, #16]
   16d98:	ldr	r2, [sp, #20]
   16d9c:	cmp	r3, r2
   16da0:	mov	r9, r0
   16da4:	bhi	16f28 <main@@Base+0x12af0>
   16da8:	beq	16f0c <main@@Base+0x12ad4>
   16dac:	str	r2, [sp]
   16db0:	mov	r1, #128	; 0x80
   16db4:	ldr	r0, [pc, #444]	; 16f78 <main@@Base+0x12b40>
   16db8:	ldr	r2, [pc, #444]	; 16f7c <main@@Base+0x12b44>
   16dbc:	add	r0, pc, r0
   16dc0:	add	r2, pc, r2
   16dc4:	bl	3a38 <g_log@plt>
   16dc8:	mov	r3, #0
   16dcc:	movw	sl, #65535	; 0xffff
   16dd0:	str	r5, [sp, #32]
   16dd4:	mov	r4, r3
   16dd8:	str	r3, [sp, #24]
   16ddc:	mov	r5, r3
   16de0:	str	sl, [sp, #28]
   16de4:	add	fp, sp, #24
   16de8:	ldr	r2, [sp, #16]
   16dec:	ldr	ip, [sp, #20]
   16df0:	b	16e14 <main@@Base+0x129dc>
   16df4:	cmp	ip, r4
   16df8:	bls	16e84 <main@@Base+0x12a4c>
   16dfc:	ldr	r3, [sp, #28]
   16e00:	mov	r5, #0
   16e04:	str	r4, [sp, #28]
   16e08:	cmp	r3, sl
   16e0c:	streq	r4, [sp, #24]
   16e10:	add	r4, r4, #1
   16e14:	cmp	r4, r2
   16e18:	bcs	16df4 <main@@Base+0x129bc>
   16e1c:	cmp	ip, r4
   16e20:	bls	16dfc <main@@Base+0x129c4>
   16e24:	ldrb	r1, [r8, r4]
   16e28:	ldrb	r3, [r9, r4]
   16e2c:	cmp	r1, r3
   16e30:	bne	16dfc <main@@Base+0x129c4>
   16e34:	add	r5, r5, #1
   16e38:	cmp	r5, #24
   16e3c:	bls	16e10 <main@@Base+0x129d8>
   16e40:	mov	r0, r6
   16e44:	mov	r1, fp
   16e48:	bl	16374 <main@@Base+0x11f3c>
   16e4c:	ldr	r2, [sp, #16]
   16e50:	ldr	ip, [sp, #20]
   16e54:	b	16e10 <main@@Base+0x129d8>
   16e58:	str	ip, [sp, #12]
   16e5c:	bl	40a4 <fwupd_error_quark@plt>
   16e60:	ldr	r3, [pc, #280]	; 16f80 <main@@Base+0x12b48>
   16e64:	mov	r2, #7
   16e68:	add	r3, pc, r3
   16e6c:	mov	r1, r0
   16e70:	mov	r0, sl
   16e74:	bl	3ae0 <g_set_error_literal@plt>
   16e78:	ldr	ip, [sp, #12]
   16e7c:	mov	r0, ip
   16e80:	b	16d14 <main@@Base+0x128dc>
   16e84:	mov	r0, r6
   16e88:	mov	r1, fp
   16e8c:	bl	16374 <main@@Base+0x11f3c>
   16e90:	mov	r0, #1
   16e94:	b	16d14 <main@@Base+0x128dc>
   16e98:	bl	40a4 <fwupd_error_quark@plt>
   16e9c:	ldr	r3, [pc, #224]	; 16f84 <main@@Base+0x12b4c>
   16ea0:	mov	r2, #7
   16ea4:	add	r3, pc, r3
   16ea8:	mov	r1, r0
   16eac:	mov	r0, sl
   16eb0:	bl	3ae0 <g_set_error_literal@plt>
   16eb4:	mov	r0, #0
   16eb8:	b	16d14 <main@@Base+0x128dc>
   16ebc:	ldr	r1, [pc, #196]	; 16f88 <main@@Base+0x12b50>
   16ec0:	ldr	r0, [pc, #196]	; 16f8c <main@@Base+0x12b54>
   16ec4:	ldr	r2, [pc, #196]	; 16f90 <main@@Base+0x12b58>
   16ec8:	add	r1, pc, r1
   16ecc:	add	r0, pc, r0
   16ed0:	add	r1, r1, #40	; 0x28
   16ed4:	add	r2, pc, r2
   16ed8:	bl	3870 <g_return_if_fail_warning@plt>
   16edc:	mov	r0, r4
   16ee0:	b	16d14 <main@@Base+0x128dc>
   16ee4:	ldr	r1, [pc, #168]	; 16f94 <main@@Base+0x12b5c>
   16ee8:	ldr	r0, [pc, #168]	; 16f98 <main@@Base+0x12b60>
   16eec:	ldr	r2, [pc, #168]	; 16f9c <main@@Base+0x12b64>
   16ef0:	add	r1, pc, r1
   16ef4:	add	r0, pc, r0
   16ef8:	add	r1, r1, #40	; 0x28
   16efc:	add	r2, pc, r2
   16f00:	bl	3870 <g_return_if_fail_warning@plt>
   16f04:	mov	r0, r5
   16f08:	b	16d14 <main@@Base+0x128dc>
   16f0c:	ldr	r0, [pc, #140]	; 16fa0 <main@@Base+0x12b68>
   16f10:	mov	r1, #128	; 0x80
   16f14:	ldr	r2, [pc, #136]	; 16fa4 <main@@Base+0x12b6c>
   16f18:	add	r0, pc, r0
   16f1c:	add	r2, pc, r2
   16f20:	bl	3a38 <g_log@plt>
   16f24:	b	16dc8 <main@@Base+0x12990>
   16f28:	bl	40a4 <fwupd_error_quark@plt>
   16f2c:	ldr	lr, [sp, #16]
   16f30:	ldr	ip, [sp, #20]
   16f34:	mov	r2, #10
   16f38:	ldr	r3, [pc, #104]	; 16fa8 <main@@Base+0x12b70>
   16f3c:	str	lr, [sp]
   16f40:	add	r3, pc, r3
   16f44:	str	ip, [sp, #4]
   16f48:	mov	r1, r0
   16f4c:	mov	r0, sl
   16f50:	bl	4350 <g_set_error@plt>
   16f54:	mov	r0, fp
   16f58:	b	16d14 <main@@Base+0x128dc>
   16f5c:	bl	3e4c <__stack_chk_fail@plt>
   16f60:	andeq	r7, r2, r8, lsl #30
   16f64:	andeq	r0, r0, r0, lsr r4
   16f68:	andeq	r8, r2, r4, lsr #7
   16f6c:	strdeq	r1, [r1], -r4
   16f70:	andeq	lr, r0, ip, lsl #3
   16f74:	muleq	r1, r0, ip
   16f78:	ldrdeq	lr, [r0], -r0
   16f7c:	andeq	r1, r1, ip, lsl sp
   16f80:	andeq	r1, r1, r4, asr #22
   16f84:	andeq	r1, r1, r4, asr #23
   16f88:	andeq	r1, r1, r8, lsr #20
   16f8c:	andeq	sp, r0, r0, asr #31
   16f90:	andeq	r1, r1, r8, lsr #24
   16f94:	andeq	r1, r1, r0, lsl #20
   16f98:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   16f9c:	andeq	r1, r1, r0, lsl ip
   16fa0:	andeq	sp, r0, r4, ror pc
   16fa4:	andeq	r1, r1, r0, lsr #23
   16fa8:	andeq	r1, r1, ip, asr #22
   16fac:	ldr	r3, [pc, #12]	; 16fc0 <main@@Base+0x12b88>
   16fb0:	add	r3, pc, r3
   16fb4:	ldr	r3, [r3]
   16fb8:	ldr	r0, [r0, r3]
   16fbc:	bx	lr
   16fc0:	andeq	r8, r2, r8, lsl #1
   16fc4:	ldr	r3, [pc, #16]	; 16fdc <main@@Base+0x12ba4>
   16fc8:	add	r3, pc, r3
   16fcc:	ldr	r3, [r3]
   16fd0:	add	r0, r0, r3
   16fd4:	ldr	r0, [r0, #4]
   16fd8:	bx	lr
   16fdc:	andeq	r8, r2, r0, ror r0
   16fe0:	ldr	ip, [pc, #1224]	; 174b0 <main@@Base+0x13078>
   16fe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fe8:	add	ip, pc, ip
   16fec:	mov	r5, r0
   16ff0:	ldr	r0, [pc, #1212]	; 174b4 <main@@Base+0x1307c>
   16ff4:	ldr	r4, [ip]
   16ff8:	sub	sp, sp, #60	; 0x3c
   16ffc:	add	r0, pc, r0
   17000:	mov	r8, r1
   17004:	add	r7, r5, r4
   17008:	ldr	r1, [pc, #1192]	; 174b8 <main@@Base+0x13080>
   1700c:	str	r3, [sp, #32]
   17010:	mov	r3, r0
   17014:	ldr	r3, [r7, #8]
   17018:	mov	r6, r2
   1701c:	ldr	r1, [r0, r1]
   17020:	ldr	r3, [r3, #4]
   17024:	ldr	r2, [r1]
   17028:	cmp	r3, #0
   1702c:	str	r1, [sp, #24]
   17030:	str	r2, [sp, #52]	; 0x34
   17034:	bne	17084 <main@@Base+0x12c4c>
   17038:	bl	40a4 <fwupd_error_quark@plt>
   1703c:	ldr	r3, [pc, #1144]	; 174bc <main@@Base+0x13084>
   17040:	mov	r1, r0
   17044:	mov	r2, #7
   17048:	ldr	r0, [sp, #32]
   1704c:	add	r3, pc, r3
   17050:	bl	3ae0 <g_set_error_literal@plt>
   17054:	mov	r9, #0
   17058:	mov	r5, r9
   1705c:	mov	r0, r9
   17060:	bl	3eac <g_free@plt>
   17064:	ldr	r1, [sp, #24]
   17068:	ldr	r2, [sp, #52]	; 0x34
   1706c:	mov	r0, r5
   17070:	ldr	r3, [r1]
   17074:	cmp	r2, r3
   17078:	bne	17374 <main@@Base+0x12f3c>
   1707c:	add	sp, sp, #60	; 0x3c
   17080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17084:	mov	r0, r8
   17088:	bl	16420 <main@@Base+0x11fe8>
   1708c:	ands	r6, r6, #1
   17090:	str	r0, [sp, #28]
   17094:	str	r6, [sp, #36]	; 0x24
   17098:	beq	17238 <main@@Base+0x12e00>
   1709c:	ldr	r3, [r7, #8]
   170a0:	ldr	r5, [r3, #4]
   170a4:	cmp	r5, #0
   170a8:	movne	r4, #0
   170ac:	movne	r5, r4
   170b0:	beq	170e8 <main@@Base+0x12cb0>
   170b4:	ldr	r3, [r3]
   170b8:	ldr	r6, [r3, r4, lsl #2]
   170bc:	ldr	r0, [r6, #4]
   170c0:	bl	3f24 <g_bytes_get_size@plt>
   170c4:	ldr	r3, [r7, #8]
   170c8:	add	r4, r4, #1
   170cc:	ldr	r1, [r6]
   170d0:	ldr	r2, [r3, #4]
   170d4:	add	r0, r0, r1
   170d8:	cmp	r5, r0
   170dc:	movcc	r5, r0
   170e0:	cmp	r2, r4
   170e4:	bhi	170b4 <main@@Base+0x12c7c>
   170e8:	mov	r0, r8
   170ec:	add	r1, sp, #44	; 0x2c
   170f0:	bl	4320 <g_bytes_get_data@plt>
   170f4:	ldr	r3, [sp, #44]	; 0x2c
   170f8:	mov	r4, r0
   170fc:	cmp	r3, r5
   17100:	bhi	17328 <main@@Base+0x12ef0>
   17104:	cmp	r5, r3
   17108:	beq	17354 <main@@Base+0x12f1c>
   1710c:	ldr	r0, [pc, #940]	; 174c0 <main@@Base+0x13088>
   17110:	mov	r1, #128	; 0x80
   17114:	ldr	r2, [pc, #936]	; 174c4 <main@@Base+0x1308c>
   17118:	str	r5, [sp]
   1711c:	add	r0, pc, r0
   17120:	add	r2, pc, r2
   17124:	bl	3a38 <g_log@plt>
   17128:	mov	r0, r5
   1712c:	bl	4248 <g_malloc0@plt>
   17130:	mov	r2, r5
   17134:	mov	r1, r4
   17138:	mov	r9, r0
   1713c:	bl	40e0 <memcpy@plt>
   17140:	ldr	r3, [r7, #8]
   17144:	ldr	r2, [r3, #4]
   17148:	cmp	r2, #0
   1714c:	beq	17294 <main@@Base+0x12e5c>
   17150:	ldr	r1, [pc, #880]	; 174c8 <main@@Base+0x13090>
   17154:	add	sl, sp, #48	; 0x30
   17158:	ldr	fp, [pc, #876]	; 174cc <main@@Base+0x13094>
   1715c:	mov	r4, #0
   17160:	add	r1, pc, r1
   17164:	str	r1, [sp, #20]
   17168:	add	fp, pc, fp
   1716c:	b	171c0 <main@@Base+0x12d88>
   17170:	ldr	ip, [r7, #8]
   17174:	add	r4, r4, #1
   17178:	ldr	r0, [sp, #20]
   1717c:	mov	r1, #128	; 0x80
   17180:	ldr	ip, [ip, #4]
   17184:	str	r3, [sp, #4]
   17188:	mov	r3, r4
   1718c:	str	r2, [sp, #8]
   17190:	mov	r2, fp
   17194:	str	ip, [sp]
   17198:	bl	3a38 <g_log@plt>
   1719c:	ldr	r0, [r6]
   171a0:	mov	r1, r8
   171a4:	ldr	r2, [sp, #48]	; 0x30
   171a8:	add	r0, r9, r0
   171ac:	bl	40e0 <memcpy@plt>
   171b0:	ldr	r3, [r7, #8]
   171b4:	ldr	r2, [r3, #4]
   171b8:	cmp	r2, r4
   171bc:	bls	17294 <main@@Base+0x12e5c>
   171c0:	ldr	r3, [r3]
   171c4:	mov	r1, sl
   171c8:	ldr	r6, [r3, r4, lsl #2]
   171cc:	ldr	r0, [r6, #4]
   171d0:	bl	4320 <g_bytes_get_data@plt>
   171d4:	ldr	r3, [r6]
   171d8:	mov	r8, r0
   171dc:	ldr	r2, [sp, #48]	; 0x30
   171e0:	add	r1, r2, r3
   171e4:	cmp	r1, r5
   171e8:	bls	17170 <main@@Base+0x12d38>
   171ec:	bl	40a4 <fwupd_error_quark@plt>
   171f0:	ldr	r3, [pc, #728]	; 174d0 <main@@Base+0x13098>
   171f4:	mov	r1, r0
   171f8:	mov	r2, #7
   171fc:	ldr	r0, [sp, #32]
   17200:	add	r3, pc, r3
   17204:	bl	4350 <g_set_error@plt>
   17208:	mov	r4, #0
   1720c:	mov	r5, r4
   17210:	ldr	r3, [sp, #28]
   17214:	cmp	r3, #0
   17218:	beq	17224 <main@@Base+0x12dec>
   1721c:	ldr	r0, [sp, #28]
   17220:	bl	414c <g_bytes_unref@plt>
   17224:	cmp	r4, #0
   17228:	beq	1705c <main@@Base+0x12c24>
   1722c:	mov	r0, r4
   17230:	bl	414c <g_bytes_unref@plt>
   17234:	b	1705c <main@@Base+0x12c24>
   17238:	ldr	r1, [r5, r4]
   1723c:	bl	41e8 <g_bytes_equal@plt>
   17240:	cmp	r0, #0
   17244:	bne	1709c <main@@Base+0x12c64>
   17248:	ldr	r0, [sp, #28]
   1724c:	bl	16500 <main@@Base+0x120c8>
   17250:	mov	r7, r0
   17254:	ldr	r0, [r5, r4]
   17258:	bl	16500 <main@@Base+0x120c8>
   1725c:	mov	r4, r0
   17260:	bl	40a4 <fwupd_error_quark@plt>
   17264:	ldr	r3, [pc, #616]	; 174d4 <main@@Base+0x1309c>
   17268:	mov	r1, r0
   1726c:	stm	sp, {r4, r7}
   17270:	mov	r2, #7
   17274:	ldr	r0, [sp, #32]
   17278:	add	r3, pc, r3
   1727c:	bl	4350 <g_set_error@plt>
   17280:	mov	r0, r4
   17284:	bl	3eac <g_free@plt>
   17288:	mov	r0, r7
   1728c:	bl	3eac <g_free@plt>
   17290:	b	17344 <main@@Base+0x12f0c>
   17294:	mov	r1, r5
   17298:	mov	r0, r9
   1729c:	bl	390c <g_bytes_new@plt>
   172a0:	mov	r5, r0
   172a4:	bl	16420 <main@@Base+0x11fe8>
   172a8:	ldr	r2, [sp, #36]	; 0x24
   172ac:	mov	r4, r0
   172b0:	cmp	r2, #0
   172b4:	bne	17210 <main@@Base+0x12dd8>
   172b8:	ldr	r1, [r7, #4]
   172bc:	bl	41e8 <g_bytes_equal@plt>
   172c0:	cmp	r0, #0
   172c4:	bne	17210 <main@@Base+0x12dd8>
   172c8:	mov	r0, r4
   172cc:	bl	16500 <main@@Base+0x120c8>
   172d0:	mov	r8, r0
   172d4:	ldr	r0, [r7, #4]
   172d8:	bl	16500 <main@@Base+0x120c8>
   172dc:	mov	r6, r0
   172e0:	bl	40a4 <fwupd_error_quark@plt>
   172e4:	ldr	r3, [pc, #492]	; 174d8 <main@@Base+0x130a0>
   172e8:	mov	r1, r0
   172ec:	stm	sp, {r6, r8}
   172f0:	mov	r2, #7
   172f4:	ldr	r0, [sp, #32]
   172f8:	add	r3, pc, r3
   172fc:	bl	4350 <g_set_error@plt>
   17300:	mov	r0, r6
   17304:	bl	3eac <g_free@plt>
   17308:	mov	r0, r8
   1730c:	bl	3eac <g_free@plt>
   17310:	cmp	r5, #0
   17314:	beq	17210 <main@@Base+0x12dd8>
   17318:	mov	r0, r5
   1731c:	bl	414c <g_bytes_unref@plt>
   17320:	mov	r5, #0
   17324:	b	17210 <main@@Base+0x12dd8>
   17328:	bl	40a4 <fwupd_error_quark@plt>
   1732c:	ldr	r3, [pc, #424]	; 174dc <main@@Base+0x130a4>
   17330:	mov	r1, r0
   17334:	mov	r2, #7
   17338:	ldr	r0, [sp, #32]
   1733c:	add	r3, pc, r3
   17340:	bl	3ae0 <g_set_error_literal@plt>
   17344:	mov	r4, #0
   17348:	mov	r9, r4
   1734c:	mov	r5, r4
   17350:	b	17210 <main@@Base+0x12dd8>
   17354:	ldr	r0, [pc, #388]	; 174e0 <main@@Base+0x130a8>
   17358:	mov	r1, #128	; 0x80
   1735c:	ldr	r2, [pc, #384]	; 174e4 <main@@Base+0x130ac>
   17360:	mov	r3, r5
   17364:	add	r0, pc, r0
   17368:	add	r2, pc, r2
   1736c:	bl	3a38 <g_log@plt>
   17370:	b	17128 <main@@Base+0x12cf0>
   17374:	bl	3e4c <__stack_chk_fail@plt>
   17378:	mov	r6, r0
   1737c:	mov	r9, #0
   17380:	mov	r4, #0
   17384:	mov	r5, r6
   17388:	ldr	r2, [sp, #28]
   1738c:	cmp	r2, #0
   17390:	beq	1739c <main@@Base+0x12f64>
   17394:	mov	r0, r2
   17398:	bl	414c <g_bytes_unref@plt>
   1739c:	cmp	r4, #0
   173a0:	beq	173ac <main@@Base+0x12f74>
   173a4:	mov	r0, r4
   173a8:	bl	414c <g_bytes_unref@plt>
   173ac:	mov	r0, r9
   173b0:	bl	3eac <g_free@plt>
   173b4:	mov	r0, r5
   173b8:	bl	42f0 <_Unwind_Resume@plt>
   173bc:	b	17378 <main@@Base+0x12f40>
   173c0:	b	17378 <main@@Base+0x12f40>
   173c4:	mov	r6, r0
   173c8:	mov	r4, #0
   173cc:	cmp	r5, #0
   173d0:	beq	17384 <main@@Base+0x12f4c>
   173d4:	mov	r0, r5
   173d8:	bl	414c <g_bytes_unref@plt>
   173dc:	b	17384 <main@@Base+0x12f4c>
   173e0:	b	17378 <main@@Base+0x12f40>
   173e4:	mov	r5, r0
   173e8:	b	173ac <main@@Base+0x12f74>
   173ec:	mov	r5, r0
   173f0:	b	1739c <main@@Base+0x12f64>
   173f4:	mov	r1, #0
   173f8:	mov	r6, r0
   173fc:	str	r1, [sp, #28]
   17400:	mov	r9, r1
   17404:	b	17380 <main@@Base+0x12f48>
   17408:	b	17378 <main@@Base+0x12f40>
   1740c:	b	17378 <main@@Base+0x12f40>
   17410:	b	17378 <main@@Base+0x12f40>
   17414:	mov	r5, r0
   17418:	b	17388 <main@@Base+0x12f50>
   1741c:	mov	r7, r0
   17420:	mov	r0, r6
   17424:	bl	3eac <g_free@plt>
   17428:	mov	r6, r7
   1742c:	mov	r0, r8
   17430:	bl	3eac <g_free@plt>
   17434:	b	173cc <main@@Base+0x12f94>
   17438:	mov	r6, r0
   1743c:	b	1742c <main@@Base+0x12ff4>
   17440:	mov	r6, r0
   17444:	b	173cc <main@@Base+0x12f94>
   17448:	mov	r3, #0
   1744c:	mov	r6, r0
   17450:	str	r3, [sp, #28]
   17454:	mov	r9, r3
   17458:	b	17380 <main@@Base+0x12f48>
   1745c:	mov	r2, #0
   17460:	mov	r6, r0
   17464:	str	r2, [sp, #28]
   17468:	mov	r9, r2
   1746c:	b	17380 <main@@Base+0x12f48>
   17470:	mov	r6, r0
   17474:	b	17380 <main@@Base+0x12f48>
   17478:	b	17378 <main@@Base+0x12f40>
   1747c:	b	17378 <main@@Base+0x12f40>
   17480:	mov	r6, r0
   17484:	mov	r0, r4
   17488:	bl	3eac <g_free@plt>
   1748c:	mov	r0, r7
   17490:	bl	3eac <g_free@plt>
   17494:	mov	r9, #0
   17498:	mov	r4, r9
   1749c:	b	17384 <main@@Base+0x12f4c>
   174a0:	mov	r6, r0
   174a4:	b	1748c <main@@Base+0x13054>
   174a8:	b	17378 <main@@Base+0x12f40>
   174ac:	b	17378 <main@@Base+0x12f40>
   174b0:	andeq	r8, r2, r0, asr r0
   174b4:	andeq	r7, r2, r4, lsl #23
   174b8:	andeq	r0, r0, r0, lsr r4
   174bc:	ldrdeq	r1, [r1], -r0
   174c0:	andeq	sp, r0, r0, ror sp
   174c4:			; <UNDEFINED> instruction: 0x000119bc
   174c8:	andeq	sp, r0, ip, lsr #26
   174cc:	andeq	r1, r1, r0, asr sl
   174d0:	andeq	r1, r1, ip, lsl #19
   174d4:			; <UNDEFINED> instruction: 0x000118b8
   174d8:	andeq	r1, r1, ip, ror #17
   174dc:	andeq	r1, r1, ip, lsr #16
   174e0:	andeq	sp, r0, r8, lsr #22
   174e4:	andeq	r1, r1, r4, asr r7
   174e8:	ldr	r3, [pc, #432]	; 176a0 <main@@Base+0x13268>
   174ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   174f0:	add	r3, pc, r3
   174f4:	sub	sp, sp, #8
   174f8:	mov	r4, r0
   174fc:	mov	r0, #0
   17500:	ldr	r6, [r3]
   17504:	bl	3990 <g_string_new@plt>
   17508:	mov	r5, r0
   1750c:	bl	165ac <main@@Base+0x12174>
   17510:	cmp	r4, #0
   17514:	beq	17544 <main@@Base+0x1310c>
   17518:	ldr	r3, [r4]
   1751c:	cmp	r3, #0
   17520:	beq	17530 <main@@Base+0x130f8>
   17524:	ldr	r3, [r3]
   17528:	cmp	r0, r3
   1752c:	beq	1758c <main@@Base+0x13154>
   17530:	mov	r1, r0
   17534:	mov	r0, r4
   17538:	bl	3fcc <g_type_check_instance_is_a@plt>
   1753c:	cmp	r0, #0
   17540:	bne	1758c <main@@Base+0x13154>
   17544:	ldr	r1, [pc, #344]	; 176a4 <main@@Base+0x1326c>
   17548:	ldr	r0, [pc, #344]	; 176a8 <main@@Base+0x13270>
   1754c:	ldr	r2, [pc, #344]	; 176ac <main@@Base+0x13274>
   17550:	add	r1, pc, r1
   17554:	add	r0, pc, r0
   17558:	add	r1, r1, #60	; 0x3c
   1755c:	add	r2, pc, r2
   17560:	bl	3870 <g_return_if_fail_warning@plt>
   17564:	mov	r8, #0
   17568:	mov	r9, r8
   1756c:	mov	r4, r8
   17570:	mov	r0, r8
   17574:	bl	3eac <g_free@plt>
   17578:	mov	r0, r9
   1757c:	bl	3eac <g_free@plt>
   17580:	mov	r0, r4
   17584:	add	sp, sp, #8
   17588:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1758c:	ldr	r0, [r4, r6]
   17590:	add	r6, r4, r6
   17594:	bl	16500 <main@@Base+0x120c8>
   17598:	ldr	r1, [pc, #272]	; 176b0 <main@@Base+0x13278>
   1759c:	mov	r9, r0
   175a0:	mov	r2, r9
   175a4:	mov	r0, r5
   175a8:	add	r1, pc, r1
   175ac:	bl	4344 <g_string_append_printf@plt>
   175b0:	ldr	r0, [r6, #4]
   175b4:	bl	16500 <main@@Base+0x120c8>
   175b8:	ldr	r1, [pc, #244]	; 176b4 <main@@Base+0x1327c>
   175bc:	mov	r8, r0
   175c0:	mov	r2, r8
   175c4:	mov	r0, r5
   175c8:	add	r1, pc, r1
   175cc:	bl	4344 <g_string_append_printf@plt>
   175d0:	ldr	r3, [r6, #8]
   175d4:	mov	r4, #0
   175d8:	ldr	r7, [pc, #216]	; 176b8 <main@@Base+0x13280>
   175dc:	ldr	r2, [r3, #4]
   175e0:	add	r7, pc, r7
   175e4:	cmp	r2, #0
   175e8:	beq	1762c <main@@Base+0x131f4>
   175ec:	ldr	r3, [r3]
   175f0:	ldr	r3, [r3, r4, lsl #2]
   175f4:	ldr	r0, [r3, #4]
   175f8:	ldr	sl, [r3]
   175fc:	bl	3f24 <g_bytes_get_size@plt>
   17600:	str	r0, [sp]
   17604:	mov	r3, sl
   17608:	mov	r0, r5
   1760c:	mov	r1, r7
   17610:	mov	r2, r4
   17614:	bl	4344 <g_string_append_printf@plt>
   17618:	ldr	r3, [r6, #8]
   1761c:	add	r4, r4, #1
   17620:	ldr	r2, [r3, #4]
   17624:	cmp	r2, r4
   17628:	bhi	175ec <main@@Base+0x131b4>
   1762c:	ldr	r1, [r5, #4]
   17630:	mov	r0, r5
   17634:	sub	r1, r1, #1
   17638:	bl	3960 <g_string_truncate@plt>
   1763c:	mov	r0, r5
   17640:	mov	r1, #0
   17644:	bl	40bc <g_string_free@plt>
   17648:	mov	r4, r0
   1764c:	b	17570 <main@@Base+0x13138>
   17650:	mov	r8, #0
   17654:	mov	r4, r0
   17658:	mov	r9, r8
   1765c:	mov	r0, r8
   17660:	bl	3eac <g_free@plt>
   17664:	mov	r0, r9
   17668:	bl	3eac <g_free@plt>
   1766c:	mov	r0, r4
   17670:	bl	42f0 <_Unwind_Resume@plt>
   17674:	mov	r4, r0
   17678:	b	1765c <main@@Base+0x13224>
   1767c:	mov	r4, r0
   17680:	mov	r8, #0
   17684:	b	1765c <main@@Base+0x13224>
   17688:	b	1767c <main@@Base+0x13244>
   1768c:	b	17650 <main@@Base+0x13218>
   17690:	mov	r4, r0
   17694:	b	17664 <main@@Base+0x1322c>
   17698:	b	17650 <main@@Base+0x13218>
   1769c:	b	17650 <main@@Base+0x13218>
   176a0:	andeq	r7, r2, r8, asr #22
   176a4:	andeq	r1, r1, r0, lsr #7
   176a8:	andeq	sp, r0, r8, lsr r9
   176ac:	andeq	r1, r1, ip, lsr r4
   176b0:	andeq	r1, r1, r4, ror r6
   176b4:	andeq	r1, r1, r8, ror #12
   176b8:	andeq	r1, r1, r4, ror #12
   176bc:	push	{r3, lr}
   176c0:	bl	165ac <main@@Base+0x12174>
   176c4:	mov	r1, #0
   176c8:	pop	{r3, lr}
   176cc:	b	3804 <g_object_new@plt>
   176d0:	bx	lr
   176d4:	push	{r4, lr}
   176d8:	mov	r4, r0
   176dc:	bl	420c <g_type_class_peek_parent@plt>
   176e0:	ldr	r1, [pc, #32]	; 17708 <main@@Base+0x132d0>
   176e4:	add	r1, pc, r1
   176e8:	ldr	r3, [r1, #4]
   176ec:	cmp	r3, #0
   176f0:	str	r0, [r1]
   176f4:	popeq	{r4, pc}
   176f8:	mov	r0, r4
   176fc:	add	r1, r1, #4
   17700:	pop	{r4, lr}
   17704:	b	38b8 <g_type_class_adjust_private_offset@plt>
   17708:	andeq	r7, r2, r0, ror #18
   1770c:	push	{r4, r5, r6, lr}
   17710:	dmb	sy
   17714:	ldr	r4, [pc, #148]	; 177b0 <main@@Base+0x13378>
   17718:	sub	sp, sp, #16
   1771c:	add	r4, pc, r4
   17720:	ldr	r5, [r4, #8]
   17724:	dmb	sy
   17728:	cmp	r5, #0
   1772c:	beq	17744 <main@@Base+0x1330c>
   17730:	ldr	r3, [pc, #124]	; 177b4 <main@@Base+0x1337c>
   17734:	add	r3, pc, r3
   17738:	ldr	r0, [r3, #8]
   1773c:	add	sp, sp, #16
   17740:	pop	{r4, r5, r6, pc}
   17744:	add	r6, r4, #8
   17748:	mov	r0, r6
   1774c:	bl	3d50 <g_once_init_enter@plt>
   17750:	cmp	r0, #0
   17754:	beq	17730 <main@@Base+0x132f8>
   17758:	ldr	r0, [pc, #88]	; 177b8 <main@@Base+0x13380>
   1775c:	add	r0, pc, r0
   17760:	bl	3df8 <g_intern_static_string@plt>
   17764:	ldr	r3, [pc, #80]	; 177bc <main@@Base+0x13384>
   17768:	mov	r2, #12
   1776c:	str	r5, [sp, #8]
   17770:	add	r3, pc, r3
   17774:	stm	sp, {r2, r3}
   17778:	ldr	r3, [pc, #64]	; 177c0 <main@@Base+0x13388>
   1777c:	mov	r2, #68	; 0x44
   17780:	add	r3, pc, r3
   17784:	mov	r1, r0
   17788:	mov	r0, #80	; 0x50
   1778c:	bl	3894 <g_type_register_static_simple@plt>
   17790:	mov	r1, #20
   17794:	mov	r5, r0
   17798:	bl	3edc <g_type_add_instance_private@plt>
   1779c:	mov	r1, r5
   177a0:	str	r0, [r4, #4]
   177a4:	mov	r0, r6
   177a8:	bl	4140 <g_once_init_leave@plt>
   177ac:	b	17730 <main@@Base+0x132f8>
   177b0:	andeq	r7, r2, r8, lsr #18
   177b4:	andeq	r7, r2, r0, lsl r9
   177b8:	andeq	r1, r1, r0, asr #11
   177bc:			; <UNDEFINED> instruction: 0xffffff58
   177c0:			; <UNDEFINED> instruction: 0xffffff4c
   177c4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177c8:	mov	fp, r3
   177cc:	mov	r7, r1
   177d0:	mov	r9, r2
   177d4:	mov	r8, r0
   177d8:	ldrh	sl, [sp, #40]	; 0x28
   177dc:	ldr	r6, [sp, #44]	; 0x2c
   177e0:	bl	1770c <main@@Base+0x132d4>
   177e4:	mov	r1, #0
   177e8:	bl	3804 <g_object_new@plt>
   177ec:	ldr	r3, [pc, #36]	; 17818 <main@@Base+0x133e0>
   177f0:	add	r3, pc, r3
   177f4:	ldr	r4, [r3, #4]
   177f8:	add	ip, r0, r4
   177fc:	str	r8, [r0, r4]
   17800:	mov	r5, r0
   17804:	stmib	ip, {r7, r9}
   17808:	strh	fp, [ip, #12]
   1780c:	strh	sl, [ip, #14]
   17810:	str	r6, [ip, #16]
   17814:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17818:	andeq	r7, r2, r4, asr r8
   1781c:	push	{r3, r4, r5, lr}
   17820:	mov	r4, r0
   17824:	ldr	r3, [pc, #104]	; 17894 <main@@Base+0x1345c>
   17828:	add	r3, pc, r3
   1782c:	ldr	r5, [r3, #4]
   17830:	bl	1770c <main@@Base+0x132d4>
   17834:	cmp	r4, #0
   17838:	beq	17868 <main@@Base+0x13430>
   1783c:	ldr	r3, [r4]
   17840:	cmp	r3, #0
   17844:	beq	17854 <main@@Base+0x1341c>
   17848:	ldr	r3, [r3]
   1784c:	cmp	r0, r3
   17850:	beq	1788c <main@@Base+0x13454>
   17854:	mov	r1, r0
   17858:	mov	r0, r4
   1785c:	bl	3fcc <g_type_check_instance_is_a@plt>
   17860:	cmp	r0, #0
   17864:	bne	1788c <main@@Base+0x13454>
   17868:	ldr	r0, [pc, #40]	; 17898 <main@@Base+0x13460>
   1786c:	ldr	r1, [pc, #40]	; 1789c <main@@Base+0x13464>
   17870:	ldr	r2, [pc, #40]	; 178a0 <main@@Base+0x13468>
   17874:	add	r0, pc, r0
   17878:	add	r1, pc, r1
   1787c:	add	r2, pc, r2
   17880:	bl	3870 <g_return_if_fail_warning@plt>
   17884:	mov	r0, #0
   17888:	pop	{r3, r4, r5, pc}
   1788c:	ldr	r0, [r4, r5]
   17890:	pop	{r3, r4, r5, pc}
   17894:	andeq	r7, r2, ip, lsl r8
   17898:	andeq	sp, r0, r8, lsl r6
   1789c:	strdeq	r1, [r1], -r0
   178a0:	andeq	r1, r1, ip, lsr #9
   178a4:	push	{r3, r4, r5, lr}
   178a8:	mov	r4, r0
   178ac:	ldr	r3, [pc, #112]	; 17924 <main@@Base+0x134ec>
   178b0:	add	r3, pc, r3
   178b4:	ldr	r5, [r3, #4]
   178b8:	bl	1770c <main@@Base+0x132d4>
   178bc:	cmp	r4, #0
   178c0:	beq	178f0 <main@@Base+0x134b8>
   178c4:	ldr	r3, [r4]
   178c8:	cmp	r3, #0
   178cc:	beq	178dc <main@@Base+0x134a4>
   178d0:	ldr	r3, [r3]
   178d4:	cmp	r0, r3
   178d8:	beq	17918 <main@@Base+0x134e0>
   178dc:	mov	r1, r0
   178e0:	mov	r0, r4
   178e4:	bl	3fcc <g_type_check_instance_is_a@plt>
   178e8:	cmp	r0, #0
   178ec:	bne	17918 <main@@Base+0x134e0>
   178f0:	ldr	r1, [pc, #48]	; 17928 <main@@Base+0x134f0>
   178f4:	ldr	r0, [pc, #48]	; 1792c <main@@Base+0x134f4>
   178f8:	ldr	r2, [pc, #48]	; 17930 <main@@Base+0x134f8>
   178fc:	add	r1, pc, r1
   17900:	add	r0, pc, r0
   17904:	add	r1, r1, #24
   17908:	add	r2, pc, r2
   1790c:	bl	3870 <g_return_if_fail_warning@plt>
   17910:	mov	r0, #0
   17914:	pop	{r3, r4, r5, pc}
   17918:	add	r4, r4, r5
   1791c:	ldr	r0, [r4, #4]
   17920:	pop	{r3, r4, r5, pc}
   17924:	muleq	r2, r4, r7
   17928:	andeq	r1, r1, ip, ror #6
   1792c:	andeq	sp, r0, ip, lsl #11
   17930:	andeq	r1, r1, r0, lsr #8
   17934:	push	{r3, r4, r5, lr}
   17938:	mov	r4, r0
   1793c:	ldr	r3, [pc, #112]	; 179b4 <main@@Base+0x1357c>
   17940:	add	r3, pc, r3
   17944:	ldr	r5, [r3, #4]
   17948:	bl	1770c <main@@Base+0x132d4>
   1794c:	cmp	r4, #0
   17950:	beq	17980 <main@@Base+0x13548>
   17954:	ldr	r3, [r4]
   17958:	cmp	r3, #0
   1795c:	beq	1796c <main@@Base+0x13534>
   17960:	ldr	r3, [r3]
   17964:	cmp	r0, r3
   17968:	beq	179a8 <main@@Base+0x13570>
   1796c:	mov	r1, r0
   17970:	mov	r0, r4
   17974:	bl	3fcc <g_type_check_instance_is_a@plt>
   17978:	cmp	r0, #0
   1797c:	bne	179a8 <main@@Base+0x13570>
   17980:	ldr	r1, [pc, #48]	; 179b8 <main@@Base+0x13580>
   17984:	ldr	r0, [pc, #48]	; 179bc <main@@Base+0x13584>
   17988:	ldr	r2, [pc, #48]	; 179c0 <main@@Base+0x13588>
   1798c:	add	r1, pc, r1
   17990:	add	r0, pc, r0
   17994:	add	r1, r1, #44	; 0x2c
   17998:	add	r2, pc, r2
   1799c:	bl	3870 <g_return_if_fail_warning@plt>
   179a0:	mov	r0, #0
   179a4:	pop	{r3, r4, r5, pc}
   179a8:	add	r4, r4, r5
   179ac:	ldr	r0, [r4, #8]
   179b0:	pop	{r3, r4, r5, pc}
   179b4:	andeq	r7, r2, r4, lsl #14
   179b8:	ldrdeq	r1, [r1], -ip
   179bc:	strdeq	sp, [r0], -ip
   179c0:	muleq	r1, r0, r3
   179c4:	push	{r3, r4, r5, lr}
   179c8:	mov	r4, r0
   179cc:	ldr	r3, [pc, #112]	; 17a44 <main@@Base+0x1360c>
   179d0:	add	r3, pc, r3
   179d4:	ldr	r5, [r3, #4]
   179d8:	bl	1770c <main@@Base+0x132d4>
   179dc:	cmp	r4, #0
   179e0:	beq	17a10 <main@@Base+0x135d8>
   179e4:	ldr	r3, [r4]
   179e8:	cmp	r3, #0
   179ec:	beq	179fc <main@@Base+0x135c4>
   179f0:	ldr	r3, [r3]
   179f4:	cmp	r0, r3
   179f8:	beq	17a38 <main@@Base+0x13600>
   179fc:	mov	r1, r0
   17a00:	mov	r0, r4
   17a04:	bl	3fcc <g_type_check_instance_is_a@plt>
   17a08:	cmp	r0, #0
   17a0c:	bne	17a38 <main@@Base+0x13600>
   17a10:	ldr	r1, [pc, #48]	; 17a48 <main@@Base+0x13610>
   17a14:	ldr	r0, [pc, #48]	; 17a4c <main@@Base+0x13614>
   17a18:	ldr	r2, [pc, #48]	; 17a50 <main@@Base+0x13618>
   17a1c:	add	r1, pc, r1
   17a20:	add	r0, pc, r0
   17a24:	add	r1, r1, #72	; 0x48
   17a28:	add	r2, pc, r2
   17a2c:	bl	3870 <g_return_if_fail_warning@plt>
   17a30:	mov	r0, #0
   17a34:	pop	{r3, r4, r5, pc}
   17a38:	add	r4, r4, r5
   17a3c:	ldrh	r0, [r4, #12]
   17a40:	pop	{r3, r4, r5, pc}
   17a44:	andeq	r7, r2, r4, ror r6
   17a48:	andeq	r1, r1, ip, asr #4
   17a4c:	andeq	sp, r0, ip, ror #8
   17a50:	andeq	r1, r1, r0, lsl #6
   17a54:	push	{r3, r4, r5, lr}
   17a58:	mov	r4, r0
   17a5c:	ldr	r3, [pc, #112]	; 17ad4 <main@@Base+0x1369c>
   17a60:	add	r3, pc, r3
   17a64:	ldr	r5, [r3, #4]
   17a68:	bl	1770c <main@@Base+0x132d4>
   17a6c:	cmp	r4, #0
   17a70:	beq	17aa0 <main@@Base+0x13668>
   17a74:	ldr	r3, [r4]
   17a78:	cmp	r3, #0
   17a7c:	beq	17a8c <main@@Base+0x13654>
   17a80:	ldr	r3, [r3]
   17a84:	cmp	r0, r3
   17a88:	beq	17ac8 <main@@Base+0x13690>
   17a8c:	mov	r1, r0
   17a90:	mov	r0, r4
   17a94:	bl	3fcc <g_type_check_instance_is_a@plt>
   17a98:	cmp	r0, #0
   17a9c:	bne	17ac8 <main@@Base+0x13690>
   17aa0:	ldr	r1, [pc, #48]	; 17ad8 <main@@Base+0x136a0>
   17aa4:	ldr	r0, [pc, #48]	; 17adc <main@@Base+0x136a4>
   17aa8:	ldr	r2, [pc, #48]	; 17ae0 <main@@Base+0x136a8>
   17aac:	add	r1, pc, r1
   17ab0:	add	r0, pc, r0
   17ab4:	add	r1, r1, #92	; 0x5c
   17ab8:	add	r2, pc, r2
   17abc:	bl	3870 <g_return_if_fail_warning@plt>
   17ac0:	mov	r0, #0
   17ac4:	pop	{r3, r4, r5, pc}
   17ac8:	add	r4, r4, r5
   17acc:	ldrh	r0, [r4, #14]
   17ad0:	pop	{r3, r4, r5, pc}
   17ad4:	andeq	r7, r2, r4, ror #11
   17ad8:			; <UNDEFINED> instruction: 0x000111bc
   17adc:	ldrdeq	sp, [r0], -ip
   17ae0:	andeq	r1, r1, r0, ror r2
   17ae4:	push	{r3, r4, r5, lr}
   17ae8:	mov	r4, r0
   17aec:	ldr	r3, [pc, #120]	; 17b6c <main@@Base+0x13734>
   17af0:	add	r3, pc, r3
   17af4:	ldr	r5, [r3, #4]
   17af8:	bl	1770c <main@@Base+0x132d4>
   17afc:	cmp	r4, #0
   17b00:	beq	17b30 <main@@Base+0x136f8>
   17b04:	ldr	r3, [r4]
   17b08:	cmp	r3, #0
   17b0c:	beq	17b1c <main@@Base+0x136e4>
   17b10:	ldr	r3, [r3]
   17b14:	cmp	r0, r3
   17b18:	beq	17b58 <main@@Base+0x13720>
   17b1c:	mov	r1, r0
   17b20:	mov	r0, r4
   17b24:	bl	3fcc <g_type_check_instance_is_a@plt>
   17b28:	cmp	r0, #0
   17b2c:	bne	17b58 <main@@Base+0x13720>
   17b30:	ldr	r1, [pc, #56]	; 17b70 <main@@Base+0x13738>
   17b34:	ldr	r0, [pc, #56]	; 17b74 <main@@Base+0x1373c>
   17b38:	ldr	r2, [pc, #56]	; 17b78 <main@@Base+0x13740>
   17b3c:	add	r1, pc, r1
   17b40:	add	r0, pc, r0
   17b44:	add	r1, r1, #116	; 0x74
   17b48:	add	r2, pc, r2
   17b4c:	bl	3870 <g_return_if_fail_warning@plt>
   17b50:	mov	r0, #0
   17b54:	pop	{r3, r4, r5, pc}
   17b58:	add	r4, r4, r5
   17b5c:	ldrh	r0, [r4, #12]
   17b60:	ldrh	r3, [r4, #14]
   17b64:	orr	r0, r3, r0, lsl #16
   17b68:	pop	{r3, r4, r5, pc}
   17b6c:	andeq	r7, r2, r4, asr r5
   17b70:	andeq	r1, r1, ip, lsr #2
   17b74:	andeq	sp, r0, ip, asr #6
   17b78:	andeq	r1, r1, r0, ror #3
   17b7c:	ldr	r3, [pc, #136]	; 17c0c <main@@Base+0x137d4>
   17b80:	push	{r4, r5, r6, lr}
   17b84:	add	r3, pc, r3
   17b88:	mov	r4, r0
   17b8c:	mov	r5, r1
   17b90:	ldr	r6, [r3, #4]
   17b94:	bl	1770c <main@@Base+0x132d4>
   17b98:	cmp	r4, #0
   17b9c:	beq	17bcc <main@@Base+0x13794>
   17ba0:	ldr	r3, [r4]
   17ba4:	cmp	r3, #0
   17ba8:	beq	17bb8 <main@@Base+0x13780>
   17bac:	ldr	r3, [r3]
   17bb0:	cmp	r0, r3
   17bb4:	beq	17bf4 <main@@Base+0x137bc>
   17bb8:	mov	r1, r0
   17bbc:	mov	r0, r4
   17bc0:	bl	3fcc <g_type_check_instance_is_a@plt>
   17bc4:	cmp	r0, #0
   17bc8:	bne	17bf4 <main@@Base+0x137bc>
   17bcc:	ldr	r1, [pc, #60]	; 17c10 <main@@Base+0x137d8>
   17bd0:	ldr	r0, [pc, #60]	; 17c14 <main@@Base+0x137dc>
   17bd4:	ldr	r2, [pc, #60]	; 17c18 <main@@Base+0x137e0>
   17bd8:	add	r1, pc, r1
   17bdc:	add	r0, pc, r0
   17be0:	add	r1, r1, #136	; 0x88
   17be4:	add	r2, pc, r2
   17be8:	bl	3870 <g_return_if_fail_warning@plt>
   17bec:	mov	r0, #0
   17bf0:	pop	{r4, r5, r6, pc}
   17bf4:	add	r4, r4, r6
   17bf8:	ldr	r3, [r4, #16]
   17bfc:	tst	r5, r3
   17c00:	moveq	r0, #0
   17c04:	movne	r0, #1
   17c08:	pop	{r4, r5, r6, pc}
   17c0c:	andeq	r7, r2, r0, asr #9
   17c10:	muleq	r1, r0, r0
   17c14:			; <UNDEFINED> instruction: 0x0000d2b0
   17c18:	andeq	r1, r1, r4, asr #2
   17c1c:	ldr	r3, [pc, #400]	; 17db4 <main@@Base+0x1397c>
   17c20:	push	{r4, r5, r6, r7, r8, r9, lr}
   17c24:	add	r3, pc, r3
   17c28:	sub	sp, sp, #20
   17c2c:	mov	r4, r0
   17c30:	ldr	r7, [r3, #4]
   17c34:	add	r5, r0, r7
   17c38:	bl	1770c <main@@Base+0x132d4>
   17c3c:	cmp	r4, #0
   17c40:	beq	17c70 <main@@Base+0x13838>
   17c44:	ldr	r3, [r4]
   17c48:	cmp	r3, #0
   17c4c:	beq	17c5c <main@@Base+0x13824>
   17c50:	ldr	r3, [r3]
   17c54:	cmp	r0, r3
   17c58:	beq	17cac <main@@Base+0x13874>
   17c5c:	mov	r1, r0
   17c60:	mov	r0, r4
   17c64:	bl	3fcc <g_type_check_instance_is_a@plt>
   17c68:	cmp	r0, #0
   17c6c:	bne	17cac <main@@Base+0x13874>
   17c70:	ldr	r1, [pc, #320]	; 17db8 <main@@Base+0x13980>
   17c74:	ldr	r0, [pc, #320]	; 17dbc <main@@Base+0x13984>
   17c78:	ldr	r2, [pc, #320]	; 17dc0 <main@@Base+0x13988>
   17c7c:	add	r1, pc, r1
   17c80:	add	r0, pc, r0
   17c84:	add	r1, r1, #156	; 0x9c
   17c88:	add	r2, pc, r2
   17c8c:	bl	3870 <g_return_if_fail_warning@plt>
   17c90:	mov	r6, #0
   17c94:	mov	r4, r6
   17c98:	mov	r0, r6
   17c9c:	bl	3eac <g_free@plt>
   17ca0:	mov	r0, r4
   17ca4:	add	sp, sp, #20
   17ca8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17cac:	ldr	r0, [pc, #272]	; 17dc4 <main@@Base+0x1398c>
   17cb0:	add	r0, pc, r0
   17cb4:	bl	3990 <g_string_new@plt>
   17cb8:	mov	r9, r0
   17cbc:	mov	r0, #0
   17cc0:	ldr	r6, [r5, #16]
   17cc4:	bl	3990 <g_string_new@plt>
   17cc8:	tst	r6, #1
   17ccc:	mov	r8, r0
   17cd0:	bne	17d64 <main@@Base+0x1392c>
   17cd4:	tst	r6, #4
   17cd8:	bne	17d50 <main@@Base+0x13918>
   17cdc:	tst	r6, #2
   17ce0:	bne	17d3c <main@@Base+0x13904>
   17ce4:	mov	r0, r8
   17ce8:	mov	r1, #0
   17cec:	bl	40bc <g_string_free@plt>
   17cf0:	ldr	r1, [r4, r7]
   17cf4:	mov	r6, r0
   17cf8:	ldrh	r2, [r5, #12]
   17cfc:	mov	r0, r9
   17d00:	ldrh	r3, [r5, #14]
   17d04:	str	r1, [sp]
   17d08:	ldr	ip, [r5, #4]
   17d0c:	ldr	r1, [pc, #180]	; 17dc8 <main@@Base+0x13990>
   17d10:	str	ip, [sp, #4]
   17d14:	add	r1, pc, r1
   17d18:	ldr	ip, [r5, #16]
   17d1c:	str	r6, [sp, #12]
   17d20:	str	ip, [sp, #8]
   17d24:	bl	4344 <g_string_append_printf@plt>
   17d28:	mov	r0, r9
   17d2c:	mov	r1, #0
   17d30:	bl	40bc <g_string_free@plt>
   17d34:	mov	r4, r0
   17d38:	b	17c98 <main@@Base+0x13860>
   17d3c:	ldr	r1, [pc, #136]	; 17dcc <main@@Base+0x13994>
   17d40:	mov	r0, r8
   17d44:	add	r1, pc, r1
   17d48:	bl	4308 <g_string_append@plt>
   17d4c:	b	17ce4 <main@@Base+0x138ac>
   17d50:	ldr	r1, [pc, #120]	; 17dd0 <main@@Base+0x13998>
   17d54:	mov	r0, r8
   17d58:	add	r1, pc, r1
   17d5c:	bl	4308 <g_string_append@plt>
   17d60:	b	17cdc <main@@Base+0x138a4>
   17d64:	ldr	r1, [pc, #104]	; 17dd4 <main@@Base+0x1399c>
   17d68:	add	r1, pc, r1
   17d6c:	bl	4308 <g_string_append@plt>
   17d70:	b	17cd4 <main@@Base+0x1389c>
   17d74:	mov	r4, r0
   17d78:	mov	r6, #0
   17d7c:	mov	r0, r6
   17d80:	bl	3eac <g_free@plt>
   17d84:	mov	r0, r4
   17d88:	bl	42f0 <_Unwind_Resume@plt>
   17d8c:	b	17d74 <main@@Base+0x1393c>
   17d90:	b	17d74 <main@@Base+0x1393c>
   17d94:	b	17d74 <main@@Base+0x1393c>
   17d98:	b	17d74 <main@@Base+0x1393c>
   17d9c:	b	17d74 <main@@Base+0x1393c>
   17da0:	b	17d74 <main@@Base+0x1393c>
   17da4:	b	17d74 <main@@Base+0x1393c>
   17da8:	mov	r4, r0
   17dac:	b	17d7c <main@@Base+0x13944>
   17db0:	b	17d74 <main@@Base+0x1393c>
   17db4:	andeq	r7, r2, r0, lsr #8
   17db8:	andeq	r0, r1, ip, ror #31
   17dbc:	andeq	sp, r0, ip, lsl #4
   17dc0:	andeq	r1, r1, r0, lsr #1
   17dc4:	ldrdeq	sp, [r0], -r0
   17dc8:	andeq	r1, r1, r0, lsr r0
   17dcc:	strdeq	r0, [r1], -ip
   17dd0:	andeq	r1, r1, r4, lsl r6
   17dd4:	muleq	r1, r8, r3
   17dd8:	ldr	r3, [pc, #60]	; 17e1c <main@@Base+0x139e4>
   17ddc:	ldr	r1, [pc, #60]	; 17e20 <main@@Base+0x139e8>
   17de0:	ldr	r2, [pc, #60]	; 17e24 <main@@Base+0x139ec>
   17de4:	add	r3, pc, r3
   17de8:	push	{r4, lr}
   17dec:	add	r2, pc, r2
   17df0:	ldr	r3, [r3, r1]
   17df4:	ldr	r4, [r2]
   17df8:	add	r4, r0, r4
   17dfc:	mov	r0, r3
   17e00:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   17e04:	mvn	r2, #0
   17e08:	mov	r3, #1
   17e0c:	str	r2, [r4, #28]
   17e10:	str	r3, [r4, #32]
   17e14:	str	r0, [r4, #24]
   17e18:	pop	{r4, pc}
   17e1c:	muleq	r2, ip, sp
   17e20:	andeq	r0, r0, r4, asr r4
   17e24:	andeq	r7, r2, r4, ror #4
   17e28:	push	{r4, r5, r6, r7, r8, r9, lr}
   17e2c:	sub	sp, sp, #28
   17e30:	mov	r4, r0
   17e34:	bl	420c <g_type_class_peek_parent@plt>
   17e38:	ldr	r1, [pc, #208]	; 17f10 <main@@Base+0x13ad8>
   17e3c:	ldr	r6, [pc, #208]	; 17f14 <main@@Base+0x13adc>
   17e40:	add	r1, pc, r1
   17e44:	add	r6, pc, r6
   17e48:	ldr	r3, [r1]
   17e4c:	cmp	r3, #0
   17e50:	str	r0, [r1, #4]
   17e54:	beq	17e60 <main@@Base+0x13a28>
   17e58:	mov	r0, r4
   17e5c:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   17e60:	mov	r0, r4
   17e64:	mov	r1, #80	; 0x50
   17e68:	bl	4374 <g_type_check_class_cast@plt>
   17e6c:	ldr	r3, [pc, #164]	; 17f18 <main@@Base+0x13ae0>
   17e70:	mov	r4, #0
   17e74:	mov	r9, #4
   17e78:	mov	r8, #1
   17e7c:	mov	r7, #28
   17e80:	mov	r2, #2
   17e84:	ldr	r1, [r0]
   17e88:	mov	r5, r0
   17e8c:	str	r4, [sp]
   17e90:	str	r4, [sp, #4]
   17e94:	ldr	r6, [r6, r3]
   17e98:	mov	r3, #132	; 0x84
   17e9c:	ldr	r0, [pc, #120]	; 17f1c <main@@Base+0x13ae4>
   17ea0:	str	r9, [sp, #12]
   17ea4:	str	r8, [sp, #16]
   17ea8:	add	r0, pc, r0
   17eac:	str	r6, [sp, #8]
   17eb0:	str	r7, [sp, #20]
   17eb4:	bl	3c6c <g_signal_new@plt>
   17eb8:	ldr	ip, [pc, #96]	; 17f20 <main@@Base+0x13ae8>
   17ebc:	ldr	r1, [r5]
   17ec0:	mov	r2, #2
   17ec4:	add	ip, pc, ip
   17ec8:	str	r4, [sp]
   17ecc:	str	r4, [sp, #4]
   17ed0:	mov	r3, #136	; 0x88
   17ed4:	str	r6, [sp, #8]
   17ed8:	mov	r4, ip
   17edc:	str	r9, [sp, #12]
   17ee0:	str	r8, [sp, #16]
   17ee4:	str	r7, [sp, #20]
   17ee8:	str	r0, [ip, #8]
   17eec:	ldr	r0, [pc, #48]	; 17f24 <main@@Base+0x13aec>
   17ef0:	add	r0, pc, r0
   17ef4:	bl	3c6c <g_signal_new@plt>
   17ef8:	ldr	r3, [pc, #40]	; 17f28 <main@@Base+0x13af0>
   17efc:	add	r3, pc, r3
   17f00:	str	r3, [r5, #24]
   17f04:	str	r0, [r4, #12]
   17f08:	add	sp, sp, #28
   17f0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17f10:	andeq	r7, r2, r0, lsl r2
   17f14:	andeq	r6, r2, ip, lsr sp
   17f18:	andeq	r0, r0, ip, lsr #8
   17f1c:	andeq	pc, r0, r8, lsr #3
   17f20:	andeq	r7, r2, ip, lsl #3
   17f24:	andeq	pc, r0, r4, ror r1	; <UNPREDICTABLE>
   17f28:	andeq	r0, r0, r0, ror #1
   17f2c:	push	{r4, r5, r6, lr}
   17f30:	dmb	sy
   17f34:	ldr	r4, [pc, #148]	; 17fd0 <main@@Base+0x13b98>
   17f38:	sub	sp, sp, #16
   17f3c:	add	r4, pc, r4
   17f40:	ldr	r5, [r4, #16]
   17f44:	dmb	sy
   17f48:	cmp	r5, #0
   17f4c:	beq	17f64 <main@@Base+0x13b2c>
   17f50:	ldr	r3, [pc, #124]	; 17fd4 <main@@Base+0x13b9c>
   17f54:	add	r3, pc, r3
   17f58:	ldr	r0, [r3, #16]
   17f5c:	add	sp, sp, #16
   17f60:	pop	{r4, r5, r6, pc}
   17f64:	add	r6, r4, #16
   17f68:	mov	r0, r6
   17f6c:	bl	3d50 <g_once_init_enter@plt>
   17f70:	cmp	r0, #0
   17f74:	beq	17f50 <main@@Base+0x13b18>
   17f78:	ldr	r0, [pc, #88]	; 17fd8 <main@@Base+0x13ba0>
   17f7c:	add	r0, pc, r0
   17f80:	bl	3df8 <g_intern_static_string@plt>
   17f84:	ldr	r3, [pc, #80]	; 17fdc <main@@Base+0x13ba4>
   17f88:	mov	r2, #16
   17f8c:	str	r5, [sp, #8]
   17f90:	add	r3, pc, r3
   17f94:	stm	sp, {r2, r3}
   17f98:	ldr	r3, [pc, #64]	; 17fe0 <main@@Base+0x13ba8>
   17f9c:	mov	r2, #164	; 0xa4
   17fa0:	add	r3, pc, r3
   17fa4:	mov	r1, r0
   17fa8:	mov	r0, #80	; 0x50
   17fac:	bl	3894 <g_type_register_static_simple@plt>
   17fb0:	mov	r1, #36	; 0x24
   17fb4:	mov	r5, r0
   17fb8:	bl	3edc <g_type_add_instance_private@plt>
   17fbc:	mov	r1, r5
   17fc0:	str	r0, [r4]
   17fc4:	mov	r0, r6
   17fc8:	bl	4140 <g_once_init_leave@plt>
   17fcc:	b	17f50 <main@@Base+0x13b18>
   17fd0:	andeq	r7, r2, r4, lsl r1
   17fd4:	strdeq	r7, [r2], -ip
   17fd8:	andeq	r0, r1, r4, asr #30
   17fdc:			; <UNDEFINED> instruction: 0xfffffe40
   17fe0:			; <UNDEFINED> instruction: 0xfffffe80
   17fe4:	push	{r3, r4, r5, r6, r7, lr}
   17fe8:	mov	r5, r0
   17fec:	bl	17f2c <main@@Base+0x13af4>
   17ff0:	mov	r1, r0
   17ff4:	mov	r0, r5
   17ff8:	bl	39d8 <g_type_check_instance_cast@plt>
   17ffc:	ldr	r3, [pc, #96]	; 18064 <main@@Base+0x13c2c>
   18000:	ldr	r6, [pc, r3]
   18004:	add	r4, r0, r6
   18008:	mov	r7, r0
   1800c:	ldr	r0, [r4, #16]
   18010:	bl	3eac <g_free@plt>
   18014:	ldr	r0, [r4, #20]
   18018:	bl	3eac <g_free@plt>
   1801c:	ldr	r0, [r4, #24]
   18020:	bl	4224 <g_ptr_array_unref@plt>
   18024:	ldr	r0, [r7, r6]
   18028:	cmp	r0, #0
   1802c:	beq	18040 <main@@Base+0x13c08>
   18030:	mov	r1, #80	; 0x50
   18034:	bl	39d8 <g_type_check_instance_cast@plt>
   18038:	mov	r1, r4
   1803c:	bl	3b94 <g_object_remove_weak_pointer@plt>
   18040:	ldr	r3, [pc, #32]	; 18068 <main@@Base+0x13c30>
   18044:	mov	r1, #80	; 0x50
   18048:	add	r3, pc, r3
   1804c:	ldr	r0, [r3, #4]
   18050:	bl	4374 <g_type_check_class_cast@plt>
   18054:	ldr	r3, [r0, #24]
   18058:	mov	r0, r5
   1805c:	blx	r3
   18060:	pop	{r3, r4, r5, r6, r7, pc}
   18064:	andeq	r7, r2, r0, asr r0
   18068:	andeq	r7, r2, r8
   1806c:	ldr	r3, [pc, #452]	; 18238 <main@@Base+0x13e00>
   18070:	ldr	r2, [pc, #452]	; 1823c <main@@Base+0x13e04>
   18074:	add	r3, pc, r3
   18078:	push	{r4, r5, r6, r7, r8, r9, lr}
   1807c:	mov	r7, r1
   18080:	ldr	r1, [pc, #440]	; 18240 <main@@Base+0x13e08>
   18084:	sub	sp, sp, #28
   18088:	ldr	r6, [r3, r2]
   1808c:	mov	r4, r0
   18090:	add	r1, pc, r1
   18094:	ldr	r3, [r6]
   18098:	ldr	r5, [r1]
   1809c:	str	r3, [sp, #20]
   180a0:	add	r9, r0, r5
   180a4:	ldr	r8, [r0, r5]
   180a8:	bl	23a78 <main@@Base+0x1f640>
   180ac:	mov	r1, r0
   180b0:	mov	r0, r8
   180b4:	bl	39d8 <g_type_check_instance_cast@plt>
   180b8:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
   180bc:	mov	r3, #0
   180c0:	str	r3, [sp, #16]
   180c4:	mov	r8, r0
   180c8:	bl	17f2c <main@@Base+0x13af4>
   180cc:	cmp	r4, #0
   180d0:	beq	18100 <main@@Base+0x13cc8>
   180d4:	ldr	r3, [r4]
   180d8:	cmp	r3, #0
   180dc:	beq	180ec <main@@Base+0x13cb4>
   180e0:	ldr	r3, [r3]
   180e4:	cmp	r0, r3
   180e8:	beq	1814c <main@@Base+0x13d14>
   180ec:	mov	r1, r0
   180f0:	mov	r0, r4
   180f4:	bl	3fcc <g_type_check_instance_is_a@plt>
   180f8:	cmp	r0, #0
   180fc:	bne	1814c <main@@Base+0x13d14>
   18100:	ldr	r0, [pc, #316]	; 18244 <main@@Base+0x13e0c>
   18104:	ldr	r1, [pc, #316]	; 18248 <main@@Base+0x13e10>
   18108:	ldr	r2, [pc, #316]	; 1824c <main@@Base+0x13e14>
   1810c:	add	r0, pc, r0
   18110:	add	r1, pc, r1
   18114:	add	r2, pc, r2
   18118:	bl	3870 <g_return_if_fail_warning@plt>
   1811c:	mov	r4, #0
   18120:	ldr	r0, [sp, #16]
   18124:	cmp	r0, #0
   18128:	beq	18130 <main@@Base+0x13cf8>
   1812c:	bl	38e8 <g_error_free@plt>
   18130:	ldr	r2, [sp, #20]
   18134:	mov	r0, r4
   18138:	ldr	r3, [r6]
   1813c:	cmp	r2, r3
   18140:	bne	18214 <main@@Base+0x13ddc>
   18144:	add	sp, sp, #28
   18148:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1814c:	cmp	r7, #0
   18150:	beq	18180 <main@@Base+0x13d48>
   18154:	ldr	r3, [r7]
   18158:	cmp	r3, #0
   1815c:	beq	18180 <main@@Base+0x13d48>
   18160:	ldr	r0, [pc, #232]	; 18250 <main@@Base+0x13e18>
   18164:	ldr	r1, [pc, #232]	; 18254 <main@@Base+0x13e1c>
   18168:	ldr	r2, [pc, #232]	; 18258 <main@@Base+0x13e20>
   1816c:	add	r0, pc, r0
   18170:	add	r1, pc, r1
   18174:	add	r2, pc, r2
   18178:	bl	3870 <g_return_if_fail_warning@plt>
   1817c:	b	1811c <main@@Base+0x13ce4>
   18180:	ldr	r0, [r4, r5]
   18184:	mov	r1, r7
   18188:	bl	e320 <main@@Base+0x9ee8>
   1818c:	cmp	r0, #0
   18190:	beq	1811c <main@@Base+0x13ce4>
   18194:	ldr	r0, [r4, r5]
   18198:	bl	d500 <main@@Base+0x90c8>
   1819c:	cmp	r0, #0
   181a0:	beq	181ac <main@@Base+0x13d74>
   181a4:	mov	r4, #1
   181a8:	b	18120 <main@@Base+0x13ce8>
   181ac:	ldr	r0, [r4, r5]
   181b0:	bl	e7e0 <main@@Base+0xa3a8>
   181b4:	mov	r1, r0
   181b8:	ldrb	r2, [r9, #12]
   181bc:	mov	r0, r8
   181c0:	add	r3, sp, #16
   181c4:	bl	3a20 <g_usb_device_set_interface_alt@plt>
   181c8:	cmp	r0, #0
   181cc:	bne	181a4 <main@@Base+0x13d6c>
   181d0:	bl	40a4 <fwupd_error_quark@plt>
   181d4:	mov	r8, r0
   181d8:	ldr	r0, [r4, r5]
   181dc:	ldrb	r4, [r9, #12]
   181e0:	bl	e7e0 <main@@Base+0xa3a8>
   181e4:	ldr	r3, [sp, #16]
   181e8:	mov	r1, r8
   181ec:	str	r0, [sp, #4]
   181f0:	mov	r2, #10
   181f4:	str	r4, [sp]
   181f8:	mov	r0, r7
   181fc:	ldr	ip, [r3, #8]
   18200:	ldr	r3, [pc, #84]	; 1825c <main@@Base+0x13e24>
   18204:	str	ip, [sp, #8]
   18208:	add	r3, pc, r3
   1820c:	bl	4350 <g_set_error@plt>
   18210:	b	1811c <main@@Base+0x13ce4>
   18214:	bl	3e4c <__stack_chk_fail@plt>
   18218:	ldr	r3, [sp, #16]
   1821c:	mov	r4, r0
   18220:	cmp	r3, #0
   18224:	beq	18230 <main@@Base+0x13df8>
   18228:	mov	r0, r3
   1822c:	bl	38e8 <g_error_free@plt>
   18230:	mov	r0, r4
   18234:	bl	42f0 <_Unwind_Resume@plt>
   18238:	andeq	r6, r2, ip, lsl #22
   1823c:	andeq	r0, r0, r0, lsr r4
   18240:	andeq	r6, r2, r0, asr #31
   18244:	andeq	ip, r0, r0, lsl #27
   18248:	andeq	r0, r1, r4, ror ip
   1824c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   18250:	andeq	ip, r0, r0, lsr #26
   18254:	andeq	r0, r1, r4, lsl ip
   18258:	strdeq	lr, [r0], -ip
   1825c:	andeq	r0, r1, r4, asr #25
   18260:	ldr	r3, [pc, #132]	; 182ec <main@@Base+0x13eb4>
   18264:	push	{r4, r5, r6, r7, r8, lr}
   18268:	add	r3, pc, r3
   1826c:	mov	r6, r1
   18270:	ldr	r7, [r3]
   18274:	add	r7, r0, r7
   18278:	ldr	r3, [r7, #24]
   1827c:	ldr	r2, [r3, #4]
   18280:	cmp	r2, #0
   18284:	movne	r4, #0
   18288:	bne	182a0 <main@@Base+0x13e68>
   1828c:	b	182e4 <main@@Base+0x13eac>
   18290:	ldr	r3, [r7, #24]
   18294:	ldr	r2, [r3, #4]
   18298:	cmp	r2, r4
   1829c:	bls	182e4 <main@@Base+0x13eac>
   182a0:	ldr	r3, [r3]
   182a4:	ldr	r5, [r3, r4, lsl #2]
   182a8:	add	r4, r4, #1
   182ac:	mov	r0, r5
   182b0:	bl	1781c <main@@Base+0x133e4>
   182b4:	cmp	r0, r6
   182b8:	bhi	18290 <main@@Base+0x13e58>
   182bc:	mov	r0, r5
   182c0:	bl	1781c <main@@Base+0x133e4>
   182c4:	mov	r8, r0
   182c8:	mov	r0, r5
   182cc:	bl	178a4 <main@@Base+0x1346c>
   182d0:	add	r0, r0, r8
   182d4:	cmp	r6, r0
   182d8:	bhi	18290 <main@@Base+0x13e58>
   182dc:	mov	r0, r5
   182e0:	pop	{r4, r5, r6, r7, r8, pc}
   182e4:	mov	r0, #0
   182e8:	pop	{r4, r5, r6, r7, r8, pc}
   182ec:	andeq	r6, r2, r8, ror #27
   182f0:	ldr	r3, [pc, #1808]	; 18a08 <main@@Base+0x145d0>
   182f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182f8:	subs	r6, r1, #0
   182fc:	ldr	r1, [pc, #1800]	; 18a0c <main@@Base+0x145d4>
   18300:	sub	sp, sp, #84	; 0x54
   18304:	add	r3, pc, r3
   18308:	mov	r7, r2
   1830c:	str	r0, [sp, #40]	; 0x28
   18310:	ldr	r1, [r3, r1]
   18314:	ldr	r0, [pc, #1780]	; 18a10 <main@@Base+0x145d8>
   18318:	ldr	r3, [r1]
   1831c:	add	r0, pc, r0
   18320:	str	r1, [sp, #28]
   18324:	ldr	r8, [r0]
   18328:	str	r3, [sp, #76]	; 0x4c
   1832c:	beq	1837c <main@@Base+0x13f44>
   18330:	ldr	r2, [pc, #1756]	; 18a14 <main@@Base+0x145dc>
   18334:	mov	r0, r6
   18338:	mvn	r1, #0
   1833c:	add	r2, pc, r2
   18340:	bl	3e04 <g_strstr_len@plt>
   18344:	cmp	r0, #0
   18348:	ldr	r0, [sp, #40]	; 0x28
   1834c:	ldr	r1, [pc, #1732]	; 18a18 <main@@Base+0x145e0>
   18350:	add	r8, r0, r8
   18354:	movne	r3, #1
   18358:	mov	r0, r6
   1835c:	add	r1, pc, r1
   18360:	strne	r3, [r8, #4]
   18364:	bl	3d14 <g_str_has_prefix@plt>
   18368:	cmp	r0, #0
   1836c:	bne	183ac <main@@Base+0x13f74>
   18370:	ldrb	r3, [r6]
   18374:	cmp	r3, #64	; 0x40
   18378:	beq	1842c <main@@Base+0x13ff4>
   1837c:	mov	r5, #1
   18380:	mov	r4, #0
   18384:	mov	r0, r4
   18388:	bl	3eac <g_free@plt>
   1838c:	ldr	r1, [sp, #28]
   18390:	ldr	r2, [sp, #76]	; 0x4c
   18394:	mov	r0, r5
   18398:	ldr	r3, [r1]
   1839c:	cmp	r2, r3
   183a0:	bne	18940 <main@@Base+0x14508>
   183a4:	add	sp, sp, #84	; 0x54
   183a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183ac:	add	r0, r6, #6
   183b0:	mov	r1, #0
   183b4:	mov	r2, #16
   183b8:	bl	4284 <g_ascii_strtoull@plt>
   183bc:	mov	r4, r0
   183c0:	subs	r0, r0, #1
   183c4:	mov	r5, r1
   183c8:	sbc	r1, r1, #0
   183cc:	mvn	r2, #1
   183d0:	mov	r3, #0
   183d4:	cmp	r1, r3
   183d8:	cmpeq	r0, r2
   183dc:	movhi	r5, #0
   183e0:	bhi	18380 <main@@Base+0x13f48>
   183e4:	ldr	r0, [pc, #1584]	; 18a1c <main@@Base+0x145e4>
   183e8:	mov	r1, #128	; 0x80
   183ec:	ldr	r2, [pc, #1580]	; 18a20 <main@@Base+0x145e8>
   183f0:	add	r0, pc, r0
   183f4:	add	r2, pc, r2
   183f8:	bl	3a38 <g_log@plt>
   183fc:	mov	r3, #0
   18400:	mov	ip, #3
   18404:	mov	r0, r4
   18408:	mov	r1, r3
   1840c:	str	r3, [sp]
   18410:	mov	r2, r3
   18414:	str	ip, [sp, #4]
   18418:	bl	177c4 <main@@Base+0x1338c>
   1841c:	mov	r1, r0
   18420:	ldr	r0, [r8, #24]
   18424:	bl	426c <g_ptr_array_add@plt>
   18428:	b	18370 <main@@Base+0x13f38>
   1842c:	ldr	r0, [r8, #24]
   18430:	mov	r1, #0
   18434:	bl	3dec <g_ptr_array_set_size@plt>
   18438:	ldr	r1, [pc, #1508]	; 18a24 <main@@Base+0x145ec>
   1843c:	mov	r0, r6
   18440:	mvn	r2, #0
   18444:	add	r1, pc, r1
   18448:	bl	3cb4 <g_strsplit@plt>
   1844c:	str	r0, [sp, #52]	; 0x34
   18450:	ldr	r0, [r8, #20]
   18454:	bl	3eac <g_free@plt>
   18458:	ldr	r2, [sp, #52]	; 0x34
   1845c:	ldr	r0, [r2]
   18460:	add	r0, r0, #1
   18464:	bl	3bc4 <g_strchomp@plt>
   18468:	bl	3b7c <g_strdup@plt>
   1846c:	ldr	r3, [sp, #52]	; 0x34
   18470:	str	r0, [r8, #20]
   18474:	add	r4, r3, #4
   18478:	ldr	r0, [r3, #4]
   1847c:	cmp	r0, #0
   18480:	beq	18814 <main@@Base+0x143dc>
   18484:	ldr	r2, [pc, #1436]	; 18a28 <main@@Base+0x145f0>
   18488:	ldr	r3, [sp, #52]	; 0x34
   1848c:	add	r2, pc, r2
   18490:	ldr	r1, [pc, #1428]	; 18a2c <main@@Base+0x145f4>
   18494:	str	r2, [sp, #60]	; 0x3c
   18498:	add	r3, r3, #12
   1849c:	ldr	r2, [pc, #1420]	; 18a30 <main@@Base+0x145f8>
   184a0:	add	r1, pc, r1
   184a4:	str	r3, [sp, #48]	; 0x30
   184a8:	mov	r3, #0
   184ac:	add	r2, pc, r2
   184b0:	str	r1, [sp, #64]	; 0x40
   184b4:	str	r2, [sp, #36]	; 0x24
   184b8:	str	r3, [sp, #56]	; 0x38
   184bc:	ldr	r1, [sp, #60]	; 0x3c
   184c0:	bl	3d14 <g_str_has_prefix@plt>
   184c4:	cmp	r0, #0
   184c8:	beq	18910 <main@@Base+0x144d8>
   184cc:	ldr	r0, [r4]
   184d0:	mov	r1, #0
   184d4:	mov	r2, #16
   184d8:	add	r0, r0, #2
   184dc:	bl	4284 <g_ascii_strtoull@plt>
   184e0:	mvn	r2, #0
   184e4:	mov	r3, #0
   184e8:	cmp	r1, r3
   184ec:	cmpeq	r0, r2
   184f0:	bhi	188d0 <main@@Base+0x14498>
   184f4:	ldr	r2, [sp, #48]	; 0x30
   184f8:	mov	sl, r0
   184fc:	ldr	r3, [r2, #-4]
   18500:	str	r2, [sp, #68]	; 0x44
   18504:	cmp	r3, #0
   18508:	beq	188f0 <main@@Base+0x144b8>
   1850c:	mov	r0, r3
   18510:	ldr	r1, [sp, #64]	; 0x40
   18514:	mvn	r2, #0
   18518:	bl	3cb4 <g_strsplit@plt>
   1851c:	ldr	r4, [r0]
   18520:	str	r0, [sp, #44]	; 0x2c
   18524:	cmp	r4, #0
   18528:	beq	18700 <main@@Base+0x142c8>
   1852c:	ldr	r5, [sp, #44]	; 0x2c
   18530:	mov	r9, #0
   18534:	ldr	r3, [sp, #56]	; 0x38
   18538:	add	r0, sp, #72	; 0x48
   1853c:	str	r0, [sp, #32]
   18540:	ubfx	r3, r3, #1, #16
   18544:	str	r3, [sp, #24]
   18548:	ldr	r3, [sp, #36]	; 0x24
   1854c:	mov	r0, r4
   18550:	add	r1, sp, #72	; 0x48
   18554:	mov	r2, #10
   18558:	ldr	fp, [r3]
   1855c:	bl	4284 <g_ascii_strtoull@plt>
   18560:	movw	r2, #999	; 0x3e7
   18564:	mov	r3, #0
   18568:	cmp	r1, r3
   1856c:	cmpeq	r0, r2
   18570:	strd	r0, [sp, #8]
   18574:	bhi	18730 <main@@Base+0x142f8>
   18578:	ldr	r0, [sp, #72]	; 0x48
   1857c:	ldrb	r3, [r0]
   18580:	cmp	r3, #42	; 0x2a
   18584:	beq	185d8 <main@@Base+0x141a0>
   18588:	bl	40a4 <fwupd_error_quark@plt>
   1858c:	ldr	r3, [pc, #1184]	; 18a34 <main@@Base+0x145fc>
   18590:	mov	r1, r0
   18594:	str	r4, [sp]
   18598:	mov	r0, r7
   1859c:	mov	r2, #10
   185a0:	add	r3, pc, r3
   185a4:	bl	4350 <g_set_error@plt>
   185a8:	ldr	r1, [pc, #1160]	; 18a38 <main@@Base+0x14600>
   185ac:	mov	r0, r7
   185b0:	ldr	r2, [r5]
   185b4:	add	r1, pc, r1
   185b8:	bl	4404 <g_prefix_error@plt>
   185bc:	ldr	r0, [sp, #44]	; 0x2c
   185c0:	bl	3e1c <g_strfreev@plt>
   185c4:	mov	r4, #0
   185c8:	mov	r5, r4
   185cc:	ldr	r0, [sp, #52]	; 0x34
   185d0:	bl	3e1c <g_strfreev@plt>
   185d4:	b	18384 <main@@Base+0x13f4c>
   185d8:	add	r0, r0, #1
   185dc:	add	r1, sp, #72	; 0x48
   185e0:	mov	r2, #10
   185e4:	bl	4284 <g_ascii_strtoull@plt>
   185e8:	movw	r2, #999	; 0x3e7
   185ec:	mov	r3, #0
   185f0:	cmp	r1, r3
   185f4:	cmpeq	r0, r2
   185f8:	bhi	18754 <main@@Base+0x1431c>
   185fc:	ldr	r2, [sp, #72]	; 0x48
   18600:	ldrb	r3, [r2]
   18604:	cmp	r3, #66	; 0x42
   18608:	beq	18628 <main@@Base+0x141f0>
   1860c:	bls	18778 <main@@Base+0x14340>
   18610:	cmp	r3, #75	; 0x4b
   18614:	beq	187a8 <main@@Base+0x14370>
   18618:	cmp	r3, #77	; 0x4d
   1861c:	bne	18780 <main@@Base+0x14348>
   18620:	lsl	r3, r0, #20
   18624:	mov	r0, r3
   18628:	ldrb	r3, [r2, #1]
   1862c:	sub	r3, r3, #97	; 0x61
   18630:	cmp	r3, #6
   18634:	addls	pc, pc, r3, lsl #2
   18638:	b	187e4 <main@@Base+0x143ac>
   1863c:	b	187dc <main@@Base+0x143a4>
   18640:	b	18658 <main@@Base+0x14220>
   18644:	b	187d4 <main@@Base+0x1439c>
   18648:	b	187cc <main@@Base+0x14394>
   1864c:	b	187c4 <main@@Base+0x1438c>
   18650:	b	187bc <main@@Base+0x14384>
   18654:	b	187b4 <main@@Base+0x1437c>
   18658:	mov	r8, #4
   1865c:	ldrd	r2, [sp, #8]
   18660:	orrs	r3, r2, r3
   18664:	beq	1880c <main@@Base+0x143d4>
   18668:	ldr	r2, [sp, #8]
   1866c:	mov	r5, #0
   18670:	ldr	r3, [sp, #40]	; 0x28
   18674:	mov	r4, r5
   18678:	str	r0, [sp, #16]
   1867c:	mul	r2, r2, r0
   18680:	add	fp, r3, fp
   18684:	str	r2, [sp, #20]
   18688:	ldr	r3, [sp, #20]
   1868c:	add	r0, r4, sl
   18690:	str	r9, [sp]
   18694:	rsb	r2, r4, r3
   18698:	str	r8, [sp, #4]
   1869c:	ldr	r1, [sp, #16]
   186a0:	ldr	r3, [sp, #24]
   186a4:	bl	177c4 <main@@Base+0x1338c>
   186a8:	mov	r6, r0
   186ac:	ldr	r0, [fp, #24]
   186b0:	mov	r1, r6
   186b4:	bl	426c <g_ptr_array_add@plt>
   186b8:	mov	r0, r6
   186bc:	bl	178a4 <main@@Base+0x1346c>
   186c0:	add	r5, r5, #1
   186c4:	add	r4, r4, r0
   186c8:	ldrd	r0, [sp, #8]
   186cc:	mov	r3, #0
   186d0:	mov	r2, r5
   186d4:	cmp	r1, r3
   186d8:	cmpeq	r0, r2
   186dc:	bhi	18688 <main@@Base+0x14250>
   186e0:	add	r3, r9, #1
   186e4:	ldr	r1, [sp, #44]	; 0x2c
   186e8:	add	sl, sl, r4
   186ec:	uxth	r9, r3
   186f0:	ldr	r4, [r1, r9, lsl #2]
   186f4:	add	r5, r1, r9, lsl #2
   186f8:	cmp	r4, #0
   186fc:	bne	18548 <main@@Base+0x14110>
   18700:	ldr	r0, [sp, #44]	; 0x2c
   18704:	bl	3e1c <g_strfreev@plt>
   18708:	ldr	r2, [sp, #48]	; 0x30
   1870c:	ldr	r3, [sp, #56]	; 0x38
   18710:	ldr	r0, [r2], #8
   18714:	add	r3, r3, #2
   18718:	str	r3, [sp, #56]	; 0x38
   1871c:	cmp	r0, #0
   18720:	str	r2, [sp, #48]	; 0x30
   18724:	beq	18814 <main@@Base+0x143dc>
   18728:	ldr	r4, [sp, #68]	; 0x44
   1872c:	b	184bc <main@@Base+0x14084>
   18730:	bl	40a4 <fwupd_error_quark@plt>
   18734:	ldr	r3, [pc, #768]	; 18a3c <main@@Base+0x14604>
   18738:	mov	r1, r0
   1873c:	str	r4, [sp]
   18740:	mov	r0, r7
   18744:	mov	r2, #10
   18748:	add	r3, pc, r3
   1874c:	bl	4350 <g_set_error@plt>
   18750:	b	185a8 <main@@Base+0x14170>
   18754:	bl	40a4 <fwupd_error_quark@plt>
   18758:	ldr	r3, [pc, #736]	; 18a40 <main@@Base+0x14608>
   1875c:	mov	r1, r0
   18760:	str	r4, [sp]
   18764:	mov	r0, r7
   18768:	mov	r2, #10
   1876c:	add	r3, pc, r3
   18770:	bl	4350 <g_set_error@plt>
   18774:	b	185a8 <main@@Base+0x14170>
   18778:	cmp	r3, #32
   1877c:	beq	18628 <main@@Base+0x141f0>
   18780:	bl	40a4 <fwupd_error_quark@plt>
   18784:	ldr	ip, [sp, #72]	; 0x48
   18788:	mov	r1, r0
   1878c:	ldr	r3, [pc, #688]	; 18a44 <main@@Base+0x1460c>
   18790:	mov	r0, r7
   18794:	mov	r2, #10
   18798:	add	r3, pc, r3
   1879c:	str	ip, [sp]
   187a0:	bl	4350 <g_set_error@plt>
   187a4:	b	185a8 <main@@Base+0x14170>
   187a8:	lsl	r3, r0, #10
   187ac:	mov	r0, r3
   187b0:	b	18628 <main@@Base+0x141f0>
   187b4:	mov	r8, #7
   187b8:	b	1865c <main@@Base+0x14224>
   187bc:	mov	r8, #6
   187c0:	b	1865c <main@@Base+0x14224>
   187c4:	mov	r8, #3
   187c8:	b	1865c <main@@Base+0x14224>
   187cc:	mov	r8, #2
   187d0:	b	1865c <main@@Base+0x14224>
   187d4:	mov	r8, #5
   187d8:	b	1865c <main@@Base+0x14224>
   187dc:	mov	r8, #1
   187e0:	b	1865c <main@@Base+0x14224>
   187e4:	bl	40a4 <fwupd_error_quark@plt>
   187e8:	ldr	ip, [sp, #72]	; 0x48
   187ec:	mov	r1, r0
   187f0:	ldr	r3, [pc, #592]	; 18a48 <main@@Base+0x14610>
   187f4:	mov	r0, r7
   187f8:	mov	r2, #10
   187fc:	add	r3, pc, r3
   18800:	str	ip, [sp]
   18804:	bl	4350 <g_set_error@plt>
   18808:	b	185a8 <main@@Base+0x14170>
   1880c:	mov	r4, #0
   18810:	b	186e0 <main@@Base+0x142a8>
   18814:	ldr	r3, [pc, #560]	; 18a4c <main@@Base+0x14614>
   18818:	ldr	r0, [pc, #560]	; 18a50 <main@@Base+0x14618>
   1881c:	add	r3, pc, r3
   18820:	ldr	r1, [sp, #40]	; 0x28
   18824:	add	r0, pc, r0
   18828:	ldr	r7, [r3]
   1882c:	add	r7, r1, r7
   18830:	bl	3990 <g_string_new@plt>
   18834:	ldr	r3, [r7, #24]
   18838:	mov	r6, r0
   1883c:	ldr	r8, [pc, #528]	; 18a54 <main@@Base+0x1461c>
   18840:	mov	r4, #0
   18844:	ldr	r2, [r3, #4]
   18848:	add	r8, pc, r8
   1884c:	cmp	r2, #0
   18850:	beq	18890 <main@@Base+0x14458>
   18854:	ldr	r3, [r3]
   18858:	ldr	r0, [r3, r4, lsl #2]
   1885c:	bl	17c1c <main@@Base+0x137e4>
   18860:	mov	r5, r0
   18864:	mov	r1, r8
   18868:	mov	r0, r6
   1886c:	mov	r2, r5
   18870:	bl	4344 <g_string_append_printf@plt>
   18874:	mov	r0, r5
   18878:	bl	3eac <g_free@plt>
   1887c:	ldr	r3, [r7, #24]
   18880:	add	r4, r4, #1
   18884:	ldr	r2, [r3, #4]
   18888:	cmp	r4, r2
   1888c:	bcc	18854 <main@@Base+0x1441c>
   18890:	ldr	r1, [r6, #4]
   18894:	cmp	r1, #0
   18898:	bne	18930 <main@@Base+0x144f8>
   1889c:	mov	r0, r6
   188a0:	mov	r1, #0
   188a4:	bl	40bc <g_string_free@plt>
   188a8:	mov	r4, r0
   188ac:	ldr	r2, [pc, #420]	; 18a58 <main@@Base+0x14620>
   188b0:	ldr	r0, [pc, #420]	; 18a5c <main@@Base+0x14624>
   188b4:	mov	r3, r4
   188b8:	mov	r1, #128	; 0x80
   188bc:	add	r2, pc, r2
   188c0:	add	r0, pc, r0
   188c4:	bl	3a38 <g_log@plt>
   188c8:	mov	r5, #1
   188cc:	b	185cc <main@@Base+0x14194>
   188d0:	bl	40a4 <fwupd_error_quark@plt>
   188d4:	ldr	r3, [pc, #388]	; 18a60 <main@@Base+0x14628>
   188d8:	mov	r1, r0
   188dc:	mov	r2, #10
   188e0:	mov	r0, r7
   188e4:	add	r3, pc, r3
   188e8:	bl	3ae0 <g_set_error_literal@plt>
   188ec:	b	185c4 <main@@Base+0x1418c>
   188f0:	bl	40a4 <fwupd_error_quark@plt>
   188f4:	ldr	r3, [pc, #360]	; 18a64 <main@@Base+0x1462c>
   188f8:	mov	r1, r0
   188fc:	mov	r2, #10
   18900:	mov	r0, r7
   18904:	add	r3, pc, r3
   18908:	bl	3ae0 <g_set_error_literal@plt>
   1890c:	b	185c4 <main@@Base+0x1418c>
   18910:	bl	40a4 <fwupd_error_quark@plt>
   18914:	ldr	r3, [pc, #332]	; 18a68 <main@@Base+0x14630>
   18918:	mov	r1, r0
   1891c:	mov	r2, #10
   18920:	mov	r0, r7
   18924:	add	r3, pc, r3
   18928:	bl	3ae0 <g_set_error_literal@plt>
   1892c:	b	185c4 <main@@Base+0x1418c>
   18930:	sub	r1, r1, #1
   18934:	mov	r0, r6
   18938:	bl	3960 <g_string_truncate@plt>
   1893c:	b	1889c <main@@Base+0x14464>
   18940:	bl	3e4c <__stack_chk_fail@plt>
   18944:	mov	r5, r0
   18948:	mov	r4, #0
   1894c:	ldr	r0, [sp, #52]	; 0x34
   18950:	bl	3e1c <g_strfreev@plt>
   18954:	mov	r0, r4
   18958:	bl	3eac <g_free@plt>
   1895c:	mov	r0, r5
   18960:	bl	42f0 <_Unwind_Resume@plt>
   18964:	b	18944 <main@@Base+0x1450c>
   18968:	mov	r5, r0
   1896c:	b	1894c <main@@Base+0x14514>
   18970:	b	18944 <main@@Base+0x1450c>
   18974:	b	18944 <main@@Base+0x1450c>
   18978:	b	18944 <main@@Base+0x1450c>
   1897c:	b	18944 <main@@Base+0x1450c>
   18980:	b	18944 <main@@Base+0x1450c>
   18984:	b	18944 <main@@Base+0x1450c>
   18988:	mov	r4, r0
   1898c:	mov	r0, r5
   18990:	bl	3eac <g_free@plt>
   18994:	mov	r5, r4
   18998:	mov	r4, #0
   1899c:	b	1894c <main@@Base+0x14514>
   189a0:	b	18944 <main@@Base+0x1450c>
   189a4:	b	18944 <main@@Base+0x1450c>
   189a8:	mov	r5, r0
   189ac:	mov	r4, #0
   189b0:	b	18954 <main@@Base+0x1451c>
   189b4:	mov	r5, r0
   189b8:	b	18954 <main@@Base+0x1451c>
   189bc:	b	18944 <main@@Base+0x1450c>
   189c0:	mov	r5, r0
   189c4:	ldr	r0, [sp, #44]	; 0x2c
   189c8:	bl	3e1c <g_strfreev@plt>
   189cc:	b	18948 <main@@Base+0x14510>
   189d0:	b	189a8 <main@@Base+0x14570>
   189d4:	ldr	r1, [sp, #52]	; 0x34
   189d8:	mov	r5, r0
   189dc:	cmp	r1, #0
   189e0:	moveq	r4, r1
   189e4:	bne	18948 <main@@Base+0x14510>
   189e8:	b	18954 <main@@Base+0x1451c>
   189ec:	b	189a8 <main@@Base+0x14570>
   189f0:	b	189a8 <main@@Base+0x14570>
   189f4:	b	189a8 <main@@Base+0x14570>
   189f8:	b	189a8 <main@@Base+0x14570>
   189fc:	b	189a8 <main@@Base+0x14570>
   18a00:	b	189a8 <main@@Base+0x14570>
   18a04:	b	18944 <main@@Base+0x1450c>
   18a08:	andeq	r6, r2, ip, ror r8
   18a0c:	andeq	r0, r0, r0, lsr r4
   18a10:	andeq	r6, r2, r4, lsr sp
   18a14:	andeq	r0, r1, r0, ror #23
   18a18:	andeq	r0, r1, r8, asr #23
   18a1c:	muleq	r0, ip, sl
   18a20:	andeq	r0, r1, r8, lsr fp
   18a24:	andeq	r0, r1, r4, lsl #22
   18a28:	muleq	r1, ip, sl
   18a2c:	andeq	sp, r0, r4, asr r1
   18a30:	andeq	r6, r2, r4, lsr #23
   18a34:	andeq	r0, r1, r0, lsl sl
   18a38:	andeq	r0, r1, r4, ror #20
   18a3c:	andeq	r0, r1, r8, asr #16
   18a40:	andeq	r0, r1, ip, asr r8
   18a44:	andeq	r0, r1, r8, asr #16
   18a48:	andeq	r0, r1, r4, lsl #16
   18a4c:	andeq	r6, r2, r4, lsr r8
   18a50:	andeq	ip, r0, ip, asr lr
   18a54:	andeq	sp, r0, r0, asr #23
   18a58:			; <UNDEFINED> instruction: 0x0000dbbc
   18a5c:	andeq	ip, r0, ip, asr #11
   18a60:	andeq	r0, r1, ip, ror r6
   18a64:	andeq	r0, r1, r8, ror r6
   18a68:	andeq	r0, r1, r8, lsr #12
   18a6c:	push	{r3, lr}
   18a70:	bl	17f2c <main@@Base+0x13af4>
   18a74:	mov	r1, #0
   18a78:	pop	{r3, lr}
   18a7c:	b	3804 <g_object_new@plt>
   18a80:	push	{r3, r4, r5, lr}
   18a84:	mov	r4, r0
   18a88:	ldr	r3, [pc, #112]	; 18b00 <main@@Base+0x146c8>
   18a8c:	add	r3, pc, r3
   18a90:	ldr	r5, [r3]
   18a94:	bl	17f2c <main@@Base+0x13af4>
   18a98:	cmp	r4, #0
   18a9c:	beq	18acc <main@@Base+0x14694>
   18aa0:	ldr	r3, [r4]
   18aa4:	cmp	r3, #0
   18aa8:	beq	18ab8 <main@@Base+0x14680>
   18aac:	ldr	r3, [r3]
   18ab0:	cmp	r0, r3
   18ab4:	beq	18af4 <main@@Base+0x146bc>
   18ab8:	mov	r1, r0
   18abc:	mov	r0, r4
   18ac0:	bl	3fcc <g_type_check_instance_is_a@plt>
   18ac4:	cmp	r0, #0
   18ac8:	bne	18af4 <main@@Base+0x146bc>
   18acc:	ldr	r1, [pc, #48]	; 18b04 <main@@Base+0x146cc>
   18ad0:	ldr	r0, [pc, #48]	; 18b08 <main@@Base+0x146d0>
   18ad4:	ldr	r2, [pc, #48]	; 18b0c <main@@Base+0x146d4>
   18ad8:	add	r1, pc, r1
   18adc:	add	r0, pc, r0
   18ae0:	add	r1, r1, #28
   18ae4:	add	r2, pc, r2
   18ae8:	bl	3870 <g_return_if_fail_warning@plt>
   18aec:	mov	r0, #0
   18af0:	pop	{r3, r4, r5, pc}
   18af4:	add	r4, r4, r5
   18af8:	ldr	r0, [r4, #24]
   18afc:	pop	{r3, r4, r5, pc}
   18b00:	andeq	r6, r2, r4, asr #11
   18b04:	andeq	r0, r1, ip, lsr #5
   18b08:			; <UNDEFINED> instruction: 0x0000c3b0
   18b0c:	andeq	r0, r1, r0, lsr #8
   18b10:	push	{r3, r4, r5, lr}
   18b14:	mov	r4, r0
   18b18:	ldr	r3, [pc, #148]	; 18bb4 <main@@Base+0x1477c>
   18b1c:	add	r3, pc, r3
   18b20:	ldr	r5, [r3]
   18b24:	bl	17f2c <main@@Base+0x13af4>
   18b28:	cmp	r4, #0
   18b2c:	beq	18b5c <main@@Base+0x14724>
   18b30:	ldr	r3, [r4]
   18b34:	cmp	r3, #0
   18b38:	beq	18b48 <main@@Base+0x14710>
   18b3c:	ldr	r3, [r3]
   18b40:	cmp	r0, r3
   18b44:	beq	18b84 <main@@Base+0x1474c>
   18b48:	mov	r1, r0
   18b4c:	mov	r0, r4
   18b50:	bl	3fcc <g_type_check_instance_is_a@plt>
   18b54:	cmp	r0, #0
   18b58:	bne	18b84 <main@@Base+0x1474c>
   18b5c:	ldr	r1, [pc, #84]	; 18bb8 <main@@Base+0x14780>
   18b60:	ldr	r0, [pc, #84]	; 18bbc <main@@Base+0x14784>
   18b64:	ldr	r2, [pc, #84]	; 18bc0 <main@@Base+0x14788>
   18b68:	add	r1, pc, r1
   18b6c:	add	r0, pc, r0
   18b70:	add	r1, r1, #52	; 0x34
   18b74:	add	r2, pc, r2
   18b78:	bl	3870 <g_return_if_fail_warning@plt>
   18b7c:	mov	r0, #0
   18b80:	pop	{r3, r4, r5, pc}
   18b84:	add	r4, r4, r5
   18b88:	ldr	r3, [r4, #24]
   18b8c:	ldr	r2, [r3, #4]
   18b90:	cmp	r2, #0
   18b94:	beq	18b7c <main@@Base+0x14744>
   18b98:	ldr	r3, [r3]
   18b9c:	ldr	r4, [r3]
   18ba0:	bl	1770c <main@@Base+0x132d4>
   18ba4:	mov	r1, r0
   18ba8:	mov	r0, r4
   18bac:	pop	{r3, r4, r5, lr}
   18bb0:	b	39d8 <g_type_check_instance_cast@plt>
   18bb4:	andeq	r6, r2, r4, lsr r5
   18bb8:	andeq	r0, r1, ip, lsl r2
   18bbc:	andeq	ip, r0, r0, lsr #6
   18bc0:	muleq	r1, r0, r3
   18bc4:	ldr	r3, [pc, #672]	; 18e6c <main@@Base+0x14a34>
   18bc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18bcc:	add	r3, pc, r3
   18bd0:	mov	r6, r0
   18bd4:	mov	r7, r1
   18bd8:	ldr	r5, [r3]
   18bdc:	add	r4, r0, r5
   18be0:	ldr	r0, [r0, r5]
   18be4:	bl	e448 <main@@Base+0xa010>
   18be8:	cmp	r0, #0
   18bec:	bne	18bf8 <main@@Base+0x147c0>
   18bf0:	mov	r0, #0
   18bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18bf8:	ldr	r0, [r6, r5]
   18bfc:	bl	c4d8 <main@@Base+0x80a0>
   18c00:	movw	r3, #282	; 0x11a
   18c04:	cmp	r0, r3
   18c08:	beq	18c28 <main@@Base+0x147f0>
   18c0c:	ldr	r0, [r6, r5]
   18c10:	bl	d62c <main@@Base+0x91f4>
   18c14:	cmp	r0, #10
   18c18:	mov	r4, r0
   18c1c:	beq	18c88 <main@@Base+0x14850>
   18c20:	mov	r0, #1
   18c24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c28:	ldr	r9, [pc, #576]	; 18e70 <main@@Base+0x14a38>
   18c2c:	mov	sl, #1000	; 0x3e8
   18c30:	ldr	r8, [pc, #572]	; 18e74 <main@@Base+0x14a3c>
   18c34:	add	r9, pc, r9
   18c38:	add	r8, pc, r8
   18c3c:	b	18c68 <main@@Base+0x14830>
   18c40:	bl	3a38 <g_log@plt>
   18c44:	ldr	r0, [r4]
   18c48:	bl	c568 <main@@Base+0x8130>
   18c4c:	mul	r0, sl, r0
   18c50:	bl	39f0 <g_usleep@plt>
   18c54:	ldr	r0, [r4]
   18c58:	mov	r1, r7
   18c5c:	bl	e448 <main@@Base+0xa010>
   18c60:	cmp	r0, #0
   18c64:	beq	18bf0 <main@@Base+0x147b8>
   18c68:	ldr	r0, [r4]
   18c6c:	bl	d62c <main@@Base+0x91f4>
   18c70:	mov	r1, #128	; 0x80
   18c74:	mov	r2, r8
   18c78:	cmp	r0, #4
   18c7c:	mov	r0, r9
   18c80:	beq	18c40 <main@@Base+0x14808>
   18c84:	b	18c0c <main@@Base+0x147d4>
   18c88:	ldr	r0, [r6, r5]
   18c8c:	bl	d6bc <main@@Base+0x9284>
   18c90:	mov	r8, r0
   18c94:	ldr	r0, [r6, r5]
   18c98:	bl	c4d8 <main@@Base+0x80a0>
   18c9c:	movw	r3, #282	; 0x11a
   18ca0:	cmp	r0, r3
   18ca4:	beq	18d50 <main@@Base+0x14918>
   18ca8:	bl	40a4 <fwupd_error_quark@plt>
   18cac:	ldr	r3, [pc, #452]	; 18e78 <main@@Base+0x14a40>
   18cb0:	cmp	r8, #0
   18cb4:	add	r3, pc, r3
   18cb8:	mov	r1, r0
   18cbc:	beq	18d40 <main@@Base+0x14908>
   18cc0:	cmp	r8, #1
   18cc4:	beq	18d7c <main@@Base+0x14944>
   18cc8:	cmp	r8, #2
   18ccc:	beq	18d88 <main@@Base+0x14950>
   18cd0:	cmp	r8, #3
   18cd4:	beq	18d94 <main@@Base+0x1495c>
   18cd8:	cmp	r8, #4
   18cdc:	beq	18da0 <main@@Base+0x14968>
   18ce0:	cmp	r8, #5
   18ce4:	beq	18dac <main@@Base+0x14974>
   18ce8:	cmp	r8, #6
   18cec:	beq	18e00 <main@@Base+0x149c8>
   18cf0:	cmp	r8, #7
   18cf4:	beq	18e0c <main@@Base+0x149d4>
   18cf8:	cmp	r8, #8
   18cfc:	beq	18e18 <main@@Base+0x149e0>
   18d00:	cmp	r8, #9
   18d04:	beq	18e24 <main@@Base+0x149ec>
   18d08:	cmp	r8, #10
   18d0c:	beq	18e30 <main@@Base+0x149f8>
   18d10:	cmp	r8, #11
   18d14:	beq	18e48 <main@@Base+0x14a10>
   18d18:	cmp	r8, #12
   18d1c:	beq	18e3c <main@@Base+0x14a04>
   18d20:	cmp	r8, #13
   18d24:	beq	18e60 <main@@Base+0x14a28>
   18d28:	cmp	r8, #14
   18d2c:	beq	18e54 <main@@Base+0x14a1c>
   18d30:	cmp	r8, #15
   18d34:	movne	r3, #0
   18d38:	ldreq	r3, [pc, #316]	; 18e7c <main@@Base+0x14a44>
   18d3c:	addeq	r3, pc, r3
   18d40:	mov	r0, r7
   18d44:	mov	r2, #10
   18d48:	bl	3ae0 <g_set_error_literal@plt>
   18d4c:	b	18bf0 <main@@Base+0x147b8>
   18d50:	cmp	r8, #11
   18d54:	beq	18db8 <main@@Base+0x14980>
   18d58:	cmp	r8, #1
   18d5c:	beq	18ddc <main@@Base+0x149a4>
   18d60:	bl	40a4 <fwupd_error_quark@plt>
   18d64:	cmp	r8, #0
   18d68:	mov	r1, r0
   18d6c:	bne	18cc8 <main@@Base+0x14890>
   18d70:	ldr	r3, [pc, #264]	; 18e80 <main@@Base+0x14a48>
   18d74:	add	r3, pc, r3
   18d78:	b	18d40 <main@@Base+0x14908>
   18d7c:	ldr	r3, [pc, #256]	; 18e84 <main@@Base+0x14a4c>
   18d80:	add	r3, pc, r3
   18d84:	b	18d40 <main@@Base+0x14908>
   18d88:	ldr	r3, [pc, #248]	; 18e88 <main@@Base+0x14a50>
   18d8c:	add	r3, pc, r3
   18d90:	b	18d40 <main@@Base+0x14908>
   18d94:	ldr	r3, [pc, #240]	; 18e8c <main@@Base+0x14a54>
   18d98:	add	r3, pc, r3
   18d9c:	b	18d40 <main@@Base+0x14908>
   18da0:	ldr	r3, [pc, #232]	; 18e90 <main@@Base+0x14a58>
   18da4:	add	r3, pc, r3
   18da8:	b	18d40 <main@@Base+0x14908>
   18dac:	ldr	r3, [pc, #224]	; 18e94 <main@@Base+0x14a5c>
   18db0:	add	r3, pc, r3
   18db4:	b	18d40 <main@@Base+0x14908>
   18db8:	bl	40a4 <fwupd_error_quark@plt>
   18dbc:	ldr	r3, [pc, #212]	; 18e98 <main@@Base+0x14a60>
   18dc0:	mov	r2, r4
   18dc4:	add	r3, pc, r3
   18dc8:	mov	r1, r0
   18dcc:	mov	r0, r7
   18dd0:	bl	4350 <g_set_error@plt>
   18dd4:	mov	r0, #0
   18dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18ddc:	bl	40a4 <fwupd_error_quark@plt>
   18de0:	ldr	r3, [pc, #180]	; 18e9c <main@@Base+0x14a64>
   18de4:	mov	r2, r4
   18de8:	add	r3, pc, r3
   18dec:	mov	r1, r0
   18df0:	mov	r0, r7
   18df4:	bl	4350 <g_set_error@plt>
   18df8:	mov	r0, #0
   18dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18e00:	ldr	r3, [pc, #152]	; 18ea0 <main@@Base+0x14a68>
   18e04:	add	r3, pc, r3
   18e08:	b	18d40 <main@@Base+0x14908>
   18e0c:	ldr	r3, [pc, #144]	; 18ea4 <main@@Base+0x14a6c>
   18e10:	add	r3, pc, r3
   18e14:	b	18d40 <main@@Base+0x14908>
   18e18:	ldr	r3, [pc, #136]	; 18ea8 <main@@Base+0x14a70>
   18e1c:	add	r3, pc, r3
   18e20:	b	18d40 <main@@Base+0x14908>
   18e24:	ldr	r3, [pc, #128]	; 18eac <main@@Base+0x14a74>
   18e28:	add	r3, pc, r3
   18e2c:	b	18d40 <main@@Base+0x14908>
   18e30:	ldr	r3, [pc, #120]	; 18eb0 <main@@Base+0x14a78>
   18e34:	add	r3, pc, r3
   18e38:	b	18d40 <main@@Base+0x14908>
   18e3c:	ldr	r3, [pc, #112]	; 18eb4 <main@@Base+0x14a7c>
   18e40:	add	r3, pc, r3
   18e44:	b	18d40 <main@@Base+0x14908>
   18e48:	ldr	r3, [pc, #104]	; 18eb8 <main@@Base+0x14a80>
   18e4c:	add	r3, pc, r3
   18e50:	b	18d40 <main@@Base+0x14908>
   18e54:	ldr	r3, [pc, #96]	; 18ebc <main@@Base+0x14a84>
   18e58:	add	r3, pc, r3
   18e5c:	b	18d40 <main@@Base+0x14908>
   18e60:	ldr	r3, [pc, #88]	; 18ec0 <main@@Base+0x14a88>
   18e64:	add	r3, pc, r3
   18e68:	b	18d40 <main@@Base+0x14908>
   18e6c:	andeq	r6, r2, r4, lsl #9
   18e70:	andeq	ip, r0, r8, asr r2
   18e74:	andeq	r0, r1, r4, ror #12
   18e78:	andeq	r0, r1, ip, ror r3
   18e7c:	andeq	r0, r1, r8, lsr r5
   18e80:			; <UNDEFINED> instruction: 0x000102bc
   18e84:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   18e88:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   18e8c:	andeq	r0, r1, r8, lsl r3
   18e90:	andeq	r0, r1, r0, lsr r3
   18e94:	andeq	r0, r1, r4, asr #6
   18e98:	andeq	r0, r1, r4, lsl #10
   18e9c:	strdeq	r0, [r1], -ip
   18ea0:	andeq	r0, r1, ip, lsl #6
   18ea4:	andeq	r0, r1, r0, lsr #6
   18ea8:	andeq	r0, r1, ip, lsr r3
   18eac:	andeq	r0, r1, r4, ror #6
   18eb0:	muleq	r1, r0, r3
   18eb4:			; <UNDEFINED> instruction: 0x000103b8
   18eb8:	muleq	r1, r4, r3
   18ebc:	strdeq	r0, [r1], -ip
   18ec0:	andeq	r0, r1, r4, asr #7
   18ec4:	push	{r3, r4, r5, lr}
   18ec8:	mov	r5, r1
   18ecc:	ldr	r3, [pc, #32]	; 18ef4 <main@@Base+0x14abc>
   18ed0:	add	r3, pc, r3
   18ed4:	ldr	r4, [r3]
   18ed8:	add	r4, r0, r4
   18edc:	ldr	r0, [r4, #16]
   18ee0:	bl	3eac <g_free@plt>
   18ee4:	mov	r0, r5
   18ee8:	bl	3b7c <g_strdup@plt>
   18eec:	str	r0, [r4, #16]
   18ef0:	pop	{r3, r4, r5, pc}
   18ef4:	andeq	r6, r2, r0, lsl #3
   18ef8:	ldr	r3, [pc, #100]	; 18f64 <main@@Base+0x14b2c>
   18efc:	push	{r4, r5, r6, r7, r8, lr}
   18f00:	add	r3, pc, r3
   18f04:	mov	r5, r0
   18f08:	mov	r4, r1
   18f0c:	ldr	r6, [r3]
   18f10:	add	r8, r0, r6
   18f14:	ldr	r7, [r0, r6]
   18f18:	cmp	r1, r7
   18f1c:	beq	18f5c <main@@Base+0x14b24>
   18f20:	cmp	r1, #0
   18f24:	beq	18f30 <main@@Base+0x14af8>
   18f28:	mov	r0, r1
   18f2c:	bl	381c <g_object_ref@plt>
   18f30:	cmp	r7, #0
   18f34:	str	r4, [r5, r6]
   18f38:	beq	18f5c <main@@Base+0x14b24>
   18f3c:	mov	r0, r7
   18f40:	bl	4110 <g_object_unref@plt>
   18f44:	ldr	r0, [r5, r6]
   18f48:	mov	r1, #80	; 0x50
   18f4c:	bl	39d8 <g_type_check_instance_cast@plt>
   18f50:	mov	r1, r8
   18f54:	pop	{r4, r5, r6, r7, r8, lr}
   18f58:	b	3810 <g_object_add_weak_pointer@plt>
   18f5c:	mov	r0, r4
   18f60:	b	18f48 <main@@Base+0x14b10>
   18f64:	andeq	r6, r2, r0, asr r1
   18f68:	ldr	r3, [pc, #452]	; 19134 <main@@Base+0x14cfc>
   18f6c:	push	{r4, r5, r6, r7, r8, lr}
   18f70:	add	r3, pc, r3
   18f74:	mov	r4, r0
   18f78:	sub	sp, sp, #8
   18f7c:	ldr	r8, [r3]
   18f80:	mov	r5, r1
   18f84:	ldr	r7, [r0]
   18f88:	bl	17f2c <main@@Base+0x13af4>
   18f8c:	ldr	r3, [r4]
   18f90:	cmp	r3, #0
   18f94:	beq	18fa4 <main@@Base+0x14b6c>
   18f98:	ldr	r3, [r3]
   18f9c:	cmp	r0, r3
   18fa0:	beq	18fe4 <main@@Base+0x14bac>
   18fa4:	mov	r1, r0
   18fa8:	mov	r0, r4
   18fac:	bl	3fcc <g_type_check_instance_is_a@plt>
   18fb0:	subs	r6, r0, #0
   18fb4:	bne	18fe4 <main@@Base+0x14bac>
   18fb8:	ldr	r1, [pc, #376]	; 19138 <main@@Base+0x14d00>
   18fbc:	ldr	r0, [pc, #376]	; 1913c <main@@Base+0x14d04>
   18fc0:	ldr	r2, [pc, #376]	; 19140 <main@@Base+0x14d08>
   18fc4:	add	r1, pc, r1
   18fc8:	add	r0, pc, r0
   18fcc:	add	r1, r1, #84	; 0x54
   18fd0:	add	r2, pc, r2
   18fd4:	bl	3870 <g_return_if_fail_warning@plt>
   18fd8:	mov	r0, r6
   18fdc:	add	sp, sp, #8
   18fe0:	pop	{r4, r5, r6, r7, r8, pc}
   18fe4:	cmp	r5, #0
   18fe8:	beq	19024 <main@@Base+0x14bec>
   18fec:	ldr	r3, [r5]
   18ff0:	cmp	r3, #0
   18ff4:	beq	19024 <main@@Base+0x14bec>
   18ff8:	ldr	r1, [pc, #324]	; 19144 <main@@Base+0x14d0c>
   18ffc:	ldr	r0, [pc, #324]	; 19148 <main@@Base+0x14d10>
   19000:	ldr	r2, [pc, #324]	; 1914c <main@@Base+0x14d14>
   19004:	add	r1, pc, r1
   19008:	add	r0, pc, r0
   1900c:	add	r1, r1, #84	; 0x54
   19010:	add	r2, pc, r2
   19014:	bl	3870 <g_return_if_fail_warning@plt>
   19018:	mov	r0, #0
   1901c:	add	sp, sp, #8
   19020:	pop	{r4, r5, r6, r7, r8, pc}
   19024:	add	r6, r4, r8
   19028:	ldr	r3, [r6, #8]
   1902c:	cmp	r3, #0
   19030:	bne	190ac <main@@Base+0x14c74>
   19034:	ldr	r3, [r7, #140]	; 0x8c
   19038:	cmp	r3, #0
   1903c:	beq	19054 <main@@Base+0x14c1c>
   19040:	mov	r0, r4
   19044:	mov	r1, r5
   19048:	blx	r3
   1904c:	cmp	r0, #0
   19050:	beq	19018 <main@@Base+0x14be0>
   19054:	ldrb	r3, [r6, #13]
   19058:	cmp	r3, #0
   1905c:	beq	190a4 <main@@Base+0x14c6c>
   19060:	ldr	r7, [r6, #16]
   19064:	cmp	r7, #0
   19068:	beq	19104 <main@@Base+0x14ccc>
   1906c:	mov	r0, r4
   19070:	mov	r1, r7
   19074:	mov	r2, r5
   19078:	bl	182f0 <main@@Base+0x13eb8>
   1907c:	cmp	r0, #0
   19080:	beq	19018 <main@@Base+0x14be0>
   19084:	ldr	r3, [r6, #24]
   19088:	ldr	r3, [r3, #4]
   1908c:	cmp	r3, #0
   19090:	beq	190b8 <main@@Base+0x14c80>
   19094:	mov	r0, #1
   19098:	str	r0, [r6, #8]
   1909c:	add	sp, sp, #8
   190a0:	pop	{r4, r5, r6, r7, r8, pc}
   190a4:	ldr	r7, [r6, #16]
   190a8:	b	1906c <main@@Base+0x14c34>
   190ac:	mov	r0, #1
   190b0:	add	sp, sp, #8
   190b4:	pop	{r4, r5, r6, r7, r8, pc}
   190b8:	mov	ip, #3
   190bc:	str	r3, [sp]
   190c0:	mov	r1, r3
   190c4:	mov	r2, r3
   190c8:	str	ip, [sp, #4]
   190cc:	mov	r0, r3
   190d0:	bl	177c4 <main@@Base+0x1338c>
   190d4:	ldr	r2, [pc, #116]	; 19150 <main@@Base+0x14d18>
   190d8:	mov	r1, #128	; 0x80
   190dc:	ldr	r3, [r6, #16]
   190e0:	add	r2, pc, r2
   190e4:	mov	r4, r0
   190e8:	ldr	r0, [pc, #100]	; 19154 <main@@Base+0x14d1c>
   190ec:	add	r0, pc, r0
   190f0:	bl	3a38 <g_log@plt>
   190f4:	mov	r1, r4
   190f8:	ldr	r0, [r6, #24]
   190fc:	bl	426c <g_ptr_array_add@plt>
   19100:	b	19094 <main@@Base+0x14c5c>
   19104:	ldr	r8, [r4, r8]
   19108:	bl	23a78 <main@@Base+0x1f640>
   1910c:	mov	r1, r0
   19110:	mov	r0, r8
   19114:	bl	39d8 <g_type_check_instance_cast@plt>
   19118:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
   1911c:	mov	r2, r7
   19120:	ldrb	r1, [r6, #13]
   19124:	bl	42c0 <g_usb_device_get_string_descriptor@plt>
   19128:	mov	r7, r0
   1912c:	str	r0, [r6, #16]
   19130:	b	1906c <main@@Base+0x14c34>
   19134:	andeq	r6, r2, r0, ror #1
   19138:	andeq	pc, r0, r0, asr #27
   1913c:	andeq	fp, r0, r4, asr #29
   19140:	andeq	pc, r0, r4, lsr pc	; <UNPREDICTABLE>
   19144:	andeq	pc, r0, r0, lsl #27
   19148:	andeq	fp, r0, r4, lsl #29
   1914c:	andeq	sp, r0, r0, ror #28
   19150:	andeq	r0, r1, r4, lsr #4
   19154:	andeq	fp, r0, r0, lsr #27
   19158:	push	{r4, r5, r6, lr}
   1915c:	mov	r4, r0
   19160:	mov	r6, r1
   19164:	ldr	r5, [r0]
   19168:	bl	18f68 <main@@Base+0x14b30>
   1916c:	cmp	r0, #0
   19170:	popeq	{r4, r5, r6, pc}
   19174:	ldr	r5, [r5, #152]	; 0x98
   19178:	cmp	r5, #0
   1917c:	beq	19190 <main@@Base+0x14d58>
   19180:	mov	r0, r4
   19184:	mov	r1, r6
   19188:	blx	r5
   1918c:	pop	{r4, r5, r6, pc}
   19190:	bl	40a4 <fwupd_error_quark@plt>
   19194:	ldr	r3, [pc, #24]	; 191b4 <main@@Base+0x14d7c>
   19198:	mov	r2, #10
   1919c:	add	r3, pc, r3
   191a0:	mov	r1, r0
   191a4:	mov	r0, r6
   191a8:	bl	3ae0 <g_set_error_literal@plt>
   191ac:	mov	r0, r5
   191b0:	pop	{r4, r5, r6, pc}
   191b4:	andeq	r0, r1, ip, lsl #3
   191b8:	ldr	ip, [pc, #460]	; 1938c <main@@Base+0x14f54>
   191bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191c0:	mov	r6, r0
   191c4:	ldr	r0, [pc, #452]	; 19390 <main@@Base+0x14f58>
   191c8:	add	ip, pc, ip
   191cc:	mov	sl, r1
   191d0:	ldr	r1, [pc, #444]	; 19394 <main@@Base+0x14f5c>
   191d4:	mov	fp, r3
   191d8:	mov	r3, ip
   191dc:	ldr	r0, [ip, r0]
   191e0:	add	r1, pc, r1
   191e4:	sub	sp, sp, #68	; 0x44
   191e8:	mov	r7, r2
   191ec:	ldr	r5, [r1]
   191f0:	ldr	r3, [r0]
   191f4:	str	r0, [sp, #44]	; 0x2c
   191f8:	ldr	r4, [r6, r5]
   191fc:	str	r3, [sp, #60]	; 0x3c
   19200:	bl	23a78 <main@@Base+0x1f640>
   19204:	mov	r1, r0
   19208:	mov	r0, r4
   1920c:	bl	39d8 <g_type_check_instance_cast@plt>
   19210:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
   19214:	cmp	r7, #0
   19218:	mov	r3, #0
   1921c:	str	r3, [sp, #52]	; 0x34
   19220:	mov	r9, r0
   19224:	bne	19234 <main@@Base+0x14dfc>
   19228:	ldr	r0, [r6, r5]
   1922c:	bl	c44c <main@@Base+0x8014>
   19230:	mov	r7, r0
   19234:	mov	r0, r7
   19238:	bl	4248 <g_malloc0@plt>
   1923c:	mov	r4, r0
   19240:	ldr	r0, [r6, r5]
   19244:	bl	e7e0 <main@@Base+0xa3a8>
   19248:	mov	r8, r0
   1924c:	ldr	r0, [r6, r5]
   19250:	bl	d59c <main@@Base+0x9164>
   19254:	mov	ip, #0
   19258:	mov	r2, #1
   1925c:	str	r0, [sp, #24]
   19260:	mov	r1, ip
   19264:	mov	lr, #2
   19268:	str	r7, [sp, #16]
   1926c:	str	ip, [sp, #28]
   19270:	add	r7, sp, #52	; 0x34
   19274:	add	ip, sp, #56	; 0x38
   19278:	str	sl, [sp, #4]
   1927c:	mov	r0, r9
   19280:	str	r8, [sp, #8]
   19284:	mov	r3, r2
   19288:	str	r4, [sp, #12]
   1928c:	str	lr, [sp]
   19290:	str	ip, [sp, #20]
   19294:	str	r7, [sp, #32]
   19298:	bl	39c0 <g_usb_device_control_transfer@plt>
   1929c:	cmp	r0, #0
   192a0:	bne	1930c <main@@Base+0x14ed4>
   192a4:	ldr	r0, [r6, r5]
   192a8:	mov	r1, r7
   192ac:	bl	f3fc <main@@Base+0xafc4>
   192b0:	bl	40a4 <fwupd_error_quark@plt>
   192b4:	ldr	ip, [sp, #52]	; 0x34
   192b8:	mov	r1, r0
   192bc:	ldr	r3, [pc, #212]	; 19398 <main@@Base+0x14f60>
   192c0:	mov	r0, fp
   192c4:	mov	r2, #10
   192c8:	ldr	ip, [ip, #8]
   192cc:	add	r3, pc, r3
   192d0:	str	ip, [sp]
   192d4:	bl	4350 <g_set_error@plt>
   192d8:	mov	r4, #0
   192dc:	ldr	r0, [sp, #52]	; 0x34
   192e0:	cmp	r0, #0
   192e4:	beq	192ec <main@@Base+0x14eb4>
   192e8:	bl	38e8 <g_error_free@plt>
   192ec:	ldr	r1, [sp, #44]	; 0x2c
   192f0:	mov	r0, r4
   192f4:	ldr	r2, [sp, #60]	; 0x3c
   192f8:	ldr	r3, [r1]
   192fc:	cmp	r2, r3
   19300:	bne	19368 <main@@Base+0x14f30>
   19304:	add	sp, sp, #68	; 0x44
   19308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1930c:	ldr	r0, [pc, #136]	; 1939c <main@@Base+0x14f64>
   19310:	add	r0, pc, r0
   19314:	bl	3e64 <g_getenv@plt>
   19318:	cmp	r0, #0
   1931c:	ldr	r1, [sp, #56]	; 0x38
   19320:	beq	19358 <main@@Base+0x14f20>
   19324:	cmp	r1, #0
   19328:	beq	19358 <main@@Base+0x14f20>
   1932c:	ldr	r6, [pc, #108]	; 193a0 <main@@Base+0x14f68>
   19330:	mov	r5, #0
   19334:	add	r6, pc, r6
   19338:	mov	r0, r6
   1933c:	mov	r1, r5
   19340:	ldrb	r2, [r4, r5]
   19344:	bl	3fe4 <g_print@plt>
   19348:	ldr	r1, [sp, #56]	; 0x38
   1934c:	add	r5, r5, #1
   19350:	cmp	r1, r5
   19354:	bhi	19338 <main@@Base+0x14f00>
   19358:	mov	r0, r4
   1935c:	bl	3a98 <g_bytes_new_take@plt>
   19360:	mov	r4, r0
   19364:	b	192dc <main@@Base+0x14ea4>
   19368:	bl	3e4c <__stack_chk_fail@plt>
   1936c:	ldr	r3, [sp, #52]	; 0x34
   19370:	mov	r4, r0
   19374:	cmp	r3, #0
   19378:	beq	19384 <main@@Base+0x14f4c>
   1937c:	mov	r0, r3
   19380:	bl	38e8 <g_error_free@plt>
   19384:	mov	r0, r4
   19388:	bl	42f0 <_Unwind_Resume@plt>
   1938c:			; <UNDEFINED> instruction: 0x000259b8
   19390:	andeq	r0, r0, r0, lsr r4
   19394:	andeq	r5, r2, r0, ror lr
   19398:	andeq	r0, r1, r8, ror r0
   1939c:	andeq	r0, r1, ip, asr #32
   193a0:	andeq	r0, r1, ip, lsr r0
   193a4:	ldr	r3, [pc, #16]	; 193bc <main@@Base+0x14f84>
   193a8:	add	r3, pc, r3
   193ac:	ldr	r3, [r3]
   193b0:	add	r0, r0, r3
   193b4:	strb	r1, [r0, #13]
   193b8:	bx	lr
   193bc:	andeq	r5, r2, r8, lsr #25
   193c0:	ldr	r3, [pc, #16]	; 193d8 <main@@Base+0x14fa0>
   193c4:	add	r3, pc, r3
   193c8:	ldr	r3, [r3]
   193cc:	add	r0, r0, r3
   193d0:	strb	r1, [r0, #12]
   193d4:	bx	lr
   193d8:	andeq	r5, r2, ip, lsl #25
   193dc:	ldr	r3, [pc, #184]	; 1949c <main@@Base+0x15064>
   193e0:	push	{r4, r5, r6, lr}
   193e4:	add	r3, pc, r3
   193e8:	sub	sp, sp, #8
   193ec:	mov	r6, r0
   193f0:	ldr	r5, [r3]
   193f4:	mov	r4, r1
   193f8:	add	r5, r0, r5
   193fc:	ldr	r3, [r5, #32]
   19400:	cmp	r3, r1
   19404:	beq	1945c <main@@Base+0x15024>
   19408:	cmp	r3, #1
   1940c:	mov	r0, r1
   19410:	beq	1941c <main@@Base+0x14fe4>
   19414:	cmp	r1, #1
   19418:	bne	19464 <main@@Base+0x1502c>
   1941c:	bl	3c24 <fwupd_status_to_string@plt>
   19420:	ldr	r2, [pc, #120]	; 194a0 <main@@Base+0x15068>
   19424:	mov	r1, #128	; 0x80
   19428:	add	r2, pc, r2
   1942c:	mov	r3, r0
   19430:	ldr	r0, [pc, #108]	; 194a4 <main@@Base+0x1506c>
   19434:	add	r0, pc, r0
   19438:	bl	3a38 <g_log@plt>
   1943c:	ldr	r1, [pc, #100]	; 194a8 <main@@Base+0x15070>
   19440:	mov	r0, r6
   19444:	mov	r2, #0
   19448:	add	r1, pc, r1
   1944c:	mov	r3, r4
   19450:	ldr	r1, [r1, #12]
   19454:	bl	3b70 <g_signal_emit@plt>
   19458:	str	r4, [r5, #32]
   1945c:	add	sp, sp, #8
   19460:	pop	{r4, r5, r6, pc}
   19464:	bl	3c24 <fwupd_status_to_string@plt>
   19468:	mov	r4, r0
   1946c:	ldr	r0, [r5, #32]
   19470:	bl	3c24 <fwupd_status_to_string@plt>
   19474:	ldr	r2, [pc, #48]	; 194ac <main@@Base+0x15074>
   19478:	mov	r3, r4
   1947c:	mov	r1, #128	; 0x80
   19480:	add	r2, pc, r2
   19484:	str	r0, [sp]
   19488:	ldr	r0, [pc, #32]	; 194b0 <main@@Base+0x15078>
   1948c:	add	r0, pc, r0
   19490:	bl	3a38 <g_log@plt>
   19494:	add	sp, sp, #8
   19498:	pop	{r4, r5, r6, pc}
   1949c:	andeq	r5, r2, ip, ror #24
   194a0:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   194a4:	andeq	fp, r0, r8, asr sl
   194a8:	andeq	r5, r2, r8, lsl #24
   194ac:	andeq	pc, r0, ip, lsl #30
   194b0:	andeq	fp, r0, r0, lsl #20
   194b4:	ldr	ip, [pc, #732]	; 19798 <main@@Base+0x15360>
   194b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194bc:	mov	r7, r0
   194c0:	sub	sp, sp, #68	; 0x44
   194c4:	ldr	r0, [pc, #720]	; 1979c <main@@Base+0x15364>
   194c8:	add	ip, pc, ip
   194cc:	mov	sl, r3
   194d0:	str	r1, [sp, #40]	; 0x28
   194d4:	mov	r9, r2
   194d8:	ldr	r1, [pc, #704]	; 197a0 <main@@Base+0x15368>
   194dc:	mov	r3, ip
   194e0:	ldr	r0, [ip, r0]
   194e4:	add	r1, pc, r1
   194e8:	ldr	r3, [r0]
   194ec:	ldr	r8, [r1]
   194f0:	str	r0, [sp, #44]	; 0x2c
   194f4:	str	r3, [sp, #60]	; 0x3c
   194f8:	ldr	r4, [r7, r8]
   194fc:	bl	23a78 <main@@Base+0x1f640>
   19500:	mov	r1, r0
   19504:	mov	r0, r4
   19508:	bl	39d8 <g_type_check_instance_cast@plt>
   1950c:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
   19510:	mov	r3, #0
   19514:	str	r3, [sp, #52]	; 0x34
   19518:	mov	fp, r0
   1951c:	ldr	r0, [pc, #640]	; 197a4 <main@@Base+0x1536c>
   19520:	add	r0, pc, r0
   19524:	bl	3e64 <g_getenv@plt>
   19528:	cmp	r0, #0
   1952c:	beq	19580 <main@@Base+0x15148>
   19530:	add	r1, sp, #64	; 0x40
   19534:	mov	r3, #0
   19538:	mov	r0, r9
   1953c:	str	r3, [r1, #-8]!
   19540:	bl	4320 <g_bytes_get_data@plt>
   19544:	ldr	r3, [sp, #56]	; 0x38
   19548:	mov	r5, r0
   1954c:	cmp	r3, #0
   19550:	beq	19580 <main@@Base+0x15148>
   19554:	ldr	r6, [pc, #588]	; 197a8 <main@@Base+0x15370>
   19558:	mov	r4, #0
   1955c:	add	r6, pc, r6
   19560:	mov	r0, r6
   19564:	mov	r1, r4
   19568:	ldrb	r2, [r5, r4]
   1956c:	bl	3fe4 <g_print@plt>
   19570:	ldr	r3, [sp, #56]	; 0x38
   19574:	add	r4, r4, #1
   19578:	cmp	r3, r4
   1957c:	bhi	19560 <main@@Base+0x15128>
   19580:	ldr	r0, [r7, r8]
   19584:	bl	e7e0 <main@@Base+0xa3a8>
   19588:	mov	r5, r0
   1958c:	mov	r1, #0
   19590:	mov	r0, r9
   19594:	bl	4320 <g_bytes_get_data@plt>
   19598:	mov	r4, r0
   1959c:	mov	r0, r9
   195a0:	bl	3f24 <g_bytes_get_size@plt>
   195a4:	mov	r6, r0
   195a8:	ldr	r0, [r7, r8]
   195ac:	bl	d59c <main@@Base+0x9164>
   195b0:	ldr	r2, [sp, #40]	; 0x28
   195b4:	mov	ip, #1
   195b8:	str	r0, [sp, #24]
   195bc:	mov	r1, ip
   195c0:	str	r4, [sp, #12]
   195c4:	mov	r3, ip
   195c8:	stmib	sp, {r2, r5}
   195cc:	add	lr, sp, #56	; 0x38
   195d0:	mov	r2, ip
   195d4:	str	ip, [sp]
   195d8:	add	r4, sp, #52	; 0x34
   195dc:	mov	ip, #0
   195e0:	mov	r0, fp
   195e4:	str	r6, [sp, #16]
   195e8:	str	lr, [sp, #20]
   195ec:	str	ip, [sp, #28]
   195f0:	str	r4, [sp, #32]
   195f4:	bl	39c0 <g_usb_device_control_transfer@plt>
   195f8:	cmp	r0, #0
   195fc:	ldr	r0, [r7, r8]
   19600:	bne	19668 <main@@Base+0x15230>
   19604:	mov	r1, r4
   19608:	bl	f3fc <main@@Base+0xafc4>
   1960c:	bl	40a4 <fwupd_error_quark@plt>
   19610:	ldr	ip, [sp, #52]	; 0x34
   19614:	mov	r1, r0
   19618:	ldr	r3, [pc, #396]	; 197ac <main@@Base+0x15374>
   1961c:	mov	r0, sl
   19620:	mov	r2, #10
   19624:	ldr	ip, [ip, #8]
   19628:	add	r3, pc, r3
   1962c:	str	ip, [sp]
   19630:	bl	4350 <g_set_error@plt>
   19634:	mov	r4, #0
   19638:	ldr	r0, [sp, #52]	; 0x34
   1963c:	cmp	r0, #0
   19640:	beq	19648 <main@@Base+0x15210>
   19644:	bl	38e8 <g_error_free@plt>
   19648:	ldr	r1, [sp, #44]	; 0x2c
   1964c:	mov	r0, r4
   19650:	ldr	r2, [sp, #60]	; 0x3c
   19654:	ldr	r3, [r1]
   19658:	cmp	r2, r3
   1965c:	bne	19794 <main@@Base+0x1535c>
   19660:	add	sp, sp, #68	; 0x44
   19664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19668:	bl	c4d8 <main@@Base+0x80a0>
   1966c:	movw	r3, #282	; 0x11a
   19670:	cmp	r0, r3
   19674:	beq	19738 <main@@Base+0x15300>
   19678:	mov	r0, r9
   1967c:	bl	3f24 <g_bytes_get_size@plt>
   19680:	cmp	r0, #0
   19684:	bne	19698 <main@@Base+0x15260>
   19688:	ldr	r0, [r7, r8]
   1968c:	bl	c568 <main@@Base+0x8130>
   19690:	cmp	r0, #0
   19694:	bne	19750 <main@@Base+0x15318>
   19698:	ldr	r0, [r7, r8]
   1969c:	bl	c568 <main@@Base+0x8130>
   196a0:	cmp	r0, #0
   196a4:	beq	196e0 <main@@Base+0x152a8>
   196a8:	ldr	r0, [r7, r8]
   196ac:	bl	c568 <main@@Base+0x8130>
   196b0:	mov	r3, r0
   196b4:	ldr	r2, [pc, #244]	; 197b0 <main@@Base+0x15378>
   196b8:	ldr	r0, [pc, #244]	; 197b4 <main@@Base+0x1537c>
   196bc:	mov	r1, #128	; 0x80
   196c0:	add	r2, pc, r2
   196c4:	add	r0, pc, r0
   196c8:	bl	3a38 <g_log@plt>
   196cc:	ldr	r0, [r7, r8]
   196d0:	bl	c568 <main@@Base+0x8130>
   196d4:	mov	r3, #1000	; 0x3e8
   196d8:	mul	r0, r3, r0
   196dc:	bl	39f0 <g_usleep@plt>
   196e0:	ldr	r0, [r7, r8]
   196e4:	mov	r1, sl
   196e8:	bl	e448 <main@@Base+0xa010>
   196ec:	cmp	r0, #0
   196f0:	beq	19634 <main@@Base+0x151fc>
   196f4:	mov	r0, r9
   196f8:	bl	3f24 <g_bytes_get_size@plt>
   196fc:	ldr	r3, [sp, #56]	; 0x38
   19700:	cmp	r0, r3
   19704:	beq	1978c <main@@Base+0x15354>
   19708:	ldr	r1, [pc, #168]	; 197b8 <main@@Base+0x15380>
   1970c:	movw	r2, #734	; 0x2de
   19710:	ldr	r3, [pc, #164]	; 197bc <main@@Base+0x15384>
   19714:	add	r1, pc, r1
   19718:	ldr	r0, [pc, #160]	; 197c0 <main@@Base+0x15388>
   1971c:	str	r1, [sp]
   19720:	add	r3, pc, r3
   19724:	ldr	r1, [pc, #152]	; 197c4 <main@@Base+0x1538c>
   19728:	add	r0, pc, r0
   1972c:	add	r3, r3, #104	; 0x68
   19730:	add	r1, pc, r1
   19734:	bl	42e4 <g_assertion_message_expr@plt>
   19738:	ldr	r0, [r7, r8]
   1973c:	mov	r1, sl
   19740:	bl	e448 <main@@Base+0xa010>
   19744:	cmp	r0, #0
   19748:	beq	19634 <main@@Base+0x151fc>
   1974c:	b	19678 <main@@Base+0x15240>
   19750:	mov	r0, r7
   19754:	mov	r1, #1
   19758:	bl	193dc <main@@Base+0x14fa4>
   1975c:	mov	r0, r7
   19760:	mov	r1, #12
   19764:	bl	193dc <main@@Base+0x14fa4>
   19768:	b	19698 <main@@Base+0x15260>
   1976c:	ldr	r3, [sp, #52]	; 0x34
   19770:	mov	r4, r0
   19774:	cmp	r3, #0
   19778:	beq	19784 <main@@Base+0x1534c>
   1977c:	mov	r0, r3
   19780:	bl	38e8 <g_error_free@plt>
   19784:	mov	r0, r4
   19788:	bl	42f0 <_Unwind_Resume@plt>
   1978c:	mov	r4, #1
   19790:	b	19638 <main@@Base+0x15200>
   19794:	bl	3e4c <__stack_chk_fail@plt>
   19798:			; <UNDEFINED> instruction: 0x000256b8
   1979c:	andeq	r0, r0, r0, lsr r4
   197a0:	andeq	r5, r2, ip, ror #22
   197a4:	andeq	pc, r0, ip, lsr lr	; <UNPREDICTABLE>
   197a8:	andeq	pc, r0, r8, ror lr	; <UNPREDICTABLE>
   197ac:	andeq	pc, r0, r8, asr #27
   197b0:	andeq	pc, r0, ip, asr #26
   197b4:	andeq	fp, r0, r8, asr #15
   197b8:	andeq	pc, r0, ip, lsr #26
   197bc:	andeq	pc, r0, r4, ror #12
   197c0:	andeq	fp, r0, r4, ror #14
   197c4:	strdeq	pc, [r0], -r4
   197c8:	ldr	r3, [pc, #12]	; 197dc <main@@Base+0x153a4>
   197cc:	add	r3, pc, r3
   197d0:	ldr	r3, [r3]
   197d4:	ldr	r0, [r0, r3]
   197d8:	bx	lr
   197dc:	andeq	r5, r2, r4, lsl #17
   197e0:	push	{r4, r5, r6, r7, lr}
   197e4:	mov	r7, r0
   197e8:	ldr	r6, [pc, #100]	; 19854 <main@@Base+0x1541c>
   197ec:	sub	sp, sp, #12
   197f0:	mov	r4, r1
   197f4:	add	r6, pc, r6
   197f8:	ldr	r5, [r6]
   197fc:	add	r5, r0, r5
   19800:	ldr	r3, [r5, #28]
   19804:	cmp	r3, r1
   19808:	beq	1984c <main@@Base+0x15414>
   1980c:	ldr	r0, [r5, #32]
   19810:	bl	3c24 <fwupd_status_to_string@plt>
   19814:	ldr	r2, [pc, #60]	; 19858 <main@@Base+0x15420>
   19818:	mov	r1, #128	; 0x80
   1981c:	mov	r3, r4
   19820:	add	r2, pc, r2
   19824:	str	r0, [sp]
   19828:	ldr	r0, [pc, #44]	; 1985c <main@@Base+0x15424>
   1982c:	add	r0, pc, r0
   19830:	bl	3a38 <g_log@plt>
   19834:	mov	r0, r7
   19838:	ldr	r1, [r6, #8]
   1983c:	mov	r2, #0
   19840:	mov	r3, r4
   19844:	bl	3b70 <g_signal_emit@plt>
   19848:	str	r4, [r5, #28]
   1984c:	add	sp, sp, #12
   19850:	pop	{r4, r5, r6, r7, pc}
   19854:	andeq	r5, r2, ip, asr r8
   19858:	andeq	pc, r0, ip, asr #24
   1985c:	andeq	fp, r0, r0, ror #12
   19860:	cmp	r2, #0
   19864:	mov	r3, r1
   19868:	push	{r4, lr}
   1986c:	mov	r4, r0
   19870:	beq	19894 <main@@Base+0x1545c>
   19874:	mov	r0, #100	; 0x64
   19878:	mov	r1, r2
   1987c:	mul	r0, r0, r3
   19880:	bl	24ba8 <fu_usb_device_open@@Base+0xc64>
   19884:	cmp	r0, #99	; 0x63
   19888:	mov	r1, r0
   1988c:	bls	198b8 <main@@Base+0x15480>
   19890:	pop	{r4, pc}
   19894:	ldr	r1, [pc, #40]	; 198c4 <main@@Base+0x1548c>
   19898:	ldr	r0, [pc, #40]	; 198c8 <main@@Base+0x15490>
   1989c:	ldr	r2, [pc, #40]	; 198cc <main@@Base+0x15494>
   198a0:	add	r1, pc, r1
   198a4:	add	r0, pc, r0
   198a8:	add	r1, r1, #132	; 0x84
   198ac:	add	r2, pc, r2
   198b0:	pop	{r4, lr}
   198b4:	b	3870 <g_return_if_fail_warning@plt>
   198b8:	mov	r0, r4
   198bc:	pop	{r4, lr}
   198c0:	b	197e0 <main@@Base+0x153a8>
   198c4:	andeq	pc, r0, r4, ror #9
   198c8:	andeq	fp, r0, r8, ror #11
   198cc:	andeq	pc, r0, r0, ror #23
   198d0:	ldr	ip, [r0]
   198d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198d8:	sub	sp, sp, #28
   198dc:	ldr	ip, [ip, #156]	; 0x9c
   198e0:	mov	r8, r0
   198e4:	ldr	r4, [pc, #556]	; 19b18 <main@@Base+0x156e0>
   198e8:	mov	lr, r3
   198ec:	cmp	ip, #0
   198f0:	str	r2, [sp, #16]
   198f4:	add	r4, pc, r4
   198f8:	beq	19918 <main@@Base+0x154e0>
   198fc:	ldr	r5, [sp, #64]	; 0x40
   19900:	str	r5, [sp]
   19904:	blx	ip
   19908:	mov	r4, r0
   1990c:	mov	r0, r4
   19910:	add	sp, sp, #28
   19914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19918:	ldr	r3, [pc, #508]	; 19b1c <main@@Base+0x156e4>
   1991c:	ldr	r5, [sp, #16]
   19920:	add	r3, pc, r3
   19924:	cmp	r5, #0
   19928:	ldr	r3, [r3]
   1992c:	moveq	r5, lr
   19930:	str	r5, [sp, #20]
   19934:	ldr	r0, [r0, r3]
   19938:	bl	c44c <main@@Base+0x8014>
   1993c:	mov	r1, #9
   19940:	mov	fp, r0
   19944:	mov	r0, r8
   19948:	bl	193dc <main@@Base+0x14fa4>
   1994c:	ldr	r3, [pc, #460]	; 19b20 <main@@Base+0x156e8>
   19950:	ldr	r0, [r4, r3]
   19954:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   19958:	ldr	sl, [pc, #452]	; 19b24 <main@@Base+0x156ec>
   1995c:	mov	r4, #0
   19960:	ldr	r5, [pc, #448]	; 19b28 <main@@Base+0x156f0>
   19964:	mov	r9, r0
   19968:	add	sl, pc, sl
   1996c:	mov	r6, r4
   19970:	add	r5, pc, r5
   19974:	str	r5, [sp, #12]
   19978:	b	19994 <main@@Base+0x1555c>
   1997c:	cmp	r5, fp
   19980:	bcc	199fc <main@@Base+0x155c4>
   19984:	add	r4, r4, #1
   19988:	movw	lr, #65535	; 0xffff
   1998c:	cmp	r4, lr
   19990:	beq	199fc <main@@Base+0x155c4>
   19994:	mov	r0, r8
   19998:	uxth	r1, r4
   1999c:	mov	r2, #0
   199a0:	ldr	r3, [sp, #64]	; 0x40
   199a4:	bl	191b8 <main@@Base+0x14d80>
   199a8:	subs	r7, r0, #0
   199ac:	beq	19a38 <main@@Base+0x15600>
   199b0:	bl	3f24 <g_bytes_get_size@plt>
   199b4:	mov	r5, r0
   199b8:	mov	r1, #128	; 0x80
   199bc:	mov	r0, sl
   199c0:	str	r5, [sp]
   199c4:	ldr	r2, [sp, #12]
   199c8:	mov	r3, r4
   199cc:	add	r6, r6, r5
   199d0:	bl	3a38 <g_log@plt>
   199d4:	mov	r1, r7
   199d8:	mov	r0, r9
   199dc:	bl	426c <g_ptr_array_add@plt>
   199e0:	cmp	r5, #0
   199e4:	beq	1997c <main@@Base+0x15544>
   199e8:	mov	r0, r8
   199ec:	mov	r1, r6
   199f0:	ldr	r2, [sp, #20]
   199f4:	bl	19860 <main@@Base+0x15428>
   199f8:	b	1997c <main@@Base+0x15544>
   199fc:	ldr	r5, [sp, #16]
   19a00:	cmp	r5, #0
   19a04:	beq	19a6c <main@@Base+0x15634>
   19a08:	ldr	r5, [sp, #16]
   19a0c:	cmp	r5, r6
   19a10:	beq	19a6c <main@@Base+0x15634>
   19a14:	bl	40a4 <fwupd_error_quark@plt>
   19a18:	ldr	r3, [pc, #268]	; 19b2c <main@@Base+0x156f4>
   19a1c:	mov	r1, r0
   19a20:	str	r6, [sp]
   19a24:	mov	r2, #7
   19a28:	ldr	r0, [sp, #64]	; 0x40
   19a2c:	add	r3, pc, r3
   19a30:	str	r5, [sp, #4]
   19a34:	bl	4350 <g_set_error@plt>
   19a38:	mov	r5, #0
   19a3c:	mov	r4, r5
   19a40:	cmp	r9, #0
   19a44:	beq	19a50 <main@@Base+0x15618>
   19a48:	mov	r0, r9
   19a4c:	bl	4224 <g_ptr_array_unref@plt>
   19a50:	cmp	r5, #0
   19a54:	beq	1990c <main@@Base+0x154d4>
   19a58:	mov	r0, r5
   19a5c:	bl	414c <g_bytes_unref@plt>
   19a60:	mov	r0, r4
   19a64:	add	sp, sp, #28
   19a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a6c:	mov	r0, r8
   19a70:	mov	r1, #100	; 0x64
   19a74:	bl	197e0 <main@@Base+0x153a8>
   19a78:	mov	r0, r8
   19a7c:	mov	r1, #1
   19a80:	bl	193dc <main@@Base+0x14fa4>
   19a84:	mov	r0, r9
   19a88:	bl	bc10 <main@@Base+0x77d8>
   19a8c:	mov	r5, r0
   19a90:	bl	109bc <main@@Base+0xc584>
   19a94:	mov	r1, r5
   19a98:	mov	r4, r0
   19a9c:	bl	10ae8 <main@@Base+0xc6b0>
   19aa0:	b	19a40 <main@@Base+0x15608>
   19aa4:	mov	r4, r0
   19aa8:	cmp	r5, #0
   19aac:	beq	19ab8 <main@@Base+0x15680>
   19ab0:	mov	r0, r5
   19ab4:	bl	414c <g_bytes_unref@plt>
   19ab8:	mov	r0, r4
   19abc:	bl	42f0 <_Unwind_Resume@plt>
   19ac0:	mov	r4, r0
   19ac4:	mov	r5, #0
   19ac8:	cmp	r9, #0
   19acc:	beq	19aa8 <main@@Base+0x15670>
   19ad0:	mov	r0, r9
   19ad4:	bl	4224 <g_ptr_array_unref@plt>
   19ad8:	b	19aa8 <main@@Base+0x15670>
   19adc:	mov	r4, r0
   19ae0:	mov	r5, #0
   19ae4:	b	19aa8 <main@@Base+0x15670>
   19ae8:	b	19adc <main@@Base+0x156a4>
   19aec:	b	19ac0 <main@@Base+0x15688>
   19af0:	b	19ac0 <main@@Base+0x15688>
   19af4:	b	19ac0 <main@@Base+0x15688>
   19af8:	b	19ac0 <main@@Base+0x15688>
   19afc:	b	19ac0 <main@@Base+0x15688>
   19b00:	b	19ac0 <main@@Base+0x15688>
   19b04:	mov	r4, r0
   19b08:	b	19ac8 <main@@Base+0x15690>
   19b0c:	b	19ac0 <main@@Base+0x15688>
   19b10:	b	19ac0 <main@@Base+0x15688>
   19b14:	b	19ac0 <main@@Base+0x15688>
   19b18:	andeq	r5, r2, ip, lsl #5
   19b1c:	andeq	r5, r2, r0, lsr r7
   19b20:	andeq	r0, r0, r8, asr r4
   19b24:	andeq	fp, r0, r4, lsr #10
   19b28:	andeq	pc, r0, r8, lsr #22
   19b2c:	andeq	pc, r0, r8, lsl #21
   19b30:	push	{r3, r4, r5, r6, r7, lr}
   19b34:	mov	r4, r0
   19b38:	ldr	r3, [pc, #68]	; 19b84 <main@@Base+0x1574c>
   19b3c:	mov	r6, r1
   19b40:	ldr	r5, [r0]
   19b44:	add	r3, pc, r3
   19b48:	ldr	r7, [r3]
   19b4c:	bl	18f68 <main@@Base+0x14b30>
   19b50:	cmp	r0, #0
   19b54:	popeq	{r3, r4, r5, r6, r7, pc}
   19b58:	ldr	r3, [r5, #144]	; 0x90
   19b5c:	cmp	r3, #0
   19b60:	beq	19b74 <main@@Base+0x1573c>
   19b64:	mov	r0, r4
   19b68:	mov	r1, r6
   19b6c:	blx	r3
   19b70:	pop	{r3, r4, r5, r6, r7, pc}
   19b74:	ldr	r0, [r4, r7]
   19b78:	mov	r1, r6
   19b7c:	pop	{r3, r4, r5, r6, r7, lr}
   19b80:	b	e870 <main@@Base+0xa438>
   19b84:	andeq	r5, r2, ip, lsl #10
   19b88:	ldr	r3, [pc, #784]	; 19ea0 <main@@Base+0x15a68>
   19b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b90:	add	r3, pc, r3
   19b94:	sub	sp, sp, #36	; 0x24
   19b98:	mov	fp, r0
   19b9c:	ldr	r4, [r3]
   19ba0:	str	r2, [sp, #12]
   19ba4:	bl	17f2c <main@@Base+0x13af4>
   19ba8:	cmp	fp, #0
   19bac:	add	r2, fp, r4
   19bb0:	str	r2, [sp, #8]
   19bb4:	beq	19be4 <main@@Base+0x157ac>
   19bb8:	ldr	r3, [fp]
   19bbc:	cmp	r3, #0
   19bc0:	beq	19bd0 <main@@Base+0x15798>
   19bc4:	ldr	r3, [r3]
   19bc8:	cmp	r0, r3
   19bcc:	beq	19c14 <main@@Base+0x157dc>
   19bd0:	mov	r1, r0
   19bd4:	mov	r0, fp
   19bd8:	bl	3fcc <g_type_check_instance_is_a@plt>
   19bdc:	cmp	r0, #0
   19be0:	bne	19c14 <main@@Base+0x157dc>
   19be4:	ldr	r1, [pc, #696]	; 19ea4 <main@@Base+0x15a6c>
   19be8:	ldr	r0, [pc, #696]	; 19ea8 <main@@Base+0x15a70>
   19bec:	ldr	r2, [pc, #696]	; 19eac <main@@Base+0x15a74>
   19bf0:	add	r1, pc, r1
   19bf4:	add	r0, pc, r0
   19bf8:	add	r1, r1, #160	; 0xa0
   19bfc:	add	r2, pc, r2
   19c00:	bl	3870 <g_return_if_fail_warning@plt>
   19c04:	mov	r4, #0
   19c08:	mov	r0, r4
   19c0c:	add	sp, sp, #36	; 0x24
   19c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c14:	ldr	r3, [sp, #12]
   19c18:	cmp	r3, #0
   19c1c:	beq	19c54 <main@@Base+0x1581c>
   19c20:	ldr	r2, [sp, #12]
   19c24:	ldr	r3, [r2]
   19c28:	cmp	r3, #0
   19c2c:	beq	19c54 <main@@Base+0x1581c>
   19c30:	ldr	r1, [pc, #632]	; 19eb0 <main@@Base+0x15a78>
   19c34:	ldr	r0, [pc, #632]	; 19eb4 <main@@Base+0x15a7c>
   19c38:	ldr	r2, [pc, #632]	; 19eb8 <main@@Base+0x15a80>
   19c3c:	add	r1, pc, r1
   19c40:	add	r0, pc, r0
   19c44:	add	r1, r1, #160	; 0xa0
   19c48:	add	r2, pc, r2
   19c4c:	bl	3870 <g_return_if_fail_warning@plt>
   19c50:	b	19c04 <main@@Base+0x157cc>
   19c54:	mov	r0, fp
   19c58:	ldr	r1, [sp, #12]
   19c5c:	bl	18f68 <main@@Base+0x14b30>
   19c60:	cmp	r0, #0
   19c64:	beq	19c04 <main@@Base+0x157cc>
   19c68:	ldr	r0, [fp, r4]
   19c6c:	bl	c728 <main@@Base+0x82f0>
   19c70:	cmp	r0, #0
   19c74:	bne	19c98 <main@@Base+0x15860>
   19c78:	bl	40a4 <fwupd_error_quark@plt>
   19c7c:	ldr	r3, [pc, #568]	; 19ebc <main@@Base+0x15a84>
   19c80:	mov	r2, #10
   19c84:	add	r3, pc, r3
   19c88:	mov	r1, r0
   19c8c:	ldr	r0, [sp, #12]
   19c90:	bl	3ae0 <g_set_error_literal@plt>
   19c94:	b	19c04 <main@@Base+0x157cc>
   19c98:	mov	r0, fp
   19c9c:	ldr	r1, [sp, #12]
   19ca0:	bl	1806c <main@@Base+0x13c34>
   19ca4:	cmp	r0, #0
   19ca8:	beq	19c04 <main@@Base+0x157cc>
   19cac:	ldr	r2, [sp, #8]
   19cb0:	ldr	r3, [r2, #24]
   19cb4:	ldr	r3, [r3, #4]
   19cb8:	cmp	r3, #0
   19cbc:	beq	19da4 <main@@Base+0x1596c>
   19cc0:	bl	15ad4 <main@@Base+0x1169c>
   19cc4:	ldr	r3, [sp, #8]
   19cc8:	ldr	r1, [r3, #16]
   19ccc:	str	r0, [sp, #16]
   19cd0:	bl	16040 <main@@Base+0x11c08>
   19cd4:	ldr	r2, [sp, #8]
   19cd8:	ldr	r0, [sp, #16]
   19cdc:	ldrb	r1, [r2, #12]
   19ce0:	bl	15fb0 <main@@Base+0x11b78>
   19ce4:	ldr	r2, [sp, #8]
   19ce8:	ldr	r3, [r2, #24]
   19cec:	ldr	r2, [r3, #4]
   19cf0:	cmp	r2, #0
   19cf4:	beq	19e40 <main@@Base+0x15a08>
   19cf8:	ldr	r2, [pc, #448]	; 19ec0 <main@@Base+0x15a88>
   19cfc:	mov	r8, #0
   19d00:	mvn	r4, #0
   19d04:	add	r2, pc, r2
   19d08:	str	r2, [sp, #20]
   19d0c:	ldr	r2, [pc, #432]	; 19ec4 <main@@Base+0x15a8c>
   19d10:	add	r2, pc, r2
   19d14:	str	r2, [sp, #24]
   19d18:	ldr	r2, [pc, #424]	; 19ec8 <main@@Base+0x15a90>
   19d1c:	add	r2, pc, r2
   19d20:	str	r2, [sp, #28]
   19d24:	ldr	r3, [r3]
   19d28:	ldr	sl, [r3, r8, lsl #2]
   19d2c:	mov	r0, sl
   19d30:	bl	179c4 <main@@Base+0x1358c>
   19d34:	cmp	r0, r4
   19d38:	mov	r6, r0
   19d3c:	beq	19e28 <main@@Base+0x159f0>
   19d40:	ldr	r3, [sp, #20]
   19d44:	ldr	r7, [r3]
   19d48:	add	r7, fp, r7
   19d4c:	ldr	r3, [r7, #24]
   19d50:	ldr	r9, [r3, #4]
   19d54:	cmp	r9, #0
   19d58:	beq	19dc4 <main@@Base+0x1598c>
   19d5c:	mov	r9, #0
   19d60:	mov	r4, r9
   19d64:	b	19d7c <main@@Base+0x15944>
   19d68:	ldr	r3, [r7, #24]
   19d6c:	add	r4, r4, #1
   19d70:	ldr	r2, [r3, #4]
   19d74:	cmp	r4, r2
   19d78:	bcs	19dc4 <main@@Base+0x1598c>
   19d7c:	ldr	r3, [r3]
   19d80:	ldr	r5, [r3, r4, lsl #2]
   19d84:	mov	r0, r5
   19d88:	bl	179c4 <main@@Base+0x1358c>
   19d8c:	cmp	r6, r0
   19d90:	bne	19d68 <main@@Base+0x15930>
   19d94:	mov	r0, r5
   19d98:	bl	178a4 <main@@Base+0x1346c>
   19d9c:	add	r9, r9, r0
   19da0:	b	19d68 <main@@Base+0x15930>
   19da4:	bl	40a4 <fwupd_error_quark@plt>
   19da8:	ldr	r3, [pc, #284]	; 19ecc <main@@Base+0x15a94>
   19dac:	mov	r2, #10
   19db0:	add	r3, pc, r3
   19db4:	mov	r1, r0
   19db8:	ldr	r0, [sp, #12]
   19dbc:	bl	3ae0 <g_set_error_literal@plt>
   19dc0:	b	19c04 <main@@Base+0x157cc>
   19dc4:	mov	r0, sl
   19dc8:	bl	1781c <main@@Base+0x133e4>
   19dcc:	mov	r3, r0
   19dd0:	str	r9, [sp]
   19dd4:	ldr	r0, [sp, #24]
   19dd8:	mov	r1, #128	; 0x80
   19ddc:	ldr	r2, [sp, #28]
   19de0:	bl	3a38 <g_log@plt>
   19de4:	mov	r0, sl
   19de8:	bl	1781c <main@@Base+0x133e4>
   19dec:	ldr	r2, [sp, #12]
   19df0:	mov	r1, r0
   19df4:	mov	r3, r9
   19df8:	mov	r0, fp
   19dfc:	str	r2, [sp]
   19e00:	mov	r2, #0
   19e04:	bl	198d0 <main@@Base+0x15498>
   19e08:	subs	r4, r0, #0
   19e0c:	beq	19e4c <main@@Base+0x15a14>
   19e10:	ldr	r0, [sp, #16]
   19e14:	mov	r1, r4
   19e18:	bl	15ea8 <main@@Base+0x11a70>
   19e1c:	mov	r0, r4
   19e20:	bl	4110 <g_object_unref@plt>
   19e24:	mov	r4, r6
   19e28:	ldr	r2, [sp, #8]
   19e2c:	add	r8, r8, #1
   19e30:	ldr	r3, [r2, #24]
   19e34:	ldr	r2, [r3, #4]
   19e38:	cmp	r2, r8
   19e3c:	bhi	19d24 <main@@Base+0x158ec>
   19e40:	ldr	r0, [sp, #16]
   19e44:	bl	381c <g_object_ref@plt>
   19e48:	mov	r4, r0
   19e4c:	ldr	r3, [sp, #16]
   19e50:	cmp	r3, #0
   19e54:	beq	19c08 <main@@Base+0x157d0>
   19e58:	mov	r0, r3
   19e5c:	bl	4110 <g_object_unref@plt>
   19e60:	mov	r0, r4
   19e64:	add	sp, sp, #36	; 0x24
   19e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e6c:	mov	r5, r0
   19e70:	ldr	r2, [sp, #16]
   19e74:	cmp	r2, #0
   19e78:	beq	19e84 <main@@Base+0x15a4c>
   19e7c:	mov	r0, r2
   19e80:	bl	4110 <g_object_unref@plt>
   19e84:	mov	r0, r5
   19e88:	bl	42f0 <_Unwind_Resume@plt>
   19e8c:	mov	r5, r0
   19e90:	mov	r0, r4
   19e94:	bl	4110 <g_object_unref@plt>
   19e98:	b	19e70 <main@@Base+0x15a38>
   19e9c:	b	19e6c <main@@Base+0x15a34>
   19ea0:	andeq	r5, r2, r0, asr #9
   19ea4:	muleq	r0, r4, r1
   19ea8:	muleq	r0, r8, r2
   19eac:	andeq	pc, r0, r8, lsl #6
   19eb0:	andeq	pc, r0, r8, asr #2
   19eb4:	andeq	fp, r0, ip, asr #4
   19eb8:	andeq	sp, r0, r8, lsr #4
   19ebc:	andeq	pc, r0, r4, asr r8	; <UNPREDICTABLE>
   19ec0:	andeq	r5, r2, ip, asr #6
   19ec4:	andeq	fp, r0, ip, ror r1
   19ec8:	strdeq	pc, [r0], -r8
   19ecc:	andeq	pc, r0, r4, asr #14
   19ed0:	ldr	ip, [pc, #1700]	; 1a57c <main@@Base+0x16144>
   19ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19ed8:	mov	r5, r0
   19edc:	ldr	r0, [pc, #1692]	; 1a580 <main@@Base+0x16148>
   19ee0:	sub	sp, sp, #92	; 0x5c
   19ee4:	add	ip, pc, ip
   19ee8:	mov	fp, r1
   19eec:	str	r2, [sp, #20]
   19ef0:	mov	r7, r3
   19ef4:	ldr	r0, [ip, r0]
   19ef8:	mov	r3, ip
   19efc:	ldr	r1, [pc, #1664]	; 1a584 <main@@Base+0x1614c>
   19f00:	ldr	r3, [r0]
   19f04:	add	r1, pc, r1
   19f08:	str	r0, [sp, #12]
   19f0c:	ldr	r4, [r1]
   19f10:	str	r3, [sp, #84]	; 0x54
   19f14:	bl	17f2c <main@@Base+0x13af4>
   19f18:	cmp	r5, #0
   19f1c:	beq	19f4c <main@@Base+0x15b14>
   19f20:	ldr	r3, [r5]
   19f24:	cmp	r3, #0
   19f28:	beq	19f38 <main@@Base+0x15b00>
   19f2c:	ldr	r3, [r3]
   19f30:	cmp	r0, r3
   19f34:	beq	19f8c <main@@Base+0x15b54>
   19f38:	mov	r1, r0
   19f3c:	mov	r0, r5
   19f40:	bl	3fcc <g_type_check_instance_is_a@plt>
   19f44:	cmp	r0, #0
   19f48:	bne	19f8c <main@@Base+0x15b54>
   19f4c:	ldr	r1, [pc, #1588]	; 1a588 <main@@Base+0x16150>
   19f50:	ldr	r0, [pc, #1588]	; 1a58c <main@@Base+0x16154>
   19f54:	ldr	r2, [pc, #1588]	; 1a590 <main@@Base+0x16158>
   19f58:	add	r1, pc, r1
   19f5c:	add	r0, pc, r0
   19f60:	add	r1, r1, #180	; 0xb4
   19f64:	add	r2, pc, r2
   19f68:	bl	3870 <g_return_if_fail_warning@plt>
   19f6c:	mov	r0, #0
   19f70:	ldr	r1, [sp, #12]
   19f74:	ldr	r2, [sp, #84]	; 0x54
   19f78:	ldr	r3, [r1]
   19f7c:	cmp	r2, r3
   19f80:	bne	1a520 <main@@Base+0x160e8>
   19f84:	add	sp, sp, #92	; 0x5c
   19f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f8c:	bl	159d0 <main@@Base+0x11598>
   19f90:	cmp	fp, #0
   19f94:	mov	r1, r0
   19f98:	beq	19fc4 <main@@Base+0x15b8c>
   19f9c:	ldr	r3, [fp]
   19fa0:	cmp	r3, #0
   19fa4:	beq	19fb4 <main@@Base+0x15b7c>
   19fa8:	ldr	r3, [r3]
   19fac:	cmp	r1, r3
   19fb0:	beq	19fec <main@@Base+0x15bb4>
   19fb4:	mov	r0, fp
   19fb8:	bl	3fcc <g_type_check_instance_is_a@plt>
   19fbc:	cmp	r0, #0
   19fc0:	bne	19fec <main@@Base+0x15bb4>
   19fc4:	ldr	r1, [pc, #1480]	; 1a594 <main@@Base+0x1615c>
   19fc8:	ldr	r0, [pc, #1480]	; 1a598 <main@@Base+0x16160>
   19fcc:	ldr	r2, [pc, #1480]	; 1a59c <main@@Base+0x16164>
   19fd0:	add	r1, pc, r1
   19fd4:	add	r0, pc, r0
   19fd8:	add	r1, r1, #180	; 0xb4
   19fdc:	add	r2, pc, r2
   19fe0:	bl	3870 <g_return_if_fail_warning@plt>
   19fe4:	mov	r0, #0
   19fe8:	b	19f70 <main@@Base+0x15b38>
   19fec:	cmp	r7, #0
   19ff0:	beq	1a028 <main@@Base+0x15bf0>
   19ff4:	ldr	r3, [r7]
   19ff8:	cmp	r3, #0
   19ffc:	beq	1a028 <main@@Base+0x15bf0>
   1a000:	ldr	r1, [pc, #1432]	; 1a5a0 <main@@Base+0x16168>
   1a004:	ldr	r0, [pc, #1432]	; 1a5a4 <main@@Base+0x1616c>
   1a008:	ldr	r2, [pc, #1432]	; 1a5a8 <main@@Base+0x16170>
   1a00c:	add	r1, pc, r1
   1a010:	add	r0, pc, r0
   1a014:	add	r1, r1, #180	; 0xb4
   1a018:	add	r2, pc, r2
   1a01c:	bl	3870 <g_return_if_fail_warning@plt>
   1a020:	mov	r0, #0
   1a024:	b	19f70 <main@@Base+0x15b38>
   1a028:	mov	r0, r5
   1a02c:	mov	r1, r7
   1a030:	bl	18f68 <main@@Base+0x14b30>
   1a034:	cmp	r0, #0
   1a038:	beq	19f6c <main@@Base+0x15b34>
   1a03c:	ldr	r0, [r5, r4]
   1a040:	add	r4, r5, r4
   1a044:	str	r4, [sp, #64]	; 0x40
   1a048:	bl	c7b8 <main@@Base+0x8380>
   1a04c:	subs	r4, r0, #0
   1a050:	beq	1a318 <main@@Base+0x15ee0>
   1a054:	mov	r0, r5
   1a058:	mov	r1, r7
   1a05c:	bl	1806c <main@@Base+0x13c34>
   1a060:	cmp	r0, #0
   1a064:	beq	19f6c <main@@Base+0x15b34>
   1a068:	mov	r0, fp
   1a06c:	bl	15ae8 <main@@Base+0x116b0>
   1a070:	ldr	r4, [r0, #4]
   1a074:	str	r0, [sp, #60]	; 0x3c
   1a078:	cmp	r4, #0
   1a07c:	beq	1a4c8 <main@@Base+0x16090>
   1a080:	ldr	r2, [sp, #20]
   1a084:	ldr	r1, [pc, #1312]	; 1a5ac <main@@Base+0x16174>
   1a088:	and	r2, r2, #128	; 0x80
   1a08c:	ldr	r3, [pc, #1308]	; 1a5b0 <main@@Base+0x16178>
   1a090:	str	r2, [sp, #44]	; 0x2c
   1a094:	add	r1, pc, r1
   1a098:	ldr	r2, [pc, #1300]	; 1a5b4 <main@@Base+0x1617c>
   1a09c:	add	r3, pc, r3
   1a0a0:	str	r1, [sp, #40]	; 0x28
   1a0a4:	mov	r1, #0
   1a0a8:	add	r2, pc, r2
   1a0ac:	str	r3, [sp, #48]	; 0x30
   1a0b0:	str	r1, [sp, #24]
   1a0b4:	str	r2, [sp, #68]	; 0x44
   1a0b8:	ldr	r3, [pc, #1272]	; 1a5b8 <main@@Base+0x16180>
   1a0bc:	ldr	r1, [pc, #1272]	; 1a5bc <main@@Base+0x16184>
   1a0c0:	ldr	r2, [pc, #1272]	; 1a5c0 <main@@Base+0x16188>
   1a0c4:	add	r3, pc, r3
   1a0c8:	add	r1, pc, r1
   1a0cc:	str	r3, [sp, #52]	; 0x34
   1a0d0:	add	r2, pc, r2
   1a0d4:	str	r1, [sp, #28]
   1a0d8:	str	r2, [sp, #32]
   1a0dc:	ldr	r3, [sp, #24]
   1a0e0:	mov	r0, fp
   1a0e4:	uxtb	r1, r3
   1a0e8:	bl	15b70 <main@@Base+0x11738>
   1a0ec:	str	r0, [sp, #36]	; 0x24
   1a0f0:	bl	10a58 <main@@Base+0xc620>
   1a0f4:	mov	r1, #128	; 0x80
   1a0f8:	ldr	r2, [sp, #48]	; 0x30
   1a0fc:	mov	r3, r0
   1a100:	ldr	r0, [sp, #40]	; 0x28
   1a104:	bl	3a38 <g_log@plt>
   1a108:	ldr	r1, [sp, #44]	; 0x2c
   1a10c:	cmp	r1, #0
   1a110:	bne	1a17c <main@@Base+0x15d44>
   1a114:	ldr	r3, [r5]
   1a118:	ldr	r2, [sp, #52]	; 0x34
   1a11c:	ldr	r4, [r3, #160]	; 0xa0
   1a120:	ldr	r2, [r2]
   1a124:	cmp	r4, #0
   1a128:	str	r2, [sp, #56]	; 0x38
   1a12c:	beq	1a33c <main@@Base+0x15f04>
   1a130:	mov	r0, r5
   1a134:	ldr	r1, [sp, #36]	; 0x24
   1a138:	ldr	r2, [sp, #20]
   1a13c:	mov	r3, r7
   1a140:	blx	r4
   1a144:	cmp	r0, #0
   1a148:	beq	19f6c <main@@Base+0x15b34>
   1a14c:	ldr	r1, [sp, #20]
   1a150:	tst	r1, #1
   1a154:	bne	1a1ec <main@@Base+0x15db4>
   1a158:	ldr	r2, [sp, #60]	; 0x3c
   1a15c:	ldr	r1, [sp, #24]
   1a160:	ldr	r3, [r2, #4]
   1a164:	add	r1, r1, #1
   1a168:	str	r1, [sp, #24]
   1a16c:	cmp	r3, r1
   1a170:	bhi	1a0dc <main@@Base+0x15ca4>
   1a174:	mov	r0, #1
   1a178:	b	19f70 <main@@Base+0x15b38>
   1a17c:	ldr	r0, [sp, #36]	; 0x24
   1a180:	bl	10a58 <main@@Base+0xc620>
   1a184:	cmp	r0, #0
   1a188:	bne	1a114 <main@@Base+0x15cdc>
   1a18c:	ldr	r2, [sp, #60]	; 0x3c
   1a190:	ldr	r3, [r2, #4]
   1a194:	cmp	r3, #1
   1a198:	bne	1a114 <main@@Base+0x15cdc>
   1a19c:	ldr	r1, [sp, #64]	; 0x40
   1a1a0:	ldr	r3, [r1, #24]
   1a1a4:	ldr	r2, [r3, #4]
   1a1a8:	cmp	r2, #0
   1a1ac:	beq	1a114 <main@@Base+0x15cdc>
   1a1b0:	ldr	r3, [r3]
   1a1b4:	ldr	r4, [r3]
   1a1b8:	mov	r0, r4
   1a1bc:	bl	1781c <main@@Base+0x133e4>
   1a1c0:	mov	r1, #128	; 0x80
   1a1c4:	ldr	r2, [sp, #68]	; 0x44
   1a1c8:	mov	r3, r0
   1a1cc:	ldr	r0, [sp, #40]	; 0x28
   1a1d0:	bl	3a38 <g_log@plt>
   1a1d4:	mov	r0, r4
   1a1d8:	bl	1781c <main@@Base+0x133e4>
   1a1dc:	mov	r1, r0
   1a1e0:	ldr	r0, [sp, #36]	; 0x24
   1a1e4:	bl	10bcc <main@@Base+0xc794>
   1a1e8:	b	1a114 <main@@Base+0x15cdc>
   1a1ec:	ldr	r2, [sp, #56]	; 0x38
   1a1f0:	mov	r1, #2
   1a1f4:	ldr	r0, [r5, r2]
   1a1f8:	bl	d74c <main@@Base+0x9314>
   1a1fc:	cmp	r0, #0
   1a200:	beq	1a158 <main@@Base+0x15d20>
   1a204:	mov	r1, #6
   1a208:	mov	r0, r5
   1a20c:	bl	193dc <main@@Base+0x14fa4>
   1a210:	ldr	r0, [sp, #36]	; 0x24
   1a214:	bl	109d0 <main@@Base+0xc598>
   1a218:	mov	r4, r0
   1a21c:	ldr	r0, [sp, #36]	; 0x24
   1a220:	bl	10a58 <main@@Base+0xc620>
   1a224:	mov	r8, r0
   1a228:	mov	r0, r4
   1a22c:	bl	3f24 <g_bytes_get_size@plt>
   1a230:	mov	r6, r0
   1a234:	mov	r0, r4
   1a238:	bl	3f24 <g_bytes_get_size@plt>
   1a23c:	mov	r1, r8
   1a240:	mov	r2, r6
   1a244:	str	r7, [sp]
   1a248:	mov	r3, r0
   1a24c:	mov	r0, r5
   1a250:	bl	198d0 <main@@Base+0x15498>
   1a254:	subs	r8, r0, #0
   1a258:	beq	19f6c <main@@Base+0x15b34>
   1a25c:	bl	109d0 <main@@Base+0xc598>
   1a260:	mov	r1, r4
   1a264:	mov	r6, r0
   1a268:	bl	41b8 <g_bytes_compare@plt>
   1a26c:	cmp	r0, #0
   1a270:	beq	1a460 <main@@Base+0x16028>
   1a274:	mov	r0, r6
   1a278:	add	r1, sp, #76	; 0x4c
   1a27c:	bl	4320 <g_bytes_get_data@plt>
   1a280:	mov	r5, r0
   1a284:	add	r1, sp, #80	; 0x50
   1a288:	mov	r0, r4
   1a28c:	bl	4320 <g_bytes_get_data@plt>
   1a290:	ldr	r1, [sp, #76]	; 0x4c
   1a294:	ldr	r2, [sp, #80]	; 0x50
   1a298:	cmp	r1, r2
   1a29c:	bne	1a4ec <main@@Base+0x160b4>
   1a2a0:	cmp	r1, #0
   1a2a4:	beq	1a518 <main@@Base+0x160e0>
   1a2a8:	ldrb	ip, [r5]
   1a2ac:	ldrb	r2, [r0]
   1a2b0:	cmp	ip, r2
   1a2b4:	moveq	lr, r5
   1a2b8:	moveq	r3, #0
   1a2bc:	beq	1a2d4 <main@@Base+0x15e9c>
   1a2c0:	b	1a500 <main@@Base+0x160c8>
   1a2c4:	ldrb	ip, [lr, #1]!
   1a2c8:	ldrb	r2, [r0, #1]!
   1a2cc:	cmp	ip, r2
   1a2d0:	bne	1a504 <main@@Base+0x160cc>
   1a2d4:	add	r3, r3, #1
   1a2d8:	cmp	r3, r1
   1a2dc:	bne	1a2c4 <main@@Base+0x15e8c>
   1a2e0:	mov	r4, #0
   1a2e4:	bl	40a4 <fwupd_error_quark@plt>
   1a2e8:	ldr	r3, [pc, #724]	; 1a5c4 <main@@Base+0x1618c>
   1a2ec:	mov	r1, r0
   1a2f0:	str	r4, [sp]
   1a2f4:	mov	r0, r7
   1a2f8:	mov	r2, #5
   1a2fc:	add	r3, pc, r3
   1a300:	bl	4350 <g_set_error@plt>
   1a304:	mov	r0, r4
   1a308:	bl	3eac <g_free@plt>
   1a30c:	mov	r0, r8
   1a310:	bl	4110 <g_object_unref@plt>
   1a314:	b	19f6c <main@@Base+0x15b34>
   1a318:	bl	40a4 <fwupd_error_quark@plt>
   1a31c:	ldr	r3, [pc, #676]	; 1a5c8 <main@@Base+0x16190>
   1a320:	mov	r2, #10
   1a324:	add	r3, pc, r3
   1a328:	mov	r1, r0
   1a32c:	mov	r0, r7
   1a330:	bl	3ae0 <g_set_error_literal@plt>
   1a334:	mov	r0, r4
   1a338:	b	19f70 <main@@Base+0x15b38>
   1a33c:	ldr	r3, [sp, #56]	; 0x38
   1a340:	ldr	r0, [r5, r3]
   1a344:	bl	c44c <main@@Base+0x8014>
   1a348:	str	r0, [sp, #16]
   1a34c:	ldr	r0, [sp, #36]	; 0x24
   1a350:	bl	109d0 <main@@Base+0xc598>
   1a354:	str	r0, [sp, #8]
   1a358:	bl	3f24 <g_bytes_get_size@plt>
   1a35c:	vldr	s13, [sp, #16]
   1a360:	vcvt.f64.u32	d7, s13
   1a364:	vmov	s13, r0
   1a368:	vcvt.f64.u32	d0, s13
   1a36c:	vdiv.f64	d0, d0, d7
   1a370:	bl	3da4 <ceil@plt>
   1a374:	vcvt.u32.f64	s0, d0
   1a378:	vmov	sl, s0
   1a37c:	uxth	sl, sl
   1a380:	cmp	sl, #0
   1a384:	beq	1a478 <main@@Base+0x16040>
   1a388:	mov	r0, r5
   1a38c:	mov	r1, #5
   1a390:	mov	r8, r4
   1a394:	bl	193dc <main@@Base+0x14fa4>
   1a398:	b	1a43c <main@@Base+0x16004>
   1a39c:	ldr	r0, [sp, #8]
   1a3a0:	bl	3f24 <g_bytes_get_size@plt>
   1a3a4:	ldr	r3, [sp, #16]
   1a3a8:	mov	r1, r9
   1a3ac:	rsb	r2, r9, r0
   1a3b0:	ldr	r0, [sp, #8]
   1a3b4:	cmp	r2, r3
   1a3b8:	movcs	r2, r3
   1a3bc:	bl	3b40 <g_bytes_new_from_bytes@plt>
   1a3c0:	mov	r6, r0
   1a3c4:	mov	r0, r6
   1a3c8:	bl	3f24 <g_bytes_get_size@plt>
   1a3cc:	str	r0, [sp]
   1a3d0:	mov	r3, r8
   1a3d4:	ldr	r0, [sp, #28]
   1a3d8:	mov	r1, #128	; 0x80
   1a3dc:	ldr	r2, [sp, #32]
   1a3e0:	bl	3a38 <g_log@plt>
   1a3e4:	mov	r0, r5
   1a3e8:	mov	r1, r4
   1a3ec:	mov	r2, r6
   1a3f0:	mov	r3, r7
   1a3f4:	bl	194b4 <main@@Base+0x1507c>
   1a3f8:	cmp	r0, #0
   1a3fc:	beq	1a4b4 <main@@Base+0x1607c>
   1a400:	ldr	r0, [sp, #8]
   1a404:	bl	3f24 <g_bytes_get_size@plt>
   1a408:	mov	r2, r0
   1a40c:	mov	r1, r9
   1a410:	mov	r0, r5
   1a414:	bl	19860 <main@@Base+0x15428>
   1a418:	cmp	r6, #0
   1a41c:	beq	1a428 <main@@Base+0x15ff0>
   1a420:	mov	r0, r6
   1a424:	bl	414c <g_bytes_unref@plt>
   1a428:	add	r4, r4, #1
   1a42c:	uxth	r4, r4
   1a430:	cmp	r4, sl
   1a434:	mov	r8, r4
   1a438:	bgt	1a498 <main@@Base+0x16060>
   1a43c:	ldr	r1, [sp, #16]
   1a440:	cmp	r4, sl
   1a444:	mul	r9, r8, r1
   1a448:	bcc	1a39c <main@@Base+0x15f64>
   1a44c:	mov	r0, #0
   1a450:	mov	r1, r0
   1a454:	bl	390c <g_bytes_new@plt>
   1a458:	mov	r6, r0
   1a45c:	b	1a3c4 <main@@Base+0x15f8c>
   1a460:	mov	r0, r5
   1a464:	mov	r1, #1
   1a468:	bl	193dc <main@@Base+0x14fa4>
   1a46c:	mov	r0, r8
   1a470:	bl	4110 <g_object_unref@plt>
   1a474:	b	1a158 <main@@Base+0x15d20>
   1a478:	bl	40a4 <fwupd_error_quark@plt>
   1a47c:	ldr	r3, [pc, #328]	; 1a5cc <main@@Base+0x16194>
   1a480:	mov	r2, #7
   1a484:	add	r3, pc, r3
   1a488:	mov	r1, r0
   1a48c:	mov	r0, r7
   1a490:	bl	3ae0 <g_set_error_literal@plt>
   1a494:	b	19f6c <main@@Base+0x15b34>
   1a498:	mov	r0, r5
   1a49c:	mov	r1, #100	; 0x64
   1a4a0:	bl	197e0 <main@@Base+0x153a8>
   1a4a4:	mov	r0, r5
   1a4a8:	mov	r1, #1
   1a4ac:	bl	193dc <main@@Base+0x14fa4>
   1a4b0:	b	1a14c <main@@Base+0x15d14>
   1a4b4:	cmp	r6, #0
   1a4b8:	beq	19f6c <main@@Base+0x15b34>
   1a4bc:	mov	r0, r6
   1a4c0:	bl	414c <g_bytes_unref@plt>
   1a4c4:	b	19f6c <main@@Base+0x15b34>
   1a4c8:	bl	40a4 <fwupd_error_quark@plt>
   1a4cc:	ldr	r3, [pc, #252]	; 1a5d0 <main@@Base+0x16198>
   1a4d0:	mov	r2, #7
   1a4d4:	add	r3, pc, r3
   1a4d8:	mov	r1, r0
   1a4dc:	mov	r0, r7
   1a4e0:	bl	3ae0 <g_set_error_literal@plt>
   1a4e4:	mov	r0, r4
   1a4e8:	b	19f70 <main@@Base+0x15b38>
   1a4ec:	ldr	r0, [pc, #224]	; 1a5d4 <main@@Base+0x1619c>
   1a4f0:	add	r0, pc, r0
   1a4f4:	bl	3c18 <g_strdup_printf@plt>
   1a4f8:	mov	r4, r0
   1a4fc:	b	1a2e4 <main@@Base+0x15eac>
   1a500:	mov	r3, #0
   1a504:	ldr	r0, [pc, #204]	; 1a5d8 <main@@Base+0x161a0>
   1a508:	mov	r1, ip
   1a50c:	add	r0, pc, r0
   1a510:	bl	3c18 <g_strdup_printf@plt>
   1a514:	b	1a4f8 <main@@Base+0x160c0>
   1a518:	mov	r4, r1
   1a51c:	b	1a2e4 <main@@Base+0x15eac>
   1a520:	bl	3e4c <__stack_chk_fail@plt>
   1a524:	mov	r5, r0
   1a528:	mov	r4, #0
   1a52c:	mov	r0, r4
   1a530:	bl	3eac <g_free@plt>
   1a534:	mov	r0, r8
   1a538:	bl	4110 <g_object_unref@plt>
   1a53c:	mov	r0, r5
   1a540:	bl	42f0 <_Unwind_Resume@plt>
   1a544:	b	1a524 <main@@Base+0x160ec>
   1a548:	b	1a524 <main@@Base+0x160ec>
   1a54c:	mov	r5, r0
   1a550:	b	1a534 <main@@Base+0x160fc>
   1a554:	mov	r5, r0
   1a558:	b	1a52c <main@@Base+0x160f4>
   1a55c:	cmp	r6, #0
   1a560:	mov	r4, r0
   1a564:	beq	1a570 <main@@Base+0x16138>
   1a568:	mov	r0, r6
   1a56c:	bl	414c <g_bytes_unref@plt>
   1a570:	mov	r0, r4
   1a574:	bl	42f0 <_Unwind_Resume@plt>
   1a578:	b	1a524 <main@@Base+0x160ec>
   1a57c:	muleq	r2, ip, ip
   1a580:	andeq	r0, r0, r0, lsr r4
   1a584:	andeq	r5, r2, ip, asr #2
   1a588:	andeq	lr, r0, ip, lsr #28
   1a58c:	andeq	sl, r0, r0, lsr pc
   1a590:	andeq	lr, r0, r0, lsr #31
   1a594:			; <UNDEFINED> instruction: 0x0000edb4
   1a598:			; <UNDEFINED> instruction: 0x0000aeb8
   1a59c:	muleq	r0, r8, sl
   1a5a0:	andeq	lr, r0, r8, ror sp
   1a5a4:	andeq	sl, r0, ip, ror lr
   1a5a8:	andeq	ip, r0, r8, asr lr
   1a5ac:	strdeq	sl, [r0], -r8
   1a5b0:	ldrdeq	pc, [r0], -r4
   1a5b4:	andeq	pc, r0, r8, ror #9
   1a5b8:	andeq	r4, r2, ip, lsl #31
   1a5bc:	andeq	sl, r0, r4, asr #27
   1a5c0:	andeq	pc, r0, r4, lsl #10
   1a5c4:	andeq	pc, r0, ip, lsr r3	; <UNPREDICTABLE>
   1a5c8:	andeq	pc, r0, r8, lsl r2	; <UNPREDICTABLE>
   1a5cc:	andeq	pc, r0, r8, lsr r1	; <UNPREDICTABLE>
   1a5d0:	andeq	pc, r0, r8, lsl #1
   1a5d4:	andeq	pc, r0, r4, lsl #2
   1a5d8:	andeq	pc, r0, r4, lsl #2
   1a5dc:	push	{r3, r4, r5, lr}
   1a5e0:	mov	r4, r0
   1a5e4:	ldr	r3, [pc, #112]	; 1a65c <main@@Base+0x16224>
   1a5e8:	add	r3, pc, r3
   1a5ec:	ldr	r5, [r3]
   1a5f0:	bl	17f2c <main@@Base+0x13af4>
   1a5f4:	cmp	r4, #0
   1a5f8:	beq	1a628 <main@@Base+0x161f0>
   1a5fc:	ldr	r3, [r4]
   1a600:	cmp	r3, #0
   1a604:	beq	1a614 <main@@Base+0x161dc>
   1a608:	ldr	r3, [r3]
   1a60c:	cmp	r0, r3
   1a610:	beq	1a650 <main@@Base+0x16218>
   1a614:	mov	r1, r0
   1a618:	mov	r0, r4
   1a61c:	bl	3fcc <g_type_check_instance_is_a@plt>
   1a620:	cmp	r0, #0
   1a624:	bne	1a650 <main@@Base+0x16218>
   1a628:	ldr	r1, [pc, #48]	; 1a660 <main@@Base+0x16228>
   1a62c:	ldr	r0, [pc, #48]	; 1a664 <main@@Base+0x1622c>
   1a630:	ldr	r2, [pc, #48]	; 1a668 <main@@Base+0x16230>
   1a634:	add	r1, pc, r1
   1a638:	add	r0, pc, r0
   1a63c:	add	r1, r1, #200	; 0xc8
   1a640:	add	r2, pc, r2
   1a644:	bl	3870 <g_return_if_fail_warning@plt>
   1a648:	mov	r0, #255	; 0xff
   1a64c:	pop	{r3, r4, r5, pc}
   1a650:	add	r4, r4, r5
   1a654:	ldrb	r0, [r4, #12]
   1a658:	pop	{r3, r4, r5, pc}
   1a65c:	andeq	r4, r2, r8, ror #20
   1a660:	andeq	lr, r0, r0, asr r7
   1a664:	andeq	sl, r0, r4, asr r8
   1a668:	andeq	lr, r0, r4, asr #17
   1a66c:	ldr	r3, [pc, #196]	; 1a738 <main@@Base+0x16300>
   1a670:	push	{r4, r5, r6, lr}
   1a674:	add	r3, pc, r3
   1a678:	mov	r4, r0
   1a67c:	mov	r5, r1
   1a680:	ldr	r3, [r3]
   1a684:	add	r6, r0, r3
   1a688:	bl	17f2c <main@@Base+0x13af4>
   1a68c:	cmp	r4, #0
   1a690:	beq	1a6c0 <main@@Base+0x16288>
   1a694:	ldr	r3, [r4]
   1a698:	cmp	r3, #0
   1a69c:	beq	1a6ac <main@@Base+0x16274>
   1a6a0:	ldr	r3, [r3]
   1a6a4:	cmp	r0, r3
   1a6a8:	beq	1a6e8 <main@@Base+0x162b0>
   1a6ac:	mov	r1, r0
   1a6b0:	mov	r0, r4
   1a6b4:	bl	3fcc <g_type_check_instance_is_a@plt>
   1a6b8:	cmp	r0, #0
   1a6bc:	bne	1a6e8 <main@@Base+0x162b0>
   1a6c0:	ldr	r1, [pc, #116]	; 1a73c <main@@Base+0x16304>
   1a6c4:	ldr	r0, [pc, #116]	; 1a740 <main@@Base+0x16308>
   1a6c8:	ldr	r2, [pc, #116]	; 1a744 <main@@Base+0x1630c>
   1a6cc:	add	r1, pc, r1
   1a6d0:	add	r0, pc, r0
   1a6d4:	add	r1, r1, #228	; 0xe4
   1a6d8:	add	r2, pc, r2
   1a6dc:	bl	3870 <g_return_if_fail_warning@plt>
   1a6e0:	mov	r0, #0
   1a6e4:	pop	{r4, r5, r6, pc}
   1a6e8:	mov	r0, r4
   1a6ec:	mov	r1, r5
   1a6f0:	bl	18f68 <main@@Base+0x14b30>
   1a6f4:	cmp	r0, #0
   1a6f8:	beq	1a710 <main@@Base+0x162d8>
   1a6fc:	ldr	r4, [r6, #16]
   1a700:	cmp	r4, #0
   1a704:	beq	1a714 <main@@Base+0x162dc>
   1a708:	mov	r0, r4
   1a70c:	pop	{r4, r5, r6, pc}
   1a710:	pop	{r4, r5, r6, pc}
   1a714:	bl	40a4 <fwupd_error_quark@plt>
   1a718:	ldr	r3, [pc, #40]	; 1a748 <main@@Base+0x16310>
   1a71c:	mov	r2, #8
   1a720:	add	r3, pc, r3
   1a724:	mov	r1, r0
   1a728:	mov	r0, r5
   1a72c:	bl	3ae0 <g_set_error_literal@plt>
   1a730:	mov	r0, r4
   1a734:	pop	{r4, r5, r6, pc}
   1a738:	ldrdeq	r4, [r2], -ip
   1a73c:			; <UNDEFINED> instruction: 0x0000e6b8
   1a740:			; <UNDEFINED> instruction: 0x0000a7bc
   1a744:	andeq	lr, r0, ip, lsr #16
   1a748:	andeq	lr, r0, ip, lsr #30
   1a74c:	ldr	r3, [pc, #196]	; 1a818 <main@@Base+0x163e0>
   1a750:	push	{r4, r5, r6, lr}
   1a754:	add	r3, pc, r3
   1a758:	mov	r4, r0
   1a75c:	mov	r5, r1
   1a760:	ldr	r3, [r3]
   1a764:	add	r6, r0, r3
   1a768:	bl	17f2c <main@@Base+0x13af4>
   1a76c:	cmp	r4, #0
   1a770:	beq	1a7a0 <main@@Base+0x16368>
   1a774:	ldr	r3, [r4]
   1a778:	cmp	r3, #0
   1a77c:	beq	1a78c <main@@Base+0x16354>
   1a780:	ldr	r3, [r3]
   1a784:	cmp	r0, r3
   1a788:	beq	1a7c8 <main@@Base+0x16390>
   1a78c:	mov	r1, r0
   1a790:	mov	r0, r4
   1a794:	bl	3fcc <g_type_check_instance_is_a@plt>
   1a798:	cmp	r0, #0
   1a79c:	bne	1a7c8 <main@@Base+0x16390>
   1a7a0:	ldr	r1, [pc, #116]	; 1a81c <main@@Base+0x163e4>
   1a7a4:	ldr	r0, [pc, #116]	; 1a820 <main@@Base+0x163e8>
   1a7a8:	ldr	r2, [pc, #116]	; 1a824 <main@@Base+0x163ec>
   1a7ac:	add	r1, pc, r1
   1a7b0:	add	r0, pc, r0
   1a7b4:	add	r1, r1, #252	; 0xfc
   1a7b8:	add	r2, pc, r2
   1a7bc:	bl	3870 <g_return_if_fail_warning@plt>
   1a7c0:	mov	r0, #0
   1a7c4:	pop	{r4, r5, r6, pc}
   1a7c8:	mov	r0, r4
   1a7cc:	mov	r1, r5
   1a7d0:	bl	18f68 <main@@Base+0x14b30>
   1a7d4:	cmp	r0, #0
   1a7d8:	beq	1a7f0 <main@@Base+0x163b8>
   1a7dc:	ldr	r4, [r6, #20]
   1a7e0:	cmp	r4, #0
   1a7e4:	beq	1a7f4 <main@@Base+0x163bc>
   1a7e8:	mov	r0, r4
   1a7ec:	pop	{r4, r5, r6, pc}
   1a7f0:	pop	{r4, r5, r6, pc}
   1a7f4:	bl	40a4 <fwupd_error_quark@plt>
   1a7f8:	ldr	r3, [pc, #40]	; 1a828 <main@@Base+0x163f0>
   1a7fc:	mov	r2, #8
   1a800:	add	r3, pc, r3
   1a804:	mov	r1, r0
   1a808:	mov	r0, r5
   1a80c:	bl	3ae0 <g_set_error_literal@plt>
   1a810:	mov	r0, r4
   1a814:	pop	{r4, r5, r6, pc}
   1a818:	strdeq	r4, [r2], -ip
   1a81c:	ldrdeq	lr, [r0], -r8
   1a820:	ldrdeq	sl, [r0], -ip
   1a824:	andeq	lr, r0, ip, asr #14
   1a828:	andeq	lr, r0, r8, asr lr
   1a82c:	push	{r3, r4, r5, lr}
   1a830:	mov	r4, r0
   1a834:	ldr	r3, [pc, #112]	; 1a8ac <main@@Base+0x16474>
   1a838:	add	r3, pc, r3
   1a83c:	ldr	r5, [r3]
   1a840:	bl	17f2c <main@@Base+0x13af4>
   1a844:	cmp	r4, #0
   1a848:	beq	1a878 <main@@Base+0x16440>
   1a84c:	ldr	r3, [r4]
   1a850:	cmp	r3, #0
   1a854:	beq	1a864 <main@@Base+0x1642c>
   1a858:	ldr	r3, [r3]
   1a85c:	cmp	r0, r3
   1a860:	beq	1a8a0 <main@@Base+0x16468>
   1a864:	mov	r1, r0
   1a868:	mov	r0, r4
   1a86c:	bl	3fcc <g_type_check_instance_is_a@plt>
   1a870:	cmp	r0, #0
   1a874:	bne	1a8a0 <main@@Base+0x16468>
   1a878:	ldr	r1, [pc, #48]	; 1a8b0 <main@@Base+0x16478>
   1a87c:	ldr	r0, [pc, #48]	; 1a8b4 <main@@Base+0x1647c>
   1a880:	ldr	r2, [pc, #48]	; 1a8b8 <main@@Base+0x16480>
   1a884:	add	r1, pc, r1
   1a888:	add	r0, pc, r0
   1a88c:	add	r1, r1, #288	; 0x120
   1a890:	add	r2, pc, r2
   1a894:	bl	3870 <g_return_if_fail_warning@plt>
   1a898:	mov	r0, #0
   1a89c:	pop	{r3, r4, r5, pc}
   1a8a0:	add	r4, r4, r5
   1a8a4:	ldr	r0, [r4, #4]
   1a8a8:	pop	{r3, r4, r5, pc}
   1a8ac:	andeq	r4, r2, r8, lsl r8
   1a8b0:	andeq	lr, r0, r0, lsl #10
   1a8b4:	andeq	sl, r0, r4, lsl #12
   1a8b8:	andeq	lr, r0, r4, ror r6
   1a8bc:	bx	lr
   1a8c0:	ldr	r3, [pc, #148]	; 1a95c <main@@Base+0x16524>
   1a8c4:	ldr	ip, [pc, #148]	; 1a960 <main@@Base+0x16528>
   1a8c8:	add	r3, pc, r3
   1a8cc:	push	{r4, r5, r6, r7, lr}
   1a8d0:	sub	sp, sp, #12
   1a8d4:	ldr	r4, [r3, ip]
   1a8d8:	add	r2, sp, #8
   1a8dc:	mov	r6, r0
   1a8e0:	mov	r5, r1
   1a8e4:	mov	r0, #65	; 0x41
   1a8e8:	mov	r1, #1
   1a8ec:	ldr	r3, [r4]
   1a8f0:	strb	r0, [r2, #-8]!
   1a8f4:	mov	r0, sp
   1a8f8:	str	r3, [sp, #4]
   1a8fc:	bl	40f8 <g_bytes_new_static@plt>
   1a900:	mov	r3, r5
   1a904:	mov	r1, #0
   1a908:	mov	r2, r0
   1a90c:	mov	r0, r6
   1a910:	bl	194b4 <main@@Base+0x1507c>
   1a914:	subs	r7, r0, #0
   1a918:	beq	1a940 <main@@Base+0x16508>
   1a91c:	mov	r0, r6
   1a920:	mov	r1, r5
   1a924:	bl	18bc4 <main@@Base+0x1478c>
   1a928:	ldr	r2, [sp, #4]
   1a92c:	ldr	r3, [r4]
   1a930:	cmp	r2, r3
   1a934:	bne	1a958 <main@@Base+0x16520>
   1a938:	add	sp, sp, #12
   1a93c:	pop	{r4, r5, r6, r7, pc}
   1a940:	ldr	r1, [pc, #28]	; 1a964 <main@@Base+0x1652c>
   1a944:	mov	r0, r5
   1a948:	add	r1, pc, r1
   1a94c:	bl	4404 <g_prefix_error@plt>
   1a950:	mov	r0, r7
   1a954:	b	1a928 <main@@Base+0x164f0>
   1a958:	bl	3e4c <__stack_chk_fail@plt>
   1a95c:			; <UNDEFINED> instruction: 0x000242b8
   1a960:	andeq	r0, r0, r0, lsr r4
   1a964:	andeq	lr, r0, r8, asr #26
   1a968:	push	{r4, r5, r6, lr}
   1a96c:	mov	r6, r0
   1a970:	mov	r0, #0
   1a974:	mov	r5, r1
   1a978:	mov	r1, r0
   1a97c:	bl	390c <g_bytes_new@plt>
   1a980:	mov	r3, r5
   1a984:	mov	r1, #2
   1a988:	mov	r4, r0
   1a98c:	mov	r0, r6
   1a990:	mov	r2, r4
   1a994:	bl	194b4 <main@@Base+0x1507c>
   1a998:	cmp	r4, #0
   1a99c:	mov	r5, r0
   1a9a0:	beq	1a9ac <main@@Base+0x16574>
   1a9a4:	mov	r0, r4
   1a9a8:	bl	414c <g_bytes_unref@plt>
   1a9ac:	mov	r0, r5
   1a9b0:	pop	{r4, r5, r6, pc}
   1a9b4:	cmp	r4, #0
   1a9b8:	mov	r5, r0
   1a9bc:	beq	1a9c8 <main@@Base+0x16590>
   1a9c0:	mov	r0, r4
   1a9c4:	bl	414c <g_bytes_unref@plt>
   1a9c8:	mov	r0, r5
   1a9cc:	bl	42f0 <_Unwind_Resume@plt>
   1a9d0:	push	{r4, lr}
   1a9d4:	mov	r4, r0
   1a9d8:	bl	420c <g_type_class_peek_parent@plt>
   1a9dc:	ldr	r1, [pc, #96]	; 1aa44 <main@@Base+0x1660c>
   1a9e0:	add	r1, pc, r1
   1a9e4:	ldr	r3, [r1, #4]
   1a9e8:	cmp	r3, #0
   1a9ec:	str	r0, [r1]
   1a9f0:	beq	1aa00 <main@@Base+0x165c8>
   1a9f4:	add	r1, r1, #4
   1a9f8:	mov	r0, r4
   1a9fc:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   1aa00:	bl	17f2c <main@@Base+0x13af4>
   1aa04:	mov	r1, r0
   1aa08:	mov	r0, r4
   1aa0c:	bl	4374 <g_type_check_class_cast@plt>
   1aa10:	ldr	ip, [pc, #48]	; 1aa48 <main@@Base+0x16610>
   1aa14:	ldr	r1, [pc, #48]	; 1aa4c <main@@Base+0x16614>
   1aa18:	ldr	r2, [pc, #48]	; 1aa50 <main@@Base+0x16618>
   1aa1c:	add	ip, pc, ip
   1aa20:	ldr	r3, [pc, #44]	; 1aa54 <main@@Base+0x1661c>
   1aa24:	add	r1, pc, r1
   1aa28:	add	r2, pc, r2
   1aa2c:	add	r3, pc, r3
   1aa30:	str	ip, [r0, #144]	; 0x90
   1aa34:	str	r1, [r0, #152]	; 0x98
   1aa38:	str	r2, [r0, #156]	; 0x9c
   1aa3c:	str	r3, [r0, #160]	; 0xa0
   1aa40:	pop	{r4, pc}
   1aa44:	andeq	r4, r2, r4, lsl #13
   1aa48:			; <UNDEFINED> instruction: 0xffffff44
   1aa4c:			; <UNDEFINED> instruction: 0xfffffe94
   1aa50:	strdeq	r0, [r0], -r4
   1aa54:	strdeq	r0, [r0], -ip
   1aa58:	ldr	r3, [pc, #188]	; 1ab1c <main@@Base+0x166e4>
   1aa5c:	push	{r4, r5, r6, r7, lr}
   1aa60:	add	r3, pc, r3
   1aa64:	ldr	r4, [pc, #180]	; 1ab20 <main@@Base+0x166e8>
   1aa68:	sub	sp, sp, #28
   1aa6c:	mov	r6, r0
   1aa70:	add	ip, sp, #24
   1aa74:	str	r1, [sp, #4]
   1aa78:	mov	lr, #33	; 0x21
   1aa7c:	ldr	r4, [r3, r4]
   1aa80:	mov	r1, #5
   1aa84:	ldr	r0, [sp, #4]
   1aa88:	mov	r5, r2
   1aa8c:	strb	lr, [ip, #-12]!
   1aa90:	ldr	r3, [r4]
   1aa94:	str	r0, [sp, #13]
   1aa98:	mov	r0, ip
   1aa9c:	str	r3, [sp, #20]
   1aaa0:	bl	40f8 <g_bytes_new_static@plt>
   1aaa4:	mov	r3, r5
   1aaa8:	mov	r1, #0
   1aaac:	mov	r2, r0
   1aab0:	mov	r0, r6
   1aab4:	bl	194b4 <main@@Base+0x1507c>
   1aab8:	subs	r7, r0, #0
   1aabc:	beq	1aafc <main@@Base+0x166c4>
   1aac0:	ldr	r0, [pc, #92]	; 1ab24 <main@@Base+0x166ec>
   1aac4:	mov	r1, #128	; 0x80
   1aac8:	ldr	r2, [pc, #88]	; 1ab28 <main@@Base+0x166f0>
   1aacc:	add	r0, pc, r0
   1aad0:	add	r2, pc, r2
   1aad4:	bl	3a38 <g_log@plt>
   1aad8:	mov	r0, r6
   1aadc:	mov	r1, r5
   1aae0:	bl	18bc4 <main@@Base+0x1478c>
   1aae4:	ldr	r2, [sp, #20]
   1aae8:	ldr	r3, [r4]
   1aaec:	cmp	r2, r3
   1aaf0:	bne	1ab18 <main@@Base+0x166e0>
   1aaf4:	add	sp, sp, #28
   1aaf8:	pop	{r4, r5, r6, r7, pc}
   1aafc:	ldr	r1, [pc, #40]	; 1ab2c <main@@Base+0x166f4>
   1ab00:	mov	r0, r5
   1ab04:	ldr	r2, [sp, #4]
   1ab08:	add	r1, pc, r1
   1ab0c:	bl	4404 <g_prefix_error@plt>
   1ab10:	mov	r0, r7
   1ab14:	b	1aae4 <main@@Base+0x166ac>
   1ab18:	bl	3e4c <__stack_chk_fail@plt>
   1ab1c:	andeq	r4, r2, r0, lsr #2
   1ab20:	andeq	r0, r0, r0, lsr r4
   1ab24:	andeq	sl, r0, r0, asr #7
   1ab28:	strdeq	lr, [r0], -r0
   1ab2c:	muleq	r0, ip, fp
   1ab30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ab34:	mov	r7, r3
   1ab38:	ldr	r5, [pc, #1420]	; 1b0cc <main@@Base+0x16c94>
   1ab3c:	sub	sp, sp, #68	; 0x44
   1ab40:	ldr	r2, [pc, #1416]	; 1b0d0 <main@@Base+0x16c98>
   1ab44:	mov	fp, r1
   1ab48:	add	r5, pc, r5
   1ab4c:	mov	r4, r0
   1ab50:	ldr	r2, [r5, r2]
   1ab54:	ldr	r3, [r2]
   1ab58:	str	r2, [sp, #32]
   1ab5c:	str	r3, [sp, #60]	; 0x3c
   1ab60:	bl	197c8 <main@@Base+0x15390>
   1ab64:	bl	c44c <main@@Base+0x8014>
   1ab68:	str	r0, [sp, #8]
   1ab6c:	mov	r0, fp
   1ab70:	bl	109d0 <main@@Base+0xc598>
   1ab74:	str	r0, [sp, #24]
   1ab78:	bl	3f24 <g_bytes_get_size@plt>
   1ab7c:	vmov	s13, r0
   1ab80:	vcvt.f64.u32	d0, s13
   1ab84:	vldr	s13, [sp, #8]
   1ab88:	vcvt.f64.u32	d7, s13
   1ab8c:	vdiv.f64	d0, d0, d7
   1ab90:	bl	3da4 <ceil@plt>
   1ab94:	vcvt.u32.f64	s0, d0
   1ab98:	vmov	r1, s0
   1ab9c:	vstr	s0, [sp, #12]
   1aba0:	cmp	r1, #0
   1aba4:	bne	1abe8 <main@@Base+0x167b0>
   1aba8:	bl	40a4 <fwupd_error_quark@plt>
   1abac:	ldr	r3, [pc, #1312]	; 1b0d4 <main@@Base+0x16c9c>
   1abb0:	mov	r1, r0
   1abb4:	mov	r2, #7
   1abb8:	mov	r0, r7
   1abbc:	add	r3, pc, r3
   1abc0:	bl	3ae0 <g_set_error_literal@plt>
   1abc4:	mov	r4, #0
   1abc8:	ldr	r1, [sp, #32]
   1abcc:	mov	r0, r4
   1abd0:	ldr	r2, [sp, #60]	; 0x3c
   1abd4:	ldr	r3, [r1]
   1abd8:	cmp	r2, r3
   1abdc:	bne	1b088 <main@@Base+0x16c50>
   1abe0:	add	sp, sp, #68	; 0x44
   1abe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1abe8:	bl	3f18 <g_ptr_array_new@plt>
   1abec:	ldr	r2, [pc, #1252]	; 1b0d8 <main@@Base+0x16ca0>
   1abf0:	mov	r6, r0
   1abf4:	ldr	r3, [pc, #1248]	; 1b0dc <main@@Base+0x16ca4>
   1abf8:	ldr	r0, [r5, r2]
   1abfc:	ldr	r1, [r5, r3]
   1ac00:	bl	4428 <g_hash_table_new@plt>
   1ac04:	ldr	r2, [pc, #1236]	; 1b0e0 <main@@Base+0x16ca8>
   1ac08:	mov	r5, #0
   1ac0c:	ldr	r3, [pc, #1232]	; 1b0e4 <main@@Base+0x16cac>
   1ac10:	mov	r8, r5
   1ac14:	add	r2, pc, r2
   1ac18:	str	r0, [sp, #28]
   1ac1c:	add	r3, pc, r3
   1ac20:	str	r2, [sp, #16]
   1ac24:	str	r3, [sp, #20]
   1ac28:	b	1ac44 <main@@Base+0x1680c>
   1ac2c:	ldr	r2, [sp, #12]
   1ac30:	add	r8, r8, #1
   1ac34:	ldr	r1, [sp, #8]
   1ac38:	cmp	r8, r2
   1ac3c:	add	r5, r5, r1
   1ac40:	beq	1acf8 <main@@Base+0x168c0>
   1ac44:	mov	r0, fp
   1ac48:	bl	10a58 <main@@Base+0xc620>
   1ac4c:	add	sl, r5, r0
   1ac50:	mov	r0, r4
   1ac54:	mov	r1, sl
   1ac58:	bl	18260 <main@@Base+0x13e28>
   1ac5c:	subs	r9, r0, #0
   1ac60:	beq	1ae28 <main@@Base+0x169f0>
   1ac64:	mov	r1, #2
   1ac68:	bl	17b7c <main@@Base+0x13744>
   1ac6c:	cmp	r0, #0
   1ac70:	beq	1ae4c <main@@Base+0x16a14>
   1ac74:	mov	r0, r9
   1ac78:	mov	r1, #4
   1ac7c:	bl	17b7c <main@@Base+0x13744>
   1ac80:	cmp	r0, #0
   1ac84:	beq	1ac2c <main@@Base+0x167f4>
   1ac88:	ldr	r0, [sp, #28]
   1ac8c:	mov	r1, r9
   1ac90:	bl	3db0 <g_hash_table_lookup@plt>
   1ac94:	cmp	r0, #0
   1ac98:	bne	1ac2c <main@@Base+0x167f4>
   1ac9c:	ldr	r0, [sp, #28]
   1aca0:	mov	r1, r9
   1aca4:	mov	r2, #1
   1aca8:	bl	3bb8 <g_hash_table_insert@plt>
   1acac:	mov	r0, r6
   1acb0:	mov	r1, r9
   1acb4:	bl	426c <g_ptr_array_add@plt>
   1acb8:	mov	r0, r9
   1acbc:	bl	1781c <main@@Base+0x133e4>
   1acc0:	str	r0, [sp, #36]	; 0x24
   1acc4:	mov	r0, r9
   1acc8:	bl	1781c <main@@Base+0x133e4>
   1accc:	mov	sl, r0
   1acd0:	mov	r0, r9
   1acd4:	bl	178a4 <main@@Base+0x1346c>
   1acd8:	add	r0, r0, sl
   1acdc:	ldr	r3, [sp, #36]	; 0x24
   1ace0:	str	r0, [sp]
   1ace4:	mov	r1, #128	; 0x80
   1ace8:	ldr	r0, [sp, #16]
   1acec:	ldr	r2, [sp, #20]
   1acf0:	bl	3a38 <g_log@plt>
   1acf4:	b	1ac2c <main@@Base+0x167f4>
   1acf8:	mov	r0, r4
   1acfc:	mov	r1, #10
   1ad00:	bl	193dc <main@@Base+0x14fa4>
   1ad04:	ldr	r9, [pc, #988]	; 1b0e8 <main@@Base+0x16cb0>
   1ad08:	mov	r5, #0
   1ad0c:	ldr	sl, [pc, #984]	; 1b0ec <main@@Base+0x16cb4>
   1ad10:	ldr	r3, [pc, #984]	; 1b0f0 <main@@Base+0x16cb8>
   1ad14:	add	r9, pc, r9
   1ad18:	ldr	r1, [pc, #980]	; 1b0f4 <main@@Base+0x16cbc>
   1ad1c:	add	sl, pc, sl
   1ad20:	add	r3, pc, r3
   1ad24:	str	r3, [sp, #16]
   1ad28:	add	r1, pc, r1
   1ad2c:	str	r1, [sp, #20]
   1ad30:	b	1ad6c <main@@Base+0x16934>
   1ad34:	ldr	r0, [sp, #16]
   1ad38:	mov	r1, #128	; 0x80
   1ad3c:	ldr	r2, [sp, #20]
   1ad40:	bl	3a38 <g_log@plt>
   1ad44:	mov	r0, r4
   1ad48:	mov	r1, r7
   1ad4c:	bl	18bc4 <main@@Base+0x1478c>
   1ad50:	cmp	r0, #0
   1ad54:	beq	1adfc <main@@Base+0x169c4>
   1ad58:	add	r5, r5, #1
   1ad5c:	mov	r0, r4
   1ad60:	ldr	r2, [r6, #4]
   1ad64:	mov	r1, r5
   1ad68:	bl	19860 <main@@Base+0x15428>
   1ad6c:	ldr	r3, [r6, #4]
   1ad70:	cmp	r5, r3
   1ad74:	bcs	1ae70 <main@@Base+0x16a38>
   1ad78:	ldr	r3, [r6]
   1ad7c:	ldr	r8, [r3, r5, lsl #2]
   1ad80:	mov	r0, r8
   1ad84:	bl	1781c <main@@Base+0x133e4>
   1ad88:	mov	r3, r0
   1ad8c:	mov	r1, #128	; 0x80
   1ad90:	mov	r0, r9
   1ad94:	mov	r2, sl
   1ad98:	bl	3a38 <g_log@plt>
   1ad9c:	mov	r0, r8
   1ada0:	bl	1781c <main@@Base+0x133e4>
   1ada4:	mov	r8, r0
   1ada8:	str	r0, [sp, #48]	; 0x30
   1adac:	ldr	r0, [sp, #48]	; 0x30
   1adb0:	add	r3, sp, #64	; 0x40
   1adb4:	mov	r2, #65	; 0x41
   1adb8:	mov	r1, #5
   1adbc:	strb	r2, [r3, #-12]!
   1adc0:	str	r0, [sp, #53]	; 0x35
   1adc4:	mov	r0, r3
   1adc8:	bl	40f8 <g_bytes_new_static@plt>
   1adcc:	mov	r2, r0
   1add0:	mov	r1, #0
   1add4:	mov	r0, r4
   1add8:	mov	r3, r7
   1addc:	bl	194b4 <main@@Base+0x1507c>
   1ade0:	cmp	r0, #0
   1ade4:	bne	1ad34 <main@@Base+0x168fc>
   1ade8:	ldr	r1, [pc, #776]	; 1b0f8 <main@@Base+0x16cc0>
   1adec:	mov	r0, r7
   1adf0:	mov	r2, r8
   1adf4:	add	r1, pc, r1
   1adf8:	bl	4404 <g_prefix_error@plt>
   1adfc:	mov	r4, #0
   1ae00:	ldr	r3, [sp, #28]
   1ae04:	cmp	r3, #0
   1ae08:	beq	1ae14 <main@@Base+0x169dc>
   1ae0c:	ldr	r0, [sp, #28]
   1ae10:	bl	3ee8 <g_hash_table_unref@plt>
   1ae14:	cmp	r6, #0
   1ae18:	beq	1abc8 <main@@Base+0x16790>
   1ae1c:	mov	r0, r6
   1ae20:	bl	4224 <g_ptr_array_unref@plt>
   1ae24:	b	1abc8 <main@@Base+0x16790>
   1ae28:	bl	40a4 <fwupd_error_quark@plt>
   1ae2c:	ldr	r3, [pc, #712]	; 1b0fc <main@@Base+0x16cc4>
   1ae30:	mov	r1, r0
   1ae34:	str	sl, [sp]
   1ae38:	mov	r0, r7
   1ae3c:	mov	r2, #10
   1ae40:	add	r3, pc, r3
   1ae44:	bl	4350 <g_set_error@plt>
   1ae48:	b	1adfc <main@@Base+0x169c4>
   1ae4c:	bl	40a4 <fwupd_error_quark@plt>
   1ae50:	ldr	r3, [pc, #680]	; 1b100 <main@@Base+0x16cc8>
   1ae54:	mov	r1, r0
   1ae58:	str	sl, [sp]
   1ae5c:	mov	r0, r7
   1ae60:	mov	r2, #10
   1ae64:	add	r3, pc, r3
   1ae68:	bl	4350 <g_set_error@plt>
   1ae6c:	b	1adfc <main@@Base+0x169c4>
   1ae70:	mov	r0, r4
   1ae74:	mov	r1, #100	; 0x64
   1ae78:	bl	197e0 <main@@Base+0x153a8>
   1ae7c:	mov	r0, r4
   1ae80:	mov	r1, #1
   1ae84:	bl	193dc <main@@Base+0x14fa4>
   1ae88:	mov	r0, r4
   1ae8c:	mov	r1, #5
   1ae90:	bl	193dc <main@@Base+0x14fa4>
   1ae94:	ldr	r1, [pc, #616]	; 1b104 <main@@Base+0x16ccc>
   1ae98:	mov	r5, #0
   1ae9c:	ldr	r3, [pc, #612]	; 1b108 <main@@Base+0x16cd0>
   1aea0:	mov	sl, r5
   1aea4:	add	r1, pc, r1
   1aea8:	ldr	r2, [pc, #604]	; 1b10c <main@@Base+0x16cd4>
   1aeac:	str	r1, [sp, #44]	; 0x2c
   1aeb0:	add	r3, pc, r3
   1aeb4:	ldr	r1, [pc, #596]	; 1b110 <main@@Base+0x16cd8>
   1aeb8:	add	r2, pc, r2
   1aebc:	str	r3, [sp, #40]	; 0x28
   1aec0:	mvn	r3, #0
   1aec4:	add	r1, pc, r1
   1aec8:	str	r2, [sp, #20]
   1aecc:	str	r3, [sp, #16]
   1aed0:	str	r1, [sp, #36]	; 0x24
   1aed4:	b	1afd8 <main@@Base+0x16ba0>
   1aed8:	bl	179c4 <main@@Base+0x1358c>
   1aedc:	ldr	r3, [sp, #16]
   1aee0:	cmp	r0, r3
   1aee4:	beq	1af20 <main@@Base+0x16ae8>
   1aee8:	ldr	r0, [sp, #40]	; 0x28
   1aeec:	mov	r1, #128	; 0x80
   1aef0:	ldr	r2, [sp, #44]	; 0x2c
   1aef4:	mov	r3, r8
   1aef8:	bl	3a38 <g_log@plt>
   1aefc:	mov	r0, r4
   1af00:	mov	r1, r8
   1af04:	mov	r2, r7
   1af08:	bl	1aa58 <main@@Base+0x16620>
   1af0c:	cmp	r0, #0
   1af10:	beq	1adfc <main@@Base+0x169c4>
   1af14:	mov	r0, r9
   1af18:	bl	179c4 <main@@Base+0x1358c>
   1af1c:	str	r0, [sp, #16]
   1af20:	ldr	r0, [sp, #24]
   1af24:	bl	3f24 <g_bytes_get_size@plt>
   1af28:	ldr	r3, [sp, #8]
   1af2c:	rsb	r2, r5, r0
   1af30:	mov	r1, r5
   1af34:	ldr	r0, [sp, #24]
   1af38:	cmp	r2, r3
   1af3c:	movcs	r2, r3
   1af40:	bl	3b40 <g_bytes_new_from_bytes@plt>
   1af44:	mov	r9, r0
   1af48:	bl	3f24 <g_bytes_get_size@plt>
   1af4c:	str	r0, [sp]
   1af50:	mov	r3, r8
   1af54:	ldr	r0, [sp, #20]
   1af58:	mov	r1, #128	; 0x80
   1af5c:	ldr	r2, [sp, #36]	; 0x24
   1af60:	bl	3a38 <g_log@plt>
   1af64:	add	r1, sl, #2
   1af68:	mov	r0, r4
   1af6c:	mov	r2, r9
   1af70:	mov	r3, r7
   1af74:	uxtb	r1, r1
   1af78:	bl	194b4 <main@@Base+0x1507c>
   1af7c:	cmp	r0, #0
   1af80:	beq	1b054 <main@@Base+0x16c1c>
   1af84:	mov	r0, r4
   1af88:	mov	r1, r7
   1af8c:	bl	18bc4 <main@@Base+0x1478c>
   1af90:	cmp	r0, #0
   1af94:	beq	1b054 <main@@Base+0x16c1c>
   1af98:	ldr	r0, [sp, #24]
   1af9c:	bl	3f24 <g_bytes_get_size@plt>
   1afa0:	mov	r2, r0
   1afa4:	mov	r1, r5
   1afa8:	mov	r0, r4
   1afac:	bl	19860 <main@@Base+0x15428>
   1afb0:	cmp	r9, #0
   1afb4:	beq	1afc0 <main@@Base+0x16b88>
   1afb8:	mov	r0, r9
   1afbc:	bl	414c <g_bytes_unref@plt>
   1afc0:	ldr	r2, [sp, #12]
   1afc4:	add	sl, sl, #1
   1afc8:	ldr	r1, [sp, #8]
   1afcc:	cmp	sl, r2
   1afd0:	add	r5, r5, r1
   1afd4:	beq	1b068 <main@@Base+0x16c30>
   1afd8:	mov	r0, fp
   1afdc:	bl	10a58 <main@@Base+0xc620>
   1afe0:	add	r8, r0, r5
   1afe4:	mov	r0, r4
   1afe8:	mov	r1, r8
   1afec:	bl	18260 <main@@Base+0x13e28>
   1aff0:	subs	r9, r0, #0
   1aff4:	bne	1aed8 <main@@Base+0x16aa0>
   1aff8:	ldr	r3, [pc, #276]	; 1b114 <main@@Base+0x16cdc>
   1affc:	movw	r2, #333	; 0x14d
   1b000:	ldr	r0, [pc, #272]	; 1b118 <main@@Base+0x16ce0>
   1b004:	add	r3, pc, r3
   1b008:	ldr	r1, [pc, #268]	; 1b11c <main@@Base+0x16ce4>
   1b00c:	str	r3, [sp]
   1b010:	add	r0, pc, r0
   1b014:	ldr	r3, [pc, #260]	; 1b120 <main@@Base+0x16ce8>
   1b018:	add	r1, pc, r1
   1b01c:	add	r3, pc, r3
   1b020:	bl	42e4 <g_assertion_message_expr@plt>
   1b024:	mov	r4, r0
   1b028:	ldr	r2, [sp, #28]
   1b02c:	cmp	r2, #0
   1b030:	beq	1b03c <main@@Base+0x16c04>
   1b034:	ldr	r0, [sp, #28]
   1b038:	bl	3ee8 <g_hash_table_unref@plt>
   1b03c:	cmp	r6, #0
   1b040:	beq	1b04c <main@@Base+0x16c14>
   1b044:	mov	r0, r6
   1b048:	bl	4224 <g_ptr_array_unref@plt>
   1b04c:	mov	r0, r4
   1b050:	bl	42f0 <_Unwind_Resume@plt>
   1b054:	cmp	r9, #0
   1b058:	beq	1adfc <main@@Base+0x169c4>
   1b05c:	mov	r0, r9
   1b060:	bl	414c <g_bytes_unref@plt>
   1b064:	b	1adfc <main@@Base+0x169c4>
   1b068:	mov	r0, r4
   1b06c:	mov	r1, #100	; 0x64
   1b070:	bl	197e0 <main@@Base+0x153a8>
   1b074:	mov	r0, r4
   1b078:	mov	r1, #1
   1b07c:	bl	193dc <main@@Base+0x14fa4>
   1b080:	mov	r4, #1
   1b084:	b	1ae00 <main@@Base+0x169c8>
   1b088:	bl	3e4c <__stack_chk_fail@plt>
   1b08c:	cmp	r9, #0
   1b090:	mov	r4, r0
   1b094:	beq	1b028 <main@@Base+0x16bf0>
   1b098:	mov	r0, r9
   1b09c:	bl	414c <g_bytes_unref@plt>
   1b0a0:	b	1b028 <main@@Base+0x16bf0>
   1b0a4:	mov	r4, r0
   1b0a8:	mov	r6, #0
   1b0ac:	b	1b03c <main@@Base+0x16c04>
   1b0b0:	b	1b0a4 <main@@Base+0x16c6c>
   1b0b4:	b	1b0a4 <main@@Base+0x16c6c>
   1b0b8:	mov	r4, r0
   1b0bc:	b	1b03c <main@@Base+0x16c04>
   1b0c0:	b	1b0a4 <main@@Base+0x16c6c>
   1b0c4:	b	1b0a4 <main@@Base+0x16c6c>
   1b0c8:	b	1b0b8 <main@@Base+0x16c80>
   1b0cc:	andeq	r4, r2, r8, lsr r0
   1b0d0:	andeq	r0, r0, r0, lsr r4
   1b0d4:	andeq	lr, r0, r0, lsl #20
   1b0d8:	andeq	r0, r0, r0, lsr #8
   1b0dc:	andeq	r0, r0, r8, lsr #8
   1b0e0:	andeq	sl, r0, r8, ror r2
   1b0e4:	andeq	lr, r0, r4, lsl #22
   1b0e8:	andeq	sl, r0, r8, ror r1
   1b0ec:	andeq	lr, r0, ip, lsr #20
   1b0f0:	andeq	sl, r0, ip, ror #2
   1b0f4:	muleq	r0, r8, r9
   1b0f8:	andeq	lr, r0, r0, ror r9
   1b0fc:	muleq	r0, ip, r8
   1b100:	muleq	r0, r4, r8
   1b104:	ldrdeq	lr, [r0], -ip
   1b108:	ldrdeq	r9, [r0], -ip
   1b10c:	ldrdeq	r9, [r0], -r4
   1b110:	ldrdeq	lr, [r0], -r8
   1b114:	ldrdeq	lr, [r0], -r8
   1b118:	andeq	r9, r0, ip, ror lr
   1b11c:	andeq	lr, r0, r4, lsr #15
   1b120:	andeq	lr, r0, r4, asr r6
   1b124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b128:	sub	sp, sp, #44	; 0x2c
   1b12c:	mov	r8, r3
   1b130:	mov	r9, r0
   1b134:	str	r1, [sp, #16]
   1b138:	str	r2, [sp, #28]
   1b13c:	bl	197c8 <main@@Base+0x15390>
   1b140:	ldr	r4, [pc, #964]	; 1b50c <main@@Base+0x170d4>
   1b144:	add	r4, pc, r4
   1b148:	str	r0, [sp, #36]	; 0x24
   1b14c:	bl	c44c <main@@Base+0x8014>
   1b150:	ldr	r2, [sp, #28]
   1b154:	ldr	r1, [sp, #16]
   1b158:	cmp	r2, #0
   1b15c:	moveq	r2, r8
   1b160:	str	r2, [sp, #32]
   1b164:	str	r0, [sp, #12]
   1b168:	mov	r0, r9
   1b16c:	bl	18260 <main@@Base+0x13e28>
   1b170:	subs	r5, r0, #0
   1b174:	beq	1b3d0 <main@@Base+0x16f98>
   1b178:	bl	17ae4 <main@@Base+0x136ac>
   1b17c:	ldr	r2, [sp, #16]
   1b180:	mov	r3, r0
   1b184:	ldr	r0, [pc, #900]	; 1b510 <main@@Base+0x170d8>
   1b188:	mov	r1, #128	; 0x80
   1b18c:	str	r2, [sp]
   1b190:	add	r0, pc, r0
   1b194:	ldr	r2, [pc, #888]	; 1b514 <main@@Base+0x170dc>
   1b198:	add	r2, pc, r2
   1b19c:	bl	3a38 <g_log@plt>
   1b1a0:	mov	r0, r5
   1b1a4:	mov	r1, #1
   1b1a8:	bl	17b7c <main@@Base+0x13744>
   1b1ac:	cmp	r0, #0
   1b1b0:	beq	1b2dc <main@@Base+0x16ea4>
   1b1b4:	mov	r0, r9
   1b1b8:	mov	r1, #9
   1b1bc:	bl	193dc <main@@Base+0x14fa4>
   1b1c0:	ldr	r0, [pc, #848]	; 1b518 <main@@Base+0x170e0>
   1b1c4:	mov	r1, #128	; 0x80
   1b1c8:	ldr	r2, [pc, #844]	; 1b51c <main@@Base+0x170e4>
   1b1cc:	add	r0, pc, r0
   1b1d0:	ldr	r3, [sp, #16]
   1b1d4:	add	r2, pc, r2
   1b1d8:	bl	3a38 <g_log@plt>
   1b1dc:	mov	r0, r9
   1b1e0:	ldr	r1, [sp, #16]
   1b1e4:	ldr	r2, [sp, #80]	; 0x50
   1b1e8:	bl	1aa58 <main@@Base+0x16620>
   1b1ec:	cmp	r0, #0
   1b1f0:	beq	1b300 <main@@Base+0x16ec8>
   1b1f4:	ldr	r0, [sp, #36]	; 0x24
   1b1f8:	ldr	r1, [sp, #80]	; 0x50
   1b1fc:	bl	f4bc <main@@Base+0xb084>
   1b200:	cmp	r0, #0
   1b204:	beq	1b300 <main@@Base+0x16ec8>
   1b208:	ldr	r3, [pc, #784]	; 1b520 <main@@Base+0x170e8>
   1b20c:	ldr	r0, [r4, r3]
   1b210:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   1b214:	ldr	r2, [pc, #776]	; 1b524 <main@@Base+0x170ec>
   1b218:	mov	r5, #0
   1b21c:	ldr	r3, [pc, #772]	; 1b528 <main@@Base+0x170f0>
   1b220:	mov	fp, r0
   1b224:	add	r2, pc, r2
   1b228:	ldr	r7, [sp, #16]
   1b22c:	add	r3, pc, r3
   1b230:	mov	r6, r5
   1b234:	str	r2, [sp, #20]
   1b238:	str	r3, [sp, #24]
   1b23c:	b	1b268 <main@@Base+0x16e30>
   1b240:	ldr	r2, [sp, #12]
   1b244:	cmp	r4, r2
   1b248:	bcc	1b310 <main@@Base+0x16ed8>
   1b24c:	cmp	r8, #0
   1b250:	cmpne	r6, r8
   1b254:	bhi	1b310 <main@@Base+0x16ed8>
   1b258:	add	r5, r5, #1
   1b25c:	movw	r3, #65535	; 0xffff
   1b260:	cmp	r5, r3
   1b264:	beq	1b310 <main@@Base+0x16ed8>
   1b268:	add	r1, r5, #2
   1b26c:	mov	r0, r9
   1b270:	mov	r2, #0
   1b274:	ldr	r3, [sp, #80]	; 0x50
   1b278:	uxth	r1, r1
   1b27c:	bl	191b8 <main@@Base+0x14d80>
   1b280:	subs	sl, r0, #0
   1b284:	beq	1b420 <main@@Base+0x16fe8>
   1b288:	bl	3f24 <g_bytes_get_size@plt>
   1b28c:	mov	r4, r0
   1b290:	mov	r1, #128	; 0x80
   1b294:	ldr	r0, [sp, #20]
   1b298:	mov	r3, r5
   1b29c:	str	r4, [sp, #4]
   1b2a0:	str	r7, [sp]
   1b2a4:	ldr	r2, [sp, #24]
   1b2a8:	bl	3a38 <g_log@plt>
   1b2ac:	mov	r1, sl
   1b2b0:	mov	r0, fp
   1b2b4:	bl	426c <g_ptr_array_add@plt>
   1b2b8:	cmp	r4, #0
   1b2bc:	add	r6, r6, r4
   1b2c0:	add	r7, r7, r4
   1b2c4:	beq	1b240 <main@@Base+0x16e08>
   1b2c8:	mov	r0, r9
   1b2cc:	mov	r1, r6
   1b2d0:	ldr	r2, [sp, #32]
   1b2d4:	bl	19860 <main@@Base+0x15428>
   1b2d8:	b	1b240 <main@@Base+0x16e08>
   1b2dc:	bl	40a4 <fwupd_error_quark@plt>
   1b2e0:	ldr	r3, [sp, #16]
   1b2e4:	mov	r1, r0
   1b2e8:	mov	r2, #10
   1b2ec:	ldr	r0, [sp, #80]	; 0x50
   1b2f0:	str	r3, [sp]
   1b2f4:	ldr	r3, [pc, #560]	; 1b52c <main@@Base+0x170f4>
   1b2f8:	add	r3, pc, r3
   1b2fc:	bl	4350 <g_set_error@plt>
   1b300:	mov	r4, #0
   1b304:	mov	r0, r4
   1b308:	add	sp, sp, #44	; 0x2c
   1b30c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b310:	ldr	r0, [sp, #36]	; 0x24
   1b314:	ldr	r1, [sp, #80]	; 0x50
   1b318:	bl	f4bc <main@@Base+0xb084>
   1b31c:	cmp	r0, #0
   1b320:	beq	1b420 <main@@Base+0x16fe8>
   1b324:	ldr	r2, [sp, #28]
   1b328:	cmp	r2, #0
   1b32c:	beq	1b338 <main@@Base+0x16f00>
   1b330:	cmp	r6, r2
   1b334:	bcc	1b3f8 <main@@Base+0x16fc0>
   1b338:	mov	r0, r9
   1b33c:	mov	r1, #100	; 0x64
   1b340:	bl	197e0 <main@@Base+0x153a8>
   1b344:	mov	r0, r9
   1b348:	mov	r1, #1
   1b34c:	bl	193dc <main@@Base+0x14fa4>
   1b350:	mov	r0, fp
   1b354:	bl	bc10 <main@@Base+0x77d8>
   1b358:	ldr	r2, [sp, #28]
   1b35c:	mov	r6, r0
   1b360:	cmp	r2, #0
   1b364:	beq	1b430 <main@@Base+0x16ff8>
   1b368:	ldr	r2, [sp, #28]
   1b36c:	mov	r1, #0
   1b370:	bl	3b40 <g_bytes_new_from_bytes@plt>
   1b374:	mov	r5, r0
   1b378:	bl	109bc <main@@Base+0xc584>
   1b37c:	mov	r1, r5
   1b380:	mov	r4, r0
   1b384:	bl	10ae8 <main@@Base+0xc6b0>
   1b388:	mov	r0, r4
   1b38c:	ldr	r1, [sp, #16]
   1b390:	bl	10bcc <main@@Base+0xc794>
   1b394:	cmp	fp, #0
   1b398:	beq	1b3a4 <main@@Base+0x16f6c>
   1b39c:	mov	r0, fp
   1b3a0:	bl	4224 <g_ptr_array_unref@plt>
   1b3a4:	cmp	r5, #0
   1b3a8:	beq	1b3b4 <main@@Base+0x16f7c>
   1b3ac:	mov	r0, r5
   1b3b0:	bl	414c <g_bytes_unref@plt>
   1b3b4:	cmp	r6, #0
   1b3b8:	beq	1b304 <main@@Base+0x16ecc>
   1b3bc:	mov	r0, r6
   1b3c0:	bl	414c <g_bytes_unref@plt>
   1b3c4:	mov	r0, r4
   1b3c8:	add	sp, sp, #44	; 0x2c
   1b3cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3d0:	bl	40a4 <fwupd_error_quark@plt>
   1b3d4:	ldr	r2, [sp, #16]
   1b3d8:	mov	r1, r0
   1b3dc:	ldr	r3, [pc, #332]	; 1b530 <main@@Base+0x170f8>
   1b3e0:	ldr	r0, [sp, #80]	; 0x50
   1b3e4:	str	r2, [sp]
   1b3e8:	add	r3, pc, r3
   1b3ec:	mov	r2, #10
   1b3f0:	bl	4350 <g_set_error@plt>
   1b3f4:	b	1b300 <main@@Base+0x16ec8>
   1b3f8:	bl	40a4 <fwupd_error_quark@plt>
   1b3fc:	ldr	r3, [sp, #28]
   1b400:	mov	r1, r0
   1b404:	str	r6, [sp]
   1b408:	mov	r2, #7
   1b40c:	ldr	r0, [sp, #80]	; 0x50
   1b410:	str	r3, [sp, #4]
   1b414:	ldr	r3, [pc, #280]	; 1b534 <main@@Base+0x170fc>
   1b418:	add	r3, pc, r3
   1b41c:	bl	4350 <g_set_error@plt>
   1b420:	mov	r5, #0
   1b424:	mov	r6, r5
   1b428:	mov	r4, r5
   1b42c:	b	1b394 <main@@Base+0x16f5c>
   1b430:	bl	40ec <g_bytes_ref@plt>
   1b434:	b	1b374 <main@@Base+0x16f3c>
   1b438:	mov	r5, #0
   1b43c:	mov	r4, r0
   1b440:	mov	r6, r5
   1b444:	cmp	fp, #0
   1b448:	beq	1b454 <main@@Base+0x1701c>
   1b44c:	mov	r0, fp
   1b450:	bl	4224 <g_ptr_array_unref@plt>
   1b454:	cmp	r5, #0
   1b458:	beq	1b464 <main@@Base+0x1702c>
   1b45c:	mov	r0, r5
   1b460:	bl	414c <g_bytes_unref@plt>
   1b464:	cmp	r6, #0
   1b468:	beq	1b474 <main@@Base+0x1703c>
   1b46c:	mov	r0, r6
   1b470:	bl	414c <g_bytes_unref@plt>
   1b474:	mov	r0, r4
   1b478:	bl	42f0 <_Unwind_Resume@plt>
   1b47c:	b	1b438 <main@@Base+0x17000>
   1b480:	b	1b438 <main@@Base+0x17000>
   1b484:	mov	r6, #0
   1b488:	mov	r4, r0
   1b48c:	mov	r5, r6
   1b490:	b	1b454 <main@@Base+0x1701c>
   1b494:	b	1b484 <main@@Base+0x1704c>
   1b498:	b	1b484 <main@@Base+0x1704c>
   1b49c:	b	1b484 <main@@Base+0x1704c>
   1b4a0:	b	1b484 <main@@Base+0x1704c>
   1b4a4:	b	1b438 <main@@Base+0x17000>
   1b4a8:	b	1b438 <main@@Base+0x17000>
   1b4ac:	b	1b438 <main@@Base+0x17000>
   1b4b0:	b	1b484 <main@@Base+0x1704c>
   1b4b4:	b	1b484 <main@@Base+0x1704c>
   1b4b8:	b	1b484 <main@@Base+0x1704c>
   1b4bc:	b	1b484 <main@@Base+0x1704c>
   1b4c0:	b	1b438 <main@@Base+0x17000>
   1b4c4:	b	1b484 <main@@Base+0x1704c>
   1b4c8:	b	1b484 <main@@Base+0x1704c>
   1b4cc:	b	1b438 <main@@Base+0x17000>
   1b4d0:	mov	r4, r0
   1b4d4:	mov	r5, #0
   1b4d8:	b	1b444 <main@@Base+0x1700c>
   1b4dc:	b	1b484 <main@@Base+0x1704c>
   1b4e0:	b	1b484 <main@@Base+0x1704c>
   1b4e4:	mov	r4, r0
   1b4e8:	b	1b464 <main@@Base+0x1702c>
   1b4ec:	mov	r4, r0
   1b4f0:	b	1b454 <main@@Base+0x1701c>
   1b4f4:	mov	r4, r0
   1b4f8:	b	1b444 <main@@Base+0x1700c>
   1b4fc:	b	1b4d0 <main@@Base+0x17098>
   1b500:	b	1b438 <main@@Base+0x17000>
   1b504:	b	1b438 <main@@Base+0x17000>
   1b508:	b	1b438 <main@@Base+0x17000>
   1b50c:	andeq	r3, r2, ip, lsr sl
   1b510:	strdeq	r9, [r0], -ip
   1b514:	andeq	lr, r0, r4, asr r6
   1b518:	andeq	r9, r0, r0, asr #25
   1b51c:	andeq	lr, r0, r0, ror #12
   1b520:	andeq	r0, r0, r8, asr r4
   1b524:	andeq	r9, r0, r8, ror #24
   1b528:	andeq	lr, r0, r8, lsr #12
   1b52c:	andeq	lr, r0, r4, lsl r5
   1b530:	strdeq	lr, [r0], -r4
   1b534:	muleq	r0, ip, r0
   1b538:	ldr	r0, [pc, #148]	; 1b5d4 <main@@Base+0x1719c>
   1b53c:	push	{r4, r5, r6, lr}
   1b540:	add	r0, pc, r0
   1b544:	dmb	sy
   1b548:	sub	sp, sp, #16
   1b54c:	ldr	r4, [r0, #8]
   1b550:	dmb	sy
   1b554:	cmp	r4, #0
   1b558:	beq	1b570 <main@@Base+0x17138>
   1b55c:	ldr	r3, [pc, #116]	; 1b5d8 <main@@Base+0x171a0>
   1b560:	add	r3, pc, r3
   1b564:	ldr	r0, [r3, #8]
   1b568:	add	sp, sp, #16
   1b56c:	pop	{r4, r5, r6, pc}
   1b570:	add	r5, r0, #8
   1b574:	mov	r0, r5
   1b578:	bl	3d50 <g_once_init_enter@plt>
   1b57c:	cmp	r0, #0
   1b580:	beq	1b55c <main@@Base+0x17124>
   1b584:	bl	17f2c <main@@Base+0x13af4>
   1b588:	mov	r6, r0
   1b58c:	ldr	r0, [pc, #72]	; 1b5dc <main@@Base+0x171a4>
   1b590:	add	r0, pc, r0
   1b594:	bl	3df8 <g_intern_static_string@plt>
   1b598:	ldr	ip, [pc, #64]	; 1b5e0 <main@@Base+0x171a8>
   1b59c:	mov	r3, #16
   1b5a0:	str	r4, [sp, #8]
   1b5a4:	add	ip, pc, ip
   1b5a8:	stm	sp, {r3, ip}
   1b5ac:	ldr	r3, [pc, #48]	; 1b5e4 <main@@Base+0x171ac>
   1b5b0:	mov	r2, #164	; 0xa4
   1b5b4:	add	r3, pc, r3
   1b5b8:	mov	r1, r0
   1b5bc:	mov	r0, r6
   1b5c0:	bl	3894 <g_type_register_static_simple@plt>
   1b5c4:	mov	r1, r0
   1b5c8:	mov	r0, r5
   1b5cc:	bl	4140 <g_once_init_leave@plt>
   1b5d0:	b	1b55c <main@@Base+0x17124>
   1b5d4:	andeq	r3, r2, r4, lsr #22
   1b5d8:	andeq	r3, r2, r4, lsl #22
   1b5dc:	andeq	lr, r0, r8, ror #5
   1b5e0:			; <UNDEFINED> instruction: 0xfffff310
   1b5e4:			; <UNDEFINED> instruction: 0xfffff414
   1b5e8:	push	{r3, lr}
   1b5ec:	bl	1b538 <main@@Base+0x17100>
   1b5f0:	mov	r1, #0
   1b5f4:	pop	{r3, lr}
   1b5f8:	b	3804 <g_object_new@plt>
   1b5fc:	bx	lr
   1b600:	ldr	ip, [pc, #288]	; 1b728 <main@@Base+0x172f0>
   1b604:	push	{r4, r5, r6, r7, r8, lr}
   1b608:	mov	r6, r1
   1b60c:	ldr	r1, [pc, #280]	; 1b72c <main@@Base+0x172f4>
   1b610:	add	ip, pc, ip
   1b614:	sub	sp, sp, #8
   1b618:	mov	r7, r2
   1b61c:	mov	r8, r0
   1b620:	ldr	r4, [ip, r1]
   1b624:	ldr	r1, [r4]
   1b628:	str	r1, [sp, #4]
   1b62c:	bl	197c8 <main@@Base+0x15390>
   1b630:	mov	r1, #4096	; 0x1000
   1b634:	bl	c688 <main@@Base+0x8250>
   1b638:	subs	r3, r0, #0
   1b63c:	beq	1b678 <main@@Base+0x17240>
   1b640:	ldr	r0, [pc, #232]	; 1b730 <main@@Base+0x172f8>
   1b644:	mov	r1, #128	; 0x80
   1b648:	ldr	r2, [pc, #228]	; 1b734 <main@@Base+0x172fc>
   1b64c:	mov	r6, #1
   1b650:	add	r0, pc, r0
   1b654:	add	r2, pc, r2
   1b658:	bl	3a38 <g_log@plt>
   1b65c:	ldr	r2, [sp, #4]
   1b660:	mov	r0, r6
   1b664:	ldr	r3, [r4]
   1b668:	cmp	r2, r3
   1b66c:	bne	1b708 <main@@Base+0x172d0>
   1b670:	add	sp, sp, #8
   1b674:	pop	{r4, r5, r6, r7, r8, pc}
   1b678:	mov	r1, #4
   1b67c:	mov	r0, sp
   1b680:	mov	r2, #6
   1b684:	strb	r3, [sp, #2]
   1b688:	strb	r2, [sp]
   1b68c:	mov	r3, #3
   1b690:	strb	r6, [sp, #3]
   1b694:	strb	r3, [sp, #1]
   1b698:	bl	40f8 <g_bytes_new_static@plt>
   1b69c:	ldr	r2, [pc, #148]	; 1b738 <main@@Base+0x17300>
   1b6a0:	mov	r3, r6
   1b6a4:	mov	r1, #128	; 0x80
   1b6a8:	add	r2, pc, r2
   1b6ac:	mov	r5, r0
   1b6b0:	ldr	r0, [pc, #132]	; 1b73c <main@@Base+0x17304>
   1b6b4:	add	r0, pc, r0
   1b6b8:	bl	3a38 <g_log@plt>
   1b6bc:	mov	r0, r8
   1b6c0:	mov	r1, #0
   1b6c4:	mov	r2, r5
   1b6c8:	mov	r3, r7
   1b6cc:	bl	194b4 <main@@Base+0x1507c>
   1b6d0:	cmp	r0, #0
   1b6d4:	movne	r6, #1
   1b6d8:	beq	1b6f0 <main@@Base+0x172b8>
   1b6dc:	cmp	r5, #0
   1b6e0:	beq	1b65c <main@@Base+0x17224>
   1b6e4:	mov	r0, r5
   1b6e8:	bl	414c <g_bytes_unref@plt>
   1b6ec:	b	1b65c <main@@Base+0x17224>
   1b6f0:	ldr	r1, [pc, #72]	; 1b740 <main@@Base+0x17308>
   1b6f4:	mov	r0, r7
   1b6f8:	add	r1, pc, r1
   1b6fc:	bl	4404 <g_prefix_error@plt>
   1b700:	mov	r6, #0
   1b704:	b	1b6dc <main@@Base+0x172a4>
   1b708:	bl	3e4c <__stack_chk_fail@plt>
   1b70c:	cmp	r5, #0
   1b710:	mov	r4, r0
   1b714:	beq	1b720 <main@@Base+0x172e8>
   1b718:	mov	r0, r5
   1b71c:	bl	414c <g_bytes_unref@plt>
   1b720:	mov	r0, r4
   1b724:	bl	42f0 <_Unwind_Resume@plt>
   1b728:	andeq	r3, r2, r0, ror r5
   1b72c:	andeq	r0, r0, r0, lsr r4
   1b730:	andeq	r9, r0, ip, lsr r8
   1b734:	andeq	lr, r0, ip, ror #4
   1b738:	andeq	lr, r0, r8, asr #4
   1b73c:	ldrdeq	r9, [r0], -r8
   1b740:	andeq	lr, r0, r8, lsl r2
   1b744:	ldr	r3, [pc, #292]	; 1b870 <main@@Base+0x17438>
   1b748:	cmp	r1, #255	; 0xff
   1b74c:	ldr	ip, [pc, #288]	; 1b874 <main@@Base+0x1743c>
   1b750:	add	r3, pc, r3
   1b754:	push	{r4, r5, r6, r7, r8, lr}
   1b758:	mov	r4, r1
   1b75c:	ldr	r5, [r3, ip]
   1b760:	mov	r1, r3
   1b764:	sub	sp, sp, #16
   1b768:	mov	r8, r0
   1b76c:	mov	r7, r2
   1b770:	ldr	r3, [r5]
   1b774:	str	r3, [sp, #12]
   1b778:	bls	1b7bc <main@@Base+0x17384>
   1b77c:	bl	40a4 <fwupd_error_quark@plt>
   1b780:	ldr	r3, [pc, #240]	; 1b878 <main@@Base+0x17440>
   1b784:	str	r4, [sp]
   1b788:	mov	r2, #7
   1b78c:	add	r3, pc, r3
   1b790:	mov	r4, #0
   1b794:	mov	r1, r0
   1b798:	mov	r0, r7
   1b79c:	bl	4350 <g_set_error@plt>
   1b7a0:	ldr	r2, [sp, #12]
   1b7a4:	mov	r0, r4
   1b7a8:	ldr	r3, [r5]
   1b7ac:	cmp	r2, r3
   1b7b0:	bne	1b850 <main@@Base+0x17418>
   1b7b4:	add	sp, sp, #16
   1b7b8:	pop	{r4, r5, r6, r7, r8, pc}
   1b7bc:	mov	r1, #4
   1b7c0:	add	r0, sp, #8
   1b7c4:	mov	r2, #6
   1b7c8:	mov	r3, #3
   1b7cc:	strb	r2, [sp, #8]
   1b7d0:	strb	r3, [sp, #9]
   1b7d4:	mov	r3, #0
   1b7d8:	strb	r4, [sp, #11]
   1b7dc:	strb	r3, [sp, #10]
   1b7e0:	bl	40f8 <g_bytes_new_static@plt>
   1b7e4:	ldr	r2, [pc, #144]	; 1b87c <main@@Base+0x17444>
   1b7e8:	mov	r3, r4
   1b7ec:	mov	r1, #128	; 0x80
   1b7f0:	add	r2, pc, r2
   1b7f4:	mov	r6, r0
   1b7f8:	ldr	r0, [pc, #128]	; 1b880 <main@@Base+0x17448>
   1b7fc:	add	r0, pc, r0
   1b800:	bl	3a38 <g_log@plt>
   1b804:	mov	r0, r8
   1b808:	mov	r1, #0
   1b80c:	mov	r2, r6
   1b810:	mov	r3, r7
   1b814:	bl	194b4 <main@@Base+0x1507c>
   1b818:	cmp	r0, #0
   1b81c:	movne	r4, #1
   1b820:	beq	1b838 <main@@Base+0x17400>
   1b824:	cmp	r6, #0
   1b828:	beq	1b7a0 <main@@Base+0x17368>
   1b82c:	mov	r0, r6
   1b830:	bl	414c <g_bytes_unref@plt>
   1b834:	b	1b7a0 <main@@Base+0x17368>
   1b838:	ldr	r1, [pc, #68]	; 1b884 <main@@Base+0x1744c>
   1b83c:	mov	r0, r7
   1b840:	add	r1, pc, r1
   1b844:	bl	4404 <g_prefix_error@plt>
   1b848:	mov	r4, #0
   1b84c:	b	1b824 <main@@Base+0x173ec>
   1b850:	bl	3e4c <__stack_chk_fail@plt>
   1b854:	cmp	r6, #0
   1b858:	mov	r4, r0
   1b85c:	beq	1b868 <main@@Base+0x17430>
   1b860:	mov	r0, r6
   1b864:	bl	414c <g_bytes_unref@plt>
   1b868:	mov	r0, r4
   1b86c:	bl	42f0 <_Unwind_Resume@plt>
   1b870:	andeq	r3, r2, r0, lsr r4
   1b874:	andeq	r0, r0, r0, lsr r4
   1b878:	andeq	lr, r0, r0, lsr #3
   1b87c:	andeq	lr, r0, ip, ror r1
   1b880:	muleq	r0, r0, r6
   1b884:	andeq	lr, r0, ip, asr #2
   1b888:	ldr	ip, [pc, #248]	; 1b988 <main@@Base+0x17550>
   1b88c:	ldr	r3, [pc, #248]	; 1b98c <main@@Base+0x17554>
   1b890:	add	ip, pc, ip
   1b894:	push	{r4, r5, r6, r7, r8, lr}
   1b898:	sub	sp, sp, #16
   1b89c:	ldr	r5, [ip, r3]
   1b8a0:	mov	r3, #3
   1b8a4:	strb	r3, [sp, #5]
   1b8a8:	mov	r7, r0
   1b8ac:	mov	r6, r2
   1b8b0:	add	r0, sp, #7
   1b8b4:	ldr	r3, [r5]
   1b8b8:	movw	r2, #4321	; 0x10e1
   1b8bc:	mov	lr, #6
   1b8c0:	mov	ip, #1
   1b8c4:	mov	r8, r1
   1b8c8:	strb	lr, [sp, #4]
   1b8cc:	str	r3, [sp, #12]
   1b8d0:	strb	ip, [sp, #6]
   1b8d4:	bl	1e2b8 <main@@Base+0x19e80>
   1b8d8:	mov	r1, #5
   1b8dc:	add	r0, sp, #4
   1b8e0:	bl	40f8 <g_bytes_new_static@plt>
   1b8e4:	ldr	r2, [pc, #164]	; 1b990 <main@@Base+0x17558>
   1b8e8:	mov	r3, r8
   1b8ec:	mov	r1, #128	; 0x80
   1b8f0:	add	r2, pc, r2
   1b8f4:	mov	r4, r0
   1b8f8:	ldr	r0, [pc, #148]	; 1b994 <main@@Base+0x1755c>
   1b8fc:	add	r0, pc, r0
   1b900:	bl	3a38 <g_log@plt>
   1b904:	mov	r0, r7
   1b908:	mov	r1, #0
   1b90c:	mov	r2, r4
   1b910:	mov	r3, r6
   1b914:	bl	194b4 <main@@Base+0x1507c>
   1b918:	cmp	r0, #0
   1b91c:	movne	r6, #1
   1b920:	beq	1b950 <main@@Base+0x17518>
   1b924:	cmp	r4, #0
   1b928:	beq	1b934 <main@@Base+0x174fc>
   1b92c:	mov	r0, r4
   1b930:	bl	414c <g_bytes_unref@plt>
   1b934:	ldr	r2, [sp, #12]
   1b938:	mov	r0, r6
   1b93c:	ldr	r3, [r5]
   1b940:	cmp	r2, r3
   1b944:	bne	1b968 <main@@Base+0x17530>
   1b948:	add	sp, sp, #16
   1b94c:	pop	{r4, r5, r6, r7, r8, pc}
   1b950:	ldr	r1, [pc, #64]	; 1b998 <main@@Base+0x17560>
   1b954:	mov	r0, r6
   1b958:	add	r1, pc, r1
   1b95c:	bl	4404 <g_prefix_error@plt>
   1b960:	mov	r6, #0
   1b964:	b	1b924 <main@@Base+0x174ec>
   1b968:	bl	3e4c <__stack_chk_fail@plt>
   1b96c:	cmp	r4, #0
   1b970:	mov	r5, r0
   1b974:	beq	1b980 <main@@Base+0x17548>
   1b978:	mov	r0, r4
   1b97c:	bl	414c <g_bytes_unref@plt>
   1b980:	mov	r0, r5
   1b984:	bl	42f0 <_Unwind_Resume@plt>
   1b988:	strdeq	r3, [r2], -r0
   1b98c:	andeq	r0, r0, r0, lsr r4
   1b990:	strheq	lr, [r0], -r8
   1b994:	muleq	r0, r0, r5
   1b998:	andeq	lr, r0, r4, lsr r0
   1b99c:	ldr	ip, [pc, #272]	; 1bab4 <main@@Base+0x1767c>
   1b9a0:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b9a4:	add	ip, pc, ip
   1b9a8:	ldr	lr, [pc, #264]	; 1bab8 <main@@Base+0x17680>
   1b9ac:	sub	sp, sp, #28
   1b9b0:	mov	r8, r3
   1b9b4:	mov	r3, #0
   1b9b8:	mov	r5, r2
   1b9bc:	mov	r9, r0
   1b9c0:	ldr	r6, [ip, lr]
   1b9c4:	add	r0, sp, #14
   1b9c8:	strb	r3, [sp, #13]
   1b9cc:	movw	r2, #4321	; 0x10e1
   1b9d0:	mov	r7, r1
   1b9d4:	mov	r4, #3
   1b9d8:	ldr	r3, [r6]
   1b9dc:	strb	r4, [sp, #12]
   1b9e0:	str	r3, [sp, #20]
   1b9e4:	bl	1e2b8 <main@@Base+0x19e80>
   1b9e8:	movw	r2, #4321	; 0x10e1
   1b9ec:	mov	r1, r5
   1b9f0:	add	r0, sp, #16
   1b9f4:	bl	1e2b8 <main@@Base+0x19e80>
   1b9f8:	mov	r1, #6
   1b9fc:	add	r0, sp, #12
   1ba00:	bl	40f8 <g_bytes_new_static@plt>
   1ba04:	ldr	r2, [pc, #176]	; 1babc <main@@Base+0x17684>
   1ba08:	str	r5, [sp]
   1ba0c:	mov	r3, r7
   1ba10:	mov	r1, #128	; 0x80
   1ba14:	add	r2, pc, r2
   1ba18:	mov	r4, r0
   1ba1c:	ldr	r0, [pc, #156]	; 1bac0 <main@@Base+0x17688>
   1ba20:	add	r0, pc, r0
   1ba24:	bl	3a38 <g_log@plt>
   1ba28:	mov	r0, r9
   1ba2c:	mov	r1, #0
   1ba30:	mov	r2, r4
   1ba34:	mov	r3, r8
   1ba38:	bl	194b4 <main@@Base+0x1507c>
   1ba3c:	cmp	r0, #0
   1ba40:	movne	r5, #1
   1ba44:	beq	1ba74 <main@@Base+0x1763c>
   1ba48:	cmp	r4, #0
   1ba4c:	beq	1ba58 <main@@Base+0x17620>
   1ba50:	mov	r0, r4
   1ba54:	bl	414c <g_bytes_unref@plt>
   1ba58:	ldr	r2, [sp, #20]
   1ba5c:	mov	r0, r5
   1ba60:	ldr	r3, [r6]
   1ba64:	cmp	r2, r3
   1ba68:	bne	1ba94 <main@@Base+0x1765c>
   1ba6c:	add	sp, sp, #28
   1ba70:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ba74:	ldr	r1, [pc, #72]	; 1bac4 <main@@Base+0x1768c>
   1ba78:	mov	r0, r8
   1ba7c:	mov	r2, r7
   1ba80:	mov	r3, r5
   1ba84:	add	r1, pc, r1
   1ba88:	bl	4404 <g_prefix_error@plt>
   1ba8c:	mov	r5, #0
   1ba90:	b	1ba48 <main@@Base+0x17610>
   1ba94:	bl	3e4c <__stack_chk_fail@plt>
   1ba98:	cmp	r4, #0
   1ba9c:	mov	r5, r0
   1baa0:	beq	1baac <main@@Base+0x17674>
   1baa4:	mov	r0, r4
   1baa8:	bl	414c <g_bytes_unref@plt>
   1baac:	mov	r0, r5
   1bab0:	bl	42f0 <_Unwind_Resume@plt>
   1bab4:	ldrdeq	r3, [r2], -ip
   1bab8:	andeq	r0, r0, r0, lsr r4
   1babc:			; <UNDEFINED> instruction: 0x0000dfb4
   1bac0:	andeq	r9, r0, ip, ror #8
   1bac4:	andeq	sp, r0, ip, ror #30
   1bac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bacc:	sub	sp, sp, #52	; 0x34
   1bad0:	ldr	r4, [pc, #1324]	; 1c004 <main@@Base+0x17bcc>
   1bad4:	mov	r5, r1
   1bad8:	str	r2, [sp, #40]	; 0x28
   1badc:	mov	r8, r3
   1bae0:	mov	r6, r0
   1bae4:	ldr	r7, [sp, #88]	; 0x58
   1bae8:	add	r4, pc, r4
   1baec:	bl	1a5dc <main@@Base+0x161a4>
   1baf0:	mov	r1, r0
   1baf4:	mov	r2, r7
   1baf8:	mov	r0, r6
   1bafc:	bl	1b600 <main@@Base+0x171c8>
   1bb00:	cmp	r0, #0
   1bb04:	beq	1bcf4 <main@@Base+0x178bc>
   1bb08:	mov	r0, r6
   1bb0c:	bl	18b10 <main@@Base+0x146d8>
   1bb10:	cmp	r0, #0
   1bb14:	beq	1bcd8 <main@@Base+0x178a0>
   1bb18:	bl	1781c <main@@Base+0x133e4>
   1bb1c:	cmp	r0, r5
   1bb20:	bhi	1bd04 <main@@Base+0x178cc>
   1bb24:	bic	r5, r5, #-2147483648	; 0x80000000
   1bb28:	mov	r3, #1024	; 0x400
   1bb2c:	mov	r1, r8
   1bb30:	str	r3, [sp]
   1bb34:	mov	r0, #0
   1bb38:	mov	r2, r5
   1bb3c:	mov	r3, #65536	; 0x10000
   1bb40:	str	r5, [sp, #44]	; 0x2c
   1bb44:	bl	1d0d8 <main@@Base+0x18ca0>
   1bb48:	mov	r8, r0
   1bb4c:	mov	r1, #9
   1bb50:	mov	r0, r6
   1bb54:	bl	193dc <main@@Base+0x14fa4>
   1bb58:	ldr	r3, [pc, #1192]	; 1c008 <main@@Base+0x17bd0>
   1bb5c:	ldr	r0, [r4, r3]
   1bb60:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   1bb64:	mvn	r2, #0
   1bb68:	ldr	r3, [pc, #1180]	; 1c00c <main@@Base+0x17bd4>
   1bb6c:	str	r2, [sp, #20]
   1bb70:	mov	fp, r0
   1bb74:	ldr	r2, [pc, #1172]	; 1c010 <main@@Base+0x17bd8>
   1bb78:	add	r3, pc, r3
   1bb7c:	str	r3, [sp, #12]
   1bb80:	mov	r4, #0
   1bb84:	add	r2, pc, r2
   1bb88:	ldr	r3, [pc, #1156]	; 1c014 <main@@Base+0x17bdc>
   1bb8c:	str	r2, [sp, #16]
   1bb90:	movw	sl, #65535	; 0xffff
   1bb94:	ldr	r2, [pc, #1148]	; 1c018 <main@@Base+0x17be0>
   1bb98:	add	r3, pc, r3
   1bb9c:	str	r3, [sp, #24]
   1bba0:	add	r2, pc, r2
   1bba4:	ldr	r3, [pc, #1136]	; 1c01c <main@@Base+0x17be4>
   1bba8:	str	r2, [sp, #28]
   1bbac:	ldr	r2, [pc, #1132]	; 1c020 <main@@Base+0x17be8>
   1bbb0:	add	r3, pc, r3
   1bbb4:	str	r3, [sp, #32]
   1bbb8:	add	r2, pc, r2
   1bbbc:	str	r2, [sp, #36]	; 0x24
   1bbc0:	b	1bbf8 <main@@Base+0x177c0>
   1bbc4:	ldr	ip, [r5, #4]
   1bbc8:	mov	r1, #128	; 0x80
   1bbcc:	ldr	r0, [sp, #32]
   1bbd0:	mov	r3, r4
   1bbd4:	ldr	r2, [sp, #36]	; 0x24
   1bbd8:	str	ip, [sp]
   1bbdc:	bl	3a38 <g_log@plt>
   1bbe0:	str	r4, [sp, #20]
   1bbe4:	add	r4, r4, #1
   1bbe8:	mov	r0, r6
   1bbec:	ldr	r2, [r8, #4]
   1bbf0:	mov	r1, r4
   1bbf4:	bl	19860 <main@@Base+0x15428>
   1bbf8:	ldr	r3, [r8, #4]
   1bbfc:	cmp	r4, r3
   1bc00:	bcs	1bd88 <main@@Base+0x17950>
   1bc04:	ldr	r3, [r8]
   1bc08:	ldr	r5, [r3, r4, lsl #2]
   1bc0c:	ldr	r3, [r5, #4]
   1bc10:	cmp	r3, sl
   1bc14:	beq	1bc4c <main@@Base+0x17814>
   1bc18:	mov	r0, r6
   1bc1c:	bl	197c8 <main@@Base+0x15390>
   1bc20:	mov	r1, #4096	; 0x1000
   1bc24:	bl	c688 <main@@Base+0x8250>
   1bc28:	cmp	r0, #0
   1bc2c:	beq	1bd24 <main@@Base+0x178ec>
   1bc30:	mov	r0, r6
   1bc34:	ldrh	r1, [r5, #4]
   1bc38:	mov	r2, r7
   1bc3c:	bl	1b744 <main@@Base+0x1730c>
   1bc40:	cmp	r0, #0
   1bc44:	beq	1bd38 <main@@Base+0x17900>
   1bc48:	ldrh	sl, [r5, #4]
   1bc4c:	ldrh	r1, [r5, #8]
   1bc50:	mov	r0, r6
   1bc54:	ldr	r2, [r5, #16]
   1bc58:	mov	r3, r7
   1bc5c:	add	r2, r1, r2
   1bc60:	sub	r2, r2, #1
   1bc64:	uxth	r2, r2
   1bc68:	bl	1b99c <main@@Base+0x17564>
   1bc6c:	cmp	r0, #0
   1bc70:	beq	1bd38 <main@@Base+0x17900>
   1bc74:	ldr	r0, [sp, #12]
   1bc78:	mov	r1, #128	; 0x80
   1bc7c:	ldr	r2, [sp, #16]
   1bc80:	mov	r3, #1024	; 0x400
   1bc84:	bl	3a38 <g_log@plt>
   1bc88:	mov	r0, r6
   1bc8c:	uxth	r1, r4
   1bc90:	mov	r2, #1024	; 0x400
   1bc94:	mov	r3, r7
   1bc98:	bl	191b8 <main@@Base+0x14d80>
   1bc9c:	subs	r9, r0, #0
   1bca0:	beq	1bd38 <main@@Base+0x17900>
   1bca4:	mov	r0, fp
   1bca8:	mov	r1, r9
   1bcac:	bl	426c <g_ptr_array_add@plt>
   1bcb0:	mov	r0, r9
   1bcb4:	bl	bd14 <main@@Base+0x78dc>
   1bcb8:	cmp	r0, #0
   1bcbc:	beq	1bbc4 <main@@Base+0x1778c>
   1bcc0:	ldr	r0, [sp, #24]
   1bcc4:	mov	r1, #128	; 0x80
   1bcc8:	ldr	r2, [sp, #28]
   1bccc:	mov	r3, r4
   1bcd0:	bl	3a38 <g_log@plt>
   1bcd4:	b	1bbe4 <main@@Base+0x177ac>
   1bcd8:	bl	40a4 <fwupd_error_quark@plt>
   1bcdc:	ldr	r3, [pc, #832]	; 1c024 <main@@Base+0x17bec>
   1bce0:	mov	r1, r0
   1bce4:	mov	r2, #10
   1bce8:	mov	r0, r7
   1bcec:	add	r3, pc, r3
   1bcf0:	bl	3ae0 <g_set_error_literal@plt>
   1bcf4:	mov	r4, #0
   1bcf8:	mov	r0, r4
   1bcfc:	add	sp, sp, #52	; 0x34
   1bd00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd04:	bl	40a4 <fwupd_error_quark@plt>
   1bd08:	ldr	r3, [pc, #792]	; 1c028 <main@@Base+0x17bf0>
   1bd0c:	mov	r1, r0
   1bd10:	mov	r2, #7
   1bd14:	mov	r0, r7
   1bd18:	add	r3, pc, r3
   1bd1c:	bl	3ae0 <g_set_error_literal@plt>
   1bd20:	b	1bcf4 <main@@Base+0x178bc>
   1bd24:	mov	r0, r6
   1bd28:	ldrh	r1, [r5, #4]
   1bd2c:	mov	r2, r7
   1bd30:	bl	1b888 <main@@Base+0x17450>
   1bd34:	b	1bc40 <main@@Base+0x17808>
   1bd38:	mov	r5, #0
   1bd3c:	mov	r6, r5
   1bd40:	mov	r4, r5
   1bd44:	cmp	fp, #0
   1bd48:	beq	1bd54 <main@@Base+0x1791c>
   1bd4c:	mov	r0, fp
   1bd50:	bl	4224 <g_ptr_array_unref@plt>
   1bd54:	mov	r0, r8
   1bd58:	bl	4224 <g_ptr_array_unref@plt>
   1bd5c:	cmp	r5, #0
   1bd60:	beq	1bd6c <main@@Base+0x17934>
   1bd64:	mov	r0, r5
   1bd68:	bl	414c <g_bytes_unref@plt>
   1bd6c:	cmp	r6, #0
   1bd70:	beq	1bcf8 <main@@Base+0x178c0>
   1bd74:	mov	r0, r6
   1bd78:	bl	414c <g_bytes_unref@plt>
   1bd7c:	mov	r0, r4
   1bd80:	add	sp, sp, #52	; 0x34
   1bd84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd88:	mov	r0, r6
   1bd8c:	mov	r1, #100	; 0x64
   1bd90:	bl	197e0 <main@@Base+0x153a8>
   1bd94:	mov	r0, r6
   1bd98:	mov	r1, #1
   1bd9c:	bl	193dc <main@@Base+0x14fa4>
   1bda0:	ldr	r3, [sp, #20]
   1bda4:	cmn	r3, #1
   1bda8:	beq	1be54 <main@@Base+0x17a1c>
   1bdac:	ldr	r2, [sp, #20]
   1bdb0:	ldr	r3, [fp, #4]
   1bdb4:	add	r4, r2, #1
   1bdb8:	cmp	r3, r4
   1bdbc:	beq	1bde8 <main@@Base+0x179b0>
   1bdc0:	ldr	r0, [pc, #612]	; 1c02c <main@@Base+0x17bf4>
   1bdc4:	mov	r1, #128	; 0x80
   1bdc8:	ldr	r2, [pc, #608]	; 1c030 <main@@Base+0x17bf8>
   1bdcc:	str	r4, [sp]
   1bdd0:	add	r0, pc, r0
   1bdd4:	add	r2, pc, r2
   1bdd8:	bl	3a38 <g_log@plt>
   1bddc:	mov	r0, fp
   1bde0:	mov	r1, r4
   1bde4:	bl	3dec <g_ptr_array_set_size@plt>
   1bde8:	mov	r0, fp
   1bdec:	bl	bc10 <main@@Base+0x77d8>
   1bdf0:	ldr	r2, [sp, #40]	; 0x28
   1bdf4:	mov	r6, r0
   1bdf8:	cmp	r2, #0
   1bdfc:	bne	1be30 <main@@Base+0x179f8>
   1be00:	mov	r0, r6
   1be04:	bl	40ec <g_bytes_ref@plt>
   1be08:	mov	r5, r0
   1be0c:	bl	109bc <main@@Base+0xc584>
   1be10:	ldr	r2, [sp, #44]	; 0x2c
   1be14:	mov	r4, r0
   1be18:	orr	r1, r2, #-2147483648	; 0x80000000
   1be1c:	bl	10bcc <main@@Base+0xc794>
   1be20:	mov	r0, r4
   1be24:	mov	r1, r5
   1be28:	bl	10ae8 <main@@Base+0xc6b0>
   1be2c:	b	1bd44 <main@@Base+0x1790c>
   1be30:	bl	3f24 <g_bytes_get_size@plt>
   1be34:	ldr	r3, [sp, #40]	; 0x28
   1be38:	cmp	r3, r0
   1be3c:	bcs	1be00 <main@@Base+0x179c8>
   1be40:	ldr	r2, [sp, #40]	; 0x28
   1be44:	mov	r0, r6
   1be48:	mov	r1, #0
   1be4c:	bl	3b40 <g_bytes_new_from_bytes@plt>
   1be50:	b	1be08 <main@@Base+0x179d0>
   1be54:	ldr	r0, [pc, #472]	; 1c034 <main@@Base+0x17bfc>
   1be58:	mov	r1, #128	; 0x80
   1be5c:	ldr	r2, [pc, #468]	; 1c038 <main@@Base+0x17c00>
   1be60:	add	r0, pc, r0
   1be64:	ldr	r3, [fp, #4]
   1be68:	add	r2, pc, r2
   1be6c:	bl	3a38 <g_log@plt>
   1be70:	mov	r0, fp
   1be74:	mov	r1, #0
   1be78:	bl	3dec <g_ptr_array_set_size@plt>
   1be7c:	b	1bde8 <main@@Base+0x179b0>
   1be80:	mov	r5, #0
   1be84:	mov	r7, r0
   1be88:	mov	r4, r5
   1be8c:	cmp	fp, #0
   1be90:	beq	1be9c <main@@Base+0x17a64>
   1be94:	mov	r0, fp
   1be98:	bl	4224 <g_ptr_array_unref@plt>
   1be9c:	cmp	r8, #0
   1bea0:	beq	1beac <main@@Base+0x17a74>
   1bea4:	mov	r0, r8
   1bea8:	bl	4224 <g_ptr_array_unref@plt>
   1beac:	cmp	r5, #0
   1beb0:	beq	1bebc <main@@Base+0x17a84>
   1beb4:	mov	r0, r5
   1beb8:	bl	414c <g_bytes_unref@plt>
   1bebc:	mov	r5, r7
   1bec0:	cmp	r6, #0
   1bec4:	beq	1bed0 <main@@Base+0x17a98>
   1bec8:	mov	r0, r6
   1becc:	bl	414c <g_bytes_unref@plt>
   1bed0:	cmp	r4, #0
   1bed4:	beq	1bee0 <main@@Base+0x17aa8>
   1bed8:	mov	r0, r4
   1bedc:	bl	4110 <g_object_unref@plt>
   1bee0:	mov	r0, r5
   1bee4:	bl	42f0 <_Unwind_Resume@plt>
   1bee8:	mov	r5, r0
   1beec:	b	1bed0 <main@@Base+0x17a98>
   1bef0:	mov	r5, #0
   1bef4:	mov	r7, r0
   1bef8:	mov	r6, r5
   1befc:	mov	r4, r5
   1bf00:	b	1be8c <main@@Base+0x17a54>
   1bf04:	b	1bef0 <main@@Base+0x17ab8>
   1bf08:	mov	r4, #0
   1bf0c:	mov	r7, r0
   1bf10:	mov	r6, r4
   1bf14:	mov	r5, r4
   1bf18:	b	1be94 <main@@Base+0x17a5c>
   1bf1c:	b	1bf08 <main@@Base+0x17ad0>
   1bf20:	b	1be80 <main@@Base+0x17a48>
   1bf24:	mov	r7, r0
   1bf28:	b	1be9c <main@@Base+0x17a64>
   1bf2c:	mov	r7, r0
   1bf30:	b	1beac <main@@Base+0x17a74>
   1bf34:	mov	r5, r0
   1bf38:	b	1bec0 <main@@Base+0x17a88>
   1bf3c:	mov	r4, #0
   1bf40:	mov	r7, r0
   1bf44:	mov	r6, r4
   1bf48:	mov	r5, r4
   1bf4c:	mov	r8, r4
   1bf50:	b	1be9c <main@@Base+0x17a64>
   1bf54:	b	1bf3c <main@@Base+0x17b04>
   1bf58:	mov	r4, #0
   1bf5c:	mov	r7, r0
   1bf60:	mov	r6, r4
   1bf64:	mov	r5, r4
   1bf68:	b	1be9c <main@@Base+0x17a64>
   1bf6c:	b	1bf58 <main@@Base+0x17b20>
   1bf70:	mov	r5, r0
   1bf74:	mov	r4, #0
   1bf78:	b	1bec0 <main@@Base+0x17a88>
   1bf7c:	b	1bef0 <main@@Base+0x17ab8>
   1bf80:	b	1bef0 <main@@Base+0x17ab8>
   1bf84:	b	1bef0 <main@@Base+0x17ab8>
   1bf88:	b	1bf3c <main@@Base+0x17b04>
   1bf8c:	b	1bf3c <main@@Base+0x17b04>
   1bf90:	b	1bef0 <main@@Base+0x17ab8>
   1bf94:	mov	r7, r0
   1bf98:	mov	r4, #0
   1bf9c:	b	1bea4 <main@@Base+0x17a6c>
   1bfa0:	mov	r7, r0
   1bfa4:	mov	r4, #0
   1bfa8:	b	1beac <main@@Base+0x17a74>
   1bfac:	mov	r7, r0
   1bfb0:	b	1be8c <main@@Base+0x17a54>
   1bfb4:	mov	r7, r0
   1bfb8:	mov	r4, #0
   1bfbc:	b	1be8c <main@@Base+0x17a54>
   1bfc0:	b	1be80 <main@@Base+0x17a48>
   1bfc4:	b	1bef0 <main@@Base+0x17ab8>
   1bfc8:	b	1bef0 <main@@Base+0x17ab8>
   1bfcc:	b	1bef0 <main@@Base+0x17ab8>
   1bfd0:	b	1bef0 <main@@Base+0x17ab8>
   1bfd4:	b	1bef0 <main@@Base+0x17ab8>
   1bfd8:	b	1bf3c <main@@Base+0x17b04>
   1bfdc:	b	1bf3c <main@@Base+0x17b04>
   1bfe0:	b	1bf3c <main@@Base+0x17b04>
   1bfe4:	b	1bf3c <main@@Base+0x17b04>
   1bfe8:	b	1bef0 <main@@Base+0x17ab8>
   1bfec:	b	1bef0 <main@@Base+0x17ab8>
   1bff0:	b	1bef0 <main@@Base+0x17ab8>
   1bff4:	b	1bef0 <main@@Base+0x17ab8>
   1bff8:	b	1bf3c <main@@Base+0x17b04>
   1bffc:	b	1bf08 <main@@Base+0x17ad0>
   1c000:	b	1bf08 <main@@Base+0x17ad0>
   1c004:	muleq	r2, r8, r0
   1c008:	andeq	r0, r0, r8, asr r4
   1c00c:	andeq	r9, r0, r4, lsl r3
   1c010:	ldrdeq	sp, [r0], -r8
   1c014:	strdeq	r9, [r0], -r4
   1c018:	andeq	sp, r0, r0, lsl #30
   1c01c:	ldrdeq	r9, [r0], -ip
   1c020:	andeq	sp, r0, ip, asr #29
   1c024:	andeq	sp, r0, ip, lsr #26
   1c028:	andeq	sp, r0, r0, lsr #26
   1c02c:	strheq	r9, [r0], -ip
   1c030:	strdeq	sp, [r0], -r8
   1c034:	andeq	r9, r0, ip, lsr #32
   1c038:	andeq	sp, r0, ip, asr #24
   1c03c:	ldr	r2, [pc, #264]	; 1c14c <main@@Base+0x17d14>
   1c040:	ldr	r3, [pc, #264]	; 1c150 <main@@Base+0x17d18>
   1c044:	add	r2, pc, r2
   1c048:	push	{r4, r5, r6, r7, lr}
   1c04c:	sub	sp, sp, #12
   1c050:	ldr	r6, [r2, r3]
   1c054:	mov	r7, r1
   1c058:	mov	r5, r0
   1c05c:	ldr	r3, [r6]
   1c060:	str	r3, [sp, #4]
   1c064:	bl	197c8 <main@@Base+0x15390>
   1c068:	movw	r1, #5000	; 0x1388
   1c06c:	bl	d470 <main@@Base+0x9038>
   1c070:	mov	r1, #3
   1c074:	mov	r0, sp
   1c078:	mov	r2, #4
   1c07c:	mov	r3, #0
   1c080:	strb	r2, [sp]
   1c084:	strb	r3, [sp, #1]
   1c088:	mvn	r3, #0
   1c08c:	strb	r3, [sp, #2]
   1c090:	bl	40f8 <g_bytes_new_static@plt>
   1c094:	ldr	r2, [pc, #184]	; 1c154 <main@@Base+0x17d1c>
   1c098:	mov	r1, #128	; 0x80
   1c09c:	add	r2, pc, r2
   1c0a0:	mov	r4, r0
   1c0a4:	ldr	r0, [pc, #172]	; 1c158 <main@@Base+0x17d20>
   1c0a8:	add	r0, pc, r0
   1c0ac:	bl	3a38 <g_log@plt>
   1c0b0:	mov	r0, r5
   1c0b4:	mov	r1, #10
   1c0b8:	bl	193dc <main@@Base+0x14fa4>
   1c0bc:	mov	r0, r5
   1c0c0:	mov	r1, #0
   1c0c4:	mov	r2, r4
   1c0c8:	mov	r3, r7
   1c0cc:	bl	194b4 <main@@Base+0x1507c>
   1c0d0:	cmp	r0, #0
   1c0d4:	bne	1c118 <main@@Base+0x17ce0>
   1c0d8:	ldr	r1, [pc, #124]	; 1c15c <main@@Base+0x17d24>
   1c0dc:	mov	r0, r7
   1c0e0:	add	r1, pc, r1
   1c0e4:	bl	4404 <g_prefix_error@plt>
   1c0e8:	mov	r5, #0
   1c0ec:	cmp	r4, #0
   1c0f0:	beq	1c0fc <main@@Base+0x17cc4>
   1c0f4:	mov	r0, r4
   1c0f8:	bl	414c <g_bytes_unref@plt>
   1c0fc:	ldr	r2, [sp, #4]
   1c100:	mov	r0, r5
   1c104:	ldr	r3, [r6]
   1c108:	cmp	r2, r3
   1c10c:	bne	1c12c <main@@Base+0x17cf4>
   1c110:	add	sp, sp, #12
   1c114:	pop	{r4, r5, r6, r7, pc}
   1c118:	mov	r0, r5
   1c11c:	mov	r1, #1
   1c120:	bl	193dc <main@@Base+0x14fa4>
   1c124:	mov	r5, #1
   1c128:	b	1c0ec <main@@Base+0x17cb4>
   1c12c:	bl	3e4c <__stack_chk_fail@plt>
   1c130:	cmp	r4, #0
   1c134:	mov	r5, r0
   1c138:	beq	1c144 <main@@Base+0x17d0c>
   1c13c:	mov	r0, r4
   1c140:	bl	414c <g_bytes_unref@plt>
   1c144:	mov	r0, r5
   1c148:	bl	42f0 <_Unwind_Resume@plt>
   1c14c:	andeq	r2, r2, ip, lsr fp
   1c150:	andeq	r0, r0, r0, lsr r4
   1c154:	andeq	sp, r0, r0, asr sl
   1c158:	andeq	r8, r0, r4, ror #27
   1c15c:			; <UNDEFINED> instruction: 0x0000d5b0
   1c160:	ldr	r2, [pc, #1132]	; 1c5d4 <main@@Base+0x1819c>
   1c164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c168:	mov	r5, r0
   1c16c:	ldr	r0, [pc, #1124]	; 1c5d8 <main@@Base+0x181a0>
   1c170:	add	r2, pc, r2
   1c174:	sub	sp, sp, #60	; 0x3c
   1c178:	mov	r4, r1
   1c17c:	ldr	r1, [pc, #1112]	; 1c5dc <main@@Base+0x181a4>
   1c180:	mov	r8, r3
   1c184:	ldr	r0, [r2, r0]
   1c188:	add	r9, sp, #36	; 0x24
   1c18c:	add	r1, pc, r1
   1c190:	mov	ip, r9
   1c194:	str	r0, [sp, #16]
   1c198:	mov	r3, r1
   1c19c:	ldr	r6, [sp, #16]
   1c1a0:	ldr	r0, [r1]
   1c1a4:	ldr	r2, [r3, #8]
   1c1a8:	ldr	r1, [r1, #4]
   1c1ac:	ldr	r3, [r3, #12]
   1c1b0:	ldr	lr, [r6]
   1c1b4:	stmia	ip!, {r0, r1, r2, r3}
   1c1b8:	mov	r0, r5
   1c1bc:	str	lr, [sp, #52]	; 0x34
   1c1c0:	bl	1a5dc <main@@Base+0x161a4>
   1c1c4:	mov	r2, r8
   1c1c8:	mov	r1, r0
   1c1cc:	mov	r0, r5
   1c1d0:	bl	1b600 <main@@Base+0x171c8>
   1c1d4:	cmp	r0, #0
   1c1d8:	bne	1c200 <main@@Base+0x17dc8>
   1c1dc:	mov	r4, #0
   1c1e0:	ldr	fp, [sp, #16]
   1c1e4:	mov	r0, r4
   1c1e8:	ldr	r2, [sp, #52]	; 0x34
   1c1ec:	ldr	r3, [fp]
   1c1f0:	cmp	r2, r3
   1c1f4:	bne	1c55c <main@@Base+0x18124>
   1c1f8:	add	sp, sp, #60	; 0x3c
   1c1fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c200:	mov	r0, r5
   1c204:	mov	r1, r8
   1c208:	bl	1c03c <main@@Base+0x17c04>
   1c20c:	cmp	r0, #0
   1c210:	beq	1c1dc <main@@Base+0x17da4>
   1c214:	mov	r0, r4
   1c218:	bl	109d0 <main@@Base+0xc598>
   1c21c:	mov	r7, r0
   1c220:	mov	r0, r5
   1c224:	bl	18b10 <main@@Base+0x146d8>
   1c228:	subs	r6, r0, #0
   1c22c:	beq	1c534 <main@@Base+0x180fc>
   1c230:	mov	r0, r4
   1c234:	bl	10a58 <main@@Base+0xc620>
   1c238:	bic	sl, r0, #-2147483648	; 0x80000000
   1c23c:	mov	r0, r6
   1c240:	bl	1781c <main@@Base+0x133e4>
   1c244:	cmp	sl, r0
   1c248:	movcs	r4, #0
   1c24c:	bcs	1c288 <main@@Base+0x17e50>
   1c250:	mov	r0, r6
   1c254:	bl	1781c <main@@Base+0x133e4>
   1c258:	rsb	r4, sl, r0
   1c25c:	mov	r0, r6
   1c260:	bl	1781c <main@@Base+0x133e4>
   1c264:	ldr	r2, [pc, #884]	; 1c5e0 <main@@Base+0x181a8>
   1c268:	str	r4, [sp, #4]
   1c26c:	mov	r3, sl
   1c270:	mov	r1, #16
   1c274:	add	r2, pc, r2
   1c278:	str	r0, [sp]
   1c27c:	ldr	r0, [pc, #864]	; 1c5e4 <main@@Base+0x181ac>
   1c280:	add	r0, pc, r0
   1c284:	bl	3a38 <g_log@plt>
   1c288:	mov	r0, r7
   1c28c:	bl	3f24 <g_bytes_get_size@plt>
   1c290:	add	sl, r0, r4
   1c294:	mov	r0, r6
   1c298:	bl	178a4 <main@@Base+0x1346c>
   1c29c:	cmp	sl, r0
   1c2a0:	bhi	1c4bc <main@@Base+0x18084>
   1c2a4:	mov	r0, r5
   1c2a8:	bl	197c8 <main@@Base+0x15390>
   1c2ac:	mov	r1, #4096	; 0x1000
   1c2b0:	bl	c688 <main@@Base+0x8250>
   1c2b4:	mov	r1, #0
   1c2b8:	cmp	r0, r1
   1c2bc:	movne	r0, #32
   1c2c0:	moveq	r0, #64	; 0x40
   1c2c4:	str	r0, [sp, #12]
   1c2c8:	mov	r0, r7
   1c2cc:	bl	4320 <g_bytes_get_data@plt>
   1c2d0:	add	sl, r0, r4
   1c2d4:	mov	r0, r7
   1c2d8:	bl	3f24 <g_bytes_get_size@plt>
   1c2dc:	rsb	r4, r4, r0
   1c2e0:	mov	r0, r6
   1c2e4:	bl	1781c <main@@Base+0x133e4>
   1c2e8:	mov	ip, #1024	; 0x400
   1c2ec:	mov	r1, r4
   1c2f0:	mov	r3, #65536	; 0x10000
   1c2f4:	str	ip, [sp]
   1c2f8:	mov	r2, r0
   1c2fc:	mov	r0, sl
   1c300:	bl	1d0d8 <main@@Base+0x18ca0>
   1c304:	mov	r1, #5
   1c308:	mov	sl, r0
   1c30c:	mov	r0, r5
   1c310:	bl	193dc <main@@Base+0x14fa4>
   1c314:	ldr	r6, [pc, #716]	; 1c5e8 <main@@Base+0x181b0>
   1c318:	mov	r7, #0
   1c31c:	ldr	fp, [pc, #712]	; 1c5ec <main@@Base+0x181b4>
   1c320:	add	r6, pc, r6
   1c324:	str	r6, [sp, #24]
   1c328:	add	fp, pc, fp
   1c32c:	movw	r6, #65535	; 0xffff
   1c330:	str	fp, [sp, #28]
   1c334:	str	r6, [sp, #20]
   1c338:	b	1c46c <main@@Base+0x18034>
   1c33c:	mov	r0, r5
   1c340:	ldrh	r1, [r4, #4]
   1c344:	mov	r2, r8
   1c348:	bl	1b744 <main@@Base+0x1730c>
   1c34c:	cmp	r0, #0
   1c350:	beq	1c554 <main@@Base+0x1811c>
   1c354:	ldrh	r6, [r4, #4]
   1c358:	str	r6, [sp, #20]
   1c35c:	ldr	r0, [r4, #16]
   1c360:	ldr	fp, [sp, #12]
   1c364:	add	r0, r0, #16
   1c368:	add	r0, r0, fp
   1c36c:	bl	4248 <g_malloc0@plt>
   1c370:	mov	r6, r0
   1c374:	mov	r1, #0
   1c378:	mov	lr, #1
   1c37c:	strb	r1, [r6, #1]
   1c380:	strb	lr, [r6]
   1c384:	add	r0, r0, #2
   1c388:	movw	r2, #4321	; 0x10e1
   1c38c:	ldrh	r1, [r4, #8]
   1c390:	bl	1e2b8 <main@@Base+0x19e80>
   1c394:	ldr	r1, [r4, #8]
   1c398:	add	r0, r6, #4
   1c39c:	ldr	r3, [r4, #16]
   1c3a0:	movw	r2, #4321	; 0x10e1
   1c3a4:	add	r1, r1, r3
   1c3a8:	sub	r1, r1, #1
   1c3ac:	uxth	r1, r1
   1c3b0:	bl	1e2b8 <main@@Base+0x19e80>
   1c3b4:	ldr	fp, [sp, #12]
   1c3b8:	ldr	r1, [r4, #12]
   1c3bc:	add	ip, r6, fp
   1c3c0:	ldr	r2, [r4, #16]
   1c3c4:	mov	r0, ip
   1c3c8:	bl	40e0 <memcpy@plt>
   1c3cc:	mov	lr, r9
   1c3d0:	ldr	fp, [r4, #16]
   1c3d4:	mov	ip, r0
   1c3d8:	ldm	lr!, {r0, r1, r2, r3}
   1c3dc:	add	lr, ip, fp
   1c3e0:	str	r0, [ip, fp]
   1c3e4:	mov	r0, r6
   1c3e8:	str	r1, [lr, #4]
   1c3ec:	str	r2, [lr, #8]
   1c3f0:	str	r3, [lr, #12]
   1c3f4:	ldr	r1, [r4, #16]
   1c3f8:	ldr	fp, [sp, #12]
   1c3fc:	add	r1, r1, #16
   1c400:	add	r1, r1, fp
   1c404:	bl	40f8 <g_bytes_new_static@plt>
   1c408:	mov	r4, r0
   1c40c:	bl	3f24 <g_bytes_get_size@plt>
   1c410:	mov	r3, r0
   1c414:	mov	r1, #128	; 0x80
   1c418:	ldr	r0, [sp, #24]
   1c41c:	ldr	r2, [sp, #28]
   1c420:	bl	3a38 <g_log@plt>
   1c424:	mov	r0, r5
   1c428:	uxth	r1, r7
   1c42c:	mov	r2, r4
   1c430:	mov	r3, r8
   1c434:	bl	194b4 <main@@Base+0x1507c>
   1c438:	cmp	r0, #0
   1c43c:	beq	1c514 <main@@Base+0x180dc>
   1c440:	add	r7, r7, #1
   1c444:	mov	r0, r5
   1c448:	ldr	r2, [sl, #4]
   1c44c:	mov	r1, r7
   1c450:	bl	19860 <main@@Base+0x15428>
   1c454:	cmp	r4, #0
   1c458:	beq	1c464 <main@@Base+0x1802c>
   1c45c:	mov	r0, r4
   1c460:	bl	414c <g_bytes_unref@plt>
   1c464:	mov	r0, r6
   1c468:	bl	3eac <g_free@plt>
   1c46c:	ldr	r3, [sl, #4]
   1c470:	cmp	r7, r3
   1c474:	bcs	1c4ec <main@@Base+0x180b4>
   1c478:	ldr	r3, [sl]
   1c47c:	ldr	fp, [sp, #20]
   1c480:	ldr	r4, [r3, r7, lsl #2]
   1c484:	ldr	r3, [r4, #4]
   1c488:	cmp	r3, fp
   1c48c:	beq	1c35c <main@@Base+0x17f24>
   1c490:	mov	r0, r5
   1c494:	bl	197c8 <main@@Base+0x15390>
   1c498:	mov	r1, #4096	; 0x1000
   1c49c:	bl	c688 <main@@Base+0x8250>
   1c4a0:	cmp	r0, #0
   1c4a4:	bne	1c33c <main@@Base+0x17f04>
   1c4a8:	mov	r0, r5
   1c4ac:	ldrh	r1, [r4, #4]
   1c4b0:	mov	r2, r8
   1c4b4:	bl	1b888 <main@@Base+0x17450>
   1c4b8:	b	1c34c <main@@Base+0x17f14>
   1c4bc:	bl	40a4 <fwupd_error_quark@plt>
   1c4c0:	mov	r4, r0
   1c4c4:	mov	r0, r6
   1c4c8:	bl	178a4 <main@@Base+0x1346c>
   1c4cc:	ldr	r3, [pc, #284]	; 1c5f0 <main@@Base+0x181b8>
   1c4d0:	mov	r1, r4
   1c4d4:	mov	r2, #7
   1c4d8:	add	r3, pc, r3
   1c4dc:	str	r0, [sp]
   1c4e0:	mov	r0, r8
   1c4e4:	bl	4350 <g_set_error@plt>
   1c4e8:	b	1c1dc <main@@Base+0x17da4>
   1c4ec:	mov	r0, r5
   1c4f0:	mov	r1, #100	; 0x64
   1c4f4:	bl	197e0 <main@@Base+0x153a8>
   1c4f8:	mov	r0, r5
   1c4fc:	mov	r1, #1
   1c500:	bl	193dc <main@@Base+0x14fa4>
   1c504:	mov	r4, #1
   1c508:	mov	r0, sl
   1c50c:	bl	4224 <g_ptr_array_unref@plt>
   1c510:	b	1c1e0 <main@@Base+0x17da8>
   1c514:	cmp	r4, #0
   1c518:	beq	1c524 <main@@Base+0x180ec>
   1c51c:	mov	r0, r4
   1c520:	bl	414c <g_bytes_unref@plt>
   1c524:	mov	r0, r6
   1c528:	bl	3eac <g_free@plt>
   1c52c:	mov	r4, #0
   1c530:	b	1c508 <main@@Base+0x180d0>
   1c534:	bl	40a4 <fwupd_error_quark@plt>
   1c538:	ldr	r3, [pc, #180]	; 1c5f4 <main@@Base+0x181bc>
   1c53c:	mov	r2, #10
   1c540:	add	r3, pc, r3
   1c544:	mov	r1, r0
   1c548:	mov	r0, r8
   1c54c:	bl	3ae0 <g_set_error_literal@plt>
   1c550:	b	1c1dc <main@@Base+0x17da4>
   1c554:	mov	r6, #0
   1c558:	b	1c524 <main@@Base+0x180ec>
   1c55c:	bl	3e4c <__stack_chk_fail@plt>
   1c560:	mov	r5, r0
   1c564:	mov	r6, #0
   1c568:	mov	r4, r5
   1c56c:	mov	r0, r6
   1c570:	bl	3eac <g_free@plt>
   1c574:	mov	r0, sl
   1c578:	bl	4224 <g_ptr_array_unref@plt>
   1c57c:	mov	r0, r4
   1c580:	bl	42f0 <_Unwind_Resume@plt>
   1c584:	mov	r4, r0
   1c588:	b	1c56c <main@@Base+0x18134>
   1c58c:	cmp	sl, #0
   1c590:	mov	r4, r0
   1c594:	bne	1c574 <main@@Base+0x1813c>
   1c598:	b	1c57c <main@@Base+0x18144>
   1c59c:	cmp	r4, #0
   1c5a0:	mov	r5, r0
   1c5a4:	beq	1c568 <main@@Base+0x18130>
   1c5a8:	mov	r0, r4
   1c5ac:	bl	414c <g_bytes_unref@plt>
   1c5b0:	b	1c568 <main@@Base+0x18130>
   1c5b4:	mov	r5, r0
   1c5b8:	b	1c568 <main@@Base+0x18130>
   1c5bc:	b	1c560 <main@@Base+0x18128>
   1c5c0:	mov	r4, r0
   1c5c4:	b	1c574 <main@@Base+0x1813c>
   1c5c8:	b	1c560 <main@@Base+0x18128>
   1c5cc:	b	1c560 <main@@Base+0x18128>
   1c5d0:	b	1c560 <main@@Base+0x18128>
   1c5d4:	andeq	r2, r2, r0, lsl sl
   1c5d8:	andeq	r0, r0, r0, lsr r4
   1c5dc:	strdeq	sp, [r0], -ip
   1c5e0:	andeq	sp, r0, r8, lsl #17
   1c5e4:	andeq	r8, r0, ip, lsl #24
   1c5e8:	andeq	r8, r0, ip, ror #22
   1c5ec:	andeq	sp, r0, r0, ror #16
   1c5f0:	andeq	sp, r0, r4, lsl #13
   1c5f4:	ldrdeq	sp, [r0], -r8
   1c5f8:	ldr	ip, [pc, #556]	; 1c82c <main@@Base+0x183f4>
   1c5fc:	mov	r2, #3
   1c600:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c604:	add	ip, pc, ip
   1c608:	ldr	lr, [pc, #544]	; 1c830 <main@@Base+0x183f8>
   1c60c:	sub	sp, sp, #20
   1c610:	mov	r8, r1
   1c614:	mov	r1, r2
   1c618:	mov	r7, r0
   1c61c:	add	r0, sp, #8
   1c620:	ldr	r6, [ip, lr]
   1c624:	mov	r3, #0
   1c628:	strb	r2, [sp, #9]
   1c62c:	mov	ip, #4
   1c630:	str	r3, [sp, #4]
   1c634:	ldr	r2, [r6]
   1c638:	strb	r3, [sp, #10]
   1c63c:	strb	ip, [sp, #8]
   1c640:	str	r2, [sp, #12]
   1c644:	bl	40f8 <g_bytes_new_static@plt>
   1c648:	add	r9, sp, #4
   1c64c:	mov	r4, r0
   1c650:	mov	r2, r4
   1c654:	mov	r0, r7
   1c658:	mov	r1, #0
   1c65c:	mov	r3, r9
   1c660:	bl	194b4 <main@@Base+0x1507c>
   1c664:	cmp	r0, #0
   1c668:	bne	1c6b8 <main@@Base+0x18280>
   1c66c:	ldr	r5, [sp, #4]
   1c670:	bl	40a4 <fwupd_error_quark@plt>
   1c674:	mov	r1, r0
   1c678:	mov	r2, #10
   1c67c:	mov	r0, r5
   1c680:	bl	3d68 <g_error_matches@plt>
   1c684:	cmp	r0, #0
   1c688:	beq	1c734 <main@@Base+0x182fc>
   1c68c:	ldr	r3, [sp, #4]
   1c690:	mov	r1, #128	; 0x80
   1c694:	ldr	r0, [pc, #408]	; 1c834 <main@@Base+0x183fc>
   1c698:	ldr	r2, [pc, #408]	; 1c838 <main@@Base+0x18400>
   1c69c:	add	r0, pc, r0
   1c6a0:	ldr	r3, [r3, #8]
   1c6a4:	add	r2, pc, r2
   1c6a8:	bl	3a38 <g_log@plt>
   1c6ac:	mov	r5, #0
   1c6b0:	mov	r7, #1
   1c6b4:	b	1c6e8 <main@@Base+0x182b0>
   1c6b8:	mov	r0, #0
   1c6bc:	mov	r1, r0
   1c6c0:	bl	390c <g_bytes_new@plt>
   1c6c4:	mov	r5, r0
   1c6c8:	mov	r3, r9
   1c6cc:	mov	r0, r7
   1c6d0:	mov	r2, r5
   1c6d4:	mov	r1, #0
   1c6d8:	bl	194b4 <main@@Base+0x1507c>
   1c6dc:	cmp	r0, #0
   1c6e0:	beq	1c750 <main@@Base+0x18318>
   1c6e4:	mov	r7, #1
   1c6e8:	ldr	r0, [sp, #4]
   1c6ec:	cmp	r0, #0
   1c6f0:	beq	1c6f8 <main@@Base+0x182c0>
   1c6f4:	bl	38e8 <g_error_free@plt>
   1c6f8:	cmp	r4, #0
   1c6fc:	beq	1c708 <main@@Base+0x182d0>
   1c700:	mov	r0, r4
   1c704:	bl	414c <g_bytes_unref@plt>
   1c708:	cmp	r5, #0
   1c70c:	beq	1c718 <main@@Base+0x182e0>
   1c710:	mov	r0, r5
   1c714:	bl	414c <g_bytes_unref@plt>
   1c718:	ldr	r2, [sp, #12]
   1c71c:	mov	r0, r7
   1c720:	ldr	r3, [r6]
   1c724:	cmp	r2, r3
   1c728:	bne	1c7ac <main@@Base+0x18374>
   1c72c:	add	sp, sp, #20
   1c730:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c734:	ldr	r1, [pc, #256]	; 1c83c <main@@Base+0x18404>
   1c738:	mov	r0, r8
   1c73c:	add	r1, pc, r1
   1c740:	bl	4404 <g_prefix_error@plt>
   1c744:	mov	r5, #0
   1c748:	mov	r7, r5
   1c74c:	b	1c6e8 <main@@Base+0x182b0>
   1c750:	ldr	r7, [sp, #4]
   1c754:	bl	40a4 <fwupd_error_quark@plt>
   1c758:	mov	r1, r0
   1c75c:	mov	r2, #10
   1c760:	mov	r0, r7
   1c764:	bl	3d68 <g_error_matches@plt>
   1c768:	cmp	r0, #0
   1c76c:	beq	1c794 <main@@Base+0x1835c>
   1c770:	ldr	r3, [sp, #4]
   1c774:	mov	r1, #128	; 0x80
   1c778:	ldr	r0, [pc, #192]	; 1c840 <main@@Base+0x18408>
   1c77c:	ldr	r2, [pc, #192]	; 1c844 <main@@Base+0x1840c>
   1c780:	add	r0, pc, r0
   1c784:	ldr	r3, [r3, #8]
   1c788:	add	r2, pc, r2
   1c78c:	bl	3a38 <g_log@plt>
   1c790:	b	1c6e4 <main@@Base+0x182ac>
   1c794:	ldr	r1, [pc, #172]	; 1c848 <main@@Base+0x18410>
   1c798:	mov	r0, r8
   1c79c:	add	r1, pc, r1
   1c7a0:	bl	4404 <g_prefix_error@plt>
   1c7a4:	mov	r7, #0
   1c7a8:	b	1c6e8 <main@@Base+0x182b0>
   1c7ac:	bl	3e4c <__stack_chk_fail@plt>
   1c7b0:	mov	r6, r0
   1c7b4:	ldr	r0, [sp, #4]
   1c7b8:	cmp	r0, #0
   1c7bc:	beq	1c7c4 <main@@Base+0x1838c>
   1c7c0:	bl	38e8 <g_error_free@plt>
   1c7c4:	cmp	r4, #0
   1c7c8:	beq	1c7d4 <main@@Base+0x1839c>
   1c7cc:	mov	r0, r4
   1c7d0:	bl	414c <g_bytes_unref@plt>
   1c7d4:	cmp	r5, #0
   1c7d8:	beq	1c7e4 <main@@Base+0x183ac>
   1c7dc:	mov	r0, r5
   1c7e0:	bl	414c <g_bytes_unref@plt>
   1c7e4:	mov	r0, r6
   1c7e8:	bl	42f0 <_Unwind_Resume@plt>
   1c7ec:	mov	r6, r0
   1c7f0:	mov	r5, #0
   1c7f4:	b	1c7b4 <main@@Base+0x1837c>
   1c7f8:	b	1c7ec <main@@Base+0x183b4>
   1c7fc:	b	1c7ec <main@@Base+0x183b4>
   1c800:	b	1c7ec <main@@Base+0x183b4>
   1c804:	mov	r4, #0
   1c808:	mov	r6, r0
   1c80c:	mov	r5, r4
   1c810:	b	1c7b4 <main@@Base+0x1837c>
   1c814:	mov	r6, r0
   1c818:	b	1c7c4 <main@@Base+0x1838c>
   1c81c:	mov	r6, r0
   1c820:	b	1c7d4 <main@@Base+0x1839c>
   1c824:	b	1c7ec <main@@Base+0x183b4>
   1c828:	b	1c7ec <main@@Base+0x183b4>
   1c82c:	andeq	r2, r2, ip, ror r5
   1c830:	andeq	r0, r0, r0, lsr r4
   1c834:	strdeq	r8, [r0], -r0
   1c838:	andeq	sp, r0, r8, lsl #10
   1c83c:	muleq	r0, r4, r4
   1c840:	andeq	r8, r0, ip, lsl #14
   1c844:	andeq	sp, r0, r4, lsr #8
   1c848:	andeq	sp, r0, ip, asr r4
   1c84c:	push	{r4, lr}
   1c850:	mov	r4, r0
   1c854:	bl	420c <g_type_class_peek_parent@plt>
   1c858:	ldr	r1, [pc, #108]	; 1c8cc <main@@Base+0x18494>
   1c85c:	add	r1, pc, r1
   1c860:	ldr	r3, [r1, #4]
   1c864:	cmp	r3, #0
   1c868:	str	r0, [r1]
   1c86c:	beq	1c87c <main@@Base+0x18444>
   1c870:	add	r1, r1, #4
   1c874:	mov	r0, r4
   1c878:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   1c87c:	bl	17f2c <main@@Base+0x13af4>
   1c880:	mov	r1, r0
   1c884:	mov	r0, r4
   1c888:	bl	4374 <g_type_check_class_cast@plt>
   1c88c:	ldr	r4, [pc, #60]	; 1c8d0 <main@@Base+0x18498>
   1c890:	ldr	ip, [pc, #60]	; 1c8d4 <main@@Base+0x1849c>
   1c894:	ldr	r1, [pc, #60]	; 1c8d8 <main@@Base+0x184a0>
   1c898:	add	r4, pc, r4
   1c89c:	ldr	r2, [pc, #56]	; 1c8dc <main@@Base+0x184a4>
   1c8a0:	add	ip, pc, ip
   1c8a4:	ldr	r3, [pc, #52]	; 1c8e0 <main@@Base+0x184a8>
   1c8a8:	add	r1, pc, r1
   1c8ac:	add	r2, pc, r2
   1c8b0:	add	r3, pc, r3
   1c8b4:	str	r4, [r0, #140]	; 0x8c
   1c8b8:	str	ip, [r0, #144]	; 0x90
   1c8bc:	str	r1, [r0, #152]	; 0x98
   1c8c0:	str	r2, [r0, #156]	; 0x9c
   1c8c4:	str	r3, [r0, #160]	; 0xa0
   1c8c8:	pop	{r4, pc}
   1c8cc:	andeq	r2, r2, r4, lsl r8
   1c8d0:	andeq	r0, r0, r4, lsl #2
   1c8d4:			; <UNDEFINED> instruction: 0xfffffd50
   1c8d8:			; <UNDEFINED> instruction: 0xfffff78c
   1c8dc:			; <UNDEFINED> instruction: 0xfffff214
   1c8e0:			; <UNDEFINED> instruction: 0xfffff8a8
   1c8e4:	push	{r4, r5, r6, r7, lr}
   1c8e8:	dmb	sy
   1c8ec:	ldr	r4, [pc, #156]	; 1c990 <main@@Base+0x18558>
   1c8f0:	sub	sp, sp, #20
   1c8f4:	add	r4, pc, r4
   1c8f8:	ldr	r5, [r4, #8]
   1c8fc:	dmb	sy
   1c900:	cmp	r5, #0
   1c904:	beq	1c91c <main@@Base+0x184e4>
   1c908:	ldr	r3, [pc, #132]	; 1c994 <main@@Base+0x1855c>
   1c90c:	add	r3, pc, r3
   1c910:	ldr	r0, [r3, #8]
   1c914:	add	sp, sp, #20
   1c918:	pop	{r4, r5, r6, r7, pc}
   1c91c:	add	r6, r4, #8
   1c920:	mov	r0, r6
   1c924:	bl	3d50 <g_once_init_enter@plt>
   1c928:	cmp	r0, #0
   1c92c:	beq	1c908 <main@@Base+0x184d0>
   1c930:	bl	17f2c <main@@Base+0x13af4>
   1c934:	mov	r7, r0
   1c938:	ldr	r0, [pc, #88]	; 1c998 <main@@Base+0x18560>
   1c93c:	add	r0, pc, r0
   1c940:	bl	3df8 <g_intern_static_string@plt>
   1c944:	ldr	ip, [pc, #80]	; 1c99c <main@@Base+0x18564>
   1c948:	mov	r3, #16
   1c94c:	str	r5, [sp, #8]
   1c950:	add	ip, pc, ip
   1c954:	stm	sp, {r3, ip}
   1c958:	ldr	r3, [pc, #64]	; 1c9a0 <main@@Base+0x18568>
   1c95c:	mov	r2, #164	; 0xa4
   1c960:	add	r3, pc, r3
   1c964:	mov	r1, r0
   1c968:	mov	r0, r7
   1c96c:	bl	3894 <g_type_register_static_simple@plt>
   1c970:	mov	r1, #4
   1c974:	mov	r5, r0
   1c978:	bl	3edc <g_type_add_instance_private@plt>
   1c97c:	mov	r1, r5
   1c980:	str	r0, [r4, #4]
   1c984:	mov	r0, r6
   1c988:	bl	4140 <g_once_init_leave@plt>
   1c98c:	b	1c908 <main@@Base+0x184d0>
   1c990:	andeq	r2, r2, ip, ror r7
   1c994:	andeq	r2, r2, r4, ror #14
   1c998:	andeq	sp, r0, r0, ror #5
   1c99c:			; <UNDEFINED> instruction: 0xffffeca4
   1c9a0:			; <UNDEFINED> instruction: 0xfffffee4
   1c9a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c9a8:	sub	sp, sp, #108	; 0x6c
   1c9ac:	ldr	r4, [pc, #1260]	; 1cea0 <main@@Base+0x18a68>
   1c9b0:	mov	r7, r0
   1c9b4:	ldr	r3, [pc, #1256]	; 1cea4 <main@@Base+0x18a6c>
   1c9b8:	mov	r8, r1
   1c9bc:	add	r4, pc, r4
   1c9c0:	ldr	r3, [r4, r3]
   1c9c4:	str	r3, [sp, #20]
   1c9c8:	ldr	r3, [r3]
   1c9cc:	str	r3, [sp, #100]	; 0x64
   1c9d0:	bl	1c8e4 <main@@Base+0x184ac>
   1c9d4:	mov	r1, r0
   1c9d8:	mov	r0, r7
   1c9dc:	bl	39d8 <g_type_check_instance_cast@plt>
   1c9e0:	ldr	r3, [pc, #1216]	; 1cea8 <main@@Base+0x18a70>
   1c9e4:	add	r3, pc, r3
   1c9e8:	ldr	r3, [r3, #4]
   1c9ec:	str	r3, [sp, #28]
   1c9f0:	ldr	r3, [r0, r3]
   1c9f4:	mov	fp, r0
   1c9f8:	cmp	r3, #0
   1c9fc:	movne	r6, #1
   1ca00:	beq	1ca30 <main@@Base+0x185f8>
   1ca04:	mov	r4, #0
   1ca08:	mov	r0, r4
   1ca0c:	bl	3eac <g_free@plt>
   1ca10:	ldr	r1, [sp, #20]
   1ca14:	ldr	r2, [sp, #100]	; 0x64
   1ca18:	mov	r0, r6
   1ca1c:	ldr	r3, [r1]
   1ca20:	cmp	r2, r3
   1ca24:	bne	1cde8 <main@@Base+0x189b0>
   1ca28:	add	sp, sp, #108	; 0x6c
   1ca2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca30:	mov	r0, r7
   1ca34:	bl	197c8 <main@@Base+0x15390>
   1ca38:	mov	r1, #4096	; 0x1000
   1ca3c:	bl	c688 <main@@Base+0x8250>
   1ca40:	cmp	r0, #0
   1ca44:	beq	1cb90 <main@@Base+0x18758>
   1ca48:	ldr	lr, [pc, #1116]	; 1ceac <main@@Base+0x18a74>
   1ca4c:	add	ip, sp, #56	; 0x38
   1ca50:	ldr	r5, [pc, #1112]	; 1ceb0 <main@@Base+0x18a78>
   1ca54:	add	lr, pc, lr
   1ca58:	add	lr, lr, #16
   1ca5c:	ldm	lr!, {r0, r1, r2, r3}
   1ca60:	stmia	ip!, {r0, r1, r2, r3}
   1ca64:	ldm	lr!, {r0, r1, r2, r3}
   1ca68:	stmia	ip!, {r0, r1, r2, r3}
   1ca6c:	ldm	lr, {r0, r1}
   1ca70:	stm	ip, {r0, r1}
   1ca74:	ldr	r0, [r4, r5]
   1ca78:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   1ca7c:	ldrb	r4, [sp, #56]	; 0x38
   1ca80:	str	r0, [sp, #24]
   1ca84:	cmp	r4, #255	; 0xff
   1ca88:	beq	1cd84 <main@@Base+0x1894c>
   1ca8c:	ldr	r1, [pc, #1056]	; 1ceb4 <main@@Base+0x18a7c>
   1ca90:	add	r3, sp, #96	; 0x60
   1ca94:	ldr	r2, [pc, #1052]	; 1ceb8 <main@@Base+0x18a80>
   1ca98:	add	r5, sp, #60	; 0x3c
   1ca9c:	add	r1, pc, r1
   1caa0:	str	r1, [sp, #36]	; 0x24
   1caa4:	ldr	r1, [pc, #1040]	; 1cebc <main@@Base+0x18a84>
   1caa8:	add	r2, pc, r2
   1caac:	str	r3, [sp, #32]
   1cab0:	add	r1, pc, r1
   1cab4:	str	r2, [sp, #40]	; 0x28
   1cab8:	str	r1, [sp, #44]	; 0x2c
   1cabc:	b	1cb1c <main@@Base+0x186e4>
   1cac0:	cmp	r6, #0
   1cac4:	beq	1cad0 <main@@Base+0x18698>
   1cac8:	mov	r0, r6
   1cacc:	bl	414c <g_bytes_unref@plt>
   1cad0:	cmp	sl, #0
   1cad4:	beq	1cc88 <main@@Base+0x18850>
   1cad8:	mov	r0, r7
   1cadc:	mov	r1, #0
   1cae0:	mov	r2, #1
   1cae4:	mov	r3, r8
   1cae8:	bl	191b8 <main@@Base+0x14d80>
   1caec:	subs	r6, r0, #0
   1caf0:	beq	1cc88 <main@@Base+0x18850>
   1caf4:	bl	3f24 <g_bytes_get_size@plt>
   1caf8:	cmp	r0, #1
   1cafc:	bne	1cc4c <main@@Base+0x18814>
   1cb00:	mov	r1, r6
   1cb04:	ldr	r0, [sp, #24]
   1cb08:	bl	426c <g_ptr_array_add@plt>
   1cb0c:	add	r5, r5, #8
   1cb10:	ldrb	r4, [r5, #-4]
   1cb14:	cmp	r4, #255	; 0xff
   1cb18:	beq	1cd84 <main@@Base+0x1894c>
   1cb1c:	ldr	r9, [r5]
   1cb20:	add	r0, sp, #96	; 0x60
   1cb24:	mov	r1, #3
   1cb28:	mov	r2, #5
   1cb2c:	strb	r4, [sp, #97]	; 0x61
   1cb30:	strb	r2, [sp, #96]	; 0x60
   1cb34:	strb	r9, [sp, #98]	; 0x62
   1cb38:	bl	40f8 <g_bytes_new_static@plt>
   1cb3c:	uxtb	r3, r9
   1cb40:	mov	r6, r0
   1cb44:	str	r3, [sp]
   1cb48:	mov	r1, #128	; 0x80
   1cb4c:	ldr	r0, [sp, #36]	; 0x24
   1cb50:	mov	r3, r4
   1cb54:	ldr	r2, [sp, #40]	; 0x28
   1cb58:	bl	3a38 <g_log@plt>
   1cb5c:	mov	r0, r7
   1cb60:	mov	r1, #0
   1cb64:	mov	r2, r6
   1cb68:	mov	r3, r8
   1cb6c:	bl	194b4 <main@@Base+0x1507c>
   1cb70:	cmp	r0, #0
   1cb74:	movne	sl, #1
   1cb78:	bne	1cac0 <main@@Base+0x18688>
   1cb7c:	mov	r0, r8
   1cb80:	ldr	r1, [sp, #44]	; 0x2c
   1cb84:	bl	4404 <g_prefix_error@plt>
   1cb88:	mov	sl, #0
   1cb8c:	b	1cac0 <main@@Base+0x18688>
   1cb90:	mov	r0, r7
   1cb94:	mov	r1, #5
   1cb98:	mov	r2, r8
   1cb9c:	bl	1b600 <main@@Base+0x171c8>
   1cba0:	cmp	r0, #0
   1cba4:	beq	1cca8 <main@@Base+0x18870>
   1cba8:	mov	r0, r7
   1cbac:	mov	r1, #0
   1cbb0:	mov	r2, r8
   1cbb4:	bl	1b888 <main@@Base+0x17450>
   1cbb8:	cmp	r0, #0
   1cbbc:	beq	1cca8 <main@@Base+0x18870>
   1cbc0:	mov	r0, r7
   1cbc4:	mov	r1, #0
   1cbc8:	mov	r2, #3
   1cbcc:	mov	r3, r8
   1cbd0:	bl	1b99c <main@@Base+0x17564>
   1cbd4:	cmp	r0, #0
   1cbd8:	beq	1cca8 <main@@Base+0x18870>
   1cbdc:	mov	r1, #0
   1cbe0:	mov	r0, r7
   1cbe4:	mov	r2, r1
   1cbe8:	mov	r3, r8
   1cbec:	bl	191b8 <main@@Base+0x14d80>
   1cbf0:	subs	r5, r0, #0
   1cbf4:	beq	1cca8 <main@@Base+0x18870>
   1cbf8:	mov	r0, r5
   1cbfc:	add	r1, sp, #48	; 0x30
   1cc00:	bl	4320 <g_bytes_get_data@plt>
   1cc04:	ldr	r3, [sp, #48]	; 0x30
   1cc08:	mov	r2, r0
   1cc0c:	cmp	r3, #4
   1cc10:	beq	1ccb0 <main@@Base+0x18878>
   1cc14:	bl	40a4 <fwupd_error_quark@plt>
   1cc18:	ldr	ip, [sp, #48]	; 0x30
   1cc1c:	mov	r1, r0
   1cc20:	ldr	r3, [pc, #664]	; 1cec0 <main@@Base+0x18a88>
   1cc24:	mov	r0, r8
   1cc28:	mov	r2, #7
   1cc2c:	add	r3, pc, r3
   1cc30:	str	ip, [sp]
   1cc34:	bl	4350 <g_set_error@plt>
   1cc38:	mov	r4, #0
   1cc3c:	mov	r6, r4
   1cc40:	mov	r0, r5
   1cc44:	bl	414c <g_bytes_unref@plt>
   1cc48:	b	1ca08 <main@@Base+0x185d0>
   1cc4c:	bl	40a4 <fwupd_error_quark@plt>
   1cc50:	mov	r5, r0
   1cc54:	mov	r0, r6
   1cc58:	bl	3f24 <g_bytes_get_size@plt>
   1cc5c:	ldr	r3, [pc, #608]	; 1cec4 <main@@Base+0x18a8c>
   1cc60:	mov	r1, r5
   1cc64:	str	r0, [sp, #8]
   1cc68:	mov	r2, #7
   1cc6c:	str	r4, [sp]
   1cc70:	mov	r0, r8
   1cc74:	str	r9, [sp, #4]
   1cc78:	add	r3, pc, r3
   1cc7c:	bl	4350 <g_set_error@plt>
   1cc80:	mov	r0, r6
   1cc84:	bl	414c <g_bytes_unref@plt>
   1cc88:	mov	r5, #0
   1cc8c:	ldr	r3, [sp, #24]
   1cc90:	cmp	r3, #0
   1cc94:	beq	1cca0 <main@@Base+0x18868>
   1cc98:	ldr	r0, [sp, #24]
   1cc9c:	bl	4224 <g_ptr_array_unref@plt>
   1cca0:	cmp	r5, #0
   1cca4:	bne	1cbf8 <main@@Base+0x187c0>
   1cca8:	mov	r6, #0
   1ccac:	b	1ca04 <main@@Base+0x185cc>
   1ccb0:	ldr	r0, [r0]
   1ccb4:	ldr	r3, [sp, #28]
   1ccb8:	str	r0, [sp, #52]	; 0x34
   1ccbc:	ldr	r1, [sp, #52]	; 0x34
   1ccc0:	rev	r1, r1
   1ccc4:	str	r1, [fp, r3]
   1ccc8:	ldrb	r3, [r2]
   1cccc:	cmp	r3, #88	; 0x58
   1ccd0:	beq	1cd94 <main@@Base+0x1895c>
   1ccd4:	cmp	r3, #30
   1ccd8:	beq	1cd18 <main@@Base+0x188e0>
   1ccdc:	bl	40a4 <fwupd_error_quark@plt>
   1cce0:	ldr	r2, [sp, #28]
   1cce4:	mov	r3, #30
   1cce8:	mov	r1, r0
   1ccec:	mov	r0, r8
   1ccf0:	ldr	ip, [fp, r2]
   1ccf4:	mov	r2, #88	; 0x58
   1ccf8:	str	r3, [sp, #8]
   1ccfc:	ldr	r3, [pc, #452]	; 1cec8 <main@@Base+0x18a90>
   1cd00:	str	r2, [sp, #4]
   1cd04:	mov	r2, #7
   1cd08:	str	ip, [sp]
   1cd0c:	add	r3, pc, r3
   1cd10:	bl	4350 <g_set_error@plt>
   1cd14:	b	1cc38 <main@@Base+0x18800>
   1cd18:	ldr	r0, [pc, #428]	; 1cecc <main@@Base+0x18a94>
   1cd1c:	lsr	r1, r1, #8
   1cd20:	add	r0, pc, r0
   1cd24:	bl	3c18 <g_strdup_printf@plt>
   1cd28:	mov	r4, r0
   1cd2c:	mov	r0, r7
   1cd30:	bl	197c8 <main@@Base+0x15390>
   1cd34:	mov	r1, r4
   1cd38:	bl	e264 <main@@Base+0x9e2c>
   1cd3c:	mov	r0, r7
   1cd40:	bl	197c8 <main@@Base+0x15390>
   1cd44:	mov	r6, r0
   1cd48:	bl	1f330 <main@@Base+0x1aef8>
   1cd4c:	mov	r1, r0
   1cd50:	mov	r0, r6
   1cd54:	bl	39d8 <g_type_check_instance_cast@plt>
   1cd58:	bl	214d0 <main@@Base+0x1d098>
   1cd5c:	ldr	r1, [pc, #364]	; 1ced0 <main@@Base+0x18a98>
   1cd60:	mov	r2, r4
   1cd64:	add	r1, pc, r1
   1cd68:	bl	23120 <main@@Base+0x1ece8>
   1cd6c:	subs	r1, r0, #0
   1cd70:	mov	r0, r7
   1cd74:	beq	1cda4 <main@@Base+0x1896c>
   1cd78:	bl	18ec4 <main@@Base+0x14a8c>
   1cd7c:	mov	r6, #1
   1cd80:	b	1cc40 <main@@Base+0x18808>
   1cd84:	ldr	r0, [sp, #24]
   1cd88:	bl	bc10 <main@@Base+0x77d8>
   1cd8c:	mov	r5, r0
   1cd90:	b	1cc8c <main@@Base+0x18854>
   1cd94:	ldr	r0, [pc, #312]	; 1ced4 <main@@Base+0x18a9c>
   1cd98:	add	r0, pc, r0
   1cd9c:	bl	3c18 <g_strdup_printf@plt>
   1cda0:	b	1cd28 <main@@Base+0x188f0>
   1cda4:	bl	197c8 <main@@Base+0x15390>
   1cda8:	mov	r1, #1
   1cdac:	bl	d7e8 <main@@Base+0x93b0>
   1cdb0:	mov	r0, r7
   1cdb4:	bl	197c8 <main@@Base+0x15390>
   1cdb8:	mov	r1, #2
   1cdbc:	bl	d7e8 <main@@Base+0x93b0>
   1cdc0:	bl	40a4 <fwupd_error_quark@plt>
   1cdc4:	ldr	r3, [pc, #268]	; 1ced8 <main@@Base+0x18aa0>
   1cdc8:	mov	r1, r0
   1cdcc:	str	r4, [sp]
   1cdd0:	mov	r0, r8
   1cdd4:	mov	r2, #10
   1cdd8:	add	r3, pc, r3
   1cddc:	bl	4350 <g_set_error@plt>
   1cde0:	mov	r6, #0
   1cde4:	b	1cc40 <main@@Base+0x18808>
   1cde8:	bl	3e4c <__stack_chk_fail@plt>
   1cdec:	mov	r4, r0
   1cdf0:	mov	r0, r6
   1cdf4:	bl	414c <g_bytes_unref@plt>
   1cdf8:	mov	r6, r4
   1cdfc:	ldr	r1, [sp, #24]
   1ce00:	cmp	r1, #0
   1ce04:	beq	1ce10 <main@@Base+0x189d8>
   1ce08:	ldr	r0, [sp, #24]
   1ce0c:	bl	4224 <g_ptr_array_unref@plt>
   1ce10:	mov	r4, #0
   1ce14:	mov	r0, r4
   1ce18:	bl	3eac <g_free@plt>
   1ce1c:	mov	r0, r6
   1ce20:	bl	42f0 <_Unwind_Resume@plt>
   1ce24:	mov	r6, r0
   1ce28:	mov	r4, #0
   1ce2c:	mov	r0, r5
   1ce30:	bl	414c <g_bytes_unref@plt>
   1ce34:	b	1ce14 <main@@Base+0x189dc>
   1ce38:	b	1ce24 <main@@Base+0x189ec>
   1ce3c:	cmp	r6, #0
   1ce40:	mov	r4, r0
   1ce44:	bne	1cdf0 <main@@Base+0x189b8>
   1ce48:	b	1cdf8 <main@@Base+0x189c0>
   1ce4c:	mov	r6, r0
   1ce50:	b	1ce10 <main@@Base+0x189d8>
   1ce54:	b	1ce4c <main@@Base+0x18a14>
   1ce58:	b	1ce4c <main@@Base+0x18a14>
   1ce5c:	b	1ce4c <main@@Base+0x18a14>
   1ce60:	b	1ce4c <main@@Base+0x18a14>
   1ce64:	b	1ce24 <main@@Base+0x189ec>
   1ce68:	b	1ce4c <main@@Base+0x18a14>
   1ce6c:	b	1ce4c <main@@Base+0x18a14>
   1ce70:	b	1ce4c <main@@Base+0x18a14>
   1ce74:	b	1ce4c <main@@Base+0x18a14>
   1ce78:	mov	r6, r0
   1ce7c:	b	1ce14 <main@@Base+0x189dc>
   1ce80:	b	1ce24 <main@@Base+0x189ec>
   1ce84:	b	1ce24 <main@@Base+0x189ec>
   1ce88:	mov	r6, r0
   1ce8c:	b	1ce2c <main@@Base+0x189f4>
   1ce90:	b	1ce24 <main@@Base+0x189ec>
   1ce94:	mov	r6, r0
   1ce98:	b	1cdfc <main@@Base+0x189c4>
   1ce9c:	b	1ce24 <main@@Base+0x189ec>
   1cea0:	andeq	r2, r2, r4, asr #3
   1cea4:	andeq	r0, r0, r0, lsr r4
   1cea8:	andeq	r2, r2, ip, lsl #13
   1ceac:	andeq	ip, r0, r4, lsr lr
   1ceb0:	andeq	r0, r0, r8, asr r4
   1ceb4:	strdeq	r8, [r0], -r0
   1ceb8:	andeq	sp, r0, r4, lsl #3
   1cebc:	andeq	sp, r0, r4, lsr #3
   1cec0:	andeq	sp, r0, ip, lsl #1
   1cec4:	strdeq	ip, [r0], -r8
   1cec8:	andeq	ip, r0, r0, ror #31
   1cecc:	andeq	ip, r0, r4, asr #31
   1ced0:	andeq	ip, r0, ip, asr #31
   1ced4:	andeq	fp, r0, r4, lsr r6
   1ced8:	andeq	ip, r0, r0, ror pc
   1cedc:	push	{r3, lr}
   1cee0:	bl	1c8e4 <main@@Base+0x184ac>
   1cee4:	mov	r1, #0
   1cee8:	pop	{r3, lr}
   1ceec:	b	3804 <g_object_new@plt>
   1cef0:	push	{r4, r5, r6, r7, r8, lr}
   1cef4:	mov	r5, r0
   1cef8:	mov	r0, #20
   1cefc:	ldr	r4, [sp, #24]
   1cf00:	mov	r6, r1
   1cf04:	mov	r7, r2
   1cf08:	mov	r8, r3
   1cf0c:	bl	4248 <g_malloc0@plt>
   1cf10:	stm	r0, {r5, r6, r7, r8}
   1cf14:	str	r4, [r0, #16]
   1cf18:	pop	{r4, r5, r6, r7, r8, pc}
   1cf1c:	push	{r4, r5, r6, r7, r8, lr}
   1cf20:	mov	r6, r0
   1cf24:	sub	sp, sp, #8
   1cf28:	mov	r0, #0
   1cf2c:	bl	3990 <g_string_new@plt>
   1cf30:	ldr	r3, [r6, #12]
   1cf34:	ldr	r1, [pc, #260]	; 1d040 <main@@Base+0x18c08>
   1cf38:	cmp	r3, #0
   1cf3c:	add	r1, pc, r1
   1cf40:	mov	r4, r0
   1cf44:	ldr	r0, [r6, #16]
   1cf48:	beq	1cff0 <main@@Base+0x18bb8>
   1cf4c:	cmp	r0, #0
   1cf50:	beq	1cff0 <main@@Base+0x18bb8>
   1cf54:	ldrb	r2, [r3]
   1cf58:	cmp	r2, #0
   1cf5c:	beq	1cff0 <main@@Base+0x18bb8>
   1cf60:	ldr	r3, [pc, #220]	; 1d044 <main@@Base+0x18c0c>
   1cf64:	mov	r5, #0
   1cf68:	mov	r8, r5
   1cf6c:	ldr	r3, [r1, r3]
   1cf70:	ldr	r7, [r3]
   1cf74:	b	1cfac <main@@Base+0x18b74>
   1cf78:	ldr	r0, [r4]
   1cf7c:	add	r5, r5, #1
   1cf80:	str	r1, [r4, #4]
   1cf84:	strb	r2, [r0, r3]
   1cf88:	ldm	r4, {r2, r3}
   1cf8c:	strb	r8, [r2, r3]
   1cf90:	ldr	r3, [r6, #16]
   1cf94:	cmp	r3, r5
   1cf98:	bls	1cfec <main@@Base+0x18bb4>
   1cf9c:	ldr	r2, [r6, #12]
   1cfa0:	ldrb	r2, [r2, r5]
   1cfa4:	cmp	r2, #0
   1cfa8:	beq	1cfec <main@@Base+0x18bb4>
   1cfac:	lsl	r1, r2, #1
   1cfb0:	ldr	r3, [r4, #4]
   1cfb4:	ldr	r0, [r4, #8]
   1cfb8:	ldrh	ip, [r7, r1]
   1cfbc:	add	r1, r3, #1
   1cfc0:	tst	ip, #1
   1cfc4:	moveq	r2, #63	; 0x3f
   1cfc8:	cmp	r1, r0
   1cfcc:	bcc	1cf78 <main@@Base+0x18b40>
   1cfd0:	mov	r0, r4
   1cfd4:	mvn	r1, #0
   1cfd8:	bl	3cfc <g_string_insert_c@plt>
   1cfdc:	ldr	r3, [r6, #16]
   1cfe0:	add	r5, r5, #1
   1cfe4:	cmp	r3, r5
   1cfe8:	bhi	1cf9c <main@@Base+0x18b64>
   1cfec:	mov	r0, r3
   1cff0:	ldm	r6, {r1, r2, r3}
   1cff4:	str	r0, [sp]
   1cff8:	ldr	ip, [r4]
   1cffc:	ldr	r0, [pc, #68]	; 1d048 <main@@Base+0x18c10>
   1d000:	str	ip, [sp, #4]
   1d004:	add	r0, pc, r0
   1d008:	bl	3c18 <g_strdup_printf@plt>
   1d00c:	mov	r5, r0
   1d010:	mov	r1, #1
   1d014:	mov	r0, r4
   1d018:	bl	40bc <g_string_free@plt>
   1d01c:	mov	r0, r5
   1d020:	add	sp, sp, #8
   1d024:	pop	{r4, r5, r6, r7, r8, pc}
   1d028:	mov	r5, r0
   1d02c:	mov	r1, #1
   1d030:	mov	r0, r4
   1d034:	bl	40bc <g_string_free@plt>
   1d038:	mov	r0, r5
   1d03c:	bl	42f0 <_Unwind_Resume@plt>
   1d040:	andeq	r1, r2, r4, asr #24
   1d044:	andeq	r0, r0, r4, asr #8
   1d048:	andeq	ip, r0, r4, ror sp
   1d04c:	push	{r4, r5, r6, r7, r8, lr}
   1d050:	mov	r6, r0
   1d054:	mov	r0, #0
   1d058:	ldr	r8, [pc, #116]	; 1d0d4 <main@@Base+0x18c9c>
   1d05c:	bl	3990 <g_string_new@plt>
   1d060:	ldr	r3, [r6, #4]
   1d064:	add	r8, pc, r8
   1d068:	mov	r4, #0
   1d06c:	cmp	r3, #0
   1d070:	mov	r7, r0
   1d074:	beq	1d0b0 <main@@Base+0x18c78>
   1d078:	ldr	r3, [r6]
   1d07c:	ldr	r0, [r3, r4, lsl #2]
   1d080:	bl	1cf1c <main@@Base+0x18ae4>
   1d084:	mov	r1, r8
   1d088:	mov	r5, r0
   1d08c:	mov	r0, r7
   1d090:	mov	r2, r5
   1d094:	bl	4344 <g_string_append_printf@plt>
   1d098:	mov	r0, r5
   1d09c:	add	r4, r4, #1
   1d0a0:	bl	3eac <g_free@plt>
   1d0a4:	ldr	r3, [r6, #4]
   1d0a8:	cmp	r3, r4
   1d0ac:	bhi	1d078 <main@@Base+0x18c40>
   1d0b0:	mov	r0, r7
   1d0b4:	mov	r1, #0
   1d0b8:	pop	{r4, r5, r6, r7, r8, lr}
   1d0bc:	b	40bc <g_string_free@plt>
   1d0c0:	mov	r4, r0
   1d0c4:	mov	r0, r5
   1d0c8:	bl	3eac <g_free@plt>
   1d0cc:	mov	r0, r4
   1d0d0:	bl	42f0 <_Unwind_Resume@plt>
   1d0d4:	andeq	r9, r0, r4, lsr #7
   1d0d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d0dc:	subs	sl, r1, #0
   1d0e0:	mov	r5, r3
   1d0e4:	ldr	r3, [pc, #524]	; 1d2f8 <main@@Base+0x18ec0>
   1d0e8:	sub	sp, sp, #28
   1d0ec:	mov	r9, r0
   1d0f0:	mov	fp, r2
   1d0f4:	add	r3, pc, r3
   1d0f8:	beq	1d2bc <main@@Base+0x18e84>
   1d0fc:	ldr	r2, [pc, #504]	; 1d2fc <main@@Base+0x18ec4>
   1d100:	mov	r7, #0
   1d104:	ldr	r0, [r3, r2]
   1d108:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   1d10c:	cmp	sl, #1
   1d110:	mov	r8, r0
   1d114:	bls	1d2f0 <main@@Base+0x18eb8>
   1d118:	mov	r4, #1
   1d11c:	mvn	r6, #0
   1d120:	b	1d198 <main@@Base+0x18d60>
   1d124:	cmp	ip, r6
   1d128:	beq	1d1c0 <main@@Base+0x18d88>
   1d12c:	cmp	r9, #0
   1d130:	add	r2, r7, fp
   1d134:	addne	r3, r9, r7
   1d138:	moveq	r3, r9
   1d13c:	cmp	r5, #0
   1d140:	beq	1d164 <main@@Base+0x18d2c>
   1d144:	mov	r0, r2
   1d148:	mov	r1, r5
   1d14c:	str	r3, [sp, #12]
   1d150:	str	ip, [sp, #16]
   1d154:	bl	24d94 <fu_usb_device_open@@Base+0xe50>
   1d158:	ldr	ip, [sp, #16]
   1d15c:	ldr	r3, [sp, #12]
   1d160:	mov	r2, r1
   1d164:	mov	r1, r6
   1d168:	ldr	r0, [r8, #4]
   1d16c:	rsb	r7, r7, r4
   1d170:	str	r7, [sp]
   1d174:	mov	r6, ip
   1d178:	bl	1cef0 <main@@Base+0x18ab8>
   1d17c:	mov	r7, r4
   1d180:	mov	r1, r0
   1d184:	mov	r0, r8
   1d188:	bl	426c <g_ptr_array_add@plt>
   1d18c:	add	r4, r4, #1
   1d190:	cmp	r4, sl
   1d194:	beq	1d244 <main@@Base+0x18e0c>
   1d198:	cmp	r5, #0
   1d19c:	moveq	ip, r5
   1d1a0:	beq	1d1b4 <main@@Base+0x18d7c>
   1d1a4:	add	r0, r4, fp
   1d1a8:	mov	r1, r5
   1d1ac:	bl	24ba8 <fu_usb_device_open@@Base+0xc64>
   1d1b0:	mov	ip, r0
   1d1b4:	cmn	r6, #1
   1d1b8:	bne	1d124 <main@@Base+0x18cec>
   1d1bc:	mov	r6, ip
   1d1c0:	ldr	r2, [sp, #64]	; 0x40
   1d1c4:	cmp	r2, #0
   1d1c8:	beq	1d18c <main@@Base+0x18d54>
   1d1cc:	rsb	r3, r7, r4
   1d1d0:	str	r3, [sp, #20]
   1d1d4:	cmp	r2, r3
   1d1d8:	bhi	1d18c <main@@Base+0x18d54>
   1d1dc:	cmp	r9, #0
   1d1e0:	add	r2, r7, fp
   1d1e4:	addne	r3, r9, r7
   1d1e8:	moveq	r3, r9
   1d1ec:	cmp	r5, #0
   1d1f0:	beq	1d214 <main@@Base+0x18ddc>
   1d1f4:	mov	r0, r2
   1d1f8:	mov	r1, r5
   1d1fc:	str	r3, [sp, #12]
   1d200:	str	ip, [sp, #16]
   1d204:	bl	24d94 <fu_usb_device_open@@Base+0xe50>
   1d208:	ldr	ip, [sp, #16]
   1d20c:	ldr	r3, [sp, #12]
   1d210:	mov	r2, r1
   1d214:	mov	r1, ip
   1d218:	ldr	ip, [sp, #20]
   1d21c:	ldr	r0, [r8, #4]
   1d220:	mov	r7, r4
   1d224:	add	r4, r4, #1
   1d228:	str	ip, [sp]
   1d22c:	bl	1cef0 <main@@Base+0x18ab8>
   1d230:	mov	r1, r0
   1d234:	mov	r0, r8
   1d238:	bl	426c <g_ptr_array_add@plt>
   1d23c:	cmp	r4, sl
   1d240:	bne	1d198 <main@@Base+0x18d60>
   1d244:	cmp	sl, r7
   1d248:	movne	r6, sl
   1d24c:	beq	1d2e4 <main@@Base+0x18eac>
   1d250:	cmp	r9, #0
   1d254:	add	r4, r7, fp
   1d258:	addne	r9, r9, r7
   1d25c:	cmp	r5, #0
   1d260:	moveq	r1, r5
   1d264:	beq	1d28c <main@@Base+0x18e54>
   1d268:	mov	r0, r4
   1d26c:	mov	r1, r5
   1d270:	bl	24d94 <fu_usb_device_open@@Base+0xe50>
   1d274:	sub	r0, fp, #1
   1d278:	add	r0, r0, r6
   1d27c:	mov	r4, r1
   1d280:	mov	r1, r5
   1d284:	bl	24ba8 <fu_usb_device_open@@Base+0xc64>
   1d288:	mov	r1, r0
   1d28c:	ldr	r0, [r8, #4]
   1d290:	mov	r2, r4
   1d294:	mov	r3, r9
   1d298:	rsb	r7, r7, sl
   1d29c:	str	r7, [sp]
   1d2a0:	bl	1cef0 <main@@Base+0x18ab8>
   1d2a4:	mov	r1, r0
   1d2a8:	mov	r0, r8
   1d2ac:	bl	426c <g_ptr_array_add@plt>
   1d2b0:	mov	r0, r8
   1d2b4:	add	sp, sp, #28
   1d2b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2bc:	ldr	r0, [pc, #60]	; 1d300 <main@@Base+0x18ec8>
   1d2c0:	ldr	r1, [pc, #60]	; 1d304 <main@@Base+0x18ecc>
   1d2c4:	ldr	r2, [pc, #60]	; 1d308 <main@@Base+0x18ed0>
   1d2c8:	add	r0, pc, r0
   1d2cc:	add	r1, pc, r1
   1d2d0:	add	r2, pc, r2
   1d2d4:	bl	3870 <g_return_if_fail_warning@plt>
   1d2d8:	mov	r0, sl
   1d2dc:	add	sp, sp, #28
   1d2e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2e4:	mov	r0, r8
   1d2e8:	add	sp, sp, #28
   1d2ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2f0:	mov	r6, #1
   1d2f4:	b	1d250 <main@@Base+0x18e18>
   1d2f8:	andeq	r1, r2, ip, lsl #21
   1d2fc:	andeq	r0, r0, ip, asr #8
   1d300:	andeq	r7, r0, r4, asr #23
   1d304:	muleq	r0, ip, sl
   1d308:	ldrdeq	ip, [r0], -r0
   1d30c:	ldr	ip, [pc, #92]	; 1d370 <main@@Base+0x18f38>
   1d310:	push	{r4, r5, r6, r7, lr}
   1d314:	add	ip, pc, ip
   1d318:	ldr	lr, [pc, #84]	; 1d374 <main@@Base+0x18f3c>
   1d31c:	mov	r7, r3
   1d320:	sub	sp, sp, #20
   1d324:	mov	r5, r2
   1d328:	mov	r6, r1
   1d32c:	add	r1, sp, #8
   1d330:	ldr	r4, [ip, lr]
   1d334:	ldr	r3, [r4]
   1d338:	str	r3, [sp, #12]
   1d33c:	bl	4320 <g_bytes_get_data@plt>
   1d340:	mov	r2, r6
   1d344:	mov	r3, r5
   1d348:	ldr	r1, [sp, #8]
   1d34c:	str	r7, [sp]
   1d350:	bl	1d0d8 <main@@Base+0x18ca0>
   1d354:	ldr	r2, [sp, #12]
   1d358:	ldr	r3, [r4]
   1d35c:	cmp	r2, r3
   1d360:	bne	1d36c <main@@Base+0x18f34>
   1d364:	add	sp, sp, #20
   1d368:	pop	{r4, r5, r6, r7, pc}
   1d36c:	bl	3e4c <__stack_chk_fail@plt>
   1d370:	andeq	r1, r2, ip, ror #16
   1d374:	andeq	r0, r0, r0, lsr r4
   1d378:	push	{r4, r5, r6, r7, r8, lr}
   1d37c:	mov	r6, r1
   1d380:	mov	r7, r0
   1d384:	mov	r1, #0
   1d388:	mov	r0, r6
   1d38c:	mov	r8, r2
   1d390:	bl	3f60 <g_dir_open@plt>
   1d394:	subs	r5, r0, #0
   1d398:	bne	1d3c0 <main@@Base+0x18f88>
   1d39c:	b	1d428 <main@@Base+0x18ff0>
   1d3a0:	mov	r0, r7
   1d3a4:	mov	r1, r4
   1d3a8:	mov	r2, r8
   1d3ac:	bl	1d378 <main@@Base+0x18f40>
   1d3b0:	cmp	r0, #0
   1d3b4:	beq	1d418 <main@@Base+0x18fe0>
   1d3b8:	mov	r0, r4
   1d3bc:	bl	3eac <g_free@plt>
   1d3c0:	mov	r0, r5
   1d3c4:	bl	405c <g_dir_read_name@plt>
   1d3c8:	subs	r1, r0, #0
   1d3cc:	beq	1d404 <main@@Base+0x18fcc>
   1d3d0:	mov	r0, r6
   1d3d4:	mov	r2, #0
   1d3d8:	bl	3a80 <g_build_filename@plt>
   1d3dc:	mov	r1, #4
   1d3e0:	mov	r4, r0
   1d3e4:	bl	3f00 <g_file_test@plt>
   1d3e8:	cmp	r0, #0
   1d3ec:	bne	1d3a0 <main@@Base+0x18f68>
   1d3f0:	mov	r1, r4
   1d3f4:	mov	r0, r7
   1d3f8:	bl	426c <g_ptr_array_add@plt>
   1d3fc:	mov	r4, #0
   1d400:	b	1d3b8 <main@@Base+0x18f80>
   1d404:	mov	r4, #1
   1d408:	mov	r0, r5
   1d40c:	bl	3ca8 <g_dir_close@plt>
   1d410:	mov	r0, r4
   1d414:	pop	{r4, r5, r6, r7, r8, pc}
   1d418:	mov	r0, r4
   1d41c:	bl	3eac <g_free@plt>
   1d420:	mov	r4, #0
   1d424:	b	1d408 <main@@Base+0x18fd0>
   1d428:	mov	r4, r5
   1d42c:	mov	r0, r4
   1d430:	pop	{r4, r5, r6, r7, r8, pc}
   1d434:	mov	r6, r0
   1d438:	mov	r0, r5
   1d43c:	bl	3ca8 <g_dir_close@plt>
   1d440:	mov	r0, r6
   1d444:	bl	42f0 <_Unwind_Resume@plt>
   1d448:	mov	r6, r0
   1d44c:	mov	r4, #0
   1d450:	mov	r0, r4
   1d454:	bl	3eac <g_free@plt>
   1d458:	b	1d438 <main@@Base+0x19000>
   1d45c:	mov	r6, r0
   1d460:	b	1d450 <main@@Base+0x19018>
   1d464:	push	{r1, r2, r3}
   1d468:	ldr	r2, [pc, #220]	; 1d54c <main@@Base+0x19114>
   1d46c:	ldr	ip, [pc, #220]	; 1d550 <main@@Base+0x19118>
   1d470:	add	r2, pc, r2
   1d474:	push	{r4, r5, r6, r7, r8, lr}
   1d478:	sub	sp, sp, #12
   1d47c:	ldr	r7, [r2, ip]
   1d480:	add	r3, sp, #40	; 0x28
   1d484:	str	r3, [sp]
   1d488:	mov	r5, r0
   1d48c:	mov	r1, r3
   1d490:	ldr	r0, [sp, #36]	; 0x24
   1d494:	ldr	r3, [r7]
   1d498:	str	r3, [sp, #4]
   1d49c:	bl	4194 <g_strdup_vprintf@plt>
   1d4a0:	ldr	r1, [pc, #172]	; 1d554 <main@@Base+0x1911c>
   1d4a4:	mvn	r2, #0
   1d4a8:	mov	r8, r0
   1d4ac:	add	r1, pc, r1
   1d4b0:	bl	3cb4 <g_strsplit@plt>
   1d4b4:	mov	r6, r0
   1d4b8:	ldr	r0, [r0]
   1d4bc:	cmp	r0, #0
   1d4c0:	movne	r4, r6
   1d4c4:	beq	1d4e4 <main@@Base+0x190ac>
   1d4c8:	bl	3b7c <g_strdup@plt>
   1d4cc:	mov	r1, r0
   1d4d0:	mov	r0, r5
   1d4d4:	bl	426c <g_ptr_array_add@plt>
   1d4d8:	ldr	r0, [r4, #4]!
   1d4dc:	cmp	r0, #0
   1d4e0:	bne	1d4c8 <main@@Base+0x19090>
   1d4e4:	mov	r0, r6
   1d4e8:	bl	3e1c <g_strfreev@plt>
   1d4ec:	mov	r0, r8
   1d4f0:	bl	3eac <g_free@plt>
   1d4f4:	ldr	r2, [sp, #4]
   1d4f8:	ldr	r3, [r7]
   1d4fc:	cmp	r2, r3
   1d500:	bne	1d52c <main@@Base+0x190f4>
   1d504:	add	sp, sp, #12
   1d508:	pop	{r4, r5, r6, r7, r8, lr}
   1d50c:	add	sp, sp, #12
   1d510:	bx	lr
   1d514:	mov	r4, r0
   1d518:	mov	r8, #0
   1d51c:	mov	r0, r8
   1d520:	bl	3eac <g_free@plt>
   1d524:	mov	r0, r4
   1d528:	bl	42f0 <_Unwind_Resume@plt>
   1d52c:	bl	3e4c <__stack_chk_fail@plt>
   1d530:	mov	r4, r0
   1d534:	b	1d51c <main@@Base+0x190e4>
   1d538:	mov	r4, r0
   1d53c:	mov	r0, r6
   1d540:	bl	3e1c <g_strfreev@plt>
   1d544:	b	1d51c <main@@Base+0x190e4>
   1d548:	b	1d530 <main@@Base+0x190f8>
   1d54c:	andeq	r1, r2, r0, lsl r7
   1d550:	andeq	r0, r0, r0, lsr r4
   1d554:	andeq	r9, r0, r8, lsr #27
   1d558:	push	{r4, lr}
   1d55c:	mov	r4, r0
   1d560:	ldr	r0, [r0, #12]
   1d564:	cmp	r0, #0
   1d568:	beq	1d570 <main@@Base+0x19138>
   1d56c:	bl	4398 <g_source_destroy@plt>
   1d570:	bl	41a0 <g_pollable_input_stream_get_type@plt>
   1d574:	mov	r1, r0
   1d578:	ldr	r0, [r4, #16]
   1d57c:	bl	39d8 <g_type_check_instance_cast@plt>
   1d580:	ldr	r1, [r4, #20]
   1d584:	bl	38d0 <g_pollable_input_stream_create_source@plt>
   1d588:	mov	r1, #0
   1d58c:	str	r0, [r4, #12]
   1d590:	bl	3d74 <g_source_attach@plt>
   1d594:	ldr	r1, [pc, #20]	; 1d5b0 <main@@Base+0x19178>
   1d598:	ldr	r0, [r4, #12]
   1d59c:	mov	r2, r4
   1d5a0:	add	r1, pc, r1
   1d5a4:	mov	r3, #0
   1d5a8:	pop	{r4, lr}
   1d5ac:	b	4134 <g_source_set_callback@plt>
   1d5b0:	strdeq	r0, [r0], -r4
   1d5b4:	push	{r4, r5, r6, r7, r8, lr}
   1d5b8:	mov	r5, r0
   1d5bc:	ldr	r7, [r0, #4]
   1d5c0:	mov	r8, r1
   1d5c4:	cmp	r7, #0
   1d5c8:	beq	1d608 <main@@Base+0x191d0>
   1d5cc:	mov	r4, #0
   1d5d0:	mov	r7, r4
   1d5d4:	ldr	r3, [r5]
   1d5d8:	ldr	r6, [r3, r4, lsl #2]
   1d5dc:	bl	40a4 <fwupd_error_quark@plt>
   1d5e0:	mov	r2, r8
   1d5e4:	add	r4, r4, #1
   1d5e8:	mov	r1, r0
   1d5ec:	mov	r0, r6
   1d5f0:	bl	3d68 <g_error_matches@plt>
   1d5f4:	ldr	r3, [r5, #4]
   1d5f8:	cmp	r0, #0
   1d5fc:	addne	r7, r7, #1
   1d600:	cmp	r3, r4
   1d604:	bhi	1d5d4 <main@@Base+0x1919c>
   1d608:	mov	r0, r7
   1d60c:	pop	{r4, r5, r6, r7, r8, pc}
   1d610:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1d614:	mov	r9, r0
   1d618:	ldr	r3, [r0, #4]
   1d61c:	mov	r7, r1
   1d620:	cmp	r3, #0
   1d624:	movne	r8, #0
   1d628:	beq	1d68c <main@@Base+0x19254>
   1d62c:	ldr	r2, [r7]
   1d630:	ldr	r3, [r9]
   1d634:	cmp	r2, #14
   1d638:	ldr	r6, [r3, r8, lsl #2]
   1d63c:	beq	1d694 <main@@Base+0x1925c>
   1d640:	add	r4, r7, #4
   1d644:	mov	r5, r7
   1d648:	b	1d658 <main@@Base+0x19220>
   1d64c:	ldr	r3, [r5]
   1d650:	cmp	r3, #14
   1d654:	beq	1d694 <main@@Base+0x1925c>
   1d658:	bl	40a4 <fwupd_error_quark@plt>
   1d65c:	ldr	r2, [r5]
   1d660:	mov	r5, r4
   1d664:	add	r4, r4, #4
   1d668:	mov	r1, r0
   1d66c:	mov	r0, r6
   1d670:	bl	3d68 <g_error_matches@plt>
   1d674:	cmp	r0, #0
   1d678:	beq	1d64c <main@@Base+0x19214>
   1d67c:	ldr	r3, [r9, #4]
   1d680:	add	r8, r8, #1
   1d684:	cmp	r3, r8
   1d688:	bhi	1d62c <main@@Base+0x191f4>
   1d68c:	mov	r0, #1
   1d690:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d694:	mov	r0, #0
   1d698:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d69c:	ldr	r3, [pc, #484]	; 1d888 <main@@Base+0x19450>
   1d6a0:	ldr	r2, [pc, #484]	; 1d88c <main@@Base+0x19454>
   1d6a4:	add	r3, pc, r3
   1d6a8:	push	{r4, r5, r6, r7, r8, lr}
   1d6ac:	sub	sp, sp, #1040	; 0x410
   1d6b0:	ldr	r7, [r3, r2]
   1d6b4:	mov	r5, r1
   1d6b8:	mov	r4, r0
   1d6bc:	mov	r1, #0
   1d6c0:	str	r1, [sp, #8]
   1d6c4:	ldr	r3, [r7]
   1d6c8:	str	r3, [sp, #1036]	; 0x40c
   1d6cc:	bl	41a0 <g_pollable_input_stream_get_type@plt>
   1d6d0:	mov	r1, r0
   1d6d4:	mov	r0, r4
   1d6d8:	bl	39d8 <g_type_check_instance_cast@plt>
   1d6dc:	add	r4, sp, #12
   1d6e0:	add	r1, sp, #8
   1d6e4:	movw	r2, #1023	; 0x3ff
   1d6e8:	str	r1, [sp]
   1d6ec:	mov	r3, #0
   1d6f0:	mov	r1, r4
   1d6f4:	bl	3c00 <g_pollable_input_stream_read_nonblocking@plt>
   1d6f8:	subs	r8, r0, #0
   1d6fc:	blt	1d7cc <main@@Base+0x19394>
   1d700:	beq	1d7c0 <main@@Base+0x19388>
   1d704:	ldr	r6, [r5]
   1d708:	cmp	r6, #0
   1d70c:	beq	1d77c <main@@Base+0x19344>
   1d710:	add	r3, sp, #1040	; 0x410
   1d714:	ldr	r1, [pc, #372]	; 1d890 <main@@Base+0x19458>
   1d718:	add	r8, r3, r8
   1d71c:	mov	r0, r4
   1d720:	add	r1, pc, r1
   1d724:	mvn	r2, #0
   1d728:	mov	r3, #0
   1d72c:	strb	r3, [r8, #-1028]	; 0xfffffbfc
   1d730:	bl	3cb4 <g_strsplit@plt>
   1d734:	mov	r6, r0
   1d738:	ldr	r0, [r0]
   1d73c:	cmp	r0, #0
   1d740:	movne	r4, r6
   1d744:	bne	1d758 <main@@Base+0x19320>
   1d748:	b	1d77c <main@@Base+0x19344>
   1d74c:	ldr	r0, [r4, #4]!
   1d750:	cmp	r0, #0
   1d754:	beq	1d77c <main@@Base+0x19344>
   1d758:	ldrb	r3, [r0]
   1d75c:	cmp	r3, #0
   1d760:	beq	1d74c <main@@Base+0x19314>
   1d764:	ldr	r3, [r5]
   1d768:	ldr	r1, [r5, #4]
   1d76c:	blx	r3
   1d770:	ldr	r0, [r4, #4]!
   1d774:	cmp	r0, #0
   1d778:	bne	1d758 <main@@Base+0x19320>
   1d77c:	mov	r0, r5
   1d780:	bl	1d558 <main@@Base+0x19120>
   1d784:	ldr	r0, [sp, #8]
   1d788:	cmp	r0, #0
   1d78c:	beq	1d794 <main@@Base+0x1935c>
   1d790:	bl	38e8 <g_error_free@plt>
   1d794:	cmp	r6, #0
   1d798:	beq	1d7a4 <main@@Base+0x1936c>
   1d79c:	mov	r0, r6
   1d7a0:	bl	3e1c <g_strfreev@plt>
   1d7a4:	ldr	r2, [sp, #1036]	; 0x40c
   1d7a8:	mov	r0, #0
   1d7ac:	ldr	r3, [r7]
   1d7b0:	cmp	r2, r3
   1d7b4:	bne	1d864 <main@@Base+0x1942c>
   1d7b8:	add	sp, sp, #1040	; 0x410
   1d7bc:	pop	{r4, r5, r6, r7, r8, pc}
   1d7c0:	ldr	r0, [r5, #8]
   1d7c4:	bl	3a5c <g_main_loop_quit@plt>
   1d7c8:	b	1d704 <main@@Base+0x192cc>
   1d7cc:	ldr	r4, [sp, #8]
   1d7d0:	bl	3888 <g_io_error_quark@plt>
   1d7d4:	mov	r1, r0
   1d7d8:	mov	r2, #27
   1d7dc:	mov	r0, r4
   1d7e0:	bl	3d68 <g_error_matches@plt>
   1d7e4:	cmp	r0, #0
   1d7e8:	beq	1d7f4 <main@@Base+0x193bc>
   1d7ec:	mov	r6, #0
   1d7f0:	b	1d784 <main@@Base+0x1934c>
   1d7f4:	ldr	r3, [sp, #8]
   1d7f8:	mov	r1, #16
   1d7fc:	ldr	r0, [pc, #144]	; 1d894 <main@@Base+0x1945c>
   1d800:	ldr	r2, [pc, #144]	; 1d898 <main@@Base+0x19460>
   1d804:	add	r0, pc, r0
   1d808:	ldr	r3, [r3, #8]
   1d80c:	add	r2, pc, r2
   1d810:	bl	3a38 <g_log@plt>
   1d814:	b	1d7ec <main@@Base+0x193b4>
   1d818:	mov	r4, r0
   1d81c:	ldr	r0, [sp, #8]
   1d820:	mov	r6, #0
   1d824:	cmp	r0, #0
   1d828:	beq	1d830 <main@@Base+0x193f8>
   1d82c:	bl	38e8 <g_error_free@plt>
   1d830:	cmp	r6, #0
   1d834:	beq	1d840 <main@@Base+0x19408>
   1d838:	mov	r0, r6
   1d83c:	bl	3e1c <g_strfreev@plt>
   1d840:	mov	r0, r4
   1d844:	bl	42f0 <_Unwind_Resume@plt>
   1d848:	b	1d818 <main@@Base+0x193e0>
   1d84c:	b	1d818 <main@@Base+0x193e0>
   1d850:	b	1d818 <main@@Base+0x193e0>
   1d854:	b	1d818 <main@@Base+0x193e0>
   1d858:	mov	r4, r0
   1d85c:	mov	r6, #0
   1d860:	b	1d830 <main@@Base+0x193f8>
   1d864:	bl	3e4c <__stack_chk_fail@plt>
   1d868:	mov	r4, r0
   1d86c:	b	1d830 <main@@Base+0x193f8>
   1d870:	mov	r4, r0
   1d874:	ldr	r0, [sp, #8]
   1d878:	b	1d824 <main@@Base+0x193ec>
   1d87c:	b	1d870 <main@@Base+0x19438>
   1d880:	b	1d818 <main@@Base+0x193e0>
   1d884:	b	1d818 <main@@Base+0x193e0>
   1d888:	ldrdeq	r1, [r2], -ip
   1d88c:	andeq	r0, r0, r0, lsr r4
   1d890:	strdeq	sl, [r0], -r0
   1d894:	muleq	r0, r4, r6
   1d898:	muleq	r0, r0, r6
   1d89c:	push	{r4, lr}
   1d8a0:	mov	r4, r0
   1d8a4:	ldr	r0, [r0, #16]
   1d8a8:	cmp	r0, #0
   1d8ac:	beq	1d8b4 <main@@Base+0x1947c>
   1d8b0:	bl	4110 <g_object_unref@plt>
   1d8b4:	ldr	r0, [r4, #12]
   1d8b8:	cmp	r0, #0
   1d8bc:	beq	1d8c4 <main@@Base+0x1948c>
   1d8c0:	bl	4398 <g_source_destroy@plt>
   1d8c4:	ldr	r0, [r4, #8]
   1d8c8:	cmp	r0, #0
   1d8cc:	beq	1d8d4 <main@@Base+0x1949c>
   1d8d0:	bl	43b0 <g_main_loop_unref@plt>
   1d8d4:	mov	r0, r4
   1d8d8:	pop	{r4, lr}
   1d8dc:	b	3eac <g_free@plt>
   1d8e0:	push	{r4, r5, r6, r7, lr}
   1d8e4:	mov	r3, r0
   1d8e8:	mov	r5, r0
   1d8ec:	ldr	r2, [pc, #320]	; 1da34 <main@@Base+0x195fc>
   1d8f0:	ldr	r0, [pc, #320]	; 1da38 <main@@Base+0x19600>
   1d8f4:	sub	sp, sp, #12
   1d8f8:	mov	r7, r1
   1d8fc:	add	r2, pc, r2
   1d900:	add	r0, pc, r0
   1d904:	mov	r1, #128	; 0x80
   1d908:	bl	3a38 <g_log@plt>
   1d90c:	mov	r0, r5
   1d910:	mov	r2, r7
   1d914:	mov	r1, #0
   1d918:	bl	3f60 <g_dir_open@plt>
   1d91c:	subs	r6, r0, #0
   1d920:	bne	1d940 <main@@Base+0x19508>
   1d924:	b	1d9f4 <main@@Base+0x195bc>
   1d928:	mov	r1, r7
   1d92c:	bl	1d8e0 <main@@Base+0x194a8>
   1d930:	cmp	r0, #0
   1d934:	beq	1d9a0 <main@@Base+0x19568>
   1d938:	mov	r0, r4
   1d93c:	bl	3eac <g_free@plt>
   1d940:	mov	r0, r6
   1d944:	bl	405c <g_dir_read_name@plt>
   1d948:	subs	r1, r0, #0
   1d94c:	mov	r0, r5
   1d950:	beq	1d9c0 <main@@Base+0x19588>
   1d954:	mov	r2, #0
   1d958:	bl	3a80 <g_build_filename@plt>
   1d95c:	mov	r1, #4
   1d960:	mov	r4, r0
   1d964:	bl	3f00 <g_file_test@plt>
   1d968:	cmp	r0, #0
   1d96c:	mov	r0, r4
   1d970:	bne	1d928 <main@@Base+0x194f0>
   1d974:	bl	3fb4 <g_unlink@plt>
   1d978:	cmp	r0, #0
   1d97c:	beq	1d938 <main@@Base+0x19500>
   1d980:	bl	40a4 <fwupd_error_quark@plt>
   1d984:	ldr	r3, [pc, #176]	; 1da3c <main@@Base+0x19604>
   1d988:	mov	r1, r0
   1d98c:	str	r4, [sp]
   1d990:	mov	r0, r7
   1d994:	mov	r2, #0
   1d998:	add	r3, pc, r3
   1d99c:	bl	4350 <g_set_error@plt>
   1d9a0:	mov	r0, r4
   1d9a4:	bl	3eac <g_free@plt>
   1d9a8:	mov	r4, #0
   1d9ac:	mov	r0, r6
   1d9b0:	bl	3ca8 <g_dir_close@plt>
   1d9b4:	mov	r0, r4
   1d9b8:	add	sp, sp, #12
   1d9bc:	pop	{r4, r5, r6, r7, pc}
   1d9c0:	bl	3bdc <remove@plt>
   1d9c4:	cmp	r0, #0
   1d9c8:	moveq	r4, #1
   1d9cc:	beq	1d9ac <main@@Base+0x19574>
   1d9d0:	bl	40a4 <fwupd_error_quark@plt>
   1d9d4:	ldr	r3, [pc, #100]	; 1da40 <main@@Base+0x19608>
   1d9d8:	mov	r1, r0
   1d9dc:	str	r5, [sp]
   1d9e0:	mov	r0, r7
   1d9e4:	mov	r2, #0
   1d9e8:	add	r3, pc, r3
   1d9ec:	bl	4350 <g_set_error@plt>
   1d9f0:	b	1d9a8 <main@@Base+0x19570>
   1d9f4:	mov	r4, r6
   1d9f8:	mov	r0, r4
   1d9fc:	add	sp, sp, #12
   1da00:	pop	{r4, r5, r6, r7, pc}
   1da04:	mov	r5, r0
   1da08:	mov	r0, r6
   1da0c:	bl	3ca8 <g_dir_close@plt>
   1da10:	mov	r0, r5
   1da14:	bl	42f0 <_Unwind_Resume@plt>
   1da18:	mov	r5, r0
   1da1c:	mov	r0, r4
   1da20:	bl	3eac <g_free@plt>
   1da24:	b	1da08 <main@@Base+0x195d0>
   1da28:	mov	r5, r0
   1da2c:	mov	r4, #0
   1da30:	b	1da1c <main@@Base+0x195e4>
   1da34:	andeq	ip, r0, ip, asr #11
   1da38:	muleq	r0, r8, r5
   1da3c:	andeq	ip, r0, ip, lsr r5
   1da40:	andeq	ip, r0, ip, ror #9
   1da44:	ldr	r3, [pc, #108]	; 1dab8 <main@@Base+0x19680>
   1da48:	ldr	r2, [pc, #108]	; 1dabc <main@@Base+0x19684>
   1da4c:	add	r3, pc, r3
   1da50:	push	{r4, r5, r6, lr}
   1da54:	mov	r6, r0
   1da58:	ldr	r0, [r3, r2]
   1da5c:	mov	r5, r1
   1da60:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   1da64:	mov	r1, r6
   1da68:	mov	r2, r5
   1da6c:	mov	r4, r0
   1da70:	bl	1d378 <main@@Base+0x18f40>
   1da74:	subs	r5, r0, #0
   1da78:	mov	r0, r4
   1da7c:	beq	1da84 <main@@Base+0x1964c>
   1da80:	pop	{r4, r5, r6, pc}
   1da84:	cmp	r4, #0
   1da88:	beq	1da98 <main@@Base+0x19660>
   1da8c:	bl	4224 <g_ptr_array_unref@plt>
   1da90:	mov	r0, r5
   1da94:	pop	{r4, r5, r6, pc}
   1da98:	pop	{r4, r5, r6, pc}
   1da9c:	cmp	r4, #0
   1daa0:	mov	r5, r0
   1daa4:	beq	1dab0 <main@@Base+0x19678>
   1daa8:	mov	r0, r4
   1daac:	bl	4224 <g_ptr_array_unref@plt>
   1dab0:	mov	r0, r5
   1dab4:	bl	42f0 <_Unwind_Resume@plt>
   1dab8:	andeq	r1, r2, r4, lsr r1
   1dabc:	andeq	r0, r0, ip, asr #8
   1dac0:	push	{r4, r5, r6, lr}
   1dac4:	sub	sp, sp, #8
   1dac8:	mov	r5, r1
   1dacc:	bl	40d4 <g_path_get_dirname@plt>
   1dad0:	mov	r4, r0
   1dad4:	ldr	r2, [pc, #156]	; 1db78 <main@@Base+0x19740>
   1dad8:	ldr	r0, [pc, #156]	; 1db7c <main@@Base+0x19744>
   1dadc:	mov	r3, r4
   1dae0:	mov	r1, #128	; 0x80
   1dae4:	add	r2, pc, r2
   1dae8:	add	r0, pc, r0
   1daec:	bl	3a38 <g_log@plt>
   1daf0:	mov	r0, r4
   1daf4:	movw	r1, #493	; 0x1ed
   1daf8:	bl	387c <g_mkdir_with_parents@plt>
   1dafc:	cmn	r0, #1
   1db00:	movne	r5, #1
   1db04:	beq	1db1c <main@@Base+0x196e4>
   1db08:	mov	r0, r4
   1db0c:	bl	3eac <g_free@plt>
   1db10:	mov	r0, r5
   1db14:	add	sp, sp, #8
   1db18:	pop	{r4, r5, r6, pc}
   1db1c:	bl	40a4 <fwupd_error_quark@plt>
   1db20:	mov	r6, r0
   1db24:	bl	42a8 <__errno_location@plt>
   1db28:	ldr	r0, [r0]
   1db2c:	bl	3d5c <g_strerror@plt>
   1db30:	ldr	r3, [pc, #72]	; 1db80 <main@@Base+0x19748>
   1db34:	mov	r1, r6
   1db38:	str	r0, [sp, #4]
   1db3c:	mov	r2, #0
   1db40:	str	r4, [sp]
   1db44:	mov	r0, r5
   1db48:	add	r3, pc, r3
   1db4c:	bl	4350 <g_set_error@plt>
   1db50:	mov	r5, #0
   1db54:	b	1db08 <main@@Base+0x196d0>
   1db58:	mov	r5, r0
   1db5c:	mov	r0, r4
   1db60:	bl	3eac <g_free@plt>
   1db64:	mov	r0, r5
   1db68:	bl	42f0 <_Unwind_Resume@plt>
   1db6c:	mov	r5, r0
   1db70:	mov	r4, #0
   1db74:	b	1db5c <main@@Base+0x19724>
   1db78:	andeq	ip, r0, r8, lsl #8
   1db7c:			; <UNDEFINED> instruction: 0x0000c3b0
   1db80:			; <UNDEFINED> instruction: 0x0000c3b8
   1db84:	ldr	ip, [pc, #300]	; 1dcb8 <main@@Base+0x19880>
   1db88:	ldr	r3, [pc, #300]	; 1dcbc <main@@Base+0x19884>
   1db8c:	add	ip, pc, ip
   1db90:	push	{r4, r5, r6, r7, r8, r9, lr}
   1db94:	sub	sp, sp, #20
   1db98:	ldr	r5, [ip, r3]
   1db9c:	mov	r9, r1
   1dba0:	mov	r8, r2
   1dba4:	mov	r7, r0
   1dba8:	ldr	r3, [r5]
   1dbac:	str	r3, [sp, #12]
   1dbb0:	bl	4218 <g_file_new_for_path@plt>
   1dbb4:	mov	r6, r0
   1dbb8:	bl	423c <g_file_get_parent@plt>
   1dbbc:	mov	r1, #0
   1dbc0:	mov	r4, r0
   1dbc4:	bl	3bac <g_file_query_exists@plt>
   1dbc8:	subs	r1, r0, #0
   1dbcc:	bne	1dc24 <main@@Base+0x197ec>
   1dbd0:	mov	r0, r4
   1dbd4:	mov	r2, r8
   1dbd8:	bl	3f3c <g_file_make_directory_with_parents@plt>
   1dbdc:	cmp	r0, #0
   1dbe0:	bne	1dc24 <main@@Base+0x197ec>
   1dbe4:	cmp	r4, #0
   1dbe8:	mov	r7, r0
   1dbec:	beq	1dbf8 <main@@Base+0x197c0>
   1dbf0:	mov	r0, r4
   1dbf4:	bl	4110 <g_object_unref@plt>
   1dbf8:	cmp	r6, #0
   1dbfc:	beq	1dc08 <main@@Base+0x197d0>
   1dc00:	mov	r0, r6
   1dc04:	bl	4110 <g_object_unref@plt>
   1dc08:	ldr	r2, [sp, #12]
   1dc0c:	mov	r0, r7
   1dc10:	ldr	r3, [r5]
   1dc14:	cmp	r2, r3
   1dc18:	bne	1dc70 <main@@Base+0x19838>
   1dc1c:	add	sp, sp, #20
   1dc20:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1dc24:	mov	r0, r9
   1dc28:	add	r1, sp, #8
   1dc2c:	bl	4320 <g_bytes_get_data@plt>
   1dc30:	ldr	ip, [sp, #8]
   1dc34:	mov	r9, r0
   1dc38:	ldr	r2, [pc, #128]	; 1dcc0 <main@@Base+0x19888>
   1dc3c:	mov	r1, #128	; 0x80
   1dc40:	ldr	r0, [pc, #124]	; 1dcc4 <main@@Base+0x1988c>
   1dc44:	mov	r3, r7
   1dc48:	add	r2, pc, r2
   1dc4c:	str	ip, [sp]
   1dc50:	add	r0, pc, r0
   1dc54:	bl	3a38 <g_log@plt>
   1dc58:	mov	r0, r7
   1dc5c:	mov	r1, r9
   1dc60:	mov	r3, r8
   1dc64:	ldr	r2, [sp, #8]
   1dc68:	bl	3c9c <g_file_set_contents@plt>
   1dc6c:	b	1dbe4 <main@@Base+0x197ac>
   1dc70:	bl	3e4c <__stack_chk_fail@plt>
   1dc74:	mov	r5, r0
   1dc78:	cmp	r6, #0
   1dc7c:	beq	1dc88 <main@@Base+0x19850>
   1dc80:	mov	r0, r6
   1dc84:	bl	4110 <g_object_unref@plt>
   1dc88:	mov	r0, r5
   1dc8c:	bl	42f0 <_Unwind_Resume@plt>
   1dc90:	cmp	r4, #0
   1dc94:	mov	r5, r0
   1dc98:	beq	1dc78 <main@@Base+0x19840>
   1dc9c:	mov	r0, r4
   1dca0:	bl	4110 <g_object_unref@plt>
   1dca4:	b	1dc78 <main@@Base+0x19840>
   1dca8:	b	1dc74 <main@@Base+0x1983c>
   1dcac:	mov	r5, r0
   1dcb0:	mov	r6, #0
   1dcb4:	b	1dc78 <main@@Base+0x19840>
   1dcb8:	strdeq	r0, [r2], -r4
   1dcbc:	andeq	r0, r0, r0, lsr r4
   1dcc0:	ldrdeq	ip, [r0], -r4
   1dcc4:	andeq	ip, r0, r8, asr #4
   1dcc8:	push	{r4, r5, lr}
   1dccc:	sub	sp, sp, #28
   1dcd0:	ldr	lr, [pc, #132]	; 1dd5c <main@@Base+0x19924>
   1dcd4:	mov	ip, #0
   1dcd8:	ldr	r4, [pc, #128]	; 1dd60 <main@@Base+0x19928>
   1dcdc:	mov	r3, r1
   1dce0:	add	lr, pc, lr
   1dce4:	add	r1, sp, #12
   1dce8:	add	r2, sp, #16
   1dcec:	mov	r5, r0
   1dcf0:	ldr	r4, [lr, r4]
   1dcf4:	str	ip, [sp, #12]
   1dcf8:	str	ip, [sp, #16]
   1dcfc:	ldr	ip, [r4]
   1dd00:	str	ip, [sp, #20]
   1dd04:	bl	3e10 <g_file_get_contents@plt>
   1dd08:	cmp	r0, #0
   1dd0c:	beq	1dd40 <main@@Base+0x19908>
   1dd10:	ldr	ip, [sp, #16]
   1dd14:	mov	r1, #128	; 0x80
   1dd18:	ldr	r0, [pc, #68]	; 1dd64 <main@@Base+0x1992c>
   1dd1c:	mov	r3, r5
   1dd20:	ldr	r2, [pc, #64]	; 1dd68 <main@@Base+0x19930>
   1dd24:	add	r0, pc, r0
   1dd28:	str	ip, [sp]
   1dd2c:	add	r2, pc, r2
   1dd30:	bl	3a38 <g_log@plt>
   1dd34:	ldr	r0, [sp, #12]
   1dd38:	ldr	r1, [sp, #16]
   1dd3c:	bl	3a98 <g_bytes_new_take@plt>
   1dd40:	ldr	r2, [sp, #20]
   1dd44:	ldr	r3, [r4]
   1dd48:	cmp	r2, r3
   1dd4c:	bne	1dd58 <main@@Base+0x19920>
   1dd50:	add	sp, sp, #28
   1dd54:	pop	{r4, r5, pc}
   1dd58:	bl	3e4c <__stack_chk_fail@plt>
   1dd5c:	andeq	r0, r2, r0, lsr #29
   1dd60:	andeq	r0, r0, r0, lsr r4
   1dd64:	andeq	ip, r0, r4, ror r1
   1dd68:	andeq	ip, r0, ip, lsl #4
   1dd6c:	ldr	r3, [pc, #372]	; 1dee8 <main@@Base+0x19ab0>
   1dd70:	cmp	r0, #0
   1dd74:	ldr	ip, [pc, #368]	; 1deec <main@@Base+0x19ab4>
   1dd78:	add	r3, pc, r3
   1dd7c:	push	{r4, r5, r6, r7, lr}
   1dd80:	sub	sp, sp, #12
   1dd84:	ldr	r5, [r3, ip]
   1dd88:	mov	r4, r2
   1dd8c:	mov	r6, r1
   1dd90:	mov	r2, #0
   1dd94:	str	r2, [sp]
   1dd98:	ldr	r3, [r5]
   1dd9c:	str	r3, [sp, #4]
   1dda0:	ble	1de68 <main@@Base+0x19a30>
   1dda4:	cmp	r4, #0
   1dda8:	beq	1de04 <main@@Base+0x199cc>
   1ddac:	ldr	r3, [r4]
   1ddb0:	cmp	r3, #0
   1ddb4:	beq	1de04 <main@@Base+0x199cc>
   1ddb8:	ldr	r0, [pc, #304]	; 1def0 <main@@Base+0x19ab8>
   1ddbc:	ldr	r1, [pc, #304]	; 1def4 <main@@Base+0x19abc>
   1ddc0:	ldr	r2, [pc, #304]	; 1def8 <main@@Base+0x19ac0>
   1ddc4:	add	r0, pc, r0
   1ddc8:	add	r1, pc, r1
   1ddcc:	add	r2, pc, r2
   1ddd0:	bl	3870 <g_return_if_fail_warning@plt>
   1ddd4:	mov	r4, #0
   1ddd8:	ldr	r0, [sp]
   1dddc:	cmp	r0, #0
   1dde0:	beq	1dde8 <main@@Base+0x199b0>
   1dde4:	bl	38e8 <g_error_free@plt>
   1dde8:	ldr	r2, [sp, #4]
   1ddec:	mov	r0, r4
   1ddf0:	ldr	r3, [r5]
   1ddf4:	cmp	r2, r3
   1ddf8:	bne	1deac <main@@Base+0x19a74>
   1ddfc:	add	sp, sp, #12
   1de00:	pop	{r4, r5, r6, r7, pc}
   1de04:	cmp	r6, #0
   1de08:	beq	1de48 <main@@Base+0x19a10>
   1de0c:	mov	r1, #1
   1de10:	bl	3858 <g_unix_input_stream_new@plt>
   1de14:	mov	r1, r6
   1de18:	mov	r2, #0
   1de1c:	mov	r3, sp
   1de20:	mov	r7, r0
   1de24:	bl	399c <g_input_stream_read_bytes@plt>
   1de28:	cmp	r0, #0
   1de2c:	movne	r4, r0
   1de30:	beq	1de88 <main@@Base+0x19a50>
   1de34:	cmp	r7, #0
   1de38:	beq	1ddd8 <main@@Base+0x199a0>
   1de3c:	mov	r0, r7
   1de40:	bl	4110 <g_object_unref@plt>
   1de44:	b	1ddd8 <main@@Base+0x199a0>
   1de48:	bl	40a4 <fwupd_error_quark@plt>
   1de4c:	ldr	r3, [pc, #168]	; 1defc <main@@Base+0x19ac4>
   1de50:	mov	r1, r0
   1de54:	mov	r2, #10
   1de58:	mov	r0, r4
   1de5c:	add	r3, pc, r3
   1de60:	bl	3ae0 <g_set_error_literal@plt>
   1de64:	b	1ddd4 <main@@Base+0x1999c>
   1de68:	ldr	r0, [pc, #144]	; 1df00 <main@@Base+0x19ac8>
   1de6c:	ldr	r1, [pc, #144]	; 1df04 <main@@Base+0x19acc>
   1de70:	ldr	r2, [pc, #144]	; 1df08 <main@@Base+0x19ad0>
   1de74:	add	r0, pc, r0
   1de78:	add	r1, pc, r1
   1de7c:	add	r2, pc, r2
   1de80:	bl	3870 <g_return_if_fail_warning@plt>
   1de84:	b	1ddd4 <main@@Base+0x1999c>
   1de88:	bl	40a4 <fwupd_error_quark@plt>
   1de8c:	ldr	r3, [sp]
   1de90:	mov	r1, r0
   1de94:	mov	r2, #7
   1de98:	mov	r0, r4
   1de9c:	ldr	r3, [r3, #8]
   1dea0:	bl	3ae0 <g_set_error_literal@plt>
   1dea4:	mov	r4, #0
   1dea8:	b	1de34 <main@@Base+0x199fc>
   1deac:	bl	3e4c <__stack_chk_fail@plt>
   1deb0:	mov	r4, r0
   1deb4:	ldr	r0, [sp]
   1deb8:	cmp	r0, #0
   1debc:	beq	1dec4 <main@@Base+0x19a8c>
   1dec0:	bl	38e8 <g_error_free@plt>
   1dec4:	mov	r0, r4
   1dec8:	bl	42f0 <_Unwind_Resume@plt>
   1decc:	b	1deb0 <main@@Base+0x19a78>
   1ded0:	cmp	r7, #0
   1ded4:	mov	r4, r0
   1ded8:	beq	1deb4 <main@@Base+0x19a7c>
   1dedc:	mov	r0, r7
   1dee0:	bl	4110 <g_object_unref@plt>
   1dee4:	b	1deb4 <main@@Base+0x19a7c>
   1dee8:	andeq	r0, r2, r8, lsl #28
   1deec:	andeq	r0, r0, r0, lsr r4
   1def0:	ldrdeq	ip, [r0], -r4
   1def4:	andeq	fp, r0, r4, ror #31
   1def8:	andeq	r9, r0, r4, lsr #1
   1defc:	strdeq	ip, [r0], -r8
   1df00:	andeq	ip, r0, r4, lsr #32
   1df04:	andeq	fp, r0, r4, lsr pc
   1df08:	andeq	ip, r0, r0, lsl #2
   1df0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1df10:	mov	r4, r0
   1df14:	ldr	lr, [pc, #520]	; 1e124 <main@@Base+0x19cec>
   1df18:	mov	sl, r2
   1df1c:	ldr	ip, [pc, #516]	; 1e128 <main@@Base+0x19cf0>
   1df20:	sub	sp, sp, #16
   1df24:	add	lr, pc, lr
   1df28:	ldr	r0, [pc, #508]	; 1e12c <main@@Base+0x19cf4>
   1df2c:	mov	r3, r1
   1df30:	mov	r8, r1
   1df34:	ldr	r9, [lr, ip]
   1df38:	mov	r2, lr
   1df3c:	ldr	r2, [pc, #492]	; 1e130 <main@@Base+0x19cf8>
   1df40:	mov	r1, #128	; 0x80
   1df44:	add	r0, pc, r0
   1df48:	ldr	ip, [r9]
   1df4c:	add	r2, pc, r2
   1df50:	str	ip, [sp, #12]
   1df54:	bl	3a38 <g_log@plt>
   1df58:	bl	42b4 <archive_read_new@plt>
   1df5c:	mov	r6, r0
   1df60:	bl	4254 <archive_read_support_format_all@plt>
   1df64:	mov	r0, r6
   1df68:	bl	3a8c <archive_read_support_filter_all@plt>
   1df6c:	mov	r1, #0
   1df70:	mov	r0, r4
   1df74:	bl	4320 <g_bytes_get_data@plt>
   1df78:	mov	r5, r0
   1df7c:	mov	r0, r4
   1df80:	bl	3f24 <g_bytes_get_size@plt>
   1df84:	mov	r1, r5
   1df88:	mov	r2, r0
   1df8c:	mov	r0, r6
   1df90:	bl	4104 <archive_read_open_memory@plt>
   1df94:	cmp	r0, #0
   1df98:	addeq	r7, sp, #8
   1df9c:	beq	1dfec <main@@Base+0x19bb4>
   1dfa0:	b	1e090 <main@@Base+0x19c58>
   1dfa4:	mov	r0, r4
   1dfa8:	bl	384c <archive_entry_pathname@plt>
   1dfac:	mov	r1, r0
   1dfb0:	mov	r2, #0
   1dfb4:	mov	r0, r8
   1dfb8:	bl	3a80 <g_build_filename@plt>
   1dfbc:	mov	r5, r0
   1dfc0:	mov	r0, r4
   1dfc4:	mov	r1, r5
   1dfc8:	bl	38a0 <archive_entry_update_pathname_utf8@plt>
   1dfcc:	mov	r0, r5
   1dfd0:	bl	3eac <g_free@plt>
   1dfd4:	mov	r0, r6
   1dfd8:	ldr	r1, [sp, #8]
   1dfdc:	mov	r2, #0
   1dfe0:	bl	435c <archive_read_extract@plt>
   1dfe4:	cmp	r0, #0
   1dfe8:	bne	1e0c4 <main@@Base+0x19c8c>
   1dfec:	mov	r0, r6
   1dff0:	mov	r1, r7
   1dff4:	bl	4164 <archive_read_next_header@plt>
   1dff8:	cmp	r0, #1
   1dffc:	beq	1e024 <main@@Base+0x19bec>
   1e000:	cmp	r0, #0
   1e004:	bne	1e05c <main@@Base+0x19c24>
   1e008:	ldr	r4, [sp, #8]
   1e00c:	mov	r0, r4
   1e010:	bl	384c <archive_entry_pathname@plt>
   1e014:	cmp	r0, #0
   1e018:	bne	1dfa4 <main@@Base+0x19b6c>
   1e01c:	bl	3eac <g_free@plt>
   1e020:	b	1dfec <main@@Base+0x19bb4>
   1e024:	mov	r4, r0
   1e028:	cmp	r6, #0
   1e02c:	beq	1e040 <main@@Base+0x19c08>
   1e030:	mov	r0, r6
   1e034:	bl	3f90 <archive_read_close@plt>
   1e038:	mov	r0, r6
   1e03c:	bl	3af8 <archive_read_free@plt>
   1e040:	ldr	r2, [sp, #12]
   1e044:	mov	r0, r4
   1e048:	ldr	r3, [r9]
   1e04c:	cmp	r2, r3
   1e050:	bne	1e0f8 <main@@Base+0x19cc0>
   1e054:	add	sp, sp, #16
   1e058:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e05c:	bl	40a4 <fwupd_error_quark@plt>
   1e060:	mov	r4, r0
   1e064:	mov	r0, r6
   1e068:	bl	3c78 <archive_error_string@plt>
   1e06c:	ldr	r3, [pc, #192]	; 1e134 <main@@Base+0x19cfc>
   1e070:	mov	r1, r4
   1e074:	mov	r2, #0
   1e078:	add	r3, pc, r3
   1e07c:	mov	r4, r2
   1e080:	str	r0, [sp]
   1e084:	mov	r0, sl
   1e088:	bl	4350 <g_set_error@plt>
   1e08c:	b	1e028 <main@@Base+0x19bf0>
   1e090:	bl	40a4 <fwupd_error_quark@plt>
   1e094:	mov	r4, r0
   1e098:	mov	r0, r6
   1e09c:	bl	3c78 <archive_error_string@plt>
   1e0a0:	ldr	r3, [pc, #144]	; 1e138 <main@@Base+0x19d00>
   1e0a4:	mov	r1, r4
   1e0a8:	mov	r2, #0
   1e0ac:	add	r3, pc, r3
   1e0b0:	mov	r4, r2
   1e0b4:	str	r0, [sp]
   1e0b8:	mov	r0, sl
   1e0bc:	bl	4350 <g_set_error@plt>
   1e0c0:	b	1e028 <main@@Base+0x19bf0>
   1e0c4:	bl	40a4 <fwupd_error_quark@plt>
   1e0c8:	mov	r4, r0
   1e0cc:	mov	r0, r6
   1e0d0:	bl	3c78 <archive_error_string@plt>
   1e0d4:	ldr	r3, [pc, #96]	; 1e13c <main@@Base+0x19d04>
   1e0d8:	mov	r1, r4
   1e0dc:	mov	r2, #0
   1e0e0:	add	r3, pc, r3
   1e0e4:	mov	r4, r2
   1e0e8:	str	r0, [sp]
   1e0ec:	mov	r0, sl
   1e0f0:	bl	4350 <g_set_error@plt>
   1e0f4:	b	1e028 <main@@Base+0x19bf0>
   1e0f8:	bl	3e4c <__stack_chk_fail@plt>
   1e0fc:	mov	r4, r0
   1e100:	mov	r5, #0
   1e104:	mov	r0, r5
   1e108:	bl	3eac <g_free@plt>
   1e10c:	mov	r0, r4
   1e110:	bl	42f0 <_Unwind_Resume@plt>
   1e114:	mov	r4, r0
   1e118:	b	1e104 <main@@Base+0x19ccc>
   1e11c:	b	1e0fc <main@@Base+0x19cc4>
   1e120:	b	1e0fc <main@@Base+0x19cc4>
   1e124:	andeq	r0, r2, ip, asr ip
   1e128:	andeq	r0, r0, r0, lsr r4
   1e12c:	andeq	fp, r0, r4, asr pc
   1e130:	andeq	ip, r0, r8, lsr r0
   1e134:	andeq	fp, r0, r4, lsr pc
   1e138:	strdeq	fp, [r0], -r0
   1e13c:	andeq	fp, r0, r4, ror #29
   1e140:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e144:	mov	r4, r0
   1e148:	ldr	r0, [pc, #348]	; 1e2ac <main@@Base+0x19e74>
   1e14c:	mov	sl, r1
   1e150:	mov	r1, r4
   1e154:	mov	r9, r2
   1e158:	add	r0, pc, r0
   1e15c:	mov	r8, r3
   1e160:	ldr	r7, [sp, #32]
   1e164:	bl	4338 <g_strjoinv@plt>
   1e168:	mov	r6, r0
   1e16c:	ldr	r2, [pc, #316]	; 1e2b0 <main@@Base+0x19e78>
   1e170:	ldr	r0, [pc, #316]	; 1e2b4 <main@@Base+0x19e7c>
   1e174:	mov	r3, r6
   1e178:	mov	r1, #128	; 0x80
   1e17c:	add	r2, pc, r2
   1e180:	add	r0, pc, r0
   1e184:	bl	3a38 <g_log@plt>
   1e188:	mov	r0, r4
   1e18c:	mov	r1, #68	; 0x44
   1e190:	mov	r2, r7
   1e194:	bl	4410 <g_subprocess_newv@plt>
   1e198:	subs	r5, r0, #0
   1e19c:	beq	1e228 <main@@Base+0x19df0>
   1e1a0:	mov	r0, #24
   1e1a4:	bl	4248 <g_malloc0@plt>
   1e1a8:	mov	r4, r0
   1e1ac:	mov	r0, #0
   1e1b0:	str	sl, [r4]
   1e1b4:	mov	r1, r0
   1e1b8:	str	r9, [r4, #4]
   1e1bc:	bl	3c84 <g_main_loop_new@plt>
   1e1c0:	str	r0, [r4, #8]
   1e1c4:	mov	r0, r5
   1e1c8:	bl	3e88 <g_subprocess_get_stdout_pipe@plt>
   1e1cc:	str	r0, [r4, #16]
   1e1d0:	mov	r0, r4
   1e1d4:	str	r8, [r4, #20]
   1e1d8:	bl	1d558 <main@@Base+0x19120>
   1e1dc:	ldr	r0, [r4, #8]
   1e1e0:	bl	3c48 <g_main_loop_run@plt>
   1e1e4:	mov	r0, r5
   1e1e8:	mov	r1, r8
   1e1ec:	mov	r2, r7
   1e1f0:	bl	39b4 <g_subprocess_wait_check@plt>
   1e1f4:	mov	r7, r0
   1e1f8:	mov	r0, r6
   1e1fc:	bl	3eac <g_free@plt>
   1e200:	cmp	r5, #0
   1e204:	beq	1e210 <main@@Base+0x19dd8>
   1e208:	mov	r0, r5
   1e20c:	bl	4110 <g_object_unref@plt>
   1e210:	cmp	r4, #0
   1e214:	beq	1e220 <main@@Base+0x19de8>
   1e218:	mov	r0, r4
   1e21c:	bl	1d89c <main@@Base+0x19464>
   1e220:	mov	r0, r7
   1e224:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e228:	mov	r4, r5
   1e22c:	mov	r7, r5
   1e230:	b	1e1f8 <main@@Base+0x19dc0>
   1e234:	mov	r7, r0
   1e238:	mov	r4, #0
   1e23c:	mov	r0, r6
   1e240:	bl	3eac <g_free@plt>
   1e244:	cmp	r5, #0
   1e248:	beq	1e254 <main@@Base+0x19e1c>
   1e24c:	mov	r0, r5
   1e250:	bl	4110 <g_object_unref@plt>
   1e254:	cmp	r4, #0
   1e258:	beq	1e264 <main@@Base+0x19e2c>
   1e25c:	mov	r0, r4
   1e260:	bl	1d89c <main@@Base+0x19464>
   1e264:	mov	r0, r7
   1e268:	bl	42f0 <_Unwind_Resume@plt>
   1e26c:	mov	r5, #0
   1e270:	mov	r7, r0
   1e274:	mov	r4, r5
   1e278:	b	1e23c <main@@Base+0x19e04>
   1e27c:	b	1e26c <main@@Base+0x19e34>
   1e280:	mov	r6, #0
   1e284:	mov	r7, r0
   1e288:	mov	r5, r6
   1e28c:	mov	r4, r6
   1e290:	b	1e23c <main@@Base+0x19e04>
   1e294:	mov	r7, r0
   1e298:	b	1e254 <main@@Base+0x19e1c>
   1e29c:	mov	r7, r0
   1e2a0:	b	1e244 <main@@Base+0x19e0c>
   1e2a4:	mov	r7, r0
   1e2a8:	b	1e23c <main@@Base+0x19e04>
   1e2ac:	strdeq	r9, [r0], -ip
   1e2b0:	andeq	fp, r0, ip, asr lr
   1e2b4:	andeq	fp, r0, r8, lsl sp
   1e2b8:	ldr	r3, [pc, #148]	; 1e354 <main@@Base+0x19f1c>
   1e2bc:	ldr	ip, [pc, #148]	; 1e358 <main@@Base+0x19f20>
   1e2c0:	add	r3, pc, r3
   1e2c4:	push	{r4, lr}
   1e2c8:	movw	r4, #1234	; 0x4d2
   1e2cc:	ldr	r3, [r3, ip]
   1e2d0:	sub	sp, sp, #16
   1e2d4:	cmp	r2, r4
   1e2d8:	ldr	ip, [r3]
   1e2dc:	str	ip, [sp, #12]
   1e2e0:	beq	1e348 <main@@Base+0x19f10>
   1e2e4:	movw	ip, #4321	; 0x10e1
   1e2e8:	cmp	r2, ip
   1e2ec:	bne	1e31c <main@@Base+0x19ee4>
   1e2f0:	lsl	r2, r1, #8
   1e2f4:	orr	r1, r2, r1, lsr #8
   1e2f8:	strh	r1, [sp, #10]
   1e2fc:	ldrh	r1, [sp, #10]
   1e300:	ldr	r2, [sp, #12]
   1e304:	strh	r1, [r0]
   1e308:	ldr	r3, [r3]
   1e30c:	cmp	r2, r3
   1e310:	bne	1e350 <main@@Base+0x19f18>
   1e314:	add	sp, sp, #16
   1e318:	pop	{r4, pc}
   1e31c:	ldr	r3, [pc, #56]	; 1e35c <main@@Base+0x19f24>
   1e320:	mov	r1, #0
   1e324:	ldr	r0, [pc, #52]	; 1e360 <main@@Base+0x19f28>
   1e328:	movw	r2, #606	; 0x25e
   1e32c:	str	r1, [sp]
   1e330:	add	r3, pc, r3
   1e334:	ldr	r1, [pc, #40]	; 1e364 <main@@Base+0x19f2c>
   1e338:	add	r0, pc, r0
   1e33c:	add	r3, r3, #28
   1e340:	add	r1, pc, r1
   1e344:	bl	42e4 <g_assertion_message_expr@plt>
   1e348:	strh	r1, [sp, #10]
   1e34c:	b	1e2fc <main@@Base+0x19ec4>
   1e350:	bl	3e4c <__stack_chk_fail@plt>
   1e354:	andeq	r0, r2, r0, asr #17
   1e358:	andeq	r0, r0, r0, lsr r4
   1e35c:	andeq	fp, r0, ip, ror sl
   1e360:	andeq	fp, r0, r0, ror #22
   1e364:	andeq	fp, r0, r8, lsr #25
   1e368:	ldr	r3, [pc, #148]	; 1e404 <main@@Base+0x19fcc>
   1e36c:	ldr	ip, [pc, #148]	; 1e408 <main@@Base+0x19fd0>
   1e370:	add	r3, pc, r3
   1e374:	push	{r4, lr}
   1e378:	movw	r4, #1234	; 0x4d2
   1e37c:	ldr	r3, [r3, ip]
   1e380:	sub	sp, sp, #16
   1e384:	cmp	r2, r4
   1e388:	mov	r4, r0
   1e38c:	ldr	ip, [r3]
   1e390:	str	ip, [sp, #12]
   1e394:	beq	1e3f8 <main@@Base+0x19fc0>
   1e398:	movw	r0, #4321	; 0x10e1
   1e39c:	cmp	r2, r0
   1e3a0:	bne	1e3cc <main@@Base+0x19f94>
   1e3a4:	rev	r1, r1
   1e3a8:	str	r1, [sp, #8]
   1e3ac:	ldr	r0, [sp, #8]
   1e3b0:	ldr	r2, [sp, #12]
   1e3b4:	str	r0, [r4]
   1e3b8:	ldr	r3, [r3]
   1e3bc:	cmp	r2, r3
   1e3c0:	bne	1e400 <main@@Base+0x19fc8>
   1e3c4:	add	sp, sp, #16
   1e3c8:	pop	{r4, pc}
   1e3cc:	ldr	r3, [pc, #56]	; 1e40c <main@@Base+0x19fd4>
   1e3d0:	mov	r1, #0
   1e3d4:	ldr	r0, [pc, #52]	; 1e410 <main@@Base+0x19fd8>
   1e3d8:	movw	r2, #631	; 0x277
   1e3dc:	str	r1, [sp]
   1e3e0:	add	r3, pc, r3
   1e3e4:	ldr	r1, [pc, #40]	; 1e414 <main@@Base+0x19fdc>
   1e3e8:	add	r0, pc, r0
   1e3ec:	add	r3, r3, #52	; 0x34
   1e3f0:	add	r1, pc, r1
   1e3f4:	bl	42e4 <g_assertion_message_expr@plt>
   1e3f8:	str	r1, [sp, #8]
   1e3fc:	b	1e3ac <main@@Base+0x19f74>
   1e400:	bl	3e4c <__stack_chk_fail@plt>
   1e404:	andeq	r0, r2, r0, lsl r8
   1e408:	andeq	r0, r0, r0, lsr r4
   1e40c:	andeq	fp, r0, ip, asr #19
   1e410:			; <UNDEFINED> instruction: 0x0000bab0
   1e414:	strdeq	fp, [r0], -r8
   1e418:	ldr	r3, [pc, #152]	; 1e4b8 <main@@Base+0x1a080>
   1e41c:	movw	ip, #1234	; 0x4d2
   1e420:	ldr	r2, [pc, #148]	; 1e4bc <main@@Base+0x1a084>
   1e424:	cmp	r1, ip
   1e428:	add	r3, pc, r3
   1e42c:	push	{lr}		; (str lr, [sp, #-4]!)
   1e430:	sub	sp, sp, #20
   1e434:	ldr	r3, [r3, r2]
   1e438:	ldrh	r0, [r0]
   1e43c:	ldr	r2, [r3]
   1e440:	strh	r0, [sp, #10]
   1e444:	str	r2, [sp, #12]
   1e448:	beq	1e4ac <main@@Base+0x1a074>
   1e44c:	movw	r2, #4321	; 0x10e1
   1e450:	cmp	r1, r2
   1e454:	bne	1e480 <main@@Base+0x1a048>
   1e458:	ldrh	r2, [sp, #10]
   1e45c:	lsl	r0, r2, #8
   1e460:	orr	r0, r0, r2, lsr #8
   1e464:	uxth	r0, r0
   1e468:	ldr	r2, [sp, #12]
   1e46c:	ldr	r3, [r3]
   1e470:	cmp	r2, r3
   1e474:	bne	1e4b4 <main@@Base+0x1a07c>
   1e478:	add	sp, sp, #20
   1e47c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e480:	ldr	r3, [pc, #56]	; 1e4c0 <main@@Base+0x1a088>
   1e484:	mov	r1, #0
   1e488:	ldr	r0, [pc, #52]	; 1e4c4 <main@@Base+0x1a08c>
   1e48c:	movw	r2, #658	; 0x292
   1e490:	str	r1, [sp]
   1e494:	add	r3, pc, r3
   1e498:	ldr	r1, [pc, #40]	; 1e4c8 <main@@Base+0x1a090>
   1e49c:	add	r0, pc, r0
   1e4a0:	add	r3, r3, #76	; 0x4c
   1e4a4:	add	r1, pc, r1
   1e4a8:	bl	42e4 <g_assertion_message_expr@plt>
   1e4ac:	ldrh	r0, [sp, #10]
   1e4b0:	b	1e468 <main@@Base+0x1a030>
   1e4b4:	bl	3e4c <__stack_chk_fail@plt>
   1e4b8:	andeq	r0, r2, r8, asr r7
   1e4bc:	andeq	r0, r0, r0, lsr r4
   1e4c0:	andeq	fp, r0, r8, lsl r9
   1e4c4:	strdeq	fp, [r0], -ip
   1e4c8:	andeq	fp, r0, r4, asr #22
   1e4cc:	ldr	r3, [pc, #144]	; 1e564 <main@@Base+0x1a12c>
   1e4d0:	movw	ip, #1234	; 0x4d2
   1e4d4:	ldr	r2, [pc, #140]	; 1e568 <main@@Base+0x1a130>
   1e4d8:	cmp	r1, ip
   1e4dc:	add	r3, pc, r3
   1e4e0:	push	{lr}		; (str lr, [sp, #-4]!)
   1e4e4:	sub	sp, sp, #20
   1e4e8:	ldr	r3, [r3, r2]
   1e4ec:	ldr	r0, [r0]
   1e4f0:	ldr	r2, [r3]
   1e4f4:	str	r0, [sp, #8]
   1e4f8:	str	r2, [sp, #12]
   1e4fc:	beq	1e558 <main@@Base+0x1a120>
   1e500:	movw	r2, #4321	; 0x10e1
   1e504:	cmp	r1, r2
   1e508:	bne	1e52c <main@@Base+0x1a0f4>
   1e50c:	ldr	r0, [sp, #8]
   1e510:	rev	r0, r0
   1e514:	ldr	r2, [sp, #12]
   1e518:	ldr	r3, [r3]
   1e51c:	cmp	r2, r3
   1e520:	bne	1e560 <main@@Base+0x1a128>
   1e524:	add	sp, sp, #20
   1e528:	pop	{pc}		; (ldr pc, [sp], #4)
   1e52c:	ldr	r3, [pc, #56]	; 1e56c <main@@Base+0x1a134>
   1e530:	mov	r1, #0
   1e534:	ldr	r0, [pc, #52]	; 1e570 <main@@Base+0x1a138>
   1e538:	movw	r2, #685	; 0x2ad
   1e53c:	str	r1, [sp]
   1e540:	add	r3, pc, r3
   1e544:	ldr	r1, [pc, #40]	; 1e574 <main@@Base+0x1a13c>
   1e548:	add	r0, pc, r0
   1e54c:	add	r3, r3, #100	; 0x64
   1e550:	add	r1, pc, r1
   1e554:	bl	42e4 <g_assertion_message_expr@plt>
   1e558:	ldr	r0, [sp, #8]
   1e55c:	b	1e514 <main@@Base+0x1a0dc>
   1e560:	bl	3e4c <__stack_chk_fail@plt>
   1e564:	andeq	r0, r2, r4, lsr #13
   1e568:	andeq	r0, r0, r0, lsr r4
   1e56c:	andeq	fp, r0, ip, ror #16
   1e570:	andeq	fp, r0, r0, asr r9
   1e574:	muleq	r0, r8, sl
   1e578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e57c:	mov	r5, r0
   1e580:	ldr	r6, [pc, #392]	; 1e710 <main@@Base+0x1a2d8>
   1e584:	sub	sp, sp, #76	; 0x4c
   1e588:	ldr	r4, [pc, #388]	; 1e714 <main@@Base+0x1a2dc>
   1e58c:	add	r8, sp, #40	; 0x28
   1e590:	add	r6, pc, r6
   1e594:	ldr	r7, [pc, #380]	; 1e718 <main@@Base+0x1a2e0>
   1e598:	add	lr, r6, #124	; 0x7c
   1e59c:	add	r4, pc, r4
   1e5a0:	mov	ip, r8
   1e5a4:	add	fp, r6, #152	; 0x98
   1e5a8:	ldm	lr!, {r0, r1, r2, r3}
   1e5ac:	add	r6, r6, #168	; 0xa8
   1e5b0:	ldr	r9, [r4, r7]
   1e5b4:	add	sl, sp, #4
   1e5b8:	add	r7, sp, #20
   1e5bc:	stmia	ip!, {r0, r1, r2, r3}
   1e5c0:	mov	r4, r7
   1e5c4:	ldm	lr, {r0, r1, r2}
   1e5c8:	ldr	lr, [r9]
   1e5cc:	stm	ip, {r0, r1, r2}
   1e5d0:	ldm	fp, {r0, r1, r2, r3}
   1e5d4:	str	lr, [sp, #68]	; 0x44
   1e5d8:	stm	sl, {r0, r1, r2, r3}
   1e5dc:	ldm	r6!, {r0, r1, r2, r3}
   1e5e0:	ldr	ip, [r6]
   1e5e4:	stmia	r4!, {r0, r1, r2, r3}
   1e5e8:	mov	r0, r5
   1e5ec:	mov	r1, #2
   1e5f0:	str	ip, [r4]
   1e5f4:	bl	1d5b4 <main@@Base+0x1917c>
   1e5f8:	cmp	r0, #1
   1e5fc:	bls	1e614 <main@@Base+0x1a1dc>
   1e600:	mov	r1, sl
   1e604:	mov	r0, r5
   1e608:	bl	1d610 <main@@Base+0x191d8>
   1e60c:	cmp	r0, #0
   1e610:	bne	1e6f4 <main@@Base+0x1a2bc>
   1e614:	mov	r0, r5
   1e618:	mov	r1, #1
   1e61c:	bl	1d5b4 <main@@Base+0x1917c>
   1e620:	cmp	r0, #1
   1e624:	bls	1e63c <main@@Base+0x1a204>
   1e628:	mov	r1, r7
   1e62c:	mov	r0, r5
   1e630:	bl	1d610 <main@@Base+0x191d8>
   1e634:	cmp	r0, #0
   1e638:	bne	1e6dc <main@@Base+0x1a2a4>
   1e63c:	ldr	r7, [sp, #40]	; 0x28
   1e640:	cmp	r7, #14
   1e644:	beq	1e6a4 <main@@Base+0x1a26c>
   1e648:	ldr	r3, [r5, #4]
   1e64c:	cmp	r3, #0
   1e650:	beq	1e698 <main@@Base+0x1a260>
   1e654:	mov	r4, #0
   1e658:	b	1e66c <main@@Base+0x1a234>
   1e65c:	ldr	r3, [r5, #4]
   1e660:	add	r4, r4, #1
   1e664:	cmp	r4, r3
   1e668:	bcs	1e698 <main@@Base+0x1a260>
   1e66c:	ldr	r3, [r5]
   1e670:	ldr	r6, [r3, r4, lsl #2]
   1e674:	bl	40a4 <fwupd_error_quark@plt>
   1e678:	mov	r2, r7
   1e67c:	mov	r1, r0
   1e680:	mov	r0, r6
   1e684:	bl	3d68 <g_error_matches@plt>
   1e688:	cmp	r0, #0
   1e68c:	beq	1e65c <main@@Base+0x1a224>
   1e690:	cmp	r6, #0
   1e694:	bne	1e6d0 <main@@Base+0x1a298>
   1e698:	ldr	r7, [r8, #4]!
   1e69c:	cmp	r7, #14
   1e6a0:	bne	1e648 <main@@Base+0x1a210>
   1e6a4:	bl	40a4 <fwupd_error_quark@plt>
   1e6a8:	ldr	r2, [pc, #108]	; 1e71c <main@@Base+0x1a2e4>
   1e6ac:	mov	r1, #8
   1e6b0:	add	r2, pc, r2
   1e6b4:	bl	3cc0 <g_error_new@plt>
   1e6b8:	ldr	r2, [sp, #68]	; 0x44
   1e6bc:	ldr	r3, [r9]
   1e6c0:	cmp	r2, r3
   1e6c4:	bne	1e70c <main@@Base+0x1a2d4>
   1e6c8:	add	sp, sp, #76	; 0x4c
   1e6cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6d0:	mov	r0, r6
   1e6d4:	bl	3b64 <g_error_copy@plt>
   1e6d8:	b	1e6b8 <main@@Base+0x1a280>
   1e6dc:	bl	40a4 <fwupd_error_quark@plt>
   1e6e0:	ldr	r2, [pc, #56]	; 1e720 <main@@Base+0x1a2e8>
   1e6e4:	mov	r1, #9
   1e6e8:	add	r2, pc, r2
   1e6ec:	bl	3cc0 <g_error_new@plt>
   1e6f0:	b	1e6b8 <main@@Base+0x1a280>
   1e6f4:	bl	40a4 <fwupd_error_quark@plt>
   1e6f8:	ldr	r2, [pc, #36]	; 1e724 <main@@Base+0x1a2ec>
   1e6fc:	mov	r1, #9
   1e700:	add	r2, pc, r2
   1e704:	bl	3cc0 <g_error_new@plt>
   1e708:	b	1e6b8 <main@@Base+0x1a280>
   1e70c:	bl	3e4c <__stack_chk_fail@plt>
   1e710:	andeq	fp, r0, ip, lsl r8
   1e714:	andeq	r0, r2, r4, ror #11
   1e718:	andeq	r0, r0, r0, lsr r4
   1e71c:	andeq	fp, r0, ip, lsr #19
   1e720:	andeq	fp, r0, r0, asr #18
   1e724:	strdeq	fp, [r0], -ip
   1e728:	push	{r4, r5, lr}
   1e72c:	sub	sp, sp, #12
   1e730:	cmp	r0, #6
   1e734:	addls	pc, pc, r0, lsl #2
   1e738:	b	1e854 <main@@Base+0x1a41c>
   1e73c:	b	1e78c <main@@Base+0x1a354>
   1e740:	b	1e7b4 <main@@Base+0x1a37c>
   1e744:	b	1e7d8 <main@@Base+0x1a3a0>
   1e748:	b	1e7f4 <main@@Base+0x1a3bc>
   1e74c:	b	1e81c <main@@Base+0x1a3e4>
   1e750:	b	1e838 <main@@Base+0x1a400>
   1e754:	b	1e758 <main@@Base+0x1a320>
   1e758:	mov	r0, #5
   1e75c:	bl	1e728 <main@@Base+0x1a2f0>
   1e760:	ldr	r1, [pc, #644]	; 1e9ec <main@@Base+0x1a5b4>
   1e764:	mov	r2, #0
   1e768:	mov	r5, r0
   1e76c:	add	r1, pc, r1
   1e770:	bl	3a80 <g_build_filename@plt>
   1e774:	mov	r4, r0
   1e778:	mov	r0, r5
   1e77c:	bl	3eac <g_free@plt>
   1e780:	mov	r0, r4
   1e784:	add	sp, sp, #12
   1e788:	pop	{r4, r5, pc}
   1e78c:	mov	r0, #2
   1e790:	bl	1e728 <main@@Base+0x1a2f0>
   1e794:	ldr	r1, [pc, #596]	; 1e9f0 <main@@Base+0x1a5b8>
   1e798:	mov	r3, #0
   1e79c:	ldr	r2, [pc, #592]	; 1e9f4 <main@@Base+0x1a5bc>
   1e7a0:	mov	r5, r0
   1e7a4:	add	r1, pc, r1
   1e7a8:	add	r2, pc, r2
   1e7ac:	bl	3a80 <g_build_filename@plt>
   1e7b0:	b	1e774 <main@@Base+0x1a33c>
   1e7b4:	ldr	r0, [pc, #572]	; 1e9f8 <main@@Base+0x1a5c0>
   1e7b8:	add	r0, pc, r0
   1e7bc:	bl	3e64 <g_getenv@plt>
   1e7c0:	cmp	r0, #0
   1e7c4:	beq	1e90c <main@@Base+0x1a4d4>
   1e7c8:	bl	3b7c <g_strdup@plt>
   1e7cc:	mov	r4, r0
   1e7d0:	mov	r5, #0
   1e7d4:	b	1e778 <main@@Base+0x1a340>
   1e7d8:	ldr	r0, [pc, #540]	; 1e9fc <main@@Base+0x1a5c4>
   1e7dc:	add	r0, pc, r0
   1e7e0:	bl	3e64 <g_getenv@plt>
   1e7e4:	cmp	r0, #0
   1e7e8:	beq	1e8e4 <main@@Base+0x1a4ac>
   1e7ec:	bl	3b7c <g_strdup@plt>
   1e7f0:	b	1e7cc <main@@Base+0x1a394>
   1e7f4:	mov	r0, #2
   1e7f8:	bl	1e728 <main@@Base+0x1a2f0>
   1e7fc:	ldr	r1, [pc, #508]	; 1ea00 <main@@Base+0x1a5c8>
   1e800:	mov	r3, #0
   1e804:	ldr	r2, [pc, #504]	; 1ea04 <main@@Base+0x1a5cc>
   1e808:	mov	r5, r0
   1e80c:	add	r1, pc, r1
   1e810:	add	r2, pc, r2
   1e814:	bl	3a80 <g_build_filename@plt>
   1e818:	b	1e774 <main@@Base+0x1a33c>
   1e81c:	ldr	r0, [pc, #484]	; 1ea08 <main@@Base+0x1a5d0>
   1e820:	add	r0, pc, r0
   1e824:	bl	3e64 <g_getenv@plt>
   1e828:	cmp	r0, #0
   1e82c:	beq	1e8bc <main@@Base+0x1a484>
   1e830:	bl	3b7c <g_strdup@plt>
   1e834:	b	1e7cc <main@@Base+0x1a394>
   1e838:	ldr	r0, [pc, #460]	; 1ea0c <main@@Base+0x1a5d4>
   1e83c:	add	r0, pc, r0
   1e840:	bl	3e64 <g_getenv@plt>
   1e844:	cmp	r0, #0
   1e848:	beq	1e894 <main@@Base+0x1a45c>
   1e84c:	bl	3b7c <g_strdup@plt>
   1e850:	b	1e7cc <main@@Base+0x1a394>
   1e854:	ldr	r3, [pc, #436]	; 1ea10 <main@@Base+0x1a5d8>
   1e858:	mov	r5, #0
   1e85c:	ldr	r0, [pc, #432]	; 1ea14 <main@@Base+0x1a5dc>
   1e860:	movw	r2, #855	; 0x357
   1e864:	ldr	r1, [pc, #428]	; 1ea18 <main@@Base+0x1a5e0>
   1e868:	add	r3, pc, r3
   1e86c:	add	r0, pc, r0
   1e870:	add	r3, r3, #188	; 0xbc
   1e874:	str	r5, [sp]
   1e878:	add	r1, pc, r1
   1e87c:	bl	42e4 <g_assertion_message_expr@plt>
   1e880:	mov	r4, r0
   1e884:	mov	r0, r5
   1e888:	bl	3eac <g_free@plt>
   1e88c:	mov	r0, r4
   1e890:	bl	42f0 <_Unwind_Resume@plt>
   1e894:	ldr	r0, [pc, #384]	; 1ea1c <main@@Base+0x1a5e4>
   1e898:	add	r0, pc, r0
   1e89c:	bl	3e64 <g_getenv@plt>
   1e8a0:	cmp	r0, #0
   1e8a4:	beq	1e964 <main@@Base+0x1a52c>
   1e8a8:	ldr	r1, [pc, #368]	; 1ea20 <main@@Base+0x1a5e8>
   1e8ac:	mov	r2, #0
   1e8b0:	add	r1, pc, r1
   1e8b4:	bl	3a80 <g_build_filename@plt>
   1e8b8:	b	1e7cc <main@@Base+0x1a394>
   1e8bc:	ldr	r0, [pc, #352]	; 1ea24 <main@@Base+0x1a5ec>
   1e8c0:	add	r0, pc, r0
   1e8c4:	bl	3e64 <g_getenv@plt>
   1e8c8:	subs	r1, r0, #0
   1e8cc:	beq	1e974 <main@@Base+0x1a53c>
   1e8d0:	ldr	r1, [pc, #336]	; 1ea28 <main@@Base+0x1a5f0>
   1e8d4:	mov	r2, #0
   1e8d8:	add	r1, pc, r1
   1e8dc:	bl	3a80 <g_build_filename@plt>
   1e8e0:	b	1e7cc <main@@Base+0x1a394>
   1e8e4:	ldr	r0, [pc, #320]	; 1ea2c <main@@Base+0x1a5f4>
   1e8e8:	add	r0, pc, r0
   1e8ec:	bl	3e64 <g_getenv@plt>
   1e8f0:	subs	r1, r0, #0
   1e8f4:	beq	1e93c <main@@Base+0x1a504>
   1e8f8:	ldr	r1, [pc, #304]	; 1ea30 <main@@Base+0x1a5f8>
   1e8fc:	mov	r2, #0
   1e900:	add	r1, pc, r1
   1e904:	bl	3a80 <g_build_filename@plt>
   1e908:	b	1e7cc <main@@Base+0x1a394>
   1e90c:	ldr	r0, [pc, #288]	; 1ea34 <main@@Base+0x1a5fc>
   1e910:	add	r0, pc, r0
   1e914:	bl	3e64 <g_getenv@plt>
   1e918:	subs	r2, r0, #0
   1e91c:	beq	1e94c <main@@Base+0x1a514>
   1e920:	ldr	r1, [pc, #272]	; 1ea38 <main@@Base+0x1a600>
   1e924:	mov	r3, #0
   1e928:	ldr	r2, [pc, #268]	; 1ea3c <main@@Base+0x1a604>
   1e92c:	add	r1, pc, r1
   1e930:	add	r2, pc, r2
   1e934:	bl	3a80 <g_build_filename@plt>
   1e938:	b	1e7cc <main@@Base+0x1a394>
   1e93c:	ldr	r0, [pc, #252]	; 1ea40 <main@@Base+0x1a608>
   1e940:	add	r0, pc, r0
   1e944:	bl	3a80 <g_build_filename@plt>
   1e948:	b	1e7cc <main@@Base+0x1a394>
   1e94c:	ldr	r0, [pc, #240]	; 1ea44 <main@@Base+0x1a60c>
   1e950:	ldr	r1, [pc, #240]	; 1ea48 <main@@Base+0x1a610>
   1e954:	add	r0, pc, r0
   1e958:	add	r1, pc, r1
   1e95c:	bl	3a80 <g_build_filename@plt>
   1e960:	b	1e7cc <main@@Base+0x1a394>
   1e964:	ldr	r0, [pc, #224]	; 1ea4c <main@@Base+0x1a614>
   1e968:	add	r0, pc, r0
   1e96c:	bl	3b7c <g_strdup@plt>
   1e970:	b	1e7cc <main@@Base+0x1a394>
   1e974:	ldr	r0, [pc, #212]	; 1ea50 <main@@Base+0x1a618>
   1e978:	add	r0, pc, r0
   1e97c:	bl	3a80 <g_build_filename@plt>
   1e980:	b	1e7cc <main@@Base+0x1a394>
   1e984:	mov	r4, r0
   1e988:	mov	r5, #0
   1e98c:	b	1e884 <main@@Base+0x1a44c>
   1e990:	b	1e984 <main@@Base+0x1a54c>
   1e994:	b	1e984 <main@@Base+0x1a54c>
   1e998:	b	1e984 <main@@Base+0x1a54c>
   1e99c:	b	1e984 <main@@Base+0x1a54c>
   1e9a0:	b	1e984 <main@@Base+0x1a54c>
   1e9a4:	b	1e984 <main@@Base+0x1a54c>
   1e9a8:	b	1e984 <main@@Base+0x1a54c>
   1e9ac:	b	1e984 <main@@Base+0x1a54c>
   1e9b0:	b	1e984 <main@@Base+0x1a54c>
   1e9b4:	b	1e984 <main@@Base+0x1a54c>
   1e9b8:	b	1e984 <main@@Base+0x1a54c>
   1e9bc:	b	1e984 <main@@Base+0x1a54c>
   1e9c0:	b	1e984 <main@@Base+0x1a54c>
   1e9c4:	b	1e984 <main@@Base+0x1a54c>
   1e9c8:	b	1e984 <main@@Base+0x1a54c>
   1e9cc:	b	1e984 <main@@Base+0x1a54c>
   1e9d0:	b	1e984 <main@@Base+0x1a54c>
   1e9d4:	b	1e880 <main@@Base+0x1a448>
   1e9d8:	b	1e984 <main@@Base+0x1a54c>
   1e9dc:	b	1e984 <main@@Base+0x1a54c>
   1e9e0:	b	1e984 <main@@Base+0x1a54c>
   1e9e4:	b	1e984 <main@@Base+0x1a54c>
   1e9e8:	b	1e984 <main@@Base+0x1a54c>
   1e9ec:	andeq	r7, r0, r8, lsr #13
   1e9f0:	andeq	fp, r0, r0, ror r9
   1e9f4:	andeq	r7, r0, ip, ror #12
   1e9f8:	andeq	fp, r0, ip, lsr r9
   1e9fc:	muleq	r0, ip, r8
   1ea00:	andeq	fp, r0, r4, lsl #18
   1ea04:	andeq	r7, r0, r4, lsl #12
   1ea08:	andeq	fp, r0, r0, lsr #17
   1ea0c:	andeq	fp, r0, r8, ror #16
   1ea10:	andeq	fp, r0, r4, asr #10
   1ea14:	andeq	fp, r0, ip, lsr #12
   1ea18:	andeq	fp, r0, r0, ror r7
   1ea1c:	strdeq	fp, [r0], -r4
   1ea20:	andeq	fp, r0, r8, lsl #16
   1ea24:	andeq	fp, r0, r0, lsl r8
   1ea28:	andeq	fp, r0, r0, lsl #16
   1ea2c:	andeq	fp, r0, r4, lsr #15
   1ea30:	muleq	r0, ip, r7
   1ea34:	andeq	fp, r0, r0, asr #15
   1ea38:	ldrdeq	fp, [r0], -r8
   1ea3c:	andeq	r7, r0, r4, ror #9
   1ea40:	andeq	fp, r0, ip, asr r7
   1ea44:			; <UNDEFINED> instruction: 0x0000b7b0
   1ea48:			; <UNDEFINED> instruction: 0x000074bc
   1ea4c:	andeq	fp, r0, r0, asr r7
   1ea50:	andeq	fp, r0, r0, ror #14
   1ea54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea58:	mov	r9, r0
   1ea5c:	ldr	r4, [pc, #1500]	; 1f040 <main@@Base+0x1ac08>
   1ea60:	mov	r8, r2
   1ea64:	ldr	lr, [pc, #1496]	; 1f044 <main@@Base+0x1ac0c>
   1ea68:	sub	sp, sp, #52	; 0x34
   1ea6c:	add	r4, pc, r4
   1ea70:	ldr	r0, [pc, #1488]	; 1f048 <main@@Base+0x1ac10>
   1ea74:	mov	ip, #0
   1ea78:	mov	r5, r3
   1ea7c:	ldr	lr, [r4, lr]
   1ea80:	mov	r3, r4
   1ea84:	str	ip, [sp, #32]
   1ea88:	mov	r7, r1
   1ea8c:	str	ip, [sp, #36]	; 0x24
   1ea90:	ldr	r2, [lr]
   1ea94:	str	lr, [sp, #28]
   1ea98:	str	ip, [sp, #40]	; 0x28
   1ea9c:	str	r2, [sp, #44]	; 0x2c
   1eaa0:	ldr	r0, [r4, r0]
   1eaa4:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   1eaa8:	cmp	r9, #0
   1eaac:	mov	r4, r0
   1eab0:	beq	1ee28 <main@@Base+0x1a9f0>
   1eab4:	cmp	r7, #0
   1eab8:	beq	1ee4c <main@@Base+0x1aa14>
   1eabc:	cmp	r8, #0
   1eac0:	beq	1ee70 <main@@Base+0x1aa38>
   1eac4:	cmp	r5, #0
   1eac8:	beq	1eb70 <main@@Base+0x1a738>
   1eacc:	ldr	r3, [r5]
   1ead0:	cmp	r3, #0
   1ead4:	beq	1eb70 <main@@Base+0x1a738>
   1ead8:	ldr	r1, [pc, #1388]	; 1f04c <main@@Base+0x1ac14>
   1eadc:	ldr	r0, [pc, #1388]	; 1f050 <main@@Base+0x1ac18>
   1eae0:	ldr	r2, [pc, #1388]	; 1f054 <main@@Base+0x1ac1c>
   1eae4:	add	r1, pc, r1
   1eae8:	add	r0, pc, r0
   1eaec:	add	r1, r1, #208	; 0xd0
   1eaf0:	add	r2, pc, r2
   1eaf4:	bl	3870 <g_return_if_fail_warning@plt>
   1eaf8:	mov	r6, #0
   1eafc:	cmp	r4, #0
   1eb00:	bne	1eeb0 <main@@Base+0x1aa78>
   1eb04:	mov	r7, r4
   1eb08:	mov	r9, r4
   1eb0c:	mov	fp, r4
   1eb10:	mov	sl, r4
   1eb14:	mov	r5, r4
   1eb18:	mov	r0, r6
   1eb1c:	bl	3eac <g_free@plt>
   1eb20:	ldr	r0, [sp, #40]	; 0x28
   1eb24:	bl	3eac <g_free@plt>
   1eb28:	ldr	r0, [sp, #36]	; 0x24
   1eb2c:	bl	3eac <g_free@plt>
   1eb30:	mov	r0, sl
   1eb34:	bl	3eac <g_free@plt>
   1eb38:	mov	r0, fp
   1eb3c:	bl	3eac <g_free@plt>
   1eb40:	mov	r0, r9
   1eb44:	bl	3eac <g_free@plt>
   1eb48:	mov	r0, r7
   1eb4c:	bl	3eac <g_free@plt>
   1eb50:	ldr	r1, [sp, #28]
   1eb54:	ldr	r2, [sp, #44]	; 0x2c
   1eb58:	mov	r0, r5
   1eb5c:	ldr	r3, [r1]
   1eb60:	cmp	r2, r3
   1eb64:	bne	1eecc <main@@Base+0x1aa94>
   1eb68:	add	sp, sp, #52	; 0x34
   1eb6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eb70:	ldr	r0, [pc, #1248]	; 1f058 <main@@Base+0x1ac20>
   1eb74:	mov	r1, r5
   1eb78:	add	r0, pc, r0
   1eb7c:	bl	3a74 <g_dir_make_tmp@plt>
   1eb80:	subs	r6, r0, #0
   1eb84:	beq	1eaf8 <main@@Base+0x1a6c0>
   1eb88:	mov	r0, r9
   1eb8c:	mov	r1, r6
   1eb90:	mov	r2, r5
   1eb94:	bl	1df0c <main@@Base+0x19ad4>
   1eb98:	cmp	r0, #0
   1eb9c:	beq	1eafc <main@@Base+0x1a6c4>
   1eba0:	mov	r0, #3
   1eba4:	bl	1e728 <main@@Base+0x1a2f0>
   1eba8:	ldr	r1, [pc, #1196]	; 1f05c <main@@Base+0x1ac24>
   1ebac:	mov	r2, #0
   1ebb0:	mov	fp, r0
   1ebb4:	add	r1, pc, r1
   1ebb8:	bl	3a80 <g_build_filename@plt>
   1ebbc:	mov	r9, r0
   1ebc0:	ldr	r0, [pc, #1176]	; 1f060 <main@@Base+0x1ac28>
   1ebc4:	add	r0, pc, r0
   1ebc8:	bl	3b7c <g_strdup@plt>
   1ebcc:	mov	r1, r0
   1ebd0:	mov	r0, r4
   1ebd4:	bl	426c <g_ptr_array_add@plt>
   1ebd8:	ldr	r1, [pc, #1156]	; 1f064 <main@@Base+0x1ac2c>
   1ebdc:	mov	r0, r4
   1ebe0:	add	r1, pc, r1
   1ebe4:	bl	1d464 <main@@Base+0x1902c>
   1ebe8:	ldr	r1, [pc, #1144]	; 1f068 <main@@Base+0x1ac30>
   1ebec:	mov	r0, r4
   1ebf0:	add	r1, pc, r1
   1ebf4:	bl	1d464 <main@@Base+0x1902c>
   1ebf8:	ldr	r1, [pc, #1132]	; 1f06c <main@@Base+0x1ac34>
   1ebfc:	mov	r0, r4
   1ec00:	add	r1, pc, r1
   1ec04:	bl	1d464 <main@@Base+0x1902c>
   1ec08:	ldr	r1, [pc, #1120]	; 1f070 <main@@Base+0x1ac38>
   1ec0c:	mov	r0, r4
   1ec10:	add	r1, pc, r1
   1ec14:	bl	1d464 <main@@Base+0x1902c>
   1ec18:	ldr	r1, [pc, #1108]	; 1f074 <main@@Base+0x1ac3c>
   1ec1c:	mov	r0, r4
   1ec20:	mov	r2, r6
   1ec24:	add	r1, pc, r1
   1ec28:	bl	1d464 <main@@Base+0x1902c>
   1ec2c:	mov	r0, r9
   1ec30:	mov	r1, #16
   1ec34:	bl	3f00 <g_file_test@plt>
   1ec38:	cmp	r0, #0
   1ec3c:	beq	1ec54 <main@@Base+0x1a81c>
   1ec40:	ldr	r1, [pc, #1072]	; 1f078 <main@@Base+0x1ac40>
   1ec44:	mov	r0, r4
   1ec48:	mov	r2, r9
   1ec4c:	add	r1, pc, r1
   1ec50:	bl	1d464 <main@@Base+0x1902c>
   1ec54:	ldr	r1, [pc, #1056]	; 1f07c <main@@Base+0x1ac44>
   1ec58:	mov	r0, r4
   1ec5c:	add	r1, pc, r1
   1ec60:	bl	1d464 <main@@Base+0x1902c>
   1ec64:	ldr	r1, [pc, #1044]	; 1f080 <main@@Base+0x1ac48>
   1ec68:	mov	r0, r4
   1ec6c:	add	r1, pc, r1
   1ec70:	bl	1d464 <main@@Base+0x1902c>
   1ec74:	ldr	r1, [pc, #1032]	; 1f084 <main@@Base+0x1ac4c>
   1ec78:	mov	r0, r4
   1ec7c:	add	r1, pc, r1
   1ec80:	bl	1d464 <main@@Base+0x1902c>
   1ec84:	ldr	r1, [pc, #1020]	; 1f088 <main@@Base+0x1ac50>
   1ec88:	mov	r0, r4
   1ec8c:	add	r1, pc, r1
   1ec90:	bl	1d464 <main@@Base+0x1902c>
   1ec94:	ldr	r1, [pc, #1008]	; 1f08c <main@@Base+0x1ac54>
   1ec98:	mov	r0, r4
   1ec9c:	add	r1, pc, r1
   1eca0:	bl	1d464 <main@@Base+0x1902c>
   1eca4:	ldr	r1, [pc, #996]	; 1f090 <main@@Base+0x1ac58>
   1eca8:	mov	r0, r4
   1ecac:	add	r1, pc, r1
   1ecb0:	bl	1d464 <main@@Base+0x1902c>
   1ecb4:	ldr	r1, [pc, #984]	; 1f094 <main@@Base+0x1ac5c>
   1ecb8:	mov	r0, r4
   1ecbc:	add	r1, pc, r1
   1ecc0:	bl	1d464 <main@@Base+0x1902c>
   1ecc4:	ldr	r1, [pc, #972]	; 1f098 <main@@Base+0x1ac60>
   1ecc8:	mov	r0, r4
   1eccc:	mov	r2, r7
   1ecd0:	add	r1, pc, r1
   1ecd4:	bl	1d464 <main@@Base+0x1902c>
   1ecd8:	mov	r0, r4
   1ecdc:	mov	r1, #0
   1ece0:	bl	426c <g_ptr_array_add@plt>
   1ece4:	ldr	r0, [pc, #944]	; 1f09c <main@@Base+0x1ac64>
   1ece8:	ldr	r1, [r4]
   1ecec:	add	r0, pc, r0
   1ecf0:	bl	4338 <g_strjoinv@plt>
   1ecf4:	mov	r7, r0
   1ecf8:	ldr	r2, [pc, #928]	; 1f0a0 <main@@Base+0x1ac68>
   1ecfc:	ldr	r0, [pc, #928]	; 1f0a4 <main@@Base+0x1ac6c>
   1ed00:	mov	r3, r7
   1ed04:	str	r6, [sp]
   1ed08:	mov	r1, #128	; 0x80
   1ed0c:	add	r0, pc, r0
   1ed10:	add	r2, pc, r2
   1ed14:	bl	3a38 <g_log@plt>
   1ed18:	ldr	r0, [pc, #904]	; 1f0a8 <main@@Base+0x1ac70>
   1ed1c:	mov	r3, #0
   1ed20:	ldr	r1, [r4]
   1ed24:	mov	r2, r3
   1ed28:	str	r3, [sp]
   1ed2c:	add	r0, pc, r0
   1ed30:	str	r3, [sp, #4]
   1ed34:	add	r3, sp, #40	; 0x28
   1ed38:	str	r5, [sp, #20]
   1ed3c:	str	r3, [sp, #8]
   1ed40:	add	r3, sp, #36	; 0x24
   1ed44:	str	r3, [sp, #12]
   1ed48:	add	r3, sp, #32
   1ed4c:	str	r3, [sp, #16]
   1ed50:	mov	r3, #4
   1ed54:	bl	3e70 <g_spawn_sync@plt>
   1ed58:	cmp	r0, #0
   1ed5c:	beq	1ee10 <main@@Base+0x1a9d8>
   1ed60:	ldr	r3, [sp, #40]	; 0x28
   1ed64:	cmp	r3, #0
   1ed68:	beq	1ed78 <main@@Base+0x1a940>
   1ed6c:	ldrb	r2, [r3]
   1ed70:	cmp	r2, #0
   1ed74:	bne	1ee94 <main@@Base+0x1aa5c>
   1ed78:	ldr	r2, [sp, #32]
   1ed7c:	cmp	r2, #0
   1ed80:	beq	1edd0 <main@@Base+0x1a998>
   1ed84:	bl	40a4 <fwupd_error_quark@plt>
   1ed88:	ldr	ip, [sp, #36]	; 0x24
   1ed8c:	mov	r1, r0
   1ed90:	ldr	r3, [pc, #788]	; 1f0ac <main@@Base+0x1ac74>
   1ed94:	mov	r0, r5
   1ed98:	mov	r2, #0
   1ed9c:	add	r3, pc, r3
   1eda0:	str	ip, [sp]
   1eda4:	bl	4350 <g_set_error@plt>
   1eda8:	mov	r8, #0
   1edac:	mov	sl, r8
   1edb0:	mov	r5, r8
   1edb4:	mov	r0, r4
   1edb8:	bl	4224 <g_ptr_array_unref@plt>
   1edbc:	cmp	r8, #0
   1edc0:	beq	1eb18 <main@@Base+0x1a6e0>
   1edc4:	mov	r0, r8
   1edc8:	bl	414c <g_bytes_unref@plt>
   1edcc:	b	1eb18 <main@@Base+0x1a6e0>
   1edd0:	mov	r1, r8
   1edd4:	mov	r0, r6
   1edd8:	bl	3a80 <g_build_filename@plt>
   1eddc:	mov	r1, r5
   1ede0:	mov	sl, r0
   1ede4:	bl	1dcc8 <main@@Base+0x19890>
   1ede8:	subs	r8, r0, #0
   1edec:	beq	1eec4 <main@@Base+0x1aa8c>
   1edf0:	mov	r1, r5
   1edf4:	mov	r0, r6
   1edf8:	bl	1d8e0 <main@@Base+0x194a8>
   1edfc:	cmp	r0, #0
   1ee00:	moveq	r5, r0
   1ee04:	movne	r5, r8
   1ee08:	movne	r8, #0
   1ee0c:	b	1edb4 <main@@Base+0x1a97c>
   1ee10:	ldr	r1, [pc, #664]	; 1f0b0 <main@@Base+0x1ac78>
   1ee14:	mov	r0, r5
   1ee18:	mov	r2, r7
   1ee1c:	add	r1, pc, r1
   1ee20:	bl	4404 <g_prefix_error@plt>
   1ee24:	b	1eda8 <main@@Base+0x1a970>
   1ee28:	ldr	r1, [pc, #644]	; 1f0b4 <main@@Base+0x1ac7c>
   1ee2c:	ldr	r0, [pc, #644]	; 1f0b8 <main@@Base+0x1ac80>
   1ee30:	ldr	r2, [pc, #644]	; 1f0bc <main@@Base+0x1ac84>
   1ee34:	add	r1, pc, r1
   1ee38:	add	r0, pc, r0
   1ee3c:	add	r1, r1, #208	; 0xd0
   1ee40:	add	r2, pc, r2
   1ee44:	bl	3870 <g_return_if_fail_warning@plt>
   1ee48:	b	1eaf8 <main@@Base+0x1a6c0>
   1ee4c:	ldr	r1, [pc, #620]	; 1f0c0 <main@@Base+0x1ac88>
   1ee50:	ldr	r0, [pc, #620]	; 1f0c4 <main@@Base+0x1ac8c>
   1ee54:	ldr	r2, [pc, #620]	; 1f0c8 <main@@Base+0x1ac90>
   1ee58:	add	r1, pc, r1
   1ee5c:	add	r0, pc, r0
   1ee60:	add	r1, r1, #208	; 0xd0
   1ee64:	add	r2, pc, r2
   1ee68:	bl	3870 <g_return_if_fail_warning@plt>
   1ee6c:	b	1eaf8 <main@@Base+0x1a6c0>
   1ee70:	ldr	r1, [pc, #596]	; 1f0cc <main@@Base+0x1ac94>
   1ee74:	ldr	r0, [pc, #596]	; 1f0d0 <main@@Base+0x1ac98>
   1ee78:	ldr	r2, [pc, #596]	; 1f0d4 <main@@Base+0x1ac9c>
   1ee7c:	add	r1, pc, r1
   1ee80:	add	r0, pc, r0
   1ee84:	add	r1, r1, #208	; 0xd0
   1ee88:	add	r2, pc, r2
   1ee8c:	bl	3870 <g_return_if_fail_warning@plt>
   1ee90:	b	1eaf8 <main@@Base+0x1a6c0>
   1ee94:	ldr	r0, [pc, #572]	; 1f0d8 <main@@Base+0x1aca0>
   1ee98:	mov	r1, #128	; 0x80
   1ee9c:	ldr	r2, [pc, #568]	; 1f0dc <main@@Base+0x1aca4>
   1eea0:	add	r0, pc, r0
   1eea4:	add	r2, pc, r2
   1eea8:	bl	3a38 <g_log@plt>
   1eeac:	b	1ed78 <main@@Base+0x1a940>
   1eeb0:	mov	r8, #0
   1eeb4:	mov	r7, r8
   1eeb8:	mov	r9, r8
   1eebc:	mov	fp, r8
   1eec0:	mov	sl, r8
   1eec4:	mov	r5, r8
   1eec8:	b	1edb4 <main@@Base+0x1a97c>
   1eecc:	bl	3e4c <__stack_chk_fail@plt>
   1eed0:	mov	r4, r0
   1eed4:	mov	r0, r7
   1eed8:	bl	3eac <g_free@plt>
   1eedc:	mov	r0, r4
   1eee0:	bl	42f0 <_Unwind_Resume@plt>
   1eee4:	mov	r6, #0
   1eee8:	mov	r5, r0
   1eeec:	mov	fp, r6
   1eef0:	mov	r9, r6
   1eef4:	cmp	r4, #0
   1eef8:	moveq	r8, r4
   1eefc:	moveq	sl, r8
   1ef00:	moveq	r7, r8
   1ef04:	beq	1ef1c <main@@Base+0x1aae4>
   1ef08:	mov	r8, #0
   1ef0c:	mov	sl, r8
   1ef10:	mov	r7, r8
   1ef14:	mov	r0, r4
   1ef18:	bl	4224 <g_ptr_array_unref@plt>
   1ef1c:	cmp	r8, #0
   1ef20:	beq	1ef2c <main@@Base+0x1aaf4>
   1ef24:	mov	r0, r8
   1ef28:	bl	414c <g_bytes_unref@plt>
   1ef2c:	mov	r4, r5
   1ef30:	mov	r0, r6
   1ef34:	bl	3eac <g_free@plt>
   1ef38:	ldr	r0, [sp, #40]	; 0x28
   1ef3c:	bl	3eac <g_free@plt>
   1ef40:	ldr	r0, [sp, #36]	; 0x24
   1ef44:	bl	3eac <g_free@plt>
   1ef48:	mov	r0, sl
   1ef4c:	bl	3eac <g_free@plt>
   1ef50:	mov	r0, fp
   1ef54:	bl	3eac <g_free@plt>
   1ef58:	mov	r0, r9
   1ef5c:	bl	3eac <g_free@plt>
   1ef60:	b	1eed4 <main@@Base+0x1aa9c>
   1ef64:	b	1eee4 <main@@Base+0x1aaac>
   1ef68:	b	1eee4 <main@@Base+0x1aaac>
   1ef6c:	mov	r4, r0
   1ef70:	b	1ef38 <main@@Base+0x1ab00>
   1ef74:	mov	r4, r0
   1ef78:	b	1ef40 <main@@Base+0x1ab08>
   1ef7c:	mov	r4, r0
   1ef80:	b	1ef48 <main@@Base+0x1ab10>
   1ef84:	mov	r6, #0
   1ef88:	mov	r5, r0
   1ef8c:	mov	sl, r6
   1ef90:	mov	r7, r6
   1ef94:	mov	r9, r6
   1ef98:	mov	fp, r6
   1ef9c:	b	1ef2c <main@@Base+0x1aaf4>
   1efa0:	mov	r5, r0
   1efa4:	b	1ef14 <main@@Base+0x1aadc>
   1efa8:	mov	r8, #0
   1efac:	mov	r5, r0
   1efb0:	mov	sl, r8
   1efb4:	b	1ef14 <main@@Base+0x1aadc>
   1efb8:	b	1eee4 <main@@Base+0x1aaac>
   1efbc:	mov	fp, #0
   1efc0:	mov	r5, r0
   1efc4:	mov	r9, fp
   1efc8:	b	1eef4 <main@@Base+0x1aabc>
   1efcc:	b	1efa8 <main@@Base+0x1ab70>
   1efd0:	b	1eee4 <main@@Base+0x1aaac>
   1efd4:	mov	r5, r0
   1efd8:	mov	r8, #0
   1efdc:	b	1ef14 <main@@Base+0x1aadc>
   1efe0:	b	1efa8 <main@@Base+0x1ab70>
   1efe4:	b	1efa8 <main@@Base+0x1ab70>
   1efe8:	b	1efa8 <main@@Base+0x1ab70>
   1efec:	mov	r4, r0
   1eff0:	b	1ef30 <main@@Base+0x1aaf8>
   1eff4:	b	1efa8 <main@@Base+0x1ab70>
   1eff8:	b	1efbc <main@@Base+0x1ab84>
   1effc:	mov	r5, r0
   1f000:	mov	r9, #0
   1f004:	b	1eef4 <main@@Base+0x1aabc>
   1f008:	mov	r4, r0
   1f00c:	b	1ef50 <main@@Base+0x1ab18>
   1f010:	mov	r4, r0
   1f014:	b	1ef58 <main@@Base+0x1ab20>
   1f018:	b	1efa8 <main@@Base+0x1ab70>
   1f01c:	mov	r5, r0
   1f020:	b	1ef1c <main@@Base+0x1aae4>
   1f024:	mov	r5, r0
   1f028:	b	1eef4 <main@@Base+0x1aabc>
   1f02c:	mov	r8, #0
   1f030:	mov	r5, r0
   1f034:	mov	sl, r8
   1f038:	mov	r7, r8
   1f03c:	b	1ef14 <main@@Base+0x1aadc>
   1f040:	andeq	r0, r2, r4, lsl r1
   1f044:	andeq	r0, r0, r0, lsr r4
   1f048:	andeq	r0, r0, ip, asr #8
   1f04c:	andeq	fp, r0, r8, asr #5
   1f050:			; <UNDEFINED> instruction: 0x0000b3b0
   1f054:	andeq	r8, r0, r0, lsl #7
   1f058:	andeq	fp, r0, r0, asr #14
   1f05c:	andeq	fp, r0, r8, ror #10
   1f060:	andeq	fp, r0, r0, ror #10
   1f064:	andeq	fp, r0, ip, asr #10
   1f068:	andeq	fp, r0, r0, asr r5
   1f06c:	andeq	fp, r0, r4, asr r5
   1f070:	andeq	fp, r0, r0, asr r5
   1f074:	andeq	fp, r0, r8, asr #10
   1f078:	andeq	fp, r0, ip, lsr r5
   1f07c:	andeq	fp, r0, r0, lsr #10
   1f080:	andeq	fp, r0, r0, lsr r5
   1f084:	andeq	fp, r0, r8, lsr r5
   1f088:	andeq	fp, r0, r4, asr #10
   1f08c:	andeq	fp, r0, ip, asr #10
   1f090:	andeq	fp, r0, r8, asr r5
   1f094:	andeq	fp, r0, r8, asr r5
   1f098:	andeq	fp, r0, r4, asr r5
   1f09c:	andeq	r8, r0, r8, ror #10
   1f0a0:	andeq	fp, r0, ip, lsl r5
   1f0a4:	andeq	fp, r0, ip, lsl #3
   1f0a8:	andeq	fp, r0, r0, ror #9
   1f0ac:	ldrdeq	fp, [r0], -r4
   1f0b0:	andeq	fp, r0, r4, lsr #8
   1f0b4:	andeq	sl, r0, r8, ror pc
   1f0b8:	andeq	fp, r0, r0, rrx
   1f0bc:	andeq	r8, r0, ip, asr #24
   1f0c0:	andeq	sl, r0, r4, asr pc
   1f0c4:	andeq	fp, r0, ip, lsr r0
   1f0c8:	andeq	fp, r0, ip, lsr #8
   1f0cc:	andeq	sl, r0, r0, lsr pc
   1f0d0:	andeq	fp, r0, r8, lsl r0
   1f0d4:	andeq	fp, r0, ip, lsl r4
   1f0d8:	strdeq	sl, [r0], -r8
   1f0dc:			; <UNDEFINED> instruction: 0x0000b3b4
   1f0e0:	ldr	r1, [pc, #100]	; 1f14c <main@@Base+0x1ad14>
   1f0e4:	mov	r2, #1
   1f0e8:	push	{r4, r5, r6, lr}
   1f0ec:	add	r1, pc, r1
   1f0f0:	ldr	r4, [pc, #88]	; 1f150 <main@@Base+0x1ad18>
   1f0f4:	ldr	r5, [r1]
   1f0f8:	ldr	r3, [pc, #84]	; 1f154 <main@@Base+0x1ad1c>
   1f0fc:	add	r4, pc, r4
   1f100:	add	r5, r0, r5
   1f104:	str	r2, [r5, #32]
   1f108:	ldr	r0, [r4, r3]
   1f10c:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   1f110:	ldr	r3, [pc, #64]	; 1f158 <main@@Base+0x1ad20>
   1f114:	str	r0, [r5, #24]
   1f118:	ldr	r6, [r4, r3]
   1f11c:	mov	r0, r6
   1f120:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   1f124:	ldr	ip, [pc, #48]	; 1f15c <main@@Base+0x1ad24>
   1f128:	ldr	r1, [pc, #48]	; 1f160 <main@@Base+0x1ad28>
   1f12c:	mov	r2, r6
   1f130:	mov	r3, r6
   1f134:	str	r0, [r5, #20]
   1f138:	ldr	r0, [r4, ip]
   1f13c:	ldr	r1, [r4, r1]
   1f140:	bl	3b58 <g_hash_table_new_full@plt>
   1f144:	str	r0, [r5, #16]
   1f148:	pop	{r4, r5, r6, pc}
   1f14c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1f150:	andeq	pc, r1, r4, lsl #21
   1f154:	andeq	r0, r0, r4, asr r4
   1f158:	andeq	r0, r0, ip, asr #8
   1f15c:	andeq	r0, r0, r8, asr #8
   1f160:	andeq	r0, r0, r4, lsr r4
   1f164:	push	{r4, r5, r6, lr}
   1f168:	sub	sp, sp, #16
   1f16c:	mov	r4, r0
   1f170:	bl	420c <g_type_class_peek_parent@plt>
   1f174:	ldr	r1, [pc, #284]	; 1f298 <main@@Base+0x1ae60>
   1f178:	add	r1, pc, r1
   1f17c:	ldr	r3, [r1]
   1f180:	cmp	r3, #0
   1f184:	str	r0, [r1, #4]
   1f188:	beq	1f194 <main@@Base+0x1ad5c>
   1f18c:	mov	r0, r4
   1f190:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   1f194:	mov	r0, r4
   1f198:	mov	r1, #80	; 0x50
   1f19c:	bl	4374 <g_type_check_class_cast@plt>
   1f1a0:	ldr	r3, [pc, #244]	; 1f29c <main@@Base+0x1ae64>
   1f1a4:	ldr	ip, [pc, #244]	; 1f2a0 <main@@Base+0x1ae68>
   1f1a8:	mov	r4, #0
   1f1ac:	mov	r6, #35	; 0x23
   1f1b0:	add	r3, pc, r3
   1f1b4:	add	ip, pc, ip
   1f1b8:	mov	r1, r4
   1f1bc:	mov	r2, r4
   1f1c0:	mov	r5, r0
   1f1c4:	ldr	r0, [pc, #216]	; 1f2a4 <main@@Base+0x1ae6c>
   1f1c8:	str	ip, [r5, #12]
   1f1cc:	str	r3, [r5, #24]
   1f1d0:	add	r0, pc, r0
   1f1d4:	str	r0, [r5, #16]
   1f1d8:	mov	r0, #13
   1f1dc:	stm	sp, {r0, r4, r6}
   1f1e0:	mov	r3, r4
   1f1e4:	ldr	r0, [pc, #188]	; 1f2a8 <main@@Base+0x1ae70>
   1f1e8:	add	r0, pc, r0
   1f1ec:	bl	3f84 <g_param_spec_uint@plt>
   1f1f0:	mov	r1, #1
   1f1f4:	mov	r2, r0
   1f1f8:	mov	r0, r5
   1f1fc:	bl	3f54 <g_object_class_install_property@plt>
   1f200:	ldr	r0, [pc, #164]	; 1f2ac <main@@Base+0x1ae74>
   1f204:	mov	ip, #100	; 0x64
   1f208:	mov	r3, r4
   1f20c:	str	ip, [sp]
   1f210:	mov	r1, r4
   1f214:	mov	r2, r4
   1f218:	stmib	sp, {r4, r6}
   1f21c:	add	r0, pc, r0
   1f220:	bl	3f84 <g_param_spec_uint@plt>
   1f224:	mov	r1, #2
   1f228:	mov	r2, r0
   1f22c:	mov	r0, r5
   1f230:	bl	3f54 <g_object_class_install_property@plt>
   1f234:	ldr	r0, [pc, #116]	; 1f2b0 <main@@Base+0x1ae78>
   1f238:	mov	r3, r4
   1f23c:	mov	r1, r4
   1f240:	mov	r2, r4
   1f244:	str	r6, [sp]
   1f248:	add	r0, pc, r0
   1f24c:	bl	3954 <g_param_spec_string@plt>
   1f250:	mov	r1, #3
   1f254:	mov	r2, r0
   1f258:	mov	r0, r5
   1f25c:	bl	3f54 <g_object_class_install_property@plt>
   1f260:	bl	23024 <main@@Base+0x1ebec>
   1f264:	mov	r1, r4
   1f268:	mov	r2, r4
   1f26c:	str	r6, [sp]
   1f270:	mov	r3, r0
   1f274:	ldr	r0, [pc, #56]	; 1f2b4 <main@@Base+0x1ae7c>
   1f278:	add	r0, pc, r0
   1f27c:	bl	4380 <g_param_spec_object@plt>
   1f280:	mov	r1, #4
   1f284:	mov	r2, r0
   1f288:	mov	r0, r5
   1f28c:	add	sp, sp, #16
   1f290:	pop	{r4, r5, r6, lr}
   1f294:	b	3f54 <g_object_class_install_property@plt>
   1f298:	andeq	pc, r1, r4, lsl #30
   1f29c:	andeq	r0, r0, r8, lsr r2
   1f2a0:	andeq	r2, r0, r4, ror #3
   1f2a4:	andeq	r1, r0, ip, ror #19
   1f2a8:	ldrdeq	r6, [r0], -r4
   1f2ac:			; <UNDEFINED> instruction: 0x000067b0
   1f2b0:	andeq	fp, r0, r0, ror #7
   1f2b4:	andeq	fp, r0, r0, lsr #20
   1f2b8:	push	{r3, r4, r5, r6, r7, lr}
   1f2bc:	mov	r4, r1
   1f2c0:	ldr	r1, [pc, #92]	; 1f324 <main@@Base+0x1aeec>
   1f2c4:	mov	r7, r2
   1f2c8:	mov	r2, r4
   1f2cc:	mov	r5, r0
   1f2d0:	add	r1, pc, r1
   1f2d4:	ldr	r6, [pc, #76]	; 1f328 <main@@Base+0x1aef0>
   1f2d8:	bl	4344 <g_string_append_printf@plt>
   1f2dc:	mov	r0, r4
   1f2e0:	bl	411c <strlen@plt>
   1f2e4:	add	r6, pc, r6
   1f2e8:	cmp	r0, #19
   1f2ec:	mov	r4, r0
   1f2f0:	bhi	1f30c <main@@Base+0x1aed4>
   1f2f4:	add	r4, r4, #1
   1f2f8:	mov	r0, r5
   1f2fc:	mov	r1, r6
   1f300:	bl	4308 <g_string_append@plt>
   1f304:	cmp	r4, #20
   1f308:	bne	1f2f4 <main@@Base+0x1aebc>
   1f30c:	ldr	r1, [pc, #24]	; 1f32c <main@@Base+0x1aef4>
   1f310:	mov	r0, r5
   1f314:	mov	r2, r7
   1f318:	add	r1, pc, r1
   1f31c:	pop	{r3, r4, r5, r6, r7, lr}
   1f320:	b	4344 <g_string_append_printf@plt>
   1f324:	andeq	fp, r0, r4, ror #6
   1f328:	andeq	r7, r0, r0, ror pc
   1f32c:	strdeq	r7, [r0], -r0
   1f330:	push	{r4, r5, r6, r7, lr}
   1f334:	dmb	sy
   1f338:	ldr	r4, [pc, #156]	; 1f3dc <main@@Base+0x1afa4>
   1f33c:	sub	sp, sp, #20
   1f340:	add	r4, pc, r4
   1f344:	ldr	r5, [r4, #8]
   1f348:	dmb	sy
   1f34c:	cmp	r5, #0
   1f350:	beq	1f368 <main@@Base+0x1af30>
   1f354:	ldr	r3, [pc, #132]	; 1f3e0 <main@@Base+0x1afa8>
   1f358:	add	r3, pc, r3
   1f35c:	ldr	r0, [r3, #8]
   1f360:	add	sp, sp, #20
   1f364:	pop	{r4, r5, r6, r7, pc}
   1f368:	add	r6, r4, #8
   1f36c:	mov	r0, r6
   1f370:	bl	3d50 <g_once_init_enter@plt>
   1f374:	cmp	r0, #0
   1f378:	beq	1f354 <main@@Base+0x1af1c>
   1f37c:	bl	4290 <fwupd_device_get_type@plt>
   1f380:	mov	r7, r0
   1f384:	ldr	r0, [pc, #88]	; 1f3e4 <main@@Base+0x1afac>
   1f388:	add	r0, pc, r0
   1f38c:	bl	3df8 <g_intern_static_string@plt>
   1f390:	ldr	ip, [pc, #80]	; 1f3e8 <main@@Base+0x1afb0>
   1f394:	mov	r3, #12
   1f398:	str	r5, [sp, #8]
   1f39c:	add	ip, pc, ip
   1f3a0:	stm	sp, {r3, ip}
   1f3a4:	ldr	r3, [pc, #64]	; 1f3ec <main@@Base+0x1afb4>
   1f3a8:	mov	r2, #228	; 0xe4
   1f3ac:	add	r3, pc, r3
   1f3b0:	mov	r1, r0
   1f3b4:	mov	r0, r7
   1f3b8:	bl	3894 <g_type_register_static_simple@plt>
   1f3bc:	mov	r1, #44	; 0x2c
   1f3c0:	mov	r5, r0
   1f3c4:	bl	3edc <g_type_add_instance_private@plt>
   1f3c8:	mov	r1, r5
   1f3cc:	str	r0, [r4]
   1f3d0:	mov	r0, r6
   1f3d4:	bl	4140 <g_once_init_leave@plt>
   1f3d8:	b	1f354 <main@@Base+0x1af1c>
   1f3dc:	andeq	pc, r1, ip, lsr sp	; <UNPREDICTABLE>
   1f3e0:	andeq	pc, r1, r4, lsr #26
   1f3e4:			; <UNDEFINED> instruction: 0x0000b2b4
   1f3e8:			; <UNDEFINED> instruction: 0xfffffd3c
   1f3ec:			; <UNDEFINED> instruction: 0xfffffdb0
   1f3f0:	push	{r3, r4, r5, r6, r7, lr}
   1f3f4:	mov	r5, r0
   1f3f8:	bl	1f330 <main@@Base+0x1aef8>
   1f3fc:	mov	r1, r0
   1f400:	mov	r0, r5
   1f404:	bl	39d8 <g_type_check_instance_cast@plt>
   1f408:	ldr	r3, [pc, #136]	; 1f498 <main@@Base+0x1b060>
   1f40c:	ldr	r6, [pc, r3]
   1f410:	add	r4, r0, r6
   1f414:	mov	r7, r0
   1f418:	ldr	r0, [r4, #4]
   1f41c:	cmp	r0, #0
   1f420:	beq	1f428 <main@@Base+0x1aff0>
   1f424:	bl	4110 <g_object_unref@plt>
   1f428:	ldr	r0, [r4, #8]
   1f42c:	cmp	r0, #0
   1f430:	beq	1f444 <main@@Base+0x1b00c>
   1f434:	mov	r1, #80	; 0x50
   1f438:	bl	39d8 <g_type_check_instance_cast@plt>
   1f43c:	add	r1, r4, #8
   1f440:	bl	3b94 <g_object_remove_weak_pointer@plt>
   1f444:	ldr	r0, [r4, #12]
   1f448:	cmp	r0, #0
   1f44c:	beq	1f454 <main@@Base+0x1b01c>
   1f450:	bl	4110 <g_object_unref@plt>
   1f454:	ldr	r0, [r4, #16]
   1f458:	bl	3ee8 <g_hash_table_unref@plt>
   1f45c:	ldr	r0, [r4, #24]
   1f460:	bl	4224 <g_ptr_array_unref@plt>
   1f464:	ldr	r0, [r4, #20]
   1f468:	bl	4224 <g_ptr_array_unref@plt>
   1f46c:	ldr	r0, [r7, r6]
   1f470:	bl	3eac <g_free@plt>
   1f474:	ldr	r3, [pc, #32]	; 1f49c <main@@Base+0x1b064>
   1f478:	mov	r1, #80	; 0x50
   1f47c:	add	r3, pc, r3
   1f480:	ldr	r0, [r3, #4]
   1f484:	bl	4374 <g_type_check_class_cast@plt>
   1f488:	ldr	r3, [r0, #24]
   1f48c:	mov	r0, r5
   1f490:	blx	r3
   1f494:	pop	{r3, r4, r5, r6, r7, pc}
   1f498:	andeq	pc, r1, r0, ror ip	; <UNPREDICTABLE>
   1f49c:	andeq	pc, r1, r0, lsl #24
   1f4a0:	ldr	r3, [pc, #16]	; 1f4b8 <main@@Base+0x1b080>
   1f4a4:	add	r3, pc, r3
   1f4a8:	ldr	r3, [r3]
   1f4ac:	add	r0, r0, r3
   1f4b0:	ldr	r0, [r0, #40]	; 0x28
   1f4b4:	bx	lr
   1f4b8:	ldrdeq	pc, [r1], -r8
   1f4bc:	ldr	r3, [pc, #16]	; 1f4d4 <main@@Base+0x1b09c>
   1f4c0:	add	r3, pc, r3
   1f4c4:	ldr	r3, [r3]
   1f4c8:	add	r0, r0, r3
   1f4cc:	str	r1, [r0, #40]	; 0x28
   1f4d0:	bx	lr
   1f4d4:			; <UNDEFINED> instruction: 0x0001fbbc
   1f4d8:	push	{r3, r4, r5, lr}
   1f4dc:	mov	r4, r0
   1f4e0:	ldr	r3, [pc, #104]	; 1f550 <main@@Base+0x1b118>
   1f4e4:	add	r3, pc, r3
   1f4e8:	ldr	r5, [r3]
   1f4ec:	bl	1f330 <main@@Base+0x1aef8>
   1f4f0:	cmp	r4, #0
   1f4f4:	beq	1f524 <main@@Base+0x1b0ec>
   1f4f8:	ldr	r3, [r4]
   1f4fc:	cmp	r3, #0
   1f500:	beq	1f510 <main@@Base+0x1b0d8>
   1f504:	ldr	r3, [r3]
   1f508:	cmp	r0, r3
   1f50c:	beq	1f548 <main@@Base+0x1b110>
   1f510:	mov	r1, r0
   1f514:	mov	r0, r4
   1f518:	bl	3fcc <g_type_check_instance_is_a@plt>
   1f51c:	cmp	r0, #0
   1f520:	bne	1f548 <main@@Base+0x1b110>
   1f524:	ldr	r0, [pc, #40]	; 1f554 <main@@Base+0x1b11c>
   1f528:	ldr	r1, [pc, #40]	; 1f558 <main@@Base+0x1b120>
   1f52c:	ldr	r2, [pc, #40]	; 1f55c <main@@Base+0x1b124>
   1f530:	add	r0, pc, r0
   1f534:	add	r1, pc, r1
   1f538:	add	r2, pc, r2
   1f53c:	bl	3870 <g_return_if_fail_warning@plt>
   1f540:	mov	r0, #0
   1f544:	pop	{r3, r4, r5, pc}
   1f548:	ldr	r0, [r4, r5]
   1f54c:	pop	{r3, r4, r5, pc}
   1f550:	muleq	r1, r8, fp
   1f554:	andeq	sl, r0, r8, ror #18
   1f558:	muleq	r0, r8, sp
   1f55c:	andeq	fp, r0, r0, lsl r1
   1f560:	ldr	r3, [pc, #132]	; 1f5ec <main@@Base+0x1b1b4>
   1f564:	push	{r4, r5, r6, lr}
   1f568:	add	r3, pc, r3
   1f56c:	mov	r4, r0
   1f570:	mov	r6, r1
   1f574:	ldr	r5, [r3]
   1f578:	bl	1f330 <main@@Base+0x1aef8>
   1f57c:	cmp	r4, #0
   1f580:	beq	1f5b0 <main@@Base+0x1b178>
   1f584:	ldr	r3, [r4]
   1f588:	cmp	r3, #0
   1f58c:	beq	1f59c <main@@Base+0x1b164>
   1f590:	ldr	r3, [r3]
   1f594:	cmp	r0, r3
   1f598:	beq	1f5d4 <main@@Base+0x1b19c>
   1f59c:	mov	r1, r0
   1f5a0:	mov	r0, r4
   1f5a4:	bl	3fcc <g_type_check_instance_is_a@plt>
   1f5a8:	cmp	r0, #0
   1f5ac:	bne	1f5d4 <main@@Base+0x1b19c>
   1f5b0:	ldr	r1, [pc, #56]	; 1f5f0 <main@@Base+0x1b1b8>
   1f5b4:	ldr	r0, [pc, #56]	; 1f5f4 <main@@Base+0x1b1bc>
   1f5b8:	ldr	r2, [pc, #56]	; 1f5f8 <main@@Base+0x1b1c0>
   1f5bc:	add	r1, pc, r1
   1f5c0:	add	r0, pc, r0
   1f5c4:	add	r1, r1, #28
   1f5c8:	add	r2, pc, r2
   1f5cc:	pop	{r4, r5, r6, lr}
   1f5d0:	b	3870 <g_return_if_fail_warning@plt>
   1f5d4:	ldr	r0, [r4, r5]
   1f5d8:	bl	3eac <g_free@plt>
   1f5dc:	mov	r0, r6
   1f5e0:	bl	3b7c <g_strdup@plt>
   1f5e4:	str	r0, [r4, r5]
   1f5e8:	pop	{r4, r5, r6, pc}
   1f5ec:	andeq	pc, r1, r4, lsl fp	; <UNPREDICTABLE>
   1f5f0:	andeq	sl, r0, r0, lsl sp
   1f5f4:	ldrdeq	sl, [r0], -r8
   1f5f8:	andeq	fp, r0, r0, lsl #1
   1f5fc:	push	{r3, r4, r5, lr}
   1f600:	mov	r4, r0
   1f604:	ldr	r3, [pc, #112]	; 1f67c <main@@Base+0x1b244>
   1f608:	add	r3, pc, r3
   1f60c:	ldr	r5, [r3]
   1f610:	bl	1f330 <main@@Base+0x1aef8>
   1f614:	cmp	r4, #0
   1f618:	beq	1f648 <main@@Base+0x1b210>
   1f61c:	ldr	r3, [r4]
   1f620:	cmp	r3, #0
   1f624:	beq	1f634 <main@@Base+0x1b1fc>
   1f628:	ldr	r3, [r3]
   1f62c:	cmp	r0, r3
   1f630:	beq	1f670 <main@@Base+0x1b238>
   1f634:	mov	r1, r0
   1f638:	mov	r0, r4
   1f63c:	bl	3fcc <g_type_check_instance_is_a@plt>
   1f640:	cmp	r0, #0
   1f644:	bne	1f670 <main@@Base+0x1b238>
   1f648:	ldr	r1, [pc, #48]	; 1f680 <main@@Base+0x1b248>
   1f64c:	ldr	r0, [pc, #48]	; 1f684 <main@@Base+0x1b24c>
   1f650:	ldr	r2, [pc, #48]	; 1f688 <main@@Base+0x1b250>
   1f654:	add	r1, pc, r1
   1f658:	add	r0, pc, r0
   1f65c:	add	r1, r1, #56	; 0x38
   1f660:	add	r2, pc, r2
   1f664:	bl	3870 <g_return_if_fail_warning@plt>
   1f668:	mov	r0, #0
   1f66c:	pop	{r3, r4, r5, pc}
   1f670:	add	r4, r4, r5
   1f674:	ldr	r0, [r4, #4]
   1f678:	pop	{r3, r4, r5, pc}
   1f67c:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1f680:	andeq	sl, r0, r8, ror ip
   1f684:	andeq	sl, r0, r0, asr #16
   1f688:	andeq	sl, r0, r8, ror #31
   1f68c:	ldr	r3, [pc, #164]	; 1f738 <main@@Base+0x1b300>
   1f690:	push	{r4, r5, r6, lr}
   1f694:	add	r3, pc, r3
   1f698:	mov	r4, r0
   1f69c:	mov	r5, r1
   1f6a0:	ldr	r6, [r3]
   1f6a4:	bl	1f330 <main@@Base+0x1aef8>
   1f6a8:	cmp	r4, #0
   1f6ac:	beq	1f6dc <main@@Base+0x1b2a4>
   1f6b0:	ldr	r3, [r4]
   1f6b4:	cmp	r3, #0
   1f6b8:	beq	1f6c8 <main@@Base+0x1b290>
   1f6bc:	ldr	r3, [r3]
   1f6c0:	cmp	r0, r3
   1f6c4:	beq	1f700 <main@@Base+0x1b2c8>
   1f6c8:	mov	r1, r0
   1f6cc:	mov	r0, r4
   1f6d0:	bl	3fcc <g_type_check_instance_is_a@plt>
   1f6d4:	cmp	r0, #0
   1f6d8:	bne	1f700 <main@@Base+0x1b2c8>
   1f6dc:	ldr	r1, [pc, #88]	; 1f73c <main@@Base+0x1b304>
   1f6e0:	ldr	r0, [pc, #88]	; 1f740 <main@@Base+0x1b308>
   1f6e4:	ldr	r2, [pc, #88]	; 1f744 <main@@Base+0x1b30c>
   1f6e8:	add	r1, pc, r1
   1f6ec:	add	r0, pc, r0
   1f6f0:	add	r1, r1, #80	; 0x50
   1f6f4:	add	r2, pc, r2
   1f6f8:	pop	{r4, r5, r6, lr}
   1f6fc:	b	3870 <g_return_if_fail_warning@plt>
   1f700:	add	r4, r4, r6
   1f704:	ldr	r6, [r4, #4]
   1f708:	cmp	r5, r6
   1f70c:	popeq	{r4, r5, r6, pc}
   1f710:	cmp	r5, #0
   1f714:	beq	1f720 <main@@Base+0x1b2e8>
   1f718:	mov	r0, r5
   1f71c:	bl	381c <g_object_ref@plt>
   1f720:	cmp	r6, #0
   1f724:	str	r5, [r4, #4]
   1f728:	popeq	{r4, r5, r6, pc}
   1f72c:	mov	r0, r6
   1f730:	pop	{r4, r5, r6, lr}
   1f734:	b	4110 <g_object_unref@plt>
   1f738:	andeq	pc, r1, r8, ror #19
   1f73c:	andeq	sl, r0, r4, ror #23
   1f740:	andeq	sl, r0, ip, lsr #15
   1f744:	andeq	sl, r0, r4, asr pc
   1f748:	push	{r3, r4, r5, lr}
   1f74c:	mov	r4, r0
   1f750:	ldr	r3, [pc, #112]	; 1f7c8 <main@@Base+0x1b390>
   1f754:	add	r3, pc, r3
   1f758:	ldr	r5, [r3]
   1f75c:	bl	1f330 <main@@Base+0x1aef8>
   1f760:	cmp	r4, #0
   1f764:	beq	1f794 <main@@Base+0x1b35c>
   1f768:	ldr	r3, [r4]
   1f76c:	cmp	r3, #0
   1f770:	beq	1f780 <main@@Base+0x1b348>
   1f774:	ldr	r3, [r3]
   1f778:	cmp	r0, r3
   1f77c:	beq	1f7bc <main@@Base+0x1b384>
   1f780:	mov	r1, r0
   1f784:	mov	r0, r4
   1f788:	bl	3fcc <g_type_check_instance_is_a@plt>
   1f78c:	cmp	r0, #0
   1f790:	bne	1f7bc <main@@Base+0x1b384>
   1f794:	ldr	r1, [pc, #48]	; 1f7cc <main@@Base+0x1b394>
   1f798:	ldr	r0, [pc, #48]	; 1f7d0 <main@@Base+0x1b398>
   1f79c:	ldr	r2, [pc, #48]	; 1f7d4 <main@@Base+0x1b39c>
   1f7a0:	add	r1, pc, r1
   1f7a4:	add	r0, pc, r0
   1f7a8:	add	r1, r1, #104	; 0x68
   1f7ac:	add	r2, pc, r2
   1f7b0:	bl	3870 <g_return_if_fail_warning@plt>
   1f7b4:	mov	r0, #0
   1f7b8:	pop	{r3, r4, r5, pc}
   1f7bc:	add	r4, r4, r5
   1f7c0:	ldr	r0, [r4, #8]
   1f7c4:	pop	{r3, r4, r5, pc}
   1f7c8:	andeq	pc, r1, r8, lsr #18
   1f7cc:	andeq	sl, r0, ip, lsr #22
   1f7d0:	strdeq	sl, [r0], -r4
   1f7d4:	muleq	r0, ip, lr
   1f7d8:	push	{r3, r4, r5, lr}
   1f7dc:	mov	r4, r0
   1f7e0:	ldr	r3, [pc, #112]	; 1f858 <main@@Base+0x1b420>
   1f7e4:	add	r3, pc, r3
   1f7e8:	ldr	r5, [r3]
   1f7ec:	bl	1f330 <main@@Base+0x1aef8>
   1f7f0:	cmp	r4, #0
   1f7f4:	beq	1f824 <main@@Base+0x1b3ec>
   1f7f8:	ldr	r3, [r4]
   1f7fc:	cmp	r3, #0
   1f800:	beq	1f810 <main@@Base+0x1b3d8>
   1f804:	ldr	r3, [r3]
   1f808:	cmp	r0, r3
   1f80c:	beq	1f84c <main@@Base+0x1b414>
   1f810:	mov	r1, r0
   1f814:	mov	r0, r4
   1f818:	bl	3fcc <g_type_check_instance_is_a@plt>
   1f81c:	cmp	r0, #0
   1f820:	bne	1f84c <main@@Base+0x1b414>
   1f824:	ldr	r1, [pc, #48]	; 1f85c <main@@Base+0x1b424>
   1f828:	ldr	r0, [pc, #48]	; 1f860 <main@@Base+0x1b428>
   1f82c:	ldr	r2, [pc, #48]	; 1f864 <main@@Base+0x1b42c>
   1f830:	add	r1, pc, r1
   1f834:	add	r0, pc, r0
   1f838:	add	r1, r1, #128	; 0x80
   1f83c:	add	r2, pc, r2
   1f840:	bl	3870 <g_return_if_fail_warning@plt>
   1f844:	mov	r0, #0
   1f848:	pop	{r3, r4, r5, pc}
   1f84c:	add	r4, r4, r5
   1f850:	ldr	r0, [r4, #24]
   1f854:	pop	{r3, r4, r5, pc}
   1f858:	muleq	r1, r8, r8
   1f85c:	muleq	r0, ip, sl
   1f860:	andeq	sl, r0, r4, ror #12
   1f864:	andeq	sl, r0, ip, lsl #28
   1f868:	push	{r3, r4, r5, r6, r7, lr}
   1f86c:	mov	r5, r0
   1f870:	ldr	r3, [pc, #656]	; 1fb08 <main@@Base+0x1b6d0>
   1f874:	mov	r4, r1
   1f878:	add	r3, pc, r3
   1f87c:	ldr	r7, [r3]
   1f880:	add	r7, r0, r7
   1f884:	bl	1f330 <main@@Base+0x1aef8>
   1f888:	cmp	r5, #0
   1f88c:	beq	1f8bc <main@@Base+0x1b484>
   1f890:	ldr	r3, [r5]
   1f894:	cmp	r3, #0
   1f898:	beq	1f8a8 <main@@Base+0x1b470>
   1f89c:	ldr	r3, [r3]
   1f8a0:	cmp	r0, r3
   1f8a4:	beq	1f8e0 <main@@Base+0x1b4a8>
   1f8a8:	mov	r1, r0
   1f8ac:	mov	r0, r5
   1f8b0:	bl	3fcc <g_type_check_instance_is_a@plt>
   1f8b4:	cmp	r0, #0
   1f8b8:	bne	1f8e0 <main@@Base+0x1b4a8>
   1f8bc:	ldr	r1, [pc, #584]	; 1fb0c <main@@Base+0x1b6d4>
   1f8c0:	ldr	r0, [pc, #584]	; 1fb10 <main@@Base+0x1b6d8>
   1f8c4:	ldr	r2, [pc, #584]	; 1fb14 <main@@Base+0x1b6dc>
   1f8c8:	add	r1, pc, r1
   1f8cc:	add	r0, pc, r0
   1f8d0:	add	r1, r1, #152	; 0x98
   1f8d4:	add	r2, pc, r2
   1f8d8:	pop	{r3, r4, r5, r6, r7, lr}
   1f8dc:	b	3870 <g_return_if_fail_warning@plt>
   1f8e0:	bl	1f330 <main@@Base+0x1aef8>
   1f8e4:	cmp	r4, #0
   1f8e8:	mov	r1, r0
   1f8ec:	beq	1f918 <main@@Base+0x1b4e0>
   1f8f0:	ldr	r3, [r4]
   1f8f4:	cmp	r3, #0
   1f8f8:	beq	1f908 <main@@Base+0x1b4d0>
   1f8fc:	ldr	r3, [r3]
   1f900:	cmp	r1, r3
   1f904:	beq	1f93c <main@@Base+0x1b504>
   1f908:	mov	r0, r4
   1f90c:	bl	3fcc <g_type_check_instance_is_a@plt>
   1f910:	cmp	r0, #0
   1f914:	bne	1f93c <main@@Base+0x1b504>
   1f918:	ldr	r1, [pc, #504]	; 1fb18 <main@@Base+0x1b6e0>
   1f91c:	ldr	r0, [pc, #504]	; 1fb1c <main@@Base+0x1b6e4>
   1f920:	ldr	r2, [pc, #504]	; 1fb20 <main@@Base+0x1b6e8>
   1f924:	add	r1, pc, r1
   1f928:	add	r0, pc, r0
   1f92c:	add	r1, r1, #152	; 0x98
   1f930:	add	r2, pc, r2
   1f934:	pop	{r3, r4, r5, r6, r7, lr}
   1f938:	b	3870 <g_return_if_fail_warning@plt>
   1f93c:	ldr	r6, [r7, #24]
   1f940:	ldr	r1, [r6, #4]
   1f944:	cmp	r1, #0
   1f948:	beq	1f97c <main@@Base+0x1b544>
   1f94c:	ldr	r2, [r6]
   1f950:	ldr	r3, [r2]
   1f954:	cmp	r3, r4
   1f958:	popeq	{r3, r4, r5, r6, r7, pc}
   1f95c:	mov	r3, #0
   1f960:	b	1f970 <main@@Base+0x1b538>
   1f964:	ldr	ip, [r2, #4]!
   1f968:	cmp	ip, r4
   1f96c:	popeq	{r3, r4, r5, r6, r7, pc}
   1f970:	add	r3, r3, #1
   1f974:	cmp	r3, r1
   1f978:	bne	1f964 <main@@Base+0x1b52c>
   1f97c:	mov	r0, r4
   1f980:	bl	381c <g_object_ref@plt>
   1f984:	mov	r1, r0
   1f988:	mov	r0, r6
   1f98c:	bl	426c <g_ptr_array_add@plt>
   1f990:	bl	4290 <fwupd_device_get_type@plt>
   1f994:	mov	r1, r0
   1f998:	mov	r0, r4
   1f99c:	bl	39d8 <g_type_check_instance_cast@plt>
   1f9a0:	bl	3f30 <fwupd_device_get_vendor@plt>
   1f9a4:	cmp	r0, #0
   1f9a8:	beq	1fa98 <main@@Base+0x1b660>
   1f9ac:	bl	4290 <fwupd_device_get_type@plt>
   1f9b0:	mov	r1, r0
   1f9b4:	mov	r0, r4
   1f9b8:	bl	39d8 <g_type_check_instance_cast@plt>
   1f9bc:	bl	43c8 <fwupd_device_get_vendor_id@plt>
   1f9c0:	cmp	r0, #0
   1f9c4:	beq	1fad0 <main@@Base+0x1b698>
   1f9c8:	ldr	r3, [pc, #340]	; 1fb24 <main@@Base+0x1b6ec>
   1f9cc:	mov	r1, #80	; 0x50
   1f9d0:	mov	r0, r5
   1f9d4:	add	r3, pc, r3
   1f9d8:	ldr	r6, [r3]
   1f9dc:	bl	39d8 <g_type_check_instance_cast@plt>
   1f9e0:	add	r6, r4, r6
   1f9e4:	add	r1, r6, #8
   1f9e8:	bl	3810 <g_object_add_weak_pointer@plt>
   1f9ec:	str	r5, [r6, #8]
   1f9f0:	bl	4290 <fwupd_device_get_type@plt>
   1f9f4:	mov	r1, r0
   1f9f8:	mov	r0, r4
   1f9fc:	bl	39d8 <g_type_check_instance_cast@plt>
   1fa00:	mov	r6, r0
   1fa04:	bl	4290 <fwupd_device_get_type@plt>
   1fa08:	mov	r1, r0
   1fa0c:	mov	r0, r5
   1fa10:	bl	39d8 <g_type_check_instance_cast@plt>
   1fa14:	bl	3aec <fwupd_device_get_id@plt>
   1fa18:	mov	r1, r0
   1fa1c:	mov	r0, r6
   1fa20:	bl	3d20 <fwupd_device_set_parent_id@plt>
   1fa24:	bl	4290 <fwupd_device_get_type@plt>
   1fa28:	mov	r1, r0
   1fa2c:	mov	r0, r4
   1fa30:	bl	39d8 <g_type_check_instance_cast@plt>
   1fa34:	mov	r2, #4096	; 0x1000
   1fa38:	mov	r3, #0
   1fa3c:	bl	3ac8 <fwupd_device_has_flag@plt>
   1fa40:	cmp	r0, #0
   1fa44:	beq	1fa70 <main@@Base+0x1b638>
   1fa48:	mov	r0, r4
   1fa4c:	ldr	r5, [r7, #40]	; 0x28
   1fa50:	bl	1f4a0 <main@@Base+0x1b068>
   1fa54:	cmp	r5, r0
   1fa58:	pophi	{r3, r4, r5, r6, r7, pc}
   1fa5c:	mov	r0, r4
   1fa60:	bl	1f4a0 <main@@Base+0x1b068>
   1fa64:	add	r0, r0, #1
   1fa68:	str	r0, [r7, #40]	; 0x28
   1fa6c:	pop	{r3, r4, r5, r6, r7, pc}
   1fa70:	mov	r0, r4
   1fa74:	ldr	r5, [r7, #40]	; 0x28
   1fa78:	bl	1f4a0 <main@@Base+0x1b068>
   1fa7c:	cmp	r5, r0
   1fa80:	popcc	{r3, r4, r5, r6, r7, pc}
   1fa84:	ldr	r1, [r7, #40]	; 0x28
   1fa88:	mov	r0, r4
   1fa8c:	pop	{r3, r4, r5, r6, r7, lr}
   1fa90:	add	r1, r1, #1
   1fa94:	b	1f4bc <main@@Base+0x1b084>
   1fa98:	bl	4290 <fwupd_device_get_type@plt>
   1fa9c:	mov	r1, r0
   1faa0:	mov	r0, r4
   1faa4:	bl	39d8 <g_type_check_instance_cast@plt>
   1faa8:	mov	r6, r0
   1faac:	bl	4290 <fwupd_device_get_type@plt>
   1fab0:	mov	r1, r0
   1fab4:	mov	r0, r5
   1fab8:	bl	39d8 <g_type_check_instance_cast@plt>
   1fabc:	bl	3f30 <fwupd_device_get_vendor@plt>
   1fac0:	mov	r1, r0
   1fac4:	mov	r0, r6
   1fac8:	bl	3a08 <fwupd_device_set_vendor@plt>
   1facc:	b	1f9ac <main@@Base+0x1b574>
   1fad0:	bl	4290 <fwupd_device_get_type@plt>
   1fad4:	mov	r1, r0
   1fad8:	mov	r0, r4
   1fadc:	bl	39d8 <g_type_check_instance_cast@plt>
   1fae0:	mov	r6, r0
   1fae4:	bl	4290 <fwupd_device_get_type@plt>
   1fae8:	mov	r1, r0
   1faec:	mov	r0, r5
   1faf0:	bl	39d8 <g_type_check_instance_cast@plt>
   1faf4:	bl	43c8 <fwupd_device_get_vendor_id@plt>
   1faf8:	mov	r1, r0
   1fafc:	mov	r0, r6
   1fb00:	bl	3e94 <fwupd_device_set_vendor_id@plt>
   1fb04:	b	1f9c8 <main@@Base+0x1b590>
   1fb08:	andeq	pc, r1, r4, lsl #16
   1fb0c:	andeq	sl, r0, r4, lsl #20
   1fb10:	andeq	sl, r0, ip, asr #11
   1fb14:	andeq	sl, r0, r4, ror sp
   1fb18:	andeq	sl, r0, r8, lsr #19
   1fb1c:	andeq	sl, r0, r0, ror r5
   1fb20:	andeq	sl, r0, r0, lsr sp
   1fb24:	andeq	pc, r1, r8, lsr #13
   1fb28:	push	{r3, r4, r5, lr}
   1fb2c:	mov	r4, r0
   1fb30:	ldr	r3, [pc, #112]	; 1fba8 <main@@Base+0x1b770>
   1fb34:	add	r3, pc, r3
   1fb38:	ldr	r5, [r3]
   1fb3c:	bl	1f330 <main@@Base+0x1aef8>
   1fb40:	cmp	r4, #0
   1fb44:	beq	1fb74 <main@@Base+0x1b73c>
   1fb48:	ldr	r3, [r4]
   1fb4c:	cmp	r3, #0
   1fb50:	beq	1fb60 <main@@Base+0x1b728>
   1fb54:	ldr	r3, [r3]
   1fb58:	cmp	r0, r3
   1fb5c:	beq	1fb9c <main@@Base+0x1b764>
   1fb60:	mov	r1, r0
   1fb64:	mov	r0, r4
   1fb68:	bl	3fcc <g_type_check_instance_is_a@plt>
   1fb6c:	cmp	r0, #0
   1fb70:	bne	1fb9c <main@@Base+0x1b764>
   1fb74:	ldr	r1, [pc, #48]	; 1fbac <main@@Base+0x1b774>
   1fb78:	ldr	r0, [pc, #48]	; 1fbb0 <main@@Base+0x1b778>
   1fb7c:	ldr	r2, [pc, #48]	; 1fbb4 <main@@Base+0x1b77c>
   1fb80:	add	r1, pc, r1
   1fb84:	add	r0, pc, r0
   1fb88:	add	r1, r1, #172	; 0xac
   1fb8c:	add	r2, pc, r2
   1fb90:	bl	3870 <g_return_if_fail_warning@plt>
   1fb94:	mov	r0, #0
   1fb98:	pop	{r3, r4, r5, pc}
   1fb9c:	add	r4, r4, r5
   1fba0:	ldr	r0, [r4, #20]
   1fba4:	pop	{r3, r4, r5, pc}
   1fba8:	andeq	pc, r1, r8, asr #10
   1fbac:	andeq	sl, r0, ip, asr #14
   1fbb0:	andeq	sl, r0, r4, lsl r3
   1fbb4:			; <UNDEFINED> instruction: 0x0000aabc
   1fbb8:	ldr	r3, [pc, #192]	; 1fc80 <main@@Base+0x1b848>
   1fbbc:	push	{r4, r5, r6, lr}
   1fbc0:	add	r3, pc, r3
   1fbc4:	mov	r4, r0
   1fbc8:	mov	r6, r1
   1fbcc:	ldr	r5, [r3]
   1fbd0:	add	r5, r0, r5
   1fbd4:	bl	1f330 <main@@Base+0x1aef8>
   1fbd8:	cmp	r4, #0
   1fbdc:	mov	r1, r0
   1fbe0:	beq	1fc0c <main@@Base+0x1b7d4>
   1fbe4:	ldr	r3, [r4]
   1fbe8:	cmp	r3, #0
   1fbec:	beq	1fbfc <main@@Base+0x1b7c4>
   1fbf0:	ldr	r3, [r3]
   1fbf4:	cmp	r0, r3
   1fbf8:	beq	1fc34 <main@@Base+0x1b7fc>
   1fbfc:	mov	r0, r4
   1fc00:	bl	3fcc <g_type_check_instance_is_a@plt>
   1fc04:	cmp	r0, #0
   1fc08:	bne	1fc34 <main@@Base+0x1b7fc>
   1fc0c:	ldr	r1, [pc, #112]	; 1fc84 <main@@Base+0x1b84c>
   1fc10:	ldr	r0, [pc, #112]	; 1fc88 <main@@Base+0x1b850>
   1fc14:	ldr	r2, [pc, #112]	; 1fc8c <main@@Base+0x1b854>
   1fc18:	add	r1, pc, r1
   1fc1c:	add	r0, pc, r0
   1fc20:	add	r1, r1, #200	; 0xc8
   1fc24:	add	r2, pc, r2
   1fc28:	bl	3870 <g_return_if_fail_warning@plt>
   1fc2c:	mov	r0, #0
   1fc30:	pop	{r4, r5, r6, pc}
   1fc34:	ldr	r3, [r5, #20]
   1fc38:	ldr	r2, [r3, #4]
   1fc3c:	cmp	r2, #0
   1fc40:	movne	r4, #0
   1fc44:	bne	1fc5c <main@@Base+0x1b824>
   1fc48:	b	1fc2c <main@@Base+0x1b7f4>
   1fc4c:	ldr	r3, [r5, #20]
   1fc50:	ldr	r2, [r3, #4]
   1fc54:	cmp	r2, r4
   1fc58:	bls	1fc2c <main@@Base+0x1b7f4>
   1fc5c:	ldr	r3, [r3]
   1fc60:	mov	r1, r6
   1fc64:	ldr	r0, [r3, r4, lsl #2]
   1fc68:	add	r4, r4, #1
   1fc6c:	bl	441c <g_strcmp0@plt>
   1fc70:	cmp	r0, #0
   1fc74:	bne	1fc4c <main@@Base+0x1b814>
   1fc78:	mov	r0, #1
   1fc7c:	pop	{r4, r5, r6, pc}
   1fc80:			; <UNDEFINED> instruction: 0x0001f4bc
   1fc84:			; <UNDEFINED> instruction: 0x0000a6b4
   1fc88:	andeq	sl, r0, ip, ror r2
   1fc8c:	andeq	sl, r0, r4, lsr #20
   1fc90:	ldr	r3, [pc, #372]	; 1fe0c <main@@Base+0x1b9d4>
   1fc94:	push	{r4, r5, r6, r7, lr}
   1fc98:	add	r3, pc, r3
   1fc9c:	sub	sp, sp, #12
   1fca0:	mov	r4, r0
   1fca4:	ldr	r3, [r3]
   1fca8:	mov	r5, r1
   1fcac:	add	r7, r0, r3
   1fcb0:	bl	1f330 <main@@Base+0x1aef8>
   1fcb4:	cmp	r4, #0
   1fcb8:	beq	1fce8 <main@@Base+0x1b8b0>
   1fcbc:	ldr	r3, [r4]
   1fcc0:	cmp	r3, #0
   1fcc4:	beq	1fcd4 <main@@Base+0x1b89c>
   1fcc8:	ldr	r2, [r3]
   1fccc:	cmp	r0, r2
   1fcd0:	beq	1fd10 <main@@Base+0x1b8d8>
   1fcd4:	mov	r1, r0
   1fcd8:	mov	r0, r4
   1fcdc:	bl	3fcc <g_type_check_instance_is_a@plt>
   1fce0:	cmp	r0, #0
   1fce4:	bne	1fd10 <main@@Base+0x1b8d8>
   1fce8:	ldr	r1, [pc, #288]	; 1fe10 <main@@Base+0x1b9d8>
   1fcec:	ldr	r0, [pc, #288]	; 1fe14 <main@@Base+0x1b9dc>
   1fcf0:	ldr	r2, [pc, #288]	; 1fe18 <main@@Base+0x1b9e0>
   1fcf4:	add	r1, pc, r1
   1fcf8:	add	r0, pc, r0
   1fcfc:	add	r1, r1, #228	; 0xe4
   1fd00:	add	r2, pc, r2
   1fd04:	add	sp, sp, #12
   1fd08:	pop	{r4, r5, r6, r7, lr}
   1fd0c:	b	3870 <g_return_if_fail_warning@plt>
   1fd10:	cmp	r5, #0
   1fd14:	beq	1fda4 <main@@Base+0x1b96c>
   1fd18:	mov	r0, r5
   1fd1c:	bl	3924 <as_utils_guid_is_valid@plt>
   1fd20:	cmp	r0, #0
   1fd24:	bne	1fd88 <main@@Base+0x1b950>
   1fd28:	mov	r0, r5
   1fd2c:	bl	43e0 <as_utils_guid_from_string@plt>
   1fd30:	mov	r6, r0
   1fd34:	mov	r0, r4
   1fd38:	mov	r1, r6
   1fd3c:	bl	1fbb8 <main@@Base+0x1b780>
   1fd40:	cmp	r0, #0
   1fd44:	bne	1fd78 <main@@Base+0x1b940>
   1fd48:	ldr	r0, [pc, #204]	; 1fe1c <main@@Base+0x1b9e4>
   1fd4c:	mov	r1, #128	; 0x80
   1fd50:	ldr	r2, [pc, #200]	; 1fe20 <main@@Base+0x1b9e8>
   1fd54:	mov	r3, r6
   1fd58:	str	r5, [sp]
   1fd5c:	add	r0, pc, r0
   1fd60:	add	r2, pc, r2
   1fd64:	bl	3a38 <g_log@plt>
   1fd68:	ldr	r0, [r7, #20]
   1fd6c:	mov	r1, r6
   1fd70:	bl	426c <g_ptr_array_add@plt>
   1fd74:	mov	r6, #0
   1fd78:	mov	r0, r6
   1fd7c:	add	sp, sp, #12
   1fd80:	pop	{r4, r5, r6, r7, lr}
   1fd84:	b	3eac <g_free@plt>
   1fd88:	mov	r0, r4
   1fd8c:	mov	r1, r5
   1fd90:	bl	1fbb8 <main@@Base+0x1b780>
   1fd94:	cmp	r0, #0
   1fd98:	beq	1fdcc <main@@Base+0x1b994>
   1fd9c:	add	sp, sp, #12
   1fda0:	pop	{r4, r5, r6, r7, pc}
   1fda4:	ldr	r1, [pc, #120]	; 1fe24 <main@@Base+0x1b9ec>
   1fda8:	ldr	r0, [pc, #120]	; 1fe28 <main@@Base+0x1b9f0>
   1fdac:	ldr	r2, [pc, #120]	; 1fe2c <main@@Base+0x1b9f4>
   1fdb0:	add	r1, pc, r1
   1fdb4:	add	r0, pc, r0
   1fdb8:	add	r1, r1, #228	; 0xe4
   1fdbc:	add	r2, pc, r2
   1fdc0:	add	sp, sp, #12
   1fdc4:	pop	{r4, r5, r6, r7, lr}
   1fdc8:	b	3870 <g_return_if_fail_warning@plt>
   1fdcc:	mov	r0, r5
   1fdd0:	ldr	r4, [r7, #20]
   1fdd4:	bl	3b7c <g_strdup@plt>
   1fdd8:	mov	r1, r0
   1fddc:	mov	r0, r4
   1fde0:	add	sp, sp, #12
   1fde4:	pop	{r4, r5, r6, r7, lr}
   1fde8:	b	426c <g_ptr_array_add@plt>
   1fdec:	mov	r4, r0
   1fdf0:	mov	r6, #0
   1fdf4:	mov	r0, r6
   1fdf8:	bl	3eac <g_free@plt>
   1fdfc:	mov	r0, r4
   1fe00:	bl	42f0 <_Unwind_Resume@plt>
   1fe04:	mov	r4, r0
   1fe08:	b	1fdf4 <main@@Base+0x1b9bc>
   1fe0c:	andeq	pc, r1, r4, ror #7
   1fe10:	ldrdeq	sl, [r0], -r8
   1fe14:	andeq	sl, r0, r0, lsr #3
   1fe18:	andeq	sl, r0, r8, asr #18
   1fe1c:	andeq	sl, r0, ip, lsr r1
   1fe20:	andeq	sl, r0, r8, lsl r9
   1fe24:	andeq	sl, r0, ip, lsl r5
   1fe28:	andeq	sl, r0, r4, ror #1
   1fe2c:	andeq	sl, r0, ip, asr #17
   1fe30:	push	{r4, r5, r6, lr}
   1fe34:	mov	r6, r0
   1fe38:	sub	sp, sp, #8
   1fe3c:	mov	r0, r1
   1fe40:	mov	r4, r1
   1fe44:	bl	3924 <as_utils_guid_is_valid@plt>
   1fe48:	cmp	r0, #0
   1fe4c:	bne	1fea4 <main@@Base+0x1ba6c>
   1fe50:	mov	r0, r4
   1fe54:	bl	43e0 <as_utils_guid_from_string@plt>
   1fe58:	ldr	r2, [pc, #120]	; 1fed8 <main@@Base+0x1baa0>
   1fe5c:	str	r4, [sp]
   1fe60:	mov	r1, #128	; 0x80
   1fe64:	add	r2, pc, r2
   1fe68:	mov	r5, r0
   1fe6c:	mov	r3, r0
   1fe70:	ldr	r0, [pc, #100]	; 1fedc <main@@Base+0x1baa4>
   1fe74:	add	r0, pc, r0
   1fe78:	bl	3a38 <g_log@plt>
   1fe7c:	bl	4290 <fwupd_device_get_type@plt>
   1fe80:	mov	r1, r0
   1fe84:	mov	r0, r6
   1fe88:	bl	39d8 <g_type_check_instance_cast@plt>
   1fe8c:	mov	r1, r5
   1fe90:	bl	3b88 <fwupd_device_add_guid@plt>
   1fe94:	mov	r0, r5
   1fe98:	add	sp, sp, #8
   1fe9c:	pop	{r4, r5, r6, lr}
   1fea0:	b	3eac <g_free@plt>
   1fea4:	bl	4290 <fwupd_device_get_type@plt>
   1fea8:	mov	r1, r0
   1feac:	mov	r0, r6
   1feb0:	bl	39d8 <g_type_check_instance_cast@plt>
   1feb4:	mov	r1, r4
   1feb8:	add	sp, sp, #8
   1febc:	pop	{r4, r5, r6, lr}
   1fec0:	b	3b88 <fwupd_device_add_guid@plt>
   1fec4:	mov	r4, r0
   1fec8:	mov	r0, r5
   1fecc:	bl	3eac <g_free@plt>
   1fed0:	mov	r0, r4
   1fed4:	bl	42f0 <_Unwind_Resume@plt>
   1fed8:	andeq	sl, r0, r4, lsl r8
   1fedc:	andeq	sl, r0, r4, lsr #32
   1fee0:	push	{r3, r4, r5, lr}
   1fee4:	mov	r4, r0
   1fee8:	bl	4290 <fwupd_device_get_type@plt>
   1feec:	mov	r1, r0
   1fef0:	mov	r0, r4
   1fef4:	bl	39d8 <g_type_check_instance_cast@plt>
   1fef8:	bl	3a14 <fwupd_device_get_guids@plt>
   1fefc:	mov	r1, #4
   1ff00:	mov	r5, r0
   1ff04:	ldr	r0, [r0, #4]
   1ff08:	add	r0, r0, #1
   1ff0c:	bl	41ac <g_malloc0_n@plt>
   1ff10:	ldr	r1, [r5, #4]
   1ff14:	cmp	r1, #0
   1ff18:	lslne	r1, r1, #2
   1ff1c:	movne	r3, #0
   1ff20:	mov	r4, r0
   1ff24:	beq	1ff40 <main@@Base+0x1bb08>
   1ff28:	ldr	r2, [r5]
   1ff2c:	ldr	r2, [r2, r3]
   1ff30:	str	r2, [r4, r3]
   1ff34:	add	r3, r3, #4
   1ff38:	cmp	r3, r1
   1ff3c:	bne	1ff28 <main@@Base+0x1baf0>
   1ff40:	ldr	r0, [pc, #48]	; 1ff78 <main@@Base+0x1bb40>
   1ff44:	mov	r1, r4
   1ff48:	add	r0, pc, r0
   1ff4c:	bl	4338 <g_strjoinv@plt>
   1ff50:	mov	r5, r0
   1ff54:	mov	r0, r4
   1ff58:	bl	3eac <g_free@plt>
   1ff5c:	mov	r0, r5
   1ff60:	pop	{r3, r4, r5, pc}
   1ff64:	mov	r5, r0
   1ff68:	mov	r0, r4
   1ff6c:	bl	3eac <g_free@plt>
   1ff70:	mov	r0, r5
   1ff74:	bl	42f0 <_Unwind_Resume@plt>
   1ff78:	andeq	r5, r0, ip, lsr #13
   1ff7c:	ldr	r3, [pc, #180]	; 20038 <main@@Base+0x1bc00>
   1ff80:	push	{r4, r5, r6, lr}
   1ff84:	add	r3, pc, r3
   1ff88:	mov	r4, r0
   1ff8c:	mov	r5, r1
   1ff90:	ldr	r3, [r3]
   1ff94:	add	r6, r0, r3
   1ff98:	bl	1f330 <main@@Base+0x1aef8>
   1ff9c:	cmp	r4, #0
   1ffa0:	mov	r1, r0
   1ffa4:	beq	1ffd0 <main@@Base+0x1bb98>
   1ffa8:	ldr	r3, [r4]
   1ffac:	cmp	r3, #0
   1ffb0:	beq	1ffc0 <main@@Base+0x1bb88>
   1ffb4:	ldr	r3, [r3]
   1ffb8:	cmp	r0, r3
   1ffbc:	beq	1fff8 <main@@Base+0x1bbc0>
   1ffc0:	mov	r0, r4
   1ffc4:	bl	3fcc <g_type_check_instance_is_a@plt>
   1ffc8:	cmp	r0, #0
   1ffcc:	bne	1fff8 <main@@Base+0x1bbc0>
   1ffd0:	ldr	r1, [pc, #100]	; 2003c <main@@Base+0x1bc04>
   1ffd4:	ldr	r0, [pc, #100]	; 20040 <main@@Base+0x1bc08>
   1ffd8:	ldr	r2, [pc, #100]	; 20044 <main@@Base+0x1bc0c>
   1ffdc:	add	r1, pc, r1
   1ffe0:	add	r0, pc, r0
   1ffe4:	add	r1, r1, #256	; 0x100
   1ffe8:	add	r2, pc, r2
   1ffec:	bl	3870 <g_return_if_fail_warning@plt>
   1fff0:	mov	r0, #0
   1fff4:	pop	{r4, r5, r6, pc}
   1fff8:	cmp	r5, #0
   1fffc:	beq	20010 <main@@Base+0x1bbd8>
   20000:	ldr	r0, [r6, #16]
   20004:	mov	r1, r5
   20008:	pop	{r4, r5, r6, lr}
   2000c:	b	3db0 <g_hash_table_lookup@plt>
   20010:	ldr	r1, [pc, #48]	; 20048 <main@@Base+0x1bc10>
   20014:	ldr	r0, [pc, #48]	; 2004c <main@@Base+0x1bc14>
   20018:	ldr	r2, [pc, #48]	; 20050 <main@@Base+0x1bc18>
   2001c:	add	r1, pc, r1
   20020:	add	r0, pc, r0
   20024:	add	r1, r1, #256	; 0x100
   20028:	add	r2, pc, r2
   2002c:	bl	3870 <g_return_if_fail_warning@plt>
   20030:	mov	r0, #0
   20034:	pop	{r4, r5, r6, pc}
   20038:	strdeq	pc, [r1], -r8
   2003c:	strdeq	sl, [r0], -r0
   20040:			; <UNDEFINED> instruction: 0x00009eb8
   20044:	andeq	sl, r0, r0, ror #12
   20048:			; <UNDEFINED> instruction: 0x0000a2b0
   2004c:	andeq	r9, r0, r8, ror lr
   20050:	andeq	sl, r0, r0, ror r6
   20054:	ldr	r3, [pc, #216]	; 20134 <main@@Base+0x1bcfc>
   20058:	push	{r4, r5, r6, lr}
   2005c:	add	r3, pc, r3
   20060:	mov	r4, r0
   20064:	mov	r5, r1
   20068:	ldr	r3, [r3]
   2006c:	add	r6, r0, r3
   20070:	bl	1f330 <main@@Base+0x1aef8>
   20074:	cmp	r4, #0
   20078:	mov	r1, r0
   2007c:	beq	200a8 <main@@Base+0x1bc70>
   20080:	ldr	r3, [r4]
   20084:	cmp	r3, #0
   20088:	beq	20098 <main@@Base+0x1bc60>
   2008c:	ldr	r3, [r3]
   20090:	cmp	r0, r3
   20094:	beq	200d0 <main@@Base+0x1bc98>
   20098:	mov	r0, r4
   2009c:	bl	3fcc <g_type_check_instance_is_a@plt>
   200a0:	cmp	r0, #0
   200a4:	bne	200d0 <main@@Base+0x1bc98>
   200a8:	ldr	r1, [pc, #136]	; 20138 <main@@Base+0x1bd00>
   200ac:	ldr	r0, [pc, #136]	; 2013c <main@@Base+0x1bd04>
   200b0:	ldr	r2, [pc, #136]	; 20140 <main@@Base+0x1bd08>
   200b4:	add	r1, pc, r1
   200b8:	add	r0, pc, r0
   200bc:	add	r1, r1, #280	; 0x118
   200c0:	add	r2, pc, r2
   200c4:	bl	3870 <g_return_if_fail_warning@plt>
   200c8:	mov	r0, #0
   200cc:	pop	{r4, r5, r6, pc}
   200d0:	cmp	r5, #0
   200d4:	beq	20104 <main@@Base+0x1bccc>
   200d8:	ldr	r0, [r6, #16]
   200dc:	mov	r1, r5
   200e0:	bl	3db0 <g_hash_table_lookup@plt>
   200e4:	subs	r3, r0, #0
   200e8:	beq	2012c <main@@Base+0x1bcf4>
   200ec:	ldr	r1, [pc, #80]	; 20144 <main@@Base+0x1bd0c>
   200f0:	add	r1, pc, r1
   200f4:	bl	441c <g_strcmp0@plt>
   200f8:	rsbs	r0, r0, #1
   200fc:	movcc	r0, #0
   20100:	pop	{r4, r5, r6, pc}
   20104:	ldr	r1, [pc, #60]	; 20148 <main@@Base+0x1bd10>
   20108:	ldr	r0, [pc, #60]	; 2014c <main@@Base+0x1bd14>
   2010c:	ldr	r2, [pc, #60]	; 20150 <main@@Base+0x1bd18>
   20110:	add	r1, pc, r1
   20114:	add	r0, pc, r0
   20118:	add	r1, r1, #280	; 0x118
   2011c:	add	r2, pc, r2
   20120:	bl	3870 <g_return_if_fail_warning@plt>
   20124:	mov	r0, r5
   20128:	pop	{r4, r5, r6, pc}
   2012c:	mov	r0, r3
   20130:	pop	{r4, r5, r6, pc}
   20134:	andeq	pc, r1, r0, lsr #32
   20138:	andeq	sl, r0, r8, lsl r2
   2013c:	andeq	r9, r0, r0, ror #27
   20140:	andeq	sl, r0, r8, lsl #11
   20144:			; <UNDEFINED> instruction: 0x0000a5b4
   20148:			; <UNDEFINED> instruction: 0x0000a1bc
   2014c:	andeq	r9, r0, r4, lsl #27
   20150:	andeq	sl, r0, ip, ror r5
   20154:	ldr	r3, [pc, #304]	; 2028c <main@@Base+0x1be54>
   20158:	ldr	r2, [pc, #304]	; 20290 <main@@Base+0x1be58>
   2015c:	add	r3, pc, r3
   20160:	push	{r4, r5, r6, r7, lr}
   20164:	mov	r4, r0
   20168:	ldr	r5, [r3, r2]
   2016c:	sub	sp, sp, #12
   20170:	ldr	r0, [pc, #284]	; 20294 <main@@Base+0x1be5c>
   20174:	mov	r6, r1
   20178:	mov	r1, #0
   2017c:	str	r1, [sp]
   20180:	add	r0, pc, r0
   20184:	ldr	r3, [r5]
   20188:	ldr	r2, [r0]
   2018c:	str	r3, [sp, #4]
   20190:	add	r7, r4, r2
   20194:	bl	1f330 <main@@Base+0x1aef8>
   20198:	cmp	r4, #0
   2019c:	mov	r1, r0
   201a0:	beq	201cc <main@@Base+0x1bd94>
   201a4:	ldr	r3, [r4]
   201a8:	cmp	r3, #0
   201ac:	beq	201bc <main@@Base+0x1bd84>
   201b0:	ldr	r3, [r3]
   201b4:	cmp	r0, r3
   201b8:	beq	20208 <main@@Base+0x1bdd0>
   201bc:	mov	r0, r4
   201c0:	bl	3fcc <g_type_check_instance_is_a@plt>
   201c4:	cmp	r0, #0
   201c8:	bne	20208 <main@@Base+0x1bdd0>
   201cc:	ldr	r1, [pc, #196]	; 20298 <main@@Base+0x1be60>
   201d0:	ldr	r0, [pc, #196]	; 2029c <main@@Base+0x1be64>
   201d4:	ldr	r2, [pc, #196]	; 202a0 <main@@Base+0x1be68>
   201d8:	add	r1, pc, r1
   201dc:	add	r0, pc, r0
   201e0:	add	r1, r1, #312	; 0x138
   201e4:	add	r2, pc, r2
   201e8:	bl	3870 <g_return_if_fail_warning@plt>
   201ec:	mvn	r0, #0
   201f0:	ldr	r2, [sp, #4]
   201f4:	ldr	r3, [r5]
   201f8:	cmp	r2, r3
   201fc:	bne	20288 <main@@Base+0x1be50>
   20200:	add	sp, sp, #12
   20204:	pop	{r4, r5, r6, r7, pc}
   20208:	cmp	r6, #0
   2020c:	beq	20260 <main@@Base+0x1be28>
   20210:	ldr	r0, [r7, #16]
   20214:	mov	r1, r6
   20218:	bl	3db0 <g_hash_table_lookup@plt>
   2021c:	cmp	r0, #0
   20220:	beq	201ec <main@@Base+0x1bdb4>
   20224:	mov	r1, sp
   20228:	mov	r2, #10
   2022c:	bl	4284 <g_ascii_strtoull@plt>
   20230:	ldr	r3, [sp]
   20234:	cmp	r3, #0
   20238:	beq	20248 <main@@Base+0x1be10>
   2023c:	ldrb	r3, [r3]
   20240:	cmp	r3, #0
   20244:	bne	201ec <main@@Base+0x1bdb4>
   20248:	mvn	r2, #0
   2024c:	mov	r3, #0
   20250:	cmp	r1, r3
   20254:	cmpeq	r0, r2
   20258:	bhi	201ec <main@@Base+0x1bdb4>
   2025c:	b	201f0 <main@@Base+0x1bdb8>
   20260:	ldr	r1, [pc, #60]	; 202a4 <main@@Base+0x1be6c>
   20264:	ldr	r0, [pc, #60]	; 202a8 <main@@Base+0x1be70>
   20268:	ldr	r2, [pc, #60]	; 202ac <main@@Base+0x1be74>
   2026c:	add	r1, pc, r1
   20270:	add	r0, pc, r0
   20274:	add	r1, r1, #312	; 0x138
   20278:	add	r2, pc, r2
   2027c:	bl	3870 <g_return_if_fail_warning@plt>
   20280:	mvn	r0, #0
   20284:	b	201f0 <main@@Base+0x1bdb8>
   20288:	bl	3e4c <__stack_chk_fail@plt>
   2028c:	andeq	lr, r1, r4, lsr #20
   20290:	andeq	r0, r0, r0, lsr r4
   20294:	strdeq	lr, [r1], -ip
   20298:	strdeq	sl, [r0], -r4
   2029c:			; <UNDEFINED> instruction: 0x00009cbc
   202a0:	andeq	sl, r0, r4, ror #8
   202a4:	andeq	sl, r0, r0, rrx
   202a8:	andeq	r9, r0, r8, lsr #24
   202ac:	andeq	sl, r0, r0, lsr #8
   202b0:	push	{r3, r4, r5, r6, r7, lr}
   202b4:	mov	r4, r0
   202b8:	ldr	r3, [pc, #240]	; 203b0 <main@@Base+0x1bf78>
   202bc:	mov	r6, r1
   202c0:	mov	r5, r2
   202c4:	add	r3, pc, r3
   202c8:	ldr	r3, [r3]
   202cc:	add	r7, r0, r3
   202d0:	bl	1f330 <main@@Base+0x1aef8>
   202d4:	cmp	r4, #0
   202d8:	mov	r1, r0
   202dc:	beq	20308 <main@@Base+0x1bed0>
   202e0:	ldr	r3, [r4]
   202e4:	cmp	r3, #0
   202e8:	beq	202f8 <main@@Base+0x1bec0>
   202ec:	ldr	r3, [r3]
   202f0:	cmp	r0, r3
   202f4:	beq	2032c <main@@Base+0x1bef4>
   202f8:	mov	r0, r4
   202fc:	bl	3fcc <g_type_check_instance_is_a@plt>
   20300:	cmp	r0, #0
   20304:	bne	2032c <main@@Base+0x1bef4>
   20308:	ldr	r1, [pc, #164]	; 203b4 <main@@Base+0x1bf7c>
   2030c:	ldr	r0, [pc, #164]	; 203b8 <main@@Base+0x1bf80>
   20310:	ldr	r2, [pc, #164]	; 203bc <main@@Base+0x1bf84>
   20314:	add	r1, pc, r1
   20318:	add	r0, pc, r0
   2031c:	add	r1, r1, #344	; 0x158
   20320:	add	r2, pc, r2
   20324:	pop	{r3, r4, r5, r6, r7, lr}
   20328:	b	3870 <g_return_if_fail_warning@plt>
   2032c:	cmp	r6, #0
   20330:	beq	20368 <main@@Base+0x1bf30>
   20334:	cmp	r5, #0
   20338:	beq	2038c <main@@Base+0x1bf54>
   2033c:	mov	r0, r6
   20340:	ldr	r6, [r7, #16]
   20344:	bl	3b7c <g_strdup@plt>
   20348:	mov	r4, r0
   2034c:	mov	r0, r5
   20350:	bl	3b7c <g_strdup@plt>
   20354:	mov	r1, r4
   20358:	mov	r2, r0
   2035c:	mov	r0, r6
   20360:	pop	{r3, r4, r5, r6, r7, lr}
   20364:	b	3bb8 <g_hash_table_insert@plt>
   20368:	ldr	r1, [pc, #80]	; 203c0 <main@@Base+0x1bf88>
   2036c:	ldr	r0, [pc, #80]	; 203c4 <main@@Base+0x1bf8c>
   20370:	ldr	r2, [pc, #80]	; 203c8 <main@@Base+0x1bf90>
   20374:	add	r1, pc, r1
   20378:	add	r0, pc, r0
   2037c:	add	r1, r1, #344	; 0x158
   20380:	add	r2, pc, r2
   20384:	pop	{r3, r4, r5, r6, r7, lr}
   20388:	b	3870 <g_return_if_fail_warning@plt>
   2038c:	ldr	r1, [pc, #56]	; 203cc <main@@Base+0x1bf94>
   20390:	ldr	r0, [pc, #56]	; 203d0 <main@@Base+0x1bf98>
   20394:	ldr	r2, [pc, #56]	; 203d4 <main@@Base+0x1bf9c>
   20398:	add	r1, pc, r1
   2039c:	add	r0, pc, r0
   203a0:	add	r1, r1, #344	; 0x158
   203a4:	add	r2, pc, r2
   203a8:	pop	{r3, r4, r5, r6, r7, lr}
   203ac:	b	3870 <g_return_if_fail_warning@plt>
   203b0:			; <UNDEFINED> instruction: 0x0001edb8
   203b4:			; <UNDEFINED> instruction: 0x00009fb8
   203b8:	andeq	r9, r0, r0, lsl #23
   203bc:	andeq	sl, r0, r8, lsr #6
   203c0:	andeq	r9, r0, r8, asr pc
   203c4:	andeq	r9, r0, r0, lsr #22
   203c8:	andeq	sl, r0, r8, lsl r3
   203cc:	andeq	r9, r0, r4, lsr pc
   203d0:	strdeq	r9, [r0], -ip
   203d4:	andeq	sl, r0, r8, lsl #6
   203d8:	cmp	r2, #0
   203dc:	bne	203ec <main@@Base+0x1bfb4>
   203e0:	ldr	r2, [pc, #16]	; 203f8 <main@@Base+0x1bfc0>
   203e4:	add	r2, pc, r2
   203e8:	b	202b0 <main@@Base+0x1be78>
   203ec:	ldr	r2, [pc, #8]	; 203fc <main@@Base+0x1bfc4>
   203f0:	add	r2, pc, r2
   203f4:	b	202b0 <main@@Base+0x1be78>
   203f8:	ldrdeq	sl, [r0], -r8
   203fc:			; <UNDEFINED> instruction: 0x0000a2b4
   20400:	push	{r4, r5, r6, lr}
   20404:	mov	r6, r0
   20408:	ldr	r0, [pc, #64]	; 20450 <main@@Base+0x1c018>
   2040c:	mov	r5, r1
   20410:	mov	r1, r2
   20414:	add	r0, pc, r0
   20418:	bl	3c18 <g_strdup_printf@plt>
   2041c:	mov	r1, r5
   20420:	mov	r4, r0
   20424:	mov	r0, r6
   20428:	mov	r2, r4
   2042c:	bl	202b0 <main@@Base+0x1be78>
   20430:	mov	r0, r4
   20434:	pop	{r4, r5, r6, lr}
   20438:	b	3eac <g_free@plt>
   2043c:	mov	r5, r0
   20440:	mov	r0, r4
   20444:	bl	3eac <g_free@plt>
   20448:	mov	r0, r5
   2044c:	bl	42f0 <_Unwind_Resume@plt>
   20450:	strdeq	r7, [r0], -r8
   20454:	push	{r4, r5, r6, r7, lr}
   20458:	mov	r4, r0
   2045c:	sub	sp, sp, #12
   20460:	mov	r0, r1
   20464:	mov	r5, r1
   20468:	bl	3990 <g_string_new@plt>
   2046c:	mov	r6, r0
   20470:	bl	4290 <fwupd_device_get_type@plt>
   20474:	mov	r1, r0
   20478:	mov	r0, r4
   2047c:	bl	39d8 <g_type_check_instance_cast@plt>
   20480:	bl	3f6c <fwupd_device_get_name@plt>
   20484:	mov	r1, r0
   20488:	mov	r0, r5
   2048c:	bl	441c <g_strcmp0@plt>
   20490:	cmp	r0, #0
   20494:	bne	204e8 <main@@Base+0x1c0b0>
   20498:	bl	4290 <fwupd_device_get_type@plt>
   2049c:	mov	r1, r0
   204a0:	mov	r0, r4
   204a4:	bl	39d8 <g_type_check_instance_cast@plt>
   204a8:	bl	3aec <fwupd_device_get_id@plt>
   204ac:	mov	r3, r0
   204b0:	ldr	r2, [pc, #276]	; 205cc <main@@Base+0x1c194>
   204b4:	ldr	r0, [pc, #276]	; 205d0 <main@@Base+0x1c198>
   204b8:	mov	r1, #16
   204bc:	str	r5, [sp]
   204c0:	add	r2, pc, r2
   204c4:	add	r0, pc, r0
   204c8:	bl	3a38 <g_log@plt>
   204cc:	cmp	r6, #0
   204d0:	beq	2059c <main@@Base+0x1c164>
   204d4:	mov	r0, r6
   204d8:	mov	r1, #1
   204dc:	add	sp, sp, #12
   204e0:	pop	{r4, r5, r6, r7, lr}
   204e4:	b	40bc <g_string_free@plt>
   204e8:	bl	4290 <fwupd_device_get_type@plt>
   204ec:	mov	r1, r0
   204f0:	mov	r0, r4
   204f4:	bl	39d8 <g_type_check_instance_cast@plt>
   204f8:	bl	3f6c <fwupd_device_get_name@plt>
   204fc:	cmp	r0, #0
   20500:	beq	20554 <main@@Base+0x1c11c>
   20504:	bl	4290 <fwupd_device_get_type@plt>
   20508:	mov	r1, r0
   2050c:	mov	r0, r4
   20510:	bl	39d8 <g_type_check_instance_cast@plt>
   20514:	bl	3aec <fwupd_device_get_id@plt>
   20518:	mov	r7, r0
   2051c:	bl	4290 <fwupd_device_get_type@plt>
   20520:	mov	r1, r0
   20524:	mov	r0, r4
   20528:	bl	39d8 <g_type_check_instance_cast@plt>
   2052c:	bl	3f6c <fwupd_device_get_name@plt>
   20530:	str	r0, [sp]
   20534:	mov	r3, r7
   20538:	ldr	r0, [pc, #148]	; 205d4 <main@@Base+0x1c19c>
   2053c:	mov	r1, #128	; 0x80
   20540:	ldr	r2, [pc, #144]	; 205d8 <main@@Base+0x1c1a0>
   20544:	str	r5, [sp, #4]
   20548:	add	r0, pc, r0
   2054c:	add	r2, pc, r2
   20550:	bl	3a38 <g_log@plt>
   20554:	ldr	r1, [pc, #128]	; 205dc <main@@Base+0x1c1a4>
   20558:	mov	r2, #32
   2055c:	ldr	r0, [r6]
   20560:	add	r1, pc, r1
   20564:	bl	396c <g_strdelimit@plt>
   20568:	ldr	r1, [pc, #112]	; 205e0 <main@@Base+0x1c1a8>
   2056c:	mov	r0, r6
   20570:	ldr	r2, [pc, #108]	; 205e4 <main@@Base+0x1c1ac>
   20574:	add	r1, pc, r1
   20578:	add	r2, pc, r2
   2057c:	bl	3828 <as_utils_string_replace@plt>
   20580:	bl	4290 <fwupd_device_get_type@plt>
   20584:	mov	r1, r0
   20588:	mov	r0, r4
   2058c:	bl	39d8 <g_type_check_instance_cast@plt>
   20590:	ldr	r1, [r6]
   20594:	bl	4014 <fwupd_device_set_name@plt>
   20598:	b	204d4 <main@@Base+0x1c09c>
   2059c:	add	sp, sp, #12
   205a0:	pop	{r4, r5, r6, r7, pc}
   205a4:	cmp	r6, #0
   205a8:	mov	r4, r0
   205ac:	beq	205bc <main@@Base+0x1c184>
   205b0:	mov	r0, r6
   205b4:	mov	r1, #1
   205b8:	bl	40bc <g_string_free@plt>
   205bc:	mov	r0, r4
   205c0:	bl	42f0 <_Unwind_Resume@plt>
   205c4:	mov	r4, r0
   205c8:	b	205b0 <main@@Base+0x1c178>
   205cc:	andeq	sl, r0, r4, lsl #4
   205d0:	ldrdeq	r9, [r0], -r4
   205d4:	andeq	r9, r0, r0, asr r9
   205d8:	andeq	sl, r0, r8, lsr #3
   205dc:	muleq	r0, r0, r1
   205e0:	andeq	sl, r0, ip, lsr #3
   205e4:			; <UNDEFINED> instruction: 0x0000a1b0
   205e8:	push	{r4, r5, r6, lr}
   205ec:	sub	sp, sp, #8
   205f0:	mov	r4, r0
   205f4:	mov	r6, r1
   205f8:	bl	1f330 <main@@Base+0x1aef8>
   205fc:	cmp	r4, #0
   20600:	beq	20630 <main@@Base+0x1c1f8>
   20604:	ldr	r3, [r4]
   20608:	cmp	r3, #0
   2060c:	beq	2061c <main@@Base+0x1c1e4>
   20610:	ldr	r3, [r3]
   20614:	cmp	r0, r3
   20618:	beq	20660 <main@@Base+0x1c228>
   2061c:	mov	r1, r0
   20620:	mov	r0, r4
   20624:	bl	3fcc <g_type_check_instance_is_a@plt>
   20628:	cmp	r0, #0
   2062c:	bne	20660 <main@@Base+0x1c228>
   20630:	ldr	r1, [pc, #224]	; 20718 <main@@Base+0x1c2e0>
   20634:	ldr	r0, [pc, #224]	; 2071c <main@@Base+0x1c2e4>
   20638:	ldr	r2, [pc, #224]	; 20720 <main@@Base+0x1c2e8>
   2063c:	add	r1, pc, r1
   20640:	add	r0, pc, r0
   20644:	add	r1, r1, #368	; 0x170
   20648:	add	r2, pc, r2
   2064c:	bl	3870 <g_return_if_fail_warning@plt>
   20650:	mov	r0, #0
   20654:	add	sp, sp, #8
   20658:	pop	{r4, r5, r6, lr}
   2065c:	b	3eac <g_free@plt>
   20660:	cmp	r6, #0
   20664:	beq	206c4 <main@@Base+0x1c28c>
   20668:	mov	r0, #1
   2066c:	mov	r1, r6
   20670:	mvn	r2, #0
   20674:	bl	3dd4 <g_compute_checksum_for_string@plt>
   20678:	mov	r5, r0
   2067c:	ldr	r2, [pc, #160]	; 20724 <main@@Base+0x1c2ec>
   20680:	ldr	r0, [pc, #160]	; 20728 <main@@Base+0x1c2f0>
   20684:	mov	r3, r5
   20688:	str	r6, [sp]
   2068c:	mov	r1, #128	; 0x80
   20690:	add	r0, pc, r0
   20694:	add	r2, pc, r2
   20698:	bl	3a38 <g_log@plt>
   2069c:	bl	4290 <fwupd_device_get_type@plt>
   206a0:	mov	r1, r0
   206a4:	mov	r0, r4
   206a8:	bl	39d8 <g_type_check_instance_cast@plt>
   206ac:	mov	r1, r5
   206b0:	bl	3eb8 <fwupd_device_set_id@plt>
   206b4:	mov	r0, r5
   206b8:	add	sp, sp, #8
   206bc:	pop	{r4, r5, r6, lr}
   206c0:	b	3eac <g_free@plt>
   206c4:	ldr	r1, [pc, #96]	; 2072c <main@@Base+0x1c2f4>
   206c8:	ldr	r0, [pc, #96]	; 20730 <main@@Base+0x1c2f8>
   206cc:	ldr	r2, [pc, #96]	; 20734 <main@@Base+0x1c2fc>
   206d0:	add	r1, pc, r1
   206d4:	add	r0, pc, r0
   206d8:	add	r1, r1, #368	; 0x170
   206dc:	add	r2, pc, r2
   206e0:	bl	3870 <g_return_if_fail_warning@plt>
   206e4:	b	20650 <main@@Base+0x1c218>
   206e8:	mov	r4, r0
   206ec:	mov	r5, #0
   206f0:	mov	r0, r5
   206f4:	bl	3eac <g_free@plt>
   206f8:	mov	r0, r4
   206fc:	bl	42f0 <_Unwind_Resume@plt>
   20700:	b	206e8 <main@@Base+0x1c2b0>
   20704:	b	206e8 <main@@Base+0x1c2b0>
   20708:	b	206e8 <main@@Base+0x1c2b0>
   2070c:	mov	r4, r0
   20710:	b	206f0 <main@@Base+0x1c2b8>
   20714:	b	206e8 <main@@Base+0x1c2b0>
   20718:	muleq	r0, r0, ip
   2071c:	andeq	r9, r0, r8, asr r8
   20720:	andeq	sl, r0, r0
   20724:	andeq	r9, r0, r4, ror #31
   20728:	andeq	r9, r0, r8, lsl #16
   2072c:	strdeq	r9, [r0], -ip
   20730:	andeq	r9, r0, r4, asr #15
   20734:	andeq	sl, r0, r0, asr r0
   20738:	push	{r3, r4, r5, lr}
   2073c:	mov	r4, r0
   20740:	mov	r5, r1
   20744:	bl	1f330 <main@@Base+0x1aef8>
   20748:	cmp	r4, #0
   2074c:	beq	2077c <main@@Base+0x1c344>
   20750:	ldr	r3, [r4]
   20754:	cmp	r3, #0
   20758:	beq	20768 <main@@Base+0x1c330>
   2075c:	ldr	r3, [r3]
   20760:	cmp	r0, r3
   20764:	beq	207a0 <main@@Base+0x1c368>
   20768:	mov	r1, r0
   2076c:	mov	r0, r4
   20770:	bl	3fcc <g_type_check_instance_is_a@plt>
   20774:	cmp	r0, #0
   20778:	bne	207a0 <main@@Base+0x1c368>
   2077c:	ldr	r1, [pc, #96]	; 207e4 <main@@Base+0x1c3ac>
   20780:	ldr	r0, [pc, #96]	; 207e8 <main@@Base+0x1c3b0>
   20784:	ldr	r2, [pc, #96]	; 207ec <main@@Base+0x1c3b4>
   20788:	add	r1, pc, r1
   2078c:	add	r0, pc, r0
   20790:	add	r1, r1, #388	; 0x184
   20794:	add	r2, pc, r2
   20798:	pop	{r3, r4, r5, lr}
   2079c:	b	3870 <g_return_if_fail_warning@plt>
   207a0:	cmp	r5, #0
   207a4:	beq	207c0 <main@@Base+0x1c388>
   207a8:	ldr	r1, [pc, #64]	; 207f0 <main@@Base+0x1c3b8>
   207ac:	mov	r0, r4
   207b0:	mov	r2, r5
   207b4:	add	r1, pc, r1
   207b8:	pop	{r3, r4, r5, lr}
   207bc:	b	202b0 <main@@Base+0x1be78>
   207c0:	ldr	r1, [pc, #44]	; 207f4 <main@@Base+0x1c3bc>
   207c4:	ldr	r0, [pc, #44]	; 207f8 <main@@Base+0x1c3c0>
   207c8:	ldr	r2, [pc, #44]	; 207fc <main@@Base+0x1c3c4>
   207cc:	add	r1, pc, r1
   207d0:	add	r0, pc, r0
   207d4:	add	r1, r1, #388	; 0x184
   207d8:	add	r2, pc, r2
   207dc:	pop	{r3, r4, r5, lr}
   207e0:	b	3870 <g_return_if_fail_warning@plt>
   207e4:	andeq	r9, r0, r4, asr #22
   207e8:	andeq	r9, r0, ip, lsl #14
   207ec:			; <UNDEFINED> instruction: 0x00009eb4
   207f0:	andeq	r9, r0, r4, lsl #31
   207f4:	andeq	r9, r0, r0, lsl #22
   207f8:	andeq	r9, r0, r8, asr #13
   207fc:	andeq	r9, r0, r8, ror #30
   20800:	push	{r4, lr}
   20804:	mov	r4, r0
   20808:	bl	1f330 <main@@Base+0x1aef8>
   2080c:	cmp	r4, #0
   20810:	beq	20840 <main@@Base+0x1c408>
   20814:	ldr	r3, [r4]
   20818:	cmp	r3, #0
   2081c:	beq	2082c <main@@Base+0x1c3f4>
   20820:	ldr	r3, [r3]
   20824:	cmp	r0, r3
   20828:	beq	20868 <main@@Base+0x1c430>
   2082c:	mov	r1, r0
   20830:	mov	r0, r4
   20834:	bl	3fcc <g_type_check_instance_is_a@plt>
   20838:	cmp	r0, #0
   2083c:	bne	20868 <main@@Base+0x1c430>
   20840:	ldr	r1, [pc, #52]	; 2087c <main@@Base+0x1c444>
   20844:	ldr	r0, [pc, #52]	; 20880 <main@@Base+0x1c448>
   20848:	ldr	r2, [pc, #52]	; 20884 <main@@Base+0x1c44c>
   2084c:	add	r1, pc, r1
   20850:	add	r0, pc, r0
   20854:	add	r1, r1, #412	; 0x19c
   20858:	add	r2, pc, r2
   2085c:	bl	3870 <g_return_if_fail_warning@plt>
   20860:	mov	r0, #0
   20864:	pop	{r4, pc}
   20868:	ldr	r1, [pc, #24]	; 20888 <main@@Base+0x1c450>
   2086c:	mov	r0, r4
   20870:	pop	{r4, lr}
   20874:	add	r1, pc, r1
   20878:	b	1ff7c <main@@Base+0x1bb44>
   2087c:	andeq	r9, r0, r0, lsl #21
   20880:	andeq	r9, r0, r8, asr #12
   20884:	strdeq	r9, [r0], -r0
   20888:	andeq	r9, r0, r4, asr #29
   2088c:	push	{r3, r4, r5, lr}
   20890:	mov	r4, r0
   20894:	mov	r5, r1
   20898:	bl	1f330 <main@@Base+0x1aef8>
   2089c:	cmp	r4, #0
   208a0:	beq	208d0 <main@@Base+0x1c498>
   208a4:	ldr	r3, [r4]
   208a8:	cmp	r3, #0
   208ac:	beq	208bc <main@@Base+0x1c484>
   208b0:	ldr	r3, [r3]
   208b4:	cmp	r0, r3
   208b8:	beq	208f4 <main@@Base+0x1c4bc>
   208bc:	mov	r1, r0
   208c0:	mov	r0, r4
   208c4:	bl	3fcc <g_type_check_instance_is_a@plt>
   208c8:	cmp	r0, #0
   208cc:	bne	208f4 <main@@Base+0x1c4bc>
   208d0:	ldr	r1, [pc, #96]	; 20938 <main@@Base+0x1c500>
   208d4:	ldr	r0, [pc, #96]	; 2093c <main@@Base+0x1c504>
   208d8:	ldr	r2, [pc, #96]	; 20940 <main@@Base+0x1c508>
   208dc:	add	r1, pc, r1
   208e0:	add	r0, pc, r0
   208e4:	add	r1, r1, #436	; 0x1b4
   208e8:	add	r2, pc, r2
   208ec:	pop	{r3, r4, r5, lr}
   208f0:	b	3870 <g_return_if_fail_warning@plt>
   208f4:	cmp	r5, #0
   208f8:	beq	20914 <main@@Base+0x1c4dc>
   208fc:	ldr	r1, [pc, #64]	; 20944 <main@@Base+0x1c50c>
   20900:	mov	r0, r4
   20904:	mov	r2, r5
   20908:	add	r1, pc, r1
   2090c:	pop	{r3, r4, r5, lr}
   20910:	b	202b0 <main@@Base+0x1be78>
   20914:	ldr	r1, [pc, #44]	; 20948 <main@@Base+0x1c510>
   20918:	ldr	r0, [pc, #44]	; 2094c <main@@Base+0x1c514>
   2091c:	ldr	r2, [pc, #44]	; 20950 <main@@Base+0x1c518>
   20920:	add	r1, pc, r1
   20924:	add	r0, pc, r0
   20928:	add	r1, r1, #436	; 0x1b4
   2092c:	add	r2, pc, r2
   20930:	pop	{r3, r4, r5, lr}
   20934:	b	3870 <g_return_if_fail_warning@plt>
   20938:	strdeq	r9, [r0], -r0
   2093c:			; <UNDEFINED> instruction: 0x000095b8
   20940:	andeq	r9, r0, r0, ror #26
   20944:	andeq	r9, r0, r8, asr #28
   20948:	andeq	r9, r0, ip, lsr #19
   2094c:	andeq	r9, r0, r4, ror r5
   20950:	andeq	r9, r0, r0, lsr lr
   20954:	push	{r4, lr}
   20958:	mov	r4, r0
   2095c:	bl	1f330 <main@@Base+0x1aef8>
   20960:	cmp	r4, #0
   20964:	beq	20994 <main@@Base+0x1c55c>
   20968:	ldr	r3, [r4]
   2096c:	cmp	r3, #0
   20970:	beq	20980 <main@@Base+0x1c548>
   20974:	ldr	r3, [r3]
   20978:	cmp	r0, r3
   2097c:	beq	209bc <main@@Base+0x1c584>
   20980:	mov	r1, r0
   20984:	mov	r0, r4
   20988:	bl	3fcc <g_type_check_instance_is_a@plt>
   2098c:	cmp	r0, #0
   20990:	bne	209bc <main@@Base+0x1c584>
   20994:	ldr	r1, [pc, #52]	; 209d0 <main@@Base+0x1c598>
   20998:	ldr	r0, [pc, #52]	; 209d4 <main@@Base+0x1c59c>
   2099c:	ldr	r2, [pc, #52]	; 209d8 <main@@Base+0x1c5a0>
   209a0:	add	r1, pc, r1
   209a4:	add	r0, pc, r0
   209a8:	add	r1, r1, #464	; 0x1d0
   209ac:	add	r2, pc, r2
   209b0:	bl	3870 <g_return_if_fail_warning@plt>
   209b4:	mov	r0, #0
   209b8:	pop	{r4, pc}
   209bc:	ldr	r1, [pc, #24]	; 209dc <main@@Base+0x1c5a4>
   209c0:	mov	r0, r4
   209c4:	pop	{r4, lr}
   209c8:	add	r1, pc, r1
   209cc:	b	1ff7c <main@@Base+0x1bb44>
   209d0:	andeq	r9, r0, ip, lsr #18
   209d4:	strdeq	r9, [r0], -r4
   209d8:	muleq	r0, ip, ip
   209dc:	andeq	r9, r0, r8, lsl #27
   209e0:	push	{r4, r5, r6, lr}
   209e4:	mov	r4, r0
   209e8:	mov	r5, r1
   209ec:	bl	1f330 <main@@Base+0x1aef8>
   209f0:	cmp	r4, #0
   209f4:	beq	20a24 <main@@Base+0x1c5ec>
   209f8:	ldr	r3, [r4]
   209fc:	cmp	r3, #0
   20a00:	beq	20a10 <main@@Base+0x1c5d8>
   20a04:	ldr	r3, [r3]
   20a08:	cmp	r0, r3
   20a0c:	beq	20a48 <main@@Base+0x1c610>
   20a10:	mov	r1, r0
   20a14:	mov	r0, r4
   20a18:	bl	3fcc <g_type_check_instance_is_a@plt>
   20a1c:	cmp	r0, #0
   20a20:	bne	20a48 <main@@Base+0x1c610>
   20a24:	ldr	r1, [pc, #236]	; 20b18 <main@@Base+0x1c6e0>
   20a28:	ldr	r0, [pc, #236]	; 20b1c <main@@Base+0x1c6e4>
   20a2c:	ldr	r2, [pc, #236]	; 20b20 <main@@Base+0x1c6e8>
   20a30:	add	r1, pc, r1
   20a34:	add	r0, pc, r0
   20a38:	add	r1, r1, #492	; 0x1ec
   20a3c:	add	r2, pc, r2
   20a40:	pop	{r4, r5, r6, lr}
   20a44:	b	3870 <g_return_if_fail_warning@plt>
   20a48:	cmp	r5, #0
   20a4c:	beq	20a84 <main@@Base+0x1c64c>
   20a50:	bl	4290 <fwupd_device_get_type@plt>
   20a54:	mov	r1, r0
   20a58:	mov	r0, r4
   20a5c:	bl	39d8 <g_type_check_instance_cast@plt>
   20a60:	bl	3aec <fwupd_device_get_id@plt>
   20a64:	cmp	r0, #0
   20a68:	beq	20aa8 <main@@Base+0x1c670>
   20a6c:	ldr	r1, [pc, #176]	; 20b24 <main@@Base+0x1c6ec>
   20a70:	mov	r0, r4
   20a74:	mov	r2, r5
   20a78:	add	r1, pc, r1
   20a7c:	pop	{r4, r5, r6, lr}
   20a80:	b	202b0 <main@@Base+0x1be78>
   20a84:	ldr	r1, [pc, #156]	; 20b28 <main@@Base+0x1c6f0>
   20a88:	ldr	r0, [pc, #156]	; 20b2c <main@@Base+0x1c6f4>
   20a8c:	ldr	r2, [pc, #156]	; 20b30 <main@@Base+0x1c6f8>
   20a90:	add	r1, pc, r1
   20a94:	add	r0, pc, r0
   20a98:	add	r1, r1, #492	; 0x1ec
   20a9c:	add	r2, pc, r2
   20aa0:	pop	{r4, r5, r6, lr}
   20aa4:	b	3870 <g_return_if_fail_warning@plt>
   20aa8:	bl	4290 <fwupd_device_get_type@plt>
   20aac:	mov	r1, r0
   20ab0:	mov	r0, r4
   20ab4:	bl	39d8 <g_type_check_instance_cast@plt>
   20ab8:	bl	429c <fwupd_device_get_guid_default@plt>
   20abc:	mov	r2, r0
   20ac0:	ldr	r0, [pc, #108]	; 20b34 <main@@Base+0x1c6fc>
   20ac4:	mov	r1, r5
   20ac8:	add	r0, pc, r0
   20acc:	bl	3c18 <g_strdup_printf@plt>
   20ad0:	mov	r6, r0
   20ad4:	mov	r0, r4
   20ad8:	mov	r1, r6
   20adc:	bl	205e8 <main@@Base+0x1c1b0>
   20ae0:	mov	r0, r6
   20ae4:	bl	3eac <g_free@plt>
   20ae8:	b	20a6c <main@@Base+0x1c634>
   20aec:	mov	r4, r0
   20af0:	mov	r6, #0
   20af4:	mov	r0, r6
   20af8:	bl	3eac <g_free@plt>
   20afc:	mov	r0, r4
   20b00:	bl	42f0 <_Unwind_Resume@plt>
   20b04:	mov	r4, r0
   20b08:	b	20af4 <main@@Base+0x1c6bc>
   20b0c:	b	20aec <main@@Base+0x1c6b4>
   20b10:	b	20aec <main@@Base+0x1c6b4>
   20b14:	b	20aec <main@@Base+0x1c6b4>
   20b18:	muleq	r0, ip, r8
   20b1c:	andeq	r9, r0, r4, ror #8
   20b20:	andeq	r9, r0, ip, lsl #24
   20b24:			; <UNDEFINED> instruction: 0x00009bb0
   20b28:	andeq	r9, r0, ip, lsr r8
   20b2c:	andeq	r9, r0, r4, lsl #8
   20b30:	andeq	r9, r0, r0, ror #25
   20b34:	andeq	r9, r0, ip, lsr #25
   20b38:	push	{r4, lr}
   20b3c:	mov	r4, r0
   20b40:	bl	1f330 <main@@Base+0x1aef8>
   20b44:	cmp	r4, #0
   20b48:	beq	20b78 <main@@Base+0x1c740>
   20b4c:	ldr	r3, [r4]
   20b50:	cmp	r3, #0
   20b54:	beq	20b64 <main@@Base+0x1c72c>
   20b58:	ldr	r3, [r3]
   20b5c:	cmp	r0, r3
   20b60:	beq	20ba0 <main@@Base+0x1c768>
   20b64:	mov	r1, r0
   20b68:	mov	r0, r4
   20b6c:	bl	3fcc <g_type_check_instance_is_a@plt>
   20b70:	cmp	r0, #0
   20b74:	bne	20ba0 <main@@Base+0x1c768>
   20b78:	ldr	r1, [pc, #52]	; 20bb4 <main@@Base+0x1c77c>
   20b7c:	ldr	r0, [pc, #52]	; 20bb8 <main@@Base+0x1c780>
   20b80:	ldr	r2, [pc, #52]	; 20bbc <main@@Base+0x1c784>
   20b84:	add	r1, pc, r1
   20b88:	add	r0, pc, r0
   20b8c:	add	r1, r1, #520	; 0x208
   20b90:	add	r2, pc, r2
   20b94:	bl	3870 <g_return_if_fail_warning@plt>
   20b98:	mov	r0, #0
   20b9c:	pop	{r4, pc}
   20ba0:	ldr	r1, [pc, #24]	; 20bc0 <main@@Base+0x1c788>
   20ba4:	mov	r0, r4
   20ba8:	pop	{r4, lr}
   20bac:	add	r1, pc, r1
   20bb0:	b	1ff7c <main@@Base+0x1bb44>
   20bb4:	andeq	r9, r0, r8, asr #14
   20bb8:	andeq	r9, r0, r0, lsl r3
   20bbc:			; <UNDEFINED> instruction: 0x00009ab8
   20bc0:	andeq	r9, r0, ip, ror sl
   20bc4:	push	{r4, r5, r6, r7, lr}
   20bc8:	sub	sp, sp, #28
   20bcc:	mov	r4, r1
   20bd0:	mov	r5, r0
   20bd4:	mov	r6, r2
   20bd8:	mov	r7, r3
   20bdc:	bl	1f330 <main@@Base+0x1aef8>
   20be0:	mov	r1, r0
   20be4:	mov	r0, r5
   20be8:	bl	39d8 <g_type_check_instance_cast@plt>
   20bec:	ldr	r1, [pc, #224]	; 20cd4 <main@@Base+0x1c89c>
   20bf0:	sub	ip, r4, #1
   20bf4:	add	r1, pc, r1
   20bf8:	ldr	r1, [r1]
   20bfc:	add	r1, r0, r1
   20c00:	cmp	ip, #3
   20c04:	addls	pc, pc, ip, lsl #2
   20c08:	b	20c70 <main@@Base+0x1c838>
   20c0c:	b	20c5c <main@@Base+0x1c824>
   20c10:	b	20c48 <main@@Base+0x1c810>
   20c14:	b	20c30 <main@@Base+0x1c7f8>
   20c18:	b	20c1c <main@@Base+0x1c7e4>
   20c1c:	mov	r0, r6
   20c20:	ldr	r1, [r1, #12]
   20c24:	add	sp, sp, #28
   20c28:	pop	{r4, r5, r6, r7, lr}
   20c2c:	b	3ec4 <g_value_set_object@plt>
   20c30:	bl	20b38 <main@@Base+0x1c700>
   20c34:	mov	r1, r0
   20c38:	mov	r0, r6
   20c3c:	add	sp, sp, #28
   20c40:	pop	{r4, r5, r6, r7, lr}
   20c44:	b	3cf0 <g_value_set_string@plt>
   20c48:	mov	r0, r6
   20c4c:	ldr	r1, [r1, #36]	; 0x24
   20c50:	add	sp, sp, #28
   20c54:	pop	{r4, r5, r6, r7, lr}
   20c58:	b	3ab0 <g_value_set_uint@plt>
   20c5c:	mov	r0, r6
   20c60:	ldr	r1, [r1, #32]
   20c64:	add	sp, sp, #28
   20c68:	pop	{r4, r5, r6, r7, lr}
   20c6c:	b	3ab0 <g_value_set_uint@plt>
   20c70:	ldm	r7, {r3, r7}
   20c74:	ldr	r0, [r3]
   20c78:	bl	3a50 <g_type_name@plt>
   20c7c:	ldr	r3, [r5]
   20c80:	mov	r6, r0
   20c84:	ldr	r0, [r3]
   20c88:	bl	3a50 <g_type_name@plt>
   20c8c:	ldr	r2, [pc, #68]	; 20cd8 <main@@Base+0x1c8a0>
   20c90:	mov	r3, #74	; 0x4a
   20c94:	str	r3, [sp]
   20c98:	add	r2, pc, r2
   20c9c:	ldr	r3, [pc, #56]	; 20cdc <main@@Base+0x1c8a4>
   20ca0:	stmib	sp, {r2, r4}
   20ca4:	mov	r1, #16
   20ca8:	ldr	r2, [pc, #48]	; 20ce0 <main@@Base+0x1c8a8>
   20cac:	add	r3, pc, r3
   20cb0:	str	r7, [sp, #12]
   20cb4:	str	r6, [sp, #16]
   20cb8:	add	r2, pc, r2
   20cbc:	str	r0, [sp, #20]
   20cc0:	ldr	r0, [pc, #28]	; 20ce4 <main@@Base+0x1c8ac>
   20cc4:	add	r0, pc, r0
   20cc8:	bl	3a38 <g_log@plt>
   20ccc:	add	sp, sp, #28
   20cd0:	pop	{r4, r5, r6, r7, pc}
   20cd4:	andeq	lr, r1, r8, lsl #9
   20cd8:	andeq	r9, r0, r4, asr #22
   20cdc:	andeq	r9, r0, ip, lsl fp
   20ce0:	ldrdeq	r9, [r0], -r8
   20ce4:	ldrdeq	r9, [r0], -r4
   20ce8:	push	{r3, r4, r5, lr}
   20cec:	mov	r4, r0
   20cf0:	ldr	r3, [pc, #112]	; 20d68 <main@@Base+0x1c930>
   20cf4:	add	r3, pc, r3
   20cf8:	ldr	r5, [r3]
   20cfc:	bl	1f330 <main@@Base+0x1aef8>
   20d00:	cmp	r4, #0
   20d04:	beq	20d34 <main@@Base+0x1c8fc>
   20d08:	ldr	r3, [r4]
   20d0c:	cmp	r3, #0
   20d10:	beq	20d20 <main@@Base+0x1c8e8>
   20d14:	ldr	r3, [r3]
   20d18:	cmp	r0, r3
   20d1c:	beq	20d5c <main@@Base+0x1c924>
   20d20:	mov	r1, r0
   20d24:	mov	r0, r4
   20d28:	bl	3fcc <g_type_check_instance_is_a@plt>
   20d2c:	cmp	r0, #0
   20d30:	bne	20d5c <main@@Base+0x1c924>
   20d34:	ldr	r1, [pc, #48]	; 20d6c <main@@Base+0x1c934>
   20d38:	ldr	r0, [pc, #48]	; 20d70 <main@@Base+0x1c938>
   20d3c:	ldr	r2, [pc, #48]	; 20d74 <main@@Base+0x1c93c>
   20d40:	add	r1, pc, r1
   20d44:	add	r0, pc, r0
   20d48:	add	r1, r1, #548	; 0x224
   20d4c:	add	r2, pc, r2
   20d50:	bl	3870 <g_return_if_fail_warning@plt>
   20d54:	mov	r0, #0
   20d58:	pop	{r3, r4, r5, pc}
   20d5c:	add	r4, r4, r5
   20d60:	ldr	r0, [r4, #28]
   20d64:	pop	{r3, r4, r5, pc}
   20d68:	andeq	lr, r1, r8, lsl #7
   20d6c:	andeq	r9, r0, ip, lsl #11
   20d70:	andeq	r9, r0, r4, asr r1
   20d74:	strdeq	r9, [r0], -ip
   20d78:	ldr	r3, [pc, #120]	; 20df8 <main@@Base+0x1c9c0>
   20d7c:	push	{r4, r5, r6, lr}
   20d80:	add	r3, pc, r3
   20d84:	mov	r4, r0
   20d88:	mov	r5, r1
   20d8c:	ldr	r6, [r3]
   20d90:	bl	1f330 <main@@Base+0x1aef8>
   20d94:	cmp	r4, #0
   20d98:	beq	20dc8 <main@@Base+0x1c990>
   20d9c:	ldr	r3, [r4]
   20da0:	cmp	r3, #0
   20da4:	beq	20db4 <main@@Base+0x1c97c>
   20da8:	ldr	r3, [r3]
   20dac:	cmp	r0, r3
   20db0:	beq	20dec <main@@Base+0x1c9b4>
   20db4:	mov	r1, r0
   20db8:	mov	r0, r4
   20dbc:	bl	3fcc <g_type_check_instance_is_a@plt>
   20dc0:	cmp	r0, #0
   20dc4:	bne	20dec <main@@Base+0x1c9b4>
   20dc8:	ldr	r1, [pc, #44]	; 20dfc <main@@Base+0x1c9c4>
   20dcc:	ldr	r0, [pc, #44]	; 20e00 <main@@Base+0x1c9c8>
   20dd0:	ldr	r2, [pc, #44]	; 20e04 <main@@Base+0x1c9cc>
   20dd4:	add	r1, pc, r1
   20dd8:	add	r0, pc, r0
   20ddc:	add	r1, r1, #576	; 0x240
   20de0:	add	r2, pc, r2
   20de4:	pop	{r4, r5, r6, lr}
   20de8:	b	3870 <g_return_if_fail_warning@plt>
   20dec:	add	r4, r4, r6
   20df0:	str	r5, [r4, #28]
   20df4:	pop	{r4, r5, r6, pc}
   20df8:	strdeq	lr, [r1], -ip
   20dfc:	strdeq	r9, [r0], -r8
   20e00:	andeq	r9, r0, r0, asr #1
   20e04:	andeq	r9, r0, r8, ror #16
   20e08:	push	{r3, r4, r5, lr}
   20e0c:	mov	r4, r0
   20e10:	ldr	r3, [pc, #112]	; 20e88 <main@@Base+0x1ca50>
   20e14:	add	r3, pc, r3
   20e18:	ldr	r5, [r3]
   20e1c:	bl	1f330 <main@@Base+0x1aef8>
   20e20:	cmp	r4, #0
   20e24:	beq	20e54 <main@@Base+0x1ca1c>
   20e28:	ldr	r3, [r4]
   20e2c:	cmp	r3, #0
   20e30:	beq	20e40 <main@@Base+0x1ca08>
   20e34:	ldr	r3, [r3]
   20e38:	cmp	r0, r3
   20e3c:	beq	20e7c <main@@Base+0x1ca44>
   20e40:	mov	r1, r0
   20e44:	mov	r0, r4
   20e48:	bl	3fcc <g_type_check_instance_is_a@plt>
   20e4c:	cmp	r0, #0
   20e50:	bne	20e7c <main@@Base+0x1ca44>
   20e54:	ldr	r1, [pc, #48]	; 20e8c <main@@Base+0x1ca54>
   20e58:	ldr	r0, [pc, #48]	; 20e90 <main@@Base+0x1ca58>
   20e5c:	ldr	r2, [pc, #48]	; 20e94 <main@@Base+0x1ca5c>
   20e60:	add	r1, pc, r1
   20e64:	add	r0, pc, r0
   20e68:	add	r1, r1, #604	; 0x25c
   20e6c:	add	r2, pc, r2
   20e70:	bl	3870 <g_return_if_fail_warning@plt>
   20e74:	mov	r0, #0
   20e78:	pop	{r3, r4, r5, pc}
   20e7c:	add	r4, r4, r5
   20e80:	ldr	r0, [r4, #32]
   20e84:	pop	{r3, r4, r5, pc}
   20e88:	andeq	lr, r1, r8, ror #4
   20e8c:	andeq	r9, r0, ip, ror #8
   20e90:	andeq	r9, r0, r4, lsr r0
   20e94:	ldrdeq	r9, [r0], -ip
   20e98:	ldr	r3, [pc, #160]	; 20f40 <main@@Base+0x1cb08>
   20e9c:	push	{r4, r5, r6, lr}
   20ea0:	add	r3, pc, r3
   20ea4:	mov	r4, r0
   20ea8:	mov	r5, r1
   20eac:	ldr	r6, [r3]
   20eb0:	bl	1f330 <main@@Base+0x1aef8>
   20eb4:	cmp	r4, #0
   20eb8:	beq	20ee8 <main@@Base+0x1cab0>
   20ebc:	ldr	r3, [r4]
   20ec0:	cmp	r3, #0
   20ec4:	beq	20ed4 <main@@Base+0x1ca9c>
   20ec8:	ldr	r2, [r3]
   20ecc:	cmp	r0, r2
   20ed0:	beq	20f0c <main@@Base+0x1cad4>
   20ed4:	mov	r1, r0
   20ed8:	mov	r0, r4
   20edc:	bl	3fcc <g_type_check_instance_is_a@plt>
   20ee0:	cmp	r0, #0
   20ee4:	bne	20f0c <main@@Base+0x1cad4>
   20ee8:	ldr	r1, [pc, #84]	; 20f44 <main@@Base+0x1cb0c>
   20eec:	ldr	r0, [pc, #84]	; 20f48 <main@@Base+0x1cb10>
   20ef0:	ldr	r2, [pc, #84]	; 20f4c <main@@Base+0x1cb14>
   20ef4:	add	r1, pc, r1
   20ef8:	add	r0, pc, r0
   20efc:	add	r1, r1, #628	; 0x274
   20f00:	add	r2, pc, r2
   20f04:	pop	{r4, r5, r6, lr}
   20f08:	b	3870 <g_return_if_fail_warning@plt>
   20f0c:	add	r3, r4, r6
   20f10:	ldr	r2, [r3, #32]
   20f14:	cmp	r2, r5
   20f18:	beq	20f3c <main@@Base+0x1cb04>
   20f1c:	str	r5, [r3, #32]
   20f20:	mov	r0, r4
   20f24:	mov	r1, #80	; 0x50
   20f28:	bl	39d8 <g_type_check_instance_cast@plt>
   20f2c:	ldr	r1, [pc, #28]	; 20f50 <main@@Base+0x1cb18>
   20f30:	pop	{r4, r5, r6, lr}
   20f34:	add	r1, pc, r1
   20f38:	b	3fa8 <g_object_notify@plt>
   20f3c:	pop	{r4, r5, r6, pc}
   20f40:	ldrdeq	lr, [r1], -ip
   20f44:	ldrdeq	r9, [r0], -r8
   20f48:	andeq	r8, r0, r0, lsr #31
   20f4c:	andeq	r9, r0, r8, asr #14
   20f50:	andeq	r4, r0, r8, lsl #21
   20f54:	push	{r3, r4, r5, lr}
   20f58:	mov	r4, r0
   20f5c:	ldr	r3, [pc, #112]	; 20fd4 <main@@Base+0x1cb9c>
   20f60:	add	r3, pc, r3
   20f64:	ldr	r5, [r3]
   20f68:	bl	1f330 <main@@Base+0x1aef8>
   20f6c:	cmp	r4, #0
   20f70:	beq	20fa0 <main@@Base+0x1cb68>
   20f74:	ldr	r3, [r4]
   20f78:	cmp	r3, #0
   20f7c:	beq	20f8c <main@@Base+0x1cb54>
   20f80:	ldr	r3, [r3]
   20f84:	cmp	r0, r3
   20f88:	beq	20fc8 <main@@Base+0x1cb90>
   20f8c:	mov	r1, r0
   20f90:	mov	r0, r4
   20f94:	bl	3fcc <g_type_check_instance_is_a@plt>
   20f98:	cmp	r0, #0
   20f9c:	bne	20fc8 <main@@Base+0x1cb90>
   20fa0:	ldr	r1, [pc, #48]	; 20fd8 <main@@Base+0x1cba0>
   20fa4:	ldr	r0, [pc, #48]	; 20fdc <main@@Base+0x1cba4>
   20fa8:	ldr	r2, [pc, #48]	; 20fe0 <main@@Base+0x1cba8>
   20fac:	add	r1, pc, r1
   20fb0:	add	r0, pc, r0
   20fb4:	add	r1, r1, #652	; 0x28c
   20fb8:	add	r2, pc, r2
   20fbc:	bl	3870 <g_return_if_fail_warning@plt>
   20fc0:	mov	r0, #0
   20fc4:	pop	{r3, r4, r5, pc}
   20fc8:	add	r4, r4, r5
   20fcc:	ldr	r0, [r4, #36]	; 0x24
   20fd0:	pop	{r3, r4, r5, pc}
   20fd4:	andeq	lr, r1, ip, lsl r1
   20fd8:	andeq	r9, r0, r0, lsr #6
   20fdc:	andeq	r8, r0, r8, ror #29
   20fe0:	muleq	r0, r0, r6
   20fe4:	ldr	r3, [pc, #160]	; 2108c <main@@Base+0x1cc54>
   20fe8:	push	{r4, r5, r6, lr}
   20fec:	add	r3, pc, r3
   20ff0:	mov	r4, r0
   20ff4:	mov	r5, r1
   20ff8:	ldr	r6, [r3]
   20ffc:	bl	1f330 <main@@Base+0x1aef8>
   21000:	cmp	r4, #0
   21004:	beq	21034 <main@@Base+0x1cbfc>
   21008:	ldr	r3, [r4]
   2100c:	cmp	r3, #0
   21010:	beq	21020 <main@@Base+0x1cbe8>
   21014:	ldr	r2, [r3]
   21018:	cmp	r0, r2
   2101c:	beq	21058 <main@@Base+0x1cc20>
   21020:	mov	r1, r0
   21024:	mov	r0, r4
   21028:	bl	3fcc <g_type_check_instance_is_a@plt>
   2102c:	cmp	r0, #0
   21030:	bne	21058 <main@@Base+0x1cc20>
   21034:	ldr	r1, [pc, #84]	; 21090 <main@@Base+0x1cc58>
   21038:	ldr	r0, [pc, #84]	; 21094 <main@@Base+0x1cc5c>
   2103c:	ldr	r2, [pc, #84]	; 21098 <main@@Base+0x1cc60>
   21040:	add	r1, pc, r1
   21044:	add	r0, pc, r0
   21048:	add	r1, r1, #676	; 0x2a4
   2104c:	add	r2, pc, r2
   21050:	pop	{r4, r5, r6, lr}
   21054:	b	3870 <g_return_if_fail_warning@plt>
   21058:	add	r3, r4, r6
   2105c:	ldr	r2, [r3, #36]	; 0x24
   21060:	cmp	r2, r5
   21064:	beq	21088 <main@@Base+0x1cc50>
   21068:	str	r5, [r3, #36]	; 0x24
   2106c:	mov	r0, r4
   21070:	mov	r1, #80	; 0x50
   21074:	bl	39d8 <g_type_check_instance_cast@plt>
   21078:	ldr	r1, [pc, #28]	; 2109c <main@@Base+0x1cc64>
   2107c:	pop	{r4, r5, r6, lr}
   21080:	add	r1, pc, r1
   21084:	b	3fa8 <g_object_notify@plt>
   21088:	pop	{r4, r5, r6, pc}
   2108c:	muleq	r1, r0, r0
   21090:	andeq	r9, r0, ip, lsl #5
   21094:	andeq	r8, r0, r4, asr lr
   21098:	strdeq	r9, [r0], -ip
   2109c:	andeq	r4, r0, ip, asr #18
   210a0:	cmp	r2, #0
   210a4:	vldrne	d6, [pc, #36]	; 210d0 <main@@Base+0x1cc98>
   210a8:	vmovne	s11, r1
   210ac:	moveq	r1, r2
   210b0:	vcvtne.f64.u32	d7, s11
   210b4:	vmovne	s11, r2
   210b8:	vmulne.f64	d7, d7, d6
   210bc:	vcvtne.f64.u32	d6, s11
   210c0:	vdivne.f64	d7, d7, d6
   210c4:	vcvtne.u32.f64	s13, d7
   210c8:	vmovne	r1, s13
   210cc:	b	20fe4 <main@@Base+0x1cbac>
   210d0:	andeq	r0, r0, r0
   210d4:	subsmi	r0, r9, r0
   210d8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210dc:	mov	r8, r0
   210e0:	ldr	r3, [pc, #456]	; 212b0 <main@@Base+0x1ce78>
   210e4:	ldr	r0, [pc, #456]	; 212b4 <main@@Base+0x1ce7c>
   210e8:	add	r3, pc, r3
   210ec:	ldr	fp, [r8]
   210f0:	add	r0, pc, r0
   210f4:	ldr	r4, [r3]
   210f8:	bl	3990 <g_string_new@plt>
   210fc:	add	r6, r8, r4
   21100:	mov	r7, r0
   21104:	bl	1f330 <main@@Base+0x1aef8>
   21108:	ldr	r3, [r8]
   2110c:	cmp	r3, #0
   21110:	beq	21120 <main@@Base+0x1cce8>
   21114:	ldr	r3, [r3]
   21118:	cmp	r0, r3
   2111c:	beq	2116c <main@@Base+0x1cd34>
   21120:	mov	r1, r0
   21124:	mov	r0, r8
   21128:	bl	3fcc <g_type_check_instance_is_a@plt>
   2112c:	cmp	r0, #0
   21130:	bne	2116c <main@@Base+0x1cd34>
   21134:	ldr	r1, [pc, #380]	; 212b8 <main@@Base+0x1ce80>
   21138:	ldr	r0, [pc, #380]	; 212bc <main@@Base+0x1ce84>
   2113c:	ldr	r2, [pc, #380]	; 212c0 <main@@Base+0x1ce88>
   21140:	add	r1, pc, r1
   21144:	add	r0, pc, r0
   21148:	add	r1, r1, #700	; 0x2bc
   2114c:	add	r2, pc, r2
   21150:	bl	3870 <g_return_if_fail_warning@plt>
   21154:	mov	r9, #0
   21158:	mov	r4, r9
   2115c:	mov	r0, r9
   21160:	bl	3eac <g_free@plt>
   21164:	mov	r0, r4
   21168:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2116c:	bl	4290 <fwupd_device_get_type@plt>
   21170:	mov	r1, r0
   21174:	mov	r0, r8
   21178:	bl	39d8 <g_type_check_instance_cast@plt>
   2117c:	bl	3b4c <fwupd_device_to_string@plt>
   21180:	subs	r9, r0, #0
   21184:	beq	21194 <main@@Base+0x1cd5c>
   21188:	ldrb	r3, [r9]
   2118c:	cmp	r3, #0
   21190:	bne	21248 <main@@Base+0x1ce10>
   21194:	ldr	r2, [r8, r4]
   21198:	cmp	r2, #0
   2119c:	beq	211b0 <main@@Base+0x1cd78>
   211a0:	ldr	r1, [pc, #284]	; 212c4 <main@@Base+0x1ce8c>
   211a4:	mov	r0, r7
   211a8:	add	r1, pc, r1
   211ac:	bl	1f2b8 <main@@Base+0x1ae80>
   211b0:	ldr	r0, [r6, #16]
   211b4:	bl	3b04 <g_hash_table_get_keys@plt>
   211b8:	subs	sl, r0, #0
   211bc:	movne	r4, sl
   211c0:	bne	211d4 <main@@Base+0x1cd9c>
   211c4:	b	2120c <main@@Base+0x1cdd4>
   211c8:	ldr	r4, [r4, #4]
   211cc:	cmp	r4, #0
   211d0:	beq	2120c <main@@Base+0x1cdd4>
   211d4:	ldr	r5, [r4]
   211d8:	ldr	r0, [r6, #16]
   211dc:	mov	r1, r5
   211e0:	bl	3db0 <g_hash_table_lookup@plt>
   211e4:	cmp	r5, #0
   211e8:	cmpne	r0, #0
   211ec:	beq	211c8 <main@@Base+0x1cd90>
   211f0:	mov	r2, r0
   211f4:	mov	r1, r5
   211f8:	mov	r0, r7
   211fc:	bl	1f2b8 <main@@Base+0x1ae80>
   21200:	ldr	r4, [r4, #4]
   21204:	cmp	r4, #0
   21208:	bne	211d4 <main@@Base+0x1cd9c>
   2120c:	ldr	r3, [fp, #96]	; 0x60
   21210:	cmp	r3, #0
   21214:	beq	21224 <main@@Base+0x1cdec>
   21218:	mov	r0, r8
   2121c:	mov	r1, r7
   21220:	blx	r3
   21224:	mov	r0, r7
   21228:	mov	r1, #0
   2122c:	bl	40bc <g_string_free@plt>
   21230:	cmp	sl, #0
   21234:	mov	r4, r0
   21238:	beq	2115c <main@@Base+0x1cd24>
   2123c:	mov	r0, sl
   21240:	bl	3b10 <g_list_free@plt>
   21244:	b	2115c <main@@Base+0x1cd24>
   21248:	mov	r0, r7
   2124c:	mov	r1, r9
   21250:	bl	4308 <g_string_append@plt>
   21254:	b	21194 <main@@Base+0x1cd5c>
   21258:	mov	r4, r0
   2125c:	mov	r9, #0
   21260:	mov	r0, r9
   21264:	bl	3eac <g_free@plt>
   21268:	mov	r0, r4
   2126c:	bl	42f0 <_Unwind_Resume@plt>
   21270:	b	21258 <main@@Base+0x1ce20>
   21274:	b	21258 <main@@Base+0x1ce20>
   21278:	b	21258 <main@@Base+0x1ce20>
   2127c:	b	21258 <main@@Base+0x1ce20>
   21280:	b	21258 <main@@Base+0x1ce20>
   21284:	mov	r4, r0
   21288:	b	21260 <main@@Base+0x1ce28>
   2128c:	cmp	sl, #0
   21290:	mov	r4, r0
   21294:	beq	21260 <main@@Base+0x1ce28>
   21298:	mov	r0, sl
   2129c:	bl	3b10 <g_list_free@plt>
   212a0:	b	21260 <main@@Base+0x1ce28>
   212a4:	mov	r4, r0
   212a8:	b	21298 <main@@Base+0x1ce60>
   212ac:	b	21284 <main@@Base+0x1ce4c>
   212b0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   212b4:	muleq	r0, r0, r5
   212b8:	andeq	r9, r0, ip, lsl #3
   212bc:	andeq	r8, r0, r4, asr sp
   212c0:	strdeq	r9, [r0], -ip
   212c4:	andeq	r9, r0, r0, asr #12
   212c8:	push	{r3, r4, r5, r6, r7, lr}
   212cc:	mov	r4, r0
   212d0:	ldr	r3, [pc, #180]	; 2138c <main@@Base+0x1cf54>
   212d4:	mov	r5, r1
   212d8:	add	r3, pc, r3
   212dc:	ldr	r7, [r3]
   212e0:	bl	1f330 <main@@Base+0x1aef8>
   212e4:	cmp	r4, #0
   212e8:	beq	21318 <main@@Base+0x1cee0>
   212ec:	ldr	r3, [r4]
   212f0:	cmp	r3, #0
   212f4:	beq	21304 <main@@Base+0x1cecc>
   212f8:	ldr	r3, [r3]
   212fc:	cmp	r0, r3
   21300:	beq	2133c <main@@Base+0x1cf04>
   21304:	mov	r1, r0
   21308:	mov	r0, r4
   2130c:	bl	3fcc <g_type_check_instance_is_a@plt>
   21310:	cmp	r0, #0
   21314:	bne	2133c <main@@Base+0x1cf04>
   21318:	ldr	r1, [pc, #112]	; 21390 <main@@Base+0x1cf58>
   2131c:	ldr	r0, [pc, #112]	; 21394 <main@@Base+0x1cf5c>
   21320:	ldr	r2, [pc, #112]	; 21398 <main@@Base+0x1cf60>
   21324:	add	r1, pc, r1
   21328:	add	r0, pc, r0
   2132c:	add	r1, r1, #720	; 0x2d0
   21330:	add	r2, pc, r2
   21334:	pop	{r3, r4, r5, r6, r7, lr}
   21338:	b	3870 <g_return_if_fail_warning@plt>
   2133c:	add	r7, r4, r7
   21340:	ldr	r6, [r7, #12]
   21344:	cmp	r5, r6
   21348:	popeq	{r3, r4, r5, r6, r7, pc}
   2134c:	cmp	r5, #0
   21350:	beq	2135c <main@@Base+0x1cf24>
   21354:	mov	r0, r5
   21358:	bl	381c <g_object_ref@plt>
   2135c:	cmp	r6, #0
   21360:	str	r5, [r7, #12]
   21364:	beq	21370 <main@@Base+0x1cf38>
   21368:	mov	r0, r6
   2136c:	bl	4110 <g_object_unref@plt>
   21370:	mov	r0, r4
   21374:	mov	r1, #80	; 0x50
   21378:	bl	39d8 <g_type_check_instance_cast@plt>
   2137c:	ldr	r1, [pc, #24]	; 2139c <main@@Base+0x1cf64>
   21380:	pop	{r3, r4, r5, r6, r7, lr}
   21384:	add	r1, pc, r1
   21388:	b	3fa8 <g_object_notify@plt>
   2138c:	andeq	sp, r1, r4, lsr #27
   21390:	andeq	r8, r0, r8, lsr #31
   21394:	andeq	r8, r0, r0, ror fp
   21398:	andeq	r9, r0, r8, lsl r3
   2139c:	andeq	r9, r0, r4, lsl r9
   213a0:	push	{r4, r5, r6, r7, r8, lr}
   213a4:	sub	sp, sp, #24
   213a8:	mov	r4, r1
   213ac:	mov	r5, r0
   213b0:	mov	r6, r2
   213b4:	mov	r8, r3
   213b8:	bl	1f330 <main@@Base+0x1aef8>
   213bc:	mov	r1, r0
   213c0:	mov	r0, r5
   213c4:	bl	39d8 <g_type_check_instance_cast@plt>
   213c8:	sub	ip, r4, #1
   213cc:	mov	r7, r0
   213d0:	cmp	ip, #3
   213d4:	addls	pc, pc, ip, lsl #2
   213d8:	b	2145c <main@@Base+0x1d024>
   213dc:	b	21440 <main@@Base+0x1d008>
   213e0:	b	21424 <main@@Base+0x1cfec>
   213e4:	b	21408 <main@@Base+0x1cfd0>
   213e8:	b	213ec <main@@Base+0x1cfb4>
   213ec:	mov	r0, r6
   213f0:	bl	3ba0 <g_value_get_object@plt>
   213f4:	mov	r1, r0
   213f8:	mov	r0, r7
   213fc:	add	sp, sp, #24
   21400:	pop	{r4, r5, r6, r7, r8, lr}
   21404:	b	212c8 <main@@Base+0x1ce90>
   21408:	mov	r0, r6
   2140c:	bl	38ac <g_value_get_string@plt>
   21410:	mov	r1, r0
   21414:	mov	r0, r7
   21418:	add	sp, sp, #24
   2141c:	pop	{r4, r5, r6, r7, r8, lr}
   21420:	b	209e0 <main@@Base+0x1c5a8>
   21424:	mov	r0, r6
   21428:	bl	4020 <g_value_get_uint@plt>
   2142c:	mov	r1, r0
   21430:	mov	r0, r7
   21434:	add	sp, sp, #24
   21438:	pop	{r4, r5, r6, r7, r8, lr}
   2143c:	b	20fe4 <main@@Base+0x1cbac>
   21440:	mov	r0, r6
   21444:	bl	4020 <g_value_get_uint@plt>
   21448:	mov	r1, r0
   2144c:	mov	r0, r7
   21450:	add	sp, sp, #24
   21454:	pop	{r4, r5, r6, r7, r8, lr}
   21458:	b	20e98 <main@@Base+0x1ca60>
   2145c:	ldm	r8, {r3, r7}
   21460:	ldr	r0, [r3]
   21464:	bl	3a50 <g_type_name@plt>
   21468:	ldr	r3, [r5]
   2146c:	mov	r6, r0
   21470:	ldr	r0, [r3]
   21474:	bl	3a50 <g_type_name@plt>
   21478:	ldr	r2, [pc, #64]	; 214c0 <main@@Base+0x1d088>
   2147c:	mov	r3, #98	; 0x62
   21480:	str	r3, [sp]
   21484:	add	r2, pc, r2
   21488:	ldr	r3, [pc, #52]	; 214c4 <main@@Base+0x1d08c>
   2148c:	stmib	sp, {r2, r4}
   21490:	mov	r1, #16
   21494:	ldr	r2, [pc, #44]	; 214c8 <main@@Base+0x1d090>
   21498:	add	r3, pc, r3
   2149c:	str	r7, [sp, #12]
   214a0:	str	r6, [sp, #16]
   214a4:	add	r2, pc, r2
   214a8:	str	r0, [sp, #20]
   214ac:	ldr	r0, [pc, #24]	; 214cc <main@@Base+0x1d094>
   214b0:	add	r0, pc, r0
   214b4:	bl	3a38 <g_log@plt>
   214b8:	add	sp, sp, #24
   214bc:	pop	{r4, r5, r6, r7, r8, pc}
   214c0:	andeq	r9, r0, r8, asr r3
   214c4:	andeq	r9, r0, r0, lsr r3
   214c8:	andeq	r9, r0, ip, ror #5
   214cc:	andeq	r8, r0, r8, ror #19
   214d0:	push	{r3, r4, r5, lr}
   214d4:	mov	r4, r0
   214d8:	ldr	r3, [pc, #112]	; 21550 <main@@Base+0x1d118>
   214dc:	add	r3, pc, r3
   214e0:	ldr	r5, [r3]
   214e4:	bl	1f330 <main@@Base+0x1aef8>
   214e8:	cmp	r4, #0
   214ec:	beq	2151c <main@@Base+0x1d0e4>
   214f0:	ldr	r3, [r4]
   214f4:	cmp	r3, #0
   214f8:	beq	21508 <main@@Base+0x1d0d0>
   214fc:	ldr	r3, [r3]
   21500:	cmp	r0, r3
   21504:	beq	21544 <main@@Base+0x1d10c>
   21508:	mov	r1, r0
   2150c:	mov	r0, r4
   21510:	bl	3fcc <g_type_check_instance_is_a@plt>
   21514:	cmp	r0, #0
   21518:	bne	21544 <main@@Base+0x1d10c>
   2151c:	ldr	r1, [pc, #48]	; 21554 <main@@Base+0x1d11c>
   21520:	ldr	r0, [pc, #48]	; 21558 <main@@Base+0x1d120>
   21524:	ldr	r2, [pc, #48]	; 2155c <main@@Base+0x1d124>
   21528:	add	r1, pc, r1
   2152c:	add	r0, pc, r0
   21530:	add	r1, r1, #744	; 0x2e8
   21534:	add	r2, pc, r2
   21538:	bl	3870 <g_return_if_fail_warning@plt>
   2153c:	mov	r0, #0
   21540:	pop	{r3, r4, r5, pc}
   21544:	add	r4, r4, r5
   21548:	ldr	r0, [r4, #12]
   2154c:	pop	{r3, r4, r5, pc}
   21550:	andeq	sp, r1, r0, lsr #23
   21554:	andeq	r8, r0, r4, lsr #27
   21558:	andeq	r8, r0, ip, ror #18
   2155c:	andeq	r9, r0, r4, lsl r1
   21560:	push	{r3, r4, r5, lr}
   21564:	mov	r4, r0
   21568:	bl	4290 <fwupd_device_get_type@plt>
   2156c:	mov	r1, r0
   21570:	mov	r0, r4
   21574:	bl	39d8 <g_type_check_instance_cast@plt>
   21578:	bl	3e58 <fwupd_device_get_release_default@plt>
   2157c:	cmp	r0, #0
   21580:	beq	2159c <main@@Base+0x1d164>
   21584:	bl	4290 <fwupd_device_get_type@plt>
   21588:	mov	r1, r0
   2158c:	mov	r0, r4
   21590:	bl	39d8 <g_type_check_instance_cast@plt>
   21594:	bl	3e58 <fwupd_device_get_release_default@plt>
   21598:	pop	{r3, r4, r5, pc}
   2159c:	bl	3f48 <fwupd_release_new@plt>
   215a0:	mov	r5, r0
   215a4:	bl	4290 <fwupd_device_get_type@plt>
   215a8:	mov	r1, r0
   215ac:	mov	r0, r4
   215b0:	bl	39d8 <g_type_check_instance_cast@plt>
   215b4:	mov	r1, r5
   215b8:	bl	43a4 <fwupd_device_add_release@plt>
   215bc:	subs	r0, r5, #0
   215c0:	beq	215ec <main@@Base+0x1d1b4>
   215c4:	bl	4110 <g_object_unref@plt>
   215c8:	mov	r0, r5
   215cc:	pop	{r3, r4, r5, pc}
   215d0:	cmp	r5, #0
   215d4:	mov	r4, r0
   215d8:	beq	215e4 <main@@Base+0x1d1ac>
   215dc:	mov	r0, r5
   215e0:	bl	4110 <g_object_unref@plt>
   215e4:	mov	r0, r4
   215e8:	bl	42f0 <_Unwind_Resume@plt>
   215ec:	pop	{r3, r4, r5, pc}
   215f0:	push	{r4, r5, r6, r7, r8, lr}
   215f4:	mov	r4, r0
   215f8:	mov	r6, r1
   215fc:	mov	r5, r2
   21600:	ldr	r7, [r0]
   21604:	bl	1f330 <main@@Base+0x1aef8>
   21608:	ldr	r3, [r4]
   2160c:	cmp	r3, #0
   21610:	beq	21620 <main@@Base+0x1d1e8>
   21614:	ldr	r3, [r3]
   21618:	cmp	r0, r3
   2161c:	beq	2165c <main@@Base+0x1d224>
   21620:	mov	r1, r0
   21624:	mov	r0, r4
   21628:	bl	3fcc <g_type_check_instance_is_a@plt>
   2162c:	subs	r8, r0, #0
   21630:	bne	2165c <main@@Base+0x1d224>
   21634:	ldr	r1, [pc, #160]	; 216dc <main@@Base+0x1d2a4>
   21638:	ldr	r0, [pc, #160]	; 216e0 <main@@Base+0x1d2a8>
   2163c:	ldr	r2, [pc, #160]	; 216e4 <main@@Base+0x1d2ac>
   21640:	add	r1, pc, r1
   21644:	add	r0, pc, r0
   21648:	add	r1, r1, #768	; 0x300
   2164c:	add	r2, pc, r2
   21650:	bl	3870 <g_return_if_fail_warning@plt>
   21654:	mov	r0, r8
   21658:	pop	{r4, r5, r6, r7, r8, pc}
   2165c:	cmp	r5, #0
   21660:	beq	21698 <main@@Base+0x1d260>
   21664:	ldr	r3, [r5]
   21668:	cmp	r3, #0
   2166c:	beq	21698 <main@@Base+0x1d260>
   21670:	ldr	r1, [pc, #112]	; 216e8 <main@@Base+0x1d2b0>
   21674:	ldr	r0, [pc, #112]	; 216ec <main@@Base+0x1d2b4>
   21678:	ldr	r2, [pc, #112]	; 216f0 <main@@Base+0x1d2b8>
   2167c:	add	r1, pc, r1
   21680:	add	r0, pc, r0
   21684:	add	r1, r1, #768	; 0x300
   21688:	add	r2, pc, r2
   2168c:	bl	3870 <g_return_if_fail_warning@plt>
   21690:	mov	r0, #0
   21694:	pop	{r4, r5, r6, r7, r8, pc}
   21698:	ldr	r7, [r7, #100]	; 0x64
   2169c:	cmp	r7, #0
   216a0:	beq	216b8 <main@@Base+0x1d280>
   216a4:	mov	r0, r4
   216a8:	mov	r1, r6
   216ac:	mov	r2, r5
   216b0:	blx	r7
   216b4:	pop	{r4, r5, r6, r7, r8, pc}
   216b8:	bl	40a4 <fwupd_error_quark@plt>
   216bc:	ldr	r3, [pc, #48]	; 216f4 <main@@Base+0x1d2bc>
   216c0:	mov	r2, #10
   216c4:	add	r3, pc, r3
   216c8:	mov	r1, r0
   216cc:	mov	r0, r5
   216d0:	bl	3ae0 <g_set_error_literal@plt>
   216d4:	mov	r0, r7
   216d8:	pop	{r4, r5, r6, r7, r8, pc}
   216dc:	andeq	r8, r0, ip, lsl #25
   216e0:	andeq	r8, r0, r4, asr r8
   216e4:	strdeq	r8, [r0], -ip
   216e8:	andeq	r8, r0, r0, asr ip
   216ec:	andeq	r8, r0, r8, lsl r8
   216f0:	andeq	r5, r0, r8, ror #15
   216f4:	andeq	r9, r0, r4, lsr r1
   216f8:	push	{r3, r4, r5, r6, r7, lr}
   216fc:	mov	r4, r0
   21700:	mov	r5, r1
   21704:	ldr	r6, [r0]
   21708:	bl	1f330 <main@@Base+0x1aef8>
   2170c:	ldr	r3, [r4]
   21710:	cmp	r3, #0
   21714:	beq	21724 <main@@Base+0x1d2ec>
   21718:	ldr	r3, [r3]
   2171c:	cmp	r0, r3
   21720:	beq	21760 <main@@Base+0x1d328>
   21724:	mov	r1, r0
   21728:	mov	r0, r4
   2172c:	bl	3fcc <g_type_check_instance_is_a@plt>
   21730:	subs	r7, r0, #0
   21734:	bne	21760 <main@@Base+0x1d328>
   21738:	ldr	r1, [pc, #156]	; 217dc <main@@Base+0x1d3a4>
   2173c:	ldr	r0, [pc, #156]	; 217e0 <main@@Base+0x1d3a8>
   21740:	ldr	r2, [pc, #156]	; 217e4 <main@@Base+0x1d3ac>
   21744:	add	r1, pc, r1
   21748:	add	r0, pc, r0
   2174c:	add	r1, r1, #796	; 0x31c
   21750:	add	r2, pc, r2
   21754:	bl	3870 <g_return_if_fail_warning@plt>
   21758:	mov	r0, r7
   2175c:	pop	{r3, r4, r5, r6, r7, pc}
   21760:	cmp	r5, #0
   21764:	beq	2179c <main@@Base+0x1d364>
   21768:	ldr	r3, [r5]
   2176c:	cmp	r3, #0
   21770:	beq	2179c <main@@Base+0x1d364>
   21774:	ldr	r1, [pc, #108]	; 217e8 <main@@Base+0x1d3b0>
   21778:	ldr	r0, [pc, #108]	; 217ec <main@@Base+0x1d3b4>
   2177c:	ldr	r2, [pc, #108]	; 217f0 <main@@Base+0x1d3b8>
   21780:	add	r1, pc, r1
   21784:	add	r0, pc, r0
   21788:	add	r1, r1, #796	; 0x31c
   2178c:	add	r2, pc, r2
   21790:	bl	3870 <g_return_if_fail_warning@plt>
   21794:	mov	r0, #0
   21798:	pop	{r3, r4, r5, r6, r7, pc}
   2179c:	ldr	r6, [r6, #104]	; 0x68
   217a0:	cmp	r6, #0
   217a4:	beq	217b8 <main@@Base+0x1d380>
   217a8:	mov	r0, r4
   217ac:	mov	r1, r5
   217b0:	blx	r6
   217b4:	pop	{r3, r4, r5, r6, r7, pc}
   217b8:	bl	40a4 <fwupd_error_quark@plt>
   217bc:	ldr	r3, [pc, #48]	; 217f4 <main@@Base+0x1d3bc>
   217c0:	mov	r2, #10
   217c4:	add	r3, pc, r3
   217c8:	mov	r1, r0
   217cc:	mov	r0, r5
   217d0:	bl	3ae0 <g_set_error_literal@plt>
   217d4:	mov	r0, r6
   217d8:	pop	{r3, r4, r5, r6, r7, pc}
   217dc:	andeq	r8, r0, r8, lsl #23
   217e0:	andeq	r8, r0, r0, asr r7
   217e4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   217e8:	andeq	r8, r0, ip, asr #22
   217ec:	andeq	r8, r0, r4, lsl r7
   217f0:	andeq	r5, r0, r4, ror #13
   217f4:	andeq	r9, r0, r4, lsr r0
   217f8:	push	{r3, r4, r5, r6, r7, lr}
   217fc:	mov	r4, r0
   21800:	mov	r5, r1
   21804:	ldr	r6, [r0]
   21808:	bl	1f330 <main@@Base+0x1aef8>
   2180c:	ldr	r3, [r4]
   21810:	cmp	r3, #0
   21814:	beq	21824 <main@@Base+0x1d3ec>
   21818:	ldr	r3, [r3]
   2181c:	cmp	r0, r3
   21820:	beq	21860 <main@@Base+0x1d428>
   21824:	mov	r1, r0
   21828:	mov	r0, r4
   2182c:	bl	3fcc <g_type_check_instance_is_a@plt>
   21830:	subs	r7, r0, #0
   21834:	bne	21860 <main@@Base+0x1d428>
   21838:	ldr	r1, [pc, #156]	; 218dc <main@@Base+0x1d4a4>
   2183c:	ldr	r0, [pc, #156]	; 218e0 <main@@Base+0x1d4a8>
   21840:	ldr	r2, [pc, #156]	; 218e4 <main@@Base+0x1d4ac>
   21844:	add	r1, pc, r1
   21848:	add	r0, pc, r0
   2184c:	add	r1, r1, #820	; 0x334
   21850:	add	r2, pc, r2
   21854:	bl	3870 <g_return_if_fail_warning@plt>
   21858:	mov	r0, r7
   2185c:	pop	{r3, r4, r5, r6, r7, pc}
   21860:	cmp	r5, #0
   21864:	beq	2189c <main@@Base+0x1d464>
   21868:	ldr	r3, [r5]
   2186c:	cmp	r3, #0
   21870:	beq	2189c <main@@Base+0x1d464>
   21874:	ldr	r1, [pc, #108]	; 218e8 <main@@Base+0x1d4b0>
   21878:	ldr	r0, [pc, #108]	; 218ec <main@@Base+0x1d4b4>
   2187c:	ldr	r2, [pc, #108]	; 218f0 <main@@Base+0x1d4b8>
   21880:	add	r1, pc, r1
   21884:	add	r0, pc, r0
   21888:	add	r1, r1, #820	; 0x334
   2188c:	add	r2, pc, r2
   21890:	bl	3870 <g_return_if_fail_warning@plt>
   21894:	mov	r0, #0
   21898:	pop	{r3, r4, r5, r6, r7, pc}
   2189c:	ldr	r6, [r6, #108]	; 0x6c
   218a0:	cmp	r6, #0
   218a4:	beq	218b8 <main@@Base+0x1d480>
   218a8:	mov	r0, r4
   218ac:	mov	r1, r5
   218b0:	blx	r6
   218b4:	pop	{r3, r4, r5, r6, r7, pc}
   218b8:	bl	40a4 <fwupd_error_quark@plt>
   218bc:	ldr	r3, [pc, #48]	; 218f4 <main@@Base+0x1d4bc>
   218c0:	mov	r2, #10
   218c4:	add	r3, pc, r3
   218c8:	mov	r1, r0
   218cc:	mov	r0, r5
   218d0:	bl	3ae0 <g_set_error_literal@plt>
   218d4:	mov	r0, r6
   218d8:	pop	{r3, r4, r5, r6, r7, pc}
   218dc:	andeq	r8, r0, r8, lsl #21
   218e0:	andeq	r8, r0, r0, asr r6
   218e4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   218e8:	andeq	r8, r0, ip, asr #20
   218ec:	andeq	r8, r0, r4, lsl r6
   218f0:	andeq	r5, r0, r4, ror #11
   218f4:	andeq	r8, r0, r4, lsr pc
   218f8:	push	{r3, r4, r5, r6, r7, lr}
   218fc:	mov	r4, r0
   21900:	mov	r5, r1
   21904:	ldr	r6, [r0]
   21908:	bl	1f330 <main@@Base+0x1aef8>
   2190c:	ldr	r3, [r4]
   21910:	cmp	r3, #0
   21914:	beq	21924 <main@@Base+0x1d4ec>
   21918:	ldr	r3, [r3]
   2191c:	cmp	r0, r3
   21920:	beq	21960 <main@@Base+0x1d528>
   21924:	mov	r1, r0
   21928:	mov	r0, r4
   2192c:	bl	3fcc <g_type_check_instance_is_a@plt>
   21930:	subs	r7, r0, #0
   21934:	bne	21960 <main@@Base+0x1d528>
   21938:	ldr	r1, [pc, #156]	; 219dc <main@@Base+0x1d5a4>
   2193c:	ldr	r0, [pc, #156]	; 219e0 <main@@Base+0x1d5a8>
   21940:	ldr	r2, [pc, #156]	; 219e4 <main@@Base+0x1d5ac>
   21944:	add	r1, pc, r1
   21948:	add	r0, pc, r0
   2194c:	add	r1, r1, #840	; 0x348
   21950:	add	r2, pc, r2
   21954:	bl	3870 <g_return_if_fail_warning@plt>
   21958:	mov	r0, r7
   2195c:	pop	{r3, r4, r5, r6, r7, pc}
   21960:	cmp	r5, #0
   21964:	beq	2199c <main@@Base+0x1d564>
   21968:	ldr	r3, [r5]
   2196c:	cmp	r3, #0
   21970:	beq	2199c <main@@Base+0x1d564>
   21974:	ldr	r1, [pc, #108]	; 219e8 <main@@Base+0x1d5b0>
   21978:	ldr	r0, [pc, #108]	; 219ec <main@@Base+0x1d5b4>
   2197c:	ldr	r2, [pc, #108]	; 219f0 <main@@Base+0x1d5b8>
   21980:	add	r1, pc, r1
   21984:	add	r0, pc, r0
   21988:	add	r1, r1, #840	; 0x348
   2198c:	add	r2, pc, r2
   21990:	bl	3870 <g_return_if_fail_warning@plt>
   21994:	mov	r0, #0
   21998:	pop	{r3, r4, r5, r6, r7, pc}
   2199c:	ldr	r6, [r6, #112]	; 0x70
   219a0:	cmp	r6, #0
   219a4:	beq	219b8 <main@@Base+0x1d580>
   219a8:	mov	r0, r4
   219ac:	mov	r1, r5
   219b0:	blx	r6
   219b4:	pop	{r3, r4, r5, r6, r7, pc}
   219b8:	bl	40a4 <fwupd_error_quark@plt>
   219bc:	ldr	r3, [pc, #48]	; 219f4 <main@@Base+0x1d5bc>
   219c0:	mov	r2, #10
   219c4:	add	r3, pc, r3
   219c8:	mov	r1, r0
   219cc:	mov	r0, r5
   219d0:	bl	3ae0 <g_set_error_literal@plt>
   219d4:	mov	r0, r6
   219d8:	pop	{r3, r4, r5, r6, r7, pc}
   219dc:	andeq	r8, r0, r8, lsl #19
   219e0:	andeq	r8, r0, r0, asr r5
   219e4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   219e8:	andeq	r8, r0, ip, asr #18
   219ec:	andeq	r8, r0, r4, lsl r5
   219f0:	andeq	r5, r0, r4, ror #9
   219f4:	andeq	r8, r0, r4, lsr lr
   219f8:	push	{r4, lr}
   219fc:	bl	1f330 <main@@Base+0x1aef8>
   21a00:	mov	r1, #0
   21a04:	bl	3804 <g_object_new@plt>
   21a08:	mov	r4, r0
   21a0c:	bl	1f330 <main@@Base+0x1aef8>
   21a10:	mov	r1, r0
   21a14:	mov	r0, r4
   21a18:	pop	{r4, lr}
   21a1c:	b	39d8 <g_type_check_instance_cast@plt>
   21a20:	bx	lr
   21a24:	push	{r4, lr}
   21a28:	mov	r4, r0
   21a2c:	bl	420c <g_type_class_peek_parent@plt>
   21a30:	ldr	r1, [pc, #56]	; 21a70 <main@@Base+0x1d638>
   21a34:	add	r1, pc, r1
   21a38:	ldr	r3, [r1, #4]
   21a3c:	cmp	r3, #0
   21a40:	str	r0, [r1]
   21a44:	beq	21a54 <main@@Base+0x1d61c>
   21a48:	add	r1, r1, #4
   21a4c:	mov	r0, r4
   21a50:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   21a54:	mov	r0, r4
   21a58:	mov	r1, #80	; 0x50
   21a5c:	bl	4374 <g_type_check_class_cast@plt>
   21a60:	ldr	r3, [pc, #12]	; 21a74 <main@@Base+0x1d63c>
   21a64:	add	r3, pc, r3
   21a68:	str	r3, [r0, #24]
   21a6c:	pop	{r4, pc}
   21a70:	andeq	sp, r1, r4, asr r6
   21a74:	strheq	r0, [r0], -r4
   21a78:	ldr	r0, [pc, #140]	; 21b0c <main@@Base+0x1d6d4>
   21a7c:	push	{r4, r5, lr}
   21a80:	add	r0, pc, r0
   21a84:	dmb	sy
   21a88:	sub	sp, sp, #20
   21a8c:	ldr	r4, [r0, #8]
   21a90:	dmb	sy
   21a94:	cmp	r4, #0
   21a98:	beq	21ab0 <main@@Base+0x1d678>
   21a9c:	ldr	r3, [pc, #108]	; 21b10 <main@@Base+0x1d6d8>
   21aa0:	add	r3, pc, r3
   21aa4:	ldr	r0, [r3, #8]
   21aa8:	add	sp, sp, #20
   21aac:	pop	{r4, r5, pc}
   21ab0:	add	r5, r0, #8
   21ab4:	mov	r0, r5
   21ab8:	bl	3d50 <g_once_init_enter@plt>
   21abc:	cmp	r0, #0
   21ac0:	beq	21a9c <main@@Base+0x1d664>
   21ac4:	ldr	r0, [pc, #72]	; 21b14 <main@@Base+0x1d6dc>
   21ac8:	add	r0, pc, r0
   21acc:	bl	3df8 <g_intern_static_string@plt>
   21ad0:	ldr	r3, [pc, #64]	; 21b18 <main@@Base+0x1d6e0>
   21ad4:	mov	r2, #28
   21ad8:	str	r4, [sp, #8]
   21adc:	add	r3, pc, r3
   21ae0:	stm	sp, {r2, r3}
   21ae4:	ldr	r3, [pc, #48]	; 21b1c <main@@Base+0x1d6e4>
   21ae8:	mov	r2, #68	; 0x44
   21aec:	add	r3, pc, r3
   21af0:	mov	r1, r0
   21af4:	mov	r0, #80	; 0x50
   21af8:	bl	3894 <g_type_register_static_simple@plt>
   21afc:	mov	r1, r0
   21b00:	mov	r0, r5
   21b04:	bl	4140 <g_once_init_leave@plt>
   21b08:	b	21a9c <main@@Base+0x1d664>
   21b0c:	andeq	sp, r1, r8, lsl #12
   21b10:	andeq	sp, r1, r8, ror #11
   21b14:	andeq	r8, r0, r4, ror sp
   21b18:			; <UNDEFINED> instruction: 0xffffff3c
   21b1c:			; <UNDEFINED> instruction: 0xffffff30
   21b20:	ldr	r3, [pc, #260]	; 21c2c <main@@Base+0x1d7f4>
   21b24:	ldr	r2, [pc, #260]	; 21c30 <main@@Base+0x1d7f8>
   21b28:	add	r3, pc, r3
   21b2c:	push	{r4, r5, r6, lr}
   21b30:	sub	sp, sp, #8
   21b34:	ldr	r5, [r3, r2]
   21b38:	mov	r6, r0
   21b3c:	ldr	r3, [r5]
   21b40:	str	r3, [sp, #4]
   21b44:	bl	21a78 <main@@Base+0x1d640>
   21b48:	mov	r1, r0
   21b4c:	mov	r0, r6
   21b50:	bl	39d8 <g_type_check_instance_cast@plt>
   21b54:	ldr	r3, [r0, #16]
   21b58:	mov	r4, r0
   21b5c:	cmp	r3, #0
   21b60:	beq	21b98 <main@@Base+0x1d760>
   21b64:	add	r1, sp, #8
   21b68:	mov	r2, #0
   21b6c:	ldr	r3, [r0, #24]
   21b70:	str	r2, [r1, #-8]!
   21b74:	mov	r1, sp
   21b78:	ldr	r0, [r0, #12]
   21b7c:	blx	r3
   21b80:	cmp	r0, #0
   21b84:	beq	21bd8 <main@@Base+0x1d7a0>
   21b88:	ldr	r0, [sp]
   21b8c:	cmp	r0, #0
   21b90:	beq	21b98 <main@@Base+0x1d760>
   21b94:	bl	38e8 <g_error_free@plt>
   21b98:	ldr	r0, [r4, #12]
   21b9c:	bl	4110 <g_object_unref@plt>
   21ba0:	ldr	r3, [pc, #140]	; 21c34 <main@@Base+0x1d7fc>
   21ba4:	mov	r1, #80	; 0x50
   21ba8:	add	r3, pc, r3
   21bac:	ldr	r0, [r3]
   21bb0:	bl	4374 <g_type_check_class_cast@plt>
   21bb4:	ldr	r3, [r0, #24]
   21bb8:	mov	r0, r6
   21bbc:	blx	r3
   21bc0:	ldr	r2, [sp, #4]
   21bc4:	ldr	r3, [r5]
   21bc8:	cmp	r2, r3
   21bcc:	bne	21c08 <main@@Base+0x1d7d0>
   21bd0:	add	sp, sp, #8
   21bd4:	pop	{r4, r5, r6, pc}
   21bd8:	ldr	r3, [sp]
   21bdc:	mov	r1, #16
   21be0:	ldr	r0, [pc, #80]	; 21c38 <main@@Base+0x1d800>
   21be4:	ldr	r2, [pc, #80]	; 21c3c <main@@Base+0x1d804>
   21be8:	add	r0, pc, r0
   21bec:	ldr	r3, [r3, #8]
   21bf0:	add	r2, pc, r2
   21bf4:	bl	3a38 <g_log@plt>
   21bf8:	ldr	r0, [sp]
   21bfc:	cmp	r0, #0
   21c00:	bne	21b94 <main@@Base+0x1d75c>
   21c04:	b	21b98 <main@@Base+0x1d760>
   21c08:	bl	3e4c <__stack_chk_fail@plt>
   21c0c:	ldr	r3, [sp]
   21c10:	mov	r4, r0
   21c14:	cmp	r3, #0
   21c18:	beq	21c24 <main@@Base+0x1d7ec>
   21c1c:	mov	r0, r3
   21c20:	bl	38e8 <g_error_free@plt>
   21c24:	mov	r0, r4
   21c28:	bl	42f0 <_Unwind_Resume@plt>
   21c2c:	andeq	sp, r1, r8, asr r0
   21c30:	andeq	r0, r0, r0, lsr r4
   21c34:	andeq	sp, r1, r0, ror #9
   21c38:			; <UNDEFINED> instruction: 0x000082b0
   21c3c:	andeq	r8, r0, ip, asr ip
   21c40:	push	{r4, r5, r6, r7, r8, lr}
   21c44:	subs	r7, r0, #0
   21c48:	mov	r5, r1
   21c4c:	mov	r6, r2
   21c50:	mov	r8, r3
   21c54:	beq	21cb8 <main@@Base+0x1d880>
   21c58:	cmp	r1, #0
   21c5c:	beq	21cdc <main@@Base+0x1d8a4>
   21c60:	cmp	r2, #0
   21c64:	beq	21d00 <main@@Base+0x1d8c8>
   21c68:	cmp	r3, #0
   21c6c:	beq	21d24 <main@@Base+0x1d8ec>
   21c70:	bl	21a78 <main@@Base+0x1d640>
   21c74:	mov	r1, #0
   21c78:	bl	3804 <g_object_new@plt>
   21c7c:	mov	r4, r0
   21c80:	mov	r0, r7
   21c84:	bl	381c <g_object_ref@plt>
   21c88:	str	r0, [r4, #12]
   21c8c:	mov	r1, r8
   21c90:	str	r5, [r4, #20]
   21c94:	mov	r0, r7
   21c98:	str	r6, [r4, #24]
   21c9c:	blx	r5
   21ca0:	subs	r5, r0, #0
   21ca4:	beq	21d48 <main@@Base+0x1d910>
   21ca8:	mov	r3, #1
   21cac:	mov	r0, r4
   21cb0:	str	r3, [r4, #16]
   21cb4:	pop	{r4, r5, r6, r7, r8, pc}
   21cb8:	ldr	r0, [pc, #188]	; 21d7c <main@@Base+0x1d944>
   21cbc:	ldr	r1, [pc, #188]	; 21d80 <main@@Base+0x1d948>
   21cc0:	ldr	r2, [pc, #188]	; 21d84 <main@@Base+0x1d94c>
   21cc4:	add	r0, pc, r0
   21cc8:	add	r1, pc, r1
   21ccc:	add	r2, pc, r2
   21cd0:	bl	3870 <g_return_if_fail_warning@plt>
   21cd4:	mov	r0, #0
   21cd8:	pop	{r4, r5, r6, r7, r8, pc}
   21cdc:	ldr	r0, [pc, #164]	; 21d88 <main@@Base+0x1d950>
   21ce0:	ldr	r1, [pc, #164]	; 21d8c <main@@Base+0x1d954>
   21ce4:	ldr	r2, [pc, #164]	; 21d90 <main@@Base+0x1d958>
   21ce8:	add	r0, pc, r0
   21cec:	add	r1, pc, r1
   21cf0:	add	r2, pc, r2
   21cf4:	bl	3870 <g_return_if_fail_warning@plt>
   21cf8:	mov	r0, #0
   21cfc:	pop	{r4, r5, r6, r7, r8, pc}
   21d00:	ldr	r0, [pc, #140]	; 21d94 <main@@Base+0x1d95c>
   21d04:	ldr	r1, [pc, #140]	; 21d98 <main@@Base+0x1d960>
   21d08:	ldr	r2, [pc, #140]	; 21d9c <main@@Base+0x1d964>
   21d0c:	add	r0, pc, r0
   21d10:	add	r1, pc, r1
   21d14:	add	r2, pc, r2
   21d18:	bl	3870 <g_return_if_fail_warning@plt>
   21d1c:	mov	r0, #0
   21d20:	pop	{r4, r5, r6, r7, r8, pc}
   21d24:	ldr	r0, [pc, #116]	; 21da0 <main@@Base+0x1d968>
   21d28:	ldr	r1, [pc, #116]	; 21da4 <main@@Base+0x1d96c>
   21d2c:	ldr	r2, [pc, #116]	; 21da8 <main@@Base+0x1d970>
   21d30:	add	r0, pc, r0
   21d34:	add	r1, pc, r1
   21d38:	add	r2, pc, r2
   21d3c:	bl	3870 <g_return_if_fail_warning@plt>
   21d40:	mov	r0, #0
   21d44:	pop	{r4, r5, r6, r7, r8, pc}
   21d48:	mov	r0, r4
   21d4c:	bl	4110 <g_object_unref@plt>
   21d50:	mov	r0, r5
   21d54:	pop	{r4, r5, r6, r7, r8, pc}
   21d58:	mov	r5, r0
   21d5c:	mov	r0, r4
   21d60:	bl	4110 <g_object_unref@plt>
   21d64:	mov	r0, r5
   21d68:	bl	42f0 <_Unwind_Resume@plt>
   21d6c:	cmp	r4, #0
   21d70:	mov	r5, r0
   21d74:	bne	21d5c <main@@Base+0x1d924>
   21d78:	b	21d64 <main@@Base+0x1d92c>
   21d7c:	ldrdeq	r8, [r0], -r4
   21d80:	andeq	r8, r0, r0, asr #22
   21d84:	muleq	r0, ip, fp
   21d88:			; <UNDEFINED> instruction: 0x000081b0
   21d8c:	andeq	r8, r0, ip, lsl fp
   21d90:	andeq	r8, r0, r8, lsl #23
   21d94:	andeq	r8, r0, ip, lsl #3
   21d98:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   21d9c:	andeq	r8, r0, r8, ror fp
   21da0:	andeq	r8, r0, r8, ror #2
   21da4:	ldrdeq	r8, [r0], -r4
   21da8:	andeq	r8, r0, r8, ror #22
   21dac:	push	{r4, r5, r6, lr}
   21db0:	subs	r4, r0, #0
   21db4:	ldr	r5, [pc, #272]	; 21ecc <main@@Base+0x1da94>
   21db8:	mov	r6, r1
   21dbc:	add	r5, pc, r5
   21dc0:	beq	21e5c <main@@Base+0x1da24>
   21dc4:	cmp	r1, #0
   21dc8:	beq	21e84 <main@@Base+0x1da4c>
   21dcc:	bl	4044 <g_usb_device_get_type@plt>
   21dd0:	ldr	r3, [r4]
   21dd4:	cmp	r3, #0
   21dd8:	beq	21de8 <main@@Base+0x1d9b0>
   21ddc:	ldr	r3, [r3]
   21de0:	cmp	r0, r3
   21de4:	beq	21e4c <main@@Base+0x1da14>
   21de8:	mov	r1, r0
   21dec:	mov	r0, r4
   21df0:	bl	3fcc <g_type_check_instance_is_a@plt>
   21df4:	cmp	r0, #0
   21df8:	bne	21e4c <main@@Base+0x1da14>
   21dfc:	bl	23a78 <main@@Base+0x1f640>
   21e00:	ldr	r3, [r4]
   21e04:	cmp	r3, #0
   21e08:	beq	21e18 <main@@Base+0x1d9e0>
   21e0c:	ldr	r3, [r3]
   21e10:	cmp	r0, r3
   21e14:	beq	21e2c <main@@Base+0x1d9f4>
   21e18:	mov	r1, r0
   21e1c:	mov	r0, r4
   21e20:	bl	3fcc <g_type_check_instance_is_a@plt>
   21e24:	cmp	r0, #0
   21e28:	beq	21eac <main@@Base+0x1da74>
   21e2c:	ldr	r1, [pc, #156]	; 21ed0 <main@@Base+0x1da98>
   21e30:	mov	r0, r4
   21e34:	ldr	r2, [pc, #152]	; 21ed4 <main@@Base+0x1da9c>
   21e38:	mov	r3, r6
   21e3c:	ldr	r1, [r5, r1]
   21e40:	ldr	r2, [r5, r2]
   21e44:	pop	{r4, r5, r6, lr}
   21e48:	b	21c40 <main@@Base+0x1d808>
   21e4c:	ldr	r1, [pc, #132]	; 21ed8 <main@@Base+0x1daa0>
   21e50:	mov	r0, r4
   21e54:	ldr	r2, [pc, #128]	; 21edc <main@@Base+0x1daa4>
   21e58:	b	21e38 <main@@Base+0x1da00>
   21e5c:	ldr	r1, [pc, #124]	; 21ee0 <main@@Base+0x1daa8>
   21e60:	ldr	r0, [pc, #124]	; 21ee4 <main@@Base+0x1daac>
   21e64:	ldr	r2, [pc, #124]	; 21ee8 <main@@Base+0x1dab0>
   21e68:	add	r1, pc, r1
   21e6c:	add	r0, pc, r0
   21e70:	add	r1, r1, #28
   21e74:	add	r2, pc, r2
   21e78:	bl	3870 <g_return_if_fail_warning@plt>
   21e7c:	mov	r0, #0
   21e80:	pop	{r4, r5, r6, pc}
   21e84:	ldr	r1, [pc, #96]	; 21eec <main@@Base+0x1dab4>
   21e88:	ldr	r0, [pc, #96]	; 21ef0 <main@@Base+0x1dab8>
   21e8c:	ldr	r2, [pc, #96]	; 21ef4 <main@@Base+0x1dabc>
   21e90:	add	r1, pc, r1
   21e94:	add	r0, pc, r0
   21e98:	add	r1, r1, #28
   21e9c:	add	r2, pc, r2
   21ea0:	bl	3870 <g_return_if_fail_warning@plt>
   21ea4:	mov	r0, #0
   21ea8:	pop	{r4, r5, r6, pc}
   21eac:	bl	3888 <g_io_error_quark@plt>
   21eb0:	ldr	r3, [pc, #64]	; 21ef8 <main@@Base+0x1dac0>
   21eb4:	mov	r2, #15
   21eb8:	add	r3, pc, r3
   21ebc:	mov	r1, r0
   21ec0:	mov	r0, r6
   21ec4:	bl	3ae0 <g_set_error_literal@plt>
   21ec8:	b	21e7c <main@@Base+0x1da44>
   21ecc:	andeq	ip, r1, r4, asr #27
   21ed0:	andeq	r0, r0, r0, ror #8
   21ed4:	andeq	r0, r0, r0, asr #8
   21ed8:	andeq	r0, r0, r8, lsr r4
   21edc:	andeq	r0, r0, r4, lsr #8
   21ee0:	andeq	r8, r0, r0, lsr #19
   21ee4:	andeq	r8, r0, ip, lsr #32
   21ee8:	strdeq	r8, [r0], -r4
   21eec:	andeq	r8, r0, r8, ror r9
   21ef0:	andeq	r8, r0, r4
   21ef4:	andeq	r8, r0, r4, lsl #20
   21ef8:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   21efc:	mov	r3, #25
   21f00:	mov	r2, #40	; 0x28
   21f04:	str	r3, [r0, #28]
   21f08:	mov	r3, #1
   21f0c:	str	r2, [r0, #24]
   21f10:	str	r3, [r0, #16]
   21f14:	bx	lr
   21f18:	push	{r4, lr}
   21f1c:	mov	r4, r0
   21f20:	bl	420c <g_type_class_peek_parent@plt>
   21f24:	ldr	r1, [pc, #56]	; 21f64 <main@@Base+0x1db2c>
   21f28:	add	r1, pc, r1
   21f2c:	ldr	r3, [r1, #4]
   21f30:	cmp	r3, #0
   21f34:	str	r0, [r1]
   21f38:	beq	21f48 <main@@Base+0x1db10>
   21f3c:	add	r1, r1, #4
   21f40:	mov	r0, r4
   21f44:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   21f48:	mov	r0, r4
   21f4c:	mov	r1, #80	; 0x50
   21f50:	bl	4374 <g_type_check_class_cast@plt>
   21f54:	ldr	r3, [pc, #12]	; 21f68 <main@@Base+0x1db30>
   21f58:	add	r3, pc, r3
   21f5c:	str	r3, [r0, #24]
   21f60:	pop	{r4, pc}
   21f64:	andeq	sp, r1, ip, ror #2
   21f68:	andeq	r0, r0, r4, lsl #14
   21f6c:	push	{r4, lr}
   21f70:	mov	r4, r0
   21f74:	bl	4158 <g_get_monotonic_time@plt>
   21f78:	ldr	r3, [r4, #16]
   21f7c:	cmp	r3, #0
   21f80:	ldr	r3, [r4, #20]
   21f84:	strd	r0, [r4, #48]	; 0x30
   21f88:	beq	21fac <main@@Base+0x1db74>
   21f8c:	ldr	r2, [r4, #24]
   21f90:	add	r3, r3, #1
   21f94:	str	r3, [r4, #20]
   21f98:	sub	r2, r2, #3
   21f9c:	cmp	r3, r2
   21fa0:	movhi	r3, #0
   21fa4:	strhi	r3, [r4, #16]
   21fa8:	pop	{r4, pc}
   21fac:	sub	r3, r3, #1
   21fb0:	str	r3, [r4, #20]
   21fb4:	cmp	r3, #0
   21fb8:	moveq	r3, #1
   21fbc:	streq	r3, [r4, #16]
   21fc0:	pop	{r4, pc}
   21fc4:	ldr	r3, [pc, #1440]	; 2256c <main@@Base+0x1e134>
   21fc8:	ldr	ip, [pc, #1440]	; 22570 <main@@Base+0x1e138>
   21fcc:	add	r3, pc, r3
   21fd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21fd4:	sub	sp, sp, #20
   21fd8:	ldr	ip, [r3, ip]
   21fdc:	mov	r5, r0
   21fe0:	mov	r0, #0
   21fe4:	mov	r8, r1
   21fe8:	mov	r7, r2
   21fec:	ldr	r9, [pc, #1408]	; 22574 <main@@Base+0x1e13c>
   21ff0:	ldr	r3, [ip]
   21ff4:	mov	r6, #0
   21ff8:	str	ip, [sp, #4]
   21ffc:	add	r9, pc, r9
   22000:	str	r3, [sp, #12]
   22004:	bl	3990 <g_string_new@plt>
   22008:	ldr	r3, [r5, #36]	; 0x24
   2200c:	cmp	r3, #0
   22010:	mov	r4, r0
   22014:	beq	22030 <main@@Base+0x1dbf8>
   22018:	mov	r0, r9
   2201c:	bl	3fe4 <g_print@plt>
   22020:	ldr	r3, [r5, #36]	; 0x24
   22024:	add	r6, r6, #1
   22028:	cmp	r3, r6
   2202c:	bhi	22018 <main@@Base+0x1dbe0>
   22030:	cmp	r8, #1
   22034:	movne	fp, #0
   22038:	beq	22080 <main@@Base+0x1dc48>
   2203c:	sub	r8, r8, #1
   22040:	mov	r0, #0
   22044:	cmp	r8, #11
   22048:	addls	pc, pc, r8, lsl #2
   2204c:	b	22524 <main@@Base+0x1e0ec>
   22050:	b	221c0 <main@@Base+0x1dd88>
   22054:	b	221d8 <main@@Base+0x1dda0>
   22058:	b	221f0 <main@@Base+0x1ddb8>
   2205c:	b	22208 <main@@Base+0x1ddd0>
   22060:	b	22220 <main@@Base+0x1dde8>
   22064:	b	22238 <main@@Base+0x1de00>
   22068:	b	22250 <main@@Base+0x1de18>
   2206c:	b	22268 <main@@Base+0x1de30>
   22070:	b	22280 <main@@Base+0x1de48>
   22074:	b	22298 <main@@Base+0x1de60>
   22078:	b	222b0 <main@@Base+0x1de78>
   2207c:	b	22090 <main@@Base+0x1dc58>
   22080:	ldr	r8, [r5, #12]
   22084:	mov	fp, #1
   22088:	mov	r7, #100	; 0x64
   2208c:	b	2203c <main@@Base+0x1dc04>
   22090:	ldr	r1, [pc, #1248]	; 22578 <main@@Base+0x1e140>
   22094:	mov	r2, #5
   22098:	add	r1, pc, r1
   2209c:	bl	3ed0 <dcgettext@plt>
   220a0:	mov	r1, r0
   220a4:	mov	r0, r4
   220a8:	bl	4308 <g_string_append@plt>
   220ac:	ldr	r6, [r4, #4]
   220b0:	ldr	r3, [r5, #28]
   220b4:	cmp	r6, r3
   220b8:	movcc	r3, r6
   220bc:	movcc	r8, #32
   220c0:	movcc	r9, #0
   220c4:	bcc	220f4 <main@@Base+0x1dcbc>
   220c8:	b	22124 <main@@Base+0x1dcec>
   220cc:	ldr	r1, [r4]
   220d0:	add	r6, r6, #1
   220d4:	str	r2, [r4, #4]
   220d8:	strb	r8, [r1, r3]
   220dc:	ldm	r4, {r2, r3}
   220e0:	strb	r9, [r2, r3]
   220e4:	ldr	r3, [r5, #28]
   220e8:	cmp	r3, r6
   220ec:	bls	22124 <main@@Base+0x1dcec>
   220f0:	ldr	r3, [r4, #4]
   220f4:	ldr	r1, [r4, #8]
   220f8:	add	r2, r3, #1
   220fc:	cmp	r2, r1
   22100:	bcc	220cc <main@@Base+0x1dc94>
   22104:	mov	r0, r4
   22108:	mvn	r1, #0
   2210c:	mov	r2, #32
   22110:	bl	3cfc <g_string_insert_c@plt>
   22114:	ldr	r3, [r5, #28]
   22118:	add	r6, r6, #1
   2211c:	cmp	r3, r6
   22120:	bhi	220f0 <main@@Base+0x1dcb8>
   22124:	ldr	r1, [pc, #1104]	; 2257c <main@@Base+0x1e144>
   22128:	mov	r0, r4
   2212c:	add	r1, pc, r1
   22130:	bl	4308 <g_string_append@plt>
   22134:	cmp	r7, #0
   22138:	beq	222c8 <main@@Base+0x1de90>
   2213c:	ldr	r3, [r5, #24]
   22140:	sub	r2, r3, #1
   22144:	mul	r2, r2, r7
   22148:	cmp	r2, #99	; 0x63
   2214c:	bls	2253c <main@@Base+0x1e104>
   22150:	mov	r6, #0
   22154:	movw	r8, #34079	; 0x851f
   22158:	mov	sl, r6
   2215c:	movt	r8, #20971	; 0x51eb
   22160:	mov	r9, #42	; 0x2a
   22164:	b	22198 <main@@Base+0x1dd60>
   22168:	ldr	r1, [r4]
   2216c:	str	r2, [r4, #4]
   22170:	strb	r9, [r1, r3]
   22174:	ldm	r4, {r2, r3}
   22178:	strb	sl, [r2, r3]
   2217c:	ldr	r3, [r5, #24]
   22180:	add	r6, r6, #1
   22184:	sub	r2, r3, #1
   22188:	mul	r2, r2, r7
   2218c:	umull	r0, r2, r8, r2
   22190:	cmp	r6, r2, lsr #5
   22194:	bcs	22470 <main@@Base+0x1e038>
   22198:	ldr	r3, [r4, #4]
   2219c:	ldr	r1, [r4, #8]
   221a0:	add	r2, r3, #1
   221a4:	cmp	r2, r1
   221a8:	bcc	22168 <main@@Base+0x1dd30>
   221ac:	mov	r0, r4
   221b0:	mvn	r1, #0
   221b4:	mov	r2, #42	; 0x2a
   221b8:	bl	3cfc <g_string_insert_c@plt>
   221bc:	b	2217c <main@@Base+0x1dd44>
   221c0:	ldr	r1, [pc, #952]	; 22580 <main@@Base+0x1e148>
   221c4:	mov	r2, #5
   221c8:	add	r1, pc, r1
   221cc:	bl	3ed0 <dcgettext@plt>
   221d0:	mov	r1, r0
   221d4:	b	220a4 <main@@Base+0x1dc6c>
   221d8:	ldr	r1, [pc, #932]	; 22584 <main@@Base+0x1e14c>
   221dc:	mov	r2, #5
   221e0:	add	r1, pc, r1
   221e4:	bl	3ed0 <dcgettext@plt>
   221e8:	mov	r1, r0
   221ec:	b	220a4 <main@@Base+0x1dc6c>
   221f0:	ldr	r1, [pc, #912]	; 22588 <main@@Base+0x1e150>
   221f4:	mov	r2, #5
   221f8:	add	r1, pc, r1
   221fc:	bl	3ed0 <dcgettext@plt>
   22200:	mov	r1, r0
   22204:	b	220a4 <main@@Base+0x1dc6c>
   22208:	ldr	r1, [pc, #892]	; 2258c <main@@Base+0x1e154>
   2220c:	mov	r2, #5
   22210:	add	r1, pc, r1
   22214:	bl	3ed0 <dcgettext@plt>
   22218:	mov	r1, r0
   2221c:	b	220a4 <main@@Base+0x1dc6c>
   22220:	ldr	r1, [pc, #872]	; 22590 <main@@Base+0x1e158>
   22224:	mov	r2, #5
   22228:	add	r1, pc, r1
   2222c:	bl	3ed0 <dcgettext@plt>
   22230:	mov	r1, r0
   22234:	b	220a4 <main@@Base+0x1dc6c>
   22238:	ldr	r1, [pc, #852]	; 22594 <main@@Base+0x1e15c>
   2223c:	mov	r2, #5
   22240:	add	r1, pc, r1
   22244:	bl	3ed0 <dcgettext@plt>
   22248:	mov	r1, r0
   2224c:	b	220a4 <main@@Base+0x1dc6c>
   22250:	ldr	r1, [pc, #832]	; 22598 <main@@Base+0x1e160>
   22254:	mov	r2, #5
   22258:	add	r1, pc, r1
   2225c:	bl	3ed0 <dcgettext@plt>
   22260:	mov	r1, r0
   22264:	b	220a4 <main@@Base+0x1dc6c>
   22268:	ldr	r1, [pc, #812]	; 2259c <main@@Base+0x1e164>
   2226c:	mov	r2, #5
   22270:	add	r1, pc, r1
   22274:	bl	3ed0 <dcgettext@plt>
   22278:	mov	r1, r0
   2227c:	b	220a4 <main@@Base+0x1dc6c>
   22280:	ldr	r1, [pc, #792]	; 225a0 <main@@Base+0x1e168>
   22284:	mov	r2, #5
   22288:	add	r1, pc, r1
   2228c:	bl	3ed0 <dcgettext@plt>
   22290:	mov	r1, r0
   22294:	b	220a4 <main@@Base+0x1dc6c>
   22298:	ldr	r1, [pc, #772]	; 225a4 <main@@Base+0x1e16c>
   2229c:	mov	r2, #5
   222a0:	add	r1, pc, r1
   222a4:	bl	3ed0 <dcgettext@plt>
   222a8:	mov	r1, r0
   222ac:	b	220a4 <main@@Base+0x1dc6c>
   222b0:	ldr	r1, [pc, #752]	; 225a8 <main@@Base+0x1e170>
   222b4:	mov	r2, #5
   222b8:	add	r1, pc, r1
   222bc:	bl	3ed0 <dcgettext@plt>
   222c0:	mov	r1, r0
   222c4:	b	220a4 <main@@Base+0x1dc6c>
   222c8:	ldr	r2, [pc, #732]	; 225ac <main@@Base+0x1e174>
   222cc:	ldr	r3, [r5, #20]
   222d0:	add	r2, pc, r2
   222d4:	cmp	r3, #0
   222d8:	ldr	r0, [r2]
   222dc:	str	r0, [sp, #8]
   222e0:	beq	2234c <main@@Base+0x1df14>
   222e4:	mov	r6, #32
   222e8:	mov	r8, r7
   222ec:	b	22314 <main@@Base+0x1dedc>
   222f0:	ldr	r1, [r4]
   222f4:	add	r7, r7, #1
   222f8:	str	r2, [r4, #4]
   222fc:	strb	r6, [r1, r3]
   22300:	ldm	r4, {r2, r3}
   22304:	strb	r8, [r2, r3]
   22308:	ldr	r3, [r5, #20]
   2230c:	cmp	r3, r7
   22310:	bls	22348 <main@@Base+0x1df10>
   22314:	ldr	r3, [r4, #4]
   22318:	ldr	r1, [r4, #8]
   2231c:	add	r2, r3, #1
   22320:	cmp	r2, r1
   22324:	bcc	222f0 <main@@Base+0x1deb8>
   22328:	mov	r0, r4
   2232c:	mvn	r1, #0
   22330:	mov	r2, #32
   22334:	bl	3cfc <g_string_insert_c@plt>
   22338:	ldr	r3, [r5, #20]
   2233c:	add	r7, r7, #1
   22340:	cmp	r3, r7
   22344:	bhi	22314 <main@@Base+0x1dedc>
   22348:	ubfx	r3, r7, #2, #2
   2234c:	ldr	r1, [r4, #4]
   22350:	add	r2, sp, #16
   22354:	ldr	ip, [r4, #8]
   22358:	add	r3, r2, r3
   2235c:	add	r0, r1, #1
   22360:	cmp	r0, ip
   22364:	ldrb	r2, [r3, #-8]
   22368:	bcs	22514 <main@@Base+0x1e0dc>
   2236c:	ldr	r3, [r4]
   22370:	mov	ip, #0
   22374:	str	r0, [r4, #4]
   22378:	strb	r2, [r3, r1]
   2237c:	ldm	r4, {r2, r3}
   22380:	strb	ip, [r2, r3]
   22384:	ldr	r3, [r5, #24]
   22388:	add	r7, r7, #1
   2238c:	sub	r3, r3, #1
   22390:	cmp	r7, r3
   22394:	bcs	223f4 <main@@Base+0x1dfbc>
   22398:	mov	r6, #32
   2239c:	mov	r8, #0
   223a0:	b	223cc <main@@Base+0x1df94>
   223a4:	ldr	r1, [r4]
   223a8:	str	r2, [r4, #4]
   223ac:	strb	r6, [r1, r3]
   223b0:	ldm	r4, {r2, r3}
   223b4:	strb	r8, [r2, r3]
   223b8:	ldr	r3, [r5, #24]
   223bc:	add	r7, r7, #1
   223c0:	sub	r3, r3, #1
   223c4:	cmp	r3, r7
   223c8:	bls	223f4 <main@@Base+0x1dfbc>
   223cc:	ldr	r3, [r4, #4]
   223d0:	ldr	r1, [r4, #8]
   223d4:	add	r2, r3, #1
   223d8:	cmp	r2, r1
   223dc:	bcc	223a4 <main@@Base+0x1df6c>
   223e0:	mov	r0, r4
   223e4:	mvn	r1, #0
   223e8:	mov	r2, #32
   223ec:	bl	3cfc <g_string_insert_c@plt>
   223f0:	b	223b8 <main@@Base+0x1df80>
   223f4:	ldr	r3, [r4, #4]
   223f8:	ldr	r1, [r4, #8]
   223fc:	add	r2, r3, #1
   22400:	cmp	r2, r1
   22404:	bcs	224d4 <main@@Base+0x1e09c>
   22408:	ldr	r0, [r4]
   2240c:	mov	ip, #93	; 0x5d
   22410:	str	r2, [r4, #4]
   22414:	mov	r1, #0
   22418:	strb	ip, [r0, r3]
   2241c:	ldm	r4, {r2, r3}
   22420:	strb	r1, [r2, r3]
   22424:	ldr	r0, [pc, #388]	; 225b0 <main@@Base+0x1e178>
   22428:	ldr	r1, [r4]
   2242c:	add	r0, pc, r0
   22430:	bl	3fe4 <g_print@plt>
   22434:	ldr	r3, [r4, #4]
   22438:	cmp	fp, #0
   2243c:	sub	r3, r3, #2
   22440:	str	r3, [r5, #36]	; 0x24
   22444:	bne	224e8 <main@@Base+0x1e0b0>
   22448:	ldr	r1, [sp, #4]
   2244c:	ldr	r2, [sp, #12]
   22450:	ldr	r3, [r1]
   22454:	cmp	r2, r3
   22458:	bne	22510 <main@@Base+0x1e0d8>
   2245c:	mov	r0, r4
   22460:	mov	r1, #1
   22464:	add	sp, sp, #20
   22468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2246c:	b	40bc <g_string_free@plt>
   22470:	add	r6, r6, #1
   22474:	cmp	r6, r3
   22478:	bcs	223f4 <main@@Base+0x1dfbc>
   2247c:	mov	r7, #32
   22480:	mov	r8, #0
   22484:	b	224ac <main@@Base+0x1e074>
   22488:	ldr	r1, [r4]
   2248c:	str	r2, [r4, #4]
   22490:	strb	r7, [r1, r3]
   22494:	ldm	r4, {r2, r3}
   22498:	strb	r8, [r2, r3]
   2249c:	ldr	r3, [r5, #24]
   224a0:	add	r6, r6, #1
   224a4:	cmp	r3, r6
   224a8:	bls	223f4 <main@@Base+0x1dfbc>
   224ac:	ldr	r3, [r4, #4]
   224b0:	ldr	r1, [r4, #8]
   224b4:	add	r2, r3, #1
   224b8:	cmp	r2, r1
   224bc:	bcc	22488 <main@@Base+0x1e050>
   224c0:	mov	r0, r4
   224c4:	mvn	r1, #0
   224c8:	mov	r2, #32
   224cc:	bl	3cfc <g_string_insert_c@plt>
   224d0:	b	2249c <main@@Base+0x1e064>
   224d4:	mov	r0, r4
   224d8:	mvn	r1, #0
   224dc:	mov	r2, #93	; 0x5d
   224e0:	bl	3cfc <g_string_insert_c@plt>
   224e4:	b	22424 <main@@Base+0x1dfec>
   224e8:	ldr	r0, [pc, #196]	; 225b4 <main@@Base+0x1e17c>
   224ec:	add	r0, pc, r0
   224f0:	bl	3fe4 <g_print@plt>
   224f4:	ldr	r0, [sp, #4]
   224f8:	mov	r1, #0
   224fc:	ldr	r2, [sp, #12]
   22500:	str	r1, [r5, #36]	; 0x24
   22504:	ldr	r3, [r0]
   22508:	cmp	r2, r3
   2250c:	beq	2245c <main@@Base+0x1e024>
   22510:	bl	3e4c <__stack_chk_fail@plt>
   22514:	mov	r0, r4
   22518:	mvn	r1, #0
   2251c:	bl	3cfc <g_string_insert_c@plt>
   22520:	b	22384 <main@@Base+0x1df4c>
   22524:	ldr	r1, [pc, #140]	; 225b8 <main@@Base+0x1e180>
   22528:	mov	r2, #5
   2252c:	add	r1, pc, r1
   22530:	bl	3ed0 <dcgettext@plt>
   22534:	mov	r1, r0
   22538:	b	220a4 <main@@Base+0x1dc6c>
   2253c:	mov	r6, #1
   22540:	b	22474 <main@@Base+0x1e03c>
   22544:	mov	r5, r0
   22548:	mov	r0, r4
   2254c:	mov	r1, #1
   22550:	bl	40bc <g_string_free@plt>
   22554:	mov	r0, r5
   22558:	bl	42f0 <_Unwind_Resume@plt>
   2255c:	cmp	r4, #0
   22560:	mov	r5, r0
   22564:	bne	22548 <main@@Base+0x1e110>
   22568:	b	22554 <main@@Base+0x1e11c>
   2256c:			; <UNDEFINED> instruction: 0x0001cbb4
   22570:	andeq	r0, r0, r0, lsr r4
   22574:	andeq	r8, r0, r0, asr #18
   22578:	andeq	r8, r0, r0, asr r9
   2257c:	ldrdeq	r8, [r0], -r0
   22580:	andeq	r8, r0, r8, ror r7
   22584:	andeq	r8, r0, ip, ror r7
   22588:	andeq	r8, r0, r0, asr r7
   2258c:	andeq	r8, r0, r8, asr r7
   22590:	andeq	r8, r0, r4, ror #14
   22594:	andeq	r8, r0, r4, ror #14
   22598:	andeq	r8, r0, ip, asr r7
   2259c:	andeq	r8, r0, r4, asr r7
   225a0:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   225a4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   225a8:	andeq	r8, r0, ip, lsl r7
   225ac:	andeq	r8, r0, r4, lsl #12
   225b0:	andeq	r4, r0, ip, asr #32
   225b4:	andeq	r5, r0, r4, lsr #14
   225b8:	andeq	r8, r0, r8, asr #9
   225bc:	ldr	r0, [pc, #140]	; 22650 <main@@Base+0x1e218>
   225c0:	push	{r4, r5, lr}
   225c4:	add	r0, pc, r0
   225c8:	dmb	sy
   225cc:	sub	sp, sp, #20
   225d0:	ldr	r4, [r0, #8]
   225d4:	dmb	sy
   225d8:	cmp	r4, #0
   225dc:	beq	225f4 <main@@Base+0x1e1bc>
   225e0:	ldr	r3, [pc, #108]	; 22654 <main@@Base+0x1e21c>
   225e4:	add	r3, pc, r3
   225e8:	ldr	r0, [r3, #8]
   225ec:	add	sp, sp, #20
   225f0:	pop	{r4, r5, pc}
   225f4:	add	r5, r0, #8
   225f8:	mov	r0, r5
   225fc:	bl	3d50 <g_once_init_enter@plt>
   22600:	cmp	r0, #0
   22604:	beq	225e0 <main@@Base+0x1e1a8>
   22608:	ldr	r0, [pc, #72]	; 22658 <main@@Base+0x1e220>
   2260c:	add	r0, pc, r0
   22610:	bl	3df8 <g_intern_static_string@plt>
   22614:	ldr	r3, [pc, #64]	; 2265c <main@@Base+0x1e224>
   22618:	mov	r2, #56	; 0x38
   2261c:	str	r4, [sp, #8]
   22620:	add	r3, pc, r3
   22624:	stm	sp, {r2, r3}
   22628:	ldr	r3, [pc, #48]	; 22660 <main@@Base+0x1e228>
   2262c:	mov	r2, #68	; 0x44
   22630:	add	r3, pc, r3
   22634:	mov	r1, r0
   22638:	mov	r0, #80	; 0x50
   2263c:	bl	3894 <g_type_register_static_simple@plt>
   22640:	mov	r1, r0
   22644:	mov	r0, r5
   22648:	bl	4140 <g_once_init_leave@plt>
   2264c:	b	225e0 <main@@Base+0x1e1a8>
   22650:	ldrdeq	ip, [r1], -r0
   22654:			; <UNDEFINED> instruction: 0x0001cab0
   22658:	strdeq	r8, [r0], -r4
   2265c:			; <UNDEFINED> instruction: 0xfffff8d4
   22660:			; <UNDEFINED> instruction: 0xfffff8e0
   22664:	push	{r4, lr}
   22668:	mov	r4, r0
   2266c:	bl	225bc <main@@Base+0x1e184>
   22670:	mov	r1, r0
   22674:	mov	r0, r4
   22678:	bl	39d8 <g_type_check_instance_cast@plt>
   2267c:	ldr	r0, [r0, #40]	; 0x28
   22680:	cmp	r0, #0
   22684:	beq	2268c <main@@Base+0x1e254>
   22688:	bl	43f8 <g_source_remove@plt>
   2268c:	ldr	r3, [pc, #28]	; 226b0 <main@@Base+0x1e278>
   22690:	mov	r1, #80	; 0x50
   22694:	add	r3, pc, r3
   22698:	ldr	r0, [r3]
   2269c:	bl	4374 <g_type_check_class_cast@plt>
   226a0:	ldr	r3, [r0, #24]
   226a4:	mov	r0, r4
   226a8:	blx	r3
   226ac:	pop	{r4, pc}
   226b0:	andeq	ip, r1, r0, lsl #20
   226b4:	push	{r4, lr}
   226b8:	mov	r4, r0
   226bc:	bl	225bc <main@@Base+0x1e184>
   226c0:	mov	r1, r0
   226c4:	mov	r0, r4
   226c8:	bl	39d8 <g_type_check_instance_cast@plt>
   226cc:	ldr	r3, [r0, #12]
   226d0:	mov	r4, r0
   226d4:	cmp	r3, #1
   226d8:	beq	226f0 <main@@Base+0x1e2b8>
   226dc:	bl	21f6c <main@@Base+0x1db34>
   226e0:	mov	r0, r4
   226e4:	ldr	r1, [r4, #12]
   226e8:	ldr	r2, [r4, #32]
   226ec:	bl	21fc4 <main@@Base+0x1db8c>
   226f0:	mov	r0, #1
   226f4:	pop	{r4, pc}
   226f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   226fc:	mov	sl, r0
   22700:	mov	r8, r1
   22704:	mov	r9, r2
   22708:	bl	225bc <main@@Base+0x1e184>
   2270c:	cmp	sl, #0
   22710:	beq	22740 <main@@Base+0x1e308>
   22714:	ldr	r3, [sl]
   22718:	cmp	r3, #0
   2271c:	beq	2272c <main@@Base+0x1e2f4>
   22720:	ldr	r3, [r3]
   22724:	cmp	r0, r3
   22728:	beq	22764 <main@@Base+0x1e32c>
   2272c:	mov	r1, r0
   22730:	mov	r0, sl
   22734:	bl	3fcc <g_type_check_instance_is_a@plt>
   22738:	cmp	r0, #0
   2273c:	bne	22764 <main@@Base+0x1e32c>
   22740:	ldr	r1, [pc, #312]	; 22880 <main@@Base+0x1e448>
   22744:	ldr	r0, [pc, #312]	; 22884 <main@@Base+0x1e44c>
   22748:	ldr	r2, [pc, #312]	; 22888 <main@@Base+0x1e450>
   2274c:	add	r1, pc, r1
   22750:	add	r0, pc, r0
   22754:	add	r1, r1, #4
   22758:	add	r2, pc, r2
   2275c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   22760:	b	3870 <g_return_if_fail_warning@plt>
   22764:	cmp	r8, #0
   22768:	bne	227dc <main@@Base+0x1e3a4>
   2276c:	ldr	r8, [sl, #12]
   22770:	mov	r3, r8
   22774:	subs	r2, r8, #1
   22778:	movne	r2, #1
   2277c:	cmp	r9, #0
   22780:	movne	r2, #0
   22784:	cmp	r2, #0
   22788:	beq	22794 <main@@Base+0x1e35c>
   2278c:	cmp	r3, #0
   22790:	bne	22838 <main@@Base+0x1e400>
   22794:	cmp	r8, r3
   22798:	beq	227e4 <main@@Base+0x1e3ac>
   2279c:	cmp	r9, #0
   227a0:	ldr	r0, [sl, #40]	; 0x28
   227a4:	beq	227fc <main@@Base+0x1e3c4>
   227a8:	cmp	r0, #0
   227ac:	bne	22828 <main@@Base+0x1e3f0>
   227b0:	mov	r2, #0
   227b4:	mov	r3, #1
   227b8:	str	r2, [sl, #20]
   227bc:	str	r3, [sl, #16]
   227c0:	mov	r0, sl
   227c4:	mov	r1, r8
   227c8:	mov	r2, r9
   227cc:	bl	21fc4 <main@@Base+0x1db8c>
   227d0:	str	r8, [sl, #12]
   227d4:	str	r9, [sl, #32]
   227d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   227dc:	ldr	r3, [sl, #12]
   227e0:	b	22774 <main@@Base+0x1e33c>
   227e4:	ldr	r3, [sl, #32]
   227e8:	cmp	r3, r9
   227ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   227f0:	cmp	r9, #0
   227f4:	ldr	r0, [sl, #40]	; 0x28
   227f8:	bne	227a8 <main@@Base+0x1e370>
   227fc:	cmp	r0, #0
   22800:	bne	22820 <main@@Base+0x1e3e8>
   22804:	ldr	r1, [pc, #128]	; 2288c <main@@Base+0x1e454>
   22808:	mov	r0, #40	; 0x28
   2280c:	mov	r2, sl
   22810:	add	r1, pc, r1
   22814:	bl	38c4 <g_timeout_add@plt>
   22818:	str	r0, [sl, #40]	; 0x28
   2281c:	b	227c0 <main@@Base+0x1e388>
   22820:	bl	43f8 <g_source_remove@plt>
   22824:	b	22804 <main@@Base+0x1e3cc>
   22828:	bl	43f8 <g_source_remove@plt>
   2282c:	mov	r3, #0
   22830:	str	r3, [sl, #40]	; 0x28
   22834:	b	227b0 <main@@Base+0x1e378>
   22838:	bl	4158 <g_get_monotonic_time@plt>
   2283c:	ldrd	r4, [sl, #48]	; 0x30
   22840:	movw	r6, #40999	; 0xa027
   22844:	mov	r7, #0
   22848:	subs	r0, r0, r4
   2284c:	sbc	r1, r1, r5
   22850:	cmp	r6, r0
   22854:	sbcs	r3, r7, r1
   22858:	blt	22864 <main@@Base+0x1e42c>
   2285c:	ldr	r3, [sl, #12]
   22860:	b	22794 <main@@Base+0x1e35c>
   22864:	mov	r0, sl
   22868:	bl	21f6c <main@@Base+0x1db34>
   2286c:	mov	r0, sl
   22870:	mov	r1, r8
   22874:	mov	r2, #0
   22878:	bl	21fc4 <main@@Base+0x1db8c>
   2287c:	b	2285c <main@@Base+0x1e424>
   22880:	andeq	r8, r0, r8, lsl #3
   22884:	andeq	r7, r0, r8, asr #14
   22888:			; <UNDEFINED> instruction: 0x000082b8
   2288c:			; <UNDEFINED> instruction: 0xfffffe9c
   22890:	push	{r3, r4, r5, lr}
   22894:	mov	r4, r0
   22898:	mov	r5, r1
   2289c:	bl	225bc <main@@Base+0x1e184>
   228a0:	cmp	r4, #0
   228a4:	beq	228d4 <main@@Base+0x1e49c>
   228a8:	ldr	r3, [r4]
   228ac:	cmp	r3, #0
   228b0:	beq	228c0 <main@@Base+0x1e488>
   228b4:	ldr	r3, [r3]
   228b8:	cmp	r0, r3
   228bc:	beq	228f8 <main@@Base+0x1e4c0>
   228c0:	mov	r1, r0
   228c4:	mov	r0, r4
   228c8:	bl	3fcc <g_type_check_instance_is_a@plt>
   228cc:	cmp	r0, #0
   228d0:	bne	228f8 <main@@Base+0x1e4c0>
   228d4:	ldr	r1, [pc, #76]	; 22928 <main@@Base+0x1e4f0>
   228d8:	ldr	r0, [pc, #76]	; 2292c <main@@Base+0x1e4f4>
   228dc:	ldr	r2, [pc, #76]	; 22930 <main@@Base+0x1e4f8>
   228e0:	add	r1, pc, r1
   228e4:	add	r0, pc, r0
   228e8:	add	r1, r1, #28
   228ec:	add	r2, pc, r2
   228f0:	pop	{r3, r4, r5, lr}
   228f4:	b	3870 <g_return_if_fail_warning@plt>
   228f8:	cmp	r5, #3
   228fc:	strhi	r5, [r4, #28]
   22900:	pophi	{r3, r4, r5, pc}
   22904:	ldr	r1, [pc, #40]	; 22934 <main@@Base+0x1e4fc>
   22908:	ldr	r0, [pc, #40]	; 22938 <main@@Base+0x1e500>
   2290c:	ldr	r2, [pc, #40]	; 2293c <main@@Base+0x1e504>
   22910:	add	r1, pc, r1
   22914:	add	r0, pc, r0
   22918:	add	r1, r1, #28
   2291c:	add	r2, pc, r2
   22920:	pop	{r3, r4, r5, lr}
   22924:	b	3870 <g_return_if_fail_warning@plt>
   22928:	strdeq	r7, [r0], -r4
   2292c:			; <UNDEFINED> instruction: 0x000075b4
   22930:	andeq	r8, r0, r4, lsr #2
   22934:	andeq	r7, r0, r4, asr #31
   22938:	andeq	r7, r0, r4, lsl #11
   2293c:	andeq	r8, r0, r0, lsl r1
   22940:	push	{r3, r4, r5, lr}
   22944:	mov	r4, r0
   22948:	mov	r5, r1
   2294c:	bl	225bc <main@@Base+0x1e184>
   22950:	cmp	r4, #0
   22954:	beq	22984 <main@@Base+0x1e54c>
   22958:	ldr	r3, [r4]
   2295c:	cmp	r3, #0
   22960:	beq	22970 <main@@Base+0x1e538>
   22964:	ldr	r3, [r3]
   22968:	cmp	r0, r3
   2296c:	beq	229a8 <main@@Base+0x1e570>
   22970:	mov	r1, r0
   22974:	mov	r0, r4
   22978:	bl	3fcc <g_type_check_instance_is_a@plt>
   2297c:	cmp	r0, #0
   22980:	bne	229a8 <main@@Base+0x1e570>
   22984:	ldr	r1, [pc, #76]	; 229d8 <main@@Base+0x1e5a0>
   22988:	ldr	r0, [pc, #76]	; 229dc <main@@Base+0x1e5a4>
   2298c:	ldr	r2, [pc, #76]	; 229e0 <main@@Base+0x1e5a8>
   22990:	add	r1, pc, r1
   22994:	add	r0, pc, r0
   22998:	add	r1, r1, #64	; 0x40
   2299c:	add	r2, pc, r2
   229a0:	pop	{r3, r4, r5, lr}
   229a4:	b	3870 <g_return_if_fail_warning@plt>
   229a8:	cmp	r5, #3
   229ac:	strhi	r5, [r4, #24]
   229b0:	pophi	{r3, r4, r5, pc}
   229b4:	ldr	r1, [pc, #40]	; 229e4 <main@@Base+0x1e5ac>
   229b8:	ldr	r0, [pc, #40]	; 229e8 <main@@Base+0x1e5b0>
   229bc:	ldr	r2, [pc, #40]	; 229ec <main@@Base+0x1e5b4>
   229c0:	add	r1, pc, r1
   229c4:	add	r0, pc, r0
   229c8:	add	r1, r1, #64	; 0x40
   229cc:	add	r2, pc, r2
   229d0:	pop	{r3, r4, r5, lr}
   229d4:	b	3870 <g_return_if_fail_warning@plt>
   229d8:	andeq	r7, r0, r4, asr #30
   229dc:	andeq	r7, r0, r4, lsl #10
   229e0:	andeq	r8, r0, r4, ror r0
   229e4:	andeq	r7, r0, r4, lsl pc
   229e8:	ldrdeq	r7, [r0], -r4
   229ec:	andeq	r8, r0, r0, rrx
   229f0:	push	{r4, lr}
   229f4:	bl	225bc <main@@Base+0x1e184>
   229f8:	mov	r1, #0
   229fc:	bl	3804 <g_object_new@plt>
   22a00:	mov	r4, r0
   22a04:	bl	225bc <main@@Base+0x1e184>
   22a08:	mov	r1, r0
   22a0c:	mov	r0, r4
   22a10:	pop	{r4, lr}
   22a14:	b	39d8 <g_type_check_instance_cast@plt>
   22a18:	push	{r3, r4, r5, lr}
   22a1c:	mov	r5, r0
   22a20:	ldr	r4, [pc, #56]	; 22a60 <main@@Base+0x1e628>
   22a24:	ldr	r3, [pc, #56]	; 22a64 <main@@Base+0x1e62c>
   22a28:	add	r4, pc, r4
   22a2c:	ldr	r0, [r4, r3]
   22a30:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   22a34:	ldr	r2, [pc, #44]	; 22a68 <main@@Base+0x1e630>
   22a38:	ldr	r1, [pc, #44]	; 22a6c <main@@Base+0x1e634>
   22a3c:	ldr	r3, [pc, #44]	; 22a70 <main@@Base+0x1e638>
   22a40:	str	r0, [r5, #12]
   22a44:	ldr	r2, [r4, r2]
   22a48:	ldr	r0, [r4, r1]
   22a4c:	ldr	r1, [r4, r3]
   22a50:	mov	r3, r2
   22a54:	bl	3b58 <g_hash_table_new_full@plt>
   22a58:	str	r0, [r5, #16]
   22a5c:	pop	{r3, r4, r5, pc}
   22a60:	andeq	ip, r1, r8, asr r1
   22a64:	andeq	r0, r0, r4, asr r4
   22a68:	andeq	r0, r0, ip, asr #8
   22a6c:	andeq	r0, r0, r8, asr #8
   22a70:	andeq	r0, r0, r4, lsr r4
   22a74:	push	{r4, lr}
   22a78:	mov	r4, r0
   22a7c:	bl	420c <g_type_class_peek_parent@plt>
   22a80:	ldr	r1, [pc, #56]	; 22ac0 <main@@Base+0x1e688>
   22a84:	add	r1, pc, r1
   22a88:	ldr	r3, [r1, #4]
   22a8c:	cmp	r3, #0
   22a90:	str	r0, [r1]
   22a94:	beq	22aa4 <main@@Base+0x1e66c>
   22a98:	add	r1, r1, #4
   22a9c:	mov	r0, r4
   22aa0:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   22aa4:	mov	r0, r4
   22aa8:	mov	r1, #80	; 0x50
   22aac:	bl	4374 <g_type_check_class_cast@plt>
   22ab0:	ldr	r3, [pc, #12]	; 22ac4 <main@@Base+0x1e68c>
   22ab4:	add	r3, pc, r3
   22ab8:	str	r3, [r0, #24]
   22abc:	pop	{r4, pc}
   22ac0:	andeq	ip, r1, ip, lsl r6
   22ac4:	andeq	r0, r0, r0, lsl r6
   22ac8:	ldr	r0, [r0]
   22acc:	ldr	r1, [r1]
   22ad0:	b	441c <g_strcmp0@plt>
   22ad4:	ldr	r3, [pc, #1284]	; 22fe0 <main@@Base+0x1eba8>
   22ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22adc:	mov	sl, r0
   22ae0:	ldr	r0, [pc, #1276]	; 22fe4 <main@@Base+0x1ebac>
   22ae4:	add	r3, pc, r3
   22ae8:	sub	sp, sp, #68	; 0x44
   22aec:	mov	r4, r1
   22af0:	mov	r9, r2
   22af4:	ldr	r0, [r3, r0]
   22af8:	bl	3c0c <g_ptr_array_new_with_free_func@plt>
   22afc:	ldr	r1, [pc, #1252]	; 22fe8 <main@@Base+0x1ebb0>
   22b00:	mov	r2, #0
   22b04:	str	r0, [sp, #20]
   22b08:	mov	r0, r4
   22b0c:	add	r1, pc, r1
   22b10:	bl	3a80 <g_build_filename@plt>
   22b14:	mov	r1, #16
   22b18:	str	r0, [sp, #32]
   22b1c:	bl	3f00 <g_file_test@plt>
   22b20:	cmp	r0, #0
   22b24:	bne	22b68 <main@@Base+0x1e730>
   22b28:	ldr	r0, [pc, #1212]	; 22fec <main@@Base+0x1ebb4>
   22b2c:	mov	r1, #128	; 0x80
   22b30:	ldr	r2, [pc, #1208]	; 22ff0 <main@@Base+0x1ebb8>
   22b34:	add	r0, pc, r0
   22b38:	ldr	r3, [sp, #32]
   22b3c:	add	r2, pc, r2
   22b40:	bl	3a38 <g_log@plt>
   22b44:	mov	r4, #1
   22b48:	ldr	r3, [sp, #20]
   22b4c:	cmp	r3, #0
   22b50:	bne	22bd4 <main@@Base+0x1e79c>
   22b54:	ldr	r0, [sp, #32]
   22b58:	bl	3eac <g_free@plt>
   22b5c:	mov	r0, r4
   22b60:	add	sp, sp, #68	; 0x44
   22b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b68:	ldr	r0, [sp, #32]
   22b6c:	mov	r1, #0
   22b70:	mov	r2, r9
   22b74:	bl	3f60 <g_dir_open@plt>
   22b78:	cmp	r0, #0
   22b7c:	str	r0, [sp, #24]
   22b80:	beq	22eac <main@@Base+0x1ea74>
   22b84:	ldr	r5, [pc, #1128]	; 22ff4 <main@@Base+0x1ebbc>
   22b88:	ldr	r6, [pc, #1128]	; 22ff8 <main@@Base+0x1ebc0>
   22b8c:	ldr	r7, [pc, #1128]	; 22ffc <main@@Base+0x1ebc4>
   22b90:	add	r5, pc, r5
   22b94:	add	r6, pc, r6
   22b98:	add	r7, pc, r7
   22b9c:	ldr	r0, [sp, #24]
   22ba0:	bl	405c <g_dir_read_name@plt>
   22ba4:	subs	r4, r0, #0
   22ba8:	beq	22c1c <main@@Base+0x1e7e4>
   22bac:	mov	r1, r5
   22bb0:	bl	4278 <g_str_has_suffix@plt>
   22bb4:	cmp	r0, #0
   22bb8:	bne	22bfc <main@@Base+0x1e7c4>
   22bbc:	mov	r3, r4
   22bc0:	mov	r0, r6
   22bc4:	mov	r1, #128	; 0x80
   22bc8:	mov	r2, r7
   22bcc:	bl	3a38 <g_log@plt>
   22bd0:	b	22b9c <main@@Base+0x1e764>
   22bd4:	mov	ip, #0
   22bd8:	str	ip, [sp, #24]
   22bdc:	ldr	r0, [sp, #20]
   22be0:	bl	4224 <g_ptr_array_unref@plt>
   22be4:	ldr	r2, [sp, #24]
   22be8:	cmp	r2, #0
   22bec:	beq	22b54 <main@@Base+0x1e71c>
   22bf0:	mov	r0, r2
   22bf4:	bl	3ca8 <g_dir_close@plt>
   22bf8:	b	22b54 <main@@Base+0x1e71c>
   22bfc:	mov	r1, r4
   22c00:	ldr	r0, [sp, #32]
   22c04:	mov	r2, #0
   22c08:	bl	3a80 <g_build_filename@plt>
   22c0c:	mov	r1, r0
   22c10:	ldr	r0, [sp, #20]
   22c14:	bl	426c <g_ptr_array_add@plt>
   22c18:	b	22b9c <main@@Base+0x1e764>
   22c1c:	ldr	r1, [pc, #988]	; 23000 <main@@Base+0x1ebc8>
   22c20:	ldr	r0, [sp, #20]
   22c24:	add	r1, pc, r1
   22c28:	bl	41f4 <g_ptr_array_sort@plt>
   22c2c:	ldr	ip, [sp, #20]
   22c30:	ldr	r3, [ip, #4]
   22c34:	cmp	r3, #0
   22c38:	beq	22eb4 <main@@Base+0x1ea7c>
   22c3c:	ldr	r2, [pc, #960]	; 23004 <main@@Base+0x1ebcc>
   22c40:	mov	r3, #0
   22c44:	ldr	ip, [pc, #956]	; 23008 <main@@Base+0x1ebd0>
   22c48:	add	r2, pc, r2
   22c4c:	str	r3, [sp, #16]
   22c50:	add	ip, pc, ip
   22c54:	str	r2, [sp, #44]	; 0x2c
   22c58:	str	ip, [sp, #48]	; 0x30
   22c5c:	ldr	fp, [pc, #936]	; 2300c <main@@Base+0x1ebd4>
   22c60:	ldr	r2, [pc, #936]	; 23010 <main@@Base+0x1ebd8>
   22c64:	ldr	r3, [pc, #936]	; 23014 <main@@Base+0x1ebdc>
   22c68:	add	fp, pc, fp
   22c6c:	ldr	ip, [pc, #932]	; 23018 <main@@Base+0x1ebe0>
   22c70:	add	r2, pc, r2
   22c74:	add	r3, pc, r3
   22c78:	str	r2, [sp, #56]	; 0x38
   22c7c:	add	ip, pc, ip
   22c80:	str	r3, [sp, #60]	; 0x3c
   22c84:	str	ip, [sp, #52]	; 0x34
   22c88:	b	22d2c <main@@Base+0x1e8f4>
   22c8c:	cmp	r8, #0
   22c90:	beq	22c9c <main@@Base+0x1e864>
   22c94:	mov	r0, r8
   22c98:	bl	41dc <g_key_file_unref@plt>
   22c9c:	cmp	r4, #0
   22ca0:	beq	22e90 <main@@Base+0x1ea58>
   22ca4:	ldr	r0, [sp, #12]
   22ca8:	bl	4218 <g_file_new_for_path@plt>
   22cac:	mov	r1, #0
   22cb0:	mov	r3, r9
   22cb4:	mov	r2, r1
   22cb8:	mov	r4, r0
   22cbc:	bl	3d98 <g_file_monitor@plt>
   22cc0:	subs	r5, r0, #0
   22cc4:	beq	22cf8 <main@@Base+0x1e8c0>
   22cc8:	mov	r2, #0
   22ccc:	str	r2, [sp]
   22cd0:	str	r2, [sp, #4]
   22cd4:	mov	r3, sl
   22cd8:	ldr	r2, [pc, #828]	; 2301c <main@@Base+0x1ebe4>
   22cdc:	ldr	r1, [sp, #52]	; 0x34
   22ce0:	add	r2, pc, r2
   22ce4:	bl	3d38 <g_signal_connect_data@plt>
   22ce8:	mov	r1, r5
   22cec:	ldr	r0, [sl, #12]
   22cf0:	bl	426c <g_ptr_array_add@plt>
   22cf4:	mov	r5, #1
   22cf8:	cmp	r4, #0
   22cfc:	beq	22d08 <main@@Base+0x1e8d0>
   22d00:	mov	r0, r4
   22d04:	bl	4110 <g_object_unref@plt>
   22d08:	cmp	r5, #0
   22d0c:	beq	22ea4 <main@@Base+0x1ea6c>
   22d10:	ldr	ip, [sp, #20]
   22d14:	ldr	r2, [sp, #16]
   22d18:	ldr	r3, [ip, #4]
   22d1c:	add	r2, r2, #1
   22d20:	str	r2, [sp, #16]
   22d24:	cmp	r3, r2
   22d28:	bls	22eb4 <main@@Base+0x1ea7c>
   22d2c:	ldr	r2, [sp, #20]
   22d30:	mov	r1, #128	; 0x80
   22d34:	ldr	ip, [sp, #16]
   22d38:	ldr	r0, [sp, #44]	; 0x2c
   22d3c:	ldr	r3, [r2]
   22d40:	ldr	r2, [sp, #48]	; 0x30
   22d44:	ldr	r3, [r3, ip, lsl #2]
   22d48:	str	r3, [sp, #12]
   22d4c:	bl	3a38 <g_log@plt>
   22d50:	bl	4098 <g_key_file_new@plt>
   22d54:	ldr	r1, [sp, #12]
   22d58:	mov	r2, #0
   22d5c:	mov	r3, r9
   22d60:	mov	r8, r0
   22d64:	bl	3918 <g_key_file_load_from_file@plt>
   22d68:	cmp	r0, #0
   22d6c:	moveq	r4, r0
   22d70:	beq	22c8c <main@@Base+0x1e854>
   22d74:	mov	r0, r8
   22d78:	mov	r1, #0
   22d7c:	bl	3d08 <g_key_file_get_groups@plt>
   22d80:	ldr	r1, [r0]
   22d84:	str	r0, [sp, #36]	; 0x24
   22d88:	cmp	r1, #0
   22d8c:	beq	22e6c <main@@Base+0x1ea34>
   22d90:	ldr	r5, [sp, #36]	; 0x24
   22d94:	ldr	r2, [sp, #36]	; 0x24
   22d98:	add	r2, r2, #4
   22d9c:	str	r2, [sp, #40]	; 0x28
   22da0:	mov	r0, r8
   22da4:	mov	r2, #0
   22da8:	mov	r3, r9
   22dac:	bl	402c <g_key_file_get_keys@plt>
   22db0:	cmp	r0, #0
   22db4:	str	r0, [sp, #28]
   22db8:	beq	22e3c <main@@Base+0x1ea04>
   22dbc:	ldr	r3, [sp, #28]
   22dc0:	ldr	r2, [r3]
   22dc4:	cmp	r2, #0
   22dc8:	beq	22e4c <main@@Base+0x1ea14>
   22dcc:	ldr	ip, [sp, #28]
   22dd0:	add	r4, ip, #4
   22dd4:	mov	r6, ip
   22dd8:	b	22e18 <main@@Base+0x1e9e0>
   22ddc:	ldr	r2, [r6]
   22de0:	mov	r0, fp
   22de4:	ldr	r1, [r5]
   22de8:	ldr	r6, [sl, #16]
   22dec:	bl	3c18 <g_strdup_printf@plt>
   22df0:	mov	r1, r0
   22df4:	mov	r2, r7
   22df8:	mov	r0, r6
   22dfc:	bl	3bb8 <g_hash_table_insert@plt>
   22e00:	mov	r0, #0
   22e04:	bl	3eac <g_free@plt>
   22e08:	mov	r6, r4
   22e0c:	ldr	r2, [r4], #4
   22e10:	cmp	r2, #0
   22e14:	beq	22e4c <main@@Base+0x1ea14>
   22e18:	mov	r0, r8
   22e1c:	ldr	r1, [r5]
   22e20:	mov	r3, r9
   22e24:	bl	3be8 <g_key_file_get_value@plt>
   22e28:	subs	r7, r0, #0
   22e2c:	bne	22ddc <main@@Base+0x1e9a4>
   22e30:	bl	3eac <g_free@plt>
   22e34:	ldr	r0, [sp, #28]
   22e38:	bl	3e1c <g_strfreev@plt>
   22e3c:	mov	r4, #0
   22e40:	ldr	r0, [sp, #36]	; 0x24
   22e44:	bl	3e1c <g_strfreev@plt>
   22e48:	b	22c8c <main@@Base+0x1e854>
   22e4c:	ldr	r0, [sp, #28]
   22e50:	bl	3e1c <g_strfreev@plt>
   22e54:	ldr	r5, [sp, #40]	; 0x28
   22e58:	mov	r2, r5
   22e5c:	ldr	r1, [r2], #4
   22e60:	cmp	r1, #0
   22e64:	str	r2, [sp, #40]	; 0x28
   22e68:	bne	22da0 <main@@Base+0x1e968>
   22e6c:	ldr	r0, [sl, #16]
   22e70:	bl	41d0 <g_hash_table_size@plt>
   22e74:	mov	r3, r0
   22e78:	mov	r1, #128	; 0x80
   22e7c:	ldr	r0, [sp, #56]	; 0x38
   22e80:	ldr	r2, [sp, #60]	; 0x3c
   22e84:	bl	3a38 <g_log@plt>
   22e88:	mov	r4, #1
   22e8c:	b	22e40 <main@@Base+0x1ea08>
   22e90:	ldr	r1, [pc, #392]	; 23020 <main@@Base+0x1ebe8>
   22e94:	mov	r0, r9
   22e98:	ldr	r2, [sp, #12]
   22e9c:	add	r1, pc, r1
   22ea0:	bl	4404 <g_prefix_error@plt>
   22ea4:	mov	r4, #0
   22ea8:	b	22bdc <main@@Base+0x1e7a4>
   22eac:	ldr	r4, [sp, #24]
   22eb0:	b	22b48 <main@@Base+0x1e710>
   22eb4:	mov	r4, #1
   22eb8:	b	22bdc <main@@Base+0x1e7a4>
   22ebc:	mov	r4, r0
   22ec0:	cmp	r8, #0
   22ec4:	beq	22ed0 <main@@Base+0x1ea98>
   22ec8:	mov	r0, r8
   22ecc:	bl	41dc <g_key_file_unref@plt>
   22ed0:	ldr	r0, [sp, #20]
   22ed4:	bl	4224 <g_ptr_array_unref@plt>
   22ed8:	ldr	r2, [sp, #24]
   22edc:	cmp	r2, #0
   22ee0:	beq	22eec <main@@Base+0x1eab4>
   22ee4:	mov	r0, r2
   22ee8:	bl	3ca8 <g_dir_close@plt>
   22eec:	ldr	r0, [sp, #32]
   22ef0:	bl	3eac <g_free@plt>
   22ef4:	mov	r0, r4
   22ef8:	bl	42f0 <_Unwind_Resume@plt>
   22efc:	mov	r4, r0
   22f00:	mov	r0, r7
   22f04:	bl	3eac <g_free@plt>
   22f08:	ldr	r0, [sp, #28]
   22f0c:	bl	3e1c <g_strfreev@plt>
   22f10:	ldr	r0, [sp, #36]	; 0x24
   22f14:	bl	3e1c <g_strfreev@plt>
   22f18:	b	22ec0 <main@@Base+0x1ea88>
   22f1c:	mov	r4, r0
   22f20:	mov	r7, #0
   22f24:	b	22f00 <main@@Base+0x1eac8>
   22f28:	mov	r4, r0
   22f2c:	b	22f08 <main@@Base+0x1ead0>
   22f30:	mov	r4, r0
   22f34:	b	22f10 <main@@Base+0x1ead8>
   22f38:	b	22ebc <main@@Base+0x1ea84>
   22f3c:	mov	r4, r0
   22f40:	mov	r2, #0
   22f44:	str	r2, [sp, #24]
   22f48:	ldr	ip, [sp, #20]
   22f4c:	cmp	ip, #0
   22f50:	bne	22ed0 <main@@Base+0x1ea98>
   22f54:	b	22ed8 <main@@Base+0x1eaa0>
   22f58:	mov	ip, #0
   22f5c:	mov	r4, r0
   22f60:	str	ip, [sp, #24]
   22f64:	b	22f48 <main@@Base+0x1eb10>
   22f68:	mov	r3, #0
   22f6c:	mov	r4, r0
   22f70:	str	r3, [sp, #24]
   22f74:	b	22f48 <main@@Base+0x1eb10>
   22f78:	b	22f30 <main@@Base+0x1eaf8>
   22f7c:	b	22f1c <main@@Base+0x1eae4>
   22f80:	cmp	r4, #0
   22f84:	mov	r5, r0
   22f88:	beq	22f94 <main@@Base+0x1eb5c>
   22f8c:	mov	r0, r4
   22f90:	bl	4110 <g_object_unref@plt>
   22f94:	mov	r4, r5
   22f98:	b	22ed0 <main@@Base+0x1ea98>
   22f9c:	mov	r4, r0
   22fa0:	b	22eec <main@@Base+0x1eab4>
   22fa4:	mov	r3, #0
   22fa8:	mov	r4, r0
   22fac:	str	r3, [sp, #24]
   22fb0:	str	r3, [sp, #32]
   22fb4:	b	22f48 <main@@Base+0x1eb10>
   22fb8:	mov	r2, #0
   22fbc:	mov	r4, r0
   22fc0:	str	r2, [sp, #32]
   22fc4:	b	22eec <main@@Base+0x1eab4>
   22fc8:	mov	r4, r0
   22fcc:	b	22f48 <main@@Base+0x1eb10>
   22fd0:	mov	r4, r0
   22fd4:	b	22ed8 <main@@Base+0x1eaa0>
   22fd8:	mov	r4, r0
   22fdc:	b	22ed0 <main@@Base+0x1ea98>
   22fe0:	muleq	r1, ip, r0
   22fe4:	andeq	r0, r0, ip, asr #8
   22fe8:	andeq	r7, r0, ip, lsl #31
   22fec:	andeq	r7, r0, r4, ror #6
   22ff0:	andeq	r7, r0, r8, ror #30
   22ff4:	andeq	r7, r0, r4, lsr #30
   22ff8:	andeq	r7, r0, r4, lsl #6
   22ffc:	andeq	r7, r0, r4, lsr #30
   23000:			; <UNDEFINED> instruction: 0xfffffe9c
   23004:	andeq	r7, r0, r0, asr r2
   23008:	andeq	r7, r0, r8, lsl #29
   2300c:	andeq	r7, r0, r8, lsl #29
   23010:	andeq	r7, r0, r8, lsr #4
   23014:	andeq	r7, r0, r4, lsl #29
   23018:	andeq	r7, r0, r8, lsr #29
   2301c:	andeq	r0, r0, r8, asr fp
   23020:	andeq	r7, r0, r4, ror ip
   23024:	ldr	r0, [pc, #140]	; 230b8 <main@@Base+0x1ec80>
   23028:	push	{r4, r5, lr}
   2302c:	add	r0, pc, r0
   23030:	dmb	sy
   23034:	sub	sp, sp, #20
   23038:	ldr	r4, [r0, #8]
   2303c:	dmb	sy
   23040:	cmp	r4, #0
   23044:	beq	2305c <main@@Base+0x1ec24>
   23048:	ldr	r3, [pc, #108]	; 230bc <main@@Base+0x1ec84>
   2304c:	add	r3, pc, r3
   23050:	ldr	r0, [r3, #8]
   23054:	add	sp, sp, #20
   23058:	pop	{r4, r5, pc}
   2305c:	add	r5, r0, #8
   23060:	mov	r0, r5
   23064:	bl	3d50 <g_once_init_enter@plt>
   23068:	cmp	r0, #0
   2306c:	beq	23048 <main@@Base+0x1ec10>
   23070:	ldr	r0, [pc, #72]	; 230c0 <main@@Base+0x1ec88>
   23074:	add	r0, pc, r0
   23078:	bl	3df8 <g_intern_static_string@plt>
   2307c:	ldr	r3, [pc, #64]	; 230c4 <main@@Base+0x1ec8c>
   23080:	mov	r2, #20
   23084:	str	r4, [sp, #8]
   23088:	add	r3, pc, r3
   2308c:	stm	sp, {r2, r3}
   23090:	ldr	r3, [pc, #48]	; 230c8 <main@@Base+0x1ec90>
   23094:	mov	r2, #68	; 0x44
   23098:	add	r3, pc, r3
   2309c:	mov	r1, r0
   230a0:	mov	r0, #80	; 0x50
   230a4:	bl	3894 <g_type_register_static_simple@plt>
   230a8:	mov	r1, r0
   230ac:	mov	r0, r5
   230b0:	bl	4140 <g_once_init_leave@plt>
   230b4:	b	23048 <main@@Base+0x1ec10>
   230b8:	andeq	ip, r1, r4, ror r0
   230bc:	andeq	ip, r1, r4, asr r0
   230c0:			; <UNDEFINED> instruction: 0x00007ab8
   230c4:			; <UNDEFINED> instruction: 0xfffff988
   230c8:			; <UNDEFINED> instruction: 0xfffff9d4
   230cc:	push	{r3, r4, r5, lr}
   230d0:	mov	r4, r0
   230d4:	bl	23024 <main@@Base+0x1ebec>
   230d8:	mov	r1, r0
   230dc:	mov	r0, r4
   230e0:	bl	39d8 <g_type_check_instance_cast@plt>
   230e4:	mov	r5, r0
   230e8:	ldr	r0, [r0, #12]
   230ec:	bl	4224 <g_ptr_array_unref@plt>
   230f0:	ldr	r0, [r5, #16]
   230f4:	bl	3ee8 <g_hash_table_unref@plt>
   230f8:	ldr	r3, [pc, #28]	; 2311c <main@@Base+0x1ece4>
   230fc:	mov	r1, #80	; 0x50
   23100:	add	r3, pc, r3
   23104:	ldr	r0, [r3]
   23108:	bl	4374 <g_type_check_class_cast@plt>
   2310c:	ldr	r3, [r0, #24]
   23110:	mov	r0, r4
   23114:	blx	r3
   23118:	pop	{r3, r4, r5, pc}
   2311c:	andeq	fp, r1, r0, lsr #31
   23120:	push	{r4, r5, r6, lr}
   23124:	mov	r4, r0
   23128:	mov	r6, r1
   2312c:	mov	r5, r2
   23130:	bl	23024 <main@@Base+0x1ebec>
   23134:	cmp	r4, #0
   23138:	beq	23168 <main@@Base+0x1ed30>
   2313c:	ldr	r3, [r4]
   23140:	cmp	r3, #0
   23144:	beq	23154 <main@@Base+0x1ed1c>
   23148:	ldr	r3, [r3]
   2314c:	cmp	r0, r3
   23150:	beq	2319c <main@@Base+0x1ed64>
   23154:	mov	r1, r0
   23158:	mov	r0, r4
   2315c:	bl	3fcc <g_type_check_instance_is_a@plt>
   23160:	cmp	r0, #0
   23164:	bne	2319c <main@@Base+0x1ed64>
   23168:	ldr	r0, [pc, #220]	; 2324c <main@@Base+0x1ee14>
   2316c:	ldr	r1, [pc, #220]	; 23250 <main@@Base+0x1ee18>
   23170:	ldr	r2, [pc, #220]	; 23254 <main@@Base+0x1ee1c>
   23174:	add	r0, pc, r0
   23178:	add	r1, pc, r1
   2317c:	add	r2, pc, r2
   23180:	bl	3870 <g_return_if_fail_warning@plt>
   23184:	mov	r5, #0
   23188:	mov	r4, r5
   2318c:	mov	r0, r5
   23190:	bl	3eac <g_free@plt>
   23194:	mov	r0, r4
   23198:	pop	{r4, r5, r6, pc}
   2319c:	cmp	r6, #0
   231a0:	beq	231d8 <main@@Base+0x1eda0>
   231a4:	cmp	r5, #0
   231a8:	beq	231f8 <main@@Base+0x1edc0>
   231ac:	ldr	r0, [pc, #164]	; 23258 <main@@Base+0x1ee20>
   231b0:	mov	r1, r6
   231b4:	mov	r2, r5
   231b8:	add	r0, pc, r0
   231bc:	bl	3c18 <g_strdup_printf@plt>
   231c0:	mov	r5, r0
   231c4:	ldr	r0, [r4, #16]
   231c8:	mov	r1, r5
   231cc:	bl	3db0 <g_hash_table_lookup@plt>
   231d0:	mov	r4, r0
   231d4:	b	2318c <main@@Base+0x1ed54>
   231d8:	ldr	r0, [pc, #124]	; 2325c <main@@Base+0x1ee24>
   231dc:	ldr	r1, [pc, #124]	; 23260 <main@@Base+0x1ee28>
   231e0:	ldr	r2, [pc, #124]	; 23264 <main@@Base+0x1ee2c>
   231e4:	add	r0, pc, r0
   231e8:	add	r1, pc, r1
   231ec:	add	r2, pc, r2
   231f0:	bl	3870 <g_return_if_fail_warning@plt>
   231f4:	b	23184 <main@@Base+0x1ed4c>
   231f8:	ldr	r0, [pc, #104]	; 23268 <main@@Base+0x1ee30>
   231fc:	ldr	r1, [pc, #104]	; 2326c <main@@Base+0x1ee34>
   23200:	ldr	r2, [pc, #104]	; 23270 <main@@Base+0x1ee38>
   23204:	add	r0, pc, r0
   23208:	add	r1, pc, r1
   2320c:	add	r2, pc, r2
   23210:	bl	3870 <g_return_if_fail_warning@plt>
   23214:	b	23184 <main@@Base+0x1ed4c>
   23218:	mov	r4, r0
   2321c:	mov	r5, #0
   23220:	mov	r0, r5
   23224:	bl	3eac <g_free@plt>
   23228:	mov	r0, r4
   2322c:	bl	42f0 <_Unwind_Resume@plt>
   23230:	b	23218 <main@@Base+0x1ede0>
   23234:	b	23218 <main@@Base+0x1ede0>
   23238:	b	23218 <main@@Base+0x1ede0>
   2323c:	mov	r4, r0
   23240:	b	23220 <main@@Base+0x1ede8>
   23244:	b	23218 <main@@Base+0x1ede0>
   23248:	b	23218 <main@@Base+0x1ede0>
   2324c:	andeq	r6, r0, r4, lsr #26
   23250:			; <UNDEFINED> instruction: 0x000078bc
   23254:			; <UNDEFINED> instruction: 0x000079bc
   23258:	andeq	r7, r0, r8, lsr r9
   2325c:			; <UNDEFINED> instruction: 0x00006cb4
   23260:	andeq	r7, r0, ip, asr #16
   23264:	andeq	r7, r0, r0, ror #18
   23268:	muleq	r0, r4, ip
   2326c:	andeq	r7, r0, ip, lsr #16
   23270:	andeq	r7, r0, r0, lsr #10
   23274:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23278:	mov	sl, r0
   2327c:	mov	r6, r1
   23280:	mov	r8, r2
   23284:	bl	23024 <main@@Base+0x1ebec>
   23288:	cmp	sl, #0
   2328c:	beq	232bc <main@@Base+0x1ee84>
   23290:	ldr	r3, [sl]
   23294:	cmp	r3, #0
   23298:	beq	232a8 <main@@Base+0x1ee70>
   2329c:	ldr	r3, [r3]
   232a0:	cmp	r0, r3
   232a4:	beq	232e8 <main@@Base+0x1eeb0>
   232a8:	mov	r1, r0
   232ac:	mov	r0, sl
   232b0:	bl	3fcc <g_type_check_instance_is_a@plt>
   232b4:	cmp	r0, #0
   232b8:	bne	232e8 <main@@Base+0x1eeb0>
   232bc:	ldr	r1, [pc, #308]	; 233f8 <main@@Base+0x1efc0>
   232c0:	ldr	r0, [pc, #308]	; 233fc <main@@Base+0x1efc4>
   232c4:	ldr	r2, [pc, #308]	; 23400 <main@@Base+0x1efc8>
   232c8:	add	r1, pc, r1
   232cc:	add	r0, pc, r0
   232d0:	add	r1, r1, #24
   232d4:	add	r2, pc, r2
   232d8:	bl	3870 <g_return_if_fail_warning@plt>
   232dc:	mov	r4, #0
   232e0:	mov	r0, r4
   232e4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   232e8:	cmp	r6, #0
   232ec:	beq	2339c <main@@Base+0x1ef64>
   232f0:	cmp	r8, #0
   232f4:	beq	233c0 <main@@Base+0x1ef88>
   232f8:	mov	r0, r6
   232fc:	bl	411c <strlen@plt>
   23300:	mov	r7, r0
   23304:	ldr	r0, [sl, #16]
   23308:	bl	3b04 <g_hash_table_get_keys@plt>
   2330c:	subs	fp, r0, #0
   23310:	mov	r4, fp
   23314:	beq	232e0 <main@@Base+0x1eea8>
   23318:	add	r9, r7, #1
   2331c:	b	2332c <main@@Base+0x1eef4>
   23320:	ldr	r4, [r4, #4]
   23324:	cmp	r4, #0
   23328:	beq	2338c <main@@Base+0x1ef54>
   2332c:	ldr	r5, [r4]
   23330:	mov	r2, r7
   23334:	mov	r1, r6
   23338:	mov	r0, r5
   2333c:	bl	39a8 <strncmp@plt>
   23340:	subs	r2, r0, #0
   23344:	bne	23320 <main@@Base+0x1eee8>
   23348:	add	r5, r5, r9
   2334c:	mov	r0, r8
   23350:	mov	r1, r5
   23354:	bl	3834 <fnmatch@plt>
   23358:	cmp	r0, #0
   2335c:	beq	23378 <main@@Base+0x1ef40>
   23360:	mov	r0, r5
   23364:	mov	r1, r8
   23368:	mov	r2, #0
   2336c:	bl	3834 <fnmatch@plt>
   23370:	cmp	r0, #0
   23374:	bne	23320 <main@@Base+0x1eee8>
   23378:	mov	r0, sl
   2337c:	mov	r1, r6
   23380:	mov	r2, r5
   23384:	bl	23120 <main@@Base+0x1ece8>
   23388:	mov	r4, r0
   2338c:	mov	r0, fp
   23390:	bl	3b10 <g_list_free@plt>
   23394:	mov	r0, r4
   23398:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2339c:	ldr	r1, [pc, #96]	; 23404 <main@@Base+0x1efcc>
   233a0:	ldr	r0, [pc, #96]	; 23408 <main@@Base+0x1efd0>
   233a4:	ldr	r2, [pc, #96]	; 2340c <main@@Base+0x1efd4>
   233a8:	add	r1, pc, r1
   233ac:	add	r0, pc, r0
   233b0:	add	r1, r1, #24
   233b4:	add	r2, pc, r2
   233b8:	bl	3870 <g_return_if_fail_warning@plt>
   233bc:	b	232dc <main@@Base+0x1eea4>
   233c0:	ldr	r1, [pc, #72]	; 23410 <main@@Base+0x1efd8>
   233c4:	ldr	r0, [pc, #72]	; 23414 <main@@Base+0x1efdc>
   233c8:	ldr	r2, [pc, #72]	; 23418 <main@@Base+0x1efe0>
   233cc:	add	r1, pc, r1
   233d0:	add	r0, pc, r0
   233d4:	add	r1, r1, #24
   233d8:	add	r2, pc, r2
   233dc:	bl	3870 <g_return_if_fail_warning@plt>
   233e0:	b	232dc <main@@Base+0x1eea4>
   233e4:	mov	r4, r0
   233e8:	mov	r0, fp
   233ec:	bl	3b10 <g_list_free@plt>
   233f0:	mov	r0, r4
   233f4:	bl	42f0 <_Unwind_Resume@plt>
   233f8:	andeq	r7, r0, ip, ror #14
   233fc:	andeq	r6, r0, ip, asr #23
   23400:	andeq	r7, r0, r4, ror #16
   23404:	andeq	r7, r0, ip, lsl #13
   23408:	andeq	r6, r0, ip, ror #21
   2340c:	muleq	r0, r8, r7
   23410:	andeq	r7, r0, r8, ror #12
   23414:	andeq	r6, r0, r8, asr #21
   23418:	andeq	r7, r0, r4, lsl #15
   2341c:	push	{r4, r5, r6, r7, r8, lr}
   23420:	mov	r5, r0
   23424:	mov	r8, r1
   23428:	mov	r4, r2
   2342c:	bl	23024 <main@@Base+0x1ebec>
   23430:	cmp	r5, #0
   23434:	beq	23464 <main@@Base+0x1f02c>
   23438:	ldr	r3, [r5]
   2343c:	cmp	r3, #0
   23440:	beq	23450 <main@@Base+0x1f018>
   23444:	ldr	r3, [r3]
   23448:	cmp	r0, r3
   2344c:	beq	234b4 <main@@Base+0x1f07c>
   23450:	mov	r1, r0
   23454:	mov	r0, r5
   23458:	bl	3fcc <g_type_check_instance_is_a@plt>
   2345c:	cmp	r0, #0
   23460:	bne	234b4 <main@@Base+0x1f07c>
   23464:	ldr	r1, [pc, #592]	; 236bc <main@@Base+0x1f284>
   23468:	ldr	r0, [pc, #592]	; 236c0 <main@@Base+0x1f288>
   2346c:	ldr	r2, [pc, #592]	; 236c4 <main@@Base+0x1f28c>
   23470:	add	r1, pc, r1
   23474:	add	r0, pc, r0
   23478:	add	r1, r1, #52	; 0x34
   2347c:	add	r2, pc, r2
   23480:	bl	3870 <g_return_if_fail_warning@plt>
   23484:	mov	r4, #0
   23488:	mov	r7, r4
   2348c:	mov	r6, r4
   23490:	mov	r5, r4
   23494:	mov	r0, r4
   23498:	bl	3eac <g_free@plt>
   2349c:	mov	r0, r7
   234a0:	bl	3eac <g_free@plt>
   234a4:	mov	r0, r6
   234a8:	bl	3eac <g_free@plt>
   234ac:	mov	r0, r5
   234b0:	pop	{r4, r5, r6, r7, r8, pc}
   234b4:	cmp	r8, #0
   234b8:	beq	235f8 <main@@Base+0x1f1c0>
   234bc:	bl	4044 <g_usb_device_get_type@plt>
   234c0:	cmp	r4, #0
   234c4:	beq	234f4 <main@@Base+0x1f0bc>
   234c8:	ldr	r3, [r4]
   234cc:	cmp	r3, #0
   234d0:	beq	234e0 <main@@Base+0x1f0a8>
   234d4:	ldr	r3, [r3]
   234d8:	cmp	r0, r3
   234dc:	beq	23518 <main@@Base+0x1f0e0>
   234e0:	mov	r1, r0
   234e4:	mov	r0, r4
   234e8:	bl	3fcc <g_type_check_instance_is_a@plt>
   234ec:	cmp	r0, #0
   234f0:	bne	23518 <main@@Base+0x1f0e0>
   234f4:	ldr	r1, [pc, #460]	; 236c8 <main@@Base+0x1f290>
   234f8:	ldr	r0, [pc, #460]	; 236cc <main@@Base+0x1f294>
   234fc:	ldr	r2, [pc, #460]	; 236d0 <main@@Base+0x1f298>
   23500:	add	r1, pc, r1
   23504:	add	r0, pc, r0
   23508:	add	r1, r1, #52	; 0x34
   2350c:	add	r2, pc, r2
   23510:	bl	3870 <g_return_if_fail_warning@plt>
   23514:	b	23484 <main@@Base+0x1f04c>
   23518:	mov	r0, r4
   2351c:	bl	4050 <g_usb_device_get_vid@plt>
   23520:	mov	r7, r0
   23524:	mov	r0, r4
   23528:	bl	3abc <g_usb_device_get_pid@plt>
   2352c:	mov	r6, r0
   23530:	mov	r0, r4
   23534:	bl	3c3c <g_usb_device_get_release@plt>
   23538:	mov	r3, r0
   2353c:	ldr	r0, [pc, #400]	; 236d4 <main@@Base+0x1f29c>
   23540:	mov	r1, r7
   23544:	mov	r2, r6
   23548:	add	r0, pc, r0
   2354c:	bl	3c18 <g_strdup_printf@plt>
   23550:	mov	r6, r0
   23554:	mov	r2, r0
   23558:	mov	r1, r8
   2355c:	mov	r0, r5
   23560:	bl	23120 <main@@Base+0x1ece8>
   23564:	cmp	r0, #0
   23568:	movne	r4, #0
   2356c:	movne	r5, r0
   23570:	movne	r7, r4
   23574:	bne	23494 <main@@Base+0x1f05c>
   23578:	mov	r0, r4
   2357c:	bl	4050 <g_usb_device_get_vid@plt>
   23580:	mov	r7, r0
   23584:	mov	r0, r4
   23588:	bl	3abc <g_usb_device_get_pid@plt>
   2358c:	mov	r2, r0
   23590:	ldr	r0, [pc, #320]	; 236d8 <main@@Base+0x1f2a0>
   23594:	mov	r1, r7
   23598:	add	r0, pc, r0
   2359c:	bl	3c18 <g_strdup_printf@plt>
   235a0:	mov	r7, r0
   235a4:	mov	r2, r0
   235a8:	mov	r1, r8
   235ac:	mov	r0, r5
   235b0:	bl	23120 <main@@Base+0x1ece8>
   235b4:	cmp	r0, #0
   235b8:	movne	r5, r0
   235bc:	movne	r4, #0
   235c0:	bne	23494 <main@@Base+0x1f05c>
   235c4:	mov	r0, r4
   235c8:	bl	4050 <g_usb_device_get_vid@plt>
   235cc:	mov	r1, r0
   235d0:	ldr	r0, [pc, #260]	; 236dc <main@@Base+0x1f2a4>
   235d4:	add	r0, pc, r0
   235d8:	bl	3c18 <g_strdup_printf@plt>
   235dc:	mov	r4, r0
   235e0:	mov	r1, r8
   235e4:	mov	r0, r5
   235e8:	mov	r2, r4
   235ec:	bl	23120 <main@@Base+0x1ece8>
   235f0:	mov	r5, r0
   235f4:	b	23494 <main@@Base+0x1f05c>
   235f8:	ldr	r1, [pc, #224]	; 236e0 <main@@Base+0x1f2a8>
   235fc:	ldr	r0, [pc, #224]	; 236e4 <main@@Base+0x1f2ac>
   23600:	ldr	r2, [pc, #224]	; 236e8 <main@@Base+0x1f2b0>
   23604:	add	r1, pc, r1
   23608:	add	r0, pc, r0
   2360c:	add	r1, r1, #52	; 0x34
   23610:	add	r2, pc, r2
   23614:	bl	3870 <g_return_if_fail_warning@plt>
   23618:	b	23484 <main@@Base+0x1f04c>
   2361c:	mov	r5, r0
   23620:	mov	r4, #0
   23624:	mov	r0, r4
   23628:	bl	3eac <g_free@plt>
   2362c:	mov	r0, r7
   23630:	bl	3eac <g_free@plt>
   23634:	mov	r0, r6
   23638:	bl	3eac <g_free@plt>
   2363c:	mov	r0, r5
   23640:	bl	42f0 <_Unwind_Resume@plt>
   23644:	mov	r4, #0
   23648:	mov	r5, r0
   2364c:	mov	r7, r4
   23650:	b	23624 <main@@Base+0x1f1ec>
   23654:	mov	r5, r0
   23658:	b	23624 <main@@Base+0x1f1ec>
   2365c:	b	2361c <main@@Base+0x1f1e4>
   23660:	b	2361c <main@@Base+0x1f1e4>
   23664:	b	23644 <main@@Base+0x1f20c>
   23668:	b	23644 <main@@Base+0x1f20c>
   2366c:	mov	r4, #0
   23670:	mov	r5, r0
   23674:	mov	r7, r4
   23678:	mov	r6, r4
   2367c:	b	23624 <main@@Base+0x1f1ec>
   23680:	mov	r5, r0
   23684:	b	23634 <main@@Base+0x1f1fc>
   23688:	mov	r5, r0
   2368c:	b	2362c <main@@Base+0x1f1f4>
   23690:	b	2366c <main@@Base+0x1f234>
   23694:	b	2366c <main@@Base+0x1f234>
   23698:	b	2366c <main@@Base+0x1f234>
   2369c:	b	2366c <main@@Base+0x1f234>
   236a0:	b	2366c <main@@Base+0x1f234>
   236a4:	b	2366c <main@@Base+0x1f234>
   236a8:	b	2366c <main@@Base+0x1f234>
   236ac:	b	2366c <main@@Base+0x1f234>
   236b0:	b	2366c <main@@Base+0x1f234>
   236b4:	b	2366c <main@@Base+0x1f234>
   236b8:	b	23644 <main@@Base+0x1f20c>
   236bc:	andeq	r7, r0, r4, asr #11
   236c0:	andeq	r6, r0, r4, lsr #20
   236c4:			; <UNDEFINED> instruction: 0x000076bc
   236c8:	andeq	r7, r0, r4, lsr r5
   236cc:	muleq	r0, r4, r9
   236d0:	andeq	r7, r0, r8, lsr #13
   236d4:	andeq	r7, r0, r4, lsr #12
   236d8:	strdeq	r7, [r0], -r4
   236dc:	ldrdeq	r7, [r0], -r0
   236e0:	andeq	r7, r0, r0, lsr r4
   236e4:	muleq	r0, r0, r8
   236e8:	andeq	r7, r0, ip, lsr r5
   236ec:	push	{r3, r4, r5, r6, r7, lr}
   236f0:	mov	r4, r0
   236f4:	mov	r7, r1
   236f8:	bl	23024 <main@@Base+0x1ebec>
   236fc:	cmp	r4, #0
   23700:	beq	23730 <main@@Base+0x1f2f8>
   23704:	ldr	r3, [r4]
   23708:	cmp	r3, #0
   2370c:	beq	2371c <main@@Base+0x1f2e4>
   23710:	ldr	r3, [r3]
   23714:	cmp	r0, r3
   23718:	beq	23774 <main@@Base+0x1f33c>
   2371c:	mov	r1, r0
   23720:	mov	r0, r4
   23724:	bl	3fcc <g_type_check_instance_is_a@plt>
   23728:	cmp	r0, #0
   2372c:	bne	23774 <main@@Base+0x1f33c>
   23730:	ldr	r1, [pc, #252]	; 23834 <main@@Base+0x1f3fc>
   23734:	ldr	r0, [pc, #252]	; 23838 <main@@Base+0x1f400>
   23738:	ldr	r2, [pc, #252]	; 2383c <main@@Base+0x1f404>
   2373c:	add	r1, pc, r1
   23740:	add	r0, pc, r0
   23744:	add	r1, r1, #84	; 0x54
   23748:	add	r2, pc, r2
   2374c:	bl	3870 <g_return_if_fail_warning@plt>
   23750:	mov	r5, #0
   23754:	mov	r6, r5
   23758:	mov	r4, r5
   2375c:	mov	r0, r5
   23760:	bl	3eac <g_free@plt>
   23764:	mov	r0, r6
   23768:	bl	3eac <g_free@plt>
   2376c:	mov	r0, r4
   23770:	pop	{r3, r4, r5, r6, r7, pc}
   23774:	ldr	r0, [r4, #12]
   23778:	mov	r1, #0
   2377c:	bl	3dec <g_ptr_array_set_size@plt>
   23780:	ldr	r0, [r4, #16]
   23784:	bl	3aa4 <g_hash_table_remove_all@plt>
   23788:	mov	r0, #1
   2378c:	bl	1e728 <main@@Base+0x1a2f0>
   23790:	mov	r6, r0
   23794:	mov	r2, r7
   23798:	mov	r0, r4
   2379c:	mov	r1, r6
   237a0:	bl	22ad4 <main@@Base+0x1e69c>
   237a4:	cmp	r0, #0
   237a8:	moveq	r5, r0
   237ac:	moveq	r4, r5
   237b0:	beq	2375c <main@@Base+0x1f324>
   237b4:	mov	r0, #3
   237b8:	bl	1e728 <main@@Base+0x1a2f0>
   237bc:	mov	r5, r0
   237c0:	mov	r2, r7
   237c4:	mov	r0, r4
   237c8:	mov	r1, r5
   237cc:	bl	22ad4 <main@@Base+0x1e69c>
   237d0:	adds	r4, r0, #0
   237d4:	movne	r4, #1
   237d8:	b	2375c <main@@Base+0x1f324>
   237dc:	mov	r4, r0
   237e0:	mov	r5, #0
   237e4:	mov	r0, r5
   237e8:	bl	3eac <g_free@plt>
   237ec:	mov	r0, r6
   237f0:	bl	3eac <g_free@plt>
   237f4:	mov	r0, r4
   237f8:	bl	42f0 <_Unwind_Resume@plt>
   237fc:	mov	r4, r0
   23800:	b	237e4 <main@@Base+0x1f3ac>
   23804:	b	237dc <main@@Base+0x1f3a4>
   23808:	mov	r5, #0
   2380c:	mov	r4, r0
   23810:	mov	r6, r5
   23814:	b	237e4 <main@@Base+0x1f3ac>
   23818:	b	23808 <main@@Base+0x1f3d0>
   2381c:	b	23808 <main@@Base+0x1f3d0>
   23820:	mov	r4, r0
   23824:	b	237ec <main@@Base+0x1f3b4>
   23828:	b	23808 <main@@Base+0x1f3d0>
   2382c:	b	23808 <main@@Base+0x1f3d0>
   23830:	b	23808 <main@@Base+0x1f3d0>
   23834:	strdeq	r7, [r0], -r8
   23838:	andeq	r6, r0, r8, asr r7
   2383c:	strdeq	r7, [r0], -r0
   23840:	ldr	r3, [pc, #252]	; 23944 <main@@Base+0x1f50c>
   23844:	ldr	r2, [pc, #252]	; 23948 <main@@Base+0x1f510>
   23848:	add	r3, pc, r3
   2384c:	push	{r4, r5, r6, lr}
   23850:	sub	sp, sp, #8
   23854:	ldr	r5, [r3, r2]
   23858:	mov	r4, r1
   2385c:	ldr	r6, [sp, #24]
   23860:	ldr	r3, [r5]
   23864:	str	r3, [sp, #4]
   23868:	bl	23024 <main@@Base+0x1ebec>
   2386c:	mov	r1, r0
   23870:	mov	r0, r6
   23874:	bl	39d8 <g_type_check_instance_cast@plt>
   23878:	mov	r3, #0
   2387c:	str	r3, [sp]
   23880:	mov	r6, r0
   23884:	mov	r0, r4
   23888:	bl	3ad4 <g_file_get_path@plt>
   2388c:	mov	r4, r0
   23890:	ldr	r2, [pc, #180]	; 2394c <main@@Base+0x1f514>
   23894:	ldr	r0, [pc, #180]	; 23950 <main@@Base+0x1f518>
   23898:	mov	r3, r4
   2389c:	mov	r1, #128	; 0x80
   238a0:	add	r2, pc, r2
   238a4:	add	r0, pc, r0
   238a8:	bl	3a38 <g_log@plt>
   238ac:	mov	r0, r6
   238b0:	mov	r1, sp
   238b4:	bl	236ec <main@@Base+0x1f2b4>
   238b8:	cmp	r0, #0
   238bc:	bne	238e0 <main@@Base+0x1f4a8>
   238c0:	ldr	r3, [sp]
   238c4:	mov	r1, #16
   238c8:	ldr	r0, [pc, #132]	; 23954 <main@@Base+0x1f51c>
   238cc:	ldr	r2, [pc, #132]	; 23958 <main@@Base+0x1f520>
   238d0:	add	r0, pc, r0
   238d4:	ldr	r3, [r3, #8]
   238d8:	add	r2, pc, r2
   238dc:	bl	3a38 <g_log@plt>
   238e0:	mov	r0, r4
   238e4:	bl	3eac <g_free@plt>
   238e8:	ldr	r0, [sp]
   238ec:	cmp	r0, #0
   238f0:	beq	238f8 <main@@Base+0x1f4c0>
   238f4:	bl	38e8 <g_error_free@plt>
   238f8:	ldr	r2, [sp, #4]
   238fc:	ldr	r3, [r5]
   23900:	cmp	r2, r3
   23904:	bne	23910 <main@@Base+0x1f4d8>
   23908:	add	sp, sp, #8
   2390c:	pop	{r4, r5, r6, pc}
   23910:	bl	3e4c <__stack_chk_fail@plt>
   23914:	mov	r5, r0
   23918:	mov	r0, r4
   2391c:	bl	3eac <g_free@plt>
   23920:	mov	r4, r5
   23924:	ldr	r0, [sp]
   23928:	cmp	r0, #0
   2392c:	beq	23934 <main@@Base+0x1f4fc>
   23930:	bl	38e8 <g_error_free@plt>
   23934:	mov	r0, r4
   23938:	bl	42f0 <_Unwind_Resume@plt>
   2393c:	mov	r4, r0
   23940:	b	23924 <main@@Base+0x1f4ec>
   23944:	andeq	fp, r1, r8, lsr r3
   23948:	andeq	r0, r0, r0, lsr r4
   2394c:	andeq	r7, r0, ip, lsr #6
   23950:	strdeq	r6, [r0], -r4
   23954:	andeq	r6, r0, r8, asr #11
   23958:	andeq	r7, r0, r8, lsl r3
   2395c:	push	{r4, lr}
   23960:	bl	23024 <main@@Base+0x1ebec>
   23964:	mov	r1, #0
   23968:	bl	3804 <g_object_new@plt>
   2396c:	mov	r4, r0
   23970:	bl	23024 <main@@Base+0x1ebec>
   23974:	mov	r1, r0
   23978:	mov	r0, r4
   2397c:	pop	{r4, lr}
   23980:	b	39d8 <g_type_check_instance_cast@plt>
   23984:	push	{lr}		; (str lr, [sp, #-4]!)
   23988:	sub	sp, sp, #12
   2398c:	mov	r2, #0
   23990:	ldr	r1, [pc, #32]	; 239b8 <main@@Base+0x1f580>
   23994:	str	r2, [sp]
   23998:	mov	r3, r2
   2399c:	str	r2, [sp, #4]
   239a0:	add	r1, pc, r1
   239a4:	ldr	r2, [pc, #16]	; 239bc <main@@Base+0x1f584>
   239a8:	add	r2, pc, r2
   239ac:	bl	3d38 <g_signal_connect_data@plt>
   239b0:	add	sp, sp, #12
   239b4:	pop	{pc}		; (ldr pc, [sp], #4)
   239b8:	strdeq	r7, [r0], -r0
   239bc:	andeq	r0, r0, r4, lsr #27
   239c0:	push	{r4, lr}
   239c4:	sub	sp, sp, #8
   239c8:	mov	r4, r0
   239cc:	bl	420c <g_type_class_peek_parent@plt>
   239d0:	ldr	r1, [pc, #140]	; 23a64 <main@@Base+0x1f62c>
   239d4:	add	r1, pc, r1
   239d8:	ldr	r3, [r1, #4]
   239dc:	cmp	r3, #0
   239e0:	str	r0, [r1]
   239e4:	beq	239f4 <main@@Base+0x1f5bc>
   239e8:	add	r1, r1, #4
   239ec:	mov	r0, r4
   239f0:	bl	38b8 <g_type_class_adjust_private_offset@plt>
   239f4:	mov	r0, r4
   239f8:	mov	r1, #80	; 0x50
   239fc:	bl	4374 <g_type_check_class_cast@plt>
   23a00:	ldr	r1, [pc, #96]	; 23a68 <main@@Base+0x1f630>
   23a04:	ldr	r2, [pc, #96]	; 23a6c <main@@Base+0x1f634>
   23a08:	ldr	r3, [pc, #96]	; 23a70 <main@@Base+0x1f638>
   23a0c:	add	r1, pc, r1
   23a10:	add	r2, pc, r2
   23a14:	add	r3, pc, r3
   23a18:	str	r1, [r0, #24]
   23a1c:	mov	r4, r0
   23a20:	str	r2, [r0, #16]
   23a24:	str	r3, [r0, #12]
   23a28:	bl	4044 <g_usb_device_get_type@plt>
   23a2c:	mov	r1, #0
   23a30:	mov	r2, r1
   23a34:	mov	ip, #39	; 0x27
   23a38:	str	ip, [sp]
   23a3c:	mov	r3, r0
   23a40:	ldr	r0, [pc, #44]	; 23a74 <main@@Base+0x1f63c>
   23a44:	add	r0, pc, r0
   23a48:	bl	4380 <g_param_spec_object@plt>
   23a4c:	mov	r1, #1
   23a50:	mov	r2, r0
   23a54:	mov	r0, r4
   23a58:	add	sp, sp, #8
   23a5c:	pop	{r4, lr}
   23a60:	b	3f54 <g_object_class_install_property@plt>
   23a64:	ldrdeq	fp, [r1], -r8
   23a68:	strdeq	r0, [r0], -r4
   23a6c:	andeq	r0, r0, r4, lsr #2
   23a70:	muleq	r0, r4, r0
   23a74:	andeq	r3, r0, r0, lsr #8
   23a78:	push	{r4, r5, r6, r7, r8, lr}
   23a7c:	dmb	sy
   23a80:	ldr	r4, [pc, #160]	; 23b28 <main@@Base+0x1f6f0>
   23a84:	sub	sp, sp, #16
   23a88:	add	r4, pc, r4
   23a8c:	ldr	r5, [r4, #8]
   23a90:	dmb	sy
   23a94:	cmp	r5, #0
   23a98:	beq	23ab0 <main@@Base+0x1f678>
   23a9c:	ldr	r3, [pc, #136]	; 23b2c <main@@Base+0x1f6f4>
   23aa0:	add	r3, pc, r3
   23aa4:	ldr	r0, [r3, #8]
   23aa8:	add	sp, sp, #16
   23aac:	pop	{r4, r5, r6, r7, r8, pc}
   23ab0:	add	r6, r4, #8
   23ab4:	mov	r0, r6
   23ab8:	bl	3d50 <g_once_init_enter@plt>
   23abc:	cmp	r0, #0
   23ac0:	beq	23a9c <main@@Base+0x1f664>
   23ac4:	bl	1f330 <main@@Base+0x1aef8>
   23ac8:	mov	r7, #12
   23acc:	mov	r8, r0
   23ad0:	ldr	r0, [pc, #88]	; 23b30 <main@@Base+0x1f6f8>
   23ad4:	add	r0, pc, r0
   23ad8:	bl	3df8 <g_intern_static_string@plt>
   23adc:	ldr	r3, [pc, #80]	; 23b34 <main@@Base+0x1f6fc>
   23ae0:	str	r5, [sp, #8]
   23ae4:	mov	r2, #352	; 0x160
   23ae8:	add	r3, pc, r3
   23aec:	str	r3, [sp, #4]
   23af0:	ldr	r3, [pc, #64]	; 23b38 <main@@Base+0x1f700>
   23af4:	str	r7, [sp]
   23af8:	add	r3, pc, r3
   23afc:	mov	r1, r0
   23b00:	mov	r0, r8
   23b04:	bl	3894 <g_type_register_static_simple@plt>
   23b08:	mov	r1, r7
   23b0c:	mov	r5, r0
   23b10:	bl	3edc <g_type_add_instance_private@plt>
   23b14:	mov	r1, r5
   23b18:	str	r0, [r4, #4]
   23b1c:	mov	r0, r6
   23b20:	bl	4140 <g_once_init_leave@plt>
   23b24:	b	23a9c <main@@Base+0x1f664>
   23b28:	andeq	fp, r1, r4, lsr #12
   23b2c:	andeq	fp, r1, ip, lsl #12
   23b30:	andeq	r7, r0, ip, asr #3
   23b34:			; <UNDEFINED> instruction: 0xfffffe94
   23b38:			; <UNDEFINED> instruction: 0xfffffec0
   23b3c:	push	{r4, r5, r6, r7, lr}
   23b40:	sub	sp, sp, #28
   23b44:	mov	r4, r1
   23b48:	mov	r7, r2
   23b4c:	mov	r6, r3
   23b50:	mov	r5, r0
   23b54:	bl	23a78 <main@@Base+0x1f640>
   23b58:	mov	r1, r0
   23b5c:	mov	r0, r5
   23b60:	bl	39d8 <g_type_check_instance_cast@plt>
   23b64:	ldr	r3, [pc, #136]	; 23bf4 <main@@Base+0x1f7bc>
   23b68:	cmp	r4, #1
   23b6c:	add	r3, pc, r3
   23b70:	ldr	r3, [r3, #4]
   23b74:	mov	r2, r0
   23b78:	beq	23be0 <main@@Base+0x1f7a8>
   23b7c:	ldm	r6, {r3, r7}
   23b80:	ldr	r0, [r3]
   23b84:	bl	3a50 <g_type_name@plt>
   23b88:	ldr	r3, [r5]
   23b8c:	mov	r6, r0
   23b90:	ldr	r0, [r3]
   23b94:	bl	3a50 <g_type_name@plt>
   23b98:	ldr	r2, [pc, #88]	; 23bf8 <main@@Base+0x1f7c0>
   23b9c:	mov	r3, #109	; 0x6d
   23ba0:	str	r3, [sp]
   23ba4:	add	r2, pc, r2
   23ba8:	ldr	r3, [pc, #76]	; 23bfc <main@@Base+0x1f7c4>
   23bac:	stmib	sp, {r2, r4}
   23bb0:	mov	r1, #16
   23bb4:	ldr	r2, [pc, #68]	; 23c00 <main@@Base+0x1f7c8>
   23bb8:	add	r3, pc, r3
   23bbc:	str	r7, [sp, #12]
   23bc0:	str	r6, [sp, #16]
   23bc4:	add	r2, pc, r2
   23bc8:	str	r0, [sp, #20]
   23bcc:	ldr	r0, [pc, #48]	; 23c04 <main@@Base+0x1f7cc>
   23bd0:	add	r0, pc, r0
   23bd4:	bl	3a38 <g_log@plt>
   23bd8:	add	sp, sp, #28
   23bdc:	pop	{r4, r5, r6, r7, pc}
   23be0:	mov	r0, r7
   23be4:	ldr	r1, [r2, r3]
   23be8:	add	sp, sp, #28
   23bec:	pop	{r4, r5, r6, r7, lr}
   23bf0:	b	3ec4 <g_value_set_object@plt>
   23bf4:	andeq	fp, r1, r0, asr #10
   23bf8:	andeq	r6, r0, r8, lsr ip
   23bfc:	strdeq	r7, [r0], -r4
   23c00:	andeq	r6, r0, ip, asr #23
   23c04:	andeq	r6, r0, r8, asr #5
   23c08:	push	{r4, r5, r6, lr}
   23c0c:	mov	r4, r0
   23c10:	bl	23a78 <main@@Base+0x1f640>
   23c14:	mov	r1, r0
   23c18:	mov	r0, r4
   23c1c:	bl	39d8 <g_type_check_instance_cast@plt>
   23c20:	ldr	r3, [pc, #80]	; 23c78 <main@@Base+0x1f840>
   23c24:	add	r3, pc, r3
   23c28:	ldr	r5, [r3, #4]
   23c2c:	add	r3, r0, r5
   23c30:	mov	r6, r0
   23c34:	ldr	r0, [r3, #4]
   23c38:	cmp	r0, #0
   23c3c:	beq	23c44 <main@@Base+0x1f80c>
   23c40:	bl	4110 <g_object_unref@plt>
   23c44:	ldr	r0, [r6, r5]
   23c48:	cmp	r0, #0
   23c4c:	beq	23c54 <main@@Base+0x1f81c>
   23c50:	bl	4110 <g_object_unref@plt>
   23c54:	ldr	r3, [pc, #32]	; 23c7c <main@@Base+0x1f844>
   23c58:	mov	r1, #80	; 0x50
   23c5c:	add	r3, pc, r3
   23c60:	ldr	r0, [r3]
   23c64:	bl	4374 <g_type_check_class_cast@plt>
   23c68:	ldr	r3, [r0, #24]
   23c6c:	mov	r0, r4
   23c70:	blx	r3
   23c74:	pop	{r4, r5, r6, pc}
   23c78:	andeq	fp, r1, r8, lsl #9
   23c7c:	andeq	fp, r1, r0, asr r4
   23c80:	push	{r3, r4, r5, lr}
   23c84:	mov	r4, r0
   23c88:	ldr	r3, [pc, #116]	; 23d04 <main@@Base+0x1f8cc>
   23c8c:	add	r3, pc, r3
   23c90:	ldr	r5, [r3, #4]
   23c94:	bl	23a78 <main@@Base+0x1f640>
   23c98:	cmp	r4, #0
   23c9c:	beq	23ccc <main@@Base+0x1f894>
   23ca0:	ldr	r3, [r4]
   23ca4:	cmp	r3, #0
   23ca8:	beq	23cb8 <main@@Base+0x1f880>
   23cac:	ldr	r3, [r3]
   23cb0:	cmp	r0, r3
   23cb4:	beq	23cf0 <main@@Base+0x1f8b8>
   23cb8:	mov	r1, r0
   23cbc:	mov	r0, r4
   23cc0:	bl	3fcc <g_type_check_instance_is_a@plt>
   23cc4:	cmp	r0, #0
   23cc8:	bne	23cf0 <main@@Base+0x1f8b8>
   23ccc:	ldr	r0, [pc, #52]	; 23d08 <main@@Base+0x1f8d0>
   23cd0:	ldr	r1, [pc, #52]	; 23d0c <main@@Base+0x1f8d4>
   23cd4:	ldr	r2, [pc, #52]	; 23d10 <main@@Base+0x1f8d8>
   23cd8:	add	r0, pc, r0
   23cdc:	add	r1, pc, r1
   23ce0:	add	r2, pc, r2
   23ce4:	bl	3870 <g_return_if_fail_warning@plt>
   23ce8:	mov	r0, #0
   23cec:	pop	{r3, r4, r5, pc}
   23cf0:	add	r4, r4, r5
   23cf4:	ldr	r0, [r4, #4]
   23cf8:	adds	r0, r0, #0
   23cfc:	movne	r0, #1
   23d00:	pop	{r3, r4, r5, pc}
   23d04:	andeq	fp, r1, r0, lsr #8
   23d08:	andeq	r6, r0, r0, asr #3
   23d0c:	andeq	r6, r0, r0, lsr pc
   23d10:	andeq	r6, r0, r4, ror #31

00023d14 <fu_usb_device_close@@Base>:
   23d14:	ldr	r3, [pc, #248]	; 23e14 <fu_usb_device_close@@Base+0x100>
   23d18:	push	{r4, r5, r6, r7, r8, lr}
   23d1c:	add	r3, pc, r3
   23d20:	mov	r4, r0
   23d24:	mov	r5, r1
   23d28:	ldr	r7, [r3, #4]
   23d2c:	ldr	r6, [r0]
   23d30:	bl	23a78 <main@@Base+0x1f640>
   23d34:	ldr	r3, [r4]
   23d38:	cmp	r3, #0
   23d3c:	beq	23d4c <fu_usb_device_close@@Base+0x38>
   23d40:	ldr	r3, [r3]
   23d44:	cmp	r0, r3
   23d48:	beq	23d88 <fu_usb_device_close@@Base+0x74>
   23d4c:	mov	r1, r0
   23d50:	mov	r0, r4
   23d54:	bl	3fcc <g_type_check_instance_is_a@plt>
   23d58:	subs	r8, r0, #0
   23d5c:	bne	23d88 <fu_usb_device_close@@Base+0x74>
   23d60:	ldr	r1, [pc, #176]	; 23e18 <fu_usb_device_close@@Base+0x104>
   23d64:	ldr	r0, [pc, #176]	; 23e1c <fu_usb_device_close@@Base+0x108>
   23d68:	ldr	r2, [pc, #176]	; 23e20 <fu_usb_device_close@@Base+0x10c>
   23d6c:	add	r1, pc, r1
   23d70:	add	r0, pc, r0
   23d74:	add	r1, r1, #24
   23d78:	add	r2, pc, r2
   23d7c:	bl	3870 <g_return_if_fail_warning@plt>
   23d80:	mov	r0, r8
   23d84:	pop	{r4, r5, r6, r7, r8, pc}
   23d88:	cmp	r5, #0
   23d8c:	beq	23dc4 <fu_usb_device_close@@Base+0xb0>
   23d90:	ldr	r3, [r5]
   23d94:	cmp	r3, #0
   23d98:	beq	23dc4 <fu_usb_device_close@@Base+0xb0>
   23d9c:	ldr	r1, [pc, #128]	; 23e24 <fu_usb_device_close@@Base+0x110>
   23da0:	ldr	r0, [pc, #128]	; 23e28 <fu_usb_device_close@@Base+0x114>
   23da4:	ldr	r2, [pc, #128]	; 23e2c <fu_usb_device_close@@Base+0x118>
   23da8:	add	r1, pc, r1
   23dac:	add	r0, pc, r0
   23db0:	add	r1, r1, #24
   23db4:	add	r2, pc, r2
   23db8:	bl	3870 <g_return_if_fail_warning@plt>
   23dbc:	mov	r0, #0
   23dc0:	pop	{r4, r5, r6, r7, r8, pc}
   23dc4:	add	r7, r4, r7
   23dc8:	ldr	r0, [r7, #4]
   23dcc:	cmp	r0, #0
   23dd0:	beq	23e0c <fu_usb_device_close@@Base+0xf8>
   23dd4:	ldr	r3, [r6, #232]	; 0xe8
   23dd8:	cmp	r3, #0
   23ddc:	beq	23e00 <fu_usb_device_close@@Base+0xec>
   23de0:	mov	r0, r4
   23de4:	mov	r1, r5
   23de8:	blx	r3
   23dec:	cmp	r0, #0
   23df0:	popeq	{r4, r5, r6, r7, r8, pc}
   23df4:	ldr	r0, [r7, #4]
   23df8:	cmp	r0, #0
   23dfc:	beq	23e0c <fu_usb_device_close@@Base+0xf8>
   23e00:	mov	r3, #0
   23e04:	str	r3, [r7, #4]
   23e08:	bl	4110 <g_object_unref@plt>
   23e0c:	mov	r0, #1
   23e10:	pop	{r4, r5, r6, r7, r8, pc}
   23e14:	muleq	r1, r0, r3
   23e18:	andeq	r6, r0, r0, lsr #29
   23e1c:	andeq	r6, r0, r8, lsr #2
   23e20:	andeq	r6, r0, ip, asr #30
   23e24:	andeq	r6, r0, r4, ror #28
   23e28:	andeq	r6, r0, ip, ror #1
   23e2c:	strheq	r3, [r0], -ip
   23e30:	ldr	r3, [pc, #240]	; 23f28 <fu_usb_device_close@@Base+0x214>
   23e34:	push	{r4, r5, r6, r7, r8, lr}
   23e38:	add	r3, pc, r3
   23e3c:	mov	r4, r0
   23e40:	mov	r5, r1
   23e44:	ldr	r7, [r3, #4]
   23e48:	ldr	r6, [r0]
   23e4c:	bl	23a78 <main@@Base+0x1f640>
   23e50:	ldr	r3, [r4]
   23e54:	cmp	r3, #0
   23e58:	beq	23e68 <fu_usb_device_close@@Base+0x154>
   23e5c:	ldr	r3, [r3]
   23e60:	cmp	r0, r3
   23e64:	beq	23ea4 <fu_usb_device_close@@Base+0x190>
   23e68:	mov	r1, r0
   23e6c:	mov	r0, r4
   23e70:	bl	3fcc <g_type_check_instance_is_a@plt>
   23e74:	subs	r8, r0, #0
   23e78:	bne	23ea4 <fu_usb_device_close@@Base+0x190>
   23e7c:	ldr	r1, [pc, #168]	; 23f2c <fu_usb_device_close@@Base+0x218>
   23e80:	ldr	r0, [pc, #168]	; 23f30 <fu_usb_device_close@@Base+0x21c>
   23e84:	ldr	r2, [pc, #168]	; 23f34 <fu_usb_device_close@@Base+0x220>
   23e88:	add	r1, pc, r1
   23e8c:	add	r0, pc, r0
   23e90:	add	r1, r1, #44	; 0x2c
   23e94:	add	r2, pc, r2
   23e98:	bl	3870 <g_return_if_fail_warning@plt>
   23e9c:	mov	r0, r8
   23ea0:	pop	{r4, r5, r6, r7, r8, pc}
   23ea4:	cmp	r5, #0
   23ea8:	beq	23ee0 <fu_usb_device_close@@Base+0x1cc>
   23eac:	ldr	r3, [r5]
   23eb0:	cmp	r3, #0
   23eb4:	beq	23ee0 <fu_usb_device_close@@Base+0x1cc>
   23eb8:	ldr	r1, [pc, #120]	; 23f38 <fu_usb_device_close@@Base+0x224>
   23ebc:	ldr	r0, [pc, #120]	; 23f3c <fu_usb_device_close@@Base+0x228>
   23ec0:	ldr	r2, [pc, #120]	; 23f40 <fu_usb_device_close@@Base+0x22c>
   23ec4:	add	r1, pc, r1
   23ec8:	add	r0, pc, r0
   23ecc:	add	r1, r1, #44	; 0x2c
   23ed0:	add	r2, pc, r2
   23ed4:	bl	3870 <g_return_if_fail_warning@plt>
   23ed8:	mov	r0, #0
   23edc:	pop	{r4, r5, r6, r7, r8, pc}
   23ee0:	add	r7, r4, r7
   23ee4:	ldr	r3, [r7, #8]
   23ee8:	cmp	r3, #0
   23eec:	bne	23f1c <fu_usb_device_close@@Base+0x208>
   23ef0:	ldr	r3, [r6, #236]	; 0xec
   23ef4:	cmp	r3, #0
   23ef8:	beq	23f10 <fu_usb_device_close@@Base+0x1fc>
   23efc:	mov	r0, r4
   23f00:	mov	r1, r5
   23f04:	blx	r3
   23f08:	cmp	r0, #0
   23f0c:	beq	23f24 <fu_usb_device_close@@Base+0x210>
   23f10:	mov	r0, #1
   23f14:	str	r0, [r7, #8]
   23f18:	pop	{r4, r5, r6, r7, r8, pc}
   23f1c:	mov	r0, #1
   23f20:	pop	{r4, r5, r6, r7, r8, pc}
   23f24:	pop	{r4, r5, r6, r7, r8, pc}
   23f28:	andeq	fp, r1, r4, ror r2
   23f2c:	andeq	r6, r0, r4, lsl #27
   23f30:	andeq	r6, r0, ip
   23f34:	andeq	r6, r0, r0, lsr lr
   23f38:	andeq	r6, r0, r8, asr #26
   23f3c:	ldrdeq	r5, [r0], -r0
   23f40:	andeq	r2, r0, r0, lsr #31

00023f44 <fu_usb_device_open@@Base>:
   23f44:	ldr	r3, [pc, #1208]	; 24404 <fu_usb_device_open@@Base+0x4c0>
   23f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23f4c:	add	r3, pc, r3
   23f50:	sub	sp, sp, #20
   23f54:	mov	r4, r0
   23f58:	mov	r6, r1
   23f5c:	ldr	r9, [r0]
   23f60:	ldr	r8, [r3, #4]
   23f64:	bl	408c <as_profile_new@plt>
   23f68:	mov	r5, r0
   23f6c:	bl	23a78 <main@@Base+0x1f640>
   23f70:	ldr	r3, [r4]
   23f74:	cmp	r3, #0
   23f78:	beq	23f88 <fu_usb_device_open@@Base+0x44>
   23f7c:	ldr	r3, [r3]
   23f80:	cmp	r0, r3
   23f84:	beq	23fdc <fu_usb_device_open@@Base+0x98>
   23f88:	mov	r1, r0
   23f8c:	mov	r0, r4
   23f90:	bl	3fcc <g_type_check_instance_is_a@plt>
   23f94:	cmp	r0, #0
   23f98:	bne	23fdc <fu_usb_device_open@@Base+0x98>
   23f9c:	ldr	r1, [pc, #1124]	; 24408 <fu_usb_device_open@@Base+0x4c4>
   23fa0:	ldr	r0, [pc, #1124]	; 2440c <fu_usb_device_open@@Base+0x4c8>
   23fa4:	ldr	r2, [pc, #1124]	; 24410 <fu_usb_device_open@@Base+0x4cc>
   23fa8:	add	r1, pc, r1
   23fac:	add	r0, pc, r0
   23fb0:	add	r1, r1, #64	; 0x40
   23fb4:	add	r2, pc, r2
   23fb8:	bl	3870 <g_return_if_fail_warning@plt>
   23fbc:	mov	r4, #0
   23fc0:	cmp	r5, #0
   23fc4:	beq	23fd0 <fu_usb_device_open@@Base+0x8c>
   23fc8:	mov	r0, r5
   23fcc:	bl	4110 <g_object_unref@plt>
   23fd0:	mov	r0, r4
   23fd4:	add	sp, sp, #20
   23fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23fdc:	cmp	r6, #0
   23fe0:	beq	24014 <fu_usb_device_open@@Base+0xd0>
   23fe4:	ldr	r3, [r6]
   23fe8:	cmp	r3, #0
   23fec:	beq	24014 <fu_usb_device_open@@Base+0xd0>
   23ff0:	ldr	r1, [pc, #1052]	; 24414 <fu_usb_device_open@@Base+0x4d0>
   23ff4:	ldr	r0, [pc, #1052]	; 24418 <fu_usb_device_open@@Base+0x4d4>
   23ff8:	ldr	r2, [pc, #1052]	; 2441c <fu_usb_device_open@@Base+0x4d8>
   23ffc:	add	r1, pc, r1
   24000:	add	r0, pc, r0
   24004:	add	r1, r1, #64	; 0x40
   24008:	add	r2, pc, r2
   2400c:	bl	3870 <g_return_if_fail_warning@plt>
   24010:	b	23fbc <fu_usb_device_open@@Base+0x78>
   24014:	add	sl, r4, r8
   24018:	ldr	r3, [sl, #4]
   2401c:	cmp	r3, #0
   24020:	movne	r4, #1
   24024:	bne	23fc0 <fu_usb_device_open@@Base+0x7c>
   24028:	mov	r0, r4
   2402c:	mov	r1, r6
   24030:	bl	23e30 <fu_usb_device_close@@Base+0x11c>
   24034:	cmp	r0, #0
   24038:	beq	23fbc <fu_usb_device_open@@Base+0x78>
   2403c:	ldr	r0, [r4, r8]
   24040:	bl	4050 <g_usb_device_get_vid@plt>
   24044:	mov	r7, r0
   24048:	ldr	r0, [r4, r8]
   2404c:	bl	3abc <g_usb_device_get_pid@plt>
   24050:	ldr	r1, [pc, #968]	; 24420 <fu_usb_device_open@@Base+0x4dc>
   24054:	mov	r3, r0
   24058:	mov	r2, r7
   2405c:	mov	r0, r5
   24060:	add	r1, pc, r1
   24064:	bl	39e4 <as_profile_start@plt>
   24068:	subs	r7, r0, #0
   2406c:	beq	2421c <fu_usb_device_open@@Base+0x2d8>
   24070:	ldr	r0, [r4, r8]
   24074:	mov	r1, r6
   24078:	bl	21dac <main@@Base+0x1d974>
   2407c:	cmp	r0, #0
   24080:	str	r0, [sp, #8]
   24084:	beq	241e0 <fu_usb_device_open@@Base+0x29c>
   24088:	bl	1f330 <main@@Base+0x1aef8>
   2408c:	mov	r1, r0
   24090:	mov	r0, r4
   24094:	bl	39d8 <g_type_check_instance_cast@plt>
   24098:	mov	fp, r0
   2409c:	bl	4290 <fwupd_device_get_type@plt>
   240a0:	mov	r1, r0
   240a4:	mov	r0, fp
   240a8:	bl	39d8 <g_type_check_instance_cast@plt>
   240ac:	bl	3f30 <fwupd_device_get_vendor@plt>
   240b0:	cmp	r0, #0
   240b4:	beq	242c0 <fu_usb_device_open@@Base+0x37c>
   240b8:	bl	1f330 <main@@Base+0x1aef8>
   240bc:	mov	r1, r0
   240c0:	mov	r0, r4
   240c4:	bl	39d8 <g_type_check_instance_cast@plt>
   240c8:	mov	fp, r0
   240cc:	bl	4290 <fwupd_device_get_type@plt>
   240d0:	mov	r1, r0
   240d4:	mov	r0, fp
   240d8:	bl	39d8 <g_type_check_instance_cast@plt>
   240dc:	bl	3f6c <fwupd_device_get_name@plt>
   240e0:	cmp	r0, #0
   240e4:	beq	24278 <fu_usb_device_open@@Base+0x334>
   240e8:	bl	1f330 <main@@Base+0x1aef8>
   240ec:	mov	r1, r0
   240f0:	mov	r0, r4
   240f4:	bl	39d8 <g_type_check_instance_cast@plt>
   240f8:	bl	20800 <main@@Base+0x1c3c8>
   240fc:	cmp	r0, #0
   24100:	beq	2431c <fu_usb_device_open@@Base+0x3d8>
   24104:	mov	r3, #0
   24108:	ldr	r0, [r4, r8]
   2410c:	mov	r1, #255	; 0xff
   24110:	str	r3, [sp]
   24114:	mov	r2, #70	; 0x46
   24118:	mov	r3, #87	; 0x57
   2411c:	bl	4368 <g_usb_device_get_custom_index@plt>
   24120:	subs	r1, r0, #0
   24124:	beq	2416c <fu_usb_device_open@@Base+0x228>
   24128:	ldr	r0, [r4, r8]
   2412c:	mov	r2, #0
   24130:	bl	42c0 <g_usb_device_get_string_descriptor@plt>
   24134:	mov	fp, r0
   24138:	bl	1f330 <main@@Base+0x1aef8>
   2413c:	mov	r1, r0
   24140:	mov	r0, r4
   24144:	bl	39d8 <g_type_check_instance_cast@plt>
   24148:	str	r0, [sp, #12]
   2414c:	bl	4290 <fwupd_device_get_type@plt>
   24150:	mov	r1, r0
   24154:	ldr	r0, [sp, #12]
   24158:	bl	39d8 <g_type_check_instance_cast@plt>
   2415c:	mov	r1, fp
   24160:	bl	3d80 <fwupd_device_set_version@plt>
   24164:	mov	r0, fp
   24168:	bl	3eac <g_free@plt>
   2416c:	mov	r3, #0
   24170:	ldr	r0, [r4, r8]
   24174:	mov	r1, #255	; 0xff
   24178:	str	r3, [sp]
   2417c:	mov	r2, #71	; 0x47
   24180:	mov	r3, #85	; 0x55
   24184:	bl	4368 <g_usb_device_get_custom_index@plt>
   24188:	subs	r1, r0, #0
   2418c:	bne	241e8 <fu_usb_device_open@@Base+0x2a4>
   24190:	ldr	r3, [r9, #228]	; 0xe4
   24194:	cmp	r3, #0
   24198:	beq	241c8 <fu_usb_device_open@@Base+0x284>
   2419c:	mov	r0, r4
   241a0:	mov	r1, r6
   241a4:	blx	r3
   241a8:	cmp	r0, #0
   241ac:	bne	241c8 <fu_usb_device_open@@Base+0x284>
   241b0:	ldr	r0, [sp, #8]
   241b4:	bl	4110 <g_object_unref@plt>
   241b8:	mov	r4, #0
   241bc:	mov	r0, r7
   241c0:	bl	4128 <as_profile_task_free@plt>
   241c4:	b	23fc0 <fu_usb_device_open@@Base+0x7c>
   241c8:	ldr	r3, [sp, #8]
   241cc:	mov	r4, #1
   241d0:	str	r3, [sl, #4]
   241d4:	cmp	r7, #0
   241d8:	bne	241bc <fu_usb_device_open@@Base+0x278>
   241dc:	b	23fc0 <fu_usb_device_open@@Base+0x7c>
   241e0:	ldr	r4, [sp, #8]
   241e4:	b	241d4 <fu_usb_device_open@@Base+0x290>
   241e8:	ldr	r0, [r4, r8]
   241ec:	mov	r2, #0
   241f0:	bl	42c0 <g_usb_device_get_string_descriptor@plt>
   241f4:	mov	r8, r0
   241f8:	bl	1f330 <main@@Base+0x1aef8>
   241fc:	mov	r1, r0
   24200:	mov	r0, r4
   24204:	bl	39d8 <g_type_check_instance_cast@plt>
   24208:	mov	r1, r8
   2420c:	bl	1fe30 <main@@Base+0x1b9f8>
   24210:	mov	r0, r8
   24214:	bl	3eac <g_free@plt>
   24218:	b	24190 <fu_usb_device_open@@Base+0x24c>
   2421c:	ldr	r1, [pc, #512]	; 24424 <fu_usb_device_open@@Base+0x4e0>
   24220:	mov	r2, #222	; 0xde
   24224:	ldr	r3, [pc, #508]	; 24428 <fu_usb_device_open@@Base+0x4e4>
   24228:	add	r1, pc, r1
   2422c:	ldr	r0, [pc, #504]	; 2442c <fu_usb_device_open@@Base+0x4e8>
   24230:	str	r1, [sp]
   24234:	add	r3, pc, r3
   24238:	ldr	r1, [pc, #496]	; 24430 <fu_usb_device_open@@Base+0x4ec>
   2423c:	add	r0, pc, r0
   24240:	add	r3, r3, #64	; 0x40
   24244:	add	r1, pc, r1
   24248:	bl	42e4 <g_assertion_message_expr@plt>
   2424c:	mov	r4, r0
   24250:	cmp	r7, #0
   24254:	beq	24260 <fu_usb_device_open@@Base+0x31c>
   24258:	mov	r0, r7
   2425c:	bl	4128 <as_profile_task_free@plt>
   24260:	cmp	r5, #0
   24264:	beq	24270 <fu_usb_device_open@@Base+0x32c>
   24268:	mov	r0, r5
   2426c:	bl	4110 <g_object_unref@plt>
   24270:	mov	r0, r4
   24274:	bl	42f0 <_Unwind_Resume@plt>
   24278:	ldr	r0, [r4, r8]
   2427c:	bl	3b1c <g_usb_device_get_product_index@plt>
   24280:	subs	r1, r0, #0
   24284:	beq	240e8 <fu_usb_device_open@@Base+0x1a4>
   24288:	ldr	r0, [r4, r8]
   2428c:	mov	r2, r6
   24290:	bl	42c0 <g_usb_device_get_string_descriptor@plt>
   24294:	subs	fp, r0, #0
   24298:	beq	24364 <fu_usb_device_open@@Base+0x420>
   2429c:	bl	1f330 <main@@Base+0x1aef8>
   242a0:	mov	r1, r0
   242a4:	mov	r0, r4
   242a8:	bl	39d8 <g_type_check_instance_cast@plt>
   242ac:	mov	r1, fp
   242b0:	bl	20454 <main@@Base+0x1c01c>
   242b4:	mov	r0, fp
   242b8:	bl	3eac <g_free@plt>
   242bc:	b	240e8 <fu_usb_device_open@@Base+0x1a4>
   242c0:	ldr	r0, [r4, r8]
   242c4:	bl	40c8 <g_usb_device_get_manufacturer_index@plt>
   242c8:	subs	r1, r0, #0
   242cc:	beq	240b8 <fu_usb_device_open@@Base+0x174>
   242d0:	ldr	r0, [r4, r8]
   242d4:	mov	r2, r6
   242d8:	bl	42c0 <g_usb_device_get_string_descriptor@plt>
   242dc:	subs	fp, r0, #0
   242e0:	beq	24364 <fu_usb_device_open@@Base+0x420>
   242e4:	bl	1f330 <main@@Base+0x1aef8>
   242e8:	mov	r1, r0
   242ec:	mov	r0, r4
   242f0:	bl	39d8 <g_type_check_instance_cast@plt>
   242f4:	str	r0, [sp, #12]
   242f8:	bl	4290 <fwupd_device_get_type@plt>
   242fc:	mov	r1, r0
   24300:	ldr	r0, [sp, #12]
   24304:	bl	39d8 <g_type_check_instance_cast@plt>
   24308:	mov	r1, fp
   2430c:	bl	3a08 <fwupd_device_set_vendor@plt>
   24310:	mov	r0, fp
   24314:	bl	3eac <g_free@plt>
   24318:	b	240b8 <fu_usb_device_open@@Base+0x174>
   2431c:	ldr	r0, [r4, r8]
   24320:	bl	3bf4 <g_usb_device_get_serial_number_index@plt>
   24324:	subs	r1, r0, #0
   24328:	beq	24104 <fu_usb_device_open@@Base+0x1c0>
   2432c:	ldr	r0, [r4, r8]
   24330:	mov	r2, r6
   24334:	bl	42c0 <g_usb_device_get_string_descriptor@plt>
   24338:	subs	fp, r0, #0
   2433c:	beq	24364 <fu_usb_device_open@@Base+0x420>
   24340:	bl	1f330 <main@@Base+0x1aef8>
   24344:	mov	r1, r0
   24348:	mov	r0, r4
   2434c:	bl	39d8 <g_type_check_instance_cast@plt>
   24350:	mov	r1, fp
   24354:	bl	20738 <main@@Base+0x1c300>
   24358:	mov	r0, fp
   2435c:	bl	3eac <g_free@plt>
   24360:	b	24104 <fu_usb_device_open@@Base+0x1c0>
   24364:	bl	3eac <g_free@plt>
   24368:	b	241b0 <fu_usb_device_open@@Base+0x26c>
   2436c:	mov	r4, r0
   24370:	mov	fp, #0
   24374:	mov	r0, fp
   24378:	bl	3eac <g_free@plt>
   2437c:	ldr	r0, [sp, #8]
   24380:	bl	4110 <g_object_unref@plt>
   24384:	b	24250 <fu_usb_device_open@@Base+0x30c>
   24388:	mov	r4, r0
   2438c:	b	24374 <fu_usb_device_open@@Base+0x430>
   24390:	mov	r4, r0
   24394:	b	2437c <fu_usb_device_open@@Base+0x438>
   24398:	b	24388 <fu_usb_device_open@@Base+0x444>
   2439c:	b	2436c <fu_usb_device_open@@Base+0x428>
   243a0:	mov	r4, r0
   243a4:	mov	r7, #0
   243a8:	b	24250 <fu_usb_device_open@@Base+0x30c>
   243ac:	b	243a0 <fu_usb_device_open@@Base+0x45c>
   243b0:	b	24388 <fu_usb_device_open@@Base+0x444>
   243b4:	b	2436c <fu_usb_device_open@@Base+0x428>
   243b8:	b	243a0 <fu_usb_device_open@@Base+0x45c>
   243bc:	b	243a0 <fu_usb_device_open@@Base+0x45c>
   243c0:	b	243a0 <fu_usb_device_open@@Base+0x45c>
   243c4:	b	243a0 <fu_usb_device_open@@Base+0x45c>
   243c8:	b	243a0 <fu_usb_device_open@@Base+0x45c>
   243cc:	b	243a0 <fu_usb_device_open@@Base+0x45c>
   243d0:	mov	r4, r0
   243d4:	mov	r0, r8
   243d8:	bl	3eac <g_free@plt>
   243dc:	b	2437c <fu_usb_device_open@@Base+0x438>
   243e0:	mov	r4, r0
   243e4:	mov	r8, #0
   243e8:	b	243d4 <fu_usb_device_open@@Base+0x490>
   243ec:	mov	r4, r0
   243f0:	b	24260 <fu_usb_device_open@@Base+0x31c>
   243f4:	mov	r4, r0
   243f8:	b	24258 <fu_usb_device_open@@Base+0x314>
   243fc:	b	24388 <fu_usb_device_open@@Base+0x444>
   24400:	b	2436c <fu_usb_device_open@@Base+0x428>
   24404:	andeq	fp, r1, r0, ror #2
   24408:	andeq	r6, r0, r4, ror #24
   2440c:	andeq	r5, r0, ip, ror #29
   24410:	andeq	r6, r0, r0, lsl sp
   24414:	andeq	r6, r0, r0, lsl ip
   24418:	muleq	r0, r8, lr
   2441c:	andeq	r2, r0, r8, ror #28
   24420:	andeq	r6, r0, r0, lsl #25
   24424:	andeq	r6, r0, ip, asr #21
   24428:	ldrdeq	r6, [r0], -r8
   2442c:	andeq	r5, r0, ip, asr ip
   24430:	andeq	r6, r0, r8, ror #20
   24434:	push	{r3, r4, r5, lr}
   24438:	mov	r4, r0
   2443c:	ldr	r3, [pc, #108]	; 244b0 <fu_usb_device_open@@Base+0x56c>
   24440:	add	r3, pc, r3
   24444:	ldr	r5, [r3, #4]
   24448:	bl	23a78 <main@@Base+0x1f640>
   2444c:	cmp	r4, #0
   24450:	beq	24480 <fu_usb_device_open@@Base+0x53c>
   24454:	ldr	r3, [r4]
   24458:	cmp	r3, #0
   2445c:	beq	2446c <fu_usb_device_open@@Base+0x528>
   24460:	ldr	r3, [r3]
   24464:	cmp	r0, r3
   24468:	beq	244a8 <fu_usb_device_open@@Base+0x564>
   2446c:	mov	r1, r0
   24470:	mov	r0, r4
   24474:	bl	3fcc <g_type_check_instance_is_a@plt>
   24478:	cmp	r0, #0
   2447c:	bne	244a8 <fu_usb_device_open@@Base+0x564>
   24480:	ldr	r1, [pc, #44]	; 244b4 <fu_usb_device_open@@Base+0x570>
   24484:	ldr	r0, [pc, #44]	; 244b8 <fu_usb_device_open@@Base+0x574>
   24488:	ldr	r2, [pc, #44]	; 244bc <fu_usb_device_open@@Base+0x578>
   2448c:	add	r1, pc, r1
   24490:	add	r0, pc, r0
   24494:	add	r1, r1, #84	; 0x54
   24498:	add	r2, pc, r2
   2449c:	bl	3870 <g_return_if_fail_warning@plt>
   244a0:	mov	r0, #0
   244a4:	pop	{r3, r4, r5, pc}
   244a8:	ldr	r0, [r4, r5]
   244ac:	pop	{r3, r4, r5, pc}
   244b0:	andeq	sl, r1, ip, ror #24
   244b4:	andeq	r6, r0, r0, lsl #15
   244b8:	andeq	r5, r0, r8, lsl #20
   244bc:	andeq	r6, r0, ip, lsr #16
   244c0:	push	{r4, r5, r6, r7, r8, lr}
   244c4:	mov	r4, r0
   244c8:	bl	1f330 <main@@Base+0x1aef8>
   244cc:	mov	r1, r0
   244d0:	mov	r0, r4
   244d4:	bl	39d8 <g_type_check_instance_cast@plt>
   244d8:	bl	214d0 <main@@Base+0x1d098>
   244dc:	mov	r5, r0
   244e0:	mov	r0, r4
   244e4:	bl	24434 <fu_usb_device_open@@Base+0x4f0>
   244e8:	ldr	r3, [r4]
   244ec:	mov	r6, r0
   244f0:	ldr	r0, [r3]
   244f4:	bl	3a50 <g_type_name@plt>
   244f8:	cmp	r5, #0
   244fc:	mov	r7, r0
   24500:	popeq	{r4, r5, r6, r7, r8, pc}
   24504:	ldr	r8, [pc, #540]	; 24728 <fu_usb_device_open@@Base+0x7e4>
   24508:	mov	r3, r0
   2450c:	ldr	r2, [pc, #536]	; 2472c <fu_usb_device_open@@Base+0x7e8>
   24510:	mov	r1, #128	; 0x80
   24514:	add	r8, pc, r8
   24518:	add	r2, pc, r2
   2451c:	mov	r0, r8
   24520:	bl	3a38 <g_log@plt>
   24524:	mov	r1, r7
   24528:	mov	r0, r5
   2452c:	mov	r2, r6
   24530:	bl	2341c <main@@Base+0x1efe4>
   24534:	subs	r7, r0, #0
   24538:	beq	2456c <fu_usb_device_open@@Base+0x628>
   2453c:	ldr	r2, [pc, #492]	; 24730 <fu_usb_device_open@@Base+0x7ec>
   24540:	mov	r1, #128	; 0x80
   24544:	mov	r3, r7
   24548:	mov	r0, r8
   2454c:	add	r2, pc, r2
   24550:	bl	3a38 <g_log@plt>
   24554:	bl	1f330 <main@@Base+0x1aef8>
   24558:	mov	r1, r0
   2455c:	mov	r0, r4
   24560:	bl	39d8 <g_type_check_instance_cast@plt>
   24564:	mov	r1, r7
   24568:	bl	2088c <main@@Base+0x1c454>
   2456c:	bl	1f330 <main@@Base+0x1aef8>
   24570:	mov	r1, r0
   24574:	mov	r0, r4
   24578:	bl	39d8 <g_type_check_instance_cast@plt>
   2457c:	bl	20b38 <main@@Base+0x1c700>
   24580:	ldr	r2, [pc, #428]	; 24734 <fu_usb_device_open@@Base+0x7f0>
   24584:	mov	r1, #128	; 0x80
   24588:	add	r2, pc, r2
   2458c:	mov	r3, r0
   24590:	ldr	r0, [pc, #416]	; 24738 <fu_usb_device_open@@Base+0x7f4>
   24594:	add	r0, pc, r0
   24598:	bl	3a38 <g_log@plt>
   2459c:	ldr	r1, [pc, #408]	; 2473c <fu_usb_device_open@@Base+0x7f8>
   245a0:	mov	r0, r5
   245a4:	mov	r2, r6
   245a8:	add	r1, pc, r1
   245ac:	bl	2341c <main@@Base+0x1efe4>
   245b0:	subs	r7, r0, #0
   245b4:	beq	245d0 <fu_usb_device_open@@Base+0x68c>
   245b8:	bl	1f330 <main@@Base+0x1aef8>
   245bc:	mov	r1, r0
   245c0:	mov	r0, r4
   245c4:	bl	39d8 <g_type_check_instance_cast@plt>
   245c8:	mov	r1, r7
   245cc:	bl	20454 <main@@Base+0x1c01c>
   245d0:	ldr	r1, [pc, #360]	; 24740 <fu_usb_device_open@@Base+0x7fc>
   245d4:	mov	r0, r5
   245d8:	mov	r2, r6
   245dc:	add	r1, pc, r1
   245e0:	bl	2341c <main@@Base+0x1efe4>
   245e4:	subs	r7, r0, #0
   245e8:	beq	24618 <fu_usb_device_open@@Base+0x6d4>
   245ec:	bl	1f330 <main@@Base+0x1aef8>
   245f0:	mov	r1, r0
   245f4:	mov	r0, r4
   245f8:	bl	39d8 <g_type_check_instance_cast@plt>
   245fc:	mov	r8, r0
   24600:	bl	4290 <fwupd_device_get_type@plt>
   24604:	mov	r1, r0
   24608:	mov	r0, r8
   2460c:	bl	39d8 <g_type_check_instance_cast@plt>
   24610:	mov	r1, r7
   24614:	bl	4200 <fwupd_device_set_summary@plt>
   24618:	ldr	r1, [pc, #292]	; 24744 <fu_usb_device_open@@Base+0x800>
   2461c:	mov	r0, r5
   24620:	mov	r2, r6
   24624:	add	r1, pc, r1
   24628:	bl	2341c <main@@Base+0x1efe4>
   2462c:	subs	r7, r0, #0
   24630:	beq	24660 <fu_usb_device_open@@Base+0x71c>
   24634:	bl	1f330 <main@@Base+0x1aef8>
   24638:	mov	r1, r0
   2463c:	mov	r0, r4
   24640:	bl	39d8 <g_type_check_instance_cast@plt>
   24644:	mov	r8, r0
   24648:	bl	4290 <fwupd_device_get_type@plt>
   2464c:	mov	r1, r0
   24650:	mov	r0, r8
   24654:	bl	39d8 <g_type_check_instance_cast@plt>
   24658:	mov	r1, r7
   2465c:	bl	3a08 <fwupd_device_set_vendor@plt>
   24660:	ldr	r1, [pc, #224]	; 24748 <fu_usb_device_open@@Base+0x804>
   24664:	mov	r0, r5
   24668:	mov	r2, r6
   2466c:	add	r1, pc, r1
   24670:	bl	2341c <main@@Base+0x1efe4>
   24674:	subs	r7, r0, #0
   24678:	beq	246a8 <fu_usb_device_open@@Base+0x764>
   2467c:	bl	1f330 <main@@Base+0x1aef8>
   24680:	mov	r1, r0
   24684:	mov	r0, r4
   24688:	bl	39d8 <g_type_check_instance_cast@plt>
   2468c:	mov	r8, r0
   24690:	bl	4290 <fwupd_device_get_type@plt>
   24694:	mov	r1, r0
   24698:	mov	r0, r8
   2469c:	bl	39d8 <g_type_check_instance_cast@plt>
   246a0:	mov	r1, r7
   246a4:	bl	3d80 <fwupd_device_set_version@plt>
   246a8:	ldr	r1, [pc, #156]	; 2474c <fu_usb_device_open@@Base+0x808>
   246ac:	mov	r0, r5
   246b0:	mov	r2, r6
   246b4:	add	r1, pc, r1
   246b8:	bl	2341c <main@@Base+0x1efe4>
   246bc:	subs	r7, r0, #0
   246c0:	beq	246f0 <fu_usb_device_open@@Base+0x7ac>
   246c4:	bl	1f330 <main@@Base+0x1aef8>
   246c8:	mov	r1, r0
   246cc:	mov	r0, r4
   246d0:	bl	39d8 <g_type_check_instance_cast@plt>
   246d4:	mov	r8, r0
   246d8:	bl	4290 <fwupd_device_get_type@plt>
   246dc:	mov	r1, r0
   246e0:	mov	r0, r8
   246e4:	bl	39d8 <g_type_check_instance_cast@plt>
   246e8:	mov	r1, r7
   246ec:	bl	42d8 <fwupd_device_add_icon@plt>
   246f0:	ldr	r1, [pc, #88]	; 24750 <fu_usb_device_open@@Base+0x80c>
   246f4:	mov	r0, r5
   246f8:	mov	r2, r6
   246fc:	add	r1, pc, r1
   24700:	bl	2341c <main@@Base+0x1efe4>
   24704:	subs	r5, r0, #0
   24708:	popeq	{r4, r5, r6, r7, r8, pc}
   2470c:	bl	1f330 <main@@Base+0x1aef8>
   24710:	mov	r1, r0
   24714:	mov	r0, r4
   24718:	bl	39d8 <g_type_check_instance_cast@plt>
   2471c:	mov	r1, r5
   24720:	pop	{r4, r5, r6, r7, r8, lr}
   24724:	b	1fe30 <main@@Base+0x1b9f8>
   24728:	andeq	r5, r0, r4, lsl #19
   2472c:	andeq	r6, r0, ip, ror #15
   24730:	ldrdeq	r6, [r0], -ip
   24734:	andeq	r6, r0, r0, asr #15
   24738:	andeq	r5, r0, r4, lsl #18
   2473c:	andeq	r6, r0, r8, asr #15
   24740:	andeq	r6, r0, r8, lsr #15
   24744:	andeq	r6, r0, r4, ror r7
   24748:	andeq	r6, r0, r0, asr #14
   2474c:	andeq	r6, r0, ip, lsl #14
   24750:	ldrdeq	r6, [r0], -r8
   24754:	b	244c0 <fu_usb_device_open@@Base+0x57c>
   24758:	ldr	r3, [pc, #820]	; 24a94 <fu_usb_device_open@@Base+0xb50>
   2475c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24760:	add	r3, pc, r3
   24764:	mov	r5, r0
   24768:	mov	r4, r1
   2476c:	ldr	r6, [r3, #4]
   24770:	bl	23a78 <main@@Base+0x1f640>
   24774:	cmp	r5, #0
   24778:	beq	247a8 <fu_usb_device_open@@Base+0x864>
   2477c:	ldr	r3, [r5]
   24780:	cmp	r3, #0
   24784:	beq	24794 <fu_usb_device_open@@Base+0x850>
   24788:	ldr	r3, [r3]
   2478c:	cmp	r0, r3
   24790:	beq	247e4 <fu_usb_device_open@@Base+0x8a0>
   24794:	mov	r1, r0
   24798:	mov	r0, r5
   2479c:	bl	3fcc <g_type_check_instance_is_a@plt>
   247a0:	cmp	r0, #0
   247a4:	bne	247e4 <fu_usb_device_open@@Base+0x8a0>
   247a8:	ldr	r1, [pc, #744]	; 24a98 <fu_usb_device_open@@Base+0xb54>
   247ac:	ldr	r0, [pc, #744]	; 24a9c <fu_usb_device_open@@Base+0xb58>
   247b0:	ldr	r2, [pc, #744]	; 24aa0 <fu_usb_device_open@@Base+0xb5c>
   247b4:	add	r1, pc, r1
   247b8:	add	r0, pc, r0
   247bc:	add	r1, r1, #108	; 0x6c
   247c0:	add	r2, pc, r2
   247c4:	bl	3870 <g_return_if_fail_warning@plt>
   247c8:	mov	r0, #0
   247cc:	bl	3eac <g_free@plt>
   247d0:	mov	r0, #0
   247d4:	bl	3eac <g_free@plt>
   247d8:	mov	r0, #0
   247dc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   247e0:	b	3eac <g_free@plt>
   247e4:	ldr	r7, [r5, r6]
   247e8:	add	r8, r5, r6
   247ec:	mov	r3, #0
   247f0:	cmp	r4, r7
   247f4:	str	r3, [r8, #8]
   247f8:	beq	24820 <fu_usb_device_open@@Base+0x8dc>
   247fc:	cmp	r4, #0
   24800:	beq	2480c <fu_usb_device_open@@Base+0x8c8>
   24804:	mov	r0, r4
   24808:	bl	381c <g_object_ref@plt>
   2480c:	cmp	r7, #0
   24810:	str	r4, [r5, r6]
   24814:	beq	24820 <fu_usb_device_open@@Base+0x8dc>
   24818:	mov	r0, r7
   2481c:	bl	4110 <g_object_unref@plt>
   24820:	cmp	r4, #0
   24824:	beq	249a4 <fu_usb_device_open@@Base+0xa60>
   24828:	mov	r0, r4
   2482c:	bl	4050 <g_usb_device_get_vid@plt>
   24830:	mov	r6, r0
   24834:	mov	r0, r4
   24838:	bl	3abc <g_usb_device_get_pid@plt>
   2483c:	mov	r2, r0
   24840:	ldr	r0, [pc, #604]	; 24aa4 <fu_usb_device_open@@Base+0xb60>
   24844:	mov	r1, r6
   24848:	add	r0, pc, r0
   2484c:	bl	3c18 <g_strdup_printf@plt>
   24850:	mov	r9, r0
   24854:	bl	1f330 <main@@Base+0x1aef8>
   24858:	mov	r1, r0
   2485c:	mov	r0, r5
   24860:	bl	39d8 <g_type_check_instance_cast@plt>
   24864:	mov	r1, r9
   24868:	bl	1fe30 <main@@Base+0x1b9f8>
   2486c:	mov	r0, r4
   24870:	bl	3c3c <g_usb_device_get_release@plt>
   24874:	mov	r6, r0
   24878:	mov	r0, r4
   2487c:	bl	4050 <g_usb_device_get_vid@plt>
   24880:	mov	r7, r0
   24884:	mov	r0, r4
   24888:	bl	3abc <g_usb_device_get_pid@plt>
   2488c:	mov	r2, r0
   24890:	ldr	r0, [pc, #528]	; 24aa8 <fu_usb_device_open@@Base+0xb64>
   24894:	mov	r1, r7
   24898:	mov	r3, r6
   2489c:	add	r0, pc, r0
   248a0:	bl	3c18 <g_strdup_printf@plt>
   248a4:	mov	r8, r0
   248a8:	bl	1f330 <main@@Base+0x1aef8>
   248ac:	mov	r1, r0
   248b0:	mov	r0, r5
   248b4:	bl	39d8 <g_type_check_instance_cast@plt>
   248b8:	mov	r1, r8
   248bc:	bl	1fe30 <main@@Base+0x1b9f8>
   248c0:	mov	r0, r4
   248c4:	bl	4050 <g_usb_device_get_vid@plt>
   248c8:	mov	r1, r0
   248cc:	ldr	r0, [pc, #472]	; 24aac <fu_usb_device_open@@Base+0xb68>
   248d0:	add	r0, pc, r0
   248d4:	bl	3c18 <g_strdup_printf@plt>
   248d8:	mov	r7, r0
   248dc:	bl	1f330 <main@@Base+0x1aef8>
   248e0:	mov	r1, r0
   248e4:	mov	r0, r5
   248e8:	bl	39d8 <g_type_check_instance_cast@plt>
   248ec:	mov	sl, r0
   248f0:	bl	4290 <fwupd_device_get_type@plt>
   248f4:	mov	r1, r0
   248f8:	mov	r0, sl
   248fc:	bl	39d8 <g_type_check_instance_cast@plt>
   24900:	mov	r1, r7
   24904:	bl	3e94 <fwupd_device_set_vendor_id@plt>
   24908:	cmp	r6, #0
   2490c:	bne	2495c <fu_usb_device_open@@Base+0xa18>
   24910:	bl	1f330 <main@@Base+0x1aef8>
   24914:	mov	r1, r0
   24918:	mov	r0, r5
   2491c:	bl	39d8 <g_type_check_instance_cast@plt>
   24920:	mov	r6, r0
   24924:	mov	r0, r4
   24928:	bl	4170 <g_usb_device_get_platform_id@plt>
   2492c:	mov	r1, r0
   24930:	mov	r0, r6
   24934:	bl	209e0 <main@@Base+0x1c5a8>
   24938:	mov	r0, r5
   2493c:	bl	244c0 <fu_usb_device_open@@Base+0x57c>
   24940:	mov	r0, r7
   24944:	bl	3eac <g_free@plt>
   24948:	mov	r0, r8
   2494c:	bl	3eac <g_free@plt>
   24950:	mov	r0, r9
   24954:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   24958:	b	3eac <g_free@plt>
   2495c:	mov	r0, r6
   24960:	mov	r1, #2
   24964:	bl	3c60 <as_utils_version_from_uint16@plt>
   24968:	mov	r6, r0
   2496c:	bl	1f330 <main@@Base+0x1aef8>
   24970:	mov	r1, r0
   24974:	mov	r0, r5
   24978:	bl	39d8 <g_type_check_instance_cast@plt>
   2497c:	mov	sl, r0
   24980:	bl	4290 <fwupd_device_get_type@plt>
   24984:	mov	r1, r0
   24988:	mov	r0, sl
   2498c:	bl	39d8 <g_type_check_instance_cast@plt>
   24990:	mov	r1, r6
   24994:	bl	3d80 <fwupd_device_set_version@plt>
   24998:	mov	r0, r6
   2499c:	bl	3eac <g_free@plt>
   249a0:	b	24910 <fu_usb_device_open@@Base+0x9cc>
   249a4:	ldr	r0, [r8, #4]
   249a8:	cmp	r0, #0
   249ac:	beq	247c8 <fu_usb_device_open@@Base+0x884>
   249b0:	str	r4, [r8, #4]
   249b4:	bl	4110 <g_object_unref@plt>
   249b8:	b	247c8 <fu_usb_device_open@@Base+0x884>
   249bc:	mov	r4, r0
   249c0:	mov	r0, r6
   249c4:	bl	3eac <g_free@plt>
   249c8:	mov	r0, r7
   249cc:	bl	3eac <g_free@plt>
   249d0:	mov	r0, r8
   249d4:	bl	3eac <g_free@plt>
   249d8:	mov	r0, r9
   249dc:	bl	3eac <g_free@plt>
   249e0:	mov	r0, r4
   249e4:	bl	42f0 <_Unwind_Resume@plt>
   249e8:	mov	r7, #0
   249ec:	mov	r4, r0
   249f0:	mov	r8, r7
   249f4:	mov	r9, r7
   249f8:	b	249c8 <fu_usb_device_open@@Base+0xa84>
   249fc:	b	249e8 <fu_usb_device_open@@Base+0xaa4>
   24a00:	mov	r4, r0
   24a04:	mov	r7, #0
   24a08:	b	249c8 <fu_usb_device_open@@Base+0xa84>
   24a0c:	b	24a00 <fu_usb_device_open@@Base+0xabc>
   24a10:	b	24a00 <fu_usb_device_open@@Base+0xabc>
   24a14:	b	24a00 <fu_usb_device_open@@Base+0xabc>
   24a18:	mov	r7, #0
   24a1c:	mov	r4, r0
   24a20:	mov	r8, r7
   24a24:	b	249c8 <fu_usb_device_open@@Base+0xa84>
   24a28:	b	24a18 <fu_usb_device_open@@Base+0xad4>
   24a2c:	b	24a18 <fu_usb_device_open@@Base+0xad4>
   24a30:	b	24a18 <fu_usb_device_open@@Base+0xad4>
   24a34:	mov	r4, r0
   24a38:	b	249c8 <fu_usb_device_open@@Base+0xa84>
   24a3c:	b	24a00 <fu_usb_device_open@@Base+0xabc>
   24a40:	b	249e8 <fu_usb_device_open@@Base+0xaa4>
   24a44:	b	249e8 <fu_usb_device_open@@Base+0xaa4>
   24a48:	b	24a18 <fu_usb_device_open@@Base+0xad4>
   24a4c:	b	24a18 <fu_usb_device_open@@Base+0xad4>
   24a50:	b	24a18 <fu_usb_device_open@@Base+0xad4>
   24a54:	b	249e8 <fu_usb_device_open@@Base+0xaa4>
   24a58:	b	249e8 <fu_usb_device_open@@Base+0xaa4>
   24a5c:	mov	r4, r0
   24a60:	mov	r9, #0
   24a64:	b	249d8 <fu_usb_device_open@@Base+0xa94>
   24a68:	mov	r8, #0
   24a6c:	mov	r4, r0
   24a70:	mov	r9, r8
   24a74:	b	249d0 <fu_usb_device_open@@Base+0xa8c>
   24a78:	b	249e8 <fu_usb_device_open@@Base+0xaa4>
   24a7c:	b	249e8 <fu_usb_device_open@@Base+0xaa4>
   24a80:	b	249e8 <fu_usb_device_open@@Base+0xaa4>
   24a84:	mov	r4, r0
   24a88:	b	249d8 <fu_usb_device_open@@Base+0xa94>
   24a8c:	mov	r4, r0
   24a90:	b	249d0 <fu_usb_device_open@@Base+0xa8c>
   24a94:	andeq	sl, r1, ip, asr #18
   24a98:	andeq	r6, r0, r8, asr r4
   24a9c:	andeq	r5, r0, r0, ror #13
   24aa0:	andeq	r6, r0, r4, lsl #10
   24aa4:	andeq	r6, r0, r4, asr #6
   24aa8:	ldrdeq	r6, [r0], -r0
   24aac:	andeq	r6, r0, r8, lsl r5
   24ab0:	push	{r4, r5, r6, r7, r8, lr}
   24ab4:	sub	sp, sp, #24
   24ab8:	mov	r4, r1
   24abc:	mov	r5, r0
   24ac0:	mov	r7, r2
   24ac4:	mov	r6, r3
   24ac8:	bl	23a78 <main@@Base+0x1f640>
   24acc:	mov	r1, r0
   24ad0:	mov	r0, r5
   24ad4:	bl	39d8 <g_type_check_instance_cast@plt>
   24ad8:	cmp	r4, #1
   24adc:	mov	r8, r0
   24ae0:	beq	24b48 <fu_usb_device_open@@Base+0xc04>
   24ae4:	ldm	r6, {r3, r7}
   24ae8:	ldr	r0, [r3]
   24aec:	bl	3a50 <g_type_name@plt>
   24af0:	ldr	r3, [r5]
   24af4:	mov	r6, r0
   24af8:	ldr	r0, [r3]
   24afc:	bl	3a50 <g_type_name@plt>
   24b00:	ldr	r2, [pc, #92]	; 24b64 <fu_usb_device_open@@Base+0xc20>
   24b04:	mov	r3, #124	; 0x7c
   24b08:	str	r3, [sp]
   24b0c:	add	r2, pc, r2
   24b10:	ldr	r3, [pc, #80]	; 24b68 <fu_usb_device_open@@Base+0xc24>
   24b14:	stmib	sp, {r2, r4}
   24b18:	mov	r1, #16
   24b1c:	ldr	r2, [pc, #72]	; 24b6c <fu_usb_device_open@@Base+0xc28>
   24b20:	add	r3, pc, r3
   24b24:	str	r7, [sp, #12]
   24b28:	str	r6, [sp, #16]
   24b2c:	add	r2, pc, r2
   24b30:	str	r0, [sp, #20]
   24b34:	ldr	r0, [pc, #52]	; 24b70 <fu_usb_device_open@@Base+0xc2c>
   24b38:	add	r0, pc, r0
   24b3c:	bl	3a38 <g_log@plt>
   24b40:	add	sp, sp, #24
   24b44:	pop	{r4, r5, r6, r7, r8, pc}
   24b48:	mov	r0, r7
   24b4c:	bl	3ba0 <g_value_get_object@plt>
   24b50:	mov	r1, r0
   24b54:	mov	r0, r8
   24b58:	add	sp, sp, #24
   24b5c:	pop	{r4, r5, r6, r7, r8, lr}
   24b60:	b	24758 <fu_usb_device_open@@Base+0x814>
   24b64:	ldrdeq	r5, [r0], -r0
   24b68:	andeq	r6, r0, ip, lsl #3
   24b6c:	andeq	r5, r0, r4, ror #24
   24b70:	andeq	r5, r0, r0, ror #6
   24b74:	push	{r3, r4, r5, lr}
   24b78:	mov	r5, r0
   24b7c:	bl	23a78 <main@@Base+0x1f640>
   24b80:	mov	r1, #0
   24b84:	bl	3804 <g_object_new@plt>
   24b88:	mov	r1, r5
   24b8c:	mov	r4, r0
   24b90:	bl	24758 <fu_usb_device_open@@Base+0x814>
   24b94:	bl	1f330 <main@@Base+0x1aef8>
   24b98:	mov	r1, r0
   24b9c:	mov	r0, r4
   24ba0:	pop	{r3, r4, r5, lr}
   24ba4:	b	39d8 <g_type_check_instance_cast@plt>
   24ba8:	subs	r2, r1, #1
   24bac:	bxeq	lr
   24bb0:	bcc	24d88 <fu_usb_device_open@@Base+0xe44>
   24bb4:	cmp	r0, r1
   24bb8:	bls	24d6c <fu_usb_device_open@@Base+0xe28>
   24bbc:	tst	r1, r2
   24bc0:	beq	24d78 <fu_usb_device_open@@Base+0xe34>
   24bc4:	clz	r3, r0
   24bc8:	clz	r2, r1
   24bcc:	sub	r3, r2, r3
   24bd0:	rsbs	r3, r3, #31
   24bd4:	addne	r3, r3, r3, lsl #1
   24bd8:	mov	r2, #0
   24bdc:	addne	pc, pc, r3, lsl #2
   24be0:	nop	{0}
   24be4:	cmp	r0, r1, lsl #31
   24be8:	adc	r2, r2, r2
   24bec:	subcs	r0, r0, r1, lsl #31
   24bf0:	cmp	r0, r1, lsl #30
   24bf4:	adc	r2, r2, r2
   24bf8:	subcs	r0, r0, r1, lsl #30
   24bfc:	cmp	r0, r1, lsl #29
   24c00:	adc	r2, r2, r2
   24c04:	subcs	r0, r0, r1, lsl #29
   24c08:	cmp	r0, r1, lsl #28
   24c0c:	adc	r2, r2, r2
   24c10:	subcs	r0, r0, r1, lsl #28
   24c14:	cmp	r0, r1, lsl #27
   24c18:	adc	r2, r2, r2
   24c1c:	subcs	r0, r0, r1, lsl #27
   24c20:	cmp	r0, r1, lsl #26
   24c24:	adc	r2, r2, r2
   24c28:	subcs	r0, r0, r1, lsl #26
   24c2c:	cmp	r0, r1, lsl #25
   24c30:	adc	r2, r2, r2
   24c34:	subcs	r0, r0, r1, lsl #25
   24c38:	cmp	r0, r1, lsl #24
   24c3c:	adc	r2, r2, r2
   24c40:	subcs	r0, r0, r1, lsl #24
   24c44:	cmp	r0, r1, lsl #23
   24c48:	adc	r2, r2, r2
   24c4c:	subcs	r0, r0, r1, lsl #23
   24c50:	cmp	r0, r1, lsl #22
   24c54:	adc	r2, r2, r2
   24c58:	subcs	r0, r0, r1, lsl #22
   24c5c:	cmp	r0, r1, lsl #21
   24c60:	adc	r2, r2, r2
   24c64:	subcs	r0, r0, r1, lsl #21
   24c68:	cmp	r0, r1, lsl #20
   24c6c:	adc	r2, r2, r2
   24c70:	subcs	r0, r0, r1, lsl #20
   24c74:	cmp	r0, r1, lsl #19
   24c78:	adc	r2, r2, r2
   24c7c:	subcs	r0, r0, r1, lsl #19
   24c80:	cmp	r0, r1, lsl #18
   24c84:	adc	r2, r2, r2
   24c88:	subcs	r0, r0, r1, lsl #18
   24c8c:	cmp	r0, r1, lsl #17
   24c90:	adc	r2, r2, r2
   24c94:	subcs	r0, r0, r1, lsl #17
   24c98:	cmp	r0, r1, lsl #16
   24c9c:	adc	r2, r2, r2
   24ca0:	subcs	r0, r0, r1, lsl #16
   24ca4:	cmp	r0, r1, lsl #15
   24ca8:	adc	r2, r2, r2
   24cac:	subcs	r0, r0, r1, lsl #15
   24cb0:	cmp	r0, r1, lsl #14
   24cb4:	adc	r2, r2, r2
   24cb8:	subcs	r0, r0, r1, lsl #14
   24cbc:	cmp	r0, r1, lsl #13
   24cc0:	adc	r2, r2, r2
   24cc4:	subcs	r0, r0, r1, lsl #13
   24cc8:	cmp	r0, r1, lsl #12
   24ccc:	adc	r2, r2, r2
   24cd0:	subcs	r0, r0, r1, lsl #12
   24cd4:	cmp	r0, r1, lsl #11
   24cd8:	adc	r2, r2, r2
   24cdc:	subcs	r0, r0, r1, lsl #11
   24ce0:	cmp	r0, r1, lsl #10
   24ce4:	adc	r2, r2, r2
   24ce8:	subcs	r0, r0, r1, lsl #10
   24cec:	cmp	r0, r1, lsl #9
   24cf0:	adc	r2, r2, r2
   24cf4:	subcs	r0, r0, r1, lsl #9
   24cf8:	cmp	r0, r1, lsl #8
   24cfc:	adc	r2, r2, r2
   24d00:	subcs	r0, r0, r1, lsl #8
   24d04:	cmp	r0, r1, lsl #7
   24d08:	adc	r2, r2, r2
   24d0c:	subcs	r0, r0, r1, lsl #7
   24d10:	cmp	r0, r1, lsl #6
   24d14:	adc	r2, r2, r2
   24d18:	subcs	r0, r0, r1, lsl #6
   24d1c:	cmp	r0, r1, lsl #5
   24d20:	adc	r2, r2, r2
   24d24:	subcs	r0, r0, r1, lsl #5
   24d28:	cmp	r0, r1, lsl #4
   24d2c:	adc	r2, r2, r2
   24d30:	subcs	r0, r0, r1, lsl #4
   24d34:	cmp	r0, r1, lsl #3
   24d38:	adc	r2, r2, r2
   24d3c:	subcs	r0, r0, r1, lsl #3
   24d40:	cmp	r0, r1, lsl #2
   24d44:	adc	r2, r2, r2
   24d48:	subcs	r0, r0, r1, lsl #2
   24d4c:	cmp	r0, r1, lsl #1
   24d50:	adc	r2, r2, r2
   24d54:	subcs	r0, r0, r1, lsl #1
   24d58:	cmp	r0, r1
   24d5c:	adc	r2, r2, r2
   24d60:	subcs	r0, r0, r1
   24d64:	mov	r0, r2
   24d68:	bx	lr
   24d6c:	moveq	r0, #1
   24d70:	movne	r0, #0
   24d74:	bx	lr
   24d78:	clz	r2, r1
   24d7c:	rsb	r2, r2, #31
   24d80:	lsr	r0, r0, r2
   24d84:	bx	lr
   24d88:	cmp	r0, #0
   24d8c:	mvnne	r0, #0
   24d90:	b	24db4 <fu_usb_device_open@@Base+0xe70>
   24d94:	cmp	r1, #0
   24d98:	beq	24d88 <fu_usb_device_open@@Base+0xe44>
   24d9c:	push	{r0, r1, lr}
   24da0:	bl	24ba8 <fu_usb_device_open@@Base+0xc64>
   24da4:	pop	{r1, r2, lr}
   24da8:	mul	r3, r2, r0
   24dac:	sub	r1, r1, r3
   24db0:	bx	lr
   24db4:	push	{r1, lr}
   24db8:	mov	r0, #8
   24dbc:	bl	3fc0 <raise@plt>
   24dc0:	pop	{r1, pc}

00024dc4 <__libc_csu_init@@Base>:
   24dc4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   24dc8:	mov	r7, r0
   24dcc:	ldr	r6, [pc, #76]	; 24e20 <__libc_csu_init@@Base+0x5c>
   24dd0:	mov	r8, r1
   24dd4:	ldr	r5, [pc, #72]	; 24e24 <__libc_csu_init@@Base+0x60>
   24dd8:	mov	r9, r2
   24ddc:	add	r6, pc, r6
   24de0:	bl	37d8 <_init@@Base>
   24de4:	add	r5, pc, r5
   24de8:	rsb	r6, r5, r6
   24dec:	asrs	r6, r6, #2
   24df0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   24df4:	sub	r5, r5, #4
   24df8:	mov	r4, #0
   24dfc:	add	r4, r4, #1
   24e00:	ldr	r3, [r5, #4]!
   24e04:	mov	r0, r7
   24e08:	mov	r1, r8
   24e0c:	mov	r2, r9
   24e10:	blx	r3
   24e14:	cmp	r4, r6
   24e18:	bne	24dfc <__libc_csu_init@@Base+0x38>
   24e1c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   24e20:	andeq	r9, r1, r8, asr #24
   24e24:	andeq	r9, r1, ip, lsr ip

00024e28 <__libc_csu_fini@@Base>:
   24e28:	bx	lr

Disassembly of section .fini:

00024e2c <_fini@@Base>:
   24e2c:	push	{r3, lr}
   24e30:	pop	{r3, pc}
