
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//liblsan.so.0.0.0_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006670 <.init>:
    6670:	stp	x29, x30, [sp, #-16]!
    6674:	mov	x29, sp
    6678:	bl	6de0 <*ABS*+0x10@plt+0x10>
    667c:	ldp	x29, x30, [sp], #16
    6680:	ret

Disassembly of section .plt:

0000000000006690 <_Unwind_Backtrace@plt-0x20>:
    6690:	stp	x16, x30, [sp, #-16]!
    6694:	adrp	x16, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6698:	ldr	x17, [x16, #4088]
    669c:	add	x16, x16, #0xff8
    66a0:	br	x17
    66a4:	nop
    66a8:	nop
    66ac:	nop

00000000000066b0 <_Unwind_Backtrace@plt>:
    66b0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    66b4:	ldr	x17, [x16]
    66b8:	add	x16, x16, #0x0
    66bc:	br	x17

00000000000066c0 <__fxstat@plt>:
    66c0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    66c4:	ldr	x17, [x16, #8]
    66c8:	add	x16, x16, #0x8
    66cc:	br	x17

00000000000066d0 <__sanitizer_report_error_summary@plt>:
    66d0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    66d4:	ldr	x17, [x16, #16]
    66d8:	add	x16, x16, #0x10
    66dc:	br	x17

00000000000066e0 <OnPrint@plt>:
    66e0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    66e4:	ldr	x17, [x16, #24]
    66e8:	add	x16, x16, #0x18
    66ec:	br	x17

00000000000066f0 <__lsan_default_options@plt>:
    66f0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    66f4:	ldr	x17, [x16, #32]
    66f8:	add	x16, x16, #0x20
    66fc:	br	x17

0000000000006700 <__asan_cplus_demangle_init_info@plt>:
    6700:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6704:	ldr	x17, [x16, #40]
    6708:	add	x16, x16, #0x28
    670c:	br	x17

0000000000006710 <memcpy@plt>:
    6710:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6714:	ldr	x17, [x16, #48]
    6718:	add	x16, x16, #0x30
    671c:	br	x17

0000000000006720 <__asan_backtrace_qsort@plt>:
    6720:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6724:	ldr	x17, [x16, #56]
    6728:	add	x16, x16, #0x38
    672c:	br	x17

0000000000006730 <readlink@plt>:
    6730:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6734:	ldr	x17, [x16, #64]
    6738:	add	x16, x16, #0x40
    673c:	br	x17

0000000000006740 <shm_open@plt>:
    6740:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6744:	ldr	x17, [x16, #72]
    6748:	add	x16, x16, #0x48
    674c:	br	x17

0000000000006750 <sched_getaffinity@plt>:
    6750:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6754:	ldr	x17, [x16, #80]
    6758:	add	x16, x16, #0x50
    675c:	br	x17

0000000000006760 <free@plt>:
    6760:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6764:	ldr	x17, [x16, #88]
    6768:	add	x16, x16, #0x58
    676c:	br	x17

0000000000006770 <__asan_backtrace_pcinfo@plt>:
    6770:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6774:	ldr	x17, [x16, #96]
    6778:	add	x16, x16, #0x60
    677c:	br	x17

0000000000006780 <execv@plt>:
    6780:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6784:	ldr	x17, [x16, #104]
    6788:	add	x16, x16, #0x68
    678c:	br	x17

0000000000006790 <pipe@plt>:
    6790:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6794:	ldr	x17, [x16, #112]
    6798:	add	x16, x16, #0x70
    679c:	br	x17

00000000000067a0 <pthread_attr_getdetachstate@plt>:
    67a0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    67a4:	ldr	x17, [x16, #120]
    67a8:	add	x16, x16, #0x78
    67ac:	br	x17

00000000000067b0 <__sanitizer_get_module_and_offset_for_pc@plt>:
    67b0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    67b4:	ldr	x17, [x16, #128]
    67b8:	add	x16, x16, #0x80
    67bc:	br	x17

00000000000067c0 <__asan_cplus_demangle_type@plt>:
    67c0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    67c4:	ldr	x17, [x16, #136]
    67c8:	add	x16, x16, #0x88
    67cc:	br	x17

00000000000067d0 <__asan_backtrace_release_view@plt>:
    67d0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    67d4:	ldr	x17, [x16, #144]
    67d8:	add	x16, x16, #0x90
    67dc:	br	x17

00000000000067e0 <__asan_backtrace_dwarf_add@plt>:
    67e0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    67e4:	ldr	x17, [x16, #152]
    67e8:	add	x16, x16, #0x98
    67ec:	br	x17

00000000000067f0 <__sanitizer_malloc_hook@plt>:
    67f0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    67f4:	ldr	x17, [x16, #160]
    67f8:	add	x16, x16, #0xa0
    67fc:	br	x17

0000000000006800 <dlvsym@plt>:
    6800:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6804:	ldr	x17, [x16, #168]
    6808:	add	x16, x16, #0xa8
    680c:	br	x17

0000000000006810 <pthread_getattr_np@plt>:
    6810:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6814:	ldr	x17, [x16, #176]
    6818:	add	x16, x16, #0xb0
    681c:	br	x17

0000000000006820 <__sanitizer_symbolize_demangle@plt>:
    6820:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6824:	ldr	x17, [x16, #184]
    6828:	add	x16, x16, #0xb8
    682c:	br	x17

0000000000006830 <__asan_cplus_demangle_fill_name@plt>:
    6830:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6834:	ldr	x17, [x16, #192]
    6838:	add	x16, x16, #0xc0
    683c:	br	x17

0000000000006840 <__asan_internal_memcpy@plt>:
    6840:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6844:	ldr	x17, [x16, #200]
    6848:	add	x16, x16, #0xc8
    684c:	br	x17

0000000000006850 <__asan_internal_strlen@plt>:
    6850:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6854:	ldr	x17, [x16, #208]
    6858:	add	x16, x16, #0xd0
    685c:	br	x17

0000000000006860 <open@plt>:
    6860:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6864:	ldr	x17, [x16, #216]
    6868:	add	x16, x16, #0xd8
    686c:	br	x17

0000000000006870 <pthread_attr_init@plt>:
    6870:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6874:	ldr	x17, [x16, #224]
    6878:	add	x16, x16, #0xe0
    687c:	br	x17

0000000000006880 <real_pthread_attr_getstack@plt>:
    6880:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6884:	ldr	x17, [x16, #232]
    6888:	add	x16, x16, #0xe8
    688c:	br	x17

0000000000006890 <sleep@plt>:
    6890:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6894:	ldr	x17, [x16, #240]
    6898:	add	x16, x16, #0xf0
    689c:	br	x17

00000000000068a0 <dlsym@plt>:
    68a0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    68a4:	ldr	x17, [x16, #248]
    68a8:	add	x16, x16, #0xf8
    68ac:	br	x17

00000000000068b0 <__asan_backtrace_vector_grow@plt>:
    68b0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    68b4:	ldr	x17, [x16, #256]
    68b8:	add	x16, x16, #0x100
    68bc:	br	x17

00000000000068c0 <__asan_backtrace_syminfo@plt>:
    68c0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    68c4:	ldr	x17, [x16, #264]
    68c8:	add	x16, x16, #0x108
    68cc:	br	x17

00000000000068d0 <__asan_internal_memset@plt>:
    68d0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    68d4:	ldr	x17, [x16, #272]
    68d8:	add	x16, x16, #0x110
    68dc:	br	x17

00000000000068e0 <memset@plt>:
    68e0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    68e4:	ldr	x17, [x16, #280]
    68e8:	add	x16, x16, #0x118
    68ec:	br	x17

00000000000068f0 <__sanitizer_symbolize_data@plt>:
    68f0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    68f4:	ldr	x17, [x16, #288]
    68f8:	add	x16, x16, #0x120
    68fc:	br	x17

0000000000006900 <isatty@plt>:
    6900:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6904:	ldr	x17, [x16, #296]
    6908:	add	x16, x16, #0x128
    690c:	br	x17

0000000000006910 <dlerror@plt>:
    6910:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6914:	ldr	x17, [x16, #304]
    6918:	add	x16, x16, #0x130
    691c:	br	x17

0000000000006920 <__cxa_finalize@plt>:
    6920:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6924:	ldr	x17, [x16, #312]
    6928:	add	x16, x16, #0x138
    692c:	br	x17

0000000000006930 <__asan_backtrace_alloc@plt>:
    6930:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6934:	ldr	x17, [x16, #320]
    6938:	add	x16, x16, #0x140
    693c:	br	x17

0000000000006940 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    6940:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6944:	ldr	x17, [x16, #328]
    6948:	add	x16, x16, #0x148
    694c:	br	x17

0000000000006950 <getrusage@plt>:
    6950:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6954:	ldr	x17, [x16, #336]
    6958:	add	x16, x16, #0x150
    695c:	br	x17

0000000000006960 <pthread_attr_destroy@plt>:
    6960:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6964:	ldr	x17, [x16, #344]
    6968:	add	x16, x16, #0x158
    696c:	br	x17

0000000000006970 <sprintf@plt>:
    6970:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6974:	ldr	x17, [x16, #352]
    6978:	add	x16, x16, #0x160
    697c:	br	x17

0000000000006980 <__asan_backtrace_vector_release@plt>:
    6980:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6984:	ldr	x17, [x16, #360]
    6988:	add	x16, x16, #0x168
    698c:	br	x17

0000000000006990 <real_clock_gettime@plt>:
    6990:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6994:	ldr	x17, [x16, #368]
    6998:	add	x16, x16, #0x170
    699c:	br	x17

00000000000069a0 <__cxa_demangle@plt>:
    69a0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    69a4:	ldr	x17, [x16, #376]
    69a8:	add	x16, x16, #0x178
    69ac:	br	x17

00000000000069b0 <__sanitizer_symbolize_code@plt>:
    69b0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    69b4:	ldr	x17, [x16, #384]
    69b8:	add	x16, x16, #0x180
    69bc:	br	x17

00000000000069c0 <dl_iterate_phdr@plt>:
    69c0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    69c4:	ldr	x17, [x16, #392]
    69c8:	add	x16, x16, #0x188
    69cc:	br	x17

00000000000069d0 <__sanitizer_dump_coverage@plt>:
    69d0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    69d4:	ldr	x17, [x16, #400]
    69d8:	add	x16, x16, #0x190
    69dc:	br	x17

00000000000069e0 <clock_gettime@plt>:
    69e0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    69e4:	ldr	x17, [x16, #408]
    69e8:	add	x16, x16, #0x198
    69ec:	br	x17

00000000000069f0 <__lsan_default_suppressions@plt>:
    69f0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    69f4:	ldr	x17, [x16, #416]
    69f8:	add	x16, x16, #0x1a0
    69fc:	br	x17

0000000000006a00 <getpid@plt>:
    6a00:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a04:	ldr	x17, [x16, #424]
    6a08:	add	x16, x16, #0x1a8
    6a0c:	br	x17

0000000000006a10 <__lsan_is_turned_off@plt>:
    6a10:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a14:	ldr	x17, [x16, #432]
    6a18:	add	x16, x16, #0x1b0
    6a1c:	br	x17

0000000000006a20 <__sanitizer_symbolize_flush@plt>:
    6a20:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a24:	ldr	x17, [x16, #440]
    6a28:	add	x16, x16, #0x1b8
    6a2c:	br	x17

0000000000006a30 <__asan_backtrace_create_state@plt>:
    6a30:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a34:	ldr	x17, [x16, #448]
    6a38:	add	x16, x16, #0x1c0
    6a3c:	br	x17

0000000000006a40 <mmap@plt>:
    6a40:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a44:	ldr	x17, [x16, #456]
    6a48:	add	x16, x16, #0x1c8
    6a4c:	br	x17

0000000000006a50 <pthread_setspecific@plt>:
    6a50:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a54:	ldr	x17, [x16, #464]
    6a58:	add	x16, x16, #0x1d0
    6a5c:	br	x17

0000000000006a60 <munmap@plt>:
    6a60:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a64:	ldr	x17, [x16, #472]
    6a68:	add	x16, x16, #0x1d8
    6a6c:	br	x17

0000000000006a70 <__asan_cplus_demangle_print_callback@plt>:
    6a70:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a74:	ldr	x17, [x16, #480]
    6a78:	add	x16, x16, #0x1e0
    6a7c:	br	x17

0000000000006a80 <__cxa_atexit@plt>:
    6a80:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a84:	ldr	x17, [x16, #488]
    6a88:	add	x16, x16, #0x1e8
    6a8c:	br	x17

0000000000006a90 <snprintf@plt>:
    6a90:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6a94:	ldr	x17, [x16, #496]
    6a98:	add	x16, x16, #0x1f0
    6a9c:	br	x17

0000000000006aa0 <pthread_attr_getstack@plt>:
    6aa0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6aa4:	ldr	x17, [x16, #504]
    6aa8:	add	x16, x16, #0x1f8
    6aac:	br	x17

0000000000006ab0 <pthread_attr_setstacksize@plt>:
    6ab0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6ab4:	ldr	x17, [x16, #512]
    6ab8:	add	x16, x16, #0x200
    6abc:	br	x17

0000000000006ac0 <_Unwind_GetIP@plt>:
    6ac0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6ac4:	ldr	x17, [x16, #520]
    6ac8:	add	x16, x16, #0x208
    6acc:	br	x17

0000000000006ad0 <madvise@plt>:
    6ad0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6ad4:	ldr	x17, [x16, #528]
    6ad8:	add	x16, x16, #0x210
    6adc:	br	x17

0000000000006ae0 <usleep@plt>:
    6ae0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6ae4:	ldr	x17, [x16, #536]
    6ae8:	add	x16, x16, #0x218
    6aec:	br	x17

0000000000006af0 <shm_unlink@plt>:
    6af0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6af4:	ldr	x17, [x16, #544]
    6af8:	add	x16, x16, #0x220
    6afc:	br	x17

0000000000006b00 <__sched_cpucount@plt>:
    6b00:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b04:	ldr	x17, [x16, #552]
    6b08:	add	x16, x16, #0x228
    6b0c:	br	x17

0000000000006b10 <strrchr@plt>:
    6b10:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b14:	ldr	x17, [x16, #560]
    6b18:	add	x16, x16, #0x230
    6b1c:	br	x17

0000000000006b20 <__errno_location@plt>:
    6b20:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b24:	ldr	x17, [x16, #568]
    6b28:	add	x16, x16, #0x238
    6b2c:	br	x17

0000000000006b30 <sched_yield@plt>:
    6b30:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b34:	ldr	x17, [x16, #576]
    6b38:	add	x16, x16, #0x240
    6b3c:	br	x17

0000000000006b40 <__asan_backtrace_get_view@plt>:
    6b40:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b44:	ldr	x17, [x16, #584]
    6b48:	add	x16, x16, #0x248
    6b4c:	br	x17

0000000000006b50 <syslog@plt>:
    6b50:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b54:	ldr	x17, [x16, #592]
    6b58:	add	x16, x16, #0x250
    6b5c:	br	x17

0000000000006b60 <sigaction@plt>:
    6b60:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b64:	ldr	x17, [x16, #600]
    6b68:	add	x16, x16, #0x258
    6b6c:	br	x17

0000000000006b70 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    6b70:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b74:	ldr	x17, [x16, #608]
    6b78:	add	x16, x16, #0x260
    6b7c:	br	x17

0000000000006b80 <__asan_cplus_demangle_fill_extended_operator@plt>:
    6b80:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b84:	ldr	x17, [x16, #616]
    6b88:	add	x16, x16, #0x268
    6b8c:	br	x17

0000000000006b90 <__asan_internal_strcmp@plt>:
    6b90:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6b94:	ldr	x17, [x16, #624]
    6b98:	add	x16, x16, #0x270
    6b9c:	br	x17

0000000000006ba0 <__lsan_init@plt>:
    6ba0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6ba4:	ldr	x17, [x16, #632]
    6ba8:	add	x16, x16, #0x278
    6bac:	br	x17

0000000000006bb0 <__asan_internal_strnlen@plt>:
    6bb0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6bb4:	ldr	x17, [x16, #640]
    6bb8:	add	x16, x16, #0x280
    6bbc:	br	x17

0000000000006bc0 <close@plt>:
    6bc0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6bc4:	ldr	x17, [x16, #648]
    6bc8:	add	x16, x16, #0x288
    6bcc:	br	x17

0000000000006bd0 <__asan_internal_strncmp@plt>:
    6bd0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6bd4:	ldr	x17, [x16, #656]
    6bd8:	add	x16, x16, #0x290
    6bdc:	br	x17

0000000000006be0 <pthread_key_create@plt>:
    6be0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6be4:	ldr	x17, [x16, #664]
    6be8:	add	x16, x16, #0x298
    6bec:	br	x17

0000000000006bf0 <__asan_cplus_demangle_fill_ctor@plt>:
    6bf0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6bf4:	ldr	x17, [x16, #672]
    6bf8:	add	x16, x16, #0x2a0
    6bfc:	br	x17

0000000000006c00 <setrlimit@plt>:
    6c00:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c04:	ldr	x17, [x16, #680]
    6c08:	add	x16, x16, #0x2a8
    6c0c:	br	x17

0000000000006c10 <getauxval@plt>:
    6c10:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c14:	ldr	x17, [x16, #688]
    6c18:	add	x16, x16, #0x2b0
    6c1c:	br	x17

0000000000006c20 <__asan_backtrace_free@plt>:
    6c20:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c24:	ldr	x17, [x16, #696]
    6c28:	add	x16, x16, #0x2b8
    6c2c:	br	x17

0000000000006c30 <__lxstat@plt>:
    6c30:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c34:	ldr	x17, [x16, #704]
    6c38:	add	x16, x16, #0x2c0
    6c3c:	br	x17

0000000000006c40 <__sanitizer_free_hook@plt>:
    6c40:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c44:	ldr	x17, [x16, #712]
    6c48:	add	x16, x16, #0x2c8
    6c4c:	br	x17

0000000000006c50 <abort@plt>:
    6c50:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c54:	ldr	x17, [x16, #720]
    6c58:	add	x16, x16, #0x2d0
    6c5c:	br	x17

0000000000006c60 <bsearch@plt>:
    6c60:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c64:	ldr	x17, [x16, #728]
    6c68:	add	x16, x16, #0x2d8
    6c6c:	br	x17

0000000000006c70 <__asan_backtrace_initialize@plt>:
    6c70:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c74:	ldr	x17, [x16, #736]
    6c78:	add	x16, x16, #0x2e0
    6c7c:	br	x17

0000000000006c80 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    6c80:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c84:	ldr	x17, [x16, #744]
    6c88:	add	x16, x16, #0x2e8
    6c8c:	br	x17

0000000000006c90 <__asan_internal_memcmp@plt>:
    6c90:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6c94:	ldr	x17, [x16, #752]
    6c98:	add	x16, x16, #0x2f0
    6c9c:	br	x17

0000000000006ca0 <sysconf@plt>:
    6ca0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6ca4:	ldr	x17, [x16, #760]
    6ca8:	add	x16, x16, #0x2f8
    6cac:	br	x17

0000000000006cb0 <realloc@plt>:
    6cb0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6cb4:	ldr	x17, [x16, #768]
    6cb8:	add	x16, x16, #0x300
    6cbc:	br	x17

0000000000006cc0 <pthread_self@plt>:
    6cc0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6cc4:	ldr	x17, [x16, #776]
    6cc8:	add	x16, x16, #0x308
    6ccc:	br	x17

0000000000006cd0 <getuid@plt>:
    6cd0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6cd4:	ldr	x17, [x16, #784]
    6cd8:	add	x16, x16, #0x310
    6cdc:	br	x17

0000000000006ce0 <getpagesize@plt>:
    6ce0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6ce4:	ldr	x17, [x16, #792]
    6ce8:	add	x16, x16, #0x318
    6cec:	br	x17

0000000000006cf0 <__asan_backtrace_vector_finish@plt>:
    6cf0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6cf4:	ldr	x17, [x16, #800]
    6cf8:	add	x16, x16, #0x320
    6cfc:	br	x17

0000000000006d00 <__asan_backtrace_close@plt>:
    6d00:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d04:	ldr	x17, [x16, #808]
    6d08:	add	x16, x16, #0x328
    6d0c:	br	x17

0000000000006d10 <__asan_cplus_demangle_mangled_name@plt>:
    6d10:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d14:	ldr	x17, [x16, #816]
    6d18:	add	x16, x16, #0x330
    6d1c:	br	x17

0000000000006d20 <getrlimit@plt>:
    6d20:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d24:	ldr	x17, [x16, #824]
    6d28:	add	x16, x16, #0x338
    6d2c:	br	x17

0000000000006d30 <sigaltstack@plt>:
    6d30:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d34:	ldr	x17, [x16, #832]
    6d38:	add	x16, x16, #0x340
    6d3c:	br	x17

0000000000006d40 <fcntl@plt>:
    6d40:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d44:	ldr	x17, [x16, #840]
    6d48:	add	x16, x16, #0x348
    6d4c:	br	x17

0000000000006d50 <__gmon_start__@plt>:
    6d50:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d54:	ldr	x17, [x16, #848]
    6d58:	add	x16, x16, #0x350
    6d5c:	br	x17

0000000000006d60 <__sanitizer_set_report_path@plt>:
    6d60:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d64:	ldr	x17, [x16, #856]
    6d68:	add	x16, x16, #0x358
    6d6c:	br	x17

0000000000006d70 <__asan_cplus_demangle_v3_callback@plt>:
    6d70:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d74:	ldr	x17, [x16, #864]
    6d78:	add	x16, x16, #0x360
    6d7c:	br	x17

0000000000006d80 <__sanitizer_print_memory_profile@plt>:
    6d80:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d84:	ldr	x17, [x16, #872]
    6d88:	add	x16, x16, #0x368
    6d8c:	br	x17

0000000000006d90 <__asan_cplus_demangle_fill_dtor@plt>:
    6d90:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6d94:	ldr	x17, [x16, #880]
    6d98:	add	x16, x16, #0x370
    6d9c:	br	x17

0000000000006da0 <__sancov_default_options@plt>:
    6da0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6da4:	ldr	x17, [x16, #888]
    6da8:	add	x16, x16, #0x378
    6dac:	br	x17

0000000000006db0 <__asan_backtrace_open@plt>:
    6db0:	adrp	x16, 51000 <_Unwind_Backtrace@GCC_3.3>
    6db4:	ldr	x17, [x16, #896]
    6db8:	add	x16, x16, #0x380
    6dbc:	br	x17

0000000000006dc0 <*ABS*@plt>:
    6dc0:	stp	x2, x3, [sp, #-16]!
    6dc4:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6dc8:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6dcc:	ldr	x2, [x2, #4064]

0000000000006dd0 <*ABS*+0x10@plt>:
    6dd0:	add	x3, x3, #0xfe8
    6dd4:	br	x2
    6dd8:	nop
    6ddc:	nop

Disassembly of section .text:

0000000000006de0 <__lsan_disable@@Base-0x588>:
    6de0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6de4:	ldr	x0, [x0, #4016]
    6de8:	cbz	x0, 6df0 <*ABS*+0x10@plt+0x20>
    6dec:	b	6d50 <__gmon_start__@plt>
    6df0:	ret
    6df4:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6df8:	add	x0, x0, #0xc68
    6dfc:	adrp	x1, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6e00:	add	x1, x1, #0xc68
    6e04:	cmp	x1, x0
    6e08:	b.eq	6e20 <*ABS*+0x10@plt+0x50>  // b.none
    6e0c:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6e10:	ldr	x1, [x1, #3920]
    6e14:	cbz	x1, 6e20 <*ABS*+0x10@plt+0x50>
    6e18:	mov	x16, x1
    6e1c:	br	x16
    6e20:	ret
    6e24:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6e28:	add	x0, x0, #0xc68
    6e2c:	adrp	x1, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6e30:	add	x1, x1, #0xc68
    6e34:	sub	x1, x1, x0
    6e38:	mov	x2, #0x2                   	// #2
    6e3c:	asr	x1, x1, #3
    6e40:	sdiv	x1, x1, x2
    6e44:	cbz	x1, 6e5c <*ABS*+0x10@plt+0x8c>
    6e48:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6e4c:	ldr	x2, [x2, #4024]
    6e50:	cbz	x2, 6e5c <*ABS*+0x10@plt+0x8c>
    6e54:	mov	x16, x2
    6e58:	br	x16
    6e5c:	ret
    6e60:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6e64:	ldrb	w1, [x0, #3200]
    6e68:	cbnz	w1, 6eac <*ABS*+0x10@plt+0xdc>
    6e6c:	stp	x29, x30, [sp, #-32]!
    6e70:	mov	x29, sp
    6e74:	str	x19, [sp, #16]
    6e78:	mov	x19, x0
    6e7c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6e80:	ldr	x0, [x0, #3584]
    6e84:	cbz	x0, 6e94 <*ABS*+0x10@plt+0xc4>
    6e88:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
    6e8c:	ldr	x0, [x0, #936]
    6e90:	bl	6920 <__cxa_finalize@plt>
    6e94:	bl	6df4 <*ABS*+0x10@plt+0x24>
    6e98:	mov	w0, #0x1                   	// #1
    6e9c:	strb	w0, [x19, #3200]
    6ea0:	ldr	x19, [sp, #16]
    6ea4:	ldp	x29, x30, [sp], #32
    6ea8:	ret
    6eac:	ret
    6eb0:	b	6e24 <*ABS*+0x10@plt+0x54>
    6eb4:	ldrb	w3, [x1, #28]
    6eb8:	mov	x2, x0
    6ebc:	ldrb	w0, [x0, #28]
    6ec0:	cmp	w3, w0
    6ec4:	b.ne	6ed8 <*ABS*+0x10@plt+0x108>  // b.any
    6ec8:	ldr	x0, [x1, #16]
    6ecc:	ldr	x2, [x2, #16]
    6ed0:	cmp	x2, x0
    6ed4:	cset	w0, hi  // hi = pmore
    6ed8:	ret
    6edc:	stp	x19, x20, [sp, #-48]!
    6ee0:	mov	x19, x0
    6ee4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6ee8:	mov	x20, x1
    6eec:	mov	x1, #0x10                  	// #16
    6ef0:	ldr	x0, [x0, #3456]
    6ef4:	stp	x21, x22, [sp, #16]
    6ef8:	mov	x21, x2
    6efc:	mov	x22, x3
    6f00:	str	x30, [sp, #32]
    6f04:	bl	e5ec <__sancov_default_options@@Base+0x168>
    6f08:	mov	x2, x0
    6f0c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
    6f10:	add	x0, x0, #0xb80
    6f14:	ldr	x30, [sp, #32]
    6f18:	stp	x0, x22, [x2]
    6f1c:	mov	x3, x21
    6f20:	mov	x1, x20
    6f24:	mov	x0, x19
    6f28:	ldp	x21, x22, [sp, #16]
    6f2c:	ldp	x19, x20, [sp], #48
    6f30:	b	14200 <__sanitizer_set_report_fd@@Base+0x174c>
    6f34:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    6f38:	ldr	x0, [x0, #3264]
    6f3c:	cbnz	x0, 6f64 <*ABS*+0x10@plt+0x194>
    6f40:	str	x30, [sp, #-16]!
    6f44:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    6f48:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    6f4c:	add	x2, x2, #0x56b
    6f50:	add	x0, x0, #0x586
    6f54:	mov	x4, #0x0                   	// #0
    6f58:	mov	x3, #0x0                   	// #0
    6f5c:	mov	w1, #0x5f                  	// #95
    6f60:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    6f64:	ret
    6f68:	stp	x19, x30, [sp, #-32]!
    6f6c:	bl	a358 <__sanitizer_print_stack_trace@@Base+0x2b8>
    6f70:	mov	x1, x0
    6f74:	add	x19, sp, #0x18
    6f78:	mov	x0, x19
    6f7c:	bl	a548 <__sanitizer_get_allocated_size@@Base+0x48>
    6f80:	mov	x0, x19
    6f84:	bl	a35c <__sanitizer_print_stack_trace@@Base+0x2bc>
    6f88:	tst	w0, #0xff
    6f8c:	b.eq	6fac <*ABS*+0x10@plt+0x1dc>  // b.none
    6f90:	mov	x0, x19
    6f94:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    6f98:	cmp	w0, #0x3
    6f9c:	b.eq	6fac <*ABS*+0x10@plt+0x1dc>  // b.none
    6fa0:	mov	x0, x19
    6fa4:	mov	w1, #0x0                   	// #0
    6fa8:	bl	a380 <__sanitizer_print_stack_trace@@Base+0x2e0>
    6fac:	ldp	x19, x30, [sp], #32
    6fb0:	ret
    6fb4:	ldr	x1, [x0]
    6fb8:	cbnz	x1, 6fe0 <*ABS*+0x10@plt+0x210>
    6fbc:	str	x30, [sp, #-16]!
    6fc0:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    6fc4:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    6fc8:	add	x2, x2, #0x5b3
    6fcc:	add	x0, x0, #0x5c5
    6fd0:	mov	x4, #0x0                   	// #0
    6fd4:	mov	x3, #0x0                   	// #0
    6fd8:	mov	w1, #0x1ca                 	// #458
    6fdc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    6fe0:	sub	x1, x1, #0x1
    6fe4:	str	x1, [x0]
    6fe8:	ret
    6fec:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    6ff0:	ldr	x0, [x0, #4040]
    6ff4:	ldrb	w0, [x0, #57]
    6ff8:	cbz	w0, 7010 <*ABS*+0x10@plt+0x240>
    6ffc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7000:	add	x0, x0, #0x602
    7004:	str	x30, [sp, #-16]!
    7008:	bl	18b74 <OnPrint@@Base+0x30c>
    700c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    7010:	ret
    7014:	mov	w1, #0x1010101             	// #16843009
    7018:	strb	wzr, [x0]
    701c:	movk	x1, #0x101, lsl #32
    7020:	stur	xzr, [x0, #4]
    7024:	stur	x1, [x0, #12]
    7028:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    702c:	add	x1, x1, #0x60f
    7030:	strh	wzr, [x0, #20]
    7034:	str	x1, [x0, #24]
    7038:	ret
    703c:	stp	x19, x20, [sp, #-48]!
    7040:	mov	x3, x1
    7044:	mov	x20, x0
    7048:	stp	x21, x22, [sp, #16]
    704c:	adrp	x21, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7050:	mov	x19, x1
    7054:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7058:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    705c:	add	x2, x2, #0x626
    7060:	add	x1, x1, #0x660
    7064:	str	x30, [sp, #32]
    7068:	bl	6edc <*ABS*+0x10@plt+0x10c>
    706c:	ldr	x21, [x21, #3456]
    7070:	mov	x1, #0x10                  	// #16
    7074:	adrp	x22, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
    7078:	add	x22, x22, #0xbb0
    707c:	mov	x0, x21
    7080:	bl	e5ec <__sancov_default_options@@Base+0x168>
    7084:	mov	x2, x0
    7088:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    708c:	add	x0, x19, #0x4
    7090:	add	x3, x3, #0x66f
    7094:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7098:	add	x1, x1, #0x6e0
    709c:	stp	x22, x0, [x2]
    70a0:	mov	x0, x20
    70a4:	bl	14200 <__sanitizer_set_report_fd@@Base+0x174c>
    70a8:	mov	x0, x21
    70ac:	mov	x1, #0x10                  	// #16
    70b0:	bl	e5ec <__sancov_default_options@@Base+0x168>
    70b4:	mov	x2, x0
    70b8:	add	x0, x19, #0x8
    70bc:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    70c0:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    70c4:	add	x3, x3, #0x6eb
    70c8:	stp	x22, x0, [x2]
    70cc:	add	x1, x1, #0x709
    70d0:	mov	x0, x20
    70d4:	bl	14200 <__sanitizer_set_report_fd@@Base+0x174c>
    70d8:	adrp	x22, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    70dc:	add	x3, x19, #0xc
    70e0:	mov	x0, x20
    70e4:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    70e8:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    70ec:	add	x2, x2, #0x713
    70f0:	add	x1, x1, #0x747
    70f4:	bl	6edc <*ABS*+0x10@plt+0x10c>
    70f8:	add	x22, x22, #0x968
    70fc:	add	x3, x19, #0xd
    7100:	mov	x0, x20
    7104:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7108:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    710c:	add	x2, x2, #0x753
    7110:	add	x1, x1, #0x773
    7114:	bl	6edc <*ABS*+0x10@plt+0x10c>
    7118:	add	x3, x19, #0xe
    711c:	mov	x0, x20
    7120:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7124:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7128:	add	x2, x2, #0x77e
    712c:	add	x1, x1, #0x7a1
    7130:	bl	6edc <*ABS*+0x10@plt+0x10c>
    7134:	add	x3, x19, #0xf
    7138:	mov	x0, x20
    713c:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7140:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7144:	add	x2, x2, #0x7af
    7148:	add	x1, x1, #0x7e1
    714c:	bl	6edc <*ABS*+0x10@plt+0x10c>
    7150:	add	x3, x19, #0x10
    7154:	mov	x0, x20
    7158:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    715c:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7160:	add	x2, x2, #0x7e9
    7164:	add	x1, x1, #0x82c
    7168:	bl	6edc <*ABS*+0x10@plt+0x10c>
    716c:	add	x3, x19, #0x11
    7170:	mov	x0, x20
    7174:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7178:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    717c:	add	x2, x2, #0x83d
    7180:	add	x1, x1, #0x8df
    7184:	bl	6edc <*ABS*+0x10@plt+0x10c>
    7188:	add	x3, x19, #0x12
    718c:	mov	x0, x20
    7190:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7194:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7198:	add	x2, x2, #0x8f2
    719c:	add	x1, x1, #0x915
    71a0:	bl	6edc <*ABS*+0x10@plt+0x10c>
    71a4:	add	x3, x19, #0x13
    71a8:	mov	x0, x20
    71ac:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    71b0:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    71b4:	add	x2, x2, #0x923
    71b8:	add	x1, x1, #0x95b
    71bc:	bl	6edc <*ABS*+0x10@plt+0x10c>
    71c0:	add	x3, x19, #0x14
    71c4:	mov	x2, x22
    71c8:	mov	x0, x20
    71cc:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    71d0:	add	x1, x1, #0x976
    71d4:	bl	6edc <*ABS*+0x10@plt+0x10c>
    71d8:	add	x3, x19, #0x15
    71dc:	mov	x2, x22
    71e0:	mov	x0, x20
    71e4:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    71e8:	add	x1, x1, #0x983
    71ec:	bl	6edc <*ABS*+0x10@plt+0x10c>
    71f0:	mov	x0, x21
    71f4:	mov	x1, #0x10                  	// #16
    71f8:	bl	e5ec <__sancov_default_options@@Base+0x168>
    71fc:	mov	x2, x0
    7200:	add	x19, x19, #0x18
    7204:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
    7208:	add	x0, x0, #0xb98
    720c:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7210:	ldp	x21, x22, [sp, #16]
    7214:	add	x3, x3, #0x98f
    7218:	ldr	x30, [sp, #32]
    721c:	stp	x0, x19, [x2]
    7220:	mov	x0, x20
    7224:	ldp	x19, x20, [sp], #48
    7228:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
    722c:	add	x1, x1, #0x33c
    7230:	b	14200 <__sanitizer_set_report_fd@@Base+0x174c>
    7234:	stp	x19, x20, [sp, #-32]!
    7238:	adrp	x19, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    723c:	ldr	x4, [x19, #3264]
    7240:	stp	x21, x30, [sp, #16]
    7244:	cbz	x4, 7264 <*ABS*+0x10@plt+0x494>
    7248:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    724c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7250:	add	x2, x2, #0x9a7
    7254:	add	x0, x0, #0x586
    7258:	mov	x3, #0x0                   	// #0
    725c:	mov	w1, #0x55                  	// #85
    7260:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    7264:	add	x21, x19, #0xcc0
    7268:	mov	w2, #0x1                   	// #1
    726c:	add	x20, x21, #0x40
    7270:	adrp	x1, 51000 <_Unwind_Backtrace@GCC_3.3>
    7274:	mov	x0, x20
    7278:	add	x1, x1, #0x3b0
    727c:	bl	1c800 <__sanitizer_symbolize_global@@Base+0x20bc>
    7280:	str	x20, [x19, #3264]
    7284:	ldr	x1, [x21, #168]
    7288:	mov	x0, x20
    728c:	bl	1c868 <__sanitizer_symbolize_global@@Base+0x2124>
    7290:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7294:	ldr	x0, [x0, #3704]
    7298:	cbz	x0, 72b0 <*ABS*+0x10@plt+0x4e0>
    729c:	ldr	x20, [x19, #3264]
    72a0:	bl	69f0 <__lsan_default_suppressions@plt>
    72a4:	mov	x1, x0
    72a8:	mov	x0, x20
    72ac:	bl	1c5e4 <__sanitizer_symbolize_global@@Base+0x1ea0>
    72b0:	ldr	x0, [x19, #3264]
    72b4:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    72b8:	ldp	x21, x30, [sp, #16]
    72bc:	add	x1, x1, #0x38f
    72c0:	ldp	x19, x20, [sp], #32
    72c4:	b	1c5e4 <__sanitizer_symbolize_global@@Base+0x1ea0>
    72c8:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    72cc:	ldr	x0, [x0, #3440]
    72d0:	ret
    72d4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    72d8:	ldr	x0, [x0, #3432]
    72dc:	cbz	x0, 72e4 <*ABS*+0x10@plt+0x514>
    72e0:	b	66f0 <__lsan_default_options@plt>
    72e4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    72e8:	add	x0, x0, #0x60f
    72ec:	ret
    72f0:	stp	x19, x20, [sp, #-80]!
    72f4:	mov	x19, x0
    72f8:	add	x20, sp, #0x20
    72fc:	str	x30, [sp, #16]
    7300:	mov	x0, x20
    7304:	bl	1997c <OnPrint@@Base+0x1114>
    7308:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    730c:	add	x0, x0, #0xcc0
    7310:	add	x1, x0, #0x90
    7314:	stp	x19, x20, [sp, #56]
    7318:	ldrb	w0, [x0, #159]
    731c:	cbz	w0, 7334 <*ABS*+0x10@plt+0x564>
    7320:	ldrb	w0, [x1, #17]
    7324:	cbz	w0, 7334 <*ABS*+0x10@plt+0x564>
    7328:	bl	9d34 <__lsan_do_recoverable_leak_check@@Base+0x13d8>
    732c:	cmp	x0, #0x0
    7330:	cset	w0, ne  // ne = any
    7334:	add	x1, sp, #0x38
    7338:	strb	w0, [sp, #72]
    733c:	adrp	x0, 7000 <*ABS*+0x10@plt+0x230>
    7340:	add	x0, x0, #0xe40
    7344:	bl	a810 <__sanitizer_get_allocated_size@@Base+0x310>
    7348:	ldp	x0, x1, [sp, #32]
    734c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    7350:	ldr	x30, [sp, #16]
    7354:	ldp	x19, x20, [sp], #80
    7358:	ret
    735c:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7360:	ldrb	w0, [x0, #3448]
    7364:	ret

0000000000007368 <__lsan_disable@@Base>:
    7368:	b	9b80 <__lsan_do_recoverable_leak_check@@Base+0x1224>

000000000000736c <__lsan_enable@@Base>:
    736c:	b	9b9c <__lsan_do_recoverable_leak_check@@Base+0x1240>
    7370:	stp	x19, x20, [sp, #-64]!
    7374:	mov	x19, x0
    7378:	ldr	w0, [x0, #112]
    737c:	stp	x21, x22, [sp, #16]
    7380:	cmp	w0, #0x2
    7384:	stp	x23, x24, [sp, #32]
    7388:	str	x30, [sp, #48]
    738c:	b.ne	7420 <__lsan_enable@@Base+0xb4>  // b.any
    7390:	ldr	x24, [x1, #16]
    7394:	mov	x20, x1
    7398:	mov	x21, #0x0                   	// #0
    739c:	mov	x23, x24
    73a0:	cmp	x23, x21
    73a4:	b.ls	73dc <__lsan_enable@@Base+0x70>  // b.plast
    73a8:	add	x22, x23, x21
    73ac:	mov	x0, x20
    73b0:	lsr	x22, x22, #1
    73b4:	mov	x1, x22
    73b8:	bl	92f0 <__lsan_do_recoverable_leak_check@@Base+0x994>
    73bc:	ldr	x1, [x0]
    73c0:	ldr	x0, [x19, #32]
    73c4:	cmp	w1, w0
    73c8:	b.ge	73d4 <__lsan_enable@@Base+0x68>  // b.tcont
    73cc:	add	x21, x22, #0x1
    73d0:	b	73a0 <__lsan_enable@@Base+0x34>
    73d4:	mov	x23, x22
    73d8:	b	73a0 <__lsan_enable@@Base+0x34>
    73dc:	cmp	x24, x21
    73e0:	b.ls	7400 <__lsan_enable@@Base+0x94>  // b.plast
    73e4:	mov	x1, x21
    73e8:	mov	x0, x20
    73ec:	bl	92f0 <__lsan_do_recoverable_leak_check@@Base+0x994>
    73f0:	ldr	x1, [x0]
    73f4:	ldr	x0, [x19, #32]
    73f8:	cmp	x1, x0
    73fc:	b.eq	7420 <__lsan_enable@@Base+0xb4>  // b.none
    7400:	ldp	x21, x22, [sp, #16]
    7404:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7408:	ldp	x23, x24, [sp, #32]
    740c:	add	x0, x0, #0x9ca
    7410:	ldr	x1, [x19, #32]
    7414:	ldr	x30, [sp, #48]
    7418:	ldp	x19, x20, [sp], #64
    741c:	b	18b74 <OnPrint@@Base+0x30c>
    7420:	ldp	x21, x22, [sp, #16]
    7424:	ldp	x23, x24, [sp, #32]
    7428:	ldr	x30, [sp, #48]
    742c:	ldp	x19, x20, [sp], #64
    7430:	ret

0000000000007434 <__lsan_ignore_object@@Base>:
    7434:	stp	x19, x30, [sp, #-32]!
    7438:	mov	x19, x0
    743c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7440:	ldr	x0, [x0, #4040]
    7444:	ldrb	w0, [x0, #57]
    7448:	cbz	w0, 74a8 <__lsan_ignore_object@@Base+0x74>
    744c:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7450:	add	x0, x0, #0xcc0
    7454:	add	x0, x0, #0xc0
    7458:	str	x0, [sp, #24]
    745c:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
    7460:	mov	x0, x19
    7464:	bl	a610 <__sanitizer_get_allocated_size@@Base+0x110>
    7468:	cmp	w0, #0x2
    746c:	b.ne	7494 <__lsan_ignore_object@@Base+0x60>  // b.any
    7470:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    7474:	ldr	x0, [x0, #3680]
    7478:	ldr	w0, [x0]
    747c:	cbz	w0, 74a0 <__lsan_ignore_object@@Base+0x6c>
    7480:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7484:	mov	x1, x19
    7488:	add	x0, x0, #0xa0a
    748c:	bl	18b74 <OnPrint@@Base+0x30c>
    7490:	b	74a0 <__lsan_ignore_object@@Base+0x6c>
    7494:	cmp	w0, #0x1
    7498:	b.eq	74b0 <__lsan_ignore_object@@Base+0x7c>  // b.none
    749c:	cbz	w0, 74d0 <__lsan_ignore_object@@Base+0x9c>
    74a0:	add	x0, sp, #0x18
    74a4:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
    74a8:	ldp	x19, x30, [sp], #32
    74ac:	ret
    74b0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    74b4:	ldr	x0, [x0, #3680]
    74b8:	ldr	w0, [x0]
    74bc:	cbz	w0, 74a0 <__lsan_ignore_object@@Base+0x6c>
    74c0:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    74c4:	mov	x1, x19
    74c8:	add	x0, x0, #0xa3d
    74cc:	b	748c <__lsan_ignore_object@@Base+0x58>
    74d0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    74d4:	ldr	x0, [x0, #3680]
    74d8:	ldr	w0, [x0]
    74dc:	cbz	w0, 74a0 <__lsan_ignore_object@@Base+0x6c>
    74e0:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    74e4:	mov	x1, x19
    74e8:	add	x0, x0, #0xa81
    74ec:	b	748c <__lsan_ignore_object@@Base+0x58>

00000000000074f0 <__lsan_unregister_root_region@@Base>:
    74f0:	stp	x19, x20, [sp, #-80]!
    74f4:	mov	x19, x0
    74f8:	mov	x20, x1
    74fc:	stp	x21, x22, [sp, #16]
    7500:	adrp	x21, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7504:	add	x21, x21, #0xcc0
    7508:	add	x0, x21, #0xc0
    750c:	stp	x23, x24, [sp, #32]
    7510:	str	x30, [sp, #48]
    7514:	str	x0, [sp, #72]
    7518:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
    751c:	ldr	x21, [x21, #176]
    7520:	cbz	x21, 75b8 <__lsan_unregister_root_region@@Base+0xc8>
    7524:	ldr	x24, [x21, #16]
    7528:	mov	x23, #0x0                   	// #0
    752c:	cmp	x23, x24
    7530:	b.eq	75e0 <__lsan_unregister_root_region@@Base+0xf0>  // b.none
    7534:	mov	x1, x23
    7538:	mov	x0, x21
    753c:	bl	92b8 <__lsan_do_recoverable_leak_check@@Base+0x95c>
    7540:	mov	x22, x0
    7544:	ldr	x0, [x0]
    7548:	cmp	x19, x0
    754c:	b.ne	75d8 <__lsan_unregister_root_region@@Base+0xe8>  // b.any
    7550:	ldr	x0, [x22, #8]
    7554:	cmp	x20, x0
    7558:	b.ne	75d8 <__lsan_unregister_root_region@@Base+0xe8>  // b.any
    755c:	sub	x1, x24, #0x1
    7560:	mov	x0, x21
    7564:	bl	92b8 <__lsan_do_recoverable_leak_check@@Base+0x95c>
    7568:	ldp	x0, x1, [x0]
    756c:	stp	x0, x1, [x22]
    7570:	add	x0, x21, #0x10
    7574:	bl	6fb4 <*ABS*+0x10@plt+0x1e4>
    7578:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    757c:	ldr	x0, [x0, #3680]
    7580:	ldr	w0, [x0]
    7584:	cbz	w0, 759c <__lsan_unregister_root_region@@Base+0xac>
    7588:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    758c:	mov	x2, x20
    7590:	mov	x1, x19
    7594:	add	x0, x0, #0xacd
    7598:	bl	18b74 <OnPrint@@Base+0x30c>
    759c:	add	x0, sp, #0x48
    75a0:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
    75a4:	ldp	x21, x22, [sp, #16]
    75a8:	ldp	x23, x24, [sp, #32]
    75ac:	ldr	x30, [sp, #48]
    75b0:	ldp	x19, x20, [sp], #80
    75b4:	ret
    75b8:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    75bc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    75c0:	add	x2, x2, #0xab5
    75c4:	add	x0, x0, #0x586
    75c8:	mov	x4, #0x0                   	// #0
    75cc:	mov	x3, #0x0                   	// #0
    75d0:	mov	w1, #0x341                 	// #833
    75d4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    75d8:	add	x23, x23, #0x1
    75dc:	b	752c <__lsan_unregister_root_region@@Base+0x3c>
    75e0:	mov	x2, x20
    75e4:	mov	x1, x19
    75e8:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    75ec:	add	x0, x0, #0xafa
    75f0:	bl	18b74 <OnPrint@@Base+0x30c>
    75f4:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    75f8:	stp	x19, x20, [sp, #-48]!
    75fc:	add	x19, x0, #0x8
    7600:	mov	x20, #0x0                   	// #0
    7604:	stp	x21, x22, [sp, #16]
    7608:	mov	x21, #0x0                   	// #0
    760c:	ldr	x22, [x0, #24]
    7610:	str	x30, [sp, #32]
    7614:	cmp	x20, x22
    7618:	b.eq	763c <__lsan_unregister_root_region@@Base+0x14c>  // b.none
    761c:	mov	x1, x20
    7620:	mov	x0, x19
    7624:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    7628:	ldrb	w0, [x0, #29]
    762c:	cbnz	w0, 7634 <__lsan_unregister_root_region@@Base+0x144>
    7630:	add	x21, x21, #0x1
    7634:	add	x20, x20, #0x1
    7638:	b	7614 <__lsan_unregister_root_region@@Base+0x124>
    763c:	mov	x0, x21
    7640:	ldp	x21, x22, [sp, #16]
    7644:	ldr	x30, [sp, #32]
    7648:	ldp	x19, x20, [sp], #48
    764c:	ret
    7650:	stp	x19, x20, [sp, #-48]!
    7654:	mov	x19, x0
    7658:	add	x0, x0, #0x8
    765c:	stp	x21, x22, [sp, #16]
    7660:	adrp	x21, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7664:	add	x21, x21, #0xb4f
    7668:	stp	x23, x30, [sp, #32]
    766c:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    7670:	ldr	w22, [x0]
    7674:	mov	x20, #0x0                   	// #0
    7678:	mov	x23, #0x18                  	// #24
    767c:	ldr	x0, [x19, #48]
    7680:	cmp	x20, x0
    7684:	b.cs	76b4 <__lsan_unregister_root_region@@Base+0x1c4>  // b.hs, b.nlast
    7688:	mul	x1, x20, x23
    768c:	ldr	x2, [x19, #32]
    7690:	add	x0, x2, x1
    7694:	ldr	w1, [x2, x1]
    7698:	cmp	w1, w22
    769c:	b.ne	76ac <__lsan_unregister_root_region@@Base+0x1bc>  // b.any
    76a0:	ldp	x1, x2, [x0, #8]
    76a4:	mov	x0, x21
    76a8:	bl	18af0 <OnPrint@@Base+0x288>
    76ac:	add	x20, x20, #0x1
    76b0:	b	767c <__lsan_unregister_root_region@@Base+0x18c>
    76b4:	ldp	x21, x22, [sp, #16]
    76b8:	ldp	x23, x30, [sp, #32]
    76bc:	ldp	x19, x20, [sp], #48
    76c0:	ret
    76c4:	stp	x19, x20, [sp, #-80]!
    76c8:	mov	x19, x1
    76cc:	mov	x20, x0
    76d0:	stp	x21, x22, [sp, #16]
    76d4:	adrp	x22, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    76d8:	adrp	x21, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    76dc:	stp	x23, x24, [sp, #32]
    76e0:	add	x24, x0, #0x8
    76e4:	add	x22, x22, #0x60f
    76e8:	str	x30, [sp, #48]
    76ec:	bl	1a858 <__sanitizer_symbolize_global@@Base+0x114>
    76f0:	ands	w23, w0, #0xff
    76f4:	add	x21, x21, #0x67b
    76f8:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    76fc:	add	x1, x1, #0xb5f
    7700:	csel	x1, x1, x22, ne  // ne = any
    7704:	mov	x0, x21
    7708:	bl	18af0 <OnPrint@@Base+0x288>
    770c:	mov	x1, x19
    7710:	mov	x0, x24
    7714:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    7718:	ldrb	w2, [x0, #28]
    771c:	adrp	x4, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7720:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7724:	cmp	w2, #0x0
    7728:	ldp	x3, x2, [x0, #8]
    772c:	add	x0, x1, #0xb70
    7730:	add	x1, x4, #0xb69
    7734:	csel	x1, x1, x0, ne  // ne = any
    7738:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    773c:	add	x0, x0, #0xb82
    7740:	bl	18af0 <OnPrint@@Base+0x288>
    7744:	cmp	w23, #0x0
    7748:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    774c:	add	x1, x1, #0xb79
    7750:	mov	x0, x21
    7754:	csel	x1, x1, x22, ne  // ne = any
    7758:	bl	18af0 <OnPrint@@Base+0x288>
    775c:	mov	x1, x19
    7760:	mov	x0, x24
    7764:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    7768:	ldr	w0, [x0, #24]
    776c:	cbnz	w0, 7790 <__lsan_unregister_root_region@@Base+0x2a0>
    7770:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7774:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7778:	add	x2, x2, #0xbbb
    777c:	add	x0, x0, #0x586
    7780:	mov	x4, #0x0                   	// #0
    7784:	mov	x3, #0x0                   	// #0
    7788:	mov	w1, #0x1e1                 	// #481
    778c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    7790:	bl	1971c <OnPrint@@Base+0xeb4>
    7794:	stp	x0, x1, [sp, #64]
    7798:	add	x0, sp, #0x40
    779c:	bl	1a434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
    77a0:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    77a4:	ldrb	w0, [x0, #3408]
    77a8:	cbz	w0, 77d0 <__lsan_unregister_root_region@@Base+0x2e0>
    77ac:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    77b0:	add	x0, x0, #0xbd5
    77b4:	bl	18af0 <OnPrint@@Base+0x288>
    77b8:	mov	x1, x19
    77bc:	mov	x0, x20
    77c0:	bl	7650 <__lsan_unregister_root_region@@Base+0x160>
    77c4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    77c8:	add	x0, x0, #0x60e
    77cc:	bl	18af0 <OnPrint@@Base+0x288>
    77d0:	ldp	x21, x22, [sp, #16]
    77d4:	ldp	x23, x24, [sp, #32]
    77d8:	ldr	x30, [sp, #48]
    77dc:	ldp	x19, x20, [sp], #80
    77e0:	ret
    77e4:	stp	x19, x20, [sp, #-144]!
    77e8:	adrp	x20, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    77ec:	add	x20, x20, #0x38f
    77f0:	add	x20, x20, #0x15
    77f4:	stp	x23, x24, [sp, #32]
    77f8:	mov	x23, x0
    77fc:	mov	x19, #0x0                   	// #0
    7800:	stp	x21, x22, [sp, #16]
    7804:	stp	x25, x26, [sp, #48]
    7808:	stp	x27, x28, [sp, #64]
    780c:	str	x30, [sp, #80]
    7810:	ldr	x0, [x23, #24]
    7814:	cmp	x19, x0
    7818:	b.cs	7970 <__lsan_unregister_root_region@@Base+0x480>  // b.hs, b.nlast
    781c:	add	x22, x23, #0x8
    7820:	mov	x1, x19
    7824:	mov	x0, x22
    7828:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    782c:	ldr	w0, [x0, #24]
    7830:	mov	x24, #0x0                   	// #0
    7834:	bl	1971c <OnPrint@@Base+0xeb4>
    7838:	mov	x25, x0
    783c:	add	x0, sp, #0x88
    7840:	stp	x1, x0, [sp, #96]
    7844:	ldr	w0, [sp, #96]
    7848:	cmp	x24, w0, uxtw
    784c:	b.cs	7968 <__lsan_unregister_root_region@@Base+0x478>  // b.hs, b.nlast
    7850:	ldr	x28, [x25, x24, lsl #3]
    7854:	str	xzr, [sp, #120]
    7858:	bl	6f34 <*ABS*+0x10@plt+0x164>
    785c:	mov	x21, x0
    7860:	bl	1d468 <__sanitizer_symbolize_global@@Base+0x2d24>
    7864:	sub	x28, x28, #0x4
    7868:	ldr	x3, [sp, #104]
    786c:	add	x2, sp, #0x80
    7870:	mov	x1, x28
    7874:	str	xzr, [sp, #128]
    7878:	bl	1d89c <__sanitizer_symbolize_global@@Base+0x3158>
    787c:	tst	w0, #0xff
    7880:	b.eq	78b4 <__lsan_unregister_root_region@@Base+0x3c4>  // b.none
    7884:	ldr	x1, [sp, #128]
    7888:	cbz	x1, 78b4 <__lsan_unregister_root_region@@Base+0x3c4>
    788c:	add	x3, sp, #0x78
    7890:	mov	x2, x20
    7894:	mov	x0, x21
    7898:	bl	1c3f4 <__sanitizer_symbolize_global@@Base+0x1cb0>
    789c:	tst	w0, #0xff
    78a0:	b.eq	78b4 <__lsan_unregister_root_region@@Base+0x3c4>  // b.none
    78a4:	ldr	x21, [sp, #120]
    78a8:	cbnz	x21, 791c <__lsan_unregister_root_region@@Base+0x42c>
    78ac:	add	x24, x24, #0x1
    78b0:	b	7844 <__lsan_unregister_root_region@@Base+0x354>
    78b4:	bl	1d468 <__sanitizer_symbolize_global@@Base+0x2d24>
    78b8:	add	x27, sp, #0x78
    78bc:	mov	x1, x28
    78c0:	bl	1d91c <__sanitizer_symbolize_global@@Base+0x31d8>
    78c4:	mov	x28, x0
    78c8:	mov	x26, x0
    78cc:	cbz	x26, 7910 <__lsan_unregister_root_region@@Base+0x420>
    78d0:	ldr	x1, [x26, #40]
    78d4:	mov	x3, x27
    78d8:	mov	x2, x20
    78dc:	mov	x0, x21
    78e0:	bl	1c3f4 <__sanitizer_symbolize_global@@Base+0x1cb0>
    78e4:	tst	w0, #0xff
    78e8:	b.ne	7910 <__lsan_unregister_root_region@@Base+0x420>  // b.any
    78ec:	ldr	x1, [x26, #56]
    78f0:	mov	x3, x27
    78f4:	mov	x2, x20
    78f8:	mov	x0, x21
    78fc:	bl	1c3f4 <__sanitizer_symbolize_global@@Base+0x1cb0>
    7900:	tst	w0, #0xff
    7904:	b.ne	7910 <__lsan_unregister_root_region@@Base+0x420>  // b.any
    7908:	ldr	x26, [x26]
    790c:	b	78cc <__lsan_unregister_root_region@@Base+0x3dc>
    7910:	mov	x0, x28
    7914:	bl	1cb80 <__sanitizer_symbolize_global@@Base+0x243c>
    7918:	b	78a4 <__lsan_unregister_root_region@@Base+0x3b4>
    791c:	mov	x1, x19
    7920:	mov	x0, x22
    7924:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    7928:	ldr	w24, [x21, #16]
    792c:	ldr	x0, [x0, #16]
    7930:	ldr	x1, [x21, #24]
    7934:	add	x1, x1, x0
    7938:	str	x1, [x21, #24]
    793c:	mov	x0, x22
    7940:	mov	x1, x19
    7944:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    7948:	ldr	x0, [x0, #8]
    794c:	mov	x1, x19
    7950:	add	w24, w24, w0
    7954:	str	w24, [x21, #16]
    7958:	mov	x0, x22
    795c:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    7960:	mov	w1, #0x1                   	// #1
    7964:	strb	w1, [x0, #29]
    7968:	add	x19, x19, #0x1
    796c:	b	7810 <__lsan_unregister_root_region@@Base+0x320>
    7970:	ldp	x21, x22, [sp, #16]
    7974:	ldp	x23, x24, [sp, #32]
    7978:	ldp	x25, x26, [sp, #48]
    797c:	ldp	x27, x28, [sp, #64]
    7980:	ldr	x30, [sp, #80]
    7984:	ldp	x19, x20, [sp], #144
    7988:	ret
    798c:	stp	x29, x30, [sp, #-128]!
    7990:	mov	x29, sp
    7994:	stp	x19, x20, [sp, #16]
    7998:	stp	x21, x22, [sp, #32]
    799c:	mov	x21, x0
    79a0:	sub	w0, w4, #0x1
    79a4:	stp	x23, x24, [sp, #48]
    79a8:	cmp	w0, #0x1
    79ac:	stp	x25, x26, [sp, #64]
    79b0:	stp	x27, x28, [sp, #80]
    79b4:	b.ls	79d8 <__lsan_unregister_root_region@@Base+0x4e8>  // b.plast
    79b8:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    79bc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    79c0:	add	x2, x2, #0xbec
    79c4:	add	x0, x0, #0x586
    79c8:	mov	x4, #0x0                   	// #0
    79cc:	mov	x3, #0x0                   	// #0
    79d0:	mov	w1, #0x9e                  	// #158
    79d4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    79d8:	adrp	x20, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    79dc:	add	x0, x20, #0xcc0
    79e0:	mov	x26, x2
    79e4:	mov	x23, #0x8                   	// #8
    79e8:	mov	x25, x1
    79ec:	mov	w27, w4
    79f0:	ldrb	w2, [x0, #162]
    79f4:	ldrb	w0, [x0, #164]
    79f8:	cmp	w2, #0x0
    79fc:	csinc	x23, x23, xzr, eq  // eq = none
    7a00:	cbz	w0, 7a1c <__lsan_unregister_root_region@@Base+0x52c>
    7a04:	mov	x1, x3
    7a08:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7a0c:	mov	x3, x25
    7a10:	mov	x2, x21
    7a14:	add	x0, x0, #0xc25
    7a18:	bl	18b74 <OnPrint@@Base+0x30c>
    7a1c:	udiv	x0, x21, x23
    7a20:	add	x19, x21, x23
    7a24:	add	x20, x20, #0xcc0
    7a28:	adrp	x28, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7a2c:	add	x22, x29, #0x78
    7a30:	add	x20, x20, #0x90
    7a34:	add	x28, x28, #0xc3f
    7a38:	msub	x0, x0, x23, x21
    7a3c:	sub	x19, x19, x0
    7a40:	cmp	x0, #0x0
    7a44:	csel	x19, x19, x21, ne  // ne = any
    7a48:	add	x0, x19, #0x8
    7a4c:	cmp	x0, x25
    7a50:	b.hi	7b88 <__lsan_unregister_root_region@@Base+0x698>  // b.pmore
    7a54:	ldr	x24, [x19]
    7a58:	mov	x0, #0x3fff                	// #16383
    7a5c:	cmp	x24, x0
    7a60:	b.ls	7b80 <__lsan_unregister_root_region@@Base+0x690>  // b.plast
    7a64:	mov	x0, x29
    7a68:	bl	91b4 <__lsan_do_recoverable_leak_check@@Base+0x858>
    7a6c:	add	w0, w0, #0x1
    7a70:	lsr	x0, x24, x0
    7a74:	cbnz	x0, 7b80 <__lsan_unregister_root_region@@Base+0x690>
    7a78:	mov	x0, x24
    7a7c:	bl	a738 <__sanitizer_get_allocated_size@@Base+0x238>
    7a80:	str	x0, [x29, #112]
    7a84:	mov	x1, x0
    7a88:	cbz	x0, 7b80 <__lsan_unregister_root_region@@Base+0x690>
    7a8c:	cmp	x0, x21
    7a90:	b.eq	7b80 <__lsan_unregister_root_region@@Base+0x690>  // b.none
    7a94:	mov	x0, x22
    7a98:	bl	a548 <__sanitizer_get_allocated_size@@Base+0x48>
    7a9c:	mov	x0, x22
    7aa0:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    7aa4:	cmp	w0, #0x2
    7aa8:	b.eq	7b80 <__lsan_unregister_root_region@@Base+0x690>  // b.none
    7aac:	mov	x0, x22
    7ab0:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    7ab4:	cmp	w0, #0x3
    7ab8:	b.eq	7b80 <__lsan_unregister_root_region@@Base+0x690>  // b.none
    7abc:	ldrb	w0, [x20, #19]
    7ac0:	cbz	w0, 7b2c <__lsan_unregister_root_region@@Base+0x63c>
    7ac4:	mov	x0, x22
    7ac8:	mov	w1, w27
    7acc:	bl	a380 <__sanitizer_print_stack_trace@@Base+0x2e0>
    7ad0:	ldrb	w0, [x20, #20]
    7ad4:	cbz	w0, 7b18 <__lsan_unregister_root_region@@Base+0x628>
    7ad8:	ldr	x3, [x29, #112]
    7adc:	mov	x0, x22
    7ae0:	str	x3, [x29, #96]
    7ae4:	bl	a394 <__sanitizer_print_stack_trace@@Base+0x2f4>
    7ae8:	ldr	x4, [x29, #112]
    7aec:	add	x4, x0, x4
    7af0:	mov	x0, x22
    7af4:	str	x4, [x29, #104]
    7af8:	bl	a394 <__sanitizer_print_stack_trace@@Base+0x2f4>
    7afc:	mov	x5, x0
    7b00:	ldp	x3, x4, [x29, #96]
    7b04:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7b08:	mov	x2, x24
    7b0c:	mov	x1, x19
    7b10:	add	x0, x0, #0xc83
    7b14:	bl	18b74 <OnPrint@@Base+0x30c>
    7b18:	cbz	x26, 7b80 <__lsan_unregister_root_region@@Base+0x690>
    7b1c:	add	x1, x29, #0x70
    7b20:	mov	x0, x26
    7b24:	bl	9504 <__lsan_do_recoverable_leak_check@@Base+0xba8>
    7b28:	b	7b80 <__lsan_unregister_root_region@@Base+0x690>
    7b2c:	mov	x0, x19
    7b30:	bl	9f70 <__lsan_do_recoverable_leak_check@@Base+0x1614>
    7b34:	tst	w0, #0xff
    7b38:	b.eq	7ac4 <__lsan_unregister_root_region@@Base+0x5d4>  // b.none
    7b3c:	ldrb	w0, [x20, #20]
    7b40:	cbz	w0, 7b80 <__lsan_unregister_root_region@@Base+0x690>
    7b44:	ldr	x3, [x29, #112]
    7b48:	mov	x0, x22
    7b4c:	str	x3, [x29, #96]
    7b50:	bl	a394 <__sanitizer_print_stack_trace@@Base+0x2f4>
    7b54:	ldr	x4, [x29, #112]
    7b58:	add	x4, x0, x4
    7b5c:	mov	x0, x22
    7b60:	str	x4, [x29, #104]
    7b64:	bl	a394 <__sanitizer_print_stack_trace@@Base+0x2f4>
    7b68:	mov	x5, x0
    7b6c:	ldp	x3, x4, [x29, #96]
    7b70:	mov	x2, x24
    7b74:	mov	x1, x19
    7b78:	mov	x0, x28
    7b7c:	bl	18b74 <OnPrint@@Base+0x30c>
    7b80:	add	x19, x19, x23
    7b84:	b	7a48 <__lsan_unregister_root_region@@Base+0x558>
    7b88:	ldp	x19, x20, [sp, #16]
    7b8c:	ldp	x21, x22, [sp, #32]
    7b90:	ldp	x23, x24, [sp, #48]
    7b94:	ldp	x25, x26, [sp, #64]
    7b98:	ldp	x27, x28, [sp, #80]
    7b9c:	ldp	x29, x30, [sp], #128
    7ba0:	ret
    7ba4:	stp	x19, x20, [sp, #-48]!
    7ba8:	mov	x20, x0
    7bac:	mov	x19, x1
    7bb0:	add	x0, sp, #0x20
    7bb4:	add	x1, sp, #0x28
    7bb8:	stp	x21, x30, [sp, #16]
    7bbc:	mov	x21, x2
    7bc0:	stp	xzr, xzr, [sp, #32]
    7bc4:	bl	a33c <__sanitizer_print_stack_trace@@Base+0x29c>
    7bc8:	ldr	x1, [sp, #32]
    7bcc:	cmp	x1, x20
    7bd0:	b.cc	7c74 <__lsan_unregister_root_region@@Base+0x784>  // b.lo, b.ul, b.last
    7bd4:	cmp	x1, x19
    7bd8:	b.cs	7c74 <__lsan_unregister_root_region@@Base+0x784>  // b.hs, b.nlast
    7bdc:	ldr	x3, [sp, #40]
    7be0:	cmp	x1, x3
    7be4:	b.ls	7c08 <__lsan_unregister_root_region@@Base+0x718>  // b.plast
    7be8:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7bec:	add	x2, x2, #0xcb8
    7bf0:	mov	x4, x3
    7bf4:	mov	x3, x1
    7bf8:	mov	w1, #0xc4                  	// #196
    7bfc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7c00:	add	x0, x0, #0x586
    7c04:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    7c08:	cmp	x19, x3
    7c0c:	b.cs	7c24 <__lsan_unregister_root_region@@Base+0x734>  // b.hs, b.nlast
    7c10:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7c14:	mov	x4, x19
    7c18:	add	x2, x2, #0xce1
    7c1c:	mov	w1, #0xc5                  	// #197
    7c20:	b	7bfc <__lsan_unregister_root_region@@Base+0x70c>
    7c24:	cmp	x1, x20
    7c28:	b.ls	7c44 <__lsan_unregister_root_region@@Base+0x754>  // b.plast
    7c2c:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7c30:	mov	x2, x21
    7c34:	add	x3, x3, #0xcfe
    7c38:	mov	x0, x20
    7c3c:	mov	w4, #0x2                   	// #2
    7c40:	bl	798c <__lsan_unregister_root_region@@Base+0x49c>
    7c44:	ldr	x0, [sp, #40]
    7c48:	cmp	x0, x19
    7c4c:	b.cs	7c68 <__lsan_unregister_root_region@@Base+0x778>  // b.hs, b.nlast
    7c50:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7c54:	mov	x2, x21
    7c58:	add	x3, x3, #0xcfe
    7c5c:	mov	x1, x19
    7c60:	mov	w4, #0x2                   	// #2
    7c64:	bl	798c <__lsan_unregister_root_region@@Base+0x49c>
    7c68:	ldp	x21, x30, [sp, #16]
    7c6c:	ldp	x19, x20, [sp], #48
    7c70:	ret
    7c74:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7c78:	mov	x2, x21
    7c7c:	add	x3, x3, #0xcfe
    7c80:	mov	x1, x19
    7c84:	mov	x0, x20
    7c88:	mov	w4, #0x2                   	// #2
    7c8c:	b	7c64 <__lsan_unregister_root_region@@Base+0x774>
    7c90:	mov	w4, #0x2                   	// #2
    7c94:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7c98:	add	x3, x3, #0xd05
    7c9c:	b	798c <__lsan_unregister_root_region@@Base+0x49c>
    7ca0:	stp	x19, x20, [sp, #-48]!
    7ca4:	mov	x5, x1
    7ca8:	mov	x6, x2
    7cac:	ldr	x1, [x1]
    7cb0:	stp	x21, x22, [sp, #16]
    7cb4:	and	w22, w4, #0xff
    7cb8:	ldr	x4, [x5, #8]
    7cbc:	cmp	x1, x2
    7cc0:	csel	x20, x1, x2, cs  // cs = hs, nlast
    7cc4:	str	x30, [sp, #32]
    7cc8:	add	x2, x1, x4
    7ccc:	cmp	x2, x3
    7cd0:	csel	x21, x2, x3, ls  // ls = plast
    7cd4:	cmp	x20, x21
    7cd8:	b.cs	7d44 <__lsan_unregister_root_region@@Base+0x854>  // b.hs, b.nlast
    7cdc:	mov	x19, x0
    7ce0:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7ce4:	ldrb	w0, [x0, #3428]
    7ce8:	cbz	w0, 7d18 <__lsan_unregister_root_region@@Base+0x828>
    7cec:	cmp	w22, #0x0
    7cf0:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7cf4:	adrp	x5, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7cf8:	add	x0, x0, #0xd10
    7cfc:	add	x5, x5, #0xd12
    7d00:	mov	x4, x3
    7d04:	csel	x5, x5, x0, ne  // ne = any
    7d08:	mov	x3, x6
    7d0c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7d10:	add	x0, x0, #0xd1b
    7d14:	bl	18b74 <OnPrint@@Base+0x30c>
    7d18:	cbz	w22, 7d44 <__lsan_unregister_root_region@@Base+0x854>
    7d1c:	mov	x2, x19
    7d20:	mov	x1, x21
    7d24:	mov	x0, x20
    7d28:	mov	w4, #0x2                   	// #2
    7d2c:	ldp	x21, x22, [sp, #16]
    7d30:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7d34:	ldr	x30, [sp, #32]
    7d38:	add	x3, x3, #0xd57
    7d3c:	ldp	x19, x20, [sp], #48
    7d40:	b	798c <__lsan_unregister_root_region@@Base+0x49c>
    7d44:	ldp	x21, x22, [sp, #16]
    7d48:	ldr	x30, [sp, #32]
    7d4c:	ldp	x19, x20, [sp], #48
    7d50:	ret
    7d54:	stp	x19, x20, [sp, #-48]!
    7d58:	str	x30, [sp, #16]
    7d5c:	bl	a358 <__sanitizer_print_stack_trace@@Base+0x2b8>
    7d60:	mov	x1, x0
    7d64:	add	x20, sp, #0x28
    7d68:	mov	x19, x0
    7d6c:	mov	x0, x20
    7d70:	bl	a548 <__sanitizer_get_allocated_size@@Base+0x48>
    7d74:	mov	x0, x20
    7d78:	bl	a35c <__sanitizer_print_stack_trace@@Base+0x2bc>
    7d7c:	tst	w0, #0xff
    7d80:	b.eq	7db8 <__lsan_unregister_root_region@@Base+0x8c8>  // b.none
    7d84:	mov	x0, x20
    7d88:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    7d8c:	cmp	w0, #0x2
    7d90:	b.eq	7db8 <__lsan_unregister_root_region@@Base+0x8c8>  // b.none
    7d94:	mov	x0, x20
    7d98:	bl	a394 <__sanitizer_print_stack_trace@@Base+0x2f4>
    7d9c:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7da0:	add	x1, x0, x19
    7da4:	add	x3, x3, #0xd5c
    7da8:	mov	x0, x19
    7dac:	mov	w4, #0x1                   	// #1
    7db0:	mov	x2, #0x0                   	// #0
    7db4:	bl	798c <__lsan_unregister_root_region@@Base+0x49c>
    7db8:	ldr	x30, [sp, #16]
    7dbc:	ldp	x19, x20, [sp], #48
    7dc0:	ret
    7dc4:	stp	x19, x20, [sp, #-64]!
    7dc8:	mov	x19, x0
    7dcc:	stp	x21, x22, [sp, #16]
    7dd0:	adrp	x21, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7dd4:	add	x22, sp, #0x38
    7dd8:	add	x21, x21, #0xd5c
    7ddc:	stp	x23, x30, [sp, #32]
    7de0:	add	x23, x0, #0x10
    7de4:	ldr	x0, [x19, #16]
    7de8:	cbz	x0, 7e30 <__lsan_unregister_root_region@@Base+0x940>
    7dec:	ldr	x1, [x19]
    7df0:	add	x0, x1, x0, lsl #3
    7df4:	ldur	x20, [x0, #-8]
    7df8:	mov	x0, x23
    7dfc:	bl	6fb4 <*ABS*+0x10@plt+0x1e4>
    7e00:	mov	x1, x20
    7e04:	mov	x0, x22
    7e08:	bl	a548 <__sanitizer_get_allocated_size@@Base+0x48>
    7e0c:	mov	x0, x22
    7e10:	bl	a394 <__sanitizer_print_stack_trace@@Base+0x2f4>
    7e14:	add	x1, x20, x0
    7e18:	mov	x3, x21
    7e1c:	mov	x2, x19
    7e20:	mov	x0, x20
    7e24:	mov	w4, #0x2                   	// #2
    7e28:	bl	798c <__lsan_unregister_root_region@@Base+0x49c>
    7e2c:	b	7de4 <__lsan_unregister_root_region@@Base+0x8f4>
    7e30:	ldp	x21, x22, [sp, #16]
    7e34:	ldp	x23, x30, [sp, #32]
    7e38:	ldp	x19, x20, [sp], #64
    7e3c:	ret
    7e40:	stp	x19, x20, [sp, #-64]!
    7e44:	stp	x21, x30, [sp, #16]
    7e48:	str	x0, [sp, #40]
    7e4c:	cbnz	x1, 7e70 <__lsan_unregister_root_region@@Base+0x980>
    7e50:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7e54:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7e58:	add	x2, x2, #0xd61
    7e5c:	add	x0, x0, #0x586
    7e60:	mov	x4, #0x0                   	// #0
    7e64:	mov	x3, #0x0                   	// #0
    7e68:	mov	w1, #0x18b                 	// #395
    7e6c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    7e70:	mov	x19, x1
    7e74:	bl	a358 <__sanitizer_print_stack_trace@@Base+0x2b8>
    7e78:	mov	x1, x0
    7e7c:	add	x20, sp, #0x38
    7e80:	mov	x0, x20
    7e84:	str	x1, [sp, #40]
    7e88:	bl	a548 <__sanitizer_get_allocated_size@@Base+0x48>
    7e8c:	mov	x0, x20
    7e90:	bl	a35c <__sanitizer_print_stack_trace@@Base+0x2bc>
    7e94:	tst	w0, #0xff
    7e98:	b.eq	7f18 <__lsan_unregister_root_region@@Base+0xa28>  // b.none
    7e9c:	mov	x0, x20
    7ea0:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    7ea4:	cmp	w0, #0x2
    7ea8:	b.eq	7f18 <__lsan_unregister_root_region@@Base+0xa28>  // b.none
    7eac:	mov	x0, x20
    7eb0:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    7eb4:	cmp	w0, #0x3
    7eb8:	b.eq	7f18 <__lsan_unregister_root_region@@Base+0xa28>  // b.none
    7ebc:	mov	x0, x20
    7ec0:	bl	a3a4 <__sanitizer_print_stack_trace@@Base+0x304>
    7ec4:	mov	w1, w0
    7ec8:	cbz	w0, 7f00 <__lsan_unregister_root_region@@Base+0xa10>
    7ecc:	ldr	x0, [x19, #8]
    7ed0:	bl	19828 <OnPrint@@Base+0xfc0>
    7ed4:	cmp	w1, #0x1
    7ed8:	b.ls	7f00 <__lsan_unregister_root_region@@Base+0xa10>  // b.plast
    7edc:	ldr	x21, [x0, #8]
    7ee0:	cbz	x21, 7f00 <__lsan_unregister_root_region@@Base+0xa10>
    7ee4:	ldrb	w0, [x19, #16]
    7ee8:	cbz	w0, 7f18 <__lsan_unregister_root_region@@Base+0xa28>
    7eec:	bl	9d34 <__lsan_do_recoverable_leak_check@@Base+0x13d8>
    7ef0:	mov	x1, x21
    7ef4:	bl	1034c <__sancov_default_options@@Base+0x1ec8>
    7ef8:	tst	w0, #0xff
    7efc:	b.eq	7f18 <__lsan_unregister_root_region@@Base+0xa28>  // b.none
    7f00:	mov	x0, x20
    7f04:	mov	w1, #0x2                   	// #2
    7f08:	bl	a380 <__sanitizer_print_stack_trace@@Base+0x2e0>
    7f0c:	ldr	x0, [x19]
    7f10:	add	x1, sp, #0x28
    7f14:	bl	9504 <__lsan_do_recoverable_leak_check@@Base+0xba8>
    7f18:	ldp	x21, x30, [sp, #16]
    7f1c:	ldp	x19, x20, [sp], #64
    7f20:	ret
    7f24:	stp	x19, x20, [sp, #-80]!
    7f28:	stp	x21, x22, [sp, #16]
    7f2c:	str	x30, [sp, #32]
    7f30:	str	x0, [sp, #56]
    7f34:	cbnz	x1, 7f58 <__lsan_unregister_root_region@@Base+0xa68>
    7f38:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7f3c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7f40:	add	x2, x2, #0xd61
    7f44:	add	x0, x0, #0x586
    7f48:	mov	x4, #0x0                   	// #0
    7f4c:	mov	x3, #0x0                   	// #0
    7f50:	mov	w1, #0x16f                 	// #367
    7f54:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    7f58:	mov	x20, x1
    7f5c:	bl	a358 <__sanitizer_print_stack_trace@@Base+0x2b8>
    7f60:	mov	x1, x0
    7f64:	add	x19, sp, #0x48
    7f68:	mov	x0, x19
    7f6c:	str	x1, [sp, #56]
    7f70:	bl	a548 <__sanitizer_get_allocated_size@@Base+0x48>
    7f74:	mov	x0, x19
    7f78:	bl	a35c <__sanitizer_print_stack_trace@@Base+0x2bc>
    7f7c:	tst	w0, #0xff
    7f80:	b.eq	7fe0 <__lsan_unregister_root_region@@Base+0xaf0>  // b.none
    7f84:	mov	x0, x19
    7f88:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    7f8c:	cmp	w0, #0x3
    7f90:	b.ne	7fe0 <__lsan_unregister_root_region@@Base+0xaf0>  // b.any
    7f94:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    7f98:	ldrb	w0, [x0, #3428]
    7f9c:	cbz	w0, 7fd4 <__lsan_unregister_root_region@@Base+0xae4>
    7fa0:	mov	x0, x19
    7fa4:	ldr	x22, [sp, #56]
    7fa8:	bl	a394 <__sanitizer_print_stack_trace@@Base+0x2f4>
    7fac:	ldr	x21, [sp, #56]
    7fb0:	add	x21, x0, x21
    7fb4:	mov	x0, x19
    7fb8:	bl	a394 <__sanitizer_print_stack_trace@@Base+0x2f4>
    7fbc:	mov	x3, x0
    7fc0:	mov	x2, x21
    7fc4:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    7fc8:	mov	x1, x22
    7fcc:	add	x0, x0, #0xd70
    7fd0:	bl	18b74 <OnPrint@@Base+0x30c>
    7fd4:	add	x1, sp, #0x38
    7fd8:	mov	x0, x20
    7fdc:	bl	9504 <__lsan_do_recoverable_leak_check@@Base+0xba8>
    7fe0:	ldp	x21, x22, [sp, #16]
    7fe4:	ldr	x30, [sp, #32]
    7fe8:	ldp	x19, x20, [sp], #80
    7fec:	ret
    7ff0:	stp	x19, x20, [sp, #-112]!
    7ff4:	cmp	w4, #0x1
    7ff8:	stp	x21, x22, [sp, #16]
    7ffc:	stp	x23, x24, [sp, #32]
    8000:	stp	x25, x26, [sp, #48]
    8004:	str	x30, [sp, #64]
    8008:	b.ls	802c <__lsan_unregister_root_region@@Base+0xb3c>  // b.plast
    800c:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8010:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8014:	add	x2, x2, #0xd93
    8018:	add	x0, x0, #0x586
    801c:	mov	x4, #0x0                   	// #0
    8020:	mov	x3, #0x0                   	// #0
    8024:	mov	w1, #0x29f                 	// #671
    8028:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    802c:	eor	w4, w4, #0x1
    8030:	mov	x19, x0
    8034:	ldr	x21, [x0, #24]
    8038:	mov	x25, x1
    803c:	mov	w24, w2
    8040:	mov	x23, x3
    8044:	and	w20, w4, #0x1
    8048:	add	x26, x0, #0x8
    804c:	mov	x22, #0x0                   	// #0
    8050:	cmp	x22, x21
    8054:	b.eq	80a4 <__lsan_unregister_root_region@@Base+0xbb4>  // b.none
    8058:	mov	x1, x22
    805c:	mov	x0, x26
    8060:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    8064:	ldr	w1, [x0, #24]
    8068:	cmp	w1, w24
    806c:	b.ne	8110 <__lsan_unregister_root_region@@Base+0xc20>  // b.any
    8070:	ldrb	w1, [x0, #28]
    8074:	cmp	w1, w20
    8078:	b.ne	8110 <__lsan_unregister_root_region@@Base+0xc20>  // b.any
    807c:	ldr	x1, [x0, #8]
    8080:	mov	x21, x22
    8084:	add	x1, x1, #0x1
    8088:	str	x1, [x0, #8]
    808c:	mov	x1, x22
    8090:	mov	x0, x26
    8094:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    8098:	ldr	x1, [x0, #16]
    809c:	add	x1, x1, x23
    80a0:	str	x1, [x0, #16]
    80a4:	ldr	x0, [x19, #24]
    80a8:	cmp	x21, x0
    80ac:	b.ne	8154 <__lsan_unregister_root_region@@Base+0xc64>  // b.any
    80b0:	mov	x0, #0x1388                	// #5000
    80b4:	cmp	x21, x0
    80b8:	b.eq	81cc <__lsan_unregister_root_region@@Base+0xcdc>  // b.none
    80bc:	mov	x0, #0x1                   	// #1
    80c0:	stp	xzr, xzr, [sp, #80]
    80c4:	stp	xzr, xzr, [sp, #96]
    80c8:	ldr	x4, [x19, #16]
    80cc:	stp	x0, x23, [sp, #88]
    80d0:	ldr	w0, [x19]
    80d4:	str	w0, [sp, #80]
    80d8:	add	w1, w0, #0x1
    80dc:	str	w1, [x19]
    80e0:	str	w24, [sp, #104]
    80e4:	lsr	x4, x4, #5
    80e8:	strb	w20, [sp, #108]
    80ec:	cmp	x21, x4
    80f0:	b.ls	8118 <__lsan_unregister_root_region@@Base+0xc28>  // b.plast
    80f4:	mov	x3, x21
    80f8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    80fc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8100:	add	x2, x2, #0x373
    8104:	add	x0, x0, #0x5c5
    8108:	mov	w1, #0x1be                 	// #446
    810c:	b	8028 <__lsan_unregister_root_region@@Base+0xb38>
    8110:	add	x22, x22, #0x1
    8114:	b	8050 <__lsan_unregister_root_region@@Base+0xb60>
    8118:	add	x20, x19, #0x8
    811c:	b.ne	8134 <__lsan_unregister_root_region@@Base+0xc44>  // b.any
    8120:	add	x0, x21, #0x1
    8124:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
    8128:	mov	x1, x0
    812c:	mov	x0, x20
    8130:	bl	957c <__lsan_do_recoverable_leak_check@@Base+0xc20>
    8134:	ldr	x0, [x20, #16]
    8138:	mov	x2, #0x20                  	// #32
    813c:	ldr	x3, [x19, #8]
    8140:	add	x1, x0, #0x1
    8144:	str	x1, [x20, #16]
    8148:	add	x1, sp, #0x50
    814c:	add	x0, x3, x0, lsl #5
    8150:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    8154:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8158:	ldrb	w0, [x0, #3408]
    815c:	cbz	w0, 81cc <__lsan_unregister_root_region@@Base+0xcdc>
    8160:	mov	x1, x21
    8164:	add	x0, x19, #0x8
    8168:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    816c:	ldr	w0, [x0]
    8170:	ldr	x4, [x19, #40]
    8174:	str	w0, [sp, #80]
    8178:	mov	x0, #0x18                  	// #24
    817c:	stp	x25, x23, [sp, #88]
    8180:	add	x20, x19, #0x20
    8184:	udiv	x4, x4, x0
    8188:	ldr	x3, [x20, #16]
    818c:	cmp	x3, x4
    8190:	b.hi	80f8 <__lsan_unregister_root_region@@Base+0xc08>  // b.pmore
    8194:	b.ne	81ac <__lsan_unregister_root_region@@Base+0xcbc>  // b.any
    8198:	add	x0, x3, #0x1
    819c:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
    81a0:	mov	x1, x0
    81a4:	mov	x0, x20
    81a8:	bl	9620 <__lsan_do_recoverable_leak_check@@Base+0xcc4>
    81ac:	ldr	x0, [x20, #16]
    81b0:	mov	x2, #0x18                  	// #24
    81b4:	ldr	x3, [x19, #32]
    81b8:	add	x1, x0, #0x1
    81bc:	str	x1, [x20, #16]
    81c0:	add	x1, sp, #0x50
    81c4:	madd	x0, x0, x2, x3
    81c8:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    81cc:	ldp	x21, x22, [sp, #16]
    81d0:	ldp	x23, x24, [sp, #32]
    81d4:	ldp	x25, x26, [sp, #48]
    81d8:	ldr	x30, [sp, #64]
    81dc:	ldp	x19, x20, [sp], #112
    81e0:	ret
    81e4:	stp	x19, x20, [sp, #-64]!
    81e8:	stp	x21, x22, [sp, #16]
    81ec:	stp	x23, x30, [sp, #32]
    81f0:	cbnz	x1, 8214 <__lsan_unregister_root_region@@Base+0xd24>
    81f4:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    81f8:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    81fc:	add	x2, x2, #0xd61
    8200:	add	x0, x0, #0x586
    8204:	mov	x4, #0x0                   	// #0
    8208:	mov	x3, #0x0                   	// #0
    820c:	mov	w1, #0x1e8                 	// #488
    8210:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    8214:	mov	x21, x1
    8218:	bl	a358 <__sanitizer_print_stack_trace@@Base+0x2b8>
    821c:	mov	x1, x0
    8220:	add	x19, sp, #0x38
    8224:	mov	x22, x0
    8228:	mov	x0, x19
    822c:	bl	a548 <__sanitizer_get_allocated_size@@Base+0x48>
    8230:	mov	x0, x19
    8234:	bl	a35c <__sanitizer_print_stack_trace@@Base+0x2bc>
    8238:	tst	w0, #0xff
    823c:	b.eq	8274 <__lsan_unregister_root_region@@Base+0xd84>  // b.none
    8240:	mov	x0, x19
    8244:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    8248:	cbnz	w0, 8264 <__lsan_unregister_root_region@@Base+0xd74>
    824c:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8250:	ldr	w20, [x0, #3412]
    8254:	cbnz	w20, 8284 <__lsan_unregister_root_region@@Base+0xd94>
    8258:	mov	x0, x19
    825c:	bl	a3a4 <__sanitizer_print_stack_trace@@Base+0x304>
    8260:	b	82a0 <__lsan_unregister_root_region@@Base+0xdb0>
    8264:	mov	x0, x19
    8268:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    826c:	cmp	w0, #0x1
    8270:	b.eq	824c <__lsan_unregister_root_region@@Base+0xd5c>  // b.none
    8274:	ldp	x21, x22, [sp, #16]
    8278:	ldp	x23, x30, [sp, #32]
    827c:	ldp	x19, x20, [sp], #64
    8280:	ret
    8284:	mov	x0, x19
    8288:	bl	a3a4 <__sanitizer_print_stack_trace@@Base+0x304>
    828c:	bl	1971c <OnPrint@@Base+0xeb4>
    8290:	cmp	w20, w1
    8294:	csel	w20, w20, w1, cc  // cc = lo, ul, last
    8298:	bfxil	x1, x20, #0, #32
    829c:	bl	19930 <OnPrint@@Base+0x10c8>
    82a0:	mov	w20, w0
    82a4:	mov	x0, x19
    82a8:	bl	a394 <__sanitizer_print_stack_trace@@Base+0x2f4>
    82ac:	mov	x23, x0
    82b0:	mov	x0, x19
    82b4:	bl	a370 <__sanitizer_print_stack_trace@@Base+0x2d0>
    82b8:	mov	x3, x23
    82bc:	mov	w4, w0
    82c0:	mov	w2, w20
    82c4:	mov	x1, x22
    82c8:	mov	x0, x21
    82cc:	bl	7ff0 <__lsan_unregister_root_region@@Base+0xb00>
    82d0:	b	8274 <__lsan_unregister_root_region@@Base+0xd84>
    82d4:	stp	x19, x20, [sp, #-64]!
    82d8:	mov	x19, x0
    82dc:	ldr	x0, [x0, #24]
    82e0:	stp	x21, x22, [sp, #16]
    82e4:	mov	x21, #0x1388                	// #5000
    82e8:	stp	x23, x24, [sp, #32]
    82ec:	cmp	x0, x21
    82f0:	str	x30, [sp, #48]
    82f4:	b.ls	8318 <__lsan_unregister_root_region@@Base+0xe28>  // b.plast
    82f8:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    82fc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8300:	add	x2, x2, #0xdd1
    8304:	add	x0, x0, #0x586
    8308:	mov	x4, #0x0                   	// #0
    830c:	mov	x3, #0x0                   	// #0
    8310:	mov	w1, #0x2be                 	// #702
    8314:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    8318:	mov	x20, x1
    831c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    8320:	add	x0, x0, #0x60e
    8324:	bl	18af0 <OnPrint@@Base+0x288>
    8328:	ldr	x1, [x19, #24]
    832c:	cmp	x1, x21
    8330:	b.ne	8340 <__lsan_unregister_root_region@@Base+0xe50>  // b.any
    8334:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8338:	add	x0, x0, #0xe01
    833c:	bl	18af0 <OnPrint@@Base+0x288>
    8340:	mov	x0, x19
    8344:	bl	75f8 <__lsan_unregister_root_region@@Base+0x108>
    8348:	cmp	x20, #0x0
    834c:	mov	x22, x0
    8350:	ccmp	x0, x20, #0x0, ne  // ne = any
    8354:	b.ls	8368 <__lsan_unregister_root_region@@Base+0xe78>  // b.plast
    8358:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    835c:	mov	x1, x20
    8360:	add	x0, x0, #0xe49
    8364:	bl	18af0 <OnPrint@@Base+0x288>
    8368:	mov	x24, x19
    836c:	adrp	x2, 6000 <_Unwind_Backtrace@plt-0x6b0>
    8370:	ldr	x1, [x19, #24]
    8374:	add	x2, x2, #0xeb4
    8378:	ldr	x0, [x24, #8]!
    837c:	mov	x23, #0x0                   	// #0
    8380:	mov	x21, #0x0                   	// #0
    8384:	bl	96fc <__lsan_do_recoverable_leak_check@@Base+0xda0>
    8388:	ldr	x0, [x19, #24]
    838c:	cmp	x23, x0
    8390:	b.cs	83c8 <__lsan_unregister_root_region@@Base+0xed8>  // b.hs, b.nlast
    8394:	mov	x1, x23
    8398:	mov	x0, x24
    839c:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    83a0:	ldrb	w0, [x0, #29]
    83a4:	cbnz	w0, 83c0 <__lsan_unregister_root_region@@Base+0xed0>
    83a8:	mov	x1, x23
    83ac:	mov	x0, x19
    83b0:	add	x21, x21, #0x1
    83b4:	bl	76c4 <__lsan_unregister_root_region@@Base+0x1d4>
    83b8:	cmp	x20, x21
    83bc:	b.eq	83c8 <__lsan_unregister_root_region@@Base+0xed8>  // b.none
    83c0:	add	x23, x23, #0x1
    83c4:	b	8388 <__lsan_unregister_root_region@@Base+0xe98>
    83c8:	cmp	x21, x22
    83cc:	b.cs	83f0 <__lsan_unregister_root_region@@Base+0xf00>  // b.hs, b.nlast
    83d0:	sub	x1, x22, x21
    83d4:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    83d8:	ldp	x21, x22, [sp, #16]
    83dc:	add	x0, x0, #0xe5f
    83e0:	ldp	x23, x24, [sp, #32]
    83e4:	ldr	x30, [sp, #48]
    83e8:	ldp	x19, x20, [sp], #64
    83ec:	b	18af0 <OnPrint@@Base+0x288>
    83f0:	ldp	x21, x22, [sp, #16]
    83f4:	ldp	x23, x24, [sp, #32]
    83f8:	ldr	x30, [sp, #48]
    83fc:	ldp	x19, x20, [sp], #64
    8400:	ret

0000000000008404 <__lsan_register_root_region@@Base>:
    8404:	stp	x19, x20, [sp, #-64]!
    8408:	adrp	x19, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    840c:	add	x19, x19, #0xcc0
    8410:	mov	x20, x0
    8414:	add	x0, x19, #0xc0
    8418:	stp	x21, x30, [sp, #16]
    841c:	mov	x21, x1
    8420:	str	x0, [sp, #40]
    8424:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
    8428:	ldr	x19, [x19, #176]
    842c:	cbnz	x19, 8450 <__lsan_register_root_region@@Base+0x4c>
    8430:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8434:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8438:	add	x2, x2, #0xab5
    843c:	add	x0, x0, #0x586
    8440:	mov	x4, #0x0                   	// #0
    8444:	mov	x3, #0x0                   	// #0
    8448:	mov	w1, #0x336                 	// #822
    844c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    8450:	stp	x20, x21, [sp, #48]
    8454:	ldr	x4, [x19, #8]
    8458:	ldr	x3, [x19, #16]
    845c:	lsr	x4, x4, #4
    8460:	cmp	x3, x4
    8464:	b.ls	8480 <__lsan_register_root_region@@Base+0x7c>  // b.plast
    8468:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    846c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8470:	add	x2, x2, #0x373
    8474:	add	x0, x0, #0x5c5
    8478:	mov	w1, #0x1be                 	// #446
    847c:	b	844c <__lsan_register_root_region@@Base+0x48>
    8480:	b.ne	8498 <__lsan_register_root_region@@Base+0x94>  // b.any
    8484:	add	x0, x3, #0x1
    8488:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
    848c:	mov	x1, x0
    8490:	mov	x0, x19
    8494:	bl	9820 <__lsan_do_recoverable_leak_check@@Base+0xec4>
    8498:	ldr	x0, [x19, #16]
    849c:	mov	x2, #0x10                  	// #16
    84a0:	ldr	x3, [x19]
    84a4:	add	x1, x0, #0x1
    84a8:	str	x1, [x19, #16]
    84ac:	add	x1, sp, #0x30
    84b0:	add	x0, x3, x0, lsl #4
    84b4:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    84b8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    84bc:	ldr	x0, [x0, #3680]
    84c0:	ldr	w0, [x0]
    84c4:	cbz	w0, 84dc <__lsan_register_root_region@@Base+0xd8>
    84c8:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    84cc:	mov	x2, x21
    84d0:	mov	x1, x20
    84d4:	add	x0, x0, #0xe7b
    84d8:	bl	18b74 <OnPrint@@Base+0x30c>
    84dc:	add	x0, sp, #0x28
    84e0:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
    84e4:	ldp	x21, x30, [sp, #16]
    84e8:	ldp	x19, x20, [sp], #64
    84ec:	ret
    84f0:	stp	x19, x20, [sp, #-32]!
    84f4:	adrp	x19, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    84f8:	add	x19, x19, #0xcc0
    84fc:	str	x30, [sp, #16]
    8500:	ldr	x0, [x19, #176]
    8504:	cbz	x0, 8528 <__lsan_register_root_region@@Base+0x124>
    8508:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    850c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8510:	add	x2, x2, #0xea6
    8514:	add	x0, x0, #0x586
    8518:	mov	x4, #0x0                   	// #0
    851c:	mov	x3, #0x0                   	// #0
    8520:	mov	w1, #0x68                  	// #104
    8524:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    8528:	add	x20, x19, #0x140
    852c:	mov	x1, #0x1                   	// #1
    8530:	mov	x0, x20
    8534:	stp	xzr, xzr, [x19, #320]
    8538:	str	xzr, [x19, #336]
    853c:	bl	9820 <__lsan_do_recoverable_leak_check@@Base+0xec4>
    8540:	str	x20, [x19, #176]
    8544:	ldr	x30, [sp, #16]
    8548:	ldp	x19, x20, [sp], #32
    854c:	ret
    8550:	str	x30, [sp, #-16]!
    8554:	bl	84f0 <__lsan_register_root_region@@Base+0xec>
    8558:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    855c:	ldr	x0, [x0, #4040]
    8560:	ldrb	w0, [x0, #57]
    8564:	cbz	w0, 8574 <__lsan_register_root_region@@Base+0x170>
    8568:	bl	7234 <*ABS*+0x10@plt+0x464>
    856c:	ldr	x30, [sp], #16
    8570:	b	9bd4 <__lsan_do_recoverable_leak_check@@Base+0x1278>
    8574:	ldr	x30, [sp], #16
    8578:	ret
    857c:	stp	x19, x20, [sp, #-80]!
    8580:	mov	x1, #0x1388                	// #5000
    8584:	stp	x23, x30, [sp, #32]
    8588:	ldr	x23, [x0, #24]
    858c:	stp	x21, x22, [sp, #16]
    8590:	cmp	x23, x1
    8594:	b.ls	85b8 <__lsan_register_root_region@@Base+0x1b4>  // b.plast
    8598:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    859c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    85a0:	add	x2, x2, #0xdd1
    85a4:	add	x0, x0, #0x586
    85a8:	mov	x4, #0x0                   	// #0
    85ac:	mov	x3, #0x0                   	// #0
    85b0:	mov	w1, #0x2f1                 	// #753
    85b4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    85b8:	add	x19, x0, #0x8
    85bc:	mov	x20, #0x0                   	// #0
    85c0:	mov	x22, #0x0                   	// #0
    85c4:	mov	x21, #0x0                   	// #0
    85c8:	cmp	x20, x23
    85cc:	b.eq	85fc <__lsan_register_root_region@@Base+0x1f8>  // b.none
    85d0:	mov	x1, x20
    85d4:	mov	x0, x19
    85d8:	bl	9428 <__lsan_do_recoverable_leak_check@@Base+0xacc>
    85dc:	ldrb	w1, [x0, #29]
    85e0:	cbnz	w1, 85f4 <__lsan_register_root_region@@Base+0x1f0>
    85e4:	ldr	x1, [x0, #16]
    85e8:	ldr	x0, [x0, #8]
    85ec:	add	x21, x21, x1
    85f0:	add	x22, x22, x0
    85f4:	add	x20, x20, #0x1
    85f8:	b	85c8 <__lsan_register_root_region@@Base+0x1c4>
    85fc:	add	x19, sp, #0x30
    8600:	mov	x1, #0x400                 	// #1024
    8604:	mov	x0, x19
    8608:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
    860c:	mov	x3, x22
    8610:	mov	x2, x21
    8614:	mov	x0, x19
    8618:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    861c:	add	x1, x1, #0xebf
    8620:	bl	18bf8 <OnPrint@@Base+0x390>
    8624:	ldr	x0, [sp, #48]
    8628:	mov	x1, #0x0                   	// #0
    862c:	bl	10780 <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
    8630:	ldp	x0, x1, [sp, #48]
    8634:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    8638:	ldp	x21, x22, [sp, #16]
    863c:	ldp	x23, x30, [sp, #32]
    8640:	ldp	x19, x20, [sp], #80
    8644:	ret
    8648:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    864c:	stp	x19, x20, [sp, #-160]!
    8650:	ldr	x0, [x0, #3712]
    8654:	stp	x21, x22, [sp, #16]
    8658:	stp	x23, x24, [sp, #32]
    865c:	stp	x25, x30, [sp, #48]
    8660:	cbnz	x0, 86ec <__lsan_register_root_region@@Base+0x2e8>
    8664:	bl	e36c <_ZdaPvmSt11align_val_t@@Base+0x5b0>
    8668:	add	x19, sp, #0x60
    866c:	add	x0, x19, #0x10
    8670:	mov	x1, #0x1                   	// #1
    8674:	str	wzr, [sp, #104]
    8678:	stp	xzr, xzr, [sp, #112]
    867c:	str	xzr, [sp, #128]
    8680:	bl	957c <__lsan_do_recoverable_leak_check@@Base+0xc20>
    8684:	add	x0, x19, #0x28
    8688:	mov	x1, #0x1                   	// #1
    868c:	stp	xzr, xzr, [sp, #136]
    8690:	str	xzr, [sp, #152]
    8694:	bl	9620 <__lsan_do_recoverable_leak_check@@Base+0xcc4>
    8698:	strb	wzr, [sp, #96]
    869c:	bl	e42c <_ZdaPvmSt11align_val_t@@Base+0x670>
    86a0:	bl	a2bc <__sanitizer_print_stack_trace@@Base+0x21c>
    86a4:	mov	x1, x19
    86a8:	adrp	x0, 8000 <__lsan_unregister_root_region@@Base+0xb10>
    86ac:	add	x0, x0, #0x978
    86b0:	bl	9d60 <__lsan_do_recoverable_leak_check@@Base+0x1404>
    86b4:	bl	a300 <__sanitizer_print_stack_trace@@Base+0x260>
    86b8:	bl	e43c <_ZdaPvmSt11align_val_t@@Base+0x680>
    86bc:	ldrb	w20, [sp, #96]
    86c0:	cbnz	w20, 86fc <__lsan_register_root_region@@Base+0x2f8>
    86c4:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    86c8:	add	x0, x0, #0xef2
    86cc:	bl	18b74 <OnPrint@@Base+0x30c>
    86d0:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    86d4:	add	x0, x0, #0xf20
    86d8:	bl	18b74 <OnPrint@@Base+0x30c>
    86dc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    86e0:	add	x0, x0, #0xf7e
    86e4:	bl	18b74 <OnPrint@@Base+0x30c>
    86e8:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    86ec:	bl	6a10 <__lsan_is_turned_off@plt>
    86f0:	cbz	w0, 8664 <__lsan_register_root_region@@Base+0x260>
    86f4:	mov	w20, #0x0                   	// #0
    86f8:	b	881c <__lsan_register_root_region@@Base+0x418>
    86fc:	add	x25, x19, #0x8
    8700:	mov	x0, x25
    8704:	bl	77e4 <__lsan_unregister_root_region@@Base+0x2f4>
    8708:	mov	x0, x25
    870c:	bl	75f8 <__lsan_unregister_root_region@@Base+0x108>
    8710:	mov	x21, x0
    8714:	cbz	x0, 8788 <__lsan_register_root_region@@Base+0x384>
    8718:	bl	1a858 <__sanitizer_symbolize_global@@Base+0x114>
    871c:	and	w24, w0, #0xff
    8720:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8724:	add	x0, x0, #0xfc1
    8728:	bl	18af0 <OnPrint@@Base+0x288>
    872c:	adrp	x23, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    8730:	cmp	w24, #0x0
    8734:	add	x23, x23, #0x60f
    8738:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    873c:	add	x1, x1, #0xee8
    8740:	csel	x1, x1, x23, ne  // ne = any
    8744:	adrp	x22, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    8748:	add	x22, x22, #0x67b
    874c:	mov	x0, x22
    8750:	bl	18af0 <OnPrint@@Base+0x288>
    8754:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8758:	add	x0, x0, #0x5
    875c:	bl	18b74 <OnPrint@@Base+0x30c>
    8760:	cmp	w24, #0x0
    8764:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8768:	add	x1, x1, #0xb79
    876c:	mov	x0, x22
    8770:	csel	x1, x1, x23, ne  // ne = any
    8774:	bl	18af0 <OnPrint@@Base+0x288>
    8778:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    877c:	ldrsw	x1, [x0, #3416]
    8780:	mov	x0, x25
    8784:	bl	82d4 <__lsan_unregister_root_region@@Base+0xde4>
    8788:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    878c:	ldr	x0, [x0, #4040]
    8790:	ldrb	w0, [x0, #177]
    8794:	cbz	w0, 8800 <__lsan_register_root_region@@Base+0x3fc>
    8798:	stp	xzr, xzr, [sp, #72]
    879c:	str	xzr, [sp, #88]
    87a0:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    87a4:	mov	x1, x0
    87a8:	mov	x0, #0x8                   	// #8
    87ac:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    87b0:	mov	x22, x0
    87b4:	mov	w2, #0x0                   	// #0
    87b8:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    87bc:	add	x1, x1, #0x360
    87c0:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    87c4:	ldr	x1, [sp, #72]
    87c8:	mov	x23, x0
    87cc:	ldr	x2, [sp, #88]
    87d0:	lsl	x2, x2, #3
    87d4:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    87d8:	ldp	x0, x1, [sp, #72]
    87dc:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    87e0:	stp	x23, x22, [sp, #72]
    87e4:	bl	6f34 <*ABS*+0x10@plt+0x164>
    87e8:	add	x1, sp, #0x48
    87ec:	bl	1c498 <__sanitizer_symbolize_global@@Base+0x1d54>
    87f0:	ldr	x0, [sp, #88]
    87f4:	cbnz	x0, 8834 <__lsan_register_root_region@@Base+0x430>
    87f8:	ldp	x0, x1, [sp, #72]
    87fc:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    8800:	cbz	x21, 88b4 <__lsan_register_root_region@@Base+0x4b0>
    8804:	add	x0, x19, #0x8
    8808:	bl	857c <__lsan_register_root_region@@Base+0x178>
    880c:	ldp	x0, x1, [sp, #136]
    8810:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    8814:	ldp	x0, x1, [sp, #112]
    8818:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    881c:	mov	w0, w20
    8820:	ldp	x21, x22, [sp, #16]
    8824:	ldp	x23, x24, [sp, #32]
    8828:	ldp	x25, x30, [sp, #48]
    882c:	ldp	x19, x20, [sp], #160
    8830:	ret
    8834:	adrp	x22, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8838:	add	x1, x22, #0x32
    883c:	adrp	x24, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8840:	add	x24, x24, #0x99
    8844:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
    8848:	mov	x23, #0x0                   	// #0
    884c:	add	x0, x0, #0xb9e
    8850:	bl	18af0 <OnPrint@@Base+0x288>
    8854:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8858:	add	x0, x0, #0x68
    885c:	bl	18af0 <OnPrint@@Base+0x288>
    8860:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8864:	add	x0, x0, #0x7c
    8868:	bl	18af0 <OnPrint@@Base+0x288>
    886c:	ldr	x0, [sp, #88]
    8870:	cmp	x0, x23
    8874:	b.ls	88a0 <__lsan_register_root_region@@Base+0x49c>  // b.plast
    8878:	ldr	x0, [sp, #72]
    887c:	ldr	x0, [x0, x23, lsl #3]
    8880:	add	x23, x23, #0x1
    8884:	ldr	x3, [x0, #8]
    8888:	ldr	x2, [x0, #24]
    888c:	ldr	w1, [x0, #16]
    8890:	mov	x0, x24
    8894:	mov	w1, w1
    8898:	bl	18af0 <OnPrint@@Base+0x288>
    889c:	b	886c <__lsan_register_root_region@@Base+0x468>
    88a0:	add	x1, x22, #0x32
    88a4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    88a8:	add	x0, x0, #0xa8
    88ac:	bl	18af0 <OnPrint@@Base+0x288>
    88b0:	b	87f8 <__lsan_register_root_region@@Base+0x3f4>
    88b4:	mov	w20, #0x0                   	// #0
    88b8:	b	880c <__lsan_register_root_region@@Base+0x408>
    88bc:	stp	x19, x30, [sp, #-32]!
    88c0:	adrp	x19, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    88c4:	add	x19, x19, #0xcc0
    88c8:	add	x0, x19, #0xc0
    88cc:	str	x0, [sp, #24]
    88d0:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
    88d4:	ldrb	w0, [x19, #344]
    88d8:	cbz	w0, 88ec <__lsan_register_root_region@@Base+0x4e8>
    88dc:	add	x0, sp, #0x18
    88e0:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
    88e4:	ldp	x19, x30, [sp], #32
    88e8:	ret
    88ec:	mov	w0, #0x1                   	// #1
    88f0:	strb	w0, [x19, #344]
    88f4:	bl	8648 <__lsan_register_root_region@@Base+0x244>
    88f8:	strb	w0, [x19, #184]
    88fc:	tst	w0, #0xff
    8900:	b.eq	88dc <__lsan_register_root_region@@Base+0x4d8>  // b.none
    8904:	bl	9d44 <__lsan_do_recoverable_leak_check@@Base+0x13e8>
    8908:	b	88dc <__lsan_register_root_region@@Base+0x4d8>

000000000000890c <__lsan_do_leak_check@@Base>:
    890c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8910:	ldr	x0, [x0, #4040]
    8914:	ldrb	w0, [x0, #57]
    8918:	cbz	w0, 8920 <__lsan_do_leak_check@@Base+0x14>
    891c:	b	88bc <__lsan_register_root_region@@Base+0x4b8>
    8920:	ret
    8924:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8928:	add	x0, x0, #0xcc0
    892c:	stp	x19, x30, [sp, #-32]!
    8930:	add	x0, x0, #0xc0
    8934:	str	x0, [sp, #24]
    8938:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
    893c:	bl	8648 <__lsan_register_root_region@@Base+0x244>
    8940:	and	w19, w0, #0xff
    8944:	add	x0, sp, #0x18
    8948:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
    894c:	mov	w0, w19
    8950:	ldp	x19, x30, [sp], #32
    8954:	ret
    8958:	b	8924 <__lsan_do_leak_check@@Base+0x18>

000000000000895c <__lsan_do_recoverable_leak_check@@Base>:
    895c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    8960:	ldr	x0, [x0, #4040]
    8964:	ldrb	w0, [x0, #57]
    8968:	cbz	w0, 8970 <__lsan_do_recoverable_leak_check@@Base+0x14>
    896c:	b	8924 <__lsan_do_leak_check@@Base+0x18>
    8970:	mov	w0, #0x0                   	// #0
    8974:	ret
    8978:	stp	x19, x20, [sp, #-320]!
    897c:	stp	x21, x22, [sp, #16]
    8980:	stp	x23, x24, [sp, #32]
    8984:	stp	x25, x26, [sp, #48]
    8988:	stp	x27, x28, [sp, #64]
    898c:	str	x30, [sp, #80]
    8990:	cbnz	x1, 89b4 <__lsan_do_recoverable_leak_check@@Base+0x58>
    8994:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8998:	add	x2, x2, #0xad
    899c:	mov	x4, #0x0                   	// #0
    89a0:	mov	x3, #0x0                   	// #0
    89a4:	mov	w1, #0x22b                 	// #555
    89a8:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    89ac:	add	x0, x0, #0x586
    89b0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    89b4:	mov	x23, x1
    89b8:	ldrb	w1, [x1]
    89bc:	cbz	w1, 89d8 <__lsan_do_recoverable_leak_check@@Base+0x7c>
    89c0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    89c4:	mov	x4, #0x0                   	// #0
    89c8:	add	x2, x2, #0xbe
    89cc:	mov	x3, #0x0                   	// #0
    89d0:	mov	w1, #0x22c                 	// #556
    89d4:	b	89a8 <__lsan_do_recoverable_leak_check@@Base+0x4c>
    89d8:	ldr	x1, [x0]
    89dc:	mov	x20, x0
    89e0:	ldr	x1, [x1, #16]
    89e4:	blr	x1
    89e8:	stp	xzr, xzr, [sp, #240]
    89ec:	mov	x19, x0
    89f0:	str	xzr, [sp, #256]
    89f4:	cbz	x0, 8a48 <__lsan_do_recoverable_leak_check@@Base+0xec>
    89f8:	add	x21, sp, #0xf0
    89fc:	mov	x1, x0
    8a00:	mov	x0, x21
    8a04:	bl	9a10 <__lsan_do_recoverable_leak_check@@Base+0x10b4>
    8a08:	ldr	x0, [sp, #256]
    8a0c:	cmp	x19, x0
    8a10:	b.ls	8a48 <__lsan_do_recoverable_leak_check@@Base+0xec>  // b.plast
    8a14:	ldr	x0, [sp, #248]
    8a18:	cmp	x19, x0, lsr #3
    8a1c:	b.ls	8a2c <__lsan_do_recoverable_leak_check@@Base+0xd0>  // b.plast
    8a20:	mov	x1, x19
    8a24:	mov	x0, x21
    8a28:	bl	9a10 <__lsan_do_recoverable_leak_check@@Base+0x10b4>
    8a2c:	ldr	x0, [sp, #256]
    8a30:	mov	w1, #0x0                   	// #0
    8a34:	ldr	x3, [sp, #240]
    8a38:	sub	x2, x19, x0
    8a3c:	lsl	x2, x2, #3
    8a40:	add	x0, x3, x0, lsl #3
    8a44:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    8a48:	str	x19, [sp, #256]
    8a4c:	mov	x19, #0x0                   	// #0
    8a50:	ldr	x0, [x20]
    8a54:	ldr	x1, [x0, #16]
    8a58:	mov	x0, x20
    8a5c:	blr	x1
    8a60:	cmp	x0, x19
    8a64:	b.ls	8ab8 <__lsan_do_recoverable_leak_check@@Base+0x15c>  // b.plast
    8a68:	ldr	x0, [x20]
    8a6c:	ldr	x4, [sp, #256]
    8a70:	ldr	x2, [x0, #24]
    8a74:	cmp	x19, x4
    8a78:	b.cc	8a98 <__lsan_do_recoverable_leak_check@@Base+0x13c>  // b.lo, b.ul, b.last
    8a7c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8a80:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8a84:	mov	x3, x19
    8a88:	add	x2, x2, #0x317
    8a8c:	add	x0, x0, #0x5c5
    8a90:	mov	w1, #0x1b6                 	// #438
    8a94:	b	89b0 <__lsan_do_recoverable_leak_check@@Base+0x54>
    8a98:	ldr	x22, [sp, #240]
    8a9c:	lsl	x21, x19, #3
    8aa0:	mov	x1, x19
    8aa4:	mov	x0, x20
    8aa8:	add	x19, x19, #0x1
    8aac:	blr	x2
    8ab0:	str	x0, [x22, x21]
    8ab4:	b	8a50 <__lsan_do_recoverable_leak_check@@Base+0xf4>
    8ab8:	ldr	x0, [sp, #240]
    8abc:	mov	w2, #0x0                   	// #0
    8ac0:	ldr	x1, [sp, #256]
    8ac4:	add	x26, sp, #0xf0
    8ac8:	add	x19, sp, #0xb8
    8acc:	bl	9328 <__lsan_do_recoverable_leak_check@@Base+0x9cc>
    8ad0:	bl	e44c <_ZdaPvmSt11align_val_t@@Base+0x690>
    8ad4:	mov	x2, x26
    8ad8:	adrp	x1, 7000 <*ABS*+0x10@plt+0x230>
    8adc:	add	x1, x1, #0x370
    8ae0:	bl	1f31c <__sanitizer_set_death_callback@@Base+0x2a4>
    8ae4:	ldp	x0, x1, [sp, #240]
    8ae8:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    8aec:	stp	xzr, xzr, [sp, #184]
    8af0:	mov	x0, x19
    8af4:	mov	x1, #0x1                   	// #1
    8af8:	str	xzr, [sp, #200]
    8afc:	bl	98c4 <__lsan_do_recoverable_leak_check@@Base+0xf68>
    8b00:	mov	x1, x19
    8b04:	adrp	x0, 7000 <*ABS*+0x10@plt+0x230>
    8b08:	add	x0, x0, #0xf24
    8b0c:	bl	a810 <__sanitizer_get_allocated_size@@Base+0x310>
    8b10:	mov	x0, x19
    8b14:	bl	9d10 <__lsan_do_recoverable_leak_check@@Base+0x13b4>
    8b18:	ldr	x0, [x20]
    8b1c:	ldr	x1, [x0, #8]
    8b20:	mov	x0, x20
    8b24:	blr	x1
    8b28:	mov	x21, x0
    8b2c:	mov	x1, x0
    8b30:	mov	x0, x26
    8b34:	stp	xzr, xzr, [sp, #240]
    8b38:	str	xzr, [sp, #256]
    8b3c:	bl	98c4 <__lsan_do_recoverable_leak_check@@Base+0xf68>
    8b40:	ldr	x0, [sp, #256]
    8b44:	cmp	x21, x0
    8b48:	b.ls	8b74 <__lsan_do_recoverable_leak_check@@Base+0x218>  // b.plast
    8b4c:	mov	x1, x21
    8b50:	mov	x0, x26
    8b54:	bl	98c4 <__lsan_do_recoverable_leak_check@@Base+0xf68>
    8b58:	ldr	x0, [sp, #256]
    8b5c:	mov	w1, #0x0                   	// #0
    8b60:	ldr	x3, [sp, #240]
    8b64:	sub	x2, x21, x0
    8b68:	lsl	x2, x2, #3
    8b6c:	add	x0, x3, x0, lsl #3
    8b70:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    8b74:	ldr	x27, [sp, #240]
    8b78:	adrp	x24, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    8b7c:	str	x21, [sp, #256]
    8b80:	mov	x25, #0x0                   	// #0
    8b84:	add	x0, x27, x21, lsl #3
    8b88:	add	x21, x24, #0xcc0
    8b8c:	add	x21, x21, #0x90
    8b90:	str	x0, [sp, #96]
    8b94:	add	x0, sp, #0xb0
    8b98:	str	x0, [sp, #104]
    8b9c:	ldr	x0, [x20]
    8ba0:	ldr	x1, [x0, #16]
    8ba4:	mov	x0, x20
    8ba8:	blr	x1
    8bac:	cmp	x0, x25
    8bb0:	b.ls	8ed8 <__lsan_do_recoverable_leak_check@@Base+0x57c>  // b.plast
    8bb4:	ldr	x0, [x20]
    8bb8:	mov	x1, x25
    8bbc:	ldr	x2, [x0, #24]
    8bc0:	mov	x0, x20
    8bc4:	blr	x2
    8bc8:	mov	x22, x0
    8bcc:	ldrb	w0, [x21, #21]
    8bd0:	cbz	w0, 8be4 <__lsan_do_recoverable_leak_check@@Base+0x288>
    8bd4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8bd8:	mov	x1, x22
    8bdc:	add	x0, x0, #0xd9
    8be0:	bl	18b74 <OnPrint@@Base+0x30c>
    8be4:	ldr	x7, [sp, #104]
    8be8:	add	x6, sp, #0xa8
    8bec:	add	x5, sp, #0xa0
    8bf0:	add	x4, sp, #0x98
    8bf4:	add	x3, sp, #0x90
    8bf8:	add	x2, sp, #0x88
    8bfc:	add	x1, sp, #0x80
    8c00:	mov	x0, x22
    8c04:	bl	e390 <_ZdaPvmSt11align_val_t@@Base+0x5d4>
    8c08:	tst	w0, #0xff
    8c0c:	b.ne	8c30 <__lsan_do_recoverable_leak_check@@Base+0x2d4>  // b.any
    8c10:	ldrb	w0, [x21, #21]
    8c14:	cbz	w0, 8c28 <__lsan_do_recoverable_leak_check@@Base+0x2cc>
    8c18:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8c1c:	mov	x1, x22
    8c20:	add	x0, x0, #0xf0
    8c24:	bl	18b74 <OnPrint@@Base+0x30c>
    8c28:	add	x25, x25, #0x1
    8c2c:	b	8b9c <__lsan_do_recoverable_leak_check@@Base+0x240>
    8c30:	ldr	x0, [x20]
    8c34:	add	x3, sp, #0xd0
    8c38:	ldr	x2, [sp, #240]
    8c3c:	mov	x1, x25
    8c40:	ldr	x4, [x0]
    8c44:	mov	x0, x20
    8c48:	blr	x4
    8c4c:	mov	w28, w0
    8c50:	cmp	w0, #0x1
    8c54:	b.eq	8c78 <__lsan_do_recoverable_leak_check@@Base+0x31c>  // b.none
    8c58:	mov	x1, x22
    8c5c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8c60:	add	x0, x0, #0x112
    8c64:	bl	18b74 <OnPrint@@Base+0x30c>
    8c68:	cmn	w28, #0x1
    8c6c:	b.eq	8c28 <__lsan_do_recoverable_leak_check@@Base+0x2cc>  // b.none
    8c70:	ldr	x0, [sp, #128]
    8c74:	str	x0, [sp, #208]
    8c78:	ldrb	w0, [x21, #14]
    8c7c:	cbz	w0, 8ca0 <__lsan_do_recoverable_leak_check@@Base+0x344>
    8c80:	cbz	w28, 8ca0 <__lsan_do_recoverable_leak_check@@Base+0x344>
    8c84:	ldr	x1, [sp, #96]
    8c88:	adrp	x3, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8c8c:	mov	x2, x19
    8c90:	add	x3, x3, #0x13b
    8c94:	mov	x0, x27
    8c98:	mov	w4, #0x2                   	// #2
    8c9c:	bl	798c <__lsan_unregister_root_region@@Base+0x49c>
    8ca0:	ldrb	w0, [x21, #13]
    8ca4:	cbz	w0, 8d54 <__lsan_do_recoverable_leak_check@@Base+0x3f8>
    8ca8:	ldrb	w0, [x21, #21]
    8cac:	cbz	w0, 8cc4 <__lsan_do_recoverable_leak_check@@Base+0x368>
    8cb0:	ldp	x1, x2, [sp, #128]
    8cb4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8cb8:	ldr	x3, [sp, #208]
    8cbc:	add	x0, x0, #0x145
    8cc0:	bl	18b74 <OnPrint@@Base+0x30c>
    8cc4:	ldr	x1, [sp, #128]
    8cc8:	ldr	x0, [sp, #208]
    8ccc:	cmp	x0, x1
    8cd0:	b.cc	8ce0 <__lsan_do_recoverable_leak_check@@Base+0x384>  // b.lo, b.ul, b.last
    8cd4:	ldr	x1, [sp, #136]
    8cd8:	cmp	x0, x1
    8cdc:	b.cc	8e00 <__lsan_do_recoverable_leak_check@@Base+0x4a4>  // b.lo, b.ul, b.last
    8ce0:	ldrb	w0, [x21, #21]
    8ce4:	cbz	w0, 8cf4 <__lsan_do_recoverable_leak_check@@Base+0x398>
    8ce8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8cec:	add	x0, x0, #0x160
    8cf0:	bl	18b74 <OnPrint@@Base+0x30c>
    8cf4:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    8cf8:	mov	x2, x0
    8cfc:	mov	w28, #0x0                   	// #0
    8d00:	ldp	x0, x1, [sp, #128]
    8d04:	cmp	x0, x1
    8d08:	b.cc	8dd4 <__lsan_do_recoverable_leak_check@@Base+0x478>  // b.lo, b.ul, b.last
    8d0c:	ldrb	w0, [x21, #21]
    8d10:	cbz	w0, 8d28 <__lsan_do_recoverable_leak_check@@Base+0x3cc>
    8d14:	ldp	x2, x3, [sp, #128]
    8d18:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8d1c:	mov	w1, w28
    8d20:	add	x0, x0, #0x18c
    8d24:	bl	18b74 <OnPrint@@Base+0x30c>
    8d28:	ldp	x0, x1, [sp, #128]
    8d2c:	adrp	x3, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8d30:	add	x3, x3, #0xd0a
    8d34:	mov	w4, #0x2                   	// #2
    8d38:	mov	x2, x19
    8d3c:	bl	798c <__lsan_unregister_root_region@@Base+0x49c>
    8d40:	adrp	x1, 7000 <*ABS*+0x10@plt+0x230>
    8d44:	mov	x2, x19
    8d48:	add	x1, x1, #0xc90
    8d4c:	mov	x0, x22
    8d50:	bl	e428 <_ZdaPvmSt11align_val_t@@Base+0x66c>
    8d54:	ldrb	w0, [x21, #15]
    8d58:	cbz	w0, 8c28 <__lsan_do_recoverable_leak_check@@Base+0x2cc>
    8d5c:	ldr	x1, [sp, #144]
    8d60:	cbz	x1, 8db4 <__lsan_do_recoverable_leak_check@@Base+0x458>
    8d64:	ldrb	w0, [x21, #21]
    8d68:	cbz	w0, 8d7c <__lsan_do_recoverable_leak_check@@Base+0x420>
    8d6c:	ldr	x2, [sp, #152]
    8d70:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8d74:	add	x0, x0, #0x1bd
    8d78:	bl	18b74 <OnPrint@@Base+0x30c>
    8d7c:	ldp	x1, x2, [sp, #160]
    8d80:	ldp	x0, x5, [sp, #144]
    8d84:	cmp	x1, x2
    8d88:	b.eq	8d9c <__lsan_do_recoverable_leak_check@@Base+0x440>  // b.none
    8d8c:	cmp	x1, x5
    8d90:	b.hi	8d9c <__lsan_do_recoverable_leak_check@@Base+0x440>  // b.pmore
    8d94:	cmp	x2, x0
    8d98:	b.cs	8e08 <__lsan_do_recoverable_leak_check@@Base+0x4ac>  // b.hs, b.nlast
    8d9c:	adrp	x3, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8da0:	mov	x2, x19
    8da4:	add	x3, x3, #0x1e1
    8da8:	mov	x1, x5
    8dac:	mov	w4, #0x2                   	// #2
    8db0:	bl	798c <__lsan_unregister_root_region@@Base+0x49c>
    8db4:	ldr	x0, [sp, #176]
    8db8:	cbnz	x0, 8e48 <__lsan_do_recoverable_leak_check@@Base+0x4ec>
    8dbc:	ldrb	w0, [x21, #21]
    8dc0:	cbz	w0, 8c28 <__lsan_do_recoverable_leak_check@@Base+0x2cc>
    8dc4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8dc8:	mov	x1, x22
    8dcc:	add	x0, x0, #0x1e5
    8dd0:	b	8c24 <__lsan_do_recoverable_leak_check@@Base+0x2c8>
    8dd4:	mov	x1, #0x1                   	// #1
    8dd8:	str	x2, [sp, #112]
    8ddc:	bl	1799c <__sanitizer_set_report_fd@@Base+0x4ee8>
    8de0:	tst	w0, #0xff
    8de4:	b.ne	8d0c <__lsan_do_recoverable_leak_check@@Base+0x3b0>  // b.any
    8de8:	ldr	x2, [sp, #112]
    8dec:	add	w28, w28, #0x1
    8df0:	ldr	x1, [sp, #128]
    8df4:	add	x1, x1, x2
    8df8:	str	x1, [sp, #128]
    8dfc:	b	8d00 <__lsan_do_recoverable_leak_check@@Base+0x3a4>
    8e00:	str	x0, [sp, #128]
    8e04:	b	8d28 <__lsan_do_recoverable_leak_check@@Base+0x3cc>
    8e08:	cmp	x1, x0
    8e0c:	b.ls	8e24 <__lsan_do_recoverable_leak_check@@Base+0x4c8>  // b.plast
    8e10:	adrp	x3, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8e14:	mov	x2, x19
    8e18:	add	x3, x3, #0x1e1
    8e1c:	mov	w4, #0x2                   	// #2
    8e20:	bl	798c <__lsan_unregister_root_region@@Base+0x49c>
    8e24:	ldr	x1, [sp, #152]
    8e28:	ldr	x0, [sp, #168]
    8e2c:	cmp	x1, x0
    8e30:	b.ls	8db4 <__lsan_do_recoverable_leak_check@@Base+0x458>  // b.plast
    8e34:	adrp	x3, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8e38:	mov	x2, x19
    8e3c:	add	x3, x3, #0x1e1
    8e40:	mov	w4, #0x2                   	// #2
    8e44:	b	8db0 <__lsan_do_recoverable_leak_check@@Base+0x454>
    8e48:	bl	20174 <__sanitizer_set_death_callback@@Base+0x10fc>
    8e4c:	tst	w0, #0xff
    8e50:	b.ne	8dbc <__lsan_do_recoverable_leak_check@@Base+0x460>  // b.any
    8e54:	adrp	x22, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8e58:	add	x22, x22, #0x1e0
    8e5c:	mov	x28, #0x0                   	// #0
    8e60:	ldr	x1, [sp, #176]
    8e64:	ldr	x0, [x1]
    8e68:	cmp	x0, x28
    8e6c:	b.ls	8c28 <__lsan_do_recoverable_leak_check@@Base+0x2cc>  // b.plast
    8e70:	ldr	x1, [x1, #8]
    8e74:	lsl	x0, x28, #4
    8e78:	add	x2, x1, x28, lsl #4
    8e7c:	ldr	x7, [x1, x0]
    8e80:	ldr	x6, [x2, #8]
    8e84:	add	x6, x7, x6
    8e88:	cmp	x7, x6
    8e8c:	b.cs	8ed0 <__lsan_do_recoverable_leak_check@@Base+0x574>  // b.hs, b.nlast
    8e90:	ldrb	w0, [x21, #21]
    8e94:	cbz	w0, 8eb8 <__lsan_do_recoverable_leak_check@@Base+0x55c>
    8e98:	mov	x3, x6
    8e9c:	mov	x2, x7
    8ea0:	mov	x1, x28
    8ea4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8ea8:	add	x0, x0, #0x1cc
    8eac:	stp	x7, x6, [sp, #112]
    8eb0:	bl	18b74 <OnPrint@@Base+0x30c>
    8eb4:	ldp	x7, x6, [sp, #112]
    8eb8:	mov	x3, x22
    8ebc:	mov	x2, x19
    8ec0:	mov	x1, x6
    8ec4:	mov	x0, x7
    8ec8:	mov	w4, #0x2                   	// #2
    8ecc:	bl	798c <__lsan_unregister_root_region@@Base+0x49c>
    8ed0:	add	x28, x28, #0x1
    8ed4:	b	8e60 <__lsan_do_recoverable_leak_check@@Base+0x504>
    8ed8:	ldp	x0, x1, [sp, #240]
    8edc:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    8ee0:	add	x0, x24, #0xcc0
    8ee4:	ldrb	w1, [x0, #160]
    8ee8:	cbz	w1, 8f88 <__lsan_do_recoverable_leak_check@@Base+0x62c>
    8eec:	ldr	x1, [x0, #176]
    8ef0:	mov	x25, #0x0                   	// #0
    8ef4:	cbz	x1, 8f60 <__lsan_do_recoverable_leak_check@@Base+0x604>
    8ef8:	mov	x22, x0
    8efc:	add	x20, sp, #0xd0
    8f00:	ldr	x0, [x22, #176]
    8f04:	ldr	x1, [x0, #16]
    8f08:	cmp	x1, x25
    8f0c:	b.ls	8f88 <__lsan_do_recoverable_leak_check@@Base+0x62c>  // b.plast
    8f10:	mov	x1, x25
    8f14:	bl	92b8 <__lsan_do_recoverable_leak_check@@Base+0x95c>
    8f18:	mov	w1, #0x1                   	// #1
    8f1c:	mov	x21, x0
    8f20:	mov	x0, x20
    8f24:	bl	18efc <OnPrint@@Base+0x694>
    8f28:	stp	xzr, xzr, [sp, #264]
    8f2c:	str	xzr, [sp, #312]
    8f30:	mov	x1, x26
    8f34:	mov	x0, x20
    8f38:	bl	1932c <OnPrint@@Base+0xac4>
    8f3c:	tst	w0, #0xff
    8f40:	b.eq	8f78 <__lsan_do_recoverable_leak_check@@Base+0x61c>  // b.none
    8f44:	ldp	x2, x3, [sp, #240]
    8f48:	mov	x1, x21
    8f4c:	ldr	x4, [sp, #280]
    8f50:	mov	x0, x19
    8f54:	and	w4, w4, #0x1
    8f58:	bl	7ca0 <__lsan_unregister_root_region@@Base+0x7b0>
    8f5c:	b	8f30 <__lsan_do_recoverable_leak_check@@Base+0x5d4>
    8f60:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    8f64:	mov	x4, #0x0                   	// #0
    8f68:	add	x2, x2, #0xab5
    8f6c:	mov	x3, #0x0                   	// #0
    8f70:	mov	w1, #0x151                 	// #337
    8f74:	b	89a8 <__lsan_do_recoverable_leak_check@@Base+0x4c>
    8f78:	mov	x0, x20
    8f7c:	add	x25, x25, #0x1
    8f80:	bl	18e20 <OnPrint@@Base+0x5b8>
    8f84:	b	8f00 <__lsan_do_recoverable_leak_check@@Base+0x5a4>
    8f88:	mov	x0, x19
    8f8c:	bl	7dc4 <__lsan_unregister_root_region@@Base+0x8d4>
    8f90:	ldr	x4, [sp, #200]
    8f94:	cbz	x4, 8fac <__lsan_do_recoverable_leak_check@@Base+0x650>
    8f98:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8f9c:	mov	x3, #0x0                   	// #0
    8fa0:	add	x2, x2, #0x20c
    8fa4:	mov	w1, #0x1c7                 	// #455
    8fa8:	b	89a8 <__lsan_do_recoverable_leak_check@@Base+0x4c>
    8fac:	mov	x0, x19
    8fb0:	bl	72f0 <*ABS*+0x10@plt+0x520>
    8fb4:	add	x0, x24, #0xcc0
    8fb8:	ldrb	w0, [x0, #164]
    8fbc:	cbz	w0, 8fcc <__lsan_do_recoverable_leak_check@@Base+0x670>
    8fc0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8fc4:	add	x0, x0, #0x229
    8fc8:	bl	18b74 <OnPrint@@Base+0x30c>
    8fcc:	add	x24, x24, #0xcc0
    8fd0:	mov	x0, x19
    8fd4:	bl	9d40 <__lsan_do_recoverable_leak_check@@Base+0x13e4>
    8fd8:	mov	x0, x19
    8fdc:	bl	7dc4 <__lsan_unregister_root_region@@Base+0x8d4>
    8fe0:	ldrb	w0, [x24, #164]
    8fe4:	cbz	w0, 8ff4 <__lsan_do_recoverable_leak_check@@Base+0x698>
    8fe8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    8fec:	add	x0, x0, #0x254
    8ff0:	bl	18b74 <OnPrint@@Base+0x30c>
    8ff4:	mov	x1, #0x0                   	// #0
    8ff8:	adrp	x0, 7000 <*ABS*+0x10@plt+0x230>
    8ffc:	add	x0, x0, #0xd54
    9000:	bl	a810 <__sanitizer_get_allocated_size@@Base+0x310>
    9004:	ldp	x0, x1, [sp, #184]
    9008:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    900c:	add	x1, x23, #0x8
    9010:	adrp	x0, 8000 <__lsan_unregister_root_region@@Base+0xb10>
    9014:	add	x0, x0, #0x1e4
    9018:	bl	a810 <__sanitizer_get_allocated_size@@Base+0x310>
    901c:	mov	x1, #0x0                   	// #0
    9020:	adrp	x0, 6000 <_Unwind_Backtrace@plt-0x6b0>
    9024:	add	x0, x0, #0xf68
    9028:	bl	a810 <__sanitizer_get_allocated_size@@Base+0x310>
    902c:	mov	w0, #0x1                   	// #1
    9030:	strb	w0, [x23]
    9034:	ldp	x21, x22, [sp, #16]
    9038:	ldp	x23, x24, [sp, #32]
    903c:	ldp	x25, x26, [sp, #48]
    9040:	ldp	x27, x28, [sp, #64]
    9044:	ldr	x30, [sp, #80]
    9048:	ldp	x19, x20, [sp], #320
    904c:	ret
    9050:	ldr	x0, [x0, #8]
    9054:	str	x1, [x0]
    9058:	mov	w0, #0x1                   	// #1
    905c:	ret
    9060:	stp	x19, x20, [sp, #-48]!
    9064:	mov	x20, x0
    9068:	mov	x19, x1
    906c:	mov	x0, x19
    9070:	add	x1, sp, #0x28
    9074:	mov	w2, #0xa                   	// #10
    9078:	str	x30, [sp, #16]
    907c:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1c94>
    9080:	ldr	x1, [x20, #8]
    9084:	str	w0, [x1]
    9088:	ldr	x0, [sp, #40]
    908c:	ldrb	w0, [x0]
    9090:	cmp	w0, #0x0
    9094:	cset	w20, eq  // eq = none
    9098:	cbz	w0, 90ac <__lsan_do_recoverable_leak_check@@Base+0x750>
    909c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    90a0:	mov	x1, x19
    90a4:	add	x0, x0, #0x540
    90a8:	bl	18af0 <OnPrint@@Base+0x288>
    90ac:	mov	w0, w20
    90b0:	ldr	x30, [sp, #16]
    90b4:	ldp	x19, x20, [sp], #48
    90b8:	ret
    90bc:	stp	x19, x20, [sp, #-32]!
    90c0:	mov	x19, x1
    90c4:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
    90c8:	add	x1, x1, #0x81
    90cc:	ldr	x20, [x0, #8]
    90d0:	mov	x0, x19
    90d4:	str	x30, [sp, #16]
    90d8:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
    90dc:	cbnz	w0, 90ec <__lsan_do_recoverable_leak_check@@Base+0x790>
    90e0:	strb	wzr, [x20]
    90e4:	mov	w0, #0x1                   	// #1
    90e8:	b	9164 <__lsan_do_recoverable_leak_check@@Base+0x808>
    90ec:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    90f0:	mov	x0, x19
    90f4:	add	x1, x1, #0x26d
    90f8:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
    90fc:	cbz	w0, 90e0 <__lsan_do_recoverable_leak_check@@Base+0x784>
    9100:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    9104:	mov	x0, x19
    9108:	add	x1, x1, #0xf35
    910c:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
    9110:	cbz	w0, 90e0 <__lsan_do_recoverable_leak_check@@Base+0x784>
    9114:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9118:	mov	x0, x19
    911c:	add	x1, x1, #0x270
    9120:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
    9124:	cbz	w0, 9170 <__lsan_do_recoverable_leak_check@@Base+0x814>
    9128:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    912c:	mov	x0, x19
    9130:	add	x1, x1, #0x272
    9134:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
    9138:	cbz	w0, 9170 <__lsan_do_recoverable_leak_check@@Base+0x814>
    913c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    9140:	mov	x0, x19
    9144:	add	x1, x1, #0xf25
    9148:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
    914c:	cbz	w0, 9170 <__lsan_do_recoverable_leak_check@@Base+0x814>
    9150:	mov	x1, x19
    9154:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9158:	add	x0, x0, #0x276
    915c:	bl	18af0 <OnPrint@@Base+0x288>
    9160:	mov	w0, #0x0                   	// #0
    9164:	ldr	x30, [sp, #16]
    9168:	ldp	x19, x20, [sp], #32
    916c:	ret
    9170:	mov	w0, #0x1                   	// #1
    9174:	strb	w0, [x20]
    9178:	b	90e4 <__lsan_do_recoverable_leak_check@@Base+0x788>
    917c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9180:	stp	x19, x20, [sp, #-32]!
    9184:	mov	x19, x0
    9188:	ldr	x20, [x0, #4000]
    918c:	ldr	x1, [x20]
    9190:	str	x30, [sp, #16]
    9194:	cbnz	x1, 91a0 <__lsan_do_recoverable_leak_check@@Base+0x844>
    9198:	bl	1571c <__sanitizer_set_report_fd@@Base+0x2c68>
    919c:	str	x0, [x20]
    91a0:	ldr	x0, [x19, #4000]
    91a4:	ldr	x30, [sp, #16]
    91a8:	ldp	x19, x20, [sp], #32
    91ac:	ldr	x0, [x0]
    91b0:	ret
    91b4:	cbnz	x0, 91dc <__lsan_do_recoverable_leak_check@@Base+0x880>
    91b8:	str	x30, [sp, #-16]!
    91bc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    91c0:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    91c4:	add	x2, x2, #0x2a2
    91c8:	add	x0, x0, #0x5c5
    91cc:	mov	x4, #0x0                   	// #0
    91d0:	mov	x3, #0x0                   	// #0
    91d4:	mov	w1, #0x151                 	// #337
    91d8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    91dc:	clz	x0, x0
    91e0:	mov	w1, #0x3f                  	// #63
    91e4:	sub	w0, w1, w0
    91e8:	sxtw	x0, w0
    91ec:	ret
    91f0:	stp	x19, x30, [sp, #-16]!
    91f4:	cbnz	x0, 9218 <__lsan_do_recoverable_leak_check@@Base+0x8bc>
    91f8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    91fc:	add	x2, x2, #0x2b2
    9200:	mov	x4, #0x0                   	// #0
    9204:	mov	x3, #0x0                   	// #0
    9208:	mov	w1, #0x177                 	// #375
    920c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    9210:	add	x0, x0, #0x5c5
    9214:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    9218:	sub	x1, x0, #0x1
    921c:	mov	x19, x0
    9220:	tst	x1, x0
    9224:	b.eq	927c <__lsan_do_recoverable_leak_check@@Base+0x920>  // b.none
    9228:	bl	91b4 <__lsan_do_recoverable_leak_check@@Base+0x858>
    922c:	add	w1, w0, #0x1
    9230:	mov	x4, #0x1                   	// #1
    9234:	mov	x2, x0
    9238:	lsl	x0, x4, x1
    923c:	cmp	x19, x0
    9240:	b.cc	925c <__lsan_do_recoverable_leak_check@@Base+0x900>  // b.lo, b.ul, b.last
    9244:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9248:	mov	x4, x0
    924c:	mov	x3, x19
    9250:	add	x2, x2, #0x2c2
    9254:	mov	w1, #0x17b                 	// #379
    9258:	b	920c <__lsan_do_recoverable_leak_check@@Base+0x8b0>
    925c:	lsl	x4, x4, x2
    9260:	cmp	x19, x4
    9264:	b.hi	927c <__lsan_do_recoverable_leak_check@@Base+0x920>  // b.pmore
    9268:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    926c:	mov	x3, x19
    9270:	add	x2, x2, #0x2e4
    9274:	mov	w1, #0x17c                 	// #380
    9278:	b	920c <__lsan_do_recoverable_leak_check@@Base+0x8b0>
    927c:	ldp	x19, x30, [sp], #16
    9280:	ret
    9284:	sub	x2, x1, #0x1
    9288:	tst	x2, x1
    928c:	b.eq	92a4 <__lsan_do_recoverable_leak_check@@Base+0x948>  // b.none
    9290:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9294:	add	x0, x0, #0x300
    9298:	str	x30, [sp, #-16]!
    929c:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
    92a0:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    92a4:	sub	x0, x0, #0x1
    92a8:	add	x0, x0, x1
    92ac:	neg	x1, x1
    92b0:	and	x0, x0, x1
    92b4:	ret
    92b8:	ldr	x4, [x0, #16]
    92bc:	mov	x3, x1
    92c0:	cmp	x1, x4
    92c4:	b.cc	92e4 <__lsan_do_recoverable_leak_check@@Base+0x988>  // b.lo, b.ul, b.last
    92c8:	str	x30, [sp, #-16]!
    92cc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    92d0:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    92d4:	add	x2, x2, #0x317
    92d8:	add	x0, x0, #0x5c5
    92dc:	mov	w1, #0x1b6                 	// #438
    92e0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    92e4:	ldr	x0, [x0]
    92e8:	add	x0, x0, x1, lsl #4
    92ec:	ret
    92f0:	ldr	x4, [x0, #16]
    92f4:	mov	x3, x1
    92f8:	cmp	x1, x4
    92fc:	b.cc	931c <__lsan_do_recoverable_leak_check@@Base+0x9c0>  // b.lo, b.ul, b.last
    9300:	str	x30, [sp, #-16]!
    9304:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9308:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    930c:	add	x2, x2, #0x317
    9310:	add	x0, x0, #0x5c5
    9314:	mov	w1, #0x1ba                 	// #442
    9318:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    931c:	ldr	x0, [x0]
    9320:	add	x0, x0, x1, lsl #3
    9324:	ret
    9328:	cmp	x1, #0x1
    932c:	b.ls	93fc <__lsan_do_recoverable_leak_check@@Base+0xaa0>  // b.plast
    9330:	mov	x2, #0x1                   	// #1
    9334:	mov	x3, x2
    9338:	mov	x4, x3
    933c:	sub	x3, x3, #0x1
    9340:	lsr	x3, x3, #1
    9344:	lsl	x4, x4, #3
    9348:	lsl	x5, x3, #3
    934c:	ldr	x6, [x0, x4]
    9350:	ldr	x7, [x0, x5]
    9354:	cmp	x7, x6
    9358:	b.cs	9368 <__lsan_do_recoverable_leak_check@@Base+0xa0c>  // b.hs, b.nlast
    935c:	str	x7, [x0, x4]
    9360:	str	x6, [x0, x5]
    9364:	cbnz	x3, 9338 <__lsan_do_recoverable_leak_check@@Base+0x9dc>
    9368:	add	x3, x2, #0x1
    936c:	cmp	x1, x3
    9370:	b.ne	9400 <__lsan_do_recoverable_leak_check@@Base+0xaa4>  // b.any
    9374:	ldr	x1, [x0]
    9378:	ldr	x3, [x0, x2, lsl #3]
    937c:	str	x3, [x0]
    9380:	str	x1, [x0, x2, lsl #3]
    9384:	mov	x1, #0x0                   	// #0
    9388:	lsl	x4, x1, #1
    938c:	add	x5, x1, #0x1
    9390:	add	x3, x4, #0x1
    9394:	add	x4, x4, #0x2
    9398:	cmp	x3, x2
    939c:	b.cs	9410 <__lsan_do_recoverable_leak_check@@Base+0xab4>  // b.hs, b.nlast
    93a0:	ldr	x7, [x0, x1, lsl #3]
    93a4:	ldr	x6, [x0, x3, lsl #3]
    93a8:	cmp	x7, x6
    93ac:	b.cs	9410 <__lsan_do_recoverable_leak_check@@Base+0xab4>  // b.hs, b.nlast
    93b0:	cmp	x4, x2
    93b4:	b.cs	93cc <__lsan_do_recoverable_leak_check@@Base+0xa70>  // b.hs, b.nlast
    93b8:	lsl	x5, x5, #4
    93bc:	ldr	x6, [x0, x3, lsl #3]
    93c0:	ldr	x5, [x0, x5]
    93c4:	cmp	x6, x5
    93c8:	csel	x3, x3, x4, cs  // cs = hs, nlast
    93cc:	cmp	x3, x1
    93d0:	b.eq	93f4 <__lsan_do_recoverable_leak_check@@Base+0xa98>  // b.none
    93d4:	lsl	x4, x3, #3
    93d8:	lsl	x1, x1, #3
    93dc:	cmp	x3, x2
    93e0:	ldr	x6, [x0, x4]
    93e4:	ldr	x5, [x0, x1]
    93e8:	str	x6, [x0, x1]
    93ec:	str	x5, [x0, x4]
    93f0:	b.cc	9408 <__lsan_do_recoverable_leak_check@@Base+0xaac>  // b.lo, b.ul, b.last
    93f4:	subs	x2, x2, #0x1
    93f8:	b.ne	9374 <__lsan_do_recoverable_leak_check@@Base+0xa18>  // b.any
    93fc:	ret
    9400:	mov	x2, x3
    9404:	b	9334 <__lsan_do_recoverable_leak_check@@Base+0x9d8>
    9408:	mov	x1, x3
    940c:	b	9388 <__lsan_do_recoverable_leak_check@@Base+0xa2c>
    9410:	cmp	x4, x2
    9414:	b.cs	93f4 <__lsan_do_recoverable_leak_check@@Base+0xa98>  // b.hs, b.nlast
    9418:	mov	x3, x1
    941c:	b	93b8 <__lsan_do_recoverable_leak_check@@Base+0xa5c>
    9420:	ldr	x0, [x0]
    9424:	b	153ec <__sanitizer_set_report_fd@@Base+0x2938>
    9428:	ldr	x4, [x0, #16]
    942c:	mov	x3, x1
    9430:	cmp	x1, x4
    9434:	b.cc	9454 <__lsan_do_recoverable_leak_check@@Base+0xaf8>  // b.lo, b.ul, b.last
    9438:	str	x30, [sp, #-16]!
    943c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9440:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    9444:	add	x2, x2, #0x317
    9448:	add	x0, x0, #0x5c5
    944c:	mov	w1, #0x1b6                 	// #438
    9450:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    9454:	ldr	x0, [x0]
    9458:	add	x0, x0, x1, lsl #5
    945c:	ret
    9460:	stp	x19, x20, [sp, #-32]!
    9464:	stp	x21, x30, [sp, #16]
    9468:	cbnz	x1, 948c <__lsan_do_recoverable_leak_check@@Base+0xb30>
    946c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9470:	add	x2, x2, #0x329
    9474:	mov	x4, #0x0                   	// #0
    9478:	mov	x3, #0x0                   	// #0
    947c:	mov	w1, #0x1fc                 	// #508
    9480:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    9484:	add	x0, x0, #0x5c5
    9488:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    948c:	ldr	x3, [x0, #16]
    9490:	mov	x19, x0
    9494:	mov	x20, x1
    9498:	cmp	x1, x3
    949c:	b.cs	94b4 <__lsan_do_recoverable_leak_check@@Base+0xb58>  // b.hs, b.nlast
    94a0:	mov	x4, x1
    94a4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    94a8:	mov	w1, #0x1fd                 	// #509
    94ac:	add	x2, x2, #0x342
    94b0:	b	9480 <__lsan_do_recoverable_leak_check@@Base+0xb24>
    94b4:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    94b8:	mov	x1, x0
    94bc:	lsl	x0, x20, #3
    94c0:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    94c4:	mov	w2, #0x0                   	// #0
    94c8:	mov	x20, x0
    94cc:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    94d0:	add	x1, x1, #0x360
    94d4:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    94d8:	mov	x21, x0
    94dc:	ldr	x1, [x19]
    94e0:	ldr	x2, [x19, #16]
    94e4:	lsl	x2, x2, #3
    94e8:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    94ec:	ldp	x0, x1, [x19]
    94f0:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    94f4:	stp	x21, x20, [x19]
    94f8:	ldp	x21, x30, [sp, #16]
    94fc:	ldp	x19, x20, [sp], #32
    9500:	ret
    9504:	stp	x19, x20, [sp, #-32]!
    9508:	ldp	x4, x3, [x0, #8]
    950c:	str	x30, [sp, #16]
    9510:	lsr	x4, x4, #3
    9514:	cmp	x3, x4
    9518:	b.ls	9534 <__lsan_do_recoverable_leak_check@@Base+0xbd8>  // b.plast
    951c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9520:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    9524:	add	x2, x2, #0x373
    9528:	add	x0, x0, #0x5c5
    952c:	mov	w1, #0x1be                 	// #446
    9530:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    9534:	mov	x19, x0
    9538:	mov	x20, x1
    953c:	b.ne	9554 <__lsan_do_recoverable_leak_check@@Base+0xbf8>  // b.any
    9540:	add	x0, x3, #0x1
    9544:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
    9548:	mov	x1, x0
    954c:	mov	x0, x19
    9550:	bl	9460 <__lsan_do_recoverable_leak_check@@Base+0xb04>
    9554:	ldr	x0, [x19, #16]
    9558:	mov	x2, #0x8                   	// #8
    955c:	ldr	x30, [sp, #16]
    9560:	add	x1, x0, #0x1
    9564:	str	x1, [x19, #16]
    9568:	mov	x1, x20
    956c:	ldr	x3, [x19]
    9570:	ldp	x19, x20, [sp], #32
    9574:	add	x0, x3, x0, lsl #3
    9578:	b	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    957c:	stp	x19, x20, [sp, #-32]!
    9580:	stp	x21, x30, [sp, #16]
    9584:	cbnz	x1, 95a8 <__lsan_do_recoverable_leak_check@@Base+0xc4c>
    9588:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    958c:	add	x2, x2, #0x329
    9590:	mov	x4, #0x0                   	// #0
    9594:	mov	x3, #0x0                   	// #0
    9598:	mov	w1, #0x1fc                 	// #508
    959c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    95a0:	add	x0, x0, #0x5c5
    95a4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    95a8:	ldr	x3, [x0, #16]
    95ac:	mov	x19, x0
    95b0:	mov	x20, x1
    95b4:	cmp	x1, x3
    95b8:	b.cs	95d0 <__lsan_do_recoverable_leak_check@@Base+0xc74>  // b.hs, b.nlast
    95bc:	mov	x4, x1
    95c0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    95c4:	mov	w1, #0x1fd                 	// #509
    95c8:	add	x2, x2, #0x342
    95cc:	b	959c <__lsan_do_recoverable_leak_check@@Base+0xc40>
    95d0:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    95d4:	mov	x1, x0
    95d8:	lsl	x0, x20, #5
    95dc:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    95e0:	mov	w2, #0x0                   	// #0
    95e4:	mov	x20, x0
    95e8:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    95ec:	add	x1, x1, #0x360
    95f0:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    95f4:	mov	x21, x0
    95f8:	ldr	x1, [x19]
    95fc:	ldr	x2, [x19, #16]
    9600:	lsl	x2, x2, #5
    9604:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    9608:	ldp	x0, x1, [x19]
    960c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    9610:	stp	x21, x20, [x19]
    9614:	ldp	x21, x30, [sp, #16]
    9618:	ldp	x19, x20, [sp], #32
    961c:	ret
    9620:	stp	x19, x20, [sp, #-48]!
    9624:	stp	x21, x22, [sp, #16]
    9628:	str	x30, [sp, #32]
    962c:	cbnz	x1, 9650 <__lsan_do_recoverable_leak_check@@Base+0xcf4>
    9630:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9634:	add	x2, x2, #0x329
    9638:	mov	x4, #0x0                   	// #0
    963c:	mov	x3, #0x0                   	// #0
    9640:	mov	w1, #0x1fc                 	// #508
    9644:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    9648:	add	x0, x0, #0x5c5
    964c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    9650:	ldr	x3, [x0, #16]
    9654:	mov	x19, x0
    9658:	mov	x20, x1
    965c:	cmp	x1, x3
    9660:	b.cs	9678 <__lsan_do_recoverable_leak_check@@Base+0xd1c>  // b.hs, b.nlast
    9664:	mov	x4, x1
    9668:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    966c:	mov	w1, #0x1fd                 	// #509
    9670:	add	x2, x2, #0x342
    9674:	b	9644 <__lsan_do_recoverable_leak_check@@Base+0xce8>
    9678:	mov	x22, #0x18                  	// #24
    967c:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    9680:	mov	x1, x0
    9684:	mul	x0, x20, x22
    9688:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    968c:	mov	x20, x0
    9690:	mov	w2, #0x0                   	// #0
    9694:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9698:	add	x1, x1, #0x360
    969c:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    96a0:	ldr	x2, [x19, #16]
    96a4:	mov	x21, x0
    96a8:	ldr	x1, [x19]
    96ac:	mul	x2, x2, x22
    96b0:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    96b4:	ldp	x0, x1, [x19]
    96b8:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    96bc:	ldr	x30, [sp, #32]
    96c0:	stp	x21, x20, [x19]
    96c4:	ldp	x21, x22, [sp, #16]
    96c8:	ldp	x19, x20, [sp], #48
    96cc:	ret
    96d0:	ldp	x6, x7, [x1]
    96d4:	sub	sp, sp, #0x20
    96d8:	ldp	x4, x5, [x0]
    96dc:	stp	x6, x7, [x0]
    96e0:	ldp	x6, x7, [x1, #16]
    96e4:	ldp	x2, x3, [x0, #16]
    96e8:	stp	x6, x7, [x0, #16]
    96ec:	stp	x4, x5, [x1]
    96f0:	stp	x2, x3, [x1, #16]
    96f4:	add	sp, sp, #0x20
    96f8:	ret
    96fc:	cmp	x1, #0x1
    9700:	b.ls	981c <__lsan_do_recoverable_leak_check@@Base+0xec0>  // b.plast
    9704:	stp	x19, x20, [sp, #-64]!
    9708:	mov	x19, x0
    970c:	mov	x20, #0x1                   	// #1
    9710:	stp	x23, x24, [sp, #32]
    9714:	mov	x23, x1
    9718:	mov	x24, x2
    971c:	stp	x21, x22, [sp, #16]
    9720:	stp	x25, x30, [sp, #48]
    9724:	mov	x21, x20
    9728:	mov	x22, x21
    972c:	sub	x21, x21, #0x1
    9730:	lsr	x21, x21, #1
    9734:	add	x22, x19, x22, lsl #5
    9738:	mov	x1, x22
    973c:	add	x25, x19, x21, lsl #5
    9740:	mov	x0, x25
    9744:	blr	x24
    9748:	tst	w0, #0xff
    974c:	b.eq	9760 <__lsan_do_recoverable_leak_check@@Base+0xe04>  // b.none
    9750:	mov	x1, x25
    9754:	mov	x0, x22
    9758:	bl	96d0 <__lsan_do_recoverable_leak_check@@Base+0xd74>
    975c:	cbnz	x21, 9728 <__lsan_do_recoverable_leak_check@@Base+0xdcc>
    9760:	add	x0, x20, #0x1
    9764:	cmp	x23, x0
    9768:	b.ne	97fc <__lsan_do_recoverable_leak_check@@Base+0xea0>  // b.any
    976c:	mov	x22, #0x0                   	// #0
    9770:	add	x1, x19, x20, lsl #5
    9774:	mov	x0, x19
    9778:	bl	96d0 <__lsan_do_recoverable_leak_check@@Base+0xd74>
    977c:	lsl	x23, x22, #1
    9780:	add	x25, x22, #0x1
    9784:	add	x21, x23, #0x1
    9788:	add	x23, x23, #0x2
    978c:	cmp	x21, x20
    9790:	b.cs	980c <__lsan_do_recoverable_leak_check@@Base+0xeb0>  // b.hs, b.nlast
    9794:	add	x1, x19, x21, lsl #5
    9798:	add	x0, x19, x22, lsl #5
    979c:	blr	x24
    97a0:	tst	w0, #0xff
    97a4:	b.eq	980c <__lsan_do_recoverable_leak_check@@Base+0xeb0>  // b.none
    97a8:	cmp	x23, x20
    97ac:	b.cs	97c4 <__lsan_do_recoverable_leak_check@@Base+0xe68>  // b.hs, b.nlast
    97b0:	add	x0, x19, x21, lsl #5
    97b4:	add	x1, x19, x25, lsl #6
    97b8:	blr	x24
    97bc:	tst	w0, #0xff
    97c0:	csel	x21, x21, x23, eq  // eq = none
    97c4:	cmp	x21, x22
    97c8:	b.eq	97e0 <__lsan_do_recoverable_leak_check@@Base+0xe84>  // b.none
    97cc:	add	x1, x19, x21, lsl #5
    97d0:	add	x0, x19, x22, lsl #5
    97d4:	bl	96d0 <__lsan_do_recoverable_leak_check@@Base+0xd74>
    97d8:	cmp	x21, x20
    97dc:	b.cc	9804 <__lsan_do_recoverable_leak_check@@Base+0xea8>  // b.lo, b.ul, b.last
    97e0:	subs	x20, x20, #0x1
    97e4:	b.ne	976c <__lsan_do_recoverable_leak_check@@Base+0xe10>  // b.any
    97e8:	ldp	x21, x22, [sp, #16]
    97ec:	ldp	x23, x24, [sp, #32]
    97f0:	ldp	x25, x30, [sp, #48]
    97f4:	ldp	x19, x20, [sp], #64
    97f8:	ret
    97fc:	mov	x20, x0
    9800:	b	9724 <__lsan_do_recoverable_leak_check@@Base+0xdc8>
    9804:	mov	x22, x21
    9808:	b	977c <__lsan_do_recoverable_leak_check@@Base+0xe20>
    980c:	cmp	x23, x20
    9810:	b.cs	97e0 <__lsan_do_recoverable_leak_check@@Base+0xe84>  // b.hs, b.nlast
    9814:	mov	x21, x22
    9818:	b	97b0 <__lsan_do_recoverable_leak_check@@Base+0xe54>
    981c:	ret
    9820:	stp	x19, x20, [sp, #-32]!
    9824:	stp	x21, x30, [sp, #16]
    9828:	cbnz	x1, 984c <__lsan_do_recoverable_leak_check@@Base+0xef0>
    982c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9830:	add	x2, x2, #0x329
    9834:	mov	x4, #0x0                   	// #0
    9838:	mov	x3, #0x0                   	// #0
    983c:	mov	w1, #0x1fc                 	// #508
    9840:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    9844:	add	x0, x0, #0x5c5
    9848:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    984c:	ldr	x3, [x0, #16]
    9850:	mov	x19, x0
    9854:	mov	x20, x1
    9858:	cmp	x1, x3
    985c:	b.cs	9874 <__lsan_do_recoverable_leak_check@@Base+0xf18>  // b.hs, b.nlast
    9860:	mov	x4, x1
    9864:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9868:	mov	w1, #0x1fd                 	// #509
    986c:	add	x2, x2, #0x342
    9870:	b	9840 <__lsan_do_recoverable_leak_check@@Base+0xee4>
    9874:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    9878:	mov	x1, x0
    987c:	lsl	x0, x20, #4
    9880:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    9884:	mov	w2, #0x0                   	// #0
    9888:	mov	x20, x0
    988c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9890:	add	x1, x1, #0x360
    9894:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    9898:	mov	x21, x0
    989c:	ldr	x1, [x19]
    98a0:	ldr	x2, [x19, #16]
    98a4:	lsl	x2, x2, #4
    98a8:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    98ac:	ldp	x0, x1, [x19]
    98b0:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    98b4:	stp	x21, x20, [x19]
    98b8:	ldp	x21, x30, [sp, #16]
    98bc:	ldp	x19, x20, [sp], #32
    98c0:	ret
    98c4:	ldr	x2, [x0, #8]
    98c8:	cmp	x1, x2, lsr #3
    98cc:	b.ls	98d4 <__lsan_do_recoverable_leak_check@@Base+0xf78>  // b.plast
    98d0:	b	9460 <__lsan_do_recoverable_leak_check@@Base+0xb04>
    98d4:	ret
    98d8:	stp	x19, x20, [sp, #-32]!
    98dc:	stp	x21, x30, [sp, #16]
    98e0:	cbnz	x1, 9904 <__lsan_do_recoverable_leak_check@@Base+0xfa8>
    98e4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    98e8:	add	x2, x2, #0x329
    98ec:	mov	x4, #0x0                   	// #0
    98f0:	mov	x3, #0x0                   	// #0
    98f4:	mov	w1, #0x1fc                 	// #508
    98f8:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    98fc:	add	x0, x0, #0x5c5
    9900:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    9904:	ldr	x3, [x0, #16]
    9908:	mov	x19, x0
    990c:	mov	x20, x1
    9910:	cmp	x1, x3
    9914:	b.cs	992c <__lsan_do_recoverable_leak_check@@Base+0xfd0>  // b.hs, b.nlast
    9918:	mov	x4, x1
    991c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9920:	mov	w1, #0x1fd                 	// #509
    9924:	add	x2, x2, #0x342
    9928:	b	98f8 <__lsan_do_recoverable_leak_check@@Base+0xf9c>
    992c:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    9930:	mov	x1, x0
    9934:	mov	x0, x20
    9938:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    993c:	mov	w2, #0x0                   	// #0
    9940:	mov	x20, x0
    9944:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9948:	add	x1, x1, #0x360
    994c:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    9950:	mov	x21, x0
    9954:	ldr	x1, [x19]
    9958:	ldr	x2, [x19, #16]
    995c:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    9960:	ldp	x0, x1, [x19]
    9964:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    9968:	stp	x21, x20, [x19]
    996c:	ldp	x21, x30, [sp, #16]
    9970:	ldp	x19, x20, [sp], #32
    9974:	ret
    9978:	stp	x19, x20, [sp, #-32]!
    997c:	mov	x19, x0
    9980:	mov	x20, x1
    9984:	str	x30, [sp, #16]
    9988:	stp	xzr, xzr, [x0]
    998c:	str	xzr, [x0, #16]
    9990:	cbz	x1, 99d4 <__lsan_do_recoverable_leak_check@@Base+0x1078>
    9994:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
    9998:	ldr	x0, [x19, #16]
    999c:	cmp	x20, x0
    99a0:	b.ls	99d4 <__lsan_do_recoverable_leak_check@@Base+0x1078>  // b.plast
    99a4:	ldr	x0, [x19, #8]
    99a8:	cmp	x20, x0
    99ac:	b.ls	99bc <__lsan_do_recoverable_leak_check@@Base+0x1060>  // b.plast
    99b0:	mov	x1, x20
    99b4:	mov	x0, x19
    99b8:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
    99bc:	ldr	x3, [x19]
    99c0:	mov	w1, #0x0                   	// #0
    99c4:	ldr	x0, [x19, #16]
    99c8:	sub	x2, x20, x0
    99cc:	add	x0, x3, x0
    99d0:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    99d4:	stp	x20, xzr, [x19, #16]
    99d8:	cbnz	x20, 99fc <__lsan_do_recoverable_leak_check@@Base+0x10a0>
    99dc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    99e0:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    99e4:	add	x2, x2, #0x317
    99e8:	add	x0, x0, #0x5c5
    99ec:	mov	x4, #0x0                   	// #0
    99f0:	mov	x3, #0x0                   	// #0
    99f4:	mov	w1, #0x1b6                 	// #438
    99f8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    99fc:	ldr	x0, [x19]
    9a00:	strb	wzr, [x0]
    9a04:	ldr	x30, [sp, #16]
    9a08:	ldp	x19, x20, [sp], #32
    9a0c:	ret
    9a10:	stp	x19, x20, [sp, #-32]!
    9a14:	stp	x21, x30, [sp, #16]
    9a18:	cbnz	x1, 9a3c <__lsan_do_recoverable_leak_check@@Base+0x10e0>
    9a1c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9a20:	add	x2, x2, #0x329
    9a24:	mov	x4, #0x0                   	// #0
    9a28:	mov	x3, #0x0                   	// #0
    9a2c:	mov	w1, #0x1fc                 	// #508
    9a30:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    9a34:	add	x0, x0, #0x5c5
    9a38:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    9a3c:	ldr	x3, [x0, #16]
    9a40:	mov	x19, x0
    9a44:	mov	x20, x1
    9a48:	cmp	x1, x3
    9a4c:	b.cs	9a64 <__lsan_do_recoverable_leak_check@@Base+0x1108>  // b.hs, b.nlast
    9a50:	mov	x4, x1
    9a54:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9a58:	mov	w1, #0x1fd                 	// #509
    9a5c:	add	x2, x2, #0x342
    9a60:	b	9a30 <__lsan_do_recoverable_leak_check@@Base+0x10d4>
    9a64:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    9a68:	mov	x1, x0
    9a6c:	lsl	x0, x20, #3
    9a70:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    9a74:	mov	w2, #0x0                   	// #0
    9a78:	mov	x20, x0
    9a7c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9a80:	add	x1, x1, #0x360
    9a84:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    9a88:	mov	x21, x0
    9a8c:	ldr	x1, [x19]
    9a90:	ldr	x2, [x19, #16]
    9a94:	lsl	x2, x2, #3
    9a98:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    9a9c:	ldp	x0, x1, [x19]
    9aa0:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    9aa4:	stp	x21, x20, [x19]
    9aa8:	ldp	x21, x30, [sp, #16]
    9aac:	ldp	x19, x20, [sp], #32
    9ab0:	ret
    9ab4:	stp	x19, x20, [sp, #-64]!
    9ab8:	mov	x19, x0
    9abc:	mov	x20, #0x0                   	// #0
    9ac0:	stp	x21, x22, [sp, #16]
    9ac4:	mov	x21, x2
    9ac8:	mov	x22, #0x38                  	// #56
    9acc:	stp	x23, x24, [sp, #32]
    9ad0:	mov	x23, #0xffffffff            	// #4294967295
    9ad4:	mov	x24, #0x1                   	// #1
    9ad8:	movk	x23, #0x2, lsl #32
    9adc:	movk	x24, #0x2, lsl #32
    9ae0:	str	x30, [sp, #48]
    9ae4:	ldrh	w0, [x19, #24]
    9ae8:	cmp	x0, x20
    9aec:	b.ls	9b34 <__lsan_do_recoverable_leak_check@@Base+0x11d8>  // b.plast
    9af0:	mul	x0, x20, x22
    9af4:	ldr	x1, [x19, #16]
    9af8:	add	x2, x1, x0
    9afc:	ldr	x0, [x1, x0]
    9b00:	and	x0, x0, x23
    9b04:	cmp	x0, x24
    9b08:	b.ne	9b2c <__lsan_do_recoverable_leak_check@@Base+0x11d0>  // b.any
    9b0c:	ldr	x1, [x2, #40]
    9b10:	cbz	x1, 9b2c <__lsan_do_recoverable_leak_check@@Base+0x11d0>
    9b14:	ldr	x0, [x19]
    9b18:	ldr	x2, [x2, #16]
    9b1c:	add	x0, x0, x2
    9b20:	mov	x2, x21
    9b24:	add	x1, x1, x0
    9b28:	bl	7ba4 <__lsan_unregister_root_region@@Base+0x6b4>
    9b2c:	add	x20, x20, #0x1
    9b30:	b	9ae4 <__lsan_do_recoverable_leak_check@@Base+0x1188>
    9b34:	mov	w0, #0x0                   	// #0
    9b38:	ldp	x21, x22, [sp, #16]
    9b3c:	ldp	x23, x24, [sp, #32]
    9b40:	ldr	x30, [sp, #48]
    9b44:	ldp	x19, x20, [sp], #64
    9b48:	ret
    9b4c:	ldp	x0, x1, [x2]
    9b50:	str	x30, [sp, #-16]!
    9b54:	bl	1b860 <__sanitizer_symbolize_global@@Base+0x111c>
    9b58:	mov	w0, #0x1                   	// #1
    9b5c:	ldr	x30, [sp], #16
    9b60:	ret
    9b64:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9b68:	ldr	x0, [x0, #3400]
    9b6c:	mrs	x1, tpidr_el0
    9b70:	ldr	w0, [x1, x0]
    9b74:	cmp	w0, #0x0
    9b78:	cset	w0, gt
    9b7c:	ret
    9b80:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9b84:	ldr	x1, [x1, #3400]
    9b88:	mrs	x2, tpidr_el0
    9b8c:	ldr	w0, [x2, x1]
    9b90:	add	w0, w0, #0x1
    9b94:	str	w0, [x2, x1]
    9b98:	ret
    9b9c:	stp	x19, x20, [sp, #-32]!
    9ba0:	mrs	x20, tpidr_el0
    9ba4:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9ba8:	ldr	x19, [x19, #3400]
    9bac:	ldr	w0, [x20, x19]
    9bb0:	str	x30, [sp, #16]
    9bb4:	cbnz	w0, 9bbc <__lsan_do_recoverable_leak_check@@Base+0x1260>
    9bb8:	bl	6fec <*ABS*+0x10@plt+0x21c>
    9bbc:	ldr	w0, [x20, x19]
    9bc0:	ldr	x30, [sp, #16]
    9bc4:	sub	w0, w0, #0x1
    9bc8:	str	w0, [x20, x19]
    9bcc:	ldp	x19, x20, [sp], #32
    9bd0:	ret
    9bd4:	stp	x19, x20, [sp, #-192]!
    9bd8:	add	x20, sp, #0x58
    9bdc:	stp	x21, x22, [sp, #16]
    9be0:	mov	x0, x20
    9be4:	stp	x23, x24, [sp, #32]
    9be8:	adrp	x22, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9bec:	add	x23, x22, #0xe40
    9bf0:	stp	x25, x26, [sp, #48]
    9bf4:	add	x25, sp, #0x78
    9bf8:	add	x24, x23, #0x40
    9bfc:	stp	x27, x30, [sp, #64]
    9c00:	add	x26, x25, #0x1c
    9c04:	strb	wzr, [sp, #112]
    9c08:	bl	166b4 <__sanitizer_set_report_fd@@Base+0x3c00>
    9c0c:	ldr	x19, [sp, #88]
    9c10:	mov	x0, #0x48                  	// #72
    9c14:	ldr	x21, [sp, #104]
    9c18:	madd	x21, x21, x0, x19
    9c1c:	cmp	x21, x19
    9c20:	b.eq	9ce4 <__lsan_do_recoverable_leak_check@@Base+0x1388>  // b.none
    9c24:	ldr	x27, [x19, #8]
    9c28:	mov	x0, #0x7                   	// #7
    9c2c:	bl	6c10 <getauxval@plt>
    9c30:	cmp	x27, x0
    9c34:	b.ne	9c8c <__lsan_do_recoverable_leak_check@@Base+0x1330>  // b.any
    9c38:	ldr	x0, [x23]
    9c3c:	cbnz	x0, 9c94 <__lsan_do_recoverable_leak_check@@Base+0x1338>
    9c40:	mov	x1, x19
    9c44:	mov	x2, #0x48                  	// #72
    9c48:	mov	x0, x24
    9c4c:	str	x24, [x23]
    9c50:	bl	6710 <memcpy@plt>
    9c54:	stp	xzr, xzr, [sp, #120]
    9c58:	mov	x2, #0x10                  	// #16
    9c5c:	mov	w1, #0x0                   	// #0
    9c60:	mov	x0, x26
    9c64:	str	xzr, [sp, #136]
    9c68:	str	wzr, [sp, #144]
    9c6c:	strb	wzr, [sp, #164]
    9c70:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    9c74:	mov	x1, x25
    9c78:	mov	x0, x19
    9c7c:	mov	x2, #0x48                  	// #72
    9c80:	stp	xzr, xzr, [sp, #168]
    9c84:	str	xzr, [sp, #184]
    9c88:	bl	6710 <memcpy@plt>
    9c8c:	add	x19, x19, #0x48
    9c90:	b	9c1c <__lsan_do_recoverable_leak_check@@Base+0x12c0>
    9c94:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9c98:	ldr	x0, [x0, #3680]
    9c9c:	ldr	w0, [x0]
    9ca0:	cbz	w0, 9cb8 <__lsan_do_recoverable_leak_check@@Base+0x135c>
    9ca4:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9ca8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9cac:	add	x1, x1, #0x4ac
    9cb0:	add	x0, x0, #0x3a9
    9cb4:	bl	18b74 <OnPrint@@Base+0x30c>
    9cb8:	ldr	x0, [x22, #3648]
    9cbc:	bl	10198 <__sancov_default_options@@Base+0x1d14>
    9cc0:	str	xzr, [x22, #3648]
    9cc4:	mov	x0, x20
    9cc8:	bl	9d80 <__lsan_do_recoverable_leak_check@@Base+0x1424>
    9ccc:	ldp	x21, x22, [sp, #16]
    9cd0:	ldp	x23, x24, [sp, #32]
    9cd4:	ldp	x25, x26, [sp, #48]
    9cd8:	ldp	x27, x30, [sp, #64]
    9cdc:	ldp	x19, x20, [sp], #192
    9ce0:	ret
    9ce4:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9ce8:	ldr	x0, [x0, #3648]
    9cec:	cbnz	x0, 9cc4 <__lsan_do_recoverable_leak_check@@Base+0x1368>
    9cf0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9cf4:	ldr	x0, [x0, #3680]
    9cf8:	ldr	w0, [x0]
    9cfc:	cbz	w0, 9cc4 <__lsan_do_recoverable_leak_check@@Base+0x1368>
    9d00:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9d04:	add	x0, x0, #0x42c
    9d08:	bl	18b74 <OnPrint@@Base+0x30c>
    9d0c:	b	9cc4 <__lsan_do_recoverable_leak_check@@Base+0x1368>
    9d10:	mov	x1, x0
    9d14:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9d18:	ldr	x0, [x0, #3928]
    9d1c:	ldrb	w0, [x0, #12]
    9d20:	cbz	w0, 9d30 <__lsan_do_recoverable_leak_check@@Base+0x13d4>
    9d24:	adrp	x0, 9000 <__lsan_do_recoverable_leak_check@@Base+0x6a4>
    9d28:	add	x0, x0, #0xab4
    9d2c:	b	69c0 <dl_iterate_phdr@plt>
    9d30:	ret
    9d34:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9d38:	ldr	x0, [x0, #3648]
    9d3c:	ret
    9d40:	ret
    9d44:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9d48:	ldr	x0, [x0, #4040]
    9d4c:	ldr	w0, [x0, #216]
    9d50:	cbz	w0, 9d5c <__lsan_do_recoverable_leak_check@@Base+0x1400>
    9d54:	str	x30, [sp, #-16]!
    9d58:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    9d5c:	ret
    9d60:	str	x30, [sp, #-32]!
    9d64:	stp	x0, x1, [sp, #16]
    9d68:	add	x1, sp, #0x10
    9d6c:	adrp	x0, 9000 <__lsan_do_recoverable_leak_check@@Base+0x6a4>
    9d70:	add	x0, x0, #0xb4c
    9d74:	bl	69c0 <dl_iterate_phdr@plt>
    9d78:	ldr	x30, [sp], #32
    9d7c:	ret
    9d80:	stp	x19, x20, [sp, #-32]!
    9d84:	mov	x20, x0
    9d88:	mov	x0, #0x48                  	// #72
    9d8c:	stp	x21, x30, [sp, #16]
    9d90:	ldr	x19, [x20]
    9d94:	ldr	x21, [x20, #16]
    9d98:	madd	x21, x21, x0, x19
    9d9c:	cmp	x19, x21
    9da0:	b.eq	9db4 <__lsan_do_recoverable_leak_check@@Base+0x1458>  // b.none
    9da4:	mov	x0, x19
    9da8:	add	x19, x19, #0x48
    9dac:	bl	10198 <__sancov_default_options@@Base+0x1d14>
    9db0:	b	9d9c <__lsan_do_recoverable_leak_check@@Base+0x1440>
    9db4:	ldp	x21, x30, [sp, #16]
    9db8:	str	xzr, [x20, #16]
    9dbc:	ldp	x19, x20, [sp], #32
    9dc0:	ret
    9dc4:	stp	x19, x20, [sp, #-32]!
    9dc8:	mov	x19, x1
    9dcc:	mov	x20, x2
    9dd0:	str	x30, [sp, #16]
    9dd4:	bl	a12c <__sanitizer_print_stack_trace@@Base+0x8c>
    9dd8:	mov	x1, x20
    9ddc:	mov	w2, w0
    9de0:	mov	x0, x19
    9de4:	mov	x4, #0x0                   	// #0
    9de8:	ldr	x30, [sp, #16]
    9dec:	adrp	x3, 9000 <__lsan_do_recoverable_leak_check@@Base+0x6a4>
    9df0:	ldp	x19, x20, [sp], #32
    9df4:	add	x3, x3, #0xdfc
    9df8:	b	1b008 <__sanitizer_symbolize_global@@Base+0x8c4>
    9dfc:	stp	x19, x20, [sp, #-48]!
    9e00:	mov	x19, x2
    9e04:	stp	x21, x22, [sp, #16]
    9e08:	stp	x23, x30, [sp, #32]
    9e0c:	ldr	x23, [x0, #8]
    9e10:	ldr	x21, [x0, #24]
    9e14:	ldr	x22, [x0, #40]
    9e18:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9e1c:	ldr	x0, [x0, #4040]
    9e20:	ldrb	w20, [x0, #33]
    9e24:	cbnz	w20, 9e58 <__lsan_do_recoverable_leak_check@@Base+0x14fc>
    9e28:	mov	x6, #0x0                   	// #0
    9e2c:	mov	x5, #0x0                   	// #0
    9e30:	mov	w7, w20
    9e34:	mov	x4, x23
    9e38:	mov	x3, x22
    9e3c:	mov	x2, x21
    9e40:	mov	x0, x19
    9e44:	mov	w1, #0x100                 	// #256
    9e48:	ldp	x21, x22, [sp, #16]
    9e4c:	ldp	x23, x30, [sp, #32]
    9e50:	ldp	x19, x20, [sp], #48
    9e54:	b	1a34c <OnPrint@@Base+0x1ae4>
    9e58:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    9e5c:	cbz	x0, 9e28 <__lsan_do_recoverable_leak_check@@Base+0x14cc>
    9e60:	ldp	x6, x5, [x0, #144]
    9e64:	b	9e30 <__lsan_do_recoverable_leak_check@@Base+0x14d4>
    9e68:	stp	x19, x20, [sp, #-288]!
    9e6c:	adrp	x20, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9e70:	stp	x21, x22, [sp, #16]
    9e74:	add	x19, sp, #0x30
    9e78:	adrp	x22, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9e7c:	ldr	x21, [x20, #4040]
    9e80:	str	x30, [sp, #32]
    9e84:	mov	x0, x21
    9e88:	bl	12fa4 <__sanitizer_set_report_fd@@Base+0x4f0>
    9e8c:	mov	x1, x21
    9e90:	mov	x0, x19
    9e94:	bl	130b4 <__sanitizer_set_report_fd@@Base+0x600>
    9e98:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9e9c:	add	x0, x0, #0x4af
    9ea0:	bl	15190 <__sanitizer_set_report_fd@@Base+0x26dc>
    9ea4:	str	x0, [sp, #56]
    9ea8:	mov	w0, #0x1e                  	// #30
    9eac:	str	w0, [sp, #84]
    9eb0:	mov	w0, #0x1                   	// #1
    9eb4:	strb	w0, [sp, #105]
    9eb8:	strb	w0, [sp, #169]
    9ebc:	mov	w0, #0x17                  	// #23
    9ec0:	mov	x1, x19
    9ec4:	str	w0, [sp, #264]
    9ec8:	mov	x0, x21
    9ecc:	bl	130b4 <__sanitizer_set_report_fd@@Base+0x600>
    9ed0:	ldr	x22, [x22, #3928]
    9ed4:	mov	x0, x22
    9ed8:	bl	7014 <*ABS*+0x10@plt+0x244>
    9edc:	mov	x0, x19
    9ee0:	bl	14258 <__sanitizer_set_report_fd@@Base+0x17a4>
    9ee4:	mov	x1, x22
    9ee8:	mov	x0, x19
    9eec:	bl	703c <*ABS*+0x10@plt+0x26c>
    9ef0:	mov	x1, x21
    9ef4:	mov	x0, x19
    9ef8:	bl	13258 <__sanitizer_set_report_fd@@Base+0x7a4>
    9efc:	bl	72d4 <*ABS*+0x10@plt+0x504>
    9f00:	mov	x1, x0
    9f04:	mov	x0, x19
    9f08:	bl	14120 <__sanitizer_set_report_fd@@Base+0x166c>
    9f0c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9f10:	add	x0, x0, #0x4c4
    9f14:	bl	15190 <__sanitizer_set_report_fd@@Base+0x26dc>
    9f18:	mov	x1, x0
    9f1c:	mov	x0, x19
    9f20:	bl	14120 <__sanitizer_set_report_fd@@Base+0x166c>
    9f24:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9f28:	ldr	w1, [x21, #52]
    9f2c:	ldr	x0, [x0, #3680]
    9f30:	str	w1, [x0]
    9f34:	ldr	w0, [x0]
    9f38:	cbz	w0, 9f40 <__lsan_do_recoverable_leak_check@@Base+0x15e4>
    9f3c:	bl	13cf8 <__sanitizer_set_report_fd@@Base+0x1244>
    9f40:	ldr	x0, [x20, #4040]
    9f44:	ldrb	w0, [x0, #122]
    9f48:	cbz	w0, 9f54 <__lsan_do_recoverable_leak_check@@Base+0x15f8>
    9f4c:	mov	x0, x19
    9f50:	bl	13dac <__sanitizer_set_report_fd@@Base+0x12f8>
    9f54:	ldr	x20, [x20, #4040]
    9f58:	ldr	x0, [x20, #40]
    9f5c:	bl	6d60 <__sanitizer_set_report_path@plt>
    9f60:	ldp	x21, x22, [sp, #16]
    9f64:	ldr	x30, [sp, #32]
    9f68:	ldp	x19, x20, [sp], #288
    9f6c:	ret
    9f70:	mov	w0, #0x0                   	// #0
    9f74:	ret

0000000000009f78 <__lsan_init@@Base>:
    9f78:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    9f7c:	stp	x19, x20, [sp, #-32]!
    9f80:	ldrb	w2, [x0, #3784]
    9f84:	str	x30, [sp, #16]
    9f88:	cbz	w2, 9fac <__lsan_init@@Base+0x34>
    9f8c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9f90:	add	x2, x2, #0x4d1
    9f94:	mov	x4, #0x0                   	// #0
    9f98:	mov	x3, #0x0                   	// #0
    9f9c:	mov	w1, #0x53                  	// #83
    9fa0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9fa4:	add	x0, x0, #0x4f2
    9fa8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    9fac:	add	x1, x0, #0xec8
    9fb0:	ldrb	w1, [x1, #1]
    9fb4:	cbnz	w1, a094 <__lsan_init@@Base+0x11c>
    9fb8:	mov	w19, #0x1                   	// #1
    9fbc:	mov	x20, x0
    9fc0:	strb	w19, [x0, #3784]
    9fc4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    9fc8:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    9fcc:	add	x1, x1, #0x518
    9fd0:	ldr	x0, [x0, #4008]
    9fd4:	str	x1, [x0]
    9fd8:	bl	10568 <__sancov_default_options@@Base+0x20e4>
    9fdc:	bl	9e68 <__lsan_do_recoverable_leak_check@@Base+0x150c>
    9fe0:	bl	8550 <__lsan_register_root_region@@Base+0x14c>
    9fe4:	bl	a1dc <__sanitizer_print_stack_trace@@Base+0x13c>
    9fe8:	bl	a19c <__sanitizer_print_stack_trace@@Base+0xfc>
    9fec:	bl	16324 <__sanitizer_set_report_fd@@Base+0x3870>
    9ff0:	bl	de24 <_ZdaPvmSt11align_val_t@@Base+0x68>
    9ff4:	bl	e15c <_ZdaPvmSt11align_val_t@@Base+0x3a0>
    9ff8:	adrp	x0, 9000 <__lsan_do_recoverable_leak_check@@Base+0x6a4>
    9ffc:	add	x0, x0, #0xdc4
    a000:	bl	178b0 <__sanitizer_set_report_fd@@Base+0x4dfc>
    a004:	mov	w2, w19
    a008:	mov	x1, #0x0                   	// #0
    a00c:	mov	w0, #0x0                   	// #0
    a010:	bl	e1fc <_ZdaPvmSt11align_val_t@@Base+0x440>
    a014:	mov	w3, w0
    a018:	cbz	w0, a030 <__lsan_init@@Base+0xb8>
    a01c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a020:	mov	x4, #0x0                   	// #0
    a024:	add	x2, x2, #0x526
    a028:	mov	w1, #0x63                  	// #99
    a02c:	b	9fa0 <__lsan_init@@Base+0x28>
    a030:	bl	15118 <__sanitizer_set_report_fd@@Base+0x2664>
    a034:	mov	x1, x0
    a038:	mov	w2, #0x0                   	// #0
    a03c:	mov	w0, #0x0                   	// #0
    a040:	bl	e210 <_ZdaPvmSt11align_val_t@@Base+0x454>
    a044:	mov	w0, #0x0                   	// #0
    a048:	bl	a150 <__sanitizer_print_stack_trace@@Base+0xb0>
    a04c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a050:	mov	x19, x0
    a054:	ldr	x1, [x0, #4040]
    a058:	ldrb	w2, [x1, #57]
    a05c:	cbz	w2, a074 <__lsan_init@@Base+0xfc>
    a060:	ldrb	w0, [x1, #58]
    a064:	cbz	w0, a074 <__lsan_init@@Base+0xfc>
    a068:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a06c:	ldr	x0, [x0, #3552]
    a070:	bl	177a8 <__sanitizer_set_report_fd@@Base+0x4cf4>
    a074:	ldr	x0, [x19, #4040]
    a078:	ldr	x1, [x0, #168]
    a07c:	ldrb	w0, [x0, #161]
    a080:	bl	10c08 <__sanitizer_sandbox_on_notify@@Base+0x1b8>
    a084:	strb	wzr, [x20, #3784]
    a088:	add	x0, x20, #0xec8
    a08c:	mov	w1, #0x1                   	// #1
    a090:	strb	w1, [x0, #1]
    a094:	ldr	x30, [sp, #16]
    a098:	ldp	x19, x20, [sp], #32
    a09c:	ret

000000000000a0a0 <__sanitizer_print_stack_trace@@Base>:
    a0a0:	sub	sp, sp, #0x850
    a0a4:	stp	x29, x30, [sp]
    a0a8:	mov	x29, sp
    a0ac:	stp	x19, x20, [sp, #16]
    a0b0:	add	x19, x29, #0x38
    a0b4:	add	x0, x19, #0x10
    a0b8:	str	x21, [sp, #32]
    a0bc:	stp	x0, xzr, [x29, #56]
    a0c0:	str	xzr, [x29, #2120]
    a0c4:	bl	1a114 <OnPrint@@Base+0x18ac>
    a0c8:	mov	x20, x0
    a0cc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a0d0:	ldr	x0, [x0, #4040]
    a0d4:	ldrb	w21, [x0, #33]
    a0d8:	cbnz	w21, a11c <__sanitizer_print_stack_trace@@Base+0x7c>
    a0dc:	mov	x6, #0x0                   	// #0
    a0e0:	mov	x5, #0x0                   	// #0
    a0e4:	mov	w7, w21
    a0e8:	mov	x3, x29
    a0ec:	mov	x2, x20
    a0f0:	mov	x4, #0x0                   	// #0
    a0f4:	mov	w1, #0x100                 	// #256
    a0f8:	mov	x0, x19
    a0fc:	bl	1a34c <OnPrint@@Base+0x1ae4>
    a100:	mov	x0, x19
    a104:	bl	1a434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
    a108:	ldp	x29, x30, [sp]
    a10c:	ldp	x19, x20, [sp, #16]
    a110:	ldr	x21, [sp, #32]
    a114:	add	sp, sp, #0x850
    a118:	ret
    a11c:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    a120:	cbz	x0, a0dc <__sanitizer_print_stack_trace@@Base+0x3c>
    a124:	ldp	x6, x5, [x0, #144]
    a128:	b	a0e4 <__sanitizer_print_stack_trace@@Base+0x44>
    a12c:	str	x30, [sp, #-16]!
    a130:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
    a134:	ldr	x1, [x0, #920]
    a138:	add	x0, x0, #0x398
    a13c:	blr	x1
    a140:	mrs	x1, tpidr_el0
    a144:	ldr	x30, [sp], #16
    a148:	ldr	w0, [x1, x0]
    a14c:	ret
    a150:	mov	w2, w0
    a154:	str	x30, [sp, #-16]!
    a158:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
    a15c:	ldr	x1, [x0, #920]
    a160:	add	x0, x0, #0x398
    a164:	blr	x1
    a168:	mrs	x1, tpidr_el0
    a16c:	ldr	x30, [sp], #16
    a170:	str	w2, [x1, x0]
    a174:	ret
    a178:	str	x30, [sp, #-16]!
    a17c:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
    a180:	ldr	x1, [x0, #904]
    a184:	add	x0, x0, #0x388
    a188:	blr	x1
    a18c:	mrs	x1, tpidr_el0
    a190:	add	x0, x1, x0
    a194:	ldr	x30, [sp], #16
    a198:	ret
    a19c:	ret
    a1a0:	stp	x19, x30, [sp, #-16]!
    a1a4:	mov	x19, x0
    a1a8:	bl	91b4 <__lsan_do_recoverable_leak_check@@Base+0x858>
    a1ac:	sub	w2, w0, #0x2
    a1b0:	mov	w1, #0x1                   	// #1
    a1b4:	lsl	w1, w1, w2
    a1b8:	sub	w1, w1, #0x1
    a1bc:	tst	x1, x19
    a1c0:	lsr	x19, x19, x2
    a1c4:	and	x19, x19, #0x3
    a1c8:	cinc	x19, x19, ne  // ne = any
    a1cc:	add	x0, x19, x0, lsl #2
    a1d0:	sub	x0, x0, #0x10
    a1d4:	ldp	x19, x30, [sp], #16
    a1d8:	ret
    a1dc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a1e0:	stp	x19, x30, [sp, #-16]!
    a1e4:	adrp	x19, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a1e8:	ldr	x0, [x0, #4040]
    a1ec:	add	x19, x19, #0xf00
    a1f0:	ldrb	w0, [x0, #59]
    a1f4:	bl	e730 <__sancov_default_options@@Base+0x2ac>
    a1f8:	mov	x0, x19
    a1fc:	add	x19, x19, #0x80, lsl #12
    a200:	mov	x2, #0x80000               	// #524288
    a204:	mov	w1, #0x0                   	// #0
    a208:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    a20c:	strb	wzr, [x19]
    a210:	mov	x2, #0xd80                 	// #3456
    a214:	mov	w1, #0x0                   	// #0
    a218:	adrp	x0, d3000 <__asan_cplus_demangle_operators@@Base+0x82be0>
    a21c:	add	x0, x0, #0xf40
    a220:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    a224:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    a228:	str	x0, [x19, #3520]
    a22c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a230:	mov	x3, #0x0                   	// #0
    a234:	mov	x1, #0x800000              	// #8388608
    a238:	ldr	x0, [x0, #3840]
    a23c:	ldr	x2, [x0]
    a240:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    a244:	add	x0, x0, #0xcd0
    a248:	bl	17d24 <__sanitizer_set_report_fd@@Base+0x5270>
    a24c:	cbnz	x0, a270 <__sanitizer_print_stack_trace@@Base+0x1d0>
    a250:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a254:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a258:	add	x2, x2, #0x537
    a25c:	add	x0, x0, #0x544
    a260:	mov	x4, #0x0                   	// #0
    a264:	mov	x3, #0x0                   	// #0
    a268:	mov	w1, #0x24                  	// #36
    a26c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    a270:	str	x0, [x19, #3528]
    a274:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    a278:	add	x0, x0, #0xf30
    a27c:	str	x0, [x19, #4144]
    a280:	str	x0, [x19, #4152]
    a284:	ldp	x19, x30, [sp], #16
    a288:	ret
    a28c:	stp	x19, x20, [sp, #-32]!
    a290:	mov	x20, x0
    a294:	mov	x19, x1
    a298:	str	x30, [sp, #16]
    a29c:	bl	a178 <__sanitizer_print_stack_trace@@Base+0xd8>
    a2a0:	ldr	x30, [sp, #16]
    a2a4:	str	x0, [x20]
    a2a8:	mov	x1, #0xd820                	// #55328
    a2ac:	add	x0, x0, x1
    a2b0:	str	x0, [x19]
    a2b4:	ldp	x19, x20, [sp], #32
    a2b8:	ret
    a2bc:	stp	x19, x20, [sp, #-32]!
    a2c0:	adrp	x19, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a2c4:	add	x19, x19, #0xf00
    a2c8:	add	x19, x19, #0x80, lsl #12
    a2cc:	mov	x20, #0x0                   	// #0
    a2d0:	add	x19, x19, #0x40
    a2d4:	str	x30, [sp, #16]
    a2d8:	add	x0, x19, x20
    a2dc:	add	x20, x20, #0x40
    a2e0:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    a2e4:	cmp	x20, #0xd80
    a2e8:	b.ne	a2d8 <__sanitizer_print_stack_trace@@Base+0x238>  // b.any
    a2ec:	ldr	x30, [sp, #16]
    a2f0:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    a2f4:	ldp	x19, x20, [sp], #32
    a2f8:	add	x0, x0, #0xf28
    a2fc:	b	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    a300:	dmb	ish
    a304:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a308:	add	x0, x0, #0xf00
    a30c:	add	x1, x0, #0x81, lsl #12
    a310:	strb	wzr, [x1, #40]
    a314:	mov	x1, #0x35                  	// #53
    a318:	mov	x3, #0x2001                	// #8193
    a31c:	dmb	ish
    a320:	add	x2, x1, x3
    a324:	lsl	x2, x2, #6
    a328:	strb	wzr, [x0, x2]
    a32c:	sub	x1, x1, #0x1
    a330:	cmn	x1, #0x1
    a334:	b.ne	a31c <__sanitizer_print_stack_trace@@Base+0x27c>  // b.any
    a338:	ret
    a33c:	adrp	x2, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a340:	add	x2, x2, #0xf00
    a344:	str	x2, [x0]
    a348:	add	x2, x2, #0x81, lsl #12
    a34c:	add	x2, x2, #0x80
    a350:	str	x2, [x1]
    a354:	ret
    a358:	ret
    a35c:	ldr	x0, [x0]
    a360:	ldrb	w0, [x0]
    a364:	cmp	w0, #0x0
    a368:	cset	w0, ne  // ne = any
    a36c:	ret
    a370:	ldr	x0, [x0]
    a374:	ldrb	w0, [x0, #1]
    a378:	and	w0, w0, #0x3
    a37c:	ret
    a380:	ldr	x0, [x0]
    a384:	ldrb	w2, [x0, #1]
    a388:	bfxil	w2, w1, #0, #2
    a38c:	strb	w2, [x0, #1]
    a390:	ret
    a394:	ldr	x0, [x0]
    a398:	ldr	x0, [x0]
    a39c:	lsr	x0, x0, #10
    a3a0:	ret
    a3a4:	ldr	x0, [x0]
    a3a8:	ldr	w0, [x0, #8]
    a3ac:	ret

000000000000a3b0 <__sanitizer_get_free_bytes@@Base>:
    a3b0:	mov	x0, #0x0                   	// #0
    a3b4:	ret

000000000000a3b8 <__sanitizer_get_unmapped_bytes@@Base>:
    a3b8:	mov	x0, #0x0                   	// #0
    a3bc:	ret

000000000000a3c0 <__sanitizer_get_estimated_allocated_size@@Base>:
    a3c0:	ret

000000000000a3c4 <__sanitizer_get_current_allocated_bytes@@Base>:
    a3c4:	str	x30, [sp, #-32]!
    a3c8:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    a3cc:	add	x0, x0, #0xf30
    a3d0:	add	x1, sp, #0x10
    a3d4:	bl	b120 <__sanitizer_get_allocated_size@@Base+0xc20>
    a3d8:	ldr	x0, [sp, #16]
    a3dc:	ldr	x30, [sp], #32
    a3e0:	ret

000000000000a3e4 <__sanitizer_get_heap_size@@Base>:
    a3e4:	str	x30, [sp, #-32]!
    a3e8:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    a3ec:	add	x0, x0, #0xf30
    a3f0:	add	x1, sp, #0x10
    a3f4:	bl	b120 <__sanitizer_get_allocated_size@@Base+0xc20>
    a3f8:	ldr	x0, [sp, #24]
    a3fc:	ldr	x30, [sp], #32
    a400:	ret
    a404:	stp	x19, x20, [sp, #-64]!
    a408:	mov	x19, x0
    a40c:	mov	x20, #0x1                   	// #1
    a410:	mov	x0, #0x200                 	// #512
    a414:	add	x19, x19, #0x408
    a418:	stp	x21, x22, [sp, #16]
    a41c:	mov	x22, #0x3e                  	// #62
    a420:	stp	x23, x24, [sp, #32]
    a424:	mov	w23, #0x4000                	// #16384
    a428:	mov	x24, #0x40                  	// #64
    a42c:	stp	x25, x30, [sp, #48]
    a430:	bl	a1a0 <__sanitizer_print_stack_trace@@Base+0x100>
    a434:	mov	x25, x20
    a438:	mov	x21, x0
    a43c:	mov	x0, x20
    a440:	bl	b250 <__sanitizer_get_allocated_size@@Base+0xd50>
    a444:	cbz	x0, a4a0 <__sanitizer_get_heap_size@@Base+0xbc>
    a448:	udiv	w1, w23, w0
    a44c:	cmp	x1, #0x40
    a450:	csel	x1, x1, x24, ls  // ls = plast
    a454:	cmp	x1, #0x0
    a458:	csel	x1, x1, x25, ne  // ne = any
    a45c:	cmp	x1, #0x3e
    a460:	add	x20, x20, #0x1
    a464:	csel	x1, x1, x22, ls  // ls = plast
    a468:	lsl	x2, x1, #1
    a46c:	add	x1, x1, #0x2
    a470:	stp	x2, x0, [x19]
    a474:	cmp	x0, x1, lsl #3
    a478:	csel	x0, x21, xzr, cc  // cc = lo, ul, last
    a47c:	str	x0, [x19, #16]
    a480:	cmp	x20, #0x36
    a484:	add	x19, x19, #0x400
    a488:	b.ne	a43c <__sanitizer_get_heap_size@@Base+0x58>  // b.any
    a48c:	ldp	x21, x22, [sp, #16]
    a490:	ldp	x23, x24, [sp, #32]
    a494:	ldp	x25, x30, [sp, #48]
    a498:	ldp	x19, x20, [sp], #64
    a49c:	ret
    a4a0:	mov	x1, #0x0                   	// #0
    a4a4:	b	a45c <__sanitizer_get_heap_size@@Base+0x78>

000000000000a4a8 <__sanitizer_get_ownership@@Base>:
    a4a8:	str	x30, [sp, #-16]!
    a4ac:	mov	x1, x0
    a4b0:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a4b4:	add	x0, x0, #0xf00
    a4b8:	bl	b7a8 <__sanitizer_get_allocated_size@@Base+0x12a8>
    a4bc:	cmp	x0, #0x0
    a4c0:	cset	w0, ne  // ne = any
    a4c4:	ldr	x30, [sp], #16
    a4c8:	ret
    a4cc:	str	x30, [sp, #-16]!
    a4d0:	mov	x1, x0
    a4d4:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a4d8:	add	x0, x0, #0xf00
    a4dc:	bl	b7a8 <__sanitizer_get_allocated_size@@Base+0x12a8>
    a4e0:	cbz	x0, a4f4 <__sanitizer_get_ownership@@Base+0x4c>
    a4e4:	ldr	x0, [x0]
    a4e8:	lsr	x0, x0, #10
    a4ec:	ldr	x30, [sp], #16
    a4f0:	ret
    a4f4:	mov	x0, #0x0                   	// #0
    a4f8:	b	a4ec <__sanitizer_get_ownership@@Base+0x44>
    a4fc:	b	a4cc <__sanitizer_get_ownership@@Base+0x24>

000000000000a500 <__sanitizer_get_allocated_size@@Base>:
    a500:	b	a4cc <__sanitizer_get_ownership@@Base+0x24>
    a504:	str	x30, [sp, #-16]!
    a508:	mov	x1, x0
    a50c:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a510:	add	x0, x0, #0xf00
    a514:	bl	b7a8 <__sanitizer_get_allocated_size@@Base+0x12a8>
    a518:	cbnz	x0, a53c <__sanitizer_get_allocated_size@@Base+0x3c>
    a51c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a520:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a524:	add	x2, x2, #0x58e
    a528:	add	x0, x0, #0x59b
    a52c:	mov	x4, #0x0                   	// #0
    a530:	mov	x3, #0x0                   	// #0
    a534:	mov	w1, #0x44                  	// #68
    a538:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    a53c:	strb	wzr, [x0]
    a540:	ldr	x30, [sp], #16
    a544:	ret
    a548:	stp	x19, x30, [sp, #-16]!
    a54c:	mov	x19, x0
    a550:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a554:	add	x0, x0, #0xf00
    a558:	bl	b7a8 <__sanitizer_get_allocated_size@@Base+0x12a8>
    a55c:	str	x0, [x19]
    a560:	cbnz	x0, a584 <__sanitizer_get_allocated_size@@Base+0x84>
    a564:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a568:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a56c:	add	x2, x2, #0x5cb
    a570:	add	x0, x0, #0x59b
    a574:	mov	x4, #0x0                   	// #0
    a578:	mov	x3, #0x0                   	// #0
    a57c:	mov	w1, #0xff                  	// #255
    a580:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    a584:	ldp	x19, x30, [sp], #16
    a588:	ret
    a58c:	stp	x19, x20, [sp, #-32]!
    a590:	mov	x20, x2
    a594:	stp	x21, x30, [sp, #16]
    a598:	mov	x21, x0
    a59c:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a5a0:	add	x0, x0, #0xf00
    a5a4:	bl	b7a8 <__sanitizer_get_allocated_size@@Base+0x12a8>
    a5a8:	cbnz	x0, a5cc <__sanitizer_get_allocated_size@@Base+0xcc>
    a5ac:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a5b0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a5b4:	add	x2, x2, #0x58e
    a5b8:	add	x0, x0, #0x59b
    a5bc:	mov	x4, #0x0                   	// #0
    a5c0:	mov	x3, #0x0                   	// #0
    a5c4:	mov	w1, #0x3a                  	// #58
    a5c8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    a5cc:	mov	x19, x0
    a5d0:	bl	9b64 <__lsan_do_recoverable_leak_check@@Base+0x1208>
    a5d4:	neg	w0, w0
    a5d8:	ldrb	w1, [x19, #1]
    a5dc:	bfxil	w1, w0, #0, #2
    a5e0:	strb	w1, [x19, #1]
    a5e4:	ldp	x0, x1, [x21]
    a5e8:	bl	19930 <OnPrint@@Base+0x10c8>
    a5ec:	str	w0, [x19, #8]
    a5f0:	ldr	x0, [x19]
    a5f4:	bfi	x0, x20, #10, #54
    a5f8:	str	x0, [x19]
    a5fc:	mov	w0, #0x1                   	// #1
    a600:	strb	w0, [x19]
    a604:	ldp	x21, x30, [sp, #16]
    a608:	ldp	x19, x20, [sp], #32
    a60c:	ret
    a610:	stp	x19, x20, [sp, #-48]!
    a614:	mov	x1, x0
    a618:	mov	x20, x0
    a61c:	stp	x21, x22, [sp, #16]
    a620:	adrp	x21, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a624:	add	x22, x21, #0xf00
    a628:	mov	x0, x22
    a62c:	str	x30, [sp, #32]
    a630:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    a634:	tst	w0, #0xff
    a638:	mov	x1, x20
    a63c:	b.eq	a66c <__sanitizer_get_allocated_size@@Base+0x16c>  // b.none
    a640:	mov	x0, x22
    a644:	bl	b8ac <__sanitizer_get_allocated_size@@Base+0x13ac>
    a648:	cmp	x0, #0x0
    a64c:	mov	x19, x0
    a650:	ccmp	x20, x0, #0x0, ne  // ne = any
    a654:	b.cs	a67c <__sanitizer_get_allocated_size@@Base+0x17c>  // b.hs, b.nlast
    a658:	mov	w0, #0x2                   	// #2
    a65c:	ldp	x21, x22, [sp, #16]
    a660:	ldr	x30, [sp, #32]
    a664:	ldp	x19, x20, [sp], #48
    a668:	ret
    a66c:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    a670:	add	x0, x0, #0xcc0
    a674:	bl	b5b0 <__sanitizer_get_allocated_size@@Base+0x10b0>
    a678:	b	a648 <__sanitizer_get_allocated_size@@Base+0x148>
    a67c:	mov	x1, x0
    a680:	add	x0, x21, #0xf00
    a684:	bl	b7a8 <__sanitizer_get_allocated_size@@Base+0x12a8>
    a688:	cbnz	x0, a6ac <__sanitizer_get_allocated_size@@Base+0x1ac>
    a68c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a690:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a694:	add	x2, x2, #0x58e
    a698:	add	x0, x0, #0x59b
    a69c:	mov	x4, #0x0                   	// #0
    a6a0:	mov	x3, #0x0                   	// #0
    a6a4:	mov	w1, #0x11e                 	// #286
    a6a8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    a6ac:	ldrb	w1, [x0]
    a6b0:	cbz	w1, a658 <__sanitizer_get_allocated_size@@Base+0x158>
    a6b4:	ldr	x1, [x0]
    a6b8:	add	x1, x19, x1, lsr #10
    a6bc:	cmp	x20, x1
    a6c0:	b.cs	a658 <__sanitizer_get_allocated_size@@Base+0x158>  // b.hs, b.nlast
    a6c4:	ldrb	w1, [x0, #1]
    a6c8:	and	w2, w1, #0x3
    a6cc:	cmp	w2, #0x3
    a6d0:	b.eq	a6e4 <__sanitizer_get_allocated_size@@Base+0x1e4>  // b.none
    a6d4:	orr	w1, w1, #0x3
    a6d8:	strb	w1, [x0, #1]
    a6dc:	mov	w0, #0x0                   	// #0
    a6e0:	b	a65c <__sanitizer_get_allocated_size@@Base+0x15c>
    a6e4:	mov	w0, #0x1                   	// #1
    a6e8:	b	a65c <__sanitizer_get_allocated_size@@Base+0x15c>
    a6ec:	stp	x19, x30, [sp, #-16]!
    a6f0:	mov	x19, x0
    a6f4:	mov	w2, #0x0                   	// #0
    a6f8:	ldr	x0, [x0, #8]
    a6fc:	ldr	x1, [x19, #56]
    a700:	bl	b918 <__sanitizer_get_allocated_size@@Base+0x1418>
    a704:	ldr	x2, [x19, #56]
    a708:	mov	x0, #0x0                   	// #0
    a70c:	cmp	x2, x0
    a710:	b.eq	a728 <__sanitizer_get_allocated_size@@Base+0x228>  // b.none
    a714:	ldr	x1, [x19, #8]
    a718:	ldr	x1, [x1, x0, lsl #3]
    a71c:	str	x0, [x1, #24]
    a720:	add	x0, x0, #0x1
    a724:	b	a70c <__sanitizer_get_allocated_size@@Base+0x20c>
    a728:	mov	w0, #0x1                   	// #1
    a72c:	strb	w0, [x19, #64]
    a730:	ldp	x19, x30, [sp], #16
    a734:	ret
    a738:	stp	x19, x20, [sp, #-48]!
    a73c:	mov	x1, x0
    a740:	mov	x19, x0
    a744:	stp	x21, x22, [sp, #16]
    a748:	adrp	x21, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a74c:	add	x22, x21, #0xf00
    a750:	mov	x0, x22
    a754:	str	x30, [sp, #32]
    a758:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    a75c:	tst	w0, #0xff
    a760:	mov	x1, x19
    a764:	b.eq	a7b0 <__sanitizer_get_allocated_size@@Base+0x2b0>  // b.none
    a768:	mov	x0, x22
    a76c:	bl	b8ac <__sanitizer_get_allocated_size@@Base+0x13ac>
    a770:	mov	x1, x0
    a774:	mov	x20, x0
    a778:	cbz	x0, a7f8 <__sanitizer_get_allocated_size@@Base+0x2f8>
    a77c:	cmp	x19, x0
    a780:	b.cc	a7f8 <__sanitizer_get_allocated_size@@Base+0x2f8>  // b.lo, b.ul, b.last
    a784:	add	x0, x21, #0xf00
    a788:	bl	b7a8 <__sanitizer_get_allocated_size@@Base+0x12a8>
    a78c:	cbnz	x0, a7c0 <__sanitizer_get_allocated_size@@Base+0x2c0>
    a790:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a794:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a798:	add	x2, x2, #0x58e
    a79c:	add	x0, x0, #0x59b
    a7a0:	mov	x4, #0x0                   	// #0
    a7a4:	mov	x3, #0x0                   	// #0
    a7a8:	mov	w1, #0xef                  	// #239
    a7ac:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    a7b0:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    a7b4:	add	x0, x0, #0xcc0
    a7b8:	bl	ba10 <__sanitizer_get_allocated_size@@Base+0x1510>
    a7bc:	b	a770 <__sanitizer_get_allocated_size@@Base+0x270>
    a7c0:	ldrb	w1, [x0]
    a7c4:	cbz	w1, a7f8 <__sanitizer_get_allocated_size@@Base+0x2f8>
    a7c8:	ldr	x0, [x0]
    a7cc:	lsr	x1, x0, #10
    a7d0:	add	x0, x20, x0, lsr #10
    a7d4:	cmp	x0, x19
    a7d8:	b.hi	a7fc <__sanitizer_get_allocated_size@@Base+0x2fc>  // b.pmore
    a7dc:	cmp	x1, #0x8
    a7e0:	b.ne	a7f8 <__sanitizer_get_allocated_size@@Base+0x2f8>  // b.any
    a7e4:	add	x0, x20, #0x8
    a7e8:	cmp	x19, x0
    a7ec:	b.ne	a7f8 <__sanitizer_get_allocated_size@@Base+0x2f8>  // b.any
    a7f0:	ldr	x0, [x20]
    a7f4:	cbz	x0, a7fc <__sanitizer_get_allocated_size@@Base+0x2fc>
    a7f8:	mov	x20, #0x0                   	// #0
    a7fc:	mov	x0, x20
    a800:	ldp	x21, x22, [sp, #16]
    a804:	ldr	x30, [sp, #32]
    a808:	ldp	x19, x20, [sp], #48
    a80c:	ret
    a810:	stp	x19, x20, [sp, #-96]!
    a814:	adrp	x19, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a818:	mov	x20, #0x0                   	// #0
    a81c:	stp	x21, x22, [sp, #16]
    a820:	mov	x22, x0
    a824:	stp	x23, x24, [sp, #32]
    a828:	mov	x23, x1
    a82c:	add	x24, x19, #0xf00
    a830:	stp	x25, x26, [sp, #48]
    a834:	mov	x26, #0x100000              	// #1048576
    a838:	mov	x25, #0x10000000            	// #268435456
    a83c:	stp	x27, x28, [sp, #64]
    a840:	str	x30, [sp, #80]
    a844:	mov	x1, x20
    a848:	mov	x0, x24
    a84c:	bl	b6e0 <__sanitizer_get_allocated_size@@Base+0x11e0>
    a850:	tst	w0, #0xff
    a854:	b.eq	a8a0 <__sanitizer_get_allocated_size@@Base+0x3a0>  // b.none
    a858:	mov	x1, x20
    a85c:	mov	x0, x24
    a860:	bl	b6e0 <__sanitizer_get_allocated_size@@Base+0x11e0>
    a864:	and	x0, x0, #0xff
    a868:	lsl	x28, x20, #20
    a86c:	bl	b250 <__sanitizer_get_allocated_size@@Base+0xd50>
    a870:	add	x21, x0, #0x10
    a874:	mov	x27, x0
    a878:	udiv	x21, x26, x21
    a87c:	mul	x21, x21, x0
    a880:	add	x21, x21, x20, lsl #20
    a884:	cmp	x21, x28
    a888:	b.ls	a8a0 <__sanitizer_get_allocated_size@@Base+0x3a0>  // b.plast
    a88c:	mov	x0, x28
    a890:	mov	x1, x23
    a894:	add	x28, x28, x27
    a898:	blr	x22
    a89c:	b	a884 <__sanitizer_get_allocated_size@@Base+0x384>
    a8a0:	add	x20, x20, #0x1
    a8a4:	cmp	x20, x25
    a8a8:	b.ne	a844 <__sanitizer_get_allocated_size@@Base+0x344>  // b.any
    a8ac:	add	x0, x19, #0xf00
    a8b0:	add	x0, x0, #0x80, lsl #12
    a8b4:	ldrb	w0, [x0, #3584]
    a8b8:	cbnz	w0, a8c8 <__sanitizer_get_allocated_size@@Base+0x3c8>
    a8bc:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    a8c0:	add	x0, x0, #0xcc0
    a8c4:	bl	a6ec <__sanitizer_get_allocated_size@@Base+0x1ec>
    a8c8:	add	x19, x19, #0xf00
    a8cc:	adrp	x24, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    a8d0:	add	x19, x19, #0x80, lsl #12
    a8d4:	add	x24, x24, #0xcc0
    a8d8:	mov	x20, #0x0                   	// #0
    a8dc:	ldr	x0, [x19, #3576]
    a8e0:	cmp	x0, x20
    a8e4:	b.ls	a95c <__sanitizer_get_allocated_size@@Base+0x45c>  // b.plast
    a8e8:	ldr	x0, [x19, #3528]
    a8ec:	lsl	x21, x20, #3
    a8f0:	ldr	x25, [x0, x21]
    a8f4:	mov	x0, x24
    a8f8:	mov	x1, x25
    a8fc:	bl	b574 <__sanitizer_get_allocated_size@@Base+0x1074>
    a900:	mov	x1, x23
    a904:	blr	x22
    a908:	ldr	x0, [x19, #3528]
    a90c:	ldr	x3, [x0, x21]
    a910:	cmp	x3, x25
    a914:	b.eq	a934 <__sanitizer_get_allocated_size@@Base+0x434>  // b.none
    a918:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a91c:	mov	x4, x25
    a920:	add	x2, x2, #0x5e0
    a924:	mov	w1, #0x115                 	// #277
    a928:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a92c:	add	x0, x0, #0x544
    a930:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    a934:	ldr	x3, [x3, #24]
    a938:	cmp	x20, x3
    a93c:	b.eq	a954 <__sanitizer_get_allocated_size@@Base+0x454>  // b.none
    a940:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    a944:	mov	x4, x20
    a948:	add	x2, x2, #0x5f8
    a94c:	mov	w1, #0x116                 	// #278
    a950:	b	a928 <__sanitizer_get_allocated_size@@Base+0x428>
    a954:	add	x20, x20, #0x1
    a958:	b	a8dc <__sanitizer_get_allocated_size@@Base+0x3dc>
    a95c:	ldp	x21, x22, [sp, #16]
    a960:	ldp	x23, x24, [sp, #32]
    a964:	ldp	x25, x26, [sp, #48]
    a968:	ldp	x27, x28, [sp, #64]
    a96c:	ldr	x30, [sp, #80]
    a970:	ldp	x19, x20, [sp], #96
    a974:	ret
    a978:	stp	x19, x20, [sp, #-48]!
    a97c:	mov	x19, #0x1                   	// #1
    a980:	stp	x21, x22, [sp, #16]
    a984:	adrp	x22, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    a988:	add	x22, x22, #0xf00
    a98c:	str	x30, [sp, #32]
    a990:	bl	a178 <__sanitizer_print_stack_trace@@Base+0xd8>
    a994:	mov	x21, x0
    a998:	add	x20, x0, #0x400
    a99c:	ldr	x0, [x20]
    a9a0:	cbz	x0, a9bc <__sanitizer_get_allocated_size@@Base+0x4bc>
    a9a4:	mov	x3, x19
    a9a8:	mov	x2, x22
    a9ac:	mov	x1, x20
    a9b0:	mov	x0, x21
    a9b4:	bl	c198 <__sanitizer_get_allocated_size@@Base+0x1c98>
    a9b8:	b	a99c <__sanitizer_get_allocated_size@@Base+0x49c>
    a9bc:	add	x19, x19, #0x1
    a9c0:	add	x20, x20, #0x400
    a9c4:	cmp	x19, #0x36
    a9c8:	b.ne	a99c <__sanitizer_get_allocated_size@@Base+0x49c>  // b.any
    a9cc:	ldp	x21, x22, [sp, #16]
    a9d0:	ldr	x30, [sp, #32]
    a9d4:	ldp	x19, x20, [sp], #48
    a9d8:	ret
    a9dc:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    a9e0:	stp	x19, x30, [sp, #-16]!
    a9e4:	mov	x19, x0
    a9e8:	ldr	x1, [x1, #3856]
    a9ec:	cbz	x1, a9f4 <__sanitizer_get_allocated_size@@Base+0x4f4>
    a9f0:	bl	6c40 <__sanitizer_free_hook@plt>
    a9f4:	mov	x0, x19
    a9f8:	bl	1069c <__sancov_default_options@@Base+0x2218>
    a9fc:	cbz	x19, aa08 <__sanitizer_get_allocated_size@@Base+0x508>
    aa00:	mov	x0, x19
    aa04:	bl	a504 <__sanitizer_get_allocated_size@@Base+0x4>
    aa08:	bl	a178 <__sanitizer_print_stack_trace@@Base+0xd8>
    aa0c:	mov	x1, x0
    aa10:	mov	x2, x19
    aa14:	adrp	x0, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    aa18:	ldp	x19, x30, [sp], #16
    aa1c:	add	x0, x0, #0xf00
    aa20:	b	c338 <__sanitizer_get_allocated_size@@Base+0x1e38>
    aa24:	b	a9dc <__sanitizer_get_allocated_size@@Base+0x4dc>
    aa28:	stp	x19, x20, [sp, #-48]!
    aa2c:	mov	x20, x2
    aa30:	stp	x21, x22, [sp, #16]
    aa34:	mov	x21, x0
    aa38:	stp	x23, x30, [sp, #32]
    aa3c:	and	w23, w3, #0xff
    aa40:	cbz	x1, aa98 <__sanitizer_get_allocated_size@@Base+0x598>
    aa44:	mov	x22, #0x100000000           	// #4294967296
    aa48:	mov	x19, x1
    aa4c:	cmp	x1, x22
    aa50:	b.ls	aa9c <__sanitizer_get_allocated_size@@Base+0x59c>  // b.plast
    aa54:	bl	e718 <__sancov_default_options@@Base+0x294>
    aa58:	tst	w0, #0xff
    aa5c:	b.eq	aa88 <__sanitizer_get_allocated_size@@Base+0x588>  // b.none
    aa60:	mov	x20, #0x0                   	// #0
    aa64:	mov	x1, x19
    aa68:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    aa6c:	add	x0, x0, #0x61b
    aa70:	bl	18b74 <OnPrint@@Base+0x30c>
    aa74:	mov	x0, x20
    aa78:	ldp	x21, x22, [sp, #16]
    aa7c:	ldp	x23, x30, [sp, #32]
    aa80:	ldp	x19, x20, [sp], #48
    aa84:	ret
    aa88:	mov	x2, x21
    aa8c:	mov	x1, x22
    aa90:	mov	x0, x19
    aa94:	bl	fe74 <__sancov_default_options@@Base+0x19f0>
    aa98:	mov	x19, #0x1                   	// #1
    aa9c:	bl	a178 <__sanitizer_print_stack_trace@@Base+0xd8>
    aaa0:	adrp	x22, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    aaa4:	add	x22, x22, #0xf00
    aaa8:	mov	x3, x20
    aaac:	mov	x1, x0
    aab0:	mov	x2, x19
    aab4:	mov	x0, x22
    aab8:	bl	c478 <__sanitizer_get_allocated_size@@Base+0x1f78>
    aabc:	mov	x20, x0
    aac0:	cbnz	x0, aae0 <__sanitizer_get_allocated_size@@Base+0x5e0>
    aac4:	bl	e708 <__sancov_default_options@@Base+0x284>
    aac8:	bl	e718 <__sancov_default_options@@Base+0x294>
    aacc:	tst	w0, #0xff
    aad0:	b.ne	aa74 <__sanitizer_get_allocated_size@@Base+0x574>  // b.any
    aad4:	mov	x1, x21
    aad8:	mov	x0, x19
    aadc:	bl	fec4 <__sancov_default_options@@Base+0x1a40>
    aae0:	cbz	w23, ab08 <__sanitizer_get_allocated_size@@Base+0x608>
    aae4:	mov	x1, x0
    aae8:	mov	x0, x22
    aaec:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    aaf0:	tst	w0, #0xff
    aaf4:	b.eq	ab08 <__sanitizer_get_allocated_size@@Base+0x608>  // b.none
    aaf8:	mov	x2, x19
    aafc:	mov	x0, x20
    ab00:	mov	w1, #0x0                   	// #0
    ab04:	bl	68e0 <memset@plt>
    ab08:	mov	x0, x21
    ab0c:	mov	x2, x19
    ab10:	mov	x1, x20
    ab14:	bl	a58c <__sanitizer_get_allocated_size@@Base+0x8c>
    ab18:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ab1c:	ldr	x0, [x0, #3488]
    ab20:	cbz	x0, ab30 <__sanitizer_get_allocated_size@@Base+0x630>
    ab24:	mov	x1, x19
    ab28:	mov	x0, x20
    ab2c:	bl	67f0 <__sanitizer_malloc_hook@plt>
    ab30:	mov	x1, x19
    ab34:	mov	x0, x20
    ab38:	bl	10644 <__sancov_default_options@@Base+0x21c0>
    ab3c:	b	aa74 <__sanitizer_get_allocated_size@@Base+0x574>
    ab40:	stp	x19, x20, [sp, #-48]!
    ab44:	mov	x19, x1
    ab48:	mov	x20, x3
    ab4c:	stp	x21, x22, [sp, #16]
    ab50:	str	x30, [sp, #32]
    ab54:	cbz	x1, ab8c <__sanitizer_get_allocated_size@@Base+0x68c>
    ab58:	sub	x22, x1, #0x1
    ab5c:	mov	x21, x0
    ab60:	orr	x0, x22, #0x7
    ab64:	tst	x0, x1
    ab68:	b.ne	ab8c <__sanitizer_get_allocated_size@@Base+0x68c>  // b.any
    ab6c:	mov	x1, x2
    ab70:	mov	x0, x20
    ab74:	mov	x2, x19
    ab78:	mov	w3, #0x1                   	// #1
    ab7c:	bl	aa28 <__sanitizer_get_allocated_size@@Base+0x528>
    ab80:	cbnz	x0, abac <__sanitizer_get_allocated_size@@Base+0x6ac>
    ab84:	mov	w0, #0xc                   	// #12
    ab88:	b	abdc <__sanitizer_get_allocated_size@@Base+0x6dc>
    ab8c:	bl	e718 <__sancov_default_options@@Base+0x294>
    ab90:	mov	w1, w0
    ab94:	tst	w1, #0xff
    ab98:	mov	w0, #0x16                  	// #22
    ab9c:	b.ne	abdc <__sanitizer_get_allocated_size@@Base+0x6dc>  // b.any
    aba0:	mov	x1, x20
    aba4:	mov	x0, x19
    aba8:	bl	fe24 <__sancov_default_options@@Base+0x19a0>
    abac:	tst	x0, x22
    abb0:	b.eq	abd4 <__sanitizer_get_allocated_size@@Base+0x6d4>  // b.none
    abb4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    abb8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    abbc:	add	x2, x2, #0x652
    abc0:	add	x0, x0, #0x59b
    abc4:	mov	x4, #0x0                   	// #0
    abc8:	mov	x3, #0x0                   	// #0
    abcc:	mov	w1, #0x99                  	// #153
    abd0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    abd4:	str	x0, [x21]
    abd8:	mov	w0, #0x0                   	// #0
    abdc:	ldp	x21, x22, [sp, #16]
    abe0:	ldr	x30, [sp, #32]
    abe4:	ldp	x19, x20, [sp], #48
    abe8:	ret
    abec:	stp	x19, x20, [sp, #-48]!
    abf0:	mov	x19, x0
    abf4:	stp	x21, x22, [sp, #16]
    abf8:	mov	x21, x1
    abfc:	mov	x22, x2
    ac00:	str	x30, [sp, #32]
    ac04:	cbz	x0, ac48 <__sanitizer_get_allocated_size@@Base+0x748>
    ac08:	orr	x0, x0, x1
    ac0c:	sub	x2, x19, #0x1
    ac10:	tst	x0, x2
    ac14:	b.ne	ac48 <__sanitizer_get_allocated_size@@Base+0x748>  // b.any
    ac18:	mov	x2, x19
    ac1c:	mov	x0, x22
    ac20:	mov	w3, #0x1                   	// #1
    ac24:	bl	aa28 <__sanitizer_get_allocated_size@@Base+0x528>
    ac28:	mov	x20, x0
    ac2c:	cbnz	x0, ac34 <__sanitizer_get_allocated_size@@Base+0x734>
    ac30:	bl	fca8 <__sancov_default_options@@Base+0x1824>
    ac34:	mov	x0, x20
    ac38:	ldp	x21, x22, [sp, #16]
    ac3c:	ldr	x30, [sp, #32]
    ac40:	ldp	x19, x20, [sp], #48
    ac44:	ret
    ac48:	bl	6b20 <__errno_location@plt>
    ac4c:	mov	x20, #0x0                   	// #0
    ac50:	mov	w1, #0x16                  	// #22
    ac54:	str	w1, [x0]
    ac58:	bl	e718 <__sancov_default_options@@Base+0x294>
    ac5c:	tst	w0, #0xff
    ac60:	b.ne	ac34 <__sanitizer_get_allocated_size@@Base+0x734>  // b.any
    ac64:	mov	x2, x22
    ac68:	mov	x1, x19
    ac6c:	mov	x0, x21
    ac70:	bl	fdd4 <__sancov_default_options@@Base+0x1950>
    ac74:	stp	x19, x20, [sp, #-32]!
    ac78:	mov	x19, x0
    ac7c:	sub	x0, x0, #0x1
    ac80:	stp	x21, x30, [sp, #16]
    ac84:	tst	x0, x19
    ac88:	mov	x21, x2
    ac8c:	b.eq	acb8 <__sanitizer_get_allocated_size@@Base+0x7b8>  // b.none
    ac90:	bl	6b20 <__errno_location@plt>
    ac94:	mov	x20, #0x0                   	// #0
    ac98:	mov	w1, #0x16                  	// #22
    ac9c:	str	w1, [x0]
    aca0:	bl	e718 <__sancov_default_options@@Base+0x294>
    aca4:	tst	w0, #0xff
    aca8:	b.ne	acd4 <__sanitizer_get_allocated_size@@Base+0x7d4>  // b.any
    acac:	mov	x1, x21
    acb0:	mov	x0, x19
    acb4:	bl	fd88 <__sancov_default_options@@Base+0x1904>
    acb8:	mov	x2, x19
    acbc:	mov	x0, x21
    acc0:	mov	w3, #0x1                   	// #1
    acc4:	bl	aa28 <__sanitizer_get_allocated_size@@Base+0x528>
    acc8:	mov	x20, x0
    accc:	cbnz	x0, acd4 <__sanitizer_get_allocated_size@@Base+0x7d4>
    acd0:	bl	fca8 <__sancov_default_options@@Base+0x1824>
    acd4:	mov	x0, x20
    acd8:	ldp	x21, x30, [sp, #16]
    acdc:	ldp	x19, x20, [sp], #32
    ace0:	ret
    ace4:	mov	x4, x0
    ace8:	stp	x19, x30, [sp, #-16]!
    acec:	mov	x0, x1
    acf0:	mov	w3, #0x1                   	// #1
    acf4:	mov	x1, x4
    acf8:	mov	x2, #0x1                   	// #1
    acfc:	bl	aa28 <__sanitizer_get_allocated_size@@Base+0x528>
    ad00:	mov	x19, x0
    ad04:	cbnz	x0, ad0c <__sanitizer_get_allocated_size@@Base+0x80c>
    ad08:	bl	fca8 <__sancov_default_options@@Base+0x1824>
    ad0c:	mov	x0, x19
    ad10:	ldp	x19, x30, [sp], #16
    ad14:	ret
    ad18:	stp	x19, x20, [sp, #-32]!
    ad1c:	mov	x20, x0
    ad20:	mov	x19, x1
    ad24:	stp	x21, x30, [sp, #16]
    ad28:	mov	x21, x2
    ad2c:	cbz	x1, ad68 <__sanitizer_get_allocated_size@@Base+0x868>
    ad30:	umulh	x0, x0, x1
    ad34:	cbz	x0, ad68 <__sanitizer_get_allocated_size@@Base+0x868>
    ad38:	bl	e718 <__sancov_default_options@@Base+0x294>
    ad3c:	tst	w0, #0xff
    ad40:	b.eq	ad58 <__sanitizer_get_allocated_size@@Base+0x858>  // b.none
    ad44:	bl	fca8 <__sancov_default_options@@Base+0x1824>
    ad48:	mov	x0, #0x0                   	// #0
    ad4c:	ldp	x21, x30, [sp, #16]
    ad50:	ldp	x19, x20, [sp], #32
    ad54:	ret
    ad58:	mov	x2, x21
    ad5c:	mov	x1, x19
    ad60:	mov	x0, x20
    ad64:	bl	fcc0 <__sancov_default_options@@Base+0x183c>
    ad68:	mul	x1, x20, x19
    ad6c:	mov	x0, x21
    ad70:	mov	w3, #0x1                   	// #1
    ad74:	mov	x2, #0x1                   	// #1
    ad78:	bl	aa28 <__sanitizer_get_allocated_size@@Base+0x528>
    ad7c:	cbnz	x0, ad4c <__sanitizer_get_allocated_size@@Base+0x84c>
    ad80:	b	ad44 <__sanitizer_get_allocated_size@@Base+0x844>
    ad84:	stp	x19, x20, [sp, #-32]!
    ad88:	mov	x19, x1
    ad8c:	mov	x20, x0
    ad90:	str	x30, [sp, #16]
    ad94:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    ad98:	mov	x1, x20
    ad9c:	mov	x2, x0
    ada0:	mov	w3, #0x1                   	// #1
    ada4:	mov	x0, x19
    ada8:	bl	aa28 <__sanitizer_get_allocated_size@@Base+0x528>
    adac:	mov	x19, x0
    adb0:	cbnz	x0, adb8 <__sanitizer_get_allocated_size@@Base+0x8b8>
    adb4:	bl	fca8 <__sancov_default_options@@Base+0x1824>
    adb8:	mov	x0, x19
    adbc:	ldr	x30, [sp, #16]
    adc0:	ldp	x19, x20, [sp], #32
    adc4:	ret
    adc8:	stp	x19, x20, [sp, #-32]!
    adcc:	mov	x19, x0
    add0:	stp	x21, x30, [sp, #16]
    add4:	mov	x21, x1
    add8:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    addc:	mov	x1, x0
    ade0:	mov	x20, x0
    ade4:	mov	x0, x19
    ade8:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    adec:	cmp	x19, x0
    adf0:	b.ls	ae1c <__sanitizer_get_allocated_size@@Base+0x91c>  // b.plast
    adf4:	bl	6b20 <__errno_location@plt>
    adf8:	mov	x20, #0x0                   	// #0
    adfc:	mov	w1, #0xc                   	// #12
    ae00:	str	w1, [x0]
    ae04:	bl	e718 <__sancov_default_options@@Base+0x294>
    ae08:	tst	w0, #0xff
    ae0c:	b.ne	ae4c <__sanitizer_get_allocated_size@@Base+0x94c>  // b.any
    ae10:	mov	x1, x21
    ae14:	mov	x0, x19
    ae18:	bl	fd10 <__sancov_default_options@@Base+0x188c>
    ae1c:	mov	x1, x20
    ae20:	cbz	x19, ae30 <__sanitizer_get_allocated_size@@Base+0x930>
    ae24:	mov	x0, x19
    ae28:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    ae2c:	mov	x1, x0
    ae30:	mov	x2, x20
    ae34:	mov	x0, x21
    ae38:	mov	w3, #0x1                   	// #1
    ae3c:	bl	aa28 <__sanitizer_get_allocated_size@@Base+0x528>
    ae40:	mov	x20, x0
    ae44:	cbnz	x0, ae4c <__sanitizer_get_allocated_size@@Base+0x94c>
    ae48:	bl	fca8 <__sancov_default_options@@Base+0x1824>
    ae4c:	mov	x0, x20
    ae50:	ldp	x21, x30, [sp, #16]
    ae54:	ldp	x19, x20, [sp], #32
    ae58:	ret
    ae5c:	stp	x19, x20, [sp, #-80]!
    ae60:	mov	x19, x1
    ae64:	stp	x21, x22, [sp, #16]
    ae68:	mov	x21, x2
    ae6c:	stp	x23, x24, [sp, #32]
    ae70:	mov	x24, x0
    ae74:	stp	x25, x26, [sp, #48]
    ae78:	mov	x26, x3
    ae7c:	str	x30, [sp, #64]
    ae80:	cbz	x1, ae8c <__sanitizer_get_allocated_size@@Base+0x98c>
    ae84:	mov	x0, x1
    ae88:	bl	a504 <__sanitizer_get_allocated_size@@Base+0x4>
    ae8c:	mov	x20, #0x100000000           	// #4294967296
    ae90:	adrp	x22, 53000 <__asan_cplus_demangle_operators@@Base+0x2be0>
    ae94:	cmp	x21, x20
    ae98:	b.ls	aefc <__sanitizer_get_allocated_size@@Base+0x9fc>  // b.plast
    ae9c:	bl	a178 <__sanitizer_print_stack_trace@@Base+0xd8>
    aea0:	mov	x1, x0
    aea4:	mov	x2, x19
    aea8:	add	x0, x22, #0xf00
    aeac:	bl	c338 <__sanitizer_get_allocated_size@@Base+0x1e38>
    aeb0:	bl	e718 <__sancov_default_options@@Base+0x294>
    aeb4:	tst	w0, #0xff
    aeb8:	b.eq	aeec <__sanitizer_get_allocated_size@@Base+0x9ec>  // b.none
    aebc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    aec0:	mov	x1, x21
    aec4:	add	x0, x0, #0x61b
    aec8:	bl	18b74 <OnPrint@@Base+0x30c>
    aecc:	mov	x20, #0x0                   	// #0
    aed0:	mov	x0, x20
    aed4:	ldp	x21, x22, [sp, #16]
    aed8:	ldp	x23, x24, [sp, #32]
    aedc:	ldp	x25, x26, [sp, #48]
    aee0:	ldr	x30, [sp, #64]
    aee4:	ldp	x19, x20, [sp], #80
    aee8:	ret
    aeec:	mov	x2, x24
    aef0:	mov	x1, x20
    aef4:	mov	x0, x21
    aef8:	bl	fe74 <__sancov_default_options@@Base+0x19f0>
    aefc:	bl	a178 <__sanitizer_print_stack_trace@@Base+0xd8>
    af00:	mov	x25, x0
    af04:	cbnz	x19, af38 <__sanitizer_get_allocated_size@@Base+0xa38>
    af08:	mov	x1, x0
    af0c:	mov	x3, x26
    af10:	mov	x2, x21
    af14:	add	x0, x22, #0xf00
    af18:	bl	c478 <__sanitizer_get_allocated_size@@Base+0x1f78>
    af1c:	mov	x20, x0
    af20:	cbz	x20, aed0 <__sanitizer_get_allocated_size@@Base+0x9d0>
    af24:	mov	x2, x21
    af28:	mov	x1, x20
    af2c:	mov	x0, x24
    af30:	bl	a58c <__sanitizer_get_allocated_size@@Base+0x8c>
    af34:	b	aed0 <__sanitizer_get_allocated_size@@Base+0x9d0>
    af38:	cbnz	x21, af50 <__sanitizer_get_allocated_size@@Base+0xa50>
    af3c:	mov	x1, x0
    af40:	mov	x2, x19
    af44:	add	x0, x22, #0xf00
    af48:	bl	c338 <__sanitizer_get_allocated_size@@Base+0x1e38>
    af4c:	b	aecc <__sanitizer_get_allocated_size@@Base+0x9cc>
    af50:	mov	x1, x19
    af54:	add	x0, x22, #0xf00
    af58:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    af5c:	tst	w0, #0xff
    af60:	b.ne	af98 <__sanitizer_get_allocated_size@@Base+0xa98>  // b.any
    af64:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    af68:	mov	x1, x19
    af6c:	add	x0, x0, #0xcc0
    af70:	bl	b5b0 <__sanitizer_get_allocated_size@@Base+0x10b0>
    af74:	cbnz	x0, af98 <__sanitizer_get_allocated_size@@Base+0xa98>
    af78:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    af7c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    af80:	add	x2, x2, #0x9d6
    af84:	add	x0, x0, #0xd10
    af88:	mov	x4, #0x0                   	// #0
    af8c:	mov	x3, #0x0                   	// #0
    af90:	mov	w1, #0x62                  	// #98
    af94:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    af98:	add	x20, x22, #0xf00
    af9c:	mov	x1, x19
    afa0:	mov	x0, x20
    afa4:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    afa8:	mov	x1, x19
    afac:	tst	w0, #0xff
    afb0:	b.eq	b038 <__sanitizer_get_allocated_size@@Base+0xb38>  // b.none
    afb4:	mov	x0, x20
    afb8:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    afbc:	tst	w0, #0xff
    afc0:	b.ne	afe4 <__sanitizer_get_allocated_size@@Base+0xae4>  // b.any
    afc4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    afc8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    afcc:	add	x2, x2, #0x9d6
    afd0:	add	x0, x0, #0x694
    afd4:	mov	x4, #0x0                   	// #0
    afd8:	mov	x3, #0x0                   	// #0
    afdc:	mov	w1, #0xcc                  	// #204
    afe0:	b	af94 <__sanitizer_get_allocated_size@@Base+0xa94>
    afe4:	mov	x1, x19
    afe8:	mov	x0, x20
    afec:	bl	b738 <__sanitizer_get_allocated_size@@Base+0x1238>
    aff0:	bl	b250 <__sanitizer_get_allocated_size@@Base+0xd50>
    aff4:	mov	x23, x0
    aff8:	mov	x3, x26
    affc:	mov	x2, x21
    b000:	mov	x1, x25
    b004:	add	x0, x22, #0xf00
    b008:	bl	c478 <__sanitizer_get_allocated_size@@Base+0x1f78>
    b00c:	mov	x20, x0
    b010:	cbz	x0, b024 <__sanitizer_get_allocated_size@@Base+0xb24>
    b014:	cmp	x21, x23
    b018:	mov	x1, x19
    b01c:	csel	x2, x21, x23, ls  // ls = plast
    b020:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    b024:	mov	x2, x19
    b028:	mov	x1, x25
    b02c:	add	x0, x22, #0xf00
    b030:	bl	c338 <__sanitizer_get_allocated_size@@Base+0x1e38>
    b034:	b	af20 <__sanitizer_get_allocated_size@@Base+0xa20>
    b038:	add	x20, x20, #0x80, lsl #12
    b03c:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    b040:	add	x0, x0, #0xcc0
    b044:	bl	b28c <__sanitizer_get_allocated_size@@Base+0xd8c>
    b048:	ldr	x0, [x0, #16]
    b04c:	ldr	x1, [x20, #3520]
    b050:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    b054:	b	aff4 <__sanitizer_get_allocated_size@@Base+0xaf4>
    b058:	mov	x4, x0
    b05c:	stp	x19, x30, [sp, #-16]!
    b060:	mov	x0, x2
    b064:	mov	x3, #0x1                   	// #1
    b068:	mov	x2, x1
    b06c:	mov	x1, x4
    b070:	bl	ae5c <__sanitizer_get_allocated_size@@Base+0x95c>
    b074:	mov	x19, x0
    b078:	cbnz	x0, b080 <__sanitizer_get_allocated_size@@Base+0xb80>
    b07c:	bl	fca8 <__sancov_default_options@@Base+0x1824>
    b080:	mov	x0, x19
    b084:	ldp	x19, x30, [sp], #16
    b088:	ret
    b08c:	stp	x19, x20, [sp, #-32]!
    b090:	mov	x19, x0
    b094:	mov	w20, #0x0                   	// #0
    b098:	stp	x21, x30, [sp, #16]
    b09c:	mov	w21, #0x1                   	// #1
    b0a0:	cmp	w20, #0x9
    b0a4:	b.gt	b0d4 <__sanitizer_get_allocated_size@@Base+0xbd4>
    b0a8:	ldrb	w0, [x19]
    b0ac:	tst	w0, #0xff
    b0b0:	b.ne	b0cc <__sanitizer_get_allocated_size@@Base+0xbcc>  // b.any
    b0b4:	ldxrb	w0, [x19]
    b0b8:	stxrb	w1, w21, [x19]
    b0bc:	cbnz	w1, b0b4 <__sanitizer_get_allocated_size@@Base+0xbb4>
    b0c0:	dmb	ish
    b0c4:	tst	w0, #0xff
    b0c8:	b.eq	b0dc <__sanitizer_get_allocated_size@@Base+0xbdc>  // b.none
    b0cc:	add	w20, w20, #0x1
    b0d0:	b	b0a0 <__sanitizer_get_allocated_size@@Base+0xba0>
    b0d4:	bl	1507c <__sanitizer_set_report_fd@@Base+0x25c8>
    b0d8:	b	b0a8 <__sanitizer_get_allocated_size@@Base+0xba8>
    b0dc:	ldp	x21, x30, [sp, #16]
    b0e0:	ldp	x19, x20, [sp], #32
    b0e4:	ret
    b0e8:	mov	x1, x0
    b0ec:	mov	w3, #0x1                   	// #1
    b0f0:	ldxrb	w2, [x1]
    b0f4:	stxrb	w4, w3, [x1]
    b0f8:	cbnz	w4, b0f0 <__sanitizer_get_allocated_size@@Base+0xbf0>
    b0fc:	dmb	ish
    b100:	tst	w2, #0xff
    b104:	b.eq	b10c <__sanitizer_get_allocated_size@@Base+0xc0c>  // b.none
    b108:	b	b08c <__sanitizer_get_allocated_size@@Base+0xb8c>
    b10c:	ret
    b110:	ldr	x0, [x0]
    b114:	dmb	ish
    b118:	strb	wzr, [x0]
    b11c:	ret
    b120:	stp	x19, x20, [sp, #-48]!
    b124:	mov	x2, #0x10                  	// #16
    b128:	mov	x19, x1
    b12c:	mov	w1, #0x0                   	// #0
    b130:	mov	x20, x0
    b134:	mov	x0, x19
    b138:	str	x30, [sp, #16]
    b13c:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    b140:	add	x0, x20, #0x20
    b144:	str	x0, [sp, #40]
    b148:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    b14c:	mov	x3, x20
    b150:	ldr	x0, [x19]
    b154:	ldr	x2, [x3, #16]
    b158:	add	x2, x2, x0
    b15c:	str	x2, [x19]
    b160:	ldr	x0, [x19, #8]
    b164:	ldr	x1, [x3, #24]
    b168:	ldr	x3, [x3]
    b16c:	add	x1, x1, x0
    b170:	str	x1, [x19, #8]
    b174:	cmp	x20, x3
    b178:	b.ne	b150 <__sanitizer_get_allocated_size@@Base+0xc50>  // b.any
    b17c:	cmp	x2, #0x0
    b180:	add	x0, sp, #0x28
    b184:	csel	x2, x2, xzr, ge  // ge = tcont
    b188:	cmp	x1, #0x0
    b18c:	csel	x1, x1, xzr, ge  // ge = tcont
    b190:	stp	x2, x1, [x19]
    b194:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    b198:	ldr	x30, [sp, #16]
    b19c:	ldp	x19, x20, [sp], #48
    b1a0:	ret
    b1a4:	stp	x19, x20, [sp, #-64]!
    b1a8:	mov	x19, x0
    b1ac:	ldr	x0, [x2, #8]
    b1b0:	stp	x21, x22, [sp, #16]
    b1b4:	str	x30, [sp, #32]
    b1b8:	cbnz	x0, b1dc <__sanitizer_get_allocated_size@@Base+0xcdc>
    b1bc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b1c0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b1c4:	add	x2, x2, #0x67d
    b1c8:	add	x0, x0, #0x694
    b1cc:	mov	x4, #0x0                   	// #0
    b1d0:	mov	x3, #0x0                   	// #0
    b1d4:	mov	w1, #0xad                  	// #173
    b1d8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b1dc:	mov	x0, #0x2001                	// #8193
    b1e0:	add	x22, x1, x0
    b1e4:	mov	x20, x2
    b1e8:	lsl	x21, x1, #6
    b1ec:	add	x22, x19, x22, lsl #6
    b1f0:	str	x22, [sp, #56]
    b1f4:	mov	x0, x22
    b1f8:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    b1fc:	ldr	x0, [x22, #8]
    b200:	cbnz	x0, b234 <__sanitizer_get_allocated_size@@Base+0xd34>
    b204:	add	x19, x19, x21
    b208:	str	xzr, [x20]
    b20c:	add	x19, x19, #0x80, lsl #12
    b210:	mov	x0, #0x1                   	// #1
    b214:	stp	x20, x20, [x19, #80]
    b218:	str	x0, [x19, #72]
    b21c:	add	x0, sp, #0x38
    b220:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    b224:	ldp	x21, x22, [sp, #16]
    b228:	ldr	x30, [sp, #32]
    b22c:	ldp	x19, x20, [sp], #64
    b230:	ret
    b234:	add	x19, x19, x21
    b238:	add	x0, x0, #0x1
    b23c:	add	x19, x19, #0x80, lsl #12
    b240:	ldr	x1, [x19, #80]
    b244:	str	x1, [x20]
    b248:	str	x20, [x19, #80]
    b24c:	b	b218 <__sanitizer_get_allocated_size@@Base+0xd18>
    b250:	cmp	x0, #0x35
    b254:	b.eq	b284 <__sanitizer_get_allocated_size@@Base+0xd84>  // b.none
    b258:	sub	x3, x0, #0x10
    b25c:	mov	x2, #0x100                 	// #256
    b260:	lsl	x4, x0, #4
    b264:	cmp	x0, #0x10
    b268:	lsr	x1, x3, #2
    b26c:	and	x3, x3, #0x3
    b270:	lsl	x2, x2, x1
    b274:	lsr	x1, x2, #2
    b278:	madd	x1, x1, x3, x2
    b27c:	csel	x0, x1, x4, hi  // hi = pmore
    b280:	ret
    b284:	mov	x0, #0x200                 	// #512
    b288:	b	b280 <__sanitizer_get_allocated_size@@Base+0xd80>
    b28c:	ldr	x0, [x0]
    b290:	sub	x2, x0, #0x1
    b294:	tst	x2, x1
    b298:	b.eq	b2c0 <__sanitizer_get_allocated_size@@Base+0xdc0>  // b.none
    b29c:	str	x30, [sp, #-16]!
    b2a0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b2a4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b2a8:	add	x2, x2, #0x6de
    b2ac:	add	x0, x0, #0x544
    b2b0:	mov	x4, #0x0                   	// #0
    b2b4:	mov	x3, #0x0                   	// #0
    b2b8:	mov	w1, #0x123                 	// #291
    b2bc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b2c0:	sub	x0, x1, x0
    b2c4:	ret
    b2c8:	stp	x19, x20, [sp, #-96]!
    b2cc:	stp	x21, x22, [sp, #16]
    b2d0:	stp	x23, x24, [sp, #32]
    b2d4:	stp	x25, x26, [sp, #48]
    b2d8:	sub	x26, x3, #0x1
    b2dc:	tst	x3, x26
    b2e0:	str	x30, [sp, #64]
    b2e4:	b.eq	b308 <__sanitizer_get_allocated_size@@Base+0xe08>  // b.none
    b2e8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b2ec:	add	x2, x2, #0x702
    b2f0:	mov	x4, #0x0                   	// #0
    b2f4:	mov	x3, #0x0                   	// #0
    b2f8:	mov	w1, #0x53                  	// #83
    b2fc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b300:	add	x0, x0, #0x544
    b304:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b308:	mov	x19, x0
    b30c:	mov	x24, x1
    b310:	mov	x23, x3
    b314:	mov	x25, x2
    b318:	mov	x0, x2
    b31c:	ldr	x1, [x19]
    b320:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    b324:	ldr	x1, [x19]
    b328:	add	x20, x0, x1
    b32c:	cmp	x23, x1
    b330:	b.ls	b338 <__sanitizer_get_allocated_size@@Base+0xe38>  // b.plast
    b334:	add	x20, x20, x23
    b338:	cmp	x20, x25
    b33c:	b.cs	b380 <__sanitizer_get_allocated_size@@Base+0xe80>  // b.hs, b.nlast
    b340:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b344:	mov	x3, x23
    b348:	mov	x2, x20
    b34c:	mov	x21, #0x0                   	// #0
    b350:	ldr	x0, [x0, #4008]
    b354:	ldr	x1, [x0]
    b358:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b35c:	add	x0, x0, #0x725
    b360:	bl	18b74 <OnPrint@@Base+0x30c>
    b364:	mov	x0, x21
    b368:	ldp	x21, x22, [sp, #16]
    b36c:	ldp	x23, x24, [sp, #32]
    b370:	ldp	x25, x26, [sp, #48]
    b374:	ldr	x30, [sp, #64]
    b378:	ldp	x19, x20, [sp], #96
    b37c:	ret
    b380:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b384:	ldr	x0, [x0, #3840]
    b388:	ldr	x1, [x0]
    b38c:	mov	x0, x20
    b390:	bl	16b74 <__sanitizer_set_report_fd@@Base+0x40c0>
    b394:	mov	x21, x0
    b398:	cbz	x0, b364 <__sanitizer_get_allocated_size@@Base+0xe64>
    b39c:	ldr	x22, [x19]
    b3a0:	sub	x0, x22, #0x1
    b3a4:	tst	x21, x0
    b3a8:	b.eq	b3c4 <__sanitizer_get_allocated_size@@Base+0xec4>  // b.none
    b3ac:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b3b0:	mov	x4, #0x0                   	// #0
    b3b4:	add	x2, x2, #0x786
    b3b8:	mov	x3, #0x0                   	// #0
    b3bc:	mov	w1, #0x62                  	// #98
    b3c0:	b	b2fc <__sanitizer_get_allocated_size@@Base+0xdfc>
    b3c4:	add	x22, x22, x21
    b3c8:	ands	x1, x22, x26
    b3cc:	b.eq	b3f8 <__sanitizer_get_allocated_size@@Base+0xef8>  // b.none
    b3d0:	add	x22, x23, x22
    b3d4:	sub	x22, x22, x1
    b3d8:	tst	x22, x26
    b3dc:	b.eq	b3f8 <__sanitizer_get_allocated_size@@Base+0xef8>  // b.none
    b3e0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b3e4:	mov	x4, #0x0                   	// #0
    b3e8:	add	x2, x2, #0x7b0
    b3ec:	mov	x3, #0x0                   	// #0
    b3f0:	mov	w1, #0x68                  	// #104
    b3f4:	b	b2fc <__sanitizer_get_allocated_size@@Base+0xdfc>
    b3f8:	tst	x22, x0
    b3fc:	b.eq	b418 <__sanitizer_get_allocated_size@@Base+0xf18>  // b.none
    b400:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b404:	mov	x4, #0x0                   	// #0
    b408:	add	x2, x2, #0x7d5
    b40c:	mov	x3, #0x0                   	// #0
    b410:	mov	w1, #0x69                  	// #105
    b414:	b	b2fc <__sanitizer_get_allocated_size@@Base+0xdfc>
    b418:	add	x3, x22, x25
    b41c:	cmp	x21, x3
    b420:	b.ls	b438 <__sanitizer_get_allocated_size@@Base+0xf38>  // b.plast
    b424:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b428:	mov	x4, x21
    b42c:	add	x2, x2, #0x7fb
    b430:	mov	w1, #0x6a                  	// #106
    b434:	b	b2fc <__sanitizer_get_allocated_size@@Base+0xdfc>
    b438:	add	x4, x21, x20
    b43c:	cmp	x4, x3
    b440:	b.cs	b454 <__sanitizer_get_allocated_size@@Base+0xf54>  // b.hs, b.nlast
    b444:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b448:	mov	w1, #0x6b                  	// #107
    b44c:	add	x2, x2, #0x819
    b450:	b	b2fc <__sanitizer_get_allocated_size@@Base+0xdfc>
    b454:	mov	x1, x22
    b458:	mov	x0, x19
    b45c:	bl	b28c <__sanitizer_get_allocated_size@@Base+0xd8c>
    b460:	mov	x23, x0
    b464:	mov	x0, x20
    b468:	stp	x21, x20, [x23]
    b46c:	str	x25, [x23, #16]
    b470:	bl	91b4 <__lsan_do_recoverable_leak_check@@Base+0x858>
    b474:	mov	x21, x0
    b478:	cmp	x0, #0x3f
    b47c:	b.ls	b498 <__sanitizer_get_allocated_size@@Base+0xf98>  // b.plast
    b480:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b484:	mov	x3, x0
    b488:	add	x2, x2, #0x837
    b48c:	mov	x4, #0x40                  	// #64
    b490:	mov	w1, #0x71                  	// #113
    b494:	b	b2fc <__sanitizer_get_allocated_size@@Base+0xdfc>
    b498:	add	x0, x19, #0x268
    b49c:	str	x0, [sp, #88]
    b4a0:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    b4a4:	ldr	x3, [x19, #56]
    b4a8:	mov	x0, #0xfffff               	// #1048575
    b4ac:	cmp	x3, x0
    b4b0:	b.ls	b4c8 <__sanitizer_get_allocated_size@@Base+0xfc8>  // b.plast
    b4b4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b4b8:	mov	x4, #0x100000              	// #1048576
    b4bc:	add	x2, x2, #0x885
    b4c0:	mov	w1, #0x29                  	// #41
    b4c4:	b	b2fc <__sanitizer_get_allocated_size@@Base+0xdfc>
    b4c8:	ldr	x0, [x19, #48]
    b4cc:	add	x25, x19, #0x10
    b4d0:	cmp	x3, x0
    b4d4:	b.ne	b4f8 <__sanitizer_get_allocated_size@@Base+0xff8>  // b.any
    b4d8:	ldr	x1, [x19, #16]
    b4dc:	mov	x0, x25
    b4e0:	mov	x2, #0x20000               	// #131072
    b4e4:	add	x1, x1, x3, lsl #3
    b4e8:	bl	17c20 <__sanitizer_set_report_fd@@Base+0x516c>
    b4ec:	ldr	x0, [x19, #48]
    b4f0:	add	x0, x0, #0x4, lsl #12
    b4f4:	str	x0, [x19, #48]
    b4f8:	ldr	x0, [x19, #56]
    b4fc:	add	x1, x0, #0x1
    b500:	str	x1, [x19, #56]
    b504:	ldr	x1, [x19, #8]
    b508:	str	x0, [x23, #24]
    b50c:	str	x23, [x1, x0, lsl #3]
    b510:	ldr	x0, [x19, #72]
    b514:	strb	wzr, [x19, #64]
    b518:	ldr	x1, [x19, #96]
    b51c:	add	x0, x0, #0x1
    b520:	str	x0, [x19, #72]
    b524:	ldr	x0, [x19, #88]
    b528:	add	x0, x20, x0
    b52c:	str	x0, [x19, #88]
    b530:	cmp	x1, x0
    b534:	csel	x0, x1, x0, cs  // cs = hs, nlast
    b538:	str	x0, [x19, #96]
    b53c:	add	x19, x19, x21, lsl #3
    b540:	mov	x21, x22
    b544:	ldr	x0, [x19, #104]
    b548:	add	x0, x0, #0x1
    b54c:	str	x0, [x19, #104]
    b550:	ldr	x0, [x24, #16]
    b554:	add	x0, x20, x0
    b558:	str	x0, [x24, #16]
    b55c:	ldr	x0, [x24, #24]
    b560:	add	x20, x20, x0
    b564:	str	x20, [x24, #24]
    b568:	add	x0, sp, #0x58
    b56c:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    b570:	b	b364 <__sanitizer_get_allocated_size@@Base+0xe64>
    b574:	ldr	x0, [x0]
    b578:	sub	x2, x0, #0x1
    b57c:	tst	x1, x2
    b580:	b.eq	b5a8 <__sanitizer_get_allocated_size@@Base+0x10a8>  // b.none
    b584:	str	x30, [sp, #-16]!
    b588:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b58c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b590:	add	x2, x2, #0x89f
    b594:	add	x0, x0, #0x544
    b598:	mov	x4, #0x0                   	// #0
    b59c:	mov	x3, #0x0                   	// #0
    b5a0:	mov	w1, #0x12b                 	// #299
    b5a4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b5a8:	add	x0, x1, x0
    b5ac:	ret
    b5b0:	stp	x19, x20, [sp, #-48]!
    b5b4:	mov	x20, x0
    b5b8:	mov	x19, x1
    b5bc:	add	x0, x0, #0x268
    b5c0:	str	x30, [sp, #16]
    b5c4:	str	x0, [sp, #40]
    b5c8:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    b5cc:	ldr	x2, [x20, #56]
    b5d0:	mov	x0, #0x0                   	// #0
    b5d4:	mov	x3, #0x0                   	// #0
    b5d8:	cmp	x2, x0
    b5dc:	b.eq	b608 <__sanitizer_get_allocated_size@@Base+0x1108>  // b.none
    b5e0:	ldr	x1, [x20, #8]
    b5e4:	ldr	x1, [x1, x0, lsl #3]
    b5e8:	cmp	x19, x1
    b5ec:	b.cc	b600 <__sanitizer_get_allocated_size@@Base+0x1100>  // b.lo, b.ul, b.last
    b5f0:	sub	x4, x19, x3
    b5f4:	sub	x5, x19, x1
    b5f8:	cmp	x5, x4
    b5fc:	csel	x3, x3, x1, cs  // cs = hs, nlast
    b600:	add	x0, x0, #0x1
    b604:	b	b5d8 <__sanitizer_get_allocated_size@@Base+0x10d8>
    b608:	cbz	x3, b69c <__sanitizer_get_allocated_size@@Base+0x119c>
    b60c:	ldr	x4, [x3]
    b610:	cmp	x3, x4
    b614:	b.cs	b630 <__sanitizer_get_allocated_size@@Base+0x1130>  // b.hs, b.nlast
    b618:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b61c:	add	x2, x2, #0x8c9
    b620:	mov	w1, #0xc1                  	// #193
    b624:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b628:	add	x0, x0, #0x544
    b62c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b630:	ldr	x0, [x3, #8]
    b634:	add	x4, x4, x0
    b638:	cmp	x3, x4
    b63c:	b.cc	b650 <__sanitizer_get_allocated_size@@Base+0x1150>  // b.lo, b.ul, b.last
    b640:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b644:	mov	w1, #0xc2                  	// #194
    b648:	add	x2, x2, #0x8ed
    b64c:	b	b624 <__sanitizer_get_allocated_size@@Base+0x1124>
    b650:	cmp	x3, x19
    b654:	b.ls	b66c <__sanitizer_get_allocated_size@@Base+0x116c>  // b.plast
    b658:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b65c:	mov	x4, x19
    b660:	add	x2, x2, #0x91e
    b664:	mov	w1, #0xc3                  	// #195
    b668:	b	b624 <__sanitizer_get_allocated_size@@Base+0x1124>
    b66c:	cmp	x19, x4
    b670:	b.cs	b69c <__sanitizer_get_allocated_size@@Base+0x119c>  // b.hs, b.nlast
    b674:	mov	x1, x3
    b678:	mov	x0, x20
    b67c:	bl	b574 <__sanitizer_get_allocated_size@@Base+0x1074>
    b680:	mov	x19, x0
    b684:	add	x0, sp, #0x28
    b688:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    b68c:	mov	x0, x19
    b690:	ldr	x30, [sp, #16]
    b694:	ldp	x19, x20, [sp], #48
    b698:	ret
    b69c:	mov	x19, #0x0                   	// #0
    b6a0:	b	b684 <__sanitizer_get_allocated_size@@Base+0x1184>
    b6a4:	mov	x3, x1
    b6a8:	mov	x1, #0xffff                	// #65535
    b6ac:	cmp	x3, x1
    b6b0:	b.ls	b6d4 <__sanitizer_get_allocated_size@@Base+0x11d4>  // b.plast
    b6b4:	str	x30, [sp, #-16]!
    b6b8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b6bc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b6c0:	add	x2, x2, #0x939
    b6c4:	add	x0, x0, #0x94e
    b6c8:	mov	x4, #0x10000               	// #65536
    b6cc:	mov	w1, #0x4f                  	// #79
    b6d0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b6d4:	ldr	x0, [x0, x3, lsl #3]
    b6d8:	dmb	ish
    b6dc:	ret
    b6e0:	stp	x19, x30, [sp, #-16]!
    b6e4:	mov	x19, x1
    b6e8:	mov	x1, #0xfffffff             	// #268435455
    b6ec:	cmp	x19, x1
    b6f0:	b.ls	b714 <__sanitizer_get_allocated_size@@Base+0x1214>  // b.plast
    b6f4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b6f8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b6fc:	mov	x3, x19
    b700:	add	x2, x2, #0x996
    b704:	add	x0, x0, #0x94e
    b708:	mov	x4, #0x10000000            	// #268435456
    b70c:	mov	w1, #0x47                  	// #71
    b710:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b714:	lsr	x1, x19, #12
    b718:	bl	b6a4 <__sanitizer_get_allocated_size@@Base+0x11a4>
    b71c:	cbz	x0, b730 <__sanitizer_get_allocated_size@@Base+0x1230>
    b720:	and	x19, x19, #0xfff
    b724:	ldrb	w0, [x0, x19]
    b728:	ldp	x19, x30, [sp], #16
    b72c:	ret
    b730:	mov	w0, #0x0                   	// #0
    b734:	b	b728 <__sanitizer_get_allocated_size@@Base+0x1228>
    b738:	str	x30, [sp, #-16]!
    b73c:	mov	x2, #0xfffffff             	// #268435455
    b740:	lsr	x3, x1, #20
    b744:	cmp	x2, x1, lsr #20
    b748:	b.cs	b768 <__sanitizer_get_allocated_size@@Base+0x1268>  // b.hs, b.nlast
    b74c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b750:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b754:	add	x2, x2, #0x9b4
    b758:	add	x0, x0, #0x694
    b75c:	mov	x4, #0x10000000            	// #268435456
    b760:	mov	w1, #0x116                 	// #278
    b764:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b768:	mov	x1, x3
    b76c:	bl	b6e0 <__sanitizer_get_allocated_size@@Base+0x11e0>
    b770:	and	x0, x0, #0xff
    b774:	ldr	x30, [sp], #16
    b778:	ret
    b77c:	mov	x2, #0xffffffffffff        	// #281474976710655
    b780:	cmp	x1, x2
    b784:	b.hi	b7a0 <__sanitizer_get_allocated_size@@Base+0x12a0>  // b.pmore
    b788:	str	x30, [sp, #-16]!
    b78c:	bl	b738 <__sanitizer_get_allocated_size@@Base+0x1238>
    b790:	cmp	x0, #0x0
    b794:	cset	w0, ne  // ne = any
    b798:	ldr	x30, [sp], #16
    b79c:	ret
    b7a0:	mov	w0, #0x0                   	// #0
    b7a4:	ret
    b7a8:	stp	x19, x20, [sp, #-32]!
    b7ac:	mov	x20, x0
    b7b0:	mov	x19, x1
    b7b4:	stp	x21, x30, [sp, #16]
    b7b8:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    b7bc:	tst	w0, #0xff
    b7c0:	b.eq	b82c <__sanitizer_get_allocated_size@@Base+0x132c>  // b.none
    b7c4:	mov	x1, x19
    b7c8:	mov	x0, x20
    b7cc:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    b7d0:	tst	w0, #0xff
    b7d4:	b.ne	b7f8 <__sanitizer_get_allocated_size@@Base+0x12f8>  // b.any
    b7d8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b7dc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b7e0:	add	x2, x2, #0x9d6
    b7e4:	add	x0, x0, #0x694
    b7e8:	mov	x4, #0x0                   	// #0
    b7ec:	mov	x3, #0x0                   	// #0
    b7f0:	mov	w1, #0x91                  	// #145
    b7f4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b7f8:	and	x21, x19, #0xfffffffffff00000
    b7fc:	mov	x1, x19
    b800:	sub	w19, w19, w21
    b804:	mov	x0, x20
    b808:	bl	b738 <__sanitizer_get_allocated_size@@Base+0x1238>
    b80c:	bl	b250 <__sanitizer_get_allocated_size@@Base+0xd50>
    b810:	udiv	w0, w19, w0
    b814:	add	x1, x21, #0x100, lsl #12
    b818:	add	x0, x0, #0x1
    b81c:	sub	x0, x1, x0, lsl #4
    b820:	ldp	x21, x30, [sp, #16]
    b824:	ldp	x19, x20, [sp], #32
    b828:	ret
    b82c:	add	x21, x20, #0x80, lsl #12
    b830:	add	x20, x20, #0x80, lsl #12
    b834:	add	x20, x20, #0xc00
    b838:	add	x21, x21, #0xdc0
    b83c:	ldr	x0, [x20, #448]
    b840:	sub	x0, x0, #0x1
    b844:	tst	x19, x0
    b848:	b.eq	b898 <__sanitizer_get_allocated_size@@Base+0x1398>  // b.none
    b84c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    b850:	mov	x2, x19
    b854:	ldr	x0, [x0, #4008]
    b858:	ldr	x1, [x0]
    b85c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b860:	add	x0, x0, #0x9f2
    b864:	bl	18af0 <OnPrint@@Base+0x288>
    b868:	ldr	x0, [x20, #448]
    b86c:	sub	x0, x0, #0x1
    b870:	tst	x19, x0
    b874:	b.eq	b898 <__sanitizer_get_allocated_size@@Base+0x1398>  // b.none
    b878:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b87c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b880:	add	x2, x2, #0xa06
    b884:	add	x0, x0, #0x544
    b888:	mov	x4, #0x0                   	// #0
    b88c:	mov	x3, #0x0                   	// #0
    b890:	mov	w1, #0xae                  	// #174
    b894:	b	b7f4 <__sanitizer_get_allocated_size@@Base+0x12f4>
    b898:	mov	x1, x19
    b89c:	mov	x0, x21
    b8a0:	bl	b28c <__sanitizer_get_allocated_size@@Base+0xd8c>
    b8a4:	add	x0, x0, #0x20
    b8a8:	b	b820 <__sanitizer_get_allocated_size@@Base+0x1320>
    b8ac:	stp	x19, x20, [sp, #-32]!
    b8b0:	mov	x20, x0
    b8b4:	mov	x19, x1
    b8b8:	stp	x21, x30, [sp, #16]
    b8bc:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    b8c0:	tst	w0, #0xff
    b8c4:	b.ne	b8e8 <__sanitizer_get_allocated_size@@Base+0x13e8>  // b.any
    b8c8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b8cc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    b8d0:	add	x2, x2, #0x9d6
    b8d4:	add	x0, x0, #0x694
    b8d8:	mov	x4, #0x0                   	// #0
    b8dc:	mov	x3, #0x0                   	// #0
    b8e0:	mov	w1, #0xc1                  	// #193
    b8e4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    b8e8:	and	x21, x19, #0xfffffffffff00000
    b8ec:	mov	x1, x19
    b8f0:	sub	w19, w19, w21
    b8f4:	mov	x0, x20
    b8f8:	bl	b738 <__sanitizer_get_allocated_size@@Base+0x1238>
    b8fc:	bl	b250 <__sanitizer_get_allocated_size@@Base+0xd50>
    b900:	udiv	w19, w19, w0
    b904:	mul	w0, w19, w0
    b908:	add	x0, x0, x21
    b90c:	ldp	x21, x30, [sp, #16]
    b910:	ldp	x19, x20, [sp], #32
    b914:	ret
    b918:	cmp	x1, #0x1
    b91c:	b.ls	b9ec <__sanitizer_get_allocated_size@@Base+0x14ec>  // b.plast
    b920:	mov	x2, #0x1                   	// #1
    b924:	mov	x3, x2
    b928:	mov	x4, x3
    b92c:	sub	x3, x3, #0x1
    b930:	lsr	x3, x3, #1
    b934:	lsl	x4, x4, #3
    b938:	lsl	x5, x3, #3
    b93c:	ldr	x6, [x0, x4]
    b940:	ldr	x7, [x0, x5]
    b944:	cmp	x7, x6
    b948:	b.cs	b958 <__sanitizer_get_allocated_size@@Base+0x1458>  // b.hs, b.nlast
    b94c:	str	x7, [x0, x4]
    b950:	str	x6, [x0, x5]
    b954:	cbnz	x3, b928 <__sanitizer_get_allocated_size@@Base+0x1428>
    b958:	add	x3, x2, #0x1
    b95c:	cmp	x1, x3
    b960:	b.ne	b9f0 <__sanitizer_get_allocated_size@@Base+0x14f0>  // b.any
    b964:	ldr	x1, [x0]
    b968:	ldr	x3, [x0, x2, lsl #3]
    b96c:	str	x3, [x0]
    b970:	str	x1, [x0, x2, lsl #3]
    b974:	mov	x1, #0x0                   	// #0
    b978:	lsl	x4, x1, #1
    b97c:	add	x5, x1, #0x1
    b980:	add	x3, x4, #0x1
    b984:	add	x4, x4, #0x2
    b988:	cmp	x3, x2
    b98c:	b.cs	ba00 <__sanitizer_get_allocated_size@@Base+0x1500>  // b.hs, b.nlast
    b990:	ldr	x7, [x0, x1, lsl #3]
    b994:	ldr	x6, [x0, x3, lsl #3]
    b998:	cmp	x7, x6
    b99c:	b.cs	ba00 <__sanitizer_get_allocated_size@@Base+0x1500>  // b.hs, b.nlast
    b9a0:	cmp	x4, x2
    b9a4:	b.cs	b9bc <__sanitizer_get_allocated_size@@Base+0x14bc>  // b.hs, b.nlast
    b9a8:	lsl	x5, x5, #4
    b9ac:	ldr	x6, [x0, x3, lsl #3]
    b9b0:	ldr	x5, [x0, x5]
    b9b4:	cmp	x6, x5
    b9b8:	csel	x3, x3, x4, cs  // cs = hs, nlast
    b9bc:	cmp	x3, x1
    b9c0:	b.eq	b9e4 <__sanitizer_get_allocated_size@@Base+0x14e4>  // b.none
    b9c4:	lsl	x4, x3, #3
    b9c8:	lsl	x1, x1, #3
    b9cc:	cmp	x3, x2
    b9d0:	ldr	x6, [x0, x4]
    b9d4:	ldr	x5, [x0, x1]
    b9d8:	str	x6, [x0, x1]
    b9dc:	str	x5, [x0, x4]
    b9e0:	b.cc	b9f8 <__sanitizer_get_allocated_size@@Base+0x14f8>  // b.lo, b.ul, b.last
    b9e4:	subs	x2, x2, #0x1
    b9e8:	b.ne	b964 <__sanitizer_get_allocated_size@@Base+0x1464>  // b.any
    b9ec:	ret
    b9f0:	mov	x2, x3
    b9f4:	b	b924 <__sanitizer_get_allocated_size@@Base+0x1424>
    b9f8:	mov	x1, x3
    b9fc:	b	b978 <__sanitizer_get_allocated_size@@Base+0x1478>
    ba00:	cmp	x4, x2
    ba04:	b.cs	b9e4 <__sanitizer_get_allocated_size@@Base+0x14e4>  // b.hs, b.nlast
    ba08:	mov	x3, x1
    ba0c:	b	b9a8 <__sanitizer_get_allocated_size@@Base+0x14a8>
    ba10:	stp	x19, x20, [sp, #-32]!
    ba14:	stp	x21, x30, [sp, #16]
    ba18:	ldrb	w3, [x0, #616]
    ba1c:	and	x3, x3, #0xff
    ba20:	cmp	x3, #0x1
    ba24:	b.eq	ba44 <__sanitizer_get_allocated_size@@Base+0x1544>  // b.none
    ba28:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ba2c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ba30:	add	x2, x2, #0xa42
    ba34:	add	x0, x0, #0xa7a
    ba38:	mov	x4, #0x1                   	// #1
    ba3c:	mov	w1, #0x2a                  	// #42
    ba40:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    ba44:	ldr	x19, [x0, #56]
    ba48:	mov	x21, x0
    ba4c:	cbz	x19, bb20 <__sanitizer_get_allocated_size@@Base+0x1620>
    ba50:	mov	x20, x1
    ba54:	ldrb	w1, [x0, #64]
    ba58:	cbnz	w1, ba60 <__sanitizer_get_allocated_size@@Base+0x1560>
    ba5c:	bl	a6ec <__sanitizer_get_allocated_size@@Base+0x1ec>
    ba60:	ldr	x0, [x21, #8]
    ba64:	add	x1, x0, x19, lsl #3
    ba68:	ldur	x1, [x1, #-8]
    ba6c:	ldr	x2, [x1, #8]
    ba70:	add	x1, x1, x2
    ba74:	ldr	x2, [x0]
    ba78:	cmp	x20, x1
    ba7c:	ccmp	x20, x2, #0x0, cc  // cc = lo, ul, last
    ba80:	b.cc	bb20 <__sanitizer_get_allocated_size@@Base+0x1620>  // b.lo, b.ul, b.last
    ba84:	sub	x4, x19, #0x1
    ba88:	mov	x1, #0x0                   	// #0
    ba8c:	sub	x2, x4, x1
    ba90:	cmp	x2, #0x1
    ba94:	b.ls	babc <__sanitizer_get_allocated_size@@Base+0x15bc>  // b.plast
    ba98:	add	x2, x4, x1
    ba9c:	lsr	x2, x2, #1
    baa0:	ldr	x3, [x0, x2, lsl #3]
    baa4:	cmp	x3, x20
    baa8:	b.ls	bab4 <__sanitizer_get_allocated_size@@Base+0x15b4>  // b.plast
    baac:	sub	x4, x2, #0x1
    bab0:	b	ba8c <__sanitizer_get_allocated_size@@Base+0x158c>
    bab4:	mov	x1, x2
    bab8:	b	ba8c <__sanitizer_get_allocated_size@@Base+0x158c>
    babc:	cmp	x4, x1
    bac0:	b.ls	baf4 <__sanitizer_get_allocated_size@@Base+0x15f4>  // b.plast
    bac4:	add	x3, x1, #0x1
    bac8:	cmp	x4, x3
    bacc:	b.eq	bae8 <__sanitizer_get_allocated_size@@Base+0x15e8>  // b.none
    bad0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bad4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bad8:	add	x2, x2, #0xab6
    badc:	add	x0, x0, #0x544
    bae0:	mov	w1, #0xea                  	// #234
    bae4:	b	ba40 <__sanitizer_get_allocated_size@@Base+0x1540>
    bae8:	ldr	x2, [x0, x4, lsl #3]
    baec:	cmp	x2, x20
    baf0:	csel	x1, x1, x4, hi  // hi = pmore
    baf4:	ldr	x1, [x0, x1, lsl #3]
    baf8:	ldp	x2, x0, [x1]
    bafc:	add	x0, x2, x0
    bb00:	cmp	x0, x20
    bb04:	b.ls	bb20 <__sanitizer_get_allocated_size@@Base+0x1620>  // b.plast
    bb08:	cmp	x2, x20
    bb0c:	b.hi	bb20 <__sanitizer_get_allocated_size@@Base+0x1620>  // b.pmore
    bb10:	mov	x0, x21
    bb14:	ldp	x21, x30, [sp, #16]
    bb18:	ldp	x19, x20, [sp], #32
    bb1c:	b	b574 <__sanitizer_get_allocated_size@@Base+0x1074>
    bb20:	mov	x0, #0x0                   	// #0
    bb24:	ldp	x21, x30, [sp, #16]
    bb28:	ldp	x19, x20, [sp], #32
    bb2c:	ret
    bb30:	stp	x19, x20, [sp, #-80]!
    bb34:	mov	x19, x1
    bb38:	mov	x1, #0x100000              	// #1048576
    bb3c:	stp	x21, x22, [sp, #16]
    bb40:	mov	x21, x0
    bb44:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    bb48:	stp	x23, x24, [sp, #32]
    bb4c:	mov	x23, x2
    bb50:	ldr	x0, [x0, #3616]
    bb54:	ldr	x2, [x0]
    bb58:	mov	x0, x1
    bb5c:	str	x30, [sp, #48]
    bb60:	bl	16c08 <__sanitizer_set_report_fd@@Base+0x4154>
    bb64:	mov	x20, x0
    bb68:	cbz	x0, bc58 <__sanitizer_get_allocated_size@@Base+0x1758>
    bb6c:	tst	x0, #0xfffff
    bb70:	ldr	x0, [x19, #24]
    bb74:	add	x0, x0, #0x100, lsl #12
    bb78:	str	x0, [x19, #24]
    bb7c:	b.eq	bba0 <__sanitizer_get_allocated_size@@Base+0x16a0>  // b.none
    bb80:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bb84:	add	x2, x2, #0xacd
    bb88:	mov	x4, #0x0                   	// #0
    bb8c:	mov	x3, #0x0                   	// #0
    bb90:	mov	w1, #0x126                 	// #294
    bb94:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bb98:	add	x0, x0, #0x694
    bb9c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    bba0:	mov	x0, #0xfffffff             	// #268435455
    bba4:	lsr	x22, x20, #20
    bba8:	cmp	x0, x20, lsr #20
    bbac:	b.cs	bbc8 <__sanitizer_get_allocated_size@@Base+0x16c8>  // b.hs, b.nlast
    bbb0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bbb4:	mov	x3, x22
    bbb8:	add	x2, x2, #0x9b4
    bbbc:	mov	x4, #0x10000000            	// #268435456
    bbc0:	mov	w1, #0x116                 	// #278
    bbc4:	b	bb94 <__sanitizer_get_allocated_size@@Base+0x1694>
    bbc8:	lsr	x24, x20, #32
    bbcc:	mov	x0, x21
    bbd0:	mov	x1, x24
    bbd4:	and	w23, w23, #0xff
    bbd8:	bl	b6a4 <__sanitizer_get_allocated_size@@Base+0x11a4>
    bbdc:	mov	x19, x0
    bbe0:	cbnz	x0, bc2c <__sanitizer_get_allocated_size@@Base+0x172c>
    bbe4:	add	x0, x21, #0x80, lsl #12
    bbe8:	str	x0, [sp, #72]
    bbec:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    bbf0:	mov	x1, x24
    bbf4:	mov	x0, x21
    bbf8:	bl	b6a4 <__sanitizer_get_allocated_size@@Base+0x11a4>
    bbfc:	mov	x19, x0
    bc00:	cbnz	x0, bc24 <__sanitizer_get_allocated_size@@Base+0x1724>
    bc04:	mov	w2, #0x0                   	// #0
    bc08:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bc0c:	mov	x0, #0x1000                	// #4096
    bc10:	add	x1, x1, #0xaf4
    bc14:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    bc18:	dmb	ish
    bc1c:	mov	x19, x0
    bc20:	str	x0, [x21, x24, lsl #3]
    bc24:	add	x0, sp, #0x48
    bc28:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    bc2c:	and	x22, x22, #0xfff
    bc30:	ldrb	w4, [x19, x22]
    bc34:	cbz	x4, bc54 <__sanitizer_get_allocated_size@@Base+0x1754>
    bc38:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bc3c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bc40:	add	x2, x2, #0xb04
    bc44:	add	x0, x0, #0x94e
    bc48:	mov	x3, #0x0                   	// #0
    bc4c:	mov	w1, #0x42                  	// #66
    bc50:	b	bb9c <__sanitizer_get_allocated_size@@Base+0x169c>
    bc54:	strb	w23, [x19, x22]
    bc58:	mov	x0, x20
    bc5c:	ldp	x21, x22, [sp, #16]
    bc60:	ldp	x23, x24, [sp, #32]
    bc64:	ldr	x30, [sp, #48]
    bc68:	ldp	x19, x20, [sp], #80
    bc6c:	ret
    bc70:	stp	x19, x20, [sp, #-96]!
    bc74:	mov	x20, x2
    bc78:	mov	x19, #0x0                   	// #0
    bc7c:	stp	x23, x24, [sp, #32]
    bc80:	mov	x24, x0
    bc84:	mov	x23, x6
    bc88:	ldr	x0, [x4]
    bc8c:	stp	x21, x22, [sp, #16]
    bc90:	mov	x22, x1
    bc94:	mov	x21, x4
    bc98:	stp	x25, x26, [sp, #48]
    bc9c:	mov	x25, x5
    bca0:	mov	x26, x7
    bca4:	stp	x27, x28, [sp, #64]
    bca8:	add	x27, x1, x3, lsl #10
    bcac:	mov	x28, #0x1                   	// #1
    bcb0:	str	x30, [sp, #80]
    bcb4:	cmp	x19, x26
    bcb8:	b.eq	bd40 <__sanitizer_get_allocated_size@@Base+0x1840>  // b.none
    bcbc:	cbnz	x0, bcd4 <__sanitizer_get_allocated_size@@Base+0x17d4>
    bcc0:	ldr	x2, [x27, #24]
    bcc4:	cbnz	x2, bd18 <__sanitizer_get_allocated_size@@Base+0x1818>
    bcc8:	ldr	x0, [x23, x19, lsl #3]
    bccc:	cbz	x0, bd64 <__sanitizer_get_allocated_size@@Base+0x1864>
    bcd0:	str	xzr, [x0, #8]
    bcd4:	ldr	x1, [x0, #8]
    bcd8:	ldr	x3, [x23, x19, lsl #3]
    bcdc:	add	x2, x1, #0x1
    bce0:	add	x1, x1, #0x2
    bce4:	str	x2, [x0, #8]
    bce8:	cmp	x25, x2
    bcec:	str	x3, [x0, x1, lsl #3]
    bcf0:	b.ne	bd10 <__sanitizer_get_allocated_size@@Base+0x1810>  // b.any
    bcf4:	mov	x8, x20
    bcf8:	ldr	x1, [x8, #8]!
    bcfc:	str	xzr, [x0]
    bd00:	cbnz	x1, bd28 <__sanitizer_get_allocated_size@@Base+0x1828>
    bd04:	stp	x0, x0, [x8, #8]
    bd08:	str	x28, [x20, #8]
    bd0c:	mov	x0, #0x0                   	// #0
    bd10:	add	x19, x19, #0x1
    bd14:	b	bcb4 <__sanitizer_get_allocated_size@@Base+0x17b4>
    bd18:	mov	x1, x24
    bd1c:	mov	x0, x22
    bd20:	bl	c0c4 <__sanitizer_get_allocated_size@@Base+0x1bc4>
    bd24:	b	bccc <__sanitizer_get_allocated_size@@Base+0x17cc>
    bd28:	ldr	x2, [x8, #16]
    bd2c:	add	x1, x1, #0x1
    bd30:	str	x0, [x2]
    bd34:	str	x0, [x8, #16]
    bd38:	str	x1, [x20, #8]
    bd3c:	b	bd0c <__sanitizer_get_allocated_size@@Base+0x180c>
    bd40:	str	x0, [x21]
    bd44:	mov	w0, #0x1                   	// #1
    bd48:	ldp	x21, x22, [sp, #16]
    bd4c:	ldp	x23, x24, [sp, #32]
    bd50:	ldp	x25, x26, [sp, #48]
    bd54:	ldp	x27, x28, [sp, #64]
    bd58:	ldr	x30, [sp, #80]
    bd5c:	ldp	x19, x20, [sp], #96
    bd60:	ret
    bd64:	mov	w0, #0x0                   	// #0
    bd68:	b	bd48 <__sanitizer_get_allocated_size@@Base+0x1848>
    bd6c:	stp	x19, x20, [sp, #-496]!
    bd70:	stp	x21, x22, [sp, #16]
    bd74:	mov	x21, x3
    bd78:	stp	x23, x24, [sp, #32]
    bd7c:	mov	x24, x0
    bd80:	mov	x23, x4
    bd84:	stp	x25, x26, [sp, #48]
    bd88:	mov	x25, x2
    bd8c:	mov	x2, x4
    bd90:	stp	x27, x28, [sp, #64]
    bd94:	str	x30, [sp, #80]
    bd98:	bl	bb30 <__sanitizer_get_allocated_size@@Base+0x1630>
    bd9c:	cbnz	x0, bdc0 <__sanitizer_get_allocated_size@@Base+0x18c0>
    bda0:	mov	w0, #0x0                   	// #0
    bda4:	ldp	x21, x22, [sp, #16]
    bda8:	ldp	x23, x24, [sp, #32]
    bdac:	ldp	x25, x26, [sp, #48]
    bdb0:	ldp	x27, x28, [sp, #64]
    bdb4:	ldr	x30, [sp, #80]
    bdb8:	ldp	x19, x20, [sp], #496
    bdbc:	ret
    bdc0:	mov	x20, x0
    bdc4:	mov	x0, x23
    bdc8:	bl	b250 <__sanitizer_get_allocated_size@@Base+0xd50>
    bdcc:	mov	x22, x0
    bdd0:	add	x0, x0, #0x10
    bdd4:	mov	x26, #0x100000              	// #1048576
    bdd8:	udiv	x26, x26, x0
    bddc:	cbz	x22, be6c <__sanitizer_get_allocated_size@@Base+0x196c>
    bde0:	mov	w5, #0x4000                	// #16384
    bde4:	mov	x0, #0x40                  	// #64
    bde8:	udiv	w5, w5, w22
    bdec:	cmp	x5, #0x40
    bdf0:	csel	x5, x5, x0, ls  // ls = plast
    bdf4:	cmp	x5, #0x0
    bdf8:	csinc	x5, x5, xzr, ne  // ne = any
    bdfc:	cmp	x5, #0x3e
    be00:	madd	x26, x22, x26, x20
    be04:	mov	x19, #0x3e                  	// #62
    be08:	add	x27, sp, #0x70
    be0c:	csel	x19, x5, x19, ls  // ls = plast
    be10:	add	x28, sp, #0x68
    be14:	mov	x0, #0x0                   	// #0
    be18:	str	xzr, [sp, #104]
    be1c:	cmp	x20, x26
    be20:	b.cs	be74 <__sanitizer_get_allocated_size@@Base+0x1974>  // b.hs, b.nlast
    be24:	str	x20, [x27, x0, lsl #3]
    be28:	add	x7, x0, #0x1
    be2c:	cmp	x0, #0x2f
    be30:	b.ne	be60 <__sanitizer_get_allocated_size@@Base+0x1960>  // b.any
    be34:	mov	x6, x27
    be38:	mov	x5, x19
    be3c:	mov	x4, x28
    be40:	mov	x3, x23
    be44:	mov	x2, x21
    be48:	mov	x1, x25
    be4c:	mov	x0, x24
    be50:	bl	bc70 <__sanitizer_get_allocated_size@@Base+0x1770>
    be54:	tst	w0, #0xff
    be58:	b.eq	bda0 <__sanitizer_get_allocated_size@@Base+0x18a0>  // b.none
    be5c:	mov	x7, #0x0                   	// #0
    be60:	add	x20, x20, x22
    be64:	mov	x0, x7
    be68:	b	be1c <__sanitizer_get_allocated_size@@Base+0x191c>
    be6c:	mov	x5, #0x0                   	// #0
    be70:	b	bdfc <__sanitizer_get_allocated_size@@Base+0x18fc>
    be74:	cbnz	x0, be88 <__sanitizer_get_allocated_size@@Base+0x1988>
    be78:	ldr	x0, [sp, #104]
    be7c:	cbnz	x0, beb8 <__sanitizer_get_allocated_size@@Base+0x19b8>
    be80:	mov	w0, #0x1                   	// #1
    be84:	b	bda4 <__sanitizer_get_allocated_size@@Base+0x18a4>
    be88:	mov	x7, x0
    be8c:	add	x6, sp, #0x70
    be90:	mov	x5, x19
    be94:	add	x4, sp, #0x68
    be98:	mov	x3, x23
    be9c:	mov	x2, x21
    bea0:	mov	x1, x25
    bea4:	mov	x0, x24
    bea8:	bl	bc70 <__sanitizer_get_allocated_size@@Base+0x1770>
    beac:	tst	w0, #0xff
    beb0:	b.ne	be78 <__sanitizer_get_allocated_size@@Base+0x1978>  // b.any
    beb4:	b	bda0 <__sanitizer_get_allocated_size@@Base+0x18a0>
    beb8:	ldr	x1, [x0, #8]
    bebc:	cbnz	x1, bee0 <__sanitizer_get_allocated_size@@Base+0x19e0>
    bec0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bec4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bec8:	add	x2, x2, #0x67d
    becc:	add	x0, x0, #0x694
    bed0:	mov	x4, #0x0                   	// #0
    bed4:	mov	x3, #0x0                   	// #0
    bed8:	mov	w1, #0x169                 	// #361
    bedc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    bee0:	mov	x1, x21
    bee4:	ldr	x2, [x1, #8]!
    bee8:	str	xzr, [x0]
    beec:	cbnz	x2, bf00 <__sanitizer_get_allocated_size@@Base+0x1a00>
    bef0:	stp	x0, x0, [x1, #8]
    bef4:	mov	x0, #0x1                   	// #1
    bef8:	str	x0, [x21, #8]
    befc:	b	bda4 <__sanitizer_get_allocated_size@@Base+0x18a4>
    bf00:	ldr	x3, [x1, #16]
    bf04:	add	x2, x2, #0x1
    bf08:	str	x0, [x3]
    bf0c:	str	x0, [x1, #16]
    bf10:	str	x2, [x21, #8]
    bf14:	b	be80 <__sanitizer_get_allocated_size@@Base+0x1980>
    bf18:	stp	x19, x20, [sp, #-80]!
    bf1c:	mov	x20, x0
    bf20:	mov	x19, x3
    bf24:	stp	x21, x22, [sp, #16]
    bf28:	stp	x23, x24, [sp, #32]
    bf2c:	mov	x23, x1
    bf30:	mov	x1, #0x2001                	// #8193
    bf34:	add	x21, x3, x1
    bf38:	mov	x24, x2
    bf3c:	stp	x25, x30, [sp, #48]
    bf40:	lsl	x22, x21, #6
    bf44:	add	x22, x22, #0x8
    bf48:	add	x21, x0, x21, lsl #6
    bf4c:	mov	x0, x21
    bf50:	str	x21, [sp, #72]
    bf54:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    bf58:	add	x25, x20, x22
    bf5c:	ldr	x0, [x20, x22]
    bf60:	cbz	x0, bf90 <__sanitizer_get_allocated_size@@Base+0x1a90>
    bf64:	ldr	x0, [x20, x22]
    bf68:	ldr	x21, [x25, #8]
    bf6c:	cbnz	x0, bfd4 <__sanitizer_get_allocated_size@@Base+0x1ad4>
    bf70:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bf74:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    bf78:	add	x2, x2, #0xb25
    bf7c:	add	x0, x0, #0xb39
    bf80:	mov	x4, #0x0                   	// #0
    bf84:	mov	x3, #0x0                   	// #0
    bf88:	mov	w1, #0x40                  	// #64
    bf8c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    bf90:	mov	x4, x19
    bf94:	mov	x3, x21
    bf98:	mov	x2, x24
    bf9c:	mov	x1, x23
    bfa0:	mov	x0, x20
    bfa4:	bl	bd6c <__sanitizer_get_allocated_size@@Base+0x186c>
    bfa8:	tst	w0, #0xff
    bfac:	b.ne	bf64 <__sanitizer_get_allocated_size@@Base+0x1a64>  // b.any
    bfb0:	mov	x21, #0x0                   	// #0
    bfb4:	add	x0, sp, #0x48
    bfb8:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    bfbc:	mov	x0, x21
    bfc0:	ldp	x21, x22, [sp, #16]
    bfc4:	ldp	x23, x24, [sp, #32]
    bfc8:	ldp	x25, x30, [sp, #48]
    bfcc:	ldp	x19, x20, [sp], #80
    bfd0:	ret
    bfd4:	add	x4, x20, x19, lsl #6
    bfd8:	add	x4, x4, #0x80, lsl #12
    bfdc:	ldr	x1, [x4, #80]
    bfe0:	ldr	x1, [x1]
    bfe4:	str	x1, [x4, #80]
    bfe8:	cbnz	x1, bff0 <__sanitizer_get_allocated_size@@Base+0x1af0>
    bfec:	str	xzr, [x4, #88]
    bff0:	sub	x0, x0, #0x1
    bff4:	str	x0, [x4, #72]
    bff8:	b	bfb4 <__sanitizer_get_allocated_size@@Base+0x1ab4>
    bffc:	stp	x19, x20, [sp, #-48]!
    c000:	mov	x19, x0
    c004:	mov	x20, x3
    c008:	stp	x21, x22, [sp, #16]
    c00c:	mov	x21, x1
    c010:	mov	x22, x2
    c014:	ldr	x1, [x1, #8]
    c018:	str	x30, [sp, #32]
    c01c:	cbnz	x1, c024 <__sanitizer_get_allocated_size@@Base+0x1b24>
    c020:	bl	a404 <__sanitizer_get_heap_size@@Base+0x20>
    c024:	mov	x3, x20
    c028:	mov	x0, #0xd800                	// #55296
    c02c:	mov	x2, x19
    c030:	add	x1, x19, x0
    c034:	mov	x0, x22
    c038:	bl	bf18 <__sanitizer_get_allocated_size@@Base+0x1a18>
    c03c:	mov	x3, x0
    c040:	cbz	x0, c0b0 <__sanitizer_get_allocated_size@@Base+0x1bb0>
    c044:	ldr	x1, [x3, #8]
    c048:	mov	x0, #0x0                   	// #0
    c04c:	cbz	x1, c090 <__sanitizer_get_allocated_size@@Base+0x1b90>
    c050:	add	x5, x3, #0x10
    c054:	add	x2, x21, #0x20
    c058:	ldr	x4, [x5, x0, lsl #3]
    c05c:	str	x4, [x2, x0, lsl #3]
    c060:	add	x0, x0, #0x1
    c064:	cmp	x1, x0
    c068:	b.ne	c058 <__sanitizer_get_allocated_size@@Base+0x1b58>  // b.any
    c06c:	add	x20, x19, x20, lsl #10
    c070:	ldr	x2, [x20, #24]
    c074:	str	x1, [x21]
    c078:	cbz	x2, c088 <__sanitizer_get_allocated_size@@Base+0x1b88>
    c07c:	mov	x1, x22
    c080:	mov	x0, x19
    c084:	bl	c254 <__sanitizer_get_allocated_size@@Base+0x1d54>
    c088:	mov	w0, #0x1                   	// #1
    c08c:	b	c0b4 <__sanitizer_get_allocated_size@@Base+0x1bb4>
    c090:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c094:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c098:	add	x2, x2, #0x67d
    c09c:	add	x0, x0, #0xb74
    c0a0:	mov	x4, #0x0                   	// #0
    c0a4:	mov	x3, #0x0                   	// #0
    c0a8:	mov	w1, #0xf6                  	// #246
    c0ac:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c0b0:	mov	w0, #0x0                   	// #0
    c0b4:	ldp	x21, x22, [sp, #16]
    c0b8:	ldr	x30, [sp, #32]
    c0bc:	ldp	x19, x20, [sp], #48
    c0c0:	ret
    c0c4:	stp	x19, x20, [sp, #-32]!
    c0c8:	stp	x21, x30, [sp, #16]
    c0cc:	cbnz	x2, c0f0 <__sanitizer_get_allocated_size@@Base+0x1bf0>
    c0d0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c0d4:	add	x2, x2, #0xbc0
    c0d8:	mov	x4, #0x0                   	// #0
    c0dc:	mov	x3, #0x0                   	// #0
    c0e0:	mov	w1, #0x9f                  	// #159
    c0e4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c0e8:	add	x0, x0, #0xb74
    c0ec:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c0f0:	mov	x19, x2
    c0f4:	cmp	x2, #0x35
    c0f8:	b.ls	c114 <__sanitizer_get_allocated_size@@Base+0x1c14>  // b.plast
    c0fc:	mov	x3, x2
    c100:	mov	x4, #0x36                  	// #54
    c104:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c108:	mov	w1, #0xa0                  	// #160
    c10c:	add	x2, x2, #0xbd8
    c110:	b	c0e4 <__sanitizer_get_allocated_size@@Base+0x1be4>
    c114:	lsl	x21, x2, #10
    c118:	mov	x4, x1
    c11c:	add	x1, x0, x2, lsl #10
    c120:	mov	x20, x0
    c124:	ldr	x2, [x0, x21]
    c128:	cbz	x2, c17c <__sanitizer_get_allocated_size@@Base+0x1c7c>
    c12c:	ldr	x3, [x20, x21]
    c130:	sub	x0, x3, #0x1
    c134:	str	x0, [x20, x21]
    c138:	add	x0, x0, x19, lsl #7
    c13c:	add	x19, x3, x19, lsl #7
    c140:	add	x19, x19, #0x2
    c144:	add	x0, x0, #0x4
    c148:	ldr	x1, [x20, x19, lsl #3]
    c14c:	ldr	x0, [x20, x0, lsl #3]
    c150:	prfm	pldl1keep, [x1]
    c154:	mov	x1, #0xd800                	// #55296
    c158:	add	x2, x20, x1
    c15c:	add	x20, x20, x21
    c160:	ldr	x1, [x2, #16]
    c164:	ldr	x3, [x20, #16]
    c168:	add	x1, x1, x3
    c16c:	str	x1, [x2, #16]
    c170:	ldp	x21, x30, [sp, #16]
    c174:	ldp	x19, x20, [sp], #32
    c178:	ret
    c17c:	mov	x3, x19
    c180:	mov	x2, x4
    c184:	bl	bffc <__sanitizer_get_allocated_size@@Base+0x1afc>
    c188:	tst	w0, #0xff
    c18c:	b.ne	c12c <__sanitizer_get_allocated_size@@Base+0x1c2c>  // b.any
    c190:	mov	x0, #0x0                   	// #0
    c194:	b	c170 <__sanitizer_get_allocated_size@@Base+0x1c70>
    c198:	stp	x19, x20, [sp, #-48]!
    c19c:	ldp	x4, x20, [x1]
    c1a0:	stp	x21, x22, [sp, #16]
    c1a4:	mov	x21, x1
    c1a8:	add	x1, x0, x3, lsl #10
    c1ac:	mov	x22, x2
    c1b0:	stp	x23, x30, [sp, #32]
    c1b4:	mov	x23, x3
    c1b8:	lsr	x20, x20, #1
    c1bc:	ldr	x2, [x1, #24]
    c1c0:	cmp	x20, x4
    c1c4:	csel	x20, x20, x4, ls  // ls = plast
    c1c8:	sub	x4, x4, x20
    c1cc:	add	x19, x4, #0x4
    c1d0:	cbnz	x2, c1f8 <__sanitizer_get_allocated_size@@Base+0x1cf8>
    c1d4:	ldr	x2, [x21, x19, lsl #3]
    c1d8:	cbnz	x2, c208 <__sanitizer_get_allocated_size@@Base+0x1d08>
    c1dc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c1e0:	ldr	x0, [x0, #4008]
    c1e4:	ldr	x1, [x0]
    c1e8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c1ec:	add	x0, x0, #0xbf7
    c1f0:	bl	18b74 <OnPrint@@Base+0x30c>
    c1f4:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    c1f8:	mov	x1, x22
    c1fc:	bl	c0c4 <__sanitizer_get_allocated_size@@Base+0x1bc4>
    c200:	mov	x2, x0
    c204:	b	c1d8 <__sanitizer_get_allocated_size@@Base+0x1cd8>
    c208:	add	x19, x21, x19, lsl #3
    c20c:	add	x1, x2, #0x10
    c210:	mov	x0, #0x0                   	// #0
    c214:	str	x20, [x2, #8]
    c218:	cmp	x20, x0
    c21c:	b.eq	c230 <__sanitizer_get_allocated_size@@Base+0x1d30>  // b.none
    c220:	ldr	x3, [x19, x0, lsl #3]
    c224:	str	x3, [x1, x0, lsl #3]
    c228:	add	x0, x0, #0x1
    c22c:	b	c218 <__sanitizer_get_allocated_size@@Base+0x1d18>
    c230:	ldr	x0, [x21]
    c234:	mov	x1, x23
    c238:	ldp	x23, x30, [sp, #32]
    c23c:	sub	x20, x0, x20
    c240:	str	x20, [x21]
    c244:	mov	x0, x22
    c248:	ldp	x21, x22, [sp, #16]
    c24c:	ldp	x19, x20, [sp], #48
    c250:	b	b1a4 <__sanitizer_get_allocated_size@@Base+0xca4>
    c254:	stp	x19, x20, [sp, #-64]!
    c258:	stp	x21, x22, [sp, #16]
    c25c:	stp	x23, x24, [sp, #32]
    c260:	str	x30, [sp, #48]
    c264:	cbnz	x2, c288 <__sanitizer_get_allocated_size@@Base+0x1d88>
    c268:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c26c:	add	x2, x2, #0xbc0
    c270:	mov	x4, #0x0                   	// #0
    c274:	mov	x3, #0x0                   	// #0
    c278:	mov	w1, #0xae                  	// #174
    c27c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c280:	add	x0, x0, #0xb74
    c284:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c288:	mov	x19, x2
    c28c:	cmp	x2, #0x35
    c290:	b.ls	c2ac <__sanitizer_get_allocated_size@@Base+0x1dac>  // b.plast
    c294:	mov	x3, x2
    c298:	mov	x4, #0x36                  	// #54
    c29c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c2a0:	mov	w1, #0xaf                  	// #175
    c2a4:	add	x2, x2, #0xbd8
    c2a8:	b	c27c <__sanitizer_get_allocated_size@@Base+0x1d7c>
    c2ac:	add	x23, x0, x2, lsl #10
    c2b0:	mov	x24, x1
    c2b4:	mov	x20, x0
    c2b8:	mov	x22, x3
    c2bc:	lsl	x21, x2, #10
    c2c0:	ldr	x1, [x23, #8]
    c2c4:	cbnz	x1, c2cc <__sanitizer_get_allocated_size@@Base+0x1dcc>
    c2c8:	bl	a404 <__sanitizer_get_heap_size@@Base+0x20>
    c2cc:	ldr	x1, [x20, x21]
    c2d0:	ldr	x0, [x23, #8]
    c2d4:	cmp	x1, x0
    c2d8:	b.ne	c2f0 <__sanitizer_get_allocated_size@@Base+0x1df0>  // b.any
    c2dc:	mov	x3, x19
    c2e0:	mov	x2, x24
    c2e4:	mov	x1, x23
    c2e8:	mov	x0, x20
    c2ec:	bl	c198 <__sanitizer_get_allocated_size@@Base+0x1c98>
    c2f0:	ldr	x2, [x20, x21]
    c2f4:	ldp	x23, x24, [sp, #32]
    c2f8:	add	x0, x2, #0x1
    c2fc:	add	x19, x2, x19, lsl #7
    c300:	str	x0, [x20, x21]
    c304:	add	x19, x19, #0x4
    c308:	mov	x0, #0xd800                	// #55296
    c30c:	add	x1, x20, x0
    c310:	ldr	x30, [sp, #48]
    c314:	str	x22, [x20, x19, lsl #3]
    c318:	add	x20, x20, x21
    c31c:	ldr	x0, [x1, #16]
    c320:	ldr	x2, [x20, #16]
    c324:	ldp	x21, x22, [sp, #16]
    c328:	sub	x0, x0, x2
    c32c:	str	x0, [x1, #16]
    c330:	ldp	x19, x20, [sp], #64
    c334:	ret
    c338:	cbz	x2, c474 <__sanitizer_get_allocated_size@@Base+0x1f74>
    c33c:	stp	x19, x20, [sp, #-48]!
    c340:	mov	x19, x0
    c344:	mov	x20, x1
    c348:	mov	x1, x2
    c34c:	stp	x21, x30, [sp, #16]
    c350:	mov	x21, x2
    c354:	bl	b77c <__sanitizer_get_allocated_size@@Base+0x127c>
    c358:	tst	w0, #0xff
    c35c:	b.eq	c38c <__sanitizer_get_allocated_size@@Base+0x1e8c>  // b.none
    c360:	mov	x1, x21
    c364:	mov	x0, x19
    c368:	bl	b738 <__sanitizer_get_allocated_size@@Base+0x1238>
    c36c:	mov	x2, x0
    c370:	mov	x3, x21
    c374:	mov	x1, x19
    c378:	mov	x0, x20
    c37c:	bl	c254 <__sanitizer_get_allocated_size@@Base+0x1d54>
    c380:	ldp	x21, x30, [sp, #16]
    c384:	ldp	x19, x20, [sp], #48
    c388:	ret
    c38c:	add	x20, x19, #0x80, lsl #12
    c390:	mov	x1, x21
    c394:	add	x20, x20, #0xdc0
    c398:	mov	x0, x20
    c39c:	bl	b28c <__sanitizer_get_allocated_size@@Base+0xd8c>
    c3a0:	mov	x21, x0
    c3a4:	add	x0, x20, #0x268
    c3a8:	str	x0, [sp, #40]
    c3ac:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    c3b0:	ldr	x0, [x20, #8]
    c3b4:	mov	x1, x20
    c3b8:	ldr	x3, [x21, #24]
    c3bc:	lsl	x5, x3, #3
    c3c0:	ldr	x20, [x0, x5]
    c3c4:	cmp	x20, x21
    c3c8:	b.eq	c3ec <__sanitizer_get_allocated_size@@Base+0x1eec>  // b.none
    c3cc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c3d0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c3d4:	mov	x4, x21
    c3d8:	mov	x3, x20
    c3dc:	add	x2, x2, #0xc43
    c3e0:	add	x0, x0, #0x544
    c3e4:	mov	w1, #0x88                  	// #136
    c3e8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c3ec:	ldr	x4, [x1, #56]
    c3f0:	cmp	x3, x4
    c3f4:	b.cc	c410 <__sanitizer_get_allocated_size@@Base+0x1f10>  // b.lo, b.ul, b.last
    c3f8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c3fc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c400:	add	x2, x2, #0xc5d
    c404:	add	x0, x0, #0x544
    c408:	mov	w1, #0x89                  	// #137
    c40c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c410:	sub	x4, x4, #0x1
    c414:	add	x19, x19, #0x81, lsl #12
    c418:	ldr	x2, [x0, x4, lsl #3]
    c41c:	str	x4, [x1, #56]
    c420:	str	x2, [x0, x5]
    c424:	ldr	x0, [x1, #80]
    c428:	str	x3, [x2, #24]
    c42c:	ldr	x2, [x20, #8]
    c430:	add	x0, x0, #0x1
    c434:	str	x0, [x1, #80]
    c438:	ldr	x0, [x1, #88]
    c43c:	strb	wzr, [x1, #64]
    c440:	sub	x0, x0, x2
    c444:	str	x0, [x1, #88]
    c448:	ldr	x0, [x19, #64]
    c44c:	sub	x0, x0, x2
    c450:	str	x0, [x19, #64]
    c454:	ldr	x0, [x19, #72]
    c458:	sub	x0, x0, x2
    c45c:	str	x0, [x19, #72]
    c460:	add	x0, sp, #0x28
    c464:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    c468:	ldp	x0, x1, [x20]
    c46c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    c470:	b	c380 <__sanitizer_get_allocated_size@@Base+0x1e80>
    c474:	ret
    c478:	stp	x19, x20, [sp, #-48]!
    c47c:	cmp	x2, #0x0
    c480:	csinc	x20, x2, xzr, ne  // ne = any
    c484:	stp	x21, x22, [sp, #16]
    c488:	cmn	x20, x3
    c48c:	str	x30, [sp, #32]
    c490:	b.cc	c4c4 <__sanitizer_get_allocated_size@@Base+0x1fc4>  // b.lo, b.ul, b.last
    c494:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c498:	mov	x2, x20
    c49c:	ldr	x0, [x0, #4008]
    c4a0:	ldr	x1, [x0]
    c4a4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c4a8:	add	x0, x0, #0xc75
    c4ac:	bl	18b74 <OnPrint@@Base+0x30c>
    c4b0:	mov	x0, #0x0                   	// #0
    c4b4:	ldp	x21, x22, [sp, #16]
    c4b8:	ldr	x30, [sp, #32]
    c4bc:	ldp	x19, x20, [sp], #48
    c4c0:	ret
    c4c4:	mov	x22, x0
    c4c8:	mov	x21, x1
    c4cc:	mov	x19, x3
    c4d0:	cmp	x3, #0x8
    c4d4:	b.ls	c540 <__sanitizer_get_allocated_size@@Base+0x2040>  // b.plast
    c4d8:	mov	x1, x3
    c4dc:	mov	x0, x20
    c4e0:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    c4e4:	cmp	x19, #0x20, lsl #12
    c4e8:	mov	x1, #0x20000               	// #131072
    c4ec:	ccmp	x0, x1, #0x2, ls  // ls = plast
    c4f0:	b.hi	c554 <__sanitizer_get_allocated_size@@Base+0x2054>  // b.pmore
    c4f4:	cmp	x0, #0x100
    c4f8:	b.hi	c548 <__sanitizer_get_allocated_size@@Base+0x2048>  // b.pmore
    c4fc:	add	x2, x0, #0xf
    c500:	lsr	x2, x2, #4
    c504:	mov	x1, x22
    c508:	mov	x0, x21
    c50c:	bl	c0c4 <__sanitizer_get_allocated_size@@Base+0x1bc4>
    c510:	cmp	x19, #0x8
    c514:	b.ls	c4b4 <__sanitizer_get_allocated_size@@Base+0x1fb4>  // b.plast
    c518:	sub	x19, x19, #0x1
    c51c:	ands	x3, x0, x19
    c520:	b.eq	c4b4 <__sanitizer_get_allocated_size@@Base+0x1fb4>  // b.none
    c524:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c528:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c52c:	add	x2, x2, #0xcd5
    c530:	add	x0, x0, #0xd10
    c534:	mov	x4, #0x0                   	// #0
    c538:	mov	w1, #0x42                  	// #66
    c53c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c540:	mov	x0, x20
    c544:	b	c4e4 <__sanitizer_get_allocated_size@@Base+0x1fe4>
    c548:	bl	a1a0 <__sanitizer_print_stack_trace@@Base+0x100>
    c54c:	mov	x2, x0
    c550:	b	c504 <__sanitizer_get_allocated_size@@Base+0x2004>
    c554:	add	x1, x22, #0x81, lsl #12
    c558:	add	x0, x22, #0x80, lsl #12
    c55c:	mov	x3, x19
    c560:	mov	x2, x20
    c564:	add	x1, x1, #0x30
    c568:	add	x0, x0, #0xdc0
    c56c:	bl	b2c8 <__sanitizer_get_allocated_size@@Base+0xdc8>
    c570:	b	c510 <__sanitizer_get_allocated_size@@Base+0x2010>

000000000000c574 <__interceptor_mallopt@@Base>:
    c574:	mov	w0, #0xffffffff            	// #-1
    c578:	ret

000000000000c57c <__interceptor_malloc@@Base>:
    c57c:	sub	sp, sp, #0x860
    c580:	stp	x29, x30, [sp]
    c584:	mov	x29, sp
    c588:	stp	x19, x20, [sp, #16]
    c58c:	mov	x20, x0
    c590:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c594:	stp	x21, x22, [sp, #32]
    c598:	ldr	x0, [x0, #4048]
    c59c:	ldrb	w0, [x0]
    c5a0:	str	x23, [sp, #48]
    c5a4:	cbz	w0, c5c8 <__interceptor_malloc@@Base+0x4c>
    c5a8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c5ac:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c5b0:	add	x2, x2, #0x4d1
    c5b4:	add	x0, x0, #0xd59
    c5b8:	mov	x4, #0x0                   	// #0
    c5bc:	mov	x3, #0x0                   	// #0
    c5c0:	mov	w1, #0x34                  	// #52
    c5c4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c5c8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c5cc:	ldr	x0, [x0, #3592]
    c5d0:	ldrb	w0, [x0]
    c5d4:	cbnz	w0, c5dc <__interceptor_malloc@@Base+0x60>
    c5d8:	bl	6ba0 <__lsan_init@plt>
    c5dc:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c5e0:	add	x21, x29, #0x48
    c5e4:	add	x0, x21, #0x10
    c5e8:	stp	x0, xzr, [x29, #72]
    c5ec:	ldr	x19, [x19, #4040]
    c5f0:	str	xzr, [x29, #2136]
    c5f4:	ldrsw	x23, [x19, #36]
    c5f8:	bl	1a114 <OnPrint@@Base+0x18ac>
    c5fc:	ldrb	w19, [x19, #34]
    c600:	mov	x22, x0
    c604:	cbnz	w19, c650 <__interceptor_malloc@@Base+0xd4>
    c608:	mov	x6, #0x0                   	// #0
    c60c:	mov	x5, #0x0                   	// #0
    c610:	mov	w7, w19
    c614:	mov	x3, x29
    c618:	mov	x2, x22
    c61c:	mov	x4, #0x0                   	// #0
    c620:	mov	w1, w23
    c624:	mov	x0, x21
    c628:	bl	1a34c <OnPrint@@Base+0x1ae4>
    c62c:	mov	x1, x21
    c630:	mov	x0, x20
    c634:	bl	ace4 <__sanitizer_get_allocated_size@@Base+0x7e4>
    c638:	ldp	x29, x30, [sp]
    c63c:	ldp	x19, x20, [sp, #16]
    c640:	ldp	x21, x22, [sp, #32]
    c644:	ldr	x23, [sp, #48]
    c648:	add	sp, sp, #0x860
    c64c:	ret
    c650:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    c654:	cbz	x0, c608 <__interceptor_malloc@@Base+0x8c>
    c658:	ldp	x6, x5, [x0, #144]
    c65c:	b	c610 <__interceptor_malloc@@Base+0x94>

000000000000c660 <__interceptor_cfree@@Base>:
    c660:	stp	x19, x30, [sp, #-16]!
    c664:	mov	x19, x0
    c668:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c66c:	ldr	x0, [x0, #4048]
    c670:	ldrb	w0, [x0]
    c674:	cbz	w0, c698 <__interceptor_cfree@@Base+0x38>
    c678:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c67c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c680:	add	x2, x2, #0x4d1
    c684:	add	x0, x0, #0xd59
    c688:	mov	x4, #0x0                   	// #0
    c68c:	mov	x3, #0x0                   	// #0
    c690:	mov	w1, #0x3a                  	// #58
    c694:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c698:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c69c:	ldr	x0, [x0, #3592]
    c6a0:	ldrb	w0, [x0]
    c6a4:	cbnz	w0, c6ac <__interceptor_cfree@@Base+0x4c>
    c6a8:	bl	6ba0 <__lsan_init@plt>
    c6ac:	mov	x0, x19
    c6b0:	ldp	x19, x30, [sp], #16
    c6b4:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000c6b8 <__interceptor_realloc@@Base>:
    c6b8:	sub	sp, sp, #0x860
    c6bc:	stp	x29, x30, [sp]
    c6c0:	mov	x29, sp
    c6c4:	stp	x19, x20, [sp, #16]
    c6c8:	mov	x20, x0
    c6cc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c6d0:	stp	x21, x22, [sp, #32]
    c6d4:	ldr	x0, [x0, #4048]
    c6d8:	stp	x23, x24, [sp, #48]
    c6dc:	ldrb	w0, [x0]
    c6e0:	cbz	w0, c704 <__interceptor_realloc@@Base+0x4c>
    c6e4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c6e8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c6ec:	add	x2, x2, #0x4d1
    c6f0:	add	x0, x0, #0xd59
    c6f4:	mov	x4, #0x0                   	// #0
    c6f8:	mov	x3, #0x0                   	// #0
    c6fc:	mov	w1, #0x50                  	// #80
    c700:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c704:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c708:	mov	x21, x1
    c70c:	ldr	x0, [x0, #3592]
    c710:	ldrb	w0, [x0]
    c714:	cbnz	w0, c71c <__interceptor_realloc@@Base+0x64>
    c718:	bl	6ba0 <__lsan_init@plt>
    c71c:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c720:	add	x22, x29, #0x48
    c724:	add	x0, x22, #0x10
    c728:	stp	x0, xzr, [x29, #72]
    c72c:	ldr	x19, [x19, #4040]
    c730:	str	xzr, [x29, #2136]
    c734:	ldrsw	x24, [x19, #36]
    c738:	bl	1a114 <OnPrint@@Base+0x18ac>
    c73c:	ldrb	w19, [x19, #34]
    c740:	mov	x23, x0
    c744:	cbnz	w19, c794 <__interceptor_realloc@@Base+0xdc>
    c748:	mov	x6, #0x0                   	// #0
    c74c:	mov	x5, #0x0                   	// #0
    c750:	mov	w7, w19
    c754:	mov	x3, x29
    c758:	mov	x4, #0x0                   	// #0
    c75c:	mov	x2, x23
    c760:	mov	w1, w24
    c764:	mov	x0, x22
    c768:	bl	1a34c <OnPrint@@Base+0x1ae4>
    c76c:	mov	x2, x22
    c770:	mov	x1, x21
    c774:	mov	x0, x20
    c778:	bl	b058 <__sanitizer_get_allocated_size@@Base+0xb58>
    c77c:	ldp	x29, x30, [sp]
    c780:	ldp	x19, x20, [sp, #16]
    c784:	ldp	x21, x22, [sp, #32]
    c788:	ldp	x23, x24, [sp, #48]
    c78c:	add	sp, sp, #0x860
    c790:	ret
    c794:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    c798:	cbz	x0, c748 <__interceptor_realloc@@Base+0x90>
    c79c:	ldp	x6, x5, [x0, #144]
    c7a0:	b	c750 <__interceptor_realloc@@Base+0x98>

000000000000c7a4 <__interceptor_posix_memalign@@Base>:
    c7a4:	sub	sp, sp, #0x870
    c7a8:	stp	x29, x30, [sp]
    c7ac:	mov	x29, sp
    c7b0:	stp	x19, x20, [sp, #16]
    c7b4:	mov	x20, x0
    c7b8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c7bc:	stp	x21, x22, [sp, #32]
    c7c0:	ldr	x0, [x0, #4048]
    c7c4:	stp	x23, x24, [sp, #48]
    c7c8:	ldrb	w0, [x0]
    c7cc:	str	x25, [sp, #64]
    c7d0:	cbz	w0, c7f4 <__interceptor_posix_memalign@@Base+0x50>
    c7d4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c7d8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c7dc:	add	x2, x2, #0x4d1
    c7e0:	add	x0, x0, #0xd59
    c7e4:	mov	x4, #0x0                   	// #0
    c7e8:	mov	x3, #0x0                   	// #0
    c7ec:	mov	w1, #0x56                  	// #86
    c7f0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c7f4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c7f8:	mov	x21, x1
    c7fc:	mov	x22, x2
    c800:	ldr	x0, [x0, #3592]
    c804:	ldrb	w0, [x0]
    c808:	cbnz	w0, c810 <__interceptor_posix_memalign@@Base+0x6c>
    c80c:	bl	6ba0 <__lsan_init@plt>
    c810:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c814:	add	x23, x29, #0x58
    c818:	add	x0, x23, #0x10
    c81c:	stp	x0, xzr, [x29, #88]
    c820:	ldr	x19, [x19, #4040]
    c824:	str	xzr, [x29, #2152]
    c828:	ldrsw	x25, [x19, #36]
    c82c:	bl	1a114 <OnPrint@@Base+0x18ac>
    c830:	ldrb	w19, [x19, #34]
    c834:	mov	x24, x0
    c838:	cbnz	w19, c890 <__interceptor_posix_memalign@@Base+0xec>
    c83c:	mov	x6, #0x0                   	// #0
    c840:	mov	x5, #0x0                   	// #0
    c844:	mov	w7, w19
    c848:	mov	x4, #0x0                   	// #0
    c84c:	mov	x3, x29
    c850:	mov	x2, x24
    c854:	mov	w1, w25
    c858:	mov	x0, x23
    c85c:	bl	1a34c <OnPrint@@Base+0x1ae4>
    c860:	mov	x3, x23
    c864:	mov	x2, x22
    c868:	mov	x1, x21
    c86c:	mov	x0, x20
    c870:	bl	ab40 <__sanitizer_get_allocated_size@@Base+0x640>
    c874:	ldp	x29, x30, [sp]
    c878:	ldp	x19, x20, [sp, #16]
    c87c:	ldp	x21, x22, [sp, #32]
    c880:	ldp	x23, x24, [sp, #48]
    c884:	ldr	x25, [sp, #64]
    c888:	add	sp, sp, #0x870
    c88c:	ret
    c890:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    c894:	cbz	x0, c83c <__interceptor_posix_memalign@@Base+0x98>
    c898:	ldp	x6, x5, [x0, #144]
    c89c:	b	c844 <__interceptor_posix_memalign@@Base+0xa0>

000000000000c8a0 <__interceptor_valloc@@Base>:
    c8a0:	sub	sp, sp, #0x860
    c8a4:	stp	x29, x30, [sp]
    c8a8:	mov	x29, sp
    c8ac:	stp	x19, x20, [sp, #16]
    c8b0:	mov	x20, x0
    c8b4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c8b8:	stp	x21, x22, [sp, #32]
    c8bc:	ldr	x0, [x0, #4048]
    c8c0:	ldrb	w0, [x0]
    c8c4:	str	x23, [sp, #48]
    c8c8:	cbz	w0, c8ec <__interceptor_valloc@@Base+0x4c>
    c8cc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c8d0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c8d4:	add	x2, x2, #0x4d1
    c8d8:	add	x0, x0, #0xd59
    c8dc:	mov	x4, #0x0                   	// #0
    c8e0:	mov	x3, #0x0                   	// #0
    c8e4:	mov	w1, #0x5c                  	// #92
    c8e8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c8ec:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c8f0:	ldr	x0, [x0, #3592]
    c8f4:	ldrb	w0, [x0]
    c8f8:	cbnz	w0, c900 <__interceptor_valloc@@Base+0x60>
    c8fc:	bl	6ba0 <__lsan_init@plt>
    c900:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c904:	add	x21, x29, #0x48
    c908:	add	x0, x21, #0x10
    c90c:	stp	x0, xzr, [x29, #72]
    c910:	ldr	x19, [x19, #4040]
    c914:	str	xzr, [x29, #2136]
    c918:	ldrsw	x23, [x19, #36]
    c91c:	bl	1a114 <OnPrint@@Base+0x18ac>
    c920:	ldrb	w19, [x19, #34]
    c924:	mov	x22, x0
    c928:	cbnz	w19, c974 <__interceptor_valloc@@Base+0xd4>
    c92c:	mov	x6, #0x0                   	// #0
    c930:	mov	x5, #0x0                   	// #0
    c934:	mov	w7, w19
    c938:	mov	x3, x29
    c93c:	mov	x2, x22
    c940:	mov	x4, #0x0                   	// #0
    c944:	mov	w1, w23
    c948:	mov	x0, x21
    c94c:	bl	1a34c <OnPrint@@Base+0x1ae4>
    c950:	mov	x1, x21
    c954:	mov	x0, x20
    c958:	bl	ad84 <__sanitizer_get_allocated_size@@Base+0x884>
    c95c:	ldp	x29, x30, [sp]
    c960:	ldp	x19, x20, [sp, #16]
    c964:	ldp	x21, x22, [sp, #32]
    c968:	ldr	x23, [sp, #48]
    c96c:	add	sp, sp, #0x860
    c970:	ret
    c974:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    c978:	cbz	x0, c92c <__interceptor_valloc@@Base+0x8c>
    c97c:	ldp	x6, x5, [x0, #144]
    c980:	b	c934 <__interceptor_valloc@@Base+0x94>

000000000000c984 <__interceptor_memalign@@Base>:
    c984:	sub	sp, sp, #0x860
    c988:	stp	x29, x30, [sp]
    c98c:	mov	x29, sp
    c990:	stp	x19, x20, [sp, #16]
    c994:	mov	x20, x0
    c998:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c99c:	stp	x21, x22, [sp, #32]
    c9a0:	ldr	x0, [x0, #4048]
    c9a4:	stp	x23, x24, [sp, #48]
    c9a8:	ldrb	w0, [x0]
    c9ac:	cbz	w0, c9d0 <__interceptor_memalign@@Base+0x4c>
    c9b0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c9b4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    c9b8:	add	x2, x2, #0x4d1
    c9bc:	add	x0, x0, #0xd59
    c9c0:	mov	x4, #0x0                   	// #0
    c9c4:	mov	x3, #0x0                   	// #0
    c9c8:	mov	w1, #0x64                  	// #100
    c9cc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    c9d0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c9d4:	mov	x21, x1
    c9d8:	ldr	x0, [x0, #3592]
    c9dc:	ldrb	w0, [x0]
    c9e0:	cbnz	w0, c9e8 <__interceptor_memalign@@Base+0x64>
    c9e4:	bl	6ba0 <__lsan_init@plt>
    c9e8:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    c9ec:	add	x22, x29, #0x48
    c9f0:	add	x0, x22, #0x10
    c9f4:	stp	x0, xzr, [x29, #72]
    c9f8:	ldr	x19, [x19, #4040]
    c9fc:	str	xzr, [x29, #2136]
    ca00:	ldrsw	x24, [x19, #36]
    ca04:	bl	1a114 <OnPrint@@Base+0x18ac>
    ca08:	ldrb	w19, [x19, #34]
    ca0c:	mov	x23, x0
    ca10:	cbnz	w19, ca60 <__interceptor_memalign@@Base+0xdc>
    ca14:	mov	x6, #0x0                   	// #0
    ca18:	mov	x5, #0x0                   	// #0
    ca1c:	mov	w7, w19
    ca20:	mov	x3, x29
    ca24:	mov	x4, #0x0                   	// #0
    ca28:	mov	x2, x23
    ca2c:	mov	w1, w24
    ca30:	mov	x0, x22
    ca34:	bl	1a34c <OnPrint@@Base+0x1ae4>
    ca38:	mov	x2, x22
    ca3c:	mov	x1, x21
    ca40:	mov	x0, x20
    ca44:	bl	ac74 <__sanitizer_get_allocated_size@@Base+0x774>
    ca48:	ldp	x29, x30, [sp]
    ca4c:	ldp	x19, x20, [sp, #16]
    ca50:	ldp	x21, x22, [sp, #32]
    ca54:	ldp	x23, x24, [sp, #48]
    ca58:	add	sp, sp, #0x860
    ca5c:	ret
    ca60:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    ca64:	cbz	x0, ca14 <__interceptor_memalign@@Base+0x90>
    ca68:	ldp	x6, x5, [x0, #144]
    ca6c:	b	ca1c <__interceptor_memalign@@Base+0x98>

000000000000ca70 <__interceptor___libc_memalign@@Base>:
    ca70:	sub	sp, sp, #0x860
    ca74:	stp	x29, x30, [sp]
    ca78:	mov	x29, sp
    ca7c:	stp	x21, x22, [sp, #32]
    ca80:	mov	x21, x0
    ca84:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ca88:	stp	x19, x20, [sp, #16]
    ca8c:	ldr	x0, [x0, #4048]
    ca90:	stp	x23, x24, [sp, #48]
    ca94:	ldrb	w0, [x0]
    ca98:	cbz	w0, cabc <__interceptor___libc_memalign@@Base+0x4c>
    ca9c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    caa0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    caa4:	add	x2, x2, #0x4d1
    caa8:	add	x0, x0, #0xd59
    caac:	mov	x4, #0x0                   	// #0
    cab0:	mov	x3, #0x0                   	// #0
    cab4:	mov	w1, #0x6b                  	// #107
    cab8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    cabc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cac0:	mov	x19, x1
    cac4:	ldr	x0, [x0, #3592]
    cac8:	ldrb	w0, [x0]
    cacc:	cbnz	w0, cad4 <__interceptor___libc_memalign@@Base+0x64>
    cad0:	bl	6ba0 <__lsan_init@plt>
    cad4:	adrp	x20, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cad8:	add	x22, x29, #0x48
    cadc:	add	x0, x22, #0x10
    cae0:	stp	x0, xzr, [x29, #72]
    cae4:	ldr	x20, [x20, #4040]
    cae8:	str	xzr, [x29, #2136]
    caec:	ldrsw	x24, [x20, #36]
    caf0:	bl	1a114 <OnPrint@@Base+0x18ac>
    caf4:	ldrb	w20, [x20, #34]
    caf8:	mov	x23, x0
    cafc:	cbnz	w20, cb5c <__interceptor___libc_memalign@@Base+0xec>
    cb00:	mov	x6, #0x0                   	// #0
    cb04:	mov	x5, #0x0                   	// #0
    cb08:	mov	w7, w20
    cb0c:	mov	x3, x29
    cb10:	mov	x4, #0x0                   	// #0
    cb14:	mov	x2, x23
    cb18:	mov	w1, w24
    cb1c:	mov	x0, x22
    cb20:	bl	1a34c <OnPrint@@Base+0x1ae4>
    cb24:	mov	x2, x22
    cb28:	mov	x1, x19
    cb2c:	mov	x0, x21
    cb30:	bl	ac74 <__sanitizer_get_allocated_size@@Base+0x774>
    cb34:	mov	x1, x19
    cb38:	mov	x20, x0
    cb3c:	bl	200f4 <__sanitizer_set_death_callback@@Base+0x107c>
    cb40:	mov	x0, x20
    cb44:	ldp	x29, x30, [sp]
    cb48:	ldp	x19, x20, [sp, #16]
    cb4c:	ldp	x21, x22, [sp, #32]
    cb50:	ldp	x23, x24, [sp, #48]
    cb54:	add	sp, sp, #0x860
    cb58:	ret
    cb5c:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    cb60:	cbz	x0, cb00 <__interceptor___libc_memalign@@Base+0x90>
    cb64:	ldp	x6, x5, [x0, #144]
    cb68:	b	cb08 <__interceptor___libc_memalign@@Base+0x98>

000000000000cb6c <__interceptor_aligned_alloc@@Base>:
    cb6c:	sub	sp, sp, #0x860
    cb70:	stp	x29, x30, [sp]
    cb74:	mov	x29, sp
    cb78:	stp	x19, x20, [sp, #16]
    cb7c:	mov	x20, x0
    cb80:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cb84:	stp	x21, x22, [sp, #32]
    cb88:	ldr	x0, [x0, #4048]
    cb8c:	stp	x23, x24, [sp, #48]
    cb90:	ldrb	w0, [x0]
    cb94:	cbz	w0, cbb8 <__interceptor_aligned_alloc@@Base+0x4c>
    cb98:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    cb9c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    cba0:	add	x2, x2, #0x4d1
    cba4:	add	x0, x0, #0xd59
    cba8:	mov	x4, #0x0                   	// #0
    cbac:	mov	x3, #0x0                   	// #0
    cbb0:	mov	w1, #0x79                  	// #121
    cbb4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    cbb8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cbbc:	mov	x21, x1
    cbc0:	ldr	x0, [x0, #3592]
    cbc4:	ldrb	w0, [x0]
    cbc8:	cbnz	w0, cbd0 <__interceptor_aligned_alloc@@Base+0x64>
    cbcc:	bl	6ba0 <__lsan_init@plt>
    cbd0:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cbd4:	add	x22, x29, #0x48
    cbd8:	add	x0, x22, #0x10
    cbdc:	stp	x0, xzr, [x29, #72]
    cbe0:	ldr	x19, [x19, #4040]
    cbe4:	str	xzr, [x29, #2136]
    cbe8:	ldrsw	x24, [x19, #36]
    cbec:	bl	1a114 <OnPrint@@Base+0x18ac>
    cbf0:	ldrb	w19, [x19, #34]
    cbf4:	mov	x23, x0
    cbf8:	cbnz	w19, cc48 <__interceptor_aligned_alloc@@Base+0xdc>
    cbfc:	mov	x6, #0x0                   	// #0
    cc00:	mov	x5, #0x0                   	// #0
    cc04:	mov	w7, w19
    cc08:	mov	x3, x29
    cc0c:	mov	x4, #0x0                   	// #0
    cc10:	mov	x2, x23
    cc14:	mov	w1, w24
    cc18:	mov	x0, x22
    cc1c:	bl	1a34c <OnPrint@@Base+0x1ae4>
    cc20:	mov	x2, x22
    cc24:	mov	x1, x21
    cc28:	mov	x0, x20
    cc2c:	bl	abec <__sanitizer_get_allocated_size@@Base+0x6ec>
    cc30:	ldp	x29, x30, [sp]
    cc34:	ldp	x19, x20, [sp, #16]
    cc38:	ldp	x21, x22, [sp, #32]
    cc3c:	ldp	x23, x24, [sp, #48]
    cc40:	add	sp, sp, #0x860
    cc44:	ret
    cc48:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    cc4c:	cbz	x0, cbfc <__interceptor_aligned_alloc@@Base+0x90>
    cc50:	ldp	x6, x5, [x0, #144]
    cc54:	b	cc04 <__interceptor_aligned_alloc@@Base+0x98>

000000000000cc58 <__interceptor_malloc_usable_size@@Base>:
    cc58:	stp	x19, x30, [sp, #-16]!
    cc5c:	mov	x19, x0
    cc60:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cc64:	ldr	x0, [x0, #4048]
    cc68:	ldrb	w0, [x0]
    cc6c:	cbz	w0, cc90 <__interceptor_malloc_usable_size@@Base+0x38>
    cc70:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    cc74:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    cc78:	add	x2, x2, #0x4d1
    cc7c:	add	x0, x0, #0xd59
    cc80:	mov	x4, #0x0                   	// #0
    cc84:	mov	x3, #0x0                   	// #0
    cc88:	mov	w1, #0x84                  	// #132
    cc8c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    cc90:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cc94:	ldr	x0, [x0, #3592]
    cc98:	ldrb	w0, [x0]
    cc9c:	cbnz	w0, cca4 <__interceptor_malloc_usable_size@@Base+0x4c>
    cca0:	bl	6ba0 <__lsan_init@plt>
    cca4:	mov	x0, x19
    cca8:	ldp	x19, x30, [sp], #16
    ccac:	b	a4cc <__sanitizer_get_ownership@@Base+0x24>

000000000000ccb0 <__interceptor_mallinfo@@Base>:
    ccb0:	str	x30, [sp, #-16]!
    ccb4:	mov	x0, x8
    ccb8:	mov	x2, #0x28                  	// #40
    ccbc:	mov	w1, #0x0                   	// #0
    ccc0:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    ccc4:	ldr	x30, [sp], #16
    ccc8:	ret

000000000000cccc <__interceptor_pvalloc@@Base>:
    cccc:	sub	sp, sp, #0x860
    ccd0:	stp	x29, x30, [sp]
    ccd4:	mov	x29, sp
    ccd8:	stp	x19, x20, [sp, #16]
    ccdc:	mov	x20, x0
    cce0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cce4:	stp	x21, x22, [sp, #32]
    cce8:	ldr	x0, [x0, #4048]
    ccec:	ldrb	w0, [x0]
    ccf0:	str	x23, [sp, #48]
    ccf4:	cbz	w0, cd18 <__interceptor_pvalloc@@Base+0x4c>
    ccf8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ccfc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    cd00:	add	x2, x2, #0x4d1
    cd04:	add	x0, x0, #0xd59
    cd08:	mov	x4, #0x0                   	// #0
    cd0c:	mov	x3, #0x0                   	// #0
    cd10:	mov	w1, #0xa4                  	// #164
    cd14:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    cd18:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cd1c:	ldr	x0, [x0, #3592]
    cd20:	ldrb	w0, [x0]
    cd24:	cbnz	w0, cd2c <__interceptor_pvalloc@@Base+0x60>
    cd28:	bl	6ba0 <__lsan_init@plt>
    cd2c:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cd30:	add	x21, x29, #0x48
    cd34:	add	x0, x21, #0x10
    cd38:	stp	x0, xzr, [x29, #72]
    cd3c:	ldr	x19, [x19, #4040]
    cd40:	str	xzr, [x29, #2136]
    cd44:	ldrsw	x23, [x19, #36]
    cd48:	bl	1a114 <OnPrint@@Base+0x18ac>
    cd4c:	ldrb	w19, [x19, #34]
    cd50:	mov	x22, x0
    cd54:	cbnz	w19, cda0 <__interceptor_pvalloc@@Base+0xd4>
    cd58:	mov	x6, #0x0                   	// #0
    cd5c:	mov	x5, #0x0                   	// #0
    cd60:	mov	w7, w19
    cd64:	mov	x3, x29
    cd68:	mov	x2, x22
    cd6c:	mov	x4, #0x0                   	// #0
    cd70:	mov	w1, w23
    cd74:	mov	x0, x21
    cd78:	bl	1a34c <OnPrint@@Base+0x1ae4>
    cd7c:	mov	x1, x21
    cd80:	mov	x0, x20
    cd84:	bl	adc8 <__sanitizer_get_allocated_size@@Base+0x8c8>
    cd88:	ldp	x29, x30, [sp]
    cd8c:	ldp	x19, x20, [sp, #16]
    cd90:	ldp	x21, x22, [sp, #32]
    cd94:	ldr	x23, [sp, #48]
    cd98:	add	sp, sp, #0x860
    cd9c:	ret
    cda0:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    cda4:	cbz	x0, cd58 <__interceptor_pvalloc@@Base+0x8c>
    cda8:	ldp	x6, x5, [x0, #144]
    cdac:	b	cd60 <__interceptor_pvalloc@@Base+0x94>

000000000000cdb0 <__interceptor_pthread_join@@Base>:
    cdb0:	stp	x19, x20, [sp, #-32]!
    cdb4:	mov	x19, x0
    cdb8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cdbc:	stp	x21, x30, [sp, #16]
    cdc0:	ldr	x0, [x0, #4048]
    cdc4:	ldrb	w0, [x0]
    cdc8:	cbz	w0, cdec <__interceptor_pthread_join@@Base+0x3c>
    cdcc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    cdd0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    cdd4:	add	x2, x2, #0x4d1
    cdd8:	add	x0, x0, #0xd59
    cddc:	mov	x4, #0x0                   	// #0
    cde0:	mov	x3, #0x0                   	// #0
    cde4:	mov	w1, #0x198                 	// #408
    cde8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    cdec:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cdf0:	mov	x21, x1
    cdf4:	ldr	x0, [x0, #3592]
    cdf8:	ldrb	w0, [x0]
    cdfc:	cbnz	w0, ce04 <__interceptor_pthread_join@@Base+0x54>
    ce00:	bl	6ba0 <__lsan_init@plt>
    ce04:	mov	x0, x19
    ce08:	bl	e314 <_ZdaPvmSt11align_val_t@@Base+0x558>
    ce0c:	mov	w20, w0
    ce10:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    ce14:	mov	x1, x21
    ce18:	ldr	x2, [x0, #3968]
    ce1c:	mov	x0, x19
    ce20:	blr	x2
    ce24:	mov	w19, w0
    ce28:	cbnz	w0, ce34 <__interceptor_pthread_join@@Base+0x84>
    ce2c:	mov	w0, w20
    ce30:	bl	e32c <_ZdaPvmSt11align_val_t@@Base+0x570>
    ce34:	mov	w0, w19
    ce38:	ldp	x21, x30, [sp, #16]
    ce3c:	ldp	x19, x20, [sp], #32
    ce40:	ret

000000000000ce44 <__interceptor__exit@@Base>:
    ce44:	stp	x19, x30, [sp, #-16]!
    ce48:	mov	w19, w0
    ce4c:	cbnz	w0, ce68 <__interceptor__exit@@Base+0x24>
    ce50:	bl	735c <*ABS*+0x10@plt+0x58c>
    ce54:	tst	w0, #0xff
    ce58:	b.eq	ce68 <__interceptor__exit@@Base+0x24>  // b.none
    ce5c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ce60:	ldr	x0, [x0, #4040]
    ce64:	ldr	w19, [x0, #216]
    ce68:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    ce6c:	ldr	x1, [x0, #3976]
    ce70:	mov	w0, w19
    ce74:	ldp	x19, x30, [sp], #16
    ce78:	mov	x16, x1
    ce7c:	br	x16

000000000000ce80 <__interceptor_signal@@Base>:
    ce80:	stp	x19, x20, [sp, #-32]!
    ce84:	mov	w19, w0
    ce88:	mov	x20, x1
    ce8c:	str	x30, [sp, #16]
    ce90:	bl	15a3c <__sanitizer_set_report_fd@@Base+0x2f88>
    ce94:	cmp	w0, #0x2
    ce98:	b.eq	cebc <__interceptor_signal@@Base+0x3c>  // b.none
    ce9c:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    cea0:	mov	x1, x20
    cea4:	ldr	x30, [sp, #16]
    cea8:	ldr	x2, [x0, #3984]
    ceac:	mov	w0, w19
    ceb0:	ldp	x19, x20, [sp], #32
    ceb4:	mov	x16, x2
    ceb8:	br	x16
    cebc:	mov	x0, #0x0                   	// #0
    cec0:	ldr	x30, [sp, #16]
    cec4:	ldp	x19, x20, [sp], #32
    cec8:	ret

000000000000cecc <__interceptor_sigaction@@Base>:
    cecc:	stp	x19, x20, [sp, #-32]!
    ced0:	mov	w19, w0
    ced4:	mov	x20, x1
    ced8:	stp	x21, x30, [sp, #16]
    cedc:	mov	x21, x2
    cee0:	bl	15a3c <__sanitizer_set_report_fd@@Base+0x2f88>
    cee4:	cmp	w0, #0x2
    cee8:	b.eq	cf10 <__interceptor_sigaction@@Base+0x44>  // b.none
    ceec:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    cef0:	mov	x2, x21
    cef4:	mov	x1, x20
    cef8:	ldr	x3, [x0, #3992]
    cefc:	mov	w0, w19
    cf00:	ldp	x21, x30, [sp, #16]
    cf04:	mov	x16, x3
    cf08:	ldp	x19, x20, [sp], #32
    cf0c:	br	x16
    cf10:	mov	w0, #0x0                   	// #0
    cf14:	ldp	x21, x30, [sp, #16]
    cf18:	ldp	x19, x20, [sp], #32
    cf1c:	ret
    cf20:	sub	sp, sp, #0x860
    cf24:	stp	x29, x30, [sp]
    cf28:	mov	x29, sp
    cf2c:	stp	x19, x20, [sp, #16]
    cf30:	mov	x20, x0
    cf34:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cf38:	stp	x21, x22, [sp, #32]
    cf3c:	mov	x21, x1
    cf40:	ldr	x0, [x0, #3592]
    cf44:	stp	x23, x24, [sp, #48]
    cf48:	ldrb	w0, [x0]
    cf4c:	cbnz	w0, cf54 <__interceptor_sigaction@@Base+0x88>
    cf50:	bl	6ba0 <__lsan_init@plt>
    cf54:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cf58:	add	x22, x29, #0x48
    cf5c:	add	x0, x22, #0x10
    cf60:	stp	x0, xzr, [x29, #72]
    cf64:	ldr	x19, [x19, #4040]
    cf68:	str	xzr, [x29, #2136]
    cf6c:	ldrsw	x24, [x19, #36]
    cf70:	bl	1a114 <OnPrint@@Base+0x18ac>
    cf74:	ldrb	w19, [x19, #34]
    cf78:	mov	x23, x0
    cf7c:	cbnz	w19, cfcc <__interceptor_sigaction@@Base+0x100>
    cf80:	mov	x6, #0x0                   	// #0
    cf84:	mov	x5, #0x0                   	// #0
    cf88:	mov	w7, w19
    cf8c:	mov	x3, x29
    cf90:	mov	x4, #0x0                   	// #0
    cf94:	mov	x2, x23
    cf98:	mov	w1, w24
    cf9c:	mov	x0, x22
    cfa0:	bl	1a34c <OnPrint@@Base+0x1ae4>
    cfa4:	mov	x2, x22
    cfa8:	mov	x1, x21
    cfac:	mov	x0, x20
    cfb0:	bl	ad18 <__sanitizer_get_allocated_size@@Base+0x818>
    cfb4:	ldp	x29, x30, [sp]
    cfb8:	ldp	x19, x20, [sp, #16]
    cfbc:	ldp	x21, x22, [sp, #32]
    cfc0:	ldp	x23, x24, [sp, #48]
    cfc4:	add	sp, sp, #0x860
    cfc8:	ret
    cfcc:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    cfd0:	cbz	x0, cf80 <__interceptor_sigaction@@Base+0xb4>
    cfd4:	ldp	x6, x5, [x0, #144]
    cfd8:	b	cf88 <__interceptor_sigaction@@Base+0xbc>

000000000000cfdc <__interceptor_calloc@@Base>:
    cfdc:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    cfe0:	ldr	x3, [x3, #4048]
    cfe4:	ldrb	w3, [x3]
    cfe8:	cbz	w3, d044 <__interceptor_calloc@@Base+0x68>
    cfec:	mov	x2, x0
    cff0:	adrp	x3, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    cff4:	add	x3, x3, #0xf80
    cff8:	adrp	x0, d5000 <__asan_cplus_demangle_operators@@Base+0x84be0>
    cffc:	add	x0, x0, #0x40
    d000:	mul	x1, x2, x1
    d004:	ldr	x5, [x3, #32]
    d008:	add	x1, x1, #0x7
    d00c:	add	x1, x5, x1, lsr #3
    d010:	str	x1, [x3, #32]
    d014:	add	x0, x0, x5, lsl #3
    d018:	cmp	x1, #0x3ff
    d01c:	b.ls	d048 <__interceptor_calloc@@Base+0x6c>  // b.plast
    d020:	str	x30, [sp, #-16]!
    d024:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d028:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d02c:	add	x2, x2, #0xd8c
    d030:	add	x0, x0, #0xd59
    d034:	mov	x4, #0x0                   	// #0
    d038:	mov	x3, #0x0                   	// #0
    d03c:	mov	w1, #0x47                  	// #71
    d040:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d044:	b	cf20 <__interceptor_sigaction@@Base+0x54>
    d048:	ret

000000000000d04c <__interceptor_pthread_create@@Base>:
    d04c:	stp	x19, x20, [sp, #-208]!
    d050:	stp	x21, x22, [sp, #16]
    d054:	mov	x21, x0
    d058:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d05c:	ldr	x0, [x0, #4048]
    d060:	ldrb	w0, [x0]
    d064:	str	x30, [sp, #32]
    d068:	cbz	w0, d08c <__interceptor_pthread_create@@Base+0x40>
    d06c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d070:	add	x2, x2, #0x4d1
    d074:	mov	x4, #0x0                   	// #0
    d078:	mov	x3, #0x0                   	// #0
    d07c:	mov	w1, #0x173                 	// #371
    d080:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d084:	add	x0, x0, #0xd59
    d088:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d08c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d090:	mov	x19, x1
    d094:	mov	x22, x2
    d098:	mov	x20, x3
    d09c:	ldr	x0, [x0, #3592]
    d0a0:	ldrb	w0, [x0]
    d0a4:	cbnz	w0, d0ac <__interceptor_pthread_create@@Base+0x60>
    d0a8:	bl	6ba0 <__lsan_init@plt>
    d0ac:	bl	e36c <_ZdaPvmSt11align_val_t@@Base+0x5b0>
    d0b0:	cbnz	x19, d0c0 <__interceptor_pthread_create@@Base+0x74>
    d0b4:	add	x19, sp, #0x50
    d0b8:	mov	x0, x19
    d0bc:	bl	6870 <pthread_attr_init@plt>
    d0c0:	mov	x0, x19
    d0c4:	bl	17d7c <__sanitizer_set_report_fd@@Base+0x52c8>
    d0c8:	add	x1, sp, #0x34
    d0cc:	mov	x0, x19
    d0d0:	str	wzr, [sp, #52]
    d0d4:	bl	67a0 <pthread_attr_getdetachstate@plt>
    d0d8:	stp	x22, x20, [sp, #56]
    d0dc:	str	xzr, [sp, #72]
    d0e0:	bl	9b80 <__lsan_do_recoverable_leak_check@@Base+0x1224>
    d0e4:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    d0e8:	add	x3, sp, #0x38
    d0ec:	mov	x1, x19
    d0f0:	adrp	x2, d000 <__interceptor_calloc@@Base+0x24>
    d0f4:	ldr	x4, [x0, #4008]
    d0f8:	add	x2, x2, #0x198
    d0fc:	mov	x0, x21
    d100:	blr	x4
    d104:	mov	w20, w0
    d108:	bl	9b9c <__lsan_do_recoverable_leak_check@@Base+0x1240>
    d10c:	cbnz	w20, d170 <__interceptor_pthread_create@@Base+0x124>
    d110:	bl	a12c <__sanitizer_print_stack_trace@@Base+0x8c>
    d114:	mov	w22, w0
    d118:	ldr	w0, [sp, #52]
    d11c:	ldr	x21, [x21]
    d120:	bl	1801c <__sanitizer_set_report_fd@@Base+0x5568>
    d124:	mov	w2, w0
    d128:	mov	x1, x21
    d12c:	mov	w0, w22
    d130:	bl	e1fc <_ZdaPvmSt11align_val_t@@Base+0x440>
    d134:	sxtw	x1, w0
    d138:	cbnz	w0, d154 <__interceptor_pthread_create@@Base+0x108>
    d13c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d140:	mov	x4, #0x0                   	// #0
    d144:	add	x2, x2, #0xdb3
    d148:	mov	x3, #0x0                   	// #0
    d14c:	mov	w1, #0x18d                 	// #397
    d150:	b	d080 <__interceptor_pthread_create@@Base+0x34>
    d154:	dmb	ish
    d158:	str	x1, [sp, #72]
    d15c:	ldr	x0, [sp, #72]
    d160:	dmb	ish
    d164:	cbz	x0, d170 <__interceptor_pthread_create@@Base+0x124>
    d168:	bl	1507c <__sanitizer_set_report_fd@@Base+0x25c8>
    d16c:	b	d15c <__interceptor_pthread_create@@Base+0x110>
    d170:	add	x0, sp, #0x50
    d174:	cmp	x19, x0
    d178:	b.ne	d184 <__interceptor_pthread_create@@Base+0x138>  // b.any
    d17c:	mov	x0, x19
    d180:	bl	6960 <pthread_attr_destroy@plt>
    d184:	mov	w0, w20
    d188:	ldp	x21, x22, [sp, #16]
    d18c:	ldr	x30, [sp, #32]
    d190:	ldp	x19, x20, [sp], #208
    d194:	ret
    d198:	stp	x19, x20, [sp, #-48]!
    d19c:	mov	x19, x0
    d1a0:	mov	x1, #0x4                   	// #4
    d1a4:	stp	x21, x22, [sp, #16]
    d1a8:	ldp	x21, x22, [x0]
    d1ac:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    d1b0:	str	x30, [sp, #32]
    d1b4:	ldr	w0, [x0, #4016]
    d1b8:	bl	6a50 <pthread_setspecific@plt>
    d1bc:	cbz	w0, d1d0 <__interceptor_pthread_create@@Base+0x184>
    d1c0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d1c4:	add	x0, x0, #0xdc4
    d1c8:	bl	18b74 <OnPrint@@Base+0x30c>
    d1cc:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    d1d0:	ldr	x20, [x19, #16]
    d1d4:	dmb	ish
    d1d8:	cbnz	w20, d1e4 <__interceptor_pthread_create@@Base+0x198>
    d1dc:	bl	1507c <__sanitizer_set_report_fd@@Base+0x25c8>
    d1e0:	b	d1d0 <__interceptor_pthread_create@@Base+0x184>
    d1e4:	mov	w0, w20
    d1e8:	bl	a150 <__sanitizer_print_stack_trace@@Base+0xb0>
    d1ec:	bl	15118 <__sanitizer_set_report_fd@@Base+0x2664>
    d1f0:	mov	x1, x0
    d1f4:	mov	w2, #0x0                   	// #0
    d1f8:	mov	w0, w20
    d1fc:	bl	e210 <_ZdaPvmSt11align_val_t@@Base+0x454>
    d200:	dmb	ish
    d204:	str	xzr, [x19, #16]
    d208:	mov	x0, x22
    d20c:	mov	x16, x21
    d210:	ldp	x21, x22, [sp, #16]
    d214:	ldr	x30, [sp, #32]
    d218:	ldp	x19, x20, [sp], #48
    d21c:	br	x16
    d220:	cmp	x0, #0x1
    d224:	b.ls	d250 <__interceptor_pthread_create@@Base+0x204>  // b.plast
    d228:	sub	x1, x0, #0x1
    d22c:	adrp	x0, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    d230:	str	x30, [sp, #-16]!
    d234:	ldr	w0, [x0, #4016]
    d238:	bl	6a50 <pthread_setspecific@plt>
    d23c:	cbz	w0, d254 <__interceptor_pthread_create@@Base+0x208>
    d240:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d244:	add	x0, x0, #0xdc4
    d248:	bl	18b74 <OnPrint@@Base+0x30c>
    d24c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    d250:	b	e2ac <_ZdaPvmSt11align_val_t@@Base+0x4f0>
    d254:	ldr	x30, [sp], #16
    d258:	ret

000000000000d25c <__interceptor_mcheck@@Base>:
    d25c:	mov	w0, #0x0                   	// #0
    d260:	ret

000000000000d264 <__interceptor_mcheck_pedantic@@Base>:
    d264:	mov	w0, #0x0                   	// #0
    d268:	ret

000000000000d26c <__interceptor_mprobe@@Base>:
    d26c:	mov	w0, #0x0                   	// #0
    d270:	ret

000000000000d274 <_Znwm@@Base>:
    d274:	sub	sp, sp, #0x860
    d278:	stp	x29, x30, [sp]
    d27c:	mov	x29, sp
    d280:	stp	x19, x20, [sp, #16]
    d284:	mov	x19, x0
    d288:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d28c:	stp	x21, x22, [sp, #32]
    d290:	ldr	x0, [x0, #4048]
    d294:	ldrb	w0, [x0]
    d298:	str	x23, [sp, #48]
    d29c:	cbz	w0, d2c0 <_Znwm@@Base+0x4c>
    d2a0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d2a4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d2a8:	add	x2, x2, #0x4d1
    d2ac:	add	x0, x0, #0xd59
    d2b0:	mov	x4, #0x0                   	// #0
    d2b4:	mov	x3, #0x0                   	// #0
    d2b8:	mov	w1, #0xde                  	// #222
    d2bc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d2c0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d2c4:	ldr	x0, [x0, #3592]
    d2c8:	ldrb	w0, [x0]
    d2cc:	cbnz	w0, d2d4 <_Znwm@@Base+0x60>
    d2d0:	bl	6ba0 <__lsan_init@plt>
    d2d4:	adrp	x21, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d2d8:	add	x20, x29, #0x48
    d2dc:	add	x0, x20, #0x10
    d2e0:	stp	x0, xzr, [x29, #72]
    d2e4:	ldr	x21, [x21, #4040]
    d2e8:	str	xzr, [x29, #2136]
    d2ec:	ldrsw	x23, [x21, #36]
    d2f0:	bl	1a114 <OnPrint@@Base+0x18ac>
    d2f4:	ldrb	w21, [x21, #34]
    d2f8:	mov	x22, x0
    d2fc:	cbnz	w21, d340 <_Znwm@@Base+0xcc>
    d300:	mov	x6, #0x0                   	// #0
    d304:	mov	x5, #0x0                   	// #0
    d308:	mov	w7, w21
    d30c:	mov	x3, x29
    d310:	mov	x2, x22
    d314:	mov	x4, #0x0                   	// #0
    d318:	mov	w1, w23
    d31c:	mov	x0, x20
    d320:	bl	1a34c <OnPrint@@Base+0x1ae4>
    d324:	mov	x1, x20
    d328:	mov	x0, x19
    d32c:	bl	ace4 <__sanitizer_get_allocated_size@@Base+0x7e4>
    d330:	cbnz	x0, d350 <_Znwm@@Base+0xdc>
    d334:	mov	x1, x20
    d338:	mov	x0, x19
    d33c:	bl	fec4 <__sancov_default_options@@Base+0x1a40>
    d340:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    d344:	cbz	x0, d300 <_Znwm@@Base+0x8c>
    d348:	ldp	x6, x5, [x0, #144]
    d34c:	b	d308 <_Znwm@@Base+0x94>
    d350:	ldp	x29, x30, [sp]
    d354:	ldp	x19, x20, [sp, #16]
    d358:	ldp	x21, x22, [sp, #32]
    d35c:	ldr	x23, [sp, #48]
    d360:	add	sp, sp, #0x860
    d364:	ret

000000000000d368 <_Znam@@Base>:
    d368:	sub	sp, sp, #0x860
    d36c:	stp	x29, x30, [sp]
    d370:	mov	x29, sp
    d374:	stp	x19, x20, [sp, #16]
    d378:	mov	x19, x0
    d37c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d380:	stp	x21, x22, [sp, #32]
    d384:	ldr	x0, [x0, #4048]
    d388:	ldrb	w0, [x0]
    d38c:	str	x23, [sp, #48]
    d390:	cbz	w0, d3b4 <_Znam@@Base+0x4c>
    d394:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d398:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d39c:	add	x2, x2, #0x4d1
    d3a0:	add	x0, x0, #0xd59
    d3a4:	mov	x4, #0x0                   	// #0
    d3a8:	mov	x3, #0x0                   	// #0
    d3ac:	mov	w1, #0xe0                  	// #224
    d3b0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d3b4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d3b8:	ldr	x0, [x0, #3592]
    d3bc:	ldrb	w0, [x0]
    d3c0:	cbnz	w0, d3c8 <_Znam@@Base+0x60>
    d3c4:	bl	6ba0 <__lsan_init@plt>
    d3c8:	adrp	x21, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d3cc:	add	x20, x29, #0x48
    d3d0:	add	x0, x20, #0x10
    d3d4:	stp	x0, xzr, [x29, #72]
    d3d8:	ldr	x21, [x21, #4040]
    d3dc:	str	xzr, [x29, #2136]
    d3e0:	ldrsw	x23, [x21, #36]
    d3e4:	bl	1a114 <OnPrint@@Base+0x18ac>
    d3e8:	ldrb	w21, [x21, #34]
    d3ec:	mov	x22, x0
    d3f0:	cbnz	w21, d434 <_Znam@@Base+0xcc>
    d3f4:	mov	x6, #0x0                   	// #0
    d3f8:	mov	x5, #0x0                   	// #0
    d3fc:	mov	w7, w21
    d400:	mov	x3, x29
    d404:	mov	x2, x22
    d408:	mov	x4, #0x0                   	// #0
    d40c:	mov	w1, w23
    d410:	mov	x0, x20
    d414:	bl	1a34c <OnPrint@@Base+0x1ae4>
    d418:	mov	x1, x20
    d41c:	mov	x0, x19
    d420:	bl	ace4 <__sanitizer_get_allocated_size@@Base+0x7e4>
    d424:	cbnz	x0, d444 <_Znam@@Base+0xdc>
    d428:	mov	x1, x20
    d42c:	mov	x0, x19
    d430:	bl	fec4 <__sancov_default_options@@Base+0x1a40>
    d434:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    d438:	cbz	x0, d3f4 <_Znam@@Base+0x8c>
    d43c:	ldp	x6, x5, [x0, #144]
    d440:	b	d3fc <_Znam@@Base+0x94>
    d444:	ldp	x29, x30, [sp]
    d448:	ldp	x19, x20, [sp, #16]
    d44c:	ldp	x21, x22, [sp, #32]
    d450:	ldr	x23, [sp, #48]
    d454:	add	sp, sp, #0x860
    d458:	ret

000000000000d45c <_ZnwmRKSt9nothrow_t@@Base>:
    d45c:	sub	sp, sp, #0x860
    d460:	stp	x29, x30, [sp]
    d464:	mov	x29, sp
    d468:	stp	x19, x20, [sp, #16]
    d46c:	mov	x20, x0
    d470:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d474:	stp	x21, x22, [sp, #32]
    d478:	ldr	x0, [x0, #4048]
    d47c:	ldrb	w0, [x0]
    d480:	str	x23, [sp, #48]
    d484:	cbz	w0, d4a8 <_ZnwmRKSt9nothrow_t@@Base+0x4c>
    d488:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d48c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d490:	add	x2, x2, #0x4d1
    d494:	add	x0, x0, #0xd59
    d498:	mov	x4, #0x0                   	// #0
    d49c:	mov	x3, #0x0                   	// #0
    d4a0:	mov	w1, #0xe3                  	// #227
    d4a4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d4a8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d4ac:	ldr	x0, [x0, #3592]
    d4b0:	ldrb	w0, [x0]
    d4b4:	cbnz	w0, d4bc <_ZnwmRKSt9nothrow_t@@Base+0x60>
    d4b8:	bl	6ba0 <__lsan_init@plt>
    d4bc:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d4c0:	add	x21, x29, #0x48
    d4c4:	add	x0, x21, #0x10
    d4c8:	stp	x0, xzr, [x29, #72]
    d4cc:	ldr	x19, [x19, #4040]
    d4d0:	str	xzr, [x29, #2136]
    d4d4:	ldrsw	x23, [x19, #36]
    d4d8:	bl	1a114 <OnPrint@@Base+0x18ac>
    d4dc:	ldrb	w19, [x19, #34]
    d4e0:	mov	x22, x0
    d4e4:	cbnz	w19, d530 <_ZnwmRKSt9nothrow_t@@Base+0xd4>
    d4e8:	mov	x6, #0x0                   	// #0
    d4ec:	mov	x5, #0x0                   	// #0
    d4f0:	mov	w7, w19
    d4f4:	mov	x3, x29
    d4f8:	mov	x2, x22
    d4fc:	mov	x4, #0x0                   	// #0
    d500:	mov	w1, w23
    d504:	mov	x0, x21
    d508:	bl	1a34c <OnPrint@@Base+0x1ae4>
    d50c:	mov	x1, x21
    d510:	mov	x0, x20
    d514:	bl	ace4 <__sanitizer_get_allocated_size@@Base+0x7e4>
    d518:	ldp	x29, x30, [sp]
    d51c:	ldp	x19, x20, [sp, #16]
    d520:	ldp	x21, x22, [sp, #32]
    d524:	ldr	x23, [sp, #48]
    d528:	add	sp, sp, #0x860
    d52c:	ret
    d530:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    d534:	cbz	x0, d4e8 <_ZnwmRKSt9nothrow_t@@Base+0x8c>
    d538:	ldp	x6, x5, [x0, #144]
    d53c:	b	d4f0 <_ZnwmRKSt9nothrow_t@@Base+0x94>

000000000000d540 <_ZnamRKSt9nothrow_t@@Base>:
    d540:	sub	sp, sp, #0x860
    d544:	stp	x29, x30, [sp]
    d548:	mov	x29, sp
    d54c:	stp	x19, x20, [sp, #16]
    d550:	mov	x20, x0
    d554:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d558:	stp	x21, x22, [sp, #32]
    d55c:	ldr	x0, [x0, #4048]
    d560:	ldrb	w0, [x0]
    d564:	str	x23, [sp, #48]
    d568:	cbz	w0, d58c <_ZnamRKSt9nothrow_t@@Base+0x4c>
    d56c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d570:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d574:	add	x2, x2, #0x4d1
    d578:	add	x0, x0, #0xd59
    d57c:	mov	x4, #0x0                   	// #0
    d580:	mov	x3, #0x0                   	// #0
    d584:	mov	w1, #0xe6                  	// #230
    d588:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d58c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d590:	ldr	x0, [x0, #3592]
    d594:	ldrb	w0, [x0]
    d598:	cbnz	w0, d5a0 <_ZnamRKSt9nothrow_t@@Base+0x60>
    d59c:	bl	6ba0 <__lsan_init@plt>
    d5a0:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d5a4:	add	x21, x29, #0x48
    d5a8:	add	x0, x21, #0x10
    d5ac:	stp	x0, xzr, [x29, #72]
    d5b0:	ldr	x19, [x19, #4040]
    d5b4:	str	xzr, [x29, #2136]
    d5b8:	ldrsw	x23, [x19, #36]
    d5bc:	bl	1a114 <OnPrint@@Base+0x18ac>
    d5c0:	ldrb	w19, [x19, #34]
    d5c4:	mov	x22, x0
    d5c8:	cbnz	w19, d614 <_ZnamRKSt9nothrow_t@@Base+0xd4>
    d5cc:	mov	x6, #0x0                   	// #0
    d5d0:	mov	x5, #0x0                   	// #0
    d5d4:	mov	w7, w19
    d5d8:	mov	x3, x29
    d5dc:	mov	x2, x22
    d5e0:	mov	x4, #0x0                   	// #0
    d5e4:	mov	w1, w23
    d5e8:	mov	x0, x21
    d5ec:	bl	1a34c <OnPrint@@Base+0x1ae4>
    d5f0:	mov	x1, x21
    d5f4:	mov	x0, x20
    d5f8:	bl	ace4 <__sanitizer_get_allocated_size@@Base+0x7e4>
    d5fc:	ldp	x29, x30, [sp]
    d600:	ldp	x19, x20, [sp, #16]
    d604:	ldp	x21, x22, [sp, #32]
    d608:	ldr	x23, [sp, #48]
    d60c:	add	sp, sp, #0x860
    d610:	ret
    d614:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    d618:	cbz	x0, d5cc <_ZnamRKSt9nothrow_t@@Base+0x8c>
    d61c:	ldp	x6, x5, [x0, #144]
    d620:	b	d5d4 <_ZnamRKSt9nothrow_t@@Base+0x94>

000000000000d624 <_ZnwmSt11align_val_t@@Base>:
    d624:	sub	sp, sp, #0x860
    d628:	stp	x29, x30, [sp]
    d62c:	mov	x29, sp
    d630:	stp	x19, x20, [sp, #16]
    d634:	mov	x19, x0
    d638:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d63c:	stp	x21, x22, [sp, #32]
    d640:	ldr	x0, [x0, #4048]
    d644:	stp	x23, x24, [sp, #48]
    d648:	ldrb	w0, [x0]
    d64c:	cbz	w0, d670 <_ZnwmSt11align_val_t@@Base+0x4c>
    d650:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d654:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d658:	add	x2, x2, #0x4d1
    d65c:	add	x0, x0, #0xd59
    d660:	mov	x4, #0x0                   	// #0
    d664:	mov	x3, #0x0                   	// #0
    d668:	mov	w1, #0xe9                  	// #233
    d66c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d670:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d674:	mov	x22, x1
    d678:	ldr	x0, [x0, #3592]
    d67c:	ldrb	w0, [x0]
    d680:	cbnz	w0, d688 <_ZnwmSt11align_val_t@@Base+0x64>
    d684:	bl	6ba0 <__lsan_init@plt>
    d688:	adrp	x21, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d68c:	add	x20, x29, #0x48
    d690:	add	x0, x20, #0x10
    d694:	stp	x0, xzr, [x29, #72]
    d698:	ldr	x21, [x21, #4040]
    d69c:	str	xzr, [x29, #2136]
    d6a0:	ldrsw	x24, [x21, #36]
    d6a4:	bl	1a114 <OnPrint@@Base+0x18ac>
    d6a8:	ldrb	w21, [x21, #34]
    d6ac:	mov	x23, x0
    d6b0:	cbnz	w21, d6f8 <_ZnwmSt11align_val_t@@Base+0xd4>
    d6b4:	mov	x6, #0x0                   	// #0
    d6b8:	mov	x5, #0x0                   	// #0
    d6bc:	mov	w7, w21
    d6c0:	mov	x3, x29
    d6c4:	mov	x4, #0x0                   	// #0
    d6c8:	mov	x2, x23
    d6cc:	mov	w1, w24
    d6d0:	mov	x0, x20
    d6d4:	bl	1a34c <OnPrint@@Base+0x1ae4>
    d6d8:	mov	x2, x20
    d6dc:	mov	x1, x19
    d6e0:	mov	x0, x22
    d6e4:	bl	ac74 <__sanitizer_get_allocated_size@@Base+0x774>
    d6e8:	cbnz	x0, d708 <_ZnwmSt11align_val_t@@Base+0xe4>
    d6ec:	mov	x1, x20
    d6f0:	mov	x0, x19
    d6f4:	bl	fec4 <__sancov_default_options@@Base+0x1a40>
    d6f8:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    d6fc:	cbz	x0, d6b4 <_ZnwmSt11align_val_t@@Base+0x90>
    d700:	ldp	x6, x5, [x0, #144]
    d704:	b	d6bc <_ZnwmSt11align_val_t@@Base+0x98>
    d708:	ldp	x29, x30, [sp]
    d70c:	ldp	x19, x20, [sp, #16]
    d710:	ldp	x21, x22, [sp, #32]
    d714:	ldp	x23, x24, [sp, #48]
    d718:	add	sp, sp, #0x860
    d71c:	ret

000000000000d720 <_ZnamSt11align_val_t@@Base>:
    d720:	sub	sp, sp, #0x860
    d724:	stp	x29, x30, [sp]
    d728:	mov	x29, sp
    d72c:	stp	x19, x20, [sp, #16]
    d730:	mov	x19, x0
    d734:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d738:	stp	x21, x22, [sp, #32]
    d73c:	ldr	x0, [x0, #4048]
    d740:	stp	x23, x24, [sp, #48]
    d744:	ldrb	w0, [x0]
    d748:	cbz	w0, d76c <_ZnamSt11align_val_t@@Base+0x4c>
    d74c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d750:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d754:	add	x2, x2, #0x4d1
    d758:	add	x0, x0, #0xd59
    d75c:	mov	x4, #0x0                   	// #0
    d760:	mov	x3, #0x0                   	// #0
    d764:	mov	w1, #0xec                  	// #236
    d768:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d76c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d770:	mov	x22, x1
    d774:	ldr	x0, [x0, #3592]
    d778:	ldrb	w0, [x0]
    d77c:	cbnz	w0, d784 <_ZnamSt11align_val_t@@Base+0x64>
    d780:	bl	6ba0 <__lsan_init@plt>
    d784:	adrp	x21, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d788:	add	x20, x29, #0x48
    d78c:	add	x0, x20, #0x10
    d790:	stp	x0, xzr, [x29, #72]
    d794:	ldr	x21, [x21, #4040]
    d798:	str	xzr, [x29, #2136]
    d79c:	ldrsw	x24, [x21, #36]
    d7a0:	bl	1a114 <OnPrint@@Base+0x18ac>
    d7a4:	ldrb	w21, [x21, #34]
    d7a8:	mov	x23, x0
    d7ac:	cbnz	w21, d7f4 <_ZnamSt11align_val_t@@Base+0xd4>
    d7b0:	mov	x6, #0x0                   	// #0
    d7b4:	mov	x5, #0x0                   	// #0
    d7b8:	mov	w7, w21
    d7bc:	mov	x3, x29
    d7c0:	mov	x4, #0x0                   	// #0
    d7c4:	mov	x2, x23
    d7c8:	mov	w1, w24
    d7cc:	mov	x0, x20
    d7d0:	bl	1a34c <OnPrint@@Base+0x1ae4>
    d7d4:	mov	x2, x20
    d7d8:	mov	x1, x19
    d7dc:	mov	x0, x22
    d7e0:	bl	ac74 <__sanitizer_get_allocated_size@@Base+0x774>
    d7e4:	cbnz	x0, d804 <_ZnamSt11align_val_t@@Base+0xe4>
    d7e8:	mov	x1, x20
    d7ec:	mov	x0, x19
    d7f0:	bl	fec4 <__sancov_default_options@@Base+0x1a40>
    d7f4:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    d7f8:	cbz	x0, d7b0 <_ZnamSt11align_val_t@@Base+0x90>
    d7fc:	ldp	x6, x5, [x0, #144]
    d800:	b	d7b8 <_ZnamSt11align_val_t@@Base+0x98>
    d804:	ldp	x29, x30, [sp]
    d808:	ldp	x19, x20, [sp, #16]
    d80c:	ldp	x21, x22, [sp, #32]
    d810:	ldp	x23, x24, [sp, #48]
    d814:	add	sp, sp, #0x860
    d818:	ret

000000000000d81c <_ZnwmSt11align_val_tRKSt9nothrow_t@@Base>:
    d81c:	sub	sp, sp, #0x860
    d820:	stp	x29, x30, [sp]
    d824:	mov	x29, sp
    d828:	stp	x21, x22, [sp, #32]
    d82c:	mov	x21, x0
    d830:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d834:	stp	x19, x20, [sp, #16]
    d838:	ldr	x0, [x0, #4048]
    d83c:	stp	x23, x24, [sp, #48]
    d840:	ldrb	w0, [x0]
    d844:	cbz	w0, d868 <__sancov_lowest_stack@@Base+0x38>
    d848:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d84c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d850:	add	x2, x2, #0x4d1
    d854:	add	x0, x0, #0xd59
    d858:	mov	x4, #0x0                   	// #0
    d85c:	mov	x3, #0x0                   	// #0
    d860:	mov	w1, #0xef                  	// #239
    d864:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d868:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d86c:	mov	x20, x1
    d870:	ldr	x0, [x0, #3592]
    d874:	ldrb	w0, [x0]
    d878:	cbnz	w0, d880 <__sancov_lowest_stack@@Base+0x50>
    d87c:	bl	6ba0 <__lsan_init@plt>
    d880:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d884:	add	x22, x29, #0x48
    d888:	add	x0, x22, #0x10
    d88c:	stp	x0, xzr, [x29, #72]
    d890:	ldr	x19, [x19, #4040]
    d894:	str	xzr, [x29, #2136]
    d898:	ldrsw	x24, [x19, #36]
    d89c:	bl	1a114 <OnPrint@@Base+0x18ac>
    d8a0:	ldrb	w19, [x19, #34]
    d8a4:	mov	x23, x0
    d8a8:	cbnz	w19, d8f8 <__sancov_lowest_stack@@Base+0xc8>
    d8ac:	mov	x6, #0x0                   	// #0
    d8b0:	mov	x5, #0x0                   	// #0
    d8b4:	mov	w7, w19
    d8b8:	mov	x3, x29
    d8bc:	mov	x4, #0x0                   	// #0
    d8c0:	mov	x2, x23
    d8c4:	mov	w1, w24
    d8c8:	mov	x0, x22
    d8cc:	bl	1a34c <OnPrint@@Base+0x1ae4>
    d8d0:	mov	x2, x22
    d8d4:	mov	x1, x21
    d8d8:	mov	x0, x20
    d8dc:	bl	ac74 <__sanitizer_get_allocated_size@@Base+0x774>
    d8e0:	ldp	x29, x30, [sp]
    d8e4:	ldp	x19, x20, [sp, #16]
    d8e8:	ldp	x21, x22, [sp, #32]
    d8ec:	ldp	x23, x24, [sp, #48]
    d8f0:	add	sp, sp, #0x860
    d8f4:	ret
    d8f8:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    d8fc:	cbz	x0, d8ac <__sancov_lowest_stack@@Base+0x7c>
    d900:	ldp	x6, x5, [x0, #144]
    d904:	b	d8b4 <__sancov_lowest_stack@@Base+0x84>

000000000000d908 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base>:
    d908:	sub	sp, sp, #0x860
    d90c:	stp	x29, x30, [sp]
    d910:	mov	x29, sp
    d914:	stp	x21, x22, [sp, #32]
    d918:	mov	x21, x0
    d91c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d920:	stp	x19, x20, [sp, #16]
    d924:	ldr	x0, [x0, #4048]
    d928:	stp	x23, x24, [sp, #48]
    d92c:	ldrb	w0, [x0]
    d930:	cbz	w0, d954 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x4c>
    d934:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d938:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    d93c:	add	x2, x2, #0x4d1
    d940:	add	x0, x0, #0xd59
    d944:	mov	x4, #0x0                   	// #0
    d948:	mov	x3, #0x0                   	// #0
    d94c:	mov	w1, #0xf2                  	// #242
    d950:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    d954:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d958:	mov	x20, x1
    d95c:	ldr	x0, [x0, #3592]
    d960:	ldrb	w0, [x0]
    d964:	cbnz	w0, d96c <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x64>
    d968:	bl	6ba0 <__lsan_init@plt>
    d96c:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    d970:	add	x22, x29, #0x48
    d974:	add	x0, x22, #0x10
    d978:	stp	x0, xzr, [x29, #72]
    d97c:	ldr	x19, [x19, #4040]
    d980:	str	xzr, [x29, #2136]
    d984:	ldrsw	x24, [x19, #36]
    d988:	bl	1a114 <OnPrint@@Base+0x18ac>
    d98c:	ldrb	w19, [x19, #34]
    d990:	mov	x23, x0
    d994:	cbnz	w19, d9e4 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0xdc>
    d998:	mov	x6, #0x0                   	// #0
    d99c:	mov	x5, #0x0                   	// #0
    d9a0:	mov	w7, w19
    d9a4:	mov	x3, x29
    d9a8:	mov	x4, #0x0                   	// #0
    d9ac:	mov	x2, x23
    d9b0:	mov	w1, w24
    d9b4:	mov	x0, x22
    d9b8:	bl	1a34c <OnPrint@@Base+0x1ae4>
    d9bc:	mov	x2, x22
    d9c0:	mov	x1, x21
    d9c4:	mov	x0, x20
    d9c8:	bl	ac74 <__sanitizer_get_allocated_size@@Base+0x774>
    d9cc:	ldp	x29, x30, [sp]
    d9d0:	ldp	x19, x20, [sp, #16]
    d9d4:	ldp	x21, x22, [sp, #32]
    d9d8:	ldp	x23, x24, [sp, #48]
    d9dc:	add	sp, sp, #0x860
    d9e0:	ret
    d9e4:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    d9e8:	cbz	x0, d998 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x90>
    d9ec:	ldp	x6, x5, [x0, #144]
    d9f0:	b	d9a0 <_ZnamSt11align_val_tRKSt9nothrow_t@@Base+0x98>

000000000000d9f4 <_ZdlPv@@Base>:
    d9f4:	stp	x19, x30, [sp, #-16]!
    d9f8:	mov	x19, x0
    d9fc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    da00:	ldr	x0, [x0, #4048]
    da04:	ldrb	w0, [x0]
    da08:	cbz	w0, da2c <_ZdlPv@@Base+0x38>
    da0c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    da10:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    da14:	add	x2, x2, #0x4d1
    da18:	add	x0, x0, #0xd59
    da1c:	mov	x4, #0x0                   	// #0
    da20:	mov	x3, #0x0                   	// #0
    da24:	mov	w1, #0xf5                  	// #245
    da28:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    da2c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    da30:	ldr	x0, [x0, #3592]
    da34:	ldrb	w0, [x0]
    da38:	cbnz	w0, da40 <_ZdlPv@@Base+0x4c>
    da3c:	bl	6ba0 <__lsan_init@plt>
    da40:	mov	x0, x19
    da44:	ldp	x19, x30, [sp], #16
    da48:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000da4c <_ZdaPv@@Base>:
    da4c:	stp	x19, x30, [sp, #-16]!
    da50:	mov	x19, x0
    da54:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    da58:	ldr	x0, [x0, #4048]
    da5c:	ldrb	w0, [x0]
    da60:	cbz	w0, da84 <_ZdaPv@@Base+0x38>
    da64:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    da68:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    da6c:	add	x2, x2, #0x4d1
    da70:	add	x0, x0, #0xd59
    da74:	mov	x4, #0x0                   	// #0
    da78:	mov	x3, #0x0                   	// #0
    da7c:	mov	w1, #0xf7                  	// #247
    da80:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    da84:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    da88:	ldr	x0, [x0, #3592]
    da8c:	ldrb	w0, [x0]
    da90:	cbnz	w0, da98 <_ZdaPv@@Base+0x4c>
    da94:	bl	6ba0 <__lsan_init@plt>
    da98:	mov	x0, x19
    da9c:	ldp	x19, x30, [sp], #16
    daa0:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000daa4 <_ZdlPvRKSt9nothrow_t@@Base>:
    daa4:	stp	x19, x30, [sp, #-16]!
    daa8:	mov	x19, x0
    daac:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dab0:	ldr	x0, [x0, #4048]
    dab4:	ldrb	w0, [x0]
    dab8:	cbz	w0, dadc <_ZdlPvRKSt9nothrow_t@@Base+0x38>
    dabc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dac0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dac4:	add	x2, x2, #0x4d1
    dac8:	add	x0, x0, #0xd59
    dacc:	mov	x4, #0x0                   	// #0
    dad0:	mov	x3, #0x0                   	// #0
    dad4:	mov	w1, #0xf9                  	// #249
    dad8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    dadc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dae0:	ldr	x0, [x0, #3592]
    dae4:	ldrb	w0, [x0]
    dae8:	cbnz	w0, daf0 <_ZdlPvRKSt9nothrow_t@@Base+0x4c>
    daec:	bl	6ba0 <__lsan_init@plt>
    daf0:	mov	x0, x19
    daf4:	ldp	x19, x30, [sp], #16
    daf8:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000dafc <_ZdaPvRKSt9nothrow_t@@Base>:
    dafc:	stp	x19, x30, [sp, #-16]!
    db00:	mov	x19, x0
    db04:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    db08:	ldr	x0, [x0, #4048]
    db0c:	ldrb	w0, [x0]
    db10:	cbz	w0, db34 <_ZdaPvRKSt9nothrow_t@@Base+0x38>
    db14:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    db18:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    db1c:	add	x2, x2, #0x4d1
    db20:	add	x0, x0, #0xd59
    db24:	mov	x4, #0x0                   	// #0
    db28:	mov	x3, #0x0                   	// #0
    db2c:	mov	w1, #0xfc                  	// #252
    db30:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    db34:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    db38:	ldr	x0, [x0, #3592]
    db3c:	ldrb	w0, [x0]
    db40:	cbnz	w0, db48 <_ZdaPvRKSt9nothrow_t@@Base+0x4c>
    db44:	bl	6ba0 <__lsan_init@plt>
    db48:	mov	x0, x19
    db4c:	ldp	x19, x30, [sp], #16
    db50:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000db54 <_ZdlPvm@@Base>:
    db54:	stp	x19, x30, [sp, #-16]!
    db58:	mov	x19, x0
    db5c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    db60:	ldr	x0, [x0, #4048]
    db64:	ldrb	w0, [x0]
    db68:	cbz	w0, db8c <_ZdlPvm@@Base+0x38>
    db6c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    db70:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    db74:	add	x2, x2, #0x4d1
    db78:	add	x0, x0, #0xd59
    db7c:	mov	x4, #0x0                   	// #0
    db80:	mov	x3, #0x0                   	// #0
    db84:	mov	w1, #0xff                  	// #255
    db88:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    db8c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    db90:	ldr	x0, [x0, #3592]
    db94:	ldrb	w0, [x0]
    db98:	cbnz	w0, dba0 <_ZdlPvm@@Base+0x4c>
    db9c:	bl	6ba0 <__lsan_init@plt>
    dba0:	mov	x0, x19
    dba4:	ldp	x19, x30, [sp], #16
    dba8:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000dbac <_ZdaPvm@@Base>:
    dbac:	stp	x19, x30, [sp, #-16]!
    dbb0:	mov	x19, x0
    dbb4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dbb8:	ldr	x0, [x0, #4048]
    dbbc:	ldrb	w0, [x0]
    dbc0:	cbz	w0, dbe4 <_ZdaPvm@@Base+0x38>
    dbc4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dbc8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dbcc:	add	x2, x2, #0x4d1
    dbd0:	add	x0, x0, #0xd59
    dbd4:	mov	x4, #0x0                   	// #0
    dbd8:	mov	x3, #0x0                   	// #0
    dbdc:	mov	w1, #0x102                 	// #258
    dbe0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    dbe4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dbe8:	ldr	x0, [x0, #3592]
    dbec:	ldrb	w0, [x0]
    dbf0:	cbnz	w0, dbf8 <_ZdaPvm@@Base+0x4c>
    dbf4:	bl	6ba0 <__lsan_init@plt>
    dbf8:	mov	x0, x19
    dbfc:	ldp	x19, x30, [sp], #16
    dc00:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000dc04 <_ZdlPvSt11align_val_t@@Base>:
    dc04:	stp	x19, x30, [sp, #-16]!
    dc08:	mov	x19, x0
    dc0c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dc10:	ldr	x0, [x0, #4048]
    dc14:	ldrb	w0, [x0]
    dc18:	cbz	w0, dc3c <_ZdlPvSt11align_val_t@@Base+0x38>
    dc1c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dc20:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dc24:	add	x2, x2, #0x4d1
    dc28:	add	x0, x0, #0xd59
    dc2c:	mov	x4, #0x0                   	// #0
    dc30:	mov	x3, #0x0                   	// #0
    dc34:	mov	w1, #0x105                 	// #261
    dc38:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    dc3c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dc40:	ldr	x0, [x0, #3592]
    dc44:	ldrb	w0, [x0]
    dc48:	cbnz	w0, dc50 <_ZdlPvSt11align_val_t@@Base+0x4c>
    dc4c:	bl	6ba0 <__lsan_init@plt>
    dc50:	mov	x0, x19
    dc54:	ldp	x19, x30, [sp], #16
    dc58:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000dc5c <_ZdaPvSt11align_val_t@@Base>:
    dc5c:	stp	x19, x30, [sp, #-16]!
    dc60:	mov	x19, x0
    dc64:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dc68:	ldr	x0, [x0, #4048]
    dc6c:	ldrb	w0, [x0]
    dc70:	cbz	w0, dc94 <_ZdaPvSt11align_val_t@@Base+0x38>
    dc74:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dc78:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dc7c:	add	x2, x2, #0x4d1
    dc80:	add	x0, x0, #0xd59
    dc84:	mov	x4, #0x0                   	// #0
    dc88:	mov	x3, #0x0                   	// #0
    dc8c:	mov	w1, #0x108                 	// #264
    dc90:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    dc94:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dc98:	ldr	x0, [x0, #3592]
    dc9c:	ldrb	w0, [x0]
    dca0:	cbnz	w0, dca8 <_ZdaPvSt11align_val_t@@Base+0x4c>
    dca4:	bl	6ba0 <__lsan_init@plt>
    dca8:	mov	x0, x19
    dcac:	ldp	x19, x30, [sp], #16
    dcb0:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000dcb4 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base>:
    dcb4:	stp	x19, x30, [sp, #-16]!
    dcb8:	mov	x19, x0
    dcbc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dcc0:	ldr	x0, [x0, #4048]
    dcc4:	ldrb	w0, [x0]
    dcc8:	cbz	w0, dcec <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x38>
    dccc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dcd0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dcd4:	add	x2, x2, #0x4d1
    dcd8:	add	x0, x0, #0xd59
    dcdc:	mov	x4, #0x0                   	// #0
    dce0:	mov	x3, #0x0                   	// #0
    dce4:	mov	w1, #0x10b                 	// #267
    dce8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    dcec:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dcf0:	ldr	x0, [x0, #3592]
    dcf4:	ldrb	w0, [x0]
    dcf8:	cbnz	w0, dd00 <_ZdlPvSt11align_val_tRKSt9nothrow_t@@Base+0x4c>
    dcfc:	bl	6ba0 <__lsan_init@plt>
    dd00:	mov	x0, x19
    dd04:	ldp	x19, x30, [sp], #16
    dd08:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000dd0c <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base>:
    dd0c:	stp	x19, x30, [sp, #-16]!
    dd10:	mov	x19, x0
    dd14:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dd18:	ldr	x0, [x0, #4048]
    dd1c:	ldrb	w0, [x0]
    dd20:	cbz	w0, dd44 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x38>
    dd24:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dd28:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dd2c:	add	x2, x2, #0x4d1
    dd30:	add	x0, x0, #0xd59
    dd34:	mov	x4, #0x0                   	// #0
    dd38:	mov	x3, #0x0                   	// #0
    dd3c:	mov	w1, #0x10e                 	// #270
    dd40:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    dd44:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dd48:	ldr	x0, [x0, #3592]
    dd4c:	ldrb	w0, [x0]
    dd50:	cbnz	w0, dd58 <_ZdaPvSt11align_val_tRKSt9nothrow_t@@Base+0x4c>
    dd54:	bl	6ba0 <__lsan_init@plt>
    dd58:	mov	x0, x19
    dd5c:	ldp	x19, x30, [sp], #16
    dd60:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000dd64 <_ZdlPvmSt11align_val_t@@Base>:
    dd64:	stp	x19, x30, [sp, #-16]!
    dd68:	mov	x19, x0
    dd6c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dd70:	ldr	x0, [x0, #4048]
    dd74:	ldrb	w0, [x0]
    dd78:	cbz	w0, dd9c <_ZdlPvmSt11align_val_t@@Base+0x38>
    dd7c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dd80:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dd84:	add	x2, x2, #0x4d1
    dd88:	add	x0, x0, #0xd59
    dd8c:	mov	x4, #0x0                   	// #0
    dd90:	mov	x3, #0x0                   	// #0
    dd94:	mov	w1, #0x111                 	// #273
    dd98:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    dd9c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dda0:	ldr	x0, [x0, #3592]
    dda4:	ldrb	w0, [x0]
    dda8:	cbnz	w0, ddb0 <_ZdlPvmSt11align_val_t@@Base+0x4c>
    ddac:	bl	6ba0 <__lsan_init@plt>
    ddb0:	mov	x0, x19
    ddb4:	ldp	x19, x30, [sp], #16
    ddb8:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>

000000000000ddbc <_ZdaPvmSt11align_val_t@@Base>:
    ddbc:	stp	x19, x30, [sp, #-16]!
    ddc0:	mov	x19, x0
    ddc4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ddc8:	ldr	x0, [x0, #4048]
    ddcc:	ldrb	w0, [x0]
    ddd0:	cbz	w0, ddf4 <_ZdaPvmSt11align_val_t@@Base+0x38>
    ddd4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ddd8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dddc:	add	x2, x2, #0x4d1
    dde0:	add	x0, x0, #0xd59
    dde4:	mov	x4, #0x0                   	// #0
    dde8:	mov	x3, #0x0                   	// #0
    ddec:	mov	w1, #0x114                 	// #276
    ddf0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    ddf4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ddf8:	ldr	x0, [x0, #3592]
    ddfc:	ldrb	w0, [x0]
    de00:	cbnz	w0, de08 <_ZdaPvmSt11align_val_t@@Base+0x4c>
    de04:	bl	6ba0 <__lsan_init@plt>
    de08:	mov	x0, x19
    de0c:	ldp	x19, x30, [sp], #16
    de10:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x524>
    de14:	adrp	x3, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    de18:	ldr	x3, [x3, #3992]
    de1c:	mov	x16, x3
    de20:	br	x16
    de24:	stp	x19, x30, [sp, #-16]!
    de28:	adrp	x19, d4000 <__asan_cplus_demangle_operators@@Base+0x83be0>
    de2c:	add	x19, x19, #0xf80
    de30:	ldrb	w0, [x19, #52]
    de34:	cbz	w0, de58 <_ZdaPvmSt11align_val_t@@Base+0x9c>
    de38:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    de3c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    de40:	add	x2, x2, #0xdee
    de44:	add	x0, x0, #0xe0a
    de48:	mov	x4, #0x0                   	// #0
    de4c:	mov	x3, #0x0                   	// #0
    de50:	mov	w1, #0x4f                  	// #79
    de54:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    de58:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    de5c:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    de60:	mov	w0, #0x1                   	// #1
    de64:	add	x1, x19, #0x10
    de68:	ldr	x3, [x3, #3984]
    de6c:	strb	w0, [x19, #52]
    de70:	ldr	x2, [x2, #3440]
    de74:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    de78:	add	x0, x0, #0xe56
    de7c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    de80:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    de84:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    de88:	add	x1, x19, #0x18
    de8c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    de90:	ldr	x3, [x3, #3720]
    de94:	add	x0, x0, #0xe5d
    de98:	ldr	x2, [x2, #3800]
    de9c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    dea0:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dea4:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dea8:	add	x1, x19, #0x38
    deac:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
    deb0:	ldr	x3, [x3, #3640]
    deb4:	add	x0, x0, #0x1b4
    deb8:	ldr	x2, [x2, #3752]
    debc:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    dec0:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dec4:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dec8:	add	x1, x19, #0x40
    decc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ded0:	ldr	x3, [x3, #3848]
    ded4:	add	x0, x0, #0xe68
    ded8:	ldr	x2, [x2, #3464]
    dedc:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    dee0:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dee4:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dee8:	add	x1, x19, #0x48
    deec:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    def0:	ldr	x3, [x3, #3944]
    def4:	add	x0, x0, #0xe67
    def8:	ldr	x2, [x2, #4056]
    defc:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    df00:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df04:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df08:	add	x1, x19, #0x50
    df0c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    df10:	ldr	x3, [x3, #3864]
    df14:	add	x0, x0, #0xe6d
    df18:	ldr	x2, [x2, #3768]
    df1c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    df20:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df24:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df28:	add	x1, x19, #0x58
    df2c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    df30:	ldr	x3, [x3, #3960]
    df34:	add	x0, x0, #0xe74
    df38:	ldr	x2, [x2, #3904]
    df3c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    df40:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df44:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df48:	add	x1, x19, #0x60
    df4c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    df50:	ldr	x3, [x3, #3576]
    df54:	add	x0, x0, #0xe83
    df58:	ldr	x2, [x2, #3416]
    df5c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    df60:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df64:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df68:	add	x1, x19, #0x68
    df6c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    df70:	ldr	x3, [x3, #3448]
    df74:	add	x0, x0, #0xe7c
    df78:	ldr	x2, [x2, #3872]
    df7c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    df80:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df84:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    df88:	add	x1, x19, #0x70
    df8c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    df90:	ldr	x3, [x3, #3952]
    df94:	add	x0, x0, #0xe8c
    df98:	ldr	x2, [x2, #3896]
    df9c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    dfa0:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dfa4:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dfa8:	add	x1, x19, #0x78
    dfac:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dfb0:	ldr	x3, [x3, #3792]
    dfb4:	add	x0, x0, #0xe9a
    dfb8:	ldr	x2, [x2, #3656]
    dfbc:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    dfc0:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dfc4:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dfc8:	add	x1, x19, #0x80
    dfcc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dfd0:	ldr	x3, [x3, #3624]
    dfd4:	add	x0, x0, #0xeaa
    dfd8:	ldr	x2, [x2, #3912]
    dfdc:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    dfe0:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dfe4:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    dfe8:	add	x1, x19, #0x88
    dfec:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    dff0:	ldr	x3, [x3, #3824]
    dff4:	add	x0, x0, #0xea9
    dff8:	ldr	x2, [x2, #3888]
    dffc:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    e000:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e004:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e008:	add	x1, x19, #0x90
    e00c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e010:	ldr	x3, [x3, #3776]
    e014:	add	x0, x0, #0xeb1
    e018:	ldr	x2, [x2, #3992]
    e01c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    e020:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e024:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e028:	add	x1, x19, #0x98
    e02c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e030:	ldr	x3, [x3, #3480]
    e034:	add	x0, x0, #0xec4
    e038:	ldr	x2, [x2, #3632]
    e03c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    e040:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e044:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e048:	add	x1, x19, #0xa0
    e04c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e050:	ldr	x3, [x3, #3688]
    e054:	add	x0, x0, #0xecd
    e058:	ldr	x2, [x2, #3600]
    e05c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    e060:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e064:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e068:	add	x1, x19, #0x28
    e06c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e070:	ldr	x3, [x3, #3520]
    e074:	add	x0, x0, #0xed5
    e078:	ldr	x2, [x2, #3504]
    e07c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    e080:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e084:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e088:	mov	x1, x19
    e08c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e090:	ldr	x3, [x3, #3968]
    e094:	add	x0, x0, #0xee4
    e098:	ldr	x2, [x2, #3936]
    e09c:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    e0a0:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e0a4:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e0a8:	add	x1, x19, #0x8
    e0ac:	adrp	x0, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
    e0b0:	ldr	x3, [x3, #3696]
    e0b4:	add	x0, x0, #0x529
    e0b8:	ldr	x2, [x2, #3608]
    e0bc:	bl	20554 <__sanitizer_set_death_callback@@Base+0x14dc>
    e0c0:	adrp	x1, d000 <__interceptor_calloc@@Base+0x24>
    e0c4:	add	x0, x19, #0x30
    e0c8:	add	x1, x1, #0x220
    e0cc:	bl	6be0 <pthread_key_create@plt>
    e0d0:	cbz	w0, e0e4 <_ZdaPvmSt11align_val_t@@Base+0x328>
    e0d4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e0d8:	add	x0, x0, #0xef1
    e0dc:	bl	18b74 <OnPrint@@Base+0x30c>
    e0e0:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    e0e4:	ldp	x19, x30, [sp], #16
    e0e8:	ret
    e0ec:	ldr	x2, [x1]
    e0f0:	str	x2, [x0, #144]
    e0f4:	ldr	x2, [x1, #8]
    e0f8:	str	x2, [x0, #152]
    e0fc:	ldr	x2, [x1, #32]
    e100:	str	x2, [x0, #176]
    e104:	ldr	x2, [x1, #40]
    e108:	str	x2, [x0, #184]
    e10c:	ldr	x2, [x1, #16]
    e110:	str	x2, [x0, #160]
    e114:	ldr	x2, [x1, #24]
    e118:	ldr	x1, [x1, #48]
    e11c:	str	x2, [x0, #168]
    e120:	str	x1, [x0, #192]
    e124:	ret
    e128:	ldr	x2, [x0, #40]
    e12c:	cmp	x1, x2
    e130:	b.ne	e144 <_ZdaPvmSt11align_val_t@@Base+0x388>  // b.any
    e134:	ldr	w0, [x0, #112]
    e138:	cmp	w0, #0x0
    e13c:	cset	w0, ne  // ne = any
    e140:	ret
    e144:	mov	w0, #0x0                   	// #0
    e148:	b	e140 <_ZdaPvmSt11align_val_t@@Base+0x384>
    e14c:	str	x30, [sp, #-16]!
    e150:	bl	a978 <__sanitizer_get_allocated_size@@Base+0x478>
    e154:	ldr	x30, [sp], #16
    e158:	b	1fd68 <__sanitizer_set_death_callback@@Base+0xcf0>
    e15c:	stp	x19, x30, [sp, #-16]!
    e160:	adrp	x19, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e164:	add	x19, x19, #0x40
    e168:	mov	x0, x19
    e16c:	mov	w4, #0x0                   	// #0
    e170:	mov	w3, #0x40                  	// #64
    e174:	mov	w2, #0x2000                	// #8192
    e178:	adrp	x1, e000 <_ZdaPvmSt11align_val_t@@Base+0x244>
    e17c:	add	x1, x1, #0x1c0
    e180:	bl	1f2c4 <__sanitizer_set_death_callback@@Base+0x24c>
    e184:	str	x19, [x19, #208]
    e188:	ldp	x19, x30, [sp], #16
    e18c:	ret
    e190:	stp	x19, x30, [sp, #-16]!
    e194:	mov	x19, x0
    e198:	bl	1f0a8 <__sanitizer_set_death_callback@@Base+0x30>
    e19c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
    e1a0:	add	x0, x0, #0xbc8
    e1a4:	str	x0, [x19]
    e1a8:	stp	xzr, xzr, [x19, #144]
    e1ac:	stp	xzr, xzr, [x19, #160]
    e1b0:	stp	xzr, xzr, [x19, #176]
    e1b4:	str	xzr, [x19, #192]
    e1b8:	ldp	x19, x30, [sp], #16
    e1bc:	ret
    e1c0:	stp	x19, x20, [sp, #-32]!
    e1c4:	mov	w2, #0x0                   	// #0
    e1c8:	mov	w20, w0
    e1cc:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e1d0:	mov	x0, #0xc8                  	// #200
    e1d4:	add	x1, x1, #0xf1e
    e1d8:	str	x30, [sp, #16]
    e1dc:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    e1e0:	mov	x19, x0
    e1e4:	mov	w1, w20
    e1e8:	bl	e190 <_ZdaPvmSt11align_val_t@@Base+0x3d4>
    e1ec:	mov	x0, x19
    e1f0:	ldr	x30, [sp, #16]
    e1f4:	ldp	x19, x20, [sp], #32
    e1f8:	ret
    e1fc:	mov	w3, w0
    e200:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e204:	mov	x4, #0x0                   	// #0
    e208:	ldr	x0, [x0, #272]
    e20c:	b	1f724 <__sanitizer_set_death_callback@@Base+0x6ac>
    e210:	stp	x19, x20, [sp, #-128]!
    e214:	cmp	w0, #0x0
    e218:	mov	w20, w0
    e21c:	add	x19, sp, #0x48
    e220:	cset	w0, eq  // eq = none
    e224:	add	x4, sp, #0x40
    e228:	add	x3, sp, #0x68
    e22c:	stp	x21, x22, [sp, #16]
    e230:	mov	x21, x1
    e234:	and	w22, w2, #0xff
    e238:	mov	x1, x19
    e23c:	add	x2, sp, #0x38
    e240:	str	x30, [sp, #32]
    e244:	stp	xzr, xzr, [sp, #56]
    e248:	bl	163f8 <__sanitizer_set_report_fd@@Base+0x3944>
    e24c:	ldr	x1, [sp, #56]
    e250:	ldr	x0, [sp, #72]
    e254:	add	x0, x0, x1
    e258:	str	x0, [sp, #80]
    e25c:	ldr	x1, [sp, #64]
    e260:	ldr	x0, [sp, #104]
    e264:	add	x0, x0, x1
    e268:	add	x1, x19, #0x18
    e26c:	str	x0, [sp, #112]
    e270:	add	x0, x19, #0x10
    e274:	bl	a28c <__sanitizer_print_stack_trace@@Base+0x1ec>
    e278:	bl	20160 <__sanitizer_set_death_callback@@Base+0x10e8>
    e27c:	str	x0, [sp, #120]
    e280:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e284:	mov	x4, x19
    e288:	mov	w3, w22
    e28c:	mov	x2, x21
    e290:	ldr	x0, [x0, #272]
    e294:	mov	w1, w20
    e298:	bl	1f62c <__sanitizer_set_death_callback@@Base+0x5b4>
    e29c:	ldp	x21, x22, [sp, #16]
    e2a0:	ldr	x30, [sp, #32]
    e2a4:	ldp	x19, x20, [sp], #128
    e2a8:	ret
    e2ac:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e2b0:	stp	x19, x30, [sp, #-16]!
    e2b4:	ldr	x19, [x0, #272]
    e2b8:	bl	a12c <__sanitizer_print_stack_trace@@Base+0x8c>
    e2bc:	mov	w1, w0
    e2c0:	mov	x0, x19
    e2c4:	bl	1fb7c <__sanitizer_set_death_callback@@Base+0xb04>
    e2c8:	ldp	x19, x30, [sp], #16
    e2cc:	mov	w0, #0xffffffff            	// #-1
    e2d0:	b	a150 <__sanitizer_print_stack_trace@@Base+0xb0>
    e2d4:	stp	x19, x30, [sp, #-16]!
    e2d8:	adrp	x19, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e2dc:	add	x19, x19, #0x40
    e2e0:	ldr	x0, [x19, #208]
    e2e4:	cbnz	x0, e2f4 <_ZdaPvmSt11align_val_t@@Base+0x538>
    e2e8:	mov	x0, #0x0                   	// #0
    e2ec:	ldp	x19, x30, [sp], #16
    e2f0:	ret
    e2f4:	bl	a12c <__sanitizer_print_stack_trace@@Base+0x8c>
    e2f8:	cmn	w0, #0x1
    e2fc:	b.eq	e2e8 <_ZdaPvmSt11align_val_t@@Base+0x52c>  // b.none
    e300:	ldr	x19, [x19, #208]
    e304:	bl	a12c <__sanitizer_print_stack_trace@@Base+0x8c>
    e308:	ldr	x1, [x19, #152]
    e30c:	ldr	x0, [x1, w0, uxtw #3]
    e310:	b	e2ec <_ZdaPvmSt11align_val_t@@Base+0x530>
    e314:	mov	x2, x0
    e318:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e31c:	adrp	x1, e000 <_ZdaPvmSt11align_val_t@@Base+0x244>
    e320:	add	x1, x1, #0x128
    e324:	ldr	x0, [x0, #272]
    e328:	b	1f48c <__sanitizer_set_death_callback@@Base+0x414>
    e32c:	cmn	w0, #0x1
    e330:	b.ne	e358 <_ZdaPvmSt11align_val_t@@Base+0x59c>  // b.any
    e334:	str	x30, [sp, #-16]!
    e338:	mov	x4, #0xffffffff            	// #4294967295
    e33c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e340:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e344:	mov	x3, x4
    e348:	add	x2, x2, #0xf2c
    e34c:	add	x0, x0, #0xf47
    e350:	mov	w1, #0x75                  	// #117
    e354:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    e358:	mov	w1, w0
    e35c:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e360:	mov	x2, #0x0                   	// #0
    e364:	ldr	x0, [x0, #272]
    e368:	b	1fa7c <__sanitizer_set_death_callback@@Base+0xa04>
    e36c:	stp	x19, x30, [sp, #-16]!
    e370:	bl	a12c <__sanitizer_print_stack_trace@@Base+0x8c>
    e374:	cbnz	w0, e388 <_ZdaPvmSt11align_val_t@@Base+0x5cc>
    e378:	bl	e2d4 <_ZdaPvmSt11align_val_t@@Base+0x518>
    e37c:	mov	x19, x0
    e380:	bl	15118 <__sanitizer_set_report_fd@@Base+0x2664>
    e384:	str	x0, [x19, #32]
    e388:	ldp	x19, x30, [sp], #16
    e38c:	ret
    e390:	stp	x19, x20, [sp, #-64]!
    e394:	mov	x20, x6
    e398:	mov	x19, x7
    e39c:	stp	x25, x30, [sp, #48]
    e3a0:	mov	x25, x1
    e3a4:	mov	x1, x0
    e3a8:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e3ac:	stp	x21, x22, [sp, #16]
    e3b0:	mov	x22, x4
    e3b4:	ldr	x0, [x0, #272]
    e3b8:	mov	x21, x5
    e3bc:	stp	x23, x24, [sp, #32]
    e3c0:	mov	x24, x2
    e3c4:	mov	x23, x3
    e3c8:	bl	1f3ec <__sanitizer_set_death_callback@@Base+0x374>
    e3cc:	cbz	x0, e420 <_ZdaPvmSt11align_val_t@@Base+0x664>
    e3d0:	ldr	x1, [x0, #144]
    e3d4:	str	x1, [x25]
    e3d8:	ldr	x1, [x0, #152]
    e3dc:	str	x1, [x24]
    e3e0:	ldr	x1, [x0, #176]
    e3e4:	str	x1, [x23]
    e3e8:	ldr	x1, [x0, #184]
    e3ec:	str	x1, [x22]
    e3f0:	ldr	x1, [x0, #160]
    e3f4:	str	x1, [x21]
    e3f8:	ldr	x1, [x0, #168]
    e3fc:	ldr	x0, [x0, #192]
    e400:	str	x1, [x20]
    e404:	str	x0, [x19]
    e408:	mov	w0, #0x1                   	// #1
    e40c:	ldp	x21, x22, [sp, #16]
    e410:	ldp	x23, x24, [sp, #32]
    e414:	ldp	x25, x30, [sp, #48]
    e418:	ldp	x19, x20, [sp], #64
    e41c:	ret
    e420:	mov	w0, #0x0                   	// #0
    e424:	b	e40c <_ZdaPvmSt11align_val_t@@Base+0x650>
    e428:	ret
    e42c:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e430:	ldr	x0, [x0, #272]
    e434:	add	x0, x0, #0x18
    e438:	b	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
    e43c:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e440:	ldr	x0, [x0, #272]
    e444:	add	x0, x0, #0x18
    e448:	b	153ec <__sanitizer_set_report_fd@@Base+0x2938>
    e44c:	stp	x19, x30, [sp, #-16]!
    e450:	adrp	x19, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e454:	add	x19, x19, #0x40
    e458:	ldr	x0, [x19, #208]
    e45c:	add	x0, x0, #0x18
    e460:	bl	15454 <__sanitizer_set_report_fd@@Base+0x29a0>
    e464:	ldr	x0, [x19, #208]
    e468:	ldp	x19, x30, [sp], #16
    e46c:	ret
    e470:	ret
    e474:	ret
    e478:	ret
    e47c:	ret
    e480:	ret

000000000000e484 <__sancov_default_options@@Base>:
    e484:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    e488:	add	x0, x0, #0x60f
    e48c:	ret
    e490:	mov	w1, #0x1                   	// #1
    e494:	strh	w1, [x0]
    e498:	ret
    e49c:	stp	x19, x20, [sp, #-80]!
    e4a0:	adrp	x20, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e4a4:	add	x20, x20, #0x118
    e4a8:	stp	x21, x22, [sp, #16]
    e4ac:	adrp	x22, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e4b0:	add	x19, sp, #0x30
    e4b4:	mov	w0, #0x1                   	// #1
    e4b8:	strh	w0, [x20]
    e4bc:	mov	x0, x19
    e4c0:	str	x30, [sp, #32]
    e4c4:	bl	14258 <__sanitizer_set_report_fd@@Base+0x17a4>
    e4c8:	adrp	x21, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
    e4cc:	ldr	x22, [x22, #3456]
    e4d0:	mov	x1, #0x10                  	// #16
    e4d4:	add	x21, x21, #0xb80
    e4d8:	mov	x0, x22
    e4dc:	bl	e5ec <__sancov_default_options@@Base+0x168>
    e4e0:	adrp	x3, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e4e4:	mov	x2, x0
    e4e8:	add	x3, x3, #0xf74
    e4ec:	stp	x21, x20, [x0]
    e4f0:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e4f4:	mov	x0, x19
    e4f8:	add	x1, x1, #0xfc3
    e4fc:	bl	14200 <__sanitizer_set_report_fd@@Base+0x174c>
    e500:	mov	x1, #0x10                  	// #16
    e504:	mov	x0, x22
    e508:	bl	e5ec <__sancov_default_options@@Base+0x168>
    e50c:	mov	x2, x0
    e510:	str	x21, [x0]
    e514:	add	x0, x20, #0x1
    e518:	adrp	x3, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e51c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e520:	add	x3, x3, #0xfcd
    e524:	add	x1, x1, #0xfdf
    e528:	str	x0, [x2, #8]
    e52c:	mov	x0, x19
    e530:	bl	14200 <__sanitizer_set_report_fd@@Base+0x174c>
    e534:	bl	6da0 <__sancov_default_options@plt>
    e538:	mov	x1, x0
    e53c:	mov	x0, x19
    e540:	bl	14120 <__sanitizer_set_report_fd@@Base+0x166c>
    e544:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e548:	add	x0, x0, #0xfe4
    e54c:	bl	15190 <__sanitizer_set_report_fd@@Base+0x26dc>
    e550:	mov	x1, x0
    e554:	mov	x0, x19
    e558:	bl	14120 <__sanitizer_set_report_fd@@Base+0x166c>
    e55c:	bl	13cf8 <__sanitizer_set_report_fd@@Base+0x1244>
    e560:	ldrb	w0, [x20, #1]
    e564:	cbz	w0, e570 <__sancov_default_options@@Base+0xec>
    e568:	mov	x0, x19
    e56c:	bl	13dac <__sanitizer_set_report_fd@@Base+0x12f8>
    e570:	ldp	x21, x22, [sp, #16]
    e574:	ldr	x30, [sp, #32]
    e578:	ldp	x19, x20, [sp], #80
    e57c:	ret
    e580:	adrp	x1, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e584:	mov	w2, #0x1                   	// #1
    e588:	str	x30, [sp, #-16]!
    e58c:	strb	w2, [x1, #320]
    e590:	mov	x2, x0
    e594:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e598:	ldr	x0, [x0, #4008]
    e59c:	ldr	x1, [x0]
    e5a0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e5a4:	add	x0, x0, #0xff3
    e5a8:	bl	18b74 <OnPrint@@Base+0x30c>
    e5ac:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    e5b0:	stp	x19, x30, [sp, #-16]!
    e5b4:	mov	x19, x0
    e5b8:	bl	91b4 <__lsan_do_recoverable_leak_check@@Base+0x858>
    e5bc:	sub	w2, w0, #0x2
    e5c0:	mov	w1, #0x1                   	// #1
    e5c4:	lsl	w1, w1, w2
    e5c8:	sub	w1, w1, #0x1
    e5cc:	tst	x1, x19
    e5d0:	lsr	x19, x19, x2
    e5d4:	and	x19, x19, #0x3
    e5d8:	cinc	x19, x19, ne  // ne = any
    e5dc:	add	x0, x19, x0, lsl #2
    e5e0:	sub	x0, x0, #0x10
    e5e4:	ldp	x19, x30, [sp], #16
    e5e8:	ret
    e5ec:	stp	x19, x20, [sp, #-32]!
    e5f0:	mov	x19, x0
    e5f4:	mov	x0, x1
    e5f8:	adrp	x1, 51000 <_Unwind_Backtrace@GCC_3.3>
    e5fc:	stp	x21, x30, [sp, #16]
    e600:	ldr	x1, [x1, #952]
    e604:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    e608:	mov	x20, x0
    e60c:	ldp	x0, x1, [x19]
    e610:	sub	x0, x0, x1
    e614:	cmp	x0, x20
    e618:	b.ge	e65c <__sancov_default_options@@Base+0x1d8>  // b.tcont
    e61c:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    e620:	cmp	x0, x20
    e624:	csel	x21, x0, x20, cs  // cs = hs, nlast
    e628:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    e62c:	add	x1, x1, #0x42
    e630:	mov	w2, #0x0                   	// #0
    e634:	mov	x0, x21
    e638:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    e63c:	add	x1, x0, x21
    e640:	str	x1, [x19]
    e644:	adrp	x1, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e648:	str	x0, [x19, #8]
    e64c:	ldr	x2, [x1, #328]
    e650:	cbz	x2, e65c <__sancov_default_options@@Base+0x1d8>
    e654:	mov	x1, x21
    e658:	blr	x2
    e65c:	ldp	x1, x0, [x19]
    e660:	sub	x1, x1, x0
    e664:	cmp	x20, x1
    e668:	b.le	e68c <__sancov_default_options@@Base+0x208>
    e66c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    e670:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    e674:	add	x2, x2, #0x4b
    e678:	add	x0, x0, #0x88
    e67c:	mov	x4, #0x0                   	// #0
    e680:	mov	x3, #0x0                   	// #0
    e684:	mov	w1, #0xd4                  	// #212
    e688:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    e68c:	add	x20, x0, x20
    e690:	ldp	x21, x30, [sp, #16]
    e694:	str	x20, [x19, #8]
    e698:	ldp	x19, x20, [sp], #32
    e69c:	ret
    e6a0:	sub	x1, x0, #0x1
    e6a4:	tst	x1, x0
    e6a8:	b.eq	e6d0 <__sancov_default_options@@Base+0x24c>  // b.none
    e6ac:	str	x30, [sp, #-16]!
    e6b0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    e6b4:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    e6b8:	add	x2, x2, #0x702
    e6bc:	add	x0, x0, #0x88
    e6c0:	mov	x4, #0x0                   	// #0
    e6c4:	mov	x3, #0x0                   	// #0
    e6c8:	mov	w1, #0xdb                  	// #219
    e6cc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    e6d0:	adrp	x2, 51000 <_Unwind_Backtrace@GCC_3.3>
    e6d4:	ldr	x1, [x2, #952]
    e6d8:	cmp	x1, x0
    e6dc:	csel	x0, x1, x0, cs  // cs = hs, nlast
    e6e0:	str	x0, [x2, #952]
    e6e4:	ret
    e6e8:	adrp	x1, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e6ec:	str	x0, [x1, #328]
    e6f0:	ret
    e6f4:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e6f8:	ldrb	w0, [x0, #320]
    e6fc:	tst	w0, #0xff
    e700:	cset	w0, ne  // ne = any
    e704:	ret
    e708:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e70c:	mov	w1, #0x1                   	// #1
    e710:	strb	w1, [x0, #320]
    e714:	ret
    e718:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e71c:	add	x0, x0, #0x140
    e720:	ldrb	w0, [x0, #16]
    e724:	tst	w0, #0xff
    e728:	cset	w0, ne  // ne = any
    e72c:	ret
    e730:	adrp	x1, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e734:	add	x1, x1, #0x140
    e738:	and	w0, w0, #0xff
    e73c:	strb	w0, [x1, #16]
    e740:	ret
    e744:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    e748:	add	x0, x0, #0xc9
    e74c:	b	18b74 <OnPrint@@Base+0x30c>
    e750:	stp	x19, x20, [sp, #-64]!
    e754:	stp	x21, x22, [sp, #16]
    e758:	str	x30, [sp, #32]
    e75c:	adrp	x20, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e760:	add	x20, x20, #0x140
    e764:	ldrb	w0, [x20, #17]
    e768:	dmb	ish
    e76c:	and	w0, w0, #0xff
    e770:	adrp	x22, e4000 <__asan_cplus_demangle_operators@@Base+0x93be0>
    e774:	cbnz	w0, e824 <__sancov_default_options@@Base+0x3a0>
    e778:	add	x0, x20, #0x12
    e77c:	str	x0, [sp, #56]
    e780:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    e784:	ldrb	w0, [x20, #17]
    e788:	tst	w0, #0xff
    e78c:	b.ne	e81c <__sancov_default_options@@Base+0x398>  // b.any
    e790:	add	x19, x22, #0x980
    e794:	mov	x2, #0x80000               	// #524288
    e798:	add	x21, x19, #0x80, lsl #12
    e79c:	mov	x0, x19
    e7a0:	mov	w1, #0x0                   	// #0
    e7a4:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    e7a8:	mov	x2, #0xd80                 	// #3456
    e7ac:	mov	w1, #0x0                   	// #0
    e7b0:	strb	wzr, [x21]
    e7b4:	adrp	x0, 164000 <__asan_cplus_demangle_operators@@Base+0x113be0>
    e7b8:	add	x0, x0, #0x9c0
    e7bc:	add	x19, x19, #0xc0, lsl #12
    e7c0:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    e7c4:	mov	x2, #0x248                 	// #584
    e7c8:	mov	w1, #0x0                   	// #0
    e7cc:	movk	x2, #0x4, lsl #16
    e7d0:	adrp	x0, 165000 <__asan_cplus_demangle_operators@@Base+0x114be0>
    e7d4:	add	x0, x0, #0x740
    e7d8:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    e7dc:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
    e7e0:	str	x0, [x21, #3520]
    e7e4:	adrp	x0, 165000 <__asan_cplus_demangle_operators@@Base+0x114be0>
    e7e8:	add	x0, x0, #0x750
    e7ec:	str	x0, [x21, #3528]
    e7f0:	mov	x2, #0x28                  	// #40
    e7f4:	mov	w1, #0x0                   	// #0
    e7f8:	adrp	x21, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
    e7fc:	add	x0, x21, #0x988
    e800:	add	x21, x21, #0x988
    e804:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    e808:	str	x21, [x19, #4104]
    e80c:	str	x21, [x19, #4112]
    e810:	dmb	ish
    e814:	mov	w0, #0x1                   	// #1
    e818:	strb	w0, [x20, #17]
    e81c:	add	x0, sp, #0x38
    e820:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    e824:	add	x0, x22, #0x980
    e828:	ldp	x21, x22, [sp, #16]
    e82c:	ldr	x30, [sp, #32]
    e830:	ldp	x19, x20, [sp], #64
    e834:	ret
    e838:	stp	x19, x20, [sp, #-64]!
    e83c:	mov	x19, x0
    e840:	mov	x20, #0x1                   	// #1
    e844:	mov	x0, #0x200                 	// #512
    e848:	add	x19, x19, #0x408
    e84c:	stp	x21, x22, [sp, #16]
    e850:	mov	x22, #0x3e                  	// #62
    e854:	stp	x23, x24, [sp, #32]
    e858:	mov	w23, #0x4000                	// #16384
    e85c:	mov	x24, #0x40                  	// #64
    e860:	stp	x25, x30, [sp, #48]
    e864:	bl	e5b0 <__sancov_default_options@@Base+0x12c>
    e868:	mov	x25, x20
    e86c:	mov	x21, x0
    e870:	cmp	x20, #0x35
    e874:	b.eq	e88c <__sancov_default_options@@Base+0x408>  // b.none
    e878:	mov	x0, x20
    e87c:	bl	f0a4 <__sancov_default_options@@Base+0xc20>
    e880:	cbnz	x0, e890 <__sancov_default_options@@Base+0x40c>
    e884:	mov	x2, #0x0                   	// #0
    e888:	b	e8a8 <__sancov_default_options@@Base+0x424>
    e88c:	mov	x0, #0x200                 	// #512
    e890:	udiv	w1, w23, w0
    e894:	mov	x2, x0
    e898:	cmp	x1, #0x40
    e89c:	csel	x1, x1, x24, ls  // ls = plast
    e8a0:	cmp	x1, #0x0
    e8a4:	csel	x0, x1, x25, ne  // ne = any
    e8a8:	cmp	x0, #0x3e
    e8ac:	add	x20, x20, #0x1
    e8b0:	csel	x1, x0, x22, ls  // ls = plast
    e8b4:	lsl	x0, x1, #1
    e8b8:	add	x1, x1, #0x2
    e8bc:	stp	x0, x2, [x19]
    e8c0:	cmp	x2, x1, lsl #3
    e8c4:	csel	x0, x21, xzr, cc  // cc = lo, ul, last
    e8c8:	str	x0, [x19, #16]
    e8cc:	cmp	x20, #0x36
    e8d0:	add	x19, x19, #0x400
    e8d4:	b.ne	e870 <__sancov_default_options@@Base+0x3ec>  // b.any
    e8d8:	ldp	x21, x22, [sp, #16]
    e8dc:	ldp	x23, x24, [sp, #32]
    e8e0:	ldp	x25, x30, [sp, #48]
    e8e4:	ldp	x19, x20, [sp], #64
    e8e8:	ret
    e8ec:	cmn	x0, #0x9
    e8f0:	b.hi	e998 <__sancov_default_options@@Base+0x514>  // b.pmore
    e8f4:	stp	x19, x20, [sp, #-48]!
    e8f8:	cmp	x2, #0x0
    e8fc:	add	x20, x0, #0x8
    e900:	stp	x21, x30, [sp, #16]
    e904:	mov	x0, #0x8                   	// #8
    e908:	mov	x21, x1
    e90c:	csel	x19, x2, x0, ne  // ne = any
    e910:	cbnz	x1, e958 <__sancov_default_options@@Base+0x4d4>
    e914:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e918:	add	x0, x0, #0x140
    e91c:	add	x0, x0, #0x13
    e920:	str	x0, [sp, #40]
    e924:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    e928:	bl	e750 <__sancov_default_options@@Base+0x2cc>
    e92c:	mov	x3, x19
    e930:	mov	x2, x20
    e934:	adrp	x1, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    e938:	add	x1, x1, #0x158
    e93c:	bl	f750 <__sancov_default_options@@Base+0x12cc>
    e940:	mov	x19, x0
    e944:	add	x0, sp, #0x28
    e948:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    e94c:	cbnz	x19, e974 <__sancov_default_options@@Base+0x4f0>
    e950:	mov	x0, x20
    e954:	bl	e580 <__sancov_default_options@@Base+0xfc>
    e958:	bl	e750 <__sancov_default_options@@Base+0x2cc>
    e95c:	mov	x3, x19
    e960:	mov	x2, x20
    e964:	mov	x1, x21
    e968:	bl	f750 <__sancov_default_options@@Base+0x12cc>
    e96c:	mov	x19, x0
    e970:	b	e94c <__sancov_default_options@@Base+0x4c8>
    e974:	mov	x0, x19
    e978:	mov	x1, #0xc041                	// #49217
    e97c:	movk	x1, #0xbceb, lsl #16
    e980:	movk	x1, #0xb03a, lsl #32
    e984:	movk	x1, #0x6a6c, lsl #48
    e988:	str	x1, [x0], #8
    e98c:	ldp	x21, x30, [sp, #16]
    e990:	ldp	x19, x20, [sp], #48
    e994:	ret
    e998:	mov	x0, #0x0                   	// #0
    e99c:	ret
    e9a0:	stp	x19, x20, [sp, #-32]!
    e9a4:	mov	x3, x1
    e9a8:	mov	x1, x2
    e9ac:	str	x30, [sp, #16]
    e9b0:	cbz	x0, e9dc <__sancov_default_options@@Base+0x558>
    e9b4:	umulh	x2, x3, x0
    e9b8:	cbz	x2, e9dc <__sancov_default_options@@Base+0x558>
    e9bc:	mov	x2, x0
    e9c0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    e9c4:	ldr	x0, [x0, #4008]
    e9c8:	ldr	x1, [x0]
    e9cc:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    e9d0:	add	x0, x0, #0x11d
    e9d4:	bl	18b74 <OnPrint@@Base+0x30c>
    e9d8:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    e9dc:	mul	x19, x0, x3
    e9e0:	mov	x2, #0x0                   	// #0
    e9e4:	mov	x0, x19
    e9e8:	bl	e8ec <__sancov_default_options@@Base+0x468>
    e9ec:	mov	x20, x0
    e9f0:	cbz	x0, ea00 <__sancov_default_options@@Base+0x57c>
    e9f4:	mov	x2, x19
    e9f8:	mov	w1, #0x0                   	// #0
    e9fc:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
    ea00:	mov	x0, x20
    ea04:	ldr	x30, [sp, #16]
    ea08:	ldp	x19, x20, [sp], #32
    ea0c:	ret
    ea10:	stp	x19, x20, [sp, #-48]!
    ea14:	mov	x3, x0
    ea18:	mov	x20, x2
    ea1c:	stp	x21, x30, [sp, #16]
    ea20:	mov	x0, x1
    ea24:	cbnz	x3, ea40 <__sancov_default_options@@Base+0x5bc>
    ea28:	mov	x1, x20
    ea2c:	mov	x2, #0x0                   	// #0
    ea30:	bl	e8ec <__sancov_default_options@@Base+0x468>
    ea34:	ldp	x21, x30, [sp, #16]
    ea38:	ldp	x19, x20, [sp], #48
    ea3c:	ret
    ea40:	cmn	x1, #0x9
    ea44:	b.hi	eaf4 <__sancov_default_options@@Base+0x670>  // b.pmore
    ea48:	sub	x21, x3, #0x8
    ea4c:	add	x19, x1, #0x8
    ea50:	ldur	x4, [x3, #-8]
    ea54:	mov	x3, #0xc041                	// #49217
    ea58:	movk	x3, #0xbceb, lsl #16
    ea5c:	movk	x3, #0xb03a, lsl #32
    ea60:	movk	x3, #0x6a6c, lsl #48
    ea64:	cmp	x4, x3
    ea68:	b.eq	ea84 <__sancov_default_options@@Base+0x600>  // b.none
    ea6c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    ea70:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    ea74:	add	x2, x2, #0x183
    ea78:	add	x0, x0, #0x88
    ea7c:	mov	w1, #0xa5                  	// #165
    ea80:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    ea84:	cbnz	x2, ead4 <__sancov_default_options@@Base+0x650>
    ea88:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    ea8c:	add	x0, x0, #0x140
    ea90:	add	x0, x0, #0x13
    ea94:	str	x0, [sp, #40]
    ea98:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    ea9c:	bl	e750 <__sancov_default_options@@Base+0x2cc>
    eaa0:	mov	x3, x19
    eaa4:	mov	x2, x21
    eaa8:	adrp	x1, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    eaac:	add	x1, x1, #0x158
    eab0:	mov	x4, #0x8                   	// #8
    eab4:	bl	fb2c <__sancov_default_options@@Base+0x16a8>
    eab8:	mov	x20, x0
    eabc:	add	x0, sp, #0x28
    eac0:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    eac4:	add	x0, x20, #0x8
    eac8:	cbnz	x20, ea34 <__sancov_default_options@@Base+0x5b0>
    eacc:	mov	x0, x19
    ead0:	bl	e580 <__sancov_default_options@@Base+0xfc>
    ead4:	bl	e750 <__sancov_default_options@@Base+0x2cc>
    ead8:	mov	x1, x20
    eadc:	mov	x3, x19
    eae0:	mov	x2, x21
    eae4:	mov	x4, #0x8                   	// #8
    eae8:	bl	fb2c <__sancov_default_options@@Base+0x16a8>
    eaec:	mov	x20, x0
    eaf0:	b	eac4 <__sancov_default_options@@Base+0x640>
    eaf4:	mov	x0, #0x0                   	// #0
    eaf8:	b	ea34 <__sancov_default_options@@Base+0x5b0>
    eafc:	cbz	x0, eb9c <__sancov_default_options@@Base+0x718>
    eb00:	stp	x19, x20, [sp, #-48]!
    eb04:	mov	x3, #0xc041                	// #49217
    eb08:	movk	x3, #0xbceb, lsl #16
    eb0c:	ldur	x4, [x0, #-8]
    eb10:	str	x30, [sp, #16]
    eb14:	movk	x3, #0xb03a, lsl #32
    eb18:	sub	x20, x0, #0x8
    eb1c:	movk	x3, #0x6a6c, lsl #48
    eb20:	cmp	x4, x3
    eb24:	b.eq	eb40 <__sancov_default_options@@Base+0x6bc>  // b.none
    eb28:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    eb2c:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    eb30:	add	x2, x2, #0x183
    eb34:	add	x0, x0, #0x88
    eb38:	mov	w1, #0xbd                  	// #189
    eb3c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    eb40:	stur	xzr, [x0, #-8]
    eb44:	mov	x19, x1
    eb48:	cbnz	x1, eb88 <__sancov_default_options@@Base+0x704>
    eb4c:	adrp	x0, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    eb50:	add	x0, x0, #0x140
    eb54:	add	x0, x0, #0x13
    eb58:	str	x0, [sp, #40]
    eb5c:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    eb60:	bl	e750 <__sancov_default_options@@Base+0x2cc>
    eb64:	mov	x2, x20
    eb68:	adrp	x1, d7000 <__asan_cplus_demangle_operators@@Base+0x86be0>
    eb6c:	add	x1, x1, #0x158
    eb70:	bl	f9ec <__sancov_default_options@@Base+0x1568>
    eb74:	add	x0, sp, #0x28
    eb78:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    eb7c:	ldr	x30, [sp, #16]
    eb80:	ldp	x19, x20, [sp], #48
    eb84:	ret
    eb88:	bl	e750 <__sancov_default_options@@Base+0x2cc>
    eb8c:	mov	x2, x20
    eb90:	mov	x1, x19
    eb94:	bl	f9ec <__sancov_default_options@@Base+0x1568>
    eb98:	b	eb7c <__sancov_default_options@@Base+0x6f8>
    eb9c:	ret
    eba0:	stp	x19, x20, [sp, #-64]!
    eba4:	mov	x19, x0
    eba8:	ldr	x0, [x2, #8]
    ebac:	stp	x21, x22, [sp, #16]
    ebb0:	str	x30, [sp, #32]
    ebb4:	cbnz	x0, ebd8 <__sancov_default_options@@Base+0x754>
    ebb8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ebbc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ebc0:	add	x2, x2, #0x67d
    ebc4:	add	x0, x0, #0x694
    ebc8:	mov	x4, #0x0                   	// #0
    ebcc:	mov	x3, #0x0                   	// #0
    ebd0:	mov	w1, #0xad                  	// #173
    ebd4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    ebd8:	mov	x0, #0x2001                	// #8193
    ebdc:	add	x22, x1, x0
    ebe0:	mov	x20, x2
    ebe4:	lsl	x21, x1, #6
    ebe8:	add	x22, x19, x22, lsl #6
    ebec:	str	x22, [sp, #56]
    ebf0:	mov	x0, x22
    ebf4:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    ebf8:	ldr	x0, [x22, #8]
    ebfc:	cbnz	x0, ec30 <__sancov_default_options@@Base+0x7ac>
    ec00:	add	x19, x19, x21
    ec04:	str	xzr, [x20]
    ec08:	add	x19, x19, #0x80, lsl #12
    ec0c:	mov	x0, #0x1                   	// #1
    ec10:	stp	x20, x20, [x19, #80]
    ec14:	str	x0, [x19, #72]
    ec18:	add	x0, sp, #0x38
    ec1c:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    ec20:	ldp	x21, x22, [sp, #16]
    ec24:	ldr	x30, [sp, #32]
    ec28:	ldp	x19, x20, [sp], #64
    ec2c:	ret
    ec30:	add	x19, x19, x21
    ec34:	add	x0, x0, #0x1
    ec38:	add	x19, x19, #0x80, lsl #12
    ec3c:	ldr	x1, [x19, #80]
    ec40:	str	x1, [x20]
    ec44:	str	x20, [x19, #80]
    ec48:	b	ec14 <__sancov_default_options@@Base+0x790>
    ec4c:	ldr	x0, [x0]
    ec50:	sub	x2, x0, #0x1
    ec54:	tst	x2, x1
    ec58:	b.eq	ec80 <__sancov_default_options@@Base+0x7fc>  // b.none
    ec5c:	str	x30, [sp, #-16]!
    ec60:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ec64:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ec68:	add	x2, x2, #0x6de
    ec6c:	add	x0, x0, #0x544
    ec70:	mov	x4, #0x0                   	// #0
    ec74:	mov	x3, #0x0                   	// #0
    ec78:	mov	w1, #0x123                 	// #291
    ec7c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    ec80:	sub	x0, x1, x0
    ec84:	ret
    ec88:	stp	x19, x20, [sp, #-96]!
    ec8c:	stp	x21, x22, [sp, #16]
    ec90:	stp	x23, x24, [sp, #32]
    ec94:	stp	x25, x26, [sp, #48]
    ec98:	sub	x26, x3, #0x1
    ec9c:	tst	x3, x26
    eca0:	str	x30, [sp, #64]
    eca4:	b.eq	ecc8 <__sancov_default_options@@Base+0x844>  // b.none
    eca8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ecac:	add	x2, x2, #0x702
    ecb0:	mov	x4, #0x0                   	// #0
    ecb4:	mov	x3, #0x0                   	// #0
    ecb8:	mov	w1, #0x53                  	// #83
    ecbc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ecc0:	add	x0, x0, #0x544
    ecc4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    ecc8:	mov	x23, x0
    eccc:	mov	x22, x1
    ecd0:	mov	x24, x3
    ecd4:	mov	x25, x2
    ecd8:	mov	x0, x2
    ecdc:	ldr	x1, [x23]
    ece0:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    ece4:	ldr	x1, [x23]
    ece8:	add	x19, x0, x1
    ecec:	cmp	x24, x1
    ecf0:	b.ls	ecf8 <__sancov_default_options@@Base+0x874>  // b.plast
    ecf4:	add	x19, x19, x24
    ecf8:	cmp	x19, x25
    ecfc:	b.cs	ed40 <__sancov_default_options@@Base+0x8bc>  // b.hs, b.nlast
    ed00:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    ed04:	mov	x3, x24
    ed08:	mov	x2, x19
    ed0c:	mov	x20, #0x0                   	// #0
    ed10:	ldr	x0, [x0, #4008]
    ed14:	ldr	x1, [x0]
    ed18:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ed1c:	add	x0, x0, #0x725
    ed20:	bl	18b74 <OnPrint@@Base+0x30c>
    ed24:	mov	x0, x20
    ed28:	ldp	x21, x22, [sp, #16]
    ed2c:	ldp	x23, x24, [sp, #32]
    ed30:	ldp	x25, x26, [sp, #48]
    ed34:	ldr	x30, [sp, #64]
    ed38:	ldp	x19, x20, [sp], #96
    ed3c:	ret
    ed40:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
    ed44:	ldr	x1, [x0, #960]
    ed48:	mov	x0, x19
    ed4c:	bl	16b74 <__sanitizer_set_report_fd@@Base+0x40c0>
    ed50:	mov	x20, x0
    ed54:	cbz	x0, ed24 <__sancov_default_options@@Base+0x8a0>
    ed58:	ldr	x21, [x23]
    ed5c:	sub	x0, x21, #0x1
    ed60:	tst	x20, x0
    ed64:	b.eq	ed80 <__sancov_default_options@@Base+0x8fc>  // b.none
    ed68:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ed6c:	mov	x4, #0x0                   	// #0
    ed70:	add	x2, x2, #0x786
    ed74:	mov	x3, #0x0                   	// #0
    ed78:	mov	w1, #0x62                  	// #98
    ed7c:	b	ecbc <__sancov_default_options@@Base+0x838>
    ed80:	add	x21, x21, x20
    ed84:	ands	x1, x21, x26
    ed88:	b.eq	edb4 <__sancov_default_options@@Base+0x930>  // b.none
    ed8c:	add	x21, x24, x21
    ed90:	sub	x21, x21, x1
    ed94:	tst	x21, x26
    ed98:	b.eq	edb4 <__sancov_default_options@@Base+0x930>  // b.none
    ed9c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    eda0:	mov	x4, #0x0                   	// #0
    eda4:	add	x2, x2, #0x7b0
    eda8:	mov	x3, #0x0                   	// #0
    edac:	mov	w1, #0x68                  	// #104
    edb0:	b	ecbc <__sancov_default_options@@Base+0x838>
    edb4:	tst	x21, x0
    edb8:	b.eq	edd4 <__sancov_default_options@@Base+0x950>  // b.none
    edbc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    edc0:	mov	x4, #0x0                   	// #0
    edc4:	add	x2, x2, #0x7d5
    edc8:	mov	x3, #0x0                   	// #0
    edcc:	mov	w1, #0x69                  	// #105
    edd0:	b	ecbc <__sancov_default_options@@Base+0x838>
    edd4:	add	x3, x21, x25
    edd8:	cmp	x20, x3
    eddc:	b.ls	edf4 <__sancov_default_options@@Base+0x970>  // b.plast
    ede0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ede4:	mov	x4, x20
    ede8:	add	x2, x2, #0x7fb
    edec:	mov	w1, #0x6a                  	// #106
    edf0:	b	ecbc <__sancov_default_options@@Base+0x838>
    edf4:	add	x4, x20, x19
    edf8:	cmp	x4, x3
    edfc:	b.cs	ee10 <__sancov_default_options@@Base+0x98c>  // b.hs, b.nlast
    ee00:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ee04:	mov	w1, #0x6b                  	// #107
    ee08:	add	x2, x2, #0x819
    ee0c:	b	ecbc <__sancov_default_options@@Base+0x838>
    ee10:	mov	x1, x21
    ee14:	mov	x0, x23
    ee18:	bl	ec4c <__sancov_default_options@@Base+0x7c8>
    ee1c:	mov	x24, x0
    ee20:	mov	x0, x19
    ee24:	stp	x20, x19, [x24]
    ee28:	str	x25, [x24, #16]
    ee2c:	bl	91b4 <__lsan_do_recoverable_leak_check@@Base+0x858>
    ee30:	mov	x20, x0
    ee34:	cmp	x0, #0x3f
    ee38:	b.ls	ee54 <__sancov_default_options@@Base+0x9d0>  // b.plast
    ee3c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ee40:	mov	x3, x0
    ee44:	add	x2, x2, #0x837
    ee48:	mov	x4, #0x40                  	// #64
    ee4c:	mov	w1, #0x71                  	// #113
    ee50:	b	ecbc <__sancov_default_options@@Base+0x838>
    ee54:	add	x0, x23, #0x40, lsl #12
    ee58:	add	x0, x0, #0x240
    ee5c:	str	x0, [sp, #88]
    ee60:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    ee64:	add	x1, x23, #0x40, lsl #12
    ee68:	mov	x0, #0x7fff                	// #32767
    ee6c:	ldr	x3, [x1, #16]
    ee70:	cmp	x3, x0
    ee74:	b.ls	ee8c <__sancov_default_options@@Base+0xa08>  // b.plast
    ee78:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ee7c:	mov	x4, #0x8000                	// #32768
    ee80:	add	x2, x2, #0x885
    ee84:	mov	w1, #0x15                  	// #21
    ee88:	b	ecbc <__sancov_default_options@@Base+0x838>
    ee8c:	add	x0, x3, #0x1
    ee90:	str	x0, [x1, #16]
    ee94:	ldr	x0, [x23, #8]
    ee98:	add	x20, x23, x20, lsl #3
    ee9c:	ldr	x2, [x1, #56]
    eea0:	str	x3, [x24, #24]
    eea4:	str	x24, [x0, x3, lsl #3]
    eea8:	add	x20, x20, #0x40, lsl #12
    eeac:	ldr	x0, [x1, #32]
    eeb0:	strb	wzr, [x1, #24]
    eeb4:	add	x0, x0, #0x1
    eeb8:	str	x0, [x1, #32]
    eebc:	ldr	x0, [x1, #48]
    eec0:	add	x0, x19, x0
    eec4:	str	x0, [x1, #48]
    eec8:	cmp	x2, x0
    eecc:	csel	x0, x2, x0, cs  // cs = hs, nlast
    eed0:	str	x0, [x1, #56]
    eed4:	ldr	x0, [x20, #64]
    eed8:	add	x0, x0, #0x1
    eedc:	str	x0, [x20, #64]
    eee0:	ldr	x0, [x22, #16]
    eee4:	mov	x20, x21
    eee8:	add	x0, x19, x0
    eeec:	str	x0, [x22, #16]
    eef0:	add	x0, sp, #0x58
    eef4:	ldr	x2, [x22, #24]
    eef8:	add	x19, x19, x2
    eefc:	str	x19, [x22, #24]
    ef00:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    ef04:	b	ed24 <__sancov_default_options@@Base+0x8a0>
    ef08:	stp	x19, x20, [sp, #-48]!
    ef0c:	mov	x20, x0
    ef10:	add	x0, x0, #0x40, lsl #12
    ef14:	add	x0, x0, #0x240
    ef18:	mov	x19, x1
    ef1c:	str	x30, [sp, #16]
    ef20:	str	x0, [sp, #40]
    ef24:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    ef28:	add	x0, x20, #0x40, lsl #12
    ef2c:	mov	x3, #0x0                   	// #0
    ef30:	ldr	x2, [x0, #16]
    ef34:	mov	x0, #0x0                   	// #0
    ef38:	cmp	x2, x0
    ef3c:	b.eq	ef68 <__sancov_default_options@@Base+0xae4>  // b.none
    ef40:	ldr	x1, [x20, #8]
    ef44:	ldr	x1, [x1, x0, lsl #3]
    ef48:	cmp	x19, x1
    ef4c:	b.cc	ef60 <__sancov_default_options@@Base+0xadc>  // b.lo, b.ul, b.last
    ef50:	sub	x4, x19, x3
    ef54:	sub	x5, x19, x1
    ef58:	cmp	x5, x4
    ef5c:	csel	x3, x3, x1, cs  // cs = hs, nlast
    ef60:	add	x0, x0, #0x1
    ef64:	b	ef38 <__sancov_default_options@@Base+0xab4>
    ef68:	cbz	x3, f000 <__sancov_default_options@@Base+0xb7c>
    ef6c:	ldr	x4, [x3]
    ef70:	cmp	x3, x4
    ef74:	b.cs	ef90 <__sancov_default_options@@Base+0xb0c>  // b.hs, b.nlast
    ef78:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ef7c:	add	x2, x2, #0x8c9
    ef80:	mov	w1, #0xc1                  	// #193
    ef84:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    ef88:	add	x0, x0, #0x544
    ef8c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    ef90:	ldr	x0, [x3, #8]
    ef94:	add	x4, x4, x0
    ef98:	cmp	x3, x4
    ef9c:	b.cc	efb0 <__sancov_default_options@@Base+0xb2c>  // b.lo, b.ul, b.last
    efa0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    efa4:	mov	w1, #0xc2                  	// #194
    efa8:	add	x2, x2, #0x8ed
    efac:	b	ef84 <__sancov_default_options@@Base+0xb00>
    efb0:	cmp	x3, x19
    efb4:	b.ls	efcc <__sancov_default_options@@Base+0xb48>  // b.plast
    efb8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    efbc:	mov	x4, x19
    efc0:	add	x2, x2, #0x91e
    efc4:	mov	w1, #0xc3                  	// #195
    efc8:	b	ef84 <__sancov_default_options@@Base+0xb00>
    efcc:	cmp	x19, x4
    efd0:	b.cs	f000 <__sancov_default_options@@Base+0xb7c>  // b.hs, b.nlast
    efd4:	ldr	x19, [x20]
    efd8:	sub	x0, x19, #0x1
    efdc:	add	x19, x3, x19
    efe0:	tst	x0, x3
    efe4:	b.eq	f004 <__sancov_default_options@@Base+0xb80>  // b.none
    efe8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    efec:	mov	x4, #0x0                   	// #0
    eff0:	add	x2, x2, #0x89f
    eff4:	mov	x3, #0x0                   	// #0
    eff8:	mov	w1, #0x12b                 	// #299
    effc:	b	ef84 <__sancov_default_options@@Base+0xb00>
    f000:	mov	x19, #0x0                   	// #0
    f004:	add	x0, sp, #0x28
    f008:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    f00c:	mov	x0, x19
    f010:	ldr	x30, [sp, #16]
    f014:	ldp	x19, x20, [sp], #48
    f018:	ret
    f01c:	stp	x19, x30, [sp, #-16]!
    f020:	mov	x2, #0xfffffff             	// #268435455
    f024:	lsr	x19, x1, #20
    f028:	cmp	x2, x1, lsr #20
    f02c:	b.cs	f050 <__sancov_default_options@@Base+0xbcc>  // b.hs, b.nlast
    f030:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f034:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f038:	mov	x3, x19
    f03c:	add	x2, x2, #0x9b4
    f040:	add	x0, x0, #0x694
    f044:	mov	x4, #0x10000000            	// #268435456
    f048:	mov	w1, #0x116                 	// #278
    f04c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    f050:	lsr	x1, x1, #32
    f054:	bl	b6a4 <__sanitizer_get_allocated_size@@Base+0x11a4>
    f058:	cbz	x0, f070 <__sancov_default_options@@Base+0xbec>
    f05c:	and	x19, x19, #0xfff
    f060:	ldrb	w0, [x0, x19]
    f064:	and	x0, x0, #0xff
    f068:	ldp	x19, x30, [sp], #16
    f06c:	ret
    f070:	mov	w0, #0x0                   	// #0
    f074:	b	f064 <__sancov_default_options@@Base+0xbe0>
    f078:	mov	x2, #0xffffffffffff        	// #281474976710655
    f07c:	cmp	x1, x2
    f080:	b.hi	f09c <__sancov_default_options@@Base+0xc18>  // b.pmore
    f084:	str	x30, [sp, #-16]!
    f088:	bl	f01c <__sancov_default_options@@Base+0xb98>
    f08c:	cmp	x0, #0x0
    f090:	cset	w0, ne  // ne = any
    f094:	ldr	x30, [sp], #16
    f098:	ret
    f09c:	mov	w0, #0x0                   	// #0
    f0a0:	ret
    f0a4:	cmp	x0, #0x35
    f0a8:	b.eq	f0d8 <__sancov_default_options@@Base+0xc54>  // b.none
    f0ac:	sub	x3, x0, #0x10
    f0b0:	mov	x2, #0x100                 	// #256
    f0b4:	lsl	x4, x0, #4
    f0b8:	cmp	x0, #0x10
    f0bc:	lsr	x1, x3, #2
    f0c0:	and	x3, x3, #0x3
    f0c4:	lsl	x2, x2, x1
    f0c8:	lsr	x1, x2, #2
    f0cc:	madd	x1, x1, x3, x2
    f0d0:	csel	x0, x1, x4, hi  // hi = pmore
    f0d4:	ret
    f0d8:	mov	x0, #0x200                 	// #512
    f0dc:	b	f0d4 <__sancov_default_options@@Base+0xc50>
    f0e0:	stp	x19, x20, [sp, #-80]!
    f0e4:	mov	x19, x1
    f0e8:	mov	x1, #0x100000              	// #1048576
    f0ec:	stp	x21, x22, [sp, #16]
    f0f0:	mov	x21, x0
    f0f4:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
    f0f8:	stp	x23, x24, [sp, #32]
    f0fc:	mov	x23, x2
    f100:	ldr	x2, [x0, #968]
    f104:	mov	x0, x1
    f108:	str	x30, [sp, #48]
    f10c:	bl	16c08 <__sanitizer_set_report_fd@@Base+0x4154>
    f110:	mov	x20, x0
    f114:	cbz	x0, f204 <__sancov_default_options@@Base+0xd80>
    f118:	tst	x0, #0xfffff
    f11c:	ldr	x0, [x19, #24]
    f120:	add	x0, x0, #0x100, lsl #12
    f124:	str	x0, [x19, #24]
    f128:	b.eq	f14c <__sancov_default_options@@Base+0xcc8>  // b.none
    f12c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f130:	add	x2, x2, #0xacd
    f134:	mov	x4, #0x0                   	// #0
    f138:	mov	x3, #0x0                   	// #0
    f13c:	mov	w1, #0x126                 	// #294
    f140:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f144:	add	x0, x0, #0x694
    f148:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    f14c:	mov	x0, #0xfffffff             	// #268435455
    f150:	lsr	x22, x20, #20
    f154:	cmp	x0, x20, lsr #20
    f158:	b.cs	f174 <__sancov_default_options@@Base+0xcf0>  // b.hs, b.nlast
    f15c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f160:	mov	x3, x22
    f164:	add	x2, x2, #0x9b4
    f168:	mov	x4, #0x10000000            	// #268435456
    f16c:	mov	w1, #0x116                 	// #278
    f170:	b	f140 <__sancov_default_options@@Base+0xcbc>
    f174:	lsr	x24, x20, #32
    f178:	mov	x0, x21
    f17c:	mov	x1, x24
    f180:	and	w23, w23, #0xff
    f184:	bl	b6a4 <__sanitizer_get_allocated_size@@Base+0x11a4>
    f188:	mov	x19, x0
    f18c:	cbnz	x0, f1d8 <__sancov_default_options@@Base+0xd54>
    f190:	add	x0, x21, #0x80, lsl #12
    f194:	str	x0, [sp, #72]
    f198:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    f19c:	mov	x1, x24
    f1a0:	mov	x0, x21
    f1a4:	bl	b6a4 <__sanitizer_get_allocated_size@@Base+0x11a4>
    f1a8:	mov	x19, x0
    f1ac:	cbnz	x0, f1d0 <__sancov_default_options@@Base+0xd4c>
    f1b0:	mov	w2, #0x0                   	// #0
    f1b4:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f1b8:	mov	x0, #0x1000                	// #4096
    f1bc:	add	x1, x1, #0xaf4
    f1c0:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
    f1c4:	dmb	ish
    f1c8:	mov	x19, x0
    f1cc:	str	x0, [x21, x24, lsl #3]
    f1d0:	add	x0, sp, #0x48
    f1d4:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    f1d8:	and	x22, x22, #0xfff
    f1dc:	ldrb	w4, [x19, x22]
    f1e0:	cbz	x4, f200 <__sancov_default_options@@Base+0xd7c>
    f1e4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f1e8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f1ec:	add	x2, x2, #0xb04
    f1f0:	add	x0, x0, #0x94e
    f1f4:	mov	x3, #0x0                   	// #0
    f1f8:	mov	w1, #0x42                  	// #66
    f1fc:	b	f148 <__sancov_default_options@@Base+0xcc4>
    f200:	strb	w23, [x19, x22]
    f204:	mov	x0, x20
    f208:	ldp	x21, x22, [sp, #16]
    f20c:	ldp	x23, x24, [sp, #32]
    f210:	ldr	x30, [sp, #48]
    f214:	ldp	x19, x20, [sp], #80
    f218:	ret
    f21c:	stp	x19, x20, [sp, #-96]!
    f220:	mov	x20, x2
    f224:	mov	x19, #0x0                   	// #0
    f228:	stp	x23, x24, [sp, #32]
    f22c:	mov	x24, x0
    f230:	mov	x23, x6
    f234:	ldr	x0, [x4]
    f238:	stp	x21, x22, [sp, #16]
    f23c:	mov	x22, x1
    f240:	mov	x21, x4
    f244:	stp	x25, x26, [sp, #48]
    f248:	mov	x25, x5
    f24c:	mov	x26, x7
    f250:	stp	x27, x28, [sp, #64]
    f254:	add	x27, x1, x3, lsl #10
    f258:	mov	x28, #0x1                   	// #1
    f25c:	str	x30, [sp, #80]
    f260:	cmp	x19, x26
    f264:	b.eq	f2ec <__sancov_default_options@@Base+0xe68>  // b.none
    f268:	cbnz	x0, f280 <__sancov_default_options@@Base+0xdfc>
    f26c:	ldr	x2, [x27, #24]
    f270:	cbnz	x2, f2c4 <__sancov_default_options@@Base+0xe40>
    f274:	ldr	x0, [x23, x19, lsl #3]
    f278:	cbz	x0, f310 <__sancov_default_options@@Base+0xe8c>
    f27c:	str	xzr, [x0, #8]
    f280:	ldr	x1, [x0, #8]
    f284:	ldr	x3, [x23, x19, lsl #3]
    f288:	add	x2, x1, #0x1
    f28c:	add	x1, x1, #0x2
    f290:	str	x2, [x0, #8]
    f294:	cmp	x25, x2
    f298:	str	x3, [x0, x1, lsl #3]
    f29c:	b.ne	f2bc <__sancov_default_options@@Base+0xe38>  // b.any
    f2a0:	mov	x8, x20
    f2a4:	ldr	x1, [x8, #8]!
    f2a8:	str	xzr, [x0]
    f2ac:	cbnz	x1, f2d4 <__sancov_default_options@@Base+0xe50>
    f2b0:	stp	x0, x0, [x8, #8]
    f2b4:	str	x28, [x20, #8]
    f2b8:	mov	x0, #0x0                   	// #0
    f2bc:	add	x19, x19, #0x1
    f2c0:	b	f260 <__sancov_default_options@@Base+0xddc>
    f2c4:	mov	x1, x24
    f2c8:	mov	x0, x22
    f2cc:	bl	f67c <__sancov_default_options@@Base+0x11f8>
    f2d0:	b	f278 <__sancov_default_options@@Base+0xdf4>
    f2d4:	ldr	x2, [x8, #16]
    f2d8:	add	x1, x1, #0x1
    f2dc:	str	x0, [x2]
    f2e0:	str	x0, [x8, #16]
    f2e4:	str	x1, [x20, #8]
    f2e8:	b	f2b8 <__sancov_default_options@@Base+0xe34>
    f2ec:	str	x0, [x21]
    f2f0:	mov	w0, #0x1                   	// #1
    f2f4:	ldp	x21, x22, [sp, #16]
    f2f8:	ldp	x23, x24, [sp, #32]
    f2fc:	ldp	x25, x26, [sp, #48]
    f300:	ldp	x27, x28, [sp, #64]
    f304:	ldr	x30, [sp, #80]
    f308:	ldp	x19, x20, [sp], #96
    f30c:	ret
    f310:	mov	w0, #0x0                   	// #0
    f314:	b	f2f4 <__sancov_default_options@@Base+0xe70>
    f318:	stp	x19, x20, [sp, #-496]!
    f31c:	stp	x21, x22, [sp, #16]
    f320:	mov	x22, x0
    f324:	mov	x21, x3
    f328:	stp	x23, x24, [sp, #32]
    f32c:	mov	x23, x2
    f330:	mov	x24, x4
    f334:	mov	x2, x4
    f338:	stp	x25, x26, [sp, #48]
    f33c:	stp	x27, x28, [sp, #64]
    f340:	str	x30, [sp, #80]
    f344:	bl	f0e0 <__sancov_default_options@@Base+0xc5c>
    f348:	cbnz	x0, f36c <__sancov_default_options@@Base+0xee8>
    f34c:	mov	w0, #0x0                   	// #0
    f350:	ldp	x21, x22, [sp, #16]
    f354:	ldp	x23, x24, [sp, #32]
    f358:	ldp	x25, x26, [sp, #48]
    f35c:	ldp	x27, x28, [sp, #64]
    f360:	ldr	x30, [sp, #80]
    f364:	ldp	x19, x20, [sp], #496
    f368:	ret
    f36c:	mov	x20, x0
    f370:	cmp	x24, #0x35
    f374:	b.eq	f394 <__sancov_default_options@@Base+0xf10>  // b.none
    f378:	mov	x0, x24
    f37c:	bl	f0a4 <__sancov_default_options@@Base+0xc20>
    f380:	mov	x2, #0x100000              	// #1048576
    f384:	udiv	x2, x2, x0
    f388:	cbnz	x0, f39c <__sancov_default_options@@Base+0xf18>
    f38c:	mov	x26, #0x0                   	// #0
    f390:	b	f3bc <__sancov_default_options@@Base+0xf38>
    f394:	mov	x0, #0x200                 	// #512
    f398:	mov	x2, #0x800                 	// #2048
    f39c:	mov	w1, #0x4000                	// #16384
    f3a0:	mov	x3, #0x40                  	// #64
    f3a4:	mov	x26, x0
    f3a8:	udiv	w1, w1, w0
    f3ac:	cmp	x1, #0x40
    f3b0:	csel	x1, x1, x3, ls  // ls = plast
    f3b4:	cmp	x1, #0x0
    f3b8:	csinc	x0, x1, xzr, ne  // ne = any
    f3bc:	madd	x25, x26, x2, x20
    f3c0:	cmp	x0, #0x3e
    f3c4:	add	x27, sp, #0x70
    f3c8:	add	x28, sp, #0x68
    f3cc:	mov	x19, #0x3e                  	// #62
    f3d0:	csel	x19, x0, x19, ls  // ls = plast
    f3d4:	mov	x0, #0x0                   	// #0
    f3d8:	str	xzr, [sp, #104]
    f3dc:	cmp	x20, x25
    f3e0:	b.cs	f42c <__sancov_default_options@@Base+0xfa8>  // b.hs, b.nlast
    f3e4:	str	x20, [x27, x0, lsl #3]
    f3e8:	add	x7, x0, #0x1
    f3ec:	cmp	x0, #0x2f
    f3f0:	b.ne	f420 <__sancov_default_options@@Base+0xf9c>  // b.any
    f3f4:	mov	x6, x27
    f3f8:	mov	x5, x19
    f3fc:	mov	x4, x28
    f400:	mov	x3, x24
    f404:	mov	x2, x21
    f408:	mov	x1, x23
    f40c:	mov	x0, x22
    f410:	bl	f21c <__sancov_default_options@@Base+0xd98>
    f414:	tst	w0, #0xff
    f418:	b.eq	f34c <__sancov_default_options@@Base+0xec8>  // b.none
    f41c:	mov	x7, #0x0                   	// #0
    f420:	add	x20, x20, x26
    f424:	mov	x0, x7
    f428:	b	f3dc <__sancov_default_options@@Base+0xf58>
    f42c:	cbnz	x0, f440 <__sancov_default_options@@Base+0xfbc>
    f430:	ldr	x0, [sp, #104]
    f434:	cbnz	x0, f470 <__sancov_default_options@@Base+0xfec>
    f438:	mov	w0, #0x1                   	// #1
    f43c:	b	f350 <__sancov_default_options@@Base+0xecc>
    f440:	mov	x7, x0
    f444:	add	x6, sp, #0x70
    f448:	mov	x5, x19
    f44c:	add	x4, sp, #0x68
    f450:	mov	x3, x24
    f454:	mov	x2, x21
    f458:	mov	x1, x23
    f45c:	mov	x0, x22
    f460:	bl	f21c <__sancov_default_options@@Base+0xd98>
    f464:	tst	w0, #0xff
    f468:	b.ne	f430 <__sancov_default_options@@Base+0xfac>  // b.any
    f46c:	b	f34c <__sancov_default_options@@Base+0xec8>
    f470:	ldr	x1, [x0, #8]
    f474:	cbnz	x1, f498 <__sancov_default_options@@Base+0x1014>
    f478:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f47c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f480:	add	x2, x2, #0x67d
    f484:	add	x0, x0, #0x694
    f488:	mov	x4, #0x0                   	// #0
    f48c:	mov	x3, #0x0                   	// #0
    f490:	mov	w1, #0x169                 	// #361
    f494:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    f498:	mov	x1, x21
    f49c:	ldr	x2, [x1, #8]!
    f4a0:	str	xzr, [x0]
    f4a4:	cbnz	x2, f4b8 <__sancov_default_options@@Base+0x1034>
    f4a8:	stp	x0, x0, [x1, #8]
    f4ac:	mov	x0, #0x1                   	// #1
    f4b0:	str	x0, [x21, #8]
    f4b4:	b	f350 <__sancov_default_options@@Base+0xecc>
    f4b8:	ldr	x3, [x1, #16]
    f4bc:	add	x2, x2, #0x1
    f4c0:	str	x0, [x3]
    f4c4:	str	x0, [x1, #16]
    f4c8:	str	x2, [x21, #8]
    f4cc:	b	f438 <__sancov_default_options@@Base+0xfb4>
    f4d0:	stp	x19, x20, [sp, #-80]!
    f4d4:	mov	x20, x0
    f4d8:	mov	x19, x3
    f4dc:	stp	x21, x22, [sp, #16]
    f4e0:	stp	x23, x24, [sp, #32]
    f4e4:	mov	x23, x1
    f4e8:	mov	x1, #0x2001                	// #8193
    f4ec:	add	x21, x3, x1
    f4f0:	mov	x24, x2
    f4f4:	stp	x25, x30, [sp, #48]
    f4f8:	lsl	x22, x21, #6
    f4fc:	add	x22, x22, #0x8
    f500:	add	x21, x0, x21, lsl #6
    f504:	mov	x0, x21
    f508:	str	x21, [sp, #72]
    f50c:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    f510:	add	x25, x20, x22
    f514:	ldr	x0, [x20, x22]
    f518:	cbz	x0, f548 <__sancov_default_options@@Base+0x10c4>
    f51c:	ldr	x0, [x20, x22]
    f520:	ldr	x21, [x25, #8]
    f524:	cbnz	x0, f58c <__sancov_default_options@@Base+0x1108>
    f528:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f52c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f530:	add	x2, x2, #0xb25
    f534:	add	x0, x0, #0xb39
    f538:	mov	x4, #0x0                   	// #0
    f53c:	mov	x3, #0x0                   	// #0
    f540:	mov	w1, #0x40                  	// #64
    f544:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    f548:	mov	x4, x19
    f54c:	mov	x3, x21
    f550:	mov	x2, x24
    f554:	mov	x1, x23
    f558:	mov	x0, x20
    f55c:	bl	f318 <__sancov_default_options@@Base+0xe94>
    f560:	tst	w0, #0xff
    f564:	b.ne	f51c <__sancov_default_options@@Base+0x1098>  // b.any
    f568:	mov	x21, #0x0                   	// #0
    f56c:	add	x0, sp, #0x48
    f570:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    f574:	mov	x0, x21
    f578:	ldp	x21, x22, [sp, #16]
    f57c:	ldp	x23, x24, [sp, #32]
    f580:	ldp	x25, x30, [sp, #48]
    f584:	ldp	x19, x20, [sp], #80
    f588:	ret
    f58c:	add	x4, x20, x19, lsl #6
    f590:	add	x4, x4, #0x80, lsl #12
    f594:	ldr	x1, [x4, #80]
    f598:	ldr	x1, [x1]
    f59c:	str	x1, [x4, #80]
    f5a0:	cbnz	x1, f5a8 <__sancov_default_options@@Base+0x1124>
    f5a4:	str	xzr, [x4, #88]
    f5a8:	sub	x0, x0, #0x1
    f5ac:	str	x0, [x4, #72]
    f5b0:	b	f56c <__sancov_default_options@@Base+0x10e8>
    f5b4:	stp	x19, x20, [sp, #-48]!
    f5b8:	mov	x19, x0
    f5bc:	mov	x20, x3
    f5c0:	stp	x21, x22, [sp, #16]
    f5c4:	mov	x21, x1
    f5c8:	mov	x22, x2
    f5cc:	ldr	x1, [x1, #8]
    f5d0:	str	x30, [sp, #32]
    f5d4:	cbnz	x1, f5dc <__sancov_default_options@@Base+0x1158>
    f5d8:	bl	e838 <__sancov_default_options@@Base+0x3b4>
    f5dc:	mov	x3, x20
    f5e0:	mov	x0, #0xd800                	// #55296
    f5e4:	mov	x2, x19
    f5e8:	add	x1, x19, x0
    f5ec:	mov	x0, x22
    f5f0:	bl	f4d0 <__sancov_default_options@@Base+0x104c>
    f5f4:	mov	x3, x0
    f5f8:	cbz	x0, f668 <__sancov_default_options@@Base+0x11e4>
    f5fc:	ldr	x1, [x3, #8]
    f600:	mov	x0, #0x0                   	// #0
    f604:	cbz	x1, f648 <__sancov_default_options@@Base+0x11c4>
    f608:	add	x5, x3, #0x10
    f60c:	add	x2, x21, #0x20
    f610:	ldr	x4, [x5, x0, lsl #3]
    f614:	str	x4, [x2, x0, lsl #3]
    f618:	add	x0, x0, #0x1
    f61c:	cmp	x1, x0
    f620:	b.ne	f610 <__sancov_default_options@@Base+0x118c>  // b.any
    f624:	add	x20, x19, x20, lsl #10
    f628:	ldr	x2, [x20, #24]
    f62c:	str	x1, [x21]
    f630:	cbz	x2, f640 <__sancov_default_options@@Base+0x11bc>
    f634:	mov	x1, x22
    f638:	mov	x0, x19
    f63c:	bl	f908 <__sancov_default_options@@Base+0x1484>
    f640:	mov	w0, #0x1                   	// #1
    f644:	b	f66c <__sancov_default_options@@Base+0x11e8>
    f648:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f64c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f650:	add	x2, x2, #0x67d
    f654:	add	x0, x0, #0xb74
    f658:	mov	x4, #0x0                   	// #0
    f65c:	mov	x3, #0x0                   	// #0
    f660:	mov	w1, #0xf6                  	// #246
    f664:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    f668:	mov	w0, #0x0                   	// #0
    f66c:	ldp	x21, x22, [sp, #16]
    f670:	ldr	x30, [sp, #32]
    f674:	ldp	x19, x20, [sp], #48
    f678:	ret
    f67c:	stp	x19, x20, [sp, #-32]!
    f680:	stp	x21, x30, [sp, #16]
    f684:	cbnz	x2, f6a8 <__sancov_default_options@@Base+0x1224>
    f688:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f68c:	add	x2, x2, #0xbc0
    f690:	mov	x4, #0x0                   	// #0
    f694:	mov	x3, #0x0                   	// #0
    f698:	mov	w1, #0x9f                  	// #159
    f69c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f6a0:	add	x0, x0, #0xb74
    f6a4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    f6a8:	mov	x19, x2
    f6ac:	cmp	x2, #0x35
    f6b0:	b.ls	f6cc <__sancov_default_options@@Base+0x1248>  // b.plast
    f6b4:	mov	x3, x2
    f6b8:	mov	x4, #0x36                  	// #54
    f6bc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f6c0:	mov	w1, #0xa0                  	// #160
    f6c4:	add	x2, x2, #0xbd8
    f6c8:	b	f69c <__sancov_default_options@@Base+0x1218>
    f6cc:	lsl	x21, x2, #10
    f6d0:	mov	x4, x1
    f6d4:	add	x1, x0, x2, lsl #10
    f6d8:	mov	x20, x0
    f6dc:	ldr	x2, [x0, x21]
    f6e0:	cbz	x2, f734 <__sancov_default_options@@Base+0x12b0>
    f6e4:	ldr	x3, [x20, x21]
    f6e8:	sub	x0, x3, #0x1
    f6ec:	str	x0, [x20, x21]
    f6f0:	add	x0, x0, x19, lsl #7
    f6f4:	add	x19, x3, x19, lsl #7
    f6f8:	add	x19, x19, #0x2
    f6fc:	add	x0, x0, #0x4
    f700:	ldr	x1, [x20, x19, lsl #3]
    f704:	ldr	x0, [x20, x0, lsl #3]
    f708:	prfm	pldl1keep, [x1]
    f70c:	mov	x1, #0xd800                	// #55296
    f710:	add	x2, x20, x1
    f714:	add	x20, x20, x21
    f718:	ldr	x1, [x2, #16]
    f71c:	ldr	x3, [x20, #16]
    f720:	add	x1, x1, x3
    f724:	str	x1, [x2, #16]
    f728:	ldp	x21, x30, [sp, #16]
    f72c:	ldp	x19, x20, [sp], #32
    f730:	ret
    f734:	mov	x3, x19
    f738:	mov	x2, x4
    f73c:	bl	f5b4 <__sancov_default_options@@Base+0x1130>
    f740:	tst	w0, #0xff
    f744:	b.ne	f6e4 <__sancov_default_options@@Base+0x1260>  // b.any
    f748:	mov	x0, #0x0                   	// #0
    f74c:	b	f728 <__sancov_default_options@@Base+0x12a4>
    f750:	stp	x19, x20, [sp, #-48]!
    f754:	cmp	x2, #0x0
    f758:	csinc	x20, x2, xzr, ne  // ne = any
    f75c:	stp	x21, x22, [sp, #16]
    f760:	cmn	x20, x3
    f764:	str	x30, [sp, #32]
    f768:	b.cc	f79c <__sancov_default_options@@Base+0x1318>  // b.lo, b.ul, b.last
    f76c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f770:	mov	x2, x20
    f774:	ldr	x0, [x0, #4008]
    f778:	ldr	x1, [x0]
    f77c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f780:	add	x0, x0, #0xc75
    f784:	bl	18b74 <OnPrint@@Base+0x30c>
    f788:	mov	x0, #0x0                   	// #0
    f78c:	ldp	x21, x22, [sp, #16]
    f790:	ldr	x30, [sp, #32]
    f794:	ldp	x19, x20, [sp], #48
    f798:	ret
    f79c:	mov	x22, x0
    f7a0:	mov	x21, x1
    f7a4:	mov	x19, x3
    f7a8:	cmp	x3, #0x8
    f7ac:	b.ls	f818 <__sancov_default_options@@Base+0x1394>  // b.plast
    f7b0:	mov	x1, x3
    f7b4:	mov	x0, x20
    f7b8:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    f7bc:	cmp	x19, #0x20, lsl #12
    f7c0:	mov	x1, #0x20000               	// #131072
    f7c4:	ccmp	x0, x1, #0x2, ls  // ls = plast
    f7c8:	b.hi	f82c <__sancov_default_options@@Base+0x13a8>  // b.pmore
    f7cc:	cmp	x0, #0x100
    f7d0:	b.hi	f820 <__sancov_default_options@@Base+0x139c>  // b.pmore
    f7d4:	add	x2, x0, #0xf
    f7d8:	lsr	x2, x2, #4
    f7dc:	mov	x1, x22
    f7e0:	mov	x0, x21
    f7e4:	bl	f67c <__sancov_default_options@@Base+0x11f8>
    f7e8:	cmp	x19, #0x8
    f7ec:	b.ls	f78c <__sancov_default_options@@Base+0x1308>  // b.plast
    f7f0:	sub	x19, x19, #0x1
    f7f4:	ands	x3, x0, x19
    f7f8:	b.eq	f78c <__sancov_default_options@@Base+0x1308>  // b.none
    f7fc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f800:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f804:	add	x2, x2, #0xcd5
    f808:	add	x0, x0, #0xd10
    f80c:	mov	x4, #0x0                   	// #0
    f810:	mov	w1, #0x42                  	// #66
    f814:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    f818:	mov	x0, x20
    f81c:	b	f7bc <__sancov_default_options@@Base+0x1338>
    f820:	bl	e5b0 <__sancov_default_options@@Base+0x12c>
    f824:	mov	x2, x0
    f828:	b	f7dc <__sancov_default_options@@Base+0x1358>
    f82c:	add	x1, x22, #0xc1, lsl #12
    f830:	add	x0, x22, #0x80, lsl #12
    f834:	mov	x3, x19
    f838:	mov	x2, x20
    f83c:	add	x1, x1, #0x8
    f840:	add	x0, x0, #0xdc0
    f844:	bl	ec88 <__sancov_default_options@@Base+0x804>
    f848:	b	f7e8 <__sancov_default_options@@Base+0x1364>
    f84c:	stp	x19, x20, [sp, #-48]!
    f850:	ldp	x4, x20, [x1]
    f854:	stp	x21, x22, [sp, #16]
    f858:	mov	x21, x1
    f85c:	add	x1, x0, x3, lsl #10
    f860:	mov	x22, x2
    f864:	stp	x23, x30, [sp, #32]
    f868:	mov	x23, x3
    f86c:	lsr	x20, x20, #1
    f870:	ldr	x2, [x1, #24]
    f874:	cmp	x20, x4
    f878:	csel	x20, x20, x4, ls  // ls = plast
    f87c:	sub	x4, x4, x20
    f880:	add	x19, x4, #0x4
    f884:	cbnz	x2, f8ac <__sancov_default_options@@Base+0x1428>
    f888:	ldr	x2, [x21, x19, lsl #3]
    f88c:	cbnz	x2, f8bc <__sancov_default_options@@Base+0x1438>
    f890:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    f894:	ldr	x0, [x0, #4008]
    f898:	ldr	x1, [x0]
    f89c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f8a0:	add	x0, x0, #0xbf7
    f8a4:	bl	18b74 <OnPrint@@Base+0x30c>
    f8a8:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    f8ac:	mov	x1, x22
    f8b0:	bl	f67c <__sancov_default_options@@Base+0x11f8>
    f8b4:	mov	x2, x0
    f8b8:	b	f88c <__sancov_default_options@@Base+0x1408>
    f8bc:	add	x19, x21, x19, lsl #3
    f8c0:	add	x1, x2, #0x10
    f8c4:	mov	x0, #0x0                   	// #0
    f8c8:	str	x20, [x2, #8]
    f8cc:	cmp	x20, x0
    f8d0:	b.eq	f8e4 <__sancov_default_options@@Base+0x1460>  // b.none
    f8d4:	ldr	x3, [x19, x0, lsl #3]
    f8d8:	str	x3, [x1, x0, lsl #3]
    f8dc:	add	x0, x0, #0x1
    f8e0:	b	f8cc <__sancov_default_options@@Base+0x1448>
    f8e4:	ldr	x0, [x21]
    f8e8:	mov	x1, x23
    f8ec:	ldp	x23, x30, [sp, #32]
    f8f0:	sub	x20, x0, x20
    f8f4:	str	x20, [x21]
    f8f8:	mov	x0, x22
    f8fc:	ldp	x21, x22, [sp, #16]
    f900:	ldp	x19, x20, [sp], #48
    f904:	b	eba0 <__sancov_default_options@@Base+0x71c>
    f908:	stp	x19, x20, [sp, #-64]!
    f90c:	stp	x21, x22, [sp, #16]
    f910:	stp	x23, x24, [sp, #32]
    f914:	str	x30, [sp, #48]
    f918:	cbnz	x2, f93c <__sancov_default_options@@Base+0x14b8>
    f91c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f920:	add	x2, x2, #0xbc0
    f924:	mov	x4, #0x0                   	// #0
    f928:	mov	x3, #0x0                   	// #0
    f92c:	mov	w1, #0xae                  	// #174
    f930:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f934:	add	x0, x0, #0xb74
    f938:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    f93c:	mov	x19, x2
    f940:	cmp	x2, #0x35
    f944:	b.ls	f960 <__sancov_default_options@@Base+0x14dc>  // b.plast
    f948:	mov	x3, x2
    f94c:	mov	x4, #0x36                  	// #54
    f950:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    f954:	mov	w1, #0xaf                  	// #175
    f958:	add	x2, x2, #0xbd8
    f95c:	b	f930 <__sancov_default_options@@Base+0x14ac>
    f960:	add	x23, x0, x2, lsl #10
    f964:	mov	x24, x1
    f968:	mov	x20, x0
    f96c:	mov	x22, x3
    f970:	lsl	x21, x2, #10
    f974:	ldr	x1, [x23, #8]
    f978:	cbnz	x1, f980 <__sancov_default_options@@Base+0x14fc>
    f97c:	bl	e838 <__sancov_default_options@@Base+0x3b4>
    f980:	ldr	x1, [x20, x21]
    f984:	ldr	x0, [x23, #8]
    f988:	cmp	x1, x0
    f98c:	b.ne	f9a4 <__sancov_default_options@@Base+0x1520>  // b.any
    f990:	mov	x3, x19
    f994:	mov	x2, x24
    f998:	mov	x1, x23
    f99c:	mov	x0, x20
    f9a0:	bl	f84c <__sancov_default_options@@Base+0x13c8>
    f9a4:	ldr	x2, [x20, x21]
    f9a8:	ldp	x23, x24, [sp, #32]
    f9ac:	add	x0, x2, #0x1
    f9b0:	add	x19, x2, x19, lsl #7
    f9b4:	str	x0, [x20, x21]
    f9b8:	add	x19, x19, #0x4
    f9bc:	mov	x0, #0xd800                	// #55296
    f9c0:	add	x1, x20, x0
    f9c4:	ldr	x30, [sp, #48]
    f9c8:	str	x22, [x20, x19, lsl #3]
    f9cc:	add	x20, x20, x21
    f9d0:	ldr	x0, [x1, #16]
    f9d4:	ldr	x2, [x20, #16]
    f9d8:	ldp	x21, x22, [sp, #16]
    f9dc:	sub	x0, x0, x2
    f9e0:	str	x0, [x1, #16]
    f9e4:	ldp	x19, x20, [sp], #64
    f9e8:	ret
    f9ec:	cbz	x2, fb28 <__sancov_default_options@@Base+0x16a4>
    f9f0:	stp	x19, x20, [sp, #-48]!
    f9f4:	mov	x20, x2
    f9f8:	mov	x19, x0
    f9fc:	stp	x21, x30, [sp, #16]
    fa00:	mov	x21, x1
    fa04:	mov	x1, x2
    fa08:	bl	f078 <__sancov_default_options@@Base+0xbf4>
    fa0c:	tst	w0, #0xff
    fa10:	mov	x1, x20
    fa14:	b.eq	fa40 <__sancov_default_options@@Base+0x15bc>  // b.none
    fa18:	mov	x0, x19
    fa1c:	bl	f01c <__sancov_default_options@@Base+0xb98>
    fa20:	mov	x3, x20
    fa24:	mov	x2, x0
    fa28:	mov	x1, x19
    fa2c:	mov	x0, x21
    fa30:	bl	f908 <__sancov_default_options@@Base+0x1484>
    fa34:	ldp	x21, x30, [sp, #16]
    fa38:	ldp	x19, x20, [sp], #48
    fa3c:	ret
    fa40:	add	x0, x19, #0x80, lsl #12
    fa44:	add	x20, x19, #0xc1, lsl #12
    fa48:	add	x0, x0, #0xdc0
    fa4c:	bl	ec4c <__sancov_default_options@@Base+0x7c8>
    fa50:	mov	x21, x0
    fa54:	mov	x0, x20
    fa58:	str	x20, [sp, #40]
    fa5c:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
    fa60:	add	x1, x19, #0x80, lsl #12
    fa64:	ldr	x3, [x21, #24]
    fa68:	add	x1, x1, #0xdc0
    fa6c:	ldr	x0, [x1, #8]
    fa70:	lsl	x5, x3, #3
    fa74:	ldr	x19, [x0, x5]
    fa78:	cmp	x19, x21
    fa7c:	b.eq	faa0 <__sancov_default_options@@Base+0x161c>  // b.none
    fa80:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    fa84:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    fa88:	mov	x4, x21
    fa8c:	mov	x3, x19
    fa90:	add	x2, x2, #0xc43
    fa94:	add	x0, x0, #0x544
    fa98:	mov	w1, #0x88                  	// #136
    fa9c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    faa0:	add	x1, x1, #0x40, lsl #12
    faa4:	ldr	x4, [x1, #16]
    faa8:	cmp	x3, x4
    faac:	b.cc	fac8 <__sancov_default_options@@Base+0x1644>  // b.lo, b.ul, b.last
    fab0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    fab4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    fab8:	add	x2, x2, #0xc5d
    fabc:	add	x0, x0, #0x544
    fac0:	mov	w1, #0x89                  	// #137
    fac4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    fac8:	sub	x4, x4, #0x1
    facc:	ldr	x2, [x0, x4, lsl #3]
    fad0:	str	x4, [x1, #16]
    fad4:	str	x2, [x0, x5]
    fad8:	ldr	x0, [x1, #40]
    fadc:	str	x3, [x2, #24]
    fae0:	ldr	x2, [x19, #8]
    fae4:	add	x0, x0, #0x1
    fae8:	str	x0, [x1, #40]
    faec:	ldr	x0, [x1, #48]
    faf0:	strb	wzr, [x1, #24]
    faf4:	sub	x0, x0, x2
    faf8:	str	x0, [x1, #48]
    fafc:	ldr	x1, [x20, #24]
    fb00:	add	x0, sp, #0x28
    fb04:	sub	x1, x1, x2
    fb08:	str	x1, [x20, #24]
    fb0c:	ldr	x1, [x20, #32]
    fb10:	sub	x1, x1, x2
    fb14:	str	x1, [x20, #32]
    fb18:	bl	b110 <__sanitizer_get_allocated_size@@Base+0xc10>
    fb1c:	ldp	x0, x1, [x19]
    fb20:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
    fb24:	b	fa34 <__sancov_default_options@@Base+0x15b0>
    fb28:	ret
    fb2c:	stp	x19, x20, [sp, #-64]!
    fb30:	stp	x21, x22, [sp, #16]
    fb34:	mov	x22, x3
    fb38:	stp	x23, x24, [sp, #32]
    fb3c:	mov	x23, x4
    fb40:	str	x30, [sp, #48]
    fb44:	cbnz	x2, fb64 <__sancov_default_options@@Base+0x16e0>
    fb48:	mov	x2, x22
    fb4c:	mov	x3, x4
    fb50:	ldp	x21, x22, [sp, #16]
    fb54:	ldp	x23, x24, [sp, #32]
    fb58:	ldr	x30, [sp, #48]
    fb5c:	ldp	x19, x20, [sp], #64
    fb60:	b	f750 <__sancov_default_options@@Base+0x12cc>
    fb64:	cbnz	x3, fb88 <__sancov_default_options@@Base+0x1704>
    fb68:	mov	x23, #0x0                   	// #0
    fb6c:	bl	f9ec <__sancov_default_options@@Base+0x1568>
    fb70:	mov	x0, x23
    fb74:	ldp	x21, x22, [sp, #16]
    fb78:	ldp	x23, x24, [sp, #32]
    fb7c:	ldr	x30, [sp, #48]
    fb80:	ldp	x19, x20, [sp], #64
    fb84:	ret
    fb88:	mov	x20, x0
    fb8c:	mov	x24, x1
    fb90:	mov	x19, x2
    fb94:	mov	x1, x2
    fb98:	bl	f078 <__sancov_default_options@@Base+0xbf4>
    fb9c:	tst	w0, #0xff
    fba0:	b.ne	fbd8 <__sancov_default_options@@Base+0x1754>  // b.any
    fba4:	add	x0, x20, #0x80, lsl #12
    fba8:	mov	x1, x19
    fbac:	add	x0, x0, #0xdc0
    fbb0:	bl	ef08 <__sancov_default_options@@Base+0xa84>
    fbb4:	cbnz	x0, fbd8 <__sancov_default_options@@Base+0x1754>
    fbb8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    fbbc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    fbc0:	add	x2, x2, #0x9d6
    fbc4:	add	x0, x0, #0xd10
    fbc8:	mov	x4, #0x0                   	// #0
    fbcc:	mov	x3, #0x0                   	// #0
    fbd0:	mov	w1, #0x62                  	// #98
    fbd4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
    fbd8:	mov	x1, x19
    fbdc:	mov	x0, x20
    fbe0:	bl	f078 <__sancov_default_options@@Base+0xbf4>
    fbe4:	tst	w0, #0xff
    fbe8:	mov	x1, x19
    fbec:	b.eq	fc7c <__sancov_default_options@@Base+0x17f8>  // b.none
    fbf0:	mov	x0, x20
    fbf4:	bl	f078 <__sancov_default_options@@Base+0xbf4>
    fbf8:	tst	w0, #0xff
    fbfc:	b.ne	fc20 <__sancov_default_options@@Base+0x179c>  // b.any
    fc00:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    fc04:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
    fc08:	add	x2, x2, #0x9d6
    fc0c:	add	x0, x0, #0x694
    fc10:	mov	x4, #0x0                   	// #0
    fc14:	mov	x3, #0x0                   	// #0
    fc18:	mov	w1, #0xcc                  	// #204
    fc1c:	b	fbd4 <__sancov_default_options@@Base+0x1750>
    fc20:	mov	x1, x19
    fc24:	mov	x0, x20
    fc28:	bl	f01c <__sancov_default_options@@Base+0xb98>
    fc2c:	cmp	x0, #0x35
    fc30:	b.eq	fca0 <__sancov_default_options@@Base+0x181c>  // b.none
    fc34:	bl	f0a4 <__sancov_default_options@@Base+0xc20>
    fc38:	mov	x21, x0
    fc3c:	mov	x3, x23
    fc40:	mov	x2, x22
    fc44:	mov	x1, x24
    fc48:	mov	x0, x20
    fc4c:	bl	f750 <__sancov_default_options@@Base+0x12cc>
    fc50:	mov	x23, x0
    fc54:	cbz	x0, fc68 <__sancov_default_options@@Base+0x17e4>
    fc58:	cmp	x22, x21
    fc5c:	mov	x1, x19
    fc60:	csel	x2, x22, x21, ls  // ls = plast
    fc64:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
    fc68:	mov	x2, x19
    fc6c:	mov	x1, x24
    fc70:	mov	x0, x20
    fc74:	bl	f9ec <__sancov_default_options@@Base+0x1568>
    fc78:	b	fb70 <__sancov_default_options@@Base+0x16ec>
    fc7c:	add	x0, x20, #0x80, lsl #12
    fc80:	add	x0, x0, #0xdc0
    fc84:	bl	ec4c <__sancov_default_options@@Base+0x7c8>
    fc88:	add	x1, x20, #0x80, lsl #12
    fc8c:	add	x1, x1, #0xc00
    fc90:	ldr	x0, [x0, #16]
    fc94:	ldr	x1, [x1, #448]
    fc98:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
    fc9c:	b	fc38 <__sancov_default_options@@Base+0x17b4>
    fca0:	mov	x21, #0x200                 	// #512
    fca4:	b	fc3c <__sancov_default_options@@Base+0x17b8>
    fca8:	str	x30, [sp, #-16]!
    fcac:	bl	6b20 <__errno_location@plt>
    fcb0:	mov	w1, #0xc                   	// #12
    fcb4:	ldr	x30, [sp], #16
    fcb8:	str	w1, [x0]
    fcbc:	ret
    fcc0:	stp	x19, x20, [sp, #-64]!
    fcc4:	mov	x20, x0
    fcc8:	add	x19, sp, #0x20
    fccc:	stp	x21, x30, [sp, #16]
    fcd0:	mov	x0, x19
    fcd4:	mov	x21, x1
    fcd8:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fcdc:	add	x1, x1, #0x1d0
    fce0:	bl	ff10 <__sancov_default_options@@Base+0x1a8c>
    fce4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fce8:	mov	x3, x21
    fcec:	mov	x2, x20
    fcf0:	ldr	x0, [x0, #4008]
    fcf4:	ldr	x1, [x0]
    fcf8:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fcfc:	add	x0, x0, #0x1e0
    fd00:	bl	18b74 <OnPrint@@Base+0x30c>
    fd04:	mov	x0, x19
    fd08:	bl	ff60 <__sancov_default_options@@Base+0x1adc>
    fd0c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    fd10:	stp	x19, x20, [sp, #-80]!
    fd14:	mov	x2, x1
    fd18:	mov	x20, x0
    fd1c:	stp	x21, x22, [sp, #16]
    fd20:	add	x21, sp, #0x30
    fd24:	mov	x0, x21
    fd28:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fd2c:	add	x1, x1, #0x246
    fd30:	stp	x23, x30, [sp, #32]
    fd34:	bl	ff10 <__sancov_default_options@@Base+0x1a8c>
    fd38:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd3c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fd40:	mov	x19, x2
    fd44:	ldr	x22, [x2, #4000]
    fd48:	ldr	x0, [x0, #4008]
    fd4c:	ldr	x23, [x0]
    fd50:	ldr	x0, [x22]
    fd54:	cbnz	x0, fd60 <__sancov_default_options@@Base+0x18dc>
    fd58:	bl	1571c <__sanitizer_set_report_fd@@Base+0x2c68>
    fd5c:	str	x0, [x22]
    fd60:	ldr	x2, [x19, #4000]
    fd64:	mov	x1, x23
    fd68:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fd6c:	add	x0, x0, #0x257
    fd70:	ldr	x3, [x2]
    fd74:	mov	x2, x20
    fd78:	bl	18b74 <OnPrint@@Base+0x30c>
    fd7c:	mov	x0, x21
    fd80:	bl	ff60 <__sancov_default_options@@Base+0x1adc>
    fd84:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    fd88:	stp	x19, x20, [sp, #-64]!
    fd8c:	mov	x2, x1
    fd90:	mov	x20, x0
    fd94:	add	x19, sp, #0x20
    fd98:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fd9c:	mov	x0, x19
    fda0:	add	x1, x1, #0x2d5
    fda4:	str	x30, [sp, #16]
    fda8:	bl	ff10 <__sancov_default_options@@Base+0x1a8c>
    fdac:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdb0:	mov	x2, x20
    fdb4:	ldr	x0, [x0, #4008]
    fdb8:	ldr	x1, [x0]
    fdbc:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fdc0:	add	x0, x0, #0x2f2
    fdc4:	bl	18b74 <OnPrint@@Base+0x30c>
    fdc8:	mov	x0, x19
    fdcc:	bl	ff60 <__sancov_default_options@@Base+0x1adc>
    fdd0:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    fdd4:	stp	x19, x20, [sp, #-64]!
    fdd8:	mov	x20, x1
    fddc:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fde0:	add	x19, sp, #0x20
    fde4:	add	x1, x1, #0x342
    fde8:	stp	x21, x30, [sp, #16]
    fdec:	mov	x21, x0
    fdf0:	mov	x0, x19
    fdf4:	bl	ff10 <__sancov_default_options@@Base+0x1a8c>
    fdf8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fdfc:	mov	x3, x21
    fe00:	mov	x2, x20
    fe04:	ldr	x0, [x0, #4008]
    fe08:	ldr	x1, [x0]
    fe0c:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fe10:	add	x0, x0, #0x362
    fe14:	bl	18b74 <OnPrint@@Base+0x30c>
    fe18:	mov	x0, x19
    fe1c:	bl	ff60 <__sancov_default_options@@Base+0x1adc>
    fe20:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    fe24:	stp	x19, x20, [sp, #-64]!
    fe28:	mov	x2, x1
    fe2c:	mov	x20, x0
    fe30:	add	x19, sp, #0x20
    fe34:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fe38:	mov	x0, x19
    fe3c:	add	x1, x1, #0x3ff
    fe40:	str	x30, [sp, #16]
    fe44:	bl	ff10 <__sancov_default_options@@Base+0x1a8c>
    fe48:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe4c:	mov	x2, x20
    fe50:	mov	x3, #0x8                   	// #8
    fe54:	ldr	x0, [x0, #4008]
    fe58:	ldr	x1, [x0]
    fe5c:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fe60:	add	x0, x0, #0x420
    fe64:	bl	18b74 <OnPrint@@Base+0x30c>
    fe68:	mov	x0, x19
    fe6c:	bl	ff60 <__sancov_default_options@@Base+0x1adc>
    fe70:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    fe74:	stp	x19, x20, [sp, #-64]!
    fe78:	mov	x20, x0
    fe7c:	add	x19, sp, #0x20
    fe80:	stp	x21, x30, [sp, #16]
    fe84:	mov	x0, x19
    fe88:	mov	x21, x1
    fe8c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fe90:	add	x1, x1, #0x4a8
    fe94:	bl	ff10 <__sancov_default_options@@Base+0x1a8c>
    fe98:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    fe9c:	mov	x3, x21
    fea0:	mov	x2, x20
    fea4:	ldr	x0, [x0, #4008]
    fea8:	ldr	x1, [x0]
    feac:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    feb0:	add	x0, x0, #0x4c0
    feb4:	bl	18b74 <OnPrint@@Base+0x30c>
    feb8:	mov	x0, x19
    febc:	bl	ff60 <__sancov_default_options@@Base+0x1adc>
    fec0:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    fec4:	stp	x19, x20, [sp, #-64]!
    fec8:	mov	x2, x1
    fecc:	mov	x20, x0
    fed0:	add	x19, sp, #0x20
    fed4:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fed8:	mov	x0, x19
    fedc:	add	x1, x1, #0x514
    fee0:	str	x30, [sp, #16]
    fee4:	bl	ff10 <__sancov_default_options@@Base+0x1a8c>
    fee8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
    feec:	mov	x2, x20
    fef0:	ldr	x0, [x0, #4008]
    fef4:	ldr	x1, [x0]
    fef8:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    fefc:	add	x0, x0, #0x522
    ff00:	bl	18b74 <OnPrint@@Base+0x30c>
    ff04:	mov	x0, x19
    ff08:	bl	ff60 <__sancov_default_options@@Base+0x1adc>
    ff0c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    ff10:	stp	x19, x20, [sp, #-32]!
    ff14:	mov	x19, x0
    ff18:	mov	x20, x2
    ff1c:	stp	x21, x30, [sp, #16]
    ff20:	mov	x21, x1
    ff24:	bl	1a8ec <__sanitizer_symbolize_global@@Base+0x1a8>
    ff28:	stp	x21, x20, [x19, #8]
    ff2c:	bl	1a858 <__sanitizer_symbolize_global@@Base+0x114>
    ff30:	strb	w0, [x19, #24]
    ff34:	ldp	x21, x30, [sp, #16]
    ff38:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    ff3c:	ldp	x19, x20, [sp], #32
    ff40:	tst	w0, #0xff
    ff44:	adrp	x2, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    ff48:	add	x0, x1, #0x60f
    ff4c:	add	x1, x2, #0xee8
    ff50:	csel	x1, x1, x0, ne  // ne = any
    ff54:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    ff58:	add	x0, x0, #0x67b
    ff5c:	b	18af0 <OnPrint@@Base+0x288>
    ff60:	stp	x19, x30, [sp, #-16]!
    ff64:	mov	x19, x0
    ff68:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
    ff6c:	ldrb	w2, [x0, #24]
    ff70:	add	x1, x1, #0xb79
    ff74:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
    ff78:	add	x0, x0, #0x60f
    ff7c:	cmp	w2, #0x0
    ff80:	csel	x1, x1, x0, ne  // ne = any
    ff84:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    ff88:	add	x0, x0, #0x67b
    ff8c:	bl	18af0 <OnPrint@@Base+0x288>
    ff90:	ldr	x0, [x19, #16]
    ff94:	bl	1a434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
    ff98:	bl	e744 <__sancov_default_options@@Base+0x2c0>
    ff9c:	ldp	x0, x1, [x19, #8]
    ffa0:	mov	x2, #0x0                   	// #0
    ffa4:	bl	1aa6c <__sanitizer_symbolize_global@@Base+0x328>
    ffa8:	mov	x0, x19
    ffac:	ldp	x19, x30, [sp], #16
    ffb0:	b	1a980 <__sanitizer_symbolize_global@@Base+0x23c>
    ffb4:	str	x30, [sp, #-16]!
    ffb8:	tst	w4, #0xff
    ffbc:	b.ne	ffd4 <__sancov_default_options@@Base+0x1b50>  // b.any
    ffc0:	mov	x5, x1
    ffc4:	adrp	x1, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
    ffc8:	mov	w6, w3
    ffcc:	ldr	w3, [x1, #2496]
    ffd0:	cbz	w3, ffe4 <__sancov_default_options@@Base+0x1b60>
    ffd4:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
    ffd8:	add	x0, x0, #0x568
    ffdc:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
    ffe0:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
    ffe4:	mov	w3, #0x1                   	// #1
    ffe8:	mov	x4, x0
    ffec:	str	w3, [x1, #2496]
    fff0:	mov	x3, x0
    fff4:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
    fff8:	ldr	x1, [x0, #976]
    fffc:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10000:	add	x0, x0, #0x57f
   10004:	bl	18b74 <OnPrint@@Base+0x30c>
   10008:	bl	171c8 <__sanitizer_set_report_fd@@Base+0x4714>
   1000c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10010:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10014:	add	x2, x2, #0x5c0
   10018:	add	x0, x0, #0x5e1
   1001c:	mov	x4, #0x0                   	// #0
   10020:	mov	x3, #0x0                   	// #0
   10024:	mov	w1, #0x35                  	// #53
   10028:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1002c:	stp	x19, x20, [sp, #-32]!
   10030:	mov	x19, x0
   10034:	stp	x21, x30, [sp, #16]
   10038:	cbz	x0, 10078 <__sancov_default_options@@Base+0x1bf4>
   1003c:	mov	x21, x1
   10040:	cbz	x1, 10078 <__sancov_default_options@@Base+0x1bf4>
   10044:	bl	146e8 <__sanitizer_set_report_fd@@Base+0x1c34>
   10048:	mov	x20, x0
   1004c:	cbz	x0, 1005c <__sancov_default_options@@Base+0x1bd8>
   10050:	mov	x0, x21
   10054:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   10058:	add	x19, x20, x0
   1005c:	ldrb	w0, [x19]
   10060:	cmp	w0, #0x2e
   10064:	b.ne	10078 <__sancov_default_options@@Base+0x1bf4>  // b.any
   10068:	ldrb	w0, [x19, #1]
   1006c:	cmp	w0, #0x2f
   10070:	b.ne	10078 <__sancov_default_options@@Base+0x1bf4>  // b.any
   10074:	add	x19, x19, #0x2
   10078:	mov	x0, x19
   1007c:	ldp	x21, x30, [sp, #16]
   10080:	ldp	x19, x20, [sp], #32
   10084:	ret
   10088:	stp	x19, x30, [sp, #-16]!
   1008c:	mov	x19, x0
   10090:	cbz	x0, 100a4 <__sancov_default_options@@Base+0x1c20>
   10094:	mov	w1, #0x2f                  	// #47
   10098:	bl	144b8 <__sanitizer_set_report_fd@@Base+0x1a04>
   1009c:	cbz	x0, 100a4 <__sancov_default_options@@Base+0x1c20>
   100a0:	add	x19, x0, #0x1
   100a4:	mov	x0, x19
   100a8:	ldp	x19, x30, [sp], #16
   100ac:	ret
   100b0:	stp	x19, x20, [sp, #-32]!
   100b4:	mov	x1, #0x1000                	// #4096
   100b8:	adrp	x19, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   100bc:	add	x19, x19, #0xa30
   100c0:	stp	x21, x30, [sp, #16]
   100c4:	mov	x0, x19
   100c8:	bl	157b8 <__sanitizer_set_report_fd@@Base+0x2d04>
   100cc:	mov	x0, x19
   100d0:	bl	10088 <__sancov_default_options@@Base+0x1c04>
   100d4:	mov	x21, x0
   100d8:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   100dc:	cmp	x21, x19
   100e0:	mov	x20, x0
   100e4:	b.eq	100fc <__sancov_default_options@@Base+0x1c78>  // b.none
   100e8:	mov	x2, x0
   100ec:	mov	x1, x21
   100f0:	mov	x0, x19
   100f4:	bl	14334 <__sanitizer_set_report_fd@@Base+0x1880>
   100f8:	strb	wzr, [x20, x19]
   100fc:	mov	x0, x20
   10100:	ldp	x21, x30, [sp, #16]
   10104:	ldp	x19, x20, [sp], #32
   10108:	ret
   1010c:	cbz	x0, 10194 <__sancov_default_options@@Base+0x1d10>
   10110:	stp	x19, x30, [sp, #-16]!
   10114:	mov	x19, x0
   10118:	ldrb	w1, [x0]
   1011c:	cbz	w1, 10188 <__sancov_default_options@@Base+0x1d04>
   10120:	cmp	x0, x19
   10124:	b.cs	10148 <__sancov_default_options@@Base+0x1cc4>  // b.hs, b.nlast
   10128:	mov	x3, x0
   1012c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10130:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10134:	mov	x4, x19
   10138:	add	x2, x2, #0x61f
   1013c:	add	x0, x0, #0x5e1
   10140:	mov	w1, #0x68                  	// #104
   10144:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   10148:	cmp	w1, #0x1b
   1014c:	b.ne	10174 <__sancov_default_options@@Base+0x1cf0>  // b.any
   10150:	ldrb	w2, [x0, #1]
   10154:	cmp	w2, #0x5b
   10158:	b.ne	10174 <__sancov_default_options@@Base+0x1cf0>  // b.any
   1015c:	mov	w1, #0x6d                  	// #109
   10160:	bl	14540 <__sanitizer_set_report_fd@@Base+0x1a8c>
   10164:	ldrb	w1, [x0]
   10168:	cbz	w1, 10188 <__sancov_default_options@@Base+0x1d04>
   1016c:	add	x0, x0, #0x1
   10170:	b	10118 <__sancov_default_options@@Base+0x1c94>
   10174:	cmp	x0, x19
   10178:	b.eq	10180 <__sancov_default_options@@Base+0x1cfc>  // b.none
   1017c:	strb	w1, [x19]
   10180:	add	x19, x19, #0x1
   10184:	b	1016c <__sancov_default_options@@Base+0x1ce8>
   10188:	strb	wzr, [x19]
   1018c:	ldp	x19, x30, [sp], #16
   10190:	ret
   10194:	ret
   10198:	stp	x19, x20, [sp, #-32]!
   1019c:	mov	x19, x0
   101a0:	add	x20, x0, #0x30
   101a4:	ldr	x0, [x0]
   101a8:	mov	x1, #0x0                   	// #0
   101ac:	str	x30, [sp, #16]
   101b0:	bl	eafc <__sancov_default_options@@Base+0x678>
   101b4:	stp	xzr, xzr, [x19]
   101b8:	add	x0, x19, #0x1c
   101bc:	str	xzr, [x19, #16]
   101c0:	mov	x2, #0x10                  	// #16
   101c4:	str	wzr, [x19, #24]
   101c8:	mov	w1, #0x0                   	// #0
   101cc:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   101d0:	strb	wzr, [x19, #44]
   101d4:	ldr	x1, [x19, #48]
   101d8:	cbz	x1, 10204 <__sancov_default_options@@Base+0x1d80>
   101dc:	ldr	x0, [x19, #56]
   101e0:	ldr	x2, [x0]
   101e4:	str	x2, [x20, #8]
   101e8:	cbnz	x2, 101f0 <__sancov_default_options@@Base+0x1d6c>
   101ec:	str	xzr, [x20, #16]
   101f0:	sub	x1, x1, #0x1
   101f4:	str	x1, [x20]
   101f8:	mov	x1, #0x0                   	// #0
   101fc:	bl	eafc <__sancov_default_options@@Base+0x678>
   10200:	b	101d4 <__sancov_default_options@@Base+0x1d50>
   10204:	ldr	x30, [sp, #16]
   10208:	ldp	x19, x20, [sp], #32
   1020c:	ret
   10210:	stp	x19, x20, [sp, #-32]!
   10214:	mov	x19, x0
   10218:	mov	x20, x2
   1021c:	stp	x21, x30, [sp, #16]
   10220:	mov	x21, x1
   10224:	bl	10198 <__sancov_default_options@@Base+0x1d14>
   10228:	mov	x0, x21
   1022c:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   10230:	ldp	x21, x30, [sp, #16]
   10234:	stp	x0, x20, [x19]
   10238:	ldp	x19, x20, [sp], #32
   1023c:	ret
   10240:	stp	x19, x20, [sp, #-48]!
   10244:	mov	x19, x0
   10248:	mov	x20, x4
   1024c:	stp	x21, x22, [sp, #16]
   10250:	mov	w21, w3
   10254:	and	w22, w5, #0xff
   10258:	str	x30, [sp, #32]
   1025c:	bl	10210 <__sancov_default_options@@Base+0x1d8c>
   10260:	str	w21, [x19, #24]
   10264:	mov	x1, x20
   10268:	add	x0, x19, #0x1c
   1026c:	mov	x2, #0x10                  	// #16
   10270:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   10274:	strb	w22, [x19, #44]
   10278:	ldp	x21, x22, [sp, #16]
   1027c:	ldr	x30, [sp, #32]
   10280:	ldp	x19, x20, [sp], #48
   10284:	ret
   10288:	stp	x19, x20, [sp, #-64]!
   1028c:	mov	x20, x0
   10290:	mov	x0, #0x30                  	// #48
   10294:	stp	x21, x22, [sp, #16]
   10298:	mov	x22, x2
   1029c:	mov	x21, x5
   102a0:	mov	x2, #0x0                   	// #0
   102a4:	stp	x23, x24, [sp, #32]
   102a8:	mov	x24, x1
   102ac:	and	w23, w3, #0xff
   102b0:	mov	x1, #0x0                   	// #0
   102b4:	stp	x25, x30, [sp, #48]
   102b8:	and	w25, w4, #0xff
   102bc:	bl	e8ec <__sancov_default_options@@Base+0x468>
   102c0:	stp	xzr, x24, [x0]
   102c4:	mov	x19, x0
   102c8:	add	x0, x0, #0x1a
   102cc:	stur	x22, [x0, #-10]
   102d0:	sturb	w23, [x0, #-2]
   102d4:	sturb	w25, [x0, #-1]
   102d8:	cbnz	x21, 102e4 <__sancov_default_options@@Base+0x1e60>
   102dc:	adrp	x21, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   102e0:	add	x21, x21, #0x60f
   102e4:	mov	x1, x21
   102e8:	mov	x2, #0x10                  	// #16
   102ec:	bl	1460c <__sanitizer_set_report_fd@@Base+0x1b58>
   102f0:	mov	x0, x20
   102f4:	ldr	x1, [x0, #48]!
   102f8:	str	xzr, [x19]
   102fc:	cbnz	x1, 10334 <__sancov_default_options@@Base+0x1eb0>
   10300:	stp	x19, x19, [x0, #8]
   10304:	mov	x0, #0x1                   	// #1
   10308:	str	x0, [x20, #48]
   1030c:	cbz	w23, 10320 <__sancov_default_options@@Base+0x1e9c>
   10310:	ldr	x0, [x20, #16]
   10314:	cmp	x0, x22
   10318:	b.cs	10320 <__sancov_default_options@@Base+0x1e9c>  // b.hs, b.nlast
   1031c:	str	x22, [x20, #16]
   10320:	ldp	x21, x22, [sp, #16]
   10324:	ldp	x23, x24, [sp, #32]
   10328:	ldp	x25, x30, [sp, #48]
   1032c:	ldp	x19, x20, [sp], #64
   10330:	ret
   10334:	ldr	x2, [x0, #16]
   10338:	add	x1, x1, #0x1
   1033c:	str	x19, [x2]
   10340:	str	x19, [x0, #16]
   10344:	str	x1, [x20, #48]
   10348:	b	1030c <__sancov_default_options@@Base+0x1e88>
   1034c:	ldr	x0, [x0, #56]
   10350:	cbz	x0, 10374 <__sancov_default_options@@Base+0x1ef0>
   10354:	ldr	x2, [x0, #8]
   10358:	cmp	x2, x1
   1035c:	b.hi	1036c <__sancov_default_options@@Base+0x1ee8>  // b.pmore
   10360:	ldr	x2, [x0, #16]
   10364:	cmp	x2, x1
   10368:	b.hi	1037c <__sancov_default_options@@Base+0x1ef8>  // b.pmore
   1036c:	ldr	x0, [x0]
   10370:	b	10350 <__sancov_default_options@@Base+0x1ecc>
   10374:	mov	w0, #0x0                   	// #0
   10378:	ret
   1037c:	mov	w0, #0x1                   	// #1
   10380:	b	10378 <__sancov_default_options@@Base+0x1ef4>
   10384:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10388:	ldr	x2, [x2, #4040]
   1038c:	ldr	x1, [x2, #128]
   10390:	cbz	x1, 103d8 <__sancov_default_options@@Base+0x1f54>
   10394:	adrp	x1, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   10398:	add	x1, x1, #0x9c0
   1039c:	add	x1, x1, #0x8
   103a0:	ldxr	x3, [x1]
   103a4:	add	x4, x3, x0
   103a8:	stlxr	w5, x4, [x1]
   103ac:	cbnz	w5, 103a0 <__sancov_default_options@@Base+0x1f1c>
   103b0:	dmb	ish
   103b4:	ldr	x1, [x2, #128]
   103b8:	add	x0, x3, x0
   103bc:	cmp	x1, x0, lsr #20
   103c0:	b.hi	103d8 <__sancov_default_options@@Base+0x1f54>  // b.pmore
   103c4:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   103c8:	add	x0, x0, #0x62e
   103cc:	str	x30, [sp, #-16]!
   103d0:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   103d4:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   103d8:	ret
   103dc:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   103e0:	ldr	x1, [x1, #4040]
   103e4:	ldr	x1, [x1, #128]
   103e8:	cbz	x1, 10410 <__sancov_default_options@@Base+0x1f8c>
   103ec:	adrp	x1, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   103f0:	add	x1, x1, #0x9c0
   103f4:	neg	x0, x0
   103f8:	add	x1, x1, #0x8
   103fc:	ldxr	x2, [x1]
   10400:	add	x2, x2, x0
   10404:	stlxr	w3, x2, [x1]
   10408:	cbnz	w3, 103fc <__sancov_default_options@@Base+0x1f78>
   1040c:	dmb	ish
   10410:	ret
   10414:	cbnz	x1, 10420 <__sancov_default_options@@Base+0x1f9c>
   10418:	mov	w0, #0x0                   	// #0
   1041c:	ret
   10420:	stp	x19, x20, [sp, #-80]!
   10424:	mov	x20, x0
   10428:	stp	x21, x22, [sp, #16]
   1042c:	mov	x21, x1
   10430:	stp	x23, x24, [sp, #32]
   10434:	stp	x25, x26, [sp, #48]
   10438:	str	x30, [sp, #64]
   1043c:	ldrb	w0, [x1]
   10440:	cbz	w0, 10530 <__sancov_default_options@@Base+0x20ac>
   10444:	cbz	x20, 104b4 <__sancov_default_options@@Base+0x2030>
   10448:	ldrb	w0, [x20]
   1044c:	cmp	w0, #0x5e
   10450:	b.ne	10488 <__sancov_default_options@@Base+0x2004>  // b.any
   10454:	add	x20, x20, #0x1
   10458:	mov	w26, #0x1                   	// #1
   1045c:	mov	w0, #0x0                   	// #0
   10460:	mov	w24, #0x2a                  	// #42
   10464:	mov	w25, #0x24                  	// #36
   10468:	ldrb	w1, [x20]
   1046c:	cbz	w1, 104b4 <__sancov_default_options@@Base+0x2030>
   10470:	cmp	w1, #0x2a
   10474:	b.ne	104a4 <__sancov_default_options@@Base+0x2020>  // b.any
   10478:	add	x19, x20, #0x1
   1047c:	mov	x1, x21
   10480:	mov	w0, #0x1                   	// #1
   10484:	b	10494 <__sancov_default_options@@Base+0x2010>
   10488:	mov	w26, #0x0                   	// #0
   1048c:	b	1045c <__sancov_default_options@@Base+0x1fd8>
   10490:	cbz	x19, 104b4 <__sancov_default_options@@Base+0x2030>
   10494:	mov	x21, x1
   10498:	mov	x20, x19
   1049c:	mov	w26, #0x0                   	// #0
   104a0:	b	10468 <__sancov_default_options@@Base+0x1fe4>
   104a4:	ldrb	w2, [x21]
   104a8:	cmp	w1, #0x24
   104ac:	b.ne	104bc <__sancov_default_options@@Base+0x2038>  // b.any
   104b0:	cbnz	w2, 10534 <__sancov_default_options@@Base+0x20b0>
   104b4:	mov	w0, #0x1                   	// #1
   104b8:	b	10534 <__sancov_default_options@@Base+0x20b0>
   104bc:	cbz	w2, 10530 <__sancov_default_options@@Base+0x20ac>
   104c0:	mov	w1, #0x2a                  	// #42
   104c4:	mov	x0, x20
   104c8:	bl	1444c <__sanitizer_set_report_fd@@Base+0x1998>
   104cc:	mov	x19, x0
   104d0:	mov	w1, #0x24                  	// #36
   104d4:	mov	x0, x20
   104d8:	bl	1444c <__sanitizer_set_report_fd@@Base+0x1998>
   104dc:	mov	x22, x0
   104e0:	cbz	x19, 1054c <__sancov_default_options@@Base+0x20c8>
   104e4:	cmp	x0, #0x0
   104e8:	ccmp	x19, x0, #0x0, ne  // ne = any
   104ec:	csel	x19, x19, x0, ls  // ls = plast
   104f0:	strb	wzr, [x19]
   104f4:	mov	x1, x20
   104f8:	mov	x0, x21
   104fc:	bl	146e8 <__sanitizer_set_report_fd@@Base+0x1c34>
   10500:	mov	x23, x0
   10504:	mov	x0, x20
   10508:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1050c:	add	x1, x23, x0
   10510:	cbz	x19, 10520 <__sancov_default_options@@Base+0x209c>
   10514:	cmp	x22, x19
   10518:	csel	w0, w25, w24, eq  // eq = none
   1051c:	strb	w0, [x19]
   10520:	cbz	x23, 10530 <__sancov_default_options@@Base+0x20ac>
   10524:	cmp	x23, x21
   10528:	csel	w0, w26, wzr, ne  // ne = any
   1052c:	cbz	w0, 10490 <__sancov_default_options@@Base+0x200c>
   10530:	mov	w0, #0x0                   	// #0
   10534:	ldp	x21, x22, [sp, #16]
   10538:	ldp	x23, x24, [sp, #32]
   1053c:	ldp	x25, x26, [sp, #48]
   10540:	ldr	x30, [sp, #64]
   10544:	ldp	x19, x20, [sp], #80
   10548:	ret
   1054c:	cbz	x0, 104f4 <__sancov_default_options@@Base+0x2070>
   10550:	mov	x19, x0
   10554:	b	104f0 <__sancov_default_options@@Base+0x206c>
   10558:	adrp	x0, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   1055c:	add	x0, x0, #0xa30
   10560:	ret
   10564:	b	100b0 <__sancov_default_options@@Base+0x1c2c>
   10568:	adrp	x1, 1a6000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   1056c:	add	x0, x1, #0xa30
   10570:	ldrb	w1, [x1, #2608]
   10574:	cbnz	w1, 1058c <__sancov_default_options@@Base+0x2108>
   10578:	str	x30, [sp, #-16]!
   1057c:	mov	x1, #0x1000                	// #4096
   10580:	bl	15724 <__sanitizer_set_report_fd@@Base+0x2c70>
   10584:	ldr	x30, [sp], #16
   10588:	b	100b0 <__sancov_default_options@@Base+0x1c2c>
   1058c:	ret
   10590:	stp	x19, x20, [sp, #-32]!
   10594:	mov	x20, x0
   10598:	mov	x19, x1
   1059c:	stp	x21, x30, [sp, #16]
   105a0:	adrp	x21, 1a6000 <__asan_cplus_demangle_operators@@Base+0x155be0>
   105a4:	bl	10568 <__sancov_default_options@@Base+0x20e4>
   105a8:	add	x21, x21, #0xa30
   105ac:	mov	x0, x21
   105b0:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   105b4:	cbz	x19, 105d8 <__sancov_default_options@@Base+0x2154>
   105b8:	sub	x19, x19, #0x1
   105bc:	mov	x1, x21
   105c0:	cmp	x19, x0
   105c4:	csel	x19, x19, x0, ls  // ls = plast
   105c8:	mov	x0, x20
   105cc:	mov	x2, x19
   105d0:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   105d4:	strb	wzr, [x20, x19]
   105d8:	mov	x0, x19
   105dc:	ldp	x21, x30, [sp, #16]
   105e0:	ldp	x19, x20, [sp], #32
   105e4:	ret
   105e8:	stp	x19, x20, [sp, #-32]!
   105ec:	str	x30, [sp, #16]
   105f0:	bl	15278 <__sanitizer_set_report_fd@@Base+0x27c4>
   105f4:	cbz	x0, 10638 <__sancov_default_options@@Base+0x21b4>
   105f8:	adrp	x20, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   105fc:	add	x20, x20, #0x863
   10600:	mov	x19, x0
   10604:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10608:	add	x0, x0, #0x663
   1060c:	bl	18af0 <OnPrint@@Base+0x288>
   10610:	ldr	x1, [x19], #8
   10614:	cbz	x1, 10624 <__sancov_default_options@@Base+0x21a0>
   10618:	mov	x0, x20
   1061c:	bl	18af0 <OnPrint@@Base+0x288>
   10620:	b	10610 <__sancov_default_options@@Base+0x218c>
   10624:	ldr	x30, [sp, #16]
   10628:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1062c:	ldp	x19, x20, [sp], #32
   10630:	add	x0, x0, #0x60d
   10634:	b	18af0 <OnPrint@@Base+0x288>
   10638:	ldr	x30, [sp, #16]
   1063c:	ldp	x19, x20, [sp], #32
   10640:	ret
   10644:	stp	x19, x20, [sp, #-48]!
   10648:	adrp	x19, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   1064c:	add	x19, x19, #0x9c0
   10650:	add	x19, x19, #0x10
   10654:	stp	x21, x22, [sp, #16]
   10658:	mov	x21, x0
   1065c:	mov	x22, x1
   10660:	mov	x20, #0x0                   	// #0
   10664:	str	x30, [sp, #32]
   10668:	lsl	x0, x20, #4
   1066c:	ldr	x2, [x0, x19]
   10670:	cbz	x2, 1068c <__sancov_default_options@@Base+0x2208>
   10674:	mov	x1, x22
   10678:	mov	x0, x21
   1067c:	add	x20, x20, #0x1
   10680:	blr	x2
   10684:	cmp	x20, #0x5
   10688:	b.ne	10668 <__sancov_default_options@@Base+0x21e4>  // b.any
   1068c:	ldp	x21, x22, [sp, #16]
   10690:	ldr	x30, [sp, #32]
   10694:	ldp	x19, x20, [sp], #48
   10698:	ret
   1069c:	stp	x19, x20, [sp, #-32]!
   106a0:	adrp	x19, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   106a4:	add	x19, x19, #0x9c0
   106a8:	add	x19, x19, #0x10
   106ac:	stp	x21, x30, [sp, #16]
   106b0:	mov	x21, x0
   106b4:	mov	x20, #0x0                   	// #0
   106b8:	add	x0, x19, x20
   106bc:	ldr	x1, [x0, #8]
   106c0:	cbz	x1, 106d8 <__sancov_default_options@@Base+0x2254>
   106c4:	mov	x0, x21
   106c8:	add	x20, x20, #0x10
   106cc:	blr	x1
   106d0:	cmp	x20, #0x50
   106d4:	b.ne	106b8 <__sancov_default_options@@Base+0x2234>  // b.any
   106d8:	ldp	x21, x30, [sp, #16]
   106dc:	ldp	x19, x20, [sp], #32
   106e0:	ret

00000000000106e4 <__sanitizer_report_error_summary@@Base>:
   106e4:	mov	x1, x0
   106e8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   106ec:	add	x0, x0, #0xb9e
   106f0:	b	18af0 <OnPrint@@Base+0x288>

00000000000106f4 <__sanitizer_acquire_crash_state@@Base>:
   106f4:	adrp	x0, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   106f8:	add	x0, x0, #0x9c0
   106fc:	add	x0, x0, #0x60
   10700:	mov	w2, #0x1                   	// #1
   10704:	ldxrb	w1, [x0]
   10708:	stxrb	w3, w2, [x0]
   1070c:	cbnz	w3, 10704 <__sanitizer_acquire_crash_state@@Base+0x10>
   10710:	tst	w1, #0xff
   10714:	dmb	ish
   10718:	cset	w0, eq  // eq = none
   1071c:	ret

0000000000010720 <__sanitizer_install_malloc_and_free_hooks@@Base>:
   10720:	cmp	x0, #0x0
   10724:	mov	x4, x0
   10728:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1072c:	b.eq	10778 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>  // b.none
   10730:	adrp	x2, 1a5000 <__asan_cplus_demangle_operators@@Base+0x154be0>
   10734:	add	x3, x2, #0x9c0
   10738:	add	x3, x3, #0x10
   1073c:	mov	w0, #0x0                   	// #0
   10740:	ldr	x6, [x3]
   10744:	mov	w5, w0
   10748:	add	w0, w0, #0x1
   1074c:	cbnz	x6, 1076c <__sanitizer_install_malloc_and_free_hooks@@Base+0x4c>
   10750:	add	x2, x2, #0x9c0
   10754:	sbfiz	x3, x5, #4, #32
   10758:	add	x2, x2, #0x10
   1075c:	add	x5, x2, w5, sxtw #4
   10760:	str	x4, [x2, x3]
   10764:	str	x1, [x5, #8]
   10768:	ret
   1076c:	add	x3, x3, #0x10
   10770:	cmp	w0, #0x5
   10774:	b.ne	10740 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20>  // b.any
   10778:	mov	w0, #0x0                   	// #0
   1077c:	b	10768 <__sanitizer_install_malloc_and_free_hooks@@Base+0x48>
   10780:	stp	x19, x20, [sp, #-64]!
   10784:	mov	x20, x0
   10788:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1078c:	stp	x21, x30, [sp, #16]
   10790:	ldr	x0, [x0, #4040]
   10794:	ldrb	w0, [x0, #60]
   10798:	cbz	w0, 107e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc4>
   1079c:	add	x21, sp, #0x20
   107a0:	mov	x19, x1
   107a4:	mov	x0, x21
   107a8:	mov	x1, #0x400                 	// #1024
   107ac:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   107b0:	cbnz	x19, 107bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c>
   107b4:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
   107b8:	ldr	x19, [x0, #976]
   107bc:	mov	x3, x20
   107c0:	mov	x2, x19
   107c4:	mov	x0, x21
   107c8:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   107cc:	add	x1, x1, #0x66e
   107d0:	bl	18bf8 <OnPrint@@Base+0x390>
   107d4:	ldr	x0, [sp, #32]
   107d8:	bl	66d0 <__sanitizer_report_error_summary@plt>
   107dc:	ldp	x0, x1, [sp, #32]
   107e0:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   107e4:	ldp	x21, x30, [sp, #16]
   107e8:	ldp	x19, x20, [sp], #64
   107ec:	ret
   107f0:	adrp	x1, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   107f4:	ldr	x3, [x1, #2632]
   107f8:	cbz	x3, 1081c <__sanitizer_install_malloc_and_free_hooks@@Base+0xfc>
   107fc:	str	x30, [sp, #-16]!
   10800:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10804:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10808:	add	x2, x2, #0x68c
   1080c:	add	x0, x0, #0x6bc
   10810:	mov	x4, #0x0                   	// #0
   10814:	mov	w1, #0x16                  	// #22
   10818:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1081c:	str	x0, [x1, #2632]
   10820:	ret
   10824:	mov	x0, #0x0                   	// #0
   10828:	ret
   1082c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10830:	stp	x19, x20, [sp, #-112]!
   10834:	mov	w20, #0x0                   	// #0
   10838:	ldr	x0, [x0, #4040]
   1083c:	stp	x23, x24, [sp, #32]
   10840:	adrp	x23, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10844:	adrp	x24, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10848:	stp	x21, x22, [sp, #16]
   1084c:	ldr	x23, [x23, #3680]
   10850:	stp	x25, x26, [sp, #48]
   10854:	adrp	x25, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10858:	ldp	x22, x21, [x0, #136]
   1085c:	add	x25, x25, #0x712
   10860:	ldrb	w0, [x0, #152]
   10864:	mov	x26, #0x0                   	// #0
   10868:	str	w0, [sp, #100]
   1086c:	ldr	x0, [x24, #4008]
   10870:	stp	x27, x28, [sp, #64]
   10874:	mov	x27, #0x0                   	// #0
   10878:	str	x30, [sp, #80]
   1087c:	str	d8, [sp, #88]
   10880:	fmov	d8, xzr
   10884:	str	x0, [sp, #104]
   10888:	mov	w0, #0x64                  	// #100
   1088c:	bl	17760 <__sanitizer_set_report_fd@@Base+0x4cac>
   10890:	bl	164d4 <__sanitizer_set_report_fd@@Base+0x3a20>
   10894:	lsr	x28, x0, #20
   10898:	ldr	w0, [x23]
   1089c:	cbz	w0, 10918 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   108a0:	mov	x0, #0xb                   	// #11
   108a4:	mov	x1, #0xa                   	// #10
   108a8:	mul	x0, x26, x0
   108ac:	udiv	x0, x0, x1
   108b0:	cmp	x0, x28
   108b4:	b.cs	108d4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b4>  // b.hs, b.nlast
   108b8:	ldr	x0, [x24, #4008]
   108bc:	mov	x2, x28
   108c0:	mov	x26, x28
   108c4:	ldr	x1, [x0]
   108c8:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   108cc:	add	x0, x0, #0x702
   108d0:	bl	18af0 <OnPrint@@Base+0x288>
   108d4:	bl	19710 <OnPrint@@Base+0xea8>
   108d8:	mov	x19, x0
   108dc:	cbz	x0, 10918 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>
   108e0:	mov	x0, #0xb                   	// #11
   108e4:	mov	x1, #0xa                   	// #10
   108e8:	ldr	x3, [x19, #8]
   108ec:	mul	x0, x27, x0
   108f0:	udiv	x0, x0, x1
   108f4:	cmp	x0, x3
   108f8:	b.cs	10918 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8>  // b.hs, b.nlast
   108fc:	ldr	x0, [sp, #104]
   10900:	lsr	x3, x3, #20
   10904:	ldr	x2, [x19]
   10908:	ldr	x1, [x0]
   1090c:	mov	x0, x25
   10910:	bl	18af0 <OnPrint@@Base+0x288>
   10914:	ldr	x27, [x19, #8]
   10918:	cmp	x22, #0x0
   1091c:	ccmp	x22, x28, #0x2, ne  // ne = any
   10920:	b.cs	1094c <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c>  // b.hs, b.nlast
   10924:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10928:	mov	x3, x28
   1092c:	mov	x2, x22
   10930:	ldr	x0, [x0, #4008]
   10934:	ldr	x1, [x0]
   10938:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1093c:	add	x0, x0, #0x73b
   10940:	bl	18b74 <OnPrint@@Base+0x30c>
   10944:	bl	171c8 <__sanitizer_set_report_fd@@Base+0x4714>
   10948:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1094c:	cbz	x21, 10a00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2e0>
   10950:	cmp	x21, x28
   10954:	eor	w0, w20, #0x1
   10958:	cset	w19, cc  // cc = lo, ul, last
   1095c:	ands	w19, w19, w0
   10960:	b.eq	109e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c0>  // b.none
   10964:	ldr	x0, [x24, #4008]
   10968:	mov	x3, x28
   1096c:	mov	x2, x21
   10970:	ldr	x1, [x0]
   10974:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10978:	add	x0, x0, #0x76a
   1097c:	bl	18b74 <OnPrint@@Base+0x30c>
   10980:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   10984:	ldr	x1, [x0, #2632]
   10988:	cbz	x1, 10994 <__sanitizer_install_malloc_and_free_hooks@@Base+0x274>
   1098c:	mov	w0, #0x1                   	// #1
   10990:	blr	x1
   10994:	ldr	w0, [sp, #100]
   10998:	cbz	w0, 109d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2b8>
   1099c:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   109a0:	scvtf	d0, d8
   109a4:	ldr	d1, [x0, #1976]
   109a8:	fmul	d0, d0, d1
   109ac:	scvtf	d1, x28
   109b0:	fcmpe	d1, d0
   109b4:	b.le	109d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2b8>
   109b8:	mov	x1, x28
   109bc:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   109c0:	add	x0, x0, #0x799
   109c4:	bl	18af0 <OnPrint@@Base+0x288>
   109c8:	mov	x1, #0x14                  	// #20
   109cc:	mov	x0, #0x5a                  	// #90
   109d0:	bl	6d80 <__sanitizer_print_memory_profile@plt>
   109d4:	fmov	d8, x28
   109d8:	mov	w20, w19
   109dc:	b	10888 <__sanitizer_install_malloc_and_free_hooks@@Base+0x168>
   109e0:	cmp	w20, #0x0
   109e4:	ccmp	x21, x28, #0x0, ne  // ne = any
   109e8:	b.cc	10a00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2e0>  // b.lo, b.ul, b.last
   109ec:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   109f0:	ldr	x1, [x0, #2632]
   109f4:	cbz	x1, 10994 <__sanitizer_install_malloc_and_free_hooks@@Base+0x274>
   109f8:	mov	w0, #0x0                   	// #0
   109fc:	b	10990 <__sanitizer_install_malloc_and_free_hooks@@Base+0x270>
   10a00:	mov	w19, w20
   10a04:	b	10994 <__sanitizer_install_malloc_and_free_hooks@@Base+0x274>
   10a08:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10a0c:	ldr	x0, [x0, #4040]
   10a10:	ldp	x1, x2, [x0, #136]
   10a14:	orr	x1, x1, x2
   10a18:	cbnz	x1, 10a24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x304>
   10a1c:	ldrb	w0, [x0, #152]
   10a20:	cbz	w0, 10a40 <__sanitizer_install_malloc_and_free_hooks@@Base+0x320>
   10a24:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10a28:	ldr	x0, [x0, #3880]
   10a2c:	cbz	x0, 10a40 <__sanitizer_install_malloc_and_free_hooks@@Base+0x320>
   10a30:	mov	x1, #0x0                   	// #0
   10a34:	adrp	x0, 10000 <__sancov_default_options@@Base+0x1b7c>
   10a38:	add	x0, x0, #0x82c
   10a3c:	b	15ae8 <__sanitizer_set_report_fd@@Base+0x3034>
   10a40:	ret
   10a44:	adrp	x1, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   10a48:	str	x0, [x1, #2640]
   10a4c:	ret

0000000000010a50 <__sanitizer_sandbox_on_notify@@Base>:
   10a50:	str	x30, [sp, #-16]!
   10a54:	bl	17a60 <__sanitizer_set_report_fd@@Base+0x4fac>
   10a58:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   10a5c:	ldr	x0, [x0, #2640]
   10a60:	cbz	x0, 10a70 <__sanitizer_sandbox_on_notify@@Base+0x20>
   10a64:	ldr	x30, [sp], #16
   10a68:	mov	x16, x0
   10a6c:	br	x16
   10a70:	ldr	x30, [sp], #16
   10a74:	ret
   10a78:	stp	x19, x20, [sp, #-64]!
   10a7c:	mov	x1, #0x10000               	// #65536
   10a80:	mov	x20, x0
   10a84:	add	x19, sp, #0x20
   10a88:	str	x30, [sp, #16]
   10a8c:	mov	x0, x19
   10a90:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   10a94:	mov	x0, x19
   10a98:	mov	x2, x20
   10a9c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10aa0:	add	x1, x1, #0x67b
   10aa4:	bl	18bf8 <OnPrint@@Base+0x390>
   10aa8:	ldr	x19, [sp, #32]
   10aac:	mov	x0, x19
   10ab0:	mov	w1, #0xa                   	// #10
   10ab4:	bl	1444c <__sanitizer_set_report_fd@@Base+0x1998>
   10ab8:	mov	x20, x0
   10abc:	cbz	x0, 10ad4 <__sanitizer_sandbox_on_notify@@Base+0x84>
   10ac0:	strb	wzr, [x0]
   10ac4:	mov	x0, x19
   10ac8:	add	x19, x20, #0x1
   10acc:	bl	1661c <__sanitizer_set_report_fd@@Base+0x3b68>
   10ad0:	b	10aac <__sanitizer_sandbox_on_notify@@Base+0x5c>
   10ad4:	ldrb	w0, [x19]
   10ad8:	cbz	w0, 10ae4 <__sanitizer_sandbox_on_notify@@Base+0x94>
   10adc:	mov	x0, x19
   10ae0:	bl	1661c <__sanitizer_set_report_fd@@Base+0x3b68>
   10ae4:	ldp	x0, x1, [sp, #32]
   10ae8:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   10aec:	ldr	x30, [sp, #16]
   10af0:	ldp	x19, x20, [sp], #64
   10af4:	ret
   10af8:	stp	x19, x20, [sp, #-64]!
   10afc:	mov	x19, x0
   10b00:	mov	x0, x1
   10b04:	stp	x21, x22, [sp, #16]
   10b08:	mov	x22, x2
   10b0c:	mov	x21, x3
   10b10:	stp	x23, x30, [sp, #32]
   10b14:	bl	10088 <__sancov_default_options@@Base+0x1c04>
   10b18:	cbnz	x0, 10b3c <__sanitizer_sandbox_on_notify@@Base+0xec>
   10b1c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10b20:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10b24:	add	x2, x2, #0x7c0
   10b28:	add	x0, x0, #0x7d0
   10b2c:	mov	x4, #0x0                   	// #0
   10b30:	mov	x3, #0x0                   	// #0
   10b34:	mov	w1, #0x28                  	// #40
   10b38:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   10b3c:	mov	x20, x0
   10b40:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10b44:	ldr	x0, [x0, #4040]
   10b48:	ldr	x23, [x0, #168]
   10b4c:	bl	154b0 <__sanitizer_set_report_fd@@Base+0x29fc>
   10b50:	mov	x4, x20
   10b54:	mov	x5, x0
   10b58:	mov	x3, x23
   10b5c:	adrp	x6, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10b60:	add	x6, x6, #0x81c
   10b64:	mov	x1, #0x1000                	// #4096
   10b68:	mov	x0, x19
   10b6c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10b70:	add	x2, x2, #0x823
   10b74:	bl	1886c <OnPrint@@Base+0x4>
   10b78:	add	x2, sp, #0x3c
   10b7c:	mov	x0, x19
   10b80:	mov	w1, #0x1                   	// #1
   10b84:	bl	16e6c <__sanitizer_set_report_fd@@Base+0x43b8>
   10b88:	mov	w20, w0
   10b8c:	cmn	w0, #0x1
   10b90:	b.ne	10ba8 <__sanitizer_sandbox_on_notify@@Base+0x158>  // b.any
   10b94:	ldr	w2, [sp, #60]
   10b98:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10b9c:	mov	x1, x19
   10ba0:	add	x0, x0, #0x830
   10ba4:	bl	18b74 <OnPrint@@Base+0x30c>
   10ba8:	mov	w0, w20
   10bac:	mov	x4, #0x0                   	// #0
   10bb0:	mov	x3, #0x0                   	// #0
   10bb4:	mov	x2, #0x8                   	// #8
   10bb8:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10bbc:	add	x1, x1, #0x8f8
   10bc0:	bl	16f08 <__sanitizer_set_report_fd@@Base+0x4454>
   10bc4:	lsl	x2, x21, #3
   10bc8:	mov	x1, x22
   10bcc:	mov	x4, #0x0                   	// #0
   10bd0:	mov	x3, #0x0                   	// #0
   10bd4:	mov	w0, w20
   10bd8:	bl	16f08 <__sanitizer_set_report_fd@@Base+0x4454>
   10bdc:	mov	w0, w20
   10be0:	bl	16ebc <__sanitizer_set_report_fd@@Base+0x4408>
   10be4:	mov	x2, x21
   10be8:	mov	x1, x19
   10bec:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10bf0:	add	x0, x0, #0x86f
   10bf4:	bl	18af0 <OnPrint@@Base+0x288>
   10bf8:	ldp	x21, x22, [sp, #16]
   10bfc:	ldp	x23, x30, [sp, #32]
   10c00:	ldp	x19, x20, [sp], #64
   10c04:	ret
   10c08:	adrp	x1, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   10c0c:	ldrb	w2, [x1, #2648]
   10c10:	cbnz	w2, 10c3c <__sanitizer_sandbox_on_notify@@Base+0x1ec>
   10c14:	stp	x19, x30, [sp, #-16]!
   10c18:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10c1c:	and	w0, w0, #0xff
   10c20:	ldr	x19, [x19, #3784]
   10c24:	strb	w0, [x1, #2648]
   10c28:	mov	x0, x19
   10c2c:	bl	177a8 <__sanitizer_set_report_fd@@Base+0x4cf4>
   10c30:	mov	x0, x19
   10c34:	ldp	x19, x30, [sp], #16
   10c38:	b	1eee8 <__sanitizer_symbolize_global@@Base+0x47a4>
   10c3c:	ret

0000000000010c40 <__sanitizer_cov_trace_cmp@@Base>:
   10c40:	ret

0000000000010c44 <__sanitizer_cov_trace_cmp1@@Base>:
   10c44:	ret

0000000000010c48 <__sanitizer_cov_trace_cmp2@@Base>:
   10c48:	ret

0000000000010c4c <__sanitizer_cov_trace_cmp4@@Base>:
   10c4c:	ret

0000000000010c50 <__sanitizer_cov_trace_cmp8@@Base>:
   10c50:	ret

0000000000010c54 <__sanitizer_cov_trace_const_cmp1@@Base>:
   10c54:	ret

0000000000010c58 <__sanitizer_cov_trace_const_cmp2@@Base>:
   10c58:	ret

0000000000010c5c <__sanitizer_cov_trace_const_cmp4@@Base>:
   10c5c:	ret

0000000000010c60 <__sanitizer_cov_trace_const_cmp8@@Base>:
   10c60:	ret

0000000000010c64 <__sanitizer_cov_trace_switch@@Base>:
   10c64:	ret

0000000000010c68 <__sanitizer_cov_trace_div4@@Base>:
   10c68:	ret

0000000000010c6c <__sanitizer_cov_trace_div8@@Base>:
   10c6c:	ret

0000000000010c70 <__sanitizer_cov_trace_gep@@Base>:
   10c70:	ret

0000000000010c74 <__sanitizer_cov_trace_pc_indir@@Base>:
   10c74:	ret

0000000000010c78 <__sanitizer_cov_8bit_counters_init@@Base>:
   10c78:	ret

0000000000010c7c <__sanitizer_cov_pcs_init@@Base>:
   10c7c:	ret

0000000000010c80 <__sanitizer_dump_coverage@@Base>:
   10c80:	cbz	x1, 10e18 <__sanitizer_dump_coverage@@Base+0x198>
   10c84:	stp	x19, x20, [sp, #-128]!
   10c88:	mov	x2, #0x0                   	// #0
   10c8c:	stp	x21, x22, [sp, #16]
   10c90:	mov	x21, x1
   10c94:	mov	x1, #0x0                   	// #0
   10c98:	stp	x23, x24, [sp, #32]
   10c9c:	mov	x24, x0
   10ca0:	mov	x0, #0x1000                	// #4096
   10ca4:	stp	x25, x26, [sp, #48]
   10ca8:	lsl	x20, x21, #3
   10cac:	stp	x27, x28, [sp, #64]
   10cb0:	adrp	x27, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10cb4:	mov	w28, #0x0                   	// #0
   10cb8:	str	x30, [sp, #80]
   10cbc:	bl	e8ec <__sancov_default_options@@Base+0x468>
   10cc0:	mov	x2, #0x0                   	// #0
   10cc4:	mov	x1, #0x0                   	// #0
   10cc8:	mov	x23, x0
   10ccc:	mov	x0, #0x1000                	// #4096
   10cd0:	bl	e8ec <__sancov_default_options@@Base+0x468>
   10cd4:	mov	x22, x0
   10cd8:	mov	x2, #0x0                   	// #0
   10cdc:	mov	x0, x20
   10ce0:	mov	x1, #0x0                   	// #0
   10ce4:	bl	e8ec <__sancov_default_options@@Base+0x468>
   10ce8:	mov	x2, x20
   10cec:	mov	x1, x24
   10cf0:	mov	x19, x0
   10cf4:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   10cf8:	mov	x0, x19
   10cfc:	mov	x1, x21
   10d00:	mov	w2, #0x0                   	// #0
   10d04:	bl	b918 <__sanitizer_get_allocated_size@@Base+0x1418>
   10d08:	add	x0, x27, #0x897
   10d0c:	mov	x24, #0x0                   	// #0
   10d10:	mov	x20, #0x0                   	// #0
   10d14:	str	xzr, [sp, #104]
   10d18:	str	x0, [sp, #120]
   10d1c:	ldr	x27, [x19, x20, lsl #3]
   10d20:	add	x26, x19, x20, lsl #3
   10d24:	cbz	x27, 10d4c <__sanitizer_dump_coverage@@Base+0xcc>
   10d28:	mov	x3, x26
   10d2c:	mov	x0, x27
   10d30:	mov	x2, #0x0                   	// #0
   10d34:	mov	x1, #0x0                   	// #0
   10d38:	bl	67b0 <__sanitizer_get_module_and_offset_for_pc@plt>
   10d3c:	cbnz	w0, 10dac <__sanitizer_dump_coverage@@Base+0x12c>
   10d40:	ldr	x0, [sp, #120]
   10d44:	mov	x1, x27
   10d48:	bl	18af0 <OnPrint@@Base+0x288>
   10d4c:	add	x20, x20, #0x1
   10d50:	cmp	x21, x20
   10d54:	b.ne	10d1c <__sanitizer_dump_coverage@@Base+0x9c>  // b.any
   10d58:	cbz	w28, 10d70 <__sanitizer_dump_coverage@@Base+0xf0>
   10d5c:	sub	x3, x21, x24
   10d60:	add	x2, x19, x24, lsl #3
   10d64:	mov	x1, x22
   10d68:	mov	x0, x23
   10d6c:	bl	10af8 <__sanitizer_sandbox_on_notify@@Base+0xa8>
   10d70:	mov	x0, x23
   10d74:	mov	x1, #0x0                   	// #0
   10d78:	bl	eafc <__sancov_default_options@@Base+0x678>
   10d7c:	mov	x0, x22
   10d80:	mov	x1, #0x0                   	// #0
   10d84:	bl	eafc <__sancov_default_options@@Base+0x678>
   10d88:	mov	x0, x19
   10d8c:	mov	x1, #0x0                   	// #0
   10d90:	ldp	x21, x22, [sp, #16]
   10d94:	ldp	x23, x24, [sp, #32]
   10d98:	ldp	x25, x26, [sp, #48]
   10d9c:	ldp	x27, x28, [sp, #64]
   10da0:	ldr	x30, [sp, #80]
   10da4:	ldp	x19, x20, [sp], #128
   10da8:	b	eafc <__sancov_default_options@@Base+0x678>
   10dac:	ldr	x0, [x19, x20, lsl #3]
   10db0:	sub	x0, x27, x0
   10db4:	str	x0, [sp, #112]
   10db8:	ldp	x0, x1, [sp, #104]
   10dbc:	cmp	x0, x1
   10dc0:	eor	w0, w28, #0x1
   10dc4:	cset	w25, ne  // ne = any
   10dc8:	orr	w25, w25, w0
   10dcc:	cbz	w25, 10e10 <__sanitizer_dump_coverage@@Base+0x190>
   10dd0:	cbz	w28, 10de8 <__sanitizer_dump_coverage@@Base+0x168>
   10dd4:	sub	x3, x20, x24
   10dd8:	add	x2, x19, x24, lsl #3
   10ddc:	mov	x1, x22
   10de0:	mov	x0, x23
   10de4:	bl	10af8 <__sanitizer_sandbox_on_notify@@Base+0xa8>
   10de8:	mov	x3, x26
   10dec:	mov	x1, x22
   10df0:	mov	x0, x27
   10df4:	mov	x2, #0x1000                	// #4096
   10df8:	bl	67b0 <__sanitizer_get_module_and_offset_for_pc@plt>
   10dfc:	mov	x24, x20
   10e00:	ldr	x0, [sp, #112]
   10e04:	mov	w28, w25
   10e08:	str	x0, [sp, #104]
   10e0c:	b	10d4c <__sanitizer_dump_coverage@@Base+0xcc>
   10e10:	mov	w28, #0x1                   	// #1
   10e14:	b	10d4c <__sanitizer_dump_coverage@@Base+0xcc>
   10e18:	ret

0000000000010e1c <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   10e1c:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   10e20:	add	x0, x0, #0xa58
   10e24:	add	x2, x0, #0x8
   10e28:	ldrb	w0, [x0, #8]
   10e2c:	cbz	w0, 10e4c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x30>
   10e30:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   10e34:	ldr	x0, [x0, #4040]
   10e38:	ldrb	w0, [x0, #161]
   10e3c:	cbz	w0, 10e4c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x30>
   10e40:	ldr	x0, [x2, #8]
   10e44:	ldr	x1, [x2, #24]
   10e48:	b	69d0 <__sanitizer_dump_coverage@plt>
   10e4c:	ret

0000000000010e50 <__sanitizer_cov_dump@@Base>:
   10e50:	b	6b70 <__sanitizer_dump_trace_pc_guard_coverage@plt>

0000000000010e54 <__sanitizer_cov_trace_pc_guard@@Base>:
   10e54:	ldr	w1, [x0]
   10e58:	cbz	w1, 10e90 <__sanitizer_cov_trace_pc_guard@@Base+0x3c>
   10e5c:	stp	x19, x30, [sp, #-16]!
   10e60:	sub	w1, w1, #0x1
   10e64:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   10e68:	add	x0, x0, #0xa58
   10e6c:	mov	x19, x30
   10e70:	add	x0, x0, #0x10
   10e74:	bl	11004 <__sanitizer_cov_trace_pc_guard_init@@Base+0x140>
   10e78:	ldr	x1, [x0]
   10e7c:	cbnz	x1, 10e88 <__sanitizer_cov_trace_pc_guard@@Base+0x34>
   10e80:	sub	x19, x19, #0x1
   10e84:	str	x19, [x0]
   10e88:	ldp	x19, x30, [sp], #16
   10e8c:	ret
   10e90:	ret

0000000000010e94 <__sanitizer_cov_reset@@Base>:
   10e94:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   10e98:	add	x0, x0, #0xa58
   10e9c:	stp	x19, x30, [sp, #-16]!
   10ea0:	add	x19, x0, #0x8
   10ea4:	mov	x1, #0x0                   	// #0
   10ea8:	add	x0, x0, #0x10
   10eac:	bl	11004 <__sanitizer_cov_trace_pc_guard_init@@Base+0x140>
   10eb0:	ldr	x2, [x19, #24]
   10eb4:	mov	w1, #0x0                   	// #0
   10eb8:	ldp	x19, x30, [sp], #16
   10ebc:	lsl	x2, x2, #3
   10ec0:	b	14380 <__sanitizer_set_report_fd@@Base+0x18cc>

0000000000010ec4 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   10ec4:	cmp	x0, x1
   10ec8:	b.eq	11000 <__sanitizer_cov_trace_pc_guard_init@@Base+0x13c>  // b.none
   10ecc:	stp	x19, x20, [sp, #-48]!
   10ed0:	mov	x19, x0
   10ed4:	ldr	w0, [x0]
   10ed8:	stp	x21, x22, [sp, #16]
   10edc:	str	x30, [sp, #32]
   10ee0:	cbnz	w0, 10ff0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x12c>
   10ee4:	adrp	x20, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   10ee8:	add	x0, x20, #0xa58
   10eec:	mov	x21, x1
   10ef0:	add	x22, x0, #0x8
   10ef4:	ldrb	w1, [x0, #8]
   10ef8:	cbnz	w1, 10f38 <__sanitizer_cov_trace_pc_guard_init@@Base+0x74>
   10efc:	mov	w1, #0x1                   	// #1
   10f00:	strb	w1, [x0, #8]
   10f04:	bl	e49c <__sancov_default_options@@Base+0x18>
   10f08:	ldr	w0, [x19]
   10f0c:	stp	xzr, xzr, [x22, #8]
   10f10:	str	xzr, [x22, #24]
   10f14:	cbz	w0, 10f38 <__sanitizer_cov_trace_pc_guard_init@@Base+0x74>
   10f18:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10f1c:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10f20:	add	x2, x2, #0x8cf
   10f24:	add	x0, x0, #0x7d0
   10f28:	mov	x4, #0x0                   	// #0
   10f2c:	mov	x3, #0x0                   	// #0
   10f30:	mov	w1, #0x77                  	// #119
   10f34:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   10f38:	mov	x0, x19
   10f3c:	cmp	x19, x21
   10f40:	b.ne	10f64 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa0>  // b.any
   10f44:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10f48:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   10f4c:	mov	x4, x19
   10f50:	mov	x3, x19
   10f54:	add	x2, x2, #0x8e2
   10f58:	add	x0, x0, #0x7d0
   10f5c:	mov	w1, #0x78                  	// #120
   10f60:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   10f64:	add	x1, x20, #0xa58
   10f68:	ldr	x1, [x1, #32]
   10f6c:	mov	w2, w1
   10f70:	cmp	x21, x19
   10f74:	b.ls	10f84 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc0>  // b.plast
   10f78:	add	w2, w2, #0x1
   10f7c:	str	w2, [x19], #4
   10f80:	b	10f70 <__sanitizer_cov_trace_pc_guard_init@@Base+0xac>
   10f84:	add	x19, x21, #0x3
   10f88:	sub	x19, x19, x0
   10f8c:	sub	x0, x0, #0x3
   10f90:	cmp	x21, x0
   10f94:	lsr	x19, x19, #2
   10f98:	csel	w19, w19, wzr, cs  // cs = hs, nlast
   10f9c:	add	w19, w19, w1
   10fa0:	cmp	x1, x19
   10fa4:	b.cs	10fe8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x124>  // b.hs, b.nlast
   10fa8:	add	x0, x20, #0xa58
   10fac:	add	x0, x0, #0x8
   10fb0:	ldr	x1, [x0, #16]
   10fb4:	cmp	x19, x1, lsr #3
   10fb8:	b.ls	10fc8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x104>  // b.plast
   10fbc:	mov	x1, x19
   10fc0:	add	x0, x0, #0x8
   10fc4:	bl	9460 <__lsan_do_recoverable_leak_check@@Base+0xb04>
   10fc8:	add	x1, x20, #0xa58
   10fcc:	ldr	x0, [x1, #32]
   10fd0:	ldr	x3, [x1, #16]
   10fd4:	sub	x2, x19, x0
   10fd8:	mov	w1, #0x0                   	// #0
   10fdc:	lsl	x2, x2, #3
   10fe0:	add	x0, x3, x0, lsl #3
   10fe4:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   10fe8:	add	x20, x20, #0xa58
   10fec:	str	x19, [x20, #32]
   10ff0:	ldp	x21, x22, [sp, #16]
   10ff4:	ldr	x30, [sp, #32]
   10ff8:	ldp	x19, x20, [sp], #48
   10ffc:	ret
   11000:	ret
   11004:	ldr	x4, [x0, #16]
   11008:	mov	x3, x1
   1100c:	cmp	x1, x4
   11010:	b.cc	11030 <__sanitizer_cov_trace_pc_guard_init@@Base+0x16c>  // b.lo, b.ul, b.last
   11014:	str	x30, [sp, #-16]!
   11018:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1101c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   11020:	add	x2, x2, #0x317
   11024:	add	x0, x0, #0x5c5
   11028:	mov	w1, #0x1b6                 	// #438
   1102c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   11030:	ldr	x0, [x0]
   11034:	add	x0, x0, x1, lsl #3
   11038:	ret
   1103c:	mov	x0, #0x0                   	// #0
   11040:	ret
   11044:	ret
   11048:	stp	x19, x30, [sp, #-16]!
   1104c:	mov	x0, x1
   11050:	mov	x19, x2
   11054:	ldr	x1, [x1]
   11058:	ldr	x1, [x1]
   1105c:	str	xzr, [x2]
   11060:	blr	x1
   11064:	str	w0, [x19, #8]
   11068:	ldp	x19, x30, [sp], #16
   1106c:	ret
   11070:	ldr	x0, [x1, #16]
   11074:	ldrb	w1, [x0, #2224]
   11078:	cbz	w1, 11088 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c4>
   1107c:	add	x0, x0, #0x628
   11080:	strb	wzr, [x0, #648]
   11084:	ret
   11088:	mov	x0, #0x0                   	// #0
   1108c:	b	11084 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1c0>
   11090:	mov	x0, x1
   11094:	mov	x1, #0x0                   	// #0
   11098:	b	eafc <__sancov_default_options@@Base+0x678>
   1109c:	mov	x1, x0
   110a0:	mov	x2, #0x1fff                	// #8191
   110a4:	lsr	x0, x0, #12
   110a8:	cmp	x1, x2
   110ac:	b.ls	110d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x210>  // b.plast
   110b0:	str	x30, [sp, #-16]!
   110b4:	mov	x3, x0
   110b8:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   110bc:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   110c0:	add	x2, x2, #0x900
   110c4:	add	x0, x0, #0x91b
   110c8:	mov	x4, #0x1                   	// #1
   110cc:	mov	w1, #0x147                 	// #327
   110d0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   110d4:	ret
   110d8:	str	x30, [sp, #-16]!
   110dc:	cmp	x1, #0xfff
   110e0:	b.hi	11104 <__sanitizer_cov_trace_pc_guard_init@@Base+0x240>  // b.pmore
   110e4:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   110e8:	add	x2, x2, #0x95b
   110ec:	mov	x3, x1
   110f0:	mov	x4, #0x1000                	// #4096
   110f4:	mov	w1, #0x172                 	// #370
   110f8:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   110fc:	add	x0, x0, #0x972
   11100:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   11104:	ldr	x3, [x0]
   11108:	and	x4, x1, #0xfffffffffffff000
   1110c:	cmp	x3, x4
   11110:	b.eq	11124 <__sanitizer_cov_trace_pc_guard_init@@Base+0x260>  // b.none
   11114:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11118:	mov	w1, #0x173                 	// #371
   1111c:	add	x2, x2, #0x9ba
   11120:	b	110f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x234>
   11124:	ldr	x30, [sp], #16
   11128:	ret
   1112c:	cmp	x0, #0xfff
   11130:	b.ls	11158 <__sanitizer_cov_trace_pc_guard_init@@Base+0x294>  // b.plast
   11134:	str	x30, [sp, #-16]!
   11138:	mov	x3, x0
   1113c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11140:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11144:	add	x2, x2, #0x9e6
   11148:	add	x0, x0, #0x972
   1114c:	mov	x4, #0x1000                	// #4096
   11150:	mov	w1, #0x16f                 	// #367
   11154:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   11158:	ret
   1115c:	str	x30, [sp, #-16]!
   11160:	mov	x3, x0
   11164:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11168:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1116c:	add	x2, x2, #0x9fb
   11170:	add	x0, x0, #0x91b
   11174:	mov	x4, #0x1000                	// #4096
   11178:	mov	w1, #0x143                 	// #323
   1117c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   11180:	mov	x3, x0
   11184:	cmp	x0, #0x3f
   11188:	b.ls	111ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x2e8>  // b.plast
   1118c:	str	x30, [sp, #-16]!
   11190:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11194:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11198:	add	x2, x2, #0x9e6
   1119c:	add	x0, x0, #0x91b
   111a0:	mov	x4, #0x40                  	// #64
   111a4:	mov	w1, #0x63                  	// #99
   111a8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   111ac:	mov	x0, #0x1                   	// #1
   111b0:	lsl	x0, x0, x3
   111b4:	ret
   111b8:	stp	x19, x20, [sp, #-32]!
   111bc:	mov	x19, x0
   111c0:	mov	x0, x1
   111c4:	ldr	x20, [x19]
   111c8:	str	x30, [sp, #16]
   111cc:	bl	11180 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2bc>
   111d0:	bic	x1, x20, x0
   111d4:	ldr	x30, [sp, #16]
   111d8:	str	x1, [x19]
   111dc:	cmp	x20, x1
   111e0:	cset	w0, ne  // ne = any
   111e4:	ldp	x19, x20, [sp], #32
   111e8:	ret
   111ec:	stp	x19, x20, [sp, #-32]!
   111f0:	mov	x2, #0x0                   	// #0
   111f4:	mov	x0, #0x8b8                 	// #2232
   111f8:	stp	x21, x30, [sp, #16]
   111fc:	mov	x21, x1
   11200:	mov	x1, #0x0                   	// #0
   11204:	bl	e8ec <__sancov_default_options@@Base+0x468>
   11208:	mov	x19, x0
   1120c:	mov	x20, x0
   11210:	str	x21, [x19], #8
   11214:	mov	x0, x19
   11218:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   1121c:	ldp	x21, x30, [sp, #16]
   11220:	str	xzr, [x19, #520]
   11224:	str	xzr, [x19, #1040]
   11228:	mov	x0, x20
   1122c:	str	xzr, [x19, #1560]
   11230:	strb	wzr, [x20, #2224]
   11234:	ldp	x19, x20, [sp], #32
   11238:	ret
   1123c:	stp	x19, x20, [sp, #-32]!
   11240:	mov	x19, x0
   11244:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   11248:	add	x0, x0, #0xc10
   1124c:	stp	x21, x30, [sp, #16]
   11250:	add	x21, x19, #0x208, lsl #12
   11254:	str	x0, [x19]
   11258:	add	x0, x19, #0x410, lsl #12
   1125c:	strb	wzr, [x19, #8]
   11260:	add	x20, x19, #0x630
   11264:	add	x21, x21, #0x630
   11268:	ldrb	w1, [x1]
   1126c:	strb	w1, [x0, #2632]
   11270:	add	x0, x19, #0x18
   11274:	str	xzr, [x19, #16]
   11278:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   1127c:	add	x0, x19, #0x220
   11280:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   11284:	mov	x0, x20
   11288:	add	x20, x20, #0x208
   1128c:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   11290:	cmp	x20, x21
   11294:	b.ne	11284 <__sanitizer_cov_trace_pc_guard_init@@Base+0x3c0>  // b.any
   11298:	add	x19, x19, #0x10
   1129c:	add	x19, x19, #0x410, lsl #12
   112a0:	ldp	x21, x30, [sp, #16]
   112a4:	str	xzr, [x19, #2608]
   112a8:	ldp	x19, x20, [sp], #32
   112ac:	ret
   112b0:	stp	x19, x20, [sp, #-32]!
   112b4:	mov	w2, #0x0                   	// #0
   112b8:	mov	x20, x0
   112bc:	mov	x0, #0xa50                 	// #2640
   112c0:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   112c4:	movk	x0, #0x41, lsl #16
   112c8:	add	x1, x1, #0xa11
   112cc:	str	x30, [sp, #16]
   112d0:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   112d4:	mov	x1, x20
   112d8:	mov	x19, x0
   112dc:	bl	1123c <__sanitizer_cov_trace_pc_guard_init@@Base+0x378>
   112e0:	mov	x0, x19
   112e4:	ldr	x30, [sp, #16]
   112e8:	ldp	x19, x20, [sp], #32
   112ec:	ret
   112f0:	ldr	x0, [x1, #16]
   112f4:	ldr	x1, [x2]
   112f8:	ldr	x3, [x0, #528]
   112fc:	and	x2, x1, #0xfffffffffffff000
   11300:	cmp	x3, x2
   11304:	b.ne	11314 <__sanitizer_cov_trace_pc_guard_init@@Base+0x450>  // b.any
   11308:	and	x1, x1, #0xfff
   1130c:	add	x0, x0, #0x8
   11310:	b	11a2c <__sanitizer_cov_trace_pc_guard_init@@Base+0xb68>
   11314:	ret
   11318:	stp	x19, x20, [sp, #-32]!
   1131c:	mov	x19, x0
   11320:	ldr	x0, [x2]
   11324:	str	x30, [sp, #16]
   11328:	cbz	x0, 11364 <__sanitizer_cov_trace_pc_guard_init@@Base+0x4a0>
   1132c:	mov	x20, x2
   11330:	add	x0, x19, #0x8
   11334:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
   11338:	ldr	x1, [x20]
   1133c:	cbz	x1, 11358 <__sanitizer_cov_trace_pc_guard_init@@Base+0x494>
   11340:	ldr	x2, [x19, #16]
   11344:	and	x0, x1, #0xfffffffffffff000
   11348:	cmp	x0, x2
   1134c:	b.ne	11358 <__sanitizer_cov_trace_pc_guard_init@@Base+0x494>  // b.any
   11350:	add	x0, x19, #0x10
   11354:	bl	11ccc <__sanitizer_cov_trace_pc_guard_init@@Base+0xe08>
   11358:	str	xzr, [x20]
   1135c:	dmb	ish
   11360:	strb	wzr, [x19, #8]
   11364:	ldr	x30, [sp, #16]
   11368:	ldp	x19, x20, [sp], #32
   1136c:	ret
   11370:	stp	x19, x20, [sp, #-32]!
   11374:	mov	x19, x0
   11378:	mov	x20, x2
   1137c:	ldr	x0, [x2]
   11380:	stp	x21, x30, [sp, #16]
   11384:	mov	x21, x1
   11388:	cbz	x0, 1139c <__sanitizer_cov_trace_pc_guard_init@@Base+0x4d8>
   1138c:	ldr	x1, [x19, #16]
   11390:	and	x0, x0, #0xfffffffffffff000
   11394:	cmp	x0, x1
   11398:	b.eq	113ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x4e8>  // b.none
   1139c:	mov	x1, x20
   113a0:	add	x0, x19, #0x10
   113a4:	bl	1224c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1388>
   113a8:	str	x0, [x20]
   113ac:	add	x0, x21, #0x8
   113b0:	ldr	x1, [x19, #16]
   113b4:	ldp	x21, x30, [sp, #16]
   113b8:	ldp	x19, x20, [sp], #32
   113bc:	b	11984 <__sanitizer_cov_trace_pc_guard_init@@Base+0xac0>
   113c0:	stp	x19, x20, [sp, #-96]!
   113c4:	mov	x19, x0
   113c8:	add	x0, x0, #0x410, lsl #12
   113cc:	stp	x21, x22, [sp, #16]
   113d0:	mov	x20, x1
   113d4:	ldrb	w0, [x0, #2632]
   113d8:	stp	x23, x24, [sp, #32]
   113dc:	mov	x23, x2
   113e0:	stp	x25, x26, [sp, #48]
   113e4:	stp	x27, x28, [sp, #64]
   113e8:	and	w28, w3, #0xff
   113ec:	and	w27, w4, #0xff
   113f0:	ldr	x26, [x1, #16]
   113f4:	str	x30, [sp, #80]
   113f8:	cbz	w0, 11464 <__sanitizer_cov_trace_pc_guard_init@@Base+0x5a0>
   113fc:	ldr	x0, [x1]
   11400:	ldr	x1, [x0]
   11404:	mov	x0, x20
   11408:	blr	x1
   1140c:	mov	w22, w0
   11410:	add	x21, x26, #0x8
   11414:	mov	x0, x21
   11418:	bl	11864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9a0>
   1141c:	tst	w0, #0xff
   11420:	ldr	x24, [x23]
   11424:	b.eq	1146c <__sanitizer_cov_trace_pc_guard_init@@Base+0x5a8>  // b.none
   11428:	ldr	x2, [x26, #528]
   1142c:	cbz	x2, 1146c <__sanitizer_cov_trace_pc_guard_init@@Base+0x5a8>
   11430:	and	x0, x24, #0xfffffffffffff000
   11434:	cmp	x2, x0
   11438:	b.ne	1146c <__sanitizer_cov_trace_pc_guard_init@@Base+0x5a8>  // b.any
   1143c:	mov	w3, w22
   11440:	and	x1, x24, #0xfff
   11444:	mov	x0, x21
   11448:	ldp	x21, x22, [sp, #16]
   1144c:	ldp	x23, x24, [sp, #32]
   11450:	ldp	x25, x26, [sp, #48]
   11454:	ldp	x27, x28, [sp, #64]
   11458:	ldr	x30, [sp, #80]
   1145c:	ldp	x19, x20, [sp], #96
   11460:	b	11c08 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd44>
   11464:	mov	w22, #0x0                   	// #0
   11468:	b	11410 <__sanitizer_cov_trace_pc_guard_init@@Base+0x54c>
   1146c:	add	x25, x19, #0x10
   11470:	mov	x2, x24
   11474:	mov	x1, x21
   11478:	mov	x0, x25
   1147c:	bl	118f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa2c>
   11480:	tst	w0, #0xff
   11484:	b.eq	11494 <__sanitizer_cov_trace_pc_guard_init@@Base+0x5d0>  // b.none
   11488:	mov	w3, w22
   1148c:	and	x2, x24, #0xfffffffffffff000
   11490:	b	11440 <__sanitizer_cov_trace_pc_guard_init@@Base+0x57c>
   11494:	add	x0, x19, #0x8
   11498:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
   1149c:	mov	x2, x23
   114a0:	mov	x1, x26
   114a4:	mov	x0, x19
   114a8:	bl	11370 <__sanitizer_cov_trace_pc_guard_init@@Base+0x4ac>
   114ac:	cbz	w28, 114e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x624>
   114b0:	ldr	x2, [x23]
   114b4:	mov	x1, x21
   114b8:	mov	x0, x25
   114bc:	bl	119ec <__sanitizer_cov_trace_pc_guard_init@@Base+0xb28>
   114c0:	tst	w0, #0xff
   114c4:	b.eq	114e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x624>  // b.none
   114c8:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   114cc:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   114d0:	add	x2, x2, #0xa23
   114d4:	add	x0, x0, #0xa49
   114d8:	mov	x4, #0x0                   	// #0
   114dc:	mov	x3, #0x0                   	// #0
   114e0:	mov	w1, #0xa5                  	// #165
   114e4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   114e8:	cbnz	w27, 11530 <__sanitizer_cov_trace_pc_guard_init@@Base+0x66c>
   114ec:	ldr	x26, [x23]
   114f0:	cbnz	w22, 11584 <__sanitizer_cov_trace_pc_guard_init@@Base+0x6c0>
   114f4:	ldr	x0, [x20]
   114f8:	ldr	x1, [x0]
   114fc:	mov	x0, x20
   11500:	blr	x1
   11504:	mov	w24, w0
   11508:	ldr	x0, [x20]
   1150c:	ldr	x1, [x0, #8]
   11510:	mov	x0, x20
   11514:	blr	x1
   11518:	mov	w4, w0
   1151c:	mov	w3, w24
   11520:	mov	x2, x26
   11524:	mov	x1, x21
   11528:	mov	x0, x25
   1152c:	bl	120c4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1200>
   11530:	ldr	x1, [x19, #16]
   11534:	mov	x0, x21
   11538:	ldr	x20, [x23]
   1153c:	bl	11984 <__sanitizer_cov_trace_pc_guard_init@@Base+0xac0>
   11540:	mov	x1, x20
   11544:	mov	x0, x25
   11548:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   1154c:	ldr	x2, [x19, #16]
   11550:	mov	w3, w22
   11554:	and	x1, x20, #0xfff
   11558:	mov	x0, x21
   1155c:	bl	11c08 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd44>
   11560:	dmb	ish
   11564:	strb	wzr, [x19, #8]
   11568:	ldp	x21, x22, [sp, #16]
   1156c:	ldp	x23, x24, [sp, #32]
   11570:	ldp	x25, x26, [sp, #48]
   11574:	ldp	x27, x28, [sp, #64]
   11578:	ldr	x30, [sp, #80]
   1157c:	ldp	x19, x20, [sp], #96
   11580:	ret
   11584:	mov	w24, w22
   11588:	b	11508 <__sanitizer_cov_trace_pc_guard_init@@Base+0x644>
   1158c:	stp	x19, x20, [sp, #-288]!
   11590:	mov	x20, x2
   11594:	mov	x4, #0x14                  	// #20
   11598:	ldr	x2, [x2]
   1159c:	stp	x23, x24, [sp, #32]
   115a0:	add	x23, x0, #0x10
   115a4:	ldr	x19, [x1, #16]
   115a8:	stp	x25, x26, [sp, #48]
   115ac:	add	x25, sp, #0x80
   115b0:	mov	x24, x0
   115b4:	mov	x3, x25
   115b8:	mov	x0, x23
   115bc:	add	x1, x19, #0x8
   115c0:	stp	x21, x22, [sp, #16]
   115c4:	stp	x27, x28, [sp, #64]
   115c8:	str	x30, [sp, #80]
   115cc:	bl	12558 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1694>
   115d0:	cbnz	x0, 115fc <__sanitizer_cov_trace_pc_guard_init@@Base+0x738>
   115d4:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   115d8:	add	x0, x0, #0xa93
   115dc:	bl	18af0 <OnPrint@@Base+0x288>
   115e0:	ldp	x21, x22, [sp, #16]
   115e4:	ldp	x23, x24, [sp, #32]
   115e8:	ldp	x25, x26, [sp, #48]
   115ec:	ldp	x27, x28, [sp, #64]
   115f0:	ldr	x30, [sp, #80]
   115f4:	ldp	x19, x20, [sp], #288
   115f8:	ret
   115fc:	ldr	x3, [x20]
   11600:	ldr	x4, [sp, #128]
   11604:	cmp	x3, x4
   11608:	b.eq	11624 <__sanitizer_cov_trace_pc_guard_init@@Base+0x760>  // b.none
   1160c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11610:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11614:	add	x2, x2, #0xab8
   11618:	add	x0, x0, #0xa49
   1161c:	mov	w1, #0x7f                  	// #127
   11620:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   11624:	cmp	x0, #0x14
   11628:	mov	w1, #0x1                   	// #1
   1162c:	mov	x21, #0x14                  	// #20
   11630:	mov	x22, #0x1146                	// #4422
   11634:	csel	x21, x0, x21, ls  // ls = plast
   11638:	add	x5, x23, #0x410, lsl #12
   1163c:	add	x19, x19, #0x630
   11640:	mov	x20, #0x0                   	// #0
   11644:	movk	x22, #0x4, lsl #16
   11648:	stur	w21, [x19, #-8]
   1164c:	strb	w1, [x19, #640]
   11650:	ldr	x27, [x25, x20, lsl #3]
   11654:	add	x20, x20, #0x1
   11658:	str	x5, [sp, #120]
   1165c:	mov	x1, x27
   11660:	udiv	x0, x20, x21
   11664:	msub	x0, x0, x21, x20
   11668:	ldr	x26, [x25, x0, lsl #3]
   1166c:	mov	x0, x23
   11670:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   11674:	and	x3, x27, #0xfff
   11678:	mov	x1, x26
   1167c:	add	x0, x3, x22
   11680:	and	x28, x26, #0xfff
   11684:	ldr	x7, [x23, x0, lsl #3]
   11688:	mov	x0, x23
   1168c:	stp	x7, x3, [sp, #104]
   11690:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   11694:	add	x0, x28, x22
   11698:	mov	x1, x27
   1169c:	ldr	x4, [x23, x0, lsl #3]
   116a0:	mov	x0, x23
   116a4:	str	x4, [sp, #96]
   116a8:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   116ac:	mov	x1, x26
   116b0:	mov	x0, x23
   116b4:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   116b8:	ldp	x3, x5, [sp, #112]
   116bc:	mov	x6, #0xa40                 	// #2624
   116c0:	ldp	x4, x7, [sp, #96]
   116c4:	movk	x6, #0x21, lsl #16
   116c8:	add	x2, x24, x6
   116cc:	mov	x1, #0x0                   	// #0
   116d0:	ldr	x0, [x5, #2608]
   116d4:	cmp	x0, x1
   116d8:	b.eq	11740 <__sanitizer_cov_trace_pc_guard_init@@Base+0x87c>  // b.none
   116dc:	ldrh	w8, [x2]
   116e0:	cmp	x8, x3
   116e4:	b.ne	11734 <__sanitizer_cov_trace_pc_guard_init@@Base+0x870>  // b.any
   116e8:	ldrh	w8, [x2, #2]
   116ec:	cmp	x8, x28
   116f0:	b.ne	11734 <__sanitizer_cov_trace_pc_guard_init@@Base+0x870>  // b.any
   116f4:	add	x1, x24, x1, lsl #4
   116f8:	add	x1, x1, #0x210, lsl #12
   116fc:	ldr	w2, [x1, #2628]
   11700:	ldr	w0, [x1, #2632]
   11704:	ldr	w1, [x1, #2636]
   11708:	sxtw	x1, w1
   1170c:	str	x1, [x19]
   11710:	cmp	x20, x21
   11714:	ldr	x1, [x7, #16]
   11718:	str	x1, [x19, #8]
   1171c:	ldr	x1, [x4, #16]
   11720:	str	x1, [x19, #16]
   11724:	stp	w0, w2, [x19, #24]
   11728:	add	x19, x19, #0x20
   1172c:	b.ne	11650 <__sanitizer_cov_trace_pc_guard_init@@Base+0x78c>  // b.any
   11730:	b	115e0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x71c>
   11734:	add	x1, x1, #0x1
   11738:	add	x2, x2, #0x10
   1173c:	b	116d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x810>
   11740:	mov	w0, #0xffffffff            	// #-1
   11744:	mov	w1, #0x0                   	// #0
   11748:	mov	w2, w0
   1174c:	b	11708 <__sanitizer_cov_trace_pc_guard_init@@Base+0x844>
   11750:	stp	x19, x20, [sp, #-64]!
   11754:	mov	x19, x0
   11758:	mov	x20, x1
   1175c:	stp	x23, x24, [sp, #32]
   11760:	ldr	x24, [x1, #16]
   11764:	stp	x21, x22, [sp, #16]
   11768:	mov	x21, x2
   1176c:	add	x22, x24, #0x8
   11770:	stp	x25, x30, [sp, #48]
   11774:	mov	x0, x22
   11778:	bl	11864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9a0>
   1177c:	tst	w0, #0xff
   11780:	b.ne	117dc <__sanitizer_cov_trace_pc_guard_init@@Base+0x918>  // b.any
   11784:	ldr	x2, [x21]
   11788:	add	x23, x19, #0x10
   1178c:	mov	x1, x22
   11790:	mov	x0, x23
   11794:	bl	118f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa2c>
   11798:	tst	w0, #0xff
   1179c:	b.ne	117dc <__sanitizer_cov_trace_pc_guard_init@@Base+0x918>  // b.any
   117a0:	add	x0, x19, #0x8
   117a4:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
   117a8:	mov	x1, x24
   117ac:	mov	x2, x21
   117b0:	mov	x0, x19
   117b4:	bl	11370 <__sanitizer_cov_trace_pc_guard_init@@Base+0x4ac>
   117b8:	ldr	x24, [x21]
   117bc:	mov	x1, x22
   117c0:	mov	x0, x23
   117c4:	mov	x2, x24
   117c8:	bl	119ec <__sanitizer_cov_trace_pc_guard_init@@Base+0xb28>
   117cc:	tst	w0, #0xff
   117d0:	b.eq	117f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x92c>  // b.none
   117d4:	dmb	ish
   117d8:	strb	wzr, [x19, #8]
   117dc:	ldp	x21, x22, [sp, #16]
   117e0:	ldp	x23, x24, [sp, #32]
   117e4:	ldp	x25, x30, [sp, #48]
   117e8:	ldp	x19, x20, [sp], #64
   117ec:	ret
   117f0:	mov	x2, x24
   117f4:	mov	x1, x22
   117f8:	mov	x0, x23
   117fc:	bl	11f7c <__sanitizer_cov_trace_pc_guard_init@@Base+0x10b8>
   11800:	tst	w0, #0xff
   11804:	b.eq	117d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x910>  // b.none
   11808:	ldr	x0, [x20]
   1180c:	ldr	x25, [x21]
   11810:	ldr	x1, [x0]
   11814:	mov	x0, x20
   11818:	blr	x1
   1181c:	mov	w24, w0
   11820:	ldr	x0, [x20]
   11824:	ldr	x1, [x0, #8]
   11828:	mov	x0, x20
   1182c:	blr	x1
   11830:	mov	w4, w0
   11834:	mov	w3, w24
   11838:	mov	x2, x25
   1183c:	mov	x1, x22
   11840:	mov	x0, x23
   11844:	bl	120c4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1200>
   11848:	mov	x2, x21
   1184c:	mov	x1, x20
   11850:	mov	x0, x19
   11854:	bl	1158c <__sanitizer_cov_trace_pc_guard_init@@Base+0x6c8>
   11858:	b	117d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x910>
   1185c:	str	xzr, [x0]
   11860:	ret
   11864:	ldr	x0, [x0]
   11868:	cmp	x0, #0x0
   1186c:	cset	w0, eq  // eq = none
   11870:	ret
   11874:	stp	x19, x20, [sp, #-48]!
   11878:	cmp	x1, #0x1, lsl #12
   1187c:	mov	x19, x1
   11880:	stp	x21, x22, [sp, #16]
   11884:	str	x30, [sp, #32]
   11888:	b.ls	11894 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9d0>  // b.plast
   1188c:	mov	x0, x1
   11890:	bl	1115c <__sanitizer_cov_trace_pc_guard_init@@Base+0x298>
   11894:	mov	x21, x0
   11898:	mov	x0, x1
   1189c:	bl	1109c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d8>
   118a0:	mov	x20, x0
   118a4:	ubfx	x22, x19, #6, #6
   118a8:	mov	x0, x22
   118ac:	bl	11180 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2bc>
   118b0:	ldr	x1, [x21, x20, lsl #3]
   118b4:	tst	x0, x1
   118b8:	b.eq	118e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa24>  // b.none
   118bc:	add	x22, x22, #0x1
   118c0:	and	x0, x19, #0x3f
   118c4:	add	x20, x22, x20, lsl #6
   118c8:	bl	11180 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2bc>
   118cc:	ldr	x1, [x21, x20, lsl #3]
   118d0:	tst	x0, x1
   118d4:	cset	w0, ne  // ne = any
   118d8:	ldp	x21, x22, [sp, #16]
   118dc:	ldr	x30, [sp, #32]
   118e0:	ldp	x19, x20, [sp], #48
   118e4:	ret
   118e8:	mov	w0, #0x0                   	// #0
   118ec:	b	118d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa14>
   118f0:	cbz	x2, 11964 <__sanitizer_cov_trace_pc_guard_init@@Base+0xaa0>
   118f4:	ldr	x3, [x0]
   118f8:	ldr	x4, [x1, #520]
   118fc:	cmp	x3, x4
   11900:	b.ne	11964 <__sanitizer_cov_trace_pc_guard_init@@Base+0xaa0>  // b.any
   11904:	and	x4, x2, #0xfffffffffffff000
   11908:	cmp	x4, x3
   1190c:	b.ne	11964 <__sanitizer_cov_trace_pc_guard_init@@Base+0xaa0>  // b.any
   11910:	stp	x19, x20, [sp, #-64]!
   11914:	and	x19, x2, #0xfff
   11918:	add	x20, x1, #0x418
   1191c:	stp	x21, x22, [sp, #16]
   11920:	add	x21, x0, #0x620
   11924:	mov	x22, #0x0                   	// #0
   11928:	stp	x23, x24, [sp, #32]
   1192c:	mov	w24, #0x208                 	// #520
   11930:	ldr	x23, [x1, #1560]
   11934:	str	x30, [sp, #48]
   11938:	cmp	x23, x22
   1193c:	b.eq	1196c <__sanitizer_cov_trace_pc_guard_init@@Base+0xaa8>  // b.none
   11940:	lsl	x0, x22, #3
   11944:	mov	x1, x19
   11948:	ldr	w0, [x20, x0]
   1194c:	umaddl	x0, w0, w24, x21
   11950:	bl	11874 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9b0>
   11954:	ands	w0, w0, #0xff
   11958:	b.eq	11970 <__sanitizer_cov_trace_pc_guard_init@@Base+0xaac>  // b.none
   1195c:	add	x22, x22, #0x1
   11960:	b	11938 <__sanitizer_cov_trace_pc_guard_init@@Base+0xa74>
   11964:	mov	w0, #0x0                   	// #0
   11968:	ret
   1196c:	mov	w0, #0x1                   	// #1
   11970:	ldp	x21, x22, [sp, #16]
   11974:	ldp	x23, x24, [sp, #32]
   11978:	ldr	x30, [sp, #48]
   1197c:	ldp	x19, x20, [sp], #64
   11980:	ret
   11984:	stp	x19, x20, [sp, #-32]!
   11988:	mov	x20, x1
   1198c:	ldr	x1, [x0, #520]
   11990:	str	x30, [sp, #16]
   11994:	cmp	x1, x20
   11998:	b.eq	119b0 <__sanitizer_cov_trace_pc_guard_init@@Base+0xaec>  // b.none
   1199c:	mov	x19, x0
   119a0:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   119a4:	str	x20, [x19, #520]
   119a8:	str	xzr, [x19, #1040]
   119ac:	str	xzr, [x19, #1560]
   119b0:	ldr	x30, [sp, #16]
   119b4:	ldp	x19, x20, [sp], #32
   119b8:	ret
   119bc:	ldr	x3, [x0, #520]
   119c0:	cmp	x3, x1
   119c4:	b.eq	119e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb24>  // b.none
   119c8:	str	x30, [sp, #-16]!
   119cc:	mov	x4, x1
   119d0:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   119d4:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   119d8:	add	x2, x2, #0xad1
   119dc:	add	x0, x0, #0x972
   119e0:	mov	w1, #0x6c                  	// #108
   119e4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   119e8:	ret
   119ec:	stp	x19, x20, [sp, #-32]!
   119f0:	mov	x20, x0
   119f4:	mov	x0, x1
   119f8:	mov	x19, x2
   119fc:	stp	x21, x30, [sp, #16]
   11a00:	ldr	x1, [x20]
   11a04:	bl	119bc <__sanitizer_cov_trace_pc_guard_init@@Base+0xaf8>
   11a08:	mov	x21, x0
   11a0c:	mov	x1, x19
   11a10:	mov	x0, x20
   11a14:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   11a18:	and	x1, x19, #0xfff
   11a1c:	mov	x0, x21
   11a20:	ldp	x21, x30, [sp, #16]
   11a24:	ldp	x19, x20, [sp], #32
   11a28:	b	11874 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9b0>
   11a2c:	stp	x19, x20, [sp, #-64]!
   11a30:	mov	x20, x1
   11a34:	mov	x19, x0
   11a38:	ldr	x1, [x0, #1040]
   11a3c:	stp	x21, x22, [sp, #16]
   11a40:	stp	x23, x24, [sp, #32]
   11a44:	str	x30, [sp, #48]
   11a48:	cbz	x1, 11a9c <__sanitizer_cov_trace_pc_guard_init@@Base+0xbd8>
   11a4c:	sub	x2, x1, #0x1
   11a50:	add	x3, x19, #0x210
   11a54:	mov	x0, x2
   11a58:	tbnz	x0, #63, 11a9c <__sanitizer_cov_trace_pc_guard_init@@Base+0xbd8>
   11a5c:	ldr	x4, [x3, x0, lsl #3]
   11a60:	cmp	x4, x20
   11a64:	b.ne	11a94 <__sanitizer_cov_trace_pc_guard_init@@Base+0xbd0>  // b.any
   11a68:	add	x1, x19, x1, lsl #3
   11a6c:	add	x0, x0, #0x42
   11a70:	str	x2, [x19, #1040]
   11a74:	ldr	x2, [x1, #520]
   11a78:	str	x2, [x19, x0, lsl #3]
   11a7c:	str	x20, [x1, #520]
   11a80:	ldp	x21, x22, [sp, #16]
   11a84:	ldp	x23, x24, [sp, #32]
   11a88:	ldr	x30, [sp, #48]
   11a8c:	ldp	x19, x20, [sp], #64
   11a90:	ret
   11a94:	sub	x0, x0, #0x1
   11a98:	b	11a58 <__sanitizer_cov_trace_pc_guard_init@@Base+0xb94>
   11a9c:	mov	x0, x20
   11aa0:	cmp	x20, #0x1, lsl #12
   11aa4:	b.ls	11aac <__sanitizer_cov_trace_pc_guard_init@@Base+0xbe8>  // b.plast
   11aa8:	bl	1115c <__sanitizer_cov_trace_pc_guard_init@@Base+0x298>
   11aac:	bl	1109c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d8>
   11ab0:	lsl	x24, x0, #3
   11ab4:	ubfx	x22, x20, #6, #6
   11ab8:	mov	x21, x0
   11abc:	add	x23, x19, x0, lsl #3
   11ac0:	mov	x0, x22
   11ac4:	bl	11180 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2bc>
   11ac8:	ldr	x1, [x19, x24]
   11acc:	tst	x0, x1
   11ad0:	b.eq	11a80 <__sanitizer_cov_trace_pc_guard_init@@Base+0xbbc>  // b.none
   11ad4:	add	x0, x22, #0x1
   11ad8:	and	x1, x20, #0x3f
   11adc:	add	x0, x0, x21, lsl #6
   11ae0:	lsl	x24, x0, #3
   11ae4:	add	x0, x19, x0, lsl #3
   11ae8:	bl	111b8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2f4>
   11aec:	and	w21, w0, #0xff
   11af0:	ldr	x0, [x19, x24]
   11af4:	cbnz	x0, 11b04 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc40>
   11af8:	mov	x1, x22
   11afc:	mov	x0, x23
   11b00:	bl	111b8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2f4>
   11b04:	cbz	w21, 11a80 <__sanitizer_cov_trace_pc_guard_init@@Base+0xbbc>
   11b08:	ldr	x1, [x19, #1560]
   11b0c:	cbz	x1, 11a80 <__sanitizer_cov_trace_pc_guard_init@@Base+0xbbc>
   11b10:	sub	x2, x1, #0x1
   11b14:	add	x4, x19, #0x418
   11b18:	mov	x0, x2
   11b1c:	tbnz	x0, #63, 11a80 <__sanitizer_cov_trace_pc_guard_init@@Base+0xbbc>
   11b20:	lsl	x3, x0, #3
   11b24:	ldr	w3, [x4, x3]
   11b28:	cmp	w3, w20
   11b2c:	b.ne	11b64 <__sanitizer_cov_trace_pc_guard_init@@Base+0xca0>  // b.any
   11b30:	add	x1, x1, #0x82
   11b34:	add	x6, x19, x2, lsl #3
   11b38:	add	x4, x19, x0, lsl #3
   11b3c:	add	x0, x19, x0, lsl #3
   11b40:	lsl	x5, x1, #3
   11b44:	add	x1, x19, x1, lsl #3
   11b48:	ldr	x6, [x6, #1048]
   11b4c:	ldr	w4, [x4, #1052]
   11b50:	str	x6, [x0, #1048]
   11b54:	str	w3, [x19, x5]
   11b58:	str	w4, [x1, #4]
   11b5c:	str	x2, [x19, #1560]
   11b60:	b	11a80 <__sanitizer_cov_trace_pc_guard_init@@Base+0xbbc>
   11b64:	sub	x0, x0, #0x1
   11b68:	b	11b1c <__sanitizer_cov_trace_pc_guard_init@@Base+0xc58>
   11b6c:	stp	x19, x20, [sp, #-64]!
   11b70:	cmp	x1, #0x1, lsl #12
   11b74:	mov	x20, x1
   11b78:	stp	x21, x22, [sp, #16]
   11b7c:	stp	x23, x24, [sp, #32]
   11b80:	str	x30, [sp, #48]
   11b84:	b.ls	11b90 <__sanitizer_cov_trace_pc_guard_init@@Base+0xccc>  // b.plast
   11b88:	mov	x0, x1
   11b8c:	bl	1115c <__sanitizer_cov_trace_pc_guard_init@@Base+0x298>
   11b90:	mov	x21, x0
   11b94:	mov	x0, x1
   11b98:	bl	1109c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1d8>
   11b9c:	lsl	x24, x0, #3
   11ba0:	ubfx	x23, x20, #6, #6
   11ba4:	mov	x19, x0
   11ba8:	mov	x0, x23
   11bac:	add	x23, x23, #0x1
   11bb0:	ldr	x22, [x21, x24]
   11bb4:	add	x19, x23, x19, lsl #6
   11bb8:	bl	11180 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2bc>
   11bbc:	and	x20, x20, #0x3f
   11bc0:	lsl	x19, x19, #3
   11bc4:	tst	x22, x0
   11bc8:	b.ne	11bd8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd14>  // b.any
   11bcc:	orr	x22, x22, x0
   11bd0:	str	x22, [x21, x24]
   11bd4:	str	xzr, [x21, x19]
   11bd8:	ldr	x22, [x21, x19]
   11bdc:	mov	x0, x20
   11be0:	bl	11180 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2bc>
   11be4:	orr	x0, x22, x0
   11be8:	str	x0, [x21, x19]
   11bec:	cmp	x22, x0
   11bf0:	cset	w0, ne  // ne = any
   11bf4:	ldp	x21, x22, [sp, #16]
   11bf8:	ldp	x23, x24, [sp, #32]
   11bfc:	ldr	x30, [sp, #48]
   11c00:	ldp	x19, x20, [sp], #64
   11c04:	ret
   11c08:	stp	x19, x20, [sp, #-32]!
   11c0c:	stp	x21, x30, [sp, #16]
   11c10:	mov	w21, w3
   11c14:	ldr	x3, [x0, #520]
   11c18:	cmp	x3, x2
   11c1c:	b.eq	11c3c <__sanitizer_cov_trace_pc_guard_init@@Base+0xd78>  // b.none
   11c20:	mov	x4, x2
   11c24:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11c28:	add	x2, x2, #0xad1
   11c2c:	mov	w1, #0x3c                  	// #60
   11c30:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11c34:	add	x0, x0, #0x972
   11c38:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   11c3c:	mov	x19, x0
   11c40:	mov	x20, x1
   11c44:	bl	11b6c <__sanitizer_cov_trace_pc_guard_init@@Base+0xca8>
   11c48:	tst	w0, #0xff
   11c4c:	b.ne	11c8c <__sanitizer_cov_trace_pc_guard_init@@Base+0xdc8>  // b.any
   11c50:	ldr	x3, [x19, #1040]
   11c54:	cmp	x3, #0x3f
   11c58:	b.ls	11c70 <__sanitizer_cov_trace_pc_guard_init@@Base+0xdac>  // b.plast
   11c5c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11c60:	mov	x4, #0x40                  	// #64
   11c64:	add	x2, x2, #0xaf1
   11c68:	mov	w1, #0x3f                  	// #63
   11c6c:	b	11c30 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd6c>
   11c70:	add	x1, x3, #0x1
   11c74:	add	x3, x3, #0x42
   11c78:	str	x1, [x19, #1040]
   11c7c:	str	x20, [x19, x3, lsl #3]
   11c80:	ldp	x21, x30, [sp, #16]
   11c84:	ldp	x19, x20, [sp], #32
   11c88:	ret
   11c8c:	ldr	x3, [x19, #1560]
   11c90:	cmp	x3, #0x3f
   11c94:	b.ls	11cac <__sanitizer_cov_trace_pc_guard_init@@Base+0xde8>  // b.plast
   11c98:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11c9c:	mov	x4, #0x40                  	// #64
   11ca0:	add	x2, x2, #0xb44
   11ca4:	mov	w1, #0x43                  	// #67
   11ca8:	b	11c30 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd6c>
   11cac:	add	x2, x3, #0x83
   11cb0:	add	x1, x3, #0x1
   11cb4:	str	x1, [x19, #1560]
   11cb8:	lsl	x1, x2, #3
   11cbc:	add	x2, x19, x2, lsl #3
   11cc0:	str	w20, [x19, x1]
   11cc4:	str	w21, [x2, #4]
   11cc8:	b	11c80 <__sanitizer_cov_trace_pc_guard_init@@Base+0xdbc>
   11ccc:	stp	x19, x20, [sp, #-32]!
   11cd0:	mov	x19, x0
   11cd4:	and	x20, x1, #0xfff
   11cd8:	str	x30, [sp, #16]
   11cdc:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   11ce0:	mov	x1, x20
   11ce4:	add	x0, x19, #0x8
   11ce8:	bl	11874 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9b0>
   11cec:	tst	w0, #0xff
   11cf0:	b.eq	11d14 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe50>  // b.none
   11cf4:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11cf8:	add	x2, x2, #0xba4
   11cfc:	mov	x4, #0x0                   	// #0
   11d00:	mov	x3, #0x0                   	// #0
   11d04:	mov	w1, #0xc0                  	// #192
   11d08:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11d0c:	add	x0, x0, #0x972
   11d10:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   11d14:	mov	x1, x20
   11d18:	add	x0, x19, #0x210
   11d1c:	bl	11b6c <__sanitizer_cov_trace_pc_guard_init@@Base+0xca8>
   11d20:	tst	w0, #0xff
   11d24:	b.ne	11d40 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe7c>  // b.any
   11d28:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11d2c:	mov	x4, #0x0                   	// #0
   11d30:	add	x2, x2, #0xbcd
   11d34:	mov	x3, #0x0                   	// #0
   11d38:	mov	w1, #0xc1                  	// #193
   11d3c:	b	11d08 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe44>
   11d40:	add	x19, x19, #0x620
   11d44:	mov	x0, #0x208                 	// #520
   11d48:	ldr	x30, [sp, #16]
   11d4c:	madd	x0, x20, x0, x19
   11d50:	ldp	x19, x20, [sp], #32
   11d54:	b	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   11d58:	stp	x19, x30, [sp, #-16]!
   11d5c:	ldr	x19, [x0]
   11d60:	cbnz	x19, 11d84 <__sanitizer_cov_trace_pc_guard_init@@Base+0xec0>
   11d64:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   11d68:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11d6c:	add	x2, x2, #0xb25
   11d70:	add	x0, x0, #0x91b
   11d74:	mov	x4, #0x0                   	// #0
   11d78:	mov	x3, #0x0                   	// #0
   11d7c:	mov	w1, #0x30                  	// #48
   11d80:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   11d84:	rbit	x19, x19
   11d88:	clz	x19, x19
   11d8c:	mov	x1, x19
   11d90:	bl	111b8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2f4>
   11d94:	mov	x0, x19
   11d98:	ldp	x19, x30, [sp], #16
   11d9c:	ret
   11da0:	stp	x19, x20, [sp, #-96]!
   11da4:	mov	x20, x0
   11da8:	mov	x19, #0x0                   	// #0
   11dac:	stp	x21, x22, [sp, #16]
   11db0:	add	x21, sp, #0x58
   11db4:	mov	w22, #0x1                   	// #1
   11db8:	stp	x25, x26, [sp, #48]
   11dbc:	mov	x26, x1
   11dc0:	stp	x23, x24, [sp, #32]
   11dc4:	stp	x27, x30, [sp, #64]
   11dc8:	mov	w27, #0x0                   	// #0
   11dcc:	add	x23, x20, x19, lsl #3
   11dd0:	ldr	x0, [x20, x19, lsl #3]
   11dd4:	add	x24, x19, #0x1
   11dd8:	ldr	x1, [x26]
   11ddc:	mov	w25, #0x0                   	// #0
   11de0:	and	x0, x0, x1
   11de4:	str	x0, [sp, #88]
   11de8:	ldr	x0, [sp, #88]
   11dec:	cbz	x0, 11e30 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf6c>
   11df0:	mov	x0, x21
   11df4:	bl	11d58 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe94>
   11df8:	add	x2, x24, x0
   11dfc:	mov	x1, x0
   11e00:	add	x0, x0, #0x1
   11e04:	lsl	x2, x2, #3
   11e08:	ldr	x0, [x26, x0, lsl #3]
   11e0c:	ldr	x3, [x20, x2]
   11e10:	bic	x0, x3, x0
   11e14:	str	x0, [x20, x2]
   11e18:	cmp	x3, x0
   11e1c:	csel	w25, w25, w22, eq  // eq = none
   11e20:	cbnz	x0, 11de8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf24>
   11e24:	mov	x0, x23
   11e28:	bl	111b8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2f4>
   11e2c:	b	11de8 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf24>
   11e30:	cmp	w25, #0x0
   11e34:	add	x19, x19, #0x41
   11e38:	csel	w27, w27, w25, eq  // eq = none
   11e3c:	cmp	x19, #0x41, lsl #12
   11e40:	b.ne	11dcc <__sanitizer_cov_trace_pc_guard_init@@Base+0xf08>  // b.any
   11e44:	mov	w0, w27
   11e48:	ldp	x21, x22, [sp, #16]
   11e4c:	ldp	x23, x24, [sp, #32]
   11e50:	ldp	x25, x26, [sp, #48]
   11e54:	ldp	x27, x30, [sp, #64]
   11e58:	ldp	x19, x20, [sp], #96
   11e5c:	ret
   11e60:	stp	x19, x20, [sp, #-80]!
   11e64:	mov	x20, x0
   11e68:	stp	x21, x22, [sp, #16]
   11e6c:	mov	x21, x1
   11e70:	mov	w22, #0x0                   	// #0
   11e74:	stp	x25, x30, [sp, #48]
   11e78:	add	x25, sp, #0x48
   11e7c:	ldr	x0, [x1]
   11e80:	stp	x23, x24, [sp, #32]
   11e84:	mov	w24, #0x1                   	// #1
   11e88:	str	x0, [sp, #72]
   11e8c:	ldr	x0, [sp, #72]
   11e90:	cbz	x0, 11ee0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x101c>
   11e94:	mov	x0, x25
   11e98:	bl	11d58 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe94>
   11e9c:	mov	x19, x0
   11ea0:	bl	11180 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2bc>
   11ea4:	ldr	x23, [x20]
   11ea8:	add	x2, x19, #0x1
   11eac:	orr	x0, x23, x0
   11eb0:	str	x0, [x20]
   11eb4:	lsl	x2, x2, #3
   11eb8:	cmp	x23, x0
   11ebc:	b.eq	11ec4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1000>  // b.none
   11ec0:	str	xzr, [x20, x2]
   11ec4:	ldr	x1, [x20, x2]
   11ec8:	ldr	x0, [x21, x2]
   11ecc:	orr	x0, x1, x0
   11ed0:	str	x0, [x20, x2]
   11ed4:	cmp	x1, x0
   11ed8:	csel	w22, w22, w24, eq  // eq = none
   11edc:	b	11e8c <__sanitizer_cov_trace_pc_guard_init@@Base+0xfc8>
   11ee0:	mov	w0, w22
   11ee4:	ldp	x21, x22, [sp, #16]
   11ee8:	ldp	x23, x24, [sp, #32]
   11eec:	ldp	x25, x30, [sp, #48]
   11ef0:	ldp	x19, x20, [sp], #80
   11ef4:	ret
   11ef8:	stp	x19, x20, [sp, #-48]!
   11efc:	ldr	x1, [x0]
   11f00:	stp	x21, x22, [sp, #16]
   11f04:	str	x30, [sp, #32]
   11f08:	cbnz	x1, 11f2c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1068>
   11f0c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11f10:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   11f14:	add	x2, x2, #0xbf4
   11f18:	add	x0, x0, #0x91b
   11f1c:	mov	x4, #0x0                   	// #0
   11f20:	mov	x3, #0x0                   	// #0
   11f24:	mov	w1, #0xbf                  	// #191
   11f28:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   11f2c:	mov	x19, x0
   11f30:	bl	11d58 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe94>
   11f34:	mov	x20, x0
   11f38:	add	x0, x0, #0x1
   11f3c:	lsl	x22, x0, #3
   11f40:	add	x0, x19, x0, lsl #3
   11f44:	bl	11d58 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe94>
   11f48:	mov	x21, x0
   11f4c:	ldr	x0, [x19, x22]
   11f50:	cbz	x0, 11f68 <__sanitizer_cov_trace_pc_guard_init@@Base+0x10a4>
   11f54:	mov	x0, x20
   11f58:	bl	11180 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2bc>
   11f5c:	ldr	x1, [x19]
   11f60:	orr	x1, x1, x0
   11f64:	str	x1, [x19]
   11f68:	add	x0, x21, x20, lsl #6
   11f6c:	ldp	x21, x22, [sp, #16]
   11f70:	ldr	x30, [sp, #32]
   11f74:	ldp	x19, x20, [sp], #48
   11f78:	ret
   11f7c:	stp	x19, x20, [sp, #-96]!
   11f80:	mov	x19, x0
   11f84:	mov	x0, x1
   11f88:	stp	x21, x22, [sp, #16]
   11f8c:	mov	x21, x1
   11f90:	mov	x20, x2
   11f94:	ldr	x1, [x19]
   11f98:	stp	x23, x24, [sp, #32]
   11f9c:	stp	x25, x26, [sp, #48]
   11fa0:	add	x25, x19, #0x620
   11fa4:	add	x24, x25, #0x208, lsl #12
   11fa8:	str	x30, [sp, #64]
   11fac:	bl	11984 <__sanitizer_cov_trace_pc_guard_init@@Base+0xac0>
   11fb0:	mov	x1, x20
   11fb4:	mov	x0, x19
   11fb8:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   11fbc:	and	x20, x20, #0xfff
   11fc0:	ldr	x1, [x19]
   11fc4:	mov	x0, x21
   11fc8:	mov	x21, #0x208                 	// #520
   11fcc:	add	x22, x25, #0x208, lsl #12
   11fd0:	add	x22, x22, #0x208
   11fd4:	bl	119bc <__sanitizer_cov_trace_pc_guard_init@@Base+0xaf8>
   11fd8:	madd	x26, x20, x21, x25
   11fdc:	mov	x23, x0
   11fe0:	mov	x0, x24
   11fe4:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   11fe8:	mov	x1, x26
   11fec:	mov	x26, x21
   11ff0:	mov	x0, x24
   11ff4:	bl	11e60 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf9c>
   11ff8:	mov	x0, x22
   11ffc:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   12000:	mov	x1, x20
   12004:	mov	x0, x22
   12008:	bl	11b6c <__sanitizer_cov_trace_pc_guard_init@@Base+0xca8>
   1200c:	mov	x0, x24
   12010:	bl	11864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9a0>
   12014:	ands	w21, w0, #0xff
   12018:	b.ne	1204c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1188>  // b.any
   1201c:	mov	x0, x24
   12020:	bl	11ef8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1034>
   12024:	mov	x1, x0
   12028:	mov	x20, x0
   1202c:	mov	x0, x22
   12030:	bl	11b6c <__sanitizer_cov_trace_pc_guard_init@@Base+0xca8>
   12034:	tst	w0, #0xff
   12038:	b.eq	1200c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1148>  // b.none
   1203c:	madd	x1, x20, x26, x25
   12040:	mov	x0, x24
   12044:	bl	11e60 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf9c>
   12048:	b	1200c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1148>
   1204c:	add	x19, x19, #0x208, lsl #12
   12050:	add	x24, sp, #0x58
   12054:	ldr	x0, [x23]
   12058:	ldr	x1, [x19, #2088]
   1205c:	and	x0, x0, x1
   12060:	str	x0, [sp, #88]
   12064:	ldr	x0, [sp, #88]
   12068:	cbz	x0, 120bc <__sanitizer_cov_trace_pc_guard_init@@Base+0x11f8>
   1206c:	mov	x0, x24
   12070:	bl	11d58 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe94>
   12074:	mov	x20, x0
   12078:	bl	11180 <__sanitizer_cov_trace_pc_guard_init@@Base+0x2bc>
   1207c:	ldr	x1, [x19, #2088]
   12080:	tst	x0, x1
   12084:	b.eq	12064 <__sanitizer_cov_trace_pc_guard_init@@Base+0x11a0>  // b.none
   12088:	add	x1, x20, #0x1
   1208c:	lsl	x1, x1, #3
   12090:	ldr	x2, [x23, x1]
   12094:	ldr	x0, [x22, x1]
   12098:	tst	x2, x0
   1209c:	b.eq	12064 <__sanitizer_cov_trace_pc_guard_init@@Base+0x11a0>  // b.none
   120a0:	mov	w0, w21
   120a4:	ldp	x21, x22, [sp, #16]
   120a8:	ldp	x23, x24, [sp, #32]
   120ac:	ldp	x25, x26, [sp, #48]
   120b0:	ldr	x30, [sp, #64]
   120b4:	ldp	x19, x20, [sp], #96
   120b8:	ret
   120bc:	mov	w21, #0x0                   	// #0
   120c0:	b	120a0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x11dc>
   120c4:	stp	x19, x20, [sp, #-432]!
   120c8:	mov	x19, x0
   120cc:	mov	x0, x1
   120d0:	stp	x21, x22, [sp, #16]
   120d4:	mov	x21, x1
   120d8:	mov	x20, x2
   120dc:	ldr	x1, [x19]
   120e0:	stp	x23, x24, [sp, #32]
   120e4:	mov	w23, w4
   120e8:	stp	x25, x26, [sp, #48]
   120ec:	add	x26, x19, #0x620
   120f0:	add	x22, x26, #0x208, lsl #12
   120f4:	stp	x27, x28, [sp, #64]
   120f8:	add	x27, sp, #0x70
   120fc:	mov	x28, #0x208                 	// #520
   12100:	str	x30, [sp, #80]
   12104:	str	w3, [sp, #108]
   12108:	bl	11984 <__sanitizer_cov_trace_pc_guard_init@@Base+0xac0>
   1210c:	mov	x1, x20
   12110:	mov	x0, x19
   12114:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   12118:	and	x20, x20, #0xfff
   1211c:	ldr	x1, [x19]
   12120:	mov	x0, x21
   12124:	bl	119bc <__sanitizer_cov_trace_pc_guard_init@@Base+0xaf8>
   12128:	mov	x24, x0
   1212c:	mov	x0, x22
   12130:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   12134:	mov	x1, x24
   12138:	mov	x24, #0x0                   	// #0
   1213c:	mov	x0, x22
   12140:	bl	11e60 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf9c>
   12144:	mov	x0, x22
   12148:	bl	11864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9a0>
   1214c:	tst	w0, #0xff
   12150:	b.ne	12188 <__sanitizer_cov_trace_pc_guard_init@@Base+0x12c4>  // b.any
   12154:	mov	x0, x22
   12158:	bl	11ef8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1034>
   1215c:	mov	x25, x0
   12160:	madd	x0, x0, x28, x26
   12164:	mov	x1, x20
   12168:	bl	11b6c <__sanitizer_cov_trace_pc_guard_init@@Base+0xca8>
   1216c:	tst	w0, #0xff
   12170:	b.eq	12144 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1280>  // b.none
   12174:	cmp	x24, #0x27
   12178:	b.hi	12144 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1280>  // b.pmore
   1217c:	str	x25, [x27, x24, lsl #3]
   12180:	add	x24, x24, #0x1
   12184:	b	12144 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1280>
   12188:	mov	x8, #0x10a3                	// #4259
   1218c:	add	x2, x19, #0x410, lsl #12
   12190:	add	x6, sp, #0x70
   12194:	and	w20, w20, #0xffff
   12198:	add	x7, x21, #0x418
   1219c:	mov	x0, #0x0                   	// #0
   121a0:	mov	x4, #0x1ffff               	// #131071
   121a4:	movk	x8, #0x2, lsl #16
   121a8:	cmp	x0, x24
   121ac:	b.eq	12230 <__sanitizer_cov_trace_pc_guard_init@@Base+0x136c>  // b.none
   121b0:	ldr	x5, [x2, #2608]
   121b4:	cmp	x5, x4
   121b8:	b.hi	12218 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1354>  // b.pmore
   121bc:	ldr	x3, [x6, x0, lsl #3]
   121c0:	mov	x1, #0x0                   	// #0
   121c4:	ldr	x10, [x21, #1560]
   121c8:	and	w9, w3, #0xffff
   121cc:	cmp	x10, x1
   121d0:	b.eq	12228 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1364>  // b.none
   121d4:	lsl	x11, x1, #3
   121d8:	ldr	w11, [x7, x11]
   121dc:	cmp	w11, w3
   121e0:	b.ne	12220 <__sanitizer_cov_trace_pc_guard_init@@Base+0x135c>  // b.any
   121e4:	add	x1, x21, x1, lsl #3
   121e8:	ldr	w1, [x1, #1052]
   121ec:	add	x3, x5, #0x1
   121f0:	add	x5, x5, x8
   121f4:	str	x3, [x2, #2608]
   121f8:	lsl	x3, x5, #4
   121fc:	add	x5, x19, x5, lsl #4
   12200:	strh	w9, [x19, x3]
   12204:	str	w1, [x5, #4]
   12208:	ldr	w1, [sp, #108]
   1220c:	strh	w20, [x5, #2]
   12210:	str	w1, [x5, #8]
   12214:	str	w23, [x5, #12]
   12218:	add	x0, x0, #0x1
   1221c:	b	121a8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x12e4>
   12220:	add	x1, x1, #0x1
   12224:	b	121cc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1308>
   12228:	mov	w1, #0x0                   	// #0
   1222c:	b	121ec <__sanitizer_cov_trace_pc_guard_init@@Base+0x1328>
   12230:	ldp	x21, x22, [sp, #16]
   12234:	ldp	x23, x24, [sp, #32]
   12238:	ldp	x25, x26, [sp, #48]
   1223c:	ldp	x27, x28, [sp, #64]
   12240:	ldr	x30, [sp, #80]
   12244:	ldp	x19, x20, [sp], #432
   12248:	ret
   1224c:	stp	x19, x20, [sp, #-80]!
   12250:	mov	x19, x0
   12254:	stp	x21, x22, [sp, #16]
   12258:	add	x22, x0, #0x8
   1225c:	mov	x21, x1
   12260:	mov	x0, x22
   12264:	stp	x23, x24, [sp, #32]
   12268:	stp	x25, x26, [sp, #48]
   1226c:	str	x30, [sp, #64]
   12270:	bl	11864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9a0>
   12274:	tst	w0, #0xff
   12278:	b.ne	122b8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x13f4>  // b.any
   1227c:	mov	x0, x22
   12280:	bl	11ef8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1034>
   12284:	add	x1, x0, #0x41, lsl #12
   12288:	mov	x20, x0
   1228c:	add	x1, x1, #0x146
   12290:	str	x21, [x19, x1, lsl #3]
   12294:	bl	1112c <__sanitizer_cov_trace_pc_guard_init@@Base+0x268>
   12298:	ldr	x0, [x19]
   1229c:	ldp	x21, x22, [sp, #16]
   122a0:	add	x0, x20, x0
   122a4:	ldp	x23, x24, [sp, #32]
   122a8:	ldp	x25, x26, [sp, #48]
   122ac:	ldr	x30, [sp, #64]
   122b0:	ldp	x19, x20, [sp], #80
   122b4:	ret
   122b8:	add	x23, x19, #0x210
   122bc:	mov	x0, x23
   122c0:	bl	11864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9a0>
   122c4:	tst	w0, #0xff
   122c8:	b.ne	123b4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x14f0>  // b.any
   122cc:	add	x26, x19, #0x410, lsl #12
   122d0:	mov	x24, #0x10a2                	// #4258
   122d4:	movk	x24, #0x2, lsl #16
   122d8:	ldr	x20, [x26, #2608]
   122dc:	sub	x25, x20, #0x1
   122e0:	add	x20, x20, x24
   122e4:	add	x20, x19, x20, lsl #4
   122e8:	tbnz	x25, #63, 12360 <__sanitizer_cov_trace_pc_guard_init@@Base+0x149c>
   122ec:	ldrh	w1, [x20]
   122f0:	mov	x0, x23
   122f4:	bl	11874 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9b0>
   122f8:	tst	w0, #0xff
   122fc:	b.ne	12314 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1450>  // b.any
   12300:	ldrh	w1, [x20, #2]
   12304:	mov	x0, x23
   12308:	bl	11874 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9b0>
   1230c:	tst	w0, #0xff
   12310:	b.eq	12354 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1490>  // b.none
   12314:	ldr	x0, [x26, #2608]
   12318:	ldrh	w9, [x20]
   1231c:	sub	x1, x0, #0x1
   12320:	add	x0, x0, x24
   12324:	ldrh	w7, [x20, #2]
   12328:	lsl	x8, x0, #4
   1232c:	add	x0, x19, x0, lsl #4
   12330:	ldp	w6, w5, [x20, #4]
   12334:	ldp	x2, x3, [x0]
   12338:	ldr	w4, [x20, #12]
   1233c:	stp	x2, x3, [x20]
   12340:	strh	w9, [x19, x8]
   12344:	strh	w7, [x0, #2]
   12348:	stp	w6, w5, [x0, #4]
   1234c:	str	w4, [x0, #12]
   12350:	str	x1, [x26, #2608]
   12354:	sub	x25, x25, #0x1
   12358:	sub	x20, x20, #0x10
   1235c:	b	122e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1424>
   12360:	mov	x0, x22
   12364:	bl	11864 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9a0>
   12368:	tst	w0, #0xff
   1236c:	b.ne	12390 <__sanitizer_cov_trace_pc_guard_init@@Base+0x14cc>  // b.any
   12370:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12374:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12378:	add	x2, x2, #0xc01
   1237c:	add	x0, x0, #0x972
   12380:	mov	x4, #0x0                   	// #0
   12384:	mov	x3, #0x0                   	// #0
   12388:	mov	w1, #0xa7                  	// #167
   1238c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   12390:	mov	x1, x23
   12394:	add	x0, x19, #0x620
   12398:	bl	11da0 <__sanitizer_cov_trace_pc_guard_init@@Base+0xedc>
   1239c:	mov	x1, x23
   123a0:	mov	x0, x22
   123a4:	bl	11e60 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf9c>
   123a8:	mov	x0, x23
   123ac:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   123b0:	b	1227c <__sanitizer_cov_trace_pc_guard_init@@Base+0x13b8>
   123b4:	ldr	x0, [x19]
   123b8:	add	x0, x0, #0x1, lsl #12
   123bc:	str	x0, [x19]
   123c0:	mov	x0, x23
   123c4:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   123c8:	mov	x1, #0xffffffffffffffff    	// #-1
   123cc:	mov	x0, #0x0                   	// #0
   123d0:	str	x1, [x19, #8]
   123d4:	add	x0, x0, #0x1
   123d8:	cmp	x0, #0x40
   123dc:	str	x1, [x22, x0, lsl #3]
   123e0:	b.ne	123d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1510>  // b.any
   123e4:	add	x23, x19, #0x208, lsl #12
   123e8:	add	x20, x19, #0x620
   123ec:	add	x23, x23, #0x620
   123f0:	mov	x0, x20
   123f4:	add	x20, x20, #0x208
   123f8:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   123fc:	cmp	x20, x23
   12400:	b.ne	123f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x152c>  // b.any
   12404:	add	x0, x19, #0x410, lsl #12
   12408:	str	xzr, [x0, #2608]
   1240c:	b	1227c <__sanitizer_cov_trace_pc_guard_init@@Base+0x13b8>
   12410:	stp	x19, x20, [sp, #-112]!
   12414:	mov	x19, x4
   12418:	stp	x21, x22, [sp, #16]
   1241c:	stp	x23, x24, [sp, #32]
   12420:	str	x30, [sp, #48]
   12424:	cbz	x4, 124e4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1620>
   12428:	str	x1, [x3]
   1242c:	mov	x22, x0
   12430:	mov	x21, x1
   12434:	mov	x23, x2
   12438:	mov	x20, x3
   1243c:	mov	x0, x2
   12440:	bl	11874 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9b0>
   12444:	tst	w0, #0xff
   12448:	b.ne	124fc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1638>  // b.any
   1244c:	mov	x1, #0x208                 	// #520
   12450:	add	x24, sp, #0x60
   12454:	sub	x19, x19, #0x1
   12458:	add	x20, x20, #0x8
   1245c:	madd	x21, x21, x1, x22
   12460:	stp	xzr, xzr, [sp, #88]
   12464:	stp	x21, xzr, [sp, #72]
   12468:	add	x21, sp, #0x68
   1246c:	str	xzr, [sp, #104]
   12470:	ldr	x0, [sp, #96]
   12474:	cbnz	x0, 12494 <__sanitizer_cov_trace_pc_guard_init@@Base+0x15d0>
   12478:	ldr	x0, [sp, #80]
   1247c:	cbnz	x0, 1248c <__sanitizer_cov_trace_pc_guard_init@@Base+0x15c8>
   12480:	ldr	x0, [sp, #72]
   12484:	ldr	x0, [x0]
   12488:	cbnz	x0, 12504 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1640>
   1248c:	mov	x19, #0x0                   	// #0
   12490:	b	124e4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1620>
   12494:	ldr	x0, [sp, #104]
   12498:	cbz	x0, 12510 <__sanitizer_cov_trace_pc_guard_init@@Base+0x164c>
   1249c:	mov	x0, x21
   124a0:	bl	11d58 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe94>
   124a4:	ldp	x2, x1, [sp, #80]
   124a8:	ldr	x3, [sp, #104]
   124ac:	add	x1, x1, x2, lsl #6
   124b0:	add	x1, x0, x1, lsl #6
   124b4:	ldr	x0, [sp, #96]
   124b8:	orr	x0, x0, x3
   124bc:	cbnz	x0, 124c8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1604>
   124c0:	add	x2, x2, #0x1
   124c4:	str	x2, [sp, #80]
   124c8:	mov	x4, x19
   124cc:	mov	x3, x20
   124d0:	mov	x2, x23
   124d4:	mov	x0, x22
   124d8:	bl	12410 <__sanitizer_cov_trace_pc_guard_init@@Base+0x154c>
   124dc:	cbz	x0, 12470 <__sanitizer_cov_trace_pc_guard_init@@Base+0x15ac>
   124e0:	add	x19, x0, #0x1
   124e4:	mov	x0, x19
   124e8:	ldp	x21, x22, [sp, #16]
   124ec:	ldp	x23, x24, [sp, #32]
   124f0:	ldr	x30, [sp, #48]
   124f4:	ldp	x19, x20, [sp], #112
   124f8:	ret
   124fc:	mov	x19, #0x1                   	// #1
   12500:	b	124e4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1620>
   12504:	ldr	x1, [sp, #104]
   12508:	cbnz	x1, 1249c <__sanitizer_cov_trace_pc_guard_init@@Base+0x15d8>
   1250c:	str	x0, [sp, #96]
   12510:	mov	x0, x24
   12514:	bl	11d58 <__sanitizer_cov_trace_pc_guard_init@@Base+0xe94>
   12518:	ldr	x1, [sp, #80]
   1251c:	str	x0, [sp, #88]
   12520:	add	x1, x0, x1, lsl #6
   12524:	ldr	x0, [sp, #72]
   12528:	add	x1, x1, #0x1
   1252c:	ldr	x0, [x0, x1, lsl #3]
   12530:	str	x0, [sp, #104]
   12534:	cbnz	x0, 1249c <__sanitizer_cov_trace_pc_guard_init@@Base+0x15d8>
   12538:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1253c:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12540:	add	x2, x2, #0xc25
   12544:	add	x0, x0, #0x91b
   12548:	mov	x4, #0x0                   	// #0
   1254c:	mov	x3, #0x0                   	// #0
   12550:	mov	w1, #0x132                 	// #306
   12554:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   12558:	stp	x19, x20, [sp, #-80]!
   1255c:	mov	x19, x0
   12560:	mov	x0, x1
   12564:	stp	x21, x22, [sp, #16]
   12568:	mov	x21, x2
   1256c:	mov	x22, x3
   12570:	ldr	x1, [x19]
   12574:	stp	x23, x24, [sp, #32]
   12578:	add	x24, x19, #0x418
   1257c:	stp	x25, x26, [sp, #48]
   12580:	and	x26, x2, #0xfff
   12584:	mov	x25, x4
   12588:	stp	x27, x30, [sp, #64]
   1258c:	bl	119bc <__sanitizer_cov_trace_pc_guard_init@@Base+0xaf8>
   12590:	mov	x20, x0
   12594:	mov	x0, x24
   12598:	bl	1185c <__sanitizer_cov_trace_pc_guard_init@@Base+0x998>
   1259c:	mov	x1, x20
   125a0:	mov	x0, x24
   125a4:	bl	11e60 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf9c>
   125a8:	mov	x1, x21
   125ac:	mov	x0, x19
   125b0:	bl	110d8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>
   125b4:	mov	x1, x26
   125b8:	mov	x0, x24
   125bc:	bl	11874 <__sanitizer_cov_trace_pc_guard_init@@Base+0x9b0>
   125c0:	tst	w0, #0xff
   125c4:	b.eq	125e8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1724>  // b.none
   125c8:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   125cc:	add	x2, x2, #0xc3f
   125d0:	mov	x4, #0x0                   	// #0
   125d4:	mov	x3, #0x0                   	// #0
   125d8:	mov	w1, #0x13e                 	// #318
   125dc:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   125e0:	add	x0, x0, #0x972
   125e4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   125e8:	add	x27, x19, #0x620
   125ec:	mov	x23, #0x1                   	// #1
   125f0:	cmp	x25, x23
   125f4:	b.cc	12674 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17b0>  // b.lo, b.ul, b.last
   125f8:	mov	x4, x23
   125fc:	mov	x3, x22
   12600:	mov	x2, x24
   12604:	mov	x1, x26
   12608:	mov	x0, x27
   1260c:	bl	12410 <__sanitizer_cov_trace_pc_guard_init@@Base+0x154c>
   12610:	mov	x20, x0
   12614:	cmp	x23, x0
   12618:	b.eq	12624 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1760>  // b.none
   1261c:	add	x23, x23, #0x1
   12620:	b	125f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x172c>
   12624:	mov	x23, #0x0                   	// #0
   12628:	cmp	x23, x20
   1262c:	b.eq	12650 <__sanitizer_cov_trace_pc_guard_init@@Base+0x178c>  // b.none
   12630:	ldr	x24, [x22, x23, lsl #3]
   12634:	mov	x0, x24
   12638:	bl	1112c <__sanitizer_cov_trace_pc_guard_init@@Base+0x268>
   1263c:	ldr	x1, [x19]
   12640:	add	x1, x1, x24
   12644:	str	x1, [x22, x23, lsl #3]
   12648:	add	x23, x23, #0x1
   1264c:	b	12628 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1764>
   12650:	cbz	x23, 12678 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17b4>
   12654:	ldr	x3, [x22]
   12658:	cmp	x21, x3
   1265c:	b.eq	12678 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17b4>  // b.none
   12660:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12664:	mov	x4, x21
   12668:	add	x2, x2, #0xc5f
   1266c:	mov	w1, #0x143                 	// #323
   12670:	b	125dc <__sanitizer_cov_trace_pc_guard_init@@Base+0x1718>
   12674:	mov	x20, #0x0                   	// #0
   12678:	mov	x0, x20
   1267c:	ldp	x21, x22, [sp, #16]
   12680:	ldp	x23, x24, [sp, #32]
   12684:	ldp	x25, x26, [sp, #48]
   12688:	ldp	x27, x30, [sp, #64]
   1268c:	ldp	x19, x20, [sp], #80
   12690:	ret
   12694:	mov	x2, x1
   12698:	mov	x4, #0x0                   	// #0
   1269c:	mov	x1, x0
   126a0:	mov	x3, #0x0                   	// #0
   126a4:	mov	w0, #0x2                   	// #2
   126a8:	b	16f08 <__sanitizer_set_report_fd@@Base+0x4454>
   126ac:	stp	x19, x30, [sp, #-16]!
   126b0:	mov	x19, x0
   126b4:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   126b8:	mov	x2, x0
   126bc:	mov	x1, x19
   126c0:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
   126c4:	ldp	x19, x30, [sp], #16
   126c8:	add	x0, x0, #0x3d8
   126cc:	b	172b0 <__sanitizer_set_report_fd@@Base+0x47fc>
   126d0:	stp	x19, x20, [sp, #-32]!
   126d4:	mov	x19, x0
   126d8:	ldr	x0, [x0]
   126dc:	stp	x21, x30, [sp, #16]
   126e0:	ldrb	w3, [x0]
   126e4:	and	x3, x3, #0xff
   126e8:	cmp	x3, #0x1
   126ec:	b.eq	1270c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1848>  // b.none
   126f0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   126f4:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   126f8:	add	x2, x2, #0xa42
   126fc:	add	x0, x0, #0xa7a
   12700:	mov	x4, #0x1                   	// #1
   12704:	mov	w1, #0x2a                  	// #42
   12708:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1270c:	ldr	w0, [x19, #8]
   12710:	sub	w0, w0, #0x1
   12714:	cmp	w0, #0x1
   12718:	b.ls	12828 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1964>  // b.plast
   1271c:	bl	154b0 <__sanitizer_set_report_fd@@Base+0x29fc>
   12720:	mov	x20, x0
   12724:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12728:	ldr	x0, [x0, #3560]
   1272c:	ldr	x0, [x0]
   12730:	cmp	x0, x20
   12734:	b.ne	12744 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1880>  // b.any
   12738:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1273c:	ldr	x0, [x0, #3544]
   12740:	ldr	x20, [x0]
   12744:	ldr	w0, [x19, #8]
   12748:	cmn	w0, #0x1
   1274c:	b.eq	12760 <__sanitizer_cov_trace_pc_guard_init@@Base+0x189c>  // b.none
   12750:	ldr	x1, [x19, #8208]
   12754:	cmp	x1, x20
   12758:	b.eq	12828 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1964>  // b.none
   1275c:	bl	16ebc <__sanitizer_set_report_fd@@Base+0x4408>
   12760:	bl	10558 <__sancov_default_options@@Base+0x20d4>
   12764:	mov	x4, x0
   12768:	mov	x0, #0x100c                	// #4108
   1276c:	add	x21, x19, x0
   12770:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12774:	add	x3, x19, #0xc
   12778:	ldr	x0, [x0, #4040]
   1277c:	ldrb	w0, [x0, #48]
   12780:	cbz	w0, 12808 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1944>
   12784:	cbz	x4, 12808 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1944>
   12788:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1278c:	mov	x5, x20
   12790:	add	x2, x2, #0xc80
   12794:	mov	x0, x21
   12798:	mov	x1, #0x1000                	// #4096
   1279c:	bl	1886c <OnPrint@@Base+0x4>
   127a0:	mov	x0, x21
   127a4:	mov	x2, #0x0                   	// #0
   127a8:	mov	w1, #0x1                   	// #1
   127ac:	bl	16e6c <__sanitizer_set_report_fd@@Base+0x43b8>
   127b0:	str	w0, [x19, #8]
   127b4:	cmn	w0, #0x1
   127b8:	b.ne	12824 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1960>  // b.any
   127bc:	adrp	x19, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   127c0:	add	x19, x19, #0xc8a
   127c4:	mov	x0, x19
   127c8:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   127cc:	mov	x1, x19
   127d0:	mov	x2, x0
   127d4:	mov	x4, #0x0                   	// #0
   127d8:	mov	x3, #0x0                   	// #0
   127dc:	mov	w0, #0x2                   	// #2
   127e0:	bl	16f08 <__sanitizer_set_report_fd@@Base+0x4454>
   127e4:	mov	x0, x21
   127e8:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   127ec:	mov	x1, x21
   127f0:	mov	x2, x0
   127f4:	mov	x4, #0x0                   	// #0
   127f8:	mov	x3, #0x0                   	// #0
   127fc:	mov	w0, #0x2                   	// #2
   12800:	bl	16f08 <__sanitizer_set_report_fd@@Base+0x4454>
   12804:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   12808:	mov	x4, x20
   1280c:	mov	x0, x21
   12810:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12814:	mov	x1, #0x1000                	// #4096
   12818:	add	x2, x2, #0xc83
   1281c:	bl	1886c <OnPrint@@Base+0x4>
   12820:	b	127a0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x18dc>
   12824:	str	x20, [x19, #8208]
   12828:	ldp	x21, x30, [sp, #16]
   1282c:	ldp	x19, x20, [sp], #32
   12830:	ret
   12834:	cbz	x1, 12944 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a80>
   12838:	sub	sp, sp, #0x30
   1283c:	stp	x19, x20, [sp, #16]
   12840:	mov	x20, x0
   12844:	mov	x19, x1
   12848:	mov	x0, x1
   1284c:	stp	x21, x30, [sp, #32]
   12850:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   12854:	cmp	x0, #0xf9c
   12858:	b.ls	12890 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19cc>  // b.plast
   1285c:	ldrb	w0, [x19, #7]
   12860:	str	w0, [sp]
   12864:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12868:	add	x0, x0, #0xca3
   1286c:	ldrb	w7, [x19, #6]
   12870:	ldrb	w6, [x19, #5]
   12874:	ldrb	w5, [x19, #4]
   12878:	ldrb	w4, [x19, #3]
   1287c:	ldrb	w3, [x19, #2]
   12880:	ldrb	w2, [x19, #1]
   12884:	ldrb	w1, [x19]
   12888:	bl	18b74 <OnPrint@@Base+0x30c>
   1288c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   12890:	ldr	x21, [x20]
   12894:	mov	w1, #0x1                   	// #1
   12898:	ldxrb	w0, [x21]
   1289c:	stxrb	w2, w1, [x21]
   128a0:	cbnz	w2, 12898 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19d4>
   128a4:	dmb	ish
   128a8:	tst	w0, #0xff
   128ac:	b.eq	128b8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x19f4>  // b.none
   128b0:	mov	x0, x21
   128b4:	bl	b08c <__sanitizer_get_allocated_size@@Base+0xb8c>
   128b8:	ldr	w0, [x20, #8]
   128bc:	sub	w1, w0, #0x1
   128c0:	cmp	w1, #0x1
   128c4:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   128c8:	b.eq	128d0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a0c>  // b.none
   128cc:	bl	16ebc <__sanitizer_set_report_fd@@Base+0x4408>
   128d0:	mov	w0, #0xffffffff            	// #-1
   128d4:	str	w0, [x20, #8]
   128d8:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   128dc:	mov	x0, x19
   128e0:	add	x1, x1, #0xcd1
   128e4:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   128e8:	cbnz	w0, 1290c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a48>
   128ec:	mov	w0, #0x1                   	// #1
   128f0:	str	w0, [x20, #8]
   128f4:	dmb	ish
   128f8:	strb	wzr, [x21]
   128fc:	ldp	x19, x20, [sp, #16]
   12900:	ldp	x21, x30, [sp, #32]
   12904:	add	sp, sp, #0x30
   12908:	ret
   1290c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12910:	mov	x0, x19
   12914:	add	x1, x1, #0xcd8
   12918:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1291c:	cbnz	w0, 12928 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a64>
   12920:	mov	w0, #0x2                   	// #2
   12924:	b	128f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a2c>
   12928:	mov	x3, x19
   1292c:	add	x0, x20, #0xc
   12930:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12934:	mov	x1, #0x1000                	// #4096
   12938:	add	x2, x2, #0x67b
   1293c:	bl	1886c <OnPrint@@Base+0x4>
   12940:	b	128f4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a30>
   12944:	ret
   12948:	stp	x19, x20, [sp, #-128]!
   1294c:	stp	x21, x22, [sp, #16]
   12950:	stp	x23, x24, [sp, #32]
   12954:	stp	x25, x26, [sp, #48]
   12958:	stp	x27, x28, [sp, #64]
   1295c:	str	x30, [sp, #80]
   12960:	str	xzr, [x1]
   12964:	str	xzr, [x2]
   12968:	str	xzr, [x3]
   1296c:	str	x0, [sp, #104]
   12970:	cbz	x4, 12a9c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1bd8>
   12974:	mov	x21, x4
   12978:	mov	x22, x1
   1297c:	mov	x23, x2
   12980:	mov	x24, x3
   12984:	mov	x25, x5
   12988:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1298c:	cmp	x21, x0
   12990:	adrp	x27, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12994:	csel	x19, x21, x0, ls  // ls = plast
   12998:	add	x27, x27, #0xcdf
   1299c:	add	x28, sp, #0x78
   129a0:	ldr	x0, [x22]
   129a4:	ldr	x1, [x23]
   129a8:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   129ac:	mov	x1, x27
   129b0:	mov	w2, #0x0                   	// #0
   129b4:	mov	x0, x19
   129b8:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   129bc:	str	x0, [x22]
   129c0:	mov	x2, x25
   129c4:	ldr	x0, [sp, #104]
   129c8:	str	x19, [x23]
   129cc:	mov	w1, #0x0                   	// #0
   129d0:	bl	16e6c <__sanitizer_set_report_fd@@Base+0x43b8>
   129d4:	mov	w26, w0
   129d8:	cmn	w0, #0x1
   129dc:	b.ne	12a10 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b4c>  // b.any
   129e0:	ldr	x0, [x22]
   129e4:	mov	w20, #0x0                   	// #0
   129e8:	ldr	x1, [x23]
   129ec:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   129f0:	mov	w0, w20
   129f4:	ldp	x21, x22, [sp, #16]
   129f8:	ldp	x23, x24, [sp, #32]
   129fc:	ldp	x25, x26, [sp, #48]
   12a00:	ldp	x27, x28, [sp, #64]
   12a04:	ldr	x30, [sp, #80]
   12a08:	ldp	x19, x20, [sp], #128
   12a0c:	ret
   12a10:	str	xzr, [x24]
   12a14:	ldr	x0, [x24]
   12a18:	cmp	x0, x19
   12a1c:	b.cs	12a94 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1bd0>  // b.hs, b.nlast
   12a20:	ldr	x1, [x22]
   12a24:	sub	x2, x19, x0
   12a28:	mov	x4, x25
   12a2c:	mov	x3, x28
   12a30:	add	x1, x1, x0
   12a34:	mov	w0, w26
   12a38:	bl	16ec0 <__sanitizer_set_report_fd@@Base+0x440c>
   12a3c:	ands	w20, w0, #0xff
   12a40:	b.ne	12a5c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b98>  // b.any
   12a44:	ldr	x0, [x22]
   12a48:	ldr	x1, [x23]
   12a4c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   12a50:	mov	w0, w26
   12a54:	bl	16ebc <__sanitizer_set_report_fd@@Base+0x4408>
   12a58:	b	129f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b2c>
   12a5c:	ldr	x0, [x24]
   12a60:	ldr	x1, [sp, #120]
   12a64:	add	x0, x1, x0
   12a68:	str	x0, [x24]
   12a6c:	cbz	x1, 12a78 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1bb4>
   12a70:	cmp	x0, x21
   12a74:	b.ne	12a14 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b50>  // b.any
   12a78:	mov	w0, w26
   12a7c:	bl	16ebc <__sanitizer_set_report_fd@@Base+0x4408>
   12a80:	cbnz	w20, 12a9c <__sanitizer_cov_trace_pc_guard_init@@Base+0x1bd8>
   12a84:	lsl	x19, x19, #1
   12a88:	cmp	x19, x21
   12a8c:	csel	x19, x19, x21, ls  // ls = plast
   12a90:	b	129a0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1adc>
   12a94:	mov	w20, #0x0                   	// #0
   12a98:	b	12a78 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1bb4>
   12a9c:	mov	w20, #0x1                   	// #1
   12aa0:	b	129f0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b2c>

0000000000012aa4 <__sanitizer_set_report_path@@Base>:
   12aa4:	mov	x1, x0
   12aa8:	adrp	x0, 51000 <_Unwind_Backtrace@GCC_3.3>
   12aac:	add	x0, x0, #0x3d8
   12ab0:	b	12834 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1970>

0000000000012ab4 <__sanitizer_set_report_fd@@Base>:
   12ab4:	stp	x19, x30, [sp, #-16]!
   12ab8:	adrp	x19, 51000 <_Unwind_Backtrace@GCC_3.3>
   12abc:	add	x19, x19, #0x3d8
   12ac0:	str	w0, [x19, #8]
   12ac4:	bl	154b0 <__sanitizer_set_report_fd@@Base+0x29fc>
   12ac8:	str	x0, [x19, #8208]
   12acc:	ldp	x19, x30, [sp], #16
   12ad0:	ret
   12ad4:	stp	x19, x20, [sp, #-96]!
   12ad8:	stp	x21, x22, [sp, #16]
   12adc:	stp	x23, x24, [sp, #32]
   12ae0:	stp	x25, x26, [sp, #48]
   12ae4:	str	x30, [sp, #64]
   12ae8:	str	xzr, [x1, #16]
   12aec:	cbz	x2, 12c10 <__sanitizer_set_report_fd@@Base+0x15c>
   12af0:	mov	x25, x3
   12af4:	mov	x19, x0
   12af8:	mov	x20, x1
   12afc:	mov	x21, x2
   12b00:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   12b04:	mov	x24, x0
   12b08:	mov	x2, x25
   12b0c:	mov	x0, x19
   12b10:	mov	w1, #0x0                   	// #0
   12b14:	bl	16e6c <__sanitizer_set_report_fd@@Base+0x43b8>
   12b18:	mov	w23, w0
   12b1c:	cmn	w0, #0x1
   12b20:	b.eq	12c18 <__sanitizer_set_report_fd@@Base+0x164>  // b.none
   12b24:	add	x26, sp, #0x58
   12b28:	mov	x19, #0x0                   	// #0
   12b2c:	cmp	x19, x21
   12b30:	b.cs	12bfc <__sanitizer_set_report_fd@@Base+0x148>  // b.hs, b.nlast
   12b34:	ldr	x0, [x20, #16]
   12b38:	cmp	x19, x0
   12b3c:	b.cc	12b5c <__sanitizer_set_report_fd@@Base+0xa8>  // b.lo, b.ul, b.last
   12b40:	lsl	x1, x19, #1
   12b44:	mov	x0, x20
   12b48:	cmp	x1, x24
   12b4c:	csel	x1, x1, x24, cs  // cs = hs, nlast
   12b50:	cmp	x1, x21
   12b54:	csel	x1, x1, x21, ls  // ls = plast
   12b58:	bl	12d98 <__sanitizer_set_report_fd@@Base+0x2e4>
   12b5c:	ldr	x2, [x20, #16]
   12b60:	cmp	x19, x2
   12b64:	b.cc	12b88 <__sanitizer_set_report_fd@@Base+0xd4>  // b.lo, b.ul, b.last
   12b68:	mov	x4, x2
   12b6c:	mov	x3, x19
   12b70:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12b74:	add	x2, x2, #0xcf0
   12b78:	mov	w1, #0x98                  	// #152
   12b7c:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12b80:	add	x0, x0, #0xd10
   12b84:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   12b88:	cmp	x21, x2
   12b8c:	b.cs	12ba8 <__sanitizer_set_report_fd@@Base+0xf4>  // b.hs, b.nlast
   12b90:	mov	x3, x2
   12b94:	mov	x4, x21
   12b98:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12b9c:	mov	w1, #0x99                  	// #153
   12ba0:	add	x2, x2, #0xd4c
   12ba4:	b	12b7c <__sanitizer_set_report_fd@@Base+0xc8>
   12ba8:	ldr	x1, [x20]
   12bac:	mov	x4, x25
   12bb0:	mov	x3, x26
   12bb4:	sub	x2, x2, x19
   12bb8:	mov	w0, w23
   12bbc:	add	x1, x1, x19
   12bc0:	bl	16ec0 <__sanitizer_set_report_fd@@Base+0x440c>
   12bc4:	ands	w22, w0, #0xff
   12bc8:	b.ne	12bf0 <__sanitizer_set_report_fd@@Base+0x13c>  // b.any
   12bcc:	mov	w0, w23
   12bd0:	bl	16ebc <__sanitizer_set_report_fd@@Base+0x4408>
   12bd4:	mov	w0, w22
   12bd8:	ldp	x21, x22, [sp, #16]
   12bdc:	ldp	x23, x24, [sp, #32]
   12be0:	ldp	x25, x26, [sp, #48]
   12be4:	ldr	x30, [sp, #64]
   12be8:	ldp	x19, x20, [sp], #96
   12bec:	ret
   12bf0:	ldr	x0, [sp, #88]
   12bf4:	add	x19, x19, x0
   12bf8:	cbnz	x0, 12b2c <__sanitizer_set_report_fd@@Base+0x78>
   12bfc:	mov	w0, w23
   12c00:	bl	16ebc <__sanitizer_set_report_fd@@Base+0x4408>
   12c04:	mov	x1, x19
   12c08:	mov	x0, x20
   12c0c:	bl	12d98 <__sanitizer_set_report_fd@@Base+0x2e4>
   12c10:	mov	w22, #0x1                   	// #1
   12c14:	b	12bd4 <__sanitizer_set_report_fd@@Base+0x120>
   12c18:	mov	w22, #0x0                   	// #0
   12c1c:	b	12bd4 <__sanitizer_set_report_fd@@Base+0x120>
   12c20:	stp	x19, x20, [sp, #-112]!
   12c24:	stp	x21, x22, [sp, #16]
   12c28:	mov	x21, x0
   12c2c:	stp	x23, x24, [sp, #32]
   12c30:	stp	x25, x26, [sp, #48]
   12c34:	str	x30, [sp, #64]
   12c38:	bl	150d8 <__sanitizer_set_report_fd@@Base+0x2624>
   12c3c:	tst	w0, #0xff
   12c40:	b.eq	12c6c <__sanitizer_set_report_fd@@Base+0x1b8>  // b.none
   12c44:	mov	x0, x21
   12c48:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   12c4c:	mov	x19, x0
   12c50:	mov	x0, x19
   12c54:	ldp	x21, x22, [sp, #16]
   12c58:	ldp	x23, x24, [sp, #32]
   12c5c:	ldp	x25, x26, [sp, #48]
   12c60:	ldr	x30, [sp, #64]
   12c64:	ldp	x19, x20, [sp], #112
   12c68:	ret
   12c6c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   12c70:	add	x0, x0, #0x4bf
   12c74:	bl	15190 <__sanitizer_set_report_fd@@Base+0x26dc>
   12c78:	mov	x19, x0
   12c7c:	cbz	x0, 12c50 <__sanitizer_set_report_fd@@Base+0x19c>
   12c80:	add	x22, sp, #0x58
   12c84:	mov	x0, x21
   12c88:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   12c8c:	mov	x23, x0
   12c90:	mov	x1, #0x1000                	// #4096
   12c94:	mov	x0, x22
   12c98:	stp	xzr, xzr, [sp, #88]
   12c9c:	mov	w26, #0x2f                  	// #47
   12ca0:	str	xzr, [sp, #104]
   12ca4:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   12ca8:	mov	x0, x22
   12cac:	mov	x1, #0x1000                	// #4096
   12cb0:	bl	12d98 <__sanitizer_set_report_fd@@Base+0x2e4>
   12cb4:	mov	x0, x19
   12cb8:	mov	w1, #0x3a                  	// #58
   12cbc:	bl	14540 <__sanitizer_set_report_fd@@Base+0x1a8c>
   12cc0:	sub	x24, x0, x19
   12cc4:	add	x25, x23, x24
   12cc8:	mov	x20, x0
   12ccc:	add	x0, x25, #0x2
   12cd0:	cmp	x0, #0x1, lsl #12
   12cd4:	b.hi	12d48 <__sanitizer_set_report_fd@@Base+0x294>  // b.pmore
   12cd8:	ldr	x0, [sp, #88]
   12cdc:	mov	x2, x24
   12ce0:	mov	x1, x19
   12ce4:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   12ce8:	mov	x1, x24
   12cec:	mov	x0, x22
   12cf0:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x2ac>
   12cf4:	strb	w26, [x0]
   12cf8:	add	x1, x24, #0x1
   12cfc:	mov	x0, x22
   12d00:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x2ac>
   12d04:	mov	x2, x23
   12d08:	mov	x1, x21
   12d0c:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   12d10:	add	x1, x25, #0x1
   12d14:	mov	x0, x22
   12d18:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x2ac>
   12d1c:	strb	wzr, [x0]
   12d20:	ldr	x0, [sp, #88]
   12d24:	bl	150d8 <__sanitizer_set_report_fd@@Base+0x2624>
   12d28:	tst	w0, #0xff
   12d2c:	b.eq	12d48 <__sanitizer_set_report_fd@@Base+0x294>  // b.none
   12d30:	ldr	x0, [sp, #88]
   12d34:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   12d38:	mov	x19, x0
   12d3c:	ldp	x0, x1, [sp, #88]
   12d40:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   12d44:	b	12c50 <__sanitizer_set_report_fd@@Base+0x19c>
   12d48:	ldrb	w0, [x20]
   12d4c:	cbz	w0, 12d58 <__sanitizer_set_report_fd@@Base+0x2a4>
   12d50:	add	x19, x20, #0x1
   12d54:	b	12cb4 <__sanitizer_set_report_fd@@Base+0x200>
   12d58:	mov	x19, #0x0                   	// #0
   12d5c:	b	12d3c <__sanitizer_set_report_fd@@Base+0x288>
   12d60:	ldr	x4, [x0, #16]
   12d64:	mov	x3, x1
   12d68:	cmp	x1, x4
   12d6c:	b.cc	12d8c <__sanitizer_set_report_fd@@Base+0x2d8>  // b.lo, b.ul, b.last
   12d70:	str	x30, [sp, #-16]!
   12d74:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   12d78:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   12d7c:	add	x2, x2, #0x317
   12d80:	add	x0, x0, #0x5c5
   12d84:	mov	w1, #0x1b6                 	// #438
   12d88:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   12d8c:	ldr	x0, [x0]
   12d90:	add	x0, x0, x1
   12d94:	ret
   12d98:	stp	x19, x20, [sp, #-32]!
   12d9c:	mov	x19, x0
   12da0:	mov	x20, x1
   12da4:	ldr	x2, [x0, #16]
   12da8:	str	x30, [sp, #16]
   12dac:	cmp	x2, x1
   12db0:	b.cs	12ddc <__sanitizer_set_report_fd@@Base+0x328>  // b.hs, b.nlast
   12db4:	ldr	x2, [x0, #8]
   12db8:	cmp	x1, x2
   12dbc:	b.ls	12dc4 <__sanitizer_set_report_fd@@Base+0x310>  // b.plast
   12dc0:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   12dc4:	ldr	x3, [x19]
   12dc8:	mov	w1, #0x0                   	// #0
   12dcc:	ldr	x0, [x19, #16]
   12dd0:	sub	x2, x20, x0
   12dd4:	add	x0, x3, x0
   12dd8:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   12ddc:	ldr	x30, [sp, #16]
   12de0:	str	x20, [x19, #16]
   12de4:	ldp	x19, x20, [sp], #32
   12de8:	ret
   12dec:	stp	x19, x20, [sp, #-48]!
   12df0:	mov	x19, x0
   12df4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12df8:	mov	x20, x1
   12dfc:	mov	x1, #0x10                  	// #16
   12e00:	ldr	x0, [x0, #3456]
   12e04:	stp	x21, x22, [sp, #16]
   12e08:	mov	x21, x2
   12e0c:	mov	x22, x3
   12e10:	str	x30, [sp, #32]
   12e14:	bl	e5ec <__sancov_default_options@@Base+0x168>
   12e18:	mov	x2, x0
   12e1c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   12e20:	add	x0, x0, #0xb80
   12e24:	ldr	x30, [sp, #32]
   12e28:	stp	x0, x22, [x2]
   12e2c:	mov	x3, x21
   12e30:	mov	x1, x20
   12e34:	mov	x0, x19
   12e38:	ldp	x21, x22, [sp, #16]
   12e3c:	ldp	x19, x20, [sp], #48
   12e40:	b	14200 <__sanitizer_set_report_fd@@Base+0x174c>
   12e44:	stp	x19, x20, [sp, #-48]!
   12e48:	mov	x19, x0
   12e4c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12e50:	mov	x20, x1
   12e54:	mov	x1, #0x10                  	// #16
   12e58:	ldr	x0, [x0, #3456]
   12e5c:	stp	x21, x22, [sp, #16]
   12e60:	mov	x21, x2
   12e64:	mov	x22, x3
   12e68:	str	x30, [sp, #32]
   12e6c:	bl	e5ec <__sancov_default_options@@Base+0x168>
   12e70:	mov	x2, x0
   12e74:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   12e78:	add	x0, x0, #0xb98
   12e7c:	ldr	x30, [sp, #32]
   12e80:	stp	x0, x22, [x2]
   12e84:	mov	x3, x21
   12e88:	mov	x1, x20
   12e8c:	mov	x0, x19
   12e90:	ldp	x21, x22, [sp, #16]
   12e94:	ldp	x19, x20, [sp], #48
   12e98:	b	14200 <__sanitizer_set_report_fd@@Base+0x174c>
   12e9c:	stp	x19, x20, [sp, #-48]!
   12ea0:	mov	x19, x0
   12ea4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12ea8:	mov	x20, x1
   12eac:	mov	x1, #0x10                  	// #16
   12eb0:	ldr	x0, [x0, #3456]
   12eb4:	stp	x21, x22, [sp, #16]
   12eb8:	mov	x21, x2
   12ebc:	mov	x22, x3
   12ec0:	str	x30, [sp, #32]
   12ec4:	bl	e5ec <__sancov_default_options@@Base+0x168>
   12ec8:	mov	x2, x0
   12ecc:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   12ed0:	add	x0, x0, #0xbb0
   12ed4:	ldr	x30, [sp, #32]
   12ed8:	stp	x0, x22, [x2]
   12edc:	mov	x3, x21
   12ee0:	mov	x1, x20
   12ee4:	mov	x0, x19
   12ee8:	ldp	x21, x22, [sp, #16]
   12eec:	ldp	x19, x20, [sp], #48
   12ef0:	b	14200 <__sanitizer_set_report_fd@@Base+0x174c>
   12ef4:	stp	x19, x20, [sp, #-48]!
   12ef8:	mov	x19, x0
   12efc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12f00:	mov	x20, x1
   12f04:	mov	x1, #0x10                  	// #16
   12f08:	ldr	x0, [x0, #3456]
   12f0c:	stp	x21, x22, [sp, #16]
   12f10:	mov	x21, x2
   12f14:	mov	x22, x3
   12f18:	str	x30, [sp, #32]
   12f1c:	bl	e5ec <__sancov_default_options@@Base+0x168>
   12f20:	mov	x2, x0
   12f24:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   12f28:	add	x0, x0, #0xc70
   12f2c:	ldr	x30, [sp, #32]
   12f30:	stp	x0, x22, [x2]
   12f34:	mov	x3, x21
   12f38:	mov	x1, x20
   12f3c:	mov	x0, x19
   12f40:	ldp	x21, x22, [sp, #16]
   12f44:	ldp	x19, x20, [sp], #48
   12f48:	b	14200 <__sanitizer_set_report_fd@@Base+0x174c>
   12f4c:	stp	x19, x20, [sp, #-48]!
   12f50:	mov	x19, x0
   12f54:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   12f58:	mov	x20, x1
   12f5c:	mov	x1, #0x10                  	// #16
   12f60:	ldr	x0, [x0, #3456]
   12f64:	stp	x21, x22, [sp, #16]
   12f68:	mov	x21, x2
   12f6c:	mov	x22, x3
   12f70:	str	x30, [sp, #32]
   12f74:	bl	e5ec <__sancov_default_options@@Base+0x168>
   12f78:	mov	x2, x0
   12f7c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   12f80:	add	x0, x0, #0xc88
   12f84:	ldr	x30, [sp, #32]
   12f88:	stp	x0, x22, [x2]
   12f8c:	mov	x3, x21
   12f90:	mov	x1, x20
   12f94:	mov	x0, x19
   12f98:	ldp	x21, x22, [sp, #16]
   12f9c:	ldp	x19, x20, [sp], #48
   12fa0:	b	14200 <__sanitizer_set_report_fd@@Base+0x174c>
   12fa4:	mov	w1, #0x1                   	// #1
   12fa8:	strb	w1, [x0]
   12fac:	strb	w1, [x0, #60]
   12fb0:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   12fb4:	strb	w1, [x0, #68]
   12fb8:	mov	x1, #0x100000001           	// #4294967297
   12fbc:	stp	x1, xzr, [x0, #72]
   12fc0:	mov	x1, #0x100000000           	// #4294967296
   12fc4:	add	x2, x2, #0x60f
   12fc8:	str	x1, [x0, #88]
   12fcc:	mov	w1, #0x101                 	// #257
   12fd0:	strh	w1, [x0, #96]
   12fd4:	mov	x1, #0x10000               	// #65536
   12fd8:	str	x1, [x0, #104]
   12fdc:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   12fe0:	add	x1, x1, #0xdd8
   12fe4:	str	x1, [x0, #112]
   12fe8:	mov	w1, #0x1388                	// #5000
   12fec:	str	w1, [x0, #156]
   12ff0:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   12ff4:	add	x1, x1, #0x2a6
   12ff8:	str	x1, [x0, #168]
   12ffc:	mov	w1, #0x100                 	// #256
   13000:	movk	w1, #0x101, lsl #16
   13004:	str	x2, [x0, #24]
   13008:	mov	x2, #0x10000               	// #65536
   1300c:	str	w1, [x0, #176]
   13010:	movk	x2, #0x1, lsl #32
   13014:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13018:	add	x1, x1, #0xddd
   1301c:	str	x2, [x0, #32]
   13020:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13024:	add	x2, x2, #0xcd8
   13028:	str	x1, [x0, #192]
   1302c:	mov	x1, #0x101010101010101     	// #72340172838076673
   13030:	movk	x1, #0x1
   13034:	str	x2, [x0, #40]
   13038:	mov	x2, #0x10100000000         	// #1103806595072
   1303c:	str	x1, [x0, #200]
   13040:	movk	x2, #0x1, lsl #48
   13044:	mov	x1, #0x101010101010101     	// #72340172838076673
   13048:	movk	x1, #0x1, lsl #48
   1304c:	str	xzr, [x0, #8]
   13050:	strb	wzr, [x0, #16]
   13054:	strh	wzr, [x0, #48]
   13058:	stur	x2, [x0, #52]
   1305c:	mov	w2, #0x1                   	// #1
   13060:	str	wzr, [x0, #64]
   13064:	strb	wzr, [x0, #98]
   13068:	strh	wzr, [x0, #120]
   1306c:	strb	wzr, [x0, #122]
   13070:	stp	xzr, xzr, [x0, #128]
   13074:	str	xzr, [x0, #144]
   13078:	strb	wzr, [x0, #152]
   1307c:	strh	w2, [x0, #160]
   13080:	strh	w2, [x0, #180]
   13084:	str	wzr, [x0, #184]
   13088:	str	x1, [x0, #208]
   1308c:	mov	x1, #0x1                   	// #1
   13090:	movk	x1, #0x100, lsl #32
   13094:	str	x1, [x0, #216]
   13098:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1309c:	add	x1, x1, #0x81c
   130a0:	str	x1, [x0, #224]
   130a4:	mov	w1, #0x100                 	// #256
   130a8:	strh	w1, [x0, #232]
   130ac:	strb	wzr, [x0, #234]
   130b0:	ret
   130b4:	mov	x2, #0xf0                  	// #240
   130b8:	b	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   130bc:	stp	x19, x20, [sp, #-80]!
   130c0:	sub	x2, x2, #0x1
   130c4:	mov	x20, x0
   130c8:	mov	x19, x1
   130cc:	stp	x21, x22, [sp, #16]
   130d0:	add	x21, x1, x2
   130d4:	mov	w22, #0xa                   	// #10
   130d8:	str	x30, [sp, #32]
   130dc:	ldrb	w0, [x20]
   130e0:	cmp	x19, x21
   130e4:	cbz	w0, 131a0 <__sanitizer_set_report_fd@@Base+0x6ec>
   130e8:	b.cs	131a4 <__sanitizer_set_report_fd@@Base+0x6f0>  // b.hs, b.nlast
   130ec:	cmp	w0, #0x25
   130f0:	b.eq	13100 <__sanitizer_set_report_fd@@Base+0x64c>  // b.none
   130f4:	add	x20, x20, #0x1
   130f8:	strb	w0, [x19], #1
   130fc:	b	130dc <__sanitizer_set_report_fd@@Base+0x628>
   13100:	ldrb	w1, [x20, #1]
   13104:	cmp	w1, #0x62
   13108:	b.eq	13154 <__sanitizer_set_report_fd@@Base+0x6a0>  // b.none
   1310c:	cmp	w1, #0x70
   13110:	b.ne	130f4 <__sanitizer_set_report_fd@@Base+0x640>  // b.any
   13114:	bl	154b0 <__sanitizer_set_report_fd@@Base+0x29fc>
   13118:	add	x1, sp, #0x50
   1311c:	sdiv	w2, w0, w22
   13120:	msub	w0, w2, w22, w0
   13124:	add	w0, w0, #0x30
   13128:	strb	w0, [x1, #-1]!
   1312c:	mov	w0, w2
   13130:	cbnz	w2, 1311c <__sanitizer_set_report_fd@@Base+0x668>
   13134:	add	x0, sp, #0x50
   13138:	cmp	x1, x0
   1313c:	b.cs	13198 <__sanitizer_set_report_fd@@Base+0x6e4>  // b.hs, b.nlast
   13140:	cmp	x19, x21
   13144:	b.cs	13198 <__sanitizer_set_report_fd@@Base+0x6e4>  // b.hs, b.nlast
   13148:	ldrb	w0, [x1], #1
   1314c:	strb	w0, [x19], #1
   13150:	b	13134 <__sanitizer_set_report_fd@@Base+0x680>
   13154:	bl	10558 <__sancov_default_options@@Base+0x20d4>
   13158:	cbnz	x0, 1317c <__sanitizer_set_report_fd@@Base+0x6c8>
   1315c:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13160:	add	x2, x2, #0xde5
   13164:	mov	x4, #0x0                   	// #0
   13168:	mov	x3, #0x0                   	// #0
   1316c:	mov	w1, #0x2e                  	// #46
   13170:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13174:	add	x0, x0, #0xdf5
   13178:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1317c:	ldrb	w1, [x0]
   13180:	cbz	w1, 13198 <__sanitizer_set_report_fd@@Base+0x6e4>
   13184:	cmp	x19, x21
   13188:	b.cs	13198 <__sanitizer_set_report_fd@@Base+0x6e4>  // b.hs, b.nlast
   1318c:	add	x0, x0, #0x1
   13190:	strb	w1, [x19], #1
   13194:	b	1317c <__sanitizer_set_report_fd@@Base+0x6c8>
   13198:	add	x20, x20, #0x2
   1319c:	b	130dc <__sanitizer_set_report_fd@@Base+0x628>
   131a0:	b.cc	131bc <__sanitizer_set_report_fd@@Base+0x708>  // b.lo, b.ul, b.last
   131a4:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   131a8:	mov	x4, #0x0                   	// #0
   131ac:	add	x2, x2, #0xe32
   131b0:	mov	x3, #0x0                   	// #0
   131b4:	mov	w1, #0x46                  	// #70
   131b8:	b	13170 <__sanitizer_set_report_fd@@Base+0x6bc>
   131bc:	strb	wzr, [x19]
   131c0:	ldp	x21, x22, [sp, #16]
   131c4:	ldr	x30, [sp, #32]
   131c8:	ldp	x19, x20, [sp], #80
   131cc:	ret
   131d0:	stp	x19, x20, [sp, #-32]!
   131d4:	mov	x1, #0x18                  	// #24
   131d8:	mov	x19, x0
   131dc:	stp	x21, x30, [sp, #16]
   131e0:	adrp	x21, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   131e4:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   131e8:	ldr	x21, [x21, #3456]
   131ec:	add	x20, x20, #0xca0
   131f0:	mov	x0, x21
   131f4:	bl	e5ec <__sancov_default_options@@Base+0x168>
   131f8:	mov	x2, x0
   131fc:	strb	wzr, [x0, #16]
   13200:	adrp	x3, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13204:	add	x3, x3, #0xe4f
   13208:	mov	x0, x19
   1320c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13210:	stp	x20, x19, [x2]
   13214:	add	x1, x1, #0xe75
   13218:	bl	14200 <__sanitizer_set_report_fd@@Base+0x174c>
   1321c:	mov	x0, x21
   13220:	mov	x1, #0x18                  	// #24
   13224:	bl	e5ec <__sancov_default_options@@Base+0x168>
   13228:	mov	x2, x0
   1322c:	mov	w0, #0x1                   	// #1
   13230:	adrp	x3, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13234:	ldp	x21, x30, [sp, #16]
   13238:	stp	x20, x19, [x2]
   1323c:	add	x3, x3, #0xe7d
   13240:	strb	w0, [x2, #16]
   13244:	mov	x0, x19
   13248:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1324c:	add	x1, x1, #0xeb2
   13250:	ldp	x19, x20, [sp], #32
   13254:	b	14200 <__sanitizer_set_report_fd@@Base+0x174c>
   13258:	stp	x19, x20, [sp, #-32]!
   1325c:	mov	x3, x1
   13260:	mov	x20, x0
   13264:	mov	x19, x1
   13268:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1326c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   13270:	add	x2, x2, #0xec4
   13274:	add	x1, x1, #0xfc3
   13278:	str	x30, [sp, #16]
   1327c:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13280:	add	x3, x19, #0x8
   13284:	mov	x0, x20
   13288:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1328c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13290:	add	x2, x2, #0xf36
   13294:	add	x1, x1, #0xf8c
   13298:	bl	12e44 <__sanitizer_set_report_fd@@Base+0x390>
   1329c:	add	x3, x19, #0x10
   132a0:	mov	x0, x20
   132a4:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   132a8:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   132ac:	add	x2, x2, #0xfa5
   132b0:	add	x1, x1, #0x3f
   132b4:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   132b8:	add	x3, x19, #0x18
   132bc:	mov	x0, x20
   132c0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   132c4:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   132c8:	add	x2, x2, #0x4f
   132cc:	add	x1, x1, #0x84
   132d0:	bl	12e44 <__sanitizer_set_report_fd@@Base+0x390>
   132d4:	add	x3, x19, #0x20
   132d8:	mov	x0, x20
   132dc:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   132e0:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   132e4:	add	x2, x2, #0x96
   132e8:	add	x1, x1, #0xea
   132ec:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   132f0:	add	x3, x19, #0x21
   132f4:	mov	x0, x20
   132f8:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   132fc:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13300:	add	x2, x2, #0xff
   13304:	add	x1, x1, #0x148
   13308:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   1330c:	add	x3, x19, #0x22
   13310:	mov	x0, x20
   13314:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13318:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1331c:	add	x2, x2, #0x15d
   13320:	add	x1, x1, #0x1a5
   13324:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13328:	add	x3, x19, #0x23
   1332c:	mov	x0, x20
   13330:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13334:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13338:	add	x2, x2, #0x1bb
   1333c:	add	x1, x1, #0x1e0
   13340:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13344:	add	x3, x19, #0x24
   13348:	mov	x0, x20
   1334c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13350:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13354:	add	x2, x2, #0x1ed
   13358:	add	x1, x1, #0x22f
   1335c:	bl	12e9c <__sanitizer_set_report_fd@@Base+0x3e8>
   13360:	add	x3, x19, #0x28
   13364:	mov	x0, x20
   13368:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1336c:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13370:	add	x2, x2, #0x243
   13374:	add	x1, x1, #0x2a8
   13378:	bl	12e44 <__sanitizer_set_report_fd@@Base+0x390>
   1337c:	add	x3, x19, #0x30
   13380:	mov	x0, x20
   13384:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13388:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1338c:	add	x2, x2, #0x2b1
   13390:	add	x1, x1, #0x325
   13394:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13398:	add	x3, x19, #0x31
   1339c:	mov	x0, x20
   133a0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   133a4:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   133a8:	add	x2, x2, #0x332
   133ac:	add	x1, x1, #0x37e
   133b0:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   133b4:	add	x3, x19, #0x34
   133b8:	mov	x0, x20
   133bc:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   133c0:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   133c4:	add	x2, x2, #0x38c
   133c8:	add	x1, x1, #0x3d1
   133cc:	bl	12e9c <__sanitizer_set_report_fd@@Base+0x3e8>
   133d0:	add	x3, x19, #0x38
   133d4:	mov	x0, x20
   133d8:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   133dc:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   133e0:	add	x2, x2, #0x3db
   133e4:	add	x1, x1, #0x448
   133e8:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   133ec:	add	x3, x19, #0x39
   133f0:	mov	x0, x20
   133f4:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   133f8:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   133fc:	add	x2, x2, #0x452
   13400:	add	x1, x1, #0x470
   13404:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13408:	add	x3, x19, #0x3a
   1340c:	mov	x0, x20
   13410:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13414:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13418:	add	x2, x2, #0x47d
   1341c:	add	x1, x1, #0x51c
   13420:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13424:	add	x3, x19, #0x3b
   13428:	mov	x0, x20
   1342c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13430:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13434:	add	x2, x2, #0x52f
   13438:	add	x1, x1, #0x57b
   1343c:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13440:	add	x3, x19, #0x3c
   13444:	mov	x0, x20
   13448:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1344c:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13450:	add	x2, x2, #0x595
   13454:	add	x1, x1, #0x5de
   13458:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   1345c:	add	x3, x19, #0x40
   13460:	mov	x0, x20
   13464:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13468:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1346c:	add	x2, x2, #0x5ec
   13470:	add	x1, x1, #0x650
   13474:	bl	12e9c <__sanitizer_set_report_fd@@Base+0x3e8>
   13478:	add	x3, x19, #0x44
   1347c:	mov	x0, x20
   13480:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13484:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13488:	add	x2, x2, #0x661
   1348c:	add	x1, x1, #0x679
   13490:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13494:	add	x3, x19, #0x48
   13498:	mov	x0, x20
   1349c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   134a0:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   134a4:	add	x2, x2, #0x686
   134a8:	add	x1, x1, #0x741
   134ac:	bl	12ef4 <__sanitizer_set_report_fd@@Base+0x440>
   134b0:	add	x3, x19, #0x4c
   134b4:	mov	x0, x20
   134b8:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   134bc:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   134c0:	add	x2, x2, #0x74d
   134c4:	add	x1, x1, #0x807
   134c8:	bl	12ef4 <__sanitizer_set_report_fd@@Base+0x440>
   134cc:	add	x3, x19, #0x50
   134d0:	mov	x0, x20
   134d4:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   134d8:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   134dc:	add	x2, x2, #0x815
   134e0:	add	x1, x1, #0x8d0
   134e4:	bl	12ef4 <__sanitizer_set_report_fd@@Base+0x440>
   134e8:	add	x3, x19, #0x54
   134ec:	mov	x0, x20
   134f0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   134f4:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   134f8:	add	x2, x2, #0x8dd
   134fc:	add	x1, x1, #0x997
   13500:	bl	12ef4 <__sanitizer_set_report_fd@@Base+0x440>
   13504:	add	x3, x19, #0x58
   13508:	mov	x0, x20
   1350c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13510:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13514:	add	x2, x2, #0x9a5
   13518:	add	x1, x1, #0xa60
   1351c:	bl	12ef4 <__sanitizer_set_report_fd@@Base+0x440>
   13520:	add	x3, x19, #0x5c
   13524:	mov	x0, x20
   13528:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1352c:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13530:	add	x2, x2, #0xa6f
   13534:	add	x1, x1, #0xb29
   13538:	bl	12ef4 <__sanitizer_set_report_fd@@Base+0x440>
   1353c:	add	x3, x19, #0x60
   13540:	mov	x0, x20
   13544:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13548:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1354c:	add	x2, x2, #0xb37
   13550:	add	x1, x1, #0xba1
   13554:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13558:	add	x3, x19, #0x61
   1355c:	mov	x0, x20
   13560:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13564:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13568:	add	x2, x2, #0xbb9
   1356c:	add	x1, x1, #0xbeb
   13570:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13574:	add	x3, x19, #0x62
   13578:	mov	x0, x20
   1357c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13580:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13584:	add	x2, x2, #0xbfb
   13588:	add	x1, x1, #0xc22
   1358c:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13590:	add	x3, x19, #0x68
   13594:	mov	x0, x20
   13598:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1359c:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   135a0:	add	x2, x2, #0xc33
   135a4:	add	x1, x1, #0xca8
   135a8:	bl	12f4c <__sanitizer_set_report_fd@@Base+0x498>
   135ac:	add	x3, x19, #0x70
   135b0:	mov	x0, x20
   135b4:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   135b8:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   135bc:	add	x2, x2, #0xcc4
   135c0:	add	x1, x1, #0xceb
   135c4:	bl	12e44 <__sanitizer_set_report_fd@@Base+0x390>
   135c8:	add	x3, x19, #0x78
   135cc:	mov	x0, x20
   135d0:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   135d4:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   135d8:	add	x2, x2, #0xcf1
   135dc:	add	x1, x1, #0xd35
   135e0:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   135e4:	add	x3, x19, #0x79
   135e8:	mov	x0, x20
   135ec:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   135f0:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   135f4:	add	x2, x2, #0xd49
   135f8:	add	x1, x1, #0xd63
   135fc:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13600:	add	x3, x19, #0x7a
   13604:	mov	x0, x20
   13608:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1360c:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   13610:	add	x2, x2, #0xd7a
   13614:	add	x1, x1, #0xfdf
   13618:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   1361c:	add	x3, x19, #0x80
   13620:	mov	x0, x20
   13624:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13628:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1362c:	add	x2, x2, #0xd97
   13630:	add	x1, x1, #0x655
   13634:	bl	12f4c <__sanitizer_set_report_fd@@Base+0x498>
   13638:	add	x3, x19, #0x88
   1363c:	mov	x0, x20
   13640:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13644:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13648:	add	x2, x2, #0xe0d
   1364c:	add	x1, x1, #0xea6
   13650:	bl	12f4c <__sanitizer_set_report_fd@@Base+0x498>
   13654:	add	x3, x19, #0x90
   13658:	mov	x0, x20
   1365c:	adrp	x2, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   13660:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13664:	add	x2, x2, #0xeb8
   13668:	add	x1, x1, #0x18
   1366c:	bl	12f4c <__sanitizer_set_report_fd@@Base+0x498>
   13670:	add	x3, x19, #0x98
   13674:	mov	x0, x20
   13678:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1367c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13680:	add	x2, x2, #0x2a
   13684:	add	x1, x1, #0x50
   13688:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   1368c:	add	x3, x19, #0x9c
   13690:	mov	x0, x20
   13694:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13698:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1369c:	add	x2, x2, #0x5d
   136a0:	add	x1, x1, #0x12b
   136a4:	bl	12e9c <__sanitizer_set_report_fd@@Base+0x3e8>
   136a8:	add	x3, x19, #0xa0
   136ac:	mov	x0, x20
   136b0:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   136b4:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   136b8:	add	x2, x2, #0x14f
   136bc:	add	x1, x1, #0x1a8
   136c0:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   136c4:	add	x3, x19, #0xa1
   136c8:	mov	x0, x20
   136cc:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   136d0:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   136d4:	add	x2, x2, #0x1c0
   136d8:	add	x1, x1, #0x23f
   136dc:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   136e0:	add	x3, x19, #0xa8
   136e4:	mov	x0, x20
   136e8:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   136ec:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   136f0:	add	x2, x2, #0x248
   136f4:	add	x1, x1, #0x290
   136f8:	bl	12e44 <__sanitizer_set_report_fd@@Base+0x390>
   136fc:	add	x3, x19, #0xb0
   13700:	mov	x0, x20
   13704:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13708:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1370c:	add	x2, x2, #0x29d
   13710:	add	x1, x1, #0x2ff
   13714:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13718:	add	x3, x19, #0xb1
   1371c:	mov	x0, x20
   13720:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13724:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13728:	add	x2, x2, #0x312
   1372c:	add	x1, x1, #0x336
   13730:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13734:	add	x3, x19, #0xb2
   13738:	mov	x0, x20
   1373c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13740:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13744:	add	x2, x2, #0x349
   13748:	add	x1, x1, #0x419
   1374c:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13750:	add	x3, x19, #0xb3
   13754:	mov	x0, x20
   13758:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1375c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13760:	add	x2, x2, #0x42a
   13764:	add	x1, x1, #0x470
   13768:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   1376c:	add	x3, x19, #0xb4
   13770:	mov	x0, x20
   13774:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13778:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1377c:	add	x2, x2, #0x482
   13780:	add	x1, x1, #0x4b9
   13784:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13788:	add	x3, x19, #0xb5
   1378c:	mov	x0, x20
   13790:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13794:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13798:	add	x2, x2, #0x4d1
   1379c:	add	x1, x1, #0x515
   137a0:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   137a4:	add	x3, x19, #0xb8
   137a8:	mov	x0, x20
   137ac:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   137b0:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   137b4:	add	x2, x2, #0x528
   137b8:	add	x1, x1, #0x5f6
   137bc:	bl	12e9c <__sanitizer_set_report_fd@@Base+0x3e8>
   137c0:	add	x3, x19, #0xc0
   137c4:	mov	x0, x20
   137c8:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   137cc:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   137d0:	add	x2, x2, #0x609
   137d4:	add	x1, x1, #0x696
   137d8:	bl	12e44 <__sanitizer_set_report_fd@@Base+0x390>
   137dc:	add	x3, x19, #0xc8
   137e0:	mov	x0, x20
   137e4:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   137e8:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   137ec:	add	x2, x2, #0x6a9
   137f0:	add	x1, x1, #0x6e0
   137f4:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   137f8:	add	x3, x19, #0xc9
   137fc:	mov	x0, x20
   13800:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13804:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13808:	add	x2, x2, #0x6f9
   1380c:	add	x1, x1, #0x739
   13810:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13814:	add	x3, x19, #0xca
   13818:	mov	x0, x20
   1381c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13820:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13824:	add	x2, x2, #0x74e
   13828:	add	x1, x1, #0x7a4
   1382c:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13830:	add	x3, x19, #0xcb
   13834:	mov	x0, x20
   13838:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1383c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13840:	add	x2, x2, #0x7b5
   13844:	add	x1, x1, #0x807
   13848:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   1384c:	add	x3, x19, #0xcc
   13850:	mov	x0, x20
   13854:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13858:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1385c:	add	x2, x2, #0x818
   13860:	add	x1, x1, #0x863
   13864:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13868:	add	x3, x19, #0xcd
   1386c:	mov	x0, x20
   13870:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13874:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13878:	add	x2, x2, #0x874
   1387c:	add	x1, x1, #0x8bb
   13880:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13884:	add	x3, x19, #0xce
   13888:	mov	x0, x20
   1388c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13890:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13894:	add	x2, x2, #0x8cd
   13898:	add	x1, x1, #0x920
   1389c:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   138a0:	add	x3, x19, #0xcf
   138a4:	mov	x0, x20
   138a8:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   138ac:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   138b0:	add	x2, x2, #0x931
   138b4:	add	x1, x1, #0x979
   138b8:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   138bc:	add	x3, x19, #0xd0
   138c0:	mov	x0, x20
   138c4:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   138c8:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   138cc:	add	x2, x2, #0x98b
   138d0:	add	x1, x1, #0x9ea
   138d4:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   138d8:	add	x3, x19, #0xd1
   138dc:	mov	x0, x20
   138e0:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   138e4:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   138e8:	add	x2, x2, #0x9fb
   138ec:	add	x1, x1, #0xa41
   138f0:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   138f4:	add	x3, x19, #0xd2
   138f8:	mov	x0, x20
   138fc:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13900:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13904:	add	x2, x2, #0xa52
   13908:	add	x1, x1, #0xaaa
   1390c:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13910:	add	x3, x19, #0xd3
   13914:	mov	x0, x20
   13918:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1391c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13920:	add	x2, x2, #0xab8
   13924:	add	x1, x1, #0xaf1
   13928:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   1392c:	add	x3, x19, #0xd4
   13930:	mov	x0, x20
   13934:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13938:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1393c:	add	x2, x2, #0xb02
   13940:	add	x1, x1, #0xb59
   13944:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13948:	add	x3, x19, #0xd5
   1394c:	mov	x0, x20
   13950:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13954:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13958:	add	x2, x2, #0xb6a
   1395c:	add	x1, x1, #0xbb0
   13960:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13964:	add	x3, x19, #0xd6
   13968:	mov	x0, x20
   1396c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13970:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13974:	add	x2, x2, #0xbbf
   13978:	add	x1, x1, #0xc05
   1397c:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13980:	add	x3, x19, #0xd7
   13984:	mov	x0, x20
   13988:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1398c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13990:	add	x2, x2, #0xc14
   13994:	add	x1, x1, #0xc64
   13998:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   1399c:	add	x3, x19, #0xd8
   139a0:	mov	x0, x20
   139a4:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   139a8:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   139ac:	add	x2, x2, #0xc77
   139b0:	add	x1, x1, #0xcb3
   139b4:	bl	12e9c <__sanitizer_set_report_fd@@Base+0x3e8>
   139b8:	add	x3, x19, #0xdc
   139bc:	mov	x0, x20
   139c0:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   139c4:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   139c8:	add	x2, x2, #0xcbc
   139cc:	add	x1, x1, #0xd0f
   139d0:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   139d4:	add	x3, x19, #0xdd
   139d8:	mov	x0, x20
   139dc:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   139e0:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   139e4:	add	x2, x2, #0xd1e
   139e8:	add	x1, x1, #0xd7f
   139ec:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   139f0:	add	x3, x19, #0xde
   139f4:	mov	x0, x20
   139f8:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   139fc:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a00:	add	x2, x2, #0xd92
   13a04:	add	x1, x1, #0xdbb
   13a08:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13a0c:	add	x3, x19, #0xdf
   13a10:	mov	x0, x20
   13a14:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a18:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a1c:	add	x2, x2, #0xdc9
   13a20:	add	x1, x1, #0xde8
   13a24:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13a28:	add	x3, x19, #0xe0
   13a2c:	mov	x0, x20
   13a30:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a34:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a38:	add	x2, x2, #0xdf8
   13a3c:	add	x1, x1, #0xe0e
   13a40:	bl	12e44 <__sanitizer_set_report_fd@@Base+0x390>
   13a44:	add	x3, x19, #0xe8
   13a48:	mov	x0, x20
   13a4c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a50:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a54:	add	x2, x2, #0xe1a
   13a58:	add	x1, x1, #0xe5e
   13a5c:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13a60:	add	x3, x19, #0xe9
   13a64:	mov	x0, x20
   13a68:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a6c:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a70:	add	x2, x2, #0xe75
   13a74:	add	x1, x1, #0xece
   13a78:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13a7c:	add	x3, x19, #0xea
   13a80:	mov	x0, x20
   13a84:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a88:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13a8c:	add	x2, x2, #0xedd
   13a90:	add	x1, x1, #0xf2e
   13a94:	bl	12dec <__sanitizer_set_report_fd@@Base+0x338>
   13a98:	mov	x1, x19
   13a9c:	mov	x0, x20
   13aa0:	ldr	x30, [sp, #16]
   13aa4:	ldp	x19, x20, [sp], #32
   13aa8:	b	131d0 <__sanitizer_set_report_fd@@Base+0x71c>
   13aac:	ldrb	w1, [x0, #161]
   13ab0:	ldrb	w2, [x0, #223]
   13ab4:	orr	w1, w1, w2
   13ab8:	strb	w1, [x0, #161]
   13abc:	ldr	w1, [x0, #52]
   13ac0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13ac4:	ldr	x0, [x0, #3680]
   13ac8:	str	w1, [x0]
   13acc:	ret
   13ad0:	stp	x19, x20, [sp, #-48]!
   13ad4:	mov	x20, x0
   13ad8:	mov	x19, x1
   13adc:	mov	x0, x19
   13ae0:	add	x1, sp, #0x28
   13ae4:	mov	w2, #0xa                   	// #10
   13ae8:	str	x30, [sp, #16]
   13aec:	bl	14748 <__sanitizer_set_report_fd@@Base+0x1c94>
   13af0:	ldr	x1, [x20, #8]
   13af4:	str	x0, [x1]
   13af8:	ldr	x0, [sp, #40]
   13afc:	ldrb	w0, [x0]
   13b00:	cmp	w0, #0x0
   13b04:	cset	w20, eq  // eq = none
   13b08:	cbz	w0, 13b1c <__sanitizer_set_report_fd@@Base+0x1068>
   13b0c:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13b10:	mov	x1, x19
   13b14:	add	x0, x0, #0xd6c
   13b18:	bl	18af0 <OnPrint@@Base+0x288>
   13b1c:	mov	w0, w20
   13b20:	ldr	x30, [sp, #16]
   13b24:	ldp	x19, x20, [sp], #48
   13b28:	ret
   13b2c:	stp	x19, x20, [sp, #-32]!
   13b30:	mov	x20, x1
   13b34:	mov	x19, x0
   13b38:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   13b3c:	add	x1, x1, #0x81
   13b40:	str	x30, [sp, #16]
   13b44:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   13b48:	cbnz	w0, 13b60 <__sanitizer_set_report_fd@@Base+0x10ac>
   13b4c:	strb	wzr, [x20]
   13b50:	mov	w0, #0x1                   	// #1
   13b54:	ldr	x30, [sp, #16]
   13b58:	ldp	x19, x20, [sp], #32
   13b5c:	ret
   13b60:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   13b64:	mov	x0, x19
   13b68:	add	x1, x1, #0x26d
   13b6c:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   13b70:	cbz	w0, 13b4c <__sanitizer_set_report_fd@@Base+0x1098>
   13b74:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   13b78:	mov	x0, x19
   13b7c:	add	x1, x1, #0xf35
   13b80:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   13b84:	cbz	w0, 13b4c <__sanitizer_set_report_fd@@Base+0x1098>
   13b88:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   13b8c:	mov	x0, x19
   13b90:	add	x1, x1, #0x270
   13b94:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   13b98:	cbnz	w0, 13ba8 <__sanitizer_set_report_fd@@Base+0x10f4>
   13b9c:	mov	w0, #0x1                   	// #1
   13ba0:	strb	w0, [x20]
   13ba4:	b	13b50 <__sanitizer_set_report_fd@@Base+0x109c>
   13ba8:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   13bac:	mov	x0, x19
   13bb0:	add	x1, x1, #0x272
   13bb4:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   13bb8:	cbz	w0, 13b9c <__sanitizer_set_report_fd@@Base+0x10e8>
   13bbc:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   13bc0:	mov	x0, x19
   13bc4:	add	x1, x1, #0xf25
   13bc8:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   13bcc:	cbz	w0, 13b9c <__sanitizer_set_report_fd@@Base+0x10e8>
   13bd0:	mov	w0, #0x0                   	// #0
   13bd4:	b	13b54 <__sanitizer_set_report_fd@@Base+0x10a0>
   13bd8:	stp	x19, x20, [sp, #-48]!
   13bdc:	mov	x19, x1
   13be0:	add	x1, sp, #0x2f
   13be4:	stp	x21, x30, [sp, #16]
   13be8:	mov	x21, x0
   13bec:	mov	x0, x19
   13bf0:	bl	13b2c <__sanitizer_set_report_fd@@Base+0x1078>
   13bf4:	ands	w20, w0, #0xff
   13bf8:	b.eq	13c18 <__sanitizer_set_report_fd@@Base+0x1164>  // b.none
   13bfc:	ldr	x0, [x21, #8]
   13c00:	ldrb	w1, [sp, #47]
   13c04:	str	w1, [x0]
   13c08:	mov	w0, w20
   13c0c:	ldp	x21, x30, [sp, #16]
   13c10:	ldp	x19, x20, [sp], #48
   13c14:	ret
   13c18:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   13c1c:	mov	x0, x19
   13c20:	add	x1, x1, #0x72f
   13c24:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   13c28:	cbnz	w0, 13c40 <__sanitizer_set_report_fd@@Base+0x118c>
   13c2c:	ldr	x0, [x21, #8]
   13c30:	mov	w1, #0x2                   	// #2
   13c34:	mov	w20, #0x1                   	// #1
   13c38:	str	w1, [x0]
   13c3c:	b	13c08 <__sanitizer_set_report_fd@@Base+0x1154>
   13c40:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13c44:	mov	x0, x19
   13c48:	add	x1, x1, #0xd98
   13c4c:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   13c50:	cbz	w0, 13c2c <__sanitizer_set_report_fd@@Base+0x1178>
   13c54:	mov	x1, x19
   13c58:	adrp	x0, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   13c5c:	add	x0, x0, #0xda2
   13c60:	bl	18af0 <OnPrint@@Base+0x288>
   13c64:	b	13c08 <__sanitizer_set_report_fd@@Base+0x1154>
   13c68:	stp	x19, x20, [sp, #-32]!
   13c6c:	mov	x20, x1
   13c70:	mov	x19, x0
   13c74:	mov	w1, #0x25                  	// #37
   13c78:	mov	x0, x20
   13c7c:	stp	x21, x30, [sp, #16]
   13c80:	bl	1444c <__sanitizer_set_report_fd@@Base+0x1998>
   13c84:	cbnz	x0, 13ca0 <__sanitizer_set_report_fd@@Base+0x11ec>
   13c88:	ldrb	w2, [x19, #16]
   13c8c:	mov	x1, x20
   13c90:	ldr	x0, [x19, #8]
   13c94:	ldp	x21, x30, [sp, #16]
   13c98:	ldp	x19, x20, [sp], #32
   13c9c:	b	14150 <__sanitizer_set_report_fd@@Base+0x169c>
   13ca0:	mov	w2, #0x0                   	// #0
   13ca4:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13ca8:	mov	x0, #0x1000                	// #4096
   13cac:	add	x1, x1, #0xf40
   13cb0:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   13cb4:	mov	x21, x0
   13cb8:	mov	x1, x0
   13cbc:	mov	x2, #0x1000                	// #4096
   13cc0:	mov	x0, x20
   13cc4:	bl	130bc <__sanitizer_set_report_fd@@Base+0x608>
   13cc8:	ldrb	w2, [x19, #16]
   13ccc:	mov	x1, x21
   13cd0:	ldr	x0, [x19, #8]
   13cd4:	bl	14150 <__sanitizer_set_report_fd@@Base+0x169c>
   13cd8:	mov	w19, w0
   13cdc:	mov	x1, #0x1000                	// #4096
   13ce0:	mov	x0, x21
   13ce4:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   13ce8:	mov	w0, w19
   13cec:	ldp	x21, x30, [sp, #16]
   13cf0:	ldp	x19, x20, [sp], #32
   13cf4:	ret
   13cf8:	stp	x19, x20, [sp, #-32]!
   13cfc:	adrp	x19, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13d00:	add	x19, x19, #0xb78
   13d04:	stp	x21, x30, [sp, #16]
   13d08:	ldr	w1, [x19, #160]
   13d0c:	cbz	w1, 13d4c <__sanitizer_set_report_fd@@Base+0x1298>
   13d10:	adrp	x21, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13d14:	add	x21, x21, #0xf7c
   13d18:	mov	x20, #0x0                   	// #0
   13d1c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13d20:	add	x0, x0, #0xf53
   13d24:	bl	18af0 <OnPrint@@Base+0x288>
   13d28:	ldr	w0, [x19, #160]
   13d2c:	cmp	w0, w20
   13d30:	b.le	13d48 <__sanitizer_set_report_fd@@Base+0x1294>
   13d34:	ldr	x1, [x19, x20, lsl #3]
   13d38:	mov	x0, x21
   13d3c:	add	x20, x20, #0x1
   13d40:	bl	18af0 <OnPrint@@Base+0x288>
   13d44:	b	13d28 <__sanitizer_set_report_fd@@Base+0x1274>
   13d48:	str	wzr, [x19, #160]
   13d4c:	ldp	x21, x30, [sp, #16]
   13d50:	ldp	x19, x20, [sp], #32
   13d54:	ret
   13d58:	stp	x19, x20, [sp, #-32]!
   13d5c:	stp	x21, x30, [sp, #16]
   13d60:	mov	x21, x1
   13d64:	mov	x0, x21
   13d68:	mov	x1, x2
   13d6c:	bl	14650 <__sanitizer_set_report_fd@@Base+0x1b9c>
   13d70:	mov	x19, x0
   13d74:	add	x1, x0, #0x1
   13d78:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13d7c:	add	x0, x0, #0xb78
   13d80:	add	x0, x0, #0xa8
   13d84:	bl	e5ec <__sancov_default_options@@Base+0x168>
   13d88:	mov	x20, x0
   13d8c:	mov	x2, x19
   13d90:	mov	x1, x21
   13d94:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   13d98:	mov	x0, x20
   13d9c:	strb	wzr, [x20, x19]
   13da0:	ldp	x21, x30, [sp, #16]
   13da4:	ldp	x19, x20, [sp], #32
   13da8:	ret
   13dac:	stp	x19, x20, [sp, #-48]!
   13db0:	mov	x20, x0
   13db4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   13db8:	mov	x19, #0x0                   	// #0
   13dbc:	stp	x21, x22, [sp, #16]
   13dc0:	adrp	x21, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13dc4:	ldr	x0, [x0, #4008]
   13dc8:	add	x21, x21, #0xf9d
   13dcc:	mov	x22, #0x18                  	// #24
   13dd0:	ldr	x1, [x0]
   13dd4:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13dd8:	add	x0, x0, #0xf84
   13ddc:	str	x30, [sp, #32]
   13de0:	bl	18af0 <OnPrint@@Base+0x288>
   13de4:	ldr	w0, [x20, #8]
   13de8:	cmp	w0, w19
   13dec:	b.le	13e14 <__sanitizer_set_report_fd@@Base+0x1360>
   13df0:	ldr	x1, [x20]
   13df4:	mul	x0, x19, x22
   13df8:	add	x19, x19, #0x1
   13dfc:	add	x2, x1, x0
   13e00:	ldr	x1, [x1, x0]
   13e04:	mov	x0, x21
   13e08:	ldr	x2, [x2, #8]
   13e0c:	bl	18af0 <OnPrint@@Base+0x288>
   13e10:	b	13de4 <__sanitizer_set_report_fd@@Base+0x1330>
   13e14:	ldp	x21, x22, [sp, #16]
   13e18:	ldr	x30, [sp, #32]
   13e1c:	ldp	x19, x20, [sp], #48
   13e20:	ret
   13e24:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13e28:	add	x0, x0, #0xfa9
   13e2c:	str	x30, [sp, #-16]!
   13e30:	bl	18af0 <OnPrint@@Base+0x288>
   13e34:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   13e38:	and	w1, w1, #0xff
   13e3c:	cmp	w1, #0x3a
   13e40:	b.hi	13e58 <__sanitizer_set_report_fd@@Base+0x13a4>  // b.pmore
   13e44:	mov	x0, #0x400                 	// #1024
   13e48:	movk	x0, #0x1001, lsl #32
   13e4c:	movk	x0, #0x400, lsl #48
   13e50:	lsr	x0, x0, x1
   13e54:	tbnz	w0, #0, 13e68 <__sanitizer_set_report_fd@@Base+0x13b4>
   13e58:	and	w1, w1, #0xfffffffb
   13e5c:	cmp	w1, #0x9
   13e60:	cset	w0, eq  // eq = none
   13e64:	ret
   13e68:	mov	w0, #0x1                   	// #1
   13e6c:	b	13e64 <__sanitizer_set_report_fd@@Base+0x13b0>
   13e70:	ldr	x4, [x0, #16]
   13e74:	mov	x2, x0
   13e78:	str	x30, [sp, #-16]!
   13e7c:	ldr	x3, [x2, #24]
   13e80:	mov	x0, x2
   13e84:	ldrb	w1, [x4, x3]
   13e88:	bl	13e38 <__sanitizer_set_report_fd@@Base+0x1384>
   13e8c:	tst	w0, #0xff
   13e90:	b.eq	13ea0 <__sanitizer_set_report_fd@@Base+0x13ec>  // b.none
   13e94:	add	x3, x3, #0x1
   13e98:	str	x3, [x2, #24]
   13e9c:	b	13e7c <__sanitizer_set_report_fd@@Base+0x13c8>
   13ea0:	ldr	x30, [sp], #16
   13ea4:	ret
   13ea8:	stp	x19, x20, [sp, #-64]!
   13eac:	mov	x19, x0
   13eb0:	mov	x20, x1
   13eb4:	stp	x21, x22, [sp, #16]
   13eb8:	mov	x22, x2
   13ebc:	mov	x21, #0x0                   	// #0
   13ec0:	stp	x23, x24, [sp, #32]
   13ec4:	mov	x24, #0x18                  	// #24
   13ec8:	str	x30, [sp, #48]
   13ecc:	ldr	w0, [x19, #8]
   13ed0:	cmp	w0, w21
   13ed4:	b.le	13f24 <__sanitizer_set_report_fd@@Base+0x1470>
   13ed8:	mul	x23, x21, x24
   13edc:	add	x21, x21, #0x1
   13ee0:	ldr	x0, [x19]
   13ee4:	ldr	x1, [x0, x23]
   13ee8:	mov	x0, x20
   13eec:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   13ef0:	cbnz	w0, 13ecc <__sanitizer_set_report_fd@@Base+0x1418>
   13ef4:	ldr	x0, [x19]
   13ef8:	ldr	x30, [sp, #48]
   13efc:	add	x0, x0, x23
   13f00:	ldp	x23, x24, [sp, #32]
   13f04:	ldr	x0, [x0, #16]
   13f08:	ldr	x1, [x0]
   13f0c:	ldr	x2, [x1]
   13f10:	mov	x1, x22
   13f14:	ldp	x21, x22, [sp, #16]
   13f18:	mov	x16, x2
   13f1c:	ldp	x19, x20, [sp], #64
   13f20:	br	x16
   13f24:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   13f28:	add	x0, x0, #0xb78
   13f2c:	ldr	w1, [x0, #160]
   13f30:	sxtw	x3, w1
   13f34:	cmp	x3, #0x13
   13f38:	b.ls	13f58 <__sanitizer_set_report_fd@@Base+0x14a4>  // b.plast
   13f3c:	adrp	x2, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13f40:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   13f44:	add	x2, x2, #0xfb4
   13f48:	add	x0, x0, #0xfe0
   13f4c:	mov	x4, #0x14                  	// #20
   13f50:	mov	w1, #0x1e                  	// #30
   13f54:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   13f58:	add	w1, w1, #0x1
   13f5c:	str	x20, [x0, x3, lsl #3]
   13f60:	ldp	x21, x22, [sp, #16]
   13f64:	ldp	x23, x24, [sp, #32]
   13f68:	ldr	x30, [sp, #48]
   13f6c:	str	w1, [x0, #160]
   13f70:	mov	w0, #0x1                   	// #1
   13f74:	ldp	x19, x20, [sp], #64
   13f78:	ret
   13f7c:	stp	x19, x20, [sp, #-32]!
   13f80:	mov	x19, x0
   13f84:	ldp	x4, x3, [x0, #16]
   13f88:	str	x30, [sp, #16]
   13f8c:	ldr	x2, [x19, #24]
   13f90:	ldrb	w1, [x4, x2]
   13f94:	cmp	w1, #0x3d
   13f98:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   13f9c:	b.eq	13fbc <__sanitizer_set_report_fd@@Base+0x1508>  // b.none
   13fa0:	mov	x0, x19
   13fa4:	bl	13e38 <__sanitizer_set_report_fd@@Base+0x1384>
   13fa8:	tst	w0, #0xff
   13fac:	b.ne	13fc4 <__sanitizer_set_report_fd@@Base+0x1510>  // b.any
   13fb0:	add	x2, x2, #0x1
   13fb4:	str	x2, [x19, #24]
   13fb8:	b	13f8c <__sanitizer_set_report_fd@@Base+0x14d8>
   13fbc:	cmp	w1, #0x3d
   13fc0:	b.eq	13fd4 <__sanitizer_set_report_fd@@Base+0x1520>  // b.none
   13fc4:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   13fc8:	add	x1, x1, #0x23
   13fcc:	mov	x0, x19
   13fd0:	bl	13e24 <__sanitizer_set_report_fd@@Base+0x1370>
   13fd4:	sub	x2, x2, x3
   13fd8:	add	x1, x4, x3
   13fdc:	mov	x0, x19
   13fe0:	bl	13d58 <__sanitizer_set_report_fd@@Base+0x12a4>
   13fe4:	ldp	x4, x1, [x19, #16]
   13fe8:	mov	x20, x0
   13fec:	mov	w2, #0x22                  	// #34
   13ff0:	add	x3, x1, #0x1
   13ff4:	str	x3, [x19, #24]
   13ff8:	add	x5, x4, x3
   13ffc:	ldrb	w0, [x4, x3]
   14000:	cmp	w0, #0x27
   14004:	ccmp	w0, w2, #0x4, ne  // ne = any
   14008:	b.ne	14038 <__sanitizer_set_report_fd@@Base+0x1584>  // b.any
   1400c:	add	x1, x1, #0x2
   14010:	str	x1, [x19, #24]
   14014:	ldrb	w5, [x4, x3]
   14018:	ldr	x2, [x19, #24]
   1401c:	ldrb	w0, [x4, x2]
   14020:	cbz	w0, 14094 <__sanitizer_set_report_fd@@Base+0x15e0>
   14024:	cmp	w0, w5
   14028:	b.eq	140a0 <__sanitizer_set_report_fd@@Base+0x15ec>  // b.none
   1402c:	add	x2, x2, #0x1
   14030:	str	x2, [x19, #24]
   14034:	b	14018 <__sanitizer_set_report_fd@@Base+0x1564>
   14038:	ldr	x2, [x19, #24]
   1403c:	ldrb	w1, [x4, x2]
   14040:	cbz	w1, 14060 <__sanitizer_set_report_fd@@Base+0x15ac>
   14044:	mov	x0, x19
   14048:	bl	13e38 <__sanitizer_set_report_fd@@Base+0x1384>
   1404c:	tst	w0, #0xff
   14050:	b.ne	14060 <__sanitizer_set_report_fd@@Base+0x15ac>  // b.any
   14054:	add	x2, x2, #0x1
   14058:	str	x2, [x19, #24]
   1405c:	b	14038 <__sanitizer_set_report_fd@@Base+0x1584>
   14060:	sub	x2, x2, x3
   14064:	mov	x1, x5
   14068:	mov	x0, x19
   1406c:	bl	13d58 <__sanitizer_set_report_fd@@Base+0x12a4>
   14070:	mov	x2, x0
   14074:	mov	x1, x20
   14078:	mov	x0, x19
   1407c:	bl	13ea8 <__sanitizer_set_report_fd@@Base+0x13f4>
   14080:	tst	w0, #0xff
   14084:	b.ne	140c8 <__sanitizer_set_report_fd@@Base+0x1614>  // b.any
   14088:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1408c:	add	x1, x1, #0x30
   14090:	b	13fcc <__sanitizer_set_report_fd@@Base+0x1518>
   14094:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14098:	add	x1, x1, #0x45
   1409c:	b	13fcc <__sanitizer_set_report_fd@@Base+0x1518>
   140a0:	mvn	x3, x3
   140a4:	add	x1, x4, x1
   140a8:	add	x2, x3, x2
   140ac:	mov	x0, x19
   140b0:	bl	13d58 <__sanitizer_set_report_fd@@Base+0x12a4>
   140b4:	mov	x2, x0
   140b8:	ldr	x0, [x19, #24]
   140bc:	add	x0, x0, #0x1
   140c0:	str	x0, [x19, #24]
   140c4:	b	14074 <__sanitizer_set_report_fd@@Base+0x15c0>
   140c8:	ldr	x30, [sp, #16]
   140cc:	ldp	x19, x20, [sp], #32
   140d0:	ret
   140d4:	stp	x19, x30, [sp, #-16]!
   140d8:	mov	x19, x0
   140dc:	mov	x0, x19
   140e0:	bl	13e70 <__sanitizer_set_report_fd@@Base+0x13bc>
   140e4:	ldp	x1, x0, [x19, #16]
   140e8:	ldrb	w0, [x1, x0]
   140ec:	cbz	w0, 140fc <__sanitizer_set_report_fd@@Base+0x1648>
   140f0:	mov	x0, x19
   140f4:	bl	13f7c <__sanitizer_set_report_fd@@Base+0x14c8>
   140f8:	b	140dc <__sanitizer_set_report_fd@@Base+0x1628>
   140fc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14100:	ldr	x0, [x0, #4040]
   14104:	ldr	w1, [x0, #36]
   14108:	cmp	w1, #0x0
   1410c:	b.gt	14118 <__sanitizer_set_report_fd@@Base+0x1664>
   14110:	mov	w1, #0x1                   	// #1
   14114:	str	w1, [x0, #36]
   14118:	ldp	x19, x30, [sp], #16
   1411c:	ret
   14120:	cbz	x1, 1414c <__sanitizer_set_report_fd@@Base+0x1698>
   14124:	stp	x19, x20, [sp, #-32]!
   14128:	mov	x19, x0
   1412c:	stp	x21, x30, [sp, #16]
   14130:	ldp	x21, x20, [x0, #16]
   14134:	stp	x1, xzr, [x0, #16]
   14138:	bl	140d4 <__sanitizer_set_report_fd@@Base+0x1620>
   1413c:	stp	x21, x20, [x19, #16]
   14140:	ldp	x21, x30, [sp, #16]
   14144:	ldp	x19, x20, [sp], #32
   14148:	ret
   1414c:	ret
   14150:	stp	x19, x20, [sp, #-80]!
   14154:	mov	x20, x1
   14158:	stp	x21, x22, [sp, #16]
   1415c:	and	w21, w2, #0xff
   14160:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14164:	stp	x23, x30, [sp, #32]
   14168:	mov	x22, x0
   1416c:	mov	x19, x2
   14170:	ldr	x23, [x2, #4000]
   14174:	ldr	x0, [x23]
   14178:	cbnz	x0, 14184 <__sanitizer_set_report_fd@@Base+0x16d0>
   1417c:	bl	1571c <__sanitizer_set_report_fd@@Base+0x2c68>
   14180:	str	x0, [x23]
   14184:	ldr	x2, [x19, #4000]
   14188:	add	x5, sp, #0x34
   1418c:	add	x3, sp, #0x48
   14190:	add	x1, sp, #0x38
   14194:	mov	x4, #0x8000                	// #32768
   14198:	ldr	x0, [x2]
   1419c:	add	x2, sp, #0x40
   141a0:	cmp	x0, #0x8, lsl #12
   141a4:	csel	x4, x0, x4, cs  // cs = hs, nlast
   141a8:	mov	x0, x20
   141ac:	bl	12948 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a84>
   141b0:	ands	w19, w0, #0xff
   141b4:	b.ne	141e4 <__sanitizer_set_report_fd@@Base+0x1730>  // b.any
   141b8:	cbnz	w21, 141d0 <__sanitizer_set_report_fd@@Base+0x171c>
   141bc:	ldr	w2, [sp, #52]
   141c0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   141c4:	mov	x1, x20
   141c8:	add	x0, x0, #0x59
   141cc:	bl	18af0 <OnPrint@@Base+0x288>
   141d0:	mov	w0, w21
   141d4:	ldp	x21, x22, [sp, #16]
   141d8:	ldp	x23, x30, [sp, #32]
   141dc:	ldp	x19, x20, [sp], #80
   141e0:	ret
   141e4:	ldr	x1, [sp, #56]
   141e8:	mov	x0, x22
   141ec:	mov	w21, w19
   141f0:	bl	14120 <__sanitizer_set_report_fd@@Base+0x166c>
   141f4:	ldp	x0, x1, [sp, #56]
   141f8:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   141fc:	b	141d0 <__sanitizer_set_report_fd@@Base+0x171c>
   14200:	ldr	w4, [x0, #8]
   14204:	mov	x6, x3
   14208:	sxtw	x3, w4
   1420c:	cmp	x3, #0xc7
   14210:	b.ls	14234 <__sanitizer_set_report_fd@@Base+0x1780>  // b.plast
   14214:	str	x30, [sp, #-16]!
   14218:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1421c:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   14220:	add	x2, x2, #0x85
   14224:	add	x0, x0, #0xfe0
   14228:	mov	x4, #0xc8                  	// #200
   1422c:	mov	w1, #0x9e                  	// #158
   14230:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   14234:	mov	w5, #0x18                  	// #24
   14238:	ldr	x7, [x0]
   1423c:	smull	x5, w4, w5
   14240:	add	w4, w4, #0x1
   14244:	add	x3, x7, x5
   14248:	str	x1, [x7, x5]
   1424c:	stp	x6, x2, [x3, #8]
   14250:	str	w4, [x0, #8]
   14254:	ret
   14258:	stp	x19, x30, [sp, #-16]!
   1425c:	mov	x19, x0
   14260:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   14264:	add	x0, x0, #0xb78
   14268:	mov	x1, #0x12c0                	// #4800
   1426c:	str	wzr, [x19, #8]
   14270:	add	x0, x0, #0xa8
   14274:	stp	xzr, xzr, [x19, #16]
   14278:	bl	e5ec <__sancov_default_options@@Base+0x168>
   1427c:	str	x0, [x19]
   14280:	ldp	x19, x30, [sp], #16
   14284:	ret
   14288:	add	x2, x0, x2
   1428c:	cmp	x0, x2
   14290:	b.eq	142a8 <__sanitizer_set_report_fd@@Base+0x17f4>  // b.none
   14294:	ldrb	w3, [x0]
   14298:	cmp	w3, w1
   1429c:	b.eq	142ac <__sanitizer_set_report_fd@@Base+0x17f8>  // b.none
   142a0:	add	x0, x0, #0x1
   142a4:	b	1428c <__sanitizer_set_report_fd@@Base+0x17d8>
   142a8:	mov	x0, #0x0                   	// #0
   142ac:	ret
   142b0:	mov	x3, x0
   142b4:	add	x2, x0, x2
   142b8:	mov	x0, #0x0                   	// #0
   142bc:	cmp	x3, x2
   142c0:	b.eq	142d8 <__sanitizer_set_report_fd@@Base+0x1824>  // b.none
   142c4:	ldrb	w4, [x3]
   142c8:	cmp	w4, w1
   142cc:	csel	x0, x0, x3, ne  // ne = any
   142d0:	add	x3, x3, #0x1
   142d4:	b	142bc <__sanitizer_set_report_fd@@Base+0x1808>
   142d8:	ret
   142dc:	mov	x3, #0x0                   	// #0
   142e0:	cmp	x3, x2
   142e4:	b.eq	1430c <__sanitizer_set_report_fd@@Base+0x1858>  // b.none
   142e8:	ldrb	w5, [x0, x3]
   142ec:	ldrb	w4, [x1, x3]
   142f0:	cmp	w5, w4
   142f4:	b.eq	14304 <__sanitizer_set_report_fd@@Base+0x1850>  // b.none
   142f8:	mov	w0, #0x1                   	// #1
   142fc:	cneg	w0, w0, cc  // cc = lo, ul, last
   14300:	ret
   14304:	add	x3, x3, #0x1
   14308:	b	142e0 <__sanitizer_set_report_fd@@Base+0x182c>
   1430c:	mov	w0, #0x0                   	// #0
   14310:	b	14300 <__sanitizer_set_report_fd@@Base+0x184c>
   14314:	mov	x3, #0x0                   	// #0
   14318:	cmp	x3, x2
   1431c:	b.eq	14330 <__sanitizer_set_report_fd@@Base+0x187c>  // b.none
   14320:	ldrb	w4, [x1, x3]
   14324:	strb	w4, [x0, x3]
   14328:	add	x3, x3, #0x1
   1432c:	b	14318 <__sanitizer_set_report_fd@@Base+0x1864>
   14330:	ret
   14334:	cmp	x0, x1
   14338:	b.cs	14358 <__sanitizer_set_report_fd@@Base+0x18a4>  // b.hs, b.nlast
   1433c:	mov	x3, #0x0                   	// #0
   14340:	cmp	x3, x2
   14344:	b.ge	1437c <__sanitizer_set_report_fd@@Base+0x18c8>  // b.tcont
   14348:	ldrb	w4, [x1, x3]
   1434c:	strb	w4, [x0, x3]
   14350:	add	x3, x3, #0x1
   14354:	b	14340 <__sanitizer_set_report_fd@@Base+0x188c>
   14358:	cmp	x2, #0x0
   1435c:	ccmp	x0, x1, #0x0, gt
   14360:	b.ls	1437c <__sanitizer_set_report_fd@@Base+0x18c8>  // b.plast
   14364:	sub	x2, x2, #0x1
   14368:	ldrb	w3, [x1, x2]
   1436c:	strb	w3, [x0, x2]
   14370:	sub	x2, x2, #0x1
   14374:	cmn	x2, #0x1
   14378:	b.ne	14368 <__sanitizer_set_report_fd@@Base+0x18b4>  // b.any
   1437c:	ret
   14380:	orr	x3, x0, x2
   14384:	tst	x3, #0xf
   14388:	b.eq	143a8 <__sanitizer_set_report_fd@@Base+0x18f4>  // b.none
   1438c:	add	x2, x0, x2
   14390:	mov	x3, x0
   14394:	and	w1, w1, #0xff
   14398:	cmp	x2, x3
   1439c:	b.eq	143dc <__sanitizer_set_report_fd@@Base+0x1928>  // b.none
   143a0:	strb	w1, [x3], #1
   143a4:	b	14398 <__sanitizer_set_report_fd@@Base+0x18e4>
   143a8:	sxtw	x3, w1
   143ac:	sbfiz	x1, x1, #8, #32
   143b0:	orr	x1, x3, x1
   143b4:	and	x2, x2, #0xfffffffffffffff8
   143b8:	add	x2, x0, x2
   143bc:	mov	x3, x0
   143c0:	orr	x1, x1, x1, lsl #16
   143c4:	orr	x1, x1, x1, lsl #32
   143c8:	cmp	x2, x3
   143cc:	b.ls	143dc <__sanitizer_set_report_fd@@Base+0x1928>  // b.plast
   143d0:	str	x1, [x3, #8]
   143d4:	str	x1, [x3], #16
   143d8:	b	143c8 <__sanitizer_set_report_fd@@Base+0x1914>
   143dc:	ret
   143e0:	mov	x2, #0x0                   	// #0
   143e4:	ldrb	w3, [x0, x2]
   143e8:	ldrb	w4, [x1, x2]
   143ec:	cmp	w3, w4
   143f0:	b.eq	14400 <__sanitizer_set_report_fd@@Base+0x194c>  // b.none
   143f4:	mov	w0, #0x1                   	// #1
   143f8:	cneg	w0, w0, cc  // cc = lo, ul, last
   143fc:	ret
   14400:	add	x2, x2, #0x1
   14404:	cbnz	w3, 143e4 <__sanitizer_set_report_fd@@Base+0x1930>
   14408:	mov	w0, #0x0                   	// #0
   1440c:	b	143fc <__sanitizer_set_report_fd@@Base+0x1948>
   14410:	mov	x3, #0x0                   	// #0
   14414:	cmp	x3, x2
   14418:	b.eq	14444 <__sanitizer_set_report_fd@@Base+0x1990>  // b.none
   1441c:	ldrb	w4, [x0, x3]
   14420:	ldrb	w5, [x1, x3]
   14424:	cmp	w4, w5
   14428:	b.eq	14438 <__sanitizer_set_report_fd@@Base+0x1984>  // b.none
   1442c:	mov	w0, #0x1                   	// #1
   14430:	cneg	w0, w0, cc  // cc = lo, ul, last
   14434:	ret
   14438:	cbz	w4, 14444 <__sanitizer_set_report_fd@@Base+0x1990>
   1443c:	add	x3, x3, #0x1
   14440:	b	14414 <__sanitizer_set_report_fd@@Base+0x1960>
   14444:	mov	w0, #0x0                   	// #0
   14448:	b	14434 <__sanitizer_set_report_fd@@Base+0x1980>
   1444c:	and	w1, w1, #0xff
   14450:	ldrb	w2, [x0]
   14454:	cmp	w2, w1
   14458:	b.eq	1446c <__sanitizer_set_report_fd@@Base+0x19b8>  // b.none
   1445c:	cbz	w2, 14468 <__sanitizer_set_report_fd@@Base+0x19b4>
   14460:	add	x0, x0, #0x1
   14464:	b	14450 <__sanitizer_set_report_fd@@Base+0x199c>
   14468:	mov	x0, #0x0                   	// #0
   1446c:	ret
   14470:	mov	x3, #0x0                   	// #0
   14474:	mov	x5, x1
   14478:	mov	x4, x0
   1447c:	ldrb	w1, [x0, x3]
   14480:	cbnz	w1, 144b0 <__sanitizer_set_report_fd@@Base+0x19fc>
   14484:	mov	x0, x3
   14488:	ret
   1448c:	add	x3, x3, #0x1
   14490:	ldrb	w1, [x4, x3]
   14494:	cbz	w1, 144a4 <__sanitizer_set_report_fd@@Base+0x19f0>
   14498:	mov	x0, x5
   1449c:	bl	1444c <__sanitizer_set_report_fd@@Base+0x1998>
   144a0:	cbz	x0, 1448c <__sanitizer_set_report_fd@@Base+0x19d8>
   144a4:	mov	x0, x3
   144a8:	ldr	x30, [sp], #16
   144ac:	ret
   144b0:	str	x30, [sp, #-16]!
   144b4:	b	14498 <__sanitizer_set_report_fd@@Base+0x19e4>
   144b8:	mov	x2, x0
   144bc:	mov	x0, #0x0                   	// #0
   144c0:	ldrb	w3, [x2]
   144c4:	cbz	w3, 144d8 <__sanitizer_set_report_fd@@Base+0x1a24>
   144c8:	cmp	w3, w1
   144cc:	csel	x0, x0, x2, ne  // ne = any
   144d0:	add	x2, x2, #0x1
   144d4:	b	144c0 <__sanitizer_set_report_fd@@Base+0x1a0c>
   144d8:	ret
   144dc:	mov	x1, x0
   144e0:	mov	x0, #0x0                   	// #0
   144e4:	ldrb	w2, [x1, x0]
   144e8:	cbz	w2, 144f4 <__sanitizer_set_report_fd@@Base+0x1a40>
   144ec:	add	x0, x0, #0x1
   144f0:	b	144e4 <__sanitizer_set_report_fd@@Base+0x1a30>
   144f4:	ret
   144f8:	stp	x19, x20, [sp, #-32]!
   144fc:	mov	x20, x0
   14500:	str	x30, [sp, #16]
   14504:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   14508:	mov	x2, #0x0                   	// #0
   1450c:	mov	x19, x0
   14510:	mov	x1, #0x0                   	// #0
   14514:	add	x0, x0, #0x1
   14518:	bl	e8ec <__sancov_default_options@@Base+0x468>
   1451c:	mov	x5, x0
   14520:	mov	x2, x19
   14524:	mov	x1, x20
   14528:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1452c:	strb	wzr, [x5, x19]
   14530:	mov	x0, x5
   14534:	ldr	x30, [sp, #16]
   14538:	ldp	x19, x20, [sp], #32
   1453c:	ret
   14540:	mov	x3, x0
   14544:	str	x30, [sp, #-16]!
   14548:	bl	1444c <__sanitizer_set_report_fd@@Base+0x1998>
   1454c:	cbnz	x0, 1455c <__sanitizer_set_report_fd@@Base+0x1aa8>
   14550:	mov	x0, x3
   14554:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   14558:	add	x0, x3, x0
   1455c:	ldr	x30, [sp], #16
   14560:	ret
   14564:	mov	x4, x0
   14568:	mov	x5, x1
   1456c:	mov	x6, x2
   14570:	str	x30, [sp, #-16]!
   14574:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   14578:	add	x3, x4, x0
   1457c:	mov	x0, #0x0                   	// #0
   14580:	cmp	x0, x6
   14584:	b.eq	1459c <__sanitizer_set_report_fd@@Base+0x1ae8>  // b.none
   14588:	ldrb	w1, [x5, x0]
   1458c:	cbz	w1, 1459c <__sanitizer_set_report_fd@@Base+0x1ae8>
   14590:	add	x0, x0, #0x1
   14594:	strb	w1, [x3], #1
   14598:	b	14580 <__sanitizer_set_report_fd@@Base+0x1acc>
   1459c:	strb	wzr, [x3]
   145a0:	mov	x0, x4
   145a4:	ldr	x30, [sp], #16
   145a8:	ret
   145ac:	mov	x7, x0
   145b0:	mov	x5, x2
   145b4:	mov	x4, x1
   145b8:	str	x30, [sp, #-16]!
   145bc:	mov	x0, x1
   145c0:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   145c4:	mov	x6, x0
   145c8:	cmp	x0, x5
   145cc:	b.cs	145ec <__sanitizer_set_report_fd@@Base+0x1b38>  // b.hs, b.nlast
   145d0:	add	x2, x0, #0x1
   145d4:	mov	x1, x4
   145d8:	mov	x0, x7
   145dc:	bl	14334 <__sanitizer_set_report_fd@@Base+0x1880>
   145e0:	mov	x0, x6
   145e4:	ldr	x30, [sp], #16
   145e8:	ret
   145ec:	cbz	x5, 145e0 <__sanitizer_set_report_fd@@Base+0x1b2c>
   145f0:	sub	x5, x5, #0x1
   145f4:	mov	x1, x4
   145f8:	mov	x2, x5
   145fc:	mov	x0, x7
   14600:	bl	14334 <__sanitizer_set_report_fd@@Base+0x1880>
   14604:	strb	wzr, [x7, x5]
   14608:	b	145e0 <__sanitizer_set_report_fd@@Base+0x1b2c>
   1460c:	mov	x4, x0
   14610:	mov	x3, #0x0                   	// #0
   14614:	str	x30, [sp, #-16]!
   14618:	add	x0, x4, x3
   1461c:	cmp	x3, x2
   14620:	b.eq	14638 <__sanitizer_set_report_fd@@Base+0x1b84>  // b.none
   14624:	ldrb	w5, [x1, x3]
   14628:	cbz	w5, 14638 <__sanitizer_set_report_fd@@Base+0x1b84>
   1462c:	strb	w5, [x4, x3]
   14630:	add	x3, x3, #0x1
   14634:	b	14618 <__sanitizer_set_report_fd@@Base+0x1b64>
   14638:	sub	x2, x2, x3
   1463c:	mov	w1, #0x0                   	// #0
   14640:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   14644:	mov	x0, x4
   14648:	ldr	x30, [sp], #16
   1464c:	ret
   14650:	mov	x2, x0
   14654:	mov	x0, #0x0                   	// #0
   14658:	cmp	x0, x1
   1465c:	b.eq	14670 <__sanitizer_set_report_fd@@Base+0x1bbc>  // b.none
   14660:	ldrb	w3, [x2, x0]
   14664:	cbz	w3, 14670 <__sanitizer_set_report_fd@@Base+0x1bbc>
   14668:	add	x0, x0, #0x1
   1466c:	b	14658 <__sanitizer_set_report_fd@@Base+0x1ba4>
   14670:	ret
   14674:	mov	x5, x0
   14678:	mov	x6, x2
   1467c:	mov	x4, x1
   14680:	str	x30, [sp, #-16]!
   14684:	mov	x0, x1
   14688:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1468c:	mov	x7, x0
   14690:	mov	x1, x6
   14694:	mov	x0, x5
   14698:	bl	14650 <__sanitizer_set_report_fd@@Base+0x1b9c>
   1469c:	add	x8, x7, x0
   146a0:	cmp	x6, x0
   146a4:	b.eq	146c4 <__sanitizer_set_report_fd@@Base+0x1c10>  // b.none
   146a8:	sub	x2, x6, x0
   146ac:	add	x0, x5, x0
   146b0:	cmp	x2, x7
   146b4:	b.ls	146d0 <__sanitizer_set_report_fd@@Base+0x1c1c>  // b.plast
   146b8:	add	x2, x7, #0x1
   146bc:	mov	x1, x4
   146c0:	bl	14334 <__sanitizer_set_report_fd@@Base+0x1880>
   146c4:	mov	x0, x8
   146c8:	ldr	x30, [sp], #16
   146cc:	ret
   146d0:	sub	x2, x2, #0x1
   146d4:	mov	x1, x4
   146d8:	bl	14334 <__sanitizer_set_report_fd@@Base+0x1880>
   146dc:	add	x5, x5, x6
   146e0:	sturb	wzr, [x5, #-1]
   146e4:	b	146c4 <__sanitizer_set_report_fd@@Base+0x1c10>
   146e8:	mov	x9, x1
   146ec:	mov	x10, x0
   146f0:	str	x30, [sp, #-16]!
   146f4:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   146f8:	mov	x6, x0
   146fc:	mov	x0, x9
   14700:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   14704:	cmp	x6, x0
   14708:	b.cc	14738 <__sanitizer_set_report_fd@@Base+0x1c84>  // b.lo, b.ul, b.last
   1470c:	mov	x2, x0
   14710:	sub	x6, x6, x0
   14714:	mov	x8, #0x0                   	// #0
   14718:	add	x7, x10, x8
   1471c:	mov	x1, x9
   14720:	mov	x0, x7
   14724:	bl	142dc <__sanitizer_set_report_fd@@Base+0x1828>
   14728:	cbz	w0, 1473c <__sanitizer_set_report_fd@@Base+0x1c88>
   1472c:	add	x8, x8, #0x1
   14730:	cmp	x6, x8
   14734:	b.cs	14718 <__sanitizer_set_report_fd@@Base+0x1c64>  // b.hs, b.nlast
   14738:	mov	x7, #0x0                   	// #0
   1473c:	mov	x0, x7
   14740:	ldr	x30, [sp], #16
   14744:	ret
   14748:	cmp	w2, #0xa
   1474c:	b.eq	14778 <__sanitizer_set_report_fd@@Base+0x1cc4>  // b.none
   14750:	str	x30, [sp, #-16]!
   14754:	sxtw	x3, w2
   14758:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1475c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14760:	add	x0, x0, #0xb5
   14764:	add	x2, x2, #0xa2
   14768:	mov	x4, #0xa                   	// #10
   1476c:	mov	w1, #0xe5                  	// #229
   14770:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   14774:	add	x0, x0, #0x1
   14778:	ldrb	w2, [x0]
   1477c:	cmp	w2, #0x20
   14780:	b.eq	14774 <__sanitizer_set_report_fd@@Base+0x1cc0>  // b.none
   14784:	sub	w3, w2, #0x9
   14788:	and	w3, w3, #0xff
   1478c:	cmp	w3, #0x4
   14790:	b.ls	14774 <__sanitizer_set_report_fd@@Base+0x1cc0>  // b.plast
   14794:	cmp	w2, #0x2b
   14798:	b.ne	147a8 <__sanitizer_set_report_fd@@Base+0x1cf4>  // b.any
   1479c:	add	x4, x0, #0x1
   147a0:	mov	w6, #0x1                   	// #1
   147a4:	b	147b8 <__sanitizer_set_report_fd@@Base+0x1d04>
   147a8:	cmp	w2, #0x2d
   147ac:	b.ne	1480c <__sanitizer_set_report_fd@@Base+0x1d58>  // b.any
   147b0:	add	x4, x0, #0x1
   147b4:	mov	w6, #0xffffffff            	// #-1
   147b8:	mov	x8, #0x9999999999999999    	// #-7378697629483820647
   147bc:	mov	w5, #0x0                   	// #0
   147c0:	mov	x2, #0x0                   	// #0
   147c4:	movk	x8, #0x1999, lsl #48
   147c8:	mov	x7, #0xffffffffffffffff    	// #-1
   147cc:	mov	x9, #0xa                   	// #10
   147d0:	ldrb	w3, [x4]
   147d4:	sub	w3, w3, #0x30
   147d8:	cmp	w3, #0x9
   147dc:	b.hi	14814 <__sanitizer_set_report_fd@@Base+0x1d60>  // b.pmore
   147e0:	mul	x5, x2, x9
   147e4:	cmp	x2, x8
   147e8:	sxtw	x2, w3
   147ec:	add	x4, x4, #0x1
   147f0:	csel	x5, x5, x7, ls  // ls = plast
   147f4:	mvn	x3, x2
   147f8:	cmp	x3, x5
   147fc:	add	x2, x2, x5
   14800:	csel	x2, x2, x7, cs  // cs = hs, nlast
   14804:	mov	w5, #0x1                   	// #1
   14808:	b	147d0 <__sanitizer_set_report_fd@@Base+0x1d1c>
   1480c:	mov	x4, x0
   14810:	b	147a0 <__sanitizer_set_report_fd@@Base+0x1cec>
   14814:	cbz	x1, 14824 <__sanitizer_set_report_fd@@Base+0x1d70>
   14818:	cmp	w5, #0x0
   1481c:	csel	x4, x4, x0, ne  // ne = any
   14820:	str	x4, [x1]
   14824:	cmp	w6, #0x1
   14828:	b.ne	1483c <__sanitizer_set_report_fd@@Base+0x1d88>  // b.any
   1482c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   14830:	cmp	x2, x0
   14834:	csel	x0, x2, x0, ls  // ls = plast
   14838:	ret
   1483c:	cmp	x2, #0x0
   14840:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14844:	csneg	x0, x0, x2, lt  // lt = tstop
   14848:	ret
   1484c:	mov	w2, #0xa                   	// #10
   14850:	mov	x1, #0x0                   	// #0
   14854:	b	14748 <__sanitizer_set_report_fd@@Base+0x1c94>
   14858:	mov	x4, #0x10000000000         	// #1099511627776
   1485c:	mov	x3, x1
   14860:	cmp	x1, x4
   14864:	b.ls	14884 <__sanitizer_set_report_fd@@Base+0x1dd0>  // b.plast
   14868:	str	x30, [sp, #-16]!
   1486c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14870:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14874:	add	x2, x2, #0xf1
   14878:	add	x0, x0, #0xb5
   1487c:	mov	w1, #0x104                 	// #260
   14880:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   14884:	add	x3, x0, x1
   14888:	add	x2, x0, #0x7
   1488c:	and	x2, x2, #0xfffffffffffffff8
   14890:	and	x4, x3, #0xfffffffffffffff8
   14894:	mov	x5, x0
   14898:	mov	x1, #0x0                   	// #0
   1489c:	cmp	x5, x2
   148a0:	ccmp	x5, x3, #0x2, cc  // cc = lo, ul, last
   148a4:	b.cs	148b4 <__sanitizer_set_report_fd@@Base+0x1e00>  // b.hs, b.nlast
   148a8:	ldrb	w6, [x5], #1
   148ac:	orr	x1, x1, x6
   148b0:	b	1489c <__sanitizer_set_report_fd@@Base+0x1de8>
   148b4:	cmp	x2, x4
   148b8:	b.cs	148c8 <__sanitizer_set_report_fd@@Base+0x1e14>  // b.hs, b.nlast
   148bc:	ldr	x5, [x2], #8
   148c0:	orr	x1, x1, x5
   148c4:	b	148b4 <__sanitizer_set_report_fd@@Base+0x1e00>
   148c8:	cmp	x0, x4
   148cc:	b.hi	148e4 <__sanitizer_set_report_fd@@Base+0x1e30>  // b.pmore
   148d0:	cmp	x4, x3
   148d4:	b.cs	148e4 <__sanitizer_set_report_fd@@Base+0x1e30>  // b.hs, b.nlast
   148d8:	ldrb	w0, [x4], #1
   148dc:	orr	x1, x1, x0
   148e0:	b	148d0 <__sanitizer_set_report_fd@@Base+0x1e1c>
   148e4:	cmp	x1, #0x0
   148e8:	cset	w0, eq  // eq = none
   148ec:	ret
   148f0:	mov	x1, #0x4810                	// #18448
   148f4:	add	x0, x0, x1
   148f8:	b	1535c <__sanitizer_set_report_fd@@Base+0x28a8>
   148fc:	stp	x19, x20, [sp, #-48]!
   14900:	mov	x20, x0
   14904:	stp	x21, x22, [sp, #16]
   14908:	mov	x21, x1
   1490c:	mov	x1, #0x4810                	// #18448
   14910:	add	x22, x0, x1
   14914:	str	x30, [sp, #32]
   14918:	mov	x0, x22
   1491c:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   14920:	ldr	x19, [x20, #18536]
   14924:	cmp	x19, #0x3ff
   14928:	b.ls	1494c <__sanitizer_set_report_fd@@Base+0x1e98>  // b.plast
   1492c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14930:	mov	x2, #0x400                 	// #1024
   14934:	ldr	x0, [x0, #4008]
   14938:	ldr	x1, [x0]
   1493c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14940:	add	x0, x0, #0x10e
   14944:	bl	18b74 <OnPrint@@Base+0x30c>
   14948:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1494c:	add	x0, x19, #0x1
   14950:	str	x0, [x20, #18536]
   14954:	mov	x0, x21
   14958:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   1495c:	add	x1, x20, x19, lsl #5
   14960:	add	x1, x1, #0x4, lsl #12
   14964:	ldr	x30, [sp, #32]
   14968:	str	x0, [x1, #2160]
   1496c:	str	xzr, [x1, #2168]
   14970:	mov	x0, x22
   14974:	str	xzr, [x1, #2176]
   14978:	strb	wzr, [x1, #2184]
   1497c:	ldp	x21, x22, [sp, #16]
   14980:	ldp	x19, x20, [sp], #48
   14984:	b	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   14988:	stp	x19, x20, [sp, #-176]!
   1498c:	mov	x3, #0x4810                	// #18448
   14990:	mov	x20, x0
   14994:	stp	x23, x24, [sp, #32]
   14998:	add	x23, x0, x3
   1499c:	mov	x0, x23
   149a0:	add	x19, sp, #0x70
   149a4:	stp	x21, x22, [sp, #16]
   149a8:	mov	x22, x1
   149ac:	stp	x25, x26, [sp, #48]
   149b0:	stp	x27, x28, [sp, #64]
   149b4:	str	x30, [sp, #80]
   149b8:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   149bc:	mov	x0, x19
   149c0:	mov	x1, #0x1000                	// #4096
   149c4:	stp	xzr, xzr, [sp, #112]
   149c8:	str	xzr, [sp, #128]
   149cc:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   149d0:	ldr	x0, [sp, #128]
   149d4:	cmp	x0, #0xfff
   149d8:	b.hi	14a10 <__sanitizer_set_report_fd@@Base+0x1f5c>  // b.pmore
   149dc:	ldr	x0, [sp, #120]
   149e0:	cmp	x0, #0xfff
   149e4:	b.hi	149f4 <__sanitizer_set_report_fd@@Base+0x1f40>  // b.pmore
   149e8:	mov	x0, x19
   149ec:	mov	x1, #0x1000                	// #4096
   149f0:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   149f4:	ldr	x3, [sp, #112]
   149f8:	mov	x2, #0x1000                	// #4096
   149fc:	ldr	x0, [sp, #128]
   14a00:	mov	w1, #0x0                   	// #0
   14a04:	sub	x2, x2, x0
   14a08:	add	x0, x3, x0
   14a0c:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   14a10:	mov	x2, #0x4870                	// #18544
   14a14:	mov	x0, #0x1000                	// #4096
   14a18:	add	x21, x20, x2
   14a1c:	mov	x1, #0x0                   	// #0
   14a20:	stp	x0, xzr, [sp, #128]
   14a24:	mov	x0, x19
   14a28:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x2ac>
   14a2c:	strb	wzr, [x0]
   14a30:	cbz	x22, 14ab0 <__sanitizer_set_report_fd@@Base+0x1ffc>
   14a34:	ldr	x1, [sp, #112]
   14a38:	mov	x0, x22
   14a3c:	ldr	x2, [sp, #128]
   14a40:	sub	x2, x2, #0x1
   14a44:	bl	15020 <__sanitizer_set_report_fd@@Base+0x256c>
   14a48:	cbz	x0, 14ab0 <__sanitizer_set_report_fd@@Base+0x1ffc>
   14a4c:	mov	x0, x19
   14a50:	mov	x1, #0x0                   	// #0
   14a54:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x2ac>
   14a58:	ldrb	w0, [x0]
   14a5c:	cbz	w0, 14ab0 <__sanitizer_set_report_fd@@Base+0x1ffc>
   14a60:	mov	x19, x21
   14a64:	mov	x24, #0x0                   	// #0
   14a68:	ldr	x0, [x20, #18536]
   14a6c:	cmp	x0, x24
   14a70:	b.ls	14ab0 <__sanitizer_set_report_fd@@Base+0x1ffc>  // b.plast
   14a74:	ldrb	w0, [x19, #24]
   14a78:	cbnz	w0, 14aa4 <__sanitizer_set_report_fd@@Base+0x1ff0>
   14a7c:	ldr	x0, [x19, #16]
   14a80:	cbnz	x0, 14aa4 <__sanitizer_set_report_fd@@Base+0x1ff0>
   14a84:	ldr	x0, [x19]
   14a88:	mov	x1, x22
   14a8c:	bl	10414 <__sancov_default_options@@Base+0x1f90>
   14a90:	tst	w0, #0xff
   14a94:	b.eq	14aa4 <__sanitizer_set_report_fd@@Base+0x1ff0>  // b.none
   14a98:	ldr	x0, [sp, #112]
   14a9c:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   14aa0:	str	x0, [x19, #16]
   14aa4:	add	x24, x24, #0x1
   14aa8:	add	x19, x19, #0x20
   14aac:	b	14a68 <__sanitizer_set_report_fd@@Base+0x1fb4>
   14ab0:	adrp	x25, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14ab4:	add	x0, sp, #0x90
   14ab8:	strb	wzr, [sp, #168]
   14abc:	bl	166b4 <__sanitizer_set_report_fd@@Base+0x3c00>
   14ac0:	ldr	x0, [x25, #3680]
   14ac4:	adrp	x26, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14ac8:	add	x26, x26, #0x18c
   14acc:	mov	x22, #0x0                   	// #0
   14ad0:	str	x0, [sp, #104]
   14ad4:	ldr	x19, [sp, #144]
   14ad8:	mov	x0, #0x48                  	// #72
   14adc:	ldr	x24, [sp, #160]
   14ae0:	madd	x24, x24, x0, x19
   14ae4:	ldr	x0, [x20, #18536]
   14ae8:	cmp	x0, x22
   14aec:	b.ls	14c38 <__sanitizer_set_report_fd@@Base+0x2184>  // b.plast
   14af0:	mov	w28, #0x0                   	// #0
   14af4:	cmp	x19, x24
   14af8:	b.eq	14bf8 <__sanitizer_set_report_fd@@Base+0x2144>  // b.none
   14afc:	ldr	x25, [x19, #56]
   14b00:	cbz	x25, 14bf0 <__sanitizer_set_report_fd@@Base+0x213c>
   14b04:	ldrb	w27, [x25, #24]
   14b08:	cbz	w27, 14b64 <__sanitizer_set_report_fd@@Base+0x20b0>
   14b0c:	ldr	x1, [x19]
   14b10:	ldr	x0, [x21]
   14b14:	bl	10414 <__sancov_default_options@@Base+0x1f90>
   14b18:	tst	w0, #0xff
   14b1c:	b.eq	14b50 <__sanitizer_set_report_fd@@Base+0x209c>  // b.none
   14b20:	cbz	w28, 14b6c <__sanitizer_set_report_fd@@Base+0x20b8>
   14b24:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14b28:	add	x20, x20, x22, lsl #5
   14b2c:	ldr	x4, [x19]
   14b30:	ldr	x0, [x0, #4008]
   14b34:	ldr	x2, [x20, #18544]
   14b38:	ldr	x1, [x0]
   14b3c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14b40:	ldr	x3, [x20, #18552]
   14b44:	add	x0, x0, #0x138
   14b48:	bl	18b74 <OnPrint@@Base+0x30c>
   14b4c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   14b50:	ldr	x0, [x21, #16]
   14b54:	cbz	x0, 14b64 <__sanitizer_set_report_fd@@Base+0x20b0>
   14b58:	ldr	x1, [x19]
   14b5c:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   14b60:	cbz	w0, 14b20 <__sanitizer_set_report_fd@@Base+0x206c>
   14b64:	ldr	x25, [x25]
   14b68:	b	14b00 <__sanitizer_set_report_fd@@Base+0x204c>
   14b6c:	ldrb	w28, [x21, #24]
   14b70:	cbnz	w28, 14b64 <__sanitizer_set_report_fd@@Base+0x20b0>
   14b74:	ldr	x0, [sp, #104]
   14b78:	ldr	w0, [x0]
   14b7c:	cbz	w0, 14b90 <__sanitizer_set_report_fd@@Base+0x20dc>
   14b80:	ldr	x2, [x19]
   14b84:	mov	x0, x26
   14b88:	ldr	x1, [x21]
   14b8c:	bl	18b74 <OnPrint@@Base+0x30c>
   14b90:	mov	w0, #0x1                   	// #1
   14b94:	strb	w0, [x21, #24]
   14b98:	ldr	x0, [x19]
   14b9c:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   14ba0:	ldr	x3, [x20]
   14ba4:	str	x0, [x21, #8]
   14ba8:	cmp	x3, #0x7f
   14bac:	b.ls	14bcc <__sanitizer_set_report_fd@@Base+0x2118>  // b.plast
   14bb0:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14bb4:	add	x2, x2, #0x1cb
   14bb8:	mov	x4, #0x80                  	// #128
   14bbc:	mov	w1, #0x52                  	// #82
   14bc0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14bc4:	add	x0, x0, #0x21a
   14bc8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   14bcc:	add	x0, x20, x3, lsl #4
   14bd0:	add	x3, x3, #0x1
   14bd4:	ldr	x1, [x25, #8]
   14bd8:	str	x1, [x0, #8]
   14bdc:	ldr	x1, [x25, #16]
   14be0:	str	x1, [x0, #16]
   14be4:	dmb	ish
   14be8:	str	x3, [x20]
   14bec:	mov	w28, w27
   14bf0:	add	x19, x19, #0x48
   14bf4:	b	14af4 <__sanitizer_set_report_fd@@Base+0x2040>
   14bf8:	ldrb	w0, [x21, #24]
   14bfc:	cbz	w0, 14c2c <__sanitizer_set_report_fd@@Base+0x2178>
   14c00:	cbnz	w28, 14c2c <__sanitizer_set_report_fd@@Base+0x2178>
   14c04:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14c08:	add	x20, x20, x22, lsl #5
   14c0c:	ldr	x0, [x0, #4008]
   14c10:	ldr	x3, [x20, #18544]
   14c14:	ldr	x1, [x0]
   14c18:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14c1c:	ldr	x2, [x20, #18552]
   14c20:	add	x0, x0, #0x25b
   14c24:	bl	18b74 <OnPrint@@Base+0x30c>
   14c28:	b	14b4c <__sanitizer_set_report_fd@@Base+0x2098>
   14c2c:	add	x22, x22, #0x1
   14c30:	add	x21, x21, #0x20
   14c34:	b	14ad4 <__sanitizer_set_report_fd@@Base+0x2020>
   14c38:	add	x0, x20, #0xc, lsl #12
   14c3c:	ldrb	w0, [x0, #2160]
   14c40:	cbz	w0, 14d0c <__sanitizer_set_report_fd@@Base+0x2258>
   14c44:	adrp	x22, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   14c48:	adrp	x25, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14c4c:	add	x25, x25, #0x2b3
   14c50:	ldr	x22, [x22, #3680]
   14c54:	cmp	x24, x19
   14c58:	b.eq	14d0c <__sanitizer_set_report_fd@@Base+0x2258>  // b.none
   14c5c:	ldrb	w0, [x19, #44]
   14c60:	cbz	w0, 14d04 <__sanitizer_set_report_fd@@Base+0x2250>
   14c64:	ldr	x21, [x19, #56]
   14c68:	cbz	x21, 14d04 <__sanitizer_set_report_fd@@Base+0x2250>
   14c6c:	ldrb	w0, [x21, #24]
   14c70:	cbz	w0, 14cd8 <__sanitizer_set_report_fd@@Base+0x2224>
   14c74:	ldr	x1, [x21, #8]
   14c78:	mov	x0, x20
   14c7c:	bl	14d68 <__sanitizer_set_report_fd@@Base+0x22b4>
   14c80:	tst	w0, #0xff
   14c84:	b.ne	14cc0 <__sanitizer_set_report_fd@@Base+0x220c>  // b.any
   14c88:	ldr	w0, [x22]
   14c8c:	cbz	w0, 14ca0 <__sanitizer_set_report_fd@@Base+0x21ec>
   14c90:	ldp	x1, x2, [x21, #8]
   14c94:	mov	x0, x25
   14c98:	ldr	x3, [x19]
   14c9c:	bl	18b74 <OnPrint@@Base+0x30c>
   14ca0:	ldr	x3, [x20, #2056]
   14ca4:	cmp	x3, #0x3ff
   14ca8:	b.ls	14ce0 <__sanitizer_set_report_fd@@Base+0x222c>  // b.plast
   14cac:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14cb0:	mov	x4, #0x400                 	// #1024
   14cb4:	add	x2, x2, #0x2e6
   14cb8:	mov	w1, #0x6f                  	// #111
   14cbc:	b	14bc0 <__sanitizer_set_report_fd@@Base+0x210c>
   14cc0:	ldr	x1, [x21, #16]
   14cc4:	mov	x0, x20
   14cc8:	sub	x1, x1, #0x1
   14ccc:	bl	14d68 <__sanitizer_set_report_fd@@Base+0x22b4>
   14cd0:	tst	w0, #0xff
   14cd4:	b.eq	14c88 <__sanitizer_set_report_fd@@Base+0x21d4>  // b.none
   14cd8:	ldr	x21, [x21]
   14cdc:	b	14c68 <__sanitizer_set_report_fd@@Base+0x21b4>
   14ce0:	add	x0, x20, x3, lsl #4
   14ce4:	add	x3, x3, #0x1
   14ce8:	ldr	x1, [x21, #8]
   14cec:	str	x1, [x0, #2064]
   14cf0:	ldr	x1, [x21, #16]
   14cf4:	str	x1, [x0, #2072]
   14cf8:	dmb	ish
   14cfc:	str	x3, [x20, #2056]
   14d00:	b	14cd8 <__sanitizer_set_report_fd@@Base+0x2224>
   14d04:	add	x19, x19, #0x48
   14d08:	b	14c54 <__sanitizer_set_report_fd@@Base+0x21a0>
   14d0c:	ldr	x19, [sp, #144]
   14d10:	mov	x0, #0x48                  	// #72
   14d14:	ldr	x20, [sp, #160]
   14d18:	madd	x20, x20, x0, x19
   14d1c:	cmp	x20, x19
   14d20:	b.eq	14d34 <__sanitizer_set_report_fd@@Base+0x2280>  // b.none
   14d24:	mov	x0, x19
   14d28:	add	x19, x19, #0x48
   14d2c:	bl	10198 <__sancov_default_options@@Base+0x1d14>
   14d30:	b	14d1c <__sanitizer_set_report_fd@@Base+0x2268>
   14d34:	ldp	x0, x1, [sp, #112]
   14d38:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   14d3c:	mov	x0, x23
   14d40:	bl	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   14d44:	ldp	x21, x22, [sp, #16]
   14d48:	ldp	x23, x24, [sp, #32]
   14d4c:	ldp	x25, x26, [sp, #48]
   14d50:	ldp	x27, x28, [sp, #64]
   14d54:	ldr	x30, [sp, #80]
   14d58:	ldp	x19, x20, [sp], #176
   14d5c:	ret
   14d60:	mov	x1, #0x0                   	// #0
   14d64:	b	14988 <__sanitizer_set_report_fd@@Base+0x1ed4>
   14d68:	ldr	x3, [x0, #2056]
   14d6c:	dmb	ish
   14d70:	add	x0, x0, #0x810
   14d74:	mov	x2, #0x0                   	// #0
   14d78:	cmp	x2, x3
   14d7c:	b.eq	14da4 <__sanitizer_set_report_fd@@Base+0x22f0>  // b.none
   14d80:	ldr	x4, [x0]
   14d84:	cmp	x1, x4
   14d88:	b.cc	14d98 <__sanitizer_set_report_fd@@Base+0x22e4>  // b.lo, b.ul, b.last
   14d8c:	ldr	x4, [x0, #8]
   14d90:	cmp	x1, x4
   14d94:	b.cc	14dac <__sanitizer_set_report_fd@@Base+0x22f8>  // b.lo, b.ul, b.last
   14d98:	add	x2, x2, #0x1
   14d9c:	add	x0, x0, #0x10
   14da0:	b	14d78 <__sanitizer_set_report_fd@@Base+0x22c4>
   14da4:	mov	w0, #0x0                   	// #0
   14da8:	ret
   14dac:	mov	w0, #0x1                   	// #1
   14db0:	b	14da8 <__sanitizer_set_report_fd@@Base+0x22f4>
   14db4:	stp	x19, x20, [sp, #-64]!
   14db8:	mov	x19, x1
   14dbc:	mov	x20, x0
   14dc0:	mov	w2, #0x0                   	// #0
   14dc4:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14dc8:	mov	x0, #0x3e80                	// #16000
   14dcc:	add	x1, x1, #0x33f
   14dd0:	str	x30, [sp, #16]
   14dd4:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   14dd8:	str	x0, [x19]
   14ddc:	add	x2, sp, #0x30
   14de0:	add	x3, sp, #0x38
   14de4:	add	x1, sp, #0x28
   14de8:	mov	x0, x20
   14dec:	mov	x5, #0x0                   	// #0
   14df0:	mov	x4, #0x100000              	// #1048576
   14df4:	bl	12948 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a84>
   14df8:	tst	w0, #0xff
   14dfc:	ldr	x2, [x19]
   14e00:	b.ne	14e14 <__sanitizer_set_report_fd@@Base+0x2360>  // b.any
   14e04:	str	xzr, [x2]
   14e08:	ldr	x30, [sp, #16]
   14e0c:	ldp	x19, x20, [sp], #64
   14e10:	ret
   14e14:	ldr	x0, [sp, #40]
   14e18:	str	x0, [x2]
   14e1c:	mov	x0, #0x1                   	// #1
   14e20:	mov	w1, w0
   14e24:	ldr	x4, [sp, #40]
   14e28:	ldrb	w3, [x4, x0]
   14e2c:	add	x0, x0, #0x1
   14e30:	cbnz	w3, 14e24 <__sanitizer_set_report_fd@@Base+0x2370>
   14e34:	add	x7, x4, x0
   14e38:	ldrb	w4, [x4, x0]
   14e3c:	sxtw	x3, w1
   14e40:	sbfiz	x6, x1, #3, #32
   14e44:	add	x5, x2, w1, sxtw #3
   14e48:	cbz	w4, 14e7c <__sanitizer_set_report_fd@@Base+0x23c8>
   14e4c:	str	x7, [x2, x6]
   14e50:	cmp	w1, #0x7cf
   14e54:	b.le	14e74 <__sanitizer_set_report_fd@@Base+0x23c0>
   14e58:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14e5c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   14e60:	add	x2, x2, #0x350
   14e64:	add	x0, x0, #0x36e
   14e68:	mov	x4, #0x7cf                 	// #1999
   14e6c:	mov	w1, #0x23f                 	// #575
   14e70:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   14e74:	add	w1, w1, #0x1
   14e78:	b	14e24 <__sanitizer_set_report_fd@@Base+0x2370>
   14e7c:	str	xzr, [x5]
   14e80:	b	14e08 <__sanitizer_set_report_fd@@Base+0x2354>
   14e84:	cmn	x0, #0x1, lsl #12
   14e88:	b.ls	14ea0 <__sanitizer_set_report_fd@@Base+0x23ec>  // b.plast
   14e8c:	cbz	x1, 14e98 <__sanitizer_set_report_fd@@Base+0x23e4>
   14e90:	neg	w0, w0
   14e94:	str	w0, [x1]
   14e98:	mov	w0, #0x1                   	// #1
   14e9c:	b	14ea4 <__sanitizer_set_report_fd@@Base+0x23f0>
   14ea0:	mov	w0, #0x0                   	// #0
   14ea4:	ret
   14ea8:	mov	x8, #0xde                  	// #222
   14eac:	sxtw	x2, w2
   14eb0:	sxtw	x3, w3
   14eb4:	sxtw	x4, w4
   14eb8:	svc	#0x0
   14ebc:	ret
   14ec0:	mov	x8, #0xd7                  	// #215
   14ec4:	svc	#0x0
   14ec8:	ret
   14ecc:	mov	x8, #0xe2                  	// #226
   14ed0:	sxtw	x2, w2
   14ed4:	svc	#0x0
   14ed8:	ret
   14edc:	mov	x8, #0x39                  	// #57
   14ee0:	sxtw	x0, w0
   14ee4:	svc	#0x0
   14ee8:	ret
   14eec:	mov	x3, x0
   14ef0:	sxtw	x2, w1
   14ef4:	mov	x8, #0x38                  	// #56
   14ef8:	mov	x0, #0xffffffffffffff9c    	// #-100
   14efc:	mov	x1, x3
   14f00:	svc	#0x0
   14f04:	ret
   14f08:	mov	w4, w1
   14f0c:	mov	x5, x0
   14f10:	mov	w3, w2
   14f14:	mov	x8, #0x38                  	// #56
   14f18:	mov	x0, #0xffffffffffffff9c    	// #-100
   14f1c:	mov	x1, x5
   14f20:	sxtw	x2, w4
   14f24:	svc	#0x0
   14f28:	ret
   14f2c:	sxtw	x3, w0
   14f30:	mov	x0, x3
   14f34:	mov	x8, #0x3f                  	// #63
   14f38:	svc	#0x0
   14f3c:	cmn	x0, #0x1, lsl #12
   14f40:	b.ls	14f4c <__sanitizer_set_report_fd@@Base+0x2498>  // b.plast
   14f44:	cmn	w0, #0x4
   14f48:	b.eq	14f30 <__sanitizer_set_report_fd@@Base+0x247c>  // b.none
   14f4c:	ret
   14f50:	sxtw	x3, w0
   14f54:	mov	x0, x3
   14f58:	mov	x8, #0x40                  	// #64
   14f5c:	svc	#0x0
   14f60:	cmn	x0, #0x1, lsl #12
   14f64:	b.ls	14f70 <__sanitizer_set_report_fd@@Base+0x24bc>  // b.plast
   14f68:	cmn	w0, #0x4
   14f6c:	b.eq	14f54 <__sanitizer_set_report_fd@@Base+0x24a0>  // b.none
   14f70:	ret
   14f74:	sxtw	x2, w0
   14f78:	mov	x0, x2
   14f7c:	mov	x8, #0x2e                  	// #46
   14f80:	svc	#0x0
   14f84:	cmn	x0, #0x1, lsl #12
   14f88:	b.ls	14f94 <__sanitizer_set_report_fd@@Base+0x24e0>  // b.plast
   14f8c:	cmn	w0, #0x4
   14f90:	b.eq	14f78 <__sanitizer_set_report_fd@@Base+0x24c4>  // b.none
   14f94:	ret
   14f98:	mov	x3, x0
   14f9c:	mov	x2, x1
   14fa0:	mov	x8, #0x4f                  	// #79
   14fa4:	mov	x1, x3
   14fa8:	mov	x0, #0xffffffffffffff9c    	// #-100
   14fac:	mov	x3, #0x0                   	// #0
   14fb0:	svc	#0x0
   14fb4:	ret
   14fb8:	mov	x3, x0
   14fbc:	mov	x2, x1
   14fc0:	mov	x8, #0x4f                  	// #79
   14fc4:	mov	x1, x3
   14fc8:	mov	x0, #0xffffffffffffff9c    	// #-100
   14fcc:	mov	x3, #0x100                 	// #256
   14fd0:	svc	#0x0
   14fd4:	ret
   14fd8:	mov	x8, #0x50                  	// #80
   14fdc:	sxtw	x0, w0
   14fe0:	svc	#0x0
   14fe4:	ret
   14fe8:	str	x30, [sp, #-144]!
   14fec:	add	x1, sp, #0x10
   14ff0:	bl	14fd8 <__sanitizer_set_report_fd@@Base+0x2524>
   14ff4:	cmp	x0, #0x0
   14ff8:	ldr	x0, [sp, #64]
   14ffc:	ldr	x30, [sp], #144
   15000:	csinv	x0, x0, xzr, eq  // eq = none
   15004:	ret
   15008:	mov	x8, #0x18                  	// #24
   1500c:	sxtw	x0, w0
   15010:	sxtw	x1, w1
   15014:	mov	x2, #0x0                   	// #0
   15018:	svc	#0x0
   1501c:	ret
   15020:	mov	x5, x0
   15024:	mov	x4, x1
   15028:	mov	x3, x2
   1502c:	mov	x8, #0x4e                  	// #78
   15030:	mov	x0, #0xffffffffffffff9c    	// #-100
   15034:	mov	x1, x5
   15038:	mov	x2, x4
   1503c:	svc	#0x0
   15040:	ret
   15044:	mov	x1, x0
   15048:	mov	x8, #0x23                  	// #35
   1504c:	mov	x0, #0xffffffffffffff9c    	// #-100
   15050:	mov	x2, #0x0                   	// #0
   15054:	svc	#0x0
   15058:	ret
   1505c:	mov	x2, x0
   15060:	mov	x3, x1
   15064:	mov	x0, #0xffffffffffffff9c    	// #-100
   15068:	mov	x1, x2
   1506c:	mov	x8, #0x26                  	// #38
   15070:	mov	x2, x0
   15074:	svc	#0x0
   15078:	ret
   1507c:	mov	x8, #0x7c                  	// #124
   15080:	svc	#0x0
   15084:	ret
   15088:	sxtw	x0, w0
   1508c:	mov	x8, #0x5e                  	// #94
   15090:	str	x30, [sp, #-16]!
   15094:	svc	#0x0
   15098:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1509c:	sub	sp, sp, #0x10
   150a0:	mov	x0, #0x1                   	// #1
   150a4:	mov	x8, #0x65                  	// #101
   150a8:	stp	x0, xzr, [sp]
   150ac:	mov	x0, sp
   150b0:	mov	x1, x0
   150b4:	svc	#0x0
   150b8:	cmp	w0, #0x0
   150bc:	ldr	w0, [sp]
   150c0:	add	sp, sp, #0x10
   150c4:	csel	w0, w0, wzr, ne  // ne = any
   150c8:	ret
   150cc:	mov	x8, #0xdd                  	// #221
   150d0:	svc	#0x0
   150d4:	ret
   150d8:	sub	sp, sp, #0x80
   150dc:	mov	x1, x0
   150e0:	mov	x2, sp
   150e4:	mov	x8, #0x4f                  	// #79
   150e8:	mov	x0, #0xffffffffffffff9c    	// #-100
   150ec:	mov	x3, #0x0                   	// #0
   150f0:	svc	#0x0
   150f4:	cbnz	x0, 15110 <__sanitizer_set_report_fd@@Base+0x265c>
   150f8:	ldr	w0, [sp, #16]
   150fc:	and	w0, w0, #0xf000
   15100:	cmp	w0, #0x8, lsl #12
   15104:	cset	w0, eq  // eq = none
   15108:	add	sp, sp, #0x80
   1510c:	ret
   15110:	mov	w0, #0x0                   	// #0
   15114:	b	15108 <__sanitizer_set_report_fd@@Base+0x2654>
   15118:	mov	x8, #0xb2                  	// #178
   1511c:	svc	#0x0
   15120:	ret
   15124:	mov	x8, #0x83                  	// #131
   15128:	sxtw	x0, w0
   1512c:	sxtw	x2, w2
   15130:	svc	#0x0
   15134:	ret
   15138:	stp	x19, x30, [sp, #-32]!
   1513c:	mov	x2, #0x10                  	// #16
   15140:	mov	w1, #0x0                   	// #0
   15144:	add	x19, sp, #0x10
   15148:	mov	x0, x19
   1514c:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   15150:	mov	x8, #0xa9                  	// #169
   15154:	mov	x0, x19
   15158:	mov	x1, #0x0                   	// #0
   1515c:	svc	#0x0
   15160:	ldp	x2, x1, [sp, #16]
   15164:	mov	x0, #0x3e8                 	// #1000
   15168:	ldp	x19, x30, [sp], #32
   1516c:	mul	x1, x1, x0
   15170:	mov	x0, #0xca00                	// #51712
   15174:	movk	x0, #0x3b9a, lsl #16
   15178:	madd	x0, x2, x0, x1
   1517c:	ret
   15180:	mov	x8, #0x71                  	// #113
   15184:	sxtw	x0, w0
   15188:	svc	#0x0
   1518c:	ret
   15190:	stp	x19, x20, [sp, #-64]!
   15194:	adrp	x19, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   15198:	stp	x23, x30, [sp, #32]
   1519c:	mov	x23, x0
   151a0:	ldrb	w0, [x19, #3120]
   151a4:	stp	x21, x22, [sp, #16]
   151a8:	cbnz	w0, 151e4 <__sanitizer_set_report_fd@@Base+0x2730>
   151ac:	add	x20, x19, #0xc30
   151b0:	mov	w0, #0x1                   	// #1
   151b4:	add	x3, x20, #0x8
   151b8:	strb	w0, [x19, #3120]
   151bc:	add	x2, sp, #0x38
   151c0:	add	x1, x20, #0x10
   151c4:	mov	x5, #0x0                   	// #0
   151c8:	mov	x4, #0x4000000             	// #67108864
   151cc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   151d0:	add	x0, x0, #0x3ab
   151d4:	bl	12948 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a84>
   151d8:	tst	w0, #0xff
   151dc:	b.ne	151e4 <__sanitizer_set_report_fd@@Base+0x2730>  // b.any
   151e0:	str	xzr, [x20, #16]
   151e4:	add	x19, x19, #0xc30
   151e8:	ldr	x0, [x19, #16]
   151ec:	cbz	x0, 15270 <__sanitizer_set_report_fd@@Base+0x27bc>
   151f0:	ldr	x0, [x19, #8]
   151f4:	cbz	x0, 15270 <__sanitizer_set_report_fd@@Base+0x27bc>
   151f8:	mov	x0, x23
   151fc:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   15200:	ldr	x20, [x19, #16]
   15204:	mov	x21, x0
   15208:	ldrb	w0, [x20]
   1520c:	cbz	w0, 15270 <__sanitizer_set_report_fd@@Base+0x27bc>
   15210:	ldp	x2, x0, [x19, #8]
   15214:	mov	w1, #0x0                   	// #0
   15218:	sub	x0, x20, x0
   1521c:	sub	x2, x2, x0
   15220:	mov	x0, x20
   15224:	bl	14288 <__sanitizer_set_report_fd@@Base+0x17d4>
   15228:	mov	x22, x0
   1522c:	cbz	x0, 15270 <__sanitizer_set_report_fd@@Base+0x27bc>
   15230:	mov	x2, x21
   15234:	mov	x1, x23
   15238:	mov	x0, x20
   1523c:	bl	142dc <__sanitizer_set_report_fd@@Base+0x1828>
   15240:	cbnz	w0, 15268 <__sanitizer_set_report_fd@@Base+0x27b4>
   15244:	ldrb	w0, [x20, x21]
   15248:	cmp	w0, #0x3d
   1524c:	b.ne	15268 <__sanitizer_set_report_fd@@Base+0x27b4>  // b.any
   15250:	add	x0, x21, #0x1
   15254:	add	x0, x20, x0
   15258:	ldp	x21, x22, [sp, #16]
   1525c:	ldp	x23, x30, [sp, #32]
   15260:	ldp	x19, x20, [sp], #64
   15264:	ret
   15268:	add	x20, x22, #0x1
   1526c:	b	15208 <__sanitizer_set_report_fd@@Base+0x2754>
   15270:	mov	x0, #0x0                   	// #0
   15274:	b	15258 <__sanitizer_set_report_fd@@Base+0x27a4>
   15278:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1527c:	str	x30, [sp, #-32]!
   15280:	ldr	x0, [x0, #4032]
   15284:	cbz	x0, 152a0 <__sanitizer_set_report_fd@@Base+0x27ec>
   15288:	ldr	x0, [x0]
   1528c:	add	x0, x0, #0x8
   15290:	str	x0, [sp, #16]
   15294:	ldr	x0, [sp, #16]
   15298:	ldr	x30, [sp], #32
   1529c:	ret
   152a0:	add	x1, sp, #0x10
   152a4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   152a8:	add	x0, x0, #0x3be
   152ac:	bl	14db4 <__sanitizer_set_report_fd@@Base+0x2300>
   152b0:	add	x1, sp, #0x18
   152b4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   152b8:	add	x0, x0, #0x3ab
   152bc:	bl	14db4 <__sanitizer_set_report_fd@@Base+0x2300>
   152c0:	b	15294 <__sanitizer_set_report_fd@@Base+0x27e0>
   152c4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   152c8:	str	x30, [sp, #-32]!
   152cc:	ldr	x0, [x0, #4032]
   152d0:	cbz	x0, 15324 <__sanitizer_set_report_fd@@Base+0x2870>
   152d4:	ldr	x2, [x0]
   152d8:	mov	x1, x2
   152dc:	ldr	x0, [x1], #8
   152e0:	add	x0, x2, w0, sxtw #3
   152e4:	add	x0, x0, #0x10
   152e8:	stp	x1, x0, [sp, #16]
   152ec:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   152f0:	ldp	x1, x2, [sp, #16]
   152f4:	add	x0, x0, #0x3d1
   152f8:	bl	150cc <__sanitizer_set_report_fd@@Base+0x2618>
   152fc:	cmn	x0, #0x1, lsl #12
   15300:	b.hi	15348 <__sanitizer_set_report_fd@@Base+0x2894>  // b.pmore
   15304:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15308:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1530c:	add	x2, x2, #0x3e0
   15310:	add	x0, x0, #0x36e
   15314:	mov	x4, #0x1                   	// #1
   15318:	mov	x3, #0x0                   	// #0
   1531c:	mov	w1, #0x286                 	// #646
   15320:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   15324:	add	x1, sp, #0x10
   15328:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1532c:	add	x0, x0, #0x3be
   15330:	bl	14db4 <__sanitizer_set_report_fd@@Base+0x2300>
   15334:	add	x1, sp, #0x18
   15338:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1533c:	add	x0, x0, #0x3ab
   15340:	bl	14db4 <__sanitizer_set_report_fd@@Base+0x2300>
   15344:	b	152ec <__sanitizer_set_report_fd@@Base+0x2838>
   15348:	neg	w1, w0
   1534c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15350:	add	x0, x0, #0x40f
   15354:	bl	18af0 <OnPrint@@Base+0x288>
   15358:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1535c:	mov	x2, #0x58                  	// #88
   15360:	mov	w1, #0x0                   	// #0
   15364:	b	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   15368:	ldr	x3, [x0, #80]
   1536c:	cbz	x3, 15390 <__sanitizer_set_report_fd@@Base+0x28dc>
   15370:	str	x30, [sp, #-16]!
   15374:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15378:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1537c:	add	x2, x2, #0x428
   15380:	add	x0, x0, #0x36e
   15384:	mov	x4, #0x0                   	// #0
   15388:	mov	w1, #0x298                 	// #664
   1538c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   15390:	mov	x6, x0
   15394:	mov	w1, #0x1                   	// #1
   15398:	ldxr	w0, [x6]
   1539c:	stxr	w2, w1, [x6]
   153a0:	cbnz	w2, 15398 <__sanitizer_set_report_fd@@Base+0x28e4>
   153a4:	dmb	ish
   153a8:	cbz	w0, 153e8 <__sanitizer_set_report_fd@@Base+0x2934>
   153ac:	mov	w7, #0x2                   	// #2
   153b0:	ldxr	w0, [x6]
   153b4:	stxr	w1, w7, [x6]
   153b8:	cbnz	w1, 153b0 <__sanitizer_set_report_fd@@Base+0x28fc>
   153bc:	dmb	ish
   153c0:	cbz	w0, 153e8 <__sanitizer_set_report_fd@@Base+0x2934>
   153c4:	mov	x0, x6
   153c8:	mov	x8, #0x62                  	// #98
   153cc:	mov	x1, #0x80                  	// #128
   153d0:	mov	x2, #0x2                   	// #2
   153d4:	mov	x3, #0x0                   	// #0
   153d8:	mov	x4, #0x0                   	// #0
   153dc:	mov	x5, #0x0                   	// #0
   153e0:	svc	#0x0
   153e4:	b	153b0 <__sanitizer_set_report_fd@@Base+0x28fc>
   153e8:	ret
   153ec:	mov	x1, x0
   153f0:	dmb	ish
   153f4:	ldxr	w2, [x1]
   153f8:	stxr	w3, wzr, [x1]
   153fc:	cbnz	w3, 153f4 <__sanitizer_set_report_fd@@Base+0x2940>
   15400:	dmb	ish
   15404:	cbnz	w2, 1542c <__sanitizer_set_report_fd@@Base+0x2978>
   15408:	str	x30, [sp, #-16]!
   1540c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15410:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15414:	add	x2, x2, #0x43c
   15418:	add	x0, x0, #0x36e
   1541c:	mov	x4, #0x0                   	// #0
   15420:	mov	x3, #0x0                   	// #0
   15424:	mov	w1, #0x2ab                 	// #683
   15428:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1542c:	cmp	w2, #0x2
   15430:	b.ne	15450 <__sanitizer_set_report_fd@@Base+0x299c>  // b.any
   15434:	mov	x8, #0x62                  	// #98
   15438:	mov	x1, #0x81                  	// #129
   1543c:	mov	x2, #0x1                   	// #1
   15440:	mov	x3, #0x0                   	// #0
   15444:	mov	x4, #0x0                   	// #0
   15448:	mov	x5, #0x0                   	// #0
   1544c:	svc	#0x0
   15450:	ret
   15454:	ldr	w0, [x0]
   15458:	cbnz	w0, 15480 <__sanitizer_set_report_fd@@Base+0x29cc>
   1545c:	str	x30, [sp, #-16]!
   15460:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15464:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15468:	add	x2, x2, #0x455
   1546c:	add	x0, x0, #0x36e
   15470:	mov	x4, #0x0                   	// #0
   15474:	mov	x3, #0x0                   	// #0
   15478:	mov	w1, #0x2b9                 	// #697
   1547c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   15480:	ret
   15484:	mov	x8, #0x75                  	// #117
   15488:	sxtw	x0, w0
   1548c:	sxtw	x1, w1
   15490:	svc	#0x0
   15494:	ret
   15498:	mov	x8, #0x104                 	// #260
   1549c:	sxtw	x0, w0
   154a0:	sxtw	x2, w2
   154a4:	mov	x3, #0x0                   	// #0
   154a8:	svc	#0x0
   154ac:	ret
   154b0:	mov	x8, #0xac                  	// #172
   154b4:	svc	#0x0
   154b8:	ret
   154bc:	mov	x8, #0xad                  	// #173
   154c0:	svc	#0x0
   154c4:	ret
   154c8:	mov	x8, #0x3d                  	// #61
   154cc:	sxtw	x0, w0
   154d0:	mov	w2, w2
   154d4:	svc	#0x0
   154d8:	ret
   154dc:	mov	x8, #0x3e                  	// #62
   154e0:	sxtw	x0, w0
   154e4:	sxtw	x2, w2
   154e8:	svc	#0x0
   154ec:	ret
   154f0:	mov	x8, #0xa7                  	// #167
   154f4:	sxtw	x0, w0
   154f8:	svc	#0x0
   154fc:	ret
   15500:	mov	x8, #0x84                  	// #132
   15504:	svc	#0x0
   15508:	ret
   1550c:	mov	x8, #0xdc                  	// #220
   15510:	mov	x0, #0x11                  	// #17
   15514:	mov	x1, #0x0                   	// #0
   15518:	svc	#0x0
   1551c:	ret
   15520:	stp	x19, x20, [sp, #-112]!
   15524:	mov	x20, x1
   15528:	mov	x19, x2
   1552c:	stp	x21, x22, [sp, #16]
   15530:	add	x21, sp, #0x30
   15534:	mov	x2, #0x20                  	// #32
   15538:	mov	w1, #0x0                   	// #0
   1553c:	mov	w22, w0
   15540:	mov	x0, x21
   15544:	stp	x23, x30, [sp, #32]
   15548:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1554c:	add	x23, sp, #0x50
   15550:	mov	x2, #0x20                  	// #32
   15554:	mov	x0, x23
   15558:	mov	w1, #0x0                   	// #0
   1555c:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   15560:	cbz	x20, 15590 <__sanitizer_set_report_fd@@Base+0x2adc>
   15564:	mov	x1, x20
   15568:	mov	x2, #0x8                   	// #8
   1556c:	ldr	x0, [x1], #8
   15570:	str	x0, [sp, #48]
   15574:	add	x0, x21, #0x18
   15578:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1557c:	ldr	w1, [x20, #136]
   15580:	ldr	x0, [x20, #144]
   15584:	orr	w1, w1, #0x4000000
   15588:	sxtw	x1, w1
   1558c:	stp	x1, x0, [sp, #56]
   15590:	cmp	x20, #0x0
   15594:	csel	x1, x21, xzr, ne  // ne = any
   15598:	cmp	x19, #0x0
   1559c:	sxtw	x0, w22
   155a0:	csel	x2, x23, xzr, ne  // ne = any
   155a4:	mov	x8, #0x86                  	// #134
   155a8:	mov	x3, #0x8                   	// #8
   155ac:	svc	#0x0
   155b0:	cmp	x0, #0x0
   155b4:	mov	x20, x0
   155b8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   155bc:	b.eq	155e8 <__sanitizer_set_report_fd@@Base+0x2b34>  // b.none
   155c0:	mov	x0, x19
   155c4:	mov	x2, x3
   155c8:	ldr	x1, [sp, #80]
   155cc:	str	x1, [x0], #8
   155d0:	add	x1, x23, #0x18
   155d4:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   155d8:	ldr	x0, [sp, #88]
   155dc:	str	w0, [x19, #136]
   155e0:	ldr	x0, [sp, #96]
   155e4:	str	x0, [x19, #144]
   155e8:	mov	w0, w20
   155ec:	ldp	x21, x22, [sp, #16]
   155f0:	ldp	x23, x30, [sp, #32]
   155f4:	ldp	x19, x20, [sp], #112
   155f8:	ret
   155fc:	mov	x8, #0x87                  	// #135
   15600:	sxtw	x0, w0
   15604:	mov	x3, #0x8                   	// #8
   15608:	svc	#0x0
   1560c:	ret
   15610:	mov	x2, #0x80                  	// #128
   15614:	mov	w1, #0xff                  	// #255
   15618:	b	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1561c:	mov	x2, #0x80                  	// #128
   15620:	mov	w1, #0x0                   	// #0
   15624:	b	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   15628:	sub	w1, w1, #0x1
   1562c:	sxtw	x3, w1
   15630:	cmp	x3, #0x3ff
   15634:	b.ls	15658 <__sanitizer_set_report_fd@@Base+0x2ba4>  // b.plast
   15638:	str	x30, [sp, #-16]!
   1563c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15640:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15644:	add	x2, x2, #0x491
   15648:	add	x0, x0, #0x36e
   1564c:	mov	x4, #0x400                 	// #1024
   15650:	mov	w1, #0x381                 	// #897
   15654:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   15658:	lsr	x3, x3, #3
   1565c:	and	w1, w1, #0x7
   15660:	mov	w2, #0x1                   	// #1
   15664:	lsl	w1, w2, w1
   15668:	ldrb	w2, [x0, x3]
   1566c:	bic	w1, w2, w1
   15670:	strb	w1, [x0, x3]
   15674:	ret
   15678:	sub	w1, w1, #0x1
   1567c:	sxtw	x3, w1
   15680:	cmp	x3, #0x3ff
   15684:	b.ls	156a8 <__sanitizer_set_report_fd@@Base+0x2bf4>  // b.plast
   15688:	str	x30, [sp, #-16]!
   1568c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15690:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15694:	add	x2, x2, #0x491
   15698:	add	x0, x0, #0x36e
   1569c:	mov	x4, #0x400                 	// #1024
   156a0:	mov	w1, #0x38b                 	// #907
   156a4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   156a8:	lsr	x3, x3, #3
   156ac:	and	w1, w1, #0x7
   156b0:	ldrb	w0, [x0, x3]
   156b4:	asr	w0, w0, w1
   156b8:	and	w0, w0, #0x1
   156bc:	ret
   156c0:	mov	x2, x0
   156c4:	ldr	w0, [x0, #4]
   156c8:	sxtw	x1, w0
   156cc:	cmn	x1, #0x1, lsl #12
   156d0:	b.hi	156e8 <__sanitizer_set_report_fd@@Base+0x2c34>  // b.pmore
   156d4:	str	x30, [sp, #-16]!
   156d8:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   156dc:	ldp	x0, x1, [x2, #8]
   156e0:	ldr	x30, [sp], #16
   156e4:	b	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   156e8:	ldp	x0, x1, [x2, #8]
   156ec:	b	156e4 <__sanitizer_set_report_fd@@Base+0x2c30>
   156f0:	stp	x29, x30, [sp, #-16]!
   156f4:	mov	x29, sp
   156f8:	mov	x0, x29
   156fc:	bl	91b4 <__lsan_do_recoverable_leak_check@@Base+0x858>
   15700:	add	w1, w0, #0x1
   15704:	mov	x0, #0x1                   	// #1
   15708:	ldp	x29, x30, [sp], #16
   1570c:	lsl	x0, x0, x1
   15710:	sub	x0, x0, #0x1
   15714:	ret
   15718:	b	156f0 <__sanitizer_set_report_fd@@Base+0x2c3c>
   1571c:	mov	x0, #0x6                   	// #6
   15720:	b	6c10 <getauxval@plt>
   15724:	stp	x19, x20, [sp, #-32]!
   15728:	mov	x2, x1
   1572c:	mov	x20, x0
   15730:	stp	x21, x30, [sp, #16]
   15734:	adrp	x21, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15738:	add	x21, x21, #0x3d1
   1573c:	mov	x19, x1
   15740:	mov	x1, x0
   15744:	mov	x0, x21
   15748:	bl	15020 <__sanitizer_set_report_fd@@Base+0x256c>
   1574c:	cmn	x0, #0x1, lsl #12
   15750:	b.ls	157ac <__sanitizer_set_report_fd@@Base+0x2cf8>  // b.plast
   15754:	neg	w1, w0
   15758:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1575c:	add	x0, x0, #0x4b3
   15760:	bl	18b74 <OnPrint@@Base+0x30c>
   15764:	mov	x1, x19
   15768:	mov	x3, x21
   1576c:	mov	x0, x20
   15770:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   15774:	add	x2, x2, #0x67b
   15778:	bl	1886c <OnPrint@@Base+0x4>
   1577c:	mov	w1, w0
   15780:	sxtw	x0, w0
   15784:	cmp	x19, w1, sxtw
   15788:	b.hi	157ac <__sanitizer_set_report_fd@@Base+0x2cf8>  // b.pmore
   1578c:	mov	x3, x0
   15790:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15794:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15798:	mov	x4, x19
   1579c:	add	x2, x2, #0x513
   157a0:	add	x0, x0, #0x36e
   157a4:	mov	w1, #0x470                 	// #1136
   157a8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   157ac:	ldp	x21, x30, [sp, #16]
   157b0:	ldp	x19, x20, [sp], #32
   157b4:	ret
   157b8:	stp	x19, x20, [sp, #-64]!
   157bc:	mov	x5, #0x0                   	// #0
   157c0:	mov	x19, x0
   157c4:	mov	x20, x1
   157c8:	add	x3, sp, #0x38
   157cc:	add	x2, sp, #0x30
   157d0:	add	x1, sp, #0x28
   157d4:	mov	x4, #0x100000              	// #1048576
   157d8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   157dc:	add	x0, x0, #0x3be
   157e0:	str	x30, [sp, #16]
   157e4:	bl	12948 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a84>
   157e8:	tst	w0, #0xff
   157ec:	b.eq	1581c <__sanitizer_set_report_fd@@Base+0x2d68>  // b.none
   157f0:	ldr	x1, [sp, #40]
   157f4:	mov	x2, x20
   157f8:	mov	x0, x19
   157fc:	bl	1460c <__sanitizer_set_report_fd@@Base+0x1b58>
   15800:	ldp	x0, x1, [sp, #40]
   15804:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   15808:	mov	x0, x19
   1580c:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   15810:	ldr	x30, [sp, #16]
   15814:	ldp	x19, x20, [sp], #64
   15818:	ret
   1581c:	mov	x1, x20
   15820:	mov	x0, x19
   15824:	bl	15724 <__sanitizer_set_report_fd@@Base+0x2c70>
   15828:	b	15810 <__sanitizer_set_report_fd@@Base+0x2d5c>
   1582c:	stp	x19, x20, [sp, #-32]!
   15830:	mov	x19, x0
   15834:	stp	x21, x30, [sp, #16]
   15838:	mov	x21, x1
   1583c:	ldrb	w1, [x19]
   15840:	cbz	w1, 1584c <__sanitizer_set_report_fd@@Base+0x2d98>
   15844:	add	x19, x19, #0x1
   15848:	b	1583c <__sanitizer_set_report_fd@@Base+0x2d88>
   1584c:	ldrb	w1, [x19]
   15850:	cmp	x19, x0
   15854:	b.ls	15868 <__sanitizer_set_report_fd@@Base+0x2db4>  // b.plast
   15858:	cmp	w1, #0x2f
   1585c:	b.eq	15870 <__sanitizer_set_report_fd@@Base+0x2dbc>  // b.none
   15860:	sub	x19, x19, #0x1
   15864:	b	1584c <__sanitizer_set_report_fd@@Base+0x2d98>
   15868:	cmp	w1, #0x2f
   1586c:	b.ne	15874 <__sanitizer_set_report_fd@@Base+0x2dc0>  // b.any
   15870:	add	x19, x19, #0x1
   15874:	mov	x0, x21
   15878:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1587c:	mov	x1, x21
   15880:	mov	x20, x0
   15884:	mov	x2, x0
   15888:	mov	x0, x19
   1588c:	bl	14410 <__sanitizer_set_report_fd@@Base+0x195c>
   15890:	cbnz	w0, 158b4 <__sanitizer_set_report_fd@@Base+0x2e00>
   15894:	ldrb	w0, [x19, x20]
   15898:	sub	w0, w0, #0x2d
   1589c:	and	w0, w0, #0xff
   158a0:	cmp	w0, #0x1
   158a4:	cset	w0, ls  // ls = plast
   158a8:	ldp	x21, x30, [sp, #16]
   158ac:	ldp	x19, x20, [sp], #32
   158b0:	ret
   158b4:	mov	w0, #0x0                   	// #0
   158b8:	b	158a8 <__sanitizer_set_report_fd@@Base+0x2df4>
   158bc:	stp	x19, x20, [sp, #-80]!
   158c0:	stp	x21, x22, [sp, #16]
   158c4:	stp	x23, x24, [sp, #32]
   158c8:	stp	x25, x26, [sp, #48]
   158cc:	str	x30, [sp, #64]
   158d0:	cbnz	x0, 158f4 <__sanitizer_set_report_fd@@Base+0x2e40>
   158d4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   158d8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   158dc:	add	x2, x2, #0x535
   158e0:	add	x0, x0, #0x36e
   158e4:	mov	x4, #0x0                   	// #0
   158e8:	mov	x3, #0x0                   	// #0
   158ec:	mov	w1, #0x495                 	// #1173
   158f0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   158f4:	ldr	x20, [x0]
   158f8:	mov	x24, x1
   158fc:	mov	x0, #0xffffffffffffffff    	// #-1
   15900:	ldrh	w2, [x20, #54]
   15904:	ldrh	w22, [x20, #56]
   15908:	ldr	x19, [x20, #32]
   1590c:	mul	w22, w22, w2
   15910:	add	x19, x20, x19
   15914:	and	x2, x2, #0xffff
   15918:	mov	x1, x19
   1591c:	add	x22, x19, w22, sxtw
   15920:	cmp	x1, x22
   15924:	b.eq	15948 <__sanitizer_set_report_fd@@Base+0x2e94>  // b.none
   15928:	ldr	w3, [x1]
   1592c:	cmp	w3, #0x1
   15930:	b.ne	15940 <__sanitizer_set_report_fd@@Base+0x2e8c>  // b.any
   15934:	ldr	x3, [x1, #16]
   15938:	cmp	x0, x3
   1593c:	csel	x0, x0, x3, ls  // ls = plast
   15940:	add	x1, x1, x2
   15944:	b	15920 <__sanitizer_set_report_fd@@Base+0x2e6c>
   15948:	sub	x21, x20, x0
   1594c:	cmp	x19, x22
   15950:	b.eq	159a4 <__sanitizer_set_report_fd@@Base+0x2ef0>  // b.none
   15954:	ldr	w0, [x19]
   15958:	cmp	w0, #0x1
   1595c:	b.ne	15998 <__sanitizer_set_report_fd@@Base+0x2ee4>  // b.any
   15960:	ldr	x23, [x19, #16]
   15964:	ldr	x26, [x19, #40]
   15968:	add	x25, x21, x23
   1596c:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   15970:	neg	x23, x0
   15974:	add	x26, x25, x26
   15978:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1597c:	and	x23, x23, x25
   15980:	mov	x1, x0
   15984:	mov	x0, x26
   15988:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   1598c:	sub	x1, x0, x23
   15990:	mov	x0, x23
   15994:	blr	x24
   15998:	ldrh	w0, [x20, #54]
   1599c:	add	x19, x19, x0
   159a0:	b	1594c <__sanitizer_set_report_fd@@Base+0x2e98>
   159a4:	ldp	x21, x22, [sp, #16]
   159a8:	ldp	x23, x24, [sp, #32]
   159ac:	ldp	x25, x26, [sp, #48]
   159b0:	ldr	x30, [sp, #64]
   159b4:	ldp	x19, x20, [sp], #80
   159b8:	ret
   159bc:	cmp	x0, #0x0
   159c0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   159c4:	b.eq	15a34 <__sanitizer_set_report_fd@@Base+0x2f80>  // b.none
   159c8:	str	x30, [sp, #-16]!
   159cc:	ands	x9, x1, #0xf
   159d0:	b.eq	159f4 <__sanitizer_set_report_fd@@Base+0x2f40>  // b.none
   159d4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   159d8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   159dc:	mov	x4, x9
   159e0:	add	x2, x2, #0x54c
   159e4:	add	x0, x0, #0x36e
   159e8:	mov	x3, #0x0                   	// #0
   159ec:	mov	w1, #0x54b                 	// #1355
   159f0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   159f4:	stp	x0, x3, [x1, #-16]
   159f8:	sub	x1, x1, #0x10
   159fc:	mov	x0, x2
   15a00:	mov	x2, x4
   15a04:	mov	x3, x5
   15a08:	mov	x4, x6
   15a0c:	mov	x8, #0xdc                  	// #220
   15a10:	svc	#0x0
   15a14:	cmp	x0, #0x0
   15a18:	b.ne	15a2c <__sanitizer_set_report_fd@@Base+0x2f78>  // b.any
   15a1c:	ldp	x1, x0, [sp], #16
   15a20:	blr	x1
   15a24:	mov	x8, #0x5d                  	// #93
   15a28:	svc	#0x0
   15a2c:	ldr	x30, [sp], #16
   15a30:	ret
   15a34:	mov	x0, #0xffffffffffffffea    	// #-22
   15a38:	ret
   15a3c:	sub	w0, w0, #0x4
   15a40:	cmp	w0, #0x7
   15a44:	b.hi	15ae0 <__sanitizer_set_report_fd@@Base+0x302c>  // b.pmore
   15a48:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15a4c:	add	x1, x1, #0x76c
   15a50:	ldrb	w0, [x1, w0, uxtw]
   15a54:	adr	x1, 15a60 <__sanitizer_set_report_fd@@Base+0x2fac>
   15a58:	add	x0, x1, w0, sxtb #2
   15a5c:	br	x0
   15a60:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15a64:	ldr	x0, [x0, #4040]
   15a68:	ldr	w0, [x0, #80]
   15a6c:	cmp	w0, #0x1
   15a70:	b.ne	15a8c <__sanitizer_set_report_fd@@Base+0x2fd8>  // b.any
   15a74:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15a78:	ldr	x1, [x1, #4040]
   15a7c:	ldrb	w1, [x1, #96]
   15a80:	cmp	w1, #0x0
   15a84:	mov	w1, #0x2                   	// #2
   15a88:	csel	w0, w0, w1, ne  // ne = any
   15a8c:	ret
   15a90:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15a94:	ldr	x0, [x0, #4040]
   15a98:	ldr	w0, [x0, #84]
   15a9c:	b	15a6c <__sanitizer_set_report_fd@@Base+0x2fb8>
   15aa0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15aa4:	ldr	x0, [x0, #4040]
   15aa8:	ldr	w0, [x0, #88]
   15aac:	b	15a6c <__sanitizer_set_report_fd@@Base+0x2fb8>
   15ab0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15ab4:	ldr	x0, [x0, #4040]
   15ab8:	ldr	w0, [x0, #92]
   15abc:	b	15a6c <__sanitizer_set_report_fd@@Base+0x2fb8>
   15ac0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15ac4:	ldr	x0, [x0, #4040]
   15ac8:	ldr	w0, [x0, #72]
   15acc:	b	15a6c <__sanitizer_set_report_fd@@Base+0x2fb8>
   15ad0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   15ad4:	ldr	x0, [x0, #4040]
   15ad8:	ldr	w0, [x0, #76]
   15adc:	b	15a6c <__sanitizer_set_report_fd@@Base+0x2fb8>
   15ae0:	mov	w0, #0x0                   	// #0
   15ae4:	b	15a8c <__sanitizer_set_report_fd@@Base+0x2fd8>
   15ae8:	stp	x19, x20, [sp, #-320]!
   15aec:	mov	x20, x1
   15af0:	mov	x19, x0
   15af4:	stp	x21, x22, [sp, #16]
   15af8:	add	x21, sp, #0x40
   15afc:	mov	x0, x21
   15b00:	str	x30, [sp, #32]
   15b04:	bl	15610 <__sanitizer_set_report_fd@@Base+0x2b5c>
   15b08:	add	x22, sp, #0xc0
   15b0c:	mov	x0, x21
   15b10:	mov	w1, #0x21                  	// #33
   15b14:	bl	15628 <__sanitizer_set_report_fd@@Base+0x2b74>
   15b18:	mov	x2, x22
   15b1c:	mov	x1, x21
   15b20:	mov	w0, #0x2                   	// #2
   15b24:	bl	155fc <__sanitizer_set_report_fd@@Base+0x2b48>
   15b28:	mov	x3, x20
   15b2c:	mov	x2, x19
   15b30:	add	x0, sp, #0x38
   15b34:	mov	x1, #0x0                   	// #0
   15b38:	bl	6c80 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   15b3c:	mov	x1, x22
   15b40:	mov	x2, #0x0                   	// #0
   15b44:	mov	w0, #0x2                   	// #2
   15b48:	bl	155fc <__sanitizer_set_report_fd@@Base+0x2b48>
   15b4c:	ldp	x21, x22, [sp, #16]
   15b50:	ldr	x30, [sp, #32]
   15b54:	ldr	x0, [sp, #56]
   15b58:	ldp	x19, x20, [sp], #320
   15b5c:	ret
   15b60:	mov	x1, #0x0                   	// #0
   15b64:	b	6940 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   15b68:	ldr	x1, [x0, #8]
   15b6c:	mov	w2, #0x5201                	// #20993
   15b70:	movk	w2, #0x4553, lsl #16
   15b74:	add	x1, x1, #0x1d0
   15b78:	ldr	w0, [x1, #4]
   15b7c:	cbz	w0, 15b98 <__sanitizer_set_report_fd@@Base+0x30e4>
   15b80:	ldr	w3, [x1]
   15b84:	cmp	w3, w2
   15b88:	b.ne	15b9c <__sanitizer_set_report_fd@@Base+0x30e8>  // b.any
   15b8c:	ldr	x0, [x1, #8]
   15b90:	ubfx	w0, w0, #6, #1
   15b94:	add	w0, w0, #0x1
   15b98:	ret
   15b9c:	add	x1, x1, w0, uxtw
   15ba0:	b	15b78 <__sanitizer_set_report_fd@@Base+0x30c4>
   15ba4:	ret
   15ba8:	ldr	x1, [x0, #8]
   15bac:	ldr	x2, [x1, #440]
   15bb0:	str	x2, [x0, #24]
   15bb4:	ldr	x2, [x1, #416]
   15bb8:	ldr	x1, [x1, #432]
   15bbc:	stp	x1, x2, [x0, #32]
   15bc0:	ret
   15bc4:	ret
   15bc8:	ret
   15bcc:	ret
   15bd0:	tbz	w1, #3, 15bf0 <__sanitizer_set_report_fd@@Base+0x313c>
   15bd4:	mov	x2, x0
   15bd8:	mov	x1, x0
   15bdc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15be0:	add	x0, x0, #0x570
   15be4:	str	x30, [sp, #-16]!
   15be8:	bl	18b74 <OnPrint@@Base+0x30c>
   15bec:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   15bf0:	ret
   15bf4:	str	x30, [sp, #-16]!
   15bf8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15bfc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15c00:	add	x2, x2, #0x683
   15c04:	add	x0, x0, #0x36e
   15c08:	mov	x4, #0x0                   	// #0
   15c0c:	mov	x3, #0x0                   	// #0
   15c10:	mov	w1, #0x80a                 	// #2058
   15c14:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   15c18:	sub	x3, x1, #0x1
   15c1c:	cmp	x3, #0xff
   15c20:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
   15c24:	b.ne	15c3c <__sanitizer_set_report_fd@@Base+0x3188>  // b.any
   15c28:	mov	w0, #0x0                   	// #0
   15c2c:	ret
   15c30:	mov	w0, #0x0                   	// #0
   15c34:	ldr	x30, [sp], #16
   15c38:	ret
   15c3c:	adrp	x3, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   15c40:	add	x3, x3, #0xc30
   15c44:	mov	x6, x0
   15c48:	mov	x5, x1
   15c4c:	ldrb	w4, [x3, #24]
   15c50:	tst	w4, #0xff
   15c54:	b.ne	15c84 <__sanitizer_set_report_fd@@Base+0x31d0>  // b.any
   15c58:	and	w2, w2, #0xff
   15c5c:	mov	x8, #0x116                 	// #278
   15c60:	eor	w2, w2, #0x1
   15c64:	and	x2, x2, #0xff
   15c68:	svc	#0x0
   15c6c:	cmn	x0, #0x1, lsl #12
   15c70:	b.ls	15cc8 <__sanitizer_set_report_fd@@Base+0x3214>  // b.plast
   15c74:	cmn	w0, #0x26
   15c78:	b.ne	15c84 <__sanitizer_set_report_fd@@Base+0x31d0>  // b.any
   15c7c:	mov	w0, #0x1                   	// #1
   15c80:	strb	w0, [x3, #24]
   15c84:	str	x30, [sp, #-16]!
   15c88:	mov	w1, #0x0                   	// #0
   15c8c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15c90:	add	x0, x0, #0x6bf
   15c94:	bl	14eec <__sanitizer_set_report_fd@@Base+0x2438>
   15c98:	mov	x4, x0
   15c9c:	cmn	x0, #0x1, lsl #12
   15ca0:	b.hi	15c30 <__sanitizer_set_report_fd@@Base+0x317c>  // b.pmore
   15ca4:	mov	x2, x5
   15ca8:	mov	x1, x6
   15cac:	bl	14f2c <__sanitizer_set_report_fd@@Base+0x2478>
   15cb0:	cmn	x0, #0x1, lsl #12
   15cb4:	b.hi	15c30 <__sanitizer_set_report_fd@@Base+0x317c>  // b.pmore
   15cb8:	mov	w0, w4
   15cbc:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   15cc0:	mov	w0, #0x1                   	// #1
   15cc4:	b	15c34 <__sanitizer_set_report_fd@@Base+0x3180>
   15cc8:	cmp	x1, x0
   15ccc:	b.ne	15c84 <__sanitizer_set_report_fd@@Base+0x31d0>  // b.any
   15cd0:	mov	w0, #0x1                   	// #1
   15cd4:	ret
   15cd8:	stp	x19, x20, [sp, #-128]!
   15cdc:	mov	x20, x0
   15ce0:	mov	w4, w1
   15ce4:	stp	x21, x30, [sp, #16]
   15ce8:	add	x21, sp, #0x30
   15cec:	ldr	w3, [x20], #8
   15cf0:	mov	x1, #0x50                  	// #80
   15cf4:	mov	x19, x0
   15cf8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15cfc:	mov	x0, x21
   15d00:	add	x2, x2, #0x6cc
   15d04:	bl	1886c <OnPrint@@Base+0x4>
   15d08:	mov	x1, x20
   15d0c:	mov	x0, x21
   15d10:	mov	x3, #0x0                   	// #0
   15d14:	mov	x2, #0x4000000             	// #67108864
   15d18:	bl	12ad4 <__sanitizer_set_report_fd@@Base+0x20>
   15d1c:	tst	w0, #0xff
   15d20:	b.ne	15d34 <__sanitizer_set_report_fd@@Base+0x3280>  // b.any
   15d24:	mov	w0, #0x0                   	// #0
   15d28:	ldp	x21, x30, [sp, #16]
   15d2c:	ldp	x19, x20, [sp], #128
   15d30:	ret
   15d34:	ldr	x3, [x19, #24]
   15d38:	cbz	x3, 15d24 <__sanitizer_set_report_fd@@Base+0x3270>
   15d3c:	ldr	x4, [x19, #16]
   15d40:	strb	wzr, [sp, #47]
   15d44:	cmp	x3, x4
   15d48:	b.ls	15d64 <__sanitizer_set_report_fd@@Base+0x32b0>  // b.plast
   15d4c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   15d50:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   15d54:	add	x2, x2, #0x373
   15d58:	add	x0, x0, #0x5c5
   15d5c:	mov	w1, #0x1be                 	// #446
   15d60:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   15d64:	b.ne	15d7c <__sanitizer_set_report_fd@@Base+0x32c8>  // b.any
   15d68:	add	x0, x3, #0x1
   15d6c:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
   15d70:	mov	x1, x0
   15d74:	mov	x0, x20
   15d78:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   15d7c:	ldr	x0, [x20, #16]
   15d80:	mov	x2, #0x1                   	// #1
   15d84:	ldr	x3, [x19, #8]
   15d88:	add	x1, x0, #0x1
   15d8c:	str	x1, [x20, #16]
   15d90:	add	x1, sp, #0x2f
   15d94:	add	x0, x3, x0
   15d98:	adrp	x20, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15d9c:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   15da0:	add	x20, x20, #0x774
   15da4:	ldr	x0, [x19, #8]
   15da8:	mov	x1, x20
   15dac:	bl	146e8 <__sanitizer_set_report_fd@@Base+0x1c34>
   15db0:	mov	x19, x0
   15db4:	cbz	x0, 15d24 <__sanitizer_set_report_fd@@Base+0x3270>
   15db8:	mov	x0, x20
   15dbc:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   15dc0:	add	x0, x19, x0
   15dc4:	bl	1484c <__sanitizer_set_report_fd@@Base+0x1d98>
   15dc8:	cmp	w0, #0x0
   15dcc:	cset	w0, ne  // ne = any
   15dd0:	b	15d28 <__sanitizer_set_report_fd@@Base+0x3274>
   15dd4:	stp	x19, x20, [sp, #-128]!
   15dd8:	mov	x20, x0
   15ddc:	mov	x19, x1
   15de0:	ldr	w0, [x0, #4]
   15de4:	stp	x21, x22, [sp, #16]
   15de8:	stp	x23, x24, [sp, #32]
   15dec:	sxtw	x1, w0
   15df0:	cmn	x1, #0x1, lsl #12
   15df4:	stp	x25, x26, [sp, #48]
   15df8:	stp	x27, x28, [sp, #64]
   15dfc:	str	x30, [sp, #80]
   15e00:	b.hi	15e90 <__sanitizer_set_report_fd@@Base+0x33dc>  // b.pmore
   15e04:	adrp	x24, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   15e08:	add	x27, sp, #0x78
   15e0c:	add	x24, x24, #0x360
   15e10:	mov	w2, #0x0                   	// #0
   15e14:	mov	x1, #0x0                   	// #0
   15e18:	mov	w26, #0x1                   	// #1
   15e1c:	bl	154dc <__sanitizer_set_report_fd@@Base+0x2a28>
   15e20:	mov	w21, #0x2                   	// #2
   15e24:	str	xzr, [x19, #16]
   15e28:	ldr	x1, [x20, #16]
   15e2c:	add	x25, x20, #0x8
   15e30:	mov	x0, x25
   15e34:	bl	12d98 <__sanitizer_set_report_fd@@Base+0x2e4>
   15e38:	ldr	x3, [x20, #24]
   15e3c:	cmp	x3, #0xfff
   15e40:	b.hi	15e60 <__sanitizer_set_report_fd@@Base+0x33ac>  // b.pmore
   15e44:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15e48:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15e4c:	add	x2, x2, #0x6e4
   15e50:	add	x0, x0, #0x36e
   15e54:	mov	x4, #0x1000                	// #4096
   15e58:	mov	w1, #0x3b5                 	// #949
   15e5c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   15e60:	ldr	w0, [x20, #4]
   15e64:	mov	w2, w3
   15e68:	ldr	x1, [x20, #8]
   15e6c:	bl	154c8 <__sanitizer_set_report_fd@@Base+0x2a14>
   15e70:	mov	x22, x0
   15e74:	cbz	x0, 15e94 <__sanitizer_set_report_fd@@Base+0x33e0>
   15e78:	cmn	x0, #0x1, lsl #12
   15e7c:	b.ls	15eb4 <__sanitizer_set_report_fd@@Base+0x3400>  // b.plast
   15e80:	ldr	w1, [x20]
   15e84:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   15e88:	add	x0, x0, #0x703
   15e8c:	bl	18b74 <OnPrint@@Base+0x30c>
   15e90:	mov	w21, #0x0                   	// #0
   15e94:	mov	w0, w21
   15e98:	ldp	x21, x22, [sp, #16]
   15e9c:	ldp	x23, x24, [sp, #32]
   15ea0:	ldp	x25, x26, [sp, #48]
   15ea4:	ldp	x27, x28, [sp, #64]
   15ea8:	ldr	x30, [sp, #80]
   15eac:	ldp	x19, x20, [sp], #128
   15eb0:	ret
   15eb4:	ldr	x23, [x20, #8]
   15eb8:	add	x28, x0, x23
   15ebc:	cmp	x23, x28
   15ec0:	b.cs	15fe8 <__sanitizer_set_report_fd@@Base+0x3534>  // b.hs, b.nlast
   15ec4:	mov	x0, x23
   15ec8:	ldrh	w1, [x23, #16]
   15ecc:	add	x23, x23, x1
   15ed0:	ldr	x1, [x0]
   15ed4:	cmp	x1, #0x1
   15ed8:	b.eq	15f28 <__sanitizer_set_report_fd@@Base+0x3474>  // b.none
   15edc:	cbz	x1, 15ebc <__sanitizer_set_report_fd@@Base+0x3408>
   15ee0:	ldrb	w1, [x0, #19]
   15ee4:	sub	w1, w1, #0x30
   15ee8:	and	w1, w1, #0xff
   15eec:	cmp	w1, #0x9
   15ef0:	b.hi	15ebc <__sanitizer_set_report_fd@@Base+0x3408>  // b.pmore
   15ef4:	add	x0, x0, #0x13
   15ef8:	bl	1484c <__sanitizer_set_report_fd@@Base+0x1d98>
   15efc:	ldp	x4, x3, [x19, #8]
   15f00:	str	x0, [sp, #120]
   15f04:	lsr	x4, x4, #3
   15f08:	cmp	x3, x4
   15f0c:	b.ls	15f30 <__sanitizer_set_report_fd@@Base+0x347c>  // b.plast
   15f10:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   15f14:	add	x2, x2, #0x373
   15f18:	mov	w1, #0x1be                 	// #446
   15f1c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   15f20:	add	x0, x0, #0x5c5
   15f24:	b	15e5c <__sanitizer_set_report_fd@@Base+0x33a8>
   15f28:	mov	w21, w1
   15f2c:	b	15ee0 <__sanitizer_set_report_fd@@Base+0x342c>
   15f30:	b.ne	15fc4 <__sanitizer_set_report_fd@@Base+0x3510>  // b.any
   15f34:	add	x0, x3, #0x1
   15f38:	str	x3, [sp, #96]
   15f3c:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
   15f40:	mov	x4, x0
   15f44:	ldr	x3, [sp, #96]
   15f48:	cbnz	x0, 15f60 <__sanitizer_set_report_fd@@Base+0x34ac>
   15f4c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   15f50:	mov	x3, #0x0                   	// #0
   15f54:	add	x2, x2, #0x329
   15f58:	mov	w1, #0x1fc                 	// #508
   15f5c:	b	15f1c <__sanitizer_set_report_fd@@Base+0x3468>
   15f60:	cmp	x3, x0
   15f64:	b.ls	15f78 <__sanitizer_set_report_fd@@Base+0x34c4>  // b.plast
   15f68:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   15f6c:	mov	w1, #0x1fd                 	// #509
   15f70:	add	x2, x2, #0x342
   15f74:	b	15f1c <__sanitizer_set_report_fd@@Base+0x3468>
   15f78:	str	x0, [sp, #96]
   15f7c:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   15f80:	ldr	x4, [sp, #96]
   15f84:	mov	x1, x0
   15f88:	lsl	x0, x4, #3
   15f8c:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   15f90:	mov	x1, x24
   15f94:	mov	w2, #0x0                   	// #0
   15f98:	str	x0, [sp, #104]
   15f9c:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   15fa0:	ldr	x1, [x19]
   15fa4:	str	x0, [sp, #96]
   15fa8:	ldr	x2, [x19, #16]
   15fac:	lsl	x2, x2, #3
   15fb0:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   15fb4:	ldp	x0, x1, [x19]
   15fb8:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   15fbc:	ldp	x4, x3, [sp, #96]
   15fc0:	stp	x4, x3, [x19]
   15fc4:	mov	x2, #0x8                   	// #8
   15fc8:	ldr	x0, [x19, #16]
   15fcc:	ldr	x3, [x19]
   15fd0:	add	x1, x0, #0x1
   15fd4:	str	x1, [x19, #16]
   15fd8:	mov	x1, x27
   15fdc:	add	x0, x3, x0, lsl #3
   15fe0:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   15fe4:	b	15ebc <__sanitizer_set_report_fd@@Base+0x3408>
   15fe8:	cbz	w26, 16008 <__sanitizer_set_report_fd@@Base+0x3554>
   15fec:	ldr	x1, [x20, #24]
   15ff0:	sub	x0, x1, #0x400
   15ff4:	cmp	x0, x22
   15ff8:	b.cs	16010 <__sanitizer_set_report_fd@@Base+0x355c>  // b.hs, b.nlast
   15ffc:	lsl	x1, x1, #1
   16000:	mov	x0, x25
   16004:	bl	12d98 <__sanitizer_set_report_fd@@Base+0x2e4>
   16008:	mov	w21, #0x1                   	// #1
   1600c:	b	16034 <__sanitizer_set_report_fd@@Base+0x3580>
   16010:	ldr	x0, [x19, #16]
   16014:	cbz	x0, 16034 <__sanitizer_set_report_fd@@Base+0x3580>
   16018:	ldr	x1, [x19]
   1601c:	add	x0, x1, x0, lsl #3
   16020:	ldur	w1, [x0, #-8]
   16024:	mov	x0, x20
   16028:	bl	15cd8 <__sanitizer_set_report_fd@@Base+0x3224>
   1602c:	tst	w0, #0xff
   16030:	b.eq	16008 <__sanitizer_set_report_fd@@Base+0x3554>  // b.none
   16034:	mov	w26, #0x0                   	// #0
   16038:	b	15e28 <__sanitizer_set_report_fd@@Base+0x3374>
   1603c:	stp	x19, x20, [sp, #-112]!
   16040:	mov	x19, x0
   16044:	mov	w0, #0xffffffff            	// #-1
   16048:	stp	x21, x30, [sp, #16]
   1604c:	add	x21, x19, #0x8
   16050:	mov	w20, w1
   16054:	stp	w1, w0, [x19]
   16058:	mov	x0, x21
   1605c:	stp	xzr, xzr, [x19, #8]
   16060:	mov	x1, #0x1000                	// #4096
   16064:	str	xzr, [x19, #24]
   16068:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   1606c:	mov	x0, x21
   16070:	mov	x1, #0x1000                	// #4096
   16074:	bl	12d98 <__sanitizer_set_report_fd@@Base+0x2e4>
   16078:	add	x21, sp, #0x20
   1607c:	mov	w3, w20
   16080:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16084:	add	x2, x2, #0x735
   16088:	mov	x1, #0x50                  	// #80
   1608c:	mov	x0, x21
   16090:	bl	1886c <OnPrint@@Base+0x4>
   16094:	mov	x0, x21
   16098:	mov	w1, #0x4000                	// #16384
   1609c:	bl	14eec <__sanitizer_set_report_fd@@Base+0x2438>
   160a0:	str	w0, [x19, #4]
   160a4:	sxtw	x0, w0
   160a8:	cmn	x0, #0x1, lsl #12
   160ac:	b.ls	160c0 <__sanitizer_set_report_fd@@Base+0x360c>  // b.plast
   160b0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   160b4:	mov	w1, w20
   160b8:	add	x0, x0, #0x744
   160bc:	bl	18b74 <OnPrint@@Base+0x30c>
   160c0:	ldp	x21, x30, [sp, #16]
   160c4:	ldp	x19, x20, [sp], #112
   160c8:	ret
   160cc:	str	x30, [sp, #-160]!
   160d0:	mov	w0, #0x0                   	// #0
   160d4:	add	x1, sp, #0x10
   160d8:	bl	6950 <getrusage@plt>
   160dc:	cbnz	w0, 160f0 <__sanitizer_set_report_fd@@Base+0x363c>
   160e0:	ldr	x0, [sp, #48]
   160e4:	lsl	x0, x0, #10
   160e8:	ldr	x30, [sp], #160
   160ec:	ret
   160f0:	mov	x0, #0x0                   	// #0
   160f4:	b	160e8 <__sanitizer_set_report_fd@@Base+0x3634>
   160f8:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   160fc:	ldr	x3, [x3, #3496]
   16100:	cbz	x3, 16108 <__sanitizer_set_report_fd@@Base+0x3654>
   16104:	b	de14 <_ZdaPvmSt11align_val_t@@Base+0x58>
   16108:	b	6b60 <sigaction@plt>
   1610c:	stp	x19, x20, [sp, #-192]!
   16110:	stp	x21, x22, [sp, #16]
   16114:	stp	x23, x24, [sp, #32]
   16118:	str	x30, [sp, #48]
   1611c:	cbnz	x1, 16140 <__sanitizer_set_report_fd@@Base+0x368c>
   16120:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16124:	add	x2, x2, #0x77b
   16128:	mov	x4, #0x0                   	// #0
   1612c:	mov	x3, #0x0                   	// #0
   16130:	mov	w1, #0x5b                  	// #91
   16134:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16138:	add	x0, x0, #0x790
   1613c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   16140:	mov	x20, x2
   16144:	cbnz	x2, 16160 <__sanitizer_set_report_fd@@Base+0x36ac>
   16148:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1614c:	mov	x4, #0x0                   	// #0
   16150:	add	x2, x2, #0x7d5
   16154:	mov	x3, #0x0                   	// #0
   16158:	mov	w1, #0x5c                  	// #92
   1615c:	b	16134 <__sanitizer_set_report_fd@@Base+0x3680>
   16160:	and	w0, w0, #0xff
   16164:	mov	x21, x1
   16168:	add	x23, sp, #0x40
   1616c:	add	x24, sp, #0x50
   16170:	add	x22, sp, #0x70
   16174:	cbz	w0, 16254 <__sanitizer_set_report_fd@@Base+0x37a0>
   16178:	mov	x1, x23
   1617c:	mov	w0, #0x3                   	// #3
   16180:	bl	6d20 <getrlimit@plt>
   16184:	sxtw	x19, w0
   16188:	cbz	w0, 161a4 <__sanitizer_set_report_fd@@Base+0x36f0>
   1618c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16190:	mov	x3, x19
   16194:	add	x2, x2, #0x7ed
   16198:	mov	x4, #0x0                   	// #0
   1619c:	mov	w1, #0x60                  	// #96
   161a0:	b	16134 <__sanitizer_set_report_fd@@Base+0x3680>
   161a4:	mov	x0, x24
   161a8:	mov	w1, #0x1                   	// #1
   161ac:	bl	18efc <OnPrint@@Base+0x694>
   161b0:	stp	xzr, xzr, [sp, #136]
   161b4:	str	xzr, [sp, #184]
   161b8:	mov	x1, x22
   161bc:	mov	x0, x24
   161c0:	bl	1932c <OnPrint@@Base+0xac4>
   161c4:	tst	w0, #0xff
   161c8:	b.eq	161d8 <__sanitizer_set_report_fd@@Base+0x3724>  // b.none
   161cc:	ldr	x0, [sp, #120]
   161d0:	cmp	x0, x23
   161d4:	b.ls	16234 <__sanitizer_set_report_fd@@Base+0x3780>  // b.plast
   161d8:	ldr	x0, [sp, #112]
   161dc:	cmp	x0, x23
   161e0:	b.hi	1623c <__sanitizer_set_report_fd@@Base+0x3788>  // b.pmore
   161e4:	ldr	x0, [sp, #120]
   161e8:	cmp	x0, x23
   161ec:	b.ls	1623c <__sanitizer_set_report_fd@@Base+0x3788>  // b.plast
   161f0:	ldr	x3, [sp, #64]
   161f4:	mov	x1, #0x40000000            	// #1073741824
   161f8:	sub	x19, x0, x19
   161fc:	str	x0, [x21]
   16200:	cmp	x3, x1
   16204:	csel	x3, x3, x1, ls  // ls = plast
   16208:	cmp	x19, x3
   1620c:	csel	x19, x19, x3, ls  // ls = plast
   16210:	sub	x19, x0, x19
   16214:	str	x19, [x20]
   16218:	mov	x0, x24
   1621c:	bl	18e20 <OnPrint@@Base+0x5b8>
   16220:	ldp	x21, x22, [sp, #16]
   16224:	ldp	x23, x24, [sp, #32]
   16228:	ldr	x30, [sp, #48]
   1622c:	ldp	x19, x20, [sp], #192
   16230:	ret
   16234:	mov	x19, x0
   16238:	b	161b8 <__sanitizer_set_report_fd@@Base+0x3704>
   1623c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16240:	mov	x4, #0x0                   	// #0
   16244:	add	x2, x2, #0x817
   16248:	mov	x3, #0x0                   	// #0
   1624c:	mov	w1, #0x6a                  	// #106
   16250:	b	16134 <__sanitizer_set_report_fd@@Base+0x3680>
   16254:	mov	x0, x22
   16258:	str	xzr, [sp, #64]
   1625c:	str	xzr, [sp, #80]
   16260:	bl	6870 <pthread_attr_init@plt>
   16264:	bl	6cc0 <pthread_self@plt>
   16268:	mov	x1, x22
   1626c:	bl	6810 <pthread_getattr_np@plt>
   16270:	sxtw	x3, w0
   16274:	cbz	w0, 1628c <__sanitizer_set_report_fd@@Base+0x37d8>
   16278:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1627c:	mov	x4, #0x0                   	// #0
   16280:	add	x2, x2, #0x858
   16284:	mov	w1, #0x88                  	// #136
   16288:	b	16134 <__sanitizer_set_report_fd@@Base+0x3680>
   1628c:	mov	x1, x24
   16290:	mov	x2, x23
   16294:	mov	x0, x22
   16298:	bl	17d68 <__sanitizer_set_report_fd@@Base+0x52b4>
   1629c:	mov	x0, x22
   162a0:	bl	6960 <pthread_attr_destroy@plt>
   162a4:	ldr	x0, [sp, #64]
   162a8:	ldr	x1, [sp, #80]
   162ac:	add	x0, x0, x1
   162b0:	str	x0, [x21]
   162b4:	str	x1, [x20]
   162b8:	b	16220 <__sanitizer_set_report_fd@@Base+0x376c>
   162bc:	stp	x19, x20, [sp, #-48]!
   162c0:	mov	x19, x0
   162c4:	mov	x20, x1
   162c8:	mov	x0, #0xffffffffffffffff    	// #-1
   162cc:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   162d0:	add	x1, x1, #0x88f
   162d4:	str	x30, [sp, #16]
   162d8:	bl	68a0 <dlsym@plt>
   162dc:	str	x0, [sp, #32]
   162e0:	cbz	x0, 1631c <__sanitizer_set_report_fd@@Base+0x3868>
   162e4:	add	x1, sp, #0x20
   162e8:	mov	x2, #0x8                   	// #8
   162ec:	add	x0, sp, #0x28
   162f0:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   162f4:	ldr	x3, [sp, #40]
   162f8:	mov	x1, x20
   162fc:	mov	x0, x19
   16300:	mov	w2, #0x1                   	// #1
   16304:	blr	x3
   16308:	cmp	w0, #0x0
   1630c:	cset	w0, eq  // eq = none
   16310:	ldr	x30, [sp, #16]
   16314:	ldp	x19, x20, [sp], #48
   16318:	ret
   1631c:	mov	w0, #0x0                   	// #0
   16320:	b	16310 <__sanitizer_set_report_fd@@Base+0x385c>
   16324:	str	x30, [sp, #-48]!
   16328:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1632c:	mov	x0, #0xffffffffffffffff    	// #-1
   16330:	add	x1, x1, #0x896
   16334:	bl	68a0 <dlsym@plt>
   16338:	stp	xzr, xzr, [sp, #16]
   1633c:	mov	x2, #0x8                   	// #8
   16340:	add	x1, sp, #0x20
   16344:	str	x0, [sp, #32]
   16348:	add	x0, sp, #0x28
   1634c:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   16350:	ldr	x2, [sp, #40]
   16354:	cbnz	x2, 16378 <__sanitizer_set_report_fd@@Base+0x38c4>
   16358:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1635c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16360:	add	x2, x2, #0x8ae
   16364:	add	x0, x0, #0x790
   16368:	mov	x4, #0x0                   	// #0
   1636c:	mov	x3, #0x0                   	// #0
   16370:	mov	w1, #0xd4                  	// #212
   16374:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   16378:	add	x0, sp, #0x10
   1637c:	add	x1, sp, #0x18
   16380:	blr	x2
   16384:	ldr	x0, [sp, #24]
   16388:	cmp	x0, #0xf
   1638c:	b.hi	16398 <__sanitizer_set_report_fd@@Base+0x38e4>  // b.pmore
   16390:	mov	x0, #0x10                  	// #16
   16394:	str	x0, [sp, #24]
   16398:	ldp	x0, x1, [sp, #16]
   1639c:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   163a0:	adrp	x1, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   163a4:	str	x0, [x1, #3152]
   163a8:	ldr	x30, [sp], #48
   163ac:	ret
   163b0:	adrp	x1, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   163b4:	add	x1, x1, #0xc50
   163b8:	ldr	x0, [x1, #8]
   163bc:	cbnz	x0, 163c8 <__sanitizer_set_report_fd@@Base+0x3914>
   163c0:	mov	x0, #0x6f0                 	// #1776
   163c4:	str	x0, [x1, #8]
   163c8:	ret
   163cc:	mov	x0, #0x10                  	// #16
   163d0:	ret
   163d4:	str	x30, [sp, #-16]!
   163d8:	bl	163b0 <__sanitizer_set_report_fd@@Base+0x38fc>
   163dc:	mrs	x1, tpidr_el0
   163e0:	sub	x0, x1, x0
   163e4:	ldr	x30, [sp], #16
   163e8:	ret
   163ec:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   163f0:	ldr	x0, [x0, #3152]
   163f4:	ret
   163f8:	stp	x19, x20, [sp, #-64]!
   163fc:	mov	x20, x1
   16400:	mov	x19, x3
   16404:	stp	x21, x22, [sp, #16]
   16408:	mov	x21, x2
   1640c:	mov	x22, x4
   16410:	stp	x23, x30, [sp, #32]
   16414:	and	w23, w0, #0xff
   16418:	bl	163d4 <__sanitizer_set_report_fd@@Base+0x3920>
   1641c:	str	x0, [x3]
   16420:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   16424:	add	x1, sp, #0x30
   16428:	add	x2, sp, #0x38
   1642c:	ldr	x0, [x0, #3152]
   16430:	str	x0, [x4]
   16434:	mov	w0, w23
   16438:	bl	1610c <__sanitizer_set_report_fd@@Base+0x3658>
   1643c:	ldp	x0, x1, [sp, #48]
   16440:	str	x1, [x20]
   16444:	sub	x0, x0, x1
   16448:	str	x0, [x21]
   1644c:	cbnz	w23, 164c4 <__sanitizer_set_report_fd@@Base+0x3a10>
   16450:	ldr	x5, [x19]
   16454:	ldr	x1, [x20]
   16458:	cmp	x5, x1
   1645c:	b.ls	164c4 <__sanitizer_set_report_fd@@Base+0x3a10>  // b.plast
   16460:	add	x4, x0, x1
   16464:	cmp	x5, x4
   16468:	b.cs	164c4 <__sanitizer_set_report_fd@@Base+0x3a10>  // b.hs, b.nlast
   1646c:	ldr	x2, [x22]
   16470:	add	x3, x5, x2
   16474:	cmp	x1, x3
   16478:	b.cc	16498 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.lo, b.ul, b.last
   1647c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16480:	add	x2, x2, #0x8c3
   16484:	mov	x4, x1
   16488:	mov	w1, #0x203                 	// #515
   1648c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16490:	add	x0, x0, #0x790
   16494:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   16498:	cmp	x4, x3
   1649c:	b.cs	164b0 <__sanitizer_set_report_fd@@Base+0x39fc>  // b.hs, b.nlast
   164a0:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   164a4:	mov	w1, #0x204                 	// #516
   164a8:	add	x2, x2, #0x8ed
   164ac:	b	1648c <__sanitizer_set_report_fd@@Base+0x39d8>
   164b0:	sub	x0, x0, x2
   164b4:	str	x0, [x21]
   164b8:	ldr	x1, [x20]
   164bc:	add	x0, x1, x0
   164c0:	str	x0, [x19]
   164c4:	ldp	x21, x22, [sp, #16]
   164c8:	ldp	x23, x30, [sp, #32]
   164cc:	ldp	x19, x20, [sp], #64
   164d0:	ret
   164d4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   164d8:	stp	x19, x20, [sp, #-96]!
   164dc:	ldr	x0, [x0, #4040]
   164e0:	stp	x21, x30, [sp, #16]
   164e4:	ldrb	w0, [x0, #160]
   164e8:	cbnz	w0, 164fc <__sanitizer_set_report_fd@@Base+0x3a48>
   164ec:	bl	160cc <__sanitizer_set_report_fd@@Base+0x3618>
   164f0:	ldp	x21, x30, [sp, #16]
   164f4:	ldp	x19, x20, [sp], #96
   164f8:	ret
   164fc:	mov	x2, #0x0                   	// #0
   16500:	mov	w1, #0x0                   	// #0
   16504:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16508:	add	x0, x0, #0x924
   1650c:	bl	16e6c <__sanitizer_set_report_fd@@Base+0x43b8>
   16510:	mov	w21, w0
   16514:	cmn	w0, #0x1
   16518:	b.eq	164ec <__sanitizer_set_report_fd@@Base+0x3a38>  // b.none
   1651c:	add	x19, sp, #0x20
   16520:	mov	x2, #0x3f                  	// #63
   16524:	mov	x1, x19
   16528:	bl	14f2c <__sanitizer_set_report_fd@@Base+0x2478>
   1652c:	mov	x20, x0
   16530:	mov	w0, w21
   16534:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   16538:	cmp	x20, #0x0
   1653c:	b.le	165c0 <__sanitizer_set_report_fd@@Base+0x3b0c>
   16540:	mov	x1, x19
   16544:	strb	wzr, [x19, x20]
   16548:	ldrb	w0, [x1]
   1654c:	sub	w0, w0, #0x30
   16550:	and	w0, w0, #0xff
   16554:	cmp	w0, #0x9
   16558:	b.hi	16564 <__sanitizer_set_report_fd@@Base+0x3ab0>  // b.pmore
   1655c:	add	x1, x1, #0x1
   16560:	b	16548 <__sanitizer_set_report_fd@@Base+0x3a94>
   16564:	ldrb	w2, [x1]
   16568:	sub	w0, w2, #0x30
   1656c:	cmp	w2, #0x0
   16570:	and	w0, w0, #0xff
   16574:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   16578:	b.ls	16584 <__sanitizer_set_report_fd@@Base+0x3ad0>  // b.plast
   1657c:	add	x1, x1, #0x1
   16580:	b	16564 <__sanitizer_set_report_fd@@Base+0x3ab0>
   16584:	mov	x19, #0x0                   	// #0
   16588:	mov	x3, #0xa                   	// #10
   1658c:	ldrb	w2, [x1]
   16590:	sub	w0, w2, #0x30
   16594:	and	w0, w0, #0xff
   16598:	cmp	w0, #0x9
   1659c:	b.hi	165b4 <__sanitizer_set_report_fd@@Base+0x3b00>  // b.pmore
   165a0:	mul	x0, x19, x3
   165a4:	add	x1, x1, #0x1
   165a8:	sub	x0, x0, #0x30
   165ac:	add	x19, x0, w2, uxtb
   165b0:	b	1658c <__sanitizer_set_report_fd@@Base+0x3ad8>
   165b4:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   165b8:	mul	x0, x0, x19
   165bc:	b	164f0 <__sanitizer_set_report_fd@@Base+0x3a3c>
   165c0:	mov	x0, #0x0                   	// #0
   165c4:	b	164f0 <__sanitizer_set_report_fd@@Base+0x3a3c>
   165c8:	stp	x19, x30, [sp, #-144]!
   165cc:	mov	x1, #0x80                  	// #128
   165d0:	mov	w0, #0x0                   	// #0
   165d4:	add	x19, sp, #0x10
   165d8:	mov	x2, x19
   165dc:	bl	6750 <sched_getaffinity@plt>
   165e0:	cbz	w0, 16604 <__sanitizer_set_report_fd@@Base+0x3b50>
   165e4:	sxtw	x3, w0
   165e8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   165ec:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   165f0:	add	x2, x2, #0x935
   165f4:	add	x0, x0, #0x790
   165f8:	mov	x4, #0x0                   	// #0
   165fc:	mov	w1, #0x2bb                 	// #699
   16600:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   16604:	mov	x1, x19
   16608:	mov	x0, #0x80                  	// #128
   1660c:	bl	6b00 <__sched_cpucount@plt>
   16610:	ldp	x19, x30, [sp], #144
   16614:	ret
   16618:	ret
   1661c:	mov	x2, x0
   16620:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   16624:	mov	w0, #0x6                   	// #6
   16628:	add	x1, x1, #0x67b
   1662c:	b	6b50 <syslog@plt>
   16630:	ret
   16634:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16638:	ldr	x1, [x1, #4040]
   1663c:	ldrb	w1, [x1, #49]
   16640:	cbz	w1, 16648 <__sanitizer_set_report_fd@@Base+0x3b94>
   16644:	b	10a78 <__sanitizer_sandbox_on_notify@@Base+0x28>
   16648:	ret
   1664c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16650:	str	x30, [sp, #-32]!
   16654:	ldr	x0, [x0, #3976]
   16658:	add	x1, sp, #0x10
   1665c:	cbz	x0, 166a8 <__sanitizer_set_report_fd@@Base+0x3bf4>
   16660:	ldr	x0, [x0]
   16664:	cbz	x0, 166a8 <__sanitizer_set_report_fd@@Base+0x3bf4>
   16668:	ldrb	w0, [x0]
   1666c:	cbz	w0, 166a8 <__sanitizer_set_report_fd@@Base+0x3bf4>
   16670:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16674:	ldr	x0, [x0, #3648]
   16678:	cbz	x0, 1669c <__sanitizer_set_report_fd@@Base+0x3be8>
   1667c:	mov	w0, #0x1                   	// #1
   16680:	bl	6990 <real_clock_gettime@plt>
   16684:	ldp	x2, x1, [sp, #16]
   16688:	mov	x0, #0xca00                	// #51712
   1668c:	movk	x0, #0x3b9a, lsl #16
   16690:	ldr	x30, [sp], #32
   16694:	madd	x0, x2, x0, x1
   16698:	ret
   1669c:	mov	w0, #0x1                   	// #1
   166a0:	bl	69e0 <clock_gettime@plt>
   166a4:	b	16684 <__sanitizer_set_report_fd@@Base+0x3bd0>
   166a8:	mov	w0, #0x1                   	// #1
   166ac:	bl	15180 <__sanitizer_set_report_fd@@Base+0x26cc>
   166b0:	b	16684 <__sanitizer_set_report_fd@@Base+0x3bd0>
   166b4:	stp	x19, x30, [sp, #-32]!
   166b8:	mov	x19, x0
   166bc:	bl	169cc <__sanitizer_set_report_fd@@Base+0x3f18>
   166c0:	str	x19, [sp, #16]
   166c4:	mov	w0, #0x1                   	// #1
   166c8:	add	x1, sp, #0x10
   166cc:	strb	w0, [sp, #24]
   166d0:	adrp	x0, 16000 <__sanitizer_set_report_fd@@Base+0x354c>
   166d4:	add	x0, x0, #0x730
   166d8:	stur	wzr, [sp, #25]
   166dc:	sturh	wzr, [sp, #29]
   166e0:	strb	wzr, [sp, #31]
   166e4:	bl	69c0 <dl_iterate_phdr@plt>
   166e8:	ldp	x19, x30, [sp], #32
   166ec:	ret
   166f0:	stp	x19, x20, [sp, #-64]!
   166f4:	mov	x20, x0
   166f8:	add	x19, sp, #0x20
   166fc:	str	x30, [sp, #16]
   16700:	bl	169cc <__sanitizer_set_report_fd@@Base+0x3f18>
   16704:	mov	x0, x19
   16708:	mov	w1, #0x1                   	// #1
   1670c:	bl	18efc <OnPrint@@Base+0x694>
   16710:	mov	x1, x20
   16714:	mov	x0, x19
   16718:	bl	190d4 <OnPrint@@Base+0x86c>
   1671c:	mov	x0, x19
   16720:	bl	18e20 <OnPrint@@Base+0x5b8>
   16724:	ldr	x30, [sp, #16]
   16728:	ldp	x19, x20, [sp], #64
   1672c:	ret
   16730:	stp	x19, x20, [sp, #-160]!
   16734:	mov	x1, #0x1000                	// #4096
   16738:	mov	x19, x0
   1673c:	stp	x21, x22, [sp, #16]
   16740:	add	x21, sp, #0x38
   16744:	mov	x0, x21
   16748:	mov	x20, x2
   1674c:	stp	x23, x30, [sp, #32]
   16750:	stp	xzr, xzr, [sp, #56]
   16754:	str	xzr, [sp, #72]
   16758:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   1675c:	ldr	x0, [sp, #72]
   16760:	cmp	x0, #0xfff
   16764:	b.hi	1679c <__sanitizer_set_report_fd@@Base+0x3ce8>  // b.pmore
   16768:	ldr	x0, [sp, #64]
   1676c:	cmp	x0, #0xfff
   16770:	b.hi	16780 <__sanitizer_set_report_fd@@Base+0x3ccc>  // b.pmore
   16774:	mov	x0, x21
   16778:	mov	x1, #0x1000                	// #4096
   1677c:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   16780:	ldr	x3, [sp, #56]
   16784:	mov	x2, #0x1000                	// #4096
   16788:	ldr	x0, [sp, #72]
   1678c:	mov	w1, #0x0                   	// #0
   16790:	sub	x2, x2, x0
   16794:	add	x0, x3, x0
   16798:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1679c:	mov	x0, #0x1000                	// #4096
   167a0:	mov	x1, #0x0                   	// #0
   167a4:	stp	x0, xzr, [sp, #72]
   167a8:	mov	x0, x21
   167ac:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x2ac>
   167b0:	strb	wzr, [x0]
   167b4:	ldrb	w0, [x20, #8]
   167b8:	cbz	w0, 1687c <__sanitizer_set_report_fd@@Base+0x3dc8>
   167bc:	ldr	x0, [sp, #56]
   167c0:	strb	wzr, [x20, #8]
   167c4:	ldr	x1, [sp, #72]
   167c8:	bl	10590 <__sancov_default_options@@Base+0x210c>
   167cc:	mov	x0, x21
   167d0:	mov	x1, #0x0                   	// #0
   167d4:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x2ac>
   167d8:	ldrb	w0, [x0]
   167dc:	cbz	w0, 16900 <__sanitizer_set_report_fd@@Base+0x3e4c>
   167e0:	add	x21, sp, #0x58
   167e4:	mov	x2, #0x10                  	// #16
   167e8:	mov	w1, #0x0                   	// #0
   167ec:	add	x0, x21, #0x1c
   167f0:	stp	xzr, xzr, [sp, #88]
   167f4:	mov	x22, #0x0                   	// #0
   167f8:	mov	x23, #0x38                  	// #56
   167fc:	str	xzr, [sp, #104]
   16800:	str	wzr, [sp, #112]
   16804:	strb	wzr, [sp, #132]
   16808:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1680c:	ldr	x2, [x19]
   16810:	mov	x0, x21
   16814:	ldr	x1, [sp, #56]
   16818:	stp	xzr, xzr, [sp, #136]
   1681c:	str	xzr, [sp, #152]
   16820:	bl	10210 <__sancov_default_options@@Base+0x1d8c>
   16824:	ldrh	w0, [x19, #24]
   16828:	cmp	w0, w22
   1682c:	b.le	16898 <__sanitizer_set_report_fd@@Base+0x3de4>
   16830:	mul	x0, x22, x23
   16834:	ldr	x1, [x19, #16]
   16838:	add	x2, x1, x0
   1683c:	ldr	w0, [x1, x0]
   16840:	cmp	w0, #0x1
   16844:	b.ne	16874 <__sanitizer_set_report_fd@@Base+0x3dc0>  // b.any
   16848:	ldr	x1, [x19]
   1684c:	mov	x5, #0x0                   	// #0
   16850:	ldr	x0, [x2, #16]
   16854:	ldr	w3, [x2, #4]
   16858:	ldr	x2, [x2, #40]
   1685c:	add	x1, x1, x0
   16860:	ubfx	x4, x3, #1, #1
   16864:	mov	x0, x21
   16868:	and	w3, w3, #0x1
   1686c:	add	x2, x1, x2
   16870:	bl	10288 <__sancov_default_options@@Base+0x1e04>
   16874:	add	x22, x22, #0x1
   16878:	b	16824 <__sanitizer_set_report_fd@@Base+0x3d70>
   1687c:	ldr	x2, [x19, #8]
   16880:	cbz	x2, 167cc <__sanitizer_set_report_fd@@Base+0x3d18>
   16884:	mov	x0, x21
   16888:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1688c:	add	x1, x1, #0x67b
   16890:	bl	18bf8 <OnPrint@@Base+0x390>
   16894:	b	167cc <__sanitizer_set_report_fd@@Base+0x3d18>
   16898:	ldr	x19, [x20]
   1689c:	mov	x0, #0x48                  	// #72
   168a0:	ldp	x4, x3, [x19, #8]
   168a4:	udiv	x4, x4, x0
   168a8:	cmp	x3, x4
   168ac:	b.ls	168c8 <__sanitizer_set_report_fd@@Base+0x3e14>  // b.plast
   168b0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   168b4:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   168b8:	add	x2, x2, #0x373
   168bc:	add	x0, x0, #0x5c5
   168c0:	mov	w1, #0x1be                 	// #446
   168c4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   168c8:	b.ne	168e0 <__sanitizer_set_report_fd@@Base+0x3e2c>  // b.any
   168cc:	add	x0, x3, #0x1
   168d0:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
   168d4:	mov	x1, x0
   168d8:	mov	x0, x19
   168dc:	bl	1691c <__sanitizer_set_report_fd@@Base+0x3e68>
   168e0:	ldr	x3, [x19]
   168e4:	mov	x2, #0x48                  	// #72
   168e8:	ldr	x0, [x19, #16]
   168ec:	add	x1, x0, #0x1
   168f0:	str	x1, [x19, #16]
   168f4:	madd	x0, x0, x2, x3
   168f8:	mov	x1, x21
   168fc:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   16900:	ldp	x0, x1, [sp, #56]
   16904:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   16908:	mov	w0, #0x0                   	// #0
   1690c:	ldp	x21, x22, [sp, #16]
   16910:	ldp	x23, x30, [sp, #32]
   16914:	ldp	x19, x20, [sp], #160
   16918:	ret
   1691c:	stp	x19, x20, [sp, #-48]!
   16920:	stp	x21, x22, [sp, #16]
   16924:	str	x30, [sp, #32]
   16928:	cbnz	x1, 1694c <__sanitizer_set_report_fd@@Base+0x3e98>
   1692c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   16930:	add	x2, x2, #0x329
   16934:	mov	x4, #0x0                   	// #0
   16938:	mov	x3, #0x0                   	// #0
   1693c:	mov	w1, #0x1fc                 	// #508
   16940:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   16944:	add	x0, x0, #0x5c5
   16948:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1694c:	ldr	x3, [x0, #16]
   16950:	mov	x19, x0
   16954:	mov	x20, x1
   16958:	cmp	x1, x3
   1695c:	b.cs	16974 <__sanitizer_set_report_fd@@Base+0x3ec0>  // b.hs, b.nlast
   16960:	mov	x4, x1
   16964:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   16968:	mov	w1, #0x1fd                 	// #509
   1696c:	add	x2, x2, #0x342
   16970:	b	16940 <__sanitizer_set_report_fd@@Base+0x3e8c>
   16974:	mov	x22, #0x48                  	// #72
   16978:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1697c:	mov	x1, x0
   16980:	mul	x0, x20, x22
   16984:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   16988:	mov	x20, x0
   1698c:	mov	w2, #0x0                   	// #0
   16990:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   16994:	add	x1, x1, #0x360
   16998:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1699c:	ldr	x2, [x19, #16]
   169a0:	mov	x21, x0
   169a4:	ldr	x1, [x19]
   169a8:	mul	x2, x2, x22
   169ac:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   169b0:	ldp	x0, x1, [x19]
   169b4:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   169b8:	ldr	x30, [sp, #32]
   169bc:	stp	x21, x20, [x19]
   169c0:	ldp	x21, x22, [sp, #16]
   169c4:	ldp	x19, x20, [sp], #48
   169c8:	ret
   169cc:	stp	x19, x20, [sp, #-32]!
   169d0:	mov	x19, x0
   169d4:	ldrb	w1, [x0, #24]
   169d8:	stp	x21, x30, [sp, #16]
   169dc:	cbz	w1, 16a20 <__sanitizer_set_report_fd@@Base+0x3f6c>
   169e0:	ldr	x20, [x19]
   169e4:	mov	x0, #0x48                  	// #72
   169e8:	ldr	x21, [x19, #16]
   169ec:	madd	x21, x21, x0, x20
   169f0:	cmp	x21, x20
   169f4:	b.eq	16a08 <__sanitizer_set_report_fd@@Base+0x3f54>  // b.none
   169f8:	mov	x0, x20
   169fc:	add	x20, x20, #0x48
   16a00:	bl	10198 <__sancov_default_options@@Base+0x1d14>
   16a04:	b	169f0 <__sanitizer_set_report_fd@@Base+0x3f3c>
   16a08:	str	xzr, [x19, #16]
   16a0c:	mov	w0, #0x1                   	// #1
   16a10:	strb	w0, [x19, #24]
   16a14:	ldp	x21, x30, [sp, #16]
   16a18:	ldp	x19, x20, [sp], #32
   16a1c:	ret
   16a20:	stp	xzr, xzr, [x0]
   16a24:	mov	x1, #0x4000                	// #16384
   16a28:	str	xzr, [x0, #16]
   16a2c:	bl	1691c <__sanitizer_set_report_fd@@Base+0x3e68>
   16a30:	b	16a0c <__sanitizer_set_report_fd@@Base+0x3f58>
   16a34:	cmp	w0, #0x2
   16a38:	b.eq	16a4c <__sanitizer_set_report_fd@@Base+0x3f98>  // b.none
   16a3c:	cmp	w0, #0xa
   16a40:	cset	x0, eq  // eq = none
   16a44:	lsl	x0, x0, #4
   16a48:	ret
   16a4c:	mov	x0, #0x4                   	// #4
   16a50:	b	16a48 <__sanitizer_set_report_fd@@Base+0x3f94>
   16a54:	b	1571c <__sanitizer_set_report_fd@@Base+0x2c68>
   16a58:	stp	x19, x20, [sp, #-64]!
   16a5c:	mov	x19, x0
   16a60:	stp	x21, x22, [sp, #16]
   16a64:	and	w22, w2, #0xff
   16a68:	mov	x21, x1
   16a6c:	str	x30, [sp, #32]
   16a70:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   16a74:	mov	x1, x0
   16a78:	mov	x0, x19
   16a7c:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   16a80:	mov	x1, x0
   16a84:	mov	x5, #0x0                   	// #0
   16a88:	mov	w4, #0xffffffff            	// #-1
   16a8c:	mov	w3, #0x22                  	// #34
   16a90:	mov	w2, #0x3                   	// #3
   16a94:	mov	x19, x0
   16a98:	mov	x0, #0x0                   	// #0
   16a9c:	bl	14ea8 <__sanitizer_set_report_fd@@Base+0x23f4>
   16aa0:	mov	x20, x0
   16aa4:	add	x1, sp, #0x3c
   16aa8:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   16aac:	tst	w0, #0xff
   16ab0:	b.eq	16ad0 <__sanitizer_set_report_fd@@Base+0x401c>  // b.none
   16ab4:	ldr	w3, [sp, #60]
   16ab8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16abc:	mov	w4, w22
   16ac0:	add	x2, x2, #0x9a8
   16ac4:	mov	x1, x21
   16ac8:	mov	x0, x19
   16acc:	bl	ffb4 <__sancov_default_options@@Base+0x1b30>
   16ad0:	mov	x0, x19
   16ad4:	bl	10384 <__sancov_default_options@@Base+0x1f00>
   16ad8:	mov	x0, x20
   16adc:	ldp	x21, x22, [sp, #16]
   16ae0:	ldr	x30, [sp, #32]
   16ae4:	ldp	x19, x20, [sp], #64
   16ae8:	ret
   16aec:	cmp	x0, #0x0
   16af0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   16af4:	b.eq	16b70 <__sanitizer_set_report_fd@@Base+0x40bc>  // b.none
   16af8:	stp	x19, x20, [sp, #-32]!
   16afc:	mov	x19, x1
   16b00:	mov	x20, x0
   16b04:	str	x30, [sp, #16]
   16b08:	bl	14ec0 <__sanitizer_set_report_fd@@Base+0x240c>
   16b0c:	mov	x1, #0x0                   	// #0
   16b10:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   16b14:	tst	w0, #0xff
   16b18:	b.eq	16b60 <__sanitizer_set_report_fd@@Base+0x40ac>  // b.none
   16b1c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   16b20:	mov	x4, x20
   16b24:	mov	x3, x19
   16b28:	mov	x2, x19
   16b2c:	ldr	x0, [x0, #4008]
   16b30:	ldr	x1, [x0]
   16b34:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16b38:	add	x0, x0, #0x9b1
   16b3c:	bl	18b74 <OnPrint@@Base+0x30c>
   16b40:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16b44:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16b48:	add	x2, x2, #0x9f1
   16b4c:	add	x0, x0, #0xa13
   16b50:	mov	x4, #0x0                   	// #0
   16b54:	mov	x3, #0x0                   	// #0
   16b58:	mov	w1, #0x3c                  	// #60
   16b5c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   16b60:	mov	x0, x19
   16b64:	ldr	x30, [sp, #16]
   16b68:	ldp	x19, x20, [sp], #32
   16b6c:	b	103dc <__sancov_default_options@@Base+0x1f58>
   16b70:	ret
   16b74:	stp	x19, x20, [sp, #-48]!
   16b78:	mov	x19, x0
   16b7c:	stp	x21, x30, [sp, #16]
   16b80:	mov	x21, x1
   16b84:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   16b88:	mov	x1, x0
   16b8c:	mov	x0, x19
   16b90:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   16b94:	mov	x1, x0
   16b98:	mov	x5, #0x0                   	// #0
   16b9c:	mov	w4, #0xffffffff            	// #-1
   16ba0:	mov	w3, #0x22                  	// #34
   16ba4:	mov	w2, #0x3                   	// #3
   16ba8:	mov	x20, x0
   16bac:	mov	x0, #0x0                   	// #0
   16bb0:	bl	14ea8 <__sanitizer_set_report_fd@@Base+0x23f4>
   16bb4:	mov	x19, x0
   16bb8:	add	x1, sp, #0x2c
   16bbc:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   16bc0:	tst	w0, #0xff
   16bc4:	b.eq	16bf0 <__sanitizer_set_report_fd@@Base+0x413c>  // b.none
   16bc8:	ldr	w3, [sp, #44]
   16bcc:	mov	x0, #0x0                   	// #0
   16bd0:	cmp	w3, #0xc
   16bd4:	b.eq	16bfc <__sanitizer_set_report_fd@@Base+0x4148>  // b.none
   16bd8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16bdc:	mov	x1, x21
   16be0:	add	x2, x2, #0x9a8
   16be4:	mov	x0, x20
   16be8:	mov	w4, #0x0                   	// #0
   16bec:	bl	ffb4 <__sancov_default_options@@Base+0x1b30>
   16bf0:	mov	x0, x20
   16bf4:	bl	10384 <__sancov_default_options@@Base+0x1f00>
   16bf8:	mov	x0, x19
   16bfc:	ldp	x21, x30, [sp, #16]
   16c00:	ldp	x19, x20, [sp], #48
   16c04:	ret
   16c08:	stp	x19, x20, [sp, #-48]!
   16c0c:	mov	x20, x0
   16c10:	sub	x0, x0, #0x1
   16c14:	stp	x21, x22, [sp, #16]
   16c18:	tst	x0, x20
   16c1c:	stp	x23, x30, [sp, #32]
   16c20:	b.eq	16c44 <__sanitizer_set_report_fd@@Base+0x4190>  // b.none
   16c24:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16c28:	add	x2, x2, #0xa50
   16c2c:	mov	x4, #0x0                   	// #0
   16c30:	mov	x3, #0x0                   	// #0
   16c34:	mov	w1, #0x55                  	// #85
   16c38:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16c3c:	add	x0, x0, #0xa13
   16c40:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   16c44:	sub	x21, x1, #0x1
   16c48:	mov	x22, x1
   16c4c:	tst	x1, x21
   16c50:	b.eq	16c6c <__sanitizer_set_report_fd@@Base+0x41b8>  // b.none
   16c54:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   16c58:	mov	x4, #0x0                   	// #0
   16c5c:	add	x2, x2, #0x702
   16c60:	mov	x3, #0x0                   	// #0
   16c64:	mov	w1, #0x56                  	// #86
   16c68:	b	16c38 <__sanitizer_set_report_fd@@Base+0x4184>
   16c6c:	add	x23, x20, x22
   16c70:	mov	x1, x2
   16c74:	mov	x0, x23
   16c78:	bl	16b74 <__sanitizer_set_report_fd@@Base+0x40c0>
   16c7c:	mov	x19, x0
   16c80:	cbz	x0, 16cbc <__sanitizer_set_report_fd@@Base+0x4208>
   16c84:	add	x23, x23, x0
   16c88:	tst	x0, x21
   16c8c:	b.eq	16ca8 <__sanitizer_set_report_fd@@Base+0x41f4>  // b.none
   16c90:	add	x21, x0, x21
   16c94:	neg	x22, x22
   16c98:	and	x21, x21, x22
   16c9c:	mov	x19, x21
   16ca0:	sub	x1, x21, x0
   16ca4:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   16ca8:	add	x0, x19, x20
   16cac:	cmp	x23, x0
   16cb0:	b.eq	16cbc <__sanitizer_set_report_fd@@Base+0x4208>  // b.none
   16cb4:	sub	x1, x23, x0
   16cb8:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   16cbc:	mov	x0, x19
   16cc0:	ldp	x21, x22, [sp, #16]
   16cc4:	ldp	x23, x30, [sp, #32]
   16cc8:	ldp	x19, x20, [sp], #48
   16ccc:	ret
   16cd0:	stp	x19, x20, [sp, #-48]!
   16cd4:	mov	x19, x0
   16cd8:	stp	x21, x30, [sp, #16]
   16cdc:	mov	x21, x1
   16ce0:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   16ce4:	mov	x1, x0
   16ce8:	mov	x0, x19
   16cec:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   16cf0:	mov	x1, x0
   16cf4:	mov	x5, #0x0                   	// #0
   16cf8:	mov	w4, #0xffffffff            	// #-1
   16cfc:	mov	w3, #0x4022                	// #16418
   16d00:	mov	w2, #0x3                   	// #3
   16d04:	mov	x0, #0x0                   	// #0
   16d08:	bl	14ea8 <__sanitizer_set_report_fd@@Base+0x23f4>
   16d0c:	add	x1, sp, #0x2c
   16d10:	mov	x20, x0
   16d14:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   16d18:	tst	w0, #0xff
   16d1c:	b.eq	16d3c <__sanitizer_set_report_fd@@Base+0x4288>  // b.none
   16d20:	ldr	w3, [sp, #44]
   16d24:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16d28:	mov	x1, x21
   16d2c:	add	x2, x2, #0xa6e
   16d30:	mov	x0, x19
   16d34:	mov	w4, #0x0                   	// #0
   16d38:	bl	ffb4 <__sancov_default_options@@Base+0x1b30>
   16d3c:	mov	x0, x19
   16d40:	bl	10384 <__sancov_default_options@@Base+0x1f00>
   16d44:	mov	x0, x20
   16d48:	ldp	x21, x30, [sp, #16]
   16d4c:	ldp	x19, x20, [sp], #48
   16d50:	ret
   16d54:	stp	x19, x20, [sp, #-96]!
   16d58:	mov	x20, x1
   16d5c:	stp	x21, x22, [sp, #16]
   16d60:	and	w22, w2, #0xff
   16d64:	mov	x21, x0
   16d68:	str	x30, [sp, #32]
   16d6c:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   16d70:	mov	x1, x0
   16d74:	mov	x19, x0
   16d78:	mov	x0, x20
   16d7c:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   16d80:	neg	x19, x19
   16d84:	mov	x5, #0x0                   	// #0
   16d88:	mov	w4, #0xffffffff            	// #-1
   16d8c:	mov	w3, #0x32                  	// #50
   16d90:	mov	w2, #0x3                   	// #3
   16d94:	mov	x1, x0
   16d98:	and	x0, x19, x21
   16d9c:	bl	14ea8 <__sanitizer_set_report_fd@@Base+0x23f4>
   16da0:	add	x1, sp, #0x34
   16da4:	mov	x19, x0
   16da8:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   16dac:	tst	w0, #0xff
   16db0:	b.eq	16e10 <__sanitizer_set_report_fd@@Base+0x435c>  // b.none
   16db4:	cbz	w22, 16dd8 <__sanitizer_set_report_fd@@Base+0x4324>
   16db8:	ldr	w0, [sp, #52]
   16dbc:	cmp	w0, #0xc
   16dc0:	b.ne	16dd8 <__sanitizer_set_report_fd@@Base+0x4324>  // b.any
   16dc4:	mov	x0, #0x0                   	// #0
   16dc8:	ldp	x21, x22, [sp, #16]
   16dcc:	ldr	x30, [sp, #32]
   16dd0:	ldp	x19, x20, [sp], #96
   16dd4:	ret
   16dd8:	add	x19, sp, #0x38
   16ddc:	mov	x3, x21
   16de0:	mov	x1, #0x28                  	// #40
   16de4:	mov	x0, x19
   16de8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16dec:	add	x2, x2, #0xa81
   16df0:	bl	1886c <OnPrint@@Base+0x4>
   16df4:	ldr	w3, [sp, #52]
   16df8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16dfc:	mov	x1, x19
   16e00:	add	x2, x2, #0x9a8
   16e04:	mov	x0, x20
   16e08:	mov	w4, #0x0                   	// #0
   16e0c:	bl	ffb4 <__sancov_default_options@@Base+0x1b30>
   16e10:	mov	x0, x20
   16e14:	bl	10384 <__sancov_default_options@@Base+0x1f00>
   16e18:	mov	x0, x19
   16e1c:	b	16dc8 <__sanitizer_set_report_fd@@Base+0x4314>
   16e20:	mov	w2, #0x0                   	// #0
   16e24:	b	16d54 <__sanitizer_set_report_fd@@Base+0x42a0>
   16e28:	mov	w2, #0x1                   	// #1
   16e2c:	b	16d54 <__sanitizer_set_report_fd@@Base+0x42a0>
   16e30:	str	x30, [sp, #-16]!
   16e34:	mov	w2, #0x0                   	// #0
   16e38:	bl	14ecc <__sanitizer_set_report_fd@@Base+0x2418>
   16e3c:	cmp	w0, #0x0
   16e40:	cset	w0, eq  // eq = none
   16e44:	ldr	x30, [sp], #16
   16e48:	ret
   16e4c:	str	x30, [sp, #-16]!
   16e50:	mov	w2, #0x1                   	// #1
   16e54:	bl	14ecc <__sanitizer_set_report_fd@@Base+0x2418>
   16e58:	cmp	w0, #0x0
   16e5c:	cset	w0, eq  // eq = none
   16e60:	ldr	x30, [sp], #16
   16e64:	ret
   16e68:	ret
   16e6c:	stp	x19, x20, [sp, #-32]!
   16e70:	cmp	w1, #0x2
   16e74:	mov	x20, x2
   16e78:	str	x30, [sp, #16]
   16e7c:	b.hi	16e8c <__sanitizer_set_report_fd@@Base+0x43d8>  // b.pmore
   16e80:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16e84:	add	x2, x2, #0xc20
   16e88:	ldrsh	w3, [x2, w1, uxtw #1]
   16e8c:	mov	w2, #0x1b0                 	// #432
   16e90:	mov	w1, w3
   16e94:	bl	14f08 <__sanitizer_set_report_fd@@Base+0x2454>
   16e98:	mov	x19, x0
   16e9c:	mov	x1, x20
   16ea0:	sxtw	x0, w0
   16ea4:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   16ea8:	tst	w0, #0xff
   16eac:	csinv	w0, w19, wzr, eq  // eq = none
   16eb0:	ldr	x30, [sp, #16]
   16eb4:	ldp	x19, x20, [sp], #32
   16eb8:	ret
   16ebc:	b	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   16ec0:	stp	x19, x20, [sp, #-32]!
   16ec4:	mov	x19, x3
   16ec8:	stp	x21, x30, [sp, #16]
   16ecc:	mov	x21, x4
   16ed0:	bl	14f2c <__sanitizer_set_report_fd@@Base+0x2478>
   16ed4:	mov	x1, x21
   16ed8:	mov	x20, x0
   16edc:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   16ee0:	tst	w0, #0xff
   16ee4:	b.ne	16ef8 <__sanitizer_set_report_fd@@Base+0x4444>  // b.any
   16ee8:	cbz	x19, 16ef0 <__sanitizer_set_report_fd@@Base+0x443c>
   16eec:	str	x20, [x19]
   16ef0:	mov	w0, #0x1                   	// #1
   16ef4:	b	16efc <__sanitizer_set_report_fd@@Base+0x4448>
   16ef8:	mov	w0, #0x0                   	// #0
   16efc:	ldp	x21, x30, [sp, #16]
   16f00:	ldp	x19, x20, [sp], #32
   16f04:	ret
   16f08:	stp	x19, x20, [sp, #-32]!
   16f0c:	mov	x19, x3
   16f10:	stp	x21, x30, [sp, #16]
   16f14:	mov	x21, x4
   16f18:	bl	14f50 <__sanitizer_set_report_fd@@Base+0x249c>
   16f1c:	mov	x1, x21
   16f20:	mov	x20, x0
   16f24:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   16f28:	tst	w0, #0xff
   16f2c:	b.ne	16f40 <__sanitizer_set_report_fd@@Base+0x448c>  // b.any
   16f30:	cbz	x19, 16f38 <__sanitizer_set_report_fd@@Base+0x4484>
   16f34:	str	x20, [x19]
   16f38:	mov	w0, #0x1                   	// #1
   16f3c:	b	16f44 <__sanitizer_set_report_fd@@Base+0x4490>
   16f40:	mov	w0, #0x0                   	// #0
   16f44:	ldp	x21, x30, [sp, #16]
   16f48:	ldp	x19, x20, [sp], #32
   16f4c:	ret
   16f50:	stp	x19, x30, [sp, #-16]!
   16f54:	mov	x19, x2
   16f58:	bl	1505c <__sanitizer_set_report_fd@@Base+0x25a8>
   16f5c:	mov	x1, x19
   16f60:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   16f64:	and	w0, w0, #0xff
   16f68:	eor	w0, w0, #0x1
   16f6c:	ldp	x19, x30, [sp], #16
   16f70:	ret
   16f74:	stp	x19, x20, [sp, #-32]!
   16f78:	mov	x2, #0x0                   	// #0
   16f7c:	stp	x21, x30, [sp, #16]
   16f80:	mov	x21, x1
   16f84:	mov	w1, #0x0                   	// #0
   16f88:	bl	16e6c <__sanitizer_set_report_fd@@Base+0x43b8>
   16f8c:	cmn	w0, #0x1
   16f90:	b.ne	16fb4 <__sanitizer_set_report_fd@@Base+0x4500>  // b.any
   16f94:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16f98:	add	x2, x2, #0xa99
   16f9c:	mov	x4, #0x0                   	// #0
   16fa0:	mov	x3, #0x0                   	// #0
   16fa4:	mov	w1, #0xc9                  	// #201
   16fa8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16fac:	add	x0, x0, #0xa13
   16fb0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   16fb4:	mov	w20, w0
   16fb8:	bl	14fe8 <__sanitizer_set_report_fd@@Base+0x2534>
   16fbc:	mov	x19, x0
   16fc0:	cmn	x0, #0x1
   16fc4:	b.ne	16fe0 <__sanitizer_set_report_fd@@Base+0x452c>  // b.any
   16fc8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16fcc:	mov	x4, x0
   16fd0:	mov	x3, x0
   16fd4:	add	x2, x2, #0xab5
   16fd8:	mov	w1, #0xcb                  	// #203
   16fdc:	b	16fa8 <__sanitizer_set_report_fd@@Base+0x44f4>
   16fe0:	cbnz	x0, 16ffc <__sanitizer_set_report_fd@@Base+0x4548>
   16fe4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   16fe8:	mov	x4, #0x0                   	// #0
   16fec:	add	x2, x2, #0xacf
   16ff0:	mov	x3, #0x0                   	// #0
   16ff4:	mov	w1, #0xcc                  	// #204
   16ff8:	b	16fa8 <__sanitizer_set_report_fd@@Base+0x44f4>
   16ffc:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   17000:	mov	x1, x0
   17004:	mov	x0, x19
   17008:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   1700c:	mov	w4, w20
   17010:	mov	x1, x0
   17014:	str	x1, [x21]
   17018:	mov	x5, #0x0                   	// #0
   1701c:	mov	w3, #0x2                   	// #2
   17020:	mov	w2, #0x1                   	// #1
   17024:	mov	x0, #0x0                   	// #0
   17028:	bl	14ea8 <__sanitizer_set_report_fd@@Base+0x23f4>
   1702c:	mov	x1, #0x0                   	// #0
   17030:	mov	x19, x0
   17034:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   17038:	tst	w0, #0xff
   1703c:	csel	x0, x19, xzr, eq  // eq = none
   17040:	ldp	x21, x30, [sp, #16]
   17044:	ldp	x19, x20, [sp], #32
   17048:	ret
   1704c:	stp	x19, x20, [sp, #-64]!
   17050:	cmp	x0, #0x0
   17054:	mov	x5, x3
   17058:	mov	w4, w2
   1705c:	stp	x21, x22, [sp, #16]
   17060:	mov	x21, x3
   17064:	mov	x3, #0x11                  	// #17
   17068:	csinc	x3, x3, xzr, ne  // ne = any
   1706c:	mov	w20, w2
   17070:	mov	w2, #0x3                   	// #3
   17074:	mov	x22, x1
   17078:	str	x30, [sp, #32]
   1707c:	bl	14ea8 <__sanitizer_set_report_fd@@Base+0x23f4>
   17080:	mov	x19, x0
   17084:	add	x1, sp, #0x3c
   17088:	str	wzr, [sp, #60]
   1708c:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   17090:	tst	w0, #0xff
   17094:	b.eq	170cc <__sanitizer_set_report_fd@@Base+0x4618>  // b.none
   17098:	ldr	w5, [sp, #60]
   1709c:	mov	x4, x19
   170a0:	mov	x3, x22
   170a4:	mov	x2, x21
   170a8:	mov	w1, w20
   170ac:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   170b0:	add	x0, x0, #0xae1
   170b4:	bl	18af0 <OnPrint@@Base+0x288>
   170b8:	mov	x0, #0x0                   	// #0
   170bc:	ldp	x21, x22, [sp, #16]
   170c0:	ldr	x30, [sp, #32]
   170c4:	ldp	x19, x20, [sp], #64
   170c8:	ret
   170cc:	mov	x0, x19
   170d0:	b	170bc <__sanitizer_set_report_fd@@Base+0x4608>
   170d4:	stp	x19, x20, [sp, #-160]!
   170d8:	mov	x20, x1
   170dc:	mov	w1, #0x1                   	// #1
   170e0:	stp	x21, x22, [sp, #16]
   170e4:	add	x22, sp, #0x30
   170e8:	mov	x21, x0
   170ec:	stp	x23, x30, [sp, #32]
   170f0:	add	x23, sp, #0x50
   170f4:	mov	x0, x22
   170f8:	bl	18efc <OnPrint@@Base+0x694>
   170fc:	stp	xzr, xzr, [sp, #104]
   17100:	str	xzr, [sp, #152]
   17104:	mov	x1, x23
   17108:	mov	x0, x22
   1710c:	bl	1932c <OnPrint@@Base+0xac4>
   17110:	tst	w0, #0xff
   17114:	b.eq	171c0 <__sanitizer_set_report_fd@@Base+0x470c>  // b.none
   17118:	ldp	x0, x2, [sp, #80]
   1711c:	cmp	x0, x2
   17120:	b.eq	17104 <__sanitizer_set_report_fd@@Base+0x4650>  // b.none
   17124:	cbnz	x2, 17148 <__sanitizer_set_report_fd@@Base+0x4694>
   17128:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1712c:	add	x2, x2, #0xb1e
   17130:	mov	x4, #0x0                   	// #0
   17134:	mov	x3, #0x0                   	// #0
   17138:	mov	w1, #0xef                  	// #239
   1713c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17140:	add	x0, x0, #0xa13
   17144:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   17148:	sub	x2, x2, #0x1
   1714c:	cmp	x0, x2
   17150:	b.ls	1716c <__sanitizer_set_report_fd@@Base+0x46b8>  // b.plast
   17154:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17158:	mov	x4, #0x0                   	// #0
   1715c:	add	x2, x2, #0xb37
   17160:	mov	x3, #0x0                   	// #0
   17164:	mov	w1, #0xe1                  	// #225
   17168:	b	1713c <__sanitizer_set_report_fd@@Base+0x4688>
   1716c:	cmp	x21, x20
   17170:	b.ls	1718c <__sanitizer_set_report_fd@@Base+0x46d8>  // b.plast
   17174:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17178:	mov	x4, #0x0                   	// #0
   1717c:	add	x2, x2, #0xb51
   17180:	mov	x3, #0x0                   	// #0
   17184:	mov	w1, #0xe2                  	// #226
   17188:	b	1713c <__sanitizer_set_report_fd@@Base+0x4688>
   1718c:	cmp	x2, x21
   17190:	cset	w19, cc  // cc = lo, ul, last
   17194:	cmp	x0, x20
   17198:	cset	w0, hi  // hi = pmore
   1719c:	orr	w19, w19, w0
   171a0:	cbnz	w19, 17104 <__sanitizer_set_report_fd@@Base+0x4650>
   171a4:	mov	x0, x22
   171a8:	bl	18e20 <OnPrint@@Base+0x5b8>
   171ac:	mov	w0, w19
   171b0:	ldp	x21, x22, [sp, #16]
   171b4:	ldp	x23, x30, [sp, #32]
   171b8:	ldp	x19, x20, [sp], #160
   171bc:	ret
   171c0:	mov	w19, #0x1                   	// #1
   171c4:	b	171a4 <__sanitizer_set_report_fd@@Base+0x46f0>
   171c8:	stp	x19, x20, [sp, #-160]!
   171cc:	mov	w1, #0x1                   	// #1
   171d0:	add	x20, sp, #0x30
   171d4:	stp	x21, x22, [sp, #16]
   171d8:	mov	x0, x20
   171dc:	str	x30, [sp, #32]
   171e0:	bl	18efc <OnPrint@@Base+0x694>
   171e4:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   171e8:	add	x1, x1, #0xb6b
   171ec:	mov	w2, #0x0                   	// #0
   171f0:	mov	x0, #0xfff                 	// #4095
   171f4:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   171f8:	mov	x19, x0
   171fc:	mov	x0, #0xfff                 	// #4095
   17200:	adrp	x21, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17204:	add	x22, sp, #0x50
   17208:	add	x21, x21, #0xb97
   1720c:	stp	x19, x0, [sp, #104]
   17210:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17214:	add	x0, x0, #0xb7a
   17218:	str	xzr, [sp, #152]
   1721c:	bl	18b74 <OnPrint@@Base+0x30c>
   17220:	mov	x1, x22
   17224:	mov	x0, x20
   17228:	bl	1932c <OnPrint@@Base+0xac4>
   1722c:	tst	w0, #0xff
   17230:	b.eq	17248 <__sanitizer_set_report_fd@@Base+0x4794>  // b.none
   17234:	ldp	x1, x2, [sp, #80]
   17238:	mov	x0, x21
   1723c:	ldr	x3, [sp, #104]
   17240:	bl	18af0 <OnPrint@@Base+0x288>
   17244:	b	17220 <__sanitizer_set_report_fd@@Base+0x476c>
   17248:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1724c:	add	x0, x0, #0xba2
   17250:	bl	18b74 <OnPrint@@Base+0x30c>
   17254:	mov	x1, #0xfff                 	// #4095
   17258:	mov	x0, x19
   1725c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   17260:	mov	x0, x20
   17264:	bl	18e20 <OnPrint@@Base+0x5b8>
   17268:	ldp	x21, x22, [sp, #16]
   1726c:	ldr	x30, [sp, #32]
   17270:	ldp	x19, x20, [sp], #160
   17274:	ret
   17278:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1727c:	add	x0, x0, #0xbbe
   17280:	b	15190 <__sanitizer_set_report_fd@@Base+0x26dc>
   17284:	and	w0, w0, #0xff
   17288:	cmp	w0, #0x2f
   1728c:	cset	w0, eq  // eq = none
   17290:	ret
   17294:	cbz	x0, 172a8 <__sanitizer_set_report_fd@@Base+0x47f4>
   17298:	ldrb	w0, [x0]
   1729c:	cmp	w0, #0x2f
   172a0:	cset	w0, eq  // eq = none
   172a4:	ret
   172a8:	mov	w0, #0x0                   	// #0
   172ac:	b	172a4 <__sanitizer_set_report_fd@@Base+0x47f0>
   172b0:	stp	x19, x20, [sp, #-48]!
   172b4:	mov	x19, x0
   172b8:	stp	x21, x22, [sp, #16]
   172bc:	mov	x21, x2
   172c0:	mov	x22, x1
   172c4:	mov	w1, #0x1                   	// #1
   172c8:	ldr	x20, [x0]
   172cc:	str	x30, [sp, #32]
   172d0:	ldxrb	w0, [x20]
   172d4:	stxrb	w2, w1, [x20]
   172d8:	cbnz	w2, 172d0 <__sanitizer_set_report_fd@@Base+0x481c>
   172dc:	dmb	ish
   172e0:	tst	w0, #0xff
   172e4:	b.eq	172f0 <__sanitizer_set_report_fd@@Base+0x483c>  // b.none
   172e8:	mov	x0, x20
   172ec:	bl	b08c <__sanitizer_get_allocated_size@@Base+0xb8c>
   172f0:	mov	x0, x19
   172f4:	bl	126d0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x180c>
   172f8:	ldr	w0, [x19, #8]
   172fc:	mov	x2, x21
   17300:	mov	x1, x22
   17304:	bl	14f50 <__sanitizer_set_report_fd@@Base+0x249c>
   17308:	cmp	x0, x21
   1730c:	b.eq	17338 <__sanitizer_set_report_fd@@Base+0x4884>  // b.none
   17310:	ldr	w20, [x19, #8]
   17314:	adrp	x19, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17318:	add	x19, x19, #0xbc2
   1731c:	mov	x0, x19
   17320:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   17324:	mov	x1, x19
   17328:	mov	x2, x0
   1732c:	mov	w0, w20
   17330:	bl	14f50 <__sanitizer_set_report_fd@@Base+0x249c>
   17334:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   17338:	dmb	ish
   1733c:	strb	wzr, [x20]
   17340:	ldp	x21, x22, [sp, #16]
   17344:	ldr	x30, [sp, #32]
   17348:	ldp	x19, x20, [sp], #48
   1734c:	ret
   17350:	ldr	x0, [x0]
   17354:	ldr	x0, [x0, #16]
   17358:	ret
   1735c:	ldr	x0, [x0]
   17360:	ldr	w0, [x0]
   17364:	cmp	w0, #0xb
   17368:	cset	w0, eq  // eq = none
   1736c:	ret
   17370:	ldr	x0, [x0]
   17374:	ldr	w0, [x0]
   17378:	ret
   1737c:	ldr	x0, [x0]
   17380:	ldr	w0, [x0]
   17384:	sub	w0, w0, #0x4
   17388:	cmp	w0, #0x7
   1738c:	b.hi	173d8 <__sanitizer_set_report_fd@@Base+0x4924>  // b.pmore
   17390:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17394:	add	x1, x1, #0xc18
   17398:	ldrb	w0, [x1, w0, uxtw]
   1739c:	adr	x1, 173a8 <__sanitizer_set_report_fd@@Base+0x48f4>
   173a0:	add	x0, x1, w0, sxtb #2
   173a4:	br	x0
   173a8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   173ac:	add	x0, x0, #0xc12
   173b0:	ret
   173b4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   173b8:	add	x0, x0, #0xc09
   173bc:	b	173b0 <__sanitizer_set_report_fd@@Base+0x48fc>
   173c0:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   173c4:	add	x0, x0, #0xe59
   173c8:	b	173b0 <__sanitizer_set_report_fd@@Base+0x48fc>
   173cc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   173d0:	add	x0, x0, #0xc0e
   173d4:	b	173b0 <__sanitizer_set_report_fd@@Base+0x48fc>
   173d8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   173dc:	add	x0, x0, #0xbf6
   173e0:	b	173b0 <__sanitizer_set_report_fd@@Base+0x48fc>
   173e4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   173e8:	add	x0, x0, #0xc05
   173ec:	b	173b0 <__sanitizer_set_report_fd@@Base+0x48fc>
   173f0:	stp	x19, x20, [sp, #-208]!
   173f4:	add	x20, sp, #0x40
   173f8:	stp	x21, x22, [sp, #16]
   173fc:	mov	x21, x2
   17400:	mov	x22, x1
   17404:	mov	w1, #0x0                   	// #0
   17408:	stp	x23, x24, [sp, #32]
   1740c:	mov	x23, x0
   17410:	mov	x0, x20
   17414:	str	x30, [sp, #48]
   17418:	bl	18efc <OnPrint@@Base+0x694>
   1741c:	add	x0, sp, #0x60
   17420:	mov	x1, #0x1000                	// #4096
   17424:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   17428:	add	x24, sp, #0x80
   1742c:	ldr	x0, [sp, #96]
   17430:	str	x0, [sp, #152]
   17434:	mov	x0, #0x1000                	// #4096
   17438:	str	x0, [sp, #160]
   1743c:	str	xzr, [sp, #200]
   17440:	mov	x1, x24
   17444:	mov	x0, x20
   17448:	bl	1932c <OnPrint@@Base+0xac4>
   1744c:	ands	w19, w0, #0xff
   17450:	b.eq	1747c <__sanitizer_set_report_fd@@Base+0x49c8>  // b.none
   17454:	ldr	x0, [sp, #168]
   17458:	tbz	w0, #2, 17440 <__sanitizer_set_report_fd@@Base+0x498c>
   1745c:	ldr	x1, [sp, #152]
   17460:	mov	x0, x23
   17464:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   17468:	cbnz	w0, 17440 <__sanitizer_set_report_fd@@Base+0x498c>
   1746c:	ldr	x0, [sp, #128]
   17470:	str	x0, [x22]
   17474:	ldr	x0, [sp, #136]
   17478:	str	x0, [x21]
   1747c:	ldp	x0, x1, [sp, #96]
   17480:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   17484:	mov	x0, x20
   17488:	bl	18e20 <OnPrint@@Base+0x5b8>
   1748c:	mov	w0, w19
   17490:	ldp	x21, x22, [sp, #16]
   17494:	ldp	x23, x24, [sp, #32]
   17498:	ldr	x30, [sp, #48]
   1749c:	ldp	x19, x20, [sp], #208
   174a0:	ret
   174a4:	str	x30, [sp, #-32]!
   174a8:	add	x1, sp, #0x10
   174ac:	bl	6d20 <getrlimit@plt>
   174b0:	cbz	w0, 174d4 <__sanitizer_set_report_fd@@Base+0x4a20>
   174b4:	sxtw	x4, w0
   174b8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   174bc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   174c0:	add	x2, x2, #0xc26
   174c4:	add	x0, x0, #0xc49
   174c8:	mov	x3, #0x0                   	// #0
   174cc:	mov	w1, #0x5a                  	// #90
   174d0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   174d4:	ldr	x0, [sp, #16]
   174d8:	ldr	x30, [sp], #32
   174dc:	ret
   174e0:	stp	x19, x30, [sp, #-32]!
   174e4:	str	x1, [sp, #16]
   174e8:	str	x1, [sp, #24]
   174ec:	add	x1, sp, #0x10
   174f0:	bl	6c00 <setrlimit@plt>
   174f4:	cbz	w0, 17520 <__sanitizer_set_report_fd@@Base+0x4a6c>
   174f8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   174fc:	ldr	x0, [x0, #4008]
   17500:	ldr	x19, [x0]
   17504:	bl	6b20 <__errno_location@plt>
   17508:	ldr	w2, [x0]
   1750c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17510:	mov	x1, x19
   17514:	add	x0, x0, #0xc8e
   17518:	bl	18b74 <OnPrint@@Base+0x30c>
   1751c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   17520:	ldp	x19, x30, [sp], #32
   17524:	ret
   17528:	stp	x19, x20, [sp, #-192]!
   1752c:	mov	w19, w0
   17530:	stp	x21, x30, [sp, #16]
   17534:	mov	x21, x1
   17538:	bl	15a3c <__sanitizer_set_report_fd@@Base+0x2f88>
   1753c:	cbz	w0, 175d4 <__sanitizer_set_report_fd@@Base+0x4b20>
   17540:	add	x20, sp, #0x28
   17544:	mov	x2, #0x98                  	// #152
   17548:	mov	w1, #0x0                   	// #0
   1754c:	mov	x0, x20
   17550:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   17554:	str	x21, [sp, #40]
   17558:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1755c:	mov	w1, #0x4                   	// #4
   17560:	movk	w1, #0x4000, lsl #16
   17564:	mov	x2, #0x0                   	// #0
   17568:	ldr	x0, [x0, #4040]
   1756c:	ldrb	w0, [x0, #97]
   17570:	cmp	w0, #0x0
   17574:	mov	w0, #0x4                   	// #4
   17578:	movk	w0, #0x4800, lsl #16
   1757c:	csel	w0, w0, w1, ne  // ne = any
   17580:	mov	x1, x20
   17584:	str	w0, [sp, #176]
   17588:	mov	w0, w19
   1758c:	bl	160f8 <__sanitizer_set_report_fd@@Base+0x3644>
   17590:	sxtw	x4, w0
   17594:	cbz	w0, 175b4 <__sanitizer_set_report_fd@@Base+0x4b00>
   17598:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1759c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   175a0:	add	x2, x2, #0xcaf
   175a4:	add	x0, x0, #0xc49
   175a8:	mov	x3, #0x0                   	// #0
   175ac:	mov	w1, #0xd2                  	// #210
   175b0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   175b4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   175b8:	ldr	x0, [x0, #3680]
   175bc:	ldr	w0, [x0]
   175c0:	cbz	w0, 175d4 <__sanitizer_set_report_fd@@Base+0x4b20>
   175c4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   175c8:	mov	w1, w19
   175cc:	add	x0, x0, #0xce9
   175d0:	bl	18b74 <OnPrint@@Base+0x30c>
   175d4:	ldp	x21, x30, [sp, #16]
   175d8:	ldp	x19, x20, [sp], #192
   175dc:	ret
   175e0:	b	6cd0 <getuid@plt>
   175e4:	b	6cc0 <pthread_self@plt>
   175e8:	stp	x19, x20, [sp, #-32]!
   175ec:	mov	x20, x1
   175f0:	stp	x21, x30, [sp, #16]
   175f4:	mov	x21, x0
   175f8:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   175fc:	mov	x19, x0
   17600:	mov	x1, x0
   17604:	neg	x19, x19
   17608:	mov	x0, x21
   1760c:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   17610:	and	x1, x19, x20
   17614:	cmp	x0, x1
   17618:	b.cs	17630 <__sanitizer_set_report_fd@@Base+0x4b7c>  // b.hs, b.nlast
   1761c:	ldp	x21, x30, [sp, #16]
   17620:	sub	x1, x1, x0
   17624:	ldp	x19, x20, [sp], #32
   17628:	mov	w2, #0x4                   	// #4
   1762c:	b	6ad0 <madvise@plt>
   17630:	ldp	x21, x30, [sp, #16]
   17634:	ldp	x19, x20, [sp], #32
   17638:	ret
   1763c:	str	x30, [sp, #-16]!
   17640:	mov	w2, #0xf                   	// #15
   17644:	bl	6ad0 <madvise@plt>
   17648:	cmp	w0, #0x0
   1764c:	cset	w0, eq  // eq = none
   17650:	ldr	x30, [sp], #16
   17654:	ret
   17658:	str	x30, [sp, #-16]!
   1765c:	mov	w2, #0x10                  	// #16
   17660:	bl	6ad0 <madvise@plt>
   17664:	cmp	w0, #0x0
   17668:	cset	w0, eq  // eq = none
   1766c:	ldr	x30, [sp], #16
   17670:	ret
   17674:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17678:	ldr	x0, [x0, #4040]
   1767c:	ldrb	w0, [x0, #178]
   17680:	cbz	w0, 17690 <__sanitizer_set_report_fd@@Base+0x4bdc>
   17684:	mov	x1, #0x0                   	// #0
   17688:	mov	w0, #0x4                   	// #4
   1768c:	b	174e0 <__sanitizer_set_report_fd@@Base+0x4a2c>
   17690:	ret
   17694:	str	x30, [sp, #-16]!
   17698:	mov	w0, #0x3                   	// #3
   1769c:	bl	174a4 <__sanitizer_set_report_fd@@Base+0x49f0>
   176a0:	cmn	x0, #0x1
   176a4:	cset	w0, eq  // eq = none
   176a8:	ldr	x30, [sp], #16
   176ac:	ret
   176b0:	mov	w0, #0x3                   	// #3
   176b4:	b	174a4 <__sanitizer_set_report_fd@@Base+0x49f0>
   176b8:	mov	x1, x0
   176bc:	str	x30, [sp, #-16]!
   176c0:	mov	w0, #0x3                   	// #3
   176c4:	bl	174e0 <__sanitizer_set_report_fd@@Base+0x4a2c>
   176c8:	bl	17694 <__sanitizer_set_report_fd@@Base+0x4be0>
   176cc:	tst	w0, #0xff
   176d0:	b.eq	176f4 <__sanitizer_set_report_fd@@Base+0x4c40>  // b.none
   176d4:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   176d8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   176dc:	add	x2, x2, #0xd10
   176e0:	add	x0, x0, #0xc49
   176e4:	mov	x4, #0x0                   	// #0
   176e8:	mov	x3, #0x0                   	// #0
   176ec:	mov	w1, #0x7a                  	// #122
   176f0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   176f4:	ldr	x30, [sp], #16
   176f8:	ret
   176fc:	str	x30, [sp, #-16]!
   17700:	mov	w0, #0x9                   	// #9
   17704:	bl	174a4 <__sanitizer_set_report_fd@@Base+0x49f0>
   17708:	cmn	x0, #0x1
   1770c:	cset	w0, eq  // eq = none
   17710:	ldr	x30, [sp], #16
   17714:	ret
   17718:	str	x30, [sp, #-16]!
   1771c:	mov	x1, #0xffffffffffffffff    	// #-1
   17720:	mov	w0, #0x9                   	// #9
   17724:	bl	174e0 <__sanitizer_set_report_fd@@Base+0x4a2c>
   17728:	bl	176fc <__sanitizer_set_report_fd@@Base+0x4c48>
   1772c:	tst	w0, #0xff
   17730:	b.ne	17754 <__sanitizer_set_report_fd@@Base+0x4ca0>  // b.any
   17734:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17738:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1773c:	add	x2, x2, #0xd33
   17740:	add	x0, x0, #0xc49
   17744:	mov	x4, #0x0                   	// #0
   17748:	mov	x3, #0x0                   	// #0
   1774c:	mov	w1, #0x84                  	// #132
   17750:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   17754:	ldr	x30, [sp], #16
   17758:	ret
   1775c:	b	6890 <sleep@plt>
   17760:	mov	w1, #0x3e8                 	// #1000
   17764:	mul	w0, w0, w1
   17768:	b	6ae0 <usleep@plt>
   1776c:	stp	x19, x30, [sp, #-176]!
   17770:	mov	w0, #0x6                   	// #6
   17774:	bl	15a3c <__sanitizer_set_report_fd@@Base+0x2f88>
   17778:	cbz	w0, 177a4 <__sanitizer_set_report_fd@@Base+0x4cf0>
   1777c:	add	x19, sp, #0x18
   17780:	mov	x2, #0x98                  	// #152
   17784:	mov	w1, #0x0                   	// #0
   17788:	mov	x0, x19
   1778c:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   17790:	str	xzr, [sp, #24]
   17794:	mov	x1, x19
   17798:	mov	x2, #0x0                   	// #0
   1779c:	mov	w0, #0x6                   	// #6
   177a0:	bl	160f8 <__sanitizer_set_report_fd@@Base+0x3644>
   177a4:	bl	6c50 <abort@plt>
   177a8:	b	2c500 <__asan_backtrace_vector_release@@Base+0x60>
   177ac:	str	x30, [sp, #-16]!
   177b0:	bl	6900 <isatty@plt>
   177b4:	cmp	w0, #0x0
   177b8:	cset	w0, ne  // ne = any
   177bc:	ldr	x30, [sp], #16
   177c0:	ret
   177c4:	str	x30, [sp, #-64]!
   177c8:	mov	x0, #0x0                   	// #0
   177cc:	add	x1, sp, #0x10
   177d0:	bl	6d30 <sigaltstack@plt>
   177d4:	cbz	w0, 177f8 <__sanitizer_set_report_fd@@Base+0x4d44>
   177d8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   177dc:	sxtw	x4, w0
   177e0:	add	x2, x2, #0xd58
   177e4:	mov	x3, #0x0                   	// #0
   177e8:	mov	w1, #0xb0                  	// #176
   177ec:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   177f0:	add	x0, x0, #0xc49
   177f4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   177f8:	ldr	w0, [sp, #24]
   177fc:	tbz	w0, #1, 1784c <__sanitizer_set_report_fd@@Base+0x4d98>
   17800:	mov	w2, #0x0                   	// #0
   17804:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17808:	mov	x0, #0x10000               	// #65536
   1780c:	add	x1, x1, #0xd85
   17810:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   17814:	str	x0, [sp, #40]
   17818:	mov	x0, #0x10000               	// #65536
   1781c:	mov	x1, #0x0                   	// #0
   17820:	str	wzr, [sp, #48]
   17824:	str	x0, [sp, #56]
   17828:	add	x0, sp, #0x28
   1782c:	bl	6d30 <sigaltstack@plt>
   17830:	sxtw	x4, w0
   17834:	cbz	w0, 1784c <__sanitizer_set_report_fd@@Base+0x4d98>
   17838:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1783c:	mov	x3, #0x0                   	// #0
   17840:	add	x2, x2, #0xd9d
   17844:	mov	w1, #0xbb                  	// #187
   17848:	b	177ec <__sanitizer_set_report_fd@@Base+0x4d38>
   1784c:	ldr	x30, [sp], #64
   17850:	ret
   17854:	str	x30, [sp, #-64]!
   17858:	mov	w0, #0x2                   	// #2
   1785c:	str	w0, [sp, #24]
   17860:	mov	x0, #0x10000               	// #65536
   17864:	add	x1, sp, #0x28
   17868:	str	xzr, [sp, #16]
   1786c:	str	x0, [sp, #32]
   17870:	add	x0, sp, #0x10
   17874:	bl	6d30 <sigaltstack@plt>
   17878:	cbz	w0, 1789c <__sanitizer_set_report_fd@@Base+0x4de8>
   1787c:	sxtw	x4, w0
   17880:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17884:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17888:	add	x2, x2, #0xdca
   1788c:	add	x0, x0, #0xc49
   17890:	mov	x3, #0x0                   	// #0
   17894:	mov	w1, #0xc3                  	// #195
   17898:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1789c:	ldr	x0, [sp, #40]
   178a0:	ldr	x1, [sp, #56]
   178a4:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   178a8:	ldr	x30, [sp], #64
   178ac:	ret
   178b0:	stp	x19, x30, [sp, #-16]!
   178b4:	mov	x19, x0
   178b8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   178bc:	ldr	x0, [x0, #4040]
   178c0:	ldrb	w0, [x0, #97]
   178c4:	cbz	w0, 178cc <__sanitizer_set_report_fd@@Base+0x4e18>
   178c8:	bl	177c4 <__sanitizer_set_report_fd@@Base+0x4d10>
   178cc:	mov	x1, x19
   178d0:	mov	w0, #0xb                   	// #11
   178d4:	bl	17528 <__sanitizer_set_report_fd@@Base+0x4a74>
   178d8:	mov	x1, x19
   178dc:	mov	w0, #0x7                   	// #7
   178e0:	bl	17528 <__sanitizer_set_report_fd@@Base+0x4a74>
   178e4:	mov	x1, x19
   178e8:	mov	w0, #0x6                   	// #6
   178ec:	bl	17528 <__sanitizer_set_report_fd@@Base+0x4a74>
   178f0:	mov	x1, x19
   178f4:	mov	w0, #0x8                   	// #8
   178f8:	bl	17528 <__sanitizer_set_report_fd@@Base+0x4a74>
   178fc:	mov	x1, x19
   17900:	mov	w0, #0x4                   	// #4
   17904:	bl	17528 <__sanitizer_set_report_fd@@Base+0x4a74>
   17908:	mov	x1, x19
   1790c:	mov	w0, #0x5                   	// #5
   17910:	ldp	x19, x30, [sp], #16
   17914:	b	17528 <__sanitizer_set_report_fd@@Base+0x4a74>
   17918:	stp	x19, x20, [sp, #-32]!
   1791c:	mov	x19, x0
   17920:	ldr	x20, [x0, #16]
   17924:	str	x30, [sp, #16]
   17928:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1792c:	ldr	x1, [x19, #32]
   17930:	add	x20, x20, x0
   17934:	cmp	x20, x1
   17938:	b.ls	1798c <__sanitizer_set_report_fd@@Base+0x4ed8>  // b.plast
   1793c:	mov	x0, #0xffff                	// #65535
   17940:	add	x1, x1, x0
   17944:	ldr	x0, [x19, #16]
   17948:	cmp	x0, x1
   1794c:	b.cs	1798c <__sanitizer_set_report_fd@@Base+0x4ed8>  // b.hs, b.nlast
   17950:	ldr	x0, [x19]
   17954:	ldr	w1, [x0, #8]
   17958:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1795c:	ldr	x0, [x0, #3424]
   17960:	ldr	w0, [x0]
   17964:	cmp	w1, w0
   17968:	b.eq	17994 <__sanitizer_set_report_fd@@Base+0x4ee0>  // b.none
   1796c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17970:	ldr	x0, [x0, #3472]
   17974:	ldr	w0, [x0]
   17978:	cmp	w0, w1
   1797c:	cset	w0, eq  // eq = none
   17980:	ldr	x30, [sp, #16]
   17984:	ldp	x19, x20, [sp], #32
   17988:	ret
   1798c:	mov	w0, #0x0                   	// #0
   17990:	b	17980 <__sanitizer_set_report_fd@@Base+0x4ecc>
   17994:	mov	w0, #0x1                   	// #1
   17998:	b	17980 <__sanitizer_set_report_fd@@Base+0x4ecc>
   1799c:	stp	x19, x20, [sp, #-48]!
   179a0:	mov	x19, x1
   179a4:	mov	x20, x0
   179a8:	str	x30, [sp, #16]
   179ac:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   179b0:	mov	x4, #0xa                   	// #10
   179b4:	mul	x4, x0, x4
   179b8:	cmp	x19, x4
   179bc:	b.cc	179dc <__sanitizer_set_report_fd@@Base+0x4f28>  // b.lo, b.ul, b.last
   179c0:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   179c4:	mov	x3, x19
   179c8:	add	x2, x2, #0xdf9
   179cc:	mov	w1, #0x118                 	// #280
   179d0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   179d4:	add	x0, x0, #0xc49
   179d8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   179dc:	add	x0, sp, #0x28
   179e0:	bl	6790 <pipe@plt>
   179e4:	cbnz	w0, 17a58 <__sanitizer_set_report_fd@@Base+0x4fa4>
   179e8:	ldr	w0, [sp, #44]
   179ec:	mov	x2, x19
   179f0:	mov	x1, x20
   179f4:	bl	14f50 <__sanitizer_set_report_fd@@Base+0x249c>
   179f8:	mov	x20, x0
   179fc:	add	x1, sp, #0x24
   17a00:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   17a04:	tst	w0, #0xff
   17a08:	b.eq	17a30 <__sanitizer_set_report_fd@@Base+0x4f7c>  // b.none
   17a0c:	ldrsw	x4, [sp, #36]
   17a10:	mov	w19, #0x0                   	// #0
   17a14:	cmp	x4, #0xe
   17a18:	b.eq	17a38 <__sanitizer_set_report_fd@@Base+0x4f84>  // b.none
   17a1c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17a20:	mov	x3, #0xe                   	// #14
   17a24:	add	x2, x2, #0xe17
   17a28:	mov	w1, #0x121                 	// #289
   17a2c:	b	179d0 <__sanitizer_set_report_fd@@Base+0x4f1c>
   17a30:	cmp	x19, x20
   17a34:	cset	w19, eq  // eq = none
   17a38:	ldr	w0, [sp, #40]
   17a3c:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17a40:	ldr	w0, [sp, #44]
   17a44:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17a48:	mov	w0, w19
   17a4c:	ldr	x30, [sp, #16]
   17a50:	ldp	x19, x20, [sp], #48
   17a54:	ret
   17a58:	mov	w19, #0x0                   	// #0
   17a5c:	b	17a48 <__sanitizer_set_report_fd@@Base+0x4f94>
   17a60:	b	18e50 <OnPrint@@Base+0x5e8>
   17a64:	stp	x19, x20, [sp, #-240]!
   17a68:	stp	x21, x30, [sp, #16]
   17a6c:	mov	x21, x1
   17a70:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17a74:	ldr	x1, [x1, #4040]
   17a78:	ldrb	w1, [x1, #215]
   17a7c:	cbz	w1, 17b30 <__sanitizer_set_report_fd@@Base+0x507c>
   17a80:	mov	x19, x0
   17a84:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   17a88:	cmp	x0, #0xbd
   17a8c:	b.ls	17ab0 <__sanitizer_set_report_fd@@Base+0x4ffc>  // b.plast
   17a90:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17a94:	add	x2, x2, #0xe31
   17a98:	mov	x4, #0x0                   	// #0
   17a9c:	mov	x3, #0x0                   	// #0
   17aa0:	mov	w1, #0x13c                 	// #316
   17aa4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17aa8:	add	x0, x0, #0xc49
   17aac:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   17ab0:	bl	154b0 <__sanitizer_set_report_fd@@Base+0x29fc>
   17ab4:	add	x20, sp, #0x28
   17ab8:	mov	x4, x19
   17abc:	mov	x3, x0
   17ac0:	mov	x1, #0xc8                  	// #200
   17ac4:	mov	x0, x20
   17ac8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17acc:	add	x2, x2, #0xe69
   17ad0:	bl	1886c <OnPrint@@Base+0x4>
   17ad4:	mov	w2, #0x1c0                 	// #448
   17ad8:	mov	w1, #0x242                 	// #578
   17adc:	mov	x0, x20
   17ae0:	bl	6740 <shm_open@plt>
   17ae4:	mov	x1, x21
   17ae8:	mov	w19, w0
   17aec:	bl	14f74 <__sanitizer_set_report_fd@@Base+0x24c0>
   17af0:	sxtw	x4, w0
   17af4:	cbz	w0, 17b0c <__sanitizer_set_report_fd@@Base+0x5058>
   17af8:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17afc:	mov	x3, #0x0                   	// #0
   17b00:	add	x2, x2, #0xe72
   17b04:	mov	w1, #0x142                 	// #322
   17b08:	b	17aa4 <__sanitizer_set_report_fd@@Base+0x4ff0>
   17b0c:	mov	x0, x20
   17b10:	bl	6af0 <shm_unlink@plt>
   17b14:	sxtw	x4, w0
   17b18:	cbz	w0, 17b34 <__sanitizer_set_report_fd@@Base+0x5080>
   17b1c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17b20:	mov	x3, #0x0                   	// #0
   17b24:	add	x2, x2, #0xe72
   17b28:	mov	w1, #0x144                 	// #324
   17b2c:	b	17aa4 <__sanitizer_set_report_fd@@Base+0x4ff0>
   17b30:	mov	w19, #0xffffffff            	// #-1
   17b34:	mov	w0, w19
   17b38:	ldp	x21, x30, [sp, #16]
   17b3c:	ldp	x19, x20, [sp], #240
   17b40:	ret
   17b44:	stp	x19, x20, [sp, #-64]!
   17b48:	mov	x20, x1
   17b4c:	stp	x21, x22, [sp, #16]
   17b50:	mov	x22, x0
   17b54:	stp	x23, x30, [sp, #32]
   17b58:	cbz	x2, 17bf8 <__sanitizer_set_report_fd@@Base+0x5144>
   17b5c:	mov	x0, x2
   17b60:	bl	17a64 <__sanitizer_set_report_fd@@Base+0x4fb0>
   17b64:	cmn	w0, #0x1
   17b68:	mov	w23, #0x4012                	// #16402
   17b6c:	mov	w3, #0x4032                	// #16434
   17b70:	mov	w21, w0
   17b74:	csel	w23, w23, w3, ne  // ne = any
   17b78:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   17b7c:	mov	x1, x0
   17b80:	mov	x19, x0
   17b84:	mov	x0, x20
   17b88:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   17b8c:	neg	x19, x19
   17b90:	mov	w4, w21
   17b94:	mov	w3, w23
   17b98:	mov	x5, #0x0                   	// #0
   17b9c:	mov	w2, #0x3                   	// #3
   17ba0:	mov	x1, x0
   17ba4:	and	x0, x19, x22
   17ba8:	bl	14ea8 <__sanitizer_set_report_fd@@Base+0x23f4>
   17bac:	add	x1, sp, #0x3c
   17bb0:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   17bb4:	tst	w0, #0xff
   17bb8:	b.eq	17c04 <__sanitizer_set_report_fd@@Base+0x5150>  // b.none
   17bbc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17bc0:	ldr	w5, [sp, #60]
   17bc4:	mov	x4, x22
   17bc8:	mov	x3, x20
   17bcc:	ldr	x0, [x0, #4008]
   17bd0:	mov	x2, x20
   17bd4:	ldr	x1, [x0]
   17bd8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17bdc:	add	x0, x0, #0xe83
   17be0:	bl	18b74 <OnPrint@@Base+0x30c>
   17be4:	mov	w0, #0x0                   	// #0
   17be8:	ldp	x21, x22, [sp, #16]
   17bec:	ldp	x23, x30, [sp, #32]
   17bf0:	ldp	x19, x20, [sp], #64
   17bf4:	ret
   17bf8:	mov	w21, #0xffffffff            	// #-1
   17bfc:	mov	w23, #0x4032                	// #16434
   17c00:	b	17b78 <__sanitizer_set_report_fd@@Base+0x50c4>
   17c04:	mov	x0, x20
   17c08:	bl	10384 <__sancov_default_options@@Base+0x1f00>
   17c0c:	mov	w0, #0x1                   	// #1
   17c10:	b	17be8 <__sanitizer_set_report_fd@@Base+0x5134>
   17c14:	mov	x0, x1
   17c18:	mov	x1, x2
   17c1c:	b	16e28 <__sanitizer_set_report_fd@@Base+0x4374>
   17c20:	mov	x0, x1
   17c24:	mov	x1, x2
   17c28:	b	16e20 <__sanitizer_set_report_fd@@Base+0x436c>
   17c2c:	mov	x5, x0
   17c30:	mov	x0, x1
   17c34:	mov	x1, x2
   17c38:	str	x30, [sp, #-16]!
   17c3c:	ldr	x2, [x5, #8]
   17c40:	cmp	x1, x2
   17c44:	b.ls	17c68 <__sanitizer_set_report_fd@@Base+0x51b4>  // b.plast
   17c48:	mov	x4, x2
   17c4c:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17c50:	add	x2, x2, #0xece
   17c54:	mov	x3, x1
   17c58:	mov	w1, #0x175                 	// #373
   17c5c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17c60:	add	x0, x0, #0xc49
   17c64:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   17c68:	ldr	x4, [x5]
   17c6c:	add	x3, x1, x0
   17c70:	cmp	x4, x0
   17c74:	b.ne	17c94 <__sanitizer_set_report_fd@@Base+0x51e0>  // b.any
   17c78:	cmp	x1, x2
   17c7c:	csel	x3, x3, xzr, ne  // ne = any
   17c80:	str	x3, [x5]
   17c84:	ldr	x30, [sp], #16
   17c88:	sub	x2, x2, x1
   17c8c:	str	x2, [x5, #8]
   17c90:	b	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   17c94:	add	x4, x4, x2
   17c98:	cmp	x3, x4
   17c9c:	b.eq	17c84 <__sanitizer_set_report_fd@@Base+0x51d0>  // b.none
   17ca0:	adrp	x2, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17ca4:	mov	w1, #0x17a                 	// #378
   17ca8:	add	x2, x2, #0xee4
   17cac:	b	17c5c <__sanitizer_set_report_fd@@Base+0x51a8>
   17cb0:	stp	x19, x20, [sp, #-32]!
   17cb4:	mov	x19, x0
   17cb8:	mov	x20, x1
   17cbc:	str	x30, [sp, #16]
   17cc0:	cbz	x2, 17cfc <__sanitizer_set_report_fd@@Base+0x5248>
   17cc4:	mov	x0, x2
   17cc8:	bl	17a64 <__sanitizer_set_report_fd@@Base+0x4fb0>
   17ccc:	cmn	w0, #0x1
   17cd0:	mov	w4, w0
   17cd4:	mov	w3, #0x4012                	// #16402
   17cd8:	mov	w0, #0x4032                	// #16434
   17cdc:	csel	w3, w3, w0, ne  // ne = any
   17ce0:	mov	x1, x20
   17ce4:	mov	x0, x19
   17ce8:	ldr	x30, [sp, #16]
   17cec:	mov	x5, #0x0                   	// #0
   17cf0:	ldp	x19, x20, [sp], #32
   17cf4:	mov	w2, #0x0                   	// #0
   17cf8:	b	14ea8 <__sanitizer_set_report_fd@@Base+0x23f4>
   17cfc:	mov	w4, #0xffffffff            	// #-1
   17d00:	mov	w3, #0x4032                	// #16434
   17d04:	b	17ce0 <__sanitizer_set_report_fd@@Base+0x522c>
   17d08:	mov	x1, x0
   17d0c:	mov	x5, #0x0                   	// #0
   17d10:	mov	w4, #0xffffffff            	// #-1
   17d14:	mov	w3, #0x4022                	// #16418
   17d18:	mov	w2, #0x0                   	// #0
   17d1c:	mov	x0, #0x0                   	// #0
   17d20:	b	14ea8 <__sanitizer_set_report_fd@@Base+0x23f4>
   17d24:	stp	x19, x20, [sp, #-32]!
   17d28:	mov	x19, x0
   17d2c:	mov	x20, x1
   17d30:	stp	x21, x30, [sp, #16]
   17d34:	mov	x21, x2
   17d38:	cbz	x3, 17d5c <__sanitizer_set_report_fd@@Base+0x52a8>
   17d3c:	mov	x0, x3
   17d40:	mov	x2, #0x0                   	// #0
   17d44:	bl	17cb0 <__sanitizer_set_report_fd@@Base+0x51fc>
   17d48:	stp	x0, x20, [x19]
   17d4c:	str	x21, [x19, #16]
   17d50:	ldp	x21, x30, [sp, #16]
   17d54:	ldp	x19, x20, [sp], #32
   17d58:	ret
   17d5c:	mov	x0, x1
   17d60:	bl	17d08 <__sanitizer_set_report_fd@@Base+0x5254>
   17d64:	b	17d48 <__sanitizer_set_report_fd@@Base+0x5294>
   17d68:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17d6c:	ldr	x3, [x3, #3536]
   17d70:	cbz	x3, 17d78 <__sanitizer_set_report_fd@@Base+0x52c4>
   17d74:	b	6880 <real_pthread_attr_getstack@plt>
   17d78:	b	6aa0 <pthread_attr_getstack@plt>
   17d7c:	stp	x19, x20, [sp, #-48]!
   17d80:	mov	x20, x0
   17d84:	add	x2, sp, #0x28
   17d88:	add	x1, sp, #0x20
   17d8c:	stp	x21, x30, [sp, #16]
   17d90:	stp	xzr, xzr, [sp, #32]
   17d94:	bl	17d68 <__sanitizer_set_report_fd@@Base+0x52b4>
   17d98:	ldr	x0, [sp, #32]
   17d9c:	cbz	x0, 17e00 <__sanitizer_set_report_fd@@Base+0x534c>
   17da0:	ldr	x1, [sp, #40]
   17da4:	cmn	x0, x1
   17da8:	cset	w21, ne  // ne = any
   17dac:	bl	163ec <__sanitizer_set_report_fd@@Base+0x3938>
   17db0:	add	x19, x0, #0x20, lsl #12
   17db4:	ldr	x1, [sp, #40]
   17db8:	cmp	x1, x19
   17dbc:	b.cs	17df4 <__sanitizer_set_report_fd@@Base+0x5340>  // b.hs, b.nlast
   17dc0:	cbnz	w21, 17e08 <__sanitizer_set_report_fd@@Base+0x5354>
   17dc4:	cbz	x1, 17df4 <__sanitizer_set_report_fd@@Base+0x5340>
   17dc8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17dcc:	ldr	x0, [x0, #3680]
   17dd0:	ldr	w0, [x0]
   17dd4:	cbz	w0, 17de8 <__sanitizer_set_report_fd@@Base+0x5334>
   17dd8:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17ddc:	mov	x2, x19
   17de0:	add	x0, x0, #0xf21
   17de4:	bl	18af0 <OnPrint@@Base+0x288>
   17de8:	mov	x1, x19
   17dec:	mov	x0, x20
   17df0:	bl	6ab0 <pthread_attr_setstacksize@plt>
   17df4:	ldp	x21, x30, [sp, #16]
   17df8:	ldp	x19, x20, [sp], #48
   17dfc:	ret
   17e00:	mov	w21, #0x0                   	// #0
   17e04:	b	17dac <__sanitizer_set_report_fd@@Base+0x52f8>
   17e08:	mov	x2, x19
   17e0c:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17e10:	add	x0, x0, #0xf4b
   17e14:	bl	18af0 <OnPrint@@Base+0x288>
   17e18:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17e1c:	add	x0, x0, #0xf8b
   17e20:	bl	18af0 <OnPrint@@Base+0x288>
   17e24:	b	17df4 <__sanitizer_set_report_fd@@Base+0x5340>
   17e28:	stp	x19, x20, [sp, #-80]!
   17e2c:	mov	w20, w3
   17e30:	mov	w19, w4
   17e34:	stp	x21, x22, [sp, #16]
   17e38:	mov	w21, w2
   17e3c:	stp	x23, x24, [sp, #32]
   17e40:	mov	x23, x0
   17e44:	mov	x24, x1
   17e48:	str	x30, [sp, #48]
   17e4c:	bl	1550c <__sanitizer_set_report_fd@@Base+0x2a58>
   17e50:	mov	w22, w0
   17e54:	cmp	w0, #0x0
   17e58:	b.ge	17ec8 <__sanitizer_set_report_fd@@Base+0x5414>  // b.tcont
   17e5c:	add	x1, sp, #0x4c
   17e60:	sxtw	x0, w0
   17e64:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   17e68:	tst	w0, #0xff
   17e6c:	b.eq	17e80 <__sanitizer_set_report_fd@@Base+0x53cc>  // b.none
   17e70:	ldr	w1, [sp, #76]
   17e74:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17e78:	add	x0, x0, #0xfb9
   17e7c:	bl	18b74 <OnPrint@@Base+0x30c>
   17e80:	cmn	w21, #0x1
   17e84:	b.eq	17e90 <__sanitizer_set_report_fd@@Base+0x53dc>  // b.none
   17e88:	mov	w0, w21
   17e8c:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17e90:	cmn	w20, #0x1
   17e94:	b.eq	17ea0 <__sanitizer_set_report_fd@@Base+0x53ec>  // b.none
   17e98:	mov	w0, w20
   17e9c:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17ea0:	cmn	w19, #0x1
   17ea4:	b.eq	17eb0 <__sanitizer_set_report_fd@@Base+0x53fc>  // b.none
   17ea8:	mov	w0, w19
   17eac:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17eb0:	mov	w0, w22
   17eb4:	ldp	x21, x22, [sp, #16]
   17eb8:	ldp	x23, x24, [sp, #32]
   17ebc:	ldr	x30, [sp, #48]
   17ec0:	ldp	x19, x20, [sp], #80
   17ec4:	ret
   17ec8:	b.ne	17e80 <__sanitizer_set_report_fd@@Base+0x53cc>  // b.any
   17ecc:	cmn	w21, #0x1
   17ed0:	b.eq	17eec <__sanitizer_set_report_fd@@Base+0x5438>  // b.none
   17ed4:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17ed8:	mov	w1, #0x0                   	// #0
   17edc:	mov	w0, w21
   17ee0:	bl	15008 <__sanitizer_set_report_fd@@Base+0x2554>
   17ee4:	mov	w0, w21
   17ee8:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17eec:	cmn	w20, #0x1
   17ef0:	b.eq	17f10 <__sanitizer_set_report_fd@@Base+0x545c>  // b.none
   17ef4:	mov	w0, #0x1                   	// #1
   17ef8:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17efc:	mov	w1, #0x1                   	// #1
   17f00:	mov	w0, w20
   17f04:	bl	15008 <__sanitizer_set_report_fd@@Base+0x2554>
   17f08:	mov	w0, w20
   17f0c:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17f10:	cmn	w19, #0x1
   17f14:	b.eq	17f34 <__sanitizer_set_report_fd@@Base+0x5480>  // b.none
   17f18:	mov	w0, #0x2                   	// #2
   17f1c:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17f20:	mov	w1, #0x2                   	// #2
   17f24:	mov	w0, w19
   17f28:	bl	15008 <__sanitizer_set_report_fd@@Base+0x2554>
   17f2c:	mov	w0, w19
   17f30:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17f34:	mov	w0, #0x4                   	// #4
   17f38:	bl	6ca0 <sysconf@plt>
   17f3c:	mov	w19, w0
   17f40:	cmp	w19, #0x2
   17f44:	b.le	17f58 <__sanitizer_set_report_fd@@Base+0x54a4>
   17f48:	mov	w0, w19
   17f4c:	sub	w19, w19, #0x1
   17f50:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   17f54:	b	17f40 <__sanitizer_set_report_fd@@Base+0x548c>
   17f58:	mov	x1, x24
   17f5c:	mov	x0, x23
   17f60:	bl	6780 <execv@plt>
   17f64:	mov	w0, #0x1                   	// #1
   17f68:	bl	15088 <__sanitizer_set_report_fd@@Base+0x25d4>
   17f6c:	stp	x19, x30, [sp, #-32]!
   17f70:	mov	w2, #0x1                   	// #1
   17f74:	add	x1, sp, #0x18
   17f78:	bl	15498 <__sanitizer_set_report_fd@@Base+0x29e4>
   17f7c:	add	x1, sp, #0x1c
   17f80:	mov	x19, x0
   17f84:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   17f88:	tst	w0, #0xff
   17f8c:	b.eq	17fb8 <__sanitizer_set_report_fd@@Base+0x5504>  // b.none
   17f90:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17f94:	ldr	x0, [x0, #3680]
   17f98:	ldr	w0, [x0]
   17f9c:	cbz	w0, 17fb0 <__sanitizer_set_report_fd@@Base+0x54fc>
   17fa0:	ldr	w1, [sp, #28]
   17fa4:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   17fa8:	add	x0, x0, #0xfdd
   17fac:	bl	18b74 <OnPrint@@Base+0x30c>
   17fb0:	mov	w0, #0x0                   	// #0
   17fb4:	b	17fc0 <__sanitizer_set_report_fd@@Base+0x550c>
   17fb8:	cmp	x19, #0x0
   17fbc:	cset	w0, eq  // eq = none
   17fc0:	ldp	x19, x30, [sp], #32
   17fc4:	ret
   17fc8:	str	x30, [sp, #-32]!
   17fcc:	mov	w2, #0x0                   	// #0
   17fd0:	add	x1, sp, #0x18
   17fd4:	bl	15498 <__sanitizer_set_report_fd@@Base+0x29e4>
   17fd8:	add	x1, sp, #0x1c
   17fdc:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   17fe0:	tst	w0, #0xff
   17fe4:	b.eq	18010 <__sanitizer_set_report_fd@@Base+0x555c>  // b.none
   17fe8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   17fec:	ldr	x0, [x0, #3680]
   17ff0:	ldr	w0, [x0]
   17ff4:	cbz	w0, 18008 <__sanitizer_set_report_fd@@Base+0x5554>
   17ff8:	ldr	w1, [sp, #28]
   17ffc:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   18000:	add	x0, x0, #0xfdd
   18004:	bl	18b74 <OnPrint@@Base+0x30c>
   18008:	mov	w0, #0xffffffff            	// #-1
   1800c:	b	18014 <__sanitizer_set_report_fd@@Base+0x5560>
   18010:	ldr	w0, [sp, #24]
   18014:	ldr	x30, [sp], #32
   18018:	ret
   1801c:	cmp	w0, #0x1
   18020:	cset	w0, eq  // eq = none
   18024:	ret
   18028:	ldr	x3, [x0]
   1802c:	and	w2, w2, #0xff
   18030:	cmp	x3, x1
   18034:	b.cs	18048 <__sanitizer_set_report_fd@@Base+0x5594>  // b.hs, b.nlast
   18038:	strb	w2, [x3]
   1803c:	ldr	x1, [x0]
   18040:	add	x1, x1, #0x1
   18044:	str	x1, [x0]
   18048:	mov	w0, #0x1                   	// #1
   1804c:	ret
   18050:	str	x30, [sp, #-16]!
   18054:	mov	x6, x0
   18058:	mov	x7, x1
   1805c:	mov	w9, w2
   18060:	mov	w8, w3
   18064:	cbnz	x4, 18070 <__sanitizer_set_report_fd@@Base+0x55bc>
   18068:	adrp	x4, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1806c:	add	x4, x4, #0x8
   18070:	mov	w5, #0x0                   	// #0
   18074:	ldrb	w2, [x4]
   18078:	cbz	w2, 180a0 <__sanitizer_set_report_fd@@Base+0x55ec>
   1807c:	cmp	w8, #0x0
   18080:	ccmp	w5, w8, #0x1, ge  // ge = tcont
   18084:	b.ge	180a0 <__sanitizer_set_report_fd@@Base+0x55ec>  // b.tcont
   18088:	mov	x1, x7
   1808c:	mov	x0, x6
   18090:	bl	18028 <__sanitizer_set_report_fd@@Base+0x5574>
   18094:	add	w5, w5, w0
   18098:	add	x4, x4, #0x1
   1809c:	b	18074 <__sanitizer_set_report_fd@@Base+0x55c0>
   180a0:	neg	w0, w5
   180a4:	cmp	w0, w9
   180a8:	b.le	180c4 <__sanitizer_set_report_fd@@Base+0x5610>
   180ac:	mov	x1, x7
   180b0:	mov	x0, x6
   180b4:	mov	w2, #0x20                  	// #32
   180b8:	bl	18028 <__sanitizer_set_report_fd@@Base+0x5574>
   180bc:	add	w5, w5, w0
   180c0:	b	180a0 <__sanitizer_set_report_fd@@Base+0x55ec>
   180c4:	mov	w0, w5
   180c8:	ldr	x30, [sp], #16
   180cc:	ret
   180d0:	stp	x19, x20, [sp, #-320]!
   180d4:	and	w8, w3, #0xff
   180d8:	cmp	w8, #0xa
   180dc:	mov	x20, x0
   180e0:	cset	w0, ne  // ne = any
   180e4:	stp	x21, x22, [sp, #16]
   180e8:	cmp	w0, #0x0
   180ec:	ccmp	w8, #0x10, #0x4, ne  // ne = any
   180f0:	stp	x23, x24, [sp, #32]
   180f4:	stp	x25, x26, [sp, #48]
   180f8:	str	x30, [sp, #64]
   180fc:	b.eq	18110 <__sanitizer_set_report_fd@@Base+0x565c>  // b.none
   18100:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18104:	add	x0, x0, #0xf
   18108:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   1810c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   18110:	and	w26, w6, #0xff
   18114:	cmp	w0, #0x0
   18118:	ccmp	w26, #0x0, #0x4, ne  // ne = any
   1811c:	b.eq	1812c <__sanitizer_set_report_fd@@Base+0x5678>  // b.none
   18120:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18124:	add	x0, x0, #0x28
   18128:	b	18108 <__sanitizer_set_report_fd@@Base+0x5654>
   1812c:	cmp	x2, #0x0
   18130:	mov	x9, x2
   18134:	ccmp	w26, #0x0, #0x4, eq  // eq = none
   18138:	b.eq	18148 <__sanitizer_set_report_fd@@Base+0x5694>  // b.none
   1813c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18140:	add	x0, x0, #0x40
   18144:	b	18108 <__sanitizer_set_report_fd@@Base+0x5654>
   18148:	and	w19, w4, #0xff
   1814c:	cmp	w19, #0x1d
   18150:	b.ls	18160 <__sanitizer_set_report_fd@@Base+0x56ac>  // b.plast
   18154:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18158:	add	x0, x0, #0x5c
   1815c:	b	18108 <__sanitizer_set_report_fd@@Base+0x5654>
   18160:	cmp	w19, #0x0
   18164:	mov	w0, w19
   18168:	sub	w19, w19, #0x1
   1816c:	ccmp	w26, #0x0, #0x4, ne  // ne = any
   18170:	and	w19, w19, #0xff
   18174:	and	w22, w5, #0xff
   18178:	csel	w19, w19, w0, ne  // ne = any
   1817c:	cmp	w26, #0x0
   18180:	mov	x21, x1
   18184:	and	w23, w7, #0xff
   18188:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   1818c:	b.eq	182ac <__sanitizer_set_report_fd@@Base+0x57f8>  // b.none
   18190:	mov	x0, x20
   18194:	mov	w2, #0x2d                  	// #45
   18198:	bl	18028 <__sanitizer_set_report_fd@@Base+0x5574>
   1819c:	mov	w24, w0
   181a0:	and	x8, x8, #0xff
   181a4:	add	x25, sp, #0x50
   181a8:	mov	x0, #0x0                   	// #0
   181ac:	udiv	x1, x9, x8
   181b0:	add	w4, w0, #0x1
   181b4:	msub	x2, x1, x8, x9
   181b8:	str	x2, [x25, x0, lsl #3]
   181bc:	mov	x2, x9
   181c0:	cmp	x2, x8
   181c4:	mov	x9, x1
   181c8:	b.cs	182b4 <__sanitizer_set_report_fd@@Base+0x5800>  // b.hs, b.nlast
   181cc:	cmp	w19, w4
   181d0:	b.le	181ec <__sanitizer_set_report_fd@@Base+0x5738>
   181d4:	sub	w2, w19, w4
   181d8:	add	x0, x25, w4, sxtw #3
   181dc:	mov	w1, #0x0                   	// #0
   181e0:	sbfiz	x2, x2, #3, #32
   181e4:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   181e8:	mov	w4, w19
   181ec:	sub	w4, w4, #0x1
   181f0:	mov	w7, #0x20                  	// #32
   181f4:	mov	w6, #0x30                  	// #48
   181f8:	sxtw	x4, w4
   181fc:	ldr	x0, [x25, x4, lsl #3]
   18200:	mov	w5, w4
   18204:	cbnz	x0, 18234 <__sanitizer_set_report_fd@@Base+0x5780>
   18208:	cmp	w4, #0x0
   1820c:	mov	x1, x21
   18210:	ccmp	w22, #0x0, #0x0, ne  // ne = any
   18214:	mov	x0, x20
   18218:	csel	w2, w7, w6, eq  // eq = none
   1821c:	bl	18028 <__sanitizer_set_report_fd@@Base+0x5574>
   18220:	sub	x4, x4, #0x1
   18224:	add	w24, w24, w0
   18228:	mov	w5, w4
   1822c:	cmn	w4, #0x1
   18230:	b.ne	181fc <__sanitizer_set_report_fd@@Base+0x5748>  // b.any
   18234:	eor	w22, w22, #0x1
   18238:	tst	w26, w22
   1823c:	b.eq	18254 <__sanitizer_set_report_fd@@Base+0x57a0>  // b.none
   18240:	mov	x1, x21
   18244:	mov	x0, x20
   18248:	mov	w2, #0x2d                  	// #45
   1824c:	bl	18028 <__sanitizer_set_report_fd@@Base+0x5574>
   18250:	add	w24, w24, w0
   18254:	cmp	w23, #0x0
   18258:	mov	w0, #0x41                  	// #65
   1825c:	mov	w1, #0x61                  	// #97
   18260:	csel	w0, w0, w1, ne  // ne = any
   18264:	sxtw	x4, w5
   18268:	sub	w5, w0, #0xa
   1826c:	cmn	w4, #0x1
   18270:	b.eq	182cc <__sanitizer_set_report_fd@@Base+0x5818>  // b.none
   18274:	ldr	x0, [x25, x4, lsl #3]
   18278:	and	w0, w0, #0xff
   1827c:	cmp	w0, #0x9
   18280:	add	w2, w0, w5
   18284:	add	w1, w0, #0x30
   18288:	and	w2, w2, #0xff
   1828c:	and	w1, w1, #0xff
   18290:	mov	x0, x20
   18294:	csel	w2, w2, w1, hi  // hi = pmore
   18298:	mov	x1, x21
   1829c:	bl	18028 <__sanitizer_set_report_fd@@Base+0x5574>
   182a0:	add	w24, w24, w0
   182a4:	sub	x4, x4, #0x1
   182a8:	b	1826c <__sanitizer_set_report_fd@@Base+0x57b8>
   182ac:	mov	w24, #0x0                   	// #0
   182b0:	b	181a0 <__sanitizer_set_report_fd@@Base+0x56ec>
   182b4:	add	x0, x0, #0x1
   182b8:	cmp	x0, #0x1e
   182bc:	b.ne	181ac <__sanitizer_set_report_fd@@Base+0x56f8>  // b.any
   182c0:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   182c4:	add	x0, x0, #0x79
   182c8:	b	18108 <__sanitizer_set_report_fd@@Base+0x5654>
   182cc:	mov	w0, w24
   182d0:	ldp	x21, x22, [sp, #16]
   182d4:	ldp	x23, x24, [sp, #32]
   182d8:	ldp	x25, x26, [sp, #48]
   182dc:	ldr	x30, [sp, #64]
   182e0:	ldp	x19, x20, [sp], #320
   182e4:	ret
   182e8:	stp	x19, x20, [sp, #-128]!
   182ec:	stp	x21, x22, [sp, #16]
   182f0:	stp	x23, x24, [sp, #32]
   182f4:	stp	x25, x26, [sp, #48]
   182f8:	stp	x27, x28, [sp, #64]
   182fc:	str	x30, [sp, #80]
   18300:	str	x0, [sp, #120]
   18304:	cbnz	x2, 18318 <__sanitizer_set_report_fd@@Base+0x5864>
   18308:	adrp	x0, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   1830c:	add	x0, x0, #0x6a2
   18310:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   18314:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   18318:	cmp	w1, #0x0
   1831c:	b.gt	1832c <__sanitizer_set_report_fd@@Base+0x5878>
   18320:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18324:	add	x0, x0, #0x96
   18328:	b	18310 <__sanitizer_set_report_fd@@Base+0x585c>
   1832c:	ldp	x19, x22, [x3]
   18330:	mov	x25, x0
   18334:	sxtw	x0, w1
   18338:	ldr	w20, [x3, #24]
   1833c:	sub	x1, x0, #0x1
   18340:	adrp	x26, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18344:	adrp	x27, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18348:	mov	x28, x2
   1834c:	add	x24, x25, x1
   18350:	add	x23, sp, #0x78
   18354:	add	x26, x26, #0x204
   18358:	add	x27, x27, #0x179
   1835c:	mov	w21, #0x0                   	// #0
   18360:	str	x0, [sp, #96]
   18364:	ldrb	w2, [x28]
   18368:	cbz	w2, 18810 <__sanitizer_set_report_fd@@Base+0x5d5c>
   1836c:	cmp	w2, #0x25
   18370:	b.eq	18384 <__sanitizer_set_report_fd@@Base+0x58d0>  // b.none
   18374:	mov	x1, x24
   18378:	mov	x0, x23
   1837c:	bl	18028 <__sanitizer_set_report_fd@@Base+0x5574>
   18380:	b	18568 <__sanitizer_set_report_fd@@Base+0x5ab4>
   18384:	mov	x0, x28
   18388:	add	x6, x28, #0x2
   1838c:	mov	w8, #0x0                   	// #0
   18390:	ldrb	w10, [x0, #1]!
   18394:	cmp	w10, #0x2d
   18398:	csel	x6, x6, x0, eq  // eq = none
   1839c:	ldrb	w0, [x6]
   183a0:	sub	w9, w0, #0x30
   183a4:	and	w9, w9, #0xff
   183a8:	cmp	w9, #0x9
   183ac:	cset	w7, ls  // ls = plast
   183b0:	cmp	w0, #0x30
   183b4:	cset	w5, eq  // eq = none
   183b8:	cmp	w9, #0x9
   183bc:	b.hi	183e8 <__sanitizer_set_report_fd@@Base+0x5934>  // b.pmore
   183c0:	mov	w3, #0xa                   	// #10
   183c4:	ldrb	w2, [x6]
   183c8:	sub	w0, w2, #0x30
   183cc:	and	w0, w0, #0xff
   183d0:	cmp	w0, #0x9
   183d4:	b.hi	183e8 <__sanitizer_set_report_fd@@Base+0x5934>  // b.pmore
   183d8:	madd	w8, w8, w3, w2
   183dc:	add	x6, x6, #0x1
   183e0:	sub	w8, w8, #0x30
   183e4:	b	183c4 <__sanitizer_set_report_fd@@Base+0x5910>
   183e8:	ldrb	w0, [x6]
   183ec:	cmp	w0, #0x2e
   183f0:	b.ne	184bc <__sanitizer_set_report_fd@@Base+0x5a08>  // b.any
   183f4:	ldrb	w0, [x6, #1]
   183f8:	cmp	w0, #0x2a
   183fc:	b.ne	184bc <__sanitizer_set_report_fd@@Base+0x5a08>  // b.any
   18400:	add	x6, x6, #0x2
   18404:	tbnz	w20, #31, 18498 <__sanitizer_set_report_fd@@Base+0x59e4>
   18408:	add	x0, x19, #0xb
   1840c:	mov	w2, w20
   18410:	and	x0, x0, #0xfffffffffffffff8
   18414:	ldr	w3, [x19]
   18418:	mov	w20, w2
   1841c:	mov	x19, x0
   18420:	ldrb	w4, [x6]
   18424:	cmp	w4, #0x7a
   18428:	cset	w2, eq  // eq = none
   1842c:	cset	x11, eq  // eq = none
   18430:	cinc	x0, x6, eq  // eq = none
   18434:	b.eq	184c4 <__sanitizer_set_report_fd@@Base+0x5a10>  // b.none
   18438:	ldrb	w4, [x6, x11]
   1843c:	cmp	w4, #0x6c
   18440:	b.ne	184c4 <__sanitizer_set_report_fd@@Base+0x5a10>  // b.any
   18444:	ldrb	w4, [x0, #1]
   18448:	cmp	w4, #0x6c
   1844c:	cset	w4, eq  // eq = none
   18450:	lsl	w11, w4, #1
   18454:	orr	w2, w4, w2
   18458:	cmp	w10, #0x2d
   1845c:	orr	w6, w7, w2
   18460:	add	x28, x0, w11, sxtw
   18464:	ccmp	w3, #0x0, #0x0, ne  // ne = any
   18468:	ldrb	w0, [x0, w11, sxtw]
   1846c:	b.lt	184cc <__sanitizer_set_report_fd@@Base+0x5a18>  // b.tstop
   18470:	cmp	w0, #0x73
   18474:	b.eq	184fc <__sanitizer_set_report_fd@@Base+0x5a48>  // b.none
   18478:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1847c:	add	x2, x2, #0xa6
   18480:	mov	x4, #0x0                   	// #0
   18484:	mov	x3, #0x0                   	// #0
   18488:	mov	w1, #0xa9                  	// #169
   1848c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18490:	add	x0, x0, #0xe6
   18494:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   18498:	add	w2, w20, #0x8
   1849c:	cmp	w2, #0x0
   184a0:	b.le	184b0 <__sanitizer_set_report_fd@@Base+0x59fc>
   184a4:	add	x0, x19, #0xb
   184a8:	and	x0, x0, #0xfffffffffffffff8
   184ac:	b	18414 <__sanitizer_set_report_fd@@Base+0x5960>
   184b0:	mov	x0, x19
   184b4:	add	x19, x22, w20, sxtw
   184b8:	b	18414 <__sanitizer_set_report_fd@@Base+0x5960>
   184bc:	mov	w3, #0xffffffff            	// #-1
   184c0:	b	18420 <__sanitizer_set_report_fd@@Base+0x596c>
   184c4:	mov	w4, #0x0                   	// #0
   184c8:	b	18450 <__sanitizer_set_report_fd@@Base+0x599c>
   184cc:	cmp	w0, #0x64
   184d0:	b.eq	18524 <__sanitizer_set_report_fd@@Base+0x5a70>  // b.none
   184d4:	b.hi	184fc <__sanitizer_set_report_fd@@Base+0x5a48>  // b.pmore
   184d8:	cmp	w0, #0x58
   184dc:	b.eq	185d8 <__sanitizer_set_report_fd@@Base+0x5b24>  // b.none
   184e0:	cmp	w0, #0x63
   184e4:	b.eq	187ac <__sanitizer_set_report_fd@@Base+0x5cf8>  // b.none
   184e8:	cmp	w0, #0x25
   184ec:	b.eq	18804 <__sanitizer_set_report_fd@@Base+0x5d50>  // b.none
   184f0:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   184f4:	add	x0, x0, #0x124
   184f8:	b	18310 <__sanitizer_set_report_fd@@Base+0x585c>
   184fc:	sub	w7, w0, #0x70
   18500:	and	w11, w7, #0xff
   18504:	cmp	w11, #0x8
   18508:	b.hi	184f0 <__sanitizer_set_report_fd@@Base+0x5a3c>  // b.pmore
   1850c:	cmp	w7, #0x8
   18510:	b.hi	184f0 <__sanitizer_set_report_fd@@Base+0x5a3c>  // b.pmore
   18514:	ldrh	w1, [x26, w7, uxtw #1]
   18518:	adr	x7, 18524 <__sanitizer_set_report_fd@@Base+0x5a70>
   1851c:	add	x1, x7, w1, sxth #2
   18520:	br	x1
   18524:	cbz	w4, 18574 <__sanitizer_set_report_fd@@Base+0x5ac0>
   18528:	tbnz	w20, #31, 18590 <__sanitizer_set_report_fd@@Base+0x5adc>
   1852c:	add	x0, x19, #0xf
   18530:	mov	w3, w20
   18534:	and	x0, x0, #0xfffffffffffffff8
   18538:	ldr	x2, [x19]
   1853c:	cmp	x2, #0x0
   18540:	lsr	x6, x2, #63
   18544:	mov	x19, x0
   18548:	mov	w4, w8
   1854c:	cneg	x2, x2, lt  // lt = tstop
   18550:	mov	w20, w3
   18554:	mov	w7, #0x0                   	// #0
   18558:	mov	w3, #0xa                   	// #10
   1855c:	mov	x1, x24
   18560:	mov	x0, x23
   18564:	bl	180d0 <__sanitizer_set_report_fd@@Base+0x561c>
   18568:	add	w21, w21, w0
   1856c:	add	x28, x28, #0x1
   18570:	b	18364 <__sanitizer_set_report_fd@@Base+0x58b0>
   18574:	cbnz	w2, 18528 <__sanitizer_set_report_fd@@Base+0x5a74>
   18578:	tbnz	w20, #31, 185b4 <__sanitizer_set_report_fd@@Base+0x5b00>
   1857c:	add	x0, x19, #0xb
   18580:	mov	w3, w20
   18584:	and	x0, x0, #0xfffffffffffffff8
   18588:	ldrsw	x2, [x19]
   1858c:	b	1853c <__sanitizer_set_report_fd@@Base+0x5a88>
   18590:	add	w3, w20, #0x8
   18594:	cmp	w3, #0x0
   18598:	b.le	185a8 <__sanitizer_set_report_fd@@Base+0x5af4>
   1859c:	add	x0, x19, #0xf
   185a0:	and	x0, x0, #0xfffffffffffffff8
   185a4:	b	18538 <__sanitizer_set_report_fd@@Base+0x5a84>
   185a8:	mov	x0, x19
   185ac:	add	x19, x22, w20, sxtw
   185b0:	b	18538 <__sanitizer_set_report_fd@@Base+0x5a84>
   185b4:	add	w3, w20, #0x8
   185b8:	cmp	w3, #0x0
   185bc:	b.le	185cc <__sanitizer_set_report_fd@@Base+0x5b18>
   185c0:	add	x0, x19, #0xb
   185c4:	and	x0, x0, #0xfffffffffffffff8
   185c8:	b	18588 <__sanitizer_set_report_fd@@Base+0x5ad4>
   185cc:	mov	x0, x19
   185d0:	add	x19, x22, w20, sxtw
   185d4:	b	18588 <__sanitizer_set_report_fd@@Base+0x5ad4>
   185d8:	cbz	w4, 1861c <__sanitizer_set_report_fd@@Base+0x5b68>
   185dc:	tbnz	w20, #31, 18638 <__sanitizer_set_report_fd@@Base+0x5b84>
   185e0:	add	x3, x19, #0xf
   185e4:	mov	w4, w20
   185e8:	and	x3, x3, #0xfffffffffffffff8
   185ec:	ldr	x2, [x19]
   185f0:	cmp	w0, #0x58
   185f4:	cset	w7, eq  // eq = none
   185f8:	cmp	w0, #0x75
   185fc:	mov	w20, w4
   18600:	mov	x19, x3
   18604:	mov	w0, #0x10                  	// #16
   18608:	mov	w3, #0xa                   	// #10
   1860c:	mov	w4, w8
   18610:	csel	w3, w3, w0, eq  // eq = none
   18614:	mov	w6, #0x0                   	// #0
   18618:	b	1855c <__sanitizer_set_report_fd@@Base+0x5aa8>
   1861c:	cbnz	w2, 185dc <__sanitizer_set_report_fd@@Base+0x5b28>
   18620:	tbnz	w20, #31, 1865c <__sanitizer_set_report_fd@@Base+0x5ba8>
   18624:	add	x3, x19, #0xb
   18628:	mov	w4, w20
   1862c:	and	x3, x3, #0xfffffffffffffff8
   18630:	ldr	w2, [x19]
   18634:	b	185f0 <__sanitizer_set_report_fd@@Base+0x5b3c>
   18638:	add	w4, w20, #0x8
   1863c:	cmp	w4, #0x0
   18640:	b.le	18650 <__sanitizer_set_report_fd@@Base+0x5b9c>
   18644:	add	x3, x19, #0xf
   18648:	and	x3, x3, #0xfffffffffffffff8
   1864c:	b	185ec <__sanitizer_set_report_fd@@Base+0x5b38>
   18650:	mov	x3, x19
   18654:	add	x19, x22, w20, sxtw
   18658:	b	185ec <__sanitizer_set_report_fd@@Base+0x5b38>
   1865c:	add	w4, w20, #0x8
   18660:	cmp	w4, #0x0
   18664:	b.le	18674 <__sanitizer_set_report_fd@@Base+0x5bc0>
   18668:	add	x3, x19, #0xb
   1866c:	and	x3, x3, #0xfffffffffffffff8
   18670:	b	18630 <__sanitizer_set_report_fd@@Base+0x5b7c>
   18674:	mov	x3, x19
   18678:	add	x19, x22, w20, sxtw
   1867c:	b	18630 <__sanitizer_set_report_fd@@Base+0x5b7c>
   18680:	cbnz	w6, 184f0 <__sanitizer_set_report_fd@@Base+0x5a3c>
   18684:	tbnz	w20, #31, 186fc <__sanitizer_set_report_fd@@Base+0x5c48>
   18688:	add	x8, x19, #0xf
   1868c:	mov	w9, w20
   18690:	and	x8, x8, #0xfffffffffffffff8
   18694:	ldr	x10, [x19]
   18698:	mov	x4, x27
   1869c:	mov	x1, x24
   186a0:	mov	w3, #0xffffffff            	// #-1
   186a4:	mov	w2, #0x0                   	// #0
   186a8:	mov	x0, x23
   186ac:	str	x8, [sp, #104]
   186b0:	str	w9, [sp, #116]
   186b4:	bl	18050 <__sanitizer_set_report_fd@@Base+0x559c>
   186b8:	mov	x1, x24
   186bc:	mov	w19, w0
   186c0:	mov	x2, x10
   186c4:	mov	x0, x23
   186c8:	mov	w7, #0x0                   	// #0
   186cc:	mov	w6, #0x0                   	// #0
   186d0:	mov	w5, #0x1                   	// #1
   186d4:	mov	w4, #0xc                   	// #12
   186d8:	mov	w3, #0x10                  	// #16
   186dc:	bl	180d0 <__sanitizer_set_report_fd@@Base+0x561c>
   186e0:	ldr	x8, [sp, #104]
   186e4:	add	w19, w19, w0
   186e8:	ldr	w9, [sp, #116]
   186ec:	add	w21, w21, w19
   186f0:	mov	x19, x8
   186f4:	mov	w20, w9
   186f8:	b	1856c <__sanitizer_set_report_fd@@Base+0x5ab8>
   186fc:	add	w9, w20, #0x8
   18700:	cmp	w9, #0x0
   18704:	b.le	18714 <__sanitizer_set_report_fd@@Base+0x5c60>
   18708:	add	x8, x19, #0xf
   1870c:	and	x8, x8, #0xfffffffffffffff8
   18710:	b	18694 <__sanitizer_set_report_fd@@Base+0x5be0>
   18714:	mov	x8, x19
   18718:	add	x19, x22, w20, sxtw
   1871c:	b	18694 <__sanitizer_set_report_fd@@Base+0x5be0>
   18720:	cbnz	w2, 184f0 <__sanitizer_set_report_fd@@Base+0x5a3c>
   18724:	cmp	w10, #0x2d
   18728:	ccmp	w9, #0x9, #0x2, ne  // ne = any
   1872c:	b.hi	18748 <__sanitizer_set_report_fd@@Base+0x5c94>  // b.pmore
   18730:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18734:	mov	x4, #0x0                   	// #0
   18738:	add	x2, x2, #0x17c
   1873c:	mov	x3, #0x0                   	// #0
   18740:	mov	w1, #0xc6                  	// #198
   18744:	b	1848c <__sanitizer_set_report_fd@@Base+0x59d8>
   18748:	cmp	w10, #0x2d
   1874c:	b.ne	18754 <__sanitizer_set_report_fd@@Base+0x5ca0>  // b.any
   18750:	neg	w8, w8
   18754:	tbnz	w20, #31, 18788 <__sanitizer_set_report_fd@@Base+0x5cd4>
   18758:	add	x10, x19, #0xf
   1875c:	mov	w11, w20
   18760:	and	x10, x10, #0xfffffffffffffff8
   18764:	ldr	x4, [x19]
   18768:	mov	w2, w8
   1876c:	mov	x1, x24
   18770:	mov	x0, x23
   18774:	bl	18050 <__sanitizer_set_report_fd@@Base+0x559c>
   18778:	add	w21, w21, w0
   1877c:	mov	w20, w11
   18780:	mov	x19, x10
   18784:	b	1856c <__sanitizer_set_report_fd@@Base+0x5ab8>
   18788:	add	w11, w20, #0x8
   1878c:	cmp	w11, #0x0
   18790:	b.le	187a0 <__sanitizer_set_report_fd@@Base+0x5cec>
   18794:	add	x10, x19, #0xf
   18798:	and	x10, x10, #0xfffffffffffffff8
   1879c:	b	18764 <__sanitizer_set_report_fd@@Base+0x5cb0>
   187a0:	mov	x10, x19
   187a4:	add	x19, x22, w20, sxtw
   187a8:	b	18764 <__sanitizer_set_report_fd@@Base+0x5cb0>
   187ac:	cbnz	w6, 184f0 <__sanitizer_set_report_fd@@Base+0x5a3c>
   187b0:	tbnz	w20, #31, 187e0 <__sanitizer_set_report_fd@@Base+0x5d2c>
   187b4:	add	x4, x19, #0xb
   187b8:	mov	w5, w20
   187bc:	and	x4, x4, #0xfffffffffffffff8
   187c0:	ldrb	w2, [x19]
   187c4:	mov	x1, x24
   187c8:	mov	x0, x23
   187cc:	bl	18028 <__sanitizer_set_report_fd@@Base+0x5574>
   187d0:	add	w21, w21, w0
   187d4:	mov	w20, w5
   187d8:	mov	x19, x4
   187dc:	b	1856c <__sanitizer_set_report_fd@@Base+0x5ab8>
   187e0:	add	w5, w20, #0x8
   187e4:	cmp	w5, #0x0
   187e8:	b.le	187f8 <__sanitizer_set_report_fd@@Base+0x5d44>
   187ec:	add	x4, x19, #0xb
   187f0:	and	x4, x4, #0xfffffffffffffff8
   187f4:	b	187c0 <__sanitizer_set_report_fd@@Base+0x5d0c>
   187f8:	mov	x4, x19
   187fc:	add	x19, x22, w20, sxtw
   18800:	b	187c0 <__sanitizer_set_report_fd@@Base+0x5d0c>
   18804:	cbnz	w6, 184f0 <__sanitizer_set_report_fd@@Base+0x5a3c>
   18808:	mov	w2, w0
   1880c:	b	18374 <__sanitizer_set_report_fd@@Base+0x58c0>
   18810:	ldr	x0, [sp, #120]
   18814:	cmp	x0, x24
   18818:	b.ls	18828 <__sanitizer_set_report_fd@@Base+0x5d74>  // b.plast
   1881c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18820:	add	x0, x0, #0x1a5
   18824:	b	18310 <__sanitizer_set_report_fd@@Base+0x585c>
   18828:	ldr	x0, [sp, #96]
   1882c:	mov	w2, #0x0                   	// #0
   18830:	add	x1, x25, x0
   18834:	add	x0, sp, #0x78
   18838:	bl	18028 <__sanitizer_set_report_fd@@Base+0x5574>
   1883c:	mov	w0, w21
   18840:	ldp	x21, x22, [sp, #16]
   18844:	ldp	x23, x24, [sp, #32]
   18848:	ldp	x25, x26, [sp, #48]
   1884c:	ldp	x27, x28, [sp, #64]
   18850:	ldr	x30, [sp, #80]
   18854:	ldp	x19, x20, [sp], #128
   18858:	ret
   1885c:	adrp	x1, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18860:	str	x0, [x1, #3200]
   18864:	ret

0000000000018868 <OnPrint@@Base>:
   18868:	ret
   1886c:	sub	sp, sp, #0x100
   18870:	stp	x3, x4, [sp, #216]
   18874:	add	x3, sp, #0x100
   18878:	stp	x3, x3, [sp, #48]
   1887c:	add	x3, sp, #0xd0
   18880:	str	x3, [sp, #64]
   18884:	mov	w3, #0xffffffd8            	// #-40
   18888:	str	w3, [sp, #72]
   1888c:	mov	w3, #0xffffff80            	// #-128
   18890:	str	w3, [sp, #76]
   18894:	add	x3, sp, #0x10
   18898:	stp	x5, x6, [sp, #232]
   1889c:	ldp	x4, x5, [sp, #48]
   188a0:	stp	x4, x5, [sp, #16]
   188a4:	ldp	x4, x5, [sp, #64]
   188a8:	str	x30, [sp]
   188ac:	stp	x4, x5, [sp, #32]
   188b0:	str	q0, [sp, #80]
   188b4:	str	q1, [sp, #96]
   188b8:	str	q2, [sp, #112]
   188bc:	str	q3, [sp, #128]
   188c0:	str	q4, [sp, #144]
   188c4:	str	q5, [sp, #160]
   188c8:	str	q6, [sp, #176]
   188cc:	str	q7, [sp, #192]
   188d0:	str	x7, [sp, #248]
   188d4:	bl	182e8 <__sanitizer_set_report_fd@@Base+0x5834>
   188d8:	ldr	x30, [sp]
   188dc:	add	sp, sp, #0x100
   188e0:	ret
   188e4:	stp	x19, x20, [sp, #-176]!
   188e8:	and	w0, w0, #0xff
   188ec:	mov	x19, x1
   188f0:	stp	x25, x26, [sp, #48]
   188f4:	adrp	x25, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   188f8:	adrp	x26, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   188fc:	ldr	x25, [x25, #4040]
   18900:	stp	x21, x22, [sp, #16]
   18904:	mov	x21, x1
   18908:	str	w0, [sp, #108]
   1890c:	add	x26, x26, #0x1e2
   18910:	ldp	x0, x1, [x3]
   18914:	stp	x23, x24, [sp, #32]
   18918:	mov	x23, x2
   1891c:	add	x24, sp, #0x70
   18920:	stp	x27, x28, [sp, #64]
   18924:	mov	x28, x3
   18928:	stp	x0, x1, [sp, #144]
   1892c:	mov	w22, #0x0                   	// #0
   18930:	mov	w20, #0x190                 	// #400
   18934:	ldp	x0, x1, [x3, #16]
   18938:	str	x30, [sp, #80]
   1893c:	stp	x0, x1, [sp, #160]
   18940:	ldr	w0, [sp, #108]
   18944:	cbz	w0, 18ab4 <OnPrint@@Base+0x24c>
   18948:	bl	154b0 <__sanitizer_set_report_fd@@Base+0x29fc>
   1894c:	str	x0, [sp, #96]
   18950:	bl	10558 <__sancov_default_options@@Base+0x20d4>
   18954:	mov	x3, x0
   18958:	ldrb	w0, [x25, #48]
   1895c:	cbz	w0, 189d8 <OnPrint@@Base+0x170>
   18960:	cbz	x3, 189d8 <OnPrint@@Base+0x170>
   18964:	sxtw	x1, w20
   18968:	mov	x0, x19
   1896c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18970:	add	x2, x2, #0x1bd
   18974:	bl	1886c <OnPrint@@Base+0x4>
   18978:	mov	w27, w0
   1897c:	cmp	w20, w0
   18980:	b.gt	189dc <OnPrint@@Base+0x174>
   18984:	cbz	w22, 189a4 <OnPrint@@Base+0x13c>
   18988:	mov	w0, #0x3fff                	// #16383
   1898c:	cmp	w27, w0
   18990:	b.le	189dc <OnPrint@@Base+0x174>
   18994:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18998:	add	x0, x0, #0x1c2
   1899c:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   189a0:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   189a4:	ldp	x0, x1, [sp, #144]
   189a8:	stp	x0, x1, [x28]
   189ac:	mov	w2, #0x0                   	// #0
   189b0:	ldp	x0, x1, [sp, #160]
   189b4:	stp	x0, x1, [x28, #16]
   189b8:	mov	w22, #0x1                   	// #1
   189bc:	mov	w20, #0x4000                	// #16384
   189c0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   189c4:	mov	x0, #0x4000                	// #16384
   189c8:	add	x1, x1, #0x1b6
   189cc:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   189d0:	mov	x19, x0
   189d4:	b	18940 <OnPrint@@Base+0xd8>
   189d8:	mov	w27, #0x0                   	// #0
   189dc:	ldr	w3, [sp, #96]
   189e0:	sub	w1, w20, w27
   189e4:	add	x0, x19, w27, sxtw
   189e8:	mov	x2, x26
   189ec:	sxtw	x1, w1
   189f0:	bl	1886c <OnPrint@@Base+0x4>
   189f4:	add	w27, w27, w0
   189f8:	cmp	w20, w27
   189fc:	b.gt	18a10 <OnPrint@@Base+0x1a8>
   18a00:	cbz	w22, 189a4 <OnPrint@@Base+0x13c>
   18a04:	mov	w0, #0x3fff                	// #16383
   18a08:	cmp	w27, w0
   18a0c:	b.gt	18994 <OnPrint@@Base+0x12c>
   18a10:	ldp	x0, x1, [x28]
   18a14:	stp	x0, x1, [x24]
   18a18:	mov	x3, x24
   18a1c:	ldp	x0, x1, [x28, #16]
   18a20:	mov	x2, x23
   18a24:	stp	x0, x1, [x24, #16]
   18a28:	sub	w1, w20, w27
   18a2c:	add	x0, x19, w27, sxtw
   18a30:	bl	182e8 <__sanitizer_set_report_fd@@Base+0x5834>
   18a34:	add	w4, w27, w0
   18a38:	cmp	w20, w4
   18a3c:	b.gt	18a50 <OnPrint@@Base+0x1e8>
   18a40:	cbz	w22, 189a4 <OnPrint@@Base+0x13c>
   18a44:	mov	w0, #0x3fff                	// #16383
   18a48:	cmp	w4, w0
   18a4c:	b.gt	18994 <OnPrint@@Base+0x12c>
   18a50:	mov	x0, x19
   18a54:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   18a58:	mov	x0, x19
   18a5c:	bl	1010c <__sancov_default_options@@Base+0x1c88>
   18a60:	mov	x0, x19
   18a64:	bl	66e0 <OnPrint@plt>
   18a68:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18a6c:	ldr	x1, [x0, #3200]
   18a70:	cbz	x1, 18a7c <OnPrint@@Base+0x214>
   18a74:	mov	x0, x19
   18a78:	blr	x1
   18a7c:	mov	x0, x19
   18a80:	bl	16634 <__sanitizer_set_report_fd@@Base+0x3b80>
   18a84:	cmp	x19, x21
   18a88:	b.eq	18a98 <OnPrint@@Base+0x230>  // b.none
   18a8c:	sxtw	x1, w20
   18a90:	mov	x0, x19
   18a94:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   18a98:	ldp	x21, x22, [sp, #16]
   18a9c:	ldp	x23, x24, [sp, #32]
   18aa0:	ldp	x25, x26, [sp, #48]
   18aa4:	ldp	x27, x28, [sp, #64]
   18aa8:	ldr	x30, [sp, #80]
   18aac:	ldp	x19, x20, [sp], #176
   18ab0:	ret
   18ab4:	mov	w27, #0x0                   	// #0
   18ab8:	b	18a10 <OnPrint@@Base+0x1a8>
   18abc:	sub	sp, sp, #0x1c0
   18ac0:	ldp	x4, x5, [x2]
   18ac4:	stp	x4, x5, [sp, #16]
   18ac8:	ldp	x2, x3, [x2, #16]
   18acc:	str	x30, [sp]
   18ad0:	stp	x2, x3, [sp, #32]
   18ad4:	add	x3, sp, #0x10
   18ad8:	mov	x2, x1
   18adc:	add	x1, sp, #0x30
   18ae0:	bl	188e4 <OnPrint@@Base+0x7c>
   18ae4:	ldr	x30, [sp]
   18ae8:	add	sp, sp, #0x1c0
   18aec:	ret
   18af0:	sub	sp, sp, #0x110
   18af4:	stp	x1, x2, [sp, #216]
   18af8:	add	x1, sp, #0x110
   18afc:	stp	x1, x1, [sp, #48]
   18b00:	add	x1, sp, #0xd0
   18b04:	str	x1, [sp, #64]
   18b08:	mov	w1, #0xffffffc8            	// #-56
   18b0c:	str	w1, [sp, #72]
   18b10:	mov	w1, #0xffffff80            	// #-128
   18b14:	str	w1, [sp, #76]
   18b18:	mov	x1, x0
   18b1c:	stp	x3, x4, [sp, #232]
   18b20:	mov	w0, #0x0                   	// #0
   18b24:	ldp	x2, x3, [sp, #48]
   18b28:	stp	x2, x3, [sp, #16]
   18b2c:	ldp	x2, x3, [sp, #64]
   18b30:	str	x30, [sp]
   18b34:	stp	x2, x3, [sp, #32]
   18b38:	add	x2, sp, #0x10
   18b3c:	str	q0, [sp, #80]
   18b40:	str	q1, [sp, #96]
   18b44:	str	q2, [sp, #112]
   18b48:	str	q3, [sp, #128]
   18b4c:	str	q4, [sp, #144]
   18b50:	str	q5, [sp, #160]
   18b54:	str	q6, [sp, #176]
   18b58:	str	q7, [sp, #192]
   18b5c:	stp	x5, x6, [sp, #248]
   18b60:	str	x7, [sp, #264]
   18b64:	bl	18abc <OnPrint@@Base+0x254>
   18b68:	ldr	x30, [sp]
   18b6c:	add	sp, sp, #0x110
   18b70:	ret
   18b74:	sub	sp, sp, #0x110
   18b78:	stp	x1, x2, [sp, #216]
   18b7c:	add	x1, sp, #0x110
   18b80:	stp	x1, x1, [sp, #48]
   18b84:	add	x1, sp, #0xd0
   18b88:	str	x1, [sp, #64]
   18b8c:	mov	w1, #0xffffffc8            	// #-56
   18b90:	str	w1, [sp, #72]
   18b94:	mov	w1, #0xffffff80            	// #-128
   18b98:	str	w1, [sp, #76]
   18b9c:	mov	x1, x0
   18ba0:	stp	x3, x4, [sp, #232]
   18ba4:	mov	w0, #0x1                   	// #1
   18ba8:	ldp	x2, x3, [sp, #48]
   18bac:	stp	x2, x3, [sp, #16]
   18bb0:	ldp	x2, x3, [sp, #64]
   18bb4:	str	x30, [sp]
   18bb8:	stp	x2, x3, [sp, #32]
   18bbc:	add	x2, sp, #0x10
   18bc0:	str	q0, [sp, #80]
   18bc4:	str	q1, [sp, #96]
   18bc8:	str	q2, [sp, #112]
   18bcc:	str	q3, [sp, #128]
   18bd0:	str	q4, [sp, #144]
   18bd4:	str	q5, [sp, #160]
   18bd8:	str	q6, [sp, #176]
   18bdc:	str	q7, [sp, #192]
   18be0:	stp	x5, x6, [sp, #248]
   18be4:	str	x7, [sp, #264]
   18be8:	bl	18abc <OnPrint@@Base+0x254>
   18bec:	ldr	x30, [sp]
   18bf0:	add	sp, sp, #0x110
   18bf4:	ret
   18bf8:	stp	x19, x30, [sp, #-256]!
   18bfc:	mov	x19, x0
   18c00:	str	q0, [sp, #80]
   18c04:	str	q1, [sp, #96]
   18c08:	str	q2, [sp, #112]
   18c0c:	str	q3, [sp, #128]
   18c10:	str	q4, [sp, #144]
   18c14:	str	q5, [sp, #160]
   18c18:	str	q6, [sp, #176]
   18c1c:	str	q7, [sp, #192]
   18c20:	stp	x2, x3, [sp, #208]
   18c24:	stp	x4, x5, [sp, #224]
   18c28:	stp	x6, x7, [sp, #240]
   18c2c:	ldr	x4, [x19, #16]
   18c30:	ldr	x0, [x0, #24]
   18c34:	cmp	x0, x4
   18c38:	b.cc	18c58 <OnPrint@@Base+0x3f0>  // b.lo, b.ul, b.last
   18c3c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18c40:	mov	x3, x0
   18c44:	add	x2, x2, #0x1e9
   18c48:	mov	w1, #0x15c                 	// #348
   18c4c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18c50:	add	x0, x0, #0xe6
   18c54:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   18c58:	add	x2, sp, #0x100
   18c5c:	stp	x2, x2, [sp, #48]
   18c60:	add	x2, sp, #0xd0
   18c64:	str	x2, [sp, #64]
   18c68:	mov	w2, #0xffffffd0            	// #-48
   18c6c:	str	w2, [sp, #72]
   18c70:	mov	w2, #0xffffff80            	// #-128
   18c74:	str	w2, [sp, #76]
   18c78:	ldr	x5, [x19]
   18c7c:	ldp	x2, x3, [sp, #48]
   18c80:	stp	x2, x3, [sp, #16]
   18c84:	ldp	x2, x3, [sp, #64]
   18c88:	stp	x2, x3, [sp, #32]
   18c8c:	add	x3, sp, #0x10
   18c90:	mov	x2, x1
   18c94:	sub	w1, w4, w0
   18c98:	add	x0, x5, x0
   18c9c:	bl	182e8 <__sanitizer_set_report_fd@@Base+0x5834>
   18ca0:	ldr	x1, [x19]
   18ca4:	ldr	x0, [x19, #24]
   18ca8:	add	x0, x1, x0
   18cac:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   18cb0:	ldp	x4, x3, [x19, #16]
   18cb4:	add	x3, x0, x3
   18cb8:	str	x3, [x19, #24]
   18cbc:	cmp	x3, x4
   18cc0:	b.cc	18cd4 <OnPrint@@Base+0x46c>  // b.lo, b.ul, b.last
   18cc4:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18cc8:	mov	w1, #0x162                 	// #354
   18ccc:	add	x2, x2, #0x1e9
   18cd0:	b	18c4c <OnPrint@@Base+0x3e4>
   18cd4:	ldp	x19, x30, [sp], #256
   18cd8:	ret
   18cdc:	and	w1, w0, #0xff
   18ce0:	sub	w0, w1, #0x30
   18ce4:	and	w2, w0, #0xff
   18ce8:	cmp	w2, #0x9
   18cec:	b.ls	18d04 <OnPrint@@Base+0x49c>  // b.plast
   18cf0:	sub	w0, w1, #0x61
   18cf4:	and	w0, w0, #0xff
   18cf8:	cmp	w0, #0x5
   18cfc:	b.hi	18d08 <OnPrint@@Base+0x4a0>  // b.pmore
   18d00:	sub	w0, w1, #0x57
   18d04:	ret
   18d08:	sub	w0, w1, #0x41
   18d0c:	sub	w1, w1, #0x37
   18d10:	and	w0, w0, #0xff
   18d14:	cmp	w0, #0x6
   18d18:	csinv	w0, w1, wzr, cc  // cc = lo, ul, last
   18d1c:	b	18d04 <OnPrint@@Base+0x49c>
   18d20:	str	x30, [sp, #-16]!
   18d24:	bl	18cdc <OnPrint@@Base+0x474>
   18d28:	cmp	w0, #0x9
   18d2c:	cset	w0, ls  // ls = plast
   18d30:	ldr	x30, [sp], #16
   18d34:	ret
   18d38:	mov	x3, x0
   18d3c:	mov	x5, #0x0                   	// #0
   18d40:	mov	x6, #0xa                   	// #10
   18d44:	str	x30, [sp, #-16]!
   18d48:	ldr	x4, [x3]
   18d4c:	ldrb	w0, [x4]
   18d50:	bl	18cdc <OnPrint@@Base+0x474>
   18d54:	cmp	w0, #0x9
   18d58:	b.hi	18d70 <OnPrint@@Base+0x508>  // b.pmore
   18d5c:	sxtw	x1, w0
   18d60:	add	x4, x4, #0x1
   18d64:	str	x4, [x3]
   18d68:	madd	x5, x5, x6, x1
   18d6c:	b	18d48 <OnPrint@@Base+0x4e0>
   18d70:	mov	x0, x5
   18d74:	ldr	x30, [sp], #16
   18d78:	ret
   18d7c:	str	x30, [sp, #-16]!
   18d80:	bl	18cdc <OnPrint@@Base+0x474>
   18d84:	cmp	w0, #0xf
   18d88:	cset	w0, ls  // ls = plast
   18d8c:	ldr	x30, [sp], #16
   18d90:	ret
   18d94:	mov	x3, x0
   18d98:	mov	x5, #0x0                   	// #0
   18d9c:	str	x30, [sp, #-16]!
   18da0:	ldr	x4, [x3]
   18da4:	ldrb	w0, [x4]
   18da8:	bl	18cdc <OnPrint@@Base+0x474>
   18dac:	cmp	w0, #0xf
   18db0:	b.hi	18dc8 <OnPrint@@Base+0x560>  // b.pmore
   18db4:	sxtw	x1, w0
   18db8:	add	x4, x4, #0x1
   18dbc:	add	x5, x1, x5, lsl #4
   18dc0:	str	x4, [x3]
   18dc4:	b	18da0 <OnPrint@@Base+0x538>
   18dc8:	mov	x0, x5
   18dcc:	ldr	x30, [sp], #16
   18dd0:	ret
   18dd4:	mov	x6, x0
   18dd8:	mov	x0, x1
   18ddc:	ldr	x1, [x6, #72]
   18de0:	cbz	x1, 18e08 <OnPrint@@Base+0x5a0>
   18de4:	str	x30, [sp, #-16]!
   18de8:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18dec:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18df0:	add	x2, x2, #0x216
   18df4:	add	x0, x0, #0x228
   18df8:	mov	x4, #0x0                   	// #0
   18dfc:	mov	x3, #0x0                   	// #0
   18e00:	mov	w1, #0x43                  	// #67
   18e04:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   18e08:	ldp	x1, x2, [x6]
   18e0c:	mov	x5, #0x0                   	// #0
   18e10:	ldr	x3, [x6, #40]
   18e14:	ubfx	w4, w3, #1, #1
   18e18:	ubfx	w3, w3, #2, #1
   18e1c:	b	10288 <__sancov_default_options@@Base+0x1e04>
   18e20:	adrp	x2, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18e24:	mov	x1, x0
   18e28:	ldr	x0, [x0]
   18e2c:	ldr	x2, [x2, #3208]
   18e30:	cmp	x0, x2
   18e34:	b.eq	18e40 <OnPrint@@Base+0x5d8>  // b.none
   18e38:	ldr	x1, [x1, #8]
   18e3c:	b	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   18e40:	ret
   18e44:	ldr	x1, [x0]
   18e48:	str	x1, [x0, #24]
   18e4c:	ret
   18e50:	stp	x19, x20, [sp, #-64]!
   18e54:	add	x0, sp, #0x28
   18e58:	str	x30, [sp, #16]
   18e5c:	bl	192ec <OnPrint@@Base+0xa84>
   18e60:	ldr	x0, [sp, #48]
   18e64:	cbz	x0, 18ea4 <OnPrint@@Base+0x63c>
   18e68:	adrp	x19, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18e6c:	add	x20, x19, #0xc88
   18e70:	add	x0, x20, #0x18
   18e74:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
   18e78:	ldr	x1, [x20, #8]
   18e7c:	cbz	x1, 18e88 <OnPrint@@Base+0x620>
   18e80:	ldr	x0, [x19, #3208]
   18e84:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   18e88:	add	x0, x19, #0xc88
   18e8c:	ldp	x2, x3, [sp, #40]
   18e90:	ldr	x1, [sp, #56]
   18e94:	stp	x2, x3, [x0]
   18e98:	str	x1, [x0, #16]
   18e9c:	dmb	ish
   18ea0:	strb	wzr, [x0, #24]
   18ea4:	ldr	x30, [sp, #16]
   18ea8:	ldp	x19, x20, [sp], #64
   18eac:	ret
   18eb0:	stp	x19, x20, [sp, #-32]!
   18eb4:	adrp	x19, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   18eb8:	mov	x20, x0
   18ebc:	stp	x21, x30, [sp, #16]
   18ec0:	add	x21, x19, #0xc88
   18ec4:	add	x0, x21, #0x18
   18ec8:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
   18ecc:	ldr	x0, [x19, #3208]
   18ed0:	cbz	x0, 18ee4 <OnPrint@@Base+0x67c>
   18ed4:	ldp	x0, x1, [x21]
   18ed8:	stp	x0, x1, [x20]
   18edc:	ldr	x0, [x21, #16]
   18ee0:	str	x0, [x20, #16]
   18ee4:	dmb	ish
   18ee8:	add	x19, x19, #0xc88
   18eec:	strb	wzr, [x19, #24]
   18ef0:	ldp	x21, x30, [sp, #16]
   18ef4:	ldp	x19, x20, [sp], #32
   18ef8:	ret
   18efc:	stp	x19, x20, [sp, #-32]!
   18f00:	mov	x19, x0
   18f04:	ands	w20, w1, #0xff
   18f08:	str	x30, [sp, #16]
   18f0c:	b.eq	18f14 <OnPrint@@Base+0x6ac>  // b.none
   18f10:	bl	18e50 <OnPrint@@Base+0x5e8>
   18f14:	mov	x0, x19
   18f18:	bl	192ec <OnPrint@@Base+0xa84>
   18f1c:	cbz	w20, 18f30 <OnPrint@@Base+0x6c8>
   18f20:	ldr	x0, [x19, #8]
   18f24:	cbnz	x0, 18f58 <OnPrint@@Base+0x6f0>
   18f28:	mov	x0, x19
   18f2c:	bl	18eb0 <OnPrint@@Base+0x648>
   18f30:	ldr	x0, [x19, #8]
   18f34:	cbnz	x0, 18f58 <OnPrint@@Base+0x6f0>
   18f38:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18f3c:	add	x2, x2, #0x26f
   18f40:	mov	x4, #0x0                   	// #0
   18f44:	mov	x3, #0x0                   	// #0
   18f48:	mov	w1, #0x51                  	// #81
   18f4c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18f50:	add	x0, x0, #0x228
   18f54:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   18f58:	ldr	x0, [x19, #16]
   18f5c:	cbnz	x0, 18f78 <OnPrint@@Base+0x710>
   18f60:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18f64:	mov	x4, #0x0                   	// #0
   18f68:	add	x2, x2, #0x29c
   18f6c:	mov	x3, #0x0                   	// #0
   18f70:	mov	w1, #0x52                  	// #82
   18f74:	b	18f4c <OnPrint@@Base+0x6e4>
   18f78:	ldr	x0, [x19]
   18f7c:	ldr	x30, [sp, #16]
   18f80:	str	x0, [x19, #24]
   18f84:	ldp	x19, x20, [sp], #32
   18f88:	ret
   18f8c:	stp	x19, x20, [sp, #-96]!
   18f90:	mov	x5, #0x0                   	// #0
   18f94:	mov	x4, #0x4000000             	// #67108864
   18f98:	add	x3, sp, #0x50
   18f9c:	stp	x21, x22, [sp, #16]
   18fa0:	mov	x21, x0
   18fa4:	mov	x22, x1
   18fa8:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18fac:	add	x1, sp, #0x40
   18fb0:	add	x0, x0, #0x2c1
   18fb4:	stp	x23, x24, [sp, #32]
   18fb8:	mov	x23, x2
   18fbc:	add	x2, sp, #0x48
   18fc0:	stp	x25, x30, [sp, #48]
   18fc4:	stp	xzr, xzr, [sp, #64]
   18fc8:	str	xzr, [sp, #80]
   18fcc:	bl	12948 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a84>
   18fd0:	tst	w0, #0xff
   18fd4:	b.eq	190c0 <OnPrint@@Base+0x858>  // b.none
   18fd8:	adrp	x24, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   18fdc:	add	x25, sp, #0x58
   18fe0:	add	x24, x24, #0x2d2
   18fe4:	mov	w20, #0x0                   	// #0
   18fe8:	ldr	x0, [sp, #64]
   18fec:	mov	x19, #0x0                   	// #0
   18ff0:	str	x0, [sp, #88]
   18ff4:	ldp	x1, x3, [sp, #80]
   18ff8:	ldr	x0, [sp, #64]
   18ffc:	add	x1, x0, x1
   19000:	cmp	x3, x1
   19004:	b.cs	190b8 <OnPrint@@Base+0x850>  // b.hs, b.nlast
   19008:	ldrb	w0, [x3]
   1900c:	bl	18d7c <OnPrint@@Base+0x514>
   19010:	tst	w0, #0xff
   19014:	b.eq	19048 <OnPrint@@Base+0x7e0>  // b.none
   19018:	mov	x0, x25
   1901c:	bl	18d94 <OnPrint@@Base+0x52c>
   19020:	mov	x19, x0
   19024:	ldr	x0, [sp, #88]
   19028:	ldrb	w1, [x0], #1
   1902c:	cmp	w1, #0x2f
   19030:	cset	w20, eq  // eq = none
   19034:	cmp	w20, #0x0
   19038:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   1903c:	b.ls	1909c <OnPrint@@Base+0x834>  // b.plast
   19040:	str	x0, [sp, #88]
   19044:	b	19024 <OnPrint@@Base+0x7bc>
   19048:	mov	x1, x24
   1904c:	mov	x0, x3
   19050:	mov	x2, #0x4                   	// #4
   19054:	bl	14410 <__sanitizer_set_report_fd@@Base+0x195c>
   19058:	cbnz	w0, 1909c <OnPrint@@Base+0x834>
   1905c:	ldr	x3, [sp, #88]
   19060:	ldrb	w0, [x3]
   19064:	bl	18d20 <OnPrint@@Base+0x4b8>
   19068:	tst	w0, #0xff
   1906c:	b.ne	1907c <OnPrint@@Base+0x814>  // b.any
   19070:	add	x3, x3, #0x1
   19074:	str	x3, [sp, #88]
   19078:	b	1905c <OnPrint@@Base+0x7f4>
   1907c:	mov	x0, x25
   19080:	bl	18d38 <OnPrint@@Base+0x4d0>
   19084:	mov	x4, x23
   19088:	lsl	x1, x0, #10
   1908c:	mov	x3, x22
   19090:	mov	w2, w20
   19094:	mov	x0, x19
   19098:	blr	x21
   1909c:	ldr	x0, [sp, #88]
   190a0:	add	x1, x0, #0x1
   190a4:	str	x1, [sp, #88]
   190a8:	ldrb	w0, [x0]
   190ac:	cmp	w0, #0xa
   190b0:	b.ne	1909c <OnPrint@@Base+0x834>  // b.any
   190b4:	b	18ff4 <OnPrint@@Base+0x78c>
   190b8:	ldr	x1, [sp, #72]
   190bc:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   190c0:	ldp	x21, x22, [sp, #16]
   190c4:	ldp	x23, x24, [sp, #32]
   190c8:	ldp	x25, x30, [sp, #48]
   190cc:	ldp	x19, x20, [sp], #96
   190d0:	ret
   190d4:	stp	x19, x20, [sp, #-288]!
   190d8:	mov	x19, x1
   190dc:	mov	x1, #0x1000                	// #4096
   190e0:	stp	x21, x22, [sp, #16]
   190e4:	mov	x21, x0
   190e8:	add	x22, sp, #0x88
   190ec:	stp	x23, x24, [sp, #32]
   190f0:	adrp	x24, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   190f4:	add	x24, x24, #0x360
   190f8:	stp	x25, x26, [sp, #48]
   190fc:	add	x25, sp, #0xd0
   19100:	add	x26, x22, #0x1c
   19104:	stp	x27, x28, [sp, #64]
   19108:	mov	x23, #0x0                   	// #0
   1910c:	ldr	x0, [x0]
   19110:	str	x0, [x21, #24]
   19114:	add	x0, sp, #0x68
   19118:	str	x30, [sp, #80]
   1911c:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   19120:	str	xzr, [sp, #280]
   19124:	ldr	x0, [sp, #104]
   19128:	str	x0, [sp, #232]
   1912c:	ldr	x0, [sp, #120]
   19130:	str	x0, [sp, #240]
   19134:	mov	x1, x25
   19138:	mov	x0, x21
   1913c:	bl	1932c <OnPrint@@Base+0xac4>
   19140:	tst	w0, #0xff
   19144:	b.eq	19250 <OnPrint@@Base+0x9e8>  // b.none
   19148:	ldr	x27, [sp, #232]
   1914c:	ldrb	w0, [x27]
   19150:	cbz	w0, 192e4 <OnPrint@@Base+0xa7c>
   19154:	ldr	x20, [sp, #208]
   19158:	cmp	x23, #0x0
   1915c:	ldr	x0, [sp, #224]
   19160:	csel	x20, x20, xzr, ne  // ne = any
   19164:	mov	x2, #0x10                  	// #16
   19168:	mov	w1, #0x0                   	// #0
   1916c:	sub	x20, x20, x0
   19170:	mov	x0, x26
   19174:	stp	xzr, xzr, [sp, #136]
   19178:	str	xzr, [sp, #152]
   1917c:	str	wzr, [sp, #160]
   19180:	strb	wzr, [sp, #180]
   19184:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   19188:	mov	x2, x20
   1918c:	mov	x1, x27
   19190:	mov	x0, x22
   19194:	stp	xzr, xzr, [sp, #184]
   19198:	str	xzr, [sp, #200]
   1919c:	bl	10210 <__sancov_default_options@@Base+0x1d8c>
   191a0:	mov	x0, x25
   191a4:	mov	x1, x22
   191a8:	bl	18dd4 <OnPrint@@Base+0x56c>
   191ac:	ldp	x4, x3, [x19, #8]
   191b0:	mov	x0, #0x48                  	// #72
   191b4:	udiv	x4, x4, x0
   191b8:	cmp	x3, x4
   191bc:	b.ls	191d8 <OnPrint@@Base+0x970>  // b.plast
   191c0:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   191c4:	add	x2, x2, #0x373
   191c8:	mov	w1, #0x1be                 	// #446
   191cc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   191d0:	add	x0, x0, #0x5c5
   191d4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   191d8:	b.ne	192c4 <OnPrint@@Base+0xa5c>  // b.any
   191dc:	add	x20, x3, #0x1
   191e0:	tst	x3, x20
   191e4:	b.eq	19280 <OnPrint@@Base+0xa18>  // b.none
   191e8:	clz	x1, x20
   191ec:	mov	w0, #0x3f                  	// #63
   191f0:	sub	w1, w0, w1
   191f4:	mov	x0, #0x1                   	// #1
   191f8:	add	w4, w1, #0x1
   191fc:	lsl	x4, x0, x4
   19200:	cmp	x20, x4
   19204:	b.cc	1921c <OnPrint@@Base+0x9b4>  // b.lo, b.ul, b.last
   19208:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1920c:	mov	x3, x20
   19210:	add	x2, x2, #0x2c2
   19214:	mov	w1, #0x17b                 	// #379
   19218:	b	191cc <OnPrint@@Base+0x964>
   1921c:	lsl	x0, x0, x1
   19220:	cmp	x20, x0
   19224:	b.hi	19274 <OnPrint@@Base+0xa0c>  // b.pmore
   19228:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1922c:	mov	x4, x0
   19230:	mov	x3, x20
   19234:	add	x2, x2, #0x2e4
   19238:	mov	w1, #0x17c                 	// #380
   1923c:	b	191cc <OnPrint@@Base+0x964>
   19240:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   19244:	mov	w1, #0x1fd                 	// #509
   19248:	add	x2, x2, #0x342
   1924c:	b	191cc <OnPrint@@Base+0x964>
   19250:	ldp	x0, x1, [sp, #104]
   19254:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   19258:	ldp	x21, x22, [sp, #16]
   1925c:	ldp	x23, x24, [sp, #32]
   19260:	ldp	x25, x26, [sp, #48]
   19264:	ldp	x27, x28, [sp, #64]
   19268:	ldr	x30, [sp, #80]
   1926c:	ldp	x19, x20, [sp], #288
   19270:	ret
   19274:	cmp	x3, x4
   19278:	b.hi	19240 <OnPrint@@Base+0x9d8>  // b.pmore
   1927c:	mov	x20, x4
   19280:	mov	x28, #0x48                  	// #72
   19284:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   19288:	mov	x1, x0
   1928c:	mul	x0, x20, x28
   19290:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   19294:	mov	x20, x0
   19298:	mov	x1, x24
   1929c:	mov	w2, #0x0                   	// #0
   192a0:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   192a4:	mov	x27, x0
   192a8:	ldr	x2, [x19, #16]
   192ac:	ldr	x1, [x19]
   192b0:	mul	x2, x2, x28
   192b4:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   192b8:	ldp	x0, x1, [x19]
   192bc:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   192c0:	stp	x27, x20, [x19]
   192c4:	mov	x2, #0x48                  	// #72
   192c8:	ldr	x3, [x19]
   192cc:	ldr	x0, [x19, #16]
   192d0:	add	x1, x0, #0x1
   192d4:	str	x1, [x19, #16]
   192d8:	madd	x0, x0, x2, x3
   192dc:	mov	x1, x22
   192e0:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   192e4:	add	x23, x23, #0x1
   192e8:	b	19134 <OnPrint@@Base+0x8cc>
   192ec:	stp	x19, x30, [sp, #-16]!
   192f0:	add	x3, x0, #0x10
   192f4:	add	x2, x0, #0x8
   192f8:	mov	x1, x0
   192fc:	mov	x19, x0
   19300:	mov	x5, #0x0                   	// #0
   19304:	mov	x4, #0x4000000             	// #67108864
   19308:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1930c:	add	x0, x0, #0x2d7
   19310:	bl	12948 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a84>
   19314:	tst	w0, #0xff
   19318:	b.ne	19324 <OnPrint@@Base+0xabc>  // b.any
   1931c:	stp	xzr, xzr, [x19]
   19320:	str	xzr, [x19, #16]
   19324:	ldp	x19, x30, [sp], #16
   19328:	ret
   1932c:	stp	x19, x20, [sp, #-64]!
   19330:	mov	x19, x0
   19334:	stp	x21, x22, [sp, #16]
   19338:	ldr	x22, [x0]
   1933c:	stp	x23, x24, [sp, #32]
   19340:	ldr	x0, [x0, #16]
   19344:	stp	x25, x30, [sp, #48]
   19348:	add	x22, x22, x0
   1934c:	ldr	x0, [x19, #24]
   19350:	cmp	x0, x22
   19354:	b.cs	19688 <OnPrint@@Base+0xe20>  // b.hs, b.nlast
   19358:	sub	x2, x22, x0
   1935c:	mov	x20, x1
   19360:	mov	w1, #0xa                   	// #10
   19364:	bl	14288 <__sanitizer_set_report_fd@@Base+0x17d4>
   19368:	cmp	x0, #0x0
   1936c:	csel	x21, x0, x22, ne  // ne = any
   19370:	add	x22, x19, #0x18
   19374:	mov	x0, x22
   19378:	bl	18d94 <OnPrint@@Base+0x52c>
   1937c:	str	x0, [x20]
   19380:	ldr	x0, [x19, #24]
   19384:	add	x1, x0, #0x1
   19388:	str	x1, [x19, #24]
   1938c:	ldrb	w23, [x0]
   19390:	cmp	x23, #0x2d
   19394:	b.eq	193b8 <OnPrint@@Base+0xb50>  // b.none
   19398:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1939c:	mov	x3, x23
   193a0:	add	x2, x2, #0x2e7
   193a4:	mov	x4, #0x2d                  	// #45
   193a8:	mov	w1, #0x28                  	// #40
   193ac:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   193b0:	add	x0, x0, #0x307
   193b4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   193b8:	mov	x0, x22
   193bc:	bl	18d94 <OnPrint@@Base+0x52c>
   193c0:	ldr	x1, [x19, #24]
   193c4:	str	x0, [x20, #8]
   193c8:	add	x0, x1, #0x1
   193cc:	str	x0, [x19, #24]
   193d0:	ldrb	w3, [x1]
   193d4:	cmp	x3, #0x20
   193d8:	b.eq	193f0 <OnPrint@@Base+0xb88>  // b.none
   193dc:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   193e0:	mov	x4, #0x20                  	// #32
   193e4:	add	x2, x2, #0x34d
   193e8:	mov	w1, #0x2a                  	// #42
   193ec:	b	193ac <OnPrint@@Base+0xb44>
   193f0:	ldrb	w0, [x1, #1]
   193f4:	cmp	w0, #0x72
   193f8:	ccmp	w0, w23, #0x4, ne  // ne = any
   193fc:	b.eq	19418 <OnPrint@@Base+0xbb0>  // b.none
   19400:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19404:	mov	x4, #0x0                   	// #0
   19408:	add	x2, x2, #0x36d
   1940c:	mov	x3, #0x0                   	// #0
   19410:	mov	w1, #0x2b                  	// #43
   19414:	b	193ac <OnPrint@@Base+0xb44>
   19418:	str	xzr, [x20, #40]
   1941c:	add	x0, x1, #0x2
   19420:	str	x0, [x19, #24]
   19424:	ldrb	w0, [x1, #1]
   19428:	cmp	w0, #0x72
   1942c:	b.ne	19438 <OnPrint@@Base+0xbd0>  // b.any
   19430:	mov	x0, #0x1                   	// #1
   19434:	str	x0, [x20, #40]
   19438:	ldrb	w0, [x1, #2]
   1943c:	mov	w2, #0x2d                  	// #45
   19440:	cmp	w0, #0x77
   19444:	ccmp	w0, w2, #0x4, ne  // ne = any
   19448:	b.eq	19464 <OnPrint@@Base+0xbfc>  // b.none
   1944c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19450:	mov	x4, #0x0                   	// #0
   19454:	add	x2, x2, #0x39a
   19458:	mov	x3, #0x0                   	// #0
   1945c:	mov	w1, #0x2e                  	// #46
   19460:	b	193ac <OnPrint@@Base+0xb44>
   19464:	add	x0, x1, #0x3
   19468:	str	x0, [x19, #24]
   1946c:	ldrb	w0, [x1, #2]
   19470:	cmp	w0, #0x77
   19474:	b.ne	19484 <OnPrint@@Base+0xc1c>  // b.any
   19478:	ldr	x0, [x20, #40]
   1947c:	orr	x0, x0, #0x2
   19480:	str	x0, [x20, #40]
   19484:	ldrb	w0, [x1, #3]
   19488:	mov	w2, #0x78                  	// #120
   1948c:	cmp	w0, #0x2d
   19490:	ccmp	w0, w2, #0x4, ne  // ne = any
   19494:	b.eq	194b0 <OnPrint@@Base+0xc48>  // b.none
   19498:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1949c:	mov	x4, #0x0                   	// #0
   194a0:	add	x2, x2, #0x3c7
   194a4:	mov	x3, #0x0                   	// #0
   194a8:	mov	w1, #0x30                  	// #48
   194ac:	b	193ac <OnPrint@@Base+0xb44>
   194b0:	add	x0, x1, #0x4
   194b4:	str	x0, [x19, #24]
   194b8:	ldrb	w0, [x1, #3]
   194bc:	cmp	w0, #0x78
   194c0:	b.ne	194d0 <OnPrint@@Base+0xc68>  // b.any
   194c4:	ldr	x0, [x20, #40]
   194c8:	orr	x0, x0, #0x4
   194cc:	str	x0, [x20, #40]
   194d0:	ldrb	w0, [x1, #4]
   194d4:	cmp	w0, #0x73
   194d8:	cset	w23, eq  // eq = none
   194dc:	cmp	w0, #0x70
   194e0:	csinc	w23, w23, wzr, ne  // ne = any
   194e4:	cbnz	w23, 19500 <OnPrint@@Base+0xc98>
   194e8:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   194ec:	mov	x4, #0x0                   	// #0
   194f0:	add	x2, x2, #0x3f4
   194f4:	mov	x3, #0x0                   	// #0
   194f8:	mov	w1, #0x32                  	// #50
   194fc:	b	193ac <OnPrint@@Base+0xb44>
   19500:	add	x0, x1, #0x5
   19504:	str	x0, [x19, #24]
   19508:	ldrb	w0, [x1, #4]
   1950c:	cmp	w0, #0x73
   19510:	b.ne	19520 <OnPrint@@Base+0xcb8>  // b.any
   19514:	ldr	x0, [x20, #40]
   19518:	orr	x0, x0, #0x8
   1951c:	str	x0, [x20, #40]
   19520:	add	x0, x1, #0x6
   19524:	str	x0, [x19, #24]
   19528:	ldrb	w24, [x1, #5]
   1952c:	cmp	x24, #0x20
   19530:	b.eq	1954c <OnPrint@@Base+0xce4>  // b.none
   19534:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19538:	mov	x3, x24
   1953c:	add	x2, x2, #0x34d
   19540:	mov	x4, #0x20                  	// #32
   19544:	mov	w1, #0x34                  	// #52
   19548:	b	193ac <OnPrint@@Base+0xb44>
   1954c:	mov	x0, x22
   19550:	bl	18d94 <OnPrint@@Base+0x52c>
   19554:	str	x0, [x20, #16]
   19558:	ldr	x0, [x19, #24]
   1955c:	add	x1, x0, #0x1
   19560:	str	x1, [x19, #24]
   19564:	ldrb	w25, [x0]
   19568:	cmp	x25, #0x20
   1956c:	b.eq	19588 <OnPrint@@Base+0xd20>  // b.none
   19570:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19574:	mov	x4, x24
   19578:	mov	x3, x25
   1957c:	add	x2, x2, #0x34d
   19580:	mov	w1, #0x36                  	// #54
   19584:	b	193ac <OnPrint@@Base+0xb44>
   19588:	mov	x0, x22
   1958c:	bl	18d94 <OnPrint@@Base+0x52c>
   19590:	ldr	x0, [x19, #24]
   19594:	add	x1, x0, #0x1
   19598:	str	x1, [x19, #24]
   1959c:	ldrb	w24, [x0]
   195a0:	cmp	x24, #0x3a
   195a4:	b.eq	195c0 <OnPrint@@Base+0xd58>  // b.none
   195a8:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   195ac:	mov	x3, x24
   195b0:	add	x2, x2, #0x421
   195b4:	mov	x4, #0x3a                  	// #58
   195b8:	mov	w1, #0x38                  	// #56
   195bc:	b	193ac <OnPrint@@Base+0xb44>
   195c0:	mov	x0, x22
   195c4:	bl	18d94 <OnPrint@@Base+0x52c>
   195c8:	ldr	x0, [x19, #24]
   195cc:	add	x1, x0, #0x1
   195d0:	str	x1, [x19, #24]
   195d4:	ldrb	w3, [x0]
   195d8:	cmp	x3, #0x20
   195dc:	b.eq	195f4 <OnPrint@@Base+0xd8c>  // b.none
   195e0:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   195e4:	mov	x4, x25
   195e8:	add	x2, x2, #0x34d
   195ec:	mov	w1, w24
   195f0:	b	193ac <OnPrint@@Base+0xb44>
   195f4:	ldr	x0, [x19, #24]
   195f8:	ldrb	w0, [x0]
   195fc:	bl	18d20 <OnPrint@@Base+0x4b8>
   19600:	tst	w0, #0xff
   19604:	b.eq	19618 <OnPrint@@Base+0xdb0>  // b.none
   19608:	ldr	x0, [x19, #24]
   1960c:	add	x0, x0, #0x1
   19610:	str	x0, [x19, #24]
   19614:	b	195f4 <OnPrint@@Base+0xd8c>
   19618:	ldr	x1, [x19, #24]
   1961c:	cmp	x1, x21
   19620:	b.cs	1963c <OnPrint@@Base+0xdd4>  // b.hs, b.nlast
   19624:	ldrb	w0, [x1]
   19628:	cmp	w0, #0x20
   1962c:	b.ne	1963c <OnPrint@@Base+0xdd4>  // b.any
   19630:	add	x1, x1, #0x1
   19634:	str	x1, [x19, #24]
   19638:	b	19618 <OnPrint@@Base+0xdb0>
   1963c:	ldr	x0, [x20, #24]
   19640:	cbz	x0, 19668 <OnPrint@@Base+0xe00>
   19644:	ldr	x22, [x20, #32]
   19648:	sub	x2, x21, x1
   1964c:	sub	x22, x22, #0x1
   19650:	cmp	x22, x2
   19654:	csel	x22, x22, x2, ls  // ls = plast
   19658:	mov	x2, x22
   1965c:	bl	1460c <__sanitizer_set_report_fd@@Base+0x1b58>
   19660:	ldr	x0, [x20, #24]
   19664:	strb	wzr, [x0, x22]
   19668:	add	x21, x21, #0x1
   1966c:	str	x21, [x19, #24]
   19670:	mov	w0, w23
   19674:	ldp	x21, x22, [sp, #16]
   19678:	ldp	x23, x24, [sp, #32]
   1967c:	ldp	x25, x30, [sp, #48]
   19680:	ldp	x19, x20, [sp], #64
   19684:	ret
   19688:	mov	w23, #0x0                   	// #0
   1968c:	b	19670 <OnPrint@@Base+0xe08>
   19690:	ldr	w2, [x0]
   19694:	ldr	w0, [x1]
   19698:	cmp	w2, w0
   1969c:	cset	w0, cc  // cc = lo, ul, last
   196a0:	ret
   196a4:	ldr	x0, [x0]
   196a8:	ldr	w0, [x0, #8]
   196ac:	ret
   196b0:	ldr	x0, [x0]
   196b4:	ldr	w0, [x0, #12]
   196b8:	and	w0, w0, #0xfffff
   196bc:	ret
   196c0:	ldr	x0, [x0]
   196c4:	add	x0, x0, #0xc
   196c8:	ldxr	w1, [x0]
   196cc:	add	w2, w1, #0x1
   196d0:	stlxr	w3, w2, [x0]
   196d4:	cbnz	w3, 196c8 <OnPrint@@Base+0xe60>
   196d8:	mvn	x0, x1
   196dc:	dmb	ish
   196e0:	tst	x0, #0xfffff
   196e4:	b.ne	1970c <OnPrint@@Base+0xea4>  // b.any
   196e8:	str	x30, [sp, #-16]!
   196ec:	mov	x4, #0x100000              	// #1048576
   196f0:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   196f4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   196f8:	mov	x3, x4
   196fc:	add	x2, x2, #0x44d
   19700:	add	x0, x0, #0x47d
   19704:	mov	w1, #0x61                  	// #97
   19708:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1970c:	ret
   19710:	adrp	x0, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   19714:	add	x0, x0, #0xa8
   19718:	ret
   1971c:	mov	w2, w0
   19720:	cbz	w0, 197e0 <OnPrint@@Base+0xf78>
   19724:	str	x30, [sp, #-16]!
   19728:	and	x3, x2, #0x7fffffff
   1972c:	mov	w4, w0
   19730:	cmp	x3, w0, uxtw
   19734:	b.eq	19750 <OnPrint@@Base+0xee8>  // b.none
   19738:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1973c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19740:	add	x2, x2, #0x4bf
   19744:	add	x0, x0, #0x4ef
   19748:	mov	w1, #0x8c                  	// #140
   1974c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   19750:	lsr	w3, w0, #23
   19754:	adrp	x4, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   19758:	add	x4, x4, #0xca8
   1975c:	mov	x6, #0xfffff               	// #1048575
   19760:	lsl	x3, x3, #12
   19764:	add	x5, x3, #0x1, lsl #12
   19768:	cmp	x3, x6
   1976c:	b.ls	1978c <OnPrint@@Base+0xf24>  // b.plast
   19770:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19774:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19778:	add	x2, x2, #0x534
   1977c:	add	x0, x0, #0x4ef
   19780:	mov	x4, #0x100000              	// #1048576
   19784:	mov	w1, #0x91                  	// #145
   19788:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1978c:	ldr	x1, [x4, x3, lsl #3]
   19790:	and	x0, x1, #0xfffffffffffffffe
   19794:	cbz	x0, 197c8 <OnPrint@@Base+0xf60>
   19798:	ldr	w1, [x0, #8]
   1979c:	cmp	w2, w1
   197a0:	b.ne	197c0 <OnPrint@@Base+0xf58>  // b.any
   197a4:	ldp	w2, w3, [x0, #16]
   197a8:	add	x0, x0, #0x18
   197ac:	mov	x1, #0x0                   	// #0
   197b0:	bfxil	x1, x2, #0, #32
   197b4:	ldr	x30, [sp], #16
   197b8:	bfi	x1, x3, #32, #32
   197bc:	ret
   197c0:	ldr	x0, [x0]
   197c4:	b	19794 <OnPrint@@Base+0xf2c>
   197c8:	add	x3, x3, #0x1
   197cc:	cmp	x5, x3
   197d0:	b.ne	19768 <OnPrint@@Base+0xf00>  // b.any
   197d4:	mov	w3, #0x0                   	// #0
   197d8:	mov	w2, #0x0                   	// #0
   197dc:	b	197ac <OnPrint@@Base+0xf44>
   197e0:	mov	x1, #0x0                   	// #0
   197e4:	mov	w3, #0x0                   	// #0
   197e8:	bfxil	x1, x2, #0, #32
   197ec:	mov	x0, #0x0                   	// #0
   197f0:	bfi	x1, x3, #32, #32
   197f4:	ret
   197f8:	adrp	x1, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   197fc:	add	x1, x1, #0xca8
   19800:	mov	w0, #0x0                   	// #0
   19804:	sxtw	x3, w0
   19808:	ldr	x2, [x1, x3, lsl #3]
   1980c:	dmb	ish
   19810:	and	x2, x2, #0xfffffffffffffffe
   19814:	str	x2, [x1, x3, lsl #3]
   19818:	add	w0, w0, #0x1
   1981c:	cmp	w0, #0x100, lsl #12
   19820:	b.ne	19804 <OnPrint@@Base+0xf9c>  // b.any
   19824:	ret
   19828:	ldr	x4, [x0, #16]
   1982c:	cbnz	x4, 1984c <OnPrint@@Base+0xfe4>
   19830:	mov	x0, #0x0                   	// #0
   19834:	mov	x1, #0x0                   	// #0
   19838:	ret
   1983c:	mov	x0, #0x0                   	// #0
   19840:	mov	x1, #0x0                   	// #0
   19844:	ldr	x30, [sp], #16
   19848:	ret
   1984c:	mov	x5, x4
   19850:	mov	x2, #0x0                   	// #0
   19854:	str	x30, [sp, #-16]!
   19858:	cmp	x5, x2
   1985c:	b.ls	198ac <OnPrint@@Base+0x1044>  // b.plast
   19860:	add	x6, x5, x2
   19864:	lsr	x3, x6, #1
   19868:	cmp	x4, x6, lsr #1
   1986c:	b.hi	19890 <OnPrint@@Base+0x1028>  // b.pmore
   19870:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   19874:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   19878:	add	x2, x2, #0x317
   1987c:	add	x0, x0, #0x5c5
   19880:	mov	w1, #0x1ba                 	// #442
   19884:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   19888:	mov	x5, x3
   1988c:	b	19858 <OnPrint@@Base+0xff0>
   19890:	ldr	x7, [x0]
   19894:	lsl	x6, x3, #4
   19898:	ldr	w6, [x7, x6]
   1989c:	cmp	w1, w6
   198a0:	b.ls	19888 <OnPrint@@Base+0x1020>  // b.plast
   198a4:	add	x2, x3, #0x1
   198a8:	b	19858 <OnPrint@@Base+0xff0>
   198ac:	cmp	x4, x2
   198b0:	b.cc	1983c <OnPrint@@Base+0xfd4>  // b.lo, b.ul, b.last
   198b4:	b.ne	198d4 <OnPrint@@Base+0x106c>  // b.any
   198b8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   198bc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   198c0:	mov	x3, x4
   198c4:	add	x2, x2, #0x317
   198c8:	add	x0, x0, #0x5c5
   198cc:	mov	w1, #0x1b6                 	// #438
   198d0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   198d4:	ldr	x0, [x0]
   198d8:	lsl	x3, x2, #4
   198dc:	add	x2, x0, x2, lsl #4
   198e0:	ldr	w0, [x0, x3]
   198e4:	cmp	w0, w1
   198e8:	b.ne	1983c <OnPrint@@Base+0xfd4>  // b.any
   198ec:	ldr	x1, [x2, #8]
   198f0:	add	x0, x1, #0x18
   198f4:	ldr	x1, [x1, #16]
   198f8:	b	19844 <OnPrint@@Base+0xfdc>
   198fc:	stp	x19, x20, [sp, #-32]!
   19900:	adrp	x19, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   19904:	add	x19, x19, #0xca8
   19908:	mov	w20, #0x100000              	// #1048576
   1990c:	str	x30, [sp, #16]
   19910:	mov	x0, x19
   19914:	bl	19dc0 <OnPrint@@Base+0x1558>
   19918:	add	x19, x19, #0x8
   1991c:	subs	w20, w20, #0x1
   19920:	b.ne	19910 <OnPrint@@Base+0x10a8>  // b.any
   19924:	ldr	x30, [sp, #16]
   19928:	ldp	x19, x20, [sp], #32
   1992c:	ret
   19930:	str	x30, [sp, #-16]!
   19934:	mov	x2, x1
   19938:	mov	x3, #0x0                   	// #0
   1993c:	mov	x1, x0
   19940:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   19944:	add	x0, x0, #0xca8
   19948:	bl	19e20 <OnPrint@@Base+0x15b8>
   1994c:	cbz	x0, 1995c <OnPrint@@Base+0x10f4>
   19950:	ldr	w0, [x0, #8]
   19954:	ldr	x30, [sp], #16
   19958:	ret
   1995c:	mov	w0, #0x0                   	// #0
   19960:	b	19954 <OnPrint@@Base+0x10ec>
   19964:	mov	x2, x1
   19968:	mov	x3, #0x0                   	// #0
   1996c:	mov	x1, x0
   19970:	adrp	x0, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   19974:	add	x0, x0, #0xca8
   19978:	b	19e20 <OnPrint@@Base+0x15b8>
   1997c:	stp	x19, x20, [sp, #-80]!
   19980:	mov	x1, #0x1                   	// #1
   19984:	mov	x19, x0
   19988:	stp	x21, x22, [sp, #16]
   1998c:	adrp	x21, 1a7000 <__asan_cplus_demangle_operators@@Base+0x156be0>
   19990:	stp	x23, x24, [sp, #32]
   19994:	stp	x25, x30, [sp, #48]
   19998:	stp	xzr, xzr, [x0]
   1999c:	str	xzr, [x0, #16]
   199a0:	bl	1a028 <OnPrint@@Base+0x17c0>
   199a4:	add	x0, x21, #0xca8
   199a8:	add	x0, x0, #0x800, lsl #12
   199ac:	ldr	x1, [x0, #1024]
   199b0:	ldr	x0, [x19, #8]
   199b4:	add	x1, x1, #0x64
   199b8:	cmp	x1, x0, lsr #4
   199bc:	b.ls	199c8 <OnPrint@@Base+0x1160>  // b.plast
   199c0:	mov	x0, x19
   199c4:	bl	1a028 <OnPrint@@Base+0x17c0>
   199c8:	add	x21, x21, #0xca8
   199cc:	add	x23, sp, #0x40
   199d0:	mov	w25, #0x0                   	// #0
   199d4:	mov	w22, #0x3f                  	// #63
   199d8:	sxtw	x0, w25
   199dc:	ldr	x20, [x21, x0, lsl #3]
   199e0:	and	x20, x20, #0xfffffffffffffffe
   199e4:	mov	x24, #0x1                   	// #1
   199e8:	cbz	x20, 19ab4 <OnPrint@@Base+0x124c>
   199ec:	ldp	x4, x3, [x19, #8]
   199f0:	ldr	w0, [x20, #8]
   199f4:	str	w0, [sp, #64]
   199f8:	str	x20, [sp, #72]
   199fc:	lsr	x4, x4, #4
   19a00:	cmp	x3, x4
   19a04:	b.ls	19a20 <OnPrint@@Base+0x11b8>  // b.plast
   19a08:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   19a0c:	add	x2, x2, #0x373
   19a10:	mov	w1, #0x1be                 	// #446
   19a14:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   19a18:	add	x0, x0, #0x5c5
   19a1c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   19a20:	b.ne	19a8c <OnPrint@@Base+0x1224>  // b.any
   19a24:	add	x1, x3, #0x1
   19a28:	tst	x1, x3
   19a2c:	b.eq	19a84 <OnPrint@@Base+0x121c>  // b.none
   19a30:	clz	x0, x1
   19a34:	sub	w0, w22, w0
   19a38:	add	w4, w0, #0x1
   19a3c:	lsl	x4, x24, x4
   19a40:	cmp	x1, x4
   19a44:	b.cc	19a5c <OnPrint@@Base+0x11f4>  // b.lo, b.ul, b.last
   19a48:	mov	x3, x1
   19a4c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   19a50:	mov	w1, #0x17b                 	// #379
   19a54:	add	x2, x2, #0x2c2
   19a58:	b	19a14 <OnPrint@@Base+0x11ac>
   19a5c:	lsl	x0, x24, x0
   19a60:	cmp	x1, x0
   19a64:	b.hi	19a80 <OnPrint@@Base+0x1218>  // b.pmore
   19a68:	mov	x3, x1
   19a6c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   19a70:	mov	x4, x0
   19a74:	add	x2, x2, #0x2e4
   19a78:	mov	w1, #0x17c                 	// #380
   19a7c:	b	19a14 <OnPrint@@Base+0x11ac>
   19a80:	mov	x1, x4
   19a84:	mov	x0, x19
   19a88:	bl	1a028 <OnPrint@@Base+0x17c0>
   19a8c:	ldr	x0, [x19, #16]
   19a90:	mov	x2, #0x10                  	// #16
   19a94:	ldr	x3, [x19]
   19a98:	add	x1, x0, #0x1
   19a9c:	str	x1, [x19, #16]
   19aa0:	mov	x1, x23
   19aa4:	add	x0, x3, x0, lsl #4
   19aa8:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   19aac:	ldr	x20, [x20]
   19ab0:	b	199e8 <OnPrint@@Base+0x1180>
   19ab4:	add	w25, w25, #0x1
   19ab8:	cmp	w25, #0x100, lsl #12
   19abc:	b.ne	199d8 <OnPrint@@Base+0x1170>  // b.any
   19ac0:	ldr	x0, [x19]
   19ac4:	adrp	x2, 19000 <OnPrint@@Base+0x798>
   19ac8:	ldr	x1, [x19, #16]
   19acc:	add	x2, x2, #0x690
   19ad0:	bl	19bf4 <OnPrint@@Base+0x138c>
   19ad4:	ldp	x21, x22, [sp, #16]
   19ad8:	ldp	x23, x24, [sp, #32]
   19adc:	ldp	x25, x30, [sp, #48]
   19ae0:	ldp	x19, x20, [sp], #80
   19ae4:	ret
   19ae8:	mov	x2, x0
   19aec:	add	x3, x0, #0x8
   19af0:	ldr	x0, [x2, #8]
   19af4:	dmb	ish
   19af8:	ldr	x5, [x2, #16]
   19afc:	dmb	ish
   19b00:	cbz	x0, 19b34 <OnPrint@@Base+0x12cc>
   19b04:	add	x4, x1, x0
   19b08:	cmp	x4, x5
   19b0c:	b.hi	19b34 <OnPrint@@Base+0x12cc>  // b.pmore
   19b10:	ldxr	x5, [x3]
   19b14:	cmp	x5, x0
   19b18:	b.ne	19b24 <OnPrint@@Base+0x12bc>  // b.any
   19b1c:	stlxr	w6, x4, [x3]
   19b20:	cbnz	w6, 19b10 <OnPrint@@Base+0x12a8>
   19b24:	dmb	ish
   19b28:	cmp	x0, x5
   19b2c:	b.ne	19af0 <OnPrint@@Base+0x1288>  // b.any
   19b30:	ret
   19b34:	mov	x0, #0x0                   	// #0
   19b38:	b	19b30 <OnPrint@@Base+0x12c8>
   19b3c:	stp	x19, x20, [sp, #-48]!
   19b40:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   19b44:	mov	x20, x0
   19b48:	stp	x21, x22, [sp, #16]
   19b4c:	mov	x1, x0
   19b50:	ldr	x21, [x19, #3528]
   19b54:	stp	x23, x30, [sp, #32]
   19b58:	mov	x0, x21
   19b5c:	bl	19ae8 <OnPrint@@Base+0x1280>
   19b60:	cbnz	x0, 19bb0 <OnPrint@@Base+0x1348>
   19b64:	mov	w1, #0x1                   	// #1
   19b68:	ldxrb	w0, [x21]
   19b6c:	stxrb	w2, w1, [x21]
   19b70:	cbnz	w2, 19b68 <OnPrint@@Base+0x1300>
   19b74:	dmb	ish
   19b78:	tst	w0, #0xff
   19b7c:	b.eq	19b88 <OnPrint@@Base+0x1320>  // b.none
   19b80:	mov	x0, x21
   19b84:	bl	b08c <__sanitizer_get_allocated_size@@Base+0xb8c>
   19b88:	ldr	x19, [x19, #3528]
   19b8c:	adrp	x22, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19b90:	add	x22, x22, #0x441
   19b94:	mov	x23, #0x10000               	// #65536
   19b98:	mov	x1, x20
   19b9c:	mov	x0, x19
   19ba0:	bl	19ae8 <OnPrint@@Base+0x1280>
   19ba4:	cbz	x0, 19bc0 <OnPrint@@Base+0x1358>
   19ba8:	dmb	ish
   19bac:	strb	wzr, [x19]
   19bb0:	ldp	x21, x22, [sp, #16]
   19bb4:	ldp	x23, x30, [sp, #32]
   19bb8:	ldp	x19, x20, [sp], #48
   19bbc:	ret
   19bc0:	cmp	x20, #0x10, lsl #12
   19bc4:	str	xzr, [x19, #8]
   19bc8:	csel	x21, x20, x23, cs  // cs = hs, nlast
   19bcc:	mov	x1, x22
   19bd0:	mov	x0, x21
   19bd4:	mov	w2, #0x0                   	// #0
   19bd8:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   19bdc:	dmb	ish
   19be0:	add	x21, x21, x0
   19be4:	str	x21, [x19, #16]
   19be8:	dmb	ish
   19bec:	str	x0, [x19, #8]
   19bf0:	b	19b98 <OnPrint@@Base+0x1330>
   19bf4:	cmp	x1, #0x1
   19bf8:	b.ls	19d60 <OnPrint@@Base+0x14f8>  // b.plast
   19bfc:	stp	x19, x20, [sp, #-80]!
   19c00:	mov	x19, x0
   19c04:	mov	x20, x1
   19c08:	stp	x23, x24, [sp, #32]
   19c0c:	mov	x24, x2
   19c10:	mov	x23, #0x1                   	// #1
   19c14:	stp	x21, x22, [sp, #16]
   19c18:	stp	x25, x26, [sp, #48]
   19c1c:	stp	x27, x30, [sp, #64]
   19c20:	mov	x21, x23
   19c24:	mov	x22, x21
   19c28:	sub	x21, x21, #0x1
   19c2c:	lsr	x21, x21, #1
   19c30:	lsl	x27, x22, #4
   19c34:	add	x22, x19, x22, lsl #4
   19c38:	add	x25, x19, x21, lsl #4
   19c3c:	mov	x1, x22
   19c40:	mov	x0, x25
   19c44:	lsl	x26, x21, #4
   19c48:	blr	x24
   19c4c:	tst	w0, #0xff
   19c50:	b.eq	19c70 <OnPrint@@Base+0x1408>  // b.none
   19c54:	ldp	x0, x1, [x25]
   19c58:	ldr	w3, [x19, x27]
   19c5c:	ldr	x2, [x22, #8]
   19c60:	stp	x0, x1, [x22]
   19c64:	str	w3, [x19, x26]
   19c68:	str	x2, [x25, #8]
   19c6c:	cbnz	x21, 19c24 <OnPrint@@Base+0x13bc>
   19c70:	add	x0, x23, #0x1
   19c74:	cmp	x20, x0
   19c78:	b.ne	19d40 <OnPrint@@Base+0x14d8>  // b.any
   19c7c:	add	x20, x19, x20, lsl #4
   19c80:	ldp	x2, x3, [x20, #-16]
   19c84:	mov	x21, #0x0                   	// #0
   19c88:	ldr	w1, [x19]
   19c8c:	ldr	x0, [x19, #8]
   19c90:	stp	x2, x3, [x19]
   19c94:	stur	w1, [x20, #-16]
   19c98:	stur	x0, [x20, #-8]
   19c9c:	lsl	x25, x21, #1
   19ca0:	add	x26, x21, #0x1
   19ca4:	add	x22, x25, #0x1
   19ca8:	add	x25, x25, #0x2
   19cac:	cmp	x22, x23
   19cb0:	b.cs	19d50 <OnPrint@@Base+0x14e8>  // b.hs, b.nlast
   19cb4:	add	x1, x19, x22, lsl #4
   19cb8:	add	x0, x19, x21, lsl #4
   19cbc:	blr	x24
   19cc0:	tst	w0, #0xff
   19cc4:	b.eq	19d50 <OnPrint@@Base+0x14e8>  // b.none
   19cc8:	cmp	x25, x23
   19ccc:	b.cs	19ce4 <OnPrint@@Base+0x147c>  // b.hs, b.nlast
   19cd0:	add	x0, x19, x22, lsl #4
   19cd4:	add	x1, x19, x26, lsl #5
   19cd8:	blr	x24
   19cdc:	tst	w0, #0xff
   19ce0:	csel	x22, x22, x25, eq  // eq = none
   19ce4:	cmp	x22, x21
   19ce8:	b.eq	19d1c <OnPrint@@Base+0x14b4>  // b.none
   19cec:	lsl	x2, x21, #4
   19cf0:	add	x1, x19, x22, lsl #4
   19cf4:	add	x21, x19, x21, lsl #4
   19cf8:	lsl	x0, x22, #4
   19cfc:	cmp	x22, x23
   19d00:	ldr	w5, [x19, x2]
   19d04:	ldp	x2, x3, [x1]
   19d08:	ldr	x4, [x21, #8]
   19d0c:	stp	x2, x3, [x21]
   19d10:	str	w5, [x19, x0]
   19d14:	str	x4, [x1, #8]
   19d18:	b.cc	19d48 <OnPrint@@Base+0x14e0>  // b.lo, b.ul, b.last
   19d1c:	sub	x20, x20, #0x10
   19d20:	subs	x23, x23, #0x1
   19d24:	b.ne	19c80 <OnPrint@@Base+0x1418>  // b.any
   19d28:	ldp	x21, x22, [sp, #16]
   19d2c:	ldp	x23, x24, [sp, #32]
   19d30:	ldp	x25, x26, [sp, #48]
   19d34:	ldp	x27, x30, [sp, #64]
   19d38:	ldp	x19, x20, [sp], #80
   19d3c:	ret
   19d40:	mov	x23, x0
   19d44:	b	19c20 <OnPrint@@Base+0x13b8>
   19d48:	mov	x21, x22
   19d4c:	b	19c9c <OnPrint@@Base+0x1434>
   19d50:	cmp	x25, x23
   19d54:	b.cs	19d1c <OnPrint@@Base+0x14b4>  // b.hs, b.nlast
   19d58:	mov	x22, x21
   19d5c:	b	19cd0 <OnPrint@@Base+0x1468>
   19d60:	ret
   19d64:	and	w3, w3, #0xfff00000
   19d68:	cbz	x0, 19dbc <OnPrint@@Base+0x1554>
   19d6c:	ldr	w4, [x0, #12]
   19d70:	and	w4, w4, #0xfff00000
   19d74:	cmp	w4, w3
   19d78:	b.ne	19db4 <OnPrint@@Base+0x154c>  // b.any
   19d7c:	ldr	x4, [x0, #16]
   19d80:	cmp	x2, x4
   19d84:	b.ne	19db4 <OnPrint@@Base+0x154c>  // b.any
   19d88:	ldr	w5, [x0, #16]
   19d8c:	add	x6, x0, #0x18
   19d90:	mov	x4, #0x0                   	// #0
   19d94:	cmp	x5, x4
   19d98:	b.ls	19dbc <OnPrint@@Base+0x1554>  // b.plast
   19d9c:	ldr	x8, [x6, x4, lsl #3]
   19da0:	ldr	x7, [x1, x4, lsl #3]
   19da4:	cmp	x8, x7
   19da8:	b.ne	19db4 <OnPrint@@Base+0x154c>  // b.any
   19dac:	add	x4, x4, #0x1
   19db0:	b	19d94 <OnPrint@@Base+0x152c>
   19db4:	ldr	x0, [x0]
   19db8:	b	19d68 <OnPrint@@Base+0x1500>
   19dbc:	ret
   19dc0:	stp	x19, x20, [sp, #-32]!
   19dc4:	mov	x19, x0
   19dc8:	mov	w20, #0x0                   	// #0
   19dcc:	str	x30, [sp, #16]
   19dd0:	ldr	x0, [x19]
   19dd4:	tbnz	w0, #0, 19dfc <OnPrint@@Base+0x1594>
   19dd8:	orr	x2, x0, #0x1
   19ddc:	ldxr	x1, [x19]
   19de0:	cmp	x1, x0
   19de4:	b.ne	19df0 <OnPrint@@Base+0x1588>  // b.any
   19de8:	stlxr	w3, x2, [x19]
   19dec:	cbnz	w3, 19ddc <OnPrint@@Base+0x1574>
   19df0:	dmb	ish
   19df4:	cmp	x0, x1
   19df8:	b.eq	19e14 <OnPrint@@Base+0x15ac>  // b.none
   19dfc:	cmp	w20, #0x9
   19e00:	b.gt	19e0c <OnPrint@@Base+0x15a4>
   19e04:	add	w20, w20, #0x1
   19e08:	b	19dd0 <OnPrint@@Base+0x1568>
   19e0c:	bl	1507c <__sanitizer_set_report_fd@@Base+0x25c8>
   19e10:	b	19e04 <OnPrint@@Base+0x159c>
   19e14:	ldr	x30, [sp, #16]
   19e18:	ldp	x19, x20, [sp], #32
   19e1c:	ret
   19e20:	stp	x19, x20, [sp, #-128]!
   19e24:	stp	x21, x22, [sp, #16]
   19e28:	mov	x21, x0
   19e2c:	mov	x22, x3
   19e30:	stp	x23, x24, [sp, #32]
   19e34:	mov	w23, w2
   19e38:	stp	x25, x26, [sp, #48]
   19e3c:	stp	x27, x28, [sp, #64]
   19e40:	mov	x28, x1
   19e44:	mov	x27, x2
   19e48:	str	x30, [sp, #80]
   19e4c:	cbz	x3, 19e54 <OnPrint@@Base+0x15ec>
   19e50:	strb	wzr, [x3]
   19e54:	cbz	w23, 19ea8 <OnPrint@@Base+0x1640>
   19e58:	cbz	x28, 19ea8 <OnPrint@@Base+0x1640>
   19e5c:	mov	w20, #0xb28c                	// #45708
   19e60:	mov	w1, #0xe995                	// #59797
   19e64:	movk	w20, #0x9747, lsl #16
   19e68:	mov	w0, w23
   19e6c:	eor	w20, w20, w23, lsl #3
   19e70:	mov	x2, #0x0                   	// #0
   19e74:	movk	w1, #0x5bd1, lsl #16
   19e78:	str	x0, [sp, #104]
   19e7c:	ldr	x0, [sp, #104]
   19e80:	cmp	x0, x2
   19e84:	b.ls	19ec8 <OnPrint@@Base+0x1660>  // b.plast
   19e88:	ldr	x0, [x28, x2, lsl #3]
   19e8c:	mul	w20, w20, w1
   19e90:	add	x2, x2, #0x1
   19e94:	mul	w0, w1, w0
   19e98:	eor	w0, w0, w0, lsr #24
   19e9c:	mul	w0, w0, w1
   19ea0:	eor	w20, w0, w20
   19ea4:	b	19e7c <OnPrint@@Base+0x1614>
   19ea8:	mov	x0, #0x0                   	// #0
   19eac:	ldp	x21, x22, [sp, #16]
   19eb0:	ldp	x23, x24, [sp, #32]
   19eb4:	ldp	x25, x26, [sp, #48]
   19eb8:	ldp	x27, x28, [sp, #64]
   19ebc:	ldr	x30, [sp, #80]
   19ec0:	ldp	x19, x20, [sp], #128
   19ec4:	ret
   19ec8:	eor	w20, w20, w20, lsr #13
   19ecc:	mul	w20, w20, w1
   19ed0:	eor	w20, w20, w20, lsr #15
   19ed4:	and	x26, x20, #0xfffff
   19ed8:	lsl	x24, x26, #3
   19edc:	add	x25, x21, x26, lsl #3
   19ee0:	ldr	x19, [x21, x24]
   19ee4:	and	x19, x19, #0xfffffffffffffffe
   19ee8:	bfxil	x27, x23, #0, #32
   19eec:	mov	w3, w20
   19ef0:	mov	x1, x28
   19ef4:	mov	x2, x27
   19ef8:	mov	x0, x19
   19efc:	bl	19d64 <OnPrint@@Base+0x14fc>
   19f00:	cbnz	x0, 19eac <OnPrint@@Base+0x1644>
   19f04:	mov	x0, x25
   19f08:	bl	19dc0 <OnPrint@@Base+0x1558>
   19f0c:	mov	x25, x0
   19f10:	cmp	x19, x0
   19f14:	b.eq	19f38 <OnPrint@@Base+0x16d0>  // b.none
   19f18:	mov	w3, w20
   19f1c:	mov	x1, x28
   19f20:	mov	x2, x27
   19f24:	bl	19d64 <OnPrint@@Base+0x14fc>
   19f28:	cbz	x0, 19f38 <OnPrint@@Base+0x16d0>
   19f2c:	dmb	ish
   19f30:	str	x25, [x21, x24]
   19f34:	b	19eac <OnPrint@@Base+0x1644>
   19f38:	lsr	x26, x26, #12
   19f3c:	add	x0, x26, #0x200, lsl #12
   19f40:	add	x0, x21, x0, lsl #2
   19f44:	ldxr	w3, [x0]
   19f48:	add	w1, w3, #0x1
   19f4c:	stlxr	w2, w1, [x0]
   19f50:	cbnz	w2, 19f44 <OnPrint@@Base+0x16dc>
   19f54:	add	x2, x21, #0x800, lsl #12
   19f58:	dmb	ish
   19f5c:	add	w3, w3, #0x1
   19f60:	ldr	x0, [x2, #1024]
   19f64:	add	x0, x0, #0x1
   19f68:	str	x0, [x2, #1024]
   19f6c:	mov	w0, #0x7fffff              	// #8388607
   19f70:	cmp	w3, w0
   19f74:	b.ls	19f94 <OnPrint@@Base+0x172c>  // b.plast
   19f78:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19f7c:	add	x2, x2, #0x54b
   19f80:	mov	x4, #0x800000              	// #8388608
   19f84:	mov	w1, #0x77                  	// #119
   19f88:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19f8c:	add	x0, x0, #0x4ef
   19f90:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   19f94:	orr	w26, w3, w26, lsl #23
   19f98:	cbnz	w26, 19fb4 <OnPrint@@Base+0x174c>
   19f9c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   19fa0:	mov	x4, #0x0                   	// #0
   19fa4:	add	x2, x2, #0x55f
   19fa8:	mov	x3, #0x0                   	// #0
   19fac:	mov	w1, #0x79                  	// #121
   19fb0:	b	19f88 <OnPrint@@Base+0x1720>
   19fb4:	sub	w1, w23, #0x1
   19fb8:	and	w20, w20, #0xfff00000
   19fbc:	add	x1, x1, #0x4
   19fc0:	lsr	x27, x27, #32
   19fc4:	lsl	x1, x1, #3
   19fc8:	stp	x1, x2, [sp, #112]
   19fcc:	mov	x0, x1
   19fd0:	bl	19b3c <OnPrint@@Base+0x12d4>
   19fd4:	mov	x19, x0
   19fd8:	ldp	x1, x2, [sp, #112]
   19fdc:	ldr	x0, [x2, #1032]
   19fe0:	add	x1, x0, x1
   19fe4:	str	x1, [x2, #1032]
   19fe8:	ldr	x0, [sp, #104]
   19fec:	str	w26, [x19, #8]
   19ff0:	str	w20, [x19, #12]
   19ff4:	mov	x1, x28
   19ff8:	stp	w23, w27, [x19, #16]
   19ffc:	lsl	x2, x0, #3
   1a000:	add	x0, x19, #0x18
   1a004:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1a008:	str	x25, [x19]
   1a00c:	dmb	ish
   1a010:	str	x19, [x21, x24]
   1a014:	cbz	x22, 1a020 <OnPrint@@Base+0x17b8>
   1a018:	mov	w0, #0x1                   	// #1
   1a01c:	strb	w0, [x22]
   1a020:	mov	x0, x19
   1a024:	b	19eac <OnPrint@@Base+0x1644>
   1a028:	stp	x19, x20, [sp, #-48]!
   1a02c:	mov	x4, x1
   1a030:	stp	x21, x22, [sp, #16]
   1a034:	str	x30, [sp, #32]
   1a038:	cbnz	x1, 1a058 <OnPrint@@Base+0x17f0>
   1a03c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1a040:	add	x2, x2, #0x329
   1a044:	mov	x3, #0x0                   	// #0
   1a048:	mov	w1, #0x1fc                 	// #508
   1a04c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1a050:	add	x0, x0, #0x5c5
   1a054:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1a058:	ldr	x3, [x0, #16]
   1a05c:	mov	x20, x0
   1a060:	cmp	x1, x3
   1a064:	b.cs	1a078 <OnPrint@@Base+0x1810>  // b.hs, b.nlast
   1a068:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1a06c:	mov	w1, #0x1fd                 	// #509
   1a070:	add	x2, x2, #0x342
   1a074:	b	1a04c <OnPrint@@Base+0x17e4>
   1a078:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a07c:	lsl	x19, x1, #4
   1a080:	mov	x21, x0
   1a084:	ldr	x22, [x0, #4000]
   1a088:	ldr	x1, [x22]
   1a08c:	cbnz	x1, 1a098 <OnPrint@@Base+0x1830>
   1a090:	bl	1571c <__sanitizer_set_report_fd@@Base+0x2c68>
   1a094:	str	x0, [x22]
   1a098:	ldr	x0, [x21, #4000]
   1a09c:	ldr	x0, [x0]
   1a0a0:	sub	x4, x0, #0x1
   1a0a4:	tst	x4, x0
   1a0a8:	b.eq	1a0bc <OnPrint@@Base+0x1854>  // b.none
   1a0ac:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1a0b0:	add	x0, x0, #0x300
   1a0b4:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   1a0b8:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1a0bc:	add	x19, x19, x4
   1a0c0:	neg	x0, x0
   1a0c4:	and	x19, x19, x0
   1a0c8:	mov	w2, #0x0                   	// #0
   1a0cc:	mov	x0, x19
   1a0d0:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1a0d4:	add	x1, x1, #0x360
   1a0d8:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1a0dc:	ldr	x1, [x20]
   1a0e0:	mov	x21, x0
   1a0e4:	ldr	x2, [x20, #16]
   1a0e8:	lsl	x2, x2, #4
   1a0ec:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1a0f0:	ldp	x0, x1, [x20]
   1a0f4:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1a0f8:	ldr	x30, [sp, #32]
   1a0fc:	stp	x21, x19, [x20]
   1a100:	ldp	x21, x22, [sp, #16]
   1a104:	ldp	x19, x20, [sp], #48
   1a108:	ret
   1a10c:	add	x0, x0, #0x4
   1a110:	ret
   1a114:	str	x30, [sp, #-16]!
   1a118:	mov	x0, x30
   1a11c:	ldr	x30, [sp], #16
   1a120:	ret
   1a124:	stp	x19, x20, [sp, #-32]!
   1a128:	cmp	x3, #0x0
   1a12c:	stp	x21, x30, [sp, #16]
   1a130:	mov	x21, x3
   1a134:	cinc	w3, w2, ne  // ne = any
   1a138:	str	w3, [x0, #8]
   1a13c:	cmp	w3, #0x100
   1a140:	b.ls	1a164 <OnPrint@@Base+0x18fc>  // b.plast
   1a144:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a148:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a14c:	mov	w3, w3
   1a150:	add	x2, x2, #0x56f
   1a154:	add	x0, x0, #0x58e
   1a158:	mov	x4, #0x100                 	// #256
   1a15c:	mov	w1, #0x22                  	// #34
   1a160:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1a164:	mov	x20, x0
   1a168:	mov	x19, x2
   1a16c:	add	x0, x0, #0x10
   1a170:	lsl	x2, x2, #3
   1a174:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1a178:	cbz	x21, 1a184 <OnPrint@@Base+0x191c>
   1a17c:	add	x19, x19, #0x2
   1a180:	str	x21, [x20, x19, lsl #3]
   1a184:	ldp	x21, x30, [sp, #16]
   1a188:	str	xzr, [x20, #2064]
   1a18c:	ldp	x19, x20, [sp], #32
   1a190:	ret
   1a194:	stp	x19, x20, [sp, #-80]!
   1a198:	mov	x20, x0
   1a19c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a1a0:	stp	x25, x26, [sp, #48]
   1a1a4:	mov	x25, x1
   1a1a8:	mov	x19, x2
   1a1ac:	ldr	x26, [x0, #4000]
   1a1b0:	stp	x21, x22, [sp, #16]
   1a1b4:	mov	x21, x3
   1a1b8:	stp	x23, x24, [sp, #32]
   1a1bc:	mov	x22, x0
   1a1c0:	mov	x24, x4
   1a1c4:	ldr	x1, [x26]
   1a1c8:	str	x30, [sp, #64]
   1a1cc:	mov	w23, w5
   1a1d0:	cbnz	x1, 1a1dc <OnPrint@@Base+0x1974>
   1a1d4:	bl	1571c <__sanitizer_set_report_fd@@Base+0x2c68>
   1a1d8:	str	x0, [x26]
   1a1dc:	ldr	x0, [x22, #4000]
   1a1e0:	mov	w3, w23
   1a1e4:	cmp	w23, #0x1
   1a1e8:	ldr	x4, [x0]
   1a1ec:	b.hi	1a20c <OnPrint@@Base+0x19a4>  // b.pmore
   1a1f0:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a1f4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a1f8:	add	x2, x2, #0x5d0
   1a1fc:	add	x0, x0, #0x58e
   1a200:	mov	x4, #0x2                   	// #2
   1a204:	mov	w1, #0x47                  	// #71
   1a208:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1a20c:	mov	w0, #0x1                   	// #1
   1a210:	str	w0, [x20, #8]
   1a214:	str	x25, [x20, #16]
   1a218:	cmp	x21, #0xfff
   1a21c:	b.ls	1a280 <OnPrint@@Base+0x1a18>  // b.plast
   1a220:	mov	x2, x19
   1a224:	sub	x21, x21, #0x10
   1a228:	mov	x3, x2
   1a22c:	cmp	x2, x24
   1a230:	b.ls	1a280 <OnPrint@@Base+0x1a18>  // b.plast
   1a234:	cmp	x2, x21
   1a238:	b.cs	1a280 <OnPrint@@Base+0x1a18>  // b.hs, b.nlast
   1a23c:	tst	x2, #0x7
   1a240:	b.ne	1a280 <OnPrint@@Base+0x1a18>  // b.any
   1a244:	ldr	w0, [x20, #8]
   1a248:	cmp	w0, w23
   1a24c:	b.cs	1a280 <OnPrint@@Base+0x1a18>  // b.hs, b.nlast
   1a250:	ldr	x1, [x2, #8]
   1a254:	cmp	x1, x4
   1a258:	b.cc	1a280 <OnPrint@@Base+0x1a18>  // b.lo, b.ul, b.last
   1a25c:	cmp	x25, x1
   1a260:	b.eq	1a274 <OnPrint@@Base+0x1a0c>  // b.none
   1a264:	add	w5, w0, #0x1
   1a268:	add	x0, x20, w0, uxtw #3
   1a26c:	str	w5, [x20, #8]
   1a270:	str	x1, [x0, #16]
   1a274:	mov	x24, x3
   1a278:	ldr	x2, [x2]
   1a27c:	b	1a228 <OnPrint@@Base+0x19c0>
   1a280:	ldp	x21, x22, [sp, #16]
   1a284:	ldp	x23, x24, [sp, #32]
   1a288:	ldp	x25, x26, [sp, #48]
   1a28c:	ldr	x30, [sp, #64]
   1a290:	ldp	x19, x20, [sp], #80
   1a294:	ret
   1a298:	mov	x3, x1
   1a29c:	ldr	w1, [x0, #8]
   1a2a0:	cmp	x3, w1, uxtw
   1a2a4:	b.cc	1a2c8 <OnPrint@@Base+0x1a60>  // b.lo, b.ul, b.last
   1a2a8:	str	x30, [sp, #-16]!
   1a2ac:	mov	w4, w1
   1a2b0:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a2b4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a2b8:	add	x2, x2, #0x5e7
   1a2bc:	add	x0, x0, #0x58e
   1a2c0:	mov	w1, #0x78                  	// #120
   1a2c4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1a2c8:	sub	w1, w1, w3
   1a2cc:	add	x3, x0, x3, lsl #3
   1a2d0:	mov	x2, #0x1                   	// #1
   1a2d4:	str	w1, [x0, #8]
   1a2d8:	add	x4, x2, #0x1
   1a2dc:	sub	x2, x2, #0x1
   1a2e0:	cmp	x2, x1
   1a2e4:	b.cs	1a2f8 <OnPrint@@Base+0x1a90>  // b.hs, b.nlast
   1a2e8:	ldr	x2, [x3, x4, lsl #3]
   1a2ec:	str	x2, [x0, x4, lsl #3]
   1a2f0:	mov	x2, x4
   1a2f4:	b	1a2d8 <OnPrint@@Base+0x1a70>
   1a2f8:	ret
   1a2fc:	mov	x3, x0
   1a300:	mov	x2, #0x1                   	// #1
   1a304:	mov	x0, #0x0                   	// #0
   1a308:	ldr	w8, [x3, #8]
   1a30c:	cmp	x8, x2
   1a310:	b.ls	1a348 <OnPrint@@Base+0x1ae0>  // b.plast
   1a314:	ldr	x6, [x3]
   1a318:	ldr	x5, [x6, x2, lsl #3]
   1a31c:	ldr	x6, [x6, x0, lsl #3]
   1a320:	sub	x7, x1, x5
   1a324:	subs	x4, x5, x1
   1a328:	csel	x4, x4, x7, cs  // cs = hs, nlast
   1a32c:	subs	x5, x6, x1
   1a330:	sub	x7, x1, x6
   1a334:	csel	x5, x5, x7, cs  // cs = hs, nlast
   1a338:	cmp	x5, x4
   1a33c:	csel	x0, x0, x2, ls  // ls = plast
   1a340:	add	x2, x2, #0x1
   1a344:	b	1a30c <OnPrint@@Base+0x1aa4>
   1a348:	ret
   1a34c:	mov	w8, w1
   1a350:	mov	x10, x3
   1a354:	cmp	w8, #0x0
   1a358:	mov	x3, x5
   1a35c:	csel	x5, x10, xzr, ne  // ne = any
   1a360:	str	x5, [x0, #2064]
   1a364:	mov	x1, x2
   1a368:	and	w7, w7, #0xff
   1a36c:	mov	x2, x4
   1a370:	mov	x4, x6
   1a374:	cbnz	w8, 1a380 <OnPrint@@Base+0x1b18>
   1a378:	str	wzr, [x0, #8]
   1a37c:	ret
   1a380:	cmp	w8, #0x1
   1a384:	b.ne	1a394 <OnPrint@@Base+0x1b2c>  // b.any
   1a388:	str	w8, [x0, #8]
   1a38c:	str	x1, [x0, #16]
   1a390:	b	1a37c <OnPrint@@Base+0x1b14>
   1a394:	cbnz	w7, 1a3ac <OnPrint@@Base+0x1b44>
   1a398:	cbz	x2, 1a3a4 <OnPrint@@Base+0x1b3c>
   1a39c:	mov	w3, w8
   1a3a0:	b	202ac <__sanitizer_set_death_callback@@Base+0x1234>
   1a3a4:	mov	w2, w8
   1a3a8:	b	20210 <__sanitizer_set_death_callback@@Base+0x1198>
   1a3ac:	mov	w5, w8
   1a3b0:	mov	x2, x10
   1a3b4:	b	1a194 <OnPrint@@Base+0x192c>

000000000001a3b8 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   1a3b8:	stp	x19, x20, [sp, #-64]!
   1a3bc:	mov	x19, x1
   1a3c0:	mov	x20, x2
   1a3c4:	stp	x21, x22, [sp, #16]
   1a3c8:	mov	x21, x0
   1a3cc:	mov	x22, x3
   1a3d0:	str	x30, [sp, #32]
   1a3d4:	str	xzr, [sp, #56]
   1a3d8:	bl	1d468 <__sanitizer_symbolize_global@@Base+0x2d24>
   1a3dc:	mov	x3, x22
   1a3e0:	add	x2, sp, #0x38
   1a3e4:	mov	x1, x21
   1a3e8:	bl	1d89c <__sanitizer_symbolize_global@@Base+0x3158>
   1a3ec:	tst	w0, #0xff
   1a3f0:	b.eq	1a420 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68>  // b.none
   1a3f4:	cmp	x19, #0x0
   1a3f8:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   1a3fc:	b.eq	1a418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60>  // b.none
   1a400:	ldr	x1, [sp, #56]
   1a404:	mov	x0, x19
   1a408:	add	x19, x19, x20
   1a40c:	mov	x2, x20
   1a410:	bl	1460c <__sanitizer_set_report_fd@@Base+0x1b58>
   1a414:	sturb	wzr, [x19, #-1]
   1a418:	mov	w0, #0x1                   	// #1
   1a41c:	b	1a424 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c>
   1a420:	mov	w0, #0x0                   	// #0
   1a424:	ldp	x21, x22, [sp, #16]
   1a428:	ldr	x30, [sp, #32]
   1a42c:	ldp	x19, x20, [sp], #64
   1a430:	ret
   1a434:	stp	x19, x20, [sp, #-192]!
   1a438:	mov	x19, x0
   1a43c:	ldr	x0, [x0]
   1a440:	stp	x21, x22, [sp, #16]
   1a444:	stp	x23, x24, [sp, #32]
   1a448:	stp	x25, x26, [sp, #48]
   1a44c:	stp	x27, x28, [sp, #64]
   1a450:	str	x30, [sp, #80]
   1a454:	cbz	x0, 1a460 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa8>
   1a458:	ldr	w0, [x19, #8]
   1a45c:	cbnz	w0, 1a488 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd0>
   1a460:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a464:	add	x0, x0, #0x5fc
   1a468:	bl	18af0 <OnPrint@@Base+0x288>
   1a46c:	ldp	x21, x22, [sp, #16]
   1a470:	ldp	x23, x24, [sp, #32]
   1a474:	ldp	x25, x26, [sp, #48]
   1a478:	ldp	x27, x28, [sp, #64]
   1a47c:	ldr	x30, [sp, #80]
   1a480:	ldp	x19, x20, [sp], #192
   1a484:	ret
   1a488:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1a48c:	add	x22, sp, #0x80
   1a490:	lsl	x1, x0, #1
   1a494:	mov	x0, x22
   1a498:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   1a49c:	add	x23, sp, #0xa0
   1a4a0:	mov	x24, #0x0                   	// #0
   1a4a4:	mov	x26, #0x0                   	// #0
   1a4a8:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1a4ac:	mov	x1, x0
   1a4b0:	mov	x0, x23
   1a4b4:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   1a4b8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a4bc:	str	x0, [sp, #104]
   1a4c0:	ldr	x1, [x0, #4040]
   1a4c4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a4c8:	add	x0, x0, #0x60f
   1a4cc:	str	x0, [sp, #112]
   1a4d0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1a4d4:	add	x0, x0, #0x65
   1a4d8:	ldr	w25, [x1, #184]
   1a4dc:	str	x0, [sp, #120]
   1a4e0:	ldr	w0, [x19, #8]
   1a4e4:	cmp	x0, x24
   1a4e8:	b.ls	1a5c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x208>  // b.plast
   1a4ec:	ldr	x0, [x19]
   1a4f0:	ldr	x20, [x0, x24, lsl #3]
   1a4f4:	cbz	x20, 1a5c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x208>
   1a4f8:	bl	1d468 <__sanitizer_symbolize_global@@Base+0x2d24>
   1a4fc:	sub	x1, x20, #0x4
   1a500:	bl	1d91c <__sanitizer_symbolize_global@@Base+0x31d8>
   1a504:	mov	x20, x0
   1a508:	cbnz	x0, 1a52c <__sanitizer_get_module_and_offset_for_pc@@Base+0x174>
   1a50c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a510:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a514:	add	x2, x2, #0x610
   1a518:	add	x0, x0, #0x622
   1a51c:	mov	x4, #0x0                   	// #0
   1a520:	mov	x3, #0x0                   	// #0
   1a524:	mov	w1, #0x22                  	// #34
   1a528:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1a52c:	mov	x21, x0
   1a530:	adrp	x28, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1a534:	ldr	x0, [sp, #104]
   1a538:	add	x28, x28, #0xb9e
   1a53c:	ldr	x27, [x0, #4040]
   1a540:	mov	x0, x22
   1a544:	bl	1a7f0 <__sanitizer_symbolize_global@@Base+0xac>
   1a548:	add	x26, x26, #0x1
   1a54c:	ldrb	w4, [x27, #181]
   1a550:	add	x3, x21, #0x8
   1a554:	ldr	x5, [x27, #24]
   1a558:	sub	w2, w26, #0x1
   1a55c:	ldr	x6, [sp, #112]
   1a560:	mov	x0, x22
   1a564:	ldr	x1, [x27, #192]
   1a568:	bl	1b4f8 <__sanitizer_symbolize_global@@Base+0xdb4>
   1a56c:	ldr	x1, [sp, #128]
   1a570:	mov	x0, x28
   1a574:	bl	18af0 <OnPrint@@Base+0x288>
   1a578:	cmp	w25, #0x0
   1a57c:	sub	w25, w25, #0x1
   1a580:	b.le	1a5a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f0>
   1a584:	ldr	x0, [sp, #184]
   1a588:	cbz	x0, 1a598 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e0>
   1a58c:	ldr	x1, [sp, #120]
   1a590:	mov	x0, x23
   1a594:	bl	18bf8 <OnPrint@@Base+0x390>
   1a598:	ldr	x1, [x21, #40]
   1a59c:	cbz	x1, 1a5a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f0>
   1a5a0:	mov	x0, x23
   1a5a4:	bl	18bf8 <OnPrint@@Base+0x390>
   1a5a8:	ldr	x21, [x21]
   1a5ac:	cbnz	x21, 1a540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x188>
   1a5b0:	mov	x0, x20
   1a5b4:	add	x24, x24, #0x1
   1a5b8:	bl	1cb80 <__sanitizer_symbolize_global@@Base+0x243c>
   1a5bc:	b	1a4e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x128>
   1a5c0:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a5c4:	add	x0, x0, #0x60e
   1a5c8:	bl	18af0 <OnPrint@@Base+0x288>
   1a5cc:	ldr	x0, [sp, #184]
   1a5d0:	cbz	x0, 1a5e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22c>
   1a5d4:	ldr	x1, [sp, #160]
   1a5d8:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a5dc:	add	x0, x0, #0x66c
   1a5e0:	bl	18af0 <OnPrint@@Base+0x288>
   1a5e4:	mov	x0, x23
   1a5e8:	bl	1a810 <__sanitizer_symbolize_global@@Base+0xcc>
   1a5ec:	mov	x0, x22
   1a5f0:	bl	1a810 <__sanitizer_symbolize_global@@Base+0xcc>
   1a5f4:	b	1a46c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb4>

000000000001a5f8 <__sanitizer_symbolize_pc@@Base>:
   1a5f8:	cbz	x3, 1a740 <__sanitizer_symbolize_pc@@Base+0x148>
   1a5fc:	stp	x19, x20, [sp, #-112]!
   1a600:	mov	x20, x0
   1a604:	mov	x19, x2
   1a608:	stp	x21, x22, [sp, #16]
   1a60c:	mov	x21, x3
   1a610:	sub	x22, x21, #0x1
   1a614:	stp	x23, x24, [sp, #32]
   1a618:	add	x24, x19, x22
   1a61c:	stp	x25, x26, [sp, #48]
   1a620:	mov	x25, x1
   1a624:	stp	x27, x30, [sp, #64]
   1a628:	bl	1d468 <__sanitizer_symbolize_global@@Base+0x2d24>
   1a62c:	sub	x1, x20, #0x4
   1a630:	bl	1d91c <__sanitizer_symbolize_global@@Base+0x31d8>
   1a634:	mov	x20, x0
   1a638:	cbnz	x0, 1a66c <__sanitizer_symbolize_pc@@Base+0x74>
   1a63c:	mov	x2, x21
   1a640:	mov	x0, x19
   1a644:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a648:	add	x1, x1, #0x67d
   1a64c:	bl	1460c <__sanitizer_set_report_fd@@Base+0x1b58>
   1a650:	strb	wzr, [x19, x22]
   1a654:	ldp	x21, x22, [sp, #16]
   1a658:	ldp	x23, x24, [sp, #32]
   1a65c:	ldp	x25, x26, [sp, #48]
   1a660:	ldp	x27, x30, [sp, #64]
   1a664:	ldp	x19, x20, [sp], #112
   1a668:	ret
   1a66c:	adrp	x23, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a670:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1a674:	add	x22, sp, #0x50
   1a678:	mov	x1, x0
   1a67c:	mov	x0, x22
   1a680:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   1a684:	ldr	x23, [x23, #4040]
   1a688:	adrp	x27, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a68c:	add	x27, x27, #0x60f
   1a690:	mov	w26, #0x0                   	// #0
   1a694:	cmp	x20, #0x0
   1a698:	ccmp	x19, x24, #0x2, ne  // ne = any
   1a69c:	b.cs	1a708 <__sanitizer_symbolize_pc@@Base+0x110>  // b.hs, b.nlast
   1a6a0:	mov	x0, x22
   1a6a4:	bl	1a7f0 <__sanitizer_symbolize_global@@Base+0xac>
   1a6a8:	ldrb	w4, [x23, #181]
   1a6ac:	mov	x0, x22
   1a6b0:	ldr	x5, [x23, #24]
   1a6b4:	mov	x6, x27
   1a6b8:	add	x3, x20, #0x8
   1a6bc:	mov	w2, w26
   1a6c0:	mov	x1, x25
   1a6c4:	bl	1b4f8 <__sanitizer_symbolize_global@@Base+0xdb4>
   1a6c8:	ldr	x0, [sp, #104]
   1a6cc:	cbz	x0, 1a6fc <__sanitizer_symbolize_pc@@Base+0x104>
   1a6d0:	ldr	x1, [sp, #80]
   1a6d4:	sub	x21, x24, x19
   1a6d8:	sub	x21, x21, #0x1
   1a6dc:	mov	x0, x19
   1a6e0:	mov	x2, x21
   1a6e4:	bl	1460c <__sanitizer_set_report_fd@@Base+0x1b58>
   1a6e8:	ldr	x2, [sp, #104]
   1a6ec:	cmp	x2, x21
   1a6f0:	csel	x2, x2, x21, ls  // ls = plast
   1a6f4:	add	x19, x19, x2
   1a6f8:	strb	wzr, [x19], #1
   1a6fc:	add	w26, w26, #0x1
   1a700:	ldr	x20, [x20]
   1a704:	b	1a694 <__sanitizer_symbolize_pc@@Base+0x9c>
   1a708:	cmp	x19, x24
   1a70c:	b.ls	1a730 <__sanitizer_symbolize_pc@@Base+0x138>  // b.plast
   1a710:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a714:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a718:	add	x2, x2, #0x68f
   1a71c:	add	x0, x0, #0x622
   1a720:	mov	x4, #0x0                   	// #0
   1a724:	mov	x3, #0x0                   	// #0
   1a728:	mov	w1, #0x84                  	// #132
   1a72c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1a730:	strb	wzr, [x19]
   1a734:	mov	x0, x22
   1a738:	bl	1a810 <__sanitizer_symbolize_global@@Base+0xcc>
   1a73c:	b	1a654 <__sanitizer_symbolize_pc@@Base+0x5c>
   1a740:	ret

000000000001a744 <__sanitizer_symbolize_global@@Base>:
   1a744:	cbz	x3, 1a7ec <__sanitizer_symbolize_global@@Base+0xa8>
   1a748:	stp	x19, x20, [sp, #-144]!
   1a74c:	mov	x20, x0
   1a750:	mov	x19, x2
   1a754:	stp	x21, x22, [sp, #16]
   1a758:	mov	x22, x1
   1a75c:	mov	x21, x3
   1a760:	stp	x23, x30, [sp, #32]
   1a764:	add	x23, sp, #0x50
   1a768:	mov	x0, x23
   1a76c:	strb	wzr, [x2]
   1a770:	bl	1cbac <__sanitizer_symbolize_global@@Base+0x2468>
   1a774:	bl	1d468 <__sanitizer_symbolize_global@@Base+0x2d24>
   1a778:	mov	x2, x23
   1a77c:	mov	x1, x20
   1a780:	bl	1d9e8 <__sanitizer_symbolize_global@@Base+0x32a4>
   1a784:	tst	w0, #0xff
   1a788:	b.eq	1a7dc <__sanitizer_symbolize_global@@Base+0x98>  // b.none
   1a78c:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1a790:	add	x20, sp, #0x30
   1a794:	mov	x1, x0
   1a798:	mov	x0, x20
   1a79c:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   1a7a0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a7a4:	mov	x2, x23
   1a7a8:	mov	x1, x22
   1a7ac:	ldr	x0, [x0, #4040]
   1a7b0:	ldr	x3, [x0, #24]
   1a7b4:	mov	x0, x20
   1a7b8:	bl	1b204 <__sanitizer_symbolize_global@@Base+0xac0>
   1a7bc:	ldr	x1, [sp, #48]
   1a7c0:	mov	x0, x19
   1a7c4:	add	x19, x19, x21
   1a7c8:	mov	x2, x21
   1a7cc:	bl	1460c <__sanitizer_set_report_fd@@Base+0x1b58>
   1a7d0:	sturb	wzr, [x19, #-1]
   1a7d4:	mov	x0, x20
   1a7d8:	bl	1a810 <__sanitizer_symbolize_global@@Base+0xcc>
   1a7dc:	ldp	x21, x22, [sp, #16]
   1a7e0:	ldp	x23, x30, [sp, #32]
   1a7e4:	ldp	x19, x20, [sp], #144
   1a7e8:	ret
   1a7ec:	ret
   1a7f0:	stp	x19, x30, [sp, #-16]!
   1a7f4:	mov	x19, x0
   1a7f8:	mov	x1, #0x0                   	// #0
   1a7fc:	bl	12d60 <__sanitizer_set_report_fd@@Base+0x2ac>
   1a800:	strb	wzr, [x0]
   1a804:	str	xzr, [x19, #24]
   1a808:	ldp	x19, x30, [sp], #16
   1a80c:	ret
   1a810:	ldr	x1, [x0, #8]
   1a814:	ldr	x0, [x0]
   1a818:	b	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1a81c:	stp	x19, x20, [sp, #-32]!
   1a820:	mov	x19, x0
   1a824:	ldr	x20, [x0]
   1a828:	str	x30, [sp, #16]
   1a82c:	mov	x0, x20
   1a830:	bl	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
   1a834:	mov	x0, x19
   1a838:	bl	126d0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x180c>
   1a83c:	ldr	w0, [x19, #8]
   1a840:	bl	177ac <__sanitizer_set_report_fd@@Base+0x4cf8>
   1a844:	dmb	ish
   1a848:	strb	wzr, [x20]
   1a84c:	ldr	x30, [sp, #16]
   1a850:	ldp	x19, x20, [sp], #32
   1a854:	ret
   1a858:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a85c:	stp	x19, x30, [sp, #-16]!
   1a860:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a864:	ldr	x0, [x0, #4040]
   1a868:	add	x1, x1, #0x6ad
   1a86c:	ldr	x19, [x0, #112]
   1a870:	mov	x0, x19
   1a874:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1a878:	cbz	w0, 1a8a0 <__sanitizer_symbolize_global@@Base+0x15c>
   1a87c:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1a880:	mov	x0, x19
   1a884:	add	x1, x1, #0xdd8
   1a888:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1a88c:	cbnz	w0, 1a8ac <__sanitizer_symbolize_global@@Base+0x168>
   1a890:	ldp	x19, x30, [sp], #16
   1a894:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a898:	ldr	x0, [x0, #3816]
   1a89c:	b	1a81c <__sanitizer_symbolize_global@@Base+0xd8>
   1a8a0:	mov	w0, #0x1                   	// #1
   1a8a4:	ldp	x19, x30, [sp], #16
   1a8a8:	ret
   1a8ac:	mov	w0, #0x0                   	// #0
   1a8b0:	b	1a8a4 <__sanitizer_symbolize_global@@Base+0x160>
   1a8b4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a8b8:	stp	x19, x30, [sp, #-16]!
   1a8bc:	ldr	x0, [x0, #4008]
   1a8c0:	ldr	x19, [x0]
   1a8c4:	mov	x0, x19
   1a8c8:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1a8cc:	mov	x1, x0
   1a8d0:	mov	x0, x19
   1a8d4:	bl	12694 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17d0>
   1a8d8:	ldp	x19, x30, [sp], #16
   1a8dc:	mov	x1, #0xe                   	// #14
   1a8e0:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a8e4:	add	x0, x0, #0x8a4
   1a8e8:	b	12694 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17d0>
   1a8ec:	stp	x19, x20, [sp, #-32]!
   1a8f0:	adrp	x19, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1a8f4:	add	x19, x19, #0xb8
   1a8f8:	str	x30, [sp, #16]
   1a8fc:	bl	175e4 <__sanitizer_set_report_fd@@Base+0x4b30>
   1a900:	mov	x20, x0
   1a904:	ldxr	x0, [x19]
   1a908:	cbnz	x0, 1a914 <__sanitizer_symbolize_global@@Base+0x1d0>
   1a90c:	stlxr	w1, x20, [x19]
   1a910:	cbnz	w1, 1a904 <__sanitizer_symbolize_global@@Base+0x1c0>
   1a914:	dmb	ish
   1a918:	cbnz	x0, 1a92c <__sanitizer_symbolize_global@@Base+0x1e8>
   1a91c:	add	x0, x19, #0x8
   1a920:	ldr	x30, [sp, #16]
   1a924:	ldp	x19, x20, [sp], #32
   1a928:	b	b0e8 <__sanitizer_get_allocated_size@@Base+0xbe8>
   1a92c:	cmp	x20, x0
   1a930:	b.ne	1a978 <__sanitizer_symbolize_global@@Base+0x234>  // b.any
   1a934:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a938:	ldr	x0, [x0, #4008]
   1a93c:	ldr	x19, [x0]
   1a940:	mov	x0, x19
   1a944:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1a948:	mov	x1, x0
   1a94c:	mov	x0, x19
   1a950:	bl	12694 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17d0>
   1a954:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1a958:	add	x0, x0, #0x8a4
   1a95c:	add	x0, x0, #0xf
   1a960:	mov	x1, #0x2b                  	// #43
   1a964:	bl	12694 <__sanitizer_cov_trace_pc_guard_init@@Base+0x17d0>
   1a968:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a96c:	ldr	x0, [x0, #4040]
   1a970:	ldr	w0, [x0, #216]
   1a974:	bl	15088 <__sanitizer_set_report_fd@@Base+0x25d4>
   1a978:	bl	1507c <__sanitizer_set_report_fd@@Base+0x25c8>
   1a97c:	b	1a904 <__sanitizer_symbolize_global@@Base+0x1c0>
   1a980:	dmb	ish
   1a984:	adrp	x0, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1a988:	add	x1, x0, #0xb8
   1a98c:	strb	wzr, [x1, #8]
   1a990:	str	xzr, [x0, #184]
   1a994:	ret
   1a998:	adrp	x0, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1a99c:	add	x0, x0, #0xb8
   1a9a0:	ldrb	w3, [x0, #8]
   1a9a4:	and	x3, x3, #0xff
   1a9a8:	cmp	x3, #0x1
   1a9ac:	b.eq	1a9d0 <__sanitizer_symbolize_global@@Base+0x28c>  // b.none
   1a9b0:	str	x30, [sp, #-16]!
   1a9b4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1a9b8:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1a9bc:	add	x2, x2, #0xa42
   1a9c0:	add	x0, x0, #0xa7a
   1a9c4:	mov	x4, #0x1                   	// #1
   1a9c8:	mov	w1, #0x2a                  	// #42
   1a9cc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1a9d0:	ret
   1a9d4:	stp	x19, x20, [sp, #-80]!
   1a9d8:	adrp	x20, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1a9dc:	ldr	x20, [x20, #4040]
   1a9e0:	stp	x23, x30, [sp, #32]
   1a9e4:	mov	x23, x0
   1a9e8:	stp	x21, x22, [sp, #16]
   1a9ec:	ldrb	w0, [x20, #60]
   1a9f0:	cbz	w0, 1aa5c <__sanitizer_symbolize_global@@Base+0x318>
   1a9f4:	add	x19, sp, #0x30
   1a9f8:	mov	x21, x2
   1a9fc:	mov	x22, x1
   1aa00:	mov	x0, x19
   1aa04:	mov	x1, #0x400                 	// #1024
   1aa08:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   1aa0c:	mov	x2, x23
   1aa10:	mov	x0, x19
   1aa14:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1aa18:	add	x1, x1, #0x863
   1aa1c:	bl	18bf8 <OnPrint@@Base+0x390>
   1aa20:	ldrb	w4, [x20, #181]
   1aa24:	mov	x3, x22
   1aa28:	ldr	x5, [x20, #24]
   1aa2c:	mov	x0, x19
   1aa30:	mov	w2, #0x0                   	// #0
   1aa34:	adrp	x6, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1aa38:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1aa3c:	add	x6, x6, #0x60f
   1aa40:	add	x1, x1, #0x6b4
   1aa44:	bl	1b4f8 <__sanitizer_symbolize_global@@Base+0xdb4>
   1aa48:	ldr	x0, [sp, #48]
   1aa4c:	mov	x1, x21
   1aa50:	bl	10780 <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
   1aa54:	ldp	x0, x1, [sp, #48]
   1aa58:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1aa5c:	ldp	x21, x22, [sp, #16]
   1aa60:	ldp	x23, x30, [sp, #32]
   1aa64:	ldp	x19, x20, [sp], #80
   1aa68:	ret
   1aa6c:	stp	x19, x20, [sp, #-32]!
   1aa70:	stp	x21, x30, [sp, #16]
   1aa74:	mov	x21, x2
   1aa78:	adrp	x2, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1aa7c:	ldr	x2, [x2, #4040]
   1aa80:	ldrb	w2, [x2, #60]
   1aa84:	cbz	w2, 1aae0 <__sanitizer_symbolize_global@@Base+0x39c>
   1aa88:	ldr	w2, [x1, #8]
   1aa8c:	cbnz	w2, 1aaa0 <__sanitizer_symbolize_global@@Base+0x35c>
   1aa90:	ldp	x21, x30, [sp, #16]
   1aa94:	mov	x1, #0x0                   	// #0
   1aa98:	ldp	x19, x20, [sp], #32
   1aa9c:	b	10780 <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
   1aaa0:	mov	x20, x0
   1aaa4:	ldr	x0, [x1]
   1aaa8:	ldr	x19, [x0]
   1aaac:	bl	1d468 <__sanitizer_symbolize_global@@Base+0x2d24>
   1aab0:	sub	x19, x19, #0x4
   1aab4:	mov	x1, x19
   1aab8:	bl	1d91c <__sanitizer_symbolize_global@@Base+0x31d8>
   1aabc:	mov	x2, x21
   1aac0:	mov	x19, x0
   1aac4:	add	x1, x0, #0x8
   1aac8:	mov	x0, x20
   1aacc:	bl	1a9d4 <__sanitizer_symbolize_global@@Base+0x290>
   1aad0:	mov	x0, x19
   1aad4:	ldp	x21, x30, [sp, #16]
   1aad8:	ldp	x19, x20, [sp], #32
   1aadc:	b	1cb80 <__sanitizer_symbolize_global@@Base+0x243c>
   1aae0:	ldp	x21, x30, [sp, #16]
   1aae4:	ldp	x19, x20, [sp], #32
   1aae8:	ret
   1aaec:	and	w0, w0, #0x6
   1aaf0:	cmp	w0, #0x6
   1aaf4:	b.ne	1ac1c <__sanitizer_symbolize_global@@Base+0x4d8>  // b.any
   1aaf8:	stp	x29, x30, [sp, #-112]!
   1aafc:	mov	x29, sp
   1ab00:	str	x23, [sp, #48]
   1ab04:	add	x23, x29, #0x40
   1ab08:	mov	x0, x23
   1ab0c:	stp	x19, x20, [sp, #16]
   1ab10:	mov	x20, x30
   1ab14:	stp	x21, x22, [sp, #32]
   1ab18:	bl	1a8ec <__sanitizer_symbolize_global@@Base+0x1a8>
   1ab1c:	bl	1a858 <__sanitizer_symbolize_global@@Base+0x114>
   1ab20:	mov	x1, #0x1                   	// #1
   1ab24:	and	w22, w0, #0xff
   1ab28:	add	x0, x29, #0x58
   1ab2c:	bl	1b13c <__sanitizer_symbolize_global@@Base+0x9f8>
   1ab30:	ldr	x19, [x29, #88]
   1ab34:	add	x0, x19, #0x10
   1ab38:	stp	x0, xzr, [x19]
   1ab3c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ab40:	ldr	x0, [x0, #4040]
   1ab44:	stp	xzr, xzr, [x29, #72]
   1ab48:	str	xzr, [x19, #2064]
   1ab4c:	ldrb	w21, [x0, #33]
   1ab50:	cbz	w21, 1ab64 <__sanitizer_symbolize_global@@Base+0x420>
   1ab54:	add	x2, x29, #0x50
   1ab58:	add	x1, x29, #0x48
   1ab5c:	mov	w0, #0x0                   	// #0
   1ab60:	bl	1610c <__sanitizer_set_report_fd@@Base+0x3658>
   1ab64:	ldp	x5, x6, [x29, #72]
   1ab68:	mov	w7, w21
   1ab6c:	mov	x3, x29
   1ab70:	mov	x4, #0x0                   	// #0
   1ab74:	mov	x2, x20
   1ab78:	mov	x0, x19
   1ab7c:	mov	w1, #0x100                 	// #256
   1ab80:	adrp	x21, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ab84:	adrp	x20, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1ab88:	add	x21, x21, #0x60f
   1ab8c:	bl	1a34c <OnPrint@@Base+0x1ae4>
   1ab90:	add	x20, x20, #0x67b
   1ab94:	cmp	w22, #0x0
   1ab98:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1ab9c:	add	x1, x1, #0xee8
   1aba0:	mov	x0, x20
   1aba4:	csel	x1, x1, x21, ne  // ne = any
   1aba8:	bl	18af0 <OnPrint@@Base+0x288>
   1abac:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1abb0:	ldr	x0, [x0, #4008]
   1abb4:	ldr	x1, [x0]
   1abb8:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1abbc:	add	x0, x0, #0x6ba
   1abc0:	bl	18b74 <OnPrint@@Base+0x30c>
   1abc4:	cmp	w22, #0x0
   1abc8:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1abcc:	add	x1, x1, #0xb79
   1abd0:	mov	x0, x20
   1abd4:	csel	x1, x1, x21, ne  // ne = any
   1abd8:	bl	18af0 <OnPrint@@Base+0x288>
   1abdc:	mov	x0, x19
   1abe0:	bl	1a434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
   1abe4:	mov	x2, #0x0                   	// #0
   1abe8:	mov	x1, x19
   1abec:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1abf0:	add	x0, x0, #0x6e7
   1abf4:	bl	1aa6c <__sanitizer_symbolize_global@@Base+0x328>
   1abf8:	ldp	x0, x1, [x29, #88]
   1abfc:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1ac00:	mov	x0, x23
   1ac04:	bl	1a980 <__sanitizer_symbolize_global@@Base+0x23c>
   1ac08:	ldp	x19, x20, [sp, #16]
   1ac0c:	ldp	x21, x22, [sp, #32]
   1ac10:	ldr	x23, [sp, #48]
   1ac14:	ldp	x29, x30, [sp], #112
   1ac18:	ret
   1ac1c:	ret
   1ac20:	stp	x19, x20, [sp, #-240]!
   1ac24:	mov	x19, x0
   1ac28:	mov	w20, w1
   1ac2c:	stp	x21, x22, [sp, #16]
   1ac30:	add	x22, sp, #0xa0
   1ac34:	adrp	x21, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ac38:	stp	x23, x24, [sp, #32]
   1ac3c:	adrp	x23, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1ac40:	stp	x25, x26, [sp, #48]
   1ac44:	mov	x25, x2
   1ac48:	mov	x26, x3
   1ac4c:	stp	x27, x28, [sp, #64]
   1ac50:	str	x30, [sp, #80]
   1ac54:	bl	17918 <__sanitizer_set_report_fd@@Base+0x4e64>
   1ac58:	tst	w0, #0xff
   1ac5c:	b.eq	1ad38 <__sanitizer_symbolize_global@@Base+0x5f4>  // b.none
   1ac60:	bl	1a858 <__sanitizer_symbolize_global@@Base+0x114>
   1ac64:	ands	w28, w0, #0xff
   1ac68:	add	x23, x23, #0x67b
   1ac6c:	adrp	x27, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ac70:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1ac74:	add	x27, x27, #0x60f
   1ac78:	add	x1, x1, #0xee8
   1ac7c:	mov	x0, x23
   1ac80:	csel	x1, x1, x27, ne  // ne = any
   1ac84:	bl	18af0 <OnPrint@@Base+0x288>
   1ac88:	ldr	x21, [x21, #4008]
   1ac8c:	adrp	x24, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ac90:	ldp	x3, x4, [x19, #16]
   1ac94:	add	x24, x24, #0x8a4
   1ac98:	ldp	x6, x5, [x19, #32]
   1ac9c:	add	x24, x24, #0x3b
   1aca0:	ldr	x1, [x21]
   1aca4:	mov	w7, w20
   1aca8:	mov	x2, x24
   1acac:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1acb0:	add	x0, x0, #0x712
   1acb4:	bl	18b74 <OnPrint@@Base+0x30c>
   1acb8:	cmp	w28, #0x0
   1acbc:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1acc0:	add	x1, x1, #0xb79
   1acc4:	mov	x0, x23
   1acc8:	csel	x1, x1, x27, ne  // ne = any
   1accc:	bl	18af0 <OnPrint@@Base+0x288>
   1acd0:	mov	x0, x22
   1acd4:	mov	x1, #0x1                   	// #1
   1acd8:	bl	1b13c <__sanitizer_symbolize_global@@Base+0x9f8>
   1acdc:	ldr	x20, [sp, #160]
   1ace0:	mov	x1, x26
   1ace4:	mov	x2, x20
   1ace8:	add	x0, x20, #0x10
   1acec:	stp	x0, xzr, [x20]
   1acf0:	mov	x0, x19
   1acf4:	str	xzr, [x20, #2064]
   1acf8:	blr	x25
   1acfc:	mov	x0, x20
   1ad00:	bl	1a434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
   1ad04:	mov	x1, x20
   1ad08:	mov	x0, x24
   1ad0c:	mov	x2, #0x0                   	// #0
   1ad10:	bl	1aa6c <__sanitizer_symbolize_global@@Base+0x328>
   1ad14:	ldp	x0, x1, [sp, #160]
   1ad18:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1ad1c:	ldp	x21, x22, [sp, #16]
   1ad20:	ldp	x23, x24, [sp, #32]
   1ad24:	ldp	x25, x26, [sp, #48]
   1ad28:	ldp	x27, x28, [sp, #64]
   1ad2c:	ldr	x30, [sp, #80]
   1ad30:	ldp	x19, x20, [sp], #240
   1ad34:	ret
   1ad38:	bl	1a858 <__sanitizer_symbolize_global@@Base+0x114>
   1ad3c:	adrp	x28, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ad40:	ands	w8, w0, #0xff
   1ad44:	add	x28, x28, #0x60f
   1ad48:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1ad4c:	add	x1, x1, #0xee8
   1ad50:	csel	x1, x1, x28, ne  // ne = any
   1ad54:	add	x27, x23, #0x67b
   1ad58:	mov	x0, x27
   1ad5c:	str	w8, [sp, #96]
   1ad60:	bl	18af0 <OnPrint@@Base+0x288>
   1ad64:	mov	x0, x19
   1ad68:	bl	1737c <__sanitizer_set_report_fd@@Base+0x48c8>
   1ad6c:	mov	x24, x0
   1ad70:	mov	w7, w20
   1ad74:	ldr	x0, [x21, #4008]
   1ad78:	mov	x2, x24
   1ad7c:	ldp	x3, x4, [x19, #16]
   1ad80:	ldp	x6, x5, [x19, #32]
   1ad84:	ldr	x1, [x0]
   1ad88:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ad8c:	add	x0, x0, #0x747
   1ad90:	bl	18b74 <OnPrint@@Base+0x30c>
   1ad94:	ldr	w8, [sp, #96]
   1ad98:	adrp	x1, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1ad9c:	add	x1, x1, #0xb79
   1ada0:	mov	x0, x27
   1ada4:	cmp	w8, #0x0
   1ada8:	csel	x1, x1, x28, ne  // ne = any
   1adac:	bl	18af0 <OnPrint@@Base+0x288>
   1adb0:	ldr	x20, [x19, #24]
   1adb4:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1adb8:	cmp	x20, x0
   1adbc:	b.cs	1adcc <__sanitizer_symbolize_global@@Base+0x688>  // b.hs, b.nlast
   1adc0:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1adc4:	add	x0, x0, #0x784
   1adc8:	bl	18b74 <OnPrint@@Base+0x30c>
   1adcc:	ldrb	w0, [x19, #48]
   1add0:	cbz	w0, 1ae20 <__sanitizer_symbolize_global@@Base+0x6dc>
   1add4:	ldr	w2, [x19, #52]
   1add8:	cmp	w2, #0x2
   1addc:	b.eq	1ae84 <__sanitizer_symbolize_global@@Base+0x740>  // b.none
   1ade0:	cmp	w2, #0x1
   1ade4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ade8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1adec:	add	x0, x0, #0x700
   1adf0:	add	x1, x1, #0x6fb
   1adf4:	csel	x1, x1, x0, eq  // eq = none
   1adf8:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1adfc:	add	x0, x0, #0x7a7
   1ae00:	bl	18b74 <OnPrint@@Base+0x30c>
   1ae04:	ldr	x20, [x19, #16]
   1ae08:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1ae0c:	cmp	x20, x0
   1ae10:	b.cs	1ae20 <__sanitizer_symbolize_global@@Base+0x6dc>  // b.hs, b.nlast
   1ae14:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ae18:	add	x0, x0, #0x7d4
   1ae1c:	bl	18b74 <OnPrint@@Base+0x30c>
   1ae20:	add	x20, sp, #0x80
   1ae24:	adrp	x27, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ae28:	add	x27, x27, #0x7fc
   1ae2c:	mov	x0, x20
   1ae30:	mov	w1, #0x1                   	// #1
   1ae34:	ldr	x28, [x19, #24]
   1ae38:	bl	18efc <OnPrint@@Base+0x694>
   1ae3c:	stp	xzr, xzr, [sp, #184]
   1ae40:	str	xzr, [sp, #232]
   1ae44:	mov	x1, x22
   1ae48:	mov	x0, x20
   1ae4c:	bl	1932c <OnPrint@@Base+0xac4>
   1ae50:	tst	w0, #0xff
   1ae54:	b.eq	1ae90 <__sanitizer_symbolize_global@@Base+0x74c>  // b.none
   1ae58:	ldr	x0, [sp, #160]
   1ae5c:	cmp	x28, x0
   1ae60:	b.cc	1ae44 <__sanitizer_symbolize_global@@Base+0x700>  // b.lo, b.ul, b.last
   1ae64:	ldr	x0, [sp, #168]
   1ae68:	cmp	x28, x0
   1ae6c:	b.cs	1ae44 <__sanitizer_symbolize_global@@Base+0x700>  // b.hs, b.nlast
   1ae70:	ldr	x0, [sp, #200]
   1ae74:	tbnz	w0, #2, 1ae44 <__sanitizer_symbolize_global@@Base+0x700>
   1ae78:	mov	x0, x27
   1ae7c:	bl	18b74 <OnPrint@@Base+0x30c>
   1ae80:	b	1ae44 <__sanitizer_symbolize_global@@Base+0x700>
   1ae84:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ae88:	add	x1, x1, #0x6f5
   1ae8c:	b	1adf8 <__sanitizer_symbolize_global@@Base+0x6b4>
   1ae90:	mov	x0, x20
   1ae94:	bl	18e20 <OnPrint@@Base+0x5b8>
   1ae98:	mov	x0, x20
   1ae9c:	mov	x1, #0x1                   	// #1
   1aea0:	bl	1b13c <__sanitizer_symbolize_global@@Base+0x9f8>
   1aea4:	ldr	x20, [sp, #128]
   1aea8:	mov	x1, x26
   1aeac:	add	x0, x20, #0x10
   1aeb0:	mov	x2, x20
   1aeb4:	stp	x0, xzr, [x20]
   1aeb8:	mov	x0, x19
   1aebc:	str	xzr, [x20, #2064]
   1aec0:	blr	x25
   1aec4:	mov	x0, x20
   1aec8:	bl	1a434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c>
   1aecc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1aed0:	str	x0, [sp, #96]
   1aed4:	ldr	x1, [x0, #4040]
   1aed8:	ldrb	w1, [x1, #232]
   1aedc:	cbz	w1, 1afb8 <__sanitizer_symbolize_global@@Base+0x874>
   1aee0:	ldr	x28, [x19, #24]
   1aee4:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1aee8:	cmp	x28, x0
   1aeec:	b.cc	1afb8 <__sanitizer_symbolize_global@@Base+0x874>  // b.lo, b.ul, b.last
   1aef0:	mov	x0, x22
   1aef4:	mov	x1, #0x400                 	// #1024
   1aef8:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   1aefc:	mov	x0, x22
   1af00:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1af04:	add	x1, x1, #0x838
   1af08:	bl	18bf8 <OnPrint@@Base+0x390>
   1af0c:	mov	x0, x28
   1af10:	mov	x1, #0x10                  	// #16
   1af14:	bl	1799c <__sanitizer_set_report_fd@@Base+0x4ee8>
   1af18:	tst	w0, #0xff
   1af1c:	b.eq	1affc <__sanitizer_symbolize_global@@Base+0x8b8>  // b.none
   1af20:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1af24:	adrp	x27, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1af28:	adrp	x26, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1af2c:	adrp	x25, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1af30:	add	x2, x2, #0x60f
   1af34:	add	x27, x27, #0x708
   1af38:	add	x26, x26, #0xb79
   1af3c:	add	x25, x25, #0x85b
   1af40:	mov	x7, #0x0                   	// #0
   1af44:	ldrb	w4, [x28, x7]
   1af48:	str	w4, [sp, #104]
   1af4c:	stp	x7, x2, [sp, #112]
   1af50:	bl	1a858 <__sanitizer_symbolize_global@@Base+0x114>
   1af54:	ands	w0, w0, #0xff
   1af58:	ldr	x2, [sp, #120]
   1af5c:	mov	x1, x25
   1af60:	ldr	w4, [sp, #104]
   1af64:	csel	x3, x27, x2, ne  // ne = any
   1af68:	cmp	w0, #0x0
   1af6c:	csel	x6, x26, x2, ne  // ne = any
   1af70:	and	w5, w4, #0xf
   1af74:	mov	x0, x22
   1af78:	lsr	w4, w4, #4
   1af7c:	str	x2, [sp, #104]
   1af80:	bl	18bf8 <OnPrint@@Base+0x390>
   1af84:	ldp	x2, x7, [sp, #104]
   1af88:	add	x7, x7, #0x1
   1af8c:	cmp	x7, #0x10
   1af90:	b.ne	1af44 <__sanitizer_symbolize_global@@Base+0x800>  // b.any
   1af94:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1af98:	add	x1, x1, #0x60e
   1af9c:	mov	x0, x22
   1afa0:	bl	18bf8 <OnPrint@@Base+0x390>
   1afa4:	ldr	x1, [sp, #160]
   1afa8:	add	x0, x23, #0x67b
   1afac:	bl	18b74 <OnPrint@@Base+0x30c>
   1afb0:	ldp	x0, x1, [sp, #160]
   1afb4:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1afb8:	ldr	x0, [sp, #96]
   1afbc:	ldr	x0, [x0, #4040]
   1afc0:	ldrb	w0, [x0, #233]
   1afc4:	cbz	w0, 1afd0 <__sanitizer_symbolize_global@@Base+0x88c>
   1afc8:	ldr	x0, [x19, #8]
   1afcc:	bl	15ba4 <__sanitizer_set_report_fd@@Base+0x30f0>
   1afd0:	ldr	x21, [x21, #4008]
   1afd4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1afd8:	add	x0, x0, #0x875
   1afdc:	ldr	x1, [x21]
   1afe0:	bl	18af0 <OnPrint@@Base+0x288>
   1afe4:	mov	x1, x20
   1afe8:	mov	x0, x24
   1afec:	mov	x2, #0x0                   	// #0
   1aff0:	bl	1aa6c <__sanitizer_symbolize_global@@Base+0x328>
   1aff4:	ldp	x0, x1, [sp, #128]
   1aff8:	b	1ad18 <__sanitizer_symbolize_global@@Base+0x5d4>
   1affc:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b000:	add	x1, x1, #0x867
   1b004:	b	1af9c <__sanitizer_symbolize_global@@Base+0x858>
   1b008:	stp	x19, x20, [sp, #-112]!
   1b00c:	mov	x19, x1
   1b010:	mov	w20, w2
   1b014:	stp	x21, x22, [sp, #16]
   1b018:	mov	x22, x4
   1b01c:	mov	x21, x3
   1b020:	stp	x23, x30, [sp, #32]
   1b024:	mov	x23, x0
   1b028:	bl	1a8b4 <__sanitizer_symbolize_global@@Base+0x170>
   1b02c:	add	x0, sp, #0x30
   1b030:	bl	1a8ec <__sanitizer_symbolize_global@@Base+0x1a8>
   1b034:	stp	x23, x19, [sp, #56]
   1b038:	add	x19, sp, #0x38
   1b03c:	mov	x0, x19
   1b040:	bl	17350 <__sanitizer_set_report_fd@@Base+0x489c>
   1b044:	str	x0, [sp, #72]
   1b048:	mov	x0, x19
   1b04c:	bl	1735c <__sanitizer_set_report_fd@@Base+0x48a8>
   1b050:	strb	w0, [sp, #104]
   1b054:	mov	x0, x19
   1b058:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x30b4>
   1b05c:	str	w0, [sp, #108]
   1b060:	mov	x0, x19
   1b064:	bl	15ba8 <__sanitizer_set_report_fd@@Base+0x30f4>
   1b068:	mov	x3, x22
   1b06c:	mov	x2, x21
   1b070:	mov	w1, w20
   1b074:	mov	x0, x19
   1b078:	bl	1ac20 <__sanitizer_symbolize_global@@Base+0x4dc>
   1b07c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b080:	add	x0, x0, #0x89a
   1b084:	bl	18b74 <OnPrint@@Base+0x30c>
   1b088:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1b08c:	stp	x19, x20, [sp, #-48]!
   1b090:	stp	x21, x22, [sp, #16]
   1b094:	str	x30, [sp, #32]
   1b098:	cbnz	x1, 1b0bc <__sanitizer_symbolize_global@@Base+0x978>
   1b09c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1b0a0:	add	x2, x2, #0x329
   1b0a4:	mov	x4, #0x0                   	// #0
   1b0a8:	mov	x3, #0x0                   	// #0
   1b0ac:	mov	w1, #0x1fc                 	// #508
   1b0b0:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1b0b4:	add	x0, x0, #0x5c5
   1b0b8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1b0bc:	ldr	x3, [x0, #16]
   1b0c0:	mov	x19, x0
   1b0c4:	mov	x20, x1
   1b0c8:	cmp	x1, x3
   1b0cc:	b.cs	1b0e4 <__sanitizer_symbolize_global@@Base+0x9a0>  // b.hs, b.nlast
   1b0d0:	mov	x4, x1
   1b0d4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1b0d8:	mov	w1, #0x1fd                 	// #509
   1b0dc:	add	x2, x2, #0x342
   1b0e0:	b	1b0b0 <__sanitizer_symbolize_global@@Base+0x96c>
   1b0e4:	mov	x22, #0x818                 	// #2072
   1b0e8:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1b0ec:	mov	x1, x0
   1b0f0:	mul	x0, x20, x22
   1b0f4:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   1b0f8:	mov	x20, x0
   1b0fc:	mov	w2, #0x0                   	// #0
   1b100:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1b104:	add	x1, x1, #0x360
   1b108:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1b10c:	ldr	x2, [x19, #16]
   1b110:	mov	x21, x0
   1b114:	ldr	x1, [x19]
   1b118:	mul	x2, x2, x22
   1b11c:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1b120:	ldp	x0, x1, [x19]
   1b124:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1b128:	ldr	x30, [sp, #32]
   1b12c:	stp	x21, x20, [x19]
   1b130:	ldp	x21, x22, [sp, #16]
   1b134:	ldp	x19, x20, [sp], #48
   1b138:	ret
   1b13c:	stp	x19, x20, [sp, #-32]!
   1b140:	mov	x19, x0
   1b144:	mov	x20, x1
   1b148:	str	x30, [sp, #16]
   1b14c:	stp	xzr, xzr, [x0]
   1b150:	str	xzr, [x0, #16]
   1b154:	cbz	x1, 1b1a8 <__sanitizer_symbolize_global@@Base+0xa64>
   1b158:	bl	1b08c <__sanitizer_symbolize_global@@Base+0x948>
   1b15c:	ldr	x0, [x19, #16]
   1b160:	cmp	x20, x0
   1b164:	b.ls	1b1a8 <__sanitizer_symbolize_global@@Base+0xa64>  // b.plast
   1b168:	ldr	x0, [x19, #8]
   1b16c:	mov	x1, #0x818                 	// #2072
   1b170:	udiv	x0, x0, x1
   1b174:	cmp	x20, x0
   1b178:	b.ls	1b188 <__sanitizer_symbolize_global@@Base+0xa44>  // b.plast
   1b17c:	mov	x1, x20
   1b180:	mov	x0, x19
   1b184:	bl	1b08c <__sanitizer_symbolize_global@@Base+0x948>
   1b188:	ldr	x0, [x19, #16]
   1b18c:	mov	x3, #0x818                 	// #2072
   1b190:	ldr	x4, [x19]
   1b194:	sub	x2, x20, x0
   1b198:	mov	w1, #0x0                   	// #0
   1b19c:	mul	x2, x2, x3
   1b1a0:	madd	x0, x0, x3, x4
   1b1a4:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1b1a8:	ldr	x30, [sp, #16]
   1b1ac:	str	x20, [x19, #16]
   1b1b0:	ldp	x19, x20, [sp], #32
   1b1b4:	ret
   1b1b8:	stp	x19, x20, [sp, #-32]!
   1b1bc:	mov	x19, x0
   1b1c0:	stp	x21, x30, [sp, #16]
   1b1c4:	cbz	x0, 1b1f4 <__sanitizer_symbolize_global@@Base+0xab0>
   1b1c8:	mov	x20, x1
   1b1cc:	cbz	x1, 1b1f4 <__sanitizer_symbolize_global@@Base+0xab0>
   1b1d0:	mov	x0, x1
   1b1d4:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1b1d8:	mov	x1, x20
   1b1dc:	mov	x21, x0
   1b1e0:	mov	x2, x0
   1b1e4:	mov	x0, x19
   1b1e8:	bl	14410 <__sanitizer_set_report_fd@@Base+0x195c>
   1b1ec:	cbnz	w0, 1b1f4 <__sanitizer_symbolize_global@@Base+0xab0>
   1b1f0:	add	x19, x19, x21
   1b1f4:	mov	x0, x19
   1b1f8:	ldp	x21, x30, [sp, #16]
   1b1fc:	ldp	x19, x20, [sp], #32
   1b200:	ret
   1b204:	stp	x19, x20, [sp, #-80]!
   1b208:	mov	x20, x0
   1b20c:	mov	x19, x1
   1b210:	stp	x21, x22, [sp, #16]
   1b214:	adrp	x22, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1b218:	mov	x21, x2
   1b21c:	add	x22, x22, #0x67b
   1b220:	stp	x23, x24, [sp, #32]
   1b224:	adrp	x24, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1b228:	mov	x23, x3
   1b22c:	add	x24, x24, #0xc60
   1b230:	stp	x25, x26, [sp, #48]
   1b234:	adrp	x26, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b238:	str	x30, [sp, #64]
   1b23c:	ldrb	w2, [x19]
   1b240:	cbz	w2, 1b2ec <__sanitizer_symbolize_global@@Base+0xba8>
   1b244:	add	x25, x19, #0x1
   1b248:	cmp	w2, #0x25
   1b24c:	b.eq	1b26c <__sanitizer_symbolize_global@@Base+0xb28>  // b.none
   1b250:	mov	x25, x19
   1b254:	mov	x0, x20
   1b258:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b25c:	add	x1, x1, #0x8ee
   1b260:	bl	18bf8 <OnPrint@@Base+0x390>
   1b264:	add	x19, x25, #0x1
   1b268:	b	1b23c <__sanitizer_symbolize_global@@Base+0xaf8>
   1b26c:	ldrb	w2, [x19, #1]
   1b270:	cmp	w2, #0x6c
   1b274:	b.eq	1b2d0 <__sanitizer_symbolize_global@@Base+0xb8c>  // b.none
   1b278:	b.hi	1b2a0 <__sanitizer_symbolize_global@@Base+0xb5c>  // b.pmore
   1b27c:	cmp	w2, #0x25
   1b280:	b.eq	1b2c0 <__sanitizer_symbolize_global@@Base+0xb7c>  // b.none
   1b284:	cmp	w2, #0x67
   1b288:	b.eq	1b2e4 <__sanitizer_symbolize_global@@Base+0xba0>  // b.none
   1b28c:	mov	w1, w2
   1b290:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b294:	add	x0, x0, #0x8f4
   1b298:	bl	18b74 <OnPrint@@Base+0x30c>
   1b29c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1b2a0:	cmp	w2, #0x73
   1b2a4:	b.ne	1b28c <__sanitizer_symbolize_global@@Base+0xb48>  // b.any
   1b2a8:	ldr	x0, [x21, #24]
   1b2ac:	mov	x1, x23
   1b2b0:	bl	1002c <__sancov_default_options@@Base+0x1ba8>
   1b2b4:	mov	x2, x0
   1b2b8:	mov	x1, x22
   1b2bc:	b	1b2d8 <__sanitizer_symbolize_global@@Base+0xb94>
   1b2c0:	add	x1, x26, #0x8f1
   1b2c4:	mov	x0, x20
   1b2c8:	bl	18bf8 <OnPrint@@Base+0x390>
   1b2cc:	b	1b264 <__sanitizer_symbolize_global@@Base+0xb20>
   1b2d0:	ldr	x2, [x21, #32]
   1b2d4:	mov	x1, x24
   1b2d8:	mov	x0, x20
   1b2dc:	bl	18bf8 <OnPrint@@Base+0x390>
   1b2e0:	b	1b264 <__sanitizer_symbolize_global@@Base+0xb20>
   1b2e4:	ldr	x2, [x21, #40]
   1b2e8:	b	1b2b8 <__sanitizer_symbolize_global@@Base+0xb74>
   1b2ec:	ldp	x21, x22, [sp, #16]
   1b2f0:	ldp	x23, x24, [sp, #32]
   1b2f4:	ldp	x25, x26, [sp, #48]
   1b2f8:	ldr	x30, [sp, #64]
   1b2fc:	ldp	x19, x20, [sp], #80
   1b300:	ret
   1b304:	stp	x19, x20, [sp, #-48]!
   1b308:	and	w4, w4, #0xff
   1b30c:	cmp	w2, #0x0
   1b310:	stp	x21, x22, [sp, #16]
   1b314:	mov	x19, x0
   1b318:	mov	w21, w2
   1b31c:	str	x30, [sp, #32]
   1b320:	mov	x0, x1
   1b324:	mov	w20, w3
   1b328:	mov	x1, x5
   1b32c:	ccmp	w4, #0x0, #0x4, gt
   1b330:	b.eq	1b388 <__sanitizer_symbolize_global@@Base+0xc44>  // b.none
   1b334:	bl	1002c <__sancov_default_options@@Base+0x1ba8>
   1b338:	mov	x2, x0
   1b33c:	mov	w3, w21
   1b340:	mov	x0, x19
   1b344:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b348:	add	x1, x1, #0x92e
   1b34c:	bl	18bf8 <OnPrint@@Base+0x390>
   1b350:	cmp	w20, #0x0
   1b354:	b.le	1b36c <__sanitizer_symbolize_global@@Base+0xc28>
   1b358:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b35c:	mov	w2, w20
   1b360:	add	x1, x1, #0x934
   1b364:	mov	x0, x19
   1b368:	bl	18bf8 <OnPrint@@Base+0x390>
   1b36c:	mov	x0, x19
   1b370:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   1b374:	ldp	x21, x22, [sp, #16]
   1b378:	add	x1, x1, #0x79b
   1b37c:	ldr	x30, [sp, #32]
   1b380:	ldp	x19, x20, [sp], #48
   1b384:	b	18bf8 <OnPrint@@Base+0x390>
   1b388:	bl	1002c <__sancov_default_options@@Base+0x1ba8>
   1b38c:	mov	x2, x0
   1b390:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1b394:	mov	x0, x19
   1b398:	add	x1, x1, #0x67b
   1b39c:	bl	18bf8 <OnPrint@@Base+0x390>
   1b3a0:	cmp	w21, #0x0
   1b3a4:	b.le	1b3e4 <__sanitizer_symbolize_global@@Base+0xca0>
   1b3a8:	adrp	x22, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b3ac:	add	x22, x22, #0x938
   1b3b0:	mov	w2, w21
   1b3b4:	mov	x1, x22
   1b3b8:	mov	x0, x19
   1b3bc:	bl	18bf8 <OnPrint@@Base+0x390>
   1b3c0:	cmp	w20, #0x0
   1b3c4:	b.le	1b3e4 <__sanitizer_symbolize_global@@Base+0xca0>
   1b3c8:	mov	w2, w20
   1b3cc:	mov	x1, x22
   1b3d0:	mov	x0, x19
   1b3d4:	ldp	x21, x22, [sp, #16]
   1b3d8:	ldr	x30, [sp, #32]
   1b3dc:	ldp	x19, x20, [sp], #48
   1b3e0:	b	18bf8 <OnPrint@@Base+0x390>
   1b3e4:	ldp	x21, x22, [sp, #16]
   1b3e8:	ldr	x30, [sp, #32]
   1b3ec:	ldp	x19, x20, [sp], #48
   1b3f0:	ret
   1b3f4:	stp	x19, x20, [sp, #-32]!
   1b3f8:	mov	x19, x2
   1b3fc:	mov	w20, w3
   1b400:	stp	x21, x30, [sp, #16]
   1b404:	mov	x21, x0
   1b408:	mov	x0, x1
   1b40c:	mov	x1, x4
   1b410:	bl	1002c <__sancov_default_options@@Base+0x1ba8>
   1b414:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b418:	mov	x2, x0
   1b41c:	add	x1, x1, #0x96a
   1b420:	mov	x0, x21
   1b424:	bl	18bf8 <OnPrint@@Base+0x390>
   1b428:	cbz	w20, 1b468 <__sanitizer_symbolize_global@@Base+0xd24>
   1b42c:	sub	w20, w20, #0x1
   1b430:	cmp	w20, #0x7
   1b434:	b.hi	1b4c0 <__sanitizer_symbolize_global@@Base+0xd7c>  // b.pmore
   1b438:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b43c:	add	x0, x0, #0x9c8
   1b440:	ldrb	w0, [x0, w20, uxtw]
   1b444:	adr	x1, 1b450 <__sanitizer_symbolize_global@@Base+0xd0c>
   1b448:	add	x0, x1, w0, sxtb #2
   1b44c:	br	x0
   1b450:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b454:	add	x2, x1, #0x963
   1b458:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b45c:	mov	x0, x21
   1b460:	add	x1, x1, #0x994
   1b464:	bl	18bf8 <OnPrint@@Base+0x390>
   1b468:	mov	x2, x19
   1b46c:	mov	x0, x21
   1b470:	ldp	x21, x30, [sp, #16]
   1b474:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b478:	ldp	x19, x20, [sp], #32
   1b47c:	add	x1, x1, #0x998
   1b480:	b	18bf8 <OnPrint@@Base+0x390>
   1b484:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b488:	add	x2, x1, #0x950
   1b48c:	b	1b458 <__sanitizer_symbolize_global@@Base+0xd14>
   1b490:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b494:	add	x2, x1, #0x956
   1b498:	b	1b458 <__sanitizer_symbolize_global@@Base+0xd14>
   1b49c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b4a0:	add	x2, x1, #0x95c
   1b4a4:	b	1b458 <__sanitizer_symbolize_global@@Base+0xd14>
   1b4a8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b4ac:	add	x2, x1, #0x93c
   1b4b0:	b	1b458 <__sanitizer_symbolize_global@@Base+0xd14>
   1b4b4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b4b8:	add	x2, x1, #0xf4a
   1b4bc:	b	1b458 <__sanitizer_symbolize_global@@Base+0xd14>
   1b4c0:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b4c4:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1b4c8:	add	x2, x2, #0x96e
   1b4cc:	add	x0, x0, #0x5c5
   1b4d0:	mov	x4, #0x0                   	// #0
   1b4d4:	mov	x3, #0x0                   	// #0
   1b4d8:	mov	w1, #0x2a9                 	// #681
   1b4dc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1b4e0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b4e4:	add	x2, x1, #0x943
   1b4e8:	b	1b458 <__sanitizer_symbolize_global@@Base+0xd14>
   1b4ec:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b4f0:	add	x2, x1, #0x948
   1b4f4:	b	1b458 <__sanitizer_symbolize_global@@Base+0xd14>
   1b4f8:	stp	x19, x20, [sp, #-112]!
   1b4fc:	mov	x20, x0
   1b500:	mov	x19, x3
   1b504:	stp	x23, x24, [sp, #32]
   1b508:	mov	x24, x1
   1b50c:	mov	x0, x24
   1b510:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1b514:	add	x1, x1, #0xddd
   1b518:	stp	x21, x22, [sp, #16]
   1b51c:	mov	x21, x5
   1b520:	mov	x22, x6
   1b524:	stp	x25, x26, [sp, #48]
   1b528:	stp	x27, x28, [sp, #64]
   1b52c:	and	w28, w4, #0xff
   1b530:	str	x30, [sp, #80]
   1b534:	str	w2, [sp, #108]
   1b538:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1b53c:	cbnz	w0, 1b548 <__sanitizer_symbolize_global@@Base+0xe04>
   1b540:	adrp	x7, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b544:	add	x24, x7, #0x9e1
   1b548:	adrp	x25, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b54c:	adrp	x23, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1b550:	add	x25, x25, #0x9d0
   1b554:	add	x23, x23, #0xc60
   1b558:	adrp	x26, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1b55c:	ldrb	w2, [x24]
   1b560:	cbz	w2, 1b780 <__sanitizer_symbolize_global@@Base+0x103c>
   1b564:	add	x27, x24, #0x1
   1b568:	cmp	w2, #0x25
   1b56c:	b.eq	1b58c <__sanitizer_symbolize_global@@Base+0xe48>  // b.none
   1b570:	mov	x27, x24
   1b574:	mov	x0, x20
   1b578:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b57c:	add	x1, x1, #0x8ee
   1b580:	bl	18bf8 <OnPrint@@Base+0x390>
   1b584:	add	x24, x27, #0x1
   1b588:	b	1b55c <__sanitizer_symbolize_global@@Base+0xe18>
   1b58c:	ldrb	w2, [x24, #1]
   1b590:	cmp	w2, #0x73
   1b594:	b.hi	1b5bc <__sanitizer_symbolize_global@@Base+0xe78>  // b.pmore
   1b598:	cmp	w2, #0x62
   1b59c:	b.hi	1b5d0 <__sanitizer_symbolize_global@@Base+0xe8c>  // b.pmore
   1b5a0:	cmp	w2, #0x4c
   1b5a4:	b.eq	1b704 <__sanitizer_symbolize_global@@Base+0xfc0>  // b.none
   1b5a8:	b.hi	1b5ec <__sanitizer_symbolize_global@@Base+0xea8>  // b.pmore
   1b5ac:	cmp	w2, #0x25
   1b5b0:	b.eq	1b618 <__sanitizer_symbolize_global@@Base+0xed4>  // b.none
   1b5b4:	cmp	w2, #0x46
   1b5b8:	b.eq	1b6c0 <__sanitizer_symbolize_global@@Base+0xf7c>  // b.none
   1b5bc:	mov	w1, w2
   1b5c0:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b5c4:	add	x0, x0, #0x8f4
   1b5c8:	bl	18b74 <OnPrint@@Base+0x30c>
   1b5cc:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1b5d0:	sub	w0, w2, #0x63
   1b5d4:	cmp	w0, #0x10
   1b5d8:	b.hi	1b5bc <__sanitizer_symbolize_global@@Base+0xe78>  // b.pmore
   1b5dc:	ldrb	w0, [x25, w0, uxtw]
   1b5e0:	adr	x1, 1b5ec <__sanitizer_symbolize_global@@Base+0xea8>
   1b5e4:	add	x0, x1, w0, sxtb #2
   1b5e8:	br	x0
   1b5ec:	cmp	w2, #0x4d
   1b5f0:	b.eq	1b748 <__sanitizer_symbolize_global@@Base+0x1004>  // b.none
   1b5f4:	cmp	w2, #0x53
   1b5f8:	b.ne	1b5bc <__sanitizer_symbolize_global@@Base+0xe78>  // b.any
   1b5fc:	ldp	w2, w3, [x19, #56]
   1b600:	mov	x5, x21
   1b604:	ldr	x1, [x19, #48]
   1b608:	mov	w4, w28
   1b60c:	mov	x0, x20
   1b610:	bl	1b304 <__sanitizer_symbolize_global@@Base+0xbc0>
   1b614:	b	1b584 <__sanitizer_symbolize_global@@Base+0xe40>
   1b618:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b61c:	add	x1, x1, #0x8f1
   1b620:	mov	x0, x20
   1b624:	bl	18bf8 <OnPrint@@Base+0x390>
   1b628:	b	1b584 <__sanitizer_symbolize_global@@Base+0xe40>
   1b62c:	ldr	w2, [sp, #108]
   1b630:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1b634:	add	x1, x1, #0xc86
   1b638:	mov	x0, x20
   1b63c:	bl	18bf8 <OnPrint@@Base+0x390>
   1b640:	b	1b584 <__sanitizer_symbolize_global@@Base+0xe40>
   1b644:	ldr	x2, [x19]
   1b648:	adrp	x1, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1b64c:	add	x1, x1, #0xa93
   1b650:	mov	x0, x20
   1b654:	bl	18bf8 <OnPrint@@Base+0x390>
   1b658:	b	1b584 <__sanitizer_symbolize_global@@Base+0xe40>
   1b65c:	ldr	x0, [x19, #8]
   1b660:	mov	x1, x21
   1b664:	bl	1002c <__sancov_default_options@@Base+0x1ba8>
   1b668:	b	1b680 <__sanitizer_symbolize_global@@Base+0xf3c>
   1b66c:	ldr	x2, [x19, #16]
   1b670:	b	1b648 <__sanitizer_symbolize_global@@Base+0xf04>
   1b674:	ldr	x0, [x19, #32]
   1b678:	mov	x1, x22
   1b67c:	bl	1b1b8 <__sanitizer_symbolize_global@@Base+0xa74>
   1b680:	mov	x2, x0
   1b684:	add	x1, x26, #0x67b
   1b688:	b	1b650 <__sanitizer_symbolize_global@@Base+0xf0c>
   1b68c:	ldr	x2, [x19, #40]
   1b690:	cmn	x2, #0x1
   1b694:	b.ne	1b648 <__sanitizer_symbolize_global@@Base+0xf04>  // b.any
   1b698:	mov	x2, #0x0                   	// #0
   1b69c:	b	1b648 <__sanitizer_symbolize_global@@Base+0xf04>
   1b6a0:	mov	x1, x21
   1b6a4:	ldr	x0, [x19, #48]
   1b6a8:	b	1b664 <__sanitizer_symbolize_global@@Base+0xf20>
   1b6ac:	ldr	w2, [x19, #56]
   1b6b0:	mov	x1, x23
   1b6b4:	b	1b638 <__sanitizer_symbolize_global@@Base+0xef4>
   1b6b8:	ldr	w2, [x19, #60]
   1b6bc:	b	1b6b0 <__sanitizer_symbolize_global@@Base+0xf6c>
   1b6c0:	ldr	x0, [x19, #32]
   1b6c4:	cbz	x0, 1b584 <__sanitizer_symbolize_global@@Base+0xe40>
   1b6c8:	mov	x1, x22
   1b6cc:	bl	1b1b8 <__sanitizer_symbolize_global@@Base+0xa74>
   1b6d0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b6d4:	mov	x2, x0
   1b6d8:	add	x1, x1, #0x9a0
   1b6dc:	mov	x0, x20
   1b6e0:	bl	18bf8 <OnPrint@@Base+0x390>
   1b6e4:	ldr	x0, [x19, #48]
   1b6e8:	cbnz	x0, 1b584 <__sanitizer_symbolize_global@@Base+0xe40>
   1b6ec:	ldr	x2, [x19, #40]
   1b6f0:	cmn	x2, #0x1
   1b6f4:	b.eq	1b584 <__sanitizer_symbolize_global@@Base+0xe40>  // b.none
   1b6f8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b6fc:	add	x1, x1, #0x9a6
   1b700:	b	1b650 <__sanitizer_symbolize_global@@Base+0xf0c>
   1b704:	ldr	x1, [x19, #48]
   1b708:	cbz	x1, 1b71c <__sanitizer_symbolize_global@@Base+0xfd8>
   1b70c:	ldp	w2, w3, [x19, #56]
   1b710:	mov	x5, x21
   1b714:	mov	w4, w28
   1b718:	b	1b60c <__sanitizer_symbolize_global@@Base+0xec8>
   1b71c:	ldr	x1, [x19, #8]
   1b720:	cbz	x1, 1b73c <__sanitizer_symbolize_global@@Base+0xff8>
   1b724:	ldr	w3, [x19, #24]
   1b728:	mov	x4, x21
   1b72c:	ldr	x2, [x19, #16]
   1b730:	mov	x0, x20
   1b734:	bl	1b3f4 <__sanitizer_symbolize_global@@Base+0xcb0>
   1b738:	b	1b584 <__sanitizer_symbolize_global@@Base+0xe40>
   1b73c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b740:	add	x1, x1, #0x9ad
   1b744:	b	1b620 <__sanitizer_symbolize_global@@Base+0xedc>
   1b748:	ldr	x2, [x19]
   1b74c:	tbnz	x2, #60, 1b584 <__sanitizer_symbolize_global@@Base+0xe40>
   1b750:	ldr	x0, [x19, #8]
   1b754:	cbz	x0, 1b774 <__sanitizer_symbolize_global@@Base+0x1030>
   1b758:	bl	10088 <__sancov_default_options@@Base+0x1c04>
   1b75c:	mov	x1, x0
   1b760:	adrp	x4, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b764:	ldr	w3, [x19, #24]
   1b768:	add	x4, x4, #0x60f
   1b76c:	ldr	x2, [x19, #16]
   1b770:	b	1b730 <__sanitizer_symbolize_global@@Base+0xfec>
   1b774:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b778:	add	x1, x1, #0x9c0
   1b77c:	b	1b650 <__sanitizer_symbolize_global@@Base+0xf0c>
   1b780:	ldp	x21, x22, [sp, #16]
   1b784:	ldp	x23, x24, [sp, #32]
   1b788:	ldp	x25, x26, [sp, #48]
   1b78c:	ldp	x27, x28, [sp, #64]
   1b790:	ldr	x30, [sp, #80]
   1b794:	ldp	x19, x20, [sp], #112
   1b798:	ret
   1b79c:	ldr	x0, [x0, #24]
   1b7a0:	ret
   1b7a4:	mov	x0, #0x22                  	// #34
   1b7a8:	ret
   1b7ac:	stp	x19, x20, [sp, #-352]!
   1b7b0:	mov	x20, x2
   1b7b4:	ldr	x2, [x0]
   1b7b8:	stp	x21, x22, [sp, #16]
   1b7bc:	mov	x21, x3
   1b7c0:	stp	x23, x30, [sp, #32]
   1b7c4:	add	x22, sp, #0x50
   1b7c8:	mov	x23, #0x110                 	// #272
   1b7cc:	ldr	x2, [x2, #24]
   1b7d0:	blr	x2
   1b7d4:	mov	w1, w0
   1b7d8:	add	x3, sp, #0x40
   1b7dc:	mov	x2, #0x1                   	// #1
   1b7e0:	mov	x19, x0
   1b7e4:	mov	w0, #0x4204                	// #16900
   1b7e8:	stp	x22, x23, [sp, #64]
   1b7ec:	bl	15484 <__sanitizer_set_report_fd@@Base+0x29d0>
   1b7f0:	add	x1, sp, #0x3c
   1b7f4:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   1b7f8:	tst	w0, #0xff
   1b7fc:	b.eq	1b840 <__sanitizer_symbolize_global@@Base+0x10fc>  // b.none
   1b800:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b804:	ldr	x0, [x0, #3680]
   1b808:	ldr	w0, [x0]
   1b80c:	cbz	w0, 1b824 <__sanitizer_symbolize_global@@Base+0x10e0>
   1b810:	ldr	w2, [sp, #60]
   1b814:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b818:	mov	w1, w19
   1b81c:	add	x0, x0, #0x9f2
   1b820:	bl	18b74 <OnPrint@@Base+0x30c>
   1b824:	ldr	w0, [sp, #60]
   1b828:	cmp	w0, #0x3
   1b82c:	csetm	w0, eq  // eq = none
   1b830:	ldp	x21, x22, [sp, #16]
   1b834:	ldp	x23, x30, [sp, #32]
   1b838:	ldp	x19, x20, [sp], #352
   1b83c:	ret
   1b840:	ldr	x0, [sp, #328]
   1b844:	str	x0, [x21]
   1b848:	mov	x2, x23
   1b84c:	mov	x1, x22
   1b850:	mov	x0, x20
   1b854:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1b858:	mov	w0, #0x1                   	// #1
   1b85c:	b	1b830 <__sanitizer_symbolize_global@@Base+0x10ec>
   1b860:	stp	x19, x20, [sp, #-208]!
   1b864:	mov	x4, #0x0                   	// #0
   1b868:	mov	x20, x0
   1b86c:	mov	x19, x1
   1b870:	mov	x3, #0x0                   	// #0
   1b874:	mov	x2, #0x0                   	// #0
   1b878:	mov	x1, #0x0                   	// #0
   1b87c:	mov	w0, #0x3                   	// #3
   1b880:	stp	x21, x22, [sp, #16]
   1b884:	stp	x23, x24, [sp, #32]
   1b888:	stp	x25, x26, [sp, #48]
   1b88c:	str	x30, [sp, #64]
   1b890:	bl	154f0 <__sanitizer_set_report_fd@@Base+0x2a3c>
   1b894:	mov	x22, x0
   1b898:	cbnz	w0, 1b8b4 <__sanitizer_symbolize_global@@Base+0x1170>
   1b89c:	mov	x4, #0x0                   	// #0
   1b8a0:	mov	x3, #0x0                   	// #0
   1b8a4:	mov	x2, #0x0                   	// #0
   1b8a8:	mov	x1, #0x1                   	// #1
   1b8ac:	mov	w0, #0x4                   	// #4
   1b8b0:	bl	154f0 <__sanitizer_set_report_fd@@Base+0x2a3c>
   1b8b4:	add	x24, sp, #0x58
   1b8b8:	add	x21, x24, #0x10
   1b8bc:	mov	x0, x21
   1b8c0:	bl	1535c <__sanitizer_set_report_fd@@Base+0x28a8>
   1b8c4:	stp	x20, x19, [sp, #88]
   1b8c8:	bl	154b0 <__sanitizer_set_report_fd@@Base+0x29fc>
   1b8cc:	str	xzr, [sp, #192]
   1b8d0:	str	x0, [sp, #200]
   1b8d4:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1b8d8:	mov	w2, #0x0                   	// #0
   1b8dc:	add	x25, x0, #0x200, lsl #12
   1b8e0:	mov	x19, x0
   1b8e4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b8e8:	mov	x0, x25
   1b8ec:	add	x1, x1, #0xa26
   1b8f0:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1b8f4:	mov	x23, x0
   1b8f8:	mov	x1, x19
   1b8fc:	bl	16e30 <__sanitizer_set_report_fd@@Base+0x437c>
   1b900:	tst	w0, #0xff
   1b904:	b.ne	1b928 <__sanitizer_symbolize_global@@Base+0x11e4>  // b.any
   1b908:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b90c:	add	x2, x2, #0xa3b
   1b910:	mov	x4, #0x0                   	// #0
   1b914:	mov	x3, #0x0                   	// #0
   1b918:	mov	w1, #0x152                 	// #338
   1b91c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b920:	add	x0, x0, #0xa78
   1b924:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1b928:	mov	x0, x21
   1b92c:	adrp	x21, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b930:	add	x21, x21, #0xcc4
   1b934:	mov	x20, #0x0                   	// #0
   1b938:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1b93c:	adrp	x19, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1b940:	add	x19, x19, #0xc8
   1b944:	mov	x0, x19
   1b948:	bl	15610 <__sanitizer_set_report_fd@@Base+0x2b5c>
   1b94c:	ldr	w1, [x21, x20, lsl #2]
   1b950:	mov	x0, x19
   1b954:	add	x20, x20, #0x1
   1b958:	bl	15628 <__sanitizer_set_report_fd@@Base+0x2b74>
   1b95c:	cmp	x20, #0x7
   1b960:	b.ne	1b94c <__sanitizer_symbolize_global@@Base+0x1208>  // b.any
   1b964:	add	x20, x19, #0x80
   1b968:	mov	x1, x19
   1b96c:	mov	x2, x20
   1b970:	mov	w0, #0x0                   	// #0
   1b974:	bl	155fc <__sanitizer_set_report_fd@@Base+0x2b48>
   1b978:	sxtw	x3, w0
   1b97c:	cbz	w0, 1b994 <__sanitizer_symbolize_global@@Base+0x1250>
   1b980:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1b984:	mov	x4, #0x0                   	// #0
   1b988:	add	x2, x2, #0xaca
   1b98c:	mov	w1, #0x1ac                 	// #428
   1b990:	b	1b91c <__sanitizer_symbolize_global@@Base+0x11d8>
   1b994:	mov	x3, x24
   1b998:	mov	w2, #0x700                 	// #1792
   1b99c:	mov	x6, #0x0                   	// #0
   1b9a0:	mov	x5, #0x0                   	// #0
   1b9a4:	mov	x4, #0x0                   	// #0
   1b9a8:	add	x1, x23, x25
   1b9ac:	movk	w2, #0x80, lsl #16
   1b9b0:	adrp	x0, 1c000 <__sanitizer_symbolize_global@@Base+0x18bc>
   1b9b4:	add	x0, x0, #0x60
   1b9b8:	bl	159bc <__sanitizer_set_report_fd@@Base+0x2f08>
   1b9bc:	mov	x2, #0x0                   	// #0
   1b9c0:	mov	x21, x0
   1b9c4:	mov	x1, x20
   1b9c8:	add	x26, sp, #0x54
   1b9cc:	mov	w0, #0x2                   	// #2
   1b9d0:	bl	155fc <__sanitizer_set_report_fd@@Base+0x2b48>
   1b9d4:	mov	x1, x26
   1b9d8:	mov	x0, x21
   1b9dc:	str	wzr, [sp, #84]
   1b9e0:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   1b9e4:	tst	w0, #0xff
   1b9e8:	b.eq	1ba54 <__sanitizer_symbolize_global@@Base+0x1310>  // b.none
   1b9ec:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1b9f0:	ldr	x0, [x0, #3680]
   1b9f4:	ldr	w0, [x0]
   1b9f8:	cbz	w0, 1ba0c <__sanitizer_symbolize_global@@Base+0x12c8>
   1b9fc:	ldr	w1, [sp, #84]
   1ba00:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1ba04:	add	x0, x0, #0xada
   1ba08:	bl	18b74 <OnPrint@@Base+0x30c>
   1ba0c:	add	x0, x24, #0x10
   1ba10:	bl	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   1ba14:	mov	x1, x25
   1ba18:	mov	x0, x23
   1ba1c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1ba20:	cbnz	w22, 1ba3c <__sanitizer_symbolize_global@@Base+0x12f8>
   1ba24:	mov	x4, #0x0                   	// #0
   1ba28:	mov	x3, #0x0                   	// #0
   1ba2c:	mov	x2, #0x0                   	// #0
   1ba30:	mov	x1, #0x0                   	// #0
   1ba34:	mov	w0, #0x4                   	// #4
   1ba38:	bl	154f0 <__sanitizer_set_report_fd@@Base+0x2a3c>
   1ba3c:	ldp	x21, x22, [sp, #16]
   1ba40:	ldp	x23, x24, [sp, #32]
   1ba44:	ldp	x25, x26, [sp, #48]
   1ba48:	ldr	x30, [sp, #64]
   1ba4c:	ldp	x19, x20, [sp], #208
   1ba50:	ret
   1ba54:	adrp	x20, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ba58:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ba5c:	ldr	x0, [x20, #3560]
   1ba60:	str	x21, [x0]
   1ba64:	bl	154b0 <__sanitizer_set_report_fd@@Base+0x29fc>
   1ba68:	ldr	x1, [x19, #3544]
   1ba6c:	mov	x4, #0x0                   	// #0
   1ba70:	mov	x3, #0x0                   	// #0
   1ba74:	mov	x2, #0x0                   	// #0
   1ba78:	str	x0, [x1]
   1ba7c:	mov	x1, x21
   1ba80:	mov	w0, #0x6d61                	// #28001
   1ba84:	movk	w0, #0x5961, lsl #16
   1ba88:	bl	154f0 <__sanitizer_set_report_fd@@Base+0x2a3c>
   1ba8c:	add	x0, x24, #0x10
   1ba90:	bl	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   1ba94:	ldr	x0, [sp, #192]
   1ba98:	cbnz	x0, 1baa4 <__sanitizer_symbolize_global@@Base+0x1360>
   1ba9c:	bl	6b30 <sched_yield@plt>
   1baa0:	b	1ba94 <__sanitizer_symbolize_global@@Base+0x1350>
   1baa4:	mov	w2, #0x40000000            	// #1073741824
   1baa8:	mov	x1, #0x0                   	// #0
   1baac:	mov	w0, w21
   1bab0:	bl	15498 <__sanitizer_set_report_fd@@Base+0x29e4>
   1bab4:	mov	x1, x26
   1bab8:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   1babc:	tst	w0, #0xff
   1bac0:	b.eq	1baec <__sanitizer_symbolize_global@@Base+0x13a8>  // b.none
   1bac4:	ldr	w1, [sp, #84]
   1bac8:	cmp	w1, #0x4
   1bacc:	b.eq	1baa4 <__sanitizer_symbolize_global@@Base+0x1360>  // b.none
   1bad0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bad4:	ldr	x0, [x0, #3680]
   1bad8:	ldr	w0, [x0]
   1badc:	cbz	w0, 1baec <__sanitizer_symbolize_global@@Base+0x13a8>
   1bae0:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1bae4:	add	x0, x0, #0xb07
   1bae8:	bl	18b74 <OnPrint@@Base+0x30c>
   1baec:	ldr	x20, [x20, #3560]
   1baf0:	ldr	x19, [x19, #3544]
   1baf4:	str	xzr, [x20]
   1baf8:	str	xzr, [x19]
   1bafc:	b	1ba14 <__sanitizer_symbolize_global@@Base+0x12d0>
   1bb00:	ldr	x4, [x0, #24]
   1bb04:	str	x30, [sp, #-16]!
   1bb08:	cmp	x1, x4
   1bb0c:	b.cc	1bb2c <__sanitizer_symbolize_global@@Base+0x13e8>  // b.lo, b.ul, b.last
   1bb10:	mov	x3, x1
   1bb14:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1bb18:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1bb1c:	add	x2, x2, #0xb38
   1bb20:	add	x0, x0, #0xa78
   1bb24:	mov	w1, #0x202                 	// #514
   1bb28:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1bb2c:	add	x0, x0, #0x8
   1bb30:	bl	92f0 <__lsan_do_recoverable_leak_check@@Base+0x994>
   1bb34:	ldr	x0, [x0]
   1bb38:	ldr	x30, [sp], #16
   1bb3c:	ret
   1bb40:	stp	x19, x20, [sp, #-80]!
   1bb44:	mov	x20, #0x0                   	// #0
   1bb48:	stp	x23, x24, [sp, #32]
   1bb4c:	adrp	x23, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bb50:	add	x24, sp, #0x4c
   1bb54:	stp	x25, x30, [sp, #48]
   1bb58:	ldr	x25, [x23, #3680]
   1bb5c:	stp	x21, x22, [sp, #16]
   1bb60:	adrp	x22, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1bb64:	mov	x21, x0
   1bb68:	add	x22, x22, #0xb75
   1bb6c:	ldr	x0, [x21, #32]
   1bb70:	cmp	x20, x0
   1bb74:	b.cs	1bbf4 <__sanitizer_symbolize_global@@Base+0x14b0>  // b.hs, b.nlast
   1bb78:	mov	x1, x20
   1bb7c:	add	x0, x21, #0x8
   1bb80:	bl	1bb00 <__sanitizer_symbolize_global@@Base+0x13bc>
   1bb84:	mov	w1, w0
   1bb88:	mov	x3, #0x0                   	// #0
   1bb8c:	mov	x2, #0x0                   	// #0
   1bb90:	mov	x19, x0
   1bb94:	mov	w0, #0x11                  	// #17
   1bb98:	bl	15484 <__sanitizer_set_report_fd@@Base+0x29d0>
   1bb9c:	mov	x1, x24
   1bba0:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   1bba4:	tst	w0, #0xff
   1bba8:	b.ne	1bbd8 <__sanitizer_symbolize_global@@Base+0x1494>  // b.any
   1bbac:	ldr	x0, [x23, #3680]
   1bbb0:	ldr	w0, [x0]
   1bbb4:	sxtw	x0, w0
   1bbb8:	cmp	x0, #0x1
   1bbbc:	b.ls	1bbd0 <__sanitizer_symbolize_global@@Base+0x148c>  // b.plast
   1bbc0:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1bbc4:	mov	w1, w19
   1bbc8:	add	x0, x0, #0xb5b
   1bbcc:	bl	18b74 <OnPrint@@Base+0x30c>
   1bbd0:	add	x20, x20, #0x1
   1bbd4:	b	1bb6c <__sanitizer_symbolize_global@@Base+0x1428>
   1bbd8:	ldr	w0, [x25]
   1bbdc:	cbz	w0, 1bbd0 <__sanitizer_symbolize_global@@Base+0x148c>
   1bbe0:	ldr	w2, [sp, #76]
   1bbe4:	mov	w1, w19
   1bbe8:	mov	x0, x22
   1bbec:	bl	18b74 <OnPrint@@Base+0x30c>
   1bbf0:	b	1bbd0 <__sanitizer_symbolize_global@@Base+0x148c>
   1bbf4:	ldp	x21, x22, [sp, #16]
   1bbf8:	ldp	x23, x24, [sp, #32]
   1bbfc:	ldp	x25, x30, [sp, #48]
   1bc00:	ldp	x19, x20, [sp], #80
   1bc04:	ret
   1bc08:	stp	x19, x20, [sp, #-32]!
   1bc0c:	mov	x20, x0
   1bc10:	mov	x19, #0x0                   	// #0
   1bc14:	stp	x21, x30, [sp, #16]
   1bc18:	add	x21, x0, #0x8
   1bc1c:	ldr	x0, [x20, #32]
   1bc20:	cmp	x19, x0
   1bc24:	b.cs	1bc50 <__sanitizer_symbolize_global@@Base+0x150c>  // b.hs, b.nlast
   1bc28:	mov	x1, x19
   1bc2c:	mov	x0, x21
   1bc30:	bl	1bb00 <__sanitizer_symbolize_global@@Base+0x13bc>
   1bc34:	add	x19, x19, #0x1
   1bc38:	mov	w1, w0
   1bc3c:	mov	x3, #0x0                   	// #0
   1bc40:	mov	x2, #0x0                   	// #0
   1bc44:	mov	w0, #0x8                   	// #8
   1bc48:	bl	15484 <__sanitizer_set_report_fd@@Base+0x29d0>
   1bc4c:	b	1bc1c <__sanitizer_symbolize_global@@Base+0x14d8>
   1bc50:	ldp	x21, x30, [sp, #16]
   1bc54:	ldp	x19, x20, [sp], #32
   1bc58:	ret
   1bc5c:	stp	x19, x20, [sp, #-96]!
   1bc60:	mov	w20, w0
   1bc64:	add	x19, sp, #0x28
   1bc68:	stp	x21, x30, [sp, #16]
   1bc6c:	mov	x0, x19
   1bc70:	stp	x1, x2, [sp, #40]
   1bc74:	bl	17350 <__sanitizer_set_report_fd@@Base+0x489c>
   1bc78:	str	x0, [sp, #56]
   1bc7c:	mov	x0, x19
   1bc80:	bl	1735c <__sanitizer_set_report_fd@@Base+0x48a8>
   1bc84:	strb	w0, [sp, #88]
   1bc88:	mov	x0, x19
   1bc8c:	bl	15b68 <__sanitizer_set_report_fd@@Base+0x30b4>
   1bc90:	str	w0, [sp, #92]
   1bc94:	mov	x0, x19
   1bc98:	bl	15ba8 <__sanitizer_set_report_fd@@Base+0x30f4>
   1bc9c:	ldp	x2, x3, [sp, #56]
   1bca0:	mov	w1, w20
   1bca4:	ldr	x4, [sp, #72]
   1bca8:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1bcac:	add	x0, x0, #0xba2
   1bcb0:	bl	18af0 <OnPrint@@Base+0x288>
   1bcb4:	adrp	x1, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1bcb8:	add	x0, x1, #0xc8
   1bcbc:	ldr	x21, [x0, #256]
   1bcc0:	cbz	x21, 1bd18 <__sanitizer_symbolize_global@@Base+0x15d4>
   1bcc4:	mov	x19, x1
   1bcc8:	mov	x0, x21
   1bccc:	cmp	w20, #0x6
   1bcd0:	b.ne	1bcfc <__sanitizer_symbolize_global@@Base+0x15b8>  // b.any
   1bcd4:	bl	1bc08 <__sanitizer_symbolize_global@@Base+0x14c4>
   1bcd8:	adrp	x0, 1b000 <__sanitizer_symbolize_global@@Base+0x8bc>
   1bcdc:	add	x0, x0, #0xd28
   1bce0:	bl	1ef20 <__sanitizer_symbolize_global@@Base+0x47dc>
   1bce4:	tst	w0, #0xff
   1bce8:	b.ne	1bd04 <__sanitizer_symbolize_global@@Base+0x15c0>  // b.any
   1bcec:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1bcf0:	add	x0, x0, #0xbd9
   1bcf4:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   1bcf8:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1bcfc:	bl	1bb40 <__sanitizer_symbolize_global@@Base+0x13fc>
   1bd00:	b	1bcd8 <__sanitizer_symbolize_global@@Base+0x1594>
   1bd04:	ldr	x0, [x21]
   1bd08:	add	x1, x19, #0xc8
   1bd0c:	str	xzr, [x1, #256]
   1bd10:	mov	x1, #0x1                   	// #1
   1bd14:	str	x1, [x0, #104]
   1bd18:	cmp	w20, #0x6
   1bd1c:	cset	w0, ne  // ne = any
   1bd20:	add	w0, w0, #0x1
   1bd24:	bl	15088 <__sanitizer_set_report_fd@@Base+0x25d4>
   1bd28:	stp	x19, x20, [sp, #-32]!
   1bd2c:	adrp	x19, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1bd30:	add	x19, x19, #0xc8
   1bd34:	str	x30, [sp, #16]
   1bd38:	ldr	x20, [x19, #256]
   1bd3c:	cbz	x20, 1bd64 <__sanitizer_symbolize_global@@Base+0x1620>
   1bd40:	bl	154b0 <__sanitizer_set_report_fd@@Base+0x29fc>
   1bd44:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1bd48:	ldr	x1, [x1, #3560]
   1bd4c:	ldr	x1, [x1]
   1bd50:	cmp	x0, x1
   1bd54:	b.ne	1bd64 <__sanitizer_symbolize_global@@Base+0x1620>  // b.any
   1bd58:	mov	x0, x20
   1bd5c:	bl	1bc08 <__sanitizer_symbolize_global@@Base+0x14c4>
   1bd60:	str	xzr, [x19, #256]
   1bd64:	ldr	x30, [sp, #16]
   1bd68:	ldp	x19, x20, [sp], #32
   1bd6c:	ret
   1bd70:	stp	x19, x20, [sp, #-48]!
   1bd74:	add	x19, x0, #0x8
   1bd78:	mov	x20, #0x0                   	// #0
   1bd7c:	stp	x21, x22, [sp, #16]
   1bd80:	mov	x21, x1
   1bd84:	ldr	x22, [x0, #24]
   1bd88:	str	x30, [sp, #32]
   1bd8c:	cmp	x20, x22
   1bd90:	b.eq	1bdb4 <__sanitizer_symbolize_global@@Base+0x1670>  // b.none
   1bd94:	mov	x1, x20
   1bd98:	mov	x0, x19
   1bd9c:	bl	92f0 <__lsan_do_recoverable_leak_check@@Base+0x994>
   1bda0:	ldr	x0, [x0]
   1bda4:	cmp	x0, x21
   1bda8:	b.eq	1bdc8 <__sanitizer_symbolize_global@@Base+0x1684>  // b.none
   1bdac:	add	x20, x20, #0x1
   1bdb0:	b	1bd8c <__sanitizer_symbolize_global@@Base+0x1648>
   1bdb4:	mov	w0, #0x0                   	// #0
   1bdb8:	ldp	x21, x22, [sp, #16]
   1bdbc:	ldr	x30, [sp, #32]
   1bdc0:	ldp	x19, x20, [sp], #48
   1bdc4:	ret
   1bdc8:	mov	w0, #0x1                   	// #1
   1bdcc:	b	1bdb8 <__sanitizer_symbolize_global@@Base+0x1674>
   1bdd0:	str	x30, [sp, #-32]!
   1bdd4:	add	x0, x0, #0x8
   1bdd8:	str	x1, [sp, #24]
   1bddc:	add	x1, sp, #0x18
   1bde0:	bl	1c2dc <__sanitizer_symbolize_global@@Base+0x1b98>
   1bde4:	ldr	x30, [sp], #32
   1bde8:	ret
   1bdec:	stp	x19, x20, [sp, #-80]!
   1bdf0:	mov	x19, x1
   1bdf4:	stp	x21, x22, [sp, #16]
   1bdf8:	add	x22, x0, #0x8
   1bdfc:	mov	x0, x22
   1be00:	stp	x23, x24, [sp, #32]
   1be04:	stp	x25, x30, [sp, #48]
   1be08:	bl	1bd70 <__sanitizer_symbolize_global@@Base+0x162c>
   1be0c:	ands	w20, w0, #0xff
   1be10:	b.ne	1bf1c <__sanitizer_symbolize_global@@Base+0x17d8>  // b.any
   1be14:	mov	x3, #0x0                   	// #0
   1be18:	mov	x2, #0x0                   	// #0
   1be1c:	mov	w1, w19
   1be20:	mov	w0, #0x10                  	// #16
   1be24:	bl	15484 <__sanitizer_set_report_fd@@Base+0x29d0>
   1be28:	mov	w24, w19
   1be2c:	add	x1, sp, #0x40
   1be30:	adrp	x21, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1be34:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   1be38:	tst	w0, #0xff
   1be3c:	b.eq	1be78 <__sanitizer_symbolize_global@@Base+0x1734>  // b.none
   1be40:	ldr	x21, [x21, #3680]
   1be44:	ldr	w0, [x21]
   1be48:	cbz	w0, 1be60 <__sanitizer_symbolize_global@@Base+0x171c>
   1be4c:	ldr	w2, [sp, #64]
   1be50:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1be54:	mov	x1, x19
   1be58:	add	x0, x0, #0xc04
   1be5c:	bl	18b74 <OnPrint@@Base+0x30c>
   1be60:	mov	w0, w20
   1be64:	ldp	x21, x22, [sp, #16]
   1be68:	ldp	x23, x24, [sp, #32]
   1be6c:	ldp	x25, x30, [sp, #48]
   1be70:	ldp	x19, x20, [sp], #80
   1be74:	ret
   1be78:	ldr	x0, [x21, #3680]
   1be7c:	ldr	w0, [x0]
   1be80:	sxtw	x0, w0
   1be84:	cmp	x0, #0x1
   1be88:	b.ls	1be9c <__sanitizer_symbolize_global@@Base+0x1758>  // b.plast
   1be8c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1be90:	mov	x1, x19
   1be94:	add	x0, x0, #0xc30
   1be98:	bl	18b74 <OnPrint@@Base+0x30c>
   1be9c:	add	x25, sp, #0x44
   1bea0:	add	x20, sp, #0x48
   1bea4:	mov	w2, #0x40000000            	// #1073741824
   1bea8:	mov	x1, x25
   1beac:	mov	w0, w24
   1beb0:	bl	15498 <__sanitizer_set_report_fd@@Base+0x29e4>
   1beb4:	mov	x1, x20
   1beb8:	mov	x23, x0
   1bebc:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   1bec0:	tst	w0, #0xff
   1bec4:	b.eq	1bed4 <__sanitizer_symbolize_global@@Base+0x1790>  // b.none
   1bec8:	ldr	w0, [sp, #72]
   1becc:	cmp	w0, #0x4
   1bed0:	b.eq	1bea4 <__sanitizer_symbolize_global@@Base+0x1760>  // b.none
   1bed4:	mov	x1, x20
   1bed8:	mov	x0, x23
   1bedc:	bl	14e84 <__sanitizer_set_report_fd@@Base+0x23d0>
   1bee0:	tst	w0, #0xff
   1bee4:	b.eq	1bf24 <__sanitizer_symbolize_global@@Base+0x17e0>  // b.none
   1bee8:	ldr	x21, [x21, #3680]
   1beec:	ldr	w0, [x21]
   1bef0:	cbz	w0, 1bf08 <__sanitizer_symbolize_global@@Base+0x17c4>
   1bef4:	ldr	w2, [sp, #72]
   1bef8:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1befc:	mov	x1, x19
   1bf00:	add	x0, x0, #0xc49
   1bf04:	bl	18b74 <OnPrint@@Base+0x30c>
   1bf08:	mov	w1, w19
   1bf0c:	mov	x3, #0x0                   	// #0
   1bf10:	mov	x2, #0x0                   	// #0
   1bf14:	mov	w0, #0x11                  	// #17
   1bf18:	bl	15484 <__sanitizer_set_report_fd@@Base+0x29d0>
   1bf1c:	mov	w20, #0x0                   	// #0
   1bf20:	b	1be60 <__sanitizer_symbolize_global@@Base+0x171c>
   1bf24:	ldr	w3, [sp, #68]
   1bf28:	and	w0, w3, #0xff
   1bf2c:	cmp	w0, #0x7f
   1bf30:	b.ne	1bf58 <__sanitizer_symbolize_global@@Base+0x1814>  // b.any
   1bf34:	ubfx	x3, x3, #8, #8
   1bf38:	cmp	w3, #0x13
   1bf3c:	b.eq	1bf58 <__sanitizer_symbolize_global@@Base+0x1814>  // b.none
   1bf40:	and	x3, x3, #0xff
   1bf44:	mov	w1, w24
   1bf48:	mov	x2, #0x0                   	// #0
   1bf4c:	mov	w0, #0x7                   	// #7
   1bf50:	bl	15484 <__sanitizer_set_report_fd@@Base+0x29d0>
   1bf54:	b	1bea4 <__sanitizer_symbolize_global@@Base+0x1760>
   1bf58:	mov	x1, x20
   1bf5c:	add	x0, x22, #0x8
   1bf60:	mov	w20, #0x1                   	// #1
   1bf64:	str	x19, [sp, #72]
   1bf68:	bl	1c2dc <__sanitizer_symbolize_global@@Base+0x1b98>
   1bf6c:	b	1be60 <__sanitizer_symbolize_global@@Base+0x171c>
   1bf70:	stp	x19, x20, [sp, #-128]!
   1bf74:	mov	x19, x0
   1bf78:	stp	x21, x22, [sp, #16]
   1bf7c:	add	x22, sp, #0x60
   1bf80:	ldr	w1, [x19, #40]
   1bf84:	mov	x0, x22
   1bf88:	stp	x23, x24, [sp, #32]
   1bf8c:	add	x23, sp, #0x48
   1bf90:	stp	x25, x30, [sp, #48]
   1bf94:	mov	w24, #0x0                   	// #0
   1bf98:	bl	1603c <__sanitizer_set_report_fd@@Base+0x3588>
   1bf9c:	mov	x0, x23
   1bfa0:	mov	x1, #0x1                   	// #1
   1bfa4:	stp	xzr, xzr, [sp, #72]
   1bfa8:	str	xzr, [sp, #88]
   1bfac:	bl	1c2c8 <__sanitizer_symbolize_global@@Base+0x1b84>
   1bfb0:	mov	x0, x23
   1bfb4:	mov	x1, #0x80                  	// #128
   1bfb8:	bl	1c2c8 <__sanitizer_symbolize_global@@Base+0x1b84>
   1bfbc:	mov	x1, x23
   1bfc0:	mov	x0, x22
   1bfc4:	bl	15dd4 <__sanitizer_set_report_fd@@Base+0x3320>
   1bfc8:	cbz	w0, 1c000 <__sanitizer_symbolize_global@@Base+0x18bc>
   1bfcc:	ldr	x20, [sp, #72]
   1bfd0:	cmp	w0, #0x1
   1bfd4:	ldr	x25, [sp, #88]
   1bfd8:	cset	w21, eq  // eq = none
   1bfdc:	add	x25, x20, x25, lsl #3
   1bfe0:	cmp	x20, x25
   1bfe4:	b.eq	1c034 <__sanitizer_symbolize_global@@Base+0x18f0>  // b.none
   1bfe8:	ldr	x1, [x20], #8
   1bfec:	mov	x0, x19
   1bff0:	bl	1bdec <__sanitizer_symbolize_global@@Base+0x16a8>
   1bff4:	ands	w0, w0, #0xff
   1bff8:	csel	w21, w21, w0, eq  // eq = none
   1bffc:	b	1bfe0 <__sanitizer_symbolize_global@@Base+0x189c>
   1c000:	mov	x0, x19
   1c004:	mov	w19, #0x0                   	// #0
   1c008:	bl	1bb40 <__sanitizer_symbolize_global@@Base+0x13fc>
   1c00c:	ldp	x0, x1, [sp, #72]
   1c010:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1c014:	mov	x0, x22
   1c018:	bl	156c0 <__sanitizer_set_report_fd@@Base+0x2c0c>
   1c01c:	mov	w0, w19
   1c020:	ldp	x21, x22, [sp, #16]
   1c024:	ldp	x23, x24, [sp, #32]
   1c028:	ldp	x25, x30, [sp, #48]
   1c02c:	ldp	x19, x20, [sp], #128
   1c030:	ret
   1c034:	add	w24, w24, #0x1
   1c038:	eor	w21, w21, #0x1
   1c03c:	cmp	w24, #0x1d
   1c040:	cset	w0, gt
   1c044:	orr	w21, w0, w21
   1c048:	tst	w21, #0xff
   1c04c:	b.eq	1bfbc <__sanitizer_symbolize_global@@Base+0x1878>  // b.none
   1c050:	ldr	x0, [x19, #32]
   1c054:	cmp	x0, #0x0
   1c058:	cset	w19, ne  // ne = any
   1c05c:	b	1c00c <__sanitizer_symbolize_global@@Base+0x18c8>
   1c060:	stp	x19, x20, [sp, #-352]!
   1c064:	mov	x1, #0x9                   	// #9
   1c068:	mov	x19, x0
   1c06c:	mov	x4, #0x0                   	// #0
   1c070:	mov	x3, #0x0                   	// #0
   1c074:	mov	x2, #0x0                   	// #0
   1c078:	mov	w0, #0x1                   	// #1
   1c07c:	stp	x21, x22, [sp, #16]
   1c080:	stp	x23, x24, [sp, #32]
   1c084:	stp	x25, x26, [sp, #48]
   1c088:	stp	x27, x28, [sp, #64]
   1c08c:	str	x30, [sp, #80]
   1c090:	bl	154f0 <__sanitizer_set_report_fd@@Base+0x2a3c>
   1c094:	bl	154bc <__sanitizer_set_report_fd@@Base+0x2a08>
   1c098:	ldr	x1, [x19, #112]
   1c09c:	cmp	x0, x1
   1c0a0:	b.eq	1c0ac <__sanitizer_symbolize_global@@Base+0x1968>  // b.none
   1c0a4:	mov	w0, #0x4                   	// #4
   1c0a8:	bl	15088 <__sanitizer_set_report_fd@@Base+0x25d4>
   1c0ac:	add	x20, x19, #0x10
   1c0b0:	adrp	x24, 1b000 <__sanitizer_symbolize_global@@Base+0x8bc>
   1c0b4:	mov	x0, x20
   1c0b8:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1c0bc:	mov	x0, x20
   1c0c0:	bl	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   1c0c4:	add	x0, x24, #0xd28
   1c0c8:	bl	1eee8 <__sanitizer_symbolize_global@@Base+0x47a4>
   1c0cc:	tst	w0, #0xff
   1c0d0:	b.ne	1c0e4 <__sanitizer_symbolize_global@@Base+0x19a0>  // b.any
   1c0d4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c0d8:	add	x0, x0, #0xc7e
   1c0dc:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   1c0e0:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1c0e4:	bl	154bc <__sanitizer_set_report_fd@@Base+0x2a08>
   1c0e8:	add	x22, sp, #0x98
   1c0ec:	mov	x21, x0
   1c0f0:	add	x23, x22, #0x10
   1c0f4:	adrp	x20, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1c0f8:	add	x0, x20, #0xcb8
   1c0fc:	mov	x1, #0x1                   	// #1
   1c100:	stp	x19, x0, [sp, #152]
   1c104:	mov	x0, x23
   1c108:	stp	xzr, xzr, [sp, #168]
   1c10c:	str	xzr, [sp, #184]
   1c110:	bl	1c2c8 <__sanitizer_symbolize_global@@Base+0x1b84>
   1c114:	mov	x0, x23
   1c118:	mov	x1, #0x400                 	// #1024
   1c11c:	bl	1c2c8 <__sanitizer_symbolize_global@@Base+0x1b84>
   1c120:	str	w21, [sp, #192]
   1c124:	adrp	x21, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1c128:	add	x0, x21, #0xc8
   1c12c:	add	x23, sp, #0x68
   1c130:	mov	x1, #0x2000                	// #8192
   1c134:	stp	xzr, xzr, [sp, #104]
   1c138:	str	xzr, [sp, #120]
   1c13c:	str	x22, [x0, #256]
   1c140:	mov	x0, x23
   1c144:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   1c148:	ldr	x1, [sp, #120]
   1c14c:	mov	x0, #0x1fff                	// #8191
   1c150:	cmp	x1, x0
   1c154:	b.hi	1c18c <__sanitizer_symbolize_global@@Base+0x1a48>  // b.pmore
   1c158:	ldr	x1, [sp, #112]
   1c15c:	cmp	x1, x0
   1c160:	b.hi	1c170 <__sanitizer_symbolize_global@@Base+0x1a2c>  // b.pmore
   1c164:	mov	x0, x23
   1c168:	mov	x1, #0x2000                	// #8192
   1c16c:	bl	98d8 <__lsan_do_recoverable_leak_check@@Base+0xf7c>
   1c170:	ldr	x3, [sp, #104]
   1c174:	mov	x2, #0x2000                	// #8192
   1c178:	ldr	x0, [sp, #120]
   1c17c:	mov	w1, #0x0                   	// #0
   1c180:	sub	x2, x2, x0
   1c184:	add	x0, x3, x0
   1c188:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1c18c:	add	x23, sp, #0x80
   1c190:	mov	x25, #0x2000                	// #8192
   1c194:	mov	x0, x23
   1c198:	mov	x2, #0x18                  	// #24
   1c19c:	mov	w1, #0x0                   	// #0
   1c1a0:	str	x25, [sp, #120]
   1c1a4:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1c1a8:	adrp	x26, 1b000 <__sanitizer_symbolize_global@@Base+0x8bc>
   1c1ac:	mov	w27, #0x4                   	// #4
   1c1b0:	add	x28, sp, #0xc8
   1c1b4:	add	x26, x26, #0xc5c
   1c1b8:	str	x25, [sp, #144]
   1c1bc:	adrp	x25, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c1c0:	add	x25, x25, #0xcc4
   1c1c4:	ldr	x0, [sp, #104]
   1c1c8:	movk	w27, #0x800, lsl #16
   1c1cc:	str	x0, [sp, #128]
   1c1d0:	mov	x0, x23
   1c1d4:	mov	x23, #0x0                   	// #0
   1c1d8:	mov	x1, #0x0                   	// #0
   1c1dc:	bl	15500 <__sanitizer_set_report_fd@@Base+0x2a4c>
   1c1e0:	mov	x2, #0x98                  	// #152
   1c1e4:	mov	w1, #0x0                   	// #0
   1c1e8:	mov	x0, x28
   1c1ec:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1c1f0:	ldr	w0, [x25, x23, lsl #2]
   1c1f4:	mov	x1, x28
   1c1f8:	add	x23, x23, #0x1
   1c1fc:	mov	x2, #0x0                   	// #0
   1c200:	str	x26, [sp, #200]
   1c204:	str	w27, [sp, #336]
   1c208:	bl	15520 <__sanitizer_set_report_fd@@Base+0x2a6c>
   1c20c:	cmp	x23, #0x7
   1c210:	b.ne	1c1e0 <__sanitizer_symbolize_global@@Base+0x1a9c>  // b.any
   1c214:	mov	x0, x22
   1c218:	bl	1bf70 <__sanitizer_symbolize_global@@Base+0x182c>
   1c21c:	tst	w0, #0xff
   1c220:	b.ne	1c248 <__sanitizer_symbolize_global@@Base+0x1b04>  // b.any
   1c224:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c228:	ldr	x0, [x0, #3680]
   1c22c:	ldr	w0, [x0]
   1c230:	cbz	w0, 1c240 <__sanitizer_symbolize_global@@Base+0x1afc>
   1c234:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c238:	add	x0, x0, #0xca6
   1c23c:	bl	18b74 <OnPrint@@Base+0x30c>
   1c240:	mov	w22, #0x3                   	// #3
   1c244:	b	1c260 <__sanitizer_symbolize_global@@Base+0x1b1c>
   1c248:	ldp	x2, x1, [x19]
   1c24c:	add	x0, x22, #0x8
   1c250:	blr	x2
   1c254:	mov	x0, x22
   1c258:	mov	w22, #0x0                   	// #0
   1c25c:	bl	1bb40 <__sanitizer_symbolize_global@@Base+0x13fc>
   1c260:	add	x0, x24, #0xd28
   1c264:	bl	1ef20 <__sanitizer_symbolize_global@@Base+0x47dc>
   1c268:	tst	w0, #0xff
   1c26c:	b.ne	1c27c <__sanitizer_symbolize_global@@Base+0x1b38>  // b.any
   1c270:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c274:	add	x0, x0, #0xbd9
   1c278:	b	1c0dc <__sanitizer_symbolize_global@@Base+0x1998>
   1c27c:	mov	x0, #0x1                   	// #1
   1c280:	str	x0, [x19, #104]
   1c284:	ldr	x0, [sp, #104]
   1c288:	add	x21, x21, #0xc8
   1c28c:	ldr	x1, [sp, #112]
   1c290:	add	x20, x20, #0xcb8
   1c294:	str	xzr, [x21, #256]
   1c298:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1c29c:	str	x20, [sp, #160]
   1c2a0:	ldp	x0, x1, [sp, #168]
   1c2a4:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1c2a8:	mov	w0, w22
   1c2ac:	ldp	x21, x22, [sp, #16]
   1c2b0:	ldp	x23, x24, [sp, #32]
   1c2b4:	ldp	x25, x26, [sp, #48]
   1c2b8:	ldp	x27, x28, [sp, #64]
   1c2bc:	ldr	x30, [sp, #80]
   1c2c0:	ldp	x19, x20, [sp], #352
   1c2c4:	ret
   1c2c8:	ldr	x2, [x0, #8]
   1c2cc:	cmp	x1, x2, lsr #3
   1c2d0:	b.ls	1c2d8 <__sanitizer_symbolize_global@@Base+0x1b94>  // b.plast
   1c2d4:	b	9a10 <__lsan_do_recoverable_leak_check@@Base+0x10b4>
   1c2d8:	ret
   1c2dc:	stp	x19, x20, [sp, #-32]!
   1c2e0:	ldp	x4, x3, [x0, #8]
   1c2e4:	str	x30, [sp, #16]
   1c2e8:	lsr	x4, x4, #3
   1c2ec:	cmp	x3, x4
   1c2f0:	b.ls	1c30c <__sanitizer_symbolize_global@@Base+0x1bc8>  // b.plast
   1c2f4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1c2f8:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1c2fc:	add	x2, x2, #0x373
   1c300:	add	x0, x0, #0x5c5
   1c304:	mov	w1, #0x1be                 	// #446
   1c308:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1c30c:	mov	x19, x0
   1c310:	mov	x20, x1
   1c314:	b.ne	1c32c <__sanitizer_symbolize_global@@Base+0x1be8>  // b.any
   1c318:	add	x0, x3, #0x1
   1c31c:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
   1c320:	mov	x1, x0
   1c324:	mov	x0, x19
   1c328:	bl	9a10 <__lsan_do_recoverable_leak_check@@Base+0x10b4>
   1c32c:	ldr	x0, [x19, #16]
   1c330:	mov	x2, #0x8                   	// #8
   1c334:	ldr	x30, [sp, #16]
   1c338:	add	x1, x0, #0x1
   1c33c:	str	x1, [x19, #16]
   1c340:	mov	x1, x20
   1c344:	ldr	x3, [x19]
   1c348:	ldp	x19, x20, [sp], #32
   1c34c:	add	x0, x3, x0, lsl #3
   1c350:	b	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1c354:	ldr	x0, [x0, #32]
   1c358:	ret
   1c35c:	stp	x19, x20, [sp, #-48]!
   1c360:	mov	x19, x0
   1c364:	mov	x20, #0x0                   	// #0
   1c368:	stp	x21, x22, [sp, #16]
   1c36c:	mov	x22, x1
   1c370:	str	x30, [sp, #32]
   1c374:	ldr	w0, [x19, #8]
   1c378:	mov	w21, w20
   1c37c:	cmp	w0, w20
   1c380:	b.le	1c3b4 <__sanitizer_symbolize_global@@Base+0x1c70>
   1c384:	ldr	x0, [x19]
   1c388:	ldr	x1, [x0, x20, lsl #3]
   1c38c:	mov	x0, x22
   1c390:	add	x20, x20, #0x1
   1c394:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1c398:	cbnz	w0, 1c374 <__sanitizer_symbolize_global@@Base+0x1c30>
   1c39c:	add	x19, x19, w21, sxtw
   1c3a0:	ldrb	w0, [x19, #40]
   1c3a4:	ldp	x21, x22, [sp, #16]
   1c3a8:	ldr	x30, [sp, #32]
   1c3ac:	ldp	x19, x20, [sp], #48
   1c3b0:	ret
   1c3b4:	mov	w0, #0x0                   	// #0
   1c3b8:	b	1c3a4 <__sanitizer_symbolize_global@@Base+0x1c60>
   1c3bc:	ldr	x4, [x0, #32]
   1c3c0:	mov	x3, x1
   1c3c4:	cmp	x1, x4
   1c3c8:	b.cc	1c3e8 <__sanitizer_symbolize_global@@Base+0x1ca4>  // b.lo, b.ul, b.last
   1c3cc:	str	x30, [sp, #-16]!
   1c3d0:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c3d4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c3d8:	add	x2, x2, #0xce0
   1c3dc:	add	x0, x0, #0xd01
   1c3e0:	mov	w1, #0x9e                  	// #158
   1c3e4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1c3e8:	ldr	x0, [x0, #16]
   1c3ec:	add	x0, x0, x1, lsl #5
   1c3f0:	ret
   1c3f4:	stp	x19, x20, [sp, #-64]!
   1c3f8:	mov	x19, x0
   1c3fc:	stp	x21, x22, [sp, #16]
   1c400:	mov	x22, x2
   1c404:	stp	x23, x24, [sp, #32]
   1c408:	mov	x23, x1
   1c40c:	mov	x24, x3
   1c410:	stp	x25, x30, [sp, #48]
   1c414:	mov	x1, x2
   1c418:	strb	wzr, [x0, #72]
   1c41c:	bl	1c35c <__sanitizer_symbolize_global@@Base+0x1c18>
   1c420:	tst	w0, #0xff
   1c424:	b.eq	1c490 <__sanitizer_symbolize_global@@Base+0x1d4c>  // b.none
   1c428:	add	x25, x19, #0x10
   1c42c:	mov	x21, #0x0                   	// #0
   1c430:	ldr	x0, [x19, #32]
   1c434:	cmp	x21, x0
   1c438:	b.cs	1c490 <__sanitizer_symbolize_global@@Base+0x1d4c>  // b.hs, b.nlast
   1c43c:	mov	x1, x21
   1c440:	mov	x0, x25
   1c444:	bl	1c9c4 <__sanitizer_symbolize_global@@Base+0x2280>
   1c448:	mov	x20, x0
   1c44c:	ldr	x0, [x0]
   1c450:	mov	x1, x22
   1c454:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1c458:	cbnz	w0, 1c488 <__sanitizer_symbolize_global@@Base+0x1d44>
   1c45c:	ldr	x0, [x20, #8]
   1c460:	mov	x1, x23
   1c464:	bl	10414 <__sancov_default_options@@Base+0x1f90>
   1c468:	ands	w0, w0, #0xff
   1c46c:	b.eq	1c488 <__sanitizer_symbolize_global@@Base+0x1d44>  // b.none
   1c470:	str	x20, [x24]
   1c474:	ldp	x21, x22, [sp, #16]
   1c478:	ldp	x23, x24, [sp, #32]
   1c47c:	ldp	x25, x30, [sp, #48]
   1c480:	ldp	x19, x20, [sp], #64
   1c484:	ret
   1c488:	add	x21, x21, #0x1
   1c48c:	b	1c430 <__sanitizer_symbolize_global@@Base+0x1cec>
   1c490:	mov	w0, #0x0                   	// #0
   1c494:	b	1c474 <__sanitizer_symbolize_global@@Base+0x1d30>
   1c498:	stp	x19, x20, [sp, #-96]!
   1c49c:	mov	x19, x1
   1c4a0:	stp	x23, x24, [sp, #32]
   1c4a4:	adrp	x24, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1c4a8:	mov	x23, x0
   1c4ac:	add	x24, x24, #0x360
   1c4b0:	stp	x25, x26, [sp, #48]
   1c4b4:	add	x25, x0, #0x10
   1c4b8:	add	x26, sp, #0x58
   1c4bc:	stp	x21, x22, [sp, #16]
   1c4c0:	mov	x22, #0x0                   	// #0
   1c4c4:	str	x30, [sp, #64]
   1c4c8:	ldr	x0, [x23, #32]
   1c4cc:	cmp	x22, x0
   1c4d0:	b.cs	1c5cc <__sanitizer_symbolize_global@@Base+0x1e88>  // b.hs, b.nlast
   1c4d4:	mov	x1, x22
   1c4d8:	mov	x0, x25
   1c4dc:	bl	1c9c4 <__sanitizer_symbolize_global@@Base+0x2280>
   1c4e0:	ldr	w1, [x0, #16]
   1c4e4:	cbz	w1, 1c5c4 <__sanitizer_symbolize_global@@Base+0x1e80>
   1c4e8:	ldp	x4, x21, [x19, #8]
   1c4ec:	str	x0, [sp, #88]
   1c4f0:	lsr	x4, x4, #3
   1c4f4:	cmp	x21, x4
   1c4f8:	b.ls	1c518 <__sanitizer_symbolize_global@@Base+0x1dd4>  // b.plast
   1c4fc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1c500:	mov	x3, x21
   1c504:	add	x2, x2, #0x373
   1c508:	mov	w1, #0x1be                 	// #446
   1c50c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1c510:	add	x0, x0, #0x5c5
   1c514:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1c518:	b.ne	1c5a4 <__sanitizer_symbolize_global@@Base+0x1e60>  // b.any
   1c51c:	add	x0, x21, #0x1
   1c520:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
   1c524:	mov	x20, x0
   1c528:	cbnz	x0, 1c544 <__sanitizer_symbolize_global@@Base+0x1e00>
   1c52c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1c530:	mov	x4, #0x0                   	// #0
   1c534:	add	x2, x2, #0x329
   1c538:	mov	x3, #0x0                   	// #0
   1c53c:	mov	w1, #0x1fc                 	// #508
   1c540:	b	1c50c <__sanitizer_symbolize_global@@Base+0x1dc8>
   1c544:	cmp	x21, x0
   1c548:	b.ls	1c564 <__sanitizer_symbolize_global@@Base+0x1e20>  // b.plast
   1c54c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1c550:	mov	x4, x0
   1c554:	mov	x3, x21
   1c558:	add	x2, x2, #0x342
   1c55c:	mov	w1, #0x1fd                 	// #509
   1c560:	b	1c50c <__sanitizer_symbolize_global@@Base+0x1dc8>
   1c564:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1c568:	mov	x1, x0
   1c56c:	lsl	x0, x20, #3
   1c570:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   1c574:	mov	x1, x24
   1c578:	mov	x20, x0
   1c57c:	mov	w2, #0x0                   	// #0
   1c580:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1c584:	ldr	x1, [x19]
   1c588:	mov	x21, x0
   1c58c:	ldr	x2, [x19, #16]
   1c590:	lsl	x2, x2, #3
   1c594:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1c598:	ldp	x0, x1, [x19]
   1c59c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1c5a0:	stp	x21, x20, [x19]
   1c5a4:	mov	x2, #0x8                   	// #8
   1c5a8:	ldr	x0, [x19, #16]
   1c5ac:	ldr	x3, [x19]
   1c5b0:	add	x1, x0, #0x1
   1c5b4:	str	x1, [x19, #16]
   1c5b8:	mov	x1, x26
   1c5bc:	add	x0, x3, x0, lsl #3
   1c5c0:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1c5c4:	add	x22, x22, #0x1
   1c5c8:	b	1c4c8 <__sanitizer_symbolize_global@@Base+0x1d84>
   1c5cc:	ldp	x21, x22, [sp, #16]
   1c5d0:	ldp	x23, x24, [sp, #32]
   1c5d4:	ldp	x25, x26, [sp, #48]
   1c5d8:	ldr	x30, [sp, #64]
   1c5dc:	ldp	x19, x20, [sp], #96
   1c5e0:	ret
   1c5e4:	stp	x19, x20, [sp, #-112]!
   1c5e8:	stp	x21, x22, [sp, #16]
   1c5ec:	mov	x21, x0
   1c5f0:	ldrb	w0, [x0, #72]
   1c5f4:	stp	x23, x24, [sp, #32]
   1c5f8:	stp	x25, x26, [sp, #48]
   1c5fc:	stp	x27, x30, [sp, #64]
   1c600:	cbz	w0, 1c630 <__sanitizer_symbolize_global@@Base+0x1eec>
   1c604:	mov	x19, x1
   1c608:	add	x24, sp, #0x50
   1c60c:	add	x23, x21, #0x10
   1c610:	mov	w25, #0x1                   	// #1
   1c614:	cbz	x19, 1c7e8 <__sanitizer_symbolize_global@@Base+0x20a4>
   1c618:	ldrb	w0, [x19]
   1c61c:	cmp	w0, #0x20
   1c620:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   1c624:	b.ne	1c650 <__sanitizer_symbolize_global@@Base+0x1f0c>  // b.any
   1c628:	add	x19, x19, #0x1
   1c62c:	b	1c618 <__sanitizer_symbolize_global@@Base+0x1ed4>
   1c630:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c634:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c638:	add	x2, x2, #0xd45
   1c63c:	add	x0, x0, #0xd01
   1c640:	mov	x4, #0x0                   	// #0
   1c644:	mov	x3, #0x0                   	// #0
   1c648:	mov	w1, #0x6a                  	// #106
   1c64c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1c650:	mov	x0, x19
   1c654:	mov	w1, #0xa                   	// #10
   1c658:	bl	1444c <__sanitizer_set_report_fd@@Base+0x1998>
   1c65c:	mov	x20, x0
   1c660:	cbnz	x0, 1c670 <__sanitizer_symbolize_global@@Base+0x1f2c>
   1c664:	mov	x0, x19
   1c668:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1c66c:	add	x20, x19, x0
   1c670:	cmp	x19, x20
   1c674:	b.eq	1c7d8 <__sanitizer_symbolize_global@@Base+0x2094>  // b.none
   1c678:	ldrb	w0, [x19]
   1c67c:	cmp	w0, #0x23
   1c680:	b.eq	1c7d8 <__sanitizer_symbolize_global@@Base+0x2094>  // b.none
   1c684:	mov	x22, x20
   1c688:	ldurb	w0, [x22, #-1]
   1c68c:	and	w1, w0, #0xfffffffb
   1c690:	cmp	w0, #0x20
   1c694:	ccmp	w1, #0x9, #0x4, ne  // ne = any
   1c698:	b.ne	1c6a8 <__sanitizer_symbolize_global@@Base+0x1f64>  // b.any
   1c69c:	sub	x22, x22, #0x1
   1c6a0:	cmp	x19, x22
   1c6a4:	b.ne	1c688 <__sanitizer_symbolize_global@@Base+0x1f44>  // b.any
   1c6a8:	ldr	w3, [x21, #8]
   1c6ac:	mov	x0, #0x0                   	// #0
   1c6b0:	mov	w27, w0
   1c6b4:	cmp	w3, w0
   1c6b8:	b.le	1c774 <__sanitizer_symbolize_global@@Base+0x2030>
   1c6bc:	ldr	x1, [x21]
   1c6c0:	ldr	x2, [x1, x0, lsl #3]
   1c6c4:	mov	x1, #0x0                   	// #0
   1c6c8:	sub	x2, x2, #0x1
   1c6cc:	ldrb	w4, [x19, x1]
   1c6d0:	add	x6, x19, x1
   1c6d4:	add	x1, x1, #0x1
   1c6d8:	ldrb	w5, [x2, x1]
   1c6dc:	cmp	w4, w5
   1c6e0:	b.eq	1c6cc <__sanitizer_symbolize_global@@Base+0x1f88>  // b.none
   1c6e4:	cbnz	w5, 1c76c <__sanitizer_symbolize_global@@Base+0x2028>
   1c6e8:	cmp	w4, #0x3a
   1c6ec:	b.ne	1c76c <__sanitizer_symbolize_global@@Base+0x2028>  // b.any
   1c6f0:	add	x19, x6, #0x1
   1c6f4:	mov	x2, #0x20                  	// #32
   1c6f8:	mov	w1, #0x0                   	// #0
   1c6fc:	mov	x0, x24
   1c700:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1c704:	ldr	x0, [x21]
   1c708:	sub	x22, x22, x19
   1c70c:	mov	x2, #0x0                   	// #0
   1c710:	mov	x1, #0x0                   	// #0
   1c714:	sxtw	x26, w27
   1c718:	ldr	x0, [x0, w27, sxtw #3]
   1c71c:	str	x0, [sp, #80]
   1c720:	add	x0, x22, #0x1
   1c724:	bl	e8ec <__sancov_default_options@@Base+0x468>
   1c728:	mov	x2, x22
   1c72c:	mov	x1, x19
   1c730:	str	x0, [sp, #88]
   1c734:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1c738:	ldr	x0, [sp, #88]
   1c73c:	strb	wzr, [x0, x22]
   1c740:	ldr	x4, [x21, #24]
   1c744:	ldr	x3, [x23, #16]
   1c748:	lsr	x4, x4, #5
   1c74c:	cmp	x3, x4
   1c750:	b.ls	1c798 <__sanitizer_symbolize_global@@Base+0x2054>  // b.plast
   1c754:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1c758:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1c75c:	add	x2, x2, #0x373
   1c760:	add	x0, x0, #0x5c5
   1c764:	mov	w1, #0x1be                 	// #446
   1c768:	b	1c64c <__sanitizer_symbolize_global@@Base+0x1f08>
   1c76c:	add	x0, x0, #0x1
   1c770:	b	1c6b0 <__sanitizer_symbolize_global@@Base+0x1f6c>
   1c774:	cmp	w3, w0
   1c778:	b.ne	1c6f4 <__sanitizer_symbolize_global@@Base+0x1fb0>  // b.any
   1c77c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c780:	ldr	x0, [x0, #4008]
   1c784:	ldr	x1, [x0]
   1c788:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c78c:	add	x0, x0, #0xd5b
   1c790:	bl	18af0 <OnPrint@@Base+0x288>
   1c794:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1c798:	b.ne	1c7b0 <__sanitizer_symbolize_global@@Base+0x206c>  // b.any
   1c79c:	add	x0, x3, #0x1
   1c7a0:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
   1c7a4:	mov	x1, x0
   1c7a8:	mov	x0, x23
   1c7ac:	bl	1c9fc <__sanitizer_symbolize_global@@Base+0x22b8>
   1c7b0:	ldr	x0, [x23, #16]
   1c7b4:	add	x26, x21, x26
   1c7b8:	ldr	x3, [x23]
   1c7bc:	add	x1, x0, #0x1
   1c7c0:	str	x1, [x23, #16]
   1c7c4:	mov	x2, #0x20                  	// #32
   1c7c8:	mov	x1, x24
   1c7cc:	add	x0, x3, x0, lsl #5
   1c7d0:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1c7d4:	strb	w25, [x26, #40]
   1c7d8:	ldrb	w0, [x20]
   1c7dc:	cbz	w0, 1c7e8 <__sanitizer_symbolize_global@@Base+0x20a4>
   1c7e0:	add	x19, x20, #0x1
   1c7e4:	b	1c614 <__sanitizer_symbolize_global@@Base+0x1ed0>
   1c7e8:	ldp	x21, x22, [sp, #16]
   1c7ec:	ldp	x23, x24, [sp, #32]
   1c7f0:	ldp	x25, x26, [sp, #48]
   1c7f4:	ldp	x27, x30, [sp, #64]
   1c7f8:	ldp	x19, x20, [sp], #112
   1c7fc:	ret
   1c800:	stp	x19, x30, [sp, #-16]!
   1c804:	mov	x19, x0
   1c808:	add	x0, x0, #0x10
   1c80c:	stur	w2, [x0, #-8]
   1c810:	stur	x1, [x0, #-16]
   1c814:	mov	x1, #0x1                   	// #1
   1c818:	stp	xzr, xzr, [x0, #8]
   1c81c:	str	xzr, [x19, #16]
   1c820:	bl	1c9fc <__sanitizer_symbolize_global@@Base+0x22b8>
   1c824:	ldrsw	x2, [x19, #8]
   1c828:	mov	w0, #0x1                   	// #1
   1c82c:	strb	w0, [x19, #72]
   1c830:	cmp	x2, #0x20
   1c834:	b.ls	1c858 <__sanitizer_symbolize_global@@Base+0x2114>  // b.plast
   1c838:	mov	x3, x2
   1c83c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c840:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c844:	add	x0, x0, #0xd01
   1c848:	add	x2, x2, #0xd7d
   1c84c:	mov	x4, #0x20                  	// #32
   1c850:	mov	w1, #0x1c                  	// #28
   1c854:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1c858:	add	x0, x19, #0x28
   1c85c:	mov	w1, #0x0                   	// #0
   1c860:	ldp	x19, x30, [sp], #16
   1c864:	b	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1c868:	stp	x19, x20, [sp, #-144]!
   1c86c:	stp	x21, x22, [sp, #16]
   1c870:	mov	x22, x0
   1c874:	stp	x23, x24, [sp, #32]
   1c878:	str	x30, [sp, #48]
   1c87c:	ldrb	w0, [x1]
   1c880:	cbz	w0, 1c9b0 <__sanitizer_symbolize_global@@Base+0x226c>
   1c884:	mov	x19, x1
   1c888:	mov	x1, #0x1000                	// #4096
   1c88c:	add	x0, sp, #0x50
   1c890:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   1c894:	mov	x0, x19
   1c898:	add	x23, sp, #0x70
   1c89c:	bl	150d8 <__sanitizer_set_report_fd@@Base+0x2624>
   1c8a0:	tst	w0, #0xff
   1c8a4:	b.ne	1c92c <__sanitizer_symbolize_global@@Base+0x21e8>  // b.any
   1c8a8:	mov	x0, x19
   1c8ac:	bl	17294 <__sanitizer_set_report_fd@@Base+0x47e0>
   1c8b0:	ands	w20, w0, #0xff
   1c8b4:	b.ne	1c92c <__sanitizer_symbolize_global@@Base+0x21e8>  // b.any
   1c8b8:	mov	x0, x23
   1c8bc:	mov	x1, #0x1000                	// #4096
   1c8c0:	ldr	x24, [sp, #80]
   1c8c4:	ldr	x21, [sp, #96]
   1c8c8:	bl	9978 <__lsan_do_recoverable_leak_check@@Base+0x101c>
   1c8cc:	ldr	x0, [sp, #112]
   1c8d0:	ldr	x1, [sp, #128]
   1c8d4:	bl	10590 <__sancov_default_options@@Base+0x210c>
   1c8d8:	cbz	x0, 1c91c <__sanitizer_symbolize_global@@Base+0x21d8>
   1c8dc:	ldr	x0, [sp, #112]
   1c8e0:	sub	x21, x21, #0x1
   1c8e4:	mov	w20, #0x1                   	// #1
   1c8e8:	bl	10088 <__sancov_default_options@@Base+0x1c04>
   1c8ec:	ldr	x1, [sp, #112]
   1c8f0:	sub	x2, x0, x1
   1c8f4:	mov	x0, x24
   1c8f8:	cmp	x2, x21
   1c8fc:	csel	x2, x2, x21, ls  // ls = plast
   1c900:	bl	14564 <__sanitizer_set_report_fd@@Base+0x1ab0>
   1c904:	mov	x0, x24
   1c908:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1c90c:	mov	x1, x19
   1c910:	sub	x2, x21, x0
   1c914:	mov	x0, x24
   1c918:	bl	14564 <__sanitizer_set_report_fd@@Base+0x1ab0>
   1c91c:	ldp	x0, x1, [sp, #112]
   1c920:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1c924:	cbz	w20, 1c92c <__sanitizer_symbolize_global@@Base+0x21e8>
   1c928:	ldr	x19, [sp, #80]
   1c92c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c930:	ldr	x0, [x0, #3680]
   1c934:	ldr	w0, [x0]
   1c938:	cbz	w0, 1c958 <__sanitizer_symbolize_global@@Base+0x2214>
   1c93c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c940:	mov	x2, x19
   1c944:	ldr	x0, [x0, #4008]
   1c948:	ldr	x1, [x0]
   1c94c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c950:	add	x0, x0, #0xdb4
   1c954:	bl	18af0 <OnPrint@@Base+0x288>
   1c958:	mov	x3, x23
   1c95c:	add	x2, sp, #0x48
   1c960:	add	x1, sp, #0x40
   1c964:	mov	x0, x19
   1c968:	mov	x5, #0x0                   	// #0
   1c96c:	mov	x4, #0x4000000             	// #67108864
   1c970:	bl	12948 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a84>
   1c974:	tst	w0, #0xff
   1c978:	b.ne	1c99c <__sanitizer_symbolize_global@@Base+0x2258>  // b.any
   1c97c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1c980:	mov	x2, x19
   1c984:	ldr	x0, [x0, #4008]
   1c988:	ldr	x1, [x0]
   1c98c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1c990:	add	x0, x0, #0xdd9
   1c994:	bl	18af0 <OnPrint@@Base+0x288>
   1c998:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1c99c:	ldr	x1, [sp, #64]
   1c9a0:	mov	x0, x22
   1c9a4:	bl	1c5e4 <__sanitizer_symbolize_global@@Base+0x1ea0>
   1c9a8:	ldp	x0, x1, [sp, #80]
   1c9ac:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1c9b0:	ldp	x21, x22, [sp, #16]
   1c9b4:	ldp	x23, x24, [sp, #32]
   1c9b8:	ldr	x30, [sp, #48]
   1c9bc:	ldp	x19, x20, [sp], #144
   1c9c0:	ret
   1c9c4:	ldr	x4, [x0, #16]
   1c9c8:	mov	x3, x1
   1c9cc:	cmp	x1, x4
   1c9d0:	b.cc	1c9f0 <__sanitizer_symbolize_global@@Base+0x22ac>  // b.lo, b.ul, b.last
   1c9d4:	str	x30, [sp, #-16]!
   1c9d8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1c9dc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1c9e0:	add	x2, x2, #0x317
   1c9e4:	add	x0, x0, #0x5c5
   1c9e8:	mov	w1, #0x1b6                 	// #438
   1c9ec:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1c9f0:	ldr	x0, [x0]
   1c9f4:	add	x0, x0, x1, lsl #5
   1c9f8:	ret
   1c9fc:	stp	x19, x20, [sp, #-32]!
   1ca00:	stp	x21, x30, [sp, #16]
   1ca04:	cbnz	x1, 1ca28 <__sanitizer_symbolize_global@@Base+0x22e4>
   1ca08:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1ca0c:	add	x2, x2, #0x329
   1ca10:	mov	x4, #0x0                   	// #0
   1ca14:	mov	x3, #0x0                   	// #0
   1ca18:	mov	w1, #0x1fc                 	// #508
   1ca1c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1ca20:	add	x0, x0, #0x5c5
   1ca24:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1ca28:	ldr	x3, [x0, #16]
   1ca2c:	mov	x19, x0
   1ca30:	mov	x20, x1
   1ca34:	cmp	x1, x3
   1ca38:	b.cs	1ca50 <__sanitizer_symbolize_global@@Base+0x230c>  // b.hs, b.nlast
   1ca3c:	mov	x4, x1
   1ca40:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1ca44:	mov	w1, #0x1fd                 	// #509
   1ca48:	add	x2, x2, #0x342
   1ca4c:	b	1ca1c <__sanitizer_symbolize_global@@Base+0x22d8>
   1ca50:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   1ca54:	mov	x1, x0
   1ca58:	lsl	x0, x20, #5
   1ca5c:	bl	9284 <__lsan_do_recoverable_leak_check@@Base+0x928>
   1ca60:	mov	w2, #0x0                   	// #0
   1ca64:	mov	x20, x0
   1ca68:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1ca6c:	add	x1, x1, #0x360
   1ca70:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1ca74:	mov	x21, x0
   1ca78:	ldr	x1, [x19]
   1ca7c:	ldr	x2, [x19, #16]
   1ca80:	lsl	x2, x2, #5
   1ca84:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1ca88:	ldp	x0, x1, [x19]
   1ca8c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1ca90:	stp	x21, x20, [x19]
   1ca94:	ldp	x21, x30, [sp, #16]
   1ca98:	ldp	x19, x20, [sp], #32
   1ca9c:	ret
   1caa0:	stp	x19, x30, [sp, #-16]!
   1caa4:	mov	x19, x0
   1caa8:	mov	x2, #0x40                  	// #64
   1caac:	mov	w1, #0x0                   	// #0
   1cab0:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1cab4:	mov	x0, #0xffffffffffffffff    	// #-1
   1cab8:	str	x0, [x19, #40]
   1cabc:	ldp	x19, x30, [sp], #16
   1cac0:	ret
   1cac4:	stp	x19, x30, [sp, #-16]!
   1cac8:	mov	x19, x0
   1cacc:	mov	x1, #0x0                   	// #0
   1cad0:	ldr	x0, [x0, #8]
   1cad4:	bl	eafc <__sancov_default_options@@Base+0x678>
   1cad8:	ldr	x0, [x19, #32]
   1cadc:	mov	x1, #0x0                   	// #0
   1cae0:	bl	eafc <__sancov_default_options@@Base+0x678>
   1cae4:	ldr	x0, [x19, #48]
   1cae8:	mov	x1, #0x0                   	// #0
   1caec:	bl	eafc <__sancov_default_options@@Base+0x678>
   1caf0:	mov	x0, x19
   1caf4:	mov	x2, #0x40                  	// #64
   1caf8:	mov	w1, #0x0                   	// #0
   1cafc:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1cb00:	mov	x0, #0xffffffffffffffff    	// #-1
   1cb04:	str	x0, [x19, #40]
   1cb08:	ldp	x19, x30, [sp], #16
   1cb0c:	ret
   1cb10:	stp	x19, x20, [sp, #-32]!
   1cb14:	mov	x19, x0
   1cb18:	mov	w20, w3
   1cb1c:	mov	x0, x1
   1cb20:	stp	x21, x30, [sp, #16]
   1cb24:	mov	x21, x2
   1cb28:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   1cb2c:	stp	x0, x21, [x19, #8]
   1cb30:	str	w20, [x19, #24]
   1cb34:	ldp	x21, x30, [sp, #16]
   1cb38:	ldp	x19, x20, [sp], #32
   1cb3c:	ret
   1cb40:	str	xzr, [x0], #8
   1cb44:	b	1caa0 <__sanitizer_symbolize_global@@Base+0x235c>
   1cb48:	stp	x19, x20, [sp, #-32]!
   1cb4c:	mov	x2, #0x0                   	// #0
   1cb50:	mov	x20, x0
   1cb54:	mov	x1, #0x0                   	// #0
   1cb58:	mov	x0, #0x48                  	// #72
   1cb5c:	str	x30, [sp, #16]
   1cb60:	bl	e8ec <__sancov_default_options@@Base+0x468>
   1cb64:	mov	x19, x0
   1cb68:	bl	1cb40 <__sanitizer_symbolize_global@@Base+0x23fc>
   1cb6c:	ldr	x30, [sp, #16]
   1cb70:	mov	x0, x19
   1cb74:	str	x20, [x19, #8]
   1cb78:	ldp	x19, x20, [sp], #32
   1cb7c:	ret
   1cb80:	stp	x19, x30, [sp, #-16]!
   1cb84:	mov	x19, x0
   1cb88:	add	x0, x0, #0x8
   1cb8c:	bl	1cac4 <__sanitizer_symbolize_global@@Base+0x2380>
   1cb90:	ldr	x0, [x19]
   1cb94:	cbz	x0, 1cb9c <__sanitizer_symbolize_global@@Base+0x2458>
   1cb98:	bl	1cb80 <__sanitizer_symbolize_global@@Base+0x243c>
   1cb9c:	mov	x0, x19
   1cba0:	mov	x1, #0x0                   	// #0
   1cba4:	ldp	x19, x30, [sp], #16
   1cba8:	b	eafc <__sancov_default_options@@Base+0x678>
   1cbac:	mov	x2, #0x40                  	// #64
   1cbb0:	mov	w1, #0x0                   	// #0
   1cbb4:	b	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1cbb8:	stp	x19, x30, [sp, #-16]!
   1cbbc:	mov	x19, x0
   1cbc0:	mov	x1, #0x0                   	// #0
   1cbc4:	ldr	x0, [x0]
   1cbc8:	bl	eafc <__sancov_default_options@@Base+0x678>
   1cbcc:	ldr	x0, [x19, #24]
   1cbd0:	mov	x1, #0x0                   	// #0
   1cbd4:	bl	eafc <__sancov_default_options@@Base+0x678>
   1cbd8:	ldr	x0, [x19, #40]
   1cbdc:	mov	x1, #0x0                   	// #0
   1cbe0:	bl	eafc <__sancov_default_options@@Base+0x678>
   1cbe4:	mov	x0, x19
   1cbe8:	mov	x2, #0x40                  	// #64
   1cbec:	ldp	x19, x30, [sp], #16
   1cbf0:	mov	w1, #0x0                   	// #0
   1cbf4:	b	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1cbf8:	strb	wzr, [x0, #104]
   1cbfc:	ret
   1cc00:	ldr	x3, [x0, #224]
   1cc04:	cbnz	x3, 1cc18 <__sanitizer_symbolize_global@@Base+0x24d4>
   1cc08:	ldr	x3, [x0, #232]
   1cc0c:	cbnz	x3, 1cc18 <__sanitizer_symbolize_global@@Base+0x24d4>
   1cc10:	stp	x1, x2, [x0, #224]
   1cc14:	ret
   1cc18:	str	x30, [sp, #-16]!
   1cc1c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1cc20:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1cc24:	add	x2, x2, #0xe04
   1cc28:	add	x0, x0, #0xe32
   1cc2c:	mov	x4, #0x0                   	// #0
   1cc30:	mov	x3, #0x0                   	// #0
   1cc34:	mov	w1, #0x4e                  	// #78
   1cc38:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1cc3c:	str	x1, [x0]
   1cc40:	ldr	x0, [x1, #224]
   1cc44:	cbz	x0, 1cc50 <__sanitizer_symbolize_global@@Base+0x250c>
   1cc48:	mov	x16, x0
   1cc4c:	br	x16
   1cc50:	ret
   1cc54:	ldr	x0, [x0]
   1cc58:	ldr	x0, [x0, #232]
   1cc5c:	cbz	x0, 1cc68 <__sanitizer_symbolize_global@@Base+0x2524>
   1cc60:	mov	x16, x0
   1cc64:	br	x16
   1cc68:	ret
   1cc6c:	stp	x19, x20, [sp, #-32]!
   1cc70:	mov	x19, x0
   1cc74:	mov	x20, x1
   1cc78:	ldr	x0, [x0, #32]
   1cc7c:	stp	x21, x30, [sp, #16]
   1cc80:	bl	15454 <__sanitizer_set_report_fd@@Base+0x29a0>
   1cc84:	ldr	x0, [x19, #24]
   1cc88:	cbnz	x0, 1ccd8 <__sanitizer_symbolize_global@@Base+0x2594>
   1cc8c:	mov	x21, #0x0                   	// #0
   1cc90:	ldr	x0, [x19, #16]
   1cc94:	cmp	x21, x0
   1cc98:	b.cs	1ccf4 <__sanitizer_symbolize_global@@Base+0x25b0>  // b.hs, b.nlast
   1cc9c:	mov	x1, x21
   1cca0:	mov	x0, x19
   1cca4:	bl	1cde0 <__sanitizer_symbolize_global@@Base+0x269c>
   1cca8:	ldr	x0, [x0]
   1ccac:	mov	x1, x20
   1ccb0:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1ccb4:	cbnz	w0, 1ccec <__sanitizer_symbolize_global@@Base+0x25a8>
   1ccb8:	mov	x1, x21
   1ccbc:	mov	x0, x19
   1ccc0:	bl	1cde0 <__sanitizer_symbolize_global@@Base+0x269c>
   1ccc4:	ldr	x0, [x0]
   1ccc8:	str	x0, [x19, #24]
   1cccc:	ldp	x21, x30, [sp, #16]
   1ccd0:	ldp	x19, x20, [sp], #32
   1ccd4:	ret
   1ccd8:	mov	x1, x20
   1ccdc:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1cce0:	cbnz	w0, 1cc8c <__sanitizer_symbolize_global@@Base+0x2548>
   1cce4:	ldr	x0, [x19, #24]
   1cce8:	b	1cccc <__sanitizer_symbolize_global@@Base+0x2588>
   1ccec:	add	x21, x21, #0x1
   1ccf0:	b	1cc90 <__sanitizer_symbolize_global@@Base+0x254c>
   1ccf4:	mov	x0, x20
   1ccf8:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   1ccfc:	ldp	x4, x3, [x19, #8]
   1cd00:	mov	x20, x19
   1cd04:	str	x0, [x20, #24]!
   1cd08:	lsr	x4, x4, #3
   1cd0c:	cmp	x3, x4
   1cd10:	b.ls	1cd2c <__sanitizer_symbolize_global@@Base+0x25e8>  // b.plast
   1cd14:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1cd18:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1cd1c:	add	x2, x2, #0x373
   1cd20:	add	x0, x0, #0x5c5
   1cd24:	mov	w1, #0x1be                 	// #446
   1cd28:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1cd2c:	b.ne	1cd44 <__sanitizer_symbolize_global@@Base+0x2600>  // b.any
   1cd30:	add	x0, x3, #0x1
   1cd34:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
   1cd38:	mov	x1, x0
   1cd3c:	mov	x0, x19
   1cd40:	bl	1ce18 <__sanitizer_symbolize_global@@Base+0x26d4>
   1cd44:	ldr	x0, [x19, #16]
   1cd48:	mov	x2, #0x8                   	// #8
   1cd4c:	ldr	x3, [x19]
   1cd50:	add	x1, x0, #0x1
   1cd54:	str	x1, [x19, #16]
   1cd58:	mov	x1, x20
   1cd5c:	add	x0, x3, x0, lsl #3
   1cd60:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1cd64:	b	1cce4 <__sanitizer_symbolize_global@@Base+0x25a0>
   1cd68:	stp	x19, x20, [sp, #-32]!
   1cd6c:	mov	x19, x0
   1cd70:	mov	x20, x1
   1cd74:	stp	x21, x30, [sp, #16]
   1cd78:	mov	x1, #0x1                   	// #1
   1cd7c:	add	x21, x0, #0x70
   1cd80:	stp	xzr, xzr, [x0]
   1cd84:	str	xzr, [x0, #16]
   1cd88:	bl	1ce18 <__sanitizer_symbolize_global@@Base+0x26d4>
   1cd8c:	stp	xzr, x21, [x19, #24]
   1cd90:	ldr	x0, [x19, #8]
   1cd94:	lsr	x0, x0, #3
   1cd98:	cmp	x0, #0x3e7
   1cd9c:	b.hi	1cdac <__sanitizer_symbolize_global@@Base+0x2668>  // b.pmore
   1cda0:	mov	x0, x19
   1cda4:	mov	x1, #0x3e8                 	// #1000
   1cda8:	bl	1ce18 <__sanitizer_symbolize_global@@Base+0x26d4>
   1cdac:	strb	wzr, [x19, #64]
   1cdb0:	mov	x0, x21
   1cdb4:	strb	wzr, [x19, #96]
   1cdb8:	strb	wzr, [x19, #104]
   1cdbc:	bl	1535c <__sanitizer_set_report_fd@@Base+0x28a8>
   1cdc0:	ldp	x0, x1, [x20]
   1cdc4:	stp	x0, x1, [x19, #200]
   1cdc8:	ldr	x0, [x20, #16]
   1cdcc:	ldp	x21, x30, [sp, #16]
   1cdd0:	stp	x0, xzr, [x19, #216]
   1cdd4:	str	xzr, [x19, #232]
   1cdd8:	ldp	x19, x20, [sp], #32
   1cddc:	ret
   1cde0:	ldr	x4, [x0, #16]
   1cde4:	mov	x3, x1
   1cde8:	cmp	x1, x4
   1cdec:	b.cc	1ce0c <__sanitizer_symbolize_global@@Base+0x26c8>  // b.lo, b.ul, b.last
   1cdf0:	str	x30, [sp, #-16]!
   1cdf4:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1cdf8:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1cdfc:	add	x2, x2, #0x317
   1ce00:	add	x0, x0, #0x5c5
   1ce04:	mov	w1, #0x1b6                 	// #438
   1ce08:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1ce0c:	ldr	x0, [x0]
   1ce10:	add	x0, x0, x1, lsl #3
   1ce14:	ret
   1ce18:	stp	x19, x20, [sp, #-48]!
   1ce1c:	mov	x4, x1
   1ce20:	stp	x21, x22, [sp, #16]
   1ce24:	str	x30, [sp, #32]
   1ce28:	cbnz	x1, 1ce48 <__sanitizer_symbolize_global@@Base+0x2704>
   1ce2c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1ce30:	add	x2, x2, #0x329
   1ce34:	mov	x3, #0x0                   	// #0
   1ce38:	mov	w1, #0x1fc                 	// #508
   1ce3c:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1ce40:	add	x0, x0, #0x5c5
   1ce44:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1ce48:	ldr	x3, [x0, #16]
   1ce4c:	mov	x20, x0
   1ce50:	cmp	x1, x3
   1ce54:	b.cs	1ce68 <__sanitizer_symbolize_global@@Base+0x2724>  // b.hs, b.nlast
   1ce58:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1ce5c:	mov	w1, #0x1fd                 	// #509
   1ce60:	add	x2, x2, #0x342
   1ce64:	b	1ce3c <__sanitizer_symbolize_global@@Base+0x26f8>
   1ce68:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ce6c:	lsl	x19, x1, #3
   1ce70:	mov	x21, x0
   1ce74:	ldr	x22, [x0, #4000]
   1ce78:	ldr	x1, [x22]
   1ce7c:	cbnz	x1, 1ce88 <__sanitizer_symbolize_global@@Base+0x2744>
   1ce80:	bl	1571c <__sanitizer_set_report_fd@@Base+0x2c68>
   1ce84:	str	x0, [x22]
   1ce88:	ldr	x0, [x21, #4000]
   1ce8c:	ldr	x0, [x0]
   1ce90:	sub	x4, x0, #0x1
   1ce94:	tst	x4, x0
   1ce98:	b.eq	1ceac <__sanitizer_symbolize_global@@Base+0x2768>  // b.none
   1ce9c:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1cea0:	add	x0, x0, #0x300
   1cea4:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   1cea8:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1ceac:	add	x19, x19, x4
   1ceb0:	neg	x0, x0
   1ceb4:	and	x19, x19, x0
   1ceb8:	mov	w2, #0x0                   	// #0
   1cebc:	mov	x0, x19
   1cec0:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1cec4:	add	x1, x1, #0x360
   1cec8:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1cecc:	ldr	x1, [x20]
   1ced0:	mov	x21, x0
   1ced4:	ldr	x2, [x20, #16]
   1ced8:	lsl	x2, x2, #3
   1cedc:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1cee0:	ldp	x0, x1, [x20]
   1cee4:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1cee8:	ldr	x30, [sp, #32]
   1ceec:	stp	x21, x19, [x20]
   1cef0:	ldp	x21, x22, [sp, #16]
   1cef4:	ldp	x19, x20, [sp], #48
   1cef8:	ret
   1cefc:	ret
   1cf00:	stp	x19, x20, [sp, #-80]!
   1cf04:	mov	x19, x0
   1cf08:	adrp	x20, 1c000 <__sanitizer_symbolize_global@@Base+0x18bc>
   1cf0c:	ldr	x0, [x0, #16]
   1cf10:	add	x20, x20, #0xefc
   1cf14:	stp	x21, x22, [sp, #16]
   1cf18:	add	x22, sp, #0x38
   1cf1c:	mov	x21, x1
   1cf20:	mov	x4, x22
   1cf24:	mov	x3, x20
   1cf28:	str	x30, [sp, #32]
   1cf2c:	stp	x2, x2, [sp, #56]
   1cf30:	adrp	x2, 1d000 <__sanitizer_symbolize_global@@Base+0x28bc>
   1cf34:	add	x2, x2, #0x210
   1cf38:	str	xzr, [sp, #72]
   1cf3c:	bl	6770 <__asan_backtrace_pcinfo@plt>
   1cf40:	ldr	x0, [sp, #72]
   1cf44:	cbnz	x0, 1cf80 <__sanitizer_symbolize_global@@Base+0x283c>
   1cf48:	ldr	x0, [x19, #16]
   1cf4c:	mov	x4, x22
   1cf50:	mov	x3, x20
   1cf54:	mov	x1, x21
   1cf58:	adrp	x2, 1d000 <__sanitizer_symbolize_global@@Base+0x28bc>
   1cf5c:	add	x2, x2, #0x1c8
   1cf60:	bl	68c0 <__asan_backtrace_syminfo@plt>
   1cf64:	ldr	x0, [sp, #72]
   1cf68:	cmp	x0, #0x0
   1cf6c:	cset	w0, ne  // ne = any
   1cf70:	ldp	x21, x22, [sp, #16]
   1cf74:	ldr	x30, [sp, #32]
   1cf78:	ldp	x19, x20, [sp], #80
   1cf7c:	ret
   1cf80:	mov	w0, #0x1                   	// #1
   1cf84:	b	1cf70 <__sanitizer_symbolize_global@@Base+0x282c>
   1cf88:	ldr	x0, [x0, #16]
   1cf8c:	str	x30, [sp, #-16]!
   1cf90:	mov	x4, x2
   1cf94:	adrp	x3, 1c000 <__sanitizer_symbolize_global@@Base+0x18bc>
   1cf98:	adrp	x2, 1d000 <__sanitizer_symbolize_global@@Base+0x28bc>
   1cf9c:	add	x3, x3, #0xefc
   1cfa0:	add	x2, x2, #0x284
   1cfa4:	bl	68c0 <__asan_backtrace_syminfo@plt>
   1cfa8:	mov	w0, #0x1                   	// #1
   1cfac:	ldr	x30, [sp], #16
   1cfb0:	ret
   1cfb4:	stp	x19, x20, [sp, #-32]!
   1cfb8:	mov	x19, x0
   1cfbc:	ldr	x0, [x0, #8]
   1cfc0:	stp	x21, x30, [sp, #16]
   1cfc4:	cbnz	x0, 1cfe8 <__sanitizer_symbolize_global@@Base+0x28a4>
   1cfc8:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1cfcc:	add	x2, x2, #0xe74
   1cfd0:	mov	x4, #0x0                   	// #0
   1cfd4:	mov	x3, #0x0                   	// #0
   1cfd8:	mov	w1, #0x5c                  	// #92
   1cfdc:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1cfe0:	add	x0, x0, #0xe84
   1cfe4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1cfe8:	ldr	x0, [x19, #16]
   1cfec:	mov	x20, x1
   1cff0:	cbz	x0, 1d020 <__sanitizer_symbolize_global@@Base+0x28dc>
   1cff4:	mov	x0, x1
   1cff8:	bl	1cb48 <__sanitizer_symbolize_global@@Base+0x2404>
   1cffc:	mov	x21, x0
   1d000:	ldr	x0, [x19]
   1d004:	ldp	x1, x2, [x0, #16]
   1d008:	ldr	w3, [x0, #32]
   1d00c:	add	x0, x21, #0x8
   1d010:	bl	1cb10 <__sanitizer_symbolize_global@@Base+0x23cc>
   1d014:	ldr	x0, [x19, #8]
   1d018:	str	x21, [x0]
   1d01c:	str	x21, [x19, #8]
   1d020:	ldr	x0, [x19]
   1d024:	ldr	x4, [x0, #8]
   1d028:	cmp	x20, x4
   1d02c:	b.eq	1d044 <__sanitizer_symbolize_global@@Base+0x2900>  // b.none
   1d030:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1d034:	mov	x3, x20
   1d038:	add	x2, x2, #0xed3
   1d03c:	mov	w1, #0x65                  	// #101
   1d040:	b	1cfdc <__sanitizer_symbolize_global@@Base+0x2898>
   1d044:	ldr	x0, [x19, #8]
   1d048:	ldr	x4, [x0, #8]
   1d04c:	cmp	x20, x4
   1d050:	b.eq	1d068 <__sanitizer_symbolize_global@@Base+0x2924>  // b.none
   1d054:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1d058:	mov	x3, x20
   1d05c:	add	x2, x2, #0xef7
   1d060:	mov	w1, #0x66                  	// #102
   1d064:	b	1cfdc <__sanitizer_symbolize_global@@Base+0x2898>
   1d068:	add	x0, x0, #0x8
   1d06c:	ldp	x21, x30, [sp, #16]
   1d070:	ldp	x19, x20, [sp], #32
   1d074:	ret
   1d078:	stp	x19, x20, [sp, #-48]!
   1d07c:	mov	x19, x2
   1d080:	mov	x20, x1
   1d084:	add	x2, x1, #0x1
   1d088:	stp	x21, x22, [sp, #16]
   1d08c:	mov	x21, x0
   1d090:	ldp	x0, x1, [x19, #8]
   1d094:	str	x30, [sp, #32]
   1d098:	add	x2, x2, x0
   1d09c:	cmp	x1, x2
   1d0a0:	b.cs	1d0e4 <__sanitizer_symbolize_global@@Base+0x29a0>  // b.hs, b.nlast
   1d0a4:	lsl	x1, x1, #1
   1d0a8:	cmp	x1, x2
   1d0ac:	csel	x0, x2, x1, cc  // cc = lo, ul, last
   1d0b0:	str	x0, [x19, #16]
   1d0b4:	mov	x1, #0x0                   	// #0
   1d0b8:	mov	x2, #0x0                   	// #0
   1d0bc:	bl	e8ec <__sancov_default_options@@Base+0x468>
   1d0c0:	mov	x22, x0
   1d0c4:	ldr	x1, [x19]
   1d0c8:	cbz	x1, 1d0e0 <__sanitizer_symbolize_global@@Base+0x299c>
   1d0cc:	ldr	x2, [x19, #8]
   1d0d0:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1d0d4:	ldr	x0, [x19]
   1d0d8:	mov	x1, #0x0                   	// #0
   1d0dc:	bl	eafc <__sancov_default_options@@Base+0x678>
   1d0e0:	str	x22, [x19]
   1d0e4:	ldp	x3, x0, [x19]
   1d0e8:	mov	x2, x20
   1d0ec:	mov	x1, x21
   1d0f0:	add	x0, x3, x0
   1d0f4:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1d0f8:	ldp	x0, x1, [x19]
   1d0fc:	add	x0, x0, x20
   1d100:	strb	wzr, [x0, x1]
   1d104:	ldr	x1, [x19, #8]
   1d108:	ldp	x21, x22, [sp, #16]
   1d10c:	add	x20, x1, x20
   1d110:	ldr	x30, [sp, #32]
   1d114:	str	x20, [x19, #8]
   1d118:	ldp	x19, x20, [sp], #48
   1d11c:	ret
   1d120:	stp	x19, x20, [sp, #-64]!
   1d124:	adrp	x2, 1d000 <__sanitizer_symbolize_global@@Base+0x28bc>
   1d128:	mov	x20, x0
   1d12c:	add	x3, sp, #0x28
   1d130:	add	x2, x2, #0x78
   1d134:	stp	x21, x30, [sp, #16]
   1d138:	and	w21, w1, #0xff
   1d13c:	mov	w1, #0x3                   	// #3
   1d140:	stp	xzr, xzr, [sp, #40]
   1d144:	str	xzr, [sp, #56]
   1d148:	bl	6d70 <__asan_cplus_demangle_v3_callback@plt>
   1d14c:	ldr	x19, [sp, #40]
   1d150:	cbz	w0, 1d190 <__sanitizer_symbolize_global@@Base+0x2a4c>
   1d154:	ldp	x0, x1, [sp, #48]
   1d158:	add	x0, x0, #0x40
   1d15c:	cmp	x0, x1
   1d160:	b.hi	1d17c <__sanitizer_symbolize_global@@Base+0x2a38>  // b.pmore
   1d164:	mov	x0, x19
   1d168:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   1d16c:	mov	x19, x0
   1d170:	mov	x1, #0x0                   	// #0
   1d174:	ldr	x0, [sp, #40]
   1d178:	bl	eafc <__sancov_default_options@@Base+0x678>
   1d17c:	cbz	x19, 1d1a0 <__sanitizer_symbolize_global@@Base+0x2a5c>
   1d180:	mov	x0, x19
   1d184:	ldp	x21, x30, [sp, #16]
   1d188:	ldp	x19, x20, [sp], #64
   1d18c:	ret
   1d190:	cbz	x19, 1d1a0 <__sanitizer_symbolize_global@@Base+0x2a5c>
   1d194:	mov	x0, x19
   1d198:	mov	x1, #0x0                   	// #0
   1d19c:	bl	eafc <__sancov_default_options@@Base+0x678>
   1d1a0:	cbz	w21, 1d1b4 <__sanitizer_symbolize_global@@Base+0x2a70>
   1d1a4:	mov	x0, x20
   1d1a8:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   1d1ac:	mov	x19, x0
   1d1b0:	b	1d180 <__sanitizer_symbolize_global@@Base+0x2a3c>
   1d1b4:	mov	x19, #0x0                   	// #0
   1d1b8:	b	1d180 <__sanitizer_symbolize_global@@Base+0x2a3c>
   1d1bc:	mov	x0, x1
   1d1c0:	mov	w1, #0x0                   	// #0
   1d1c4:	b	1d120 <__sanitizer_symbolize_global@@Base+0x29dc>
   1d1c8:	cbz	x2, 1d20c <__sanitizer_symbolize_global@@Base+0x2ac8>
   1d1cc:	stp	x19, x20, [sp, #-32]!
   1d1d0:	mov	x20, x2
   1d1d4:	mov	x19, x0
   1d1d8:	stp	x21, x30, [sp, #16]
   1d1dc:	bl	1cfb4 <__sanitizer_symbolize_global@@Base+0x2870>
   1d1e0:	mov	x21, x0
   1d1e4:	mov	w1, #0x1                   	// #1
   1d1e8:	mov	x0, x20
   1d1ec:	bl	1d120 <__sanitizer_symbolize_global@@Base+0x29dc>
   1d1f0:	str	x0, [x21, #32]
   1d1f4:	ldr	x0, [x19, #16]
   1d1f8:	ldp	x21, x30, [sp, #16]
   1d1fc:	add	x0, x0, #0x1
   1d200:	str	x0, [x19, #16]
   1d204:	ldp	x19, x20, [sp], #32
   1d208:	ret
   1d20c:	ret
   1d210:	cbz	x4, 1d27c <__sanitizer_symbolize_global@@Base+0x2b38>
   1d214:	stp	x19, x20, [sp, #-48]!
   1d218:	mov	x20, x0
   1d21c:	stp	x21, x22, [sp, #16]
   1d220:	mov	x22, x4
   1d224:	mov	x21, x2
   1d228:	stp	x23, x30, [sp, #32]
   1d22c:	mov	w23, w3
   1d230:	bl	1cfb4 <__sanitizer_symbolize_global@@Base+0x2870>
   1d234:	mov	x19, x0
   1d238:	mov	w1, #0x1                   	// #1
   1d23c:	mov	x0, x22
   1d240:	bl	1d120 <__sanitizer_symbolize_global@@Base+0x29dc>
   1d244:	str	x0, [x19, #32]
   1d248:	cbz	x21, 1d258 <__sanitizer_symbolize_global@@Base+0x2b14>
   1d24c:	mov	x0, x21
   1d250:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   1d254:	str	x0, [x19, #48]
   1d258:	ldr	x0, [x20, #16]
   1d25c:	ldp	x21, x22, [sp, #16]
   1d260:	str	w23, [x19, #56]
   1d264:	add	x0, x0, #0x1
   1d268:	ldp	x23, x30, [sp, #32]
   1d26c:	str	x0, [x20, #16]
   1d270:	mov	w0, #0x0                   	// #0
   1d274:	ldp	x19, x20, [sp], #48
   1d278:	ret
   1d27c:	mov	w0, #0x0                   	// #0
   1d280:	ret
   1d284:	cmp	x2, #0x0
   1d288:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   1d28c:	b.eq	1d2c4 <__sanitizer_symbolize_global@@Base+0x2b80>  // b.none
   1d290:	stp	x19, x20, [sp, #-32]!
   1d294:	mov	x19, x0
   1d298:	mov	x20, x3
   1d29c:	mov	x0, x2
   1d2a0:	mov	w1, #0x1                   	// #1
   1d2a4:	stp	x21, x30, [sp, #16]
   1d2a8:	mov	x21, x4
   1d2ac:	bl	1d120 <__sanitizer_symbolize_global@@Base+0x29dc>
   1d2b0:	stp	x0, x20, [x19, #40]
   1d2b4:	str	x21, [x19, #56]
   1d2b8:	ldp	x21, x30, [sp, #16]
   1d2bc:	ldp	x19, x20, [sp], #32
   1d2c0:	ret
   1d2c4:	ret
   1d2c8:	stp	x19, x20, [sp, #-32]!
   1d2cc:	mov	x3, #0x0                   	// #0
   1d2d0:	mov	x20, x0
   1d2d4:	adrp	x2, 1c000 <__sanitizer_symbolize_global@@Base+0x18bc>
   1d2d8:	mov	w1, #0x0                   	// #0
   1d2dc:	add	x2, x2, #0xefc
   1d2e0:	adrp	x0, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   1d2e4:	add	x0, x0, #0x3d1
   1d2e8:	str	x30, [sp, #16]
   1d2ec:	bl	6a30 <__asan_backtrace_create_state@plt>
   1d2f0:	mov	x19, x0
   1d2f4:	cbz	x0, 1d318 <__sanitizer_symbolize_global@@Base+0x2bd4>
   1d2f8:	mov	x1, #0x18                  	// #24
   1d2fc:	mov	x0, x20
   1d300:	bl	e5ec <__sancov_default_options@@Base+0x168>
   1d304:	str	x19, [x0, #16]
   1d308:	mov	x19, x0
   1d30c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1d310:	add	x1, x1, #0xce8
   1d314:	stp	x1, xzr, [x0]
   1d318:	mov	x0, x19
   1d31c:	ldr	x30, [sp, #16]
   1d320:	ldp	x19, x20, [sp], #32
   1d324:	ret
   1d328:	ret
   1d32c:	stp	x19, x20, [sp, #-80]!
   1d330:	stp	x21, x22, [sp, #16]
   1d334:	stp	x23, x24, [sp, #32]
   1d338:	stp	x25, x30, [sp, #48]
   1d33c:	cbz	x2, 1d3f8 <__sanitizer_symbolize_global@@Base+0x2cb4>
   1d340:	mov	x21, x0
   1d344:	mov	x22, x1
   1d348:	mov	x23, x2
   1d34c:	add	x24, sp, #0x48
   1d350:	sub	x25, x2, #0x1
   1d354:	mov	x19, #0x0                   	// #0
   1d358:	ldr	w0, [x21, #16]
   1d35c:	mov	x3, x24
   1d360:	sub	x2, x25, x19
   1d364:	add	x1, x22, x19
   1d368:	mov	x4, #0x0                   	// #0
   1d36c:	str	xzr, [sp, #72]
   1d370:	bl	16ec0 <__sanitizer_set_report_fd@@Base+0x440c>
   1d374:	ands	w20, w0, #0xff
   1d378:	b.eq	1d384 <__sanitizer_symbolize_global@@Base+0x2c40>  // b.none
   1d37c:	ldr	x0, [sp, #72]
   1d380:	cbnz	x0, 1d3b0 <__sanitizer_symbolize_global@@Base+0x2c6c>
   1d384:	ldr	w1, [x21, #16]
   1d388:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1d38c:	mov	w20, #0x0                   	// #0
   1d390:	add	x0, x0, #0xfba
   1d394:	bl	18b74 <OnPrint@@Base+0x30c>
   1d398:	mov	w0, w20
   1d39c:	ldp	x21, x22, [sp, #16]
   1d3a0:	ldp	x23, x24, [sp, #32]
   1d3a4:	ldp	x25, x30, [sp, #48]
   1d3a8:	ldp	x19, x20, [sp], #80
   1d3ac:	ret
   1d3b0:	add	x19, x19, x0
   1d3b4:	mov	x1, x22
   1d3b8:	ldr	x0, [x21]
   1d3bc:	mov	x2, x19
   1d3c0:	ldr	x3, [x0]
   1d3c4:	mov	x0, x21
   1d3c8:	blr	x3
   1d3cc:	tst	w0, #0xff
   1d3d0:	b.ne	1d3f0 <__sanitizer_symbolize_global@@Base+0x2cac>  // b.any
   1d3d4:	add	x0, x19, #0x1
   1d3d8:	cmp	x23, x0
   1d3dc:	b.ne	1d358 <__sanitizer_symbolize_global@@Base+0x2c14>  // b.any
   1d3e0:	mov	x19, #0x0                   	// #0
   1d3e4:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1d3e8:	add	x0, x0, #0xfe8
   1d3ec:	bl	18b74 <OnPrint@@Base+0x30c>
   1d3f0:	strb	wzr, [x22, x19]
   1d3f4:	b	1d398 <__sanitizer_symbolize_global@@Base+0x2c54>
   1d3f8:	mov	w20, #0x1                   	// #1
   1d3fc:	b	1d398 <__sanitizer_symbolize_global@@Base+0x2c54>
   1d400:	stp	x19, x20, [sp, #-32]!
   1d404:	mov	x20, x0
   1d408:	mov	x19, #0x0                   	// #0
   1d40c:	stp	x21, x30, [sp, #16]
   1d410:	mov	x21, x1
   1d414:	ldr	x0, [x20, #16]
   1d418:	cmp	x19, x0
   1d41c:	b.cs	1d458 <__sanitizer_symbolize_global@@Base+0x2d14>  // b.hs, b.nlast
   1d420:	mov	x1, x19
   1d424:	mov	x0, x20
   1d428:	bl	1e280 <__sanitizer_symbolize_global@@Base+0x3b3c>
   1d42c:	mov	x1, x21
   1d430:	bl	1034c <__sancov_default_options@@Base+0x1ec8>
   1d434:	tst	w0, #0xff
   1d438:	b.eq	1d450 <__sanitizer_symbolize_global@@Base+0x2d0c>  // b.none
   1d43c:	mov	x1, x19
   1d440:	mov	x0, x20
   1d444:	ldp	x21, x30, [sp, #16]
   1d448:	ldp	x19, x20, [sp], #32
   1d44c:	b	1e280 <__sanitizer_symbolize_global@@Base+0x3b3c>
   1d450:	add	x19, x19, #0x1
   1d454:	b	1d414 <__sanitizer_symbolize_global@@Base+0x2cd0>
   1d458:	mov	x0, #0x0                   	// #0
   1d45c:	ldp	x21, x30, [sp, #16]
   1d460:	ldp	x19, x20, [sp], #32
   1d464:	ret
   1d468:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d46c:	stp	x19, x20, [sp, #-32]!
   1d470:	mov	w3, #0x1                   	// #1
   1d474:	ldr	x0, [x1, #3832]
   1d478:	str	x30, [sp, #16]
   1d47c:	ldxrb	w2, [x0]
   1d480:	stxrb	w4, w3, [x0]
   1d484:	cbnz	w4, 1d47c <__sanitizer_symbolize_global@@Base+0x2d38>
   1d488:	dmb	ish
   1d48c:	tst	w2, #0xff
   1d490:	mov	x19, x1
   1d494:	b.eq	1d49c <__sanitizer_symbolize_global@@Base+0x2d58>  // b.none
   1d498:	bl	b08c <__sanitizer_get_allocated_size@@Base+0xb8c>
   1d49c:	adrp	x20, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1d4a0:	ldr	x20, [x20, #3744]
   1d4a4:	ldr	x0, [x20]
   1d4a8:	cbnz	x0, 1d4d8 <__sanitizer_symbolize_global@@Base+0x2d94>
   1d4ac:	bl	1e674 <__sanitizer_symbolize_global@@Base+0x3f30>
   1d4b0:	str	x0, [x20]
   1d4b4:	cbnz	x0, 1d4d8 <__sanitizer_symbolize_global@@Base+0x2d94>
   1d4b8:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1d4bc:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1d4c0:	add	x2, x2, #0xe
   1d4c4:	add	x0, x0, #0x25
   1d4c8:	mov	x4, #0x0                   	// #0
   1d4cc:	mov	x3, #0x0                   	// #0
   1d4d0:	mov	w1, #0x17                  	// #23
   1d4d4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1d4d8:	dmb	ish
   1d4dc:	ldr	x1, [x19, #3832]
   1d4e0:	strb	wzr, [x1]
   1d4e4:	ldr	x30, [sp, #16]
   1d4e8:	ldp	x19, x20, [sp], #32
   1d4ec:	ret
   1d4f0:	stp	x19, x20, [sp, #-32]!
   1d4f4:	mov	x20, x0
   1d4f8:	stp	x21, x30, [sp, #16]
   1d4fc:	mov	x21, x2
   1d500:	bl	14470 <__sanitizer_set_report_fd@@Base+0x19bc>
   1d504:	mov	x2, #0x0                   	// #0
   1d508:	mov	x19, x0
   1d50c:	mov	x1, #0x0                   	// #0
   1d510:	add	x0, x0, #0x1
   1d514:	bl	e8ec <__sancov_default_options@@Base+0x468>
   1d518:	str	x0, [x21]
   1d51c:	mov	x1, x20
   1d520:	mov	x2, x19
   1d524:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1d528:	ldr	x0, [x21]
   1d52c:	strb	wzr, [x0, x19]
   1d530:	add	x0, x20, x19
   1d534:	ldrb	w1, [x20, x19]
   1d538:	cbz	w1, 1d540 <__sanitizer_symbolize_global@@Base+0x2dfc>
   1d53c:	add	x0, x0, #0x1
   1d540:	ldp	x21, x30, [sp, #16]
   1d544:	ldp	x19, x20, [sp], #32
   1d548:	ret
   1d54c:	stp	x19, x20, [sp, #-48]!
   1d550:	mov	x20, x2
   1d554:	add	x2, sp, #0x28
   1d558:	str	x30, [sp, #16]
   1d55c:	bl	1d4f0 <__sanitizer_symbolize_global@@Base+0x2dac>
   1d560:	mov	x19, x0
   1d564:	ldr	x0, [sp, #40]
   1d568:	cbz	x0, 1d574 <__sanitizer_symbolize_global@@Base+0x2e30>
   1d56c:	bl	1484c <__sanitizer_set_report_fd@@Base+0x1d98>
   1d570:	str	w0, [x20]
   1d574:	ldr	x0, [sp, #40]
   1d578:	mov	x1, #0x0                   	// #0
   1d57c:	bl	eafc <__sancov_default_options@@Base+0x678>
   1d580:	mov	x0, x19
   1d584:	ldr	x30, [sp, #16]
   1d588:	ldp	x19, x20, [sp], #48
   1d58c:	ret
   1d590:	stp	x19, x20, [sp, #-48]!
   1d594:	mov	x20, x2
   1d598:	add	x2, sp, #0x28
   1d59c:	str	x30, [sp, #16]
   1d5a0:	bl	1d4f0 <__sanitizer_symbolize_global@@Base+0x2dac>
   1d5a4:	mov	x19, x0
   1d5a8:	ldr	x0, [sp, #40]
   1d5ac:	cbz	x0, 1d5b8 <__sanitizer_symbolize_global@@Base+0x2e74>
   1d5b0:	bl	1484c <__sanitizer_set_report_fd@@Base+0x1d98>
   1d5b4:	str	x0, [x20]
   1d5b8:	ldr	x0, [sp, #40]
   1d5bc:	mov	x1, #0x0                   	// #0
   1d5c0:	bl	eafc <__sancov_default_options@@Base+0x678>
   1d5c4:	mov	x0, x19
   1d5c8:	ldr	x30, [sp, #16]
   1d5cc:	ldp	x19, x20, [sp], #48
   1d5d0:	ret
   1d5d4:	stp	x19, x20, [sp, #-48]!
   1d5d8:	mov	x20, x0
   1d5dc:	stp	x21, x22, [sp, #16]
   1d5e0:	mov	x22, x1
   1d5e4:	mov	x21, x2
   1d5e8:	str	x30, [sp, #32]
   1d5ec:	bl	146e8 <__sanitizer_set_report_fd@@Base+0x1c34>
   1d5f0:	cbz	x0, 1d64c <__sanitizer_symbolize_global@@Base+0x2f08>
   1d5f4:	sub	x19, x0, x20
   1d5f8:	mov	x2, #0x0                   	// #0
   1d5fc:	mov	x1, #0x0                   	// #0
   1d600:	add	x0, x19, #0x1
   1d604:	bl	e8ec <__sancov_default_options@@Base+0x468>
   1d608:	str	x0, [x21]
   1d60c:	mov	x2, x19
   1d610:	mov	x1, x20
   1d614:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1d618:	ldr	x0, [x21]
   1d61c:	add	x21, x20, x19
   1d620:	strb	wzr, [x0, x19]
   1d624:	ldrb	w0, [x20, x19]
   1d628:	cbz	w0, 1d638 <__sanitizer_symbolize_global@@Base+0x2ef4>
   1d62c:	mov	x0, x22
   1d630:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1d634:	add	x21, x21, x0
   1d638:	mov	x0, x21
   1d63c:	ldp	x21, x22, [sp, #16]
   1d640:	ldr	x30, [sp, #32]
   1d644:	ldp	x19, x20, [sp], #48
   1d648:	ret
   1d64c:	mov	x0, x20
   1d650:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1d654:	mov	x19, x0
   1d658:	b	1d5f8 <__sanitizer_symbolize_global@@Base+0x2eb4>
   1d65c:	stp	x19, x20, [sp, #-64]!
   1d660:	mov	x20, x0
   1d664:	stp	x21, x22, [sp, #16]
   1d668:	add	x21, x0, #0x70
   1d66c:	mov	x0, x21
   1d670:	str	x30, [sp, #32]
   1d674:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1d678:	ldr	x19, [x20, #208]
   1d67c:	add	x22, sp, #0x38
   1d680:	cbz	x19, 1d6b0 <__sanitizer_symbolize_global@@Base+0x2f6c>
   1d684:	mov	x1, x20
   1d688:	mov	x0, x22
   1d68c:	bl	1cc3c <__sanitizer_symbolize_global@@Base+0x24f8>
   1d690:	ldr	x0, [x19]
   1d694:	ldr	x1, [x0, #16]
   1d698:	mov	x0, x19
   1d69c:	blr	x1
   1d6a0:	mov	x0, x22
   1d6a4:	bl	1cc54 <__sanitizer_symbolize_global@@Base+0x2510>
   1d6a8:	ldr	x19, [x19, #8]
   1d6ac:	b	1d680 <__sanitizer_symbolize_global@@Base+0x2f3c>
   1d6b0:	mov	x0, x21
   1d6b4:	bl	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   1d6b8:	ldp	x21, x22, [sp, #16]
   1d6bc:	ldr	x30, [sp, #32]
   1d6c0:	ldp	x19, x20, [sp], #64
   1d6c4:	ret
   1d6c8:	stp	x19, x20, [sp, #-80]!
   1d6cc:	mov	x20, x0
   1d6d0:	stp	x23, x24, [sp, #32]
   1d6d4:	add	x24, x0, #0x70
   1d6d8:	mov	x0, x24
   1d6dc:	stp	x21, x22, [sp, #16]
   1d6e0:	mov	x22, x1
   1d6e4:	add	x23, sp, #0x48
   1d6e8:	str	x30, [sp, #48]
   1d6ec:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1d6f0:	ldr	x21, [x20, #208]
   1d6f4:	cbz	x21, 1d754 <__sanitizer_symbolize_global@@Base+0x3010>
   1d6f8:	mov	x1, x20
   1d6fc:	mov	x0, x23
   1d700:	bl	1cc3c <__sanitizer_symbolize_global@@Base+0x24f8>
   1d704:	ldr	x0, [x21]
   1d708:	mov	x1, x22
   1d70c:	ldr	x2, [x0, #24]
   1d710:	mov	x0, x21
   1d714:	blr	x2
   1d718:	mov	x19, x0
   1d71c:	mov	x0, x23
   1d720:	cbz	x19, 1d748 <__sanitizer_symbolize_global@@Base+0x3004>
   1d724:	bl	1cc54 <__sanitizer_symbolize_global@@Base+0x2510>
   1d728:	mov	x0, x24
   1d72c:	bl	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   1d730:	mov	x0, x19
   1d734:	ldp	x21, x22, [sp, #16]
   1d738:	ldp	x23, x24, [sp, #32]
   1d73c:	ldr	x30, [sp, #48]
   1d740:	ldp	x19, x20, [sp], #80
   1d744:	ret
   1d748:	bl	1cc54 <__sanitizer_symbolize_global@@Base+0x2510>
   1d74c:	ldr	x21, [x21, #8]
   1d750:	b	1d6f4 <__sanitizer_symbolize_global@@Base+0x2fb0>
   1d754:	mov	x1, x22
   1d758:	mov	x0, x20
   1d75c:	bl	1e644 <__sanitizer_symbolize_global@@Base+0x3f00>
   1d760:	mov	x19, x0
   1d764:	b	1d728 <__sanitizer_symbolize_global@@Base+0x2fe4>
   1d768:	stp	x19, x30, [sp, #-16]!
   1d76c:	mov	x19, x0
   1d770:	add	x0, x0, #0x28
   1d774:	bl	166b4 <__sanitizer_set_report_fd@@Base+0x3c00>
   1d778:	add	x0, x19, #0x48
   1d77c:	bl	166f0 <__sanitizer_set_report_fd@@Base+0x3c3c>
   1d780:	ldr	x0, [x19, #56]
   1d784:	cbnz	x0, 1d798 <__sanitizer_symbolize_global@@Base+0x3054>
   1d788:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1d78c:	add	x0, x0, #0x6f
   1d790:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   1d794:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1d798:	mov	w0, #0x1                   	// #1
   1d79c:	strb	w0, [x19, #104]
   1d7a0:	ldp	x19, x30, [sp], #16
   1d7a4:	ret
   1d7a8:	stp	x19, x20, [sp, #-48]!
   1d7ac:	mov	x19, x0
   1d7b0:	stp	x21, x22, [sp, #16]
   1d7b4:	mov	x21, x1
   1d7b8:	ldrb	w1, [x0, #104]
   1d7bc:	stp	x23, x30, [sp, #32]
   1d7c0:	cbnz	w1, 1d808 <__sanitizer_symbolize_global@@Base+0x30c4>
   1d7c4:	mov	w23, #0x1                   	// #1
   1d7c8:	bl	1d768 <__sanitizer_symbolize_global@@Base+0x3024>
   1d7cc:	add	x22, x19, #0x28
   1d7d0:	mov	x1, x21
   1d7d4:	mov	x0, x22
   1d7d8:	bl	1d400 <__sanitizer_symbolize_global@@Base+0x2cbc>
   1d7dc:	mov	x20, x0
   1d7e0:	cbnz	x0, 1d82c <__sanitizer_symbolize_global@@Base+0x30e8>
   1d7e4:	cbz	w23, 1d810 <__sanitizer_symbolize_global@@Base+0x30cc>
   1d7e8:	ldr	x0, [x19, #88]
   1d7ec:	cbz	x0, 1d82c <__sanitizer_symbolize_global@@Base+0x30e8>
   1d7f0:	mov	x1, x21
   1d7f4:	add	x0, x19, #0x48
   1d7f8:	ldp	x21, x22, [sp, #16]
   1d7fc:	ldp	x23, x30, [sp, #32]
   1d800:	ldp	x19, x20, [sp], #48
   1d804:	b	1d400 <__sanitizer_symbolize_global@@Base+0x2cbc>
   1d808:	mov	w23, #0x0                   	// #0
   1d80c:	b	1d7cc <__sanitizer_symbolize_global@@Base+0x3088>
   1d810:	mov	x0, x19
   1d814:	bl	1d768 <__sanitizer_symbolize_global@@Base+0x3024>
   1d818:	mov	x1, x21
   1d81c:	mov	x0, x22
   1d820:	bl	1d400 <__sanitizer_symbolize_global@@Base+0x2cbc>
   1d824:	cbz	x0, 1d7e8 <__sanitizer_symbolize_global@@Base+0x30a4>
   1d828:	mov	x20, x0
   1d82c:	mov	x0, x20
   1d830:	ldp	x21, x22, [sp, #16]
   1d834:	ldp	x23, x30, [sp, #32]
   1d838:	ldp	x19, x20, [sp], #48
   1d83c:	ret
   1d840:	stp	x19, x20, [sp, #-48]!
   1d844:	mov	x19, x1
   1d848:	mov	x20, x4
   1d84c:	stp	x21, x22, [sp, #16]
   1d850:	mov	x22, x2
   1d854:	mov	x21, x3
   1d858:	str	x30, [sp, #32]
   1d85c:	bl	1d7a8 <__sanitizer_symbolize_global@@Base+0x3064>
   1d860:	cbz	x0, 1d894 <__sanitizer_symbolize_global@@Base+0x3150>
   1d864:	ldr	x1, [x0]
   1d868:	str	x1, [x22]
   1d86c:	ldr	x1, [x0, #8]
   1d870:	ldr	w0, [x0, #24]
   1d874:	sub	x19, x19, x1
   1d878:	str	x19, [x21]
   1d87c:	str	w0, [x20]
   1d880:	mov	w0, #0x1                   	// #1
   1d884:	ldp	x21, x22, [sp, #16]
   1d888:	ldr	x30, [sp, #32]
   1d88c:	ldp	x19, x20, [sp], #48
   1d890:	ret
   1d894:	mov	w0, #0x0                   	// #0
   1d898:	b	1d884 <__sanitizer_symbolize_global@@Base+0x3140>
   1d89c:	stp	x19, x20, [sp, #-64]!
   1d8a0:	mov	x20, x1
   1d8a4:	mov	x19, x0
   1d8a8:	stp	x23, x30, [sp, #32]
   1d8ac:	add	x23, x0, #0x70
   1d8b0:	mov	x0, x23
   1d8b4:	stp	x21, x22, [sp, #16]
   1d8b8:	mov	x21, x2
   1d8bc:	mov	x22, x3
   1d8c0:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1d8c4:	str	xzr, [sp, #56]
   1d8c8:	mov	x1, x20
   1d8cc:	add	x4, sp, #0x34
   1d8d0:	mov	x3, x22
   1d8d4:	add	x2, sp, #0x38
   1d8d8:	mov	x0, x19
   1d8dc:	bl	1d840 <__sanitizer_symbolize_global@@Base+0x30fc>
   1d8e0:	mov	w20, w0
   1d8e4:	tst	w0, #0xff
   1d8e8:	b.eq	1d900 <__sanitizer_symbolize_global@@Base+0x31bc>  // b.none
   1d8ec:	cbz	x21, 1d900 <__sanitizer_symbolize_global@@Base+0x31bc>
   1d8f0:	ldr	x1, [sp, #56]
   1d8f4:	mov	x0, x19
   1d8f8:	bl	1cc6c <__sanitizer_symbolize_global@@Base+0x2528>
   1d8fc:	str	x0, [x21]
   1d900:	mov	x0, x23
   1d904:	bl	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   1d908:	mov	w0, w20
   1d90c:	ldp	x21, x22, [sp, #16]
   1d910:	ldp	x23, x30, [sp, #32]
   1d914:	ldp	x19, x20, [sp], #64
   1d918:	ret
   1d91c:	stp	x19, x20, [sp, #-96]!
   1d920:	mov	x19, x0
   1d924:	stp	x23, x24, [sp, #32]
   1d928:	add	x24, x0, #0x70
   1d92c:	mov	x0, x24
   1d930:	stp	x21, x22, [sp, #16]
   1d934:	mov	x22, x1
   1d938:	str	x30, [sp, #48]
   1d93c:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1d940:	mov	x0, x22
   1d944:	bl	1cb48 <__sanitizer_symbolize_global@@Base+0x2404>
   1d948:	add	x4, sp, #0x44
   1d94c:	mov	x20, x0
   1d950:	add	x3, sp, #0x50
   1d954:	add	x2, sp, #0x48
   1d958:	mov	x1, x22
   1d95c:	mov	x0, x19
   1d960:	bl	1d840 <__sanitizer_symbolize_global@@Base+0x30fc>
   1d964:	tst	w0, #0xff
   1d968:	b.eq	1d9bc <__sanitizer_symbolize_global@@Base+0x3278>  // b.none
   1d96c:	ldp	x1, x2, [sp, #72]
   1d970:	add	x0, x20, #0x8
   1d974:	ldr	w3, [sp, #68]
   1d978:	add	x23, sp, #0x58
   1d97c:	bl	1cb10 <__sanitizer_symbolize_global@@Base+0x23cc>
   1d980:	ldr	x21, [x19, #208]
   1d984:	cbz	x21, 1d9bc <__sanitizer_symbolize_global@@Base+0x3278>
   1d988:	mov	x1, x19
   1d98c:	mov	x0, x23
   1d990:	bl	1cc3c <__sanitizer_symbolize_global@@Base+0x24f8>
   1d994:	ldr	x0, [x21]
   1d998:	mov	x2, x20
   1d99c:	mov	x1, x22
   1d9a0:	ldr	x3, [x0]
   1d9a4:	mov	x0, x21
   1d9a8:	blr	x3
   1d9ac:	tst	w0, #0xff
   1d9b0:	mov	x0, x23
   1d9b4:	b.eq	1d9dc <__sanitizer_symbolize_global@@Base+0x3298>  // b.none
   1d9b8:	bl	1cc54 <__sanitizer_symbolize_global@@Base+0x2510>
   1d9bc:	mov	x0, x24
   1d9c0:	bl	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   1d9c4:	mov	x0, x20
   1d9c8:	ldp	x21, x22, [sp, #16]
   1d9cc:	ldp	x23, x24, [sp, #32]
   1d9d0:	ldr	x30, [sp, #48]
   1d9d4:	ldp	x19, x20, [sp], #96
   1d9d8:	ret
   1d9dc:	bl	1cc54 <__sanitizer_symbolize_global@@Base+0x2510>
   1d9e0:	ldr	x21, [x21, #8]
   1d9e4:	b	1d984 <__sanitizer_symbolize_global@@Base+0x3240>
   1d9e8:	stp	x19, x20, [sp, #-112]!
   1d9ec:	mov	x20, x0
   1d9f0:	mov	x19, x2
   1d9f4:	stp	x25, x26, [sp, #48]
   1d9f8:	add	x26, x0, #0x70
   1d9fc:	mov	x25, x1
   1da00:	mov	x0, x26
   1da04:	stp	x21, x22, [sp, #16]
   1da08:	stp	x23, x24, [sp, #32]
   1da0c:	str	x30, [sp, #64]
   1da10:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1da14:	add	x4, sp, #0x54
   1da18:	add	x3, sp, #0x60
   1da1c:	add	x2, sp, #0x58
   1da20:	mov	x1, x25
   1da24:	mov	x0, x20
   1da28:	bl	1d840 <__sanitizer_symbolize_global@@Base+0x30fc>
   1da2c:	ands	w21, w0, #0xff
   1da30:	b.eq	1da9c <__sanitizer_symbolize_global@@Base+0x3358>  // b.none
   1da34:	mov	x0, x19
   1da38:	bl	1cbb8 <__sanitizer_symbolize_global@@Base+0x2474>
   1da3c:	ldr	x0, [sp, #88]
   1da40:	add	x24, sp, #0x68
   1da44:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   1da48:	ldr	x22, [x20, #208]
   1da4c:	str	x0, [x19]
   1da50:	ldr	x0, [sp, #96]
   1da54:	str	x0, [x19, #8]
   1da58:	ldr	w0, [sp, #84]
   1da5c:	str	w0, [x19, #16]
   1da60:	cbz	x22, 1da9c <__sanitizer_symbolize_global@@Base+0x3358>
   1da64:	mov	x1, x20
   1da68:	mov	x0, x24
   1da6c:	bl	1cc3c <__sanitizer_symbolize_global@@Base+0x24f8>
   1da70:	ldr	x0, [x22]
   1da74:	mov	x2, x19
   1da78:	mov	x1, x25
   1da7c:	ldr	x3, [x0, #8]
   1da80:	mov	x0, x22
   1da84:	blr	x3
   1da88:	ands	w23, w0, #0xff
   1da8c:	mov	x0, x24
   1da90:	b.eq	1dac0 <__sanitizer_symbolize_global@@Base+0x337c>  // b.none
   1da94:	mov	w21, w23
   1da98:	bl	1cc54 <__sanitizer_symbolize_global@@Base+0x2510>
   1da9c:	mov	x0, x26
   1daa0:	bl	153ec <__sanitizer_set_report_fd@@Base+0x2938>
   1daa4:	mov	w0, w21
   1daa8:	ldp	x21, x22, [sp, #16]
   1daac:	ldp	x23, x24, [sp, #32]
   1dab0:	ldp	x25, x26, [sp, #48]
   1dab4:	ldr	x30, [sp, #64]
   1dab8:	ldp	x19, x20, [sp], #112
   1dabc:	ret
   1dac0:	bl	1cc54 <__sanitizer_symbolize_global@@Base+0x2510>
   1dac4:	ldr	x22, [x22, #8]
   1dac8:	b	1da60 <__sanitizer_symbolize_global@@Base+0x331c>
   1dacc:	stp	x19, x20, [sp, #-128]!
   1dad0:	mov	w19, #0x1                   	// #1
   1dad4:	stp	x21, x22, [sp, #16]
   1dad8:	mov	x21, x1
   1dadc:	stp	x23, x24, [sp, #32]
   1dae0:	mov	x23, x0
   1dae4:	mov	x24, x1
   1dae8:	stp	x25, x26, [sp, #48]
   1daec:	adrp	x25, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1daf0:	adrp	x26, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1daf4:	stp	x27, x28, [sp, #64]
   1daf8:	add	x27, x25, #0x60e
   1dafc:	add	x28, x26, #0xb6
   1db00:	str	x30, [sp, #80]
   1db04:	add	x2, sp, #0x70
   1db08:	add	x1, x25, #0x60e
   1db0c:	mov	x0, x23
   1db10:	str	xzr, [sp, #112]
   1db14:	bl	1d4f0 <__sanitizer_symbolize_global@@Base+0x2dac>
   1db18:	mov	x20, x0
   1db1c:	ldr	x0, [sp, #112]
   1db20:	cbnz	x0, 1db44 <__sanitizer_symbolize_global@@Base+0x3400>
   1db24:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1db28:	add	x2, x2, #0x83
   1db2c:	mov	x4, #0x0                   	// #0
   1db30:	mov	x3, #0x0                   	// #0
   1db34:	mov	w1, #0x12c                 	// #300
   1db38:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1db3c:	add	x0, x0, #0x25
   1db40:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1db44:	ldrb	w1, [x0]
   1db48:	cbnz	w1, 1db70 <__sanitizer_symbolize_global@@Base+0x342c>
   1db4c:	mov	x1, #0x0                   	// #0
   1db50:	bl	eafc <__sancov_default_options@@Base+0x678>
   1db54:	ldp	x21, x22, [sp, #16]
   1db58:	ldp	x23, x24, [sp, #32]
   1db5c:	ldp	x25, x26, [sp, #48]
   1db60:	ldp	x27, x28, [sp, #64]
   1db64:	ldr	x30, [sp, #80]
   1db68:	ldp	x19, x20, [sp], #128
   1db6c:	ret
   1db70:	cbnz	w19, 1dbdc <__sanitizer_symbolize_global@@Base+0x3498>
   1db74:	ldr	x0, [x21, #8]
   1db78:	bl	1cb48 <__sanitizer_symbolize_global@@Base+0x2404>
   1db7c:	mov	x22, x0
   1db80:	ldp	x1, x2, [x21, #16]
   1db84:	add	x0, x0, #0x8
   1db88:	ldr	w3, [x21, #32]
   1db8c:	bl	1cb10 <__sanitizer_symbolize_global@@Base+0x23cc>
   1db90:	str	x22, [x24]
   1db94:	mov	x24, x22
   1db98:	add	x19, x22, #0x8
   1db9c:	add	x2, sp, #0x78
   1dba0:	ldr	x0, [sp, #112]
   1dba4:	mov	x1, x27
   1dba8:	str	x0, [x19, #32]
   1dbac:	mov	x0, x20
   1dbb0:	str	xzr, [sp, #120]
   1dbb4:	bl	1d4f0 <__sanitizer_symbolize_global@@Base+0x2dac>
   1dbb8:	mov	x23, x0
   1dbbc:	ldr	x0, [sp, #120]
   1dbc0:	cbnz	x0, 1dbe4 <__sanitizer_symbolize_global@@Base+0x34a0>
   1dbc4:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1dbc8:	mov	x4, #0x0                   	// #0
   1dbcc:	add	x2, x2, #0x9c
   1dbd0:	mov	x3, #0x0                   	// #0
   1dbd4:	mov	w1, #0x10d                 	// #269
   1dbd8:	b	1db38 <__sanitizer_symbolize_global@@Base+0x33f4>
   1dbdc:	mov	x22, x21
   1dbe0:	b	1db98 <__sanitizer_symbolize_global@@Base+0x3454>
   1dbe4:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1dbe8:	cbz	x0, 1dc3c <__sanitizer_symbolize_global@@Base+0x34f8>
   1dbec:	ldr	x20, [sp, #120]
   1dbf0:	sub	x0, x0, #0x1
   1dbf4:	mov	w1, #0x2                   	// #2
   1dbf8:	add	x20, x20, x0
   1dbfc:	ldr	x2, [sp, #120]
   1dc00:	cmp	x2, x20
   1dc04:	ldrb	w0, [x20]
   1dc08:	b.cs	1dc20 <__sanitizer_symbolize_global@@Base+0x34dc>  // b.hs, b.nlast
   1dc0c:	sub	w3, w0, #0x30
   1dc10:	cmp	w3, #0x9
   1dc14:	b.hi	1dc20 <__sanitizer_symbolize_global@@Base+0x34dc>  // b.pmore
   1dc18:	sub	x20, x20, #0x1
   1dc1c:	b	1dc00 <__sanitizer_symbolize_global@@Base+0x34bc>
   1dc20:	cmp	w0, #0x3a
   1dc24:	b.eq	1dc90 <__sanitizer_symbolize_global@@Base+0x354c>  // b.none
   1dc28:	ldr	x0, [sp, #120]
   1dc2c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1dc30:	add	x2, x22, #0x38
   1dc34:	add	x1, x1, #0x60f
   1dc38:	bl	1d4f0 <__sanitizer_symbolize_global@@Base+0x2dac>
   1dc3c:	ldr	x0, [sp, #120]
   1dc40:	mov	x1, #0x0                   	// #0
   1dc44:	bl	eafc <__sancov_default_options@@Base+0x678>
   1dc48:	ldr	x0, [x19, #32]
   1dc4c:	add	x1, x26, #0xb6
   1dc50:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1dc54:	cbnz	w0, 1dc68 <__sanitizer_symbolize_global@@Base+0x3524>
   1dc58:	ldr	x0, [x19, #32]
   1dc5c:	mov	x1, #0x0                   	// #0
   1dc60:	bl	eafc <__sancov_default_options@@Base+0x678>
   1dc64:	str	xzr, [x19, #32]
   1dc68:	ldr	x0, [x19, #48]
   1dc6c:	mov	x1, x28
   1dc70:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1dc74:	cbnz	w0, 1dc88 <__sanitizer_symbolize_global@@Base+0x3544>
   1dc78:	ldr	x0, [x19, #48]
   1dc7c:	mov	x1, #0x0                   	// #0
   1dc80:	bl	eafc <__sancov_default_options@@Base+0x678>
   1dc84:	str	xzr, [x19, #48]
   1dc88:	mov	w19, #0x0                   	// #0
   1dc8c:	b	1db04 <__sanitizer_symbolize_global@@Base+0x33c0>
   1dc90:	ldrb	w0, [x20, #1]
   1dc94:	str	w1, [sp, #108]
   1dc98:	sub	w0, w0, #0x30
   1dc9c:	cmp	w0, #0x9
   1dca0:	b.hi	1dc28 <__sanitizer_symbolize_global@@Base+0x34e4>  // b.pmore
   1dca4:	ldr	w0, [x19, #56]
   1dca8:	str	w0, [x19, #60]
   1dcac:	add	x0, x20, #0x1
   1dcb0:	bl	1484c <__sanitizer_set_report_fd@@Base+0x1d98>
   1dcb4:	str	w0, [x19, #56]
   1dcb8:	ldr	w1, [sp, #108]
   1dcbc:	strb	wzr, [x20], #-1
   1dcc0:	cmp	w1, #0x1
   1dcc4:	b.eq	1dc28 <__sanitizer_symbolize_global@@Base+0x34e4>  // b.none
   1dcc8:	mov	w1, #0x1                   	// #1
   1dccc:	b	1dbfc <__sanitizer_symbolize_global@@Base+0x34b8>
   1dcd0:	stp	x19, x20, [sp, #-32]!
   1dcd4:	adrp	x20, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1dcd8:	add	x20, x20, #0x60e
   1dcdc:	mov	x19, x1
   1dce0:	add	x2, x1, #0x28
   1dce4:	mov	x1, x20
   1dce8:	str	x30, [sp, #16]
   1dcec:	bl	1d4f0 <__sanitizer_symbolize_global@@Base+0x2dac>
   1dcf0:	add	x2, x19, #0x30
   1dcf4:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   1dcf8:	add	x1, x1, #0x809
   1dcfc:	bl	1d590 <__sanitizer_symbolize_global@@Base+0x2e4c>
   1dd00:	add	x2, x19, #0x38
   1dd04:	mov	x1, x20
   1dd08:	ldr	x30, [sp, #16]
   1dd0c:	ldp	x19, x20, [sp], #32
   1dd10:	b	1d590 <__sanitizer_symbolize_global@@Base+0x2e4c>
   1dd14:	adrp	x3, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1dd18:	add	x3, x3, #0xd70
   1dd1c:	str	x30, [sp, #-16]!
   1dd20:	stp	x3, x1, [x0]
   1dd24:	mov	x3, #0xffffffffffffffff    	// #-1
   1dd28:	str	x3, [x0, #16]
   1dd2c:	add	x0, x0, #0x4, lsl #12
   1dd30:	str	xzr, [x0, #24]
   1dd34:	strh	wzr, [x0, #32]
   1dd38:	strb	w2, [x0, #34]
   1dd3c:	cbnz	x1, 1dd60 <__sanitizer_symbolize_global@@Base+0x361c>
   1dd40:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1dd44:	add	x2, x2, #0xb9
   1dd48:	mov	x4, #0x0                   	// #0
   1dd4c:	mov	x3, #0x0                   	// #0
   1dd50:	mov	w1, #0x18f                 	// #399
   1dd54:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1dd58:	add	x0, x0, #0x25
   1dd5c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1dd60:	ldrb	w0, [x1]
   1dd64:	cbnz	w0, 1dd80 <__sanitizer_symbolize_global@@Base+0x363c>
   1dd68:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1dd6c:	mov	x4, #0x0                   	// #0
   1dd70:	add	x2, x2, #0xca
   1dd74:	mov	x3, #0x0                   	// #0
   1dd78:	mov	w1, #0x190                 	// #400
   1dd7c:	b	1dd54 <__sanitizer_symbolize_global@@Base+0x3610>
   1dd80:	ldr	x30, [sp], #16
   1dd84:	ret
   1dd88:	stp	x19, x20, [sp, #-32]!
   1dd8c:	mov	x19, x0
   1dd90:	mov	x0, x2
   1dd94:	stp	x21, x30, [sp, #16]
   1dd98:	mov	x21, x1
   1dd9c:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1dda0:	add	x1, x1, #0xd40
   1dda4:	stp	x1, xzr, [x19]
   1dda8:	mov	x1, #0x4028                	// #16424
   1ddac:	bl	e5ec <__sancov_default_options@@Base+0x168>
   1ddb0:	mov	x20, x0
   1ddb4:	mov	x1, x21
   1ddb8:	mov	w2, #0x0                   	// #0
   1ddbc:	bl	1dd14 <__sanitizer_symbolize_global@@Base+0x35d0>
   1ddc0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1ddc4:	add	x0, x0, #0xd18
   1ddc8:	ldp	x21, x30, [sp, #16]
   1ddcc:	str	x0, [x20]
   1ddd0:	str	x20, [x19, #16]
   1ddd4:	ldp	x19, x20, [sp], #32
   1ddd8:	ret
   1dddc:	stp	x19, x30, [sp, #-16]!
   1dde0:	mov	x19, x0
   1dde4:	ldr	w0, [x0, #16]
   1dde8:	cmn	w0, #0x1
   1ddec:	b.eq	1ddf4 <__sanitizer_symbolize_global@@Base+0x36b0>  // b.none
   1ddf0:	bl	16ebc <__sanitizer_set_report_fd@@Base+0x4408>
   1ddf4:	ldr	w0, [x19, #20]
   1ddf8:	cmn	w0, #0x1
   1ddfc:	b.eq	1de04 <__sanitizer_symbolize_global@@Base+0x36c0>  // b.none
   1de00:	bl	16ebc <__sanitizer_set_report_fd@@Base+0x4408>
   1de04:	mov	x0, x19
   1de08:	ldp	x19, x30, [sp], #16
   1de0c:	b	1e3f4 <__sanitizer_symbolize_global@@Base+0x3cb0>
   1de10:	cbnz	x2, 1de2c <__sanitizer_symbolize_global@@Base+0x36e8>
   1de14:	mov	w0, #0x1                   	// #1
   1de18:	ret
   1de1c:	mov	w0, #0x1                   	// #1
   1de20:	ldr	x30, [sp, #16]
   1de24:	ldp	x19, x20, [sp], #48
   1de28:	ret
   1de2c:	stp	x19, x20, [sp, #-48]!
   1de30:	mov	x19, x0
   1de34:	mov	x20, x2
   1de38:	ldr	w0, [x0, #20]
   1de3c:	add	x3, sp, #0x28
   1de40:	mov	x4, #0x0                   	// #0
   1de44:	str	x30, [sp, #16]
   1de48:	str	xzr, [sp, #40]
   1de4c:	bl	16f08 <__sanitizer_set_report_fd@@Base+0x4454>
   1de50:	tst	w0, #0xff
   1de54:	b.eq	1de64 <__sanitizer_symbolize_global@@Base+0x3720>  // b.none
   1de58:	ldr	x0, [sp, #40]
   1de5c:	cmp	x0, x20
   1de60:	b.eq	1de1c <__sanitizer_symbolize_global@@Base+0x36d8>  // b.none
   1de64:	ldr	w1, [x19, #20]
   1de68:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1de6c:	add	x0, x0, #0xe3
   1de70:	bl	18b74 <OnPrint@@Base+0x30c>
   1de74:	mov	w0, #0x0                   	// #0
   1de78:	b	1de20 <__sanitizer_symbolize_global@@Base+0x36dc>
   1de7c:	stp	x19, x20, [sp, #-32]!
   1de80:	mov	x19, x0
   1de84:	ldr	w0, [x0, #16]
   1de88:	str	x30, [sp, #16]
   1de8c:	cmn	w0, #0x1
   1de90:	b.eq	1dee8 <__sanitizer_symbolize_global@@Base+0x37a4>  // b.none
   1de94:	ldr	w0, [x19, #20]
   1de98:	cmn	w0, #0x1
   1de9c:	b.eq	1dee8 <__sanitizer_symbolize_global@@Base+0x37a4>  // b.none
   1dea0:	mov	x20, x1
   1dea4:	mov	x0, x1
   1dea8:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1deac:	mov	x2, x0
   1deb0:	mov	x1, x20
   1deb4:	mov	x0, x19
   1deb8:	bl	1de10 <__sanitizer_symbolize_global@@Base+0x36cc>
   1debc:	tst	w0, #0xff
   1dec0:	b.eq	1dee8 <__sanitizer_symbolize_global@@Base+0x37a4>  // b.none
   1dec4:	mov	x20, x19
   1dec8:	mov	x2, #0x4000                	// #16384
   1decc:	ldr	x0, [x20], #24
   1ded0:	mov	x1, x20
   1ded4:	ldr	x3, [x0, #16]
   1ded8:	mov	x0, x19
   1dedc:	blr	x3
   1dee0:	tst	w0, #0xff
   1dee4:	b.ne	1deec <__sanitizer_symbolize_global@@Base+0x37a8>  // b.any
   1dee8:	mov	x20, #0x0                   	// #0
   1deec:	mov	x0, x20
   1def0:	ldr	x30, [sp, #16]
   1def4:	ldp	x19, x20, [sp], #32
   1def8:	ret
   1defc:	stp	x19, x20, [sp, #-48]!
   1df00:	add	x20, x0, #0x4, lsl #12
   1df04:	mov	x19, x0
   1df08:	stp	x21, x22, [sp, #16]
   1df0c:	ldrb	w0, [x20, #32]
   1df10:	stp	x23, x30, [sp, #32]
   1df14:	cbz	w0, 1df2c <__sanitizer_symbolize_global@@Base+0x37e8>
   1df18:	mov	x0, #0x0                   	// #0
   1df1c:	ldp	x21, x22, [sp, #16]
   1df20:	ldp	x23, x30, [sp, #32]
   1df24:	ldp	x19, x20, [sp], #48
   1df28:	ret
   1df2c:	mov	x22, x1
   1df30:	ldr	x23, [x19, #8]
   1df34:	bl	10558 <__sancov_default_options@@Base+0x20d4>
   1df38:	mov	x21, x0
   1df3c:	cbz	x0, 1df74 <__sanitizer_symbolize_global@@Base+0x3830>
   1df40:	mov	x0, x23
   1df44:	bl	10088 <__sancov_default_options@@Base+0x1c04>
   1df48:	mov	x1, x0
   1df4c:	cbz	x0, 1df74 <__sanitizer_symbolize_global@@Base+0x3830>
   1df50:	mov	x0, x21
   1df54:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1df58:	cbnz	w0, 1df74 <__sanitizer_symbolize_global@@Base+0x3830>
   1df5c:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1df60:	add	x0, x0, #0x110
   1df64:	bl	18b74 <OnPrint@@Base+0x30c>
   1df68:	mov	w0, #0x1                   	// #1
   1df6c:	strb	w0, [x20, #32]
   1df70:	b	1df18 <__sanitizer_symbolize_global@@Base+0x37d4>
   1df74:	ldr	x0, [x19, #16408]
   1df78:	cmp	x0, #0x4
   1df7c:	b.hi	1dfa8 <__sanitizer_symbolize_global@@Base+0x3864>  // b.pmore
   1df80:	mov	x1, x22
   1df84:	mov	x0, x19
   1df88:	bl	1de7c <__sanitizer_symbolize_global@@Base+0x3738>
   1df8c:	cbnz	x0, 1df1c <__sanitizer_symbolize_global@@Base+0x37d8>
   1df90:	mov	x0, x19
   1df94:	bl	1dddc <__sanitizer_symbolize_global@@Base+0x3698>
   1df98:	ldr	x0, [x19, #16408]
   1df9c:	add	x0, x0, #0x1
   1dfa0:	str	x0, [x19, #16408]
   1dfa4:	b	1df74 <__sanitizer_symbolize_global@@Base+0x3830>
   1dfa8:	ldrb	w0, [x20, #32]
   1dfac:	cbnz	w0, 1df18 <__sanitizer_symbolize_global@@Base+0x37d4>
   1dfb0:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1dfb4:	add	x0, x0, #0x147
   1dfb8:	b	1df64 <__sanitizer_symbolize_global@@Base+0x3820>
   1dfbc:	stp	x19, x20, [sp, #-32]!
   1dfc0:	str	x30, [sp, #16]
   1dfc4:	cbnz	x2, 1dfe8 <__sanitizer_symbolize_global@@Base+0x38a4>
   1dfc8:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1dfcc:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1dfd0:	add	x2, x2, #0x186
   1dfd4:	add	x0, x0, #0x25
   1dfd8:	mov	x4, #0x0                   	// #0
   1dfdc:	mov	x3, #0x0                   	// #0
   1dfe0:	mov	w1, #0x173                 	// #371
   1dfe4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1dfe8:	and	w1, w1, #0xff
   1dfec:	mov	x19, x0
   1dff0:	mov	x5, x3
   1dff4:	cmp	w1, #0x0
   1dff8:	adrp	x3, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1dffc:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e000:	add	x3, x3, #0x60f
   1e004:	add	x0, x0, #0x180
   1e008:	csel	x3, x0, x3, ne  // ne = any
   1e00c:	add	x20, x19, #0x18
   1e010:	cbnz	w4, 1e04c <__sanitizer_symbolize_global@@Base+0x3908>
   1e014:	mov	x4, x2
   1e018:	mov	x0, x20
   1e01c:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e020:	mov	x1, #0x4000                	// #16384
   1e024:	add	x2, x2, #0x19d
   1e028:	bl	1886c <OnPrint@@Base+0x4>
   1e02c:	mov	w1, #0x3fff                	// #16383
   1e030:	cmp	w0, w1
   1e034:	b.gt	1e110 <__sanitizer_symbolize_global@@Base+0x39cc>
   1e038:	mov	x1, x20
   1e03c:	ldr	x0, [x19, #16]
   1e040:	ldr	x30, [sp, #16]
   1e044:	ldp	x19, x20, [sp], #32
   1e048:	b	1defc <__sanitizer_symbolize_global@@Base+0x37b8>
   1e04c:	sub	w4, w4, #0x1
   1e050:	cmp	w4, #0x7
   1e054:	b.hi	1e0d8 <__sanitizer_symbolize_global@@Base+0x3994>  // b.pmore
   1e058:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e05c:	add	x0, x0, #0x1fc
   1e060:	ldrb	w0, [x0, w4, uxtw]
   1e064:	adr	x1, 1e070 <__sanitizer_symbolize_global@@Base+0x392c>
   1e068:	add	x0, x1, w0, sxtb #2
   1e06c:	br	x0
   1e070:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e074:	add	x1, x1, #0x963
   1e078:	mov	x6, x5
   1e07c:	mov	x4, x2
   1e080:	mov	x5, x1
   1e084:	mov	x0, x20
   1e088:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e08c:	mov	x1, #0x4000                	// #16384
   1e090:	add	x2, x2, #0x1cd
   1e094:	bl	1886c <OnPrint@@Base+0x4>
   1e098:	b	1e02c <__sanitizer_symbolize_global@@Base+0x38e8>
   1e09c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e0a0:	add	x1, x1, #0x950
   1e0a4:	b	1e078 <__sanitizer_symbolize_global@@Base+0x3934>
   1e0a8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e0ac:	add	x1, x1, #0x956
   1e0b0:	b	1e078 <__sanitizer_symbolize_global@@Base+0x3934>
   1e0b4:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e0b8:	add	x1, x1, #0x95c
   1e0bc:	b	1e078 <__sanitizer_symbolize_global@@Base+0x3934>
   1e0c0:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e0c4:	add	x1, x1, #0x93c
   1e0c8:	b	1e078 <__sanitizer_symbolize_global@@Base+0x3934>
   1e0cc:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e0d0:	add	x1, x1, #0xf4a
   1e0d4:	b	1e078 <__sanitizer_symbolize_global@@Base+0x3934>
   1e0d8:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e0dc:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1e0e0:	add	x2, x2, #0x96e
   1e0e4:	add	x0, x0, #0x5c5
   1e0e8:	mov	x4, #0x0                   	// #0
   1e0ec:	mov	x3, #0x0                   	// #0
   1e0f0:	mov	w1, #0x2a9                 	// #681
   1e0f4:	b	1dfe4 <__sanitizer_symbolize_global@@Base+0x38a0>
   1e0f8:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e0fc:	add	x1, x1, #0x943
   1e100:	b	1e078 <__sanitizer_symbolize_global@@Base+0x3934>
   1e104:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e108:	add	x1, x1, #0x948
   1e10c:	b	1e078 <__sanitizer_symbolize_global@@Base+0x3934>
   1e110:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e114:	add	x0, x0, #0x1ab
   1e118:	bl	18b74 <OnPrint@@Base+0x30c>
   1e11c:	mov	x0, #0x0                   	// #0
   1e120:	ldr	x30, [sp, #16]
   1e124:	ldp	x19, x20, [sp], #32
   1e128:	ret
   1e12c:	stp	x19, x30, [sp, #-16]!
   1e130:	mov	x19, x2
   1e134:	mov	w1, #0x0                   	// #0
   1e138:	ldr	w4, [x2, #32]
   1e13c:	ldr	x3, [x2, #24]
   1e140:	ldr	x2, [x2, #16]
   1e144:	bl	1dfbc <__sanitizer_symbolize_global@@Base+0x3878>
   1e148:	cbz	x0, 1e160 <__sanitizer_symbolize_global@@Base+0x3a1c>
   1e14c:	mov	x1, x19
   1e150:	bl	1dacc <__sanitizer_symbolize_global@@Base+0x3388>
   1e154:	mov	w0, #0x1                   	// #1
   1e158:	ldp	x19, x30, [sp], #16
   1e15c:	ret
   1e160:	mov	w0, #0x0                   	// #0
   1e164:	b	1e158 <__sanitizer_symbolize_global@@Base+0x3a14>
   1e168:	stp	x19, x20, [sp, #-32]!
   1e16c:	mov	x19, x2
   1e170:	mov	x20, x1
   1e174:	ldr	w4, [x2, #16]
   1e178:	mov	w1, #0x1                   	// #1
   1e17c:	ldr	x3, [x2, #8]
   1e180:	ldr	x2, [x2]
   1e184:	str	x30, [sp, #16]
   1e188:	bl	1dfbc <__sanitizer_symbolize_global@@Base+0x3878>
   1e18c:	cbz	x0, 1e1bc <__sanitizer_symbolize_global@@Base+0x3a78>
   1e190:	mov	x1, x19
   1e194:	bl	1dcd0 <__sanitizer_symbolize_global@@Base+0x358c>
   1e198:	ldr	x1, [x19, #48]
   1e19c:	mov	w0, #0x1                   	// #1
   1e1a0:	add	x20, x20, x1
   1e1a4:	ldr	x1, [x19, #8]
   1e1a8:	sub	x20, x20, x1
   1e1ac:	str	x20, [x19, #48]
   1e1b0:	ldr	x30, [sp, #16]
   1e1b4:	ldp	x19, x20, [sp], #32
   1e1b8:	ret
   1e1bc:	mov	w0, #0x0                   	// #0
   1e1c0:	b	1e1b0 <__sanitizer_symbolize_global@@Base+0x3a6c>
   1e1c4:	mov	x0, #0x0                   	// #0
   1e1c8:	ret
   1e1cc:	cmp	x2, #0x1
   1e1d0:	b.ls	1e1f4 <__sanitizer_symbolize_global@@Base+0x3ab0>  // b.plast
   1e1d4:	add	x1, x1, x2
   1e1d8:	ldurb	w0, [x1, #-1]
   1e1dc:	cmp	w0, #0xa
   1e1e0:	b.ne	1e1f4 <__sanitizer_symbolize_global@@Base+0x3ab0>  // b.any
   1e1e4:	ldurb	w0, [x1, #-2]
   1e1e8:	cmp	w0, #0xa
   1e1ec:	cset	w0, eq  // eq = none
   1e1f0:	ret
   1e1f4:	mov	w0, #0x0                   	// #0
   1e1f8:	b	1e1f0 <__sanitizer_symbolize_global@@Base+0x3aac>
   1e1fc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e200:	adrp	x3, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e204:	add	x3, x3, #0xf2a
   1e208:	ldr	x0, [x0, #4040]
   1e20c:	ldrb	w4, [x0, #180]
   1e210:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e214:	add	x0, x0, #0xf1a
   1e218:	str	xzr, [x2, #24]
   1e21c:	cmp	w4, #0x0
   1e220:	csel	x0, x0, x3, ne  // ne = any
   1e224:	stp	x1, x0, [x2]
   1e228:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e22c:	add	x0, x0, #0xf3b
   1e230:	str	x0, [x2, #16]
   1e234:	ret
   1e238:	str	x30, [sp, #-16]!
   1e23c:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e240:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e244:	add	x2, x2, #0xf50
   1e248:	add	x0, x0, #0xf70
   1e24c:	mov	x4, #0x0                   	// #0
   1e250:	mov	x3, #0x0                   	// #0
   1e254:	mov	w1, #0x4e                  	// #78
   1e258:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1e25c:	str	x30, [sp, #-16]!
   1e260:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e264:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e268:	add	x2, x2, #0xf50
   1e26c:	add	x0, x0, #0xf70
   1e270:	mov	x4, #0x0                   	// #0
   1e274:	mov	x3, #0x0                   	// #0
   1e278:	mov	w1, #0x57                  	// #87
   1e27c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1e280:	ldr	x4, [x0, #16]
   1e284:	mov	x3, x1
   1e288:	cmp	x1, x4
   1e28c:	b.cc	1e2ac <__sanitizer_symbolize_global@@Base+0x3b68>  // b.lo, b.ul, b.last
   1e290:	str	x30, [sp, #-16]!
   1e294:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e298:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1e29c:	add	x2, x2, #0x1de
   1e2a0:	add	x0, x0, #0x5c5
   1e2a4:	mov	w1, #0x2f9                 	// #761
   1e2a8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1e2ac:	ldr	x0, [x0]
   1e2b0:	mov	x1, #0x48                  	// #72
   1e2b4:	madd	x0, x3, x1, x0
   1e2b8:	ret
   1e2bc:	cmp	x2, #0x8
   1e2c0:	b.ls	1e2f4 <__sanitizer_symbolize_global@@Base+0x3bb0>  // b.plast
   1e2c4:	mov	x3, x1
   1e2c8:	str	x30, [sp, #-16]!
   1e2cc:	sub	x0, x2, #0x8
   1e2d0:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e2d4:	add	x0, x3, x0
   1e2d8:	add	x1, x1, #0x5e3
   1e2dc:	mov	x2, #0x8                   	// #8
   1e2e0:	bl	142dc <__sanitizer_set_report_fd@@Base+0x1828>
   1e2e4:	cmp	w0, #0x0
   1e2e8:	cset	w0, eq  // eq = none
   1e2ec:	ldr	x30, [sp], #16
   1e2f0:	ret
   1e2f4:	mov	w0, #0x0                   	// #0
   1e2f8:	ret
   1e2fc:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e300:	stp	x19, x30, [sp, #-16]!
   1e304:	mov	x19, x0
   1e308:	ldr	x1, [x1, #3664]
   1e30c:	cbz	x1, 1e324 <__sanitizer_symbolize_global@@Base+0x3be0>
   1e310:	mov	x3, #0x0                   	// #0
   1e314:	mov	x2, #0x0                   	// #0
   1e318:	mov	x1, #0x0                   	// #0
   1e31c:	bl	69a0 <__cxa_demangle@plt>
   1e320:	cbnz	x0, 1e328 <__sanitizer_symbolize_global@@Base+0x3be4>
   1e324:	mov	x0, x19
   1e328:	ldp	x19, x30, [sp], #16
   1e32c:	ret
   1e330:	cbz	x0, 1e39c <__sanitizer_symbolize_global@@Base+0x3c58>
   1e334:	stp	x19, x20, [sp, #-32]!
   1e338:	mov	x19, x0
   1e33c:	str	x30, [sp, #16]
   1e340:	ldrb	w1, [x0]
   1e344:	cmp	w1, #0x5f
   1e348:	b.ne	1e38c <__sanitizer_symbolize_global@@Base+0x3c48>  // b.any
   1e34c:	ldrb	w1, [x0, #1]
   1e350:	cmp	w1, #0x54
   1e354:	b.ne	1e38c <__sanitizer_symbolize_global@@Base+0x3c48>  // b.any
   1e358:	adrp	x1, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1e35c:	ldr	x20, [x1, #496]
   1e360:	cbz	x20, 1e38c <__sanitizer_symbolize_global@@Base+0x3c48>
   1e364:	bl	144dc <__sanitizer_set_report_fd@@Base+0x1a28>
   1e368:	mov	x1, x0
   1e36c:	mov	x16, x20
   1e370:	mov	x0, x19
   1e374:	ldr	x30, [sp, #16]
   1e378:	mov	w4, #0x0                   	// #0
   1e37c:	ldp	x19, x20, [sp], #32
   1e380:	mov	x3, #0x0                   	// #0
   1e384:	mov	x2, #0x0                   	// #0
   1e388:	br	x16
   1e38c:	mov	x0, #0x0                   	// #0
   1e390:	ldr	x30, [sp, #16]
   1e394:	ldp	x19, x20, [sp], #32
   1e398:	ret
   1e39c:	mov	x0, #0x0                   	// #0
   1e3a0:	ret
   1e3a4:	stp	x19, x30, [sp, #-16]!
   1e3a8:	mov	x19, x0
   1e3ac:	cbz	x0, 1e3e0 <__sanitizer_symbolize_global@@Base+0x3c9c>
   1e3b0:	bl	1e330 <__sanitizer_symbolize_global@@Base+0x3bec>
   1e3b4:	cbnz	x0, 1e3ec <__sanitizer_symbolize_global@@Base+0x3ca8>
   1e3b8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e3bc:	ldr	x0, [x0, #3664]
   1e3c0:	cbz	x0, 1e3e0 <__sanitizer_symbolize_global@@Base+0x3c9c>
   1e3c4:	mov	x0, x19
   1e3c8:	mov	x3, #0x0                   	// #0
   1e3cc:	mov	x2, #0x0                   	// #0
   1e3d0:	mov	x1, #0x0                   	// #0
   1e3d4:	bl	69a0 <__cxa_demangle@plt>
   1e3d8:	cmp	x0, #0x0
   1e3dc:	csel	x19, x19, x0, eq  // eq = none
   1e3e0:	mov	x0, x19
   1e3e4:	ldp	x19, x30, [sp], #16
   1e3e8:	ret
   1e3ec:	mov	x19, x0
   1e3f0:	b	1e3e0 <__sanitizer_symbolize_global@@Base+0x3c9c>
   1e3f4:	stp	x19, x20, [sp, #-128]!
   1e3f8:	mov	x19, x0
   1e3fc:	ldr	x0, [x0, #8]
   1e400:	stp	x21, x22, [sp, #16]
   1e404:	stp	x23, x24, [sp, #32]
   1e408:	stp	x25, x30, [sp, #48]
   1e40c:	bl	150d8 <__sanitizer_set_report_fd@@Base+0x2624>
   1e410:	ands	w20, w0, #0xff
   1e414:	b.ne	1e450 <__sanitizer_symbolize_global@@Base+0x3d0c>  // b.any
   1e418:	add	x19, x19, #0x4, lsl #12
   1e41c:	ldrb	w0, [x19, #33]
   1e420:	cbnz	w0, 1e438 <__sanitizer_symbolize_global@@Base+0x3cf4>
   1e424:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e428:	add	x0, x0, #0x20a
   1e42c:	bl	18b74 <OnPrint@@Base+0x30c>
   1e430:	mov	w0, #0x1                   	// #1
   1e434:	strb	w0, [x19, #33]
   1e438:	mov	w0, w20
   1e43c:	ldp	x21, x22, [sp, #16]
   1e440:	ldp	x23, x24, [sp, #32]
   1e444:	ldp	x25, x30, [sp, #48]
   1e448:	ldp	x19, x20, [sp], #128
   1e44c:	ret
   1e450:	add	x20, sp, #0x50
   1e454:	mov	x22, #0x0                   	// #0
   1e458:	mov	x21, x20
   1e45c:	mov	x25, x20
   1e460:	mov	w23, #0x0                   	// #0
   1e464:	mov	x2, #0x8                   	// #8
   1e468:	mov	w1, #0x0                   	// #0
   1e46c:	add	x0, sp, #0x40
   1e470:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1e474:	add	x0, sp, #0x48
   1e478:	mov	x2, #0x8                   	// #8
   1e47c:	mov	w1, #0x0                   	// #0
   1e480:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   1e484:	mov	x0, x21
   1e488:	bl	6790 <pipe@plt>
   1e48c:	cmn	w0, #0x1
   1e490:	b.ne	1e4bc <__sanitizer_symbolize_global@@Base+0x3d78>  // b.any
   1e494:	mov	w19, #0x0                   	// #0
   1e498:	cmp	w19, w23
   1e49c:	b.eq	1e558 <__sanitizer_symbolize_global@@Base+0x3e14>  // b.none
   1e4a0:	ldr	w0, [x20]
   1e4a4:	add	w19, w19, #0x1
   1e4a8:	add	x20, x20, #0x8
   1e4ac:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   1e4b0:	ldur	w0, [x20, #-4]
   1e4b4:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   1e4b8:	b	1e498 <__sanitizer_symbolize_global@@Base+0x3d54>
   1e4bc:	ldr	w0, [x21]
   1e4c0:	cmp	w0, #0x2
   1e4c4:	b.le	1e50c <__sanitizer_symbolize_global@@Base+0x3dc8>
   1e4c8:	ldr	w0, [x21, #4]
   1e4cc:	cmp	w0, #0x2
   1e4d0:	b.le	1e50c <__sanitizer_symbolize_global@@Base+0x3dc8>
   1e4d4:	cbz	x22, 1e508 <__sanitizer_symbolize_global@@Base+0x3dc4>
   1e4d8:	mov	w24, #0x0                   	// #0
   1e4dc:	cmp	w24, w23
   1e4e0:	b.eq	1e60c <__sanitizer_symbolize_global@@Base+0x3ec8>  // b.none
   1e4e4:	cmp	x20, x22
   1e4e8:	b.eq	1e4fc <__sanitizer_symbolize_global@@Base+0x3db8>  // b.none
   1e4ec:	ldr	w0, [x20]
   1e4f0:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   1e4f4:	ldr	w0, [x20, #4]
   1e4f8:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   1e4fc:	add	w24, w24, #0x1
   1e500:	add	x20, x20, #0x8
   1e504:	b	1e4dc <__sanitizer_symbolize_global@@Base+0x3d98>
   1e508:	mov	x22, x21
   1e50c:	add	w23, w23, #0x1
   1e510:	add	x21, x21, #0x8
   1e514:	cmp	w23, #0x5
   1e518:	b.ne	1e484 <__sanitizer_symbolize_global@@Base+0x3d40>  // b.any
   1e51c:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e520:	cbz	x22, 1e53c <__sanitizer_symbolize_global@@Base+0x3df8>
   1e524:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e528:	mov	x4, #0x0                   	// #0
   1e52c:	add	x2, x2, #0x299
   1e530:	mov	x3, #0x0                   	// #0
   1e534:	mov	w1, #0x88                  	// #136
   1e538:	b	1e550 <__sanitizer_symbolize_global@@Base+0x3e0c>
   1e53c:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e540:	add	x2, x2, #0x239
   1e544:	mov	x4, #0x0                   	// #0
   1e548:	mov	x3, #0x0                   	// #0
   1e54c:	mov	w1, #0x87                  	// #135
   1e550:	add	x0, x0, #0x249
   1e554:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1e558:	bl	6b20 <__errno_location@plt>
   1e55c:	ldr	w1, [x0]
   1e560:	mov	w20, #0x0                   	// #0
   1e564:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e568:	add	x0, x0, #0x2aa
   1e56c:	bl	18b74 <OnPrint@@Base+0x30c>
   1e570:	b	1e438 <__sanitizer_symbolize_global@@Base+0x3cf4>
   1e574:	ldp	x0, x1, [x19]
   1e578:	mov	x2, x25
   1e57c:	ldr	x3, [x0, #8]
   1e580:	mov	x0, x19
   1e584:	blr	x3
   1e588:	ldp	w3, w2, [sp, #68]
   1e58c:	mov	x1, x25
   1e590:	ldr	x0, [x19, #8]
   1e594:	mov	w4, #0xffffffff            	// #-1
   1e598:	bl	17e28 <__sanitizer_set_report_fd@@Base+0x5374>
   1e59c:	mov	w21, w0
   1e5a0:	cmp	w0, #0x0
   1e5a4:	ldr	w0, [sp, #64]
   1e5a8:	b.ge	1e5bc <__sanitizer_symbolize_global@@Base+0x3e78>  // b.tcont
   1e5ac:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   1e5b0:	ldr	w0, [sp, #76]
   1e5b4:	bl	14edc <__sanitizer_set_report_fd@@Base+0x2428>
   1e5b8:	b	1e438 <__sanitizer_symbolize_global@@Base+0x3cf4>
   1e5bc:	str	w0, [x19, #16]
   1e5c0:	ldr	w0, [sp, #76]
   1e5c4:	str	w0, [x19, #20]
   1e5c8:	b.ne	1e5e4 <__sanitizer_symbolize_global@@Base+0x3ea0>  // b.any
   1e5cc:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e5d0:	mov	x4, #0x0                   	// #0
   1e5d4:	add	x2, x2, #0x2f8
   1e5d8:	mov	x3, #0x0                   	// #0
   1e5dc:	mov	w1, #0xef                  	// #239
   1e5e0:	b	1e63c <__sanitizer_symbolize_global@@Base+0x3ef8>
   1e5e4:	mov	w0, #0xa                   	// #10
   1e5e8:	bl	17760 <__sanitizer_set_report_fd@@Base+0x4cac>
   1e5ec:	mov	w0, w21
   1e5f0:	bl	17f6c <__sanitizer_set_report_fd@@Base+0x54b8>
   1e5f4:	ands	w20, w0, #0xff
   1e5f8:	b.ne	1e438 <__sanitizer_symbolize_global@@Base+0x3cf4>  // b.any
   1e5fc:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e600:	add	x0, x0, #0x308
   1e604:	bl	18b74 <OnPrint@@Base+0x30c>
   1e608:	b	1e438 <__sanitizer_symbolize_global@@Base+0x3cf4>
   1e60c:	ldr	x0, [x22]
   1e610:	str	x0, [sp, #64]
   1e614:	ldr	x0, [x21]
   1e618:	str	x0, [sp, #72]
   1e61c:	add	x0, x19, #0x4, lsl #12
   1e620:	ldrb	w20, [x0, #34]
   1e624:	cbz	w20, 1e574 <__sanitizer_symbolize_global@@Base+0x3e30>
   1e628:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e62c:	add	x2, x2, #0xf50
   1e630:	mov	x4, #0x0                   	// #0
   1e634:	mov	x3, #0x0                   	// #0
   1e638:	mov	w1, #0xde                  	// #222
   1e63c:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e640:	b	1e550 <__sanitizer_symbolize_global@@Base+0x3e0c>
   1e644:	mov	x0, x1
   1e648:	b	1e3a4 <__sanitizer_symbolize_global@@Base+0x3c60>
   1e64c:	str	x30, [sp, #-16]!
   1e650:	bl	1d468 <__sanitizer_symbolize_global@@Base+0x2d24>
   1e654:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e658:	mov	x0, #0x0                   	// #0
   1e65c:	add	x1, x1, #0x341
   1e660:	bl	68a0 <dlsym@plt>
   1e664:	ldr	x30, [sp], #16
   1e668:	adrp	x1, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1e66c:	str	x0, [x1, #496]
   1e670:	b	6910 <dlerror@plt>
   1e674:	stp	x19, x20, [sp, #-144]!
   1e678:	stp	x21, x22, [sp, #16]
   1e67c:	adrp	x22, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e680:	adrp	x21, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e684:	ldr	x0, [x22, #4040]
   1e688:	stp	x23, x24, [sp, #32]
   1e68c:	stp	xzr, xzr, [sp, #96]
   1e690:	ldrb	w0, [x0]
   1e694:	str	x30, [sp, #48]
   1e698:	str	xzr, [sp, #112]
   1e69c:	cbnz	w0, 1e714 <__sanitizer_symbolize_global@@Base+0x3fd0>
   1e6a0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e6a4:	ldr	x0, [x0, #3680]
   1e6a8:	ldr	w0, [x0]
   1e6ac:	sxtw	x0, w0
   1e6b0:	cmp	x0, #0x1
   1e6b4:	b.ls	1e6c4 <__sanitizer_symbolize_global@@Base+0x3f80>  // b.plast
   1e6b8:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e6bc:	add	x0, x0, #0x350
   1e6c0:	bl	18b74 <OnPrint@@Base+0x30c>
   1e6c4:	ldp	x0, x1, [sp, #96]
   1e6c8:	stp	x0, x1, [sp, #120]
   1e6cc:	ldr	x0, [sp, #112]
   1e6d0:	str	x0, [sp, #136]
   1e6d4:	ldr	x0, [x21, #3808]
   1e6d8:	mov	x1, #0xf0                  	// #240
   1e6dc:	bl	e5ec <__sancov_default_options@@Base+0x168>
   1e6e0:	mov	x19, x0
   1e6e4:	ldp	x2, x3, [sp, #120]
   1e6e8:	stp	x2, x3, [sp, #64]
   1e6ec:	ldr	x1, [sp, #136]
   1e6f0:	str	x1, [sp, #80]
   1e6f4:	add	x1, sp, #0x40
   1e6f8:	bl	1cd68 <__sanitizer_symbolize_global@@Base+0x2624>
   1e6fc:	mov	x0, x19
   1e700:	ldp	x21, x22, [sp, #16]
   1e704:	ldp	x23, x24, [sp, #32]
   1e708:	ldr	x30, [sp, #48]
   1e70c:	ldp	x19, x20, [sp], #144
   1e710:	ret
   1e714:	bl	e6f4 <__sancov_default_options@@Base+0x270>
   1e718:	tst	w0, #0xff
   1e71c:	b.eq	1e778 <__sanitizer_symbolize_global@@Base+0x4034>  // b.none
   1e720:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e724:	ldr	x0, [x0, #3680]
   1e728:	ldr	w0, [x0]
   1e72c:	sxtw	x0, w0
   1e730:	cmp	x0, #0x1
   1e734:	b.ls	1e744 <__sanitizer_symbolize_global@@Base+0x4000>  // b.plast
   1e738:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e73c:	add	x0, x0, #0x369
   1e740:	bl	18b74 <OnPrint@@Base+0x30c>
   1e744:	ldr	x0, [x21, #3808]
   1e748:	bl	1d2c8 <__sanitizer_symbolize_global@@Base+0x2b84>
   1e74c:	mov	x19, x0
   1e750:	cbz	x0, 1e7e0 <__sanitizer_symbolize_global@@Base+0x409c>
   1e754:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e758:	ldr	x0, [x0, #3680]
   1e75c:	ldr	w0, [x0]
   1e760:	sxtw	x0, w0
   1e764:	cmp	x0, #0x1
   1e768:	b.ls	1e7d0 <__sanitizer_symbolize_global@@Base+0x408c>  // b.plast
   1e76c:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e770:	add	x0, x0, #0x3b4
   1e774:	b	1e7cc <__sanitizer_symbolize_global@@Base+0x4088>
   1e778:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e77c:	ldr	x0, [x0, #3672]
   1e780:	cbz	x0, 1e744 <__sanitizer_symbolize_global@@Base+0x4000>
   1e784:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e788:	ldr	x0, [x0, #3568]
   1e78c:	cbz	x0, 1e744 <__sanitizer_symbolize_global@@Base+0x4000>
   1e790:	ldr	x0, [x21, #3808]
   1e794:	mov	x1, #0x4010                	// #16400
   1e798:	bl	e5ec <__sancov_default_options@@Base+0x168>
   1e79c:	mov	x19, x0
   1e7a0:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1e7a4:	add	x0, x0, #0xdf0
   1e7a8:	stp	x0, xzr, [x19]
   1e7ac:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e7b0:	ldr	x0, [x0, #3680]
   1e7b4:	ldr	w0, [x0]
   1e7b8:	sxtw	x0, w0
   1e7bc:	cmp	x0, #0x1
   1e7c0:	b.ls	1e7d0 <__sanitizer_symbolize_global@@Base+0x408c>  // b.plast
   1e7c4:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e7c8:	add	x0, x0, #0x398
   1e7cc:	bl	18b74 <OnPrint@@Base+0x30c>
   1e7d0:	mov	x1, x19
   1e7d4:	add	x0, sp, #0x60
   1e7d8:	bl	1eb48 <__sanitizer_symbolize_global@@Base+0x4404>
   1e7dc:	b	1e6c4 <__sanitizer_symbolize_global@@Base+0x3f80>
   1e7e0:	ldr	x0, [x22, #4040]
   1e7e4:	ldr	x20, [x0, #8]
   1e7e8:	cbz	x20, 1e824 <__sanitizer_symbolize_global@@Base+0x40e0>
   1e7ec:	mov	x0, x20
   1e7f0:	bl	10088 <__sancov_default_options@@Base+0x1c04>
   1e7f4:	mov	x19, x0
   1e7f8:	ldrb	w0, [x20]
   1e7fc:	cbnz	w0, 1e82c <__sanitizer_symbolize_global@@Base+0x40e8>
   1e800:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e804:	ldr	x0, [x0, #3680]
   1e808:	ldr	w0, [x0]
   1e80c:	sxtw	x0, w0
   1e810:	cmp	x0, #0x1
   1e814:	b.ls	1e6c4 <__sanitizer_symbolize_global@@Base+0x3f80>  // b.plast
   1e818:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e81c:	add	x0, x0, #0x3d4
   1e820:	b	1e6c0 <__sanitizer_symbolize_global@@Base+0x3f7c>
   1e824:	adrp	x19, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   1e828:	add	x19, x19, #0x60f
   1e82c:	adrp	x24, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e830:	add	x24, x24, #0x401
   1e834:	mov	x1, x24
   1e838:	mov	x0, x19
   1e83c:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1e840:	cbnz	w0, 1e894 <__sanitizer_symbolize_global@@Base+0x4150>
   1e844:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e848:	ldr	x0, [x0, #3680]
   1e84c:	ldr	w0, [x0]
   1e850:	sxtw	x0, w0
   1e854:	cmp	x0, #0x1
   1e858:	b.ls	1e86c <__sanitizer_symbolize_global@@Base+0x4128>  // b.plast
   1e85c:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e860:	mov	x1, x20
   1e864:	add	x0, x0, #0x411
   1e868:	bl	18b74 <OnPrint@@Base+0x30c>
   1e86c:	ldr	x22, [x21, #3808]
   1e870:	mov	x1, #0x4018                	// #16408
   1e874:	mov	x0, x22
   1e878:	bl	e5ec <__sancov_default_options@@Base+0x168>
   1e87c:	mov	x2, x22
   1e880:	mov	x19, x0
   1e884:	mov	x1, x20
   1e888:	bl	1dd88 <__sanitizer_symbolize_global@@Base+0x3644>
   1e88c:	cbnz	x19, 1e7d0 <__sanitizer_symbolize_global@@Base+0x408c>
   1e890:	b	1e6c4 <__sanitizer_symbolize_global@@Base+0x3f80>
   1e894:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e898:	mov	x0, x19
   1e89c:	add	x1, x1, #0x443
   1e8a0:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1e8a4:	cbnz	w0, 1e8b8 <__sanitizer_symbolize_global@@Base+0x4174>
   1e8a8:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e8ac:	add	x0, x0, #0x448
   1e8b0:	bl	18b74 <OnPrint@@Base+0x30c>
   1e8b4:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1e8b8:	adrp	x23, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   1e8bc:	add	x23, x23, #0x45
   1e8c0:	mov	x1, x23
   1e8c4:	mov	x0, x19
   1e8c8:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1e8cc:	cbnz	w0, 1e91c <__sanitizer_symbolize_global@@Base+0x41d8>
   1e8d0:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e8d4:	ldr	x0, [x0, #3680]
   1e8d8:	ldr	w0, [x0]
   1e8dc:	sxtw	x0, w0
   1e8e0:	cmp	x0, #0x1
   1e8e4:	b.ls	1e8f8 <__sanitizer_symbolize_global@@Base+0x41b4>  // b.plast
   1e8e8:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e8ec:	mov	x1, x20
   1e8f0:	add	x0, x0, #0x47a
   1e8f4:	bl	18b74 <OnPrint@@Base+0x30c>
   1e8f8:	ldr	x22, [x21, #3808]
   1e8fc:	mov	x1, #0x38                  	// #56
   1e900:	mov	x0, x22
   1e904:	bl	e5ec <__sancov_default_options@@Base+0x168>
   1e908:	mov	x2, x22
   1e90c:	mov	x19, x0
   1e910:	mov	x1, x20
   1e914:	bl	1ee18 <__sanitizer_symbolize_global@@Base+0x46d4>
   1e918:	b	1e88c <__sanitizer_symbolize_global@@Base+0x4148>
   1e91c:	cbz	x20, 1e934 <__sanitizer_symbolize_global@@Base+0x41f0>
   1e920:	mov	x1, x20
   1e924:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e928:	add	x0, x0, #0x4a6
   1e92c:	bl	18b74 <OnPrint@@Base+0x30c>
   1e930:	b	1e8b4 <__sanitizer_symbolize_global@@Base+0x4170>
   1e934:	mov	x0, x24
   1e938:	bl	12c20 <__sanitizer_set_report_fd@@Base+0x16c>
   1e93c:	mov	x20, x0
   1e940:	cbz	x0, 1e96c <__sanitizer_symbolize_global@@Base+0x4228>
   1e944:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e948:	ldr	x0, [x0, #3680]
   1e94c:	ldr	w0, [x0]
   1e950:	sxtw	x0, w0
   1e954:	cmp	x0, #0x1
   1e958:	b.ls	1e86c <__sanitizer_symbolize_global@@Base+0x4128>  // b.plast
   1e95c:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e960:	mov	x1, x20
   1e964:	add	x0, x0, #0x53d
   1e968:	b	1e868 <__sanitizer_symbolize_global@@Base+0x4124>
   1e96c:	ldr	x22, [x22, #4040]
   1e970:	ldrb	w0, [x22, #16]
   1e974:	cbz	w0, 1e6c4 <__sanitizer_symbolize_global@@Base+0x3f80>
   1e978:	mov	x0, x23
   1e97c:	bl	12c20 <__sanitizer_set_report_fd@@Base+0x16c>
   1e980:	mov	x20, x0
   1e984:	cbz	x0, 1e6c4 <__sanitizer_symbolize_global@@Base+0x3f80>
   1e988:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e98c:	ldr	x0, [x0, #3680]
   1e990:	ldr	w0, [x0]
   1e994:	sxtw	x0, w0
   1e998:	cmp	x0, #0x1
   1e99c:	b.ls	1e8f8 <__sanitizer_symbolize_global@@Base+0x41b4>  // b.plast
   1e9a0:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e9a4:	mov	x1, x20
   1e9a8:	add	x0, x0, #0x561
   1e9ac:	b	1e8f4 <__sanitizer_symbolize_global@@Base+0x41b0>
   1e9b0:	str	x1, [x2]
   1e9b4:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1e9b8:	add	x1, x1, #0x204
   1e9bc:	str	x1, [x2, #8]
   1e9c0:	ldr	x0, [x0, #16424]
   1e9c4:	stp	x0, xzr, [x2, #16]
   1e9c8:	ret
   1e9cc:	mov	w0, #0x0                   	// #0
   1e9d0:	ret
   1e9d4:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1e9d8:	ldr	x0, [x0, #3728]
   1e9dc:	cbz	x0, 1e9e4 <__sanitizer_symbolize_global@@Base+0x42a0>
   1e9e0:	b	6a20 <__sanitizer_symbolize_flush@plt>
   1e9e4:	ret
   1e9e8:	stp	x19, x20, [sp, #-48]!
   1e9ec:	mov	x19, x2
   1e9f0:	mov	x20, x1
   1e9f4:	stp	x21, x22, [sp, #16]
   1e9f8:	add	x22, x0, #0x10
   1e9fc:	mov	x2, x22
   1ea00:	ldp	x0, x1, [x19]
   1ea04:	mov	w3, #0x4000                	// #16384
   1ea08:	str	x30, [sp, #32]
   1ea0c:	bl	68f0 <__sanitizer_symbolize_data@plt>
   1ea10:	mov	w21, w0
   1ea14:	tst	w0, #0xff
   1ea18:	b.eq	1ea3c <__sanitizer_symbolize_global@@Base+0x42f8>  // b.none
   1ea1c:	mov	x1, x19
   1ea20:	mov	x0, x22
   1ea24:	bl	1dcd0 <__sanitizer_symbolize_global@@Base+0x358c>
   1ea28:	ldr	x1, [x19, #48]
   1ea2c:	add	x20, x20, x1
   1ea30:	ldr	x1, [x19, #8]
   1ea34:	sub	x20, x20, x1
   1ea38:	str	x20, [x19, #48]
   1ea3c:	mov	w0, w21
   1ea40:	ldp	x21, x22, [sp, #16]
   1ea44:	ldr	x30, [sp, #32]
   1ea48:	ldp	x19, x20, [sp], #48
   1ea4c:	ret
   1ea50:	stp	x19, x20, [sp, #-32]!
   1ea54:	mov	x19, x2
   1ea58:	mov	w3, #0x4000                	// #16384
   1ea5c:	stp	x21, x30, [sp, #16]
   1ea60:	add	x21, x0, #0x10
   1ea64:	mov	x2, x21
   1ea68:	ldp	x0, x1, [x19, #16]
   1ea6c:	bl	69b0 <__sanitizer_symbolize_code@plt>
   1ea70:	mov	w20, w0
   1ea74:	tst	w0, #0xff
   1ea78:	b.eq	1ea88 <__sanitizer_symbolize_global@@Base+0x4344>  // b.none
   1ea7c:	mov	x1, x19
   1ea80:	mov	x0, x21
   1ea84:	bl	1dacc <__sanitizer_symbolize_global@@Base+0x3388>
   1ea88:	mov	w0, w20
   1ea8c:	ldp	x21, x30, [sp, #16]
   1ea90:	ldp	x19, x20, [sp], #32
   1ea94:	ret
   1ea98:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ea9c:	stp	x19, x20, [sp, #-32]!
   1eaa0:	ldr	x0, [x0, #3512]
   1eaa4:	stp	x21, x30, [sp, #16]
   1eaa8:	mov	x21, x1
   1eaac:	cbz	x0, 1eafc <__sanitizer_symbolize_global@@Base+0x43b8>
   1eab0:	mov	x20, #0x400                 	// #1024
   1eab4:	mov	x1, #0x0                   	// #0
   1eab8:	mov	x2, #0x0                   	// #0
   1eabc:	mov	x0, x20
   1eac0:	bl	e8ec <__sancov_default_options@@Base+0x468>
   1eac4:	mov	x1, x0
   1eac8:	mov	x19, x0
   1eacc:	mov	w2, w20
   1ead0:	mov	x0, x21
   1ead4:	bl	6820 <__sanitizer_symbolize_demangle@plt>
   1ead8:	sxtw	x1, w0
   1eadc:	cmp	x20, w0, sxtw
   1eae0:	b.cs	1eb00 <__sanitizer_symbolize_global@@Base+0x43bc>  // b.hs, b.nlast
   1eae4:	add	x20, x1, #0x1
   1eae8:	mov	x0, x19
   1eaec:	mov	x1, #0x0                   	// #0
   1eaf0:	bl	eafc <__sancov_default_options@@Base+0x678>
   1eaf4:	cmp	x20, #0x20, lsl #12
   1eaf8:	b.ls	1eab4 <__sanitizer_symbolize_global@@Base+0x4370>  // b.plast
   1eafc:	mov	x19, x21
   1eb00:	mov	x0, x19
   1eb04:	ldp	x21, x30, [sp, #16]
   1eb08:	ldp	x19, x20, [sp], #32
   1eb0c:	ret
   1eb10:	ldr	x4, [x0, #16]
   1eb14:	mov	x3, x1
   1eb18:	cmp	x1, x4
   1eb1c:	b.cc	1eb3c <__sanitizer_symbolize_global@@Base+0x43f8>  // b.lo, b.ul, b.last
   1eb20:	str	x30, [sp, #-16]!
   1eb24:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1eb28:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1eb2c:	add	x2, x2, #0x317
   1eb30:	add	x0, x0, #0x5c5
   1eb34:	mov	w1, #0x1b6                 	// #438
   1eb38:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1eb3c:	ldr	x0, [x0]
   1eb40:	add	x0, x0, x1, lsl #3
   1eb44:	ret
   1eb48:	ldr	x2, [x0]
   1eb4c:	str	xzr, [x1, #8]
   1eb50:	cbnz	x2, 1eb64 <__sanitizer_symbolize_global@@Base+0x4420>
   1eb54:	stp	x1, x1, [x0, #8]
   1eb58:	mov	x1, #0x1                   	// #1
   1eb5c:	str	x1, [x0]
   1eb60:	ret
   1eb64:	ldr	x3, [x0, #16]
   1eb68:	add	x2, x2, #0x1
   1eb6c:	str	x1, [x3, #8]
   1eb70:	str	x2, [x0]
   1eb74:	str	x1, [x0, #16]
   1eb78:	b	1eb60 <__sanitizer_symbolize_global@@Base+0x441c>
   1eb7c:	stp	x19, x20, [sp, #-48]!
   1eb80:	mov	x4, x1
   1eb84:	stp	x21, x22, [sp, #16]
   1eb88:	str	x30, [sp, #32]
   1eb8c:	cbnz	x1, 1ebac <__sanitizer_symbolize_global@@Base+0x4468>
   1eb90:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1eb94:	add	x2, x2, #0x329
   1eb98:	mov	x3, #0x0                   	// #0
   1eb9c:	mov	w1, #0x1fc                 	// #508
   1eba0:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1eba4:	add	x0, x0, #0x5c5
   1eba8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1ebac:	ldr	x3, [x0, #16]
   1ebb0:	mov	x20, x0
   1ebb4:	cmp	x1, x3
   1ebb8:	b.cs	1ebcc <__sanitizer_symbolize_global@@Base+0x4488>  // b.hs, b.nlast
   1ebbc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1ebc0:	mov	w1, #0x1fd                 	// #509
   1ebc4:	add	x2, x2, #0x342
   1ebc8:	b	1eba0 <__sanitizer_symbolize_global@@Base+0x445c>
   1ebcc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ebd0:	lsl	x19, x1, #3
   1ebd4:	mov	x21, x0
   1ebd8:	ldr	x22, [x0, #4000]
   1ebdc:	ldr	x1, [x22]
   1ebe0:	cbnz	x1, 1ebec <__sanitizer_symbolize_global@@Base+0x44a8>
   1ebe4:	bl	1571c <__sanitizer_set_report_fd@@Base+0x2c68>
   1ebe8:	str	x0, [x22]
   1ebec:	ldr	x0, [x21, #4000]
   1ebf0:	ldr	x0, [x0]
   1ebf4:	sub	x4, x0, #0x1
   1ebf8:	tst	x4, x0
   1ebfc:	b.eq	1ec10 <__sanitizer_symbolize_global@@Base+0x44cc>  // b.none
   1ec00:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1ec04:	add	x0, x0, #0x300
   1ec08:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   1ec0c:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1ec10:	add	x19, x19, x4
   1ec14:	neg	x0, x0
   1ec18:	and	x19, x19, x0
   1ec1c:	mov	w2, #0x0                   	// #0
   1ec20:	mov	x0, x19
   1ec24:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1ec28:	add	x1, x1, #0x360
   1ec2c:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1ec30:	ldr	x1, [x20]
   1ec34:	mov	x21, x0
   1ec38:	ldr	x2, [x20, #16]
   1ec3c:	lsl	x2, x2, #3
   1ec40:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1ec44:	ldp	x0, x1, [x20]
   1ec48:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1ec4c:	ldr	x30, [sp, #32]
   1ec50:	stp	x21, x19, [x20]
   1ec54:	ldp	x21, x22, [sp, #16]
   1ec58:	ldp	x19, x20, [sp], #48
   1ec5c:	ret
   1ec60:	stp	x19, x20, [sp, #-128]!
   1ec64:	mov	x19, x0
   1ec68:	mov	x20, x1
   1ec6c:	stp	x21, x22, [sp, #16]
   1ec70:	mov	x22, x2
   1ec74:	mov	x21, #0x0                   	// #0
   1ec78:	stp	x23, x30, [sp, #32]
   1ec7c:	add	x23, x0, #0x20
   1ec80:	str	xzr, [sp, #56]
   1ec84:	ldr	x0, [x19, #48]
   1ec88:	cmp	x21, x0
   1ec8c:	b.cs	1ecc4 <__sanitizer_symbolize_global@@Base+0x4580>  // b.hs, b.nlast
   1ec90:	mov	x1, x21
   1ec94:	mov	x0, x23
   1ec98:	bl	1eb10 <__sanitizer_symbolize_global@@Base+0x43cc>
   1ec9c:	ldr	x0, [x0]
   1eca0:	ldr	x1, [x0, #16424]
   1eca4:	mov	x0, x20
   1eca8:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1ecac:	cbnz	w0, 1ed34 <__sanitizer_symbolize_global@@Base+0x45f0>
   1ecb0:	mov	x1, x21
   1ecb4:	mov	x0, x23
   1ecb8:	bl	1eb10 <__sanitizer_symbolize_global@@Base+0x43cc>
   1ecbc:	ldr	x0, [x0]
   1ecc0:	str	x0, [sp, #56]
   1ecc4:	ldr	x0, [sp, #56]
   1ecc8:	cbnz	x0, 1ed74 <__sanitizer_symbolize_global@@Base+0x4630>
   1eccc:	ldr	x0, [x19, #24]
   1ecd0:	mov	x1, #0x4030                	// #16432
   1ecd4:	bl	e5ec <__sancov_default_options@@Base+0x168>
   1ecd8:	mov	x21, x0
   1ecdc:	ldr	x1, [x19, #16]
   1ece0:	mov	w2, #0x0                   	// #0
   1ece4:	bl	1dd14 <__sanitizer_symbolize_global@@Base+0x35d0>
   1ece8:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1ecec:	add	x0, x0, #0xd98
   1ecf0:	str	x0, [x21]
   1ecf4:	mov	x0, x20
   1ecf8:	bl	144f8 <__sanitizer_set_report_fd@@Base+0x1a44>
   1ecfc:	str	x21, [sp, #56]
   1ed00:	ldr	x4, [x19, #40]
   1ed04:	str	x0, [x21, #16424]
   1ed08:	add	x21, x19, #0x20
   1ed0c:	ldr	x3, [x21, #16]
   1ed10:	lsr	x4, x4, #3
   1ed14:	cmp	x3, x4
   1ed18:	b.ls	1ed3c <__sanitizer_symbolize_global@@Base+0x45f8>  // b.plast
   1ed1c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1ed20:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1ed24:	add	x2, x2, #0x373
   1ed28:	add	x0, x0, #0x5c5
   1ed2c:	mov	w1, #0x1be                 	// #446
   1ed30:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1ed34:	add	x21, x21, #0x1
   1ed38:	b	1ec84 <__sanitizer_symbolize_global@@Base+0x4540>
   1ed3c:	b.ne	1ed54 <__sanitizer_symbolize_global@@Base+0x4610>  // b.any
   1ed40:	add	x0, x3, #0x1
   1ed44:	bl	91f0 <__lsan_do_recoverable_leak_check@@Base+0x894>
   1ed48:	mov	x1, x0
   1ed4c:	mov	x0, x21
   1ed50:	bl	1eb7c <__sanitizer_symbolize_global@@Base+0x4438>
   1ed54:	ldr	x0, [x21, #16]
   1ed58:	mov	x2, #0x8                   	// #8
   1ed5c:	ldr	x3, [x19, #32]
   1ed60:	add	x1, x0, #0x1
   1ed64:	str	x1, [x21, #16]
   1ed68:	add	x1, sp, #0x38
   1ed6c:	add	x0, x3, x0, lsl #3
   1ed70:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1ed74:	ldr	x0, [sp, #56]
   1ed78:	ldr	x1, [x0, #16424]
   1ed7c:	mov	x0, x20
   1ed80:	bl	143e0 <__sanitizer_set_report_fd@@Base+0x192c>
   1ed84:	sxtw	x4, w0
   1ed88:	cbz	w0, 1eda8 <__sanitizer_symbolize_global@@Base+0x4664>
   1ed8c:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1ed90:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1ed94:	add	x2, x2, #0x57f
   1ed98:	add	x0, x0, #0x249
   1ed9c:	mov	x3, #0x0                   	// #0
   1eda0:	mov	w1, #0x15c                 	// #348
   1eda4:	b	1ed30 <__sanitizer_symbolize_global@@Base+0x45ec>
   1eda8:	add	x19, sp, #0x40
   1edac:	mov	x3, x22
   1edb0:	mov	x4, #0xffffffffffffffff    	// #-1
   1edb4:	mov	x0, x19
   1edb8:	mov	x1, #0x40                  	// #64
   1edbc:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1edc0:	add	x2, x2, #0x5c3
   1edc4:	bl	1886c <OnPrint@@Base+0x4>
   1edc8:	ldr	x0, [sp, #56]
   1edcc:	mov	x1, x19
   1edd0:	bl	1defc <__sanitizer_symbolize_global@@Base+0x37b8>
   1edd4:	ldp	x21, x22, [sp, #16]
   1edd8:	ldp	x23, x30, [sp, #32]
   1eddc:	ldp	x19, x20, [sp], #128
   1ede0:	ret
   1ede4:	stp	x19, x30, [sp, #-16]!
   1ede8:	mov	x19, x2
   1edec:	ldr	x2, [x2, #24]
   1edf0:	ldr	x1, [x19, #16]
   1edf4:	bl	1ec60 <__sanitizer_symbolize_global@@Base+0x451c>
   1edf8:	cbz	x0, 1ee10 <__sanitizer_symbolize_global@@Base+0x46cc>
   1edfc:	mov	x1, x19
   1ee00:	bl	1dacc <__sanitizer_symbolize_global@@Base+0x3388>
   1ee04:	mov	w0, #0x1                   	// #1
   1ee08:	ldp	x19, x30, [sp], #16
   1ee0c:	ret
   1ee10:	mov	w0, #0x0                   	// #0
   1ee14:	b	1ee08 <__sanitizer_symbolize_global@@Base+0x46c4>
   1ee18:	stp	x19, x20, [sp, #-32]!
   1ee1c:	mov	x19, x0
   1ee20:	add	x20, x0, #0x20
   1ee24:	str	x30, [sp, #16]
   1ee28:	str	xzr, [x0, #8]
   1ee2c:	adrp	x0, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1ee30:	add	x0, x0, #0xdc0
   1ee34:	str	x0, [x19]
   1ee38:	stp	x1, x2, [x19, #16]
   1ee3c:	mov	x0, x20
   1ee40:	mov	x1, #0x1                   	// #1
   1ee44:	stp	xzr, xzr, [x19, #32]
   1ee48:	str	xzr, [x19, #48]
   1ee4c:	bl	1eb7c <__sanitizer_symbolize_global@@Base+0x4438>
   1ee50:	ldr	x0, [x19, #40]
   1ee54:	cmp	x0, #0x7f
   1ee58:	b.hi	1ee70 <__sanitizer_symbolize_global@@Base+0x472c>  // b.pmore
   1ee5c:	mov	x0, x20
   1ee60:	mov	x1, #0x10                  	// #16
   1ee64:	ldr	x30, [sp, #16]
   1ee68:	ldp	x19, x20, [sp], #32
   1ee6c:	b	1eb7c <__sanitizer_symbolize_global@@Base+0x4438>
   1ee70:	ldr	x30, [sp, #16]
   1ee74:	ldp	x19, x20, [sp], #32
   1ee78:	ret
   1ee7c:	stp	x19, x20, [sp, #-32]!
   1ee80:	mov	x20, x1
   1ee84:	str	x30, [sp, #16]
   1ee88:	bl	1d32c <__sanitizer_symbolize_global@@Base+0x2be8>
   1ee8c:	mov	w19, w0
   1ee90:	tst	w0, #0xff
   1ee94:	b.eq	1eed8 <__sanitizer_symbolize_global@@Base+0x4794>  // b.none
   1ee98:	ldrb	w0, [x20]
   1ee9c:	cbz	w0, 1eed8 <__sanitizer_symbolize_global@@Base+0x4794>
   1eea0:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1eea4:	add	x0, x20, #0x1
   1eea8:	add	x1, x1, #0x5e3
   1eeac:	bl	146e8 <__sanitizer_set_report_fd@@Base+0x1c34>
   1eeb0:	cbnz	x0, 1eed4 <__sanitizer_symbolize_global@@Base+0x4790>
   1eeb4:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1eeb8:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1eebc:	add	x2, x2, #0x5d0
   1eec0:	add	x0, x0, #0x249
   1eec4:	mov	x4, #0x0                   	// #0
   1eec8:	mov	x3, #0x0                   	// #0
   1eecc:	mov	w1, #0x11e                 	// #286
   1eed0:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1eed4:	strb	wzr, [x0]
   1eed8:	mov	w0, w19
   1eedc:	ldr	x30, [sp, #16]
   1eee0:	ldp	x19, x20, [sp], #32
   1eee4:	ret
   1eee8:	adrp	x2, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1eeec:	add	x2, x2, #0x1f8
   1eef0:	mov	x1, #0x0                   	// #0
   1eef4:	ldr	x4, [x2, x1, lsl #3]
   1eef8:	mov	w3, w1
   1eefc:	cbnz	x4, 1ef0c <__sanitizer_symbolize_global@@Base+0x47c8>
   1ef00:	str	x0, [x2, w3, sxtw #3]
   1ef04:	mov	w0, #0x1                   	// #1
   1ef08:	ret
   1ef0c:	add	x1, x1, #0x1
   1ef10:	cmp	x1, #0x5
   1ef14:	b.ne	1eef4 <__sanitizer_symbolize_global@@Base+0x47b0>  // b.any
   1ef18:	mov	w0, #0x0                   	// #0
   1ef1c:	b	1ef08 <__sanitizer_symbolize_global@@Base+0x47c4>
   1ef20:	stp	x19, x30, [sp, #-16]!
   1ef24:	adrp	x19, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1ef28:	add	x19, x19, #0x1f8
   1ef2c:	mov	x2, #0x0                   	// #0
   1ef30:	ldr	x4, [x19, x2, lsl #3]
   1ef34:	mov	w3, w2
   1ef38:	add	w1, w2, #0x1
   1ef3c:	cmp	x4, x0
   1ef40:	b.ne	1ef6c <__sanitizer_symbolize_global@@Base+0x4828>  // b.any
   1ef44:	mov	w2, #0x4                   	// #4
   1ef48:	sub	w2, w2, w3
   1ef4c:	add	x1, x19, w1, sxtw #3
   1ef50:	add	x0, x19, w3, sxtw #3
   1ef54:	sbfiz	x2, x2, #3, #32
   1ef58:	bl	14334 <__sanitizer_set_report_fd@@Base+0x1880>
   1ef5c:	mov	w0, #0x1                   	// #1
   1ef60:	str	xzr, [x19, #32]
   1ef64:	ldp	x19, x30, [sp], #16
   1ef68:	ret
   1ef6c:	add	x2, x2, #0x1
   1ef70:	cmp	x2, #0x5
   1ef74:	b.ne	1ef30 <__sanitizer_symbolize_global@@Base+0x47ec>  // b.any
   1ef78:	mov	w0, #0x0                   	// #0
   1ef7c:	b	1ef64 <__sanitizer_symbolize_global@@Base+0x4820>
   1ef80:	adrp	x1, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1ef84:	str	x0, [x1, #544]
   1ef88:	ret
   1ef8c:	adrp	x0, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1ef90:	add	x1, x0, #0x1f8
   1ef94:	stp	x19, x20, [sp, #-32]!
   1ef98:	mov	x19, x0
   1ef9c:	ldr	x1, [x1, #40]
   1efa0:	str	x30, [sp, #16]
   1efa4:	cbz	x1, 1efac <__sanitizer_symbolize_global@@Base+0x4868>
   1efa8:	blr	x1
   1efac:	add	x19, x19, #0x1f8
   1efb0:	mov	x20, #0x4                   	// #4
   1efb4:	ldr	x0, [x19, x20, lsl #3]
   1efb8:	cbz	x0, 1efc0 <__sanitizer_symbolize_global@@Base+0x487c>
   1efbc:	blr	x0
   1efc0:	sub	x20, x20, #0x1
   1efc4:	cmn	x20, #0x1
   1efc8:	b.ne	1efb4 <__sanitizer_symbolize_global@@Base+0x4870>  // b.any
   1efcc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1efd0:	ldr	x0, [x0, #4040]
   1efd4:	ldrb	w1, [x0, #220]
   1efd8:	cbz	w1, 1efe0 <__sanitizer_symbolize_global@@Base+0x489c>
   1efdc:	bl	1776c <__sanitizer_set_report_fd@@Base+0x4cb8>
   1efe0:	ldr	w0, [x0, #216]
   1efe4:	bl	15088 <__sanitizer_set_report_fd@@Base+0x25d4>
   1efe8:	adrp	x1, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1efec:	str	x0, [x1, #552]
   1eff0:	ret
   1eff4:	stp	x19, x20, [sp, #-48]!
   1eff8:	adrp	x6, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1effc:	add	x6, x6, #0x1f8
   1f000:	mov	x19, x0
   1f004:	mov	w20, w1
   1f008:	add	x5, x6, #0x38
   1f00c:	stp	x21, x22, [sp, #16]
   1f010:	mov	x21, x2
   1f014:	mov	x22, x3
   1f018:	stp	x23, x30, [sp, #32]
   1f01c:	mov	x23, x4
   1f020:	ldxr	w7, [x5]
   1f024:	add	w8, w7, #0x1
   1f028:	stlxr	w9, w8, [x5]
   1f02c:	cbnz	w9, 1f020 <__sanitizer_symbolize_global@@Base+0x48dc>
   1f030:	dmb	ish
   1f034:	cmp	w7, #0xa
   1f038:	b.ls	1f048 <__sanitizer_symbolize_global@@Base+0x4904>  // b.plast
   1f03c:	mov	w0, #0x2                   	// #2
   1f040:	bl	1775c <__sanitizer_set_report_fd@@Base+0x4ca8>
   1f044:	brk	#0x3e8
   1f048:	ldr	x5, [x6, #48]
   1f04c:	cbz	x5, 1f054 <__sanitizer_symbolize_global@@Base+0x4910>
   1f050:	blr	x5
   1f054:	mov	x5, x23
   1f058:	mov	x4, x22
   1f05c:	mov	x3, x21
   1f060:	mov	w2, w20
   1f064:	mov	x1, x19
   1f068:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f06c:	add	x0, x0, #0x5ec
   1f070:	bl	18b74 <OnPrint@@Base+0x30c>
   1f074:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>

000000000001f078 <__sanitizer_set_death_callback@@Base>:
   1f078:	adrp	x1, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1f07c:	str	x0, [x1, #544]
   1f080:	ret
   1f084:	ldr	x2, [x0, #32]
   1f088:	cmp	x1, x2
   1f08c:	b.ne	1f0a0 <__sanitizer_set_death_callback@@Base+0x28>  // b.any
   1f090:	ldr	w0, [x0, #112]
   1f094:	tst	w0, #0xfffffffb
   1f098:	cset	w0, ne  // ne = any
   1f09c:	ret
   1f0a0:	mov	w0, #0x0                   	// #0
   1f0a4:	b	1f09c <__sanitizer_set_death_callback@@Base+0x24>
   1f0a8:	adrp	x2, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1f0ac:	add	x2, x2, #0xe20
   1f0b0:	str	x2, [x0]
   1f0b4:	str	w1, [x0, #8]
   1f0b8:	str	xzr, [x0, #16]
   1f0bc:	str	wzr, [x0, #24]
   1f0c0:	stp	xzr, xzr, [x0, #32]
   1f0c4:	strb	wzr, [x0, #48]
   1f0c8:	str	wzr, [x0, #112]
   1f0cc:	strh	wzr, [x0, #116]
   1f0d0:	str	wzr, [x0, #120]
   1f0d4:	str	xzr, [x0, #128]
   1f0d8:	dmb	ish
   1f0dc:	str	wzr, [x0, #136]
   1f0e0:	ret
   1f0e4:	str	x30, [sp, #-16]!
   1f0e8:	adrp	x1, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   1f0ec:	add	x1, x1, #0xe20
   1f0f0:	str	x1, [x0]
   1f0f4:	adrp	x2, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   1f0f8:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f0fc:	add	x2, x2, #0xbf4
   1f100:	add	x0, x0, #0x61b
   1f104:	mov	x4, #0x0                   	// #0
   1f108:	mov	x3, #0x0                   	// #0
   1f10c:	mov	w1, #0x1b                  	// #27
   1f110:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1f114:	strb	wzr, [x0, #48]
   1f118:	cbz	x1, 1f13c <__sanitizer_set_death_callback@@Base+0xc4>
   1f11c:	stp	x19, x30, [sp, #-16]!
   1f120:	mov	x19, x0
   1f124:	mov	x2, #0x40                  	// #64
   1f128:	add	x0, x0, #0x30
   1f12c:	bl	1460c <__sanitizer_set_report_fd@@Base+0x1b58>
   1f130:	strb	wzr, [x19, #111]
   1f134:	ldp	x19, x30, [sp], #16
   1f138:	ret
   1f13c:	ret
   1f140:	ldr	w2, [x0, #112]
   1f144:	sub	w2, w2, #0x2
   1f148:	cmp	w2, #0x1
   1f14c:	b.ls	1f174 <__sanitizer_set_death_callback@@Base+0xfc>  // b.plast
   1f150:	str	x30, [sp, #-16]!
   1f154:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f158:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f15c:	add	x2, x2, #0x662
   1f160:	add	x0, x0, #0x61b
   1f164:	mov	x4, #0x0                   	// #0
   1f168:	mov	x3, #0x0                   	// #0
   1f16c:	mov	w1, #0x27                  	// #39
   1f170:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1f174:	ldr	x1, [x0]
   1f178:	mov	w2, #0x4                   	// #4
   1f17c:	str	xzr, [x0, #40]
   1f180:	str	w2, [x0, #112]
   1f184:	ldr	x1, [x1]
   1f188:	mov	x16, x1
   1f18c:	br	x16
   1f190:	dmb	ish
   1f194:	mov	w1, #0x1                   	// #1
   1f198:	str	w1, [x0, #136]
   1f19c:	ret
   1f1a0:	ldr	w0, [x0, #136]
   1f1a4:	dmb	ish
   1f1a8:	cmp	w0, #0x0
   1f1ac:	cset	w0, ne  // ne = any
   1f1b0:	ret
   1f1b4:	ldrb	w3, [x0, #116]
   1f1b8:	str	x30, [sp, #-16]!
   1f1bc:	cbz	w3, 1f1e0 <__sanitizer_set_death_callback@@Base+0x168>
   1f1c0:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f1c4:	add	x2, x2, #0x6ad
   1f1c8:	mov	x4, #0x1                   	// #1
   1f1cc:	mov	x3, #0x0                   	// #0
   1f1d0:	mov	w1, #0x38                  	// #56
   1f1d4:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f1d8:	add	x0, x0, #0x61b
   1f1dc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1f1e0:	ldr	w4, [x0, #112]
   1f1e4:	cmp	x4, #0x3
   1f1e8:	b.eq	1f200 <__sanitizer_set_death_callback@@Base+0x188>  // b.none
   1f1ec:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f1f0:	mov	x3, #0x3                   	// #3
   1f1f4:	add	x2, x2, #0x6c7
   1f1f8:	mov	w1, #0x39                  	// #57
   1f1fc:	b	1f1d4 <__sanitizer_set_death_callback@@Base+0x15c>
   1f200:	ldr	x2, [x0]
   1f204:	mov	w3, #0x4                   	// #4
   1f208:	ldr	x30, [sp], #16
   1f20c:	str	xzr, [x0, #40]
   1f210:	ldr	x2, [x2, #8]
   1f214:	str	w3, [x0, #112]
   1f218:	mov	x16, x2
   1f21c:	br	x16
   1f220:	ldrb	w1, [x0, #116]
   1f224:	cbz	w1, 1f234 <__sanitizer_set_death_callback@@Base+0x1bc>
   1f228:	ldr	w1, [x0, #112]
   1f22c:	cmp	w1, #0x1
   1f230:	b.ne	1f23c <__sanitizer_set_death_callback@@Base+0x1c4>  // b.any
   1f234:	mov	w1, #0x3                   	// #3
   1f238:	str	w1, [x0, #112]
   1f23c:	ldr	x1, [x0]
   1f240:	ldr	x1, [x1, #16]
   1f244:	mov	x16, x1
   1f248:	br	x16
   1f24c:	str	x1, [x0, #32]
   1f250:	mov	w5, #0x2                   	// #2
   1f254:	ldr	x1, [x0]
   1f258:	strb	w2, [x0, #117]
   1f25c:	str	w5, [x0, #112]
   1f260:	ldr	x2, [x1, #24]
   1f264:	mov	x1, x3
   1f268:	mov	x16, x2
   1f26c:	br	x16
   1f270:	str	x1, [x0, #40]
   1f274:	mov	w6, #0x1                   	// #1
   1f278:	ldr	w1, [x0, #8]
   1f27c:	str	x2, [x0, #16]
   1f280:	str	w6, [x0, #112]
   1f284:	strb	w3, [x0, #116]
   1f288:	cbz	w1, 1f290 <__sanitizer_set_death_callback@@Base+0x218>
   1f28c:	str	w4, [x0, #120]
   1f290:	ldr	x1, [x0]
   1f294:	ldr	x2, [x1, #32]
   1f298:	mov	x1, x5
   1f29c:	mov	x16, x2
   1f2a0:	br	x16
   1f2a4:	strb	wzr, [x0, #48]
   1f2a8:	str	wzr, [x0, #112]
   1f2ac:	dmb	ish
   1f2b0:	str	wzr, [x0, #136]
   1f2b4:	ldr	x1, [x0]
   1f2b8:	ldr	x1, [x1, #40]
   1f2bc:	mov	x16, x1
   1f2c0:	br	x16
   1f2c4:	stp	x19, x30, [sp, #-16]!
   1f2c8:	mov	x19, x0
   1f2cc:	add	x0, x0, #0x18
   1f2d0:	str	x1, [x19]
   1f2d4:	stp	w2, w3, [x19, #8]
   1f2d8:	str	w4, [x19, #16]
   1f2dc:	bl	1535c <__sanitizer_set_report_fd@@Base+0x28a8>
   1f2e0:	str	wzr, [x19, #112]
   1f2e4:	ldr	w0, [x19, #8]
   1f2e8:	mov	w2, #0x0                   	// #0
   1f2ec:	stp	xzr, xzr, [x19, #120]
   1f2f0:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f2f4:	add	x1, x1, #0x6ee
   1f2f8:	stp	xzr, xzr, [x19, #136]
   1f2fc:	lsl	x0, x0, #3
   1f300:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1f304:	stp	x0, xzr, [x19, #152]
   1f308:	stp	xzr, xzr, [x19, #168]
   1f30c:	stp	xzr, xzr, [x19, #184]
   1f310:	str	xzr, [x19, #200]
   1f314:	ldp	x19, x30, [sp], #16
   1f318:	ret
   1f31c:	stp	x19, x20, [sp, #-48]!
   1f320:	mov	x19, x0
   1f324:	mov	w20, #0x0                   	// #0
   1f328:	add	x0, x0, #0x18
   1f32c:	stp	x21, x22, [sp, #16]
   1f330:	mov	x21, x1
   1f334:	mov	x22, x2
   1f338:	str	x30, [sp, #32]
   1f33c:	bl	15454 <__sanitizer_set_report_fd@@Base+0x29a0>
   1f340:	ldr	w0, [x19, #112]
   1f344:	cmp	w0, w20
   1f348:	b.ls	1f368 <__sanitizer_set_death_callback@@Base+0x2f0>  // b.plast
   1f34c:	ldr	x0, [x19, #152]
   1f350:	ldr	x0, [x0, w20, uxtw #3]
   1f354:	cbz	x0, 1f360 <__sanitizer_set_death_callback@@Base+0x2e8>
   1f358:	mov	x1, x22
   1f35c:	blr	x21
   1f360:	add	w20, w20, #0x1
   1f364:	b	1f340 <__sanitizer_set_death_callback@@Base+0x2c8>
   1f368:	ldp	x21, x22, [sp, #16]
   1f36c:	ldr	x30, [sp, #32]
   1f370:	ldp	x19, x20, [sp], #48
   1f374:	ret
   1f378:	stp	x19, x20, [sp, #-48]!
   1f37c:	mov	x19, x0
   1f380:	add	x0, x0, #0x18
   1f384:	stp	x21, x22, [sp, #16]
   1f388:	mov	w21, #0x0                   	// #0
   1f38c:	mov	x22, x1
   1f390:	stp	x23, x30, [sp, #32]
   1f394:	mov	x23, x2
   1f398:	bl	15454 <__sanitizer_set_report_fd@@Base+0x29a0>
   1f39c:	ldr	w0, [x19, #112]
   1f3a0:	cmp	w0, w21
   1f3a4:	b.ls	1f3e4 <__sanitizer_set_death_callback@@Base+0x36c>  // b.plast
   1f3a8:	ldr	x0, [x19, #152]
   1f3ac:	ldr	x20, [x0, w21, uxtw #3]
   1f3b0:	cbnz	x20, 1f3bc <__sanitizer_set_death_callback@@Base+0x344>
   1f3b4:	add	w21, w21, #0x1
   1f3b8:	b	1f39c <__sanitizer_set_death_callback@@Base+0x324>
   1f3bc:	mov	x1, x23
   1f3c0:	mov	x0, x20
   1f3c4:	blr	x22
   1f3c8:	tst	w0, #0xff
   1f3cc:	b.eq	1f3b4 <__sanitizer_set_death_callback@@Base+0x33c>  // b.none
   1f3d0:	mov	x0, x20
   1f3d4:	ldp	x21, x22, [sp, #16]
   1f3d8:	ldp	x23, x30, [sp, #32]
   1f3dc:	ldp	x19, x20, [sp], #48
   1f3e0:	ret
   1f3e4:	mov	x20, #0x0                   	// #0
   1f3e8:	b	1f3d0 <__sanitizer_set_death_callback@@Base+0x358>
   1f3ec:	mov	x2, x1
   1f3f0:	adrp	x1, 1f000 <__sanitizer_symbolize_global@@Base+0x48bc>
   1f3f4:	add	x1, x1, #0x84
   1f3f8:	b	1f378 <__sanitizer_set_death_callback@@Base+0x300>
   1f3fc:	stp	x19, x20, [sp, #-64]!
   1f400:	mov	x19, x0
   1f404:	mov	x20, x3
   1f408:	add	x0, x0, #0x18
   1f40c:	stp	x21, x22, [sp, #16]
   1f410:	mov	x22, x1
   1f414:	mov	x21, x2
   1f418:	str	x30, [sp, #32]
   1f41c:	str	x0, [sp, #56]
   1f420:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1f424:	cbz	x22, 1f430 <__sanitizer_set_death_callback@@Base+0x3b8>
   1f428:	ldr	w0, [x19, #112]
   1f42c:	str	x0, [x22]
   1f430:	cbz	x21, 1f43c <__sanitizer_set_death_callback@@Base+0x3c4>
   1f434:	ldr	x0, [x19, #144]
   1f438:	str	x0, [x21]
   1f43c:	cbz	x20, 1f448 <__sanitizer_set_death_callback@@Base+0x3d0>
   1f440:	ldr	x0, [x19, #128]
   1f444:	str	x0, [x20]
   1f448:	add	x0, sp, #0x38
   1f44c:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1f450:	ldp	x21, x22, [sp, #16]
   1f454:	ldr	x30, [sp, #32]
   1f458:	ldp	x19, x20, [sp], #64
   1f45c:	ret
   1f460:	stp	x19, x30, [sp, #-32]!
   1f464:	mov	x19, x0
   1f468:	add	x0, x0, #0x18
   1f46c:	str	x0, [sp, #24]
   1f470:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1f474:	ldr	x19, [x19, #136]
   1f478:	add	x0, sp, #0x18
   1f47c:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1f480:	mov	x0, x19
   1f484:	ldp	x19, x30, [sp], #32
   1f488:	ret
   1f48c:	stp	x19, x20, [sp, #-64]!
   1f490:	mov	x19, x0
   1f494:	mov	w20, #0x0                   	// #0
   1f498:	add	x0, x0, #0x18
   1f49c:	stp	x21, x22, [sp, #16]
   1f4a0:	mov	x21, x1
   1f4a4:	mov	x22, x2
   1f4a8:	stp	x23, x30, [sp, #32]
   1f4ac:	str	x0, [sp, #56]
   1f4b0:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1f4b4:	ldr	w0, [x19, #112]
   1f4b8:	cmp	w0, w20
   1f4bc:	b.ls	1f508 <__sanitizer_set_death_callback@@Base+0x490>  // b.plast
   1f4c0:	ldr	x0, [x19, #152]
   1f4c4:	ldr	x23, [x0, w20, uxtw #3]
   1f4c8:	cbz	x23, 1f500 <__sanitizer_set_death_callback@@Base+0x488>
   1f4cc:	mov	x1, x22
   1f4d0:	mov	x0, x23
   1f4d4:	blr	x21
   1f4d8:	tst	w0, #0xff
   1f4dc:	b.eq	1f500 <__sanitizer_set_death_callback@@Base+0x488>  // b.none
   1f4e0:	ldr	w19, [x23, #8]
   1f4e4:	add	x0, sp, #0x38
   1f4e8:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1f4ec:	mov	w0, w19
   1f4f0:	ldp	x21, x22, [sp, #16]
   1f4f4:	ldp	x23, x30, [sp, #32]
   1f4f8:	ldp	x19, x20, [sp], #64
   1f4fc:	ret
   1f500:	add	w20, w20, #0x1
   1f504:	b	1f4b4 <__sanitizer_set_death_callback@@Base+0x43c>
   1f508:	mov	w19, #0xffffffff            	// #-1
   1f50c:	b	1f4e4 <__sanitizer_set_death_callback@@Base+0x46c>
   1f510:	stp	x19, x20, [sp, #-48]!
   1f514:	mov	x19, x0
   1f518:	mov	w20, w1
   1f51c:	add	x0, x0, #0x18
   1f520:	stp	x21, x30, [sp, #16]
   1f524:	mov	x21, x2
   1f528:	str	x0, [sp, #40]
   1f52c:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1f530:	ldr	w4, [x19, #112]
   1f534:	mov	w3, w20
   1f538:	cmp	x4, w20, uxtw
   1f53c:	b.hi	1f558 <__sanitizer_set_death_callback@@Base+0x4e0>  // b.pmore
   1f540:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f544:	add	x2, x2, #0x6fd
   1f548:	mov	w1, #0xd7                  	// #215
   1f54c:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f550:	add	x0, x0, #0x61b
   1f554:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1f558:	ldr	x0, [x19, #152]
   1f55c:	ldr	x0, [x0, x3, lsl #3]
   1f560:	cbnz	x0, 1f57c <__sanitizer_set_death_callback@@Base+0x504>
   1f564:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f568:	mov	x4, #0x0                   	// #0
   1f56c:	add	x2, x2, #0x717
   1f570:	mov	x3, #0x0                   	// #0
   1f574:	mov	w1, #0xd9                  	// #217
   1f578:	b	1f54c <__sanitizer_set_death_callback@@Base+0x4d4>
   1f57c:	ldr	w4, [x0, #112]
   1f580:	cmp	x4, #0x2
   1f584:	b.eq	1f59c <__sanitizer_set_death_callback@@Base+0x524>  // b.none
   1f588:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f58c:	mov	x3, #0x2                   	// #2
   1f590:	add	x2, x2, #0x729
   1f594:	mov	w1, #0xda                  	// #218
   1f598:	b	1f54c <__sanitizer_set_death_callback@@Base+0x4d4>
   1f59c:	mov	x1, x21
   1f5a0:	bl	1f114 <__sanitizer_set_death_callback@@Base+0x9c>
   1f5a4:	add	x0, sp, #0x28
   1f5a8:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1f5ac:	ldp	x21, x30, [sp, #16]
   1f5b0:	ldp	x19, x20, [sp], #48
   1f5b4:	ret
   1f5b8:	stp	x19, x20, [sp, #-48]!
   1f5bc:	mov	x19, x0
   1f5c0:	mov	x20, x1
   1f5c4:	add	x0, x0, #0x18
   1f5c8:	stp	x21, x30, [sp, #16]
   1f5cc:	mov	x21, x2
   1f5d0:	str	x0, [sp, #40]
   1f5d4:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1f5d8:	ldr	w1, [x19, #112]
   1f5dc:	mov	x3, #0x0                   	// #0
   1f5e0:	cmp	w1, w3
   1f5e4:	b.ls	1f610 <__sanitizer_set_death_callback@@Base+0x598>  // b.plast
   1f5e8:	ldr	x0, [x19, #152]
   1f5ec:	ldr	x0, [x0, x3, lsl #3]
   1f5f0:	cbz	x0, 1f624 <__sanitizer_set_death_callback@@Base+0x5ac>
   1f5f4:	ldr	x2, [x0, #40]
   1f5f8:	cmp	x2, x20
   1f5fc:	b.ne	1f624 <__sanitizer_set_death_callback@@Base+0x5ac>  // b.any
   1f600:	ldr	w2, [x0, #112]
   1f604:	cbz	w2, 1f624 <__sanitizer_set_death_callback@@Base+0x5ac>
   1f608:	mov	x1, x21
   1f60c:	bl	1f114 <__sanitizer_set_death_callback@@Base+0x9c>
   1f610:	add	x0, sp, #0x28
   1f614:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1f618:	ldp	x21, x30, [sp, #16]
   1f61c:	ldp	x19, x20, [sp], #48
   1f620:	ret
   1f624:	add	x3, x3, #0x1
   1f628:	b	1f5e0 <__sanitizer_set_death_callback@@Base+0x568>
   1f62c:	stp	x19, x20, [sp, #-64]!
   1f630:	mov	x19, x0
   1f634:	mov	w20, w1
   1f638:	add	x0, x0, #0x18
   1f63c:	stp	x21, x22, [sp, #16]
   1f640:	mov	x22, x4
   1f644:	mov	x21, x2
   1f648:	stp	x23, x30, [sp, #32]
   1f64c:	and	w23, w3, #0xff
   1f650:	str	x0, [sp, #56]
   1f654:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1f658:	ldr	x0, [x19, #144]
   1f65c:	mov	w3, w20
   1f660:	ldr	w4, [x19, #112]
   1f664:	add	x0, x0, #0x1
   1f668:	str	x0, [x19, #144]
   1f66c:	cmp	x4, w20, uxtw
   1f670:	b.hi	1f68c <__sanitizer_set_death_callback@@Base+0x614>  // b.pmore
   1f674:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f678:	add	x2, x2, #0x6fd
   1f67c:	mov	w1, #0x134                 	// #308
   1f680:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f684:	add	x0, x0, #0x61b
   1f688:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1f68c:	ldr	x0, [x19, #152]
   1f690:	ldr	x0, [x0, x3, lsl #3]
   1f694:	cbnz	x0, 1f6b0 <__sanitizer_set_death_callback@@Base+0x638>
   1f698:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f69c:	mov	x4, #0x0                   	// #0
   1f6a0:	add	x2, x2, #0x717
   1f6a4:	mov	x3, #0x0                   	// #0
   1f6a8:	mov	w1, #0x136                 	// #310
   1f6ac:	b	1f680 <__sanitizer_set_death_callback@@Base+0x608>
   1f6b0:	ldr	w4, [x0, #112]
   1f6b4:	cmp	x4, #0x1
   1f6b8:	b.eq	1f6d0 <__sanitizer_set_death_callback@@Base+0x658>  // b.none
   1f6bc:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f6c0:	mov	x3, #0x1                   	// #1
   1f6c4:	add	x2, x2, #0x76f
   1f6c8:	mov	w1, #0x137                 	// #311
   1f6cc:	b	1f680 <__sanitizer_set_death_callback@@Base+0x608>
   1f6d0:	mov	x3, x22
   1f6d4:	mov	w2, w23
   1f6d8:	mov	x1, x21
   1f6dc:	bl	1f24c <__sanitizer_set_death_callback@@Base+0x1d4>
   1f6e0:	add	x0, sp, #0x38
   1f6e4:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1f6e8:	ldp	x21, x22, [sp, #16]
   1f6ec:	ldp	x23, x30, [sp, #32]
   1f6f0:	ldp	x19, x20, [sp], #64
   1f6f4:	ret
   1f6f8:	stp	x19, x30, [sp, #-16]!
   1f6fc:	ldr	x1, [x0, #184]
   1f700:	cbz	x1, 1f71c <__sanitizer_set_death_callback@@Base+0x6a4>
   1f704:	add	x0, x0, #0xb8
   1f708:	ldr	x19, [x0, #8]
   1f70c:	bl	1fcac <__sanitizer_set_death_callback@@Base+0xc34>
   1f710:	mov	x0, x19
   1f714:	ldp	x19, x30, [sp], #16
   1f718:	ret
   1f71c:	mov	x19, #0x0                   	// #0
   1f720:	b	1f710 <__sanitizer_set_death_callback@@Base+0x698>
   1f724:	stp	x19, x20, [sp, #-80]!
   1f728:	mov	x19, x0
   1f72c:	add	x0, x0, #0x18
   1f730:	stp	x21, x22, [sp, #16]
   1f734:	mov	x21, x1
   1f738:	mov	w22, w3
   1f73c:	stp	x23, x24, [sp, #32]
   1f740:	and	w24, w2, #0xff
   1f744:	mov	x23, x4
   1f748:	str	x30, [sp, #48]
   1f74c:	str	x0, [sp, #72]
   1f750:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1f754:	mov	x0, x19
   1f758:	bl	1f6f8 <__sanitizer_set_death_callback@@Base+0x680>
   1f75c:	cbz	x0, 1f788 <__sanitizer_set_death_callback@@Base+0x710>
   1f760:	ldr	w20, [x0, #8]
   1f764:	mov	x1, #0xffffffff            	// #4294967295
   1f768:	mov	w3, w20
   1f76c:	cmp	x1, w20, uxtw
   1f770:	b.ne	1f7f4 <__sanitizer_set_death_callback@@Base+0x77c>  // b.any
   1f774:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f778:	mov	x4, x3
   1f77c:	add	x2, x2, #0x7cb
   1f780:	mov	w1, #0x9d                  	// #157
   1f784:	b	1f7cc <__sanitizer_set_death_callback@@Base+0x754>
   1f788:	ldr	w2, [x19, #8]
   1f78c:	ldr	w20, [x19, #112]
   1f790:	cmp	w20, w2
   1f794:	b.cs	1f7d8 <__sanitizer_set_death_callback@@Base+0x760>  // b.hs, b.nlast
   1f798:	ldr	x1, [x19]
   1f79c:	add	w0, w20, #0x1
   1f7a0:	str	w0, [x19, #112]
   1f7a4:	mov	w0, w20
   1f7a8:	blr	x1
   1f7ac:	ldr	x1, [x19, #152]
   1f7b0:	str	x0, [x1, w20, uxtw #3]
   1f7b4:	cbnz	x0, 1f764 <__sanitizer_set_death_callback@@Base+0x6ec>
   1f7b8:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f7bc:	add	x2, x2, #0x717
   1f7c0:	mov	x4, #0x0                   	// #0
   1f7c4:	mov	x3, #0x0                   	// #0
   1f7c8:	mov	w1, #0x9c                  	// #156
   1f7cc:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f7d0:	add	x0, x0, #0x61b
   1f7d4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1f7d8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1f7dc:	ldr	x0, [x0, #4008]
   1f7e0:	ldr	x1, [x0]
   1f7e4:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f7e8:	add	x0, x0, #0x79b
   1f7ec:	bl	18b74 <OnPrint@@Base+0x30c>
   1f7f0:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   1f7f4:	ldr	w4, [x19, #8]
   1f7f8:	cmp	x3, x4
   1f7fc:	b.cc	1f810 <__sanitizer_set_death_callback@@Base+0x798>  // b.lo, b.ul, b.last
   1f800:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f804:	mov	w1, #0x9e                  	// #158
   1f808:	add	x2, x2, #0x7e6
   1f80c:	b	1f7cc <__sanitizer_set_death_callback@@Base+0x754>
   1f810:	ldr	w3, [x0, #112]
   1f814:	cbz	x3, 1f82c <__sanitizer_set_death_callback@@Base+0x7b4>
   1f818:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f81c:	mov	x4, #0x0                   	// #0
   1f820:	add	x2, x2, #0x801
   1f824:	mov	w1, #0x9f                  	// #159
   1f828:	b	1f7cc <__sanitizer_set_death_callback@@Base+0x754>
   1f82c:	ldp	x2, x1, [x19, #128]
   1f830:	add	x3, x2, #0x1
   1f834:	str	x3, [x19, #128]
   1f838:	cmp	x3, x1
   1f83c:	b.ls	1f860 <__sanitizer_set_death_callback@@Base+0x7e8>  // b.plast
   1f840:	add	x4, x1, #0x1
   1f844:	str	x4, [x19, #136]
   1f848:	cmp	x2, x1
   1f84c:	b.eq	1f860 <__sanitizer_set_death_callback@@Base+0x7e8>  // b.none
   1f850:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f854:	mov	w1, #0xa3                  	// #163
   1f858:	add	x2, x2, #0x82d
   1f85c:	b	1f7cc <__sanitizer_set_death_callback@@Base+0x754>
   1f860:	ldr	x2, [x19, #120]
   1f864:	mov	x5, x23
   1f868:	mov	w4, w22
   1f86c:	mov	w3, w24
   1f870:	add	x1, x2, #0x1
   1f874:	str	x1, [x19, #120]
   1f878:	mov	x1, x21
   1f87c:	bl	1f270 <__sanitizer_set_death_callback@@Base+0x1f8>
   1f880:	add	x0, sp, #0x48
   1f884:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1f888:	mov	w0, w20
   1f88c:	ldp	x21, x22, [sp, #16]
   1f890:	ldp	x23, x24, [sp, #32]
   1f894:	ldr	x30, [sp, #48]
   1f898:	ldp	x19, x20, [sp], #80
   1f89c:	ret
   1f8a0:	stp	x19, x20, [sp, #-32]!
   1f8a4:	mov	x19, x0
   1f8a8:	ldr	w0, [x1, #8]
   1f8ac:	str	x30, [sp, #16]
   1f8b0:	cbz	w0, 1f968 <__sanitizer_set_death_callback@@Base+0x8f0>
   1f8b4:	mov	x0, x19
   1f8b8:	ldr	x2, [x0, #160]!
   1f8bc:	str	xzr, [x1, #128]
   1f8c0:	cbnz	x2, 1f910 <__sanitizer_set_death_callback@@Base+0x898>
   1f8c4:	stp	x1, x1, [x0, #8]
   1f8c8:	mov	x1, #0x1                   	// #1
   1f8cc:	str	x1, [x19, #160]
   1f8d0:	ldr	x2, [x19, #160]
   1f8d4:	ldr	w1, [x19, #12]
   1f8d8:	cmp	x2, x1
   1f8dc:	b.ls	1f968 <__sanitizer_set_death_callback@@Base+0x8f0>  // b.plast
   1f8e0:	ldr	x20, [x19, #168]
   1f8e4:	bl	1fcac <__sanitizer_set_death_callback@@Base+0xc34>
   1f8e8:	ldr	w3, [x20, #112]
   1f8ec:	cmp	x3, #0x4
   1f8f0:	b.eq	1f928 <__sanitizer_set_death_callback@@Base+0x8b0>  // b.none
   1f8f4:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f8f8:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f8fc:	add	x2, x2, #0x85a
   1f900:	add	x0, x0, #0x61b
   1f904:	mov	x4, #0x4                   	// #4
   1f908:	mov	w1, #0x143                 	// #323
   1f90c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1f910:	ldr	x3, [x0, #16]
   1f914:	add	x2, x2, #0x1
   1f918:	str	x1, [x3, #128]
   1f91c:	str	x1, [x0, #16]
   1f920:	str	x2, [x19, #160]
   1f924:	b	1f8d0 <__sanitizer_set_death_callback@@Base+0x858>
   1f928:	mov	x0, x20
   1f92c:	bl	1f2a4 <__sanitizer_set_death_callback@@Base+0x22c>
   1f930:	ldr	w0, [x20, #24]
   1f934:	add	w0, w0, #0x1
   1f938:	str	w0, [x20, #24]
   1f93c:	ldr	w1, [x19, #16]
   1f940:	cbz	w1, 1f94c <__sanitizer_set_death_callback@@Base+0x8d4>
   1f944:	cmp	w0, w1
   1f948:	b.cs	1f968 <__sanitizer_set_death_callback@@Base+0x8f0>  // b.hs, b.nlast
   1f94c:	mov	x0, x19
   1f950:	ldr	x1, [x0, #184]!
   1f954:	str	xzr, [x20, #128]
   1f958:	cbnz	x1, 1f974 <__sanitizer_set_death_callback@@Base+0x8fc>
   1f95c:	stp	x20, x20, [x0, #8]
   1f960:	mov	x0, #0x1                   	// #1
   1f964:	str	x0, [x19, #184]
   1f968:	ldr	x30, [sp, #16]
   1f96c:	ldp	x19, x20, [sp], #32
   1f970:	ret
   1f974:	ldr	x2, [x0, #16]
   1f978:	add	x1, x1, #0x1
   1f97c:	str	x20, [x2, #128]
   1f980:	str	x20, [x0, #16]
   1f984:	str	x1, [x19, #184]
   1f988:	b	1f968 <__sanitizer_set_death_callback@@Base+0x8f0>
   1f98c:	stp	x19, x20, [sp, #-64]!
   1f990:	mov	x20, x0
   1f994:	mov	w19, w1
   1f998:	add	x0, x0, #0x18
   1f99c:	stp	x21, x22, [sp, #16]
   1f9a0:	mov	x21, x2
   1f9a4:	str	x30, [sp, #32]
   1f9a8:	str	x0, [sp, #56]
   1f9ac:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1f9b0:	ldr	w4, [x20, #112]
   1f9b4:	mov	w3, w19
   1f9b8:	cmp	x4, w19, uxtw
   1f9bc:	b.hi	1f9d8 <__sanitizer_set_death_callback@@Base+0x960>  // b.pmore
   1f9c0:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f9c4:	add	x2, x2, #0x6fd
   1f9c8:	mov	w1, #0xed                  	// #237
   1f9cc:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f9d0:	add	x0, x0, #0x61b
   1f9d4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1f9d8:	ldr	x0, [x20, #152]
   1f9dc:	ldr	x19, [x0, x3, lsl #3]
   1f9e0:	cbnz	x19, 1f9fc <__sanitizer_set_death_callback@@Base+0x984>
   1f9e4:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1f9e8:	mov	x4, #0x0                   	// #0
   1f9ec:	add	x2, x2, #0x717
   1f9f0:	mov	x3, #0x0                   	// #0
   1f9f4:	mov	w1, #0xef                  	// #239
   1f9f8:	b	1f9cc <__sanitizer_set_death_callback@@Base+0x954>
   1f9fc:	ldr	w0, [x19, #112]
   1fa00:	add	x22, sp, #0x38
   1fa04:	cbnz	w0, 1fa38 <__sanitizer_set_death_callback@@Base+0x9c0>
   1fa08:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fa0c:	ldr	x0, [x0, #4008]
   1fa10:	ldr	x1, [x0]
   1fa14:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fa18:	add	x0, x0, #0x883
   1fa1c:	bl	18b74 <OnPrint@@Base+0x30c>
   1fa20:	mov	x0, x22
   1fa24:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1fa28:	ldp	x21, x22, [sp, #16]
   1fa2c:	ldr	x30, [sp, #32]
   1fa30:	ldp	x19, x20, [sp], #64
   1fa34:	ret
   1fa38:	ldr	x0, [x19]
   1fa3c:	mov	x1, x21
   1fa40:	ldr	x2, [x0, #48]
   1fa44:	mov	x0, x19
   1fa48:	blr	x2
   1fa4c:	ldr	w0, [x19, #112]
   1fa50:	cmp	w0, #0x3
   1fa54:	b.ne	1fa70 <__sanitizer_set_death_callback@@Base+0x9f8>  // b.any
   1fa58:	mov	x0, x19
   1fa5c:	bl	1f140 <__sanitizer_set_death_callback@@Base+0xc8>
   1fa60:	mov	x1, x19
   1fa64:	mov	x0, x20
   1fa68:	bl	1f8a0 <__sanitizer_set_death_callback@@Base+0x828>
   1fa6c:	b	1fa20 <__sanitizer_set_death_callback@@Base+0x9a8>
   1fa70:	mov	w0, #0x1                   	// #1
   1fa74:	strb	w0, [x19, #116]
   1fa78:	b	1fa20 <__sanitizer_set_death_callback@@Base+0x9a8>
   1fa7c:	stp	x19, x20, [sp, #-96]!
   1fa80:	mov	x19, x0
   1fa84:	stp	x21, x22, [sp, #16]
   1fa88:	add	x22, x0, #0x18
   1fa8c:	stp	x23, x24, [sp, #32]
   1fa90:	mov	x23, x2
   1fa94:	add	x24, sp, #0x58
   1fa98:	stp	x25, x26, [sp, #48]
   1fa9c:	mov	w25, w1
   1faa0:	ubfiz	x26, x1, #3, #32
   1faa4:	str	x30, [sp, #64]
   1faa8:	mov	x0, x22
   1faac:	str	x22, [sp, #88]
   1fab0:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1fab4:	ldr	w4, [x19, #112]
   1fab8:	cmp	x25, x4
   1fabc:	b.cc	1fadc <__sanitizer_set_death_callback@@Base+0xa64>  // b.lo, b.ul, b.last
   1fac0:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fac4:	mov	x3, x25
   1fac8:	add	x2, x2, #0x6fd
   1facc:	mov	w1, #0x102                 	// #258
   1fad0:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fad4:	add	x0, x0, #0x61b
   1fad8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1fadc:	ldr	x0, [x19, #152]
   1fae0:	ldr	x20, [x0, x26]
   1fae4:	cbnz	x20, 1fb00 <__sanitizer_set_death_callback@@Base+0xa88>
   1fae8:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1faec:	mov	x4, #0x0                   	// #0
   1faf0:	add	x2, x2, #0x717
   1faf4:	mov	x3, #0x0                   	// #0
   1faf8:	mov	w1, #0x104                 	// #260
   1fafc:	b	1fad0 <__sanitizer_set_death_callback@@Base+0xa58>
   1fb00:	ldr	w0, [x20, #112]
   1fb04:	cbnz	w0, 1fb40 <__sanitizer_set_death_callback@@Base+0xac8>
   1fb08:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fb0c:	ldr	x0, [x0, #4008]
   1fb10:	ldr	x1, [x0]
   1fb14:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fb18:	add	x0, x0, #0x8a6
   1fb1c:	bl	18b74 <OnPrint@@Base+0x30c>
   1fb20:	mov	x0, x24
   1fb24:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1fb28:	ldp	x21, x22, [sp, #16]
   1fb2c:	ldp	x23, x24, [sp, #32]
   1fb30:	ldp	x25, x26, [sp, #48]
   1fb34:	ldr	x30, [sp, #64]
   1fb38:	ldp	x19, x20, [sp], #96
   1fb3c:	ret
   1fb40:	mov	x0, x20
   1fb44:	bl	1f1a0 <__sanitizer_set_death_callback@@Base+0x128>
   1fb48:	ands	w21, w0, #0xff
   1fb4c:	b.eq	1fb68 <__sanitizer_set_death_callback@@Base+0xaf0>  // b.none
   1fb50:	mov	x1, x23
   1fb54:	mov	x0, x20
   1fb58:	bl	1f1b4 <__sanitizer_set_death_callback@@Base+0x13c>
   1fb5c:	mov	x1, x20
   1fb60:	mov	x0, x19
   1fb64:	bl	1f8a0 <__sanitizer_set_death_callback@@Base+0x828>
   1fb68:	mov	x0, x24
   1fb6c:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1fb70:	cbnz	w21, 1fb28 <__sanitizer_set_death_callback@@Base+0xab0>
   1fb74:	bl	1507c <__sanitizer_set_report_fd@@Base+0x25c8>
   1fb78:	b	1faa8 <__sanitizer_set_death_callback@@Base+0xa30>
   1fb7c:	stp	x19, x20, [sp, #-48]!
   1fb80:	mov	x19, x0
   1fb84:	mov	w20, w1
   1fb88:	add	x0, x0, #0x18
   1fb8c:	stp	x21, x30, [sp, #16]
   1fb90:	str	x0, [sp, #40]
   1fb94:	bl	15368 <__sanitizer_set_report_fd@@Base+0x28b4>
   1fb98:	ldr	x0, [x19, #128]
   1fb9c:	cbnz	x0, 1fbc0 <__sanitizer_set_death_callback@@Base+0xb48>
   1fba0:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fba4:	add	x2, x2, #0x8c7
   1fba8:	mov	x4, #0x0                   	// #0
   1fbac:	mov	x3, #0x0                   	// #0
   1fbb0:	mov	w1, #0x11a                 	// #282
   1fbb4:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fbb8:	add	x0, x0, #0x61b
   1fbbc:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1fbc0:	ldr	w4, [x19, #112]
   1fbc4:	sub	x0, x0, #0x1
   1fbc8:	str	x0, [x19, #128]
   1fbcc:	mov	w3, w20
   1fbd0:	cmp	x4, w20, uxtw
   1fbd4:	b.hi	1fbe8 <__sanitizer_set_death_callback@@Base+0xb70>  // b.pmore
   1fbd8:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fbdc:	mov	w1, #0x11c                 	// #284
   1fbe0:	add	x2, x2, #0x6fd
   1fbe4:	b	1fbb4 <__sanitizer_set_death_callback@@Base+0xb3c>
   1fbe8:	ldr	x0, [x19, #152]
   1fbec:	ldr	x20, [x0, x3, lsl #3]
   1fbf0:	cbnz	x20, 1fc0c <__sanitizer_set_death_callback@@Base+0xb94>
   1fbf4:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fbf8:	mov	x4, #0x0                   	// #0
   1fbfc:	add	x2, x2, #0x717
   1fc00:	mov	x3, #0x0                   	// #0
   1fc04:	mov	w1, #0x11e                 	// #286
   1fc08:	b	1fbb4 <__sanitizer_set_death_callback@@Base+0xb3c>
   1fc0c:	ldr	w0, [x20, #112]
   1fc10:	cmp	w0, #0x2
   1fc14:	b.ne	1fc80 <__sanitizer_set_death_callback@@Base+0xc08>  // b.any
   1fc18:	ldr	x0, [x19, #144]
   1fc1c:	cbnz	x0, 1fc38 <__sanitizer_set_death_callback@@Base+0xbc0>
   1fc20:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fc24:	mov	x4, #0x0                   	// #0
   1fc28:	add	x2, x2, #0x8e2
   1fc2c:	mov	x3, #0x0                   	// #0
   1fc30:	mov	w1, #0x121                 	// #289
   1fc34:	b	1fbb4 <__sanitizer_set_death_callback@@Base+0xb3c>
   1fc38:	ldrb	w21, [x20, #116]
   1fc3c:	sub	x0, x0, #0x1
   1fc40:	str	x0, [x19, #144]
   1fc44:	mov	x0, x20
   1fc48:	bl	1f220 <__sanitizer_set_death_callback@@Base+0x1a8>
   1fc4c:	cbz	w21, 1fc64 <__sanitizer_set_death_callback@@Base+0xbec>
   1fc50:	mov	x0, x20
   1fc54:	bl	1f140 <__sanitizer_set_death_callback@@Base+0xc8>
   1fc58:	mov	x1, x20
   1fc5c:	mov	x0, x19
   1fc60:	bl	1f8a0 <__sanitizer_set_death_callback@@Base+0x828>
   1fc64:	mov	x0, x20
   1fc68:	bl	1f190 <__sanitizer_set_death_callback@@Base+0x118>
   1fc6c:	add	x0, sp, #0x28
   1fc70:	bl	9420 <__lsan_do_recoverable_leak_check@@Base+0xac4>
   1fc74:	ldp	x21, x30, [sp, #16]
   1fc78:	ldp	x19, x20, [sp], #48
   1fc7c:	ret
   1fc80:	mov	w21, #0x1                   	// #1
   1fc84:	mov	w3, w0
   1fc88:	cmp	w0, w21
   1fc8c:	b.eq	1fc44 <__sanitizer_set_death_callback@@Base+0xbcc>  // b.none
   1fc90:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fc94:	mov	x4, #0x1                   	// #1
   1fc98:	add	x2, x2, #0x8ff
   1fc9c:	mov	w1, #0x125                 	// #293
   1fca0:	b	1fbb4 <__sanitizer_set_death_callback@@Base+0xb3c>
   1fca4:	ret
   1fca8:	ret
   1fcac:	ldr	x1, [x0]
   1fcb0:	cbnz	x1, 1fcd8 <__sanitizer_set_death_callback@@Base+0xc60>
   1fcb4:	str	x30, [sp, #-16]!
   1fcb8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1fcbc:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1fcc0:	add	x2, x2, #0xb25
   1fcc4:	add	x0, x0, #0xb39
   1fcc8:	mov	x4, #0x0                   	// #0
   1fccc:	mov	x3, #0x0                   	// #0
   1fcd0:	mov	w1, #0x40                  	// #64
   1fcd4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1fcd8:	ldr	x2, [x0, #8]
   1fcdc:	ldr	x2, [x2, #128]
   1fce0:	str	x2, [x0, #8]
   1fce4:	cbnz	x2, 1fcec <__sanitizer_set_death_callback@@Base+0xc74>
   1fce8:	str	xzr, [x0, #16]
   1fcec:	sub	x1, x1, #0x1
   1fcf0:	str	x1, [x0]
   1fcf4:	ret
   1fcf8:	stp	x19, x20, [sp, #-32]!
   1fcfc:	mov	x19, x0
   1fd00:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fd04:	mov	x20, x1
   1fd08:	ldr	x0, [x0, #3680]
   1fd0c:	ldr	w0, [x0]
   1fd10:	str	x30, [sp, #16]
   1fd14:	sxtw	x0, w0
   1fd18:	cmp	x0, #0x1
   1fd1c:	b.ls	1fd34 <__sanitizer_set_death_callback@@Base+0xcbc>  // b.plast
   1fd20:	mov	x2, x1
   1fd24:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fd28:	mov	x1, x19
   1fd2c:	add	x0, x0, #0x930
   1fd30:	bl	18b74 <OnPrint@@Base+0x30c>
   1fd34:	mov	x0, x19
   1fd38:	lsl	x1, x20, #4
   1fd3c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   1fd40:	adrp	x0, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1fd44:	add	x0, x0, #0x238
   1fd48:	ldxr	x1, [x0]
   1fd4c:	sub	x1, x1, #0x1
   1fd50:	stlxr	w2, x1, [x0]
   1fd54:	cbnz	w2, 1fd48 <__sanitizer_set_death_callback@@Base+0xcd0>
   1fd58:	dmb	ish
   1fd5c:	ldr	x30, [sp, #16]
   1fd60:	ldp	x19, x20, [sp], #32
   1fd64:	ret
   1fd68:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fd6c:	ldr	x0, [x0, #4040]
   1fd70:	ldrb	w0, [x0, #121]
   1fd74:	cbz	w0, 1fde8 <__sanitizer_set_death_callback@@Base+0xd70>
   1fd78:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fd7c:	stp	x19, x20, [sp, #-32]!
   1fd80:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fd84:	ldr	x19, [x19, #3408]
   1fd88:	ldr	x0, [x0, #3680]
   1fd8c:	mrs	x20, tpidr_el0
   1fd90:	ldr	w0, [x0]
   1fd94:	str	x30, [sp, #16]
   1fd98:	sxtw	x0, w0
   1fd9c:	cmp	x0, #0x1
   1fda0:	b.ls	1fdb8 <__sanitizer_set_death_callback@@Base+0xd40>  // b.plast
   1fda4:	ldr	x2, [x20, x19]
   1fda8:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fdac:	add	x1, x20, x19
   1fdb0:	add	x0, x0, #0x958
   1fdb4:	bl	18b74 <OnPrint@@Base+0x30c>
   1fdb8:	ldr	x1, [x20, x19]
   1fdbc:	mov	x2, #0xffffffffffffffff    	// #-1
   1fdc0:	str	x2, [x20, x19]
   1fdc4:	add	x0, x20, x19
   1fdc8:	cbz	x1, 1fddc <__sanitizer_set_death_callback@@Base+0xd64>
   1fdcc:	ldr	x30, [sp, #16]
   1fdd0:	ldp	x19, x20, [sp], #32
   1fdd4:	ldr	x0, [x0, #8]
   1fdd8:	b	1fcf8 <__sanitizer_set_death_callback@@Base+0xc80>
   1fddc:	ldr	x30, [sp, #16]
   1fde0:	ldp	x19, x20, [sp], #32
   1fde4:	ret
   1fde8:	ret
   1fdec:	stp	x19, x20, [sp, #-128]!
   1fdf0:	stp	x23, x24, [sp, #32]
   1fdf4:	mov	x24, x0
   1fdf8:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fdfc:	stp	x21, x22, [sp, #16]
   1fe00:	ldr	x0, [x0, #4040]
   1fe04:	stp	x25, x26, [sp, #48]
   1fe08:	stp	x27, x28, [sp, #64]
   1fe0c:	ldrb	w0, [x0, #121]
   1fe10:	str	x30, [sp, #80]
   1fe14:	cbnz	w0, 1fe38 <__sanitizer_set_death_callback@@Base+0xdc0>
   1fe18:	mov	x0, #0x0                   	// #0
   1fe1c:	ldp	x21, x22, [sp, #16]
   1fe20:	ldp	x23, x24, [sp, #32]
   1fe24:	ldp	x25, x26, [sp, #48]
   1fe28:	ldp	x27, x28, [sp, #64]
   1fe2c:	ldr	x30, [sp, #80]
   1fe30:	ldp	x19, x20, [sp], #128
   1fe34:	ret
   1fe38:	adrp	x23, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1fe3c:	ldr	x23, [x23, #3408]
   1fe40:	mrs	x20, tpidr_el0
   1fe44:	ldr	x0, [x20, x23]
   1fe48:	cmn	x0, #0x1
   1fe4c:	b.eq	1fe18 <__sanitizer_set_death_callback@@Base+0xda0>  // b.none
   1fe50:	ldr	x21, [x24]
   1fe54:	mov	x26, x3
   1fe58:	mov	x25, x1
   1fe5c:	mov	x27, x2
   1fe60:	add	x3, x21, #0x1
   1fe64:	cmp	x0, x3
   1fe68:	b.cs	1ffac <__sanitizer_set_death_callback@@Base+0xf34>  // b.hs, b.nlast
   1fe6c:	tst	x3, x21
   1fe70:	b.eq	1fed0 <__sanitizer_set_death_callback@@Base+0xe58>  // b.none
   1fe74:	clz	x1, x3
   1fe78:	mov	w4, #0x3f                  	// #63
   1fe7c:	sub	w1, w4, w1
   1fe80:	mov	x4, #0x1                   	// #1
   1fe84:	add	w0, w1, #0x1
   1fe88:	lsl	x0, x4, x0
   1fe8c:	cmp	x3, x0
   1fe90:	b.cc	1feb0 <__sanitizer_set_death_callback@@Base+0xe38>  // b.lo, b.ul, b.last
   1fe94:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1fe98:	mov	x4, x0
   1fe9c:	add	x2, x2, #0x2c2
   1fea0:	mov	w1, #0x17b                 	// #379
   1fea4:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   1fea8:	add	x0, x0, #0x5c5
   1feac:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   1feb0:	lsl	x4, x4, x1
   1feb4:	cmp	x3, x4
   1feb8:	b.hi	1fecc <__sanitizer_set_death_callback@@Base+0xe54>  // b.pmore
   1febc:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   1fec0:	mov	w1, #0x17c                 	// #380
   1fec4:	add	x2, x2, #0x2e4
   1fec8:	b	1fea4 <__sanitizer_set_death_callback@@Base+0xe2c>
   1fecc:	mov	x3, x0
   1fed0:	cmp	x3, #0x100
   1fed4:	mov	x19, #0x100                 	// #256
   1fed8:	csel	x19, x3, x19, cs  // cs = hs, nlast
   1fedc:	mov	w2, #0x0                   	// #0
   1fee0:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1fee4:	add	x1, x1, #0x97d
   1fee8:	lsl	x0, x19, #4
   1feec:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1fef0:	adrp	x1, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1fef4:	mov	x22, x0
   1fef8:	add	x1, x1, #0x238
   1fefc:	ldxr	x28, [x1]
   1ff00:	add	x0, x28, #0x1
   1ff04:	stlxr	w2, x0, [x1]
   1ff08:	cbnz	w2, 1fefc <__sanitizer_set_death_callback@@Base+0xe84>
   1ff0c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ff10:	dmb	ish
   1ff14:	ldr	x0, [x0, #3680]
   1ff18:	ldr	w0, [x0]
   1ff1c:	sxtw	x0, w0
   1ff20:	cmp	x0, #0x1
   1ff24:	b.ls	1ff3c <__sanitizer_set_death_callback@@Base+0xec4>  // b.plast
   1ff28:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1ff2c:	mov	x2, x28
   1ff30:	add	x1, x20, x23
   1ff34:	add	x0, x0, #0x989
   1ff38:	bl	18b74 <OnPrint@@Base+0x30c>
   1ff3c:	mov	x0, #0xfffff               	// #1048575
   1ff40:	cmp	x28, x0
   1ff44:	b.ls	1ff68 <__sanitizer_set_death_callback@@Base+0xef0>  // b.plast
   1ff48:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1ff4c:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   1ff50:	mov	x3, x28
   1ff54:	add	x2, x2, #0x9ad
   1ff58:	add	x0, x0, #0x9cd
   1ff5c:	mov	x4, #0x100000              	// #1048576
   1ff60:	mov	w1, #0x3c                  	// #60
   1ff64:	b	1feac <__sanitizer_set_death_callback@@Base+0xe34>
   1ff68:	ldr	x28, [x20, x23]
   1ff6c:	add	x0, x20, x23
   1ff70:	ldr	x3, [x0, #8]
   1ff74:	cbz	x28, 1ff90 <__sanitizer_set_death_callback@@Base+0xf18>
   1ff78:	mov	x1, x3
   1ff7c:	lsl	x2, x28, #4
   1ff80:	mov	x0, x22
   1ff84:	str	x3, [sp, #104]
   1ff88:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   1ff8c:	ldr	x3, [sp, #104]
   1ff90:	add	x0, x20, x23
   1ff94:	str	x19, [x20, x23]
   1ff98:	str	x22, [x0, #8]
   1ff9c:	cbz	x28, 1ffac <__sanitizer_set_death_callback@@Base+0xf34>
   1ffa0:	mov	x1, x28
   1ffa4:	mov	x0, x3
   1ffa8:	bl	1fcf8 <__sanitizer_set_death_callback@@Base+0xc80>
   1ffac:	add	x0, x20, x23
   1ffb0:	lsl	x21, x21, #4
   1ffb4:	ldr	x0, [x0, #8]
   1ffb8:	ldr	x22, [x0, x21]
   1ffbc:	cbnz	x22, 1fe18 <__sanitizer_set_death_callback@@Base+0xda0>
   1ffc0:	adrp	x19, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   1ffc4:	ldr	x3, [x24, #8]
   1ffc8:	ldr	x0, [x19, #3680]
   1ffcc:	sub	x5, x25, x3
   1ffd0:	str	x5, [sp, #120]
   1ffd4:	ldr	w0, [x0]
   1ffd8:	sxtw	x0, w0
   1ffdc:	cmp	x0, #0x1
   1ffe0:	b.ls	20008 <__sanitizer_set_death_callback@@Base+0xf90>  // b.plast
   1ffe4:	adrp	x0, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   1ffe8:	add	x6, sp, #0x78
   1ffec:	ldr	x2, [x24]
   1fff0:	mov	x4, x25
   1fff4:	ldr	x7, [x0, #568]
   1fff8:	mov	x1, x24
   1fffc:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20000:	add	x0, x0, #0xa11
   20004:	bl	18b74 <OnPrint@@Base+0x30c>
   20008:	add	x2, x20, x23
   2000c:	ldr	x0, [sp, #120]
   20010:	ldr	x1, [x2, #24]
   20014:	cmp	x1, x0
   20018:	b.ne	20048 <__sanitizer_set_death_callback@@Base+0xfd0>  // b.any
   2001c:	ldr	x19, [x19, #3680]
   20020:	ldr	x22, [x2, #16]
   20024:	ldr	w0, [x19]
   20028:	sxtw	x0, w0
   2002c:	cmp	x0, #0x1
   20030:	b.ls	2007c <__sanitizer_set_death_callback@@Base+0x1004>  // b.plast
   20034:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20038:	mov	x2, x22
   2003c:	add	x0, x0, #0xa5a
   20040:	bl	18b74 <OnPrint@@Base+0x30c>
   20044:	b	2007c <__sanitizer_set_death_callback@@Base+0x1004>
   20048:	cmp	x0, x27
   2004c:	b.cc	20098 <__sanitizer_set_death_callback@@Base+0x1020>  // b.lo, b.ul, b.last
   20050:	cmp	x0, x26
   20054:	b.cs	20098 <__sanitizer_set_death_callback@@Base+0x1020>  // b.hs, b.nlast
   20058:	ldr	x19, [x19, #3680]
   2005c:	ldr	w1, [x19]
   20060:	sxtw	x1, w1
   20064:	cmp	x1, #0x1
   20068:	b.ls	2007c <__sanitizer_set_death_callback@@Base+0x1004>  // b.plast
   2006c:	mov	x1, x0
   20070:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20074:	add	x0, x0, #0xa8f
   20078:	bl	18b74 <OnPrint@@Base+0x30c>
   2007c:	add	x20, x20, x23
   20080:	ldr	x2, [sp, #120]
   20084:	ldr	x1, [x20, #8]
   20088:	add	x0, x1, x21
   2008c:	str	x2, [x1, x21]
   20090:	str	x22, [x0, #8]
   20094:	b	1fe1c <__sanitizer_set_death_callback@@Base+0xda4>
   20098:	and	x1, x0, #0xfff
   2009c:	cmp	x1, #0x10
   200a0:	b.ne	200d0 <__sanitizer_set_death_callback@@Base+0x1058>  // b.any
   200a4:	ldr	x19, [x19, #3680]
   200a8:	ldp	x22, x1, [x0, #-16]
   200ac:	str	x1, [sp, #120]
   200b0:	ldr	w0, [x19]
   200b4:	sxtw	x0, w0
   200b8:	cmp	x0, #0x1
   200bc:	b.ls	2007c <__sanitizer_set_death_callback@@Base+0x1004>  // b.plast
   200c0:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   200c4:	mov	x2, x22
   200c8:	add	x0, x0, #0xaaf
   200cc:	b	20040 <__sanitizer_set_death_callback@@Base+0xfc8>
   200d0:	ldr	x19, [x19, #3680]
   200d4:	ldr	w0, [x19]
   200d8:	sxtw	x0, w0
   200dc:	cmp	x0, #0x1
   200e0:	b.ls	2007c <__sanitizer_set_death_callback@@Base+0x1004>  // b.plast
   200e4:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   200e8:	add	x0, x0, #0xae4
   200ec:	bl	18b74 <OnPrint@@Base+0x30c>
   200f0:	b	2007c <__sanitizer_set_death_callback@@Base+0x1004>
   200f4:	stp	x19, x20, [sp, #-32]!
   200f8:	mov	x20, x0
   200fc:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20100:	ldr	x0, [x0, #4040]
   20104:	ldrb	w0, [x0, #121]
   20108:	str	x30, [sp, #16]
   2010c:	cbz	w0, 20154 <__sanitizer_set_death_callback@@Base+0x10dc>
   20110:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20114:	mov	x19, x1
   20118:	ldr	x0, [x0, #3680]
   2011c:	ldr	w0, [x0]
   20120:	sxtw	x0, w0
   20124:	cmp	x0, #0x1
   20128:	b.ls	20140 <__sanitizer_set_death_callback@@Base+0x10c8>  // b.plast
   2012c:	mov	x2, x1
   20130:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20134:	mov	x1, x20
   20138:	add	x0, x0, #0xb0f
   2013c:	bl	18b74 <OnPrint@@Base+0x30c>
   20140:	adrp	x3, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20144:	ldr	x3, [x3, #3408]
   20148:	mrs	x4, tpidr_el0
   2014c:	add	x3, x4, x3
   20150:	stp	x19, x20, [x3, #16]
   20154:	ldr	x30, [sp, #16]
   20158:	ldp	x19, x20, [sp], #32
   2015c:	ret
   20160:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   20164:	ldr	x0, [x0, #3408]
   20168:	mrs	x1, tpidr_el0
   2016c:	add	x0, x1, x0
   20170:	ret
   20174:	ldr	x0, [x0]
   20178:	cmn	x0, #0x1
   2017c:	cset	w0, eq  // eq = none
   20180:	ret
   20184:	stp	x19, x20, [sp, #-32]!
   20188:	mov	x19, x1
   2018c:	ldr	w4, [x1, #8]
   20190:	ldr	x1, [x1]
   20194:	ldr	w3, [x1, #8]
   20198:	str	x30, [sp, #16]
   2019c:	cmp	x3, x4
   201a0:	b.cc	201bc <__sanitizer_set_death_callback@@Base+0x1144>  // b.lo, b.ul, b.last
   201a4:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   201a8:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   201ac:	add	x2, x2, #0xb2d
   201b0:	add	x0, x0, #0xb57
   201b4:	mov	w1, #0x6d                  	// #109
   201b8:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   201bc:	bl	6ac0 <_Unwind_GetIP@plt>
   201c0:	mov	x20, x0
   201c4:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   201c8:	cmp	x0, x20
   201cc:	b.hi	201f4 <__sanitizer_set_death_callback@@Base+0x117c>  // b.pmore
   201d0:	ldr	x0, [x19]
   201d4:	ldr	w1, [x0, #8]
   201d8:	add	w2, w1, #0x1
   201dc:	str	w2, [x0, #8]
   201e0:	add	x1, x0, w1, uxtw #3
   201e4:	ldr	w0, [x19, #8]
   201e8:	cmp	w2, w0
   201ec:	str	x20, [x1, #16]
   201f0:	b.ne	20204 <__sanitizer_set_death_callback@@Base+0x118c>  // b.any
   201f4:	mov	w0, #0x4                   	// #4
   201f8:	ldr	x30, [sp, #16]
   201fc:	ldp	x19, x20, [sp], #32
   20200:	ret
   20204:	mov	w0, #0x0                   	// #0
   20208:	b	201f8 <__sanitizer_set_death_callback@@Base+0x1180>
   2020c:	b	6ac0 <_Unwind_GetIP@plt>
   20210:	stp	x19, x20, [sp, #-48]!
   20214:	cmp	w2, #0x1
   20218:	str	x30, [sp, #16]
   2021c:	b.hi	20240 <__sanitizer_set_death_callback@@Base+0x11c8>  // b.pmore
   20220:	mov	w3, w2
   20224:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20228:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   2022c:	add	x0, x0, #0xb57
   20230:	add	x2, x2, #0x5d0
   20234:	mov	x4, #0x2                   	// #2
   20238:	mov	w1, #0x7a                  	// #122
   2023c:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   20240:	mov	x19, x0
   20244:	add	w2, w2, #0x1
   20248:	cmp	w2, #0x100
   2024c:	mov	w0, #0x100                 	// #256
   20250:	csel	w2, w2, w0, ls  // ls = plast
   20254:	mov	x20, x1
   20258:	str	wzr, [x19, #8]
   2025c:	add	x1, sp, #0x20
   20260:	adrp	x0, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   20264:	add	x0, x0, #0x184
   20268:	str	x19, [sp, #32]
   2026c:	str	w2, [sp, #40]
   20270:	bl	66b0 <_Unwind_Backtrace@plt>
   20274:	mov	x1, x20
   20278:	mov	x0, x19
   2027c:	bl	1a2fc <OnPrint@@Base+0x1a94>
   20280:	mov	x1, x0
   20284:	cbnz	x0, 20294 <__sanitizer_set_death_callback@@Base+0x121c>
   20288:	ldr	w0, [x19, #8]
   2028c:	cmp	w0, #0x1
   20290:	cset	x1, hi  // hi = pmore
   20294:	mov	x0, x19
   20298:	bl	1a298 <OnPrint@@Base+0x1a30>
   2029c:	ldr	x30, [sp, #16]
   202a0:	str	x20, [x19, #16]
   202a4:	ldp	x19, x20, [sp], #48
   202a8:	ret
   202ac:	stp	x19, x20, [sp, #-96]!
   202b0:	stp	x21, x22, [sp, #16]
   202b4:	stp	x23, x24, [sp, #32]
   202b8:	mov	w24, w3
   202bc:	cmp	w24, #0x1
   202c0:	stp	x25, x30, [sp, #48]
   202c4:	b.hi	202e8 <__sanitizer_set_death_callback@@Base+0x1270>  // b.pmore
   202c8:	adrp	x2, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   202cc:	mov	x3, x24
   202d0:	add	x2, x2, #0x5d0
   202d4:	mov	x4, #0x2                   	// #2
   202d8:	mov	w1, #0x94                  	// #148
   202dc:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   202e0:	add	x0, x0, #0xb57
   202e4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   202e8:	adrp	x3, 9a8000 <__asan_cplus_demangle_operators@@Base+0x957be0>
   202ec:	add	x4, x3, #0x240
   202f0:	mov	x20, x3
   202f4:	ldr	x5, [x3, #576]
   202f8:	cbnz	x5, 20318 <__sanitizer_set_death_callback@@Base+0x12a0>
   202fc:	mov	x2, x24
   20300:	bl	20210 <__sanitizer_set_death_callback@@Base+0x1198>
   20304:	ldp	x21, x22, [sp, #16]
   20308:	ldp	x23, x24, [sp, #32]
   2030c:	ldp	x25, x30, [sp, #48]
   20310:	ldp	x19, x20, [sp], #96
   20314:	ret
   20318:	mov	x19, x0
   2031c:	mov	x22, x2
   20320:	ldr	x0, [x4, #8]
   20324:	blr	x0
   20328:	mov	x21, x0
   2032c:	cbnz	x0, 20348 <__sanitizer_set_death_callback@@Base+0x12d0>
   20330:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20334:	mov	x4, #0x0                   	// #0
   20338:	add	x2, x2, #0xba3
   2033c:	mov	x3, #0x0                   	// #0
   20340:	mov	w1, #0x9b                  	// #155
   20344:	b	202dc <__sanitizer_set_death_callback@@Base+0x1264>
   20348:	add	x23, sp, #0x48
   2034c:	mov	x1, #0x100                 	// #256
   20350:	mov	x0, x23
   20354:	stp	xzr, xzr, [sp, #72]
   20358:	str	xzr, [sp, #88]
   2035c:	bl	20488 <__sanitizer_set_death_callback@@Base+0x1410>
   20360:	ldr	x0, [sp, #88]
   20364:	cmp	x0, #0xff
   20368:	b.hi	203ac <__sanitizer_set_death_callback@@Base+0x1334>  // b.pmore
   2036c:	ldr	x1, [sp, #80]
   20370:	mov	x0, #0x17ff                	// #6143
   20374:	cmp	x1, x0
   20378:	b.hi	20388 <__sanitizer_set_death_callback@@Base+0x1310>  // b.pmore
   2037c:	mov	x0, x23
   20380:	mov	x1, #0x100                 	// #256
   20384:	bl	20488 <__sanitizer_set_death_callback@@Base+0x1410>
   20388:	ldr	x0, [sp, #88]
   2038c:	mov	x1, #0x100                 	// #256
   20390:	ldr	x4, [sp, #72]
   20394:	sub	x1, x1, x0
   20398:	mov	x3, #0x18                  	// #24
   2039c:	mul	x2, x1, x3
   203a0:	mov	w1, #0x0                   	// #0
   203a4:	madd	x0, x0, x3, x4
   203a8:	bl	14380 <__sanitizer_set_report_fd@@Base+0x18cc>
   203ac:	ldr	x6, [x20, #576]
   203b0:	add	x25, x20, #0x240
   203b4:	ldr	x3, [sp, #72]
   203b8:	mov	x23, #0x100                 	// #256
   203bc:	str	x23, [sp, #88]
   203c0:	mov	x1, x22
   203c4:	mov	x5, x24
   203c8:	mov	x2, x21
   203cc:	mov	x4, #0x0                   	// #0
   203d0:	mov	x0, #0x0                   	// #0
   203d4:	blr	x6
   203d8:	mov	x20, x0
   203dc:	ldr	x1, [x25, #16]
   203e0:	mov	x0, x21
   203e4:	blr	x1
   203e8:	tbz	x20, #63, 203f8 <__sanitizer_set_death_callback@@Base+0x1380>
   203ec:	ldp	x0, x1, [sp, #72]
   203f0:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   203f4:	b	20304 <__sanitizer_set_death_callback@@Base+0x128c>
   203f8:	cmp	x20, #0x100
   203fc:	b.le	20418 <__sanitizer_set_death_callback@@Base+0x13a0>
   20400:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20404:	mov	x4, x23
   20408:	mov	x3, x20
   2040c:	add	x2, x2, #0xbb2
   20410:	mov	w1, #0xa3                  	// #163
   20414:	b	202dc <__sanitizer_set_death_callback@@Base+0x1264>
   20418:	ldr	x0, [sp, #72]
   2041c:	mov	x1, #0x0                   	// #0
   20420:	ldr	x4, [sp, #88]
   20424:	mov	x6, #0x18                  	// #24
   20428:	str	wzr, [x19, #8]
   2042c:	cmp	x1, x20
   20430:	b.eq	20480 <__sanitizer_set_death_callback@@Base+0x1408>  // b.none
   20434:	cmp	x4, x1
   20438:	b.ne	20458 <__sanitizer_set_death_callback@@Base+0x13e0>  // b.any
   2043c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   20440:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   20444:	mov	x3, x4
   20448:	add	x2, x2, #0x317
   2044c:	add	x0, x0, #0x5c5
   20450:	mov	w1, #0x1b6                 	// #438
   20454:	b	202e4 <__sanitizer_set_death_callback@@Base+0x126c>
   20458:	mul	x2, x1, x6
   2045c:	add	x1, x1, #0x1
   20460:	ldr	x3, [x0, x2]
   20464:	ldr	w2, [x19, #8]
   20468:	add	x3, x3, #0x2
   2046c:	add	w5, w2, #0x1
   20470:	str	w5, [x19, #8]
   20474:	add	x2, x19, w2, uxtw #3
   20478:	str	x3, [x2, #16]
   2047c:	b	2042c <__sanitizer_set_death_callback@@Base+0x13b4>
   20480:	ldr	x1, [sp, #80]
   20484:	b	203f0 <__sanitizer_set_death_callback@@Base+0x1378>
   20488:	stp	x19, x20, [sp, #-48]!
   2048c:	mov	x4, x1
   20490:	stp	x21, x22, [sp, #16]
   20494:	str	x30, [sp, #32]
   20498:	cbnz	x1, 204b8 <__sanitizer_set_death_callback@@Base+0x1440>
   2049c:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   204a0:	add	x2, x2, #0x329
   204a4:	mov	x3, #0x0                   	// #0
   204a8:	mov	w1, #0x1fc                 	// #508
   204ac:	adrp	x0, 2c000 <__asan_backtrace_get_view@@Base+0xc>
   204b0:	add	x0, x0, #0x5c5
   204b4:	bl	1eff4 <__sanitizer_symbolize_global@@Base+0x48b0>
   204b8:	ldr	x3, [x0, #16]
   204bc:	mov	x21, x0
   204c0:	cmp	x1, x3
   204c4:	b.cs	204d8 <__sanitizer_set_death_callback@@Base+0x1460>  // b.hs, b.nlast
   204c8:	adrp	x2, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   204cc:	mov	w1, #0x1fd                 	// #509
   204d0:	add	x2, x2, #0x342
   204d4:	b	204ac <__sanitizer_set_death_callback@@Base+0x1434>
   204d8:	mov	x22, #0x18                  	// #24
   204dc:	mul	x19, x1, x22
   204e0:	bl	917c <__lsan_do_recoverable_leak_check@@Base+0x820>
   204e4:	sub	x1, x0, #0x1
   204e8:	tst	x1, x0
   204ec:	b.eq	20500 <__sanitizer_set_death_callback@@Base+0x1488>  // b.none
   204f0:	adrp	x0, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   204f4:	add	x0, x0, #0x300
   204f8:	bl	126ac <__sanitizer_cov_trace_pc_guard_init@@Base+0x17e8>
   204fc:	bl	1ef8c <__sanitizer_symbolize_global@@Base+0x4848>
   20500:	sub	x19, x19, #0x1
   20504:	mov	w2, #0x0                   	// #0
   20508:	add	x19, x19, x0
   2050c:	neg	x0, x0
   20510:	and	x19, x19, x0
   20514:	adrp	x1, 2d000 <__asan_backtrace_vector_release@@Base+0xb60>
   20518:	mov	x0, x19
   2051c:	add	x1, x1, #0x360
   20520:	bl	16a58 <__sanitizer_set_report_fd@@Base+0x3fa4>
   20524:	mov	x20, x0
   20528:	ldr	x2, [x21, #16]
   2052c:	ldr	x1, [x21]
   20530:	mul	x2, x2, x22
   20534:	bl	14314 <__sanitizer_set_report_fd@@Base+0x1860>
   20538:	ldp	x0, x1, [x21]
   2053c:	bl	16aec <__sanitizer_set_report_fd@@Base+0x4038>
   20540:	ldr	x30, [sp, #32]
   20544:	stp	x20, x19, [x21]
   20548:	ldp	x21, x22, [sp, #16]
   2054c:	ldp	x19, x20, [sp], #48
   20550:	ret
   20554:	stp	x19, x20, [sp, #-48]!
   20558:	mov	x19, x1
   2055c:	mov	x20, x0
   20560:	mov	x1, x0
   20564:	mov	x0, #0xffffffffffffffff    	// #-1
   20568:	stp	x21, x22, [sp, #16]
   2056c:	mov	x22, x2
   20570:	mov	x21, x3
   20574:	str	x30, [sp, #32]
   20578:	bl	68a0 <dlsym@plt>
   2057c:	str	x0, [x19]
   20580:	cbnz	x0, 20590 <__sanitizer_set_death_callback@@Base+0x1518>
   20584:	mov	x1, x20
   20588:	bl	68a0 <dlsym@plt>
   2058c:	str	x0, [x19]
   20590:	cmp	x22, x21
   20594:	cset	w0, eq  // eq = none
   20598:	ldp	x21, x22, [sp, #16]
   2059c:	ldr	x30, [sp, #32]
   205a0:	ldp	x19, x20, [sp], #48
   205a4:	ret
   205a8:	mov	x2, x1
   205ac:	mov	x1, x0
   205b0:	mov	x0, #0xffffffffffffffff    	// #-1
   205b4:	b	6800 <dlvsym@plt>
   205b8:	sub	w1, w1, #0x1
   205bc:	cmp	w1, #0x7
   205c0:	b.hi	20604 <__sanitizer_set_death_callback@@Base+0x158c>  // b.pmore
   205c4:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   205c8:	add	x2, x2, #0xbd8
   205cc:	ldrb	w1, [x2, w1, uxtw]
   205d0:	adr	x2, 205dc <__sanitizer_set_death_callback@@Base+0x1564>
   205d4:	add	x1, x2, w1, sxtb #2
   205d8:	br	x1
   205dc:	cmp	x0, #0xff
   205e0:	cset	w0, eq  // eq = none
   205e4:	ret
   205e8:	mov	x1, #0xffff                	// #65535
   205ec:	cmp	x0, x1
   205f0:	b	205e0 <__sanitizer_set_death_callback@@Base+0x1568>
   205f4:	mov	x1, #0xffffffff            	// #4294967295
   205f8:	b	205ec <__sanitizer_set_death_callback@@Base+0x1574>
   205fc:	cmn	x0, #0x1
   20600:	b	205e0 <__sanitizer_set_death_callback@@Base+0x1568>
   20604:	mov	w0, #0x0                   	// #0
   20608:	b	205e4 <__sanitizer_set_death_callback@@Base+0x156c>
   2060c:	ldr	x1, [x1]
   20610:	ldr	x0, [x0]
   20614:	ldr	x2, [x1, #24]
   20618:	cmp	x2, x0
   2061c:	b.hi	20630 <__sanitizer_set_death_callback@@Base+0x15b8>  // b.pmore
   20620:	ldr	x1, [x1, #32]
   20624:	cmp	x1, x0
   20628:	cset	w0, ls  // ls = plast
   2062c:	ret
   20630:	mov	w0, #0xffffffff            	// #-1
   20634:	b	2062c <__sanitizer_set_death_callback@@Base+0x15b4>
   20638:	ldr	x0, [x0]
   2063c:	ldr	x2, [x1]
   20640:	cmp	x2, x0
   20644:	b.hi	20658 <__sanitizer_set_death_callback@@Base+0x15e0>  // b.pmore
   20648:	ldr	x1, [x1, #8]
   2064c:	cmp	x1, x0
   20650:	cset	w0, ls  // ls = plast
   20654:	ret
   20658:	mov	w0, #0xffffffff            	// #-1
   2065c:	b	20654 <__sanitizer_set_death_callback@@Base+0x15dc>
   20660:	ldr	x0, [x0]
   20664:	ldr	x2, [x1]
   20668:	cmp	x2, x0
   2066c:	b.hi	20680 <__sanitizer_set_death_callback@@Base+0x1608>  // b.pmore
   20670:	ldr	x1, [x1, #8]
   20674:	cmp	x1, x0
   20678:	cset	w0, ls  // ls = plast
   2067c:	ret
   20680:	mov	w0, #0xffffffff            	// #-1
   20684:	b	2067c <__sanitizer_set_death_callback@@Base+0x1604>
   20688:	ldr	x0, [x0]
   2068c:	ldr	x2, [x1]
   20690:	cmp	x2, x0
   20694:	b.hi	206a8 <__sanitizer_set_death_callback@@Base+0x1630>  // b.pmore
   20698:	ldr	x1, [x1, #24]
   2069c:	cmp	x1, x0
   206a0:	cset	w0, ls  // ls = plast
   206a4:	ret
   206a8:	mov	w0, #0xffffffff            	// #-1
   206ac:	b	206a4 <__sanitizer_set_death_callback@@Base+0x162c>
   206b0:	ldr	x2, [x0]
   206b4:	ldr	x1, [x1]
   206b8:	cmp	x2, x1
   206bc:	cset	w0, hi  // hi = pmore
   206c0:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
   206c4:	ret
   206c8:	stp	x29, x30, [sp, #-80]!
   206cc:	mov	x29, sp
   206d0:	stp	x21, x22, [sp, #32]
   206d4:	mov	x21, x2
   206d8:	ldr	x2, [x1, #32]
   206dc:	stp	x19, x20, [sp, #16]
   206e0:	str	x23, [sp, #48]
   206e4:	str	x0, [sp, #72]
   206e8:	cbnz	x2, 20704 <__sanitizer_set_death_callback@@Base+0x168c>
   206ec:	mov	w0, #0x0                   	// #0
   206f0:	ldp	x19, x20, [sp, #16]
   206f4:	ldp	x21, x22, [sp, #32]
   206f8:	ldr	x23, [sp, #48]
   206fc:	ldp	x29, x30, [sp], #80
   20700:	ret
   20704:	mov	x22, x1
   20708:	mov	x23, x3
   2070c:	ldr	x1, [x1, #24]
   20710:	mov	x20, x4
   20714:	mov	x19, x5
   20718:	add	x0, sp, #0x48
   2071c:	adrp	x4, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   20720:	mov	x3, #0x18                  	// #24
   20724:	add	x4, x4, #0x638
   20728:	bl	6c60 <bsearch@plt>
   2072c:	mov	x6, x0
   20730:	cbz	x0, 206ec <__sanitizer_set_death_callback@@Base+0x1674>
   20734:	ldp	x2, x3, [x22, #24]
   20738:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2073c:	ldr	x0, [sp, #72]
   20740:	movk	x4, #0xaaab
   20744:	sub	x1, x6, x2
   20748:	asr	x1, x1, #3
   2074c:	mul	x1, x1, x4
   20750:	add	x1, x1, #0x1
   20754:	cmp	x1, x3
   20758:	b.cs	20774 <__sanitizer_set_death_callback@@Base+0x16fc>  // b.hs, b.nlast
   2075c:	ldr	x1, [x6, #24]
   20760:	cmp	x1, x0
   20764:	b.hi	20774 <__sanitizer_set_death_callback@@Base+0x16fc>  // b.pmore
   20768:	ldr	x1, [x6, #32]
   2076c:	cmp	x0, x1
   20770:	b.cc	207c4 <__sanitizer_set_death_callback@@Base+0x174c>  // b.lo, b.ul, b.last
   20774:	ldr	x22, [x6, #16]
   20778:	mov	x5, x19
   2077c:	mov	x4, x20
   20780:	mov	x3, x23
   20784:	mov	x2, x21
   20788:	mov	x1, x22
   2078c:	bl	206c8 <__sanitizer_set_death_callback@@Base+0x1650>
   20790:	cbnz	w0, 206f0 <__sanitizer_set_death_callback@@Base+0x1678>
   20794:	ldr	w3, [x19]
   20798:	mov	x0, x23
   2079c:	ldr	x2, [x20]
   207a0:	ldr	x4, [x22]
   207a4:	ldr	x1, [sp, #72]
   207a8:	blr	x21
   207ac:	cbnz	w0, 206f0 <__sanitizer_set_death_callback@@Base+0x1678>
   207b0:	ldr	x1, [x22, #8]
   207b4:	str	x1, [x20]
   207b8:	ldr	w1, [x22, #16]
   207bc:	str	w1, [x19]
   207c0:	b	206f0 <__sanitizer_set_death_callback@@Base+0x1678>
   207c4:	add	x6, x6, #0x18
   207c8:	b	20744 <__sanitizer_set_death_callback@@Base+0x16cc>
   207cc:	stp	x29, x30, [sp, #-48]!
   207d0:	mov	x29, sp
   207d4:	stp	x19, x20, [sp, #16]
   207d8:	mov	x19, x2
   207dc:	mov	x2, x3
   207e0:	stp	x21, x22, [sp, #32]
   207e4:	mov	x3, x4
   207e8:	mov	x21, x5
   207ec:	ldp	x22, x20, [x19]
   207f0:	add	x22, x1, x22
   207f4:	add	x20, x1, x20
   207f8:	ldr	x1, [x5, #24]
   207fc:	cbz	x1, 2085c <__sanitizer_set_death_callback@@Base+0x17e4>
   20800:	mov	x4, #0x18                  	// #24
   20804:	ldr	x5, [x5]
   20808:	mul	x1, x1, x4
   2080c:	sub	x1, x1, #0x18
   20810:	add	x1, x5, x1
   20814:	ldr	x4, [x1, #8]
   20818:	cmp	x22, x4
   2081c:	b.eq	2082c <__sanitizer_set_death_callback@@Base+0x17b4>  // b.none
   20820:	add	x5, x4, #0x1
   20824:	cmp	x22, x5
   20828:	b.ne	2085c <__sanitizer_set_death_callback@@Base+0x17e4>  // b.any
   2082c:	ldr	x5, [x1, #16]
   20830:	ldr	x6, [x19, #16]
   20834:	cmp	x6, x5
   20838:	b.ne	2085c <__sanitizer_set_death_callback@@Base+0x17e4>  // b.any
   2083c:	cmp	x20, x4
   20840:	b.ls	20848 <__sanitizer_set_death_callback@@Base+0x17d0>  // b.plast
   20844:	str	x20, [x1, #8]
   20848:	mov	w0, #0x1                   	// #1
   2084c:	ldp	x19, x20, [sp, #16]
   20850:	ldp	x21, x22, [sp, #32]
   20854:	ldp	x29, x30, [sp], #48
   20858:	ret
   2085c:	mov	x4, x21
   20860:	mov	x1, #0x18                  	// #24
   20864:	bl	68b0 <__asan_backtrace_vector_grow@plt>
   20868:	cbz	x0, 20890 <__sanitizer_set_death_callback@@Base+0x1818>
   2086c:	stp	x22, x20, [x19]
   20870:	ldp	x2, x3, [x19]
   20874:	stp	x2, x3, [x0]
   20878:	ldr	x1, [x19, #16]
   2087c:	str	x1, [x0, #16]
   20880:	ldr	x0, [x21, #24]
   20884:	add	x0, x0, #0x1
   20888:	str	x0, [x21, #24]
   2088c:	b	20848 <__sanitizer_set_death_callback@@Base+0x17d0>
   20890:	mov	w0, #0x0                   	// #0
   20894:	b	2084c <__sanitizer_set_death_callback@@Base+0x17d4>
   20898:	stp	x29, x30, [sp, #-240]!
   2089c:	mov	x3, x1
   208a0:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   208a4:	mov	x29, sp
   208a8:	stp	x19, x20, [sp, #16]
   208ac:	mov	x19, x0
   208b0:	add	x20, sp, #0x28
   208b4:	ldp	x4, x0, [x0]
   208b8:	add	x2, x2, #0xc54
   208bc:	ldr	x5, [x19, #16]
   208c0:	mov	x1, #0xc8                  	// #200
   208c4:	sub	w5, w5, w0
   208c8:	mov	x0, x20
   208cc:	bl	6a90 <snprintf@plt>
   208d0:	ldp	x3, x0, [x19, #40]
   208d4:	mov	x1, x20
   208d8:	mov	w2, #0x0                   	// #0
   208dc:	blr	x3
   208e0:	ldp	x19, x20, [sp, #16]
   208e4:	ldp	x29, x30, [sp], #240
   208e8:	ret
   208ec:	stp	x29, x30, [sp, #-48]!
   208f0:	mov	x29, sp
   208f4:	stp	x19, x20, [sp, #16]
   208f8:	mov	x20, x2
   208fc:	mov	x19, x1
   20900:	ldr	x2, [x1, #32]
   20904:	stp	x21, x22, [sp, #32]
   20908:	mov	x22, x0
   2090c:	mov	x21, x3
   20910:	cbz	x2, 20928 <__sanitizer_set_death_callback@@Base+0x18b0>
   20914:	ldr	x1, [x1, #40]
   20918:	mov	x4, x3
   2091c:	lsl	x2, x2, #3
   20920:	mov	x3, x20
   20924:	bl	6c20 <__asan_backtrace_free@plt>
   20928:	mov	x4, x21
   2092c:	mov	x3, x20
   20930:	mov	x0, x22
   20934:	ldp	x21, x22, [sp, #32]
   20938:	ldp	x2, x1, [x19, #48]
   2093c:	ldp	x19, x20, [sp, #16]
   20940:	ldp	x29, x30, [sp], #48
   20944:	lsl	x2, x2, #3
   20948:	b	6c20 <__asan_backtrace_free@plt>
   2094c:	stp	x29, x30, [sp, #-64]!
   20950:	mov	x29, sp
   20954:	stp	x19, x20, [sp, #16]
   20958:	mov	x20, x0
   2095c:	mov	x19, x1
   20960:	stp	x21, x22, [sp, #32]
   20964:	mov	x21, x2
   20968:	mov	x22, x3
   2096c:	str	x23, [sp, #48]
   20970:	mov	x23, #0x0                   	// #0
   20974:	ldp	x2, x1, [x19]
   20978:	cmp	x2, x23
   2097c:	b.hi	209ac <__sanitizer_set_death_callback@@Base+0x1934>  // b.pmore
   20980:	mov	x4, x22
   20984:	mov	x3, x21
   20988:	mov	x0, x20
   2098c:	lsl	x2, x2, #5
   20990:	bl	6c20 <__asan_backtrace_free@plt>
   20994:	ldp	x21, x22, [sp, #32]
   20998:	ldr	x23, [sp, #48]
   2099c:	stp	xzr, xzr, [x19]
   209a0:	ldp	x19, x20, [sp, #16]
   209a4:	ldp	x29, x30, [sp], #64
   209a8:	ret
   209ac:	add	x1, x1, x23, lsl #5
   209b0:	mov	x4, x22
   209b4:	mov	x3, x21
   209b8:	mov	x0, x20
   209bc:	add	x23, x23, #0x1
   209c0:	ldp	x2, x1, [x1, #16]
   209c4:	lsl	x2, x2, #3
   209c8:	bl	6c20 <__asan_backtrace_free@plt>
   209cc:	b	20974 <__sanitizer_set_death_callback@@Base+0x18fc>
   209d0:	ldr	x3, [x0]
   209d4:	ldr	x2, [x1]
   209d8:	cmp	x3, x2
   209dc:	b.cc	20a20 <__sanitizer_set_death_callback@@Base+0x19a8>  // b.lo, b.ul, b.last
   209e0:	b.hi	20a18 <__sanitizer_set_death_callback@@Base+0x19a0>  // b.pmore
   209e4:	ldr	x3, [x0, #8]
   209e8:	ldr	x2, [x1, #8]
   209ec:	cmp	x3, x2
   209f0:	b.cc	20a18 <__sanitizer_set_death_callback@@Base+0x19a0>  // b.lo, b.ul, b.last
   209f4:	b.hi	20a20 <__sanitizer_set_death_callback@@Base+0x19a8>  // b.pmore
   209f8:	ldr	x0, [x0, #16]
   209fc:	ldr	x2, [x0, #56]
   20a00:	ldr	x0, [x1, #16]
   20a04:	ldr	x1, [x0, #56]
   20a08:	cmp	x2, x1
   20a0c:	cset	w0, gt
   20a10:	csinv	w0, w0, wzr, ge  // ge = tcont
   20a14:	ret
   20a18:	mov	w0, #0x1                   	// #1
   20a1c:	b	20a14 <__sanitizer_set_death_callback@@Base+0x199c>
   20a20:	mov	w0, #0xffffffff            	// #-1
   20a24:	b	20a14 <__sanitizer_set_death_callback@@Base+0x199c>
   20a28:	ldr	x3, [x0]
   20a2c:	ldr	x2, [x1]
   20a30:	cmp	x3, x2
   20a34:	b.cc	20a54 <__sanitizer_set_death_callback@@Base+0x19dc>  // b.lo, b.ul, b.last
   20a38:	b.hi	20a5c <__sanitizer_set_death_callback@@Base+0x19e4>  // b.pmore
   20a3c:	ldr	w2, [x0, #20]
   20a40:	ldr	w1, [x1, #20]
   20a44:	cmp	w2, w1
   20a48:	cset	w0, gt
   20a4c:	csinv	w0, w0, wzr, ge  // ge = tcont
   20a50:	ret
   20a54:	mov	w0, #0xffffffff            	// #-1
   20a58:	b	20a50 <__sanitizer_set_death_callback@@Base+0x19d8>
   20a5c:	mov	w0, #0x1                   	// #1
   20a60:	b	20a50 <__sanitizer_set_death_callback@@Base+0x19d8>
   20a64:	stp	x29, x30, [sp, #-96]!
   20a68:	mov	x29, sp
   20a6c:	stp	x19, x20, [sp, #16]
   20a70:	mov	x19, x0
   20a74:	mov	x20, x1
   20a78:	ldr	x0, [x0]
   20a7c:	stp	x21, x22, [sp, #32]
   20a80:	sub	x1, x1, #0x1
   20a84:	str	x23, [sp, #48]
   20a88:	mov	x22, x2
   20a8c:	cmp	x1, x0
   20a90:	mov	x23, x3
   20a94:	b.cs	20ab4 <__sanitizer_set_death_callback@@Base+0x1a3c>  // b.hs, b.nlast
   20a98:	lsl	x0, x20, #5
   20a9c:	ldr	x1, [x19, #8]
   20aa0:	sub	x0, x0, #0x20
   20aa4:	add	x21, x1, x0
   20aa8:	ldr	x0, [x1, x0]
   20aac:	cmp	x0, x20
   20ab0:	b.eq	20b00 <__sanitizer_set_death_callback@@Base+0x1a88>  // b.none
   20ab4:	add	x21, sp, #0x40
   20ab8:	mov	x2, #0x20                  	// #32
   20abc:	mov	x0, x21
   20ac0:	mov	w1, #0x0                   	// #0
   20ac4:	bl	68d0 <__asan_internal_memset@plt>
   20ac8:	str	x20, [sp, #64]
   20acc:	ldp	x2, x1, [x19]
   20ad0:	mov	x0, x21
   20ad4:	adrp	x4, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   20ad8:	mov	x3, #0x20                  	// #32
   20adc:	add	x4, x4, #0x6b0
   20ae0:	bl	6c60 <bsearch@plt>
   20ae4:	mov	x21, x0
   20ae8:	cbnz	x0, 20b00 <__sanitizer_set_death_callback@@Base+0x1a88>
   20aec:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20af0:	mov	x0, x23
   20af4:	add	x1, x1, #0xc63
   20af8:	mov	w2, #0x0                   	// #0
   20afc:	blr	x22
   20b00:	mov	x0, x21
   20b04:	ldp	x19, x20, [sp, #16]
   20b08:	ldp	x21, x22, [sp, #32]
   20b0c:	ldr	x23, [sp, #48]
   20b10:	ldp	x29, x30, [sp], #96
   20b14:	ret
   20b18:	stp	x29, x30, [sp, #-64]!
   20b1c:	mov	x29, sp
   20b20:	stp	x19, x20, [sp, #16]
   20b24:	mov	x19, x7
   20b28:	mov	w20, w4
   20b2c:	ldr	x7, [x7, #24]
   20b30:	stp	x21, x22, [sp, #32]
   20b34:	mov	x22, x2
   20b38:	str	x23, [sp, #48]
   20b3c:	mov	x21, x3
   20b40:	mov	x2, x5
   20b44:	mov	x3, x6
   20b48:	mov	x23, x1
   20b4c:	cbz	x7, 20b88 <__sanitizer_set_death_callback@@Base+0x1b10>
   20b50:	mov	x1, #0x18                  	// #24
   20b54:	ldr	x4, [x19]
   20b58:	mul	x7, x7, x1
   20b5c:	sub	x7, x7, #0x18
   20b60:	add	x1, x4, x7
   20b64:	ldr	x4, [x4, x7]
   20b68:	cmp	x4, x22
   20b6c:	b.ne	20b88 <__sanitizer_set_death_callback@@Base+0x1b10>  // b.any
   20b70:	ldr	x4, [x1, #8]
   20b74:	cmp	x4, x21
   20b78:	b.ne	20b88 <__sanitizer_set_death_callback@@Base+0x1b10>  // b.any
   20b7c:	ldr	w1, [x1, #16]
   20b80:	cmp	w1, w20
   20b84:	b.eq	20bb4 <__sanitizer_set_death_callback@@Base+0x1b3c>  // b.none
   20b88:	mov	x4, x19
   20b8c:	mov	x1, #0x18                  	// #24
   20b90:	bl	68b0 <__asan_backtrace_vector_grow@plt>
   20b94:	cbz	x0, 20bcc <__sanitizer_set_death_callback@@Base+0x1b54>
   20b98:	ldr	x2, [x23]
   20b9c:	ldr	x1, [x19, #24]
   20ba0:	add	x22, x2, x22
   20ba4:	stp	x22, x21, [x0]
   20ba8:	stp	w20, w1, [x0, #16]
   20bac:	add	x1, x1, #0x1
   20bb0:	str	x1, [x19, #24]
   20bb4:	mov	w0, #0x1                   	// #1
   20bb8:	ldp	x19, x20, [sp, #16]
   20bbc:	ldp	x21, x22, [sp, #32]
   20bc0:	ldr	x23, [sp, #48]
   20bc4:	ldp	x29, x30, [sp], #64
   20bc8:	ret
   20bcc:	mov	w0, #0x0                   	// #0
   20bd0:	b	20bb8 <__sanitizer_set_death_callback@@Base+0x1b40>
   20bd4:	stp	x29, x30, [sp, #-48]!
   20bd8:	mov	x29, sp
   20bdc:	stp	x21, x22, [sp, #32]
   20be0:	mov	x21, x3
   20be4:	add	x21, x21, x1
   20be8:	stp	x19, x20, [sp, #16]
   20bec:	add	x20, x4, x1
   20bf0:	mov	x22, x2
   20bf4:	ldr	x1, [x7, #24]
   20bf8:	mov	x2, x5
   20bfc:	mov	x3, x6
   20c00:	mov	x19, x7
   20c04:	cbz	x1, 20c60 <__sanitizer_set_death_callback@@Base+0x1be8>
   20c08:	mov	x4, #0x18                  	// #24
   20c0c:	mul	x1, x1, x4
   20c10:	ldr	x4, [x7]
   20c14:	sub	x1, x1, #0x18
   20c18:	add	x1, x4, x1
   20c1c:	ldr	x4, [x1, #8]
   20c20:	cmp	x21, x4
   20c24:	b.eq	20c34 <__sanitizer_set_death_callback@@Base+0x1bbc>  // b.none
   20c28:	add	x5, x4, #0x1
   20c2c:	cmp	x21, x5
   20c30:	b.ne	20c60 <__sanitizer_set_death_callback@@Base+0x1be8>  // b.any
   20c34:	ldr	x5, [x1, #16]
   20c38:	cmp	x5, x22
   20c3c:	b.ne	20c60 <__sanitizer_set_death_callback@@Base+0x1be8>  // b.any
   20c40:	cmp	x20, x4
   20c44:	b.ls	20c4c <__sanitizer_set_death_callback@@Base+0x1bd4>  // b.plast
   20c48:	str	x20, [x1, #8]
   20c4c:	mov	w0, #0x1                   	// #1
   20c50:	ldp	x19, x20, [sp, #16]
   20c54:	ldp	x21, x22, [sp, #32]
   20c58:	ldp	x29, x30, [sp], #48
   20c5c:	ret
   20c60:	mov	x4, x19
   20c64:	mov	x1, #0x18                  	// #24
   20c68:	bl	68b0 <__asan_backtrace_vector_grow@plt>
   20c6c:	cbz	x0, 20c88 <__sanitizer_set_death_callback@@Base+0x1c10>
   20c70:	stp	x21, x20, [x0]
   20c74:	str	x22, [x0, #16]
   20c78:	ldr	x0, [x19, #24]
   20c7c:	add	x0, x0, #0x1
   20c80:	str	x0, [x19, #24]
   20c84:	b	20c4c <__sanitizer_set_death_callback@@Base+0x1bd4>
   20c88:	mov	w0, #0x0                   	// #0
   20c8c:	b	20c50 <__sanitizer_set_death_callback@@Base+0x1bd8>
   20c90:	stp	x29, x30, [sp, #-32]!
   20c94:	mov	x29, sp
   20c98:	ldr	x2, [x0, #24]
   20c9c:	stp	x19, x20, [sp, #16]
   20ca0:	mov	x19, x0
   20ca4:	cmp	x1, x2
   20ca8:	b.hi	20cd0 <__sanitizer_set_death_callback@@Base+0x1c58>  // b.pmore
   20cac:	ldr	x0, [x0, #16]
   20cb0:	mov	w20, #0x1                   	// #1
   20cb4:	add	x0, x0, x1
   20cb8:	sub	x1, x2, x1
   20cbc:	stp	x0, x1, [x19, #16]
   20cc0:	mov	w0, w20
   20cc4:	ldp	x19, x20, [sp, #16]
   20cc8:	ldp	x29, x30, [sp], #32
   20ccc:	ret
   20cd0:	ldr	w20, [x0, #56]
   20cd4:	cbnz	w20, 20cf0 <__sanitizer_set_death_callback@@Base+0x1c78>
   20cd8:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20cdc:	add	x1, x1, #0xc7d
   20ce0:	bl	20898 <__sanitizer_set_death_callback@@Base+0x1820>
   20ce4:	mov	w0, #0x1                   	// #1
   20ce8:	str	w0, [x19, #56]
   20cec:	b	20cc0 <__sanitizer_set_death_callback@@Base+0x1c48>
   20cf0:	mov	w20, #0x0                   	// #0
   20cf4:	b	20cc0 <__sanitizer_set_death_callback@@Base+0x1c48>
   20cf8:	stp	x29, x30, [sp, #-32]!
   20cfc:	mov	x1, #0x4                   	// #4
   20d00:	mov	x29, sp
   20d04:	stp	x19, x20, [sp, #16]
   20d08:	mov	x19, x0
   20d0c:	ldr	x20, [x0, #16]
   20d10:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   20d14:	cbz	w0, 20d34 <__sanitizer_set_death_callback@@Base+0x1cbc>
   20d18:	ldr	w1, [x19, #32]
   20d1c:	ldr	w0, [x20]
   20d20:	cbz	w1, 20d28 <__sanitizer_set_death_callback@@Base+0x1cb0>
   20d24:	rev	w0, w0
   20d28:	ldp	x19, x20, [sp, #16]
   20d2c:	ldp	x29, x30, [sp], #32
   20d30:	ret
   20d34:	mov	w0, #0x0                   	// #0
   20d38:	b	20d28 <__sanitizer_set_death_callback@@Base+0x1cb0>
   20d3c:	stp	x29, x30, [sp, #-32]!
   20d40:	mov	x1, #0x8                   	// #8
   20d44:	mov	x29, sp
   20d48:	stp	x19, x20, [sp, #16]
   20d4c:	mov	x19, x0
   20d50:	ldr	x20, [x0, #16]
   20d54:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   20d58:	cbz	w0, 20d78 <__sanitizer_set_death_callback@@Base+0x1d00>
   20d5c:	ldr	w1, [x19, #32]
   20d60:	ldr	x0, [x20]
   20d64:	cbz	w1, 20d6c <__sanitizer_set_death_callback@@Base+0x1cf4>
   20d68:	rev	x0, x0
   20d6c:	ldp	x19, x20, [sp, #16]
   20d70:	ldp	x29, x30, [sp], #32
   20d74:	ret
   20d78:	mov	x0, #0x0                   	// #0
   20d7c:	b	20d6c <__sanitizer_set_death_callback@@Base+0x1cf4>
   20d80:	cbz	w1, 20d88 <__sanitizer_set_death_callback@@Base+0x1d10>
   20d84:	b	20d3c <__sanitizer_set_death_callback@@Base+0x1cc4>
   20d88:	stp	x29, x30, [sp, #-16]!
   20d8c:	mov	x29, sp
   20d90:	bl	20cf8 <__sanitizer_set_death_callback@@Base+0x1c80>
   20d94:	mov	w0, w0
   20d98:	ldp	x29, x30, [sp], #16
   20d9c:	ret
   20da0:	stp	x29, x30, [sp, #-32]!
   20da4:	mov	x1, #0x2                   	// #2
   20da8:	mov	x29, sp
   20dac:	stp	x19, x20, [sp, #16]
   20db0:	mov	x19, x0
   20db4:	ldr	x20, [x0, #16]
   20db8:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   20dbc:	cbz	w0, 20de8 <__sanitizer_set_death_callback@@Base+0x1d70>
   20dc0:	ldrb	w1, [x20, #1]
   20dc4:	ldrb	w0, [x20]
   20dc8:	ldr	w3, [x19, #32]
   20dcc:	orr	w2, w1, w0, lsl #8
   20dd0:	cmp	w3, #0x0
   20dd4:	orr	w0, w0, w1, lsl #8
   20dd8:	csel	w0, w0, w2, eq  // eq = none
   20ddc:	ldp	x19, x20, [sp, #16]
   20de0:	ldp	x29, x30, [sp], #32
   20de4:	ret
   20de8:	mov	w0, #0x0                   	// #0
   20dec:	b	20ddc <__sanitizer_set_death_callback@@Base+0x1d64>
   20df0:	stp	x29, x30, [sp, #-32]!
   20df4:	mov	x1, #0x1                   	// #1
   20df8:	mov	x29, sp
   20dfc:	str	x19, [sp, #16]
   20e00:	ldr	x19, [x0, #16]
   20e04:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   20e08:	cbz	w0, 20e1c <__sanitizer_set_death_callback@@Base+0x1da4>
   20e0c:	ldrb	w0, [x19]
   20e10:	ldr	x19, [sp, #16]
   20e14:	ldp	x29, x30, [sp], #32
   20e18:	ret
   20e1c:	mov	w0, #0x0                   	// #0
   20e20:	b	20e10 <__sanitizer_set_death_callback@@Base+0x1d98>
   20e24:	stp	x29, x30, [sp, #-16]!
   20e28:	sub	w1, w1, #0x1
   20e2c:	cmp	w1, #0x7
   20e30:	mov	x29, sp
   20e34:	b.hi	20e80 <__sanitizer_set_death_callback@@Base+0x1e08>  // b.pmore
   20e38:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20e3c:	add	x2, x2, #0xbe0
   20e40:	ldrb	w1, [x2, w1, uxtw]
   20e44:	adr	x2, 20e50 <__sanitizer_set_death_callback@@Base+0x1dd8>
   20e48:	add	x1, x2, w1, sxtb #2
   20e4c:	br	x1
   20e50:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   20e54:	and	x0, x0, #0xff
   20e58:	ldp	x29, x30, [sp], #16
   20e5c:	ret
   20e60:	bl	20da0 <__sanitizer_set_death_callback@@Base+0x1d28>
   20e64:	and	x0, x0, #0xffff
   20e68:	b	20e58 <__sanitizer_set_death_callback@@Base+0x1de0>
   20e6c:	bl	20cf8 <__sanitizer_set_death_callback@@Base+0x1c80>
   20e70:	mov	w0, w0
   20e74:	b	20e58 <__sanitizer_set_death_callback@@Base+0x1de0>
   20e78:	ldp	x29, x30, [sp], #16
   20e7c:	b	20d3c <__sanitizer_set_death_callback@@Base+0x1cc4>
   20e80:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20e84:	add	x1, x1, #0xc8d
   20e88:	bl	20898 <__sanitizer_set_death_callback@@Base+0x1820>
   20e8c:	mov	x0, #0x0                   	// #0
   20e90:	b	20e58 <__sanitizer_set_death_callback@@Base+0x1de0>
   20e94:	stp	x29, x30, [sp, #-64]!
   20e98:	mov	x29, sp
   20e9c:	stp	x19, x20, [sp, #16]
   20ea0:	mov	x19, x0
   20ea4:	mov	x20, #0x0                   	// #0
   20ea8:	stp	x21, x22, [sp, #32]
   20eac:	adrp	x22, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20eb0:	add	x22, x22, #0xcae
   20eb4:	mov	w21, #0x0                   	// #0
   20eb8:	stp	x23, x24, [sp, #48]
   20ebc:	mov	w24, #0x0                   	// #0
   20ec0:	mov	x0, x19
   20ec4:	mov	x1, #0x1                   	// #1
   20ec8:	ldr	x23, [x19, #16]
   20ecc:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   20ed0:	cbz	w0, 20f24 <__sanitizer_set_death_callback@@Base+0x1eac>
   20ed4:	ldrb	w23, [x23]
   20ed8:	cmp	w21, #0x3f
   20edc:	b.hi	20f0c <__sanitizer_set_death_callback@@Base+0x1e94>  // b.pmore
   20ee0:	and	x0, x23, #0x7f
   20ee4:	lsl	x0, x0, x21
   20ee8:	orr	x20, x20, x0
   20eec:	add	w21, w21, #0x7
   20ef0:	tbnz	w23, #7, 20ec0 <__sanitizer_set_death_callback@@Base+0x1e48>
   20ef4:	mov	x0, x20
   20ef8:	ldp	x19, x20, [sp, #16]
   20efc:	ldp	x21, x22, [sp, #32]
   20f00:	ldp	x23, x24, [sp, #48]
   20f04:	ldp	x29, x30, [sp], #64
   20f08:	ret
   20f0c:	cbnz	w24, 20eec <__sanitizer_set_death_callback@@Base+0x1e74>
   20f10:	mov	x1, x22
   20f14:	mov	x0, x19
   20f18:	mov	w24, #0x1                   	// #1
   20f1c:	bl	20898 <__sanitizer_set_death_callback@@Base+0x1820>
   20f20:	b	20eec <__sanitizer_set_death_callback@@Base+0x1e74>
   20f24:	mov	x20, #0x0                   	// #0
   20f28:	b	20ef4 <__sanitizer_set_death_callback@@Base+0x1e7c>
   20f2c:	stp	x29, x30, [sp, #-64]!
   20f30:	mov	x29, sp
   20f34:	stp	x21, x22, [sp, #32]
   20f38:	mov	x21, x0
   20f3c:	stp	x23, x24, [sp, #48]
   20f40:	adrp	x23, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   20f44:	add	x23, x23, #0xca7
   20f48:	mov	w24, #0x0                   	// #0
   20f4c:	stp	x19, x20, [sp, #16]
   20f50:	mov	w20, #0x0                   	// #0
   20f54:	mov	x19, #0x0                   	// #0
   20f58:	mov	x0, x21
   20f5c:	mov	x1, #0x1                   	// #1
   20f60:	ldr	x22, [x21, #16]
   20f64:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   20f68:	cbz	w0, 20fd4 <__sanitizer_set_death_callback@@Base+0x1f5c>
   20f6c:	ldrb	w22, [x22]
   20f70:	cmp	w20, #0x3f
   20f74:	b.hi	20fbc <__sanitizer_set_death_callback@@Base+0x1f44>  // b.pmore
   20f78:	and	x0, x22, #0x7f
   20f7c:	lsl	x0, x0, x20
   20f80:	orr	x19, x19, x0
   20f84:	add	w20, w20, #0x7
   20f88:	tbnz	w22, #7, 20f58 <__sanitizer_set_death_callback@@Base+0x1ee0>
   20f8c:	tbz	w22, #6, 20fa4 <__sanitizer_set_death_callback@@Base+0x1f2c>
   20f90:	cmp	w20, #0x3f
   20f94:	b.hi	20fa4 <__sanitizer_set_death_callback@@Base+0x1f2c>  // b.pmore
   20f98:	mov	x0, #0xffffffffffffffff    	// #-1
   20f9c:	lsl	x20, x0, x20
   20fa0:	orr	x19, x19, x20
   20fa4:	mov	x0, x19
   20fa8:	ldp	x19, x20, [sp, #16]
   20fac:	ldp	x21, x22, [sp, #32]
   20fb0:	ldp	x23, x24, [sp, #48]
   20fb4:	ldp	x29, x30, [sp], #64
   20fb8:	ret
   20fbc:	cbnz	w24, 20f84 <__sanitizer_set_death_callback@@Base+0x1f0c>
   20fc0:	mov	x1, x23
   20fc4:	mov	x0, x21
   20fc8:	mov	w24, #0x1                   	// #1
   20fcc:	bl	20898 <__sanitizer_set_death_callback@@Base+0x1820>
   20fd0:	b	20f84 <__sanitizer_set_death_callback@@Base+0x1f0c>
   20fd4:	mov	x0, #0x0                   	// #0
   20fd8:	b	20fa8 <__sanitizer_set_death_callback@@Base+0x1f30>
   20fdc:	stp	x29, x30, [sp, #-32]!
   20fe0:	mov	x29, sp
   20fe4:	stp	x19, x20, [sp, #16]
   20fe8:	mov	x19, x0
   20fec:	ldp	x20, x1, [x0, #16]
   20ff0:	mov	x0, x20
   20ff4:	bl	6bb0 <__asan_internal_strnlen@plt>
   20ff8:	add	x1, x0, #0x1
   20ffc:	mov	x0, x19
   21000:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   21004:	cmp	w0, #0x0
   21008:	csel	x0, x20, xzr, ne  // ne = any
   2100c:	ldp	x19, x20, [sp, #16]
   21010:	ldp	x29, x30, [sp], #32
   21014:	ret
   21018:	stp	x29, x30, [sp, #-96]!
   2101c:	mov	x29, sp
   21020:	stp	x19, x20, [sp, #16]
   21024:	mov	x20, x1
   21028:	ldr	x19, [sp, #96]
   2102c:	stp	x21, x22, [sp, #32]
   21030:	mov	w21, w0
   21034:	mov	w22, w4
   21038:	stp	x23, x24, [sp, #48]
   2103c:	mov	x24, x5
   21040:	mov	x23, x7
   21044:	stp	x25, x26, [sp, #64]
   21048:	mov	w26, w3
   2104c:	mov	x25, x6
   21050:	stp	x27, x28, [sp, #80]
   21054:	adrp	x27, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   21058:	mov	w28, w2
   2105c:	add	x27, x27, #0xbe8
   21060:	mov	x0, x19
   21064:	mov	x2, #0x10                  	// #16
   21068:	mov	w1, #0x0                   	// #0
   2106c:	bl	68d0 <__asan_internal_memset@plt>
   21070:	cmp	w21, #0x20
   21074:	b.hi	21098 <__sanitizer_set_death_callback@@Base+0x2020>  // b.pmore
   21078:	cbz	w21, 210b8 <__sanitizer_set_death_callback@@Base+0x2040>
   2107c:	sub	w21, w21, #0x1
   21080:	cmp	w21, #0x1f
   21084:	b.hi	210b8 <__sanitizer_set_death_callback@@Base+0x2040>  // b.pmore
   21088:	ldrh	w0, [x27, w21, uxtw #1]
   2108c:	adr	x1, 21098 <__sanitizer_set_death_callback@@Base+0x2020>
   21090:	add	x0, x1, w0, sxth #2
   21094:	br	x0
   21098:	mov	w0, #0x1f20                	// #7968
   2109c:	cmp	w21, w0
   210a0:	b.eq	21318 <__sanitizer_set_death_callback@@Base+0x22a0>  // b.none
   210a4:	b.hi	210c4 <__sanitizer_set_death_callback@@Base+0x204c>  // b.pmore
   210a8:	mov	w0, #0xffffe0ff            	// #-7937
   210ac:	add	w21, w21, w0
   210b0:	cmp	w21, #0x1
   210b4:	b.ls	21310 <__sanitizer_set_death_callback@@Base+0x2298>  // b.plast
   210b8:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   210bc:	add	x1, x1, #0xd04
   210c0:	b	21254 <__sanitizer_set_death_callback@@Base+0x21dc>
   210c4:	mov	w0, #0x1f21                	// #7969
   210c8:	cmp	w21, w0
   210cc:	b.ne	210b8 <__sanitizer_set_death_callback@@Base+0x2040>  // b.any
   210d0:	mov	w1, w28
   210d4:	mov	x0, x20
   210d8:	bl	20d80 <__sanitizer_set_death_callback@@Base+0x1d08>
   210dc:	cbz	x23, 2132c <__sanitizer_set_death_callback@@Base+0x22b4>
   210e0:	ldr	x1, [x23, #112]
   210e4:	cmp	x1, x0
   210e8:	b.hi	21344 <__sanitizer_set_death_callback@@Base+0x22cc>  // b.pmore
   210ec:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   210f0:	add	x1, x1, #0xce2
   210f4:	b	21254 <__sanitizer_set_death_callback@@Base+0x21dc>
   210f8:	mov	w21, #0x1                   	// #1
   210fc:	str	w21, [x19]
   21100:	mov	w1, w22
   21104:	mov	x0, x20
   21108:	bl	20e24 <__sanitizer_set_death_callback@@Base+0x1dac>
   2110c:	b	21230 <__sanitizer_set_death_callback@@Base+0x21b8>
   21110:	mov	w0, #0xa                   	// #10
   21114:	str	w0, [x19]
   21118:	mov	x0, x20
   2111c:	bl	20da0 <__sanitizer_set_death_callback@@Base+0x1d28>
   21120:	and	x1, x0, #0xffff
   21124:	mov	x0, x20
   21128:	ldp	x19, x20, [sp, #16]
   2112c:	ldp	x21, x22, [sp, #32]
   21130:	ldp	x23, x24, [sp, #48]
   21134:	ldp	x25, x26, [sp, #64]
   21138:	ldp	x27, x28, [sp, #80]
   2113c:	ldp	x29, x30, [sp], #96
   21140:	b	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   21144:	mov	w0, #0xa                   	// #10
   21148:	str	w0, [x19]
   2114c:	mov	x0, x20
   21150:	bl	20cf8 <__sanitizer_set_death_callback@@Base+0x1c80>
   21154:	mov	w1, w0
   21158:	b	21124 <__sanitizer_set_death_callback@@Base+0x20ac>
   2115c:	mov	w0, #0x2                   	// #2
   21160:	str	w0, [x19]
   21164:	mov	x0, x20
   21168:	bl	20da0 <__sanitizer_set_death_callback@@Base+0x1d28>
   2116c:	and	x0, x0, #0xffff
   21170:	b	21230 <__sanitizer_set_death_callback@@Base+0x21b8>
   21174:	mov	w0, #0x2                   	// #2
   21178:	str	w0, [x19]
   2117c:	mov	x0, x20
   21180:	bl	20cf8 <__sanitizer_set_death_callback@@Base+0x1c80>
   21184:	mov	w0, w0
   21188:	b	21230 <__sanitizer_set_death_callback@@Base+0x21b8>
   2118c:	mov	w0, #0x2                   	// #2
   21190:	str	w0, [x19]
   21194:	mov	x0, x20
   21198:	bl	20d3c <__sanitizer_set_death_callback@@Base+0x1cc4>
   2119c:	b	21230 <__sanitizer_set_death_callback@@Base+0x21b8>
   211a0:	mov	w0, #0x4                   	// #4
   211a4:	str	w0, [x19]
   211a8:	mov	x0, x20
   211ac:	bl	20fdc <__sanitizer_set_death_callback@@Base+0x1f64>
   211b0:	cmp	x0, #0x0
   211b4:	str	x0, [x19, #8]
   211b8:	cset	w0, ne  // ne = any
   211bc:	ldp	x19, x20, [sp, #16]
   211c0:	ldp	x21, x22, [sp, #32]
   211c4:	ldp	x23, x24, [sp, #48]
   211c8:	ldp	x25, x26, [sp, #64]
   211cc:	ldp	x27, x28, [sp, #80]
   211d0:	ldp	x29, x30, [sp], #96
   211d4:	ret
   211d8:	mov	w0, #0xa                   	// #10
   211dc:	str	w0, [x19]
   211e0:	mov	x0, x20
   211e4:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   211e8:	mov	x1, x0
   211ec:	b	21124 <__sanitizer_set_death_callback@@Base+0x20ac>
   211f0:	mov	w0, #0xa                   	// #10
   211f4:	str	w0, [x19]
   211f8:	mov	x0, x20
   211fc:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   21200:	and	x1, x0, #0xff
   21204:	b	21124 <__sanitizer_set_death_callback@@Base+0x20ac>
   21208:	mov	w0, #0x2                   	// #2
   2120c:	str	w0, [x19]
   21210:	mov	x0, x20
   21214:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   21218:	and	x0, x0, #0xff
   2121c:	b	21230 <__sanitizer_set_death_callback@@Base+0x21b8>
   21220:	mov	w0, #0x3                   	// #3
   21224:	str	w0, [x19]
   21228:	mov	x0, x20
   2122c:	bl	20f2c <__sanitizer_set_death_callback@@Base+0x1eb4>
   21230:	str	x0, [x19, #8]
   21234:	b	21330 <__sanitizer_set_death_callback@@Base+0x22b8>
   21238:	mov	w1, w28
   2123c:	mov	x0, x20
   21240:	bl	20d80 <__sanitizer_set_death_callback@@Base+0x1d08>
   21244:	cmp	x25, x0
   21248:	b.hi	21264 <__sanitizer_set_death_callback@@Base+0x21ec>  // b.pmore
   2124c:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   21250:	add	x1, x1, #0xcc8
   21254:	mov	x0, x20
   21258:	bl	20898 <__sanitizer_set_death_callback@@Base+0x1820>
   2125c:	mov	w0, #0x0                   	// #0
   21260:	b	211bc <__sanitizer_set_death_callback@@Base+0x2144>
   21264:	mov	w1, #0x4                   	// #4
   21268:	add	x0, x24, x0
   2126c:	str	w1, [x19]
   21270:	b	21230 <__sanitizer_set_death_callback@@Base+0x21b8>
   21274:	mov	w0, #0x2                   	// #2
   21278:	str	w0, [x19]
   2127c:	mov	x0, x20
   21280:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   21284:	b	21230 <__sanitizer_set_death_callback@@Base+0x21b8>
   21288:	mov	w0, #0x6                   	// #6
   2128c:	str	w0, [x19]
   21290:	cmp	w26, #0x2
   21294:	b.eq	21100 <__sanitizer_set_death_callback@@Base+0x2088>  // b.none
   21298:	mov	w1, w28
   2129c:	mov	x0, x20
   212a0:	bl	20d80 <__sanitizer_set_death_callback@@Base+0x1d08>
   212a4:	b	21230 <__sanitizer_set_death_callback@@Base+0x21b8>
   212a8:	mov	w0, #0x5                   	// #5
   212ac:	b	2120c <__sanitizer_set_death_callback@@Base+0x2194>
   212b0:	mov	w0, #0x5                   	// #5
   212b4:	b	21160 <__sanitizer_set_death_callback@@Base+0x20e8>
   212b8:	mov	w0, #0x5                   	// #5
   212bc:	b	21178 <__sanitizer_set_death_callback@@Base+0x2100>
   212c0:	mov	w0, #0x5                   	// #5
   212c4:	b	21190 <__sanitizer_set_death_callback@@Base+0x2118>
   212c8:	mov	w0, #0x5                   	// #5
   212cc:	b	21278 <__sanitizer_set_death_callback@@Base+0x2200>
   212d0:	mov	x0, x20
   212d4:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   212d8:	mov	w21, w0
   212dc:	b	21060 <__sanitizer_set_death_callback@@Base+0x1fe8>
   212e0:	mov	w0, #0x8                   	// #8
   212e4:	str	w0, [x19]
   212e8:	b	21298 <__sanitizer_set_death_callback@@Base+0x2220>
   212ec:	mov	w0, #0xb                   	// #11
   212f0:	b	211dc <__sanitizer_set_death_callback@@Base+0x2164>
   212f4:	mov	w0, #0x2                   	// #2
   212f8:	str	w0, [x19]
   212fc:	mov	x0, #0x1                   	// #1
   21300:	str	x0, [x19, #8]
   21304:	b	211bc <__sanitizer_set_death_callback@@Base+0x2144>
   21308:	mov	w0, #0x9                   	// #9
   2130c:	b	21190 <__sanitizer_set_death_callback@@Base+0x2118>
   21310:	mov	w0, #0x8                   	// #8
   21314:	b	21278 <__sanitizer_set_death_callback@@Base+0x2200>
   21318:	mov	w1, w28
   2131c:	mov	x0, x20
   21320:	bl	20d80 <__sanitizer_set_death_callback@@Base+0x1d08>
   21324:	str	x0, [x19, #8]
   21328:	cbnz	x23, 21338 <__sanitizer_set_death_callback@@Base+0x22c0>
   2132c:	str	wzr, [x19]
   21330:	mov	w0, #0x1                   	// #1
   21334:	b	211bc <__sanitizer_set_death_callback@@Base+0x2144>
   21338:	mov	w0, #0x7                   	// #7
   2133c:	str	w0, [x19]
   21340:	b	21330 <__sanitizer_set_death_callback@@Base+0x22b8>
   21344:	mov	w1, #0x4                   	// #4
   21348:	str	w1, [x19]
   2134c:	ldr	x1, [x23, #104]
   21350:	add	x0, x1, x0
   21354:	b	21230 <__sanitizer_set_death_callback@@Base+0x21b8>
   21358:	sub	sp, sp, #0x170
   2135c:	stp	x29, x30, [sp, #48]
   21360:	add	x29, sp, #0x30
   21364:	stp	x21, x22, [sp, #80]
   21368:	ldp	x21, x22, [sp, #376]
   2136c:	stp	x19, x20, [sp, #64]
   21370:	mov	x20, x2
   21374:	ldr	x19, [sp, #392]
   21378:	stp	x23, x24, [sp, #96]
   2137c:	add	x23, sp, #0xf0
   21380:	stp	x25, x26, [sp, #112]
   21384:	mov	x25, x0
   21388:	mov	x26, x1
   2138c:	stp	x27, x28, [sp, #128]
   21390:	add	x27, sp, #0x130
   21394:	stp	x5, x6, [sp, #160]
   21398:	stp	x3, x4, [sp, #176]
   2139c:	str	w7, [sp, #224]
   213a0:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   213a4:	add	x0, x0, #0xc28
   213a8:	str	x0, [sp, #192]
   213ac:	ldr	x0, [x20, #24]
   213b0:	cbz	x0, 213c4 <__sanitizer_set_death_callback@@Base+0x234c>
   213b4:	mov	x0, x20
   213b8:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   213bc:	mov	x1, x0
   213c0:	cbnz	x0, 213e8 <__sanitizer_set_death_callback@@Base+0x2370>
   213c4:	mov	w0, #0x1                   	// #1
   213c8:	ldp	x29, x30, [sp, #48]
   213cc:	ldp	x19, x20, [sp, #64]
   213d0:	ldp	x21, x22, [sp, #80]
   213d4:	ldp	x23, x24, [sp, #96]
   213d8:	ldp	x25, x26, [sp, #112]
   213dc:	ldp	x27, x28, [sp, #128]
   213e0:	add	sp, sp, #0x170
   213e4:	ret
   213e8:	mov	x3, x22
   213ec:	mov	x2, x21
   213f0:	add	x0, x19, #0x58
   213f4:	bl	20a64 <__sanitizer_set_death_callback@@Base+0x19ec>
   213f8:	mov	x28, x0
   213fc:	cbnz	x0, 21408 <__sanitizer_set_death_callback@@Base+0x2390>
   21400:	mov	w0, #0x0                   	// #0
   21404:	b	213c8 <__sanitizer_set_death_callback@@Base+0x2350>
   21408:	ldr	x0, [sp, #408]
   2140c:	cbz	x0, 2141c <__sanitizer_set_death_callback@@Base+0x23a4>
   21410:	ldr	x1, [sp, #408]
   21414:	ldr	w0, [x28, #8]
   21418:	str	w0, [x1]
   2141c:	mov	x11, #0x0                   	// #0
   21420:	mov	x9, #0x0                   	// #0
   21424:	mov	w12, #0x0                   	// #0
   21428:	mov	x10, #0x0                   	// #0
   2142c:	mov	x24, #0x0                   	// #0
   21430:	stp	wzr, wzr, [sp, #148]
   21434:	str	wzr, [sp, #156]
   21438:	ldr	x0, [x28, #16]
   2143c:	cmp	x0, x11
   21440:	b.hi	21498 <__sanitizer_set_death_callback@@Base+0x2420>  // b.pmore
   21444:	ldr	w0, [x28, #8]
   21448:	cmp	w0, #0x2e
   2144c:	ccmp	w0, #0x11, #0x4, ne  // ne = any
   21450:	b.eq	21610 <__sanitizer_set_death_callback@@Base+0x2598>  // b.none
   21454:	ldr	w0, [x28, #12]
   21458:	cbz	w0, 213ac <__sanitizer_set_death_callback@@Base+0x2334>
   2145c:	ldp	x5, x6, [sp, #160]
   21460:	stp	x21, x22, [sp, #8]
   21464:	ldr	w7, [sp, #224]
   21468:	ldp	x3, x4, [sp, #176]
   2146c:	str	xzr, [sp, #40]
   21470:	ldr	x0, [sp, #400]
   21474:	stp	x19, x0, [sp, #24]
   21478:	mov	x2, x20
   2147c:	ldr	x0, [sp, #368]
   21480:	str	x0, [sp]
   21484:	mov	x1, x26
   21488:	mov	x0, x25
   2148c:	bl	21358 <__sanitizer_set_death_callback@@Base+0x22e0>
   21490:	cbnz	w0, 213a0 <__sanitizer_set_death_callback@@Base+0x2328>
   21494:	b	21400 <__sanitizer_set_death_callback@@Base+0x2388>
   21498:	ldr	x0, [x28, #24]
   2149c:	str	x27, [sp]
   214a0:	ldp	x5, x6, [sp, #176]
   214a4:	lsl	x13, x11, #3
   214a8:	add	x0, x0, x11, lsl #3
   214ac:	ldr	w4, [x19, #48]
   214b0:	ldp	w3, w2, [x19, #40]
   214b4:	mov	x1, x20
   214b8:	ldr	w0, [x0, #4]
   214bc:	ldr	x7, [sp, #368]
   214c0:	stp	x11, x13, [sp, #200]
   214c4:	str	x10, [sp, #216]
   214c8:	str	w12, [sp, #228]
   214cc:	str	x9, [sp, #232]
   214d0:	bl	21018 <__sanitizer_set_death_callback@@Base+0x1fa0>
   214d4:	cbz	w0, 213c8 <__sanitizer_set_death_callback@@Base+0x2350>
   214d8:	ldp	x11, x13, [sp, #200]
   214dc:	ldr	x0, [x28, #24]
   214e0:	ldr	w12, [sp, #228]
   214e4:	ldr	x10, [sp, #216]
   214e8:	ldr	w0, [x0, x13]
   214ec:	ldr	x9, [sp, #232]
   214f0:	cmp	w0, #0x1b
   214f4:	b.hi	21530 <__sanitizer_set_death_callback@@Base+0x24b8>  // b.pmore
   214f8:	cmp	w0, #0xf
   214fc:	b.hi	21510 <__sanitizer_set_death_callback@@Base+0x2498>  // b.pmore
   21500:	cmp	w0, #0x3
   21504:	b.eq	215c8 <__sanitizer_set_death_callback@@Base+0x2550>  // b.none
   21508:	add	x11, x11, #0x1
   2150c:	b	21438 <__sanitizer_set_death_callback@@Base+0x23c0>
   21510:	sub	w0, w0, #0x10
   21514:	cmp	w0, #0xb
   21518:	b.hi	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.pmore
   2151c:	ldr	x1, [sp, #192]
   21520:	ldrb	w0, [x1, w0, uxtw]
   21524:	adr	x1, 21530 <__sanitizer_set_death_callback@@Base+0x24b8>
   21528:	add	x0, x1, w0, sxtb #2
   2152c:	br	x0
   21530:	cmp	w0, #0x55
   21534:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   21538:	ldr	w0, [sp, #304]
   2153c:	cmp	w0, #0x2
   21540:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   21544:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   21548:	mov	w0, #0x1                   	// #1
   2154c:	str	w0, [sp, #156]
   21550:	ldr	x9, [sp, #312]
   21554:	b	21508 <__sanitizer_set_death_callback@@Base+0x2490>
   21558:	ldr	w0, [sp, #304]
   2155c:	cmp	w0, #0x1
   21560:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   21564:	str	w0, [sp, #152]
   21568:	ldr	x24, [sp, #312]
   2156c:	b	21508 <__sanitizer_set_death_callback@@Base+0x2490>
   21570:	ldr	w0, [sp, #304]
   21574:	cmp	w0, #0x1
   21578:	b.ne	21588 <__sanitizer_set_death_callback@@Base+0x2510>  // b.any
   2157c:	str	w0, [sp, #148]
   21580:	ldr	x10, [sp, #312]
   21584:	b	21508 <__sanitizer_set_death_callback@@Base+0x2490>
   21588:	cmp	w0, #0x2
   2158c:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   21590:	mov	w12, #0x1                   	// #1
   21594:	str	w12, [sp, #148]
   21598:	ldr	x10, [sp, #312]
   2159c:	b	21508 <__sanitizer_set_death_callback@@Base+0x2490>
   215a0:	ldr	w0, [x28, #8]
   215a4:	cmp	w0, #0x11
   215a8:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   215ac:	ldr	w0, [sp, #304]
   215b0:	cmp	w0, #0x2
   215b4:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   215b8:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   215bc:	ldr	x0, [sp, #312]
   215c0:	str	x0, [x19, #56]
   215c4:	b	21508 <__sanitizer_set_death_callback@@Base+0x2490>
   215c8:	ldr	w0, [x28, #8]
   215cc:	cmp	w0, #0x11
   215d0:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   215d4:	ldr	w0, [sp, #304]
   215d8:	cmp	w0, #0x4
   215dc:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   215e0:	ldr	x0, [sp, #312]
   215e4:	str	x0, [x19, #64]
   215e8:	b	21508 <__sanitizer_set_death_callback@@Base+0x2490>
   215ec:	ldr	w0, [x28, #8]
   215f0:	cmp	w0, #0x11
   215f4:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   215f8:	ldr	w0, [sp, #304]
   215fc:	cmp	w0, #0x4
   21600:	b.ne	21508 <__sanitizer_set_death_callback@@Base+0x2490>  // b.any
   21604:	ldr	x0, [sp, #312]
   21608:	str	x0, [x19, #72]
   2160c:	b	21508 <__sanitizer_set_death_callback@@Base+0x2490>
   21610:	ldr	w0, [sp, #156]
   21614:	cbz	w0, 21738 <__sanitizer_set_death_callback@@Base+0x26c0>
   21618:	ldr	x0, [sp, #168]
   2161c:	cmp	x9, x0
   21620:	b.cc	2163c <__sanitizer_set_death_callback@@Base+0x25c4>  // b.lo, b.ul, b.last
   21624:	mov	x0, x22
   21628:	mov	w2, #0x0                   	// #0
   2162c:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   21630:	add	x1, x1, #0xdc7
   21634:	blr	x21
   21638:	b	21400 <__sanitizer_set_death_callback@@Base+0x2388>
   2163c:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   21640:	add	x0, x0, #0xd1c
   21644:	str	x0, [sp, #304]
   21648:	ldr	x0, [sp, #160]
   2164c:	str	x0, [sp, #312]
   21650:	stp	x21, x22, [sp, #344]
   21654:	add	x0, x0, x9
   21658:	str	x0, [sp, #320]
   2165c:	ldr	x0, [sp, #168]
   21660:	str	wzr, [sp, #360]
   21664:	sub	x9, x0, x9
   21668:	ldr	w0, [sp, #224]
   2166c:	str	x9, [sp, #328]
   21670:	str	w0, [sp, #336]
   21674:	ldr	w0, [sp, #360]
   21678:	cbnz	w0, 21400 <__sanitizer_set_death_callback@@Base+0x2388>
   2167c:	ldr	w1, [x19, #48]
   21680:	mov	x0, x27
   21684:	bl	20e24 <__sanitizer_set_death_callback@@Base+0x1dac>
   21688:	mov	x2, x0
   2168c:	ldr	w1, [x19, #48]
   21690:	mov	x0, x27
   21694:	str	x2, [sp, #200]
   21698:	bl	20e24 <__sanitizer_set_death_callback@@Base+0x1dac>
   2169c:	mov	x3, x0
   216a0:	ldr	x2, [sp, #200]
   216a4:	orr	x0, x2, x0
   216a8:	cbz	x0, 2170c <__sanitizer_set_death_callback@@Base+0x2694>
   216ac:	ldr	w1, [x19, #48]
   216b0:	mov	x0, x2
   216b4:	bl	205b8 <__sanitizer_set_death_callback@@Base+0x1540>
   216b8:	ldr	x2, [sp, #200]
   216bc:	cbnz	w0, 21704 <__sanitizer_set_death_callback@@Base+0x268c>
   216c0:	add	x0, sp, #0x200
   216c4:	add	x2, x2, x24
   216c8:	add	x3, x3, x24
   216cc:	stp	x2, x3, [sp, #280]
   216d0:	mov	x4, x22
   216d4:	ldr	x5, [sp, #400]
   216d8:	str	x19, [sp, #296]
   216dc:	ldp	x0, x1, [x0, #-232]
   216e0:	mov	x3, x21
   216e4:	mov	x2, x23
   216e8:	stp	x0, x1, [x23]
   216ec:	mov	x1, x26
   216f0:	mov	x0, x25
   216f4:	str	x19, [x23, #16]
   216f8:	bl	207cc <__sanitizer_set_death_callback@@Base+0x1754>
   216fc:	cbnz	w0, 21674 <__sanitizer_set_death_callback@@Base+0x25fc>
   21700:	b	213c8 <__sanitizer_set_death_callback@@Base+0x2350>
   21704:	mov	x24, x3
   21708:	b	21674 <__sanitizer_set_death_callback@@Base+0x25fc>
   2170c:	ldr	w0, [sp, #360]
   21710:	cbnz	w0, 21400 <__sanitizer_set_death_callback@@Base+0x2388>
   21714:	ldr	w0, [x28, #8]
   21718:	cmp	w0, #0x11
   2171c:	b.ne	21454 <__sanitizer_set_death_callback@@Base+0x23dc>  // b.any
   21720:	ldr	w0, [sp, #156]
   21724:	cbnz	w0, 213c4 <__sanitizer_set_death_callback@@Base+0x234c>
   21728:	ldp	w1, w0, [sp, #148]
   2172c:	tst	w0, w1
   21730:	b.eq	21454 <__sanitizer_set_death_callback@@Base+0x23dc>  // b.none
   21734:	b	213c4 <__sanitizer_set_death_callback@@Base+0x234c>
   21738:	ldp	w1, w0, [sp, #148]
   2173c:	tst	w0, w1
   21740:	b.eq	21714 <__sanitizer_set_death_callback@@Base+0x269c>  // b.none
   21744:	cbz	w12, 2174c <__sanitizer_set_death_callback@@Base+0x26d4>
   21748:	add	x10, x10, x24
   2174c:	stp	x24, x10, [sp, #304]
   21750:	mov	x4, x22
   21754:	mov	x3, x21
   21758:	ldr	x5, [sp, #400]
   2175c:	str	x19, [sp, #320]
   21760:	ldp	x0, x1, [x27]
   21764:	mov	x2, x23
   21768:	stp	x0, x1, [x23]
   2176c:	mov	x1, x26
   21770:	mov	x0, x25
   21774:	str	x19, [x23, #16]
   21778:	bl	207cc <__sanitizer_set_death_callback@@Base+0x1754>
   2177c:	cbnz	w0, 21714 <__sanitizer_set_death_callback@@Base+0x269c>
   21780:	b	213c8 <__sanitizer_set_death_callback@@Base+0x2350>
   21784:	ldr	x3, [x0]
   21788:	ldr	x2, [x1]
   2178c:	cmp	x3, x2
   21790:	b.cc	217c8 <__sanitizer_set_death_callback@@Base+0x2750>  // b.lo, b.ul, b.last
   21794:	b.hi	217c0 <__sanitizer_set_death_callback@@Base+0x2748>  // b.pmore
   21798:	ldr	x3, [x0, #8]
   2179c:	ldr	x2, [x1, #8]
   217a0:	cmp	x3, x2
   217a4:	b.cc	217c0 <__sanitizer_set_death_callback@@Base+0x2748>  // b.lo, b.ul, b.last
   217a8:	b.hi	217c8 <__sanitizer_set_death_callback@@Base+0x2750>  // b.pmore
   217ac:	ldr	x0, [x0, #16]
   217b0:	ldr	x1, [x1, #16]
   217b4:	ldr	x0, [x0]
   217b8:	ldr	x1, [x1]
   217bc:	b	6b90 <__asan_internal_strcmp@plt>
   217c0:	mov	w0, #0x1                   	// #1
   217c4:	ret
   217c8:	mov	w0, #0xffffffff            	// #-1
   217cc:	b	217c4 <__sanitizer_set_death_callback@@Base+0x274c>
   217d0:	sub	sp, sp, #0xd0
   217d4:	stp	x29, x30, [sp, #16]
   217d8:	add	x29, sp, #0x10
   217dc:	stp	x21, x22, [sp, #48]
   217e0:	mov	x21, x0
   217e4:	ldr	x0, [x1, #16]
   217e8:	stp	x19, x20, [sp, #32]
   217ec:	stp	x23, x24, [sp, #64]
   217f0:	cmp	x0, x2
   217f4:	mov	x23, x3
   217f8:	stp	x25, x26, [sp, #80]
   217fc:	mov	x24, x4
   21800:	stp	x27, x28, [sp, #96]
   21804:	b.hi	2181c <__sanitizer_set_death_callback@@Base+0x27a4>  // b.pmore
   21808:	ldr	x4, [x1, #8]
   2180c:	sub	x5, x2, x0
   21810:	mov	x20, x1
   21814:	cmp	x5, x4
   21818:	b.cc	21838 <__sanitizer_set_death_callback@@Base+0x27c0>  // b.lo, b.ul, b.last
   2181c:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   21820:	mov	x0, x24
   21824:	add	x1, x1, #0xd2a
   21828:	mov	w2, #0x0                   	// #0
   2182c:	blr	x23
   21830:	mov	x19, #0x0                   	// #0
   21834:	b	2194c <__sanitizer_set_death_callback@@Base+0x28d4>
   21838:	ldr	x1, [x21, #56]
   2183c:	adrp	x3, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   21840:	add	x3, x3, #0xd58
   21844:	stp	x3, x1, [sp, #144]
   21848:	add	x0, x0, x4
   2184c:	ldr	x1, [x20]
   21850:	sub	x0, x0, x2
   21854:	add	x26, sp, #0x90
   21858:	str	x0, [sp, #168]
   2185c:	add	x1, x1, x5
   21860:	ldr	w0, [x21, #120]
   21864:	str	x1, [sp, #160]
   21868:	str	w0, [sp, #176]
   2186c:	mov	x0, x26
   21870:	stp	x23, x24, [sp, #184]
   21874:	str	wzr, [sp, #200]
   21878:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2187c:	mov	x1, x0
   21880:	cbnz	x0, 21898 <__sanitizer_set_death_callback@@Base+0x2820>
   21884:	mov	x0, x26
   21888:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   2188c:	add	x1, x1, #0xd64
   21890:	bl	20898 <__sanitizer_set_death_callback@@Base+0x1820>
   21894:	b	21830 <__sanitizer_set_death_callback@@Base+0x27b8>
   21898:	mov	x3, x24
   2189c:	mov	x2, x23
   218a0:	add	x0, x20, #0x58
   218a4:	bl	20a64 <__sanitizer_set_death_callback@@Base+0x19ec>
   218a8:	mov	x22, x0
   218ac:	cbz	x0, 21830 <__sanitizer_set_death_callback@@Base+0x27b8>
   218b0:	add	x27, sp, #0x80
   218b4:	mov	x25, #0x0                   	// #0
   218b8:	mov	x19, #0x0                   	// #0
   218bc:	mov	w28, #0x2007                	// #8199
   218c0:	ldr	x0, [x22, #16]
   218c4:	cmp	x0, x25
   218c8:	b.ls	2194c <__sanitizer_set_death_callback@@Base+0x28d4>  // b.plast
   218cc:	ldr	x0, [x22, #24]
   218d0:	lsl	x8, x25, #3
   218d4:	ldr	x7, [x21, #8]
   218d8:	mov	x1, x26
   218dc:	add	x0, x0, x25, lsl #3
   218e0:	str	x8, [sp, #120]
   218e4:	ldp	x5, x6, [x21, #104]
   218e8:	str	x27, [sp]
   218ec:	ldr	w0, [x0, #4]
   218f0:	ldp	w3, w2, [x20, #40]
   218f4:	ldr	w4, [x20, #48]
   218f8:	bl	21018 <__sanitizer_set_death_callback@@Base+0x1fa0>
   218fc:	cbz	w0, 21830 <__sanitizer_set_death_callback@@Base+0x27b8>
   21900:	ldr	x0, [x22, #24]
   21904:	ldr	x8, [sp, #120]
   21908:	add	x1, x0, x8
   2190c:	ldr	w0, [x0, x8]
   21910:	cmp	w0, #0x47
   21914:	b.eq	21988 <__sanitizer_set_death_callback@@Base+0x2910>  // b.none
   21918:	b.hi	2192c <__sanitizer_set_death_callback@@Base+0x28b4>  // b.pmore
   2191c:	cmp	w0, #0x3
   21920:	b.eq	21970 <__sanitizer_set_death_callback@@Base+0x28f8>  // b.none
   21924:	add	x25, x25, #0x1
   21928:	b	218c0 <__sanitizer_set_death_callback@@Base+0x2848>
   2192c:	cmp	w0, #0x6e
   21930:	b.eq	2193c <__sanitizer_set_death_callback@@Base+0x28c4>  // b.none
   21934:	cmp	w0, w28
   21938:	b.ne	21924 <__sanitizer_set_death_callback@@Base+0x28ac>  // b.any
   2193c:	ldr	w0, [sp, #128]
   21940:	cmp	w0, #0x4
   21944:	b.ne	21924 <__sanitizer_set_death_callback@@Base+0x28ac>  // b.any
   21948:	ldr	x19, [sp, #136]
   2194c:	mov	x0, x19
   21950:	ldp	x29, x30, [sp, #16]
   21954:	ldp	x19, x20, [sp, #32]
   21958:	ldp	x21, x22, [sp, #48]
   2195c:	ldp	x23, x24, [sp, #64]
   21960:	ldp	x25, x26, [sp, #80]
   21964:	ldp	x27, x28, [sp, #96]
   21968:	add	sp, sp, #0xd0
   2196c:	ret
   21970:	cbnz	x19, 21924 <__sanitizer_set_death_callback@@Base+0x28ac>
   21974:	ldr	w0, [sp, #128]
   21978:	cmp	w0, #0x4
   2197c:	b.ne	21924 <__sanitizer_set_death_callback@@Base+0x28ac>  // b.any
   21980:	ldr	x19, [sp, #136]
   21984:	b	21924 <__sanitizer_set_death_callback@@Base+0x28ac>
   21988:	ldr	w0, [x1, #4]
   2198c:	cmp	w0, #0x20
   21990:	b.eq	21924 <__sanitizer_set_death_callback@@Base+0x28ac>  // b.none
   21994:	mov	x4, x24
   21998:	mov	x3, x23
   2199c:	mov	x2, x27
   219a0:	mov	x1, x20
   219a4:	mov	x0, x21
   219a8:	bl	219b8 <__sanitizer_set_death_callback@@Base+0x2940>
   219ac:	cmp	x0, #0x0
   219b0:	csel	x19, x19, x0, eq  // eq = none
   219b4:	b	21924 <__sanitizer_set_death_callback@@Base+0x28ac>
   219b8:	stp	x29, x30, [sp, #-64]!
   219bc:	mov	x29, sp
   219c0:	stp	x19, x20, [sp, #16]
   219c4:	mov	x19, x2
   219c8:	ldr	w2, [x2]
   219cc:	stp	x21, x22, [sp, #32]
   219d0:	mov	x20, x0
   219d4:	mov	x21, x3
   219d8:	mov	x22, x4
   219dc:	cmp	w2, #0x6
   219e0:	b.ne	21a44 <__sanitizer_set_death_callback@@Base+0x29cc>  // b.any
   219e4:	ldp	x1, x2, [x20, #40]
   219e8:	adrp	x4, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   219ec:	ldr	x0, [x19, #8]
   219f0:	add	x4, x4, #0x60c
   219f4:	mov	x3, #0x8                   	// #8
   219f8:	str	x0, [sp, #56]
   219fc:	add	x0, sp, #0x38
   21a00:	bl	6c60 <bsearch@plt>
   21a04:	cbz	x0, 21a14 <__sanitizer_set_death_callback@@Base+0x299c>
   21a08:	ldr	x1, [x0]
   21a0c:	cbnz	x1, 21a24 <__sanitizer_set_death_callback@@Base+0x29ac>
   21a10:	mov	x0, #0x0                   	// #0
   21a14:	ldp	x19, x20, [sp, #16]
   21a18:	ldp	x21, x22, [sp, #32]
   21a1c:	ldp	x29, x30, [sp], #64
   21a20:	ret
   21a24:	ldr	x2, [x19, #8]
   21a28:	mov	x4, x22
   21a2c:	ldr	x0, [x1, #24]
   21a30:	mov	x3, x21
   21a34:	sub	x2, x2, x0
   21a38:	mov	x0, x20
   21a3c:	bl	217d0 <__sanitizer_set_death_callback@@Base+0x2758>
   21a40:	b	21a14 <__sanitizer_set_death_callback@@Base+0x299c>
   21a44:	cmp	w2, #0x2
   21a48:	ccmp	w2, #0x5, #0x4, ne  // ne = any
   21a4c:	b.ne	21a58 <__sanitizer_set_death_callback@@Base+0x29e0>  // b.any
   21a50:	ldr	x2, [x19, #8]
   21a54:	b	21a3c <__sanitizer_set_death_callback@@Base+0x29c4>
   21a58:	cmp	w2, #0x7
   21a5c:	b.ne	21a10 <__sanitizer_set_death_callback@@Base+0x2998>  // b.any
   21a60:	ldr	x0, [x0, #8]
   21a64:	adrp	x4, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   21a68:	mov	x3, #0x8                   	// #8
   21a6c:	add	x4, x4, #0x60c
   21a70:	ldp	x1, x2, [x0, #40]
   21a74:	ldr	x0, [x19, #8]
   21a78:	str	x0, [sp, #56]
   21a7c:	add	x0, sp, #0x38
   21a80:	bl	6c60 <bsearch@plt>
   21a84:	cbz	x0, 21a14 <__sanitizer_set_death_callback@@Base+0x299c>
   21a88:	ldr	x1, [x0]
   21a8c:	cbz	x1, 21a10 <__sanitizer_set_death_callback@@Base+0x2998>
   21a90:	ldr	x2, [x19, #8]
   21a94:	mov	x4, x22
   21a98:	ldr	x0, [x1, #24]
   21a9c:	mov	x3, x21
   21aa0:	sub	x2, x2, x0
   21aa4:	ldr	x0, [x20, #8]
   21aa8:	b	21a3c <__sanitizer_set_death_callback@@Base+0x29c4>
   21aac:	sub	sp, sp, #0x120
   21ab0:	stp	x29, x30, [sp, #16]
   21ab4:	add	x29, sp, #0x10
   21ab8:	stp	x19, x20, [sp, #32]
   21abc:	mov	x20, x6
   21ac0:	stp	x21, x22, [sp, #48]
   21ac4:	mov	x22, x1
   21ac8:	mov	x21, x7
   21acc:	stp	x23, x24, [sp, #64]
   21ad0:	mov	x23, x2
   21ad4:	stp	x25, x26, [sp, #80]
   21ad8:	mov	x26, x4
   21adc:	mov	x25, x0
   21ae0:	stp	x27, x28, [sp, #96]
   21ae4:	add	x27, sp, #0xe0
   21ae8:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   21aec:	add	x0, x0, #0x60f
   21af0:	stp	x3, x5, [sp, #128]
   21af4:	str	x0, [sp, #160]
   21af8:	ldr	x0, [x26, #24]
   21afc:	cbz	x0, 21b10 <__sanitizer_set_death_callback@@Base+0x2a98>
   21b00:	mov	x0, x26
   21b04:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   21b08:	mov	x1, x0
   21b0c:	cbnz	x0, 21b34 <__sanitizer_set_death_callback@@Base+0x2abc>
   21b10:	mov	w0, #0x1                   	// #1
   21b14:	ldp	x29, x30, [sp, #16]
   21b18:	ldp	x19, x20, [sp, #32]
   21b1c:	ldp	x21, x22, [sp, #48]
   21b20:	ldp	x23, x24, [sp, #64]
   21b24:	ldp	x25, x26, [sp, #80]
   21b28:	ldp	x27, x28, [sp, #96]
   21b2c:	add	sp, sp, #0x120
   21b30:	ret
   21b34:	mov	x3, x21
   21b38:	mov	x2, x20
   21b3c:	add	x0, x23, #0x58
   21b40:	bl	20a64 <__sanitizer_set_death_callback@@Base+0x19ec>
   21b44:	mov	x24, x0
   21b48:	cbnz	x0, 21b54 <__sanitizer_set_death_callback@@Base+0x2adc>
   21b4c:	mov	w0, #0x0                   	// #0
   21b50:	b	21b14 <__sanitizer_set_death_callback@@Base+0x2a9c>
   21b54:	ldr	w0, [x0, #8]
   21b58:	cmp	w0, #0x2e
   21b5c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   21b60:	b.eq	22088 <__sanitizer_set_death_callback@@Base+0x3010>  // b.none
   21b64:	cmp	w0, #0x1d
   21b68:	b.ne	21c38 <__sanitizer_set_death_callback@@Base+0x2bc0>  // b.any
   21b6c:	ldr	x0, [sp, #296]
   21b70:	mov	x3, x21
   21b74:	mov	x2, x20
   21b78:	mov	x1, #0x28                  	// #40
   21b7c:	str	x0, [sp, #120]
   21b80:	mov	x0, x25
   21b84:	bl	6930 <__asan_backtrace_alloc@plt>
   21b88:	mov	x19, x0
   21b8c:	cbz	x0, 21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   21b90:	mov	w28, #0x1                   	// #1
   21b94:	mov	x2, #0x28                  	// #40
   21b98:	mov	w1, #0x0                   	// #0
   21b9c:	bl	68d0 <__asan_internal_memset@plt>
   21ba0:	mov	w9, #0x0                   	// #0
   21ba4:	mov	x13, #0x0                   	// #0
   21ba8:	mov	w12, #0x0                   	// #0
   21bac:	mov	x11, #0x0                   	// #0
   21bb0:	mov	x14, #0x0                   	// #0
   21bb4:	mov	x10, #0x0                   	// #0
   21bb8:	stp	wzr, wzr, [sp, #148]
   21bbc:	str	wzr, [sp, #216]
   21bc0:	ldr	x0, [x24, #16]
   21bc4:	cmp	x0, x10
   21bc8:	b.hi	21c4c <__sanitizer_set_death_callback@@Base+0x2bd4>  // b.pmore
   21bcc:	cbz	w28, 21bf4 <__sanitizer_set_death_callback@@Base+0x2b7c>
   21bd0:	ldr	x0, [x19]
   21bd4:	cbnz	x0, 21eb4 <__sanitizer_set_death_callback@@Base+0x2e3c>
   21bd8:	mov	w28, #0x0                   	// #0
   21bdc:	mov	x4, x21
   21be0:	mov	x3, x20
   21be4:	mov	x1, x19
   21be8:	mov	x0, x25
   21bec:	mov	x2, #0x28                  	// #40
   21bf0:	bl	6c20 <__asan_backtrace_free@plt>
   21bf4:	ldr	w0, [x24, #12]
   21bf8:	cbz	w0, 21af8 <__sanitizer_set_death_callback@@Base+0x2a80>
   21bfc:	cbnz	w28, 22004 <__sanitizer_set_death_callback@@Base+0x2f8c>
   21c00:	ldp	x3, x5, [sp, #128]
   21c04:	mov	x7, x21
   21c08:	ldr	x0, [sp, #296]
   21c0c:	str	x0, [sp, #8]
   21c10:	ldr	x0, [sp, #288]
   21c14:	str	x0, [sp]
   21c18:	mov	x6, x20
   21c1c:	mov	x4, x26
   21c20:	mov	x2, x23
   21c24:	mov	x1, x22
   21c28:	mov	x0, x25
   21c2c:	bl	21aac <__sanitizer_set_death_callback@@Base+0x2a34>
   21c30:	cbnz	w0, 21af8 <__sanitizer_set_death_callback@@Base+0x2a80>
   21c34:	b	21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   21c38:	ldr	x0, [sp, #288]
   21c3c:	mov	w28, #0x0                   	// #0
   21c40:	mov	x19, #0x0                   	// #0
   21c44:	str	x0, [sp, #120]
   21c48:	b	21ba0 <__sanitizer_set_death_callback@@Base+0x2b28>
   21c4c:	ldr	x0, [x24, #24]
   21c50:	lsl	x15, x10, #3
   21c54:	ldp	w3, w2, [x23, #40]
   21c58:	mov	x1, x26
   21c5c:	add	x0, x0, x10, lsl #3
   21c60:	ldr	w4, [x23, #48]
   21c64:	ldr	x7, [x22, #8]
   21c68:	stp	x10, x15, [sp, #168]
   21c6c:	ldp	x5, x6, [x22, #104]
   21c70:	str	x27, [sp]
   21c74:	stp	x14, x11, [sp, #184]
   21c78:	ldr	w0, [x0, #4]
   21c7c:	str	w12, [sp, #200]
   21c80:	str	x13, [sp, #208]
   21c84:	str	w9, [sp, #220]
   21c88:	bl	21018 <__sanitizer_set_death_callback@@Base+0x1fa0>
   21c8c:	cbz	w0, 21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   21c90:	ldr	w0, [x24, #8]
   21c94:	ldr	w12, [sp, #200]
   21c98:	ldr	w9, [sp, #220]
   21c9c:	cmp	w0, #0x11
   21ca0:	ldp	x10, x15, [sp, #168]
   21ca4:	ldp	x14, x11, [sp, #184]
   21ca8:	ldr	x13, [sp, #208]
   21cac:	b.ne	21cd4 <__sanitizer_set_death_callback@@Base+0x2c5c>  // b.any
   21cb0:	ldr	x0, [x24, #24]
   21cb4:	ldr	w0, [x0, x15]
   21cb8:	cmp	w0, #0x11
   21cbc:	b.ne	21cd4 <__sanitizer_set_death_callback@@Base+0x2c5c>  // b.any
   21cc0:	ldr	w0, [sp, #224]
   21cc4:	cmp	w0, #0x1
   21cc8:	b.ne	21cd4 <__sanitizer_set_death_callback@@Base+0x2c5c>  // b.any
   21ccc:	ldr	x0, [sp, #232]
   21cd0:	str	x0, [sp, #128]
   21cd4:	cbz	w28, 21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21cd8:	ldr	x0, [x24, #24]
   21cdc:	add	x1, x0, x15
   21ce0:	ldr	w0, [x0, x15]
   21ce4:	cmp	w0, #0x55
   21ce8:	b.eq	21e98 <__sanitizer_set_death_callback@@Base+0x2e20>  // b.none
   21cec:	b.hi	21d7c <__sanitizer_set_death_callback@@Base+0x2d04>  // b.pmore
   21cf0:	cmp	w0, #0x12
   21cf4:	b.eq	21e6c <__sanitizer_set_death_callback@@Base+0x2df4>  // b.none
   21cf8:	b.hi	21d14 <__sanitizer_set_death_callback@@Base+0x2c9c>  // b.pmore
   21cfc:	cmp	w0, #0x3
   21d00:	b.eq	21e34 <__sanitizer_set_death_callback@@Base+0x2dbc>  // b.none
   21d04:	cmp	w0, #0x11
   21d08:	b.eq	21e54 <__sanitizer_set_death_callback@@Base+0x2ddc>  // b.none
   21d0c:	add	x10, x10, #0x1
   21d10:	b	21bc0 <__sanitizer_set_death_callback@@Base+0x2b48>
   21d14:	cmp	w0, #0x31
   21d18:	b.eq	21d24 <__sanitizer_set_death_callback@@Base+0x2cac>  // b.none
   21d1c:	cmp	w0, #0x47
   21d20:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21d24:	cbnz	w9, 21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21d28:	ldr	w0, [x1, #4]
   21d2c:	cmp	w0, #0x20
   21d30:	b.eq	21d74 <__sanitizer_set_death_callback@@Base+0x2cfc>  // b.none
   21d34:	mov	x4, x21
   21d38:	mov	x3, x20
   21d3c:	mov	x2, x27
   21d40:	mov	x1, x23
   21d44:	mov	x0, x22
   21d48:	stp	x10, x14, [sp, #168]
   21d4c:	str	x11, [sp, #184]
   21d50:	str	w12, [sp, #192]
   21d54:	str	x13, [sp, #200]
   21d58:	bl	219b8 <__sanitizer_set_death_callback@@Base+0x2940>
   21d5c:	ldr	w12, [sp, #192]
   21d60:	ldp	x10, x14, [sp, #168]
   21d64:	ldr	x11, [sp, #184]
   21d68:	ldr	x13, [sp, #200]
   21d6c:	cbz	x0, 21d74 <__sanitizer_set_death_callback@@Base+0x2cfc>
   21d70:	str	x0, [x19]
   21d74:	mov	w9, #0x0                   	// #0
   21d78:	b	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21d7c:	cmp	w0, #0x59
   21d80:	b.eq	21e1c <__sanitizer_set_death_callback@@Base+0x2da4>  // b.none
   21d84:	b.hi	21db0 <__sanitizer_set_death_callback@@Base+0x2d38>  // b.pmore
   21d88:	cmp	w0, #0x58
   21d8c:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21d90:	ldr	w0, [sp, #224]
   21d94:	cmp	w0, #0x2
   21d98:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21d9c:	ldr	x0, [sp, #232]
   21da0:	cbnz	x0, 21de0 <__sanitizer_set_death_callback@@Base+0x2d68>
   21da4:	ldr	x0, [sp, #160]
   21da8:	str	x0, [x19, #8]
   21dac:	b	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21db0:	cmp	w0, #0x6e
   21db4:	b.eq	21dc4 <__sanitizer_set_death_callback@@Base+0x2d4c>  // b.none
   21db8:	mov	w1, #0x2007                	// #8199
   21dbc:	cmp	w0, w1
   21dc0:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21dc4:	ldr	w0, [sp, #224]
   21dc8:	cmp	w0, #0x4
   21dcc:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21dd0:	ldr	x0, [sp, #232]
   21dd4:	mov	w9, w28
   21dd8:	str	x0, [x19]
   21ddc:	b	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21de0:	ldr	x2, [sp, #136]
   21de4:	sub	x1, x0, #0x1
   21de8:	ldr	x2, [x2, #48]
   21dec:	cmp	x1, x2
   21df0:	b.cc	21e08 <__sanitizer_set_death_callback@@Base+0x2d90>  // b.lo, b.ul, b.last
   21df4:	mov	x0, x26
   21df8:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   21dfc:	add	x1, x1, #0xd8d
   21e00:	bl	20898 <__sanitizer_set_death_callback@@Base+0x1820>
   21e04:	b	21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   21e08:	ldr	x1, [sp, #136]
   21e0c:	ldr	x1, [x1, #56]
   21e10:	add	x0, x1, x0, lsl #3
   21e14:	ldur	x0, [x0, #-8]
   21e18:	b	21da8 <__sanitizer_set_death_callback@@Base+0x2d30>
   21e1c:	ldr	w0, [sp, #224]
   21e20:	cmp	w0, #0x2
   21e24:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21e28:	ldr	x0, [sp, #232]
   21e2c:	str	w0, [x19, #16]
   21e30:	b	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21e34:	ldr	x0, [x19]
   21e38:	cbnz	x0, 21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21e3c:	ldr	w0, [sp, #224]
   21e40:	cmp	w0, #0x4
   21e44:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21e48:	ldr	x0, [sp, #232]
   21e4c:	str	x0, [x19]
   21e50:	b	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21e54:	ldr	w0, [sp, #224]
   21e58:	cmp	w0, #0x1
   21e5c:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21e60:	str	w28, [sp, #152]
   21e64:	ldr	x14, [sp, #232]
   21e68:	b	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21e6c:	ldr	w0, [sp, #224]
   21e70:	cmp	w0, #0x1
   21e74:	b.ne	21e84 <__sanitizer_set_death_callback@@Base+0x2e0c>  // b.any
   21e78:	ldr	x11, [sp, #232]
   21e7c:	mov	w12, w28
   21e80:	b	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21e84:	cmp	w0, #0x2
   21e88:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21e8c:	str	w28, [sp, #216]
   21e90:	ldr	x11, [sp, #232]
   21e94:	b	21e7c <__sanitizer_set_death_callback@@Base+0x2e04>
   21e98:	ldr	w0, [sp, #224]
   21e9c:	cmp	w0, #0x2
   21ea0:	ccmp	w0, #0x8, #0x4, ne  // ne = any
   21ea4:	b.ne	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>  // b.any
   21ea8:	str	w28, [sp, #148]
   21eac:	ldr	x13, [sp, #232]
   21eb0:	b	21d0c <__sanitizer_set_death_callback@@Base+0x2c94>
   21eb4:	ldr	w0, [sp, #148]
   21eb8:	cbz	w0, 21fa4 <__sanitizer_set_death_callback@@Base+0x2f2c>
   21ebc:	ldr	x0, [x22, #96]
   21ec0:	cmp	x13, x0
   21ec4:	b.cc	21ee0 <__sanitizer_set_death_callback@@Base+0x2e68>  // b.lo, b.ul, b.last
   21ec8:	mov	x0, x21
   21ecc:	mov	w2, #0x0                   	// #0
   21ed0:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   21ed4:	add	x1, x1, #0xdbe
   21ed8:	blr	x20
   21edc:	b	21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   21ee0:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   21ee4:	add	x1, x1, #0xd1c
   21ee8:	str	x1, [sp, #224]
   21eec:	ldr	x1, [x22, #88]
   21ef0:	str	x1, [sp, #232]
   21ef4:	ldr	x28, [sp, #128]
   21ef8:	add	x1, x1, x13
   21efc:	sub	x13, x0, x13
   21f00:	ldr	w0, [x22, #120]
   21f04:	stp	x1, x13, [sp, #240]
   21f08:	str	w0, [sp, #256]
   21f0c:	stp	x20, x21, [sp, #264]
   21f10:	str	wzr, [sp, #280]
   21f14:	ldr	w0, [sp, #280]
   21f18:	cbnz	w0, 21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   21f1c:	ldr	w1, [x23, #48]
   21f20:	mov	x0, x27
   21f24:	bl	20e24 <__sanitizer_set_death_callback@@Base+0x1dac>
   21f28:	mov	x3, x0
   21f2c:	ldr	w1, [x23, #48]
   21f30:	mov	x0, x27
   21f34:	str	x3, [sp, #152]
   21f38:	bl	20e24 <__sanitizer_set_death_callback@@Base+0x1dac>
   21f3c:	mov	x4, x0
   21f40:	ldr	x3, [sp, #152]
   21f44:	orr	x0, x3, x0
   21f48:	cbz	x0, 21f94 <__sanitizer_set_death_callback@@Base+0x2f1c>
   21f4c:	ldr	w1, [x23, #48]
   21f50:	mov	x0, x3
   21f54:	bl	205b8 <__sanitizer_set_death_callback@@Base+0x1540>
   21f58:	ldr	x3, [sp, #152]
   21f5c:	cbnz	w0, 21f8c <__sanitizer_set_death_callback@@Base+0x2f14>
   21f60:	ldr	x1, [x22, #16]
   21f64:	mov	x6, x21
   21f68:	ldr	x7, [sp, #120]
   21f6c:	mov	x5, x20
   21f70:	add	x4, x4, x28
   21f74:	add	x3, x3, x28
   21f78:	mov	x2, x19
   21f7c:	mov	x0, x25
   21f80:	bl	20bd4 <__sanitizer_set_death_callback@@Base+0x1b5c>
   21f84:	cbnz	w0, 21f14 <__sanitizer_set_death_callback@@Base+0x2e9c>
   21f88:	b	21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   21f8c:	mov	x28, x4
   21f90:	b	21f14 <__sanitizer_set_death_callback@@Base+0x2e9c>
   21f94:	ldr	w0, [sp, #280]
   21f98:	cbnz	w0, 21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   21f9c:	ldr	w28, [sp, #148]
   21fa0:	b	21bf4 <__sanitizer_set_death_callback@@Base+0x2b7c>
   21fa4:	ldr	w0, [sp, #152]
   21fa8:	ands	w28, w0, w12
   21fac:	b.eq	21fe8 <__sanitizer_set_death_callback@@Base+0x2f70>  // b.none
   21fb0:	ldr	w0, [sp, #216]
   21fb4:	cbz	w0, 21fbc <__sanitizer_set_death_callback@@Base+0x2f44>
   21fb8:	add	x11, x11, x14
   21fbc:	ldr	x1, [x22, #16]
   21fc0:	mov	x6, x21
   21fc4:	ldr	x7, [sp, #120]
   21fc8:	mov	x5, x20
   21fcc:	mov	x4, x11
   21fd0:	mov	x3, x14
   21fd4:	mov	x2, x19
   21fd8:	mov	x0, x25
   21fdc:	bl	20bd4 <__sanitizer_set_death_callback@@Base+0x1b5c>
   21fe0:	cbnz	w0, 21bf4 <__sanitizer_set_death_callback@@Base+0x2b7c>
   21fe4:	b	21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   21fe8:	mov	x4, x21
   21fec:	mov	x3, x20
   21ff0:	mov	x1, x19
   21ff4:	mov	x0, x25
   21ff8:	mov	x2, #0x28                  	// #40
   21ffc:	bl	6c20 <__asan_backtrace_free@plt>
   22000:	b	21bf4 <__sanitizer_set_death_callback@@Base+0x2b7c>
   22004:	mov	x2, #0x20                  	// #32
   22008:	mov	w1, #0x0                   	// #0
   2200c:	mov	x0, x27
   22010:	bl	68d0 <__asan_internal_memset@plt>
   22014:	ldp	x3, x5, [sp, #128]
   22018:	mov	x7, x21
   2201c:	ldr	x0, [sp, #288]
   22020:	stp	x0, x27, [sp]
   22024:	mov	x6, x20
   22028:	mov	x4, x26
   2202c:	mov	x2, x23
   22030:	mov	x1, x22
   22034:	mov	x0, x25
   22038:	bl	21aac <__sanitizer_set_death_callback@@Base+0x2a34>
   2203c:	cbz	w0, 21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   22040:	ldr	x0, [sp, #248]
   22044:	cbz	x0, 21af8 <__sanitizer_set_death_callback@@Base+0x2a80>
   22048:	mov	x3, x21
   2204c:	mov	x2, x20
   22050:	mov	x1, x27
   22054:	mov	x0, x25
   22058:	bl	6980 <__asan_backtrace_vector_release@plt>
   2205c:	cbz	w0, 21b4c <__sanitizer_set_death_callback@@Base+0x2ad4>
   22060:	ldr	x1, [sp, #248]
   22064:	adrp	x3, 21000 <__sanitizer_set_death_callback@@Base+0x1f88>
   22068:	ldr	x24, [sp, #224]
   2206c:	add	x3, x3, #0x784
   22070:	mov	x2, #0x18                  	// #24
   22074:	mov	x0, x24
   22078:	bl	6720 <__asan_backtrace_qsort@plt>
   2207c:	ldr	x0, [sp, #248]
   22080:	stp	x24, x0, [x19, #24]
   22084:	b	21af8 <__sanitizer_set_death_callback@@Base+0x2a80>
   22088:	cmp	w0, #0x1d
   2208c:	ldp	x1, x0, [sp, #288]
   22090:	csel	x0, x0, x1, eq  // eq = none
   22094:	b	21b70 <__sanitizer_set_death_callback@@Base+0x2af8>
   22098:	sub	sp, sp, #0x1d0
   2209c:	stp	x29, x30, [sp, #16]
   220a0:	add	x29, sp, #0x10
   220a4:	str	x2, [sp, #232]
   220a8:	ldr	x2, [x1, #32]
   220ac:	stp	x19, x20, [sp, #32]
   220b0:	stp	x21, x22, [sp, #48]
   220b4:	mov	x21, x0
   220b8:	mov	w0, #0x1                   	// #1
   220bc:	stp	x23, x24, [sp, #64]
   220c0:	mov	x23, x1
   220c4:	stp	x25, x26, [sp, #80]
   220c8:	stp	x27, x28, [sp, #96]
   220cc:	str	w0, [x6]
   220d0:	str	x3, [sp, #136]
   220d4:	str	x6, [sp, #176]
   220d8:	cbz	x2, 2227c <__sanitizer_set_death_callback@@Base+0x3204>
   220dc:	ldr	x1, [x1, #24]
   220e0:	add	x0, sp, #0xe8
   220e4:	mov	x24, x4
   220e8:	mov	x22, x5
   220ec:	adrp	x4, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   220f0:	mov	x3, #0x18                  	// #24
   220f4:	add	x4, x4, #0x660
   220f8:	str	x0, [sp, #184]
   220fc:	bl	6c60 <bsearch@plt>
   22100:	mov	x20, x0
   22104:	cbz	x0, 2227c <__sanitizer_set_death_callback@@Base+0x3204>
   22108:	ldp	x2, x3, [x23, #24]
   2210c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   22110:	ldr	x1, [sp, #232]
   22114:	movk	x4, #0xaaab
   22118:	sub	x0, x20, x2
   2211c:	asr	x0, x0, #3
   22120:	mul	x0, x0, x4
   22124:	add	x0, x0, #0x1
   22128:	cmp	x0, x3
   2212c:	b.cs	22148 <__sanitizer_set_death_callback@@Base+0x30d0>  // b.hs, b.nlast
   22130:	ldr	x0, [x20, #24]
   22134:	cmp	x0, x1
   22138:	b.hi	22148 <__sanitizer_set_death_callback@@Base+0x30d0>  // b.pmore
   2213c:	ldr	x0, [x20, #32]
   22140:	cmp	x1, x0
   22144:	b.cc	222a8 <__sanitizer_set_death_callback@@Base+0x3230>  // b.lo, b.ul, b.last
   22148:	ldr	x0, [x20, #16]
   2214c:	ldr	w3, [x21, #8]
   22150:	ldr	x1, [x0, #104]
   22154:	str	x0, [sp, #112]
   22158:	ldr	x0, [x23, #24]
   2215c:	cmp	x0, x20
   22160:	b.cs	22180 <__sanitizer_set_death_callback@@Base+0x3108>  // b.hs, b.nlast
   22164:	ldur	x2, [x20, #-24]
   22168:	ldr	x0, [sp, #232]
   2216c:	cmp	x2, x0
   22170:	b.hi	22180 <__sanitizer_set_death_callback@@Base+0x3108>  // b.pmore
   22174:	ldur	x2, [x20, #-16]
   22178:	cmp	x0, x2
   2217c:	b.cc	222b0 <__sanitizer_set_death_callback@@Base+0x3238>  // b.lo, b.ul, b.last
   22180:	ldr	w0, [x21, #8]
   22184:	cbz	w0, 22194 <__sanitizer_set_death_callback@@Base+0x311c>
   22188:	ldr	x0, [sp, #112]
   2218c:	add	x0, x0, #0x68
   22190:	ldar	x1, [x0]
   22194:	cbnz	x1, 22da8 <__sanitizer_set_death_callback@@Base+0x3d30>
   22198:	ldr	x0, [x20, #16]
   2219c:	mov	x2, #0x18                  	// #24
   221a0:	str	x0, [sp, #152]
   221a4:	add	x0, sp, #0xf0
   221a8:	str	x0, [sp, #144]
   221ac:	bl	68d0 <__asan_internal_memset@plt>
   221b0:	add	x0, sp, #0x110
   221b4:	mov	x2, #0x40                  	// #64
   221b8:	mov	w1, #0x0                   	// #0
   221bc:	str	x0, [sp, #160]
   221c0:	str	xzr, [sp, #264]
   221c4:	bl	68d0 <__asan_internal_memset@plt>
   221c8:	ldr	x0, [sp, #152]
   221cc:	ldr	x2, [x0, #56]
   221d0:	ldr	x0, [x23, #80]
   221d4:	cmp	x2, x0
   221d8:	b.cc	222d0 <__sanitizer_set_death_callback@@Base+0x3258>  // b.lo, b.ul, b.last
   221dc:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   221e0:	mov	x0, x22
   221e4:	add	x1, x1, #0xde2
   221e8:	mov	w2, #0x0                   	// #0
   221ec:	blr	x24
   221f0:	ldp	x1, x0, [sp, #248]
   221f4:	mov	x3, x22
   221f8:	mov	x2, x24
   221fc:	mov	x19, #0x0                   	// #0
   22200:	mov	x27, #0x0                   	// #0
   22204:	mov	x25, #0x0                   	// #0
   22208:	add	x0, x0, x1
   2220c:	stp	xzr, x0, [sp, #248]
   22210:	mov	x0, x21
   22214:	ldr	x1, [sp, #144]
   22218:	bl	6980 <__asan_backtrace_vector_release@plt>
   2221c:	ldr	x1, [sp, #160]
   22220:	mov	x0, x21
   22224:	mov	x3, x22
   22228:	mov	x2, x24
   2222c:	bl	208ec <__sanitizer_set_death_callback@@Base+0x1874>
   22230:	mov	x1, #0xffffffffffffffff    	// #-1
   22234:	mov	w0, #0x0                   	// #0
   22238:	ldr	w2, [x21, #8]
   2223c:	cbnz	w2, 22bdc <__sanitizer_set_death_callback@@Base+0x3b64>
   22240:	ldr	x2, [sp, #112]
   22244:	stp	x1, x27, [x2, #104]
   22248:	stp	x19, x25, [x2, #120]
   2224c:	cmn	x1, #0x1
   22250:	b.ne	22c10 <__sanitizer_set_death_callback@@Base+0x3b98>  // b.any
   22254:	cbz	w0, 22db0 <__sanitizer_set_death_callback@@Base+0x3d38>
   22258:	ldr	x3, [sp, #136]
   2225c:	mov	x5, x22
   22260:	ldr	x6, [sp, #176]
   22264:	mov	x4, x24
   22268:	ldr	x2, [sp, #232]
   2226c:	mov	x1, x23
   22270:	mov	x0, x21
   22274:	bl	22098 <__sanitizer_set_death_callback@@Base+0x3020>
   22278:	b	22288 <__sanitizer_set_death_callback@@Base+0x3210>
   2227c:	ldr	x0, [sp, #176]
   22280:	str	wzr, [x0]
   22284:	mov	w0, #0x0                   	// #0
   22288:	ldp	x29, x30, [sp, #16]
   2228c:	ldp	x19, x20, [sp, #32]
   22290:	ldp	x21, x22, [sp, #48]
   22294:	ldp	x23, x24, [sp, #64]
   22298:	ldp	x25, x26, [sp, #80]
   2229c:	ldp	x27, x28, [sp, #96]
   222a0:	add	sp, sp, #0x1d0
   222a4:	ret
   222a8:	add	x20, x20, #0x18
   222ac:	b	22118 <__sanitizer_set_death_callback@@Base+0x30a0>
   222b0:	cbz	w3, 222c0 <__sanitizer_set_death_callback@@Base+0x3248>
   222b4:	ldr	x0, [sp, #112]
   222b8:	add	x0, x0, #0x68
   222bc:	ldar	x1, [x0]
   222c0:	cmn	x1, #0x1
   222c4:	b.ne	22180 <__sanitizer_set_death_callback@@Base+0x3108>  // b.any
   222c8:	sub	x20, x20, #0x18
   222cc:	b	22148 <__sanitizer_set_death_callback@@Base+0x30d0>
   222d0:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   222d4:	add	x1, x1, #0xe00
   222d8:	str	x1, [sp, #336]
   222dc:	sub	x0, x0, x2
   222e0:	ldr	x1, [x23, #72]
   222e4:	str	x1, [sp, #344]
   222e8:	add	x19, sp, #0x150
   222ec:	str	x0, [sp, #360]
   222f0:	add	x1, x1, x2
   222f4:	ldr	w0, [x23, #120]
   222f8:	str	x1, [sp, #352]
   222fc:	str	w0, [sp, #368]
   22300:	mov	x0, x19
   22304:	stp	x24, x22, [sp, #376]
   22308:	str	wzr, [sp, #392]
   2230c:	bl	20cf8 <__sanitizer_set_death_callback@@Base+0x1c80>
   22310:	mov	x1, #0xffffffff            	// #4294967295
   22314:	mov	w2, w0
   22318:	cmp	x1, w0, uxtw
   2231c:	b.ne	22364 <__sanitizer_set_death_callback@@Base+0x32ec>  // b.any
   22320:	mov	x0, x19
   22324:	bl	20d3c <__sanitizer_set_death_callback@@Base+0x1cc4>
   22328:	mov	x2, x0
   2232c:	mov	w25, #0x1                   	// #1
   22330:	mov	x0, x19
   22334:	str	x2, [sp, #360]
   22338:	bl	20da0 <__sanitizer_set_death_callback@@Base+0x1d28>
   2233c:	and	w0, w0, #0xffff
   22340:	str	w0, [sp, #272]
   22344:	sub	w0, w0, #0x2
   22348:	cmp	w0, #0x2
   2234c:	b.ls	2236c <__sanitizer_set_death_callback@@Base+0x32f4>  // b.plast
   22350:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   22354:	add	x1, x1, #0xe0c
   22358:	mov	x0, x19
   2235c:	bl	20898 <__sanitizer_set_death_callback@@Base+0x1820>
   22360:	b	221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   22364:	mov	w25, #0x0                   	// #0
   22368:	b	22330 <__sanitizer_set_death_callback@@Base+0x32b8>
   2236c:	mov	w1, w25
   22370:	mov	x0, x19
   22374:	bl	20d80 <__sanitizer_set_death_callback@@Base+0x1d08>
   22378:	add	x25, sp, #0x190
   2237c:	ldp	x2, x3, [sp, #336]
   22380:	stp	x2, x3, [sp, #400]
   22384:	mov	x1, x0
   22388:	ldp	x2, x3, [sp, #352]
   2238c:	stp	x2, x3, [sp, #416]
   22390:	mov	x0, x19
   22394:	ldp	x2, x3, [sp, #368]
   22398:	stp	x2, x3, [sp, #432]
   2239c:	ldp	x2, x3, [sp, #384]
   223a0:	str	x1, [sp, #424]
   223a4:	stp	x2, x3, [sp, #448]
   223a8:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   223ac:	cbz	w0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   223b0:	mov	x0, x25
   223b4:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   223b8:	and	w0, w0, #0xff
   223bc:	str	w0, [sp, #276]
   223c0:	ldr	w0, [sp, #272]
   223c4:	cmp	w0, #0x3
   223c8:	b.gt	225a4 <__sanitizer_set_death_callback@@Base+0x352c>
   223cc:	mov	w0, #0x1                   	// #1
   223d0:	str	w0, [sp, #280]
   223d4:	mov	x0, x25
   223d8:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   223dc:	mov	x0, x25
   223e0:	mov	x1, #0x1                   	// #1
   223e4:	ldr	x26, [sp, #416]
   223e8:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   223ec:	cbz	w0, 225b4 <__sanitizer_set_death_callback@@Base+0x353c>
   223f0:	ldrb	w0, [x26]
   223f4:	eor	w0, w0, #0xffffff80
   223f8:	sub	w0, w0, #0x80
   223fc:	sxtb	w0, w0
   22400:	str	w0, [sp, #284]
   22404:	mov	x0, x25
   22408:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   2240c:	and	w0, w0, #0xff
   22410:	str	w0, [sp, #288]
   22414:	mov	x0, x25
   22418:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   2241c:	and	w1, w0, #0xff
   22420:	ldr	x0, [sp, #416]
   22424:	str	w1, [sp, #292]
   22428:	sub	w1, w1, #0x1
   2242c:	str	x0, [sp, #296]
   22430:	mov	x0, x25
   22434:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   22438:	cbz	w0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   2243c:	ldp	x26, x27, [sp, #416]
   22440:	str	xzr, [sp, #304]
   22444:	add	x27, x26, x27
   22448:	cmp	x27, x26
   2244c:	b.ls	22458 <__sanitizer_set_death_callback@@Base+0x33e0>  // b.plast
   22450:	ldrb	w0, [x26]
   22454:	cbnz	w0, 225bc <__sanitizer_set_death_callback@@Base+0x3544>
   22458:	ldr	x1, [sp, #304]
   2245c:	str	xzr, [sp, #312]
   22460:	cbnz	x1, 225e0 <__sanitizer_set_death_callback@@Base+0x3568>
   22464:	mov	x26, #0x0                   	// #0
   22468:	ldr	x0, [sp, #416]
   2246c:	ldrb	w0, [x0]
   22470:	cbnz	w0, 225fc <__sanitizer_set_death_callback@@Base+0x3584>
   22474:	mov	x0, x25
   22478:	mov	x1, #0x1                   	// #1
   2247c:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   22480:	cbz	w0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   22484:	ldp	x26, x27, [sp, #416]
   22488:	str	xzr, [sp, #320]
   2248c:	add	x27, x26, x27
   22490:	cmp	x27, x26
   22494:	b.ls	224a0 <__sanitizer_set_death_callback@@Base+0x3428>  // b.plast
   22498:	ldrb	w0, [x26]
   2249c:	cbnz	w0, 22628 <__sanitizer_set_death_callback@@Base+0x35b0>
   224a0:	ldp	x2, x3, [sp, #376]
   224a4:	mov	x0, x21
   224a8:	ldr	x1, [sp, #320]
   224ac:	lsl	x1, x1, #3
   224b0:	bl	6930 <__asan_backtrace_alloc@plt>
   224b4:	str	x0, [sp, #328]
   224b8:	cbz	x0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   224bc:	mov	x28, #0x0                   	// #0
   224c0:	ldr	x1, [sp, #416]
   224c4:	ldr	w0, [sp, #456]
   224c8:	ldrb	w1, [x1]
   224cc:	cbnz	w1, 226a0 <__sanitizer_set_death_callback@@Base+0x3628>
   224d0:	cbnz	w0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   224d4:	ldr	x0, [sp, #320]
   224d8:	cbz	x0, 2279c <__sanitizer_set_death_callback@@Base+0x3724>
   224dc:	ldr	x0, [sp, #328]
   224e0:	ldr	x0, [x0]
   224e4:	str	x0, [sp, #168]
   224e8:	mov	w0, #0x1                   	// #1
   224ec:	str	w0, [sp, #128]
   224f0:	ldr	x27, [sp, #168]
   224f4:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   224f8:	add	x0, x0, #0xc3c
   224fc:	mov	x26, #0x0                   	// #0
   22500:	str	wzr, [sp, #120]
   22504:	str	x0, [sp, #200]
   22508:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   2250c:	add	x0, x0, #0x60f
   22510:	str	x0, [sp, #208]
   22514:	ldr	x0, [sp, #360]
   22518:	cbnz	x0, 227a8 <__sanitizer_set_death_callback@@Base+0x3730>
   2251c:	ldr	w0, [sp, #392]
   22520:	cbnz	w0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   22524:	ldr	x0, [sp, #264]
   22528:	cbz	x0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   2252c:	ldr	x4, [sp, #144]
   22530:	mov	x3, x22
   22534:	mov	x2, x24
   22538:	mov	x0, x21
   2253c:	mov	x1, #0x18                  	// #24
   22540:	bl	68b0 <__asan_backtrace_vector_grow@plt>
   22544:	cbz	x0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   22548:	mov	x1, #0xffffffffffffffff    	// #-1
   2254c:	stp	x1, xzr, [x0]
   22550:	mov	x3, x22
   22554:	ldr	x1, [sp, #144]
   22558:	str	xzr, [x0, #16]
   2255c:	mov	x2, x24
   22560:	mov	x0, x21
   22564:	bl	6980 <__asan_backtrace_vector_release@plt>
   22568:	cbz	w0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   2256c:	ldr	x0, [sp, #240]
   22570:	adrp	x3, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   22574:	ldr	x1, [sp, #264]
   22578:	add	x3, x3, #0xa28
   2257c:	mov	x2, #0x18                  	// #24
   22580:	str	x0, [sp, #120]
   22584:	bl	6720 <__asan_backtrace_qsort@plt>
   22588:	ldr	w0, [x21, #8]
   2258c:	ldr	x9, [x20, #16]
   22590:	ldr	x27, [sp, #264]
   22594:	cbnz	w0, 22ac4 <__sanitizer_set_death_callback@@Base+0x3a4c>
   22598:	add	x28, x23, #0x80
   2259c:	mov	x26, x28
   225a0:	b	22ae4 <__sanitizer_set_death_callback@@Base+0x3a6c>
   225a4:	mov	x0, x25
   225a8:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   225ac:	and	w0, w0, #0xff
   225b0:	b	223d0 <__sanitizer_set_death_callback@@Base+0x3358>
   225b4:	mov	w0, #0x0                   	// #0
   225b8:	b	22400 <__sanitizer_set_death_callback@@Base+0x3388>
   225bc:	sub	x1, x27, x26
   225c0:	mov	x0, x26
   225c4:	bl	6bb0 <__asan_internal_strnlen@plt>
   225c8:	add	x0, x0, #0x1
   225cc:	add	x26, x26, x0
   225d0:	ldr	x0, [sp, #304]
   225d4:	add	x0, x0, #0x1
   225d8:	str	x0, [sp, #304]
   225dc:	b	22448 <__sanitizer_set_death_callback@@Base+0x33d0>
   225e0:	ldp	x2, x3, [sp, #376]
   225e4:	lsl	x1, x1, #3
   225e8:	mov	x0, x21
   225ec:	bl	6930 <__asan_backtrace_alloc@plt>
   225f0:	str	x0, [sp, #312]
   225f4:	cbnz	x0, 22464 <__sanitizer_set_death_callback@@Base+0x33ec>
   225f8:	b	221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   225fc:	ldr	w0, [sp, #456]
   22600:	cbnz	w0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   22604:	ldr	x27, [sp, #312]
   22608:	mov	x0, x25
   2260c:	bl	20fdc <__sanitizer_set_death_callback@@Base+0x1f64>
   22610:	str	x0, [x27, x26]
   22614:	ldr	x0, [sp, #312]
   22618:	ldr	x0, [x0, x26]
   2261c:	add	x26, x26, #0x8
   22620:	cbnz	x0, 22468 <__sanitizer_set_death_callback@@Base+0x33f0>
   22624:	b	221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   22628:	sub	x1, x27, x26
   2262c:	mov	x0, x26
   22630:	bl	6bb0 <__asan_internal_strnlen@plt>
   22634:	add	x2, x0, #0x1
   22638:	add	x0, x26, x0
   2263c:	mov	x1, #0x1                   	// #1
   22640:	ldrsb	w3, [x0, x1]
   22644:	tbnz	w3, #31, 22688 <__sanitizer_set_death_callback@@Base+0x3610>
   22648:	add	x1, x2, x1
   2264c:	mov	x0, #0x1                   	// #1
   22650:	add	x26, x26, x1
   22654:	sub	x2, x26, #0x1
   22658:	ldrsb	w1, [x2, x0]
   2265c:	tbnz	w1, #31, 22690 <__sanitizer_set_death_callback@@Base+0x3618>
   22660:	add	x26, x26, x0
   22664:	mov	x0, #0x1                   	// #1
   22668:	sub	x2, x26, #0x1
   2266c:	ldrsb	w1, [x2, x0]
   22670:	tbnz	w1, #31, 22698 <__sanitizer_set_death_callback@@Base+0x3620>
   22674:	add	x26, x26, x0
   22678:	ldr	x0, [sp, #320]
   2267c:	add	x0, x0, #0x1
   22680:	str	x0, [sp, #320]
   22684:	b	22490 <__sanitizer_set_death_callback@@Base+0x3418>
   22688:	add	x1, x1, #0x1
   2268c:	b	22640 <__sanitizer_set_death_callback@@Base+0x35c8>
   22690:	add	x0, x0, #0x1
   22694:	b	22658 <__sanitizer_set_death_callback@@Base+0x35e0>
   22698:	add	x0, x0, #0x1
   2269c:	b	2266c <__sanitizer_set_death_callback@@Base+0x35f4>
   226a0:	cbnz	w0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   226a4:	mov	x0, x25
   226a8:	bl	20fdc <__sanitizer_set_death_callback@@Base+0x1f64>
   226ac:	mov	x27, x0
   226b0:	cbz	x0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   226b4:	mov	x0, x25
   226b8:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   226bc:	ldrb	w1, [x27]
   226c0:	cmp	w1, #0x2f
   226c4:	b.eq	226d8 <__sanitizer_set_death_callback@@Base+0x3660>  // b.none
   226c8:	cbnz	x0, 226f8 <__sanitizer_set_death_callback@@Base+0x3680>
   226cc:	ldr	x0, [sp, #152]
   226d0:	ldr	x4, [x0, #72]
   226d4:	cbnz	x4, 22714 <__sanitizer_set_death_callback@@Base+0x369c>
   226d8:	ldr	x0, [sp, #328]
   226dc:	str	x27, [x0, x28]
   226e0:	mov	x0, x25
   226e4:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   226e8:	mov	x0, x25
   226ec:	add	x28, x28, #0x8
   226f0:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   226f4:	b	224c0 <__sanitizer_set_death_callback@@Base+0x3448>
   226f8:	ldr	x2, [sp, #304]
   226fc:	sub	x1, x0, #0x1
   22700:	cmp	x1, x2
   22704:	b.cs	22790 <__sanitizer_set_death_callback@@Base+0x3718>  // b.hs, b.nlast
   22708:	ldr	x1, [sp, #312]
   2270c:	add	x0, x1, x0, lsl #3
   22710:	ldur	x4, [x0, #-8]
   22714:	mov	x0, x4
   22718:	str	x4, [sp, #168]
   2271c:	bl	6850 <__asan_internal_strlen@plt>
   22720:	mov	x26, x0
   22724:	mov	x0, x27
   22728:	bl	6850 <__asan_internal_strlen@plt>
   2272c:	add	x1, x26, x0
   22730:	ldp	x2, x3, [sp, #376]
   22734:	add	x1, x1, #0x2
   22738:	str	x0, [sp, #120]
   2273c:	mov	x0, x21
   22740:	bl	6930 <__asan_backtrace_alloc@plt>
   22744:	str	x0, [sp, #128]
   22748:	cbz	x0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   2274c:	ldr	x4, [sp, #168]
   22750:	mov	x2, x26
   22754:	mov	x1, x4
   22758:	bl	6840 <__asan_internal_memcpy@plt>
   2275c:	ldp	x1, x3, [sp, #120]
   22760:	mov	w0, #0x2f                  	// #47
   22764:	str	x3, [sp, #120]
   22768:	strb	w0, [x3, x26]
   2276c:	add	x0, x26, #0x1
   22770:	add	x2, x1, #0x1
   22774:	add	x0, x3, x0
   22778:	mov	x1, x27
   2277c:	bl	6840 <__asan_internal_memcpy@plt>
   22780:	ldr	x0, [sp, #328]
   22784:	ldr	x3, [sp, #120]
   22788:	str	x3, [x0, x28]
   2278c:	b	226e0 <__sanitizer_set_death_callback@@Base+0x3668>
   22790:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   22794:	add	x1, x1, #0xe2c
   22798:	b	22358 <__sanitizer_set_death_callback@@Base+0x32e0>
   2279c:	adrp	x0, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   227a0:	add	x0, x0, #0x60f
   227a4:	b	224e4 <__sanitizer_set_death_callback@@Base+0x346c>
   227a8:	mov	x0, x19
   227ac:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   227b0:	ldr	w2, [sp, #292]
   227b4:	and	w1, w0, #0xff
   227b8:	cmp	w2, w0, uxtb
   227bc:	b.hi	2282c <__sanitizer_set_death_callback@@Base+0x37b4>  // b.pmore
   227c0:	ldr	w5, [sp, #288]
   227c4:	sub	w1, w1, w2
   227c8:	ldr	w0, [sp, #120]
   227cc:	ldr	w3, [sp, #276]
   227d0:	ldr	x7, [sp, #144]
   227d4:	udiv	w2, w1, w5
   227d8:	add	w4, w2, w0
   227dc:	ldr	w0, [sp, #280]
   227e0:	msub	w1, w2, w5, w1
   227e4:	ldr	w2, [sp, #284]
   227e8:	ldp	x5, x6, [sp, #376]
   227ec:	mul	w3, w4, w3
   227f0:	add	w1, w1, w2
   227f4:	udiv	w3, w3, w0
   227f8:	add	x26, x26, x3
   227fc:	udiv	w3, w4, w0
   22800:	msub	w0, w3, w0, w4
   22804:	str	w0, [sp, #120]
   22808:	ldr	w0, [sp, #128]
   2280c:	add	w4, w0, w1
   22810:	str	w4, [sp, #128]
   22814:	mov	x3, x27
   22818:	mov	x2, x26
   2281c:	add	x1, x23, #0x10
   22820:	mov	x0, x21
   22824:	bl	20b18 <__sanitizer_set_death_callback@@Base+0x1aa0>
   22828:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   2282c:	cbnz	w1, 22980 <__sanitizer_set_death_callback@@Base+0x3908>
   22830:	mov	x0, x19
   22834:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   22838:	mov	x28, x0
   2283c:	mov	x0, x19
   22840:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   22844:	and	w2, w0, #0xff
   22848:	sub	w2, w2, #0x1
   2284c:	cmp	w2, #0x3
   22850:	b.hi	2296c <__sanitizer_set_death_callback@@Base+0x38f4>  // b.pmore
   22854:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   22858:	add	x0, x0, #0xc34
   2285c:	ldrh	w0, [x0, w2, uxtw #1]
   22860:	adr	x1, 2286c <__sanitizer_set_death_callback@@Base+0x37f4>
   22864:	add	x0, x1, w0, sxth #2
   22868:	br	x0
   2286c:	ldr	x0, [sp, #152]
   22870:	ldr	w1, [x0, #48]
   22874:	mov	x0, x19
   22878:	bl	20e24 <__sanitizer_set_death_callback@@Base+0x1dac>
   2287c:	mov	x26, x0
   22880:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   22884:	mov	x0, x19
   22888:	bl	20fdc <__sanitizer_set_death_callback@@Base+0x1f64>
   2288c:	mov	x27, x0
   22890:	cbz	x0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   22894:	mov	x0, x19
   22898:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2289c:	mov	x28, x0
   228a0:	mov	x0, x19
   228a4:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   228a8:	mov	x0, x19
   228ac:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   228b0:	ldrb	w0, [x27]
   228b4:	cmp	w0, #0x2f
   228b8:	b.eq	22514 <__sanitizer_set_death_callback@@Base+0x349c>  // b.none
   228bc:	cbnz	w28, 22944 <__sanitizer_set_death_callback@@Base+0x38cc>
   228c0:	ldr	x0, [sp, #152]
   228c4:	ldr	x4, [x0, #72]
   228c8:	mov	x0, x4
   228cc:	str	x4, [sp, #224]
   228d0:	bl	6850 <__asan_internal_strlen@plt>
   228d4:	mov	x28, x0
   228d8:	mov	x0, x27
   228dc:	bl	6850 <__asan_internal_strlen@plt>
   228e0:	add	x1, x28, x0
   228e4:	ldp	x2, x3, [sp, #376]
   228e8:	add	x1, x1, #0x2
   228ec:	str	x0, [sp, #192]
   228f0:	mov	x0, x21
   228f4:	bl	6930 <__asan_backtrace_alloc@plt>
   228f8:	str	x0, [sp, #216]
   228fc:	cbz	x0, 221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   22900:	ldr	x4, [sp, #224]
   22904:	mov	x2, x28
   22908:	mov	x1, x4
   2290c:	bl	6840 <__asan_internal_memcpy@plt>
   22910:	ldr	x3, [sp, #216]
   22914:	mov	w0, #0x2f                  	// #47
   22918:	ldr	x1, [sp, #192]
   2291c:	str	x3, [sp, #192]
   22920:	strb	w0, [x3, x28]
   22924:	add	x0, x28, #0x1
   22928:	add	x2, x1, #0x1
   2292c:	add	x0, x3, x0
   22930:	mov	x1, x27
   22934:	bl	6840 <__asan_internal_memcpy@plt>
   22938:	ldr	x3, [sp, #192]
   2293c:	mov	x27, x3
   22940:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   22944:	ldr	x0, [sp, #304]
   22948:	sub	w28, w28, #0x1
   2294c:	cmp	x28, x0
   22950:	b.cs	22960 <__sanitizer_set_death_callback@@Base+0x38e8>  // b.hs, b.nlast
   22954:	ldr	x0, [sp, #312]
   22958:	ldr	x4, [x0, x28, lsl #3]
   2295c:	b	228c8 <__sanitizer_set_death_callback@@Base+0x3850>
   22960:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   22964:	add	x1, x1, #0xe62
   22968:	b	22358 <__sanitizer_set_death_callback@@Base+0x32e0>
   2296c:	sub	x1, x28, #0x1
   22970:	mov	x0, x19
   22974:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   22978:	cbnz	w0, 22514 <__sanitizer_set_death_callback@@Base+0x349c>
   2297c:	b	221f0 <__sanitizer_set_death_callback@@Base+0x3178>
   22980:	sub	w1, w1, #0x1
   22984:	cmp	w1, #0xb
   22988:	b.hi	22a88 <__sanitizer_set_death_callback@@Base+0x3a10>  // b.pmore
   2298c:	ldr	x0, [sp, #200]
   22990:	ldrh	w0, [x0, w1, uxtw #1]
   22994:	adr	x1, 229a0 <__sanitizer_set_death_callback@@Base+0x3928>
   22998:	add	x0, x1, w0, sxth #2
   2299c:	br	x0
   229a0:	ldr	w4, [sp, #128]
   229a4:	ldr	x7, [sp, #144]
   229a8:	ldp	x5, x6, [sp, #376]
   229ac:	b	22814 <__sanitizer_set_death_callback@@Base+0x379c>
   229b0:	mov	x0, x19
   229b4:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   229b8:	ldr	w1, [sp, #120]
   229bc:	ldr	w2, [sp, #280]
   229c0:	add	x0, x0, w1, uxtw
   229c4:	ldr	w1, [sp, #276]
   229c8:	mul	x1, x1, x0
   229cc:	udiv	x1, x1, x2
   229d0:	add	x26, x26, x1
   229d4:	udiv	x1, x0, x2
   229d8:	msub	w0, w1, w2, w0
   229dc:	str	w0, [sp, #120]
   229e0:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   229e4:	mov	x0, x19
   229e8:	bl	20f2c <__sanitizer_set_death_callback@@Base+0x1eb4>
   229ec:	ldr	w1, [sp, #128]
   229f0:	add	w0, w1, w0
   229f4:	str	w0, [sp, #128]
   229f8:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   229fc:	mov	x0, x19
   22a00:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   22a04:	cbz	x0, 22abc <__sanitizer_set_death_callback@@Base+0x3a44>
   22a08:	ldr	x2, [sp, #320]
   22a0c:	sub	x1, x0, #0x1
   22a10:	cmp	x1, x2
   22a14:	b.cc	22a24 <__sanitizer_set_death_callback@@Base+0x39ac>  // b.lo, b.ul, b.last
   22a18:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   22a1c:	add	x1, x1, #0xe91
   22a20:	b	22358 <__sanitizer_set_death_callback@@Base+0x32e0>
   22a24:	ldr	x1, [sp, #328]
   22a28:	add	x0, x1, x0, lsl #3
   22a2c:	ldur	x27, [x0, #-8]
   22a30:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   22a34:	ldr	w1, [sp, #288]
   22a38:	mov	w0, #0xff                  	// #255
   22a3c:	sub	w0, w0, w2
   22a40:	ldr	w2, [sp, #280]
   22a44:	udiv	w0, w0, w1
   22a48:	ldr	w1, [sp, #120]
   22a4c:	add	w0, w0, w1
   22a50:	ldr	w1, [sp, #276]
   22a54:	mul	w1, w0, w1
   22a58:	udiv	w1, w1, w2
   22a5c:	add	x26, x26, x1
   22a60:	udiv	w1, w0, w2
   22a64:	b	229d8 <__sanitizer_set_death_callback@@Base+0x3960>
   22a68:	mov	x0, x19
   22a6c:	bl	20da0 <__sanitizer_set_death_callback@@Base+0x1d28>
   22a70:	add	x26, x26, w0, uxth
   22a74:	str	wzr, [sp, #120]
   22a78:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   22a7c:	mov	x0, x19
   22a80:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   22a84:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   22a88:	ldr	x0, [sp, #296]
   22a8c:	ldrb	w28, [x0, w1, uxtw]
   22a90:	cbz	w28, 22514 <__sanitizer_set_death_callback@@Base+0x349c>
   22a94:	mov	x0, x19
   22a98:	sub	w28, w28, #0x1
   22a9c:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   22aa0:	b	22a90 <__sanitizer_set_death_callback@@Base+0x3a18>
   22aa4:	mov	w0, #0x1                   	// #1
   22aa8:	mov	x26, #0x0                   	// #0
   22aac:	str	wzr, [sp, #120]
   22ab0:	str	w0, [sp, #128]
   22ab4:	ldr	x27, [sp, #168]
   22ab8:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   22abc:	ldr	x27, [sp, #208]
   22ac0:	b	22514 <__sanitizer_set_death_callback@@Base+0x349c>
   22ac4:	mov	x0, x19
   22ac8:	mov	x2, #0x20                  	// #32
   22acc:	mov	w1, #0x0                   	// #0
   22ad0:	str	x9, [sp, #128]
   22ad4:	bl	68d0 <__asan_internal_memset@plt>
   22ad8:	mov	x28, x19
   22adc:	ldr	x9, [sp, #128]
   22ae0:	mov	x26, #0x0                   	// #0
   22ae4:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   22ae8:	add	x0, x0, #0xd58
   22aec:	str	x0, [sp, #400]
   22af0:	ldr	x0, [x23, #56]
   22af4:	str	x0, [sp, #408]
   22af8:	ldr	x0, [x9]
   22afc:	str	x0, [sp, #416]
   22b00:	ldr	x0, [x9, #8]
   22b04:	str	x0, [sp, #424]
   22b08:	ldr	w0, [x23, #120]
   22b0c:	str	w0, [sp, #432]
   22b10:	stp	x24, x22, [sp, #440]
   22b14:	str	wzr, [sp, #456]
   22b18:	ldr	x0, [sp, #424]
   22b1c:	cbnz	x0, 22b80 <__sanitizer_set_death_callback@@Base+0x3b08>
   22b20:	ldr	x25, [x28, #24]
   22b24:	cbz	x25, 22bb4 <__sanitizer_set_death_callback@@Base+0x3b3c>
   22b28:	mov	x3, x22
   22b2c:	mov	x2, x24
   22b30:	cbnz	x26, 22bc0 <__sanitizer_set_death_callback@@Base+0x3b48>
   22b34:	mov	x1, x19
   22b38:	mov	x0, x21
   22b3c:	bl	6980 <__asan_backtrace_vector_release@plt>
   22b40:	cbz	w0, 22bb4 <__sanitizer_set_death_callback@@Base+0x3b3c>
   22b44:	ldr	x19, [x28]
   22b48:	adrp	x3, 21000 <__sanitizer_set_death_callback@@Base+0x1f88>
   22b4c:	mov	x1, x25
   22b50:	add	x3, x3, #0x784
   22b54:	mov	x0, x19
   22b58:	mov	x2, #0x18                  	// #24
   22b5c:	bl	6720 <__asan_backtrace_qsort@plt>
   22b60:	ldr	x1, [sp, #160]
   22b64:	mov	x0, x21
   22b68:	mov	x3, x22
   22b6c:	mov	x2, x24
   22b70:	bl	208ec <__sanitizer_set_death_callback@@Base+0x1874>
   22b74:	mov	w0, #0x1                   	// #1
   22b78:	ldr	x1, [sp, #120]
   22b7c:	b	22238 <__sanitizer_set_death_callback@@Base+0x31c0>
   22b80:	ldr	x5, [sp, #160]
   22b84:	stp	x28, x28, [sp]
   22b88:	mov	x2, x9
   22b8c:	mov	x7, x22
   22b90:	mov	x6, x24
   22b94:	mov	x4, x25
   22b98:	mov	x1, x23
   22b9c:	mov	x0, x21
   22ba0:	mov	x3, #0x0                   	// #0
   22ba4:	str	x9, [sp, #128]
   22ba8:	bl	21aac <__sanitizer_set_death_callback@@Base+0x2a34>
   22bac:	ldr	x9, [sp, #128]
   22bb0:	cbnz	w0, 22b18 <__sanitizer_set_death_callback@@Base+0x3aa0>
   22bb4:	mov	x25, #0x0                   	// #0
   22bb8:	mov	x19, #0x0                   	// #0
   22bbc:	b	22b60 <__sanitizer_set_death_callback@@Base+0x3ae8>
   22bc0:	mov	x1, x26
   22bc4:	mov	x0, x21
   22bc8:	bl	6cf0 <__asan_backtrace_vector_finish@plt>
   22bcc:	mov	x19, x0
   22bd0:	cbz	x0, 22bb4 <__sanitizer_set_death_callback@@Base+0x3b3c>
   22bd4:	str	xzr, [x26, #24]
   22bd8:	b	22b48 <__sanitizer_set_death_callback@@Base+0x3ad0>
   22bdc:	ldr	x2, [sp, #112]
   22be0:	add	x2, x2, #0x70
   22be4:	stlr	x27, [x2]
   22be8:	ldr	x2, [sp, #112]
   22bec:	add	x2, x2, #0x78
   22bf0:	stlr	x19, [x2]
   22bf4:	ldr	x2, [sp, #112]
   22bf8:	add	x2, x2, #0x80
   22bfc:	stlr	x25, [x2]
   22c00:	ldr	x2, [sp, #112]
   22c04:	add	x2, x2, #0x68
   22c08:	stlr	x1, [x2]
   22c0c:	b	2224c <__sanitizer_set_death_callback@@Base+0x31d4>
   22c10:	ldr	x0, [x20, #16]
   22c14:	adrp	x4, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   22c18:	mov	x3, #0x18                  	// #24
   22c1c:	add	x4, x4, #0x688
   22c20:	ldr	x2, [x0, #112]
   22c24:	ldr	x0, [sp, #184]
   22c28:	bl	6c60 <bsearch@plt>
   22c2c:	mov	x19, x0
   22c30:	ldr	x0, [x20, #16]
   22c34:	cbnz	x19, 22ce4 <__sanitizer_set_death_callback@@Base+0x3c6c>
   22c38:	ldr	x1, [x0, #80]
   22c3c:	cbnz	x1, 22cd0 <__sanitizer_set_death_callback@@Base+0x3c58>
   22c40:	ldr	x25, [x0, #64]
   22c44:	cbz	x25, 22cc8 <__sanitizer_set_death_callback@@Base+0x3c50>
   22c48:	ldrb	w1, [x25]
   22c4c:	cmp	w1, #0x2f
   22c50:	b.eq	22cc8 <__sanitizer_set_death_callback@@Base+0x3c50>  // b.none
   22c54:	ldr	x0, [x0, #72]
   22c58:	cbz	x0, 22cc8 <__sanitizer_set_death_callback@@Base+0x3c50>
   22c5c:	mov	x0, x25
   22c60:	bl	6850 <__asan_internal_strlen@plt>
   22c64:	mov	x23, x0
   22c68:	ldr	x0, [x20, #16]
   22c6c:	ldr	x26, [x0, #72]
   22c70:	mov	x0, x26
   22c74:	bl	6850 <__asan_internal_strlen@plt>
   22c78:	add	x1, x23, x0
   22c7c:	mov	x19, x0
   22c80:	mov	x3, x22
   22c84:	mov	x0, x21
   22c88:	mov	x2, x24
   22c8c:	add	x1, x1, #0x2
   22c90:	bl	6930 <__asan_backtrace_alloc@plt>
   22c94:	mov	x21, x0
   22c98:	cbz	x0, 2227c <__sanitizer_set_death_callback@@Base+0x3204>
   22c9c:	mov	x2, x19
   22ca0:	mov	x1, x26
   22ca4:	bl	6840 <__asan_internal_memcpy@plt>
   22ca8:	mov	x1, x25
   22cac:	mov	x25, x21
   22cb0:	mov	w0, #0x2f                  	// #47
   22cb4:	strb	w0, [x21, x19]
   22cb8:	add	x19, x19, #0x1
   22cbc:	add	x2, x23, #0x1
   22cc0:	add	x0, x21, x19
   22cc4:	bl	6840 <__asan_internal_memcpy@plt>
   22cc8:	ldr	x0, [x20, #16]
   22ccc:	str	x25, [x0, #80]
   22cd0:	ldr	x0, [x20, #16]
   22cd4:	mov	x4, #0x0                   	// #0
   22cd8:	mov	w3, #0x0                   	// #0
   22cdc:	ldr	x2, [x0, #80]
   22ce0:	b	22dbc <__sanitizer_set_death_callback@@Base+0x3d44>
   22ce4:	ldr	x2, [x0, #128]
   22ce8:	cbnz	x2, 22cfc <__sanitizer_set_death_callback@@Base+0x3c84>
   22cec:	ldr	w3, [x19, #16]
   22cf0:	mov	x4, #0x0                   	// #0
   22cf4:	ldr	x2, [x19, #8]
   22cf8:	b	22dbc <__sanitizer_set_death_callback@@Base+0x3d44>
   22cfc:	ldr	x1, [x0, #120]
   22d00:	adrp	x4, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   22d04:	ldr	x0, [sp, #184]
   22d08:	add	x4, x4, #0x638
   22d0c:	mov	x3, #0x18                  	// #24
   22d10:	bl	6c60 <bsearch@plt>
   22d14:	mov	x1, x0
   22d18:	cbz	x0, 22cec <__sanitizer_set_death_callback@@Base+0x3c74>
   22d1c:	ldr	x0, [x20, #16]
   22d20:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   22d24:	movk	x5, #0xaaab
   22d28:	ldp	x3, x4, [x0, #120]
   22d2c:	ldr	x0, [sp, #232]
   22d30:	sub	x2, x1, x3
   22d34:	asr	x2, x2, #3
   22d38:	mul	x2, x2, x5
   22d3c:	add	x2, x2, #0x1
   22d40:	cmp	x2, x4
   22d44:	b.cs	22d60 <__sanitizer_set_death_callback@@Base+0x3ce8>  // b.hs, b.nlast
   22d48:	ldr	x2, [x1, #24]
   22d4c:	cmp	x2, x0
   22d50:	b.hi	22d60 <__sanitizer_set_death_callback@@Base+0x3ce8>  // b.pmore
   22d54:	ldr	x2, [x1, #32]
   22d58:	cmp	x0, x2
   22d5c:	b.cc	22da0 <__sanitizer_set_death_callback@@Base+0x3d28>  // b.lo, b.ul, b.last
   22d60:	ldr	x2, [sp, #136]
   22d64:	add	x5, sp, #0x150
   22d68:	ldr	x20, [x1, #16]
   22d6c:	add	x4, sp, #0x190
   22d70:	ldr	x1, [x19, #8]
   22d74:	str	x1, [sp, #400]
   22d78:	ldr	w1, [x19, #16]
   22d7c:	mov	x3, x22
   22d80:	str	w1, [sp, #336]
   22d84:	mov	x1, x20
   22d88:	bl	206c8 <__sanitizer_set_death_callback@@Base+0x1650>
   22d8c:	cbnz	w0, 22288 <__sanitizer_set_death_callback@@Base+0x3210>
   22d90:	ldr	w3, [sp, #336]
   22d94:	ldr	x4, [x20]
   22d98:	ldr	x2, [sp, #400]
   22d9c:	b	22dbc <__sanitizer_set_death_callback@@Base+0x3d44>
   22da0:	add	x1, x1, #0x18
   22da4:	b	22d30 <__sanitizer_set_death_callback@@Base+0x3cb8>
   22da8:	cmn	x1, #0x1
   22dac:	b.ne	22c10 <__sanitizer_set_death_callback@@Base+0x3b98>  // b.any
   22db0:	mov	x4, #0x0                   	// #0
   22db4:	mov	w3, #0x0                   	// #0
   22db8:	mov	x2, #0x0                   	// #0
   22dbc:	ldr	x5, [sp, #136]
   22dc0:	mov	x0, x22
   22dc4:	ldr	x1, [sp, #232]
   22dc8:	blr	x5
   22dcc:	b	22288 <__sanitizer_set_death_callback@@Base+0x3210>
   22dd0:	stp	x29, x30, [sp, #-96]!
   22dd4:	mov	x29, sp
   22dd8:	stp	x19, x20, [sp, #16]
   22ddc:	mov	x19, x0
   22de0:	ldr	w0, [x0, #8]
   22de4:	stp	x21, x22, [sp, #32]
   22de8:	mov	x21, x2
   22dec:	mov	x22, x4
   22df0:	stp	x23, x24, [sp, #48]
   22df4:	mov	x23, x1
   22df8:	mov	x24, x3
   22dfc:	str	x25, [sp, #64]
   22e00:	cbnz	w0, 22e7c <__sanitizer_set_death_callback@@Base+0x3e04>
   22e04:	ldr	x20, [x19, #32]
   22e08:	add	x25, sp, #0x5c
   22e0c:	cbnz	x20, 22e2c <__sanitizer_set_death_callback@@Base+0x3db4>
   22e10:	mov	x1, x23
   22e14:	mov	x0, x22
   22e18:	mov	x4, #0x0                   	// #0
   22e1c:	mov	w3, #0x0                   	// #0
   22e20:	mov	x2, #0x0                   	// #0
   22e24:	blr	x21
   22e28:	b	22e5c <__sanitizer_set_death_callback@@Base+0x3de4>
   22e2c:	mov	x6, x25
   22e30:	mov	x5, x22
   22e34:	mov	x4, x24
   22e38:	mov	x3, x21
   22e3c:	mov	x2, x23
   22e40:	mov	x1, x20
   22e44:	mov	x0, x19
   22e48:	bl	22098 <__sanitizer_set_death_callback@@Base+0x3020>
   22e4c:	cbnz	w0, 22e5c <__sanitizer_set_death_callback@@Base+0x3de4>
   22e50:	ldr	w0, [sp, #92]
   22e54:	cbz	w0, 22e74 <__sanitizer_set_death_callback@@Base+0x3dfc>
   22e58:	mov	w0, #0x0                   	// #0
   22e5c:	ldp	x19, x20, [sp, #16]
   22e60:	ldp	x21, x22, [sp, #32]
   22e64:	ldp	x23, x24, [sp, #48]
   22e68:	ldr	x25, [sp, #64]
   22e6c:	ldp	x29, x30, [sp], #96
   22e70:	ret
   22e74:	ldr	x20, [x20]
   22e78:	b	22e0c <__sanitizer_set_death_callback@@Base+0x3d94>
   22e7c:	add	x20, x19, #0x20
   22e80:	add	x25, sp, #0x5c
   22e84:	ldar	x20, [x20]
   22e88:	cbz	x20, 22e10 <__sanitizer_set_death_callback@@Base+0x3d98>
   22e8c:	mov	x6, x25
   22e90:	mov	x5, x22
   22e94:	mov	x4, x24
   22e98:	mov	x3, x21
   22e9c:	mov	x2, x23
   22ea0:	mov	x1, x20
   22ea4:	mov	x0, x19
   22ea8:	bl	22098 <__sanitizer_set_death_callback@@Base+0x3020>
   22eac:	cbnz	w0, 22e5c <__sanitizer_set_death_callback@@Base+0x3de4>
   22eb0:	ldr	w0, [sp, #92]
   22eb4:	cbz	w0, 22e84 <__sanitizer_set_death_callback@@Base+0x3e0c>
   22eb8:	b	22e58 <__sanitizer_set_death_callback@@Base+0x3de0>

0000000000022ebc <__asan_backtrace_dwarf_add@@Base>:
   22ebc:	sub	sp, sp, #0x290
   22ec0:	stp	x29, x30, [sp, #48]
   22ec4:	add	x29, sp, #0x30
   22ec8:	stp	x19, x20, [sp, #64]
   22ecc:	mov	x20, x0
   22ed0:	add	x0, sp, #0x150
   22ed4:	stp	x21, x22, [sp, #80]
   22ed8:	add	x19, sp, #0x138
   22edc:	add	x21, sp, #0x250
   22ee0:	stp	x23, x24, [sp, #96]
   22ee4:	add	x24, sp, #0x1d0
   22ee8:	stp	x25, x26, [sp, #112]
   22eec:	add	x25, sp, #0x190
   22ef0:	stp	x27, x28, [sp, #128]
   22ef4:	str	x2, [sp, #176]
   22ef8:	mov	x2, #0x18                  	// #24
   22efc:	stp	x1, x3, [sp, #192]
   22f00:	mov	w1, #0x0                   	// #0
   22f04:	stp	x6, x7, [sp, #208]
   22f08:	stp	x4, x5, [sp, #256]
   22f0c:	ldr	x22, [sp, #704]
   22f10:	ldr	x23, [sp, #712]
   22f14:	bl	68d0 <__asan_internal_memset@plt>
   22f18:	mov	x2, #0x18                  	// #24
   22f1c:	mov	w1, #0x0                   	// #0
   22f20:	add	x0, sp, #0x170
   22f24:	bl	68d0 <__asan_internal_memset@plt>
   22f28:	adrp	x0, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   22f2c:	add	x0, x0, #0xd58
   22f30:	stp	xzr, x0, [sp, #392]
   22f34:	mov	x2, #0x18                  	// #24
   22f38:	mov	w1, #0x0                   	// #0
   22f3c:	ldr	x0, [sp, #176]
   22f40:	stp	x0, x0, [sp, #408]
   22f44:	ldr	x0, [sp, #200]
   22f48:	str	x0, [sp, #424]
   22f4c:	ldr	w0, [sp, #688]
   22f50:	str	xzr, [sp, #360]
   22f54:	str	w0, [sp, #432]
   22f58:	mov	x0, x19
   22f5c:	stp	x22, x23, [sp, #440]
   22f60:	str	wzr, [sp, #456]
   22f64:	bl	68d0 <__asan_internal_memset@plt>
   22f68:	stp	xzr, xzr, [sp, #144]
   22f6c:	str	x19, [sp, #272]
   22f70:	ldr	x0, [sp, #424]
   22f74:	ldr	w26, [sp, #456]
   22f78:	cbnz	x0, 22fd8 <__asan_backtrace_dwarf_add@@Base+0x11c>
   22f7c:	cbnz	w26, 23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   22f80:	add	x0, sp, #0x200
   22f84:	mov	x3, x23
   22f88:	mov	x2, x22
   22f8c:	ldp	x0, x1, [x0, #-200]
   22f90:	stp	x0, x1, [sp, #368]
   22f94:	ldr	x0, [sp, #328]
   22f98:	str	x0, [sp, #384]
   22f9c:	ldr	x0, [sp, #144]
   22fa0:	add	x1, sp, #0x150
   22fa4:	str	x0, [sp, #392]
   22fa8:	mov	x0, x20
   22fac:	bl	6980 <__asan_backtrace_vector_release@plt>
   22fb0:	cbnz	w0, 234bc <__asan_backtrace_dwarf_add@@Base+0x600>
   22fb4:	mov	w0, #0x0                   	// #0
   22fb8:	ldp	x29, x30, [sp, #48]
   22fbc:	ldp	x19, x20, [sp, #64]
   22fc0:	ldp	x21, x22, [sp, #80]
   22fc4:	ldp	x23, x24, [sp, #96]
   22fc8:	ldp	x25, x26, [sp, #112]
   22fcc:	ldp	x27, x28, [sp, #128]
   22fd0:	add	sp, sp, #0x290
   22fd4:	ret
   22fd8:	cbnz	w26, 23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   22fdc:	ldr	x0, [sp, #416]
   22fe0:	str	x0, [sp, #224]
   22fe4:	mov	x0, x25
   22fe8:	bl	20cf8 <__sanitizer_set_death_callback@@Base+0x1c80>
   22fec:	mov	w1, w0
   22ff0:	str	x1, [sp, #160]
   22ff4:	mov	x1, #0xffffffff            	// #4294967295
   22ff8:	cmp	x1, w0, uxtw
   22ffc:	b.ne	23010 <__asan_backtrace_dwarf_add@@Base+0x154>  // b.any
   23000:	mov	x0, x25
   23004:	mov	w26, #0x1                   	// #1
   23008:	bl	20d3c <__sanitizer_set_death_callback@@Base+0x1cc4>
   2300c:	str	x0, [sp, #160]
   23010:	ldp	x0, x1, [x25]
   23014:	stp	x0, x1, [x24]
   23018:	ldp	x0, x1, [x25, #16]
   2301c:	stp	x0, x1, [x24, #16]
   23020:	ldp	x0, x1, [x25, #32]
   23024:	stp	x0, x1, [x24, #32]
   23028:	ldp	x0, x1, [x25, #48]
   2302c:	stp	x0, x1, [x24, #48]
   23030:	ldr	x0, [sp, #160]
   23034:	str	x0, [sp, #488]
   23038:	mov	x1, x0
   2303c:	mov	x0, x25
   23040:	bl	20c90 <__sanitizer_set_death_callback@@Base+0x1c18>
   23044:	cbz	w0, 23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   23048:	mov	x0, x24
   2304c:	bl	20da0 <__sanitizer_set_death_callback@@Base+0x1d28>
   23050:	and	w0, w0, #0xffff
   23054:	str	w0, [sp, #248]
   23058:	sub	w0, w0, #0x2
   2305c:	cmp	w0, #0x2
   23060:	b.ls	23110 <__asan_backtrace_dwarf_add@@Base+0x254>  // b.plast
   23064:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23068:	mov	x0, x24
   2306c:	add	x1, x1, #0xebc
   23070:	bl	20898 <__sanitizer_set_death_callback@@Base+0x1820>
   23074:	ldr	x0, [sp, #144]
   23078:	cbz	x0, 230e4 <__asan_backtrace_dwarf_add@@Base+0x228>
   2307c:	ldr	x21, [sp, #312]
   23080:	mov	x19, #0x0                   	// #0
   23084:	ldr	x1, [x21, x19, lsl #3]
   23088:	mov	x3, x23
   2308c:	mov	x2, x22
   23090:	mov	x0, x20
   23094:	add	x1, x1, #0x58
   23098:	bl	2094c <__sanitizer_set_death_callback@@Base+0x18d4>
   2309c:	ldr	x1, [x21, x19, lsl #3]
   230a0:	mov	x0, x20
   230a4:	mov	x4, x23
   230a8:	mov	x3, x22
   230ac:	mov	x2, #0x88                  	// #136
   230b0:	add	x19, x19, #0x1
   230b4:	bl	6c20 <__asan_backtrace_free@plt>
   230b8:	ldr	x0, [sp, #144]
   230bc:	cmp	x0, x19
   230c0:	b.ne	23084 <__asan_backtrace_dwarf_add@@Base+0x1c8>  // b.any
   230c4:	ldp	x1, x0, [sp, #320]
   230c8:	mov	x3, x23
   230cc:	mov	x2, x22
   230d0:	add	x0, x0, x1
   230d4:	add	x1, sp, #0x138
   230d8:	stp	xzr, x0, [sp, #320]
   230dc:	mov	x0, x20
   230e0:	bl	6980 <__asan_backtrace_vector_release@plt>
   230e4:	ldr	x0, [sp, #360]
   230e8:	cbz	x0, 22fb4 <__asan_backtrace_dwarf_add@@Base+0xf8>
   230ec:	ldp	x1, x0, [sp, #344]
   230f0:	mov	x3, x23
   230f4:	mov	x2, x22
   230f8:	add	x0, x0, x1
   230fc:	add	x1, sp, #0x150
   23100:	stp	xzr, x0, [sp, #344]
   23104:	mov	x0, x20
   23108:	bl	6980 <__asan_backtrace_vector_release@plt>
   2310c:	b	22fb4 <__asan_backtrace_dwarf_add@@Base+0xf8>
   23110:	ldr	x4, [sp, #272]
   23114:	mov	x3, x23
   23118:	mov	x2, x22
   2311c:	mov	x0, x20
   23120:	mov	x1, #0x8                   	// #8
   23124:	bl	68b0 <__asan_backtrace_vector_grow@plt>
   23128:	mov	x27, x0
   2312c:	cbz	x0, 23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   23130:	mov	x3, x23
   23134:	mov	x2, x22
   23138:	mov	x0, x20
   2313c:	mov	x1, #0x88                  	// #136
   23140:	bl	6930 <__asan_backtrace_alloc@plt>
   23144:	mov	x19, x0
   23148:	cbz	x0, 23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   2314c:	ldr	x0, [sp, #144]
   23150:	str	x19, [x27]
   23154:	mov	x2, #0x10                  	// #16
   23158:	mov	w1, #0x0                   	// #0
   2315c:	add	x0, x0, #0x1
   23160:	str	x0, [sp, #144]
   23164:	add	x0, x19, #0x58
   23168:	str	x0, [sp, #232]
   2316c:	bl	68d0 <__asan_internal_memset@plt>
   23170:	mov	w1, w26
   23174:	mov	x0, x24
   23178:	bl	20d80 <__sanitizer_set_death_callback@@Base+0x1d08>
   2317c:	stp	xzr, xzr, [x19, #88]
   23180:	ldr	x1, [sp, #216]
   23184:	cmp	x1, x0
   23188:	b.hi	231a4 <__asan_backtrace_dwarf_add@@Base+0x2e8>  // b.pmore
   2318c:	mov	x0, x23
   23190:	mov	w2, #0x0                   	// #0
   23194:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23198:	add	x1, x1, #0xed7
   2319c:	blr	x22
   231a0:	b	23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   231a4:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   231a8:	add	x1, x1, #0xef2
   231ac:	str	x1, [sp, #528]
   231b0:	mov	x27, #0x0                   	// #0
   231b4:	ldr	x1, [sp, #208]
   231b8:	str	x1, [sp, #536]
   231bc:	str	x22, [sp, #568]
   231c0:	add	x1, x1, x0
   231c4:	str	x1, [sp, #544]
   231c8:	ldr	x1, [sp, #216]
   231cc:	str	x23, [sp, #576]
   231d0:	str	wzr, [sp, #584]
   231d4:	sub	x0, x1, x0
   231d8:	str	x0, [sp, #552]
   231dc:	ldr	w0, [sp, #688]
   231e0:	str	w0, [sp, #560]
   231e4:	add	x0, sp, #0x200
   231e8:	ldp	x0, x1, [x0, #16]
   231ec:	stp	x0, x1, [x21]
   231f0:	add	x0, sp, #0x200
   231f4:	ldp	x0, x1, [x0, #32]
   231f8:	stp	x0, x1, [x21, #16]
   231fc:	add	x0, sp, #0x200
   23200:	ldp	x0, x1, [x0, #48]
   23204:	stp	x0, x1, [x21, #32]
   23208:	add	x0, sp, #0x200
   2320c:	ldp	x0, x1, [x0, #64]
   23210:	stp	x0, x1, [x21, #48]
   23214:	mov	x0, x21
   23218:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2321c:	ldr	w1, [sp, #648]
   23220:	cbnz	x0, 23320 <__asan_backtrace_dwarf_add@@Base+0x464>
   23224:	cbnz	w1, 23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   23228:	cbz	x27, 23400 <__asan_backtrace_dwarf_add@@Base+0x544>
   2322c:	lsl	x28, x27, #5
   23230:	mov	x3, x23
   23234:	mov	x2, x22
   23238:	mov	x1, x28
   2323c:	mov	x0, x20
   23240:	bl	6930 <__asan_backtrace_alloc@plt>
   23244:	str	x0, [x19, #96]
   23248:	cbz	x0, 23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   2324c:	str	x27, [x19, #88]
   23250:	add	x27, sp, #0x210
   23254:	mov	x2, x28
   23258:	mov	x28, #0x0                   	// #0
   2325c:	mov	w1, #0x0                   	// #0
   23260:	bl	68d0 <__asan_internal_memset@plt>
   23264:	ldr	w0, [sp, #584]
   23268:	cbnz	w0, 233d4 <__asan_backtrace_dwarf_add@@Base+0x518>
   2326c:	mov	x0, x27
   23270:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   23274:	str	x0, [sp, #184]
   23278:	cbz	x0, 233ec <__asan_backtrace_dwarf_add@@Base+0x530>
   2327c:	mov	x0, x27
   23280:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   23284:	str	x0, [sp, #240]
   23288:	mov	x0, x27
   2328c:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   23290:	and	w0, w0, #0xff
   23294:	str	w0, [sp, #252]
   23298:	ldp	x0, x1, [x27]
   2329c:	stp	x0, x1, [x21]
   232a0:	ldp	x0, x1, [x27, #16]
   232a4:	stp	x0, x1, [x21, #16]
   232a8:	ldp	x0, x1, [x27, #32]
   232ac:	stp	x0, x1, [x21, #32]
   232b0:	ldp	x0, x1, [x27, #48]
   232b4:	stp	x0, x1, [x21, #48]
   232b8:	mov	x1, #0x0                   	// #0
   232bc:	mov	x0, x21
   232c0:	str	x1, [sp, #280]
   232c4:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   232c8:	str	x0, [sp, #168]
   232cc:	ldr	x1, [sp, #280]
   232d0:	cbnz	x0, 2335c <__asan_backtrace_dwarf_add@@Base+0x4a0>
   232d4:	cbnz	x1, 23374 <__asan_backtrace_dwarf_add@@Base+0x4b8>
   232d8:	mov	x0, x27
   232dc:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   232e0:	mov	x0, x27
   232e4:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   232e8:	mov	x1, #0x0                   	// #0
   232ec:	ldr	x2, [x19, #96]
   232f0:	ldr	x3, [sp, #184]
   232f4:	add	x0, x2, x28
   232f8:	str	x3, [x2, x28]
   232fc:	add	x28, x28, #0x20
   23300:	ldr	w2, [sp, #240]
   23304:	str	w2, [x0, #8]
   23308:	ldr	w2, [sp, #252]
   2330c:	str	w2, [x0, #12]
   23310:	ldr	x2, [sp, #168]
   23314:	str	x2, [x0, #16]
   23318:	str	x1, [x0, #24]
   2331c:	b	23264 <__asan_backtrace_dwarf_add@@Base+0x3a8>
   23320:	cbnz	w1, 23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   23324:	mov	x0, x21
   23328:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2332c:	add	x27, x27, #0x1
   23330:	mov	x0, x21
   23334:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   23338:	mov	x0, x21
   2333c:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   23340:	cbnz	x0, 23350 <__asan_backtrace_dwarf_add@@Base+0x494>
   23344:	mov	x0, x21
   23348:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2334c:	b	23214 <__asan_backtrace_dwarf_add@@Base+0x358>
   23350:	mov	x0, x21
   23354:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   23358:	b	23338 <__asan_backtrace_dwarf_add@@Base+0x47c>
   2335c:	add	x1, x1, #0x1
   23360:	mov	x0, x21
   23364:	str	x1, [sp, #168]
   23368:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   2336c:	ldr	x1, [sp, #168]
   23370:	b	232bc <__asan_backtrace_dwarf_add@@Base+0x400>
   23374:	lsl	x1, x1, #3
   23378:	mov	x3, x23
   2337c:	mov	x2, x22
   23380:	mov	x0, x20
   23384:	bl	6930 <__asan_backtrace_alloc@plt>
   23388:	mov	x1, x0
   2338c:	cbz	x0, 233d4 <__asan_backtrace_dwarf_add@@Base+0x518>
   23390:	mov	x2, x0
   23394:	mov	x0, x27
   23398:	stp	x1, x2, [sp, #288]
   2339c:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   233a0:	mov	x3, x0
   233a4:	mov	x0, x27
   233a8:	str	x3, [sp, #280]
   233ac:	bl	20e94 <__sanitizer_set_death_callback@@Base+0x1e1c>
   233b0:	ldp	x3, x1, [sp, #280]
   233b4:	cbz	x3, 232ec <__asan_backtrace_dwarf_add@@Base+0x430>
   233b8:	ldr	x2, [sp, #296]
   233bc:	stp	w3, w0, [x2]
   233c0:	add	x2, x2, #0x8
   233c4:	ldr	x0, [sp, #168]
   233c8:	add	x0, x0, #0x1
   233cc:	str	x0, [sp, #168]
   233d0:	b	23394 <__asan_backtrace_dwarf_add@@Base+0x4d8>
   233d4:	ldr	x1, [sp, #232]
   233d8:	mov	x3, x23
   233dc:	mov	x2, x22
   233e0:	mov	x0, x20
   233e4:	bl	2094c <__sanitizer_set_death_callback@@Base+0x18d4>
   233e8:	b	23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   233ec:	ldp	x1, x0, [x19, #88]
   233f0:	adrp	x3, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   233f4:	mov	x2, #0x20                  	// #32
   233f8:	add	x3, x3, #0x6b0
   233fc:	bl	6720 <__asan_backtrace_qsort@plt>
   23400:	mov	x0, x24
   23404:	bl	20df0 <__sanitizer_set_death_callback@@Base+0x1d78>
   23408:	and	w2, w0, #0xff
   2340c:	mov	x1, #0x4                   	// #4
   23410:	ldr	x0, [sp, #152]
   23414:	cmp	w26, #0x0
   23418:	str	x0, [x19, #24]
   2341c:	mov	x0, #0xc                   	// #12
   23420:	csel	x0, x0, x1, ne  // ne = any
   23424:	stp	w26, w2, [x19, #44]
   23428:	ldr	x1, [sp, #160]
   2342c:	stp	xzr, xzr, [x19, #56]
   23430:	ldr	w7, [sp, #688]
   23434:	add	x0, x0, x1
   23438:	stp	xzr, xzr, [x19, #72]
   2343c:	mov	x2, x24
   23440:	ldr	x1, [sp, #152]
   23444:	stp	xzr, xzr, [x19, #104]
   23448:	add	x0, x1, x0
   2344c:	str	x0, [x19, #32]
   23450:	str	x0, [sp, #152]
   23454:	ldr	x0, [sp, #488]
   23458:	str	x0, [x19, #8]
   2345c:	ldr	x0, [sp, #224]
   23460:	stp	xzr, xzr, [x19, #120]
   23464:	ldr	x1, [sp, #480]
   23468:	str	x1, [x19]
   2346c:	sub	x1, x1, x0
   23470:	ldr	w0, [sp, #248]
   23474:	str	x1, [x19, #16]
   23478:	add	x1, sp, #0x290
   2347c:	str	w0, [x19, #40]
   23480:	add	x0, sp, #0x150
   23484:	stp	x19, x0, [sp, #24]
   23488:	ldr	x0, [sp, #696]
   2348c:	str	x0, [sp]
   23490:	stp	x22, x23, [sp, #8]
   23494:	mov	x0, x20
   23498:	str	x21, [sp, #40]
   2349c:	ldp	x5, x6, [x1]
   234a0:	ldp	x3, x4, [x1, #16]
   234a4:	ldr	x1, [sp, #192]
   234a8:	bl	21358 <__sanitizer_set_death_callback@@Base+0x22e0>
   234ac:	cbz	w0, 23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   234b0:	ldr	w0, [sp, #520]
   234b4:	cbz	w0, 22f70 <__asan_backtrace_dwarf_add@@Base+0xb4>
   234b8:	b	23074 <__asan_backtrace_dwarf_add@@Base+0x1b8>
   234bc:	mov	x3, x23
   234c0:	mov	x2, x22
   234c4:	add	x1, sp, #0x170
   234c8:	mov	x0, x20
   234cc:	bl	6980 <__asan_backtrace_vector_release@plt>
   234d0:	cbz	w0, 22fb4 <__asan_backtrace_dwarf_add@@Base+0xf8>
   234d4:	ldp	x21, x26, [sp, #360]
   234d8:	mov	x2, #0x18                  	// #24
   234dc:	ldr	x24, [sp, #336]
   234e0:	adrp	x3, 20000 <__sanitizer_set_death_callback@@Base+0xf88>
   234e4:	add	x3, x3, #0x9d0
   234e8:	mov	x0, x24
   234ec:	mov	x1, x21
   234f0:	ldr	x25, [sp, #392]
   234f4:	bl	6720 <__asan_backtrace_qsort@plt>
   234f8:	mov	x3, x23
   234fc:	mov	x2, x22
   23500:	mov	x0, x20
   23504:	mov	x1, #0xa0                  	// #160
   23508:	bl	6930 <__asan_backtrace_alloc@plt>
   2350c:	mov	x19, x0
   23510:	cbz	x0, 22fb4 <__asan_backtrace_dwarf_add@@Base+0xf8>
   23514:	ldr	x0, [sp, #696]
   23518:	stp	xzr, x0, [x19]
   2351c:	mov	x2, #0x20                  	// #32
   23520:	ldr	x0, [sp, #192]
   23524:	str	x0, [x19, #16]
   23528:	ldr	x0, [sp, #176]
   2352c:	str	x0, [x19, #56]
   23530:	ldr	x0, [sp, #200]
   23534:	str	x0, [x19, #64]
   23538:	ldr	x0, [sp, #256]
   2353c:	str	x0, [x19, #72]
   23540:	ldr	x0, [sp, #264]
   23544:	str	x0, [x19, #80]
   23548:	ldr	x0, [sp, #656]
   2354c:	str	x0, [x19, #88]
   23550:	ldr	x0, [sp, #664]
   23554:	str	x0, [x19, #96]
   23558:	ldr	x0, [sp, #672]
   2355c:	str	x0, [x19, #104]
   23560:	ldr	x0, [sp, #680]
   23564:	str	x0, [x19, #112]
   23568:	ldr	w0, [sp, #688]
   2356c:	mov	w1, #0x0                   	// #0
   23570:	stp	x24, x21, [x19, #24]
   23574:	stp	x26, x25, [x19, #40]
   23578:	str	w0, [x19, #120]
   2357c:	add	x0, x19, #0x80
   23580:	bl	68d0 <__asan_internal_memset@plt>
   23584:	ldr	x0, [sp, #728]
   23588:	cbz	x0, 23590 <__asan_backtrace_dwarf_add@@Base+0x6d4>
   2358c:	str	x19, [x0]
   23590:	ldr	w0, [x20, #8]
   23594:	add	x1, x20, #0x20
   23598:	cbnz	w0, 235e8 <__asan_backtrace_dwarf_add@@Base+0x72c>
   2359c:	ldr	x0, [x20, #32]
   235a0:	cbnz	x0, 235c0 <__asan_backtrace_dwarf_add@@Base+0x704>
   235a4:	str	x19, [x1]
   235a8:	ldr	x1, [sp, #720]
   235ac:	adrp	x0, 22000 <__sanitizer_set_death_callback@@Base+0x2f88>
   235b0:	add	x0, x0, #0xdd0
   235b4:	str	x0, [x1]
   235b8:	mov	w0, #0x1                   	// #1
   235bc:	b	22fb8 <__asan_backtrace_dwarf_add@@Base+0xfc>
   235c0:	mov	x1, x0
   235c4:	ldr	x0, [x0]
   235c8:	b	235a0 <__asan_backtrace_dwarf_add@@Base+0x6e4>
   235cc:	ldxr	x2, [x0]
   235d0:	cbnz	x2, 235dc <__asan_backtrace_dwarf_add@@Base+0x720>
   235d4:	stlxr	w3, x19, [x0]
   235d8:	cbnz	w3, 235cc <__asan_backtrace_dwarf_add@@Base+0x710>
   235dc:	dmb	ish
   235e0:	cmp	x2, #0x0
   235e4:	b.eq	235a8 <__asan_backtrace_dwarf_add@@Base+0x6ec>  // b.none
   235e8:	mov	x0, x1
   235ec:	ldar	x2, [x0]
   235f0:	cbz	x2, 235cc <__asan_backtrace_dwarf_add@@Base+0x710>
   235f4:	mov	x0, x2
   235f8:	b	235ec <__asan_backtrace_dwarf_add@@Base+0x730>
   235fc:	stp	x29, x30, [sp, #-160]!
   23600:	mov	x29, sp
   23604:	stp	x19, x20, [sp, #16]
   23608:	mov	x19, x0
   2360c:	ldr	w0, [x0, #8]
   23610:	stp	x21, x22, [sp, #32]
   23614:	mov	x21, x1
   23618:	mov	x22, x2
   2361c:	stp	x23, x24, [sp, #48]
   23620:	stp	x25, x26, [sp, #64]
   23624:	cbnz	w0, 23690 <__asan_backtrace_dwarf_add@@Base+0x7d4>
   23628:	ldr	w0, [x19, #56]
   2362c:	cbnz	w0, 23674 <__asan_backtrace_dwarf_add@@Base+0x7b8>
   23630:	ldr	x0, [x19, #24]
   23634:	str	x0, [sp, #88]
   23638:	ldr	x0, [sp, #88]
   2363c:	cbnz	x0, 23780 <__asan_backtrace_dwarf_add@@Base+0x8c4>
   23640:	adrp	x23, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23644:	adrp	x24, 31000 <__asan_backtrace_vector_release@@Base+0x4b60>
   23648:	add	x25, sp, #0x54
   2364c:	add	x23, x23, #0xf80
   23650:	add	x24, x24, #0x3d1
   23654:	mov	w26, #0x0                   	// #0
   23658:	sub	w0, w26, #0x1
   2365c:	cmp	w0, #0x3
   23660:	b.hi	236b0 <__asan_backtrace_dwarf_add@@Base+0x7f4>  // b.pmore
   23664:	ldrb	w0, [x23, w0, uxtw]
   23668:	adr	x1, 23674 <__asan_backtrace_dwarf_add@@Base+0x7b8>
   2366c:	add	x0, x1, w0, sxtb #2
   23670:	br	x0
   23674:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23678:	mov	x0, x22
   2367c:	add	x1, x1, #0xf13
   23680:	mov	w2, #0xffffffff            	// #-1
   23684:	blr	x21
   23688:	mov	w0, #0x0                   	// #0
   2368c:	b	2370c <__asan_backtrace_dwarf_add@@Base+0x850>
   23690:	add	x0, x19, #0x38
   23694:	ldar	w0, [x0]
   23698:	cbnz	w0, 23674 <__asan_backtrace_dwarf_add@@Base+0x7b8>
   2369c:	ldr	w0, [x19, #8]
   236a0:	cbz	w0, 23630 <__asan_backtrace_dwarf_add@@Base+0x774>
   236a4:	add	x0, x19, #0x18
   236a8:	ldar	x0, [x0]
   236ac:	b	23634 <__asan_backtrace_dwarf_add@@Base+0x778>
   236b0:	ldr	x20, [x19]
   236b4:	cbz	x20, 236dc <__asan_backtrace_dwarf_add@@Base+0x820>
   236b8:	mov	x2, x22
   236bc:	mov	x3, x25
   236c0:	mov	x1, x21
   236c4:	mov	x0, x20
   236c8:	bl	6db0 <__asan_backtrace_open@plt>
   236cc:	mov	w2, w0
   236d0:	tbz	w0, #31, 23788 <__asan_backtrace_dwarf_add@@Base+0x8cc>
   236d4:	ldr	w0, [sp, #84]
   236d8:	cbz	w0, 236fc <__asan_backtrace_dwarf_add@@Base+0x840>
   236dc:	add	w26, w26, #0x1
   236e0:	cmp	w26, #0x5
   236e4:	b.ne	23658 <__asan_backtrace_dwarf_add@@Base+0x79c>  // b.any
   236e8:	ldr	x1, [x19]
   236ec:	cbz	x1, 2375c <__asan_backtrace_dwarf_add@@Base+0x8a0>
   236f0:	mov	w2, #0x2                   	// #2
   236f4:	mov	x0, x22
   236f8:	blr	x21
   236fc:	ldr	w0, [x19, #8]
   23700:	cbnz	w0, 2376c <__asan_backtrace_dwarf_add@@Base+0x8b0>
   23704:	mov	w1, #0x1                   	// #1
   23708:	str	w1, [x19, #56]
   2370c:	ldp	x19, x20, [sp, #16]
   23710:	ldp	x21, x22, [sp, #32]
   23714:	ldp	x23, x24, [sp, #48]
   23718:	ldp	x25, x26, [sp, #64]
   2371c:	ldp	x29, x30, [sp], #160
   23720:	ret
   23724:	bl	6a00 <getpid@plt>
   23728:	add	x20, sp, #0x60
   2372c:	sxtw	x3, w0
   23730:	adrp	x2, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23734:	mov	x0, x20
   23738:	add	x2, x2, #0xf39
   2373c:	mov	x1, #0x40                  	// #64
   23740:	bl	6a90 <snprintf@plt>
   23744:	b	236b8 <__asan_backtrace_dwarf_add@@Base+0x7fc>
   23748:	adrp	x20, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   2374c:	add	x20, x20, #0xf00
   23750:	b	236b8 <__asan_backtrace_dwarf_add@@Base+0x7fc>
   23754:	mov	x20, x24
   23758:	b	236b8 <__asan_backtrace_dwarf_add@@Base+0x7fc>
   2375c:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23760:	mov	w2, #0x0                   	// #0
   23764:	add	x1, x1, #0xf50
   23768:	b	236f4 <__asan_backtrace_dwarf_add@@Base+0x838>
   2376c:	mov	w0, #0x1                   	// #1
   23770:	add	x19, x19, #0x38
   23774:	stlr	w0, [x19]
   23778:	b	23688 <__asan_backtrace_dwarf_add@@Base+0x7cc>
   2377c:	str	x1, [x19, #24]
   23780:	mov	w0, #0x1                   	// #1
   23784:	b	2370c <__asan_backtrace_dwarf_add@@Base+0x850>
   23788:	add	x5, sp, #0x58
   2378c:	mov	x4, x22
   23790:	mov	x3, x21
   23794:	mov	x1, x20
   23798:	mov	x0, x19
   2379c:	bl	6c70 <__asan_backtrace_initialize@plt>
   237a0:	cbz	w0, 236fc <__asan_backtrace_dwarf_add@@Base+0x840>
   237a4:	ldr	w0, [x19, #8]
   237a8:	ldr	x1, [sp, #88]
   237ac:	cbz	w0, 2377c <__asan_backtrace_dwarf_add@@Base+0x8c0>
   237b0:	add	x19, x19, #0x18
   237b4:	stlr	x1, [x19]
   237b8:	b	23780 <__asan_backtrace_dwarf_add@@Base+0x8c4>

00000000000237bc <__asan_backtrace_pcinfo@@Base>:
   237bc:	stp	x29, x30, [sp, #-64]!
   237c0:	mov	x29, sp
   237c4:	stp	x19, x20, [sp, #16]
   237c8:	mov	x19, x0
   237cc:	mov	x20, x3
   237d0:	stp	x21, x22, [sp, #32]
   237d4:	mov	x22, x1
   237d8:	mov	x21, x4
   237dc:	mov	x1, x3
   237e0:	str	x23, [sp, #48]
   237e4:	mov	x23, x2
   237e8:	mov	x2, x4
   237ec:	bl	235fc <__asan_backtrace_dwarf_add@@Base+0x740>
   237f0:	cbz	w0, 2382c <__asan_backtrace_pcinfo@@Base+0x70>
   237f4:	ldr	w0, [x19, #56]
   237f8:	cbnz	w0, 2382c <__asan_backtrace_pcinfo@@Base+0x70>
   237fc:	mov	x4, x21
   23800:	mov	x3, x20
   23804:	mov	x2, x23
   23808:	mov	x1, x22
   2380c:	mov	x0, x19
   23810:	ldr	x5, [x19, #24]
   23814:	ldp	x19, x20, [sp, #16]
   23818:	mov	x16, x5
   2381c:	ldp	x21, x22, [sp, #32]
   23820:	ldr	x23, [sp, #48]
   23824:	ldp	x29, x30, [sp], #64
   23828:	br	x16
   2382c:	mov	w0, #0x0                   	// #0
   23830:	ldp	x19, x20, [sp, #16]
   23834:	ldp	x21, x22, [sp, #32]
   23838:	ldr	x23, [sp, #48]
   2383c:	ldp	x29, x30, [sp], #64
   23840:	ret

0000000000023844 <__asan_backtrace_syminfo@@Base>:
   23844:	stp	x29, x30, [sp, #-64]!
   23848:	mov	x29, sp
   2384c:	stp	x19, x20, [sp, #16]
   23850:	mov	x19, x0
   23854:	mov	x20, x3
   23858:	stp	x21, x22, [sp, #32]
   2385c:	mov	x22, x1
   23860:	mov	x21, x4
   23864:	mov	x1, x3
   23868:	str	x23, [sp, #48]
   2386c:	mov	x23, x2
   23870:	mov	x2, x4
   23874:	bl	235fc <__asan_backtrace_dwarf_add@@Base+0x740>
   23878:	cbz	w0, 238a4 <__asan_backtrace_syminfo@@Base+0x60>
   2387c:	ldr	w0, [x19, #56]
   23880:	cbnz	w0, 238b8 <__asan_backtrace_syminfo@@Base+0x74>
   23884:	ldr	x5, [x19, #40]
   23888:	mov	x0, x19
   2388c:	mov	x4, x21
   23890:	mov	x3, x20
   23894:	mov	x2, x23
   23898:	mov	x1, x22
   2389c:	blr	x5
   238a0:	mov	w0, #0x1                   	// #1
   238a4:	ldp	x19, x20, [sp, #16]
   238a8:	ldp	x21, x22, [sp, #32]
   238ac:	ldr	x23, [sp, #48]
   238b0:	ldp	x29, x30, [sp], #64
   238b4:	ret
   238b8:	mov	w0, #0x0                   	// #0
   238bc:	b	238a4 <__asan_backtrace_syminfo@@Base+0x60>

00000000000238c0 <__asan_backtrace_open@@Base>:
   238c0:	stp	x29, x30, [sp, #-64]!
   238c4:	mov	x29, sp
   238c8:	stp	x19, x20, [sp, #16]
   238cc:	mov	x20, x3
   238d0:	stp	x21, x22, [sp, #32]
   238d4:	mov	x21, x0
   238d8:	mov	x22, x1
   238dc:	str	x23, [sp, #48]
   238e0:	mov	x23, x2
   238e4:	cbz	x3, 238ec <__asan_backtrace_open@@Base+0x2c>
   238e8:	str	wzr, [x3]
   238ec:	mov	x0, x21
   238f0:	mov	w1, #0x80000               	// #524288
   238f4:	bl	6860 <open@plt>
   238f8:	mov	w19, w0
   238fc:	tbz	w0, #31, 23948 <__asan_backtrace_open@@Base+0x88>
   23900:	bl	6b20 <__errno_location@plt>
   23904:	ldr	w2, [x0]
   23908:	cbz	x20, 23938 <__asan_backtrace_open@@Base+0x78>
   2390c:	cmp	w2, #0x2
   23910:	b.ne	23938 <__asan_backtrace_open@@Base+0x78>  // b.any
   23914:	mov	w0, #0x1                   	// #1
   23918:	str	w0, [x20]
   2391c:	mov	w19, #0xffffffff            	// #-1
   23920:	mov	w0, w19
   23924:	ldp	x19, x20, [sp, #16]
   23928:	ldp	x21, x22, [sp, #32]
   2392c:	ldr	x23, [sp, #48]
   23930:	ldp	x29, x30, [sp], #64
   23934:	ret
   23938:	mov	x1, x21
   2393c:	mov	x0, x23
   23940:	blr	x22
   23944:	b	2391c <__asan_backtrace_open@@Base+0x5c>
   23948:	mov	w2, #0x1                   	// #1
   2394c:	mov	w1, #0x2                   	// #2
   23950:	bl	6d40 <fcntl@plt>
   23954:	b	23920 <__asan_backtrace_open@@Base+0x60>

0000000000023958 <__asan_backtrace_close@@Base>:
   23958:	stp	x29, x30, [sp, #-32]!
   2395c:	mov	x29, sp
   23960:	stp	x19, x20, [sp, #16]
   23964:	mov	x19, x1
   23968:	mov	x20, x2
   2396c:	bl	6bc0 <close@plt>
   23970:	tbz	w0, #31, 2399c <__asan_backtrace_close@@Base+0x44>
   23974:	bl	6b20 <__errno_location@plt>
   23978:	ldr	w2, [x0]
   2397c:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23980:	mov	x0, x20
   23984:	add	x1, x1, #0xf84
   23988:	blr	x19
   2398c:	mov	w0, #0x0                   	// #0
   23990:	ldp	x19, x20, [sp, #16]
   23994:	ldp	x29, x30, [sp], #32
   23998:	ret
   2399c:	mov	w0, #0x1                   	// #1
   239a0:	b	23990 <__asan_backtrace_close@@Base+0x38>
   239a4:	mov	x3, #0x0                   	// #0
   239a8:	cmp	x3, x2
   239ac:	b.ne	239b4 <__asan_backtrace_close@@Base+0x5c>  // b.any
   239b0:	ret
   239b4:	ldrb	w5, [x1, x3]
   239b8:	ldrb	w4, [x0, x3]
   239bc:	strb	w5, [x0, x3]
   239c0:	strb	w4, [x1, x3]
   239c4:	add	x3, x3, #0x1
   239c8:	b	239a8 <__asan_backtrace_close@@Base+0x50>

00000000000239cc <__asan_backtrace_qsort@@Base>:
   239cc:	stp	x29, x30, [sp, #-80]!
   239d0:	mov	x29, sp
   239d4:	stp	x19, x20, [sp, #16]
   239d8:	mov	x20, x0
   239dc:	mov	x19, x2
   239e0:	stp	x21, x22, [sp, #32]
   239e4:	mov	x22, x1
   239e8:	stp	x23, x24, [sp, #48]
   239ec:	mov	x24, x3
   239f0:	str	x25, [sp, #64]
   239f4:	cmp	x22, #0x1
   239f8:	b.ls	23ac8 <__asan_backtrace_qsort@@Base+0xfc>  // b.plast
   239fc:	lsr	x1, x22, #1
   23a00:	add	x25, x20, x19
   23a04:	mov	x21, #0x0                   	// #0
   23a08:	mov	x23, #0x1                   	// #1
   23a0c:	mov	x2, x19
   23a10:	mov	x0, x20
   23a14:	madd	x1, x1, x19, x20
   23a18:	bl	239a4 <__asan_backtrace_close@@Base+0x4c>
   23a1c:	mov	x1, x25
   23a20:	mov	x0, x20
   23a24:	blr	x24
   23a28:	cmp	w0, #0x0
   23a2c:	b.le	23a4c <__asan_backtrace_qsort@@Base+0x80>
   23a30:	add	x21, x21, #0x1
   23a34:	cmp	x21, x23
   23a38:	b.eq	23a4c <__asan_backtrace_qsort@@Base+0x80>  // b.none
   23a3c:	madd	x0, x21, x19, x20
   23a40:	mov	x2, x19
   23a44:	mov	x1, x25
   23a48:	bl	239a4 <__asan_backtrace_close@@Base+0x4c>
   23a4c:	add	x23, x23, #0x1
   23a50:	add	x25, x25, x19
   23a54:	cmp	x22, x23
   23a58:	b.ne	23a1c <__asan_backtrace_qsort@@Base+0x50>  // b.any
   23a5c:	madd	x1, x21, x19, x19
   23a60:	sub	x23, x22, #0x1
   23a64:	sub	x23, x23, x21
   23a68:	add	x25, x20, x1
   23a6c:	cbnz	x21, 23a90 <__asan_backtrace_qsort@@Base+0xc4>
   23a70:	mov	x3, x24
   23a74:	mov	x2, x19
   23a78:	mov	x1, x21
   23a7c:	mov	x0, x20
   23a80:	bl	239cc <__asan_backtrace_qsort@@Base>
   23a84:	mov	x20, x25
   23a88:	mov	x22, x23
   23a8c:	b	239f4 <__asan_backtrace_qsort@@Base+0x28>
   23a90:	sub	x1, x1, x19
   23a94:	mov	x2, x19
   23a98:	add	x1, x20, x1
   23a9c:	mov	x0, x20
   23aa0:	bl	239a4 <__asan_backtrace_close@@Base+0x4c>
   23aa4:	cmp	x22, x21, lsl #1
   23aa8:	b.hi	23a70 <__asan_backtrace_qsort@@Base+0xa4>  // b.pmore
   23aac:	mov	x1, x23
   23ab0:	mov	x0, x25
   23ab4:	mov	x3, x24
   23ab8:	mov	x25, x20
   23abc:	mov	x23, x21
   23ac0:	bl	239cc <__asan_backtrace_qsort@@Base>
   23ac4:	b	23a84 <__asan_backtrace_qsort@@Base+0xb8>
   23ac8:	ldp	x19, x20, [sp, #16]
   23acc:	ldp	x21, x22, [sp, #32]
   23ad0:	ldp	x23, x24, [sp, #48]
   23ad4:	ldr	x25, [sp, #64]
   23ad8:	ldp	x29, x30, [sp], #80
   23adc:	ret

0000000000023ae0 <__asan_backtrace_create_state@@Base>:
   23ae0:	stp	x29, x30, [sp, #-144]!
   23ae4:	mov	x29, sp
   23ae8:	stp	x19, x20, [sp, #16]
   23aec:	add	x20, sp, #0x48
   23af0:	mov	x19, x2
   23af4:	mov	x2, #0x48                  	// #72
   23af8:	stp	x21, x22, [sp, #32]
   23afc:	mov	w22, w1
   23b00:	mov	x21, x3
   23b04:	mov	w1, #0x0                   	// #0
   23b08:	str	x23, [sp, #48]
   23b0c:	mov	x23, x0
   23b10:	mov	x0, x20
   23b14:	bl	68d0 <__asan_internal_memset@plt>
   23b18:	mov	x2, x19
   23b1c:	mov	x3, x21
   23b20:	mov	x0, x20
   23b24:	mov	x1, #0x48                  	// #72
   23b28:	str	x23, [sp, #72]
   23b2c:	str	w22, [sp, #80]
   23b30:	bl	6930 <__asan_backtrace_alloc@plt>
   23b34:	mov	x19, x0
   23b38:	cbz	x0, 23b48 <__asan_backtrace_create_state@@Base+0x68>
   23b3c:	mov	x1, x20
   23b40:	mov	x2, #0x48                  	// #72
   23b44:	bl	6710 <memcpy@plt>
   23b48:	mov	x0, x19
   23b4c:	ldp	x19, x20, [sp, #16]
   23b50:	ldp	x21, x22, [sp, #32]
   23b54:	ldr	x23, [sp, #48]
   23b58:	ldp	x29, x30, [sp], #144
   23b5c:	ret
   23b60:	sub	w0, w0, #0x1c
   23b64:	cmp	w0, #0x34
   23b68:	b.hi	23b88 <__asan_backtrace_create_state@@Base+0xa8>  // b.pmore
   23b6c:	mov	x1, #0x1                   	// #1
   23b70:	lsl	x0, x1, x0
   23b74:	mov	x1, #0x1f                  	// #31
   23b78:	movk	x1, #0x1a, lsl #48
   23b7c:	tst	x0, x1
   23b80:	cset	w0, ne  // ne = any
   23b84:	ret
   23b88:	mov	w0, #0x0                   	// #0
   23b8c:	b	23b84 <__asan_backtrace_create_state@@Base+0xa4>
   23b90:	mov	x1, x0
   23b94:	ldp	w2, w0, [x0, #40]
   23b98:	cmp	w2, w0
   23b9c:	b.ge	23bbc <__asan_backtrace_create_state@@Base+0xdc>  // b.tcont
   23ba0:	ldr	x3, [x1, #32]
   23ba4:	mov	w0, #0x18                  	// #24
   23ba8:	smaddl	x0, w2, w0, x3
   23bac:	add	w2, w2, #0x1
   23bb0:	str	wzr, [x0, #4]
   23bb4:	str	w2, [x1, #40]
   23bb8:	ret
   23bbc:	mov	x0, #0x0                   	// #0
   23bc0:	b	23bb8 <__asan_backtrace_create_state@@Base+0xd8>
   23bc4:	mov	x5, x2
   23bc8:	sub	w2, w1, #0x1
   23bcc:	cmp	w2, #0x4f
   23bd0:	b.hi	23c00 <__asan_backtrace_create_state@@Base+0x120>  // b.pmore
   23bd4:	mov	w6, w1
   23bd8:	mov	x4, x3
   23bdc:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23be0:	add	x1, x1, #0xf8c
   23be4:	ldrb	w1, [x1, w2, uxtw]
   23be8:	adr	x2, 23bf4 <__asan_backtrace_create_state@@Base+0x114>
   23bec:	add	x1, x2, w1, sxtb #2
   23bf0:	br	x1
   23bf4:	cmp	x5, #0x0
   23bf8:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   23bfc:	b.ne	23c0c <__asan_backtrace_create_state@@Base+0x12c>  // b.any
   23c00:	mov	x0, #0x0                   	// #0
   23c04:	ret
   23c08:	cbz	x5, 23c00 <__asan_backtrace_create_state@@Base+0x120>
   23c0c:	stp	x29, x30, [sp, #-16]!
   23c10:	mov	x29, sp
   23c14:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   23c18:	cbz	x0, 23c24 <__asan_backtrace_create_state@@Base+0x144>
   23c1c:	str	w6, [x0]
   23c20:	stp	x5, x4, [x0, #8]
   23c24:	ldp	x29, x30, [sp], #16
   23c28:	ret
   23c2c:	cbnz	x3, 23c0c <__asan_backtrace_create_state@@Base+0x12c>
   23c30:	b	23c00 <__asan_backtrace_create_state@@Base+0x120>
   23c34:	mov	x4, x1
   23c38:	stp	x29, x30, [sp, #-16]!
   23c3c:	mov	x29, sp
   23c40:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   23c44:	cbz	x0, 23c54 <__asan_backtrace_create_state@@Base+0x174>
   23c48:	mov	w1, #0x27                  	// #39
   23c4c:	str	w1, [x0]
   23c50:	str	x4, [x0, #8]
   23c54:	ldp	x29, x30, [sp], #16
   23c58:	ret
   23c5c:	ldr	x4, [x0, #24]
   23c60:	mov	x2, x1
   23c64:	mov	w3, #0x4f                  	// #79
   23c68:	ldrb	w1, [x4]
   23c6c:	cmp	w1, #0x52
   23c70:	ccmp	w1, w3, #0x4, ne  // ne = any
   23c74:	b.ne	23cac <__asan_backtrace_create_state@@Base+0x1cc>  // b.any
   23c78:	ldr	w3, [x0, #72]
   23c7c:	cmp	w1, #0x52
   23c80:	b.ne	23ca0 <__asan_backtrace_create_state@@Base+0x1c0>  // b.any
   23c84:	add	w3, w3, #0x2
   23c88:	mov	w1, #0x1f                  	// #31
   23c8c:	add	x4, x4, #0x1
   23c90:	str	x4, [x0, #24]
   23c94:	str	w3, [x0, #72]
   23c98:	mov	x3, #0x0                   	// #0
   23c9c:	b	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   23ca0:	add	w3, w3, #0x3
   23ca4:	mov	w1, #0x20                  	// #32
   23ca8:	b	23c8c <__asan_backtrace_create_state@@Base+0x1ac>
   23cac:	mov	x0, x2
   23cb0:	ret
   23cb4:	cbz	x1, 23cdc <__asan_backtrace_create_state@@Base+0x1fc>
   23cb8:	ldp	w2, w3, [x0, #56]
   23cbc:	cmp	w2, w3
   23cc0:	b.ge	23cdc <__asan_backtrace_create_state@@Base+0x1fc>  // b.tcont
   23cc4:	ldr	x3, [x0, #48]
   23cc8:	str	x1, [x3, w2, sxtw #3]
   23ccc:	add	w2, w2, #0x1
   23cd0:	str	w2, [x0, #56]
   23cd4:	mov	w0, #0x1                   	// #1
   23cd8:	ret
   23cdc:	mov	w0, #0x0                   	// #0
   23ce0:	b	23cd8 <__asan_backtrace_create_state@@Base+0x1f8>
   23ce4:	stp	x29, x30, [sp, #-32]!
   23ce8:	mov	x29, sp
   23cec:	stp	x19, x20, [sp, #16]
   23cf0:	mov	x19, x1
   23cf4:	mov	x20, x0
   23cf8:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23cfc:	add	x1, x1, #0xfdc
   23d00:	cbz	x19, 23d68 <__asan_backtrace_create_state@@Base+0x288>
   23d04:	ldr	w0, [x19]
   23d08:	sub	w0, w0, #0x1
   23d0c:	cmp	w0, #0x4f
   23d10:	b.hi	23d68 <__asan_backtrace_create_state@@Base+0x288>  // b.pmore
   23d14:	ldrb	w0, [x1, w0, uxtw]
   23d18:	adr	x2, 23d24 <__asan_backtrace_create_state@@Base+0x244>
   23d1c:	add	x0, x2, w0, sxtb #2
   23d20:	br	x0
   23d24:	ldr	w0, [x20, #364]
   23d28:	add	w0, w0, #0x1
   23d2c:	str	w0, [x20, #364]
   23d30:	ldr	w0, [x20, #308]
   23d34:	cmp	w0, #0x800
   23d38:	b.gt	23d68 <__asan_backtrace_create_state@@Base+0x288>
   23d3c:	ldr	x1, [x19, #8]
   23d40:	add	w0, w0, #0x1
   23d44:	str	w0, [x20, #308]
   23d48:	mov	x0, x20
   23d4c:	bl	23ce4 <__asan_backtrace_create_state@@Base+0x204>
   23d50:	ldr	x1, [x19, #16]
   23d54:	mov	x0, x20
   23d58:	bl	23ce4 <__asan_backtrace_create_state@@Base+0x204>
   23d5c:	ldr	w0, [x20, #308]
   23d60:	sub	w0, w0, #0x1
   23d64:	str	w0, [x20, #308]
   23d68:	ldp	x19, x20, [sp, #16]
   23d6c:	ldp	x29, x30, [sp], #32
   23d70:	ret
   23d74:	ldr	x0, [x19, #8]
   23d78:	ldr	w0, [x0]
   23d7c:	cmp	w0, #0x5
   23d80:	b.ne	23d30 <__asan_backtrace_create_state@@Base+0x250>  // b.any
   23d84:	ldr	w0, [x20, #348]
   23d88:	add	w0, w0, #0x1
   23d8c:	str	w0, [x20, #348]
   23d90:	b	23d30 <__asan_backtrace_create_state@@Base+0x250>
   23d94:	ldr	x19, [x19, #16]
   23d98:	b	23d00 <__asan_backtrace_create_state@@Base+0x220>
   23d9c:	ldr	x19, [x19, #8]
   23da0:	b	23d00 <__asan_backtrace_create_state@@Base+0x220>
   23da4:	stp	x29, x30, [sp, #-32]!
   23da8:	mov	x29, sp
   23dac:	ldr	x1, [x0, #256]
   23db0:	str	x19, [sp, #16]
   23db4:	mov	x19, x0
   23db8:	strb	wzr, [x0, x1]
   23dbc:	ldp	x3, x2, [x0, #272]
   23dc0:	blr	x3
   23dc4:	str	xzr, [x19, #256]
   23dc8:	ldr	x0, [x19, #320]
   23dcc:	add	x0, x0, #0x1
   23dd0:	str	x0, [x19, #320]
   23dd4:	ldr	x19, [sp, #16]
   23dd8:	ldp	x29, x30, [sp], #32
   23ddc:	ret
   23de0:	stp	x29, x30, [sp, #-32]!
   23de4:	mov	x29, sp
   23de8:	stp	x19, x20, [sp, #16]
   23dec:	and	w20, w1, #0xff
   23df0:	mov	x19, x0
   23df4:	ldr	x1, [x0, #256]
   23df8:	cmp	x1, #0xff
   23dfc:	b.ne	23e04 <__asan_backtrace_create_state@@Base+0x324>  // b.any
   23e00:	bl	23da4 <__asan_backtrace_create_state@@Base+0x2c4>
   23e04:	ldr	x0, [x19, #256]
   23e08:	add	x1, x0, #0x1
   23e0c:	str	x1, [x19, #256]
   23e10:	strb	w20, [x19, x0]
   23e14:	strb	w20, [x19, #264]
   23e18:	ldp	x19, x20, [sp, #16]
   23e1c:	ldp	x29, x30, [sp], #32
   23e20:	ret
   23e24:	stp	x29, x30, [sp, #-48]!
   23e28:	mov	x29, sp
   23e2c:	stp	x19, x20, [sp, #16]
   23e30:	mov	x19, x1
   23e34:	add	x20, x1, x2
   23e38:	str	x21, [sp, #32]
   23e3c:	mov	x21, x0
   23e40:	cmp	x19, x20
   23e44:	b.ne	23e58 <__asan_backtrace_create_state@@Base+0x378>  // b.any
   23e48:	ldp	x19, x20, [sp, #16]
   23e4c:	ldr	x21, [sp, #32]
   23e50:	ldp	x29, x30, [sp], #48
   23e54:	ret
   23e58:	ldrb	w1, [x19], #1
   23e5c:	mov	x0, x21
   23e60:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   23e64:	b	23e40 <__asan_backtrace_create_state@@Base+0x360>
   23e68:	mov	x1, x0
   23e6c:	mov	w0, #0x0                   	// #0
   23e70:	cbz	x1, 23e88 <__asan_backtrace_create_state@@Base+0x3a8>
   23e74:	ldr	w2, [x1]
   23e78:	cmp	w2, #0x2f
   23e7c:	b.ne	23e88 <__asan_backtrace_create_state@@Base+0x3a8>  // b.any
   23e80:	ldr	x2, [x1, #8]
   23e84:	cbnz	x2, 23e8c <__asan_backtrace_create_state@@Base+0x3ac>
   23e88:	ret
   23e8c:	add	w0, w0, #0x1
   23e90:	ldr	x1, [x1, #16]
   23e94:	b	23e70 <__asan_backtrace_create_state@@Base+0x390>
   23e98:	stp	x29, x30, [sp, #-32]!
   23e9c:	mov	x29, sp
   23ea0:	stp	x19, x20, [sp, #16]
   23ea4:	mov	x20, x0
   23ea8:	mov	x19, x1
   23eac:	mov	x0, x1
   23eb0:	bl	6850 <__asan_internal_strlen@plt>
   23eb4:	mov	x1, x19
   23eb8:	mov	x2, x0
   23ebc:	mov	x0, x20
   23ec0:	ldp	x19, x20, [sp, #16]
   23ec4:	ldp	x29, x30, [sp], #32
   23ec8:	b	23e24 <__asan_backtrace_create_state@@Base+0x344>
   23ecc:	stp	x29, x30, [sp, #-64]!
   23ed0:	mov	w2, w1
   23ed4:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   23ed8:	mov	x29, sp
   23edc:	stp	x19, x20, [sp, #16]
   23ee0:	add	x19, sp, #0x20
   23ee4:	mov	x20, x0
   23ee8:	add	x1, x1, #0xc60
   23eec:	mov	x0, x19
   23ef0:	bl	6970 <sprintf@plt>
   23ef4:	mov	x1, x19
   23ef8:	mov	x0, x20
   23efc:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   23f00:	ldp	x19, x20, [sp, #16]
   23f04:	ldp	x29, x30, [sp], #64
   23f08:	ret
   23f0c:	mov	x1, x0
   23f10:	ldr	x0, [x0]
   23f14:	ldrb	w3, [x0]
   23f18:	cmp	w3, #0x6e
   23f1c:	b.ne	23f58 <__asan_backtrace_create_state@@Base+0x478>  // b.any
   23f20:	add	x2, x0, #0x1
   23f24:	str	x2, [x1]
   23f28:	mov	w5, #0x1                   	// #1
   23f2c:	ldrb	w3, [x0, #1]
   23f30:	mov	w0, #0x0                   	// #0
   23f34:	mov	w6, #0x7fffffff            	// #2147483647
   23f38:	mov	w4, #0xa                   	// #10
   23f3c:	sub	w2, w3, #0x30
   23f40:	and	w7, w2, #0xff
   23f44:	cmp	w7, #0x9
   23f48:	b.ls	23f60 <__asan_backtrace_create_state@@Base+0x480>  // b.plast
   23f4c:	cbz	w5, 23f54 <__asan_backtrace_create_state@@Base+0x474>
   23f50:	neg	w0, w0
   23f54:	ret
   23f58:	mov	w5, #0x0                   	// #0
   23f5c:	b	23f30 <__asan_backtrace_create_state@@Base+0x450>
   23f60:	sub	w2, w6, w2
   23f64:	udiv	w2, w2, w4
   23f68:	cmp	w2, w0
   23f6c:	b.lt	23f8c <__asan_backtrace_create_state@@Base+0x4ac>  // b.tstop
   23f70:	ldr	x2, [x1]
   23f74:	madd	w0, w0, w4, w3
   23f78:	add	x3, x2, #0x1
   23f7c:	str	x3, [x1]
   23f80:	sub	w0, w0, #0x30
   23f84:	ldrb	w3, [x2, #1]
   23f88:	b	23f3c <__asan_backtrace_create_state@@Base+0x45c>
   23f8c:	mov	w0, #0xffffffff            	// #-1
   23f90:	b	23f54 <__asan_backtrace_create_state@@Base+0x474>
   23f94:	mov	x4, x0
   23f98:	stp	x29, x30, [sp, #-16]!
   23f9c:	mov	x29, sp
   23fa0:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   23fa4:	mov	x8, x0
   23fa8:	cbz	x0, 23fc4 <__asan_backtrace_create_state@@Base+0x4e4>
   23fac:	mov	w0, #0x42                  	// #66
   23fb0:	str	w0, [x8]
   23fb4:	add	x0, x4, #0x18
   23fb8:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   23fbc:	sxtw	x0, w0
   23fc0:	str	x0, [x8, #8]
   23fc4:	mov	x0, x8
   23fc8:	ldp	x29, x30, [sp], #16
   23fcc:	ret
   23fd0:	mov	x8, x0
   23fd4:	ldr	x0, [x0, #24]
   23fd8:	ldrb	w0, [x0]
   23fdc:	cmp	w0, #0x5f
   23fe0:	b.eq	24034 <__asan_backtrace_create_state@@Base+0x554>  // b.none
   23fe4:	cmp	w0, #0x6e
   23fe8:	b.ne	24000 <__asan_backtrace_create_state@@Base+0x520>  // b.any
   23fec:	mov	w0, #0xffffffff            	// #-1
   23ff0:	ret
   23ff4:	mov	w0, #0xffffffff            	// #-1
   23ff8:	ldp	x29, x30, [sp], #16
   23ffc:	ret
   24000:	stp	x29, x30, [sp, #-16]!
   24004:	add	x0, x8, #0x18
   24008:	mov	x29, sp
   2400c:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   24010:	adds	w0, w0, #0x1
   24014:	b.mi	23ff4 <__asan_backtrace_create_state@@Base+0x514>  // b.first
   24018:	ldr	x1, [x8, #24]
   2401c:	ldrb	w2, [x1]
   24020:	cmp	w2, #0x5f
   24024:	b.ne	23ff4 <__asan_backtrace_create_state@@Base+0x514>  // b.any
   24028:	add	x1, x1, #0x1
   2402c:	str	x1, [x8, #24]
   24030:	b	23ff8 <__asan_backtrace_create_state@@Base+0x518>
   24034:	ldr	x1, [x8, #24]
   24038:	mov	w0, #0x0                   	// #0
   2403c:	ldrb	w2, [x1]
   24040:	cmp	w2, #0x5f
   24044:	b.ne	23fec <__asan_backtrace_create_state@@Base+0x50c>  // b.any
   24048:	add	x1, x1, #0x1
   2404c:	str	x1, [x8, #24]
   24050:	ret
   24054:	ldr	x1, [x0, #24]
   24058:	ldrb	w2, [x1]
   2405c:	cmp	w2, #0x54
   24060:	b.eq	24078 <__asan_backtrace_create_state@@Base+0x598>  // b.none
   24064:	mov	x0, #0x0                   	// #0
   24068:	ret
   2406c:	mov	x0, #0x0                   	// #0
   24070:	ldp	x29, x30, [sp], #16
   24074:	ret
   24078:	stp	x29, x30, [sp, #-16]!
   2407c:	add	x1, x1, #0x1
   24080:	mov	x9, x0
   24084:	mov	x29, sp
   24088:	str	x1, [x0, #24]
   2408c:	bl	23fd0 <__asan_backtrace_create_state@@Base+0x4f0>
   24090:	sxtw	x4, w0
   24094:	tbnz	w4, #31, 2406c <__asan_backtrace_create_state@@Base+0x58c>
   24098:	mov	x0, x9
   2409c:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   240a0:	cbz	x0, 24070 <__asan_backtrace_create_state@@Base+0x590>
   240a4:	mov	w1, #0x5                   	// #5
   240a8:	str	w1, [x0]
   240ac:	str	x4, [x0, #8]
   240b0:	b	24070 <__asan_backtrace_create_state@@Base+0x590>
   240b4:	mov	x8, x0
   240b8:	cbnz	w1, 240e8 <__asan_backtrace_create_state@@Base+0x608>
   240bc:	ldr	x0, [x0, #24]
   240c0:	ldrb	w1, [x0]
   240c4:	cbnz	w1, 240dc <__asan_backtrace_create_state@@Base+0x5fc>
   240c8:	mov	w0, #0x0                   	// #0
   240cc:	ret
   240d0:	mov	w0, #0x0                   	// #0
   240d4:	ldp	x29, x30, [sp], #16
   240d8:	ret
   240dc:	add	x1, x0, #0x1
   240e0:	str	x1, [x8, #24]
   240e4:	ldrb	w1, [x0]
   240e8:	stp	x29, x30, [sp, #-16]!
   240ec:	cmp	w1, #0x68
   240f0:	mov	x29, sp
   240f4:	b.ne	24120 <__asan_backtrace_create_state@@Base+0x640>  // b.any
   240f8:	add	x0, x8, #0x18
   240fc:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   24100:	ldr	x0, [x8, #24]
   24104:	ldrb	w1, [x0]
   24108:	cmp	w1, #0x5f
   2410c:	b.ne	240d0 <__asan_backtrace_create_state@@Base+0x5f0>  // b.any
   24110:	add	x0, x0, #0x1
   24114:	str	x0, [x8, #24]
   24118:	mov	w0, #0x1                   	// #1
   2411c:	b	240d4 <__asan_backtrace_create_state@@Base+0x5f4>
   24120:	cmp	w1, #0x76
   24124:	b.ne	240d0 <__asan_backtrace_create_state@@Base+0x5f0>  // b.any
   24128:	add	x9, x8, #0x18
   2412c:	mov	x0, x9
   24130:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   24134:	ldr	x0, [x8, #24]
   24138:	ldrb	w1, [x0]
   2413c:	cmp	w1, #0x5f
   24140:	b.ne	240d0 <__asan_backtrace_create_state@@Base+0x5f0>  // b.any
   24144:	add	x0, x0, #0x1
   24148:	str	x0, [x8, #24]
   2414c:	mov	x0, x9
   24150:	b	240fc <__asan_backtrace_create_state@@Base+0x61c>
   24154:	ldrb	w2, [x0]
   24158:	sub	w1, w2, #0x4b
   2415c:	and	w1, w1, #0xff
   24160:	cmp	w1, #0x27
   24164:	b.ls	24178 <__asan_backtrace_create_state@@Base+0x698>  // b.plast
   24168:	cmp	w2, #0x44
   2416c:	b.eq	2418c <__asan_backtrace_create_state@@Base+0x6ac>  // b.none
   24170:	mov	w0, #0x0                   	// #0
   24174:	ret
   24178:	mov	x0, #0x801                 	// #2049
   2417c:	movk	x0, #0x80, lsl #32
   24180:	lsr	x0, x0, x1
   24184:	and	w0, w0, #0x1
   24188:	b	24174 <__asan_backtrace_create_state@@Base+0x694>
   2418c:	ldrb	w0, [x0, #1]
   24190:	and	w1, w0, #0xffffffdf
   24194:	sub	w0, w0, #0x77
   24198:	and	w0, w0, #0xff
   2419c:	cmp	w1, #0x4f
   241a0:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   241a4:	cset	w0, ls  // ls = plast
   241a8:	b	24174 <__asan_backtrace_create_state@@Base+0x694>
   241ac:	ldr	x0, [x0]
   241b0:	ldrb	w1, [x0, #1]
   241b4:	cmp	w1, #0x63
   241b8:	b.ne	241e4 <__asan_backtrace_create_state@@Base+0x704>  // b.any
   241bc:	ldrb	w0, [x0]
   241c0:	sub	w1, w0, #0x63
   241c4:	and	w1, w1, #0xff
   241c8:	cmp	w1, #0x1
   241cc:	b.ls	241ec <__asan_backtrace_create_state@@Base+0x70c>  // b.plast
   241d0:	sub	w0, w0, #0x72
   241d4:	and	w0, w0, #0xff
   241d8:	cmp	w0, #0x1
   241dc:	cset	w0, ls  // ls = plast
   241e0:	ret
   241e4:	mov	w0, #0x0                   	// #0
   241e8:	b	241e0 <__asan_backtrace_create_state@@Base+0x700>
   241ec:	mov	w0, #0x1                   	// #1
   241f0:	b	241e0 <__asan_backtrace_create_state@@Base+0x700>
   241f4:	mov	x8, x0
   241f8:	ldr	x0, [x0, #24]
   241fc:	ldrb	w1, [x0]
   24200:	cmp	w1, #0x5f
   24204:	b.eq	24210 <__asan_backtrace_create_state@@Base+0x730>  // b.none
   24208:	mov	w0, #0x1                   	// #1
   2420c:	ret
   24210:	stp	x29, x30, [sp, #-16]!
   24214:	add	x1, x0, #0x1
   24218:	mov	x29, sp
   2421c:	str	x1, [x8, #24]
   24220:	ldrb	w1, [x0, #1]
   24224:	cmp	w1, #0x5f
   24228:	b.ne	24274 <__asan_backtrace_create_state@@Base+0x794>  // b.any
   2422c:	add	x0, x0, #0x2
   24230:	mov	w9, #0x2                   	// #2
   24234:	str	x0, [x8, #24]
   24238:	add	x0, x8, #0x18
   2423c:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   24240:	tbnz	w0, #31, 2427c <__asan_backtrace_create_state@@Base+0x79c>
   24244:	cmp	w9, #0x1
   24248:	ccmp	w0, #0x9, #0x4, gt
   2424c:	b.le	24268 <__asan_backtrace_create_state@@Base+0x788>
   24250:	ldr	x0, [x8, #24]
   24254:	ldrb	w1, [x0]
   24258:	cmp	w1, #0x5f
   2425c:	b.ne	2427c <__asan_backtrace_create_state@@Base+0x79c>  // b.any
   24260:	add	x0, x0, #0x1
   24264:	str	x0, [x8, #24]
   24268:	mov	w0, #0x1                   	// #1
   2426c:	ldp	x29, x30, [sp], #16
   24270:	ret
   24274:	mov	w9, #0x1                   	// #1
   24278:	b	24238 <__asan_backtrace_create_state@@Base+0x758>
   2427c:	mov	w0, #0x0                   	// #0
   24280:	b	2426c <__asan_backtrace_create_state@@Base+0x78c>
   24284:	cbnz	x0, 2428c <__asan_backtrace_create_state@@Base+0x7ac>
   24288:	ret
   2428c:	ldr	w2, [x0]
   24290:	cmp	w2, #0x2f
   24294:	b.ne	242b8 <__asan_backtrace_create_state@@Base+0x7d8>  // b.any
   24298:	cmp	w1, #0x0
   2429c:	b.le	242ac <__asan_backtrace_create_state@@Base+0x7cc>
   242a0:	sub	w1, w1, #0x1
   242a4:	ldr	x0, [x0, #16]
   242a8:	b	24284 <__asan_backtrace_create_state@@Base+0x7a4>
   242ac:	b.ne	242b8 <__asan_backtrace_create_state@@Base+0x7d8>  // b.any
   242b0:	ldr	x0, [x0, #8]
   242b4:	b	24288 <__asan_backtrace_create_state@@Base+0x7a8>
   242b8:	mov	x0, #0x0                   	// #0
   242bc:	b	24288 <__asan_backtrace_create_state@@Base+0x7a8>
   242c0:	stp	x29, x30, [sp, #-32]!
   242c4:	mov	x29, sp
   242c8:	stp	x19, x20, [sp, #16]
   242cc:	mov	x19, x0
   242d0:	ldr	w0, [x0, #24]
   242d4:	cbnz	w0, 24318 <__asan_backtrace_create_state@@Base+0x838>
   242d8:	ldr	x20, [x19, #16]
   242dc:	mov	x0, #0x2                   	// #2
   242e0:	cmp	x20, #0x0
   242e4:	csel	x20, x20, x0, ne  // ne = any
   242e8:	cmp	x20, x1
   242ec:	b.cc	24324 <__asan_backtrace_create_state@@Base+0x844>  // b.lo, b.ul, b.last
   242f0:	ldr	x0, [x19]
   242f4:	mov	x1, x20
   242f8:	bl	6cb0 <realloc@plt>
   242fc:	cbnz	x0, 2432c <__asan_backtrace_create_state@@Base+0x84c>
   24300:	ldr	x0, [x19]
   24304:	bl	6760 <free@plt>
   24308:	stp	xzr, xzr, [x19]
   2430c:	mov	w0, #0x1                   	// #1
   24310:	str	xzr, [x19, #16]
   24314:	str	w0, [x19, #24]
   24318:	ldp	x19, x20, [sp, #16]
   2431c:	ldp	x29, x30, [sp], #32
   24320:	ret
   24324:	lsl	x20, x20, #1
   24328:	b	242e8 <__asan_backtrace_create_state@@Base+0x808>
   2432c:	str	x0, [x19]
   24330:	str	x20, [x19, #16]
   24334:	b	24318 <__asan_backtrace_create_state@@Base+0x838>
   24338:	stp	x29, x30, [sp, #-48]!
   2433c:	mov	x29, sp
   24340:	str	x21, [sp, #32]
   24344:	mov	x21, x0
   24348:	ldr	x0, [x2, #8]
   2434c:	stp	x19, x20, [sp, #16]
   24350:	mov	x20, x1
   24354:	add	x1, x1, #0x1
   24358:	mov	x19, x2
   2435c:	add	x1, x1, x0
   24360:	ldr	x0, [x2, #16]
   24364:	cmp	x1, x0
   24368:	b.ls	24374 <__asan_backtrace_create_state@@Base+0x894>  // b.plast
   2436c:	mov	x0, x2
   24370:	bl	242c0 <__asan_backtrace_create_state@@Base+0x7e0>
   24374:	ldr	w0, [x19, #24]
   24378:	cbnz	w0, 243a8 <__asan_backtrace_create_state@@Base+0x8c8>
   2437c:	ldp	x3, x0, [x19]
   24380:	mov	x2, x20
   24384:	mov	x1, x21
   24388:	add	x0, x3, x0
   2438c:	bl	6840 <__asan_internal_memcpy@plt>
   24390:	ldp	x0, x1, [x19]
   24394:	add	x0, x0, x20
   24398:	strb	wzr, [x0, x1]
   2439c:	ldr	x1, [x19, #8]
   243a0:	add	x20, x1, x20
   243a4:	str	x20, [x19, #8]
   243a8:	ldp	x19, x20, [sp, #16]
   243ac:	ldr	x21, [sp, #32]
   243b0:	ldp	x29, x30, [sp], #48
   243b4:	ret
   243b8:	mov	x2, x0
   243bc:	ldr	x0, [x0, #288]
   243c0:	cbnz	x0, 243d0 <__asan_backtrace_create_state@@Base+0x8f0>
   243c4:	mov	w1, #0x1                   	// #1
   243c8:	str	w1, [x2, #304]
   243cc:	ret
   243d0:	ldr	x1, [x1]
   243d4:	ldr	x0, [x0, #8]
   243d8:	ldr	x0, [x0, #16]
   243dc:	tbnz	w1, #31, 243cc <__asan_backtrace_create_state@@Base+0x8ec>
   243e0:	b	24284 <__asan_backtrace_create_state@@Base+0x7a4>
   243e4:	stp	x29, x30, [sp, #-64]!
   243e8:	mov	x29, sp
   243ec:	str	x23, [sp, #48]
   243f0:	mov	x23, #0x8001                	// #32769
   243f4:	movk	x23, #0x410, lsl #16
   243f8:	stp	x19, x20, [sp, #16]
   243fc:	movk	x23, #0xc600, lsl #32
   24400:	mov	x20, x0
   24404:	mov	x19, x1
   24408:	stp	x21, x22, [sp, #32]
   2440c:	adrp	x21, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24410:	add	x21, x21, #0x2c
   24414:	mov	x22, #0x1                   	// #1
   24418:	movk	x23, #0x19, lsl #48
   2441c:	cbz	x19, 244a4 <__asan_backtrace_create_state@@Base+0x9c4>
   24420:	ldr	w1, [x19]
   24424:	cmp	w1, #0x8
   24428:	b.ls	24464 <__asan_backtrace_create_state@@Base+0x984>  // b.plast
   2442c:	sub	w1, w1, #0x18
   24430:	cmp	w1, #0x34
   24434:	b.ls	2444c <__asan_backtrace_create_state@@Base+0x96c>  // b.plast
   24438:	ldr	x1, [x19, #8]
   2443c:	mov	x0, x20
   24440:	bl	243e4 <__asan_backtrace_create_state@@Base+0x904>
   24444:	cbz	x0, 2445c <__asan_backtrace_create_state@@Base+0x97c>
   24448:	b	24490 <__asan_backtrace_create_state@@Base+0x9b0>
   2444c:	lsl	x1, x22, x1
   24450:	tst	x1, x23
   24454:	b.ne	244a4 <__asan_backtrace_create_state@@Base+0x9c4>  // b.any
   24458:	tbz	w1, #27, 24438 <__asan_backtrace_create_state@@Base+0x958>
   2445c:	ldr	x19, [x19, #16]
   24460:	b	2441c <__asan_backtrace_create_state@@Base+0x93c>
   24464:	ldrb	w0, [x21, w1, uxtw]
   24468:	adr	x1, 24474 <__asan_backtrace_create_state@@Base+0x994>
   2446c:	add	x0, x1, w0, sxtb #2
   24470:	br	x0
   24474:	add	x1, x19, #0x8
   24478:	mov	x0, x20
   2447c:	bl	243b8 <__asan_backtrace_create_state@@Base+0x8d8>
   24480:	cbz	x0, 244a4 <__asan_backtrace_create_state@@Base+0x9c4>
   24484:	ldr	w1, [x0]
   24488:	cmp	w1, #0x2f
   2448c:	b.ne	244a4 <__asan_backtrace_create_state@@Base+0x9c4>  // b.any
   24490:	ldp	x19, x20, [sp, #16]
   24494:	ldp	x21, x22, [sp, #32]
   24498:	ldr	x23, [sp, #48]
   2449c:	ldp	x29, x30, [sp], #64
   244a0:	ret
   244a4:	mov	x0, #0x0                   	// #0
   244a8:	b	24490 <__asan_backtrace_create_state@@Base+0x9b0>
   244ac:	stp	x29, x30, [sp, #-224]!
   244b0:	mov	x29, sp
   244b4:	stp	x19, x20, [sp, #16]
   244b8:	mov	x19, x0
   244bc:	stp	x21, x22, [sp, #32]
   244c0:	stp	x23, x24, [sp, #48]
   244c4:	str	x25, [sp, #64]
   244c8:	cbnz	x2, 244ec <__asan_backtrace_create_state@@Base+0xa0c>
   244cc:	mov	w0, #0x1                   	// #1
   244d0:	str	w0, [x19, #304]
   244d4:	ldp	x19, x20, [sp, #16]
   244d8:	ldp	x21, x22, [sp, #32]
   244dc:	ldp	x23, x24, [sp, #48]
   244e0:	ldr	x25, [sp, #64]
   244e4:	ldp	x29, x30, [sp], #224
   244e8:	ret
   244ec:	ldr	w22, [x0, #304]
   244f0:	cbnz	w22, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   244f4:	ldr	w0, [x2]
   244f8:	mov	x20, x2
   244fc:	cmp	w0, #0x50
   24500:	b.hi	2566c <__asan_backtrace_create_state@@Base+0x1b8c>  // b.pmore
   24504:	mov	w21, w1
   24508:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2450c:	add	x1, x1, #0x38
   24510:	ldrh	w1, [x1, w0, uxtw #1]
   24514:	adr	x2, 24520 <__asan_backtrace_create_state@@Base+0xa40>
   24518:	add	x1, x2, w1, sxth #2
   2451c:	br	x1
   24520:	ldrsw	x2, [x20, #16]
   24524:	ldr	x20, [x20, #8]
   24528:	tbnz	w21, #2, 2453c <__asan_backtrace_create_state@@Base+0xa5c>
   2452c:	mov	x1, x20
   24530:	mov	x0, x19
   24534:	bl	23e24 <__asan_backtrace_create_state@@Base+0x344>
   24538:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   2453c:	add	x21, x20, x2
   24540:	cmp	x21, x20
   24544:	b.ls	244d4 <__asan_backtrace_create_state@@Base+0x9f4>  // b.plast
   24548:	sub	x0, x21, x20
   2454c:	ldrb	w3, [x20]
   24550:	cmp	x0, #0x3
   24554:	b.le	24588 <__asan_backtrace_create_state@@Base+0xaa8>
   24558:	cmp	w3, #0x5f
   2455c:	b.ne	24588 <__asan_backtrace_create_state@@Base+0xaa8>  // b.any
   24560:	ldrb	w0, [x20, #1]
   24564:	cmp	w0, #0x5f
   24568:	b.ne	24588 <__asan_backtrace_create_state@@Base+0xaa8>  // b.any
   2456c:	ldrb	w0, [x20, #2]
   24570:	cmp	w0, #0x55
   24574:	b.ne	24588 <__asan_backtrace_create_state@@Base+0xaa8>  // b.any
   24578:	add	x22, x20, #0x3
   2457c:	mov	x1, #0x0                   	// #0
   24580:	cmp	x21, x22
   24584:	b.hi	2459c <__asan_backtrace_create_state@@Base+0xabc>  // b.pmore
   24588:	mov	w1, w3
   2458c:	mov	x0, x19
   24590:	mov	x22, x20
   24594:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   24598:	b	24604 <__asan_backtrace_create_state@@Base+0xb24>
   2459c:	ldrb	w2, [x22]
   245a0:	sub	w0, w2, #0x30
   245a4:	and	w4, w0, #0xff
   245a8:	cmp	w4, #0x9
   245ac:	b.ls	245c4 <__asan_backtrace_create_state@@Base+0xae4>  // b.plast
   245b0:	sub	w0, w2, #0x41
   245b4:	and	w0, w0, #0xff
   245b8:	cmp	w0, #0x5
   245bc:	b.hi	245d4 <__asan_backtrace_create_state@@Base+0xaf4>  // b.pmore
   245c0:	sub	w0, w2, #0x37
   245c4:	sxtw	x0, w0
   245c8:	add	x22, x22, #0x1
   245cc:	add	x1, x0, x1, lsl #4
   245d0:	b	24580 <__asan_backtrace_create_state@@Base+0xaa0>
   245d4:	sub	w0, w2, #0x61
   245d8:	and	w0, w0, #0xff
   245dc:	cmp	w0, #0x5
   245e0:	b.hi	245ec <__asan_backtrace_create_state@@Base+0xb0c>  // b.pmore
   245e4:	sub	w0, w2, #0x57
   245e8:	b	245c4 <__asan_backtrace_create_state@@Base+0xae4>
   245ec:	cmp	w2, #0x5f
   245f0:	b.ne	24588 <__asan_backtrace_create_state@@Base+0xaa8>  // b.any
   245f4:	cmp	x1, #0xff
   245f8:	b.hi	24588 <__asan_backtrace_create_state@@Base+0xaa8>  // b.pmore
   245fc:	mov	x0, x19
   24600:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   24604:	add	x20, x22, #0x1
   24608:	b	24540 <__asan_backtrace_create_state@@Base+0xa60>
   2460c:	ldr	x2, [x20, #8]
   24610:	mov	w1, w21
   24614:	mov	x0, x19
   24618:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   2461c:	mov	x0, x19
   24620:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24624:	add	x1, x1, #0x23c
   24628:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   2462c:	ldr	x2, [x20, #16]
   24630:	mov	w1, w21
   24634:	mov	x0, x19
   24638:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   2463c:	mov	x0, x19
   24640:	mov	w1, #0x5d                  	// #93
   24644:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   24648:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   2464c:	ldr	x2, [x20, #8]
   24650:	mov	w1, w21
   24654:	mov	x0, x19
   24658:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   2465c:	tbnz	w21, #2, 246c8 <__asan_backtrace_create_state@@Base+0xbe8>
   24660:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24664:	mov	x0, x19
   24668:	add	x1, x1, #0x251
   2466c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24670:	ldr	x20, [x20, #16]
   24674:	ldr	w0, [x20]
   24678:	cmp	w0, #0x47
   2467c:	b.ne	246b4 <__asan_backtrace_create_state@@Base+0xbd4>  // b.any
   24680:	mov	x0, x19
   24684:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24688:	add	x1, x1, #0x242
   2468c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24690:	ldr	w1, [x20, #16]
   24694:	mov	x0, x19
   24698:	add	w1, w1, #0x1
   2469c:	bl	23ecc <__asan_backtrace_create_state@@Base+0x3ec>
   246a0:	mov	x0, x19
   246a4:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   246a8:	add	x1, x1, #0x250
   246ac:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   246b0:	ldr	x20, [x20, #8]
   246b4:	mov	x2, x20
   246b8:	mov	w1, w21
   246bc:	mov	x0, x19
   246c0:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   246c4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   246c8:	mov	x0, x19
   246cc:	mov	w1, #0x2e                  	// #46
   246d0:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   246d4:	b	24670 <__asan_backtrace_create_state@@Base+0xb90>
   246d8:	add	x3, sp, #0x60
   246dc:	mov	w23, #0x0                   	// #0
   246e0:	mov	x2, x3
   246e4:	ldr	x22, [x20, #8]
   246e8:	ldr	x24, [x19, #296]
   246ec:	str	xzr, [x19, #296]
   246f0:	cbz	x22, 246fc <__asan_backtrace_create_state@@Base+0xc1c>
   246f4:	cmp	w23, #0x4
   246f8:	b.ne	24708 <__asan_backtrace_create_state@@Base+0xc28>  // b.any
   246fc:	mov	w0, #0x1                   	// #1
   24700:	str	w0, [x19, #304]
   24704:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24708:	str	wzr, [x3, #16]
   2470c:	add	w23, w23, #0x1
   24710:	ldp	x4, x0, [x19, #288]
   24714:	stp	x0, x22, [x3]
   24718:	ldr	w5, [x22]
   2471c:	str	x4, [x3, #24]
   24720:	str	x3, [x19, #296]
   24724:	mov	w0, w5
   24728:	bl	23b60 <__asan_backtrace_create_state@@Base+0x80>
   2472c:	add	x3, x3, #0x20
   24730:	cbz	w0, 25bc4 <__asan_backtrace_create_state@@Base+0x20e4>
   24734:	ldr	x22, [x22, #8]
   24738:	b	246f0 <__asan_backtrace_create_state@@Base+0xc10>
   2473c:	cmp	w23, #0x4
   24740:	b.eq	246fc <__asan_backtrace_create_state@@Base+0xc1c>  // b.none
   24744:	ldp	x0, x1, [x2, #-32]
   24748:	stur	x22, [x2, #-24]
   2474c:	stp	x0, x1, [x2]
   24750:	sub	x3, x2, #0x20
   24754:	add	w23, w23, #0x1
   24758:	ldp	x0, x1, [x2, #-16]
   2475c:	stur	wzr, [x2, #-16]
   24760:	stp	x4, x3, [x2, #-8]
   24764:	stp	x0, x1, [x2, #16]
   24768:	ldr	x22, [x22, #8]
   2476c:	str	x2, [x19, #296]
   24770:	add	x2, x2, #0x20
   24774:	b	25bec <__asan_backtrace_create_state@@Base+0x210c>
   24778:	ldr	x22, [x20, #8]
   2477c:	ldr	x24, [x19, #296]
   24780:	str	xzr, [x19, #296]
   24784:	ldr	x23, [x19, #368]
   24788:	str	x20, [x19, #368]
   2478c:	tbz	w21, #2, 247e8 <__asan_backtrace_create_state@@Base+0xd08>
   24790:	ldr	w0, [x22]
   24794:	cbnz	w0, 247e8 <__asan_backtrace_create_state@@Base+0xd08>
   24798:	ldr	w0, [x22, #16]
   2479c:	cmp	w0, #0x6
   247a0:	b.ne	247e8 <__asan_backtrace_create_state@@Base+0xd08>  // b.any
   247a4:	ldr	x0, [x22, #8]
   247a8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   247ac:	mov	x2, #0x6                   	// #6
   247b0:	add	x1, x1, #0x254
   247b4:	bl	6bd0 <__asan_internal_strncmp@plt>
   247b8:	cbnz	w0, 247e8 <__asan_backtrace_create_state@@Base+0xd08>
   247bc:	ldr	x2, [x20, #16]
   247c0:	mov	w1, w21
   247c4:	mov	x0, x19
   247c8:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   247cc:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   247d0:	mov	x0, x19
   247d4:	add	x1, x1, #0x82c
   247d8:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   247dc:	str	x24, [x19, #296]
   247e0:	str	x23, [x19, #368]
   247e4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   247e8:	mov	x0, x19
   247ec:	mov	x2, x22
   247f0:	mov	w1, w21
   247f4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   247f8:	ldrb	w0, [x19, #264]
   247fc:	cmp	w0, #0x3c
   24800:	b.ne	24810 <__asan_backtrace_create_state@@Base+0xd30>  // b.any
   24804:	mov	x0, x19
   24808:	mov	w1, #0x20                  	// #32
   2480c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   24810:	mov	x0, x19
   24814:	mov	w1, #0x3c                  	// #60
   24818:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   2481c:	ldr	x2, [x20, #16]
   24820:	mov	x0, x19
   24824:	mov	w1, w21
   24828:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   2482c:	ldrb	w0, [x19, #264]
   24830:	cmp	w0, #0x3e
   24834:	b.ne	24844 <__asan_backtrace_create_state@@Base+0xd64>  // b.any
   24838:	mov	x0, x19
   2483c:	mov	w1, #0x20                  	// #32
   24840:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   24844:	mov	x0, x19
   24848:	mov	w1, #0x3e                  	// #62
   2484c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   24850:	b	247dc <__asan_backtrace_create_state@@Base+0xcfc>
   24854:	ldr	w0, [x19, #312]
   24858:	cbz	w0, 24884 <__asan_backtrace_create_state@@Base+0xda4>
   2485c:	mov	x0, x19
   24860:	mov	x2, #0x5                   	// #5
   24864:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24868:	add	x1, x1, #0x25b
   2486c:	bl	23e24 <__asan_backtrace_create_state@@Base+0x344>
   24870:	ldr	x1, [x20, #8]
   24874:	mov	x0, x19
   24878:	add	w1, w1, #0x1
   2487c:	bl	23ecc <__asan_backtrace_create_state@@Base+0x3ec>
   24880:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24884:	add	x1, x20, #0x8
   24888:	mov	x0, x19
   2488c:	bl	243b8 <__asan_backtrace_create_state@@Base+0x8d8>
   24890:	mov	x2, x0
   24894:	cbz	x0, 244cc <__asan_backtrace_create_state@@Base+0x9ec>
   24898:	ldr	w1, [x0]
   2489c:	cmp	w1, #0x2f
   248a0:	b.ne	248b8 <__asan_backtrace_create_state@@Base+0xdd8>  // b.any
   248a4:	ldr	w1, [x19, #316]
   248a8:	tbnz	w1, #31, 248b8 <__asan_backtrace_create_state@@Base+0xdd8>
   248ac:	bl	24284 <__asan_backtrace_create_state@@Base+0x7a4>
   248b0:	mov	x2, x0
   248b4:	cbz	x0, 244cc <__asan_backtrace_create_state@@Base+0x9ec>
   248b8:	ldr	x20, [x19, #288]
   248bc:	mov	w1, w21
   248c0:	ldr	x0, [x20]
   248c4:	str	x0, [x19, #288]
   248c8:	mov	x0, x19
   248cc:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   248d0:	str	x20, [x19, #288]
   248d4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   248d8:	mov	x0, x19
   248dc:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   248e0:	add	x1, x1, #0x261
   248e4:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   248e8:	ldr	x2, [x20, #8]
   248ec:	mov	w1, w21
   248f0:	mov	x0, x19
   248f4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   248f8:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   248fc:	ldr	x2, [x20, #16]
   24900:	mov	w1, w21
   24904:	mov	x0, x19
   24908:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   2490c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24910:	mov	x0, x19
   24914:	mov	w1, #0x7e                  	// #126
   24918:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   2491c:	ldr	x2, [x20, #16]
   24920:	mov	w1, w21
   24924:	mov	x0, x19
   24928:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   2492c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24930:	mov	x0, x19
   24934:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24938:	add	x1, x1, #0x296
   2493c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24940:	ldr	x2, [x20, #8]
   24944:	mov	w1, w21
   24948:	mov	x0, x19
   2494c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24950:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24954:	mov	x0, x19
   24958:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2495c:	add	x1, x1, #0x280
   24960:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24964:	ldr	x2, [x20, #8]
   24968:	mov	w1, w21
   2496c:	mov	x0, x19
   24970:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24974:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24978:	mov	x0, x19
   2497c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24980:	add	x1, x1, #0x289
   24984:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24988:	ldr	x2, [x20, #8]
   2498c:	mov	w1, w21
   24990:	mov	x0, x19
   24994:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24998:	mov	x0, x19
   2499c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   249a0:	add	x1, x1, #0x2a2
   249a4:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   249a8:	ldr	x2, [x20, #16]
   249ac:	mov	w1, w21
   249b0:	mov	x0, x19
   249b4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   249b8:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   249bc:	mov	x0, x19
   249c0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   249c4:	add	x1, x1, #0x2a7
   249c8:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   249cc:	ldr	x2, [x20, #8]
   249d0:	mov	w1, w21
   249d4:	mov	x0, x19
   249d8:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   249dc:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   249e0:	mov	x0, x19
   249e4:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   249e8:	add	x1, x1, #0x2b5
   249ec:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   249f0:	ldr	x2, [x20, #8]
   249f4:	mov	w1, w21
   249f8:	mov	x0, x19
   249fc:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24a00:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24a04:	mov	x0, x19
   24a08:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24a0c:	add	x1, x1, #0x2c8
   24a10:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24a14:	ldr	x2, [x20, #8]
   24a18:	mov	w1, w21
   24a1c:	mov	x0, x19
   24a20:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24a24:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24a28:	mov	x0, x19
   24a2c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24a30:	add	x1, x1, #0x2d9
   24a34:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24a38:	ldr	x2, [x20, #8]
   24a3c:	mov	w1, w21
   24a40:	mov	x0, x19
   24a44:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24a48:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24a4c:	mov	x0, x19
   24a50:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24a54:	add	x1, x1, #0x2dd
   24a58:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24a5c:	ldr	x2, [x20, #8]
   24a60:	mov	w1, w21
   24a64:	mov	x0, x19
   24a68:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24a6c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24a70:	mov	x0, x19
   24a74:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24a78:	add	x1, x1, #0x2ef
   24a7c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24a80:	ldr	x2, [x20, #8]
   24a84:	mov	w1, w21
   24a88:	mov	x0, x19
   24a8c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24a90:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24a94:	mov	x0, x19
   24a98:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24a9c:	add	x1, x1, #0x30a
   24aa0:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24aa4:	ldr	x2, [x20, #8]
   24aa8:	mov	w1, w21
   24aac:	mov	x0, x19
   24ab0:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24ab4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24ab8:	mov	x0, x19
   24abc:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24ac0:	add	x1, x1, #0x31a
   24ac4:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24ac8:	ldr	x2, [x20, #8]
   24acc:	mov	w1, w21
   24ad0:	mov	x0, x19
   24ad4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24ad8:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24adc:	mov	x0, x19
   24ae0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24ae4:	add	x1, x1, #0x32e
   24ae8:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24aec:	ldr	x2, [x20, #8]
   24af0:	mov	w1, w21
   24af4:	mov	x0, x19
   24af8:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24afc:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24b00:	mov	x0, x19
   24b04:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24b08:	add	x1, x1, #0x345
   24b0c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24b10:	ldr	x2, [x20, #8]
   24b14:	mov	w1, w21
   24b18:	mov	x0, x19
   24b1c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24b20:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24b24:	mov	x0, x19
   24b28:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24b2c:	add	x1, x1, #0x35f
   24b30:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24b34:	ldr	x2, [x20, #16]
   24b38:	mov	w1, w21
   24b3c:	mov	x0, x19
   24b40:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24b44:	mov	x0, x19
   24b48:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24b4c:	add	x1, x1, #0x283
   24b50:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24b54:	ldr	x2, [x20, #8]
   24b58:	mov	w1, w21
   24b5c:	mov	x0, x19
   24b60:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24b64:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24b68:	mov	x0, x19
   24b6c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24b70:	add	x1, x1, #0x375
   24b74:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24b78:	ldr	x2, [x20, #8]
   24b7c:	mov	w1, w21
   24b80:	mov	x0, x19
   24b84:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24b88:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24b8c:	mov	x0, x19
   24b90:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24b94:	add	x1, x1, #0x38b
   24b98:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24b9c:	ldr	x2, [x20, #8]
   24ba0:	mov	w1, w21
   24ba4:	mov	x0, x19
   24ba8:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24bac:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24bb0:	mov	x0, x19
   24bb4:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   24bb8:	add	x1, x1, #0x387
   24bbc:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   24bc0:	ldr	x2, [x20, #8]
   24bc4:	mov	w1, w21
   24bc8:	mov	x0, x19
   24bcc:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24bd0:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24bd4:	ldrsw	x2, [x20, #16]
   24bd8:	mov	x0, x19
   24bdc:	ldr	x1, [x20, #8]
   24be0:	bl	23e24 <__asan_backtrace_create_state@@Base+0x344>
   24be4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24be8:	ldr	x2, [x19, #296]
   24bec:	cbnz	x2, 24c50 <__asan_backtrace_create_state@@Base+0x1170>
   24bf0:	mov	w22, #0x0                   	// #0
   24bf4:	ldr	x0, [x19, #296]
   24bf8:	stp	x0, x20, [sp, #96]
   24bfc:	add	x0, sp, #0x60
   24c00:	str	x0, [x19, #296]
   24c04:	ldr	x0, [x19, #288]
   24c08:	str	wzr, [sp, #112]
   24c0c:	str	x0, [sp, #120]
   24c10:	cbnz	x2, 24c18 <__asan_backtrace_create_state@@Base+0x1138>
   24c14:	ldr	x2, [x20, #8]
   24c18:	mov	x0, x19
   24c1c:	mov	w1, w21
   24c20:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24c24:	ldr	w0, [sp, #112]
   24c28:	cbnz	w0, 24c3c <__asan_backtrace_create_state@@Base+0x115c>
   24c2c:	mov	x2, x20
   24c30:	mov	w1, w21
   24c34:	mov	x0, x19
   24c38:	bl	25d5c <__asan_backtrace_create_state@@Base+0x227c>
   24c3c:	ldr	x0, [sp, #96]
   24c40:	str	x0, [x19, #296]
   24c44:	cbz	w22, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24c48:	str	x23, [x19, #288]
   24c4c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24c50:	ldr	w22, [x2, #16]
   24c54:	cbnz	w22, 24c88 <__asan_backtrace_create_state@@Base+0x11a8>
   24c58:	ldr	x1, [x2, #8]
   24c5c:	ldr	w1, [x1]
   24c60:	sub	w3, w1, #0x19
   24c64:	cmp	w3, #0x2
   24c68:	b.hi	24e00 <__asan_backtrace_create_state@@Base+0x1320>  // b.pmore
   24c6c:	cmp	w0, w1
   24c70:	b.ne	24c88 <__asan_backtrace_create_state@@Base+0x11a8>  // b.any
   24c74:	ldr	x2, [x20, #8]
   24c78:	mov	w1, w21
   24c7c:	mov	x0, x19
   24c80:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24c84:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24c88:	ldr	x2, [x2]
   24c8c:	b	24bec <__asan_backtrace_create_state@@Base+0x110c>
   24c90:	ldr	w22, [x19, #312]
   24c94:	ldr	x2, [x20, #8]
   24c98:	cbnz	w22, 24dd0 <__asan_backtrace_create_state@@Base+0x12f0>
   24c9c:	ldr	w0, [x2]
   24ca0:	cmp	w0, #0x5
   24ca4:	b.ne	24dd4 <__asan_backtrace_create_state@@Base+0x12f4>  // b.any
   24ca8:	ldr	w0, [x19, #344]
   24cac:	mov	x1, #0x0                   	// #0
   24cb0:	cmp	w0, w1
   24cb4:	b.gt	24cd0 <__asan_backtrace_create_state@@Base+0x11f0>
   24cb8:	ldr	w1, [x19, #348]
   24cbc:	cmp	w0, w1
   24cc0:	b.lt	24cf8 <__asan_backtrace_create_state@@Base+0x1218>  // b.tstop
   24cc4:	mov	w0, #0x1                   	// #1
   24cc8:	str	w0, [x19, #304]
   24ccc:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24cd0:	ldr	x4, [x19, #336]
   24cd4:	lsl	x3, x1, #4
   24cd8:	ldr	x3, [x4, x3]
   24cdc:	add	x5, x4, x1, lsl #4
   24ce0:	add	x1, x1, #0x1
   24ce4:	cmp	x2, x3
   24ce8:	b.ne	24cb0 <__asan_backtrace_create_state@@Base+0x11d0>  // b.any
   24cec:	ldr	x1, [x19, #328]
   24cf0:	mov	x0, x1
   24cf4:	b	24db8 <__asan_backtrace_create_state@@Base+0x12d8>
   24cf8:	ldr	x3, [x19, #336]
   24cfc:	sbfiz	x4, x0, #4, #32
   24d00:	add	x1, x3, w0, sxtw #4
   24d04:	add	w0, w0, #0x1
   24d08:	str	w0, [x19, #344]
   24d0c:	add	x0, x1, #0x8
   24d10:	str	x2, [x3, x4]
   24d14:	ldr	x4, [x19, #288]
   24d18:	cbnz	x4, 24d60 <__asan_backtrace_create_state@@Base+0x1280>
   24d1c:	str	xzr, [x0]
   24d20:	add	x1, x2, #0x8
   24d24:	mov	x0, x19
   24d28:	bl	243b8 <__asan_backtrace_create_state@@Base+0x8d8>
   24d2c:	mov	x2, x0
   24d30:	cbz	x0, 24d54 <__asan_backtrace_create_state@@Base+0x1274>
   24d34:	ldr	w1, [x0]
   24d38:	cmp	w1, #0x2f
   24d3c:	b.ne	24dd4 <__asan_backtrace_create_state@@Base+0x12f4>  // b.any
   24d40:	ldr	w1, [x19, #316]
   24d44:	tbnz	w1, #31, 24dd4 <__asan_backtrace_create_state@@Base+0x12f4>
   24d48:	bl	24284 <__asan_backtrace_create_state@@Base+0x7a4>
   24d4c:	mov	x2, x0
   24d50:	cbnz	x0, 24dd4 <__asan_backtrace_create_state@@Base+0x12f4>
   24d54:	cbz	w22, 244cc <__asan_backtrace_create_state@@Base+0x9ec>
   24d58:	str	x23, [x19, #288]
   24d5c:	b	244cc <__asan_backtrace_create_state@@Base+0x9ec>
   24d60:	ldr	w3, [x19, #360]
   24d64:	ldr	w1, [x19, #364]
   24d68:	cmp	w3, w1
   24d6c:	b.ge	24cc4 <__asan_backtrace_create_state@@Base+0x11e4>  // b.tcont
   24d70:	ldr	x1, [x19, #352]
   24d74:	add	x1, x1, w3, sxtw #4
   24d78:	add	w3, w3, #0x1
   24d7c:	str	w3, [x19, #360]
   24d80:	ldr	x3, [x4, #8]
   24d84:	str	x3, [x1, #8]
   24d88:	str	x1, [x0]
   24d8c:	mov	x0, x1
   24d90:	ldr	x4, [x4]
   24d94:	b	24d18 <__asan_backtrace_create_state@@Base+0x1238>
   24d98:	ldr	x3, [x0]
   24d9c:	cmp	x3, x2
   24da0:	b.eq	24d20 <__asan_backtrace_create_state@@Base+0x1240>  // b.none
   24da4:	cmp	x3, x20
   24da8:	b.ne	24db4 <__asan_backtrace_create_state@@Base+0x12d4>  // b.any
   24dac:	cmp	x0, x1
   24db0:	b.ne	24d20 <__asan_backtrace_create_state@@Base+0x1240>  // b.any
   24db4:	ldr	x0, [x0, #8]
   24db8:	cbnz	x0, 24d98 <__asan_backtrace_create_state@@Base+0x12b8>
   24dbc:	ldr	x0, [x5, #8]
   24dc0:	mov	w22, #0x1                   	// #1
   24dc4:	ldr	x23, [x19, #288]
   24dc8:	str	x0, [x19, #288]
   24dcc:	b	24d20 <__asan_backtrace_create_state@@Base+0x1240>
   24dd0:	mov	w22, #0x0                   	// #0
   24dd4:	ldr	w0, [x2]
   24dd8:	cmp	w0, #0x23
   24ddc:	b.eq	24e08 <__asan_backtrace_create_state@@Base+0x1328>  // b.none
   24de0:	ldr	w1, [x20]
   24de4:	cmp	w0, w1
   24de8:	b.eq	24e08 <__asan_backtrace_create_state@@Base+0x1328>  // b.none
   24dec:	cmp	w0, #0x24
   24df0:	b.ne	24e00 <__asan_backtrace_create_state@@Base+0x1320>  // b.any
   24df4:	ldr	x2, [x2, #8]
   24df8:	b	24bf4 <__asan_backtrace_create_state@@Base+0x1114>
   24dfc:	mov	w22, #0x0                   	// #0
   24e00:	mov	x2, #0x0                   	// #0
   24e04:	b	24bf4 <__asan_backtrace_create_state@@Base+0x1114>
   24e08:	mov	x20, x2
   24e0c:	b	24e00 <__asan_backtrace_create_state@@Base+0x1320>
   24e10:	ldr	x0, [x20, #8]
   24e14:	tbnz	w21, #2, 24e2c <__asan_backtrace_create_state@@Base+0x134c>
   24e18:	ldrsw	x2, [x0, #8]
   24e1c:	ldr	x1, [x0]
   24e20:	mov	x0, x19
   24e24:	bl	23e24 <__asan_backtrace_create_state@@Base+0x344>
   24e28:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24e2c:	ldrsw	x2, [x0, #24]
   24e30:	ldr	x1, [x0, #16]
   24e34:	mov	x0, x19
   24e38:	bl	23e24 <__asan_backtrace_create_state@@Base+0x344>
   24e3c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24e40:	ldr	x2, [x20, #8]
   24e44:	mov	w1, w21
   24e48:	mov	x0, x19
   24e4c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24e50:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24e54:	and	w22, w21, #0x20
   24e58:	tbz	w21, #5, 24e70 <__asan_backtrace_create_state@@Base+0x1390>
   24e5c:	ldr	x3, [x19, #296]
   24e60:	add	x2, x20, #0x10
   24e64:	and	w1, w21, #0xffffff9f
   24e68:	mov	x0, x19
   24e6c:	bl	25f24 <__asan_backtrace_create_state@@Base+0x2444>
   24e70:	ldr	x2, [x20, #8]
   24e74:	cbz	x2, 24ee8 <__asan_backtrace_create_state@@Base+0x1408>
   24e78:	and	w1, w21, #0xffffff9f
   24e7c:	cbz	w22, 24e8c <__asan_backtrace_create_state@@Base+0x13ac>
   24e80:	mov	x0, x19
   24e84:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24e88:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24e8c:	tbnz	w21, #6, 24ed0 <__asan_backtrace_create_state@@Base+0x13f0>
   24e90:	ldr	x0, [x19, #296]
   24e94:	stp	x0, x20, [sp, #96]
   24e98:	add	x0, sp, #0x60
   24e9c:	str	x0, [x19, #296]
   24ea0:	ldr	x0, [x19, #288]
   24ea4:	str	wzr, [sp, #112]
   24ea8:	str	x0, [sp, #120]
   24eac:	mov	x0, x19
   24eb0:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24eb4:	ldr	x0, [sp, #96]
   24eb8:	str	x0, [x19, #296]
   24ebc:	ldr	w0, [sp, #112]
   24ec0:	cbnz	w0, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24ec4:	mov	x0, x19
   24ec8:	mov	w1, #0x20                  	// #32
   24ecc:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   24ed0:	ldr	x3, [x19, #296]
   24ed4:	add	x2, x20, #0x10
   24ed8:	and	w1, w21, #0xffffff9f
   24edc:	mov	x0, x19
   24ee0:	bl	25f24 <__asan_backtrace_create_state@@Base+0x2444>
   24ee4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24ee8:	cbnz	w22, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24eec:	b	24ed0 <__asan_backtrace_create_state@@Base+0x13f0>
   24ef0:	ldp	x0, x23, [x19, #288]
   24ef4:	mov	w22, #0x1                   	// #1
   24ef8:	mov	w6, w22
   24efc:	str	x0, [sp, #120]
   24f00:	add	x4, sp, #0x60
   24f04:	stp	x23, x20, [sp, #96]
   24f08:	str	wzr, [sp, #112]
   24f0c:	mov	x0, x23
   24f10:	str	x4, [x19, #296]
   24f14:	cbz	x0, 24f2c <__asan_backtrace_create_state@@Base+0x144c>
   24f18:	ldr	x1, [x0, #8]
   24f1c:	ldr	w1, [x1]
   24f20:	sub	w1, w1, #0x19
   24f24:	cmp	w1, #0x2
   24f28:	b.ls	24f6c <__asan_backtrace_create_state@@Base+0x148c>  // b.plast
   24f2c:	ldr	x2, [x20, #16]
   24f30:	mov	x0, x19
   24f34:	mov	w1, w21
   24f38:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   24f3c:	str	x23, [x19, #296]
   24f40:	ldr	w0, [sp, #112]
   24f44:	cbnz	w0, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24f48:	add	x23, sp, #0x68
   24f4c:	cmp	w22, #0x1
   24f50:	b.ne	24fbc <__asan_backtrace_create_state@@Base+0x14dc>  // b.any
   24f54:	ldr	x3, [x19, #296]
   24f58:	add	x2, x20, #0x8
   24f5c:	mov	w1, w21
   24f60:	mov	x0, x19
   24f64:	bl	261d8 <__asan_backtrace_create_state@@Base+0x26f8>
   24f68:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24f6c:	ldr	w1, [x0, #16]
   24f70:	cbnz	w1, 24fb4 <__asan_backtrace_create_state@@Base+0x14d4>
   24f74:	cmp	w22, #0x3
   24f78:	b.ls	24f88 <__asan_backtrace_create_state@@Base+0x14a8>  // b.plast
   24f7c:	mov	w0, #0x1                   	// #1
   24f80:	str	w0, [x19, #304]
   24f84:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   24f88:	ubfiz	x5, x22, #5, #32
   24f8c:	add	w22, w22, #0x1
   24f90:	add	x1, x4, x5
   24f94:	ldp	x2, x3, [x0]
   24f98:	stp	x2, x3, [x1]
   24f9c:	ldp	x2, x3, [x0, #16]
   24fa0:	stp	x2, x3, [x1, #16]
   24fa4:	ldr	x2, [x19, #296]
   24fa8:	str	x2, [x4, x5]
   24fac:	str	x1, [x19, #296]
   24fb0:	str	w6, [x0, #16]
   24fb4:	ldr	x0, [x0]
   24fb8:	b	24f14 <__asan_backtrace_create_state@@Base+0x1434>
   24fbc:	sub	w22, w22, #0x1
   24fc0:	mov	w1, w21
   24fc4:	ubfiz	x0, x22, #5, #32
   24fc8:	ldr	x2, [x23, x0]
   24fcc:	mov	x0, x19
   24fd0:	bl	25d5c <__asan_backtrace_create_state@@Base+0x227c>
   24fd4:	b	24f4c <__asan_backtrace_create_state@@Base+0x146c>
   24fd8:	ldr	x2, [x20, #16]
   24fdc:	mov	w1, w21
   24fe0:	ldr	x0, [x19, #296]
   24fe4:	stp	x0, x20, [sp, #96]
   24fe8:	add	x0, sp, #0x60
   24fec:	str	x0, [x19, #296]
   24ff0:	ldr	x0, [x19, #288]
   24ff4:	str	wzr, [sp, #112]
   24ff8:	str	x0, [sp, #120]
   24ffc:	mov	x0, x19
   25000:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25004:	ldr	w0, [sp, #112]
   25008:	cbnz	w0, 2501c <__asan_backtrace_create_state@@Base+0x153c>
   2500c:	mov	x2, x20
   25010:	mov	w1, w21
   25014:	mov	x0, x19
   25018:	bl	25d5c <__asan_backtrace_create_state@@Base+0x227c>
   2501c:	ldr	x0, [sp, #96]
   25020:	str	x0, [x19, #296]
   25024:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25028:	ldrsh	w0, [x20, #18]
   2502c:	cbz	w0, 25040 <__asan_backtrace_create_state@@Base+0x1560>
   25030:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25034:	mov	x0, x19
   25038:	add	x1, x1, #0x3a2
   2503c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25040:	ldr	x2, [x20, #8]
   25044:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   25048:	ldr	x0, [x0, #3736]
   2504c:	ldr	x1, [x2, #8]
   25050:	add	x0, x0, #0x100
   25054:	cmp	x1, x0
   25058:	b.eq	25074 <__asan_backtrace_create_state@@Base+0x1594>  // b.none
   2505c:	mov	w1, w21
   25060:	mov	x0, x19
   25064:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25068:	mov	x0, x19
   2506c:	mov	w1, #0x20                  	// #32
   25070:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25074:	ldrsh	w0, [x20, #16]
   25078:	cbz	w0, 25090 <__asan_backtrace_create_state@@Base+0x15b0>
   2507c:	mov	x0, x19
   25080:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25084:	add	x1, x1, #0x3a8
   25088:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   2508c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25090:	mov	x0, x19
   25094:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25098:	add	x1, x1, #0x3af
   2509c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   250a0:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   250a4:	ldr	x2, [x20, #8]
   250a8:	cbz	x2, 250b8 <__asan_backtrace_create_state@@Base+0x15d8>
   250ac:	mov	w1, w21
   250b0:	mov	x0, x19
   250b4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   250b8:	ldr	x0, [x20, #16]
   250bc:	cbz	x0, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   250c0:	ldr	x0, [x19, #256]
   250c4:	cmp	x0, #0xfd
   250c8:	b.ls	250d4 <__asan_backtrace_create_state@@Base+0x15f4>  // b.plast
   250cc:	mov	x0, x19
   250d0:	bl	23da4 <__asan_backtrace_create_state@@Base+0x2c4>
   250d4:	mov	x0, x19
   250d8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   250dc:	add	x1, x1, #0x3b6
   250e0:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   250e4:	ldr	x2, [x20, #16]
   250e8:	mov	x0, x19
   250ec:	mov	w1, w21
   250f0:	ldr	x22, [x19, #256]
   250f4:	ldr	x23, [x19, #320]
   250f8:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   250fc:	ldr	x0, [x19, #320]
   25100:	cmp	x0, x23
   25104:	b.ne	244d4 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   25108:	ldr	x0, [x19, #256]
   2510c:	cmp	x0, x22
   25110:	b.ne	244d4 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   25114:	sub	x0, x0, #0x2
   25118:	str	x0, [x19, #256]
   2511c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25120:	ldp	x2, x20, [x20, #8]
   25124:	cbz	x2, 25134 <__asan_backtrace_create_state@@Base+0x1654>
   25128:	mov	w1, w21
   2512c:	mov	x0, x19
   25130:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25134:	mov	x0, x19
   25138:	mov	w1, #0x7b                  	// #123
   2513c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25140:	mov	x2, x20
   25144:	mov	w1, w21
   25148:	mov	x0, x19
   2514c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25150:	mov	x0, x19
   25154:	mov	w1, #0x7d                  	// #125
   25158:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   2515c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25160:	ldr	x21, [x20, #8]
   25164:	mov	x0, x19
   25168:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2516c:	add	x1, x1, #0x3b9
   25170:	ldr	w20, [x21, #16]
   25174:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25178:	ldr	x0, [x21, #8]
   2517c:	ldrb	w0, [x0]
   25180:	sub	w0, w0, #0x61
   25184:	and	w0, w0, #0xff
   25188:	cmp	w0, #0x19
   2518c:	b.hi	2519c <__asan_backtrace_create_state@@Base+0x16bc>  // b.pmore
   25190:	mov	x0, x19
   25194:	mov	w1, #0x20                  	// #32
   25198:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   2519c:	ldr	x1, [x21, #8]
   251a0:	add	x0, x1, w20, sxtw
   251a4:	ldurb	w0, [x0, #-1]
   251a8:	cmp	w0, #0x20
   251ac:	cset	w0, eq  // eq = none
   251b0:	sub	w20, w20, w0
   251b4:	mov	x0, x19
   251b8:	sxtw	x2, w20
   251bc:	bl	23e24 <__asan_backtrace_create_state@@Base+0x344>
   251c0:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   251c4:	mov	x0, x19
   251c8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   251cc:	add	x1, x1, #0x3c2
   251d0:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   251d4:	ldr	x2, [x20, #16]
   251d8:	mov	w1, w21
   251dc:	mov	x0, x19
   251e0:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   251e4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   251e8:	mov	x0, x19
   251ec:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   251f0:	add	x1, x1, #0x3c2
   251f4:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   251f8:	ldr	x0, [x19, #368]
   251fc:	cbz	x0, 25210 <__asan_backtrace_create_state@@Base+0x1730>
   25200:	ldr	x1, [x19, #288]
   25204:	stp	x1, x0, [sp, #96]
   25208:	add	x1, sp, #0x60
   2520c:	str	x1, [x19, #288]
   25210:	ldr	x2, [x20, #8]
   25214:	ldr	w0, [x2]
   25218:	cmp	w0, #0x4
   2521c:	b.eq	25240 <__asan_backtrace_create_state@@Base+0x1760>  // b.none
   25220:	mov	x0, x19
   25224:	mov	w1, w21
   25228:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   2522c:	ldr	x0, [x19, #368]
   25230:	cbz	x0, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25234:	ldr	x0, [sp, #96]
   25238:	str	x0, [x19, #288]
   2523c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25240:	ldr	x2, [x2, #8]
   25244:	mov	x0, x19
   25248:	mov	w1, w21
   2524c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25250:	ldr	x0, [x19, #368]
   25254:	cbz	x0, 25260 <__asan_backtrace_create_state@@Base+0x1780>
   25258:	ldr	x0, [sp, #96]
   2525c:	str	x0, [x19, #288]
   25260:	ldrb	w0, [x19, #264]
   25264:	cmp	w0, #0x3c
   25268:	b.ne	25278 <__asan_backtrace_create_state@@Base+0x1798>  // b.any
   2526c:	mov	x0, x19
   25270:	mov	w1, #0x20                  	// #32
   25274:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25278:	mov	x0, x19
   2527c:	mov	w1, #0x3c                  	// #60
   25280:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25284:	ldr	x0, [x20, #8]
   25288:	mov	w1, w21
   2528c:	ldr	x2, [x0, #16]
   25290:	mov	x0, x19
   25294:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25298:	ldrb	w0, [x19, #264]
   2529c:	cmp	w0, #0x3e
   252a0:	b.ne	252b0 <__asan_backtrace_create_state@@Base+0x17d0>  // b.any
   252a4:	mov	x0, x19
   252a8:	mov	w1, #0x20                  	// #32
   252ac:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   252b0:	mov	x0, x19
   252b4:	mov	w1, #0x3e                  	// #62
   252b8:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   252bc:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   252c0:	ldr	x2, [x20, #8]
   252c4:	mov	w1, w21
   252c8:	mov	x0, x19
   252cc:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   252d0:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   252d4:	ldp	x23, x20, [x20, #8]
   252d8:	ldr	w0, [x23]
   252dc:	cmp	w0, #0x32
   252e0:	b.ne	253e8 <__asan_backtrace_create_state@@Base+0x1908>  // b.any
   252e4:	ldr	x0, [x23, #8]
   252e8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   252ec:	add	x1, x1, #0x3cc
   252f0:	ldr	x22, [x0]
   252f4:	mov	x0, x22
   252f8:	bl	6b90 <__asan_internal_strcmp@plt>
   252fc:	cbnz	w0, 2532c <__asan_backtrace_create_state@@Base+0x184c>
   25300:	ldr	w0, [x20]
   25304:	cmp	w0, #0x3
   25308:	b.ne	2532c <__asan_backtrace_create_state@@Base+0x184c>  // b.any
   2530c:	ldr	x0, [x20, #8]
   25310:	ldr	w1, [x0]
   25314:	cmp	w1, #0x1
   25318:	b.ne	2532c <__asan_backtrace_create_state@@Base+0x184c>  // b.any
   2531c:	ldr	x1, [x20, #16]
   25320:	ldr	w1, [x1]
   25324:	cmp	w1, #0x29
   25328:	csel	x20, x20, x0, ne  // ne = any
   2532c:	ldr	w0, [x20]
   25330:	cmp	w0, #0x39
   25334:	b.ne	2535c <__asan_backtrace_create_state@@Base+0x187c>  // b.any
   25338:	ldr	x2, [x20, #8]
   2533c:	mov	w1, w21
   25340:	mov	x0, x19
   25344:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   25348:	mov	x2, x23
   2534c:	mov	w1, w21
   25350:	mov	x0, x19
   25354:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   25358:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   2535c:	cbz	x22, 253ec <__asan_backtrace_create_state@@Base+0x190c>
   25360:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25364:	mov	x0, x22
   25368:	add	x1, x1, #0x3cf
   2536c:	bl	6b90 <__asan_internal_strcmp@plt>
   25370:	cbnz	w0, 25cb4 <__asan_backtrace_create_state@@Base+0x21d4>
   25374:	mov	x1, x20
   25378:	mov	x0, x19
   2537c:	bl	243e4 <__asan_backtrace_create_state@@Base+0x904>
   25380:	bl	23e68 <__asan_backtrace_create_state@@Base+0x388>
   25384:	mov	w1, w0
   25388:	mov	x0, x19
   2538c:	bl	23ecc <__asan_backtrace_create_state@@Base+0x3ec>
   25390:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25394:	ldr	x0, [x20, #8]
   25398:	cbz	x0, 253d0 <__asan_backtrace_create_state@@Base+0x18f0>
   2539c:	ldr	w1, [x0]
   253a0:	cmp	w1, #0x4b
   253a4:	b.ne	253e0 <__asan_backtrace_create_state@@Base+0x1900>  // b.any
   253a8:	ldr	x1, [x0, #8]
   253ac:	mov	x0, x19
   253b0:	bl	243e4 <__asan_backtrace_create_state@@Base+0x904>
   253b4:	bl	23e68 <__asan_backtrace_create_state@@Base+0x388>
   253b8:	add	w3, w3, w0
   253bc:	ldr	x20, [x20, #16]
   253c0:	cbz	x20, 253d0 <__asan_backtrace_create_state@@Base+0x18f0>
   253c4:	ldr	w0, [x20]
   253c8:	cmp	w0, #0x2f
   253cc:	b.eq	25394 <__asan_backtrace_create_state@@Base+0x18b4>  // b.none
   253d0:	mov	w1, w3
   253d4:	mov	x0, x19
   253d8:	bl	23ecc <__asan_backtrace_create_state@@Base+0x3ec>
   253dc:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   253e0:	add	w3, w3, #0x1
   253e4:	b	253bc <__asan_backtrace_create_state@@Base+0x18dc>
   253e8:	mov	x22, #0x0                   	// #0
   253ec:	ldr	w0, [x23]
   253f0:	cmp	w0, #0x34
   253f4:	b.eq	25434 <__asan_backtrace_create_state@@Base+0x1954>  // b.none
   253f8:	mov	x2, x23
   253fc:	mov	w1, w21
   25400:	mov	x0, x19
   25404:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   25408:	cbz	x22, 25460 <__asan_backtrace_create_state@@Base+0x1980>
   2540c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25410:	mov	x0, x22
   25414:	add	x1, x1, #0x3d2
   25418:	bl	6b90 <__asan_internal_strcmp@plt>
   2541c:	cbnz	w0, 25c74 <__asan_backtrace_create_state@@Base+0x2194>
   25420:	mov	x2, x20
   25424:	mov	w1, w21
   25428:	mov	x0, x19
   2542c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25430:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25434:	mov	x0, x19
   25438:	mov	w1, #0x28                  	// #40
   2543c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25440:	ldr	x2, [x23, #8]
   25444:	mov	w1, w21
   25448:	mov	x0, x19
   2544c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25450:	mov	x0, x19
   25454:	mov	w1, #0x29                  	// #41
   25458:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   2545c:	b	25408 <__asan_backtrace_create_state@@Base+0x1928>
   25460:	mov	x2, x20
   25464:	mov	w1, w21
   25468:	mov	x0, x19
   2546c:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   25470:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25474:	ldr	x0, [x20, #16]
   25478:	ldr	w0, [x0]
   2547c:	cmp	w0, #0x39
   25480:	b.ne	244cc <__asan_backtrace_create_state@@Base+0x9ec>  // b.any
   25484:	ldr	x2, [x20, #8]
   25488:	ldr	x0, [x2, #8]
   2548c:	bl	241ac <__asan_backtrace_create_state@@Base+0x6cc>
   25490:	cbz	w0, 254f4 <__asan_backtrace_create_state@@Base+0x1a14>
   25494:	mov	w1, w21
   25498:	mov	x0, x19
   2549c:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   254a0:	mov	x0, x19
   254a4:	mov	w1, #0x3c                  	// #60
   254a8:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   254ac:	ldr	x0, [x20, #16]
   254b0:	mov	w1, w21
   254b4:	ldr	x2, [x0, #8]
   254b8:	mov	x0, x19
   254bc:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   254c0:	mov	x0, x19
   254c4:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   254c8:	add	x1, x1, #0x3d5
   254cc:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   254d0:	ldr	x0, [x20, #16]
   254d4:	mov	w1, w21
   254d8:	ldr	x2, [x0, #16]
   254dc:	mov	x0, x19
   254e0:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   254e4:	mov	x0, x19
   254e8:	mov	w1, #0x29                  	// #41
   254ec:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   254f0:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   254f4:	mov	x2, x20
   254f8:	mov	w1, w21
   254fc:	mov	x0, x19
   25500:	bl	2636c <__asan_backtrace_create_state@@Base+0x288c>
   25504:	cbnz	w0, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25508:	ldr	x0, [x20, #8]
   2550c:	ldr	w1, [x0]
   25510:	cmp	w1, #0x32
   25514:	b.ne	25544 <__asan_backtrace_create_state@@Base+0x1a64>  // b.any
   25518:	ldr	x0, [x0, #8]
   2551c:	ldr	w1, [x0, #16]
   25520:	cmp	w1, #0x1
   25524:	b.ne	25544 <__asan_backtrace_create_state@@Base+0x1a64>  // b.any
   25528:	ldr	x0, [x0, #8]
   2552c:	ldrb	w0, [x0]
   25530:	cmp	w0, #0x3e
   25534:	b.ne	25544 <__asan_backtrace_create_state@@Base+0x1a64>  // b.any
   25538:	mov	x0, x19
   2553c:	mov	w1, #0x28                  	// #40
   25540:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25544:	ldr	x0, [x20, #8]
   25548:	adrp	x22, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2554c:	add	x1, x22, #0x3d8
   25550:	ldr	x0, [x0, #8]
   25554:	ldr	x0, [x0]
   25558:	bl	6b90 <__asan_internal_strcmp@plt>
   2555c:	ldr	x2, [x20, #16]
   25560:	cbnz	w0, 25624 <__asan_backtrace_create_state@@Base+0x1b44>
   25564:	ldr	x0, [x2, #8]
   25568:	ldr	w1, [x0]
   2556c:	cmp	w1, #0x3
   25570:	b.ne	25624 <__asan_backtrace_create_state@@Base+0x1b44>  // b.any
   25574:	ldr	x1, [x0, #16]
   25578:	ldr	w1, [x1]
   2557c:	cmp	w1, #0x29
   25580:	b.eq	2558c <__asan_backtrace_create_state@@Base+0x1aac>  // b.none
   25584:	mov	w1, #0x1                   	// #1
   25588:	str	w1, [x19, #304]
   2558c:	ldr	x2, [x0, #8]
   25590:	mov	w1, w21
   25594:	mov	x0, x19
   25598:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   2559c:	ldr	x0, [x20, #8]
   255a0:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   255a4:	add	x1, x1, #0x93
   255a8:	ldr	x0, [x0, #8]
   255ac:	ldr	x0, [x0]
   255b0:	bl	6b90 <__asan_internal_strcmp@plt>
   255b4:	cbnz	w0, 2562c <__asan_backtrace_create_state@@Base+0x1b4c>
   255b8:	mov	x0, x19
   255bc:	mov	w1, #0x5b                  	// #91
   255c0:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   255c4:	ldr	x0, [x20, #16]
   255c8:	mov	w1, w21
   255cc:	ldr	x2, [x0, #16]
   255d0:	mov	x0, x19
   255d4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   255d8:	mov	x0, x19
   255dc:	mov	w1, #0x5d                  	// #93
   255e0:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   255e4:	ldr	x0, [x20, #8]
   255e8:	ldr	w1, [x0]
   255ec:	cmp	w1, #0x32
   255f0:	b.ne	244d4 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   255f4:	ldr	x0, [x0, #8]
   255f8:	ldr	w1, [x0, #16]
   255fc:	cmp	w1, #0x1
   25600:	b.ne	244d4 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   25604:	ldr	x0, [x0, #8]
   25608:	ldrb	w0, [x0]
   2560c:	cmp	w0, #0x3e
   25610:	b.ne	244d4 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   25614:	mov	x0, x19
   25618:	mov	w1, #0x29                  	// #41
   2561c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25620:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25624:	ldr	x2, [x2, #8]
   25628:	b	25590 <__asan_backtrace_create_state@@Base+0x1ab0>
   2562c:	ldr	x0, [x20, #8]
   25630:	add	x1, x22, #0x3d8
   25634:	ldr	x0, [x0, #8]
   25638:	ldr	x0, [x0]
   2563c:	bl	6b90 <__asan_internal_strcmp@plt>
   25640:	cbz	w0, 25654 <__asan_backtrace_create_state@@Base+0x1b74>
   25644:	ldr	x2, [x20, #8]
   25648:	mov	w1, w21
   2564c:	mov	x0, x19
   25650:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   25654:	ldr	x0, [x20, #16]
   25658:	mov	w1, w21
   2565c:	ldr	x2, [x0, #16]
   25660:	mov	x0, x19
   25664:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   25668:	b	255e4 <__asan_backtrace_create_state@@Base+0x1b04>
   2566c:	mov	w0, #0x1                   	// #1
   25670:	str	w0, [x19, #304]
   25674:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25678:	ldr	x0, [x20, #16]
   2567c:	ldr	w1, [x0]
   25680:	cmp	w1, #0x3b
   25684:	b.ne	244cc <__asan_backtrace_create_state@@Base+0x9ec>  // b.any
   25688:	ldr	x0, [x0, #16]
   2568c:	ldr	w0, [x0]
   25690:	cmp	w0, #0x3c
   25694:	b.ne	244cc <__asan_backtrace_create_state@@Base+0x9ec>  // b.any
   25698:	mov	x2, x20
   2569c:	mov	w1, w21
   256a0:	mov	x0, x19
   256a4:	bl	2636c <__asan_backtrace_create_state@@Base+0x288c>
   256a8:	cbnz	w0, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   256ac:	ldp	x22, x0, [x20, #8]
   256b0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   256b4:	add	x1, x1, #0x3db
   256b8:	ldp	x20, x0, [x0, #8]
   256bc:	ldp	x24, x23, [x0, #8]
   256c0:	ldr	x0, [x22, #8]
   256c4:	ldr	x0, [x0]
   256c8:	bl	6b90 <__asan_internal_strcmp@plt>
   256cc:	cbnz	w0, 25724 <__asan_backtrace_create_state@@Base+0x1c44>
   256d0:	mov	x2, x20
   256d4:	mov	w1, w21
   256d8:	mov	x0, x19
   256dc:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   256e0:	mov	x2, x22
   256e4:	mov	w1, w21
   256e8:	mov	x0, x19
   256ec:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   256f0:	mov	x2, x24
   256f4:	mov	w1, w21
   256f8:	mov	x0, x19
   256fc:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   25700:	mov	x0, x19
   25704:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25708:	add	x1, x1, #0x3de
   2570c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25710:	mov	x2, x23
   25714:	mov	w1, w21
   25718:	mov	x0, x19
   2571c:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   25720:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25724:	mov	x0, x19
   25728:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2572c:	add	x1, x1, #0x3e2
   25730:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25734:	ldr	x0, [x20, #8]
   25738:	cbz	x0, 25758 <__asan_backtrace_create_state@@Base+0x1c78>
   2573c:	mov	x2, x20
   25740:	mov	w1, w21
   25744:	mov	x0, x19
   25748:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   2574c:	mov	x0, x19
   25750:	mov	w1, #0x20                  	// #32
   25754:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25758:	mov	x2, x24
   2575c:	mov	w1, w21
   25760:	mov	x0, x19
   25764:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25768:	cbz	x23, 244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   2576c:	mov	x2, x23
   25770:	mov	w1, w21
   25774:	mov	x0, x19
   25778:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   2577c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25780:	ldr	x1, [x20, #8]
   25784:	ldr	w2, [x1]
   25788:	cmp	w2, #0x27
   2578c:	b.ne	25938 <__asan_backtrace_create_state@@Base+0x1e58>  // b.any
   25790:	ldr	x1, [x1, #8]
   25794:	ldr	w22, [x1, #28]
   25798:	cmp	w22, #0x6
   2579c:	b.hi	257f8 <__asan_backtrace_create_state@@Base+0x1d18>  // b.pmore
   257a0:	cbz	w22, 25800 <__asan_backtrace_create_state@@Base+0x1d20>
   257a4:	ldr	x1, [x20, #16]
   257a8:	ldr	w1, [x1]
   257ac:	cbnz	w1, 25800 <__asan_backtrace_create_state@@Base+0x1d20>
   257b0:	cmp	w0, #0x3e
   257b4:	b.ne	257c4 <__asan_backtrace_create_state@@Base+0x1ce4>  // b.any
   257b8:	mov	x0, x19
   257bc:	mov	w1, #0x2d                  	// #45
   257c0:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   257c4:	ldr	x2, [x20, #16]
   257c8:	mov	w1, w21
   257cc:	mov	x0, x19
   257d0:	sub	w22, w22, #0x2
   257d4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   257d8:	cmp	w22, #0x4
   257dc:	b.hi	244d4 <__asan_backtrace_create_state@@Base+0x9f4>  // b.pmore
   257e0:	adrp	x0, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   257e4:	add	x0, x0, #0xdc
   257e8:	ldrb	w0, [x0, w22, uxtw]
   257ec:	adr	x1, 257f8 <__asan_backtrace_create_state@@Base+0x1d18>
   257f0:	add	x0, x1, w0, sxtb #2
   257f4:	br	x0
   257f8:	cmp	w22, #0x7
   257fc:	b.eq	258d8 <__asan_backtrace_create_state@@Base+0x1df8>  // b.none
   25800:	mov	x0, x19
   25804:	mov	w1, #0x28                  	// #40
   25808:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   2580c:	ldr	x2, [x20, #8]
   25810:	mov	w1, w21
   25814:	mov	x0, x19
   25818:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   2581c:	mov	x0, x19
   25820:	mov	w1, #0x29                  	// #41
   25824:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25828:	ldr	w0, [x20]
   2582c:	cmp	w0, #0x3e
   25830:	b.ne	25840 <__asan_backtrace_create_state@@Base+0x1d60>  // b.any
   25834:	mov	x0, x19
   25838:	mov	w1, #0x2d                  	// #45
   2583c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25840:	cmp	w22, #0x8
   25844:	b.ne	25854 <__asan_backtrace_create_state@@Base+0x1d74>  // b.any
   25848:	mov	x0, x19
   2584c:	mov	w1, #0x5b                  	// #91
   25850:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25854:	ldr	x2, [x20, #16]
   25858:	mov	w1, w21
   2585c:	mov	x0, x19
   25860:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25864:	cmp	w22, #0x8
   25868:	b.ne	244d4 <__asan_backtrace_create_state@@Base+0x9f4>  // b.any
   2586c:	mov	x0, x19
   25870:	mov	w1, #0x5d                  	// #93
   25874:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25878:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   2587c:	mov	x0, x19
   25880:	mov	w1, #0x75                  	// #117
   25884:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25888:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   2588c:	mov	x0, x19
   25890:	mov	w1, #0x6c                  	// #108
   25894:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25898:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   2589c:	mov	x0, x19
   258a0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   258a4:	add	x1, x1, #0x3e7
   258a8:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   258ac:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   258b0:	mov	x0, x19
   258b4:	adrp	x1, 33000 <__asan_backtrace_vector_release@@Base+0x6b60>
   258b8:	add	x1, x1, #0x1ca
   258bc:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   258c0:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   258c4:	mov	x0, x19
   258c8:	adrp	x1, 2f000 <__asan_backtrace_vector_release@@Base+0x2b60>
   258cc:	add	x1, x1, #0x591
   258d0:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   258d4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   258d8:	ldr	x1, [x20, #16]
   258dc:	ldr	w2, [x1]
   258e0:	cbnz	w2, 25800 <__asan_backtrace_create_state@@Base+0x1d20>
   258e4:	ldr	w2, [x1, #16]
   258e8:	cmp	w2, #0x1
   258ec:	b.ne	25800 <__asan_backtrace_create_state@@Base+0x1d20>  // b.any
   258f0:	cmp	w0, #0x3d
   258f4:	b.ne	25800 <__asan_backtrace_create_state@@Base+0x1d20>  // b.any
   258f8:	ldr	x0, [x1, #8]
   258fc:	ldrb	w0, [x0]
   25900:	cmp	w0, #0x30
   25904:	b.eq	25924 <__asan_backtrace_create_state@@Base+0x1e44>  // b.none
   25908:	cmp	w0, #0x31
   2590c:	b.ne	25800 <__asan_backtrace_create_state@@Base+0x1d20>  // b.any
   25910:	mov	x0, x19
   25914:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   25918:	add	x1, x1, #0xf25
   2591c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25920:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25924:	mov	x0, x19
   25928:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   2592c:	add	x1, x1, #0xf35
   25930:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25934:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25938:	mov	w22, #0x0                   	// #0
   2593c:	b	25800 <__asan_backtrace_create_state@@Base+0x1d20>
   25940:	ldr	w1, [x20, #8]
   25944:	mov	x0, x19
   25948:	bl	23ecc <__asan_backtrace_create_state@@Base+0x3ec>
   2594c:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25950:	mov	x0, x19
   25954:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25958:	add	x1, x1, #0x3ea
   2595c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25960:	ldr	x2, [x20, #8]
   25964:	mov	w1, w21
   25968:	mov	x0, x19
   2596c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25970:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25974:	ldr	x2, [x20, #8]
   25978:	mov	w1, w21
   2597c:	mov	x0, x19
   25980:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25984:	ldr	x2, [x20, #16]
   25988:	mov	w1, w21
   2598c:	mov	x0, x19
   25990:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25994:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25998:	ldrb	w1, [x20, #8]
   2599c:	mov	x0, x19
   259a0:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   259a4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   259a8:	mov	x0, x19
   259ac:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   259b0:	add	x1, x1, #0x3f9
   259b4:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   259b8:	ldr	x2, [x20, #8]
   259bc:	mov	w1, w21
   259c0:	mov	x0, x19
   259c4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   259c8:	mov	x0, x19
   259cc:	mov	w1, #0x29                  	// #41
   259d0:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   259d4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   259d8:	ldr	x1, [x20, #8]
   259dc:	mov	x0, x19
   259e0:	bl	243e4 <__asan_backtrace_create_state@@Base+0x904>
   259e4:	cbnz	x0, 25a0c <__asan_backtrace_create_state@@Base+0x1f2c>
   259e8:	ldr	x2, [x20, #8]
   259ec:	mov	w1, w21
   259f0:	mov	x0, x19
   259f4:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   259f8:	mov	x0, x19
   259fc:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   25a00:	add	x1, x1, #0x511
   25a04:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25a08:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25a0c:	bl	23e68 <__asan_backtrace_create_state@@Base+0x388>
   25a10:	mov	w23, w0
   25a14:	sub	w25, w0, #0x1
   25a18:	ldr	x24, [x20, #8]
   25a1c:	adrp	x20, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25a20:	add	x20, x20, #0x3b6
   25a24:	cmp	w22, w23
   25a28:	b.ge	244d4 <__asan_backtrace_create_state@@Base+0x9f4>  // b.tcont
   25a2c:	str	w22, [x19, #316]
   25a30:	mov	x2, x24
   25a34:	mov	w1, w21
   25a38:	mov	x0, x19
   25a3c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25a40:	cmp	w25, w22
   25a44:	b.le	25a54 <__asan_backtrace_create_state@@Base+0x1f74>
   25a48:	mov	x1, x20
   25a4c:	mov	x0, x19
   25a50:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25a54:	add	w22, w22, #0x1
   25a58:	b	25a24 <__asan_backtrace_create_state@@Base+0x1f44>
   25a5c:	ldr	x20, [x20, #8]
   25a60:	cbnz	x20, 25a78 <__asan_backtrace_create_state@@Base+0x1f98>
   25a64:	mov	x0, x19
   25a68:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25a6c:	add	x1, x1, #0x404
   25a70:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25a74:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25a78:	mov	x0, x19
   25a7c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25a80:	add	x1, x1, #0x409
   25a84:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25a88:	mov	w1, w20
   25a8c:	mov	x0, x19
   25a90:	bl	23ecc <__asan_backtrace_create_state@@Base+0x3ec>
   25a94:	mov	x0, x19
   25a98:	mov	w1, #0x7d                  	// #125
   25a9c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25aa0:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25aa4:	mov	x0, x19
   25aa8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25aac:	add	x1, x1, #0x410
   25ab0:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25ab4:	ldr	x2, [x20, #8]
   25ab8:	mov	w1, w21
   25abc:	mov	x0, x19
   25ac0:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25ac4:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25ac8:	mov	x0, x19
   25acc:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25ad0:	add	x1, x1, #0x42e
   25ad4:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25ad8:	ldr	x2, [x20, #8]
   25adc:	mov	w1, w21
   25ae0:	mov	x0, x19
   25ae4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25ae8:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25aec:	mov	x0, x19
   25af0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25af4:	add	x1, x1, #0x44b
   25af8:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25afc:	ldr	w0, [x19, #312]
   25b00:	mov	w1, w21
   25b04:	ldr	x2, [x20, #8]
   25b08:	add	w0, w0, #0x1
   25b0c:	str	w0, [x19, #312]
   25b10:	mov	x0, x19
   25b14:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25b18:	ldr	w0, [x19, #312]
   25b1c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25b20:	add	x1, x1, #0x454
   25b24:	sub	w0, w0, #0x1
   25b28:	str	w0, [x19, #312]
   25b2c:	mov	x0, x19
   25b30:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25b34:	ldr	w1, [x20, #16]
   25b38:	mov	x0, x19
   25b3c:	add	w1, w1, #0x1
   25b40:	bl	23ecc <__asan_backtrace_create_state@@Base+0x3ec>
   25b44:	mov	x0, x19
   25b48:	mov	w1, #0x7d                  	// #125
   25b4c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25b50:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25b54:	mov	x0, x19
   25b58:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25b5c:	add	x1, x1, #0x457
   25b60:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25b64:	ldr	x1, [x20, #8]
   25b68:	mov	x0, x19
   25b6c:	add	w1, w1, #0x1
   25b70:	bl	23ecc <__asan_backtrace_create_state@@Base+0x3ec>
   25b74:	mov	x0, x19
   25b78:	mov	w1, #0x7d                  	// #125
   25b7c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25b80:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25b84:	ldr	x2, [x20, #8]
   25b88:	mov	w1, w21
   25b8c:	mov	x0, x19
   25b90:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25b94:	mov	x0, x19
   25b98:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25b9c:	add	x1, x1, #0x466
   25ba0:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25ba4:	ldr	x2, [x20, #16]
   25ba8:	mov	w1, w21
   25bac:	mov	x0, x19
   25bb0:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25bb4:	mov	x0, x19
   25bb8:	mov	w1, #0x5d                  	// #93
   25bbc:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25bc0:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25bc4:	cmp	w5, #0x2
   25bc8:	b.ne	25bf8 <__asan_backtrace_create_state@@Base+0x2118>  // b.any
   25bcc:	ldr	x22, [x22, #16]
   25bd0:	ldr	w0, [x22]
   25bd4:	cmp	w0, #0x47
   25bd8:	b.ne	25be4 <__asan_backtrace_create_state@@Base+0x2104>  // b.any
   25bdc:	ldr	x22, [x22, #8]
   25be0:	cbz	x22, 246fc <__asan_backtrace_create_state@@Base+0xc1c>
   25be4:	ubfiz	x0, x23, #5, #32
   25be8:	add	x2, x2, x0
   25bec:	ldr	w0, [x22]
   25bf0:	bl	23b60 <__asan_backtrace_create_state@@Base+0x80>
   25bf4:	cbnz	w0, 2473c <__asan_backtrace_create_state@@Base+0xc5c>
   25bf8:	ldr	w0, [x22]
   25bfc:	cmp	w0, #0x4
   25c00:	b.ne	25c10 <__asan_backtrace_create_state@@Base+0x2130>  // b.any
   25c04:	add	x0, sp, #0x50
   25c08:	stp	x4, x22, [sp, #80]
   25c0c:	str	x0, [x19, #288]
   25c10:	ldr	x2, [x20, #16]
   25c14:	mov	x0, x19
   25c18:	mov	w1, w21
   25c1c:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25c20:	ldr	w0, [x22]
   25c24:	cmp	w0, #0x4
   25c28:	b.ne	25c34 <__asan_backtrace_create_state@@Base+0x2154>  // b.any
   25c2c:	ldr	x0, [sp, #80]
   25c30:	str	x0, [x19, #288]
   25c34:	add	x22, sp, #0x70
   25c38:	add	x25, sp, #0x68
   25c3c:	sub	w23, w23, #0x1
   25c40:	ubfiz	x20, x23, #5, #32
   25c44:	ldr	w0, [x22, x20]
   25c48:	cbnz	w0, 25c68 <__asan_backtrace_create_state@@Base+0x2188>
   25c4c:	mov	x0, x19
   25c50:	mov	w1, #0x20                  	// #32
   25c54:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25c58:	ldr	x2, [x25, x20]
   25c5c:	mov	w1, w21
   25c60:	mov	x0, x19
   25c64:	bl	25d5c <__asan_backtrace_create_state@@Base+0x227c>
   25c68:	cbnz	w23, 25c3c <__asan_backtrace_create_state@@Base+0x215c>
   25c6c:	str	x24, [x19, #296]
   25c70:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25c74:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25c78:	mov	x0, x22
   25c7c:	add	x1, x1, #0x7c7
   25c80:	bl	6b90 <__asan_internal_strcmp@plt>
   25c84:	cbnz	w0, 25460 <__asan_backtrace_create_state@@Base+0x1980>
   25c88:	mov	x0, x19
   25c8c:	mov	w1, #0x28                  	// #40
   25c90:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25c94:	mov	x2, x20
   25c98:	mov	w1, w21
   25c9c:	mov	x0, x19
   25ca0:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25ca4:	mov	x0, x19
   25ca8:	mov	w1, #0x29                  	// #41
   25cac:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25cb0:	b	244d4 <__asan_backtrace_create_state@@Base+0x9f4>
   25cb4:	mov	x0, x22
   25cb8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25cbc:	add	x1, x1, #0x46f
   25cc0:	bl	6b90 <__asan_internal_strcmp@plt>
   25cc4:	mov	w3, w0
   25cc8:	cbnz	w0, 253ec <__asan_backtrace_create_state@@Base+0x190c>
   25ccc:	b	253c4 <__asan_backtrace_create_state@@Base+0x18e4>
   25cd0:	stp	x29, x30, [sp, #-48]!
   25cd4:	mov	x29, sp
   25cd8:	stp	x19, x20, [sp, #16]
   25cdc:	mov	x19, x0
   25ce0:	cbz	x2, 25d00 <__asan_backtrace_create_state@@Base+0x2220>
   25ce4:	ldr	w4, [x2, #4]
   25ce8:	mov	x20, x2
   25cec:	cmp	w4, #0x1
   25cf0:	b.gt	25d00 <__asan_backtrace_create_state@@Base+0x2220>
   25cf4:	ldr	w3, [x0, #308]
   25cf8:	cmp	w3, #0x400
   25cfc:	b.le	25d14 <__asan_backtrace_create_state@@Base+0x2234>
   25d00:	mov	w0, #0x1                   	// #1
   25d04:	str	w0, [x19, #304]
   25d08:	ldp	x19, x20, [sp, #16]
   25d0c:	ldp	x29, x30, [sp], #48
   25d10:	ret
   25d14:	add	w4, w4, #0x1
   25d18:	add	w3, w3, #0x1
   25d1c:	str	w4, [x2, #4]
   25d20:	str	w3, [x0, #308]
   25d24:	ldr	x3, [x0, #328]
   25d28:	stp	x2, x3, [sp, #32]
   25d2c:	add	x3, sp, #0x20
   25d30:	str	x3, [x0, #328]
   25d34:	bl	244ac <__asan_backtrace_create_state@@Base+0x9cc>
   25d38:	ldr	x0, [sp, #40]
   25d3c:	str	x0, [x19, #328]
   25d40:	ldr	w0, [x20, #4]
   25d44:	sub	w0, w0, #0x1
   25d48:	str	w0, [x20, #4]
   25d4c:	ldr	w0, [x19, #308]
   25d50:	sub	w0, w0, #0x1
   25d54:	str	w0, [x19, #308]
   25d58:	b	25d08 <__asan_backtrace_create_state@@Base+0x2228>
   25d5c:	stp	x29, x30, [sp, #-48]!
   25d60:	mov	x29, sp
   25d64:	stp	x19, x20, [sp, #16]
   25d68:	mov	x20, x2
   25d6c:	ldr	w2, [x2]
   25d70:	str	x21, [sp, #32]
   25d74:	cmp	w2, #0x3
   25d78:	b.eq	25ee0 <__asan_backtrace_create_state@@Base+0x2400>  // b.none
   25d7c:	sub	w2, w2, #0x19
   25d80:	mov	x19, x0
   25d84:	mov	w21, w1
   25d88:	cmp	w2, #0x37
   25d8c:	b.hi	25f0c <__asan_backtrace_create_state@@Base+0x242c>  // b.pmore
   25d90:	adrp	x0, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25d94:	add	x0, x0, #0xe4
   25d98:	ldrb	w0, [x0, w2, uxtw]
   25d9c:	adr	x1, 25da8 <__asan_backtrace_create_state@@Base+0x22c8>
   25da0:	add	x0, x1, w0, sxtb #2
   25da4:	br	x0
   25da8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25dac:	add	x1, x1, #0x472
   25db0:	mov	x0, x19
   25db4:	ldp	x19, x20, [sp, #16]
   25db8:	ldr	x21, [sp, #32]
   25dbc:	ldp	x29, x30, [sp], #48
   25dc0:	b	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25dc4:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25dc8:	add	x1, x1, #0x47c
   25dcc:	b	25db0 <__asan_backtrace_create_state@@Base+0x22d0>
   25dd0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25dd4:	add	x1, x1, #0x486
   25dd8:	b	25db0 <__asan_backtrace_create_state@@Base+0x22d0>
   25ddc:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25de0:	add	x1, x1, #0x48d
   25de4:	b	25db0 <__asan_backtrace_create_state@@Base+0x22d0>
   25de8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25dec:	add	x1, x1, #0x49f
   25df0:	mov	x0, x19
   25df4:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25df8:	ldr	x0, [x20, #16]
   25dfc:	cbz	x0, 25f14 <__asan_backtrace_create_state@@Base+0x2434>
   25e00:	mov	x0, x19
   25e04:	mov	w1, #0x28                  	// #40
   25e08:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25e0c:	ldr	x2, [x20, #16]
   25e10:	mov	w1, w21
   25e14:	mov	x0, x19
   25e18:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25e1c:	mov	w1, #0x29                  	// #41
   25e20:	b	25e54 <__asan_backtrace_create_state@@Base+0x2374>
   25e24:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25e28:	add	x1, x1, #0x4a9
   25e2c:	b	25df0 <__asan_backtrace_create_state@@Base+0x2310>
   25e30:	mov	x0, x19
   25e34:	mov	w1, #0x20                  	// #32
   25e38:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25e3c:	ldr	x2, [x20, #16]
   25e40:	mov	w1, w21
   25e44:	mov	x0, x19
   25e48:	b	25ee4 <__asan_backtrace_create_state@@Base+0x2404>
   25e4c:	tbnz	w21, #2, 25f14 <__asan_backtrace_create_state@@Base+0x2434>
   25e50:	mov	w1, #0x2a                  	// #42
   25e54:	mov	x0, x19
   25e58:	ldp	x19, x20, [sp, #16]
   25e5c:	ldr	x21, [sp, #32]
   25e60:	ldp	x29, x30, [sp], #48
   25e64:	b	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25e68:	mov	x0, x19
   25e6c:	mov	w1, #0x20                  	// #32
   25e70:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25e74:	mov	w1, #0x26                  	// #38
   25e78:	b	25e54 <__asan_backtrace_create_state@@Base+0x2374>
   25e7c:	mov	x0, x19
   25e80:	mov	w1, #0x20                  	// #32
   25e84:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25e88:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25e8c:	add	x1, x1, #0x4b0
   25e90:	b	25db0 <__asan_backtrace_create_state@@Base+0x22d0>
   25e94:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25e98:	add	x1, x1, #0x4b3
   25e9c:	b	25db0 <__asan_backtrace_create_state@@Base+0x22d0>
   25ea0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25ea4:	add	x1, x1, #0x4bc
   25ea8:	b	25db0 <__asan_backtrace_create_state@@Base+0x22d0>
   25eac:	ldrb	w0, [x19, #264]
   25eb0:	cmp	w0, #0x28
   25eb4:	b.eq	25ec4 <__asan_backtrace_create_state@@Base+0x23e4>  // b.none
   25eb8:	mov	x0, x19
   25ebc:	mov	w1, #0x20                  	// #32
   25ec0:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25ec4:	ldr	x2, [x20, #8]
   25ec8:	mov	w1, w21
   25ecc:	mov	x0, x19
   25ed0:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25ed4:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25ed8:	add	x1, x1, #0x4c7
   25edc:	b	25db0 <__asan_backtrace_create_state@@Base+0x22d0>
   25ee0:	ldr	x2, [x20, #8]
   25ee4:	ldp	x19, x20, [sp, #16]
   25ee8:	ldr	x21, [sp, #32]
   25eec:	ldp	x29, x30, [sp], #48
   25ef0:	b	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   25ef4:	mov	x0, x19
   25ef8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25efc:	add	x1, x1, #0x4cb
   25f00:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   25f04:	ldr	x2, [x20, #8]
   25f08:	b	25e10 <__asan_backtrace_create_state@@Base+0x2330>
   25f0c:	mov	x2, x20
   25f10:	b	25e40 <__asan_backtrace_create_state@@Base+0x2360>
   25f14:	ldp	x19, x20, [sp, #16]
   25f18:	ldr	x21, [sp, #32]
   25f1c:	ldp	x29, x30, [sp], #48
   25f20:	ret
   25f24:	stp	x29, x30, [sp, #-64]!
   25f28:	mov	x29, sp
   25f2c:	stp	x19, x20, [sp, #16]
   25f30:	mov	x19, x0
   25f34:	mov	w20, w1
   25f38:	mov	x0, x3
   25f3c:	stp	x21, x22, [sp, #32]
   25f40:	mov	x22, x2
   25f44:	mov	x21, x3
   25f48:	adrp	x2, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   25f4c:	add	x2, x2, #0x11c
   25f50:	stp	x23, x24, [sp, #48]
   25f54:	cbnz	x0, 25f60 <__asan_backtrace_create_state@@Base+0x2480>
   25f58:	mov	w23, #0x0                   	// #0
   25f5c:	b	25fd0 <__asan_backtrace_create_state@@Base+0x24f0>
   25f60:	ldr	w1, [x0, #16]
   25f64:	cbnz	w1, 25f58 <__asan_backtrace_create_state@@Base+0x2478>
   25f68:	ldr	x1, [x0, #8]
   25f6c:	ldr	w1, [x1]
   25f70:	sub	w1, w1, #0x19
   25f74:	cmp	w1, #0x12
   25f78:	b.hi	25f8c <__asan_backtrace_create_state@@Base+0x24ac>  // b.pmore
   25f7c:	ldrb	w1, [x2, w1, uxtw]
   25f80:	adr	x3, 25f8c <__asan_backtrace_create_state@@Base+0x24ac>
   25f84:	add	x1, x3, w1, sxtb #2
   25f88:	br	x1
   25f8c:	ldr	x0, [x0]
   25f90:	b	25f54 <__asan_backtrace_create_state@@Base+0x2474>
   25f94:	ldrb	w0, [x19, #264]
   25f98:	and	w0, w0, #0xfffffffd
   25f9c:	and	w0, w0, #0xff
   25fa0:	cmp	w0, #0x28
   25fa4:	b.eq	25fc0 <__asan_backtrace_create_state@@Base+0x24e0>  // b.none
   25fa8:	ldrb	w0, [x19, #264]
   25fac:	cmp	w0, #0x20
   25fb0:	b.eq	25fc0 <__asan_backtrace_create_state@@Base+0x24e0>  // b.none
   25fb4:	mov	x0, x19
   25fb8:	mov	w1, #0x20                  	// #32
   25fbc:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25fc0:	mov	w23, #0x1                   	// #1
   25fc4:	mov	x0, x19
   25fc8:	mov	w1, #0x28                  	// #40
   25fcc:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25fd0:	ldr	x24, [x19, #296]
   25fd4:	str	xzr, [x19, #296]
   25fd8:	mov	x2, x21
   25fdc:	mov	w1, w20
   25fe0:	mov	x0, x19
   25fe4:	mov	w3, #0x0                   	// #0
   25fe8:	bl	26054 <__asan_backtrace_create_state@@Base+0x2574>
   25fec:	cbz	w23, 25ffc <__asan_backtrace_create_state@@Base+0x251c>
   25ff0:	mov	x0, x19
   25ff4:	mov	w1, #0x29                  	// #41
   25ff8:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   25ffc:	mov	x0, x19
   26000:	mov	w1, #0x28                  	// #40
   26004:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   26008:	ldr	x2, [x22]
   2600c:	cbz	x2, 2601c <__asan_backtrace_create_state@@Base+0x253c>
   26010:	mov	w1, w20
   26014:	mov	x0, x19
   26018:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   2601c:	mov	x0, x19
   26020:	mov	w1, #0x29                  	// #41
   26024:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   26028:	mov	x2, x21
   2602c:	mov	w1, w20
   26030:	mov	x0, x19
   26034:	mov	w3, #0x1                   	// #1
   26038:	bl	26054 <__asan_backtrace_create_state@@Base+0x2574>
   2603c:	ldp	x21, x22, [sp, #32]
   26040:	str	x24, [x19, #296]
   26044:	ldp	x19, x20, [sp, #16]
   26048:	ldp	x23, x24, [sp, #48]
   2604c:	ldp	x29, x30, [sp], #64
   26050:	ret
   26054:	stp	x29, x30, [sp, #-64]!
   26058:	mov	x29, sp
   2605c:	stp	x19, x20, [sp, #16]
   26060:	mov	x19, x0
   26064:	mov	x20, x2
   26068:	stp	x21, x22, [sp, #32]
   2606c:	mov	w21, w1
   26070:	stp	x23, x24, [sp, #48]
   26074:	mov	w23, w3
   26078:	mov	w24, #0x1                   	// #1
   2607c:	cbz	x20, 260e0 <__asan_backtrace_create_state@@Base+0x2600>
   26080:	ldr	w0, [x19, #304]
   26084:	cbnz	w0, 260e0 <__asan_backtrace_create_state@@Base+0x2600>
   26088:	ldr	w0, [x20, #16]
   2608c:	cbnz	w0, 260a8 <__asan_backtrace_create_state@@Base+0x25c8>
   26090:	ldr	x2, [x20, #8]
   26094:	ldr	w4, [x2]
   26098:	cbnz	w23, 260b0 <__asan_backtrace_create_state@@Base+0x25d0>
   2609c:	mov	w0, w4
   260a0:	bl	23b60 <__asan_backtrace_create_state@@Base+0x80>
   260a4:	cbz	w0, 260b0 <__asan_backtrace_create_state@@Base+0x25d0>
   260a8:	ldr	x20, [x20]
   260ac:	b	2607c <__asan_backtrace_create_state@@Base+0x259c>
   260b0:	ldr	x0, [x20, #24]
   260b4:	cmp	w4, #0x29
   260b8:	ldr	x22, [x19, #288]
   260bc:	str	w24, [x20, #16]
   260c0:	str	x0, [x19, #288]
   260c4:	b.ne	260f4 <__asan_backtrace_create_state@@Base+0x2614>  // b.any
   260c8:	ldr	x3, [x20]
   260cc:	add	x2, x2, #0x10
   260d0:	mov	w1, w21
   260d4:	mov	x0, x19
   260d8:	bl	25f24 <__asan_backtrace_create_state@@Base+0x2444>
   260dc:	str	x22, [x19, #288]
   260e0:	ldp	x19, x20, [sp, #16]
   260e4:	ldp	x21, x22, [sp, #32]
   260e8:	ldp	x23, x24, [sp, #48]
   260ec:	ldp	x29, x30, [sp], #64
   260f0:	ret
   260f4:	cmp	w4, #0x2a
   260f8:	b.ne	26114 <__asan_backtrace_create_state@@Base+0x2634>  // b.any
   260fc:	ldr	x3, [x20]
   26100:	add	x2, x2, #0x8
   26104:	mov	w1, w21
   26108:	mov	x0, x19
   2610c:	bl	261d8 <__asan_backtrace_create_state@@Base+0x26f8>
   26110:	b	260dc <__asan_backtrace_create_state@@Base+0x25fc>
   26114:	cmp	w4, #0x2
   26118:	b.ne	261c4 <__asan_backtrace_create_state@@Base+0x26e4>  // b.any
   2611c:	ldr	x2, [x2, #8]
   26120:	mov	w1, w21
   26124:	ldr	x23, [x19, #296]
   26128:	str	xzr, [x19, #296]
   2612c:	mov	x0, x19
   26130:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   26134:	str	x23, [x19, #296]
   26138:	tbnz	w21, #2, 261b4 <__asan_backtrace_create_state@@Base+0x26d4>
   2613c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   26140:	mov	x0, x19
   26144:	add	x1, x1, #0x251
   26148:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   2614c:	ldr	x0, [x20, #8]
   26150:	ldr	x20, [x0, #16]
   26154:	ldr	w0, [x20]
   26158:	cmp	w0, #0x47
   2615c:	b.ne	26194 <__asan_backtrace_create_state@@Base+0x26b4>  // b.any
   26160:	mov	x0, x19
   26164:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   26168:	add	x1, x1, #0x242
   2616c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   26170:	ldr	w1, [x20, #16]
   26174:	mov	x0, x19
   26178:	add	w1, w1, #0x1
   2617c:	bl	23ecc <__asan_backtrace_create_state@@Base+0x3ec>
   26180:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   26184:	mov	x0, x19
   26188:	add	x1, x1, #0x250
   2618c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   26190:	ldr	x20, [x20, #8]
   26194:	ldr	w0, [x20]
   26198:	bl	23b60 <__asan_backtrace_create_state@@Base+0x80>
   2619c:	cbnz	w0, 26190 <__asan_backtrace_create_state@@Base+0x26b0>
   261a0:	mov	x2, x20
   261a4:	mov	w1, w21
   261a8:	mov	x0, x19
   261ac:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   261b0:	b	260dc <__asan_backtrace_create_state@@Base+0x25fc>
   261b4:	mov	x0, x19
   261b8:	mov	w1, #0x2e                  	// #46
   261bc:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   261c0:	b	2614c <__asan_backtrace_create_state@@Base+0x266c>
   261c4:	mov	w1, w21
   261c8:	mov	x0, x19
   261cc:	bl	25d5c <__asan_backtrace_create_state@@Base+0x227c>
   261d0:	str	x22, [x19, #288]
   261d4:	b	260a8 <__asan_backtrace_create_state@@Base+0x25c8>
   261d8:	stp	x29, x30, [sp, #-64]!
   261dc:	mov	x29, sp
   261e0:	stp	x19, x20, [sp, #16]
   261e4:	mov	x19, x0
   261e8:	stp	x21, x22, [sp, #32]
   261ec:	mov	w21, w1
   261f0:	stp	x23, x24, [sp, #48]
   261f4:	mov	x24, x2
   261f8:	cbnz	x3, 26244 <__asan_backtrace_create_state@@Base+0x2764>
   261fc:	mov	x0, x19
   26200:	mov	w1, #0x20                  	// #32
   26204:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   26208:	mov	x0, x19
   2620c:	mov	w1, #0x5b                  	// #91
   26210:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   26214:	ldr	x2, [x24]
   26218:	cbz	x2, 26228 <__asan_backtrace_create_state@@Base+0x2748>
   2621c:	mov	w1, w21
   26220:	mov	x0, x19
   26224:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   26228:	mov	x0, x19
   2622c:	mov	w1, #0x5d                  	// #93
   26230:	ldp	x19, x20, [sp, #16]
   26234:	ldp	x21, x22, [sp, #32]
   26238:	ldp	x23, x24, [sp, #48]
   2623c:	ldp	x29, x30, [sp], #64
   26240:	b	23de0 <__asan_backtrace_create_state@@Base+0x300>
   26244:	mov	x20, x3
   26248:	mov	x0, x3
   2624c:	ldr	w22, [x0, #16]
   26250:	cbnz	w22, 2627c <__asan_backtrace_create_state@@Base+0x279c>
   26254:	ldr	x0, [x0, #8]
   26258:	ldr	w0, [x0]
   2625c:	cmp	w0, #0x2a
   26260:	b.eq	262b8 <__asan_backtrace_create_state@@Base+0x27d8>  // b.none
   26264:	mov	x0, x19
   26268:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2626c:	mov	w23, #0x1                   	// #1
   26270:	add	x1, x1, #0x401
   26274:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   26278:	b	26288 <__asan_backtrace_create_state@@Base+0x27a8>
   2627c:	ldr	x0, [x0]
   26280:	cbnz	x0, 2624c <__asan_backtrace_create_state@@Base+0x276c>
   26284:	mov	w23, #0x0                   	// #0
   26288:	mov	w22, #0x1                   	// #1
   2628c:	mov	x2, x20
   26290:	mov	w1, w21
   26294:	mov	x0, x19
   26298:	mov	w3, #0x0                   	// #0
   2629c:	bl	26054 <__asan_backtrace_create_state@@Base+0x2574>
   262a0:	cbz	w23, 262b0 <__asan_backtrace_create_state@@Base+0x27d0>
   262a4:	mov	x0, x19
   262a8:	mov	w1, #0x29                  	// #41
   262ac:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   262b0:	cbnz	w22, 261fc <__asan_backtrace_create_state@@Base+0x271c>
   262b4:	b	26208 <__asan_backtrace_create_state@@Base+0x2728>
   262b8:	mov	w23, #0x0                   	// #0
   262bc:	b	2628c <__asan_backtrace_create_state@@Base+0x27ac>
   262c0:	ldr	w4, [x2]
   262c4:	cmp	w4, #0x32
   262c8:	b.ne	262dc <__asan_backtrace_create_state@@Base+0x27fc>  // b.any
   262cc:	ldr	x1, [x2, #8]
   262d0:	ldrsw	x2, [x1, #16]
   262d4:	ldr	x1, [x1, #8]
   262d8:	b	23e24 <__asan_backtrace_create_state@@Base+0x344>
   262dc:	b	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   262e0:	stp	x29, x30, [sp, #-48]!
   262e4:	mov	x29, sp
   262e8:	stp	x19, x20, [sp, #16]
   262ec:	mov	x19, x0
   262f0:	mov	x20, x2
   262f4:	stp	x21, x22, [sp, #32]
   262f8:	mov	w21, w1
   262fc:	ldr	w1, [x2]
   26300:	cmp	w1, #0x31
   26304:	b.hi	26318 <__asan_backtrace_create_state@@Base+0x2838>  // b.pmore
   26308:	mov	x0, #0x43                  	// #67
   2630c:	movk	x0, #0x2, lsl #48
   26310:	lsr	x0, x0, x1
   26314:	tbnz	w0, #0, 26354 <__asan_backtrace_create_state@@Base+0x2874>
   26318:	mov	w22, #0x0                   	// #0
   2631c:	mov	x0, x19
   26320:	mov	w1, #0x28                  	// #40
   26324:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   26328:	mov	x2, x20
   2632c:	mov	w1, w21
   26330:	mov	x0, x19
   26334:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   26338:	cbnz	w22, 2635c <__asan_backtrace_create_state@@Base+0x287c>
   2633c:	mov	x0, x19
   26340:	mov	w1, #0x29                  	// #41
   26344:	ldp	x19, x20, [sp, #16]
   26348:	ldp	x21, x22, [sp, #32]
   2634c:	ldp	x29, x30, [sp], #48
   26350:	b	23de0 <__asan_backtrace_create_state@@Base+0x300>
   26354:	mov	w22, #0x1                   	// #1
   26358:	b	26328 <__asan_backtrace_create_state@@Base+0x2848>
   2635c:	ldp	x19, x20, [sp, #16]
   26360:	ldp	x21, x22, [sp, #32]
   26364:	ldp	x29, x30, [sp], #48
   26368:	ret
   2636c:	stp	x29, x30, [sp, #-64]!
   26370:	mov	x29, sp
   26374:	stp	x19, x20, [sp, #16]
   26378:	mov	x19, x0
   2637c:	mov	w20, w1
   26380:	ldr	x0, [x2, #8]
   26384:	stp	x21, x22, [sp, #32]
   26388:	stp	x23, x24, [sp, #48]
   2638c:	ldr	x0, [x0, #8]
   26390:	ldr	x0, [x0]
   26394:	ldrb	w1, [x0]
   26398:	cmp	w1, #0x66
   2639c:	b.ne	264e8 <__asan_backtrace_create_state@@Base+0x2a08>  // b.any
   263a0:	ldr	x1, [x2, #16]
   263a4:	ldp	x22, x21, [x1, #8]
   263a8:	ldr	w1, [x21]
   263ac:	cmp	w1, #0x3c
   263b0:	b.ne	26404 <__asan_backtrace_create_state@@Base+0x2924>  // b.any
   263b4:	ldr	x23, [x21, #16]
   263b8:	ldr	x21, [x21, #8]
   263bc:	mov	w1, #0xffffffff            	// #-1
   263c0:	ldr	w24, [x19, #316]
   263c4:	str	w1, [x19, #316]
   263c8:	ldrb	w0, [x0, #1]
   263cc:	cmp	w0, #0x6c
   263d0:	b.eq	26454 <__asan_backtrace_create_state@@Base+0x2974>  // b.none
   263d4:	b.hi	2640c <__asan_backtrace_create_state@@Base+0x292c>  // b.pmore
   263d8:	cmp	w0, #0x4c
   263dc:	b.eq	26494 <__asan_backtrace_create_state@@Base+0x29b4>  // b.none
   263e0:	cmp	w0, #0x52
   263e4:	b.eq	26494 <__asan_backtrace_create_state@@Base+0x29b4>  // b.none
   263e8:	mov	w0, #0x1                   	// #1
   263ec:	str	w24, [x19, #316]
   263f0:	ldp	x19, x20, [sp, #16]
   263f4:	ldp	x21, x22, [sp, #32]
   263f8:	ldp	x23, x24, [sp, #48]
   263fc:	ldp	x29, x30, [sp], #64
   26400:	ret
   26404:	mov	x23, #0x0                   	// #0
   26408:	b	263bc <__asan_backtrace_create_state@@Base+0x28dc>
   2640c:	cmp	w0, #0x72
   26410:	b.ne	263e8 <__asan_backtrace_create_state@@Base+0x2908>  // b.any
   26414:	mov	x0, x19
   26418:	mov	w1, #0x28                  	// #40
   2641c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   26420:	mov	x2, x21
   26424:	mov	w1, w20
   26428:	mov	x0, x19
   2642c:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   26430:	mov	x2, x22
   26434:	mov	w1, w20
   26438:	mov	x0, x19
   2643c:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   26440:	mov	x0, x19
   26444:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   26448:	add	x1, x1, #0x4db
   2644c:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   26450:	b	263e8 <__asan_backtrace_create_state@@Base+0x2908>
   26454:	mov	x0, x19
   26458:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2645c:	add	x1, x1, #0x4d6
   26460:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   26464:	mov	x2, x22
   26468:	mov	w1, w20
   2646c:	mov	x0, x19
   26470:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   26474:	mov	x2, x21
   26478:	mov	w1, w20
   2647c:	mov	x0, x19
   26480:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   26484:	mov	x0, x19
   26488:	mov	w1, #0x29                  	// #41
   2648c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   26490:	b	263e8 <__asan_backtrace_create_state@@Base+0x2908>
   26494:	mov	x0, x19
   26498:	mov	w1, #0x28                  	// #40
   2649c:	bl	23de0 <__asan_backtrace_create_state@@Base+0x300>
   264a0:	mov	x2, x21
   264a4:	mov	w1, w20
   264a8:	mov	x0, x19
   264ac:	bl	262e0 <__asan_backtrace_create_state@@Base+0x2800>
   264b0:	mov	x2, x22
   264b4:	mov	w1, w20
   264b8:	mov	x0, x19
   264bc:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   264c0:	mov	x0, x19
   264c4:	adrp	x1, 30000 <__asan_backtrace_vector_release@@Base+0x3b60>
   264c8:	add	x1, x1, #0x511
   264cc:	bl	23e98 <__asan_backtrace_create_state@@Base+0x3b8>
   264d0:	mov	x2, x22
   264d4:	mov	w1, w20
   264d8:	mov	x0, x19
   264dc:	bl	262c0 <__asan_backtrace_create_state@@Base+0x27e0>
   264e0:	mov	x2, x23
   264e4:	b	26478 <__asan_backtrace_create_state@@Base+0x2998>
   264e8:	mov	w0, #0x0                   	// #0
   264ec:	b	263f0 <__asan_backtrace_create_state@@Base+0x2910>

00000000000264f0 <__asan_cplus_demangle_fill_name@@Base>:
   264f0:	cmp	x0, #0x0
   264f4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   264f8:	b.eq	26514 <__asan_cplus_demangle_fill_name@@Base+0x24>  // b.none
   264fc:	cmp	w2, #0x0
   26500:	b.le	26514 <__asan_cplus_demangle_fill_name@@Base+0x24>
   26504:	stp	xzr, x1, [x0]
   26508:	str	w2, [x0, #16]
   2650c:	mov	w0, #0x1                   	// #1
   26510:	ret
   26514:	mov	w0, #0x0                   	// #0
   26518:	b	26510 <__asan_cplus_demangle_fill_name@@Base+0x20>
   2651c:	stp	x29, x30, [sp, #-32]!
   26520:	mov	x4, x1
   26524:	mov	w5, w2
   26528:	mov	x29, sp
   2652c:	str	x19, [sp, #16]
   26530:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   26534:	mov	x19, x0
   26538:	mov	w2, w5
   2653c:	mov	x1, x4
   26540:	bl	6830 <__asan_cplus_demangle_fill_name@plt>
   26544:	cmp	w0, #0x0
   26548:	csel	x0, x19, xzr, ne  // ne = any
   2654c:	ldr	x19, [sp, #16]
   26550:	ldp	x29, x30, [sp], #32
   26554:	ret
   26558:	stp	x29, x30, [sp, #-48]!
   2655c:	mov	x29, sp
   26560:	stp	x19, x20, [sp, #16]
   26564:	mov	x19, x0
   26568:	add	x0, x0, #0x18
   2656c:	str	x21, [sp, #32]
   26570:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   26574:	cmp	w0, #0x0
   26578:	b.le	26658 <__asan_cplus_demangle_fill_name@@Base+0x168>
   2657c:	mov	w20, w0
   26580:	sxtw	x1, w0
   26584:	ldr	x0, [x19, #8]
   26588:	ldr	x21, [x19, #24]
   2658c:	sub	x0, x0, x21
   26590:	cmp	x0, w20, sxtw
   26594:	b.lt	26650 <__asan_cplus_demangle_fill_name@@Base+0x160>  // b.tstop
   26598:	ldr	w2, [x19, #16]
   2659c:	add	x0, x21, x1
   265a0:	str	x0, [x19, #24]
   265a4:	tbz	w2, #2, 265bc <__asan_cplus_demangle_fill_name@@Base+0xcc>
   265a8:	ldrb	w1, [x21, x1]
   265ac:	cmp	w1, #0x24
   265b0:	b.ne	265bc <__asan_cplus_demangle_fill_name@@Base+0xcc>  // b.any
   265b4:	add	x0, x0, #0x1
   265b8:	str	x0, [x19, #24]
   265bc:	cmp	w20, #0x9
   265c0:	b.le	26644 <__asan_cplus_demangle_fill_name@@Base+0x154>
   265c4:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   265c8:	mov	x0, x21
   265cc:	add	x1, x1, #0x4e0
   265d0:	mov	x2, #0x8                   	// #8
   265d4:	bl	6c90 <__asan_internal_memcmp@plt>
   265d8:	cbnz	w0, 26644 <__asan_cplus_demangle_fill_name@@Base+0x154>
   265dc:	ldrb	w0, [x21, #8]
   265e0:	sub	w0, w0, #0x24
   265e4:	and	w0, w0, #0xff
   265e8:	cmp	w0, #0x3b
   265ec:	b.hi	26644 <__asan_cplus_demangle_fill_name@@Base+0x154>  // b.pmore
   265f0:	mov	x1, #0x401                 	// #1025
   265f4:	movk	x1, #0x800, lsl #48
   265f8:	lsr	x0, x1, x0
   265fc:	tbz	w0, #0, 26644 <__asan_cplus_demangle_fill_name@@Base+0x154>
   26600:	ldrb	w0, [x21, #9]
   26604:	cmp	w0, #0x4e
   26608:	b.ne	26644 <__asan_cplus_demangle_fill_name@@Base+0x154>  // b.any
   2660c:	ldr	w0, [x19, #72]
   26610:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   26614:	add	x1, x1, #0x4e9
   26618:	mov	w2, #0x15                  	// #21
   2661c:	add	w0, w0, #0x16
   26620:	sub	w20, w0, w20
   26624:	str	w20, [x19, #72]
   26628:	mov	x0, x19
   2662c:	bl	2651c <__asan_cplus_demangle_fill_name@@Base+0x2c>
   26630:	str	x0, [x19, #64]
   26634:	ldp	x19, x20, [sp, #16]
   26638:	ldr	x21, [sp, #32]
   2663c:	ldp	x29, x30, [sp], #48
   26640:	ret
   26644:	mov	w2, w20
   26648:	mov	x1, x21
   2664c:	b	26628 <__asan_cplus_demangle_fill_name@@Base+0x138>
   26650:	mov	x0, #0x0                   	// #0
   26654:	b	26630 <__asan_cplus_demangle_fill_name@@Base+0x140>
   26658:	mov	x0, #0x0                   	// #0
   2665c:	b	26634 <__asan_cplus_demangle_fill_name@@Base+0x144>
   26660:	stp	x29, x30, [sp, #-48]!
   26664:	mov	x29, sp
   26668:	str	x21, [sp, #32]
   2666c:	ldr	x21, [x0, #64]
   26670:	stp	x19, x20, [sp, #16]
   26674:	mov	x19, x0
   26678:	mov	x20, x1
   2667c:	ldr	x0, [x19, #24]
   26680:	ldrb	w1, [x0]
   26684:	cmp	w1, #0x42
   26688:	b.eq	266a4 <__asan_cplus_demangle_fill_name@@Base+0x1b4>  // b.none
   2668c:	str	x21, [x19, #64]
   26690:	mov	x0, x20
   26694:	ldp	x19, x20, [sp, #16]
   26698:	ldr	x21, [sp, #32]
   2669c:	ldp	x29, x30, [sp], #48
   266a0:	ret
   266a4:	add	x0, x0, #0x1
   266a8:	str	x0, [x19, #24]
   266ac:	mov	x0, x19
   266b0:	bl	26558 <__asan_cplus_demangle_fill_name@@Base+0x68>
   266b4:	mov	x3, x0
   266b8:	mov	x2, x20
   266bc:	mov	x0, x19
   266c0:	mov	w1, #0x4c                  	// #76
   266c4:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   266c8:	mov	x20, x0
   266cc:	b	2667c <__asan_cplus_demangle_fill_name@@Base+0x18c>
   266d0:	stp	x29, x30, [sp, #-32]!
   266d4:	mov	x29, sp
   266d8:	ldr	x2, [x0, #24]
   266dc:	str	x19, [sp, #16]
   266e0:	mov	x19, x0
   266e4:	ldrb	w0, [x2]
   266e8:	cmp	w0, #0x53
   266ec:	b.ne	268a4 <__asan_cplus_demangle_fill_name@@Base+0x3b4>  // b.any
   266f0:	add	x0, x2, #0x1
   266f4:	str	x0, [x19, #24]
   266f8:	ldrb	w0, [x2, #1]
   266fc:	cbz	w0, 267d0 <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   26700:	add	x0, x2, #0x2
   26704:	str	x0, [x19, #24]
   26708:	ldrb	w0, [x2, #1]
   2670c:	sub	w2, w0, #0x30
   26710:	and	w2, w2, #0xff
   26714:	cmp	w2, #0x2f
   26718:	b.hi	267d0 <__asan_cplus_demangle_fill_name@@Base+0x2e0>  // b.pmore
   2671c:	mov	w3, #0xfffe03ff            	// #-130049
   26720:	movk	x3, #0x87ff, lsl #32
   26724:	lsr	x2, x3, x2
   26728:	tbz	w2, #0, 267d0 <__asan_cplus_demangle_fill_name@@Base+0x2e0>
   2672c:	cmp	w0, #0x5f
   26730:	b.ne	267a8 <__asan_cplus_demangle_fill_name@@Base+0x2b8>  // b.any
   26734:	mov	w0, #0x0                   	// #0
   26738:	ldr	w1, [x19, #56]
   2673c:	cmp	w1, w0
   26740:	b.ls	268a4 <__asan_cplus_demangle_fill_name@@Base+0x3b4>  // b.plast
   26744:	ldr	x1, [x19, #48]
   26748:	ldr	x1, [x1, w0, uxtw #3]
   2674c:	mov	x0, x1
   26750:	ldr	x19, [sp, #16]
   26754:	ldp	x29, x30, [sp], #32
   26758:	ret
   2675c:	mov	w2, w1
   26760:	sub	w1, w0, #0x30
   26764:	and	w1, w1, #0xff
   26768:	cmp	w1, #0x9
   2676c:	b.hi	267b4 <__asan_cplus_demangle_fill_name@@Base+0x2c4>  // b.pmore
   26770:	madd	w0, w2, w3, w0
   26774:	sub	w1, w0, #0x30
   26778:	cmp	w2, w1
   2677c:	b.hi	268a4 <__asan_cplus_demangle_fill_name@@Base+0x3b4>  // b.pmore
   26780:	ldr	x2, [x19, #24]
   26784:	ldrb	w0, [x2]
   26788:	cbz	w0, 2675c <__asan_cplus_demangle_fill_name@@Base+0x26c>
   2678c:	add	x0, x2, #0x1
   26790:	str	x0, [x19, #24]
   26794:	ldrb	w0, [x2]
   26798:	cmp	w0, #0x5f
   2679c:	b.ne	2675c <__asan_cplus_demangle_fill_name@@Base+0x26c>  // b.any
   267a0:	add	w0, w1, #0x1
   267a4:	b	26738 <__asan_cplus_demangle_fill_name@@Base+0x248>
   267a8:	mov	w2, #0x0                   	// #0
   267ac:	mov	w3, #0x24                  	// #36
   267b0:	b	26760 <__asan_cplus_demangle_fill_name@@Base+0x270>
   267b4:	sub	w1, w0, #0x41
   267b8:	and	w1, w1, #0xff
   267bc:	cmp	w1, #0x19
   267c0:	b.hi	268a4 <__asan_cplus_demangle_fill_name@@Base+0x3b4>  // b.pmore
   267c4:	madd	w0, w2, w3, w0
   267c8:	sub	w1, w0, #0x37
   267cc:	b	26778 <__asan_cplus_demangle_fill_name@@Base+0x288>
   267d0:	ldr	w5, [x19, #16]
   267d4:	and	w1, w1, #0x1
   267d8:	ands	w2, w5, #0x8
   267dc:	csel	w1, w1, wzr, eq  // eq = none
   267e0:	ubfx	x5, x5, #3, #1
   267e4:	cbz	w1, 26800 <__asan_cplus_demangle_fill_name@@Base+0x310>
   267e8:	ldr	x1, [x19, #24]
   267ec:	ldrb	w1, [x1]
   267f0:	sub	w1, w1, #0x43
   267f4:	and	w1, w1, #0xff
   267f8:	cmp	w1, #0x1
   267fc:	csinc	w5, w5, wzr, hi  // hi = pmore
   26800:	adrp	x4, 4f000 <__asan_backtrace_vector_release@@Base+0x22b60>
   26804:	add	x4, x4, #0xe58
   26808:	mov	x1, #0x7                   	// #7
   2680c:	ldrb	w2, [x4]
   26810:	cmp	w2, w0
   26814:	b.ne	268b8 <__asan_cplus_demangle_fill_name@@Base+0x3c8>  // b.any
   26818:	ldr	x6, [x4, #40]
   2681c:	cbz	x6, 26844 <__asan_cplus_demangle_fill_name@@Base+0x354>
   26820:	ldr	w7, [x4, #48]
   26824:	mov	x0, x19
   26828:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   2682c:	cbz	x0, 26840 <__asan_cplus_demangle_fill_name@@Base+0x350>
   26830:	mov	w1, #0x18                  	// #24
   26834:	str	w1, [x0]
   26838:	str	x6, [x0, #8]
   2683c:	str	w7, [x0, #16]
   26840:	str	x0, [x19, #64]
   26844:	cbz	w5, 268ac <__asan_cplus_demangle_fill_name@@Base+0x3bc>
   26848:	ldr	x5, [x4, #24]
   2684c:	ldr	w4, [x4, #32]
   26850:	ldr	w0, [x19, #72]
   26854:	add	w0, w0, w4
   26858:	str	w0, [x19, #72]
   2685c:	mov	x0, x19
   26860:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   26864:	mov	x1, x0
   26868:	cbz	x0, 2687c <__asan_cplus_demangle_fill_name@@Base+0x38c>
   2686c:	mov	w0, #0x18                  	// #24
   26870:	str	w0, [x1]
   26874:	str	x5, [x1, #8]
   26878:	str	w4, [x1, #16]
   2687c:	ldr	x0, [x19, #24]
   26880:	ldrb	w0, [x0]
   26884:	cmp	w0, #0x42
   26888:	b.ne	2674c <__asan_cplus_demangle_fill_name@@Base+0x25c>  // b.any
   2688c:	mov	x0, x19
   26890:	bl	26660 <__asan_cplus_demangle_fill_name@@Base+0x170>
   26894:	mov	x1, x0
   26898:	mov	x0, x19
   2689c:	bl	23cb4 <__asan_backtrace_create_state@@Base+0x1d4>
   268a0:	cbnz	w0, 2674c <__asan_cplus_demangle_fill_name@@Base+0x25c>
   268a4:	mov	x1, #0x0                   	// #0
   268a8:	b	2674c <__asan_cplus_demangle_fill_name@@Base+0x25c>
   268ac:	ldr	x5, [x4, #8]
   268b0:	ldr	w4, [x4, #16]
   268b4:	b	26850 <__asan_cplus_demangle_fill_name@@Base+0x360>
   268b8:	add	x4, x4, #0x38
   268bc:	subs	x1, x1, #0x1
   268c0:	b.ne	2680c <__asan_cplus_demangle_fill_name@@Base+0x31c>  // b.any
   268c4:	b	268a4 <__asan_cplus_demangle_fill_name@@Base+0x3b4>

00000000000268c8 <__asan_cplus_demangle_fill_extended_operator@@Base>:
   268c8:	cmp	x0, #0x0
   268cc:	ccmp	w1, #0x0, #0x1, ne  // ne = any
   268d0:	b.lt	268f0 <__asan_cplus_demangle_fill_extended_operator@@Base+0x28>  // b.tstop
   268d4:	cbz	x2, 268f0 <__asan_cplus_demangle_fill_extended_operator@@Base+0x28>
   268d8:	mov	x3, #0x33                  	// #51
   268dc:	str	x3, [x0]
   268e0:	str	w1, [x0, #8]
   268e4:	str	x2, [x0, #16]
   268e8:	mov	w0, #0x1                   	// #1
   268ec:	ret
   268f0:	mov	w0, #0x0                   	// #0
   268f4:	b	268ec <__asan_cplus_demangle_fill_extended_operator@@Base+0x24>

00000000000268f8 <__asan_cplus_demangle_fill_ctor@@Base>:
   268f8:	cmp	x0, #0x0
   268fc:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   26900:	b.eq	26928 <__asan_cplus_demangle_fill_ctor@@Base+0x30>  // b.none
   26904:	sub	w3, w1, #0x1
   26908:	cmp	w3, #0x4
   2690c:	b.hi	26928 <__asan_cplus_demangle_fill_ctor@@Base+0x30>  // b.pmore
   26910:	mov	x3, #0x7                   	// #7
   26914:	str	x3, [x0]
   26918:	str	w1, [x0, #8]
   2691c:	str	x2, [x0, #16]
   26920:	mov	w0, #0x1                   	// #1
   26924:	ret
   26928:	mov	w0, #0x0                   	// #0
   2692c:	b	26924 <__asan_cplus_demangle_fill_ctor@@Base+0x2c>

0000000000026930 <__asan_cplus_demangle_fill_dtor@@Base>:
   26930:	cmp	x0, #0x0
   26934:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   26938:	b.eq	26960 <__asan_cplus_demangle_fill_dtor@@Base+0x30>  // b.none
   2693c:	sub	w3, w1, #0x1
   26940:	cmp	w3, #0x4
   26944:	b.hi	26960 <__asan_cplus_demangle_fill_dtor@@Base+0x30>  // b.pmore
   26948:	mov	x3, #0x8                   	// #8
   2694c:	str	x3, [x0]
   26950:	str	w1, [x0, #8]
   26954:	str	x2, [x0, #16]
   26958:	mov	w0, #0x1                   	// #1
   2695c:	ret
   26960:	mov	w0, #0x0                   	// #0
   26964:	b	2695c <__asan_cplus_demangle_fill_dtor@@Base+0x2c>

0000000000026968 <__asan_cplus_demangle_type@@Base>:
   26968:	stp	x29, x30, [sp, #-80]!
   2696c:	mov	x29, sp
   26970:	ldr	x3, [x0, #24]
   26974:	stp	x19, x20, [sp, #16]
   26978:	mov	x19, x0
   2697c:	mov	x0, x3
   26980:	stp	x21, x22, [sp, #32]
   26984:	str	x23, [sp, #48]
   26988:	bl	24154 <__asan_backtrace_create_state@@Base+0x674>
   2698c:	cbz	w0, 26a28 <__asan_cplus_demangle_type@@Base+0xc0>
   26990:	add	x1, sp, #0x48
   26994:	mov	x0, x19
   26998:	mov	w2, #0x0                   	// #0
   2699c:	bl	28c04 <__asan_cplus_demangle_mangled_name@@Base+0xab0>
   269a0:	mov	x20, x0
   269a4:	cbnz	x0, 269c0 <__asan_cplus_demangle_type@@Base+0x58>
   269a8:	mov	x0, #0x0                   	// #0
   269ac:	ldp	x19, x20, [sp, #16]
   269b0:	ldp	x21, x22, [sp, #32]
   269b4:	ldr	x23, [sp, #48]
   269b8:	ldp	x29, x30, [sp], #80
   269bc:	ret
   269c0:	ldr	x0, [x19, #24]
   269c4:	ldrb	w0, [x0]
   269c8:	cmp	w0, #0x46
   269cc:	mov	x0, x19
   269d0:	b.ne	26a20 <__asan_cplus_demangle_type@@Base+0xb8>  // b.any
   269d4:	bl	27674 <__asan_cplus_demangle_type@@Base+0xd0c>
   269d8:	str	x0, [x20]
   269dc:	ldr	x0, [x20]
   269e0:	cbz	x0, 269a8 <__asan_cplus_demangle_type@@Base+0x40>
   269e4:	ldr	w1, [x0]
   269e8:	sub	w1, w1, #0x1f
   269ec:	cmp	w1, #0x1
   269f0:	b.hi	26a0c <__asan_cplus_demangle_type@@Base+0xa4>  // b.pmore
   269f4:	ldr	x2, [sp, #72]
   269f8:	ldr	x1, [x0, #8]
   269fc:	str	x2, [x0, #8]
   26a00:	ldr	x0, [x20]
   26a04:	str	x0, [sp, #72]
   26a08:	str	x1, [x20]
   26a0c:	ldr	x1, [sp, #72]
   26a10:	mov	x0, x19
   26a14:	bl	23cb4 <__asan_backtrace_create_state@@Base+0x1d4>
   26a18:	cbnz	w0, 26a90 <__asan_cplus_demangle_type@@Base+0x128>
   26a1c:	b	269a8 <__asan_cplus_demangle_type@@Base+0x40>
   26a20:	bl	26968 <__asan_cplus_demangle_type@@Base>
   26a24:	b	269d8 <__asan_cplus_demangle_type@@Base+0x70>
   26a28:	ldrb	w1, [x3]
   26a2c:	sub	w2, w1, #0x30
   26a30:	cmp	w2, #0x4a
   26a34:	b.hi	269a8 <__asan_cplus_demangle_type@@Base+0x40>  // b.pmore
   26a38:	adrp	x0, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   26a3c:	add	x0, x0, #0x130
   26a40:	ldrh	w0, [x0, w2, uxtw #1]
   26a44:	adr	x2, 26a50 <__asan_cplus_demangle_type@@Base+0xe8>
   26a48:	add	x0, x2, w0, sxth #2
   26a4c:	br	x0
   26a50:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26a54:	sub	w1, w1, #0x61
   26a58:	ldr	x0, [x0, #3736]
   26a5c:	sbfiz	x1, x1, #5, #32
   26a60:	add	x1, x0, x1
   26a64:	mov	x0, x19
   26a68:	bl	23c34 <__asan_backtrace_create_state@@Base+0x154>
   26a6c:	str	x0, [sp, #72]
   26a70:	ldr	x1, [x0, #8]
   26a74:	ldr	w0, [x19, #72]
   26a78:	ldr	w1, [x1, #8]
   26a7c:	add	w0, w0, w1
   26a80:	str	w0, [x19, #72]
   26a84:	ldr	x0, [x19, #24]
   26a88:	add	x0, x0, #0x1
   26a8c:	str	x0, [x19, #24]
   26a90:	ldr	x0, [sp, #72]
   26a94:	b	269ac <__asan_cplus_demangle_type@@Base+0x44>
   26a98:	add	x3, x3, #0x1
   26a9c:	str	x3, [x19, #24]
   26aa0:	mov	x0, x19
   26aa4:	bl	26558 <__asan_cplus_demangle_fill_name@@Base+0x68>
   26aa8:	mov	x2, x0
   26aac:	mov	x3, #0x0                   	// #0
   26ab0:	mov	w1, #0x28                  	// #40
   26ab4:	mov	x0, x19
   26ab8:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   26abc:	b	26ac8 <__asan_cplus_demangle_type@@Base+0x160>
   26ac0:	mov	x0, x19
   26ac4:	bl	27674 <__asan_cplus_demangle_type@@Base+0xd0c>
   26ac8:	str	x0, [sp, #72]
   26acc:	b	26a0c <__asan_cplus_demangle_type@@Base+0xa4>
   26ad0:	mov	x0, x19
   26ad4:	bl	2772c <__asan_cplus_demangle_type@@Base+0xdc4>
   26ad8:	b	26ac8 <__asan_cplus_demangle_type@@Base+0x160>
   26adc:	add	x1, x3, #0x1
   26ae0:	str	x1, [x19, #24]
   26ae4:	ldrb	w0, [x3, #1]
   26ae8:	cmp	w0, #0x5f
   26aec:	b.eq	26b48 <__asan_cplus_demangle_type@@Base+0x1e0>  // b.none
   26af0:	sub	w0, w0, #0x30
   26af4:	and	w0, w0, #0xff
   26af8:	cmp	w0, #0x9
   26afc:	b.hi	26b3c <__asan_cplus_demangle_type@@Base+0x1d4>  // b.pmore
   26b00:	ldr	x0, [x19, #24]
   26b04:	add	x2, x0, #0x1
   26b08:	str	x2, [x19, #24]
   26b0c:	ldrb	w0, [x0, #1]
   26b10:	sub	w0, w0, #0x30
   26b14:	and	w0, w0, #0xff
   26b18:	cmp	w0, #0x9
   26b1c:	b.ls	26b00 <__asan_cplus_demangle_type@@Base+0x198>  // b.plast
   26b20:	sub	w2, w2, w1
   26b24:	mov	x0, x19
   26b28:	bl	2651c <__asan_cplus_demangle_fill_name@@Base+0x2c>
   26b2c:	mov	x20, x0
   26b30:	cbnz	x0, 26b4c <__asan_cplus_demangle_type@@Base+0x1e4>
   26b34:	mov	x0, #0x0                   	// #0
   26b38:	b	26ac8 <__asan_cplus_demangle_type@@Base+0x160>
   26b3c:	mov	x0, x19
   26b40:	bl	289a8 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   26b44:	b	26b2c <__asan_cplus_demangle_type@@Base+0x1c4>
   26b48:	mov	x20, #0x0                   	// #0
   26b4c:	ldr	x0, [x19, #24]
   26b50:	ldrb	w1, [x0]
   26b54:	cmp	w1, #0x5f
   26b58:	b.ne	26b34 <__asan_cplus_demangle_type@@Base+0x1cc>  // b.any
   26b5c:	add	x0, x0, #0x1
   26b60:	str	x0, [x19, #24]
   26b64:	mov	x0, x19
   26b68:	bl	67c0 <__asan_cplus_demangle_type@plt>
   26b6c:	mov	x3, x0
   26b70:	mov	x2, x20
   26b74:	mov	w1, #0x2a                  	// #42
   26b78:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26b7c:	add	x3, x3, #0x1
   26b80:	str	x3, [x19, #24]
   26b84:	mov	x0, x19
   26b88:	bl	67c0 <__asan_cplus_demangle_type@plt>
   26b8c:	mov	x20, x0
   26b90:	cbz	x0, 26b34 <__asan_cplus_demangle_type@@Base+0x1cc>
   26b94:	mov	x0, x19
   26b98:	bl	67c0 <__asan_cplus_demangle_type@plt>
   26b9c:	mov	x3, x0
   26ba0:	cbz	x0, 26b34 <__asan_cplus_demangle_type@@Base+0x1cc>
   26ba4:	mov	x2, x20
   26ba8:	mov	w1, #0x2b                  	// #43
   26bac:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26bb0:	mov	x0, x19
   26bb4:	bl	24054 <__asan_backtrace_create_state@@Base+0x574>
   26bb8:	ldr	x20, [x19, #24]
   26bbc:	str	x0, [sp, #72]
   26bc0:	mov	x1, x0
   26bc4:	ldrb	w0, [x20]
   26bc8:	cmp	w0, #0x49
   26bcc:	b.ne	26a0c <__asan_cplus_demangle_type@@Base+0xa4>  // b.any
   26bd0:	ldr	w0, [x19, #80]
   26bd4:	cbnz	w0, 26bfc <__asan_cplus_demangle_type@@Base+0x294>
   26bd8:	mov	x0, x19
   26bdc:	bl	23cb4 <__asan_backtrace_create_state@@Base+0x1d4>
   26be0:	cbz	w0, 269a8 <__asan_cplus_demangle_type@@Base+0x40>
   26be4:	ldr	x20, [sp, #72]
   26be8:	mov	x0, x19
   26bec:	bl	28b24 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   26bf0:	mov	x3, x0
   26bf4:	mov	x2, x20
   26bf8:	b	26c3c <__asan_cplus_demangle_type@@Base+0x2d4>
   26bfc:	ldr	w23, [x19, #40]
   26c00:	mov	x0, x19
   26c04:	ldr	w22, [x19, #56]
   26c08:	ldr	w21, [x19, #72]
   26c0c:	bl	28b24 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   26c10:	mov	x4, x0
   26c14:	ldr	x0, [x19, #24]
   26c18:	ldrb	w0, [x0]
   26c1c:	cmp	w0, #0x49
   26c20:	b.ne	26c44 <__asan_cplus_demangle_type@@Base+0x2dc>  // b.any
   26c24:	ldr	x1, [sp, #72]
   26c28:	mov	x0, x19
   26c2c:	bl	23cb4 <__asan_backtrace_create_state@@Base+0x1d4>
   26c30:	cbz	w0, 269a8 <__asan_cplus_demangle_type@@Base+0x40>
   26c34:	ldr	x2, [sp, #72]
   26c38:	mov	x3, x4
   26c3c:	mov	w1, #0x4                   	// #4
   26c40:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26c44:	str	x20, [x19, #24]
   26c48:	str	w23, [x19, #40]
   26c4c:	str	w22, [x19, #56]
   26c50:	str	w21, [x19, #72]
   26c54:	b	26a0c <__asan_cplus_demangle_type@@Base+0xa4>
   26c58:	ldrb	w0, [x3, #1]
   26c5c:	sub	w0, w0, #0x30
   26c60:	and	w0, w0, #0xff
   26c64:	cmp	w0, #0x2f
   26c68:	b.hi	26c7c <__asan_cplus_demangle_type@@Base+0x314>  // b.pmore
   26c6c:	mov	w1, #0xfffe03ff            	// #-130049
   26c70:	movk	x1, #0x87ff, lsl #32
   26c74:	lsr	x0, x1, x0
   26c78:	tbnz	w0, #0, 26c9c <__asan_cplus_demangle_type@@Base+0x334>
   26c7c:	mov	x0, x19
   26c80:	bl	2772c <__asan_cplus_demangle_type@@Base+0xdc4>
   26c84:	str	x0, [sp, #72]
   26c88:	cbz	x0, 26a0c <__asan_cplus_demangle_type@@Base+0xa4>
   26c8c:	ldr	w0, [x0]
   26c90:	cmp	w0, #0x18
   26c94:	b.ne	26a0c <__asan_cplus_demangle_type@@Base+0xa4>  // b.any
   26c98:	b	26a90 <__asan_cplus_demangle_type@@Base+0x128>
   26c9c:	mov	x0, x19
   26ca0:	mov	w1, #0x0                   	// #0
   26ca4:	bl	266d0 <__asan_cplus_demangle_fill_name@@Base+0x1e0>
   26ca8:	mov	x20, x0
   26cac:	ldr	x0, [x19, #24]
   26cb0:	str	x20, [sp, #72]
   26cb4:	ldrb	w0, [x0]
   26cb8:	cmp	w0, #0x49
   26cbc:	b.ne	26a90 <__asan_cplus_demangle_type@@Base+0x128>  // b.any
   26cc0:	b	26be8 <__asan_cplus_demangle_type@@Base+0x280>
   26cc4:	add	x3, x3, #0x1
   26cc8:	str	x3, [x19, #24]
   26ccc:	mov	x0, x19
   26cd0:	bl	26968 <__asan_cplus_demangle_type@@Base>
   26cd4:	mov	x2, x0
   26cd8:	mov	x3, #0x0                   	// #0
   26cdc:	mov	w1, #0x24                  	// #36
   26ce0:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26ce4:	add	x3, x3, #0x1
   26ce8:	str	x3, [x19, #24]
   26cec:	mov	x0, x19
   26cf0:	bl	26968 <__asan_cplus_demangle_type@@Base>
   26cf4:	mov	x2, x0
   26cf8:	mov	x3, #0x0                   	// #0
   26cfc:	mov	w1, #0x22                  	// #34
   26d00:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26d04:	add	x3, x3, #0x1
   26d08:	str	x3, [x19, #24]
   26d0c:	mov	x0, x19
   26d10:	bl	26968 <__asan_cplus_demangle_type@@Base>
   26d14:	mov	x2, x0
   26d18:	mov	x3, #0x0                   	// #0
   26d1c:	mov	w1, #0x23                  	// #35
   26d20:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26d24:	add	x3, x3, #0x1
   26d28:	str	x3, [x19, #24]
   26d2c:	mov	x0, x19
   26d30:	bl	26968 <__asan_cplus_demangle_type@@Base>
   26d34:	mov	x2, x0
   26d38:	mov	x3, #0x0                   	// #0
   26d3c:	mov	w1, #0x25                  	// #37
   26d40:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26d44:	add	x3, x3, #0x1
   26d48:	str	x3, [x19, #24]
   26d4c:	mov	x0, x19
   26d50:	bl	26968 <__asan_cplus_demangle_type@@Base>
   26d54:	mov	x2, x0
   26d58:	mov	x3, #0x0                   	// #0
   26d5c:	mov	w1, #0x26                  	// #38
   26d60:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26d64:	add	x3, x3, #0x1
   26d68:	str	x3, [x19, #24]
   26d6c:	mov	x0, x19
   26d70:	bl	26558 <__asan_cplus_demangle_fill_name@@Base+0x68>
   26d74:	mov	x20, x0
   26d78:	ldr	x0, [x19, #24]
   26d7c:	str	x20, [sp, #72]
   26d80:	ldrb	w0, [x0]
   26d84:	cmp	w0, #0x49
   26d88:	b.ne	26dac <__asan_cplus_demangle_type@@Base+0x444>  // b.any
   26d8c:	mov	x0, x19
   26d90:	bl	28b24 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   26d94:	mov	x2, x20
   26d98:	mov	x3, x0
   26d9c:	mov	w1, #0x4                   	// #4
   26da0:	mov	x0, x19
   26da4:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   26da8:	str	x0, [sp, #72]
   26dac:	mov	x0, x19
   26db0:	bl	26968 <__asan_cplus_demangle_type@@Base>
   26db4:	mov	w1, #0x21                  	// #33
   26db8:	mov	x2, x0
   26dbc:	ldr	x3, [sp, #72]
   26dc0:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26dc4:	add	x0, x3, #0x1
   26dc8:	str	x0, [x19, #24]
   26dcc:	ldrb	w0, [x3, #1]
   26dd0:	cbz	w0, 269a8 <__asan_cplus_demangle_type@@Base+0x40>
   26dd4:	add	x0, x3, #0x2
   26dd8:	str	x0, [x19, #24]
   26ddc:	ldrb	w0, [x3, #1]
   26de0:	cmp	w0, #0x46
   26de4:	b.eq	26f3c <__asan_cplus_demangle_type@@Base+0x5d4>  // b.none
   26de8:	sub	w0, w0, #0x54
   26dec:	and	w1, w0, #0xff
   26df0:	cmp	w1, #0x22
   26df4:	b.hi	269a8 <__asan_cplus_demangle_type@@Base+0x40>  // b.pmore
   26df8:	cmp	w0, #0x22
   26dfc:	b.hi	269a8 <__asan_cplus_demangle_type@@Base+0x40>  // b.pmore
   26e00:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   26e04:	add	x1, x1, #0x1c8
   26e08:	ldrh	w0, [x1, w0, uxtw #1]
   26e0c:	adr	x1, 26e18 <__asan_cplus_demangle_type@@Base+0x4b0>
   26e10:	add	x0, x1, w0, sxth #2
   26e14:	br	x0
   26e18:	mov	x0, x19
   26e1c:	bl	289a8 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   26e20:	mov	x3, #0x0                   	// #0
   26e24:	mov	x2, x0
   26e28:	mov	w1, #0x43                  	// #67
   26e2c:	mov	x0, x19
   26e30:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   26e34:	str	x0, [sp, #72]
   26e38:	cbz	x0, 26a0c <__asan_cplus_demangle_type@@Base+0xa4>
   26e3c:	ldr	x0, [x19, #24]
   26e40:	ldrb	w1, [x0]
   26e44:	cbnz	w1, 26e50 <__asan_cplus_demangle_type@@Base+0x4e8>
   26e48:	str	xzr, [sp, #72]
   26e4c:	b	26a0c <__asan_cplus_demangle_type@@Base+0xa4>
   26e50:	add	x1, x0, #0x1
   26e54:	str	x1, [x19, #24]
   26e58:	ldrb	w0, [x0]
   26e5c:	cmp	w0, #0x45
   26e60:	b.ne	26e48 <__asan_cplus_demangle_type@@Base+0x4e0>  // b.any
   26e64:	b	26a0c <__asan_cplus_demangle_type@@Base+0xa4>
   26e68:	mov	x0, x19
   26e6c:	bl	26968 <__asan_cplus_demangle_type@@Base>
   26e70:	mov	x3, #0x0                   	// #0
   26e74:	mov	x2, x0
   26e78:	mov	w1, #0x4b                  	// #75
   26e7c:	b	26ab4 <__asan_cplus_demangle_type@@Base+0x14c>
   26e80:	adrp	x1, 2e000 <__asan_backtrace_vector_release@@Base+0x1b60>
   26e84:	add	x1, x1, #0xdd8
   26e88:	mov	w2, #0x4                   	// #4
   26e8c:	mov	x0, x19
   26e90:	bl	2651c <__asan_cplus_demangle_fill_name@@Base+0x2c>
   26e94:	str	x0, [sp, #72]
   26e98:	b	26a90 <__asan_cplus_demangle_type@@Base+0x128>
   26e9c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   26ea0:	mov	w2, #0xe                   	// #14
   26ea4:	add	x1, x1, #0x4ff
   26ea8:	b	26e8c <__asan_cplus_demangle_type@@Base+0x524>
   26eac:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26eb0:	ldr	x1, [x1, #3736]
   26eb4:	add	x1, x1, #0x340
   26eb8:	mov	x0, x19
   26ebc:	bl	23c34 <__asan_backtrace_create_state@@Base+0x154>
   26ec0:	str	x0, [sp, #72]
   26ec4:	ldr	x1, [x0, #8]
   26ec8:	ldr	w0, [x19, #72]
   26ecc:	ldr	w1, [x1, #8]
   26ed0:	add	w0, w0, w1
   26ed4:	str	w0, [x19, #72]
   26ed8:	b	26a90 <__asan_cplus_demangle_type@@Base+0x128>
   26edc:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26ee0:	ldr	x1, [x1, #3736]
   26ee4:	add	x1, x1, #0x360
   26ee8:	b	26eb8 <__asan_cplus_demangle_type@@Base+0x550>
   26eec:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26ef0:	ldr	x1, [x1, #3736]
   26ef4:	add	x1, x1, #0x380
   26ef8:	b	26eb8 <__asan_cplus_demangle_type@@Base+0x550>
   26efc:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26f00:	ldr	x1, [x1, #3736]
   26f04:	add	x1, x1, #0x3a0
   26f08:	b	26eb8 <__asan_cplus_demangle_type@@Base+0x550>
   26f0c:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26f10:	ldr	x1, [x1, #3736]
   26f14:	add	x1, x1, #0x3c0
   26f18:	b	26eb8 <__asan_cplus_demangle_type@@Base+0x550>
   26f1c:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26f20:	ldr	x1, [x1, #3736]
   26f24:	add	x1, x1, #0x3e0
   26f28:	b	26eb8 <__asan_cplus_demangle_type@@Base+0x550>
   26f2c:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   26f30:	ldr	x1, [x1, #3736]
   26f34:	add	x1, x1, #0x400
   26f38:	b	26eb8 <__asan_cplus_demangle_type@@Base+0x550>
   26f3c:	mov	x0, x19
   26f40:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   26f44:	mov	w1, #0x2c                  	// #44
   26f48:	str	x0, [sp, #72]
   26f4c:	str	w1, [x0]
   26f50:	ldr	x1, [x19, #24]
   26f54:	ldrb	w1, [x1]
   26f58:	sub	w1, w1, #0x30
   26f5c:	and	w1, w1, #0xff
   26f60:	cmp	w1, #0x9
   26f64:	cset	w2, ls  // ls = plast
   26f68:	strh	w2, [x0, #16]
   26f6c:	b.hi	26f78 <__asan_cplus_demangle_type@@Base+0x610>  // b.pmore
   26f70:	add	x0, x19, #0x18
   26f74:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   26f78:	ldr	x20, [sp, #72]
   26f7c:	mov	x0, x19
   26f80:	bl	26968 <__asan_cplus_demangle_type@@Base>
   26f84:	str	x0, [x20, #8]
   26f88:	ldr	x0, [sp, #72]
   26f8c:	ldr	x0, [x0, #8]
   26f90:	cbz	x0, 269a8 <__asan_cplus_demangle_type@@Base+0x40>
   26f94:	add	x0, x19, #0x18
   26f98:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   26f9c:	ldr	x1, [x19, #24]
   26fa0:	ldrb	w0, [x1]
   26fa4:	cbz	w0, 26fb4 <__asan_cplus_demangle_type@@Base+0x64c>
   26fa8:	add	x0, x1, #0x1
   26fac:	str	x0, [x19, #24]
   26fb0:	ldrb	w0, [x1]
   26fb4:	cmp	w0, #0x73
   26fb8:	ldr	x0, [sp, #72]
   26fbc:	cset	w1, eq  // eq = none
   26fc0:	strh	w1, [x0, #18]
   26fc4:	b	26a90 <__asan_cplus_demangle_type@@Base+0x128>
   26fc8:	ldrb	w0, [x3, #2]
   26fcc:	cmp	w0, #0x5f
   26fd0:	b.ne	2702c <__asan_cplus_demangle_type@@Base+0x6c4>  // b.any
   26fd4:	add	x3, x3, #0x3
   26fd8:	str	x3, [x19, #24]
   26fdc:	mov	x0, x19
   26fe0:	bl	289a8 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   26fe4:	mov	x20, x0
   26fe8:	cbz	x0, 27024 <__asan_cplus_demangle_type@@Base+0x6bc>
   26fec:	ldr	x0, [x19, #24]
   26ff0:	ldrb	w1, [x0]
   26ff4:	cmp	w1, #0x5f
   26ff8:	b.ne	27038 <__asan_cplus_demangle_type@@Base+0x6d0>  // b.any
   26ffc:	add	x0, x0, #0x1
   27000:	str	x0, [x19, #24]
   27004:	mov	x0, x19
   27008:	bl	67c0 <__asan_cplus_demangle_type@plt>
   2700c:	mov	x3, x0
   27010:	mov	x2, x20
   27014:	mov	x0, x19
   27018:	mov	w1, #0x2d                  	// #45
   2701c:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   27020:	mov	x20, x0
   27024:	str	x20, [sp, #72]
   27028:	b	26a0c <__asan_cplus_demangle_type@@Base+0xa4>
   2702c:	mov	x0, x19
   27030:	bl	23f94 <__asan_backtrace_create_state@@Base+0x4b4>
   27034:	b	26fe4 <__asan_cplus_demangle_type@@Base+0x67c>
   27038:	mov	x20, #0x0                   	// #0
   2703c:	b	27024 <__asan_cplus_demangle_type@@Base+0x6bc>
   27040:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27044:	ldr	x1, [x1, #3736]
   27048:	add	x1, x1, #0x420
   2704c:	b	26eb8 <__asan_cplus_demangle_type@@Base+0x550>
   27050:	stp	x29, x30, [sp, #-64]!
   27054:	mov	x29, sp
   27058:	stp	x19, x20, [sp, #16]
   2705c:	mov	x19, x0
   27060:	add	x20, sp, #0x38
   27064:	str	x21, [sp, #32]
   27068:	mov	w21, #0x4f                  	// #79
   2706c:	str	xzr, [sp, #56]
   27070:	ldr	x1, [x19, #24]
   27074:	ldrb	w0, [x1]
   27078:	cmp	w0, #0x45
   2707c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   27080:	b.eq	270e8 <__asan_cplus_demangle_type@@Base+0x780>  // b.none
   27084:	cmp	w0, #0x2e
   27088:	b.eq	270e8 <__asan_cplus_demangle_type@@Base+0x780>  // b.none
   2708c:	cmp	w0, #0x52
   27090:	ccmp	w0, w21, #0x4, ne  // ne = any
   27094:	b.ne	270a4 <__asan_cplus_demangle_type@@Base+0x73c>  // b.any
   27098:	ldrb	w0, [x1, #1]
   2709c:	cmp	w0, #0x45
   270a0:	b.eq	270e8 <__asan_cplus_demangle_type@@Base+0x780>  // b.none
   270a4:	mov	x0, x19
   270a8:	bl	67c0 <__asan_cplus_demangle_type@plt>
   270ac:	mov	x2, x0
   270b0:	cbnz	x0, 270c8 <__asan_cplus_demangle_type@@Base+0x760>
   270b4:	mov	x0, #0x0                   	// #0
   270b8:	ldp	x19, x20, [sp, #16]
   270bc:	ldr	x21, [sp, #32]
   270c0:	ldp	x29, x30, [sp], #64
   270c4:	ret
   270c8:	mov	x0, x19
   270cc:	mov	x3, #0x0                   	// #0
   270d0:	mov	w1, #0x2e                  	// #46
   270d4:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   270d8:	str	x0, [x20]
   270dc:	cbz	x0, 270b4 <__asan_cplus_demangle_type@@Base+0x74c>
   270e0:	add	x20, x0, #0x10
   270e4:	b	27070 <__asan_cplus_demangle_type@@Base+0x708>
   270e8:	ldr	x0, [sp, #56]
   270ec:	cbz	x0, 270b4 <__asan_cplus_demangle_type@@Base+0x74c>
   270f0:	ldr	x1, [x0, #16]
   270f4:	cbnz	x1, 270b8 <__asan_cplus_demangle_type@@Base+0x750>
   270f8:	ldr	x1, [x0, #8]
   270fc:	ldr	w2, [x1]
   27100:	cmp	w2, #0x27
   27104:	b.ne	270b8 <__asan_cplus_demangle_type@@Base+0x750>  // b.any
   27108:	ldr	x2, [x1, #8]
   2710c:	ldr	w1, [x2, #28]
   27110:	cmp	w1, #0x9
   27114:	b.ne	270b8 <__asan_cplus_demangle_type@@Base+0x750>  // b.any
   27118:	ldr	w2, [x2, #8]
   2711c:	ldr	w1, [x19, #72]
   27120:	sub	w1, w1, w2
   27124:	str	w1, [x19, #72]
   27128:	str	xzr, [x0, #8]
   2712c:	b	270b8 <__asan_cplus_demangle_type@@Base+0x750>
   27130:	stp	x29, x30, [sp, #-48]!
   27134:	mov	x29, sp
   27138:	stp	x19, x20, [sp, #16]
   2713c:	mov	x19, x0
   27140:	ldr	x0, [x0, #24]
   27144:	str	x21, [sp, #32]
   27148:	ldrb	w2, [x0]
   2714c:	cbz	w2, 2715c <__asan_cplus_demangle_type@@Base+0x7f4>
   27150:	add	x1, x0, #0x1
   27154:	str	x1, [x19, #24]
   27158:	ldrb	w2, [x0]
   2715c:	ldr	x0, [x19, #24]
   27160:	ldrb	w3, [x0]
   27164:	cbz	w3, 27224 <__asan_cplus_demangle_type@@Base+0x8bc>
   27168:	add	x1, x0, #0x1
   2716c:	str	x1, [x19, #24]
   27170:	cmp	w2, #0x76
   27174:	ldrb	w3, [x0]
   27178:	b.ne	271cc <__asan_cplus_demangle_type@@Base+0x864>  // b.any
   2717c:	sub	w21, w3, #0x30
   27180:	and	w0, w21, #0xff
   27184:	cmp	w0, #0x9
   27188:	b.hi	27224 <__asan_cplus_demangle_type@@Base+0x8bc>  // b.pmore
   2718c:	mov	x0, x19
   27190:	bl	26558 <__asan_cplus_demangle_fill_name@@Base+0x68>
   27194:	mov	x4, x0
   27198:	mov	x0, x19
   2719c:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   271a0:	mov	x20, x0
   271a4:	mov	x2, x4
   271a8:	mov	w1, w21
   271ac:	bl	6b80 <__asan_cplus_demangle_fill_extended_operator@plt>
   271b0:	cbnz	w0, 271b8 <__asan_cplus_demangle_type@@Base+0x850>
   271b4:	mov	x20, #0x0                   	// #0
   271b8:	mov	x0, x20
   271bc:	ldp	x19, x20, [sp, #16]
   271c0:	ldr	x21, [sp, #32]
   271c4:	ldp	x29, x30, [sp], #48
   271c8:	ret
   271cc:	cmp	w2, #0x63
   271d0:	mov	w0, #0x76                  	// #118
   271d4:	ccmp	w3, w0, #0x0, eq  // eq = none
   271d8:	b.ne	27224 <__asan_cplus_demangle_type@@Base+0x8bc>  // b.any
   271dc:	ldp	w0, w21, [x19, #76]
   271e0:	cmp	w0, #0x0
   271e4:	cset	w0, eq  // eq = none
   271e8:	str	w0, [x19, #80]
   271ec:	mov	x0, x19
   271f0:	bl	67c0 <__asan_cplus_demangle_type@plt>
   271f4:	mov	x2, x0
   271f8:	ldr	w0, [x19, #80]
   271fc:	mov	x3, #0x0                   	// #0
   27200:	cbz	w0, 2721c <__asan_cplus_demangle_type@@Base+0x8b4>
   27204:	mov	w1, #0x35                  	// #53
   27208:	mov	x0, x19
   2720c:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   27210:	mov	x20, x0
   27214:	str	w21, [x19, #80]
   27218:	b	271b8 <__asan_cplus_demangle_type@@Base+0x850>
   2721c:	mov	w1, #0x34                  	// #52
   27220:	b	27208 <__asan_cplus_demangle_type@@Base+0x8a0>
   27224:	adrp	x1, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   27228:	mov	w5, #0x43                  	// #67
   2722c:	mov	w4, #0x0                   	// #0
   27230:	mov	w7, #0x2                   	// #2
   27234:	ldr	x1, [x1, #3760]
   27238:	mov	w8, #0x18                  	// #24
   2723c:	sub	w0, w5, w4
   27240:	sdiv	w0, w0, w7
   27244:	add	w0, w0, w4
   27248:	smull	x6, w0, w8
   2724c:	add	x9, x6, x1
   27250:	ldr	x6, [x6, x1]
   27254:	ldrb	w10, [x6]
   27258:	cmp	w10, w2
   2725c:	b.ne	2728c <__asan_cplus_demangle_type@@Base+0x924>  // b.any
   27260:	ldrb	w6, [x6, #1]
   27264:	cmp	w6, w3
   27268:	b.ne	2728c <__asan_cplus_demangle_type@@Base+0x924>  // b.any
   2726c:	mov	x0, x19
   27270:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   27274:	mov	x20, x0
   27278:	cbz	x0, 271b8 <__asan_cplus_demangle_type@@Base+0x850>
   2727c:	mov	w0, #0x32                  	// #50
   27280:	str	w0, [x20]
   27284:	str	x9, [x20, #8]
   27288:	b	271b8 <__asan_cplus_demangle_type@@Base+0x850>
   2728c:	b.hi	27298 <__asan_cplus_demangle_type@@Base+0x930>  // b.pmore
   27290:	add	w4, w0, #0x1
   27294:	mov	w0, w5
   27298:	cmp	w4, w0
   2729c:	b.eq	271b4 <__asan_cplus_demangle_type@@Base+0x84c>  // b.none
   272a0:	mov	w5, w0
   272a4:	b	2723c <__asan_cplus_demangle_type@@Base+0x8d4>
   272a8:	stp	x29, x30, [sp, #-48]!
   272ac:	mov	x29, sp
   272b0:	ldr	x3, [x0, #24]
   272b4:	stp	x19, x20, [sp, #16]
   272b8:	mov	x20, x0
   272bc:	str	x21, [sp, #32]
   272c0:	ldrb	w1, [x3]
   272c4:	sub	w2, w1, #0x30
   272c8:	and	w2, w2, #0xff
   272cc:	cmp	w2, #0x9
   272d0:	b.hi	27304 <__asan_cplus_demangle_type@@Base+0x99c>  // b.pmore
   272d4:	bl	26558 <__asan_cplus_demangle_fill_name@@Base+0x68>
   272d8:	mov	x19, x0
   272dc:	ldr	x0, [x20, #24]
   272e0:	ldrb	w0, [x0]
   272e4:	cmp	w0, #0x42
   272e8:	b.ne	274f4 <__asan_cplus_demangle_type@@Base+0xb8c>  // b.any
   272ec:	mov	x1, x19
   272f0:	mov	x0, x20
   272f4:	ldp	x19, x20, [sp, #16]
   272f8:	ldr	x21, [sp, #32]
   272fc:	ldp	x29, x30, [sp], #48
   27300:	b	26660 <__asan_cplus_demangle_fill_name@@Base+0x170>
   27304:	sub	w2, w1, #0x61
   27308:	and	w2, w2, #0xff
   2730c:	cmp	w2, #0x19
   27310:	b.hi	27398 <__asan_cplus_demangle_type@@Base+0xa30>  // b.pmore
   27314:	cmp	w1, #0x6f
   27318:	b.ne	27330 <__asan_cplus_demangle_type@@Base+0x9c8>  // b.any
   2731c:	ldrb	w0, [x3, #1]
   27320:	cmp	w0, #0x6e
   27324:	b.ne	27330 <__asan_cplus_demangle_type@@Base+0x9c8>  // b.any
   27328:	add	x3, x3, #0x2
   2732c:	str	x3, [x20, #24]
   27330:	mov	x0, x20
   27334:	bl	27130 <__asan_cplus_demangle_type@@Base+0x7c8>
   27338:	mov	x19, x0
   2733c:	cbz	x0, 273e8 <__asan_cplus_demangle_type@@Base+0xa80>
   27340:	ldr	w0, [x0]
   27344:	cmp	w0, #0x32
   27348:	b.ne	272dc <__asan_cplus_demangle_type@@Base+0x974>  // b.any
   2734c:	ldr	x2, [x19, #8]
   27350:	ldr	w0, [x20, #72]
   27354:	ldr	w1, [x2, #16]
   27358:	add	w0, w0, #0x7
   2735c:	add	w0, w0, w1
   27360:	str	w0, [x20, #72]
   27364:	ldr	x0, [x2]
   27368:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2736c:	add	x1, x1, #0x50e
   27370:	bl	6b90 <__asan_internal_strcmp@plt>
   27374:	cbnz	w0, 272dc <__asan_cplus_demangle_type@@Base+0x974>
   27378:	mov	x0, x20
   2737c:	bl	26558 <__asan_cplus_demangle_fill_name@@Base+0x68>
   27380:	mov	x2, x19
   27384:	mov	x3, x0
   27388:	mov	w1, #0x37                  	// #55
   2738c:	mov	x0, x20
   27390:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   27394:	b	272d8 <__asan_cplus_demangle_type@@Base+0x970>
   27398:	sub	w2, w1, #0x43
   2739c:	and	w2, w2, #0xff
   273a0:	cmp	w2, #0x1
   273a4:	b.hi	274d4 <__asan_cplus_demangle_type@@Base+0xb6c>  // b.pmore
   273a8:	ldr	x5, [x0, #64]
   273ac:	cbz	x5, 273d4 <__asan_cplus_demangle_type@@Base+0xa6c>
   273b0:	ldr	w0, [x5]
   273b4:	cbnz	w0, 273cc <__asan_cplus_demangle_type@@Base+0xa64>
   273b8:	ldr	w1, [x5, #16]
   273bc:	ldr	w0, [x20, #72]
   273c0:	add	w0, w0, w1
   273c4:	str	w0, [x20, #72]
   273c8:	b	273d4 <__asan_cplus_demangle_type@@Base+0xa6c>
   273cc:	cmp	w0, #0x18
   273d0:	b.eq	273b8 <__asan_cplus_demangle_type@@Base+0xa50>  // b.none
   273d4:	ldrb	w0, [x3]
   273d8:	cmp	w0, #0x43
   273dc:	b.eq	273f0 <__asan_cplus_demangle_type@@Base+0xa88>  // b.none
   273e0:	cmp	w0, #0x44
   273e4:	b.eq	27464 <__asan_cplus_demangle_type@@Base+0xafc>  // b.none
   273e8:	mov	x19, #0x0                   	// #0
   273ec:	b	272dc <__asan_cplus_demangle_type@@Base+0x974>
   273f0:	ldrb	w0, [x3, #1]
   273f4:	cmp	w0, #0x49
   273f8:	b.ne	2745c <__asan_cplus_demangle_type@@Base+0xaf4>  // b.any
   273fc:	add	x3, x3, #0x1
   27400:	str	x3, [x20, #24]
   27404:	mov	w3, #0x1                   	// #1
   27408:	ldr	x0, [x20, #24]
   2740c:	ldrb	w1, [x0, #1]
   27410:	sub	w2, w1, #0x31
   27414:	and	w2, w2, #0xff
   27418:	cmp	w2, #0x4
   2741c:	b.hi	273e8 <__asan_cplus_demangle_type@@Base+0xa80>  // b.pmore
   27420:	add	x0, x0, #0x2
   27424:	str	x0, [x20, #24]
   27428:	sub	w21, w1, #0x30
   2742c:	cbz	w3, 27438 <__asan_cplus_demangle_type@@Base+0xad0>
   27430:	mov	x0, x20
   27434:	bl	67c0 <__asan_cplus_demangle_type@plt>
   27438:	ldr	x4, [x20, #64]
   2743c:	mov	x0, x20
   27440:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   27444:	mov	x19, x0
   27448:	mov	x2, x4
   2744c:	mov	w1, w21
   27450:	bl	6bf0 <__asan_cplus_demangle_fill_ctor@plt>
   27454:	cbnz	w0, 272dc <__asan_cplus_demangle_type@@Base+0x974>
   27458:	b	273e8 <__asan_cplus_demangle_type@@Base+0xa80>
   2745c:	mov	w3, #0x0                   	// #0
   27460:	b	27408 <__asan_cplus_demangle_type@@Base+0xaa0>
   27464:	ldrb	w0, [x3, #1]
   27468:	sub	w0, w0, #0x30
   2746c:	cmp	w0, #0x5
   27470:	b.hi	273e8 <__asan_cplus_demangle_type@@Base+0xa80>  // b.pmore
   27474:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   27478:	add	x1, x1, #0x210
   2747c:	ldrb	w0, [x1, w0, uxtw]
   27480:	adr	x1, 2748c <__asan_cplus_demangle_type@@Base+0xb24>
   27484:	add	x0, x1, w0, sxtb #2
   27488:	br	x0
   2748c:	mov	w4, #0x2                   	// #2
   27490:	add	x3, x3, #0x2
   27494:	str	x3, [x20, #24]
   27498:	mov	x0, x20
   2749c:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   274a0:	mov	x19, x0
   274a4:	mov	x2, x5
   274a8:	mov	w1, w4
   274ac:	bl	6d90 <__asan_cplus_demangle_fill_dtor@plt>
   274b0:	b	27454 <__asan_cplus_demangle_type@@Base+0xaec>
   274b4:	mov	w4, #0x3                   	// #3
   274b8:	b	27490 <__asan_cplus_demangle_type@@Base+0xb28>
   274bc:	mov	w4, #0x4                   	// #4
   274c0:	b	27490 <__asan_cplus_demangle_type@@Base+0xb28>
   274c4:	mov	w4, #0x5                   	// #5
   274c8:	b	27490 <__asan_cplus_demangle_type@@Base+0xb28>
   274cc:	mov	w4, #0x1                   	// #1
   274d0:	b	27490 <__asan_cplus_demangle_type@@Base+0xb28>
   274d4:	cmp	w1, #0x4c
   274d8:	b.ne	27518 <__asan_cplus_demangle_type@@Base+0xbb0>  // b.any
   274dc:	add	x3, x3, #0x1
   274e0:	str	x3, [x0, #24]
   274e4:	bl	26558 <__asan_cplus_demangle_fill_name@@Base+0x68>
   274e8:	mov	x19, x0
   274ec:	cbnz	x0, 27508 <__asan_cplus_demangle_type@@Base+0xba0>
   274f0:	mov	x19, #0x0                   	// #0
   274f4:	mov	x0, x19
   274f8:	ldp	x19, x20, [sp, #16]
   274fc:	ldr	x21, [sp, #32]
   27500:	ldp	x29, x30, [sp], #48
   27504:	ret
   27508:	mov	x0, x20
   2750c:	bl	241f4 <__asan_backtrace_create_state@@Base+0x714>
   27510:	cbnz	w0, 272dc <__asan_cplus_demangle_type@@Base+0x974>
   27514:	b	274f0 <__asan_cplus_demangle_type@@Base+0xb88>
   27518:	cmp	w1, #0x55
   2751c:	b.ne	274f0 <__asan_cplus_demangle_type@@Base+0xb88>  // b.any
   27520:	ldrb	w1, [x3, #1]
   27524:	cmp	w1, #0x6c
   27528:	b.eq	2757c <__asan_cplus_demangle_type@@Base+0xc14>  // b.none
   2752c:	cmp	w1, #0x74
   27530:	b.ne	274f0 <__asan_cplus_demangle_type@@Base+0xb88>  // b.any
   27534:	add	x1, x3, #0x1
   27538:	str	x1, [x0, #24]
   2753c:	ldrb	w1, [x3, #1]
   27540:	cmp	w1, #0x74
   27544:	b.ne	273e8 <__asan_cplus_demangle_type@@Base+0xa80>  // b.any
   27548:	add	x3, x3, #0x2
   2754c:	str	x3, [x0, #24]
   27550:	bl	23fd0 <__asan_backtrace_create_state@@Base+0x4f0>
   27554:	sxtw	x4, w0
   27558:	tbnz	w4, #31, 273e8 <__asan_cplus_demangle_type@@Base+0xa80>
   2755c:	mov	x0, x20
   27560:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   27564:	mov	x19, x0
   27568:	cbz	x0, 275ec <__asan_cplus_demangle_type@@Base+0xc84>
   2756c:	mov	w0, #0x48                  	// #72
   27570:	str	w0, [x19]
   27574:	str	x4, [x19, #8]
   27578:	b	275ec <__asan_cplus_demangle_type@@Base+0xc84>
   2757c:	add	x1, x3, #0x1
   27580:	str	x1, [x0, #24]
   27584:	ldrb	w1, [x3, #1]
   27588:	cmp	w1, #0x6c
   2758c:	b.ne	273e8 <__asan_cplus_demangle_type@@Base+0xa80>  // b.any
   27590:	add	x3, x3, #0x2
   27594:	str	x3, [x0, #24]
   27598:	bl	27050 <__asan_cplus_demangle_type@@Base+0x6e8>
   2759c:	mov	x9, x0
   275a0:	cbz	x0, 273e8 <__asan_cplus_demangle_type@@Base+0xa80>
   275a4:	ldr	x0, [x20, #24]
   275a8:	ldrb	w1, [x0]
   275ac:	cmp	w1, #0x45
   275b0:	b.ne	273e8 <__asan_cplus_demangle_type@@Base+0xa80>  // b.any
   275b4:	add	x0, x0, #0x1
   275b8:	str	x0, [x20, #24]
   275bc:	mov	x0, x20
   275c0:	bl	23fd0 <__asan_backtrace_create_state@@Base+0x4f0>
   275c4:	mov	w4, w0
   275c8:	tbnz	w0, #31, 273e8 <__asan_cplus_demangle_type@@Base+0xa80>
   275cc:	mov	x0, x20
   275d0:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   275d4:	mov	x19, x0
   275d8:	cbz	x0, 275ec <__asan_cplus_demangle_type@@Base+0xc84>
   275dc:	mov	w0, #0x46                  	// #70
   275e0:	str	w0, [x19]
   275e4:	str	x9, [x19, #8]
   275e8:	str	w4, [x19, #16]
   275ec:	mov	x1, x19
   275f0:	mov	x0, x20
   275f4:	bl	23cb4 <__asan_backtrace_create_state@@Base+0x1d4>
   275f8:	b	27454 <__asan_cplus_demangle_type@@Base+0xaec>
   275fc:	stp	x29, x30, [sp, #-32]!
   27600:	mov	x29, sp
   27604:	stp	x19, x20, [sp, #16]
   27608:	mov	x19, x0
   2760c:	ldr	x0, [x0, #24]
   27610:	ldrb	w2, [x0]
   27614:	cmp	w2, #0x4a
   27618:	b.ne	27644 <__asan_cplus_demangle_type@@Base+0xcdc>  // b.any
   2761c:	add	x0, x0, #0x1
   27620:	str	x0, [x19, #24]
   27624:	mov	x0, x19
   27628:	bl	67c0 <__asan_cplus_demangle_type@plt>
   2762c:	mov	x20, x0
   27630:	cbnz	x0, 2764c <__asan_cplus_demangle_type@@Base+0xce4>
   27634:	mov	x0, #0x0                   	// #0
   27638:	ldp	x19, x20, [sp, #16]
   2763c:	ldp	x29, x30, [sp], #32
   27640:	ret
   27644:	cbnz	w1, 27624 <__asan_cplus_demangle_type@@Base+0xcbc>
   27648:	mov	x20, #0x0                   	// #0
   2764c:	mov	x0, x19
   27650:	bl	27050 <__asan_cplus_demangle_type@@Base+0x6e8>
   27654:	mov	x3, x0
   27658:	cbz	x0, 27634 <__asan_cplus_demangle_type@@Base+0xccc>
   2765c:	mov	x2, x20
   27660:	mov	x0, x19
   27664:	ldp	x19, x20, [sp, #16]
   27668:	mov	w1, #0x29                  	// #41
   2766c:	ldp	x29, x30, [sp], #32
   27670:	b	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   27674:	stp	x29, x30, [sp, #-32]!
   27678:	mov	x29, sp
   2767c:	str	x19, [sp, #16]
   27680:	mov	x19, x0
   27684:	ldr	w0, [x0, #16]
   27688:	tbnz	w0, #18, 276a0 <__asan_cplus_demangle_type@@Base+0xd38>
   2768c:	ldr	w0, [x19, #84]
   27690:	cmp	w0, #0x800
   27694:	b.hi	27724 <__asan_cplus_demangle_type@@Base+0xdbc>  // b.pmore
   27698:	add	w0, w0, #0x1
   2769c:	str	w0, [x19, #84]
   276a0:	ldr	x0, [x19, #24]
   276a4:	ldrb	w1, [x0]
   276a8:	cmp	w1, #0x46
   276ac:	b.eq	276d4 <__asan_cplus_demangle_type@@Base+0xd6c>  // b.none
   276b0:	mov	x0, #0x0                   	// #0
   276b4:	ldr	w1, [x19, #16]
   276b8:	tbnz	w1, #18, 276c8 <__asan_cplus_demangle_type@@Base+0xd60>
   276bc:	ldr	w1, [x19, #84]
   276c0:	sub	w1, w1, #0x1
   276c4:	str	w1, [x19, #84]
   276c8:	ldr	x19, [sp, #16]
   276cc:	ldp	x29, x30, [sp], #32
   276d0:	ret
   276d4:	add	x1, x0, #0x1
   276d8:	str	x1, [x19, #24]
   276dc:	add	x0, x0, #0x2
   276e0:	ldurb	w2, [x0, #-1]
   276e4:	cmp	w2, #0x59
   276e8:	csel	x0, x0, x1, eq  // eq = none
   276ec:	str	x0, [x19, #24]
   276f0:	mov	w1, #0x1                   	// #1
   276f4:	mov	x0, x19
   276f8:	bl	275fc <__asan_cplus_demangle_type@@Base+0xc94>
   276fc:	mov	x1, x0
   27700:	mov	x0, x19
   27704:	bl	23c5c <__asan_backtrace_create_state@@Base+0x17c>
   27708:	ldr	x1, [x19, #24]
   2770c:	ldrb	w2, [x1]
   27710:	cmp	w2, #0x45
   27714:	b.ne	276b0 <__asan_cplus_demangle_type@@Base+0xd48>  // b.any
   27718:	add	x1, x1, #0x1
   2771c:	str	x1, [x19, #24]
   27720:	b	276b4 <__asan_cplus_demangle_type@@Base+0xd4c>
   27724:	mov	x0, #0x0                   	// #0
   27728:	b	276c8 <__asan_cplus_demangle_type@@Base+0xd60>
   2772c:	stp	x29, x30, [sp, #-96]!
   27730:	mov	x29, sp
   27734:	ldr	x1, [x0, #24]
   27738:	stp	x19, x20, [sp, #16]
   2773c:	stp	x21, x22, [sp, #32]
   27740:	stp	x23, x24, [sp, #48]
   27744:	str	x25, [sp, #64]
   27748:	ldrb	w2, [x1]
   2774c:	cmp	w2, #0x55
   27750:	b.eq	27ab8 <__asan_cplus_demangle_type@@Base+0x1150>  // b.none
   27754:	mov	x19, x0
   27758:	b.hi	2779c <__asan_cplus_demangle_type@@Base+0xe34>  // b.pmore
   2775c:	cmp	w2, #0x4e
   27760:	b.eq	27840 <__asan_cplus_demangle_type@@Base+0xed8>  // b.none
   27764:	cmp	w2, #0x53
   27768:	b.eq	27ac4 <__asan_cplus_demangle_type@@Base+0x115c>  // b.none
   2776c:	mov	x0, x19
   27770:	bl	272a8 <__asan_cplus_demangle_type@@Base+0x940>
   27774:	mov	x20, x0
   27778:	ldr	x0, [x19, #24]
   2777c:	ldrb	w0, [x0]
   27780:	cmp	w0, #0x49
   27784:	b.ne	27a0c <__asan_cplus_demangle_type@@Base+0x10a4>  // b.any
   27788:	mov	x1, x20
   2778c:	mov	x0, x19
   27790:	bl	23cb4 <__asan_backtrace_create_state@@Base+0x1d4>
   27794:	cbnz	w0, 27af4 <__asan_cplus_demangle_type@@Base+0x118c>
   27798:	b	2785c <__asan_cplus_demangle_type@@Base+0xef4>
   2779c:	cmp	w2, #0x5a
   277a0:	b.ne	2776c <__asan_cplus_demangle_type@@Base+0xe04>  // b.any
   277a4:	add	x1, x1, #0x1
   277a8:	str	x1, [x0, #24]
   277ac:	mov	w1, #0x0                   	// #0
   277b0:	bl	27b5c <__asan_cplus_demangle_type@@Base+0x11f4>
   277b4:	mov	x20, x0
   277b8:	cbz	x0, 2785c <__asan_cplus_demangle_type@@Base+0xef4>
   277bc:	ldr	x1, [x19, #24]
   277c0:	ldrb	w0, [x1]
   277c4:	cmp	w0, #0x45
   277c8:	b.ne	2785c <__asan_cplus_demangle_type@@Base+0xef4>  // b.any
   277cc:	add	x0, x1, #0x1
   277d0:	str	x0, [x19, #24]
   277d4:	ldrb	w0, [x1, #1]
   277d8:	cmp	w0, #0x73
   277dc:	b.ne	27a28 <__asan_cplus_demangle_type@@Base+0x10c0>  // b.any
   277e0:	add	x1, x1, #0x2
   277e4:	str	x1, [x19, #24]
   277e8:	mov	x0, x19
   277ec:	bl	241f4 <__asan_backtrace_create_state@@Base+0x714>
   277f0:	cbz	w0, 2785c <__asan_cplus_demangle_type@@Base+0xef4>
   277f4:	mov	x0, x19
   277f8:	mov	w2, #0xe                   	// #14
   277fc:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   27800:	add	x1, x1, #0x511
   27804:	bl	2651c <__asan_cplus_demangle_fill_name@@Base+0x2c>
   27808:	mov	x3, x0
   2780c:	ldr	w0, [x20]
   27810:	cmp	w0, #0x3
   27814:	b.ne	2782c <__asan_cplus_demangle_type@@Base+0xec4>  // b.any
   27818:	ldr	x0, [x20, #16]
   2781c:	ldr	w1, [x0]
   27820:	cmp	w1, #0x29
   27824:	b.ne	2782c <__asan_cplus_demangle_type@@Base+0xec4>  // b.any
   27828:	str	xzr, [x0, #8]
   2782c:	mov	x2, x20
   27830:	mov	w1, #0x2                   	// #2
   27834:	mov	x0, x19
   27838:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   2783c:	b	27abc <__asan_cplus_demangle_type@@Base+0x1154>
   27840:	add	x1, x1, #0x1
   27844:	str	x1, [x0, #24]
   27848:	mov	w2, #0x1                   	// #1
   2784c:	add	x1, sp, #0x58
   27850:	bl	28c04 <__asan_cplus_demangle_mangled_name@@Base+0xab0>
   27854:	mov	x21, x0
   27858:	cbnz	x0, 27864 <__asan_cplus_demangle_type@@Base+0xefc>
   2785c:	mov	x20, #0x0                   	// #0
   27860:	b	27a0c <__asan_cplus_demangle_type@@Base+0x10a4>
   27864:	mov	x24, #0x3ff                 	// #1023
   27868:	mov	x0, x19
   2786c:	mov	x1, #0x0                   	// #0
   27870:	movk	x24, #0x1008, lsl #16
   27874:	bl	23c5c <__asan_backtrace_create_state@@Base+0x17c>
   27878:	mov	x22, x0
   2787c:	mov	x25, #0x0                   	// #0
   27880:	mov	w23, #0x1                   	// #1
   27884:	movk	x24, #0x20, lsl #32
   27888:	ldr	x1, [x19, #24]
   2788c:	ldrb	w20, [x1]
   27890:	cbnz	w20, 2789c <__asan_cplus_demangle_type@@Base+0xf34>
   27894:	str	xzr, [x21]
   27898:	b	2785c <__asan_cplus_demangle_type@@Base+0xef4>
   2789c:	cmp	w20, #0x44
   278a0:	b.ne	278f4 <__asan_cplus_demangle_type@@Base+0xf8c>  // b.any
   278a4:	ldrb	w0, [x1, #1]
   278a8:	and	w0, w0, #0xffffffdf
   278ac:	and	w0, w0, #0xff
   278b0:	cmp	w0, #0x54
   278b4:	mov	x0, x19
   278b8:	b.ne	278ec <__asan_cplus_demangle_type@@Base+0xf84>  // b.any
   278bc:	bl	67c0 <__asan_cplus_demangle_type@plt>
   278c0:	mov	x4, x0
   278c4:	cbnz	x25, 27960 <__asan_cplus_demangle_type@@Base+0xff8>
   278c8:	ldr	x0, [x19, #24]
   278cc:	ldrb	w0, [x0]
   278d0:	cmp	w0, #0x45
   278d4:	b.eq	27948 <__asan_cplus_demangle_type@@Base+0xfe0>  // b.none
   278d8:	mov	x1, x4
   278dc:	mov	x0, x19
   278e0:	bl	23cb4 <__asan_backtrace_create_state@@Base+0x1d4>
   278e4:	cbnz	w0, 27948 <__asan_cplus_demangle_type@@Base+0xfe0>
   278e8:	b	27894 <__asan_cplus_demangle_type@@Base+0xf2c>
   278ec:	bl	272a8 <__asan_cplus_demangle_type@@Base+0x940>
   278f0:	b	278c0 <__asan_cplus_demangle_type@@Base+0xf58>
   278f4:	sub	w0, w20, #0x30
   278f8:	and	w2, w0, #0xff
   278fc:	cmp	w2, #0x26
   27900:	lsr	x0, x24, x0
   27904:	sub	w2, w20, #0x61
   27908:	mvn	x0, x0
   2790c:	and	w2, w2, #0xff
   27910:	and	w0, w0, #0x1
   27914:	csel	w0, w0, w23, cc  // cc = lo, ul, last
   27918:	cmp	w2, #0x19
   2791c:	cset	w2, ls  // ls = plast
   27920:	eor	w0, w0, #0x1
   27924:	orr	w0, w2, w0
   27928:	cbnz	w0, 27950 <__asan_cplus_demangle_type@@Base+0xfe8>
   2792c:	cmp	w20, #0x53
   27930:	b.ne	27968 <__asan_cplus_demangle_type@@Base+0x1000>  // b.any
   27934:	mov	x0, x19
   27938:	mov	w1, #0x1                   	// #1
   2793c:	bl	266d0 <__asan_cplus_demangle_fill_name@@Base+0x1e0>
   27940:	mov	x4, x0
   27944:	cbnz	x25, 27960 <__asan_cplus_demangle_type@@Base+0xff8>
   27948:	mov	x25, x4
   2794c:	b	27888 <__asan_cplus_demangle_type@@Base+0xf20>
   27950:	mov	x0, x19
   27954:	bl	272a8 <__asan_cplus_demangle_type@@Base+0x940>
   27958:	mov	x4, x0
   2795c:	cbz	x25, 27998 <__asan_cplus_demangle_type@@Base+0x1030>
   27960:	mov	w1, #0x1                   	// #1
   27964:	b	27984 <__asan_cplus_demangle_type@@Base+0x101c>
   27968:	cmp	w20, #0x49
   2796c:	b.ne	279a4 <__asan_cplus_demangle_type@@Base+0x103c>  // b.any
   27970:	cbz	x25, 27894 <__asan_cplus_demangle_type@@Base+0xf2c>
   27974:	mov	x0, x19
   27978:	bl	28b24 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   2797c:	mov	x4, x0
   27980:	mov	w1, #0x4                   	// #4
   27984:	mov	x3, x4
   27988:	mov	x2, x25
   2798c:	mov	x0, x19
   27990:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   27994:	mov	x4, x0
   27998:	cmp	w20, #0x53
   2799c:	b.ne	278c8 <__asan_cplus_demangle_type@@Base+0xf60>  // b.any
   279a0:	b	27948 <__asan_cplus_demangle_type@@Base+0xfe0>
   279a4:	cmp	w20, #0x54
   279a8:	b.ne	279b8 <__asan_cplus_demangle_type@@Base+0x1050>  // b.any
   279ac:	mov	x0, x19
   279b0:	bl	24054 <__asan_backtrace_create_state@@Base+0x574>
   279b4:	b	278c0 <__asan_cplus_demangle_type@@Base+0xf58>
   279b8:	cmp	w20, #0x45
   279bc:	b.eq	279dc <__asan_cplus_demangle_type@@Base+0x1074>  // b.none
   279c0:	cmp	w20, #0x4d
   279c4:	b.ne	27894 <__asan_cplus_demangle_type@@Base+0xf2c>  // b.any
   279c8:	cbz	x25, 27894 <__asan_cplus_demangle_type@@Base+0xf2c>
   279cc:	add	x1, x1, #0x1
   279d0:	mov	x4, x25
   279d4:	str	x1, [x19, #24]
   279d8:	b	27948 <__asan_cplus_demangle_type@@Base+0xfe0>
   279dc:	str	x25, [x21]
   279e0:	cbz	x25, 2785c <__asan_cplus_demangle_type@@Base+0xef4>
   279e4:	cbz	x22, 279f4 <__asan_cplus_demangle_type@@Base+0x108c>
   279e8:	ldr	x0, [sp, #88]
   279ec:	str	x0, [x22, #8]
   279f0:	str	x22, [sp, #88]
   279f4:	ldrb	w0, [x1]
   279f8:	cmp	w0, #0x45
   279fc:	b.ne	2785c <__asan_cplus_demangle_type@@Base+0xef4>  // b.any
   27a00:	ldr	x20, [sp, #88]
   27a04:	add	x1, x1, #0x1
   27a08:	str	x1, [x19, #24]
   27a0c:	mov	x0, x20
   27a10:	ldp	x19, x20, [sp, #16]
   27a14:	ldp	x21, x22, [sp, #32]
   27a18:	ldp	x23, x24, [sp, #48]
   27a1c:	ldr	x25, [sp, #64]
   27a20:	ldp	x29, x30, [sp], #96
   27a24:	ret
   27a28:	cmp	w0, #0x64
   27a2c:	b.ne	27a68 <__asan_cplus_demangle_type@@Base+0x1100>  // b.any
   27a30:	add	x1, x1, #0x2
   27a34:	str	x1, [x19, #24]
   27a38:	mov	x0, x19
   27a3c:	bl	23fd0 <__asan_backtrace_create_state@@Base+0x4f0>
   27a40:	mov	w21, w0
   27a44:	tbnz	w0, #31, 2785c <__asan_cplus_demangle_type@@Base+0xef4>
   27a48:	mov	x0, x19
   27a4c:	bl	2772c <__asan_cplus_demangle_type@@Base+0xdc4>
   27a50:	mov	x10, x0
   27a54:	cbnz	x0, 27a70 <__asan_cplus_demangle_type@@Base+0x1108>
   27a58:	cmn	w21, #0x1
   27a5c:	b.ne	27a94 <__asan_cplus_demangle_type@@Base+0x112c>  // b.any
   27a60:	mov	x3, x10
   27a64:	b	2780c <__asan_cplus_demangle_type@@Base+0xea4>
   27a68:	mov	w21, #0xffffffff            	// #-1
   27a6c:	b	27a48 <__asan_cplus_demangle_type@@Base+0x10e0>
   27a70:	ldr	w0, [x0]
   27a74:	cmp	w0, #0x46
   27a78:	b.eq	27a58 <__asan_cplus_demangle_type@@Base+0x10f0>  // b.none
   27a7c:	cmp	w0, #0x48
   27a80:	b.eq	27a58 <__asan_cplus_demangle_type@@Base+0x10f0>  // b.none
   27a84:	mov	x0, x19
   27a88:	bl	241f4 <__asan_backtrace_create_state@@Base+0x714>
   27a8c:	cbnz	w0, 27a58 <__asan_cplus_demangle_type@@Base+0x10f0>
   27a90:	b	2785c <__asan_cplus_demangle_type@@Base+0xef4>
   27a94:	mov	x0, x19
   27a98:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   27a9c:	mov	x3, x0
   27aa0:	cbz	x0, 2780c <__asan_cplus_demangle_type@@Base+0xea4>
   27aa4:	mov	w0, #0x47                  	// #71
   27aa8:	str	w0, [x3]
   27aac:	str	x10, [x3, #8]
   27ab0:	str	w21, [x3, #16]
   27ab4:	b	2780c <__asan_cplus_demangle_type@@Base+0xea4>
   27ab8:	bl	272a8 <__asan_cplus_demangle_type@@Base+0x940>
   27abc:	mov	x20, x0
   27ac0:	b	27a0c <__asan_cplus_demangle_type@@Base+0x10a4>
   27ac4:	ldrb	w2, [x1, #1]
   27ac8:	cmp	w2, #0x74
   27acc:	b.eq	27b0c <__asan_cplus_demangle_type@@Base+0x11a4>  // b.none
   27ad0:	mov	w1, #0x0                   	// #0
   27ad4:	bl	266d0 <__asan_cplus_demangle_fill_name@@Base+0x1e0>
   27ad8:	mov	x20, x0
   27adc:	mov	w0, #0x1                   	// #1
   27ae0:	ldr	x1, [x19, #24]
   27ae4:	ldrb	w1, [x1]
   27ae8:	cmp	w1, #0x49
   27aec:	b.ne	27a0c <__asan_cplus_demangle_type@@Base+0x10a4>  // b.any
   27af0:	cbz	w0, 27788 <__asan_cplus_demangle_type@@Base+0xe20>
   27af4:	mov	x0, x19
   27af8:	bl	28b24 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   27afc:	mov	x2, x20
   27b00:	mov	x3, x0
   27b04:	mov	w1, #0x4                   	// #4
   27b08:	b	27834 <__asan_cplus_demangle_type@@Base+0xecc>
   27b0c:	add	x1, x1, #0x2
   27b10:	str	x1, [x0, #24]
   27b14:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   27b18:	add	x1, x1, #0x520
   27b1c:	mov	w2, #0x3                   	// #3
   27b20:	bl	2651c <__asan_cplus_demangle_fill_name@@Base+0x2c>
   27b24:	mov	x20, x0
   27b28:	mov	x0, x19
   27b2c:	bl	272a8 <__asan_cplus_demangle_type@@Base+0x940>
   27b30:	mov	x3, x0
   27b34:	mov	x2, x20
   27b38:	mov	x0, x19
   27b3c:	mov	w1, #0x1                   	// #1
   27b40:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   27b44:	mov	x20, x0
   27b48:	ldr	w0, [x19, #72]
   27b4c:	add	w0, w0, #0x3
   27b50:	str	w0, [x19, #72]
   27b54:	mov	w0, #0x0                   	// #0
   27b58:	b	27ae0 <__asan_cplus_demangle_type@@Base+0x1178>
   27b5c:	stp	x29, x30, [sp, #-64]!
   27b60:	mov	w3, #0x54                  	// #84
   27b64:	mov	x29, sp
   27b68:	ldr	x2, [x0, #24]
   27b6c:	stp	x19, x20, [sp, #16]
   27b70:	mov	x19, x0
   27b74:	stp	x21, x22, [sp, #32]
   27b78:	mov	w21, w1
   27b7c:	str	x23, [sp, #48]
   27b80:	ldrb	w1, [x2]
   27b84:	cmp	w1, #0x47
   27b88:	ccmp	w1, w3, #0x4, ne  // ne = any
   27b8c:	b.ne	28010 <__asan_cplus_demangle_type@@Base+0x16a8>  // b.any
   27b90:	ldr	w3, [x0, #72]
   27b94:	add	w1, w3, #0x14
   27b98:	str	w1, [x0, #72]
   27b9c:	ldrb	w1, [x2]
   27ba0:	cmp	w1, #0x54
   27ba4:	b.ne	27bd4 <__asan_cplus_demangle_type@@Base+0x126c>  // b.any
   27ba8:	add	x1, x2, #0x1
   27bac:	str	x1, [x0, #24]
   27bb0:	ldrb	w1, [x2, #1]
   27bb4:	cbnz	w1, 27c34 <__asan_cplus_demangle_type@@Base+0x12cc>
   27bb8:	mov	x20, #0x0                   	// #0
   27bbc:	mov	x0, x20
   27bc0:	ldp	x19, x20, [sp, #16]
   27bc4:	ldp	x21, x22, [sp, #32]
   27bc8:	ldr	x23, [sp, #48]
   27bcc:	ldp	x29, x30, [sp], #64
   27bd0:	ret
   27bd4:	cmp	w1, #0x47
   27bd8:	b.ne	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   27bdc:	add	x1, x2, #0x1
   27be0:	str	x1, [x0, #24]
   27be4:	ldrb	w1, [x2, #1]
   27be8:	cbz	w1, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27bec:	add	x1, x2, #0x2
   27bf0:	str	x1, [x0, #24]
   27bf4:	ldrb	w1, [x2, #1]
   27bf8:	cmp	w1, #0x54
   27bfc:	b.eq	27f5c <__asan_cplus_demangle_type@@Base+0x15f4>  // b.none
   27c00:	b.hi	27e5c <__asan_cplus_demangle_type@@Base+0x14f4>  // b.pmore
   27c04:	cmp	w1, #0x41
   27c08:	b.eq	27f44 <__asan_cplus_demangle_type@@Base+0x15dc>  // b.none
   27c0c:	cmp	w1, #0x52
   27c10:	b.ne	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   27c14:	bl	2772c <__asan_cplus_demangle_type@@Base+0xdc4>
   27c18:	mov	x9, x0
   27c1c:	mov	x0, x19
   27c20:	bl	23f94 <__asan_backtrace_create_state@@Base+0x4b4>
   27c24:	mov	x3, x0
   27c28:	mov	x2, x9
   27c2c:	mov	w1, #0x16                  	// #22
   27c30:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27c34:	add	x1, x2, #0x2
   27c38:	str	x1, [x0, #24]
   27c3c:	ldrb	w1, [x2, #1]
   27c40:	cmp	w1, #0x57
   27c44:	b.hi	27c74 <__asan_cplus_demangle_type@@Base+0x130c>  // b.pmore
   27c48:	cmp	w1, #0x40
   27c4c:	b.ls	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>  // b.plast
   27c50:	sub	w1, w1, #0x41
   27c54:	cmp	w1, #0x16
   27c58:	b.hi	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>  // b.pmore
   27c5c:	adrp	x0, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   27c60:	add	x0, x0, #0x218
   27c64:	ldrb	w0, [x0, w1, uxtw]
   27c68:	adr	x1, 27c74 <__asan_cplus_demangle_type@@Base+0x130c>
   27c6c:	add	x0, x1, w0, sxtb #2
   27c70:	br	x0
   27c74:	cmp	w1, #0x68
   27c78:	b.eq	27d48 <__asan_cplus_demangle_type@@Base+0x13e0>  // b.none
   27c7c:	cmp	w1, #0x76
   27c80:	b.eq	27d6c <__asan_cplus_demangle_type@@Base+0x1404>  // b.none
   27c84:	cmp	w1, #0x63
   27c88:	b.ne	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   27c8c:	mov	w1, #0x0                   	// #0
   27c90:	bl	240b4 <__asan_backtrace_create_state@@Base+0x5d4>
   27c94:	cbz	w0, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27c98:	mov	x0, x19
   27c9c:	mov	w1, #0x0                   	// #0
   27ca0:	bl	240b4 <__asan_backtrace_create_state@@Base+0x5d4>
   27ca4:	cbz	w0, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27ca8:	mov	w1, #0x0                   	// #0
   27cac:	mov	x0, x19
   27cb0:	bl	27b5c <__asan_cplus_demangle_type@@Base+0x11f4>
   27cb4:	mov	x2, x0
   27cb8:	mov	x3, #0x0                   	// #0
   27cbc:	mov	w1, #0x11                  	// #17
   27cc0:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27cc4:	add	w3, w3, #0xf
   27cc8:	str	w3, [x19, #72]
   27ccc:	mov	x0, x19
   27cd0:	bl	67c0 <__asan_cplus_demangle_type@plt>
   27cd4:	mov	x2, x0
   27cd8:	mov	x3, #0x0                   	// #0
   27cdc:	mov	w1, #0x9                   	// #9
   27ce0:	mov	x0, x19
   27ce4:	ldp	x19, x20, [sp, #16]
   27ce8:	ldp	x21, x22, [sp, #32]
   27cec:	ldr	x23, [sp, #48]
   27cf0:	ldp	x29, x30, [sp], #64
   27cf4:	b	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   27cf8:	add	w3, w3, #0xa
   27cfc:	str	w3, [x19, #72]
   27d00:	mov	x0, x19
   27d04:	bl	67c0 <__asan_cplus_demangle_type@plt>
   27d08:	mov	x2, x0
   27d0c:	mov	x3, #0x0                   	// #0
   27d10:	mov	w1, #0xa                   	// #10
   27d14:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27d18:	mov	x0, x19
   27d1c:	bl	67c0 <__asan_cplus_demangle_type@plt>
   27d20:	mov	x3, #0x0                   	// #0
   27d24:	mov	x2, x0
   27d28:	mov	w1, #0xc                   	// #12
   27d2c:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27d30:	mov	x0, x19
   27d34:	bl	67c0 <__asan_cplus_demangle_type@plt>
   27d38:	mov	x3, #0x0                   	// #0
   27d3c:	mov	x2, x0
   27d40:	mov	w1, #0xd                   	// #13
   27d44:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27d48:	bl	240b4 <__asan_backtrace_create_state@@Base+0x5d4>
   27d4c:	cbz	w0, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27d50:	mov	w1, #0x0                   	// #0
   27d54:	mov	x0, x19
   27d58:	bl	27b5c <__asan_cplus_demangle_type@@Base+0x11f4>
   27d5c:	mov	x2, x0
   27d60:	mov	x3, #0x0                   	// #0
   27d64:	mov	w1, #0xf                   	// #15
   27d68:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27d6c:	bl	240b4 <__asan_backtrace_create_state@@Base+0x5d4>
   27d70:	cbz	w0, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27d74:	mov	w1, #0x0                   	// #0
   27d78:	mov	x0, x19
   27d7c:	bl	27b5c <__asan_cplus_demangle_type@@Base+0x11f4>
   27d80:	mov	x2, x0
   27d84:	mov	x3, #0x0                   	// #0
   27d88:	mov	w1, #0x10                  	// #16
   27d8c:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27d90:	mov	x0, x19
   27d94:	bl	67c0 <__asan_cplus_demangle_type@plt>
   27d98:	mov	x20, x0
   27d9c:	add	x0, x19, #0x18
   27da0:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   27da4:	tbnz	w0, #31, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27da8:	ldr	x1, [x19, #24]
   27dac:	ldrb	w0, [x1]
   27db0:	cmp	w0, #0x5f
   27db4:	b.ne	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   27db8:	add	x1, x1, #0x1
   27dbc:	str	x1, [x19, #24]
   27dc0:	mov	x0, x19
   27dc4:	bl	67c0 <__asan_cplus_demangle_type@plt>
   27dc8:	mov	x2, x0
   27dcc:	ldr	w1, [x19, #72]
   27dd0:	mov	x3, x20
   27dd4:	add	w1, w1, #0x5
   27dd8:	str	w1, [x19, #72]
   27ddc:	mov	w1, #0xb                   	// #11
   27de0:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27de4:	mov	x0, x19
   27de8:	bl	67c0 <__asan_cplus_demangle_type@plt>
   27dec:	mov	x3, #0x0                   	// #0
   27df0:	mov	x2, x0
   27df4:	mov	w1, #0xe                   	// #14
   27df8:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27dfc:	mov	x0, x19
   27e00:	bl	67c0 <__asan_cplus_demangle_type@plt>
   27e04:	mov	x3, #0x0                   	// #0
   27e08:	mov	x2, x0
   27e0c:	mov	w1, #0x12                  	// #18
   27e10:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27e14:	mov	x0, x19
   27e18:	bl	2772c <__asan_cplus_demangle_type@@Base+0xdc4>
   27e1c:	mov	x3, #0x0                   	// #0
   27e20:	mov	x2, x0
   27e24:	mov	w1, #0x14                  	// #20
   27e28:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27e2c:	mov	x0, x19
   27e30:	bl	2772c <__asan_cplus_demangle_type@@Base+0xdc4>
   27e34:	mov	x3, #0x0                   	// #0
   27e38:	mov	x2, x0
   27e3c:	mov	w1, #0x15                  	// #21
   27e40:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27e44:	mov	x0, x19
   27e48:	bl	289d8 <__asan_cplus_demangle_mangled_name@@Base+0x884>
   27e4c:	mov	x3, #0x0                   	// #0
   27e50:	mov	x2, x0
   27e54:	mov	w1, #0x30                  	// #48
   27e58:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27e5c:	cmp	w1, #0x56
   27e60:	b.eq	27f30 <__asan_cplus_demangle_type@@Base+0x15c8>  // b.none
   27e64:	cmp	w1, #0x72
   27e68:	b.ne	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   27e6c:	add	x0, x0, #0x18
   27e70:	bl	23f0c <__asan_backtrace_create_state@@Base+0x42c>
   27e74:	cmp	w0, #0x1
   27e78:	b.le	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27e7c:	ldr	x1, [x19, #24]
   27e80:	ldrb	w2, [x1]
   27e84:	cbz	w2, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27e88:	add	x7, x1, #0x1
   27e8c:	str	x7, [x19, #24]
   27e90:	ldrb	w1, [x1]
   27e94:	cmp	w1, #0x5f
   27e98:	b.ne	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   27e9c:	sub	w20, w0, #0x1
   27ea0:	mov	x23, #0x0                   	// #0
   27ea4:	mov	w21, #0x41                  	// #65
   27ea8:	ldrb	w0, [x7]
   27eac:	cbz	w0, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27eb0:	cmp	w0, #0x24
   27eb4:	b.ne	27fc4 <__asan_cplus_demangle_type@@Base+0x165c>  // b.any
   27eb8:	ldrb	w4, [x7, #1]
   27ebc:	cmp	w4, #0x53
   27ec0:	b.eq	27fb4 <__asan_cplus_demangle_type@@Base+0x164c>  // b.none
   27ec4:	cmp	w4, #0x5f
   27ec8:	b.eq	27fbc <__asan_cplus_demangle_type@@Base+0x1654>  // b.none
   27ecc:	cmp	w4, #0x24
   27ed0:	b.ne	27bb8 <__asan_cplus_demangle_type@@Base+0x1250>  // b.any
   27ed4:	mov	x0, x19
   27ed8:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   27edc:	cbz	x0, 27ee8 <__asan_cplus_demangle_type@@Base+0x1580>
   27ee0:	str	w21, [x0]
   27ee4:	str	w4, [x0, #8]
   27ee8:	ldr	x7, [x19, #24]
   27eec:	sub	w20, w20, #0x2
   27ef0:	add	x7, x7, #0x2
   27ef4:	str	x7, [x19, #24]
   27ef8:	cbz	x0, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27efc:	cbz	x23, 27f18 <__asan_cplus_demangle_type@@Base+0x15b0>
   27f00:	mov	x3, x0
   27f04:	mov	x2, x23
   27f08:	mov	x0, x19
   27f0c:	mov	w1, #0x40                  	// #64
   27f10:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   27f14:	cbz	x0, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   27f18:	cmp	w20, #0x0
   27f1c:	b.gt	27fac <__asan_cplus_demangle_type@@Base+0x1644>
   27f20:	mov	x2, x0
   27f24:	mov	x3, #0x0                   	// #0
   27f28:	mov	w1, #0x3f                  	// #63
   27f2c:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27f30:	bl	2772c <__asan_cplus_demangle_type@@Base+0xdc4>
   27f34:	mov	x2, x0
   27f38:	mov	x3, #0x0                   	// #0
   27f3c:	mov	w1, #0x13                  	// #19
   27f40:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27f44:	mov	w1, #0x0                   	// #0
   27f48:	bl	27b5c <__asan_cplus_demangle_type@@Base+0x11f4>
   27f4c:	mov	x3, #0x0                   	// #0
   27f50:	mov	x2, x0
   27f54:	mov	w1, #0x17                  	// #23
   27f58:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27f5c:	ldrb	w1, [x2, #2]
   27f60:	cbz	w1, 27f90 <__asan_cplus_demangle_type@@Base+0x1628>
   27f64:	add	x1, x2, #0x3
   27f68:	str	x1, [x0, #24]
   27f6c:	ldrb	w1, [x2, #2]
   27f70:	cmp	w1, #0x6e
   27f74:	b.ne	27f90 <__asan_cplus_demangle_type@@Base+0x1628>  // b.any
   27f78:	mov	w1, #0x0                   	// #0
   27f7c:	bl	27b5c <__asan_cplus_demangle_type@@Base+0x11f4>
   27f80:	mov	x3, #0x0                   	// #0
   27f84:	mov	x2, x0
   27f88:	mov	w1, #0x4a                  	// #74
   27f8c:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27f90:	mov	w1, #0x0                   	// #0
   27f94:	mov	x0, x19
   27f98:	bl	27b5c <__asan_cplus_demangle_type@@Base+0x11f4>
   27f9c:	mov	x2, x0
   27fa0:	mov	x3, #0x0                   	// #0
   27fa4:	mov	w1, #0x49                  	// #73
   27fa8:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   27fac:	mov	x23, x0
   27fb0:	b	27ea8 <__asan_cplus_demangle_type@@Base+0x1540>
   27fb4:	mov	w4, #0x2f                  	// #47
   27fb8:	b	27ed4 <__asan_cplus_demangle_type@@Base+0x156c>
   27fbc:	mov	w4, #0x2e                  	// #46
   27fc0:	b	27ed4 <__asan_cplus_demangle_type@@Base+0x156c>
   27fc4:	mov	x0, #0x0                   	// #0
   27fc8:	ldrb	w1, [x7, x0]
   27fcc:	mov	w22, w0
   27fd0:	cbz	w1, 27fec <__asan_cplus_demangle_type@@Base+0x1684>
   27fd4:	cmp	w1, #0x24
   27fd8:	b.eq	27fec <__asan_cplus_demangle_type@@Base+0x1684>  // b.none
   27fdc:	add	x0, x0, #0x1
   27fe0:	add	w22, w22, #0x1
   27fe4:	cmp	w20, w0
   27fe8:	b.gt	27fc8 <__asan_cplus_demangle_type@@Base+0x1660>
   27fec:	mov	x1, x7
   27ff0:	mov	w2, w22
   27ff4:	mov	x0, x19
   27ff8:	bl	2651c <__asan_cplus_demangle_fill_name@@Base+0x2c>
   27ffc:	ldr	x7, [x19, #24]
   28000:	sub	w20, w20, w22
   28004:	add	x7, x7, w22, sxtw
   28008:	str	x7, [x19, #24]
   2800c:	b	27ef8 <__asan_cplus_demangle_type@@Base+0x1590>
   28010:	bl	2772c <__asan_cplus_demangle_type@@Base+0xdc4>
   28014:	mov	x20, x0
   28018:	cbz	x0, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   2801c:	cbz	w21, 28028 <__asan_cplus_demangle_type@@Base+0x16c0>
   28020:	ldr	w0, [x19, #16]
   28024:	tbz	w0, #0, 28078 <__asan_cplus_demangle_type@@Base+0x1710>
   28028:	ldr	x0, [x19, #24]
   2802c:	ldrb	w0, [x0]
   28030:	cmp	w0, #0x45
   28034:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   28038:	b.eq	27bbc <__asan_cplus_demangle_type@@Base+0x1254>  // b.none
   2803c:	mov	x3, #0x1f                  	// #31
   28040:	mov	x2, x20
   28044:	mov	x1, #0x1                   	// #1
   28048:	movk	x3, #0x1a, lsl #48
   2804c:	ldr	w0, [x2]
   28050:	cmp	w0, #0x4
   28054:	b.eq	280cc <__asan_cplus_demangle_type@@Base+0x1764>  // b.none
   28058:	b.hi	280ac <__asan_cplus_demangle_type@@Base+0x1744>  // b.pmore
   2805c:	cmp	w0, #0x2
   28060:	b.ne	2806c <__asan_cplus_demangle_type@@Base+0x1704>  // b.any
   28064:	ldr	x2, [x2, #16]
   28068:	cbnz	x2, 2804c <__asan_cplus_demangle_type@@Base+0x16e4>
   2806c:	mov	w1, #0x0                   	// #0
   28070:	b	28108 <__asan_cplus_demangle_type@@Base+0x17a0>
   28074:	ldr	x20, [x20, #8]
   28078:	ldr	w2, [x20]
   2807c:	mov	w0, w2
   28080:	bl	23b60 <__asan_backtrace_create_state@@Base+0x80>
   28084:	cbnz	w0, 28074 <__asan_cplus_demangle_type@@Base+0x170c>
   28088:	cmp	w2, #0x2
   2808c:	b.ne	27bbc <__asan_cplus_demangle_type@@Base+0x1254>  // b.any
   28090:	ldr	x2, [x20, #16]
   28094:	ldr	w0, [x2]
   28098:	bl	23b60 <__asan_backtrace_create_state@@Base+0x80>
   2809c:	cbz	w0, 27bbc <__asan_cplus_demangle_type@@Base+0x1254>
   280a0:	ldr	x0, [x2, #8]
   280a4:	str	x0, [x20, #16]
   280a8:	b	28090 <__asan_cplus_demangle_type@@Base+0x1728>
   280ac:	sub	w0, w0, #0x1c
   280b0:	cmp	w0, #0x34
   280b4:	b.hi	2806c <__asan_cplus_demangle_type@@Base+0x1704>  // b.pmore
   280b8:	lsl	x0, x1, x0
   280bc:	tst	x0, x3
   280c0:	b.eq	2806c <__asan_cplus_demangle_type@@Base+0x1704>  // b.none
   280c4:	ldr	x2, [x2, #8]
   280c8:	b	28068 <__asan_cplus_demangle_type@@Base+0x1700>
   280cc:	ldr	x1, [x2, #8]
   280d0:	cbz	x1, 280f4 <__asan_cplus_demangle_type@@Base+0x178c>
   280d4:	ldr	w0, [x1]
   280d8:	cmp	w0, #0x8
   280dc:	b.hi	280fc <__asan_cplus_demangle_type@@Base+0x1794>  // b.pmore
   280e0:	cmp	w0, #0x6
   280e4:	b.hi	2814c <__asan_cplus_demangle_type@@Base+0x17e4>  // b.pmore
   280e8:	sub	w0, w0, #0x1
   280ec:	cmp	w0, #0x1
   280f0:	b.ls	28144 <__asan_cplus_demangle_type@@Base+0x17dc>  // b.plast
   280f4:	mov	w0, #0x0                   	// #0
   280f8:	b	28104 <__asan_cplus_demangle_type@@Base+0x179c>
   280fc:	cmp	w0, #0x35
   28100:	cset	w0, eq  // eq = none
   28104:	eor	w1, w0, #0x1
   28108:	mov	x0, x19
   2810c:	bl	275fc <__asan_cplus_demangle_type@@Base+0xc94>
   28110:	mov	x3, x0
   28114:	cbz	x0, 27bb8 <__asan_cplus_demangle_type@@Base+0x1250>
   28118:	cbnz	w21, 28138 <__asan_cplus_demangle_type@@Base+0x17d0>
   2811c:	ldr	w0, [x20]
   28120:	cmp	w0, #0x2
   28124:	b.ne	28138 <__asan_cplus_demangle_type@@Base+0x17d0>  // b.any
   28128:	ldr	w0, [x3]
   2812c:	cmp	w0, #0x29
   28130:	b.ne	28138 <__asan_cplus_demangle_type@@Base+0x17d0>  // b.any
   28134:	str	xzr, [x3, #8]
   28138:	mov	x2, x20
   2813c:	mov	w1, #0x3                   	// #3
   28140:	b	27ce0 <__asan_cplus_demangle_type@@Base+0x1378>
   28144:	ldr	x1, [x1, #16]
   28148:	b	280d0 <__asan_cplus_demangle_type@@Base+0x1768>
   2814c:	mov	w0, #0x1                   	// #1
   28150:	b	28104 <__asan_cplus_demangle_type@@Base+0x179c>

0000000000028154 <__asan_cplus_demangle_mangled_name@@Base>:
   28154:	stp	x29, x30, [sp, #-48]!
   28158:	mov	x29, sp
   2815c:	stp	x19, x20, [sp, #16]
   28160:	mov	x19, x0
   28164:	ldr	x0, [x0, #24]
   28168:	str	x21, [sp, #32]
   2816c:	mov	w21, w1
   28170:	ldrb	w1, [x0]
   28174:	cmp	w1, #0x5f
   28178:	b.ne	281f8 <__asan_cplus_demangle_mangled_name@@Base+0xa4>  // b.any
   2817c:	add	x0, x0, #0x1
   28180:	str	x0, [x19, #24]
   28184:	ldr	x0, [x19, #24]
   28188:	ldrb	w1, [x0]
   2818c:	cmp	w1, #0x5a
   28190:	b.ne	281fc <__asan_cplus_demangle_mangled_name@@Base+0xa8>  // b.any
   28194:	add	x0, x0, #0x1
   28198:	str	x0, [x19, #24]
   2819c:	mov	w1, w21
   281a0:	mov	x0, x19
   281a4:	bl	27b5c <__asan_cplus_demangle_type@@Base+0x11f4>
   281a8:	mov	x20, x0
   281ac:	cbz	w21, 28200 <__asan_cplus_demangle_mangled_name@@Base+0xac>
   281b0:	ldr	w0, [x19, #16]
   281b4:	tbz	w0, #0, 28200 <__asan_cplus_demangle_mangled_name@@Base+0xac>
   281b8:	ldr	x1, [x19, #24]
   281bc:	ldrb	w0, [x1]
   281c0:	cmp	w0, #0x2e
   281c4:	b.ne	28200 <__asan_cplus_demangle_mangled_name@@Base+0xac>  // b.any
   281c8:	ldrb	w0, [x1, #1]
   281cc:	sub	w2, w0, #0x61
   281d0:	cmp	w0, #0x5f
   281d4:	and	w2, w2, #0xff
   281d8:	ccmp	w2, #0x19, #0x0, ne  // ne = any
   281dc:	b.ls	28214 <__asan_cplus_demangle_mangled_name@@Base+0xc0>  // b.plast
   281e0:	sub	w0, w0, #0x30
   281e4:	and	w0, w0, #0xff
   281e8:	cmp	w0, #0x9
   281ec:	b.hi	28200 <__asan_cplus_demangle_mangled_name@@Base+0xac>  // b.pmore
   281f0:	mov	x2, x1
   281f4:	b	28230 <__asan_cplus_demangle_mangled_name@@Base+0xdc>
   281f8:	cbz	w21, 28184 <__asan_cplus_demangle_mangled_name@@Base+0x30>
   281fc:	mov	x20, #0x0                   	// #0
   28200:	mov	x0, x20
   28204:	ldp	x19, x20, [sp, #16]
   28208:	ldr	x21, [sp, #32]
   2820c:	ldp	x29, x30, [sp], #48
   28210:	ret
   28214:	add	x2, x1, #0x2
   28218:	ldrb	w3, [x2]
   2821c:	sub	w0, w3, #0x61
   28220:	cmp	w3, #0x5f
   28224:	and	w0, w0, #0xff
   28228:	ccmp	w0, #0x19, #0x0, ne  // ne = any
   2822c:	b.ls	28268 <__asan_cplus_demangle_mangled_name@@Base+0x114>  // b.plast
   28230:	ldrb	w0, [x2]
   28234:	cmp	w0, #0x2e
   28238:	b.eq	28270 <__asan_cplus_demangle_mangled_name@@Base+0x11c>  // b.none
   2823c:	str	x2, [x19, #24]
   28240:	mov	x0, x19
   28244:	sub	w2, w2, w1
   28248:	bl	2651c <__asan_cplus_demangle_fill_name@@Base+0x2c>
   2824c:	mov	x3, x0
   28250:	mov	x2, x20
   28254:	mov	x0, x19
   28258:	mov	w1, #0x4e                  	// #78
   2825c:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   28260:	mov	x20, x0
   28264:	b	281b8 <__asan_cplus_demangle_mangled_name@@Base+0x64>
   28268:	add	x2, x2, #0x1
   2826c:	b	28218 <__asan_cplus_demangle_mangled_name@@Base+0xc4>
   28270:	ldrb	w0, [x2, #1]
   28274:	sub	w0, w0, #0x30
   28278:	and	w0, w0, #0xff
   2827c:	cmp	w0, #0x9
   28280:	b.hi	2823c <__asan_cplus_demangle_mangled_name@@Base+0xe8>  // b.pmore
   28284:	add	x2, x2, #0x2
   28288:	ldrb	w0, [x2]
   2828c:	sub	w0, w0, #0x30
   28290:	and	w0, w0, #0xff
   28294:	cmp	w0, #0x9
   28298:	b.hi	28230 <__asan_cplus_demangle_mangled_name@@Base+0xdc>  // b.pmore
   2829c:	add	x2, x2, #0x1
   282a0:	b	28288 <__asan_cplus_demangle_mangled_name@@Base+0x134>
   282a4:	ldr	x1, [x0, #24]
   282a8:	ldrb	w2, [x1]
   282ac:	cmp	w2, #0x4c
   282b0:	b.eq	282d0 <__asan_cplus_demangle_mangled_name@@Base+0x17c>  // b.none
   282b4:	mov	x0, #0x0                   	// #0
   282b8:	ret
   282bc:	mov	x0, #0x0                   	// #0
   282c0:	ldp	x19, x20, [sp, #16]
   282c4:	ldr	x21, [sp, #32]
   282c8:	ldp	x29, x30, [sp], #48
   282cc:	ret
   282d0:	stp	x29, x30, [sp, #-48]!
   282d4:	add	x2, x1, #0x1
   282d8:	mov	x29, sp
   282dc:	stp	x19, x20, [sp, #16]
   282e0:	mov	x19, x0
   282e4:	str	x21, [sp, #32]
   282e8:	str	x2, [x0, #24]
   282ec:	mov	w2, #0x5a                  	// #90
   282f0:	ldrb	w1, [x1, #1]
   282f4:	cmp	w1, #0x5f
   282f8:	ccmp	w1, w2, #0x4, ne  // ne = any
   282fc:	b.ne	28324 <__asan_cplus_demangle_mangled_name@@Base+0x1d0>  // b.any
   28300:	mov	w1, #0x0                   	// #0
   28304:	bl	6d10 <__asan_cplus_demangle_mangled_name@plt>
   28308:	ldr	x1, [x19, #24]
   2830c:	ldrb	w2, [x1]
   28310:	cmp	w2, #0x45
   28314:	b.ne	282bc <__asan_cplus_demangle_mangled_name@@Base+0x168>  // b.any
   28318:	add	x1, x1, #0x1
   2831c:	str	x1, [x19, #24]
   28320:	b	282c0 <__asan_cplus_demangle_mangled_name@@Base+0x16c>
   28324:	bl	67c0 <__asan_cplus_demangle_type@plt>
   28328:	mov	x20, x0
   2832c:	cbz	x0, 282bc <__asan_cplus_demangle_mangled_name@@Base+0x168>
   28330:	ldr	w0, [x0]
   28334:	cmp	w0, #0x27
   28338:	b.ne	28358 <__asan_cplus_demangle_mangled_name@@Base+0x204>  // b.any
   2833c:	ldr	x1, [x20, #8]
   28340:	ldr	w0, [x1, #28]
   28344:	cbz	w0, 28358 <__asan_cplus_demangle_mangled_name@@Base+0x204>
   28348:	ldr	w1, [x1, #8]
   2834c:	ldr	w0, [x19, #72]
   28350:	sub	w0, w0, w1
   28354:	str	w0, [x19, #72]
   28358:	ldr	x0, [x19, #24]
   2835c:	ldrb	w1, [x0]
   28360:	cmp	w1, #0x6e
   28364:	b.ne	283ac <__asan_cplus_demangle_mangled_name@@Base+0x258>  // b.any
   28368:	add	x0, x0, #0x1
   2836c:	mov	w21, #0x3e                  	// #62
   28370:	str	x0, [x19, #24]
   28374:	ldr	x1, [x19, #24]
   28378:	ldr	x2, [x19, #24]
   2837c:	ldrb	w0, [x2]
   28380:	cmp	w0, #0x45
   28384:	b.ne	283b4 <__asan_cplus_demangle_mangled_name@@Base+0x260>  // b.any
   28388:	sub	w2, w2, w1
   2838c:	mov	x0, x19
   28390:	bl	2651c <__asan_cplus_demangle_fill_name@@Base+0x2c>
   28394:	mov	x3, x0
   28398:	mov	x2, x20
   2839c:	mov	w1, w21
   283a0:	mov	x0, x19
   283a4:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   283a8:	b	28308 <__asan_cplus_demangle_mangled_name@@Base+0x1b4>
   283ac:	mov	w21, #0x3d                  	// #61
   283b0:	b	28374 <__asan_cplus_demangle_mangled_name@@Base+0x220>
   283b4:	cbz	w0, 282bc <__asan_cplus_demangle_mangled_name@@Base+0x168>
   283b8:	add	x2, x2, #0x1
   283bc:	str	x2, [x19, #24]
   283c0:	b	28378 <__asan_cplus_demangle_mangled_name@@Base+0x224>
   283c4:	ldr	x1, [x0, #24]
   283c8:	ldrb	w2, [x1]
   283cc:	cmp	w2, #0x4c
   283d0:	b.ne	283d8 <__asan_cplus_demangle_mangled_name@@Base+0x284>  // b.any
   283d4:	b	282a4 <__asan_cplus_demangle_mangled_name@@Base+0x150>
   283d8:	cmp	w2, #0x54
   283dc:	b.ne	283e4 <__asan_cplus_demangle_mangled_name@@Base+0x290>  // b.any
   283e0:	b	24054 <__asan_backtrace_create_state@@Base+0x574>
   283e4:	stp	x29, x30, [sp, #-48]!
   283e8:	cmp	w2, #0x73
   283ec:	mov	x29, sp
   283f0:	stp	x19, x20, [sp, #16]
   283f4:	mov	x19, x0
   283f8:	stp	x21, x22, [sp, #32]
   283fc:	b.ne	284a0 <__asan_cplus_demangle_mangled_name@@Base+0x34c>  // b.any
   28400:	ldrb	w3, [x1, #1]
   28404:	cmp	w3, #0x72
   28408:	b.ne	2847c <__asan_cplus_demangle_mangled_name@@Base+0x328>  // b.any
   2840c:	add	x1, x1, #0x2
   28410:	str	x1, [x0, #24]
   28414:	bl	67c0 <__asan_cplus_demangle_type@plt>
   28418:	mov	x20, x0
   2841c:	mov	x0, x19
   28420:	bl	272a8 <__asan_cplus_demangle_type@@Base+0x940>
   28424:	mov	x21, x0
   28428:	ldr	x0, [x19, #24]
   2842c:	ldrb	w0, [x0]
   28430:	cmp	w0, #0x49
   28434:	b.eq	28458 <__asan_cplus_demangle_mangled_name@@Base+0x304>  // b.none
   28438:	mov	x3, x21
   2843c:	mov	x2, x20
   28440:	mov	w1, #0x1                   	// #1
   28444:	mov	x0, x19
   28448:	ldp	x19, x20, [sp, #16]
   2844c:	ldp	x21, x22, [sp, #32]
   28450:	ldp	x29, x30, [sp], #48
   28454:	b	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   28458:	mov	x0, x19
   2845c:	bl	28b24 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   28460:	mov	x3, x0
   28464:	mov	x2, x21
   28468:	mov	x0, x19
   2846c:	mov	w1, #0x4                   	// #4
   28470:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   28474:	mov	x3, x0
   28478:	b	2843c <__asan_cplus_demangle_mangled_name@@Base+0x2e8>
   2847c:	cmp	w3, #0x70
   28480:	b.ne	2858c <__asan_cplus_demangle_mangled_name@@Base+0x438>  // b.any
   28484:	add	x1, x1, #0x2
   28488:	str	x1, [x0, #24]
   2848c:	bl	283c4 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   28490:	mov	x2, x0
   28494:	mov	x3, #0x0                   	// #0
   28498:	mov	w1, #0x4b                  	// #75
   2849c:	b	28444 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   284a0:	cmp	w2, #0x66
   284a4:	b.ne	28528 <__asan_cplus_demangle_mangled_name@@Base+0x3d4>  // b.any
   284a8:	ldrb	w3, [x1, #1]
   284ac:	cmp	w3, #0x70
   284b0:	b.ne	2858c <__asan_cplus_demangle_mangled_name@@Base+0x438>  // b.any
   284b4:	add	x2, x1, #0x2
   284b8:	str	x2, [x0, #24]
   284bc:	ldrb	w2, [x1, #2]
   284c0:	cmp	w2, #0x54
   284c4:	b.ne	28508 <__asan_cplus_demangle_mangled_name@@Base+0x3b4>  // b.any
   284c8:	add	x1, x1, #0x3
   284cc:	mov	w4, #0x0                   	// #0
   284d0:	str	x1, [x0, #24]
   284d4:	mov	x0, x19
   284d8:	bl	23b90 <__asan_backtrace_create_state@@Base+0xb0>
   284dc:	mov	x20, x0
   284e0:	cbz	x0, 284f4 <__asan_cplus_demangle_mangled_name@@Base+0x3a0>
   284e4:	sxtw	x4, w4
   284e8:	mov	w0, #0x6                   	// #6
   284ec:	str	w0, [x20]
   284f0:	str	x4, [x20, #8]
   284f4:	mov	x0, x20
   284f8:	ldp	x19, x20, [sp, #16]
   284fc:	ldp	x21, x22, [sp, #32]
   28500:	ldp	x29, x30, [sp], #48
   28504:	ret
   28508:	bl	23fd0 <__asan_backtrace_create_state@@Base+0x4f0>
   2850c:	mvn	x1, x0
   28510:	tst	x1, #0x7fffffff
   28514:	b.ne	28520 <__asan_cplus_demangle_mangled_name@@Base+0x3cc>  // b.any
   28518:	mov	x20, #0x0                   	// #0
   2851c:	b	284f4 <__asan_cplus_demangle_mangled_name@@Base+0x3a0>
   28520:	add	w4, w0, #0x1
   28524:	b	284d4 <__asan_cplus_demangle_mangled_name@@Base+0x380>
   28528:	sub	w0, w2, #0x30
   2852c:	and	w0, w0, #0xff
   28530:	cmp	w0, #0x9
   28534:	b.ls	28554 <__asan_cplus_demangle_mangled_name@@Base+0x400>  // b.plast
   28538:	cmp	w2, #0x6f
   2853c:	b.ne	2858c <__asan_cplus_demangle_mangled_name@@Base+0x438>  // b.any
   28540:	ldrb	w0, [x1, #1]
   28544:	cmp	w0, #0x6e
   28548:	b.ne	285f4 <__asan_cplus_demangle_mangled_name@@Base+0x4a0>  // b.any
   2854c:	add	x1, x1, #0x2
   28550:	str	x1, [x19, #24]
   28554:	mov	x0, x19
   28558:	bl	272a8 <__asan_cplus_demangle_type@@Base+0x940>
   2855c:	mov	x20, x0
   28560:	cbz	x0, 28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   28564:	ldr	x0, [x19, #24]
   28568:	ldrb	w0, [x0]
   2856c:	cmp	w0, #0x49
   28570:	b.ne	284f4 <__asan_cplus_demangle_mangled_name@@Base+0x3a0>  // b.any
   28574:	mov	x0, x19
   28578:	bl	28b24 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   2857c:	mov	x2, x20
   28580:	mov	x3, x0
   28584:	mov	w1, #0x4                   	// #4
   28588:	b	28444 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   2858c:	cmp	w2, #0x69
   28590:	mov	w0, #0x74                  	// #116
   28594:	ccmp	w2, w0, #0x4, ne  // ne = any
   28598:	b.ne	285f4 <__asan_cplus_demangle_mangled_name@@Base+0x4a0>  // b.any
   2859c:	ldrb	w0, [x1, #1]
   285a0:	cmp	w0, #0x6c
   285a4:	b.ne	285f4 <__asan_cplus_demangle_mangled_name@@Base+0x4a0>  // b.any
   285a8:	add	x1, x1, #0x2
   285ac:	str	x1, [x19, #24]
   285b0:	cmp	w2, #0x74
   285b4:	b.ne	285ec <__asan_cplus_demangle_mangled_name@@Base+0x498>  // b.any
   285b8:	mov	x0, x19
   285bc:	bl	67c0 <__asan_cplus_demangle_type@plt>
   285c0:	mov	x20, x0
   285c4:	ldr	x0, [x19, #24]
   285c8:	ldrb	w0, [x0, #1]
   285cc:	cbz	w0, 28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   285d0:	mov	w1, #0x45                  	// #69
   285d4:	mov	x0, x19
   285d8:	bl	28b50 <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   285dc:	mov	x3, x0
   285e0:	mov	x2, x20
   285e4:	mov	w1, #0x31                  	// #49
   285e8:	b	28444 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   285ec:	mov	x20, #0x0                   	// #0
   285f0:	b	285c4 <__asan_cplus_demangle_mangled_name@@Base+0x470>
   285f4:	mov	x0, x19
   285f8:	bl	27130 <__asan_cplus_demangle_type@@Base+0x7c8>
   285fc:	mov	x21, x0
   28600:	cbz	x0, 28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   28604:	ldr	w0, [x0]
   28608:	cmp	w0, #0x32
   2860c:	b.ne	28658 <__asan_cplus_demangle_mangled_name@@Base+0x504>  // b.any
   28610:	ldr	x0, [x21, #8]
   28614:	ldr	x20, [x0]
   28618:	ldr	w0, [x0, #16]
   2861c:	sub	w1, w0, #0x2
   28620:	ldr	w0, [x19, #72]
   28624:	add	w0, w0, w1
   28628:	str	w0, [x19, #72]
   2862c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   28630:	mov	x0, x20
   28634:	add	x1, x1, #0x7c7
   28638:	bl	6b90 <__asan_internal_strcmp@plt>
   2863c:	cbnz	w0, 2865c <__asan_cplus_demangle_mangled_name@@Base+0x508>
   28640:	mov	x0, x19
   28644:	bl	67c0 <__asan_cplus_demangle_type@plt>
   28648:	mov	x3, x0
   2864c:	mov	x2, x21
   28650:	mov	w1, #0x37                  	// #55
   28654:	b	28444 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   28658:	mov	x20, #0x0                   	// #0
   2865c:	ldr	w0, [x21]
   28660:	cmp	w0, #0x33
   28664:	b.eq	286a0 <__asan_cplus_demangle_mangled_name@@Base+0x54c>  // b.none
   28668:	cmp	w0, #0x34
   2866c:	b.eq	286b8 <__asan_cplus_demangle_mangled_name@@Base+0x564>  // b.none
   28670:	cmp	w0, #0x32
   28674:	b.ne	28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   28678:	ldr	x1, [x21, #8]
   2867c:	ldr	w2, [x1, #20]
   28680:	cmp	w2, #0x3
   28684:	b.hi	28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.pmore
   28688:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2868c:	add	x1, x1, #0x230
   28690:	ldrb	w1, [x1, w2, uxtw]
   28694:	adr	x2, 286a0 <__asan_cplus_demangle_mangled_name@@Base+0x54c>
   28698:	add	x1, x2, w1, sxtb #2
   2869c:	br	x1
   286a0:	ldr	w2, [x21, #8]
   286a4:	b	28680 <__asan_cplus_demangle_mangled_name@@Base+0x52c>
   286a8:	mov	x2, x21
   286ac:	mov	x3, #0x0                   	// #0
   286b0:	mov	w1, #0x36                  	// #54
   286b4:	b	28444 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   286b8:	cbz	x20, 28988 <__asan_cplus_demangle_mangled_name@@Base+0x834>
   286bc:	ldrb	w1, [x20]
   286c0:	mov	w2, #0x6d                  	// #109
   286c4:	cmp	w1, #0x70
   286c8:	ccmp	w1, w2, #0x4, ne  // ne = any
   286cc:	b.ne	286f4 <__asan_cplus_demangle_mangled_name@@Base+0x5a0>  // b.any
   286d0:	ldrb	w2, [x20, #1]
   286d4:	cmp	w2, w1
   286d8:	b.ne	286f4 <__asan_cplus_demangle_mangled_name@@Base+0x5a0>  // b.any
   286dc:	ldr	x1, [x19, #24]
   286e0:	ldrb	w2, [x1]
   286e4:	cmp	w2, #0x5f
   286e8:	b.ne	289a0 <__asan_cplus_demangle_mangled_name@@Base+0x84c>  // b.any
   286ec:	add	x1, x1, #0x1
   286f0:	str	x1, [x19, #24]
   286f4:	mov	w22, #0x0                   	// #0
   286f8:	cmp	w0, #0x34
   286fc:	b.ne	28744 <__asan_cplus_demangle_mangled_name@@Base+0x5f0>  // b.any
   28700:	ldr	x0, [x19, #24]
   28704:	ldrb	w1, [x0]
   28708:	cmp	w1, #0x5f
   2870c:	b.ne	28740 <__asan_cplus_demangle_mangled_name@@Base+0x5ec>  // b.any
   28710:	add	x0, x0, #0x1
   28714:	str	x0, [x19, #24]
   28718:	mov	w1, #0x45                  	// #69
   2871c:	mov	x0, x19
   28720:	bl	28b50 <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   28724:	mov	x3, x0
   28728:	cbz	w22, 2864c <__asan_cplus_demangle_mangled_name@@Base+0x4f8>
   2872c:	mov	x2, x0
   28730:	mov	w1, #0x39                  	// #57
   28734:	mov	x0, x19
   28738:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   2873c:	b	28648 <__asan_cplus_demangle_mangled_name@@Base+0x4f4>
   28740:	cbz	x20, 28994 <__asan_cplus_demangle_mangled_name@@Base+0x840>
   28744:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   28748:	mov	x0, x20
   2874c:	add	x1, x1, #0x46f
   28750:	bl	6b90 <__asan_internal_strcmp@plt>
   28754:	cbnz	w0, 28994 <__asan_cplus_demangle_mangled_name@@Base+0x840>
   28758:	mov	x0, x19
   2875c:	bl	28a6c <__asan_cplus_demangle_mangled_name@@Base+0x918>
   28760:	b	28724 <__asan_cplus_demangle_mangled_name@@Base+0x5d0>
   28764:	cbz	x20, 28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   28768:	ldr	x0, [x21, #8]
   2876c:	bl	241ac <__asan_backtrace_create_state@@Base+0x6cc>
   28770:	cbz	w0, 287c8 <__asan_cplus_demangle_mangled_name@@Base+0x674>
   28774:	mov	x0, x19
   28778:	bl	67c0 <__asan_cplus_demangle_type@plt>
   2877c:	mov	x22, x0
   28780:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   28784:	mov	x0, x20
   28788:	add	x1, x1, #0x3d8
   2878c:	bl	6b90 <__asan_internal_strcmp@plt>
   28790:	cbnz	w0, 287e8 <__asan_cplus_demangle_mangled_name@@Base+0x694>
   28794:	mov	x0, x19
   28798:	mov	w1, #0x45                  	// #69
   2879c:	bl	28b50 <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   287a0:	mov	x20, x0
   287a4:	mov	x3, x20
   287a8:	mov	x2, x22
   287ac:	mov	w1, #0x39                  	// #57
   287b0:	mov	x0, x19
   287b4:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   287b8:	mov	x3, x0
   287bc:	mov	x2, x21
   287c0:	mov	w1, #0x38                  	// #56
   287c4:	b	28444 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   287c8:	ldrb	w0, [x20]
   287cc:	cmp	w0, #0x66
   287d0:	mov	x0, x19
   287d4:	b.ne	287e0 <__asan_cplus_demangle_mangled_name@@Base+0x68c>  // b.any
   287d8:	bl	27130 <__asan_cplus_demangle_type@@Base+0x7c8>
   287dc:	b	2877c <__asan_cplus_demangle_mangled_name@@Base+0x628>
   287e0:	bl	283c4 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   287e4:	b	2877c <__asan_cplus_demangle_mangled_name@@Base+0x628>
   287e8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   287ec:	mov	x0, x20
   287f0:	add	x1, x1, #0x524
   287f4:	bl	6b90 <__asan_internal_strcmp@plt>
   287f8:	cbnz	w0, 28838 <__asan_cplus_demangle_mangled_name@@Base+0x6e4>
   287fc:	mov	x0, x19
   28800:	bl	272a8 <__asan_cplus_demangle_type@@Base+0x940>
   28804:	mov	x20, x0
   28808:	ldr	x0, [x19, #24]
   2880c:	ldrb	w0, [x0]
   28810:	cmp	w0, #0x49
   28814:	b.ne	287a4 <__asan_cplus_demangle_mangled_name@@Base+0x650>  // b.any
   28818:	mov	x0, x19
   2881c:	bl	28b24 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   28820:	mov	x2, x20
   28824:	mov	x3, x0
   28828:	mov	w1, #0x4                   	// #4
   2882c:	mov	x0, x19
   28830:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   28834:	b	287a0 <__asan_cplus_demangle_mangled_name@@Base+0x64c>
   28838:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2883c:	mov	x0, x20
   28840:	add	x1, x1, #0x4a6
   28844:	bl	6b90 <__asan_internal_strcmp@plt>
   28848:	cbz	w0, 287fc <__asan_cplus_demangle_mangled_name@@Base+0x6a8>
   2884c:	mov	x0, x19
   28850:	bl	283c4 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   28854:	b	287a0 <__asan_cplus_demangle_mangled_name@@Base+0x64c>
   28858:	cbz	x20, 28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   2885c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   28860:	mov	x0, x20
   28864:	add	x1, x1, #0x3db
   28868:	bl	6b90 <__asan_internal_strcmp@plt>
   2886c:	cbnz	w0, 288cc <__asan_cplus_demangle_mangled_name@@Base+0x778>
   28870:	mov	x0, x19
   28874:	bl	283c4 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   28878:	mov	x20, x0
   2887c:	mov	x0, x19
   28880:	bl	283c4 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   28884:	mov	x22, x0
   28888:	mov	x0, x19
   2888c:	bl	283c4 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   28890:	cbz	x0, 28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>
   28894:	mov	x3, x0
   28898:	mov	x2, x22
   2889c:	mov	w1, #0x3c                  	// #60
   288a0:	mov	x0, x19
   288a4:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   288a8:	mov	x3, x0
   288ac:	mov	x2, x20
   288b0:	mov	w1, #0x3b                  	// #59
   288b4:	mov	x0, x19
   288b8:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   288bc:	mov	x2, x21
   288c0:	mov	x3, x0
   288c4:	mov	w1, #0x3a                  	// #58
   288c8:	b	28444 <__asan_cplus_demangle_mangled_name@@Base+0x2f0>
   288cc:	ldrb	w0, [x20]
   288d0:	cmp	w0, #0x66
   288d4:	b.ne	288e4 <__asan_cplus_demangle_mangled_name@@Base+0x790>  // b.any
   288d8:	mov	x0, x19
   288dc:	bl	27130 <__asan_cplus_demangle_type@@Base+0x7c8>
   288e0:	b	28878 <__asan_cplus_demangle_mangled_name@@Base+0x724>
   288e4:	cmp	w0, #0x6e
   288e8:	b.ne	28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   288ec:	ldrb	w0, [x20, #1]
   288f0:	mov	w1, #0x61                  	// #97
   288f4:	cmp	w0, #0x77
   288f8:	ccmp	w0, w1, #0x4, ne  // ne = any
   288fc:	b.ne	28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   28900:	mov	w1, #0x5f                  	// #95
   28904:	mov	x0, x19
   28908:	bl	28b50 <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   2890c:	mov	x20, x0
   28910:	mov	x0, x19
   28914:	bl	67c0 <__asan_cplus_demangle_type@plt>
   28918:	mov	x22, x0
   2891c:	ldr	x0, [x19, #24]
   28920:	ldrb	w1, [x0]
   28924:	cmp	w1, #0x45
   28928:	b.ne	2893c <__asan_cplus_demangle_mangled_name@@Base+0x7e8>  // b.any
   2892c:	add	x0, x0, #0x1
   28930:	str	x0, [x19, #24]
   28934:	mov	x0, #0x0                   	// #0
   28938:	b	28894 <__asan_cplus_demangle_mangled_name@@Base+0x740>
   2893c:	cmp	w1, #0x70
   28940:	b.ne	28968 <__asan_cplus_demangle_mangled_name@@Base+0x814>  // b.any
   28944:	ldrb	w1, [x0, #1]
   28948:	cmp	w1, #0x69
   2894c:	b.ne	28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   28950:	add	x0, x0, #0x2
   28954:	str	x0, [x19, #24]
   28958:	mov	w1, #0x45                  	// #69
   2895c:	mov	x0, x19
   28960:	bl	28b50 <__asan_cplus_demangle_mangled_name@@Base+0x9fc>
   28964:	b	28894 <__asan_cplus_demangle_mangled_name@@Base+0x740>
   28968:	cmp	w1, #0x69
   2896c:	b.ne	28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   28970:	ldrb	w0, [x0, #1]
   28974:	cmp	w0, #0x6c
   28978:	b.ne	28518 <__asan_cplus_demangle_mangled_name@@Base+0x3c4>  // b.any
   2897c:	mov	x0, x19
   28980:	bl	283c4 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   28984:	b	28894 <__asan_cplus_demangle_mangled_name@@Base+0x740>
   28988:	cmp	w0, #0x34
   2898c:	mov	w22, #0x0                   	// #0
   28990:	b.eq	28700 <__asan_cplus_demangle_mangled_name@@Base+0x5ac>  // b.none
   28994:	mov	x0, x19
   28998:	bl	283c4 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   2899c:	b	28724 <__asan_cplus_demangle_mangled_name@@Base+0x5d0>
   289a0:	mov	w22, #0x1                   	// #1
   289a4:	b	286f8 <__asan_cplus_demangle_mangled_name@@Base+0x5a4>
   289a8:	stp	x29, x30, [sp, #-32]!
   289ac:	mov	w1, #0x1                   	// #1
   289b0:	mov	x29, sp
   289b4:	stp	x19, x20, [sp, #16]
   289b8:	mov	x19, x0
   289bc:	ldr	w20, [x0, #76]
   289c0:	str	w1, [x0, #76]
   289c4:	bl	283c4 <__asan_cplus_demangle_mangled_name@@Base+0x270>
   289c8:	str	w20, [x19, #76]
   289cc:	ldp	x19, x20, [sp, #16]
   289d0:	ldp	x29, x30, [sp], #32
   289d4:	ret
   289d8:	ldr	x2, [x0, #24]
   289dc:	ldrb	w1, [x2]
   289e0:	cmp	w1, #0x4c
   289e4:	b.eq	28a54 <__asan_cplus_demangle_mangled_name@@Base+0x900>  // b.none
   289e8:	stp	x29, x30, [sp, #-32]!
   289ec:	mov	x29, sp
   289f0:	str	x19, [sp, #16]
   289f4:	mov	x19, x0
   289f8:	b.hi	28a1c <__asan_cplus_demangle_mangled_name@@Base+0x8c8>  // b.pmore
   289fc:	sub	w1, w1, #0x49
   28a00:	and	w1, w1, #0xff
   28a04:	cmp	w1, #0x1
   28a08:	b.ls	28a58 <__asan_cplus_demangle_mangled_name@@Base+0x904>  // b.plast
   28a0c:	mov	x0, x19
   28a10:	ldr	x19, [sp, #16]
   28a14:	ldp	x29, x30, [sp], #32
   28a18:	b	67c0 <__asan_cplus_demangle_type@plt>
   28a1c:	cmp	w1, #0x58
   28a20:	b.ne	28a0c <__asan_cplus_demangle_mangled_name@@Base+0x8b8>  // b.any
   28a24:	add	x2, x2, #0x1
   28a28:	str	x2, [x0, #24]
   28a2c:	bl	289a8 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   28a30:	ldr	x1, [x19, #24]
   28a34:	ldrb	w2, [x1]
   28a38:	cmp	w2, #0x45
   28a3c:	b.ne	28a64 <__asan_cplus_demangle_mangled_name@@Base+0x910>  // b.any
   28a40:	add	x1, x1, #0x1
   28a44:	str	x1, [x19, #24]
   28a48:	ldr	x19, [sp, #16]
   28a4c:	ldp	x29, x30, [sp], #32
   28a50:	ret
   28a54:	b	282a4 <__asan_cplus_demangle_mangled_name@@Base+0x150>
   28a58:	ldr	x19, [sp, #16]
   28a5c:	ldp	x29, x30, [sp], #32
   28a60:	b	28b24 <__asan_cplus_demangle_mangled_name@@Base+0x9d0>
   28a64:	mov	x0, #0x0                   	// #0
   28a68:	b	28a48 <__asan_cplus_demangle_mangled_name@@Base+0x8f4>
   28a6c:	stp	x29, x30, [sp, #-64]!
   28a70:	mov	x29, sp
   28a74:	ldr	x1, [x0, #24]
   28a78:	stp	x19, x20, [sp, #16]
   28a7c:	mov	x19, x0
   28a80:	str	x21, [sp, #32]
   28a84:	ldr	x21, [x0, #64]
   28a88:	ldrb	w2, [x1]
   28a8c:	cmp	w2, #0x45
   28a90:	b.ne	28ab8 <__asan_cplus_demangle_mangled_name@@Base+0x964>  // b.any
   28a94:	add	x1, x1, #0x1
   28a98:	mov	x3, #0x0                   	// #0
   28a9c:	ldr	x21, [sp, #32]
   28aa0:	str	x1, [x0, #24]
   28aa4:	ldp	x19, x20, [sp, #16]
   28aa8:	mov	x2, #0x0                   	// #0
   28aac:	ldp	x29, x30, [sp], #64
   28ab0:	mov	w1, #0x2f                  	// #47
   28ab4:	b	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   28ab8:	add	x20, sp, #0x38
   28abc:	str	xzr, [sp, #56]
   28ac0:	mov	x0, x19
   28ac4:	bl	289d8 <__asan_cplus_demangle_mangled_name@@Base+0x884>
   28ac8:	mov	x2, x0
   28acc:	cbnz	x0, 28ae4 <__asan_cplus_demangle_mangled_name@@Base+0x990>
   28ad0:	mov	x0, #0x0                   	// #0
   28ad4:	ldp	x19, x20, [sp, #16]
   28ad8:	ldr	x21, [sp, #32]
   28adc:	ldp	x29, x30, [sp], #64
   28ae0:	ret
   28ae4:	mov	x0, x19
   28ae8:	mov	x3, #0x0                   	// #0
   28aec:	mov	w1, #0x2f                  	// #47
   28af0:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   28af4:	str	x0, [x20]
   28af8:	cbz	x0, 28ad0 <__asan_cplus_demangle_mangled_name@@Base+0x97c>
   28afc:	add	x20, x0, #0x10
   28b00:	ldr	x0, [x19, #24]
   28b04:	ldrb	w1, [x0]
   28b08:	cmp	w1, #0x45
   28b0c:	b.ne	28ac0 <__asan_cplus_demangle_mangled_name@@Base+0x96c>  // b.any
   28b10:	add	x0, x0, #0x1
   28b14:	str	x0, [x19, #24]
   28b18:	str	x21, [x19, #64]
   28b1c:	ldr	x0, [sp, #56]
   28b20:	b	28ad4 <__asan_cplus_demangle_mangled_name@@Base+0x980>
   28b24:	ldr	x3, [x0, #24]
   28b28:	ldrb	w1, [x3]
   28b2c:	sub	w1, w1, #0x49
   28b30:	and	w1, w1, #0xff
   28b34:	cmp	w1, #0x1
   28b38:	b.hi	28b48 <__asan_cplus_demangle_mangled_name@@Base+0x9f4>  // b.pmore
   28b3c:	add	x3, x3, #0x1
   28b40:	str	x3, [x0, #24]
   28b44:	b	28a6c <__asan_cplus_demangle_mangled_name@@Base+0x918>
   28b48:	mov	x0, #0x0                   	// #0
   28b4c:	ret
   28b50:	stp	x29, x30, [sp, #-64]!
   28b54:	mov	x29, sp
   28b58:	ldr	x2, [x0, #24]
   28b5c:	stp	x19, x20, [sp, #16]
   28b60:	mov	x19, x0
   28b64:	str	x21, [sp, #32]
   28b68:	str	xzr, [sp, #56]
   28b6c:	ldrb	w3, [x2]
   28b70:	cmp	w3, w1, uxtb
   28b74:	b.ne	28b9c <__asan_cplus_demangle_mangled_name@@Base+0xa48>  // b.any
   28b78:	add	x2, x2, #0x1
   28b7c:	mov	x3, #0x0                   	// #0
   28b80:	ldr	x21, [sp, #32]
   28b84:	str	x2, [x0, #24]
   28b88:	ldp	x19, x20, [sp, #16]
   28b8c:	mov	w1, #0x2e                  	// #46
   28b90:	ldp	x29, x30, [sp], #64
   28b94:	mov	x2, #0x0                   	// #0
   28b98:	b	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   28b9c:	and	w21, w1, #0xff
   28ba0:	add	x20, sp, #0x38
   28ba4:	mov	x0, x19
   28ba8:	bl	289a8 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   28bac:	mov	x2, x0
   28bb0:	cbnz	x0, 28bc8 <__asan_cplus_demangle_mangled_name@@Base+0xa74>
   28bb4:	mov	x0, #0x0                   	// #0
   28bb8:	ldp	x19, x20, [sp, #16]
   28bbc:	ldr	x21, [sp, #32]
   28bc0:	ldp	x29, x30, [sp], #64
   28bc4:	ret
   28bc8:	mov	x0, x19
   28bcc:	mov	x3, #0x0                   	// #0
   28bd0:	mov	w1, #0x2e                  	// #46
   28bd4:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   28bd8:	str	x0, [x20]
   28bdc:	cbz	x0, 28bb4 <__asan_cplus_demangle_mangled_name@@Base+0xa60>
   28be0:	add	x20, x0, #0x10
   28be4:	ldr	x0, [x19, #24]
   28be8:	ldrb	w1, [x0]
   28bec:	cmp	w1, w21
   28bf0:	b.ne	28ba4 <__asan_cplus_demangle_mangled_name@@Base+0xa50>  // b.any
   28bf4:	add	x0, x0, #0x1
   28bf8:	str	x0, [x19, #24]
   28bfc:	ldr	x0, [sp, #56]
   28c00:	b	28bb8 <__asan_cplus_demangle_mangled_name@@Base+0xa64>
   28c04:	stp	x29, x30, [sp, #-80]!
   28c08:	cmp	w2, #0x0
   28c0c:	mov	x29, sp
   28c10:	stp	x19, x20, [sp, #16]
   28c14:	mov	x19, x0
   28c18:	mov	x20, x1
   28c1c:	ldr	x0, [x0, #24]
   28c20:	stp	x21, x22, [sp, #32]
   28c24:	mov	w21, w2
   28c28:	stp	x23, x24, [sp, #48]
   28c2c:	mov	x22, x1
   28c30:	mov	w24, #0x1d                  	// #29
   28c34:	str	x25, [sp, #64]
   28c38:	mov	w25, #0x1e                  	// #30
   28c3c:	mov	w23, #0x1c                  	// #28
   28c40:	ldrb	w3, [x0]
   28c44:	mov	w0, #0x1b                  	// #27
   28c48:	csel	w25, w25, w0, ne  // ne = any
   28c4c:	mov	w0, #0x1a                  	// #26
   28c50:	csel	w24, w24, w0, ne  // ne = any
   28c54:	mov	w0, #0x19                  	// #25
   28c58:	csel	w23, w23, w0, ne  // ne = any
   28c5c:	ldr	x4, [x19, #24]
   28c60:	mov	x0, x4
   28c64:	bl	24154 <__asan_backtrace_create_state@@Base+0x674>
   28c68:	cbnz	w0, 28cc0 <__asan_cplus_demangle_mangled_name@@Base+0xb6c>
   28c6c:	cmp	w3, #0x46
   28c70:	eor	w21, w21, #0x1
   28c74:	cset	w0, eq  // eq = none
   28c78:	tst	w21, w0
   28c7c:	b.eq	28e2c <__asan_cplus_demangle_mangled_name@@Base+0xcd8>  // b.none
   28c80:	mov	w1, #0x1d                  	// #29
   28c84:	mov	w2, #0x1e                  	// #30
   28c88:	mov	w3, #0x1c                  	// #28
   28c8c:	cmp	x22, x20
   28c90:	b.eq	28d2c <__asan_cplus_demangle_mangled_name@@Base+0xbd8>  // b.none
   28c94:	ldr	x20, [x20]
   28c98:	ldr	w0, [x20]
   28c9c:	cmp	w0, #0x1a
   28ca0:	b.eq	28e34 <__asan_cplus_demangle_mangled_name@@Base+0xce0>  // b.none
   28ca4:	cmp	w0, #0x1b
   28ca8:	b.eq	28e3c <__asan_cplus_demangle_mangled_name@@Base+0xce8>  // b.none
   28cac:	cmp	w0, #0x19
   28cb0:	b.ne	28cb8 <__asan_cplus_demangle_mangled_name@@Base+0xb64>  // b.any
   28cb4:	str	w3, [x20]
   28cb8:	add	x20, x20, #0x8
   28cbc:	b	28c8c <__asan_cplus_demangle_mangled_name@@Base+0xb38>
   28cc0:	add	x0, x4, #0x1
   28cc4:	str	x0, [x19, #24]
   28cc8:	cmp	w3, #0x72
   28ccc:	b.ne	28ce8 <__asan_cplus_demangle_mangled_name@@Base+0xb94>  // b.any
   28cd0:	ldr	w0, [x19, #72]
   28cd4:	mov	w1, w23
   28cd8:	add	w0, w0, #0x9
   28cdc:	str	w0, [x19, #72]
   28ce0:	mov	x3, #0x0                   	// #0
   28ce4:	b	28d70 <__asan_cplus_demangle_mangled_name@@Base+0xc1c>
   28ce8:	cmp	w3, #0x56
   28cec:	b.ne	28d04 <__asan_cplus_demangle_mangled_name@@Base+0xbb0>  // b.any
   28cf0:	ldr	w0, [x19, #72]
   28cf4:	mov	w1, w24
   28cf8:	add	w0, w0, #0x9
   28cfc:	str	w0, [x19, #72]
   28d00:	b	28ce0 <__asan_cplus_demangle_mangled_name@@Base+0xb8c>
   28d04:	cmp	w3, #0x4b
   28d08:	b.ne	28d20 <__asan_cplus_demangle_mangled_name@@Base+0xbcc>  // b.any
   28d0c:	ldr	w0, [x19, #72]
   28d10:	mov	w1, w25
   28d14:	add	w0, w0, #0x6
   28d18:	str	w0, [x19, #72]
   28d1c:	b	28ce0 <__asan_cplus_demangle_mangled_name@@Base+0xb8c>
   28d20:	ldrb	w0, [x4, #1]
   28d24:	cbnz	w0, 28d48 <__asan_cplus_demangle_mangled_name@@Base+0xbf4>
   28d28:	mov	x20, #0x0                   	// #0
   28d2c:	mov	x0, x20
   28d30:	ldp	x19, x20, [sp, #16]
   28d34:	ldp	x21, x22, [sp, #32]
   28d38:	ldp	x23, x24, [sp, #48]
   28d3c:	ldr	x25, [sp, #64]
   28d40:	ldp	x29, x30, [sp], #80
   28d44:	ret
   28d48:	add	x0, x4, #0x2
   28d4c:	str	x0, [x19, #24]
   28d50:	ldrb	w0, [x4, #1]
   28d54:	cmp	w0, #0x78
   28d58:	b.ne	28d94 <__asan_cplus_demangle_mangled_name@@Base+0xc40>  // b.any
   28d5c:	ldr	w0, [x19, #72]
   28d60:	mov	x3, #0x0                   	// #0
   28d64:	mov	w1, #0x4d                  	// #77
   28d68:	add	w0, w0, #0x11
   28d6c:	str	w0, [x19, #72]
   28d70:	mov	x0, x19
   28d74:	mov	x2, #0x0                   	// #0
   28d78:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   28d7c:	str	x0, [x22]
   28d80:	cbz	x0, 28d28 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>
   28d84:	add	x22, x0, #0x8
   28d88:	ldr	x0, [x19, #24]
   28d8c:	ldrb	w3, [x0]
   28d90:	b	28c5c <__asan_cplus_demangle_mangled_name@@Base+0xb08>
   28d94:	and	w2, w0, #0xffffffdf
   28d98:	and	w1, w2, #0xff
   28d9c:	cmp	w2, #0x4f
   28da0:	b.ne	28de8 <__asan_cplus_demangle_mangled_name@@Base+0xc94>  // b.any
   28da4:	ldr	w2, [x19, #72]
   28da8:	cmp	w0, #0x4f
   28dac:	add	w2, w2, #0x9
   28db0:	str	w2, [x19, #72]
   28db4:	b.ne	28ce0 <__asan_cplus_demangle_mangled_name@@Base+0xb8c>  // b.any
   28db8:	mov	x0, x19
   28dbc:	bl	289a8 <__asan_cplus_demangle_mangled_name@@Base+0x854>
   28dc0:	mov	x3, x0
   28dc4:	cbz	x0, 28d28 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>
   28dc8:	ldr	x0, [x19, #24]
   28dcc:	ldrb	w1, [x0]
   28dd0:	cmp	w1, #0x45
   28dd4:	b.ne	28d28 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>  // b.any
   28dd8:	add	x0, x0, #0x1
   28ddc:	mov	w1, #0x4f                  	// #79
   28de0:	str	x0, [x19, #24]
   28de4:	b	28d70 <__asan_cplus_demangle_mangled_name@@Base+0xc1c>
   28de8:	cmp	w0, #0x77
   28dec:	b.ne	28d28 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>  // b.any
   28df0:	ldr	w0, [x19, #72]
   28df4:	add	w0, w0, #0x6
   28df8:	str	w0, [x19, #72]
   28dfc:	mov	x0, x19
   28e00:	bl	27050 <__asan_cplus_demangle_type@@Base+0x6e8>
   28e04:	mov	x3, x0
   28e08:	cbz	x0, 28d28 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>
   28e0c:	ldr	x0, [x19, #24]
   28e10:	ldrb	w1, [x0]
   28e14:	cmp	w1, #0x45
   28e18:	b.ne	28d28 <__asan_cplus_demangle_mangled_name@@Base+0xbd4>  // b.any
   28e1c:	add	x0, x0, #0x1
   28e20:	mov	w1, #0x50                  	// #80
   28e24:	str	x0, [x19, #24]
   28e28:	b	28d70 <__asan_cplus_demangle_mangled_name@@Base+0xc1c>
   28e2c:	mov	x20, x22
   28e30:	b	28d2c <__asan_cplus_demangle_mangled_name@@Base+0xbd8>
   28e34:	str	w1, [x20]
   28e38:	b	28cb8 <__asan_cplus_demangle_mangled_name@@Base+0xb64>
   28e3c:	str	w2, [x20]
   28e40:	b	28cb8 <__asan_cplus_demangle_mangled_name@@Base+0xb64>

0000000000028e44 <__asan_cplus_demangle_print_callback@@Base>:
   28e44:	stp	x29, x30, [sp, #-416]!
   28e48:	mov	w4, w0
   28e4c:	mov	x5, x1
   28e50:	mov	x29, sp
   28e54:	stp	x19, x20, [sp, #16]
   28e58:	add	x19, x29, #0x28
   28e5c:	mov	x0, x19
   28e60:	str	xzr, [x29, #296]
   28e64:	strb	wzr, [x29, #304]
   28e68:	stp	x2, x3, [x29, #312]
   28e6c:	stp	xzr, xzr, [x29, #328]
   28e70:	stp	xzr, xzr, [x29, #344]
   28e74:	stp	xzr, xzr, [x29, #360]
   28e78:	stp	xzr, xzr, [x29, #376]
   28e7c:	stp	xzr, xzr, [x29, #392]
   28e80:	bl	23ce4 <__asan_backtrace_create_state@@Base+0x204>
   28e84:	ldr	w0, [x29, #348]
   28e88:	cmp	w0, #0x7ff
   28e8c:	b.gt	28e94 <__asan_cplus_demangle_print_callback@@Base+0x50>
   28e90:	str	wzr, [x29, #348]
   28e94:	ldr	w3, [x29, #388]
   28e98:	mov	w0, #0x1                   	// #1
   28e9c:	ldr	w2, [x29, #404]
   28ea0:	mov	x20, sp
   28ea4:	cmp	w3, #0x0
   28ea8:	str	xzr, [x29, #408]
   28eac:	mul	w2, w3, w2
   28eb0:	csel	w3, w3, w0, gt
   28eb4:	str	w2, [x29, #404]
   28eb8:	cmp	w2, #0x0
   28ebc:	sub	sp, sp, w3, sxtw #4
   28ec0:	csel	w2, w2, w0, gt
   28ec4:	mov	x1, sp
   28ec8:	str	x1, [x29, #376]
   28ecc:	mov	w1, w4
   28ed0:	sub	sp, sp, w2, sxtw #4
   28ed4:	mov	x2, x5
   28ed8:	mov	x0, sp
   28edc:	str	x0, [x29, #392]
   28ee0:	mov	x0, x19
   28ee4:	bl	25cd0 <__asan_backtrace_create_state@@Base+0x21f0>
   28ee8:	mov	x0, x19
   28eec:	mov	sp, x20
   28ef0:	bl	23da4 <__asan_backtrace_create_state@@Base+0x2c4>
   28ef4:	ldr	w0, [x29, #344]
   28ef8:	mov	sp, x29
   28efc:	cmp	w0, #0x0
   28f00:	cset	w0, eq  // eq = none
   28f04:	ldp	x19, x20, [sp, #16]
   28f08:	ldp	x29, x30, [sp], #416
   28f0c:	ret

0000000000028f10 <__asan_cplus_demangle_print@@Base>:
   28f10:	stp	x29, x30, [sp, #-80]!
   28f14:	mov	x29, sp
   28f18:	stp	x19, x20, [sp, #16]
   28f1c:	mov	w20, w0
   28f20:	mov	x19, x3
   28f24:	stp	x21, x22, [sp, #32]
   28f28:	mov	x21, x1
   28f2c:	add	x22, sp, #0x30
   28f30:	stp	xzr, xzr, [sp, #48]
   28f34:	str	xzr, [sp, #64]
   28f38:	str	wzr, [sp, #72]
   28f3c:	cbz	w2, 28f4c <__asan_cplus_demangle_print@@Base+0x3c>
   28f40:	sxtw	x1, w2
   28f44:	mov	x0, x22
   28f48:	bl	242c0 <__asan_backtrace_create_state@@Base+0x7e0>
   28f4c:	adrp	x2, 24000 <__asan_backtrace_create_state@@Base+0x520>
   28f50:	mov	x3, x22
   28f54:	add	x2, x2, #0x338
   28f58:	mov	x1, x21
   28f5c:	mov	w0, w20
   28f60:	bl	6a70 <__asan_cplus_demangle_print_callback@plt>
   28f64:	cbnz	w0, 28f88 <__asan_cplus_demangle_print@@Base+0x78>
   28f68:	ldr	x0, [sp, #48]
   28f6c:	bl	6760 <free@plt>
   28f70:	str	xzr, [x19]
   28f74:	mov	x0, #0x0                   	// #0
   28f78:	ldp	x19, x20, [sp, #16]
   28f7c:	ldp	x21, x22, [sp, #32]
   28f80:	ldp	x29, x30, [sp], #80
   28f84:	ret
   28f88:	ldr	w0, [sp, #72]
   28f8c:	cmp	w0, #0x0
   28f90:	ldr	x0, [sp, #64]
   28f94:	csinc	x0, x0, xzr, eq  // eq = none
   28f98:	str	x0, [x19]
   28f9c:	ldr	x0, [sp, #48]
   28fa0:	b	28f78 <__asan_cplus_demangle_print@@Base+0x68>

0000000000028fa4 <__asan_cplus_demangle_init_info@@Base>:
   28fa4:	add	x4, x0, x2
   28fa8:	stp	x0, x4, [x3]
   28fac:	str	w1, [x3, #16]
   28fb0:	str	x0, [x3, #24]
   28fb4:	lsl	w0, w2, #1
   28fb8:	str	wzr, [x3, #40]
   28fbc:	str	w0, [x3, #44]
   28fc0:	stp	wzr, w2, [x3, #56]
   28fc4:	stp	xzr, xzr, [x3, #64]
   28fc8:	str	xzr, [x3, #80]
   28fcc:	ret
   28fd0:	stp	x29, x30, [sp, #-176]!
   28fd4:	mov	x29, sp
   28fd8:	stp	x19, x20, [sp, #16]
   28fdc:	mov	x19, x0
   28fe0:	stp	x21, x22, [sp, #32]
   28fe4:	mov	w21, w1
   28fe8:	mov	x22, x2
   28fec:	stp	x23, x24, [sp, #48]
   28ff0:	mov	x23, x3
   28ff4:	stp	x25, x26, [sp, #64]
   28ff8:	ldrb	w0, [x0]
   28ffc:	cmp	w0, #0x5f
   29000:	b.ne	29010 <__asan_cplus_demangle_init_info@@Base+0x6c>  // b.any
   29004:	ldrb	w0, [x19, #1]
   29008:	cmp	w0, #0x5a
   2900c:	b.eq	29188 <__asan_cplus_demangle_init_info@@Base+0x1e4>  // b.none
   29010:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   29014:	mov	x0, x19
   29018:	add	x1, x1, #0x4e0
   2901c:	mov	x2, #0x8                   	// #8
   29020:	bl	6bd0 <__asan_internal_strncmp@plt>
   29024:	cbnz	w0, 29164 <__asan_cplus_demangle_init_info@@Base+0x1c0>
   29028:	ldrb	w0, [x19, #8]
   2902c:	sub	w0, w0, #0x24
   29030:	and	w0, w0, #0xff
   29034:	cmp	w0, #0x3b
   29038:	b.hi	29164 <__asan_cplus_demangle_init_info@@Base+0x1c0>  // b.pmore
   2903c:	mov	x1, #0x401                 	// #1025
   29040:	movk	x1, #0x800, lsl #48
   29044:	lsr	x0, x1, x0
   29048:	tbz	w0, #0, 29164 <__asan_cplus_demangle_init_info@@Base+0x1c0>
   2904c:	ldrb	w0, [x19, #9]
   29050:	mov	w1, #0x49                  	// #73
   29054:	cmp	w0, #0x44
   29058:	ccmp	w0, w1, #0x4, ne  // ne = any
   2905c:	b.ne	29164 <__asan_cplus_demangle_init_info@@Base+0x1c0>  // b.any
   29060:	ldrb	w1, [x19, #10]
   29064:	cmp	w1, #0x5f
   29068:	b.ne	29164 <__asan_cplus_demangle_init_info@@Base+0x1c0>  // b.any
   2906c:	cmp	w0, #0x49
   29070:	cset	w20, ne  // ne = any
   29074:	add	w20, w20, #0x2
   29078:	mov	x0, x19
   2907c:	add	x25, x29, #0x58
   29080:	bl	6850 <__asan_internal_strlen@plt>
   29084:	mov	x2, x0
   29088:	mov	x3, x25
   2908c:	mov	x0, x19
   29090:	mov	w1, w21
   29094:	bl	6700 <__asan_cplus_demangle_init_info@plt>
   29098:	ldr	w0, [x29, #132]
   2909c:	tbnz	w21, #18, 290a8 <__asan_cplus_demangle_init_info@@Base+0x104>
   290a0:	cmp	w0, #0x800
   290a4:	b.hi	29168 <__asan_cplus_demangle_init_info@@Base+0x1c4>  // b.pmore
   290a8:	mov	w1, #0x18                  	// #24
   290ac:	mov	x24, sp
   290b0:	cmp	w20, #0x1
   290b4:	smull	x0, w0, w1
   290b8:	add	x0, x0, #0xf
   290bc:	and	x0, x0, #0xfffffffffffffff0
   290c0:	sub	sp, sp, x0
   290c4:	ldrsw	x0, [x29, #148]
   290c8:	mov	x1, sp
   290cc:	str	x1, [x29, #120]
   290d0:	lsl	x0, x0, #3
   290d4:	add	x0, x0, #0xf
   290d8:	and	x0, x0, #0xfffffffffffffff0
   290dc:	sub	sp, sp, x0
   290e0:	mov	x0, sp
   290e4:	str	x0, [x29, #136]
   290e8:	b.eq	291d4 <__asan_cplus_demangle_init_info@@Base+0x230>  // b.none
   290ec:	sub	w0, w20, #0x2
   290f0:	cmp	w0, #0x1
   290f4:	b.hi	29198 <__asan_cplus_demangle_init_info@@Base+0x1f4>  // b.pmore
   290f8:	ldr	x0, [x29, #112]
   290fc:	cmp	w20, #0x2
   29100:	cset	w19, ne  // ne = any
   29104:	add	x26, x0, #0xb
   29108:	str	x26, [x29, #112]
   2910c:	add	w19, w19, #0x44
   29110:	ldrb	w1, [x0, #11]
   29114:	cmp	w1, #0x5f
   29118:	b.eq	291e4 <__asan_cplus_demangle_init_info@@Base+0x240>  // b.none
   2911c:	mov	x0, x26
   29120:	bl	6850 <__asan_internal_strlen@plt>
   29124:	mov	x1, x26
   29128:	mov	w2, w0
   2912c:	mov	x0, x25
   29130:	bl	2651c <__asan_cplus_demangle_fill_name@@Base+0x2c>
   29134:	mov	w1, w19
   29138:	mov	x2, x0
   2913c:	mov	x3, #0x0                   	// #0
   29140:	mov	x0, x25
   29144:	bl	23bc4 <__asan_backtrace_create_state@@Base+0xe4>
   29148:	mov	x19, x0
   2914c:	ldr	x0, [x29, #112]
   29150:	bl	6850 <__asan_internal_strlen@plt>
   29154:	ldr	x1, [x29, #112]
   29158:	add	x1, x1, x0
   2915c:	str	x1, [x29, #112]
   29160:	b	291a4 <__asan_cplus_demangle_init_info@@Base+0x200>
   29164:	tbnz	w21, #4, 29190 <__asan_cplus_demangle_init_info@@Base+0x1ec>
   29168:	mov	w0, #0x0                   	// #0
   2916c:	mov	sp, x29
   29170:	ldp	x19, x20, [sp, #16]
   29174:	ldp	x21, x22, [sp, #32]
   29178:	ldp	x23, x24, [sp, #48]
   2917c:	ldp	x25, x26, [sp, #64]
   29180:	ldp	x29, x30, [sp], #176
   29184:	ret
   29188:	mov	w20, #0x1                   	// #1
   2918c:	b	29078 <__asan_cplus_demangle_init_info@@Base+0xd4>
   29190:	mov	w20, #0x0                   	// #0
   29194:	b	29078 <__asan_cplus_demangle_init_info@@Base+0xd4>
   29198:	mov	x0, x25
   2919c:	bl	67c0 <__asan_cplus_demangle_type@plt>
   291a0:	mov	x19, x0
   291a4:	tbz	w21, #0, 291b4 <__asan_cplus_demangle_init_info@@Base+0x210>
   291a8:	ldr	x0, [x29, #112]
   291ac:	ldrb	w0, [x0]
   291b0:	cbnz	w0, 29208 <__asan_cplus_demangle_init_info@@Base+0x264>
   291b4:	cbz	x19, 29208 <__asan_cplus_demangle_init_info@@Base+0x264>
   291b8:	mov	x3, x23
   291bc:	mov	x2, x22
   291c0:	mov	x1, x19
   291c4:	mov	w0, w21
   291c8:	bl	6a70 <__asan_cplus_demangle_print_callback@plt>
   291cc:	mov	sp, x24
   291d0:	b	2916c <__asan_cplus_demangle_init_info@@Base+0x1c8>
   291d4:	mov	w1, w20
   291d8:	mov	x0, x25
   291dc:	bl	6d10 <__asan_cplus_demangle_mangled_name@plt>
   291e0:	b	291a0 <__asan_cplus_demangle_init_info@@Base+0x1fc>
   291e4:	ldrb	w1, [x0, #12]
   291e8:	cmp	w1, #0x5a
   291ec:	b.ne	2911c <__asan_cplus_demangle_init_info@@Base+0x178>  // b.any
   291f0:	add	x0, x0, #0xd
   291f4:	mov	w1, #0x0                   	// #0
   291f8:	str	x0, [x29, #112]
   291fc:	mov	x0, x25
   29200:	bl	27b5c <__asan_cplus_demangle_type@@Base+0x11f4>
   29204:	b	29134 <__asan_cplus_demangle_init_info@@Base+0x190>
   29208:	mov	w0, #0x0                   	// #0
   2920c:	b	291cc <__asan_cplus_demangle_init_info@@Base+0x228>
   29210:	stp	x29, x30, [sp, #-64]!
   29214:	mov	x29, sp
   29218:	add	x3, sp, #0x20
   2921c:	str	x19, [sp, #16]
   29220:	mov	x19, x2
   29224:	adrp	x2, 24000 <__asan_backtrace_create_state@@Base+0x520>
   29228:	add	x2, x2, #0x338
   2922c:	stp	xzr, xzr, [sp, #32]
   29230:	str	xzr, [sp, #48]
   29234:	str	wzr, [sp, #56]
   29238:	bl	28fd0 <__asan_cplus_demangle_init_info@@Base+0x2c>
   2923c:	cbnz	w0, 2925c <__asan_cplus_demangle_init_info@@Base+0x2b8>
   29240:	ldr	x0, [sp, #32]
   29244:	bl	6760 <free@plt>
   29248:	str	xzr, [x19]
   2924c:	mov	x0, #0x0                   	// #0
   29250:	ldr	x19, [sp, #16]
   29254:	ldp	x29, x30, [sp], #64
   29258:	ret
   2925c:	ldr	w0, [sp, #56]
   29260:	cmp	w0, #0x0
   29264:	ldr	x0, [sp, #48]
   29268:	csinc	x0, x0, xzr, eq  // eq = none
   2926c:	str	x0, [x19]
   29270:	ldr	x0, [sp, #32]
   29274:	b	29250 <__asan_cplus_demangle_init_info@@Base+0x2ac>
   29278:	stp	x29, x30, [sp, #-144]!
   2927c:	mov	x29, sp
   29280:	stp	x19, x20, [sp, #16]
   29284:	mov	x19, x1
   29288:	mov	x20, x2
   2928c:	stp	x21, x22, [sp, #32]
   29290:	mov	x21, x0
   29294:	add	x22, x29, #0x38
   29298:	str	wzr, [x1]
   2929c:	str	wzr, [x2]
   292a0:	bl	6850 <__asan_internal_strlen@plt>
   292a4:	mov	x2, x0
   292a8:	mov	x3, x22
   292ac:	mov	x0, x21
   292b0:	mov	w1, #0x4000                	// #16384
   292b4:	bl	6700 <__asan_cplus_demangle_init_info@plt>
   292b8:	ldr	w0, [x29, #100]
   292bc:	mov	w1, #0x18                  	// #24
   292c0:	smull	x0, w0, w1
   292c4:	add	x0, x0, #0xf
   292c8:	and	x0, x0, #0xfffffffffffffff0
   292cc:	sub	sp, sp, x0
   292d0:	ldrsw	x0, [x29, #116]
   292d4:	mov	x1, sp
   292d8:	str	x1, [x29, #88]
   292dc:	mov	w1, #0x1                   	// #1
   292e0:	lsl	x0, x0, #3
   292e4:	add	x0, x0, #0xf
   292e8:	and	x0, x0, #0xfffffffffffffff0
   292ec:	sub	sp, sp, x0
   292f0:	mov	x0, sp
   292f4:	str	x0, [x29, #104]
   292f8:	mov	x0, x22
   292fc:	bl	6d10 <__asan_cplus_demangle_mangled_name@plt>
   29300:	adrp	x2, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   29304:	add	x2, x2, #0x234
   29308:	cbz	x0, 29348 <__asan_cplus_demangle_init_info@@Base+0x3a4>
   2930c:	ldr	w1, [x0]
   29310:	sub	w1, w1, #0x1
   29314:	cmp	w1, #0x7
   29318:	b.hi	29368 <__asan_cplus_demangle_init_info@@Base+0x3c4>  // b.pmore
   2931c:	ldrb	w1, [x2, w1, uxtw]
   29320:	adr	x3, 2932c <__asan_cplus_demangle_init_info@@Base+0x388>
   29324:	add	x1, x3, w1, sxtb #2
   29328:	br	x1
   2932c:	ldr	x0, [x0, #8]
   29330:	b	29308 <__asan_cplus_demangle_init_info@@Base+0x364>
   29334:	ldr	x0, [x0, #16]
   29338:	b	29308 <__asan_cplus_demangle_init_info@@Base+0x364>
   2933c:	ldr	w0, [x0, #8]
   29340:	str	w0, [x19]
   29344:	mov	w0, #0x1                   	// #1
   29348:	mov	sp, x29
   2934c:	ldp	x19, x20, [sp, #16]
   29350:	ldp	x21, x22, [sp, #32]
   29354:	ldp	x29, x30, [sp], #144
   29358:	ret
   2935c:	ldr	w0, [x0, #8]
   29360:	str	w0, [x20]
   29364:	b	29344 <__asan_cplus_demangle_init_info@@Base+0x3a0>
   29368:	mov	w0, #0x0                   	// #0
   2936c:	b	29348 <__asan_cplus_demangle_init_info@@Base+0x3a4>

0000000000029370 <__asan_cplus_demangle_v3@@Base>:
   29370:	stp	x29, x30, [sp, #-32]!
   29374:	mov	x29, sp
   29378:	add	x2, sp, #0x18
   2937c:	bl	29210 <__asan_cplus_demangle_init_info@@Base+0x26c>
   29380:	ldp	x29, x30, [sp], #32
   29384:	ret

0000000000029388 <__asan_cplus_demangle_v3_callback@@Base>:
   29388:	b	28fd0 <__asan_cplus_demangle_init_info@@Base+0x2c>

000000000002938c <__asan_java_demangle_v3@@Base>:
   2938c:	stp	x29, x30, [sp, #-32]!
   29390:	mov	w1, #0x25                  	// #37
   29394:	mov	x29, sp
   29398:	add	x2, sp, #0x18
   2939c:	bl	29210 <__asan_cplus_demangle_init_info@@Base+0x26c>
   293a0:	ldp	x29, x30, [sp], #32
   293a4:	ret

00000000000293a8 <__asan_java_demangle_v3_callback@@Base>:
   293a8:	mov	x3, x2
   293ac:	mov	x2, x1
   293b0:	mov	w1, #0x25                  	// #37
   293b4:	b	28fd0 <__asan_cplus_demangle_init_info@@Base+0x2c>

00000000000293b8 <__asan_is_gnu_v3_mangled_ctor@@Base>:
   293b8:	stp	x29, x30, [sp, #-32]!
   293bc:	mov	x29, sp
   293c0:	add	x2, sp, #0x1c
   293c4:	add	x1, sp, #0x18
   293c8:	bl	29278 <__asan_cplus_demangle_init_info@@Base+0x2d4>
   293cc:	cmp	w0, #0x0
   293d0:	ldr	w0, [sp, #24]
   293d4:	ldp	x29, x30, [sp], #32
   293d8:	csel	w0, w0, wzr, ne  // ne = any
   293dc:	ret

00000000000293e0 <__asan_is_gnu_v3_mangled_dtor@@Base>:
   293e0:	stp	x29, x30, [sp, #-32]!
   293e4:	mov	x29, sp
   293e8:	add	x2, sp, #0x1c
   293ec:	add	x1, sp, #0x18
   293f0:	bl	29278 <__asan_cplus_demangle_init_info@@Base+0x2d4>
   293f4:	cmp	w0, #0x0
   293f8:	ldr	w0, [sp, #28]
   293fc:	ldp	x29, x30, [sp], #32
   29400:	csel	w0, w0, wzr, ne  // ne = any
   29404:	ret

0000000000029408 <__asan_internal_memcpy@@Base>:
   29408:	b	14314 <__sanitizer_set_report_fd@@Base+0x1860>

000000000002940c <__asan_internal_memset@@Base>:
   2940c:	b	14380 <__sanitizer_set_report_fd@@Base+0x18cc>

0000000000029410 <__asan_internal_memcmp@@Base>:
   29410:	b	142dc <__sanitizer_set_report_fd@@Base+0x1828>

0000000000029414 <__asan_internal_strcmp@@Base>:
   29414:	b	143e0 <__sanitizer_set_report_fd@@Base+0x192c>

0000000000029418 <__asan_internal_strncmp@@Base>:
   29418:	b	14410 <__sanitizer_set_report_fd@@Base+0x195c>

000000000002941c <__asan_internal_strlen@@Base>:
   2941c:	b	144dc <__sanitizer_set_report_fd@@Base+0x1a28>

0000000000029420 <__asan_internal_strnlen@@Base>:
   29420:	b	14650 <__sanitizer_set_report_fd@@Base+0x1b9c>
   29424:	stp	x29, x30, [sp, #-16]!
   29428:	mov	x0, x4
   2942c:	mov	w2, #0xffffffff            	// #-1
   29430:	mov	x29, sp
   29434:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   29438:	add	x1, x1, #0x8b2
   2943c:	blr	x3
   29440:	mov	w0, #0x0                   	// #0
   29444:	ldp	x29, x30, [sp], #16
   29448:	ret
   2944c:	mov	x16, x3
   29450:	mov	x0, x4
   29454:	mov	w2, #0xffffffff            	// #-1
   29458:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2945c:	add	x1, x1, #0x8d2
   29460:	br	x16
   29464:	ldr	x2, [x0, #8]
   29468:	ldr	x1, [x1, #8]
   2946c:	cmp	x2, x1
   29470:	cset	w0, hi  // hi = pmore
   29474:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
   29478:	ret
   2947c:	ldr	x2, [x0]
   29480:	ldr	x0, [x1, #8]
   29484:	cmp	x0, x2
   29488:	b.hi	294a0 <__asan_internal_strnlen@@Base+0x80>  // b.pmore
   2948c:	ldr	x1, [x1, #16]
   29490:	add	x0, x0, x1
   29494:	cmp	x0, x2
   29498:	cset	w0, ls  // ls = plast
   2949c:	ret
   294a0:	mov	w0, #0xffffffff            	// #-1
   294a4:	b	2949c <__asan_internal_strnlen@@Base+0x7c>
   294a8:	stp	x29, x30, [sp, #-192]!
   294ac:	mov	x29, sp
   294b0:	stp	x19, x20, [sp, #16]
   294b4:	add	x20, sp, #0x60
   294b8:	mov	x19, x3
   294bc:	stp	x21, x22, [sp, #32]
   294c0:	mov	x22, x0
   294c4:	add	x21, x2, #0x1, lsl #12
   294c8:	mov	x0, x20
   294cc:	mov	x2, #0x20                  	// #32
   294d0:	stp	x23, x24, [sp, #48]
   294d4:	mov	x23, x1
   294d8:	mov	w1, #0x0                   	// #0
   294dc:	str	x25, [sp, #64]
   294e0:	bl	68d0 <__asan_internal_memset@plt>
   294e4:	add	x2, sp, #0xa0
   294e8:	add	x5, sp, #0x80
   294ec:	mov	x3, #0x0                   	// #0
   294f0:	ldrb	w4, [x22, x3]
   294f4:	cmp	w4, #0xf
   294f8:	b.ls	29518 <__asan_internal_strnlen@@Base+0xf8>  // b.plast
   294fc:	mov	w0, #0x0                   	// #0
   29500:	ldp	x19, x20, [sp, #16]
   29504:	ldp	x21, x22, [sp, #32]
   29508:	ldp	x23, x24, [sp, #48]
   2950c:	ldr	x25, [sp, #64]
   29510:	ldp	x29, x30, [sp], #192
   29514:	ret
   29518:	sbfiz	x1, x4, #1, #32
   2951c:	ldrh	w4, [x20, w4, sxtw #1]
   29520:	and	w0, w3, #0xffff
   29524:	cbnz	w4, 29680 <__asan_internal_strnlen@@Base+0x260>
   29528:	strh	w0, [x5, x1]
   2952c:	strh	w0, [x2, x1]
   29530:	ldrb	w0, [x22, x3]
   29534:	add	x3, x3, #0x1
   29538:	cmp	x23, x3
   2953c:	lsl	x0, x0, #1
   29540:	ldrh	w1, [x20, x0]
   29544:	add	w1, w1, #0x1
   29548:	strh	w1, [x20, x0]
   2954c:	b.ne	294f0 <__asan_internal_strnlen@@Base+0xd0>  // b.any
   29550:	mov	w1, #0x0                   	// #0
   29554:	mov	x0, x19
   29558:	mov	x2, #0x800                 	// #2048
   2955c:	bl	68d0 <__asan_internal_memset@plt>
   29560:	mov	x0, #0x1                   	// #1
   29564:	add	x11, sp, #0x80
   29568:	mov	w10, w0
   2956c:	mov	w1, #0x0                   	// #0
   29570:	ldrh	w3, [x20, x0, lsl #1]
   29574:	cbz	w3, 295b0 <__asan_internal_strnlen@@Base+0x190>
   29578:	lsl	w4, w10, w0
   2957c:	cmp	w4, w3
   29580:	b.cc	294fc <__asan_internal_strnlen@@Base+0xdc>  // b.lo, b.ul, b.last
   29584:	ubfiz	w2, w0, #9, #7
   29588:	sub	w8, w0, #0x1
   2958c:	sub	w2, w2, #0x200
   29590:	ldrh	w5, [x11, x0, lsl #1]
   29594:	sxtw	x7, w4
   29598:	and	w2, w2, #0xffff
   2959c:	and	x4, x3, #0xffff
   295a0:	lsl	w8, w10, w8
   295a4:	mov	x6, #0x0                   	// #0
   295a8:	cmp	x4, x6
   295ac:	b.hi	29694 <__asan_internal_strnlen@@Base+0x274>  // b.pmore
   295b0:	add	x0, x0, #0x1
   295b4:	cmp	x0, #0x9
   295b8:	b.ne	29570 <__asan_internal_strnlen@@Base+0x150>  // b.any
   295bc:	add	x9, sp, #0x50
   295c0:	mov	x5, #0x0                   	// #0
   295c4:	mov	w8, #0x1                   	// #1
   295c8:	ldrh	w2, [x20, x0, lsl #1]
   295cc:	cbz	w2, 295ec <__asan_internal_strnlen@@Base+0x1cc>
   295d0:	sub	w10, w0, #0x1
   295d4:	mov	w3, #0x0                   	// #0
   295d8:	strh	w1, [x5, x9]
   295dc:	mov	w6, w3
   295e0:	cmp	x0, w3, uxtw
   295e4:	b.hi	29700 <__asan_internal_strnlen@@Base+0x2e0>  // b.pmore
   295e8:	cbnz	w2, 294fc <__asan_internal_strnlen@@Base+0xdc>
   295ec:	add	x0, x0, #0x1
   295f0:	add	x5, x5, #0x2
   295f4:	cmp	x0, #0x10
   295f8:	b.ne	295c8 <__asan_internal_strnlen@@Base+0x1a8>  // b.any
   295fc:	add	x16, sp, #0x80
   29600:	add	x17, sp, #0x50
   29604:	mov	x10, #0x6                   	// #6
   29608:	mov	x7, #0x0                   	// #0
   2960c:	mov	x0, #0xf                   	// #15
   29610:	mov	w11, #0x1                   	// #1
   29614:	ldrh	w2, [x20, x0, lsl #1]
   29618:	cbz	w2, 29668 <__asan_internal_strnlen@@Base+0x248>
   2961c:	sub	w1, w0, #0x8
   29620:	ubfiz	w14, w0, #9, #7
   29624:	sub	w12, w14, #0x1, lsl #12
   29628:	sub	w13, w0, #0x1
   2962c:	ldrh	w8, [x16, x0, lsl #1]
   29630:	lsl	w1, w11, w1
   29634:	ldrh	w6, [x17, x10, lsl #1]
   29638:	sub	x15, x0, #0x8
   2963c:	and	w12, w12, #0xffff
   29640:	and	x2, x2, #0xffff
   29644:	sxtw	x18, w1
   29648:	mov	w5, w1
   2964c:	lsl	w13, w11, w13
   29650:	mov	x1, #0x0                   	// #0
   29654:	mov	x22, #0x0                   	// #0
   29658:	mov	x4, #0x100                 	// #256
   2965c:	mov	x9, #0x0                   	// #0
   29660:	cmp	x2, x9
   29664:	b.hi	2974c <__asan_internal_strnlen@@Base+0x32c>  // b.pmore
   29668:	sub	x0, x0, #0x1
   2966c:	sub	x10, x10, #0x1
   29670:	cmp	x0, #0x8
   29674:	b.ne	29614 <__asan_internal_strnlen@@Base+0x1f4>  // b.any
   29678:	mov	w0, #0x1                   	// #1
   2967c:	b	29500 <__asan_internal_strnlen@@Base+0xe0>
   29680:	ldrh	w1, [x2, x1]
   29684:	strh	w0, [x21, x1, lsl #1]
   29688:	ldrb	w1, [x22, x3]
   2968c:	strh	w0, [x2, x1, lsl #1]
   29690:	b	29530 <__asan_internal_strnlen@@Base+0x110>
   29694:	tst	w5, #0xfe00
   29698:	b.ne	294fc <__asan_internal_strnlen@@Base+0xdc>  // b.any
   2969c:	orr	w9, w2, w5
   296a0:	mov	w3, w1
   296a4:	cmp	x3, #0xff
   296a8:	b.ls	296e4 <__asan_internal_strnlen@@Base+0x2c4>  // b.plast
   296ac:	add	x6, x6, #0x1
   296b0:	cmp	x6, x4
   296b4:	b.cs	296c0 <__asan_internal_strnlen@@Base+0x2a0>  // b.hs, b.nlast
   296b8:	ubfiz	x5, x5, #1, #16
   296bc:	ldrh	w5, [x21, x5]
   296c0:	mov	w3, w8
   296c4:	tst	w1, w3
   296c8:	b.ne	296f8 <__asan_internal_strnlen@@Base+0x2d8>  // b.any
   296cc:	cbz	w3, 296dc <__asan_internal_strnlen@@Base+0x2bc>
   296d0:	sub	w9, w3, #0x1
   296d4:	and	w1, w9, w1
   296d8:	add	w3, w3, w1
   296dc:	mov	w1, w3
   296e0:	b	295a8 <__asan_internal_strnlen@@Base+0x188>
   296e4:	ldrh	w12, [x19, x3, lsl #1]
   296e8:	cbnz	w12, 294fc <__asan_internal_strnlen@@Base+0xdc>
   296ec:	strh	w9, [x19, x3, lsl #1]
   296f0:	add	x3, x3, x7
   296f4:	b	296a4 <__asan_internal_strnlen@@Base+0x284>
   296f8:	lsr	w3, w3, #1
   296fc:	b	296c4 <__asan_internal_strnlen@@Base+0x2a4>
   29700:	lsr	w4, w2, w3
   29704:	tbz	w4, #0, 29734 <__asan_internal_strnlen@@Base+0x314>
   29708:	sub	w4, w10, w3
   2970c:	sub	x6, x0, x6
   29710:	mov	w7, #0x0                   	// #0
   29714:	lsl	w4, w8, w4
   29718:	cmp	x6, w7, uxtw
   2971c:	b.ls	2972c <__asan_internal_strnlen@@Base+0x30c>  // b.plast
   29720:	tst	w1, w4
   29724:	b.ne	2973c <__asan_internal_strnlen@@Base+0x31c>  // b.any
   29728:	add	w1, w1, w4
   2972c:	lsl	w4, w8, w3
   29730:	bic	w2, w2, w4
   29734:	add	w3, w3, #0x1
   29738:	b	295dc <__asan_internal_strnlen@@Base+0x1bc>
   2973c:	bic	w1, w1, w4
   29740:	add	w7, w7, #0x1
   29744:	lsr	w4, w4, #1
   29748:	b	29718 <__asan_internal_strnlen@@Base+0x2f8>
   2974c:	and	x23, x6, #0xff
   29750:	cmp	x4, w6, uxtb
   29754:	b.eq	297f0 <__asan_internal_strnlen@@Base+0x3d0>  // b.none
   29758:	ldrh	w1, [x19, x23, lsl #1]
   2975c:	lsl	x3, x23, #1
   29760:	cbnz	w1, 297d8 <__asan_internal_strnlen@@Base+0x3b8>
   29764:	tst	x7, #0xfffffffffffffe00
   29768:	b.ne	294fc <__asan_internal_strnlen@@Base+0xdc>  // b.any
   2976c:	add	w1, w14, w7
   29770:	mov	x22, x7
   29774:	add	x7, x18, x7
   29778:	strh	w1, [x19, x3]
   2977c:	mov	x1, x15
   29780:	add	x4, x19, x22, lsl #1
   29784:	orr	w24, w12, w8
   29788:	lsr	w3, w6, #8
   2978c:	add	x4, x4, #0x200
   29790:	lsl	w30, w11, w1
   29794:	cmp	x30, x3
   29798:	b.hi	297f8 <__asan_internal_strnlen@@Base+0x3d8>  // b.pmore
   2979c:	add	x9, x9, #0x1
   297a0:	cmp	x9, x2
   297a4:	b.cs	297b0 <__asan_internal_strnlen@@Base+0x390>  // b.hs, b.nlast
   297a8:	ubfiz	x8, x8, #1, #16
   297ac:	ldrh	w8, [x21, x8]
   297b0:	mov	w3, w13
   297b4:	tst	w6, w3
   297b8:	b.ne	2980c <__asan_internal_strnlen@@Base+0x3ec>  // b.any
   297bc:	cbz	w3, 297cc <__asan_internal_strnlen@@Base+0x3ac>
   297c0:	sub	w4, w3, #0x1
   297c4:	and	w6, w4, w6
   297c8:	add	w3, w3, w6
   297cc:	mov	x4, x23
   297d0:	mov	w6, w3
   297d4:	b	29660 <__asan_internal_strnlen@@Base+0x240>
   297d8:	tbz	w1, #12, 294fc <__asan_internal_strnlen@@Base+0xdc>
   297dc:	and	x22, x1, #0x1ff
   297e0:	ubfx	x1, x1, #9, #3
   297e4:	cmp	x1, x15
   297e8:	b.cs	29780 <__asan_internal_strnlen@@Base+0x360>  // b.hs, b.nlast
   297ec:	b	294fc <__asan_internal_strnlen@@Base+0xdc>
   297f0:	mov	x23, x4
   297f4:	b	29780 <__asan_internal_strnlen@@Base+0x360>
   297f8:	ldrh	w25, [x4, x3, lsl #1]
   297fc:	cbnz	w25, 294fc <__asan_internal_strnlen@@Base+0xdc>
   29800:	strh	w24, [x4, x3, lsl #1]
   29804:	add	x3, x3, x5
   29808:	b	29794 <__asan_internal_strnlen@@Base+0x374>
   2980c:	lsr	w3, w3, #1
   29810:	b	297b4 <__asan_internal_strnlen@@Base+0x394>
   29814:	ldr	w4, [x3]
   29818:	mov	x6, x1
   2981c:	cmp	w4, #0xe
   29820:	b.hi	29858 <__asan_internal_strnlen@@Base+0x438>  // b.pmore
   29824:	ldr	x1, [x0]
   29828:	ldr	x7, [x2]
   2982c:	sub	x6, x6, x1
   29830:	cmp	x6, #0x3
   29834:	b.le	29860 <__asan_internal_strnlen@@Base+0x440>
   29838:	ldr	w5, [x1], #4
   2983c:	lsl	x5, x5, x4
   29840:	orr	x5, x5, x7
   29844:	prfm	pldl1strm, [x1]
   29848:	add	w4, w4, #0x20
   2984c:	str	x1, [x0]
   29850:	str	x5, [x2]
   29854:	str	w4, [x3]
   29858:	mov	w0, #0x1                   	// #1
   2985c:	ret
   29860:	mov	w0, #0x0                   	// #0
   29864:	b	2985c <__asan_internal_strnlen@@Base+0x43c>
   29868:	stp	x29, x30, [sp, #-80]!
   2986c:	mov	x29, sp
   29870:	str	x1, [sp, #72]
   29874:	ldr	w1, [x0, #8]
   29878:	stp	x19, x20, [sp, #16]
   2987c:	mov	x20, x2
   29880:	stp	x21, x22, [sp, #32]
   29884:	mov	x21, x4
   29888:	str	x23, [sp, #48]
   2988c:	cbnz	w1, 298f0 <__asan_internal_strnlen@@Base+0x4d0>
   29890:	ldr	x19, [x0, #48]
   29894:	adrp	x22, 29000 <__asan_cplus_demangle_init_info@@Base+0x5c>
   29898:	add	x23, sp, #0x48
   2989c:	add	x22, x22, #0x47c
   298a0:	cbnz	x19, 298d0 <__asan_internal_strnlen@@Base+0x4b0>
   298a4:	mov	x4, #0x0                   	// #0
   298a8:	mov	x3, #0x0                   	// #0
   298ac:	mov	x2, #0x0                   	// #0
   298b0:	ldr	x1, [sp, #72]
   298b4:	mov	x0, x21
   298b8:	blr	x20
   298bc:	ldp	x19, x20, [sp, #16]
   298c0:	ldp	x21, x22, [sp, #32]
   298c4:	ldr	x23, [sp, #48]
   298c8:	ldp	x29, x30, [sp], #80
   298cc:	ret
   298d0:	ldp	x1, x2, [x19, #8]
   298d4:	mov	x4, x22
   298d8:	mov	x0, x23
   298dc:	mov	x3, #0x18                  	// #24
   298e0:	bl	6c60 <bsearch@plt>
   298e4:	cbnz	x0, 29920 <__asan_internal_strnlen@@Base+0x500>
   298e8:	ldr	x19, [x19]
   298ec:	b	298a0 <__asan_internal_strnlen@@Base+0x480>
   298f0:	adrp	x22, 29000 <__asan_cplus_demangle_init_info@@Base+0x5c>
   298f4:	add	x19, x0, #0x30
   298f8:	add	x22, x22, #0x47c
   298fc:	add	x23, sp, #0x48
   29900:	ldar	x19, [x19]
   29904:	cbz	x19, 298a4 <__asan_internal_strnlen@@Base+0x484>
   29908:	ldp	x1, x2, [x19, #8]
   2990c:	mov	x4, x22
   29910:	mov	x0, x23
   29914:	mov	x3, #0x18                  	// #24
   29918:	bl	6c60 <bsearch@plt>
   2991c:	cbz	x0, 29900 <__asan_internal_strnlen@@Base+0x4e0>
   29920:	ldp	x2, x3, [x0]
   29924:	ldr	x4, [x0, #16]
   29928:	b	298b0 <__asan_internal_strnlen@@Base+0x490>
   2992c:	stp	x29, x30, [sp, #-144]!
   29930:	mov	x29, sp
   29934:	stp	x27, x28, [sp, #80]
   29938:	add	x28, x2, x4
   2993c:	mov	x27, x5
   29940:	stp	x19, x20, [sp, #16]
   29944:	mov	x20, x6
   29948:	stp	x21, x22, [sp, #32]
   2994c:	mov	x22, x2
   29950:	mov	x21, x7
   29954:	stp	x23, x24, [sp, #48]
   29958:	mov	x23, x0
   2995c:	mov	x0, x5
   29960:	stp	x25, x26, [sp, #64]
   29964:	mov	x25, x4
   29968:	stp	x3, x1, [sp, #112]
   2996c:	bl	6850 <__asan_internal_strlen@plt>
   29970:	mov	x24, x0
   29974:	add	x0, x28, x0
   29978:	mov	x3, x21
   2997c:	add	x26, x0, #0x1
   29980:	mov	x2, x20
   29984:	mov	x1, x26
   29988:	str	x0, [sp, #104]
   2998c:	mov	x0, x23
   29990:	bl	6930 <__asan_backtrace_alloc@plt>
   29994:	cbz	x0, 29a24 <__asan_internal_strnlen@@Base+0x604>
   29998:	ldr	x8, [sp, #120]
   2999c:	mov	x19, x0
   299a0:	mov	x2, x22
   299a4:	mov	x1, x8
   299a8:	bl	6840 <__asan_internal_memcpy@plt>
   299ac:	ldr	x1, [sp, #112]
   299b0:	mov	x2, x25
   299b4:	add	x0, x19, x22
   299b8:	bl	6840 <__asan_internal_memcpy@plt>
   299bc:	mov	x2, x24
   299c0:	mov	x1, x27
   299c4:	add	x0, x19, x28
   299c8:	bl	6840 <__asan_internal_memcpy@plt>
   299cc:	ldr	x0, [sp, #104]
   299d0:	add	x3, sp, #0x8c
   299d4:	mov	x2, x21
   299d8:	mov	x1, x20
   299dc:	strb	wzr, [x19, x0]
   299e0:	mov	x0, x19
   299e4:	bl	6db0 <__asan_backtrace_open@plt>
   299e8:	mov	w22, w0
   299ec:	mov	x4, x21
   299f0:	mov	x3, x20
   299f4:	mov	x2, x26
   299f8:	mov	x1, x19
   299fc:	mov	x0, x23
   29a00:	bl	6c20 <__asan_backtrace_free@plt>
   29a04:	mov	w0, w22
   29a08:	ldp	x19, x20, [sp, #16]
   29a0c:	ldp	x21, x22, [sp, #32]
   29a10:	ldp	x23, x24, [sp, #48]
   29a14:	ldp	x25, x26, [sp, #64]
   29a18:	ldp	x27, x28, [sp, #80]
   29a1c:	ldp	x29, x30, [sp], #144
   29a20:	ret
   29a24:	mov	w22, #0xffffffff            	// #-1
   29a28:	b	29a04 <__asan_internal_strnlen@@Base+0x5e4>
   29a2c:	stp	x29, x30, [sp, #-256]!
   29a30:	mov	x29, sp
   29a34:	stp	x19, x20, [sp, #16]
   29a38:	mov	x20, x1
   29a3c:	stp	x21, x22, [sp, #32]
   29a40:	mov	x22, x3
   29a44:	mov	x21, x0
   29a48:	stp	x23, x24, [sp, #48]
   29a4c:	mov	x23, x4
   29a50:	add	x0, sp, #0x80
   29a54:	stp	x27, x28, [sp, #80]
   29a58:	mov	x27, x2
   29a5c:	mov	x24, #0x0                   	// #0
   29a60:	stp	x25, x26, [sp, #64]
   29a64:	mov	x25, #0x0                   	// #0
   29a68:	str	x0, [sp, #112]
   29a6c:	ldr	x1, [sp, #112]
   29a70:	mov	x0, x20
   29a74:	bl	2c520 <__asan_backtrace_vector_release@@Base+0x80>
   29a78:	tbnz	w0, #31, 29ad8 <__asan_internal_strnlen@@Base+0x6b8>
   29a7c:	ldr	w0, [sp, #144]
   29a80:	and	w0, w0, #0xf000
   29a84:	cmp	w0, #0xa, lsl #12
   29a88:	b.ne	29ad8 <__asan_internal_strnlen@@Base+0x6b8>  // b.any
   29a8c:	mov	x26, #0x80                  	// #128
   29a90:	mov	x3, x23
   29a94:	mov	x2, x22
   29a98:	mov	x1, x26
   29a9c:	mov	x0, x21
   29aa0:	bl	6930 <__asan_backtrace_alloc@plt>
   29aa4:	mov	x28, x0
   29aa8:	cbz	x0, 29ad8 <__asan_internal_strnlen@@Base+0x6b8>
   29aac:	mov	x1, x0
   29ab0:	mov	x2, x26
   29ab4:	mov	x0, x20
   29ab8:	bl	6730 <readlink@plt>
   29abc:	tbz	x0, #63, 29bdc <__asan_internal_strnlen@@Base+0x7bc>
   29ac0:	mov	x4, x23
   29ac4:	mov	x3, x22
   29ac8:	mov	x2, x26
   29acc:	mov	x1, x28
   29ad0:	mov	x0, x21
   29ad4:	bl	6c20 <__asan_backtrace_free@plt>
   29ad8:	mov	x0, x20
   29adc:	mov	w1, #0x2f                  	// #47
   29ae0:	bl	6b10 <strrchr@plt>
   29ae4:	adrp	x3, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   29ae8:	cbz	x0, 29cec <__asan_internal_strnlen@@Base+0x8cc>
   29aec:	add	x0, x0, #0x1
   29af0:	sub	x26, x0, x20
   29af4:	mov	x7, x23
   29af8:	mov	x6, x22
   29afc:	mov	x5, x27
   29b00:	add	x3, x3, #0x60f
   29b04:	mov	x2, x26
   29b08:	mov	x1, x20
   29b0c:	mov	x0, x21
   29b10:	mov	x4, #0x0                   	// #0
   29b14:	bl	2992c <__asan_internal_strnlen@@Base+0x50c>
   29b18:	mov	w19, w0
   29b1c:	tbz	w0, #31, 29b98 <__asan_internal_strnlen@@Base+0x778>
   29b20:	adrp	x19, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   29b24:	add	x19, x19, #0x8f4
   29b28:	mov	x0, x19
   29b2c:	bl	6850 <__asan_internal_strlen@plt>
   29b30:	mov	x3, x19
   29b34:	mov	x4, x0
   29b38:	mov	x7, x23
   29b3c:	mov	x6, x22
   29b40:	mov	x5, x27
   29b44:	mov	x2, x26
   29b48:	mov	x1, x20
   29b4c:	mov	x0, x21
   29b50:	bl	2992c <__asan_internal_strnlen@@Base+0x50c>
   29b54:	mov	w19, w0
   29b58:	tbz	w0, #31, 29b98 <__asan_internal_strnlen@@Base+0x778>
   29b5c:	adrp	x19, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   29b60:	add	x19, x19, #0x8fc
   29b64:	mov	x0, x19
   29b68:	bl	6850 <__asan_internal_strlen@plt>
   29b6c:	mov	x1, x19
   29b70:	mov	x2, x0
   29b74:	mov	x7, x23
   29b78:	mov	x6, x22
   29b7c:	mov	x5, x27
   29b80:	mov	x4, x26
   29b84:	mov	x3, x20
   29b88:	mov	x0, x21
   29b8c:	bl	2992c <__asan_internal_strnlen@@Base+0x50c>
   29b90:	cmp	w0, #0x0
   29b94:	csinv	w19, w0, wzr, ge  // ge = tcont
   29b98:	cmp	x24, #0x0
   29b9c:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   29ba0:	b.eq	29bbc <__asan_internal_strnlen@@Base+0x79c>  // b.none
   29ba4:	mov	x4, x23
   29ba8:	mov	x3, x22
   29bac:	mov	x2, x25
   29bb0:	mov	x1, x24
   29bb4:	mov	x0, x21
   29bb8:	bl	6c20 <__asan_backtrace_free@plt>
   29bbc:	mov	w0, w19
   29bc0:	ldp	x19, x20, [sp, #16]
   29bc4:	ldp	x21, x22, [sp, #32]
   29bc8:	ldp	x23, x24, [sp, #48]
   29bcc:	ldp	x25, x26, [sp, #64]
   29bd0:	ldp	x27, x28, [sp, #80]
   29bd4:	ldp	x29, x30, [sp], #256
   29bd8:	ret
   29bdc:	sub	x1, x26, #0x1
   29be0:	cmp	x1, x0
   29be4:	b.ls	29c24 <__asan_internal_strnlen@@Base+0x804>  // b.plast
   29be8:	strb	wzr, [x28, x0]
   29bec:	ldrb	w0, [x28]
   29bf0:	cmp	w0, #0x2f
   29bf4:	b.ne	29c44 <__asan_internal_strnlen@@Base+0x824>  // b.any
   29bf8:	cbz	x24, 29c14 <__asan_internal_strnlen@@Base+0x7f4>
   29bfc:	mov	x4, x23
   29c00:	mov	x3, x22
   29c04:	mov	x2, x25
   29c08:	mov	x1, x24
   29c0c:	mov	x0, x21
   29c10:	bl	6c20 <__asan_backtrace_free@plt>
   29c14:	mov	x25, x26
   29c18:	mov	x24, x28
   29c1c:	mov	x20, x28
   29c20:	b	29a6c <__asan_internal_strnlen@@Base+0x64c>
   29c24:	mov	x2, x26
   29c28:	mov	x4, x23
   29c2c:	mov	x3, x22
   29c30:	mov	x1, x28
   29c34:	mov	x0, x21
   29c38:	lsl	x26, x26, #1
   29c3c:	bl	6c20 <__asan_backtrace_free@plt>
   29c40:	b	29a90 <__asan_internal_strnlen@@Base+0x670>
   29c44:	mov	x0, x20
   29c48:	mov	w1, #0x2f                  	// #47
   29c4c:	bl	6b10 <strrchr@plt>
   29c50:	cbz	x0, 29bf8 <__asan_internal_strnlen@@Base+0x7d8>
   29c54:	add	x0, x0, #0x1
   29c58:	sub	x19, x0, x20
   29c5c:	mov	x0, x28
   29c60:	bl	6850 <__asan_internal_strlen@plt>
   29c64:	add	x1, x19, #0x1
   29c68:	mov	x3, x23
   29c6c:	add	x0, x1, x0
   29c70:	mov	x2, x22
   29c74:	mov	x1, x0
   29c78:	str	x0, [sp, #104]
   29c7c:	mov	x0, x21
   29c80:	bl	6930 <__asan_backtrace_alloc@plt>
   29c84:	str	x0, [sp, #120]
   29c88:	cbz	x0, 29cf8 <__asan_internal_strnlen@@Base+0x8d8>
   29c8c:	mov	x2, x19
   29c90:	mov	x1, x20
   29c94:	bl	6840 <__asan_internal_memcpy@plt>
   29c98:	ldr	x7, [sp, #120]
   29c9c:	mov	x0, x28
   29ca0:	add	x19, x7, x19
   29ca4:	bl	6850 <__asan_internal_strlen@plt>
   29ca8:	mov	x2, x0
   29cac:	mov	x1, x28
   29cb0:	mov	x0, x19
   29cb4:	bl	6840 <__asan_internal_memcpy@plt>
   29cb8:	mov	x0, x28
   29cbc:	bl	6850 <__asan_internal_strlen@plt>
   29cc0:	strb	wzr, [x19, x0]
   29cc4:	mov	x2, x26
   29cc8:	mov	x1, x28
   29ccc:	mov	x4, x23
   29cd0:	mov	x3, x22
   29cd4:	mov	x0, x21
   29cd8:	bl	6c20 <__asan_backtrace_free@plt>
   29cdc:	ldr	x7, [sp, #120]
   29ce0:	ldr	x26, [sp, #104]
   29ce4:	mov	x28, x7
   29ce8:	b	29bf8 <__asan_internal_strnlen@@Base+0x7d8>
   29cec:	add	x20, x3, #0x60f
   29cf0:	mov	x26, #0x0                   	// #0
   29cf4:	b	29af4 <__asan_internal_strnlen@@Base+0x6d4>
   29cf8:	mov	w19, #0xffffffff            	// #-1
   29cfc:	b	29b98 <__asan_internal_strnlen@@Base+0x778>
   29d00:	stp	x29, x30, [sp, #-240]!
   29d04:	mov	x29, sp
   29d08:	stp	x19, x20, [sp, #16]
   29d0c:	mov	x19, x3
   29d10:	mov	x20, x3
   29d14:	stp	x21, x22, [sp, #32]
   29d18:	add	x21, x0, x1
   29d1c:	mov	x22, x2
   29d20:	stp	x23, x24, [sp, #48]
   29d24:	add	x23, sp, #0xc4
   29d28:	stp	x25, x26, [sp, #64]
   29d2c:	mov	x26, x4
   29d30:	stp	x27, x28, [sp, #80]
   29d34:	add	x27, x3, x4
   29d38:	str	x0, [sp, #128]
   29d3c:	str	x0, [sp, #200]
   29d40:	adrp	x0, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   29d44:	add	x0, x0, #0xacc
   29d48:	str	x1, [sp, #144]
   29d4c:	str	x0, [sp, #152]
   29d50:	add	x0, x0, #0x200
   29d54:	str	x0, [sp, #160]
   29d58:	ldr	x0, [sp, #200]
   29d5c:	sub	x1, x21, x0
   29d60:	cmp	x1, #0x4
   29d64:	b.gt	29d90 <__asan_internal_strnlen@@Base+0x970>
   29d68:	cmp	x27, x20
   29d6c:	b.eq	2a7ac <__asan_internal_strnlen@@Base+0x138c>  // b.none
   29d70:	mov	w0, #0x0                   	// #0
   29d74:	ldp	x19, x20, [sp, #16]
   29d78:	ldp	x21, x22, [sp, #32]
   29d7c:	ldp	x23, x24, [sp, #48]
   29d80:	ldp	x25, x26, [sp, #64]
   29d84:	ldp	x27, x28, [sp, #80]
   29d88:	ldp	x29, x30, [sp], #240
   29d8c:	ret
   29d90:	ldrb	w1, [x0]
   29d94:	and	w2, w1, #0xf
   29d98:	cmp	w2, #0x8
   29d9c:	b.ne	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.any
   29da0:	cmp	w1, #0x7f
   29da4:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   29da8:	ldrb	w2, [x0, #1]
   29dac:	ldrh	w1, [x0]
   29db0:	rev16	w1, w1
   29db4:	tbnz	w2, #5, 29d70 <__asan_internal_strnlen@@Base+0x950>
   29db8:	and	x1, x1, #0xffff
   29dbc:	mov	x3, #0x1f                  	// #31
   29dc0:	udiv	x2, x1, x3
   29dc4:	msub	x1, x2, x3, x1
   29dc8:	cbnz	x1, 29d70 <__asan_internal_strnlen@@Base+0x950>
   29dcc:	add	x0, x0, #0x2
   29dd0:	str	wzr, [sp, #196]
   29dd4:	stp	x0, xzr, [sp, #200]
   29dd8:	ldr	x0, [sp, #200]
   29ddc:	tst	x0, #0x3
   29de0:	b.ne	29eec <__asan_internal_strnlen@@Base+0xacc>  // b.any
   29de4:	add	x24, sp, #0xd0
   29de8:	add	x25, sp, #0xc8
   29dec:	mov	x3, x23
   29df0:	mov	x2, x24
   29df4:	mov	x1, x21
   29df8:	mov	x0, x25
   29dfc:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   29e00:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   29e04:	ldr	x0, [sp, #208]
   29e08:	str	x0, [sp, #104]
   29e0c:	ldr	w0, [sp, #104]
   29e10:	ubfx	w1, w0, #1, #2
   29e14:	ldr	x0, [sp, #104]
   29e18:	cmp	w1, #0x3
   29e1c:	lsr	x0, x0, #3
   29e20:	str	x0, [sp, #208]
   29e24:	ldr	w0, [sp, #196]
   29e28:	sub	w0, w0, #0x3
   29e2c:	str	w0, [sp, #196]
   29e30:	b.eq	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.none
   29e34:	cbnz	w1, 29f40 <__asan_internal_strnlen@@Base+0xb20>
   29e38:	ldr	x1, [sp, #200]
   29e3c:	mov	w2, #0x0                   	// #0
   29e40:	mov	x3, x1
   29e44:	cmp	w0, #0x8
   29e48:	sub	x1, x1, #0x1
   29e4c:	b.hi	29f10 <__asan_internal_strnlen@@Base+0xaf0>  // b.pmore
   29e50:	cbz	w2, 29e58 <__asan_internal_strnlen@@Base+0xa38>
   29e54:	str	x3, [sp, #200]
   29e58:	ldr	x1, [sp, #200]
   29e5c:	str	wzr, [sp, #196]
   29e60:	str	xzr, [sp, #208]
   29e64:	sub	x0, x21, x1
   29e68:	cmp	x0, #0x3
   29e6c:	b.le	29d70 <__asan_internal_strnlen@@Base+0x950>
   29e70:	ldrb	w0, [x1]
   29e74:	add	x1, x1, #0x4
   29e78:	ldurb	w2, [x1, #-3]
   29e7c:	ldurb	w3, [x1, #-2]
   29e80:	orr	w2, w0, w2, lsl #8
   29e84:	ldurb	w0, [x1, #-1]
   29e88:	str	x1, [sp, #200]
   29e8c:	orr	w0, w3, w0, lsl #8
   29e90:	mvn	w0, w0
   29e94:	cmp	w2, w0, uxth
   29e98:	b.ne	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.any
   29e9c:	sub	x0, x21, x1
   29ea0:	cmp	w2, w0
   29ea4:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   29ea8:	sub	x0, x27, x20
   29eac:	cmp	w2, w0
   29eb0:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   29eb4:	and	x25, x2, #0xffff
   29eb8:	mov	x0, x20
   29ebc:	mov	x2, x25
   29ec0:	bl	6840 <__asan_internal_memcpy@plt>
   29ec4:	ldr	x2, [sp, #200]
   29ec8:	add	x20, x20, x25
   29ecc:	add	x2, x2, x25
   29ed0:	str	x2, [sp, #200]
   29ed4:	ldr	x0, [sp, #200]
   29ed8:	tst	x0, #0x3
   29edc:	b.ne	29f1c <__asan_internal_strnlen@@Base+0xafc>  // b.any
   29ee0:	ldr	x0, [sp, #104]
   29ee4:	tbz	w0, #0, 29de8 <__asan_internal_strnlen@@Base+0x9c8>
   29ee8:	b	29d58 <__asan_internal_strnlen@@Base+0x938>
   29eec:	ldrb	w2, [x0], #1
   29ef0:	ldr	w1, [sp, #196]
   29ef4:	lsl	x3, x2, x1
   29ef8:	add	w1, w1, #0x8
   29efc:	ldr	x2, [sp, #208]
   29f00:	str	w1, [sp, #196]
   29f04:	orr	x2, x2, x3
   29f08:	stp	x0, x2, [sp, #200]
   29f0c:	b	29dd8 <__asan_internal_strnlen@@Base+0x9b8>
   29f10:	sub	w0, w0, #0x8
   29f14:	mov	w2, #0x1                   	// #1
   29f18:	b	29e40 <__asan_internal_strnlen@@Base+0xa20>
   29f1c:	ldrb	w2, [x0], #1
   29f20:	ldr	w1, [sp, #196]
   29f24:	lsl	x3, x2, x1
   29f28:	add	w1, w1, #0x8
   29f2c:	ldr	x2, [sp, #208]
   29f30:	str	w1, [sp, #196]
   29f34:	orr	x2, x2, x3
   29f38:	stp	x0, x2, [sp, #200]
   29f3c:	b	29ed4 <__asan_internal_strnlen@@Base+0xab4>
   29f40:	cmp	w1, #0x1
   29f44:	b.eq	2a500 <__asan_internal_strnlen@@Base+0x10e0>  // b.none
   29f48:	mov	x1, x21
   29f4c:	mov	x0, x25
   29f50:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   29f54:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   29f58:	ldr	x0, [sp, #208]
   29f5c:	and	w1, w0, #0x1f
   29f60:	add	w1, w1, #0x101
   29f64:	ubfx	w4, w0, #10, #4
   29f68:	str	w1, [sp, #112]
   29f6c:	ubfx	w1, w0, #5, #5
   29f70:	lsr	x0, x0, #14
   29f74:	str	x0, [sp, #208]
   29f78:	ldr	w0, [sp, #196]
   29f7c:	add	w1, w1, #0x1
   29f80:	str	w1, [sp, #120]
   29f84:	add	w28, w4, #0x4
   29f88:	sub	w0, w0, #0xe
   29f8c:	str	w0, [sp, #196]
   29f90:	ldr	w0, [sp, #112]
   29f94:	cmp	w0, #0x11e
   29f98:	mov	w0, w1
   29f9c:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
   29fa0:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   29fa4:	add	x0, sp, #0xd8
   29fa8:	mov	x2, #0x13                  	// #19
   29fac:	mov	w1, #0x0                   	// #0
   29fb0:	str	x0, [sp, #136]
   29fb4:	bl	68d0 <__asan_internal_memset@plt>
   29fb8:	mov	x3, x23
   29fbc:	mov	x2, x24
   29fc0:	mov	x1, x21
   29fc4:	mov	x0, x25
   29fc8:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   29fcc:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   29fd0:	ldr	x0, [sp, #208]
   29fd4:	cmp	w28, #0x4
   29fd8:	and	w1, w0, #0x7
   29fdc:	strb	w1, [sp, #232]
   29fe0:	ubfx	w1, w0, #3, #3
   29fe4:	strb	w1, [sp, #233]
   29fe8:	ubfx	w1, w0, #6, #3
   29fec:	strb	w1, [sp, #234]
   29ff0:	ubfx	w1, w0, #9, #3
   29ff4:	strb	w1, [sp, #216]
   29ff8:	ldr	w1, [sp, #196]
   29ffc:	lsr	x2, x0, #12
   2a000:	str	x2, [sp, #208]
   2a004:	sub	w3, w1, #0xc
   2a008:	str	w3, [sp, #196]
   2a00c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a010:	and	w2, w2, #0x7
   2a014:	lsr	x0, x0, #15
   2a018:	sub	w1, w1, #0xf
   2a01c:	str	w1, [sp, #196]
   2a020:	str	x0, [sp, #208]
   2a024:	cmp	w28, #0x5
   2a028:	strb	w2, [sp, #224]
   2a02c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a030:	mov	x3, x23
   2a034:	mov	x2, x24
   2a038:	mov	x1, x21
   2a03c:	mov	x0, x25
   2a040:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   2a044:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a048:	ldr	x0, [sp, #208]
   2a04c:	cmp	w28, #0x6
   2a050:	and	w1, w0, #0x7
   2a054:	strb	w1, [sp, #223]
   2a058:	ldr	w1, [sp, #196]
   2a05c:	lsr	x2, x0, #3
   2a060:	str	x2, [sp, #208]
   2a064:	sub	w3, w1, #0x3
   2a068:	str	w3, [sp, #196]
   2a06c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a070:	and	w2, w2, #0x7
   2a074:	sub	w3, w1, #0x6
   2a078:	str	w3, [sp, #196]
   2a07c:	cmp	w28, #0x7
   2a080:	strb	w2, [sp, #225]
   2a084:	lsr	x2, x0, #6
   2a088:	str	x2, [sp, #208]
   2a08c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a090:	and	w2, w2, #0x7
   2a094:	sub	w3, w1, #0x9
   2a098:	str	w3, [sp, #196]
   2a09c:	cmp	w28, #0x8
   2a0a0:	strb	w2, [sp, #222]
   2a0a4:	lsr	x2, x0, #9
   2a0a8:	str	x2, [sp, #208]
   2a0ac:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a0b0:	and	w2, w2, #0x7
   2a0b4:	sub	w3, w1, #0xc
   2a0b8:	str	w3, [sp, #196]
   2a0bc:	cmp	w28, #0x9
   2a0c0:	strb	w2, [sp, #226]
   2a0c4:	lsr	x2, x0, #12
   2a0c8:	str	x2, [sp, #208]
   2a0cc:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a0d0:	and	w2, w2, #0x7
   2a0d4:	lsr	x0, x0, #15
   2a0d8:	sub	w1, w1, #0xf
   2a0dc:	str	w1, [sp, #196]
   2a0e0:	str	x0, [sp, #208]
   2a0e4:	cmp	w28, #0xa
   2a0e8:	strb	w2, [sp, #221]
   2a0ec:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a0f0:	mov	x3, x23
   2a0f4:	mov	x2, x24
   2a0f8:	mov	x1, x21
   2a0fc:	mov	x0, x25
   2a100:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   2a104:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a108:	ldr	x0, [sp, #208]
   2a10c:	cmp	w28, #0xb
   2a110:	and	w1, w0, #0x7
   2a114:	strb	w1, [sp, #227]
   2a118:	ldr	w1, [sp, #196]
   2a11c:	lsr	x2, x0, #3
   2a120:	str	x2, [sp, #208]
   2a124:	sub	w3, w1, #0x3
   2a128:	str	w3, [sp, #196]
   2a12c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a130:	and	w2, w2, #0x7
   2a134:	sub	w3, w1, #0x6
   2a138:	str	w3, [sp, #196]
   2a13c:	cmp	w28, #0xc
   2a140:	strb	w2, [sp, #220]
   2a144:	lsr	x2, x0, #6
   2a148:	str	x2, [sp, #208]
   2a14c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a150:	and	w2, w2, #0x7
   2a154:	sub	w3, w1, #0x9
   2a158:	str	w3, [sp, #196]
   2a15c:	cmp	w28, #0xd
   2a160:	strb	w2, [sp, #228]
   2a164:	lsr	x2, x0, #9
   2a168:	str	x2, [sp, #208]
   2a16c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a170:	and	w2, w2, #0x7
   2a174:	sub	w3, w1, #0xc
   2a178:	str	w3, [sp, #196]
   2a17c:	cmp	w28, #0xe
   2a180:	strb	w2, [sp, #219]
   2a184:	lsr	x2, x0, #12
   2a188:	str	x2, [sp, #208]
   2a18c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a190:	and	w2, w2, #0x7
   2a194:	lsr	x0, x0, #15
   2a198:	sub	w1, w1, #0xf
   2a19c:	str	w1, [sp, #196]
   2a1a0:	str	x0, [sp, #208]
   2a1a4:	cmp	w28, #0xf
   2a1a8:	strb	w2, [sp, #229]
   2a1ac:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a1b0:	mov	x3, x23
   2a1b4:	mov	x2, x24
   2a1b8:	mov	x1, x21
   2a1bc:	mov	x0, x25
   2a1c0:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   2a1c4:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a1c8:	ldr	x0, [sp, #208]
   2a1cc:	cmp	w28, #0x10
   2a1d0:	and	w1, w0, #0x7
   2a1d4:	strb	w1, [sp, #218]
   2a1d8:	ldr	w1, [sp, #196]
   2a1dc:	lsr	x2, x0, #3
   2a1e0:	str	x2, [sp, #208]
   2a1e4:	sub	w3, w1, #0x3
   2a1e8:	str	w3, [sp, #196]
   2a1ec:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a1f0:	and	w2, w2, #0x7
   2a1f4:	sub	w3, w1, #0x6
   2a1f8:	str	w3, [sp, #196]
   2a1fc:	cmp	w28, #0x11
   2a200:	strb	w2, [sp, #230]
   2a204:	lsr	x2, x0, #6
   2a208:	str	x2, [sp, #208]
   2a20c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a210:	and	w2, w2, #0x7
   2a214:	sub	w3, w1, #0x9
   2a218:	str	w3, [sp, #196]
   2a21c:	cmp	w28, #0x12
   2a220:	strb	w2, [sp, #217]
   2a224:	lsr	x2, x0, #9
   2a228:	str	x2, [sp, #208]
   2a22c:	b.eq	2a248 <__asan_internal_strnlen@@Base+0xe28>  // b.none
   2a230:	and	w2, w2, #0x7
   2a234:	lsr	x0, x0, #12
   2a238:	sub	w1, w1, #0xc
   2a23c:	str	w1, [sp, #196]
   2a240:	str	x0, [sp, #208]
   2a244:	strb	w2, [sp, #231]
   2a248:	ldr	x0, [sp, #136]
   2a24c:	mov	x3, x22
   2a250:	mov	x2, x22
   2a254:	mov	x1, #0x13                  	// #19
   2a258:	bl	294a8 <__asan_internal_strnlen@@Base+0x88>
   2a25c:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a260:	mov	x0, #0x1278                	// #4728
   2a264:	add	x28, x22, x0
   2a268:	ldr	w0, [sp, #112]
   2a26c:	mov	x4, x28
   2a270:	str	x0, [sp, #112]
   2a274:	ldr	w0, [sp, #120]
   2a278:	str	x0, [sp, #136]
   2a27c:	ldr	x0, [sp, #112]
   2a280:	ldr	x1, [sp, #136]
   2a284:	add	x5, x0, x1
   2a288:	adrp	x0, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2a28c:	add	x5, x28, x5
   2a290:	add	x0, x0, #0xac4
   2a294:	str	x0, [sp, #120]
   2a298:	cmp	x5, x4
   2a29c:	b.hi	2a35c <__asan_internal_strnlen@@Base+0xf3c>  // b.pmore
   2a2a0:	add	x0, x22, #0x1, lsl #12
   2a2a4:	ldrb	w0, [x0, #888]
   2a2a8:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a2ac:	ldr	x1, [sp, #112]
   2a2b0:	mov	x3, x22
   2a2b4:	mov	x2, x22
   2a2b8:	mov	x0, x28
   2a2bc:	bl	294a8 <__asan_internal_strnlen@@Base+0x88>
   2a2c0:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a2c4:	add	x0, x22, #0x800
   2a2c8:	str	x0, [sp, #120]
   2a2cc:	ldr	x1, [sp, #136]
   2a2d0:	mov	x3, x0
   2a2d4:	ldr	x0, [sp, #112]
   2a2d8:	mov	x2, x22
   2a2dc:	add	x0, x28, x0
   2a2e0:	bl	294a8 <__asan_internal_strnlen@@Base+0x88>
   2a2e4:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a2e8:	str	x22, [sp, #112]
   2a2ec:	mov	x3, x23
   2a2f0:	mov	x2, x24
   2a2f4:	mov	x1, x21
   2a2f8:	mov	x0, x25
   2a2fc:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   2a300:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a304:	ldr	x3, [sp, #208]
   2a308:	ldr	x1, [sp, #112]
   2a30c:	and	x0, x3, #0xff
   2a310:	ldrh	w2, [x1, x0, lsl #1]
   2a314:	ldr	w0, [sp, #196]
   2a318:	and	w4, w2, #0x1ff
   2a31c:	ubfx	x1, x2, #9, #3
   2a320:	tbnz	w2, #12, 2a514 <__asan_internal_strnlen@@Base+0x10f4>
   2a324:	add	w2, w1, #0x1
   2a328:	mov	w28, w4
   2a32c:	sub	w0, w0, #0x1
   2a330:	lsr	x3, x3, x2
   2a334:	str	x3, [sp, #208]
   2a338:	sub	w0, w0, w1
   2a33c:	str	w0, [sp, #196]
   2a340:	cmp	w28, #0xff
   2a344:	b.hi	2a550 <__asan_internal_strnlen@@Base+0x1130>  // b.pmore
   2a348:	cmp	x27, x20
   2a34c:	b.eq	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.none
   2a350:	strb	w28, [x20], #1
   2a354:	prfm	pstl1keep, [x20]
   2a358:	b	2a2ec <__asan_internal_strnlen@@Base+0xecc>
   2a35c:	mov	x3, x23
   2a360:	mov	x2, x24
   2a364:	mov	x1, x21
   2a368:	mov	x0, x25
   2a36c:	stp	x5, x4, [sp, #168]
   2a370:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   2a374:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a378:	ldr	x0, [sp, #208]
   2a37c:	and	x1, x0, #0xff
   2a380:	ldrh	w3, [x22, x1, lsl #1]
   2a384:	tbnz	w3, #12, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a388:	ubfx	x2, x3, #9, #3
   2a38c:	tst	w3, #0x1f0
   2a390:	add	w1, w2, #0x1
   2a394:	ldp	x5, x4, [sp, #168]
   2a398:	lsr	x0, x0, x1
   2a39c:	ldr	w1, [sp, #196]
   2a3a0:	str	x0, [sp, #208]
   2a3a4:	sub	w1, w1, w2
   2a3a8:	sub	w2, w1, #0x1
   2a3ac:	str	w2, [sp, #196]
   2a3b0:	and	w2, w3, #0x1ff
   2a3b4:	b.ne	2a3c0 <__asan_internal_strnlen@@Base+0xfa0>  // b.any
   2a3b8:	strb	w2, [x4], #1
   2a3bc:	b	2a298 <__asan_internal_strnlen@@Base+0xe78>
   2a3c0:	cmp	w2, #0x10
   2a3c4:	b.ne	2a434 <__asan_internal_strnlen@@Base+0x1014>  // b.any
   2a3c8:	cmp	x28, x4
   2a3cc:	b.eq	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.none
   2a3d0:	and	w2, w0, #0x3
   2a3d4:	sub	w1, w1, #0x3
   2a3d8:	lsr	x0, x0, #2
   2a3dc:	str	w1, [sp, #196]
   2a3e0:	str	x0, [sp, #208]
   2a3e4:	add	w2, w2, #0x3
   2a3e8:	sub	x0, x5, x4
   2a3ec:	cmp	w2, w0
   2a3f0:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2a3f4:	ldurb	w0, [x4, #-1]
   2a3f8:	cmp	w2, #0x5
   2a3fc:	b.eq	2a42c <__asan_internal_strnlen@@Base+0x100c>  // b.none
   2a400:	cmp	w2, #0x6
   2a404:	b.eq	2a428 <__asan_internal_strnlen@@Base+0x1008>  // b.none
   2a408:	cmp	w2, #0x4
   2a40c:	b.ne	2a414 <__asan_internal_strnlen@@Base+0xff4>  // b.any
   2a410:	strb	w0, [x4], #1
   2a414:	add	x4, x4, #0x3
   2a418:	sturb	w0, [x4, #-3]
   2a41c:	sturb	w0, [x4, #-2]
   2a420:	sturb	w0, [x4, #-1]
   2a424:	b	2a298 <__asan_internal_strnlen@@Base+0xe78>
   2a428:	strb	w0, [x4], #1
   2a42c:	strb	w0, [x4], #1
   2a430:	b	2a410 <__asan_internal_strnlen@@Base+0xff0>
   2a434:	cmp	w2, #0x11
   2a438:	b.ne	2a4b0 <__asan_internal_strnlen@@Base+0x1090>  // b.any
   2a43c:	and	w2, w0, #0x7
   2a440:	sub	w1, w1, #0x4
   2a444:	lsr	x0, x0, #3
   2a448:	str	w1, [sp, #196]
   2a44c:	str	x0, [sp, #208]
   2a450:	add	w3, w2, #0x3
   2a454:	sub	x0, x5, x4
   2a458:	cmp	w3, w0
   2a45c:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2a460:	sub	w0, w2, #0x1
   2a464:	cmp	w0, #0x6
   2a468:	b.hi	2a49c <__asan_internal_strnlen@@Base+0x107c>  // b.pmore
   2a46c:	ldr	x1, [sp, #120]
   2a470:	ldrb	w0, [x1, w0, uxtw]
   2a474:	adr	x1, 2a480 <__asan_internal_strnlen@@Base+0x1060>
   2a478:	add	x0, x1, w0, sxtb #2
   2a47c:	br	x0
   2a480:	strb	wzr, [x4], #1
   2a484:	strb	wzr, [x4], #1
   2a488:	strb	wzr, [x4], #1
   2a48c:	strb	wzr, [x4], #1
   2a490:	strb	wzr, [x4], #1
   2a494:	strb	wzr, [x4], #1
   2a498:	strb	wzr, [x4], #1
   2a49c:	mov	x0, x4
   2a4a0:	strh	wzr, [x0], #3
   2a4a4:	strb	wzr, [x4, #2]
   2a4a8:	mov	x4, x0
   2a4ac:	b	2a298 <__asan_internal_strnlen@@Base+0xe78>
   2a4b0:	cmp	w2, #0x12
   2a4b4:	b.ne	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.any
   2a4b8:	and	w2, w0, #0x7f
   2a4bc:	sub	w1, w1, #0x8
   2a4c0:	lsr	x0, x0, #7
   2a4c4:	str	x5, [sp, #184]
   2a4c8:	str	w1, [sp, #196]
   2a4cc:	add	w2, w2, #0xb
   2a4d0:	str	x0, [sp, #208]
   2a4d4:	sub	x0, x5, x4
   2a4d8:	cmp	w2, w0
   2a4dc:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2a4e0:	mov	x0, x4
   2a4e4:	mov	w1, #0x0                   	// #0
   2a4e8:	stp	x4, x2, [sp, #168]
   2a4ec:	bl	68d0 <__asan_internal_memset@plt>
   2a4f0:	ldp	x4, x2, [sp, #168]
   2a4f4:	ldr	x5, [sp, #184]
   2a4f8:	add	x4, x4, x2
   2a4fc:	b	2a298 <__asan_internal_strnlen@@Base+0xe78>
   2a500:	ldr	x0, [sp, #152]
   2a504:	str	x0, [sp, #120]
   2a508:	ldr	x0, [sp, #160]
   2a50c:	str	x0, [sp, #112]
   2a510:	b	2a2ec <__asan_internal_strnlen@@Base+0xecc>
   2a514:	mov	w2, #0x1                   	// #1
   2a518:	add	w4, w4, #0x100
   2a51c:	lsl	w1, w2, w1
   2a520:	sub	w1, w1, #0x1
   2a524:	and	x1, x1, x3, lsr #8
   2a528:	sub	w0, w0, #0x8
   2a52c:	ldr	x2, [sp, #112]
   2a530:	add	x1, x1, w4, sxtw
   2a534:	ldrh	w4, [x2, x1, lsl #1]
   2a538:	and	w28, w4, #0x1ff
   2a53c:	ubfx	x1, x4, #9, #3
   2a540:	add	w2, w1, #0x8
   2a544:	lsr	x3, x3, x2
   2a548:	str	x3, [sp, #208]
   2a54c:	b	2a338 <__asan_internal_strnlen@@Base+0xf18>
   2a550:	cmp	w28, #0x100
   2a554:	b.eq	29ee0 <__asan_internal_strnlen@@Base+0xac0>  // b.none
   2a558:	cmp	w28, #0x108
   2a55c:	b.hi	2a5e8 <__asan_internal_strnlen@@Base+0x11c8>  // b.pmore
   2a560:	sub	w28, w28, #0xfe
   2a564:	mov	x3, x23
   2a568:	mov	x2, x24
   2a56c:	mov	x1, x21
   2a570:	mov	x0, x25
   2a574:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   2a578:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a57c:	ldr	x2, [sp, #208]
   2a580:	ldr	x1, [sp, #120]
   2a584:	and	x0, x2, #0xff
   2a588:	ldrh	w5, [x1, x0, lsl #1]
   2a58c:	ldr	w0, [sp, #196]
   2a590:	and	w3, w5, #0x1ff
   2a594:	ubfx	x1, x5, #9, #3
   2a598:	tbnz	w5, #12, 2a668 <__asan_internal_strnlen@@Base+0x1248>
   2a59c:	mov	w8, w3
   2a5a0:	sub	w0, w0, #0x1
   2a5a4:	add	w3, w1, #0x1
   2a5a8:	sub	w0, w0, w1
   2a5ac:	lsr	x2, x2, x3
   2a5b0:	str	x2, [sp, #208]
   2a5b4:	str	w0, [sp, #196]
   2a5b8:	cbnz	w8, 2a6a8 <__asan_internal_strnlen@@Base+0x1288>
   2a5bc:	cmp	x19, x20
   2a5c0:	b.eq	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.none
   2a5c4:	sub	x0, x27, x20
   2a5c8:	cmp	w28, w0
   2a5cc:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2a5d0:	ldurb	w1, [x20, #-1]
   2a5d4:	mov	x2, x28
   2a5d8:	mov	x0, x20
   2a5dc:	bl	68d0 <__asan_internal_memset@plt>
   2a5e0:	add	x20, x20, x28
   2a5e4:	b	2a2ec <__asan_internal_strnlen@@Base+0xecc>
   2a5e8:	cmp	w28, #0x11d
   2a5ec:	b.eq	2a660 <__asan_internal_strnlen@@Base+0x1240>  // b.none
   2a5f0:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2a5f4:	mov	x3, x23
   2a5f8:	mov	x2, x24
   2a5fc:	mov	x1, x21
   2a600:	mov	x0, x25
   2a604:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   2a608:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a60c:	sub	w4, w28, #0x109
   2a610:	mov	w2, #0x1                   	// #1
   2a614:	ldr	x3, [sp, #208]
   2a618:	lsr	w0, w4, #2
   2a61c:	add	w1, w0, #0x1
   2a620:	and	w4, w4, #0x3
   2a624:	lsl	w4, w4, w1
   2a628:	add	w8, w4, #0xb
   2a62c:	lsl	w4, w2, w0
   2a630:	mov	w0, #0xffffffff            	// #-1
   2a634:	sub	w4, w4, #0x1
   2a638:	lsl	w2, w0, w1
   2a63c:	ldr	w0, [sp, #196]
   2a640:	bic	w2, w3, w2
   2a644:	add	w4, w2, w4, lsl #3
   2a648:	lsr	x3, x3, x1
   2a64c:	add	w28, w4, w8
   2a650:	sub	w1, w0, w1
   2a654:	str	w1, [sp, #196]
   2a658:	str	x3, [sp, #208]
   2a65c:	b	2a564 <__asan_internal_strnlen@@Base+0x1144>
   2a660:	mov	x28, #0x102                 	// #258
   2a664:	b	2a564 <__asan_internal_strnlen@@Base+0x1144>
   2a668:	mov	w4, #0x1                   	// #1
   2a66c:	add	w3, w3, #0x100
   2a670:	lsl	w1, w4, w1
   2a674:	sub	w1, w1, #0x1
   2a678:	and	x1, x1, x2, lsr #8
   2a67c:	sub	w0, w0, #0x8
   2a680:	add	x1, x1, w3, sxtw
   2a684:	ldr	x3, [sp, #120]
   2a688:	ldrh	w3, [x3, x1, lsl #1]
   2a68c:	and	w8, w3, #0x1ff
   2a690:	ubfx	x5, x3, #9, #3
   2a694:	add	w1, w5, #0x8
   2a698:	sub	w0, w0, w5
   2a69c:	lsr	x2, x2, x1
   2a6a0:	str	x2, [sp, #208]
   2a6a4:	b	2a5b4 <__asan_internal_strnlen@@Base+0x1194>
   2a6a8:	cmp	w8, #0x1d
   2a6ac:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2a6b0:	cmp	w8, #0x3
   2a6b4:	b.hi	2a6f8 <__asan_internal_strnlen@@Base+0x12d8>  // b.pmore
   2a6b8:	add	w3, w8, #0x1
   2a6bc:	sub	x0, x20, x19
   2a6c0:	cmp	w3, w0
   2a6c4:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2a6c8:	sub	x0, x27, x20
   2a6cc:	cmp	w28, w0
   2a6d0:	b.hi	29d70 <__asan_internal_strnlen@@Base+0x950>  // b.pmore
   2a6d4:	mov	w5, w3
   2a6d8:	cmp	w28, w3
   2a6dc:	neg	x5, x5
   2a6e0:	b.hi	2a764 <__asan_internal_strnlen@@Base+0x1344>  // b.pmore
   2a6e4:	mov	x2, x28
   2a6e8:	add	x1, x20, x5
   2a6ec:	mov	x0, x20
   2a6f0:	bl	6840 <__asan_internal_memcpy@plt>
   2a6f4:	b	2a5e0 <__asan_internal_strnlen@@Base+0x11c0>
   2a6f8:	mov	x3, x23
   2a6fc:	mov	x2, x24
   2a700:	mov	x1, x21
   2a704:	mov	x0, x25
   2a708:	bl	29814 <__asan_internal_strnlen@@Base+0x3f4>
   2a70c:	cbz	w0, 29d70 <__asan_internal_strnlen@@Base+0x950>
   2a710:	sub	w3, w8, #0x4
   2a714:	ldr	x5, [sp, #208]
   2a718:	lsr	w0, w3, #1
   2a71c:	add	w2, w0, #0x1
   2a720:	and	w3, w3, #0x1
   2a724:	lsl	w3, w3, w2
   2a728:	add	w1, w3, #0x5
   2a72c:	mov	w3, #0x1                   	// #1
   2a730:	lsl	w3, w3, w0
   2a734:	mov	w0, #0xffffffff            	// #-1
   2a738:	sub	w3, w3, #0x1
   2a73c:	lsl	w0, w0, w2
   2a740:	bic	w0, w5, w0
   2a744:	lsr	x5, x5, x2
   2a748:	add	w3, w0, w3, lsl #2
   2a74c:	ldr	w0, [sp, #196]
   2a750:	add	w3, w3, w1
   2a754:	str	x5, [sp, #208]
   2a758:	sub	w2, w0, w2
   2a75c:	str	w2, [sp, #196]
   2a760:	b	2a6bc <__asan_internal_strnlen@@Base+0x129c>
   2a764:	cmp	w3, w28
   2a768:	add	x1, x20, x5
   2a76c:	csel	w6, w3, w28, ls  // ls = plast
   2a770:	csel	w2, w3, w28, ls  // ls = plast
   2a774:	mov	x0, x20
   2a778:	str	x5, [sp, #136]
   2a77c:	str	x2, [sp, #168]
   2a780:	str	w3, [sp, #176]
   2a784:	str	w6, [sp, #184]
   2a788:	bl	6840 <__asan_internal_memcpy@plt>
   2a78c:	ldr	x2, [sp, #168]
   2a790:	ldr	w6, [sp, #184]
   2a794:	ldr	w3, [sp, #176]
   2a798:	add	x20, x20, x2
   2a79c:	subs	w28, w28, w6
   2a7a0:	ldr	x5, [sp, #136]
   2a7a4:	b.ne	2a764 <__asan_internal_strnlen@@Base+0x1344>  // b.any
   2a7a8:	b	2a2ec <__asan_internal_strnlen@@Base+0xecc>
   2a7ac:	ldr	x0, [sp, #144]
   2a7b0:	mov	w8, #0x0                   	// #0
   2a7b4:	ldr	x1, [sp, #128]
   2a7b8:	sub	x0, x0, #0x4
   2a7bc:	add	x0, x1, x0
   2a7c0:	ldrb	w1, [x0], #1
   2a7c4:	cmp	x21, x0
   2a7c8:	orr	w8, w1, w8, lsl #8
   2a7cc:	b.ne	2a7c0 <__asan_internal_strnlen@@Base+0x13a0>  // b.any
   2a7d0:	mov	w13, #0x0                   	// #0
   2a7d4:	mov	w12, #0x1                   	// #1
   2a7d8:	mov	x15, #0x15af                	// #5551
   2a7dc:	mov	x14, #0x15b0                	// #5552
   2a7e0:	mov	w1, #0xfff1                	// #65521
   2a7e4:	cmp	x26, x15
   2a7e8:	b.hi	2a838 <__asan_internal_strnlen@@Base+0x1418>  // b.pmore
   2a7ec:	and	x14, x26, #0xfffffffffffffff0
   2a7f0:	lsr	x4, x26, #4
   2a7f4:	add	x14, x19, x14
   2a7f8:	cmp	x19, x14
   2a7fc:	b.ne	2a920 <__asan_internal_strnlen@@Base+0x1500>  // b.any
   2a800:	mov	x0, #0xfffffffffffffff0    	// #-16
   2a804:	mov	x3, #0x0                   	// #0
   2a808:	madd	x26, x4, x0, x26
   2a80c:	cmp	x26, w3, uxtw
   2a810:	b.hi	2a9e8 <__asan_internal_strnlen@@Base+0x15c8>  // b.pmore
   2a814:	mov	w2, #0xfff1                	// #65521
   2a818:	udiv	w1, w13, w2
   2a81c:	udiv	w0, w12, w2
   2a820:	msub	w1, w1, w2, w13
   2a824:	msub	w2, w0, w2, w12
   2a828:	add	w1, w2, w1, lsl #16
   2a82c:	cmp	w1, w8
   2a830:	cset	w0, eq  // eq = none
   2a834:	b	29d74 <__asan_internal_strnlen@@Base+0x954>
   2a838:	add	x16, x19, x14
   2a83c:	ldrb	w11, [x19]
   2a840:	add	x19, x19, #0x10
   2a844:	ldurb	w24, [x19, #-15]
   2a848:	ldurb	w4, [x19, #-14]
   2a84c:	add	w11, w11, w12
   2a850:	add	w24, w24, w11
   2a854:	ldurb	w10, [x19, #-12]
   2a858:	add	w3, w4, w24
   2a85c:	ldurb	w4, [x19, #-13]
   2a860:	ldurb	w23, [x19, #-11]
   2a864:	add	w11, w11, w24
   2a868:	add	w25, w4, w3
   2a86c:	ldurb	w9, [x19, #-10]
   2a870:	add	w10, w10, w25
   2a874:	ldurb	w22, [x19, #-9]
   2a878:	add	w23, w23, w10
   2a87c:	ldurb	w7, [x19, #-8]
   2a880:	add	w9, w9, w23
   2a884:	ldurb	w21, [x19, #-7]
   2a888:	add	w22, w22, w9
   2a88c:	ldurb	w6, [x19, #-6]
   2a890:	add	w7, w7, w22
   2a894:	ldurb	w20, [x19, #-5]
   2a898:	add	w21, w21, w7
   2a89c:	ldurb	w5, [x19, #-4]
   2a8a0:	add	w6, w6, w21
   2a8a4:	ldurb	w18, [x19, #-3]
   2a8a8:	add	w20, w20, w6
   2a8ac:	ldurb	w4, [x19, #-2]
   2a8b0:	add	w5, w5, w20
   2a8b4:	add	w10, w10, w23
   2a8b8:	add	w18, w18, w5
   2a8bc:	add	w9, w9, w22
   2a8c0:	add	w0, w4, w18
   2a8c4:	add	w4, w3, w25
   2a8c8:	add	w4, w4, w11
   2a8cc:	ldurb	w17, [x19, #-1]
   2a8d0:	add	w4, w4, w10
   2a8d4:	add	w7, w7, w21
   2a8d8:	add	w4, w4, w9
   2a8dc:	add	w6, w6, w20
   2a8e0:	add	w2, w4, w7
   2a8e4:	add	w5, w5, w18
   2a8e8:	add	w2, w2, w6
   2a8ec:	add	w4, w17, w0, lsl #1
   2a8f0:	add	w2, w2, w5
   2a8f4:	add	w12, w17, w0
   2a8f8:	add	w2, w2, w4
   2a8fc:	cmp	x19, x16
   2a900:	add	w13, w13, w2
   2a904:	b.ne	2a83c <__asan_internal_strnlen@@Base+0x141c>  // b.any
   2a908:	udiv	w0, w12, w1
   2a90c:	sub	x26, x26, x14
   2a910:	msub	w12, w0, w1, w12
   2a914:	udiv	w0, w13, w1
   2a918:	msub	w13, w0, w1, w13
   2a91c:	b	2a7e4 <__asan_internal_strnlen@@Base+0x13c4>
   2a920:	ldrb	w1, [x19]
   2a924:	add	x19, x19, #0x10
   2a928:	ldurb	w11, [x19, #-15]
   2a92c:	add	w2, w1, w12
   2a930:	ldurb	w22, [x19, #-14]
   2a934:	add	w11, w11, w2
   2a938:	ldurb	w10, [x19, #-13]
   2a93c:	ldurb	w21, [x19, #-12]
   2a940:	add	w22, w22, w11
   2a944:	ldurb	w9, [x19, #-11]
   2a948:	add	w10, w10, w22
   2a94c:	ldurb	w20, [x19, #-10]
   2a950:	add	w21, w21, w10
   2a954:	ldurb	w7, [x19, #-9]
   2a958:	add	w9, w9, w21
   2a95c:	ldurb	w18, [x19, #-8]
   2a960:	add	w20, w20, w9
   2a964:	ldurb	w6, [x19, #-7]
   2a968:	add	w7, w7, w20
   2a96c:	ldurb	w17, [x19, #-6]
   2a970:	add	w18, w18, w7
   2a974:	add	w1, w2, w13
   2a978:	ldurb	w5, [x19, #-5]
   2a97c:	add	w6, w6, w18
   2a980:	add	w11, w11, w22
   2a984:	ldurb	w16, [x19, #-2]
   2a988:	add	w17, w17, w6
   2a98c:	ldurb	w15, [x19, #-4]
   2a990:	add	w1, w1, w11
   2a994:	ldurb	w3, [x19, #-3]
   2a998:	add	w10, w10, w21
   2a99c:	add	w5, w5, w17
   2a9a0:	add	w1, w1, w10
   2a9a4:	add	w9, w9, w20
   2a9a8:	add	w15, w15, w5
   2a9ac:	add	w1, w1, w9
   2a9b0:	add	w7, w7, w18
   2a9b4:	add	w3, w3, w15
   2a9b8:	add	w0, w1, w7
   2a9bc:	add	w6, w6, w17
   2a9c0:	ldurb	w2, [x19, #-1]
   2a9c4:	add	w0, w0, w6
   2a9c8:	add	w5, w5, w15
   2a9cc:	add	w12, w16, w3
   2a9d0:	add	w0, w0, w5
   2a9d4:	add	w3, w16, w3, lsl #1
   2a9d8:	add	w12, w2, w12
   2a9dc:	add	w0, w0, w3
   2a9e0:	add	w13, w12, w0
   2a9e4:	b	2a7f8 <__asan_internal_strnlen@@Base+0x13d8>
   2a9e8:	ldrb	w0, [x19, x3]
   2a9ec:	add	x3, x3, #0x1
   2a9f0:	add	w12, w12, w0
   2a9f4:	add	w13, w13, w12
   2a9f8:	b	2a80c <__asan_internal_strnlen@@Base+0x13ec>
   2a9fc:	stp	x29, x30, [sp, #-80]!
   2aa00:	mov	x29, sp
   2aa04:	stp	x23, x24, [sp, #48]
   2aa08:	mov	x23, x1
   2aa0c:	mov	x24, x2
   2aa10:	mov	x2, x4
   2aa14:	stp	x21, x22, [sp, #32]
   2aa18:	mov	x22, x6
   2aa1c:	mov	x21, x7
   2aa20:	str	x25, [sp, #64]
   2aa24:	mov	x25, x3
   2aa28:	mov	x3, x5
   2aa2c:	add	x5, x23, #0x4
   2aa30:	mov	x1, #0x0                   	// #0
   2aa34:	stp	x19, x20, [sp, #16]
   2aa38:	mov	x20, #0x0                   	// #0
   2aa3c:	ldrb	w4, [x5, x1]
   2aa40:	add	x1, x1, #0x1
   2aa44:	cmp	x1, #0x8
   2aa48:	orr	x20, x4, x20, lsl #8
   2aa4c:	b.ne	2aa3c <__asan_internal_strnlen@@Base+0x161c>  // b.any
   2aa50:	ldr	x19, [x22]
   2aa54:	cbz	x19, 2aa64 <__asan_internal_strnlen@@Base+0x1644>
   2aa58:	ldr	x1, [x21]
   2aa5c:	cmp	x20, x1
   2aa60:	b.ls	2aa74 <__asan_internal_strnlen@@Base+0x1654>  // b.plast
   2aa64:	mov	x1, x20
   2aa68:	bl	6930 <__asan_backtrace_alloc@plt>
   2aa6c:	mov	x19, x0
   2aa70:	cbz	x0, 2aaa0 <__asan_internal_strnlen@@Base+0x1680>
   2aa74:	mov	x4, x20
   2aa78:	mov	x3, x19
   2aa7c:	mov	x2, x25
   2aa80:	sub	x1, x24, #0xc
   2aa84:	add	x0, x23, #0xc
   2aa88:	bl	29d00 <__asan_internal_strnlen@@Base+0x8e0>
   2aa8c:	cbz	w0, 2aa98 <__asan_internal_strnlen@@Base+0x1678>
   2aa90:	str	x19, [x22]
   2aa94:	str	x20, [x21]
   2aa98:	mov	w0, #0x1                   	// #1
   2aa9c:	b	2aaa4 <__asan_internal_strnlen@@Base+0x1684>
   2aaa0:	mov	w0, #0x0                   	// #0
   2aaa4:	ldp	x19, x20, [sp, #16]
   2aaa8:	ldp	x21, x22, [sp, #32]
   2aaac:	ldp	x23, x24, [sp, #48]
   2aab0:	ldr	x25, [sp, #64]
   2aab4:	ldp	x29, x30, [sp], #80
   2aab8:	ret
   2aabc:	sub	sp, sp, #0x490
   2aac0:	stp	x29, x30, [sp, #80]
   2aac4:	add	x29, sp, #0x50
   2aac8:	stp	x27, x28, [sp, #160]
   2aacc:	mov	x28, x0
   2aad0:	ldr	w0, [sp, #1192]
   2aad4:	stp	x19, x20, [sp, #96]
   2aad8:	mov	x19, x4
   2aadc:	mov	x20, x5
   2aae0:	stp	x21, x22, [sp, #112]
   2aae4:	ldr	w21, [sp, #1184]
   2aae8:	stp	x23, x24, [sp, #128]
   2aaec:	mov	w24, w2
   2aaf0:	stp	x25, x26, [sp, #144]
   2aaf4:	stp	x3, x7, [sp, #240]
   2aaf8:	str	x6, [sp, #272]
   2aafc:	str	x1, [sp, #296]
   2ab00:	cbnz	w0, 2ab10 <__asan_internal_strnlen@@Base+0x16f0>
   2ab04:	ldr	x0, [sp, #1168]
   2ab08:	str	wzr, [x7]
   2ab0c:	str	wzr, [x0]
   2ab10:	add	x22, sp, #0x188
   2ab14:	mov	x5, x20
   2ab18:	mov	x6, x22
   2ab1c:	mov	x4, x19
   2ab20:	mov	w1, w24
   2ab24:	mov	x0, x28
   2ab28:	mov	x3, #0x40                  	// #64
   2ab2c:	mov	x2, #0x0                   	// #0
   2ab30:	bl	6b40 <__asan_backtrace_get_view@plt>
   2ab34:	cbz	w0, 2ab84 <__asan_internal_strnlen@@Base+0x1764>
   2ab38:	ldr	x1, [sp, #392]
   2ab3c:	mov	x2, #0x40                  	// #64
   2ab40:	add	x0, sp, #0x290
   2ab44:	bl	6840 <__asan_internal_memcpy@plt>
   2ab48:	mov	x1, x22
   2ab4c:	mov	x0, x28
   2ab50:	mov	x3, x20
   2ab54:	mov	x2, x19
   2ab58:	bl	67d0 <__asan_backtrace_release_view@plt>
   2ab5c:	ldr	w1, [sp, #656]
   2ab60:	mov	w0, #0x457f                	// #17791
   2ab64:	movk	w0, #0x464c, lsl #16
   2ab68:	cmp	w1, w0
   2ab6c:	b.eq	2ab90 <__asan_internal_strnlen@@Base+0x1770>  // b.none
   2ab70:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2ab74:	add	x1, x1, #0x90c
   2ab78:	mov	w2, #0x0                   	// #0
   2ab7c:	mov	x0, x20
   2ab80:	blr	x19
   2ab84:	mov	w27, #0x0                   	// #0
   2ab88:	mov	x22, #0x0                   	// #0
   2ab8c:	b	2bc04 <__asan_internal_strnlen@@Base+0x27e4>
   2ab90:	ldrb	w0, [sp, #662]
   2ab94:	cmp	w0, #0x1
   2ab98:	b.eq	2abac <__asan_internal_strnlen@@Base+0x178c>  // b.none
   2ab9c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2aba0:	mov	w2, #0x0                   	// #0
   2aba4:	add	x1, x1, #0x927
   2aba8:	b	2ab7c <__asan_internal_strnlen@@Base+0x175c>
   2abac:	ldrb	w0, [sp, #660]
   2abb0:	cmp	w0, #0x2
   2abb4:	b.eq	2abc8 <__asan_internal_strnlen@@Base+0x17a8>  // b.none
   2abb8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2abbc:	mov	w2, #0x0                   	// #0
   2abc0:	add	x1, x1, #0x953
   2abc4:	b	2ab7c <__asan_internal_strnlen@@Base+0x175c>
   2abc8:	ldrb	w0, [sp, #661]
   2abcc:	sub	w0, w0, #0x1
   2abd0:	and	w0, w0, #0xff
   2abd4:	cmp	w0, #0x1
   2abd8:	b.ls	2abec <__asan_internal_strnlen@@Base+0x17cc>  // b.plast
   2abdc:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2abe0:	mov	w2, #0x0                   	// #0
   2abe4:	add	x1, x1, #0x97b
   2abe8:	b	2ab7c <__asan_internal_strnlen@@Base+0x175c>
   2abec:	cbz	w21, 2abfc <__asan_internal_strnlen@@Base+0x17dc>
   2abf0:	ldrh	w0, [sp, #672]
   2abf4:	cmp	w0, #0x3
   2abf8:	b.eq	2bb30 <__asan_internal_strnlen@@Base+0x2710>  // b.none
   2abfc:	ldrh	w0, [sp, #716]
   2ac00:	mov	w23, #0xffff                	// #65535
   2ac04:	ldrh	w21, [sp, #718]
   2ac08:	str	w0, [sp, #208]
   2ac0c:	cmp	w0, #0x0
   2ac10:	ccmp	w21, w23, #0x4, ne  // ne = any
   2ac14:	ldr	x26, [sp, #696]
   2ac18:	b.ne	2ac98 <__asan_internal_strnlen@@Base+0x1878>  // b.any
   2ac1c:	cbz	x26, 2ac98 <__asan_internal_strnlen@@Base+0x1878>
   2ac20:	add	x22, sp, #0x350
   2ac24:	mov	x5, x20
   2ac28:	mov	x6, x22
   2ac2c:	mov	x4, x19
   2ac30:	mov	x2, x26
   2ac34:	mov	w1, w24
   2ac38:	mov	x0, x28
   2ac3c:	mov	x3, #0x8                   	// #8
   2ac40:	bl	6b40 <__asan_backtrace_get_view@plt>
   2ac44:	cbz	w0, 2ab84 <__asan_internal_strnlen@@Base+0x1764>
   2ac48:	ldr	w1, [sp, #208]
   2ac4c:	ldr	x0, [sp, #848]
   2ac50:	cbnz	w1, 2ac64 <__asan_internal_strnlen@@Base+0x1844>
   2ac54:	ldr	w1, [x0, #32]
   2ac58:	cmp	w21, w23
   2ac5c:	str	w1, [sp, #208]
   2ac60:	b.ne	2ac84 <__asan_internal_strnlen@@Base+0x1864>  // b.any
   2ac64:	ldr	w21, [x0, #40]
   2ac68:	ldr	w0, [sp, #208]
   2ac6c:	cmp	w0, w21
   2ac70:	mov	w0, #0xffff                	// #65535
   2ac74:	ccmp	w21, w0, #0x0, ls  // ls = plast
   2ac78:	mov	w0, w21
   2ac7c:	sub	w21, w21, #0x100
   2ac80:	csel	w21, w21, w0, hi  // hi = pmore
   2ac84:	mov	x3, x20
   2ac88:	mov	x2, x19
   2ac8c:	mov	x1, x22
   2ac90:	mov	x0, x28
   2ac94:	bl	67d0 <__asan_backtrace_release_view@plt>
   2ac98:	ldr	w0, [sp, #208]
   2ac9c:	add	x6, sp, #0x1a0
   2aca0:	mov	x5, x20
   2aca4:	mov	x4, x19
   2aca8:	sub	w3, w0, #0x1
   2acac:	add	x2, x26, #0x40
   2acb0:	mov	w1, w24
   2acb4:	mov	x0, x28
   2acb8:	lsl	x3, x3, #6
   2acbc:	bl	6b40 <__asan_backtrace_get_view@plt>
   2acc0:	cbz	w0, 2ab84 <__asan_internal_strnlen@@Base+0x1764>
   2acc4:	ldr	x0, [sp, #416]
   2acc8:	sub	w21, w21, #0x1
   2accc:	str	x0, [sp, #264]
   2acd0:	add	x6, sp, #0x1b8
   2acd4:	mov	x5, x20
   2acd8:	mov	x4, x19
   2acdc:	add	x21, x0, x21, lsl #6
   2ace0:	mov	w1, w24
   2ace4:	ldr	x2, [x21, #24]
   2ace8:	ldr	x0, [x21, #32]
   2acec:	str	x0, [sp, #320]
   2acf0:	mov	x3, x0
   2acf4:	mov	x0, x28
   2acf8:	bl	6b40 <__asan_backtrace_get_view@plt>
   2acfc:	mov	w21, w0
   2ad00:	cbz	w0, 2bb38 <__asan_internal_strnlen@@Base+0x2718>
   2ad04:	add	x21, sp, #0x350
   2ad08:	mov	x2, #0x140                 	// #320
   2ad0c:	ldr	x0, [sp, #440]
   2ad10:	mov	w1, #0x0                   	// #0
   2ad14:	str	x0, [sp, #336]
   2ad18:	mov	x0, x21
   2ad1c:	bl	68d0 <__asan_internal_memset@plt>
   2ad20:	mov	x22, #0x0                   	// #0
   2ad24:	mov	w0, #0x1                   	// #1
   2ad28:	str	w0, [sp, #224]
   2ad2c:	adrp	x0, 50000 <__asan_cplus_demangle_builtin_types@@Base+0x20>
   2ad30:	add	x0, x0, #0xa80
   2ad34:	ldr	x26, [sp, #264]
   2ad38:	str	x0, [sp, #344]
   2ad3c:	add	x0, sp, #0x260
   2ad40:	str	wzr, [sp, #184]
   2ad44:	str	wzr, [sp, #192]
   2ad48:	str	wzr, [sp, #200]
   2ad4c:	str	wzr, [sp, #216]
   2ad50:	str	xzr, [sp, #232]
   2ad54:	str	xzr, [sp, #256]
   2ad58:	str	wzr, [sp, #280]
   2ad5c:	str	wzr, [sp, #284]
   2ad60:	str	xzr, [sp, #288]
   2ad64:	str	xzr, [sp, #304]
   2ad68:	str	wzr, [sp, #312]
   2ad6c:	str	wzr, [sp, #316]
   2ad70:	str	x0, [sp, #328]
   2ad74:	add	x0, x0, #0x18
   2ad78:	str	x21, [sp, #352]
   2ad7c:	str	x0, [sp, #360]
   2ad80:	ldr	w0, [sp, #208]
   2ad84:	ldr	w1, [sp, #224]
   2ad88:	cmp	w0, w1
   2ad8c:	b.hi	2adec <__asan_internal_strnlen@@Base+0x19cc>  // b.pmore
   2ad90:	ldr	w0, [sp, #216]
   2ad94:	ldr	w1, [sp, #284]
   2ad98:	cmp	w0, #0x0
   2ad9c:	csel	w0, w0, w1, ne  // ne = any
   2ada0:	str	w0, [sp, #216]
   2ada4:	cmp	w0, #0x0
   2ada8:	ldr	w0, [sp, #1192]
   2adac:	eor	w0, w0, #0x1
   2adb0:	and	w0, w0, #0x1
   2adb4:	csel	w0, w0, wzr, ne  // ne = any
   2adb8:	cbz	w0, 2b55c <__asan_internal_strnlen@@Base+0x213c>
   2adbc:	ldr	w0, [sp, #216]
   2adc0:	sub	w21, w0, #0x1
   2adc4:	ldr	x0, [sp, #264]
   2adc8:	add	x21, x0, x21, lsl #6
   2adcc:	ldr	w0, [sp, #208]
   2add0:	ldr	w26, [x21, #40]
   2add4:	cmp	w0, w26
   2add8:	b.hi	2b130 <__asan_internal_strnlen@@Base+0x1d10>  // b.pmore
   2addc:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2ade0:	mov	w2, #0x0                   	// #0
   2ade4:	add	x1, x1, #0x9fd
   2ade8:	b	2ae28 <__asan_internal_strnlen@@Base+0x1a08>
   2adec:	ldr	w0, [x26, #4]
   2adf0:	cmp	w0, #0x2
   2adf4:	b.eq	2ae40 <__asan_internal_strnlen@@Base+0x1a20>  // b.none
   2adf8:	cmp	w0, #0xb
   2adfc:	ldr	w1, [sp, #224]
   2ae00:	ldr	w0, [sp, #284]
   2ae04:	csel	w0, w0, w1, ne  // ne = any
   2ae08:	str	w0, [sp, #284]
   2ae0c:	ldr	x0, [sp, #320]
   2ae10:	ldr	w23, [x26]
   2ae14:	cmp	x23, x0
   2ae18:	b.cc	2ae4c <__asan_internal_strnlen@@Base+0x1a2c>  // b.lo, b.ul, b.last
   2ae1c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2ae20:	add	x1, x1, #0x9a2
   2ae24:	mov	w2, #0x0                   	// #0
   2ae28:	mov	w27, #0x0                   	// #0
   2ae2c:	mov	w25, #0x0                   	// #0
   2ae30:	mov	x0, x20
   2ae34:	blr	x19
   2ae38:	mov	w21, #0x1                   	// #1
   2ae3c:	b	2bb50 <__asan_internal_strnlen@@Base+0x2730>
   2ae40:	ldr	w0, [sp, #224]
   2ae44:	str	w0, [sp, #216]
   2ae48:	b	2ae0c <__asan_internal_strnlen@@Base+0x19ec>
   2ae4c:	ldr	x0, [sp, #336]
   2ae50:	mov	x21, #0x0                   	// #0
   2ae54:	add	x23, x0, x23
   2ae58:	ldr	x0, [sp, #344]
   2ae5c:	ldr	x1, [x0, x21, lsl #3]
   2ae60:	mov	x0, x23
   2ae64:	bl	6b90 <__asan_internal_strcmp@plt>
   2ae68:	cbnz	w0, 2b018 <__asan_internal_strnlen@@Base+0x1bf8>
   2ae6c:	ldr	x2, [sp, #352]
   2ae70:	sbfiz	x0, x21, #5, #32
   2ae74:	ldr	x1, [x26, #24]
   2ae78:	str	x1, [x2, x0]
   2ae7c:	add	x1, sp, #0x358
   2ae80:	ldr	x2, [x26, #32]
   2ae84:	str	x2, [x1, x0]
   2ae88:	add	x2, sp, #0x368
   2ae8c:	ldr	x1, [x26, #8]
   2ae90:	ubfx	w1, w1, #11, #1
   2ae94:	str	w1, [x2, x0]
   2ae98:	ldr	w0, [sp, #1192]
   2ae9c:	ldr	x1, [sp, #1200]
   2aea0:	eor	w0, w0, #0x1
   2aea4:	and	w0, w0, #0x1
   2aea8:	cmp	x1, #0x0
   2aeac:	csinc	w0, w0, wzr, eq  // eq = none
   2aeb0:	cbz	w0, 2af90 <__asan_internal_strnlen@@Base+0x1b70>
   2aeb4:	ldr	w0, [sp, #184]
   2aeb8:	cbnz	w0, 2af90 <__asan_internal_strnlen@@Base+0x1b70>
   2aebc:	mov	x0, x23
   2aec0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2aec4:	add	x1, x1, #0x9c0
   2aec8:	bl	6b90 <__asan_internal_strcmp@plt>
   2aecc:	mov	w25, w0
   2aed0:	cbnz	w0, 2af90 <__asan_internal_strnlen@@Base+0x1b70>
   2aed4:	ldp	x2, x3, [x26, #24]
   2aed8:	add	x6, sp, #0x200
   2aedc:	mov	x5, x20
   2aee0:	mov	x4, x19
   2aee4:	mov	w1, w24
   2aee8:	mov	x0, x28
   2aeec:	bl	6b40 <__asan_backtrace_get_view@plt>
   2aef0:	mov	w27, w0
   2aef4:	cbz	w0, 2bc54 <__asan_internal_strnlen@@Base+0x2834>
   2aef8:	ldr	x21, [sp, #512]
   2aefc:	ldr	w0, [x21, #8]
   2af00:	cmp	w0, #0x3
   2af04:	b.ne	2af5c <__asan_internal_strnlen@@Base+0x1b3c>  // b.any
   2af08:	ldr	w0, [x21]
   2af0c:	cmp	w0, #0x4
   2af10:	b.ne	2af5c <__asan_internal_strnlen@@Base+0x1b3c>  // b.any
   2af14:	add	x27, x21, #0xc
   2af18:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2af1c:	mov	x0, x27
   2af20:	add	x1, x1, #0x9d3
   2af24:	mov	x2, #0x4                   	// #4
   2af28:	bl	6bd0 <__asan_internal_strncmp@plt>
   2af2c:	cbnz	w0, 2af5c <__asan_internal_strnlen@@Base+0x1b3c>
   2af30:	ldp	w0, w2, [x21]
   2af34:	ldr	x3, [x26, #32]
   2af38:	add	w0, w0, #0x3
   2af3c:	and	w0, w0, #0xfffffffc
   2af40:	add	w1, w2, #0xc
   2af44:	add	w1, w1, w0
   2af48:	cmp	x3, x1
   2af4c:	b.hi	2af5c <__asan_internal_strnlen@@Base+0x1b3c>  // b.pmore
   2af50:	add	x0, x27, w0, uxtw
   2af54:	str	x0, [sp, #256]
   2af58:	str	w2, [sp, #280]
   2af5c:	ldr	w0, [sp, #1208]
   2af60:	cbz	w0, 2af88 <__asan_internal_strnlen@@Base+0x1b68>
   2af64:	ldr	w0, [sp, #280]
   2af68:	ldr	w1, [sp, #1208]
   2af6c:	cmp	w0, w1
   2af70:	b.ne	2bc5c <__asan_internal_strnlen@@Base+0x283c>  // b.any
   2af74:	mov	x2, x0
   2af78:	ldr	x0, [sp, #256]
   2af7c:	ldr	x1, [sp, #1200]
   2af80:	bl	6c90 <__asan_internal_memcmp@plt>
   2af84:	cbnz	w0, 2bc5c <__asan_internal_strnlen@@Base+0x283c>
   2af88:	mov	w0, #0x1                   	// #1
   2af8c:	str	w0, [sp, #184]
   2af90:	ldr	w0, [sp, #192]
   2af94:	ldr	w1, [sp, #1192]
   2af98:	orr	w0, w0, w1
   2af9c:	cbnz	w0, 2b02c <__asan_internal_strnlen@@Base+0x1c0c>
   2afa0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2afa4:	mov	x0, x23
   2afa8:	add	x1, x1, #0x9d7
   2afac:	bl	6b90 <__asan_internal_strcmp@plt>
   2afb0:	cbnz	w0, 2b028 <__asan_internal_strnlen@@Base+0x1c08>
   2afb4:	ldp	x2, x3, [x26, #24]
   2afb8:	add	x6, sp, #0x218
   2afbc:	mov	x5, x20
   2afc0:	mov	x4, x19
   2afc4:	mov	w1, w24
   2afc8:	mov	x0, x28
   2afcc:	bl	6b40 <__asan_backtrace_get_view@plt>
   2afd0:	mov	w25, w0
   2afd4:	cbz	w0, 2bc6c <__asan_internal_strnlen@@Base+0x284c>
   2afd8:	ldr	x1, [x26, #32]
   2afdc:	ldr	x21, [sp, #536]
   2afe0:	mov	x0, x21
   2afe4:	bl	6bb0 <__asan_internal_strnlen@plt>
   2afe8:	add	x0, x0, #0x3
   2afec:	ldr	x1, [x26, #32]
   2aff0:	and	x0, x0, #0xfffffffffffffffc
   2aff4:	add	x2, x0, #0x4
   2aff8:	cmp	x2, x1
   2affc:	b.hi	2b00c <__asan_internal_strnlen@@Base+0x1bec>  // b.pmore
   2b000:	ldr	w0, [x21, x0]
   2b004:	str	x21, [sp, #288]
   2b008:	str	w0, [sp, #312]
   2b00c:	mov	w0, #0x1                   	// #1
   2b010:	str	w0, [sp, #192]
   2b014:	b	2b02c <__asan_internal_strnlen@@Base+0x1c0c>
   2b018:	add	x21, x21, #0x1
   2b01c:	cmp	x21, #0xa
   2b020:	b.ne	2ae58 <__asan_internal_strnlen@@Base+0x1a38>  // b.any
   2b024:	b	2ae98 <__asan_internal_strnlen@@Base+0x1a78>
   2b028:	str	wzr, [sp, #192]
   2b02c:	ldr	w0, [sp, #200]
   2b030:	cbnz	w0, 2b0a8 <__asan_internal_strnlen@@Base+0x1c88>
   2b034:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2b038:	mov	x0, x23
   2b03c:	add	x1, x1, #0x9e6
   2b040:	bl	6b90 <__asan_internal_strcmp@plt>
   2b044:	cbnz	w0, 2b0a8 <__asan_internal_strnlen@@Base+0x1c88>
   2b048:	ldp	x2, x3, [x26, #24]
   2b04c:	add	x6, sp, #0x230
   2b050:	mov	x5, x20
   2b054:	mov	x4, x19
   2b058:	mov	w1, w24
   2b05c:	mov	x0, x28
   2b060:	bl	6b40 <__asan_backtrace_get_view@plt>
   2b064:	mov	w25, w0
   2b068:	cbz	w0, 2bc70 <__asan_internal_strnlen@@Base+0x2850>
   2b06c:	ldr	x1, [x26, #32]
   2b070:	ldr	x0, [sp, #560]
   2b074:	str	x0, [sp, #232]
   2b078:	bl	6bb0 <__asan_internal_strnlen@plt>
   2b07c:	ldr	x1, [x26, #32]
   2b080:	cmp	x1, x0
   2b084:	b.ls	2b0a0 <__asan_internal_strnlen@@Base+0x1c80>  // b.plast
   2b088:	ldr	x2, [sp, #232]
   2b08c:	add	x0, x0, #0x1
   2b090:	add	x2, x2, x0
   2b094:	sub	w0, w1, w0
   2b098:	str	x2, [sp, #304]
   2b09c:	str	w0, [sp, #316]
   2b0a0:	mov	w0, #0x1                   	// #1
   2b0a4:	str	w0, [sp, #200]
   2b0a8:	ldrh	w0, [sp, #674]
   2b0ac:	cmp	w0, #0x15
   2b0b0:	b.ne	2b11c <__asan_internal_strnlen@@Base+0x1cfc>  // b.any
   2b0b4:	ldr	w0, [sp, #704]
   2b0b8:	tbnz	w0, #1, 2b11c <__asan_internal_strnlen@@Base+0x1cfc>
   2b0bc:	ldr	w21, [x26, #4]
   2b0c0:	cmp	w21, #0x1
   2b0c4:	b.ne	2b11c <__asan_internal_strnlen@@Base+0x1cfc>  // b.any
   2b0c8:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2b0cc:	mov	x0, x23
   2b0d0:	add	x1, x1, #0x9f8
   2b0d4:	bl	6b90 <__asan_internal_strcmp@plt>
   2b0d8:	cbnz	w0, 2b11c <__asan_internal_strnlen@@Base+0x1cfc>
   2b0dc:	ldp	x2, x3, [x26, #24]
   2b0e0:	mov	x5, x20
   2b0e4:	ldr	x6, [sp, #360]
   2b0e8:	mov	x4, x19
   2b0ec:	mov	w1, w24
   2b0f0:	mov	x0, x28
   2b0f4:	bl	6b40 <__asan_backtrace_get_view@plt>
   2b0f8:	mov	w25, w0
   2b0fc:	cbz	w0, 2bc78 <__asan_internal_strnlen@@Base+0x2858>
   2b100:	ldr	x0, [x26, #16]
   2b104:	str	x0, [sp, #608]
   2b108:	ldr	x22, [sp, #328]
   2b10c:	ldr	x0, [sp, #632]
   2b110:	str	x0, [sp, #616]
   2b114:	ldr	x0, [x26, #32]
   2b118:	str	x0, [sp, #624]
   2b11c:	ldr	w0, [sp, #224]
   2b120:	add	x26, x26, #0x40
   2b124:	add	w0, w0, #0x1
   2b128:	str	w0, [sp, #224]
   2b12c:	b	2ad80 <__asan_internal_strnlen@@Base+0x1960>
   2b130:	ldp	x2, x3, [x21, #24]
   2b134:	add	x6, sp, #0x1d0
   2b138:	mov	x5, x20
   2b13c:	mov	x4, x19
   2b140:	mov	w1, w24
   2b144:	mov	x0, x28
   2b148:	bl	6b40 <__asan_backtrace_get_view@plt>
   2b14c:	mov	w25, w0
   2b150:	cbz	w0, 2bc70 <__asan_internal_strnlen@@Base+0x2850>
   2b154:	ldr	x0, [sp, #264]
   2b158:	sub	w26, w26, #0x1
   2b15c:	add	x6, sp, #0x1e8
   2b160:	mov	x5, x20
   2b164:	mov	x4, x19
   2b168:	mov	w1, w24
   2b16c:	add	x26, x0, x26, lsl #6
   2b170:	mov	x0, x28
   2b174:	ldp	x2, x3, [x26, #24]
   2b178:	bl	6b40 <__asan_backtrace_get_view@plt>
   2b17c:	mov	w27, w0
   2b180:	cbz	w0, 2bc80 <__asan_internal_strnlen@@Base+0x2860>
   2b184:	mov	x3, x20
   2b188:	mov	x2, x19
   2b18c:	mov	x0, x28
   2b190:	mov	x1, #0x18                  	// #24
   2b194:	bl	6930 <__asan_backtrace_alloc@plt>
   2b198:	mov	x25, x0
   2b19c:	cbz	x0, 2b310 <__asan_internal_strnlen@@Base+0x1ef0>
   2b1a0:	ldr	x0, [x21, #32]
   2b1a4:	mov	x1, #0x18                  	// #24
   2b1a8:	ldr	x23, [sp, #464]
   2b1ac:	mov	x27, #0x0                   	// #0
   2b1b0:	udiv	x0, x0, x1
   2b1b4:	ldr	x4, [sp, #488]
   2b1b8:	ldr	x6, [x26, #32]
   2b1bc:	madd	x0, x0, x1, x23
   2b1c0:	mov	x26, x23
   2b1c4:	cmp	x0, x26
   2b1c8:	b.ne	2b274 <__asan_internal_strnlen@@Base+0x1e54>  // b.any
   2b1cc:	mov	x7, #0x18                  	// #24
   2b1d0:	mov	x3, x20
   2b1d4:	mov	x2, x19
   2b1d8:	mov	x0, x28
   2b1dc:	mul	x5, x27, x7
   2b1e0:	str	x6, [sp, #224]
   2b1e4:	stp	x5, x4, [sp, #208]
   2b1e8:	mov	x1, x5
   2b1ec:	bl	6930 <__asan_backtrace_alloc@plt>
   2b1f0:	mov	x21, x0
   2b1f4:	cbz	x0, 2b2f8 <__asan_internal_strnlen@@Base+0x1ed8>
   2b1f8:	ldp	x5, x4, [sp, #208]
   2b1fc:	mov	x7, #0x18                  	// #24
   2b200:	ldr	x6, [sp, #224]
   2b204:	mov	w2, w7
   2b208:	mov	w3, #0x0                   	// #0
   2b20c:	cmp	x26, x23
   2b210:	b.ne	2b29c <__asan_internal_strnlen@@Base+0x1e7c>  // b.any
   2b214:	mov	x1, x27
   2b218:	mov	x0, x21
   2b21c:	mov	x2, #0x18                  	// #24
   2b220:	adrp	x3, 29000 <__asan_cplus_demangle_init_info@@Base+0x5c>
   2b224:	add	x3, x3, #0x464
   2b228:	bl	6720 <__asan_backtrace_qsort@plt>
   2b22c:	stp	xzr, x21, [x25]
   2b230:	add	x1, sp, #0x1d0
   2b234:	mov	x0, x28
   2b238:	str	x27, [x25, #16]
   2b23c:	mov	x3, x20
   2b240:	mov	x2, x19
   2b244:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b248:	ldr	x1, [sp, #248]
   2b24c:	mov	w0, #0x1                   	// #1
   2b250:	str	w0, [x1]
   2b254:	add	x1, x28, #0x30
   2b258:	ldr	w0, [x28, #8]
   2b25c:	cbz	w0, 2b380 <__asan_internal_strnlen@@Base+0x1f60>
   2b260:	mov	x0, x1
   2b264:	ldar	x2, [x0]
   2b268:	cbz	x2, 2b53c <__asan_internal_strnlen@@Base+0x211c>
   2b26c:	mov	x0, x2
   2b270:	b	2b264 <__asan_internal_strnlen@@Base+0x1e44>
   2b274:	ldrb	w1, [x26, #4]
   2b278:	and	w1, w1, #0xf
   2b27c:	sub	w1, w1, #0x1
   2b280:	cmp	w1, #0x1
   2b284:	b.hi	2b294 <__asan_internal_strnlen@@Base+0x1e74>  // b.pmore
   2b288:	ldrh	w1, [x26, #6]
   2b28c:	cbz	w1, 2b294 <__asan_internal_strnlen@@Base+0x1e74>
   2b290:	add	x27, x27, #0x1
   2b294:	add	x26, x26, #0x18
   2b298:	b	2b1c4 <__asan_internal_strnlen@@Base+0x1da4>
   2b29c:	ldrb	w0, [x23, #4]
   2b2a0:	and	w0, w0, #0xf
   2b2a4:	sub	w0, w0, #0x1
   2b2a8:	cmp	w0, #0x1
   2b2ac:	b.hi	2b378 <__asan_internal_strnlen@@Base+0x1f58>  // b.pmore
   2b2b0:	ldrh	w0, [x23, #6]
   2b2b4:	cbz	w0, 2b378 <__asan_internal_strnlen@@Base+0x1f58>
   2b2b8:	ldr	w0, [x23]
   2b2bc:	cmp	x6, x0
   2b2c0:	b.hi	2b320 <__asan_internal_strnlen@@Base+0x1f00>  // b.pmore
   2b2c4:	str	x5, [sp, #208]
   2b2c8:	mov	x0, x20
   2b2cc:	mov	w2, #0x0                   	// #0
   2b2d0:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2b2d4:	add	x1, x1, #0xa27
   2b2d8:	blr	x19
   2b2dc:	ldr	x5, [sp, #208]
   2b2e0:	mov	x4, x20
   2b2e4:	mov	x3, x19
   2b2e8:	mov	x1, x21
   2b2ec:	mov	x0, x28
   2b2f0:	mov	x2, x5
   2b2f4:	bl	6c20 <__asan_backtrace_free@plt>
   2b2f8:	mov	x4, x20
   2b2fc:	mov	x3, x19
   2b300:	mov	x1, x25
   2b304:	mov	x0, x28
   2b308:	mov	x2, #0x18                  	// #24
   2b30c:	bl	6c20 <__asan_backtrace_free@plt>
   2b310:	mov	w27, #0x1                   	// #1
   2b314:	mov	w25, w27
   2b318:	mov	w21, w27
   2b31c:	b	2bb50 <__asan_internal_strnlen@@Base+0x2730>
   2b320:	umull	x1, w3, w2
   2b324:	add	x0, x4, x0
   2b328:	add	x8, x21, x1
   2b32c:	str	x0, [x21, x1]
   2b330:	ldr	x1, [x23, #8]
   2b334:	cbz	x22, 2b360 <__asan_internal_strnlen@@Base+0x1f40>
   2b338:	ldr	x0, [x22]
   2b33c:	cmp	x0, x1
   2b340:	b.hi	2b360 <__asan_internal_strnlen@@Base+0x1f40>  // b.pmore
   2b344:	ldr	x7, [x22, #16]
   2b348:	add	x7, x0, x7
   2b34c:	cmp	x7, x1
   2b350:	b.ls	2b360 <__asan_internal_strnlen@@Base+0x1f40>  // b.plast
   2b354:	sub	x1, x1, x0
   2b358:	ldr	x0, [x22, #8]
   2b35c:	ldr	x1, [x0, x1]
   2b360:	add	w3, w3, #0x1
   2b364:	ldr	x0, [sp, #240]
   2b368:	add	x1, x0, x1
   2b36c:	str	x1, [x8, #8]
   2b370:	ldr	x0, [x23, #16]
   2b374:	str	x0, [x8, #16]
   2b378:	add	x23, x23, #0x18
   2b37c:	b	2b20c <__asan_internal_strnlen@@Base+0x1dec>
   2b380:	ldr	x0, [x28, #48]
   2b384:	cbnz	x0, 2b530 <__asan_internal_strnlen@@Base+0x2110>
   2b388:	str	x25, [x1]
   2b38c:	mov	w0, #0x1                   	// #1
   2b390:	str	w0, [sp, #208]
   2b394:	mov	x3, x20
   2b398:	mov	x2, x19
   2b39c:	add	x1, sp, #0x1a0
   2b3a0:	mov	x0, x28
   2b3a4:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b3a8:	mov	x0, x28
   2b3ac:	mov	x3, x20
   2b3b0:	mov	x2, x19
   2b3b4:	add	x1, sp, #0x1b8
   2b3b8:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b3bc:	ldr	x0, [sp, #256]
   2b3c0:	cbz	x0, 2b5e4 <__asan_internal_strnlen@@Base+0x21c4>
   2b3c4:	adrp	x4, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2b3c8:	add	x4, x4, #0xa48
   2b3cc:	mov	x0, x4
   2b3d0:	ldr	w25, [sp, #280]
   2b3d4:	str	x4, [sp, #216]
   2b3d8:	bl	6850 <__asan_internal_strlen@plt>
   2b3dc:	add	x27, x25, #0x1
   2b3e0:	adrp	x6, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2b3e4:	mov	x21, x0
   2b3e8:	add	x0, x6, #0xa62
   2b3ec:	bl	6850 <__asan_internal_strlen@plt>
   2b3f0:	mov	x26, x0
   2b3f4:	add	x0, x21, x0
   2b3f8:	mov	x3, x20
   2b3fc:	add	x27, x0, x27, lsl #1
   2b400:	mov	x2, x19
   2b404:	mov	x1, x27
   2b408:	mov	x0, x28
   2b40c:	bl	6930 <__asan_backtrace_alloc@plt>
   2b410:	mov	x23, x0
   2b414:	cbz	x0, 2b5e4 <__asan_internal_strnlen@@Base+0x21c4>
   2b418:	ldr	x4, [sp, #216]
   2b41c:	mov	x2, x21
   2b420:	add	x21, x0, x21
   2b424:	mov	x1, x4
   2b428:	bl	6840 <__asan_internal_memcpy@plt>
   2b42c:	mov	x2, #0x0                   	// #0
   2b430:	mov	w0, #0x2f                  	// #47
   2b434:	adrp	x6, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2b438:	cmp	x25, x2
   2b43c:	b.hi	2b564 <__asan_internal_strnlen@@Base+0x2144>  // b.pmore
   2b440:	add	x1, x6, #0xa62
   2b444:	mov	x2, x26
   2b448:	mov	x0, x21
   2b44c:	bl	6840 <__asan_internal_memcpy@plt>
   2b450:	strb	wzr, [x21, x26]
   2b454:	add	x3, sp, #0x2d0
   2b458:	mov	x2, x20
   2b45c:	mov	x1, x19
   2b460:	mov	x0, x23
   2b464:	bl	6db0 <__asan_backtrace_open@plt>
   2b468:	mov	x4, x20
   2b46c:	mov	w21, w0
   2b470:	mov	x3, x19
   2b474:	mov	x2, x27
   2b478:	mov	x1, x23
   2b47c:	mov	x0, x28
   2b480:	bl	6c20 <__asan_backtrace_free@plt>
   2b484:	tbnz	w21, #31, 2b5e4 <__asan_internal_strnlen@@Base+0x21c4>
   2b488:	mov	x0, x28
   2b48c:	mov	x3, x20
   2b490:	mov	x2, x19
   2b494:	add	x1, sp, #0x200
   2b498:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b49c:	ldr	w0, [sp, #192]
   2b4a0:	cbz	w0, 2b4b8 <__asan_internal_strnlen@@Base+0x2098>
   2b4a4:	mov	x3, x20
   2b4a8:	mov	x2, x19
   2b4ac:	add	x1, sp, #0x218
   2b4b0:	mov	x0, x28
   2b4b4:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b4b8:	ldr	w0, [sp, #200]
   2b4bc:	cbz	w0, 2b4d4 <__asan_internal_strnlen@@Base+0x20b4>
   2b4c0:	mov	x3, x20
   2b4c4:	mov	x2, x19
   2b4c8:	add	x1, sp, #0x230
   2b4cc:	mov	x0, x28
   2b4d0:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b4d4:	ldp	x3, x7, [sp, #240]
   2b4d8:	mov	w0, #0x1                   	// #1
   2b4dc:	ldr	x6, [sp, #272]
   2b4e0:	str	w0, [sp, #24]
   2b4e4:	ldr	x0, [sp, #1168]
   2b4e8:	str	x0, [sp]
   2b4ec:	str	xzr, [sp, #8]
   2b4f0:	mov	w2, w21
   2b4f4:	str	wzr, [sp, #16]
   2b4f8:	mov	x5, x20
   2b4fc:	str	xzr, [sp, #32]
   2b500:	mov	x4, x19
   2b504:	str	wzr, [sp, #40]
   2b508:	mov	x0, x28
   2b50c:	adrp	x1, 32000 <__asan_backtrace_vector_release@@Base+0x5b60>
   2b510:	add	x1, x1, #0x60f
   2b514:	bl	2aabc <__asan_internal_strnlen@@Base+0x169c>
   2b518:	mov	w22, w0
   2b51c:	mov	x2, x20
   2b520:	mov	x1, x19
   2b524:	tbz	w0, #31, 2b5b8 <__asan_internal_strnlen@@Base+0x2198>
   2b528:	mov	w0, w21
   2b52c:	b	2b5bc <__asan_internal_strnlen@@Base+0x219c>
   2b530:	mov	x1, x0
   2b534:	ldr	x0, [x0]
   2b538:	b	2b384 <__asan_internal_strnlen@@Base+0x1f64>
   2b53c:	ldxr	x2, [x0]
   2b540:	cbnz	x2, 2b54c <__asan_internal_strnlen@@Base+0x212c>
   2b544:	stlxr	w3, x25, [x0]
   2b548:	cbnz	w3, 2b53c <__asan_internal_strnlen@@Base+0x211c>
   2b54c:	dmb	ish
   2b550:	cmp	x2, #0x0
   2b554:	b.eq	2b38c <__asan_internal_strnlen@@Base+0x1f6c>  // b.none
   2b558:	b	2b260 <__asan_internal_strnlen@@Base+0x1e40>
   2b55c:	str	wzr, [sp, #208]
   2b560:	b	2b394 <__asan_internal_strnlen@@Base+0x1f74>
   2b564:	ldr	x1, [sp, #256]
   2b568:	ldrb	w1, [x1, x2]
   2b56c:	lsr	w4, w1, #4
   2b570:	and	w1, w1, #0xf
   2b574:	cmp	w4, #0x9
   2b578:	add	w7, w4, #0x30
   2b57c:	add	w3, w4, #0x57
   2b580:	add	w4, w1, #0x30
   2b584:	csel	w3, w3, w7, hi  // hi = pmore
   2b588:	cmp	w1, #0x9
   2b58c:	strb	w3, [x21]
   2b590:	add	w3, w1, #0x57
   2b594:	csel	w1, w3, w4, hi  // hi = pmore
   2b598:	strb	w1, [x21, #1]
   2b59c:	cbz	x2, 2b5ac <__asan_internal_strnlen@@Base+0x218c>
   2b5a0:	add	x21, x21, #0x2
   2b5a4:	add	x2, x2, #0x1
   2b5a8:	b	2b438 <__asan_internal_strnlen@@Base+0x2018>
   2b5ac:	add	x21, x21, #0x3
   2b5b0:	sturb	w0, [x21, #-1]
   2b5b4:	b	2b5a4 <__asan_internal_strnlen@@Base+0x2184>
   2b5b8:	mov	w0, w24
   2b5bc:	bl	6d00 <__asan_backtrace_close@plt>
   2b5c0:	mov	w0, w22
   2b5c4:	ldp	x29, x30, [sp, #80]
   2b5c8:	ldp	x19, x20, [sp, #96]
   2b5cc:	ldp	x21, x22, [sp, #112]
   2b5d0:	ldp	x23, x24, [sp, #128]
   2b5d4:	ldp	x25, x26, [sp, #144]
   2b5d8:	ldp	x27, x28, [sp, #160]
   2b5dc:	add	sp, sp, #0x490
   2b5e0:	ret
   2b5e4:	ldr	w0, [sp, #184]
   2b5e8:	cbz	w0, 2b600 <__asan_internal_strnlen@@Base+0x21e0>
   2b5ec:	mov	x3, x20
   2b5f0:	mov	x2, x19
   2b5f4:	add	x1, sp, #0x200
   2b5f8:	mov	x0, x28
   2b5fc:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b600:	cbz	x22, 2b618 <__asan_internal_strnlen@@Base+0x21f8>
   2b604:	mov	x3, x20
   2b608:	mov	x2, x19
   2b60c:	add	x1, x22, #0x18
   2b610:	mov	x0, x28
   2b614:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b618:	ldr	x0, [sp, #288]
   2b61c:	cbz	x0, 2b67c <__asan_internal_strnlen@@Base+0x225c>
   2b620:	ldr	x1, [sp, #296]
   2b624:	mov	x2, x0
   2b628:	mov	x4, x20
   2b62c:	mov	x3, x19
   2b630:	mov	x0, x28
   2b634:	bl	29a2c <__asan_internal_strnlen@@Base+0x60c>
   2b638:	mov	w21, w0
   2b63c:	tbnz	w0, #31, 2b67c <__asan_internal_strnlen@@Base+0x225c>
   2b640:	ldr	w1, [sp, #312]
   2b644:	cbz	w1, 2b4a4 <__asan_internal_strnlen@@Base+0x2084>
   2b648:	add	x1, sp, #0x2d0
   2b64c:	bl	2c510 <__asan_backtrace_vector_release@@Base+0x70>
   2b650:	tbz	w0, #31, 2b738 <__asan_internal_strnlen@@Base+0x2318>
   2b654:	bl	6b20 <__errno_location@plt>
   2b658:	ldr	w2, [x0]
   2b65c:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2b660:	mov	x0, x20
   2b664:	add	x1, x1, #0xa69
   2b668:	blr	x19
   2b66c:	mov	x2, x20
   2b670:	mov	x1, x19
   2b674:	mov	w0, w21
   2b678:	bl	6d00 <__asan_backtrace_close@plt>
   2b67c:	ldr	w0, [sp, #192]
   2b680:	cbz	w0, 2b698 <__asan_internal_strnlen@@Base+0x2278>
   2b684:	mov	x3, x20
   2b688:	mov	x2, x19
   2b68c:	add	x1, sp, #0x218
   2b690:	mov	x0, x28
   2b694:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b698:	ldr	x0, [sp, #232]
   2b69c:	str	xzr, [sp, #376]
   2b6a0:	cbz	x0, 2b7c4 <__asan_internal_strnlen@@Base+0x23a4>
   2b6a4:	ldr	x1, [sp, #296]
   2b6a8:	mov	x2, x0
   2b6ac:	mov	x4, x20
   2b6b0:	mov	x3, x19
   2b6b4:	mov	x0, x28
   2b6b8:	bl	29a2c <__asan_internal_strnlen@@Base+0x60c>
   2b6bc:	mov	w21, w0
   2b6c0:	tbnz	w0, #31, 2b7c4 <__asan_internal_strnlen@@Base+0x23a4>
   2b6c4:	mov	w2, w0
   2b6c8:	ldr	w0, [sp, #316]
   2b6cc:	str	w0, [sp, #40]
   2b6d0:	mov	x5, x20
   2b6d4:	ldr	x0, [sp, #304]
   2b6d8:	str	x0, [sp, #32]
   2b6dc:	ldp	x3, x7, [sp, #240]
   2b6e0:	mov	w0, #0x1                   	// #1
   2b6e4:	str	w0, [sp, #24]
   2b6e8:	add	x0, sp, #0x178
   2b6ec:	ldr	x6, [sp, #272]
   2b6f0:	str	x0, [sp, #8]
   2b6f4:	ldr	x1, [sp, #296]
   2b6f8:	mov	x4, x19
   2b6fc:	ldr	x0, [sp, #1168]
   2b700:	str	x0, [sp]
   2b704:	str	wzr, [sp, #16]
   2b708:	mov	x0, x28
   2b70c:	bl	2aabc <__asan_internal_strnlen@@Base+0x169c>
   2b710:	mov	w22, w0
   2b714:	mov	x3, x20
   2b718:	mov	x2, x19
   2b71c:	add	x1, sp, #0x230
   2b720:	mov	x0, x28
   2b724:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b728:	tbz	w22, #31, 2b7e0 <__asan_internal_strnlen@@Base+0x23c0>
   2b72c:	mov	x2, x20
   2b730:	mov	x1, x19
   2b734:	b	2b528 <__asan_internal_strnlen@@Base+0x2108>
   2b738:	ldr	x3, [sp, #768]
   2b73c:	add	x25, sp, #0x248
   2b740:	mov	x6, x25
   2b744:	mov	x5, x20
   2b748:	mov	x4, x19
   2b74c:	mov	w1, w21
   2b750:	mov	x0, x28
   2b754:	mov	x2, #0x0                   	// #0
   2b758:	bl	6b40 <__asan_backtrace_get_view@plt>
   2b75c:	cbz	w0, 2b66c <__asan_internal_strnlen@@Base+0x224c>
   2b760:	ldr	x2, [sp, #584]
   2b764:	adrp	x0, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2b768:	ldr	x3, [sp, #768]
   2b76c:	add	x0, x0, #0xacc
   2b770:	add	x0, x0, #0x4e0
   2b774:	mov	w22, #0xffffffff            	// #-1
   2b778:	add	x3, x2, x3
   2b77c:	cmp	x3, x2
   2b780:	b.hi	2b7ac <__asan_internal_strnlen@@Base+0x238c>  // b.pmore
   2b784:	mov	x0, x28
   2b788:	mov	x3, x20
   2b78c:	mov	x2, x19
   2b790:	mov	x1, x25
   2b794:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b798:	mvn	w22, w22
   2b79c:	ldr	w0, [sp, #312]
   2b7a0:	cmp	w0, w22
   2b7a4:	b.eq	2b4a4 <__asan_internal_strnlen@@Base+0x2084>  // b.none
   2b7a8:	b	2b66c <__asan_internal_strnlen@@Base+0x224c>
   2b7ac:	ldrb	w1, [x2], #1
   2b7b0:	eor	w1, w1, w22
   2b7b4:	and	x1, x1, #0xff
   2b7b8:	ldr	w1, [x0, x1, lsl #2]
   2b7bc:	eor	w22, w1, w22, lsr #8
   2b7c0:	b	2b77c <__asan_internal_strnlen@@Base+0x235c>
   2b7c4:	ldr	w0, [sp, #200]
   2b7c8:	cbz	w0, 2b7e0 <__asan_internal_strnlen@@Base+0x23c0>
   2b7cc:	mov	x3, x20
   2b7d0:	mov	x2, x19
   2b7d4:	add	x1, sp, #0x230
   2b7d8:	mov	x0, x28
   2b7dc:	bl	67d0 <__asan_backtrace_release_view@plt>
   2b7e0:	add	x21, sp, #0x350
   2b7e4:	mov	w22, #0xa                   	// #10
   2b7e8:	mov	x1, x21
   2b7ec:	mov	x3, #0x0                   	// #0
   2b7f0:	mov	x25, #0x0                   	// #0
   2b7f4:	ldr	x2, [x1, #8]
   2b7f8:	cbz	x2, 2b818 <__asan_internal_strnlen@@Base+0x23f8>
   2b7fc:	ldr	x0, [x1]
   2b800:	cbz	x25, 2b850 <__asan_internal_strnlen@@Base+0x2430>
   2b804:	cmp	x0, x25
   2b808:	csel	x25, x25, x0, ge  // ge = tcont
   2b80c:	add	x0, x0, x2
   2b810:	cmp	x3, x0
   2b814:	csel	x3, x3, x0, ge  // ge = tcont
   2b818:	add	x1, x1, #0x20
   2b81c:	subs	w22, w22, #0x1
   2b820:	b.ne	2b7f4 <__asan_internal_strnlen@@Base+0x23d4>  // b.any
   2b824:	cmp	x25, #0x0
   2b828:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   2b82c:	b.ne	2b858 <__asan_internal_strnlen@@Base+0x2438>  // b.any
   2b830:	mov	x2, x20
   2b834:	mov	x1, x19
   2b838:	mov	w0, w24
   2b83c:	bl	6d00 <__asan_backtrace_close@plt>
   2b840:	mov	w27, w0
   2b844:	cbz	w0, 2bc98 <__asan_internal_strnlen@@Base+0x2878>
   2b848:	mov	w22, #0x1                   	// #1
   2b84c:	b	2b5c0 <__asan_internal_strnlen@@Base+0x21a0>
   2b850:	mov	x25, x0
   2b854:	b	2b80c <__asan_internal_strnlen@@Base+0x23ec>
   2b858:	add	x26, sp, #0x2d0
   2b85c:	mov	x5, x20
   2b860:	mov	x6, x26
   2b864:	mov	x4, x19
   2b868:	sub	x3, x3, x25
   2b86c:	mov	x2, x25
   2b870:	mov	w1, w24
   2b874:	mov	x0, x28
   2b878:	bl	6b40 <__asan_backtrace_get_view@plt>
   2b87c:	mov	w27, w0
   2b880:	cbz	w0, 2bc98 <__asan_internal_strnlen@@Base+0x2878>
   2b884:	mov	x2, x20
   2b888:	mov	x1, x19
   2b88c:	mov	w0, w24
   2b890:	bl	6d00 <__asan_backtrace_close@plt>
   2b894:	cbz	w0, 2bc94 <__asan_internal_strnlen@@Base+0x2874>
   2b898:	ldr	x3, [sp, #720]
   2b89c:	mov	x0, x21
   2b8a0:	mov	w2, #0x0                   	// #0
   2b8a4:	ldr	x1, [x0, #8]
   2b8a8:	cbnz	x1, 2bab4 <__asan_internal_strnlen@@Base+0x2694>
   2b8ac:	str	xzr, [x0, #16]
   2b8b0:	add	w2, w2, #0x1
   2b8b4:	add	x0, x0, #0x20
   2b8b8:	cmp	w2, #0xa
   2b8bc:	b.ne	2b8a4 <__asan_internal_strnlen@@Base+0x2484>  // b.any
   2b8c0:	add	x0, sp, #0x248
   2b8c4:	adrp	x25, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2b8c8:	mov	x27, x21
   2b8cc:	add	x25, x25, #0xa6f
   2b8d0:	mov	w24, #0x5                   	// #5
   2b8d4:	mov	x23, #0x0                   	// #0
   2b8d8:	str	x0, [sp, #184]
   2b8dc:	add	x0, sp, #0x180
   2b8e0:	str	x0, [sp, #192]
   2b8e4:	ldr	x0, [x27, #8]
   2b8e8:	cbnz	x0, 2b93c <__asan_internal_strnlen@@Base+0x251c>
   2b8ec:	ldr	x0, [x27, #168]
   2b8f0:	cbz	x0, 2b93c <__asan_internal_strnlen@@Base+0x251c>
   2b8f4:	cbnz	x23, 2b914 <__asan_internal_strnlen@@Base+0x24f4>
   2b8f8:	mov	x3, x20
   2b8fc:	mov	x2, x19
   2b900:	mov	x0, x28
   2b904:	mov	x1, #0x13b4                	// #5044
   2b908:	bl	6930 <__asan_backtrace_alloc@plt>
   2b90c:	mov	x23, x0
   2b910:	cbz	x0, 2bb1c <__asan_internal_strnlen@@Base+0x26fc>
   2b914:	ldr	x11, [x27, #168]
   2b918:	str	xzr, [sp, #384]
   2b91c:	str	xzr, [sp, #584]
   2b920:	cmp	x11, #0xb
   2b924:	b.hi	2bad0 <__asan_internal_strnlen@@Base+0x26b0>  // b.pmore
   2b928:	ldr	x0, [sp, #384]
   2b92c:	str	x0, [x27, #16]
   2b930:	ldr	x0, [sp, #584]
   2b934:	str	x0, [x27, #8]
   2b938:	str	wzr, [x27, #24]
   2b93c:	add	x27, x27, #0x20
   2b940:	subs	w24, w24, #0x1
   2b944:	b.ne	2b8e4 <__asan_internal_strnlen@@Base+0x24c4>  // b.any
   2b948:	mov	w24, #0x5                   	// #5
   2b94c:	ldr	x0, [x21, #8]
   2b950:	cbz	x0, 2b9f0 <__asan_internal_strnlen@@Base+0x25d0>
   2b954:	ldr	w0, [x21, #24]
   2b958:	cbz	w0, 2b9f0 <__asan_internal_strnlen@@Base+0x25d0>
   2b95c:	cbnz	x23, 2b97c <__asan_internal_strnlen@@Base+0x255c>
   2b960:	mov	x3, x20
   2b964:	mov	x2, x19
   2b968:	mov	x0, x28
   2b96c:	mov	x1, #0x13b4                	// #5044
   2b970:	bl	6930 <__asan_backtrace_alloc@plt>
   2b974:	mov	x23, x0
   2b978:	cbz	x0, 2bb1c <__asan_internal_strnlen@@Base+0x26fc>
   2b97c:	ldr	x5, [x21, #8]
   2b980:	cmp	x5, #0x17
   2b984:	b.ls	2bc88 <__asan_internal_strnlen@@Base+0x2868>  // b.plast
   2b988:	ldr	x27, [x21, #16]
   2b98c:	ldr	w4, [x27]
   2b990:	cmp	w4, #0x1
   2b994:	b.ne	2bc88 <__asan_internal_strnlen@@Base+0x2868>  // b.any
   2b998:	ldr	x1, [x27, #8]
   2b99c:	mov	x3, x20
   2b9a0:	mov	x2, x19
   2b9a4:	mov	x0, x28
   2b9a8:	str	x5, [sp, #184]
   2b9ac:	str	w4, [sp, #192]
   2b9b0:	bl	6930 <__asan_backtrace_alloc@plt>
   2b9b4:	ldr	w4, [sp, #192]
   2b9b8:	mov	x25, x0
   2b9bc:	cbz	x0, 2bcb4 <__asan_internal_strnlen@@Base+0x2894>
   2b9c0:	ldr	x4, [x27, #8]
   2b9c4:	mov	x3, x0
   2b9c8:	ldr	x5, [sp, #184]
   2b9cc:	mov	x2, x23
   2b9d0:	add	x0, x27, #0x18
   2b9d4:	sub	x1, x5, #0x18
   2b9d8:	bl	29d00 <__asan_internal_strnlen@@Base+0x8e0>
   2b9dc:	cbz	w0, 2bc88 <__asan_internal_strnlen@@Base+0x2868>
   2b9e0:	ldr	x0, [x27, #8]
   2b9e4:	sub	w22, w22, #0x1
   2b9e8:	stp	x0, x25, [x21, #8]
   2b9ec:	str	wzr, [x21, #24]
   2b9f0:	add	x21, x21, #0x20
   2b9f4:	subs	w24, w24, #0x1
   2b9f8:	b.ne	2b94c <__asan_internal_strnlen@@Base+0x252c>  // b.any
   2b9fc:	cbz	x23, 2ba18 <__asan_internal_strnlen@@Base+0x25f8>
   2ba00:	mov	x4, x20
   2ba04:	mov	x3, x19
   2ba08:	mov	x1, x23
   2ba0c:	mov	x0, x28
   2ba10:	mov	x2, #0x13b4                	// #5044
   2ba14:	bl	6c20 <__asan_backtrace_free@plt>
   2ba18:	cbnz	w22, 2bb28 <__asan_internal_strnlen@@Base+0x2708>
   2ba1c:	mov	w27, #0x0                   	// #0
   2ba20:	mov	x3, x20
   2ba24:	mov	x2, x19
   2ba28:	mov	x1, x26
   2ba2c:	mov	x0, x28
   2ba30:	bl	67d0 <__asan_backtrace_release_view@plt>
   2ba34:	add	x0, sp, #0x358
   2ba38:	ldr	x1, [sp, #240]
   2ba3c:	ldp	x3, x2, [x0]
   2ba40:	ldp	x5, x4, [x0, #32]
   2ba44:	stp	x19, x20, [sp, #48]
   2ba48:	ldr	x0, [sp, #1176]
   2ba4c:	str	x0, [sp, #72]
   2ba50:	ldr	x0, [sp, #272]
   2ba54:	str	x0, [sp, #64]
   2ba58:	ldr	x0, [sp, #376]
   2ba5c:	str	x0, [sp, #40]
   2ba60:	ldrb	w0, [sp, #661]
   2ba64:	ldr	x7, [sp, #920]
   2ba68:	cmp	w0, #0x2
   2ba6c:	cset	w0, eq  // eq = none
   2ba70:	str	w0, [sp, #32]
   2ba74:	ldr	x0, [sp, #984]
   2ba78:	str	x0, [sp, #24]
   2ba7c:	ldr	x0, [sp, #992]
   2ba80:	str	x0, [sp, #16]
   2ba84:	ldr	x6, [sp, #928]
   2ba88:	ldr	x0, [sp, #952]
   2ba8c:	str	x0, [sp, #8]
   2ba90:	ldr	x0, [sp, #960]
   2ba94:	str	x0, [sp]
   2ba98:	mov	x0, x28
   2ba9c:	bl	67e0 <__asan_backtrace_dwarf_add@plt>
   2baa0:	cbz	w0, 2bb20 <__asan_internal_strnlen@@Base+0x2700>
   2baa4:	ldr	x0, [sp, #1168]
   2baa8:	mov	w22, #0x1                   	// #1
   2baac:	str	w22, [x0]
   2bab0:	b	2b5c0 <__asan_internal_strnlen@@Base+0x21a0>
   2bab4:	ldr	x1, [x0]
   2bab8:	cmp	w2, #0x5
   2babc:	cinc	w22, w22, cc  // cc = lo, ul, last
   2bac0:	sub	x1, x1, x25
   2bac4:	add	x1, x3, x1
   2bac8:	str	x1, [x0, #16]
   2bacc:	b	2b8b0 <__asan_internal_strnlen@@Base+0x2490>
   2bad0:	ldr	x10, [x27, #176]
   2bad4:	mov	x1, x25
   2bad8:	mov	x2, #0x4                   	// #4
   2badc:	str	x10, [sp, #200]
   2bae0:	mov	x0, x10
   2bae4:	str	x11, [sp, #216]
   2bae8:	bl	6c90 <__asan_internal_memcmp@plt>
   2baec:	cbnz	w0, 2b928 <__asan_internal_strnlen@@Base+0x2508>
   2baf0:	ldp	x7, x6, [sp, #184]
   2baf4:	mov	x5, x20
   2baf8:	ldr	x10, [sp, #200]
   2bafc:	mov	x4, x19
   2bb00:	ldr	x11, [sp, #216]
   2bb04:	mov	x3, x23
   2bb08:	mov	x0, x28
   2bb0c:	mov	x1, x10
   2bb10:	mov	x2, x11
   2bb14:	bl	2a9fc <__asan_internal_strnlen@@Base+0x15dc>
   2bb18:	cbnz	w0, 2b928 <__asan_internal_strnlen@@Base+0x2508>
   2bb1c:	mov	w27, #0x1                   	// #1
   2bb20:	mov	w24, #0xffffffff            	// #-1
   2bb24:	b	2bc98 <__asan_internal_strnlen@@Base+0x2878>
   2bb28:	mov	w27, #0x1                   	// #1
   2bb2c:	b	2ba34 <__asan_internal_strnlen@@Base+0x2614>
   2bb30:	mov	w22, #0xffffffff            	// #-1
   2bb34:	b	2b5c0 <__asan_internal_strnlen@@Base+0x21a0>
   2bb38:	mov	w27, #0x0                   	// #0
   2bb3c:	mov	w25, #0x0                   	// #0
   2bb40:	mov	x22, #0x0                   	// #0
   2bb44:	str	wzr, [sp, #184]
   2bb48:	str	wzr, [sp, #192]
   2bb4c:	str	wzr, [sp, #200]
   2bb50:	mov	x3, x20
   2bb54:	mov	x2, x19
   2bb58:	add	x1, sp, #0x1a0
   2bb5c:	mov	x0, x28
   2bb60:	bl	67d0 <__asan_backtrace_release_view@plt>
   2bb64:	cbz	w21, 2bb7c <__asan_internal_strnlen@@Base+0x275c>
   2bb68:	mov	x3, x20
   2bb6c:	mov	x2, x19
   2bb70:	add	x1, sp, #0x1b8
   2bb74:	mov	x0, x28
   2bb78:	bl	67d0 <__asan_backtrace_release_view@plt>
   2bb7c:	cbz	w25, 2bb94 <__asan_internal_strnlen@@Base+0x2774>
   2bb80:	mov	x3, x20
   2bb84:	mov	x2, x19
   2bb88:	add	x1, sp, #0x1d0
   2bb8c:	mov	x0, x28
   2bb90:	bl	67d0 <__asan_backtrace_release_view@plt>
   2bb94:	cbz	w27, 2bbb0 <__asan_internal_strnlen@@Base+0x2790>
   2bb98:	mov	w27, #0x0                   	// #0
   2bb9c:	mov	x3, x20
   2bba0:	mov	x2, x19
   2bba4:	add	x1, sp, #0x1e8
   2bba8:	mov	x0, x28
   2bbac:	bl	67d0 <__asan_backtrace_release_view@plt>
   2bbb0:	ldr	w0, [sp, #192]
   2bbb4:	cbz	w0, 2bbcc <__asan_internal_strnlen@@Base+0x27ac>
   2bbb8:	mov	x3, x20
   2bbbc:	mov	x2, x19
   2bbc0:	add	x1, sp, #0x218
   2bbc4:	mov	x0, x28
   2bbc8:	bl	67d0 <__asan_backtrace_release_view@plt>
   2bbcc:	ldr	w0, [sp, #200]
   2bbd0:	cbz	w0, 2bbe8 <__asan_internal_strnlen@@Base+0x27c8>
   2bbd4:	mov	x3, x20
   2bbd8:	mov	x2, x19
   2bbdc:	add	x1, sp, #0x230
   2bbe0:	mov	x0, x28
   2bbe4:	bl	67d0 <__asan_backtrace_release_view@plt>
   2bbe8:	ldr	w0, [sp, #184]
   2bbec:	cbz	w0, 2bc04 <__asan_internal_strnlen@@Base+0x27e4>
   2bbf0:	mov	x3, x20
   2bbf4:	mov	x2, x19
   2bbf8:	add	x1, sp, #0x200
   2bbfc:	mov	x0, x28
   2bc00:	bl	67d0 <__asan_backtrace_release_view@plt>
   2bc04:	cbz	w27, 2bc1c <__asan_internal_strnlen@@Base+0x27fc>
   2bc08:	mov	x3, x20
   2bc0c:	mov	x2, x19
   2bc10:	add	x1, sp, #0x2d0
   2bc14:	mov	x0, x28
   2bc18:	bl	67d0 <__asan_backtrace_release_view@plt>
   2bc1c:	cbz	x22, 2bc34 <__asan_internal_strnlen@@Base+0x2814>
   2bc20:	mov	x3, x20
   2bc24:	mov	x2, x19
   2bc28:	add	x1, x22, #0x18
   2bc2c:	mov	x0, x28
   2bc30:	bl	67d0 <__asan_backtrace_release_view@plt>
   2bc34:	cmn	w24, #0x1
   2bc38:	b.eq	2bc4c <__asan_internal_strnlen@@Base+0x282c>  // b.none
   2bc3c:	mov	x2, x20
   2bc40:	mov	x1, x19
   2bc44:	mov	w0, w24
   2bc48:	bl	6d00 <__asan_backtrace_close@plt>
   2bc4c:	mov	w22, #0x0                   	// #0
   2bc50:	b	2b5c0 <__asan_internal_strnlen@@Base+0x21a0>
   2bc54:	ldr	w25, [sp, #184]
   2bc58:	b	2ae38 <__asan_internal_strnlen@@Base+0x1a18>
   2bc5c:	mov	x21, #0x1                   	// #1
   2bc60:	mov	w27, #0x0                   	// #0
   2bc64:	str	w21, [sp, #184]
   2bc68:	b	2bb50 <__asan_internal_strnlen@@Base+0x2730>
   2bc6c:	str	wzr, [sp, #192]
   2bc70:	mov	w27, #0x0                   	// #0
   2bc74:	b	2ae38 <__asan_internal_strnlen@@Base+0x1a18>
   2bc78:	mov	w27, #0x0                   	// #0
   2bc7c:	b	2bb50 <__asan_internal_strnlen@@Base+0x2730>
   2bc80:	mov	w25, #0x1                   	// #1
   2bc84:	b	2ae38 <__asan_internal_strnlen@@Base+0x1a18>
   2bc88:	mov	x0, #0x0                   	// #0
   2bc8c:	mov	x25, #0x0                   	// #0
   2bc90:	b	2b9e4 <__asan_internal_strnlen@@Base+0x25c4>
   2bc94:	mov	w27, #0x1                   	// #1
   2bc98:	ldr	w0, [sp, #208]
   2bc9c:	cbz	w0, 2ab88 <__asan_internal_strnlen@@Base+0x1768>
   2bca0:	mov	x22, #0x0                   	// #0
   2bca4:	str	wzr, [sp, #184]
   2bca8:	str	wzr, [sp, #192]
   2bcac:	str	wzr, [sp, #200]
   2bcb0:	b	2bb9c <__asan_internal_strnlen@@Base+0x277c>
   2bcb4:	mov	w27, w4
   2bcb8:	b	2bb20 <__asan_internal_strnlen@@Base+0x2700>
   2bcbc:	sub	sp, sp, #0x70
   2bcc0:	stp	x29, x30, [sp, #48]
   2bcc4:	add	x29, sp, #0x30
   2bcc8:	ldr	x1, [x0, #8]
   2bccc:	stp	x19, x20, [sp, #64]
   2bcd0:	mov	x20, x0
   2bcd4:	ldr	w0, [x2, #56]
   2bcd8:	mov	x19, x2
   2bcdc:	str	x21, [sp, #80]
   2bce0:	cmn	w0, #0x1
   2bce4:	cbz	x1, 2bcf0 <__asan_internal_strnlen@@Base+0x28d0>
   2bce8:	ldrb	w1, [x1]
   2bcec:	cbnz	w1, 2bd60 <__asan_internal_strnlen@@Base+0x2940>
   2bcf0:	b.eq	2bd8c <__asan_internal_strnlen@@Base+0x296c>  // b.none
   2bcf4:	ldr	x21, [x19, #48]
   2bcf8:	mov	w1, #0xffffffff            	// #-1
   2bcfc:	str	w1, [x19, #56]
   2bd00:	mov	w2, w0
   2bd04:	add	x1, sp, #0x64
   2bd08:	ldp	x0, x4, [x19]
   2bd0c:	add	x6, sp, #0x68
   2bd10:	ldr	x3, [x20]
   2bd14:	ldr	x5, [x19, #16]
   2bd18:	ldr	x7, [x19, #32]
   2bd1c:	stp	x1, xzr, [sp]
   2bd20:	mov	x1, x21
   2bd24:	str	wzr, [sp, #16]
   2bd28:	str	wzr, [sp, #24]
   2bd2c:	str	xzr, [sp, #32]
   2bd30:	str	wzr, [sp, #40]
   2bd34:	bl	2aabc <__asan_internal_strnlen@@Base+0x169c>
   2bd38:	cbz	w0, 2bd8c <__asan_internal_strnlen@@Base+0x296c>
   2bd3c:	ldr	w0, [sp, #100]
   2bd40:	cbz	w0, 2bd8c <__asan_internal_strnlen@@Base+0x296c>
   2bd44:	ldr	x0, [x19, #40]
   2bd48:	mov	w1, #0x1                   	// #1
   2bd4c:	str	w1, [x0]
   2bd50:	ldr	x0, [x19, #24]
   2bd54:	ldr	x1, [sp, #104]
   2bd58:	str	x1, [x0]
   2bd5c:	b	2bd8c <__asan_internal_strnlen@@Base+0x296c>
   2bd60:	b.eq	2bd74 <__asan_internal_strnlen@@Base+0x2954>  // b.none
   2bd64:	ldp	x1, x2, [x2, #8]
   2bd68:	bl	6d00 <__asan_backtrace_close@plt>
   2bd6c:	mov	w0, #0xffffffff            	// #-1
   2bd70:	str	w0, [x19, #56]
   2bd74:	ldp	x1, x2, [x19, #8]
   2bd78:	add	x3, sp, #0x60
   2bd7c:	ldr	x21, [x20, #8]
   2bd80:	mov	x0, x21
   2bd84:	bl	6db0 <__asan_backtrace_open@plt>
   2bd88:	tbz	w0, #31, 2bd00 <__asan_internal_strnlen@@Base+0x28e0>
   2bd8c:	mov	w0, #0x0                   	// #0
   2bd90:	ldp	x29, x30, [sp, #48]
   2bd94:	ldp	x19, x20, [sp, #64]
   2bd98:	ldr	x21, [sp, #80]
   2bd9c:	add	sp, sp, #0x70
   2bda0:	ret

000000000002bda4 <__asan_backtrace_uncompress_zdebug@@Base>:
   2bda4:	stp	x29, x30, [sp, #-80]!
   2bda8:	mov	x29, sp
   2bdac:	stp	x21, x22, [sp, #32]
   2bdb0:	mov	x21, x3
   2bdb4:	mov	x22, x4
   2bdb8:	mov	x3, x4
   2bdbc:	stp	x19, x20, [sp, #16]
   2bdc0:	mov	x19, x1
   2bdc4:	mov	x1, #0x13b4                	// #5044
   2bdc8:	stp	x23, x24, [sp, #48]
   2bdcc:	mov	x24, x2
   2bdd0:	mov	x23, x0
   2bdd4:	mov	x2, x21
   2bdd8:	stp	x25, x26, [sp, #64]
   2bddc:	mov	x25, x5
   2bde0:	mov	x26, x6
   2bde4:	bl	6930 <__asan_backtrace_alloc@plt>
   2bde8:	cbz	x0, 2be7c <__asan_backtrace_uncompress_zdebug@@Base+0xd8>
   2bdec:	str	xzr, [x25]
   2bdf0:	mov	x20, x0
   2bdf4:	str	xzr, [x26]
   2bdf8:	cmp	x24, #0xb
   2bdfc:	b.hi	2be38 <__asan_backtrace_uncompress_zdebug@@Base+0x94>  // b.pmore
   2be00:	mov	w19, #0x1                   	// #1
   2be04:	mov	x4, x22
   2be08:	mov	x3, x21
   2be0c:	mov	x1, x20
   2be10:	mov	x0, x23
   2be14:	mov	x2, #0x13b4                	// #5044
   2be18:	bl	6c20 <__asan_backtrace_free@plt>
   2be1c:	mov	w0, w19
   2be20:	ldp	x19, x20, [sp, #16]
   2be24:	ldp	x21, x22, [sp, #32]
   2be28:	ldp	x23, x24, [sp, #48]
   2be2c:	ldp	x25, x26, [sp, #64]
   2be30:	ldp	x29, x30, [sp], #80
   2be34:	ret
   2be38:	adrp	x1, 34000 <__asan_backtrace_vector_release@@Base+0x7b60>
   2be3c:	mov	x0, x19
   2be40:	add	x1, x1, #0xa6f
   2be44:	mov	x2, #0x4                   	// #4
   2be48:	bl	6c90 <__asan_internal_memcmp@plt>
   2be4c:	cbnz	w0, 2be00 <__asan_backtrace_uncompress_zdebug@@Base+0x5c>
   2be50:	mov	x1, x19
   2be54:	mov	x7, x26
   2be58:	mov	x6, x25
   2be5c:	mov	x5, x22
   2be60:	mov	x4, x21
   2be64:	mov	x3, x20
   2be68:	mov	x2, x24
   2be6c:	mov	x0, x23
   2be70:	bl	2a9fc <__asan_internal_strnlen@@Base+0x15dc>
   2be74:	mov	w19, w0
   2be78:	b	2be04 <__asan_backtrace_uncompress_zdebug@@Base+0x60>
   2be7c:	mov	w19, #0x0                   	// #0
   2be80:	b	2be1c <__asan_backtrace_uncompress_zdebug@@Base+0x78>

000000000002be84 <__asan_backtrace_initialize@@Base>:
   2be84:	sub	sp, sp, #0xe0
   2be88:	stp	x29, x30, [sp, #48]
   2be8c:	add	x29, sp, #0x30
   2be90:	stp	x23, x24, [sp, #96]
   2be94:	mov	x23, x3
   2be98:	mov	x24, x1
   2be9c:	stp	x27, x28, [sp, #128]
   2bea0:	adrp	x28, 29000 <__asan_cplus_demangle_init_info@@Base+0x5c>
   2bea4:	add	x3, x28, #0x424
   2bea8:	str	wzr, [sp, #24]
   2beac:	add	x27, sp, #0x98
   2beb0:	str	xzr, [sp, #32]
   2beb4:	mov	x6, x27
   2beb8:	str	wzr, [sp, #40]
   2bebc:	stp	x25, x26, [sp, #112]
   2bec0:	add	x25, sp, #0x94
   2bec4:	add	x26, sp, #0x90
   2bec8:	stp	x25, xzr, [sp]
   2becc:	mov	x7, x26
   2bed0:	str	x3, [sp, #152]
   2bed4:	mov	w3, #0x1                   	// #1
   2bed8:	str	w3, [sp, #16]
   2bedc:	mov	x3, #0x0                   	// #0
   2bee0:	stp	x19, x20, [sp, #64]
   2bee4:	mov	x20, x5
   2bee8:	mov	x19, x0
   2beec:	mov	x5, x4
   2bef0:	stp	x21, x22, [sp, #80]
   2bef4:	mov	x22, x4
   2bef8:	mov	w21, w2
   2befc:	mov	x4, x23
   2bf00:	bl	2aabc <__asan_internal_strnlen@@Base+0x169c>
   2bf04:	cbz	w0, 2bfb4 <__asan_backtrace_initialize@@Base+0x130>
   2bf08:	cmp	w0, #0x0
   2bf0c:	add	x1, sp, #0xa0
   2bf10:	csinv	w21, w21, wzr, lt  // lt = tstop
   2bf14:	adrp	x0, 2b000 <__asan_internal_strnlen@@Base+0x1be0>
   2bf18:	add	x0, x0, #0xcbc
   2bf1c:	stp	x19, x23, [sp, #160]
   2bf20:	stp	x22, x27, [sp, #176]
   2bf24:	stp	x26, x25, [sp, #192]
   2bf28:	str	x24, [sp, #208]
   2bf2c:	str	w21, [sp, #216]
   2bf30:	bl	69c0 <dl_iterate_phdr@plt>
   2bf34:	ldr	w0, [x19, #8]
   2bf38:	ldr	w1, [sp, #144]
   2bf3c:	cbnz	w0, 2bf6c <__asan_backtrace_initialize@@Base+0xe8>
   2bf40:	cbz	w1, 2bf58 <__asan_backtrace_initialize@@Base+0xd4>
   2bf44:	adrp	x0, 29000 <__asan_cplus_demangle_init_info@@Base+0x5c>
   2bf48:	add	x0, x0, #0x868
   2bf4c:	str	x0, [x19, #40]
   2bf50:	ldr	x0, [x19, #24]
   2bf54:	b	2bf90 <__asan_backtrace_initialize@@Base+0x10c>
   2bf58:	ldr	x0, [x19, #40]
   2bf5c:	cbnz	x0, 2bf50 <__asan_backtrace_initialize@@Base+0xcc>
   2bf60:	adrp	x0, 29000 <__asan_cplus_demangle_init_info@@Base+0x5c>
   2bf64:	add	x0, x0, #0x44c
   2bf68:	b	2bf4c <__asan_backtrace_initialize@@Base+0xc8>
   2bf6c:	add	x0, x19, #0x28
   2bf70:	cbz	w1, 2bfd4 <__asan_backtrace_initialize@@Base+0x150>
   2bf74:	adrp	x1, 29000 <__asan_cplus_demangle_init_info@@Base+0x5c>
   2bf78:	add	x1, x1, #0x868
   2bf7c:	stlr	x1, [x0]
   2bf80:	ldr	w0, [x19, #8]
   2bf84:	cbz	w0, 2bf50 <__asan_backtrace_initialize@@Base+0xcc>
   2bf88:	add	x19, x19, #0x18
   2bf8c:	ldar	x0, [x19]
   2bf90:	str	x0, [x20]
   2bf94:	ldr	x0, [x20]
   2bf98:	cbz	x0, 2bfa8 <__asan_backtrace_initialize@@Base+0x124>
   2bf9c:	add	x28, x28, #0x424
   2bfa0:	cmp	x0, x28
   2bfa4:	b.ne	2bfb0 <__asan_backtrace_initialize@@Base+0x12c>  // b.any
   2bfa8:	ldr	x0, [sp, #152]
   2bfac:	str	x0, [x20]
   2bfb0:	mov	w0, #0x1                   	// #1
   2bfb4:	ldp	x29, x30, [sp, #48]
   2bfb8:	ldp	x19, x20, [sp, #64]
   2bfbc:	ldp	x21, x22, [sp, #80]
   2bfc0:	ldp	x23, x24, [sp, #96]
   2bfc4:	ldp	x25, x26, [sp, #112]
   2bfc8:	ldp	x27, x28, [sp, #128]
   2bfcc:	add	sp, sp, #0xe0
   2bfd0:	ret
   2bfd4:	adrp	x1, 29000 <__asan_cplus_demangle_init_info@@Base+0x5c>
   2bfd8:	add	x1, x1, #0x44c
   2bfdc:	ldxr	x2, [x0]
   2bfe0:	cbnz	x2, 2bfec <__asan_backtrace_initialize@@Base+0x168>
   2bfe4:	stlxr	w3, x1, [x0]
   2bfe8:	cbnz	w3, 2bfdc <__asan_backtrace_initialize@@Base+0x158>
   2bfec:	dmb	ish
   2bff0:	b	2bf80 <__asan_backtrace_initialize@@Base+0xfc>

000000000002bff4 <__asan_backtrace_get_view@@Base>:
   2bff4:	stp	x29, x30, [sp, #-80]!
   2bff8:	mov	x29, sp
   2bffc:	stp	x19, x20, [sp, #16]
   2c000:	sub	x19, x3, #0x1
   2c004:	stp	x21, x22, [sp, #32]
   2c008:	mov	x21, x4
   2c00c:	mov	x22, x5
   2c010:	stp	x23, x24, [sp, #48]
   2c014:	mov	x24, x2
   2c018:	mov	x23, x6
   2c01c:	str	x25, [sp, #64]
   2c020:	mov	w25, w1
   2c024:	bl	6ce0 <getpagesize@plt>
   2c028:	sxtw	x0, w0
   2c02c:	mov	w4, w25
   2c030:	mov	w3, #0x2                   	// #2
   2c034:	mov	w2, #0x1                   	// #1
   2c038:	udiv	x20, x24, x0
   2c03c:	msub	w20, w20, w0, w24
   2c040:	add	x1, x0, x20
   2c044:	neg	x0, x0
   2c048:	add	x19, x19, x1
   2c04c:	sub	x5, x24, x20
   2c050:	and	x19, x0, x19
   2c054:	mov	x0, #0x0                   	// #0
   2c058:	mov	x1, x19
   2c05c:	bl	6a40 <mmap@plt>
   2c060:	cmn	x0, #0x1
   2c064:	b.ne	2c09c <__asan_backtrace_get_view@@Base+0xa8>  // b.any
   2c068:	bl	6b20 <__errno_location@plt>
   2c06c:	ldr	w2, [x0]
   2c070:	adrp	x1, 35000 <__asan_backtrace_vector_release@@Base+0x8b60>
   2c074:	mov	x0, x22
   2c078:	add	x1, x1, #0x3ac
   2c07c:	blr	x21
   2c080:	mov	w0, #0x0                   	// #0
   2c084:	ldp	x19, x20, [sp, #16]
   2c088:	ldp	x21, x22, [sp, #32]
   2c08c:	ldp	x23, x24, [sp, #48]
   2c090:	ldr	x25, [sp, #64]
   2c094:	ldp	x29, x30, [sp], #80
   2c098:	ret
   2c09c:	add	x20, x0, x20
   2c0a0:	stp	x20, x0, [x23]
   2c0a4:	mov	w0, #0x1                   	// #1
   2c0a8:	str	x19, [x23, #16]
   2c0ac:	b	2c084 <__asan_backtrace_get_view@@Base+0x90>

000000000002c0b0 <__asan_backtrace_release_view@@Base>:
   2c0b0:	mov	x4, x1
   2c0b4:	stp	x29, x30, [sp, #-32]!
   2c0b8:	mov	x29, sp
   2c0bc:	ldr	x0, [x4, #8]
   2c0c0:	stp	x19, x20, [sp, #16]
   2c0c4:	mov	x19, x2
   2c0c8:	ldr	x1, [x1, #16]
   2c0cc:	mov	x20, x3
   2c0d0:	bl	6a60 <munmap@plt>
   2c0d4:	tbz	w0, #31, 2c0fc <__asan_backtrace_release_view@@Base+0x4c>
   2c0d8:	bl	6b20 <__errno_location@plt>
   2c0dc:	ldr	w2, [x0]
   2c0e0:	mov	x16, x19
   2c0e4:	mov	x0, x20
   2c0e8:	ldp	x19, x20, [sp, #16]
   2c0ec:	adrp	x1, 35000 <__asan_backtrace_vector_release@@Base+0x8b60>
   2c0f0:	ldp	x29, x30, [sp], #32
   2c0f4:	add	x1, x1, #0x3b1
   2c0f8:	br	x16
   2c0fc:	ldp	x19, x20, [sp, #16]
   2c100:	ldp	x29, x30, [sp], #32
   2c104:	ret
   2c108:	ldr	x4, [x0, #64]
   2c10c:	add	x5, x0, #0x40
   2c110:	mov	x3, #0x0                   	// #0
   2c114:	mov	x6, #0x0                   	// #0
   2c118:	cbnz	x4, 2c14c <__asan_backtrace_release_view@@Base+0x9c>
   2c11c:	cmp	x6, #0xf
   2c120:	b.ls	2c13c <__asan_backtrace_release_view@@Base+0x8c>  // b.plast
   2c124:	ldr	x4, [x3]
   2c128:	ldr	x5, [x4, #8]
   2c12c:	cmp	x5, x2
   2c130:	b.cs	2c148 <__asan_backtrace_release_view@@Base+0x98>  // b.hs, b.nlast
   2c134:	ldr	x4, [x4]
   2c138:	str	x4, [x3]
   2c13c:	ldr	x3, [x0, #64]
   2c140:	stp	x3, x2, [x1]
   2c144:	str	x1, [x0, #64]
   2c148:	ret
   2c14c:	cbz	x3, 2c164 <__asan_backtrace_release_view@@Base+0xb4>
   2c150:	ldr	x7, [x3]
   2c154:	ldr	x8, [x4, #8]
   2c158:	ldr	x7, [x7, #8]
   2c15c:	cmp	x8, x7
   2c160:	csel	x5, x5, x3, cc  // cc = lo, ul, last
   2c164:	mov	x3, x5
   2c168:	add	x6, x6, #0x1
   2c16c:	mov	x5, x4
   2c170:	ldr	x4, [x4]
   2c174:	b	2c118 <__asan_backtrace_release_view@@Base+0x68>

000000000002c178 <__asan_backtrace_free@@Base>:
   2c178:	stp	x29, x30, [sp, #-48]!
   2c17c:	mov	x29, sp
   2c180:	stp	x19, x20, [sp, #16]
   2c184:	mov	x19, x0
   2c188:	mov	x20, x2
   2c18c:	str	x21, [sp, #32]
   2c190:	mov	x0, #0xffff                	// #65535
   2c194:	mov	x21, x1
   2c198:	cmp	x2, x0
   2c19c:	b.hi	2c1f0 <__asan_backtrace_free@@Base+0x78>  // b.pmore
   2c1a0:	ldr	w0, [x19, #8]
   2c1a4:	cbz	w0, 2c228 <__asan_backtrace_free@@Base+0xb0>
   2c1a8:	add	x0, x19, #0x3c
   2c1ac:	mov	w2, #0x1                   	// #1
   2c1b0:	ldxr	w1, [x0]
   2c1b4:	stxr	w3, w2, [x0]
   2c1b8:	cbnz	w3, 2c1b0 <__asan_backtrace_free@@Base+0x38>
   2c1bc:	dmb	ish
   2c1c0:	cbnz	w1, 2c218 <__asan_backtrace_free@@Base+0xa0>
   2c1c4:	cmp	x20, #0xf
   2c1c8:	b.ls	2c1dc <__asan_backtrace_free@@Base+0x64>  // b.plast
   2c1cc:	mov	x2, x20
   2c1d0:	mov	x1, x21
   2c1d4:	mov	x0, x19
   2c1d8:	bl	2c108 <__asan_backtrace_release_view@@Base+0x58>
   2c1dc:	ldr	w0, [x19, #8]
   2c1e0:	cbz	w0, 2c218 <__asan_backtrace_free@@Base+0xa0>
   2c1e4:	add	x19, x19, #0x3c
   2c1e8:	stlr	wzr, [x19]
   2c1ec:	b	2c218 <__asan_backtrace_free@@Base+0xa0>
   2c1f0:	bl	6ce0 <getpagesize@plt>
   2c1f4:	sxtw	x0, w0
   2c1f8:	sub	x0, x0, #0x1
   2c1fc:	orr	x1, x21, x20
   2c200:	tst	x0, x1
   2c204:	b.ne	2c1a0 <__asan_backtrace_free@@Base+0x28>  // b.any
   2c208:	mov	x1, x20
   2c20c:	mov	x0, x21
   2c210:	bl	6a60 <munmap@plt>
   2c214:	cbnz	w0, 2c1a0 <__asan_backtrace_free@@Base+0x28>
   2c218:	ldp	x19, x20, [sp, #16]
   2c21c:	ldr	x21, [sp, #32]
   2c220:	ldp	x29, x30, [sp], #48
   2c224:	ret
   2c228:	cmp	x20, #0xf
   2c22c:	b.hi	2c1cc <__asan_backtrace_free@@Base+0x54>  // b.pmore
   2c230:	b	2c218 <__asan_backtrace_free@@Base+0xa0>

000000000002c234 <__asan_backtrace_alloc@@Base>:
   2c234:	stp	x29, x30, [sp, #-64]!
   2c238:	mov	x29, sp
   2c23c:	stp	x21, x22, [sp, #32]
   2c240:	mov	x21, x0
   2c244:	ldr	w0, [x0, #8]
   2c248:	stp	x19, x20, [sp, #16]
   2c24c:	mov	x19, x1
   2c250:	stp	x23, x24, [sp, #48]
   2c254:	mov	x23, x2
   2c258:	mov	x24, x3
   2c25c:	cbnz	w0, 2c2d0 <__asan_backtrace_alloc@@Base+0x9c>
   2c260:	ldr	x20, [x21, #64]
   2c264:	add	x0, x21, #0x40
   2c268:	cbz	x20, 2c2a4 <__asan_backtrace_alloc@@Base+0x70>
   2c26c:	ldp	x1, x2, [x20]
   2c270:	cmp	x2, x19
   2c274:	b.cc	2c350 <__asan_backtrace_alloc@@Base+0x11c>  // b.lo, b.ul, b.last
   2c278:	add	x19, x19, #0x7
   2c27c:	str	x1, [x0]
   2c280:	and	x19, x19, #0xfffffffffffffff8
   2c284:	cmp	x2, x19
   2c288:	b.ls	2c2a4 <__asan_backtrace_alloc@@Base+0x70>  // b.plast
   2c28c:	sub	x2, x2, x19
   2c290:	cmp	x2, #0xf
   2c294:	b.ls	2c2a4 <__asan_backtrace_alloc@@Base+0x70>  // b.plast
   2c298:	add	x1, x20, x19
   2c29c:	mov	x0, x21
   2c2a0:	bl	2c108 <__asan_backtrace_release_view@@Base+0x58>
   2c2a4:	ldr	w0, [x21, #8]
   2c2a8:	cbz	w0, 2c2b4 <__asan_backtrace_alloc@@Base+0x80>
   2c2ac:	add	x0, x21, #0x3c
   2c2b0:	stlr	wzr, [x0]
   2c2b4:	cbz	x20, 2c2ec <__asan_backtrace_alloc@@Base+0xb8>
   2c2b8:	mov	x0, x20
   2c2bc:	ldp	x19, x20, [sp, #16]
   2c2c0:	ldp	x21, x22, [sp, #32]
   2c2c4:	ldp	x23, x24, [sp, #48]
   2c2c8:	ldp	x29, x30, [sp], #64
   2c2cc:	ret
   2c2d0:	add	x0, x21, #0x3c
   2c2d4:	mov	w2, #0x1                   	// #1
   2c2d8:	ldxr	w1, [x0]
   2c2dc:	stxr	w3, w2, [x0]
   2c2e0:	cbnz	w3, 2c2d8 <__asan_backtrace_alloc@@Base+0xa4>
   2c2e4:	dmb	ish
   2c2e8:	cbz	w1, 2c260 <__asan_backtrace_alloc@@Base+0x2c>
   2c2ec:	bl	6ce0 <getpagesize@plt>
   2c2f0:	sub	x22, x19, #0x1
   2c2f4:	sxtw	x2, w0
   2c2f8:	add	x0, x22, w0, sxtw
   2c2fc:	neg	x22, x2
   2c300:	mov	x5, #0x0                   	// #0
   2c304:	and	x22, x0, x22
   2c308:	mov	w4, #0xffffffff            	// #-1
   2c30c:	mov	x1, x22
   2c310:	mov	w3, #0x22                  	// #34
   2c314:	mov	w2, #0x3                   	// #3
   2c318:	mov	x0, #0x0                   	// #0
   2c31c:	bl	6a40 <mmap@plt>
   2c320:	mov	x20, x0
   2c324:	cmn	x0, #0x1
   2c328:	b.ne	2c35c <__asan_backtrace_alloc@@Base+0x128>  // b.any
   2c32c:	cbz	x23, 2c348 <__asan_backtrace_alloc@@Base+0x114>
   2c330:	bl	6b20 <__errno_location@plt>
   2c334:	ldr	w2, [x0]
   2c338:	adrp	x1, 35000 <__asan_backtrace_vector_release@@Base+0x8b60>
   2c33c:	mov	x0, x24
   2c340:	add	x1, x1, #0x3ac
   2c344:	blr	x23
   2c348:	mov	x20, #0x0                   	// #0
   2c34c:	b	2c2b8 <__asan_backtrace_alloc@@Base+0x84>
   2c350:	mov	x0, x20
   2c354:	mov	x20, x1
   2c358:	b	2c268 <__asan_backtrace_alloc@@Base+0x34>
   2c35c:	add	x19, x19, #0x7
   2c360:	and	x19, x19, #0xfffffffffffffff8
   2c364:	cmp	x22, x19
   2c368:	b.ls	2c2b8 <__asan_backtrace_alloc@@Base+0x84>  // b.plast
   2c36c:	add	x1, x0, x19
   2c370:	mov	x4, x24
   2c374:	mov	x3, x23
   2c378:	sub	x2, x22, x19
   2c37c:	mov	x0, x21
   2c380:	bl	6c20 <__asan_backtrace_free@plt>
   2c384:	b	2c2b8 <__asan_backtrace_alloc@@Base+0x84>

000000000002c388 <__asan_backtrace_vector_grow@@Base>:
   2c388:	stp	x29, x30, [sp, #-80]!
   2c38c:	mov	x29, sp
   2c390:	stp	x23, x24, [sp, #48]
   2c394:	mov	x23, x0
   2c398:	ldr	x0, [x4, #16]
   2c39c:	stp	x19, x20, [sp, #16]
   2c3a0:	mov	x19, x4
   2c3a4:	stp	x21, x22, [sp, #32]
   2c3a8:	cmp	x0, x1
   2c3ac:	mov	x22, x1
   2c3b0:	str	x25, [sp, #64]
   2c3b4:	b.cs	2c428 <__asan_backtrace_vector_grow@@Base+0xa0>  // b.hs, b.nlast
   2c3b8:	ldr	x0, [x4, #8]
   2c3bc:	mov	x24, x2
   2c3c0:	mov	x25, x3
   2c3c4:	add	x21, x1, x0
   2c3c8:	cbnz	x0, 2c45c <__asan_backtrace_vector_grow@@Base+0xd4>
   2c3cc:	lsl	x20, x21, #4
   2c3d0:	mov	x3, x25
   2c3d4:	mov	x2, x24
   2c3d8:	mov	x1, x20
   2c3dc:	mov	x0, x23
   2c3e0:	bl	6930 <__asan_backtrace_alloc@plt>
   2c3e4:	mov	x21, x0
   2c3e8:	cbz	x0, 2c440 <__asan_backtrace_vector_grow@@Base+0xb8>
   2c3ec:	ldr	x1, [x19]
   2c3f0:	cbz	x1, 2c418 <__asan_backtrace_vector_grow@@Base+0x90>
   2c3f4:	ldr	x2, [x19, #8]
   2c3f8:	bl	6840 <__asan_internal_memcpy@plt>
   2c3fc:	ldp	x1, x2, [x19]
   2c400:	mov	x4, x25
   2c404:	ldr	x0, [x19, #16]
   2c408:	mov	x3, x24
   2c40c:	add	x2, x2, x0
   2c410:	mov	x0, x23
   2c414:	bl	6c20 <__asan_backtrace_free@plt>
   2c418:	ldr	x0, [x19, #8]
   2c41c:	str	x21, [x19]
   2c420:	sub	x20, x20, x0
   2c424:	str	x20, [x19, #16]
   2c428:	ldp	x21, x0, [x19]
   2c42c:	ldr	x1, [x19, #16]
   2c430:	add	x21, x21, x0
   2c434:	add	x0, x0, x22
   2c438:	sub	x22, x1, x22
   2c43c:	stp	x0, x22, [x19, #8]
   2c440:	mov	x0, x21
   2c444:	ldp	x19, x20, [sp, #16]
   2c448:	ldp	x21, x22, [sp, #32]
   2c44c:	ldp	x23, x24, [sp, #48]
   2c450:	ldr	x25, [sp, #64]
   2c454:	ldp	x29, x30, [sp], #80
   2c458:	ret
   2c45c:	bl	6ce0 <getpagesize@plt>
   2c460:	lsl	x20, x21, #1
   2c464:	sxtw	x1, w0
   2c468:	cmp	x21, w0, sxtw
   2c46c:	b.cs	2c47c <__asan_backtrace_vector_grow@@Base+0xf4>  // b.hs, b.nlast
   2c470:	cmp	x1, x20
   2c474:	csel	x20, x1, x20, ls  // ls = plast
   2c478:	b	2c3d0 <__asan_backtrace_vector_grow@@Base+0x48>
   2c47c:	sub	x20, x20, #0x1
   2c480:	add	x20, x20, x1
   2c484:	neg	x1, x1
   2c488:	and	x20, x20, x1
   2c48c:	b	2c3d0 <__asan_backtrace_vector_grow@@Base+0x48>

000000000002c490 <__asan_backtrace_vector_finish@@Base>:
   2c490:	ldp	x0, x2, [x1]
   2c494:	add	x2, x0, x2
   2c498:	stp	x2, xzr, [x1]
   2c49c:	ret

000000000002c4a0 <__asan_backtrace_vector_release@@Base>:
   2c4a0:	stp	x29, x30, [sp, #-32]!
   2c4a4:	mov	x29, sp
   2c4a8:	ldr	x5, [x1, #8]
   2c4ac:	str	x19, [sp, #16]
   2c4b0:	mov	x19, x1
   2c4b4:	add	x1, x5, #0x7
   2c4b8:	and	x1, x1, #0xfffffffffffffff8
   2c4bc:	ldr	x4, [x19, #16]
   2c4c0:	ldr	x6, [x19]
   2c4c4:	add	x5, x5, x4
   2c4c8:	mov	x4, x3
   2c4cc:	mov	x3, x2
   2c4d0:	sub	x2, x5, x1
   2c4d4:	add	x1, x6, x1
   2c4d8:	bl	6c20 <__asan_backtrace_free@plt>
   2c4dc:	str	xzr, [x19, #16]
   2c4e0:	ldr	x0, [x19, #8]
   2c4e4:	cbnz	x0, 2c4ec <__asan_backtrace_vector_release@@Base+0x4c>
   2c4e8:	str	xzr, [x19]
   2c4ec:	mov	w0, #0x1                   	// #1
   2c4f0:	ldr	x19, [sp, #16]
   2c4f4:	ldp	x29, x30, [sp], #32
   2c4f8:	ret
   2c4fc:	nop
   2c500:	adrp	x2, 51000 <_Unwind_Backtrace@GCC_3.3>
   2c504:	mov	x1, #0x0                   	// #0
   2c508:	ldr	x2, [x2, #936]
   2c50c:	b	6a80 <__cxa_atexit@plt>
   2c510:	mov	x2, x1
   2c514:	mov	w1, w0
   2c518:	mov	w0, #0x0                   	// #0
   2c51c:	b	66c0 <__fxstat@plt>
   2c520:	mov	x2, x1
   2c524:	mov	x1, x0
   2c528:	mov	w0, #0x0                   	// #0
   2c52c:	b	6c30 <__lxstat@plt>

Disassembly of section .fini:

000000000002c530 <.fini>:
   2c530:	stp	x29, x30, [sp, #-16]!
   2c534:	mov	x29, sp
   2c538:	ldp	x29, x30, [sp], #16
   2c53c:	ret
