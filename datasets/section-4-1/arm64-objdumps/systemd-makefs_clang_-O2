
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-makefs_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400c00 <_init>:
  400c00:	stp	x29, x30, [sp, #-16]!
  400c04:	mov	x29, sp
  400c08:	bl	400df8 <call_weak_fn>
  400c0c:	ldp	x29, x30, [sp], #16
  400c10:	ret

Disassembly of section .plt:

0000000000400c18 <__libc_start_main@plt-0x20>:
  400c18:	stp	x16, x30, [sp, #-16]!
  400c1c:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400c20:	ldr	x17, [x16, #3904]
  400c24:	add	x16, x16, #0xf40
  400c28:	br	x17
  400c2c:	nop
  400c30:	nop
  400c34:	nop

0000000000400c38 <__libc_start_main@plt>:
  400c38:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400c3c:	ldr	x17, [x16, #3912]
  400c40:	add	x16, x16, #0xf48
  400c44:	br	x17

0000000000400c48 <abort@plt>:
  400c48:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400c4c:	ldr	x17, [x16, #3920]
  400c50:	add	x16, x16, #0xf50
  400c54:	br	x17

0000000000400c58 <__gmon_start__@plt>:
  400c58:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400c5c:	ldr	x17, [x16, #3928]
  400c60:	add	x16, x16, #0xf58
  400c64:	br	x17

0000000000400c68 <log_setup_service@plt>:
  400c68:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400c6c:	ldr	x17, [x16, #3936]
  400c70:	add	x16, x16, #0xf60
  400c74:	br	x17

0000000000400c78 <__xstat64@plt>:
  400c78:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400c7c:	ldr	x17, [x16, #3944]
  400c80:	add	x16, x16, #0xf68
  400c84:	br	x17

0000000000400c88 <log_get_max_level_realm@plt>:
  400c88:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400c8c:	ldr	x17, [x16, #3952]
  400c90:	add	x16, x16, #0xf70
  400c94:	br	x17

0000000000400c98 <log_internal_realm@plt>:
  400c98:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400c9c:	ldr	x17, [x16, #3960]
  400ca0:	add	x16, x16, #0xf78
  400ca4:	br	x17

0000000000400ca8 <probe_filesystem@plt>:
  400ca8:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400cac:	ldr	x17, [x16, #3968]
  400cb0:	add	x16, x16, #0xf80
  400cb4:	br	x17

0000000000400cb8 <__errno_location@plt>:
  400cb8:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400cbc:	ldr	x17, [x16, #3976]
  400cc0:	add	x16, x16, #0xf88
  400cc4:	br	x17

0000000000400cc8 <free@plt>:
  400cc8:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400ccc:	ldr	x17, [x16, #3984]
  400cd0:	add	x16, x16, #0xf90
  400cd4:	br	x17

0000000000400cd8 <ask_password_agent_close@plt>:
  400cd8:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400cdc:	ldr	x17, [x16, #3992]
  400ce0:	add	x16, x16, #0xf98
  400ce4:	br	x17

0000000000400ce8 <polkit_agent_close@plt>:
  400ce8:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400cec:	ldr	x17, [x16, #4000]
  400cf0:	add	x16, x16, #0xfa0
  400cf4:	br	x17

0000000000400cf8 <pager_close@plt>:
  400cf8:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400cfc:	ldr	x17, [x16, #4008]
  400d00:	add	x16, x16, #0xfa8
  400d04:	br	x17

0000000000400d08 <mac_selinux_finish@plt>:
  400d08:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d0c:	ldr	x17, [x16, #4016]
  400d10:	add	x16, x16, #0xfb0
  400d14:	br	x17

0000000000400d18 <strcmp@plt>:
  400d18:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d1c:	ldr	x17, [x16, #4024]
  400d20:	add	x16, x16, #0xfb8
  400d24:	br	x17

0000000000400d28 <strlen@plt>:
  400d28:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d2c:	ldr	x17, [x16, #4032]
  400d30:	add	x16, x16, #0xfc0
  400d34:	br	x17

0000000000400d38 <stpcpy@plt>:
  400d38:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d3c:	ldr	x17, [x16, #4040]
  400d40:	add	x16, x16, #0xfc8
  400d44:	br	x17

0000000000400d48 <access@plt>:
  400d48:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d4c:	ldr	x17, [x16, #4048]
  400d50:	add	x16, x16, #0xfd0
  400d54:	br	x17

0000000000400d58 <safe_fork_full@plt>:
  400d58:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d5c:	ldr	x17, [x16, #4056]
  400d60:	add	x16, x16, #0xfd8
  400d64:	br	x17

0000000000400d68 <wait_for_terminate_and_check@plt>:
  400d68:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d6c:	ldr	x17, [x16, #4064]
  400d70:	add	x16, x16, #0xfe0
  400d74:	br	x17

0000000000400d78 <log_assert_failed_realm@plt>:
  400d78:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d7c:	ldr	x17, [x16, #4072]
  400d80:	add	x16, x16, #0xfe8
  400d84:	br	x17

0000000000400d88 <execv@plt>:
  400d88:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d8c:	ldr	x17, [x16, #4080]
  400d90:	add	x16, x16, #0xff0
  400d94:	br	x17

0000000000400d98 <_exit@plt>:
  400d98:	adrp	x16, 41f000 <__FRAME_END__+0x1da18>
  400d9c:	ldr	x17, [x16, #4088]
  400da0:	add	x16, x16, #0xff8
  400da4:	br	x17

Disassembly of section .text:

0000000000400da8 <_start>:
  400da8:	mov	x29, #0x0                   	// #0
  400dac:	mov	x30, #0x0                   	// #0
  400db0:	mov	x5, x0
  400db4:	ldr	x1, [sp]
  400db8:	add	x2, sp, #0x8
  400dbc:	mov	x6, sp
  400dc0:	movz	x0, #0x0, lsl #48
  400dc4:	movk	x0, #0x0, lsl #32
  400dc8:	movk	x0, #0x40, lsl #16
  400dcc:	movk	x0, #0xeb4
  400dd0:	movz	x3, #0x0, lsl #48
  400dd4:	movk	x3, #0x0, lsl #32
  400dd8:	movk	x3, #0x40, lsl #16
  400ddc:	movk	x3, #0x12f0
  400de0:	movz	x4, #0x0, lsl #48
  400de4:	movk	x4, #0x0, lsl #32
  400de8:	movk	x4, #0x40, lsl #16
  400dec:	movk	x4, #0x1370
  400df0:	bl	400c38 <__libc_start_main@plt>
  400df4:	bl	400c48 <abort@plt>

0000000000400df8 <call_weak_fn>:
  400df8:	adrp	x0, 41f000 <__FRAME_END__+0x1da18>
  400dfc:	ldr	x0, [x0, #3864]
  400e00:	cbz	x0, 400e08 <call_weak_fn+0x10>
  400e04:	b	400c58 <__gmon_start__@plt>
  400e08:	ret
  400e0c:	udf	#0

0000000000400e10 <deregister_tm_clones>:
  400e10:	adrp	x0, 420000 <completed.8445>
  400e14:	add	x0, x0, #0x0
  400e18:	adrp	x1, 420000 <completed.8445>
  400e1c:	add	x1, x1, #0x0
  400e20:	cmp	x1, x0
  400e24:	b.eq	400e3c <deregister_tm_clones+0x2c>  // b.none
  400e28:	adrp	x1, 401000 <main+0x14c>
  400e2c:	ldr	x1, [x1, #904]
  400e30:	cbz	x1, 400e3c <deregister_tm_clones+0x2c>
  400e34:	mov	x16, x1
  400e38:	br	x16
  400e3c:	ret

0000000000400e40 <register_tm_clones>:
  400e40:	adrp	x0, 420000 <completed.8445>
  400e44:	add	x0, x0, #0x0
  400e48:	adrp	x1, 420000 <completed.8445>
  400e4c:	add	x1, x1, #0x0
  400e50:	sub	x1, x1, x0
  400e54:	lsr	x2, x1, #63
  400e58:	add	x1, x2, x1, asr #3
  400e5c:	cmp	xzr, x1, asr #1
  400e60:	asr	x1, x1, #1
  400e64:	b.eq	400e7c <register_tm_clones+0x3c>  // b.none
  400e68:	adrp	x2, 401000 <main+0x14c>
  400e6c:	ldr	x2, [x2, #912]
  400e70:	cbz	x2, 400e7c <register_tm_clones+0x3c>
  400e74:	mov	x16, x2
  400e78:	br	x16
  400e7c:	ret

0000000000400e80 <__do_global_dtors_aux>:
  400e80:	stp	x29, x30, [sp, #-32]!
  400e84:	mov	x29, sp
  400e88:	str	x19, [sp, #16]
  400e8c:	adrp	x19, 420000 <completed.8445>
  400e90:	ldrb	w0, [x19]
  400e94:	cbnz	w0, 400ea4 <__do_global_dtors_aux+0x24>
  400e98:	bl	400e10 <deregister_tm_clones>
  400e9c:	mov	w0, #0x1                   	// #1
  400ea0:	strb	w0, [x19]
  400ea4:	ldr	x19, [sp, #16]
  400ea8:	ldp	x29, x30, [sp], #32
  400eac:	ret

0000000000400eb0 <frame_dummy>:
  400eb0:	b	400e40 <register_tm_clones>

0000000000400eb4 <main>:
  400eb4:	sub	sp, sp, #0xb0
  400eb8:	stp	x29, x30, [sp, #128]
  400ebc:	add	x29, sp, #0x80
  400ec0:	adrp	x8, 420000 <completed.8445>
  400ec4:	adrp	x9, 420000 <completed.8445>
  400ec8:	str	x21, [sp, #144]
  400ecc:	stp	x20, x19, [sp, #160]
  400ed0:	mov	x19, x1
  400ed4:	mov	w20, w0
  400ed8:	str	w0, [x8, #8]
  400edc:	str	x1, [x9, #16]
  400ee0:	str	xzr, [x29, #24]
  400ee4:	bl	400c68 <log_setup_service@plt>
  400ee8:	cmp	w20, #0x3
  400eec:	b.ne	400fb8 <main+0x104>  // b.any
  400ef0:	ldp	x20, x19, [x19, #8]
  400ef4:	mov	x2, sp
  400ef8:	mov	w0, wzr
  400efc:	mov	x1, x19
  400f00:	bl	400c78 <__xstat64@plt>
  400f04:	tbnz	w0, #31, 401000 <main+0x14c>
  400f08:	ldr	w8, [sp, #16]
  400f0c:	and	w8, w8, #0xf000
  400f10:	cmp	w8, #0x6, lsl #12
  400f14:	b.eq	400f54 <main+0xa0>  // b.none
  400f18:	mov	w0, wzr
  400f1c:	bl	400c88 <log_get_max_level_realm@plt>
  400f20:	cmp	w0, #0x6
  400f24:	b.lt	400f54 <main+0xa0>  // b.tstop
  400f28:	adrp	x2, 401000 <main+0x14c>
  400f2c:	adrp	x4, 401000 <main+0x14c>
  400f30:	adrp	x5, 401000 <main+0x14c>
  400f34:	add	x2, x2, #0x39b
  400f38:	add	x4, x4, #0x3b2
  400f3c:	add	x5, x5, #0x3f2
  400f40:	mov	w0, #0x6                   	// #6
  400f44:	mov	w3, #0x40                  	// #64
  400f48:	mov	w1, wzr
  400f4c:	mov	x6, x19
  400f50:	bl	400c98 <log_internal_realm@plt>
  400f54:	add	x1, x29, #0x18
  400f58:	mov	x0, x19
  400f5c:	bl	400ca8 <probe_filesystem@plt>
  400f60:	tbnz	w0, #31, 401040 <main+0x18c>
  400f64:	ldr	x21, [x29, #24]
  400f68:	cbz	x21, 4010a8 <main+0x1f4>
  400f6c:	mov	w0, wzr
  400f70:	bl	400c88 <log_get_max_level_realm@plt>
  400f74:	cmp	w0, #0x6
  400f78:	mov	w20, wzr
  400f7c:	b.lt	4010b8 <main+0x204>  // b.tstop
  400f80:	adrp	x2, 401000 <main+0x14c>
  400f84:	adrp	x4, 401000 <main+0x14c>
  400f88:	adrp	x5, 401000 <main+0x14c>
  400f8c:	add	x2, x2, #0x39b
  400f90:	add	x4, x4, #0x3b2
  400f94:	add	x5, x5, #0x460
  400f98:	mov	w0, #0x6                   	// #6
  400f9c:	mov	w3, #0x4b                  	// #75
  400fa0:	mov	w1, wzr
  400fa4:	mov	x6, x19
  400fa8:	mov	x7, x21
  400fac:	bl	400c98 <log_internal_realm@plt>
  400fb0:	mov	w20, wzr
  400fb4:	b	4010b8 <main+0x204>
  400fb8:	mov	w0, wzr
  400fbc:	bl	400c88 <log_get_max_level_realm@plt>
  400fc0:	cmp	w0, #0x3
  400fc4:	b.lt	400ff8 <main+0x144>  // b.tstop
  400fc8:	adrp	x2, 401000 <main+0x14c>
  400fcc:	adrp	x4, 401000 <main+0x14c>
  400fd0:	adrp	x5, 401000 <main+0x14c>
  400fd4:	mov	w1, #0x16                  	// #22
  400fd8:	add	x2, x2, #0x39b
  400fdc:	add	x4, x4, #0x3b2
  400fe0:	add	x5, x5, #0x3b6
  400fe4:	mov	w0, #0x3                   	// #3
  400fe8:	movk	w1, #0x4000, lsl #16
  400fec:	mov	w3, #0x37                  	// #55
  400ff0:	bl	400c98 <log_internal_realm@plt>
  400ff4:	b	4010b4 <main+0x200>
  400ff8:	mov	w20, #0xffffffea            	// #-22
  400ffc:	b	4010b8 <main+0x204>
  401000:	bl	400cb8 <__errno_location@plt>
  401004:	ldr	w20, [x0]
  401008:	mov	w0, wzr
  40100c:	bl	400c88 <log_get_max_level_realm@plt>
  401010:	cmp	w0, #0x3
  401014:	b.lt	401094 <main+0x1e0>  // b.tstop
  401018:	adrp	x2, 401000 <main+0x14c>
  40101c:	adrp	x4, 401000 <main+0x14c>
  401020:	adrp	x5, 401000 <main+0x14c>
  401024:	add	x2, x2, #0x39b
  401028:	add	x4, x4, #0x3b2
  40102c:	add	x5, x5, #0x3da
  401030:	mov	w0, #0x3                   	// #3
  401034:	mov	w3, #0x3d                  	// #61
  401038:	mov	w1, w20
  40103c:	b	401088 <main+0x1d4>
  401040:	mov	w21, w0
  401044:	mov	w0, wzr
  401048:	bl	400c88 <log_get_max_level_realm@plt>
  40104c:	cmp	w0, #0x4
  401050:	b.lt	401128 <main+0x274>  // b.tstop
  401054:	adrp	x8, 401000 <main+0x14c>
  401058:	adrp	x9, 401000 <main+0x14c>
  40105c:	add	x8, x8, #0x447
  401060:	add	x9, x9, #0x40c
  401064:	cmn	w21, #0x75
  401068:	adrp	x2, 401000 <main+0x14c>
  40106c:	adrp	x4, 401000 <main+0x14c>
  401070:	csel	x5, x9, x8, eq  // eq = none
  401074:	add	x2, x2, #0x39b
  401078:	add	x4, x4, #0x3b2
  40107c:	mov	w0, #0x4                   	// #4
  401080:	mov	w3, #0x48                  	// #72
  401084:	mov	w1, w21
  401088:	mov	x6, x19
  40108c:	bl	400c98 <log_internal_realm@plt>
  401090:	b	4010b4 <main+0x200>
  401094:	cmp	w20, #0x0
  401098:	mov	w8, wzr
  40109c:	cneg	w9, w20, mi  // mi = first
  4010a0:	sub	w20, w8, w9, uxtb
  4010a4:	b	4010b8 <main+0x204>
  4010a8:	mov	x0, x20
  4010ac:	mov	x1, x19
  4010b0:	bl	401138 <makefs>
  4010b4:	mov	w20, w0
  4010b8:	ldr	x0, [x29, #24]
  4010bc:	bl	400cc8 <free@plt>
  4010c0:	bl	400cd8 <ask_password_agent_close@plt>
  4010c4:	bl	400ce8 <polkit_agent_close@plt>
  4010c8:	bl	400cf8 <pager_close@plt>
  4010cc:	bl	400d08 <mac_selinux_finish@plt>
  4010d0:	adrp	x8, 41f000 <__FRAME_END__+0x1da18>
  4010d4:	ldr	x8, [x8, #3872]
  4010d8:	adrp	x19, 41f000 <__FRAME_END__+0x1da18>
  4010dc:	ldr	x19, [x19, #3880]
  4010e0:	add	x9, x8, #0x7
  4010e4:	and	x21, x9, #0xfffffffffffffff8
  4010e8:	cmp	x21, x19
  4010ec:	cset	w9, cs  // cs = hs, nlast
  4010f0:	cmp	x8, #0x0
  4010f4:	cset	w8, eq  // eq = none
  4010f8:	orr	w8, w8, w9
  4010fc:	tbnz	w8, #0, 401110 <main+0x25c>
  401100:	ldp	x0, x8, [x21], #16
  401104:	blr	x8
  401108:	cmp	x21, x19
  40110c:	b.cc	401100 <main+0x24c>  // b.lo, b.ul, b.last
  401110:	lsr	w0, w20, #31
  401114:	ldp	x20, x19, [sp, #160]
  401118:	ldr	x21, [sp, #144]
  40111c:	ldp	x29, x30, [sp, #128]
  401120:	add	sp, sp, #0xb0
  401124:	ret
  401128:	mov	w8, wzr
  40112c:	neg	w9, w21
  401130:	sub	w20, w8, w9, uxtb
  401134:	b	4010b8 <main+0x204>

0000000000401138 <makefs>:
  401138:	stp	x29, x30, [sp, #-48]!
  40113c:	str	x21, [sp, #16]
  401140:	stp	x20, x19, [sp, #32]
  401144:	mov	x29, sp
  401148:	sub	sp, sp, #0x20
  40114c:	mov	x20, x1
  401150:	adrp	x1, 401000 <main+0x14c>
  401154:	add	x1, x1, #0x483
  401158:	mov	x21, x0
  40115c:	bl	400d18 <strcmp@plt>
  401160:	cbz	w0, 4011bc <makefs+0x84>
  401164:	cbz	x21, 4011c8 <makefs+0x90>
  401168:	mov	x0, x21
  40116c:	bl	400d28 <strlen@plt>
  401170:	add	x8, x0, #0xc
  401174:	cmp	x8, #0x400, lsl #12
  401178:	b.hi	4012ac <makefs+0x174>  // b.pmore
  40117c:	add	x8, x8, #0xf
  401180:	mov	x9, sp
  401184:	and	x8, x8, #0xfffffffffffffff0
  401188:	sub	x19, x9, x8
  40118c:	mov	sp, x19
  401190:	adrp	x8, 401000 <main+0x14c>
  401194:	add	x8, x8, #0x495
  401198:	ldr	x8, [x8]
  40119c:	mov	w9, #0x7366                	// #29542
  4011a0:	add	x0, x19, #0xb
  4011a4:	movk	w9, #0x2e, lsl #16
  4011a8:	mov	x1, x21
  4011ac:	str	w9, [x19, #8]
  4011b0:	str	x8, [x19]
  4011b4:	bl	400d38 <stpcpy@plt>
  4011b8:	b	4011f4 <makefs+0xbc>
  4011bc:	adrp	x19, 401000 <main+0x14c>
  4011c0:	add	x19, x19, #0x488
  4011c4:	b	4011f8 <makefs+0xc0>
  4011c8:	mov	x8, sp
  4011cc:	sub	x19, x8, #0x10
  4011d0:	mov	sp, x19
  4011d4:	adrp	x9, 401000 <main+0x14c>
  4011d8:	add	x9, x9, #0x495
  4011dc:	ldr	x9, [x9]
  4011e0:	mov	w10, #0x7366                	// #29542
  4011e4:	sub	x0, x8, #0x5
  4011e8:	movk	w10, #0x2e, lsl #16
  4011ec:	stur	w10, [x8, #-8]
  4011f0:	stur	x9, [x8, #-16]
  4011f4:	strb	wzr, [x0]
  4011f8:	mov	w1, #0x1                   	// #1
  4011fc:	mov	x0, x19
  401200:	bl	400d48 <access@plt>
  401204:	cbz	w0, 401250 <makefs+0x118>
  401208:	bl	400cb8 <__errno_location@plt>
  40120c:	ldr	w20, [x0]
  401210:	mov	w0, wzr
  401214:	bl	400c88 <log_get_max_level_realm@plt>
  401218:	cmp	w0, #0x3
  40121c:	b.lt	401288 <makefs+0x150>  // b.tstop
  401220:	adrp	x2, 401000 <main+0x14c>
  401224:	adrp	x4, 401000 <main+0x14c>
  401228:	adrp	x5, 401000 <main+0x14c>
  40122c:	add	x2, x2, #0x39b
  401230:	add	x4, x4, #0x4e7
  401234:	add	x5, x5, #0x4ee
  401238:	mov	w0, #0x3                   	// #3
  40123c:	mov	w3, #0x1c                  	// #28
  401240:	mov	w1, w20
  401244:	mov	x6, x19
  401248:	bl	400c98 <log_internal_realm@plt>
  40124c:	b	401298 <makefs+0x160>
  401250:	adrp	x0, 401000 <main+0x14c>
  401254:	add	x0, x0, #0x507
  401258:	add	x4, x29, #0x1c
  40125c:	mov	w3, #0x225                 	// #549
  401260:	mov	x1, xzr
  401264:	mov	x2, xzr
  401268:	bl	400d58 <safe_fork_full@plt>
  40126c:	tbnz	w0, #31, 401298 <makefs+0x160>
  401270:	cbz	w0, 4012d0 <makefs+0x198>
  401274:	ldr	w1, [x29, #28]
  401278:	mov	w2, #0x3                   	// #3
  40127c:	mov	x0, x19
  401280:	bl	400d68 <wait_for_terminate_and_check@plt>
  401284:	b	401298 <makefs+0x160>
  401288:	cmp	w20, #0x0
  40128c:	mov	w8, wzr
  401290:	cneg	w9, w20, mi  // mi = first
  401294:	sub	w0, w8, w9, uxtb
  401298:	mov	sp, x29
  40129c:	ldp	x20, x19, [sp, #32]
  4012a0:	ldr	x21, [sp, #16]
  4012a4:	ldp	x29, x30, [sp], #48
  4012a8:	ret
  4012ac:	adrp	x1, 401000 <main+0x14c>
  4012b0:	adrp	x2, 401000 <main+0x14c>
  4012b4:	adrp	x4, 401000 <main+0x14c>
  4012b8:	add	x1, x1, #0x4c8
  4012bc:	add	x2, x2, #0x39b
  4012c0:	add	x4, x4, #0x4a1
  4012c4:	mov	w3, #0x1a                  	// #26
  4012c8:	mov	w0, wzr
  4012cc:	bl	400d78 <log_assert_failed_realm@plt>
  4012d0:	sub	x1, x29, #0x18
  4012d4:	mov	x0, x19
  4012d8:	stp	x19, x20, [x29, #-24]
  4012dc:	stur	xzr, [x29, #-8]
  4012e0:	bl	400d88 <execv@plt>
  4012e4:	mov	w0, #0x1                   	// #1
  4012e8:	bl	400d98 <_exit@plt>
  4012ec:	udf	#0

00000000004012f0 <__libc_csu_init>:
  4012f0:	stp	x29, x30, [sp, #-64]!
  4012f4:	mov	x29, sp
  4012f8:	stp	x19, x20, [sp, #16]
  4012fc:	adrp	x20, 41f000 <__FRAME_END__+0x1da18>
  401300:	add	x20, x20, #0xcf0
  401304:	stp	x21, x22, [sp, #32]
  401308:	adrp	x21, 41f000 <__FRAME_END__+0x1da18>
  40130c:	add	x21, x21, #0xce8
  401310:	sub	x20, x20, x21
  401314:	mov	w22, w0
  401318:	stp	x23, x24, [sp, #48]
  40131c:	mov	x23, x1
  401320:	mov	x24, x2
  401324:	bl	400c00 <_init>
  401328:	cmp	xzr, x20, asr #3
  40132c:	b.eq	401358 <__libc_csu_init+0x68>  // b.none
  401330:	asr	x20, x20, #3
  401334:	mov	x19, #0x0                   	// #0
  401338:	ldr	x3, [x21, x19, lsl #3]
  40133c:	mov	x2, x24
  401340:	add	x19, x19, #0x1
  401344:	mov	x1, x23
  401348:	mov	w0, w22
  40134c:	blr	x3
  401350:	cmp	x20, x19
  401354:	b.ne	401338 <__libc_csu_init+0x48>  // b.any
  401358:	ldp	x19, x20, [sp, #16]
  40135c:	ldp	x21, x22, [sp, #32]
  401360:	ldp	x23, x24, [sp, #48]
  401364:	ldp	x29, x30, [sp], #64
  401368:	ret
  40136c:	nop

0000000000401370 <__libc_csu_fini>:
  401370:	ret

Disassembly of section .fini:

0000000000401374 <_fini>:
  401374:	stp	x29, x30, [sp, #-16]!
  401378:	mov	x29, sp
  40137c:	ldp	x29, x30, [sp], #16
  401380:	ret
