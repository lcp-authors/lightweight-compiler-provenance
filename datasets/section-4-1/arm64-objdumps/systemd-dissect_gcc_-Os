
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-dissect_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401170 <_init>:
  401170:	stp	x29, x30, [sp, #-16]!
  401174:	mov	x29, sp
  401178:	bl	401e18 <call_weak_fn>
  40117c:	ldp	x29, x30, [sp], #16
  401180:	ret

Disassembly of section .plt:

0000000000401190 <.plt>:
  401190:	stp	x16, x30, [sp, #-16]!
  401194:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401198:	ldr	x17, [x16, #3792]
  40119c:	add	x16, x16, #0xed0
  4011a0:	br	x17
  4011a4:	nop
  4011a8:	nop
  4011ac:	nop

00000000004011b0 <root_hash_load@plt>:
  4011b0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4011b4:	ldr	x17, [x16, #3800]
  4011b8:	add	x16, x16, #0xed8
  4011bc:	br	x17

00000000004011c0 <architecture_to_string@plt>:
  4011c0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4011c4:	ldr	x17, [x16, #3808]
  4011c8:	add	x16, x16, #0xee0
  4011cc:	br	x17

00000000004011d0 <__libc_start_main@plt>:
  4011d0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4011d4:	ldr	x17, [x16, #3816]
  4011d8:	add	x16, x16, #0xee8
  4011dc:	br	x17

00000000004011e0 <__gmon_start__@plt>:
  4011e0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4011e4:	ldr	x17, [x16, #3824]
  4011e8:	add	x16, x16, #0xef0
  4011ec:	br	x17

00000000004011f0 <polkit_agent_close@plt>:
  4011f0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4011f4:	ldr	x17, [x16, #3832]
  4011f8:	add	x16, x16, #0xef8
  4011fc:	br	x17

0000000000401200 <log_parse_environment_realm@plt>:
  401200:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401204:	ldr	x17, [x16, #3840]
  401208:	add	x16, x16, #0xf00
  40120c:	br	x17

0000000000401210 <putchar@plt>:
  401210:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401214:	ldr	x17, [x16, #3848]
  401218:	add	x16, x16, #0xf08
  40121c:	br	x17

0000000000401220 <loop_device_unref@plt>:
  401220:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401224:	ldr	x17, [x16, #3856]
  401228:	add	x16, x16, #0xf10
  40122c:	br	x17

0000000000401230 <loop_device_relinquish@plt>:
  401230:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401234:	ldr	x17, [x16, #3864]
  401238:	add	x16, x16, #0xf18
  40123c:	br	x17

0000000000401240 <loop_device_make_by_path@plt>:
  401240:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401244:	ldr	x17, [x16, #3872]
  401248:	add	x16, x16, #0xf20
  40124c:	br	x17

0000000000401250 <log_assert_failed_realm@plt>:
  401250:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401254:	ldr	x17, [x16, #3880]
  401258:	add	x16, x16, #0xf28
  40125c:	br	x17

0000000000401260 <getopt_long@plt>:
  401260:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401264:	ldr	x17, [x16, #3888]
  401268:	add	x16, x16, #0xf30
  40126c:	br	x17

0000000000401270 <dissected_image_decrypt_interactively@plt>:
  401270:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401274:	ldr	x17, [x16, #3896]
  401278:	add	x16, x16, #0xf38
  40127c:	br	x17

0000000000401280 <log_assert_failed_unreachable_realm@plt>:
  401280:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401284:	ldr	x17, [x16, #3904]
  401288:	add	x16, x16, #0xf40
  40128c:	br	x17

0000000000401290 <abort@plt>:
  401290:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401294:	ldr	x17, [x16, #3912]
  401298:	add	x16, x16, #0xf48
  40129c:	br	x17

00000000004012a0 <decrypted_image_unref@plt>:
  4012a0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4012a4:	ldr	x17, [x16, #3920]
  4012a8:	add	x16, x16, #0xf50
  4012ac:	br	x17

00000000004012b0 <dissected_image_acquire_metadata@plt>:
  4012b0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4012b4:	ldr	x17, [x16, #3928]
  4012b8:	add	x16, x16, #0xf58
  4012bc:	br	x17

00000000004012c0 <__stack_chk_fail@plt>:
  4012c0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4012c4:	ldr	x17, [x16, #3936]
  4012c8:	add	x16, x16, #0xf60
  4012cc:	br	x17

00000000004012d0 <ask_password_agent_close@plt>:
  4012d0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4012d4:	ldr	x17, [x16, #3944]
  4012d8:	add	x16, x16, #0xf68
  4012dc:	br	x17

00000000004012e0 <version@plt>:
  4012e0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4012e4:	ldr	x17, [x16, #3952]
  4012e8:	add	x16, x16, #0xf70
  4012ec:	br	x17

00000000004012f0 <pager_close@plt>:
  4012f0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4012f4:	ldr	x17, [x16, #3960]
  4012f8:	add	x16, x16, #0xf78
  4012fc:	br	x17

0000000000401300 <log_internal_realm@plt>:
  401300:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401304:	ldr	x17, [x16, #3968]
  401308:	add	x16, x16, #0xf80
  40130c:	br	x17

0000000000401310 <unhexmem_full@plt>:
  401310:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401314:	ldr	x17, [x16, #3976]
  401318:	add	x16, x16, #0xf88
  40131c:	br	x17

0000000000401320 <strcmp@plt>:
  401320:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401324:	ldr	x17, [x16, #3984]
  401328:	add	x16, x16, #0xf90
  40132c:	br	x17

0000000000401330 <dissected_image_mount@plt>:
  401330:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401334:	ldr	x17, [x16, #3992]
  401338:	add	x16, x16, #0xf98
  40133c:	br	x17

0000000000401340 <dissected_image_unref@plt>:
  401340:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401344:	ldr	x17, [x16, #4000]
  401348:	add	x16, x16, #0xfa0
  40134c:	br	x17

0000000000401350 <partition_designator_to_string@plt>:
  401350:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401354:	ldr	x17, [x16, #4008]
  401358:	add	x16, x16, #0xfa8
  40135c:	br	x17

0000000000401360 <free@plt>:
  401360:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401364:	ldr	x17, [x16, #4016]
  401368:	add	x16, x16, #0xfb0
  40136c:	br	x17

0000000000401370 <mac_selinux_finish@plt>:
  401370:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401374:	ldr	x17, [x16, #4024]
  401378:	add	x16, x16, #0xfb8
  40137c:	br	x17

0000000000401380 <printf@plt>:
  401380:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401384:	ldr	x17, [x16, #4032]
  401388:	add	x16, x16, #0xfc0
  40138c:	br	x17

0000000000401390 <strlen@plt>:
  401390:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  401394:	ldr	x17, [x16, #4040]
  401398:	add	x16, x16, #0xfc8
  40139c:	br	x17

00000000004013a0 <decrypted_image_relinquish@plt>:
  4013a0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4013a4:	ldr	x17, [x16, #4048]
  4013a8:	add	x16, x16, #0xfd0
  4013ac:	br	x17

00000000004013b0 <log_open@plt>:
  4013b0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4013b4:	ldr	x17, [x16, #4056]
  4013b8:	add	x16, x16, #0xfd8
  4013bc:	br	x17

00000000004013c0 <dissect_image_and_warn@plt>:
  4013c0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4013c4:	ldr	x17, [x16, #4064]
  4013c8:	add	x16, x16, #0xfe0
  4013cc:	br	x17

00000000004013d0 <log_get_max_level_realm@plt>:
  4013d0:	adrp	x16, 412000 <__FRAME_END__+0xf8d8>
  4013d4:	ldr	x17, [x16, #4072]
  4013d8:	add	x16, x16, #0xfe8
  4013dc:	br	x17

Disassembly of section .text:

00000000004013e0 <main>:
  4013e0:	sub	sp, sp, #0xd0
  4013e4:	stp	x29, x30, [sp, #80]
  4013e8:	add	x29, sp, #0x50
  4013ec:	stp	x19, x20, [sp, #96]
  4013f0:	adrp	x20, 412000 <__FRAME_END__+0xf8d8>
  4013f4:	add	x20, x20, #0xc88
  4013f8:	stp	x21, x22, [sp, #112]
  4013fc:	mov	w22, w0
  401400:	ldr	x0, [x20]
  401404:	str	x0, [sp, #200]
  401408:	mov	x0, #0x0                   	// #0
  40140c:	adrp	x0, 413000 <arg_flags>
  401410:	mov	x21, x1
  401414:	stp	x23, x24, [sp, #128]
  401418:	str	w22, [x0, #32]
  40141c:	adrp	x0, 413000 <arg_flags>
  401420:	stp	x25, x26, [sp, #144]
  401424:	str	x1, [x0, #8]
  401428:	mov	w0, #0x0                   	// #0
  40142c:	stp	xzr, xzr, [sp, #160]
  401430:	str	xzr, [sp, #176]
  401434:	bl	401200 <log_parse_environment_realm@plt>
  401438:	bl	4013b0 <log_open@plt>
  40143c:	tbz	w22, #31, 401464 <main+0x84>
  401440:	adrp	x4, 402000 <_fini+0x7c>
  401444:	adrp	x2, 401000 <_init-0x170>
  401448:	adrp	x1, 402000 <_fini+0x7c>
  40144c:	add	x4, x4, #0x4a0
  401450:	add	x2, x2, #0xfef
  401454:	add	x1, x1, #0x5
  401458:	mov	w3, #0x40                  	// #64
  40145c:	mov	w0, #0x0                   	// #0
  401460:	bl	401250 <log_assert_failed_realm@plt>
  401464:	cbz	x21, 4014d4 <main+0xf4>
  401468:	adrp	x25, 402000 <_fini+0x7c>
  40146c:	adrp	x24, 402000 <_fini+0x7c>
  401470:	adrp	x23, 413000 <arg_flags>
  401474:	add	x25, x25, #0x4c0
  401478:	add	x24, x24, #0x241
  40147c:	add	x23, x23, #0x0
  401480:	mov	x3, x25
  401484:	mov	x2, x24
  401488:	mov	x1, x21
  40148c:	mov	w0, w22
  401490:	mov	x4, #0x0                   	// #0
  401494:	bl	401260 <getopt_long@plt>
  401498:	tbz	w0, #31, 4014f4 <main+0x114>
  40149c:	adrp	x0, 413000 <arg_flags>
  4014a0:	ldr	w1, [x0, #52]
  4014a4:	adrp	x0, 413000 <arg_flags>
  4014a8:	cbz	w1, 4017bc <main+0x3dc>
  4014ac:	cmp	w1, #0x1
  4014b0:	b.eq	401894 <main+0x4b4>  // b.none
  4014b4:	adrp	x4, 402000 <_fini+0x7c>
  4014b8:	add	x4, x4, #0x4a0
  4014bc:	mov	w3, #0x9b                  	// #155
  4014c0:	adrp	x2, 401000 <_init-0x170>
  4014c4:	adrp	x1, 402000 <_fini+0x7c>
  4014c8:	add	x2, x2, #0xfef
  4014cc:	add	x1, x1, #0x2a9
  4014d0:	b	401538 <main+0x158>
  4014d4:	adrp	x4, 402000 <_fini+0x7c>
  4014d8:	adrp	x2, 401000 <_init-0x170>
  4014dc:	adrp	x1, 402000 <_fini+0x7c>
  4014e0:	add	x4, x4, #0x4a0
  4014e4:	add	x2, x2, #0xfef
  4014e8:	add	x1, x1, #0xf
  4014ec:	mov	w3, #0x41                  	// #65
  4014f0:	b	40145c <main+0x7c>
  4014f4:	cmp	w0, #0x72
  4014f8:	b.eq	401594 <main+0x1b4>  // b.none
  4014fc:	b.gt	401540 <main+0x160>
  401500:	cmp	w0, #0x68
  401504:	b.eq	401564 <main+0x184>  // b.none
  401508:	cmp	w0, #0x6d
  40150c:	b.eq	401584 <main+0x1a4>  // b.none
  401510:	cmp	w0, #0x3f
  401514:	mov	w19, #0xffffffea            	// #-22
  401518:	b.eq	4016ec <main+0x30c>  // b.none
  40151c:	adrp	x4, 402000 <_fini+0x7c>
  401520:	adrp	x2, 401000 <_init-0x170>
  401524:	adrp	x1, 402000 <_fini+0x7c>
  401528:	add	x4, x4, #0x4a0
  40152c:	add	x2, x2, #0xfef
  401530:	add	x1, x1, #0x230
  401534:	mov	w3, #0x81                  	// #129
  401538:	mov	w0, #0x0                   	// #0
  40153c:	bl	401280 <log_assert_failed_unreachable_realm@plt>
  401540:	cmp	w0, #0x101
  401544:	b.eq	4015a4 <main+0x1c4>  // b.none
  401548:	cmp	w0, #0x102
  40154c:	b.eq	40166c <main+0x28c>  // b.none
  401550:	cmp	w0, #0x100
  401554:	b.ne	40151c <main+0x13c>  // b.any
  401558:	bl	4012e0 <version@plt>
  40155c:	mov	w19, w0
  401560:	b	4016e4 <main+0x304>
  401564:	adrp	x0, 413000 <arg_flags>
  401568:	ldr	x2, [x0, #16]
  40156c:	adrp	x0, 402000 <_fini+0x7c>
  401570:	add	x0, x0, #0x14
  401574:	mov	x1, x2
  401578:	bl	401380 <printf@plt>
  40157c:	mov	w19, #0x0                   	// #0
  401580:	b	4016ec <main+0x30c>
  401584:	adrp	x0, 413000 <arg_flags>
  401588:	mov	w1, #0x1                   	// #1
  40158c:	str	w1, [x0, #52]
  401590:	b	401480 <main+0xa0>
  401594:	ldr	w0, [x23]
  401598:	orr	w0, w0, #0x1
  40159c:	str	w0, [x23]
  4015a0:	b	401480 <main+0xa0>
  4015a4:	adrp	x0, 413000 <arg_flags>
  4015a8:	adrp	x1, 402000 <_fini+0x7c>
  4015ac:	add	x1, x1, #0x1a9
  4015b0:	ldr	x19, [x0, #40]
  4015b4:	mov	x0, x19
  4015b8:	bl	401320 <strcmp@plt>
  4015bc:	cbz	w0, 401640 <main+0x260>
  4015c0:	adrp	x1, 402000 <_fini+0x7c>
  4015c4:	mov	x0, x19
  4015c8:	add	x1, x1, #0x1b2
  4015cc:	bl	401320 <strcmp@plt>
  4015d0:	cbz	w0, 401654 <main+0x274>
  4015d4:	adrp	x1, 402000 <_fini+0x7c>
  4015d8:	mov	x0, x19
  4015dc:	add	x1, x1, #0x1b7
  4015e0:	bl	401320 <strcmp@plt>
  4015e4:	cbz	w0, 40165c <main+0x27c>
  4015e8:	adrp	x1, 402000 <_fini+0x7c>
  4015ec:	mov	x0, x19
  4015f0:	add	x1, x1, #0x1bb
  4015f4:	bl	401320 <strcmp@plt>
  4015f8:	cbz	w0, 401664 <main+0x284>
  4015fc:	mov	w0, #0x0                   	// #0
  401600:	bl	4013d0 <log_get_max_level_realm@plt>
  401604:	cmp	w0, #0x2
  401608:	b.le	401794 <main+0x3b4>
  40160c:	adrp	x5, 402000 <_fini+0x7c>
  401610:	adrp	x4, 402000 <_fini+0x7c>
  401614:	adrp	x2, 401000 <_init-0x170>
  401618:	mov	w1, #0x16                  	// #22
  40161c:	mov	x6, x19
  401620:	add	x5, x5, #0x1c1
  401624:	add	x4, x4, #0x4af
  401628:	add	x2, x2, #0xfef
  40162c:	mov	w3, #0x62                  	// #98
  401630:	movk	w1, #0x4000, lsl #16
  401634:	mov	w0, #0x3                   	// #3
  401638:	bl	401300 <log_internal_realm@plt>
  40163c:	b	40155c <main+0x17c>
  401640:	mov	w1, #0x0                   	// #0
  401644:	ldr	w0, [x23]
  401648:	and	w0, w0, #0xfffffff1
  40164c:	orr	w0, w0, w1
  401650:	b	40159c <main+0x1bc>
  401654:	mov	w1, #0x2                   	// #2
  401658:	b	401644 <main+0x264>
  40165c:	mov	w1, #0x6                   	// #6
  401660:	b	401644 <main+0x264>
  401664:	mov	w1, #0xe                   	// #14
  401668:	b	401644 <main+0x264>
  40166c:	adrp	x0, 413000 <arg_flags>
  401670:	add	x26, x0, #0x28
  401674:	ldr	x19, [x0, #40]
  401678:	mov	x0, x19
  40167c:	bl	401390 <strlen@plt>
  401680:	add	x4, sp, #0xc0
  401684:	mov	x1, x0
  401688:	add	x3, sp, #0xb8
  40168c:	mov	x0, x19
  401690:	mov	w2, #0x0                   	// #0
  401694:	bl	401310 <unhexmem_full@plt>
  401698:	mov	w19, w0
  40169c:	tbz	w0, #31, 401744 <main+0x364>
  4016a0:	mov	w0, #0x0                   	// #0
  4016a4:	bl	4013d0 <log_get_max_level_realm@plt>
  4016a8:	cmp	w0, #0x2
  4016ac:	b.le	4016d8 <main+0x2f8>
  4016b0:	adrp	x5, 402000 <_fini+0x7c>
  4016b4:	adrp	x4, 402000 <_fini+0x7c>
  4016b8:	adrp	x2, 401000 <_init-0x170>
  4016bc:	add	x5, x5, #0x1e2
  4016c0:	add	x4, x4, #0x4af
  4016c4:	add	x2, x2, #0xfef
  4016c8:	mov	w1, w19
  4016cc:	mov	w3, #0x70                  	// #112
  4016d0:	ldr	x6, [x26]
  4016d4:	b	401634 <main+0x254>
  4016d8:	neg	w19, w19
  4016dc:	and	w0, w19, #0xff
  4016e0:	neg	w19, w0
  4016e4:	cmp	w19, #0x0
  4016e8:	b.gt	401828 <main+0x448>
  4016ec:	ldr	x0, [sp, #176]
  4016f0:	cbz	x0, 4016f8 <main+0x318>
  4016f4:	bl	401340 <dissected_image_unref@plt>
  4016f8:	ldr	x0, [sp, #168]
  4016fc:	cbz	x0, 401704 <main+0x324>
  401700:	bl	4012a0 <decrypted_image_unref@plt>
  401704:	ldr	x0, [sp, #160]
  401708:	cbz	x0, 401710 <main+0x330>
  40170c:	bl	401220 <loop_device_unref@plt>
  401710:	bl	4012d0 <ask_password_agent_close@plt>
  401714:	bl	4011f0 <polkit_agent_close@plt>
  401718:	bl	4012f0 <pager_close@plt>
  40171c:	bl	401370 <mac_selinux_finish@plt>
  401720:	adrp	x0, 402000 <_fini+0x7c>
  401724:	ldr	x0, [x0, #1168]
  401728:	cbnz	x0, 401d7c <main+0x99c>
  40172c:	lsr	w0, w19, #31
  401730:	ldr	x2, [sp, #200]
  401734:	ldr	x1, [x20]
  401738:	eor	x1, x2, x1
  40173c:	cbz	x1, 401dac <main+0x9cc>
  401740:	bl	4012c0 <__stack_chk_fail@plt>
  401744:	ldr	x0, [sp, #192]
  401748:	cmp	x0, #0xf
  40174c:	b.hi	40179c <main+0x3bc>  // b.pmore
  401750:	mov	w0, #0x0                   	// #0
  401754:	bl	4013d0 <log_get_max_level_realm@plt>
  401758:	cmp	w0, #0x2
  40175c:	b.le	40178c <main+0x3ac>
  401760:	ldr	x6, [x26]
  401764:	adrp	x5, 402000 <_fini+0x7c>
  401768:	adrp	x4, 402000 <_fini+0x7c>
  40176c:	adrp	x2, 401000 <_init-0x170>
  401770:	add	x5, x5, #0x205
  401774:	add	x4, x4, #0x4af
  401778:	add	x2, x2, #0xfef
  40177c:	mov	w3, #0x72                  	// #114
  401780:	mov	w1, #0x0                   	// #0
  401784:	mov	w0, #0x3                   	// #3
  401788:	bl	401300 <log_internal_realm@plt>
  40178c:	ldr	x0, [sp, #184]
  401790:	bl	401360 <free@plt>
  401794:	mov	w19, #0xffffffea            	// #-22
  401798:	b	4016ec <main+0x30c>
  40179c:	adrp	x19, 413000 <arg_flags>
  4017a0:	ldr	x0, [x19, #72]
  4017a4:	bl	401360 <free@plt>
  4017a8:	ldp	x0, x1, [sp, #184]
  4017ac:	str	x0, [x19, #72]
  4017b0:	adrp	x0, 413000 <arg_flags>
  4017b4:	str	x1, [x0, #80]
  4017b8:	b	401480 <main+0xa0>
  4017bc:	ldr	w0, [x0, #24]
  4017c0:	add	w1, w0, #0x1
  4017c4:	cmp	w22, w1
  4017c8:	b.eq	40180c <main+0x42c>  // b.none
  4017cc:	mov	w0, #0x0                   	// #0
  4017d0:	bl	4013d0 <log_get_max_level_realm@plt>
  4017d4:	cmp	w0, #0x2
  4017d8:	b.le	401794 <main+0x3b4>
  4017dc:	adrp	x5, 402000 <_fini+0x7c>
  4017e0:	adrp	x4, 402000 <_fini+0x7c>
  4017e4:	add	x5, x5, #0x245
  4017e8:	add	x4, x4, #0x4af
  4017ec:	mov	w3, #0x8a                  	// #138
  4017f0:	mov	w1, #0x16                  	// #22
  4017f4:	adrp	x2, 401000 <_init-0x170>
  4017f8:	movk	w1, #0x4000, lsl #16
  4017fc:	add	x2, x2, #0xfef
  401800:	mov	w0, #0x3                   	// #3
  401804:	bl	401300 <log_internal_realm@plt>
  401808:	b	40155c <main+0x17c>
  40180c:	ldr	x1, [x21, w0, sxtw #3]
  401810:	adrp	x0, 413000 <arg_flags>
  401814:	str	x1, [x0, #56]
  401818:	adrp	x1, 413000 <arg_flags>
  40181c:	ldr	w0, [x1]
  401820:	orr	w0, w0, #0x1
  401824:	str	w0, [x1]
  401828:	adrp	x21, 413000 <arg_flags>
  40182c:	adrp	x23, 413000 <arg_flags>
  401830:	add	x2, sp, #0xa0
  401834:	mov	x24, x23
  401838:	ldr	w0, [x21]
  40183c:	tst	x0, #0x1
  401840:	ldr	x0, [x23, #56]
  401844:	cset	w1, eq  // eq = none
  401848:	lsl	w1, w1, #1
  40184c:	bl	401240 <loop_device_make_by_path@plt>
  401850:	mov	w19, w0
  401854:	tbz	w0, #31, 4018f0 <main+0x510>
  401858:	mov	w0, #0x0                   	// #0
  40185c:	bl	4013d0 <log_get_max_level_realm@plt>
  401860:	cmp	w0, #0x2
  401864:	b.le	401d60 <main+0x980>
  401868:	adrp	x5, 402000 <_fini+0x7c>
  40186c:	adrp	x4, 402000 <_fini+0x7c>
  401870:	add	x5, x5, #0x2b9
  401874:	add	x4, x4, #0x4ba
  401878:	mov	w3, #0xb0                  	// #176
  40187c:	mov	w1, w19
  401880:	adrp	x2, 401000 <_init-0x170>
  401884:	mov	w0, #0x3                   	// #3
  401888:	add	x2, x2, #0xfef
  40188c:	bl	401300 <log_internal_realm@plt>
  401890:	b	401958 <main+0x578>
  401894:	ldr	w1, [x0, #24]
  401898:	add	w0, w1, #0x2
  40189c:	cmp	w22, w0
  4018a0:	b.eq	4018cc <main+0x4ec>  // b.none
  4018a4:	mov	w0, #0x0                   	// #0
  4018a8:	bl	4013d0 <log_get_max_level_realm@plt>
  4018ac:	cmp	w0, #0x2
  4018b0:	b.le	401794 <main+0x3b4>
  4018b4:	adrp	x5, 402000 <_fini+0x7c>
  4018b8:	adrp	x4, 402000 <_fini+0x7c>
  4018bc:	add	x5, x5, #0x26c
  4018c0:	add	x4, x4, #0x4af
  4018c4:	mov	w3, #0x93                  	// #147
  4018c8:	b	4017f0 <main+0x410>
  4018cc:	sbfiz	x1, x1, #3, #32
  4018d0:	adrp	x0, 413000 <arg_flags>
  4018d4:	ldr	x2, [x21, x1]
  4018d8:	add	x21, x21, x1
  4018dc:	str	x2, [x0, #56]
  4018e0:	adrp	x0, 413000 <arg_flags>
  4018e4:	ldr	x1, [x21, #8]
  4018e8:	str	x1, [x0, #64]
  4018ec:	b	401828 <main+0x448>
  4018f0:	adrp	x0, 413000 <arg_flags>
  4018f4:	adrp	x22, 413000 <arg_flags>
  4018f8:	add	x1, x0, #0x48
  4018fc:	mov	x25, x0
  401900:	ldr	x2, [x0, #72]
  401904:	cbnz	x2, 401960 <main+0x580>
  401908:	ldr	x0, [x23, #56]
  40190c:	add	x2, x22, #0x50
  401910:	bl	4011b0 <root_hash_load@plt>
  401914:	mov	w19, w0
  401918:	tbz	w0, #31, 401960 <main+0x580>
  40191c:	mov	w0, #0x0                   	// #0
  401920:	bl	4013d0 <log_get_max_level_realm@plt>
  401924:	cmp	w0, #0x2
  401928:	b.le	401d60 <main+0x980>
  40192c:	ldr	x6, [x23, #56]
  401930:	adrp	x5, 402000 <_fini+0x7c>
  401934:	adrp	x4, 402000 <_fini+0x7c>
  401938:	adrp	x2, 401000 <_init-0x170>
  40193c:	add	x5, x5, #0x2de
  401940:	add	x4, x4, #0x4ba
  401944:	add	x2, x2, #0xfef
  401948:	mov	w1, w19
  40194c:	mov	w3, #0xb5                  	// #181
  401950:	mov	w0, #0x3                   	// #3
  401954:	bl	401300 <log_internal_realm@plt>
  401958:	mov	w19, w0
  40195c:	b	4016ec <main+0x30c>
  401960:	ldr	x0, [sp, #160]
  401964:	add	x5, sp, #0xb0
  401968:	ldr	w4, [x21]
  40196c:	ldr	x3, [x22, #80]
  401970:	ldr	x2, [x25, #72]
  401974:	ldr	x1, [x24, #56]
  401978:	ldr	w0, [x0]
  40197c:	bl	4013c0 <dissect_image_and_warn@plt>
  401980:	mov	w19, w0
  401984:	tbnz	w0, #31, 4016ec <main+0x30c>
  401988:	adrp	x0, 413000 <arg_flags>
  40198c:	ldr	w0, [x0, #52]
  401990:	cbz	w0, 4019ac <main+0x5cc>
  401994:	cmp	w0, #0x1
  401998:	b.eq	401cb8 <main+0x8d8>  // b.none
  40199c:	adrp	x4, 402000 <_fini+0x7c>
  4019a0:	mov	w3, #0x114                 	// #276
  4019a4:	add	x4, x4, #0x4ab
  4019a8:	b	4014c0 <main+0xe0>
  4019ac:	adrp	x22, 401000 <_init-0x170>
  4019b0:	adrp	x23, 401000 <_init-0x170>
  4019b4:	add	x22, x22, #0xfb1
  4019b8:	add	x23, x23, #0xfa8
  4019bc:	mov	x21, #0x0                   	// #0
  4019c0:	adrp	x24, 402000 <_fini+0x7c>
  4019c4:	ldr	x0, [sp, #176]
  4019c8:	lsl	x1, x21, #6
  4019cc:	add	x0, x0, #0x8
  4019d0:	add	x19, x0, x21, lsl #6
  4019d4:	ldrb	w0, [x0, x1]
  4019d8:	tbz	w0, #0, 401b20 <main+0x740>
  4019dc:	tst	x0, #0x2
  4019e0:	mov	w0, w21
  4019e4:	csel	x25, x23, x22, ne  // ne = any
  4019e8:	bl	401350 <partition_designator_to_string@plt>
  4019ec:	mov	x2, x0
  4019f0:	mov	x1, x25
  4019f4:	add	x0, x24, #0x307
  4019f8:	bl	401380 <printf@plt>
  4019fc:	ldp	x0, x1, [x19, #16]
  401a00:	orr	x0, x0, x1
  401a04:	cbz	x0, 401a78 <main+0x698>
  401a08:	ldrb	w0, [x19, #31]
  401a0c:	ldrb	w7, [x19, #22]
  401a10:	ldrb	w6, [x19, #21]
  401a14:	ldrb	w5, [x19, #20]
  401a18:	ldrb	w4, [x19, #19]
  401a1c:	ldrb	w3, [x19, #18]
  401a20:	ldrb	w2, [x19, #17]
  401a24:	ldrb	w1, [x19, #16]
  401a28:	str	w0, [sp, #64]
  401a2c:	ldrb	w0, [x19, #30]
  401a30:	str	w0, [sp, #56]
  401a34:	ldrb	w0, [x19, #29]
  401a38:	str	w0, [sp, #48]
  401a3c:	ldrb	w0, [x19, #28]
  401a40:	str	w0, [sp, #40]
  401a44:	ldrb	w0, [x19, #27]
  401a48:	str	w0, [sp, #32]
  401a4c:	ldrb	w0, [x19, #26]
  401a50:	str	w0, [sp, #24]
  401a54:	ldrb	w0, [x19, #25]
  401a58:	str	w0, [sp, #16]
  401a5c:	ldrb	w0, [x19, #24]
  401a60:	str	w0, [sp, #8]
  401a64:	ldrb	w0, [x19, #23]
  401a68:	str	w0, [sp]
  401a6c:	adrp	x0, 402000 <_fini+0x7c>
  401a70:	add	x0, x0, #0x31f
  401a74:	bl	401380 <printf@plt>
  401a78:	ldr	x1, [x19, #32]
  401a7c:	cbz	x1, 401a8c <main+0x6ac>
  401a80:	adrp	x0, 402000 <_fini+0x7c>
  401a84:	add	x0, x0, #0x368
  401a88:	bl	401380 <printf@plt>
  401a8c:	ldr	w0, [x19, #8]
  401a90:	cmn	w0, #0x1
  401a94:	b.eq	401aac <main+0x6cc>  // b.none
  401a98:	bl	4011c0 <architecture_to_string@plt>
  401a9c:	mov	x1, x0
  401aa0:	adrp	x0, 402000 <_fini+0x7c>
  401aa4:	add	x0, x0, #0x374
  401aa8:	bl	401380 <printf@plt>
  401aac:	cbz	x21, 401b64 <main+0x784>
  401ab0:	cmp	x21, #0x1
  401ab4:	b.ne	401af0 <main+0x710>  // b.any
  401ab8:	mov	w0, #0x8                   	// #8
  401abc:	ldr	x1, [sp, #176]
  401ac0:	sbfiz	x0, x0, #6, #32
  401ac4:	add	x0, x1, x0
  401ac8:	adrp	x1, 401000 <_init-0x170>
  401acc:	add	x1, x1, #0xfbb
  401ad0:	ldrb	w2, [x0, #8]
  401ad4:	adrp	x0, 401000 <_init-0x170>
  401ad8:	add	x0, x0, #0xfc0
  401adc:	tst	x2, #0x1
  401ae0:	csel	x1, x1, x0, ne  // ne = any
  401ae4:	adrp	x0, 402000 <_fini+0x7c>
  401ae8:	add	x0, x0, #0x37c
  401aec:	bl	401380 <printf@plt>
  401af0:	ldr	w1, [x19, #4]
  401af4:	tbnz	w1, #31, 401b04 <main+0x724>
  401af8:	adrp	x0, 402000 <_fini+0x7c>
  401afc:	add	x0, x0, #0x387
  401b00:	bl	401380 <printf@plt>
  401b04:	ldr	x1, [x19, #40]
  401b08:	cbz	x1, 401b18 <main+0x738>
  401b0c:	adrp	x0, 402000 <_fini+0x7c>
  401b10:	add	x0, x0, #0x399
  401b14:	bl	401380 <printf@plt>
  401b18:	mov	w0, #0xa                   	// #10
  401b1c:	bl	401210 <putchar@plt>
  401b20:	add	x21, x21, #0x1
  401b24:	cmp	x21, #0x9
  401b28:	b.ne	4019c4 <main+0x5e4>  // b.any
  401b2c:	ldr	x0, [sp, #176]
  401b30:	bl	4012b0 <dissected_image_acquire_metadata@plt>
  401b34:	mov	w19, w0
  401b38:	tbz	w0, #31, 401b6c <main+0x78c>
  401b3c:	mov	w0, #0x0                   	// #0
  401b40:	bl	4013d0 <log_get_max_level_realm@plt>
  401b44:	cmp	w0, #0x2
  401b48:	b.le	401d60 <main+0x980>
  401b4c:	adrp	x5, 402000 <_fini+0x7c>
  401b50:	adrp	x4, 402000 <_fini+0x7c>
  401b54:	add	x5, x5, #0x39f
  401b58:	add	x4, x4, #0x4ba
  401b5c:	mov	w3, #0xe4                  	// #228
  401b60:	b	40187c <main+0x49c>
  401b64:	mov	w0, #0x7                   	// #7
  401b68:	b	401abc <main+0x6dc>
  401b6c:	ldr	x0, [sp, #176]
  401b70:	ldr	x1, [x0, #584]
  401b74:	cbz	x1, 401b84 <main+0x7a4>
  401b78:	adrp	x0, 402000 <_fini+0x7c>
  401b7c:	add	x0, x0, #0x3c4
  401b80:	bl	401380 <printf@plt>
  401b84:	ldr	x0, [sp, #176]
  401b88:	ldr	x1, [x0, #592]
  401b8c:	ldr	x2, [x0, #600]
  401b90:	orr	x1, x1, x2
  401b94:	cbz	x1, 401c08 <main+0x828>
  401b98:	ldrb	w8, [x0, #607]
  401b9c:	ldrb	w7, [x0, #598]
  401ba0:	ldrb	w6, [x0, #597]
  401ba4:	ldrb	w5, [x0, #596]
  401ba8:	ldrb	w4, [x0, #595]
  401bac:	ldrb	w3, [x0, #594]
  401bb0:	ldrb	w2, [x0, #593]
  401bb4:	ldrb	w1, [x0, #592]
  401bb8:	str	w8, [sp, #64]
  401bbc:	ldrb	w8, [x0, #606]
  401bc0:	str	w8, [sp, #56]
  401bc4:	ldrb	w8, [x0, #605]
  401bc8:	str	w8, [sp, #48]
  401bcc:	ldrb	w8, [x0, #604]
  401bd0:	str	w8, [sp, #40]
  401bd4:	ldrb	w8, [x0, #603]
  401bd8:	str	w8, [sp, #32]
  401bdc:	ldrb	w8, [x0, #602]
  401be0:	str	w8, [sp, #24]
  401be4:	ldrb	w8, [x0, #601]
  401be8:	str	w8, [sp, #16]
  401bec:	ldrb	w8, [x0, #600]
  401bf0:	str	w8, [sp, #8]
  401bf4:	ldrb	w0, [x0, #599]
  401bf8:	str	w0, [sp]
  401bfc:	adrp	x0, 402000 <_fini+0x7c>
  401c00:	add	x0, x0, #0x3d4
  401c04:	bl	401380 <printf@plt>
  401c08:	ldr	x0, [sp, #176]
  401c0c:	ldr	x19, [x0, #608]
  401c10:	cbnz	x19, 401c6c <main+0x88c>
  401c14:	ldr	x0, [sp, #176]
  401c18:	ldr	x19, [x0, #616]
  401c1c:	cbz	x19, 40157c <main+0x19c>
  401c20:	ldr	x0, [x19]
  401c24:	cbz	x0, 40157c <main+0x19c>
  401c28:	adrp	x21, 401000 <_init-0x170>
  401c2c:	adrp	x22, 401000 <_init-0x170>
  401c30:	add	x21, x21, #0xfd4
  401c34:	add	x22, x22, #0xfe0
  401c38:	adrp	x23, 402000 <_fini+0x7c>
  401c3c:	ldr	x2, [x19]
  401c40:	ldr	x0, [sp, #176]
  401c44:	cbz	x2, 40157c <main+0x19c>
  401c48:	ldr	x3, [x19, #8]
  401c4c:	cbz	x3, 40157c <main+0x19c>
  401c50:	ldr	x0, [x0, #616]
  401c54:	cmp	x0, x19
  401c58:	add	x0, x23, #0x422
  401c5c:	csel	x1, x22, x21, eq  // eq = none
  401c60:	add	x19, x19, #0x10
  401c64:	bl	401380 <printf@plt>
  401c68:	b	401c3c <main+0x85c>
  401c6c:	ldr	x0, [x19]
  401c70:	cbz	x0, 401c14 <main+0x834>
  401c74:	adrp	x21, 401000 <_init-0x170>
  401c78:	adrp	x22, 401000 <_init-0x170>
  401c7c:	add	x21, x21, #0xfd4
  401c80:	add	x22, x22, #0xfc8
  401c84:	adrp	x23, 402000 <_fini+0x7c>
  401c88:	ldr	x2, [x19]
  401c8c:	ldr	x0, [sp, #176]
  401c90:	cbz	x2, 401c14 <main+0x834>
  401c94:	ldr	x3, [x19, #8]
  401c98:	cbz	x3, 401c14 <main+0x834>
  401c9c:	ldr	x0, [x0, #608]
  401ca0:	cmp	x19, x0
  401ca4:	add	x0, x23, #0x422
  401ca8:	csel	x1, x22, x21, eq  // eq = none
  401cac:	add	x19, x19, #0x10
  401cb0:	bl	401380 <printf@plt>
  401cb4:	b	401c88 <main+0x8a8>
  401cb8:	ldr	w4, [x21]
  401cbc:	add	x5, sp, #0xa8
  401cc0:	ldr	x3, [x22, #80]
  401cc4:	mov	x1, #0x0                   	// #0
  401cc8:	ldr	x2, [x25, #72]
  401ccc:	ldr	x0, [sp, #176]
  401cd0:	bl	401270 <dissected_image_decrypt_interactively@plt>
  401cd4:	mov	w19, w0
  401cd8:	tbnz	w0, #31, 4016ec <main+0x30c>
  401cdc:	adrp	x0, 413000 <arg_flags>
  401ce0:	ldr	w3, [x21]
  401ce4:	mov	w2, #0xffffffff            	// #-1
  401ce8:	ldr	x1, [x0, #64]
  401cec:	ldr	x0, [sp, #176]
  401cf0:	bl	401330 <dissected_image_mount@plt>
  401cf4:	mov	w19, w0
  401cf8:	tbz	w0, #31, 401d24 <main+0x944>
  401cfc:	mov	w0, #0x0                   	// #0
  401d00:	bl	4013d0 <log_get_max_level_realm@plt>
  401d04:	cmp	w0, #0x2
  401d08:	b.le	401d60 <main+0x980>
  401d0c:	adrp	x5, 402000 <_fini+0x7c>
  401d10:	adrp	x4, 402000 <_fini+0x7c>
  401d14:	add	x5, x5, #0x42c
  401d18:	add	x4, x4, #0x4ba
  401d1c:	mov	w3, #0x108                 	// #264
  401d20:	b	40187c <main+0x49c>
  401d24:	ldr	x0, [sp, #168]
  401d28:	cbz	x0, 401d70 <main+0x990>
  401d2c:	bl	4013a0 <decrypted_image_relinquish@plt>
  401d30:	mov	w19, w0
  401d34:	tbz	w0, #31, 401d70 <main+0x990>
  401d38:	mov	w0, #0x0                   	// #0
  401d3c:	bl	4013d0 <log_get_max_level_realm@plt>
  401d40:	cmp	w0, #0x2
  401d44:	b.le	401d60 <main+0x980>
  401d48:	adrp	x5, 402000 <_fini+0x7c>
  401d4c:	adrp	x4, 402000 <_fini+0x7c>
  401d50:	add	x5, x5, #0x446
  401d54:	add	x4, x4, #0x4ba
  401d58:	mov	w3, #0x10d                 	// #269
  401d5c:	b	40187c <main+0x49c>
  401d60:	neg	w19, w19
  401d64:	and	w0, w19, #0xff
  401d68:	neg	w19, w0
  401d6c:	b	4016ec <main+0x30c>
  401d70:	ldr	x0, [sp, #160]
  401d74:	bl	401230 <loop_device_relinquish@plt>
  401d78:	b	40157c <main+0x19c>
  401d7c:	add	x0, x0, #0x7
  401d80:	adrp	x22, 402000 <_fini+0x7c>
  401d84:	and	x0, x0, #0xfffffffffffffff8
  401d88:	ldr	x1, [x22, #1176]
  401d8c:	cmp	x0, x1
  401d90:	b.cs	40172c <main+0x34c>  // b.hs, b.nlast
  401d94:	mov	x21, x0
  401d98:	ldr	x1, [x0, #8]
  401d9c:	ldr	x0, [x21], #23
  401da0:	blr	x1
  401da4:	and	x0, x21, #0xfffffffffffffff8
  401da8:	b	401d88 <main+0x9a8>
  401dac:	ldp	x29, x30, [sp, #80]
  401db0:	ldp	x19, x20, [sp, #96]
  401db4:	ldp	x21, x22, [sp, #112]
  401db8:	ldp	x23, x24, [sp, #128]
  401dbc:	ldp	x25, x26, [sp, #144]
  401dc0:	add	sp, sp, #0xd0
  401dc4:	ret

0000000000401dc8 <_start>:
  401dc8:	mov	x29, #0x0                   	// #0
  401dcc:	mov	x30, #0x0                   	// #0
  401dd0:	mov	x5, x0
  401dd4:	ldr	x1, [sp]
  401dd8:	add	x2, sp, #0x8
  401ddc:	mov	x6, sp
  401de0:	movz	x0, #0x0, lsl #48
  401de4:	movk	x0, #0x0, lsl #32
  401de8:	movk	x0, #0x40, lsl #16
  401dec:	movk	x0, #0x13e0
  401df0:	movz	x3, #0x0, lsl #48
  401df4:	movk	x3, #0x0, lsl #32
  401df8:	movk	x3, #0x40, lsl #16
  401dfc:	movk	x3, #0x1f00
  401e00:	movz	x4, #0x0, lsl #48
  401e04:	movk	x4, #0x0, lsl #32
  401e08:	movk	x4, #0x40, lsl #16
  401e0c:	movk	x4, #0x1f80
  401e10:	bl	4011d0 <__libc_start_main@plt>
  401e14:	bl	401290 <abort@plt>

0000000000401e18 <call_weak_fn>:
  401e18:	adrp	x0, 412000 <__FRAME_END__+0xf8d8>
  401e1c:	ldr	x0, [x0, #4088]
  401e20:	cbz	x0, 401e28 <call_weak_fn+0x10>
  401e24:	b	4011e0 <__gmon_start__@plt>
  401e28:	ret

0000000000401e2c <deregister_tm_clones>:
  401e2c:	adrp	x0, 413000 <arg_flags>
  401e30:	add	x1, x0, #0x8
  401e34:	adrp	x0, 413000 <arg_flags>
  401e38:	add	x0, x0, #0x8
  401e3c:	cmp	x1, x0
  401e40:	b.eq	401e6c <deregister_tm_clones+0x40>  // b.none
  401e44:	sub	sp, sp, #0x10
  401e48:	adrp	x1, 401000 <_init-0x170>
  401e4c:	ldr	x1, [x1, #3992]
  401e50:	str	x1, [sp, #8]
  401e54:	cbz	x1, 401e64 <deregister_tm_clones+0x38>
  401e58:	mov	x16, x1
  401e5c:	add	sp, sp, #0x10
  401e60:	br	x16
  401e64:	add	sp, sp, #0x10
  401e68:	ret
  401e6c:	ret

0000000000401e70 <register_tm_clones>:
  401e70:	adrp	x0, 413000 <arg_flags>
  401e74:	add	x1, x0, #0x8
  401e78:	adrp	x0, 413000 <arg_flags>
  401e7c:	add	x0, x0, #0x8
  401e80:	sub	x1, x1, x0
  401e84:	mov	x2, #0x2                   	// #2
  401e88:	asr	x1, x1, #3
  401e8c:	sdiv	x1, x1, x2
  401e90:	cbz	x1, 401ebc <register_tm_clones+0x4c>
  401e94:	sub	sp, sp, #0x10
  401e98:	adrp	x2, 401000 <_init-0x170>
  401e9c:	ldr	x2, [x2, #4000]
  401ea0:	str	x2, [sp, #8]
  401ea4:	cbz	x2, 401eb4 <register_tm_clones+0x44>
  401ea8:	mov	x16, x2
  401eac:	add	sp, sp, #0x10
  401eb0:	br	x16
  401eb4:	add	sp, sp, #0x10
  401eb8:	ret
  401ebc:	ret

0000000000401ec0 <__do_global_dtors_aux>:
  401ec0:	stp	x29, x30, [sp, #-32]!
  401ec4:	mov	x29, sp
  401ec8:	str	x19, [sp, #16]
  401ecc:	adrp	x19, 413000 <arg_flags>
  401ed0:	ldrb	w0, [x19, #48]
  401ed4:	cbnz	w0, 401ee4 <__do_global_dtors_aux+0x24>
  401ed8:	bl	401e2c <deregister_tm_clones>
  401edc:	mov	w0, #0x1                   	// #1
  401ee0:	strb	w0, [x19, #48]
  401ee4:	ldr	x19, [sp, #16]
  401ee8:	ldp	x29, x30, [sp], #32
  401eec:	ret

0000000000401ef0 <frame_dummy>:
  401ef0:	b	401e70 <register_tm_clones>

0000000000401ef4 <__unique_prefix_static_destructor_wrapper0>:
  401ef4:	ldr	x0, [x0]
  401ef8:	b	401360 <free@plt>
  401efc:	nop

0000000000401f00 <__libc_csu_init>:
  401f00:	stp	x29, x30, [sp, #-64]!
  401f04:	mov	x29, sp
  401f08:	stp	x19, x20, [sp, #16]
  401f0c:	adrp	x20, 412000 <__FRAME_END__+0xf8d8>
  401f10:	add	x20, x20, #0xc80
  401f14:	stp	x21, x22, [sp, #32]
  401f18:	adrp	x21, 412000 <__FRAME_END__+0xf8d8>
  401f1c:	add	x21, x21, #0xc78
  401f20:	sub	x20, x20, x21
  401f24:	mov	w22, w0
  401f28:	stp	x23, x24, [sp, #48]
  401f2c:	mov	x23, x1
  401f30:	mov	x24, x2
  401f34:	bl	401170 <_init>
  401f38:	cmp	xzr, x20, asr #3
  401f3c:	b.eq	401f68 <__libc_csu_init+0x68>  // b.none
  401f40:	asr	x20, x20, #3
  401f44:	mov	x19, #0x0                   	// #0
  401f48:	ldr	x3, [x21, x19, lsl #3]
  401f4c:	mov	x2, x24
  401f50:	add	x19, x19, #0x1
  401f54:	mov	x1, x23
  401f58:	mov	w0, w22
  401f5c:	blr	x3
  401f60:	cmp	x20, x19
  401f64:	b.ne	401f48 <__libc_csu_init+0x48>  // b.any
  401f68:	ldp	x19, x20, [sp, #16]
  401f6c:	ldp	x21, x22, [sp, #32]
  401f70:	ldp	x23, x24, [sp, #48]
  401f74:	ldp	x29, x30, [sp], #64
  401f78:	ret
  401f7c:	nop

0000000000401f80 <__libc_csu_fini>:
  401f80:	ret

Disassembly of section .fini:

0000000000401f84 <_fini>:
  401f84:	stp	x29, x30, [sp, #-16]!
  401f88:	mov	x29, sp
  401f8c:	ldp	x29, x30, [sp], #16
  401f90:	ret
