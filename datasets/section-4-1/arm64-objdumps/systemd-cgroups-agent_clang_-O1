
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-cgroups-agent_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210a18 <_start>:
  210a18:	mov	x29, #0x0                   	// #0
  210a1c:	mov	x30, #0x0                   	// #0
  210a20:	mov	x5, x0
  210a24:	ldr	x1, [sp]
  210a28:	add	x2, sp, #0x8
  210a2c:	mov	x6, sp
  210a30:	movz	x0, #0x0, lsl #48
  210a34:	movk	x0, #0x0, lsl #32
  210a38:	movk	x0, #0x21, lsl #16
  210a3c:	movk	x0, #0xb68
  210a40:	movz	x3, #0x0, lsl #48
  210a44:	movk	x3, #0x0, lsl #32
  210a48:	movk	x3, #0x21, lsl #16
  210a4c:	movk	x3, #0xd28
  210a50:	movz	x4, #0x0, lsl #48
  210a54:	movk	x4, #0x0, lsl #32
  210a58:	movk	x4, #0x21, lsl #16
  210a5c:	movk	x4, #0xda8
  210a60:	bl	210df0 <__libc_start_main@plt>
  210a64:	bl	210e00 <abort@plt>

0000000000210a68 <call_weak_fn>:
  210a68:	adrp	x0, 221000 <_DYNAMIC+0x140>
  210a6c:	ldr	x0, [x0, #144]
  210a70:	cbz	x0, 210a78 <call_weak_fn+0x10>
  210a74:	b	210e10 <__gmon_start__@plt>
  210a78:	ret

0000000000210a7c <deregister_tm_clones>:
  210a7c:	adrp	x0, 231000 <_DYNAMIC+0x10140>
  210a80:	add	x0, x0, #0x110
  210a84:	adrp	x1, 231000 <_DYNAMIC+0x10140>
  210a88:	add	x1, x1, #0x110
  210a8c:	cmp	x0, x1
  210a90:	b.eq	210ac4 <deregister_tm_clones+0x48>  // b.none
  210a94:	stp	x29, x30, [sp, #-32]!
  210a98:	mov	x29, sp
  210a9c:	adrp	x0, 200000 <main.sa-0x7b8>
  210aa0:	ldr	x0, [x0, #1960]
  210aa4:	str	x0, [sp, #24]
  210aa8:	mov	x1, x0
  210aac:	cbz	x1, 210abc <deregister_tm_clones+0x40>
  210ab0:	adrp	x0, 231000 <_DYNAMIC+0x10140>
  210ab4:	add	x0, x0, #0x110
  210ab8:	blr	x1
  210abc:	ldp	x29, x30, [sp], #32
  210ac0:	ret
  210ac4:	ret

0000000000210ac8 <register_tm_clones>:
  210ac8:	adrp	x0, 231000 <_DYNAMIC+0x10140>
  210acc:	add	x0, x0, #0x110
  210ad0:	adrp	x1, 231000 <_DYNAMIC+0x10140>
  210ad4:	add	x1, x1, #0x110
  210ad8:	sub	x0, x0, x1
  210adc:	lsr	x1, x0, #63
  210ae0:	add	x0, x1, x0, asr #3
  210ae4:	cmp	xzr, x0, asr #1
  210ae8:	b.eq	210b20 <register_tm_clones+0x58>  // b.none
  210aec:	stp	x29, x30, [sp, #-32]!
  210af0:	mov	x29, sp
  210af4:	asr	x1, x0, #1
  210af8:	adrp	x0, 200000 <main.sa-0x7b8>
  210afc:	ldr	x0, [x0, #1968]
  210b00:	str	x0, [sp, #24]
  210b04:	mov	x2, x0
  210b08:	cbz	x2, 210b18 <register_tm_clones+0x50>
  210b0c:	adrp	x0, 231000 <_DYNAMIC+0x10140>
  210b10:	add	x0, x0, #0x110
  210b14:	blr	x2
  210b18:	ldp	x29, x30, [sp], #32
  210b1c:	ret
  210b20:	ret

0000000000210b24 <__do_global_dtors_aux>:
  210b24:	adrp	x0, 231000 <_DYNAMIC+0x10140>
  210b28:	ldrb	w0, [x0, #272]
  210b2c:	cbnz	w0, 210b50 <__do_global_dtors_aux+0x2c>
  210b30:	stp	x29, x30, [sp, #-16]!
  210b34:	mov	x29, sp
  210b38:	bl	210a7c <deregister_tm_clones>
  210b3c:	adrp	x0, 231000 <_DYNAMIC+0x10140>
  210b40:	mov	w1, #0x1                   	// #1
  210b44:	strb	w1, [x0, #272]
  210b48:	ldp	x29, x30, [sp], #16
  210b4c:	ret
  210b50:	ret

0000000000210b54 <frame_dummy>:
  210b54:	stp	x29, x30, [sp, #-16]!
  210b58:	mov	x29, sp
  210b5c:	bl	210ac8 <register_tm_clones>
  210b60:	ldp	x29, x30, [sp], #16
  210b64:	ret

0000000000210b68 <main>:
  210b68:	sub	sp, sp, #0x40
  210b6c:	stp	x29, x30, [sp, #16]
  210b70:	add	x29, sp, #0x10
  210b74:	mov	w8, #0xffffffff            	// #-1
  210b78:	cmp	w0, #0x2
  210b7c:	stp	x22, x21, [sp, #32]
  210b80:	stp	x20, x19, [sp, #48]
  210b84:	stur	w8, [x29, #-4]
  210b88:	b.ne	210c08 <main+0xa0>  // b.any
  210b8c:	mov	x19, x1
  210b90:	bl	210e20 <log_setup_service@plt>
  210b94:	mov	w1, #0x2                   	// #2
  210b98:	mov	w0, #0x1                   	// #1
  210b9c:	movk	w1, #0x8, lsl #16
  210ba0:	mov	w2, wzr
  210ba4:	bl	210e30 <socket@plt>
  210ba8:	stur	w0, [x29, #-4]
  210bac:	tbnz	w0, #31, 210c40 <main+0xd8>
  210bb0:	ldr	x21, [x19, #8]
  210bb4:	mov	w20, w0
  210bb8:	mov	x0, x21
  210bbc:	bl	210e40 <strlen@plt>
  210bc0:	adrp	x22, 200000 <main.sa-0x7b8>
  210bc4:	add	x22, x22, #0x7b8
  210bc8:	mov	x19, x0
  210bcc:	add	x0, x22, #0x2
  210bd0:	mov	w1, #0x6c                  	// #108
  210bd4:	bl	210e50 <strnlen@plt>
  210bd8:	add	w5, w0, #0x3
  210bdc:	mov	w0, w20
  210be0:	mov	x1, x21
  210be4:	mov	x2, x19
  210be8:	mov	w3, wzr
  210bec:	mov	x4, x22
  210bf0:	bl	210e60 <sendto@plt>
  210bf4:	tbnz	x0, #63, 210c7c <main+0x114>
  210bf8:	cmp	x0, x19
  210bfc:	b.ne	210cdc <main+0x174>  // b.any
  210c00:	mov	w19, wzr
  210c04:	b	210cbc <main+0x154>
  210c08:	mov	w0, wzr
  210c0c:	bl	210e70 <log_get_max_level_realm@plt>
  210c10:	cmp	w0, #0x3
  210c14:	b.lt	210cb8 <main+0x150>  // b.tstop
  210c18:	adrp	x2, 200000 <main.sa-0x7b8>
  210c1c:	adrp	x4, 200000 <main.sa-0x7b8>
  210c20:	adrp	x5, 200000 <main.sa-0x7b8>
  210c24:	add	x2, x2, #0x83b
  210c28:	add	x4, x4, #0x8bb
  210c2c:	add	x5, x5, #0x8c0
  210c30:	mov	w0, #0x3                   	// #3
  210c34:	mov	w3, #0x15                  	// #21
  210c38:	mov	w1, wzr
  210c3c:	b	210cb4 <main+0x14c>
  210c40:	mov	w0, wzr
  210c44:	bl	210e70 <log_get_max_level_realm@plt>
  210c48:	cmp	w0, #0x7
  210c4c:	b.lt	210cb8 <main+0x150>  // b.tstop
  210c50:	bl	210e80 <__errno_location@plt>
  210c54:	ldr	w1, [x0]
  210c58:	adrp	x2, 200000 <main.sa-0x7b8>
  210c5c:	adrp	x4, 200000 <main.sa-0x7b8>
  210c60:	adrp	x5, 200000 <main.sa-0x7b8>
  210c64:	add	x2, x2, #0x83b
  210c68:	add	x4, x4, #0x8bb
  210c6c:	add	x5, x5, #0x89d
  210c70:	mov	w0, #0x7                   	// #7
  210c74:	mov	w3, #0x1d                  	// #29
  210c78:	b	210cb4 <main+0x14c>
  210c7c:	mov	w0, wzr
  210c80:	bl	210e70 <log_get_max_level_realm@plt>
  210c84:	cmp	w0, #0x7
  210c88:	b.lt	210cb8 <main+0x150>  // b.tstop
  210c8c:	bl	210e80 <__errno_location@plt>
  210c90:	ldr	w1, [x0]
  210c94:	adrp	x2, 200000 <main.sa-0x7b8>
  210c98:	adrp	x4, 200000 <main.sa-0x7b8>
  210c9c:	adrp	x5, 200000 <main.sa-0x7b8>
  210ca0:	add	x2, x2, #0x83b
  210ca4:	add	x4, x4, #0x8bb
  210ca8:	add	x5, x5, #0x85d
  210cac:	mov	w0, #0x7                   	// #7
  210cb0:	mov	w3, #0x25                  	// #37
  210cb4:	bl	210e90 <log_internal_realm@plt>
  210cb8:	mov	w19, #0x1                   	// #1
  210cbc:	sub	x0, x29, #0x4
  210cc0:	bl	210d10 <closep>
  210cc4:	mov	w0, w19
  210cc8:	ldp	x20, x19, [sp, #48]
  210ccc:	ldp	x22, x21, [sp, #32]
  210cd0:	ldp	x29, x30, [sp, #16]
  210cd4:	add	sp, sp, #0x40
  210cd8:	ret
  210cdc:	mov	w0, wzr
  210ce0:	bl	210e70 <log_get_max_level_realm@plt>
  210ce4:	cmp	w0, #0x7
  210ce8:	b.lt	210cb8 <main+0x150>  // b.tstop
  210cec:	adrp	x2, 200000 <main.sa-0x7b8>
  210cf0:	adrp	x4, 200000 <main.sa-0x7b8>
  210cf4:	adrp	x5, 200000 <main.sa-0x7b8>
  210cf8:	add	x2, x2, #0x83b
  210cfc:	add	x4, x4, #0x8bb
  210d00:	add	x5, x5, #0x886
  210d04:	mov	w0, #0x7                   	// #7
  210d08:	mov	w3, #0x2a                  	// #42
  210d0c:	b	210c38 <main+0xd0>

0000000000210d10 <closep>:
  210d10:	stp	x29, x30, [sp, #-16]!
  210d14:	ldr	w0, [x0]
  210d18:	mov	x29, sp
  210d1c:	bl	210ea0 <safe_close@plt>
  210d20:	ldp	x29, x30, [sp], #16
  210d24:	ret

0000000000210d28 <__libc_csu_init>:
  210d28:	stp	x29, x30, [sp, #-64]!
  210d2c:	mov	x29, sp
  210d30:	stp	x19, x20, [sp, #16]
  210d34:	adrp	x20, 220000 <safe_close@plt+0xf160>
  210d38:	add	x20, x20, #0xec0
  210d3c:	stp	x21, x22, [sp, #32]
  210d40:	adrp	x21, 220000 <safe_close@plt+0xf160>
  210d44:	add	x21, x21, #0xeb8
  210d48:	sub	x20, x20, x21
  210d4c:	mov	w22, w0
  210d50:	stp	x23, x24, [sp, #48]
  210d54:	mov	x23, x1
  210d58:	mov	x24, x2
  210d5c:	bl	210dac <_init>
  210d60:	cmp	xzr, x20, asr #3
  210d64:	b.eq	210d90 <__libc_csu_init+0x68>  // b.none
  210d68:	asr	x20, x20, #3
  210d6c:	mov	x19, #0x0                   	// #0
  210d70:	ldr	x3, [x21, x19, lsl #3]
  210d74:	mov	x2, x24
  210d78:	add	x19, x19, #0x1
  210d7c:	mov	x1, x23
  210d80:	mov	w0, w22
  210d84:	blr	x3
  210d88:	cmp	x20, x19
  210d8c:	b.ne	210d70 <__libc_csu_init+0x48>  // b.any
  210d90:	ldp	x19, x20, [sp, #16]
  210d94:	ldp	x21, x22, [sp, #32]
  210d98:	ldp	x23, x24, [sp, #48]
  210d9c:	ldp	x29, x30, [sp], #64
  210da0:	ret
  210da4:	nop

0000000000210da8 <__libc_csu_fini>:
  210da8:	ret

Disassembly of section .init:

0000000000210dac <_init>:
  210dac:	stp	x29, x30, [sp, #-16]!
  210db0:	mov	x29, sp
  210db4:	bl	210a68 <call_weak_fn>
  210db8:	ldp	x29, x30, [sp], #16
  210dbc:	ret

Disassembly of section .fini:

0000000000210dc0 <_fini>:
  210dc0:	stp	x29, x30, [sp, #-16]!
  210dc4:	mov	x29, sp
  210dc8:	ldp	x29, x30, [sp], #16
  210dcc:	ret

Disassembly of section .plt:

0000000000210dd0 <__libc_start_main@plt-0x20>:
  210dd0:	stp	x16, x30, [sp, #-16]!
  210dd4:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210dd8:	ldr	x17, [x16, #168]
  210ddc:	add	x16, x16, #0xa8
  210de0:	br	x17
  210de4:	nop
  210de8:	nop
  210dec:	nop

0000000000210df0 <__libc_start_main@plt>:
  210df0:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210df4:	ldr	x17, [x16, #176]
  210df8:	add	x16, x16, #0xb0
  210dfc:	br	x17

0000000000210e00 <abort@plt>:
  210e00:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e04:	ldr	x17, [x16, #184]
  210e08:	add	x16, x16, #0xb8
  210e0c:	br	x17

0000000000210e10 <__gmon_start__@plt>:
  210e10:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e14:	ldr	x17, [x16, #192]
  210e18:	add	x16, x16, #0xc0
  210e1c:	br	x17

0000000000210e20 <log_setup_service@plt>:
  210e20:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e24:	ldr	x17, [x16, #200]
  210e28:	add	x16, x16, #0xc8
  210e2c:	br	x17

0000000000210e30 <socket@plt>:
  210e30:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e34:	ldr	x17, [x16, #208]
  210e38:	add	x16, x16, #0xd0
  210e3c:	br	x17

0000000000210e40 <strlen@plt>:
  210e40:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e44:	ldr	x17, [x16, #216]
  210e48:	add	x16, x16, #0xd8
  210e4c:	br	x17

0000000000210e50 <strnlen@plt>:
  210e50:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e54:	ldr	x17, [x16, #224]
  210e58:	add	x16, x16, #0xe0
  210e5c:	br	x17

0000000000210e60 <sendto@plt>:
  210e60:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e64:	ldr	x17, [x16, #232]
  210e68:	add	x16, x16, #0xe8
  210e6c:	br	x17

0000000000210e70 <log_get_max_level_realm@plt>:
  210e70:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e74:	ldr	x17, [x16, #240]
  210e78:	add	x16, x16, #0xf0
  210e7c:	br	x17

0000000000210e80 <__errno_location@plt>:
  210e80:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e84:	ldr	x17, [x16, #248]
  210e88:	add	x16, x16, #0xf8
  210e8c:	br	x17

0000000000210e90 <log_internal_realm@plt>:
  210e90:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210e94:	ldr	x17, [x16, #256]
  210e98:	add	x16, x16, #0x100
  210e9c:	br	x17

0000000000210ea0 <safe_close@plt>:
  210ea0:	adrp	x16, 221000 <_DYNAMIC+0x140>
  210ea4:	ldr	x17, [x16, #264]
  210ea8:	add	x16, x16, #0x108
  210eac:	br	x17
