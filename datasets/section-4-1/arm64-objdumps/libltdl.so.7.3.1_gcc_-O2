
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libltdl.so.7.3.1_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000020d0 <.init>:
    20d0:	stp	x29, x30, [sp, #-16]!
    20d4:	mov	x29, sp
    20d8:	bl	2570 <lt_dlloader_find@plt+0x10>
    20dc:	ldp	x29, x30, [sp], #16
    20e0:	ret

Disassembly of section .plt:

00000000000020f0 <lt_dlinterface_free@plt-0x20>:
    20f0:	stp	x16, x30, [sp, #-16]!
    20f4:	adrp	x16, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    20f8:	ldr	x17, [x16, #4088]
    20fc:	add	x16, x16, #0xff8
    2100:	br	x17
    2104:	nop
    2108:	nop
    210c:	nop

0000000000002110 <lt_dlinterface_free@plt>:
    2110:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2114:	ldr	x17, [x16]
    2118:	add	x16, x16, #0x0
    211c:	br	x17

0000000000002120 <memcpy@plt>:
    2120:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2124:	ldr	x17, [x16, #8]
    2128:	add	x16, x16, #0x8
    212c:	br	x17

0000000000002130 <lt_dlclose@plt>:
    2130:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2134:	ldr	x17, [x16, #16]
    2138:	add	x16, x16, #0x10
    213c:	br	x17

0000000000002140 <lt_dlloader_get@plt>:
    2140:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2144:	ldr	x17, [x16, #24]
    2148:	add	x16, x16, #0x18
    214c:	br	x17

0000000000002150 <strlen@plt>:
    2150:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2154:	ldr	x17, [x16, #32]
    2158:	add	x16, x16, #0x20
    215c:	br	x17

0000000000002160 <lt__slist_box@plt>:
    2160:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2164:	ldr	x17, [x16, #40]
    2168:	add	x16, x16, #0x28
    216c:	br	x17

0000000000002170 <exit@plt>:
    2170:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2174:	ldr	x17, [x16, #48]
    2178:	add	x16, x16, #0x30
    217c:	br	x17

0000000000002180 <lt__strdup@plt>:
    2180:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2184:	ldr	x17, [x16, #56]
    2188:	add	x16, x16, #0x38
    218c:	br	x17

0000000000002190 <lt__get_last_error@plt>:
    2190:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2194:	ldr	x17, [x16, #64]
    2198:	add	x16, x16, #0x40
    219c:	br	x17

00000000000021a0 <__cxa_finalize@plt>:
    21a0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    21a4:	ldr	x17, [x16, #72]
    21a8:	add	x16, x16, #0x48
    21ac:	br	x17

00000000000021b0 <sprintf@plt>:
    21b0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    21b4:	ldr	x17, [x16, #80]
    21b8:	add	x16, x16, #0x50
    21bc:	br	x17

00000000000021c0 <opendir@plt>:
    21c0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    21c4:	ldr	x17, [x16, #88]
    21c8:	add	x16, x16, #0x58
    21cc:	br	x17

00000000000021d0 <dlclose@plt>:
    21d0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    21d4:	ldr	x17, [x16, #96]
    21d8:	add	x16, x16, #0x60
    21dc:	br	x17

00000000000021e0 <dlopen@plt>:
    21e0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    21e4:	ldr	x17, [x16, #104]
    21e8:	add	x16, x16, #0x68
    21ec:	br	x17

00000000000021f0 <lt_dladvise_init@plt>:
    21f0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    21f4:	ldr	x17, [x16, #112]
    21f8:	add	x16, x16, #0x70
    21fc:	br	x17

0000000000002200 <stpcpy@plt>:
    2200:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2204:	ldr	x17, [x16, #120]
    2208:	add	x16, x16, #0x78
    220c:	br	x17

0000000000002210 <fclose@plt>:
    2210:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2214:	ldr	x17, [x16, #128]
    2218:	add	x16, x16, #0x80
    221c:	br	x17

0000000000002220 <fopen@plt>:
    2220:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2224:	ldr	x17, [x16, #136]
    2228:	add	x16, x16, #0x88
    222c:	br	x17

0000000000002230 <lt_dlloader_next@plt>:
    2230:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2234:	ldr	x17, [x16, #144]
    2238:	add	x16, x16, #0x90
    223c:	br	x17

0000000000002240 <malloc@plt>:
    2240:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2244:	ldr	x17, [x16, #152]
    2248:	add	x16, x16, #0x98
    224c:	br	x17

0000000000002250 <dlerror@plt>:
    2250:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2254:	ldr	x17, [x16, #160]
    2258:	add	x16, x16, #0xa0
    225c:	br	x17

0000000000002260 <dlsym@plt>:
    2260:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2264:	ldr	x17, [x16, #168]
    2268:	add	x16, x16, #0xa8
    226c:	br	x17

0000000000002270 <lt__slist_remove@plt>:
    2270:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2274:	ldr	x17, [x16, #176]
    2278:	add	x16, x16, #0xb0
    227c:	br	x17

0000000000002280 <strncmp@plt>:
    2280:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2284:	ldr	x17, [x16, #184]
    2288:	add	x16, x16, #0xb8
    228c:	br	x17

0000000000002290 <memset@plt>:
    2290:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2294:	ldr	x17, [x16, #192]
    2298:	add	x16, x16, #0xc0
    229c:	br	x17

00000000000022a0 <lt__error_string@plt>:
    22a0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    22a4:	ldr	x17, [x16, #200]
    22a8:	add	x16, x16, #0xc8
    22ac:	br	x17

00000000000022b0 <lt_dladvise_ext@plt>:
    22b0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    22b4:	ldr	x17, [x16, #208]
    22b8:	add	x16, x16, #0xd0
    22bc:	br	x17

00000000000022c0 <lt_dladvise_destroy@plt>:
    22c0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    22c4:	ldr	x17, [x16, #216]
    22c8:	add	x16, x16, #0xd8
    22cc:	br	x17

00000000000022d0 <lt_dlpreload_open@plt>:
    22d0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    22d4:	ldr	x17, [x16, #224]
    22d8:	add	x16, x16, #0xe0
    22dc:	br	x17

00000000000022e0 <lt__slist_find@plt>:
    22e0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    22e4:	ldr	x17, [x16, #232]
    22e8:	add	x16, x16, #0xe8
    22ec:	br	x17

00000000000022f0 <argz_stringify@plt>:
    22f0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    22f4:	ldr	x17, [x16, #240]
    22f8:	add	x16, x16, #0xf0
    22fc:	br	x17

0000000000002300 <readdir@plt>:
    2300:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2304:	ldr	x17, [x16, #248]
    2308:	add	x16, x16, #0xf8
    230c:	br	x17

0000000000002310 <realloc@plt>:
    2310:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2314:	ldr	x17, [x16, #256]
    2318:	add	x16, x16, #0x100
    231c:	br	x17

0000000000002320 <argz_insert@plt>:
    2320:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2324:	ldr	x17, [x16, #264]
    2328:	add	x16, x16, #0x108
    232c:	br	x17

0000000000002330 <closedir@plt>:
    2330:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2334:	ldr	x17, [x16, #272]
    2338:	add	x16, x16, #0x110
    233c:	br	x17

0000000000002340 <strrchr@plt>:
    2340:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2344:	ldr	x17, [x16, #280]
    2348:	add	x16, x16, #0x118
    234c:	br	x17

0000000000002350 <lt__slist_concat@plt>:
    2350:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2354:	ldr	x17, [x16, #288]
    2358:	add	x16, x16, #0x120
    235c:	br	x17

0000000000002360 <__gmon_start__@plt>:
    2360:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2364:	ldr	x17, [x16, #296]
    2368:	add	x16, x16, #0x128
    236c:	br	x17

0000000000002370 <lt__malloc@plt>:
    2370:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2374:	ldr	x17, [x16, #304]
    2378:	add	x16, x16, #0x130
    237c:	br	x17

0000000000002380 <lt_strlcpy@plt>:
    2380:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2384:	ldr	x17, [x16, #312]
    2388:	add	x16, x16, #0x138
    238c:	br	x17

0000000000002390 <argz_append@plt>:
    2390:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2394:	ldr	x17, [x16, #320]
    2398:	add	x16, x16, #0x140
    239c:	br	x17

00000000000023a0 <lt_dlisresident@plt>:
    23a0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    23a4:	ldr	x17, [x16, #328]
    23a8:	add	x16, x16, #0x148
    23ac:	br	x17

00000000000023b0 <lt_dlopen@plt>:
    23b0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    23b4:	ldr	x17, [x16, #336]
    23b8:	add	x16, x16, #0x150
    23bc:	br	x17

00000000000023c0 <access@plt>:
    23c0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    23c4:	ldr	x17, [x16, #344]
    23c8:	add	x16, x16, #0x158
    23cc:	br	x17

00000000000023d0 <feof@plt>:
    23d0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    23d4:	ldr	x17, [x16, #352]
    23d8:	add	x16, x16, #0x160
    23dc:	br	x17

00000000000023e0 <strcmp@plt>:
    23e0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    23e4:	ldr	x17, [x16, #360]
    23e8:	add	x16, x16, #0x168
    23ec:	br	x17

00000000000023f0 <__ctype_b_loc@plt>:
    23f0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    23f4:	ldr	x17, [x16, #368]
    23f8:	add	x16, x16, #0x170
    23fc:	br	x17

0000000000002400 <free@plt>:
    2400:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2404:	ldr	x17, [x16, #376]
    2408:	add	x16, x16, #0x178
    240c:	br	x17

0000000000002410 <lt__set_last_error@plt>:
    2410:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2414:	ldr	x17, [x16, #384]
    2418:	add	x16, x16, #0x180
    241c:	br	x17

0000000000002420 <lt__zalloc@plt>:
    2420:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2424:	ldr	x17, [x16, #392]
    2428:	add	x16, x16, #0x188
    242c:	br	x17

0000000000002430 <strchr@plt>:
    2430:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2434:	ldr	x17, [x16, #400]
    2438:	add	x16, x16, #0x190
    243c:	br	x17

0000000000002440 <lt_dlhandle_iterate@plt>:
    2440:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2444:	ldr	x17, [x16, #408]
    2448:	add	x16, x16, #0x198
    244c:	br	x17

0000000000002450 <fwrite@plt>:
    2450:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2454:	ldr	x17, [x16, #416]
    2458:	add	x16, x16, #0x1a0
    245c:	br	x17

0000000000002460 <strcpy@plt>:
    2460:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2464:	ldr	x17, [x16, #424]
    2468:	add	x16, x16, #0x1a8
    246c:	br	x17

0000000000002470 <strncat@plt>:
    2470:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2474:	ldr	x17, [x16, #432]
    2478:	add	x16, x16, #0x1b0
    247c:	br	x17

0000000000002480 <lt__slist_cons@plt>:
    2480:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2484:	ldr	x17, [x16, #440]
    2488:	add	x16, x16, #0x1b8
    248c:	br	x17

0000000000002490 <lt__slist_unbox@plt>:
    2490:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2494:	ldr	x17, [x16, #448]
    2498:	add	x16, x16, #0x1c0
    249c:	br	x17

00000000000024a0 <lt_dlloader_add@plt>:
    24a0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    24a4:	ldr	x17, [x16, #456]
    24a8:	add	x16, x16, #0x1c8
    24ac:	br	x17

00000000000024b0 <argz_create_sep@plt>:
    24b0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    24b4:	ldr	x17, [x16, #464]
    24b8:	add	x16, x16, #0x1d0
    24bc:	br	x17

00000000000024c0 <lt_dlinterface_register@plt>:
    24c0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    24c4:	ldr	x17, [x16, #472]
    24c8:	add	x16, x16, #0x1d8
    24cc:	br	x17

00000000000024d0 <lt__realloc@plt>:
    24d0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    24d4:	ldr	x17, [x16, #480]
    24d8:	add	x16, x16, #0x1e0
    24dc:	br	x17

00000000000024e0 <lt_dlsym@plt>:
    24e0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    24e4:	ldr	x17, [x16, #488]
    24e8:	add	x16, x16, #0x1e8
    24ec:	br	x17

00000000000024f0 <lt_dlloader_remove@plt>:
    24f0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    24f4:	ldr	x17, [x16, #496]
    24f8:	add	x16, x16, #0x1f0
    24fc:	br	x17

0000000000002500 <__assert_fail@plt>:
    2500:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2504:	ldr	x17, [x16, #504]
    2508:	add	x16, x16, #0x1f8
    250c:	br	x17

0000000000002510 <getenv@plt>:
    2510:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2514:	ldr	x17, [x16, #512]
    2518:	add	x16, x16, #0x200
    251c:	br	x17

0000000000002520 <lt__memdup@plt>:
    2520:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2524:	ldr	x17, [x16, #520]
    2528:	add	x16, x16, #0x208
    252c:	br	x17

0000000000002530 <fgets@plt>:
    2530:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2534:	ldr	x17, [x16, #528]
    2538:	add	x16, x16, #0x210
    253c:	br	x17

0000000000002540 <lt_dlopenadvise@plt>:
    2540:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2544:	ldr	x17, [x16, #536]
    2548:	add	x16, x16, #0x218
    254c:	br	x17

0000000000002550 <lt_dlpreload@plt>:
    2550:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2554:	ldr	x17, [x16, #544]
    2558:	add	x16, x16, #0x220
    255c:	br	x17

0000000000002560 <lt_dlloader_find@plt>:
    2560:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2564:	ldr	x17, [x16, #552]
    2568:	add	x16, x16, #0x228
    256c:	br	x17

Disassembly of section .text:

0000000000002570 <preopen_LTX_get_vtable@@Base-0x268>:
    2570:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    2574:	ldr	x0, [x0, #4048]
    2578:	cbz	x0, 2580 <lt_dlloader_find@plt+0x20>
    257c:	b	2360 <__gmon_start__@plt>
    2580:	ret
    2584:	nop
    2588:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    258c:	add	x0, x0, #0x248
    2590:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2594:	add	x1, x1, #0x248
    2598:	cmp	x1, x0
    259c:	b.eq	25b4 <lt_dlloader_find@plt+0x54>  // b.none
    25a0:	adrp	x1, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    25a4:	ldr	x1, [x1, #4008]
    25a8:	cbz	x1, 25b4 <lt_dlloader_find@plt+0x54>
    25ac:	mov	x16, x1
    25b0:	br	x16
    25b4:	ret
    25b8:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    25bc:	add	x0, x0, #0x248
    25c0:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x134f0>
    25c4:	add	x1, x1, #0x248
    25c8:	sub	x1, x1, x0
    25cc:	lsr	x2, x1, #63
    25d0:	add	x1, x2, x1, asr #3
    25d4:	cmp	xzr, x1, asr #1
    25d8:	asr	x1, x1, #1
    25dc:	b.eq	25f4 <lt_dlloader_find@plt+0x94>  // b.none
    25e0:	adrp	x2, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    25e4:	ldr	x2, [x2, #4064]
    25e8:	cbz	x2, 25f4 <lt_dlloader_find@plt+0x94>
    25ec:	mov	x16, x2
    25f0:	br	x16
    25f4:	ret
    25f8:	stp	x29, x30, [sp, #-32]!
    25fc:	mov	x29, sp
    2600:	str	x19, [sp, #16]
    2604:	adrp	x19, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2608:	ldrb	w0, [x19, #584]
    260c:	cbnz	w0, 2634 <lt_dlloader_find@plt+0xd4>
    2610:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    2614:	ldr	x0, [x0, #4016]
    2618:	cbz	x0, 2628 <lt_dlloader_find@plt+0xc8>
    261c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2620:	ldr	x0, [x0, #560]
    2624:	bl	21a0 <__cxa_finalize@plt>
    2628:	bl	2588 <lt_dlloader_find@plt+0x28>
    262c:	mov	w0, #0x1                   	// #1
    2630:	strb	w0, [x19, #584]
    2634:	ldr	x19, [sp, #16]
    2638:	ldp	x29, x30, [sp], #32
    263c:	ret
    2640:	b	25b8 <lt_dlloader_find@plt+0x58>
    2644:	nop
    2648:	mov	w0, #0x0                   	// #0
    264c:	ret
    2650:	stp	x29, x30, [sp, #-32]!
    2654:	mov	x29, sp
    2658:	stp	x19, x20, [sp, #16]
    265c:	adrp	x20, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2660:	add	x0, x20, #0x250
    2664:	str	xzr, [x20, #592]
    2668:	ldr	x19, [x0, #8]
    266c:	cbz	x19, 2680 <lt_dlloader_find@plt+0x120>
    2670:	mov	x0, x19
    2674:	ldr	x19, [x19]
    2678:	bl	2400 <free@plt>
    267c:	cbnz	x19, 2670 <lt_dlloader_find@plt+0x110>
    2680:	add	x20, x20, #0x250
    2684:	mov	w0, #0x0                   	// #0
    2688:	str	xzr, [x20, #8]
    268c:	ldp	x19, x20, [sp, #16]
    2690:	ldp	x29, x30, [sp], #32
    2694:	ret
    2698:	stp	x29, x30, [sp, #-32]!
    269c:	mov	x29, sp
    26a0:	ldr	x0, [x1, #16]
    26a4:	stp	x19, x20, [sp, #16]
    26a8:	mov	x19, x1
    26ac:	mov	x20, x2
    26b0:	cbz	x0, 26cc <lt_dlloader_find@plt+0x16c>
    26b4:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    26b8:	add	x1, x1, #0x648
    26bc:	bl	23e0 <strcmp@plt>
    26c0:	cmp	w0, #0x0
    26c4:	add	x1, x19, #0x10
    26c8:	csel	x19, x1, x19, eq  // eq = none
    26cc:	ldr	x0, [x19, #32]
    26d0:	add	x19, x19, #0x20
    26d4:	cbnz	x0, 26e4 <lt_dlloader_find@plt+0x184>
    26d8:	b	2700 <lt_dlloader_find@plt+0x1a0>
    26dc:	ldr	x0, [x19, #16]!
    26e0:	cbz	x0, 2700 <lt_dlloader_find@plt+0x1a0>
    26e4:	mov	x1, x20
    26e8:	bl	23e0 <strcmp@plt>
    26ec:	cbnz	w0, 26dc <lt_dlloader_find@plt+0x17c>
    26f0:	ldr	x0, [x19, #8]
    26f4:	ldp	x19, x20, [sp, #16]
    26f8:	ldp	x29, x30, [sp], #32
    26fc:	ret
    2700:	mov	w0, #0xa                   	// #10
    2704:	bl	22a0 <lt__error_string@plt>
    2708:	bl	2410 <lt__set_last_error@plt>
    270c:	mov	x0, #0x0                   	// #0
    2710:	ldp	x19, x20, [sp, #16]
    2714:	ldp	x29, x30, [sp], #32
    2718:	ret
    271c:	nop
    2720:	stp	x29, x30, [sp, #-64]!
    2724:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2728:	mov	x29, sp
    272c:	stp	x21, x22, [sp, #32]
    2730:	ldr	x22, [x0, #600]
    2734:	str	x23, [sp, #48]
    2738:	cbz	x22, 27c0 <lt_dlloader_find@plt+0x260>
    273c:	cmp	x1, #0x0
    2740:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    2744:	add	x0, x0, #0x650
    2748:	stp	x19, x20, [sp, #16]
    274c:	csel	x21, x0, x1, eq  // eq = none
    2750:	ldr	x23, [x22, #8]
    2754:	ldr	x20, [x23]
    2758:	cbz	x20, 2790 <lt_dlloader_find@plt+0x230>
    275c:	mov	x19, x23
    2760:	b	276c <lt_dlloader_find@plt+0x20c>
    2764:	add	x19, x19, #0x10
    2768:	cbz	x20, 2790 <lt_dlloader_find@plt+0x230>
    276c:	mov	x0, x20
    2770:	ldp	x2, x20, [x19, #8]
    2774:	cbnz	x2, 2764 <lt_dlloader_find@plt+0x204>
    2778:	mov	x1, x21
    277c:	bl	23e0 <strcmp@plt>
    2780:	cbnz	w0, 2764 <lt_dlloader_find@plt+0x204>
    2784:	ldr	x0, [x19, #24]
    2788:	cbz	x0, 2764 <lt_dlloader_find@plt+0x204>
    278c:	cbnz	x20, 27a8 <lt_dlloader_find@plt+0x248>
    2790:	ldr	x22, [x22]
    2794:	cbnz	x22, 2750 <lt_dlloader_find@plt+0x1f0>
    2798:	mov	x23, #0x0                   	// #0
    279c:	mov	w0, #0x5                   	// #5
    27a0:	bl	22a0 <lt__error_string@plt>
    27a4:	bl	2410 <lt__set_last_error@plt>
    27a8:	ldp	x19, x20, [sp, #16]
    27ac:	mov	x0, x23
    27b0:	ldp	x21, x22, [sp, #32]
    27b4:	ldr	x23, [sp, #48]
    27b8:	ldp	x29, x30, [sp], #64
    27bc:	ret
    27c0:	mov	x23, #0x0                   	// #0
    27c4:	mov	w0, #0x7                   	// #7
    27c8:	bl	22a0 <lt__error_string@plt>
    27cc:	bl	2410 <lt__set_last_error@plt>
    27d0:	b	27ac <lt_dlloader_find@plt+0x24c>
    27d4:	nop

00000000000027d8 <preopen_LTX_get_vtable@@Base>:
    27d8:	stp	x29, x30, [sp, #-48]!
    27dc:	mov	x29, sp
    27e0:	stp	x19, x20, [sp, #16]
    27e4:	adrp	x20, 19000 <lt_dlinterface_free@@Base+0x134f0>
    27e8:	mov	x19, x0
    27ec:	str	x0, [sp, #40]
    27f0:	ldr	x0, [x20, #592]
    27f4:	cbz	x0, 2868 <preopen_LTX_get_vtable@@Base+0x90>
    27f8:	ldr	x1, [x0]
    27fc:	cbz	x1, 2818 <preopen_LTX_get_vtable@@Base+0x40>
    2800:	ldr	x1, [x0, #56]
    2804:	cmp	x1, x19
    2808:	b.ne	2884 <preopen_LTX_get_vtable@@Base+0xac>  // b.any
    280c:	ldp	x19, x20, [sp, #16]
    2810:	ldp	x29, x30, [sp], #48
    2814:	ret
    2818:	adrp	x6, 6000 <lt__slist_cons@@Base+0x10>
    281c:	adrp	x5, 2000 <lt_dlinterface_free@plt-0x110>
    2820:	add	x6, x6, #0x660
    2824:	add	x5, x5, #0x720
    2828:	adrp	x4, 2000 <lt_dlinterface_free@plt-0x110>
    282c:	adrp	x3, 2000 <lt_dlinterface_free@plt-0x110>
    2830:	add	x4, x4, #0x648
    2834:	add	x3, x3, #0x698
    2838:	adrp	x2, 2000 <lt_dlinterface_free@plt-0x110>
    283c:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    2840:	add	x2, x2, #0x988
    2844:	add	x1, x1, #0x650
    2848:	stp	x6, xzr, [x0]
    284c:	stp	x5, x4, [x0, #16]
    2850:	stp	x3, x2, [x0, #32]
    2854:	stp	x1, x19, [x0, #48]
    2858:	str	wzr, [x0, #64]
    285c:	ldp	x19, x20, [sp, #16]
    2860:	ldp	x29, x30, [sp], #48
    2864:	ret
    2868:	mov	x0, #0x48                  	// #72
    286c:	bl	2420 <lt__zalloc@plt>
    2870:	str	x0, [x20, #592]
    2874:	cbnz	x0, 27f8 <preopen_LTX_get_vtable@@Base+0x20>
    2878:	ldp	x19, x20, [sp, #16]
    287c:	ldp	x29, x30, [sp], #48
    2880:	ret
    2884:	mov	w0, #0x3                   	// #3
    2888:	bl	22a0 <lt__error_string@plt>
    288c:	bl	2410 <lt__set_last_error@plt>
    2890:	mov	x0, #0x0                   	// #0
    2894:	ldp	x19, x20, [sp, #16]
    2898:	ldp	x29, x30, [sp], #48
    289c:	ret

00000000000028a0 <lt_dlpreload_default@@Base>:
    28a0:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x134f0>
    28a4:	mov	x2, x0
    28a8:	mov	w0, #0x0                   	// #0
    28ac:	str	x2, [x1, #608]
    28b0:	ret
    28b4:	nop

00000000000028b8 <lt_dlpreload@@Base>:
    28b8:	stp	x29, x30, [sp, #-64]!
    28bc:	mov	x29, sp
    28c0:	str	x21, [sp, #32]
    28c4:	adrp	x21, 19000 <lt_dlinterface_free@@Base+0x134f0>
    28c8:	add	x1, x21, #0x250
    28cc:	stp	x19, x20, [sp, #16]
    28d0:	ldr	x19, [x1, #8]
    28d4:	cbnz	x0, 294c <lt_dlpreload@@Base+0x94>
    28d8:	cbz	x19, 28f0 <lt_dlpreload@@Base+0x38>
    28dc:	nop
    28e0:	mov	x0, x19
    28e4:	ldr	x19, [x19]
    28e8:	bl	2400 <free@plt>
    28ec:	cbnz	x19, 28e0 <lt_dlpreload@@Base+0x28>
    28f0:	add	x0, x21, #0x250
    28f4:	ldr	x20, [x0, #16]
    28f8:	str	xzr, [x0, #8]
    28fc:	cbz	x20, 296c <lt_dlpreload@@Base+0xb4>
    2900:	mov	x0, #0x10                  	// #16
    2904:	bl	2420 <lt__zalloc@plt>
    2908:	mov	x1, x0
    290c:	cbz	x0, 2980 <lt_dlpreload@@Base+0xc8>
    2910:	add	x21, x21, #0x250
    2914:	ldr	x0, [x20, #16]
    2918:	ldr	x2, [x21, #8]
    291c:	stp	x2, x20, [x1]
    2920:	str	x1, [x21, #8]
    2924:	cbz	x0, 296c <lt_dlpreload@@Base+0xb4>
    2928:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    292c:	add	x1, x1, #0x648
    2930:	bl	23e0 <strcmp@plt>
    2934:	str	w0, [sp, #60]
    2938:	cbnz	w0, 296c <lt_dlpreload@@Base+0xb4>
    293c:	ldr	x1, [x20, #24]
    2940:	blr	x1
    2944:	ldr	w0, [sp, #60]
    2948:	b	2970 <lt_dlpreload@@Base+0xb8>
    294c:	mov	x20, x0
    2950:	cbnz	x19, 2960 <lt_dlpreload@@Base+0xa8>
    2954:	b	2900 <lt_dlpreload@@Base+0x48>
    2958:	ldr	x19, [x19]
    295c:	cbz	x19, 2900 <lt_dlpreload@@Base+0x48>
    2960:	ldr	x0, [x19, #8]
    2964:	cmp	x20, x0
    2968:	b.ne	2958 <lt_dlpreload@@Base+0xa0>  // b.any
    296c:	mov	w0, #0x0                   	// #0
    2970:	ldp	x19, x20, [sp, #16]
    2974:	ldr	x21, [sp, #32]
    2978:	ldp	x29, x30, [sp], #64
    297c:	ret
    2980:	mov	w0, #0x1                   	// #1
    2984:	b	2970 <lt_dlpreload@@Base+0xb8>
    2988:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x134f0>
    298c:	add	x1, x1, #0x250
    2990:	ldr	x0, [x1, #16]
    2994:	str	xzr, [x1, #8]
    2998:	cbz	x0, 29a0 <lt_dlpreload@@Base+0xe8>
    299c:	b	2550 <lt_dlpreload@plt>
    29a0:	mov	w0, #0x0                   	// #0
    29a4:	ret

00000000000029a8 <lt_dlpreload_open@@Base>:
    29a8:	stp	x29, x30, [sp, #-96]!
    29ac:	adrp	x2, 19000 <lt_dlinterface_free@@Base+0x134f0>
    29b0:	mov	x29, sp
    29b4:	stp	x21, x22, [sp, #32]
    29b8:	ldr	x22, [x2, #600]
    29bc:	stp	x25, x26, [sp, #64]
    29c0:	cbz	x22, 2ad8 <lt_dlpreload_open@@Base+0x130>
    29c4:	mov	w25, #0x0                   	// #0
    29c8:	mov	w26, #0x0                   	// #0
    29cc:	stp	x19, x20, [sp, #16]
    29d0:	stp	x23, x24, [sp, #48]
    29d4:	adrp	x24, 6000 <lt__slist_cons@@Base+0x10>
    29d8:	mov	x23, x0
    29dc:	add	x24, x24, #0x650
    29e0:	str	x27, [sp, #80]
    29e4:	mov	x27, x1
    29e8:	b	2a00 <lt_dlpreload_open@@Base+0x58>
    29ec:	mov	x1, x23
    29f0:	bl	23e0 <strcmp@plt>
    29f4:	cbz	w0, 2a18 <lt_dlpreload_open@@Base+0x70>
    29f8:	ldr	x22, [x22]
    29fc:	cbz	x22, 2a78 <lt_dlpreload_open@@Base+0xd0>
    2a00:	ldr	x19, [x22, #8]
    2a04:	ldr	x0, [x19]
    2a08:	cbnz	x23, 29ec <lt_dlpreload_open@@Base+0x44>
    2a0c:	mov	x1, x24
    2a10:	bl	23e0 <strcmp@plt>
    2a14:	cbnz	w0, 29f8 <lt_dlpreload_open@@Base+0x50>
    2a18:	ldr	x21, [x19, #16]
    2a1c:	add	w25, w25, #0x1
    2a20:	add	x0, x19, #0x10
    2a24:	cbz	x21, 29f8 <lt_dlpreload_open@@Base+0x50>
    2a28:	mov	w20, #0x1                   	// #1
    2a2c:	b	2a44 <lt_dlpreload_open@@Base+0x9c>
    2a30:	add	w20, w20, #0x1
    2a34:	ubfiz	x2, x20, #4, #32
    2a38:	add	x0, x19, x2
    2a3c:	ldr	x21, [x19, x2]
    2a40:	cbz	x21, 29f8 <lt_dlpreload_open@@Base+0x50>
    2a44:	ldr	x0, [x0, #8]
    2a48:	cbnz	x0, 2a30 <lt_dlpreload_open@@Base+0x88>
    2a4c:	mov	x1, x24
    2a50:	mov	x0, x21
    2a54:	bl	23e0 <strcmp@plt>
    2a58:	cbz	w0, 2a30 <lt_dlpreload_open@@Base+0x88>
    2a5c:	mov	x0, x21
    2a60:	bl	23b0 <lt_dlopen@plt>
    2a64:	cbz	x0, 2a9c <lt_dlpreload_open@@Base+0xf4>
    2a68:	blr	x27
    2a6c:	add	w26, w26, w0
    2a70:	ldr	x19, [x22, #8]
    2a74:	b	2a30 <lt_dlpreload_open@@Base+0x88>
    2a78:	cbz	w25, 2aa8 <lt_dlpreload_open@@Base+0x100>
    2a7c:	mov	w0, w26
    2a80:	ldp	x19, x20, [sp, #16]
    2a84:	ldp	x21, x22, [sp, #32]
    2a88:	ldp	x23, x24, [sp, #48]
    2a8c:	ldp	x25, x26, [sp, #64]
    2a90:	ldr	x27, [sp, #80]
    2a94:	ldp	x29, x30, [sp], #96
    2a98:	ret
    2a9c:	add	w26, w26, #0x1
    2aa0:	ldr	x19, [x22, #8]
    2aa4:	b	2a30 <lt_dlpreload_open@@Base+0x88>
    2aa8:	ldp	x19, x20, [sp, #16]
    2aac:	add	w26, w26, #0x1
    2ab0:	ldp	x23, x24, [sp, #48]
    2ab4:	ldr	x27, [sp, #80]
    2ab8:	mov	w0, #0x8                   	// #8
    2abc:	bl	22a0 <lt__error_string@plt>
    2ac0:	bl	2410 <lt__set_last_error@plt>
    2ac4:	mov	w0, w26
    2ac8:	ldp	x21, x22, [sp, #32]
    2acc:	ldp	x25, x26, [sp, #64]
    2ad0:	ldp	x29, x30, [sp], #96
    2ad4:	ret
    2ad8:	mov	w26, #0x1                   	// #1
    2adc:	b	2ab8 <lt_dlpreload_open@@Base+0x110>
    2ae0:	stp	x29, x30, [sp, #-16]!
    2ae4:	adrp	x3, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    2ae8:	mov	x2, #0xf                   	// #15
    2aec:	mov	x29, sp
    2af0:	ldr	x3, [x3, #4024]
    2af4:	mov	x1, #0x1                   	// #1
    2af8:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    2afc:	add	x0, x0, #0x670
    2b00:	ldr	x3, [x3]
    2b04:	bl	2450 <fwrite@plt>
    2b08:	mov	w0, #0x1                   	// #1
    2b0c:	bl	2170 <exit@plt>

0000000000002b10 <lt__malloc@@Base>:
    2b10:	stp	x29, x30, [sp, #-32]!
    2b14:	mov	x29, sp
    2b18:	bl	2240 <malloc@plt>
    2b1c:	cbz	x0, 2b28 <lt__malloc@@Base+0x18>
    2b20:	ldp	x29, x30, [sp], #32
    2b24:	ret
    2b28:	adrp	x1, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    2b2c:	str	x0, [sp, #24]
    2b30:	ldr	x1, [x1, #4040]
    2b34:	ldr	x1, [x1]
    2b38:	blr	x1
    2b3c:	ldr	x0, [sp, #24]
    2b40:	b	2b20 <lt__malloc@@Base+0x10>
    2b44:	nop

0000000000002b48 <lt__zalloc@@Base>:
    2b48:	stp	x29, x30, [sp, #-32]!
    2b4c:	mov	x29, sp
    2b50:	stp	x19, x20, [sp, #16]
    2b54:	mov	x20, x0
    2b58:	bl	2370 <lt__malloc@plt>
    2b5c:	mov	x19, x0
    2b60:	cbz	x0, 2b70 <lt__zalloc@@Base+0x28>
    2b64:	mov	x2, x20
    2b68:	mov	w1, #0x0                   	// #0
    2b6c:	bl	2290 <memset@plt>
    2b70:	mov	x0, x19
    2b74:	ldp	x19, x20, [sp, #16]
    2b78:	ldp	x29, x30, [sp], #32
    2b7c:	ret

0000000000002b80 <lt__realloc@@Base>:
    2b80:	stp	x29, x30, [sp, #-32]!
    2b84:	mov	x29, sp
    2b88:	bl	2310 <realloc@plt>
    2b8c:	cbz	x0, 2b98 <lt__realloc@@Base+0x18>
    2b90:	ldp	x29, x30, [sp], #32
    2b94:	ret
    2b98:	adrp	x1, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    2b9c:	str	x0, [sp, #24]
    2ba0:	ldr	x1, [x1, #4040]
    2ba4:	ldr	x1, [x1]
    2ba8:	blr	x1
    2bac:	ldr	x0, [sp, #24]
    2bb0:	b	2b90 <lt__realloc@@Base+0x10>
    2bb4:	nop

0000000000002bb8 <lt__memdup@@Base>:
    2bb8:	stp	x29, x30, [sp, #-32]!
    2bbc:	mov	x29, sp
    2bc0:	stp	x19, x20, [sp, #16]
    2bc4:	mov	x20, x0
    2bc8:	mov	x19, x1
    2bcc:	mov	x0, x1
    2bd0:	bl	2370 <lt__malloc@plt>
    2bd4:	cbz	x0, 2bec <lt__memdup@@Base+0x34>
    2bd8:	mov	x2, x19
    2bdc:	mov	x1, x20
    2be0:	ldp	x19, x20, [sp, #16]
    2be4:	ldp	x29, x30, [sp], #32
    2be8:	b	2120 <memcpy@plt>
    2bec:	ldp	x19, x20, [sp, #16]
    2bf0:	ldp	x29, x30, [sp], #32
    2bf4:	ret

0000000000002bf8 <lt__strdup@@Base>:
    2bf8:	stp	x29, x30, [sp, #-32]!
    2bfc:	mov	x29, sp
    2c00:	str	x19, [sp, #16]
    2c04:	mov	x19, x0
    2c08:	bl	2150 <strlen@plt>
    2c0c:	mov	x1, x0
    2c10:	mov	x0, x19
    2c14:	add	x1, x1, #0x1
    2c18:	ldr	x19, [sp, #16]
    2c1c:	ldp	x29, x30, [sp], #32
    2c20:	b	2520 <lt__memdup@plt>
    2c24:	nop
    2c28:	stp	x29, x30, [sp, #-32]!
    2c2c:	mov	x29, sp
    2c30:	str	x19, [sp, #16]
    2c34:	mov	x19, x0
    2c38:	ldr	x0, [x0, #8]
    2c3c:	cbz	x0, 2c5c <lt__strdup@@Base+0x64>
    2c40:	ldr	x0, [x0]
    2c44:	bl	23e0 <strcmp@plt>
    2c48:	cmp	w0, #0x0
    2c4c:	csel	x0, x19, xzr, eq  // eq = none
    2c50:	ldr	x19, [sp, #16]
    2c54:	ldp	x29, x30, [sp], #32
    2c58:	ret
    2c5c:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    2c60:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    2c64:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    2c68:	add	x3, x3, #0x6c8
    2c6c:	add	x1, x1, #0x680
    2c70:	add	x0, x0, #0x698
    2c74:	mov	w2, #0x36                  	// #54
    2c78:	bl	2500 <__assert_fail@plt>
    2c7c:	nop

0000000000002c80 <lt_dlloader_add@@Base>:
    2c80:	stp	x29, x30, [sp, #-32]!
    2c84:	mov	x29, sp
    2c88:	cbz	x0, 2cbc <lt_dlloader_add@@Base+0x3c>
    2c8c:	ldr	x1, [x0, #16]
    2c90:	str	x19, [sp, #16]
    2c94:	mov	x19, x0
    2c98:	cbz	x1, 2cb8 <lt_dlloader_add@@Base+0x38>
    2c9c:	ldr	x1, [x0, #24]
    2ca0:	cbz	x1, 2cb8 <lt_dlloader_add@@Base+0x38>
    2ca4:	ldr	x1, [x0, #32]
    2ca8:	cbz	x1, 2cb8 <lt_dlloader_add@@Base+0x38>
    2cac:	ldr	w1, [x0, #64]
    2cb0:	cmp	w1, #0x1
    2cb4:	b.ls	2cd4 <lt_dlloader_add@@Base+0x54>  // b.plast
    2cb8:	ldr	x19, [sp, #16]
    2cbc:	mov	w0, #0x2                   	// #2
    2cc0:	bl	22a0 <lt__error_string@plt>
    2cc4:	bl	2410 <lt__set_last_error@plt>
    2cc8:	mov	w0, #0x1                   	// #1
    2ccc:	ldp	x29, x30, [sp], #32
    2cd0:	ret
    2cd4:	bl	2160 <lt__slist_box@plt>
    2cd8:	mov	x1, x0
    2cdc:	cbz	x0, 2d34 <lt_dlloader_add@@Base+0xb4>
    2ce0:	ldr	w2, [x19, #64]
    2ce4:	cbz	w2, 2d14 <lt_dlloader_add@@Base+0x94>
    2ce8:	cmp	w2, #0x1
    2cec:	b.ne	2d50 <lt_dlloader_add@@Base+0xd0>  // b.any
    2cf0:	adrp	x19, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2cf4:	ldr	x0, [x19, #616]
    2cf8:	bl	2350 <lt__slist_concat@plt>
    2cfc:	mov	x1, x0
    2d00:	mov	w0, #0x0                   	// #0
    2d04:	str	x1, [x19, #616]
    2d08:	ldr	x19, [sp, #16]
    2d0c:	ldp	x29, x30, [sp], #32
    2d10:	ret
    2d14:	adrp	x19, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2d18:	ldr	x1, [x19, #616]
    2d1c:	bl	2480 <lt__slist_cons@plt>
    2d20:	mov	x1, x0
    2d24:	mov	w0, #0x0                   	// #0
    2d28:	str	x1, [x19, #616]
    2d2c:	ldr	x19, [sp, #16]
    2d30:	b	2ccc <lt_dlloader_add@@Base+0x4c>
    2d34:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    2d38:	ldr	x0, [x0, #4040]
    2d3c:	ldr	x0, [x0]
    2d40:	blr	x0
    2d44:	mov	w0, #0x1                   	// #1
    2d48:	ldr	x19, [sp, #16]
    2d4c:	b	2ccc <lt_dlloader_add@@Base+0x4c>
    2d50:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    2d54:	add	x3, x3, #0x6c8
    2d58:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    2d5c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    2d60:	add	x3, x3, #0x10
    2d64:	add	x1, x1, #0x680
    2d68:	add	x0, x0, #0x6a0
    2d6c:	mov	w2, #0x5e                  	// #94
    2d70:	bl	2500 <__assert_fail@plt>
    2d74:	nop

0000000000002d78 <lt_dlloader_next@@Base>:
    2d78:	cbz	x0, 2d84 <lt_dlloader_next@@Base+0xc>
    2d7c:	ldr	x0, [x0]
    2d80:	ret
    2d84:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2d88:	ldr	x0, [x0, #616]
    2d8c:	ret

0000000000002d90 <lt_dlloader_get@@Base>:
    2d90:	cbz	x0, 2d9c <lt_dlloader_get@@Base+0xc>
    2d94:	ldr	x0, [x0, #8]
    2d98:	ret
    2d9c:	mov	x0, #0x0                   	// #0
    2da0:	ret
    2da4:	nop

0000000000002da8 <lt_dlloader_find@@Base>:
    2da8:	stp	x29, x30, [sp, #-16]!
    2dac:	adrp	x3, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2db0:	mov	x2, x0
    2db4:	mov	x29, sp
    2db8:	ldr	x0, [x3, #616]
    2dbc:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    2dc0:	add	x1, x1, #0xc28
    2dc4:	bl	22e0 <lt__slist_find@plt>
    2dc8:	ldp	x29, x30, [sp], #16
    2dcc:	b	2140 <lt_dlloader_get@plt>

0000000000002dd0 <lt_dlloader_remove@@Base>:
    2dd0:	stp	x29, x30, [sp, #-80]!
    2dd4:	mov	x29, sp
    2dd8:	stp	x21, x22, [sp, #32]
    2ddc:	mov	x22, x0
    2de0:	bl	2560 <lt_dlloader_find@plt>
    2de4:	cbz	x0, 2ee0 <lt_dlloader_remove@@Base+0x110>
    2de8:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    2dec:	add	x1, x1, #0x6c8
    2df0:	stp	x19, x20, [sp, #16]
    2df4:	mov	x19, x0
    2df8:	add	x0, x1, #0x20
    2dfc:	mov	x1, #0x0                   	// #0
    2e00:	str	x23, [sp, #48]
    2e04:	bl	24c0 <lt_dlinterface_register@plt>
    2e08:	mov	x20, x0
    2e0c:	mov	w21, #0x0                   	// #0
    2e10:	mov	w23, #0x0                   	// #0
    2e14:	mov	x1, #0x0                   	// #0
    2e18:	mov	x0, x20
    2e1c:	bl	2440 <lt_dlhandle_iterate@plt>
    2e20:	mov	x1, x0
    2e24:	cbz	x0, 2e60 <lt_dlloader_remove@@Base+0x90>
    2e28:	ldr	x2, [x1, #8]
    2e2c:	cmp	x2, x19
    2e30:	b.ne	2e18 <lt_dlloader_remove@@Base+0x48>  // b.any
    2e34:	str	x1, [sp, #72]
    2e38:	bl	23a0 <lt_dlisresident@plt>
    2e3c:	ldr	x1, [sp, #72]
    2e40:	cmp	w0, #0x0
    2e44:	mov	w21, #0x1                   	// #1
    2e48:	mov	x0, x20
    2e4c:	csel	w23, w23, w21, eq  // eq = none
    2e50:	bl	2440 <lt_dlhandle_iterate@plt>
    2e54:	mov	x1, x0
    2e58:	cbnz	x0, 2e28 <lt_dlloader_remove@@Base+0x58>
    2e5c:	nop
    2e60:	mov	x0, x20
    2e64:	bl	2110 <lt_dlinterface_free@plt>
    2e68:	cbnz	w21, 2ec4 <lt_dlloader_remove@@Base+0xf4>
    2e6c:	ldr	x1, [x19, #48]
    2e70:	cbz	x1, 2e80 <lt_dlloader_remove@@Base+0xb0>
    2e74:	ldr	x0, [x19, #56]
    2e78:	blr	x1
    2e7c:	cbnz	w0, 2eac <lt_dlloader_remove@@Base+0xdc>
    2e80:	mov	x2, x22
    2e84:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    2e88:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2e8c:	add	x1, x1, #0xc28
    2e90:	add	x0, x0, #0x268
    2e94:	bl	2270 <lt__slist_remove@plt>
    2e98:	ldp	x19, x20, [sp, #16]
    2e9c:	ldp	x21, x22, [sp, #32]
    2ea0:	ldr	x23, [sp, #48]
    2ea4:	ldp	x29, x30, [sp], #80
    2ea8:	b	2490 <lt__slist_unbox@plt>
    2eac:	ldp	x19, x20, [sp, #16]
    2eb0:	ldr	x23, [sp, #48]
    2eb4:	mov	x0, #0x0                   	// #0
    2eb8:	ldp	x21, x22, [sp, #32]
    2ebc:	ldp	x29, x30, [sp], #80
    2ec0:	ret
    2ec4:	cbnz	w23, 2eac <lt_dlloader_remove@@Base+0xdc>
    2ec8:	mov	w0, #0x4                   	// #4
    2ecc:	bl	22a0 <lt__error_string@plt>
    2ed0:	bl	2410 <lt__set_last_error@plt>
    2ed4:	ldp	x19, x20, [sp, #16]
    2ed8:	ldr	x23, [sp, #48]
    2edc:	b	2eb4 <lt_dlloader_remove@@Base+0xe4>
    2ee0:	mov	w0, #0x2                   	// #2
    2ee4:	bl	22a0 <lt__error_string@plt>
    2ee8:	bl	2410 <lt__set_last_error@plt>
    2eec:	b	2eb4 <lt_dlloader_remove@@Base+0xe4>

0000000000002ef0 <lt_dladderror@@Base>:
    2ef0:	stp	x29, x30, [sp, #-48]!
    2ef4:	mov	x29, sp
    2ef8:	stp	x19, x20, [sp, #16]
    2efc:	stp	x21, x22, [sp, #32]
    2f00:	cbz	x0, 2f60 <lt_dladderror@@Base+0x70>
    2f04:	adrp	x21, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2f08:	adrp	x22, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2f0c:	mov	x20, x0
    2f10:	ldr	w19, [x21, #576]
    2f14:	ldr	x0, [x22, #624]
    2f18:	sub	w19, w19, #0x13
    2f1c:	sbfiz	x19, x19, #3, #32
    2f20:	mov	x1, x19
    2f24:	bl	24d0 <lt__realloc@plt>
    2f28:	mov	x1, x0
    2f2c:	cbz	x0, 2f58 <lt_dladderror@@Base+0x68>
    2f30:	add	x19, x0, x19
    2f34:	ldr	w0, [x21, #576]
    2f38:	str	x1, [x22, #624]
    2f3c:	add	w1, w0, #0x1
    2f40:	str	w1, [x21, #576]
    2f44:	stur	x20, [x19, #-8]
    2f48:	ldp	x19, x20, [sp, #16]
    2f4c:	ldp	x21, x22, [sp, #32]
    2f50:	ldp	x29, x30, [sp], #48
    2f54:	ret
    2f58:	mov	w0, #0xffffffff            	// #-1
    2f5c:	b	2f48 <lt_dladderror@@Base+0x58>
    2f60:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    2f64:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    2f68:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    2f6c:	add	x3, x3, #0x758
    2f70:	add	x1, x1, #0x700
    2f74:	add	x0, x0, #0x718
    2f78:	mov	w2, #0x35                  	// #53
    2f7c:	bl	2500 <__assert_fail@plt>

0000000000002f80 <lt__error_string@@Base>:
    2f80:	stp	x29, x30, [sp, #-16]!
    2f84:	mov	x29, sp
    2f88:	tbnz	w0, #31, 2fb0 <lt__error_string@@Base+0x30>
    2f8c:	cmp	w0, #0x13
    2f90:	b.gt	2fd4 <lt__error_string@@Base+0x54>
    2f94:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    2f98:	add	x1, x1, #0x758
    2f9c:	add	x1, x1, #0x28
    2fa0:	mov	w2, #0x2a                  	// #42
    2fa4:	ldp	x29, x30, [sp], #16
    2fa8:	smaddl	x0, w0, w2, x1
    2fac:	ret
    2fb0:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    2fb4:	add	x3, x3, #0x758
    2fb8:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    2fbc:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    2fc0:	add	x3, x3, #0x10
    2fc4:	add	x1, x1, #0x700
    2fc8:	add	x0, x0, #0x728
    2fcc:	mov	w2, #0x5f                  	// #95
    2fd0:	bl	2500 <__assert_fail@plt>
    2fd4:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    2fd8:	add	x3, x3, #0x758
    2fdc:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    2fe0:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    2fe4:	add	x3, x3, #0x10
    2fe8:	add	x1, x1, #0x700
    2fec:	add	x0, x0, #0x738
    2ff0:	mov	w2, #0x60                  	// #96
    2ff4:	bl	2500 <__assert_fail@plt>

0000000000002ff8 <lt__get_last_error@@Base>:
    2ff8:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    2ffc:	ldr	x0, [x0, #632]
    3000:	ret
    3004:	nop

0000000000003008 <lt__set_last_error@@Base>:
    3008:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x134f0>
    300c:	str	x0, [x1, #632]
    3010:	ret
    3014:	nop

0000000000003018 <lt_dlseterror@@Base>:
    3018:	stp	x29, x30, [sp, #-16]!
    301c:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x134f0>
    3020:	cmp	w0, #0x0
    3024:	mov	x29, sp
    3028:	ldr	w1, [x1, #576]
    302c:	ccmp	w1, w0, #0x4, ge  // ge = tcont
    3030:	b.gt	304c <lt_dlseterror@@Base+0x34>
    3034:	mov	w0, #0xe                   	// #14
    3038:	bl	22a0 <lt__error_string@plt>
    303c:	bl	2410 <lt__set_last_error@plt>
    3040:	mov	w0, #0x1                   	// #1
    3044:	ldp	x29, x30, [sp], #16
    3048:	ret
    304c:	cmp	w0, #0x13
    3050:	b.gt	3078 <lt_dlseterror@@Base+0x60>
    3054:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3058:	add	x1, x1, #0x758
    305c:	add	x1, x1, #0x28
    3060:	mov	w2, #0x2a                  	// #42
    3064:	smaddl	x0, w0, w2, x1
    3068:	bl	2410 <lt__set_last_error@plt>
    306c:	mov	w0, #0x0                   	// #0
    3070:	ldp	x29, x30, [sp], #16
    3074:	ret
    3078:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x134f0>
    307c:	mov	x2, #0xffffffffffffff60    	// #-160
    3080:	add	x0, x2, w0, sxtw #3
    3084:	ldr	x1, [x1, #624]
    3088:	ldr	x0, [x1, x0]
    308c:	bl	2410 <lt__set_last_error@plt>
    3090:	mov	w0, #0x0                   	// #0
    3094:	ldp	x29, x30, [sp], #16
    3098:	ret
    309c:	nop

00000000000030a0 <lt__alloc_die_callback@@Base>:
    30a0:	stp	x29, x30, [sp, #-16]!
    30a4:	mov	w0, #0xb                   	// #11
    30a8:	mov	x29, sp
    30ac:	bl	22a0 <lt__error_string@plt>
    30b0:	ldp	x29, x30, [sp], #16
    30b4:	b	2410 <lt__set_last_error@plt>
    30b8:	stp	x29, x30, [sp, #-32]!
    30bc:	mov	x29, sp
    30c0:	stp	x19, x20, [sp, #16]
    30c4:	cbz	x0, 31a0 <lt__alloc_die_callback@@Base+0x100>
    30c8:	mov	x20, x1
    30cc:	ldrb	w1, [x0]
    30d0:	mov	x19, x0
    30d4:	cbz	w1, 31a0 <lt__alloc_die_callback@@Base+0x100>
    30d8:	bl	2150 <strlen@plt>
    30dc:	add	x0, x0, #0x1
    30e0:	bl	2370 <lt__malloc@plt>
    30e4:	mov	x5, x0
    30e8:	cbz	x0, 3188 <lt__alloc_die_callback@@Base+0xe8>
    30ec:	ldrb	w2, [x19]
    30f0:	cbz	w2, 3198 <lt__alloc_die_callback@@Base+0xf8>
    30f4:	add	x3, x19, #0x1
    30f8:	mov	x4, #0x0                   	// #0
    30fc:	mov	w1, #0x2f                  	// #47
    3100:	b	3120 <lt__alloc_die_callback@@Base+0x80>
    3104:	cmp	w2, #0x2f
    3108:	b.eq	3164 <lt__alloc_die_callback@@Base+0xc4>  // b.none
    310c:	strb	w2, [x5, x4]
    3110:	add	x4, x4, #0x1
    3114:	ldrb	w2, [x3]
    3118:	add	x3, x3, #0x1
    311c:	cbz	w2, 3148 <lt__alloc_die_callback@@Base+0xa8>
    3120:	cmp	w2, #0x3a
    3124:	b.ne	3104 <lt__alloc_die_callback@@Base+0x64>  // b.any
    3128:	ldrb	w0, [x3]
    312c:	cbz	x4, 313c <lt__alloc_die_callback@@Base+0x9c>
    3130:	cmp	w0, #0x3a
    3134:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    3138:	b.ne	310c <lt__alloc_die_callback@@Base+0x6c>  // b.any
    313c:	mov	w2, w0
    3140:	add	x3, x3, #0x1
    3144:	cbnz	w2, 3120 <lt__alloc_die_callback@@Base+0x80>
    3148:	add	x4, x5, x4
    314c:	strb	wzr, [x4]
    3150:	mov	w0, #0x0                   	// #0
    3154:	str	x5, [x20]
    3158:	ldp	x19, x20, [sp, #16]
    315c:	ldp	x29, x30, [sp], #32
    3160:	ret
    3164:	ldrb	w2, [x3]
    3168:	cmp	w2, #0x3a
    316c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    3170:	ccmp	w2, w1, #0x4, ne  // ne = any
    3174:	b.eq	3118 <lt__alloc_die_callback@@Base+0x78>  // b.none
    3178:	strb	w1, [x5, x4]
    317c:	add	x4, x4, #0x1
    3180:	ldrb	w2, [x3]
    3184:	b	3118 <lt__alloc_die_callback@@Base+0x78>
    3188:	mov	w0, #0x1                   	// #1
    318c:	ldp	x19, x20, [sp, #16]
    3190:	ldp	x29, x30, [sp], #32
    3194:	ret
    3198:	mov	x4, x0
    319c:	b	314c <lt__alloc_die_callback@@Base+0xac>
    31a0:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    31a4:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    31a8:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    31ac:	add	x3, x3, #0xd58
    31b0:	add	x1, x1, #0xac8
    31b4:	add	x0, x0, #0xad8
    31b8:	mov	w2, #0x24f                 	// #591
    31bc:	bl	2500 <__assert_fail@plt>
    31c0:	stp	x29, x30, [sp, #-64]!
    31c4:	adrp	x4, 19000 <lt_dlinterface_free@@Base+0x134f0>
    31c8:	mov	x29, sp
    31cc:	stp	x19, x20, [sp, #16]
    31d0:	mov	x20, x1
    31d4:	ldr	x19, [x4, #640]
    31d8:	stp	x21, x22, [sp, #32]
    31dc:	mov	x21, x2
    31e0:	stp	x23, x24, [sp, #48]
    31e4:	mov	x24, x0
    31e8:	mov	x23, x3
    31ec:	bl	2190 <lt__get_last_error@plt>
    31f0:	mov	x22, x0
    31f4:	cbnz	x19, 3218 <lt__alloc_die_callback@@Base+0x178>
    31f8:	b	3250 <lt__alloc_die_callback@@Base+0x1b0>
    31fc:	cmp	x20, #0x0
    3200:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    3204:	b.eq	3210 <lt__alloc_die_callback@@Base+0x170>  // b.none
    3208:	bl	23e0 <strcmp@plt>
    320c:	cbz	w0, 3228 <lt__alloc_die_callback@@Base+0x188>
    3210:	ldr	x19, [x19]
    3214:	cbz	x19, 3250 <lt__alloc_die_callback@@Base+0x1b0>
    3218:	ldr	x0, [x19, #16]
    321c:	mov	x1, x20
    3220:	cmp	x0, x20
    3224:	b.ne	31fc <lt__alloc_die_callback@@Base+0x15c>  // b.any
    3228:	ldr	w1, [x19, #32]
    322c:	mov	w0, #0x0                   	// #0
    3230:	add	w1, w1, #0x1
    3234:	str	w1, [x19, #32]
    3238:	str	x19, [x24]
    323c:	ldp	x19, x20, [sp, #16]
    3240:	ldp	x21, x22, [sp, #32]
    3244:	ldp	x23, x24, [sp, #48]
    3248:	ldp	x29, x30, [sp], #64
    324c:	ret
    3250:	ldr	x24, [x24]
    3254:	cbz	x20, 334c <lt__alloc_die_callback@@Base+0x2ac>
    3258:	mov	x0, x20
    325c:	bl	2180 <lt__strdup@plt>
    3260:	str	x0, [x24, #16]
    3264:	cbz	x0, 3354 <lt__alloc_die_callback@@Base+0x2b4>
    3268:	mov	x0, #0x0                   	// #0
    326c:	bl	2230 <lt_dlloader_next@plt>
    3270:	mov	x19, x0
    3274:	cbz	x23, 32ec <lt__alloc_die_callback@@Base+0x24c>
    3278:	ldr	x3, [x23, #16]
    327c:	mov	x1, x20
    3280:	ldr	x0, [x23, #56]
    3284:	mov	x2, x21
    3288:	blr	x3
    328c:	str	x0, [x24, #56]
    3290:	cbz	x0, 3328 <lt__alloc_die_callback@@Base+0x288>
    3294:	cbz	x21, 32c8 <lt__alloc_die_callback@@Base+0x228>
    3298:	ldrb	w1, [x21]
    329c:	ldrb	w2, [x24, #36]
    32a0:	ubfx	x0, x1, #2, #1
    32a4:	ubfx	x3, x1, #3, #1
    32a8:	ubfx	x1, x1, #1, #1
    32ac:	ubfiz	w0, w0, #1, #7
    32b0:	ubfiz	w3, w3, #2, #6
    32b4:	orr	w0, w0, w1
    32b8:	mov	w1, w2
    32bc:	orr	w0, w0, w3
    32c0:	bfxil	w1, w0, #0, #3
    32c4:	strb	w1, [x24, #36]
    32c8:	str	x23, [x24, #8]
    32cc:	mov	x0, x22
    32d0:	bl	2410 <lt__set_last_error@plt>
    32d4:	mov	w0, #0x0                   	// #0
    32d8:	ldp	x19, x20, [sp, #16]
    32dc:	ldp	x21, x22, [sp, #32]
    32e0:	ldp	x23, x24, [sp, #48]
    32e4:	ldp	x29, x30, [sp], #64
    32e8:	ret
    32ec:	mov	x0, x19
    32f0:	bl	2140 <lt_dlloader_get@plt>
    32f4:	mov	x23, x0
    32f8:	mov	x1, x20
    32fc:	ldr	x3, [x0, #16]
    3300:	mov	x2, x21
    3304:	ldr	x0, [x0, #56]
    3308:	blr	x3
    330c:	mov	x1, x0
    3310:	str	x1, [x24, #56]
    3314:	mov	x0, x19
    3318:	cbnz	x1, 335c <lt__alloc_die_callback@@Base+0x2bc>
    331c:	bl	2230 <lt_dlloader_next@plt>
    3320:	mov	x19, x0
    3324:	cbnz	x0, 32ec <lt__alloc_die_callback@@Base+0x24c>
    3328:	ldr	x0, [x24, #16]
    332c:	bl	2400 <free@plt>
    3330:	str	xzr, [x24, #16]
    3334:	mov	w0, #0x1                   	// #1
    3338:	ldp	x19, x20, [sp, #16]
    333c:	ldp	x21, x22, [sp, #32]
    3340:	ldp	x23, x24, [sp, #48]
    3344:	ldp	x29, x30, [sp], #64
    3348:	ret
    334c:	str	xzr, [x24, #16]
    3350:	b	3268 <lt__alloc_die_callback@@Base+0x1c8>
    3354:	mov	w0, #0x1                   	// #1
    3358:	b	323c <lt__alloc_die_callback@@Base+0x19c>
    335c:	cbz	x21, 3390 <lt__alloc_die_callback@@Base+0x2f0>
    3360:	ldrb	w1, [x21]
    3364:	ldrb	w2, [x24, #36]
    3368:	ubfx	x0, x1, #2, #1
    336c:	ubfx	x3, x1, #3, #1
    3370:	ubfx	x1, x1, #1, #1
    3374:	ubfiz	w0, w0, #1, #7
    3378:	ubfiz	w3, w3, #2, #6
    337c:	orr	w0, w0, w1
    3380:	mov	w1, w2
    3384:	orr	w0, w0, w3
    3388:	bfxil	w1, w0, #0, #3
    338c:	strb	w1, [x24, #36]
    3390:	cbz	x19, 3328 <lt__alloc_die_callback@@Base+0x288>
    3394:	b	32c8 <lt__alloc_die_callback@@Base+0x228>
    3398:	stp	x29, x30, [sp, #-80]!
    339c:	mov	x29, sp
    33a0:	stp	x19, x20, [sp, #16]
    33a4:	stp	x21, x22, [sp, #32]
    33a8:	stp	x23, x24, [sp, #48]
    33ac:	stp	x25, x26, [sp, #64]
    33b0:	cbz	x2, 34bc <lt__alloc_die_callback@@Base+0x41c>
    33b4:	mov	x23, x0
    33b8:	ldrb	w0, [x2]
    33bc:	mov	x22, x1
    33c0:	mov	x19, x2
    33c4:	mov	x20, x3
    33c8:	mov	x24, x4
    33cc:	cbnz	w0, 3460 <lt__alloc_die_callback@@Base+0x3c0>
    33d0:	cbz	x3, 34e0 <lt__alloc_die_callback@@Base+0x440>
    33d4:	mov	x21, #0x2                   	// #2
    33d8:	mov	x26, #0x0                   	// #0
    33dc:	ldrb	w1, [x20]
    33e0:	mov	x0, #0x0                   	// #0
    33e4:	cbz	w1, 33f0 <lt__alloc_die_callback@@Base+0x350>
    33e8:	mov	x0, x20
    33ec:	bl	2150 <strlen@plt>
    33f0:	add	x0, x0, x21
    33f4:	mov	w25, #0x1                   	// #1
    33f8:	bl	2370 <lt__malloc@plt>
    33fc:	mov	x21, x0
    3400:	cbz	x0, 3444 <lt__alloc_die_callback@@Base+0x3a4>
    3404:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3408:	mov	x4, x20
    340c:	mov	x3, x19
    3410:	mov	w2, w26
    3414:	add	x1, x1, #0xaf8
    3418:	bl	21b0 <sprintf@plt>
    341c:	cbz	x22, 3494 <lt__alloc_die_callback@@Base+0x3f4>
    3420:	mov	x4, x24
    3424:	mov	x2, x22
    3428:	mov	x0, x23
    342c:	mov	x3, x21
    3430:	mov	x1, #0x0                   	// #0
    3434:	bl	3398 <lt__alloc_die_callback@@Base+0x2f8>
    3438:	mov	w25, w0
    343c:	mov	x0, x21
    3440:	bl	2400 <free@plt>
    3444:	mov	w0, w25
    3448:	ldp	x19, x20, [sp, #16]
    344c:	ldp	x21, x22, [sp, #32]
    3450:	ldp	x23, x24, [sp, #48]
    3454:	ldp	x25, x26, [sp, #64]
    3458:	ldp	x29, x30, [sp], #80
    345c:	ret
    3460:	mov	x0, x2
    3464:	bl	2150 <strlen@plt>
    3468:	mov	x26, x0
    346c:	cbz	x20, 34e0 <lt__alloc_die_callback@@Base+0x440>
    3470:	cbz	x0, 34b4 <lt__alloc_die_callback@@Base+0x414>
    3474:	sub	x0, x0, #0x1
    3478:	add	x21, x26, #0x2
    347c:	ldrb	w1, [x19, x0]
    3480:	cmp	w1, #0x2f
    3484:	b.ne	33dc <lt__alloc_die_callback@@Base+0x33c>  // b.any
    3488:	add	x21, x26, #0x1
    348c:	mov	x26, x0
    3490:	b	33dc <lt__alloc_die_callback@@Base+0x33c>
    3494:	mov	x2, x24
    3498:	mov	x0, x23
    349c:	mov	x1, x21
    34a0:	mov	x3, #0x0                   	// #0
    34a4:	bl	31c0 <lt__alloc_die_callback@@Base+0x120>
    34a8:	cmp	w0, #0x0
    34ac:	cset	w25, ne  // ne = any
    34b0:	b	343c <lt__alloc_die_callback@@Base+0x39c>
    34b4:	mov	x21, #0x2                   	// #2
    34b8:	b	33dc <lt__alloc_die_callback@@Base+0x33c>
    34bc:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    34c0:	add	x3, x3, #0xd58
    34c4:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    34c8:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    34cc:	add	x3, x3, #0x18
    34d0:	add	x1, x1, #0xac8
    34d4:	add	x0, x0, #0xae8
    34d8:	mov	w2, #0x1f7                 	// #503
    34dc:	bl	2500 <__assert_fail@plt>
    34e0:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    34e4:	add	x3, x3, #0xd58
    34e8:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    34ec:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    34f0:	add	x3, x3, #0x18
    34f4:	add	x1, x1, #0xac8
    34f8:	add	x0, x0, #0xaf0
    34fc:	mov	w2, #0x1f8                 	// #504
    3500:	bl	2500 <__assert_fail@plt>
    3504:	nop
    3508:	stp	x29, x30, [sp, #-64]!
    350c:	mov	x29, sp
    3510:	stp	x19, x20, [sp, #16]
    3514:	mov	x19, x1
    3518:	stp	x21, x22, [sp, #32]
    351c:	mov	x21, x0
    3520:	mov	x0, x1
    3524:	mov	w1, #0x27                  	// #39
    3528:	bl	2340 <strrchr@plt>
    352c:	ldrb	w1, [x19]
    3530:	mov	x20, x0
    3534:	cbz	w1, 35ac <lt__alloc_die_callback@@Base+0x50c>
    3538:	mov	x0, x19
    353c:	bl	2150 <strlen@plt>
    3540:	mov	x22, x0
    3544:	ldr	x0, [x21]
    3548:	bl	2400 <free@plt>
    354c:	str	xzr, [x21]
    3550:	cmp	x20, #0x0
    3554:	ccmp	x19, x20, #0x4, ne  // ne = any
    3558:	b.eq	35e0 <lt__alloc_die_callback@@Base+0x540>  // b.none
    355c:	cmp	x22, #0x3
    3560:	b.ls	35c4 <lt__alloc_die_callback@@Base+0x524>  // b.plast
    3564:	ldrb	w0, [x19]
    3568:	mov	w22, #0x0                   	// #0
    356c:	cmp	w0, #0x27
    3570:	b.ne	35c8 <lt__alloc_die_callback@@Base+0x528>  // b.any
    3574:	sub	x20, x20, x19
    3578:	str	x23, [sp, #48]
    357c:	mov	x0, x20
    3580:	bl	2370 <lt__malloc@plt>
    3584:	mov	x23, x0
    3588:	cbz	x0, 35dc <lt__alloc_die_callback@@Base+0x53c>
    358c:	sub	x2, x20, #0x1
    3590:	add	x20, x23, x20
    3594:	add	x1, x19, #0x1
    3598:	bl	2120 <memcpy@plt>
    359c:	sturb	wzr, [x20, #-1]
    35a0:	str	x23, [x21]
    35a4:	ldr	x23, [sp, #48]
    35a8:	b	35c8 <lt__alloc_die_callback@@Base+0x528>
    35ac:	ldr	x0, [x21]
    35b0:	bl	2400 <free@plt>
    35b4:	str	xzr, [x21]
    35b8:	cmp	x20, #0x0
    35bc:	ccmp	x19, x20, #0x4, ne  // ne = any
    35c0:	b.eq	35e0 <lt__alloc_die_callback@@Base+0x540>  // b.none
    35c4:	mov	w22, #0x0                   	// #0
    35c8:	mov	w0, w22
    35cc:	ldp	x19, x20, [sp, #16]
    35d0:	ldp	x21, x22, [sp, #32]
    35d4:	ldp	x29, x30, [sp], #64
    35d8:	ret
    35dc:	ldr	x23, [sp, #48]
    35e0:	mov	w22, #0x1                   	// #1
    35e4:	mov	w0, w22
    35e8:	ldp	x19, x20, [sp, #16]
    35ec:	ldp	x21, x22, [sp, #32]
    35f0:	ldp	x29, x30, [sp], #64
    35f4:	ret
    35f8:	stp	x29, x30, [sp, #-48]!
    35fc:	mov	x29, sp
    3600:	cbz	x2, 3634 <lt__alloc_die_callback@@Base+0x594>
    3604:	bl	2320 <argz_insert@plt>
    3608:	cbnz	w0, 3614 <lt__alloc_die_callback@@Base+0x574>
    360c:	ldp	x29, x30, [sp], #48
    3610:	ret
    3614:	cmp	w0, #0xc
    3618:	b.eq	3670 <lt__alloc_die_callback@@Base+0x5d0>  // b.none
    361c:	mov	w0, #0x0                   	// #0
    3620:	bl	22a0 <lt__error_string@plt>
    3624:	bl	2410 <lt__set_last_error@plt>
    3628:	mov	w0, #0x1                   	// #1
    362c:	ldp	x29, x30, [sp], #48
    3630:	ret
    3634:	stp	x19, x20, [sp, #16]
    3638:	mov	x19, x3
    363c:	mov	x20, x0
    3640:	mov	x0, x3
    3644:	str	x21, [sp, #32]
    3648:	mov	x21, x1
    364c:	bl	2150 <strlen@plt>
    3650:	mov	x2, x19
    3654:	add	x3, x0, #0x1
    3658:	mov	x1, x21
    365c:	mov	x0, x20
    3660:	bl	2390 <argz_append@plt>
    3664:	ldp	x19, x20, [sp, #16]
    3668:	ldr	x21, [sp, #32]
    366c:	b	3608 <lt__alloc_die_callback@@Base+0x568>
    3670:	mov	w0, #0xb                   	// #11
    3674:	bl	22a0 <lt__error_string@plt>
    3678:	bl	2410 <lt__set_last_error@plt>
    367c:	mov	w0, #0x1                   	// #1
    3680:	ldp	x29, x30, [sp], #48
    3684:	ret
    3688:	stp	x29, x30, [sp, #-48]!
    368c:	mov	x29, sp
    3690:	stp	x19, x20, [sp, #16]
    3694:	str	x21, [sp, #32]
    3698:	cbz	x0, 3728 <lt__alloc_die_callback@@Base+0x688>
    369c:	mov	x20, x1
    36a0:	ldrb	w1, [x0]
    36a4:	mov	x19, x0
    36a8:	cbz	w1, 3728 <lt__alloc_die_callback@@Base+0x688>
    36ac:	cbz	x20, 3770 <lt__alloc_die_callback@@Base+0x6d0>
    36b0:	mov	x21, x2
    36b4:	cbz	x2, 374c <lt__alloc_die_callback@@Base+0x6ac>
    36b8:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    36bc:	add	x1, x1, #0xb28
    36c0:	bl	2220 <fopen@plt>
    36c4:	mov	x1, x0
    36c8:	str	x1, [x21]
    36cc:	mov	w0, #0x0                   	// #0
    36d0:	cbz	x1, 3710 <lt__alloc_die_callback@@Base+0x670>
    36d4:	mov	x0, x19
    36d8:	mov	w1, #0x2f                  	// #47
    36dc:	bl	2340 <strrchr@plt>
    36e0:	cmp	x19, x0
    36e4:	b.cc	3720 <lt__alloc_die_callback@@Base+0x680>  // b.lo, b.ul, b.last
    36e8:	ldr	x0, [x20]
    36ec:	bl	2400 <free@plt>
    36f0:	str	xzr, [x20]
    36f4:	mov	x0, x19
    36f8:	bl	2180 <lt__strdup@plt>
    36fc:	mov	x1, x0
    3700:	cmp	x1, #0x0
    3704:	mov	w0, #0x1                   	// #1
    3708:	cneg	w0, w0, eq  // eq = none
    370c:	str	x1, [x20]
    3710:	ldp	x19, x20, [sp, #16]
    3714:	ldr	x21, [sp, #32]
    3718:	ldp	x29, x30, [sp], #48
    371c:	ret
    3720:	strb	wzr, [x0]
    3724:	b	36e8 <lt__alloc_die_callback@@Base+0x648>
    3728:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    372c:	add	x3, x3, #0xd58
    3730:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3734:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    3738:	add	x3, x3, #0x30
    373c:	add	x1, x1, #0xac8
    3740:	add	x0, x0, #0xb00
    3744:	mov	w2, #0x2f0                 	// #752
    3748:	bl	2500 <__assert_fail@plt>
    374c:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    3750:	add	x3, x3, #0xd58
    3754:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3758:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    375c:	add	x3, x3, #0x30
    3760:	add	x1, x1, #0xac8
    3764:	add	x0, x0, #0xb20
    3768:	mov	w2, #0x2f2                 	// #754
    376c:	bl	2500 <__assert_fail@plt>
    3770:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    3774:	add	x3, x3, #0xd58
    3778:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    377c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    3780:	add	x3, x3, #0x30
    3784:	add	x1, x1, #0xac8
    3788:	add	x0, x0, #0xb18
    378c:	mov	w2, #0x2f1                 	// #753
    3790:	bl	2500 <__assert_fail@plt>
    3794:	nop
    3798:	stp	x29, x30, [sp, #-16]!
    379c:	mov	x29, sp
    37a0:	cbz	x0, 37f8 <lt__alloc_die_callback@@Base+0x758>
    37a4:	mov	x3, x2
    37a8:	mov	x2, x1
    37ac:	mov	w1, #0x3a                  	// #58
    37b0:	bl	24b0 <argz_create_sep@plt>
    37b4:	cbnz	w0, 37c0 <lt__alloc_die_callback@@Base+0x720>
    37b8:	ldp	x29, x30, [sp], #16
    37bc:	ret
    37c0:	cmp	w0, #0xc
    37c4:	b.eq	37e0 <lt__alloc_die_callback@@Base+0x740>  // b.none
    37c8:	mov	w0, #0x0                   	// #0
    37cc:	bl	22a0 <lt__error_string@plt>
    37d0:	bl	2410 <lt__set_last_error@plt>
    37d4:	mov	w0, #0x1                   	// #1
    37d8:	ldp	x29, x30, [sp], #16
    37dc:	ret
    37e0:	mov	w0, #0xb                   	// #11
    37e4:	bl	22a0 <lt__error_string@plt>
    37e8:	bl	2410 <lt__set_last_error@plt>
    37ec:	mov	w0, #0x1                   	// #1
    37f0:	ldp	x29, x30, [sp], #16
    37f4:	ret
    37f8:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    37fc:	add	x3, x3, #0xd58
    3800:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3804:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    3808:	add	x3, x3, #0x48
    380c:	add	x1, x1, #0xac8
    3810:	add	x0, x0, #0xb30
    3814:	mov	w2, #0x28c                 	// #652
    3818:	bl	2500 <__assert_fail@plt>
    381c:	nop
    3820:	stp	x29, x30, [sp, #-144]!
    3824:	mov	x29, sp
    3828:	stp	x19, x20, [sp, #16]
    382c:	mov	x19, x0
    3830:	mov	x20, x1
    3834:	stp	x21, x22, [sp, #32]
    3838:	mov	x21, x2
    383c:	mov	x22, x3
    3840:	stp	x23, x24, [sp, #48]
    3844:	mov	x23, x4
    3848:	stp	x25, x26, [sp, #64]
    384c:	mov	x26, #0x0                   	// #0
    3850:	cbz	x1, 385c <lt__alloc_die_callback@@Base+0x7bc>
    3854:	ldrb	w0, [x1]
    3858:	cbnz	w0, 38dc <lt__alloc_die_callback@@Base+0x83c>
    385c:	stp	xzr, xzr, [sp, #120]
    3860:	str	xzr, [sp, #136]
    3864:	cbz	x19, 3870 <lt__alloc_die_callback@@Base+0x7d0>
    3868:	ldrb	w0, [x19]
    386c:	cbnz	w0, 38bc <lt__alloc_die_callback@@Base+0x81c>
    3870:	mov	w0, #0x5                   	// #5
    3874:	bl	22a0 <lt__error_string@plt>
    3878:	bl	2410 <lt__set_last_error@plt>
    387c:	mov	x25, #0x0                   	// #0
    3880:	ldr	x19, [sp, #128]
    3884:	mov	w24, #0x0                   	// #0
    3888:	mov	x0, x19
    388c:	bl	2400 <free@plt>
    3890:	ldr	x0, [sp, #136]
    3894:	bl	2400 <free@plt>
    3898:	mov	x0, x25
    389c:	bl	2400 <free@plt>
    38a0:	mov	w0, w24
    38a4:	ldp	x19, x20, [sp, #16]
    38a8:	ldp	x21, x22, [sp, #32]
    38ac:	ldp	x23, x24, [sp, #48]
    38b0:	ldp	x25, x26, [sp, #64]
    38b4:	ldp	x29, x30, [sp], #144
    38b8:	ret
    38bc:	mov	x0, x19
    38c0:	add	x1, sp, #0x88
    38c4:	bl	30b8 <lt__alloc_die_callback@@Base+0x18>
    38c8:	cbz	w0, 38ec <lt__alloc_die_callback@@Base+0x84c>
    38cc:	mov	x25, #0x0                   	// #0
    38d0:	mov	w24, #0x0                   	// #0
    38d4:	ldr	x19, [sp, #128]
    38d8:	b	3888 <lt__alloc_die_callback@@Base+0x7e8>
    38dc:	mov	x0, x1
    38e0:	bl	2150 <strlen@plt>
    38e4:	mov	x26, x0
    38e8:	b	385c <lt__alloc_die_callback@@Base+0x7bc>
    38ec:	ldr	x0, [sp, #136]
    38f0:	add	x2, sp, #0x78
    38f4:	add	x1, sp, #0x80
    38f8:	bl	3798 <lt__alloc_die_callback@@Base+0x6f8>
    38fc:	mov	w24, w0
    3900:	cbnz	w0, 39d8 <lt__alloc_die_callback@@Base+0x938>
    3904:	mov	x25, #0x0                   	// #0
    3908:	stp	x27, x28, [sp, #80]
    390c:	mov	x28, #0x0                   	// #0
    3910:	mov	x27, #0x0                   	// #0
    3914:	ldp	x0, x19, [sp, #120]
    3918:	cbz	x28, 39e8 <lt__alloc_die_callback@@Base+0x948>
    391c:	add	x1, x19, x0
    3920:	str	x1, [sp, #104]
    3924:	cmp	x28, x1
    3928:	b.cs	39ec <lt__alloc_die_callback@@Base+0x94c>  // b.hs, b.nlast
    392c:	mov	x0, x28
    3930:	bl	2150 <strlen@plt>
    3934:	ldr	x1, [sp, #104]
    3938:	add	x0, x0, #0x1
    393c:	add	x28, x28, x0
    3940:	cmp	x1, x28
    3944:	b.ls	39ec <lt__alloc_die_callback@@Base+0x94c>  // b.plast
    3948:	ldrb	w0, [x28]
    394c:	cbz	w0, 39f4 <lt__alloc_die_callback@@Base+0x954>
    3950:	mov	x0, x28
    3954:	bl	2150 <strlen@plt>
    3958:	mov	x19, x0
    395c:	add	x1, x26, x0
    3960:	add	x0, x1, #0x1
    3964:	cmp	x0, x27
    3968:	b.cs	3a0c <lt__alloc_die_callback@@Base+0x96c>  // b.hs, b.nlast
    396c:	cmp	x27, x19
    3970:	b.ls	3a2c <lt__alloc_die_callback@@Base+0x98c>  // b.plast
    3974:	mov	x1, x28
    3978:	mov	x0, x25
    397c:	bl	2460 <strcpy@plt>
    3980:	cbz	x20, 39b4 <lt__alloc_die_callback@@Base+0x914>
    3984:	ldrb	w0, [x20]
    3988:	cbz	w0, 39b4 <lt__alloc_die_callback@@Base+0x914>
    398c:	add	x0, x25, x19
    3990:	ldurb	w1, [x0, #-1]
    3994:	cmp	w1, #0x2f
    3998:	b.eq	39ac <lt__alloc_die_callback@@Base+0x90c>  // b.none
    399c:	add	x0, x19, #0x1
    39a0:	mov	w1, #0x2f                  	// #47
    39a4:	add	x0, x25, x0
    39a8:	strb	w1, [x25, x19]
    39ac:	mov	x1, x20
    39b0:	bl	2460 <strcpy@plt>
    39b4:	mov	x2, x23
    39b8:	mov	x1, x22
    39bc:	mov	x0, x25
    39c0:	blr	x21
    39c4:	cbz	w0, 3914 <lt__alloc_die_callback@@Base+0x874>
    39c8:	mov	w24, w0
    39cc:	ldp	x27, x28, [sp, #80]
    39d0:	ldr	x19, [sp, #128]
    39d4:	b	3888 <lt__alloc_die_callback@@Base+0x7e8>
    39d8:	mov	w24, #0x0                   	// #0
    39dc:	mov	x25, #0x0                   	// #0
    39e0:	ldr	x19, [sp, #128]
    39e4:	b	3888 <lt__alloc_die_callback@@Base+0x7e8>
    39e8:	cbnz	x0, 3a00 <lt__alloc_die_callback@@Base+0x960>
    39ec:	ldp	x27, x28, [sp, #80]
    39f0:	b	3888 <lt__alloc_die_callback@@Base+0x7e8>
    39f4:	mov	x1, x26
    39f8:	mov	x19, #0x0                   	// #0
    39fc:	b	3960 <lt__alloc_die_callback@@Base+0x8c0>
    3a00:	cbz	x19, 39ec <lt__alloc_die_callback@@Base+0x94c>
    3a04:	mov	x28, x19
    3a08:	b	3948 <lt__alloc_die_callback@@Base+0x8a8>
    3a0c:	mov	x0, x25
    3a10:	add	x27, x1, #0x2
    3a14:	bl	2400 <free@plt>
    3a18:	mov	x0, x27
    3a1c:	bl	2370 <lt__malloc@plt>
    3a20:	mov	x25, x0
    3a24:	cbnz	x0, 396c <lt__alloc_die_callback@@Base+0x8cc>
    3a28:	b	39cc <lt__alloc_die_callback@@Base+0x92c>
    3a2c:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    3a30:	add	x3, x3, #0xd58
    3a34:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3a38:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    3a3c:	add	x3, x3, #0x58
    3a40:	add	x1, x1, #0xac8
    3a44:	add	x0, x0, #0xb38
    3a48:	mov	w2, #0x2cd                 	// #717
    3a4c:	bl	2500 <__assert_fail@plt>
    3a50:	stp	x29, x30, [sp, #-48]!
    3a54:	mov	x29, sp
    3a58:	stp	x19, x20, [sp, #16]
    3a5c:	mov	x19, x1
    3a60:	mov	x20, x0
    3a64:	mov	w1, #0x4                   	// #4
    3a68:	str	x21, [sp, #32]
    3a6c:	mov	x21, x2
    3a70:	bl	23c0 <access@plt>
    3a74:	cbz	w0, 3a8c <lt__alloc_die_callback@@Base+0x9ec>
    3a78:	mov	w0, #0x0                   	// #0
    3a7c:	ldp	x19, x20, [sp, #16]
    3a80:	ldr	x21, [sp, #32]
    3a84:	ldp	x29, x30, [sp], #48
    3a88:	ret
    3a8c:	mov	x1, x20
    3a90:	mov	x2, x21
    3a94:	mov	x0, x19
    3a98:	mov	x3, #0x0                   	// #0
    3a9c:	bl	31c0 <lt__alloc_die_callback@@Base+0x120>
    3aa0:	mov	w1, w0
    3aa4:	mov	w0, #0x1                   	// #1
    3aa8:	cbz	w1, 3a7c <lt__alloc_die_callback@@Base+0x9dc>
    3aac:	str	xzr, [x19]
    3ab0:	ldp	x19, x20, [sp, #16]
    3ab4:	ldr	x21, [sp, #32]
    3ab8:	ldp	x29, x30, [sp], #48
    3abc:	ret
    3ac0:	stp	x29, x30, [sp, #-96]!
    3ac4:	mov	x29, sp
    3ac8:	stp	x19, x20, [sp, #16]
    3acc:	stp	xzr, xzr, [sp, #72]
    3ad0:	str	xzr, [sp, #88]
    3ad4:	cbz	x1, 3c54 <lt__alloc_die_callback@@Base+0xbb4>
    3ad8:	mov	x20, x0
    3adc:	ldrb	w0, [x1]
    3ae0:	mov	x19, x1
    3ae4:	cbz	w0, 3c54 <lt__alloc_die_callback@@Base+0xbb4>
    3ae8:	add	x1, sp, #0x48
    3aec:	mov	x0, x19
    3af0:	bl	30b8 <lt__alloc_die_callback@@Base+0x18>
    3af4:	cbnz	w0, 3be4 <lt__alloc_die_callback@@Base+0xb44>
    3af8:	ldr	x0, [sp, #72]
    3afc:	cbz	x0, 3c80 <lt__alloc_die_callback@@Base+0xbe0>
    3b00:	ldrb	w0, [x0]
    3b04:	cbz	w0, 3c80 <lt__alloc_die_callback@@Base+0xbe0>
    3b08:	stp	x21, x22, [sp, #32]
    3b0c:	adrp	x22, 19000 <lt_dlinterface_free@@Base+0x134f0>
    3b10:	add	x21, x22, #0x280
    3b14:	ldr	x0, [x21, #8]
    3b18:	cbz	x0, 3ba8 <lt__alloc_die_callback@@Base+0xb08>
    3b1c:	stp	x23, x24, [sp, #48]
    3b20:	add	x24, sp, #0x58
    3b24:	add	x23, sp, #0x50
    3b28:	mov	x2, x24
    3b2c:	mov	x1, x23
    3b30:	bl	3798 <lt__alloc_die_callback@@Base+0x6f8>
    3b34:	cbnz	w0, 3b7c <lt__alloc_die_callback@@Base+0xadc>
    3b38:	cbz	x20, 3b60 <lt__alloc_die_callback@@Base+0xac0>
    3b3c:	ldr	x0, [x21, #8]
    3b40:	cmp	x20, x0
    3b44:	b.cc	3cf8 <lt__alloc_die_callback@@Base+0xc58>  // b.lo, b.ul, b.last
    3b48:	sub	x20, x20, x0
    3b4c:	bl	2150 <strlen@plt>
    3b50:	cmp	w20, w0
    3b54:	b.gt	3cd4 <lt__alloc_die_callback@@Base+0xc34>
    3b58:	ldr	x0, [sp, #80]
    3b5c:	add	x20, x0, x20
    3b60:	mov	x3, x19
    3b64:	mov	x2, x20
    3b68:	mov	x1, x24
    3b6c:	mov	x0, x23
    3b70:	bl	35f8 <lt__alloc_die_callback@@Base+0x558>
    3b74:	mov	w19, w0
    3b78:	cbz	w0, 3c08 <lt__alloc_die_callback@@Base+0xb68>
    3b7c:	ldr	x0, [sp, #80]
    3b80:	mov	w19, #0x1                   	// #1
    3b84:	ldp	x21, x22, [sp, #32]
    3b88:	ldp	x23, x24, [sp, #48]
    3b8c:	bl	2400 <free@plt>
    3b90:	ldr	x0, [sp, #72]
    3b94:	bl	2400 <free@plt>
    3b98:	mov	w0, w19
    3b9c:	ldp	x19, x20, [sp, #16]
    3ba0:	ldp	x29, x30, [sp], #96
    3ba4:	ret
    3ba8:	cbnz	x20, 3cac <lt__alloc_die_callback@@Base+0xc0c>
    3bac:	mov	x0, x19
    3bb0:	bl	2180 <lt__strdup@plt>
    3bb4:	str	x0, [x21, #8]
    3bb8:	cmp	x0, #0x0
    3bbc:	ldp	x21, x22, [sp, #32]
    3bc0:	cset	w19, eq  // eq = none
    3bc4:	ldr	x0, [sp, #80]
    3bc8:	bl	2400 <free@plt>
    3bcc:	ldr	x0, [sp, #72]
    3bd0:	bl	2400 <free@plt>
    3bd4:	mov	w0, w19
    3bd8:	ldp	x19, x20, [sp, #16]
    3bdc:	ldp	x29, x30, [sp], #96
    3be0:	ret
    3be4:	ldr	x0, [sp, #80]
    3be8:	mov	w19, #0x1                   	// #1
    3bec:	bl	2400 <free@plt>
    3bf0:	ldr	x0, [sp, #72]
    3bf4:	bl	2400 <free@plt>
    3bf8:	mov	w0, w19
    3bfc:	ldp	x19, x20, [sp, #16]
    3c00:	ldp	x29, x30, [sp], #96
    3c04:	ret
    3c08:	ldp	x0, x1, [sp, #80]
    3c0c:	add	x22, x22, #0x280
    3c10:	mov	w2, #0x3a                  	// #58
    3c14:	bl	22f0 <argz_stringify@plt>
    3c18:	ldr	x1, [x22, #8]
    3c1c:	ldr	x0, [sp, #80]
    3c20:	cmp	x1, x0
    3c24:	b.eq	3c48 <lt__alloc_die_callback@@Base+0xba8>  // b.none
    3c28:	mov	x0, x1
    3c2c:	bl	2400 <free@plt>
    3c30:	ldr	x1, [sp, #80]
    3c34:	mov	x0, #0x0                   	// #0
    3c38:	str	x1, [x22, #8]
    3c3c:	ldp	x21, x22, [sp, #32]
    3c40:	ldp	x23, x24, [sp, #48]
    3c44:	b	3bc8 <lt__alloc_die_callback@@Base+0xb28>
    3c48:	ldp	x21, x22, [sp, #32]
    3c4c:	ldp	x23, x24, [sp, #48]
    3c50:	b	3bc8 <lt__alloc_die_callback@@Base+0xb28>
    3c54:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    3c58:	add	x3, x3, #0xd58
    3c5c:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3c60:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    3c64:	add	x3, x3, #0x70
    3c68:	add	x1, x1, #0xac8
    3c6c:	add	x0, x0, #0xb50
    3c70:	mov	w2, #0x84f                 	// #2127
    3c74:	stp	x21, x22, [sp, #32]
    3c78:	stp	x23, x24, [sp, #48]
    3c7c:	bl	2500 <__assert_fail@plt>
    3c80:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    3c84:	add	x3, x3, #0xd58
    3c88:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3c8c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    3c90:	add	x3, x3, #0x70
    3c94:	add	x1, x1, #0xac8
    3c98:	add	x0, x0, #0xb60
    3c9c:	mov	w2, #0x857                 	// #2135
    3ca0:	stp	x21, x22, [sp, #32]
    3ca4:	stp	x23, x24, [sp, #48]
    3ca8:	bl	2500 <__assert_fail@plt>
    3cac:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    3cb0:	add	x3, x3, #0xd58
    3cb4:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3cb8:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    3cbc:	add	x3, x3, #0x70
    3cc0:	add	x1, x1, #0xac8
    3cc4:	add	x0, x0, #0xb78
    3cc8:	mov	w2, #0x85c                 	// #2140
    3ccc:	stp	x23, x24, [sp, #48]
    3cd0:	bl	2500 <__assert_fail@plt>
    3cd4:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    3cd8:	add	x3, x3, #0xd58
    3cdc:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3ce0:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    3ce4:	add	x3, x3, #0x70
    3ce8:	add	x1, x1, #0xac8
    3cec:	add	x0, x0, #0xb98
    3cf0:	mov	w2, #0x876                 	// #2166
    3cf4:	bl	2500 <__assert_fail@plt>
    3cf8:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    3cfc:	add	x3, x3, #0xd58
    3d00:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    3d04:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    3d08:	add	x3, x3, #0x70
    3d0c:	add	x1, x1, #0xac8
    3d10:	add	x0, x0, #0xb80
    3d14:	mov	w2, #0x875                 	// #2165
    3d18:	bl	2500 <__assert_fail@plt>
    3d1c:	nop
    3d20:	stp	x29, x30, [sp, #-128]!
    3d24:	mov	x29, sp
    3d28:	stp	x19, x20, [sp, #16]
    3d2c:	stp	x23, x24, [sp, #48]
    3d30:	stp	xzr, xzr, [sp, #112]
    3d34:	ldr	x24, [x1]
    3d38:	cbz	x0, 401c <lt__alloc_die_callback@@Base+0xf7c>
    3d3c:	ldrb	w1, [x0]
    3d40:	mov	x20, x0
    3d44:	cbz	w1, 401c <lt__alloc_die_callback@@Base+0xf7c>
    3d48:	stp	x21, x22, [sp, #32]
    3d4c:	mov	x22, x2
    3d50:	bl	2150 <strlen@plt>
    3d54:	add	x0, x20, x0
    3d58:	ldurb	w0, [x0, #-1]
    3d5c:	cmp	w0, #0x2f
    3d60:	b.eq	404c <lt__alloc_die_callback@@Base+0xfac>  // b.none
    3d64:	mov	x0, x20
    3d68:	bl	21c0 <opendir@plt>
    3d6c:	mov	x21, x0
    3d70:	cbz	x0, 3fc8 <lt__alloc_die_callback@@Base+0xf28>
    3d74:	add	x0, sp, #0x70
    3d78:	adrp	x23, 6000 <lt__slist_cons@@Base+0x10>
    3d7c:	add	x23, x23, #0xc10
    3d80:	stp	x25, x26, [sp, #64]
    3d84:	add	x26, sp, #0x78
    3d88:	stp	x27, x28, [sp, #80]
    3d8c:	str	x0, [sp, #104]
    3d90:	b	3da0 <lt__alloc_die_callback@@Base+0xd00>
    3d94:	ldrb	w0, [x19, #19]
    3d98:	cmp	w0, #0x2e
    3d9c:	b.ne	3e44 <lt__alloc_die_callback@@Base+0xda4>  // b.any
    3da0:	mov	x0, x21
    3da4:	bl	2300 <readdir@plt>
    3da8:	mov	x19, x0
    3dac:	cbnz	x0, 3d94 <lt__alloc_die_callback@@Base+0xcf4>
    3db0:	mov	x0, x21
    3db4:	bl	2330 <closedir@plt>
    3db8:	ldr	x20, [sp, #112]
    3dbc:	cbz	x20, 3e18 <lt__alloc_die_callback@@Base+0xd78>
    3dc0:	ldr	x0, [sp, #120]
    3dc4:	cbz	x19, 3e14 <lt__alloc_die_callback@@Base+0xd74>
    3dc8:	add	x21, x20, x0
    3dcc:	cmp	x19, x21
    3dd0:	b.cs	3e18 <lt__alloc_die_callback@@Base+0xd78>  // b.hs, b.nlast
    3dd4:	mov	x0, x19
    3dd8:	bl	2150 <strlen@plt>
    3ddc:	add	x0, x0, #0x1
    3de0:	add	x19, x19, x0
    3de4:	cmp	x21, x19
    3de8:	b.ls	3e18 <lt__alloc_die_callback@@Base+0xd78>  // b.plast
    3dec:	mov	x1, x22
    3df0:	mov	x0, x19
    3df4:	blr	x24
    3df8:	mov	w21, w0
    3dfc:	ldr	x20, [sp, #112]
    3e00:	cbz	w0, 3dc0 <lt__alloc_die_callback@@Base+0xd20>
    3e04:	nop
    3e08:	ldp	x25, x26, [sp, #64]
    3e0c:	ldp	x27, x28, [sp, #80]
    3e10:	b	3e24 <lt__alloc_die_callback@@Base+0xd84>
    3e14:	cbnz	x0, 4008 <lt__alloc_die_callback@@Base+0xf68>
    3e18:	ldp	x25, x26, [sp, #64]
    3e1c:	mov	w21, #0x0                   	// #0
    3e20:	ldp	x27, x28, [sp, #80]
    3e24:	mov	x0, x20
    3e28:	bl	2400 <free@plt>
    3e2c:	mov	w0, w21
    3e30:	ldp	x19, x20, [sp, #16]
    3e34:	ldp	x21, x22, [sp, #32]
    3e38:	ldp	x23, x24, [sp, #48]
    3e3c:	ldp	x29, x30, [sp], #128
    3e40:	ret
    3e44:	ldrb	w0, [x20]
    3e48:	str	xzr, [sp, #96]
    3e4c:	cbz	w0, 3e5c <lt__alloc_die_callback@@Base+0xdbc>
    3e50:	mov	x0, x20
    3e54:	bl	2150 <strlen@plt>
    3e58:	str	x0, [sp, #96]
    3e5c:	add	x19, x19, #0x13
    3e60:	mov	x0, x19
    3e64:	bl	2150 <strlen@plt>
    3e68:	add	x27, x19, x0
    3e6c:	mov	x25, x27
    3e70:	b	3e84 <lt__alloc_die_callback@@Base+0xde4>
    3e74:	ldrb	w1, [x25]
    3e78:	mov	x0, x23
    3e7c:	bl	2430 <strchr@plt>
    3e80:	cbz	x0, 3fb4 <lt__alloc_die_callback@@Base+0xf14>
    3e84:	mov	x28, x25
    3e88:	sub	x25, x25, #0x1
    3e8c:	cmp	x19, x25
    3e90:	b.cc	3e74 <lt__alloc_die_callback@@Base+0xdd4>  // b.lo, b.ul, b.last
    3e94:	ldrb	w0, [x28]
    3e98:	cmp	w0, #0x2e
    3e9c:	b.eq	4014 <lt__alloc_die_callback@@Base+0xf74>  // b.none
    3ea0:	sub	x25, x27, #0x1
    3ea4:	cmp	x19, x25
    3ea8:	b.cc	3ebc <lt__alloc_die_callback@@Base+0xe1c>  // b.lo, b.ul, b.last
    3eac:	b	3ff0 <lt__alloc_die_callback@@Base+0xf50>
    3eb0:	sub	x25, x25, #0x1
    3eb4:	cmp	x19, x25
    3eb8:	b.eq	3ff0 <lt__alloc_die_callback@@Base+0xf50>  // b.none
    3ebc:	ldrb	w0, [x25]
    3ec0:	cmp	w0, #0x2e
    3ec4:	b.ne	3eb0 <lt__alloc_die_callback@@Base+0xe10>  // b.any
    3ec8:	ldr	x0, [sp, #96]
    3ecc:	sub	x28, x25, x19
    3ed0:	add	x27, x28, x0
    3ed4:	add	x0, x27, #0x2
    3ed8:	bl	2370 <lt__malloc@plt>
    3edc:	mov	x25, x0
    3ee0:	cbz	x0, 3fa0 <lt__alloc_die_callback@@Base+0xf00>
    3ee4:	mov	x1, x20
    3ee8:	bl	2200 <stpcpy@plt>
    3eec:	mov	x4, x0
    3ef0:	add	x27, x25, x27
    3ef4:	mov	w5, #0x2f                  	// #47
    3ef8:	mov	x2, x28
    3efc:	mov	x1, x19
    3f00:	mov	x0, x25
    3f04:	strh	w5, [x4]
    3f08:	bl	2470 <strncat@plt>
    3f0c:	strb	wzr, [x27, #1]
    3f10:	ldrb	w0, [x25]
    3f14:	cbz	w0, 4078 <lt__alloc_die_callback@@Base+0xfd8>
    3f18:	ldr	x27, [sp, #112]
    3f1c:	cbz	x27, 3f7c <lt__alloc_die_callback@@Base+0xedc>
    3f20:	ldr	x0, [sp, #120]
    3f24:	mov	x28, #0x0                   	// #0
    3f28:	str	x0, [sp, #96]
    3f2c:	add	x19, x27, x0
    3f30:	cbz	x28, 3ff8 <lt__alloc_die_callback@@Base+0xf58>
    3f34:	cmp	x28, x19
    3f38:	b.cs	3f7c <lt__alloc_die_callback@@Base+0xedc>  // b.hs, b.nlast
    3f3c:	mov	x0, x28
    3f40:	bl	2150 <strlen@plt>
    3f44:	add	x0, x0, #0x1
    3f48:	add	x28, x28, x0
    3f4c:	cmp	x19, x28
    3f50:	b.ls	3f7c <lt__alloc_die_callback@@Base+0xedc>  // b.plast
    3f54:	mov	x1, x28
    3f58:	mov	x0, x25
    3f5c:	bl	23e0 <strcmp@plt>
    3f60:	cmp	w0, #0x0
    3f64:	b.lt	3f80 <lt__alloc_die_callback@@Base+0xee0>  // b.tstop
    3f68:	b.ne	3f30 <lt__alloc_die_callback@@Base+0xe90>  // b.any
    3f6c:	nop
    3f70:	mov	x0, x25
    3f74:	bl	2400 <free@plt>
    3f78:	b	3da0 <lt__alloc_die_callback@@Base+0xd00>
    3f7c:	mov	x28, #0x0                   	// #0
    3f80:	ldr	x0, [sp, #104]
    3f84:	mov	x2, x28
    3f88:	mov	x3, x25
    3f8c:	mov	x1, x26
    3f90:	bl	35f8 <lt__alloc_die_callback@@Base+0x558>
    3f94:	cbz	w0, 3f70 <lt__alloc_die_callback@@Base+0xed0>
    3f98:	mov	x0, x25
    3f9c:	bl	2400 <free@plt>
    3fa0:	mov	x0, x21
    3fa4:	mov	w21, #0x0                   	// #0
    3fa8:	bl	2330 <closedir@plt>
    3fac:	ldr	x20, [sp, #112]
    3fb0:	b	3e08 <lt__alloc_die_callback@@Base+0xd68>
    3fb4:	ldrb	w0, [x28]
    3fb8:	cmp	w0, #0x2e
    3fbc:	b.ne	3ea0 <lt__alloc_die_callback@@Base+0xe00>  // b.any
    3fc0:	mov	x27, x28
    3fc4:	b	3ebc <lt__alloc_die_callback@@Base+0xe1c>
    3fc8:	ldr	x20, [sp, #112]
    3fcc:	mov	w21, #0x0                   	// #0
    3fd0:	mov	x0, x20
    3fd4:	bl	2400 <free@plt>
    3fd8:	mov	w0, w21
    3fdc:	ldp	x19, x20, [sp, #16]
    3fe0:	ldp	x21, x22, [sp, #32]
    3fe4:	ldp	x23, x24, [sp, #48]
    3fe8:	ldp	x29, x30, [sp], #128
    3fec:	ret
    3ff0:	mov	x25, x27
    3ff4:	b	3ec8 <lt__alloc_die_callback@@Base+0xe28>
    3ff8:	ldr	x0, [sp, #96]
    3ffc:	cbz	x0, 3f80 <lt__alloc_die_callback@@Base+0xee0>
    4000:	mov	x28, x27
    4004:	b	3f54 <lt__alloc_die_callback@@Base+0xeb4>
    4008:	cbz	x20, 3e18 <lt__alloc_die_callback@@Base+0xd78>
    400c:	mov	x19, x20
    4010:	b	3dec <lt__alloc_die_callback@@Base+0xd4c>
    4014:	mov	x25, x28
    4018:	b	3ec8 <lt__alloc_die_callback@@Base+0xe28>
    401c:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    4020:	add	x3, x3, #0xd58
    4024:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4028:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    402c:	add	x3, x3, #0x88
    4030:	add	x1, x1, #0xac8
    4034:	add	x0, x0, #0xbd0
    4038:	mov	w2, #0x730                 	// #1840
    403c:	stp	x21, x22, [sp, #32]
    4040:	stp	x25, x26, [sp, #64]
    4044:	stp	x27, x28, [sp, #80]
    4048:	bl	2500 <__assert_fail@plt>
    404c:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    4050:	add	x3, x3, #0xd58
    4054:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4058:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    405c:	add	x3, x3, #0x88
    4060:	add	x1, x1, #0xac8
    4064:	add	x0, x0, #0xbe8
    4068:	mov	w2, #0x733                 	// #1843
    406c:	stp	x25, x26, [sp, #64]
    4070:	stp	x27, x28, [sp, #80]
    4074:	bl	2500 <__assert_fail@plt>
    4078:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    407c:	add	x3, x3, #0xd58
    4080:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4084:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4088:	add	x3, x3, #0xa0
    408c:	add	x1, x1, #0xac8
    4090:	add	x0, x0, #0xc20
    4094:	mov	w2, #0x6dd                 	// #1757
    4098:	bl	2500 <__assert_fail@plt>
    409c:	nop
    40a0:	stp	x29, x30, [sp, #-48]!
    40a4:	mov	x29, sp
    40a8:	stp	x19, x20, [sp, #16]
    40ac:	str	x21, [sp, #32]
    40b0:	cbz	x0, 4110 <lt__alloc_die_callback@@Base+0x1070>
    40b4:	mov	x1, x0
    40b8:	mov	x0, #0x0                   	// #0
    40bc:	blr	x1
    40c0:	cmp	x0, #0x0
    40c4:	mov	x20, x0
    40c8:	cset	w21, ne  // ne = any
    40cc:	mov	x0, x20
    40d0:	bl	24a0 <lt_dlloader_add@plt>
    40d4:	cmp	w0, #0x0
    40d8:	mov	w19, w0
    40dc:	ccmp	w21, #0x0, #0x0, eq  // eq = none
    40e0:	b.eq	4140 <lt__alloc_die_callback@@Base+0x10a0>  // b.none
    40e4:	cbnz	w0, 40fc <lt__alloc_die_callback@@Base+0x105c>
    40e8:	ldr	x1, [x20, #40]
    40ec:	cbz	x1, 40fc <lt__alloc_die_callback@@Base+0x105c>
    40f0:	ldr	x0, [x20, #56]
    40f4:	blr	x1
    40f8:	cbnz	w0, 411c <lt__alloc_die_callback@@Base+0x107c>
    40fc:	mov	w0, w19
    4100:	ldp	x19, x20, [sp, #16]
    4104:	ldr	x21, [sp, #32]
    4108:	ldp	x29, x30, [sp], #48
    410c:	ret
    4110:	mov	w21, #0x0                   	// #0
    4114:	mov	x20, #0x0                   	// #0
    4118:	b	40cc <lt__alloc_die_callback@@Base+0x102c>
    411c:	mov	w19, #0x1                   	// #1
    4120:	mov	w0, #0x3                   	// #3
    4124:	bl	22a0 <lt__error_string@plt>
    4128:	bl	2410 <lt__set_last_error@plt>
    412c:	mov	w0, w19
    4130:	ldp	x19, x20, [sp, #16]
    4134:	ldr	x21, [sp, #32]
    4138:	ldp	x29, x30, [sp], #48
    413c:	ret
    4140:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    4144:	add	x3, x3, #0xd58
    4148:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    414c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4150:	add	x3, x3, #0xb8
    4154:	add	x1, x1, #0xac8
    4158:	add	x0, x0, #0xc30
    415c:	mov	w2, #0xc7                  	// #199
    4160:	bl	2500 <__assert_fail@plt>
    4164:	nop

0000000000004168 <lt_dlinit@@Base>:
    4168:	adrp	x3, 19000 <lt_dlinterface_free@@Base+0x134f0>
    416c:	add	x2, x3, #0x280
    4170:	mov	w0, #0x0                   	// #0
    4174:	ldr	w1, [x2, #16]
    4178:	add	w1, w1, #0x1
    417c:	str	w1, [x2, #16]
    4180:	cmp	w1, #0x1
    4184:	b.eq	418c <lt_dlinit@@Base+0x24>  // b.none
    4188:	ret
    418c:	stp	x29, x30, [sp, #-16]!
    4190:	adrp	x1, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    4194:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    4198:	adrp	x4, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    419c:	mov	x29, sp
    41a0:	ldr	x1, [x1, #4040]
    41a4:	str	xzr, [x3, #640]
    41a8:	ldr	x4, [x4, #4056]
    41ac:	str	xzr, [x2, #8]
    41b0:	ldr	x0, [x0, #4032]
    41b4:	str	x4, [x1]
    41b8:	bl	40a0 <lt__alloc_die_callback@@Base+0x1000>
    41bc:	cbz	w0, 41c8 <lt_dlinit@@Base+0x60>
    41c0:	ldp	x29, x30, [sp], #16
    41c4:	ret
    41c8:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11a88>
    41cc:	ldr	x0, [x0, #4000]
    41d0:	bl	2550 <lt_dlpreload@plt>
    41d4:	cbnz	w0, 41c0 <lt_dlinit@@Base+0x58>
    41d8:	ldp	x29, x30, [sp], #16
    41dc:	adrp	x1, 5000 <lt_dlexit@@Base+0x9f8>
    41e0:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    41e4:	add	x1, x1, #0x880
    41e8:	add	x0, x0, #0xc48
    41ec:	b	22d0 <lt_dlpreload_open@plt>

00000000000041f0 <lt_dladvise_init@@Base>:
    41f0:	stp	x29, x30, [sp, #-32]!
    41f4:	mov	x29, sp
    41f8:	str	x19, [sp, #16]
    41fc:	mov	x19, x0
    4200:	mov	x0, #0x4                   	// #4
    4204:	bl	2420 <lt__zalloc@plt>
    4208:	cmp	x0, #0x0
    420c:	str	x0, [x19]
    4210:	cset	w0, eq  // eq = none
    4214:	ldr	x19, [sp, #16]
    4218:	ldp	x29, x30, [sp], #32
    421c:	ret

0000000000004220 <lt_dladvise_destroy@@Base>:
    4220:	cbz	x0, 4250 <lt_dladvise_destroy@@Base+0x30>
    4224:	stp	x29, x30, [sp, #-32]!
    4228:	mov	x29, sp
    422c:	str	x19, [sp, #16]
    4230:	mov	x19, x0
    4234:	ldr	x0, [x0]
    4238:	bl	2400 <free@plt>
    423c:	str	xzr, [x19]
    4240:	mov	w0, #0x0                   	// #0
    4244:	ldr	x19, [sp, #16]
    4248:	ldp	x29, x30, [sp], #32
    424c:	ret
    4250:	mov	w0, #0x0                   	// #0
    4254:	ret

0000000000004258 <lt_dladvise_ext@@Base>:
    4258:	cbz	x0, 4278 <lt_dladvise_ext@@Base+0x20>
    425c:	ldr	x1, [x0]
    4260:	cbz	x1, 4278 <lt_dladvise_ext@@Base+0x20>
    4264:	ldrb	w2, [x1]
    4268:	mov	w0, #0x0                   	// #0
    426c:	orr	w2, w2, #0x1
    4270:	strb	w2, [x1]
    4274:	ret
    4278:	stp	x29, x30, [sp, #-16]!
    427c:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    4280:	add	x3, x3, #0xd58
    4284:	mov	x29, sp
    4288:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    428c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4290:	add	x3, x3, #0xc8
    4294:	add	x1, x1, #0xac8
    4298:	add	x0, x0, #0xc50
    429c:	mov	w2, #0x631                 	// #1585
    42a0:	bl	2500 <__assert_fail@plt>
    42a4:	nop

00000000000042a8 <lt_dladvise_resident@@Base>:
    42a8:	cbz	x0, 42c8 <lt_dladvise_resident@@Base+0x20>
    42ac:	ldr	x1, [x0]
    42b0:	cbz	x1, 42c8 <lt_dladvise_resident@@Base+0x20>
    42b4:	ldrb	w2, [x1]
    42b8:	mov	w0, #0x0                   	// #0
    42bc:	orr	w2, w2, #0x2
    42c0:	strb	w2, [x1]
    42c4:	ret
    42c8:	stp	x29, x30, [sp, #-16]!
    42cc:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    42d0:	add	x3, x3, #0xd58
    42d4:	mov	x29, sp
    42d8:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    42dc:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    42e0:	add	x3, x3, #0xd8
    42e4:	add	x1, x1, #0xac8
    42e8:	add	x0, x0, #0xc50
    42ec:	mov	w2, #0x639                 	// #1593
    42f0:	bl	2500 <__assert_fail@plt>
    42f4:	nop

00000000000042f8 <lt_dladvise_local@@Base>:
    42f8:	cbz	x0, 4318 <lt_dladvise_local@@Base+0x20>
    42fc:	ldr	x1, [x0]
    4300:	cbz	x1, 4318 <lt_dladvise_local@@Base+0x20>
    4304:	ldrb	w2, [x1]
    4308:	mov	w0, #0x0                   	// #0
    430c:	orr	w2, w2, #0x8
    4310:	strb	w2, [x1]
    4314:	ret
    4318:	stp	x29, x30, [sp, #-16]!
    431c:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    4320:	add	x3, x3, #0xd58
    4324:	mov	x29, sp
    4328:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    432c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4330:	add	x3, x3, #0xf0
    4334:	add	x1, x1, #0xac8
    4338:	add	x0, x0, #0xc50
    433c:	mov	w2, #0x641                 	// #1601
    4340:	bl	2500 <__assert_fail@plt>
    4344:	nop

0000000000004348 <lt_dladvise_global@@Base>:
    4348:	cbz	x0, 4368 <lt_dladvise_global@@Base+0x20>
    434c:	ldr	x1, [x0]
    4350:	cbz	x1, 4368 <lt_dladvise_global@@Base+0x20>
    4354:	ldrb	w2, [x1]
    4358:	mov	w0, #0x0                   	// #0
    435c:	orr	w2, w2, #0x4
    4360:	strb	w2, [x1]
    4364:	ret
    4368:	stp	x29, x30, [sp, #-16]!
    436c:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    4370:	add	x3, x3, #0xd58
    4374:	mov	x29, sp
    4378:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    437c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4380:	add	x3, x3, #0x108
    4384:	add	x1, x1, #0xac8
    4388:	add	x0, x0, #0xc50
    438c:	mov	w2, #0x649                 	// #1609
    4390:	bl	2500 <__assert_fail@plt>
    4394:	nop

0000000000004398 <lt_dladvise_preload@@Base>:
    4398:	cbz	x0, 43b8 <lt_dladvise_preload@@Base+0x20>
    439c:	ldr	x1, [x0]
    43a0:	cbz	x1, 43b8 <lt_dladvise_preload@@Base+0x20>
    43a4:	ldrb	w2, [x1]
    43a8:	mov	w0, #0x0                   	// #0
    43ac:	orr	w2, w2, #0x10
    43b0:	strb	w2, [x1]
    43b4:	ret
    43b8:	stp	x29, x30, [sp, #-16]!
    43bc:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    43c0:	add	x3, x3, #0xd58
    43c4:	mov	x29, sp
    43c8:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    43cc:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    43d0:	add	x3, x3, #0x120
    43d4:	add	x1, x1, #0xac8
    43d8:	add	x0, x0, #0xc50
    43dc:	mov	w2, #0x651                 	// #1617
    43e0:	bl	2500 <__assert_fail@plt>
    43e4:	nop

00000000000043e8 <lt_dlforeachfile@@Base>:
    43e8:	stp	x29, x30, [sp, #-64]!
    43ec:	mov	x29, sp
    43f0:	stp	x19, x20, [sp, #16]
    43f4:	mov	x19, x2
    43f8:	str	x1, [sp, #56]
    43fc:	cbz	x0, 4424 <lt_dlforeachfile@@Base+0x3c>
    4400:	mov	x4, x2
    4404:	add	x3, sp, #0x38
    4408:	adrp	x2, 3000 <lt__get_last_error@@Base+0x8>
    440c:	mov	x1, #0x0                   	// #0
    4410:	add	x2, x2, #0xd20
    4414:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    4418:	ldp	x19, x20, [sp, #16]
    441c:	ldp	x29, x30, [sp], #64
    4420:	ret
    4424:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    4428:	adrp	x20, 3000 <lt__get_last_error@@Base+0x8>
    442c:	add	x20, x20, #0xd20
    4430:	str	x21, [sp, #32]
    4434:	ldr	x0, [x0, #648]
    4438:	add	x21, sp, #0x38
    443c:	mov	x2, x20
    4440:	mov	x4, x19
    4444:	mov	x3, x21
    4448:	mov	x1, #0x0                   	// #0
    444c:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    4450:	cbz	w0, 4464 <lt_dlforeachfile@@Base+0x7c>
    4454:	ldp	x19, x20, [sp, #16]
    4458:	ldr	x21, [sp, #32]
    445c:	ldp	x29, x30, [sp], #64
    4460:	ret
    4464:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4468:	add	x0, x0, #0xc68
    446c:	bl	2510 <getenv@plt>
    4470:	mov	x4, x19
    4474:	mov	x3, x21
    4478:	mov	x2, x20
    447c:	mov	x1, #0x0                   	// #0
    4480:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    4484:	cbnz	w0, 4454 <lt_dlforeachfile@@Base+0x6c>
    4488:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    448c:	add	x0, x0, #0xc80
    4490:	bl	2510 <getenv@plt>
    4494:	mov	x4, x19
    4498:	mov	x3, x21
    449c:	mov	x2, x20
    44a0:	mov	x1, #0x0                   	// #0
    44a4:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    44a8:	cbnz	w0, 4454 <lt_dlforeachfile@@Base+0x6c>
    44ac:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    44b0:	add	x0, x0, #0xd58
    44b4:	mov	x3, x21
    44b8:	mov	x4, x19
    44bc:	mov	x2, x20
    44c0:	add	x0, x0, #0x138
    44c4:	mov	x1, #0x0                   	// #0
    44c8:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    44cc:	ldr	x21, [sp, #32]
    44d0:	b	4418 <lt_dlforeachfile@@Base+0x30>
    44d4:	nop

00000000000044d8 <lt_dlclose@@Base>:
    44d8:	stp	x29, x30, [sp, #-32]!
    44dc:	adrp	x4, 19000 <lt_dlinterface_free@@Base+0x134f0>
    44e0:	mov	x29, sp
    44e4:	ldr	x3, [x4, #640]
    44e8:	stp	x19, x20, [sp, #16]
    44ec:	mov	x19, x0
    44f0:	cmp	x3, #0x0
    44f4:	ccmp	x3, x0, #0x4, ne  // ne = any
    44f8:	b.eq	45dc <lt_dlclose@@Base+0x104>  // b.none
    44fc:	mov	x1, x3
    4500:	mov	x2, x1
    4504:	ldr	x1, [x1]
    4508:	cmp	x1, #0x0
    450c:	ccmp	x19, x1, #0x4, ne  // ne = any
    4510:	b.ne	4500 <lt_dlclose@@Base+0x28>  // b.any
    4514:	cbz	x1, 45e8 <lt_dlclose@@Base+0x110>
    4518:	ldr	w0, [x19, #32]
    451c:	ldrb	w1, [x19, #36]
    4520:	sub	w0, w0, #0x1
    4524:	str	w0, [x19, #32]
    4528:	and	w1, w1, #0x1
    452c:	cmp	w0, #0x0
    4530:	b.le	454c <lt_dlclose@@Base+0x74>
    4534:	mov	w20, #0x0                   	// #0
    4538:	cbnz	w1, 4550 <lt_dlclose@@Base+0x78>
    453c:	mov	w0, w20
    4540:	ldp	x19, x20, [sp, #16]
    4544:	ldp	x29, x30, [sp], #32
    4548:	ret
    454c:	cbz	w1, 4570 <lt_dlclose@@Base+0x98>
    4550:	mov	w20, #0x1                   	// #1
    4554:	mov	w0, #0x10                  	// #16
    4558:	bl	22a0 <lt__error_string@plt>
    455c:	bl	2410 <lt__set_last_error@plt>
    4560:	mov	w0, w20
    4564:	ldp	x19, x20, [sp, #16]
    4568:	ldp	x29, x30, [sp], #32
    456c:	ret
    4570:	cmp	x3, x19
    4574:	ldp	x3, x1, [x19]
    4578:	ldr	x0, [x1, #56]
    457c:	b.eq	45fc <lt_dlclose@@Base+0x124>  // b.none
    4580:	str	x3, [x2]
    4584:	ldr	x2, [x1, #24]
    4588:	ldr	x1, [x19, #56]
    458c:	blr	x2
    4590:	mov	w20, w0
    4594:	ldr	w1, [x19, #40]
    4598:	cbz	w1, 45ac <lt_dlclose@@Base+0xd4>
    459c:	add	x1, x19, #0x30
    45a0:	add	x0, x19, #0x28
    45a4:	bl	47c0 <lt_dlexit@@Base+0x1b8>
    45a8:	add	w20, w20, w0
    45ac:	ldr	x0, [x19, #72]
    45b0:	bl	2400 <free@plt>
    45b4:	ldr	x0, [x19, #16]
    45b8:	bl	2400 <free@plt>
    45bc:	ldr	x0, [x19, #24]
    45c0:	bl	2400 <free@plt>
    45c4:	mov	x0, x19
    45c8:	bl	2400 <free@plt>
    45cc:	mov	w0, w20
    45d0:	ldp	x19, x20, [sp, #16]
    45d4:	ldp	x29, x30, [sp], #32
    45d8:	ret
    45dc:	mov	x2, x3
    45e0:	mov	x1, x3
    45e4:	b	4514 <lt_dlclose@@Base+0x3c>
    45e8:	mov	w20, #0x1                   	// #1
    45ec:	mov	w0, #0xc                   	// #12
    45f0:	bl	22a0 <lt__error_string@plt>
    45f4:	bl	2410 <lt__set_last_error@plt>
    45f8:	b	453c <lt_dlclose@@Base+0x64>
    45fc:	str	x3, [x4, #640]
    4600:	b	4584 <lt_dlclose@@Base+0xac>
    4604:	nop

0000000000004608 <lt_dlexit@@Base>:
    4608:	stp	x29, x30, [sp, #-48]!
    460c:	mov	x29, sp
    4610:	stp	x21, x22, [sp, #32]
    4614:	adrp	x22, 19000 <lt_dlinterface_free@@Base+0x134f0>
    4618:	add	x1, x22, #0x280
    461c:	ldr	w0, [x1, #16]
    4620:	cbz	w0, 46a0 <lt_dlexit@@Base+0x98>
    4624:	sub	w0, w0, #0x1
    4628:	str	w0, [x1, #16]
    462c:	ldr	x3, [x22, #640]
    4630:	mov	w21, #0x0                   	// #0
    4634:	cbnz	w0, 46b0 <lt_dlexit@@Base+0xa8>
    4638:	stp	x19, x20, [sp, #16]
    463c:	mov	x0, x3
    4640:	mov	w2, #0x0                   	// #0
    4644:	cbnz	x3, 4658 <lt_dlexit@@Base+0x50>
    4648:	b	47a4 <lt_dlexit@@Base+0x19c>
    464c:	ldr	x0, [x0]
    4650:	mov	w2, #0x1                   	// #1
    4654:	cbz	x0, 47a0 <lt_dlexit@@Base+0x198>
    4658:	ldrb	w1, [x0, #36]
    465c:	tbnz	w1, #0, 464c <lt_dlexit@@Base+0x44>
    4660:	cbz	w2, 47b4 <lt_dlexit@@Base+0x1ac>
    4664:	str	x0, [x22, #640]
    4668:	mov	w21, #0x0                   	// #0
    466c:	mov	w20, #0x1                   	// #1
    4670:	mov	w2, #0x0                   	// #0
    4674:	nop
    4678:	ldrb	w1, [x0, #36]
    467c:	ldr	x19, [x0]
    4680:	tbnz	w1, #0, 4694 <lt_dlexit@@Base+0x8c>
    4684:	ldr	w1, [x0, #32]
    4688:	mov	w2, #0x1                   	// #1
    468c:	cmp	w1, w20
    4690:	b.le	46c0 <lt_dlexit@@Base+0xb8>
    4694:	cbz	x19, 4740 <lt_dlexit@@Base+0x138>
    4698:	mov	x0, x19
    469c:	b	4678 <lt_dlexit@@Base+0x70>
    46a0:	mov	w0, #0xf                   	// #15
    46a4:	mov	w21, #0x1                   	// #1
    46a8:	bl	22a0 <lt__error_string@plt>
    46ac:	bl	2410 <lt__set_last_error@plt>
    46b0:	mov	w0, w21
    46b4:	ldp	x21, x22, [sp, #32]
    46b8:	ldp	x29, x30, [sp], #48
    46bc:	ret
    46c0:	bl	2130 <lt_dlclose@plt>
    46c4:	cmp	w0, #0x0
    46c8:	cinc	w21, w21, ne  // ne = any
    46cc:	cbnz	x19, 4748 <lt_dlexit@@Base+0x140>
    46d0:	ldr	x0, [x22, #640]
    46d4:	add	w20, w20, #0x1
    46d8:	cbnz	x0, 4670 <lt_dlexit@@Base+0x68>
    46dc:	cbz	w21, 47a4 <lt_dlexit@@Base+0x19c>
    46e0:	mov	x0, #0x0                   	// #0
    46e4:	bl	2230 <lt_dlloader_next@plt>
    46e8:	mov	x19, x0
    46ec:	cbz	x19, 471c <lt_dlexit@@Base+0x114>
    46f0:	mov	x0, x19
    46f4:	mov	x20, x19
    46f8:	bl	2230 <lt_dlloader_next@plt>
    46fc:	mov	x19, x0
    4700:	mov	x0, x20
    4704:	bl	2140 <lt_dlloader_get@plt>
    4708:	ldr	x0, [x0]
    470c:	bl	24f0 <lt_dlloader_remove@plt>
    4710:	cbz	x0, 4780 <lt_dlexit@@Base+0x178>
    4714:	bl	2400 <free@plt>
    4718:	cbnz	x19, 46f0 <lt_dlexit@@Base+0xe8>
    471c:	add	x22, x22, #0x280
    4720:	ldr	x0, [x22, #8]
    4724:	bl	2400 <free@plt>
    4728:	str	xzr, [x22, #8]
    472c:	mov	w0, w21
    4730:	ldp	x19, x20, [sp, #16]
    4734:	ldp	x21, x22, [sp, #32]
    4738:	ldp	x29, x30, [sp], #48
    473c:	ret
    4740:	cbnz	w2, 46d0 <lt_dlexit@@Base+0xc8>
    4744:	b	46dc <lt_dlexit@@Base+0xd4>
    4748:	ldr	x1, [x22, #640]
    474c:	cbz	x1, 46d0 <lt_dlexit@@Base+0xc8>
    4750:	cmp	x19, x1
    4754:	b.eq	4770 <lt_dlexit@@Base+0x168>  // b.none
    4758:	mov	x0, x1
    475c:	b	4764 <lt_dlexit@@Base+0x15c>
    4760:	b.eq	4790 <lt_dlexit@@Base+0x188>  // b.none
    4764:	ldr	x0, [x0]
    4768:	cmp	x19, x0
    476c:	cbnz	x0, 4760 <lt_dlexit@@Base+0x158>
    4770:	mov	x19, x1
    4774:	mov	w2, #0x1                   	// #1
    4778:	mov	x0, x19
    477c:	b	4678 <lt_dlexit@@Base+0x70>
    4780:	bl	2190 <lt__get_last_error@plt>
    4784:	cmp	x0, #0x0
    4788:	cinc	w21, w21, ne  // ne = any
    478c:	b	46ec <lt_dlexit@@Base+0xe4>
    4790:	mov	x1, x19
    4794:	mov	w2, #0x1                   	// #1
    4798:	mov	x19, x1
    479c:	b	4778 <lt_dlexit@@Base+0x170>
    47a0:	str	xzr, [x22, #640]
    47a4:	mov	w21, #0x0                   	// #0
    47a8:	mov	x0, #0x0                   	// #0
    47ac:	bl	2410 <lt__set_last_error@plt>
    47b0:	b	46e0 <lt_dlexit@@Base+0xd8>
    47b4:	mov	x0, x3
    47b8:	b	4668 <lt_dlexit@@Base+0x60>
    47bc:	nop
    47c0:	stp	x29, x30, [sp, #-48]!
    47c4:	mov	x29, sp
    47c8:	ldr	w4, [x0]
    47cc:	stp	x19, x20, [sp, #16]
    47d0:	mov	x20, x1
    47d4:	cmp	w4, #0x0
    47d8:	stp	x21, x22, [sp, #32]
    47dc:	ldr	x3, [x1]
    47e0:	b.le	4844 <lt_dlexit@@Base+0x23c>
    47e4:	mov	x22, x0
    47e8:	mov	x19, #0x0                   	// #0
    47ec:	mov	w21, #0x0                   	// #0
    47f0:	b	47fc <lt_dlexit@@Base+0x1f4>
    47f4:	cmp	w4, w19
    47f8:	b.le	4824 <lt_dlexit@@Base+0x21c>
    47fc:	ldr	x0, [x3, x19, lsl #3]
    4800:	add	x19, x19, #0x1
    4804:	ldrb	w2, [x0, #36]
    4808:	tbnz	w2, #0, 47f4 <lt_dlexit@@Base+0x1ec>
    480c:	bl	2130 <lt_dlclose@plt>
    4810:	add	w21, w21, w0
    4814:	ldr	w4, [x22]
    4818:	ldr	x3, [x20]
    481c:	cmp	w4, w19
    4820:	b.gt	47fc <lt_dlexit@@Base+0x1f4>
    4824:	mov	x0, x3
    4828:	bl	2400 <free@plt>
    482c:	mov	w0, w21
    4830:	ldp	x21, x22, [sp, #32]
    4834:	str	xzr, [x20]
    4838:	ldp	x19, x20, [sp, #16]
    483c:	ldp	x29, x30, [sp], #48
    4840:	ret
    4844:	mov	x0, x3
    4848:	mov	w21, #0x0                   	// #0
    484c:	bl	2400 <free@plt>
    4850:	mov	w0, w21
    4854:	ldp	x21, x22, [sp, #32]
    4858:	str	xzr, [x20]
    485c:	ldp	x19, x20, [sp, #16]
    4860:	ldp	x29, x30, [sp], #48
    4864:	ret
    4868:	stp	x29, x30, [sp, #-224]!
    486c:	mov	x29, sp
    4870:	stp	x21, x22, [sp, #32]
    4874:	mov	x21, x0
    4878:	ldr	x0, [x0]
    487c:	stp	x19, x20, [sp, #16]
    4880:	stp	x23, x24, [sp, #48]
    4884:	str	x3, [sp, #104]
    4888:	stp	xzr, xzr, [sp, #160]
    488c:	cbnz	x0, 5334 <lt_dlexit@@Base+0xd2c>
    4890:	mov	x19, x1
    4894:	mov	x22, x2
    4898:	stp	x27, x28, [sp, #80]
    489c:	bl	2190 <lt__get_last_error@plt>
    48a0:	str	x0, [sp, #112]
    48a4:	cbz	x19, 4cc4 <lt_dlexit@@Base+0x6bc>
    48a8:	ldrb	w0, [x19]
    48ac:	cbz	w0, 5388 <lt_dlexit@@Base+0xd80>
    48b0:	mov	x0, x19
    48b4:	cbz	x22, 4bfc <lt_dlexit@@Base+0x5f4>
    48b8:	bl	2150 <strlen@plt>
    48bc:	mov	x20, x0
    48c0:	ldrb	w1, [x22]
    48c4:	mov	x0, #0x0                   	// #0
    48c8:	cbz	w1, 48d4 <lt_dlexit@@Base+0x2cc>
    48cc:	mov	x0, x22
    48d0:	bl	2150 <strlen@plt>
    48d4:	add	x20, x20, #0x1
    48d8:	add	x0, x20, x0
    48dc:	bl	2370 <lt__malloc@plt>
    48e0:	mov	x23, x0
    48e4:	cbz	x0, 4c08 <lt_dlexit@@Base+0x600>
    48e8:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    48ec:	mov	x3, x22
    48f0:	mov	x2, x19
    48f4:	add	x1, x1, #0xca0
    48f8:	bl	21b0 <sprintf@plt>
    48fc:	add	x1, sp, #0xa0
    4900:	mov	x0, x23
    4904:	bl	30b8 <lt__alloc_die_callback@@Base+0x18>
    4908:	mov	w24, w0
    490c:	cbnz	w0, 4c7c <lt_dlexit@@Base+0x674>
    4910:	ldr	x22, [sp, #160]
    4914:	mov	w1, #0x2f                  	// #47
    4918:	mov	x0, x22
    491c:	bl	2340 <strrchr@plt>
    4920:	mov	x19, x0
    4924:	cbz	x0, 4cbc <lt_dlexit@@Base+0x6b4>
    4928:	add	x28, x0, #0x1
    492c:	sub	x20, x28, x22
    4930:	add	x0, x20, #0x1
    4934:	bl	2370 <lt__malloc@plt>
    4938:	str	x0, [sp, #168]
    493c:	mov	x27, x0
    4940:	cbz	x0, 4c28 <lt_dlexit@@Base+0x620>
    4944:	ldr	x1, [sp, #160]
    4948:	mov	x2, x20
    494c:	mov	x22, x28
    4950:	bl	2380 <lt_strlcpy@plt>
    4954:	ldr	x0, [sp, #168]
    4958:	strb	wzr, [x0, x20]
    495c:	ldrb	w0, [x22]
    4960:	cbz	w0, 5360 <lt_dlexit@@Base+0xd58>
    4964:	mov	x0, x22
    4968:	mov	w1, #0x2e                  	// #46
    496c:	bl	2340 <strrchr@plt>
    4970:	mov	x20, x0
    4974:	cbz	x0, 4dd8 <lt_dlexit@@Base+0x7d0>
    4978:	sub	x27, x20, x22
    497c:	add	x0, x27, #0x1
    4980:	bl	2370 <lt__malloc@plt>
    4984:	mov	x19, x0
    4988:	cbz	x0, 4de8 <lt_dlexit@@Base+0x7e0>
    498c:	cmp	x27, #0x0
    4990:	b.le	49c8 <lt_dlexit@@Base+0x3c0>
    4994:	bl	23f0 <__ctype_b_loc@plt>
    4998:	mov	x1, #0x0                   	// #0
    499c:	mov	w5, #0x5f                  	// #95
    49a0:	ldrb	w2, [x22, x1]
    49a4:	ldr	x4, [x0]
    49a8:	ubfiz	x3, x2, #1, #8
    49ac:	ldrh	w3, [x4, x3]
    49b0:	tst	x3, #0x8
    49b4:	csel	w2, w2, w5, ne  // ne = any
    49b8:	strb	w2, [x19, x1]
    49bc:	add	x1, x1, #0x1
    49c0:	cmp	x27, x1
    49c4:	b.ne	49a0 <lt_dlexit@@Base+0x398>  // b.any
    49c8:	strb	wzr, [x19, x27]
    49cc:	ldr	x0, [sp, #168]
    49d0:	cbz	x0, 4df8 <lt_dlexit@@Base+0x7f0>
    49d4:	mov	x27, #0x0                   	// #0
    49d8:	ldr	x0, [sp, #104]
    49dc:	cbz	x0, 49e8 <lt_dlexit@@Base+0x3e0>
    49e0:	ldrb	w0, [x0]
    49e4:	tbnz	w0, #4, 4dd0 <lt_dlexit@@Base+0x7c8>
    49e8:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    49ec:	add	x1, x0, #0xd58
    49f0:	add	x1, x1, #0x180
    49f4:	mov	x0, x20
    49f8:	bl	23e0 <strcmp@plt>
    49fc:	cbnz	w0, 4d80 <lt_dlexit@@Base+0x778>
    4a00:	ldr	x0, [sp, #168]
    4a04:	stp	x25, x26, [sp, #64]
    4a08:	stp	xzr, xzr, [sp, #184]
    4a0c:	stp	xzr, xzr, [sp, #200]
    4a10:	cbz	x0, 4ef0 <lt_dlexit@@Base+0x8e8>
    4a14:	mov	x0, x23
    4a18:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4a1c:	add	x1, x1, #0xb28
    4a20:	bl	2220 <fopen@plt>
    4a24:	mov	x24, x0
    4a28:	cbz	x24, 5074 <lt_dlexit@@Base+0xa6c>
    4a2c:	mov	x0, #0x800                 	// #2048
    4a30:	bl	2370 <lt__malloc@plt>
    4a34:	mov	w1, #0x1                   	// #1
    4a38:	str	w1, [sp, #140]
    4a3c:	mov	x28, x0
    4a40:	mov	x20, #0x800                 	// #2048
    4a44:	cbz	x0, 5314 <lt_dlexit@@Base+0xd0c>
    4a48:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4a4c:	add	x0, x0, #0xcd8
    4a50:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4a54:	add	x1, x1, #0xcd0
    4a58:	str	x1, [sp, #128]
    4a5c:	str	x0, [sp, #144]
    4a60:	add	x0, sp, #0xb8
    4a64:	str	x0, [sp, #152]
    4a68:	mov	x0, x24
    4a6c:	bl	23d0 <feof@plt>
    4a70:	cbnz	w0, 5178 <lt_dlexit@@Base+0xb70>
    4a74:	add	x4, x28, x20
    4a78:	mov	x2, x24
    4a7c:	mov	w1, w20
    4a80:	mov	x0, x28
    4a84:	str	x4, [sp, #120]
    4a88:	sturb	wzr, [x4, #-2]
    4a8c:	bl	2530 <fgets@plt>
    4a90:	ldr	x4, [sp, #120]
    4a94:	cbnz	x0, 4ae8 <lt_dlexit@@Base+0x4e0>
    4a98:	b	5178 <lt_dlexit@@Base+0xb70>
    4a9c:	mov	x0, x24
    4aa0:	bl	23d0 <feof@plt>
    4aa4:	cbnz	w0, 4af8 <lt_dlexit@@Base+0x4f0>
    4aa8:	lsl	x25, x20, #1
    4aac:	mov	x0, x28
    4ab0:	mov	x1, x25
    4ab4:	bl	24d0 <lt__realloc@plt>
    4ab8:	mov	x28, x0
    4abc:	cbz	x0, 4fe8 <lt_dlexit@@Base+0x9e0>
    4ac0:	add	x26, x0, x25
    4ac4:	sub	x0, x20, #0x1
    4ac8:	add	x0, x28, x0
    4acc:	mov	x2, x24
    4ad0:	add	w1, w20, #0x1
    4ad4:	sturb	wzr, [x26, #-2]
    4ad8:	bl	2530 <fgets@plt>
    4adc:	cbz	x0, 4af8 <lt_dlexit@@Base+0x4f0>
    4ae0:	mov	x20, x25
    4ae4:	mov	x4, x26
    4ae8:	ldurb	w0, [x4, #-2]
    4aec:	cmp	w0, #0x0
    4af0:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    4af4:	b.ne	4a9c <lt_dlexit@@Base+0x494>  // b.any
    4af8:	ldrb	w0, [x28]
    4afc:	cmp	w0, #0x23
    4b00:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    4b04:	b.eq	4a68 <lt_dlexit@@Base+0x460>  // b.none
    4b08:	ldr	x1, [sp, #128]
    4b0c:	mov	x0, x28
    4b10:	mov	x2, #0x7                   	// #7
    4b14:	bl	2280 <strncmp@plt>
    4b18:	cbz	w0, 4fd8 <lt_dlexit@@Base+0x9d0>
    4b1c:	ldr	x1, [sp, #144]
    4b20:	mov	x0, x28
    4b24:	mov	x2, #0xc                   	// #12
    4b28:	bl	2280 <strncmp@plt>
    4b2c:	cbz	w0, 5054 <lt_dlexit@@Base+0xa4c>
    4b30:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4b34:	mov	x0, x28
    4b38:	add	x1, x1, #0xce8
    4b3c:	mov	x2, #0x7                   	// #7
    4b40:	bl	2280 <strncmp@plt>
    4b44:	cbz	w0, 5064 <lt_dlexit@@Base+0xa5c>
    4b48:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4b4c:	mov	x0, x28
    4b50:	add	x1, x1, #0xcf0
    4b54:	mov	x2, #0x10                  	// #16
    4b58:	bl	2280 <strncmp@plt>
    4b5c:	cbz	w0, 515c <lt_dlexit@@Base+0xb54>
    4b60:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4b64:	mov	x0, x28
    4b68:	add	x1, x1, #0xd08
    4b6c:	bl	23e0 <strcmp@plt>
    4b70:	cbz	w0, 516c <lt_dlexit@@Base+0xb64>
    4b74:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4b78:	mov	x0, x28
    4b7c:	add	x1, x1, #0xd18
    4b80:	bl	23e0 <strcmp@plt>
    4b84:	cbz	w0, 532c <lt_dlexit@@Base+0xd24>
    4b88:	ldr	x0, [sp, #184]
    4b8c:	cbnz	x0, 4a68 <lt_dlexit@@Base+0x460>
    4b90:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4b94:	mov	x0, x28
    4b98:	add	x1, x1, #0xd28
    4b9c:	mov	x2, #0xe                   	// #14
    4ba0:	bl	2280 <strncmp@plt>
    4ba4:	cbnz	w0, 4a68 <lt_dlexit@@Base+0x460>
    4ba8:	ldr	x0, [sp, #152]
    4bac:	add	x1, x28, #0xe
    4bb0:	bl	3508 <lt__alloc_die_callback@@Base+0x468>
    4bb4:	cbnz	w0, 4fe8 <lt_dlexit@@Base+0x9e0>
    4bb8:	ldr	x0, [sp, #184]
    4bbc:	cbz	x0, 4a68 <lt_dlexit@@Base+0x460>
    4bc0:	mov	w1, #0x20                  	// #32
    4bc4:	bl	2340 <strrchr@plt>
    4bc8:	cbz	x0, 4a68 <lt_dlexit@@Base+0x460>
    4bcc:	add	x0, x0, #0x1
    4bd0:	bl	2180 <lt__strdup@plt>
    4bd4:	mov	x1, x0
    4bd8:	cbz	x0, 4fe8 <lt_dlexit@@Base+0x9e0>
    4bdc:	ldr	x0, [sp, #184]
    4be0:	str	x1, [sp, #120]
    4be4:	cmp	x1, x0
    4be8:	b.eq	4a68 <lt_dlexit@@Base+0x460>  // b.none
    4bec:	bl	2400 <free@plt>
    4bf0:	ldr	x1, [sp, #120]
    4bf4:	str	x1, [sp, #184]
    4bf8:	b	4a68 <lt_dlexit@@Base+0x460>
    4bfc:	bl	2180 <lt__strdup@plt>
    4c00:	mov	x23, x0
    4c04:	cbnz	x0, 48fc <lt_dlexit@@Base+0x2f4>
    4c08:	mov	w24, #0x1                   	// #1
    4c0c:	mov	w0, w24
    4c10:	ldp	x19, x20, [sp, #16]
    4c14:	ldp	x21, x22, [sp, #32]
    4c18:	ldp	x23, x24, [sp, #48]
    4c1c:	ldp	x27, x28, [sp, #80]
    4c20:	ldp	x29, x30, [sp], #224
    4c24:	ret
    4c28:	mov	x22, x19
    4c2c:	mov	x0, #0x0                   	// #0
    4c30:	mov	x19, #0x0                   	// #0
    4c34:	mov	w24, #0x1                   	// #1
    4c38:	bl	2400 <free@plt>
    4c3c:	mov	x0, x23
    4c40:	bl	2400 <free@plt>
    4c44:	mov	x0, x19
    4c48:	bl	2400 <free@plt>
    4c4c:	ldr	x0, [sp, #160]
    4c50:	cbz	x0, 4cac <lt_dlexit@@Base+0x6a4>
    4c54:	bl	2400 <free@plt>
    4c58:	mov	x0, x27
    4c5c:	bl	2400 <free@plt>
    4c60:	mov	w0, w24
    4c64:	ldp	x19, x20, [sp, #16]
    4c68:	ldp	x21, x22, [sp, #32]
    4c6c:	ldp	x23, x24, [sp, #48]
    4c70:	ldp	x27, x28, [sp, #80]
    4c74:	ldp	x29, x30, [sp], #224
    4c78:	ret
    4c7c:	ldr	x0, [sp, #168]
    4c80:	mov	x19, #0x0                   	// #0
    4c84:	mov	x22, #0x0                   	// #0
    4c88:	mov	x27, #0x0                   	// #0
    4c8c:	mov	w24, #0x1                   	// #1
    4c90:	bl	2400 <free@plt>
    4c94:	mov	x0, x23
    4c98:	bl	2400 <free@plt>
    4c9c:	mov	x0, x19
    4ca0:	bl	2400 <free@plt>
    4ca4:	ldr	x0, [sp, #160]
    4ca8:	cbnz	x0, 4c54 <lt_dlexit@@Base+0x64c>
    4cac:	mov	x0, x22
    4cb0:	bl	2400 <free@plt>
    4cb4:	ldr	x0, [sp, #160]
    4cb8:	b	4c54 <lt_dlexit@@Base+0x64c>
    4cbc:	str	xzr, [sp, #160]
    4cc0:	b	495c <lt_dlexit@@Base+0x354>
    4cc4:	mov	x0, #0x58                  	// #88
    4cc8:	bl	2420 <lt__zalloc@plt>
    4ccc:	str	x0, [x21]
    4cd0:	mov	x4, x0
    4cd4:	cbz	x0, 4c08 <lt_dlexit@@Base+0x600>
    4cd8:	ldrb	w0, [x0, #36]
    4cdc:	mov	x3, #0x0                   	// #0
    4ce0:	ldr	x2, [sp, #104]
    4ce4:	orr	w0, w0, #0x1
    4ce8:	strb	w0, [x4, #36]
    4cec:	mov	x1, #0x0                   	// #0
    4cf0:	add	x0, sp, #0xb0
    4cf4:	str	x4, [sp, #176]
    4cf8:	bl	31c0 <lt__alloc_die_callback@@Base+0x120>
    4cfc:	cbnz	w0, 4fc4 <lt_dlexit@@Base+0x9bc>
    4d00:	ldr	x0, [x21]
    4d04:	mov	x23, #0x0                   	// #0
    4d08:	ldr	x1, [sp, #176]
    4d0c:	mov	x22, #0x0                   	// #0
    4d10:	mov	x27, #0x0                   	// #0
    4d14:	cmp	x0, x1
    4d18:	b.eq	4d2c <lt_dlexit@@Base+0x724>  // b.none
    4d1c:	bl	2400 <free@plt>
    4d20:	ldr	x1, [sp, #176]
    4d24:	str	x1, [x21]
    4d28:	str	xzr, [sp, #176]
    4d2c:	ldr	w0, [x1, #32]
    4d30:	cbnz	w0, 4d6c <lt_dlexit@@Base+0x764>
    4d34:	ldr	x0, [x1, #24]
    4d38:	mov	w2, #0x1                   	// #1
    4d3c:	str	w2, [x1, #32]
    4d40:	cmp	x0, x19
    4d44:	b.eq	4d58 <lt_dlexit@@Base+0x750>  // b.none
    4d48:	bl	2400 <free@plt>
    4d4c:	ldr	x1, [x21]
    4d50:	str	x19, [x1, #24]
    4d54:	mov	x19, #0x0                   	// #0
    4d58:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    4d5c:	ldr	x2, [x0, #640]
    4d60:	str	x2, [x1]
    4d64:	ldr	x1, [x21]
    4d68:	str	x1, [x0, #640]
    4d6c:	ldr	x0, [sp, #112]
    4d70:	mov	w24, #0x0                   	// #0
    4d74:	bl	2410 <lt__set_last_error@plt>
    4d78:	ldr	x0, [sp, #168]
    4d7c:	b	4c38 <lt_dlexit@@Base+0x630>
    4d80:	mov	x0, #0x58                  	// #88
    4d84:	bl	2420 <lt__zalloc@plt>
    4d88:	str	x0, [x21]
    4d8c:	cbz	x0, 5048 <lt_dlexit@@Base+0xa40>
    4d90:	ldr	x1, [sp, #168]
    4d94:	str	x0, [sp, #176]
    4d98:	cbz	x1, 4eb0 <lt_dlexit@@Base+0x8a8>
    4d9c:	add	x20, sp, #0xb0
    4da0:	ldr	x2, [sp, #104]
    4da4:	mov	x0, x20
    4da8:	mov	x1, x23
    4dac:	mov	x3, #0x0                   	// #0
    4db0:	bl	31c0 <lt__alloc_die_callback@@Base+0x120>
    4db4:	cbz	w0, 4edc <lt_dlexit@@Base+0x8d4>
    4db8:	ldr	x2, [x21]
    4dbc:	str	xzr, [sp, #176]
    4dc0:	mov	x0, x2
    4dc4:	mov	w24, #0x1                   	// #1
    4dc8:	bl	2400 <free@plt>
    4dcc:	str	xzr, [x21]
    4dd0:	ldr	x0, [sp, #168]
    4dd4:	b	4c38 <lt_dlexit@@Base+0x630>
    4dd8:	mov	x0, x22
    4ddc:	bl	2150 <strlen@plt>
    4de0:	add	x20, x22, x0
    4de4:	b	4978 <lt_dlexit@@Base+0x370>
    4de8:	mov	x27, #0x0                   	// #0
    4dec:	mov	w24, #0x1                   	// #1
    4df0:	ldr	x0, [sp, #168]
    4df4:	b	4c38 <lt_dlexit@@Base+0x630>
    4df8:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4dfc:	add	x0, x0, #0x660
    4e00:	bl	2560 <lt_dlloader_find@plt>
    4e04:	mov	x28, x0
    4e08:	cbz	x0, 49d4 <lt_dlexit@@Base+0x3cc>
    4e0c:	ldrb	w1, [x19]
    4e10:	mov	x0, #0x6                   	// #6
    4e14:	cbz	w1, 4e24 <lt_dlexit@@Base+0x81c>
    4e18:	mov	x0, x19
    4e1c:	bl	2150 <strlen@plt>
    4e20:	add	x0, x0, #0x6
    4e24:	bl	2370 <lt__malloc@plt>
    4e28:	mov	x27, x0
    4e2c:	mov	x0, #0x58                  	// #88
    4e30:	bl	2420 <lt__zalloc@plt>
    4e34:	str	x0, [x21]
    4e38:	cbz	x0, 5048 <lt_dlexit@@Base+0xa40>
    4e3c:	cbz	x27, 5048 <lt_dlexit@@Base+0xa40>
    4e40:	str	x0, [sp, #176]
    4e44:	ldrb	w0, [x19]
    4e48:	cmp	w0, #0x6c
    4e4c:	b.ne	5104 <lt_dlexit@@Base+0xafc>  // b.any
    4e50:	ldrb	w0, [x19, #1]
    4e54:	cmp	w0, #0x69
    4e58:	b.ne	5104 <lt_dlexit@@Base+0xafc>  // b.any
    4e5c:	ldrb	w0, [x19, #2]
    4e60:	cmp	w0, #0x62
    4e64:	b.ne	5104 <lt_dlexit@@Base+0xafc>  // b.any
    4e68:	adrp	x2, 6000 <lt__slist_cons@@Base+0x10>
    4e6c:	add	x2, x2, #0xd58
    4e70:	add	x4, x2, #0x170
    4e74:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    4e78:	add	x2, x2, #0x178
    4e7c:	add	x3, x19, #0x3
    4e80:	add	x1, x1, #0xcc0
    4e84:	mov	x0, x27
    4e88:	bl	21b0 <sprintf@plt>
    4e8c:	ldr	x2, [sp, #104]
    4e90:	mov	x3, x28
    4e94:	mov	x1, x27
    4e98:	add	x0, sp, #0xb0
    4e9c:	bl	31c0 <lt__alloc_die_callback@@Base+0x120>
    4ea0:	cbnz	w0, 5128 <lt_dlexit@@Base+0xb20>
    4ea4:	ldr	x0, [x21]
    4ea8:	ldr	x1, [sp, #176]
    4eac:	b	4d14 <lt_dlexit@@Base+0x70c>
    4eb0:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    4eb4:	add	x20, sp, #0xb0
    4eb8:	ldr	x0, [x0, #648]
    4ebc:	cbz	x0, 5088 <lt_dlexit@@Base+0xa80>
    4ec0:	ldr	x4, [sp, #104]
    4ec4:	adrp	x24, 3000 <lt__get_last_error@@Base+0x8>
    4ec8:	mov	x3, x20
    4ecc:	add	x2, x24, #0xa50
    4ed0:	mov	x1, x22
    4ed4:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    4ed8:	cbz	w0, 508c <lt_dlexit@@Base+0xa84>
    4edc:	ldr	x1, [sp, #176]
    4ee0:	ldr	x2, [x21]
    4ee4:	mov	x0, x2
    4ee8:	cbnz	x1, 4d14 <lt_dlexit@@Base+0x70c>
    4eec:	b	4dc0 <lt_dlexit@@Base+0x7b8>
    4ef0:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    4ef4:	ldr	x0, [x0, #648]
    4ef8:	cbz	x0, 513c <lt_dlexit@@Base+0xb34>
    4efc:	add	x20, sp, #0xd8
    4f00:	add	x3, sp, #0xa8
    4f04:	mov	x4, x20
    4f08:	mov	x1, x22
    4f0c:	adrp	x25, 3000 <lt__get_last_error@@Base+0x8>
    4f10:	add	x2, x25, #0x688
    4f14:	str	x3, [sp, #120]
    4f18:	str	xzr, [sp, #216]
    4f1c:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    4f20:	ldr	x24, [sp, #216]
    4f24:	cbnz	x24, 4a2c <lt_dlexit@@Base+0x424>
    4f28:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4f2c:	add	x0, x0, #0xc68
    4f30:	bl	2510 <getenv@plt>
    4f34:	ldr	x3, [sp, #120]
    4f38:	cbz	x0, 4f60 <lt_dlexit@@Base+0x958>
    4f3c:	mov	x4, x20
    4f40:	add	x2, x25, #0x688
    4f44:	mov	x1, x22
    4f48:	str	x3, [sp, #120]
    4f4c:	str	xzr, [sp, #216]
    4f50:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    4f54:	ldr	x24, [sp, #216]
    4f58:	ldr	x3, [sp, #120]
    4f5c:	cbnz	x24, 4a2c <lt_dlexit@@Base+0x424>
    4f60:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4f64:	add	x0, x0, #0xc80
    4f68:	str	x3, [sp, #120]
    4f6c:	bl	2510 <getenv@plt>
    4f70:	ldr	x3, [sp, #120]
    4f74:	cbz	x0, 4f9c <lt_dlexit@@Base+0x994>
    4f78:	mov	x4, x20
    4f7c:	add	x2, x25, #0x688
    4f80:	mov	x1, x22
    4f84:	str	x3, [sp, #120]
    4f88:	str	xzr, [sp, #216]
    4f8c:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    4f90:	ldr	x24, [sp, #216]
    4f94:	ldr	x3, [sp, #120]
    4f98:	cbnz	x24, 4a2c <lt_dlexit@@Base+0x424>
    4f9c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    4fa0:	add	x0, x0, #0xd58
    4fa4:	mov	x4, x20
    4fa8:	add	x2, x25, #0x688
    4fac:	add	x0, x0, #0x138
    4fb0:	mov	x1, x22
    4fb4:	str	xzr, [sp, #216]
    4fb8:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    4fbc:	ldr	x24, [sp, #216]
    4fc0:	b	4a28 <lt_dlexit@@Base+0x420>
    4fc4:	ldr	x0, [x21]
    4fc8:	mov	w24, #0x1                   	// #1
    4fcc:	bl	2400 <free@plt>
    4fd0:	str	xzr, [x21]
    4fd4:	b	4c0c <lt_dlexit@@Base+0x604>
    4fd8:	ldr	x0, [sp, #152]
    4fdc:	add	x1, x28, #0x7
    4fe0:	bl	3508 <lt__alloc_die_callback@@Base+0x468>
    4fe4:	cbz	w0, 4a68 <lt_dlexit@@Base+0x460>
    4fe8:	mov	x0, x28
    4fec:	bl	2400 <free@plt>
    4ff0:	mov	x0, x24
    4ff4:	bl	2210 <fclose@plt>
    4ff8:	mov	x0, #0x58                  	// #88
    4ffc:	bl	2420 <lt__zalloc@plt>
    5000:	cmp	x0, #0x0
    5004:	str	x0, [x21]
    5008:	cset	w24, eq  // eq = none
    500c:	add	w24, w24, #0x1
    5010:	ldr	x0, [sp, #184]
    5014:	bl	2400 <free@plt>
    5018:	ldr	x0, [sp, #192]
    501c:	bl	2400 <free@plt>
    5020:	ldr	x0, [sp, #200]
    5024:	bl	2400 <free@plt>
    5028:	ldr	x0, [sp, #208]
    502c:	bl	2400 <free@plt>
    5030:	ldr	x0, [x21]
    5034:	bl	2400 <free@plt>
    5038:	str	xzr, [x21]
    503c:	ldp	x25, x26, [sp, #64]
    5040:	ldr	x0, [sp, #168]
    5044:	b	4c38 <lt_dlexit@@Base+0x630>
    5048:	mov	w24, #0x1                   	// #1
    504c:	ldr	x0, [sp, #168]
    5050:	b	4c38 <lt_dlexit@@Base+0x630>
    5054:	add	x1, x28, #0xc
    5058:	add	x0, sp, #0xc0
    505c:	bl	3508 <lt__alloc_die_callback@@Base+0x468>
    5060:	b	4fe4 <lt_dlexit@@Base+0x9dc>
    5064:	add	x1, x28, #0x7
    5068:	add	x0, sp, #0xc8
    506c:	bl	3508 <lt__alloc_die_callback@@Base+0x468>
    5070:	b	4fe4 <lt_dlexit@@Base+0x9dc>
    5074:	mov	w24, #0x1                   	// #1
    5078:	mov	w0, #0x5                   	// #5
    507c:	bl	22a0 <lt__error_string@plt>
    5080:	bl	2410 <lt__set_last_error@plt>
    5084:	b	503c <lt_dlexit@@Base+0xa34>
    5088:	adrp	x24, 3000 <lt__get_last_error@@Base+0x8>
    508c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5090:	add	x0, x0, #0xc68
    5094:	bl	2510 <getenv@plt>
    5098:	cbz	x0, 50b4 <lt_dlexit@@Base+0xaac>
    509c:	ldr	x4, [sp, #104]
    50a0:	mov	x3, x20
    50a4:	add	x2, x24, #0xa50
    50a8:	mov	x1, x22
    50ac:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    50b0:	cbnz	w0, 4edc <lt_dlexit@@Base+0x8d4>
    50b4:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    50b8:	add	x0, x0, #0xc80
    50bc:	bl	2510 <getenv@plt>
    50c0:	cbz	x0, 50dc <lt_dlexit@@Base+0xad4>
    50c4:	ldr	x4, [sp, #104]
    50c8:	mov	x3, x20
    50cc:	add	x2, x24, #0xa50
    50d0:	mov	x1, x22
    50d4:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    50d8:	cbnz	w0, 4edc <lt_dlexit@@Base+0x8d4>
    50dc:	ldr	x4, [sp, #104]
    50e0:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    50e4:	add	x0, x0, #0xd58
    50e8:	add	x2, x24, #0xa50
    50ec:	add	x0, x0, #0x138
    50f0:	mov	x3, x20
    50f4:	mov	x1, x22
    50f8:	bl	3820 <lt__alloc_die_callback@@Base+0x780>
    50fc:	cbnz	w0, 4edc <lt_dlexit@@Base+0x8d4>
    5100:	b	4da0 <lt_dlexit@@Base+0x798>
    5104:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5108:	add	x3, x3, #0xd58
    510c:	add	x3, x3, #0x170
    5110:	mov	x2, x19
    5114:	mov	x0, x27
    5118:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    511c:	add	x1, x1, #0xcc8
    5120:	bl	21b0 <sprintf@plt>
    5124:	b	4e8c <lt_dlexit@@Base+0x884>
    5128:	ldr	x0, [x21]
    512c:	bl	2400 <free@plt>
    5130:	str	xzr, [x21]
    5134:	str	xzr, [sp, #176]
    5138:	b	49d8 <lt_dlexit@@Base+0x3d0>
    513c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5140:	add	x0, x0, #0xc68
    5144:	bl	2510 <getenv@plt>
    5148:	add	x20, sp, #0xd8
    514c:	add	x3, sp, #0xa8
    5150:	adrp	x25, 3000 <lt__get_last_error@@Base+0x8>
    5154:	cbnz	x0, 4f3c <lt_dlexit@@Base+0x934>
    5158:	b	4f60 <lt_dlexit@@Base+0x958>
    515c:	add	x1, x28, #0x10
    5160:	add	x0, sp, #0xd0
    5164:	bl	3508 <lt__alloc_die_callback@@Base+0x468>
    5168:	b	4fe4 <lt_dlexit@@Base+0x9dc>
    516c:	mov	w0, #0x1                   	// #1
    5170:	str	w0, [sp, #140]
    5174:	b	4a68 <lt_dlexit@@Base+0x460>
    5178:	mov	x0, x28
    517c:	bl	2400 <free@plt>
    5180:	mov	x0, x24
    5184:	bl	2210 <fclose@plt>
    5188:	mov	x0, #0x58                  	// #88
    518c:	bl	2420 <lt__zalloc@plt>
    5190:	str	x0, [x21]
    5194:	cbz	x0, 53b0 <lt_dlexit@@Base+0xda8>
    5198:	ldp	x20, x24, [sp, #184]
    519c:	str	wzr, [x0, #40]
    51a0:	str	x0, [sp, #176]
    51a4:	ldr	x5, [sp, #168]
    51a8:	ldr	x4, [sp, #200]
    51ac:	cbz	x24, 52d4 <lt_dlexit@@Base+0xccc>
    51b0:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    51b4:	add	x0, x0, #0x660
    51b8:	stp	x5, x4, [sp, #120]
    51bc:	bl	2560 <lt_dlloader_find@plt>
    51c0:	mov	x1, x24
    51c4:	ldr	x2, [sp, #104]
    51c8:	mov	x3, x0
    51cc:	add	x0, sp, #0xb0
    51d0:	bl	31c0 <lt__alloc_die_callback@@Base+0x120>
    51d4:	cbz	w0, 5270 <lt_dlexit@@Base+0xc68>
    51d8:	ldp	x5, x4, [sp, #120]
    51dc:	cbz	x20, 5218 <lt_dlexit@@Base+0xc10>
    51e0:	ldr	w0, [sp, #140]
    51e4:	cmp	x4, #0x0
    51e8:	csel	w0, w0, wzr, ne  // ne = any
    51ec:	cbnz	w0, 52ec <lt_dlexit@@Base+0xce4>
    51f0:	ldr	w0, [sp, #140]
    51f4:	cbz	w0, 5244 <lt_dlexit@@Base+0xc3c>
    51f8:	cbz	x5, 5218 <lt_dlexit@@Base+0xc10>
    51fc:	ldr	x4, [sp, #104]
    5200:	mov	x3, x20
    5204:	mov	x2, x5
    5208:	add	x0, sp, #0xb0
    520c:	mov	x1, #0x0                   	// #0
    5210:	bl	3398 <lt__alloc_die_callback@@Base+0x2f8>
    5214:	cbz	w0, 5270 <lt_dlexit@@Base+0xc68>
    5218:	ldr	x0, [x21]
    521c:	ldr	w1, [x0, #40]
    5220:	cbz	w1, 5324 <lt_dlexit@@Base+0xd1c>
    5224:	add	x1, x0, #0x30
    5228:	add	x0, x0, #0x28
    522c:	bl	47c0 <lt_dlexit@@Base+0x1b8>
    5230:	ldr	x20, [sp, #184]
    5234:	mov	x0, x20
    5238:	mov	w24, #0x1                   	// #1
    523c:	bl	2400 <free@plt>
    5240:	b	5018 <lt_dlexit@@Base+0xa10>
    5244:	ldr	x4, [sp, #104]
    5248:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    524c:	add	x2, x0, #0xd58
    5250:	mov	x1, x5
    5254:	add	x2, x2, #0x188
    5258:	mov	x3, x20
    525c:	add	x0, sp, #0xb0
    5260:	str	x5, [sp, #120]
    5264:	bl	3398 <lt__alloc_die_callback@@Base+0x2f8>
    5268:	ldr	x5, [sp, #120]
    526c:	cbnz	w0, 51f8 <lt_dlexit@@Base+0xbf0>
    5270:	ldr	x0, [sp, #184]
    5274:	bl	2400 <free@plt>
    5278:	str	xzr, [sp, #184]
    527c:	ldr	x0, [sp, #192]
    5280:	bl	2400 <free@plt>
    5284:	str	xzr, [sp, #192]
    5288:	ldr	x0, [sp, #200]
    528c:	bl	2400 <free@plt>
    5290:	str	xzr, [sp, #200]
    5294:	ldr	x0, [sp, #208]
    5298:	bl	2400 <free@plt>
    529c:	str	xzr, [sp, #208]
    52a0:	ldr	x0, [x21]
    52a4:	ldr	x1, [sp, #176]
    52a8:	cmp	x0, x1
    52ac:	b.eq	52e4 <lt_dlexit@@Base+0xcdc>  // b.none
    52b0:	ldr	w2, [x0, #40]
    52b4:	cbz	w2, 52dc <lt_dlexit@@Base+0xcd4>
    52b8:	add	x1, x0, #0x30
    52bc:	add	x0, x0, #0x28
    52c0:	bl	47c0 <lt_dlexit@@Base+0x1b8>
    52c4:	ldr	x0, [x21]
    52c8:	ldp	x25, x26, [sp, #64]
    52cc:	ldr	x1, [sp, #176]
    52d0:	b	4d14 <lt_dlexit@@Base+0x70c>
    52d4:	cbnz	x20, 51e0 <lt_dlexit@@Base+0xbd8>
    52d8:	b	5234 <lt_dlexit@@Base+0xc2c>
    52dc:	ldp	x25, x26, [sp, #64]
    52e0:	b	4d14 <lt_dlexit@@Base+0x70c>
    52e4:	ldp	x25, x26, [sp, #64]
    52e8:	b	4d2c <lt_dlexit@@Base+0x724>
    52ec:	mov	x2, x4
    52f0:	mov	x3, x20
    52f4:	ldr	x4, [sp, #104]
    52f8:	add	x0, sp, #0xb0
    52fc:	mov	x1, #0x0                   	// #0
    5300:	str	x5, [sp, #120]
    5304:	bl	3398 <lt__alloc_die_callback@@Base+0x2f8>
    5308:	ldr	x5, [sp, #120]
    530c:	cbnz	w0, 51f8 <lt_dlexit@@Base+0xbf0>
    5310:	b	5270 <lt_dlexit@@Base+0xc68>
    5314:	mov	w0, #0x5                   	// #5
    5318:	bl	22a0 <lt__error_string@plt>
    531c:	bl	2410 <lt__set_last_error@plt>
    5320:	b	4ff0 <lt_dlexit@@Base+0x9e8>
    5324:	ldr	x20, [sp, #184]
    5328:	b	5234 <lt_dlexit@@Base+0xc2c>
    532c:	str	wzr, [sp, #140]
    5330:	b	4a68 <lt_dlexit@@Base+0x460>
    5334:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5338:	add	x3, x3, #0xd58
    533c:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    5340:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5344:	add	x3, x3, #0x160
    5348:	add	x1, x1, #0xac8
    534c:	add	x0, x0, #0xc90
    5350:	mov	w2, #0x495                 	// #1173
    5354:	stp	x25, x26, [sp, #64]
    5358:	stp	x27, x28, [sp, #80]
    535c:	bl	2500 <__assert_fail@plt>
    5360:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5364:	add	x3, x3, #0xd58
    5368:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    536c:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5370:	add	x3, x3, #0x160
    5374:	add	x1, x1, #0xac8
    5378:	add	x0, x0, #0xca8
    537c:	mov	w2, #0x4e3                 	// #1251
    5380:	stp	x25, x26, [sp, #64]
    5384:	bl	2500 <__assert_fail@plt>
    5388:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    538c:	add	x3, x3, #0xd58
    5390:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    5394:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5398:	add	x3, x3, #0x160
    539c:	add	x1, x1, #0xac8
    53a0:	add	x0, x0, #0xb00
    53a4:	mov	w2, #0x4b4                 	// #1204
    53a8:	stp	x25, x26, [sp, #64]
    53ac:	bl	2500 <__assert_fail@plt>
    53b0:	mov	w24, #0x1                   	// #1
    53b4:	b	5010 <lt_dlexit@@Base+0xa08>

00000000000053b8 <lt_dlopenadvise@@Base>:
    53b8:	stp	x29, x30, [sp, #-80]!
    53bc:	mov	x29, sp
    53c0:	stp	x19, x20, [sp, #16]
    53c4:	mov	x19, x1
    53c8:	mov	x20, x0
    53cc:	str	xzr, [sp, #72]
    53d0:	bl	2190 <lt__get_last_error@plt>
    53d4:	cbz	x19, 53fc <lt_dlopenadvise@@Base+0x44>
    53d8:	ldrb	w1, [x19]
    53dc:	stp	x21, x22, [sp, #32]
    53e0:	mov	x21, x0
    53e4:	and	w0, w1, #0xc
    53e8:	cmp	w0, #0xc
    53ec:	b.eq	554c <lt_dlopenadvise@@Base+0x194>  // b.none
    53f0:	cbz	x20, 53f8 <lt_dlopenadvise@@Base+0x40>
    53f4:	tbnz	w1, #0, 5428 <lt_dlopenadvise@@Base+0x70>
    53f8:	ldp	x21, x22, [sp, #32]
    53fc:	mov	x1, x20
    5400:	mov	x3, x19
    5404:	add	x0, sp, #0x48
    5408:	mov	x2, #0x0                   	// #0
    540c:	bl	4868 <lt_dlexit@@Base+0x260>
    5410:	ldr	x1, [sp, #72]
    5414:	cmp	w0, #0x0
    5418:	csel	x0, x1, xzr, eq  // eq = none
    541c:	ldp	x19, x20, [sp, #16]
    5420:	ldp	x29, x30, [sp], #80
    5424:	ret
    5428:	mov	x0, x20
    542c:	mov	w1, #0x2e                  	// #46
    5430:	stp	x23, x24, [sp, #48]
    5434:	bl	2340 <strrchr@plt>
    5438:	mov	x22, x0
    543c:	cbz	x0, 5464 <lt_dlopenadvise@@Base+0xac>
    5440:	adrp	x23, 6000 <lt__slist_cons@@Base+0x10>
    5444:	add	x23, x23, #0xd58
    5448:	add	x1, x23, #0x180
    544c:	bl	23e0 <strcmp@plt>
    5450:	cbz	w0, 54a4 <lt_dlopenadvise@@Base+0xec>
    5454:	add	x1, x23, #0x190
    5458:	mov	x0, x22
    545c:	bl	23e0 <strcmp@plt>
    5460:	cbz	w0, 54a4 <lt_dlopenadvise@@Base+0xec>
    5464:	ldrb	w0, [x20]
    5468:	cbz	w0, 5530 <lt_dlopenadvise@@Base+0x178>
    546c:	add	x23, sp, #0x48
    5470:	adrp	x22, 6000 <lt__slist_cons@@Base+0x10>
    5474:	add	x2, x22, #0xd58
    5478:	mov	x1, x20
    547c:	mov	x0, x23
    5480:	add	x2, x2, #0x180
    5484:	mov	x3, x19
    5488:	bl	4868 <lt_dlexit@@Base+0x260>
    548c:	mov	w1, w0
    5490:	ldr	x0, [sp, #72]
    5494:	cbz	x0, 54b0 <lt_dlopenadvise@@Base+0xf8>
    5498:	ldp	x21, x22, [sp, #32]
    549c:	ldp	x23, x24, [sp, #48]
    54a0:	b	541c <lt_dlopenadvise@@Base+0x64>
    54a4:	ldp	x21, x22, [sp, #32]
    54a8:	ldp	x23, x24, [sp, #48]
    54ac:	b	53fc <lt_dlopenadvise@@Base+0x44>
    54b0:	cmp	w1, #0x0
    54b4:	b.le	54e0 <lt_dlopenadvise@@Base+0x128>
    54b8:	bl	2190 <lt__get_last_error@plt>
    54bc:	mov	x24, x0
    54c0:	mov	w0, #0x5                   	// #5
    54c4:	bl	22a0 <lt__error_string@plt>
    54c8:	cmp	x24, x0
    54cc:	b.eq	54e0 <lt_dlopenadvise@@Base+0x128>  // b.none
    54d0:	ldp	x21, x22, [sp, #32]
    54d4:	ldp	x23, x24, [sp, #48]
    54d8:	ldr	x0, [sp, #72]
    54dc:	b	541c <lt_dlopenadvise@@Base+0x64>
    54e0:	mov	x0, x21
    54e4:	bl	2410 <lt__set_last_error@plt>
    54e8:	add	x2, x22, #0xd58
    54ec:	mov	x1, x20
    54f0:	mov	x3, x19
    54f4:	add	x2, x2, #0x190
    54f8:	mov	x0, x23
    54fc:	bl	4868 <lt_dlexit@@Base+0x260>
    5500:	mov	w1, w0
    5504:	ldr	x0, [sp, #72]
    5508:	cbnz	x0, 5498 <lt_dlopenadvise@@Base+0xe0>
    550c:	cmp	w1, #0x0
    5510:	b.le	5530 <lt_dlopenadvise@@Base+0x178>
    5514:	bl	2190 <lt__get_last_error@plt>
    5518:	mov	x19, x0
    551c:	mov	w0, #0x5                   	// #5
    5520:	bl	22a0 <lt__error_string@plt>
    5524:	cmp	x19, x0
    5528:	b.ne	54d0 <lt_dlopenadvise@@Base+0x118>  // b.any
    552c:	nop
    5530:	mov	w0, #0x5                   	// #5
    5534:	bl	22a0 <lt__error_string@plt>
    5538:	bl	2410 <lt__set_last_error@plt>
    553c:	mov	x0, #0x0                   	// #0
    5540:	ldp	x21, x22, [sp, #32]
    5544:	ldp	x23, x24, [sp, #48]
    5548:	b	541c <lt_dlopenadvise@@Base+0x64>
    554c:	mov	w0, #0x13                  	// #19
    5550:	bl	22a0 <lt__error_string@plt>
    5554:	bl	2410 <lt__set_last_error@plt>
    5558:	mov	x0, #0x0                   	// #0
    555c:	ldp	x21, x22, [sp, #32]
    5560:	b	541c <lt_dlopenadvise@@Base+0x64>
    5564:	nop

0000000000005568 <lt_dlopen@@Base>:
    5568:	mov	x1, #0x0                   	// #0
    556c:	b	2540 <lt_dlopenadvise@plt>

0000000000005570 <lt_dlopenext@@Base>:
    5570:	stp	x29, x30, [sp, #-48]!
    5574:	mov	x29, sp
    5578:	stp	x19, x20, [sp, #16]
    557c:	add	x19, sp, #0x28
    5580:	mov	x20, x0
    5584:	mov	x0, x19
    5588:	bl	21f0 <lt_dladvise_init@plt>
    558c:	cbnz	w0, 55c4 <lt_dlopenext@@Base+0x54>
    5590:	mov	x0, x19
    5594:	bl	22b0 <lt_dladvise_ext@plt>
    5598:	cbnz	w0, 55c4 <lt_dlopenext@@Base+0x54>
    559c:	ldr	x1, [sp, #40]
    55a0:	mov	x0, x20
    55a4:	bl	2540 <lt_dlopenadvise@plt>
    55a8:	mov	x20, x0
    55ac:	mov	x0, x19
    55b0:	bl	22c0 <lt_dladvise_destroy@plt>
    55b4:	mov	x0, x20
    55b8:	ldp	x19, x20, [sp, #16]
    55bc:	ldp	x29, x30, [sp], #48
    55c0:	ret
    55c4:	mov	x0, x19
    55c8:	mov	x20, #0x0                   	// #0
    55cc:	bl	22c0 <lt_dladvise_destroy@plt>
    55d0:	mov	x0, x20
    55d4:	ldp	x19, x20, [sp, #16]
    55d8:	ldp	x29, x30, [sp], #48
    55dc:	ret

00000000000055e0 <lt_dlsym@@Base>:
    55e0:	stp	x29, x30, [sp, #-208]!
    55e4:	mov	x29, sp
    55e8:	stp	x21, x22, [sp, #32]
    55ec:	cbz	x0, 583c <lt_dlsym@@Base+0x25c>
    55f0:	mov	x21, x1
    55f4:	cbz	x1, 5850 <lt_dlsym@@Base+0x270>
    55f8:	stp	x19, x20, [sp, #16]
    55fc:	mov	x19, x0
    5600:	mov	x20, #0x0                   	// #0
    5604:	stp	x23, x24, [sp, #48]
    5608:	ldrb	w0, [x1]
    560c:	cbnz	w0, 5700 <lt_dlsym@@Base+0x120>
    5610:	ldr	x24, [x19, #8]
    5614:	ldr	x22, [x24, #8]
    5618:	cbz	x22, 5624 <lt_dlsym@@Base+0x44>
    561c:	ldrb	w0, [x22]
    5620:	cbnz	w0, 5710 <lt_dlsym@@Base+0x130>
    5624:	ldr	x0, [x19, #24]
    5628:	cbz	x0, 5724 <lt_dlsym@@Base+0x144>
    562c:	ldrb	w1, [x0]
    5630:	cbz	w1, 563c <lt_dlsym@@Base+0x5c>
    5634:	bl	2150 <strlen@plt>
    5638:	add	x20, x20, x0
    563c:	add	x0, x20, #0x5
    5640:	cmp	x0, #0x7f
    5644:	b.hi	5798 <lt_dlsym@@Base+0x1b8>  // b.pmore
    5648:	add	x23, sp, #0x50
    564c:	mov	x20, x23
    5650:	ldr	x24, [x24, #56]
    5654:	str	x25, [sp, #64]
    5658:	bl	2190 <lt__get_last_error@plt>
    565c:	mov	x25, x0
    5660:	ldr	x1, [x19, #8]
    5664:	ldr	x1, [x1, #8]
    5668:	cbz	x1, 5808 <lt_dlsym@@Base+0x228>
    566c:	mov	x0, x20
    5670:	bl	2200 <stpcpy@plt>
    5674:	ldr	x1, [x19, #24]
    5678:	bl	2460 <strcpy@plt>
    567c:	mov	x0, x20
    5680:	bl	2150 <strlen@plt>
    5684:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5688:	add	x3, x3, #0xd38
    568c:	mov	x2, x0
    5690:	add	x4, x20, x0
    5694:	add	x0, x0, #0x5
    5698:	mov	x1, x21
    569c:	ldr	w5, [x3]
    56a0:	add	x0, x20, x0
    56a4:	str	w5, [x20, x2]
    56a8:	ldrb	w2, [x3, #4]
    56ac:	strb	w2, [x4, #4]
    56b0:	bl	2460 <strcpy@plt>
    56b4:	ldr	x3, [x19, #8]
    56b8:	mov	x2, x20
    56bc:	ldr	x1, [x19, #56]
    56c0:	mov	x0, x24
    56c4:	ldr	x3, [x3, #32]
    56c8:	blr	x3
    56cc:	mov	x22, x0
    56d0:	cbz	x0, 5818 <lt_dlsym@@Base+0x238>
    56d4:	cmp	x20, x23
    56d8:	b.eq	57ec <lt_dlsym@@Base+0x20c>  // b.none
    56dc:	mov	x0, x20
    56e0:	bl	2400 <free@plt>
    56e4:	mov	x0, x22
    56e8:	ldp	x19, x20, [sp, #16]
    56ec:	ldp	x21, x22, [sp, #32]
    56f0:	ldp	x23, x24, [sp, #48]
    56f4:	ldr	x25, [sp, #64]
    56f8:	ldp	x29, x30, [sp], #208
    56fc:	ret
    5700:	mov	x0, x1
    5704:	bl	2150 <strlen@plt>
    5708:	mov	x20, x0
    570c:	b	5610 <lt_dlsym@@Base+0x30>
    5710:	mov	x0, x22
    5714:	bl	2150 <strlen@plt>
    5718:	add	x20, x20, x0
    571c:	ldr	x0, [x19, #24]
    5720:	cbnz	x0, 562c <lt_dlsym@@Base+0x4c>
    5724:	add	x0, x20, #0x5
    5728:	cmp	x0, #0x7f
    572c:	b.hi	5798 <lt_dlsym@@Base+0x1b8>  // b.pmore
    5730:	add	x23, sp, #0x50
    5734:	ldr	x24, [x24, #56]
    5738:	mov	x20, x23
    573c:	cbz	x22, 57c4 <lt_dlsym@@Base+0x1e4>
    5740:	mov	x1, x22
    5744:	mov	x0, x20
    5748:	bl	2200 <stpcpy@plt>
    574c:	mov	x1, x21
    5750:	bl	2460 <strcpy@plt>
    5754:	ldr	x3, [x19, #8]
    5758:	mov	x0, x24
    575c:	ldr	x1, [x19, #56]
    5760:	mov	x2, x20
    5764:	ldr	x3, [x3, #32]
    5768:	blr	x3
    576c:	mov	x22, x0
    5770:	cmp	x20, x23
    5774:	b.eq	57d4 <lt_dlsym@@Base+0x1f4>  // b.none
    5778:	mov	x0, x20
    577c:	bl	2400 <free@plt>
    5780:	ldp	x19, x20, [sp, #16]
    5784:	ldp	x23, x24, [sp, #48]
    5788:	mov	x0, x22
    578c:	ldp	x21, x22, [sp, #32]
    5790:	ldp	x29, x30, [sp], #208
    5794:	ret
    5798:	add	x0, x20, #0x6
    579c:	bl	2370 <lt__malloc@plt>
    57a0:	mov	x20, x0
    57a4:	cbz	x0, 5864 <lt_dlsym@@Base+0x284>
    57a8:	ldr	x0, [x19, #8]
    57ac:	ldr	x1, [x19, #24]
    57b0:	ldr	x24, [x0, #56]
    57b4:	cbnz	x1, 5830 <lt_dlsym@@Base+0x250>
    57b8:	ldr	x22, [x0, #8]
    57bc:	add	x23, sp, #0x50
    57c0:	cbnz	x22, 5740 <lt_dlsym@@Base+0x160>
    57c4:	mov	x1, x21
    57c8:	mov	x0, x20
    57cc:	bl	2460 <strcpy@plt>
    57d0:	b	5754 <lt_dlsym@@Base+0x174>
    57d4:	mov	x0, x22
    57d8:	ldp	x19, x20, [sp, #16]
    57dc:	ldp	x21, x22, [sp, #32]
    57e0:	ldp	x23, x24, [sp, #48]
    57e4:	ldp	x29, x30, [sp], #208
    57e8:	ret
    57ec:	mov	x0, x22
    57f0:	ldp	x19, x20, [sp, #16]
    57f4:	ldp	x21, x22, [sp, #32]
    57f8:	ldp	x23, x24, [sp, #48]
    57fc:	ldr	x25, [sp, #64]
    5800:	ldp	x29, x30, [sp], #208
    5804:	ret
    5808:	ldr	x1, [x19, #24]
    580c:	mov	x0, x20
    5810:	bl	2460 <strcpy@plt>
    5814:	b	567c <lt_dlsym@@Base+0x9c>
    5818:	mov	x0, x25
    581c:	bl	2410 <lt__set_last_error@plt>
    5820:	ldr	x0, [x19, #8]
    5824:	ldr	x25, [sp, #64]
    5828:	ldr	x22, [x0, #8]
    582c:	b	573c <lt_dlsym@@Base+0x15c>
    5830:	add	x23, sp, #0x50
    5834:	str	x25, [sp, #64]
    5838:	b	5658 <lt_dlsym@@Base+0x78>
    583c:	mov	x22, #0x0                   	// #0
    5840:	mov	w0, #0xc                   	// #12
    5844:	bl	22a0 <lt__error_string@plt>
    5848:	bl	2410 <lt__set_last_error@plt>
    584c:	b	5788 <lt_dlsym@@Base+0x1a8>
    5850:	mov	x22, #0x0                   	// #0
    5854:	mov	w0, #0xa                   	// #10
    5858:	bl	22a0 <lt__error_string@plt>
    585c:	bl	2410 <lt__set_last_error@plt>
    5860:	b	5788 <lt_dlsym@@Base+0x1a8>
    5864:	mov	w0, #0xd                   	// #13
    5868:	mov	x22, #0x0                   	// #0
    586c:	bl	22a0 <lt__error_string@plt>
    5870:	bl	2410 <lt__set_last_error@plt>
    5874:	ldp	x19, x20, [sp, #16]
    5878:	ldp	x23, x24, [sp, #48]
    587c:	b	5788 <lt_dlsym@@Base+0x1a8>
    5880:	stp	x29, x30, [sp, #-16]!
    5884:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    5888:	add	x1, x1, #0xd40
    588c:	mov	x29, sp
    5890:	bl	24e0 <lt_dlsym@plt>
    5894:	ldp	x29, x30, [sp], #16
    5898:	b	40a0 <lt__alloc_die_callback@@Base+0x1000>
    589c:	nop

00000000000058a0 <lt_dlerror@@Base>:
    58a0:	stp	x29, x30, [sp, #-32]!
    58a4:	mov	x29, sp
    58a8:	str	x19, [sp, #16]
    58ac:	bl	2190 <lt__get_last_error@plt>
    58b0:	mov	x19, x0
    58b4:	mov	x0, #0x0                   	// #0
    58b8:	bl	2410 <lt__set_last_error@plt>
    58bc:	mov	x0, x19
    58c0:	ldr	x19, [sp, #16]
    58c4:	ldp	x29, x30, [sp], #32
    58c8:	ret
    58cc:	nop

00000000000058d0 <lt_dladdsearchdir@@Base>:
    58d0:	cbz	x0, 5908 <lt_dladdsearchdir@@Base+0x38>
    58d4:	ldrb	w2, [x0]
    58d8:	mov	x1, x0
    58dc:	mov	w0, #0x0                   	// #0
    58e0:	cbnz	w2, 58e8 <lt_dladdsearchdir@@Base+0x18>
    58e4:	ret
    58e8:	stp	x29, x30, [sp, #-16]!
    58ec:	mov	x0, #0x0                   	// #0
    58f0:	mov	x29, sp
    58f4:	bl	3ac0 <lt__alloc_die_callback@@Base+0xa20>
    58f8:	cmp	w0, #0x0
    58fc:	cset	w0, ne  // ne = any
    5900:	ldp	x29, x30, [sp], #16
    5904:	ret
    5908:	mov	w0, #0x0                   	// #0
    590c:	ret

0000000000005910 <lt_dlinsertsearchdir@@Base>:
    5910:	stp	x29, x30, [sp, #-48]!
    5914:	mov	x29, sp
    5918:	stp	x19, x20, [sp, #16]
    591c:	mov	x19, x0
    5920:	mov	x20, x1
    5924:	cbz	x0, 5960 <lt_dlinsertsearchdir@@Base+0x50>
    5928:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    592c:	str	x21, [sp, #32]
    5930:	ldr	x21, [x0, #648]
    5934:	cmp	x21, x19
    5938:	b.hi	597c <lt_dlinsertsearchdir@@Base+0x6c>  // b.pmore
    593c:	cbz	x21, 597c <lt_dlinsertsearchdir@@Base+0x6c>
    5940:	ldrb	w0, [x21]
    5944:	cbz	w0, 597c <lt_dlinsertsearchdir@@Base+0x6c>
    5948:	mov	x0, x21
    594c:	bl	2150 <strlen@plt>
    5950:	add	x21, x21, x0
    5954:	cmp	x19, x21
    5958:	b.cs	597c <lt_dlinsertsearchdir@@Base+0x6c>  // b.hs, b.nlast
    595c:	ldr	x21, [sp, #32]
    5960:	mov	w0, #0x0                   	// #0
    5964:	cbz	x20, 5970 <lt_dlinsertsearchdir@@Base+0x60>
    5968:	ldrb	w1, [x20]
    596c:	cbnz	w1, 599c <lt_dlinsertsearchdir@@Base+0x8c>
    5970:	ldp	x19, x20, [sp, #16]
    5974:	ldp	x29, x30, [sp], #48
    5978:	ret
    597c:	mov	w0, #0x12                  	// #18
    5980:	bl	22a0 <lt__error_string@plt>
    5984:	bl	2410 <lt__set_last_error@plt>
    5988:	mov	w0, #0x1                   	// #1
    598c:	ldp	x19, x20, [sp, #16]
    5990:	ldr	x21, [sp, #32]
    5994:	ldp	x29, x30, [sp], #48
    5998:	ret
    599c:	mov	x1, x20
    59a0:	mov	x0, x19
    59a4:	bl	3ac0 <lt__alloc_die_callback@@Base+0xa20>
    59a8:	cmp	w0, #0x0
    59ac:	cset	w0, ne  // ne = any
    59b0:	ldp	x19, x20, [sp, #16]
    59b4:	ldp	x29, x30, [sp], #48
    59b8:	ret
    59bc:	nop

00000000000059c0 <lt_dlsetsearchpath@@Base>:
    59c0:	stp	x29, x30, [sp, #-32]!
    59c4:	mov	x29, sp
    59c8:	stp	x19, x20, [sp, #16]
    59cc:	adrp	x19, 19000 <lt_dlinterface_free@@Base+0x134f0>
    59d0:	add	x19, x19, #0x280
    59d4:	mov	x20, x0
    59d8:	ldr	x0, [x19, #8]
    59dc:	bl	2400 <free@plt>
    59e0:	str	xzr, [x19, #8]
    59e4:	cbz	x20, 5a20 <lt_dlsetsearchpath@@Base+0x60>
    59e8:	ldrb	w1, [x20]
    59ec:	mov	w0, #0x0                   	// #0
    59f0:	cbnz	w1, 5a00 <lt_dlsetsearchpath@@Base+0x40>
    59f4:	ldp	x19, x20, [sp, #16]
    59f8:	ldp	x29, x30, [sp], #32
    59fc:	ret
    5a00:	add	x1, x19, #0x8
    5a04:	mov	x0, x20
    5a08:	bl	30b8 <lt__alloc_die_callback@@Base+0x18>
    5a0c:	cmp	w0, #0x0
    5a10:	cset	w0, ne  // ne = any
    5a14:	ldp	x19, x20, [sp, #16]
    5a18:	ldp	x29, x30, [sp], #32
    5a1c:	ret
    5a20:	mov	w0, #0x0                   	// #0
    5a24:	ldp	x19, x20, [sp, #16]
    5a28:	ldp	x29, x30, [sp], #32
    5a2c:	ret

0000000000005a30 <lt_dlgetsearchpath@@Base>:
    5a30:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    5a34:	ldr	x0, [x0, #648]
    5a38:	ret
    5a3c:	nop

0000000000005a40 <lt_dlmakeresident@@Base>:
    5a40:	cbz	x0, 5a5c <lt_dlmakeresident@@Base+0x1c>
    5a44:	mov	x1, x0
    5a48:	ldrb	w2, [x0, #36]
    5a4c:	mov	w0, #0x0                   	// #0
    5a50:	orr	w2, w2, #0x1
    5a54:	strb	w2, [x1, #36]
    5a58:	ret
    5a5c:	stp	x29, x30, [sp, #-16]!
    5a60:	mov	w0, #0xc                   	// #12
    5a64:	mov	x29, sp
    5a68:	bl	22a0 <lt__error_string@plt>
    5a6c:	bl	2410 <lt__set_last_error@plt>
    5a70:	mov	w0, #0x1                   	// #1
    5a74:	ldp	x29, x30, [sp], #16
    5a78:	ret
    5a7c:	nop

0000000000005a80 <lt_dlisresident@@Base>:
    5a80:	cbz	x0, 5a90 <lt_dlisresident@@Base+0x10>
    5a84:	ldrb	w0, [x0, #36]
    5a88:	and	w0, w0, #0x1
    5a8c:	ret
    5a90:	stp	x29, x30, [sp, #-16]!
    5a94:	mov	w0, #0xc                   	// #12
    5a98:	mov	x29, sp
    5a9c:	bl	22a0 <lt__error_string@plt>
    5aa0:	bl	2410 <lt__set_last_error@plt>
    5aa4:	mov	w0, #0xffffffff            	// #-1
    5aa8:	ldp	x29, x30, [sp], #16
    5aac:	ret

0000000000005ab0 <lt_dlinterface_register@@Base>:
    5ab0:	stp	x29, x30, [sp, #-48]!
    5ab4:	mov	x29, sp
    5ab8:	stp	x19, x20, [sp, #16]
    5abc:	mov	x20, x0
    5ac0:	mov	x0, #0x10                  	// #16
    5ac4:	str	x21, [sp, #32]
    5ac8:	mov	x21, x1
    5acc:	bl	2370 <lt__malloc@plt>
    5ad0:	mov	x19, x0
    5ad4:	cbz	x0, 5aec <lt_dlinterface_register@@Base+0x3c>
    5ad8:	mov	x0, x20
    5adc:	bl	2180 <lt__strdup@plt>
    5ae0:	str	x0, [x19]
    5ae4:	cbz	x0, 5b00 <lt_dlinterface_register@@Base+0x50>
    5ae8:	str	x21, [x19, #8]
    5aec:	mov	x0, x19
    5af0:	ldp	x19, x20, [sp, #16]
    5af4:	ldr	x21, [sp, #32]
    5af8:	ldp	x29, x30, [sp], #48
    5afc:	ret
    5b00:	mov	x0, x19
    5b04:	mov	x19, #0x0                   	// #0
    5b08:	bl	2400 <free@plt>
    5b0c:	b	5aec <lt_dlinterface_register@@Base+0x3c>

0000000000005b10 <lt_dlinterface_free@@Base>:
    5b10:	stp	x29, x30, [sp, #-32]!
    5b14:	mov	x29, sp
    5b18:	str	x19, [sp, #16]
    5b1c:	mov	x19, x0
    5b20:	ldr	x0, [x0]
    5b24:	bl	2400 <free@plt>
    5b28:	mov	x0, x19
    5b2c:	ldr	x19, [sp, #16]
    5b30:	ldp	x29, x30, [sp], #32
    5b34:	b	2400 <free@plt>

0000000000005b38 <lt_dlcaller_set_data@@Base>:
    5b38:	stp	x29, x30, [sp, #-64]!
    5b3c:	mov	x29, sp
    5b40:	stp	x21, x22, [sp, #32]
    5b44:	mov	x21, x0
    5b48:	mov	x22, x1
    5b4c:	ldr	x0, [x1, #72]
    5b50:	stp	x19, x20, [sp, #16]
    5b54:	str	x23, [sp, #48]
    5b58:	mov	x23, x2
    5b5c:	cbz	x0, 5bdc <lt_dlcaller_set_data@@Base+0xa4>
    5b60:	ldr	x4, [x0]
    5b64:	cbz	x4, 5bdc <lt_dlcaller_set_data@@Base+0xa4>
    5b68:	add	x5, x0, #0x10
    5b6c:	mov	w19, #0x0                   	// #0
    5b70:	mov	x6, x5
    5b74:	nop
    5b78:	ldr	x20, [x6], #16
    5b7c:	mov	w7, w19
    5b80:	add	w19, w19, #0x1
    5b84:	cbnz	x20, 5b78 <lt_dlcaller_set_data@@Base+0x40>
    5b88:	mov	w6, w19
    5b8c:	mov	w3, #0x0                   	// #0
    5b90:	b	5ba4 <lt_dlcaller_set_data@@Base+0x6c>
    5b94:	add	w3, w3, #0x1
    5b98:	cmp	w3, w6
    5b9c:	b.eq	5bb4 <lt_dlcaller_set_data@@Base+0x7c>  // b.none
    5ba0:	ldr	x4, [x5], #16
    5ba4:	cmp	x21, x4
    5ba8:	b.ne	5b94 <lt_dlcaller_set_data@@Base+0x5c>  // b.any
    5bac:	add	x1, x0, w3, sxtw #4
    5bb0:	ldr	x20, [x1, #8]
    5bb4:	cmp	w3, w19
    5bb8:	b.eq	5c10 <lt_dlcaller_set_data@@Base+0xd8>  // b.none
    5bbc:	add	x3, x0, w3, sxtw #4
    5bc0:	str	x23, [x3, #8]
    5bc4:	mov	x0, x20
    5bc8:	ldp	x19, x20, [sp, #16]
    5bcc:	ldp	x21, x22, [sp, #32]
    5bd0:	ldr	x23, [sp, #48]
    5bd4:	ldp	x29, x30, [sp], #64
    5bd8:	ret
    5bdc:	mov	x20, #0x0                   	// #0
    5be0:	mov	x1, #0x20                  	// #32
    5be4:	mov	w19, #0x0                   	// #0
    5be8:	bl	24d0 <lt__realloc@plt>
    5bec:	cbz	x0, 5c08 <lt_dlcaller_set_data@@Base+0xd0>
    5bf0:	sbfiz	x19, x19, #4, #32
    5bf4:	str	x0, [x22, #72]
    5bf8:	add	x3, x0, x19
    5bfc:	str	x21, [x0, x19]
    5c00:	str	xzr, [x3, #16]
    5c04:	b	5bc0 <lt_dlcaller_set_data@@Base+0x88>
    5c08:	mov	x20, #0x0                   	// #0
    5c0c:	b	5bc4 <lt_dlcaller_set_data@@Base+0x8c>
    5c10:	add	w7, w7, #0x3
    5c14:	sbfiz	x1, x7, #4, #32
    5c18:	b	5be8 <lt_dlcaller_set_data@@Base+0xb0>
    5c1c:	nop

0000000000005c20 <lt_dlcaller_get_data@@Base>:
    5c20:	ldr	x1, [x1, #72]
    5c24:	mov	x2, x0
    5c28:	cbz	x1, 5c50 <lt_dlcaller_get_data@@Base+0x30>
    5c2c:	ldr	x0, [x1]
    5c30:	cbnz	x0, 5c40 <lt_dlcaller_get_data@@Base+0x20>
    5c34:	b	5c4c <lt_dlcaller_get_data@@Base+0x2c>
    5c38:	ldr	x0, [x1, #16]!
    5c3c:	cbz	x0, 5c4c <lt_dlcaller_get_data@@Base+0x2c>
    5c40:	cmp	x2, x0
    5c44:	b.ne	5c38 <lt_dlcaller_get_data@@Base+0x18>  // b.any
    5c48:	ldr	x0, [x1, #8]
    5c4c:	ret
    5c50:	mov	x0, #0x0                   	// #0
    5c54:	ret

0000000000005c58 <lt_dlgetinfo@@Base>:
    5c58:	cbz	x0, 5c64 <lt_dlgetinfo@@Base+0xc>
    5c5c:	add	x0, x0, #0x10
    5c60:	ret
    5c64:	stp	x29, x30, [sp, #-16]!
    5c68:	mov	w0, #0xc                   	// #12
    5c6c:	mov	x29, sp
    5c70:	bl	22a0 <lt__error_string@plt>
    5c74:	bl	2410 <lt__set_last_error@plt>
    5c78:	mov	x0, #0x0                   	// #0
    5c7c:	ldp	x29, x30, [sp], #16
    5c80:	ret
    5c84:	nop

0000000000005c88 <lt_dlhandle_iterate@@Base>:
    5c88:	stp	x29, x30, [sp, #-32]!
    5c8c:	mov	x29, sp
    5c90:	stp	x19, x20, [sp, #16]
    5c94:	cbz	x0, 5ce8 <lt_dlhandle_iterate@@Base+0x60>
    5c98:	mov	x20, x0
    5c9c:	cbz	x1, 5cdc <lt_dlhandle_iterate@@Base+0x54>
    5ca0:	ldr	x19, [x1]
    5ca4:	cbz	x19, 5cc8 <lt_dlhandle_iterate@@Base+0x40>
    5ca8:	ldr	x2, [x20, #8]
    5cac:	cbz	x2, 5ccc <lt_dlhandle_iterate@@Base+0x44>
    5cb0:	ldr	x1, [x20]
    5cb4:	mov	x0, x19
    5cb8:	blr	x2
    5cbc:	cbz	w0, 5ccc <lt_dlhandle_iterate@@Base+0x44>
    5cc0:	ldr	x19, [x19]
    5cc4:	cbnz	x19, 5ca8 <lt_dlhandle_iterate@@Base+0x20>
    5cc8:	mov	x19, #0x0                   	// #0
    5ccc:	mov	x0, x19
    5cd0:	ldp	x19, x20, [sp, #16]
    5cd4:	ldp	x29, x30, [sp], #32
    5cd8:	ret
    5cdc:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x134f0>
    5ce0:	ldr	x19, [x0, #640]
    5ce4:	b	5ca4 <lt_dlhandle_iterate@@Base+0x1c>
    5ce8:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5cec:	add	x3, x3, #0xd58
    5cf0:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    5cf4:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5cf8:	add	x3, x3, #0x198
    5cfc:	add	x1, x1, #0xac8
    5d00:	add	x0, x0, #0xd50
    5d04:	mov	w2, #0x96a                 	// #2410
    5d08:	bl	2500 <__assert_fail@plt>
    5d0c:	nop

0000000000005d10 <lt_dlhandle_fetch@@Base>:
    5d10:	stp	x29, x30, [sp, #-48]!
    5d14:	mov	x29, sp
    5d18:	stp	x19, x20, [sp, #16]
    5d1c:	mov	x20, x0
    5d20:	mov	x19, #0x0                   	// #0
    5d24:	str	x21, [sp, #32]
    5d28:	mov	x21, x1
    5d2c:	cbz	x0, 5d6c <lt_dlhandle_fetch@@Base+0x5c>
    5d30:	mov	x1, x19
    5d34:	mov	x0, x20
    5d38:	bl	2440 <lt_dlhandle_iterate@plt>
    5d3c:	mov	x19, x0
    5d40:	cbz	x0, 5d58 <lt_dlhandle_fetch@@Base+0x48>
    5d44:	ldr	x0, [x19, #24]
    5d48:	cbz	x0, 5d30 <lt_dlhandle_fetch@@Base+0x20>
    5d4c:	mov	x1, x21
    5d50:	bl	23e0 <strcmp@plt>
    5d54:	cbnz	w0, 5d30 <lt_dlhandle_fetch@@Base+0x20>
    5d58:	mov	x0, x19
    5d5c:	ldp	x19, x20, [sp, #16]
    5d60:	ldr	x21, [sp, #32]
    5d64:	ldp	x29, x30, [sp], #48
    5d68:	ret
    5d6c:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5d70:	add	x3, x3, #0xd58
    5d74:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    5d78:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5d7c:	add	x3, x3, #0x1b0
    5d80:	add	x1, x1, #0xac8
    5d84:	add	x0, x0, #0xd50
    5d88:	mov	w2, #0x981                 	// #2433
    5d8c:	bl	2500 <__assert_fail@plt>

0000000000005d90 <lt_dlhandle_map@@Base>:
    5d90:	stp	x29, x30, [sp, #-48]!
    5d94:	adrp	x3, 19000 <lt_dlinterface_free@@Base+0x134f0>
    5d98:	mov	x29, sp
    5d9c:	stp	x19, x20, [sp, #16]
    5da0:	stp	x21, x22, [sp, #32]
    5da4:	ldr	x19, [x3, #640]
    5da8:	cbz	x0, 5e14 <lt_dlhandle_map@@Base+0x84>
    5dac:	mov	x20, x0
    5db0:	mov	x22, x1
    5db4:	mov	x21, x2
    5db8:	cbz	x19, 5e00 <lt_dlhandle_map@@Base+0x70>
    5dbc:	nop
    5dc0:	ldr	x3, [x20, #8]
    5dc4:	cbz	x3, 5de0 <lt_dlhandle_map@@Base+0x50>
    5dc8:	ldr	x1, [x20]
    5dcc:	mov	x0, x19
    5dd0:	blr	x3
    5dd4:	cbz	w0, 5de0 <lt_dlhandle_map@@Base+0x50>
    5dd8:	ldr	x19, [x19]
    5ddc:	cbnz	x19, 5dc0 <lt_dlhandle_map@@Base+0x30>
    5de0:	mov	x1, x21
    5de4:	mov	x0, x19
    5de8:	blr	x22
    5dec:	cbz	w0, 5db8 <lt_dlhandle_map@@Base+0x28>
    5df0:	ldp	x19, x20, [sp, #16]
    5df4:	ldp	x21, x22, [sp, #32]
    5df8:	ldp	x29, x30, [sp], #48
    5dfc:	ret
    5e00:	mov	w0, #0x0                   	// #0
    5e04:	ldp	x19, x20, [sp, #16]
    5e08:	ldp	x21, x22, [sp, #32]
    5e0c:	ldp	x29, x30, [sp], #48
    5e10:	ret
    5e14:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5e18:	add	x3, x3, #0xd58
    5e1c:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    5e20:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5e24:	add	x3, x3, #0x1c8
    5e28:	add	x1, x1, #0xac8
    5e2c:	add	x0, x0, #0xd50
    5e30:	mov	w2, #0x995                 	// #2453
    5e34:	bl	2500 <__assert_fail@plt>

0000000000005e38 <lt__slist_delete@@Base>:
    5e38:	stp	x29, x30, [sp, #-32]!
    5e3c:	mov	x29, sp
    5e40:	stp	x19, x20, [sp, #16]
    5e44:	cbz	x1, 5e78 <lt__slist_delete@@Base+0x40>
    5e48:	mov	x19, x0
    5e4c:	mov	x20, x1
    5e50:	cbz	x0, 5e68 <lt__slist_delete@@Base+0x30>
    5e54:	nop
    5e58:	mov	x0, x19
    5e5c:	ldr	x19, [x19]
    5e60:	blr	x20
    5e64:	cbnz	x19, 5e58 <lt__slist_delete@@Base+0x20>
    5e68:	mov	x0, #0x0                   	// #0
    5e6c:	ldp	x19, x20, [sp, #16]
    5e70:	ldp	x29, x30, [sp], #32
    5e74:	ret
    5e78:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5e7c:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    5e80:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5e84:	add	x3, x3, #0xf70
    5e88:	add	x1, x1, #0xf30
    5e8c:	add	x0, x0, #0xf40
    5e90:	mov	w2, #0x38                  	// #56
    5e94:	bl	2500 <__assert_fail@plt>

0000000000005e98 <lt__slist_remove@@Base>:
    5e98:	stp	x29, x30, [sp, #-48]!
    5e9c:	mov	x29, sp
    5ea0:	stp	x19, x20, [sp, #16]
    5ea4:	cbz	x1, 5f18 <lt__slist_remove@@Base+0x80>
    5ea8:	mov	x19, x0
    5eac:	cbz	x0, 5f08 <lt__slist_remove@@Base+0x70>
    5eb0:	ldr	x0, [x0]
    5eb4:	cbz	x0, 5f08 <lt__slist_remove@@Base+0x70>
    5eb8:	str	x21, [sp, #32]
    5ebc:	mov	x20, x1
    5ec0:	mov	x21, x2
    5ec4:	mov	x1, x2
    5ec8:	blr	x20
    5ecc:	cbz	x0, 5ef8 <lt__slist_remove@@Base+0x60>
    5ed0:	ldr	x1, [x19]
    5ed4:	ldr	x21, [sp, #32]
    5ed8:	ldr	x1, [x1]
    5edc:	str	x1, [x19]
    5ee0:	ldp	x19, x20, [sp, #16]
    5ee4:	ldp	x29, x30, [sp], #48
    5ee8:	ret
    5eec:	mov	x1, x21
    5ef0:	blr	x20
    5ef4:	cbnz	x0, 5ed0 <lt__slist_remove@@Base+0x38>
    5ef8:	ldr	x19, [x19]
    5efc:	ldr	x0, [x19]
    5f00:	cbnz	x0, 5eec <lt__slist_remove@@Base+0x54>
    5f04:	ldr	x21, [sp, #32]
    5f08:	mov	x0, #0x0                   	// #0
    5f0c:	ldp	x19, x20, [sp, #16]
    5f10:	ldp	x29, x30, [sp], #48
    5f14:	ret
    5f18:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5f1c:	add	x3, x3, #0xf70
    5f20:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    5f24:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5f28:	add	x3, x3, #0x18
    5f2c:	add	x1, x1, #0xf30
    5f30:	add	x0, x0, #0xf50
    5f34:	mov	w2, #0x53                  	// #83
    5f38:	str	x21, [sp, #32]
    5f3c:	bl	2500 <__assert_fail@plt>

0000000000005f40 <lt__slist_find@@Base>:
    5f40:	stp	x29, x30, [sp, #-48]!
    5f44:	mov	x29, sp
    5f48:	stp	x19, x20, [sp, #16]
    5f4c:	str	x21, [sp, #32]
    5f50:	cbz	x1, 5fa4 <lt__slist_find@@Base+0x64>
    5f54:	mov	x19, x0
    5f58:	mov	x20, x1
    5f5c:	mov	x21, x2
    5f60:	cbnz	x0, 5f70 <lt__slist_find@@Base+0x30>
    5f64:	b	5f90 <lt__slist_find@@Base+0x50>
    5f68:	ldr	x19, [x19]
    5f6c:	cbz	x19, 5f90 <lt__slist_find@@Base+0x50>
    5f70:	mov	x1, x21
    5f74:	mov	x0, x19
    5f78:	blr	x20
    5f7c:	cbz	x0, 5f68 <lt__slist_find@@Base+0x28>
    5f80:	ldp	x19, x20, [sp, #16]
    5f84:	ldr	x21, [sp, #32]
    5f88:	ldp	x29, x30, [sp], #48
    5f8c:	ret
    5f90:	mov	x0, #0x0                   	// #0
    5f94:	ldp	x19, x20, [sp, #16]
    5f98:	ldr	x21, [sp, #32]
    5f9c:	ldp	x29, x30, [sp], #48
    5fa0:	ret
    5fa4:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    5fa8:	add	x3, x3, #0xf70
    5fac:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    5fb0:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    5fb4:	add	x3, x3, #0x30
    5fb8:	add	x1, x1, #0xf30
    5fbc:	add	x0, x0, #0xf50
    5fc0:	mov	w2, #0x7a                  	// #122
    5fc4:	bl	2500 <__assert_fail@plt>

0000000000005fc8 <lt__slist_concat@@Base>:
    5fc8:	cbz	x0, 5fe4 <lt__slist_concat@@Base+0x1c>
    5fcc:	mov	x2, x0
    5fd0:	mov	x3, x2
    5fd4:	ldr	x2, [x2]
    5fd8:	cbnz	x2, 5fd0 <lt__slist_concat@@Base+0x8>
    5fdc:	str	x1, [x3]
    5fe0:	ret
    5fe4:	mov	x0, x1
    5fe8:	ret
    5fec:	nop

0000000000005ff0 <lt__slist_cons@@Base>:
    5ff0:	cbz	x0, 600c <lt__slist_cons@@Base+0x1c>
    5ff4:	mov	x2, x0
    5ff8:	ldr	x0, [x0]
    5ffc:	cbnz	x0, 6014 <lt__slist_cons@@Base+0x24>
    6000:	mov	x0, x2
    6004:	str	x1, [x2]
    6008:	ret
    600c:	mov	x0, x1
    6010:	ret
    6014:	stp	x29, x30, [sp, #-16]!
    6018:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    601c:	add	x3, x3, #0xf70
    6020:	mov	x29, sp
    6024:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    6028:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    602c:	add	x3, x3, #0x40
    6030:	add	x1, x1, #0xf30
    6034:	add	x0, x0, #0xf58
    6038:	mov	w2, #0xaf                  	// #175
    603c:	bl	2500 <__assert_fail@plt>

0000000000006040 <lt__slist_tail@@Base>:
    6040:	cbz	x0, 604c <lt__slist_tail@@Base+0xc>
    6044:	ldr	x0, [x0]
    6048:	ret
    604c:	mov	x0, #0x0                   	// #0
    6050:	ret
    6054:	nop

0000000000006058 <lt__slist_nth@@Base>:
    6058:	b	6064 <lt__slist_nth@@Base+0xc>
    605c:	ldr	x0, [x0]
    6060:	sub	x1, x1, #0x1
    6064:	cmp	x0, #0x0
    6068:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    606c:	b.hi	605c <lt__slist_nth@@Base+0x4>  // b.pmore
    6070:	ret
    6074:	nop

0000000000006078 <lt__slist_length@@Base>:
    6078:	mov	x1, x0
    607c:	mov	x0, #0x0                   	// #0
    6080:	cbz	x1, 6094 <lt__slist_length@@Base+0x1c>
    6084:	nop
    6088:	ldr	x1, [x1]
    608c:	add	x0, x0, #0x1
    6090:	cbnz	x1, 6088 <lt__slist_length@@Base+0x10>
    6094:	ret

0000000000006098 <lt__slist_reverse@@Base>:
    6098:	cbz	x0, 60b8 <lt__slist_reverse@@Base+0x20>
    609c:	mov	x2, #0x0                   	// #0
    60a0:	b	60a8 <lt__slist_reverse@@Base+0x10>
    60a4:	mov	x0, x1
    60a8:	ldr	x1, [x0]
    60ac:	str	x2, [x0]
    60b0:	mov	x2, x0
    60b4:	cbnz	x1, 60a4 <lt__slist_reverse@@Base+0xc>
    60b8:	ret
    60bc:	nop

00000000000060c0 <lt__slist_foreach@@Base>:
    60c0:	stp	x29, x30, [sp, #-48]!
    60c4:	mov	x29, sp
    60c8:	stp	x19, x20, [sp, #16]
    60cc:	str	x21, [sp, #32]
    60d0:	cbz	x1, 6108 <lt__slist_foreach@@Base+0x48>
    60d4:	mov	x20, x1
    60d8:	mov	x21, x2
    60dc:	cbz	x0, 60f8 <lt__slist_foreach@@Base+0x38>
    60e0:	mov	x1, x21
    60e4:	ldr	x19, [x0]
    60e8:	blr	x20
    60ec:	cbnz	x0, 60f8 <lt__slist_foreach@@Base+0x38>
    60f0:	mov	x0, x19
    60f4:	cbnz	x0, 60e0 <lt__slist_foreach@@Base+0x20>
    60f8:	ldp	x19, x20, [sp, #16]
    60fc:	ldr	x21, [sp, #32]
    6100:	ldp	x29, x30, [sp], #48
    6104:	ret
    6108:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    610c:	add	x3, x3, #0xf70
    6110:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    6114:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    6118:	add	x3, x3, #0x50
    611c:	add	x1, x1, #0xf30
    6120:	add	x0, x0, #0xf68
    6124:	mov	w2, #0xf6                  	// #246
    6128:	bl	2500 <__assert_fail@plt>
    612c:	nop

0000000000006130 <lt__slist_sort@@Base>:
    6130:	cbz	x0, 622c <lt__slist_sort@@Base+0xfc>
    6134:	stp	x29, x30, [sp, #-80]!
    6138:	mov	x29, sp
    613c:	stp	x19, x20, [sp, #16]
    6140:	ldr	x19, [x0]
    6144:	cbz	x19, 6220 <lt__slist_sort@@Base+0xf0>
    6148:	ldr	x3, [x19]
    614c:	stp	x21, x22, [sp, #32]
    6150:	mov	x22, x1
    6154:	str	x23, [sp, #48]
    6158:	mov	x1, x0
    615c:	mov	x23, x2
    6160:	cbnz	x3, 617c <lt__slist_sort@@Base+0x4c>
    6164:	b	6184 <lt__slist_sort@@Base+0x54>
    6168:	ldr	x3, [x3]
    616c:	mov	x1, x19
    6170:	ldr	x4, [x19]
    6174:	mov	x19, x4
    6178:	cbz	x3, 6184 <lt__slist_sort@@Base+0x54>
    617c:	ldr	x3, [x3]
    6180:	cbnz	x3, 6168 <lt__slist_sort@@Base+0x38>
    6184:	str	xzr, [x1]
    6188:	mov	x2, x23
    618c:	mov	x1, x22
    6190:	add	x21, sp, #0x40
    6194:	bl	6130 <lt__slist_sort@@Base>
    6198:	mov	x20, x0
    619c:	mov	x2, x23
    61a0:	mov	x0, x19
    61a4:	mov	x1, x22
    61a8:	bl	6130 <lt__slist_sort@@Base>
    61ac:	cmp	x0, #0x0
    61b0:	mov	x19, x0
    61b4:	ccmp	x20, #0x0, #0x4, ne  // ne = any
    61b8:	b.ne	61d8 <lt__slist_sort@@Base+0xa8>  // b.any
    61bc:	b	6208 <lt__slist_sort@@Base+0xd8>
    61c0:	str	x19, [x21]
    61c4:	mov	x21, x19
    61c8:	cmp	x20, #0x0
    61cc:	ldr	x19, [x19]
    61d0:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    61d4:	b.eq	6208 <lt__slist_sort@@Base+0xd8>  // b.none
    61d8:	mov	x2, x23
    61dc:	mov	x1, x19
    61e0:	mov	x0, x20
    61e4:	blr	x22
    61e8:	cmp	w0, #0x0
    61ec:	b.gt	61c0 <lt__slist_sort@@Base+0x90>
    61f0:	str	x20, [x21]
    61f4:	mov	x21, x20
    61f8:	ldr	x20, [x20]
    61fc:	cmp	x20, #0x0
    6200:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    6204:	b.ne	61d8 <lt__slist_sort@@Base+0xa8>  // b.any
    6208:	cmp	x20, #0x0
    620c:	csel	x20, x20, x19, ne  // ne = any
    6210:	ldr	x23, [sp, #48]
    6214:	str	x20, [x21]
    6218:	ldp	x21, x22, [sp, #32]
    621c:	ldr	x0, [sp, #64]
    6220:	ldp	x19, x20, [sp, #16]
    6224:	ldp	x29, x30, [sp], #80
    6228:	ret
    622c:	mov	x0, #0x0                   	// #0
    6230:	ret
    6234:	nop

0000000000006238 <lt__slist_box@@Base>:
    6238:	stp	x29, x30, [sp, #-32]!
    623c:	mov	x29, sp
    6240:	str	x19, [sp, #16]
    6244:	mov	x19, x0
    6248:	mov	x0, #0x10                  	// #16
    624c:	bl	2240 <malloc@plt>
    6250:	cbz	x0, 6258 <lt__slist_box@@Base+0x20>
    6254:	stp	xzr, x19, [x0]
    6258:	ldr	x19, [sp, #16]
    625c:	ldp	x29, x30, [sp], #32
    6260:	ret
    6264:	nop

0000000000006268 <lt__slist_unbox@@Base>:
    6268:	stp	x29, x30, [sp, #-32]!
    626c:	mov	x29, sp
    6270:	str	x19, [sp, #16]
    6274:	mov	x19, #0x0                   	// #0
    6278:	cbz	x0, 6284 <lt__slist_unbox@@Base+0x1c>
    627c:	ldr	x19, [x0, #8]
    6280:	bl	2400 <free@plt>
    6284:	mov	x0, x19
    6288:	ldr	x19, [sp, #16]
    628c:	ldp	x29, x30, [sp], #32
    6290:	ret
    6294:	nop

0000000000006298 <lt_strlcat@@Base>:
    6298:	stp	x29, x30, [sp, #-48]!
    629c:	mov	x29, sp
    62a0:	stp	x19, x20, [sp, #16]
    62a4:	str	x21, [sp, #32]
    62a8:	cbz	x0, 632c <lt_strlcat@@Base+0x94>
    62ac:	mov	x19, x1
    62b0:	cbz	x1, 636c <lt_strlcat@@Base+0xd4>
    62b4:	mov	x20, x2
    62b8:	cbz	x2, 634c <lt_strlcat@@Base+0xb4>
    62bc:	mov	x21, x0
    62c0:	bl	2150 <strlen@plt>
    62c4:	ldrb	w1, [x19]
    62c8:	add	x3, x21, x0
    62cc:	cbz	w1, 62fc <lt_strlcat@@Base+0x64>
    62d0:	sub	x2, x20, #0x1
    62d4:	cmp	x0, x2
    62d8:	b.cc	62e8 <lt_strlcat@@Base+0x50>  // b.lo, b.ul, b.last
    62dc:	b	62fc <lt_strlcat@@Base+0x64>
    62e0:	cmp	x0, x2
    62e4:	b.eq	62f8 <lt_strlcat@@Base+0x60>  // b.none
    62e8:	strb	w1, [x21, x0]
    62ec:	add	x0, x0, #0x1
    62f0:	ldrb	w1, [x19, #1]!
    62f4:	cbnz	w1, 62e0 <lt_strlcat@@Base+0x48>
    62f8:	add	x3, x21, x0
    62fc:	strb	wzr, [x3]
    6300:	ldrb	w1, [x19]
    6304:	cbz	w1, 631c <lt_strlcat@@Base+0x84>
    6308:	sub	x19, x19, x0
    630c:	nop
    6310:	add	x0, x0, #0x1
    6314:	ldrb	w1, [x19, x0]
    6318:	cbnz	w1, 6310 <lt_strlcat@@Base+0x78>
    631c:	ldp	x19, x20, [sp, #16]
    6320:	ldr	x21, [sp, #32]
    6324:	ldp	x29, x30, [sp], #48
    6328:	ret
    632c:	adrp	x3, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    6330:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    6334:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    6338:	add	x3, x3, #0x30
    633c:	add	x1, x1, #0xfd8
    6340:	add	x0, x0, #0xff0
    6344:	mov	w2, #0x39                  	// #57
    6348:	bl	2500 <__assert_fail@plt>
    634c:	adrp	x3, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    6350:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    6354:	adrp	x0, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    6358:	add	x3, x3, #0x30
    635c:	add	x1, x1, #0xfd8
    6360:	add	x0, x0, #0x20
    6364:	mov	w2, #0x3b                  	// #59
    6368:	bl	2500 <__assert_fail@plt>
    636c:	adrp	x3, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    6370:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    6374:	adrp	x0, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    6378:	add	x3, x3, #0x30
    637c:	add	x1, x1, #0xfd8
    6380:	add	x0, x0, #0x0
    6384:	mov	w2, #0x3a                  	// #58
    6388:	bl	2500 <__assert_fail@plt>
    638c:	nop

0000000000006390 <lt_strlcpy@@Base>:
    6390:	stp	x29, x30, [sp, #-16]!
    6394:	mov	x29, sp
    6398:	cbz	x0, 6444 <lt_strlcpy@@Base+0xb4>
    639c:	cbz	x1, 6420 <lt_strlcpy@@Base+0x90>
    63a0:	cbz	x2, 6468 <lt_strlcpy@@Base+0xd8>
    63a4:	ldrb	w3, [x1]
    63a8:	mov	x5, x0
    63ac:	cbz	w3, 6414 <lt_strlcpy@@Base+0x84>
    63b0:	subs	x0, x2, #0x1
    63b4:	mov	x4, x1
    63b8:	mov	x2, #0x0                   	// #0
    63bc:	b.ne	63cc <lt_strlcpy@@Base+0x3c>  // b.any
    63c0:	b	63e8 <lt_strlcpy@@Base+0x58>
    63c4:	cmp	x2, x0
    63c8:	b.eq	640c <lt_strlcpy@@Base+0x7c>  // b.none
    63cc:	strb	w3, [x5, x2]
    63d0:	add	x2, x2, #0x1
    63d4:	add	x4, x1, x2
    63d8:	ldrb	w3, [x1, x2]
    63dc:	cbnz	w3, 63c4 <lt_strlcpy@@Base+0x34>
    63e0:	add	x5, x5, x2
    63e4:	mov	x0, x2
    63e8:	strb	wzr, [x5]
    63ec:	ldrb	w1, [x4]
    63f0:	cbz	w1, 6404 <lt_strlcpy@@Base+0x74>
    63f4:	sub	x4, x4, x0
    63f8:	add	x0, x0, #0x1
    63fc:	ldrb	w1, [x4, x0]
    6400:	cbnz	w1, 63f8 <lt_strlcpy@@Base+0x68>
    6404:	ldp	x29, x30, [sp], #16
    6408:	ret
    640c:	add	x5, x5, x0
    6410:	b	63e8 <lt_strlcpy@@Base+0x58>
    6414:	mov	x4, x1
    6418:	mov	x0, #0x0                   	// #0
    641c:	b	63e8 <lt_strlcpy@@Base+0x58>
    6420:	adrp	x3, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    6424:	add	x3, x3, #0x30
    6428:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    642c:	adrp	x0, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    6430:	add	x3, x3, #0x10
    6434:	add	x1, x1, #0xfd8
    6438:	add	x0, x0, #0x0
    643c:	mov	w2, #0x6a                  	// #106
    6440:	bl	2500 <__assert_fail@plt>
    6444:	adrp	x3, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    6448:	add	x3, x3, #0x30
    644c:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    6450:	adrp	x0, 6000 <lt__slist_cons@@Base+0x10>
    6454:	add	x3, x3, #0x10
    6458:	add	x1, x1, #0xfd8
    645c:	add	x0, x0, #0xff0
    6460:	mov	w2, #0x69                  	// #105
    6464:	bl	2500 <__assert_fail@plt>
    6468:	adrp	x3, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    646c:	add	x3, x3, #0x30
    6470:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    6474:	adrp	x0, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    6478:	add	x3, x3, #0x10
    647c:	add	x1, x1, #0xfd8
    6480:	add	x0, x0, #0x20
    6484:	mov	w2, #0x6b                  	// #107
    6488:	bl	2500 <__assert_fail@plt>
    648c:	nop
    6490:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x134f0>
    6494:	mov	w0, #0x0                   	// #0
    6498:	str	xzr, [x1, #664]
    649c:	ret
    64a0:	stp	x29, x30, [sp, #-32]!
    64a4:	mov	x0, x1
    64a8:	mov	w1, #0x1                   	// #1
    64ac:	mov	x29, sp
    64b0:	str	x19, [sp, #16]
    64b4:	cbz	x2, 64c8 <lt_strlcpy@@Base+0x138>
    64b8:	ldrb	w3, [x2]
    64bc:	mov	w2, #0x101                 	// #257
    64c0:	tst	x3, #0x4
    64c4:	csel	w1, w1, w2, eq  // eq = none
    64c8:	bl	21e0 <dlopen@plt>
    64cc:	mov	x19, x0
    64d0:	cbz	x0, 64e4 <lt_strlcpy@@Base+0x154>
    64d4:	mov	x0, x19
    64d8:	ldr	x19, [sp, #16]
    64dc:	ldp	x29, x30, [sp], #32
    64e0:	ret
    64e4:	bl	2250 <dlerror@plt>
    64e8:	bl	2410 <lt__set_last_error@plt>
    64ec:	mov	x0, x19
    64f0:	ldr	x19, [sp, #16]
    64f4:	ldp	x29, x30, [sp], #32
    64f8:	ret
    64fc:	nop
    6500:	stp	x29, x30, [sp, #-16]!
    6504:	mov	x0, x1
    6508:	mov	x29, sp
    650c:	bl	21d0 <dlclose@plt>
    6510:	cbnz	w0, 651c <lt_strlcpy@@Base+0x18c>
    6514:	ldp	x29, x30, [sp], #16
    6518:	ret
    651c:	bl	2250 <dlerror@plt>
    6520:	bl	2410 <lt__set_last_error@plt>
    6524:	mov	w0, #0x1                   	// #1
    6528:	ldp	x29, x30, [sp], #16
    652c:	ret
    6530:	stp	x29, x30, [sp, #-32]!
    6534:	mov	x0, x1
    6538:	mov	x1, x2
    653c:	mov	x29, sp
    6540:	str	x19, [sp, #16]
    6544:	bl	2260 <dlsym@plt>
    6548:	mov	x19, x0
    654c:	cbz	x0, 6560 <lt_strlcpy@@Base+0x1d0>
    6550:	mov	x0, x19
    6554:	ldr	x19, [sp, #16]
    6558:	ldp	x29, x30, [sp], #32
    655c:	ret
    6560:	bl	2250 <dlerror@plt>
    6564:	bl	2410 <lt__set_last_error@plt>
    6568:	mov	x0, x19
    656c:	ldr	x19, [sp, #16]
    6570:	ldp	x29, x30, [sp], #32
    6574:	ret

0000000000006578 <dlopen_LTX_get_vtable@@Base>:
    6578:	stp	x29, x30, [sp, #-32]!
    657c:	mov	x29, sp
    6580:	stp	x19, x20, [sp, #16]
    6584:	adrp	x20, 19000 <lt_dlinterface_free@@Base+0x134f0>
    6588:	mov	x19, x0
    658c:	ldr	x0, [x20, #664]
    6590:	cbz	x0, 65fc <dlopen_LTX_get_vtable@@Base+0x84>
    6594:	ldr	x1, [x0]
    6598:	cbz	x1, 65b4 <dlopen_LTX_get_vtable@@Base+0x3c>
    659c:	ldr	x1, [x0, #56]
    65a0:	cmp	x1, x19
    65a4:	b.ne	6618 <dlopen_LTX_get_vtable@@Base+0xa0>  // b.any
    65a8:	ldp	x19, x20, [sp, #16]
    65ac:	ldp	x29, x30, [sp], #32
    65b0:	ret
    65b4:	adrp	x5, 7000 <dlopen_LTX_get_vtable@@Base+0xa88>
    65b8:	adrp	x4, 6000 <lt__slist_cons@@Base+0x10>
    65bc:	add	x5, x5, #0x78
    65c0:	add	x4, x4, #0x4a0
    65c4:	adrp	x3, 6000 <lt__slist_cons@@Base+0x10>
    65c8:	adrp	x2, 6000 <lt__slist_cons@@Base+0x10>
    65cc:	add	x3, x3, #0x500
    65d0:	add	x2, x2, #0x530
    65d4:	adrp	x1, 6000 <lt__slist_cons@@Base+0x10>
    65d8:	add	x1, x1, #0x490
    65dc:	str	x5, [x0]
    65e0:	stp	x4, x3, [x0, #16]
    65e4:	str	x2, [x0, #32]
    65e8:	stp	x1, x19, [x0, #48]
    65ec:	str	wzr, [x0, #64]
    65f0:	ldp	x19, x20, [sp, #16]
    65f4:	ldp	x29, x30, [sp], #32
    65f8:	ret
    65fc:	mov	x0, #0x48                  	// #72
    6600:	bl	2420 <lt__zalloc@plt>
    6604:	str	x0, [x20, #664]
    6608:	cbnz	x0, 6594 <dlopen_LTX_get_vtable@@Base+0x1c>
    660c:	ldp	x19, x20, [sp, #16]
    6610:	ldp	x29, x30, [sp], #32
    6614:	ret
    6618:	mov	w0, #0x3                   	// #3
    661c:	bl	22a0 <lt__error_string@plt>
    6620:	bl	2410 <lt__set_last_error@plt>
    6624:	mov	x0, #0x0                   	// #0
    6628:	ldp	x19, x20, [sp, #16]
    662c:	ldp	x29, x30, [sp], #32
    6630:	ret

Disassembly of section .fini:

0000000000006634 <.fini>:
    6634:	stp	x29, x30, [sp, #-16]!
    6638:	mov	x29, sp
    663c:	ldp	x29, x30, [sp], #16
    6640:	ret
